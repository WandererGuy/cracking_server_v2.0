//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	sha1
// sha1_$_s_bitmaps has been demoted

.entry sha1(
	.param .u64 .ptr .global .align 4 sha1_param_0,
	.param .u64 .ptr .global .align 4 sha1_param_1,
	.param .u64 .ptr .global .align 4 sha1_param_2,
	.param .u64 .ptr .const .align 4 sha1_param_3,
	.param .u64 .ptr .const .align 1 sha1_param_4,
	.param .u64 .ptr .global .align 4 sha1_param_5,
	.param .u64 .ptr .global .align 4 sha1_param_6,
	.param .u64 .ptr .global .align 4 sha1_param_7,
	.param .u64 .ptr .global .align 4 sha1_param_8,
	.param .u64 .ptr .global .align 4 sha1_param_9,
	.param .u64 .ptr .global .align 4 sha1_param_10
)
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<53>;
	.reg .b32 	%r<1030>;
	.reg .b64 	%rd<83>;
	// demoted variable
	.shared .align 4 .b8 sha1_$_s_bitmaps[16384];

	ld.param.u64 	%rd2, [sha1_param_0];
	ld.param.u64 	%rd10, [sha1_param_1];
	ld.param.u64 	%rd3, [sha1_param_4];
	ld.param.u64 	%rd4, [sha1_param_5];
	mov.b32 	%r13, %envreg3;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r1029, %tid.x;
	add.s32 	%r15, %r1029, %r13;
	mad.lo.s32 	%r3, %r1, %r14, %r15;
	mul.wide.u32 	%rd11, %r3, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.u32 	%r4, [%rd12];
	setp.gt.u32 	%p1, %r1029, 4095;
	@%p1 bra 	$L__BB0_2;

$L__BB0_1:
	mul.wide.u32 	%rd13, %r1029, 4;
	add.s64 	%rd14, %rd4, %rd13;
	ld.global.u32 	%r16, [%rd14];
	mov.u64 	%rd15, sha1_$_s_bitmaps;
	add.s64 	%rd16, %rd15, %rd13;
	st.shared.u32 	[%rd16], %r16;
	add.s32 	%r1029, %r1029, %r1;
	setp.lt.u32 	%p2, %r1029, 4096;
	@%p2 bra 	$L__BB0_1;

$L__BB0_2:
	bar.sync 	0;
	shr.u32 	%r337, %r4, 6;
	mul.wide.u32 	%rd17, %r337, 4;
	add.s64 	%rd18, %rd2, %rd17;
	ld.global.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [%rd18];
	add.s16 	%rs9, %rs1, -48;
	cvt.u32.u16 	%r338, %rs9;
	shl.b32 	%r339, %r338, 24;
	add.s16 	%rs10, %rs2, -48;
	cvt.u32.u16 	%r340, %rs10;
	shl.b32 	%r341, %r340, 16;
	and.b32  	%r342, %r341, 16711680;
	or.b32  	%r343, %r339, %r342;
	add.s16 	%rs11, %rs3, -48;
	and.b16  	%rs12, %rs11, 255;
	mul.wide.u16 	%r344, %rs12, 256;
	or.b32  	%r345, %r343, %r344;
	add.s16 	%rs13, %rs4, -48;
	cvt.u32.u16 	%r346, %rs13;
	and.b32  	%r347, %r346, 255;
	or.b32  	%r348, %r345, %r347;
	ld.global.v4.u8 	{%rs14, %rs15, %rs16, %rs17}, [%rd18+4];
	add.s16 	%rs22, %rs14, -48;
	cvt.u32.u16 	%r349, %rs22;
	shl.b32 	%r350, %r349, 24;
	add.s16 	%rs23, %rs15, -48;
	cvt.u32.u16 	%r351, %rs23;
	shl.b32 	%r352, %r351, 16;
	and.b32  	%r353, %r352, 16711680;
	or.b32  	%r354, %r350, %r353;
	add.s16 	%rs24, %rs16, -48;
	and.b16  	%rs25, %rs24, 255;
	mul.wide.u16 	%r355, %rs25, 256;
	or.b32  	%r356, %r354, %r355;
	add.s16 	%rs26, %rs17, -48;
	cvt.u32.u16 	%r357, %rs26;
	and.b32  	%r358, %r357, 255;
	or.b32  	%r359, %r356, %r358;
	ld.global.v4.u8 	{%rs27, %rs28, %rs29, %rs30}, [%rd18+8];
	add.s16 	%rs35, %rs27, -48;
	cvt.u32.u16 	%r360, %rs35;
	shl.b32 	%r361, %r360, 24;
	add.s16 	%rs36, %rs28, -48;
	cvt.u32.u16 	%r362, %rs36;
	shl.b32 	%r363, %r362, 16;
	and.b32  	%r364, %r363, 16711680;
	or.b32  	%r365, %r361, %r364;
	add.s16 	%rs37, %rs29, -48;
	and.b16  	%rs38, %rs37, 255;
	mul.wide.u16 	%r366, %rs38, 256;
	or.b32  	%r367, %r365, %r366;
	add.s16 	%rs39, %rs30, -48;
	cvt.u32.u16 	%r368, %rs39;
	and.b32  	%r369, %r368, 255;
	or.b32  	%r370, %r367, %r369;
	.pragma "used_bytes_mask 7";
	ld.global.v4.u8 	{%rs40, %rs41, %rs42, %rs43}, [%rd18+12];
	add.s16 	%rs47, %rs40, -48;
	cvt.u32.u16 	%r371, %rs47;
	shl.b32 	%r372, %r371, 24;
	add.s16 	%rs48, %rs41, -48;
	cvt.u32.u16 	%r373, %rs48;
	shl.b32 	%r374, %r373, 16;
	and.b32  	%r375, %r374, 16711680;
	or.b32  	%r376, %r372, %r375;
	add.s16 	%rs49, %rs42, -48;
	and.b16  	%rs50, %rs49, 255;
	mul.wide.u16 	%r377, %rs50, 256;
	or.b32  	%r378, %r376, %r377;
	ld.const.u8 	%r379, [%rd3];
	or.b32  	%r380, %r378, %r379;
	ld.const.u8 	%r381, [%rd3+1];
	shl.b32 	%r382, %r381, 24;
	ld.const.u8 	%r383, [%rd3+2];
	shl.b32 	%r384, %r383, 16;
	or.b32  	%r385, %r384, %r382;
	ld.const.u8 	%rs51, [%rd3+3];
	mul.wide.u16 	%r386, %rs51, 256;
	or.b32  	%r387, %r385, %r386;
	ld.const.u8 	%r388, [%rd3+4];
	or.b32  	%r389, %r387, %r388;
	ld.const.u8 	%r390, [%rd3+5];
	shl.b32 	%r391, %r390, 24;
	ld.const.u8 	%r392, [%rd3+6];
	shl.b32 	%r393, %r392, 16;
	or.b32  	%r394, %r393, %r391;
	ld.const.u8 	%rs52, [%rd3+7];
	mul.wide.u16 	%r395, %rs52, 256;
	or.b32  	%r396, %r394, %r395;
	ld.const.u8 	%r397, [%rd3+8];
	or.b32  	%r398, %r396, %r397;
	mov.u32 	%r22, 1732584193;
	shf.l.wrap.b32 	%r399, %r22, %r22, 5;
	mov.u32 	%r18, -271733879;
	mov.u32 	%r24, -1732584194;
	mov.u32 	%r20, 271733878;
	// begin inline asm
	lop3.b32 %r17, %r18, %r24, %r20, 202;
	// end inline asm
	add.s32 	%r400, %r399, %r17;
	add.s32 	%r401, %r400, %r348;
	add.s32 	%r26, %r401, 508910473;
	shf.l.wrap.b32 	%r402, %r26, %r26, 5;
	shf.l.wrap.b32 	%r28, %r18, %r18, 30;
	// begin inline asm
	lop3.b32 %r21, %r22, %r28, %r24, 202;
	// end inline asm
	add.s32 	%r403, %r21, %r359;
	add.s32 	%r404, %r403, %r402;
	add.s32 	%r30, %r404, 1790234127;
	shf.l.wrap.b32 	%r405, %r30, %r30, 5;
	shf.l.wrap.b32 	%r32, %r22, %r22, 30;
	// begin inline asm
	lop3.b32 %r25, %r26, %r32, %r28, 202;
	// end inline asm
	add.s32 	%r406, %r25, %r370;
	add.s32 	%r407, %r406, %r405;
	add.s32 	%r34, %r407, -214083945;
	shf.l.wrap.b32 	%r36, %r26, %r26, 30;
	shf.l.wrap.b32 	%r408, %r34, %r34, 5;
	// begin inline asm
	lop3.b32 %r29, %r30, %r36, %r32, 202;
	// end inline asm
	add.s32 	%r409, %r28, %r29;
	add.s32 	%r410, %r409, %r380;
	add.s32 	%r411, %r410, %r408;
	add.s32 	%r38, %r411, 1518500249;
	shf.l.wrap.b32 	%r40, %r30, %r30, 30;
	shf.l.wrap.b32 	%r412, %r38, %r38, 5;
	// begin inline asm
	lop3.b32 %r33, %r34, %r40, %r36, 202;
	// end inline asm
	add.s32 	%r413, %r32, %r33;
	add.s32 	%r414, %r413, %r389;
	add.s32 	%r415, %r414, %r412;
	add.s32 	%r42, %r415, 1518500249;
	shf.l.wrap.b32 	%r44, %r34, %r34, 30;
	shf.l.wrap.b32 	%r416, %r42, %r42, 5;
	// begin inline asm
	lop3.b32 %r37, %r38, %r44, %r40, 202;
	// end inline asm
	add.s32 	%r417, %r36, %r37;
	add.s32 	%r418, %r417, %r398;
	add.s32 	%r419, %r418, %r416;
	add.s32 	%r46, %r419, 1518500249;
	shf.l.wrap.b32 	%r48, %r38, %r38, 30;
	shf.l.wrap.b32 	%r420, %r46, %r46, 5;
	// begin inline asm
	lop3.b32 %r41, %r42, %r48, %r44, 202;
	// end inline asm
	add.s32 	%r421, %r40, %r41;
	add.s32 	%r422, %r421, 1518500249;
	xor.b32  	%r423, %r422, -2147483648;
	add.s32 	%r50, %r423, %r420;
	shf.l.wrap.b32 	%r52, %r42, %r42, 30;
	shf.l.wrap.b32 	%r424, %r50, %r50, 5;
	// begin inline asm
	lop3.b32 %r45, %r46, %r52, %r48, 202;
	// end inline asm
	add.s32 	%r425, %r45, %r44;
	add.s32 	%r426, %r425, %r424;
	add.s32 	%r54, %r426, 1518500249;
	shf.l.wrap.b32 	%r56, %r46, %r46, 30;
	shf.l.wrap.b32 	%r427, %r54, %r54, 5;
	// begin inline asm
	lop3.b32 %r49, %r50, %r56, %r52, 202;
	// end inline asm
	add.s32 	%r428, %r49, %r48;
	add.s32 	%r429, %r428, %r427;
	add.s32 	%r58, %r429, 1518500249;
	shf.l.wrap.b32 	%r60, %r50, %r50, 30;
	shf.l.wrap.b32 	%r430, %r58, %r58, 5;
	// begin inline asm
	lop3.b32 %r53, %r54, %r60, %r56, 202;
	// end inline asm
	add.s32 	%r431, %r53, %r52;
	add.s32 	%r432, %r431, %r430;
	add.s32 	%r62, %r432, 1518500249;
	shf.l.wrap.b32 	%r64, %r54, %r54, 30;
	shf.l.wrap.b32 	%r433, %r62, %r62, 5;
	// begin inline asm
	lop3.b32 %r57, %r58, %r64, %r60, 202;
	// end inline asm
	add.s32 	%r434, %r57, %r56;
	add.s32 	%r435, %r434, %r433;
	add.s32 	%r66, %r435, 1518500249;
	shf.l.wrap.b32 	%r68, %r58, %r58, 30;
	shf.l.wrap.b32 	%r436, %r66, %r66, 5;
	// begin inline asm
	lop3.b32 %r61, %r62, %r68, %r64, 202;
	// end inline asm
	add.s32 	%r437, %r61, %r60;
	add.s32 	%r438, %r437, %r436;
	add.s32 	%r70, %r438, 1518500249;
	shf.l.wrap.b32 	%r72, %r62, %r62, 30;
	shf.l.wrap.b32 	%r439, %r70, %r70, 5;
	// begin inline asm
	lop3.b32 %r65, %r66, %r72, %r68, 202;
	// end inline asm
	add.s32 	%r440, %r65, %r64;
	add.s32 	%r441, %r440, %r439;
	add.s32 	%r74, %r441, 1518500249;
	shf.l.wrap.b32 	%r76, %r66, %r66, 30;
	shf.l.wrap.b32 	%r442, %r74, %r74, 5;
	// begin inline asm
	lop3.b32 %r69, %r70, %r76, %r72, 202;
	// end inline asm
	add.s32 	%r443, %r69, %r68;
	add.s32 	%r444, %r443, %r442;
	add.s32 	%r78, %r444, 1518500249;
	shf.l.wrap.b32 	%r80, %r70, %r70, 30;
	shf.l.wrap.b32 	%r445, %r78, %r78, 5;
	// begin inline asm
	lop3.b32 %r73, %r74, %r80, %r76, 202;
	// end inline asm
	add.s32 	%r446, %r73, %r72;
	add.s32 	%r447, %r446, %r445;
	add.s32 	%r82, %r447, 1518500249;
	shf.l.wrap.b32 	%r84, %r74, %r74, 30;
	shf.l.wrap.b32 	%r448, %r82, %r82, 5;
	// begin inline asm
	lop3.b32 %r77, %r78, %r84, %r80, 202;
	// end inline asm
	add.s32 	%r449, %r77, %r76;
	add.s32 	%r450, %r449, %r448;
	add.s32 	%r86, %r450, 1518500441;
	shf.l.wrap.b32 	%r88, %r78, %r78, 30;
	shf.l.wrap.b32 	%r451, %r86, %r86, 5;
	// begin inline asm
	lop3.b32 %r81, %r82, %r88, %r84, 202;
	// end inline asm
	xor.b32  	%r452, %r370, %r348;
	shf.l.wrap.b32 	%r453, %r452, %r452, 1;
	add.s32 	%r454, %r81, %r453;
	add.s32 	%r455, %r454, %r80;
	add.s32 	%r456, %r455, %r451;
	add.s32 	%r90, %r456, 1518500249;
	shf.l.wrap.b32 	%r92, %r82, %r82, 30;
	shf.l.wrap.b32 	%r457, %r90, %r90, 5;
	// begin inline asm
	lop3.b32 %r85, %r86, %r92, %r88, 202;
	// end inline asm
	xor.b32  	%r458, %r380, %r359;
	shf.l.wrap.b32 	%r459, %r458, %r458, 1;
	add.s32 	%r460, %r85, %r459;
	add.s32 	%r461, %r460, %r84;
	add.s32 	%r462, %r461, %r457;
	add.s32 	%r94, %r462, 1518500249;
	shf.l.wrap.b32 	%r96, %r86, %r86, 30;
	shf.l.wrap.b32 	%r463, %r94, %r94, 5;
	// begin inline asm
	lop3.b32 %r89, %r90, %r96, %r92, 202;
	// end inline asm
	xor.b32  	%r464, %r389, %r370;
	xor.b32  	%r465, %r464, 192;
	shf.l.wrap.b32 	%r466, %r465, %r465, 1;
	add.s32 	%r467, %r89, %r466;
	add.s32 	%r468, %r467, %r88;
	add.s32 	%r469, %r468, %r463;
	add.s32 	%r98, %r469, 1518500249;
	shf.l.wrap.b32 	%r100, %r90, %r90, 30;
	shf.l.wrap.b32 	%r470, %r98, %r98, 5;
	// begin inline asm
	lop3.b32 %r93, %r94, %r100, %r96, 202;
	// end inline asm
	xor.b32  	%r471, %r453, %r398;
	xor.b32  	%r472, %r471, %r380;
	shf.l.wrap.b32 	%r473, %r472, %r472, 1;
	add.s32 	%r474, %r93, %r473;
	add.s32 	%r475, %r474, %r92;
	add.s32 	%r476, %r475, %r470;
	add.s32 	%r102, %r476, 1518500249;
	shf.l.wrap.b32 	%r104, %r94, %r94, 30;
	shf.l.wrap.b32 	%r477, %r102, %r102, 5;
	// begin inline asm
	lop3.b32 %r97, %r98, %r104, %r100, 150;
	// end inline asm
	xor.b32  	%r478, %r459, %r389;
	xor.b32  	%r479, %r478, -2147483648;
	shf.l.wrap.b32 	%r480, %r479, %r479, 1;
	add.s32 	%r481, %r97, %r480;
	add.s32 	%r482, %r481, %r96;
	add.s32 	%r483, %r482, %r477;
	add.s32 	%r106, %r483, 1859775393;
	shf.l.wrap.b32 	%r108, %r98, %r98, 30;
	shf.l.wrap.b32 	%r484, %r106, %r106, 5;
	// begin inline asm
	lop3.b32 %r101, %r102, %r108, %r104, 150;
	// end inline asm
	xor.b32  	%r485, %r466, %r398;
	shf.l.wrap.b32 	%r486, %r485, %r485, 1;
	add.s32 	%r487, %r101, %r486;
	add.s32 	%r488, %r487, %r100;
	add.s32 	%r489, %r488, %r484;
	add.s32 	%r110, %r489, 1859775393;
	shf.l.wrap.b32 	%r112, %r102, %r102, 30;
	shf.l.wrap.b32 	%r490, %r110, %r110, 5;
	// begin inline asm
	lop3.b32 %r105, %r106, %r112, %r108, 150;
	// end inline asm
	xor.b32  	%r491, %r473, -2147483648;
	shf.l.wrap.b32 	%r492, %r491, %r491, 1;
	add.s32 	%r493, %r105, %r492;
	add.s32 	%r494, %r493, %r104;
	add.s32 	%r495, %r494, %r490;
	add.s32 	%r114, %r495, 1859775393;
	shf.l.wrap.b32 	%r116, %r106, %r106, 30;
	shf.l.wrap.b32 	%r496, %r114, %r114, 5;
	// begin inline asm
	lop3.b32 %r109, %r110, %r116, %r112, 150;
	// end inline asm
	xor.b32  	%r497, %r480, 192;
	shf.l.wrap.b32 	%r498, %r497, %r497, 1;
	add.s32 	%r499, %r109, %r498;
	add.s32 	%r500, %r499, %r108;
	add.s32 	%r501, %r500, %r496;
	add.s32 	%r118, %r501, 1859775393;
	shf.l.wrap.b32 	%r120, %r110, %r110, 30;
	shf.l.wrap.b32 	%r502, %r118, %r118, 5;
	// begin inline asm
	lop3.b32 %r113, %r114, %r120, %r116, 150;
	// end inline asm
	xor.b32  	%r503, %r486, %r453;
	shf.l.wrap.b32 	%r504, %r503, %r503, 1;
	add.s32 	%r505, %r113, %r504;
	add.s32 	%r506, %r505, %r112;
	add.s32 	%r507, %r506, %r502;
	add.s32 	%r122, %r507, 1859775393;
	shf.l.wrap.b32 	%r124, %r114, %r114, 30;
	shf.l.wrap.b32 	%r508, %r122, %r122, 5;
	// begin inline asm
	lop3.b32 %r117, %r118, %r124, %r120, 150;
	// end inline asm
	xor.b32  	%r509, %r492, %r459;
	shf.l.wrap.b32 	%r510, %r509, %r509, 1;
	add.s32 	%r511, %r117, %r510;
	add.s32 	%r512, %r511, %r116;
	add.s32 	%r513, %r512, %r508;
	add.s32 	%r126, %r513, 1859775393;
	shf.l.wrap.b32 	%r128, %r118, %r118, 30;
	shf.l.wrap.b32 	%r514, %r126, %r126, 5;
	// begin inline asm
	lop3.b32 %r121, %r122, %r128, %r124, 150;
	// end inline asm
	xor.b32  	%r515, %r498, %r466;
	shf.l.wrap.b32 	%r516, %r515, %r515, 1;
	add.s32 	%r517, %r121, %r516;
	add.s32 	%r518, %r517, %r120;
	add.s32 	%r519, %r518, %r514;
	add.s32 	%r130, %r519, 1859775393;
	shf.l.wrap.b32 	%r132, %r122, %r122, 30;
	shf.l.wrap.b32 	%r520, %r130, %r130, 5;
	// begin inline asm
	lop3.b32 %r125, %r126, %r132, %r128, 150;
	// end inline asm
	xor.b32  	%r521, %r504, %r473;
	shf.l.wrap.b32 	%r522, %r521, %r521, 1;
	add.s32 	%r523, %r125, %r522;
	add.s32 	%r524, %r523, %r124;
	add.s32 	%r525, %r524, %r520;
	add.s32 	%r134, %r525, 1859775393;
	shf.l.wrap.b32 	%r136, %r126, %r126, 30;
	shf.l.wrap.b32 	%r526, %r134, %r134, 5;
	// begin inline asm
	lop3.b32 %r129, %r130, %r136, %r132, 150;
	// end inline asm
	xor.b32  	%r527, %r510, %r480;
	shf.l.wrap.b32 	%r528, %r527, %r527, 1;
	add.s32 	%r529, %r129, %r528;
	add.s32 	%r530, %r529, %r128;
	add.s32 	%r531, %r530, %r526;
	add.s32 	%r138, %r531, 1859775393;
	shf.l.wrap.b32 	%r140, %r130, %r130, 30;
	shf.l.wrap.b32 	%r532, %r138, %r138, 5;
	// begin inline asm
	lop3.b32 %r133, %r134, %r140, %r136, 150;
	// end inline asm
	xor.b32  	%r533, %r516, %r486;
	xor.b32  	%r534, %r533, 192;
	shf.l.wrap.b32 	%r535, %r534, %r534, 1;
	add.s32 	%r536, %r133, %r535;
	add.s32 	%r537, %r536, %r132;
	add.s32 	%r538, %r537, %r532;
	add.s32 	%r142, %r538, 1859775393;
	shf.l.wrap.b32 	%r144, %r134, %r134, 30;
	shf.l.wrap.b32 	%r539, %r142, %r142, 5;
	// begin inline asm
	lop3.b32 %r137, %r138, %r144, %r140, 150;
	// end inline asm
	xor.b32  	%r540, %r492, %r453;
	xor.b32  	%r541, %r540, %r522;
	shf.l.wrap.b32 	%r542, %r541, %r541, 1;
	add.s32 	%r543, %r137, %r542;
	add.s32 	%r544, %r543, %r136;
	add.s32 	%r545, %r544, %r539;
	add.s32 	%r146, %r545, 1859775393;
	shf.l.wrap.b32 	%r148, %r138, %r138, 30;
	shf.l.wrap.b32 	%r546, %r146, %r146, 5;
	// begin inline asm
	lop3.b32 %r141, %r142, %r148, %r144, 150;
	// end inline asm
	xor.b32  	%r547, %r498, %r459;
	xor.b32  	%r548, %r547, %r528;
	xor.b32  	%r549, %r548, 192;
	shf.l.wrap.b32 	%r550, %r549, %r549, 1;
	add.s32 	%r551, %r141, %r550;
	add.s32 	%r552, %r551, %r140;
	add.s32 	%r553, %r552, %r546;
	add.s32 	%r150, %r553, 1859775393;
	shf.l.wrap.b32 	%r152, %r142, %r142, 30;
	shf.l.wrap.b32 	%r554, %r150, %r150, 5;
	// begin inline asm
	lop3.b32 %r145, %r146, %r152, %r148, 150;
	// end inline asm
	xor.b32  	%r555, %r466, %r453;
	xor.b32  	%r556, %r555, %r504;
	xor.b32  	%r557, %r556, %r535;
	shf.l.wrap.b32 	%r558, %r557, %r557, 1;
	add.s32 	%r559, %r145, %r558;
	add.s32 	%r560, %r559, %r144;
	add.s32 	%r561, %r560, %r554;
	add.s32 	%r154, %r561, 1859775393;
	shf.l.wrap.b32 	%r156, %r146, %r146, 30;
	shf.l.wrap.b32 	%r562, %r154, %r154, 5;
	// begin inline asm
	lop3.b32 %r149, %r150, %r156, %r152, 150;
	// end inline asm
	xor.b32  	%r563, %r473, %r459;
	xor.b32  	%r564, %r563, %r510;
	xor.b32  	%r565, %r564, %r542;
	shf.l.wrap.b32 	%r566, %r565, %r565, 1;
	add.s32 	%r567, %r149, %r566;
	add.s32 	%r568, %r567, %r148;
	add.s32 	%r569, %r568, %r562;
	add.s32 	%r158, %r569, 1859775393;
	shf.l.wrap.b32 	%r160, %r150, %r150, 30;
	shf.l.wrap.b32 	%r570, %r158, %r158, 5;
	// begin inline asm
	lop3.b32 %r153, %r154, %r160, %r156, 150;
	// end inline asm
	xor.b32  	%r571, %r480, %r466;
	xor.b32  	%r572, %r571, %r516;
	xor.b32  	%r573, %r572, %r550;
	shf.l.wrap.b32 	%r574, %r573, %r573, 1;
	add.s32 	%r575, %r153, %r574;
	add.s32 	%r576, %r575, %r152;
	add.s32 	%r577, %r576, %r570;
	add.s32 	%r162, %r577, 1859775393;
	shf.l.wrap.b32 	%r164, %r154, %r154, 30;
	shf.l.wrap.b32 	%r578, %r162, %r162, 5;
	// begin inline asm
	lop3.b32 %r157, %r158, %r164, %r160, 150;
	// end inline asm
	xor.b32  	%r579, %r486, %r473;
	xor.b32  	%r580, %r579, %r522;
	xor.b32  	%r581, %r580, %r558;
	shf.l.wrap.b32 	%r582, %r581, %r581, 1;
	add.s32 	%r583, %r157, %r582;
	add.s32 	%r584, %r583, %r156;
	add.s32 	%r585, %r584, %r578;
	add.s32 	%r166, %r585, 1859775393;
	shf.l.wrap.b32 	%r168, %r158, %r158, 30;
	shf.l.wrap.b32 	%r586, %r166, %r166, 5;
	// begin inline asm
	lop3.b32 %r161, %r162, %r168, %r164, 150;
	// end inline asm
	xor.b32  	%r587, %r492, %r480;
	xor.b32  	%r588, %r587, %r528;
	xor.b32  	%r589, %r588, %r566;
	shf.l.wrap.b32 	%r590, %r589, %r589, 1;
	add.s32 	%r591, %r161, %r590;
	add.s32 	%r592, %r591, %r160;
	add.s32 	%r593, %r592, %r586;
	add.s32 	%r170, %r593, 1859775393;
	shf.l.wrap.b32 	%r172, %r162, %r162, 30;
	shf.l.wrap.b32 	%r594, %r170, %r170, 5;
	// begin inline asm
	lop3.b32 %r165, %r166, %r172, %r168, 150;
	// end inline asm
	xor.b32  	%r595, %r498, %r486;
	xor.b32  	%r596, %r595, %r535;
	xor.b32  	%r597, %r596, %r574;
	shf.l.wrap.b32 	%r598, %r597, %r597, 1;
	add.s32 	%r599, %r165, %r598;
	add.s32 	%r600, %r599, %r164;
	add.s32 	%r601, %r600, %r594;
	add.s32 	%r174, %r601, 1859775393;
	shf.l.wrap.b32 	%r176, %r166, %r166, 30;
	shf.l.wrap.b32 	%r602, %r174, %r174, 5;
	// begin inline asm
	lop3.b32 %r169, %r170, %r176, %r172, 150;
	// end inline asm
	xor.b32  	%r603, %r504, %r492;
	xor.b32  	%r604, %r603, %r542;
	xor.b32  	%r605, %r604, %r582;
	shf.l.wrap.b32 	%r606, %r605, %r605, 1;
	add.s32 	%r607, %r169, %r606;
	add.s32 	%r608, %r607, %r168;
	add.s32 	%r609, %r608, %r602;
	add.s32 	%r178, %r609, 1859775393;
	shf.l.wrap.b32 	%r180, %r170, %r170, 30;
	shf.l.wrap.b32 	%r610, %r178, %r178, 5;
	// begin inline asm
	lop3.b32 %r173, %r174, %r180, %r176, 150;
	// end inline asm
	xor.b32  	%r611, %r510, %r498;
	xor.b32  	%r612, %r611, %r550;
	xor.b32  	%r613, %r612, %r590;
	shf.l.wrap.b32 	%r614, %r613, %r613, 1;
	add.s32 	%r615, %r173, %r614;
	add.s32 	%r616, %r615, %r172;
	add.s32 	%r617, %r616, %r610;
	add.s32 	%r182, %r617, 1859775393;
	shf.l.wrap.b32 	%r184, %r174, %r174, 30;
	shf.l.wrap.b32 	%r618, %r182, %r182, 5;
	// begin inline asm
	lop3.b32 %r177, %r178, %r184, %r180, 232;
	// end inline asm
	xor.b32  	%r619, %r516, %r504;
	xor.b32  	%r620, %r619, %r558;
	xor.b32  	%r621, %r620, %r598;
	shf.l.wrap.b32 	%r622, %r621, %r621, 1;
	add.s32 	%r623, %r177, %r622;
	add.s32 	%r624, %r623, %r176;
	add.s32 	%r625, %r624, %r618;
	add.s32 	%r186, %r625, -1894007588;
	shf.l.wrap.b32 	%r188, %r178, %r178, 30;
	shf.l.wrap.b32 	%r626, %r186, %r186, 5;
	// begin inline asm
	lop3.b32 %r181, %r182, %r188, %r184, 232;
	// end inline asm
	xor.b32  	%r627, %r522, %r510;
	xor.b32  	%r628, %r627, %r566;
	xor.b32  	%r629, %r628, %r606;
	shf.l.wrap.b32 	%r630, %r629, %r629, 1;
	add.s32 	%r631, %r181, %r630;
	add.s32 	%r632, %r631, %r180;
	add.s32 	%r633, %r632, %r626;
	add.s32 	%r190, %r633, -1894007588;
	shf.l.wrap.b32 	%r192, %r182, %r182, 30;
	shf.l.wrap.b32 	%r634, %r190, %r190, 5;
	// begin inline asm
	lop3.b32 %r185, %r186, %r192, %r188, 232;
	// end inline asm
	xor.b32  	%r635, %r528, %r516;
	xor.b32  	%r636, %r635, %r574;
	xor.b32  	%r637, %r636, %r614;
	shf.l.wrap.b32 	%r638, %r637, %r637, 1;
	add.s32 	%r639, %r185, %r638;
	add.s32 	%r640, %r639, %r184;
	add.s32 	%r641, %r640, %r634;
	add.s32 	%r194, %r641, -1894007588;
	shf.l.wrap.b32 	%r196, %r186, %r186, 30;
	shf.l.wrap.b32 	%r642, %r194, %r194, 5;
	// begin inline asm
	lop3.b32 %r189, %r190, %r196, %r192, 232;
	// end inline asm
	xor.b32  	%r643, %r535, %r522;
	xor.b32  	%r644, %r643, %r582;
	xor.b32  	%r645, %r644, %r622;
	shf.l.wrap.b32 	%r646, %r645, %r645, 1;
	add.s32 	%r647, %r189, %r646;
	add.s32 	%r648, %r647, %r188;
	add.s32 	%r649, %r648, %r642;
	add.s32 	%r198, %r649, -1894007588;
	shf.l.wrap.b32 	%r200, %r190, %r190, 30;
	shf.l.wrap.b32 	%r650, %r198, %r198, 5;
	// begin inline asm
	lop3.b32 %r193, %r194, %r200, %r196, 232;
	// end inline asm
	xor.b32  	%r651, %r542, %r528;
	xor.b32  	%r652, %r651, %r590;
	xor.b32  	%r653, %r652, %r630;
	shf.l.wrap.b32 	%r654, %r653, %r653, 1;
	add.s32 	%r655, %r193, %r654;
	add.s32 	%r656, %r655, %r192;
	add.s32 	%r657, %r656, %r650;
	add.s32 	%r202, %r657, -1894007588;
	shf.l.wrap.b32 	%r204, %r194, %r194, 30;
	shf.l.wrap.b32 	%r658, %r202, %r202, 5;
	// begin inline asm
	lop3.b32 %r197, %r198, %r204, %r200, 232;
	// end inline asm
	xor.b32  	%r659, %r550, %r535;
	xor.b32  	%r660, %r659, %r598;
	xor.b32  	%r661, %r660, %r638;
	shf.l.wrap.b32 	%r662, %r661, %r661, 1;
	add.s32 	%r663, %r197, %r662;
	add.s32 	%r664, %r663, %r196;
	add.s32 	%r665, %r664, %r658;
	add.s32 	%r206, %r665, -1894007588;
	shf.l.wrap.b32 	%r208, %r198, %r198, 30;
	shf.l.wrap.b32 	%r666, %r206, %r206, 5;
	// begin inline asm
	lop3.b32 %r201, %r202, %r208, %r204, 232;
	// end inline asm
	xor.b32  	%r667, %r558, %r542;
	xor.b32  	%r668, %r667, %r606;
	xor.b32  	%r669, %r668, %r646;
	shf.l.wrap.b32 	%r670, %r669, %r669, 1;
	add.s32 	%r671, %r201, %r670;
	add.s32 	%r672, %r671, %r200;
	add.s32 	%r673, %r672, %r666;
	add.s32 	%r210, %r673, -1894007588;
	shf.l.wrap.b32 	%r212, %r202, %r202, 30;
	shf.l.wrap.b32 	%r674, %r210, %r210, 5;
	// begin inline asm
	lop3.b32 %r205, %r206, %r212, %r208, 232;
	// end inline asm
	xor.b32  	%r675, %r566, %r550;
	xor.b32  	%r676, %r675, %r614;
	xor.b32  	%r677, %r676, %r654;
	shf.l.wrap.b32 	%r678, %r677, %r677, 1;
	add.s32 	%r679, %r205, %r678;
	add.s32 	%r680, %r679, %r204;
	add.s32 	%r681, %r680, %r674;
	add.s32 	%r214, %r681, -1894007588;
	shf.l.wrap.b32 	%r216, %r206, %r206, 30;
	shf.l.wrap.b32 	%r682, %r214, %r214, 5;
	// begin inline asm
	lop3.b32 %r209, %r210, %r216, %r212, 232;
	// end inline asm
	xor.b32  	%r683, %r574, %r558;
	xor.b32  	%r684, %r683, %r622;
	xor.b32  	%r685, %r684, %r662;
	shf.l.wrap.b32 	%r686, %r685, %r685, 1;
	add.s32 	%r687, %r209, %r686;
	add.s32 	%r688, %r687, %r208;
	add.s32 	%r689, %r688, %r682;
	add.s32 	%r218, %r689, -1894007588;
	shf.l.wrap.b32 	%r220, %r210, %r210, 30;
	shf.l.wrap.b32 	%r690, %r218, %r218, 5;
	// begin inline asm
	lop3.b32 %r213, %r214, %r220, %r216, 232;
	// end inline asm
	xor.b32  	%r691, %r582, %r566;
	xor.b32  	%r692, %r691, %r630;
	xor.b32  	%r693, %r692, %r670;
	shf.l.wrap.b32 	%r694, %r693, %r693, 1;
	add.s32 	%r695, %r213, %r694;
	add.s32 	%r696, %r695, %r212;
	add.s32 	%r697, %r696, %r690;
	add.s32 	%r222, %r697, -1894007588;
	shf.l.wrap.b32 	%r224, %r214, %r214, 30;
	shf.l.wrap.b32 	%r698, %r222, %r222, 5;
	// begin inline asm
	lop3.b32 %r217, %r218, %r224, %r220, 232;
	// end inline asm
	xor.b32  	%r699, %r590, %r574;
	xor.b32  	%r700, %r699, %r638;
	xor.b32  	%r701, %r700, %r678;
	shf.l.wrap.b32 	%r702, %r701, %r701, 1;
	add.s32 	%r703, %r217, %r702;
	add.s32 	%r704, %r703, %r216;
	add.s32 	%r705, %r704, %r698;
	add.s32 	%r226, %r705, -1894007588;
	shf.l.wrap.b32 	%r228, %r218, %r218, 30;
	shf.l.wrap.b32 	%r706, %r226, %r226, 5;
	// begin inline asm
	lop3.b32 %r221, %r222, %r228, %r224, 232;
	// end inline asm
	xor.b32  	%r707, %r598, %r582;
	xor.b32  	%r708, %r707, %r646;
	xor.b32  	%r709, %r708, %r686;
	shf.l.wrap.b32 	%r710, %r709, %r709, 1;
	add.s32 	%r711, %r221, %r710;
	add.s32 	%r712, %r711, %r220;
	add.s32 	%r713, %r712, %r706;
	add.s32 	%r230, %r713, -1894007588;
	shf.l.wrap.b32 	%r232, %r222, %r222, 30;
	shf.l.wrap.b32 	%r714, %r230, %r230, 5;
	// begin inline asm
	lop3.b32 %r225, %r226, %r232, %r228, 232;
	// end inline asm
	xor.b32  	%r715, %r606, %r590;
	xor.b32  	%r716, %r715, %r654;
	xor.b32  	%r717, %r716, %r694;
	shf.l.wrap.b32 	%r718, %r717, %r717, 1;
	add.s32 	%r719, %r225, %r718;
	add.s32 	%r720, %r719, %r224;
	add.s32 	%r721, %r720, %r714;
	add.s32 	%r234, %r721, -1894007588;
	shf.l.wrap.b32 	%r236, %r226, %r226, 30;
	shf.l.wrap.b32 	%r722, %r234, %r234, 5;
	// begin inline asm
	lop3.b32 %r229, %r230, %r236, %r232, 232;
	// end inline asm
	xor.b32  	%r723, %r614, %r598;
	xor.b32  	%r724, %r723, %r662;
	xor.b32  	%r725, %r724, %r702;
	shf.l.wrap.b32 	%r726, %r725, %r725, 1;
	add.s32 	%r727, %r229, %r726;
	add.s32 	%r728, %r727, %r228;
	add.s32 	%r729, %r728, %r722;
	add.s32 	%r238, %r729, -1894007588;
	shf.l.wrap.b32 	%r240, %r230, %r230, 30;
	shf.l.wrap.b32 	%r730, %r238, %r238, 5;
	// begin inline asm
	lop3.b32 %r233, %r234, %r240, %r236, 232;
	// end inline asm
	xor.b32  	%r731, %r622, %r606;
	xor.b32  	%r732, %r731, %r670;
	xor.b32  	%r733, %r732, %r710;
	shf.l.wrap.b32 	%r734, %r733, %r733, 1;
	add.s32 	%r735, %r233, %r734;
	add.s32 	%r736, %r735, %r232;
	add.s32 	%r737, %r736, %r730;
	add.s32 	%r242, %r737, -1894007588;
	shf.l.wrap.b32 	%r244, %r234, %r234, 30;
	shf.l.wrap.b32 	%r738, %r242, %r242, 5;
	// begin inline asm
	lop3.b32 %r237, %r238, %r244, %r240, 232;
	// end inline asm
	xor.b32  	%r739, %r630, %r614;
	xor.b32  	%r740, %r739, %r678;
	xor.b32  	%r741, %r740, %r718;
	shf.l.wrap.b32 	%r742, %r741, %r741, 1;
	add.s32 	%r743, %r237, %r742;
	add.s32 	%r744, %r743, %r236;
	add.s32 	%r745, %r744, %r738;
	add.s32 	%r246, %r745, -1894007588;
	shf.l.wrap.b32 	%r248, %r238, %r238, 30;
	shf.l.wrap.b32 	%r746, %r246, %r246, 5;
	// begin inline asm
	lop3.b32 %r241, %r242, %r248, %r244, 232;
	// end inline asm
	xor.b32  	%r747, %r638, %r622;
	xor.b32  	%r748, %r747, %r686;
	xor.b32  	%r749, %r748, %r726;
	shf.l.wrap.b32 	%r750, %r749, %r749, 1;
	add.s32 	%r751, %r241, %r750;
	add.s32 	%r752, %r751, %r240;
	add.s32 	%r753, %r752, %r746;
	add.s32 	%r250, %r753, -1894007588;
	shf.l.wrap.b32 	%r252, %r242, %r242, 30;
	shf.l.wrap.b32 	%r754, %r250, %r250, 5;
	// begin inline asm
	lop3.b32 %r245, %r246, %r252, %r248, 232;
	// end inline asm
	xor.b32  	%r755, %r646, %r630;
	xor.b32  	%r756, %r755, %r694;
	xor.b32  	%r757, %r756, %r734;
	shf.l.wrap.b32 	%r758, %r757, %r757, 1;
	add.s32 	%r759, %r245, %r758;
	add.s32 	%r760, %r759, %r244;
	add.s32 	%r761, %r760, %r754;
	add.s32 	%r254, %r761, -1894007588;
	shf.l.wrap.b32 	%r256, %r246, %r246, 30;
	shf.l.wrap.b32 	%r762, %r254, %r254, 5;
	// begin inline asm
	lop3.b32 %r249, %r250, %r256, %r252, 232;
	// end inline asm
	xor.b32  	%r763, %r654, %r638;
	xor.b32  	%r764, %r763, %r702;
	xor.b32  	%r765, %r764, %r742;
	shf.l.wrap.b32 	%r766, %r765, %r765, 1;
	add.s32 	%r767, %r249, %r766;
	add.s32 	%r768, %r767, %r248;
	add.s32 	%r769, %r768, %r762;
	add.s32 	%r258, %r769, -1894007588;
	shf.l.wrap.b32 	%r260, %r250, %r250, 30;
	shf.l.wrap.b32 	%r770, %r258, %r258, 5;
	// begin inline asm
	lop3.b32 %r253, %r254, %r260, %r256, 232;
	// end inline asm
	xor.b32  	%r771, %r662, %r646;
	xor.b32  	%r772, %r771, %r710;
	xor.b32  	%r773, %r772, %r750;
	shf.l.wrap.b32 	%r774, %r773, %r773, 1;
	add.s32 	%r775, %r253, %r774;
	add.s32 	%r776, %r775, %r252;
	add.s32 	%r777, %r776, %r770;
	add.s32 	%r262, %r777, -1894007588;
	shf.l.wrap.b32 	%r264, %r254, %r254, 30;
	shf.l.wrap.b32 	%r778, %r262, %r262, 5;
	// begin inline asm
	lop3.b32 %r257, %r258, %r264, %r260, 150;
	// end inline asm
	xor.b32  	%r779, %r670, %r654;
	xor.b32  	%r780, %r779, %r718;
	xor.b32  	%r781, %r780, %r758;
	shf.l.wrap.b32 	%r782, %r781, %r781, 1;
	add.s32 	%r783, %r257, %r782;
	add.s32 	%r784, %r783, %r256;
	add.s32 	%r785, %r784, %r778;
	add.s32 	%r266, %r785, -899497514;
	shf.l.wrap.b32 	%r268, %r258, %r258, 30;
	shf.l.wrap.b32 	%r786, %r266, %r266, 5;
	// begin inline asm
	lop3.b32 %r261, %r262, %r268, %r264, 150;
	// end inline asm
	xor.b32  	%r787, %r678, %r662;
	xor.b32  	%r788, %r787, %r726;
	xor.b32  	%r789, %r788, %r766;
	shf.l.wrap.b32 	%r790, %r789, %r789, 1;
	add.s32 	%r791, %r261, %r790;
	add.s32 	%r792, %r791, %r260;
	add.s32 	%r793, %r792, %r786;
	add.s32 	%r270, %r793, -899497514;
	shf.l.wrap.b32 	%r272, %r262, %r262, 30;
	shf.l.wrap.b32 	%r794, %r270, %r270, 5;
	// begin inline asm
	lop3.b32 %r265, %r266, %r272, %r268, 150;
	// end inline asm
	xor.b32  	%r795, %r686, %r670;
	xor.b32  	%r796, %r795, %r734;
	xor.b32  	%r797, %r796, %r774;
	shf.l.wrap.b32 	%r798, %r797, %r797, 1;
	add.s32 	%r799, %r265, %r798;
	add.s32 	%r800, %r799, %r264;
	add.s32 	%r801, %r800, %r794;
	add.s32 	%r274, %r801, -899497514;
	shf.l.wrap.b32 	%r276, %r266, %r266, 30;
	shf.l.wrap.b32 	%r802, %r274, %r274, 5;
	// begin inline asm
	lop3.b32 %r269, %r270, %r276, %r272, 150;
	// end inline asm
	xor.b32  	%r803, %r694, %r678;
	xor.b32  	%r804, %r803, %r742;
	xor.b32  	%r805, %r804, %r782;
	shf.l.wrap.b32 	%r806, %r805, %r805, 1;
	add.s32 	%r807, %r269, %r806;
	add.s32 	%r808, %r807, %r268;
	add.s32 	%r809, %r808, %r802;
	add.s32 	%r278, %r809, -899497514;
	shf.l.wrap.b32 	%r280, %r270, %r270, 30;
	shf.l.wrap.b32 	%r810, %r278, %r278, 5;
	// begin inline asm
	lop3.b32 %r273, %r274, %r280, %r276, 150;
	// end inline asm
	xor.b32  	%r811, %r702, %r686;
	xor.b32  	%r812, %r811, %r750;
	xor.b32  	%r813, %r812, %r790;
	shf.l.wrap.b32 	%r814, %r813, %r813, 1;
	add.s32 	%r815, %r273, %r814;
	add.s32 	%r816, %r815, %r272;
	add.s32 	%r817, %r816, %r810;
	add.s32 	%r282, %r817, -899497514;
	shf.l.wrap.b32 	%r284, %r274, %r274, 30;
	shf.l.wrap.b32 	%r818, %r282, %r282, 5;
	// begin inline asm
	lop3.b32 %r277, %r278, %r284, %r280, 150;
	// end inline asm
	xor.b32  	%r819, %r710, %r694;
	xor.b32  	%r820, %r819, %r758;
	xor.b32  	%r821, %r820, %r798;
	shf.l.wrap.b32 	%r822, %r821, %r821, 1;
	add.s32 	%r823, %r277, %r822;
	add.s32 	%r824, %r823, %r276;
	add.s32 	%r825, %r824, %r818;
	add.s32 	%r286, %r825, -899497514;
	shf.l.wrap.b32 	%r288, %r278, %r278, 30;
	shf.l.wrap.b32 	%r826, %r286, %r286, 5;
	// begin inline asm
	lop3.b32 %r281, %r282, %r288, %r284, 150;
	// end inline asm
	xor.b32  	%r827, %r718, %r702;
	xor.b32  	%r828, %r827, %r766;
	xor.b32  	%r829, %r828, %r806;
	shf.l.wrap.b32 	%r830, %r829, %r829, 1;
	add.s32 	%r831, %r281, %r830;
	add.s32 	%r832, %r831, %r280;
	add.s32 	%r833, %r832, %r826;
	add.s32 	%r290, %r833, -899497514;
	shf.l.wrap.b32 	%r292, %r282, %r282, 30;
	shf.l.wrap.b32 	%r834, %r290, %r290, 5;
	// begin inline asm
	lop3.b32 %r285, %r286, %r292, %r288, 150;
	// end inline asm
	xor.b32  	%r835, %r726, %r710;
	xor.b32  	%r836, %r835, %r774;
	xor.b32  	%r837, %r836, %r814;
	shf.l.wrap.b32 	%r838, %r837, %r837, 1;
	add.s32 	%r839, %r285, %r838;
	add.s32 	%r840, %r839, %r284;
	add.s32 	%r841, %r840, %r834;
	add.s32 	%r294, %r841, -899497514;
	shf.l.wrap.b32 	%r296, %r286, %r286, 30;
	shf.l.wrap.b32 	%r842, %r294, %r294, 5;
	// begin inline asm
	lop3.b32 %r289, %r290, %r296, %r292, 150;
	// end inline asm
	xor.b32  	%r843, %r734, %r718;
	xor.b32  	%r844, %r843, %r782;
	xor.b32  	%r845, %r844, %r822;
	shf.l.wrap.b32 	%r846, %r845, %r845, 1;
	add.s32 	%r847, %r289, %r846;
	add.s32 	%r848, %r847, %r288;
	add.s32 	%r849, %r848, %r842;
	add.s32 	%r298, %r849, -899497514;
	shf.l.wrap.b32 	%r300, %r290, %r290, 30;
	shf.l.wrap.b32 	%r850, %r298, %r298, 5;
	// begin inline asm
	lop3.b32 %r293, %r294, %r300, %r296, 150;
	// end inline asm
	xor.b32  	%r851, %r742, %r726;
	xor.b32  	%r852, %r851, %r790;
	xor.b32  	%r853, %r852, %r830;
	shf.l.wrap.b32 	%r854, %r853, %r853, 1;
	add.s32 	%r855, %r293, %r854;
	add.s32 	%r856, %r855, %r292;
	add.s32 	%r857, %r856, %r850;
	add.s32 	%r302, %r857, -899497514;
	shf.l.wrap.b32 	%r304, %r294, %r294, 30;
	shf.l.wrap.b32 	%r858, %r302, %r302, 5;
	// begin inline asm
	lop3.b32 %r297, %r298, %r304, %r300, 150;
	// end inline asm
	xor.b32  	%r859, %r750, %r734;
	xor.b32  	%r860, %r859, %r798;
	xor.b32  	%r861, %r860, %r838;
	shf.l.wrap.b32 	%r862, %r861, %r861, 1;
	add.s32 	%r863, %r297, %r862;
	add.s32 	%r864, %r863, %r296;
	add.s32 	%r865, %r864, %r858;
	add.s32 	%r306, %r865, -899497514;
	shf.l.wrap.b32 	%r308, %r298, %r298, 30;
	shf.l.wrap.b32 	%r866, %r306, %r306, 5;
	// begin inline asm
	lop3.b32 %r301, %r302, %r308, %r304, 150;
	// end inline asm
	xor.b32  	%r867, %r758, %r742;
	xor.b32  	%r868, %r867, %r806;
	xor.b32  	%r869, %r868, %r846;
	shf.l.wrap.b32 	%r870, %r869, %r869, 1;
	add.s32 	%r871, %r301, %r870;
	add.s32 	%r872, %r871, %r300;
	add.s32 	%r873, %r872, %r866;
	add.s32 	%r310, %r873, -899497514;
	shf.l.wrap.b32 	%r312, %r302, %r302, 30;
	shf.l.wrap.b32 	%r874, %r310, %r310, 5;
	// begin inline asm
	lop3.b32 %r305, %r306, %r312, %r308, 150;
	// end inline asm
	xor.b32  	%r875, %r766, %r750;
	xor.b32  	%r876, %r875, %r814;
	xor.b32  	%r877, %r876, %r854;
	shf.l.wrap.b32 	%r878, %r877, %r877, 1;
	add.s32 	%r879, %r305, %r878;
	add.s32 	%r880, %r879, %r304;
	add.s32 	%r881, %r880, %r874;
	add.s32 	%r314, %r881, -899497514;
	shf.l.wrap.b32 	%r316, %r306, %r306, 30;
	shf.l.wrap.b32 	%r882, %r314, %r314, 5;
	// begin inline asm
	lop3.b32 %r309, %r310, %r316, %r312, 150;
	// end inline asm
	xor.b32  	%r883, %r774, %r758;
	xor.b32  	%r884, %r883, %r822;
	xor.b32  	%r885, %r884, %r862;
	shf.l.wrap.b32 	%r886, %r885, %r885, 1;
	add.s32 	%r887, %r309, %r886;
	add.s32 	%r888, %r887, %r308;
	add.s32 	%r889, %r888, %r882;
	add.s32 	%r318, %r889, -899497514;
	shf.l.wrap.b32 	%r320, %r310, %r310, 30;
	shf.l.wrap.b32 	%r890, %r318, %r318, 5;
	// begin inline asm
	lop3.b32 %r313, %r314, %r320, %r316, 150;
	// end inline asm
	xor.b32  	%r891, %r782, %r766;
	xor.b32  	%r892, %r891, %r830;
	xor.b32  	%r893, %r892, %r870;
	shf.l.wrap.b32 	%r894, %r893, %r893, 1;
	add.s32 	%r895, %r313, %r894;
	add.s32 	%r896, %r895, %r312;
	add.s32 	%r897, %r896, %r890;
	add.s32 	%r322, %r897, -899497514;
	shf.l.wrap.b32 	%r324, %r314, %r314, 30;
	shf.l.wrap.b32 	%r898, %r322, %r322, 5;
	// begin inline asm
	lop3.b32 %r317, %r318, %r324, %r320, 150;
	// end inline asm
	xor.b32  	%r899, %r790, %r774;
	xor.b32  	%r900, %r899, %r838;
	xor.b32  	%r901, %r900, %r878;
	shf.l.wrap.b32 	%r902, %r901, %r901, 1;
	add.s32 	%r903, %r317, %r902;
	add.s32 	%r904, %r903, %r316;
	add.s32 	%r905, %r904, %r898;
	add.s32 	%r326, %r905, -899497514;
	shf.l.wrap.b32 	%r328, %r318, %r318, 30;
	shf.l.wrap.b32 	%r906, %r326, %r326, 5;
	// begin inline asm
	lop3.b32 %r321, %r322, %r328, %r324, 150;
	// end inline asm
	xor.b32  	%r907, %r798, %r782;
	xor.b32  	%r908, %r907, %r846;
	xor.b32  	%r909, %r908, %r886;
	shf.l.wrap.b32 	%r910, %r909, %r909, 1;
	add.s32 	%r911, %r321, %r910;
	add.s32 	%r912, %r911, %r320;
	add.s32 	%r913, %r912, %r906;
	add.s32 	%r330, %r913, -899497514;
	shf.l.wrap.b32 	%r332, %r322, %r322, 30;
	shf.l.wrap.b32 	%r914, %r330, %r330, 5;
	// begin inline asm
	lop3.b32 %r325, %r326, %r332, %r328, 150;
	// end inline asm
	xor.b32  	%r915, %r806, %r790;
	xor.b32  	%r916, %r915, %r854;
	xor.b32  	%r917, %r916, %r894;
	shf.l.wrap.b32 	%r918, %r917, %r917, 1;
	add.s32 	%r919, %r325, %r918;
	add.s32 	%r920, %r919, %r324;
	add.s32 	%r921, %r920, %r914;
	add.s32 	%r334, %r921, -899497514;
	shf.l.wrap.b32 	%r336, %r326, %r326, 30;
	shf.l.wrap.b32 	%r922, %r334, %r334, 5;
	// begin inline asm
	lop3.b32 %r329, %r330, %r336, %r332, 150;
	// end inline asm
	xor.b32  	%r923, %r814, %r798;
	xor.b32  	%r924, %r923, %r862;
	xor.b32  	%r925, %r924, %r902;
	shf.l.wrap.b32 	%r926, %r925, %r925, 1;
	add.s32 	%r927, %r329, %r926;
	add.s32 	%r928, %r927, %r328;
	add.s32 	%r929, %r928, %r922;
	add.s32 	%r930, %r929, -899497514;
	shf.l.wrap.b32 	%r335, %r330, %r330, 30;
	shf.l.wrap.b32 	%r931, %r930, %r930, 5;
	// begin inline asm
	lop3.b32 %r333, %r334, %r335, %r336, 150;
	// end inline asm
	xor.b32  	%r932, %r822, %r806;
	xor.b32  	%r933, %r932, %r870;
	xor.b32  	%r934, %r933, %r910;
	shf.l.wrap.b32 	%r935, %r934, %r934, 1;
	shf.l.wrap.b32 	%r936, %r334, %r334, 30;
	add.s32 	%r937, %r333, %r935;
	add.s32 	%r938, %r937, %r332;
	add.s32 	%r939, %r938, %r931;
	add.s32 	%r940, %r939, 833086679;
	add.s32 	%r941, %r929, -1171231393;
	add.s32 	%r942, %r936, -1732584194;
	add.s32 	%r943, %r335, 271733878;
	add.s32 	%r944, %r336, -1009589776;
	shf.l.wrap.b32 	%r945, %r940, %r940, 16;
	shl.b32 	%r946, %r945, 8;
	and.b32  	%r947, %r946, -16711936;
	shr.u32 	%r948, %r945, 8;
	and.b32  	%r949, %r948, 16711935;
	or.b32  	%r7, %r947, %r949;
	shf.l.wrap.b32 	%r950, %r941, %r941, 16;
	shl.b32 	%r951, %r950, 8;
	and.b32  	%r952, %r951, -16711936;
	shr.u32 	%r953, %r950, 8;
	and.b32  	%r954, %r953, 16711935;
	or.b32  	%r8, %r952, %r954;
	shf.l.wrap.b32 	%r955, %r942, %r942, 16;
	shl.b32 	%r956, %r955, 8;
	and.b32  	%r957, %r956, -16711936;
	shr.u32 	%r958, %r955, 8;
	and.b32  	%r959, %r958, 16711935;
	or.b32  	%r9, %r957, %r959;
	shf.l.wrap.b32 	%r960, %r943, %r943, 16;
	shl.b32 	%r961, %r960, 8;
	and.b32  	%r962, %r961, -16711936;
	shr.u32 	%r963, %r960, 8;
	and.b32  	%r964, %r963, 16711935;
	or.b32  	%r10, %r962, %r964;
	shf.l.wrap.b32 	%r11, %r944, %r944, 16;
	and.b32  	%r965, %r10, 32736;
	shr.u32 	%r966, %r965, 5;
	mul.wide.u32 	%rd19, %r966, 4;
	mov.u64 	%rd20, sha1_$_s_bitmaps;
	add.s64 	%rd21, %rd20, %rd19;
	and.b32  	%r967, %r10, 31;
	ld.shared.u32 	%r968, [%rd21];
	shr.u32 	%r969, %r968, %r967;
	and.b32  	%r970, %r9, 32736;
	shr.u32 	%r971, %r970, 5;
	or.b32  	%r972, %r971, 1024;
	mul.wide.u32 	%rd22, %r972, 4;
	add.s64 	%rd23, %rd20, %rd22;
	and.b32  	%r973, %r9, 31;
	ld.shared.u32 	%r974, [%rd23];
	shr.u32 	%r975, %r974, %r973;
	and.b32  	%r976, %r8, 32736;
	shr.u32 	%r977, %r976, 5;
	or.b32  	%r978, %r977, 2048;
	mul.wide.u32 	%rd24, %r978, 4;
	add.s64 	%rd25, %rd20, %rd24;
	and.b32  	%r979, %r8, 31;
	ld.shared.u32 	%r980, [%rd25];
	shr.u32 	%r981, %r980, %r979;
	and.b32  	%r982, %r7, 32736;
	shr.u32 	%r983, %r982, 5;
	or.b32  	%r984, %r983, 3072;
	mul.wide.u32 	%rd26, %r984, 4;
	add.s64 	%rd27, %rd20, %rd26;
	and.b32  	%r985, %r7, 31;
	ld.shared.u32 	%r986, [%rd27];
	shr.u32 	%r987, %r986, %r985;
	and.b32  	%r988, %r969, 1;
	setp.eq.b32 	%p3, %r988, 1;
	and.b32  	%r989, %r975, 1;
	setp.eq.b32 	%p4, %r989, 1;
	and.pred  	%p5, %p3, %p4;
	and.b32  	%r990, %r981, 1;
	setp.eq.b32 	%p6, %r990, 1;
	and.pred  	%p7, %p5, %p6;
	and.b32  	%r991, %r987, 1;
	setp.eq.b32 	%p8, %r991, 1;
	and.pred  	%p9, %p7, %p8;
	mov.pred 	%p10, 0;
	xor.pred  	%p11, %p9, %p10;
	not.pred 	%p12, %p11;
	@%p12 bra 	$L__BB0_7;

	ld.param.u64 	%rd79, [sha1_param_7];
	ld.param.u64 	%rd78, [sha1_param_6];
	shr.u32 	%r992, %r11, 8;
	and.b32  	%r993, %r992, 16711935;
	shl.b32 	%r994, %r11, 8;
	and.b32  	%r995, %r994, -16711936;
	or.b32  	%r996, %r995, %r993;
	cvt.u64.u32 	%rd28, %r10;
	cvt.u64.u32 	%rd29, %r9;
	bfi.b64 	%rd30, %rd28, %rd29, 32, 32;
	cvt.u64.u32 	%rd31, %r8;
	cvt.u64.u32 	%rd32, %r7;
	bfi.b64 	%rd33, %rd31, %rd32, 32, 32;
	mul.wide.u32 	%rd34, %r996, -858993459;
	shr.u64 	%rd35, %rd34, 35;
	cvt.u32.u64 	%r997, %rd35;
	mul.lo.s32 	%r998, %r997, 10;
	sub.s32 	%r999, %r996, %r998;
	cvt.u64.u32 	%rd36, %r999;
	mul.hi.u64 	%rd37, %rd30, -3689348814741910323;
	shr.u64 	%rd38, %rd37, 3;
	mul.lo.s64 	%rd39, %rd38, 10;
	sub.s64 	%rd40, %rd30, %rd39;
	add.s64 	%rd41, %rd40, %rd36;
	mul.lo.s64 	%rd42, %rd41, 6;
	mul.hi.u64 	%rd43, %rd33, -3689348814741910323;
	shr.u64 	%rd44, %rd43, 3;
	mul.lo.s64 	%rd45, %rd44, 10;
	sub.s64 	%rd46, %rd33, %rd45;
	add.s64 	%rd47, %rd46, %rd42;
	cvt.u32.u64 	%r1000, %rd47;
	mul.wide.u32 	%rd48, %r1000, -858993459;
	shr.u64 	%rd49, %rd48, 35;
	cvt.u32.u64 	%r1001, %rd49;
	mul.lo.s32 	%r1002, %r1001, 10;
	sub.s32 	%r1003, %r1000, %r1002;
	mul.wide.u32 	%rd50, %r1003, 4;
	add.s64 	%rd51, %rd78, %rd50;
	ld.global.u32 	%rd52, [%rd51];
	add.s64 	%rd53, %rd33, %rd52;
	mul.wide.u32 	%rd54, %r996, -1431655765;
	shr.u64 	%rd55, %rd54, 33;
	cvt.u32.u64 	%r1004, %rd55;
	mul.lo.s32 	%r1005, %r1004, 3;
	sub.s32 	%r1006, %r996, %r1005;
	cvt.u64.u32 	%rd56, %r1006;
	mul.hi.u64 	%rd57, %rd30, -6148914691236517205;
	shr.u64 	%rd58, %rd57, 1;
	mul.lo.s64 	%rd59, %rd58, 3;
	sub.s64 	%rd60, %rd30, %rd59;
	add.s64 	%rd61, %rd60, %rd56;
	mul.hi.u64 	%rd62, %rd53, -6148914691236517205;
	shr.u64 	%rd63, %rd62, 1;
	mul.lo.s64 	%rd64, %rd63, 3;
	sub.s64 	%rd65, %rd53, %rd64;
	add.s64 	%rd66, %rd61, %rd65;
	cvt.u32.u64 	%r1007, %rd66;
	mul.wide.u32 	%rd67, %r1007, -1431655765;
	shr.u64 	%rd68, %rd67, 33;
	cvt.u32.u64 	%r1008, %rd68;
	mul.lo.s32 	%r1009, %r1008, 3;
	sub.s32 	%r12, %r1007, %r1009;
	mul.wide.u32 	%rd69, %r12, 4;
	add.s64 	%rd1, %rd79, %rd69;
	ld.global.u32 	%r1010, [%rd1];
	setp.ne.s32 	%p13, %r1010, %r7;
	@%p13 bra 	$L__BB0_7;

	ld.global.u32 	%r1011, [%rd1+12];
	setp.ne.s32 	%p14, %r1011, %r8;
	@%p14 bra 	$L__BB0_7;

	ld.param.u64 	%rd80, [sha1_param_10];
	mov.u32 	%r1012, 1;
	shl.b32 	%r1013, %r1012, %r12;
	atom.global.or.b32 	%r1014, [%rd80], %r1013;
	and.b32  	%r1015, %r1014, %r1013;
	setp.ne.s32 	%p15, %r1015, 0;
	@%p15 bra 	$L__BB0_7;

	mov.b32 	%r1028, %envreg3;
	mov.u32 	%r1027, %tid.x;
	add.s32 	%r1026, %r1027, %r1028;
	mov.u32 	%r1025, %ctaid.x;
	mov.u32 	%r1024, %ntid.x;
	mad.lo.s32 	%r1023, %r1024, %r1025, %r1026;
	ld.param.u64 	%rd82, [sha1_param_8];
	ld.param.u64 	%rd81, [sha1_param_9];
	atom.global.add.u32 	%r1016, [%rd81], 1;
	mul.lo.s32 	%r1017, %r1016, 3;
	add.s32 	%r1018, %r1017, 1;
	mul.wide.u32 	%rd70, %r1018, 4;
	add.s64 	%rd71, %rd81, %rd70;
	st.volatile.global.u32 	[%rd71], %r1023;
	add.s32 	%r1019, %r1017, 2;
	mul.wide.u32 	%rd72, %r1019, 4;
	add.s64 	%rd73, %rd81, %rd72;
	mov.u32 	%r1020, 0;
	st.volatile.global.u32 	[%rd73], %r1020;
	add.s32 	%r1021, %r1017, 3;
	mul.wide.u32 	%rd74, %r1021, 4;
	add.s64 	%rd75, %rd81, %rd74;
	st.volatile.global.u32 	[%rd75], %r12;
	shl.b32 	%r1022, %r1016, 1;
	mul.wide.u32 	%rd76, %r1022, 4;
	add.s64 	%rd77, %rd82, %rd76;
	st.global.u32 	[%rd77], %r9;
	st.global.u32 	[%rd77+4], %r10;

$L__BB0_7:
	ret;

}

  