//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	pbkdf2_init
.const .align 4 .b8 h[32] = {103, 230, 9, 106, 133, 174, 103, 187, 114, 243, 110, 60, 58, 245, 79, 165, 127, 82, 14, 81, 140, 104, 5, 155, 171, 217, 131, 31, 25, 205, 224, 91};
.const .align 4 .b8 k[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 1 .b8 aes_keysched_base_$_Rcon[10] = {1, 2, 4, 8, 16, 32, 64, 128, 27, 54};

.entry pbkdf2_init(
	.param .u64 .ptr .global .align 4 pbkdf2_init_param_0,
	.param .u64 .ptr .global .align 4 pbkdf2_init_param_1,
	.param .u64 .ptr .global .align 4 pbkdf2_init_param_2
)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<12>;
	.reg .b32 	%r<5639>;
	.reg .b64 	%rd<50>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd6, [pbkdf2_init_param_0];
	ld.param.u64 	%rd5, [pbkdf2_init_param_1];
	ld.param.u64 	%rd7, [pbkdf2_init_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r694, %ctaid.x;
	mov.u32 	%r695, %ntid.x;
	mov.u32 	%r696, %tid.x;
	mov.b32 	%r697, %envreg3;
	add.s32 	%r698, %r696, %r697;
	mad.lo.s32 	%r699, %r695, %r694, %r698;
	mul.wide.s32 	%rd9, %r699, 16;
	shl.b64 	%rd10, %rd9, 2;
	and.b64  	%rd11, %rd10, 17179869120;
	add.s64 	%rd12, %rd6, %rd11;
	ld.global.u32 	%r700, [%rd12];
	xor.b32  	%r701, %r700, 909522486;
	ld.global.u32 	%r702, [%rd12+4];
	xor.b32  	%r703, %r702, 909522486;
	ld.global.u32 	%r704, [%rd12+8];
	xor.b32  	%r705, %r704, 909522486;
	ld.global.u32 	%r706, [%rd12+12];
	xor.b32  	%r707, %r706, 909522486;
	ld.global.u32 	%r708, [%rd12+16];
	xor.b32  	%r709, %r708, 909522486;
	ld.global.u32 	%r710, [%rd12+20];
	xor.b32  	%r711, %r710, 909522486;
	ld.global.u32 	%r712, [%rd12+24];
	xor.b32  	%r713, %r712, 909522486;
	ld.global.u32 	%r714, [%rd12+28];
	xor.b32  	%r715, %r714, 909522486;
	ld.global.u32 	%r716, [%rd12+32];
	xor.b32  	%r717, %r716, 909522486;
	ld.global.u32 	%r718, [%rd12+36];
	xor.b32  	%r719, %r718, 909522486;
	ld.global.u32 	%r720, [%rd12+40];
	xor.b32  	%r721, %r720, 909522486;
	ld.global.u32 	%r722, [%rd12+44];
	xor.b32  	%r723, %r722, 909522486;
	ld.global.u32 	%r724, [%rd12+48];
	xor.b32  	%r725, %r724, 909522486;
	ld.global.u32 	%r726, [%rd12+52];
	xor.b32  	%r727, %r726, 909522486;
	ld.global.u32 	%r728, [%rd12+56];
	xor.b32  	%r729, %r728, 909522486;
	ld.global.u32 	%r730, [%rd12+60];
	xor.b32  	%r731, %r730, 909522486;
	mov.u32 	%r67, 1732584193;
	shf.l.wrap.b32 	%r732, %r67, %r67, 5;
	mov.u32 	%r63, -271733879;
	mov.u32 	%r69, -1732584194;
	mov.u32 	%r65, 271733878;
	// begin inline asm
	lop3.b32 %r62, %r63, %r69, %r65, 202;
	// end inline asm
	add.s32 	%r733, %r732, %r62;
	add.s32 	%r734, %r733, 1518500249;
	add.s32 	%r735, %r701, %r734;
	add.s32 	%r71, %r735, -1009589776;
	shf.l.wrap.b32 	%r736, %r71, %r71, 5;
	shf.l.wrap.b32 	%r385, %r63, %r63, 30;
	// begin inline asm
	lop3.b32 %r66, %r67, %r385, %r69, 202;
	// end inline asm
	add.s32 	%r737, %r66, 1790234127;
	add.s32 	%r738, %r737, %r703;
	add.s32 	%r75, %r738, %r736;
	shf.l.wrap.b32 	%r739, %r75, %r75, 5;
	shf.l.wrap.b32 	%r389, %r67, %r67, 30;
	// begin inline asm
	lop3.b32 %r70, %r71, %r389, %r385, 202;
	// end inline asm
	add.s32 	%r740, %r70, %r705;
	add.s32 	%r741, %r740, %r739;
	add.s32 	%r79, %r741, -214083945;
	shf.l.wrap.b32 	%r81, %r71, %r71, 30;
	shf.l.wrap.b32 	%r742, %r79, %r79, 5;
	// begin inline asm
	lop3.b32 %r74, %r75, %r81, %r389, 202;
	// end inline asm
	add.s32 	%r743, %r385, 1518500249;
	add.s32 	%r744, %r743, %r74;
	add.s32 	%r745, %r744, %r707;
	add.s32 	%r83, %r745, %r742;
	shf.l.wrap.b32 	%r85, %r75, %r75, 30;
	shf.l.wrap.b32 	%r746, %r83, %r83, 5;
	// begin inline asm
	lop3.b32 %r78, %r79, %r85, %r81, 202;
	// end inline asm
	add.s32 	%r747, %r389, 1518500249;
	add.s32 	%r748, %r747, %r78;
	add.s32 	%r749, %r748, %r709;
	add.s32 	%r87, %r749, %r746;
	shf.l.wrap.b32 	%r89, %r79, %r79, 30;
	shf.l.wrap.b32 	%r750, %r87, %r87, 5;
	// begin inline asm
	lop3.b32 %r82, %r83, %r89, %r85, 202;
	// end inline asm
	add.s32 	%r751, %r81, %r82;
	add.s32 	%r752, %r751, %r711;
	add.s32 	%r753, %r752, %r750;
	add.s32 	%r91, %r753, 1518500249;
	shf.l.wrap.b32 	%r93, %r83, %r83, 30;
	shf.l.wrap.b32 	%r754, %r91, %r91, 5;
	// begin inline asm
	lop3.b32 %r86, %r87, %r93, %r89, 202;
	// end inline asm
	add.s32 	%r755, %r85, %r86;
	add.s32 	%r756, %r755, %r713;
	add.s32 	%r757, %r756, %r754;
	add.s32 	%r95, %r757, 1518500249;
	shf.l.wrap.b32 	%r97, %r87, %r87, 30;
	shf.l.wrap.b32 	%r758, %r95, %r95, 5;
	// begin inline asm
	lop3.b32 %r90, %r91, %r97, %r93, 202;
	// end inline asm
	add.s32 	%r759, %r90, %r89;
	add.s32 	%r760, %r759, %r715;
	add.s32 	%r761, %r760, %r758;
	add.s32 	%r99, %r761, 1518500249;
	shf.l.wrap.b32 	%r101, %r91, %r91, 30;
	shf.l.wrap.b32 	%r762, %r99, %r99, 5;
	// begin inline asm
	lop3.b32 %r94, %r95, %r101, %r97, 202;
	// end inline asm
	add.s32 	%r763, %r94, %r717;
	add.s32 	%r764, %r763, %r93;
	add.s32 	%r765, %r764, %r762;
	add.s32 	%r103, %r765, 1518500249;
	shf.l.wrap.b32 	%r105, %r95, %r95, 30;
	shf.l.wrap.b32 	%r766, %r103, %r103, 5;
	// begin inline asm
	lop3.b32 %r98, %r99, %r105, %r101, 202;
	// end inline asm
	add.s32 	%r767, %r98, %r719;
	add.s32 	%r768, %r767, %r97;
	add.s32 	%r769, %r768, %r766;
	add.s32 	%r107, %r769, 1518500249;
	shf.l.wrap.b32 	%r109, %r99, %r99, 30;
	shf.l.wrap.b32 	%r770, %r107, %r107, 5;
	// begin inline asm
	lop3.b32 %r102, %r103, %r109, %r105, 202;
	// end inline asm
	add.s32 	%r771, %r102, %r721;
	add.s32 	%r772, %r771, %r101;
	add.s32 	%r773, %r772, %r770;
	add.s32 	%r111, %r773, 1518500249;
	shf.l.wrap.b32 	%r113, %r103, %r103, 30;
	shf.l.wrap.b32 	%r774, %r111, %r111, 5;
	// begin inline asm
	lop3.b32 %r106, %r107, %r113, %r109, 202;
	// end inline asm
	add.s32 	%r775, %r106, %r723;
	add.s32 	%r776, %r775, %r105;
	add.s32 	%r777, %r776, %r774;
	add.s32 	%r115, %r777, 1518500249;
	shf.l.wrap.b32 	%r117, %r107, %r107, 30;
	shf.l.wrap.b32 	%r778, %r115, %r115, 5;
	// begin inline asm
	lop3.b32 %r110, %r111, %r117, %r113, 202;
	// end inline asm
	add.s32 	%r779, %r110, %r725;
	add.s32 	%r780, %r779, %r109;
	add.s32 	%r781, %r780, %r778;
	add.s32 	%r119, %r781, 1518500249;
	shf.l.wrap.b32 	%r121, %r111, %r111, 30;
	shf.l.wrap.b32 	%r782, %r119, %r119, 5;
	// begin inline asm
	lop3.b32 %r114, %r115, %r121, %r117, 202;
	// end inline asm
	add.s32 	%r783, %r114, %r727;
	add.s32 	%r784, %r783, %r113;
	add.s32 	%r785, %r784, %r782;
	add.s32 	%r123, %r785, 1518500249;
	shf.l.wrap.b32 	%r125, %r115, %r115, 30;
	shf.l.wrap.b32 	%r786, %r123, %r123, 5;
	// begin inline asm
	lop3.b32 %r118, %r119, %r125, %r121, 202;
	// end inline asm
	add.s32 	%r787, %r118, %r729;
	add.s32 	%r788, %r787, %r117;
	add.s32 	%r789, %r788, %r786;
	add.s32 	%r127, %r789, 1518500249;
	shf.l.wrap.b32 	%r129, %r119, %r119, 30;
	shf.l.wrap.b32 	%r790, %r127, %r127, 5;
	// begin inline asm
	lop3.b32 %r122, %r123, %r129, %r125, 202;
	// end inline asm
	add.s32 	%r791, %r122, %r731;
	add.s32 	%r792, %r791, %r121;
	add.s32 	%r793, %r792, %r790;
	add.s32 	%r131, %r793, 1518500249;
	shf.l.wrap.b32 	%r133, %r123, %r123, 30;
	shf.l.wrap.b32 	%r794, %r131, %r131, 5;
	// begin inline asm
	lop3.b32 %r126, %r127, %r133, %r129, 202;
	// end inline asm
	xor.b32  	%r795, %r716, %r726;
	xor.b32  	%r796, %r795, %r705;
	xor.b32  	%r797, %r796, %r701;
	shf.l.wrap.b32 	%r798, %r797, %r797, 1;
	add.s32 	%r799, %r126, %r798;
	add.s32 	%r800, %r799, %r125;
	add.s32 	%r801, %r800, %r794;
	add.s32 	%r135, %r801, 1518500249;
	shf.l.wrap.b32 	%r137, %r127, %r127, 30;
	shf.l.wrap.b32 	%r802, %r135, %r135, 5;
	// begin inline asm
	lop3.b32 %r130, %r131, %r137, %r133, 202;
	// end inline asm
	xor.b32  	%r803, %r718, %r728;
	xor.b32  	%r804, %r803, %r707;
	xor.b32  	%r805, %r804, %r703;
	shf.l.wrap.b32 	%r806, %r805, %r805, 1;
	add.s32 	%r807, %r130, %r806;
	add.s32 	%r808, %r807, %r129;
	add.s32 	%r809, %r808, %r802;
	add.s32 	%r139, %r809, 1518500249;
	shf.l.wrap.b32 	%r141, %r131, %r131, 30;
	shf.l.wrap.b32 	%r810, %r139, %r139, 5;
	// begin inline asm
	lop3.b32 %r134, %r135, %r141, %r137, 202;
	// end inline asm
	xor.b32  	%r811, %r720, %r730;
	xor.b32  	%r812, %r811, %r709;
	xor.b32  	%r813, %r812, %r705;
	shf.l.wrap.b32 	%r814, %r813, %r813, 1;
	add.s32 	%r815, %r134, %r814;
	add.s32 	%r816, %r815, %r133;
	add.s32 	%r817, %r816, %r810;
	add.s32 	%r143, %r817, 1518500249;
	shf.l.wrap.b32 	%r145, %r135, %r135, 30;
	shf.l.wrap.b32 	%r818, %r143, %r143, 5;
	// begin inline asm
	lop3.b32 %r138, %r139, %r145, %r141, 202;
	// end inline asm
	xor.b32  	%r819, %r723, %r798;
	xor.b32  	%r820, %r819, %r711;
	xor.b32  	%r821, %r820, %r707;
	shf.l.wrap.b32 	%r822, %r821, %r821, 1;
	add.s32 	%r823, %r138, %r822;
	add.s32 	%r824, %r823, %r137;
	add.s32 	%r825, %r824, %r818;
	add.s32 	%r147, %r825, 1518500249;
	shf.l.wrap.b32 	%r149, %r139, %r139, 30;
	shf.l.wrap.b32 	%r826, %r147, %r147, 5;
	// begin inline asm
	lop3.b32 %r142, %r143, %r149, %r145, 150;
	// end inline asm
	xor.b32  	%r827, %r725, %r806;
	xor.b32  	%r828, %r827, %r713;
	xor.b32  	%r829, %r828, %r709;
	shf.l.wrap.b32 	%r830, %r829, %r829, 1;
	add.s32 	%r831, %r142, %r830;
	add.s32 	%r832, %r831, %r141;
	add.s32 	%r833, %r832, %r826;
	add.s32 	%r151, %r833, 1859775393;
	shf.l.wrap.b32 	%r153, %r143, %r143, 30;
	shf.l.wrap.b32 	%r834, %r151, %r151, 5;
	// begin inline asm
	lop3.b32 %r146, %r147, %r153, %r149, 150;
	// end inline asm
	xor.b32  	%r835, %r727, %r814;
	xor.b32  	%r836, %r835, %r715;
	xor.b32  	%r837, %r836, %r711;
	shf.l.wrap.b32 	%r838, %r837, %r837, 1;
	add.s32 	%r839, %r146, %r838;
	add.s32 	%r840, %r839, %r145;
	add.s32 	%r841, %r840, %r834;
	add.s32 	%r155, %r841, 1859775393;
	shf.l.wrap.b32 	%r157, %r147, %r147, 30;
	shf.l.wrap.b32 	%r842, %r155, %r155, 5;
	// begin inline asm
	lop3.b32 %r150, %r151, %r157, %r153, 150;
	// end inline asm
	xor.b32  	%r843, %r729, %r822;
	xor.b32  	%r844, %r843, %r717;
	xor.b32  	%r845, %r844, %r713;
	shf.l.wrap.b32 	%r846, %r845, %r845, 1;
	add.s32 	%r847, %r150, %r846;
	add.s32 	%r848, %r847, %r149;
	add.s32 	%r849, %r848, %r842;
	add.s32 	%r159, %r849, 1859775393;
	shf.l.wrap.b32 	%r161, %r151, %r151, 30;
	shf.l.wrap.b32 	%r850, %r159, %r159, 5;
	// begin inline asm
	lop3.b32 %r154, %r155, %r161, %r157, 150;
	// end inline asm
	xor.b32  	%r851, %r731, %r830;
	xor.b32  	%r852, %r851, %r719;
	xor.b32  	%r853, %r852, %r715;
	shf.l.wrap.b32 	%r854, %r853, %r853, 1;
	add.s32 	%r855, %r154, %r854;
	add.s32 	%r856, %r855, %r153;
	add.s32 	%r857, %r856, %r850;
	add.s32 	%r163, %r857, 1859775393;
	shf.l.wrap.b32 	%r165, %r155, %r155, 30;
	shf.l.wrap.b32 	%r858, %r163, %r163, 5;
	// begin inline asm
	lop3.b32 %r158, %r159, %r165, %r161, 150;
	// end inline asm
	xor.b32  	%r859, %r838, %r798;
	xor.b32  	%r860, %r859, %r721;
	xor.b32  	%r861, %r860, %r717;
	shf.l.wrap.b32 	%r862, %r861, %r861, 1;
	add.s32 	%r863, %r158, %r862;
	add.s32 	%r864, %r863, %r157;
	add.s32 	%r865, %r864, %r858;
	add.s32 	%r167, %r865, 1859775393;
	shf.l.wrap.b32 	%r169, %r159, %r159, 30;
	shf.l.wrap.b32 	%r866, %r167, %r167, 5;
	// begin inline asm
	lop3.b32 %r162, %r163, %r169, %r165, 150;
	// end inline asm
	xor.b32  	%r867, %r846, %r806;
	xor.b32  	%r868, %r867, %r723;
	xor.b32  	%r869, %r868, %r719;
	shf.l.wrap.b32 	%r870, %r869, %r869, 1;
	add.s32 	%r871, %r162, %r870;
	add.s32 	%r872, %r871, %r161;
	add.s32 	%r873, %r872, %r866;
	add.s32 	%r171, %r873, 1859775393;
	shf.l.wrap.b32 	%r173, %r163, %r163, 30;
	shf.l.wrap.b32 	%r874, %r171, %r171, 5;
	// begin inline asm
	lop3.b32 %r166, %r167, %r173, %r169, 150;
	// end inline asm
	xor.b32  	%r875, %r854, %r814;
	xor.b32  	%r876, %r875, %r725;
	xor.b32  	%r877, %r876, %r721;
	shf.l.wrap.b32 	%r878, %r877, %r877, 1;
	add.s32 	%r879, %r166, %r878;
	add.s32 	%r880, %r879, %r165;
	add.s32 	%r881, %r880, %r874;
	add.s32 	%r175, %r881, 1859775393;
	shf.l.wrap.b32 	%r177, %r167, %r167, 30;
	shf.l.wrap.b32 	%r882, %r175, %r175, 5;
	// begin inline asm
	lop3.b32 %r170, %r171, %r177, %r173, 150;
	// end inline asm
	xor.b32  	%r883, %r862, %r822;
	xor.b32  	%r884, %r883, %r727;
	xor.b32  	%r885, %r884, %r723;
	shf.l.wrap.b32 	%r886, %r885, %r885, 1;
	add.s32 	%r887, %r170, %r886;
	add.s32 	%r888, %r887, %r169;
	add.s32 	%r889, %r888, %r882;
	add.s32 	%r179, %r889, 1859775393;
	shf.l.wrap.b32 	%r181, %r171, %r171, 30;
	shf.l.wrap.b32 	%r890, %r179, %r179, 5;
	// begin inline asm
	lop3.b32 %r174, %r175, %r181, %r177, 150;
	// end inline asm
	xor.b32  	%r891, %r870, %r830;
	xor.b32  	%r892, %r891, %r729;
	xor.b32  	%r893, %r892, %r725;
	shf.l.wrap.b32 	%r894, %r893, %r893, 1;
	add.s32 	%r895, %r174, %r894;
	add.s32 	%r896, %r895, %r173;
	add.s32 	%r897, %r896, %r890;
	add.s32 	%r183, %r897, 1859775393;
	shf.l.wrap.b32 	%r185, %r175, %r175, 30;
	shf.l.wrap.b32 	%r898, %r183, %r183, 5;
	// begin inline asm
	lop3.b32 %r178, %r179, %r185, %r181, 150;
	// end inline asm
	xor.b32  	%r899, %r878, %r838;
	xor.b32  	%r900, %r899, %r731;
	xor.b32  	%r901, %r900, %r727;
	shf.l.wrap.b32 	%r902, %r901, %r901, 1;
	add.s32 	%r903, %r178, %r902;
	add.s32 	%r904, %r903, %r177;
	add.s32 	%r905, %r904, %r898;
	add.s32 	%r187, %r905, 1859775393;
	shf.l.wrap.b32 	%r189, %r179, %r179, 30;
	shf.l.wrap.b32 	%r906, %r187, %r187, 5;
	// begin inline asm
	lop3.b32 %r182, %r183, %r189, %r185, 150;
	// end inline asm
	xor.b32  	%r907, %r846, %r798;
	xor.b32  	%r908, %r907, %r886;
	xor.b32  	%r909, %r908, %r729;
	shf.l.wrap.b32 	%r910, %r909, %r909, 1;
	add.s32 	%r911, %r182, %r910;
	add.s32 	%r912, %r911, %r181;
	add.s32 	%r913, %r912, %r906;
	add.s32 	%r191, %r913, 1859775393;
	shf.l.wrap.b32 	%r193, %r183, %r183, 30;
	shf.l.wrap.b32 	%r914, %r191, %r191, 5;
	// begin inline asm
	lop3.b32 %r186, %r187, %r193, %r189, 150;
	// end inline asm
	xor.b32  	%r915, %r854, %r806;
	xor.b32  	%r916, %r915, %r894;
	xor.b32  	%r917, %r916, %r731;
	shf.l.wrap.b32 	%r918, %r917, %r917, 1;
	add.s32 	%r919, %r186, %r918;
	add.s32 	%r920, %r919, %r185;
	add.s32 	%r921, %r920, %r914;
	add.s32 	%r195, %r921, 1859775393;
	shf.l.wrap.b32 	%r197, %r187, %r187, 30;
	shf.l.wrap.b32 	%r922, %r195, %r195, 5;
	// begin inline asm
	lop3.b32 %r190, %r191, %r197, %r193, 150;
	// end inline asm
	xor.b32  	%r923, %r814, %r798;
	xor.b32  	%r924, %r923, %r862;
	xor.b32  	%r925, %r924, %r902;
	shf.l.wrap.b32 	%r926, %r925, %r925, 1;
	add.s32 	%r927, %r190, %r926;
	add.s32 	%r928, %r927, %r189;
	add.s32 	%r929, %r928, %r922;
	add.s32 	%r199, %r929, 1859775393;
	shf.l.wrap.b32 	%r201, %r191, %r191, 30;
	shf.l.wrap.b32 	%r930, %r199, %r199, 5;
	// begin inline asm
	lop3.b32 %r194, %r195, %r201, %r197, 150;
	// end inline asm
	xor.b32  	%r931, %r822, %r806;
	xor.b32  	%r932, %r931, %r870;
	xor.b32  	%r933, %r932, %r910;
	shf.l.wrap.b32 	%r934, %r933, %r933, 1;
	add.s32 	%r935, %r194, %r934;
	add.s32 	%r936, %r935, %r193;
	add.s32 	%r937, %r936, %r930;
	add.s32 	%r203, %r937, 1859775393;
	shf.l.wrap.b32 	%r205, %r195, %r195, 30;
	shf.l.wrap.b32 	%r938, %r203, %r203, 5;
	// begin inline asm
	lop3.b32 %r198, %r199, %r205, %r201, 150;
	// end inline asm
	xor.b32  	%r939, %r830, %r814;
	xor.b32  	%r940, %r939, %r878;
	xor.b32  	%r941, %r940, %r918;
	shf.l.wrap.b32 	%r942, %r941, %r941, 1;
	add.s32 	%r943, %r198, %r942;
	add.s32 	%r944, %r943, %r197;
	add.s32 	%r945, %r944, %r938;
	add.s32 	%r207, %r945, 1859775393;
	shf.l.wrap.b32 	%r209, %r199, %r199, 30;
	shf.l.wrap.b32 	%r946, %r207, %r207, 5;
	// begin inline asm
	lop3.b32 %r202, %r203, %r209, %r205, 150;
	// end inline asm
	xor.b32  	%r947, %r838, %r822;
	xor.b32  	%r948, %r947, %r886;
	xor.b32  	%r949, %r948, %r926;
	shf.l.wrap.b32 	%r950, %r949, %r949, 1;
	add.s32 	%r951, %r202, %r950;
	add.s32 	%r952, %r951, %r201;
	add.s32 	%r953, %r952, %r946;
	add.s32 	%r211, %r953, 1859775393;
	shf.l.wrap.b32 	%r213, %r203, %r203, 30;
	shf.l.wrap.b32 	%r954, %r211, %r211, 5;
	// begin inline asm
	lop3.b32 %r206, %r207, %r213, %r209, 150;
	// end inline asm
	xor.b32  	%r955, %r846, %r830;
	xor.b32  	%r956, %r955, %r894;
	xor.b32  	%r957, %r956, %r934;
	shf.l.wrap.b32 	%r958, %r957, %r957, 1;
	add.s32 	%r959, %r206, %r958;
	add.s32 	%r960, %r959, %r205;
	add.s32 	%r961, %r960, %r954;
	add.s32 	%r215, %r961, 1859775393;
	shf.l.wrap.b32 	%r217, %r207, %r207, 30;
	shf.l.wrap.b32 	%r962, %r215, %r215, 5;
	// begin inline asm
	lop3.b32 %r210, %r211, %r217, %r213, 150;
	// end inline asm
	xor.b32  	%r963, %r854, %r838;
	xor.b32  	%r964, %r963, %r902;
	xor.b32  	%r965, %r964, %r942;
	shf.l.wrap.b32 	%r966, %r965, %r965, 1;
	add.s32 	%r967, %r210, %r966;
	add.s32 	%r968, %r967, %r209;
	add.s32 	%r969, %r968, %r962;
	add.s32 	%r219, %r969, 1859775393;
	shf.l.wrap.b32 	%r221, %r211, %r211, 30;
	shf.l.wrap.b32 	%r970, %r219, %r219, 5;
	// begin inline asm
	lop3.b32 %r214, %r215, %r221, %r217, 150;
	// end inline asm
	xor.b32  	%r971, %r862, %r846;
	xor.b32  	%r972, %r971, %r910;
	xor.b32  	%r973, %r972, %r950;
	shf.l.wrap.b32 	%r974, %r973, %r973, 1;
	add.s32 	%r975, %r214, %r974;
	add.s32 	%r976, %r975, %r213;
	add.s32 	%r977, %r976, %r970;
	add.s32 	%r223, %r977, 1859775393;
	shf.l.wrap.b32 	%r225, %r215, %r215, 30;
	shf.l.wrap.b32 	%r978, %r223, %r223, 5;
	// begin inline asm
	lop3.b32 %r218, %r219, %r225, %r221, 150;
	// end inline asm
	xor.b32  	%r979, %r870, %r854;
	xor.b32  	%r980, %r979, %r918;
	xor.b32  	%r981, %r980, %r958;
	shf.l.wrap.b32 	%r982, %r981, %r981, 1;
	add.s32 	%r983, %r218, %r982;
	add.s32 	%r984, %r983, %r217;
	add.s32 	%r985, %r984, %r978;
	add.s32 	%r227, %r985, 1859775393;
	shf.l.wrap.b32 	%r229, %r219, %r219, 30;
	shf.l.wrap.b32 	%r986, %r227, %r227, 5;
	// begin inline asm
	lop3.b32 %r222, %r223, %r229, %r225, 232;
	// end inline asm
	xor.b32  	%r987, %r878, %r862;
	xor.b32  	%r988, %r987, %r926;
	xor.b32  	%r989, %r988, %r966;
	shf.l.wrap.b32 	%r990, %r989, %r989, 1;
	add.s32 	%r991, %r222, %r990;
	add.s32 	%r992, %r991, %r221;
	add.s32 	%r993, %r992, %r986;
	add.s32 	%r231, %r993, -1894007588;
	shf.l.wrap.b32 	%r233, %r223, %r223, 30;
	shf.l.wrap.b32 	%r994, %r231, %r231, 5;
	// begin inline asm
	lop3.b32 %r226, %r227, %r233, %r229, 232;
	// end inline asm
	xor.b32  	%r995, %r886, %r870;
	xor.b32  	%r996, %r995, %r934;
	xor.b32  	%r997, %r996, %r974;
	shf.l.wrap.b32 	%r998, %r997, %r997, 1;
	add.s32 	%r999, %r226, %r998;
	add.s32 	%r1000, %r999, %r225;
	add.s32 	%r1001, %r1000, %r994;
	add.s32 	%r235, %r1001, -1894007588;
	shf.l.wrap.b32 	%r237, %r227, %r227, 30;
	shf.l.wrap.b32 	%r1002, %r235, %r235, 5;
	// begin inline asm
	lop3.b32 %r230, %r231, %r237, %r233, 232;
	// end inline asm
	xor.b32  	%r1003, %r894, %r878;
	xor.b32  	%r1004, %r1003, %r942;
	xor.b32  	%r1005, %r1004, %r982;
	shf.l.wrap.b32 	%r1006, %r1005, %r1005, 1;
	add.s32 	%r1007, %r230, %r1006;
	add.s32 	%r1008, %r1007, %r229;
	add.s32 	%r1009, %r1008, %r1002;
	add.s32 	%r239, %r1009, -1894007588;
	shf.l.wrap.b32 	%r241, %r231, %r231, 30;
	shf.l.wrap.b32 	%r1010, %r239, %r239, 5;
	// begin inline asm
	lop3.b32 %r234, %r235, %r241, %r237, 232;
	// end inline asm
	xor.b32  	%r1011, %r902, %r886;
	xor.b32  	%r1012, %r1011, %r950;
	xor.b32  	%r1013, %r1012, %r990;
	shf.l.wrap.b32 	%r1014, %r1013, %r1013, 1;
	add.s32 	%r1015, %r234, %r1014;
	add.s32 	%r1016, %r1015, %r233;
	add.s32 	%r1017, %r1016, %r1010;
	add.s32 	%r243, %r1017, -1894007588;
	shf.l.wrap.b32 	%r245, %r235, %r235, 30;
	shf.l.wrap.b32 	%r1018, %r243, %r243, 5;
	// begin inline asm
	lop3.b32 %r238, %r239, %r245, %r241, 232;
	// end inline asm
	xor.b32  	%r1019, %r910, %r894;
	xor.b32  	%r1020, %r1019, %r958;
	xor.b32  	%r1021, %r1020, %r998;
	shf.l.wrap.b32 	%r1022, %r1021, %r1021, 1;
	add.s32 	%r1023, %r238, %r1022;
	add.s32 	%r1024, %r1023, %r237;
	add.s32 	%r1025, %r1024, %r1018;
	add.s32 	%r247, %r1025, -1894007588;
	shf.l.wrap.b32 	%r249, %r239, %r239, 30;
	shf.l.wrap.b32 	%r1026, %r247, %r247, 5;
	// begin inline asm
	lop3.b32 %r242, %r243, %r249, %r245, 232;
	// end inline asm
	xor.b32  	%r1027, %r918, %r902;
	xor.b32  	%r1028, %r1027, %r966;
	xor.b32  	%r1029, %r1028, %r1006;
	shf.l.wrap.b32 	%r1030, %r1029, %r1029, 1;
	add.s32 	%r1031, %r242, %r1030;
	add.s32 	%r1032, %r1031, %r241;
	add.s32 	%r1033, %r1032, %r1026;
	add.s32 	%r251, %r1033, -1894007588;
	shf.l.wrap.b32 	%r253, %r243, %r243, 30;
	shf.l.wrap.b32 	%r1034, %r251, %r251, 5;
	// begin inline asm
	lop3.b32 %r246, %r247, %r253, %r249, 232;
	// end inline asm
	xor.b32  	%r1035, %r926, %r910;
	xor.b32  	%r1036, %r1035, %r974;
	xor.b32  	%r1037, %r1036, %r1014;
	shf.l.wrap.b32 	%r1038, %r1037, %r1037, 1;
	add.s32 	%r1039, %r246, %r1038;
	add.s32 	%r1040, %r1039, %r245;
	add.s32 	%r1041, %r1040, %r1034;
	add.s32 	%r255, %r1041, -1894007588;
	shf.l.wrap.b32 	%r257, %r247, %r247, 30;
	shf.l.wrap.b32 	%r1042, %r255, %r255, 5;
	// begin inline asm
	lop3.b32 %r250, %r251, %r257, %r253, 232;
	// end inline asm
	xor.b32  	%r1043, %r934, %r918;
	xor.b32  	%r1044, %r1043, %r982;
	xor.b32  	%r1045, %r1044, %r1022;
	shf.l.wrap.b32 	%r1046, %r1045, %r1045, 1;
	add.s32 	%r1047, %r250, %r1046;
	add.s32 	%r1048, %r1047, %r249;
	add.s32 	%r1049, %r1048, %r1042;
	add.s32 	%r259, %r1049, -1894007588;
	shf.l.wrap.b32 	%r261, %r251, %r251, 30;
	shf.l.wrap.b32 	%r1050, %r259, %r259, 5;
	// begin inline asm
	lop3.b32 %r254, %r255, %r261, %r257, 232;
	// end inline asm
	xor.b32  	%r1051, %r942, %r926;
	xor.b32  	%r1052, %r1051, %r990;
	xor.b32  	%r1053, %r1052, %r1030;
	shf.l.wrap.b32 	%r1054, %r1053, %r1053, 1;
	add.s32 	%r1055, %r254, %r1054;
	add.s32 	%r1056, %r1055, %r253;
	add.s32 	%r1057, %r1056, %r1050;
	add.s32 	%r263, %r1057, -1894007588;
	shf.l.wrap.b32 	%r265, %r255, %r255, 30;
	shf.l.wrap.b32 	%r1058, %r263, %r263, 5;
	// begin inline asm
	lop3.b32 %r258, %r259, %r265, %r261, 232;
	// end inline asm
	xor.b32  	%r1059, %r950, %r934;
	xor.b32  	%r1060, %r1059, %r998;
	xor.b32  	%r1061, %r1060, %r1038;
	shf.l.wrap.b32 	%r1062, %r1061, %r1061, 1;
	add.s32 	%r1063, %r258, %r1062;
	add.s32 	%r1064, %r1063, %r257;
	add.s32 	%r1065, %r1064, %r1058;
	add.s32 	%r267, %r1065, -1894007588;
	shf.l.wrap.b32 	%r269, %r259, %r259, 30;
	shf.l.wrap.b32 	%r1066, %r267, %r267, 5;
	// begin inline asm
	lop3.b32 %r262, %r263, %r269, %r265, 232;
	// end inline asm
	xor.b32  	%r1067, %r958, %r942;
	xor.b32  	%r1068, %r1067, %r1006;
	xor.b32  	%r1069, %r1068, %r1046;
	shf.l.wrap.b32 	%r1070, %r1069, %r1069, 1;
	add.s32 	%r1071, %r262, %r1070;
	add.s32 	%r1072, %r1071, %r261;
	add.s32 	%r1073, %r1072, %r1066;
	add.s32 	%r271, %r1073, -1894007588;
	shf.l.wrap.b32 	%r273, %r263, %r263, 30;
	shf.l.wrap.b32 	%r1074, %r271, %r271, 5;
	// begin inline asm
	lop3.b32 %r266, %r267, %r273, %r269, 232;
	// end inline asm
	xor.b32  	%r1075, %r966, %r950;
	xor.b32  	%r1076, %r1075, %r1014;
	xor.b32  	%r1077, %r1076, %r1054;
	shf.l.wrap.b32 	%r1078, %r1077, %r1077, 1;
	add.s32 	%r1079, %r266, %r1078;
	add.s32 	%r1080, %r1079, %r265;
	add.s32 	%r1081, %r1080, %r1074;
	add.s32 	%r275, %r1081, -1894007588;
	shf.l.wrap.b32 	%r277, %r267, %r267, 30;
	shf.l.wrap.b32 	%r1082, %r275, %r275, 5;
	// begin inline asm
	lop3.b32 %r270, %r271, %r277, %r273, 232;
	// end inline asm
	xor.b32  	%r1083, %r974, %r958;
	xor.b32  	%r1084, %r1083, %r1022;
	xor.b32  	%r1085, %r1084, %r1062;
	shf.l.wrap.b32 	%r1086, %r1085, %r1085, 1;
	add.s32 	%r1087, %r270, %r1086;
	add.s32 	%r1088, %r1087, %r269;
	add.s32 	%r1089, %r1088, %r1082;
	add.s32 	%r279, %r1089, -1894007588;
	shf.l.wrap.b32 	%r281, %r271, %r271, 30;
	shf.l.wrap.b32 	%r1090, %r279, %r279, 5;
	// begin inline asm
	lop3.b32 %r274, %r275, %r281, %r277, 232;
	// end inline asm
	xor.b32  	%r1091, %r982, %r966;
	xor.b32  	%r1092, %r1091, %r1030;
	xor.b32  	%r1093, %r1092, %r1070;
	shf.l.wrap.b32 	%r1094, %r1093, %r1093, 1;
	add.s32 	%r1095, %r274, %r1094;
	add.s32 	%r1096, %r1095, %r273;
	add.s32 	%r1097, %r1096, %r1090;
	add.s32 	%r283, %r1097, -1894007588;
	shf.l.wrap.b32 	%r285, %r275, %r275, 30;
	shf.l.wrap.b32 	%r1098, %r283, %r283, 5;
	// begin inline asm
	lop3.b32 %r278, %r279, %r285, %r281, 232;
	// end inline asm
	xor.b32  	%r1099, %r990, %r974;
	xor.b32  	%r1100, %r1099, %r1038;
	xor.b32  	%r1101, %r1100, %r1078;
	shf.l.wrap.b32 	%r1102, %r1101, %r1101, 1;
	add.s32 	%r1103, %r278, %r1102;
	add.s32 	%r1104, %r1103, %r277;
	add.s32 	%r1105, %r1104, %r1098;
	add.s32 	%r287, %r1105, -1894007588;
	shf.l.wrap.b32 	%r289, %r279, %r279, 30;
	shf.l.wrap.b32 	%r1106, %r287, %r287, 5;
	// begin inline asm
	lop3.b32 %r282, %r283, %r289, %r285, 232;
	// end inline asm
	xor.b32  	%r1107, %r998, %r982;
	xor.b32  	%r1108, %r1107, %r1046;
	xor.b32  	%r1109, %r1108, %r1086;
	shf.l.wrap.b32 	%r1110, %r1109, %r1109, 1;
	add.s32 	%r1111, %r282, %r1110;
	add.s32 	%r1112, %r1111, %r281;
	add.s32 	%r1113, %r1112, %r1106;
	add.s32 	%r291, %r1113, -1894007588;
	shf.l.wrap.b32 	%r293, %r283, %r283, 30;
	shf.l.wrap.b32 	%r1114, %r291, %r291, 5;
	// begin inline asm
	lop3.b32 %r286, %r287, %r293, %r289, 232;
	// end inline asm
	xor.b32  	%r1115, %r1006, %r990;
	xor.b32  	%r1116, %r1115, %r1054;
	xor.b32  	%r1117, %r1116, %r1094;
	shf.l.wrap.b32 	%r1118, %r1117, %r1117, 1;
	add.s32 	%r1119, %r286, %r1118;
	add.s32 	%r1120, %r1119, %r285;
	add.s32 	%r1121, %r1120, %r1114;
	add.s32 	%r295, %r1121, -1894007588;
	shf.l.wrap.b32 	%r297, %r287, %r287, 30;
	shf.l.wrap.b32 	%r1122, %r295, %r295, 5;
	// begin inline asm
	lop3.b32 %r290, %r291, %r297, %r293, 232;
	// end inline asm
	xor.b32  	%r1123, %r1014, %r998;
	xor.b32  	%r1124, %r1123, %r1062;
	xor.b32  	%r1125, %r1124, %r1102;
	shf.l.wrap.b32 	%r1126, %r1125, %r1125, 1;
	add.s32 	%r1127, %r290, %r1126;
	add.s32 	%r1128, %r1127, %r289;
	add.s32 	%r1129, %r1128, %r1122;
	add.s32 	%r299, %r1129, -1894007588;
	shf.l.wrap.b32 	%r301, %r291, %r291, 30;
	shf.l.wrap.b32 	%r1130, %r299, %r299, 5;
	// begin inline asm
	lop3.b32 %r294, %r295, %r301, %r297, 232;
	// end inline asm
	xor.b32  	%r1131, %r1022, %r1006;
	xor.b32  	%r1132, %r1131, %r1070;
	xor.b32  	%r1133, %r1132, %r1110;
	shf.l.wrap.b32 	%r1134, %r1133, %r1133, 1;
	add.s32 	%r1135, %r294, %r1134;
	add.s32 	%r1136, %r1135, %r293;
	add.s32 	%r1137, %r1136, %r1130;
	add.s32 	%r303, %r1137, -1894007588;
	shf.l.wrap.b32 	%r305, %r295, %r295, 30;
	shf.l.wrap.b32 	%r1138, %r303, %r303, 5;
	// begin inline asm
	lop3.b32 %r298, %r299, %r305, %r301, 232;
	// end inline asm
	xor.b32  	%r1139, %r1030, %r1014;
	xor.b32  	%r1140, %r1139, %r1078;
	xor.b32  	%r1141, %r1140, %r1118;
	shf.l.wrap.b32 	%r1142, %r1141, %r1141, 1;
	add.s32 	%r1143, %r298, %r1142;
	add.s32 	%r1144, %r1143, %r297;
	add.s32 	%r1145, %r1144, %r1138;
	add.s32 	%r307, %r1145, -1894007588;
	shf.l.wrap.b32 	%r309, %r299, %r299, 30;
	shf.l.wrap.b32 	%r1146, %r307, %r307, 5;
	// begin inline asm
	lop3.b32 %r302, %r303, %r309, %r305, 150;
	// end inline asm
	xor.b32  	%r1147, %r1038, %r1022;
	xor.b32  	%r1148, %r1147, %r1086;
	xor.b32  	%r1149, %r1148, %r1126;
	shf.l.wrap.b32 	%r1150, %r1149, %r1149, 1;
	add.s32 	%r1151, %r302, %r1150;
	add.s32 	%r1152, %r1151, %r301;
	add.s32 	%r1153, %r1152, %r1146;
	add.s32 	%r311, %r1153, -899497514;
	shf.l.wrap.b32 	%r313, %r303, %r303, 30;
	shf.l.wrap.b32 	%r1154, %r311, %r311, 5;
	// begin inline asm
	lop3.b32 %r306, %r307, %r313, %r309, 150;
	// end inline asm
	xor.b32  	%r1155, %r1046, %r1030;
	xor.b32  	%r1156, %r1155, %r1094;
	xor.b32  	%r1157, %r1156, %r1134;
	shf.l.wrap.b32 	%r1158, %r1157, %r1157, 1;
	add.s32 	%r1159, %r306, %r1158;
	add.s32 	%r1160, %r1159, %r305;
	add.s32 	%r1161, %r1160, %r1154;
	add.s32 	%r315, %r1161, -899497514;
	shf.l.wrap.b32 	%r317, %r307, %r307, 30;
	shf.l.wrap.b32 	%r1162, %r315, %r315, 5;
	// begin inline asm
	lop3.b32 %r310, %r311, %r317, %r313, 150;
	// end inline asm
	xor.b32  	%r1163, %r1054, %r1038;
	xor.b32  	%r1164, %r1163, %r1102;
	xor.b32  	%r1165, %r1164, %r1142;
	shf.l.wrap.b32 	%r1166, %r1165, %r1165, 1;
	add.s32 	%r1167, %r310, %r1166;
	add.s32 	%r1168, %r1167, %r309;
	add.s32 	%r1169, %r1168, %r1162;
	add.s32 	%r319, %r1169, -899497514;
	shf.l.wrap.b32 	%r321, %r311, %r311, 30;
	shf.l.wrap.b32 	%r1170, %r319, %r319, 5;
	// begin inline asm
	lop3.b32 %r314, %r315, %r321, %r317, 150;
	// end inline asm
	xor.b32  	%r1171, %r1062, %r1046;
	xor.b32  	%r1172, %r1171, %r1110;
	xor.b32  	%r1173, %r1172, %r1150;
	shf.l.wrap.b32 	%r1174, %r1173, %r1173, 1;
	add.s32 	%r1175, %r314, %r1174;
	add.s32 	%r1176, %r1175, %r313;
	add.s32 	%r1177, %r1176, %r1170;
	add.s32 	%r323, %r1177, -899497514;
	shf.l.wrap.b32 	%r325, %r315, %r315, 30;
	shf.l.wrap.b32 	%r1178, %r323, %r323, 5;
	// begin inline asm
	lop3.b32 %r318, %r319, %r325, %r321, 150;
	// end inline asm
	xor.b32  	%r1179, %r1070, %r1054;
	xor.b32  	%r1180, %r1179, %r1118;
	xor.b32  	%r1181, %r1180, %r1158;
	shf.l.wrap.b32 	%r1182, %r1181, %r1181, 1;
	add.s32 	%r1183, %r318, %r1182;
	add.s32 	%r1184, %r1183, %r317;
	add.s32 	%r1185, %r1184, %r1178;
	add.s32 	%r327, %r1185, -899497514;
	shf.l.wrap.b32 	%r329, %r319, %r319, 30;
	shf.l.wrap.b32 	%r1186, %r327, %r327, 5;
	// begin inline asm
	lop3.b32 %r322, %r323, %r329, %r325, 150;
	// end inline asm
	xor.b32  	%r1187, %r1078, %r1062;
	xor.b32  	%r1188, %r1187, %r1126;
	xor.b32  	%r1189, %r1188, %r1166;
	shf.l.wrap.b32 	%r1190, %r1189, %r1189, 1;
	add.s32 	%r1191, %r322, %r1190;
	add.s32 	%r1192, %r1191, %r321;
	add.s32 	%r1193, %r1192, %r1186;
	add.s32 	%r331, %r1193, -899497514;
	shf.l.wrap.b32 	%r333, %r323, %r323, 30;
	shf.l.wrap.b32 	%r1194, %r331, %r331, 5;
	// begin inline asm
	lop3.b32 %r326, %r327, %r333, %r329, 150;
	// end inline asm
	xor.b32  	%r1195, %r1086, %r1070;
	xor.b32  	%r1196, %r1195, %r1134;
	xor.b32  	%r1197, %r1196, %r1174;
	shf.l.wrap.b32 	%r1198, %r1197, %r1197, 1;
	add.s32 	%r1199, %r326, %r1198;
	add.s32 	%r1200, %r1199, %r325;
	add.s32 	%r1201, %r1200, %r1194;
	add.s32 	%r335, %r1201, -899497514;
	shf.l.wrap.b32 	%r337, %r327, %r327, 30;
	shf.l.wrap.b32 	%r1202, %r335, %r335, 5;
	// begin inline asm
	lop3.b32 %r330, %r331, %r337, %r333, 150;
	// end inline asm
	xor.b32  	%r1203, %r1094, %r1078;
	xor.b32  	%r1204, %r1203, %r1142;
	xor.b32  	%r1205, %r1204, %r1182;
	shf.l.wrap.b32 	%r1206, %r1205, %r1205, 1;
	add.s32 	%r1207, %r330, %r1206;
	add.s32 	%r1208, %r1207, %r329;
	add.s32 	%r1209, %r1208, %r1202;
	add.s32 	%r339, %r1209, -899497514;
	shf.l.wrap.b32 	%r341, %r331, %r331, 30;
	shf.l.wrap.b32 	%r1210, %r339, %r339, 5;
	// begin inline asm
	lop3.b32 %r334, %r335, %r341, %r337, 150;
	// end inline asm
	xor.b32  	%r1211, %r1102, %r1086;
	xor.b32  	%r1212, %r1211, %r1150;
	xor.b32  	%r1213, %r1212, %r1190;
	shf.l.wrap.b32 	%r1214, %r1213, %r1213, 1;
	add.s32 	%r1215, %r334, %r1214;
	add.s32 	%r1216, %r1215, %r333;
	add.s32 	%r1217, %r1216, %r1210;
	add.s32 	%r343, %r1217, -899497514;
	shf.l.wrap.b32 	%r345, %r335, %r335, 30;
	shf.l.wrap.b32 	%r1218, %r343, %r343, 5;
	// begin inline asm
	lop3.b32 %r338, %r339, %r345, %r341, 150;
	// end inline asm
	xor.b32  	%r1219, %r1110, %r1094;
	xor.b32  	%r1220, %r1219, %r1158;
	xor.b32  	%r1221, %r1220, %r1198;
	shf.l.wrap.b32 	%r1222, %r1221, %r1221, 1;
	add.s32 	%r1223, %r338, %r1222;
	add.s32 	%r1224, %r1223, %r337;
	add.s32 	%r1225, %r1224, %r1218;
	add.s32 	%r347, %r1225, -899497514;
	shf.l.wrap.b32 	%r349, %r339, %r339, 30;
	shf.l.wrap.b32 	%r1226, %r347, %r347, 5;
	// begin inline asm
	lop3.b32 %r342, %r343, %r349, %r345, 150;
	// end inline asm
	xor.b32  	%r1227, %r1118, %r1102;
	xor.b32  	%r1228, %r1227, %r1166;
	xor.b32  	%r1229, %r1228, %r1206;
	shf.l.wrap.b32 	%r1230, %r1229, %r1229, 1;
	add.s32 	%r1231, %r342, %r1230;
	add.s32 	%r1232, %r1231, %r341;
	add.s32 	%r1233, %r1232, %r1226;
	add.s32 	%r351, %r1233, -899497514;
	shf.l.wrap.b32 	%r353, %r343, %r343, 30;
	shf.l.wrap.b32 	%r1234, %r351, %r351, 5;
	// begin inline asm
	lop3.b32 %r346, %r347, %r353, %r349, 150;
	// end inline asm
	xor.b32  	%r1235, %r1126, %r1110;
	xor.b32  	%r1236, %r1235, %r1174;
	xor.b32  	%r1237, %r1236, %r1214;
	shf.l.wrap.b32 	%r1238, %r1237, %r1237, 1;
	add.s32 	%r1239, %r346, %r1238;
	add.s32 	%r1240, %r1239, %r345;
	add.s32 	%r1241, %r1240, %r1234;
	add.s32 	%r355, %r1241, -899497514;
	shf.l.wrap.b32 	%r357, %r347, %r347, 30;
	shf.l.wrap.b32 	%r1242, %r355, %r355, 5;
	// begin inline asm
	lop3.b32 %r350, %r351, %r357, %r353, 150;
	// end inline asm
	xor.b32  	%r1243, %r1134, %r1118;
	xor.b32  	%r1244, %r1243, %r1182;
	xor.b32  	%r1245, %r1244, %r1222;
	shf.l.wrap.b32 	%r1246, %r1245, %r1245, 1;
	add.s32 	%r1247, %r350, %r1246;
	add.s32 	%r1248, %r1247, %r349;
	add.s32 	%r1249, %r1248, %r1242;
	add.s32 	%r359, %r1249, -899497514;
	shf.l.wrap.b32 	%r361, %r351, %r351, 30;
	shf.l.wrap.b32 	%r1250, %r359, %r359, 5;
	// begin inline asm
	lop3.b32 %r354, %r355, %r361, %r357, 150;
	// end inline asm
	xor.b32  	%r1251, %r1142, %r1126;
	xor.b32  	%r1252, %r1251, %r1190;
	xor.b32  	%r1253, %r1252, %r1230;
	shf.l.wrap.b32 	%r1254, %r1253, %r1253, 1;
	add.s32 	%r1255, %r354, %r1254;
	add.s32 	%r1256, %r1255, %r353;
	add.s32 	%r1257, %r1256, %r1250;
	add.s32 	%r363, %r1257, -899497514;
	shf.l.wrap.b32 	%r365, %r355, %r355, 30;
	shf.l.wrap.b32 	%r1258, %r363, %r363, 5;
	// begin inline asm
	lop3.b32 %r358, %r359, %r365, %r361, 150;
	// end inline asm
	xor.b32  	%r1259, %r1150, %r1134;
	xor.b32  	%r1260, %r1259, %r1198;
	xor.b32  	%r1261, %r1260, %r1238;
	shf.l.wrap.b32 	%r1262, %r1261, %r1261, 1;
	add.s32 	%r1263, %r358, %r1262;
	add.s32 	%r1264, %r1263, %r357;
	add.s32 	%r1265, %r1264, %r1258;
	add.s32 	%r367, %r1265, -899497514;
	shf.l.wrap.b32 	%r369, %r359, %r359, 30;
	shf.l.wrap.b32 	%r1266, %r367, %r367, 5;
	// begin inline asm
	lop3.b32 %r362, %r363, %r369, %r365, 150;
	// end inline asm
	xor.b32  	%r1267, %r1158, %r1142;
	xor.b32  	%r1268, %r1267, %r1206;
	xor.b32  	%r1269, %r1268, %r1246;
	shf.l.wrap.b32 	%r1270, %r1269, %r1269, 1;
	add.s32 	%r1271, %r362, %r1270;
	add.s32 	%r1272, %r1271, %r361;
	add.s32 	%r1273, %r1272, %r1266;
	add.s32 	%r371, %r1273, -899497514;
	shf.l.wrap.b32 	%r373, %r363, %r363, 30;
	shf.l.wrap.b32 	%r1274, %r371, %r371, 5;
	// begin inline asm
	lop3.b32 %r366, %r367, %r373, %r369, 150;
	// end inline asm
	xor.b32  	%r1275, %r1166, %r1150;
	xor.b32  	%r1276, %r1275, %r1214;
	xor.b32  	%r1277, %r1276, %r1254;
	shf.l.wrap.b32 	%r1278, %r1277, %r1277, 1;
	add.s32 	%r1279, %r366, %r1278;
	add.s32 	%r1280, %r1279, %r365;
	add.s32 	%r1281, %r1280, %r1274;
	add.s32 	%r375, %r1281, -899497514;
	shf.l.wrap.b32 	%r377, %r367, %r367, 30;
	shf.l.wrap.b32 	%r1282, %r375, %r375, 5;
	// begin inline asm
	lop3.b32 %r370, %r371, %r377, %r373, 150;
	// end inline asm
	xor.b32  	%r1283, %r1174, %r1158;
	xor.b32  	%r1284, %r1283, %r1222;
	xor.b32  	%r1285, %r1284, %r1262;
	shf.l.wrap.b32 	%r1286, %r1285, %r1285, 1;
	add.s32 	%r1287, %r370, %r1286;
	add.s32 	%r1288, %r1287, %r369;
	add.s32 	%r1289, %r1288, %r1282;
	add.s32 	%r379, %r1289, -899497514;
	shf.l.wrap.b32 	%r381, %r371, %r371, 30;
	shf.l.wrap.b32 	%r1290, %r379, %r379, 5;
	// begin inline asm
	lop3.b32 %r374, %r375, %r381, %r377, 150;
	// end inline asm
	xor.b32  	%r1291, %r1182, %r1166;
	xor.b32  	%r1292, %r1291, %r1230;
	xor.b32  	%r1293, %r1292, %r1270;
	shf.l.wrap.b32 	%r1294, %r1293, %r1293, 1;
	add.s32 	%r1295, %r374, %r1294;
	add.s32 	%r1296, %r1295, %r373;
	add.s32 	%r1297, %r1296, %r1290;
	add.s32 	%r1298, %r1297, -899497514;
	shf.l.wrap.b32 	%r380, %r375, %r375, 30;
	shf.l.wrap.b32 	%r1299, %r1298, %r1298, 5;
	// begin inline asm
	lop3.b32 %r378, %r379, %r380, %r381, 150;
	// end inline asm
	xor.b32  	%r1300, %r1190, %r1174;
	xor.b32  	%r1301, %r1300, %r1238;
	xor.b32  	%r1302, %r1301, %r1278;
	shf.l.wrap.b32 	%r1303, %r1302, %r1302, 1;
	shf.l.wrap.b32 	%r1304, %r379, %r379, 30;
	add.s32 	%r1305, %r378, %r1303;
	add.s32 	%r1306, %r1305, %r377;
	add.s32 	%r1307, %r1306, %r1299;
	add.s32 	%r5623, %r1307, 833086679;
	add.s32 	%r5622, %r1297, -1171231393;
	add.s32 	%r5621, %r1304, -1732584194;
	add.s32 	%r5620, %r380, 271733878;
	add.s32 	%r5619, %r381, -1009589776;
	mul.wide.u32 	%rd13, %r699, 88;
	add.s64 	%rd14, %rd7, %rd13;
	add.s64 	%rd2, %rd14, 20;
	st.global.u32 	[%rd14+20], %r5623;
	st.global.u32 	[%rd14+24], %r5622;
	st.global.u32 	[%rd14+28], %r5621;
	st.global.u32 	[%rd14+32], %r5620;
	st.global.u32 	[%rd14+36], %r5619;
	ld.global.u32 	%r1308, [%rd12];
	xor.b32  	%r1309, %r1308, 1549556828;
	ld.global.u32 	%r1310, [%rd12+4];
	xor.b32  	%r1311, %r1310, 1549556828;
	ld.global.u32 	%r1312, [%rd12+8];
	xor.b32  	%r1313, %r1312, 1549556828;
	ld.global.u32 	%r1314, [%rd12+12];
	xor.b32  	%r1315, %r1314, 1549556828;
	ld.global.u32 	%r1316, [%rd12+16];
	xor.b32  	%r1317, %r1316, 1549556828;
	ld.global.u32 	%r1318, [%rd12+20];
	xor.b32  	%r1319, %r1318, 1549556828;
	ld.global.u32 	%r1320, [%rd12+24];
	xor.b32  	%r1321, %r1320, 1549556828;
	ld.global.u32 	%r1322, [%rd12+28];
	xor.b32  	%r1323, %r1322, 1549556828;
	ld.global.u32 	%r1324, [%rd12+32];
	xor.b32  	%r1325, %r1324, 1549556828;
	ld.global.u32 	%r1326, [%rd12+36];
	xor.b32  	%r1327, %r1326, 1549556828;
	ld.global.u32 	%r1328, [%rd12+40];
	xor.b32  	%r1329, %r1328, 1549556828;
	ld.global.u32 	%r1330, [%rd12+44];
	xor.b32  	%r1331, %r1330, 1549556828;
	ld.global.u32 	%r1332, [%rd12+48];
	xor.b32  	%r1333, %r1332, 1549556828;
	ld.global.u32 	%r1334, [%rd12+52];
	xor.b32  	%r1335, %r1334, 1549556828;
	ld.global.u32 	%r1336, [%rd12+56];
	xor.b32  	%r1337, %r1336, 1549556828;
	ld.global.u32 	%r1338, [%rd12+60];
	xor.b32  	%r1339, %r1338, 1549556828;
	add.s32 	%r1340, %r734, %r1309;
	add.s32 	%r383, %r1340, -1009589776;
	shf.l.wrap.b32 	%r1341, %r383, %r383, 5;
	add.s32 	%r1342, %r737, %r1311;
	add.s32 	%r387, %r1342, %r1341;
	shf.l.wrap.b32 	%r1343, %r387, %r387, 5;
	// begin inline asm
	lop3.b32 %r382, %r383, %r389, %r385, 202;
	// end inline asm
	add.s32 	%r1344, %r382, %r1313;
	add.s32 	%r1345, %r1344, %r1343;
	add.s32 	%r391, %r1345, -214083945;
	shf.l.wrap.b32 	%r393, %r383, %r383, 30;
	shf.l.wrap.b32 	%r1346, %r391, %r391, 5;
	// begin inline asm
	lop3.b32 %r386, %r387, %r393, %r389, 202;
	// end inline asm
	add.s32 	%r1347, %r743, %r386;
	add.s32 	%r1348, %r1347, %r1315;
	add.s32 	%r395, %r1348, %r1346;
	shf.l.wrap.b32 	%r397, %r387, %r387, 30;
	shf.l.wrap.b32 	%r1349, %r395, %r395, 5;
	// begin inline asm
	lop3.b32 %r390, %r391, %r397, %r393, 202;
	// end inline asm
	add.s32 	%r1350, %r747, %r390;
	add.s32 	%r1351, %r1350, %r1317;
	add.s32 	%r399, %r1351, %r1349;
	shf.l.wrap.b32 	%r401, %r391, %r391, 30;
	shf.l.wrap.b32 	%r1352, %r399, %r399, 5;
	// begin inline asm
	lop3.b32 %r394, %r395, %r401, %r397, 202;
	// end inline asm
	add.s32 	%r1353, %r393, %r394;
	add.s32 	%r1354, %r1353, %r1319;
	add.s32 	%r1355, %r1354, %r1352;
	add.s32 	%r403, %r1355, 1518500249;
	shf.l.wrap.b32 	%r405, %r395, %r395, 30;
	shf.l.wrap.b32 	%r1356, %r403, %r403, 5;
	// begin inline asm
	lop3.b32 %r398, %r399, %r405, %r401, 202;
	// end inline asm
	add.s32 	%r1357, %r397, %r398;
	add.s32 	%r1358, %r1357, %r1321;
	add.s32 	%r1359, %r1358, %r1356;
	add.s32 	%r407, %r1359, 1518500249;
	shf.l.wrap.b32 	%r409, %r399, %r399, 30;
	shf.l.wrap.b32 	%r1360, %r407, %r407, 5;
	// begin inline asm
	lop3.b32 %r402, %r403, %r409, %r405, 202;
	// end inline asm
	add.s32 	%r1361, %r402, %r401;
	add.s32 	%r1362, %r1361, %r1323;
	add.s32 	%r1363, %r1362, %r1360;
	add.s32 	%r411, %r1363, 1518500249;
	shf.l.wrap.b32 	%r413, %r403, %r403, 30;
	shf.l.wrap.b32 	%r1364, %r411, %r411, 5;
	// begin inline asm
	lop3.b32 %r406, %r407, %r413, %r409, 202;
	// end inline asm
	add.s32 	%r1365, %r406, %r1325;
	add.s32 	%r1366, %r1365, %r405;
	add.s32 	%r1367, %r1366, %r1364;
	add.s32 	%r415, %r1367, 1518500249;
	shf.l.wrap.b32 	%r417, %r407, %r407, 30;
	shf.l.wrap.b32 	%r1368, %r415, %r415, 5;
	// begin inline asm
	lop3.b32 %r410, %r411, %r417, %r413, 202;
	// end inline asm
	add.s32 	%r1369, %r410, %r1327;
	add.s32 	%r1370, %r1369, %r409;
	add.s32 	%r1371, %r1370, %r1368;
	add.s32 	%r419, %r1371, 1518500249;
	shf.l.wrap.b32 	%r421, %r411, %r411, 30;
	shf.l.wrap.b32 	%r1372, %r419, %r419, 5;
	// begin inline asm
	lop3.b32 %r414, %r415, %r421, %r417, 202;
	// end inline asm
	add.s32 	%r1373, %r414, %r1329;
	add.s32 	%r1374, %r1373, %r413;
	add.s32 	%r1375, %r1374, %r1372;
	add.s32 	%r423, %r1375, 1518500249;
	shf.l.wrap.b32 	%r425, %r415, %r415, 30;
	shf.l.wrap.b32 	%r1376, %r423, %r423, 5;
	// begin inline asm
	lop3.b32 %r418, %r419, %r425, %r421, 202;
	// end inline asm
	add.s32 	%r1377, %r418, %r1331;
	add.s32 	%r1378, %r1377, %r417;
	add.s32 	%r1379, %r1378, %r1376;
	add.s32 	%r427, %r1379, 1518500249;
	shf.l.wrap.b32 	%r429, %r419, %r419, 30;
	shf.l.wrap.b32 	%r1380, %r427, %r427, 5;
	// begin inline asm
	lop3.b32 %r422, %r423, %r429, %r425, 202;
	// end inline asm
	add.s32 	%r1381, %r422, %r1333;
	add.s32 	%r1382, %r1381, %r421;
	add.s32 	%r1383, %r1382, %r1380;
	add.s32 	%r431, %r1383, 1518500249;
	shf.l.wrap.b32 	%r433, %r423, %r423, 30;
	shf.l.wrap.b32 	%r1384, %r431, %r431, 5;
	// begin inline asm
	lop3.b32 %r426, %r427, %r433, %r429, 202;
	// end inline asm
	add.s32 	%r1385, %r426, %r1335;
	add.s32 	%r1386, %r1385, %r425;
	add.s32 	%r1387, %r1386, %r1384;
	add.s32 	%r435, %r1387, 1518500249;
	shf.l.wrap.b32 	%r437, %r427, %r427, 30;
	shf.l.wrap.b32 	%r1388, %r435, %r435, 5;
	// begin inline asm
	lop3.b32 %r430, %r431, %r437, %r433, 202;
	// end inline asm
	add.s32 	%r1389, %r430, %r1337;
	add.s32 	%r1390, %r1389, %r429;
	add.s32 	%r1391, %r1390, %r1388;
	add.s32 	%r439, %r1391, 1518500249;
	shf.l.wrap.b32 	%r441, %r431, %r431, 30;
	shf.l.wrap.b32 	%r1392, %r439, %r439, 5;
	// begin inline asm
	lop3.b32 %r434, %r435, %r441, %r437, 202;
	// end inline asm
	add.s32 	%r1393, %r434, %r1339;
	add.s32 	%r1394, %r1393, %r433;
	add.s32 	%r1395, %r1394, %r1392;
	add.s32 	%r443, %r1395, 1518500249;
	shf.l.wrap.b32 	%r445, %r435, %r435, 30;
	shf.l.wrap.b32 	%r1396, %r443, %r443, 5;
	// begin inline asm
	lop3.b32 %r438, %r439, %r445, %r441, 202;
	// end inline asm
	xor.b32  	%r1397, %r1324, %r1334;
	xor.b32  	%r1398, %r1397, %r1313;
	xor.b32  	%r1399, %r1398, %r1309;
	shf.l.wrap.b32 	%r1400, %r1399, %r1399, 1;
	add.s32 	%r1401, %r438, %r1400;
	add.s32 	%r1402, %r1401, %r437;
	add.s32 	%r1403, %r1402, %r1396;
	add.s32 	%r447, %r1403, 1518500249;
	shf.l.wrap.b32 	%r449, %r439, %r439, 30;
	shf.l.wrap.b32 	%r1404, %r447, %r447, 5;
	// begin inline asm
	lop3.b32 %r442, %r443, %r449, %r445, 202;
	// end inline asm
	xor.b32  	%r1405, %r1326, %r1336;
	xor.b32  	%r1406, %r1405, %r1315;
	xor.b32  	%r1407, %r1406, %r1311;
	shf.l.wrap.b32 	%r1408, %r1407, %r1407, 1;
	add.s32 	%r1409, %r442, %r1408;
	add.s32 	%r1410, %r1409, %r441;
	add.s32 	%r1411, %r1410, %r1404;
	add.s32 	%r451, %r1411, 1518500249;
	shf.l.wrap.b32 	%r453, %r443, %r443, 30;
	shf.l.wrap.b32 	%r1412, %r451, %r451, 5;
	// begin inline asm
	lop3.b32 %r446, %r447, %r453, %r449, 202;
	// end inline asm
	xor.b32  	%r1413, %r1328, %r1338;
	xor.b32  	%r1414, %r1413, %r1317;
	xor.b32  	%r1415, %r1414, %r1313;
	shf.l.wrap.b32 	%r1416, %r1415, %r1415, 1;
	add.s32 	%r1417, %r446, %r1416;
	add.s32 	%r1418, %r1417, %r445;
	add.s32 	%r1419, %r1418, %r1412;
	add.s32 	%r455, %r1419, 1518500249;
	shf.l.wrap.b32 	%r457, %r447, %r447, 30;
	shf.l.wrap.b32 	%r1420, %r455, %r455, 5;
	// begin inline asm
	lop3.b32 %r450, %r451, %r457, %r453, 202;
	// end inline asm
	xor.b32  	%r1421, %r1331, %r1400;
	xor.b32  	%r1422, %r1421, %r1319;
	xor.b32  	%r1423, %r1422, %r1315;
	shf.l.wrap.b32 	%r1424, %r1423, %r1423, 1;
	add.s32 	%r1425, %r450, %r1424;
	add.s32 	%r1426, %r1425, %r449;
	add.s32 	%r1427, %r1426, %r1420;
	add.s32 	%r459, %r1427, 1518500249;
	shf.l.wrap.b32 	%r461, %r451, %r451, 30;
	shf.l.wrap.b32 	%r1428, %r459, %r459, 5;
	// begin inline asm
	lop3.b32 %r454, %r455, %r461, %r457, 150;
	// end inline asm
	xor.b32  	%r1429, %r1333, %r1408;
	xor.b32  	%r1430, %r1429, %r1321;
	xor.b32  	%r1431, %r1430, %r1317;
	shf.l.wrap.b32 	%r1432, %r1431, %r1431, 1;
	add.s32 	%r1433, %r454, %r1432;
	add.s32 	%r1434, %r1433, %r453;
	add.s32 	%r1435, %r1434, %r1428;
	add.s32 	%r463, %r1435, 1859775393;
	shf.l.wrap.b32 	%r465, %r455, %r455, 30;
	shf.l.wrap.b32 	%r1436, %r463, %r463, 5;
	// begin inline asm
	lop3.b32 %r458, %r459, %r465, %r461, 150;
	// end inline asm
	xor.b32  	%r1437, %r1335, %r1416;
	xor.b32  	%r1438, %r1437, %r1323;
	xor.b32  	%r1439, %r1438, %r1319;
	shf.l.wrap.b32 	%r1440, %r1439, %r1439, 1;
	add.s32 	%r1441, %r458, %r1440;
	add.s32 	%r1442, %r1441, %r457;
	add.s32 	%r1443, %r1442, %r1436;
	add.s32 	%r467, %r1443, 1859775393;
	shf.l.wrap.b32 	%r469, %r459, %r459, 30;
	shf.l.wrap.b32 	%r1444, %r467, %r467, 5;
	// begin inline asm
	lop3.b32 %r462, %r463, %r469, %r465, 150;
	// end inline asm
	xor.b32  	%r1445, %r1337, %r1424;
	xor.b32  	%r1446, %r1445, %r1325;
	xor.b32  	%r1447, %r1446, %r1321;
	shf.l.wrap.b32 	%r1448, %r1447, %r1447, 1;
	add.s32 	%r1449, %r462, %r1448;
	add.s32 	%r1450, %r1449, %r461;
	add.s32 	%r1451, %r1450, %r1444;
	add.s32 	%r471, %r1451, 1859775393;
	shf.l.wrap.b32 	%r473, %r463, %r463, 30;
	shf.l.wrap.b32 	%r1452, %r471, %r471, 5;
	// begin inline asm
	lop3.b32 %r466, %r467, %r473, %r469, 150;
	// end inline asm
	xor.b32  	%r1453, %r1339, %r1432;
	xor.b32  	%r1454, %r1453, %r1327;
	xor.b32  	%r1455, %r1454, %r1323;
	shf.l.wrap.b32 	%r1456, %r1455, %r1455, 1;
	add.s32 	%r1457, %r466, %r1456;
	add.s32 	%r1458, %r1457, %r465;
	add.s32 	%r1459, %r1458, %r1452;
	add.s32 	%r475, %r1459, 1859775393;
	shf.l.wrap.b32 	%r477, %r467, %r467, 30;
	shf.l.wrap.b32 	%r1460, %r475, %r475, 5;
	// begin inline asm
	lop3.b32 %r470, %r471, %r477, %r473, 150;
	// end inline asm
	xor.b32  	%r1461, %r1440, %r1400;
	xor.b32  	%r1462, %r1461, %r1329;
	xor.b32  	%r1463, %r1462, %r1325;
	shf.l.wrap.b32 	%r1464, %r1463, %r1463, 1;
	add.s32 	%r1465, %r470, %r1464;
	add.s32 	%r1466, %r1465, %r469;
	add.s32 	%r1467, %r1466, %r1460;
	add.s32 	%r479, %r1467, 1859775393;
	shf.l.wrap.b32 	%r481, %r471, %r471, 30;
	shf.l.wrap.b32 	%r1468, %r479, %r479, 5;
	// begin inline asm
	lop3.b32 %r474, %r475, %r481, %r477, 150;
	// end inline asm
	xor.b32  	%r1469, %r1448, %r1408;
	xor.b32  	%r1470, %r1469, %r1331;
	xor.b32  	%r1471, %r1470, %r1327;
	shf.l.wrap.b32 	%r1472, %r1471, %r1471, 1;
	add.s32 	%r1473, %r474, %r1472;
	add.s32 	%r1474, %r1473, %r473;
	add.s32 	%r1475, %r1474, %r1468;
	add.s32 	%r483, %r1475, 1859775393;
	shf.l.wrap.b32 	%r485, %r475, %r475, 30;
	shf.l.wrap.b32 	%r1476, %r483, %r483, 5;
	// begin inline asm
	lop3.b32 %r478, %r479, %r485, %r481, 150;
	// end inline asm
	xor.b32  	%r1477, %r1456, %r1416;
	xor.b32  	%r1478, %r1477, %r1333;
	xor.b32  	%r1479, %r1478, %r1329;
	shf.l.wrap.b32 	%r1480, %r1479, %r1479, 1;
	add.s32 	%r1481, %r478, %r1480;
	add.s32 	%r1482, %r1481, %r477;
	add.s32 	%r1483, %r1482, %r1476;
	add.s32 	%r487, %r1483, 1859775393;
	shf.l.wrap.b32 	%r489, %r479, %r479, 30;
	shf.l.wrap.b32 	%r1484, %r487, %r487, 5;
	// begin inline asm
	lop3.b32 %r482, %r483, %r489, %r485, 150;
	// end inline asm
	xor.b32  	%r1485, %r1464, %r1424;
	xor.b32  	%r1486, %r1485, %r1335;
	xor.b32  	%r1487, %r1486, %r1331;
	shf.l.wrap.b32 	%r1488, %r1487, %r1487, 1;
	add.s32 	%r1489, %r482, %r1488;
	add.s32 	%r1490, %r1489, %r481;
	add.s32 	%r1491, %r1490, %r1484;
	add.s32 	%r491, %r1491, 1859775393;
	shf.l.wrap.b32 	%r493, %r483, %r483, 30;
	shf.l.wrap.b32 	%r1492, %r491, %r491, 5;
	// begin inline asm
	lop3.b32 %r486, %r487, %r493, %r489, 150;
	// end inline asm
	xor.b32  	%r1493, %r1472, %r1432;
	xor.b32  	%r1494, %r1493, %r1337;
	xor.b32  	%r1495, %r1494, %r1333;
	shf.l.wrap.b32 	%r1496, %r1495, %r1495, 1;
	add.s32 	%r1497, %r486, %r1496;
	add.s32 	%r1498, %r1497, %r485;
	add.s32 	%r1499, %r1498, %r1492;
	add.s32 	%r495, %r1499, 1859775393;
	shf.l.wrap.b32 	%r497, %r487, %r487, 30;
	shf.l.wrap.b32 	%r1500, %r495, %r495, 5;
	// begin inline asm
	lop3.b32 %r490, %r491, %r497, %r493, 150;
	// end inline asm
	xor.b32  	%r1501, %r1480, %r1440;
	xor.b32  	%r1502, %r1501, %r1339;
	xor.b32  	%r1503, %r1502, %r1335;
	shf.l.wrap.b32 	%r1504, %r1503, %r1503, 1;
	add.s32 	%r1505, %r490, %r1504;
	add.s32 	%r1506, %r1505, %r489;
	add.s32 	%r1507, %r1506, %r1500;
	add.s32 	%r499, %r1507, 1859775393;
	shf.l.wrap.b32 	%r501, %r491, %r491, 30;
	shf.l.wrap.b32 	%r1508, %r499, %r499, 5;
	// begin inline asm
	lop3.b32 %r494, %r495, %r501, %r497, 150;
	// end inline asm
	xor.b32  	%r1509, %r1448, %r1400;
	xor.b32  	%r1510, %r1509, %r1488;
	xor.b32  	%r1511, %r1510, %r1337;
	shf.l.wrap.b32 	%r1512, %r1511, %r1511, 1;
	add.s32 	%r1513, %r494, %r1512;
	add.s32 	%r1514, %r1513, %r493;
	add.s32 	%r1515, %r1514, %r1508;
	add.s32 	%r503, %r1515, 1859775393;
	shf.l.wrap.b32 	%r505, %r495, %r495, 30;
	shf.l.wrap.b32 	%r1516, %r503, %r503, 5;
	// begin inline asm
	lop3.b32 %r498, %r499, %r505, %r501, 150;
	// end inline asm
	xor.b32  	%r1517, %r1456, %r1408;
	xor.b32  	%r1518, %r1517, %r1496;
	xor.b32  	%r1519, %r1518, %r1339;
	shf.l.wrap.b32 	%r1520, %r1519, %r1519, 1;
	add.s32 	%r1521, %r498, %r1520;
	add.s32 	%r1522, %r1521, %r497;
	add.s32 	%r1523, %r1522, %r1516;
	add.s32 	%r507, %r1523, 1859775393;
	shf.l.wrap.b32 	%r509, %r499, %r499, 30;
	shf.l.wrap.b32 	%r1524, %r507, %r507, 5;
	// begin inline asm
	lop3.b32 %r502, %r503, %r509, %r505, 150;
	// end inline asm
	xor.b32  	%r1525, %r1416, %r1400;
	xor.b32  	%r1526, %r1525, %r1464;
	xor.b32  	%r1527, %r1526, %r1504;
	shf.l.wrap.b32 	%r1528, %r1527, %r1527, 1;
	add.s32 	%r1529, %r502, %r1528;
	add.s32 	%r1530, %r1529, %r501;
	add.s32 	%r1531, %r1530, %r1524;
	add.s32 	%r511, %r1531, 1859775393;
	shf.l.wrap.b32 	%r513, %r503, %r503, 30;
	shf.l.wrap.b32 	%r1532, %r511, %r511, 5;
	// begin inline asm
	lop3.b32 %r506, %r507, %r513, %r509, 150;
	// end inline asm
	xor.b32  	%r1533, %r1424, %r1408;
	xor.b32  	%r1534, %r1533, %r1472;
	xor.b32  	%r1535, %r1534, %r1512;
	shf.l.wrap.b32 	%r1536, %r1535, %r1535, 1;
	add.s32 	%r1537, %r506, %r1536;
	add.s32 	%r1538, %r1537, %r505;
	add.s32 	%r1539, %r1538, %r1532;
	add.s32 	%r515, %r1539, 1859775393;
	shf.l.wrap.b32 	%r517, %r507, %r507, 30;
	shf.l.wrap.b32 	%r1540, %r515, %r515, 5;
	// begin inline asm
	lop3.b32 %r510, %r511, %r517, %r513, 150;
	// end inline asm
	xor.b32  	%r1541, %r1432, %r1416;
	xor.b32  	%r1542, %r1541, %r1480;
	xor.b32  	%r1543, %r1542, %r1520;
	shf.l.wrap.b32 	%r1544, %r1543, %r1543, 1;
	add.s32 	%r1545, %r510, %r1544;
	add.s32 	%r1546, %r1545, %r509;
	add.s32 	%r1547, %r1546, %r1540;
	add.s32 	%r519, %r1547, 1859775393;
	shf.l.wrap.b32 	%r521, %r511, %r511, 30;
	shf.l.wrap.b32 	%r1548, %r519, %r519, 5;
	// begin inline asm
	lop3.b32 %r514, %r515, %r521, %r517, 150;
	// end inline asm
	xor.b32  	%r1549, %r1440, %r1424;
	xor.b32  	%r1550, %r1549, %r1488;
	xor.b32  	%r1551, %r1550, %r1528;
	shf.l.wrap.b32 	%r1552, %r1551, %r1551, 1;
	add.s32 	%r1553, %r514, %r1552;
	add.s32 	%r1554, %r1553, %r513;
	add.s32 	%r1555, %r1554, %r1548;
	add.s32 	%r523, %r1555, 1859775393;
	shf.l.wrap.b32 	%r525, %r515, %r515, 30;
	shf.l.wrap.b32 	%r1556, %r523, %r523, 5;
	// begin inline asm
	lop3.b32 %r518, %r519, %r525, %r521, 150;
	// end inline asm
	xor.b32  	%r1557, %r1448, %r1432;
	xor.b32  	%r1558, %r1557, %r1496;
	xor.b32  	%r1559, %r1558, %r1536;
	shf.l.wrap.b32 	%r1560, %r1559, %r1559, 1;
	add.s32 	%r1561, %r518, %r1560;
	add.s32 	%r1562, %r1561, %r517;
	add.s32 	%r1563, %r1562, %r1556;
	add.s32 	%r527, %r1563, 1859775393;
	shf.l.wrap.b32 	%r529, %r519, %r519, 30;
	shf.l.wrap.b32 	%r1564, %r527, %r527, 5;
	// begin inline asm
	lop3.b32 %r522, %r523, %r529, %r525, 150;
	// end inline asm
	xor.b32  	%r1565, %r1456, %r1440;
	xor.b32  	%r1566, %r1565, %r1504;
	xor.b32  	%r1567, %r1566, %r1544;
	shf.l.wrap.b32 	%r1568, %r1567, %r1567, 1;
	add.s32 	%r1569, %r522, %r1568;
	add.s32 	%r1570, %r1569, %r521;
	add.s32 	%r1571, %r1570, %r1564;
	add.s32 	%r531, %r1571, 1859775393;
	shf.l.wrap.b32 	%r533, %r523, %r523, 30;
	shf.l.wrap.b32 	%r1572, %r531, %r531, 5;
	// begin inline asm
	lop3.b32 %r526, %r527, %r533, %r529, 150;
	// end inline asm
	xor.b32  	%r1573, %r1464, %r1448;
	xor.b32  	%r1574, %r1573, %r1512;
	xor.b32  	%r1575, %r1574, %r1552;
	shf.l.wrap.b32 	%r1576, %r1575, %r1575, 1;
	add.s32 	%r1577, %r526, %r1576;
	add.s32 	%r1578, %r1577, %r525;
	add.s32 	%r1579, %r1578, %r1572;
	add.s32 	%r535, %r1579, 1859775393;
	shf.l.wrap.b32 	%r537, %r527, %r527, 30;
	shf.l.wrap.b32 	%r1580, %r535, %r535, 5;
	// begin inline asm
	lop3.b32 %r530, %r531, %r537, %r533, 150;
	// end inline asm
	xor.b32  	%r1581, %r1472, %r1456;
	xor.b32  	%r1582, %r1581, %r1520;
	xor.b32  	%r1583, %r1582, %r1560;
	shf.l.wrap.b32 	%r1584, %r1583, %r1583, 1;
	add.s32 	%r1585, %r530, %r1584;
	add.s32 	%r1586, %r1585, %r529;
	add.s32 	%r1587, %r1586, %r1580;
	add.s32 	%r539, %r1587, 1859775393;
	shf.l.wrap.b32 	%r541, %r531, %r531, 30;
	shf.l.wrap.b32 	%r1588, %r539, %r539, 5;
	// begin inline asm
	lop3.b32 %r534, %r535, %r541, %r537, 232;
	// end inline asm
	xor.b32  	%r1589, %r1480, %r1464;
	xor.b32  	%r1590, %r1589, %r1528;
	xor.b32  	%r1591, %r1590, %r1568;
	shf.l.wrap.b32 	%r1592, %r1591, %r1591, 1;
	add.s32 	%r1593, %r534, %r1592;
	add.s32 	%r1594, %r1593, %r533;
	add.s32 	%r1595, %r1594, %r1588;
	add.s32 	%r543, %r1595, -1894007588;
	shf.l.wrap.b32 	%r545, %r535, %r535, 30;
	shf.l.wrap.b32 	%r1596, %r543, %r543, 5;
	// begin inline asm
	lop3.b32 %r538, %r539, %r545, %r541, 232;
	// end inline asm
	xor.b32  	%r1597, %r1488, %r1472;
	xor.b32  	%r1598, %r1597, %r1536;
	xor.b32  	%r1599, %r1598, %r1576;
	shf.l.wrap.b32 	%r1600, %r1599, %r1599, 1;
	add.s32 	%r1601, %r538, %r1600;
	add.s32 	%r1602, %r1601, %r537;
	add.s32 	%r1603, %r1602, %r1596;
	add.s32 	%r547, %r1603, -1894007588;
	shf.l.wrap.b32 	%r549, %r539, %r539, 30;
	shf.l.wrap.b32 	%r1604, %r547, %r547, 5;
	// begin inline asm
	lop3.b32 %r542, %r543, %r549, %r545, 232;
	// end inline asm
	xor.b32  	%r1605, %r1496, %r1480;
	xor.b32  	%r1606, %r1605, %r1544;
	xor.b32  	%r1607, %r1606, %r1584;
	shf.l.wrap.b32 	%r1608, %r1607, %r1607, 1;
	add.s32 	%r1609, %r542, %r1608;
	add.s32 	%r1610, %r1609, %r541;
	add.s32 	%r1611, %r1610, %r1604;
	add.s32 	%r551, %r1611, -1894007588;
	shf.l.wrap.b32 	%r553, %r543, %r543, 30;
	shf.l.wrap.b32 	%r1612, %r551, %r551, 5;
	// begin inline asm
	lop3.b32 %r546, %r547, %r553, %r549, 232;
	// end inline asm
	xor.b32  	%r1613, %r1504, %r1488;
	xor.b32  	%r1614, %r1613, %r1552;
	xor.b32  	%r1615, %r1614, %r1592;
	shf.l.wrap.b32 	%r1616, %r1615, %r1615, 1;
	add.s32 	%r1617, %r546, %r1616;
	add.s32 	%r1618, %r1617, %r545;
	add.s32 	%r1619, %r1618, %r1612;
	add.s32 	%r555, %r1619, -1894007588;
	shf.l.wrap.b32 	%r557, %r547, %r547, 30;
	shf.l.wrap.b32 	%r1620, %r555, %r555, 5;
	// begin inline asm
	lop3.b32 %r550, %r551, %r557, %r553, 232;
	// end inline asm
	xor.b32  	%r1621, %r1512, %r1496;
	xor.b32  	%r1622, %r1621, %r1560;
	xor.b32  	%r1623, %r1622, %r1600;
	shf.l.wrap.b32 	%r1624, %r1623, %r1623, 1;
	add.s32 	%r1625, %r550, %r1624;
	add.s32 	%r1626, %r1625, %r549;
	add.s32 	%r1627, %r1626, %r1620;
	add.s32 	%r559, %r1627, -1894007588;
	shf.l.wrap.b32 	%r561, %r551, %r551, 30;
	shf.l.wrap.b32 	%r1628, %r559, %r559, 5;
	// begin inline asm
	lop3.b32 %r554, %r555, %r561, %r557, 232;
	// end inline asm
	xor.b32  	%r1629, %r1520, %r1504;
	xor.b32  	%r1630, %r1629, %r1568;
	xor.b32  	%r1631, %r1630, %r1608;
	shf.l.wrap.b32 	%r1632, %r1631, %r1631, 1;
	add.s32 	%r1633, %r554, %r1632;
	add.s32 	%r1634, %r1633, %r553;
	add.s32 	%r1635, %r1634, %r1628;
	add.s32 	%r563, %r1635, -1894007588;
	shf.l.wrap.b32 	%r565, %r555, %r555, 30;
	shf.l.wrap.b32 	%r1636, %r563, %r563, 5;
	// begin inline asm
	lop3.b32 %r558, %r559, %r565, %r561, 232;
	// end inline asm
	xor.b32  	%r1637, %r1528, %r1512;
	xor.b32  	%r1638, %r1637, %r1576;
	xor.b32  	%r1639, %r1638, %r1616;
	shf.l.wrap.b32 	%r1640, %r1639, %r1639, 1;
	add.s32 	%r1641, %r558, %r1640;
	add.s32 	%r1642, %r1641, %r557;
	add.s32 	%r1643, %r1642, %r1636;
	add.s32 	%r567, %r1643, -1894007588;
	shf.l.wrap.b32 	%r569, %r559, %r559, 30;
	shf.l.wrap.b32 	%r1644, %r567, %r567, 5;
	// begin inline asm
	lop3.b32 %r562, %r563, %r569, %r565, 232;
	// end inline asm
	xor.b32  	%r1645, %r1536, %r1520;
	xor.b32  	%r1646, %r1645, %r1584;
	xor.b32  	%r1647, %r1646, %r1624;
	shf.l.wrap.b32 	%r1648, %r1647, %r1647, 1;
	add.s32 	%r1649, %r562, %r1648;
	add.s32 	%r1650, %r1649, %r561;
	add.s32 	%r1651, %r1650, %r1644;
	add.s32 	%r571, %r1651, -1894007588;
	shf.l.wrap.b32 	%r573, %r563, %r563, 30;
	shf.l.wrap.b32 	%r1652, %r571, %r571, 5;
	// begin inline asm
	lop3.b32 %r566, %r567, %r573, %r569, 232;
	// end inline asm
	xor.b32  	%r1653, %r1544, %r1528;
	xor.b32  	%r1654, %r1653, %r1592;
	xor.b32  	%r1655, %r1654, %r1632;
	shf.l.wrap.b32 	%r1656, %r1655, %r1655, 1;
	add.s32 	%r1657, %r566, %r1656;
	add.s32 	%r1658, %r1657, %r565;
	add.s32 	%r1659, %r1658, %r1652;
	add.s32 	%r575, %r1659, -1894007588;
	shf.l.wrap.b32 	%r577, %r567, %r567, 30;
	shf.l.wrap.b32 	%r1660, %r575, %r575, 5;
	// begin inline asm
	lop3.b32 %r570, %r571, %r577, %r573, 232;
	// end inline asm
	xor.b32  	%r1661, %r1552, %r1536;
	xor.b32  	%r1662, %r1661, %r1600;
	xor.b32  	%r1663, %r1662, %r1640;
	shf.l.wrap.b32 	%r1664, %r1663, %r1663, 1;
	add.s32 	%r1665, %r570, %r1664;
	add.s32 	%r1666, %r1665, %r569;
	add.s32 	%r1667, %r1666, %r1660;
	add.s32 	%r579, %r1667, -1894007588;
	shf.l.wrap.b32 	%r581, %r571, %r571, 30;
	shf.l.wrap.b32 	%r1668, %r579, %r579, 5;
	// begin inline asm
	lop3.b32 %r574, %r575, %r581, %r577, 232;
	// end inline asm
	xor.b32  	%r1669, %r1560, %r1544;
	xor.b32  	%r1670, %r1669, %r1608;
	xor.b32  	%r1671, %r1670, %r1648;
	shf.l.wrap.b32 	%r1672, %r1671, %r1671, 1;
	add.s32 	%r1673, %r574, %r1672;
	add.s32 	%r1674, %r1673, %r573;
	add.s32 	%r1675, %r1674, %r1668;
	add.s32 	%r583, %r1675, -1894007588;
	shf.l.wrap.b32 	%r585, %r575, %r575, 30;
	shf.l.wrap.b32 	%r1676, %r583, %r583, 5;
	// begin inline asm
	lop3.b32 %r578, %r579, %r585, %r581, 232;
	// end inline asm
	xor.b32  	%r1677, %r1568, %r1552;
	xor.b32  	%r1678, %r1677, %r1616;
	xor.b32  	%r1679, %r1678, %r1656;
	shf.l.wrap.b32 	%r1680, %r1679, %r1679, 1;
	add.s32 	%r1681, %r578, %r1680;
	add.s32 	%r1682, %r1681, %r577;
	add.s32 	%r1683, %r1682, %r1676;
	add.s32 	%r587, %r1683, -1894007588;
	shf.l.wrap.b32 	%r589, %r579, %r579, 30;
	shf.l.wrap.b32 	%r1684, %r587, %r587, 5;
	// begin inline asm
	lop3.b32 %r582, %r583, %r589, %r585, 232;
	// end inline asm
	xor.b32  	%r1685, %r1576, %r1560;
	xor.b32  	%r1686, %r1685, %r1624;
	xor.b32  	%r1687, %r1686, %r1664;
	shf.l.wrap.b32 	%r1688, %r1687, %r1687, 1;
	add.s32 	%r1689, %r582, %r1688;
	add.s32 	%r1690, %r1689, %r581;
	add.s32 	%r1691, %r1690, %r1684;
	add.s32 	%r591, %r1691, -1894007588;
	shf.l.wrap.b32 	%r593, %r583, %r583, 30;
	shf.l.wrap.b32 	%r1692, %r591, %r591, 5;
	// begin inline asm
	lop3.b32 %r586, %r587, %r593, %r589, 232;
	// end inline asm
	xor.b32  	%r1693, %r1584, %r1568;
	xor.b32  	%r1694, %r1693, %r1632;
	xor.b32  	%r1695, %r1694, %r1672;
	shf.l.wrap.b32 	%r1696, %r1695, %r1695, 1;
	add.s32 	%r1697, %r586, %r1696;
	add.s32 	%r1698, %r1697, %r585;
	add.s32 	%r1699, %r1698, %r1692;
	add.s32 	%r595, %r1699, -1894007588;
	shf.l.wrap.b32 	%r597, %r587, %r587, 30;
	shf.l.wrap.b32 	%r1700, %r595, %r595, 5;
	// begin inline asm
	lop3.b32 %r590, %r591, %r597, %r593, 232;
	// end inline asm
	xor.b32  	%r1701, %r1592, %r1576;
	xor.b32  	%r1702, %r1701, %r1640;
	xor.b32  	%r1703, %r1702, %r1680;
	shf.l.wrap.b32 	%r1704, %r1703, %r1703, 1;
	add.s32 	%r1705, %r590, %r1704;
	add.s32 	%r1706, %r1705, %r589;
	add.s32 	%r1707, %r1706, %r1700;
	add.s32 	%r599, %r1707, -1894007588;
	shf.l.wrap.b32 	%r601, %r591, %r591, 30;
	shf.l.wrap.b32 	%r1708, %r599, %r599, 5;
	// begin inline asm
	lop3.b32 %r594, %r595, %r601, %r597, 232;
	// end inline asm
	xor.b32  	%r1709, %r1600, %r1584;
	xor.b32  	%r1710, %r1709, %r1648;
	xor.b32  	%r1711, %r1710, %r1688;
	shf.l.wrap.b32 	%r1712, %r1711, %r1711, 1;
	add.s32 	%r1713, %r594, %r1712;
	add.s32 	%r1714, %r1713, %r593;
	add.s32 	%r1715, %r1714, %r1708;
	add.s32 	%r603, %r1715, -1894007588;
	shf.l.wrap.b32 	%r605, %r595, %r595, 30;
	shf.l.wrap.b32 	%r1716, %r603, %r603, 5;
	// begin inline asm
	lop3.b32 %r598, %r599, %r605, %r601, 232;
	// end inline asm
	xor.b32  	%r1717, %r1608, %r1592;
	xor.b32  	%r1718, %r1717, %r1656;
	xor.b32  	%r1719, %r1718, %r1696;
	shf.l.wrap.b32 	%r1720, %r1719, %r1719, 1;
	add.s32 	%r1721, %r598, %r1720;
	add.s32 	%r1722, %r1721, %r597;
	add.s32 	%r1723, %r1722, %r1716;
	add.s32 	%r607, %r1723, -1894007588;
	shf.l.wrap.b32 	%r609, %r599, %r599, 30;
	shf.l.wrap.b32 	%r1724, %r607, %r607, 5;
	// begin inline asm
	lop3.b32 %r602, %r603, %r609, %r605, 232;
	// end inline asm
	xor.b32  	%r1725, %r1616, %r1600;
	xor.b32  	%r1726, %r1725, %r1664;
	xor.b32  	%r1727, %r1726, %r1704;
	shf.l.wrap.b32 	%r1728, %r1727, %r1727, 1;
	add.s32 	%r1729, %r602, %r1728;
	add.s32 	%r1730, %r1729, %r601;
	add.s32 	%r1731, %r1730, %r1724;
	add.s32 	%r611, %r1731, -1894007588;
	shf.l.wrap.b32 	%r613, %r603, %r603, 30;
	shf.l.wrap.b32 	%r1732, %r611, %r611, 5;
	// begin inline asm
	lop3.b32 %r606, %r607, %r613, %r609, 232;
	// end inline asm
	xor.b32  	%r1733, %r1624, %r1608;
	xor.b32  	%r1734, %r1733, %r1672;
	xor.b32  	%r1735, %r1734, %r1712;
	shf.l.wrap.b32 	%r1736, %r1735, %r1735, 1;
	add.s32 	%r1737, %r606, %r1736;
	add.s32 	%r1738, %r1737, %r605;
	add.s32 	%r1739, %r1738, %r1732;
	add.s32 	%r615, %r1739, -1894007588;
	shf.l.wrap.b32 	%r617, %r607, %r607, 30;
	shf.l.wrap.b32 	%r1740, %r615, %r615, 5;
	// begin inline asm
	lop3.b32 %r610, %r611, %r617, %r613, 232;
	// end inline asm
	xor.b32  	%r1741, %r1632, %r1616;
	xor.b32  	%r1742, %r1741, %r1680;
	xor.b32  	%r1743, %r1742, %r1720;
	shf.l.wrap.b32 	%r1744, %r1743, %r1743, 1;
	add.s32 	%r1745, %r610, %r1744;
	add.s32 	%r1746, %r1745, %r609;
	add.s32 	%r1747, %r1746, %r1740;
	add.s32 	%r619, %r1747, -1894007588;
	shf.l.wrap.b32 	%r621, %r611, %r611, 30;
	shf.l.wrap.b32 	%r1748, %r619, %r619, 5;
	// begin inline asm
	lop3.b32 %r614, %r615, %r621, %r617, 150;
	// end inline asm
	xor.b32  	%r1749, %r1640, %r1624;
	xor.b32  	%r1750, %r1749, %r1688;
	xor.b32  	%r1751, %r1750, %r1728;
	shf.l.wrap.b32 	%r1752, %r1751, %r1751, 1;
	add.s32 	%r1753, %r614, %r1752;
	add.s32 	%r1754, %r1753, %r613;
	add.s32 	%r1755, %r1754, %r1748;
	add.s32 	%r623, %r1755, -899497514;
	shf.l.wrap.b32 	%r625, %r615, %r615, 30;
	shf.l.wrap.b32 	%r1756, %r623, %r623, 5;
	// begin inline asm
	lop3.b32 %r618, %r619, %r625, %r621, 150;
	// end inline asm
	xor.b32  	%r1757, %r1648, %r1632;
	xor.b32  	%r1758, %r1757, %r1696;
	xor.b32  	%r1759, %r1758, %r1736;
	shf.l.wrap.b32 	%r1760, %r1759, %r1759, 1;
	add.s32 	%r1761, %r618, %r1760;
	add.s32 	%r1762, %r1761, %r617;
	add.s32 	%r1763, %r1762, %r1756;
	add.s32 	%r627, %r1763, -899497514;
	shf.l.wrap.b32 	%r629, %r619, %r619, 30;
	shf.l.wrap.b32 	%r1764, %r627, %r627, 5;
	// begin inline asm
	lop3.b32 %r622, %r623, %r629, %r625, 150;
	// end inline asm
	xor.b32  	%r1765, %r1656, %r1640;
	xor.b32  	%r1766, %r1765, %r1704;
	xor.b32  	%r1767, %r1766, %r1744;
	shf.l.wrap.b32 	%r1768, %r1767, %r1767, 1;
	add.s32 	%r1769, %r622, %r1768;
	add.s32 	%r1770, %r1769, %r621;
	add.s32 	%r1771, %r1770, %r1764;
	add.s32 	%r631, %r1771, -899497514;
	shf.l.wrap.b32 	%r633, %r623, %r623, 30;
	shf.l.wrap.b32 	%r1772, %r631, %r631, 5;
	// begin inline asm
	lop3.b32 %r626, %r627, %r633, %r629, 150;
	// end inline asm
	xor.b32  	%r1773, %r1664, %r1648;
	xor.b32  	%r1774, %r1773, %r1712;
	xor.b32  	%r1775, %r1774, %r1752;
	shf.l.wrap.b32 	%r1776, %r1775, %r1775, 1;
	add.s32 	%r1777, %r626, %r1776;
	add.s32 	%r1778, %r1777, %r625;
	add.s32 	%r1779, %r1778, %r1772;
	add.s32 	%r635, %r1779, -899497514;
	shf.l.wrap.b32 	%r637, %r627, %r627, 30;
	shf.l.wrap.b32 	%r1780, %r635, %r635, 5;
	// begin inline asm
	lop3.b32 %r630, %r631, %r637, %r633, 150;
	// end inline asm
	xor.b32  	%r1781, %r1672, %r1656;
	xor.b32  	%r1782, %r1781, %r1720;
	xor.b32  	%r1783, %r1782, %r1760;
	shf.l.wrap.b32 	%r1784, %r1783, %r1783, 1;
	add.s32 	%r1785, %r630, %r1784;
	add.s32 	%r1786, %r1785, %r629;
	add.s32 	%r1787, %r1786, %r1780;
	add.s32 	%r639, %r1787, -899497514;
	shf.l.wrap.b32 	%r641, %r631, %r631, 30;
	shf.l.wrap.b32 	%r1788, %r639, %r639, 5;
	// begin inline asm
	lop3.b32 %r634, %r635, %r641, %r637, 150;
	// end inline asm
	xor.b32  	%r1789, %r1680, %r1664;
	xor.b32  	%r1790, %r1789, %r1728;
	xor.b32  	%r1791, %r1790, %r1768;
	shf.l.wrap.b32 	%r1792, %r1791, %r1791, 1;
	add.s32 	%r1793, %r634, %r1792;
	add.s32 	%r1794, %r1793, %r633;
	add.s32 	%r1795, %r1794, %r1788;
	add.s32 	%r643, %r1795, -899497514;
	shf.l.wrap.b32 	%r645, %r635, %r635, 30;
	shf.l.wrap.b32 	%r1796, %r643, %r643, 5;
	// begin inline asm
	lop3.b32 %r638, %r639, %r645, %r641, 150;
	// end inline asm
	xor.b32  	%r1797, %r1688, %r1672;
	xor.b32  	%r1798, %r1797, %r1736;
	xor.b32  	%r1799, %r1798, %r1776;
	shf.l.wrap.b32 	%r1800, %r1799, %r1799, 1;
	add.s32 	%r1801, %r638, %r1800;
	add.s32 	%r1802, %r1801, %r637;
	add.s32 	%r1803, %r1802, %r1796;
	add.s32 	%r647, %r1803, -899497514;
	shf.l.wrap.b32 	%r649, %r639, %r639, 30;
	shf.l.wrap.b32 	%r1804, %r647, %r647, 5;
	// begin inline asm
	lop3.b32 %r642, %r643, %r649, %r645, 150;
	// end inline asm
	xor.b32  	%r1805, %r1696, %r1680;
	xor.b32  	%r1806, %r1805, %r1744;
	xor.b32  	%r1807, %r1806, %r1784;
	shf.l.wrap.b32 	%r1808, %r1807, %r1807, 1;
	add.s32 	%r1809, %r642, %r1808;
	add.s32 	%r1810, %r1809, %r641;
	add.s32 	%r1811, %r1810, %r1804;
	add.s32 	%r651, %r1811, -899497514;
	shf.l.wrap.b32 	%r653, %r643, %r643, 30;
	shf.l.wrap.b32 	%r1812, %r651, %r651, 5;
	// begin inline asm
	lop3.b32 %r646, %r647, %r653, %r649, 150;
	// end inline asm
	xor.b32  	%r1813, %r1704, %r1688;
	xor.b32  	%r1814, %r1813, %r1752;
	xor.b32  	%r1815, %r1814, %r1792;
	shf.l.wrap.b32 	%r1816, %r1815, %r1815, 1;
	add.s32 	%r1817, %r646, %r1816;
	add.s32 	%r1818, %r1817, %r645;
	add.s32 	%r1819, %r1818, %r1812;
	add.s32 	%r655, %r1819, -899497514;
	shf.l.wrap.b32 	%r657, %r647, %r647, 30;
	shf.l.wrap.b32 	%r1820, %r655, %r655, 5;
	// begin inline asm
	lop3.b32 %r650, %r651, %r657, %r653, 150;
	// end inline asm
	xor.b32  	%r1821, %r1712, %r1696;
	xor.b32  	%r1822, %r1821, %r1760;
	xor.b32  	%r1823, %r1822, %r1800;
	shf.l.wrap.b32 	%r1824, %r1823, %r1823, 1;
	add.s32 	%r1825, %r650, %r1824;
	add.s32 	%r1826, %r1825, %r649;
	add.s32 	%r1827, %r1826, %r1820;
	add.s32 	%r659, %r1827, -899497514;
	shf.l.wrap.b32 	%r661, %r651, %r651, 30;
	shf.l.wrap.b32 	%r1828, %r659, %r659, 5;
	// begin inline asm
	lop3.b32 %r654, %r655, %r661, %r657, 150;
	// end inline asm
	xor.b32  	%r1829, %r1720, %r1704;
	xor.b32  	%r1830, %r1829, %r1768;
	xor.b32  	%r1831, %r1830, %r1808;
	shf.l.wrap.b32 	%r1832, %r1831, %r1831, 1;
	add.s32 	%r1833, %r654, %r1832;
	add.s32 	%r1834, %r1833, %r653;
	add.s32 	%r1835, %r1834, %r1828;
	add.s32 	%r663, %r1835, -899497514;
	shf.l.wrap.b32 	%r665, %r655, %r655, 30;
	shf.l.wrap.b32 	%r1836, %r663, %r663, 5;
	// begin inline asm
	lop3.b32 %r658, %r659, %r665, %r661, 150;
	// end inline asm
	xor.b32  	%r1837, %r1728, %r1712;
	xor.b32  	%r1838, %r1837, %r1776;
	xor.b32  	%r1839, %r1838, %r1816;
	shf.l.wrap.b32 	%r1840, %r1839, %r1839, 1;
	add.s32 	%r1841, %r658, %r1840;
	add.s32 	%r1842, %r1841, %r657;
	add.s32 	%r1843, %r1842, %r1836;
	add.s32 	%r667, %r1843, -899497514;
	shf.l.wrap.b32 	%r669, %r659, %r659, 30;
	shf.l.wrap.b32 	%r1844, %r667, %r667, 5;
	// begin inline asm
	lop3.b32 %r662, %r663, %r669, %r665, 150;
	// end inline asm
	xor.b32  	%r1845, %r1736, %r1720;
	xor.b32  	%r1846, %r1845, %r1784;
	xor.b32  	%r1847, %r1846, %r1824;
	shf.l.wrap.b32 	%r1848, %r1847, %r1847, 1;
	add.s32 	%r1849, %r662, %r1848;
	add.s32 	%r1850, %r1849, %r661;
	add.s32 	%r1851, %r1850, %r1844;
	add.s32 	%r671, %r1851, -899497514;
	shf.l.wrap.b32 	%r673, %r663, %r663, 30;
	shf.l.wrap.b32 	%r1852, %r671, %r671, 5;
	// begin inline asm
	lop3.b32 %r666, %r667, %r673, %r669, 150;
	// end inline asm
	xor.b32  	%r1853, %r1744, %r1728;
	xor.b32  	%r1854, %r1853, %r1792;
	xor.b32  	%r1855, %r1854, %r1832;
	shf.l.wrap.b32 	%r1856, %r1855, %r1855, 1;
	add.s32 	%r1857, %r666, %r1856;
	add.s32 	%r1858, %r1857, %r665;
	add.s32 	%r1859, %r1858, %r1852;
	add.s32 	%r675, %r1859, -899497514;
	shf.l.wrap.b32 	%r677, %r667, %r667, 30;
	shf.l.wrap.b32 	%r1860, %r675, %r675, 5;
	// begin inline asm
	lop3.b32 %r670, %r671, %r677, %r673, 150;
	// end inline asm
	xor.b32  	%r1861, %r1752, %r1736;
	xor.b32  	%r1862, %r1861, %r1800;
	xor.b32  	%r1863, %r1862, %r1840;
	shf.l.wrap.b32 	%r1864, %r1863, %r1863, 1;
	add.s32 	%r1865, %r670, %r1864;
	add.s32 	%r1866, %r1865, %r669;
	add.s32 	%r1867, %r1866, %r1860;
	add.s32 	%r679, %r1867, -899497514;
	shf.l.wrap.b32 	%r681, %r671, %r671, 30;
	shf.l.wrap.b32 	%r1868, %r679, %r679, 5;
	// begin inline asm
	lop3.b32 %r674, %r675, %r681, %r677, 150;
	// end inline asm
	xor.b32  	%r1869, %r1760, %r1744;
	xor.b32  	%r1870, %r1869, %r1808;
	xor.b32  	%r1871, %r1870, %r1848;
	shf.l.wrap.b32 	%r1872, %r1871, %r1871, 1;
	add.s32 	%r1873, %r674, %r1872;
	add.s32 	%r1874, %r1873, %r673;
	add.s32 	%r1875, %r1874, %r1868;
	add.s32 	%r683, %r1875, -899497514;
	shf.l.wrap.b32 	%r685, %r675, %r675, 30;
	shf.l.wrap.b32 	%r1876, %r683, %r683, 5;
	// begin inline asm
	lop3.b32 %r678, %r679, %r685, %r681, 150;
	// end inline asm
	xor.b32  	%r1877, %r1768, %r1752;
	xor.b32  	%r1878, %r1877, %r1816;
	xor.b32  	%r1879, %r1878, %r1856;
	shf.l.wrap.b32 	%r1880, %r1879, %r1879, 1;
	add.s32 	%r1881, %r678, %r1880;
	add.s32 	%r1882, %r1881, %r677;
	add.s32 	%r1883, %r1882, %r1876;
	add.s32 	%r687, %r1883, -899497514;
	shf.l.wrap.b32 	%r689, %r679, %r679, 30;
	shf.l.wrap.b32 	%r1884, %r687, %r687, 5;
	// begin inline asm
	lop3.b32 %r682, %r683, %r689, %r685, 150;
	// end inline asm
	xor.b32  	%r1885, %r1776, %r1760;
	xor.b32  	%r1886, %r1885, %r1824;
	xor.b32  	%r1887, %r1886, %r1864;
	shf.l.wrap.b32 	%r1888, %r1887, %r1887, 1;
	add.s32 	%r1889, %r682, %r1888;
	add.s32 	%r1890, %r1889, %r681;
	add.s32 	%r1891, %r1890, %r1884;
	add.s32 	%r691, %r1891, -899497514;
	shf.l.wrap.b32 	%r693, %r683, %r683, 30;
	shf.l.wrap.b32 	%r1892, %r691, %r691, 5;
	// begin inline asm
	lop3.b32 %r686, %r687, %r693, %r689, 150;
	// end inline asm
	xor.b32  	%r1893, %r1784, %r1768;
	xor.b32  	%r1894, %r1893, %r1832;
	xor.b32  	%r1895, %r1894, %r1872;
	shf.l.wrap.b32 	%r1896, %r1895, %r1895, 1;
	add.s32 	%r1897, %r686, %r1896;
	add.s32 	%r1898, %r1897, %r685;
	add.s32 	%r1899, %r1898, %r1892;
	add.s32 	%r1900, %r1899, -899497514;
	shf.l.wrap.b32 	%r692, %r687, %r687, 30;
	shf.l.wrap.b32 	%r1901, %r1900, %r1900, 5;
	// begin inline asm
	lop3.b32 %r690, %r691, %r692, %r693, 150;
	// end inline asm
	xor.b32  	%r1902, %r1792, %r1776;
	xor.b32  	%r1903, %r1902, %r1840;
	xor.b32  	%r1904, %r1903, %r1880;
	shf.l.wrap.b32 	%r1905, %r1904, %r1904, 1;
	shf.l.wrap.b32 	%r7, %r691, %r691, 30;
	add.s32 	%r1906, %r690, %r1905;
	add.s32 	%r1907, %r1906, %r689;
	add.s32 	%r1908, %r1907, %r1901;
	add.s32 	%r8, %r1908, 833086679;
	add.s32 	%r9, %r1899, -1171231393;
	add.s32 	%r10, %r7, -1732584194;
	add.s32 	%r11, %r692, 271733878;
	add.s32 	%r12, %r693, -1009589776;
	st.global.u32 	[%rd14+40], %r8;
	st.global.u32 	[%rd14+44], %r9;
	st.global.u32 	[%rd14+48], %r10;
	st.global.u32 	[%rd14+52], %r11;
	st.global.u32 	[%rd14+56], %r12;
	ld.global.u32 	%r13, [%rd5];
	setp.lt.u32 	%p1, %r13, 64;
	@%p1 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;

$L__BB0_3:
	mov.u32 	%r5630, 0;
	mov.u32 	%r5625, %r13;
	bra.uni 	$L__BB0_4;

$L__BB0_1:
	mov.u32 	%r1909, 0;
	mov.u32 	%r5625, %r13;
	mov.u32 	%r5618, %r1909;

$L__BB0_2:
	cvt.u64.u32 	%rd15, %r5618;
	add.s64 	%rd16, %rd5, %rd15;
	ld.global.u32 	%r2230, [%rd16+12];
	mov.u32 	%r2231, 291;
	ld.global.u32 	%r2233, [%rd16+16];
	ld.global.u32 	%r2234, [%rd16+20];
	ld.global.u32 	%r2235, [%rd16+24];
	prmt.b32 	%r2236, %r2235, %r1909, %r2231;
	prmt.b32 	%r2237, %r2234, %r1909, %r2231;
	prmt.b32 	%r2238, %r2233, %r1909, %r2231;
	prmt.b32 	%r2239, %r2230, %r1909, %r2231;
	st.local.v4.u32 	[%rd1], {%r2239, %r2238, %r2237, %r2236};
	ld.global.u32 	%r2240, [%rd16+28];
	ld.global.u32 	%r2241, [%rd16+32];
	ld.global.u32 	%r2242, [%rd16+36];
	ld.global.u32 	%r2243, [%rd16+40];
	prmt.b32 	%r2244, %r2243, %r1909, %r2231;
	prmt.b32 	%r2245, %r2242, %r1909, %r2231;
	prmt.b32 	%r2246, %r2241, %r1909, %r2231;
	prmt.b32 	%r2247, %r2240, %r1909, %r2231;
	st.local.v4.u32 	[%rd1+16], {%r2247, %r2246, %r2245, %r2244};
	ld.global.u32 	%r2248, [%rd16+44];
	ld.global.u32 	%r2249, [%rd16+48];
	ld.global.u32 	%r2250, [%rd16+52];
	ld.global.u32 	%r2251, [%rd16+56];
	prmt.b32 	%r2252, %r2251, %r1909, %r2231;
	prmt.b32 	%r2253, %r2250, %r1909, %r2231;
	prmt.b32 	%r2254, %r2249, %r1909, %r2231;
	prmt.b32 	%r2255, %r2248, %r1909, %r2231;
	st.local.v4.u32 	[%rd1+32], {%r2255, %r2254, %r2253, %r2252};
	ld.global.u32 	%r2256, [%rd16+60];
	ld.global.u32 	%r2257, [%rd16+64];
	ld.global.u32 	%r2258, [%rd16+68];
	ld.global.u32 	%r2259, [%rd16+72];
	prmt.b32 	%r2260, %r2259, %r1909, %r2231;
	prmt.b32 	%r2261, %r2258, %r1909, %r2231;
	prmt.b32 	%r2262, %r2257, %r1909, %r2231;
	prmt.b32 	%r2263, %r2256, %r1909, %r2231;
	st.local.v4.u32 	[%rd1+48], {%r2263, %r2262, %r2261, %r2260};
	add.s32 	%r5630, %r5618, 64;
	add.s32 	%r5625, %r5625, -64;
	shf.l.wrap.b32 	%r2264, %r5623, %r5623, 5;
	add.s32 	%r2265, %r2264, %r5619;
	// begin inline asm
	lop3.b32 %r1910, %r5622, %r5621, %r5620, 202;
	// end inline asm
	add.s32 	%r2266, %r2265, %r1910;
	add.s32 	%r2267, %r2266, %r2239;
	add.s32 	%r1919, %r2267, 1518500249;
	shf.l.wrap.b32 	%r2268, %r1919, %r1919, 5;
	shf.l.wrap.b32 	%r1921, %r5622, %r5622, 30;
	// begin inline asm
	lop3.b32 %r1914, %r5623, %r1921, %r5621, 202;
	// end inline asm
	add.s32 	%r2269, %r5620, %r1914;
	add.s32 	%r2270, %r2269, %r2238;
	add.s32 	%r2271, %r2270, %r2268;
	add.s32 	%r1923, %r2271, 1518500249;
	shf.l.wrap.b32 	%r2272, %r1923, %r1923, 5;
	shf.l.wrap.b32 	%r1925, %r5623, %r5623, 30;
	// begin inline asm
	lop3.b32 %r1918, %r1919, %r1925, %r1921, 202;
	// end inline asm
	add.s32 	%r2273, %r5621, %r1918;
	add.s32 	%r2274, %r2273, %r2237;
	add.s32 	%r2275, %r2274, %r2272;
	add.s32 	%r1927, %r2275, 1518500249;
	shf.l.wrap.b32 	%r1929, %r1919, %r1919, 30;
	shf.l.wrap.b32 	%r2276, %r1927, %r1927, 5;
	// begin inline asm
	lop3.b32 %r1922, %r1923, %r1929, %r1925, 202;
	// end inline asm
	add.s32 	%r2277, %r1921, %r1922;
	add.s32 	%r2278, %r2277, %r2236;
	add.s32 	%r2279, %r2278, %r2276;
	add.s32 	%r1931, %r2279, 1518500249;
	shf.l.wrap.b32 	%r1933, %r1923, %r1923, 30;
	shf.l.wrap.b32 	%r2280, %r1931, %r1931, 5;
	// begin inline asm
	lop3.b32 %r1926, %r1927, %r1933, %r1929, 202;
	// end inline asm
	add.s32 	%r2281, %r1925, %r1926;
	add.s32 	%r2282, %r2281, %r2247;
	add.s32 	%r2283, %r2282, %r2280;
	add.s32 	%r1935, %r2283, 1518500249;
	shf.l.wrap.b32 	%r1937, %r1927, %r1927, 30;
	shf.l.wrap.b32 	%r2284, %r1935, %r1935, 5;
	// begin inline asm
	lop3.b32 %r1930, %r1931, %r1937, %r1933, 202;
	// end inline asm
	add.s32 	%r2285, %r1929, %r1930;
	add.s32 	%r2286, %r2285, %r2246;
	add.s32 	%r2287, %r2286, %r2284;
	add.s32 	%r1939, %r2287, 1518500249;
	shf.l.wrap.b32 	%r1941, %r1931, %r1931, 30;
	shf.l.wrap.b32 	%r2288, %r1939, %r1939, 5;
	// begin inline asm
	lop3.b32 %r1934, %r1935, %r1941, %r1937, 202;
	// end inline asm
	add.s32 	%r2289, %r1933, %r1934;
	add.s32 	%r2290, %r2289, %r2245;
	add.s32 	%r2291, %r2290, %r2288;
	add.s32 	%r1943, %r2291, 1518500249;
	shf.l.wrap.b32 	%r1945, %r1935, %r1935, 30;
	shf.l.wrap.b32 	%r2292, %r1943, %r1943, 5;
	// begin inline asm
	lop3.b32 %r1938, %r1939, %r1945, %r1941, 202;
	// end inline asm
	add.s32 	%r2293, %r1938, %r2244;
	add.s32 	%r2294, %r2293, %r1937;
	add.s32 	%r2295, %r2294, %r2292;
	add.s32 	%r1947, %r2295, 1518500249;
	shf.l.wrap.b32 	%r1949, %r1939, %r1939, 30;
	shf.l.wrap.b32 	%r2296, %r1947, %r1947, 5;
	// begin inline asm
	lop3.b32 %r1942, %r1943, %r1949, %r1945, 202;
	// end inline asm
	add.s32 	%r2297, %r1942, %r2255;
	add.s32 	%r2298, %r2297, %r1941;
	add.s32 	%r2299, %r2298, %r2296;
	add.s32 	%r1951, %r2299, 1518500249;
	shf.l.wrap.b32 	%r1953, %r1943, %r1943, 30;
	shf.l.wrap.b32 	%r2300, %r1951, %r1951, 5;
	// begin inline asm
	lop3.b32 %r1946, %r1947, %r1953, %r1949, 202;
	// end inline asm
	add.s32 	%r2301, %r1946, %r2254;
	add.s32 	%r2302, %r2301, %r1945;
	add.s32 	%r2303, %r2302, %r2300;
	add.s32 	%r1955, %r2303, 1518500249;
	shf.l.wrap.b32 	%r1957, %r1947, %r1947, 30;
	shf.l.wrap.b32 	%r2304, %r1955, %r1955, 5;
	// begin inline asm
	lop3.b32 %r1950, %r1951, %r1957, %r1953, 202;
	// end inline asm
	add.s32 	%r2305, %r1950, %r2253;
	add.s32 	%r2306, %r2305, %r1949;
	add.s32 	%r2307, %r2306, %r2304;
	add.s32 	%r1959, %r2307, 1518500249;
	shf.l.wrap.b32 	%r1961, %r1951, %r1951, 30;
	shf.l.wrap.b32 	%r2308, %r1959, %r1959, 5;
	// begin inline asm
	lop3.b32 %r1954, %r1955, %r1961, %r1957, 202;
	// end inline asm
	add.s32 	%r2309, %r1954, %r2252;
	add.s32 	%r2310, %r2309, %r1953;
	add.s32 	%r2311, %r2310, %r2308;
	add.s32 	%r1963, %r2311, 1518500249;
	shf.l.wrap.b32 	%r1965, %r1955, %r1955, 30;
	shf.l.wrap.b32 	%r2312, %r1963, %r1963, 5;
	// begin inline asm
	lop3.b32 %r1958, %r1959, %r1965, %r1961, 202;
	// end inline asm
	add.s32 	%r2313, %r1958, %r2263;
	add.s32 	%r2314, %r2313, %r1957;
	add.s32 	%r2315, %r2314, %r2312;
	add.s32 	%r1967, %r2315, 1518500249;
	shf.l.wrap.b32 	%r1969, %r1959, %r1959, 30;
	shf.l.wrap.b32 	%r2316, %r1967, %r1967, 5;
	// begin inline asm
	lop3.b32 %r1962, %r1963, %r1969, %r1965, 202;
	// end inline asm
	add.s32 	%r2317, %r1962, %r2262;
	add.s32 	%r2318, %r2317, %r1961;
	add.s32 	%r2319, %r2318, %r2316;
	add.s32 	%r1971, %r2319, 1518500249;
	shf.l.wrap.b32 	%r1973, %r1963, %r1963, 30;
	shf.l.wrap.b32 	%r2320, %r1971, %r1971, 5;
	// begin inline asm
	lop3.b32 %r1966, %r1967, %r1973, %r1969, 202;
	// end inline asm
	add.s32 	%r2321, %r1966, %r2261;
	add.s32 	%r2322, %r2321, %r1965;
	add.s32 	%r2323, %r2322, %r2320;
	add.s32 	%r1975, %r2323, 1518500249;
	shf.l.wrap.b32 	%r1977, %r1967, %r1967, 30;
	shf.l.wrap.b32 	%r2324, %r1975, %r1975, 5;
	// begin inline asm
	lop3.b32 %r1970, %r1971, %r1977, %r1973, 202;
	// end inline asm
	add.s32 	%r2325, %r1970, %r2260;
	add.s32 	%r2326, %r2325, %r1969;
	add.s32 	%r2327, %r2326, %r2324;
	add.s32 	%r1979, %r2327, 1518500249;
	shf.l.wrap.b32 	%r1981, %r1971, %r1971, 30;
	shf.l.wrap.b32 	%r2328, %r1979, %r1979, 5;
	// begin inline asm
	lop3.b32 %r1974, %r1975, %r1981, %r1977, 202;
	// end inline asm
	xor.b32  	%r2329, %r2255, %r2262;
	xor.b32  	%r2330, %r2329, %r2237;
	xor.b32  	%r2331, %r2330, %r2239;
	shf.l.wrap.b32 	%r2332, %r2331, %r2331, 1;
	add.s32 	%r2333, %r1974, %r2332;
	add.s32 	%r2334, %r2333, %r1973;
	add.s32 	%r2335, %r2334, %r2328;
	add.s32 	%r1983, %r2335, 1518500249;
	shf.l.wrap.b32 	%r1985, %r1975, %r1975, 30;
	shf.l.wrap.b32 	%r2336, %r1983, %r1983, 5;
	// begin inline asm
	lop3.b32 %r1978, %r1979, %r1985, %r1981, 202;
	// end inline asm
	xor.b32  	%r2337, %r2254, %r2261;
	xor.b32  	%r2338, %r2337, %r2236;
	xor.b32  	%r2339, %r2338, %r2238;
	shf.l.wrap.b32 	%r2340, %r2339, %r2339, 1;
	add.s32 	%r2341, %r1978, %r2340;
	add.s32 	%r2342, %r2341, %r1977;
	add.s32 	%r2343, %r2342, %r2336;
	add.s32 	%r1987, %r2343, 1518500249;
	shf.l.wrap.b32 	%r1989, %r1979, %r1979, 30;
	shf.l.wrap.b32 	%r2344, %r1987, %r1987, 5;
	// begin inline asm
	lop3.b32 %r1982, %r1983, %r1989, %r1985, 202;
	// end inline asm
	xor.b32  	%r2345, %r2253, %r2260;
	xor.b32  	%r2346, %r2345, %r2247;
	xor.b32  	%r2347, %r2346, %r2237;
	shf.l.wrap.b32 	%r2348, %r2347, %r2347, 1;
	add.s32 	%r2349, %r1982, %r2348;
	add.s32 	%r2350, %r2349, %r1981;
	add.s32 	%r2351, %r2350, %r2344;
	add.s32 	%r1991, %r2351, 1518500249;
	shf.l.wrap.b32 	%r1993, %r1983, %r1983, 30;
	shf.l.wrap.b32 	%r2352, %r1991, %r1991, 5;
	// begin inline asm
	lop3.b32 %r1986, %r1987, %r1993, %r1989, 202;
	// end inline asm
	xor.b32  	%r2353, %r2252, %r2332;
	xor.b32  	%r2354, %r2353, %r2246;
	xor.b32  	%r2355, %r2354, %r2236;
	shf.l.wrap.b32 	%r2356, %r2355, %r2355, 1;
	add.s32 	%r2357, %r1986, %r2356;
	add.s32 	%r2358, %r2357, %r1985;
	add.s32 	%r2359, %r2358, %r2352;
	add.s32 	%r1995, %r2359, 1518500249;
	shf.l.wrap.b32 	%r1997, %r1987, %r1987, 30;
	shf.l.wrap.b32 	%r2360, %r1995, %r1995, 5;
	// begin inline asm
	lop3.b32 %r1990, %r1991, %r1997, %r1993, 150;
	// end inline asm
	xor.b32  	%r2361, %r2263, %r2340;
	xor.b32  	%r2362, %r2361, %r2245;
	xor.b32  	%r2363, %r2362, %r2247;
	shf.l.wrap.b32 	%r2364, %r2363, %r2363, 1;
	add.s32 	%r2365, %r1990, %r2364;
	add.s32 	%r2366, %r2365, %r1989;
	add.s32 	%r2367, %r2366, %r2360;
	add.s32 	%r1999, %r2367, 1859775393;
	shf.l.wrap.b32 	%r2001, %r1991, %r1991, 30;
	shf.l.wrap.b32 	%r2368, %r1999, %r1999, 5;
	// begin inline asm
	lop3.b32 %r1994, %r1995, %r2001, %r1997, 150;
	// end inline asm
	xor.b32  	%r2369, %r2262, %r2348;
	xor.b32  	%r2370, %r2369, %r2244;
	xor.b32  	%r2371, %r2370, %r2246;
	shf.l.wrap.b32 	%r2372, %r2371, %r2371, 1;
	add.s32 	%r2373, %r1994, %r2372;
	add.s32 	%r2374, %r2373, %r1993;
	add.s32 	%r2375, %r2374, %r2368;
	add.s32 	%r2003, %r2375, 1859775393;
	shf.l.wrap.b32 	%r2005, %r1995, %r1995, 30;
	shf.l.wrap.b32 	%r2376, %r2003, %r2003, 5;
	// begin inline asm
	lop3.b32 %r1998, %r1999, %r2005, %r2001, 150;
	// end inline asm
	xor.b32  	%r2377, %r2261, %r2356;
	xor.b32  	%r2378, %r2377, %r2255;
	xor.b32  	%r2379, %r2378, %r2245;
	shf.l.wrap.b32 	%r2380, %r2379, %r2379, 1;
	add.s32 	%r2381, %r1998, %r2380;
	add.s32 	%r2382, %r2381, %r1997;
	add.s32 	%r2383, %r2382, %r2376;
	add.s32 	%r2007, %r2383, 1859775393;
	shf.l.wrap.b32 	%r2009, %r1999, %r1999, 30;
	shf.l.wrap.b32 	%r2384, %r2007, %r2007, 5;
	// begin inline asm
	lop3.b32 %r2002, %r2003, %r2009, %r2005, 150;
	// end inline asm
	xor.b32  	%r2385, %r2260, %r2364;
	xor.b32  	%r2386, %r2385, %r2254;
	xor.b32  	%r2387, %r2386, %r2244;
	shf.l.wrap.b32 	%r2388, %r2387, %r2387, 1;
	add.s32 	%r2389, %r2002, %r2388;
	add.s32 	%r2390, %r2389, %r2001;
	add.s32 	%r2391, %r2390, %r2384;
	add.s32 	%r2011, %r2391, 1859775393;
	shf.l.wrap.b32 	%r2013, %r2003, %r2003, 30;
	shf.l.wrap.b32 	%r2392, %r2011, %r2011, 5;
	// begin inline asm
	lop3.b32 %r2006, %r2007, %r2013, %r2009, 150;
	// end inline asm
	xor.b32  	%r2393, %r2372, %r2332;
	xor.b32  	%r2394, %r2393, %r2253;
	xor.b32  	%r2395, %r2394, %r2255;
	shf.l.wrap.b32 	%r2396, %r2395, %r2395, 1;
	add.s32 	%r2397, %r2006, %r2396;
	add.s32 	%r2398, %r2397, %r2005;
	add.s32 	%r2399, %r2398, %r2392;
	add.s32 	%r2015, %r2399, 1859775393;
	shf.l.wrap.b32 	%r2017, %r2007, %r2007, 30;
	shf.l.wrap.b32 	%r2400, %r2015, %r2015, 5;
	// begin inline asm
	lop3.b32 %r2010, %r2011, %r2017, %r2013, 150;
	// end inline asm
	xor.b32  	%r2401, %r2380, %r2340;
	xor.b32  	%r2402, %r2401, %r2252;
	xor.b32  	%r2403, %r2402, %r2254;
	shf.l.wrap.b32 	%r2404, %r2403, %r2403, 1;
	add.s32 	%r2405, %r2010, %r2404;
	add.s32 	%r2406, %r2405, %r2009;
	add.s32 	%r2407, %r2406, %r2400;
	add.s32 	%r2019, %r2407, 1859775393;
	shf.l.wrap.b32 	%r2021, %r2011, %r2011, 30;
	shf.l.wrap.b32 	%r2408, %r2019, %r2019, 5;
	// begin inline asm
	lop3.b32 %r2014, %r2015, %r2021, %r2017, 150;
	// end inline asm
	xor.b32  	%r2409, %r2388, %r2348;
	xor.b32  	%r2410, %r2409, %r2263;
	xor.b32  	%r2411, %r2410, %r2253;
	shf.l.wrap.b32 	%r2412, %r2411, %r2411, 1;
	add.s32 	%r2413, %r2014, %r2412;
	add.s32 	%r2414, %r2413, %r2013;
	add.s32 	%r2415, %r2414, %r2408;
	add.s32 	%r2023, %r2415, 1859775393;
	shf.l.wrap.b32 	%r2025, %r2015, %r2015, 30;
	shf.l.wrap.b32 	%r2416, %r2023, %r2023, 5;
	// begin inline asm
	lop3.b32 %r2018, %r2019, %r2025, %r2021, 150;
	// end inline asm
	xor.b32  	%r2417, %r2396, %r2356;
	xor.b32  	%r2418, %r2417, %r2262;
	xor.b32  	%r2419, %r2418, %r2252;
	shf.l.wrap.b32 	%r2420, %r2419, %r2419, 1;
	add.s32 	%r2421, %r2018, %r2420;
	add.s32 	%r2422, %r2421, %r2017;
	add.s32 	%r2423, %r2422, %r2416;
	add.s32 	%r2027, %r2423, 1859775393;
	shf.l.wrap.b32 	%r2029, %r2019, %r2019, 30;
	shf.l.wrap.b32 	%r2424, %r2027, %r2027, 5;
	// begin inline asm
	lop3.b32 %r2022, %r2023, %r2029, %r2025, 150;
	// end inline asm
	xor.b32  	%r2425, %r2404, %r2364;
	xor.b32  	%r2426, %r2425, %r2261;
	xor.b32  	%r2427, %r2426, %r2263;
	shf.l.wrap.b32 	%r2428, %r2427, %r2427, 1;
	add.s32 	%r2429, %r2022, %r2428;
	add.s32 	%r2430, %r2429, %r2021;
	add.s32 	%r2431, %r2430, %r2424;
	add.s32 	%r2031, %r2431, 1859775393;
	shf.l.wrap.b32 	%r2033, %r2023, %r2023, 30;
	shf.l.wrap.b32 	%r2432, %r2031, %r2031, 5;
	// begin inline asm
	lop3.b32 %r2026, %r2027, %r2033, %r2029, 150;
	// end inline asm
	xor.b32  	%r2433, %r2412, %r2372;
	xor.b32  	%r2434, %r2433, %r2260;
	xor.b32  	%r2435, %r2434, %r2262;
	shf.l.wrap.b32 	%r2436, %r2435, %r2435, 1;
	add.s32 	%r2437, %r2026, %r2436;
	add.s32 	%r2438, %r2437, %r2025;
	add.s32 	%r2439, %r2438, %r2432;
	add.s32 	%r2035, %r2439, 1859775393;
	shf.l.wrap.b32 	%r2037, %r2027, %r2027, 30;
	shf.l.wrap.b32 	%r2440, %r2035, %r2035, 5;
	// begin inline asm
	lop3.b32 %r2030, %r2031, %r2037, %r2033, 150;
	// end inline asm
	xor.b32  	%r2441, %r2380, %r2332;
	xor.b32  	%r2442, %r2441, %r2420;
	xor.b32  	%r2443, %r2442, %r2261;
	shf.l.wrap.b32 	%r2444, %r2443, %r2443, 1;
	add.s32 	%r2445, %r2030, %r2444;
	add.s32 	%r2446, %r2445, %r2029;
	add.s32 	%r2447, %r2446, %r2440;
	add.s32 	%r2039, %r2447, 1859775393;
	shf.l.wrap.b32 	%r2041, %r2031, %r2031, 30;
	shf.l.wrap.b32 	%r2448, %r2039, %r2039, 5;
	// begin inline asm
	lop3.b32 %r2034, %r2035, %r2041, %r2037, 150;
	// end inline asm
	xor.b32  	%r2449, %r2388, %r2340;
	xor.b32  	%r2450, %r2449, %r2428;
	xor.b32  	%r2451, %r2450, %r2260;
	shf.l.wrap.b32 	%r2452, %r2451, %r2451, 1;
	add.s32 	%r2453, %r2034, %r2452;
	add.s32 	%r2454, %r2453, %r2033;
	add.s32 	%r2455, %r2454, %r2448;
	add.s32 	%r2043, %r2455, 1859775393;
	shf.l.wrap.b32 	%r2045, %r2035, %r2035, 30;
	shf.l.wrap.b32 	%r2456, %r2043, %r2043, 5;
	// begin inline asm
	lop3.b32 %r2038, %r2039, %r2045, %r2041, 150;
	// end inline asm
	xor.b32  	%r2457, %r2348, %r2332;
	xor.b32  	%r2458, %r2457, %r2396;
	xor.b32  	%r2459, %r2458, %r2436;
	shf.l.wrap.b32 	%r2460, %r2459, %r2459, 1;
	add.s32 	%r2461, %r2038, %r2460;
	add.s32 	%r2462, %r2461, %r2037;
	add.s32 	%r2463, %r2462, %r2456;
	add.s32 	%r2047, %r2463, 1859775393;
	shf.l.wrap.b32 	%r2049, %r2039, %r2039, 30;
	shf.l.wrap.b32 	%r2464, %r2047, %r2047, 5;
	// begin inline asm
	lop3.b32 %r2042, %r2043, %r2049, %r2045, 150;
	// end inline asm
	xor.b32  	%r2465, %r2356, %r2340;
	xor.b32  	%r2466, %r2465, %r2404;
	xor.b32  	%r2467, %r2466, %r2444;
	shf.l.wrap.b32 	%r2468, %r2467, %r2467, 1;
	add.s32 	%r2469, %r2042, %r2468;
	add.s32 	%r2470, %r2469, %r2041;
	add.s32 	%r2471, %r2470, %r2464;
	add.s32 	%r2051, %r2471, 1859775393;
	shf.l.wrap.b32 	%r2053, %r2043, %r2043, 30;
	shf.l.wrap.b32 	%r2472, %r2051, %r2051, 5;
	// begin inline asm
	lop3.b32 %r2046, %r2047, %r2053, %r2049, 150;
	// end inline asm
	xor.b32  	%r2473, %r2364, %r2348;
	xor.b32  	%r2474, %r2473, %r2412;
	xor.b32  	%r2475, %r2474, %r2452;
	shf.l.wrap.b32 	%r2476, %r2475, %r2475, 1;
	add.s32 	%r2477, %r2046, %r2476;
	add.s32 	%r2478, %r2477, %r2045;
	add.s32 	%r2479, %r2478, %r2472;
	add.s32 	%r2055, %r2479, 1859775393;
	shf.l.wrap.b32 	%r2057, %r2047, %r2047, 30;
	shf.l.wrap.b32 	%r2480, %r2055, %r2055, 5;
	// begin inline asm
	lop3.b32 %r2050, %r2051, %r2057, %r2053, 150;
	// end inline asm
	xor.b32  	%r2481, %r2372, %r2356;
	xor.b32  	%r2482, %r2481, %r2420;
	xor.b32  	%r2483, %r2482, %r2460;
	shf.l.wrap.b32 	%r2484, %r2483, %r2483, 1;
	add.s32 	%r2485, %r2050, %r2484;
	add.s32 	%r2486, %r2485, %r2049;
	add.s32 	%r2487, %r2486, %r2480;
	add.s32 	%r2059, %r2487, 1859775393;
	shf.l.wrap.b32 	%r2061, %r2051, %r2051, 30;
	shf.l.wrap.b32 	%r2488, %r2059, %r2059, 5;
	// begin inline asm
	lop3.b32 %r2054, %r2055, %r2061, %r2057, 150;
	// end inline asm
	xor.b32  	%r2489, %r2380, %r2364;
	xor.b32  	%r2490, %r2489, %r2428;
	xor.b32  	%r2491, %r2490, %r2468;
	shf.l.wrap.b32 	%r2492, %r2491, %r2491, 1;
	add.s32 	%r2493, %r2054, %r2492;
	add.s32 	%r2494, %r2493, %r2053;
	add.s32 	%r2495, %r2494, %r2488;
	add.s32 	%r2063, %r2495, 1859775393;
	shf.l.wrap.b32 	%r2065, %r2055, %r2055, 30;
	shf.l.wrap.b32 	%r2496, %r2063, %r2063, 5;
	// begin inline asm
	lop3.b32 %r2058, %r2059, %r2065, %r2061, 150;
	// end inline asm
	xor.b32  	%r2497, %r2388, %r2372;
	xor.b32  	%r2498, %r2497, %r2436;
	xor.b32  	%r2499, %r2498, %r2476;
	shf.l.wrap.b32 	%r2500, %r2499, %r2499, 1;
	add.s32 	%r2501, %r2058, %r2500;
	add.s32 	%r2502, %r2501, %r2057;
	add.s32 	%r2503, %r2502, %r2496;
	add.s32 	%r2067, %r2503, 1859775393;
	shf.l.wrap.b32 	%r2069, %r2059, %r2059, 30;
	shf.l.wrap.b32 	%r2504, %r2067, %r2067, 5;
	// begin inline asm
	lop3.b32 %r2062, %r2063, %r2069, %r2065, 150;
	// end inline asm
	xor.b32  	%r2505, %r2396, %r2380;
	xor.b32  	%r2506, %r2505, %r2444;
	xor.b32  	%r2507, %r2506, %r2484;
	shf.l.wrap.b32 	%r2508, %r2507, %r2507, 1;
	add.s32 	%r2509, %r2062, %r2508;
	add.s32 	%r2510, %r2509, %r2061;
	add.s32 	%r2511, %r2510, %r2504;
	add.s32 	%r2071, %r2511, 1859775393;
	shf.l.wrap.b32 	%r2073, %r2063, %r2063, 30;
	shf.l.wrap.b32 	%r2512, %r2071, %r2071, 5;
	// begin inline asm
	lop3.b32 %r2066, %r2067, %r2073, %r2069, 150;
	// end inline asm
	xor.b32  	%r2513, %r2404, %r2388;
	xor.b32  	%r2514, %r2513, %r2452;
	xor.b32  	%r2515, %r2514, %r2492;
	shf.l.wrap.b32 	%r2516, %r2515, %r2515, 1;
	add.s32 	%r2517, %r2066, %r2516;
	add.s32 	%r2518, %r2517, %r2065;
	add.s32 	%r2519, %r2518, %r2512;
	add.s32 	%r2075, %r2519, 1859775393;
	shf.l.wrap.b32 	%r2077, %r2067, %r2067, 30;
	shf.l.wrap.b32 	%r2520, %r2075, %r2075, 5;
	// begin inline asm
	lop3.b32 %r2070, %r2071, %r2077, %r2073, 232;
	// end inline asm
	xor.b32  	%r2521, %r2412, %r2396;
	xor.b32  	%r2522, %r2521, %r2460;
	xor.b32  	%r2523, %r2522, %r2500;
	shf.l.wrap.b32 	%r2524, %r2523, %r2523, 1;
	add.s32 	%r2525, %r2070, %r2524;
	add.s32 	%r2526, %r2525, %r2069;
	add.s32 	%r2527, %r2526, %r2520;
	add.s32 	%r2079, %r2527, -1894007588;
	shf.l.wrap.b32 	%r2081, %r2071, %r2071, 30;
	shf.l.wrap.b32 	%r2528, %r2079, %r2079, 5;
	// begin inline asm
	lop3.b32 %r2074, %r2075, %r2081, %r2077, 232;
	// end inline asm
	xor.b32  	%r2529, %r2420, %r2404;
	xor.b32  	%r2530, %r2529, %r2468;
	xor.b32  	%r2531, %r2530, %r2508;
	shf.l.wrap.b32 	%r2532, %r2531, %r2531, 1;
	add.s32 	%r2533, %r2074, %r2532;
	add.s32 	%r2534, %r2533, %r2073;
	add.s32 	%r2535, %r2534, %r2528;
	add.s32 	%r2083, %r2535, -1894007588;
	shf.l.wrap.b32 	%r2085, %r2075, %r2075, 30;
	shf.l.wrap.b32 	%r2536, %r2083, %r2083, 5;
	// begin inline asm
	lop3.b32 %r2078, %r2079, %r2085, %r2081, 232;
	// end inline asm
	xor.b32  	%r2537, %r2428, %r2412;
	xor.b32  	%r2538, %r2537, %r2476;
	xor.b32  	%r2539, %r2538, %r2516;
	shf.l.wrap.b32 	%r2540, %r2539, %r2539, 1;
	add.s32 	%r2541, %r2078, %r2540;
	add.s32 	%r2542, %r2541, %r2077;
	add.s32 	%r2543, %r2542, %r2536;
	add.s32 	%r2087, %r2543, -1894007588;
	shf.l.wrap.b32 	%r2089, %r2079, %r2079, 30;
	shf.l.wrap.b32 	%r2544, %r2087, %r2087, 5;
	// begin inline asm
	lop3.b32 %r2082, %r2083, %r2089, %r2085, 232;
	// end inline asm
	xor.b32  	%r2545, %r2436, %r2420;
	xor.b32  	%r2546, %r2545, %r2484;
	xor.b32  	%r2547, %r2546, %r2524;
	shf.l.wrap.b32 	%r2548, %r2547, %r2547, 1;
	add.s32 	%r2549, %r2082, %r2548;
	add.s32 	%r2550, %r2549, %r2081;
	add.s32 	%r2551, %r2550, %r2544;
	add.s32 	%r2091, %r2551, -1894007588;
	shf.l.wrap.b32 	%r2093, %r2083, %r2083, 30;
	shf.l.wrap.b32 	%r2552, %r2091, %r2091, 5;
	// begin inline asm
	lop3.b32 %r2086, %r2087, %r2093, %r2089, 232;
	// end inline asm
	xor.b32  	%r2553, %r2444, %r2428;
	xor.b32  	%r2554, %r2553, %r2492;
	xor.b32  	%r2555, %r2554, %r2532;
	shf.l.wrap.b32 	%r2556, %r2555, %r2555, 1;
	add.s32 	%r2557, %r2086, %r2556;
	add.s32 	%r2558, %r2557, %r2085;
	add.s32 	%r2559, %r2558, %r2552;
	add.s32 	%r2095, %r2559, -1894007588;
	shf.l.wrap.b32 	%r2097, %r2087, %r2087, 30;
	shf.l.wrap.b32 	%r2560, %r2095, %r2095, 5;
	// begin inline asm
	lop3.b32 %r2090, %r2091, %r2097, %r2093, 232;
	// end inline asm
	xor.b32  	%r2561, %r2452, %r2436;
	xor.b32  	%r2562, %r2561, %r2500;
	xor.b32  	%r2563, %r2562, %r2540;
	shf.l.wrap.b32 	%r2564, %r2563, %r2563, 1;
	add.s32 	%r2565, %r2090, %r2564;
	add.s32 	%r2566, %r2565, %r2089;
	add.s32 	%r2567, %r2566, %r2560;
	add.s32 	%r2099, %r2567, -1894007588;
	shf.l.wrap.b32 	%r2101, %r2091, %r2091, 30;
	shf.l.wrap.b32 	%r2568, %r2099, %r2099, 5;
	// begin inline asm
	lop3.b32 %r2094, %r2095, %r2101, %r2097, 232;
	// end inline asm
	xor.b32  	%r2569, %r2460, %r2444;
	xor.b32  	%r2570, %r2569, %r2508;
	xor.b32  	%r2571, %r2570, %r2548;
	shf.l.wrap.b32 	%r2572, %r2571, %r2571, 1;
	add.s32 	%r2573, %r2094, %r2572;
	add.s32 	%r2574, %r2573, %r2093;
	add.s32 	%r2575, %r2574, %r2568;
	add.s32 	%r2103, %r2575, -1894007588;
	shf.l.wrap.b32 	%r2105, %r2095, %r2095, 30;
	shf.l.wrap.b32 	%r2576, %r2103, %r2103, 5;
	// begin inline asm
	lop3.b32 %r2098, %r2099, %r2105, %r2101, 232;
	// end inline asm
	xor.b32  	%r2577, %r2468, %r2452;
	xor.b32  	%r2578, %r2577, %r2516;
	xor.b32  	%r2579, %r2578, %r2556;
	shf.l.wrap.b32 	%r2580, %r2579, %r2579, 1;
	add.s32 	%r2581, %r2098, %r2580;
	add.s32 	%r2582, %r2581, %r2097;
	add.s32 	%r2583, %r2582, %r2576;
	add.s32 	%r2107, %r2583, -1894007588;
	shf.l.wrap.b32 	%r2109, %r2099, %r2099, 30;
	shf.l.wrap.b32 	%r2584, %r2107, %r2107, 5;
	// begin inline asm
	lop3.b32 %r2102, %r2103, %r2109, %r2105, 232;
	// end inline asm
	xor.b32  	%r2585, %r2476, %r2460;
	xor.b32  	%r2586, %r2585, %r2524;
	xor.b32  	%r2587, %r2586, %r2564;
	shf.l.wrap.b32 	%r2588, %r2587, %r2587, 1;
	add.s32 	%r2589, %r2102, %r2588;
	add.s32 	%r2590, %r2589, %r2101;
	add.s32 	%r2591, %r2590, %r2584;
	add.s32 	%r2111, %r2591, -1894007588;
	shf.l.wrap.b32 	%r2113, %r2103, %r2103, 30;
	shf.l.wrap.b32 	%r2592, %r2111, %r2111, 5;
	// begin inline asm
	lop3.b32 %r2106, %r2107, %r2113, %r2109, 232;
	// end inline asm
	xor.b32  	%r2593, %r2484, %r2468;
	xor.b32  	%r2594, %r2593, %r2532;
	xor.b32  	%r2595, %r2594, %r2572;
	shf.l.wrap.b32 	%r2596, %r2595, %r2595, 1;
	add.s32 	%r2597, %r2106, %r2596;
	add.s32 	%r2598, %r2597, %r2105;
	add.s32 	%r2599, %r2598, %r2592;
	add.s32 	%r2115, %r2599, -1894007588;
	shf.l.wrap.b32 	%r2117, %r2107, %r2107, 30;
	shf.l.wrap.b32 	%r2600, %r2115, %r2115, 5;
	// begin inline asm
	lop3.b32 %r2110, %r2111, %r2117, %r2113, 232;
	// end inline asm
	xor.b32  	%r2601, %r2492, %r2476;
	xor.b32  	%r2602, %r2601, %r2540;
	xor.b32  	%r2603, %r2602, %r2580;
	shf.l.wrap.b32 	%r2604, %r2603, %r2603, 1;
	add.s32 	%r2605, %r2110, %r2604;
	add.s32 	%r2606, %r2605, %r2109;
	add.s32 	%r2607, %r2606, %r2600;
	add.s32 	%r2119, %r2607, -1894007588;
	shf.l.wrap.b32 	%r2121, %r2111, %r2111, 30;
	shf.l.wrap.b32 	%r2608, %r2119, %r2119, 5;
	// begin inline asm
	lop3.b32 %r2114, %r2115, %r2121, %r2117, 232;
	// end inline asm
	xor.b32  	%r2609, %r2500, %r2484;
	xor.b32  	%r2610, %r2609, %r2548;
	xor.b32  	%r2611, %r2610, %r2588;
	shf.l.wrap.b32 	%r2612, %r2611, %r2611, 1;
	add.s32 	%r2613, %r2114, %r2612;
	add.s32 	%r2614, %r2613, %r2113;
	add.s32 	%r2615, %r2614, %r2608;
	add.s32 	%r2123, %r2615, -1894007588;
	shf.l.wrap.b32 	%r2125, %r2115, %r2115, 30;
	shf.l.wrap.b32 	%r2616, %r2123, %r2123, 5;
	// begin inline asm
	lop3.b32 %r2118, %r2119, %r2125, %r2121, 232;
	// end inline asm
	xor.b32  	%r2617, %r2508, %r2492;
	xor.b32  	%r2618, %r2617, %r2556;
	xor.b32  	%r2619, %r2618, %r2596;
	shf.l.wrap.b32 	%r2620, %r2619, %r2619, 1;
	add.s32 	%r2621, %r2118, %r2620;
	add.s32 	%r2622, %r2621, %r2117;
	add.s32 	%r2623, %r2622, %r2616;
	add.s32 	%r2127, %r2623, -1894007588;
	shf.l.wrap.b32 	%r2129, %r2119, %r2119, 30;
	shf.l.wrap.b32 	%r2624, %r2127, %r2127, 5;
	// begin inline asm
	lop3.b32 %r2122, %r2123, %r2129, %r2125, 232;
	// end inline asm
	xor.b32  	%r2625, %r2516, %r2500;
	xor.b32  	%r2626, %r2625, %r2564;
	xor.b32  	%r2627, %r2626, %r2604;
	shf.l.wrap.b32 	%r2628, %r2627, %r2627, 1;
	add.s32 	%r2629, %r2122, %r2628;
	add.s32 	%r2630, %r2629, %r2121;
	add.s32 	%r2631, %r2630, %r2624;
	add.s32 	%r2131, %r2631, -1894007588;
	shf.l.wrap.b32 	%r2133, %r2123, %r2123, 30;
	shf.l.wrap.b32 	%r2632, %r2131, %r2131, 5;
	// begin inline asm
	lop3.b32 %r2126, %r2127, %r2133, %r2129, 232;
	// end inline asm
	xor.b32  	%r2633, %r2524, %r2508;
	xor.b32  	%r2634, %r2633, %r2572;
	xor.b32  	%r2635, %r2634, %r2612;
	shf.l.wrap.b32 	%r2636, %r2635, %r2635, 1;
	add.s32 	%r2637, %r2126, %r2636;
	add.s32 	%r2638, %r2637, %r2125;
	add.s32 	%r2639, %r2638, %r2632;
	add.s32 	%r2135, %r2639, -1894007588;
	shf.l.wrap.b32 	%r2137, %r2127, %r2127, 30;
	shf.l.wrap.b32 	%r2640, %r2135, %r2135, 5;
	// begin inline asm
	lop3.b32 %r2130, %r2131, %r2137, %r2133, 232;
	// end inline asm
	xor.b32  	%r2641, %r2532, %r2516;
	xor.b32  	%r2642, %r2641, %r2580;
	xor.b32  	%r2643, %r2642, %r2620;
	shf.l.wrap.b32 	%r2644, %r2643, %r2643, 1;
	add.s32 	%r2645, %r2130, %r2644;
	add.s32 	%r2646, %r2645, %r2129;
	add.s32 	%r2647, %r2646, %r2640;
	add.s32 	%r2139, %r2647, -1894007588;
	shf.l.wrap.b32 	%r2141, %r2131, %r2131, 30;
	shf.l.wrap.b32 	%r2648, %r2139, %r2139, 5;
	// begin inline asm
	lop3.b32 %r2134, %r2135, %r2141, %r2137, 232;
	// end inline asm
	xor.b32  	%r2649, %r2540, %r2524;
	xor.b32  	%r2650, %r2649, %r2588;
	xor.b32  	%r2651, %r2650, %r2628;
	shf.l.wrap.b32 	%r2652, %r2651, %r2651, 1;
	add.s32 	%r2653, %r2134, %r2652;
	add.s32 	%r2654, %r2653, %r2133;
	add.s32 	%r2655, %r2654, %r2648;
	add.s32 	%r2143, %r2655, -1894007588;
	shf.l.wrap.b32 	%r2145, %r2135, %r2135, 30;
	shf.l.wrap.b32 	%r2656, %r2143, %r2143, 5;
	// begin inline asm
	lop3.b32 %r2138, %r2139, %r2145, %r2141, 232;
	// end inline asm
	xor.b32  	%r2657, %r2548, %r2532;
	xor.b32  	%r2658, %r2657, %r2596;
	xor.b32  	%r2659, %r2658, %r2636;
	shf.l.wrap.b32 	%r2660, %r2659, %r2659, 1;
	add.s32 	%r2661, %r2138, %r2660;
	add.s32 	%r2662, %r2661, %r2137;
	add.s32 	%r2663, %r2662, %r2656;
	add.s32 	%r2147, %r2663, -1894007588;
	shf.l.wrap.b32 	%r2149, %r2139, %r2139, 30;
	shf.l.wrap.b32 	%r2664, %r2147, %r2147, 5;
	// begin inline asm
	lop3.b32 %r2142, %r2143, %r2149, %r2145, 232;
	// end inline asm
	xor.b32  	%r2665, %r2556, %r2540;
	xor.b32  	%r2666, %r2665, %r2604;
	xor.b32  	%r2667, %r2666, %r2644;
	shf.l.wrap.b32 	%r2668, %r2667, %r2667, 1;
	add.s32 	%r2669, %r2142, %r2668;
	add.s32 	%r2670, %r2669, %r2141;
	add.s32 	%r2671, %r2670, %r2664;
	add.s32 	%r2151, %r2671, -1894007588;
	shf.l.wrap.b32 	%r2153, %r2143, %r2143, 30;
	shf.l.wrap.b32 	%r2672, %r2151, %r2151, 5;
	// begin inline asm
	lop3.b32 %r2146, %r2147, %r2153, %r2149, 232;
	// end inline asm
	xor.b32  	%r2673, %r2564, %r2548;
	xor.b32  	%r2674, %r2673, %r2612;
	xor.b32  	%r2675, %r2674, %r2652;
	shf.l.wrap.b32 	%r2676, %r2675, %r2675, 1;
	add.s32 	%r2677, %r2146, %r2676;
	add.s32 	%r2678, %r2677, %r2145;
	add.s32 	%r2679, %r2678, %r2672;
	add.s32 	%r2155, %r2679, -1894007588;
	shf.l.wrap.b32 	%r2157, %r2147, %r2147, 30;
	shf.l.wrap.b32 	%r2680, %r2155, %r2155, 5;
	// begin inline asm
	lop3.b32 %r2150, %r2151, %r2157, %r2153, 150;
	// end inline asm
	xor.b32  	%r2681, %r2572, %r2556;
	xor.b32  	%r2682, %r2681, %r2620;
	xor.b32  	%r2683, %r2682, %r2660;
	shf.l.wrap.b32 	%r2684, %r2683, %r2683, 1;
	add.s32 	%r2685, %r2150, %r2684;
	add.s32 	%r2686, %r2685, %r2149;
	add.s32 	%r2687, %r2686, %r2680;
	add.s32 	%r2159, %r2687, -899497514;
	shf.l.wrap.b32 	%r2161, %r2151, %r2151, 30;
	shf.l.wrap.b32 	%r2688, %r2159, %r2159, 5;
	// begin inline asm
	lop3.b32 %r2154, %r2155, %r2161, %r2157, 150;
	// end inline asm
	xor.b32  	%r2689, %r2580, %r2564;
	xor.b32  	%r2690, %r2689, %r2628;
	xor.b32  	%r2691, %r2690, %r2668;
	shf.l.wrap.b32 	%r2692, %r2691, %r2691, 1;
	add.s32 	%r2693, %r2154, %r2692;
	add.s32 	%r2694, %r2693, %r2153;
	add.s32 	%r2695, %r2694, %r2688;
	add.s32 	%r2163, %r2695, -899497514;
	shf.l.wrap.b32 	%r2165, %r2155, %r2155, 30;
	shf.l.wrap.b32 	%r2696, %r2163, %r2163, 5;
	// begin inline asm
	lop3.b32 %r2158, %r2159, %r2165, %r2161, 150;
	// end inline asm
	xor.b32  	%r2697, %r2588, %r2572;
	xor.b32  	%r2698, %r2697, %r2636;
	xor.b32  	%r2699, %r2698, %r2676;
	shf.l.wrap.b32 	%r2700, %r2699, %r2699, 1;
	add.s32 	%r2701, %r2158, %r2700;
	add.s32 	%r2702, %r2701, %r2157;
	add.s32 	%r2703, %r2702, %r2696;
	add.s32 	%r2167, %r2703, -899497514;
	shf.l.wrap.b32 	%r2169, %r2159, %r2159, 30;
	shf.l.wrap.b32 	%r2704, %r2167, %r2167, 5;
	// begin inline asm
	lop3.b32 %r2162, %r2163, %r2169, %r2165, 150;
	// end inline asm
	xor.b32  	%r2705, %r2596, %r2580;
	xor.b32  	%r2706, %r2705, %r2644;
	xor.b32  	%r2707, %r2706, %r2684;
	shf.l.wrap.b32 	%r2708, %r2707, %r2707, 1;
	add.s32 	%r2709, %r2162, %r2708;
	add.s32 	%r2710, %r2709, %r2161;
	add.s32 	%r2711, %r2710, %r2704;
	add.s32 	%r2171, %r2711, -899497514;
	shf.l.wrap.b32 	%r2173, %r2163, %r2163, 30;
	shf.l.wrap.b32 	%r2712, %r2171, %r2171, 5;
	// begin inline asm
	lop3.b32 %r2166, %r2167, %r2173, %r2169, 150;
	// end inline asm
	xor.b32  	%r2713, %r2604, %r2588;
	xor.b32  	%r2714, %r2713, %r2652;
	xor.b32  	%r2715, %r2714, %r2692;
	shf.l.wrap.b32 	%r2716, %r2715, %r2715, 1;
	add.s32 	%r2717, %r2166, %r2716;
	add.s32 	%r2718, %r2717, %r2165;
	add.s32 	%r2719, %r2718, %r2712;
	add.s32 	%r2175, %r2719, -899497514;
	shf.l.wrap.b32 	%r2177, %r2167, %r2167, 30;
	shf.l.wrap.b32 	%r2720, %r2175, %r2175, 5;
	// begin inline asm
	lop3.b32 %r2170, %r2171, %r2177, %r2173, 150;
	// end inline asm
	xor.b32  	%r2721, %r2612, %r2596;
	xor.b32  	%r2722, %r2721, %r2660;
	xor.b32  	%r2723, %r2722, %r2700;
	shf.l.wrap.b32 	%r2724, %r2723, %r2723, 1;
	add.s32 	%r2725, %r2170, %r2724;
	add.s32 	%r2726, %r2725, %r2169;
	add.s32 	%r2727, %r2726, %r2720;
	add.s32 	%r2179, %r2727, -899497514;
	shf.l.wrap.b32 	%r2181, %r2171, %r2171, 30;
	shf.l.wrap.b32 	%r2728, %r2179, %r2179, 5;
	// begin inline asm
	lop3.b32 %r2174, %r2175, %r2181, %r2177, 150;
	// end inline asm
	xor.b32  	%r2729, %r2620, %r2604;
	xor.b32  	%r2730, %r2729, %r2668;
	xor.b32  	%r2731, %r2730, %r2708;
	shf.l.wrap.b32 	%r2732, %r2731, %r2731, 1;
	add.s32 	%r2733, %r2174, %r2732;
	add.s32 	%r2734, %r2733, %r2173;
	add.s32 	%r2735, %r2734, %r2728;
	add.s32 	%r2183, %r2735, -899497514;
	shf.l.wrap.b32 	%r2185, %r2175, %r2175, 30;
	shf.l.wrap.b32 	%r2736, %r2183, %r2183, 5;
	// begin inline asm
	lop3.b32 %r2178, %r2179, %r2185, %r2181, 150;
	// end inline asm
	xor.b32  	%r2737, %r2628, %r2612;
	xor.b32  	%r2738, %r2737, %r2676;
	xor.b32  	%r2739, %r2738, %r2716;
	shf.l.wrap.b32 	%r2740, %r2739, %r2739, 1;
	add.s32 	%r2741, %r2178, %r2740;
	add.s32 	%r2742, %r2741, %r2177;
	add.s32 	%r2743, %r2742, %r2736;
	add.s32 	%r2187, %r2743, -899497514;
	shf.l.wrap.b32 	%r2189, %r2179, %r2179, 30;
	shf.l.wrap.b32 	%r2744, %r2187, %r2187, 5;
	// begin inline asm
	lop3.b32 %r2182, %r2183, %r2189, %r2185, 150;
	// end inline asm
	xor.b32  	%r2745, %r2636, %r2620;
	xor.b32  	%r2746, %r2745, %r2684;
	xor.b32  	%r2747, %r2746, %r2724;
	shf.l.wrap.b32 	%r2748, %r2747, %r2747, 1;
	add.s32 	%r2749, %r2182, %r2748;
	add.s32 	%r2750, %r2749, %r2181;
	add.s32 	%r2751, %r2750, %r2744;
	add.s32 	%r2191, %r2751, -899497514;
	shf.l.wrap.b32 	%r2193, %r2183, %r2183, 30;
	shf.l.wrap.b32 	%r2752, %r2191, %r2191, 5;
	// begin inline asm
	lop3.b32 %r2186, %r2187, %r2193, %r2189, 150;
	// end inline asm
	xor.b32  	%r2753, %r2644, %r2628;
	xor.b32  	%r2754, %r2753, %r2692;
	xor.b32  	%r2755, %r2754, %r2732;
	shf.l.wrap.b32 	%r2756, %r2755, %r2755, 1;
	add.s32 	%r2757, %r2186, %r2756;
	add.s32 	%r2758, %r2757, %r2185;
	add.s32 	%r2759, %r2758, %r2752;
	add.s32 	%r2195, %r2759, -899497514;
	shf.l.wrap.b32 	%r2197, %r2187, %r2187, 30;
	shf.l.wrap.b32 	%r2760, %r2195, %r2195, 5;
	// begin inline asm
	lop3.b32 %r2190, %r2191, %r2197, %r2193, 150;
	// end inline asm
	xor.b32  	%r2761, %r2652, %r2636;
	xor.b32  	%r2762, %r2761, %r2700;
	xor.b32  	%r2763, %r2762, %r2740;
	shf.l.wrap.b32 	%r2764, %r2763, %r2763, 1;
	add.s32 	%r2765, %r2190, %r2764;
	add.s32 	%r2766, %r2765, %r2189;
	add.s32 	%r2767, %r2766, %r2760;
	add.s32 	%r2199, %r2767, -899497514;
	shf.l.wrap.b32 	%r2201, %r2191, %r2191, 30;
	shf.l.wrap.b32 	%r2768, %r2199, %r2199, 5;
	// begin inline asm
	lop3.b32 %r2194, %r2195, %r2201, %r2197, 150;
	// end inline asm
	xor.b32  	%r2769, %r2660, %r2644;
	xor.b32  	%r2770, %r2769, %r2708;
	xor.b32  	%r2771, %r2770, %r2748;
	shf.l.wrap.b32 	%r2772, %r2771, %r2771, 1;
	add.s32 	%r2773, %r2194, %r2772;
	add.s32 	%r2774, %r2773, %r2193;
	add.s32 	%r2775, %r2774, %r2768;
	add.s32 	%r2203, %r2775, -899497514;
	shf.l.wrap.b32 	%r2205, %r2195, %r2195, 30;
	shf.l.wrap.b32 	%r2776, %r2203, %r2203, 5;
	// begin inline asm
	lop3.b32 %r2198, %r2199, %r2205, %r2201, 150;
	// end inline asm
	xor.b32  	%r2777, %r2668, %r2652;
	xor.b32  	%r2778, %r2777, %r2716;
	xor.b32  	%r2779, %r2778, %r2756;
	shf.l.wrap.b32 	%r2780, %r2779, %r2779, 1;
	add.s32 	%r2781, %r2198, %r2780;
	add.s32 	%r2782, %r2781, %r2197;
	add.s32 	%r2783, %r2782, %r2776;
	add.s32 	%r2207, %r2783, -899497514;
	shf.l.wrap.b32 	%r2209, %r2199, %r2199, 30;
	shf.l.wrap.b32 	%r2784, %r2207, %r2207, 5;
	// begin inline asm
	lop3.b32 %r2202, %r2203, %r2209, %r2205, 150;
	// end inline asm
	xor.b32  	%r2785, %r2676, %r2660;
	xor.b32  	%r2786, %r2785, %r2724;
	xor.b32  	%r2787, %r2786, %r2764;
	shf.l.wrap.b32 	%r2788, %r2787, %r2787, 1;
	add.s32 	%r2789, %r2202, %r2788;
	add.s32 	%r2790, %r2789, %r2201;
	add.s32 	%r2791, %r2790, %r2784;
	add.s32 	%r2211, %r2791, -899497514;
	shf.l.wrap.b32 	%r2213, %r2203, %r2203, 30;
	shf.l.wrap.b32 	%r2792, %r2211, %r2211, 5;
	// begin inline asm
	lop3.b32 %r2206, %r2207, %r2213, %r2209, 150;
	// end inline asm
	xor.b32  	%r2793, %r2684, %r2668;
	xor.b32  	%r2794, %r2793, %r2732;
	xor.b32  	%r2795, %r2794, %r2772;
	shf.l.wrap.b32 	%r2796, %r2795, %r2795, 1;
	add.s32 	%r2797, %r2206, %r2796;
	add.s32 	%r2798, %r2797, %r2205;
	add.s32 	%r2799, %r2798, %r2792;
	add.s32 	%r2215, %r2799, -899497514;
	shf.l.wrap.b32 	%r2217, %r2207, %r2207, 30;
	shf.l.wrap.b32 	%r2800, %r2215, %r2215, 5;
	// begin inline asm
	lop3.b32 %r2210, %r2211, %r2217, %r2213, 150;
	// end inline asm
	xor.b32  	%r2801, %r2692, %r2676;
	xor.b32  	%r2802, %r2801, %r2740;
	xor.b32  	%r2803, %r2802, %r2780;
	shf.l.wrap.b32 	%r2804, %r2803, %r2803, 1;
	add.s32 	%r2805, %r2210, %r2804;
	add.s32 	%r2806, %r2805, %r2209;
	add.s32 	%r2807, %r2806, %r2800;
	add.s32 	%r2219, %r2807, -899497514;
	shf.l.wrap.b32 	%r2221, %r2211, %r2211, 30;
	shf.l.wrap.b32 	%r2808, %r2219, %r2219, 5;
	// begin inline asm
	lop3.b32 %r2214, %r2215, %r2221, %r2217, 150;
	// end inline asm
	xor.b32  	%r2809, %r2700, %r2684;
	xor.b32  	%r2810, %r2809, %r2748;
	xor.b32  	%r2811, %r2810, %r2788;
	shf.l.wrap.b32 	%r2812, %r2811, %r2811, 1;
	add.s32 	%r2813, %r2214, %r2812;
	add.s32 	%r2814, %r2813, %r2213;
	add.s32 	%r2815, %r2814, %r2808;
	add.s32 	%r2223, %r2815, -899497514;
	shf.l.wrap.b32 	%r2225, %r2215, %r2215, 30;
	shf.l.wrap.b32 	%r2816, %r2223, %r2223, 5;
	// begin inline asm
	lop3.b32 %r2218, %r2219, %r2225, %r2221, 150;
	// end inline asm
	xor.b32  	%r2817, %r2708, %r2692;
	xor.b32  	%r2818, %r2817, %r2756;
	xor.b32  	%r2819, %r2818, %r2796;
	shf.l.wrap.b32 	%r2820, %r2819, %r2819, 1;
	add.s32 	%r2821, %r2218, %r2820;
	add.s32 	%r2822, %r2821, %r2217;
	add.s32 	%r2823, %r2822, %r2816;
	add.s32 	%r2227, %r2823, -899497514;
	shf.l.wrap.b32 	%r2229, %r2219, %r2219, 30;
	shf.l.wrap.b32 	%r2824, %r2227, %r2227, 5;
	// begin inline asm
	lop3.b32 %r2222, %r2223, %r2229, %r2225, 150;
	// end inline asm
	xor.b32  	%r2825, %r2716, %r2700;
	xor.b32  	%r2826, %r2825, %r2764;
	xor.b32  	%r2827, %r2826, %r2804;
	shf.l.wrap.b32 	%r2828, %r2827, %r2827, 1;
	add.s32 	%r2829, %r2222, %r2828;
	add.s32 	%r2830, %r2829, %r2221;
	add.s32 	%r2831, %r2830, %r2824;
	add.s32 	%r2832, %r2831, -899497514;
	shf.l.wrap.b32 	%r2228, %r2223, %r2223, 30;
	shf.l.wrap.b32 	%r2833, %r2832, %r2832, 5;
	// begin inline asm
	lop3.b32 %r2226, %r2227, %r2228, %r2229, 150;
	// end inline asm
	xor.b32  	%r2834, %r2724, %r2708;
	xor.b32  	%r2835, %r2834, %r2772;
	xor.b32  	%r2836, %r2835, %r2812;
	shf.l.wrap.b32 	%r2837, %r2836, %r2836, 1;
	shf.l.wrap.b32 	%r2838, %r2227, %r2227, 30;
	add.s32 	%r2839, %r5623, %r2226;
	add.s32 	%r2840, %r2839, %r2837;
	add.s32 	%r2841, %r2840, %r2225;
	add.s32 	%r2842, %r2841, %r2833;
	add.s32 	%r5623, %r2842, -899497514;
	add.s32 	%r5622, %r2832, %r5622;
	add.s32 	%r5621, %r2838, %r5621;
	add.s32 	%r5620, %r2228, %r5620;
	add.s32 	%r5619, %r2229, %r5619;
	add.s32 	%r2843, %r5618, 128;
	setp.gt.u32 	%p2, %r2843, %r13;
	mov.u32 	%r5618, %r5630;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_2;

$L__BB0_4:
	mov.u32 	%r5629, 0;
	st.local.v4.u32 	[%rd1], {%r5629, %r5629, %r5629, %r5629};
	st.local.v4.u32 	[%rd1+16], {%r5629, %r5629, %r5629, %r5629};
	st.local.v4.u32 	[%rd1+32], {%r5629, %r5629, %r5629, %r5629};
	st.local.v4.u32 	[%rd1+48], {%r5629, %r5629, %r5629, %r5629};
	setp.le.u32 	%p3, %r13, %r5630;
	@%p3 bra 	$L__BB0_10;

	sub.s32 	%r35, %r13, %r5630;
	not.b32 	%r2847, %r5630;
	add.s32 	%r2848, %r13, %r2847;
	and.b32  	%r5633, %r35, 3;
	setp.lt.u32 	%p4, %r2848, 3;
	@%p4 bra 	$L__BB0_8;

	sub.s32 	%r5628, %r35, %r5633;
	mov.u32 	%r5629, 0;
	add.s64 	%rd18, %rd5, 12;

$L__BB0_7:
	cvt.u64.u32 	%rd17, %r5630;
	add.s64 	%rd19, %rd18, %rd17;
	ld.global.u8 	%rs1, [%rd19];
	or.b32  	%r2850, %r5629, 3;
	cvt.u64.u32 	%rd20, %r2850;
	add.s64 	%rd21, %rd1, %rd20;
	st.local.u8 	[%rd21], %rs1;
	add.s32 	%r2851, %r5630, 1;
	cvt.u64.u32 	%rd22, %r2851;
	add.s64 	%rd23, %rd18, %rd22;
	ld.global.u8 	%rs2, [%rd23];
	add.s32 	%r2852, %r5629, 1;
	xor.b32  	%r2853, %r2852, 3;
	cvt.u64.u32 	%rd24, %r2853;
	add.s64 	%rd25, %rd1, %rd24;
	st.local.u8 	[%rd25], %rs2;
	add.s32 	%r2854, %r5630, 2;
	cvt.u64.u32 	%rd26, %r2854;
	add.s64 	%rd27, %rd18, %rd26;
	ld.global.u8 	%rs3, [%rd27];
	add.s32 	%r2855, %r5629, 2;
	xor.b32  	%r2856, %r2855, 3;
	cvt.u64.u32 	%rd28, %r2856;
	add.s64 	%rd29, %rd1, %rd28;
	st.local.u8 	[%rd29], %rs3;
	add.s32 	%r2857, %r5630, 3;
	cvt.u64.u32 	%rd30, %r2857;
	add.s64 	%rd31, %rd18, %rd30;
	ld.global.u8 	%rs4, [%rd31];
	add.s32 	%r2858, %r5629, 3;
	and.b32  	%r2859, %r2858, -4;
	cvt.u64.u32 	%rd32, %r2859;
	add.s64 	%rd33, %rd1, %rd32;
	st.local.u8 	[%rd33], %rs4;
	add.s32 	%r5629, %r5629, 4;
	add.s32 	%r5630, %r5630, 4;
	add.s32 	%r5628, %r5628, -4;
	setp.ne.s32 	%p5, %r5628, 0;
	@%p5 bra 	$L__BB0_7;

$L__BB0_8:
	setp.eq.s32 	%p6, %r5633, 0;
	@%p6 bra 	$L__BB0_10;

$L__BB0_9:
	.pragma "nounroll";
	cvt.u64.u32 	%rd34, %r5630;
	add.s64 	%rd35, %rd5, %rd34;
	ld.global.u8 	%rs5, [%rd35+12];
	xor.b32  	%r2860, %r5629, 3;
	cvt.u64.u32 	%rd36, %r2860;
	add.s64 	%rd37, %rd1, %rd36;
	st.local.u8 	[%rd37], %rs5;
	add.s32 	%r5629, %r5629, 1;
	add.s32 	%r5630, %r5630, 1;
	add.s32 	%r5633, %r5633, -1;
	setp.ne.s32 	%p7, %r5633, 0;
	@%p7 bra 	$L__BB0_9;

$L__BB0_10:
	setp.lt.u32 	%p8, %r5625, 52;
	@%p8 bra 	$L__BB0_19;
	bra.uni 	$L__BB0_11;

$L__BB0_19:
	add.s32 	%r3801, %r5625, 3;
	xor.b32  	%r3802, %r3801, 3;
	cvt.u64.u32 	%rd46, %r3802;
	add.s64 	%rd47, %rd1, %rd46;
	mov.u16 	%rs10, 1;
	st.local.u8 	[%rd47], %rs10;
	add.s32 	%r3803, %r5625, 4;
	xor.b32  	%r3804, %r3803, 3;
	cvt.u64.u32 	%rd48, %r3804;
	add.s64 	%rd49, %rd1, %rd48;
	mov.u16 	%rs11, 128;
	st.local.u8 	[%rd49], %rs11;
	bra.uni 	$L__BB0_20;

$L__BB0_11:
	setp.gt.u32 	%p9, %r5625, 60;
	@%p9 bra 	$L__BB0_13;

	add.s32 	%r2861, %r5625, 3;
	xor.b32  	%r2862, %r2861, 3;
	cvt.u64.u32 	%rd38, %r2862;
	add.s64 	%rd39, %rd1, %rd38;
	mov.u16 	%rs6, 1;
	st.local.u8 	[%rd39], %rs6;

$L__BB0_13:
	setp.gt.u32 	%p10, %r5625, 59;
	@%p10 bra 	$L__BB0_15;

	add.s32 	%r2863, %r5625, 4;
	xor.b32  	%r2864, %r2863, 3;
	cvt.u64.u32 	%rd40, %r2864;
	add.s64 	%rd41, %rd1, %rd40;
	mov.u16 	%rs7, 128;
	st.local.u8 	[%rd41], %rs7;

$L__BB0_15:
	shf.l.wrap.b32 	%r3185, %r5623, %r5623, 5;
	ld.local.v4.u32 	{%r3186, %r3187, %r3188, %r3189}, [%rd1];
	add.s32 	%r3194, %r3185, %r5619;
	// begin inline asm
	lop3.b32 %r2865, %r5622, %r5621, %r5620, 202;
	// end inline asm
	add.s32 	%r3195, %r3194, %r2865;
	add.s32 	%r3196, %r3195, %r3186;
	add.s32 	%r2874, %r3196, 1518500249;
	shf.l.wrap.b32 	%r3197, %r2874, %r2874, 5;
	shf.l.wrap.b32 	%r2876, %r5622, %r5622, 30;
	// begin inline asm
	lop3.b32 %r2869, %r5623, %r2876, %r5621, 202;
	// end inline asm
	add.s32 	%r3198, %r5620, %r2869;
	add.s32 	%r3199, %r3198, %r3187;
	add.s32 	%r3200, %r3199, %r3197;
	add.s32 	%r2878, %r3200, 1518500249;
	shf.l.wrap.b32 	%r3201, %r2878, %r2878, 5;
	shf.l.wrap.b32 	%r2880, %r5623, %r5623, 30;
	// begin inline asm
	lop3.b32 %r2873, %r2874, %r2880, %r2876, 202;
	// end inline asm
	add.s32 	%r3202, %r5621, %r2873;
	add.s32 	%r3203, %r3202, %r3188;
	add.s32 	%r3204, %r3203, %r3201;
	add.s32 	%r2882, %r3204, 1518500249;
	shf.l.wrap.b32 	%r2884, %r2874, %r2874, 30;
	shf.l.wrap.b32 	%r3205, %r2882, %r2882, 5;
	// begin inline asm
	lop3.b32 %r2877, %r2878, %r2884, %r2880, 202;
	// end inline asm
	add.s32 	%r3206, %r2876, %r2877;
	add.s32 	%r3207, %r3206, %r3189;
	add.s32 	%r3208, %r3207, %r3205;
	add.s32 	%r2886, %r3208, 1518500249;
	shf.l.wrap.b32 	%r2888, %r2878, %r2878, 30;
	shf.l.wrap.b32 	%r3209, %r2886, %r2886, 5;
	// begin inline asm
	lop3.b32 %r2881, %r2882, %r2888, %r2884, 202;
	// end inline asm
	ld.local.v4.u32 	{%r3210, %r3211, %r3212, %r3213}, [%rd1+16];
	add.s32 	%r3218, %r2880, %r2881;
	add.s32 	%r3219, %r3218, %r3210;
	add.s32 	%r3220, %r3219, %r3209;
	add.s32 	%r2890, %r3220, 1518500249;
	shf.l.wrap.b32 	%r2892, %r2882, %r2882, 30;
	shf.l.wrap.b32 	%r3221, %r2890, %r2890, 5;
	// begin inline asm
	lop3.b32 %r2885, %r2886, %r2892, %r2888, 202;
	// end inline asm
	add.s32 	%r3222, %r2884, %r2885;
	add.s32 	%r3223, %r3222, %r3211;
	add.s32 	%r3224, %r3223, %r3221;
	add.s32 	%r2894, %r3224, 1518500249;
	shf.l.wrap.b32 	%r2896, %r2886, %r2886, 30;
	shf.l.wrap.b32 	%r3225, %r2894, %r2894, 5;
	// begin inline asm
	lop3.b32 %r2889, %r2890, %r2896, %r2892, 202;
	// end inline asm
	add.s32 	%r3226, %r2888, %r2889;
	add.s32 	%r3227, %r3226, %r3212;
	add.s32 	%r3228, %r3227, %r3225;
	add.s32 	%r2898, %r3228, 1518500249;
	shf.l.wrap.b32 	%r2900, %r2890, %r2890, 30;
	shf.l.wrap.b32 	%r3229, %r2898, %r2898, 5;
	// begin inline asm
	lop3.b32 %r2893, %r2894, %r2900, %r2896, 202;
	// end inline asm
	add.s32 	%r3230, %r2893, %r3213;
	add.s32 	%r3231, %r3230, %r2892;
	add.s32 	%r3232, %r3231, %r3229;
	add.s32 	%r2902, %r3232, 1518500249;
	shf.l.wrap.b32 	%r2904, %r2894, %r2894, 30;
	shf.l.wrap.b32 	%r3233, %r2902, %r2902, 5;
	// begin inline asm
	lop3.b32 %r2897, %r2898, %r2904, %r2900, 202;
	// end inline asm
	ld.local.v4.u32 	{%r3234, %r3235, %r3236, %r3237}, [%rd1+32];
	add.s32 	%r3242, %r2897, %r3234;
	add.s32 	%r3243, %r3242, %r2896;
	add.s32 	%r3244, %r3243, %r3233;
	add.s32 	%r2906, %r3244, 1518500249;
	shf.l.wrap.b32 	%r2908, %r2898, %r2898, 30;
	shf.l.wrap.b32 	%r3245, %r2906, %r2906, 5;
	// begin inline asm
	lop3.b32 %r2901, %r2902, %r2908, %r2904, 202;
	// end inline asm
	add.s32 	%r3246, %r2901, %r3235;
	add.s32 	%r3247, %r3246, %r2900;
	add.s32 	%r3248, %r3247, %r3245;
	add.s32 	%r2910, %r3248, 1518500249;
	shf.l.wrap.b32 	%r2912, %r2902, %r2902, 30;
	shf.l.wrap.b32 	%r3249, %r2910, %r2910, 5;
	// begin inline asm
	lop3.b32 %r2905, %r2906, %r2912, %r2908, 202;
	// end inline asm
	add.s32 	%r3250, %r2905, %r3236;
	add.s32 	%r3251, %r3250, %r2904;
	add.s32 	%r3252, %r3251, %r3249;
	add.s32 	%r2914, %r3252, 1518500249;
	shf.l.wrap.b32 	%r2916, %r2906, %r2906, 30;
	shf.l.wrap.b32 	%r3253, %r2914, %r2914, 5;
	// begin inline asm
	lop3.b32 %r2909, %r2910, %r2916, %r2912, 202;
	// end inline asm
	add.s32 	%r3254, %r2909, %r3237;
	add.s32 	%r3255, %r3254, %r2908;
	add.s32 	%r3256, %r3255, %r3253;
	add.s32 	%r2918, %r3256, 1518500249;
	shf.l.wrap.b32 	%r2920, %r2910, %r2910, 30;
	shf.l.wrap.b32 	%r3257, %r2918, %r2918, 5;
	// begin inline asm
	lop3.b32 %r2913, %r2914, %r2920, %r2916, 202;
	// end inline asm
	ld.local.v4.u32 	{%r3258, %r3259, %r3260, %r3261}, [%rd1+48];
	add.s32 	%r3266, %r2913, %r3258;
	add.s32 	%r3267, %r3266, %r2912;
	add.s32 	%r3268, %r3267, %r3257;
	add.s32 	%r2922, %r3268, 1518500249;
	shf.l.wrap.b32 	%r2924, %r2914, %r2914, 30;
	shf.l.wrap.b32 	%r3269, %r2922, %r2922, 5;
	// begin inline asm
	lop3.b32 %r2917, %r2918, %r2924, %r2920, 202;
	// end inline asm
	add.s32 	%r3270, %r2917, %r3259;
	add.s32 	%r3271, %r3270, %r2916;
	add.s32 	%r3272, %r3271, %r3269;
	add.s32 	%r2926, %r3272, 1518500249;
	shf.l.wrap.b32 	%r2928, %r2918, %r2918, 30;
	shf.l.wrap.b32 	%r3273, %r2926, %r2926, 5;
	// begin inline asm
	lop3.b32 %r2921, %r2922, %r2928, %r2924, 202;
	// end inline asm
	add.s32 	%r3274, %r2921, %r3260;
	add.s32 	%r3275, %r3274, %r2920;
	add.s32 	%r3276, %r3275, %r3273;
	add.s32 	%r2930, %r3276, 1518500249;
	shf.l.wrap.b32 	%r2932, %r2922, %r2922, 30;
	shf.l.wrap.b32 	%r3277, %r2930, %r2930, 5;
	// begin inline asm
	lop3.b32 %r2925, %r2926, %r2932, %r2928, 202;
	// end inline asm
	add.s32 	%r3278, %r2925, %r3261;
	add.s32 	%r3279, %r3278, %r2924;
	add.s32 	%r3280, %r3279, %r3277;
	add.s32 	%r2934, %r3280, 1518500249;
	shf.l.wrap.b32 	%r2936, %r2926, %r2926, 30;
	shf.l.wrap.b32 	%r3281, %r2934, %r2934, 5;
	// begin inline asm
	lop3.b32 %r2929, %r2930, %r2936, %r2932, 202;
	// end inline asm
	xor.b32  	%r3282, %r3234, %r3259;
	xor.b32  	%r3283, %r3282, %r3188;
	xor.b32  	%r3284, %r3283, %r3186;
	shf.l.wrap.b32 	%r3285, %r3284, %r3284, 1;
	add.s32 	%r3286, %r2929, %r3285;
	add.s32 	%r3287, %r3286, %r2928;
	add.s32 	%r3288, %r3287, %r3281;
	add.s32 	%r2938, %r3288, 1518500249;
	shf.l.wrap.b32 	%r2940, %r2930, %r2930, 30;
	shf.l.wrap.b32 	%r3289, %r2938, %r2938, 5;
	// begin inline asm
	lop3.b32 %r2933, %r2934, %r2940, %r2936, 202;
	// end inline asm
	xor.b32  	%r3290, %r3235, %r3260;
	xor.b32  	%r3291, %r3290, %r3189;
	xor.b32  	%r3292, %r3291, %r3187;
	shf.l.wrap.b32 	%r3293, %r3292, %r3292, 1;
	add.s32 	%r3294, %r2933, %r3293;
	add.s32 	%r3295, %r3294, %r2932;
	add.s32 	%r3296, %r3295, %r3289;
	add.s32 	%r2942, %r3296, 1518500249;
	shf.l.wrap.b32 	%r2944, %r2934, %r2934, 30;
	shf.l.wrap.b32 	%r3297, %r2942, %r2942, 5;
	// begin inline asm
	lop3.b32 %r2937, %r2938, %r2944, %r2940, 202;
	// end inline asm
	xor.b32  	%r3298, %r3236, %r3261;
	xor.b32  	%r3299, %r3298, %r3210;
	xor.b32  	%r3300, %r3299, %r3188;
	shf.l.wrap.b32 	%r3301, %r3300, %r3300, 1;
	add.s32 	%r3302, %r2937, %r3301;
	add.s32 	%r3303, %r3302, %r2936;
	add.s32 	%r3304, %r3303, %r3297;
	add.s32 	%r2946, %r3304, 1518500249;
	shf.l.wrap.b32 	%r2948, %r2938, %r2938, 30;
	shf.l.wrap.b32 	%r3305, %r2946, %r2946, 5;
	// begin inline asm
	lop3.b32 %r2941, %r2942, %r2948, %r2944, 202;
	// end inline asm
	xor.b32  	%r3306, %r3237, %r3285;
	xor.b32  	%r3307, %r3306, %r3211;
	xor.b32  	%r3308, %r3307, %r3189;
	shf.l.wrap.b32 	%r3309, %r3308, %r3308, 1;
	add.s32 	%r3310, %r2941, %r3309;
	add.s32 	%r3311, %r3310, %r2940;
	add.s32 	%r3312, %r3311, %r3305;
	add.s32 	%r2950, %r3312, 1518500249;
	shf.l.wrap.b32 	%r2952, %r2942, %r2942, 30;
	shf.l.wrap.b32 	%r3313, %r2950, %r2950, 5;
	// begin inline asm
	lop3.b32 %r2945, %r2946, %r2952, %r2948, 150;
	// end inline asm
	xor.b32  	%r3314, %r3258, %r3293;
	xor.b32  	%r3315, %r3314, %r3212;
	xor.b32  	%r3316, %r3315, %r3210;
	shf.l.wrap.b32 	%r3317, %r3316, %r3316, 1;
	add.s32 	%r3318, %r2945, %r3317;
	add.s32 	%r3319, %r3318, %r2944;
	add.s32 	%r3320, %r3319, %r3313;
	add.s32 	%r2954, %r3320, 1859775393;
	shf.l.wrap.b32 	%r2956, %r2946, %r2946, 30;
	shf.l.wrap.b32 	%r3321, %r2954, %r2954, 5;
	// begin inline asm
	lop3.b32 %r2949, %r2950, %r2956, %r2952, 150;
	// end inline asm
	xor.b32  	%r3322, %r3259, %r3301;
	xor.b32  	%r3323, %r3322, %r3213;
	xor.b32  	%r3324, %r3323, %r3211;
	shf.l.wrap.b32 	%r3325, %r3324, %r3324, 1;
	add.s32 	%r3326, %r2949, %r3325;
	add.s32 	%r3327, %r3326, %r2948;
	add.s32 	%r3328, %r3327, %r3321;
	add.s32 	%r2958, %r3328, 1859775393;
	shf.l.wrap.b32 	%r2960, %r2950, %r2950, 30;
	shf.l.wrap.b32 	%r3329, %r2958, %r2958, 5;
	// begin inline asm
	lop3.b32 %r2953, %r2954, %r2960, %r2956, 150;
	// end inline asm
	xor.b32  	%r3330, %r3260, %r3309;
	xor.b32  	%r3331, %r3330, %r3234;
	xor.b32  	%r3332, %r3331, %r3212;
	shf.l.wrap.b32 	%r3333, %r3332, %r3332, 1;
	add.s32 	%r3334, %r2953, %r3333;
	add.s32 	%r3335, %r3334, %r2952;
	add.s32 	%r3336, %r3335, %r3329;
	add.s32 	%r2962, %r3336, 1859775393;
	shf.l.wrap.b32 	%r2964, %r2954, %r2954, 30;
	shf.l.wrap.b32 	%r3337, %r2962, %r2962, 5;
	// begin inline asm
	lop3.b32 %r2957, %r2958, %r2964, %r2960, 150;
	// end inline asm
	xor.b32  	%r3338, %r3261, %r3317;
	xor.b32  	%r3339, %r3338, %r3235;
	xor.b32  	%r3340, %r3339, %r3213;
	shf.l.wrap.b32 	%r3341, %r3340, %r3340, 1;
	add.s32 	%r3342, %r2957, %r3341;
	add.s32 	%r3343, %r3342, %r2956;
	add.s32 	%r3344, %r3343, %r3337;
	add.s32 	%r2966, %r3344, 1859775393;
	shf.l.wrap.b32 	%r2968, %r2958, %r2958, 30;
	shf.l.wrap.b32 	%r3345, %r2966, %r2966, 5;
	// begin inline asm
	lop3.b32 %r2961, %r2962, %r2968, %r2964, 150;
	// end inline asm
	xor.b32  	%r3346, %r3325, %r3285;
	xor.b32  	%r3347, %r3346, %r3236;
	xor.b32  	%r3348, %r3347, %r3234;
	shf.l.wrap.b32 	%r3349, %r3348, %r3348, 1;
	add.s32 	%r3350, %r2961, %r3349;
	add.s32 	%r3351, %r3350, %r2960;
	add.s32 	%r3352, %r3351, %r3345;
	add.s32 	%r2970, %r3352, 1859775393;
	shf.l.wrap.b32 	%r2972, %r2962, %r2962, 30;
	shf.l.wrap.b32 	%r3353, %r2970, %r2970, 5;
	// begin inline asm
	lop3.b32 %r2965, %r2966, %r2972, %r2968, 150;
	// end inline asm
	xor.b32  	%r3354, %r3333, %r3293;
	xor.b32  	%r3355, %r3354, %r3237;
	xor.b32  	%r3356, %r3355, %r3235;
	shf.l.wrap.b32 	%r3357, %r3356, %r3356, 1;
	add.s32 	%r3358, %r2965, %r3357;
	add.s32 	%r3359, %r3358, %r2964;
	add.s32 	%r3360, %r3359, %r3353;
	add.s32 	%r2974, %r3360, 1859775393;
	shf.l.wrap.b32 	%r2976, %r2966, %r2966, 30;
	shf.l.wrap.b32 	%r3361, %r2974, %r2974, 5;
	// begin inline asm
	lop3.b32 %r2969, %r2970, %r2976, %r2972, 150;
	// end inline asm
	xor.b32  	%r3362, %r3341, %r3301;
	xor.b32  	%r3363, %r3362, %r3258;
	xor.b32  	%r3364, %r3363, %r3236;
	shf.l.wrap.b32 	%r3365, %r3364, %r3364, 1;
	add.s32 	%r3366, %r2969, %r3365;
	add.s32 	%r3367, %r3366, %r2968;
	add.s32 	%r3368, %r3367, %r3361;
	add.s32 	%r2978, %r3368, 1859775393;
	shf.l.wrap.b32 	%r2980, %r2970, %r2970, 30;
	shf.l.wrap.b32 	%r3369, %r2978, %r2978, 5;
	// begin inline asm
	lop3.b32 %r2973, %r2974, %r2980, %r2976, 150;
	// end inline asm
	xor.b32  	%r3370, %r3349, %r3309;
	xor.b32  	%r3371, %r3370, %r3259;
	xor.b32  	%r3372, %r3371, %r3237;
	shf.l.wrap.b32 	%r3373, %r3372, %r3372, 1;
	add.s32 	%r3374, %r2973, %r3373;
	add.s32 	%r3375, %r3374, %r2972;
	add.s32 	%r3376, %r3375, %r3369;
	add.s32 	%r2982, %r3376, 1859775393;
	shf.l.wrap.b32 	%r2984, %r2974, %r2974, 30;
	shf.l.wrap.b32 	%r3377, %r2982, %r2982, 5;
	// begin inline asm
	lop3.b32 %r2977, %r2978, %r2984, %r2980, 150;
	// end inline asm
	xor.b32  	%r3378, %r3357, %r3317;
	xor.b32  	%r3379, %r3378, %r3260;
	xor.b32  	%r3380, %r3379, %r3258;
	shf.l.wrap.b32 	%r3381, %r3380, %r3380, 1;
	add.s32 	%r3382, %r2977, %r3381;
	add.s32 	%r3383, %r3382, %r2976;
	add.s32 	%r3384, %r3383, %r3377;
	add.s32 	%r2986, %r3384, 1859775393;
	shf.l.wrap.b32 	%r2988, %r2978, %r2978, 30;
	shf.l.wrap.b32 	%r3385, %r2986, %r2986, 5;
	// begin inline asm
	lop3.b32 %r2981, %r2982, %r2988, %r2984, 150;
	// end inline asm
	xor.b32  	%r3386, %r3365, %r3325;
	xor.b32  	%r3387, %r3386, %r3261;
	xor.b32  	%r3388, %r3387, %r3259;
	shf.l.wrap.b32 	%r3389, %r3388, %r3388, 1;
	add.s32 	%r3390, %r2981, %r3389;
	add.s32 	%r3391, %r3390, %r2980;
	add.s32 	%r3392, %r3391, %r3385;
	add.s32 	%r2990, %r3392, 1859775393;
	shf.l.wrap.b32 	%r2992, %r2982, %r2982, 30;
	shf.l.wrap.b32 	%r3393, %r2990, %r2990, 5;
	// begin inline asm
	lop3.b32 %r2985, %r2986, %r2992, %r2988, 150;
	// end inline asm
	xor.b32  	%r3394, %r3333, %r3285;
	xor.b32  	%r3395, %r3394, %r3373;
	xor.b32  	%r3396, %r3395, %r3260;
	shf.l.wrap.b32 	%r3397, %r3396, %r3396, 1;
	add.s32 	%r3398, %r2985, %r3397;
	add.s32 	%r3399, %r3398, %r2984;
	add.s32 	%r3400, %r3399, %r3393;
	add.s32 	%r2994, %r3400, 1859775393;
	shf.l.wrap.b32 	%r2996, %r2986, %r2986, 30;
	shf.l.wrap.b32 	%r3401, %r2994, %r2994, 5;
	// begin inline asm
	lop3.b32 %r2989, %r2990, %r2996, %r2992, 150;
	// end inline asm
	xor.b32  	%r3402, %r3341, %r3293;
	xor.b32  	%r3403, %r3402, %r3381;
	xor.b32  	%r3404, %r3403, %r3261;
	shf.l.wrap.b32 	%r3405, %r3404, %r3404, 1;
	add.s32 	%r3406, %r2989, %r3405;
	add.s32 	%r3407, %r3406, %r2988;
	add.s32 	%r3408, %r3407, %r3401;
	add.s32 	%r2998, %r3408, 1859775393;
	shf.l.wrap.b32 	%r3000, %r2990, %r2990, 30;
	shf.l.wrap.b32 	%r3409, %r2998, %r2998, 5;
	// begin inline asm
	lop3.b32 %r2993, %r2994, %r3000, %r2996, 150;
	// end inline asm
	xor.b32  	%r3410, %r3301, %r3285;
	xor.b32  	%r3411, %r3410, %r3349;
	xor.b32  	%r3412, %r3411, %r3389;
	shf.l.wrap.b32 	%r3413, %r3412, %r3412, 1;
	add.s32 	%r3414, %r2993, %r3413;
	add.s32 	%r3415, %r3414, %r2992;
	add.s32 	%r3416, %r3415, %r3409;
	add.s32 	%r3002, %r3416, 1859775393;
	shf.l.wrap.b32 	%r3004, %r2994, %r2994, 30;
	shf.l.wrap.b32 	%r3417, %r3002, %r3002, 5;
	// begin inline asm
	lop3.b32 %r2997, %r2998, %r3004, %r3000, 150;
	// end inline asm
	xor.b32  	%r3418, %r3309, %r3293;
	xor.b32  	%r3419, %r3418, %r3357;
	xor.b32  	%r3420, %r3419, %r3397;
	shf.l.wrap.b32 	%r3421, %r3420, %r3420, 1;
	add.s32 	%r3422, %r2997, %r3421;
	add.s32 	%r3423, %r3422, %r2996;
	add.s32 	%r3424, %r3423, %r3417;
	add.s32 	%r3006, %r3424, 1859775393;
	shf.l.wrap.b32 	%r3008, %r2998, %r2998, 30;
	shf.l.wrap.b32 	%r3425, %r3006, %r3006, 5;
	// begin inline asm
	lop3.b32 %r3001, %r3002, %r3008, %r3004, 150;
	// end inline asm
	xor.b32  	%r3426, %r3317, %r3301;
	xor.b32  	%r3427, %r3426, %r3365;
	xor.b32  	%r3428, %r3427, %r3405;
	shf.l.wrap.b32 	%r3429, %r3428, %r3428, 1;
	add.s32 	%r3430, %r3001, %r3429;
	add.s32 	%r3431, %r3430, %r3000;
	add.s32 	%r3432, %r3431, %r3425;
	add.s32 	%r3010, %r3432, 1859775393;
	shf.l.wrap.b32 	%r3012, %r3002, %r3002, 30;
	shf.l.wrap.b32 	%r3433, %r3010, %r3010, 5;
	// begin inline asm
	lop3.b32 %r3005, %r3006, %r3012, %r3008, 150;
	// end inline asm
	xor.b32  	%r3434, %r3325, %r3309;
	xor.b32  	%r3435, %r3434, %r3373;
	xor.b32  	%r3436, %r3435, %r3413;
	shf.l.wrap.b32 	%r3437, %r3436, %r3436, 1;
	add.s32 	%r3438, %r3005, %r3437;
	add.s32 	%r3439, %r3438, %r3004;
	add.s32 	%r3440, %r3439, %r3433;
	add.s32 	%r3014, %r3440, 1859775393;
	shf.l.wrap.b32 	%r3016, %r3006, %r3006, 30;
	shf.l.wrap.b32 	%r3441, %r3014, %r3014, 5;
	// begin inline asm
	lop3.b32 %r3009, %r3010, %r3016, %r3012, 150;
	// end inline asm
	xor.b32  	%r3442, %r3333, %r3317;
	xor.b32  	%r3443, %r3442, %r3381;
	xor.b32  	%r3444, %r3443, %r3421;
	shf.l.wrap.b32 	%r3445, %r3444, %r3444, 1;
	add.s32 	%r3446, %r3009, %r3445;
	add.s32 	%r3447, %r3446, %r3008;
	add.s32 	%r3448, %r3447, %r3441;
	add.s32 	%r3018, %r3448, 1859775393;
	shf.l.wrap.b32 	%r3020, %r3010, %r3010, 30;
	shf.l.wrap.b32 	%r3449, %r3018, %r3018, 5;
	// begin inline asm
	lop3.b32 %r3013, %r3014, %r3020, %r3016, 150;
	// end inline asm
	xor.b32  	%r3450, %r3341, %r3325;
	xor.b32  	%r3451, %r3450, %r3389;
	xor.b32  	%r3452, %r3451, %r3429;
	shf.l.wrap.b32 	%r3453, %r3452, %r3452, 1;
	add.s32 	%r3454, %r3013, %r3453;
	add.s32 	%r3455, %r3454, %r3012;
	add.s32 	%r3456, %r3455, %r3449;
	add.s32 	%r3022, %r3456, 1859775393;
	shf.l.wrap.b32 	%r3024, %r3014, %r3014, 30;
	shf.l.wrap.b32 	%r3457, %r3022, %r3022, 5;
	// begin inline asm
	lop3.b32 %r3017, %r3018, %r3024, %r3020, 150;
	// end inline asm
	xor.b32  	%r3458, %r3349, %r3333;
	xor.b32  	%r3459, %r3458, %r3397;
	xor.b32  	%r3460, %r3459, %r3437;
	shf.l.wrap.b32 	%r3461, %r3460, %r3460, 1;
	add.s32 	%r3462, %r3017, %r3461;
	add.s32 	%r3463, %r3462, %r3016;
	add.s32 	%r3464, %r3463, %r3457;
	add.s32 	%r3026, %r3464, 1859775393;
	shf.l.wrap.b32 	%r3028, %r3018, %r3018, 30;
	shf.l.wrap.b32 	%r3465, %r3026, %r3026, 5;
	// begin inline asm
	lop3.b32 %r3021, %r3022, %r3028, %r3024, 150;
	// end inline asm
	xor.b32  	%r3466, %r3357, %r3341;
	xor.b32  	%r3467, %r3466, %r3405;
	xor.b32  	%r3468, %r3467, %r3445;
	shf.l.wrap.b32 	%r3469, %r3468, %r3468, 1;
	add.s32 	%r3470, %r3021, %r3469;
	add.s32 	%r3471, %r3470, %r3020;
	add.s32 	%r3472, %r3471, %r3465;
	add.s32 	%r3030, %r3472, 1859775393;
	shf.l.wrap.b32 	%r3032, %r3022, %r3022, 30;
	shf.l.wrap.b32 	%r3473, %r3030, %r3030, 5;
	// begin inline asm
	lop3.b32 %r3025, %r3026, %r3032, %r3028, 232;
	// end inline asm
	xor.b32  	%r3474, %r3365, %r3349;
	xor.b32  	%r3475, %r3474, %r3413;
	xor.b32  	%r3476, %r3475, %r3453;
	shf.l.wrap.b32 	%r3477, %r3476, %r3476, 1;
	add.s32 	%r3478, %r3025, %r3477;
	add.s32 	%r3479, %r3478, %r3024;
	add.s32 	%r3480, %r3479, %r3473;
	add.s32 	%r3034, %r3480, -1894007588;
	shf.l.wrap.b32 	%r3036, %r3026, %r3026, 30;
	shf.l.wrap.b32 	%r3481, %r3034, %r3034, 5;
	// begin inline asm
	lop3.b32 %r3029, %r3030, %r3036, %r3032, 232;
	// end inline asm
	xor.b32  	%r3482, %r3373, %r3357;
	xor.b32  	%r3483, %r3482, %r3421;
	xor.b32  	%r3484, %r3483, %r3461;
	shf.l.wrap.b32 	%r3485, %r3484, %r3484, 1;
	add.s32 	%r3486, %r3029, %r3485;
	add.s32 	%r3487, %r3486, %r3028;
	add.s32 	%r3488, %r3487, %r3481;
	add.s32 	%r3038, %r3488, -1894007588;
	shf.l.wrap.b32 	%r3040, %r3030, %r3030, 30;
	shf.l.wrap.b32 	%r3489, %r3038, %r3038, 5;
	// begin inline asm
	lop3.b32 %r3033, %r3034, %r3040, %r3036, 232;
	// end inline asm
	xor.b32  	%r3490, %r3381, %r3365;
	xor.b32  	%r3491, %r3490, %r3429;
	xor.b32  	%r3492, %r3491, %r3469;
	shf.l.wrap.b32 	%r3493, %r3492, %r3492, 1;
	add.s32 	%r3494, %r3033, %r3493;
	add.s32 	%r3495, %r3494, %r3032;
	add.s32 	%r3496, %r3495, %r3489;
	add.s32 	%r3042, %r3496, -1894007588;
	shf.l.wrap.b32 	%r3044, %r3034, %r3034, 30;
	shf.l.wrap.b32 	%r3497, %r3042, %r3042, 5;
	// begin inline asm
	lop3.b32 %r3037, %r3038, %r3044, %r3040, 232;
	// end inline asm
	xor.b32  	%r3498, %r3389, %r3373;
	xor.b32  	%r3499, %r3498, %r3437;
	xor.b32  	%r3500, %r3499, %r3477;
	shf.l.wrap.b32 	%r3501, %r3500, %r3500, 1;
	add.s32 	%r3502, %r3037, %r3501;
	add.s32 	%r3503, %r3502, %r3036;
	add.s32 	%r3504, %r3503, %r3497;
	add.s32 	%r3046, %r3504, -1894007588;
	shf.l.wrap.b32 	%r3048, %r3038, %r3038, 30;
	shf.l.wrap.b32 	%r3505, %r3046, %r3046, 5;
	// begin inline asm
	lop3.b32 %r3041, %r3042, %r3048, %r3044, 232;
	// end inline asm
	xor.b32  	%r3506, %r3397, %r3381;
	xor.b32  	%r3507, %r3506, %r3445;
	xor.b32  	%r3508, %r3507, %r3485;
	shf.l.wrap.b32 	%r3509, %r3508, %r3508, 1;
	add.s32 	%r3510, %r3041, %r3509;
	add.s32 	%r3511, %r3510, %r3040;
	add.s32 	%r3512, %r3511, %r3505;
	add.s32 	%r3050, %r3512, -1894007588;
	shf.l.wrap.b32 	%r3052, %r3042, %r3042, 30;
	shf.l.wrap.b32 	%r3513, %r3050, %r3050, 5;
	// begin inline asm
	lop3.b32 %r3045, %r3046, %r3052, %r3048, 232;
	// end inline asm
	xor.b32  	%r3514, %r3405, %r3389;
	xor.b32  	%r3515, %r3514, %r3453;
	xor.b32  	%r3516, %r3515, %r3493;
	shf.l.wrap.b32 	%r3517, %r3516, %r3516, 1;
	add.s32 	%r3518, %r3045, %r3517;
	add.s32 	%r3519, %r3518, %r3044;
	add.s32 	%r3520, %r3519, %r3513;
	add.s32 	%r3054, %r3520, -1894007588;
	shf.l.wrap.b32 	%r3056, %r3046, %r3046, 30;
	shf.l.wrap.b32 	%r3521, %r3054, %r3054, 5;
	// begin inline asm
	lop3.b32 %r3049, %r3050, %r3056, %r3052, 232;
	// end inline asm
	xor.b32  	%r3522, %r3413, %r3397;
	xor.b32  	%r3523, %r3522, %r3461;
	xor.b32  	%r3524, %r3523, %r3501;
	shf.l.wrap.b32 	%r3525, %r3524, %r3524, 1;
	add.s32 	%r3526, %r3049, %r3525;
	add.s32 	%r3527, %r3526, %r3048;
	add.s32 	%r3528, %r3527, %r3521;
	add.s32 	%r3058, %r3528, -1894007588;
	shf.l.wrap.b32 	%r3060, %r3050, %r3050, 30;
	shf.l.wrap.b32 	%r3529, %r3058, %r3058, 5;
	// begin inline asm
	lop3.b32 %r3053, %r3054, %r3060, %r3056, 232;
	// end inline asm
	xor.b32  	%r3530, %r3421, %r3405;
	xor.b32  	%r3531, %r3530, %r3469;
	xor.b32  	%r3532, %r3531, %r3509;
	shf.l.wrap.b32 	%r3533, %r3532, %r3532, 1;
	add.s32 	%r3534, %r3053, %r3533;
	add.s32 	%r3535, %r3534, %r3052;
	add.s32 	%r3536, %r3535, %r3529;
	add.s32 	%r3062, %r3536, -1894007588;
	shf.l.wrap.b32 	%r3064, %r3054, %r3054, 30;
	shf.l.wrap.b32 	%r3537, %r3062, %r3062, 5;
	// begin inline asm
	lop3.b32 %r3057, %r3058, %r3064, %r3060, 232;
	// end inline asm
	xor.b32  	%r3538, %r3429, %r3413;
	xor.b32  	%r3539, %r3538, %r3477;
	xor.b32  	%r3540, %r3539, %r3517;
	shf.l.wrap.b32 	%r3541, %r3540, %r3540, 1;
	add.s32 	%r3542, %r3057, %r3541;
	add.s32 	%r3543, %r3542, %r3056;
	add.s32 	%r3544, %r3543, %r3537;
	add.s32 	%r3066, %r3544, -1894007588;
	shf.l.wrap.b32 	%r3068, %r3058, %r3058, 30;
	shf.l.wrap.b32 	%r3545, %r3066, %r3066, 5;
	// begin inline asm
	lop3.b32 %r3061, %r3062, %r3068, %r3064, 232;
	// end inline asm
	xor.b32  	%r3546, %r3437, %r3421;
	xor.b32  	%r3547, %r3546, %r3485;
	xor.b32  	%r3548, %r3547, %r3525;
	shf.l.wrap.b32 	%r3549, %r3548, %r3548, 1;
	add.s32 	%r3550, %r3061, %r3549;
	add.s32 	%r3551, %r3550, %r3060;
	add.s32 	%r3552, %r3551, %r3545;
	add.s32 	%r3070, %r3552, -1894007588;
	shf.l.wrap.b32 	%r3072, %r3062, %r3062, 30;
	shf.l.wrap.b32 	%r3553, %r3070, %r3070, 5;
	// begin inline asm
	lop3.b32 %r3065, %r3066, %r3072, %r3068, 232;
	// end inline asm
	xor.b32  	%r3554, %r3445, %r3429;
	xor.b32  	%r3555, %r3554, %r3493;
	xor.b32  	%r3556, %r3555, %r3533;
	shf.l.wrap.b32 	%r3557, %r3556, %r3556, 1;
	add.s32 	%r3558, %r3065, %r3557;
	add.s32 	%r3559, %r3558, %r3064;
	add.s32 	%r3560, %r3559, %r3553;
	add.s32 	%r3074, %r3560, -1894007588;
	shf.l.wrap.b32 	%r3076, %r3066, %r3066, 30;
	shf.l.wrap.b32 	%r3561, %r3074, %r3074, 5;
	// begin inline asm
	lop3.b32 %r3069, %r3070, %r3076, %r3072, 232;
	// end inline asm
	xor.b32  	%r3562, %r3453, %r3437;
	xor.b32  	%r3563, %r3562, %r3501;
	xor.b32  	%r3564, %r3563, %r3541;
	shf.l.wrap.b32 	%r3565, %r3564, %r3564, 1;
	add.s32 	%r3566, %r3069, %r3565;
	add.s32 	%r3567, %r3566, %r3068;
	add.s32 	%r3568, %r3567, %r3561;
	add.s32 	%r3078, %r3568, -1894007588;
	shf.l.wrap.b32 	%r3080, %r3070, %r3070, 30;
	shf.l.wrap.b32 	%r3569, %r3078, %r3078, 5;
	// begin inline asm
	lop3.b32 %r3073, %r3074, %r3080, %r3076, 232;
	// end inline asm
	xor.b32  	%r3570, %r3461, %r3445;
	xor.b32  	%r3571, %r3570, %r3509;
	xor.b32  	%r3572, %r3571, %r3549;
	shf.l.wrap.b32 	%r3573, %r3572, %r3572, 1;
	add.s32 	%r3574, %r3073, %r3573;
	add.s32 	%r3575, %r3574, %r3072;
	add.s32 	%r3576, %r3575, %r3569;
	add.s32 	%r3082, %r3576, -1894007588;
	shf.l.wrap.b32 	%r3084, %r3074, %r3074, 30;
	shf.l.wrap.b32 	%r3577, %r3082, %r3082, 5;
	// begin inline asm
	lop3.b32 %r3077, %r3078, %r3084, %r3080, 232;
	// end inline asm
	xor.b32  	%r3578, %r3469, %r3453;
	xor.b32  	%r3579, %r3578, %r3517;
	xor.b32  	%r3580, %r3579, %r3557;
	shf.l.wrap.b32 	%r3581, %r3580, %r3580, 1;
	add.s32 	%r3582, %r3077, %r3581;
	add.s32 	%r3583, %r3582, %r3076;
	add.s32 	%r3584, %r3583, %r3577;
	add.s32 	%r3086, %r3584, -1894007588;
	shf.l.wrap.b32 	%r3088, %r3078, %r3078, 30;
	shf.l.wrap.b32 	%r3585, %r3086, %r3086, 5;
	// begin inline asm
	lop3.b32 %r3081, %r3082, %r3088, %r3084, 232;
	// end inline asm
	xor.b32  	%r3586, %r3477, %r3461;
	xor.b32  	%r3587, %r3586, %r3525;
	xor.b32  	%r3588, %r3587, %r3565;
	shf.l.wrap.b32 	%r3589, %r3588, %r3588, 1;
	add.s32 	%r3590, %r3081, %r3589;
	add.s32 	%r3591, %r3590, %r3080;
	add.s32 	%r3592, %r3591, %r3585;
	add.s32 	%r3090, %r3592, -1894007588;
	shf.l.wrap.b32 	%r3092, %r3082, %r3082, 30;
	shf.l.wrap.b32 	%r3593, %r3090, %r3090, 5;
	// begin inline asm
	lop3.b32 %r3085, %r3086, %r3092, %r3088, 232;
	// end inline asm
	xor.b32  	%r3594, %r3485, %r3469;
	xor.b32  	%r3595, %r3594, %r3533;
	xor.b32  	%r3596, %r3595, %r3573;
	shf.l.wrap.b32 	%r3597, %r3596, %r3596, 1;
	add.s32 	%r3598, %r3085, %r3597;
	add.s32 	%r3599, %r3598, %r3084;
	add.s32 	%r3600, %r3599, %r3593;
	add.s32 	%r3094, %r3600, -1894007588;
	shf.l.wrap.b32 	%r3096, %r3086, %r3086, 30;
	shf.l.wrap.b32 	%r3601, %r3094, %r3094, 5;
	// begin inline asm
	lop3.b32 %r3089, %r3090, %r3096, %r3092, 232;
	// end inline asm
	xor.b32  	%r3602, %r3493, %r3477;
	xor.b32  	%r3603, %r3602, %r3541;
	xor.b32  	%r3604, %r3603, %r3581;
	shf.l.wrap.b32 	%r3605, %r3604, %r3604, 1;
	add.s32 	%r3606, %r3089, %r3605;
	add.s32 	%r3607, %r3606, %r3088;
	add.s32 	%r3608, %r3607, %r3601;
	add.s32 	%r3098, %r3608, -1894007588;
	shf.l.wrap.b32 	%r3100, %r3090, %r3090, 30;
	shf.l.wrap.b32 	%r3609, %r3098, %r3098, 5;
	// begin inline asm
	lop3.b32 %r3093, %r3094, %r3100, %r3096, 232;
	// end inline asm
	xor.b32  	%r3610, %r3501, %r3485;
	xor.b32  	%r3611, %r3610, %r3549;
	xor.b32  	%r3612, %r3611, %r3589;
	shf.l.wrap.b32 	%r3613, %r3612, %r3612, 1;
	add.s32 	%r3614, %r3093, %r3613;
	add.s32 	%r3615, %r3614, %r3092;
	add.s32 	%r3616, %r3615, %r3609;
	add.s32 	%r3102, %r3616, -1894007588;
	shf.l.wrap.b32 	%r3104, %r3094, %r3094, 30;
	shf.l.wrap.b32 	%r3617, %r3102, %r3102, 5;
	// begin inline asm
	lop3.b32 %r3097, %r3098, %r3104, %r3100, 232;
	// end inline asm
	xor.b32  	%r3618, %r3509, %r3493;
	xor.b32  	%r3619, %r3618, %r3557;
	xor.b32  	%r3620, %r3619, %r3597;
	shf.l.wrap.b32 	%r3621, %r3620, %r3620, 1;
	add.s32 	%r3622, %r3097, %r3621;
	add.s32 	%r3623, %r3622, %r3096;
	add.s32 	%r3624, %r3623, %r3617;
	add.s32 	%r3106, %r3624, -1894007588;
	shf.l.wrap.b32 	%r3108, %r3098, %r3098, 30;
	shf.l.wrap.b32 	%r3625, %r3106, %r3106, 5;
	// begin inline asm
	lop3.b32 %r3101, %r3102, %r3108, %r3104, 232;
	// end inline asm
	xor.b32  	%r3626, %r3517, %r3501;
	xor.b32  	%r3627, %r3626, %r3565;
	xor.b32  	%r3628, %r3627, %r3605;
	shf.l.wrap.b32 	%r3629, %r3628, %r3628, 1;
	add.s32 	%r3630, %r3101, %r3629;
	add.s32 	%r3631, %r3630, %r3100;
	add.s32 	%r3632, %r3631, %r3625;
	add.s32 	%r3110, %r3632, -1894007588;
	shf.l.wrap.b32 	%r3112, %r3102, %r3102, 30;
	shf.l.wrap.b32 	%r3633, %r3110, %r3110, 5;
	// begin inline asm
	lop3.b32 %r3105, %r3106, %r3112, %r3108, 150;
	// end inline asm
	xor.b32  	%r3634, %r3525, %r3509;
	xor.b32  	%r3635, %r3634, %r3573;
	xor.b32  	%r3636, %r3635, %r3613;
	shf.l.wrap.b32 	%r3637, %r3636, %r3636, 1;
	add.s32 	%r3638, %r3105, %r3637;
	add.s32 	%r3639, %r3638, %r3104;
	add.s32 	%r3640, %r3639, %r3633;
	add.s32 	%r3114, %r3640, -899497514;
	shf.l.wrap.b32 	%r3116, %r3106, %r3106, 30;
	shf.l.wrap.b32 	%r3641, %r3114, %r3114, 5;
	// begin inline asm
	lop3.b32 %r3109, %r3110, %r3116, %r3112, 150;
	// end inline asm
	xor.b32  	%r3642, %r3533, %r3517;
	xor.b32  	%r3643, %r3642, %r3581;
	xor.b32  	%r3644, %r3643, %r3621;
	shf.l.wrap.b32 	%r3645, %r3644, %r3644, 1;
	add.s32 	%r3646, %r3109, %r3645;
	add.s32 	%r3647, %r3646, %r3108;
	add.s32 	%r3648, %r3647, %r3641;
	add.s32 	%r3118, %r3648, -899497514;
	shf.l.wrap.b32 	%r3120, %r3110, %r3110, 30;
	shf.l.wrap.b32 	%r3649, %r3118, %r3118, 5;
	// begin inline asm
	lop3.b32 %r3113, %r3114, %r3120, %r3116, 150;
	// end inline asm
	xor.b32  	%r3650, %r3541, %r3525;
	xor.b32  	%r3651, %r3650, %r3589;
	xor.b32  	%r3652, %r3651, %r3629;
	shf.l.wrap.b32 	%r3653, %r3652, %r3652, 1;
	add.s32 	%r3654, %r3113, %r3653;
	add.s32 	%r3655, %r3654, %r3112;
	add.s32 	%r3656, %r3655, %r3649;
	add.s32 	%r3122, %r3656, -899497514;
	shf.l.wrap.b32 	%r3124, %r3114, %r3114, 30;
	shf.l.wrap.b32 	%r3657, %r3122, %r3122, 5;
	// begin inline asm
	lop3.b32 %r3117, %r3118, %r3124, %r3120, 150;
	// end inline asm
	xor.b32  	%r3658, %r3549, %r3533;
	xor.b32  	%r3659, %r3658, %r3597;
	xor.b32  	%r3660, %r3659, %r3637;
	shf.l.wrap.b32 	%r3661, %r3660, %r3660, 1;
	add.s32 	%r3662, %r3117, %r3661;
	add.s32 	%r3663, %r3662, %r3116;
	add.s32 	%r3664, %r3663, %r3657;
	add.s32 	%r3126, %r3664, -899497514;
	shf.l.wrap.b32 	%r3128, %r3118, %r3118, 30;
	shf.l.wrap.b32 	%r3665, %r3126, %r3126, 5;
	// begin inline asm
	lop3.b32 %r3121, %r3122, %r3128, %r3124, 150;
	// end inline asm
	xor.b32  	%r3666, %r3557, %r3541;
	xor.b32  	%r3667, %r3666, %r3605;
	xor.b32  	%r3668, %r3667, %r3645;
	shf.l.wrap.b32 	%r3669, %r3668, %r3668, 1;
	add.s32 	%r3670, %r3121, %r3669;
	add.s32 	%r3671, %r3670, %r3120;
	add.s32 	%r3672, %r3671, %r3665;
	add.s32 	%r3130, %r3672, -899497514;
	shf.l.wrap.b32 	%r3132, %r3122, %r3122, 30;
	shf.l.wrap.b32 	%r3673, %r3130, %r3130, 5;
	// begin inline asm
	lop3.b32 %r3125, %r3126, %r3132, %r3128, 150;
	// end inline asm
	xor.b32  	%r3674, %r3565, %r3549;
	xor.b32  	%r3675, %r3674, %r3613;
	xor.b32  	%r3676, %r3675, %r3653;
	shf.l.wrap.b32 	%r3677, %r3676, %r3676, 1;
	add.s32 	%r3678, %r3125, %r3677;
	add.s32 	%r3679, %r3678, %r3124;
	add.s32 	%r3680, %r3679, %r3673;
	add.s32 	%r3134, %r3680, -899497514;
	shf.l.wrap.b32 	%r3136, %r3126, %r3126, 30;
	shf.l.wrap.b32 	%r3681, %r3134, %r3134, 5;
	// begin inline asm
	lop3.b32 %r3129, %r3130, %r3136, %r3132, 150;
	// end inline asm
	xor.b32  	%r3682, %r3573, %r3557;
	xor.b32  	%r3683, %r3682, %r3621;
	xor.b32  	%r3684, %r3683, %r3661;
	shf.l.wrap.b32 	%r3685, %r3684, %r3684, 1;
	add.s32 	%r3686, %r3129, %r3685;
	add.s32 	%r3687, %r3686, %r3128;
	add.s32 	%r3688, %r3687, %r3681;
	add.s32 	%r3138, %r3688, -899497514;
	shf.l.wrap.b32 	%r3140, %r3130, %r3130, 30;
	shf.l.wrap.b32 	%r3689, %r3138, %r3138, 5;
	// begin inline asm
	lop3.b32 %r3133, %r3134, %r3140, %r3136, 150;
	// end inline asm
	xor.b32  	%r3690, %r3581, %r3565;
	xor.b32  	%r3691, %r3690, %r3629;
	xor.b32  	%r3692, %r3691, %r3669;
	shf.l.wrap.b32 	%r3693, %r3692, %r3692, 1;
	add.s32 	%r3694, %r3133, %r3693;
	add.s32 	%r3695, %r3694, %r3132;
	add.s32 	%r3696, %r3695, %r3689;
	add.s32 	%r3142, %r3696, -899497514;
	shf.l.wrap.b32 	%r3144, %r3134, %r3134, 30;
	shf.l.wrap.b32 	%r3697, %r3142, %r3142, 5;
	// begin inline asm
	lop3.b32 %r3137, %r3138, %r3144, %r3140, 150;
	// end inline asm
	xor.b32  	%r3698, %r3589, %r3573;
	xor.b32  	%r3699, %r3698, %r3637;
	xor.b32  	%r3700, %r3699, %r3677;
	shf.l.wrap.b32 	%r3701, %r3700, %r3700, 1;
	add.s32 	%r3702, %r3137, %r3701;
	add.s32 	%r3703, %r3702, %r3136;
	add.s32 	%r3704, %r3703, %r3697;
	add.s32 	%r3146, %r3704, -899497514;
	shf.l.wrap.b32 	%r3148, %r3138, %r3138, 30;
	shf.l.wrap.b32 	%r3705, %r3146, %r3146, 5;
	// begin inline asm
	lop3.b32 %r3141, %r3142, %r3148, %r3144, 150;
	// end inline asm
	xor.b32  	%r3706, %r3597, %r3581;
	xor.b32  	%r3707, %r3706, %r3645;
	xor.b32  	%r3708, %r3707, %r3685;
	shf.l.wrap.b32 	%r3709, %r3708, %r3708, 1;
	add.s32 	%r3710, %r3141, %r3709;
	add.s32 	%r3711, %r3710, %r3140;
	add.s32 	%r3712, %r3711, %r3705;
	add.s32 	%r3150, %r3712, -899497514;
	shf.l.wrap.b32 	%r3152, %r3142, %r3142, 30;
	shf.l.wrap.b32 	%r3713, %r3150, %r3150, 5;
	// begin inline asm
	lop3.b32 %r3145, %r3146, %r3152, %r3148, 150;
	// end inline asm
	xor.b32  	%r3714, %r3605, %r3589;
	xor.b32  	%r3715, %r3714, %r3653;
	xor.b32  	%r3716, %r3715, %r3693;
	shf.l.wrap.b32 	%r3717, %r3716, %r3716, 1;
	add.s32 	%r3718, %r3145, %r3717;
	add.s32 	%r3719, %r3718, %r3144;
	add.s32 	%r3720, %r3719, %r3713;
	add.s32 	%r3154, %r3720, -899497514;
	shf.l.wrap.b32 	%r3156, %r3146, %r3146, 30;
	shf.l.wrap.b32 	%r3721, %r3154, %r3154, 5;
	// begin inline asm
	lop3.b32 %r3149, %r3150, %r3156, %r3152, 150;
	// end inline asm
	xor.b32  	%r3722, %r3613, %r3597;
	xor.b32  	%r3723, %r3722, %r3661;
	xor.b32  	%r3724, %r3723, %r3701;
	shf.l.wrap.b32 	%r3725, %r3724, %r3724, 1;
	add.s32 	%r3726, %r3149, %r3725;
	add.s32 	%r3727, %r3726, %r3148;
	add.s32 	%r3728, %r3727, %r3721;
	add.s32 	%r3158, %r3728, -899497514;
	shf.l.wrap.b32 	%r3160, %r3150, %r3150, 30;
	shf.l.wrap.b32 	%r3729, %r3158, %r3158, 5;
	// begin inline asm
	lop3.b32 %r3153, %r3154, %r3160, %r3156, 150;
	// end inline asm
	xor.b32  	%r3730, %r3621, %r3605;
	xor.b32  	%r3731, %r3730, %r3669;
	xor.b32  	%r3732, %r3731, %r3709;
	shf.l.wrap.b32 	%r3733, %r3732, %r3732, 1;
	add.s32 	%r3734, %r3153, %r3733;
	add.s32 	%r3735, %r3734, %r3152;
	add.s32 	%r3736, %r3735, %r3729;
	add.s32 	%r3162, %r3736, -899497514;
	shf.l.wrap.b32 	%r3164, %r3154, %r3154, 30;
	shf.l.wrap.b32 	%r3737, %r3162, %r3162, 5;
	// begin inline asm
	lop3.b32 %r3157, %r3158, %r3164, %r3160, 150;
	// end inline asm
	xor.b32  	%r3738, %r3629, %r3613;
	xor.b32  	%r3739, %r3738, %r3677;
	xor.b32  	%r3740, %r3739, %r3717;
	shf.l.wrap.b32 	%r3741, %r3740, %r3740, 1;
	add.s32 	%r3742, %r3157, %r3741;
	add.s32 	%r3743, %r3742, %r3156;
	add.s32 	%r3744, %r3743, %r3737;
	add.s32 	%r3166, %r3744, -899497514;
	shf.l.wrap.b32 	%r3168, %r3158, %r3158, 30;
	shf.l.wrap.b32 	%r3745, %r3166, %r3166, 5;
	// begin inline asm
	lop3.b32 %r3161, %r3162, %r3168, %r3164, 150;
	// end inline asm
	xor.b32  	%r3746, %r3637, %r3621;
	xor.b32  	%r3747, %r3746, %r3685;
	xor.b32  	%r3748, %r3747, %r3725;
	shf.l.wrap.b32 	%r3749, %r3748, %r3748, 1;
	add.s32 	%r3750, %r3161, %r3749;
	add.s32 	%r3751, %r3750, %r3160;
	add.s32 	%r3752, %r3751, %r3745;
	add.s32 	%r3170, %r3752, -899497514;
	shf.l.wrap.b32 	%r3172, %r3162, %r3162, 30;
	shf.l.wrap.b32 	%r3753, %r3170, %r3170, 5;
	// begin inline asm
	lop3.b32 %r3165, %r3166, %r3172, %r3168, 150;
	// end inline asm
	xor.b32  	%r3754, %r3645, %r3629;
	xor.b32  	%r3755, %r3754, %r3693;
	xor.b32  	%r3756, %r3755, %r3733;
	shf.l.wrap.b32 	%r3757, %r3756, %r3756, 1;
	add.s32 	%r3758, %r3165, %r3757;
	add.s32 	%r3759, %r3758, %r3164;
	add.s32 	%r3760, %r3759, %r3753;
	add.s32 	%r3174, %r3760, -899497514;
	shf.l.wrap.b32 	%r3176, %r3166, %r3166, 30;
	shf.l.wrap.b32 	%r3761, %r3174, %r3174, 5;
	// begin inline asm
	lop3.b32 %r3169, %r3170, %r3176, %r3172, 150;
	// end inline asm
	xor.b32  	%r3762, %r3653, %r3637;
	xor.b32  	%r3763, %r3762, %r3701;
	xor.b32  	%r3764, %r3763, %r3741;
	shf.l.wrap.b32 	%r3765, %r3764, %r3764, 1;
	add.s32 	%r3766, %r3169, %r3765;
	add.s32 	%r3767, %r3766, %r3168;
	add.s32 	%r3768, %r3767, %r3761;
	add.s32 	%r3178, %r3768, -899497514;
	shf.l.wrap.b32 	%r3180, %r3170, %r3170, 30;
	shf.l.wrap.b32 	%r3769, %r3178, %r3178, 5;
	// begin inline asm
	lop3.b32 %r3173, %r3174, %r3180, %r3176, 150;
	// end inline asm
	xor.b32  	%r3770, %r3661, %r3645;
	xor.b32  	%r3771, %r3770, %r3709;
	xor.b32  	%r3772, %r3771, %r3749;
	shf.l.wrap.b32 	%r3773, %r3772, %r3772, 1;
	add.s32 	%r3774, %r3173, %r3773;
	add.s32 	%r3775, %r3774, %r3172;
	add.s32 	%r3776, %r3775, %r3769;
	add.s32 	%r3182, %r3776, -899497514;
	shf.l.wrap.b32 	%r3184, %r3174, %r3174, 30;
	shf.l.wrap.b32 	%r3777, %r3182, %r3182, 5;
	// begin inline asm
	lop3.b32 %r3177, %r3178, %r3184, %r3180, 150;
	// end inline asm
	xor.b32  	%r3778, %r3669, %r3653;
	xor.b32  	%r3779, %r3778, %r3717;
	xor.b32  	%r3780, %r3779, %r3757;
	shf.l.wrap.b32 	%r3781, %r3780, %r3780, 1;
	add.s32 	%r3782, %r3177, %r3781;
	add.s32 	%r3783, %r3782, %r3176;
	add.s32 	%r3784, %r3783, %r3777;
	add.s32 	%r3785, %r3784, -899497514;
	shf.l.wrap.b32 	%r3183, %r3178, %r3178, 30;
	shf.l.wrap.b32 	%r3786, %r3785, %r3785, 5;
	// begin inline asm
	lop3.b32 %r3181, %r3182, %r3183, %r3184, 150;
	// end inline asm
	xor.b32  	%r3787, %r3677, %r3661;
	xor.b32  	%r3788, %r3787, %r3725;
	xor.b32  	%r3789, %r3788, %r3765;
	shf.l.wrap.b32 	%r3790, %r3789, %r3789, 1;
	shf.l.wrap.b32 	%r3791, %r3182, %r3182, 30;
	add.s32 	%r3792, %r5623, %r3181;
	add.s32 	%r3793, %r3792, %r3790;
	add.s32 	%r3794, %r3793, %r3180;
	add.s32 	%r3795, %r3794, %r3786;
	add.s32 	%r5623, %r3795, -899497514;
	add.s32 	%r5622, %r3785, %r5622;
	add.s32 	%r5621, %r3791, %r5621;
	add.s32 	%r5620, %r3183, %r5620;
	add.s32 	%r5619, %r3184, %r5619;
	mov.u32 	%r3796, 0;
	st.local.v4.u32 	[%rd1], {%r3796, %r3796, %r3796, %r3796};
	st.local.v4.u32 	[%rd1+16], {%r3796, %r3796, %r3796, %r3796};
	st.local.v4.u32 	[%rd1+32], {%r3796, %r3796, %r3796, %r3796};
	st.local.v2.u32 	[%rd1+48], {%r3796, %r3796};
	st.local.u32 	[%rd1+56], %r3796;
	setp.lt.u32 	%p11, %r5625, 61;
	@%p11 bra 	$L__BB0_17;

	add.s32 	%r3797, %r5625, -61;
	xor.b32  	%r3798, %r3797, 3;
	cvt.u64.u32 	%rd42, %r3798;
	add.s64 	%rd43, %rd1, %rd42;
	mov.u16 	%rs8, 1;
	st.local.u8 	[%rd43], %rs8;

$L__BB0_17:
	setp.lt.u32 	%p12, %r5625, 60;
	@%p12 bra 	$L__BB0_20;

	add.s32 	%r3799, %r5625, -60;
	xor.b32  	%r3800, %r3799, 3;
	cvt.u64.u32 	%rd44, %r3800;
	add.s64 	%rd45, %rd1, %rd44;
	mov.u16 	%rs9, 128;
	st.local.u8 	[%rd45], %rs9;

$L__BB0_20:
	shl.b32 	%r4445, %r13, 3;
	add.s32 	%r4446, %r4445, 544;
	ld.local.v4.u32 	{%r4447, %r4448, %r4449, %r4450}, [%rd1];
	mov.u32 	%r4452, 0;
	shf.l.wrap.b32 	%r4456, %r5623, %r5623, 5;
	add.s32 	%r4457, %r4456, %r5619;
	// begin inline asm
	lop3.b32 %r3805, %r5622, %r5621, %r5620, 202;
	// end inline asm
	add.s32 	%r4458, %r4457, %r3805;
	add.s32 	%r4459, %r4458, %r4447;
	add.s32 	%r3814, %r4459, 1518500249;
	shf.l.wrap.b32 	%r4460, %r3814, %r3814, 5;
	shf.l.wrap.b32 	%r3816, %r5622, %r5622, 30;
	// begin inline asm
	lop3.b32 %r3809, %r5623, %r3816, %r5621, 202;
	// end inline asm
	add.s32 	%r4461, %r5620, %r3809;
	add.s32 	%r4462, %r4461, %r4448;
	add.s32 	%r4463, %r4462, %r4460;
	add.s32 	%r3818, %r4463, 1518500249;
	shf.l.wrap.b32 	%r4464, %r3818, %r3818, 5;
	shf.l.wrap.b32 	%r3820, %r5623, %r5623, 30;
	// begin inline asm
	lop3.b32 %r3813, %r3814, %r3820, %r3816, 202;
	// end inline asm
	add.s32 	%r4465, %r5621, %r3813;
	add.s32 	%r4466, %r4465, %r4449;
	add.s32 	%r4467, %r4466, %r4464;
	add.s32 	%r3822, %r4467, 1518500249;
	shf.l.wrap.b32 	%r3824, %r3814, %r3814, 30;
	shf.l.wrap.b32 	%r4468, %r3822, %r3822, 5;
	// begin inline asm
	lop3.b32 %r3817, %r3818, %r3824, %r3820, 202;
	// end inline asm
	add.s32 	%r4469, %r3816, %r3817;
	add.s32 	%r4470, %r4469, %r4450;
	add.s32 	%r4471, %r4470, %r4468;
	add.s32 	%r3826, %r4471, 1518500249;
	shf.l.wrap.b32 	%r3828, %r3818, %r3818, 30;
	shf.l.wrap.b32 	%r4472, %r3826, %r3826, 5;
	// begin inline asm
	lop3.b32 %r3821, %r3822, %r3828, %r3824, 202;
	// end inline asm
	ld.local.v4.u32 	{%r4473, %r4474, %r4475, %r4476}, [%rd1+16];
	add.s32 	%r4481, %r3820, %r3821;
	add.s32 	%r4482, %r4481, %r4473;
	add.s32 	%r4483, %r4482, %r4472;
	add.s32 	%r3830, %r4483, 1518500249;
	shf.l.wrap.b32 	%r3832, %r3822, %r3822, 30;
	shf.l.wrap.b32 	%r4484, %r3830, %r3830, 5;
	// begin inline asm
	lop3.b32 %r3825, %r3826, %r3832, %r3828, 202;
	// end inline asm
	add.s32 	%r4485, %r3824, %r3825;
	add.s32 	%r4486, %r4485, %r4474;
	add.s32 	%r4487, %r4486, %r4484;
	add.s32 	%r3834, %r4487, 1518500249;
	shf.l.wrap.b32 	%r3836, %r3826, %r3826, 30;
	shf.l.wrap.b32 	%r4488, %r3834, %r3834, 5;
	// begin inline asm
	lop3.b32 %r3829, %r3830, %r3836, %r3832, 202;
	// end inline asm
	add.s32 	%r4489, %r3828, %r3829;
	add.s32 	%r4490, %r4489, %r4475;
	add.s32 	%r4491, %r4490, %r4488;
	add.s32 	%r3838, %r4491, 1518500249;
	shf.l.wrap.b32 	%r3840, %r3830, %r3830, 30;
	shf.l.wrap.b32 	%r4492, %r3838, %r3838, 5;
	// begin inline asm
	lop3.b32 %r3833, %r3834, %r3840, %r3836, 202;
	// end inline asm
	add.s32 	%r4493, %r3833, %r4476;
	add.s32 	%r4494, %r4493, %r3832;
	add.s32 	%r4495, %r4494, %r4492;
	add.s32 	%r3842, %r4495, 1518500249;
	shf.l.wrap.b32 	%r3844, %r3834, %r3834, 30;
	shf.l.wrap.b32 	%r4496, %r3842, %r3842, 5;
	// begin inline asm
	lop3.b32 %r3837, %r3838, %r3844, %r3840, 202;
	// end inline asm
	ld.local.v4.u32 	{%r4497, %r4498, %r4499, %r4500}, [%rd1+32];
	add.s32 	%r4505, %r3837, %r4497;
	add.s32 	%r4506, %r4505, %r3836;
	add.s32 	%r4507, %r4506, %r4496;
	add.s32 	%r3846, %r4507, 1518500249;
	shf.l.wrap.b32 	%r3848, %r3838, %r3838, 30;
	shf.l.wrap.b32 	%r4508, %r3846, %r3846, 5;
	// begin inline asm
	lop3.b32 %r3841, %r3842, %r3848, %r3844, 202;
	// end inline asm
	add.s32 	%r4509, %r3841, %r4498;
	add.s32 	%r4510, %r4509, %r3840;
	add.s32 	%r4511, %r4510, %r4508;
	add.s32 	%r3850, %r4511, 1518500249;
	shf.l.wrap.b32 	%r3852, %r3842, %r3842, 30;
	shf.l.wrap.b32 	%r4512, %r3850, %r3850, 5;
	// begin inline asm
	lop3.b32 %r3845, %r3846, %r3852, %r3848, 202;
	// end inline asm
	add.s32 	%r4513, %r3845, %r4499;
	add.s32 	%r4514, %r4513, %r3844;
	add.s32 	%r4515, %r4514, %r4512;
	add.s32 	%r3854, %r4515, 1518500249;
	shf.l.wrap.b32 	%r3856, %r3846, %r3846, 30;
	shf.l.wrap.b32 	%r4516, %r3854, %r3854, 5;
	// begin inline asm
	lop3.b32 %r3849, %r3850, %r3856, %r3852, 202;
	// end inline asm
	add.s32 	%r4517, %r3849, %r4500;
	add.s32 	%r4518, %r4517, %r3848;
	add.s32 	%r4519, %r4518, %r4516;
	add.s32 	%r3858, %r4519, 1518500249;
	shf.l.wrap.b32 	%r3860, %r3850, %r3850, 30;
	shf.l.wrap.b32 	%r4520, %r3858, %r3858, 5;
	// begin inline asm
	lop3.b32 %r3853, %r3854, %r3860, %r3856, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r4521, %r4522, %r4523, %r4524}, [%rd1+48];
	add.s32 	%r4528, %r3853, %r4521;
	add.s32 	%r4529, %r4528, %r3852;
	add.s32 	%r4530, %r4529, %r4520;
	add.s32 	%r3862, %r4530, 1518500249;
	shf.l.wrap.b32 	%r3864, %r3854, %r3854, 30;
	shf.l.wrap.b32 	%r4531, %r3862, %r3862, 5;
	// begin inline asm
	lop3.b32 %r3857, %r3858, %r3864, %r3860, 202;
	// end inline asm
	add.s32 	%r4532, %r3857, %r4522;
	add.s32 	%r4533, %r4532, %r3856;
	add.s32 	%r4534, %r4533, %r4531;
	add.s32 	%r3866, %r4534, 1518500249;
	shf.l.wrap.b32 	%r3868, %r3858, %r3858, 30;
	shf.l.wrap.b32 	%r4535, %r3866, %r3866, 5;
	// begin inline asm
	lop3.b32 %r3861, %r3862, %r3868, %r3864, 202;
	// end inline asm
	add.s32 	%r4536, %r3861, %r4523;
	add.s32 	%r4537, %r4536, %r3860;
	add.s32 	%r4538, %r4537, %r4535;
	add.s32 	%r3870, %r4538, 1518500249;
	shf.l.wrap.b32 	%r3872, %r3862, %r3862, 30;
	shf.l.wrap.b32 	%r4539, %r3870, %r3870, 5;
	// begin inline asm
	lop3.b32 %r3865, %r3866, %r3872, %r3868, 202;
	// end inline asm
	add.s32 	%r4540, %r3865, %r4446;
	add.s32 	%r4541, %r4540, %r3864;
	add.s32 	%r4542, %r4541, %r4539;
	add.s32 	%r3874, %r4542, 1518500249;
	shf.l.wrap.b32 	%r3876, %r3866, %r3866, 30;
	shf.l.wrap.b32 	%r4543, %r3874, %r3874, 5;
	// begin inline asm
	lop3.b32 %r3869, %r3870, %r3876, %r3872, 202;
	// end inline asm
	xor.b32  	%r4544, %r4497, %r4522;
	xor.b32  	%r4545, %r4544, %r4449;
	xor.b32  	%r4546, %r4545, %r4447;
	shf.l.wrap.b32 	%r4547, %r4546, %r4546, 1;
	add.s32 	%r4548, %r3869, %r4547;
	add.s32 	%r4549, %r4548, %r3868;
	add.s32 	%r4550, %r4549, %r4543;
	add.s32 	%r3878, %r4550, 1518500249;
	shf.l.wrap.b32 	%r3880, %r3870, %r3870, 30;
	shf.l.wrap.b32 	%r4551, %r3878, %r3878, 5;
	// begin inline asm
	lop3.b32 %r3873, %r3874, %r3880, %r3876, 202;
	// end inline asm
	xor.b32  	%r4552, %r4498, %r4523;
	xor.b32  	%r4553, %r4552, %r4450;
	xor.b32  	%r4554, %r4553, %r4448;
	shf.l.wrap.b32 	%r4555, %r4554, %r4554, 1;
	add.s32 	%r4556, %r3873, %r4555;
	add.s32 	%r4557, %r4556, %r3872;
	add.s32 	%r4558, %r4557, %r4551;
	add.s32 	%r3882, %r4558, 1518500249;
	shf.l.wrap.b32 	%r3884, %r3874, %r3874, 30;
	shf.l.wrap.b32 	%r4559, %r3882, %r3882, 5;
	// begin inline asm
	lop3.b32 %r3877, %r3878, %r3884, %r3880, 202;
	// end inline asm
	xor.b32  	%r4560, %r4499, %r4446;
	xor.b32  	%r4561, %r4560, %r4473;
	xor.b32  	%r4562, %r4561, %r4449;
	shf.l.wrap.b32 	%r4563, %r4562, %r4562, 1;
	add.s32 	%r4564, %r3877, %r4563;
	add.s32 	%r4565, %r4564, %r3876;
	add.s32 	%r4566, %r4565, %r4559;
	add.s32 	%r3886, %r4566, 1518500249;
	shf.l.wrap.b32 	%r3888, %r3878, %r3878, 30;
	shf.l.wrap.b32 	%r4567, %r3886, %r3886, 5;
	// begin inline asm
	lop3.b32 %r3881, %r3882, %r3888, %r3884, 202;
	// end inline asm
	xor.b32  	%r4568, %r4500, %r4547;
	xor.b32  	%r4569, %r4568, %r4474;
	xor.b32  	%r4570, %r4569, %r4450;
	shf.l.wrap.b32 	%r4571, %r4570, %r4570, 1;
	add.s32 	%r4572, %r3881, %r4571;
	add.s32 	%r4573, %r4572, %r3880;
	add.s32 	%r4574, %r4573, %r4567;
	add.s32 	%r3890, %r4574, 1518500249;
	shf.l.wrap.b32 	%r3892, %r3882, %r3882, 30;
	shf.l.wrap.b32 	%r4575, %r3890, %r3890, 5;
	// begin inline asm
	lop3.b32 %r3885, %r3886, %r3892, %r3888, 150;
	// end inline asm
	xor.b32  	%r4576, %r4521, %r4555;
	xor.b32  	%r4577, %r4576, %r4475;
	xor.b32  	%r4578, %r4577, %r4473;
	shf.l.wrap.b32 	%r4579, %r4578, %r4578, 1;
	add.s32 	%r4580, %r3885, %r4579;
	add.s32 	%r4581, %r4580, %r3884;
	add.s32 	%r4582, %r4581, %r4575;
	add.s32 	%r3894, %r4582, 1859775393;
	shf.l.wrap.b32 	%r3896, %r3886, %r3886, 30;
	shf.l.wrap.b32 	%r4583, %r3894, %r3894, 5;
	// begin inline asm
	lop3.b32 %r3889, %r3890, %r3896, %r3892, 150;
	// end inline asm
	xor.b32  	%r4584, %r4522, %r4563;
	xor.b32  	%r4585, %r4584, %r4476;
	xor.b32  	%r4586, %r4585, %r4474;
	shf.l.wrap.b32 	%r4587, %r4586, %r4586, 1;
	add.s32 	%r4588, %r3889, %r4587;
	add.s32 	%r4589, %r4588, %r3888;
	add.s32 	%r4590, %r4589, %r4583;
	add.s32 	%r3898, %r4590, 1859775393;
	shf.l.wrap.b32 	%r3900, %r3890, %r3890, 30;
	shf.l.wrap.b32 	%r4591, %r3898, %r3898, 5;
	// begin inline asm
	lop3.b32 %r3893, %r3894, %r3900, %r3896, 150;
	// end inline asm
	xor.b32  	%r4592, %r4523, %r4571;
	xor.b32  	%r4593, %r4592, %r4497;
	xor.b32  	%r4594, %r4593, %r4475;
	shf.l.wrap.b32 	%r4595, %r4594, %r4594, 1;
	add.s32 	%r4596, %r3893, %r4595;
	add.s32 	%r4597, %r4596, %r3892;
	add.s32 	%r4598, %r4597, %r4591;
	add.s32 	%r3902, %r4598, 1859775393;
	shf.l.wrap.b32 	%r3904, %r3894, %r3894, 30;
	shf.l.wrap.b32 	%r4599, %r3902, %r3902, 5;
	// begin inline asm
	lop3.b32 %r3897, %r3898, %r3904, %r3900, 150;
	// end inline asm
	xor.b32  	%r4600, %r4446, %r4579;
	xor.b32  	%r4601, %r4600, %r4498;
	xor.b32  	%r4602, %r4601, %r4476;
	shf.l.wrap.b32 	%r4603, %r4602, %r4602, 1;
	add.s32 	%r4604, %r3897, %r4603;
	add.s32 	%r4605, %r4604, %r3896;
	add.s32 	%r4606, %r4605, %r4599;
	add.s32 	%r3906, %r4606, 1859775393;
	shf.l.wrap.b32 	%r3908, %r3898, %r3898, 30;
	shf.l.wrap.b32 	%r4607, %r3906, %r3906, 5;
	// begin inline asm
	lop3.b32 %r3901, %r3902, %r3908, %r3904, 150;
	// end inline asm
	xor.b32  	%r4608, %r4587, %r4547;
	xor.b32  	%r4609, %r4608, %r4499;
	xor.b32  	%r4610, %r4609, %r4497;
	shf.l.wrap.b32 	%r4611, %r4610, %r4610, 1;
	add.s32 	%r4612, %r3901, %r4611;
	add.s32 	%r4613, %r4612, %r3900;
	add.s32 	%r4614, %r4613, %r4607;
	add.s32 	%r3910, %r4614, 1859775393;
	shf.l.wrap.b32 	%r3912, %r3902, %r3902, 30;
	shf.l.wrap.b32 	%r4615, %r3910, %r3910, 5;
	// begin inline asm
	lop3.b32 %r3905, %r3906, %r3912, %r3908, 150;
	// end inline asm
	xor.b32  	%r4616, %r4595, %r4555;
	xor.b32  	%r4617, %r4616, %r4500;
	xor.b32  	%r4618, %r4617, %r4498;
	shf.l.wrap.b32 	%r4619, %r4618, %r4618, 1;
	add.s32 	%r4620, %r3905, %r4619;
	add.s32 	%r4621, %r4620, %r3904;
	add.s32 	%r4622, %r4621, %r4615;
	add.s32 	%r3914, %r4622, 1859775393;
	shf.l.wrap.b32 	%r3916, %r3906, %r3906, 30;
	shf.l.wrap.b32 	%r4623, %r3914, %r3914, 5;
	// begin inline asm
	lop3.b32 %r3909, %r3910, %r3916, %r3912, 150;
	// end inline asm
	xor.b32  	%r4624, %r4603, %r4563;
	xor.b32  	%r4625, %r4624, %r4521;
	xor.b32  	%r4626, %r4625, %r4499;
	shf.l.wrap.b32 	%r4627, %r4626, %r4626, 1;
	add.s32 	%r4628, %r3909, %r4627;
	add.s32 	%r4629, %r4628, %r3908;
	add.s32 	%r4630, %r4629, %r4623;
	add.s32 	%r3918, %r4630, 1859775393;
	shf.l.wrap.b32 	%r3920, %r3910, %r3910, 30;
	shf.l.wrap.b32 	%r4631, %r3918, %r3918, 5;
	// begin inline asm
	lop3.b32 %r3913, %r3914, %r3920, %r3916, 150;
	// end inline asm
	xor.b32  	%r4632, %r4611, %r4571;
	xor.b32  	%r4633, %r4632, %r4522;
	xor.b32  	%r4634, %r4633, %r4500;
	shf.l.wrap.b32 	%r4635, %r4634, %r4634, 1;
	add.s32 	%r4636, %r3913, %r4635;
	add.s32 	%r4637, %r4636, %r3912;
	add.s32 	%r4638, %r4637, %r4631;
	add.s32 	%r3922, %r4638, 1859775393;
	shf.l.wrap.b32 	%r3924, %r3914, %r3914, 30;
	shf.l.wrap.b32 	%r4639, %r3922, %r3922, 5;
	// begin inline asm
	lop3.b32 %r3917, %r3918, %r3924, %r3920, 150;
	// end inline asm
	xor.b32  	%r4640, %r4619, %r4579;
	xor.b32  	%r4641, %r4640, %r4523;
	xor.b32  	%r4642, %r4641, %r4521;
	shf.l.wrap.b32 	%r4643, %r4642, %r4642, 1;
	add.s32 	%r4644, %r3917, %r4643;
	add.s32 	%r4645, %r4644, %r3916;
	add.s32 	%r4646, %r4645, %r4639;
	add.s32 	%r3926, %r4646, 1859775393;
	shf.l.wrap.b32 	%r3928, %r3918, %r3918, 30;
	shf.l.wrap.b32 	%r4647, %r3926, %r3926, 5;
	// begin inline asm
	lop3.b32 %r3921, %r3922, %r3928, %r3924, 150;
	// end inline asm
	xor.b32  	%r4648, %r4627, %r4587;
	xor.b32  	%r4649, %r4648, %r4446;
	xor.b32  	%r4650, %r4649, %r4522;
	shf.l.wrap.b32 	%r4651, %r4650, %r4650, 1;
	add.s32 	%r4652, %r3921, %r4651;
	add.s32 	%r4653, %r4652, %r3920;
	add.s32 	%r4654, %r4653, %r4647;
	add.s32 	%r3930, %r4654, 1859775393;
	shf.l.wrap.b32 	%r3932, %r3922, %r3922, 30;
	shf.l.wrap.b32 	%r4655, %r3930, %r3930, 5;
	// begin inline asm
	lop3.b32 %r3925, %r3926, %r3932, %r3928, 150;
	// end inline asm
	xor.b32  	%r4656, %r4595, %r4547;
	xor.b32  	%r4657, %r4656, %r4635;
	xor.b32  	%r4658, %r4657, %r4523;
	shf.l.wrap.b32 	%r4659, %r4658, %r4658, 1;
	add.s32 	%r4660, %r3925, %r4659;
	add.s32 	%r4661, %r4660, %r3924;
	add.s32 	%r4662, %r4661, %r4655;
	add.s32 	%r3934, %r4662, 1859775393;
	shf.l.wrap.b32 	%r3936, %r3926, %r3926, 30;
	shf.l.wrap.b32 	%r4663, %r3934, %r3934, 5;
	// begin inline asm
	lop3.b32 %r3929, %r3930, %r3936, %r3932, 150;
	// end inline asm
	xor.b32  	%r4664, %r4603, %r4555;
	xor.b32  	%r4665, %r4664, %r4643;
	xor.b32  	%r4666, %r4665, %r4446;
	shf.l.wrap.b32 	%r4667, %r4666, %r4666, 1;
	add.s32 	%r4668, %r3929, %r4667;
	add.s32 	%r4669, %r4668, %r3928;
	add.s32 	%r4670, %r4669, %r4663;
	add.s32 	%r3938, %r4670, 1859775393;
	shf.l.wrap.b32 	%r3940, %r3930, %r3930, 30;
	shf.l.wrap.b32 	%r4671, %r3938, %r3938, 5;
	// begin inline asm
	lop3.b32 %r3933, %r3934, %r3940, %r3936, 150;
	// end inline asm
	xor.b32  	%r4672, %r4563, %r4547;
	xor.b32  	%r4673, %r4672, %r4611;
	xor.b32  	%r4674, %r4673, %r4651;
	shf.l.wrap.b32 	%r4675, %r4674, %r4674, 1;
	add.s32 	%r4676, %r3933, %r4675;
	add.s32 	%r4677, %r4676, %r3932;
	add.s32 	%r4678, %r4677, %r4671;
	add.s32 	%r3942, %r4678, 1859775393;
	shf.l.wrap.b32 	%r3944, %r3934, %r3934, 30;
	shf.l.wrap.b32 	%r4679, %r3942, %r3942, 5;
	// begin inline asm
	lop3.b32 %r3937, %r3938, %r3944, %r3940, 150;
	// end inline asm
	xor.b32  	%r4680, %r4571, %r4555;
	xor.b32  	%r4681, %r4680, %r4619;
	xor.b32  	%r4682, %r4681, %r4659;
	shf.l.wrap.b32 	%r4683, %r4682, %r4682, 1;
	add.s32 	%r4684, %r3937, %r4683;
	add.s32 	%r4685, %r4684, %r3936;
	add.s32 	%r4686, %r4685, %r4679;
	add.s32 	%r3946, %r4686, 1859775393;
	shf.l.wrap.b32 	%r3948, %r3938, %r3938, 30;
	shf.l.wrap.b32 	%r4687, %r3946, %r3946, 5;
	// begin inline asm
	lop3.b32 %r3941, %r3942, %r3948, %r3944, 150;
	// end inline asm
	xor.b32  	%r4688, %r4579, %r4563;
	xor.b32  	%r4689, %r4688, %r4627;
	xor.b32  	%r4690, %r4689, %r4667;
	shf.l.wrap.b32 	%r4691, %r4690, %r4690, 1;
	add.s32 	%r4692, %r3941, %r4691;
	add.s32 	%r4693, %r4692, %r3940;
	add.s32 	%r4694, %r4693, %r4687;
	add.s32 	%r3950, %r4694, 1859775393;
	shf.l.wrap.b32 	%r3952, %r3942, %r3942, 30;
	shf.l.wrap.b32 	%r4695, %r3950, %r3950, 5;
	// begin inline asm
	lop3.b32 %r3945, %r3946, %r3952, %r3948, 150;
	// end inline asm
	xor.b32  	%r4696, %r4587, %r4571;
	xor.b32  	%r4697, %r4696, %r4635;
	xor.b32  	%r4698, %r4697, %r4675;
	shf.l.wrap.b32 	%r4699, %r4698, %r4698, 1;
	add.s32 	%r4700, %r3945, %r4699;
	add.s32 	%r4701, %r4700, %r3944;
	add.s32 	%r4702, %r4701, %r4695;
	add.s32 	%r3954, %r4702, 1859775393;
	shf.l.wrap.b32 	%r3956, %r3946, %r3946, 30;
	shf.l.wrap.b32 	%r4703, %r3954, %r3954, 5;
	// begin inline asm
	lop3.b32 %r3949, %r3950, %r3956, %r3952, 150;
	// end inline asm
	xor.b32  	%r4704, %r4595, %r4579;
	xor.b32  	%r4705, %r4704, %r4643;
	xor.b32  	%r4706, %r4705, %r4683;
	shf.l.wrap.b32 	%r4707, %r4706, %r4706, 1;
	add.s32 	%r4708, %r3949, %r4707;
	add.s32 	%r4709, %r4708, %r3948;
	add.s32 	%r4710, %r4709, %r4703;
	add.s32 	%r3958, %r4710, 1859775393;
	shf.l.wrap.b32 	%r3960, %r3950, %r3950, 30;
	shf.l.wrap.b32 	%r4711, %r3958, %r3958, 5;
	// begin inline asm
	lop3.b32 %r3953, %r3954, %r3960, %r3956, 150;
	// end inline asm
	xor.b32  	%r4712, %r4603, %r4587;
	xor.b32  	%r4713, %r4712, %r4651;
	xor.b32  	%r4714, %r4713, %r4691;
	shf.l.wrap.b32 	%r4715, %r4714, %r4714, 1;
	add.s32 	%r4716, %r3953, %r4715;
	add.s32 	%r4717, %r4716, %r3952;
	add.s32 	%r4718, %r4717, %r4711;
	add.s32 	%r3962, %r4718, 1859775393;
	shf.l.wrap.b32 	%r3964, %r3954, %r3954, 30;
	shf.l.wrap.b32 	%r4719, %r3962, %r3962, 5;
	// begin inline asm
	lop3.b32 %r3957, %r3958, %r3964, %r3960, 150;
	// end inline asm
	xor.b32  	%r4720, %r4611, %r4595;
	xor.b32  	%r4721, %r4720, %r4659;
	xor.b32  	%r4722, %r4721, %r4699;
	shf.l.wrap.b32 	%r4723, %r4722, %r4722, 1;
	add.s32 	%r4724, %r3957, %r4723;
	add.s32 	%r4725, %r4724, %r3956;
	add.s32 	%r4726, %r4725, %r4719;
	add.s32 	%r3966, %r4726, 1859775393;
	shf.l.wrap.b32 	%r3968, %r3958, %r3958, 30;
	shf.l.wrap.b32 	%r4727, %r3966, %r3966, 5;
	// begin inline asm
	lop3.b32 %r3961, %r3962, %r3968, %r3964, 150;
	// end inline asm
	xor.b32  	%r4728, %r4619, %r4603;
	xor.b32  	%r4729, %r4728, %r4667;
	xor.b32  	%r4730, %r4729, %r4707;
	shf.l.wrap.b32 	%r4731, %r4730, %r4730, 1;
	add.s32 	%r4732, %r3961, %r4731;
	add.s32 	%r4733, %r4732, %r3960;
	add.s32 	%r4734, %r4733, %r4727;
	add.s32 	%r3970, %r4734, 1859775393;
	shf.l.wrap.b32 	%r3972, %r3962, %r3962, 30;
	shf.l.wrap.b32 	%r4735, %r3970, %r3970, 5;
	// begin inline asm
	lop3.b32 %r3965, %r3966, %r3972, %r3968, 232;
	// end inline asm
	xor.b32  	%r4736, %r4627, %r4611;
	xor.b32  	%r4737, %r4736, %r4675;
	xor.b32  	%r4738, %r4737, %r4715;
	shf.l.wrap.b32 	%r4739, %r4738, %r4738, 1;
	add.s32 	%r4740, %r3965, %r4739;
	add.s32 	%r4741, %r4740, %r3964;
	add.s32 	%r4742, %r4741, %r4735;
	add.s32 	%r3974, %r4742, -1894007588;
	shf.l.wrap.b32 	%r3976, %r3966, %r3966, 30;
	shf.l.wrap.b32 	%r4743, %r3974, %r3974, 5;
	// begin inline asm
	lop3.b32 %r3969, %r3970, %r3976, %r3972, 232;
	// end inline asm
	xor.b32  	%r4744, %r4635, %r4619;
	xor.b32  	%r4745, %r4744, %r4683;
	xor.b32  	%r4746, %r4745, %r4723;
	shf.l.wrap.b32 	%r4747, %r4746, %r4746, 1;
	add.s32 	%r4748, %r3969, %r4747;
	add.s32 	%r4749, %r4748, %r3968;
	add.s32 	%r4750, %r4749, %r4743;
	add.s32 	%r3978, %r4750, -1894007588;
	shf.l.wrap.b32 	%r3980, %r3970, %r3970, 30;
	shf.l.wrap.b32 	%r4751, %r3978, %r3978, 5;
	// begin inline asm
	lop3.b32 %r3973, %r3974, %r3980, %r3976, 232;
	// end inline asm
	xor.b32  	%r4752, %r4643, %r4627;
	xor.b32  	%r4753, %r4752, %r4691;
	xor.b32  	%r4754, %r4753, %r4731;
	shf.l.wrap.b32 	%r4755, %r4754, %r4754, 1;
	add.s32 	%r4756, %r3973, %r4755;
	add.s32 	%r4757, %r4756, %r3972;
	add.s32 	%r4758, %r4757, %r4751;
	add.s32 	%r3982, %r4758, -1894007588;
	shf.l.wrap.b32 	%r3984, %r3974, %r3974, 30;
	shf.l.wrap.b32 	%r4759, %r3982, %r3982, 5;
	// begin inline asm
	lop3.b32 %r3977, %r3978, %r3984, %r3980, 232;
	// end inline asm
	xor.b32  	%r4760, %r4651, %r4635;
	xor.b32  	%r4761, %r4760, %r4699;
	xor.b32  	%r4762, %r4761, %r4739;
	shf.l.wrap.b32 	%r4763, %r4762, %r4762, 1;
	add.s32 	%r4764, %r3977, %r4763;
	add.s32 	%r4765, %r4764, %r3976;
	add.s32 	%r4766, %r4765, %r4759;
	add.s32 	%r3986, %r4766, -1894007588;
	shf.l.wrap.b32 	%r3988, %r3978, %r3978, 30;
	shf.l.wrap.b32 	%r4767, %r3986, %r3986, 5;
	// begin inline asm
	lop3.b32 %r3981, %r3982, %r3988, %r3984, 232;
	// end inline asm
	xor.b32  	%r4768, %r4659, %r4643;
	xor.b32  	%r4769, %r4768, %r4707;
	xor.b32  	%r4770, %r4769, %r4747;
	shf.l.wrap.b32 	%r4771, %r4770, %r4770, 1;
	add.s32 	%r4772, %r3981, %r4771;
	add.s32 	%r4773, %r4772, %r3980;
	add.s32 	%r4774, %r4773, %r4767;
	add.s32 	%r3990, %r4774, -1894007588;
	shf.l.wrap.b32 	%r3992, %r3982, %r3982, 30;
	shf.l.wrap.b32 	%r4775, %r3990, %r3990, 5;
	// begin inline asm
	lop3.b32 %r3985, %r3986, %r3992, %r3988, 232;
	// end inline asm
	xor.b32  	%r4776, %r4667, %r4651;
	xor.b32  	%r4777, %r4776, %r4715;
	xor.b32  	%r4778, %r4777, %r4755;
	shf.l.wrap.b32 	%r4779, %r4778, %r4778, 1;
	add.s32 	%r4780, %r3985, %r4779;
	add.s32 	%r4781, %r4780, %r3984;
	add.s32 	%r4782, %r4781, %r4775;
	add.s32 	%r3994, %r4782, -1894007588;
	shf.l.wrap.b32 	%r3996, %r3986, %r3986, 30;
	shf.l.wrap.b32 	%r4783, %r3994, %r3994, 5;
	// begin inline asm
	lop3.b32 %r3989, %r3990, %r3996, %r3992, 232;
	// end inline asm
	xor.b32  	%r4784, %r4675, %r4659;
	xor.b32  	%r4785, %r4784, %r4723;
	xor.b32  	%r4786, %r4785, %r4763;
	shf.l.wrap.b32 	%r4787, %r4786, %r4786, 1;
	add.s32 	%r4788, %r3989, %r4787;
	add.s32 	%r4789, %r4788, %r3988;
	add.s32 	%r4790, %r4789, %r4783;
	add.s32 	%r3998, %r4790, -1894007588;
	shf.l.wrap.b32 	%r4000, %r3990, %r3990, 30;
	shf.l.wrap.b32 	%r4791, %r3998, %r3998, 5;
	// begin inline asm
	lop3.b32 %r3993, %r3994, %r4000, %r3996, 232;
	// end inline asm
	xor.b32  	%r4792, %r4683, %r4667;
	xor.b32  	%r4793, %r4792, %r4731;
	xor.b32  	%r4794, %r4793, %r4771;
	shf.l.wrap.b32 	%r4795, %r4794, %r4794, 1;
	add.s32 	%r4796, %r3993, %r4795;
	add.s32 	%r4797, %r4796, %r3992;
	add.s32 	%r4798, %r4797, %r4791;
	add.s32 	%r4002, %r4798, -1894007588;
	shf.l.wrap.b32 	%r4004, %r3994, %r3994, 30;
	shf.l.wrap.b32 	%r4799, %r4002, %r4002, 5;
	// begin inline asm
	lop3.b32 %r3997, %r3998, %r4004, %r4000, 232;
	// end inline asm
	xor.b32  	%r4800, %r4691, %r4675;
	xor.b32  	%r4801, %r4800, %r4739;
	xor.b32  	%r4802, %r4801, %r4779;
	shf.l.wrap.b32 	%r4803, %r4802, %r4802, 1;
	add.s32 	%r4804, %r3997, %r4803;
	add.s32 	%r4805, %r4804, %r3996;
	add.s32 	%r4806, %r4805, %r4799;
	add.s32 	%r4006, %r4806, -1894007588;
	shf.l.wrap.b32 	%r4008, %r3998, %r3998, 30;
	shf.l.wrap.b32 	%r4807, %r4006, %r4006, 5;
	// begin inline asm
	lop3.b32 %r4001, %r4002, %r4008, %r4004, 232;
	// end inline asm
	xor.b32  	%r4808, %r4699, %r4683;
	xor.b32  	%r4809, %r4808, %r4747;
	xor.b32  	%r4810, %r4809, %r4787;
	shf.l.wrap.b32 	%r4811, %r4810, %r4810, 1;
	add.s32 	%r4812, %r4001, %r4811;
	add.s32 	%r4813, %r4812, %r4000;
	add.s32 	%r4814, %r4813, %r4807;
	add.s32 	%r4010, %r4814, -1894007588;
	shf.l.wrap.b32 	%r4012, %r4002, %r4002, 30;
	shf.l.wrap.b32 	%r4815, %r4010, %r4010, 5;
	// begin inline asm
	lop3.b32 %r4005, %r4006, %r4012, %r4008, 232;
	// end inline asm
	xor.b32  	%r4816, %r4707, %r4691;
	xor.b32  	%r4817, %r4816, %r4755;
	xor.b32  	%r4818, %r4817, %r4795;
	shf.l.wrap.b32 	%r4819, %r4818, %r4818, 1;
	add.s32 	%r4820, %r4005, %r4819;
	add.s32 	%r4821, %r4820, %r4004;
	add.s32 	%r4822, %r4821, %r4815;
	add.s32 	%r4014, %r4822, -1894007588;
	shf.l.wrap.b32 	%r4016, %r4006, %r4006, 30;
	shf.l.wrap.b32 	%r4823, %r4014, %r4014, 5;
	// begin inline asm
	lop3.b32 %r4009, %r4010, %r4016, %r4012, 232;
	// end inline asm
	xor.b32  	%r4824, %r4715, %r4699;
	xor.b32  	%r4825, %r4824, %r4763;
	xor.b32  	%r4826, %r4825, %r4803;
	shf.l.wrap.b32 	%r4827, %r4826, %r4826, 1;
	add.s32 	%r4828, %r4009, %r4827;
	add.s32 	%r4829, %r4828, %r4008;
	add.s32 	%r4830, %r4829, %r4823;
	add.s32 	%r4018, %r4830, -1894007588;
	shf.l.wrap.b32 	%r4020, %r4010, %r4010, 30;
	shf.l.wrap.b32 	%r4831, %r4018, %r4018, 5;
	// begin inline asm
	lop3.b32 %r4013, %r4014, %r4020, %r4016, 232;
	// end inline asm
	xor.b32  	%r4832, %r4723, %r4707;
	xor.b32  	%r4833, %r4832, %r4771;
	xor.b32  	%r4834, %r4833, %r4811;
	shf.l.wrap.b32 	%r4835, %r4834, %r4834, 1;
	add.s32 	%r4836, %r4013, %r4835;
	add.s32 	%r4837, %r4836, %r4012;
	add.s32 	%r4838, %r4837, %r4831;
	add.s32 	%r4022, %r4838, -1894007588;
	shf.l.wrap.b32 	%r4024, %r4014, %r4014, 30;
	shf.l.wrap.b32 	%r4839, %r4022, %r4022, 5;
	// begin inline asm
	lop3.b32 %r4017, %r4018, %r4024, %r4020, 232;
	// end inline asm
	xor.b32  	%r4840, %r4731, %r4715;
	xor.b32  	%r4841, %r4840, %r4779;
	xor.b32  	%r4842, %r4841, %r4819;
	shf.l.wrap.b32 	%r4843, %r4842, %r4842, 1;
	add.s32 	%r4844, %r4017, %r4843;
	add.s32 	%r4845, %r4844, %r4016;
	add.s32 	%r4846, %r4845, %r4839;
	add.s32 	%r4026, %r4846, -1894007588;
	shf.l.wrap.b32 	%r4028, %r4018, %r4018, 30;
	shf.l.wrap.b32 	%r4847, %r4026, %r4026, 5;
	// begin inline asm
	lop3.b32 %r4021, %r4022, %r4028, %r4024, 232;
	// end inline asm
	xor.b32  	%r4848, %r4739, %r4723;
	xor.b32  	%r4849, %r4848, %r4787;
	xor.b32  	%r4850, %r4849, %r4827;
	shf.l.wrap.b32 	%r4851, %r4850, %r4850, 1;
	add.s32 	%r4852, %r4021, %r4851;
	add.s32 	%r4853, %r4852, %r4020;
	add.s32 	%r4854, %r4853, %r4847;
	add.s32 	%r4030, %r4854, -1894007588;
	shf.l.wrap.b32 	%r4032, %r4022, %r4022, 30;
	shf.l.wrap.b32 	%r4855, %r4030, %r4030, 5;
	// begin inline asm
	lop3.b32 %r4025, %r4026, %r4032, %r4028, 232;
	// end inline asm
	xor.b32  	%r4856, %r4747, %r4731;
	xor.b32  	%r4857, %r4856, %r4795;
	xor.b32  	%r4858, %r4857, %r4835;
	shf.l.wrap.b32 	%r4859, %r4858, %r4858, 1;
	add.s32 	%r4860, %r4025, %r4859;
	add.s32 	%r4861, %r4860, %r4024;
	add.s32 	%r4862, %r4861, %r4855;
	add.s32 	%r4034, %r4862, -1894007588;
	shf.l.wrap.b32 	%r4036, %r4026, %r4026, 30;
	shf.l.wrap.b32 	%r4863, %r4034, %r4034, 5;
	// begin inline asm
	lop3.b32 %r4029, %r4030, %r4036, %r4032, 232;
	// end inline asm
	xor.b32  	%r4864, %r4755, %r4739;
	xor.b32  	%r4865, %r4864, %r4803;
	xor.b32  	%r4866, %r4865, %r4843;
	shf.l.wrap.b32 	%r4867, %r4866, %r4866, 1;
	add.s32 	%r4868, %r4029, %r4867;
	add.s32 	%r4869, %r4868, %r4028;
	add.s32 	%r4870, %r4869, %r4863;
	add.s32 	%r4038, %r4870, -1894007588;
	shf.l.wrap.b32 	%r4040, %r4030, %r4030, 30;
	shf.l.wrap.b32 	%r4871, %r4038, %r4038, 5;
	// begin inline asm
	lop3.b32 %r4033, %r4034, %r4040, %r4036, 232;
	// end inline asm
	xor.b32  	%r4872, %r4763, %r4747;
	xor.b32  	%r4873, %r4872, %r4811;
	xor.b32  	%r4874, %r4873, %r4851;
	shf.l.wrap.b32 	%r4875, %r4874, %r4874, 1;
	add.s32 	%r4876, %r4033, %r4875;
	add.s32 	%r4877, %r4876, %r4032;
	add.s32 	%r4878, %r4877, %r4871;
	add.s32 	%r4042, %r4878, -1894007588;
	shf.l.wrap.b32 	%r4044, %r4034, %r4034, 30;
	shf.l.wrap.b32 	%r4879, %r4042, %r4042, 5;
	// begin inline asm
	lop3.b32 %r4037, %r4038, %r4044, %r4040, 232;
	// end inline asm
	xor.b32  	%r4880, %r4771, %r4755;
	xor.b32  	%r4881, %r4880, %r4819;
	xor.b32  	%r4882, %r4881, %r4859;
	shf.l.wrap.b32 	%r4883, %r4882, %r4882, 1;
	add.s32 	%r4884, %r4037, %r4883;
	add.s32 	%r4885, %r4884, %r4036;
	add.s32 	%r4886, %r4885, %r4879;
	add.s32 	%r4046, %r4886, -1894007588;
	shf.l.wrap.b32 	%r4048, %r4038, %r4038, 30;
	shf.l.wrap.b32 	%r4887, %r4046, %r4046, 5;
	// begin inline asm
	lop3.b32 %r4041, %r4042, %r4048, %r4044, 232;
	// end inline asm
	xor.b32  	%r4888, %r4779, %r4763;
	xor.b32  	%r4889, %r4888, %r4827;
	xor.b32  	%r4890, %r4889, %r4867;
	shf.l.wrap.b32 	%r4891, %r4890, %r4890, 1;
	add.s32 	%r4892, %r4041, %r4891;
	add.s32 	%r4893, %r4892, %r4040;
	add.s32 	%r4894, %r4893, %r4887;
	add.s32 	%r4050, %r4894, -1894007588;
	shf.l.wrap.b32 	%r4052, %r4042, %r4042, 30;
	shf.l.wrap.b32 	%r4895, %r4050, %r4050, 5;
	// begin inline asm
	lop3.b32 %r4045, %r4046, %r4052, %r4048, 150;
	// end inline asm
	xor.b32  	%r4896, %r4787, %r4771;
	xor.b32  	%r4897, %r4896, %r4835;
	xor.b32  	%r4898, %r4897, %r4875;
	shf.l.wrap.b32 	%r4899, %r4898, %r4898, 1;
	add.s32 	%r4900, %r4045, %r4899;
	add.s32 	%r4901, %r4900, %r4044;
	add.s32 	%r4902, %r4901, %r4895;
	add.s32 	%r4054, %r4902, -899497514;
	shf.l.wrap.b32 	%r4056, %r4046, %r4046, 30;
	shf.l.wrap.b32 	%r4903, %r4054, %r4054, 5;
	// begin inline asm
	lop3.b32 %r4049, %r4050, %r4056, %r4052, 150;
	// end inline asm
	xor.b32  	%r4904, %r4795, %r4779;
	xor.b32  	%r4905, %r4904, %r4843;
	xor.b32  	%r4906, %r4905, %r4883;
	shf.l.wrap.b32 	%r4907, %r4906, %r4906, 1;
	add.s32 	%r4908, %r4049, %r4907;
	add.s32 	%r4909, %r4908, %r4048;
	add.s32 	%r4910, %r4909, %r4903;
	add.s32 	%r4058, %r4910, -899497514;
	shf.l.wrap.b32 	%r4060, %r4050, %r4050, 30;
	shf.l.wrap.b32 	%r4911, %r4058, %r4058, 5;
	// begin inline asm
	lop3.b32 %r4053, %r4054, %r4060, %r4056, 150;
	// end inline asm
	xor.b32  	%r4912, %r4803, %r4787;
	xor.b32  	%r4913, %r4912, %r4851;
	xor.b32  	%r4914, %r4913, %r4891;
	shf.l.wrap.b32 	%r4915, %r4914, %r4914, 1;
	add.s32 	%r4916, %r4053, %r4915;
	add.s32 	%r4917, %r4916, %r4052;
	add.s32 	%r4918, %r4917, %r4911;
	add.s32 	%r4062, %r4918, -899497514;
	shf.l.wrap.b32 	%r4064, %r4054, %r4054, 30;
	shf.l.wrap.b32 	%r4919, %r4062, %r4062, 5;
	// begin inline asm
	lop3.b32 %r4057, %r4058, %r4064, %r4060, 150;
	// end inline asm
	xor.b32  	%r4920, %r4811, %r4795;
	xor.b32  	%r4921, %r4920, %r4859;
	xor.b32  	%r4922, %r4921, %r4899;
	shf.l.wrap.b32 	%r4923, %r4922, %r4922, 1;
	add.s32 	%r4924, %r4057, %r4923;
	add.s32 	%r4925, %r4924, %r4056;
	add.s32 	%r4926, %r4925, %r4919;
	add.s32 	%r4066, %r4926, -899497514;
	shf.l.wrap.b32 	%r4068, %r4058, %r4058, 30;
	shf.l.wrap.b32 	%r4927, %r4066, %r4066, 5;
	// begin inline asm
	lop3.b32 %r4061, %r4062, %r4068, %r4064, 150;
	// end inline asm
	xor.b32  	%r4928, %r4819, %r4803;
	xor.b32  	%r4929, %r4928, %r4867;
	xor.b32  	%r4930, %r4929, %r4907;
	shf.l.wrap.b32 	%r4931, %r4930, %r4930, 1;
	add.s32 	%r4932, %r4061, %r4931;
	add.s32 	%r4933, %r4932, %r4060;
	add.s32 	%r4934, %r4933, %r4927;
	add.s32 	%r4070, %r4934, -899497514;
	shf.l.wrap.b32 	%r4072, %r4062, %r4062, 30;
	shf.l.wrap.b32 	%r4935, %r4070, %r4070, 5;
	// begin inline asm
	lop3.b32 %r4065, %r4066, %r4072, %r4068, 150;
	// end inline asm
	xor.b32  	%r4936, %r4827, %r4811;
	xor.b32  	%r4937, %r4936, %r4875;
	xor.b32  	%r4938, %r4937, %r4915;
	shf.l.wrap.b32 	%r4939, %r4938, %r4938, 1;
	add.s32 	%r4940, %r4065, %r4939;
	add.s32 	%r4941, %r4940, %r4064;
	add.s32 	%r4942, %r4941, %r4935;
	add.s32 	%r4074, %r4942, -899497514;
	shf.l.wrap.b32 	%r4076, %r4066, %r4066, 30;
	shf.l.wrap.b32 	%r4943, %r4074, %r4074, 5;
	// begin inline asm
	lop3.b32 %r4069, %r4070, %r4076, %r4072, 150;
	// end inline asm
	xor.b32  	%r4944, %r4835, %r4819;
	xor.b32  	%r4945, %r4944, %r4883;
	xor.b32  	%r4946, %r4945, %r4923;
	shf.l.wrap.b32 	%r4947, %r4946, %r4946, 1;
	add.s32 	%r4948, %r4069, %r4947;
	add.s32 	%r4949, %r4948, %r4068;
	add.s32 	%r4950, %r4949, %r4943;
	add.s32 	%r4078, %r4950, -899497514;
	shf.l.wrap.b32 	%r4080, %r4070, %r4070, 30;
	shf.l.wrap.b32 	%r4951, %r4078, %r4078, 5;
	// begin inline asm
	lop3.b32 %r4073, %r4074, %r4080, %r4076, 150;
	// end inline asm
	xor.b32  	%r4952, %r4843, %r4827;
	xor.b32  	%r4953, %r4952, %r4891;
	xor.b32  	%r4954, %r4953, %r4931;
	shf.l.wrap.b32 	%r4955, %r4954, %r4954, 1;
	add.s32 	%r4956, %r4073, %r4955;
	add.s32 	%r4957, %r4956, %r4072;
	add.s32 	%r4958, %r4957, %r4951;
	add.s32 	%r4082, %r4958, -899497514;
	shf.l.wrap.b32 	%r4084, %r4074, %r4074, 30;
	shf.l.wrap.b32 	%r4959, %r4082, %r4082, 5;
	// begin inline asm
	lop3.b32 %r4077, %r4078, %r4084, %r4080, 150;
	// end inline asm
	xor.b32  	%r4960, %r4851, %r4835;
	xor.b32  	%r4961, %r4960, %r4899;
	xor.b32  	%r4962, %r4961, %r4939;
	shf.l.wrap.b32 	%r4963, %r4962, %r4962, 1;
	add.s32 	%r4964, %r4077, %r4963;
	add.s32 	%r4965, %r4964, %r4076;
	add.s32 	%r4966, %r4965, %r4959;
	add.s32 	%r4086, %r4966, -899497514;
	shf.l.wrap.b32 	%r4088, %r4078, %r4078, 30;
	shf.l.wrap.b32 	%r4967, %r4086, %r4086, 5;
	// begin inline asm
	lop3.b32 %r4081, %r4082, %r4088, %r4084, 150;
	// end inline asm
	xor.b32  	%r4968, %r4859, %r4843;
	xor.b32  	%r4969, %r4968, %r4907;
	xor.b32  	%r4970, %r4969, %r4947;
	shf.l.wrap.b32 	%r4971, %r4970, %r4970, 1;
	add.s32 	%r4972, %r4081, %r4971;
	add.s32 	%r4973, %r4972, %r4080;
	add.s32 	%r4974, %r4973, %r4967;
	add.s32 	%r4090, %r4974, -899497514;
	shf.l.wrap.b32 	%r4092, %r4082, %r4082, 30;
	shf.l.wrap.b32 	%r4975, %r4090, %r4090, 5;
	// begin inline asm
	lop3.b32 %r4085, %r4086, %r4092, %r4088, 150;
	// end inline asm
	xor.b32  	%r4976, %r4867, %r4851;
	xor.b32  	%r4977, %r4976, %r4915;
	xor.b32  	%r4978, %r4977, %r4955;
	shf.l.wrap.b32 	%r4979, %r4978, %r4978, 1;
	add.s32 	%r4980, %r4085, %r4979;
	add.s32 	%r4981, %r4980, %r4084;
	add.s32 	%r4982, %r4981, %r4975;
	add.s32 	%r4094, %r4982, -899497514;
	shf.l.wrap.b32 	%r4096, %r4086, %r4086, 30;
	shf.l.wrap.b32 	%r4983, %r4094, %r4094, 5;
	// begin inline asm
	lop3.b32 %r4089, %r4090, %r4096, %r4092, 150;
	// end inline asm
	xor.b32  	%r4984, %r4875, %r4859;
	xor.b32  	%r4985, %r4984, %r4923;
	xor.b32  	%r4986, %r4985, %r4963;
	shf.l.wrap.b32 	%r4987, %r4986, %r4986, 1;
	add.s32 	%r4988, %r4089, %r4987;
	add.s32 	%r4989, %r4988, %r4088;
	add.s32 	%r4990, %r4989, %r4983;
	add.s32 	%r4098, %r4990, -899497514;
	shf.l.wrap.b32 	%r4100, %r4090, %r4090, 30;
	shf.l.wrap.b32 	%r4991, %r4098, %r4098, 5;
	// begin inline asm
	lop3.b32 %r4093, %r4094, %r4100, %r4096, 150;
	// end inline asm
	xor.b32  	%r4992, %r4883, %r4867;
	xor.b32  	%r4993, %r4992, %r4931;
	xor.b32  	%r4994, %r4993, %r4971;
	shf.l.wrap.b32 	%r4995, %r4994, %r4994, 1;
	add.s32 	%r4996, %r4093, %r4995;
	add.s32 	%r4997, %r4996, %r4092;
	add.s32 	%r4998, %r4997, %r4991;
	add.s32 	%r4102, %r4998, -899497514;
	shf.l.wrap.b32 	%r4104, %r4094, %r4094, 30;
	shf.l.wrap.b32 	%r4999, %r4102, %r4102, 5;
	// begin inline asm
	lop3.b32 %r4097, %r4098, %r4104, %r4100, 150;
	// end inline asm
	xor.b32  	%r5000, %r4891, %r4875;
	xor.b32  	%r5001, %r5000, %r4939;
	xor.b32  	%r5002, %r5001, %r4979;
	shf.l.wrap.b32 	%r5003, %r5002, %r5002, 1;
	add.s32 	%r5004, %r4097, %r5003;
	add.s32 	%r5005, %r5004, %r4096;
	add.s32 	%r5006, %r5005, %r4999;
	add.s32 	%r4106, %r5006, -899497514;
	shf.l.wrap.b32 	%r4108, %r4098, %r4098, 30;
	shf.l.wrap.b32 	%r5007, %r4106, %r4106, 5;
	// begin inline asm
	lop3.b32 %r4101, %r4102, %r4108, %r4104, 150;
	// end inline asm
	xor.b32  	%r5008, %r4899, %r4883;
	xor.b32  	%r5009, %r5008, %r4947;
	xor.b32  	%r5010, %r5009, %r4987;
	shf.l.wrap.b32 	%r5011, %r5010, %r5010, 1;
	add.s32 	%r5012, %r4101, %r5011;
	add.s32 	%r5013, %r5012, %r4100;
	add.s32 	%r5014, %r5013, %r5007;
	add.s32 	%r4110, %r5014, -899497514;
	shf.l.wrap.b32 	%r4112, %r4102, %r4102, 30;
	shf.l.wrap.b32 	%r5015, %r4110, %r4110, 5;
	// begin inline asm
	lop3.b32 %r4105, %r4106, %r4112, %r4108, 150;
	// end inline asm
	xor.b32  	%r5016, %r4907, %r4891;
	xor.b32  	%r5017, %r5016, %r4955;
	xor.b32  	%r5018, %r5017, %r4995;
	shf.l.wrap.b32 	%r5019, %r5018, %r5018, 1;
	add.s32 	%r5020, %r4105, %r5019;
	add.s32 	%r5021, %r5020, %r4104;
	add.s32 	%r5022, %r5021, %r5015;
	add.s32 	%r4114, %r5022, -899497514;
	shf.l.wrap.b32 	%r4116, %r4106, %r4106, 30;
	shf.l.wrap.b32 	%r5023, %r4114, %r4114, 5;
	// begin inline asm
	lop3.b32 %r4109, %r4110, %r4116, %r4112, 150;
	// end inline asm
	xor.b32  	%r5024, %r4915, %r4899;
	xor.b32  	%r5025, %r5024, %r4963;
	xor.b32  	%r5026, %r5025, %r5003;
	shf.l.wrap.b32 	%r5027, %r5026, %r5026, 1;
	add.s32 	%r5028, %r4109, %r5027;
	add.s32 	%r5029, %r5028, %r4108;
	add.s32 	%r5030, %r5029, %r5023;
	add.s32 	%r4118, %r5030, -899497514;
	shf.l.wrap.b32 	%r4120, %r4110, %r4110, 30;
	shf.l.wrap.b32 	%r5031, %r4118, %r4118, 5;
	// begin inline asm
	lop3.b32 %r4113, %r4114, %r4120, %r4116, 150;
	// end inline asm
	xor.b32  	%r5032, %r4923, %r4907;
	xor.b32  	%r5033, %r5032, %r4971;
	xor.b32  	%r5034, %r5033, %r5011;
	shf.l.wrap.b32 	%r5035, %r5034, %r5034, 1;
	add.s32 	%r5036, %r4113, %r5035;
	add.s32 	%r5037, %r5036, %r4112;
	add.s32 	%r5038, %r5037, %r5031;
	add.s32 	%r4122, %r5038, -899497514;
	shf.l.wrap.b32 	%r4124, %r4114, %r4114, 30;
	shf.l.wrap.b32 	%r5039, %r4122, %r4122, 5;
	// begin inline asm
	lop3.b32 %r4117, %r4118, %r4124, %r4120, 150;
	// end inline asm
	xor.b32  	%r5040, %r4931, %r4915;
	xor.b32  	%r5041, %r5040, %r4979;
	xor.b32  	%r5042, %r5041, %r5019;
	shf.l.wrap.b32 	%r5043, %r5042, %r5042, 1;
	add.s32 	%r5044, %r4117, %r5043;
	add.s32 	%r5045, %r5044, %r4116;
	add.s32 	%r5046, %r5045, %r5039;
	add.s32 	%r5047, %r5046, -899497514;
	shf.l.wrap.b32 	%r4123, %r4118, %r4118, 30;
	shf.l.wrap.b32 	%r5048, %r5047, %r5047, 5;
	// begin inline asm
	lop3.b32 %r4121, %r4122, %r4123, %r4124, 150;
	// end inline asm
	xor.b32  	%r5049, %r4939, %r4923;
	xor.b32  	%r5050, %r5049, %r4987;
	xor.b32  	%r5051, %r5050, %r5027;
	shf.l.wrap.b32 	%r5052, %r5051, %r5051, 1;
	shf.l.wrap.b32 	%r5053, %r4122, %r4122, 30;
	add.s32 	%r5054, %r5623, %r4121;
	add.s32 	%r5055, %r5054, %r5052;
	add.s32 	%r5056, %r5055, %r4120;
	add.s32 	%r5057, %r5056, %r5048;
	add.s32 	%r5058, %r5057, -899497514;
	add.s32 	%r5059, %r5047, %r5622;
	add.s32 	%r5060, %r5053, %r5621;
	add.s32 	%r5061, %r4123, %r5620;
	add.s32 	%r5062, %r4124, %r5619;
	shf.l.wrap.b32 	%r5063, %r8, %r8, 5;
	add.s32 	%r5064, %r5063, %r12;
	// begin inline asm
	lop3.b32 %r4125, %r9, %r10, %r11, 202;
	// end inline asm
	add.s32 	%r5065, %r5064, %r4125;
	add.s32 	%r5066, %r5065, %r5058;
	add.s32 	%r4134, %r5066, 1518500249;
	shf.l.wrap.b32 	%r5067, %r4134, %r4134, 5;
	shf.l.wrap.b32 	%r4136, %r9, %r9, 30;
	// begin inline asm
	lop3.b32 %r4129, %r8, %r4136, %r10, 202;
	// end inline asm
	add.s32 	%r5068, %r692, %r4129;
	add.s32 	%r5069, %r5068, %r5059;
	add.s32 	%r5070, %r5069, %r5067;
	add.s32 	%r4138, %r5070, 1790234127;
	shf.l.wrap.b32 	%r5071, %r4138, %r4138, 5;
	shf.l.wrap.b32 	%r4140, %r8, %r8, 30;
	// begin inline asm
	lop3.b32 %r4133, %r4134, %r4140, %r4136, 202;
	// end inline asm
	add.s32 	%r5072, %r7, %r4133;
	add.s32 	%r5073, %r5072, %r5060;
	add.s32 	%r5074, %r5073, %r5071;
	add.s32 	%r4142, %r5074, -214083945;
	shf.l.wrap.b32 	%r4144, %r4134, %r4134, 30;
	shf.l.wrap.b32 	%r5075, %r4142, %r4142, 5;
	// begin inline asm
	lop3.b32 %r4137, %r4138, %r4144, %r4140, 202;
	// end inline asm
	add.s32 	%r5076, %r4136, %r4137;
	add.s32 	%r5077, %r5076, %r5061;
	add.s32 	%r5078, %r5077, %r5075;
	add.s32 	%r4146, %r5078, 1518500249;
	shf.l.wrap.b32 	%r4148, %r4138, %r4138, 30;
	shf.l.wrap.b32 	%r5079, %r4146, %r4146, 5;
	// begin inline asm
	lop3.b32 %r4141, %r4142, %r4148, %r4144, 202;
	// end inline asm
	add.s32 	%r5080, %r4140, %r4141;
	add.s32 	%r5081, %r5080, %r5062;
	add.s32 	%r5082, %r5081, %r5079;
	add.s32 	%r4150, %r5082, 1518500249;
	shf.l.wrap.b32 	%r4152, %r4142, %r4142, 30;
	shf.l.wrap.b32 	%r5083, %r4150, %r4150, 5;
	// begin inline asm
	lop3.b32 %r4145, %r4146, %r4152, %r4148, 202;
	// end inline asm
	add.s32 	%r5084, %r4144, %r4145;
	add.s32 	%r5085, %r5084, 1518500249;
	xor.b32  	%r5086, %r5085, -2147483648;
	add.s32 	%r4154, %r5086, %r5083;
	shf.l.wrap.b32 	%r4156, %r4146, %r4146, 30;
	shf.l.wrap.b32 	%r5087, %r4154, %r4154, 5;
	// begin inline asm
	lop3.b32 %r4149, %r4150, %r4156, %r4152, 202;
	// end inline asm
	add.s32 	%r5088, %r4148, %r4149;
	add.s32 	%r5089, %r5088, %r5087;
	add.s32 	%r4158, %r5089, 1518500249;
	shf.l.wrap.b32 	%r4160, %r4150, %r4150, 30;
	shf.l.wrap.b32 	%r5090, %r4158, %r4158, 5;
	// begin inline asm
	lop3.b32 %r4153, %r4154, %r4160, %r4156, 202;
	// end inline asm
	add.s32 	%r5091, %r4153, %r4152;
	add.s32 	%r5092, %r5091, %r5090;
	add.s32 	%r4162, %r5092, 1518500249;
	shf.l.wrap.b32 	%r4164, %r4154, %r4154, 30;
	shf.l.wrap.b32 	%r5093, %r4162, %r4162, 5;
	// begin inline asm
	lop3.b32 %r4157, %r4158, %r4164, %r4160, 202;
	// end inline asm
	add.s32 	%r5094, %r4157, %r4156;
	add.s32 	%r5095, %r5094, %r5093;
	add.s32 	%r4166, %r5095, 1518500249;
	shf.l.wrap.b32 	%r4168, %r4158, %r4158, 30;
	shf.l.wrap.b32 	%r5096, %r4166, %r4166, 5;
	// begin inline asm
	lop3.b32 %r4161, %r4162, %r4168, %r4164, 202;
	// end inline asm
	add.s32 	%r5097, %r4161, %r4160;
	add.s32 	%r5098, %r5097, %r5096;
	add.s32 	%r4170, %r5098, 1518500249;
	shf.l.wrap.b32 	%r4172, %r4162, %r4162, 30;
	shf.l.wrap.b32 	%r5099, %r4170, %r4170, 5;
	// begin inline asm
	lop3.b32 %r4165, %r4166, %r4172, %r4168, 202;
	// end inline asm
	add.s32 	%r5100, %r4165, %r4164;
	add.s32 	%r5101, %r5100, %r5099;
	add.s32 	%r4174, %r5101, 1518500249;
	shf.l.wrap.b32 	%r4176, %r4166, %r4166, 30;
	shf.l.wrap.b32 	%r5102, %r4174, %r4174, 5;
	// begin inline asm
	lop3.b32 %r4169, %r4170, %r4176, %r4172, 202;
	// end inline asm
	add.s32 	%r5103, %r4169, %r4168;
	add.s32 	%r5104, %r5103, %r5102;
	add.s32 	%r4178, %r5104, 1518500249;
	shf.l.wrap.b32 	%r4180, %r4170, %r4170, 30;
	shf.l.wrap.b32 	%r5105, %r4178, %r4178, 5;
	// begin inline asm
	lop3.b32 %r4173, %r4174, %r4180, %r4176, 202;
	// end inline asm
	add.s32 	%r5106, %r4173, %r4172;
	add.s32 	%r5107, %r5106, %r5105;
	add.s32 	%r4182, %r5107, 1518500249;
	shf.l.wrap.b32 	%r4184, %r4174, %r4174, 30;
	shf.l.wrap.b32 	%r5108, %r4182, %r4182, 5;
	// begin inline asm
	lop3.b32 %r4177, %r4178, %r4184, %r4180, 202;
	// end inline asm
	add.s32 	%r5109, %r4177, %r4176;
	add.s32 	%r5110, %r5109, %r5108;
	add.s32 	%r4186, %r5110, 1518500249;
	shf.l.wrap.b32 	%r4188, %r4178, %r4178, 30;
	shf.l.wrap.b32 	%r5111, %r4186, %r4186, 5;
	// begin inline asm
	lop3.b32 %r4181, %r4182, %r4188, %r4184, 202;
	// end inline asm
	add.s32 	%r5112, %r4181, %r4180;
	add.s32 	%r5113, %r5112, %r5111;
	add.s32 	%r4190, %r5113, 1518500249;
	shf.l.wrap.b32 	%r4192, %r4182, %r4182, 30;
	shf.l.wrap.b32 	%r5114, %r4190, %r4190, 5;
	// begin inline asm
	lop3.b32 %r4185, %r4186, %r4192, %r4188, 202;
	// end inline asm
	add.s32 	%r5115, %r4185, %r4184;
	add.s32 	%r5116, %r5115, %r5114;
	add.s32 	%r4194, %r5116, 1518500921;
	shf.l.wrap.b32 	%r4196, %r4186, %r4186, 30;
	shf.l.wrap.b32 	%r5117, %r4194, %r4194, 5;
	// begin inline asm
	lop3.b32 %r4189, %r4190, %r4196, %r4192, 202;
	// end inline asm
	xor.b32  	%r5118, %r5058, %r5060;
	shf.l.wrap.b32 	%r5119, %r5118, %r5118, 1;
	add.s32 	%r5120, %r4189, %r5119;
	add.s32 	%r5121, %r5120, %r4188;
	add.s32 	%r5122, %r5121, %r5117;
	add.s32 	%r4198, %r5122, 1518500249;
	shf.l.wrap.b32 	%r4200, %r4190, %r4190, 30;
	shf.l.wrap.b32 	%r5123, %r4198, %r4198, 5;
	// begin inline asm
	lop3.b32 %r4193, %r4194, %r4200, %r4196, 202;
	// end inline asm
	xor.b32  	%r5124, %r5059, %r5061;
	shf.l.wrap.b32 	%r5125, %r5124, %r5124, 1;
	add.s32 	%r5126, %r4193, %r5125;
	add.s32 	%r5127, %r5126, %r4192;
	add.s32 	%r5128, %r5127, %r5123;
	add.s32 	%r4202, %r5128, 1518500249;
	shf.l.wrap.b32 	%r4204, %r4194, %r4194, 30;
	shf.l.wrap.b32 	%r5129, %r4202, %r4202, 5;
	// begin inline asm
	lop3.b32 %r4197, %r4198, %r4204, %r4200, 202;
	// end inline asm
	xor.b32  	%r5130, %r5062, %r5060;
	xor.b32  	%r5131, %r5130, 672;
	shf.l.wrap.b32 	%r5132, %r5131, %r5131, 1;
	add.s32 	%r5133, %r4197, %r5132;
	add.s32 	%r5134, %r5133, %r4196;
	add.s32 	%r5135, %r5134, %r5129;
	add.s32 	%r4206, %r5135, 1518500249;
	shf.l.wrap.b32 	%r4208, %r4198, %r4198, 30;
	shf.l.wrap.b32 	%r5136, %r4206, %r4206, 5;
	// begin inline asm
	lop3.b32 %r4201, %r4202, %r4208, %r4204, 202;
	// end inline asm
	xor.b32  	%r5137, %r5119, %r5061;
	xor.b32  	%r5138, %r5137, -2147483648;
	shf.l.wrap.b32 	%r5139, %r5138, %r5138, 1;
	add.s32 	%r5140, %r4201, %r5139;
	add.s32 	%r5141, %r5140, %r4200;
	add.s32 	%r5142, %r5141, %r5136;
	add.s32 	%r4210, %r5142, 1518500249;
	shf.l.wrap.b32 	%r4212, %r4202, %r4202, 30;
	shf.l.wrap.b32 	%r5143, %r4210, %r4210, 5;
	// begin inline asm
	lop3.b32 %r4205, %r4206, %r4212, %r4208, 150;
	// end inline asm
	xor.b32  	%r5144, %r5062, %r5125;
	shf.l.wrap.b32 	%r5145, %r5144, %r5144, 1;
	add.s32 	%r5146, %r4205, %r5145;
	add.s32 	%r5147, %r5146, %r4204;
	add.s32 	%r5148, %r5147, %r5143;
	add.s32 	%r4214, %r5148, 1859775393;
	shf.l.wrap.b32 	%r4216, %r4206, %r4206, 30;
	shf.l.wrap.b32 	%r5149, %r4214, %r4214, 5;
	// begin inline asm
	lop3.b32 %r4209, %r4210, %r4216, %r4212, 150;
	// end inline asm
	xor.b32  	%r5150, %r5132, -2147483648;
	shf.l.wrap.b32 	%r5151, %r5150, %r5150, 1;
	add.s32 	%r5152, %r4209, %r5151;
	add.s32 	%r5153, %r5152, %r4208;
	add.s32 	%r5154, %r5153, %r5149;
	add.s32 	%r4218, %r5154, 1859775393;
	shf.l.wrap.b32 	%r4220, %r4210, %r4210, 30;
	shf.l.wrap.b32 	%r5155, %r4218, %r4218, 5;
	// begin inline asm
	lop3.b32 %r4213, %r4214, %r4220, %r4216, 150;
	// end inline asm
	shf.l.wrap.b32 	%r5156, %r5139, %r5139, 1;
	add.s32 	%r5157, %r4213, %r5156;
	add.s32 	%r5158, %r5157, %r4212;
	add.s32 	%r5159, %r5158, %r5155;
	add.s32 	%r4222, %r5159, 1859775393;
	shf.l.wrap.b32 	%r4224, %r4214, %r4214, 30;
	shf.l.wrap.b32 	%r5160, %r4222, %r4222, 5;
	// begin inline asm
	lop3.b32 %r4217, %r4218, %r4224, %r4220, 150;
	// end inline asm
	xor.b32  	%r5161, %r5145, 672;
	shf.l.wrap.b32 	%r5162, %r5161, %r5161, 1;
	add.s32 	%r5163, %r4217, %r5162;
	add.s32 	%r5164, %r5163, %r4216;
	add.s32 	%r5165, %r5164, %r5160;
	add.s32 	%r4226, %r5165, 1859775393;
	shf.l.wrap.b32 	%r4228, %r4218, %r4218, 30;
	shf.l.wrap.b32 	%r5166, %r4226, %r4226, 5;
	// begin inline asm
	lop3.b32 %r4221, %r4222, %r4228, %r4224, 150;
	// end inline asm
	xor.b32  	%r5167, %r5119, %r5151;
	shf.l.wrap.b32 	%r5168, %r5167, %r5167, 1;
	add.s32 	%r5169, %r4221, %r5168;
	add.s32 	%r5170, %r5169, %r4220;
	add.s32 	%r5171, %r5170, %r5166;
	add.s32 	%r4230, %r5171, 1859775393;
	shf.l.wrap.b32 	%r4232, %r4222, %r4222, 30;
	shf.l.wrap.b32 	%r5172, %r4230, %r4230, 5;
	// begin inline asm
	lop3.b32 %r4225, %r4226, %r4232, %r4228, 150;
	// end inline asm
	xor.b32  	%r5173, %r5125, %r5156;
	shf.l.wrap.b32 	%r5174, %r5173, %r5173, 1;
	add.s32 	%r5175, %r4225, %r5174;
	add.s32 	%r5176, %r5175, %r4224;
	add.s32 	%r5177, %r5176, %r5172;
	add.s32 	%r4234, %r5177, 1859775393;
	shf.l.wrap.b32 	%r4236, %r4226, %r4226, 30;
	shf.l.wrap.b32 	%r5178, %r4234, %r4234, 5;
	// begin inline asm
	lop3.b32 %r4229, %r4230, %r4236, %r4232, 150;
	// end inline asm
	xor.b32  	%r5179, %r5132, %r5162;
	shf.l.wrap.b32 	%r5180, %r5179, %r5179, 1;
	add.s32 	%r5181, %r4229, %r5180;
	add.s32 	%r5182, %r5181, %r4228;
	add.s32 	%r5183, %r5182, %r5178;
	add.s32 	%r4238, %r5183, 1859775393;
	shf.l.wrap.b32 	%r4240, %r4230, %r4230, 30;
	shf.l.wrap.b32 	%r5184, %r4238, %r4238, 5;
	// begin inline asm
	lop3.b32 %r4233, %r4234, %r4240, %r4236, 150;
	// end inline asm
	xor.b32  	%r5185, %r5139, %r5168;
	shf.l.wrap.b32 	%r5186, %r5185, %r5185, 1;
	add.s32 	%r5187, %r4233, %r5186;
	add.s32 	%r5188, %r5187, %r4232;
	add.s32 	%r5189, %r5188, %r5184;
	add.s32 	%r4242, %r5189, 1859775393;
	shf.l.wrap.b32 	%r4244, %r4234, %r4234, 30;
	shf.l.wrap.b32 	%r5190, %r4242, %r4242, 5;
	// begin inline asm
	lop3.b32 %r4237, %r4238, %r4244, %r4240, 150;
	// end inline asm
	xor.b32  	%r5191, %r5145, %r5174;
	shf.l.wrap.b32 	%r5192, %r5191, %r5191, 1;
	add.s32 	%r5193, %r4237, %r5192;
	add.s32 	%r5194, %r5193, %r4236;
	add.s32 	%r5195, %r5194, %r5190;
	add.s32 	%r4246, %r5195, 1859775393;
	shf.l.wrap.b32 	%r4248, %r4238, %r4238, 30;
	shf.l.wrap.b32 	%r5196, %r4246, %r4246, 5;
	// begin inline asm
	lop3.b32 %r4241, %r4242, %r4248, %r4244, 150;
	// end inline asm
	xor.b32  	%r5197, %r5151, %r5180;
	xor.b32  	%r5198, %r5197, 672;
	shf.l.wrap.b32 	%r5199, %r5198, %r5198, 1;
	add.s32 	%r5200, %r4241, %r5199;
	add.s32 	%r5201, %r5200, %r4240;
	add.s32 	%r5202, %r5201, %r5196;
	add.s32 	%r4250, %r5202, 1859775393;
	shf.l.wrap.b32 	%r4252, %r4242, %r4242, 30;
	shf.l.wrap.b32 	%r5203, %r4250, %r4250, 5;
	// begin inline asm
	lop3.b32 %r4245, %r4246, %r4252, %r4248, 150;
	// end inline asm
	xor.b32  	%r5204, %r5156, %r5186;
	xor.b32  	%r5205, %r5204, %r5119;
	shf.l.wrap.b32 	%r5206, %r5205, %r5205, 1;
	add.s32 	%r5207, %r4245, %r5206;
	add.s32 	%r5208, %r5207, %r4244;
	add.s32 	%r5209, %r5208, %r5203;
	add.s32 	%r4254, %r5209, 1859775393;
	shf.l.wrap.b32 	%r4256, %r4246, %r4246, 30;
	shf.l.wrap.b32 	%r5210, %r4254, %r4254, 5;
	// begin inline asm
	lop3.b32 %r4249, %r4250, %r4256, %r4252, 150;
	// end inline asm
	xor.b32  	%r5211, %r5162, %r5192;
	xor.b32  	%r5212, %r5211, %r5125;
	xor.b32  	%r5213, %r5212, 672;
	shf.l.wrap.b32 	%r5214, %r5213, %r5213, 1;
	add.s32 	%r5215, %r4249, %r5214;
	add.s32 	%r5216, %r5215, %r4248;
	add.s32 	%r5217, %r5216, %r5210;
	add.s32 	%r4258, %r5217, 1859775393;
	shf.l.wrap.b32 	%r4260, %r4250, %r4250, 30;
	shf.l.wrap.b32 	%r5218, %r4258, %r4258, 5;
	// begin inline asm
	lop3.b32 %r4253, %r4254, %r4260, %r4256, 150;
	// end inline asm
	xor.b32  	%r5219, %r5168, %r5199;
	xor.b32  	%r5220, %r5219, %r5132;
	xor.b32  	%r5221, %r5220, %r5119;
	shf.l.wrap.b32 	%r5222, %r5221, %r5221, 1;
	add.s32 	%r5223, %r4253, %r5222;
	add.s32 	%r5224, %r5223, %r4252;
	add.s32 	%r5225, %r5224, %r5218;
	add.s32 	%r4262, %r5225, 1859775393;
	shf.l.wrap.b32 	%r4264, %r4254, %r4254, 30;
	shf.l.wrap.b32 	%r5226, %r4262, %r4262, 5;
	// begin inline asm
	lop3.b32 %r4257, %r4258, %r4264, %r4260, 150;
	// end inline asm
	xor.b32  	%r5227, %r5174, %r5206;
	xor.b32  	%r5228, %r5227, %r5139;
	xor.b32  	%r5229, %r5228, %r5125;
	shf.l.wrap.b32 	%r5230, %r5229, %r5229, 1;
	add.s32 	%r5231, %r4257, %r5230;
	add.s32 	%r5232, %r5231, %r4256;
	add.s32 	%r5233, %r5232, %r5226;
	add.s32 	%r4266, %r5233, 1859775393;
	shf.l.wrap.b32 	%r4268, %r4258, %r4258, 30;
	shf.l.wrap.b32 	%r5234, %r4266, %r4266, 5;
	// begin inline asm
	lop3.b32 %r4261, %r4262, %r4268, %r4264, 150;
	// end inline asm
	xor.b32  	%r5235, %r5180, %r5214;
	xor.b32  	%r5236, %r5235, %r5145;
	xor.b32  	%r5237, %r5236, %r5132;
	shf.l.wrap.b32 	%r5238, %r5237, %r5237, 1;
	add.s32 	%r5239, %r4261, %r5238;
	add.s32 	%r5240, %r5239, %r4260;
	add.s32 	%r5241, %r5240, %r5234;
	add.s32 	%r4270, %r5241, 1859775393;
	shf.l.wrap.b32 	%r4272, %r4262, %r4262, 30;
	shf.l.wrap.b32 	%r5242, %r4270, %r4270, 5;
	// begin inline asm
	lop3.b32 %r4265, %r4266, %r4272, %r4268, 150;
	// end inline asm
	xor.b32  	%r5243, %r5186, %r5222;
	xor.b32  	%r5244, %r5243, %r5151;
	xor.b32  	%r5245, %r5244, %r5139;
	shf.l.wrap.b32 	%r5246, %r5245, %r5245, 1;
	add.s32 	%r5247, %r4265, %r5246;
	add.s32 	%r5248, %r5247, %r4264;
	add.s32 	%r5249, %r5248, %r5242;
	add.s32 	%r4274, %r5249, 1859775393;
	shf.l.wrap.b32 	%r4276, %r4266, %r4266, 30;
	shf.l.wrap.b32 	%r5250, %r4274, %r4274, 5;
	// begin inline asm
	lop3.b32 %r4269, %r4270, %r4276, %r4272, 150;
	// end inline asm
	xor.b32  	%r5251, %r5192, %r5230;
	xor.b32  	%r5252, %r5251, %r5156;
	xor.b32  	%r5253, %r5252, %r5145;
	shf.l.wrap.b32 	%r5254, %r5253, %r5253, 1;
	add.s32 	%r5255, %r4269, %r5254;
	add.s32 	%r5256, %r5255, %r4268;
	add.s32 	%r5257, %r5256, %r5250;
	add.s32 	%r4278, %r5257, 1859775393;
	shf.l.wrap.b32 	%r4280, %r4270, %r4270, 30;
	shf.l.wrap.b32 	%r5258, %r4278, %r4278, 5;
	// begin inline asm
	lop3.b32 %r4273, %r4274, %r4280, %r4276, 150;
	// end inline asm
	xor.b32  	%r5259, %r5199, %r5238;
	xor.b32  	%r5260, %r5259, %r5162;
	xor.b32  	%r5261, %r5260, %r5151;
	shf.l.wrap.b32 	%r5262, %r5261, %r5261, 1;
	add.s32 	%r5263, %r4273, %r5262;
	add.s32 	%r5264, %r5263, %r4272;
	add.s32 	%r5265, %r5264, %r5258;
	add.s32 	%r4282, %r5265, 1859775393;
	shf.l.wrap.b32 	%r4284, %r4274, %r4274, 30;
	shf.l.wrap.b32 	%r5266, %r4282, %r4282, 5;
	// begin inline asm
	lop3.b32 %r4277, %r4278, %r4284, %r4280, 150;
	// end inline asm
	xor.b32  	%r5267, %r5206, %r5246;
	xor.b32  	%r5268, %r5267, %r5168;
	xor.b32  	%r5269, %r5268, %r5156;
	shf.l.wrap.b32 	%r5270, %r5269, %r5269, 1;
	add.s32 	%r5271, %r4277, %r5270;
	add.s32 	%r5272, %r5271, %r4276;
	add.s32 	%r5273, %r5272, %r5266;
	add.s32 	%r4286, %r5273, 1859775393;
	shf.l.wrap.b32 	%r4288, %r4278, %r4278, 30;
	shf.l.wrap.b32 	%r5274, %r4286, %r4286, 5;
	// begin inline asm
	lop3.b32 %r4281, %r4282, %r4288, %r4284, 150;
	// end inline asm
	xor.b32  	%r5275, %r5214, %r5254;
	xor.b32  	%r5276, %r5275, %r5174;
	xor.b32  	%r5277, %r5276, %r5162;
	shf.l.wrap.b32 	%r5278, %r5277, %r5277, 1;
	add.s32 	%r5279, %r4281, %r5278;
	add.s32 	%r5280, %r5279, %r4280;
	add.s32 	%r5281, %r5280, %r5274;
	add.s32 	%r4290, %r5281, 1859775393;
	shf.l.wrap.b32 	%r4292, %r4282, %r4282, 30;
	shf.l.wrap.b32 	%r5282, %r4290, %r4290, 5;
	// begin inline asm
	lop3.b32 %r4285, %r4286, %r4292, %r4288, 232;
	// end inline asm
	xor.b32  	%r5283, %r5222, %r5262;
	xor.b32  	%r5284, %r5283, %r5180;
	xor.b32  	%r5285, %r5284, %r5168;
	shf.l.wrap.b32 	%r5286, %r5285, %r5285, 1;
	add.s32 	%r5287, %r4285, %r5286;
	add.s32 	%r5288, %r5287, %r4284;
	add.s32 	%r5289, %r5288, %r5282;
	add.s32 	%r4294, %r5289, -1894007588;
	shf.l.wrap.b32 	%r4296, %r4286, %r4286, 30;
	shf.l.wrap.b32 	%r5290, %r4294, %r4294, 5;
	// begin inline asm
	lop3.b32 %r4289, %r4290, %r4296, %r4292, 232;
	// end inline asm
	xor.b32  	%r5291, %r5230, %r5270;
	xor.b32  	%r5292, %r5291, %r5186;
	xor.b32  	%r5293, %r5292, %r5174;
	shf.l.wrap.b32 	%r5294, %r5293, %r5293, 1;
	add.s32 	%r5295, %r4289, %r5294;
	add.s32 	%r5296, %r5295, %r4288;
	add.s32 	%r5297, %r5296, %r5290;
	add.s32 	%r4298, %r5297, -1894007588;
	shf.l.wrap.b32 	%r4300, %r4290, %r4290, 30;
	shf.l.wrap.b32 	%r5298, %r4298, %r4298, 5;
	// begin inline asm
	lop3.b32 %r4293, %r4294, %r4300, %r4296, 232;
	// end inline asm
	xor.b32  	%r5299, %r5238, %r5278;
	xor.b32  	%r5300, %r5299, %r5192;
	xor.b32  	%r5301, %r5300, %r5180;
	shf.l.wrap.b32 	%r5302, %r5301, %r5301, 1;
	add.s32 	%r5303, %r4293, %r5302;
	add.s32 	%r5304, %r5303, %r4292;
	add.s32 	%r5305, %r5304, %r5298;
	add.s32 	%r4302, %r5305, -1894007588;
	shf.l.wrap.b32 	%r4304, %r4294, %r4294, 30;
	shf.l.wrap.b32 	%r5306, %r4302, %r4302, 5;
	// begin inline asm
	lop3.b32 %r4297, %r4298, %r4304, %r4300, 232;
	// end inline asm
	xor.b32  	%r5307, %r5246, %r5286;
	xor.b32  	%r5308, %r5307, %r5199;
	xor.b32  	%r5309, %r5308, %r5186;
	shf.l.wrap.b32 	%r5310, %r5309, %r5309, 1;
	add.s32 	%r5311, %r4297, %r5310;
	add.s32 	%r5312, %r5311, %r4296;
	add.s32 	%r5313, %r5312, %r5306;
	add.s32 	%r4306, %r5313, -1894007588;
	shf.l.wrap.b32 	%r4308, %r4298, %r4298, 30;
	shf.l.wrap.b32 	%r5314, %r4306, %r4306, 5;
	// begin inline asm
	lop3.b32 %r4301, %r4302, %r4308, %r4304, 232;
	// end inline asm
	xor.b32  	%r5315, %r5254, %r5294;
	xor.b32  	%r5316, %r5315, %r5206;
	xor.b32  	%r5317, %r5316, %r5192;
	shf.l.wrap.b32 	%r5318, %r5317, %r5317, 1;
	add.s32 	%r5319, %r4301, %r5318;
	add.s32 	%r5320, %r5319, %r4300;
	add.s32 	%r5321, %r5320, %r5314;
	add.s32 	%r4310, %r5321, -1894007588;
	shf.l.wrap.b32 	%r4312, %r4302, %r4302, 30;
	shf.l.wrap.b32 	%r5322, %r4310, %r4310, 5;
	// begin inline asm
	lop3.b32 %r4305, %r4306, %r4312, %r4308, 232;
	// end inline asm
	xor.b32  	%r5323, %r5262, %r5302;
	xor.b32  	%r5324, %r5323, %r5214;
	xor.b32  	%r5325, %r5324, %r5199;
	shf.l.wrap.b32 	%r5326, %r5325, %r5325, 1;
	add.s32 	%r5327, %r4305, %r5326;
	add.s32 	%r5328, %r5327, %r4304;
	add.s32 	%r5329, %r5328, %r5322;
	add.s32 	%r4314, %r5329, -1894007588;
	shf.l.wrap.b32 	%r4316, %r4306, %r4306, 30;
	shf.l.wrap.b32 	%r5330, %r4314, %r4314, 5;
	// begin inline asm
	lop3.b32 %r4309, %r4310, %r4316, %r4312, 232;
	// end inline asm
	xor.b32  	%r5331, %r5270, %r5310;
	xor.b32  	%r5332, %r5331, %r5222;
	xor.b32  	%r5333, %r5332, %r5206;
	shf.l.wrap.b32 	%r5334, %r5333, %r5333, 1;
	add.s32 	%r5335, %r4309, %r5334;
	add.s32 	%r5336, %r5335, %r4308;
	add.s32 	%r5337, %r5336, %r5330;
	add.s32 	%r4318, %r5337, -1894007588;
	shf.l.wrap.b32 	%r4320, %r4310, %r4310, 30;
	shf.l.wrap.b32 	%r5338, %r4318, %r4318, 5;
	// begin inline asm
	lop3.b32 %r4313, %r4314, %r4320, %r4316, 232;
	// end inline asm
	xor.b32  	%r5339, %r5278, %r5318;
	xor.b32  	%r5340, %r5339, %r5230;
	xor.b32  	%r5341, %r5340, %r5214;
	shf.l.wrap.b32 	%r5342, %r5341, %r5341, 1;
	add.s32 	%r5343, %r4313, %r5342;
	add.s32 	%r5344, %r5343, %r4312;
	add.s32 	%r5345, %r5344, %r5338;
	add.s32 	%r4322, %r5345, -1894007588;
	shf.l.wrap.b32 	%r4324, %r4314, %r4314, 30;
	shf.l.wrap.b32 	%r5346, %r4322, %r4322, 5;
	// begin inline asm
	lop3.b32 %r4317, %r4318, %r4324, %r4320, 232;
	// end inline asm
	xor.b32  	%r5347, %r5286, %r5326;
	xor.b32  	%r5348, %r5347, %r5238;
	xor.b32  	%r5349, %r5348, %r5222;
	shf.l.wrap.b32 	%r5350, %r5349, %r5349, 1;
	add.s32 	%r5351, %r4317, %r5350;
	add.s32 	%r5352, %r5351, %r4316;
	add.s32 	%r5353, %r5352, %r5346;
	add.s32 	%r4326, %r5353, -1894007588;
	shf.l.wrap.b32 	%r4328, %r4318, %r4318, 30;
	shf.l.wrap.b32 	%r5354, %r4326, %r4326, 5;
	// begin inline asm
	lop3.b32 %r4321, %r4322, %r4328, %r4324, 232;
	// end inline asm
	xor.b32  	%r5355, %r5294, %r5334;
	xor.b32  	%r5356, %r5355, %r5246;
	xor.b32  	%r5357, %r5356, %r5230;
	shf.l.wrap.b32 	%r5358, %r5357, %r5357, 1;
	add.s32 	%r5359, %r4321, %r5358;
	add.s32 	%r5360, %r5359, %r4320;
	add.s32 	%r5361, %r5360, %r5354;
	add.s32 	%r4330, %r5361, -1894007588;
	shf.l.wrap.b32 	%r4332, %r4322, %r4322, 30;
	shf.l.wrap.b32 	%r5362, %r4330, %r4330, 5;
	// begin inline asm
	lop3.b32 %r4325, %r4326, %r4332, %r4328, 232;
	// end inline asm
	xor.b32  	%r5363, %r5302, %r5342;
	xor.b32  	%r5364, %r5363, %r5254;
	xor.b32  	%r5365, %r5364, %r5238;
	shf.l.wrap.b32 	%r5366, %r5365, %r5365, 1;
	add.s32 	%r5367, %r4325, %r5366;
	add.s32 	%r5368, %r5367, %r4324;
	add.s32 	%r5369, %r5368, %r5362;
	add.s32 	%r4334, %r5369, -1894007588;
	shf.l.wrap.b32 	%r4336, %r4326, %r4326, 30;
	shf.l.wrap.b32 	%r5370, %r4334, %r4334, 5;
	// begin inline asm
	lop3.b32 %r4329, %r4330, %r4336, %r4332, 232;
	// end inline asm
	xor.b32  	%r5371, %r5310, %r5350;
	xor.b32  	%r5372, %r5371, %r5262;
	xor.b32  	%r5373, %r5372, %r5246;
	shf.l.wrap.b32 	%r5374, %r5373, %r5373, 1;
	add.s32 	%r5375, %r4329, %r5374;
	add.s32 	%r5376, %r5375, %r4328;
	add.s32 	%r5377, %r5376, %r5370;
	add.s32 	%r4338, %r5377, -1894007588;
	shf.l.wrap.b32 	%r4340, %r4330, %r4330, 30;
	shf.l.wrap.b32 	%r5378, %r4338, %r4338, 5;
	// begin inline asm
	lop3.b32 %r4333, %r4334, %r4340, %r4336, 232;
	// end inline asm
	xor.b32  	%r5379, %r5318, %r5358;
	xor.b32  	%r5380, %r5379, %r5270;
	xor.b32  	%r5381, %r5380, %r5254;
	shf.l.wrap.b32 	%r5382, %r5381, %r5381, 1;
	add.s32 	%r5383, %r4333, %r5382;
	add.s32 	%r5384, %r5383, %r4332;
	add.s32 	%r5385, %r5384, %r5378;
	add.s32 	%r4342, %r5385, -1894007588;
	shf.l.wrap.b32 	%r4344, %r4334, %r4334, 30;
	shf.l.wrap.b32 	%r5386, %r4342, %r4342, 5;
	// begin inline asm
	lop3.b32 %r4337, %r4338, %r4344, %r4340, 232;
	// end inline asm
	xor.b32  	%r5387, %r5326, %r5366;
	xor.b32  	%r5388, %r5387, %r5278;
	xor.b32  	%r5389, %r5388, %r5262;
	shf.l.wrap.b32 	%r5390, %r5389, %r5389, 1;
	add.s32 	%r5391, %r4337, %r5390;
	add.s32 	%r5392, %r5391, %r4336;
	add.s32 	%r5393, %r5392, %r5386;
	add.s32 	%r4346, %r5393, -1894007588;
	shf.l.wrap.b32 	%r4348, %r4338, %r4338, 30;
	shf.l.wrap.b32 	%r5394, %r4346, %r4346, 5;
	// begin inline asm
	lop3.b32 %r4341, %r4342, %r4348, %r4344, 232;
	// end inline asm
	xor.b32  	%r5395, %r5334, %r5374;
	xor.b32  	%r5396, %r5395, %r5286;
	xor.b32  	%r5397, %r5396, %r5270;
	shf.l.wrap.b32 	%r5398, %r5397, %r5397, 1;
	add.s32 	%r5399, %r4341, %r5398;
	add.s32 	%r5400, %r5399, %r4340;
	add.s32 	%r5401, %r5400, %r5394;
	add.s32 	%r4350, %r5401, -1894007588;
	shf.l.wrap.b32 	%r4352, %r4342, %r4342, 30;
	shf.l.wrap.b32 	%r5402, %r4350, %r4350, 5;
	// begin inline asm
	lop3.b32 %r4345, %r4346, %r4352, %r4348, 232;
	// end inline asm
	xor.b32  	%r5403, %r5342, %r5382;
	xor.b32  	%r5404, %r5403, %r5294;
	xor.b32  	%r5405, %r5404, %r5278;
	shf.l.wrap.b32 	%r5406, %r5405, %r5405, 1;
	add.s32 	%r5407, %r4345, %r5406;
	add.s32 	%r5408, %r5407, %r4344;
	add.s32 	%r5409, %r5408, %r5402;
	add.s32 	%r4354, %r5409, -1894007588;
	shf.l.wrap.b32 	%r4356, %r4346, %r4346, 30;
	shf.l.wrap.b32 	%r5410, %r4354, %r4354, 5;
	// begin inline asm
	lop3.b32 %r4349, %r4350, %r4356, %r4352, 232;
	// end inline asm
	xor.b32  	%r5411, %r5350, %r5390;
	xor.b32  	%r5412, %r5411, %r5302;
	xor.b32  	%r5413, %r5412, %r5286;
	shf.l.wrap.b32 	%r5414, %r5413, %r5413, 1;
	add.s32 	%r5415, %r4349, %r5414;
	add.s32 	%r5416, %r5415, %r4348;
	add.s32 	%r5417, %r5416, %r5410;
	add.s32 	%r4358, %r5417, -1894007588;
	shf.l.wrap.b32 	%r4360, %r4350, %r4350, 30;
	shf.l.wrap.b32 	%r5418, %r4358, %r4358, 5;
	// begin inline asm
	lop3.b32 %r4353, %r4354, %r4360, %r4356, 232;
	// end inline asm
	xor.b32  	%r5419, %r5358, %r5398;
	xor.b32  	%r5420, %r5419, %r5310;
	xor.b32  	%r5421, %r5420, %r5294;
	shf.l.wrap.b32 	%r5422, %r5421, %r5421, 1;
	add.s32 	%r5423, %r4353, %r5422;
	add.s32 	%r5424, %r5423, %r4352;
	add.s32 	%r5425, %r5424, %r5418;
	add.s32 	%r4362, %r5425, -1894007588;
	shf.l.wrap.b32 	%r4364, %r4354, %r4354, 30;
	shf.l.wrap.b32 	%r5426, %r4362, %r4362, 5;
	// begin inline asm
	lop3.b32 %r4357, %r4358, %r4364, %r4360, 232;
	// end inline asm
	xor.b32  	%r5427, %r5366, %r5406;
	xor.b32  	%r5428, %r5427, %r5318;
	xor.b32  	%r5429, %r5428, %r5302;
	shf.l.wrap.b32 	%r5430, %r5429, %r5429, 1;
	add.s32 	%r5431, %r4357, %r5430;
	add.s32 	%r5432, %r5431, %r4356;
	add.s32 	%r5433, %r5432, %r5426;
	add.s32 	%r4366, %r5433, -1894007588;
	shf.l.wrap.b32 	%r4368, %r4358, %r4358, 30;
	shf.l.wrap.b32 	%r5434, %r4366, %r4366, 5;
	// begin inline asm
	lop3.b32 %r4361, %r4362, %r4368, %r4364, 232;
	// end inline asm
	xor.b32  	%r5435, %r5374, %r5414;
	xor.b32  	%r5436, %r5435, %r5326;
	xor.b32  	%r5437, %r5436, %r5310;
	shf.l.wrap.b32 	%r5438, %r5437, %r5437, 1;
	add.s32 	%r5439, %r4361, %r5438;
	add.s32 	%r5440, %r5439, %r4360;
	add.s32 	%r5441, %r5440, %r5434;
	add.s32 	%r4370, %r5441, -1894007588;
	shf.l.wrap.b32 	%r4372, %r4362, %r4362, 30;
	shf.l.wrap.b32 	%r5442, %r4370, %r4370, 5;
	// begin inline asm
	lop3.b32 %r4365, %r4366, %r4372, %r4368, 150;
	// end inline asm
	xor.b32  	%r5443, %r5382, %r5422;
	xor.b32  	%r5444, %r5443, %r5334;
	xor.b32  	%r5445, %r5444, %r5318;
	shf.l.wrap.b32 	%r5446, %r5445, %r5445, 1;
	add.s32 	%r5447, %r4365, %r5446;
	add.s32 	%r5448, %r5447, %r4364;
	add.s32 	%r5449, %r5448, %r5442;
	add.s32 	%r4374, %r5449, -899497514;
	shf.l.wrap.b32 	%r4376, %r4366, %r4366, 30;
	shf.l.wrap.b32 	%r5450, %r4374, %r4374, 5;
	// begin inline asm
	lop3.b32 %r4369, %r4370, %r4376, %r4372, 150;
	// end inline asm
	xor.b32  	%r5451, %r5390, %r5430;
	xor.b32  	%r5452, %r5451, %r5342;
	xor.b32  	%r5453, %r5452, %r5326;
	shf.l.wrap.b32 	%r5454, %r5453, %r5453, 1;
	add.s32 	%r5455, %r4369, %r5454;
	add.s32 	%r5456, %r5455, %r4368;
	add.s32 	%r5457, %r5456, %r5450;
	add.s32 	%r4378, %r5457, -899497514;
	shf.l.wrap.b32 	%r4380, %r4370, %r4370, 30;
	shf.l.wrap.b32 	%r5458, %r4378, %r4378, 5;
	// begin inline asm
	lop3.b32 %r4373, %r4374, %r4380, %r4376, 150;
	// end inline asm
	xor.b32  	%r5459, %r5398, %r5438;
	xor.b32  	%r5460, %r5459, %r5350;
	xor.b32  	%r5461, %r5460, %r5334;
	shf.l.wrap.b32 	%r5462, %r5461, %r5461, 1;
	add.s32 	%r5463, %r4373, %r5462;
	add.s32 	%r5464, %r5463, %r4372;
	add.s32 	%r5465, %r5464, %r5458;
	add.s32 	%r4382, %r5465, -899497514;
	shf.l.wrap.b32 	%r4384, %r4374, %r4374, 30;
	shf.l.wrap.b32 	%r5466, %r4382, %r4382, 5;
	// begin inline asm
	lop3.b32 %r4377, %r4378, %r4384, %r4380, 150;
	// end inline asm
	xor.b32  	%r5467, %r5406, %r5446;
	xor.b32  	%r5468, %r5467, %r5358;
	xor.b32  	%r5469, %r5468, %r5342;
	shf.l.wrap.b32 	%r5470, %r5469, %r5469, 1;
	add.s32 	%r5471, %r4377, %r5470;
	add.s32 	%r5472, %r5471, %r4376;
	add.s32 	%r5473, %r5472, %r5466;
	add.s32 	%r4386, %r5473, -899497514;
	shf.l.wrap.b32 	%r4388, %r4378, %r4378, 30;
	shf.l.wrap.b32 	%r5474, %r4386, %r4386, 5;
	// begin inline asm
	lop3.b32 %r4381, %r4382, %r4388, %r4384, 150;
	// end inline asm
	xor.b32  	%r5475, %r5414, %r5454;
	xor.b32  	%r5476, %r5475, %r5366;
	xor.b32  	%r5477, %r5476, %r5350;
	shf.l.wrap.b32 	%r5478, %r5477, %r5477, 1;
	add.s32 	%r5479, %r4381, %r5478;
	add.s32 	%r5480, %r5479, %r4380;
	add.s32 	%r5481, %r5480, %r5474;
	add.s32 	%r4390, %r5481, -899497514;
	shf.l.wrap.b32 	%r4392, %r4382, %r4382, 30;
	shf.l.wrap.b32 	%r5482, %r4390, %r4390, 5;
	// begin inline asm
	lop3.b32 %r4385, %r4386, %r4392, %r4388, 150;
	// end inline asm
	xor.b32  	%r5483, %r5422, %r5462;
	xor.b32  	%r5484, %r5483, %r5374;
	xor.b32  	%r5485, %r5484, %r5358;
	shf.l.wrap.b32 	%r5486, %r5485, %r5485, 1;
	add.s32 	%r5487, %r4385, %r5486;
	add.s32 	%r5488, %r5487, %r4384;
	add.s32 	%r5489, %r5488, %r5482;
	add.s32 	%r4394, %r5489, -899497514;
	shf.l.wrap.b32 	%r4396, %r4386, %r4386, 30;
	shf.l.wrap.b32 	%r5490, %r4394, %r4394, 5;
	// begin inline asm
	lop3.b32 %r4389, %r4390, %r4396, %r4392, 150;
	// end inline asm
	xor.b32  	%r5491, %r5430, %r5470;
	xor.b32  	%r5492, %r5491, %r5382;
	xor.b32  	%r5493, %r5492, %r5366;
	shf.l.wrap.b32 	%r5494, %r5493, %r5493, 1;
	add.s32 	%r5495, %r4389, %r4388;
	add.s32 	%r5496, %r5495, %r5494;
	add.s32 	%r5497, %r5496, %r5490;
	add.s32 	%r4398, %r5497, -899497514;
	shf.l.wrap.b32 	%r4400, %r4390, %r4390, 30;
	shf.l.wrap.b32 	%r5498, %r4398, %r4398, 5;
	// begin inline asm
	lop3.b32 %r4393, %r4394, %r4400, %r4396, 150;
	// end inline asm
	xor.b32  	%r5499, %r5438, %r5478;
	xor.b32  	%r5500, %r5499, %r5390;
	xor.b32  	%r5501, %r5500, %r5374;
	shf.l.wrap.b32 	%r5502, %r5501, %r5501, 1;
	add.s32 	%r5503, %r4393, %r4392;
	add.s32 	%r5504, %r5503, %r5502;
	add.s32 	%r5505, %r5504, %r5498;
	add.s32 	%r4402, %r5505, -899497514;
	shf.l.wrap.b32 	%r4404, %r4394, %r4394, 30;
	shf.l.wrap.b32 	%r5506, %r4402, %r4402, 5;
	// begin inline asm
	lop3.b32 %r4397, %r4398, %r4404, %r4400, 150;
	// end inline asm
	xor.b32  	%r5507, %r5446, %r5486;
	xor.b32  	%r5508, %r5507, %r5398;
	xor.b32  	%r5509, %r5508, %r5382;
	shf.l.wrap.b32 	%r5510, %r5509, %r5509, 1;
	add.s32 	%r5511, %r4397, %r4396;
	add.s32 	%r5512, %r5511, %r5510;
	add.s32 	%r5513, %r5512, %r5506;
	add.s32 	%r4406, %r5513, -899497514;
	shf.l.wrap.b32 	%r4408, %r4398, %r4398, 30;
	shf.l.wrap.b32 	%r5514, %r4406, %r4406, 5;
	// begin inline asm
	lop3.b32 %r4401, %r4402, %r4408, %r4404, 150;
	// end inline asm
	xor.b32  	%r5515, %r5454, %r5494;
	xor.b32  	%r5516, %r5515, %r5406;
	xor.b32  	%r5517, %r5516, %r5390;
	shf.l.wrap.b32 	%r5518, %r5517, %r5517, 1;
	add.s32 	%r5519, %r4401, %r4400;
	add.s32 	%r5520, %r5519, %r5518;
	add.s32 	%r5521, %r5520, %r5514;
	add.s32 	%r4410, %r5521, -899497514;
	shf.l.wrap.b32 	%r4412, %r4402, %r4402, 30;
	shf.l.wrap.b32 	%r5522, %r4410, %r4410, 5;
	// begin inline asm
	lop3.b32 %r4405, %r4406, %r4412, %r4408, 150;
	// end inline asm
	xor.b32  	%r5523, %r5462, %r5502;
	xor.b32  	%r5524, %r5523, %r5414;
	xor.b32  	%r5525, %r5524, %r5398;
	shf.l.wrap.b32 	%r5526, %r5525, %r5525, 1;
	add.s32 	%r5527, %r4405, %r4404;
	add.s32 	%r5528, %r5527, %r5526;
	add.s32 	%r5529, %r5528, %r5522;
	add.s32 	%r4414, %r5529, -899497514;
	shf.l.wrap.b32 	%r4416, %r4406, %r4406, 30;
	shf.l.wrap.b32 	%r5530, %r4414, %r4414, 5;
	// begin inline asm
	lop3.b32 %r4409, %r4410, %r4416, %r4412, 150;
	// end inline asm
	xor.b32  	%r5531, %r5470, %r5510;
	xor.b32  	%r5532, %r5531, %r5422;
	xor.b32  	%r5533, %r5532, %r5406;
	shf.l.wrap.b32 	%r5534, %r5533, %r5533, 1;
	add.s32 	%r5535, %r4409, %r4408;
	add.s32 	%r5536, %r5535, %r5534;
	add.s32 	%r5537, %r5536, %r5530;
	add.s32 	%r4418, %r5537, -899497514;
	shf.l.wrap.b32 	%r4420, %r4410, %r4410, 30;
	shf.l.wrap.b32 	%r5538, %r4418, %r4418, 5;
	// begin inline asm
	lop3.b32 %r4413, %r4414, %r4420, %r4416, 150;
	// end inline asm
	xor.b32  	%r5539, %r5478, %r5518;
	xor.b32  	%r5540, %r5539, %r5430;
	xor.b32  	%r5541, %r5540, %r5414;
	shf.l.wrap.b32 	%r5542, %r5541, %r5541, 1;
	add.s32 	%r5543, %r4412, %r4413;
	add.s32 	%r5544, %r5543, %r5542;
	add.s32 	%r5545, %r5544, %r5538;
	add.s32 	%r4422, %r5545, -899497514;
	shf.l.wrap.b32 	%r4424, %r4414, %r4414, 30;
	shf.l.wrap.b32 	%r5546, %r4422, %r4422, 5;
	// begin inline asm
	lop3.b32 %r4417, %r4418, %r4424, %r4420, 150;
	// end inline asm
	xor.b32  	%r5547, %r5486, %r5526;
	xor.b32  	%r5548, %r5547, %r5438;
	xor.b32  	%r5549, %r5548, %r5422;
	shf.l.wrap.b32 	%r5550, %r5549, %r5549, 1;
	add.s32 	%r5551, %r4416, %r4417;
	add.s32 	%r5552, %r5551, %r5550;
	add.s32 	%r5553, %r5552, %r5546;
	add.s32 	%r4426, %r5553, -899497514;
	shf.l.wrap.b32 	%r4428, %r4418, %r4418, 30;
	shf.l.wrap.b32 	%r5554, %r4426, %r4426, 5;
	// begin inline asm
	lop3.b32 %r4421, %r4422, %r4428, %r4424, 150;
	// end inline asm
	xor.b32  	%r5555, %r5494, %r5534;
	xor.b32  	%r5556, %r5555, %r5446;
	xor.b32  	%r5557, %r5556, %r5430;
	shf.l.wrap.b32 	%r5558, %r5557, %r5557, 1;
	add.s32 	%r5559, %r4420, %r4421;
	add.s32 	%r5560, %r5559, %r5558;
	add.s32 	%r5561, %r5560, %r5554;
	add.s32 	%r4430, %r5561, -899497514;
	shf.l.wrap.b32 	%r4432, %r4422, %r4422, 30;
	shf.l.wrap.b32 	%r5562, %r4430, %r4430, 5;
	// begin inline asm
	lop3.b32 %r4425, %r4426, %r4432, %r4428, 150;
	// end inline asm
	xor.b32  	%r5563, %r5502, %r5542;
	xor.b32  	%r5564, %r5563, %r5454;
	xor.b32  	%r5565, %r5564, %r5438;
	shf.l.wrap.b32 	%r5566, %r5565, %r5565, 1;
	add.s32 	%r5567, %r4424, %r4425;
	add.s32 	%r5568, %r5567, %r5566;
	add.s32 	%r5569, %r5568, %r5562;
	add.s32 	%r4434, %r5569, -899497514;
	shf.l.wrap.b32 	%r4436, %r4426, %r4426, 30;
	shf.l.wrap.b32 	%r5570, %r4434, %r4434, 5;
	// begin inline asm
	lop3.b32 %r4429, %r4430, %r4436, %r4432, 150;
	// end inline asm
	xor.b32  	%r5571, %r5510, %r5550;
	xor.b32  	%r5572, %r5571, %r5462;
	xor.b32  	%r5573, %r5572, %r5446;
	shf.l.wrap.b32 	%r5574, %r5573, %r5573, 1;
	add.s32 	%r5575, %r4428, %r4429;
	add.s32 	%r5576, %r5575, %r5574;
	add.s32 	%r5577, %r5576, %r5570;
	add.s32 	%r4438, %r5577, -899497514;
	shf.l.wrap.b32 	%r4440, %r4430, %r4430, 30;
	shf.l.wrap.b32 	%r5578, %r4438, %r4438, 5;
	// begin inline asm
	lop3.b32 %r4433, %r4434, %r4440, %r4436, 150;
	// end inline asm
	xor.b32  	%r5579, %r5518, %r5558;
	xor.b32  	%r5580, %r5579, %r5470;
	xor.b32  	%r5581, %r5580, %r5454;
	shf.l.wrap.b32 	%r5582, %r5581, %r5581, 1;
	add.s32 	%r5583, %r4432, %r4433;
	add.s32 	%r5584, %r5583, %r5582;
	add.s32 	%r5585, %r5584, %r5578;
	add.s32 	%r4442, %r5585, -899497514;
	shf.l.wrap.b32 	%r4444, %r4434, %r4434, 30;
	shf.l.wrap.b32 	%r5586, %r4442, %r4442, 5;
	// begin inline asm
	lop3.b32 %r4437, %r4438, %r4444, %r4440, 150;
	// end inline asm
	xor.b32  	%r5587, %r5526, %r5566;
	xor.b32  	%r5588, %r5587, %r5478;
	xor.b32  	%r5589, %r5588, %r5462;
	shf.l.wrap.b32 	%r5590, %r5589, %r5589, 1;
	add.s32 	%r5591, %r4436, %r4437;
	add.s32 	%r5592, %r5591, %r5590;
	add.s32 	%r5593, %r5592, %r5586;
	add.s32 	%r5594, %r5593, -899497514;
	shf.l.wrap.b32 	%r4443, %r4438, %r4438, 30;
	shf.l.wrap.b32 	%r5595, %r5594, %r5594, 5;
	// begin inline asm
	lop3.b32 %r4441, %r4442, %r4443, %r4444, 150;
	// end inline asm
	xor.b32  	%r5596, %r5534, %r5574;
	xor.b32  	%r5597, %r5596, %r5486;
	xor.b32  	%r5598, %r5597, %r5470;
	shf.l.wrap.b32 	%r5599, %r5598, %r5598, 1;
	shf.l.wrap.b32 	%r5600, %r4442, %r4442, 30;
	add.s32 	%r5601, %r8, %r4440;
	add.s32 	%r5602, %r5601, %r4441;
	add.s32 	%r5603, %r5602, %r5599;
	add.s32 	%r5604, %r5603, %r5595;
	add.s32 	%r5605, %r5604, -899497514;
	add.s32 	%r5606, %r5594, %r9;
	add.s32 	%r5607, %r5600, %r10;
	add.s32 	%r5608, %r4443, %r11;
	add.s32 	%r5609, %r4444, %r12;
	st.global.u32 	[%rd2+40], %r5605;
	st.global.u32 	[%rd2+44], %r5606;
	st.global.u32 	[%rd2+48], %r5607;
	st.global.u32 	[%rd2+52], %r5608;
	st.global.u32 	[%rd2+56], %r5609;
	st.global.u32 	[%rd2+-20], %r5605;
	st.global.u32 	[%rd2+-16], %r5606;
	st.global.u32 	[%rd2+-12], %r5607;
	st.global.u32 	[%rd2+-8], %r5608;
	st.global.u32 	[%rd2+-4], %r5609;
	ld.global.u32 	%r5610, [%rd5+8];
	add.s32 	%r5611, %r5610, -1;
	st.global.u32 	[%rd2+60], %r5611;
	st.global.u32 	[%rd2+64], %r4452;
	ret;

}
	// .globl	pbkdf2_loop
.entry pbkdf2_loop(
	.param .u64 .ptr .global .align 4 pbkdf2_loop_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<1815>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [pbkdf2_loop_param_0];
	mov.b32 	%r69, %envreg3;
	mov.u32 	%r70, %ctaid.x;
	mov.u32 	%r71, %ntid.x;
	mov.u32 	%r72, %tid.x;
	add.s32 	%r73, %r72, %r69;
	mad.lo.s32 	%r74, %r71, %r70, %r73;
	mul.wide.u32 	%rd3, %r74, 88;
	add.s64 	%rd4, %rd2, %rd3;
	add.s64 	%rd1, %rd4, 80;
	ld.global.u32 	%r1, [%rd4+80];
	min.u32 	%r2, %r1, 813;
	ld.global.u32 	%r1805, [%rd4];
	ld.global.u32 	%r1806, [%rd4+4];
	ld.global.u32 	%r1807, [%rd4+8];
	ld.global.u32 	%r1808, [%rd4+12];
	ld.global.u32 	%r1809, [%rd4+16];
	ld.global.u32 	%r8, [%rd4+24];
	ld.global.u32 	%r9, [%rd4+28];
	ld.global.u32 	%r10, [%rd4+32];
	ld.global.u32 	%r11, [%rd4+36];
	ld.global.u32 	%r12, [%rd4+44];
	ld.global.u32 	%r13, [%rd4+48];
	ld.global.u32 	%r14, [%rd4+52];
	ld.global.u32 	%r15, [%rd4+56];
	ld.global.u32 	%r1814, [%rd4+60];
	ld.global.u32 	%r1813, [%rd4+64];
	ld.global.u32 	%r1812, [%rd4+68];
	ld.global.u32 	%r1811, [%rd4+72];
	ld.global.u32 	%r1810, [%rd4+76];
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	$L__BB1_3;

	ld.global.u32 	%r80, [%rd1+-60];
	ld.global.u32 	%r88, [%rd1+-40];
	shf.l.wrap.b32 	%r92, %r80, %r80, 5;
	add.s32 	%r93, %r92, %r11;
	// begin inline asm
	lop3.b32 %r75, %r8, %r9, %r10, 202;
	// end inline asm
	add.s32 	%r94, %r93, %r75;
	add.s32 	%r21, %r94, 1518500249;
	shf.l.wrap.b32 	%r81, %r8, %r8, 30;
	// begin inline asm
	lop3.b32 %r79, %r80, %r81, %r9, 202;
	// end inline asm
	add.s32 	%r95, %r10, %r79;
	add.s32 	%r23, %r95, 1518500249;
	add.s32 	%r24, %r9, 1518500249;
	add.s32 	%r25, %r81, 1518500249;
	shf.l.wrap.b32 	%r26, %r80, %r80, 30;
	add.s32 	%r27, %r26, 1518500249;
	add.s32 	%r28, %r80, -899497514;
	shf.l.wrap.b32 	%r96, %r88, %r88, 5;
	add.s32 	%r97, %r96, %r15;
	// begin inline asm
	lop3.b32 %r83, %r12, %r13, %r14, 202;
	// end inline asm
	add.s32 	%r98, %r97, %r83;
	add.s32 	%r29, %r98, 1518500249;
	shf.l.wrap.b32 	%r89, %r12, %r12, 30;
	// begin inline asm
	lop3.b32 %r87, %r88, %r89, %r13, 202;
	// end inline asm
	add.s32 	%r99, %r14, %r87;
	add.s32 	%r31, %r99, 1518500249;
	add.s32 	%r32, %r13, 1518500249;
	add.s32 	%r33, %r89, 1518500249;
	shf.l.wrap.b32 	%r34, %r88, %r88, 30;
	add.s32 	%r35, %r34, 1518500249;
	add.s32 	%r36, %r88, -899497514;
	mov.u32 	%r1804, 0;

$L__BB1_2:
	add.s32 	%r101, %r21, %r1805;
	shf.l.wrap.b32 	%r724, %r101, %r101, 5;
	add.s32 	%r725, %r23, %r1806;
	add.s32 	%r105, %r725, %r724;
	shf.l.wrap.b32 	%r726, %r105, %r105, 5;
	// begin inline asm
	lop3.b32 %r100, %r101, %r26, %r81, 202;
	// end inline asm
	add.s32 	%r727, %r24, %r100;
	add.s32 	%r728, %r727, %r1807;
	add.s32 	%r109, %r728, %r726;
	shf.l.wrap.b32 	%r111, %r101, %r101, 30;
	shf.l.wrap.b32 	%r729, %r109, %r109, 5;
	// begin inline asm
	lop3.b32 %r104, %r105, %r111, %r26, 202;
	// end inline asm
	add.s32 	%r730, %r25, %r104;
	add.s32 	%r731, %r730, %r1808;
	add.s32 	%r113, %r731, %r729;
	shf.l.wrap.b32 	%r115, %r105, %r105, 30;
	shf.l.wrap.b32 	%r732, %r113, %r113, 5;
	// begin inline asm
	lop3.b32 %r108, %r109, %r115, %r111, 202;
	// end inline asm
	add.s32 	%r733, %r27, %r108;
	add.s32 	%r734, %r733, %r1809;
	add.s32 	%r117, %r734, %r732;
	shf.l.wrap.b32 	%r119, %r109, %r109, 30;
	shf.l.wrap.b32 	%r735, %r117, %r117, 5;
	// begin inline asm
	lop3.b32 %r112, %r113, %r119, %r115, 202;
	// end inline asm
	add.s32 	%r736, %r111, %r112;
	add.s32 	%r737, %r736, 1518500249;
	xor.b32  	%r738, %r737, -2147483648;
	add.s32 	%r121, %r738, %r735;
	shf.l.wrap.b32 	%r123, %r113, %r113, 30;
	shf.l.wrap.b32 	%r739, %r121, %r121, 5;
	// begin inline asm
	lop3.b32 %r116, %r117, %r123, %r119, 202;
	// end inline asm
	add.s32 	%r740, %r115, %r116;
	add.s32 	%r741, %r740, %r739;
	add.s32 	%r125, %r741, 1518500249;
	shf.l.wrap.b32 	%r127, %r117, %r117, 30;
	shf.l.wrap.b32 	%r742, %r125, %r125, 5;
	// begin inline asm
	lop3.b32 %r120, %r121, %r127, %r123, 202;
	// end inline asm
	add.s32 	%r743, %r120, %r119;
	add.s32 	%r744, %r743, %r742;
	add.s32 	%r129, %r744, 1518500249;
	shf.l.wrap.b32 	%r131, %r121, %r121, 30;
	shf.l.wrap.b32 	%r745, %r129, %r129, 5;
	// begin inline asm
	lop3.b32 %r124, %r125, %r131, %r127, 202;
	// end inline asm
	add.s32 	%r746, %r124, %r123;
	add.s32 	%r747, %r746, %r745;
	add.s32 	%r133, %r747, 1518500249;
	shf.l.wrap.b32 	%r135, %r125, %r125, 30;
	shf.l.wrap.b32 	%r748, %r133, %r133, 5;
	// begin inline asm
	lop3.b32 %r128, %r129, %r135, %r131, 202;
	// end inline asm
	add.s32 	%r749, %r128, %r127;
	add.s32 	%r750, %r749, %r748;
	add.s32 	%r137, %r750, 1518500249;
	shf.l.wrap.b32 	%r139, %r129, %r129, 30;
	shf.l.wrap.b32 	%r751, %r137, %r137, 5;
	// begin inline asm
	lop3.b32 %r132, %r133, %r139, %r135, 202;
	// end inline asm
	add.s32 	%r752, %r132, %r131;
	add.s32 	%r753, %r752, %r751;
	add.s32 	%r141, %r753, 1518500249;
	shf.l.wrap.b32 	%r143, %r133, %r133, 30;
	shf.l.wrap.b32 	%r754, %r141, %r141, 5;
	// begin inline asm
	lop3.b32 %r136, %r137, %r143, %r139, 202;
	// end inline asm
	add.s32 	%r755, %r136, %r135;
	add.s32 	%r756, %r755, %r754;
	add.s32 	%r145, %r756, 1518500249;
	shf.l.wrap.b32 	%r147, %r137, %r137, 30;
	shf.l.wrap.b32 	%r757, %r145, %r145, 5;
	// begin inline asm
	lop3.b32 %r140, %r141, %r147, %r143, 202;
	// end inline asm
	add.s32 	%r758, %r140, %r139;
	add.s32 	%r759, %r758, %r757;
	add.s32 	%r149, %r759, 1518500249;
	shf.l.wrap.b32 	%r151, %r141, %r141, 30;
	shf.l.wrap.b32 	%r760, %r149, %r149, 5;
	// begin inline asm
	lop3.b32 %r144, %r145, %r151, %r147, 202;
	// end inline asm
	add.s32 	%r761, %r144, %r143;
	add.s32 	%r762, %r761, %r760;
	add.s32 	%r153, %r762, 1518500249;
	shf.l.wrap.b32 	%r155, %r145, %r145, 30;
	shf.l.wrap.b32 	%r763, %r153, %r153, 5;
	// begin inline asm
	lop3.b32 %r148, %r149, %r155, %r151, 202;
	// end inline asm
	add.s32 	%r764, %r148, %r147;
	add.s32 	%r765, %r764, %r763;
	add.s32 	%r157, %r765, 1518500249;
	shf.l.wrap.b32 	%r159, %r149, %r149, 30;
	shf.l.wrap.b32 	%r766, %r157, %r157, 5;
	// begin inline asm
	lop3.b32 %r152, %r153, %r159, %r155, 202;
	// end inline asm
	add.s32 	%r767, %r152, %r151;
	add.s32 	%r768, %r767, %r766;
	add.s32 	%r161, %r768, 1518500921;
	shf.l.wrap.b32 	%r163, %r153, %r153, 30;
	shf.l.wrap.b32 	%r769, %r161, %r161, 5;
	// begin inline asm
	lop3.b32 %r156, %r157, %r163, %r159, 202;
	// end inline asm
	xor.b32  	%r770, %r1805, %r1807;
	shf.l.wrap.b32 	%r771, %r770, %r770, 1;
	add.s32 	%r772, %r156, %r771;
	add.s32 	%r773, %r772, %r155;
	add.s32 	%r774, %r773, %r769;
	add.s32 	%r165, %r774, 1518500249;
	shf.l.wrap.b32 	%r167, %r157, %r157, 30;
	shf.l.wrap.b32 	%r775, %r165, %r165, 5;
	// begin inline asm
	lop3.b32 %r160, %r161, %r167, %r163, 202;
	// end inline asm
	xor.b32  	%r776, %r1806, %r1808;
	shf.l.wrap.b32 	%r777, %r776, %r776, 1;
	add.s32 	%r778, %r160, %r777;
	add.s32 	%r779, %r778, %r159;
	add.s32 	%r780, %r779, %r775;
	add.s32 	%r169, %r780, 1518500249;
	shf.l.wrap.b32 	%r171, %r161, %r161, 30;
	shf.l.wrap.b32 	%r781, %r169, %r169, 5;
	// begin inline asm
	lop3.b32 %r164, %r165, %r171, %r167, 202;
	// end inline asm
	xor.b32  	%r782, %r1809, %r1807;
	xor.b32  	%r783, %r782, 672;
	shf.l.wrap.b32 	%r784, %r783, %r783, 1;
	add.s32 	%r785, %r164, %r784;
	add.s32 	%r786, %r785, %r163;
	add.s32 	%r787, %r786, %r781;
	add.s32 	%r173, %r787, 1518500249;
	shf.l.wrap.b32 	%r175, %r165, %r165, 30;
	shf.l.wrap.b32 	%r788, %r173, %r173, 5;
	// begin inline asm
	lop3.b32 %r168, %r169, %r175, %r171, 202;
	// end inline asm
	xor.b32  	%r789, %r771, %r1808;
	xor.b32  	%r790, %r789, -2147483648;
	shf.l.wrap.b32 	%r791, %r790, %r790, 1;
	add.s32 	%r792, %r168, %r791;
	add.s32 	%r793, %r792, %r167;
	add.s32 	%r794, %r793, %r788;
	add.s32 	%r177, %r794, 1518500249;
	shf.l.wrap.b32 	%r179, %r169, %r169, 30;
	shf.l.wrap.b32 	%r795, %r177, %r177, 5;
	// begin inline asm
	lop3.b32 %r172, %r173, %r179, %r175, 150;
	// end inline asm
	xor.b32  	%r796, %r1809, %r777;
	shf.l.wrap.b32 	%r797, %r796, %r796, 1;
	add.s32 	%r798, %r172, %r797;
	add.s32 	%r799, %r798, %r171;
	add.s32 	%r800, %r799, %r795;
	add.s32 	%r181, %r800, 1859775393;
	shf.l.wrap.b32 	%r183, %r173, %r173, 30;
	shf.l.wrap.b32 	%r801, %r181, %r181, 5;
	// begin inline asm
	lop3.b32 %r176, %r177, %r183, %r179, 150;
	// end inline asm
	xor.b32  	%r802, %r784, -2147483648;
	shf.l.wrap.b32 	%r803, %r802, %r802, 1;
	add.s32 	%r804, %r176, %r803;
	add.s32 	%r805, %r804, %r175;
	add.s32 	%r806, %r805, %r801;
	add.s32 	%r185, %r806, 1859775393;
	shf.l.wrap.b32 	%r187, %r177, %r177, 30;
	shf.l.wrap.b32 	%r807, %r185, %r185, 5;
	// begin inline asm
	lop3.b32 %r180, %r181, %r187, %r183, 150;
	// end inline asm
	shf.l.wrap.b32 	%r808, %r791, %r791, 1;
	add.s32 	%r809, %r180, %r808;
	add.s32 	%r810, %r809, %r179;
	add.s32 	%r811, %r810, %r807;
	add.s32 	%r189, %r811, 1859775393;
	shf.l.wrap.b32 	%r191, %r181, %r181, 30;
	shf.l.wrap.b32 	%r812, %r189, %r189, 5;
	// begin inline asm
	lop3.b32 %r184, %r185, %r191, %r187, 150;
	// end inline asm
	xor.b32  	%r813, %r797, 672;
	shf.l.wrap.b32 	%r814, %r813, %r813, 1;
	add.s32 	%r815, %r184, %r814;
	add.s32 	%r816, %r815, %r183;
	add.s32 	%r817, %r816, %r812;
	add.s32 	%r193, %r817, 1859775393;
	shf.l.wrap.b32 	%r195, %r185, %r185, 30;
	shf.l.wrap.b32 	%r818, %r193, %r193, 5;
	// begin inline asm
	lop3.b32 %r188, %r189, %r195, %r191, 150;
	// end inline asm
	xor.b32  	%r819, %r771, %r803;
	shf.l.wrap.b32 	%r820, %r819, %r819, 1;
	add.s32 	%r821, %r188, %r820;
	add.s32 	%r822, %r821, %r187;
	add.s32 	%r823, %r822, %r818;
	add.s32 	%r197, %r823, 1859775393;
	shf.l.wrap.b32 	%r199, %r189, %r189, 30;
	shf.l.wrap.b32 	%r824, %r197, %r197, 5;
	// begin inline asm
	lop3.b32 %r192, %r193, %r199, %r195, 150;
	// end inline asm
	xor.b32  	%r825, %r777, %r808;
	shf.l.wrap.b32 	%r826, %r825, %r825, 1;
	add.s32 	%r827, %r192, %r826;
	add.s32 	%r828, %r827, %r191;
	add.s32 	%r829, %r828, %r824;
	add.s32 	%r201, %r829, 1859775393;
	shf.l.wrap.b32 	%r203, %r193, %r193, 30;
	shf.l.wrap.b32 	%r830, %r201, %r201, 5;
	// begin inline asm
	lop3.b32 %r196, %r197, %r203, %r199, 150;
	// end inline asm
	xor.b32  	%r831, %r784, %r814;
	shf.l.wrap.b32 	%r832, %r831, %r831, 1;
	add.s32 	%r833, %r196, %r832;
	add.s32 	%r834, %r833, %r195;
	add.s32 	%r835, %r834, %r830;
	add.s32 	%r205, %r835, 1859775393;
	shf.l.wrap.b32 	%r207, %r197, %r197, 30;
	shf.l.wrap.b32 	%r836, %r205, %r205, 5;
	// begin inline asm
	lop3.b32 %r200, %r201, %r207, %r203, 150;
	// end inline asm
	xor.b32  	%r837, %r791, %r820;
	shf.l.wrap.b32 	%r838, %r837, %r837, 1;
	add.s32 	%r839, %r200, %r838;
	add.s32 	%r840, %r839, %r199;
	add.s32 	%r841, %r840, %r836;
	add.s32 	%r209, %r841, 1859775393;
	shf.l.wrap.b32 	%r211, %r201, %r201, 30;
	shf.l.wrap.b32 	%r842, %r209, %r209, 5;
	// begin inline asm
	lop3.b32 %r204, %r205, %r211, %r207, 150;
	// end inline asm
	xor.b32  	%r843, %r797, %r826;
	shf.l.wrap.b32 	%r844, %r843, %r843, 1;
	add.s32 	%r845, %r204, %r844;
	add.s32 	%r846, %r845, %r203;
	add.s32 	%r847, %r846, %r842;
	add.s32 	%r213, %r847, 1859775393;
	shf.l.wrap.b32 	%r215, %r205, %r205, 30;
	shf.l.wrap.b32 	%r848, %r213, %r213, 5;
	// begin inline asm
	lop3.b32 %r208, %r209, %r215, %r211, 150;
	// end inline asm
	xor.b32  	%r849, %r803, %r832;
	xor.b32  	%r850, %r849, 672;
	shf.l.wrap.b32 	%r851, %r850, %r850, 1;
	add.s32 	%r852, %r208, %r851;
	add.s32 	%r853, %r852, %r207;
	add.s32 	%r854, %r853, %r848;
	add.s32 	%r217, %r854, 1859775393;
	shf.l.wrap.b32 	%r219, %r209, %r209, 30;
	shf.l.wrap.b32 	%r855, %r217, %r217, 5;
	// begin inline asm
	lop3.b32 %r212, %r213, %r219, %r215, 150;
	// end inline asm
	xor.b32  	%r856, %r808, %r838;
	xor.b32  	%r857, %r856, %r771;
	shf.l.wrap.b32 	%r858, %r857, %r857, 1;
	add.s32 	%r859, %r212, %r858;
	add.s32 	%r860, %r859, %r211;
	add.s32 	%r861, %r860, %r855;
	add.s32 	%r221, %r861, 1859775393;
	shf.l.wrap.b32 	%r223, %r213, %r213, 30;
	shf.l.wrap.b32 	%r862, %r221, %r221, 5;
	// begin inline asm
	lop3.b32 %r216, %r217, %r223, %r219, 150;
	// end inline asm
	xor.b32  	%r863, %r814, %r844;
	xor.b32  	%r864, %r863, %r777;
	xor.b32  	%r865, %r864, 672;
	shf.l.wrap.b32 	%r866, %r865, %r865, 1;
	add.s32 	%r867, %r216, %r866;
	add.s32 	%r868, %r867, %r215;
	add.s32 	%r869, %r868, %r862;
	add.s32 	%r225, %r869, 1859775393;
	shf.l.wrap.b32 	%r227, %r217, %r217, 30;
	shf.l.wrap.b32 	%r870, %r225, %r225, 5;
	// begin inline asm
	lop3.b32 %r220, %r221, %r227, %r223, 150;
	// end inline asm
	xor.b32  	%r871, %r820, %r851;
	xor.b32  	%r872, %r871, %r784;
	xor.b32  	%r873, %r872, %r771;
	shf.l.wrap.b32 	%r874, %r873, %r873, 1;
	add.s32 	%r875, %r220, %r874;
	add.s32 	%r876, %r875, %r219;
	add.s32 	%r877, %r876, %r870;
	add.s32 	%r229, %r877, 1859775393;
	shf.l.wrap.b32 	%r231, %r221, %r221, 30;
	shf.l.wrap.b32 	%r878, %r229, %r229, 5;
	// begin inline asm
	lop3.b32 %r224, %r225, %r231, %r227, 150;
	// end inline asm
	xor.b32  	%r879, %r826, %r858;
	xor.b32  	%r880, %r879, %r791;
	xor.b32  	%r881, %r880, %r777;
	shf.l.wrap.b32 	%r882, %r881, %r881, 1;
	add.s32 	%r883, %r224, %r882;
	add.s32 	%r884, %r883, %r223;
	add.s32 	%r885, %r884, %r878;
	add.s32 	%r233, %r885, 1859775393;
	shf.l.wrap.b32 	%r235, %r225, %r225, 30;
	shf.l.wrap.b32 	%r886, %r233, %r233, 5;
	// begin inline asm
	lop3.b32 %r228, %r229, %r235, %r231, 150;
	// end inline asm
	xor.b32  	%r887, %r832, %r866;
	xor.b32  	%r888, %r887, %r797;
	xor.b32  	%r889, %r888, %r784;
	shf.l.wrap.b32 	%r890, %r889, %r889, 1;
	add.s32 	%r891, %r228, %r890;
	add.s32 	%r892, %r891, %r227;
	add.s32 	%r893, %r892, %r886;
	add.s32 	%r237, %r893, 1859775393;
	shf.l.wrap.b32 	%r239, %r229, %r229, 30;
	shf.l.wrap.b32 	%r894, %r237, %r237, 5;
	// begin inline asm
	lop3.b32 %r232, %r233, %r239, %r235, 150;
	// end inline asm
	xor.b32  	%r895, %r838, %r874;
	xor.b32  	%r896, %r895, %r803;
	xor.b32  	%r897, %r896, %r791;
	shf.l.wrap.b32 	%r898, %r897, %r897, 1;
	add.s32 	%r899, %r232, %r898;
	add.s32 	%r900, %r899, %r231;
	add.s32 	%r901, %r900, %r894;
	add.s32 	%r241, %r901, 1859775393;
	shf.l.wrap.b32 	%r243, %r233, %r233, 30;
	shf.l.wrap.b32 	%r902, %r241, %r241, 5;
	// begin inline asm
	lop3.b32 %r236, %r237, %r243, %r239, 150;
	// end inline asm
	xor.b32  	%r903, %r844, %r882;
	xor.b32  	%r904, %r903, %r808;
	xor.b32  	%r905, %r904, %r797;
	shf.l.wrap.b32 	%r906, %r905, %r905, 1;
	add.s32 	%r907, %r236, %r906;
	add.s32 	%r908, %r907, %r235;
	add.s32 	%r909, %r908, %r902;
	add.s32 	%r245, %r909, 1859775393;
	shf.l.wrap.b32 	%r247, %r237, %r237, 30;
	shf.l.wrap.b32 	%r910, %r245, %r245, 5;
	// begin inline asm
	lop3.b32 %r240, %r241, %r247, %r243, 150;
	// end inline asm
	xor.b32  	%r911, %r851, %r890;
	xor.b32  	%r912, %r911, %r814;
	xor.b32  	%r913, %r912, %r803;
	shf.l.wrap.b32 	%r914, %r913, %r913, 1;
	add.s32 	%r915, %r240, %r914;
	add.s32 	%r916, %r915, %r239;
	add.s32 	%r917, %r916, %r910;
	add.s32 	%r249, %r917, 1859775393;
	shf.l.wrap.b32 	%r251, %r241, %r241, 30;
	shf.l.wrap.b32 	%r918, %r249, %r249, 5;
	// begin inline asm
	lop3.b32 %r244, %r245, %r251, %r247, 150;
	// end inline asm
	xor.b32  	%r919, %r858, %r898;
	xor.b32  	%r920, %r919, %r820;
	xor.b32  	%r921, %r920, %r808;
	shf.l.wrap.b32 	%r922, %r921, %r921, 1;
	add.s32 	%r923, %r244, %r922;
	add.s32 	%r924, %r923, %r243;
	add.s32 	%r925, %r924, %r918;
	add.s32 	%r253, %r925, 1859775393;
	shf.l.wrap.b32 	%r255, %r245, %r245, 30;
	shf.l.wrap.b32 	%r926, %r253, %r253, 5;
	// begin inline asm
	lop3.b32 %r248, %r249, %r255, %r251, 150;
	// end inline asm
	xor.b32  	%r927, %r866, %r906;
	xor.b32  	%r928, %r927, %r826;
	xor.b32  	%r929, %r928, %r814;
	shf.l.wrap.b32 	%r930, %r929, %r929, 1;
	add.s32 	%r931, %r248, %r930;
	add.s32 	%r932, %r931, %r247;
	add.s32 	%r933, %r932, %r926;
	add.s32 	%r257, %r933, 1859775393;
	shf.l.wrap.b32 	%r259, %r249, %r249, 30;
	shf.l.wrap.b32 	%r934, %r257, %r257, 5;
	// begin inline asm
	lop3.b32 %r252, %r253, %r259, %r255, 232;
	// end inline asm
	xor.b32  	%r935, %r874, %r914;
	xor.b32  	%r936, %r935, %r832;
	xor.b32  	%r937, %r936, %r820;
	shf.l.wrap.b32 	%r938, %r937, %r937, 1;
	add.s32 	%r939, %r252, %r938;
	add.s32 	%r940, %r939, %r251;
	add.s32 	%r941, %r940, %r934;
	add.s32 	%r261, %r941, -1894007588;
	shf.l.wrap.b32 	%r263, %r253, %r253, 30;
	shf.l.wrap.b32 	%r942, %r261, %r261, 5;
	// begin inline asm
	lop3.b32 %r256, %r257, %r263, %r259, 232;
	// end inline asm
	xor.b32  	%r943, %r882, %r922;
	xor.b32  	%r944, %r943, %r838;
	xor.b32  	%r945, %r944, %r826;
	shf.l.wrap.b32 	%r946, %r945, %r945, 1;
	add.s32 	%r947, %r256, %r946;
	add.s32 	%r948, %r947, %r255;
	add.s32 	%r949, %r948, %r942;
	add.s32 	%r265, %r949, -1894007588;
	shf.l.wrap.b32 	%r267, %r257, %r257, 30;
	shf.l.wrap.b32 	%r950, %r265, %r265, 5;
	// begin inline asm
	lop3.b32 %r260, %r261, %r267, %r263, 232;
	// end inline asm
	xor.b32  	%r951, %r890, %r930;
	xor.b32  	%r952, %r951, %r844;
	xor.b32  	%r953, %r952, %r832;
	shf.l.wrap.b32 	%r954, %r953, %r953, 1;
	add.s32 	%r955, %r260, %r954;
	add.s32 	%r956, %r955, %r259;
	add.s32 	%r957, %r956, %r950;
	add.s32 	%r269, %r957, -1894007588;
	shf.l.wrap.b32 	%r271, %r261, %r261, 30;
	shf.l.wrap.b32 	%r958, %r269, %r269, 5;
	// begin inline asm
	lop3.b32 %r264, %r265, %r271, %r267, 232;
	// end inline asm
	xor.b32  	%r959, %r898, %r938;
	xor.b32  	%r960, %r959, %r851;
	xor.b32  	%r961, %r960, %r838;
	shf.l.wrap.b32 	%r962, %r961, %r961, 1;
	add.s32 	%r963, %r264, %r962;
	add.s32 	%r964, %r963, %r263;
	add.s32 	%r965, %r964, %r958;
	add.s32 	%r273, %r965, -1894007588;
	shf.l.wrap.b32 	%r275, %r265, %r265, 30;
	shf.l.wrap.b32 	%r966, %r273, %r273, 5;
	// begin inline asm
	lop3.b32 %r268, %r269, %r275, %r271, 232;
	// end inline asm
	xor.b32  	%r967, %r906, %r946;
	xor.b32  	%r968, %r967, %r858;
	xor.b32  	%r969, %r968, %r844;
	shf.l.wrap.b32 	%r970, %r969, %r969, 1;
	add.s32 	%r971, %r268, %r970;
	add.s32 	%r972, %r971, %r267;
	add.s32 	%r973, %r972, %r966;
	add.s32 	%r277, %r973, -1894007588;
	shf.l.wrap.b32 	%r279, %r269, %r269, 30;
	shf.l.wrap.b32 	%r974, %r277, %r277, 5;
	// begin inline asm
	lop3.b32 %r272, %r273, %r279, %r275, 232;
	// end inline asm
	xor.b32  	%r975, %r914, %r954;
	xor.b32  	%r976, %r975, %r866;
	xor.b32  	%r977, %r976, %r851;
	shf.l.wrap.b32 	%r978, %r977, %r977, 1;
	add.s32 	%r979, %r272, %r978;
	add.s32 	%r980, %r979, %r271;
	add.s32 	%r981, %r980, %r974;
	add.s32 	%r281, %r981, -1894007588;
	shf.l.wrap.b32 	%r283, %r273, %r273, 30;
	shf.l.wrap.b32 	%r982, %r281, %r281, 5;
	// begin inline asm
	lop3.b32 %r276, %r277, %r283, %r279, 232;
	// end inline asm
	xor.b32  	%r983, %r922, %r962;
	xor.b32  	%r984, %r983, %r874;
	xor.b32  	%r985, %r984, %r858;
	shf.l.wrap.b32 	%r986, %r985, %r985, 1;
	add.s32 	%r987, %r276, %r986;
	add.s32 	%r988, %r987, %r275;
	add.s32 	%r989, %r988, %r982;
	add.s32 	%r285, %r989, -1894007588;
	shf.l.wrap.b32 	%r287, %r277, %r277, 30;
	shf.l.wrap.b32 	%r990, %r285, %r285, 5;
	// begin inline asm
	lop3.b32 %r280, %r281, %r287, %r283, 232;
	// end inline asm
	xor.b32  	%r991, %r930, %r970;
	xor.b32  	%r992, %r991, %r882;
	xor.b32  	%r993, %r992, %r866;
	shf.l.wrap.b32 	%r994, %r993, %r993, 1;
	add.s32 	%r995, %r280, %r994;
	add.s32 	%r996, %r995, %r279;
	add.s32 	%r997, %r996, %r990;
	add.s32 	%r289, %r997, -1894007588;
	shf.l.wrap.b32 	%r291, %r281, %r281, 30;
	shf.l.wrap.b32 	%r998, %r289, %r289, 5;
	// begin inline asm
	lop3.b32 %r284, %r285, %r291, %r287, 232;
	// end inline asm
	xor.b32  	%r999, %r938, %r978;
	xor.b32  	%r1000, %r999, %r890;
	xor.b32  	%r1001, %r1000, %r874;
	shf.l.wrap.b32 	%r1002, %r1001, %r1001, 1;
	add.s32 	%r1003, %r284, %r1002;
	add.s32 	%r1004, %r1003, %r283;
	add.s32 	%r1005, %r1004, %r998;
	add.s32 	%r293, %r1005, -1894007588;
	shf.l.wrap.b32 	%r295, %r285, %r285, 30;
	shf.l.wrap.b32 	%r1006, %r293, %r293, 5;
	// begin inline asm
	lop3.b32 %r288, %r289, %r295, %r291, 232;
	// end inline asm
	xor.b32  	%r1007, %r946, %r986;
	xor.b32  	%r1008, %r1007, %r898;
	xor.b32  	%r1009, %r1008, %r882;
	shf.l.wrap.b32 	%r1010, %r1009, %r1009, 1;
	add.s32 	%r1011, %r288, %r1010;
	add.s32 	%r1012, %r1011, %r287;
	add.s32 	%r1013, %r1012, %r1006;
	add.s32 	%r297, %r1013, -1894007588;
	shf.l.wrap.b32 	%r299, %r289, %r289, 30;
	shf.l.wrap.b32 	%r1014, %r297, %r297, 5;
	// begin inline asm
	lop3.b32 %r292, %r293, %r299, %r295, 232;
	// end inline asm
	xor.b32  	%r1015, %r954, %r994;
	xor.b32  	%r1016, %r1015, %r906;
	xor.b32  	%r1017, %r1016, %r890;
	shf.l.wrap.b32 	%r1018, %r1017, %r1017, 1;
	add.s32 	%r1019, %r292, %r1018;
	add.s32 	%r1020, %r1019, %r291;
	add.s32 	%r1021, %r1020, %r1014;
	add.s32 	%r301, %r1021, -1894007588;
	shf.l.wrap.b32 	%r303, %r293, %r293, 30;
	shf.l.wrap.b32 	%r1022, %r301, %r301, 5;
	// begin inline asm
	lop3.b32 %r296, %r297, %r303, %r299, 232;
	// end inline asm
	xor.b32  	%r1023, %r962, %r1002;
	xor.b32  	%r1024, %r1023, %r914;
	xor.b32  	%r1025, %r1024, %r898;
	shf.l.wrap.b32 	%r1026, %r1025, %r1025, 1;
	add.s32 	%r1027, %r296, %r1026;
	add.s32 	%r1028, %r1027, %r295;
	add.s32 	%r1029, %r1028, %r1022;
	add.s32 	%r305, %r1029, -1894007588;
	shf.l.wrap.b32 	%r307, %r297, %r297, 30;
	shf.l.wrap.b32 	%r1030, %r305, %r305, 5;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 232;
	// end inline asm
	xor.b32  	%r1031, %r970, %r1010;
	xor.b32  	%r1032, %r1031, %r922;
	xor.b32  	%r1033, %r1032, %r906;
	shf.l.wrap.b32 	%r1034, %r1033, %r1033, 1;
	add.s32 	%r1035, %r300, %r1034;
	add.s32 	%r1036, %r1035, %r299;
	add.s32 	%r1037, %r1036, %r1030;
	add.s32 	%r309, %r1037, -1894007588;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	shf.l.wrap.b32 	%r1038, %r309, %r309, 5;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 232;
	// end inline asm
	xor.b32  	%r1039, %r978, %r1018;
	xor.b32  	%r1040, %r1039, %r930;
	xor.b32  	%r1041, %r1040, %r914;
	shf.l.wrap.b32 	%r1042, %r1041, %r1041, 1;
	add.s32 	%r1043, %r304, %r1042;
	add.s32 	%r1044, %r1043, %r303;
	add.s32 	%r1045, %r1044, %r1038;
	add.s32 	%r313, %r1045, -1894007588;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	shf.l.wrap.b32 	%r1046, %r313, %r313, 5;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 232;
	// end inline asm
	xor.b32  	%r1047, %r986, %r1026;
	xor.b32  	%r1048, %r1047, %r938;
	xor.b32  	%r1049, %r1048, %r922;
	shf.l.wrap.b32 	%r1050, %r1049, %r1049, 1;
	add.s32 	%r1051, %r308, %r1050;
	add.s32 	%r1052, %r1051, %r307;
	add.s32 	%r1053, %r1052, %r1046;
	add.s32 	%r317, %r1053, -1894007588;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r1054, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 232;
	// end inline asm
	xor.b32  	%r1055, %r994, %r1034;
	xor.b32  	%r1056, %r1055, %r946;
	xor.b32  	%r1057, %r1056, %r930;
	shf.l.wrap.b32 	%r1058, %r1057, %r1057, 1;
	add.s32 	%r1059, %r312, %r1058;
	add.s32 	%r1060, %r1059, %r311;
	add.s32 	%r1061, %r1060, %r1054;
	add.s32 	%r321, %r1061, -1894007588;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r1062, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 232;
	// end inline asm
	xor.b32  	%r1063, %r1002, %r1042;
	xor.b32  	%r1064, %r1063, %r954;
	xor.b32  	%r1065, %r1064, %r938;
	shf.l.wrap.b32 	%r1066, %r1065, %r1065, 1;
	add.s32 	%r1067, %r316, %r1066;
	add.s32 	%r1068, %r1067, %r315;
	add.s32 	%r1069, %r1068, %r1062;
	add.s32 	%r325, %r1069, -1894007588;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r1070, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 232;
	// end inline asm
	xor.b32  	%r1071, %r1010, %r1050;
	xor.b32  	%r1072, %r1071, %r962;
	xor.b32  	%r1073, %r1072, %r946;
	shf.l.wrap.b32 	%r1074, %r1073, %r1073, 1;
	add.s32 	%r1075, %r320, %r1074;
	add.s32 	%r1076, %r1075, %r319;
	add.s32 	%r1077, %r1076, %r1070;
	add.s32 	%r329, %r1077, -1894007588;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r1078, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 232;
	// end inline asm
	xor.b32  	%r1079, %r1018, %r1058;
	xor.b32  	%r1080, %r1079, %r970;
	xor.b32  	%r1081, %r1080, %r954;
	shf.l.wrap.b32 	%r1082, %r1081, %r1081, 1;
	add.s32 	%r1083, %r324, %r1082;
	add.s32 	%r1084, %r1083, %r323;
	add.s32 	%r1085, %r1084, %r1078;
	add.s32 	%r333, %r1085, -1894007588;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r1086, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 232;
	// end inline asm
	xor.b32  	%r1087, %r1026, %r1066;
	xor.b32  	%r1088, %r1087, %r978;
	xor.b32  	%r1089, %r1088, %r962;
	shf.l.wrap.b32 	%r1090, %r1089, %r1089, 1;
	add.s32 	%r1091, %r328, %r1090;
	add.s32 	%r1092, %r1091, %r327;
	add.s32 	%r1093, %r1092, %r1086;
	add.s32 	%r337, %r1093, -1894007588;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r1094, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 150;
	// end inline asm
	xor.b32  	%r1095, %r1034, %r1074;
	xor.b32  	%r1096, %r1095, %r986;
	xor.b32  	%r1097, %r1096, %r970;
	shf.l.wrap.b32 	%r1098, %r1097, %r1097, 1;
	add.s32 	%r1099, %r332, %r1098;
	add.s32 	%r1100, %r1099, %r331;
	add.s32 	%r1101, %r1100, %r1094;
	add.s32 	%r341, %r1101, -899497514;
	shf.l.wrap.b32 	%r343, %r333, %r333, 30;
	shf.l.wrap.b32 	%r1102, %r341, %r341, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r343, %r339, 150;
	// end inline asm
	xor.b32  	%r1103, %r1042, %r1082;
	xor.b32  	%r1104, %r1103, %r994;
	xor.b32  	%r1105, %r1104, %r978;
	shf.l.wrap.b32 	%r1106, %r1105, %r1105, 1;
	add.s32 	%r1107, %r336, %r1106;
	add.s32 	%r1108, %r1107, %r335;
	add.s32 	%r1109, %r1108, %r1102;
	add.s32 	%r345, %r1109, -899497514;
	shf.l.wrap.b32 	%r347, %r337, %r337, 30;
	shf.l.wrap.b32 	%r1110, %r345, %r345, 5;
	// begin inline asm
	lop3.b32 %r340, %r341, %r347, %r343, 150;
	// end inline asm
	xor.b32  	%r1111, %r1050, %r1090;
	xor.b32  	%r1112, %r1111, %r1002;
	xor.b32  	%r1113, %r1112, %r986;
	shf.l.wrap.b32 	%r1114, %r1113, %r1113, 1;
	add.s32 	%r1115, %r340, %r1114;
	add.s32 	%r1116, %r1115, %r339;
	add.s32 	%r1117, %r1116, %r1110;
	add.s32 	%r349, %r1117, -899497514;
	shf.l.wrap.b32 	%r351, %r341, %r341, 30;
	shf.l.wrap.b32 	%r1118, %r349, %r349, 5;
	// begin inline asm
	lop3.b32 %r344, %r345, %r351, %r347, 150;
	// end inline asm
	xor.b32  	%r1119, %r1058, %r1098;
	xor.b32  	%r1120, %r1119, %r1010;
	xor.b32  	%r1121, %r1120, %r994;
	shf.l.wrap.b32 	%r1122, %r1121, %r1121, 1;
	add.s32 	%r1123, %r344, %r1122;
	add.s32 	%r1124, %r1123, %r343;
	add.s32 	%r1125, %r1124, %r1118;
	add.s32 	%r353, %r1125, -899497514;
	shf.l.wrap.b32 	%r355, %r345, %r345, 30;
	shf.l.wrap.b32 	%r1126, %r353, %r353, 5;
	// begin inline asm
	lop3.b32 %r348, %r349, %r355, %r351, 150;
	// end inline asm
	xor.b32  	%r1127, %r1066, %r1106;
	xor.b32  	%r1128, %r1127, %r1018;
	xor.b32  	%r1129, %r1128, %r1002;
	shf.l.wrap.b32 	%r1130, %r1129, %r1129, 1;
	add.s32 	%r1131, %r348, %r1130;
	add.s32 	%r1132, %r1131, %r347;
	add.s32 	%r1133, %r1132, %r1126;
	add.s32 	%r357, %r1133, -899497514;
	shf.l.wrap.b32 	%r359, %r349, %r349, 30;
	shf.l.wrap.b32 	%r1134, %r357, %r357, 5;
	// begin inline asm
	lop3.b32 %r352, %r353, %r359, %r355, 150;
	// end inline asm
	xor.b32  	%r1135, %r1074, %r1114;
	xor.b32  	%r1136, %r1135, %r1026;
	xor.b32  	%r1137, %r1136, %r1010;
	shf.l.wrap.b32 	%r1138, %r1137, %r1137, 1;
	add.s32 	%r1139, %r352, %r1138;
	add.s32 	%r1140, %r1139, %r351;
	add.s32 	%r1141, %r1140, %r1134;
	add.s32 	%r361, %r1141, -899497514;
	shf.l.wrap.b32 	%r363, %r353, %r353, 30;
	shf.l.wrap.b32 	%r1142, %r361, %r361, 5;
	// begin inline asm
	lop3.b32 %r356, %r357, %r363, %r359, 150;
	// end inline asm
	xor.b32  	%r1143, %r1082, %r1122;
	xor.b32  	%r1144, %r1143, %r1034;
	xor.b32  	%r1145, %r1144, %r1018;
	shf.l.wrap.b32 	%r1146, %r1145, %r1145, 1;
	add.s32 	%r1147, %r356, %r355;
	add.s32 	%r1148, %r1147, %r1146;
	add.s32 	%r1149, %r1148, %r1142;
	add.s32 	%r365, %r1149, -899497514;
	shf.l.wrap.b32 	%r367, %r357, %r357, 30;
	shf.l.wrap.b32 	%r1150, %r365, %r365, 5;
	// begin inline asm
	lop3.b32 %r360, %r361, %r367, %r363, 150;
	// end inline asm
	xor.b32  	%r1151, %r1090, %r1130;
	xor.b32  	%r1152, %r1151, %r1042;
	xor.b32  	%r1153, %r1152, %r1026;
	shf.l.wrap.b32 	%r1154, %r1153, %r1153, 1;
	add.s32 	%r1155, %r360, %r359;
	add.s32 	%r1156, %r1155, %r1154;
	add.s32 	%r1157, %r1156, %r1150;
	add.s32 	%r369, %r1157, -899497514;
	shf.l.wrap.b32 	%r371, %r361, %r361, 30;
	shf.l.wrap.b32 	%r1158, %r369, %r369, 5;
	// begin inline asm
	lop3.b32 %r364, %r365, %r371, %r367, 150;
	// end inline asm
	xor.b32  	%r1159, %r1098, %r1138;
	xor.b32  	%r1160, %r1159, %r1050;
	xor.b32  	%r1161, %r1160, %r1034;
	shf.l.wrap.b32 	%r1162, %r1161, %r1161, 1;
	add.s32 	%r1163, %r364, %r363;
	add.s32 	%r1164, %r1163, %r1162;
	add.s32 	%r1165, %r1164, %r1158;
	add.s32 	%r373, %r1165, -899497514;
	shf.l.wrap.b32 	%r375, %r365, %r365, 30;
	shf.l.wrap.b32 	%r1166, %r373, %r373, 5;
	// begin inline asm
	lop3.b32 %r368, %r369, %r375, %r371, 150;
	// end inline asm
	xor.b32  	%r1167, %r1106, %r1146;
	xor.b32  	%r1168, %r1167, %r1058;
	xor.b32  	%r1169, %r1168, %r1042;
	shf.l.wrap.b32 	%r1170, %r1169, %r1169, 1;
	add.s32 	%r1171, %r368, %r367;
	add.s32 	%r1172, %r1171, %r1170;
	add.s32 	%r1173, %r1172, %r1166;
	add.s32 	%r377, %r1173, -899497514;
	shf.l.wrap.b32 	%r379, %r369, %r369, 30;
	shf.l.wrap.b32 	%r1174, %r377, %r377, 5;
	// begin inline asm
	lop3.b32 %r372, %r373, %r379, %r375, 150;
	// end inline asm
	xor.b32  	%r1175, %r1114, %r1154;
	xor.b32  	%r1176, %r1175, %r1066;
	xor.b32  	%r1177, %r1176, %r1050;
	shf.l.wrap.b32 	%r1178, %r1177, %r1177, 1;
	add.s32 	%r1179, %r372, %r371;
	add.s32 	%r1180, %r1179, %r1178;
	add.s32 	%r1181, %r1180, %r1174;
	add.s32 	%r381, %r1181, -899497514;
	shf.l.wrap.b32 	%r383, %r373, %r373, 30;
	shf.l.wrap.b32 	%r1182, %r381, %r381, 5;
	// begin inline asm
	lop3.b32 %r376, %r377, %r383, %r379, 150;
	// end inline asm
	xor.b32  	%r1183, %r1122, %r1162;
	xor.b32  	%r1184, %r1183, %r1074;
	xor.b32  	%r1185, %r1184, %r1058;
	shf.l.wrap.b32 	%r1186, %r1185, %r1185, 1;
	add.s32 	%r1187, %r376, %r375;
	add.s32 	%r1188, %r1187, %r1186;
	add.s32 	%r1189, %r1188, %r1182;
	add.s32 	%r385, %r1189, -899497514;
	shf.l.wrap.b32 	%r387, %r377, %r377, 30;
	shf.l.wrap.b32 	%r1190, %r385, %r385, 5;
	// begin inline asm
	lop3.b32 %r380, %r381, %r387, %r383, 150;
	// end inline asm
	xor.b32  	%r1191, %r1130, %r1170;
	xor.b32  	%r1192, %r1191, %r1082;
	xor.b32  	%r1193, %r1192, %r1066;
	shf.l.wrap.b32 	%r1194, %r1193, %r1193, 1;
	add.s32 	%r1195, %r379, %r380;
	add.s32 	%r1196, %r1195, %r1194;
	add.s32 	%r1197, %r1196, %r1190;
	add.s32 	%r389, %r1197, -899497514;
	shf.l.wrap.b32 	%r391, %r381, %r381, 30;
	shf.l.wrap.b32 	%r1198, %r389, %r389, 5;
	// begin inline asm
	lop3.b32 %r384, %r385, %r391, %r387, 150;
	// end inline asm
	xor.b32  	%r1199, %r1138, %r1178;
	xor.b32  	%r1200, %r1199, %r1090;
	xor.b32  	%r1201, %r1200, %r1074;
	shf.l.wrap.b32 	%r1202, %r1201, %r1201, 1;
	add.s32 	%r1203, %r383, %r384;
	add.s32 	%r1204, %r1203, %r1202;
	add.s32 	%r1205, %r1204, %r1198;
	add.s32 	%r393, %r1205, -899497514;
	shf.l.wrap.b32 	%r395, %r385, %r385, 30;
	shf.l.wrap.b32 	%r1206, %r393, %r393, 5;
	// begin inline asm
	lop3.b32 %r388, %r389, %r395, %r391, 150;
	// end inline asm
	xor.b32  	%r1207, %r1146, %r1186;
	xor.b32  	%r1208, %r1207, %r1098;
	xor.b32  	%r1209, %r1208, %r1082;
	shf.l.wrap.b32 	%r1210, %r1209, %r1209, 1;
	add.s32 	%r1211, %r387, %r388;
	add.s32 	%r1212, %r1211, %r1210;
	add.s32 	%r1213, %r1212, %r1206;
	add.s32 	%r397, %r1213, -899497514;
	shf.l.wrap.b32 	%r399, %r389, %r389, 30;
	shf.l.wrap.b32 	%r1214, %r397, %r397, 5;
	// begin inline asm
	lop3.b32 %r392, %r393, %r399, %r395, 150;
	// end inline asm
	xor.b32  	%r1215, %r1154, %r1194;
	xor.b32  	%r1216, %r1215, %r1106;
	xor.b32  	%r1217, %r1216, %r1090;
	shf.l.wrap.b32 	%r1218, %r1217, %r1217, 1;
	add.s32 	%r1219, %r391, %r392;
	add.s32 	%r1220, %r1219, %r1218;
	add.s32 	%r1221, %r1220, %r1214;
	add.s32 	%r401, %r1221, -899497514;
	shf.l.wrap.b32 	%r403, %r393, %r393, 30;
	shf.l.wrap.b32 	%r1222, %r401, %r401, 5;
	// begin inline asm
	lop3.b32 %r396, %r397, %r403, %r399, 150;
	// end inline asm
	xor.b32  	%r1223, %r1162, %r1202;
	xor.b32  	%r1224, %r1223, %r1114;
	xor.b32  	%r1225, %r1224, %r1098;
	shf.l.wrap.b32 	%r1226, %r1225, %r1225, 1;
	add.s32 	%r1227, %r395, %r396;
	add.s32 	%r1228, %r1227, %r1226;
	add.s32 	%r1229, %r1228, %r1222;
	add.s32 	%r405, %r1229, -899497514;
	shf.l.wrap.b32 	%r407, %r397, %r397, 30;
	shf.l.wrap.b32 	%r1230, %r405, %r405, 5;
	// begin inline asm
	lop3.b32 %r400, %r401, %r407, %r403, 150;
	// end inline asm
	xor.b32  	%r1231, %r1170, %r1210;
	xor.b32  	%r1232, %r1231, %r1122;
	xor.b32  	%r1233, %r1232, %r1106;
	shf.l.wrap.b32 	%r1234, %r1233, %r1233, 1;
	add.s32 	%r1235, %r399, %r400;
	add.s32 	%r1236, %r1235, %r1234;
	add.s32 	%r1237, %r1236, %r1230;
	add.s32 	%r409, %r1237, -899497514;
	shf.l.wrap.b32 	%r411, %r401, %r401, 30;
	shf.l.wrap.b32 	%r1238, %r409, %r409, 5;
	// begin inline asm
	lop3.b32 %r404, %r405, %r411, %r407, 150;
	// end inline asm
	xor.b32  	%r1239, %r1178, %r1218;
	xor.b32  	%r1240, %r1239, %r1130;
	xor.b32  	%r1241, %r1240, %r1114;
	shf.l.wrap.b32 	%r1242, %r1241, %r1241, 1;
	add.s32 	%r1243, %r403, %r404;
	add.s32 	%r1244, %r1243, %r1242;
	add.s32 	%r1245, %r1244, %r1238;
	add.s32 	%r1246, %r1245, -899497514;
	shf.l.wrap.b32 	%r410, %r405, %r405, 30;
	shf.l.wrap.b32 	%r1247, %r1246, %r1246, 5;
	// begin inline asm
	lop3.b32 %r408, %r409, %r410, %r411, 150;
	// end inline asm
	xor.b32  	%r1248, %r1186, %r1226;
	xor.b32  	%r1249, %r1248, %r1138;
	xor.b32  	%r1250, %r1249, %r1122;
	shf.l.wrap.b32 	%r1251, %r1250, %r1250, 1;
	shf.l.wrap.b32 	%r1252, %r409, %r409, 30;
	add.s32 	%r1253, %r28, %r407;
	add.s32 	%r1254, %r1253, %r408;
	add.s32 	%r1255, %r1254, %r1251;
	add.s32 	%r1256, %r1255, %r1247;
	add.s32 	%r1257, %r1246, %r8;
	add.s32 	%r1258, %r1252, %r9;
	add.s32 	%r1259, %r410, %r10;
	add.s32 	%r1260, %r411, %r11;
	add.s32 	%r413, %r29, %r1256;
	shf.l.wrap.b32 	%r1261, %r413, %r413, 5;
	add.s32 	%r1262, %r31, %r1257;
	add.s32 	%r417, %r1262, %r1261;
	shf.l.wrap.b32 	%r1263, %r417, %r417, 5;
	// begin inline asm
	lop3.b32 %r412, %r413, %r34, %r89, 202;
	// end inline asm
	add.s32 	%r1264, %r32, %r412;
	add.s32 	%r1265, %r1264, %r1258;
	add.s32 	%r421, %r1265, %r1263;
	shf.l.wrap.b32 	%r423, %r413, %r413, 30;
	shf.l.wrap.b32 	%r1266, %r421, %r421, 5;
	// begin inline asm
	lop3.b32 %r416, %r417, %r423, %r34, 202;
	// end inline asm
	add.s32 	%r1267, %r33, %r416;
	add.s32 	%r1268, %r1267, %r1259;
	add.s32 	%r425, %r1268, %r1266;
	shf.l.wrap.b32 	%r427, %r417, %r417, 30;
	shf.l.wrap.b32 	%r1269, %r425, %r425, 5;
	// begin inline asm
	lop3.b32 %r420, %r421, %r427, %r423, 202;
	// end inline asm
	add.s32 	%r1270, %r35, %r420;
	add.s32 	%r1271, %r1270, %r1260;
	add.s32 	%r429, %r1271, %r1269;
	shf.l.wrap.b32 	%r431, %r421, %r421, 30;
	shf.l.wrap.b32 	%r1272, %r429, %r429, 5;
	// begin inline asm
	lop3.b32 %r424, %r425, %r431, %r427, 202;
	// end inline asm
	add.s32 	%r1273, %r423, %r424;
	add.s32 	%r1274, %r1273, 1518500249;
	xor.b32  	%r1275, %r1274, -2147483648;
	add.s32 	%r433, %r1275, %r1272;
	shf.l.wrap.b32 	%r435, %r425, %r425, 30;
	shf.l.wrap.b32 	%r1276, %r433, %r433, 5;
	// begin inline asm
	lop3.b32 %r428, %r429, %r435, %r431, 202;
	// end inline asm
	add.s32 	%r1277, %r427, %r428;
	add.s32 	%r1278, %r1277, %r1276;
	add.s32 	%r437, %r1278, 1518500249;
	shf.l.wrap.b32 	%r439, %r429, %r429, 30;
	shf.l.wrap.b32 	%r1279, %r437, %r437, 5;
	// begin inline asm
	lop3.b32 %r432, %r433, %r439, %r435, 202;
	// end inline asm
	add.s32 	%r1280, %r432, %r431;
	add.s32 	%r1281, %r1280, %r1279;
	add.s32 	%r441, %r1281, 1518500249;
	shf.l.wrap.b32 	%r443, %r433, %r433, 30;
	shf.l.wrap.b32 	%r1282, %r441, %r441, 5;
	// begin inline asm
	lop3.b32 %r436, %r437, %r443, %r439, 202;
	// end inline asm
	add.s32 	%r1283, %r436, %r435;
	add.s32 	%r1284, %r1283, %r1282;
	add.s32 	%r445, %r1284, 1518500249;
	shf.l.wrap.b32 	%r447, %r437, %r437, 30;
	shf.l.wrap.b32 	%r1285, %r445, %r445, 5;
	// begin inline asm
	lop3.b32 %r440, %r441, %r447, %r443, 202;
	// end inline asm
	add.s32 	%r1286, %r440, %r439;
	add.s32 	%r1287, %r1286, %r1285;
	add.s32 	%r449, %r1287, 1518500249;
	shf.l.wrap.b32 	%r451, %r441, %r441, 30;
	shf.l.wrap.b32 	%r1288, %r449, %r449, 5;
	// begin inline asm
	lop3.b32 %r444, %r445, %r451, %r447, 202;
	// end inline asm
	add.s32 	%r1289, %r444, %r443;
	add.s32 	%r1290, %r1289, %r1288;
	add.s32 	%r453, %r1290, 1518500249;
	shf.l.wrap.b32 	%r455, %r445, %r445, 30;
	shf.l.wrap.b32 	%r1291, %r453, %r453, 5;
	// begin inline asm
	lop3.b32 %r448, %r449, %r455, %r451, 202;
	// end inline asm
	add.s32 	%r1292, %r448, %r447;
	add.s32 	%r1293, %r1292, %r1291;
	add.s32 	%r457, %r1293, 1518500249;
	shf.l.wrap.b32 	%r459, %r449, %r449, 30;
	shf.l.wrap.b32 	%r1294, %r457, %r457, 5;
	// begin inline asm
	lop3.b32 %r452, %r453, %r459, %r455, 202;
	// end inline asm
	add.s32 	%r1295, %r452, %r451;
	add.s32 	%r1296, %r1295, %r1294;
	add.s32 	%r461, %r1296, 1518500249;
	shf.l.wrap.b32 	%r463, %r453, %r453, 30;
	shf.l.wrap.b32 	%r1297, %r461, %r461, 5;
	// begin inline asm
	lop3.b32 %r456, %r457, %r463, %r459, 202;
	// end inline asm
	add.s32 	%r1298, %r456, %r455;
	add.s32 	%r1299, %r1298, %r1297;
	add.s32 	%r465, %r1299, 1518500249;
	shf.l.wrap.b32 	%r467, %r457, %r457, 30;
	shf.l.wrap.b32 	%r1300, %r465, %r465, 5;
	// begin inline asm
	lop3.b32 %r460, %r461, %r467, %r463, 202;
	// end inline asm
	add.s32 	%r1301, %r460, %r459;
	add.s32 	%r1302, %r1301, %r1300;
	add.s32 	%r469, %r1302, 1518500249;
	shf.l.wrap.b32 	%r471, %r461, %r461, 30;
	shf.l.wrap.b32 	%r1303, %r469, %r469, 5;
	// begin inline asm
	lop3.b32 %r464, %r465, %r471, %r467, 202;
	// end inline asm
	add.s32 	%r1304, %r464, %r463;
	add.s32 	%r1305, %r1304, %r1303;
	add.s32 	%r473, %r1305, 1518500921;
	shf.l.wrap.b32 	%r475, %r465, %r465, 30;
	shf.l.wrap.b32 	%r1306, %r473, %r473, 5;
	// begin inline asm
	lop3.b32 %r468, %r469, %r475, %r471, 202;
	// end inline asm
	xor.b32  	%r1307, %r1256, %r1258;
	shf.l.wrap.b32 	%r1308, %r1307, %r1307, 1;
	add.s32 	%r1309, %r468, %r1308;
	add.s32 	%r1310, %r1309, %r467;
	add.s32 	%r1311, %r1310, %r1306;
	add.s32 	%r477, %r1311, 1518500249;
	shf.l.wrap.b32 	%r479, %r469, %r469, 30;
	shf.l.wrap.b32 	%r1312, %r477, %r477, 5;
	// begin inline asm
	lop3.b32 %r472, %r473, %r479, %r475, 202;
	// end inline asm
	xor.b32  	%r1313, %r1257, %r1259;
	shf.l.wrap.b32 	%r1314, %r1313, %r1313, 1;
	add.s32 	%r1315, %r472, %r1314;
	add.s32 	%r1316, %r1315, %r471;
	add.s32 	%r1317, %r1316, %r1312;
	add.s32 	%r481, %r1317, 1518500249;
	shf.l.wrap.b32 	%r483, %r473, %r473, 30;
	shf.l.wrap.b32 	%r1318, %r481, %r481, 5;
	// begin inline asm
	lop3.b32 %r476, %r477, %r483, %r479, 202;
	// end inline asm
	xor.b32  	%r1319, %r1260, %r1258;
	xor.b32  	%r1320, %r1319, 672;
	shf.l.wrap.b32 	%r1321, %r1320, %r1320, 1;
	add.s32 	%r1322, %r476, %r1321;
	add.s32 	%r1323, %r1322, %r475;
	add.s32 	%r1324, %r1323, %r1318;
	add.s32 	%r485, %r1324, 1518500249;
	shf.l.wrap.b32 	%r487, %r477, %r477, 30;
	shf.l.wrap.b32 	%r1325, %r485, %r485, 5;
	// begin inline asm
	lop3.b32 %r480, %r481, %r487, %r483, 202;
	// end inline asm
	xor.b32  	%r1326, %r1308, %r1259;
	xor.b32  	%r1327, %r1326, -2147483648;
	shf.l.wrap.b32 	%r1328, %r1327, %r1327, 1;
	add.s32 	%r1329, %r480, %r1328;
	add.s32 	%r1330, %r1329, %r479;
	add.s32 	%r1331, %r1330, %r1325;
	add.s32 	%r489, %r1331, 1518500249;
	shf.l.wrap.b32 	%r491, %r481, %r481, 30;
	shf.l.wrap.b32 	%r1332, %r489, %r489, 5;
	// begin inline asm
	lop3.b32 %r484, %r485, %r491, %r487, 150;
	// end inline asm
	xor.b32  	%r1333, %r1260, %r1314;
	shf.l.wrap.b32 	%r1334, %r1333, %r1333, 1;
	add.s32 	%r1335, %r484, %r1334;
	add.s32 	%r1336, %r1335, %r483;
	add.s32 	%r1337, %r1336, %r1332;
	add.s32 	%r493, %r1337, 1859775393;
	shf.l.wrap.b32 	%r495, %r485, %r485, 30;
	shf.l.wrap.b32 	%r1338, %r493, %r493, 5;
	// begin inline asm
	lop3.b32 %r488, %r489, %r495, %r491, 150;
	// end inline asm
	xor.b32  	%r1339, %r1321, -2147483648;
	shf.l.wrap.b32 	%r1340, %r1339, %r1339, 1;
	add.s32 	%r1341, %r488, %r1340;
	add.s32 	%r1342, %r1341, %r487;
	add.s32 	%r1343, %r1342, %r1338;
	add.s32 	%r497, %r1343, 1859775393;
	shf.l.wrap.b32 	%r499, %r489, %r489, 30;
	shf.l.wrap.b32 	%r1344, %r497, %r497, 5;
	// begin inline asm
	lop3.b32 %r492, %r493, %r499, %r495, 150;
	// end inline asm
	shf.l.wrap.b32 	%r1345, %r1328, %r1328, 1;
	add.s32 	%r1346, %r492, %r1345;
	add.s32 	%r1347, %r1346, %r491;
	add.s32 	%r1348, %r1347, %r1344;
	add.s32 	%r501, %r1348, 1859775393;
	shf.l.wrap.b32 	%r503, %r493, %r493, 30;
	shf.l.wrap.b32 	%r1349, %r501, %r501, 5;
	// begin inline asm
	lop3.b32 %r496, %r497, %r503, %r499, 150;
	// end inline asm
	xor.b32  	%r1350, %r1334, 672;
	shf.l.wrap.b32 	%r1351, %r1350, %r1350, 1;
	add.s32 	%r1352, %r496, %r1351;
	add.s32 	%r1353, %r1352, %r495;
	add.s32 	%r1354, %r1353, %r1349;
	add.s32 	%r505, %r1354, 1859775393;
	shf.l.wrap.b32 	%r507, %r497, %r497, 30;
	shf.l.wrap.b32 	%r1355, %r505, %r505, 5;
	// begin inline asm
	lop3.b32 %r500, %r501, %r507, %r503, 150;
	// end inline asm
	xor.b32  	%r1356, %r1308, %r1340;
	shf.l.wrap.b32 	%r1357, %r1356, %r1356, 1;
	add.s32 	%r1358, %r500, %r1357;
	add.s32 	%r1359, %r1358, %r499;
	add.s32 	%r1360, %r1359, %r1355;
	add.s32 	%r509, %r1360, 1859775393;
	shf.l.wrap.b32 	%r511, %r501, %r501, 30;
	shf.l.wrap.b32 	%r1361, %r509, %r509, 5;
	// begin inline asm
	lop3.b32 %r504, %r505, %r511, %r507, 150;
	// end inline asm
	xor.b32  	%r1362, %r1314, %r1345;
	shf.l.wrap.b32 	%r1363, %r1362, %r1362, 1;
	add.s32 	%r1364, %r504, %r1363;
	add.s32 	%r1365, %r1364, %r503;
	add.s32 	%r1366, %r1365, %r1361;
	add.s32 	%r513, %r1366, 1859775393;
	shf.l.wrap.b32 	%r515, %r505, %r505, 30;
	shf.l.wrap.b32 	%r1367, %r513, %r513, 5;
	// begin inline asm
	lop3.b32 %r508, %r509, %r515, %r511, 150;
	// end inline asm
	xor.b32  	%r1368, %r1321, %r1351;
	shf.l.wrap.b32 	%r1369, %r1368, %r1368, 1;
	add.s32 	%r1370, %r508, %r1369;
	add.s32 	%r1371, %r1370, %r507;
	add.s32 	%r1372, %r1371, %r1367;
	add.s32 	%r517, %r1372, 1859775393;
	shf.l.wrap.b32 	%r519, %r509, %r509, 30;
	shf.l.wrap.b32 	%r1373, %r517, %r517, 5;
	// begin inline asm
	lop3.b32 %r512, %r513, %r519, %r515, 150;
	// end inline asm
	xor.b32  	%r1374, %r1328, %r1357;
	shf.l.wrap.b32 	%r1375, %r1374, %r1374, 1;
	add.s32 	%r1376, %r512, %r1375;
	add.s32 	%r1377, %r1376, %r511;
	add.s32 	%r1378, %r1377, %r1373;
	add.s32 	%r521, %r1378, 1859775393;
	shf.l.wrap.b32 	%r523, %r513, %r513, 30;
	shf.l.wrap.b32 	%r1379, %r521, %r521, 5;
	// begin inline asm
	lop3.b32 %r516, %r517, %r523, %r519, 150;
	// end inline asm
	xor.b32  	%r1380, %r1334, %r1363;
	shf.l.wrap.b32 	%r1381, %r1380, %r1380, 1;
	add.s32 	%r1382, %r516, %r1381;
	add.s32 	%r1383, %r1382, %r515;
	add.s32 	%r1384, %r1383, %r1379;
	add.s32 	%r525, %r1384, 1859775393;
	shf.l.wrap.b32 	%r527, %r517, %r517, 30;
	shf.l.wrap.b32 	%r1385, %r525, %r525, 5;
	// begin inline asm
	lop3.b32 %r520, %r521, %r527, %r523, 150;
	// end inline asm
	xor.b32  	%r1386, %r1340, %r1369;
	xor.b32  	%r1387, %r1386, 672;
	shf.l.wrap.b32 	%r1388, %r1387, %r1387, 1;
	add.s32 	%r1389, %r520, %r1388;
	add.s32 	%r1390, %r1389, %r519;
	add.s32 	%r1391, %r1390, %r1385;
	add.s32 	%r529, %r1391, 1859775393;
	shf.l.wrap.b32 	%r531, %r521, %r521, 30;
	shf.l.wrap.b32 	%r1392, %r529, %r529, 5;
	// begin inline asm
	lop3.b32 %r524, %r525, %r531, %r527, 150;
	// end inline asm
	xor.b32  	%r1393, %r1345, %r1375;
	xor.b32  	%r1394, %r1393, %r1308;
	shf.l.wrap.b32 	%r1395, %r1394, %r1394, 1;
	add.s32 	%r1396, %r524, %r1395;
	add.s32 	%r1397, %r1396, %r523;
	add.s32 	%r1398, %r1397, %r1392;
	add.s32 	%r533, %r1398, 1859775393;
	shf.l.wrap.b32 	%r535, %r525, %r525, 30;
	shf.l.wrap.b32 	%r1399, %r533, %r533, 5;
	// begin inline asm
	lop3.b32 %r528, %r529, %r535, %r531, 150;
	// end inline asm
	xor.b32  	%r1400, %r1351, %r1381;
	xor.b32  	%r1401, %r1400, %r1314;
	xor.b32  	%r1402, %r1401, 672;
	shf.l.wrap.b32 	%r1403, %r1402, %r1402, 1;
	add.s32 	%r1404, %r528, %r1403;
	add.s32 	%r1405, %r1404, %r527;
	add.s32 	%r1406, %r1405, %r1399;
	add.s32 	%r537, %r1406, 1859775393;
	shf.l.wrap.b32 	%r539, %r529, %r529, 30;
	shf.l.wrap.b32 	%r1407, %r537, %r537, 5;
	// begin inline asm
	lop3.b32 %r532, %r533, %r539, %r535, 150;
	// end inline asm
	xor.b32  	%r1408, %r1357, %r1388;
	xor.b32  	%r1409, %r1408, %r1321;
	xor.b32  	%r1410, %r1409, %r1308;
	shf.l.wrap.b32 	%r1411, %r1410, %r1410, 1;
	add.s32 	%r1412, %r532, %r1411;
	add.s32 	%r1413, %r1412, %r531;
	add.s32 	%r1414, %r1413, %r1407;
	add.s32 	%r541, %r1414, 1859775393;
	shf.l.wrap.b32 	%r543, %r533, %r533, 30;
	shf.l.wrap.b32 	%r1415, %r541, %r541, 5;
	// begin inline asm
	lop3.b32 %r536, %r537, %r543, %r539, 150;
	// end inline asm
	xor.b32  	%r1416, %r1363, %r1395;
	xor.b32  	%r1417, %r1416, %r1328;
	xor.b32  	%r1418, %r1417, %r1314;
	shf.l.wrap.b32 	%r1419, %r1418, %r1418, 1;
	add.s32 	%r1420, %r536, %r1419;
	add.s32 	%r1421, %r1420, %r535;
	add.s32 	%r1422, %r1421, %r1415;
	add.s32 	%r545, %r1422, 1859775393;
	shf.l.wrap.b32 	%r547, %r537, %r537, 30;
	shf.l.wrap.b32 	%r1423, %r545, %r545, 5;
	// begin inline asm
	lop3.b32 %r540, %r541, %r547, %r543, 150;
	// end inline asm
	xor.b32  	%r1424, %r1369, %r1403;
	xor.b32  	%r1425, %r1424, %r1334;
	xor.b32  	%r1426, %r1425, %r1321;
	shf.l.wrap.b32 	%r1427, %r1426, %r1426, 1;
	add.s32 	%r1428, %r540, %r1427;
	add.s32 	%r1429, %r1428, %r539;
	add.s32 	%r1430, %r1429, %r1423;
	add.s32 	%r549, %r1430, 1859775393;
	shf.l.wrap.b32 	%r551, %r541, %r541, 30;
	shf.l.wrap.b32 	%r1431, %r549, %r549, 5;
	// begin inline asm
	lop3.b32 %r544, %r545, %r551, %r547, 150;
	// end inline asm
	xor.b32  	%r1432, %r1375, %r1411;
	xor.b32  	%r1433, %r1432, %r1340;
	xor.b32  	%r1434, %r1433, %r1328;
	shf.l.wrap.b32 	%r1435, %r1434, %r1434, 1;
	add.s32 	%r1436, %r544, %r1435;
	add.s32 	%r1437, %r1436, %r543;
	add.s32 	%r1438, %r1437, %r1431;
	add.s32 	%r553, %r1438, 1859775393;
	shf.l.wrap.b32 	%r555, %r545, %r545, 30;
	shf.l.wrap.b32 	%r1439, %r553, %r553, 5;
	// begin inline asm
	lop3.b32 %r548, %r549, %r555, %r551, 150;
	// end inline asm
	xor.b32  	%r1440, %r1381, %r1419;
	xor.b32  	%r1441, %r1440, %r1345;
	xor.b32  	%r1442, %r1441, %r1334;
	shf.l.wrap.b32 	%r1443, %r1442, %r1442, 1;
	add.s32 	%r1444, %r548, %r1443;
	add.s32 	%r1445, %r1444, %r547;
	add.s32 	%r1446, %r1445, %r1439;
	add.s32 	%r557, %r1446, 1859775393;
	shf.l.wrap.b32 	%r559, %r549, %r549, 30;
	shf.l.wrap.b32 	%r1447, %r557, %r557, 5;
	// begin inline asm
	lop3.b32 %r552, %r553, %r559, %r555, 150;
	// end inline asm
	xor.b32  	%r1448, %r1388, %r1427;
	xor.b32  	%r1449, %r1448, %r1351;
	xor.b32  	%r1450, %r1449, %r1340;
	shf.l.wrap.b32 	%r1451, %r1450, %r1450, 1;
	add.s32 	%r1452, %r552, %r1451;
	add.s32 	%r1453, %r1452, %r551;
	add.s32 	%r1454, %r1453, %r1447;
	add.s32 	%r561, %r1454, 1859775393;
	shf.l.wrap.b32 	%r563, %r553, %r553, 30;
	shf.l.wrap.b32 	%r1455, %r561, %r561, 5;
	// begin inline asm
	lop3.b32 %r556, %r557, %r563, %r559, 150;
	// end inline asm
	xor.b32  	%r1456, %r1395, %r1435;
	xor.b32  	%r1457, %r1456, %r1357;
	xor.b32  	%r1458, %r1457, %r1345;
	shf.l.wrap.b32 	%r1459, %r1458, %r1458, 1;
	add.s32 	%r1460, %r556, %r1459;
	add.s32 	%r1461, %r1460, %r555;
	add.s32 	%r1462, %r1461, %r1455;
	add.s32 	%r565, %r1462, 1859775393;
	shf.l.wrap.b32 	%r567, %r557, %r557, 30;
	shf.l.wrap.b32 	%r1463, %r565, %r565, 5;
	// begin inline asm
	lop3.b32 %r560, %r561, %r567, %r563, 150;
	// end inline asm
	xor.b32  	%r1464, %r1403, %r1443;
	xor.b32  	%r1465, %r1464, %r1363;
	xor.b32  	%r1466, %r1465, %r1351;
	shf.l.wrap.b32 	%r1467, %r1466, %r1466, 1;
	add.s32 	%r1468, %r560, %r1467;
	add.s32 	%r1469, %r1468, %r559;
	add.s32 	%r1470, %r1469, %r1463;
	add.s32 	%r569, %r1470, 1859775393;
	shf.l.wrap.b32 	%r571, %r561, %r561, 30;
	shf.l.wrap.b32 	%r1471, %r569, %r569, 5;
	// begin inline asm
	lop3.b32 %r564, %r565, %r571, %r567, 232;
	// end inline asm
	xor.b32  	%r1472, %r1411, %r1451;
	xor.b32  	%r1473, %r1472, %r1369;
	xor.b32  	%r1474, %r1473, %r1357;
	shf.l.wrap.b32 	%r1475, %r1474, %r1474, 1;
	add.s32 	%r1476, %r564, %r1475;
	add.s32 	%r1477, %r1476, %r563;
	add.s32 	%r1478, %r1477, %r1471;
	add.s32 	%r573, %r1478, -1894007588;
	shf.l.wrap.b32 	%r575, %r565, %r565, 30;
	shf.l.wrap.b32 	%r1479, %r573, %r573, 5;
	// begin inline asm
	lop3.b32 %r568, %r569, %r575, %r571, 232;
	// end inline asm
	xor.b32  	%r1480, %r1419, %r1459;
	xor.b32  	%r1481, %r1480, %r1375;
	xor.b32  	%r1482, %r1481, %r1363;
	shf.l.wrap.b32 	%r1483, %r1482, %r1482, 1;
	add.s32 	%r1484, %r568, %r1483;
	add.s32 	%r1485, %r1484, %r567;
	add.s32 	%r1486, %r1485, %r1479;
	add.s32 	%r577, %r1486, -1894007588;
	shf.l.wrap.b32 	%r579, %r569, %r569, 30;
	shf.l.wrap.b32 	%r1487, %r577, %r577, 5;
	// begin inline asm
	lop3.b32 %r572, %r573, %r579, %r575, 232;
	// end inline asm
	xor.b32  	%r1488, %r1427, %r1467;
	xor.b32  	%r1489, %r1488, %r1381;
	xor.b32  	%r1490, %r1489, %r1369;
	shf.l.wrap.b32 	%r1491, %r1490, %r1490, 1;
	add.s32 	%r1492, %r572, %r1491;
	add.s32 	%r1493, %r1492, %r571;
	add.s32 	%r1494, %r1493, %r1487;
	add.s32 	%r581, %r1494, -1894007588;
	shf.l.wrap.b32 	%r583, %r573, %r573, 30;
	shf.l.wrap.b32 	%r1495, %r581, %r581, 5;
	// begin inline asm
	lop3.b32 %r576, %r577, %r583, %r579, 232;
	// end inline asm
	xor.b32  	%r1496, %r1435, %r1475;
	xor.b32  	%r1497, %r1496, %r1388;
	xor.b32  	%r1498, %r1497, %r1375;
	shf.l.wrap.b32 	%r1499, %r1498, %r1498, 1;
	add.s32 	%r1500, %r576, %r1499;
	add.s32 	%r1501, %r1500, %r575;
	add.s32 	%r1502, %r1501, %r1495;
	add.s32 	%r585, %r1502, -1894007588;
	shf.l.wrap.b32 	%r587, %r577, %r577, 30;
	shf.l.wrap.b32 	%r1503, %r585, %r585, 5;
	// begin inline asm
	lop3.b32 %r580, %r581, %r587, %r583, 232;
	// end inline asm
	xor.b32  	%r1504, %r1443, %r1483;
	xor.b32  	%r1505, %r1504, %r1395;
	xor.b32  	%r1506, %r1505, %r1381;
	shf.l.wrap.b32 	%r1507, %r1506, %r1506, 1;
	add.s32 	%r1508, %r580, %r1507;
	add.s32 	%r1509, %r1508, %r579;
	add.s32 	%r1510, %r1509, %r1503;
	add.s32 	%r589, %r1510, -1894007588;
	shf.l.wrap.b32 	%r591, %r581, %r581, 30;
	shf.l.wrap.b32 	%r1511, %r589, %r589, 5;
	// begin inline asm
	lop3.b32 %r584, %r585, %r591, %r587, 232;
	// end inline asm
	xor.b32  	%r1512, %r1451, %r1491;
	xor.b32  	%r1513, %r1512, %r1403;
	xor.b32  	%r1514, %r1513, %r1388;
	shf.l.wrap.b32 	%r1515, %r1514, %r1514, 1;
	add.s32 	%r1516, %r584, %r1515;
	add.s32 	%r1517, %r1516, %r583;
	add.s32 	%r1518, %r1517, %r1511;
	add.s32 	%r593, %r1518, -1894007588;
	shf.l.wrap.b32 	%r595, %r585, %r585, 30;
	shf.l.wrap.b32 	%r1519, %r593, %r593, 5;
	// begin inline asm
	lop3.b32 %r588, %r589, %r595, %r591, 232;
	// end inline asm
	xor.b32  	%r1520, %r1459, %r1499;
	xor.b32  	%r1521, %r1520, %r1411;
	xor.b32  	%r1522, %r1521, %r1395;
	shf.l.wrap.b32 	%r1523, %r1522, %r1522, 1;
	add.s32 	%r1524, %r588, %r1523;
	add.s32 	%r1525, %r1524, %r587;
	add.s32 	%r1526, %r1525, %r1519;
	add.s32 	%r597, %r1526, -1894007588;
	shf.l.wrap.b32 	%r599, %r589, %r589, 30;
	shf.l.wrap.b32 	%r1527, %r597, %r597, 5;
	// begin inline asm
	lop3.b32 %r592, %r593, %r599, %r595, 232;
	// end inline asm
	xor.b32  	%r1528, %r1467, %r1507;
	xor.b32  	%r1529, %r1528, %r1419;
	xor.b32  	%r1530, %r1529, %r1403;
	shf.l.wrap.b32 	%r1531, %r1530, %r1530, 1;
	add.s32 	%r1532, %r592, %r1531;
	add.s32 	%r1533, %r1532, %r591;
	add.s32 	%r1534, %r1533, %r1527;
	add.s32 	%r601, %r1534, -1894007588;
	shf.l.wrap.b32 	%r603, %r593, %r593, 30;
	shf.l.wrap.b32 	%r1535, %r601, %r601, 5;
	// begin inline asm
	lop3.b32 %r596, %r597, %r603, %r599, 232;
	// end inline asm
	xor.b32  	%r1536, %r1475, %r1515;
	xor.b32  	%r1537, %r1536, %r1427;
	xor.b32  	%r1538, %r1537, %r1411;
	shf.l.wrap.b32 	%r1539, %r1538, %r1538, 1;
	add.s32 	%r1540, %r596, %r1539;
	add.s32 	%r1541, %r1540, %r595;
	add.s32 	%r1542, %r1541, %r1535;
	add.s32 	%r605, %r1542, -1894007588;
	shf.l.wrap.b32 	%r607, %r597, %r597, 30;
	shf.l.wrap.b32 	%r1543, %r605, %r605, 5;
	// begin inline asm
	lop3.b32 %r600, %r601, %r607, %r603, 232;
	// end inline asm
	xor.b32  	%r1544, %r1483, %r1523;
	xor.b32  	%r1545, %r1544, %r1435;
	xor.b32  	%r1546, %r1545, %r1419;
	shf.l.wrap.b32 	%r1547, %r1546, %r1546, 1;
	add.s32 	%r1548, %r600, %r1547;
	add.s32 	%r1549, %r1548, %r599;
	add.s32 	%r1550, %r1549, %r1543;
	add.s32 	%r609, %r1550, -1894007588;
	shf.l.wrap.b32 	%r611, %r601, %r601, 30;
	shf.l.wrap.b32 	%r1551, %r609, %r609, 5;
	// begin inline asm
	lop3.b32 %r604, %r605, %r611, %r607, 232;
	// end inline asm
	xor.b32  	%r1552, %r1491, %r1531;
	xor.b32  	%r1553, %r1552, %r1443;
	xor.b32  	%r1554, %r1553, %r1427;
	shf.l.wrap.b32 	%r1555, %r1554, %r1554, 1;
	add.s32 	%r1556, %r604, %r1555;
	add.s32 	%r1557, %r1556, %r603;
	add.s32 	%r1558, %r1557, %r1551;
	add.s32 	%r613, %r1558, -1894007588;
	shf.l.wrap.b32 	%r615, %r605, %r605, 30;
	shf.l.wrap.b32 	%r1559, %r613, %r613, 5;
	// begin inline asm
	lop3.b32 %r608, %r609, %r615, %r611, 232;
	// end inline asm
	xor.b32  	%r1560, %r1499, %r1539;
	xor.b32  	%r1561, %r1560, %r1451;
	xor.b32  	%r1562, %r1561, %r1435;
	shf.l.wrap.b32 	%r1563, %r1562, %r1562, 1;
	add.s32 	%r1564, %r608, %r1563;
	add.s32 	%r1565, %r1564, %r607;
	add.s32 	%r1566, %r1565, %r1559;
	add.s32 	%r617, %r1566, -1894007588;
	shf.l.wrap.b32 	%r619, %r609, %r609, 30;
	shf.l.wrap.b32 	%r1567, %r617, %r617, 5;
	// begin inline asm
	lop3.b32 %r612, %r613, %r619, %r615, 232;
	// end inline asm
	xor.b32  	%r1568, %r1507, %r1547;
	xor.b32  	%r1569, %r1568, %r1459;
	xor.b32  	%r1570, %r1569, %r1443;
	shf.l.wrap.b32 	%r1571, %r1570, %r1570, 1;
	add.s32 	%r1572, %r612, %r1571;
	add.s32 	%r1573, %r1572, %r611;
	add.s32 	%r1574, %r1573, %r1567;
	add.s32 	%r621, %r1574, -1894007588;
	shf.l.wrap.b32 	%r623, %r613, %r613, 30;
	shf.l.wrap.b32 	%r1575, %r621, %r621, 5;
	// begin inline asm
	lop3.b32 %r616, %r617, %r623, %r619, 232;
	// end inline asm
	xor.b32  	%r1576, %r1515, %r1555;
	xor.b32  	%r1577, %r1576, %r1467;
	xor.b32  	%r1578, %r1577, %r1451;
	shf.l.wrap.b32 	%r1579, %r1578, %r1578, 1;
	add.s32 	%r1580, %r616, %r1579;
	add.s32 	%r1581, %r1580, %r615;
	add.s32 	%r1582, %r1581, %r1575;
	add.s32 	%r625, %r1582, -1894007588;
	shf.l.wrap.b32 	%r627, %r617, %r617, 30;
	shf.l.wrap.b32 	%r1583, %r625, %r625, 5;
	// begin inline asm
	lop3.b32 %r620, %r621, %r627, %r623, 232;
	// end inline asm
	xor.b32  	%r1584, %r1523, %r1563;
	xor.b32  	%r1585, %r1584, %r1475;
	xor.b32  	%r1586, %r1585, %r1459;
	shf.l.wrap.b32 	%r1587, %r1586, %r1586, 1;
	add.s32 	%r1588, %r620, %r1587;
	add.s32 	%r1589, %r1588, %r619;
	add.s32 	%r1590, %r1589, %r1583;
	add.s32 	%r629, %r1590, -1894007588;
	shf.l.wrap.b32 	%r631, %r621, %r621, 30;
	shf.l.wrap.b32 	%r1591, %r629, %r629, 5;
	// begin inline asm
	lop3.b32 %r624, %r625, %r631, %r627, 232;
	// end inline asm
	xor.b32  	%r1592, %r1531, %r1571;
	xor.b32  	%r1593, %r1592, %r1483;
	xor.b32  	%r1594, %r1593, %r1467;
	shf.l.wrap.b32 	%r1595, %r1594, %r1594, 1;
	add.s32 	%r1596, %r624, %r1595;
	add.s32 	%r1597, %r1596, %r623;
	add.s32 	%r1598, %r1597, %r1591;
	add.s32 	%r633, %r1598, -1894007588;
	shf.l.wrap.b32 	%r635, %r625, %r625, 30;
	shf.l.wrap.b32 	%r1599, %r633, %r633, 5;
	// begin inline asm
	lop3.b32 %r628, %r629, %r635, %r631, 232;
	// end inline asm
	xor.b32  	%r1600, %r1539, %r1579;
	xor.b32  	%r1601, %r1600, %r1491;
	xor.b32  	%r1602, %r1601, %r1475;
	shf.l.wrap.b32 	%r1603, %r1602, %r1602, 1;
	add.s32 	%r1604, %r628, %r1603;
	add.s32 	%r1605, %r1604, %r627;
	add.s32 	%r1606, %r1605, %r1599;
	add.s32 	%r637, %r1606, -1894007588;
	shf.l.wrap.b32 	%r639, %r629, %r629, 30;
	shf.l.wrap.b32 	%r1607, %r637, %r637, 5;
	// begin inline asm
	lop3.b32 %r632, %r633, %r639, %r635, 232;
	// end inline asm
	xor.b32  	%r1608, %r1547, %r1587;
	xor.b32  	%r1609, %r1608, %r1499;
	xor.b32  	%r1610, %r1609, %r1483;
	shf.l.wrap.b32 	%r1611, %r1610, %r1610, 1;
	add.s32 	%r1612, %r632, %r1611;
	add.s32 	%r1613, %r1612, %r631;
	add.s32 	%r1614, %r1613, %r1607;
	add.s32 	%r641, %r1614, -1894007588;
	shf.l.wrap.b32 	%r643, %r633, %r633, 30;
	shf.l.wrap.b32 	%r1615, %r641, %r641, 5;
	// begin inline asm
	lop3.b32 %r636, %r637, %r643, %r639, 232;
	// end inline asm
	xor.b32  	%r1616, %r1555, %r1595;
	xor.b32  	%r1617, %r1616, %r1507;
	xor.b32  	%r1618, %r1617, %r1491;
	shf.l.wrap.b32 	%r1619, %r1618, %r1618, 1;
	add.s32 	%r1620, %r636, %r1619;
	add.s32 	%r1621, %r1620, %r635;
	add.s32 	%r1622, %r1621, %r1615;
	add.s32 	%r645, %r1622, -1894007588;
	shf.l.wrap.b32 	%r647, %r637, %r637, 30;
	shf.l.wrap.b32 	%r1623, %r645, %r645, 5;
	// begin inline asm
	lop3.b32 %r640, %r641, %r647, %r643, 232;
	// end inline asm
	xor.b32  	%r1624, %r1563, %r1603;
	xor.b32  	%r1625, %r1624, %r1515;
	xor.b32  	%r1626, %r1625, %r1499;
	shf.l.wrap.b32 	%r1627, %r1626, %r1626, 1;
	add.s32 	%r1628, %r640, %r1627;
	add.s32 	%r1629, %r1628, %r639;
	add.s32 	%r1630, %r1629, %r1623;
	add.s32 	%r649, %r1630, -1894007588;
	shf.l.wrap.b32 	%r651, %r641, %r641, 30;
	shf.l.wrap.b32 	%r1631, %r649, %r649, 5;
	// begin inline asm
	lop3.b32 %r644, %r645, %r651, %r647, 150;
	// end inline asm
	xor.b32  	%r1632, %r1571, %r1611;
	xor.b32  	%r1633, %r1632, %r1523;
	xor.b32  	%r1634, %r1633, %r1507;
	shf.l.wrap.b32 	%r1635, %r1634, %r1634, 1;
	add.s32 	%r1636, %r644, %r1635;
	add.s32 	%r1637, %r1636, %r643;
	add.s32 	%r1638, %r1637, %r1631;
	add.s32 	%r653, %r1638, -899497514;
	shf.l.wrap.b32 	%r655, %r645, %r645, 30;
	shf.l.wrap.b32 	%r1639, %r653, %r653, 5;
	// begin inline asm
	lop3.b32 %r648, %r649, %r655, %r651, 150;
	// end inline asm
	xor.b32  	%r1640, %r1579, %r1619;
	xor.b32  	%r1641, %r1640, %r1531;
	xor.b32  	%r1642, %r1641, %r1515;
	shf.l.wrap.b32 	%r1643, %r1642, %r1642, 1;
	add.s32 	%r1644, %r648, %r1643;
	add.s32 	%r1645, %r1644, %r647;
	add.s32 	%r1646, %r1645, %r1639;
	add.s32 	%r657, %r1646, -899497514;
	shf.l.wrap.b32 	%r659, %r649, %r649, 30;
	shf.l.wrap.b32 	%r1647, %r657, %r657, 5;
	// begin inline asm
	lop3.b32 %r652, %r653, %r659, %r655, 150;
	// end inline asm
	xor.b32  	%r1648, %r1587, %r1627;
	xor.b32  	%r1649, %r1648, %r1539;
	xor.b32  	%r1650, %r1649, %r1523;
	shf.l.wrap.b32 	%r1651, %r1650, %r1650, 1;
	add.s32 	%r1652, %r652, %r1651;
	add.s32 	%r1653, %r1652, %r651;
	add.s32 	%r1654, %r1653, %r1647;
	add.s32 	%r661, %r1654, -899497514;
	shf.l.wrap.b32 	%r663, %r653, %r653, 30;
	shf.l.wrap.b32 	%r1655, %r661, %r661, 5;
	// begin inline asm
	lop3.b32 %r656, %r657, %r663, %r659, 150;
	// end inline asm
	xor.b32  	%r1656, %r1595, %r1635;
	xor.b32  	%r1657, %r1656, %r1547;
	xor.b32  	%r1658, %r1657, %r1531;
	shf.l.wrap.b32 	%r1659, %r1658, %r1658, 1;
	add.s32 	%r1660, %r656, %r1659;
	add.s32 	%r1661, %r1660, %r655;
	add.s32 	%r1662, %r1661, %r1655;
	add.s32 	%r665, %r1662, -899497514;
	shf.l.wrap.b32 	%r667, %r657, %r657, 30;
	shf.l.wrap.b32 	%r1663, %r665, %r665, 5;
	// begin inline asm
	lop3.b32 %r660, %r661, %r667, %r663, 150;
	// end inline asm
	xor.b32  	%r1664, %r1603, %r1643;
	xor.b32  	%r1665, %r1664, %r1555;
	xor.b32  	%r1666, %r1665, %r1539;
	shf.l.wrap.b32 	%r1667, %r1666, %r1666, 1;
	add.s32 	%r1668, %r660, %r1667;
	add.s32 	%r1669, %r1668, %r659;
	add.s32 	%r1670, %r1669, %r1663;
	add.s32 	%r669, %r1670, -899497514;
	shf.l.wrap.b32 	%r671, %r661, %r661, 30;
	shf.l.wrap.b32 	%r1671, %r669, %r669, 5;
	// begin inline asm
	lop3.b32 %r664, %r665, %r671, %r667, 150;
	// end inline asm
	xor.b32  	%r1672, %r1611, %r1651;
	xor.b32  	%r1673, %r1672, %r1563;
	xor.b32  	%r1674, %r1673, %r1547;
	shf.l.wrap.b32 	%r1675, %r1674, %r1674, 1;
	add.s32 	%r1676, %r664, %r1675;
	add.s32 	%r1677, %r1676, %r663;
	add.s32 	%r1678, %r1677, %r1671;
	add.s32 	%r673, %r1678, -899497514;
	shf.l.wrap.b32 	%r675, %r665, %r665, 30;
	shf.l.wrap.b32 	%r1679, %r673, %r673, 5;
	// begin inline asm
	lop3.b32 %r668, %r669, %r675, %r671, 150;
	// end inline asm
	xor.b32  	%r1680, %r1619, %r1659;
	xor.b32  	%r1681, %r1680, %r1571;
	xor.b32  	%r1682, %r1681, %r1555;
	shf.l.wrap.b32 	%r1683, %r1682, %r1682, 1;
	add.s32 	%r1684, %r668, %r667;
	add.s32 	%r1685, %r1684, %r1683;
	add.s32 	%r1686, %r1685, %r1679;
	add.s32 	%r677, %r1686, -899497514;
	shf.l.wrap.b32 	%r679, %r669, %r669, 30;
	shf.l.wrap.b32 	%r1687, %r677, %r677, 5;
	// begin inline asm
	lop3.b32 %r672, %r673, %r679, %r675, 150;
	// end inline asm
	xor.b32  	%r1688, %r1627, %r1667;
	xor.b32  	%r1689, %r1688, %r1579;
	xor.b32  	%r1690, %r1689, %r1563;
	shf.l.wrap.b32 	%r1691, %r1690, %r1690, 1;
	add.s32 	%r1692, %r672, %r671;
	add.s32 	%r1693, %r1692, %r1691;
	add.s32 	%r1694, %r1693, %r1687;
	add.s32 	%r681, %r1694, -899497514;
	shf.l.wrap.b32 	%r683, %r673, %r673, 30;
	shf.l.wrap.b32 	%r1695, %r681, %r681, 5;
	// begin inline asm
	lop3.b32 %r676, %r677, %r683, %r679, 150;
	// end inline asm
	xor.b32  	%r1696, %r1635, %r1675;
	xor.b32  	%r1697, %r1696, %r1587;
	xor.b32  	%r1698, %r1697, %r1571;
	shf.l.wrap.b32 	%r1699, %r1698, %r1698, 1;
	add.s32 	%r1700, %r676, %r675;
	add.s32 	%r1701, %r1700, %r1699;
	add.s32 	%r1702, %r1701, %r1695;
	add.s32 	%r685, %r1702, -899497514;
	shf.l.wrap.b32 	%r687, %r677, %r677, 30;
	shf.l.wrap.b32 	%r1703, %r685, %r685, 5;
	// begin inline asm
	lop3.b32 %r680, %r681, %r687, %r683, 150;
	// end inline asm
	xor.b32  	%r1704, %r1643, %r1683;
	xor.b32  	%r1705, %r1704, %r1595;
	xor.b32  	%r1706, %r1705, %r1579;
	shf.l.wrap.b32 	%r1707, %r1706, %r1706, 1;
	add.s32 	%r1708, %r680, %r679;
	add.s32 	%r1709, %r1708, %r1707;
	add.s32 	%r1710, %r1709, %r1703;
	add.s32 	%r689, %r1710, -899497514;
	shf.l.wrap.b32 	%r691, %r681, %r681, 30;
	shf.l.wrap.b32 	%r1711, %r689, %r689, 5;
	// begin inline asm
	lop3.b32 %r684, %r685, %r691, %r687, 150;
	// end inline asm
	xor.b32  	%r1712, %r1651, %r1691;
	xor.b32  	%r1713, %r1712, %r1603;
	xor.b32  	%r1714, %r1713, %r1587;
	shf.l.wrap.b32 	%r1715, %r1714, %r1714, 1;
	add.s32 	%r1716, %r684, %r683;
	add.s32 	%r1717, %r1716, %r1715;
	add.s32 	%r1718, %r1717, %r1711;
	add.s32 	%r693, %r1718, -899497514;
	shf.l.wrap.b32 	%r695, %r685, %r685, 30;
	shf.l.wrap.b32 	%r1719, %r693, %r693, 5;
	// begin inline asm
	lop3.b32 %r688, %r689, %r695, %r691, 150;
	// end inline asm
	xor.b32  	%r1720, %r1659, %r1699;
	xor.b32  	%r1721, %r1720, %r1611;
	xor.b32  	%r1722, %r1721, %r1595;
	shf.l.wrap.b32 	%r1723, %r1722, %r1722, 1;
	add.s32 	%r1724, %r688, %r687;
	add.s32 	%r1725, %r1724, %r1723;
	add.s32 	%r1726, %r1725, %r1719;
	add.s32 	%r697, %r1726, -899497514;
	shf.l.wrap.b32 	%r699, %r689, %r689, 30;
	shf.l.wrap.b32 	%r1727, %r697, %r697, 5;
	// begin inline asm
	lop3.b32 %r692, %r693, %r699, %r695, 150;
	// end inline asm
	xor.b32  	%r1728, %r1667, %r1707;
	xor.b32  	%r1729, %r1728, %r1619;
	xor.b32  	%r1730, %r1729, %r1603;
	shf.l.wrap.b32 	%r1731, %r1730, %r1730, 1;
	add.s32 	%r1732, %r691, %r692;
	add.s32 	%r1733, %r1732, %r1731;
	add.s32 	%r1734, %r1733, %r1727;
	add.s32 	%r701, %r1734, -899497514;
	shf.l.wrap.b32 	%r703, %r693, %r693, 30;
	shf.l.wrap.b32 	%r1735, %r701, %r701, 5;
	// begin inline asm
	lop3.b32 %r696, %r697, %r703, %r699, 150;
	// end inline asm
	xor.b32  	%r1736, %r1675, %r1715;
	xor.b32  	%r1737, %r1736, %r1627;
	xor.b32  	%r1738, %r1737, %r1611;
	shf.l.wrap.b32 	%r1739, %r1738, %r1738, 1;
	add.s32 	%r1740, %r695, %r696;
	add.s32 	%r1741, %r1740, %r1739;
	add.s32 	%r1742, %r1741, %r1735;
	add.s32 	%r705, %r1742, -899497514;
	shf.l.wrap.b32 	%r707, %r697, %r697, 30;
	shf.l.wrap.b32 	%r1743, %r705, %r705, 5;
	// begin inline asm
	lop3.b32 %r700, %r701, %r707, %r703, 150;
	// end inline asm
	xor.b32  	%r1744, %r1683, %r1723;
	xor.b32  	%r1745, %r1744, %r1635;
	xor.b32  	%r1746, %r1745, %r1619;
	shf.l.wrap.b32 	%r1747, %r1746, %r1746, 1;
	add.s32 	%r1748, %r699, %r700;
	add.s32 	%r1749, %r1748, %r1747;
	add.s32 	%r1750, %r1749, %r1743;
	add.s32 	%r709, %r1750, -899497514;
	shf.l.wrap.b32 	%r711, %r701, %r701, 30;
	shf.l.wrap.b32 	%r1751, %r709, %r709, 5;
	// begin inline asm
	lop3.b32 %r704, %r705, %r711, %r707, 150;
	// end inline asm
	xor.b32  	%r1752, %r1691, %r1731;
	xor.b32  	%r1753, %r1752, %r1643;
	xor.b32  	%r1754, %r1753, %r1627;
	shf.l.wrap.b32 	%r1755, %r1754, %r1754, 1;
	add.s32 	%r1756, %r703, %r704;
	add.s32 	%r1757, %r1756, %r1755;
	add.s32 	%r1758, %r1757, %r1751;
	add.s32 	%r713, %r1758, -899497514;
	shf.l.wrap.b32 	%r715, %r705, %r705, 30;
	shf.l.wrap.b32 	%r1759, %r713, %r713, 5;
	// begin inline asm
	lop3.b32 %r708, %r709, %r715, %r711, 150;
	// end inline asm
	xor.b32  	%r1760, %r1699, %r1739;
	xor.b32  	%r1761, %r1760, %r1651;
	xor.b32  	%r1762, %r1761, %r1635;
	shf.l.wrap.b32 	%r1763, %r1762, %r1762, 1;
	add.s32 	%r1764, %r707, %r708;
	add.s32 	%r1765, %r1764, %r1763;
	add.s32 	%r1766, %r1765, %r1759;
	add.s32 	%r717, %r1766, -899497514;
	shf.l.wrap.b32 	%r719, %r709, %r709, 30;
	shf.l.wrap.b32 	%r1767, %r717, %r717, 5;
	// begin inline asm
	lop3.b32 %r712, %r713, %r719, %r715, 150;
	// end inline asm
	xor.b32  	%r1768, %r1707, %r1747;
	xor.b32  	%r1769, %r1768, %r1659;
	xor.b32  	%r1770, %r1769, %r1643;
	shf.l.wrap.b32 	%r1771, %r1770, %r1770, 1;
	add.s32 	%r1772, %r711, %r712;
	add.s32 	%r1773, %r1772, %r1771;
	add.s32 	%r1774, %r1773, %r1767;
	add.s32 	%r721, %r1774, -899497514;
	shf.l.wrap.b32 	%r723, %r713, %r713, 30;
	shf.l.wrap.b32 	%r1775, %r721, %r721, 5;
	// begin inline asm
	lop3.b32 %r716, %r717, %r723, %r719, 150;
	// end inline asm
	xor.b32  	%r1776, %r1715, %r1755;
	xor.b32  	%r1777, %r1776, %r1667;
	xor.b32  	%r1778, %r1777, %r1651;
	shf.l.wrap.b32 	%r1779, %r1778, %r1778, 1;
	add.s32 	%r1780, %r715, %r716;
	add.s32 	%r1781, %r1780, %r1779;
	add.s32 	%r1782, %r1781, %r1775;
	add.s32 	%r1783, %r1782, -899497514;
	shf.l.wrap.b32 	%r722, %r717, %r717, 30;
	shf.l.wrap.b32 	%r1784, %r1783, %r1783, 5;
	// begin inline asm
	lop3.b32 %r720, %r721, %r722, %r723, 150;
	// end inline asm
	xor.b32  	%r1785, %r1723, %r1763;
	xor.b32  	%r1786, %r1785, %r1675;
	xor.b32  	%r1787, %r1786, %r1659;
	shf.l.wrap.b32 	%r1788, %r1787, %r1787, 1;
	shf.l.wrap.b32 	%r1789, %r721, %r721, 30;
	add.s32 	%r1790, %r36, %r719;
	add.s32 	%r1791, %r1790, %r720;
	add.s32 	%r1792, %r1791, %r1788;
	add.s32 	%r1805, %r1792, %r1784;
	add.s32 	%r1806, %r1783, %r12;
	add.s32 	%r1807, %r1789, %r13;
	add.s32 	%r1808, %r722, %r14;
	add.s32 	%r1809, %r723, %r15;
	xor.b32  	%r1814, %r1814, %r1805;
	xor.b32  	%r1813, %r1813, %r1806;
	xor.b32  	%r1812, %r1812, %r1807;
	xor.b32  	%r1811, %r1811, %r1808;
	xor.b32  	%r1810, %r1810, %r1809;
	add.s32 	%r1804, %r1804, 1;
	setp.lt.u32 	%p2, %r1804, %r2;
	@%p2 bra 	$L__BB1_2;

$L__BB1_3:
	st.global.u32 	[%rd1+-80], %r1805;
	st.global.u32 	[%rd1+-76], %r1806;
	st.global.u32 	[%rd1+-72], %r1807;
	st.global.u32 	[%rd1+-68], %r1808;
	st.global.u32 	[%rd1+-64], %r1809;
	st.global.u32 	[%rd1+-20], %r1814;
	st.global.u32 	[%rd1+-16], %r1813;
	st.global.u32 	[%rd1+-12], %r1812;
	st.global.u32 	[%rd1+-8], %r1811;
	st.global.u32 	[%rd1+-4], %r1810;
	sub.s32 	%r1793, %r1, %r2;
	st.global.u32 	[%rd1], %r1793;
	ret;

}
	// .globl	pbkdf2_final
.entry pbkdf2_final(
	.param .u64 .ptr .global .align 4 pbkdf2_final_param_0,
	.param .u64 .ptr .global .align 4 pbkdf2_final_param_1,
	.param .u64 .ptr .global .align 4 pbkdf2_final_param_2
)
{
	.local .align 16 .b8 	__local_depot2[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<3835>;
	.reg .b64 	%rd<58>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u64 	%rd5, [pbkdf2_final_param_0];
	ld.param.u64 	%rd6, [pbkdf2_final_param_1];
	ld.param.u64 	%rd7, [pbkdf2_final_param_2];
	mov.u32 	%r56, %ctaid.x;
	mov.u32 	%r57, %ntid.x;
	mov.u32 	%r58, %tid.x;
	mov.b32 	%r59, %envreg3;
	add.s32 	%r60, %r58, %r59;
	mad.lo.s32 	%r61, %r57, %r56, %r60;
	mul.wide.u32 	%rd8, %r61, 88;
	add.s64 	%rd9, %rd7, %rd8;
	add.s64 	%rd1, %rd9, 84;
	ld.global.u32 	%r62, [%rd9+84];
	add.s32 	%r1, %r62, 1;
	st.global.u32 	[%rd9+84], %r1;
	mul.lo.s32 	%r63, %r62, 5;
	ld.global.u32 	%r64, [%rd9+60];
	shf.l.wrap.b32 	%r65, %r64, %r64, 16;
	shl.b32 	%r66, %r65, 8;
	and.b32  	%r67, %r66, -16711936;
	shr.u32 	%r68, %r65, 8;
	and.b32  	%r69, %r68, 16711935;
	or.b32  	%r70, %r67, %r69;
	mul.wide.u32 	%rd10, %r61, 40;
	add.s64 	%rd11, %rd6, %rd10;
	mul.wide.u32 	%rd12, %r63, 4;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.u32 	[%rd13], %r70;
	ld.global.u32 	%r71, [%rd9+64];
	shf.l.wrap.b32 	%r72, %r71, %r71, 16;
	shl.b32 	%r73, %r72, 8;
	and.b32  	%r74, %r73, -16711936;
	shr.u32 	%r75, %r72, 8;
	and.b32  	%r76, %r75, 16711935;
	or.b32  	%r77, %r74, %r76;
	shl.b32 	%r78, %r62, 2;
	add.s32 	%r79, %r1, %r78;
	mul.wide.u32 	%rd14, %r79, 4;
	add.s64 	%rd15, %rd11, %rd14;
	st.global.u32 	[%rd15], %r77;
	ld.global.u32 	%r80, [%rd9+68];
	shf.l.wrap.b32 	%r81, %r80, %r80, 16;
	shl.b32 	%r82, %r81, 8;
	and.b32  	%r83, %r82, -16711936;
	shr.u32 	%r84, %r81, 8;
	and.b32  	%r85, %r84, 16711935;
	or.b32  	%r86, %r83, %r85;
	add.s32 	%r87, %r63, 2;
	mul.wide.u32 	%rd16, %r87, 4;
	add.s64 	%rd17, %rd11, %rd16;
	st.global.u32 	[%rd17], %r86;
	ld.global.u32 	%r88, [%rd9+72];
	shf.l.wrap.b32 	%r89, %r88, %r88, 16;
	shl.b32 	%r90, %r89, 8;
	and.b32  	%r91, %r90, -16711936;
	shr.u32 	%r92, %r89, 8;
	and.b32  	%r93, %r92, 16711935;
	or.b32  	%r94, %r91, %r93;
	add.s32 	%r95, %r63, 3;
	mul.wide.u32 	%rd18, %r95, 4;
	add.s64 	%rd19, %rd11, %rd18;
	st.global.u32 	[%rd19], %r94;
	ld.global.u32 	%r96, [%rd9+76];
	shf.l.wrap.b32 	%r97, %r96, %r96, 16;
	shl.b32 	%r98, %r97, 8;
	and.b32  	%r99, %r98, -16711936;
	shr.u32 	%r100, %r97, 8;
	and.b32  	%r101, %r100, 16711935;
	or.b32  	%r102, %r99, %r101;
	add.s32 	%r103, %r63, 4;
	mul.wide.u32 	%rd20, %r103, 4;
	add.s64 	%rd21, %rd11, %rd20;
	st.global.u32 	[%rd21], %r102;
	add.u64 	%rd2, %SPL, 0;
	mad.lo.s32 	%r104, %r62, 20, 20;
	setp.gt.u32 	%p1, %r104, 31;
	@%p1 bra 	$L__BB2_22;

	ld.global.u32 	%r2, [%rd5];
	ld.global.u32 	%r3819, [%rd1+-64];
	ld.global.u32 	%r3818, [%rd1+-60];
	ld.global.u32 	%r3817, [%rd1+-56];
	ld.global.u32 	%r3816, [%rd1+-52];
	ld.global.u32 	%r3815, [%rd1+-48];
	cvt.u16.u32 	%rs2, %r1;
	add.s16 	%rs1, %rs2, 1;
	setp.lt.u32 	%p2, %r2, 64;
	@%p2 bra 	$L__BB2_4;
	bra.uni 	$L__BB2_2;

$L__BB2_4:
	mov.u32 	%r3826, 0;
	mov.u32 	%r3821, %r2;
	bra.uni 	$L__BB2_5;

$L__BB2_2:
	mov.u32 	%r105, 0;
	mov.u32 	%r3821, %r2;
	mov.u32 	%r3814, %r105;

$L__BB2_3:
	cvt.u64.u32 	%rd23, %r3814;
	add.s64 	%rd24, %rd5, %rd23;
	ld.global.u32 	%r426, [%rd24+12];
	mov.u32 	%r427, 291;
	ld.global.u32 	%r429, [%rd24+16];
	ld.global.u32 	%r430, [%rd24+20];
	ld.global.u32 	%r431, [%rd24+24];
	prmt.b32 	%r432, %r431, %r105, %r427;
	prmt.b32 	%r433, %r430, %r105, %r427;
	prmt.b32 	%r434, %r429, %r105, %r427;
	prmt.b32 	%r435, %r426, %r105, %r427;
	st.local.v4.u32 	[%rd2], {%r435, %r434, %r433, %r432};
	ld.global.u32 	%r436, [%rd24+28];
	ld.global.u32 	%r437, [%rd24+32];
	ld.global.u32 	%r438, [%rd24+36];
	ld.global.u32 	%r439, [%rd24+40];
	prmt.b32 	%r440, %r439, %r105, %r427;
	prmt.b32 	%r441, %r438, %r105, %r427;
	prmt.b32 	%r442, %r437, %r105, %r427;
	prmt.b32 	%r443, %r436, %r105, %r427;
	st.local.v4.u32 	[%rd2+16], {%r443, %r442, %r441, %r440};
	ld.global.u32 	%r444, [%rd24+44];
	ld.global.u32 	%r445, [%rd24+48];
	ld.global.u32 	%r446, [%rd24+52];
	ld.global.u32 	%r447, [%rd24+56];
	prmt.b32 	%r448, %r447, %r105, %r427;
	prmt.b32 	%r449, %r446, %r105, %r427;
	prmt.b32 	%r450, %r445, %r105, %r427;
	prmt.b32 	%r451, %r444, %r105, %r427;
	st.local.v4.u32 	[%rd2+32], {%r451, %r450, %r449, %r448};
	ld.global.u32 	%r452, [%rd24+60];
	ld.global.u32 	%r453, [%rd24+64];
	ld.global.u32 	%r454, [%rd24+68];
	ld.global.u32 	%r455, [%rd24+72];
	prmt.b32 	%r456, %r455, %r105, %r427;
	prmt.b32 	%r457, %r454, %r105, %r427;
	prmt.b32 	%r458, %r453, %r105, %r427;
	prmt.b32 	%r459, %r452, %r105, %r427;
	st.local.v4.u32 	[%rd2+48], {%r459, %r458, %r457, %r456};
	add.s32 	%r3826, %r3814, 64;
	add.s32 	%r3821, %r3821, -64;
	shf.l.wrap.b32 	%r460, %r3819, %r3819, 5;
	add.s32 	%r461, %r460, %r3815;
	// begin inline asm
	lop3.b32 %r106, %r3818, %r3817, %r3816, 202;
	// end inline asm
	add.s32 	%r462, %r461, %r106;
	add.s32 	%r463, %r462, %r435;
	add.s32 	%r115, %r463, 1518500249;
	shf.l.wrap.b32 	%r464, %r115, %r115, 5;
	shf.l.wrap.b32 	%r117, %r3818, %r3818, 30;
	// begin inline asm
	lop3.b32 %r110, %r3819, %r117, %r3817, 202;
	// end inline asm
	add.s32 	%r465, %r3816, %r110;
	add.s32 	%r466, %r465, %r434;
	add.s32 	%r467, %r466, %r464;
	add.s32 	%r119, %r467, 1518500249;
	shf.l.wrap.b32 	%r468, %r119, %r119, 5;
	shf.l.wrap.b32 	%r121, %r3819, %r3819, 30;
	// begin inline asm
	lop3.b32 %r114, %r115, %r121, %r117, 202;
	// end inline asm
	add.s32 	%r469, %r3817, %r114;
	add.s32 	%r470, %r469, %r433;
	add.s32 	%r471, %r470, %r468;
	add.s32 	%r123, %r471, 1518500249;
	shf.l.wrap.b32 	%r125, %r115, %r115, 30;
	shf.l.wrap.b32 	%r472, %r123, %r123, 5;
	// begin inline asm
	lop3.b32 %r118, %r119, %r125, %r121, 202;
	// end inline asm
	add.s32 	%r473, %r117, %r118;
	add.s32 	%r474, %r473, %r432;
	add.s32 	%r475, %r474, %r472;
	add.s32 	%r127, %r475, 1518500249;
	shf.l.wrap.b32 	%r129, %r119, %r119, 30;
	shf.l.wrap.b32 	%r476, %r127, %r127, 5;
	// begin inline asm
	lop3.b32 %r122, %r123, %r129, %r125, 202;
	// end inline asm
	add.s32 	%r477, %r121, %r122;
	add.s32 	%r478, %r477, %r443;
	add.s32 	%r479, %r478, %r476;
	add.s32 	%r131, %r479, 1518500249;
	shf.l.wrap.b32 	%r133, %r123, %r123, 30;
	shf.l.wrap.b32 	%r480, %r131, %r131, 5;
	// begin inline asm
	lop3.b32 %r126, %r127, %r133, %r129, 202;
	// end inline asm
	add.s32 	%r481, %r125, %r126;
	add.s32 	%r482, %r481, %r442;
	add.s32 	%r483, %r482, %r480;
	add.s32 	%r135, %r483, 1518500249;
	shf.l.wrap.b32 	%r137, %r127, %r127, 30;
	shf.l.wrap.b32 	%r484, %r135, %r135, 5;
	// begin inline asm
	lop3.b32 %r130, %r131, %r137, %r133, 202;
	// end inline asm
	add.s32 	%r485, %r129, %r130;
	add.s32 	%r486, %r485, %r441;
	add.s32 	%r487, %r486, %r484;
	add.s32 	%r139, %r487, 1518500249;
	shf.l.wrap.b32 	%r141, %r131, %r131, 30;
	shf.l.wrap.b32 	%r488, %r139, %r139, 5;
	// begin inline asm
	lop3.b32 %r134, %r135, %r141, %r137, 202;
	// end inline asm
	add.s32 	%r489, %r134, %r440;
	add.s32 	%r490, %r489, %r133;
	add.s32 	%r491, %r490, %r488;
	add.s32 	%r143, %r491, 1518500249;
	shf.l.wrap.b32 	%r145, %r135, %r135, 30;
	shf.l.wrap.b32 	%r492, %r143, %r143, 5;
	// begin inline asm
	lop3.b32 %r138, %r139, %r145, %r141, 202;
	// end inline asm
	add.s32 	%r493, %r138, %r451;
	add.s32 	%r494, %r493, %r137;
	add.s32 	%r495, %r494, %r492;
	add.s32 	%r147, %r495, 1518500249;
	shf.l.wrap.b32 	%r149, %r139, %r139, 30;
	shf.l.wrap.b32 	%r496, %r147, %r147, 5;
	// begin inline asm
	lop3.b32 %r142, %r143, %r149, %r145, 202;
	// end inline asm
	add.s32 	%r497, %r142, %r450;
	add.s32 	%r498, %r497, %r141;
	add.s32 	%r499, %r498, %r496;
	add.s32 	%r151, %r499, 1518500249;
	shf.l.wrap.b32 	%r153, %r143, %r143, 30;
	shf.l.wrap.b32 	%r500, %r151, %r151, 5;
	// begin inline asm
	lop3.b32 %r146, %r147, %r153, %r149, 202;
	// end inline asm
	add.s32 	%r501, %r146, %r449;
	add.s32 	%r502, %r501, %r145;
	add.s32 	%r503, %r502, %r500;
	add.s32 	%r155, %r503, 1518500249;
	shf.l.wrap.b32 	%r157, %r147, %r147, 30;
	shf.l.wrap.b32 	%r504, %r155, %r155, 5;
	// begin inline asm
	lop3.b32 %r150, %r151, %r157, %r153, 202;
	// end inline asm
	add.s32 	%r505, %r150, %r448;
	add.s32 	%r506, %r505, %r149;
	add.s32 	%r507, %r506, %r504;
	add.s32 	%r159, %r507, 1518500249;
	shf.l.wrap.b32 	%r161, %r151, %r151, 30;
	shf.l.wrap.b32 	%r508, %r159, %r159, 5;
	// begin inline asm
	lop3.b32 %r154, %r155, %r161, %r157, 202;
	// end inline asm
	add.s32 	%r509, %r154, %r459;
	add.s32 	%r510, %r509, %r153;
	add.s32 	%r511, %r510, %r508;
	add.s32 	%r163, %r511, 1518500249;
	shf.l.wrap.b32 	%r165, %r155, %r155, 30;
	shf.l.wrap.b32 	%r512, %r163, %r163, 5;
	// begin inline asm
	lop3.b32 %r158, %r159, %r165, %r161, 202;
	// end inline asm
	add.s32 	%r513, %r158, %r458;
	add.s32 	%r514, %r513, %r157;
	add.s32 	%r515, %r514, %r512;
	add.s32 	%r167, %r515, 1518500249;
	shf.l.wrap.b32 	%r169, %r159, %r159, 30;
	shf.l.wrap.b32 	%r516, %r167, %r167, 5;
	// begin inline asm
	lop3.b32 %r162, %r163, %r169, %r165, 202;
	// end inline asm
	add.s32 	%r517, %r162, %r457;
	add.s32 	%r518, %r517, %r161;
	add.s32 	%r519, %r518, %r516;
	add.s32 	%r171, %r519, 1518500249;
	shf.l.wrap.b32 	%r173, %r163, %r163, 30;
	shf.l.wrap.b32 	%r520, %r171, %r171, 5;
	// begin inline asm
	lop3.b32 %r166, %r167, %r173, %r169, 202;
	// end inline asm
	add.s32 	%r521, %r166, %r456;
	add.s32 	%r522, %r521, %r165;
	add.s32 	%r523, %r522, %r520;
	add.s32 	%r175, %r523, 1518500249;
	shf.l.wrap.b32 	%r177, %r167, %r167, 30;
	shf.l.wrap.b32 	%r524, %r175, %r175, 5;
	// begin inline asm
	lop3.b32 %r170, %r171, %r177, %r173, 202;
	// end inline asm
	xor.b32  	%r525, %r451, %r458;
	xor.b32  	%r526, %r525, %r433;
	xor.b32  	%r527, %r526, %r435;
	shf.l.wrap.b32 	%r528, %r527, %r527, 1;
	add.s32 	%r529, %r170, %r528;
	add.s32 	%r530, %r529, %r169;
	add.s32 	%r531, %r530, %r524;
	add.s32 	%r179, %r531, 1518500249;
	shf.l.wrap.b32 	%r181, %r171, %r171, 30;
	shf.l.wrap.b32 	%r532, %r179, %r179, 5;
	// begin inline asm
	lop3.b32 %r174, %r175, %r181, %r177, 202;
	// end inline asm
	xor.b32  	%r533, %r450, %r457;
	xor.b32  	%r534, %r533, %r432;
	xor.b32  	%r535, %r534, %r434;
	shf.l.wrap.b32 	%r536, %r535, %r535, 1;
	add.s32 	%r537, %r174, %r536;
	add.s32 	%r538, %r537, %r173;
	add.s32 	%r539, %r538, %r532;
	add.s32 	%r183, %r539, 1518500249;
	shf.l.wrap.b32 	%r185, %r175, %r175, 30;
	shf.l.wrap.b32 	%r540, %r183, %r183, 5;
	// begin inline asm
	lop3.b32 %r178, %r179, %r185, %r181, 202;
	// end inline asm
	xor.b32  	%r541, %r449, %r456;
	xor.b32  	%r542, %r541, %r443;
	xor.b32  	%r543, %r542, %r433;
	shf.l.wrap.b32 	%r544, %r543, %r543, 1;
	add.s32 	%r545, %r178, %r544;
	add.s32 	%r546, %r545, %r177;
	add.s32 	%r547, %r546, %r540;
	add.s32 	%r187, %r547, 1518500249;
	shf.l.wrap.b32 	%r189, %r179, %r179, 30;
	shf.l.wrap.b32 	%r548, %r187, %r187, 5;
	// begin inline asm
	lop3.b32 %r182, %r183, %r189, %r185, 202;
	// end inline asm
	xor.b32  	%r549, %r448, %r528;
	xor.b32  	%r550, %r549, %r442;
	xor.b32  	%r551, %r550, %r432;
	shf.l.wrap.b32 	%r552, %r551, %r551, 1;
	add.s32 	%r553, %r182, %r552;
	add.s32 	%r554, %r553, %r181;
	add.s32 	%r555, %r554, %r548;
	add.s32 	%r191, %r555, 1518500249;
	shf.l.wrap.b32 	%r193, %r183, %r183, 30;
	shf.l.wrap.b32 	%r556, %r191, %r191, 5;
	// begin inline asm
	lop3.b32 %r186, %r187, %r193, %r189, 150;
	// end inline asm
	xor.b32  	%r557, %r459, %r536;
	xor.b32  	%r558, %r557, %r441;
	xor.b32  	%r559, %r558, %r443;
	shf.l.wrap.b32 	%r560, %r559, %r559, 1;
	add.s32 	%r561, %r186, %r560;
	add.s32 	%r562, %r561, %r185;
	add.s32 	%r563, %r562, %r556;
	add.s32 	%r195, %r563, 1859775393;
	shf.l.wrap.b32 	%r197, %r187, %r187, 30;
	shf.l.wrap.b32 	%r564, %r195, %r195, 5;
	// begin inline asm
	lop3.b32 %r190, %r191, %r197, %r193, 150;
	// end inline asm
	xor.b32  	%r565, %r458, %r544;
	xor.b32  	%r566, %r565, %r440;
	xor.b32  	%r567, %r566, %r442;
	shf.l.wrap.b32 	%r568, %r567, %r567, 1;
	add.s32 	%r569, %r190, %r568;
	add.s32 	%r570, %r569, %r189;
	add.s32 	%r571, %r570, %r564;
	add.s32 	%r199, %r571, 1859775393;
	shf.l.wrap.b32 	%r201, %r191, %r191, 30;
	shf.l.wrap.b32 	%r572, %r199, %r199, 5;
	// begin inline asm
	lop3.b32 %r194, %r195, %r201, %r197, 150;
	// end inline asm
	xor.b32  	%r573, %r457, %r552;
	xor.b32  	%r574, %r573, %r451;
	xor.b32  	%r575, %r574, %r441;
	shf.l.wrap.b32 	%r576, %r575, %r575, 1;
	add.s32 	%r577, %r194, %r576;
	add.s32 	%r578, %r577, %r193;
	add.s32 	%r579, %r578, %r572;
	add.s32 	%r203, %r579, 1859775393;
	shf.l.wrap.b32 	%r205, %r195, %r195, 30;
	shf.l.wrap.b32 	%r580, %r203, %r203, 5;
	// begin inline asm
	lop3.b32 %r198, %r199, %r205, %r201, 150;
	// end inline asm
	xor.b32  	%r581, %r456, %r560;
	xor.b32  	%r582, %r581, %r450;
	xor.b32  	%r583, %r582, %r440;
	shf.l.wrap.b32 	%r584, %r583, %r583, 1;
	add.s32 	%r585, %r198, %r584;
	add.s32 	%r586, %r585, %r197;
	add.s32 	%r587, %r586, %r580;
	add.s32 	%r207, %r587, 1859775393;
	shf.l.wrap.b32 	%r209, %r199, %r199, 30;
	shf.l.wrap.b32 	%r588, %r207, %r207, 5;
	// begin inline asm
	lop3.b32 %r202, %r203, %r209, %r205, 150;
	// end inline asm
	xor.b32  	%r589, %r568, %r528;
	xor.b32  	%r590, %r589, %r449;
	xor.b32  	%r591, %r590, %r451;
	shf.l.wrap.b32 	%r592, %r591, %r591, 1;
	add.s32 	%r593, %r202, %r592;
	add.s32 	%r594, %r593, %r201;
	add.s32 	%r595, %r594, %r588;
	add.s32 	%r211, %r595, 1859775393;
	shf.l.wrap.b32 	%r213, %r203, %r203, 30;
	shf.l.wrap.b32 	%r596, %r211, %r211, 5;
	// begin inline asm
	lop3.b32 %r206, %r207, %r213, %r209, 150;
	// end inline asm
	xor.b32  	%r597, %r576, %r536;
	xor.b32  	%r598, %r597, %r448;
	xor.b32  	%r599, %r598, %r450;
	shf.l.wrap.b32 	%r600, %r599, %r599, 1;
	add.s32 	%r601, %r206, %r600;
	add.s32 	%r602, %r601, %r205;
	add.s32 	%r603, %r602, %r596;
	add.s32 	%r215, %r603, 1859775393;
	shf.l.wrap.b32 	%r217, %r207, %r207, 30;
	shf.l.wrap.b32 	%r604, %r215, %r215, 5;
	// begin inline asm
	lop3.b32 %r210, %r211, %r217, %r213, 150;
	// end inline asm
	xor.b32  	%r605, %r584, %r544;
	xor.b32  	%r606, %r605, %r459;
	xor.b32  	%r607, %r606, %r449;
	shf.l.wrap.b32 	%r608, %r607, %r607, 1;
	add.s32 	%r609, %r210, %r608;
	add.s32 	%r610, %r609, %r209;
	add.s32 	%r611, %r610, %r604;
	add.s32 	%r219, %r611, 1859775393;
	shf.l.wrap.b32 	%r221, %r211, %r211, 30;
	shf.l.wrap.b32 	%r612, %r219, %r219, 5;
	// begin inline asm
	lop3.b32 %r214, %r215, %r221, %r217, 150;
	// end inline asm
	xor.b32  	%r613, %r592, %r552;
	xor.b32  	%r614, %r613, %r458;
	xor.b32  	%r615, %r614, %r448;
	shf.l.wrap.b32 	%r616, %r615, %r615, 1;
	add.s32 	%r617, %r214, %r616;
	add.s32 	%r618, %r617, %r213;
	add.s32 	%r619, %r618, %r612;
	add.s32 	%r223, %r619, 1859775393;
	shf.l.wrap.b32 	%r225, %r215, %r215, 30;
	shf.l.wrap.b32 	%r620, %r223, %r223, 5;
	// begin inline asm
	lop3.b32 %r218, %r219, %r225, %r221, 150;
	// end inline asm
	xor.b32  	%r621, %r600, %r560;
	xor.b32  	%r622, %r621, %r457;
	xor.b32  	%r623, %r622, %r459;
	shf.l.wrap.b32 	%r624, %r623, %r623, 1;
	add.s32 	%r625, %r218, %r624;
	add.s32 	%r626, %r625, %r217;
	add.s32 	%r627, %r626, %r620;
	add.s32 	%r227, %r627, 1859775393;
	shf.l.wrap.b32 	%r229, %r219, %r219, 30;
	shf.l.wrap.b32 	%r628, %r227, %r227, 5;
	// begin inline asm
	lop3.b32 %r222, %r223, %r229, %r225, 150;
	// end inline asm
	xor.b32  	%r629, %r608, %r568;
	xor.b32  	%r630, %r629, %r456;
	xor.b32  	%r631, %r630, %r458;
	shf.l.wrap.b32 	%r632, %r631, %r631, 1;
	add.s32 	%r633, %r222, %r632;
	add.s32 	%r634, %r633, %r221;
	add.s32 	%r635, %r634, %r628;
	add.s32 	%r231, %r635, 1859775393;
	shf.l.wrap.b32 	%r233, %r223, %r223, 30;
	shf.l.wrap.b32 	%r636, %r231, %r231, 5;
	// begin inline asm
	lop3.b32 %r226, %r227, %r233, %r229, 150;
	// end inline asm
	xor.b32  	%r637, %r576, %r528;
	xor.b32  	%r638, %r637, %r616;
	xor.b32  	%r639, %r638, %r457;
	shf.l.wrap.b32 	%r640, %r639, %r639, 1;
	add.s32 	%r641, %r226, %r640;
	add.s32 	%r642, %r641, %r225;
	add.s32 	%r643, %r642, %r636;
	add.s32 	%r235, %r643, 1859775393;
	shf.l.wrap.b32 	%r237, %r227, %r227, 30;
	shf.l.wrap.b32 	%r644, %r235, %r235, 5;
	// begin inline asm
	lop3.b32 %r230, %r231, %r237, %r233, 150;
	// end inline asm
	xor.b32  	%r645, %r584, %r536;
	xor.b32  	%r646, %r645, %r624;
	xor.b32  	%r647, %r646, %r456;
	shf.l.wrap.b32 	%r648, %r647, %r647, 1;
	add.s32 	%r649, %r230, %r648;
	add.s32 	%r650, %r649, %r229;
	add.s32 	%r651, %r650, %r644;
	add.s32 	%r239, %r651, 1859775393;
	shf.l.wrap.b32 	%r241, %r231, %r231, 30;
	shf.l.wrap.b32 	%r652, %r239, %r239, 5;
	// begin inline asm
	lop3.b32 %r234, %r235, %r241, %r237, 150;
	// end inline asm
	xor.b32  	%r653, %r544, %r528;
	xor.b32  	%r654, %r653, %r592;
	xor.b32  	%r655, %r654, %r632;
	shf.l.wrap.b32 	%r656, %r655, %r655, 1;
	add.s32 	%r657, %r234, %r656;
	add.s32 	%r658, %r657, %r233;
	add.s32 	%r659, %r658, %r652;
	add.s32 	%r243, %r659, 1859775393;
	shf.l.wrap.b32 	%r245, %r235, %r235, 30;
	shf.l.wrap.b32 	%r660, %r243, %r243, 5;
	// begin inline asm
	lop3.b32 %r238, %r239, %r245, %r241, 150;
	// end inline asm
	xor.b32  	%r661, %r552, %r536;
	xor.b32  	%r662, %r661, %r600;
	xor.b32  	%r663, %r662, %r640;
	shf.l.wrap.b32 	%r664, %r663, %r663, 1;
	add.s32 	%r665, %r238, %r664;
	add.s32 	%r666, %r665, %r237;
	add.s32 	%r667, %r666, %r660;
	add.s32 	%r247, %r667, 1859775393;
	shf.l.wrap.b32 	%r249, %r239, %r239, 30;
	shf.l.wrap.b32 	%r668, %r247, %r247, 5;
	// begin inline asm
	lop3.b32 %r242, %r243, %r249, %r245, 150;
	// end inline asm
	xor.b32  	%r669, %r560, %r544;
	xor.b32  	%r670, %r669, %r608;
	xor.b32  	%r671, %r670, %r648;
	shf.l.wrap.b32 	%r672, %r671, %r671, 1;
	add.s32 	%r673, %r242, %r672;
	add.s32 	%r674, %r673, %r241;
	add.s32 	%r675, %r674, %r668;
	add.s32 	%r251, %r675, 1859775393;
	shf.l.wrap.b32 	%r253, %r243, %r243, 30;
	shf.l.wrap.b32 	%r676, %r251, %r251, 5;
	// begin inline asm
	lop3.b32 %r246, %r247, %r253, %r249, 150;
	// end inline asm
	xor.b32  	%r677, %r568, %r552;
	xor.b32  	%r678, %r677, %r616;
	xor.b32  	%r679, %r678, %r656;
	shf.l.wrap.b32 	%r680, %r679, %r679, 1;
	add.s32 	%r681, %r246, %r680;
	add.s32 	%r682, %r681, %r245;
	add.s32 	%r683, %r682, %r676;
	add.s32 	%r255, %r683, 1859775393;
	shf.l.wrap.b32 	%r257, %r247, %r247, 30;
	shf.l.wrap.b32 	%r684, %r255, %r255, 5;
	// begin inline asm
	lop3.b32 %r250, %r251, %r257, %r253, 150;
	// end inline asm
	xor.b32  	%r685, %r576, %r560;
	xor.b32  	%r686, %r685, %r624;
	xor.b32  	%r687, %r686, %r664;
	shf.l.wrap.b32 	%r688, %r687, %r687, 1;
	add.s32 	%r689, %r250, %r688;
	add.s32 	%r690, %r689, %r249;
	add.s32 	%r691, %r690, %r684;
	add.s32 	%r259, %r691, 1859775393;
	shf.l.wrap.b32 	%r261, %r251, %r251, 30;
	shf.l.wrap.b32 	%r692, %r259, %r259, 5;
	// begin inline asm
	lop3.b32 %r254, %r255, %r261, %r257, 150;
	// end inline asm
	xor.b32  	%r693, %r584, %r568;
	xor.b32  	%r694, %r693, %r632;
	xor.b32  	%r695, %r694, %r672;
	shf.l.wrap.b32 	%r696, %r695, %r695, 1;
	add.s32 	%r697, %r254, %r696;
	add.s32 	%r698, %r697, %r253;
	add.s32 	%r699, %r698, %r692;
	add.s32 	%r263, %r699, 1859775393;
	shf.l.wrap.b32 	%r265, %r255, %r255, 30;
	shf.l.wrap.b32 	%r700, %r263, %r263, 5;
	// begin inline asm
	lop3.b32 %r258, %r259, %r265, %r261, 150;
	// end inline asm
	xor.b32  	%r701, %r592, %r576;
	xor.b32  	%r702, %r701, %r640;
	xor.b32  	%r703, %r702, %r680;
	shf.l.wrap.b32 	%r704, %r703, %r703, 1;
	add.s32 	%r705, %r258, %r704;
	add.s32 	%r706, %r705, %r257;
	add.s32 	%r707, %r706, %r700;
	add.s32 	%r267, %r707, 1859775393;
	shf.l.wrap.b32 	%r269, %r259, %r259, 30;
	shf.l.wrap.b32 	%r708, %r267, %r267, 5;
	// begin inline asm
	lop3.b32 %r262, %r263, %r269, %r265, 150;
	// end inline asm
	xor.b32  	%r709, %r600, %r584;
	xor.b32  	%r710, %r709, %r648;
	xor.b32  	%r711, %r710, %r688;
	shf.l.wrap.b32 	%r712, %r711, %r711, 1;
	add.s32 	%r713, %r262, %r712;
	add.s32 	%r714, %r713, %r261;
	add.s32 	%r715, %r714, %r708;
	add.s32 	%r271, %r715, 1859775393;
	shf.l.wrap.b32 	%r273, %r263, %r263, 30;
	shf.l.wrap.b32 	%r716, %r271, %r271, 5;
	// begin inline asm
	lop3.b32 %r266, %r267, %r273, %r269, 232;
	// end inline asm
	xor.b32  	%r717, %r608, %r592;
	xor.b32  	%r718, %r717, %r656;
	xor.b32  	%r719, %r718, %r696;
	shf.l.wrap.b32 	%r720, %r719, %r719, 1;
	add.s32 	%r721, %r266, %r720;
	add.s32 	%r722, %r721, %r265;
	add.s32 	%r723, %r722, %r716;
	add.s32 	%r275, %r723, -1894007588;
	shf.l.wrap.b32 	%r277, %r267, %r267, 30;
	shf.l.wrap.b32 	%r724, %r275, %r275, 5;
	// begin inline asm
	lop3.b32 %r270, %r271, %r277, %r273, 232;
	// end inline asm
	xor.b32  	%r725, %r616, %r600;
	xor.b32  	%r726, %r725, %r664;
	xor.b32  	%r727, %r726, %r704;
	shf.l.wrap.b32 	%r728, %r727, %r727, 1;
	add.s32 	%r729, %r270, %r728;
	add.s32 	%r730, %r729, %r269;
	add.s32 	%r731, %r730, %r724;
	add.s32 	%r279, %r731, -1894007588;
	shf.l.wrap.b32 	%r281, %r271, %r271, 30;
	shf.l.wrap.b32 	%r732, %r279, %r279, 5;
	// begin inline asm
	lop3.b32 %r274, %r275, %r281, %r277, 232;
	// end inline asm
	xor.b32  	%r733, %r624, %r608;
	xor.b32  	%r734, %r733, %r672;
	xor.b32  	%r735, %r734, %r712;
	shf.l.wrap.b32 	%r736, %r735, %r735, 1;
	add.s32 	%r737, %r274, %r736;
	add.s32 	%r738, %r737, %r273;
	add.s32 	%r739, %r738, %r732;
	add.s32 	%r283, %r739, -1894007588;
	shf.l.wrap.b32 	%r285, %r275, %r275, 30;
	shf.l.wrap.b32 	%r740, %r283, %r283, 5;
	// begin inline asm
	lop3.b32 %r278, %r279, %r285, %r281, 232;
	// end inline asm
	xor.b32  	%r741, %r632, %r616;
	xor.b32  	%r742, %r741, %r680;
	xor.b32  	%r743, %r742, %r720;
	shf.l.wrap.b32 	%r744, %r743, %r743, 1;
	add.s32 	%r745, %r278, %r744;
	add.s32 	%r746, %r745, %r277;
	add.s32 	%r747, %r746, %r740;
	add.s32 	%r287, %r747, -1894007588;
	shf.l.wrap.b32 	%r289, %r279, %r279, 30;
	shf.l.wrap.b32 	%r748, %r287, %r287, 5;
	// begin inline asm
	lop3.b32 %r282, %r283, %r289, %r285, 232;
	// end inline asm
	xor.b32  	%r749, %r640, %r624;
	xor.b32  	%r750, %r749, %r688;
	xor.b32  	%r751, %r750, %r728;
	shf.l.wrap.b32 	%r752, %r751, %r751, 1;
	add.s32 	%r753, %r282, %r752;
	add.s32 	%r754, %r753, %r281;
	add.s32 	%r755, %r754, %r748;
	add.s32 	%r291, %r755, -1894007588;
	shf.l.wrap.b32 	%r293, %r283, %r283, 30;
	shf.l.wrap.b32 	%r756, %r291, %r291, 5;
	// begin inline asm
	lop3.b32 %r286, %r287, %r293, %r289, 232;
	// end inline asm
	xor.b32  	%r757, %r648, %r632;
	xor.b32  	%r758, %r757, %r696;
	xor.b32  	%r759, %r758, %r736;
	shf.l.wrap.b32 	%r760, %r759, %r759, 1;
	add.s32 	%r761, %r286, %r760;
	add.s32 	%r762, %r761, %r285;
	add.s32 	%r763, %r762, %r756;
	add.s32 	%r295, %r763, -1894007588;
	shf.l.wrap.b32 	%r297, %r287, %r287, 30;
	shf.l.wrap.b32 	%r764, %r295, %r295, 5;
	// begin inline asm
	lop3.b32 %r290, %r291, %r297, %r293, 232;
	// end inline asm
	xor.b32  	%r765, %r656, %r640;
	xor.b32  	%r766, %r765, %r704;
	xor.b32  	%r767, %r766, %r744;
	shf.l.wrap.b32 	%r768, %r767, %r767, 1;
	add.s32 	%r769, %r290, %r768;
	add.s32 	%r770, %r769, %r289;
	add.s32 	%r771, %r770, %r764;
	add.s32 	%r299, %r771, -1894007588;
	shf.l.wrap.b32 	%r301, %r291, %r291, 30;
	shf.l.wrap.b32 	%r772, %r299, %r299, 5;
	// begin inline asm
	lop3.b32 %r294, %r295, %r301, %r297, 232;
	// end inline asm
	xor.b32  	%r773, %r664, %r648;
	xor.b32  	%r774, %r773, %r712;
	xor.b32  	%r775, %r774, %r752;
	shf.l.wrap.b32 	%r776, %r775, %r775, 1;
	add.s32 	%r777, %r294, %r776;
	add.s32 	%r778, %r777, %r293;
	add.s32 	%r779, %r778, %r772;
	add.s32 	%r303, %r779, -1894007588;
	shf.l.wrap.b32 	%r305, %r295, %r295, 30;
	shf.l.wrap.b32 	%r780, %r303, %r303, 5;
	// begin inline asm
	lop3.b32 %r298, %r299, %r305, %r301, 232;
	// end inline asm
	xor.b32  	%r781, %r672, %r656;
	xor.b32  	%r782, %r781, %r720;
	xor.b32  	%r783, %r782, %r760;
	shf.l.wrap.b32 	%r784, %r783, %r783, 1;
	add.s32 	%r785, %r298, %r784;
	add.s32 	%r786, %r785, %r297;
	add.s32 	%r787, %r786, %r780;
	add.s32 	%r307, %r787, -1894007588;
	shf.l.wrap.b32 	%r309, %r299, %r299, 30;
	shf.l.wrap.b32 	%r788, %r307, %r307, 5;
	// begin inline asm
	lop3.b32 %r302, %r303, %r309, %r305, 232;
	// end inline asm
	xor.b32  	%r789, %r680, %r664;
	xor.b32  	%r790, %r789, %r728;
	xor.b32  	%r791, %r790, %r768;
	shf.l.wrap.b32 	%r792, %r791, %r791, 1;
	add.s32 	%r793, %r302, %r792;
	add.s32 	%r794, %r793, %r301;
	add.s32 	%r795, %r794, %r788;
	add.s32 	%r311, %r795, -1894007588;
	shf.l.wrap.b32 	%r313, %r303, %r303, 30;
	shf.l.wrap.b32 	%r796, %r311, %r311, 5;
	// begin inline asm
	lop3.b32 %r306, %r307, %r313, %r309, 232;
	// end inline asm
	xor.b32  	%r797, %r688, %r672;
	xor.b32  	%r798, %r797, %r736;
	xor.b32  	%r799, %r798, %r776;
	shf.l.wrap.b32 	%r800, %r799, %r799, 1;
	add.s32 	%r801, %r306, %r800;
	add.s32 	%r802, %r801, %r305;
	add.s32 	%r803, %r802, %r796;
	add.s32 	%r315, %r803, -1894007588;
	shf.l.wrap.b32 	%r317, %r307, %r307, 30;
	shf.l.wrap.b32 	%r804, %r315, %r315, 5;
	// begin inline asm
	lop3.b32 %r310, %r311, %r317, %r313, 232;
	// end inline asm
	xor.b32  	%r805, %r696, %r680;
	xor.b32  	%r806, %r805, %r744;
	xor.b32  	%r807, %r806, %r784;
	shf.l.wrap.b32 	%r808, %r807, %r807, 1;
	add.s32 	%r809, %r310, %r808;
	add.s32 	%r810, %r809, %r309;
	add.s32 	%r811, %r810, %r804;
	add.s32 	%r319, %r811, -1894007588;
	shf.l.wrap.b32 	%r321, %r311, %r311, 30;
	shf.l.wrap.b32 	%r812, %r319, %r319, 5;
	// begin inline asm
	lop3.b32 %r314, %r315, %r321, %r317, 232;
	// end inline asm
	xor.b32  	%r813, %r704, %r688;
	xor.b32  	%r814, %r813, %r752;
	xor.b32  	%r815, %r814, %r792;
	shf.l.wrap.b32 	%r816, %r815, %r815, 1;
	add.s32 	%r817, %r314, %r816;
	add.s32 	%r818, %r817, %r313;
	add.s32 	%r819, %r818, %r812;
	add.s32 	%r323, %r819, -1894007588;
	shf.l.wrap.b32 	%r325, %r315, %r315, 30;
	shf.l.wrap.b32 	%r820, %r323, %r323, 5;
	// begin inline asm
	lop3.b32 %r318, %r319, %r325, %r321, 232;
	// end inline asm
	xor.b32  	%r821, %r712, %r696;
	xor.b32  	%r822, %r821, %r760;
	xor.b32  	%r823, %r822, %r800;
	shf.l.wrap.b32 	%r824, %r823, %r823, 1;
	add.s32 	%r825, %r318, %r824;
	add.s32 	%r826, %r825, %r317;
	add.s32 	%r827, %r826, %r820;
	add.s32 	%r327, %r827, -1894007588;
	shf.l.wrap.b32 	%r329, %r319, %r319, 30;
	shf.l.wrap.b32 	%r828, %r327, %r327, 5;
	// begin inline asm
	lop3.b32 %r322, %r323, %r329, %r325, 232;
	// end inline asm
	xor.b32  	%r829, %r720, %r704;
	xor.b32  	%r830, %r829, %r768;
	xor.b32  	%r831, %r830, %r808;
	shf.l.wrap.b32 	%r832, %r831, %r831, 1;
	add.s32 	%r833, %r322, %r832;
	add.s32 	%r834, %r833, %r321;
	add.s32 	%r835, %r834, %r828;
	add.s32 	%r331, %r835, -1894007588;
	shf.l.wrap.b32 	%r333, %r323, %r323, 30;
	shf.l.wrap.b32 	%r836, %r331, %r331, 5;
	// begin inline asm
	lop3.b32 %r326, %r327, %r333, %r329, 232;
	// end inline asm
	xor.b32  	%r837, %r728, %r712;
	xor.b32  	%r838, %r837, %r776;
	xor.b32  	%r839, %r838, %r816;
	shf.l.wrap.b32 	%r840, %r839, %r839, 1;
	add.s32 	%r841, %r326, %r840;
	add.s32 	%r842, %r841, %r325;
	add.s32 	%r843, %r842, %r836;
	add.s32 	%r335, %r843, -1894007588;
	shf.l.wrap.b32 	%r337, %r327, %r327, 30;
	shf.l.wrap.b32 	%r844, %r335, %r335, 5;
	// begin inline asm
	lop3.b32 %r330, %r331, %r337, %r333, 232;
	// end inline asm
	xor.b32  	%r845, %r736, %r720;
	xor.b32  	%r846, %r845, %r784;
	xor.b32  	%r847, %r846, %r824;
	shf.l.wrap.b32 	%r848, %r847, %r847, 1;
	add.s32 	%r849, %r330, %r848;
	add.s32 	%r850, %r849, %r329;
	add.s32 	%r851, %r850, %r844;
	add.s32 	%r339, %r851, -1894007588;
	shf.l.wrap.b32 	%r341, %r331, %r331, 30;
	shf.l.wrap.b32 	%r852, %r339, %r339, 5;
	// begin inline asm
	lop3.b32 %r334, %r335, %r341, %r337, 232;
	// end inline asm
	xor.b32  	%r853, %r744, %r728;
	xor.b32  	%r854, %r853, %r792;
	xor.b32  	%r855, %r854, %r832;
	shf.l.wrap.b32 	%r856, %r855, %r855, 1;
	add.s32 	%r857, %r334, %r856;
	add.s32 	%r858, %r857, %r333;
	add.s32 	%r859, %r858, %r852;
	add.s32 	%r343, %r859, -1894007588;
	shf.l.wrap.b32 	%r345, %r335, %r335, 30;
	shf.l.wrap.b32 	%r860, %r343, %r343, 5;
	// begin inline asm
	lop3.b32 %r338, %r339, %r345, %r341, 232;
	// end inline asm
	xor.b32  	%r861, %r752, %r736;
	xor.b32  	%r862, %r861, %r800;
	xor.b32  	%r863, %r862, %r840;
	shf.l.wrap.b32 	%r864, %r863, %r863, 1;
	add.s32 	%r865, %r338, %r864;
	add.s32 	%r866, %r865, %r337;
	add.s32 	%r867, %r866, %r860;
	add.s32 	%r347, %r867, -1894007588;
	shf.l.wrap.b32 	%r349, %r339, %r339, 30;
	shf.l.wrap.b32 	%r868, %r347, %r347, 5;
	// begin inline asm
	lop3.b32 %r342, %r343, %r349, %r345, 232;
	// end inline asm
	xor.b32  	%r869, %r760, %r744;
	xor.b32  	%r870, %r869, %r808;
	xor.b32  	%r871, %r870, %r848;
	shf.l.wrap.b32 	%r872, %r871, %r871, 1;
	add.s32 	%r873, %r342, %r872;
	add.s32 	%r874, %r873, %r341;
	add.s32 	%r875, %r874, %r868;
	add.s32 	%r351, %r875, -1894007588;
	shf.l.wrap.b32 	%r353, %r343, %r343, 30;
	shf.l.wrap.b32 	%r876, %r351, %r351, 5;
	// begin inline asm
	lop3.b32 %r346, %r347, %r353, %r349, 150;
	// end inline asm
	xor.b32  	%r877, %r768, %r752;
	xor.b32  	%r878, %r877, %r816;
	xor.b32  	%r879, %r878, %r856;
	shf.l.wrap.b32 	%r880, %r879, %r879, 1;
	add.s32 	%r881, %r346, %r880;
	add.s32 	%r882, %r881, %r345;
	add.s32 	%r883, %r882, %r876;
	add.s32 	%r355, %r883, -899497514;
	shf.l.wrap.b32 	%r357, %r347, %r347, 30;
	shf.l.wrap.b32 	%r884, %r355, %r355, 5;
	// begin inline asm
	lop3.b32 %r350, %r351, %r357, %r353, 150;
	// end inline asm
	xor.b32  	%r885, %r776, %r760;
	xor.b32  	%r886, %r885, %r824;
	xor.b32  	%r887, %r886, %r864;
	shf.l.wrap.b32 	%r888, %r887, %r887, 1;
	add.s32 	%r889, %r350, %r888;
	add.s32 	%r890, %r889, %r349;
	add.s32 	%r891, %r890, %r884;
	add.s32 	%r359, %r891, -899497514;
	shf.l.wrap.b32 	%r361, %r351, %r351, 30;
	shf.l.wrap.b32 	%r892, %r359, %r359, 5;
	// begin inline asm
	lop3.b32 %r354, %r355, %r361, %r357, 150;
	// end inline asm
	xor.b32  	%r893, %r784, %r768;
	xor.b32  	%r894, %r893, %r832;
	xor.b32  	%r895, %r894, %r872;
	shf.l.wrap.b32 	%r896, %r895, %r895, 1;
	add.s32 	%r897, %r354, %r896;
	add.s32 	%r898, %r897, %r353;
	add.s32 	%r899, %r898, %r892;
	add.s32 	%r363, %r899, -899497514;
	shf.l.wrap.b32 	%r365, %r355, %r355, 30;
	shf.l.wrap.b32 	%r900, %r363, %r363, 5;
	// begin inline asm
	lop3.b32 %r358, %r359, %r365, %r361, 150;
	// end inline asm
	xor.b32  	%r901, %r792, %r776;
	xor.b32  	%r902, %r901, %r840;
	xor.b32  	%r903, %r902, %r880;
	shf.l.wrap.b32 	%r904, %r903, %r903, 1;
	add.s32 	%r905, %r358, %r904;
	add.s32 	%r906, %r905, %r357;
	add.s32 	%r907, %r906, %r900;
	add.s32 	%r367, %r907, -899497514;
	shf.l.wrap.b32 	%r369, %r359, %r359, 30;
	shf.l.wrap.b32 	%r908, %r367, %r367, 5;
	// begin inline asm
	lop3.b32 %r362, %r363, %r369, %r365, 150;
	// end inline asm
	xor.b32  	%r909, %r800, %r784;
	xor.b32  	%r910, %r909, %r848;
	xor.b32  	%r911, %r910, %r888;
	shf.l.wrap.b32 	%r912, %r911, %r911, 1;
	add.s32 	%r913, %r362, %r912;
	add.s32 	%r914, %r913, %r361;
	add.s32 	%r915, %r914, %r908;
	add.s32 	%r371, %r915, -899497514;
	shf.l.wrap.b32 	%r373, %r363, %r363, 30;
	shf.l.wrap.b32 	%r916, %r371, %r371, 5;
	// begin inline asm
	lop3.b32 %r366, %r367, %r373, %r369, 150;
	// end inline asm
	xor.b32  	%r917, %r808, %r792;
	xor.b32  	%r918, %r917, %r856;
	xor.b32  	%r919, %r918, %r896;
	shf.l.wrap.b32 	%r920, %r919, %r919, 1;
	add.s32 	%r921, %r366, %r920;
	add.s32 	%r922, %r921, %r365;
	add.s32 	%r923, %r922, %r916;
	add.s32 	%r375, %r923, -899497514;
	shf.l.wrap.b32 	%r377, %r367, %r367, 30;
	shf.l.wrap.b32 	%r924, %r375, %r375, 5;
	// begin inline asm
	lop3.b32 %r370, %r371, %r377, %r373, 150;
	// end inline asm
	xor.b32  	%r925, %r816, %r800;
	xor.b32  	%r926, %r925, %r864;
	xor.b32  	%r927, %r926, %r904;
	shf.l.wrap.b32 	%r928, %r927, %r927, 1;
	add.s32 	%r929, %r370, %r928;
	add.s32 	%r930, %r929, %r369;
	add.s32 	%r931, %r930, %r924;
	add.s32 	%r379, %r931, -899497514;
	shf.l.wrap.b32 	%r381, %r371, %r371, 30;
	shf.l.wrap.b32 	%r932, %r379, %r379, 5;
	// begin inline asm
	lop3.b32 %r374, %r375, %r381, %r377, 150;
	// end inline asm
	xor.b32  	%r933, %r824, %r808;
	xor.b32  	%r934, %r933, %r872;
	xor.b32  	%r935, %r934, %r912;
	shf.l.wrap.b32 	%r936, %r935, %r935, 1;
	add.s32 	%r937, %r374, %r936;
	add.s32 	%r938, %r937, %r373;
	add.s32 	%r939, %r938, %r932;
	add.s32 	%r383, %r939, -899497514;
	shf.l.wrap.b32 	%r385, %r375, %r375, 30;
	shf.l.wrap.b32 	%r940, %r383, %r383, 5;
	// begin inline asm
	lop3.b32 %r378, %r379, %r385, %r381, 150;
	// end inline asm
	xor.b32  	%r941, %r832, %r816;
	xor.b32  	%r942, %r941, %r880;
	xor.b32  	%r943, %r942, %r920;
	shf.l.wrap.b32 	%r944, %r943, %r943, 1;
	add.s32 	%r945, %r378, %r944;
	add.s32 	%r946, %r945, %r377;
	add.s32 	%r947, %r946, %r940;
	add.s32 	%r387, %r947, -899497514;
	shf.l.wrap.b32 	%r389, %r379, %r379, 30;
	shf.l.wrap.b32 	%r948, %r387, %r387, 5;
	// begin inline asm
	lop3.b32 %r382, %r383, %r389, %r385, 150;
	// end inline asm
	xor.b32  	%r949, %r840, %r824;
	xor.b32  	%r950, %r949, %r888;
	xor.b32  	%r951, %r950, %r928;
	shf.l.wrap.b32 	%r952, %r951, %r951, 1;
	add.s32 	%r953, %r382, %r952;
	add.s32 	%r954, %r953, %r381;
	add.s32 	%r955, %r954, %r948;
	add.s32 	%r391, %r955, -899497514;
	shf.l.wrap.b32 	%r393, %r383, %r383, 30;
	shf.l.wrap.b32 	%r956, %r391, %r391, 5;
	// begin inline asm
	lop3.b32 %r386, %r387, %r393, %r389, 150;
	// end inline asm
	xor.b32  	%r957, %r848, %r832;
	xor.b32  	%r958, %r957, %r896;
	xor.b32  	%r959, %r958, %r936;
	shf.l.wrap.b32 	%r960, %r959, %r959, 1;
	add.s32 	%r961, %r386, %r960;
	add.s32 	%r962, %r961, %r385;
	add.s32 	%r963, %r962, %r956;
	add.s32 	%r395, %r963, -899497514;
	shf.l.wrap.b32 	%r397, %r387, %r387, 30;
	shf.l.wrap.b32 	%r964, %r395, %r395, 5;
	// begin inline asm
	lop3.b32 %r390, %r391, %r397, %r393, 150;
	// end inline asm
	xor.b32  	%r965, %r856, %r840;
	xor.b32  	%r966, %r965, %r904;
	xor.b32  	%r967, %r966, %r944;
	shf.l.wrap.b32 	%r968, %r967, %r967, 1;
	add.s32 	%r969, %r390, %r968;
	add.s32 	%r970, %r969, %r389;
	add.s32 	%r971, %r970, %r964;
	add.s32 	%r399, %r971, -899497514;
	shf.l.wrap.b32 	%r401, %r391, %r391, 30;
	shf.l.wrap.b32 	%r972, %r399, %r399, 5;
	// begin inline asm
	lop3.b32 %r394, %r395, %r401, %r397, 150;
	// end inline asm
	xor.b32  	%r973, %r864, %r848;
	xor.b32  	%r974, %r973, %r912;
	xor.b32  	%r975, %r974, %r952;
	shf.l.wrap.b32 	%r976, %r975, %r975, 1;
	add.s32 	%r977, %r394, %r976;
	add.s32 	%r978, %r977, %r393;
	add.s32 	%r979, %r978, %r972;
	add.s32 	%r403, %r979, -899497514;
	shf.l.wrap.b32 	%r405, %r395, %r395, 30;
	shf.l.wrap.b32 	%r980, %r403, %r403, 5;
	// begin inline asm
	lop3.b32 %r398, %r399, %r405, %r401, 150;
	// end inline asm
	xor.b32  	%r981, %r872, %r856;
	xor.b32  	%r982, %r981, %r920;
	xor.b32  	%r983, %r982, %r960;
	shf.l.wrap.b32 	%r984, %r983, %r983, 1;
	add.s32 	%r985, %r398, %r984;
	add.s32 	%r986, %r985, %r397;
	add.s32 	%r987, %r986, %r980;
	add.s32 	%r407, %r987, -899497514;
	shf.l.wrap.b32 	%r409, %r399, %r399, 30;
	shf.l.wrap.b32 	%r988, %r407, %r407, 5;
	// begin inline asm
	lop3.b32 %r402, %r403, %r409, %r405, 150;
	// end inline asm
	xor.b32  	%r989, %r880, %r864;
	xor.b32  	%r990, %r989, %r928;
	xor.b32  	%r991, %r990, %r968;
	shf.l.wrap.b32 	%r992, %r991, %r991, 1;
	add.s32 	%r993, %r402, %r992;
	add.s32 	%r994, %r993, %r401;
	add.s32 	%r995, %r994, %r988;
	add.s32 	%r411, %r995, -899497514;
	shf.l.wrap.b32 	%r413, %r403, %r403, 30;
	shf.l.wrap.b32 	%r996, %r411, %r411, 5;
	// begin inline asm
	lop3.b32 %r406, %r407, %r413, %r409, 150;
	// end inline asm
	xor.b32  	%r997, %r888, %r872;
	xor.b32  	%r998, %r997, %r936;
	xor.b32  	%r999, %r998, %r976;
	shf.l.wrap.b32 	%r1000, %r999, %r999, 1;
	add.s32 	%r1001, %r406, %r1000;
	add.s32 	%r1002, %r1001, %r405;
	add.s32 	%r1003, %r1002, %r996;
	add.s32 	%r415, %r1003, -899497514;
	shf.l.wrap.b32 	%r417, %r407, %r407, 30;
	shf.l.wrap.b32 	%r1004, %r415, %r415, 5;
	// begin inline asm
	lop3.b32 %r410, %r411, %r417, %r413, 150;
	// end inline asm
	xor.b32  	%r1005, %r896, %r880;
	xor.b32  	%r1006, %r1005, %r944;
	xor.b32  	%r1007, %r1006, %r984;
	shf.l.wrap.b32 	%r1008, %r1007, %r1007, 1;
	add.s32 	%r1009, %r410, %r1008;
	add.s32 	%r1010, %r1009, %r409;
	add.s32 	%r1011, %r1010, %r1004;
	add.s32 	%r419, %r1011, -899497514;
	shf.l.wrap.b32 	%r421, %r411, %r411, 30;
	shf.l.wrap.b32 	%r1012, %r419, %r419, 5;
	// begin inline asm
	lop3.b32 %r414, %r415, %r421, %r417, 150;
	// end inline asm
	xor.b32  	%r1013, %r904, %r888;
	xor.b32  	%r1014, %r1013, %r952;
	xor.b32  	%r1015, %r1014, %r992;
	shf.l.wrap.b32 	%r1016, %r1015, %r1015, 1;
	add.s32 	%r1017, %r414, %r1016;
	add.s32 	%r1018, %r1017, %r413;
	add.s32 	%r1019, %r1018, %r1012;
	add.s32 	%r423, %r1019, -899497514;
	shf.l.wrap.b32 	%r425, %r415, %r415, 30;
	shf.l.wrap.b32 	%r1020, %r423, %r423, 5;
	// begin inline asm
	lop3.b32 %r418, %r419, %r425, %r421, 150;
	// end inline asm
	xor.b32  	%r1021, %r912, %r896;
	xor.b32  	%r1022, %r1021, %r960;
	xor.b32  	%r1023, %r1022, %r1000;
	shf.l.wrap.b32 	%r1024, %r1023, %r1023, 1;
	add.s32 	%r1025, %r418, %r1024;
	add.s32 	%r1026, %r1025, %r417;
	add.s32 	%r1027, %r1026, %r1020;
	add.s32 	%r1028, %r1027, -899497514;
	shf.l.wrap.b32 	%r424, %r419, %r419, 30;
	shf.l.wrap.b32 	%r1029, %r1028, %r1028, 5;
	// begin inline asm
	lop3.b32 %r422, %r423, %r424, %r425, 150;
	// end inline asm
	xor.b32  	%r1030, %r920, %r904;
	xor.b32  	%r1031, %r1030, %r968;
	xor.b32  	%r1032, %r1031, %r1008;
	shf.l.wrap.b32 	%r1033, %r1032, %r1032, 1;
	shf.l.wrap.b32 	%r1034, %r423, %r423, 30;
	add.s32 	%r1035, %r3819, %r422;
	add.s32 	%r1036, %r1035, %r1033;
	add.s32 	%r1037, %r1036, %r421;
	add.s32 	%r1038, %r1037, %r1029;
	add.s32 	%r3819, %r1038, -899497514;
	add.s32 	%r3818, %r1028, %r3818;
	add.s32 	%r3817, %r1034, %r3817;
	add.s32 	%r3816, %r424, %r3816;
	add.s32 	%r3815, %r425, %r3815;
	add.s32 	%r1039, %r3814, 128;
	setp.gt.u32 	%p3, %r1039, %r2;
	mov.u32 	%r3814, %r3826;
	@%p3 bra 	$L__BB2_5;
	bra.uni 	$L__BB2_3;

$L__BB2_5:
	mov.u32 	%r3825, 0;
	st.local.v4.u32 	[%rd2], {%r3825, %r3825, %r3825, %r3825};
	st.local.v4.u32 	[%rd2+16], {%r3825, %r3825, %r3825, %r3825};
	st.local.v4.u32 	[%rd2+32], {%r3825, %r3825, %r3825, %r3825};
	st.local.v4.u32 	[%rd2+48], {%r3825, %r3825, %r3825, %r3825};
	setp.le.u32 	%p4, %r2, %r3826;
	@%p4 bra 	$L__BB2_11;

	sub.s32 	%r29, %r2, %r3826;
	not.b32 	%r1043, %r3826;
	add.s32 	%r1044, %r2, %r1043;
	and.b32  	%r3829, %r29, 3;
	setp.lt.u32 	%p5, %r1044, 3;
	@%p5 bra 	$L__BB2_9;

	sub.s32 	%r3824, %r29, %r3829;
	mov.u32 	%r3825, 0;
	add.s64 	%rd26, %rd5, 12;

$L__BB2_8:
	cvt.u64.u32 	%rd25, %r3826;
	add.s64 	%rd27, %rd26, %rd25;
	ld.global.u8 	%rs3, [%rd27];
	or.b32  	%r1046, %r3825, 3;
	cvt.u64.u32 	%rd28, %r1046;
	add.s64 	%rd29, %rd2, %rd28;
	st.local.u8 	[%rd29], %rs3;
	add.s32 	%r1047, %r3826, 1;
	cvt.u64.u32 	%rd30, %r1047;
	add.s64 	%rd31, %rd26, %rd30;
	ld.global.u8 	%rs4, [%rd31];
	add.s32 	%r1048, %r3825, 1;
	xor.b32  	%r1049, %r1048, 3;
	cvt.u64.u32 	%rd32, %r1049;
	add.s64 	%rd33, %rd2, %rd32;
	st.local.u8 	[%rd33], %rs4;
	add.s32 	%r1050, %r3826, 2;
	cvt.u64.u32 	%rd34, %r1050;
	add.s64 	%rd35, %rd26, %rd34;
	ld.global.u8 	%rs5, [%rd35];
	add.s32 	%r1051, %r3825, 2;
	xor.b32  	%r1052, %r1051, 3;
	cvt.u64.u32 	%rd36, %r1052;
	add.s64 	%rd37, %rd2, %rd36;
	st.local.u8 	[%rd37], %rs5;
	add.s32 	%r1053, %r3826, 3;
	cvt.u64.u32 	%rd38, %r1053;
	add.s64 	%rd39, %rd26, %rd38;
	ld.global.u8 	%rs6, [%rd39];
	add.s32 	%r1054, %r3825, 3;
	and.b32  	%r1055, %r1054, -4;
	cvt.u64.u32 	%rd40, %r1055;
	add.s64 	%rd41, %rd2, %rd40;
	st.local.u8 	[%rd41], %rs6;
	add.s32 	%r3825, %r3825, 4;
	add.s32 	%r3826, %r3826, 4;
	add.s32 	%r3824, %r3824, -4;
	setp.ne.s32 	%p6, %r3824, 0;
	@%p6 bra 	$L__BB2_8;

$L__BB2_9:
	setp.eq.s32 	%p7, %r3829, 0;
	@%p7 bra 	$L__BB2_11;

$L__BB2_10:
	.pragma "nounroll";
	cvt.u64.u32 	%rd42, %r3826;
	add.s64 	%rd43, %rd5, %rd42;
	ld.global.u8 	%rs7, [%rd43+12];
	xor.b32  	%r1056, %r3825, 3;
	cvt.u64.u32 	%rd44, %r1056;
	add.s64 	%rd45, %rd2, %rd44;
	st.local.u8 	[%rd45], %rs7;
	add.s32 	%r3825, %r3825, 1;
	add.s32 	%r3826, %r3826, 1;
	add.s32 	%r3829, %r3829, -1;
	setp.ne.s32 	%p8, %r3829, 0;
	@%p8 bra 	$L__BB2_10;

$L__BB2_11:
	setp.lt.u32 	%p9, %r3821, 52;
	@%p9 bra 	$L__BB2_20;
	bra.uni 	$L__BB2_12;

$L__BB2_20:
	add.s32 	%r1997, %r3821, 3;
	xor.b32  	%r1998, %r1997, 3;
	cvt.u64.u32 	%rd54, %r1998;
	add.s64 	%rd55, %rd2, %rd54;
	st.local.u8 	[%rd55], %rs1;
	add.s32 	%r1999, %r3821, 4;
	xor.b32  	%r2000, %r1999, 3;
	cvt.u64.u32 	%rd56, %r2000;
	add.s64 	%rd57, %rd2, %rd56;
	mov.u16 	%rs10, 128;
	st.local.u8 	[%rd57], %rs10;
	bra.uni 	$L__BB2_21;

$L__BB2_12:
	setp.gt.u32 	%p10, %r3821, 60;
	@%p10 bra 	$L__BB2_14;

	add.s32 	%r1057, %r3821, 3;
	xor.b32  	%r1058, %r1057, 3;
	cvt.u64.u32 	%rd46, %r1058;
	add.s64 	%rd47, %rd2, %rd46;
	st.local.u8 	[%rd47], %rs1;

$L__BB2_14:
	setp.gt.u32 	%p11, %r3821, 59;
	@%p11 bra 	$L__BB2_16;

	add.s32 	%r1059, %r3821, 4;
	xor.b32  	%r1060, %r1059, 3;
	cvt.u64.u32 	%rd48, %r1060;
	add.s64 	%rd49, %rd2, %rd48;
	mov.u16 	%rs8, 128;
	st.local.u8 	[%rd49], %rs8;

$L__BB2_16:
	shf.l.wrap.b32 	%r1381, %r3819, %r3819, 5;
	ld.local.v4.u32 	{%r1382, %r1383, %r1384, %r1385}, [%rd2];
	add.s32 	%r1390, %r1381, %r3815;
	// begin inline asm
	lop3.b32 %r1061, %r3818, %r3817, %r3816, 202;
	// end inline asm
	add.s32 	%r1391, %r1390, %r1061;
	add.s32 	%r1392, %r1391, %r1382;
	add.s32 	%r1070, %r1392, 1518500249;
	shf.l.wrap.b32 	%r1393, %r1070, %r1070, 5;
	shf.l.wrap.b32 	%r1072, %r3818, %r3818, 30;
	// begin inline asm
	lop3.b32 %r1065, %r3819, %r1072, %r3817, 202;
	// end inline asm
	add.s32 	%r1394, %r3816, %r1065;
	add.s32 	%r1395, %r1394, %r1383;
	add.s32 	%r1396, %r1395, %r1393;
	add.s32 	%r1074, %r1396, 1518500249;
	shf.l.wrap.b32 	%r1397, %r1074, %r1074, 5;
	shf.l.wrap.b32 	%r1076, %r3819, %r3819, 30;
	// begin inline asm
	lop3.b32 %r1069, %r1070, %r1076, %r1072, 202;
	// end inline asm
	add.s32 	%r1398, %r3817, %r1069;
	add.s32 	%r1399, %r1398, %r1384;
	add.s32 	%r1400, %r1399, %r1397;
	add.s32 	%r1078, %r1400, 1518500249;
	shf.l.wrap.b32 	%r1080, %r1070, %r1070, 30;
	shf.l.wrap.b32 	%r1401, %r1078, %r1078, 5;
	// begin inline asm
	lop3.b32 %r1073, %r1074, %r1080, %r1076, 202;
	// end inline asm
	add.s32 	%r1402, %r1072, %r1073;
	add.s32 	%r1403, %r1402, %r1385;
	add.s32 	%r1404, %r1403, %r1401;
	add.s32 	%r1082, %r1404, 1518500249;
	shf.l.wrap.b32 	%r1084, %r1074, %r1074, 30;
	shf.l.wrap.b32 	%r1405, %r1082, %r1082, 5;
	// begin inline asm
	lop3.b32 %r1077, %r1078, %r1084, %r1080, 202;
	// end inline asm
	ld.local.v4.u32 	{%r1406, %r1407, %r1408, %r1409}, [%rd2+16];
	add.s32 	%r1414, %r1076, %r1077;
	add.s32 	%r1415, %r1414, %r1406;
	add.s32 	%r1416, %r1415, %r1405;
	add.s32 	%r1086, %r1416, 1518500249;
	shf.l.wrap.b32 	%r1088, %r1078, %r1078, 30;
	shf.l.wrap.b32 	%r1417, %r1086, %r1086, 5;
	// begin inline asm
	lop3.b32 %r1081, %r1082, %r1088, %r1084, 202;
	// end inline asm
	add.s32 	%r1418, %r1080, %r1081;
	add.s32 	%r1419, %r1418, %r1407;
	add.s32 	%r1420, %r1419, %r1417;
	add.s32 	%r1090, %r1420, 1518500249;
	shf.l.wrap.b32 	%r1092, %r1082, %r1082, 30;
	shf.l.wrap.b32 	%r1421, %r1090, %r1090, 5;
	// begin inline asm
	lop3.b32 %r1085, %r1086, %r1092, %r1088, 202;
	// end inline asm
	add.s32 	%r1422, %r1084, %r1085;
	add.s32 	%r1423, %r1422, %r1408;
	add.s32 	%r1424, %r1423, %r1421;
	add.s32 	%r1094, %r1424, 1518500249;
	shf.l.wrap.b32 	%r1096, %r1086, %r1086, 30;
	shf.l.wrap.b32 	%r1425, %r1094, %r1094, 5;
	// begin inline asm
	lop3.b32 %r1089, %r1090, %r1096, %r1092, 202;
	// end inline asm
	add.s32 	%r1426, %r1089, %r1409;
	add.s32 	%r1427, %r1426, %r1088;
	add.s32 	%r1428, %r1427, %r1425;
	add.s32 	%r1098, %r1428, 1518500249;
	shf.l.wrap.b32 	%r1100, %r1090, %r1090, 30;
	shf.l.wrap.b32 	%r1429, %r1098, %r1098, 5;
	// begin inline asm
	lop3.b32 %r1093, %r1094, %r1100, %r1096, 202;
	// end inline asm
	ld.local.v4.u32 	{%r1430, %r1431, %r1432, %r1433}, [%rd2+32];
	add.s32 	%r1438, %r1093, %r1430;
	add.s32 	%r1439, %r1438, %r1092;
	add.s32 	%r1440, %r1439, %r1429;
	add.s32 	%r1102, %r1440, 1518500249;
	shf.l.wrap.b32 	%r1104, %r1094, %r1094, 30;
	shf.l.wrap.b32 	%r1441, %r1102, %r1102, 5;
	// begin inline asm
	lop3.b32 %r1097, %r1098, %r1104, %r1100, 202;
	// end inline asm
	add.s32 	%r1442, %r1097, %r1431;
	add.s32 	%r1443, %r1442, %r1096;
	add.s32 	%r1444, %r1443, %r1441;
	add.s32 	%r1106, %r1444, 1518500249;
	shf.l.wrap.b32 	%r1108, %r1098, %r1098, 30;
	shf.l.wrap.b32 	%r1445, %r1106, %r1106, 5;
	// begin inline asm
	lop3.b32 %r1101, %r1102, %r1108, %r1104, 202;
	// end inline asm
	add.s32 	%r1446, %r1101, %r1432;
	add.s32 	%r1447, %r1446, %r1100;
	add.s32 	%r1448, %r1447, %r1445;
	add.s32 	%r1110, %r1448, 1518500249;
	shf.l.wrap.b32 	%r1112, %r1102, %r1102, 30;
	shf.l.wrap.b32 	%r1449, %r1110, %r1110, 5;
	// begin inline asm
	lop3.b32 %r1105, %r1106, %r1112, %r1108, 202;
	// end inline asm
	add.s32 	%r1450, %r1105, %r1433;
	add.s32 	%r1451, %r1450, %r1104;
	add.s32 	%r1452, %r1451, %r1449;
	add.s32 	%r1114, %r1452, 1518500249;
	shf.l.wrap.b32 	%r1116, %r1106, %r1106, 30;
	shf.l.wrap.b32 	%r1453, %r1114, %r1114, 5;
	// begin inline asm
	lop3.b32 %r1109, %r1110, %r1116, %r1112, 202;
	// end inline asm
	ld.local.v4.u32 	{%r1454, %r1455, %r1456, %r1457}, [%rd2+48];
	add.s32 	%r1462, %r1109, %r1454;
	add.s32 	%r1463, %r1462, %r1108;
	add.s32 	%r1464, %r1463, %r1453;
	add.s32 	%r1118, %r1464, 1518500249;
	shf.l.wrap.b32 	%r1120, %r1110, %r1110, 30;
	shf.l.wrap.b32 	%r1465, %r1118, %r1118, 5;
	// begin inline asm
	lop3.b32 %r1113, %r1114, %r1120, %r1116, 202;
	// end inline asm
	add.s32 	%r1466, %r1113, %r1455;
	add.s32 	%r1467, %r1466, %r1112;
	add.s32 	%r1468, %r1467, %r1465;
	add.s32 	%r1122, %r1468, 1518500249;
	shf.l.wrap.b32 	%r1124, %r1114, %r1114, 30;
	shf.l.wrap.b32 	%r1469, %r1122, %r1122, 5;
	// begin inline asm
	lop3.b32 %r1117, %r1118, %r1124, %r1120, 202;
	// end inline asm
	add.s32 	%r1470, %r1117, %r1456;
	add.s32 	%r1471, %r1470, %r1116;
	add.s32 	%r1472, %r1471, %r1469;
	add.s32 	%r1126, %r1472, 1518500249;
	shf.l.wrap.b32 	%r1128, %r1118, %r1118, 30;
	shf.l.wrap.b32 	%r1473, %r1126, %r1126, 5;
	// begin inline asm
	lop3.b32 %r1121, %r1122, %r1128, %r1124, 202;
	// end inline asm
	add.s32 	%r1474, %r1121, %r1457;
	add.s32 	%r1475, %r1474, %r1120;
	add.s32 	%r1476, %r1475, %r1473;
	add.s32 	%r1130, %r1476, 1518500249;
	shf.l.wrap.b32 	%r1132, %r1122, %r1122, 30;
	shf.l.wrap.b32 	%r1477, %r1130, %r1130, 5;
	// begin inline asm
	lop3.b32 %r1125, %r1126, %r1132, %r1128, 202;
	// end inline asm
	xor.b32  	%r1478, %r1430, %r1455;
	xor.b32  	%r1479, %r1478, %r1384;
	xor.b32  	%r1480, %r1479, %r1382;
	shf.l.wrap.b32 	%r1481, %r1480, %r1480, 1;
	add.s32 	%r1482, %r1125, %r1481;
	add.s32 	%r1483, %r1482, %r1124;
	add.s32 	%r1484, %r1483, %r1477;
	add.s32 	%r1134, %r1484, 1518500249;
	shf.l.wrap.b32 	%r1136, %r1126, %r1126, 30;
	shf.l.wrap.b32 	%r1485, %r1134, %r1134, 5;
	// begin inline asm
	lop3.b32 %r1129, %r1130, %r1136, %r1132, 202;
	// end inline asm
	xor.b32  	%r1486, %r1431, %r1456;
	xor.b32  	%r1487, %r1486, %r1385;
	xor.b32  	%r1488, %r1487, %r1383;
	shf.l.wrap.b32 	%r1489, %r1488, %r1488, 1;
	add.s32 	%r1490, %r1129, %r1489;
	add.s32 	%r1491, %r1490, %r1128;
	add.s32 	%r1492, %r1491, %r1485;
	add.s32 	%r1138, %r1492, 1518500249;
	shf.l.wrap.b32 	%r1140, %r1130, %r1130, 30;
	shf.l.wrap.b32 	%r1493, %r1138, %r1138, 5;
	// begin inline asm
	lop3.b32 %r1133, %r1134, %r1140, %r1136, 202;
	// end inline asm
	xor.b32  	%r1494, %r1432, %r1457;
	xor.b32  	%r1495, %r1494, %r1406;
	xor.b32  	%r1496, %r1495, %r1384;
	shf.l.wrap.b32 	%r1497, %r1496, %r1496, 1;
	add.s32 	%r1498, %r1133, %r1497;
	add.s32 	%r1499, %r1498, %r1132;
	add.s32 	%r1500, %r1499, %r1493;
	add.s32 	%r1142, %r1500, 1518500249;
	shf.l.wrap.b32 	%r1144, %r1134, %r1134, 30;
	shf.l.wrap.b32 	%r1501, %r1142, %r1142, 5;
	// begin inline asm
	lop3.b32 %r1137, %r1138, %r1144, %r1140, 202;
	// end inline asm
	xor.b32  	%r1502, %r1433, %r1481;
	xor.b32  	%r1503, %r1502, %r1407;
	xor.b32  	%r1504, %r1503, %r1385;
	shf.l.wrap.b32 	%r1505, %r1504, %r1504, 1;
	add.s32 	%r1506, %r1137, %r1505;
	add.s32 	%r1507, %r1506, %r1136;
	add.s32 	%r1508, %r1507, %r1501;
	add.s32 	%r1146, %r1508, 1518500249;
	shf.l.wrap.b32 	%r1148, %r1138, %r1138, 30;
	shf.l.wrap.b32 	%r1509, %r1146, %r1146, 5;
	// begin inline asm
	lop3.b32 %r1141, %r1142, %r1148, %r1144, 150;
	// end inline asm
	xor.b32  	%r1510, %r1454, %r1489;
	xor.b32  	%r1511, %r1510, %r1408;
	xor.b32  	%r1512, %r1511, %r1406;
	shf.l.wrap.b32 	%r1513, %r1512, %r1512, 1;
	add.s32 	%r1514, %r1141, %r1513;
	add.s32 	%r1515, %r1514, %r1140;
	add.s32 	%r1516, %r1515, %r1509;
	add.s32 	%r1150, %r1516, 1859775393;
	shf.l.wrap.b32 	%r1152, %r1142, %r1142, 30;
	shf.l.wrap.b32 	%r1517, %r1150, %r1150, 5;
	// begin inline asm
	lop3.b32 %r1145, %r1146, %r1152, %r1148, 150;
	// end inline asm
	xor.b32  	%r1518, %r1455, %r1497;
	xor.b32  	%r1519, %r1518, %r1409;
	xor.b32  	%r1520, %r1519, %r1407;
	shf.l.wrap.b32 	%r1521, %r1520, %r1520, 1;
	add.s32 	%r1522, %r1145, %r1521;
	add.s32 	%r1523, %r1522, %r1144;
	add.s32 	%r1524, %r1523, %r1517;
	add.s32 	%r1154, %r1524, 1859775393;
	shf.l.wrap.b32 	%r1156, %r1146, %r1146, 30;
	shf.l.wrap.b32 	%r1525, %r1154, %r1154, 5;
	// begin inline asm
	lop3.b32 %r1149, %r1150, %r1156, %r1152, 150;
	// end inline asm
	xor.b32  	%r1526, %r1456, %r1505;
	xor.b32  	%r1527, %r1526, %r1430;
	xor.b32  	%r1528, %r1527, %r1408;
	shf.l.wrap.b32 	%r1529, %r1528, %r1528, 1;
	add.s32 	%r1530, %r1149, %r1529;
	add.s32 	%r1531, %r1530, %r1148;
	add.s32 	%r1532, %r1531, %r1525;
	add.s32 	%r1158, %r1532, 1859775393;
	shf.l.wrap.b32 	%r1160, %r1150, %r1150, 30;
	shf.l.wrap.b32 	%r1533, %r1158, %r1158, 5;
	// begin inline asm
	lop3.b32 %r1153, %r1154, %r1160, %r1156, 150;
	// end inline asm
	xor.b32  	%r1534, %r1457, %r1513;
	xor.b32  	%r1535, %r1534, %r1431;
	xor.b32  	%r1536, %r1535, %r1409;
	shf.l.wrap.b32 	%r1537, %r1536, %r1536, 1;
	add.s32 	%r1538, %r1153, %r1537;
	add.s32 	%r1539, %r1538, %r1152;
	add.s32 	%r1540, %r1539, %r1533;
	add.s32 	%r1162, %r1540, 1859775393;
	shf.l.wrap.b32 	%r1164, %r1154, %r1154, 30;
	shf.l.wrap.b32 	%r1541, %r1162, %r1162, 5;
	// begin inline asm
	lop3.b32 %r1157, %r1158, %r1164, %r1160, 150;
	// end inline asm
	xor.b32  	%r1542, %r1521, %r1481;
	xor.b32  	%r1543, %r1542, %r1432;
	xor.b32  	%r1544, %r1543, %r1430;
	shf.l.wrap.b32 	%r1545, %r1544, %r1544, 1;
	add.s32 	%r1546, %r1157, %r1545;
	add.s32 	%r1547, %r1546, %r1156;
	add.s32 	%r1548, %r1547, %r1541;
	add.s32 	%r1166, %r1548, 1859775393;
	shf.l.wrap.b32 	%r1168, %r1158, %r1158, 30;
	shf.l.wrap.b32 	%r1549, %r1166, %r1166, 5;
	// begin inline asm
	lop3.b32 %r1161, %r1162, %r1168, %r1164, 150;
	// end inline asm
	xor.b32  	%r1550, %r1529, %r1489;
	xor.b32  	%r1551, %r1550, %r1433;
	xor.b32  	%r1552, %r1551, %r1431;
	shf.l.wrap.b32 	%r1553, %r1552, %r1552, 1;
	add.s32 	%r1554, %r1161, %r1553;
	add.s32 	%r1555, %r1554, %r1160;
	add.s32 	%r1556, %r1555, %r1549;
	add.s32 	%r1170, %r1556, 1859775393;
	shf.l.wrap.b32 	%r1172, %r1162, %r1162, 30;
	shf.l.wrap.b32 	%r1557, %r1170, %r1170, 5;
	// begin inline asm
	lop3.b32 %r1165, %r1166, %r1172, %r1168, 150;
	// end inline asm
	xor.b32  	%r1558, %r1537, %r1497;
	xor.b32  	%r1559, %r1558, %r1454;
	xor.b32  	%r1560, %r1559, %r1432;
	shf.l.wrap.b32 	%r1561, %r1560, %r1560, 1;
	add.s32 	%r1562, %r1165, %r1561;
	add.s32 	%r1563, %r1562, %r1164;
	add.s32 	%r1564, %r1563, %r1557;
	add.s32 	%r1174, %r1564, 1859775393;
	shf.l.wrap.b32 	%r1176, %r1166, %r1166, 30;
	shf.l.wrap.b32 	%r1565, %r1174, %r1174, 5;
	// begin inline asm
	lop3.b32 %r1169, %r1170, %r1176, %r1172, 150;
	// end inline asm
	xor.b32  	%r1566, %r1545, %r1505;
	xor.b32  	%r1567, %r1566, %r1455;
	xor.b32  	%r1568, %r1567, %r1433;
	shf.l.wrap.b32 	%r1569, %r1568, %r1568, 1;
	add.s32 	%r1570, %r1169, %r1569;
	add.s32 	%r1571, %r1570, %r1168;
	add.s32 	%r1572, %r1571, %r1565;
	add.s32 	%r1178, %r1572, 1859775393;
	shf.l.wrap.b32 	%r1180, %r1170, %r1170, 30;
	shf.l.wrap.b32 	%r1573, %r1178, %r1178, 5;
	// begin inline asm
	lop3.b32 %r1173, %r1174, %r1180, %r1176, 150;
	// end inline asm
	xor.b32  	%r1574, %r1553, %r1513;
	xor.b32  	%r1575, %r1574, %r1456;
	xor.b32  	%r1576, %r1575, %r1454;
	shf.l.wrap.b32 	%r1577, %r1576, %r1576, 1;
	add.s32 	%r1578, %r1173, %r1577;
	add.s32 	%r1579, %r1578, %r1172;
	add.s32 	%r1580, %r1579, %r1573;
	add.s32 	%r1182, %r1580, 1859775393;
	shf.l.wrap.b32 	%r1184, %r1174, %r1174, 30;
	shf.l.wrap.b32 	%r1581, %r1182, %r1182, 5;
	// begin inline asm
	lop3.b32 %r1177, %r1178, %r1184, %r1180, 150;
	// end inline asm
	xor.b32  	%r1582, %r1561, %r1521;
	xor.b32  	%r1583, %r1582, %r1457;
	xor.b32  	%r1584, %r1583, %r1455;
	shf.l.wrap.b32 	%r1585, %r1584, %r1584, 1;
	add.s32 	%r1586, %r1177, %r1585;
	add.s32 	%r1587, %r1586, %r1176;
	add.s32 	%r1588, %r1587, %r1581;
	add.s32 	%r1186, %r1588, 1859775393;
	shf.l.wrap.b32 	%r1188, %r1178, %r1178, 30;
	shf.l.wrap.b32 	%r1589, %r1186, %r1186, 5;
	// begin inline asm
	lop3.b32 %r1181, %r1182, %r1188, %r1184, 150;
	// end inline asm
	xor.b32  	%r1590, %r1529, %r1481;
	xor.b32  	%r1591, %r1590, %r1569;
	xor.b32  	%r1592, %r1591, %r1456;
	shf.l.wrap.b32 	%r1593, %r1592, %r1592, 1;
	add.s32 	%r1594, %r1181, %r1593;
	add.s32 	%r1595, %r1594, %r1180;
	add.s32 	%r1596, %r1595, %r1589;
	add.s32 	%r1190, %r1596, 1859775393;
	shf.l.wrap.b32 	%r1192, %r1182, %r1182, 30;
	shf.l.wrap.b32 	%r1597, %r1190, %r1190, 5;
	// begin inline asm
	lop3.b32 %r1185, %r1186, %r1192, %r1188, 150;
	// end inline asm
	xor.b32  	%r1598, %r1537, %r1489;
	xor.b32  	%r1599, %r1598, %r1577;
	xor.b32  	%r1600, %r1599, %r1457;
	shf.l.wrap.b32 	%r1601, %r1600, %r1600, 1;
	add.s32 	%r1602, %r1185, %r1601;
	add.s32 	%r1603, %r1602, %r1184;
	add.s32 	%r1604, %r1603, %r1597;
	add.s32 	%r1194, %r1604, 1859775393;
	shf.l.wrap.b32 	%r1196, %r1186, %r1186, 30;
	shf.l.wrap.b32 	%r1605, %r1194, %r1194, 5;
	// begin inline asm
	lop3.b32 %r1189, %r1190, %r1196, %r1192, 150;
	// end inline asm
	xor.b32  	%r1606, %r1497, %r1481;
	xor.b32  	%r1607, %r1606, %r1545;
	xor.b32  	%r1608, %r1607, %r1585;
	shf.l.wrap.b32 	%r1609, %r1608, %r1608, 1;
	add.s32 	%r1610, %r1189, %r1609;
	add.s32 	%r1611, %r1610, %r1188;
	add.s32 	%r1612, %r1611, %r1605;
	add.s32 	%r1198, %r1612, 1859775393;
	shf.l.wrap.b32 	%r1200, %r1190, %r1190, 30;
	shf.l.wrap.b32 	%r1613, %r1198, %r1198, 5;
	// begin inline asm
	lop3.b32 %r1193, %r1194, %r1200, %r1196, 150;
	// end inline asm
	xor.b32  	%r1614, %r1505, %r1489;
	xor.b32  	%r1615, %r1614, %r1553;
	xor.b32  	%r1616, %r1615, %r1593;
	shf.l.wrap.b32 	%r1617, %r1616, %r1616, 1;
	add.s32 	%r1618, %r1193, %r1617;
	add.s32 	%r1619, %r1618, %r1192;
	add.s32 	%r1620, %r1619, %r1613;
	add.s32 	%r1202, %r1620, 1859775393;
	shf.l.wrap.b32 	%r1204, %r1194, %r1194, 30;
	shf.l.wrap.b32 	%r1621, %r1202, %r1202, 5;
	// begin inline asm
	lop3.b32 %r1197, %r1198, %r1204, %r1200, 150;
	// end inline asm
	xor.b32  	%r1622, %r1513, %r1497;
	xor.b32  	%r1623, %r1622, %r1561;
	xor.b32  	%r1624, %r1623, %r1601;
	shf.l.wrap.b32 	%r1625, %r1624, %r1624, 1;
	add.s32 	%r1626, %r1197, %r1625;
	add.s32 	%r1627, %r1626, %r1196;
	add.s32 	%r1628, %r1627, %r1621;
	add.s32 	%r1206, %r1628, 1859775393;
	shf.l.wrap.b32 	%r1208, %r1198, %r1198, 30;
	shf.l.wrap.b32 	%r1629, %r1206, %r1206, 5;
	// begin inline asm
	lop3.b32 %r1201, %r1202, %r1208, %r1204, 150;
	// end inline asm
	xor.b32  	%r1630, %r1521, %r1505;
	xor.b32  	%r1631, %r1630, %r1569;
	xor.b32  	%r1632, %r1631, %r1609;
	shf.l.wrap.b32 	%r1633, %r1632, %r1632, 1;
	add.s32 	%r1634, %r1201, %r1633;
	add.s32 	%r1635, %r1634, %r1200;
	add.s32 	%r1636, %r1635, %r1629;
	add.s32 	%r1210, %r1636, 1859775393;
	shf.l.wrap.b32 	%r1212, %r1202, %r1202, 30;
	shf.l.wrap.b32 	%r1637, %r1210, %r1210, 5;
	// begin inline asm
	lop3.b32 %r1205, %r1206, %r1212, %r1208, 150;
	// end inline asm
	xor.b32  	%r1638, %r1529, %r1513;
	xor.b32  	%r1639, %r1638, %r1577;
	xor.b32  	%r1640, %r1639, %r1617;
	shf.l.wrap.b32 	%r1641, %r1640, %r1640, 1;
	add.s32 	%r1642, %r1205, %r1641;
	add.s32 	%r1643, %r1642, %r1204;
	add.s32 	%r1644, %r1643, %r1637;
	add.s32 	%r1214, %r1644, 1859775393;
	shf.l.wrap.b32 	%r1216, %r1206, %r1206, 30;
	shf.l.wrap.b32 	%r1645, %r1214, %r1214, 5;
	// begin inline asm
	lop3.b32 %r1209, %r1210, %r1216, %r1212, 150;
	// end inline asm
	xor.b32  	%r1646, %r1537, %r1521;
	xor.b32  	%r1647, %r1646, %r1585;
	xor.b32  	%r1648, %r1647, %r1625;
	shf.l.wrap.b32 	%r1649, %r1648, %r1648, 1;
	add.s32 	%r1650, %r1209, %r1649;
	add.s32 	%r1651, %r1650, %r1208;
	add.s32 	%r1652, %r1651, %r1645;
	add.s32 	%r1218, %r1652, 1859775393;
	shf.l.wrap.b32 	%r1220, %r1210, %r1210, 30;
	shf.l.wrap.b32 	%r1653, %r1218, %r1218, 5;
	// begin inline asm
	lop3.b32 %r1213, %r1214, %r1220, %r1216, 150;
	// end inline asm
	xor.b32  	%r1654, %r1545, %r1529;
	xor.b32  	%r1655, %r1654, %r1593;
	xor.b32  	%r1656, %r1655, %r1633;
	shf.l.wrap.b32 	%r1657, %r1656, %r1656, 1;
	add.s32 	%r1658, %r1213, %r1657;
	add.s32 	%r1659, %r1658, %r1212;
	add.s32 	%r1660, %r1659, %r1653;
	add.s32 	%r1222, %r1660, 1859775393;
	shf.l.wrap.b32 	%r1224, %r1214, %r1214, 30;
	shf.l.wrap.b32 	%r1661, %r1222, %r1222, 5;
	// begin inline asm
	lop3.b32 %r1217, %r1218, %r1224, %r1220, 150;
	// end inline asm
	xor.b32  	%r1662, %r1553, %r1537;
	xor.b32  	%r1663, %r1662, %r1601;
	xor.b32  	%r1664, %r1663, %r1641;
	shf.l.wrap.b32 	%r1665, %r1664, %r1664, 1;
	add.s32 	%r1666, %r1217, %r1665;
	add.s32 	%r1667, %r1666, %r1216;
	add.s32 	%r1668, %r1667, %r1661;
	add.s32 	%r1226, %r1668, 1859775393;
	shf.l.wrap.b32 	%r1228, %r1218, %r1218, 30;
	shf.l.wrap.b32 	%r1669, %r1226, %r1226, 5;
	// begin inline asm
	lop3.b32 %r1221, %r1222, %r1228, %r1224, 232;
	// end inline asm
	xor.b32  	%r1670, %r1561, %r1545;
	xor.b32  	%r1671, %r1670, %r1609;
	xor.b32  	%r1672, %r1671, %r1649;
	shf.l.wrap.b32 	%r1673, %r1672, %r1672, 1;
	add.s32 	%r1674, %r1221, %r1673;
	add.s32 	%r1675, %r1674, %r1220;
	add.s32 	%r1676, %r1675, %r1669;
	add.s32 	%r1230, %r1676, -1894007588;
	shf.l.wrap.b32 	%r1232, %r1222, %r1222, 30;
	shf.l.wrap.b32 	%r1677, %r1230, %r1230, 5;
	// begin inline asm
	lop3.b32 %r1225, %r1226, %r1232, %r1228, 232;
	// end inline asm
	xor.b32  	%r1678, %r1569, %r1553;
	xor.b32  	%r1679, %r1678, %r1617;
	xor.b32  	%r1680, %r1679, %r1657;
	shf.l.wrap.b32 	%r1681, %r1680, %r1680, 1;
	add.s32 	%r1682, %r1225, %r1681;
	add.s32 	%r1683, %r1682, %r1224;
	add.s32 	%r1684, %r1683, %r1677;
	add.s32 	%r1234, %r1684, -1894007588;
	shf.l.wrap.b32 	%r1236, %r1226, %r1226, 30;
	shf.l.wrap.b32 	%r1685, %r1234, %r1234, 5;
	// begin inline asm
	lop3.b32 %r1229, %r1230, %r1236, %r1232, 232;
	// end inline asm
	xor.b32  	%r1686, %r1577, %r1561;
	xor.b32  	%r1687, %r1686, %r1625;
	xor.b32  	%r1688, %r1687, %r1665;
	shf.l.wrap.b32 	%r1689, %r1688, %r1688, 1;
	add.s32 	%r1690, %r1229, %r1689;
	add.s32 	%r1691, %r1690, %r1228;
	add.s32 	%r1692, %r1691, %r1685;
	add.s32 	%r1238, %r1692, -1894007588;
	shf.l.wrap.b32 	%r1240, %r1230, %r1230, 30;
	shf.l.wrap.b32 	%r1693, %r1238, %r1238, 5;
	// begin inline asm
	lop3.b32 %r1233, %r1234, %r1240, %r1236, 232;
	// end inline asm
	xor.b32  	%r1694, %r1585, %r1569;
	xor.b32  	%r1695, %r1694, %r1633;
	xor.b32  	%r1696, %r1695, %r1673;
	shf.l.wrap.b32 	%r1697, %r1696, %r1696, 1;
	add.s32 	%r1698, %r1233, %r1697;
	add.s32 	%r1699, %r1698, %r1232;
	add.s32 	%r1700, %r1699, %r1693;
	add.s32 	%r1242, %r1700, -1894007588;
	shf.l.wrap.b32 	%r1244, %r1234, %r1234, 30;
	shf.l.wrap.b32 	%r1701, %r1242, %r1242, 5;
	// begin inline asm
	lop3.b32 %r1237, %r1238, %r1244, %r1240, 232;
	// end inline asm
	xor.b32  	%r1702, %r1593, %r1577;
	xor.b32  	%r1703, %r1702, %r1641;
	xor.b32  	%r1704, %r1703, %r1681;
	shf.l.wrap.b32 	%r1705, %r1704, %r1704, 1;
	add.s32 	%r1706, %r1237, %r1705;
	add.s32 	%r1707, %r1706, %r1236;
	add.s32 	%r1708, %r1707, %r1701;
	add.s32 	%r1246, %r1708, -1894007588;
	shf.l.wrap.b32 	%r1248, %r1238, %r1238, 30;
	shf.l.wrap.b32 	%r1709, %r1246, %r1246, 5;
	// begin inline asm
	lop3.b32 %r1241, %r1242, %r1248, %r1244, 232;
	// end inline asm
	xor.b32  	%r1710, %r1601, %r1585;
	xor.b32  	%r1711, %r1710, %r1649;
	xor.b32  	%r1712, %r1711, %r1689;
	shf.l.wrap.b32 	%r1713, %r1712, %r1712, 1;
	add.s32 	%r1714, %r1241, %r1713;
	add.s32 	%r1715, %r1714, %r1240;
	add.s32 	%r1716, %r1715, %r1709;
	add.s32 	%r1250, %r1716, -1894007588;
	shf.l.wrap.b32 	%r1252, %r1242, %r1242, 30;
	shf.l.wrap.b32 	%r1717, %r1250, %r1250, 5;
	// begin inline asm
	lop3.b32 %r1245, %r1246, %r1252, %r1248, 232;
	// end inline asm
	xor.b32  	%r1718, %r1609, %r1593;
	xor.b32  	%r1719, %r1718, %r1657;
	xor.b32  	%r1720, %r1719, %r1697;
	shf.l.wrap.b32 	%r1721, %r1720, %r1720, 1;
	add.s32 	%r1722, %r1245, %r1721;
	add.s32 	%r1723, %r1722, %r1244;
	add.s32 	%r1724, %r1723, %r1717;
	add.s32 	%r1254, %r1724, -1894007588;
	shf.l.wrap.b32 	%r1256, %r1246, %r1246, 30;
	shf.l.wrap.b32 	%r1725, %r1254, %r1254, 5;
	// begin inline asm
	lop3.b32 %r1249, %r1250, %r1256, %r1252, 232;
	// end inline asm
	xor.b32  	%r1726, %r1617, %r1601;
	xor.b32  	%r1727, %r1726, %r1665;
	xor.b32  	%r1728, %r1727, %r1705;
	shf.l.wrap.b32 	%r1729, %r1728, %r1728, 1;
	add.s32 	%r1730, %r1249, %r1729;
	add.s32 	%r1731, %r1730, %r1248;
	add.s32 	%r1732, %r1731, %r1725;
	add.s32 	%r1258, %r1732, -1894007588;
	shf.l.wrap.b32 	%r1260, %r1250, %r1250, 30;
	shf.l.wrap.b32 	%r1733, %r1258, %r1258, 5;
	// begin inline asm
	lop3.b32 %r1253, %r1254, %r1260, %r1256, 232;
	// end inline asm
	xor.b32  	%r1734, %r1625, %r1609;
	xor.b32  	%r1735, %r1734, %r1673;
	xor.b32  	%r1736, %r1735, %r1713;
	shf.l.wrap.b32 	%r1737, %r1736, %r1736, 1;
	add.s32 	%r1738, %r1253, %r1737;
	add.s32 	%r1739, %r1738, %r1252;
	add.s32 	%r1740, %r1739, %r1733;
	add.s32 	%r1262, %r1740, -1894007588;
	shf.l.wrap.b32 	%r1264, %r1254, %r1254, 30;
	shf.l.wrap.b32 	%r1741, %r1262, %r1262, 5;
	// begin inline asm
	lop3.b32 %r1257, %r1258, %r1264, %r1260, 232;
	// end inline asm
	xor.b32  	%r1742, %r1633, %r1617;
	xor.b32  	%r1743, %r1742, %r1681;
	xor.b32  	%r1744, %r1743, %r1721;
	shf.l.wrap.b32 	%r1745, %r1744, %r1744, 1;
	add.s32 	%r1746, %r1257, %r1745;
	add.s32 	%r1747, %r1746, %r1256;
	add.s32 	%r1748, %r1747, %r1741;
	add.s32 	%r1266, %r1748, -1894007588;
	shf.l.wrap.b32 	%r1268, %r1258, %r1258, 30;
	shf.l.wrap.b32 	%r1749, %r1266, %r1266, 5;
	// begin inline asm
	lop3.b32 %r1261, %r1262, %r1268, %r1264, 232;
	// end inline asm
	xor.b32  	%r1750, %r1641, %r1625;
	xor.b32  	%r1751, %r1750, %r1689;
	xor.b32  	%r1752, %r1751, %r1729;
	shf.l.wrap.b32 	%r1753, %r1752, %r1752, 1;
	add.s32 	%r1754, %r1261, %r1753;
	add.s32 	%r1755, %r1754, %r1260;
	add.s32 	%r1756, %r1755, %r1749;
	add.s32 	%r1270, %r1756, -1894007588;
	shf.l.wrap.b32 	%r1272, %r1262, %r1262, 30;
	shf.l.wrap.b32 	%r1757, %r1270, %r1270, 5;
	// begin inline asm
	lop3.b32 %r1265, %r1266, %r1272, %r1268, 232;
	// end inline asm
	xor.b32  	%r1758, %r1649, %r1633;
	xor.b32  	%r1759, %r1758, %r1697;
	xor.b32  	%r1760, %r1759, %r1737;
	shf.l.wrap.b32 	%r1761, %r1760, %r1760, 1;
	add.s32 	%r1762, %r1265, %r1761;
	add.s32 	%r1763, %r1762, %r1264;
	add.s32 	%r1764, %r1763, %r1757;
	add.s32 	%r1274, %r1764, -1894007588;
	shf.l.wrap.b32 	%r1276, %r1266, %r1266, 30;
	shf.l.wrap.b32 	%r1765, %r1274, %r1274, 5;
	// begin inline asm
	lop3.b32 %r1269, %r1270, %r1276, %r1272, 232;
	// end inline asm
	xor.b32  	%r1766, %r1657, %r1641;
	xor.b32  	%r1767, %r1766, %r1705;
	xor.b32  	%r1768, %r1767, %r1745;
	shf.l.wrap.b32 	%r1769, %r1768, %r1768, 1;
	add.s32 	%r1770, %r1269, %r1769;
	add.s32 	%r1771, %r1770, %r1268;
	add.s32 	%r1772, %r1771, %r1765;
	add.s32 	%r1278, %r1772, -1894007588;
	shf.l.wrap.b32 	%r1280, %r1270, %r1270, 30;
	shf.l.wrap.b32 	%r1773, %r1278, %r1278, 5;
	// begin inline asm
	lop3.b32 %r1273, %r1274, %r1280, %r1276, 232;
	// end inline asm
	xor.b32  	%r1774, %r1665, %r1649;
	xor.b32  	%r1775, %r1774, %r1713;
	xor.b32  	%r1776, %r1775, %r1753;
	shf.l.wrap.b32 	%r1777, %r1776, %r1776, 1;
	add.s32 	%r1778, %r1273, %r1777;
	add.s32 	%r1779, %r1778, %r1272;
	add.s32 	%r1780, %r1779, %r1773;
	add.s32 	%r1282, %r1780, -1894007588;
	shf.l.wrap.b32 	%r1284, %r1274, %r1274, 30;
	shf.l.wrap.b32 	%r1781, %r1282, %r1282, 5;
	// begin inline asm
	lop3.b32 %r1277, %r1278, %r1284, %r1280, 232;
	// end inline asm
	xor.b32  	%r1782, %r1673, %r1657;
	xor.b32  	%r1783, %r1782, %r1721;
	xor.b32  	%r1784, %r1783, %r1761;
	shf.l.wrap.b32 	%r1785, %r1784, %r1784, 1;
	add.s32 	%r1786, %r1277, %r1785;
	add.s32 	%r1787, %r1786, %r1276;
	add.s32 	%r1788, %r1787, %r1781;
	add.s32 	%r1286, %r1788, -1894007588;
	shf.l.wrap.b32 	%r1288, %r1278, %r1278, 30;
	shf.l.wrap.b32 	%r1789, %r1286, %r1286, 5;
	// begin inline asm
	lop3.b32 %r1281, %r1282, %r1288, %r1284, 232;
	// end inline asm
	xor.b32  	%r1790, %r1681, %r1665;
	xor.b32  	%r1791, %r1790, %r1729;
	xor.b32  	%r1792, %r1791, %r1769;
	shf.l.wrap.b32 	%r1793, %r1792, %r1792, 1;
	add.s32 	%r1794, %r1281, %r1793;
	add.s32 	%r1795, %r1794, %r1280;
	add.s32 	%r1796, %r1795, %r1789;
	add.s32 	%r1290, %r1796, -1894007588;
	shf.l.wrap.b32 	%r1292, %r1282, %r1282, 30;
	shf.l.wrap.b32 	%r1797, %r1290, %r1290, 5;
	// begin inline asm
	lop3.b32 %r1285, %r1286, %r1292, %r1288, 232;
	// end inline asm
	xor.b32  	%r1798, %r1689, %r1673;
	xor.b32  	%r1799, %r1798, %r1737;
	xor.b32  	%r1800, %r1799, %r1777;
	shf.l.wrap.b32 	%r1801, %r1800, %r1800, 1;
	add.s32 	%r1802, %r1285, %r1801;
	add.s32 	%r1803, %r1802, %r1284;
	add.s32 	%r1804, %r1803, %r1797;
	add.s32 	%r1294, %r1804, -1894007588;
	shf.l.wrap.b32 	%r1296, %r1286, %r1286, 30;
	shf.l.wrap.b32 	%r1805, %r1294, %r1294, 5;
	// begin inline asm
	lop3.b32 %r1289, %r1290, %r1296, %r1292, 232;
	// end inline asm
	xor.b32  	%r1806, %r1697, %r1681;
	xor.b32  	%r1807, %r1806, %r1745;
	xor.b32  	%r1808, %r1807, %r1785;
	shf.l.wrap.b32 	%r1809, %r1808, %r1808, 1;
	add.s32 	%r1810, %r1289, %r1809;
	add.s32 	%r1811, %r1810, %r1288;
	add.s32 	%r1812, %r1811, %r1805;
	add.s32 	%r1298, %r1812, -1894007588;
	shf.l.wrap.b32 	%r1300, %r1290, %r1290, 30;
	shf.l.wrap.b32 	%r1813, %r1298, %r1298, 5;
	// begin inline asm
	lop3.b32 %r1293, %r1294, %r1300, %r1296, 232;
	// end inline asm
	xor.b32  	%r1814, %r1705, %r1689;
	xor.b32  	%r1815, %r1814, %r1753;
	xor.b32  	%r1816, %r1815, %r1793;
	shf.l.wrap.b32 	%r1817, %r1816, %r1816, 1;
	add.s32 	%r1818, %r1293, %r1817;
	add.s32 	%r1819, %r1818, %r1292;
	add.s32 	%r1820, %r1819, %r1813;
	add.s32 	%r1302, %r1820, -1894007588;
	shf.l.wrap.b32 	%r1304, %r1294, %r1294, 30;
	shf.l.wrap.b32 	%r1821, %r1302, %r1302, 5;
	// begin inline asm
	lop3.b32 %r1297, %r1298, %r1304, %r1300, 232;
	// end inline asm
	xor.b32  	%r1822, %r1713, %r1697;
	xor.b32  	%r1823, %r1822, %r1761;
	xor.b32  	%r1824, %r1823, %r1801;
	shf.l.wrap.b32 	%r1825, %r1824, %r1824, 1;
	add.s32 	%r1826, %r1297, %r1825;
	add.s32 	%r1827, %r1826, %r1296;
	add.s32 	%r1828, %r1827, %r1821;
	add.s32 	%r1306, %r1828, -1894007588;
	shf.l.wrap.b32 	%r1308, %r1298, %r1298, 30;
	shf.l.wrap.b32 	%r1829, %r1306, %r1306, 5;
	// begin inline asm
	lop3.b32 %r1301, %r1302, %r1308, %r1304, 150;
	// end inline asm
	xor.b32  	%r1830, %r1721, %r1705;
	xor.b32  	%r1831, %r1830, %r1769;
	xor.b32  	%r1832, %r1831, %r1809;
	shf.l.wrap.b32 	%r1833, %r1832, %r1832, 1;
	add.s32 	%r1834, %r1301, %r1833;
	add.s32 	%r1835, %r1834, %r1300;
	add.s32 	%r1836, %r1835, %r1829;
	add.s32 	%r1310, %r1836, -899497514;
	shf.l.wrap.b32 	%r1312, %r1302, %r1302, 30;
	shf.l.wrap.b32 	%r1837, %r1310, %r1310, 5;
	// begin inline asm
	lop3.b32 %r1305, %r1306, %r1312, %r1308, 150;
	// end inline asm
	xor.b32  	%r1838, %r1729, %r1713;
	xor.b32  	%r1839, %r1838, %r1777;
	xor.b32  	%r1840, %r1839, %r1817;
	shf.l.wrap.b32 	%r1841, %r1840, %r1840, 1;
	add.s32 	%r1842, %r1305, %r1841;
	add.s32 	%r1843, %r1842, %r1304;
	add.s32 	%r1844, %r1843, %r1837;
	add.s32 	%r1314, %r1844, -899497514;
	shf.l.wrap.b32 	%r1316, %r1306, %r1306, 30;
	shf.l.wrap.b32 	%r1845, %r1314, %r1314, 5;
	// begin inline asm
	lop3.b32 %r1309, %r1310, %r1316, %r1312, 150;
	// end inline asm
	xor.b32  	%r1846, %r1737, %r1721;
	xor.b32  	%r1847, %r1846, %r1785;
	xor.b32  	%r1848, %r1847, %r1825;
	shf.l.wrap.b32 	%r1849, %r1848, %r1848, 1;
	add.s32 	%r1850, %r1309, %r1849;
	add.s32 	%r1851, %r1850, %r1308;
	add.s32 	%r1852, %r1851, %r1845;
	add.s32 	%r1318, %r1852, -899497514;
	shf.l.wrap.b32 	%r1320, %r1310, %r1310, 30;
	shf.l.wrap.b32 	%r1853, %r1318, %r1318, 5;
	// begin inline asm
	lop3.b32 %r1313, %r1314, %r1320, %r1316, 150;
	// end inline asm
	xor.b32  	%r1854, %r1745, %r1729;
	xor.b32  	%r1855, %r1854, %r1793;
	xor.b32  	%r1856, %r1855, %r1833;
	shf.l.wrap.b32 	%r1857, %r1856, %r1856, 1;
	add.s32 	%r1858, %r1313, %r1857;
	add.s32 	%r1859, %r1858, %r1312;
	add.s32 	%r1860, %r1859, %r1853;
	add.s32 	%r1322, %r1860, -899497514;
	shf.l.wrap.b32 	%r1324, %r1314, %r1314, 30;
	shf.l.wrap.b32 	%r1861, %r1322, %r1322, 5;
	// begin inline asm
	lop3.b32 %r1317, %r1318, %r1324, %r1320, 150;
	// end inline asm
	xor.b32  	%r1862, %r1753, %r1737;
	xor.b32  	%r1863, %r1862, %r1801;
	xor.b32  	%r1864, %r1863, %r1841;
	shf.l.wrap.b32 	%r1865, %r1864, %r1864, 1;
	add.s32 	%r1866, %r1317, %r1865;
	add.s32 	%r1867, %r1866, %r1316;
	add.s32 	%r1868, %r1867, %r1861;
	add.s32 	%r1326, %r1868, -899497514;
	shf.l.wrap.b32 	%r1328, %r1318, %r1318, 30;
	shf.l.wrap.b32 	%r1869, %r1326, %r1326, 5;
	// begin inline asm
	lop3.b32 %r1321, %r1322, %r1328, %r1324, 150;
	// end inline asm
	xor.b32  	%r1870, %r1761, %r1745;
	xor.b32  	%r1871, %r1870, %r1809;
	xor.b32  	%r1872, %r1871, %r1849;
	shf.l.wrap.b32 	%r1873, %r1872, %r1872, 1;
	add.s32 	%r1874, %r1321, %r1873;
	add.s32 	%r1875, %r1874, %r1320;
	add.s32 	%r1876, %r1875, %r1869;
	add.s32 	%r1330, %r1876, -899497514;
	shf.l.wrap.b32 	%r1332, %r1322, %r1322, 30;
	shf.l.wrap.b32 	%r1877, %r1330, %r1330, 5;
	// begin inline asm
	lop3.b32 %r1325, %r1326, %r1332, %r1328, 150;
	// end inline asm
	xor.b32  	%r1878, %r1769, %r1753;
	xor.b32  	%r1879, %r1878, %r1817;
	xor.b32  	%r1880, %r1879, %r1857;
	shf.l.wrap.b32 	%r1881, %r1880, %r1880, 1;
	add.s32 	%r1882, %r1325, %r1881;
	add.s32 	%r1883, %r1882, %r1324;
	add.s32 	%r1884, %r1883, %r1877;
	add.s32 	%r1334, %r1884, -899497514;
	shf.l.wrap.b32 	%r1336, %r1326, %r1326, 30;
	shf.l.wrap.b32 	%r1885, %r1334, %r1334, 5;
	// begin inline asm
	lop3.b32 %r1329, %r1330, %r1336, %r1332, 150;
	// end inline asm
	xor.b32  	%r1886, %r1777, %r1761;
	xor.b32  	%r1887, %r1886, %r1825;
	xor.b32  	%r1888, %r1887, %r1865;
	shf.l.wrap.b32 	%r1889, %r1888, %r1888, 1;
	add.s32 	%r1890, %r1329, %r1889;
	add.s32 	%r1891, %r1890, %r1328;
	add.s32 	%r1892, %r1891, %r1885;
	add.s32 	%r1338, %r1892, -899497514;
	shf.l.wrap.b32 	%r1340, %r1330, %r1330, 30;
	shf.l.wrap.b32 	%r1893, %r1338, %r1338, 5;
	// begin inline asm
	lop3.b32 %r1333, %r1334, %r1340, %r1336, 150;
	// end inline asm
	xor.b32  	%r1894, %r1785, %r1769;
	xor.b32  	%r1895, %r1894, %r1833;
	xor.b32  	%r1896, %r1895, %r1873;
	shf.l.wrap.b32 	%r1897, %r1896, %r1896, 1;
	add.s32 	%r1898, %r1333, %r1897;
	add.s32 	%r1899, %r1898, %r1332;
	add.s32 	%r1900, %r1899, %r1893;
	add.s32 	%r1342, %r1900, -899497514;
	shf.l.wrap.b32 	%r1344, %r1334, %r1334, 30;
	shf.l.wrap.b32 	%r1901, %r1342, %r1342, 5;
	// begin inline asm
	lop3.b32 %r1337, %r1338, %r1344, %r1340, 150;
	// end inline asm
	xor.b32  	%r1902, %r1793, %r1777;
	xor.b32  	%r1903, %r1902, %r1841;
	xor.b32  	%r1904, %r1903, %r1881;
	shf.l.wrap.b32 	%r1905, %r1904, %r1904, 1;
	add.s32 	%r1906, %r1337, %r1905;
	add.s32 	%r1907, %r1906, %r1336;
	add.s32 	%r1908, %r1907, %r1901;
	add.s32 	%r1346, %r1908, -899497514;
	shf.l.wrap.b32 	%r1348, %r1338, %r1338, 30;
	shf.l.wrap.b32 	%r1909, %r1346, %r1346, 5;
	// begin inline asm
	lop3.b32 %r1341, %r1342, %r1348, %r1344, 150;
	// end inline asm
	xor.b32  	%r1910, %r1801, %r1785;
	xor.b32  	%r1911, %r1910, %r1849;
	xor.b32  	%r1912, %r1911, %r1889;
	shf.l.wrap.b32 	%r1913, %r1912, %r1912, 1;
	add.s32 	%r1914, %r1341, %r1913;
	add.s32 	%r1915, %r1914, %r1340;
	add.s32 	%r1916, %r1915, %r1909;
	add.s32 	%r1350, %r1916, -899497514;
	shf.l.wrap.b32 	%r1352, %r1342, %r1342, 30;
	shf.l.wrap.b32 	%r1917, %r1350, %r1350, 5;
	// begin inline asm
	lop3.b32 %r1345, %r1346, %r1352, %r1348, 150;
	// end inline asm
	xor.b32  	%r1918, %r1809, %r1793;
	xor.b32  	%r1919, %r1918, %r1857;
	xor.b32  	%r1920, %r1919, %r1897;
	shf.l.wrap.b32 	%r1921, %r1920, %r1920, 1;
	add.s32 	%r1922, %r1345, %r1921;
	add.s32 	%r1923, %r1922, %r1344;
	add.s32 	%r1924, %r1923, %r1917;
	add.s32 	%r1354, %r1924, -899497514;
	shf.l.wrap.b32 	%r1356, %r1346, %r1346, 30;
	shf.l.wrap.b32 	%r1925, %r1354, %r1354, 5;
	// begin inline asm
	lop3.b32 %r1349, %r1350, %r1356, %r1352, 150;
	// end inline asm
	xor.b32  	%r1926, %r1817, %r1801;
	xor.b32  	%r1927, %r1926, %r1865;
	xor.b32  	%r1928, %r1927, %r1905;
	shf.l.wrap.b32 	%r1929, %r1928, %r1928, 1;
	add.s32 	%r1930, %r1349, %r1929;
	add.s32 	%r1931, %r1930, %r1348;
	add.s32 	%r1932, %r1931, %r1925;
	add.s32 	%r1358, %r1932, -899497514;
	shf.l.wrap.b32 	%r1360, %r1350, %r1350, 30;
	shf.l.wrap.b32 	%r1933, %r1358, %r1358, 5;
	// begin inline asm
	lop3.b32 %r1353, %r1354, %r1360, %r1356, 150;
	// end inline asm
	xor.b32  	%r1934, %r1825, %r1809;
	xor.b32  	%r1935, %r1934, %r1873;
	xor.b32  	%r1936, %r1935, %r1913;
	shf.l.wrap.b32 	%r1937, %r1936, %r1936, 1;
	add.s32 	%r1938, %r1353, %r1937;
	add.s32 	%r1939, %r1938, %r1352;
	add.s32 	%r1940, %r1939, %r1933;
	add.s32 	%r1362, %r1940, -899497514;
	shf.l.wrap.b32 	%r1364, %r1354, %r1354, 30;
	shf.l.wrap.b32 	%r1941, %r1362, %r1362, 5;
	// begin inline asm
	lop3.b32 %r1357, %r1358, %r1364, %r1360, 150;
	// end inline asm
	xor.b32  	%r1942, %r1833, %r1817;
	xor.b32  	%r1943, %r1942, %r1881;
	xor.b32  	%r1944, %r1943, %r1921;
	shf.l.wrap.b32 	%r1945, %r1944, %r1944, 1;
	add.s32 	%r1946, %r1357, %r1945;
	add.s32 	%r1947, %r1946, %r1356;
	add.s32 	%r1948, %r1947, %r1941;
	add.s32 	%r1366, %r1948, -899497514;
	shf.l.wrap.b32 	%r1368, %r1358, %r1358, 30;
	shf.l.wrap.b32 	%r1949, %r1366, %r1366, 5;
	// begin inline asm
	lop3.b32 %r1361, %r1362, %r1368, %r1364, 150;
	// end inline asm
	xor.b32  	%r1950, %r1841, %r1825;
	xor.b32  	%r1951, %r1950, %r1889;
	xor.b32  	%r1952, %r1951, %r1929;
	shf.l.wrap.b32 	%r1953, %r1952, %r1952, 1;
	add.s32 	%r1954, %r1361, %r1953;
	add.s32 	%r1955, %r1954, %r1360;
	add.s32 	%r1956, %r1955, %r1949;
	add.s32 	%r1370, %r1956, -899497514;
	shf.l.wrap.b32 	%r1372, %r1362, %r1362, 30;
	shf.l.wrap.b32 	%r1957, %r1370, %r1370, 5;
	// begin inline asm
	lop3.b32 %r1365, %r1366, %r1372, %r1368, 150;
	// end inline asm
	xor.b32  	%r1958, %r1849, %r1833;
	xor.b32  	%r1959, %r1958, %r1897;
	xor.b32  	%r1960, %r1959, %r1937;
	shf.l.wrap.b32 	%r1961, %r1960, %r1960, 1;
	add.s32 	%r1962, %r1365, %r1961;
	add.s32 	%r1963, %r1962, %r1364;
	add.s32 	%r1964, %r1963, %r1957;
	add.s32 	%r1374, %r1964, -899497514;
	shf.l.wrap.b32 	%r1376, %r1366, %r1366, 30;
	shf.l.wrap.b32 	%r1965, %r1374, %r1374, 5;
	// begin inline asm
	lop3.b32 %r1369, %r1370, %r1376, %r1372, 150;
	// end inline asm
	xor.b32  	%r1966, %r1857, %r1841;
	xor.b32  	%r1967, %r1966, %r1905;
	xor.b32  	%r1968, %r1967, %r1945;
	shf.l.wrap.b32 	%r1969, %r1968, %r1968, 1;
	add.s32 	%r1970, %r1369, %r1969;
	add.s32 	%r1971, %r1970, %r1368;
	add.s32 	%r1972, %r1971, %r1965;
	add.s32 	%r1378, %r1972, -899497514;
	shf.l.wrap.b32 	%r1380, %r1370, %r1370, 30;
	shf.l.wrap.b32 	%r1973, %r1378, %r1378, 5;
	// begin inline asm
	lop3.b32 %r1373, %r1374, %r1380, %r1376, 150;
	// end inline asm
	xor.b32  	%r1974, %r1865, %r1849;
	xor.b32  	%r1975, %r1974, %r1913;
	xor.b32  	%r1976, %r1975, %r1953;
	shf.l.wrap.b32 	%r1977, %r1976, %r1976, 1;
	add.s32 	%r1978, %r1373, %r1977;
	add.s32 	%r1979, %r1978, %r1372;
	add.s32 	%r1980, %r1979, %r1973;
	add.s32 	%r1981, %r1980, -899497514;
	shf.l.wrap.b32 	%r1379, %r1374, %r1374, 30;
	shf.l.wrap.b32 	%r1982, %r1981, %r1981, 5;
	// begin inline asm
	lop3.b32 %r1377, %r1378, %r1379, %r1380, 150;
	// end inline asm
	xor.b32  	%r1983, %r1873, %r1857;
	xor.b32  	%r1984, %r1983, %r1921;
	xor.b32  	%r1985, %r1984, %r1961;
	shf.l.wrap.b32 	%r1986, %r1985, %r1985, 1;
	shf.l.wrap.b32 	%r1987, %r1378, %r1378, 30;
	add.s32 	%r1988, %r3819, %r1377;
	add.s32 	%r1989, %r1988, %r1986;
	add.s32 	%r1990, %r1989, %r1376;
	add.s32 	%r1991, %r1990, %r1982;
	add.s32 	%r3819, %r1991, -899497514;
	add.s32 	%r3818, %r1981, %r3818;
	add.s32 	%r3817, %r1987, %r3817;
	add.s32 	%r3816, %r1379, %r3816;
	add.s32 	%r3815, %r1380, %r3815;
	mov.u32 	%r1992, 0;
	st.local.v4.u32 	[%rd2], {%r1992, %r1992, %r1992, %r1992};
	st.local.v4.u32 	[%rd2+16], {%r1992, %r1992, %r1992, %r1992};
	st.local.v4.u32 	[%rd2+32], {%r1992, %r1992, %r1992, %r1992};
	st.local.v2.u32 	[%rd2+48], {%r1992, %r1992};
	st.local.u32 	[%rd2+56], %r1992;
	setp.lt.u32 	%p12, %r3821, 61;
	@%p12 bra 	$L__BB2_18;

	add.s32 	%r1993, %r3821, -61;
	xor.b32  	%r1994, %r1993, 3;
	cvt.u64.u32 	%rd50, %r1994;
	add.s64 	%rd51, %rd2, %rd50;
	st.local.u8 	[%rd51], %rs1;

$L__BB2_18:
	setp.lt.u32 	%p13, %r3821, 60;
	@%p13 bra 	$L__BB2_21;

	add.s32 	%r1995, %r3821, -60;
	xor.b32  	%r1996, %r1995, 3;
	cvt.u64.u32 	%rd52, %r1996;
	add.s64 	%rd53, %rd2, %rd52;
	mov.u16 	%rs9, 128;
	st.local.u8 	[%rd53], %rs9;

$L__BB2_21:
	shl.b32 	%r2641, %r2, 3;
	add.s32 	%r2642, %r2641, 544;
	ld.local.v4.u32 	{%r2643, %r2644, %r2645, %r2646}, [%rd2];
	shf.l.wrap.b32 	%r2651, %r3819, %r3819, 5;
	add.s32 	%r2652, %r2651, %r3815;
	// begin inline asm
	lop3.b32 %r2001, %r3818, %r3817, %r3816, 202;
	// end inline asm
	add.s32 	%r2653, %r2652, %r2001;
	add.s32 	%r2654, %r2653, %r2643;
	add.s32 	%r2010, %r2654, 1518500249;
	shf.l.wrap.b32 	%r2655, %r2010, %r2010, 5;
	shf.l.wrap.b32 	%r2012, %r3818, %r3818, 30;
	// begin inline asm
	lop3.b32 %r2005, %r3819, %r2012, %r3817, 202;
	// end inline asm
	add.s32 	%r2656, %r3816, %r2005;
	add.s32 	%r2657, %r2656, %r2644;
	add.s32 	%r2658, %r2657, %r2655;
	add.s32 	%r2014, %r2658, 1518500249;
	shf.l.wrap.b32 	%r2659, %r2014, %r2014, 5;
	shf.l.wrap.b32 	%r2016, %r3819, %r3819, 30;
	// begin inline asm
	lop3.b32 %r2009, %r2010, %r2016, %r2012, 202;
	// end inline asm
	add.s32 	%r2660, %r3817, %r2009;
	add.s32 	%r2661, %r2660, %r2645;
	add.s32 	%r2662, %r2661, %r2659;
	add.s32 	%r2018, %r2662, 1518500249;
	shf.l.wrap.b32 	%r2020, %r2010, %r2010, 30;
	shf.l.wrap.b32 	%r2663, %r2018, %r2018, 5;
	// begin inline asm
	lop3.b32 %r2013, %r2014, %r2020, %r2016, 202;
	// end inline asm
	add.s32 	%r2664, %r2012, %r2013;
	add.s32 	%r2665, %r2664, %r2646;
	add.s32 	%r2666, %r2665, %r2663;
	add.s32 	%r2022, %r2666, 1518500249;
	shf.l.wrap.b32 	%r2024, %r2014, %r2014, 30;
	shf.l.wrap.b32 	%r2667, %r2022, %r2022, 5;
	// begin inline asm
	lop3.b32 %r2017, %r2018, %r2024, %r2020, 202;
	// end inline asm
	ld.local.v4.u32 	{%r2668, %r2669, %r2670, %r2671}, [%rd2+16];
	add.s32 	%r2676, %r2016, %r2017;
	add.s32 	%r2677, %r2676, %r2668;
	add.s32 	%r2678, %r2677, %r2667;
	add.s32 	%r2026, %r2678, 1518500249;
	shf.l.wrap.b32 	%r2028, %r2018, %r2018, 30;
	shf.l.wrap.b32 	%r2679, %r2026, %r2026, 5;
	// begin inline asm
	lop3.b32 %r2021, %r2022, %r2028, %r2024, 202;
	// end inline asm
	add.s32 	%r2680, %r2020, %r2021;
	add.s32 	%r2681, %r2680, %r2669;
	add.s32 	%r2682, %r2681, %r2679;
	add.s32 	%r2030, %r2682, 1518500249;
	shf.l.wrap.b32 	%r2032, %r2022, %r2022, 30;
	shf.l.wrap.b32 	%r2683, %r2030, %r2030, 5;
	// begin inline asm
	lop3.b32 %r2025, %r2026, %r2032, %r2028, 202;
	// end inline asm
	add.s32 	%r2684, %r2024, %r2025;
	add.s32 	%r2685, %r2684, %r2670;
	add.s32 	%r2686, %r2685, %r2683;
	add.s32 	%r2034, %r2686, 1518500249;
	shf.l.wrap.b32 	%r2036, %r2026, %r2026, 30;
	shf.l.wrap.b32 	%r2687, %r2034, %r2034, 5;
	// begin inline asm
	lop3.b32 %r2029, %r2030, %r2036, %r2032, 202;
	// end inline asm
	add.s32 	%r2688, %r2029, %r2671;
	add.s32 	%r2689, %r2688, %r2028;
	add.s32 	%r2690, %r2689, %r2687;
	add.s32 	%r2038, %r2690, 1518500249;
	shf.l.wrap.b32 	%r2040, %r2030, %r2030, 30;
	shf.l.wrap.b32 	%r2691, %r2038, %r2038, 5;
	// begin inline asm
	lop3.b32 %r2033, %r2034, %r2040, %r2036, 202;
	// end inline asm
	ld.local.v4.u32 	{%r2692, %r2693, %r2694, %r2695}, [%rd2+32];
	add.s32 	%r2700, %r2033, %r2692;
	add.s32 	%r2701, %r2700, %r2032;
	add.s32 	%r2702, %r2701, %r2691;
	add.s32 	%r2042, %r2702, 1518500249;
	shf.l.wrap.b32 	%r2044, %r2034, %r2034, 30;
	shf.l.wrap.b32 	%r2703, %r2042, %r2042, 5;
	// begin inline asm
	lop3.b32 %r2037, %r2038, %r2044, %r2040, 202;
	// end inline asm
	add.s32 	%r2704, %r2037, %r2693;
	add.s32 	%r2705, %r2704, %r2036;
	add.s32 	%r2706, %r2705, %r2703;
	add.s32 	%r2046, %r2706, 1518500249;
	shf.l.wrap.b32 	%r2048, %r2038, %r2038, 30;
	shf.l.wrap.b32 	%r2707, %r2046, %r2046, 5;
	// begin inline asm
	lop3.b32 %r2041, %r2042, %r2048, %r2044, 202;
	// end inline asm
	add.s32 	%r2708, %r2041, %r2694;
	add.s32 	%r2709, %r2708, %r2040;
	add.s32 	%r2710, %r2709, %r2707;
	add.s32 	%r2050, %r2710, 1518500249;
	shf.l.wrap.b32 	%r2052, %r2042, %r2042, 30;
	shf.l.wrap.b32 	%r2711, %r2050, %r2050, 5;
	// begin inline asm
	lop3.b32 %r2045, %r2046, %r2052, %r2048, 202;
	// end inline asm
	add.s32 	%r2712, %r2045, %r2695;
	add.s32 	%r2713, %r2712, %r2044;
	add.s32 	%r2714, %r2713, %r2711;
	add.s32 	%r2054, %r2714, 1518500249;
	shf.l.wrap.b32 	%r2056, %r2046, %r2046, 30;
	shf.l.wrap.b32 	%r2715, %r2054, %r2054, 5;
	// begin inline asm
	lop3.b32 %r2049, %r2050, %r2056, %r2052, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r2716, %r2717, %r2718, %r2719}, [%rd2+48];
	add.s32 	%r2723, %r2049, %r2716;
	add.s32 	%r2724, %r2723, %r2048;
	add.s32 	%r2725, %r2724, %r2715;
	add.s32 	%r2058, %r2725, 1518500249;
	shf.l.wrap.b32 	%r2060, %r2050, %r2050, 30;
	shf.l.wrap.b32 	%r2726, %r2058, %r2058, 5;
	// begin inline asm
	lop3.b32 %r2053, %r2054, %r2060, %r2056, 202;
	// end inline asm
	add.s32 	%r2727, %r2053, %r2717;
	add.s32 	%r2728, %r2727, %r2052;
	add.s32 	%r2729, %r2728, %r2726;
	add.s32 	%r2062, %r2729, 1518500249;
	shf.l.wrap.b32 	%r2064, %r2054, %r2054, 30;
	shf.l.wrap.b32 	%r2730, %r2062, %r2062, 5;
	// begin inline asm
	lop3.b32 %r2057, %r2058, %r2064, %r2060, 202;
	// end inline asm
	add.s32 	%r2731, %r2057, %r2718;
	add.s32 	%r2732, %r2731, %r2056;
	add.s32 	%r2733, %r2732, %r2730;
	add.s32 	%r2066, %r2733, 1518500249;
	shf.l.wrap.b32 	%r2068, %r2058, %r2058, 30;
	shf.l.wrap.b32 	%r2734, %r2066, %r2066, 5;
	// begin inline asm
	lop3.b32 %r2061, %r2062, %r2068, %r2064, 202;
	// end inline asm
	add.s32 	%r2735, %r2061, %r2642;
	add.s32 	%r2736, %r2735, %r2060;
	add.s32 	%r2737, %r2736, %r2734;
	add.s32 	%r2070, %r2737, 1518500249;
	shf.l.wrap.b32 	%r2072, %r2062, %r2062, 30;
	shf.l.wrap.b32 	%r2738, %r2070, %r2070, 5;
	// begin inline asm
	lop3.b32 %r2065, %r2066, %r2072, %r2068, 202;
	// end inline asm
	xor.b32  	%r2739, %r2692, %r2717;
	xor.b32  	%r2740, %r2739, %r2645;
	xor.b32  	%r2741, %r2740, %r2643;
	shf.l.wrap.b32 	%r2742, %r2741, %r2741, 1;
	add.s32 	%r2743, %r2065, %r2742;
	add.s32 	%r2744, %r2743, %r2064;
	add.s32 	%r2745, %r2744, %r2738;
	add.s32 	%r2074, %r2745, 1518500249;
	shf.l.wrap.b32 	%r2076, %r2066, %r2066, 30;
	shf.l.wrap.b32 	%r2746, %r2074, %r2074, 5;
	// begin inline asm
	lop3.b32 %r2069, %r2070, %r2076, %r2072, 202;
	// end inline asm
	xor.b32  	%r2747, %r2693, %r2718;
	xor.b32  	%r2748, %r2747, %r2646;
	xor.b32  	%r2749, %r2748, %r2644;
	shf.l.wrap.b32 	%r2750, %r2749, %r2749, 1;
	add.s32 	%r2751, %r2069, %r2750;
	add.s32 	%r2752, %r2751, %r2068;
	add.s32 	%r2753, %r2752, %r2746;
	add.s32 	%r2078, %r2753, 1518500249;
	shf.l.wrap.b32 	%r2080, %r2070, %r2070, 30;
	shf.l.wrap.b32 	%r2754, %r2078, %r2078, 5;
	// begin inline asm
	lop3.b32 %r2073, %r2074, %r2080, %r2076, 202;
	// end inline asm
	xor.b32  	%r2755, %r2694, %r2642;
	xor.b32  	%r2756, %r2755, %r2668;
	xor.b32  	%r2757, %r2756, %r2645;
	shf.l.wrap.b32 	%r2758, %r2757, %r2757, 1;
	add.s32 	%r2759, %r2073, %r2758;
	add.s32 	%r2760, %r2759, %r2072;
	add.s32 	%r2761, %r2760, %r2754;
	add.s32 	%r2082, %r2761, 1518500249;
	shf.l.wrap.b32 	%r2084, %r2074, %r2074, 30;
	shf.l.wrap.b32 	%r2762, %r2082, %r2082, 5;
	// begin inline asm
	lop3.b32 %r2077, %r2078, %r2084, %r2080, 202;
	// end inline asm
	xor.b32  	%r2763, %r2695, %r2742;
	xor.b32  	%r2764, %r2763, %r2669;
	xor.b32  	%r2765, %r2764, %r2646;
	shf.l.wrap.b32 	%r2766, %r2765, %r2765, 1;
	add.s32 	%r2767, %r2077, %r2766;
	add.s32 	%r2768, %r2767, %r2076;
	add.s32 	%r2769, %r2768, %r2762;
	add.s32 	%r2086, %r2769, 1518500249;
	shf.l.wrap.b32 	%r2088, %r2078, %r2078, 30;
	shf.l.wrap.b32 	%r2770, %r2086, %r2086, 5;
	// begin inline asm
	lop3.b32 %r2081, %r2082, %r2088, %r2084, 150;
	// end inline asm
	xor.b32  	%r2771, %r2716, %r2750;
	xor.b32  	%r2772, %r2771, %r2670;
	xor.b32  	%r2773, %r2772, %r2668;
	shf.l.wrap.b32 	%r2774, %r2773, %r2773, 1;
	add.s32 	%r2775, %r2081, %r2774;
	add.s32 	%r2776, %r2775, %r2080;
	add.s32 	%r2777, %r2776, %r2770;
	add.s32 	%r2090, %r2777, 1859775393;
	shf.l.wrap.b32 	%r2092, %r2082, %r2082, 30;
	shf.l.wrap.b32 	%r2778, %r2090, %r2090, 5;
	// begin inline asm
	lop3.b32 %r2085, %r2086, %r2092, %r2088, 150;
	// end inline asm
	xor.b32  	%r2779, %r2717, %r2758;
	xor.b32  	%r2780, %r2779, %r2671;
	xor.b32  	%r2781, %r2780, %r2669;
	shf.l.wrap.b32 	%r2782, %r2781, %r2781, 1;
	add.s32 	%r2783, %r2085, %r2782;
	add.s32 	%r2784, %r2783, %r2084;
	add.s32 	%r2785, %r2784, %r2778;
	add.s32 	%r2094, %r2785, 1859775393;
	shf.l.wrap.b32 	%r2096, %r2086, %r2086, 30;
	shf.l.wrap.b32 	%r2786, %r2094, %r2094, 5;
	// begin inline asm
	lop3.b32 %r2089, %r2090, %r2096, %r2092, 150;
	// end inline asm
	xor.b32  	%r2787, %r2718, %r2766;
	xor.b32  	%r2788, %r2787, %r2692;
	xor.b32  	%r2789, %r2788, %r2670;
	shf.l.wrap.b32 	%r2790, %r2789, %r2789, 1;
	add.s32 	%r2791, %r2089, %r2790;
	add.s32 	%r2792, %r2791, %r2088;
	add.s32 	%r2793, %r2792, %r2786;
	add.s32 	%r2098, %r2793, 1859775393;
	shf.l.wrap.b32 	%r2100, %r2090, %r2090, 30;
	shf.l.wrap.b32 	%r2794, %r2098, %r2098, 5;
	// begin inline asm
	lop3.b32 %r2093, %r2094, %r2100, %r2096, 150;
	// end inline asm
	xor.b32  	%r2795, %r2642, %r2774;
	xor.b32  	%r2796, %r2795, %r2693;
	xor.b32  	%r2797, %r2796, %r2671;
	shf.l.wrap.b32 	%r2798, %r2797, %r2797, 1;
	add.s32 	%r2799, %r2093, %r2798;
	add.s32 	%r2800, %r2799, %r2092;
	add.s32 	%r2801, %r2800, %r2794;
	add.s32 	%r2102, %r2801, 1859775393;
	shf.l.wrap.b32 	%r2104, %r2094, %r2094, 30;
	shf.l.wrap.b32 	%r2802, %r2102, %r2102, 5;
	// begin inline asm
	lop3.b32 %r2097, %r2098, %r2104, %r2100, 150;
	// end inline asm
	xor.b32  	%r2803, %r2782, %r2742;
	xor.b32  	%r2804, %r2803, %r2694;
	xor.b32  	%r2805, %r2804, %r2692;
	shf.l.wrap.b32 	%r2806, %r2805, %r2805, 1;
	add.s32 	%r2807, %r2097, %r2806;
	add.s32 	%r2808, %r2807, %r2096;
	add.s32 	%r2809, %r2808, %r2802;
	add.s32 	%r2106, %r2809, 1859775393;
	shf.l.wrap.b32 	%r2108, %r2098, %r2098, 30;
	shf.l.wrap.b32 	%r2810, %r2106, %r2106, 5;
	// begin inline asm
	lop3.b32 %r2101, %r2102, %r2108, %r2104, 150;
	// end inline asm
	xor.b32  	%r2811, %r2790, %r2750;
	xor.b32  	%r2812, %r2811, %r2695;
	xor.b32  	%r2813, %r2812, %r2693;
	shf.l.wrap.b32 	%r2814, %r2813, %r2813, 1;
	add.s32 	%r2815, %r2101, %r2814;
	add.s32 	%r2816, %r2815, %r2100;
	add.s32 	%r2817, %r2816, %r2810;
	add.s32 	%r2110, %r2817, 1859775393;
	shf.l.wrap.b32 	%r2112, %r2102, %r2102, 30;
	shf.l.wrap.b32 	%r2818, %r2110, %r2110, 5;
	// begin inline asm
	lop3.b32 %r2105, %r2106, %r2112, %r2108, 150;
	// end inline asm
	xor.b32  	%r2819, %r2798, %r2758;
	xor.b32  	%r2820, %r2819, %r2716;
	xor.b32  	%r2821, %r2820, %r2694;
	shf.l.wrap.b32 	%r2822, %r2821, %r2821, 1;
	add.s32 	%r2823, %r2105, %r2822;
	add.s32 	%r2824, %r2823, %r2104;
	add.s32 	%r2825, %r2824, %r2818;
	add.s32 	%r2114, %r2825, 1859775393;
	shf.l.wrap.b32 	%r2116, %r2106, %r2106, 30;
	shf.l.wrap.b32 	%r2826, %r2114, %r2114, 5;
	// begin inline asm
	lop3.b32 %r2109, %r2110, %r2116, %r2112, 150;
	// end inline asm
	xor.b32  	%r2827, %r2806, %r2766;
	xor.b32  	%r2828, %r2827, %r2717;
	xor.b32  	%r2829, %r2828, %r2695;
	shf.l.wrap.b32 	%r2830, %r2829, %r2829, 1;
	add.s32 	%r2831, %r2109, %r2830;
	add.s32 	%r2832, %r2831, %r2108;
	add.s32 	%r2833, %r2832, %r2826;
	add.s32 	%r2118, %r2833, 1859775393;
	shf.l.wrap.b32 	%r2120, %r2110, %r2110, 30;
	shf.l.wrap.b32 	%r2834, %r2118, %r2118, 5;
	// begin inline asm
	lop3.b32 %r2113, %r2114, %r2120, %r2116, 150;
	// end inline asm
	xor.b32  	%r2835, %r2814, %r2774;
	xor.b32  	%r2836, %r2835, %r2718;
	xor.b32  	%r2837, %r2836, %r2716;
	shf.l.wrap.b32 	%r2838, %r2837, %r2837, 1;
	add.s32 	%r2839, %r2113, %r2838;
	add.s32 	%r2840, %r2839, %r2112;
	add.s32 	%r2841, %r2840, %r2834;
	add.s32 	%r2122, %r2841, 1859775393;
	shf.l.wrap.b32 	%r2124, %r2114, %r2114, 30;
	shf.l.wrap.b32 	%r2842, %r2122, %r2122, 5;
	// begin inline asm
	lop3.b32 %r2117, %r2118, %r2124, %r2120, 150;
	// end inline asm
	xor.b32  	%r2843, %r2822, %r2782;
	xor.b32  	%r2844, %r2843, %r2642;
	xor.b32  	%r2845, %r2844, %r2717;
	shf.l.wrap.b32 	%r2846, %r2845, %r2845, 1;
	add.s32 	%r2847, %r2117, %r2846;
	add.s32 	%r2848, %r2847, %r2116;
	add.s32 	%r2849, %r2848, %r2842;
	add.s32 	%r2126, %r2849, 1859775393;
	shf.l.wrap.b32 	%r2128, %r2118, %r2118, 30;
	shf.l.wrap.b32 	%r2850, %r2126, %r2126, 5;
	// begin inline asm
	lop3.b32 %r2121, %r2122, %r2128, %r2124, 150;
	// end inline asm
	xor.b32  	%r2851, %r2790, %r2742;
	xor.b32  	%r2852, %r2851, %r2830;
	xor.b32  	%r2853, %r2852, %r2718;
	shf.l.wrap.b32 	%r2854, %r2853, %r2853, 1;
	add.s32 	%r2855, %r2121, %r2854;
	add.s32 	%r2856, %r2855, %r2120;
	add.s32 	%r2857, %r2856, %r2850;
	add.s32 	%r2130, %r2857, 1859775393;
	shf.l.wrap.b32 	%r2132, %r2122, %r2122, 30;
	shf.l.wrap.b32 	%r2858, %r2130, %r2130, 5;
	// begin inline asm
	lop3.b32 %r2125, %r2126, %r2132, %r2128, 150;
	// end inline asm
	xor.b32  	%r2859, %r2798, %r2750;
	xor.b32  	%r2860, %r2859, %r2838;
	xor.b32  	%r2861, %r2860, %r2642;
	shf.l.wrap.b32 	%r2862, %r2861, %r2861, 1;
	add.s32 	%r2863, %r2125, %r2862;
	add.s32 	%r2864, %r2863, %r2124;
	add.s32 	%r2865, %r2864, %r2858;
	add.s32 	%r2134, %r2865, 1859775393;
	shf.l.wrap.b32 	%r2136, %r2126, %r2126, 30;
	shf.l.wrap.b32 	%r2866, %r2134, %r2134, 5;
	// begin inline asm
	lop3.b32 %r2129, %r2130, %r2136, %r2132, 150;
	// end inline asm
	xor.b32  	%r2867, %r2758, %r2742;
	xor.b32  	%r2868, %r2867, %r2806;
	xor.b32  	%r2869, %r2868, %r2846;
	shf.l.wrap.b32 	%r2870, %r2869, %r2869, 1;
	add.s32 	%r2871, %r2129, %r2870;
	add.s32 	%r2872, %r2871, %r2128;
	add.s32 	%r2873, %r2872, %r2866;
	add.s32 	%r2138, %r2873, 1859775393;
	shf.l.wrap.b32 	%r2140, %r2130, %r2130, 30;
	shf.l.wrap.b32 	%r2874, %r2138, %r2138, 5;
	// begin inline asm
	lop3.b32 %r2133, %r2134, %r2140, %r2136, 150;
	// end inline asm
	xor.b32  	%r2875, %r2766, %r2750;
	xor.b32  	%r2876, %r2875, %r2814;
	xor.b32  	%r2877, %r2876, %r2854;
	shf.l.wrap.b32 	%r2878, %r2877, %r2877, 1;
	add.s32 	%r2879, %r2133, %r2878;
	add.s32 	%r2880, %r2879, %r2132;
	add.s32 	%r2881, %r2880, %r2874;
	add.s32 	%r2142, %r2881, 1859775393;
	shf.l.wrap.b32 	%r2144, %r2134, %r2134, 30;
	shf.l.wrap.b32 	%r2882, %r2142, %r2142, 5;
	// begin inline asm
	lop3.b32 %r2137, %r2138, %r2144, %r2140, 150;
	// end inline asm
	xor.b32  	%r2883, %r2774, %r2758;
	xor.b32  	%r2884, %r2883, %r2822;
	xor.b32  	%r2885, %r2884, %r2862;
	shf.l.wrap.b32 	%r2886, %r2885, %r2885, 1;
	add.s32 	%r2887, %r2137, %r2886;
	add.s32 	%r2888, %r2887, %r2136;
	add.s32 	%r2889, %r2888, %r2882;
	add.s32 	%r2146, %r2889, 1859775393;
	shf.l.wrap.b32 	%r2148, %r2138, %r2138, 30;
	shf.l.wrap.b32 	%r2890, %r2146, %r2146, 5;
	// begin inline asm
	lop3.b32 %r2141, %r2142, %r2148, %r2144, 150;
	// end inline asm
	xor.b32  	%r2891, %r2782, %r2766;
	xor.b32  	%r2892, %r2891, %r2830;
	xor.b32  	%r2893, %r2892, %r2870;
	shf.l.wrap.b32 	%r2894, %r2893, %r2893, 1;
	add.s32 	%r2895, %r2141, %r2894;
	add.s32 	%r2896, %r2895, %r2140;
	add.s32 	%r2897, %r2896, %r2890;
	add.s32 	%r2150, %r2897, 1859775393;
	shf.l.wrap.b32 	%r2152, %r2142, %r2142, 30;
	shf.l.wrap.b32 	%r2898, %r2150, %r2150, 5;
	// begin inline asm
	lop3.b32 %r2145, %r2146, %r2152, %r2148, 150;
	// end inline asm
	xor.b32  	%r2899, %r2790, %r2774;
	xor.b32  	%r2900, %r2899, %r2838;
	xor.b32  	%r2901, %r2900, %r2878;
	shf.l.wrap.b32 	%r2902, %r2901, %r2901, 1;
	add.s32 	%r2903, %r2145, %r2902;
	add.s32 	%r2904, %r2903, %r2144;
	add.s32 	%r2905, %r2904, %r2898;
	add.s32 	%r2154, %r2905, 1859775393;
	shf.l.wrap.b32 	%r2156, %r2146, %r2146, 30;
	shf.l.wrap.b32 	%r2906, %r2154, %r2154, 5;
	// begin inline asm
	lop3.b32 %r2149, %r2150, %r2156, %r2152, 150;
	// end inline asm
	xor.b32  	%r2907, %r2798, %r2782;
	xor.b32  	%r2908, %r2907, %r2846;
	xor.b32  	%r2909, %r2908, %r2886;
	shf.l.wrap.b32 	%r2910, %r2909, %r2909, 1;
	add.s32 	%r2911, %r2149, %r2910;
	add.s32 	%r2912, %r2911, %r2148;
	add.s32 	%r2913, %r2912, %r2906;
	add.s32 	%r2158, %r2913, 1859775393;
	shf.l.wrap.b32 	%r2160, %r2150, %r2150, 30;
	shf.l.wrap.b32 	%r2914, %r2158, %r2158, 5;
	// begin inline asm
	lop3.b32 %r2153, %r2154, %r2160, %r2156, 150;
	// end inline asm
	xor.b32  	%r2915, %r2806, %r2790;
	xor.b32  	%r2916, %r2915, %r2854;
	xor.b32  	%r2917, %r2916, %r2894;
	shf.l.wrap.b32 	%r2918, %r2917, %r2917, 1;
	add.s32 	%r2919, %r2153, %r2918;
	add.s32 	%r2920, %r2919, %r2152;
	add.s32 	%r2921, %r2920, %r2914;
	add.s32 	%r2162, %r2921, 1859775393;
	shf.l.wrap.b32 	%r2164, %r2154, %r2154, 30;
	shf.l.wrap.b32 	%r2922, %r2162, %r2162, 5;
	// begin inline asm
	lop3.b32 %r2157, %r2158, %r2164, %r2160, 150;
	// end inline asm
	xor.b32  	%r2923, %r2814, %r2798;
	xor.b32  	%r2924, %r2923, %r2862;
	xor.b32  	%r2925, %r2924, %r2902;
	shf.l.wrap.b32 	%r2926, %r2925, %r2925, 1;
	add.s32 	%r2927, %r2157, %r2926;
	add.s32 	%r2928, %r2927, %r2156;
	add.s32 	%r2929, %r2928, %r2922;
	add.s32 	%r2166, %r2929, 1859775393;
	shf.l.wrap.b32 	%r2168, %r2158, %r2158, 30;
	shf.l.wrap.b32 	%r2930, %r2166, %r2166, 5;
	// begin inline asm
	lop3.b32 %r2161, %r2162, %r2168, %r2164, 232;
	// end inline asm
	xor.b32  	%r2931, %r2822, %r2806;
	xor.b32  	%r2932, %r2931, %r2870;
	xor.b32  	%r2933, %r2932, %r2910;
	shf.l.wrap.b32 	%r2934, %r2933, %r2933, 1;
	add.s32 	%r2935, %r2161, %r2934;
	add.s32 	%r2936, %r2935, %r2160;
	add.s32 	%r2937, %r2936, %r2930;
	add.s32 	%r2170, %r2937, -1894007588;
	shf.l.wrap.b32 	%r2172, %r2162, %r2162, 30;
	shf.l.wrap.b32 	%r2938, %r2170, %r2170, 5;
	// begin inline asm
	lop3.b32 %r2165, %r2166, %r2172, %r2168, 232;
	// end inline asm
	xor.b32  	%r2939, %r2830, %r2814;
	xor.b32  	%r2940, %r2939, %r2878;
	xor.b32  	%r2941, %r2940, %r2918;
	shf.l.wrap.b32 	%r2942, %r2941, %r2941, 1;
	add.s32 	%r2943, %r2165, %r2942;
	add.s32 	%r2944, %r2943, %r2164;
	add.s32 	%r2945, %r2944, %r2938;
	add.s32 	%r2174, %r2945, -1894007588;
	shf.l.wrap.b32 	%r2176, %r2166, %r2166, 30;
	shf.l.wrap.b32 	%r2946, %r2174, %r2174, 5;
	// begin inline asm
	lop3.b32 %r2169, %r2170, %r2176, %r2172, 232;
	// end inline asm
	xor.b32  	%r2947, %r2838, %r2822;
	xor.b32  	%r2948, %r2947, %r2886;
	xor.b32  	%r2949, %r2948, %r2926;
	shf.l.wrap.b32 	%r2950, %r2949, %r2949, 1;
	add.s32 	%r2951, %r2169, %r2950;
	add.s32 	%r2952, %r2951, %r2168;
	add.s32 	%r2953, %r2952, %r2946;
	add.s32 	%r2178, %r2953, -1894007588;
	shf.l.wrap.b32 	%r2180, %r2170, %r2170, 30;
	shf.l.wrap.b32 	%r2954, %r2178, %r2178, 5;
	// begin inline asm
	lop3.b32 %r2173, %r2174, %r2180, %r2176, 232;
	// end inline asm
	xor.b32  	%r2955, %r2846, %r2830;
	xor.b32  	%r2956, %r2955, %r2894;
	xor.b32  	%r2957, %r2956, %r2934;
	shf.l.wrap.b32 	%r2958, %r2957, %r2957, 1;
	add.s32 	%r2959, %r2173, %r2958;
	add.s32 	%r2960, %r2959, %r2172;
	add.s32 	%r2961, %r2960, %r2954;
	add.s32 	%r2182, %r2961, -1894007588;
	shf.l.wrap.b32 	%r2184, %r2174, %r2174, 30;
	shf.l.wrap.b32 	%r2962, %r2182, %r2182, 5;
	// begin inline asm
	lop3.b32 %r2177, %r2178, %r2184, %r2180, 232;
	// end inline asm
	xor.b32  	%r2963, %r2854, %r2838;
	xor.b32  	%r2964, %r2963, %r2902;
	xor.b32  	%r2965, %r2964, %r2942;
	shf.l.wrap.b32 	%r2966, %r2965, %r2965, 1;
	add.s32 	%r2967, %r2177, %r2966;
	add.s32 	%r2968, %r2967, %r2176;
	add.s32 	%r2969, %r2968, %r2962;
	add.s32 	%r2186, %r2969, -1894007588;
	shf.l.wrap.b32 	%r2188, %r2178, %r2178, 30;
	shf.l.wrap.b32 	%r2970, %r2186, %r2186, 5;
	// begin inline asm
	lop3.b32 %r2181, %r2182, %r2188, %r2184, 232;
	// end inline asm
	xor.b32  	%r2971, %r2862, %r2846;
	xor.b32  	%r2972, %r2971, %r2910;
	xor.b32  	%r2973, %r2972, %r2950;
	shf.l.wrap.b32 	%r2974, %r2973, %r2973, 1;
	add.s32 	%r2975, %r2181, %r2974;
	add.s32 	%r2976, %r2975, %r2180;
	add.s32 	%r2977, %r2976, %r2970;
	add.s32 	%r2190, %r2977, -1894007588;
	shf.l.wrap.b32 	%r2192, %r2182, %r2182, 30;
	shf.l.wrap.b32 	%r2978, %r2190, %r2190, 5;
	// begin inline asm
	lop3.b32 %r2185, %r2186, %r2192, %r2188, 232;
	// end inline asm
	xor.b32  	%r2979, %r2870, %r2854;
	xor.b32  	%r2980, %r2979, %r2918;
	xor.b32  	%r2981, %r2980, %r2958;
	shf.l.wrap.b32 	%r2982, %r2981, %r2981, 1;
	add.s32 	%r2983, %r2185, %r2982;
	add.s32 	%r2984, %r2983, %r2184;
	add.s32 	%r2985, %r2984, %r2978;
	add.s32 	%r2194, %r2985, -1894007588;
	shf.l.wrap.b32 	%r2196, %r2186, %r2186, 30;
	shf.l.wrap.b32 	%r2986, %r2194, %r2194, 5;
	// begin inline asm
	lop3.b32 %r2189, %r2190, %r2196, %r2192, 232;
	// end inline asm
	xor.b32  	%r2987, %r2878, %r2862;
	xor.b32  	%r2988, %r2987, %r2926;
	xor.b32  	%r2989, %r2988, %r2966;
	shf.l.wrap.b32 	%r2990, %r2989, %r2989, 1;
	add.s32 	%r2991, %r2189, %r2990;
	add.s32 	%r2992, %r2991, %r2188;
	add.s32 	%r2993, %r2992, %r2986;
	add.s32 	%r2198, %r2993, -1894007588;
	shf.l.wrap.b32 	%r2200, %r2190, %r2190, 30;
	shf.l.wrap.b32 	%r2994, %r2198, %r2198, 5;
	// begin inline asm
	lop3.b32 %r2193, %r2194, %r2200, %r2196, 232;
	// end inline asm
	xor.b32  	%r2995, %r2886, %r2870;
	xor.b32  	%r2996, %r2995, %r2934;
	xor.b32  	%r2997, %r2996, %r2974;
	shf.l.wrap.b32 	%r2998, %r2997, %r2997, 1;
	add.s32 	%r2999, %r2193, %r2998;
	add.s32 	%r3000, %r2999, %r2192;
	add.s32 	%r3001, %r3000, %r2994;
	add.s32 	%r2202, %r3001, -1894007588;
	shf.l.wrap.b32 	%r2204, %r2194, %r2194, 30;
	shf.l.wrap.b32 	%r3002, %r2202, %r2202, 5;
	// begin inline asm
	lop3.b32 %r2197, %r2198, %r2204, %r2200, 232;
	// end inline asm
	xor.b32  	%r3003, %r2894, %r2878;
	xor.b32  	%r3004, %r3003, %r2942;
	xor.b32  	%r3005, %r3004, %r2982;
	shf.l.wrap.b32 	%r3006, %r3005, %r3005, 1;
	add.s32 	%r3007, %r2197, %r3006;
	add.s32 	%r3008, %r3007, %r2196;
	add.s32 	%r3009, %r3008, %r3002;
	add.s32 	%r2206, %r3009, -1894007588;
	shf.l.wrap.b32 	%r2208, %r2198, %r2198, 30;
	shf.l.wrap.b32 	%r3010, %r2206, %r2206, 5;
	// begin inline asm
	lop3.b32 %r2201, %r2202, %r2208, %r2204, 232;
	// end inline asm
	xor.b32  	%r3011, %r2902, %r2886;
	xor.b32  	%r3012, %r3011, %r2950;
	xor.b32  	%r3013, %r3012, %r2990;
	shf.l.wrap.b32 	%r3014, %r3013, %r3013, 1;
	add.s32 	%r3015, %r2201, %r3014;
	add.s32 	%r3016, %r3015, %r2200;
	add.s32 	%r3017, %r3016, %r3010;
	add.s32 	%r2210, %r3017, -1894007588;
	shf.l.wrap.b32 	%r2212, %r2202, %r2202, 30;
	shf.l.wrap.b32 	%r3018, %r2210, %r2210, 5;
	// begin inline asm
	lop3.b32 %r2205, %r2206, %r2212, %r2208, 232;
	// end inline asm
	xor.b32  	%r3019, %r2910, %r2894;
	xor.b32  	%r3020, %r3019, %r2958;
	xor.b32  	%r3021, %r3020, %r2998;
	shf.l.wrap.b32 	%r3022, %r3021, %r3021, 1;
	add.s32 	%r3023, %r2205, %r3022;
	add.s32 	%r3024, %r3023, %r2204;
	add.s32 	%r3025, %r3024, %r3018;
	add.s32 	%r2214, %r3025, -1894007588;
	shf.l.wrap.b32 	%r2216, %r2206, %r2206, 30;
	shf.l.wrap.b32 	%r3026, %r2214, %r2214, 5;
	// begin inline asm
	lop3.b32 %r2209, %r2210, %r2216, %r2212, 232;
	// end inline asm
	xor.b32  	%r3027, %r2918, %r2902;
	xor.b32  	%r3028, %r3027, %r2966;
	xor.b32  	%r3029, %r3028, %r3006;
	shf.l.wrap.b32 	%r3030, %r3029, %r3029, 1;
	add.s32 	%r3031, %r2209, %r3030;
	add.s32 	%r3032, %r3031, %r2208;
	add.s32 	%r3033, %r3032, %r3026;
	add.s32 	%r2218, %r3033, -1894007588;
	shf.l.wrap.b32 	%r2220, %r2210, %r2210, 30;
	shf.l.wrap.b32 	%r3034, %r2218, %r2218, 5;
	// begin inline asm
	lop3.b32 %r2213, %r2214, %r2220, %r2216, 232;
	// end inline asm
	xor.b32  	%r3035, %r2926, %r2910;
	xor.b32  	%r3036, %r3035, %r2974;
	xor.b32  	%r3037, %r3036, %r3014;
	shf.l.wrap.b32 	%r3038, %r3037, %r3037, 1;
	add.s32 	%r3039, %r2213, %r3038;
	add.s32 	%r3040, %r3039, %r2212;
	add.s32 	%r3041, %r3040, %r3034;
	add.s32 	%r2222, %r3041, -1894007588;
	shf.l.wrap.b32 	%r2224, %r2214, %r2214, 30;
	shf.l.wrap.b32 	%r3042, %r2222, %r2222, 5;
	// begin inline asm
	lop3.b32 %r2217, %r2218, %r2224, %r2220, 232;
	// end inline asm
	xor.b32  	%r3043, %r2934, %r2918;
	xor.b32  	%r3044, %r3043, %r2982;
	xor.b32  	%r3045, %r3044, %r3022;
	shf.l.wrap.b32 	%r3046, %r3045, %r3045, 1;
	add.s32 	%r3047, %r2217, %r3046;
	add.s32 	%r3048, %r3047, %r2216;
	add.s32 	%r3049, %r3048, %r3042;
	add.s32 	%r2226, %r3049, -1894007588;
	shf.l.wrap.b32 	%r2228, %r2218, %r2218, 30;
	shf.l.wrap.b32 	%r3050, %r2226, %r2226, 5;
	// begin inline asm
	lop3.b32 %r2221, %r2222, %r2228, %r2224, 232;
	// end inline asm
	xor.b32  	%r3051, %r2942, %r2926;
	xor.b32  	%r3052, %r3051, %r2990;
	xor.b32  	%r3053, %r3052, %r3030;
	shf.l.wrap.b32 	%r3054, %r3053, %r3053, 1;
	add.s32 	%r3055, %r2221, %r3054;
	add.s32 	%r3056, %r3055, %r2220;
	add.s32 	%r3057, %r3056, %r3050;
	add.s32 	%r2230, %r3057, -1894007588;
	shf.l.wrap.b32 	%r2232, %r2222, %r2222, 30;
	shf.l.wrap.b32 	%r3058, %r2230, %r2230, 5;
	// begin inline asm
	lop3.b32 %r2225, %r2226, %r2232, %r2228, 232;
	// end inline asm
	xor.b32  	%r3059, %r2950, %r2934;
	xor.b32  	%r3060, %r3059, %r2998;
	xor.b32  	%r3061, %r3060, %r3038;
	shf.l.wrap.b32 	%r3062, %r3061, %r3061, 1;
	add.s32 	%r3063, %r2225, %r3062;
	add.s32 	%r3064, %r3063, %r2224;
	add.s32 	%r3065, %r3064, %r3058;
	add.s32 	%r2234, %r3065, -1894007588;
	shf.l.wrap.b32 	%r2236, %r2226, %r2226, 30;
	shf.l.wrap.b32 	%r3066, %r2234, %r2234, 5;
	// begin inline asm
	lop3.b32 %r2229, %r2230, %r2236, %r2232, 232;
	// end inline asm
	xor.b32  	%r3067, %r2958, %r2942;
	xor.b32  	%r3068, %r3067, %r3006;
	xor.b32  	%r3069, %r3068, %r3046;
	shf.l.wrap.b32 	%r3070, %r3069, %r3069, 1;
	add.s32 	%r3071, %r2229, %r3070;
	add.s32 	%r3072, %r3071, %r2228;
	add.s32 	%r3073, %r3072, %r3066;
	add.s32 	%r2238, %r3073, -1894007588;
	shf.l.wrap.b32 	%r2240, %r2230, %r2230, 30;
	shf.l.wrap.b32 	%r3074, %r2238, %r2238, 5;
	// begin inline asm
	lop3.b32 %r2233, %r2234, %r2240, %r2236, 232;
	// end inline asm
	xor.b32  	%r3075, %r2966, %r2950;
	xor.b32  	%r3076, %r3075, %r3014;
	xor.b32  	%r3077, %r3076, %r3054;
	shf.l.wrap.b32 	%r3078, %r3077, %r3077, 1;
	add.s32 	%r3079, %r2233, %r3078;
	add.s32 	%r3080, %r3079, %r2232;
	add.s32 	%r3081, %r3080, %r3074;
	add.s32 	%r2242, %r3081, -1894007588;
	shf.l.wrap.b32 	%r2244, %r2234, %r2234, 30;
	shf.l.wrap.b32 	%r3082, %r2242, %r2242, 5;
	// begin inline asm
	lop3.b32 %r2237, %r2238, %r2244, %r2240, 232;
	// end inline asm
	xor.b32  	%r3083, %r2974, %r2958;
	xor.b32  	%r3084, %r3083, %r3022;
	xor.b32  	%r3085, %r3084, %r3062;
	shf.l.wrap.b32 	%r3086, %r3085, %r3085, 1;
	add.s32 	%r3087, %r2237, %r3086;
	add.s32 	%r3088, %r3087, %r2236;
	add.s32 	%r3089, %r3088, %r3082;
	add.s32 	%r2246, %r3089, -1894007588;
	shf.l.wrap.b32 	%r2248, %r2238, %r2238, 30;
	shf.l.wrap.b32 	%r3090, %r2246, %r2246, 5;
	// begin inline asm
	lop3.b32 %r2241, %r2242, %r2248, %r2244, 150;
	// end inline asm
	xor.b32  	%r3091, %r2982, %r2966;
	xor.b32  	%r3092, %r3091, %r3030;
	xor.b32  	%r3093, %r3092, %r3070;
	shf.l.wrap.b32 	%r3094, %r3093, %r3093, 1;
	add.s32 	%r3095, %r2241, %r3094;
	add.s32 	%r3096, %r3095, %r2240;
	add.s32 	%r3097, %r3096, %r3090;
	add.s32 	%r2250, %r3097, -899497514;
	shf.l.wrap.b32 	%r2252, %r2242, %r2242, 30;
	shf.l.wrap.b32 	%r3098, %r2250, %r2250, 5;
	// begin inline asm
	lop3.b32 %r2245, %r2246, %r2252, %r2248, 150;
	// end inline asm
	xor.b32  	%r3099, %r2990, %r2974;
	xor.b32  	%r3100, %r3099, %r3038;
	xor.b32  	%r3101, %r3100, %r3078;
	shf.l.wrap.b32 	%r3102, %r3101, %r3101, 1;
	add.s32 	%r3103, %r2245, %r3102;
	add.s32 	%r3104, %r3103, %r2244;
	add.s32 	%r3105, %r3104, %r3098;
	add.s32 	%r2254, %r3105, -899497514;
	shf.l.wrap.b32 	%r2256, %r2246, %r2246, 30;
	shf.l.wrap.b32 	%r3106, %r2254, %r2254, 5;
	// begin inline asm
	lop3.b32 %r2249, %r2250, %r2256, %r2252, 150;
	// end inline asm
	xor.b32  	%r3107, %r2998, %r2982;
	xor.b32  	%r3108, %r3107, %r3046;
	xor.b32  	%r3109, %r3108, %r3086;
	shf.l.wrap.b32 	%r3110, %r3109, %r3109, 1;
	add.s32 	%r3111, %r2249, %r3110;
	add.s32 	%r3112, %r3111, %r2248;
	add.s32 	%r3113, %r3112, %r3106;
	add.s32 	%r2258, %r3113, -899497514;
	shf.l.wrap.b32 	%r2260, %r2250, %r2250, 30;
	shf.l.wrap.b32 	%r3114, %r2258, %r2258, 5;
	// begin inline asm
	lop3.b32 %r2253, %r2254, %r2260, %r2256, 150;
	// end inline asm
	xor.b32  	%r3115, %r3006, %r2990;
	xor.b32  	%r3116, %r3115, %r3054;
	xor.b32  	%r3117, %r3116, %r3094;
	shf.l.wrap.b32 	%r3118, %r3117, %r3117, 1;
	add.s32 	%r3119, %r2253, %r3118;
	add.s32 	%r3120, %r3119, %r2252;
	add.s32 	%r3121, %r3120, %r3114;
	add.s32 	%r2262, %r3121, -899497514;
	shf.l.wrap.b32 	%r2264, %r2254, %r2254, 30;
	shf.l.wrap.b32 	%r3122, %r2262, %r2262, 5;
	// begin inline asm
	lop3.b32 %r2257, %r2258, %r2264, %r2260, 150;
	// end inline asm
	xor.b32  	%r3123, %r3014, %r2998;
	xor.b32  	%r3124, %r3123, %r3062;
	xor.b32  	%r3125, %r3124, %r3102;
	shf.l.wrap.b32 	%r3126, %r3125, %r3125, 1;
	add.s32 	%r3127, %r2257, %r3126;
	add.s32 	%r3128, %r3127, %r2256;
	add.s32 	%r3129, %r3128, %r3122;
	add.s32 	%r2266, %r3129, -899497514;
	shf.l.wrap.b32 	%r2268, %r2258, %r2258, 30;
	shf.l.wrap.b32 	%r3130, %r2266, %r2266, 5;
	// begin inline asm
	lop3.b32 %r2261, %r2262, %r2268, %r2264, 150;
	// end inline asm
	xor.b32  	%r3131, %r3022, %r3006;
	xor.b32  	%r3132, %r3131, %r3070;
	xor.b32  	%r3133, %r3132, %r3110;
	shf.l.wrap.b32 	%r3134, %r3133, %r3133, 1;
	add.s32 	%r3135, %r2261, %r3134;
	add.s32 	%r3136, %r3135, %r2260;
	add.s32 	%r3137, %r3136, %r3130;
	add.s32 	%r2270, %r3137, -899497514;
	shf.l.wrap.b32 	%r2272, %r2262, %r2262, 30;
	shf.l.wrap.b32 	%r3138, %r2270, %r2270, 5;
	// begin inline asm
	lop3.b32 %r2265, %r2266, %r2272, %r2268, 150;
	// end inline asm
	xor.b32  	%r3139, %r3030, %r3014;
	xor.b32  	%r3140, %r3139, %r3078;
	xor.b32  	%r3141, %r3140, %r3118;
	shf.l.wrap.b32 	%r3142, %r3141, %r3141, 1;
	add.s32 	%r3143, %r2265, %r3142;
	add.s32 	%r3144, %r3143, %r2264;
	add.s32 	%r3145, %r3144, %r3138;
	add.s32 	%r2274, %r3145, -899497514;
	shf.l.wrap.b32 	%r2276, %r2266, %r2266, 30;
	shf.l.wrap.b32 	%r3146, %r2274, %r2274, 5;
	// begin inline asm
	lop3.b32 %r2269, %r2270, %r2276, %r2272, 150;
	// end inline asm
	xor.b32  	%r3147, %r3038, %r3022;
	xor.b32  	%r3148, %r3147, %r3086;
	xor.b32  	%r3149, %r3148, %r3126;
	shf.l.wrap.b32 	%r3150, %r3149, %r3149, 1;
	add.s32 	%r3151, %r2269, %r3150;
	add.s32 	%r3152, %r3151, %r2268;
	add.s32 	%r3153, %r3152, %r3146;
	add.s32 	%r2278, %r3153, -899497514;
	shf.l.wrap.b32 	%r2280, %r2270, %r2270, 30;
	shf.l.wrap.b32 	%r3154, %r2278, %r2278, 5;
	// begin inline asm
	lop3.b32 %r2273, %r2274, %r2280, %r2276, 150;
	// end inline asm
	xor.b32  	%r3155, %r3046, %r3030;
	xor.b32  	%r3156, %r3155, %r3094;
	xor.b32  	%r3157, %r3156, %r3134;
	shf.l.wrap.b32 	%r3158, %r3157, %r3157, 1;
	add.s32 	%r3159, %r2273, %r3158;
	add.s32 	%r3160, %r3159, %r2272;
	add.s32 	%r3161, %r3160, %r3154;
	add.s32 	%r2282, %r3161, -899497514;
	shf.l.wrap.b32 	%r2284, %r2274, %r2274, 30;
	shf.l.wrap.b32 	%r3162, %r2282, %r2282, 5;
	// begin inline asm
	lop3.b32 %r2277, %r2278, %r2284, %r2280, 150;
	// end inline asm
	xor.b32  	%r3163, %r3054, %r3038;
	xor.b32  	%r3164, %r3163, %r3102;
	xor.b32  	%r3165, %r3164, %r3142;
	shf.l.wrap.b32 	%r3166, %r3165, %r3165, 1;
	add.s32 	%r3167, %r2277, %r3166;
	add.s32 	%r3168, %r3167, %r2276;
	add.s32 	%r3169, %r3168, %r3162;
	add.s32 	%r2286, %r3169, -899497514;
	shf.l.wrap.b32 	%r2288, %r2278, %r2278, 30;
	shf.l.wrap.b32 	%r3170, %r2286, %r2286, 5;
	// begin inline asm
	lop3.b32 %r2281, %r2282, %r2288, %r2284, 150;
	// end inline asm
	xor.b32  	%r3171, %r3062, %r3046;
	xor.b32  	%r3172, %r3171, %r3110;
	xor.b32  	%r3173, %r3172, %r3150;
	shf.l.wrap.b32 	%r3174, %r3173, %r3173, 1;
	add.s32 	%r3175, %r2281, %r3174;
	add.s32 	%r3176, %r3175, %r2280;
	add.s32 	%r3177, %r3176, %r3170;
	add.s32 	%r2290, %r3177, -899497514;
	shf.l.wrap.b32 	%r2292, %r2282, %r2282, 30;
	shf.l.wrap.b32 	%r3178, %r2290, %r2290, 5;
	// begin inline asm
	lop3.b32 %r2285, %r2286, %r2292, %r2288, 150;
	// end inline asm
	xor.b32  	%r3179, %r3070, %r3054;
	xor.b32  	%r3180, %r3179, %r3118;
	xor.b32  	%r3181, %r3180, %r3158;
	shf.l.wrap.b32 	%r3182, %r3181, %r3181, 1;
	add.s32 	%r3183, %r2285, %r3182;
	add.s32 	%r3184, %r3183, %r2284;
	add.s32 	%r3185, %r3184, %r3178;
	add.s32 	%r2294, %r3185, -899497514;
	shf.l.wrap.b32 	%r2296, %r2286, %r2286, 30;
	shf.l.wrap.b32 	%r3186, %r2294, %r2294, 5;
	// begin inline asm
	lop3.b32 %r2289, %r2290, %r2296, %r2292, 150;
	// end inline asm
	xor.b32  	%r3187, %r3078, %r3062;
	xor.b32  	%r3188, %r3187, %r3126;
	xor.b32  	%r3189, %r3188, %r3166;
	shf.l.wrap.b32 	%r3190, %r3189, %r3189, 1;
	add.s32 	%r3191, %r2289, %r3190;
	add.s32 	%r3192, %r3191, %r2288;
	add.s32 	%r3193, %r3192, %r3186;
	add.s32 	%r2298, %r3193, -899497514;
	shf.l.wrap.b32 	%r2300, %r2290, %r2290, 30;
	shf.l.wrap.b32 	%r3194, %r2298, %r2298, 5;
	// begin inline asm
	lop3.b32 %r2293, %r2294, %r2300, %r2296, 150;
	// end inline asm
	xor.b32  	%r3195, %r3086, %r3070;
	xor.b32  	%r3196, %r3195, %r3134;
	xor.b32  	%r3197, %r3196, %r3174;
	shf.l.wrap.b32 	%r3198, %r3197, %r3197, 1;
	add.s32 	%r3199, %r2293, %r3198;
	add.s32 	%r3200, %r3199, %r2292;
	add.s32 	%r3201, %r3200, %r3194;
	add.s32 	%r2302, %r3201, -899497514;
	shf.l.wrap.b32 	%r2304, %r2294, %r2294, 30;
	shf.l.wrap.b32 	%r3202, %r2302, %r2302, 5;
	// begin inline asm
	lop3.b32 %r2297, %r2298, %r2304, %r2300, 150;
	// end inline asm
	xor.b32  	%r3203, %r3094, %r3078;
	xor.b32  	%r3204, %r3203, %r3142;
	xor.b32  	%r3205, %r3204, %r3182;
	shf.l.wrap.b32 	%r3206, %r3205, %r3205, 1;
	add.s32 	%r3207, %r2297, %r3206;
	add.s32 	%r3208, %r3207, %r2296;
	add.s32 	%r3209, %r3208, %r3202;
	add.s32 	%r2306, %r3209, -899497514;
	shf.l.wrap.b32 	%r2308, %r2298, %r2298, 30;
	shf.l.wrap.b32 	%r3210, %r2306, %r2306, 5;
	// begin inline asm
	lop3.b32 %r2301, %r2302, %r2308, %r2304, 150;
	// end inline asm
	xor.b32  	%r3211, %r3102, %r3086;
	xor.b32  	%r3212, %r3211, %r3150;
	xor.b32  	%r3213, %r3212, %r3190;
	shf.l.wrap.b32 	%r3214, %r3213, %r3213, 1;
	add.s32 	%r3215, %r2301, %r3214;
	add.s32 	%r3216, %r3215, %r2300;
	add.s32 	%r3217, %r3216, %r3210;
	add.s32 	%r2310, %r3217, -899497514;
	shf.l.wrap.b32 	%r2312, %r2302, %r2302, 30;
	shf.l.wrap.b32 	%r3218, %r2310, %r2310, 5;
	// begin inline asm
	lop3.b32 %r2305, %r2306, %r2312, %r2308, 150;
	// end inline asm
	xor.b32  	%r3219, %r3110, %r3094;
	xor.b32  	%r3220, %r3219, %r3158;
	xor.b32  	%r3221, %r3220, %r3198;
	shf.l.wrap.b32 	%r3222, %r3221, %r3221, 1;
	add.s32 	%r3223, %r2305, %r3222;
	add.s32 	%r3224, %r3223, %r2304;
	add.s32 	%r3225, %r3224, %r3218;
	add.s32 	%r2314, %r3225, -899497514;
	shf.l.wrap.b32 	%r2316, %r2306, %r2306, 30;
	shf.l.wrap.b32 	%r3226, %r2314, %r2314, 5;
	// begin inline asm
	lop3.b32 %r2309, %r2310, %r2316, %r2312, 150;
	// end inline asm
	xor.b32  	%r3227, %r3118, %r3102;
	xor.b32  	%r3228, %r3227, %r3166;
	xor.b32  	%r3229, %r3228, %r3206;
	shf.l.wrap.b32 	%r3230, %r3229, %r3229, 1;
	add.s32 	%r3231, %r2309, %r3230;
	add.s32 	%r3232, %r3231, %r2308;
	add.s32 	%r3233, %r3232, %r3226;
	add.s32 	%r2318, %r3233, -899497514;
	shf.l.wrap.b32 	%r2320, %r2310, %r2310, 30;
	shf.l.wrap.b32 	%r3234, %r2318, %r2318, 5;
	// begin inline asm
	lop3.b32 %r2313, %r2314, %r2320, %r2316, 150;
	// end inline asm
	xor.b32  	%r3235, %r3126, %r3110;
	xor.b32  	%r3236, %r3235, %r3174;
	xor.b32  	%r3237, %r3236, %r3214;
	shf.l.wrap.b32 	%r3238, %r3237, %r3237, 1;
	add.s32 	%r3239, %r2313, %r3238;
	add.s32 	%r3240, %r3239, %r2312;
	add.s32 	%r3241, %r3240, %r3234;
	add.s32 	%r3242, %r3241, -899497514;
	shf.l.wrap.b32 	%r2319, %r2314, %r2314, 30;
	shf.l.wrap.b32 	%r3243, %r3242, %r3242, 5;
	// begin inline asm
	lop3.b32 %r2317, %r2318, %r2319, %r2320, 150;
	// end inline asm
	xor.b32  	%r3244, %r3134, %r3118;
	xor.b32  	%r3245, %r3244, %r3182;
	xor.b32  	%r3246, %r3245, %r3222;
	shf.l.wrap.b32 	%r3247, %r3246, %r3246, 1;
	shf.l.wrap.b32 	%r3248, %r2318, %r2318, 30;
	add.s32 	%r3249, %r3819, %r2317;
	add.s32 	%r3250, %r3249, %r3247;
	add.s32 	%r3251, %r3250, %r2316;
	add.s32 	%r3252, %r3251, %r3243;
	add.s32 	%r3253, %r3252, -899497514;
	add.s32 	%r3254, %r3242, %r3818;
	add.s32 	%r3255, %r3248, %r3817;
	add.s32 	%r3256, %r2319, %r3816;
	add.s32 	%r3257, %r2320, %r3815;
	ld.global.u32 	%r2326, [%rd1+-44];
	shf.l.wrap.b32 	%r3258, %r2326, %r2326, 5;
	ld.global.u32 	%r2324, [%rd1+-32];
	ld.global.u32 	%r2323, [%rd1+-36];
	ld.global.u32 	%r2322, [%rd1+-40];
	// begin inline asm
	lop3.b32 %r2321, %r2322, %r2323, %r2324, 202;
	// end inline asm
	ld.global.u32 	%r3259, [%rd1+-28];
	add.s32 	%r3260, %r3258, %r3259;
	add.s32 	%r3261, %r3260, %r2321;
	add.s32 	%r3262, %r3261, %r3253;
	add.s32 	%r2330, %r3262, 1518500249;
	shf.l.wrap.b32 	%r2332, %r2322, %r2322, 30;
	shf.l.wrap.b32 	%r3263, %r2330, %r2330, 5;
	// begin inline asm
	lop3.b32 %r2325, %r2326, %r2332, %r2323, 202;
	// end inline asm
	add.s32 	%r3264, %r2324, %r2325;
	add.s32 	%r3265, %r3264, %r3254;
	add.s32 	%r3266, %r3265, %r3263;
	add.s32 	%r2334, %r3266, 1518500249;
	shf.l.wrap.b32 	%r2336, %r2326, %r2326, 30;
	shf.l.wrap.b32 	%r3267, %r2334, %r2334, 5;
	// begin inline asm
	lop3.b32 %r2329, %r2330, %r2336, %r2332, 202;
	// end inline asm
	add.s32 	%r3268, %r2323, %r2329;
	add.s32 	%r3269, %r3268, %r3255;
	add.s32 	%r3270, %r3269, %r3267;
	add.s32 	%r2338, %r3270, 1518500249;
	shf.l.wrap.b32 	%r2340, %r2330, %r2330, 30;
	shf.l.wrap.b32 	%r3271, %r2338, %r2338, 5;
	// begin inline asm
	lop3.b32 %r2333, %r2334, %r2340, %r2336, 202;
	// end inline asm
	add.s32 	%r3272, %r2332, %r2333;
	add.s32 	%r3273, %r3272, %r3256;
	add.s32 	%r3274, %r3273, %r3271;
	add.s32 	%r2342, %r3274, 1518500249;
	shf.l.wrap.b32 	%r2344, %r2334, %r2334, 30;
	shf.l.wrap.b32 	%r3275, %r2342, %r2342, 5;
	// begin inline asm
	lop3.b32 %r2337, %r2338, %r2344, %r2340, 202;
	// end inline asm
	add.s32 	%r3276, %r2336, %r2337;
	add.s32 	%r3277, %r3276, %r3257;
	add.s32 	%r3278, %r3277, %r3275;
	add.s32 	%r2346, %r3278, 1518500249;
	shf.l.wrap.b32 	%r2348, %r2338, %r2338, 30;
	shf.l.wrap.b32 	%r3279, %r2346, %r2346, 5;
	// begin inline asm
	lop3.b32 %r2341, %r2342, %r2348, %r2344, 202;
	// end inline asm
	add.s32 	%r3280, %r2340, %r2341;
	add.s32 	%r3281, %r3280, 1518500249;
	xor.b32  	%r3282, %r3281, -2147483648;
	add.s32 	%r2350, %r3282, %r3279;
	shf.l.wrap.b32 	%r2352, %r2342, %r2342, 30;
	shf.l.wrap.b32 	%r3283, %r2350, %r2350, 5;
	// begin inline asm
	lop3.b32 %r2345, %r2346, %r2352, %r2348, 202;
	// end inline asm
	add.s32 	%r3284, %r2344, %r2345;
	add.s32 	%r3285, %r3284, %r3283;
	add.s32 	%r2354, %r3285, 1518500249;
	shf.l.wrap.b32 	%r2356, %r2346, %r2346, 30;
	shf.l.wrap.b32 	%r3286, %r2354, %r2354, 5;
	// begin inline asm
	lop3.b32 %r2349, %r2350, %r2356, %r2352, 202;
	// end inline asm
	add.s32 	%r3287, %r2349, %r2348;
	add.s32 	%r3288, %r3287, %r3286;
	add.s32 	%r2358, %r3288, 1518500249;
	shf.l.wrap.b32 	%r2360, %r2350, %r2350, 30;
	shf.l.wrap.b32 	%r3289, %r2358, %r2358, 5;
	// begin inline asm
	lop3.b32 %r2353, %r2354, %r2360, %r2356, 202;
	// end inline asm
	add.s32 	%r3290, %r2353, %r2352;
	add.s32 	%r3291, %r3290, %r3289;
	add.s32 	%r2362, %r3291, 1518500249;
	shf.l.wrap.b32 	%r2364, %r2354, %r2354, 30;
	shf.l.wrap.b32 	%r3292, %r2362, %r2362, 5;
	// begin inline asm
	lop3.b32 %r2357, %r2358, %r2364, %r2360, 202;
	// end inline asm
	add.s32 	%r3293, %r2357, %r2356;
	add.s32 	%r3294, %r3293, %r3292;
	add.s32 	%r2366, %r3294, 1518500249;
	shf.l.wrap.b32 	%r2368, %r2358, %r2358, 30;
	shf.l.wrap.b32 	%r3295, %r2366, %r2366, 5;
	// begin inline asm
	lop3.b32 %r2361, %r2362, %r2368, %r2364, 202;
	// end inline asm
	add.s32 	%r3296, %r2361, %r2360;
	add.s32 	%r3297, %r3296, %r3295;
	add.s32 	%r2370, %r3297, 1518500249;
	shf.l.wrap.b32 	%r2372, %r2362, %r2362, 30;
	shf.l.wrap.b32 	%r3298, %r2370, %r2370, 5;
	// begin inline asm
	lop3.b32 %r2365, %r2366, %r2372, %r2368, 202;
	// end inline asm
	add.s32 	%r3299, %r2365, %r2364;
	add.s32 	%r3300, %r3299, %r3298;
	add.s32 	%r2374, %r3300, 1518500249;
	shf.l.wrap.b32 	%r2376, %r2366, %r2366, 30;
	shf.l.wrap.b32 	%r3301, %r2374, %r2374, 5;
	// begin inline asm
	lop3.b32 %r2369, %r2370, %r2376, %r2372, 202;
	// end inline asm
	add.s32 	%r3302, %r2369, %r2368;
	add.s32 	%r3303, %r3302, %r3301;
	add.s32 	%r2378, %r3303, 1518500249;
	shf.l.wrap.b32 	%r2380, %r2370, %r2370, 30;
	shf.l.wrap.b32 	%r3304, %r2378, %r2378, 5;
	// begin inline asm
	lop3.b32 %r2373, %r2374, %r2380, %r2376, 202;
	// end inline asm
	add.s32 	%r3305, %r2373, %r2372;
	add.s32 	%r3306, %r3305, %r3304;
	add.s32 	%r2382, %r3306, 1518500249;
	shf.l.wrap.b32 	%r2384, %r2374, %r2374, 30;
	shf.l.wrap.b32 	%r3307, %r2382, %r2382, 5;
	// begin inline asm
	lop3.b32 %r2377, %r2378, %r2384, %r2380, 202;
	// end inline asm
	add.s32 	%r3308, %r2377, %r2376;
	add.s32 	%r3309, %r3308, %r3307;
	add.s32 	%r2386, %r3309, 1518500249;
	shf.l.wrap.b32 	%r2388, %r2378, %r2378, 30;
	shf.l.wrap.b32 	%r3310, %r2386, %r2386, 5;
	// begin inline asm
	lop3.b32 %r2381, %r2382, %r2388, %r2384, 202;
	// end inline asm
	add.s32 	%r3311, %r2381, %r2380;
	add.s32 	%r3312, %r3311, %r3310;
	add.s32 	%r2390, %r3312, 1518500921;
	shf.l.wrap.b32 	%r2392, %r2382, %r2382, 30;
	shf.l.wrap.b32 	%r3313, %r2390, %r2390, 5;
	// begin inline asm
	lop3.b32 %r2385, %r2386, %r2392, %r2388, 202;
	// end inline asm
	xor.b32  	%r3314, %r3253, %r3255;
	shf.l.wrap.b32 	%r3315, %r3314, %r3314, 1;
	add.s32 	%r3316, %r2385, %r3315;
	add.s32 	%r3317, %r3316, %r2384;
	add.s32 	%r3318, %r3317, %r3313;
	add.s32 	%r2394, %r3318, 1518500249;
	shf.l.wrap.b32 	%r2396, %r2386, %r2386, 30;
	shf.l.wrap.b32 	%r3319, %r2394, %r2394, 5;
	// begin inline asm
	lop3.b32 %r2389, %r2390, %r2396, %r2392, 202;
	// end inline asm
	xor.b32  	%r3320, %r3254, %r3256;
	shf.l.wrap.b32 	%r3321, %r3320, %r3320, 1;
	add.s32 	%r3322, %r2389, %r3321;
	add.s32 	%r3323, %r3322, %r2388;
	add.s32 	%r3324, %r3323, %r3319;
	add.s32 	%r2398, %r3324, 1518500249;
	shf.l.wrap.b32 	%r2400, %r2390, %r2390, 30;
	shf.l.wrap.b32 	%r3325, %r2398, %r2398, 5;
	// begin inline asm
	lop3.b32 %r2393, %r2394, %r2400, %r2396, 202;
	// end inline asm
	xor.b32  	%r3326, %r3257, %r3255;
	xor.b32  	%r3327, %r3326, 672;
	shf.l.wrap.b32 	%r3328, %r3327, %r3327, 1;
	add.s32 	%r3329, %r2393, %r3328;
	add.s32 	%r3330, %r3329, %r2392;
	add.s32 	%r3331, %r3330, %r3325;
	add.s32 	%r2402, %r3331, 1518500249;
	shf.l.wrap.b32 	%r2404, %r2394, %r2394, 30;
	shf.l.wrap.b32 	%r3332, %r2402, %r2402, 5;
	// begin inline asm
	lop3.b32 %r2397, %r2398, %r2404, %r2400, 202;
	// end inline asm
	xor.b32  	%r3333, %r3315, %r3256;
	xor.b32  	%r3334, %r3333, -2147483648;
	shf.l.wrap.b32 	%r3335, %r3334, %r3334, 1;
	add.s32 	%r3336, %r2397, %r3335;
	add.s32 	%r3337, %r3336, %r2396;
	add.s32 	%r3338, %r3337, %r3332;
	add.s32 	%r2406, %r3338, 1518500249;
	shf.l.wrap.b32 	%r2408, %r2398, %r2398, 30;
	shf.l.wrap.b32 	%r3339, %r2406, %r2406, 5;
	// begin inline asm
	lop3.b32 %r2401, %r2402, %r2408, %r2404, 150;
	// end inline asm
	xor.b32  	%r3340, %r3257, %r3321;
	shf.l.wrap.b32 	%r3341, %r3340, %r3340, 1;
	add.s32 	%r3342, %r2401, %r3341;
	add.s32 	%r3343, %r3342, %r2400;
	add.s32 	%r3344, %r3343, %r3339;
	add.s32 	%r2410, %r3344, 1859775393;
	shf.l.wrap.b32 	%r2412, %r2402, %r2402, 30;
	shf.l.wrap.b32 	%r3345, %r2410, %r2410, 5;
	// begin inline asm
	lop3.b32 %r2405, %r2406, %r2412, %r2408, 150;
	// end inline asm
	xor.b32  	%r3346, %r3328, -2147483648;
	shf.l.wrap.b32 	%r3347, %r3346, %r3346, 1;
	add.s32 	%r3348, %r2405, %r3347;
	add.s32 	%r3349, %r3348, %r2404;
	add.s32 	%r3350, %r3349, %r3345;
	add.s32 	%r2414, %r3350, 1859775393;
	shf.l.wrap.b32 	%r2416, %r2406, %r2406, 30;
	shf.l.wrap.b32 	%r3351, %r2414, %r2414, 5;
	// begin inline asm
	lop3.b32 %r2409, %r2410, %r2416, %r2412, 150;
	// end inline asm
	shf.l.wrap.b32 	%r3352, %r3335, %r3335, 1;
	add.s32 	%r3353, %r2409, %r3352;
	add.s32 	%r3354, %r3353, %r2408;
	add.s32 	%r3355, %r3354, %r3351;
	add.s32 	%r2418, %r3355, 1859775393;
	shf.l.wrap.b32 	%r2420, %r2410, %r2410, 30;
	shf.l.wrap.b32 	%r3356, %r2418, %r2418, 5;
	// begin inline asm
	lop3.b32 %r2413, %r2414, %r2420, %r2416, 150;
	// end inline asm
	xor.b32  	%r3357, %r3341, 672;
	shf.l.wrap.b32 	%r3358, %r3357, %r3357, 1;
	add.s32 	%r3359, %r2413, %r3358;
	add.s32 	%r3360, %r3359, %r2412;
	add.s32 	%r3361, %r3360, %r3356;
	add.s32 	%r2422, %r3361, 1859775393;
	shf.l.wrap.b32 	%r2424, %r2414, %r2414, 30;
	shf.l.wrap.b32 	%r3362, %r2422, %r2422, 5;
	// begin inline asm
	lop3.b32 %r2417, %r2418, %r2424, %r2420, 150;
	// end inline asm
	xor.b32  	%r3363, %r3315, %r3347;
	shf.l.wrap.b32 	%r3364, %r3363, %r3363, 1;
	add.s32 	%r3365, %r2417, %r3364;
	add.s32 	%r3366, %r3365, %r2416;
	add.s32 	%r3367, %r3366, %r3362;
	add.s32 	%r2426, %r3367, 1859775393;
	shf.l.wrap.b32 	%r2428, %r2418, %r2418, 30;
	shf.l.wrap.b32 	%r3368, %r2426, %r2426, 5;
	// begin inline asm
	lop3.b32 %r2421, %r2422, %r2428, %r2424, 150;
	// end inline asm
	xor.b32  	%r3369, %r3321, %r3352;
	shf.l.wrap.b32 	%r3370, %r3369, %r3369, 1;
	add.s32 	%r3371, %r2421, %r3370;
	add.s32 	%r3372, %r3371, %r2420;
	add.s32 	%r3373, %r3372, %r3368;
	add.s32 	%r2430, %r3373, 1859775393;
	shf.l.wrap.b32 	%r2432, %r2422, %r2422, 30;
	shf.l.wrap.b32 	%r3374, %r2430, %r2430, 5;
	// begin inline asm
	lop3.b32 %r2425, %r2426, %r2432, %r2428, 150;
	// end inline asm
	xor.b32  	%r3375, %r3328, %r3358;
	shf.l.wrap.b32 	%r3376, %r3375, %r3375, 1;
	add.s32 	%r3377, %r2425, %r3376;
	add.s32 	%r3378, %r3377, %r2424;
	add.s32 	%r3379, %r3378, %r3374;
	add.s32 	%r2434, %r3379, 1859775393;
	shf.l.wrap.b32 	%r2436, %r2426, %r2426, 30;
	shf.l.wrap.b32 	%r3380, %r2434, %r2434, 5;
	// begin inline asm
	lop3.b32 %r2429, %r2430, %r2436, %r2432, 150;
	// end inline asm
	xor.b32  	%r3381, %r3335, %r3364;
	shf.l.wrap.b32 	%r3382, %r3381, %r3381, 1;
	add.s32 	%r3383, %r2429, %r3382;
	add.s32 	%r3384, %r3383, %r2428;
	add.s32 	%r3385, %r3384, %r3380;
	add.s32 	%r2438, %r3385, 1859775393;
	shf.l.wrap.b32 	%r2440, %r2430, %r2430, 30;
	shf.l.wrap.b32 	%r3386, %r2438, %r2438, 5;
	// begin inline asm
	lop3.b32 %r2433, %r2434, %r2440, %r2436, 150;
	// end inline asm
	xor.b32  	%r3387, %r3341, %r3370;
	shf.l.wrap.b32 	%r3388, %r3387, %r3387, 1;
	add.s32 	%r3389, %r2433, %r3388;
	add.s32 	%r3390, %r3389, %r2432;
	add.s32 	%r3391, %r3390, %r3386;
	add.s32 	%r2442, %r3391, 1859775393;
	shf.l.wrap.b32 	%r2444, %r2434, %r2434, 30;
	shf.l.wrap.b32 	%r3392, %r2442, %r2442, 5;
	// begin inline asm
	lop3.b32 %r2437, %r2438, %r2444, %r2440, 150;
	// end inline asm
	xor.b32  	%r3393, %r3347, %r3376;
	xor.b32  	%r3394, %r3393, 672;
	shf.l.wrap.b32 	%r3395, %r3394, %r3394, 1;
	add.s32 	%r3396, %r2437, %r3395;
	add.s32 	%r3397, %r3396, %r2436;
	add.s32 	%r3398, %r3397, %r3392;
	add.s32 	%r2446, %r3398, 1859775393;
	shf.l.wrap.b32 	%r2448, %r2438, %r2438, 30;
	shf.l.wrap.b32 	%r3399, %r2446, %r2446, 5;
	// begin inline asm
	lop3.b32 %r2441, %r2442, %r2448, %r2444, 150;
	// end inline asm
	xor.b32  	%r3400, %r3352, %r3382;
	xor.b32  	%r3401, %r3400, %r3315;
	shf.l.wrap.b32 	%r3402, %r3401, %r3401, 1;
	add.s32 	%r3403, %r2441, %r3402;
	add.s32 	%r3404, %r3403, %r2440;
	add.s32 	%r3405, %r3404, %r3399;
	add.s32 	%r2450, %r3405, 1859775393;
	shf.l.wrap.b32 	%r2452, %r2442, %r2442, 30;
	shf.l.wrap.b32 	%r3406, %r2450, %r2450, 5;
	// begin inline asm
	lop3.b32 %r2445, %r2446, %r2452, %r2448, 150;
	// end inline asm
	xor.b32  	%r3407, %r3358, %r3388;
	xor.b32  	%r3408, %r3407, %r3321;
	xor.b32  	%r3409, %r3408, 672;
	shf.l.wrap.b32 	%r3410, %r3409, %r3409, 1;
	add.s32 	%r3411, %r2445, %r3410;
	add.s32 	%r3412, %r3411, %r2444;
	add.s32 	%r3413, %r3412, %r3406;
	add.s32 	%r2454, %r3413, 1859775393;
	shf.l.wrap.b32 	%r2456, %r2446, %r2446, 30;
	shf.l.wrap.b32 	%r3414, %r2454, %r2454, 5;
	// begin inline asm
	lop3.b32 %r2449, %r2450, %r2456, %r2452, 150;
	// end inline asm
	xor.b32  	%r3415, %r3364, %r3395;
	xor.b32  	%r3416, %r3415, %r3328;
	xor.b32  	%r3417, %r3416, %r3315;
	shf.l.wrap.b32 	%r3418, %r3417, %r3417, 1;
	add.s32 	%r3419, %r2449, %r3418;
	add.s32 	%r3420, %r3419, %r2448;
	add.s32 	%r3421, %r3420, %r3414;
	add.s32 	%r2458, %r3421, 1859775393;
	shf.l.wrap.b32 	%r2460, %r2450, %r2450, 30;
	shf.l.wrap.b32 	%r3422, %r2458, %r2458, 5;
	// begin inline asm
	lop3.b32 %r2453, %r2454, %r2460, %r2456, 150;
	// end inline asm
	xor.b32  	%r3423, %r3370, %r3402;
	xor.b32  	%r3424, %r3423, %r3335;
	xor.b32  	%r3425, %r3424, %r3321;
	shf.l.wrap.b32 	%r3426, %r3425, %r3425, 1;
	add.s32 	%r3427, %r2453, %r3426;
	add.s32 	%r3428, %r3427, %r2452;
	add.s32 	%r3429, %r3428, %r3422;
	add.s32 	%r2462, %r3429, 1859775393;
	shf.l.wrap.b32 	%r2464, %r2454, %r2454, 30;
	shf.l.wrap.b32 	%r3430, %r2462, %r2462, 5;
	// begin inline asm
	lop3.b32 %r2457, %r2458, %r2464, %r2460, 150;
	// end inline asm
	xor.b32  	%r3431, %r3376, %r3410;
	xor.b32  	%r3432, %r3431, %r3341;
	xor.b32  	%r3433, %r3432, %r3328;
	shf.l.wrap.b32 	%r3434, %r3433, %r3433, 1;
	add.s32 	%r3435, %r2457, %r3434;
	add.s32 	%r3436, %r3435, %r2456;
	add.s32 	%r3437, %r3436, %r3430;
	add.s32 	%r2466, %r3437, 1859775393;
	shf.l.wrap.b32 	%r2468, %r2458, %r2458, 30;
	shf.l.wrap.b32 	%r3438, %r2466, %r2466, 5;
	// begin inline asm
	lop3.b32 %r2461, %r2462, %r2468, %r2464, 150;
	// end inline asm
	xor.b32  	%r3439, %r3382, %r3418;
	xor.b32  	%r3440, %r3439, %r3347;
	xor.b32  	%r3441, %r3440, %r3335;
	shf.l.wrap.b32 	%r3442, %r3441, %r3441, 1;
	add.s32 	%r3443, %r2461, %r3442;
	add.s32 	%r3444, %r3443, %r2460;
	add.s32 	%r3445, %r3444, %r3438;
	add.s32 	%r2470, %r3445, 1859775393;
	shf.l.wrap.b32 	%r2472, %r2462, %r2462, 30;
	shf.l.wrap.b32 	%r3446, %r2470, %r2470, 5;
	// begin inline asm
	lop3.b32 %r2465, %r2466, %r2472, %r2468, 150;
	// end inline asm
	xor.b32  	%r3447, %r3388, %r3426;
	xor.b32  	%r3448, %r3447, %r3352;
	xor.b32  	%r3449, %r3448, %r3341;
	shf.l.wrap.b32 	%r3450, %r3449, %r3449, 1;
	add.s32 	%r3451, %r2465, %r3450;
	add.s32 	%r3452, %r3451, %r2464;
	add.s32 	%r3453, %r3452, %r3446;
	add.s32 	%r2474, %r3453, 1859775393;
	shf.l.wrap.b32 	%r2476, %r2466, %r2466, 30;
	shf.l.wrap.b32 	%r3454, %r2474, %r2474, 5;
	// begin inline asm
	lop3.b32 %r2469, %r2470, %r2476, %r2472, 150;
	// end inline asm
	xor.b32  	%r3455, %r3395, %r3434;
	xor.b32  	%r3456, %r3455, %r3358;
	xor.b32  	%r3457, %r3456, %r3347;
	shf.l.wrap.b32 	%r3458, %r3457, %r3457, 1;
	add.s32 	%r3459, %r2469, %r3458;
	add.s32 	%r3460, %r3459, %r2468;
	add.s32 	%r3461, %r3460, %r3454;
	add.s32 	%r2478, %r3461, 1859775393;
	shf.l.wrap.b32 	%r2480, %r2470, %r2470, 30;
	shf.l.wrap.b32 	%r3462, %r2478, %r2478, 5;
	// begin inline asm
	lop3.b32 %r2473, %r2474, %r2480, %r2476, 150;
	// end inline asm
	xor.b32  	%r3463, %r3402, %r3442;
	xor.b32  	%r3464, %r3463, %r3364;
	xor.b32  	%r3465, %r3464, %r3352;
	shf.l.wrap.b32 	%r3466, %r3465, %r3465, 1;
	add.s32 	%r3467, %r2473, %r3466;
	add.s32 	%r3468, %r3467, %r2472;
	add.s32 	%r3469, %r3468, %r3462;
	add.s32 	%r2482, %r3469, 1859775393;
	shf.l.wrap.b32 	%r2484, %r2474, %r2474, 30;
	shf.l.wrap.b32 	%r3470, %r2482, %r2482, 5;
	// begin inline asm
	lop3.b32 %r2477, %r2478, %r2484, %r2480, 150;
	// end inline asm
	xor.b32  	%r3471, %r3410, %r3450;
	xor.b32  	%r3472, %r3471, %r3370;
	xor.b32  	%r3473, %r3472, %r3358;
	shf.l.wrap.b32 	%r3474, %r3473, %r3473, 1;
	add.s32 	%r3475, %r2477, %r3474;
	add.s32 	%r3476, %r3475, %r2476;
	add.s32 	%r3477, %r3476, %r3470;
	add.s32 	%r2486, %r3477, 1859775393;
	shf.l.wrap.b32 	%r2488, %r2478, %r2478, 30;
	shf.l.wrap.b32 	%r3478, %r2486, %r2486, 5;
	// begin inline asm
	lop3.b32 %r2481, %r2482, %r2488, %r2484, 232;
	// end inline asm
	xor.b32  	%r3479, %r3418, %r3458;
	xor.b32  	%r3480, %r3479, %r3376;
	xor.b32  	%r3481, %r3480, %r3364;
	shf.l.wrap.b32 	%r3482, %r3481, %r3481, 1;
	add.s32 	%r3483, %r2481, %r3482;
	add.s32 	%r3484, %r3483, %r2480;
	add.s32 	%r3485, %r3484, %r3478;
	add.s32 	%r2490, %r3485, -1894007588;
	shf.l.wrap.b32 	%r2492, %r2482, %r2482, 30;
	shf.l.wrap.b32 	%r3486, %r2490, %r2490, 5;
	// begin inline asm
	lop3.b32 %r2485, %r2486, %r2492, %r2488, 232;
	// end inline asm
	xor.b32  	%r3487, %r3426, %r3466;
	xor.b32  	%r3488, %r3487, %r3382;
	xor.b32  	%r3489, %r3488, %r3370;
	shf.l.wrap.b32 	%r3490, %r3489, %r3489, 1;
	add.s32 	%r3491, %r2485, %r3490;
	add.s32 	%r3492, %r3491, %r2484;
	add.s32 	%r3493, %r3492, %r3486;
	add.s32 	%r2494, %r3493, -1894007588;
	shf.l.wrap.b32 	%r2496, %r2486, %r2486, 30;
	shf.l.wrap.b32 	%r3494, %r2494, %r2494, 5;
	// begin inline asm
	lop3.b32 %r2489, %r2490, %r2496, %r2492, 232;
	// end inline asm
	xor.b32  	%r3495, %r3434, %r3474;
	xor.b32  	%r3496, %r3495, %r3388;
	xor.b32  	%r3497, %r3496, %r3376;
	shf.l.wrap.b32 	%r3498, %r3497, %r3497, 1;
	add.s32 	%r3499, %r2489, %r3498;
	add.s32 	%r3500, %r3499, %r2488;
	add.s32 	%r3501, %r3500, %r3494;
	add.s32 	%r2498, %r3501, -1894007588;
	shf.l.wrap.b32 	%r2500, %r2490, %r2490, 30;
	shf.l.wrap.b32 	%r3502, %r2498, %r2498, 5;
	// begin inline asm
	lop3.b32 %r2493, %r2494, %r2500, %r2496, 232;
	// end inline asm
	xor.b32  	%r3503, %r3442, %r3482;
	xor.b32  	%r3504, %r3503, %r3395;
	xor.b32  	%r3505, %r3504, %r3382;
	shf.l.wrap.b32 	%r3506, %r3505, %r3505, 1;
	add.s32 	%r3507, %r2493, %r3506;
	add.s32 	%r3508, %r3507, %r2492;
	add.s32 	%r3509, %r3508, %r3502;
	add.s32 	%r2502, %r3509, -1894007588;
	shf.l.wrap.b32 	%r2504, %r2494, %r2494, 30;
	shf.l.wrap.b32 	%r3510, %r2502, %r2502, 5;
	// begin inline asm
	lop3.b32 %r2497, %r2498, %r2504, %r2500, 232;
	// end inline asm
	xor.b32  	%r3511, %r3450, %r3490;
	xor.b32  	%r3512, %r3511, %r3402;
	xor.b32  	%r3513, %r3512, %r3388;
	shf.l.wrap.b32 	%r3514, %r3513, %r3513, 1;
	add.s32 	%r3515, %r2497, %r3514;
	add.s32 	%r3516, %r3515, %r2496;
	add.s32 	%r3517, %r3516, %r3510;
	add.s32 	%r2506, %r3517, -1894007588;
	shf.l.wrap.b32 	%r2508, %r2498, %r2498, 30;
	shf.l.wrap.b32 	%r3518, %r2506, %r2506, 5;
	// begin inline asm
	lop3.b32 %r2501, %r2502, %r2508, %r2504, 232;
	// end inline asm
	xor.b32  	%r3519, %r3458, %r3498;
	xor.b32  	%r3520, %r3519, %r3410;
	xor.b32  	%r3521, %r3520, %r3395;
	shf.l.wrap.b32 	%r3522, %r3521, %r3521, 1;
	add.s32 	%r3523, %r2501, %r3522;
	add.s32 	%r3524, %r3523, %r2500;
	add.s32 	%r3525, %r3524, %r3518;
	add.s32 	%r2510, %r3525, -1894007588;
	shf.l.wrap.b32 	%r2512, %r2502, %r2502, 30;
	shf.l.wrap.b32 	%r3526, %r2510, %r2510, 5;
	// begin inline asm
	lop3.b32 %r2505, %r2506, %r2512, %r2508, 232;
	// end inline asm
	xor.b32  	%r3527, %r3466, %r3506;
	xor.b32  	%r3528, %r3527, %r3418;
	xor.b32  	%r3529, %r3528, %r3402;
	shf.l.wrap.b32 	%r3530, %r3529, %r3529, 1;
	add.s32 	%r3531, %r2505, %r3530;
	add.s32 	%r3532, %r3531, %r2504;
	add.s32 	%r3533, %r3532, %r3526;
	add.s32 	%r2514, %r3533, -1894007588;
	shf.l.wrap.b32 	%r2516, %r2506, %r2506, 30;
	shf.l.wrap.b32 	%r3534, %r2514, %r2514, 5;
	// begin inline asm
	lop3.b32 %r2509, %r2510, %r2516, %r2512, 232;
	// end inline asm
	xor.b32  	%r3535, %r3474, %r3514;
	xor.b32  	%r3536, %r3535, %r3426;
	xor.b32  	%r3537, %r3536, %r3410;
	shf.l.wrap.b32 	%r3538, %r3537, %r3537, 1;
	add.s32 	%r3539, %r2509, %r3538;
	add.s32 	%r3540, %r3539, %r2508;
	add.s32 	%r3541, %r3540, %r3534;
	add.s32 	%r2518, %r3541, -1894007588;
	shf.l.wrap.b32 	%r2520, %r2510, %r2510, 30;
	shf.l.wrap.b32 	%r3542, %r2518, %r2518, 5;
	// begin inline asm
	lop3.b32 %r2513, %r2514, %r2520, %r2516, 232;
	// end inline asm
	xor.b32  	%r3543, %r3482, %r3522;
	xor.b32  	%r3544, %r3543, %r3434;
	xor.b32  	%r3545, %r3544, %r3418;
	shf.l.wrap.b32 	%r3546, %r3545, %r3545, 1;
	add.s32 	%r3547, %r2513, %r3546;
	add.s32 	%r3548, %r3547, %r2512;
	add.s32 	%r3549, %r3548, %r3542;
	add.s32 	%r2522, %r3549, -1894007588;
	shf.l.wrap.b32 	%r2524, %r2514, %r2514, 30;
	shf.l.wrap.b32 	%r3550, %r2522, %r2522, 5;
	// begin inline asm
	lop3.b32 %r2517, %r2518, %r2524, %r2520, 232;
	// end inline asm
	xor.b32  	%r3551, %r3490, %r3530;
	xor.b32  	%r3552, %r3551, %r3442;
	xor.b32  	%r3553, %r3552, %r3426;
	shf.l.wrap.b32 	%r3554, %r3553, %r3553, 1;
	add.s32 	%r3555, %r2517, %r3554;
	add.s32 	%r3556, %r3555, %r2516;
	add.s32 	%r3557, %r3556, %r3550;
	add.s32 	%r2526, %r3557, -1894007588;
	shf.l.wrap.b32 	%r2528, %r2518, %r2518, 30;
	shf.l.wrap.b32 	%r3558, %r2526, %r2526, 5;
	// begin inline asm
	lop3.b32 %r2521, %r2522, %r2528, %r2524, 232;
	// end inline asm
	xor.b32  	%r3559, %r3498, %r3538;
	xor.b32  	%r3560, %r3559, %r3450;
	xor.b32  	%r3561, %r3560, %r3434;
	shf.l.wrap.b32 	%r3562, %r3561, %r3561, 1;
	add.s32 	%r3563, %r2521, %r3562;
	add.s32 	%r3564, %r3563, %r2520;
	add.s32 	%r3565, %r3564, %r3558;
	add.s32 	%r2530, %r3565, -1894007588;
	shf.l.wrap.b32 	%r2532, %r2522, %r2522, 30;
	shf.l.wrap.b32 	%r3566, %r2530, %r2530, 5;
	// begin inline asm
	lop3.b32 %r2525, %r2526, %r2532, %r2528, 232;
	// end inline asm
	xor.b32  	%r3567, %r3506, %r3546;
	xor.b32  	%r3568, %r3567, %r3458;
	xor.b32  	%r3569, %r3568, %r3442;
	shf.l.wrap.b32 	%r3570, %r3569, %r3569, 1;
	add.s32 	%r3571, %r2525, %r3570;
	add.s32 	%r3572, %r3571, %r2524;
	add.s32 	%r3573, %r3572, %r3566;
	add.s32 	%r2534, %r3573, -1894007588;
	shf.l.wrap.b32 	%r2536, %r2526, %r2526, 30;
	shf.l.wrap.b32 	%r3574, %r2534, %r2534, 5;
	// begin inline asm
	lop3.b32 %r2529, %r2530, %r2536, %r2532, 232;
	// end inline asm
	xor.b32  	%r3575, %r3514, %r3554;
	xor.b32  	%r3576, %r3575, %r3466;
	xor.b32  	%r3577, %r3576, %r3450;
	shf.l.wrap.b32 	%r3578, %r3577, %r3577, 1;
	add.s32 	%r3579, %r2529, %r3578;
	add.s32 	%r3580, %r3579, %r2528;
	add.s32 	%r3581, %r3580, %r3574;
	add.s32 	%r2538, %r3581, -1894007588;
	shf.l.wrap.b32 	%r2540, %r2530, %r2530, 30;
	shf.l.wrap.b32 	%r3582, %r2538, %r2538, 5;
	// begin inline asm
	lop3.b32 %r2533, %r2534, %r2540, %r2536, 232;
	// end inline asm
	xor.b32  	%r3583, %r3522, %r3562;
	xor.b32  	%r3584, %r3583, %r3474;
	xor.b32  	%r3585, %r3584, %r3458;
	shf.l.wrap.b32 	%r3586, %r3585, %r3585, 1;
	add.s32 	%r3587, %r2533, %r3586;
	add.s32 	%r3588, %r3587, %r2532;
	add.s32 	%r3589, %r3588, %r3582;
	add.s32 	%r2542, %r3589, -1894007588;
	shf.l.wrap.b32 	%r2544, %r2534, %r2534, 30;
	shf.l.wrap.b32 	%r3590, %r2542, %r2542, 5;
	// begin inline asm
	lop3.b32 %r2537, %r2538, %r2544, %r2540, 232;
	// end inline asm
	xor.b32  	%r3591, %r3530, %r3570;
	xor.b32  	%r3592, %r3591, %r3482;
	xor.b32  	%r3593, %r3592, %r3466;
	shf.l.wrap.b32 	%r3594, %r3593, %r3593, 1;
	add.s32 	%r3595, %r2537, %r3594;
	add.s32 	%r3596, %r3595, %r2536;
	add.s32 	%r3597, %r3596, %r3590;
	add.s32 	%r2546, %r3597, -1894007588;
	shf.l.wrap.b32 	%r2548, %r2538, %r2538, 30;
	shf.l.wrap.b32 	%r3598, %r2546, %r2546, 5;
	// begin inline asm
	lop3.b32 %r2541, %r2542, %r2548, %r2544, 232;
	// end inline asm
	xor.b32  	%r3599, %r3538, %r3578;
	xor.b32  	%r3600, %r3599, %r3490;
	xor.b32  	%r3601, %r3600, %r3474;
	shf.l.wrap.b32 	%r3602, %r3601, %r3601, 1;
	add.s32 	%r3603, %r2541, %r3602;
	add.s32 	%r3604, %r3603, %r2540;
	add.s32 	%r3605, %r3604, %r3598;
	add.s32 	%r2550, %r3605, -1894007588;
	shf.l.wrap.b32 	%r2552, %r2542, %r2542, 30;
	shf.l.wrap.b32 	%r3606, %r2550, %r2550, 5;
	// begin inline asm
	lop3.b32 %r2545, %r2546, %r2552, %r2548, 232;
	// end inline asm
	xor.b32  	%r3607, %r3546, %r3586;
	xor.b32  	%r3608, %r3607, %r3498;
	xor.b32  	%r3609, %r3608, %r3482;
	shf.l.wrap.b32 	%r3610, %r3609, %r3609, 1;
	add.s32 	%r3611, %r2545, %r3610;
	add.s32 	%r3612, %r3611, %r2544;
	add.s32 	%r3613, %r3612, %r3606;
	add.s32 	%r2554, %r3613, -1894007588;
	shf.l.wrap.b32 	%r2556, %r2546, %r2546, 30;
	shf.l.wrap.b32 	%r3614, %r2554, %r2554, 5;
	// begin inline asm
	lop3.b32 %r2549, %r2550, %r2556, %r2552, 232;
	// end inline asm
	xor.b32  	%r3615, %r3554, %r3594;
	xor.b32  	%r3616, %r3615, %r3506;
	xor.b32  	%r3617, %r3616, %r3490;
	shf.l.wrap.b32 	%r3618, %r3617, %r3617, 1;
	add.s32 	%r3619, %r2549, %r3618;
	add.s32 	%r3620, %r3619, %r2548;
	add.s32 	%r3621, %r3620, %r3614;
	add.s32 	%r2558, %r3621, -1894007588;
	shf.l.wrap.b32 	%r2560, %r2550, %r2550, 30;
	shf.l.wrap.b32 	%r3622, %r2558, %r2558, 5;
	// begin inline asm
	lop3.b32 %r2553, %r2554, %r2560, %r2556, 232;
	// end inline asm
	xor.b32  	%r3623, %r3562, %r3602;
	xor.b32  	%r3624, %r3623, %r3514;
	xor.b32  	%r3625, %r3624, %r3498;
	shf.l.wrap.b32 	%r3626, %r3625, %r3625, 1;
	add.s32 	%r3627, %r2553, %r3626;
	add.s32 	%r3628, %r3627, %r2552;
	add.s32 	%r3629, %r3628, %r3622;
	add.s32 	%r2562, %r3629, -1894007588;
	shf.l.wrap.b32 	%r2564, %r2554, %r2554, 30;
	shf.l.wrap.b32 	%r3630, %r2562, %r2562, 5;
	// begin inline asm
	lop3.b32 %r2557, %r2558, %r2564, %r2560, 232;
	// end inline asm
	xor.b32  	%r3631, %r3570, %r3610;
	xor.b32  	%r3632, %r3631, %r3522;
	xor.b32  	%r3633, %r3632, %r3506;
	shf.l.wrap.b32 	%r3634, %r3633, %r3633, 1;
	add.s32 	%r3635, %r2557, %r3634;
	add.s32 	%r3636, %r3635, %r2556;
	add.s32 	%r3637, %r3636, %r3630;
	add.s32 	%r2566, %r3637, -1894007588;
	shf.l.wrap.b32 	%r2568, %r2558, %r2558, 30;
	shf.l.wrap.b32 	%r3638, %r2566, %r2566, 5;
	// begin inline asm
	lop3.b32 %r2561, %r2562, %r2568, %r2564, 150;
	// end inline asm
	xor.b32  	%r3639, %r3578, %r3618;
	xor.b32  	%r3640, %r3639, %r3530;
	xor.b32  	%r3641, %r3640, %r3514;
	shf.l.wrap.b32 	%r3642, %r3641, %r3641, 1;
	add.s32 	%r3643, %r2561, %r3642;
	add.s32 	%r3644, %r3643, %r2560;
	add.s32 	%r3645, %r3644, %r3638;
	add.s32 	%r2570, %r3645, -899497514;
	shf.l.wrap.b32 	%r2572, %r2562, %r2562, 30;
	shf.l.wrap.b32 	%r3646, %r2570, %r2570, 5;
	// begin inline asm
	lop3.b32 %r2565, %r2566, %r2572, %r2568, 150;
	// end inline asm
	xor.b32  	%r3647, %r3586, %r3626;
	xor.b32  	%r3648, %r3647, %r3538;
	xor.b32  	%r3649, %r3648, %r3522;
	shf.l.wrap.b32 	%r3650, %r3649, %r3649, 1;
	add.s32 	%r3651, %r2565, %r3650;
	add.s32 	%r3652, %r3651, %r2564;
	add.s32 	%r3653, %r3652, %r3646;
	add.s32 	%r2574, %r3653, -899497514;
	shf.l.wrap.b32 	%r2576, %r2566, %r2566, 30;
	shf.l.wrap.b32 	%r3654, %r2574, %r2574, 5;
	// begin inline asm
	lop3.b32 %r2569, %r2570, %r2576, %r2572, 150;
	// end inline asm
	xor.b32  	%r3655, %r3594, %r3634;
	xor.b32  	%r3656, %r3655, %r3546;
	xor.b32  	%r3657, %r3656, %r3530;
	shf.l.wrap.b32 	%r3658, %r3657, %r3657, 1;
	add.s32 	%r3659, %r2569, %r3658;
	add.s32 	%r3660, %r3659, %r2568;
	add.s32 	%r3661, %r3660, %r3654;
	add.s32 	%r2578, %r3661, -899497514;
	shf.l.wrap.b32 	%r2580, %r2570, %r2570, 30;
	shf.l.wrap.b32 	%r3662, %r2578, %r2578, 5;
	// begin inline asm
	lop3.b32 %r2573, %r2574, %r2580, %r2576, 150;
	// end inline asm
	xor.b32  	%r3663, %r3602, %r3642;
	xor.b32  	%r3664, %r3663, %r3554;
	xor.b32  	%r3665, %r3664, %r3538;
	shf.l.wrap.b32 	%r3666, %r3665, %r3665, 1;
	add.s32 	%r3667, %r2573, %r3666;
	add.s32 	%r3668, %r3667, %r2572;
	add.s32 	%r3669, %r3668, %r3662;
	add.s32 	%r2582, %r3669, -899497514;
	shf.l.wrap.b32 	%r2584, %r2574, %r2574, 30;
	shf.l.wrap.b32 	%r3670, %r2582, %r2582, 5;
	// begin inline asm
	lop3.b32 %r2577, %r2578, %r2584, %r2580, 150;
	// end inline asm
	xor.b32  	%r3671, %r3610, %r3650;
	xor.b32  	%r3672, %r3671, %r3562;
	xor.b32  	%r3673, %r3672, %r3546;
	shf.l.wrap.b32 	%r3674, %r3673, %r3673, 1;
	add.s32 	%r3675, %r2577, %r3674;
	add.s32 	%r3676, %r3675, %r2576;
	add.s32 	%r3677, %r3676, %r3670;
	add.s32 	%r2586, %r3677, -899497514;
	shf.l.wrap.b32 	%r2588, %r2578, %r2578, 30;
	shf.l.wrap.b32 	%r3678, %r2586, %r2586, 5;
	// begin inline asm
	lop3.b32 %r2581, %r2582, %r2588, %r2584, 150;
	// end inline asm
	xor.b32  	%r3679, %r3618, %r3658;
	xor.b32  	%r3680, %r3679, %r3570;
	xor.b32  	%r3681, %r3680, %r3554;
	shf.l.wrap.b32 	%r3682, %r3681, %r3681, 1;
	add.s32 	%r3683, %r2581, %r3682;
	add.s32 	%r3684, %r3683, %r2580;
	add.s32 	%r3685, %r3684, %r3678;
	add.s32 	%r2590, %r3685, -899497514;
	shf.l.wrap.b32 	%r2592, %r2582, %r2582, 30;
	shf.l.wrap.b32 	%r3686, %r2590, %r2590, 5;
	// begin inline asm
	lop3.b32 %r2585, %r2586, %r2592, %r2588, 150;
	// end inline asm
	xor.b32  	%r3687, %r3626, %r3666;
	xor.b32  	%r3688, %r3687, %r3578;
	xor.b32  	%r3689, %r3688, %r3562;
	shf.l.wrap.b32 	%r3690, %r3689, %r3689, 1;
	add.s32 	%r3691, %r2585, %r2584;
	add.s32 	%r3692, %r3691, %r3690;
	add.s32 	%r3693, %r3692, %r3686;
	add.s32 	%r2594, %r3693, -899497514;
	shf.l.wrap.b32 	%r2596, %r2586, %r2586, 30;
	shf.l.wrap.b32 	%r3694, %r2594, %r2594, 5;
	// begin inline asm
	lop3.b32 %r2589, %r2590, %r2596, %r2592, 150;
	// end inline asm
	xor.b32  	%r3695, %r3634, %r3674;
	xor.b32  	%r3696, %r3695, %r3586;
	xor.b32  	%r3697, %r3696, %r3570;
	shf.l.wrap.b32 	%r3698, %r3697, %r3697, 1;
	add.s32 	%r3699, %r2589, %r2588;
	add.s32 	%r3700, %r3699, %r3698;
	add.s32 	%r3701, %r3700, %r3694;
	add.s32 	%r2598, %r3701, -899497514;
	shf.l.wrap.b32 	%r2600, %r2590, %r2590, 30;
	shf.l.wrap.b32 	%r3702, %r2598, %r2598, 5;
	// begin inline asm
	lop3.b32 %r2593, %r2594, %r2600, %r2596, 150;
	// end inline asm
	xor.b32  	%r3703, %r3642, %r3682;
	xor.b32  	%r3704, %r3703, %r3594;
	xor.b32  	%r3705, %r3704, %r3578;
	shf.l.wrap.b32 	%r3706, %r3705, %r3705, 1;
	add.s32 	%r3707, %r2593, %r2592;
	add.s32 	%r3708, %r3707, %r3706;
	add.s32 	%r3709, %r3708, %r3702;
	add.s32 	%r2602, %r3709, -899497514;
	shf.l.wrap.b32 	%r2604, %r2594, %r2594, 30;
	shf.l.wrap.b32 	%r3710, %r2602, %r2602, 5;
	// begin inline asm
	lop3.b32 %r2597, %r2598, %r2604, %r2600, 150;
	// end inline asm
	xor.b32  	%r3711, %r3650, %r3690;
	xor.b32  	%r3712, %r3711, %r3602;
	xor.b32  	%r3713, %r3712, %r3586;
	shf.l.wrap.b32 	%r3714, %r3713, %r3713, 1;
	add.s32 	%r3715, %r2597, %r2596;
	add.s32 	%r3716, %r3715, %r3714;
	add.s32 	%r3717, %r3716, %r3710;
	add.s32 	%r2606, %r3717, -899497514;
	shf.l.wrap.b32 	%r2608, %r2598, %r2598, 30;
	shf.l.wrap.b32 	%r3718, %r2606, %r2606, 5;
	// begin inline asm
	lop3.b32 %r2601, %r2602, %r2608, %r2604, 150;
	// end inline asm
	xor.b32  	%r3719, %r3658, %r3698;
	xor.b32  	%r3720, %r3719, %r3610;
	xor.b32  	%r3721, %r3720, %r3594;
	shf.l.wrap.b32 	%r3722, %r3721, %r3721, 1;
	add.s32 	%r3723, %r2601, %r2600;
	add.s32 	%r3724, %r3723, %r3722;
	add.s32 	%r3725, %r3724, %r3718;
	add.s32 	%r2610, %r3725, -899497514;
	shf.l.wrap.b32 	%r2612, %r2602, %r2602, 30;
	shf.l.wrap.b32 	%r3726, %r2610, %r2610, 5;
	// begin inline asm
	lop3.b32 %r2605, %r2606, %r2612, %r2608, 150;
	// end inline asm
	xor.b32  	%r3727, %r3666, %r3706;
	xor.b32  	%r3728, %r3727, %r3618;
	xor.b32  	%r3729, %r3728, %r3602;
	shf.l.wrap.b32 	%r3730, %r3729, %r3729, 1;
	add.s32 	%r3731, %r2605, %r2604;
	add.s32 	%r3732, %r3731, %r3730;
	add.s32 	%r3733, %r3732, %r3726;
	add.s32 	%r2614, %r3733, -899497514;
	shf.l.wrap.b32 	%r2616, %r2606, %r2606, 30;
	shf.l.wrap.b32 	%r3734, %r2614, %r2614, 5;
	// begin inline asm
	lop3.b32 %r2609, %r2610, %r2616, %r2612, 150;
	// end inline asm
	xor.b32  	%r3735, %r3674, %r3714;
	xor.b32  	%r3736, %r3735, %r3626;
	xor.b32  	%r3737, %r3736, %r3610;
	shf.l.wrap.b32 	%r3738, %r3737, %r3737, 1;
	add.s32 	%r3739, %r2608, %r2609;
	add.s32 	%r3740, %r3739, %r3738;
	add.s32 	%r3741, %r3740, %r3734;
	add.s32 	%r2618, %r3741, -899497514;
	shf.l.wrap.b32 	%r2620, %r2610, %r2610, 30;
	shf.l.wrap.b32 	%r3742, %r2618, %r2618, 5;
	// begin inline asm
	lop3.b32 %r2613, %r2614, %r2620, %r2616, 150;
	// end inline asm
	xor.b32  	%r3743, %r3682, %r3722;
	xor.b32  	%r3744, %r3743, %r3634;
	xor.b32  	%r3745, %r3744, %r3618;
	shf.l.wrap.b32 	%r3746, %r3745, %r3745, 1;
	add.s32 	%r3747, %r2612, %r2613;
	add.s32 	%r3748, %r3747, %r3746;
	add.s32 	%r3749, %r3748, %r3742;
	add.s32 	%r2622, %r3749, -899497514;
	shf.l.wrap.b32 	%r2624, %r2614, %r2614, 30;
	shf.l.wrap.b32 	%r3750, %r2622, %r2622, 5;
	// begin inline asm
	lop3.b32 %r2617, %r2618, %r2624, %r2620, 150;
	// end inline asm
	xor.b32  	%r3751, %r3690, %r3730;
	xor.b32  	%r3752, %r3751, %r3642;
	xor.b32  	%r3753, %r3752, %r3626;
	shf.l.wrap.b32 	%r3754, %r3753, %r3753, 1;
	add.s32 	%r3755, %r2616, %r2617;
	add.s32 	%r3756, %r3755, %r3754;
	add.s32 	%r3757, %r3756, %r3750;
	add.s32 	%r2626, %r3757, -899497514;
	shf.l.wrap.b32 	%r2628, %r2618, %r2618, 30;
	shf.l.wrap.b32 	%r3758, %r2626, %r2626, 5;
	// begin inline asm
	lop3.b32 %r2621, %r2622, %r2628, %r2624, 150;
	// end inline asm
	xor.b32  	%r3759, %r3698, %r3738;
	xor.b32  	%r3760, %r3759, %r3650;
	xor.b32  	%r3761, %r3760, %r3634;
	shf.l.wrap.b32 	%r3762, %r3761, %r3761, 1;
	add.s32 	%r3763, %r2620, %r2621;
	add.s32 	%r3764, %r3763, %r3762;
	add.s32 	%r3765, %r3764, %r3758;
	add.s32 	%r2630, %r3765, -899497514;
	shf.l.wrap.b32 	%r2632, %r2622, %r2622, 30;
	shf.l.wrap.b32 	%r3766, %r2630, %r2630, 5;
	// begin inline asm
	lop3.b32 %r2625, %r2626, %r2632, %r2628, 150;
	// end inline asm
	xor.b32  	%r3767, %r3706, %r3746;
	xor.b32  	%r3768, %r3767, %r3658;
	xor.b32  	%r3769, %r3768, %r3642;
	shf.l.wrap.b32 	%r3770, %r3769, %r3769, 1;
	add.s32 	%r3771, %r2624, %r2625;
	add.s32 	%r3772, %r3771, %r3770;
	add.s32 	%r3773, %r3772, %r3766;
	add.s32 	%r2634, %r3773, -899497514;
	shf.l.wrap.b32 	%r2636, %r2626, %r2626, 30;
	shf.l.wrap.b32 	%r3774, %r2634, %r2634, 5;
	// begin inline asm
	lop3.b32 %r2629, %r2630, %r2636, %r2632, 150;
	// end inline asm
	xor.b32  	%r3775, %r3714, %r3754;
	xor.b32  	%r3776, %r3775, %r3666;
	xor.b32  	%r3777, %r3776, %r3650;
	shf.l.wrap.b32 	%r3778, %r3777, %r3777, 1;
	add.s32 	%r3779, %r2628, %r2629;
	add.s32 	%r3780, %r3779, %r3778;
	add.s32 	%r3781, %r3780, %r3774;
	add.s32 	%r2638, %r3781, -899497514;
	shf.l.wrap.b32 	%r2640, %r2630, %r2630, 30;
	shf.l.wrap.b32 	%r3782, %r2638, %r2638, 5;
	// begin inline asm
	lop3.b32 %r2633, %r2634, %r2640, %r2636, 150;
	// end inline asm
	xor.b32  	%r3783, %r3722, %r3762;
	xor.b32  	%r3784, %r3783, %r3674;
	xor.b32  	%r3785, %r3784, %r3658;
	shf.l.wrap.b32 	%r3786, %r3785, %r3785, 1;
	add.s32 	%r3787, %r2632, %r2633;
	add.s32 	%r3788, %r3787, %r3786;
	add.s32 	%r3789, %r3788, %r3782;
	add.s32 	%r3790, %r3789, -899497514;
	shf.l.wrap.b32 	%r2639, %r2634, %r2634, 30;
	shf.l.wrap.b32 	%r3791, %r3790, %r3790, 5;
	// begin inline asm
	lop3.b32 %r2637, %r2638, %r2639, %r2640, 150;
	// end inline asm
	xor.b32  	%r3792, %r3730, %r3770;
	xor.b32  	%r3793, %r3792, %r3682;
	xor.b32  	%r3794, %r3793, %r3666;
	shf.l.wrap.b32 	%r3795, %r3794, %r3794, 1;
	shf.l.wrap.b32 	%r3796, %r2638, %r2638, 30;
	add.s32 	%r3797, %r2326, %r2636;
	add.s32 	%r3798, %r3797, %r2637;
	add.s32 	%r3799, %r3798, %r3795;
	add.s32 	%r3800, %r3799, %r3791;
	add.s32 	%r3801, %r3800, -899497514;
	add.s32 	%r3802, %r3790, %r2322;
	add.s32 	%r3803, %r3796, %r2323;
	add.s32 	%r3804, %r2639, %r2324;
	add.s32 	%r3805, %r2640, %r3259;
	st.global.u32 	[%rd1+-24], %r3801;
	st.global.u32 	[%rd1+-20], %r3802;
	st.global.u32 	[%rd1+-16], %r3803;
	st.global.u32 	[%rd1+-12], %r3804;
	st.global.u32 	[%rd1+-8], %r3805;
	st.global.u32 	[%rd1+-84], %r3801;
	st.global.u32 	[%rd1+-80], %r3802;
	st.global.u32 	[%rd1+-76], %r3803;
	st.global.u32 	[%rd1+-72], %r3804;
	st.global.u32 	[%rd1+-68], %r3805;
	ld.global.u32 	%r3806, [%rd5+8];
	add.s32 	%r3807, %r3806, -1;
	st.global.u32 	[%rd1+-4], %r3807;

$L__BB2_22:
	ret;

}
	// .globl	pbkdf2_sha512_loop
.entry pbkdf2_sha512_loop(
	.param .u64 .ptr .global .align 8 pbkdf2_sha512_loop_param_0,
	.param .u64 .ptr .global .align 8 pbkdf2_sha512_loop_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<2224>;
	.reg .b64 	%rd<3283>;


	ld.param.u64 	%rd235, [pbkdf2_sha512_loop_param_0];
	mov.b32 	%r9, %envreg3;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	add.s32 	%r13, %r12, %r9;
	mad.lo.s32 	%r1, %r11, %r10, %r13;
	mul.wide.u32 	%rd237, %r1, 264;
	add.s64 	%rd238, %rd235, %rd237;
	ld.global.u32 	%r2, [%rd238+256];
	ld.global.u64 	%rd3267, [%rd238+192];
	ld.global.u64 	%rd2, [%rd238];
	ld.global.u64 	%rd3, [%rd238+64];
	ld.global.u64 	%rd3282, [%rd238+128];
	ld.global.u64 	%rd3268, [%rd238+200];
	ld.global.u64 	%rd6, [%rd238+8];
	ld.global.u64 	%rd7, [%rd238+72];
	ld.global.u64 	%rd3281, [%rd238+136];
	ld.global.u64 	%rd3269, [%rd238+208];
	ld.global.u64 	%rd10, [%rd238+16];
	ld.global.u64 	%rd11, [%rd238+80];
	ld.global.u64 	%rd3280, [%rd238+144];
	ld.global.u64 	%rd3270, [%rd238+216];
	ld.global.u64 	%rd14, [%rd238+24];
	ld.global.u64 	%rd15, [%rd238+88];
	ld.global.u64 	%rd3279, [%rd238+152];
	ld.global.u64 	%rd3271, [%rd238+224];
	ld.global.u64 	%rd18, [%rd238+32];
	ld.global.u64 	%rd19, [%rd238+96];
	ld.global.u64 	%rd3278, [%rd238+160];
	ld.global.u64 	%rd3272, [%rd238+232];
	ld.global.u64 	%rd22, [%rd238+40];
	ld.global.u64 	%rd23, [%rd238+104];
	ld.global.u64 	%rd3277, [%rd238+168];
	ld.global.u64 	%rd3273, [%rd238+240];
	ld.global.u64 	%rd26, [%rd238+48];
	ld.global.u64 	%rd27, [%rd238+112];
	ld.global.u64 	%rd3276, [%rd238+176];
	ld.global.u64 	%rd3274, [%rd238+248];
	ld.global.u64 	%rd30, [%rd238+56];
	ld.global.u64 	%rd31, [%rd238+120];
	ld.global.u64 	%rd3275, [%rd238+184];
	min.u32 	%r14, %r2, 813;
	setp.eq.s32 	%p1, %r14, 0;
	@%p1 bra 	$L__BB3_7;

	{
	.reg .b32 %dummy;
	mov.b64 	{%r16,%dummy}, %rd18;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17}, %rd18;
	}
	shf.r.wrap.b32 	%r18, %r17, %r16, 14;
	shf.r.wrap.b32 	%r19, %r16, %r17, 14;
	mov.b64 	%rd239, {%r19, %r18};
	shf.r.wrap.b32 	%r20, %r17, %r16, 18;
	shf.r.wrap.b32 	%r21, %r16, %r17, 18;
	mov.b64 	%rd240, {%r21, %r20};
	xor.b64  	%rd241, %rd239, %rd240;
	shf.l.wrap.b32 	%r22, %r16, %r17, 23;
	shf.l.wrap.b32 	%r23, %r17, %r16, 23;
	mov.b64 	%rd242, {%r23, %r22};
	xor.b64  	%rd243, %rd241, %rd242;
	xor.b64  	%rd244, %rd26, %rd22;
	and.b64  	%rd245, %rd244, %rd18;
	xor.b64  	%rd246, %rd245, %rd26;
	add.s64 	%rd247, %rd30, %rd243;
	add.s64 	%rd248, %rd247, %rd246;
	add.s64 	%rd33, %rd248, 4794697086780616226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r24}, %rd2;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25,%dummy}, %rd2;
	}
	shf.l.wrap.b32 	%r26, %r25, %r24, 30;
	shf.l.wrap.b32 	%r27, %r24, %r25, 30;
	mov.b64 	%rd249, {%r27, %r26};
	shf.r.wrap.b32 	%r28, %r24, %r25, 28;
	shf.r.wrap.b32 	%r29, %r25, %r24, 28;
	mov.b64 	%rd250, {%r29, %r28};
	xor.b64  	%rd251, %rd250, %rd249;
	shf.l.wrap.b32 	%r30, %r25, %r24, 25;
	shf.l.wrap.b32 	%r31, %r24, %r25, 25;
	mov.b64 	%rd252, {%r31, %r30};
	xor.b64  	%rd253, %rd251, %rd252;
	or.b64  	%rd254, %rd6, %rd2;
	and.b64  	%rd255, %rd10, %rd254;
	and.b64  	%rd256, %rd6, %rd2;
	or.b64  	%rd257, %rd255, %rd256;
	add.s64 	%rd34, %rd257, %rd253;
	mov.u64 	%rd258, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r32}, %rd258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r33,%dummy}, %rd258;
	}
	shf.l.wrap.b32 	%r34, %r33, %r32, 3;
	shf.l.wrap.b32 	%r35, %r32, %r33, 3;
	mov.b64 	%rd259, {%r35, %r34};
	shf.r.wrap.b32 	%r36, %r32, %r33, 19;
	shf.r.wrap.b32 	%r37, %r33, %r32, 19;
	mov.b64 	%rd260, {%r37, %r36};
	xor.b64  	%rd35, %rd260, %rd259;
	shf.r.wrap.b32 	%r38, %r32, %r33, 8;
	shf.r.wrap.b32 	%r39, %r33, %r32, 8;
	mov.b64 	%rd261, {%r39, %r38};
	shf.r.wrap.b32 	%r40, %r32, %r33, 1;
	shf.r.wrap.b32 	%r41, %r33, %r32, 1;
	mov.b64 	%rd262, {%r41, %r40};
	xor.b64  	%rd36, %rd262, %rd261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r42,%dummy}, %rd19;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r43}, %rd19;
	}
	shf.r.wrap.b32 	%r44, %r43, %r42, 18;
	shf.r.wrap.b32 	%r45, %r42, %r43, 18;
	mov.b64 	%rd263, {%r45, %r44};
	shf.r.wrap.b32 	%r46, %r43, %r42, 14;
	shf.r.wrap.b32 	%r47, %r42, %r43, 14;
	mov.b64 	%rd264, {%r47, %r46};
	xor.b64  	%rd265, %rd264, %rd263;
	shf.l.wrap.b32 	%r48, %r42, %r43, 23;
	shf.l.wrap.b32 	%r49, %r43, %r42, 23;
	mov.b64 	%rd266, {%r49, %r48};
	xor.b64  	%rd267, %rd265, %rd266;
	add.s64 	%rd268, %rd31, %rd267;
	add.s64 	%rd37, %rd268, 4794697086780616226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r50}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r51,%dummy}, %rd3;
	}
	shf.l.wrap.b32 	%r52, %r51, %r50, 30;
	shf.l.wrap.b32 	%r53, %r50, %r51, 30;
	mov.b64 	%rd269, {%r53, %r52};
	shf.r.wrap.b32 	%r54, %r50, %r51, 28;
	shf.r.wrap.b32 	%r55, %r51, %r50, 28;
	mov.b64 	%rd270, {%r55, %r54};
	xor.b64  	%rd271, %rd270, %rd269;
	shf.l.wrap.b32 	%r56, %r51, %r50, 25;
	shf.l.wrap.b32 	%r57, %r50, %r51, 25;
	mov.b64 	%rd272, {%r57, %r56};
	xor.b64  	%rd273, %rd271, %rd272;
	or.b64  	%rd274, %rd7, %rd3;
	and.b64  	%rd275, %rd11, %rd274;
	and.b64  	%rd276, %rd7, %rd3;
	or.b64  	%rd277, %rd275, %rd276;
	add.s64 	%rd38, %rd277, %rd273;
	mov.u64 	%rd278, 1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r59,%dummy}, %rd278;
	}
	shf.l.wrap.b32 	%r60, %r59, %r58, 3;
	shf.l.wrap.b32 	%r61, %r58, %r59, 3;
	mov.b64 	%rd279, {%r61, %r60};
	shf.r.wrap.b32 	%r62, %r58, %r59, 19;
	shf.r.wrap.b32 	%r63, %r59, %r58, 19;
	mov.b64 	%rd280, {%r63, %r62};
	xor.b64  	%rd281, %rd280, %rd279;
	xor.b64  	%rd39, %rd281, 24;
	mov.u64 	%rd282, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd282;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 8;
	shf.r.wrap.b32 	%r67, %r64, %r65, 8;
	mov.b64 	%rd283, {%r67, %r66};
	shf.r.wrap.b32 	%r68, %r65, %r64, 1;
	shf.r.wrap.b32 	%r69, %r64, %r65, 1;
	mov.b64 	%rd284, {%r69, %r68};
	xor.b64  	%rd285, %rd284, %rd283;
	xor.b64  	%rd40, %rd285, 72057594037927936;
	xor.b64  	%rd41, %rd36, -9223372036854775808;
	shf.r.wrap.b32 	%r70, %r58, %r59, 8;
	shf.r.wrap.b32 	%r71, %r59, %r58, 8;
	mov.b64 	%rd286, {%r71, %r70};
	shf.r.wrap.b32 	%r72, %r58, %r59, 1;
	shf.r.wrap.b32 	%r73, %r59, %r58, 1;
	mov.b64 	%rd287, {%r73, %r72};
	xor.b64  	%rd288, %rd287, %rd286;
	xor.b64  	%rd42, %rd288, 12;
	mov.u32 	%r2221, 0;

$L__BB3_2:
	add.s64 	%rd289, %rd33, %rd3267;
	add.s64 	%rd290, %rd289, %rd14;
	add.s64 	%rd291, %rd34, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r75,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r76}, %rd290;
	}
	shf.r.wrap.b32 	%r77, %r76, %r75, 14;
	shf.r.wrap.b32 	%r78, %r75, %r76, 14;
	mov.b64 	%rd292, {%r78, %r77};
	shf.r.wrap.b32 	%r79, %r76, %r75, 18;
	shf.r.wrap.b32 	%r80, %r75, %r76, 18;
	mov.b64 	%rd293, {%r80, %r79};
	xor.b64  	%rd294, %rd292, %rd293;
	shf.l.wrap.b32 	%r81, %r75, %r76, 23;
	shf.l.wrap.b32 	%r82, %r76, %r75, 23;
	mov.b64 	%rd295, {%r82, %r81};
	xor.b64  	%rd296, %rd294, %rd295;
	xor.b64  	%rd297, %rd22, %rd18;
	and.b64  	%rd298, %rd290, %rd297;
	xor.b64  	%rd299, %rd298, %rd22;
	add.s64 	%rd300, %rd26, %rd3268;
	add.s64 	%rd301, %rd300, %rd299;
	add.s64 	%rd302, %rd301, %rd296;
	add.s64 	%rd303, %rd302, 8158064640168781261;
	add.s64 	%rd304, %rd303, %rd10;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r83,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r84}, %rd291;
	}
	shf.r.wrap.b32 	%r85, %r84, %r83, 28;
	shf.r.wrap.b32 	%r86, %r83, %r84, 28;
	mov.b64 	%rd305, {%r86, %r85};
	shf.l.wrap.b32 	%r87, %r83, %r84, 30;
	shf.l.wrap.b32 	%r88, %r84, %r83, 30;
	mov.b64 	%rd306, {%r88, %r87};
	xor.b64  	%rd307, %rd305, %rd306;
	shf.l.wrap.b32 	%r89, %r83, %r84, 25;
	shf.l.wrap.b32 	%r90, %r84, %r83, 25;
	mov.b64 	%rd308, {%r90, %r89};
	xor.b64  	%rd309, %rd307, %rd308;
	and.b64  	%rd310, %rd291, %rd2;
	or.b64  	%rd311, %rd291, %rd2;
	and.b64  	%rd312, %rd311, %rd6;
	or.b64  	%rd313, %rd312, %rd310;
	add.s64 	%rd314, %rd313, %rd309;
	add.s64 	%rd315, %rd314, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r91,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r92}, %rd304;
	}
	shf.r.wrap.b32 	%r93, %r92, %r91, 14;
	shf.r.wrap.b32 	%r94, %r91, %r92, 14;
	mov.b64 	%rd316, {%r94, %r93};
	shf.r.wrap.b32 	%r95, %r92, %r91, 18;
	shf.r.wrap.b32 	%r96, %r91, %r92, 18;
	mov.b64 	%rd317, {%r96, %r95};
	xor.b64  	%rd318, %rd316, %rd317;
	shf.l.wrap.b32 	%r97, %r91, %r92, 23;
	shf.l.wrap.b32 	%r98, %r92, %r91, 23;
	mov.b64 	%rd319, {%r98, %r97};
	xor.b64  	%rd320, %rd318, %rd319;
	xor.b64  	%rd321, %rd290, %rd18;
	and.b64  	%rd322, %rd304, %rd321;
	xor.b64  	%rd323, %rd322, %rd18;
	add.s64 	%rd324, %rd22, %rd3269;
	add.s64 	%rd325, %rd324, %rd323;
	add.s64 	%rd326, %rd325, %rd320;
	add.s64 	%rd327, %rd326, -5349999486874862801;
	add.s64 	%rd328, %rd327, %rd6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd315;
	}
	shf.r.wrap.b32 	%r101, %r100, %r99, 28;
	shf.r.wrap.b32 	%r102, %r99, %r100, 28;
	mov.b64 	%rd329, {%r102, %r101};
	shf.l.wrap.b32 	%r103, %r99, %r100, 30;
	shf.l.wrap.b32 	%r104, %r100, %r99, 30;
	mov.b64 	%rd330, {%r104, %r103};
	xor.b64  	%rd331, %rd329, %rd330;
	shf.l.wrap.b32 	%r105, %r99, %r100, 25;
	shf.l.wrap.b32 	%r106, %r100, %r99, 25;
	mov.b64 	%rd332, {%r106, %r105};
	xor.b64  	%rd333, %rd331, %rd332;
	and.b64  	%rd334, %rd315, %rd291;
	or.b64  	%rd335, %rd315, %rd291;
	and.b64  	%rd336, %rd335, %rd2;
	or.b64  	%rd337, %rd336, %rd334;
	add.s64 	%rd338, %rd337, %rd333;
	add.s64 	%rd339, %rd338, %rd327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r107,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r108}, %rd328;
	}
	shf.r.wrap.b32 	%r109, %r108, %r107, 14;
	shf.r.wrap.b32 	%r110, %r107, %r108, 14;
	mov.b64 	%rd340, {%r110, %r109};
	shf.r.wrap.b32 	%r111, %r108, %r107, 18;
	shf.r.wrap.b32 	%r112, %r107, %r108, 18;
	mov.b64 	%rd341, {%r112, %r111};
	xor.b64  	%rd342, %rd340, %rd341;
	shf.l.wrap.b32 	%r113, %r107, %r108, 23;
	shf.l.wrap.b32 	%r114, %r108, %r107, 23;
	mov.b64 	%rd343, {%r114, %r113};
	xor.b64  	%rd344, %rd342, %rd343;
	xor.b64  	%rd345, %rd304, %rd290;
	and.b64  	%rd346, %rd328, %rd345;
	xor.b64  	%rd347, %rd346, %rd290;
	add.s64 	%rd348, %rd18, %rd3270;
	add.s64 	%rd349, %rd348, %rd347;
	add.s64 	%rd350, %rd349, %rd344;
	add.s64 	%rd351, %rd350, -1606136188198331460;
	add.s64 	%rd352, %rd351, %rd2;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r115,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r116}, %rd339;
	}
	shf.r.wrap.b32 	%r117, %r116, %r115, 28;
	shf.r.wrap.b32 	%r118, %r115, %r116, 28;
	mov.b64 	%rd353, {%r118, %r117};
	shf.l.wrap.b32 	%r119, %r115, %r116, 30;
	shf.l.wrap.b32 	%r120, %r116, %r115, 30;
	mov.b64 	%rd354, {%r120, %r119};
	xor.b64  	%rd355, %rd353, %rd354;
	shf.l.wrap.b32 	%r121, %r115, %r116, 25;
	shf.l.wrap.b32 	%r122, %r116, %r115, 25;
	mov.b64 	%rd356, {%r122, %r121};
	xor.b64  	%rd357, %rd355, %rd356;
	and.b64  	%rd358, %rd339, %rd315;
	or.b64  	%rd359, %rd339, %rd315;
	and.b64  	%rd360, %rd359, %rd291;
	or.b64  	%rd361, %rd360, %rd358;
	add.s64 	%rd362, %rd361, %rd357;
	add.s64 	%rd363, %rd362, %rd351;
	add.s64 	%rd364, %rd3271, %rd290;
	xor.b64  	%rd365, %rd328, %rd304;
	and.b64  	%rd366, %rd352, %rd365;
	xor.b64  	%rd367, %rd366, %rd304;
	add.s64 	%rd368, %rd364, %rd367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd352;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 14;
	shf.r.wrap.b32 	%r126, %r123, %r124, 14;
	mov.b64 	%rd369, {%r126, %r125};
	shf.r.wrap.b32 	%r127, %r124, %r123, 18;
	shf.r.wrap.b32 	%r128, %r123, %r124, 18;
	mov.b64 	%rd370, {%r128, %r127};
	xor.b64  	%rd371, %rd369, %rd370;
	shf.l.wrap.b32 	%r129, %r123, %r124, 23;
	shf.l.wrap.b32 	%r130, %r124, %r123, 23;
	mov.b64 	%rd372, {%r130, %r129};
	xor.b64  	%rd373, %rd371, %rd372;
	add.s64 	%rd374, %rd368, %rd373;
	add.s64 	%rd375, %rd374, 4131703408338449720;
	add.s64 	%rd376, %rd375, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd363;
	}
	shf.r.wrap.b32 	%r133, %r132, %r131, 28;
	shf.r.wrap.b32 	%r134, %r131, %r132, 28;
	mov.b64 	%rd377, {%r134, %r133};
	shf.l.wrap.b32 	%r135, %r131, %r132, 30;
	shf.l.wrap.b32 	%r136, %r132, %r131, 30;
	mov.b64 	%rd378, {%r136, %r135};
	xor.b64  	%rd379, %rd377, %rd378;
	shf.l.wrap.b32 	%r137, %r131, %r132, 25;
	shf.l.wrap.b32 	%r138, %r132, %r131, 25;
	mov.b64 	%rd380, {%r138, %r137};
	xor.b64  	%rd381, %rd379, %rd380;
	and.b64  	%rd382, %rd363, %rd339;
	or.b64  	%rd383, %rd363, %rd339;
	and.b64  	%rd384, %rd383, %rd315;
	or.b64  	%rd385, %rd384, %rd382;
	add.s64 	%rd386, %rd385, %rd381;
	add.s64 	%rd387, %rd386, %rd375;
	add.s64 	%rd388, %rd3272, %rd304;
	xor.b64  	%rd389, %rd352, %rd328;
	and.b64  	%rd390, %rd376, %rd389;
	xor.b64  	%rd391, %rd390, %rd328;
	add.s64 	%rd392, %rd388, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd376;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 14;
	shf.r.wrap.b32 	%r142, %r139, %r140, 14;
	mov.b64 	%rd393, {%r142, %r141};
	shf.r.wrap.b32 	%r143, %r140, %r139, 18;
	shf.r.wrap.b32 	%r144, %r139, %r140, 18;
	mov.b64 	%rd394, {%r144, %r143};
	xor.b64  	%rd395, %rd393, %rd394;
	shf.l.wrap.b32 	%r145, %r139, %r140, 23;
	shf.l.wrap.b32 	%r146, %r140, %r139, 23;
	mov.b64 	%rd396, {%r146, %r145};
	xor.b64  	%rd397, %rd395, %rd396;
	add.s64 	%rd398, %rd392, %rd397;
	add.s64 	%rd399, %rd398, 6480981068601479193;
	add.s64 	%rd400, %rd399, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd387;
	}
	shf.r.wrap.b32 	%r149, %r148, %r147, 28;
	shf.r.wrap.b32 	%r150, %r147, %r148, 28;
	mov.b64 	%rd401, {%r150, %r149};
	shf.l.wrap.b32 	%r151, %r147, %r148, 30;
	shf.l.wrap.b32 	%r152, %r148, %r147, 30;
	mov.b64 	%rd402, {%r152, %r151};
	xor.b64  	%rd403, %rd401, %rd402;
	shf.l.wrap.b32 	%r153, %r147, %r148, 25;
	shf.l.wrap.b32 	%r154, %r148, %r147, 25;
	mov.b64 	%rd404, {%r154, %r153};
	xor.b64  	%rd405, %rd403, %rd404;
	and.b64  	%rd406, %rd387, %rd363;
	or.b64  	%rd407, %rd387, %rd363;
	and.b64  	%rd408, %rd407, %rd339;
	or.b64  	%rd409, %rd408, %rd406;
	add.s64 	%rd410, %rd409, %rd405;
	add.s64 	%rd411, %rd410, %rd399;
	add.s64 	%rd412, %rd3273, %rd328;
	xor.b64  	%rd413, %rd376, %rd352;
	and.b64  	%rd414, %rd400, %rd413;
	xor.b64  	%rd415, %rd414, %rd352;
	add.s64 	%rd416, %rd412, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd400;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 14;
	shf.r.wrap.b32 	%r158, %r155, %r156, 14;
	mov.b64 	%rd417, {%r158, %r157};
	shf.r.wrap.b32 	%r159, %r156, %r155, 18;
	shf.r.wrap.b32 	%r160, %r155, %r156, 18;
	mov.b64 	%rd418, {%r160, %r159};
	xor.b64  	%rd419, %rd417, %rd418;
	shf.l.wrap.b32 	%r161, %r155, %r156, 23;
	shf.l.wrap.b32 	%r162, %r156, %r155, 23;
	mov.b64 	%rd420, {%r162, %r161};
	xor.b64  	%rd421, %rd419, %rd420;
	add.s64 	%rd422, %rd416, %rd421;
	add.s64 	%rd423, %rd422, -7908458776815382629;
	add.s64 	%rd424, %rd423, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd411;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 28;
	shf.r.wrap.b32 	%r166, %r163, %r164, 28;
	mov.b64 	%rd425, {%r166, %r165};
	shf.l.wrap.b32 	%r167, %r163, %r164, 30;
	shf.l.wrap.b32 	%r168, %r164, %r163, 30;
	mov.b64 	%rd426, {%r168, %r167};
	xor.b64  	%rd427, %rd425, %rd426;
	shf.l.wrap.b32 	%r169, %r163, %r164, 25;
	shf.l.wrap.b32 	%r170, %r164, %r163, 25;
	mov.b64 	%rd428, {%r170, %r169};
	xor.b64  	%rd429, %rd427, %rd428;
	and.b64  	%rd430, %rd411, %rd387;
	or.b64  	%rd431, %rd411, %rd387;
	and.b64  	%rd432, %rd431, %rd363;
	or.b64  	%rd433, %rd432, %rd430;
	add.s64 	%rd434, %rd433, %rd429;
	add.s64 	%rd435, %rd434, %rd423;
	add.s64 	%rd436, %rd3274, %rd352;
	xor.b64  	%rd437, %rd400, %rd376;
	and.b64  	%rd438, %rd424, %rd437;
	xor.b64  	%rd439, %rd438, %rd376;
	add.s64 	%rd440, %rd436, %rd439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r171,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r172}, %rd424;
	}
	shf.r.wrap.b32 	%r173, %r172, %r171, 14;
	shf.r.wrap.b32 	%r174, %r171, %r172, 14;
	mov.b64 	%rd441, {%r174, %r173};
	shf.r.wrap.b32 	%r175, %r172, %r171, 18;
	shf.r.wrap.b32 	%r176, %r171, %r172, 18;
	mov.b64 	%rd442, {%r176, %r175};
	xor.b64  	%rd443, %rd441, %rd442;
	shf.l.wrap.b32 	%r177, %r171, %r172, 23;
	shf.l.wrap.b32 	%r178, %r172, %r171, 23;
	mov.b64 	%rd444, {%r178, %r177};
	xor.b64  	%rd445, %rd443, %rd444;
	add.s64 	%rd446, %rd440, %rd445;
	add.s64 	%rd447, %rd446, -6116909921290321640;
	add.s64 	%rd448, %rd447, %rd363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r179,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd435;
	}
	shf.r.wrap.b32 	%r181, %r180, %r179, 28;
	shf.r.wrap.b32 	%r182, %r179, %r180, 28;
	mov.b64 	%rd449, {%r182, %r181};
	shf.l.wrap.b32 	%r183, %r179, %r180, 30;
	shf.l.wrap.b32 	%r184, %r180, %r179, 30;
	mov.b64 	%rd450, {%r184, %r183};
	xor.b64  	%rd451, %rd449, %rd450;
	shf.l.wrap.b32 	%r185, %r179, %r180, 25;
	shf.l.wrap.b32 	%r186, %r180, %r179, 25;
	mov.b64 	%rd452, {%r186, %r185};
	xor.b64  	%rd453, %rd451, %rd452;
	and.b64  	%rd454, %rd435, %rd411;
	or.b64  	%rd455, %rd435, %rd411;
	and.b64  	%rd456, %rd455, %rd387;
	or.b64  	%rd457, %rd456, %rd454;
	add.s64 	%rd458, %rd457, %rd453;
	add.s64 	%rd459, %rd458, %rd447;
	xor.b64  	%rd460, %rd424, %rd400;
	and.b64  	%rd461, %rd448, %rd460;
	xor.b64  	%rd462, %rd461, %rd400;
	add.s64 	%rd463, %rd376, %rd462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd448;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 14;
	shf.r.wrap.b32 	%r190, %r187, %r188, 14;
	mov.b64 	%rd464, {%r190, %r189};
	shf.r.wrap.b32 	%r191, %r188, %r187, 18;
	shf.r.wrap.b32 	%r192, %r187, %r188, 18;
	mov.b64 	%rd465, {%r192, %r191};
	xor.b64  	%rd466, %rd464, %rd465;
	shf.l.wrap.b32 	%r193, %r187, %r188, 23;
	shf.l.wrap.b32 	%r194, %r188, %r187, 23;
	mov.b64 	%rd467, {%r194, %r193};
	xor.b64  	%rd468, %rd466, %rd467;
	add.s64 	%rd469, %rd463, %rd468;
	add.s64 	%rd470, %rd469, 6343226172721267266;
	add.s64 	%rd471, %rd470, %rd387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd459;
	}
	shf.r.wrap.b32 	%r197, %r196, %r195, 28;
	shf.r.wrap.b32 	%r198, %r195, %r196, 28;
	mov.b64 	%rd472, {%r198, %r197};
	shf.l.wrap.b32 	%r199, %r195, %r196, 30;
	shf.l.wrap.b32 	%r200, %r196, %r195, 30;
	mov.b64 	%rd473, {%r200, %r199};
	xor.b64  	%rd474, %rd472, %rd473;
	shf.l.wrap.b32 	%r201, %r195, %r196, 25;
	shf.l.wrap.b32 	%r202, %r196, %r195, 25;
	mov.b64 	%rd475, {%r202, %r201};
	xor.b64  	%rd476, %rd474, %rd475;
	and.b64  	%rd477, %rd459, %rd435;
	or.b64  	%rd478, %rd459, %rd435;
	and.b64  	%rd479, %rd478, %rd411;
	or.b64  	%rd480, %rd479, %rd477;
	add.s64 	%rd481, %rd480, %rd476;
	add.s64 	%rd482, %rd481, %rd470;
	xor.b64  	%rd483, %rd448, %rd424;
	and.b64  	%rd484, %rd471, %rd483;
	xor.b64  	%rd485, %rd484, %rd424;
	add.s64 	%rd486, %rd400, %rd485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd471;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 14;
	shf.r.wrap.b32 	%r206, %r203, %r204, 14;
	mov.b64 	%rd487, {%r206, %r205};
	shf.r.wrap.b32 	%r207, %r204, %r203, 18;
	shf.r.wrap.b32 	%r208, %r203, %r204, 18;
	mov.b64 	%rd488, {%r208, %r207};
	xor.b64  	%rd489, %rd487, %rd488;
	shf.l.wrap.b32 	%r209, %r203, %r204, 23;
	shf.l.wrap.b32 	%r210, %r204, %r203, 23;
	mov.b64 	%rd490, {%r210, %r209};
	xor.b64  	%rd491, %rd489, %rd490;
	add.s64 	%rd492, %rd486, %rd491;
	add.s64 	%rd493, %rd492, 1334009975649890238;
	add.s64 	%rd494, %rd493, %rd411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd482;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 28;
	shf.r.wrap.b32 	%r214, %r211, %r212, 28;
	mov.b64 	%rd495, {%r214, %r213};
	shf.l.wrap.b32 	%r215, %r211, %r212, 30;
	shf.l.wrap.b32 	%r216, %r212, %r211, 30;
	mov.b64 	%rd496, {%r216, %r215};
	xor.b64  	%rd497, %rd495, %rd496;
	shf.l.wrap.b32 	%r217, %r211, %r212, 25;
	shf.l.wrap.b32 	%r218, %r212, %r211, 25;
	mov.b64 	%rd498, {%r218, %r217};
	xor.b64  	%rd499, %rd497, %rd498;
	and.b64  	%rd500, %rd482, %rd459;
	or.b64  	%rd501, %rd482, %rd459;
	and.b64  	%rd502, %rd501, %rd435;
	or.b64  	%rd503, %rd502, %rd500;
	add.s64 	%rd504, %rd503, %rd499;
	add.s64 	%rd505, %rd504, %rd493;
	xor.b64  	%rd506, %rd471, %rd448;
	and.b64  	%rd507, %rd494, %rd506;
	xor.b64  	%rd508, %rd507, %rd448;
	add.s64 	%rd509, %rd424, %rd508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd494;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 14;
	shf.r.wrap.b32 	%r222, %r219, %r220, 14;
	mov.b64 	%rd510, {%r222, %r221};
	shf.r.wrap.b32 	%r223, %r220, %r219, 18;
	shf.r.wrap.b32 	%r224, %r219, %r220, 18;
	mov.b64 	%rd511, {%r224, %r223};
	xor.b64  	%rd512, %rd510, %rd511;
	shf.l.wrap.b32 	%r225, %r219, %r220, 23;
	shf.l.wrap.b32 	%r226, %r220, %r219, 23;
	mov.b64 	%rd513, {%r226, %r225};
	xor.b64  	%rd514, %rd512, %rd513;
	add.s64 	%rd515, %rd509, %rd514;
	add.s64 	%rd516, %rd515, 2608012711638119052;
	add.s64 	%rd517, %rd516, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd505;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 28;
	shf.r.wrap.b32 	%r230, %r227, %r228, 28;
	mov.b64 	%rd518, {%r230, %r229};
	shf.l.wrap.b32 	%r231, %r227, %r228, 30;
	shf.l.wrap.b32 	%r232, %r228, %r227, 30;
	mov.b64 	%rd519, {%r232, %r231};
	xor.b64  	%rd520, %rd518, %rd519;
	shf.l.wrap.b32 	%r233, %r227, %r228, 25;
	shf.l.wrap.b32 	%r234, %r228, %r227, 25;
	mov.b64 	%rd521, {%r234, %r233};
	xor.b64  	%rd522, %rd520, %rd521;
	and.b64  	%rd523, %rd505, %rd482;
	or.b64  	%rd524, %rd505, %rd482;
	and.b64  	%rd525, %rd524, %rd459;
	or.b64  	%rd526, %rd525, %rd523;
	add.s64 	%rd527, %rd526, %rd522;
	add.s64 	%rd528, %rd527, %rd516;
	xor.b64  	%rd529, %rd494, %rd471;
	and.b64  	%rd530, %rd517, %rd529;
	xor.b64  	%rd531, %rd530, %rd471;
	add.s64 	%rd532, %rd448, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd517;
	}
	shf.r.wrap.b32 	%r237, %r236, %r235, 14;
	shf.r.wrap.b32 	%r238, %r235, %r236, 14;
	mov.b64 	%rd533, {%r238, %r237};
	shf.r.wrap.b32 	%r239, %r236, %r235, 18;
	shf.r.wrap.b32 	%r240, %r235, %r236, 18;
	mov.b64 	%rd534, {%r240, %r239};
	xor.b64  	%rd535, %rd533, %rd534;
	shf.l.wrap.b32 	%r241, %r235, %r236, 23;
	shf.l.wrap.b32 	%r242, %r236, %r235, 23;
	mov.b64 	%rd536, {%r242, %r241};
	xor.b64  	%rd537, %rd535, %rd536;
	add.s64 	%rd538, %rd532, %rd537;
	add.s64 	%rd539, %rd538, 6128411473006802146;
	add.s64 	%rd540, %rd539, %rd459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd528;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 28;
	shf.r.wrap.b32 	%r246, %r243, %r244, 28;
	mov.b64 	%rd541, {%r246, %r245};
	shf.l.wrap.b32 	%r247, %r243, %r244, 30;
	shf.l.wrap.b32 	%r248, %r244, %r243, 30;
	mov.b64 	%rd542, {%r248, %r247};
	xor.b64  	%rd543, %rd541, %rd542;
	shf.l.wrap.b32 	%r249, %r243, %r244, 25;
	shf.l.wrap.b32 	%r250, %r244, %r243, 25;
	mov.b64 	%rd544, {%r250, %r249};
	xor.b64  	%rd545, %rd543, %rd544;
	and.b64  	%rd546, %rd528, %rd505;
	or.b64  	%rd547, %rd528, %rd505;
	and.b64  	%rd548, %rd547, %rd482;
	or.b64  	%rd549, %rd548, %rd546;
	add.s64 	%rd550, %rd549, %rd545;
	add.s64 	%rd551, %rd550, %rd539;
	xor.b64  	%rd552, %rd517, %rd494;
	and.b64  	%rd553, %rd540, %rd552;
	xor.b64  	%rd554, %rd553, %rd494;
	add.s64 	%rd555, %rd471, %rd554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd540;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 14;
	shf.r.wrap.b32 	%r254, %r251, %r252, 14;
	mov.b64 	%rd556, {%r254, %r253};
	shf.r.wrap.b32 	%r255, %r252, %r251, 18;
	shf.r.wrap.b32 	%r256, %r251, %r252, 18;
	mov.b64 	%rd557, {%r256, %r255};
	xor.b64  	%rd558, %rd556, %rd557;
	shf.l.wrap.b32 	%r257, %r251, %r252, 23;
	shf.l.wrap.b32 	%r258, %r252, %r251, 23;
	mov.b64 	%rd559, {%r258, %r257};
	xor.b64  	%rd560, %rd558, %rd559;
	add.s64 	%rd561, %rd555, %rd560;
	add.s64 	%rd562, %rd561, 8268148722764581231;
	add.s64 	%rd563, %rd562, %rd482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd551;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 28;
	shf.r.wrap.b32 	%r262, %r259, %r260, 28;
	mov.b64 	%rd564, {%r262, %r261};
	shf.l.wrap.b32 	%r263, %r259, %r260, 30;
	shf.l.wrap.b32 	%r264, %r260, %r259, 30;
	mov.b64 	%rd565, {%r264, %r263};
	xor.b64  	%rd566, %rd564, %rd565;
	shf.l.wrap.b32 	%r265, %r259, %r260, 25;
	shf.l.wrap.b32 	%r266, %r260, %r259, 25;
	mov.b64 	%rd567, {%r266, %r265};
	xor.b64  	%rd568, %rd566, %rd567;
	and.b64  	%rd569, %rd551, %rd528;
	or.b64  	%rd570, %rd551, %rd528;
	and.b64  	%rd571, %rd570, %rd505;
	or.b64  	%rd572, %rd571, %rd569;
	add.s64 	%rd573, %rd572, %rd568;
	add.s64 	%rd574, %rd573, %rd562;
	xor.b64  	%rd575, %rd540, %rd517;
	and.b64  	%rd576, %rd563, %rd575;
	xor.b64  	%rd577, %rd576, %rd517;
	add.s64 	%rd578, %rd494, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd563;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 14;
	shf.r.wrap.b32 	%r270, %r267, %r268, 14;
	mov.b64 	%rd579, {%r270, %r269};
	shf.r.wrap.b32 	%r271, %r268, %r267, 18;
	shf.r.wrap.b32 	%r272, %r267, %r268, 18;
	mov.b64 	%rd580, {%r272, %r271};
	xor.b64  	%rd581, %rd579, %rd580;
	shf.l.wrap.b32 	%r273, %r267, %r268, 23;
	shf.l.wrap.b32 	%r274, %r268, %r267, 23;
	mov.b64 	%rd582, {%r274, %r273};
	xor.b64  	%rd583, %rd581, %rd582;
	add.s64 	%rd584, %rd578, %rd583;
	add.s64 	%rd585, %rd584, -9160688886553864527;
	add.s64 	%rd586, %rd585, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd574;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 28;
	shf.r.wrap.b32 	%r278, %r275, %r276, 28;
	mov.b64 	%rd587, {%r278, %r277};
	shf.l.wrap.b32 	%r279, %r275, %r276, 30;
	shf.l.wrap.b32 	%r280, %r276, %r275, 30;
	mov.b64 	%rd588, {%r280, %r279};
	xor.b64  	%rd589, %rd587, %rd588;
	shf.l.wrap.b32 	%r281, %r275, %r276, 25;
	shf.l.wrap.b32 	%r282, %r276, %r275, 25;
	mov.b64 	%rd590, {%r282, %r281};
	xor.b64  	%rd591, %rd589, %rd590;
	and.b64  	%rd592, %rd574, %rd551;
	or.b64  	%rd593, %rd574, %rd551;
	and.b64  	%rd594, %rd593, %rd528;
	or.b64  	%rd595, %rd594, %rd592;
	add.s64 	%rd596, %rd595, %rd591;
	add.s64 	%rd597, %rd596, %rd585;
	xor.b64  	%rd598, %rd563, %rd540;
	and.b64  	%rd599, %rd586, %rd598;
	xor.b64  	%rd600, %rd599, %rd540;
	add.s64 	%rd601, %rd517, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd586;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 14;
	shf.r.wrap.b32 	%r286, %r283, %r284, 14;
	mov.b64 	%rd602, {%r286, %r285};
	shf.r.wrap.b32 	%r287, %r284, %r283, 18;
	shf.r.wrap.b32 	%r288, %r283, %r284, 18;
	mov.b64 	%rd603, {%r288, %r287};
	xor.b64  	%rd604, %rd602, %rd603;
	shf.l.wrap.b32 	%r289, %r283, %r284, 23;
	shf.l.wrap.b32 	%r290, %r284, %r283, 23;
	mov.b64 	%rd605, {%r290, %r289};
	xor.b64  	%rd606, %rd604, %rd605;
	add.s64 	%rd607, %rd601, %rd606;
	add.s64 	%rd608, %rd607, -7215885187991268811;
	add.s64 	%rd609, %rd608, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r291,%dummy}, %rd597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd597;
	}
	shf.r.wrap.b32 	%r293, %r292, %r291, 28;
	shf.r.wrap.b32 	%r294, %r291, %r292, 28;
	mov.b64 	%rd610, {%r294, %r293};
	shf.l.wrap.b32 	%r295, %r291, %r292, 30;
	shf.l.wrap.b32 	%r296, %r292, %r291, 30;
	mov.b64 	%rd611, {%r296, %r295};
	xor.b64  	%rd612, %rd610, %rd611;
	shf.l.wrap.b32 	%r297, %r291, %r292, 25;
	shf.l.wrap.b32 	%r298, %r292, %r291, 25;
	mov.b64 	%rd613, {%r298, %r297};
	xor.b64  	%rd614, %rd612, %rd613;
	and.b64  	%rd615, %rd597, %rd574;
	or.b64  	%rd616, %rd597, %rd574;
	and.b64  	%rd617, %rd616, %rd551;
	or.b64  	%rd618, %rd617, %rd615;
	add.s64 	%rd619, %rd618, %rd614;
	add.s64 	%rd620, %rd619, %rd608;
	xor.b64  	%rd621, %rd586, %rd563;
	and.b64  	%rd622, %rd609, %rd621;
	xor.b64  	%rd623, %rd622, %rd563;
	add.s64 	%rd624, %rd540, %rd623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd609;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 14;
	shf.r.wrap.b32 	%r302, %r299, %r300, 14;
	mov.b64 	%rd625, {%r302, %r301};
	shf.r.wrap.b32 	%r303, %r300, %r299, 18;
	shf.r.wrap.b32 	%r304, %r299, %r300, 18;
	mov.b64 	%rd626, {%r304, %r303};
	xor.b64  	%rd627, %rd625, %rd626;
	shf.l.wrap.b32 	%r305, %r299, %r300, 23;
	shf.l.wrap.b32 	%r306, %r300, %r299, 23;
	mov.b64 	%rd628, {%r306, %r305};
	xor.b64  	%rd629, %rd627, %rd628;
	add.s64 	%rd630, %rd624, %rd629;
	add.s64 	%rd631, %rd630, -4495734319001031532;
	add.s64 	%rd632, %rd631, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd620;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 28;
	shf.r.wrap.b32 	%r310, %r307, %r308, 28;
	mov.b64 	%rd633, {%r310, %r309};
	shf.l.wrap.b32 	%r311, %r307, %r308, 30;
	shf.l.wrap.b32 	%r312, %r308, %r307, 30;
	mov.b64 	%rd634, {%r312, %r311};
	xor.b64  	%rd635, %rd633, %rd634;
	shf.l.wrap.b32 	%r313, %r307, %r308, 25;
	shf.l.wrap.b32 	%r314, %r308, %r307, 25;
	mov.b64 	%rd636, {%r314, %r313};
	xor.b64  	%rd637, %rd635, %rd636;
	and.b64  	%rd638, %rd620, %rd597;
	or.b64  	%rd639, %rd620, %rd597;
	and.b64  	%rd640, %rd639, %rd574;
	or.b64  	%rd641, %rd640, %rd638;
	add.s64 	%rd642, %rd641, %rd637;
	add.s64 	%rd643, %rd642, %rd631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd3268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd3268;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 8;
	shf.r.wrap.b32 	%r318, %r315, %r316, 8;
	mov.b64 	%rd644, {%r318, %r317};
	shf.r.wrap.b32 	%r319, %r316, %r315, 1;
	shf.r.wrap.b32 	%r320, %r315, %r316, 1;
	mov.b64 	%rd645, {%r320, %r319};
	xor.b64  	%rd646, %rd645, %rd644;
	shr.u64 	%rd647, %rd3268, 7;
	xor.b64  	%rd648, %rd646, %rd647;
	add.s64 	%rd649, %rd3267, %rd35;
	add.s64 	%rd3232, %rd649, %rd648;
	add.s64 	%rd650, %rd3232, %rd563;
	xor.b64  	%rd651, %rd609, %rd586;
	and.b64  	%rd652, %rd632, %rd651;
	xor.b64  	%rd653, %rd652, %rd586;
	add.s64 	%rd654, %rd650, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r321,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r322}, %rd632;
	}
	shf.r.wrap.b32 	%r323, %r322, %r321, 14;
	shf.r.wrap.b32 	%r324, %r321, %r322, 14;
	mov.b64 	%rd655, {%r324, %r323};
	shf.r.wrap.b32 	%r325, %r322, %r321, 18;
	shf.r.wrap.b32 	%r326, %r321, %r322, 18;
	mov.b64 	%rd656, {%r326, %r325};
	xor.b64  	%rd657, %rd655, %rd656;
	shf.l.wrap.b32 	%r327, %r321, %r322, 23;
	shf.l.wrap.b32 	%r328, %r322, %r321, 23;
	mov.b64 	%rd658, {%r328, %r327};
	xor.b64  	%rd659, %rd657, %rd658;
	add.s64 	%rd660, %rd654, %rd659;
	add.s64 	%rd661, %rd660, -1973867731355612462;
	add.s64 	%rd662, %rd661, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd643;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 28;
	shf.r.wrap.b32 	%r332, %r329, %r330, 28;
	mov.b64 	%rd663, {%r332, %r331};
	shf.l.wrap.b32 	%r333, %r329, %r330, 30;
	shf.l.wrap.b32 	%r334, %r330, %r329, 30;
	mov.b64 	%rd664, {%r334, %r333};
	xor.b64  	%rd665, %rd663, %rd664;
	shf.l.wrap.b32 	%r335, %r329, %r330, 25;
	shf.l.wrap.b32 	%r336, %r330, %r329, 25;
	mov.b64 	%rd666, {%r336, %r335};
	xor.b64  	%rd667, %rd665, %rd666;
	and.b64  	%rd668, %rd643, %rd620;
	or.b64  	%rd669, %rd643, %rd620;
	and.b64  	%rd670, %rd669, %rd597;
	or.b64  	%rd671, %rd670, %rd668;
	add.s64 	%rd672, %rd671, %rd667;
	add.s64 	%rd673, %rd672, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd3269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd3269;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 8;
	shf.r.wrap.b32 	%r340, %r337, %r338, 8;
	mov.b64 	%rd674, {%r340, %r339};
	shf.r.wrap.b32 	%r341, %r338, %r337, 1;
	shf.r.wrap.b32 	%r342, %r337, %r338, 1;
	mov.b64 	%rd675, {%r342, %r341};
	xor.b64  	%rd676, %rd675, %rd674;
	shr.u64 	%rd677, %rd3269, 7;
	xor.b64  	%rd678, %rd676, %rd677;
	add.s64 	%rd679, %rd39, %rd3268;
	add.s64 	%rd3233, %rd679, %rd678;
	add.s64 	%rd680, %rd3233, %rd586;
	xor.b64  	%rd681, %rd632, %rd609;
	and.b64  	%rd682, %rd662, %rd681;
	xor.b64  	%rd683, %rd682, %rd609;
	add.s64 	%rd684, %rd680, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd662;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 14;
	shf.r.wrap.b32 	%r346, %r343, %r344, 14;
	mov.b64 	%rd685, {%r346, %r345};
	shf.r.wrap.b32 	%r347, %r344, %r343, 18;
	shf.r.wrap.b32 	%r348, %r343, %r344, 18;
	mov.b64 	%rd686, {%r348, %r347};
	xor.b64  	%rd687, %rd685, %rd686;
	shf.l.wrap.b32 	%r349, %r343, %r344, 23;
	shf.l.wrap.b32 	%r350, %r344, %r343, 23;
	mov.b64 	%rd688, {%r350, %r349};
	xor.b64  	%rd689, %rd687, %rd688;
	add.s64 	%rd690, %rd684, %rd689;
	add.s64 	%rd691, %rd690, -1171420211273849373;
	add.s64 	%rd692, %rd691, %rd597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd673;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 28;
	shf.r.wrap.b32 	%r354, %r351, %r352, 28;
	mov.b64 	%rd693, {%r354, %r353};
	shf.l.wrap.b32 	%r355, %r351, %r352, 30;
	shf.l.wrap.b32 	%r356, %r352, %r351, 30;
	mov.b64 	%rd694, {%r356, %r355};
	xor.b64  	%rd695, %rd693, %rd694;
	shf.l.wrap.b32 	%r357, %r351, %r352, 25;
	shf.l.wrap.b32 	%r358, %r352, %r351, 25;
	mov.b64 	%rd696, {%r358, %r357};
	xor.b64  	%rd697, %rd695, %rd696;
	and.b64  	%rd698, %rd673, %rd643;
	or.b64  	%rd699, %rd673, %rd643;
	and.b64  	%rd700, %rd699, %rd620;
	or.b64  	%rd701, %rd700, %rd698;
	add.s64 	%rd702, %rd701, %rd697;
	add.s64 	%rd703, %rd702, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd3232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd3232;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 19;
	shf.r.wrap.b32 	%r362, %r359, %r360, 19;
	mov.b64 	%rd704, {%r362, %r361};
	shf.l.wrap.b32 	%r363, %r359, %r360, 3;
	shf.l.wrap.b32 	%r364, %r360, %r359, 3;
	mov.b64 	%rd705, {%r364, %r363};
	xor.b64  	%rd706, %rd704, %rd705;
	shr.u64 	%rd707, %rd3232, 6;
	xor.b64  	%rd708, %rd706, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd3270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd3270;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 8;
	shf.r.wrap.b32 	%r368, %r365, %r366, 8;
	mov.b64 	%rd709, {%r368, %r367};
	shf.r.wrap.b32 	%r369, %r366, %r365, 1;
	shf.r.wrap.b32 	%r370, %r365, %r366, 1;
	mov.b64 	%rd710, {%r370, %r369};
	xor.b64  	%rd711, %rd710, %rd709;
	shr.u64 	%rd712, %rd3270, 7;
	xor.b64  	%rd713, %rd711, %rd712;
	add.s64 	%rd714, %rd708, %rd3269;
	add.s64 	%rd3229, %rd714, %rd713;
	add.s64 	%rd715, %rd3229, %rd609;
	xor.b64  	%rd716, %rd662, %rd632;
	and.b64  	%rd717, %rd692, %rd716;
	xor.b64  	%rd718, %rd717, %rd632;
	add.s64 	%rd719, %rd715, %rd718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd692;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 14;
	shf.r.wrap.b32 	%r374, %r371, %r372, 14;
	mov.b64 	%rd720, {%r374, %r373};
	shf.r.wrap.b32 	%r375, %r372, %r371, 18;
	shf.r.wrap.b32 	%r376, %r371, %r372, 18;
	mov.b64 	%rd721, {%r376, %r375};
	xor.b64  	%rd722, %rd720, %rd721;
	shf.l.wrap.b32 	%r377, %r371, %r372, 23;
	shf.l.wrap.b32 	%r378, %r372, %r371, 23;
	mov.b64 	%rd723, {%r378, %r377};
	xor.b64  	%rd724, %rd722, %rd723;
	add.s64 	%rd725, %rd719, %rd724;
	add.s64 	%rd726, %rd725, 1135362057144423861;
	add.s64 	%rd727, %rd726, %rd620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd703;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 28;
	shf.r.wrap.b32 	%r382, %r379, %r380, 28;
	mov.b64 	%rd728, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 30;
	shf.l.wrap.b32 	%r384, %r380, %r379, 30;
	mov.b64 	%rd729, {%r384, %r383};
	xor.b64  	%rd730, %rd728, %rd729;
	shf.l.wrap.b32 	%r385, %r379, %r380, 25;
	shf.l.wrap.b32 	%r386, %r380, %r379, 25;
	mov.b64 	%rd731, {%r386, %r385};
	xor.b64  	%rd732, %rd730, %rd731;
	and.b64  	%rd733, %rd703, %rd673;
	or.b64  	%rd734, %rd703, %rd673;
	and.b64  	%rd735, %rd734, %rd643;
	or.b64  	%rd736, %rd735, %rd733;
	add.s64 	%rd737, %rd736, %rd732;
	add.s64 	%rd738, %rd737, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd3233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd3233;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 19;
	shf.r.wrap.b32 	%r390, %r387, %r388, 19;
	mov.b64 	%rd739, {%r390, %r389};
	shf.l.wrap.b32 	%r391, %r387, %r388, 3;
	shf.l.wrap.b32 	%r392, %r388, %r387, 3;
	mov.b64 	%rd740, {%r392, %r391};
	xor.b64  	%rd741, %rd739, %rd740;
	shr.u64 	%rd742, %rd3233, 6;
	xor.b64  	%rd743, %rd741, %rd742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd3271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd3271;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 8;
	shf.r.wrap.b32 	%r396, %r393, %r394, 8;
	mov.b64 	%rd744, {%r396, %r395};
	shf.r.wrap.b32 	%r397, %r394, %r393, 1;
	shf.r.wrap.b32 	%r398, %r393, %r394, 1;
	mov.b64 	%rd745, {%r398, %r397};
	xor.b64  	%rd746, %rd745, %rd744;
	shr.u64 	%rd747, %rd3271, 7;
	xor.b64  	%rd748, %rd746, %rd747;
	add.s64 	%rd749, %rd743, %rd3270;
	add.s64 	%rd3227, %rd749, %rd748;
	add.s64 	%rd750, %rd3227, %rd632;
	xor.b64  	%rd751, %rd692, %rd662;
	and.b64  	%rd752, %rd727, %rd751;
	xor.b64  	%rd753, %rd752, %rd662;
	add.s64 	%rd754, %rd750, %rd753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd727;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 14;
	shf.r.wrap.b32 	%r402, %r399, %r400, 14;
	mov.b64 	%rd755, {%r402, %r401};
	shf.r.wrap.b32 	%r403, %r400, %r399, 18;
	shf.r.wrap.b32 	%r404, %r399, %r400, 18;
	mov.b64 	%rd756, {%r404, %r403};
	xor.b64  	%rd757, %rd755, %rd756;
	shf.l.wrap.b32 	%r405, %r399, %r400, 23;
	shf.l.wrap.b32 	%r406, %r400, %r399, 23;
	mov.b64 	%rd758, {%r406, %r405};
	xor.b64  	%rd759, %rd757, %rd758;
	add.s64 	%rd760, %rd754, %rd759;
	add.s64 	%rd761, %rd760, 2597628984639134821;
	add.s64 	%rd762, %rd761, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd738;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 28;
	shf.r.wrap.b32 	%r410, %r407, %r408, 28;
	mov.b64 	%rd763, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 30;
	shf.l.wrap.b32 	%r412, %r408, %r407, 30;
	mov.b64 	%rd764, {%r412, %r411};
	xor.b64  	%rd765, %rd763, %rd764;
	shf.l.wrap.b32 	%r413, %r407, %r408, 25;
	shf.l.wrap.b32 	%r414, %r408, %r407, 25;
	mov.b64 	%rd766, {%r414, %r413};
	xor.b64  	%rd767, %rd765, %rd766;
	and.b64  	%rd768, %rd738, %rd703;
	or.b64  	%rd769, %rd738, %rd703;
	and.b64  	%rd770, %rd769, %rd673;
	or.b64  	%rd771, %rd770, %rd768;
	add.s64 	%rd772, %rd771, %rd767;
	add.s64 	%rd773, %rd772, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd3229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd3229;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 19;
	shf.r.wrap.b32 	%r418, %r415, %r416, 19;
	mov.b64 	%rd774, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 3;
	shf.l.wrap.b32 	%r420, %r416, %r415, 3;
	mov.b64 	%rd775, {%r420, %r419};
	xor.b64  	%rd776, %rd774, %rd775;
	shr.u64 	%rd777, %rd3229, 6;
	xor.b64  	%rd778, %rd776, %rd777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd3272;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 8;
	shf.r.wrap.b32 	%r424, %r421, %r422, 8;
	mov.b64 	%rd779, {%r424, %r423};
	shf.r.wrap.b32 	%r425, %r422, %r421, 1;
	shf.r.wrap.b32 	%r426, %r421, %r422, 1;
	mov.b64 	%rd780, {%r426, %r425};
	xor.b64  	%rd781, %rd780, %rd779;
	shr.u64 	%rd782, %rd3272, 7;
	xor.b64  	%rd783, %rd781, %rd782;
	add.s64 	%rd784, %rd778, %rd3271;
	add.s64 	%rd3225, %rd784, %rd783;
	add.s64 	%rd785, %rd3225, %rd662;
	xor.b64  	%rd786, %rd727, %rd692;
	and.b64  	%rd787, %rd762, %rd786;
	xor.b64  	%rd788, %rd787, %rd692;
	add.s64 	%rd789, %rd785, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd762;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 14;
	shf.r.wrap.b32 	%r430, %r427, %r428, 14;
	mov.b64 	%rd790, {%r430, %r429};
	shf.r.wrap.b32 	%r431, %r428, %r427, 18;
	shf.r.wrap.b32 	%r432, %r427, %r428, 18;
	mov.b64 	%rd791, {%r432, %r431};
	xor.b64  	%rd792, %rd790, %rd791;
	shf.l.wrap.b32 	%r433, %r427, %r428, 23;
	shf.l.wrap.b32 	%r434, %r428, %r427, 23;
	mov.b64 	%rd793, {%r434, %r433};
	xor.b64  	%rd794, %rd792, %rd793;
	add.s64 	%rd795, %rd789, %rd794;
	add.s64 	%rd796, %rd795, 3308224258029322869;
	add.s64 	%rd797, %rd796, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd773;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 28;
	shf.r.wrap.b32 	%r438, %r435, %r436, 28;
	mov.b64 	%rd798, {%r438, %r437};
	shf.l.wrap.b32 	%r439, %r435, %r436, 30;
	shf.l.wrap.b32 	%r440, %r436, %r435, 30;
	mov.b64 	%rd799, {%r440, %r439};
	xor.b64  	%rd800, %rd798, %rd799;
	shf.l.wrap.b32 	%r441, %r435, %r436, 25;
	shf.l.wrap.b32 	%r442, %r436, %r435, 25;
	mov.b64 	%rd801, {%r442, %r441};
	xor.b64  	%rd802, %rd800, %rd801;
	and.b64  	%rd803, %rd773, %rd738;
	or.b64  	%rd804, %rd773, %rd738;
	and.b64  	%rd805, %rd804, %rd703;
	or.b64  	%rd806, %rd805, %rd803;
	add.s64 	%rd807, %rd806, %rd802;
	add.s64 	%rd808, %rd807, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd3227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd3227;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 19;
	shf.r.wrap.b32 	%r446, %r443, %r444, 19;
	mov.b64 	%rd809, {%r446, %r445};
	shf.l.wrap.b32 	%r447, %r443, %r444, 3;
	shf.l.wrap.b32 	%r448, %r444, %r443, 3;
	mov.b64 	%rd810, {%r448, %r447};
	xor.b64  	%rd811, %rd809, %rd810;
	shr.u64 	%rd812, %rd3227, 6;
	xor.b64  	%rd813, %rd811, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd3273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd3273;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 8;
	shf.r.wrap.b32 	%r452, %r449, %r450, 8;
	mov.b64 	%rd814, {%r452, %r451};
	shf.r.wrap.b32 	%r453, %r450, %r449, 1;
	shf.r.wrap.b32 	%r454, %r449, %r450, 1;
	mov.b64 	%rd815, {%r454, %r453};
	xor.b64  	%rd816, %rd815, %rd814;
	shr.u64 	%rd817, %rd3273, 7;
	xor.b64  	%rd818, %rd816, %rd817;
	add.s64 	%rd819, %rd813, %rd3272;
	add.s64 	%rd3223, %rd819, %rd818;
	add.s64 	%rd820, %rd3223, %rd692;
	xor.b64  	%rd821, %rd762, %rd727;
	and.b64  	%rd822, %rd797, %rd821;
	xor.b64  	%rd823, %rd822, %rd727;
	add.s64 	%rd824, %rd820, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd797;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 14;
	shf.r.wrap.b32 	%r458, %r455, %r456, 14;
	mov.b64 	%rd825, {%r458, %r457};
	shf.r.wrap.b32 	%r459, %r456, %r455, 18;
	shf.r.wrap.b32 	%r460, %r455, %r456, 18;
	mov.b64 	%rd826, {%r460, %r459};
	xor.b64  	%rd827, %rd825, %rd826;
	shf.l.wrap.b32 	%r461, %r455, %r456, 23;
	shf.l.wrap.b32 	%r462, %r456, %r455, 23;
	mov.b64 	%rd828, {%r462, %r461};
	xor.b64  	%rd829, %rd827, %rd828;
	add.s64 	%rd830, %rd824, %rd829;
	add.s64 	%rd831, %rd830, 5365058923640841347;
	add.s64 	%rd832, %rd831, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd808;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 28;
	shf.r.wrap.b32 	%r466, %r463, %r464, 28;
	mov.b64 	%rd833, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 30;
	shf.l.wrap.b32 	%r468, %r464, %r463, 30;
	mov.b64 	%rd834, {%r468, %r467};
	xor.b64  	%rd835, %rd833, %rd834;
	shf.l.wrap.b32 	%r469, %r463, %r464, 25;
	shf.l.wrap.b32 	%r470, %r464, %r463, 25;
	mov.b64 	%rd836, {%r470, %r469};
	xor.b64  	%rd837, %rd835, %rd836;
	and.b64  	%rd838, %rd808, %rd773;
	or.b64  	%rd839, %rd808, %rd773;
	and.b64  	%rd840, %rd839, %rd738;
	or.b64  	%rd841, %rd840, %rd838;
	add.s64 	%rd842, %rd841, %rd837;
	add.s64 	%rd843, %rd842, %rd831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd3225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd3225;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 19;
	shf.r.wrap.b32 	%r474, %r471, %r472, 19;
	mov.b64 	%rd844, {%r474, %r473};
	shf.l.wrap.b32 	%r475, %r471, %r472, 3;
	shf.l.wrap.b32 	%r476, %r472, %r471, 3;
	mov.b64 	%rd845, {%r476, %r475};
	xor.b64  	%rd846, %rd844, %rd845;
	shr.u64 	%rd847, %rd3225, 6;
	xor.b64  	%rd848, %rd846, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd3274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd3274;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 8;
	shf.r.wrap.b32 	%r480, %r477, %r478, 8;
	mov.b64 	%rd849, {%r480, %r479};
	shf.r.wrap.b32 	%r481, %r478, %r477, 1;
	shf.r.wrap.b32 	%r482, %r477, %r478, 1;
	mov.b64 	%rd850, {%r482, %r481};
	xor.b64  	%rd851, %rd850, %rd849;
	shr.u64 	%rd852, %rd3274, 7;
	xor.b64  	%rd853, %rd851, %rd852;
	add.s64 	%rd854, %rd848, %rd3273;
	add.s64 	%rd855, %rd854, %rd853;
	add.s64 	%rd3221, %rd855, 1536;
	add.s64 	%rd856, %rd3221, %rd727;
	xor.b64  	%rd857, %rd797, %rd762;
	and.b64  	%rd858, %rd832, %rd857;
	xor.b64  	%rd859, %rd858, %rd762;
	add.s64 	%rd860, %rd856, %rd859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd832;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 14;
	shf.r.wrap.b32 	%r486, %r483, %r484, 14;
	mov.b64 	%rd861, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r484, %r483, 18;
	shf.r.wrap.b32 	%r488, %r483, %r484, 18;
	mov.b64 	%rd862, {%r488, %r487};
	xor.b64  	%rd863, %rd861, %rd862;
	shf.l.wrap.b32 	%r489, %r483, %r484, 23;
	shf.l.wrap.b32 	%r490, %r484, %r483, 23;
	mov.b64 	%rd864, {%r490, %r489};
	xor.b64  	%rd865, %rd863, %rd864;
	add.s64 	%rd866, %rd860, %rd865;
	add.s64 	%rd867, %rd866, 6679025012923562964;
	add.s64 	%rd868, %rd867, %rd738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd843;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 28;
	shf.r.wrap.b32 	%r494, %r491, %r492, 28;
	mov.b64 	%rd869, {%r494, %r493};
	shf.l.wrap.b32 	%r495, %r491, %r492, 30;
	shf.l.wrap.b32 	%r496, %r492, %r491, 30;
	mov.b64 	%rd870, {%r496, %r495};
	xor.b64  	%rd871, %rd869, %rd870;
	shf.l.wrap.b32 	%r497, %r491, %r492, 25;
	shf.l.wrap.b32 	%r498, %r492, %r491, 25;
	mov.b64 	%rd872, {%r498, %r497};
	xor.b64  	%rd873, %rd871, %rd872;
	and.b64  	%rd874, %rd843, %rd808;
	or.b64  	%rd875, %rd843, %rd808;
	and.b64  	%rd876, %rd875, %rd773;
	or.b64  	%rd877, %rd876, %rd874;
	add.s64 	%rd878, %rd877, %rd873;
	add.s64 	%rd879, %rd878, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd3223;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 19;
	shf.r.wrap.b32 	%r502, %r499, %r500, 19;
	mov.b64 	%rd880, {%r502, %r501};
	shf.l.wrap.b32 	%r503, %r499, %r500, 3;
	shf.l.wrap.b32 	%r504, %r500, %r499, 3;
	mov.b64 	%rd881, {%r504, %r503};
	xor.b64  	%rd882, %rd880, %rd881;
	shr.u64 	%rd883, %rd3223, 6;
	xor.b64  	%rd884, %rd882, %rd883;
	add.s64 	%rd885, %rd884, %rd3274;
	add.s64 	%rd886, %rd885, %rd3232;
	add.s64 	%rd3220, %rd886, %rd40;
	add.s64 	%rd887, %rd3220, %rd762;
	xor.b64  	%rd888, %rd832, %rd797;
	and.b64  	%rd889, %rd868, %rd888;
	xor.b64  	%rd890, %rd889, %rd797;
	add.s64 	%rd891, %rd887, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd868;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd892, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd893, {%r510, %r509};
	xor.b64  	%rd894, %rd892, %rd893;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd895, {%r512, %r511};
	xor.b64  	%rd896, %rd894, %rd895;
	add.s64 	%rd897, %rd891, %rd896;
	add.s64 	%rd898, %rd897, 8573033837759648693;
	add.s64 	%rd899, %rd898, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd879;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd900, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd901, {%r518, %r517};
	xor.b64  	%rd902, %rd900, %rd901;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd903, {%r520, %r519};
	xor.b64  	%rd904, %rd902, %rd903;
	and.b64  	%rd905, %rd879, %rd843;
	or.b64  	%rd906, %rd879, %rd843;
	and.b64  	%rd907, %rd906, %rd808;
	or.b64  	%rd908, %rd907, %rd905;
	add.s64 	%rd909, %rd908, %rd904;
	add.s64 	%rd910, %rd909, %rd898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd3221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd3221;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 19;
	shf.r.wrap.b32 	%r524, %r521, %r522, 19;
	mov.b64 	%rd911, {%r524, %r523};
	shf.l.wrap.b32 	%r525, %r521, %r522, 3;
	shf.l.wrap.b32 	%r526, %r522, %r521, 3;
	mov.b64 	%rd912, {%r526, %r525};
	xor.b64  	%rd913, %rd911, %rd912;
	shr.u64 	%rd914, %rd3221, 6;
	xor.b64  	%rd915, %rd913, %rd914;
	add.s64 	%rd916, %rd41, %rd3233;
	add.s64 	%rd3219, %rd916, %rd915;
	add.s64 	%rd917, %rd3219, %rd797;
	xor.b64  	%rd918, %rd868, %rd832;
	and.b64  	%rd919, %rd899, %rd918;
	xor.b64  	%rd920, %rd919, %rd832;
	add.s64 	%rd921, %rd917, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd899;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 14;
	shf.r.wrap.b32 	%r530, %r527, %r528, 14;
	mov.b64 	%rd922, {%r530, %r529};
	shf.r.wrap.b32 	%r531, %r528, %r527, 18;
	shf.r.wrap.b32 	%r532, %r527, %r528, 18;
	mov.b64 	%rd923, {%r532, %r531};
	xor.b64  	%rd924, %rd922, %rd923;
	shf.l.wrap.b32 	%r533, %r527, %r528, 23;
	shf.l.wrap.b32 	%r534, %r528, %r527, 23;
	mov.b64 	%rd925, {%r534, %r533};
	xor.b64  	%rd926, %rd924, %rd925;
	add.s64 	%rd927, %rd921, %rd926;
	add.s64 	%rd928, %rd927, -7476448914759557205;
	add.s64 	%rd929, %rd928, %rd808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd910;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 28;
	shf.r.wrap.b32 	%r538, %r535, %r536, 28;
	mov.b64 	%rd930, {%r538, %r537};
	shf.l.wrap.b32 	%r539, %r535, %r536, 30;
	shf.l.wrap.b32 	%r540, %r536, %r535, 30;
	mov.b64 	%rd931, {%r540, %r539};
	xor.b64  	%rd932, %rd930, %rd931;
	shf.l.wrap.b32 	%r541, %r535, %r536, 25;
	shf.l.wrap.b32 	%r542, %r536, %r535, 25;
	mov.b64 	%rd933, {%r542, %r541};
	xor.b64  	%rd934, %rd932, %rd933;
	and.b64  	%rd935, %rd910, %rd879;
	or.b64  	%rd936, %rd910, %rd879;
	and.b64  	%rd937, %rd936, %rd843;
	or.b64  	%rd938, %rd937, %rd935;
	add.s64 	%rd939, %rd938, %rd934;
	add.s64 	%rd940, %rd939, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd3220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd3220;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 19;
	shf.r.wrap.b32 	%r546, %r543, %r544, 19;
	mov.b64 	%rd941, {%r546, %r545};
	shf.l.wrap.b32 	%r547, %r543, %r544, 3;
	shf.l.wrap.b32 	%r548, %r544, %r543, 3;
	mov.b64 	%rd942, {%r548, %r547};
	xor.b64  	%rd943, %rd941, %rd942;
	shr.u64 	%rd944, %rd3220, 6;
	xor.b64  	%rd945, %rd943, %rd944;
	add.s64 	%rd946, %rd3229, %rd36;
	add.s64 	%rd3231, %rd946, %rd945;
	add.s64 	%rd947, %rd3231, %rd832;
	xor.b64  	%rd948, %rd899, %rd868;
	and.b64  	%rd949, %rd929, %rd948;
	xor.b64  	%rd950, %rd949, %rd868;
	add.s64 	%rd951, %rd947, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r549,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r550}, %rd929;
	}
	shf.r.wrap.b32 	%r551, %r550, %r549, 14;
	shf.r.wrap.b32 	%r552, %r549, %r550, 14;
	mov.b64 	%rd952, {%r552, %r551};
	shf.r.wrap.b32 	%r553, %r550, %r549, 18;
	shf.r.wrap.b32 	%r554, %r549, %r550, 18;
	mov.b64 	%rd953, {%r554, %r553};
	xor.b64  	%rd954, %rd952, %rd953;
	shf.l.wrap.b32 	%r555, %r549, %r550, 23;
	shf.l.wrap.b32 	%r556, %r550, %r549, 23;
	mov.b64 	%rd955, {%r556, %r555};
	xor.b64  	%rd956, %rd954, %rd955;
	add.s64 	%rd957, %rd951, %rd956;
	add.s64 	%rd958, %rd957, -6327057829258317296;
	add.s64 	%rd959, %rd958, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r557,%dummy}, %rd940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r558}, %rd940;
	}
	shf.r.wrap.b32 	%r559, %r558, %r557, 28;
	shf.r.wrap.b32 	%r560, %r557, %r558, 28;
	mov.b64 	%rd960, {%r560, %r559};
	shf.l.wrap.b32 	%r561, %r557, %r558, 30;
	shf.l.wrap.b32 	%r562, %r558, %r557, 30;
	mov.b64 	%rd961, {%r562, %r561};
	xor.b64  	%rd962, %rd960, %rd961;
	shf.l.wrap.b32 	%r563, %r557, %r558, 25;
	shf.l.wrap.b32 	%r564, %r558, %r557, 25;
	mov.b64 	%rd963, {%r564, %r563};
	xor.b64  	%rd964, %rd962, %rd963;
	and.b64  	%rd965, %rd940, %rd910;
	or.b64  	%rd966, %rd940, %rd910;
	and.b64  	%rd967, %rd966, %rd879;
	or.b64  	%rd968, %rd967, %rd965;
	add.s64 	%rd969, %rd968, %rd964;
	add.s64 	%rd970, %rd969, %rd958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd3219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd3219;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 19;
	shf.r.wrap.b32 	%r568, %r565, %r566, 19;
	mov.b64 	%rd971, {%r568, %r567};
	shf.l.wrap.b32 	%r569, %r565, %r566, 3;
	shf.l.wrap.b32 	%r570, %r566, %r565, 3;
	mov.b64 	%rd972, {%r570, %r569};
	xor.b64  	%rd973, %rd971, %rd972;
	shr.u64 	%rd974, %rd3219, 6;
	xor.b64  	%rd975, %rd973, %rd974;
	add.s64 	%rd976, %rd3227, %rd36;
	add.s64 	%rd3228, %rd976, %rd975;
	add.s64 	%rd977, %rd3228, %rd868;
	xor.b64  	%rd978, %rd929, %rd899;
	and.b64  	%rd979, %rd959, %rd978;
	xor.b64  	%rd980, %rd979, %rd899;
	add.s64 	%rd981, %rd977, %rd980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd959;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 14;
	shf.r.wrap.b32 	%r574, %r571, %r572, 14;
	mov.b64 	%rd982, {%r574, %r573};
	shf.r.wrap.b32 	%r575, %r572, %r571, 18;
	shf.r.wrap.b32 	%r576, %r571, %r572, 18;
	mov.b64 	%rd983, {%r576, %r575};
	xor.b64  	%rd984, %rd982, %rd983;
	shf.l.wrap.b32 	%r577, %r571, %r572, 23;
	shf.l.wrap.b32 	%r578, %r572, %r571, 23;
	mov.b64 	%rd985, {%r578, %r577};
	xor.b64  	%rd986, %rd984, %rd985;
	add.s64 	%rd987, %rd981, %rd986;
	add.s64 	%rd988, %rd987, -5763719355590565569;
	add.s64 	%rd989, %rd988, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd970;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 28;
	shf.r.wrap.b32 	%r582, %r579, %r580, 28;
	mov.b64 	%rd990, {%r582, %r581};
	shf.l.wrap.b32 	%r583, %r579, %r580, 30;
	shf.l.wrap.b32 	%r584, %r580, %r579, 30;
	mov.b64 	%rd991, {%r584, %r583};
	xor.b64  	%rd992, %rd990, %rd991;
	shf.l.wrap.b32 	%r585, %r579, %r580, 25;
	shf.l.wrap.b32 	%r586, %r580, %r579, 25;
	mov.b64 	%rd993, {%r586, %r585};
	xor.b64  	%rd994, %rd992, %rd993;
	and.b64  	%rd995, %rd970, %rd940;
	or.b64  	%rd996, %rd970, %rd940;
	and.b64  	%rd997, %rd996, %rd910;
	or.b64  	%rd998, %rd997, %rd995;
	add.s64 	%rd999, %rd998, %rd994;
	add.s64 	%rd1000, %rd999, %rd988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd3231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd3231;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 19;
	shf.r.wrap.b32 	%r590, %r587, %r588, 19;
	mov.b64 	%rd1001, {%r590, %r589};
	shf.l.wrap.b32 	%r591, %r587, %r588, 3;
	shf.l.wrap.b32 	%r592, %r588, %r587, 3;
	mov.b64 	%rd1002, {%r592, %r591};
	xor.b64  	%rd1003, %rd1001, %rd1002;
	shr.u64 	%rd1004, %rd3231, 6;
	xor.b64  	%rd1005, %rd1003, %rd1004;
	add.s64 	%rd1006, %rd3225, %rd36;
	add.s64 	%rd3226, %rd1006, %rd1005;
	add.s64 	%rd1007, %rd3226, %rd899;
	xor.b64  	%rd1008, %rd959, %rd929;
	and.b64  	%rd1009, %rd989, %rd1008;
	xor.b64  	%rd1010, %rd1009, %rd929;
	add.s64 	%rd1011, %rd1007, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd989;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 14;
	shf.r.wrap.b32 	%r596, %r593, %r594, 14;
	mov.b64 	%rd1012, {%r596, %r595};
	shf.r.wrap.b32 	%r597, %r594, %r593, 18;
	shf.r.wrap.b32 	%r598, %r593, %r594, 18;
	mov.b64 	%rd1013, {%r598, %r597};
	xor.b64  	%rd1014, %rd1012, %rd1013;
	shf.l.wrap.b32 	%r599, %r593, %r594, 23;
	shf.l.wrap.b32 	%r600, %r594, %r593, 23;
	mov.b64 	%rd1015, {%r600, %r599};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	add.s64 	%rd1017, %rd1011, %rd1016;
	add.s64 	%rd1018, %rd1017, -4658551843659510044;
	add.s64 	%rd1019, %rd1018, %rd910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd1000;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 28;
	shf.r.wrap.b32 	%r604, %r601, %r602, 28;
	mov.b64 	%rd1020, {%r604, %r603};
	shf.l.wrap.b32 	%r605, %r601, %r602, 30;
	shf.l.wrap.b32 	%r606, %r602, %r601, 30;
	mov.b64 	%rd1021, {%r606, %r605};
	xor.b64  	%rd1022, %rd1020, %rd1021;
	shf.l.wrap.b32 	%r607, %r601, %r602, 25;
	shf.l.wrap.b32 	%r608, %r602, %r601, 25;
	mov.b64 	%rd1023, {%r608, %r607};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	and.b64  	%rd1025, %rd1000, %rd970;
	or.b64  	%rd1026, %rd1000, %rd970;
	and.b64  	%rd1027, %rd1026, %rd940;
	or.b64  	%rd1028, %rd1027, %rd1025;
	add.s64 	%rd1029, %rd1028, %rd1024;
	add.s64 	%rd1030, %rd1029, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd3228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd3228;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 19;
	shf.r.wrap.b32 	%r612, %r609, %r610, 19;
	mov.b64 	%rd1031, {%r612, %r611};
	shf.l.wrap.b32 	%r613, %r609, %r610, 3;
	shf.l.wrap.b32 	%r614, %r610, %r609, 3;
	mov.b64 	%rd1032, {%r614, %r613};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	shr.u64 	%rd1034, %rd3228, 6;
	xor.b64  	%rd1035, %rd1033, %rd1034;
	add.s64 	%rd1036, %rd3223, %rd36;
	add.s64 	%rd3224, %rd1036, %rd1035;
	add.s64 	%rd1037, %rd3224, %rd929;
	xor.b64  	%rd1038, %rd989, %rd959;
	and.b64  	%rd1039, %rd1019, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd959;
	add.s64 	%rd1041, %rd1037, %rd1040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd1019;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 14;
	shf.r.wrap.b32 	%r618, %r615, %r616, 14;
	mov.b64 	%rd1042, {%r618, %r617};
	shf.r.wrap.b32 	%r619, %r616, %r615, 18;
	shf.r.wrap.b32 	%r620, %r615, %r616, 18;
	mov.b64 	%rd1043, {%r620, %r619};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	shf.l.wrap.b32 	%r621, %r615, %r616, 23;
	shf.l.wrap.b32 	%r622, %r616, %r615, 23;
	mov.b64 	%rd1045, {%r622, %r621};
	xor.b64  	%rd1046, %rd1044, %rd1045;
	add.s64 	%rd1047, %rd1041, %rd1046;
	add.s64 	%rd1048, %rd1047, -4116276920077217854;
	add.s64 	%rd3235, %rd1048, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd1030;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 28;
	shf.r.wrap.b32 	%r626, %r623, %r624, 28;
	mov.b64 	%rd1049, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 30;
	shf.l.wrap.b32 	%r628, %r624, %r623, 30;
	mov.b64 	%rd1050, {%r628, %r627};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	shf.l.wrap.b32 	%r629, %r623, %r624, 25;
	shf.l.wrap.b32 	%r630, %r624, %r623, 25;
	mov.b64 	%rd1052, {%r630, %r629};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	and.b64  	%rd1054, %rd1030, %rd1000;
	or.b64  	%rd1055, %rd1030, %rd1000;
	and.b64  	%rd1056, %rd1055, %rd970;
	or.b64  	%rd1057, %rd1056, %rd1054;
	add.s64 	%rd1058, %rd1057, %rd1053;
	add.s64 	%rd3239, %rd1058, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd3226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd3226;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 19;
	shf.r.wrap.b32 	%r634, %r631, %r632, 19;
	mov.b64 	%rd1059, {%r634, %r633};
	shf.l.wrap.b32 	%r635, %r631, %r632, 3;
	shf.l.wrap.b32 	%r636, %r632, %r631, 3;
	mov.b64 	%rd1060, {%r636, %r635};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	shr.u64 	%rd1062, %rd3226, 6;
	xor.b64  	%rd1063, %rd1061, %rd1062;
	add.s64 	%rd1064, %rd3221, %rd36;
	add.s64 	%rd3222, %rd1064, %rd1063;
	add.s64 	%rd1065, %rd3222, %rd959;
	xor.b64  	%rd1066, %rd1019, %rd989;
	and.b64  	%rd1067, %rd3235, %rd1066;
	xor.b64  	%rd1068, %rd1067, %rd989;
	add.s64 	%rd1069, %rd1065, %rd1068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd3235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd3235;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 14;
	shf.r.wrap.b32 	%r640, %r637, %r638, 14;
	mov.b64 	%rd1070, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 18;
	shf.r.wrap.b32 	%r642, %r637, %r638, 18;
	mov.b64 	%rd1071, {%r642, %r641};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	shf.l.wrap.b32 	%r643, %r637, %r638, 23;
	shf.l.wrap.b32 	%r644, %r638, %r637, 23;
	mov.b64 	%rd1073, {%r644, %r643};
	xor.b64  	%rd1074, %rd1072, %rd1073;
	add.s64 	%rd1075, %rd1069, %rd1074;
	add.s64 	%rd1076, %rd1075, -3051310485924567259;
	add.s64 	%rd3242, %rd1076, %rd970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd3239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd3239;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 28;
	shf.r.wrap.b32 	%r648, %r645, %r646, 28;
	mov.b64 	%rd1077, {%r648, %r647};
	shf.l.wrap.b32 	%r649, %r645, %r646, 30;
	shf.l.wrap.b32 	%r650, %r646, %r645, 30;
	mov.b64 	%rd1078, {%r650, %r649};
	xor.b64  	%rd1079, %rd1077, %rd1078;
	shf.l.wrap.b32 	%r651, %r645, %r646, 25;
	shf.l.wrap.b32 	%r652, %r646, %r645, 25;
	mov.b64 	%rd1080, {%r652, %r651};
	xor.b64  	%rd1081, %rd1079, %rd1080;
	and.b64  	%rd1082, %rd3239, %rd1030;
	or.b64  	%rd1083, %rd3239, %rd1030;
	and.b64  	%rd1084, %rd1083, %rd1000;
	or.b64  	%rd1085, %rd1084, %rd1082;
	add.s64 	%rd1086, %rd1085, %rd1081;
	add.s64 	%rd3238, %rd1086, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd3224;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 19;
	shf.r.wrap.b32 	%r656, %r653, %r654, 19;
	mov.b64 	%rd1087, {%r656, %r655};
	shf.l.wrap.b32 	%r657, %r653, %r654, 3;
	shf.l.wrap.b32 	%r658, %r654, %r653, 3;
	mov.b64 	%rd1088, {%r658, %r657};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	shr.u64 	%rd1090, %rd3224, 6;
	xor.b64  	%rd1091, %rd1089, %rd1090;
	add.s64 	%rd1092, %rd1091, %rd3220;
	add.s64 	%rd3234, %rd1092, %rd42;
	add.s64 	%rd1093, %rd3234, %rd989;
	xor.b64  	%rd1094, %rd3235, %rd1019;
	and.b64  	%rd1095, %rd3242, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1019;
	add.s64 	%rd1097, %rd1093, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd3242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd3242;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 14;
	shf.r.wrap.b32 	%r662, %r659, %r660, 14;
	mov.b64 	%rd1098, {%r662, %r661};
	shf.r.wrap.b32 	%r663, %r660, %r659, 18;
	shf.r.wrap.b32 	%r664, %r659, %r660, 18;
	mov.b64 	%rd1099, {%r664, %r663};
	xor.b64  	%rd1100, %rd1098, %rd1099;
	shf.l.wrap.b32 	%r665, %r659, %r660, 23;
	shf.l.wrap.b32 	%r666, %r660, %r659, 23;
	mov.b64 	%rd1101, {%r666, %r665};
	xor.b64  	%rd1102, %rd1100, %rd1101;
	add.s64 	%rd1103, %rd1097, %rd1102;
	add.s64 	%rd1104, %rd1103, 489312712824947311;
	add.s64 	%rd3241, %rd1104, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd3238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd3238;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 28;
	shf.r.wrap.b32 	%r670, %r667, %r668, 28;
	mov.b64 	%rd1105, {%r670, %r669};
	shf.l.wrap.b32 	%r671, %r667, %r668, 30;
	shf.l.wrap.b32 	%r672, %r668, %r667, 30;
	mov.b64 	%rd1106, {%r672, %r671};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	shf.l.wrap.b32 	%r673, %r667, %r668, 25;
	shf.l.wrap.b32 	%r674, %r668, %r667, 25;
	mov.b64 	%rd1108, {%r674, %r673};
	xor.b64  	%rd1109, %rd1107, %rd1108;
	and.b64  	%rd1110, %rd3238, %rd3239;
	or.b64  	%rd1111, %rd3238, %rd3239;
	and.b64  	%rd1112, %rd1111, %rd1030;
	or.b64  	%rd1113, %rd1112, %rd1110;
	add.s64 	%rd1114, %rd1113, %rd1109;
	add.s64 	%rd3237, %rd1114, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r675,%dummy}, %rd3222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd3222;
	}
	shf.r.wrap.b32 	%r677, %r676, %r675, 19;
	shf.r.wrap.b32 	%r678, %r675, %r676, 19;
	mov.b64 	%rd1115, {%r678, %r677};
	shf.l.wrap.b32 	%r679, %r675, %r676, 3;
	shf.l.wrap.b32 	%r680, %r676, %r675, 3;
	mov.b64 	%rd1116, {%r680, %r679};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	shr.u64 	%rd1118, %rd3222, 6;
	xor.b64  	%rd1119, %rd1117, %rd1118;
	shf.r.wrap.b32 	%r681, %r360, %r359, 1;
	shf.r.wrap.b32 	%r682, %r359, %r360, 1;
	mov.b64 	%rd1120, {%r682, %r681};
	shf.r.wrap.b32 	%r683, %r360, %r359, 8;
	shf.r.wrap.b32 	%r684, %r359, %r360, 8;
	mov.b64 	%rd1121, {%r684, %r683};
	xor.b64  	%rd1122, %rd1120, %rd1121;
	shr.u64 	%rd1123, %rd3232, 7;
	xor.b64  	%rd1124, %rd1122, %rd1123;
	add.s64 	%rd1125, %rd1119, %rd3219;
	add.s64 	%rd1126, %rd1125, %rd1124;
	add.s64 	%rd3230, %rd1126, 1536;
	add.s64 	%rd1127, %rd3230, %rd1019;
	xor.b64  	%rd1128, %rd3242, %rd3235;
	and.b64  	%rd1129, %rd3241, %rd1128;
	xor.b64  	%rd1130, %rd1129, %rd3235;
	add.s64 	%rd1131, %rd1127, %rd1130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd3241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd3241;
	}
	shf.r.wrap.b32 	%r687, %r686, %r685, 14;
	shf.r.wrap.b32 	%r688, %r685, %r686, 14;
	mov.b64 	%rd1132, {%r688, %r687};
	shf.r.wrap.b32 	%r689, %r686, %r685, 18;
	shf.r.wrap.b32 	%r690, %r685, %r686, 18;
	mov.b64 	%rd1133, {%r690, %r689};
	xor.b64  	%rd1134, %rd1132, %rd1133;
	shf.l.wrap.b32 	%r691, %r685, %r686, 23;
	shf.l.wrap.b32 	%r692, %r686, %r685, 23;
	mov.b64 	%rd1135, {%r692, %r691};
	xor.b64  	%rd1136, %rd1134, %rd1135;
	add.s64 	%rd1137, %rd1131, %rd1136;
	add.s64 	%rd1138, %rd1137, 1452737877330783856;
	add.s64 	%rd3240, %rd1138, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd3237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd3237;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 28;
	shf.r.wrap.b32 	%r696, %r693, %r694, 28;
	mov.b64 	%rd1139, {%r696, %r695};
	shf.l.wrap.b32 	%r697, %r693, %r694, 30;
	shf.l.wrap.b32 	%r698, %r694, %r693, 30;
	mov.b64 	%rd1140, {%r698, %r697};
	xor.b64  	%rd1141, %rd1139, %rd1140;
	shf.l.wrap.b32 	%r699, %r693, %r694, 25;
	shf.l.wrap.b32 	%r700, %r694, %r693, 25;
	mov.b64 	%rd1142, {%r700, %r699};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	and.b64  	%rd1144, %rd3237, %rd3238;
	or.b64  	%rd1145, %rd3237, %rd3238;
	and.b64  	%rd1146, %rd1145, %rd3239;
	or.b64  	%rd1147, %rd1146, %rd1144;
	add.s64 	%rd1148, %rd1147, %rd1143;
	add.s64 	%rd3236, %rd1148, %rd1138;
	mov.u32 	%r2222, 32;

$L__BB3_3:
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd3234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd3234;
	}
	shf.l.wrap.b32 	%r703, %r702, %r701, 3;
	shf.l.wrap.b32 	%r704, %r701, %r702, 3;
	mov.b64 	%rd1149, {%r704, %r703};
	shf.r.wrap.b32 	%r705, %r701, %r702, 19;
	shf.r.wrap.b32 	%r706, %r702, %r701, 19;
	mov.b64 	%rd1150, {%r706, %r705};
	xor.b64  	%rd1151, %rd1150, %rd1149;
	shr.u64 	%rd1152, %rd3234, 6;
	xor.b64  	%rd1153, %rd1151, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd3233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd3233;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 8;
	shf.r.wrap.b32 	%r710, %r707, %r708, 8;
	mov.b64 	%rd1154, {%r710, %r709};
	shf.r.wrap.b32 	%r711, %r708, %r707, 1;
	shf.r.wrap.b32 	%r712, %r707, %r708, 1;
	mov.b64 	%rd1155, {%r712, %r711};
	xor.b64  	%rd1156, %rd1155, %rd1154;
	shr.u64 	%rd1157, %rd3233, 7;
	xor.b64  	%rd1158, %rd1156, %rd1157;
	add.s64 	%rd1159, %rd1153, %rd3232;
	add.s64 	%rd1160, %rd1159, %rd3231;
	add.s64 	%rd3232, %rd1160, %rd1158;
	mul.wide.u32 	%rd1161, %r2222, 8;
	mov.u64 	%rd1162, K;
	add.s64 	%rd1163, %rd1162, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd3240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd3240;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 18;
	shf.r.wrap.b32 	%r716, %r713, %r714, 18;
	mov.b64 	%rd1164, {%r716, %r715};
	shf.r.wrap.b32 	%r717, %r714, %r713, 14;
	shf.r.wrap.b32 	%r718, %r713, %r714, 14;
	mov.b64 	%rd1165, {%r718, %r717};
	xor.b64  	%rd1166, %rd1165, %rd1164;
	shf.l.wrap.b32 	%r719, %r713, %r714, 23;
	shf.l.wrap.b32 	%r720, %r714, %r713, 23;
	mov.b64 	%rd1167, {%r720, %r719};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	xor.b64  	%rd1169, %rd3241, %rd3242;
	and.b64  	%rd1170, %rd3240, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd3242;
	add.s64 	%rd1172, %rd1168, %rd1171;
	add.s64 	%rd1173, %rd1172, %rd3235;
	ld.const.u64 	%rd1174, [%rd1163];
	add.s64 	%rd1175, %rd1173, %rd1174;
	add.s64 	%rd1176, %rd1175, %rd3232;
	add.s64 	%rd1177, %rd1176, %rd3239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd3236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd3236;
	}
	shf.l.wrap.b32 	%r723, %r722, %r721, 30;
	shf.l.wrap.b32 	%r724, %r721, %r722, 30;
	mov.b64 	%rd1178, {%r724, %r723};
	shf.r.wrap.b32 	%r725, %r721, %r722, 28;
	shf.r.wrap.b32 	%r726, %r722, %r721, 28;
	mov.b64 	%rd1179, {%r726, %r725};
	xor.b64  	%rd1180, %rd1179, %rd1178;
	shf.l.wrap.b32 	%r727, %r722, %r721, 25;
	shf.l.wrap.b32 	%r728, %r721, %r722, 25;
	mov.b64 	%rd1181, {%r728, %r727};
	xor.b64  	%rd1182, %rd1180, %rd1181;
	or.b64  	%rd1183, %rd3236, %rd3237;
	and.b64  	%rd1184, %rd1183, %rd3238;
	and.b64  	%rd1185, %rd3236, %rd3237;
	or.b64  	%rd1186, %rd1184, %rd1185;
	add.s64 	%rd1187, %rd1186, %rd1182;
	add.s64 	%rd1188, %rd1187, %rd1176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r729}, %rd3230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd3230;
	}
	shf.l.wrap.b32 	%r731, %r730, %r729, 3;
	shf.l.wrap.b32 	%r732, %r729, %r730, 3;
	mov.b64 	%rd1189, {%r732, %r731};
	shf.r.wrap.b32 	%r733, %r729, %r730, 19;
	shf.r.wrap.b32 	%r734, %r730, %r729, 19;
	mov.b64 	%rd1190, {%r734, %r733};
	xor.b64  	%rd1191, %rd1190, %rd1189;
	shr.u64 	%rd1192, %rd3230, 6;
	xor.b64  	%rd1193, %rd1191, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r735,%dummy}, %rd3229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r736}, %rd3229;
	}
	shf.r.wrap.b32 	%r737, %r736, %r735, 8;
	shf.r.wrap.b32 	%r738, %r735, %r736, 8;
	mov.b64 	%rd1194, {%r738, %r737};
	shf.r.wrap.b32 	%r739, %r736, %r735, 1;
	shf.r.wrap.b32 	%r740, %r735, %r736, 1;
	mov.b64 	%rd1195, {%r740, %r739};
	xor.b64  	%rd1196, %rd1195, %rd1194;
	shr.u64 	%rd1197, %rd3229, 7;
	xor.b64  	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1193, %rd3233;
	add.s64 	%rd1200, %rd1199, %rd3228;
	add.s64 	%rd3233, %rd1200, %rd1198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd1177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd1177;
	}
	shf.r.wrap.b32 	%r743, %r742, %r741, 14;
	shf.r.wrap.b32 	%r744, %r741, %r742, 14;
	mov.b64 	%rd1201, {%r744, %r743};
	shf.r.wrap.b32 	%r745, %r742, %r741, 18;
	shf.r.wrap.b32 	%r746, %r741, %r742, 18;
	mov.b64 	%rd1202, {%r746, %r745};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	shf.l.wrap.b32 	%r747, %r741, %r742, 23;
	shf.l.wrap.b32 	%r748, %r742, %r741, 23;
	mov.b64 	%rd1204, {%r748, %r747};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd3240, %rd3241;
	and.b64  	%rd1207, %rd1177, %rd1206;
	xor.b64  	%rd1208, %rd1207, %rd3241;
	ld.const.u64 	%rd1209, [%rd1163+8];
	add.s64 	%rd1210, %rd1209, %rd3242;
	add.s64 	%rd1211, %rd1210, %rd3233;
	add.s64 	%rd1212, %rd1211, %rd1208;
	add.s64 	%rd1213, %rd1212, %rd1205;
	add.s64 	%rd1214, %rd1213, %rd3238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1188;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 28;
	shf.r.wrap.b32 	%r752, %r749, %r750, 28;
	mov.b64 	%rd1215, {%r752, %r751};
	shf.l.wrap.b32 	%r753, %r749, %r750, 30;
	shf.l.wrap.b32 	%r754, %r750, %r749, 30;
	mov.b64 	%rd1216, {%r754, %r753};
	xor.b64  	%rd1217, %rd1215, %rd1216;
	shf.l.wrap.b32 	%r755, %r749, %r750, 25;
	shf.l.wrap.b32 	%r756, %r750, %r749, 25;
	mov.b64 	%rd1218, {%r756, %r755};
	xor.b64  	%rd1219, %rd1217, %rd1218;
	and.b64  	%rd1220, %rd1188, %rd3236;
	or.b64  	%rd1221, %rd1188, %rd3236;
	and.b64  	%rd1222, %rd1221, %rd3237;
	or.b64  	%rd1223, %rd1222, %rd1220;
	add.s64 	%rd1224, %rd1223, %rd1219;
	add.s64 	%rd1225, %rd1224, %rd1213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd3232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd3232;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 19;
	shf.r.wrap.b32 	%r760, %r757, %r758, 19;
	mov.b64 	%rd1226, {%r760, %r759};
	shf.l.wrap.b32 	%r761, %r757, %r758, 3;
	shf.l.wrap.b32 	%r762, %r758, %r757, 3;
	mov.b64 	%rd1227, {%r762, %r761};
	xor.b64  	%rd1228, %rd1226, %rd1227;
	shr.u64 	%rd1229, %rd3232, 6;
	xor.b64  	%rd1230, %rd1228, %rd1229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd3227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd3227;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 8;
	shf.r.wrap.b32 	%r766, %r763, %r764, 8;
	mov.b64 	%rd1231, {%r766, %r765};
	shf.r.wrap.b32 	%r767, %r764, %r763, 1;
	shf.r.wrap.b32 	%r768, %r763, %r764, 1;
	mov.b64 	%rd1232, {%r768, %r767};
	xor.b64  	%rd1233, %rd1232, %rd1231;
	shr.u64 	%rd1234, %rd3227, 7;
	xor.b64  	%rd1235, %rd1233, %rd1234;
	add.s64 	%rd1236, %rd1230, %rd3229;
	add.s64 	%rd1237, %rd1236, %rd3226;
	add.s64 	%rd3229, %rd1237, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd1214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd1214;
	}
	shf.r.wrap.b32 	%r771, %r770, %r769, 14;
	shf.r.wrap.b32 	%r772, %r769, %r770, 14;
	mov.b64 	%rd1238, {%r772, %r771};
	shf.r.wrap.b32 	%r773, %r770, %r769, 18;
	shf.r.wrap.b32 	%r774, %r769, %r770, 18;
	mov.b64 	%rd1239, {%r774, %r773};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	shf.l.wrap.b32 	%r775, %r769, %r770, 23;
	shf.l.wrap.b32 	%r776, %r770, %r769, 23;
	mov.b64 	%rd1241, {%r776, %r775};
	xor.b64  	%rd1242, %rd1240, %rd1241;
	xor.b64  	%rd1243, %rd1177, %rd3240;
	and.b64  	%rd1244, %rd1214, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd3240;
	ld.const.u64 	%rd1246, [%rd1163+16];
	add.s64 	%rd1247, %rd1246, %rd3241;
	add.s64 	%rd1248, %rd1247, %rd3229;
	add.s64 	%rd1249, %rd1248, %rd1245;
	add.s64 	%rd1250, %rd1249, %rd1242;
	add.s64 	%rd1251, %rd1250, %rd3237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r777,%dummy}, %rd1225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r778}, %rd1225;
	}
	shf.r.wrap.b32 	%r779, %r778, %r777, 28;
	shf.r.wrap.b32 	%r780, %r777, %r778, 28;
	mov.b64 	%rd1252, {%r780, %r779};
	shf.l.wrap.b32 	%r781, %r777, %r778, 30;
	shf.l.wrap.b32 	%r782, %r778, %r777, 30;
	mov.b64 	%rd1253, {%r782, %r781};
	xor.b64  	%rd1254, %rd1252, %rd1253;
	shf.l.wrap.b32 	%r783, %r777, %r778, 25;
	shf.l.wrap.b32 	%r784, %r778, %r777, 25;
	mov.b64 	%rd1255, {%r784, %r783};
	xor.b64  	%rd1256, %rd1254, %rd1255;
	and.b64  	%rd1257, %rd1225, %rd1188;
	or.b64  	%rd1258, %rd1225, %rd1188;
	and.b64  	%rd1259, %rd1258, %rd3236;
	or.b64  	%rd1260, %rd1259, %rd1257;
	add.s64 	%rd1261, %rd1260, %rd1256;
	add.s64 	%rd1262, %rd1261, %rd1250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r785,%dummy}, %rd3233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r786}, %rd3233;
	}
	shf.r.wrap.b32 	%r787, %r786, %r785, 19;
	shf.r.wrap.b32 	%r788, %r785, %r786, 19;
	mov.b64 	%rd1263, {%r788, %r787};
	shf.l.wrap.b32 	%r789, %r785, %r786, 3;
	shf.l.wrap.b32 	%r790, %r786, %r785, 3;
	mov.b64 	%rd1264, {%r790, %r789};
	xor.b64  	%rd1265, %rd1263, %rd1264;
	shr.u64 	%rd1266, %rd3233, 6;
	xor.b64  	%rd1267, %rd1265, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r791,%dummy}, %rd3225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r792}, %rd3225;
	}
	shf.r.wrap.b32 	%r793, %r792, %r791, 8;
	shf.r.wrap.b32 	%r794, %r791, %r792, 8;
	mov.b64 	%rd1268, {%r794, %r793};
	shf.r.wrap.b32 	%r795, %r792, %r791, 1;
	shf.r.wrap.b32 	%r796, %r791, %r792, 1;
	mov.b64 	%rd1269, {%r796, %r795};
	xor.b64  	%rd1270, %rd1269, %rd1268;
	shr.u64 	%rd1271, %rd3225, 7;
	xor.b64  	%rd1272, %rd1270, %rd1271;
	add.s64 	%rd1273, %rd1267, %rd3227;
	add.s64 	%rd1274, %rd1273, %rd3224;
	add.s64 	%rd3227, %rd1274, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd1251;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 14;
	shf.r.wrap.b32 	%r800, %r797, %r798, 14;
	mov.b64 	%rd1275, {%r800, %r799};
	shf.r.wrap.b32 	%r801, %r798, %r797, 18;
	shf.r.wrap.b32 	%r802, %r797, %r798, 18;
	mov.b64 	%rd1276, {%r802, %r801};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	shf.l.wrap.b32 	%r803, %r797, %r798, 23;
	shf.l.wrap.b32 	%r804, %r798, %r797, 23;
	mov.b64 	%rd1278, {%r804, %r803};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	xor.b64  	%rd1280, %rd1214, %rd1177;
	and.b64  	%rd1281, %rd1251, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1177;
	ld.const.u64 	%rd1283, [%rd1163+24];
	add.s64 	%rd1284, %rd1283, %rd3240;
	add.s64 	%rd1285, %rd1284, %rd3227;
	add.s64 	%rd1286, %rd1285, %rd1282;
	add.s64 	%rd1287, %rd1286, %rd1279;
	add.s64 	%rd1288, %rd1287, %rd3236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r806}, %rd1262;
	}
	shf.r.wrap.b32 	%r807, %r806, %r805, 28;
	shf.r.wrap.b32 	%r808, %r805, %r806, 28;
	mov.b64 	%rd1289, {%r808, %r807};
	shf.l.wrap.b32 	%r809, %r805, %r806, 30;
	shf.l.wrap.b32 	%r810, %r806, %r805, 30;
	mov.b64 	%rd1290, {%r810, %r809};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	shf.l.wrap.b32 	%r811, %r805, %r806, 25;
	shf.l.wrap.b32 	%r812, %r806, %r805, 25;
	mov.b64 	%rd1292, {%r812, %r811};
	xor.b64  	%rd1293, %rd1291, %rd1292;
	and.b64  	%rd1294, %rd1262, %rd1225;
	or.b64  	%rd1295, %rd1262, %rd1225;
	and.b64  	%rd1296, %rd1295, %rd1188;
	or.b64  	%rd1297, %rd1296, %rd1294;
	add.s64 	%rd1298, %rd1297, %rd1293;
	add.s64 	%rd1299, %rd1298, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd3229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd3229;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 19;
	shf.r.wrap.b32 	%r816, %r813, %r814, 19;
	mov.b64 	%rd1300, {%r816, %r815};
	shf.l.wrap.b32 	%r817, %r813, %r814, 3;
	shf.l.wrap.b32 	%r818, %r814, %r813, 3;
	mov.b64 	%rd1301, {%r818, %r817};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	shr.u64 	%rd1303, %rd3229, 6;
	xor.b64  	%rd1304, %rd1302, %rd1303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd3223;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 8;
	shf.r.wrap.b32 	%r822, %r819, %r820, 8;
	mov.b64 	%rd1305, {%r822, %r821};
	shf.r.wrap.b32 	%r823, %r820, %r819, 1;
	shf.r.wrap.b32 	%r824, %r819, %r820, 1;
	mov.b64 	%rd1306, {%r824, %r823};
	xor.b64  	%rd1307, %rd1306, %rd1305;
	shr.u64 	%rd1308, %rd3223, 7;
	xor.b64  	%rd1309, %rd1307, %rd1308;
	add.s64 	%rd1310, %rd1304, %rd3225;
	add.s64 	%rd1311, %rd1310, %rd3222;
	add.s64 	%rd3225, %rd1311, %rd1309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd1288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd1288;
	}
	shf.r.wrap.b32 	%r827, %r826, %r825, 14;
	shf.r.wrap.b32 	%r828, %r825, %r826, 14;
	mov.b64 	%rd1312, {%r828, %r827};
	shf.r.wrap.b32 	%r829, %r826, %r825, 18;
	shf.r.wrap.b32 	%r830, %r825, %r826, 18;
	mov.b64 	%rd1313, {%r830, %r829};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	shf.l.wrap.b32 	%r831, %r825, %r826, 23;
	shf.l.wrap.b32 	%r832, %r826, %r825, 23;
	mov.b64 	%rd1315, {%r832, %r831};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	xor.b64  	%rd1317, %rd1251, %rd1214;
	and.b64  	%rd1318, %rd1288, %rd1317;
	xor.b64  	%rd1319, %rd1318, %rd1214;
	ld.const.u64 	%rd1320, [%rd1163+32];
	add.s64 	%rd1321, %rd1320, %rd1177;
	add.s64 	%rd1322, %rd1321, %rd3225;
	add.s64 	%rd1323, %rd1322, %rd1319;
	add.s64 	%rd1324, %rd1323, %rd1316;
	add.s64 	%rd1325, %rd1324, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r833,%dummy}, %rd1299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r834}, %rd1299;
	}
	shf.r.wrap.b32 	%r835, %r834, %r833, 28;
	shf.r.wrap.b32 	%r836, %r833, %r834, 28;
	mov.b64 	%rd1326, {%r836, %r835};
	shf.l.wrap.b32 	%r837, %r833, %r834, 30;
	shf.l.wrap.b32 	%r838, %r834, %r833, 30;
	mov.b64 	%rd1327, {%r838, %r837};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	shf.l.wrap.b32 	%r839, %r833, %r834, 25;
	shf.l.wrap.b32 	%r840, %r834, %r833, 25;
	mov.b64 	%rd1329, {%r840, %r839};
	xor.b64  	%rd1330, %rd1328, %rd1329;
	and.b64  	%rd1331, %rd1299, %rd1262;
	or.b64  	%rd1332, %rd1299, %rd1262;
	and.b64  	%rd1333, %rd1332, %rd1225;
	or.b64  	%rd1334, %rd1333, %rd1331;
	add.s64 	%rd1335, %rd1334, %rd1330;
	add.s64 	%rd1336, %rd1335, %rd1324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r841,%dummy}, %rd3227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r842}, %rd3227;
	}
	shf.r.wrap.b32 	%r843, %r842, %r841, 19;
	shf.r.wrap.b32 	%r844, %r841, %r842, 19;
	mov.b64 	%rd1337, {%r844, %r843};
	shf.l.wrap.b32 	%r845, %r841, %r842, 3;
	shf.l.wrap.b32 	%r846, %r842, %r841, 3;
	mov.b64 	%rd1338, {%r846, %r845};
	xor.b64  	%rd1339, %rd1337, %rd1338;
	shr.u64 	%rd1340, %rd3227, 6;
	xor.b64  	%rd1341, %rd1339, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r847,%dummy}, %rd3221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd3221;
	}
	shf.r.wrap.b32 	%r849, %r848, %r847, 8;
	shf.r.wrap.b32 	%r850, %r847, %r848, 8;
	mov.b64 	%rd1342, {%r850, %r849};
	shf.r.wrap.b32 	%r851, %r848, %r847, 1;
	shf.r.wrap.b32 	%r852, %r847, %r848, 1;
	mov.b64 	%rd1343, {%r852, %r851};
	xor.b64  	%rd1344, %rd1343, %rd1342;
	shr.u64 	%rd1345, %rd3221, 7;
	xor.b64  	%rd1346, %rd1344, %rd1345;
	add.s64 	%rd1347, %rd1341, %rd3223;
	add.s64 	%rd1348, %rd1347, %rd3234;
	add.s64 	%rd3223, %rd1348, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1325;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 14;
	shf.r.wrap.b32 	%r856, %r853, %r854, 14;
	mov.b64 	%rd1349, {%r856, %r855};
	shf.r.wrap.b32 	%r857, %r854, %r853, 18;
	shf.r.wrap.b32 	%r858, %r853, %r854, 18;
	mov.b64 	%rd1350, {%r858, %r857};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	shf.l.wrap.b32 	%r859, %r853, %r854, 23;
	shf.l.wrap.b32 	%r860, %r854, %r853, 23;
	mov.b64 	%rd1352, {%r860, %r859};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	xor.b64  	%rd1354, %rd1288, %rd1251;
	and.b64  	%rd1355, %rd1325, %rd1354;
	xor.b64  	%rd1356, %rd1355, %rd1251;
	ld.const.u64 	%rd1357, [%rd1163+40];
	add.s64 	%rd1358, %rd1357, %rd1214;
	add.s64 	%rd1359, %rd1358, %rd3223;
	add.s64 	%rd1360, %rd1359, %rd1356;
	add.s64 	%rd1361, %rd1360, %rd1353;
	add.s64 	%rd1362, %rd1361, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1336;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 28;
	shf.r.wrap.b32 	%r864, %r861, %r862, 28;
	mov.b64 	%rd1363, {%r864, %r863};
	shf.l.wrap.b32 	%r865, %r861, %r862, 30;
	shf.l.wrap.b32 	%r866, %r862, %r861, 30;
	mov.b64 	%rd1364, {%r866, %r865};
	xor.b64  	%rd1365, %rd1363, %rd1364;
	shf.l.wrap.b32 	%r867, %r861, %r862, 25;
	shf.l.wrap.b32 	%r868, %r862, %r861, 25;
	mov.b64 	%rd1366, {%r868, %r867};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	and.b64  	%rd1368, %rd1336, %rd1299;
	or.b64  	%rd1369, %rd1336, %rd1299;
	and.b64  	%rd1370, %rd1369, %rd1262;
	or.b64  	%rd1371, %rd1370, %rd1368;
	add.s64 	%rd1372, %rd1371, %rd1367;
	add.s64 	%rd1373, %rd1372, %rd1361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd3225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd3225;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 19;
	shf.r.wrap.b32 	%r872, %r869, %r870, 19;
	mov.b64 	%rd1374, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 3;
	shf.l.wrap.b32 	%r874, %r870, %r869, 3;
	mov.b64 	%rd1375, {%r874, %r873};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	shr.u64 	%rd1377, %rd3225, 6;
	xor.b64  	%rd1378, %rd1376, %rd1377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r875,%dummy}, %rd3220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r876}, %rd3220;
	}
	shf.r.wrap.b32 	%r877, %r876, %r875, 8;
	shf.r.wrap.b32 	%r878, %r875, %r876, 8;
	mov.b64 	%rd1379, {%r878, %r877};
	shf.r.wrap.b32 	%r879, %r876, %r875, 1;
	shf.r.wrap.b32 	%r880, %r875, %r876, 1;
	mov.b64 	%rd1380, {%r880, %r879};
	xor.b64  	%rd1381, %rd1380, %rd1379;
	shr.u64 	%rd1382, %rd3220, 7;
	xor.b64  	%rd1383, %rd1381, %rd1382;
	add.s64 	%rd1384, %rd1378, %rd3221;
	add.s64 	%rd1385, %rd1384, %rd3230;
	add.s64 	%rd3221, %rd1385, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r881,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r882}, %rd1362;
	}
	shf.r.wrap.b32 	%r883, %r882, %r881, 14;
	shf.r.wrap.b32 	%r884, %r881, %r882, 14;
	mov.b64 	%rd1386, {%r884, %r883};
	shf.r.wrap.b32 	%r885, %r882, %r881, 18;
	shf.r.wrap.b32 	%r886, %r881, %r882, 18;
	mov.b64 	%rd1387, {%r886, %r885};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	shf.l.wrap.b32 	%r887, %r881, %r882, 23;
	shf.l.wrap.b32 	%r888, %r882, %r881, 23;
	mov.b64 	%rd1389, {%r888, %r887};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	xor.b64  	%rd1391, %rd1325, %rd1288;
	and.b64  	%rd1392, %rd1362, %rd1391;
	xor.b64  	%rd1393, %rd1392, %rd1288;
	ld.const.u64 	%rd1394, [%rd1163+48];
	add.s64 	%rd1395, %rd1394, %rd1251;
	add.s64 	%rd1396, %rd1395, %rd3221;
	add.s64 	%rd1397, %rd1396, %rd1393;
	add.s64 	%rd1398, %rd1397, %rd1390;
	add.s64 	%rd1399, %rd1398, %rd1262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r889,%dummy}, %rd1373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r890}, %rd1373;
	}
	shf.r.wrap.b32 	%r891, %r890, %r889, 28;
	shf.r.wrap.b32 	%r892, %r889, %r890, 28;
	mov.b64 	%rd1400, {%r892, %r891};
	shf.l.wrap.b32 	%r893, %r889, %r890, 30;
	shf.l.wrap.b32 	%r894, %r890, %r889, 30;
	mov.b64 	%rd1401, {%r894, %r893};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	shf.l.wrap.b32 	%r895, %r889, %r890, 25;
	shf.l.wrap.b32 	%r896, %r890, %r889, 25;
	mov.b64 	%rd1403, {%r896, %r895};
	xor.b64  	%rd1404, %rd1402, %rd1403;
	and.b64  	%rd1405, %rd1373, %rd1336;
	or.b64  	%rd1406, %rd1373, %rd1336;
	and.b64  	%rd1407, %rd1406, %rd1299;
	or.b64  	%rd1408, %rd1407, %rd1405;
	add.s64 	%rd1409, %rd1408, %rd1404;
	add.s64 	%rd1410, %rd1409, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r897,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r898}, %rd3223;
	}
	shf.r.wrap.b32 	%r899, %r898, %r897, 19;
	shf.r.wrap.b32 	%r900, %r897, %r898, 19;
	mov.b64 	%rd1411, {%r900, %r899};
	shf.l.wrap.b32 	%r901, %r897, %r898, 3;
	shf.l.wrap.b32 	%r902, %r898, %r897, 3;
	mov.b64 	%rd1412, {%r902, %r901};
	xor.b64  	%rd1413, %rd1411, %rd1412;
	shr.u64 	%rd1414, %rd3223, 6;
	xor.b64  	%rd1415, %rd1413, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd3219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd3219;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 8;
	shf.r.wrap.b32 	%r906, %r903, %r904, 8;
	mov.b64 	%rd1416, {%r906, %r905};
	shf.r.wrap.b32 	%r907, %r904, %r903, 1;
	shf.r.wrap.b32 	%r908, %r903, %r904, 1;
	mov.b64 	%rd1417, {%r908, %r907};
	xor.b64  	%rd1418, %rd1417, %rd1416;
	shr.u64 	%rd1419, %rd3219, 7;
	xor.b64  	%rd1420, %rd1418, %rd1419;
	add.s64 	%rd1421, %rd1415, %rd3220;
	add.s64 	%rd1422, %rd1421, %rd3232;
	add.s64 	%rd3220, %rd1422, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1399;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 14;
	shf.r.wrap.b32 	%r912, %r909, %r910, 14;
	mov.b64 	%rd1423, {%r912, %r911};
	shf.r.wrap.b32 	%r913, %r910, %r909, 18;
	shf.r.wrap.b32 	%r914, %r909, %r910, 18;
	mov.b64 	%rd1424, {%r914, %r913};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	shf.l.wrap.b32 	%r915, %r909, %r910, 23;
	shf.l.wrap.b32 	%r916, %r910, %r909, 23;
	mov.b64 	%rd1426, {%r916, %r915};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	xor.b64  	%rd1428, %rd1362, %rd1325;
	and.b64  	%rd1429, %rd1399, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1325;
	ld.const.u64 	%rd1431, [%rd1163+56];
	add.s64 	%rd1432, %rd1431, %rd1288;
	add.s64 	%rd1433, %rd1432, %rd3220;
	add.s64 	%rd1434, %rd1433, %rd1430;
	add.s64 	%rd1435, %rd1434, %rd1427;
	add.s64 	%rd1436, %rd1435, %rd1299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd1410;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 28;
	shf.r.wrap.b32 	%r920, %r917, %r918, 28;
	mov.b64 	%rd1437, {%r920, %r919};
	shf.l.wrap.b32 	%r921, %r917, %r918, 30;
	shf.l.wrap.b32 	%r922, %r918, %r917, 30;
	mov.b64 	%rd1438, {%r922, %r921};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	shf.l.wrap.b32 	%r923, %r917, %r918, 25;
	shf.l.wrap.b32 	%r924, %r918, %r917, 25;
	mov.b64 	%rd1440, {%r924, %r923};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	and.b64  	%rd1442, %rd1410, %rd1373;
	or.b64  	%rd1443, %rd1410, %rd1373;
	and.b64  	%rd1444, %rd1443, %rd1336;
	or.b64  	%rd1445, %rd1444, %rd1442;
	add.s64 	%rd1446, %rd1445, %rd1441;
	add.s64 	%rd1447, %rd1446, %rd1435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd3221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd3221;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 19;
	shf.r.wrap.b32 	%r928, %r925, %r926, 19;
	mov.b64 	%rd1448, {%r928, %r927};
	shf.l.wrap.b32 	%r929, %r925, %r926, 3;
	shf.l.wrap.b32 	%r930, %r926, %r925, 3;
	mov.b64 	%rd1449, {%r930, %r929};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	shr.u64 	%rd1451, %rd3221, 6;
	xor.b64  	%rd1452, %rd1450, %rd1451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r931,%dummy}, %rd3231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd3231;
	}
	shf.r.wrap.b32 	%r933, %r932, %r931, 8;
	shf.r.wrap.b32 	%r934, %r931, %r932, 8;
	mov.b64 	%rd1453, {%r934, %r933};
	shf.r.wrap.b32 	%r935, %r932, %r931, 1;
	shf.r.wrap.b32 	%r936, %r931, %r932, 1;
	mov.b64 	%rd1454, {%r936, %r935};
	xor.b64  	%rd1455, %rd1454, %rd1453;
	shr.u64 	%rd1456, %rd3231, 7;
	xor.b64  	%rd1457, %rd1455, %rd1456;
	add.s64 	%rd1458, %rd1452, %rd3219;
	add.s64 	%rd1459, %rd1458, %rd3233;
	add.s64 	%rd3219, %rd1459, %rd1457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r938}, %rd1436;
	}
	shf.r.wrap.b32 	%r939, %r938, %r937, 14;
	shf.r.wrap.b32 	%r940, %r937, %r938, 14;
	mov.b64 	%rd1460, {%r940, %r939};
	shf.r.wrap.b32 	%r941, %r938, %r937, 18;
	shf.r.wrap.b32 	%r942, %r937, %r938, 18;
	mov.b64 	%rd1461, {%r942, %r941};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	shf.l.wrap.b32 	%r943, %r937, %r938, 23;
	shf.l.wrap.b32 	%r944, %r938, %r937, 23;
	mov.b64 	%rd1463, {%r944, %r943};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	xor.b64  	%rd1465, %rd1399, %rd1362;
	and.b64  	%rd1466, %rd1436, %rd1465;
	xor.b64  	%rd1467, %rd1466, %rd1362;
	ld.const.u64 	%rd1468, [%rd1163+64];
	add.s64 	%rd1469, %rd1468, %rd1325;
	add.s64 	%rd1470, %rd1469, %rd3219;
	add.s64 	%rd1471, %rd1470, %rd1467;
	add.s64 	%rd1472, %rd1471, %rd1464;
	add.s64 	%rd1473, %rd1472, %rd1336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r945,%dummy}, %rd1447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r946}, %rd1447;
	}
	shf.r.wrap.b32 	%r947, %r946, %r945, 28;
	shf.r.wrap.b32 	%r948, %r945, %r946, 28;
	mov.b64 	%rd1474, {%r948, %r947};
	shf.l.wrap.b32 	%r949, %r945, %r946, 30;
	shf.l.wrap.b32 	%r950, %r946, %r945, 30;
	mov.b64 	%rd1475, {%r950, %r949};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	shf.l.wrap.b32 	%r951, %r945, %r946, 25;
	shf.l.wrap.b32 	%r952, %r946, %r945, 25;
	mov.b64 	%rd1477, {%r952, %r951};
	xor.b64  	%rd1478, %rd1476, %rd1477;
	and.b64  	%rd1479, %rd1447, %rd1410;
	or.b64  	%rd1480, %rd1447, %rd1410;
	and.b64  	%rd1481, %rd1480, %rd1373;
	or.b64  	%rd1482, %rd1481, %rd1479;
	add.s64 	%rd1483, %rd1482, %rd1478;
	add.s64 	%rd1484, %rd1483, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r953,%dummy}, %rd3220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r954}, %rd3220;
	}
	shf.r.wrap.b32 	%r955, %r954, %r953, 19;
	shf.r.wrap.b32 	%r956, %r953, %r954, 19;
	mov.b64 	%rd1485, {%r956, %r955};
	shf.l.wrap.b32 	%r957, %r953, %r954, 3;
	shf.l.wrap.b32 	%r958, %r954, %r953, 3;
	mov.b64 	%rd1486, {%r958, %r957};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	shr.u64 	%rd1488, %rd3220, 6;
	xor.b64  	%rd1489, %rd1487, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd3228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd3228;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 8;
	shf.r.wrap.b32 	%r962, %r959, %r960, 8;
	mov.b64 	%rd1490, {%r962, %r961};
	shf.r.wrap.b32 	%r963, %r960, %r959, 1;
	shf.r.wrap.b32 	%r964, %r959, %r960, 1;
	mov.b64 	%rd1491, {%r964, %r963};
	xor.b64  	%rd1492, %rd1491, %rd1490;
	shr.u64 	%rd1493, %rd3228, 7;
	xor.b64  	%rd1494, %rd1492, %rd1493;
	add.s64 	%rd1495, %rd1489, %rd3231;
	add.s64 	%rd1496, %rd1495, %rd3229;
	add.s64 	%rd3231, %rd1496, %rd1494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1473;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 14;
	shf.r.wrap.b32 	%r968, %r965, %r966, 14;
	mov.b64 	%rd1497, {%r968, %r967};
	shf.r.wrap.b32 	%r969, %r966, %r965, 18;
	shf.r.wrap.b32 	%r970, %r965, %r966, 18;
	mov.b64 	%rd1498, {%r970, %r969};
	xor.b64  	%rd1499, %rd1497, %rd1498;
	shf.l.wrap.b32 	%r971, %r965, %r966, 23;
	shf.l.wrap.b32 	%r972, %r966, %r965, 23;
	mov.b64 	%rd1500, {%r972, %r971};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	xor.b64  	%rd1502, %rd1436, %rd1399;
	and.b64  	%rd1503, %rd1473, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1399;
	ld.const.u64 	%rd1505, [%rd1163+72];
	add.s64 	%rd1506, %rd1505, %rd1362;
	add.s64 	%rd1507, %rd1506, %rd3231;
	add.s64 	%rd1508, %rd1507, %rd1504;
	add.s64 	%rd1509, %rd1508, %rd1501;
	add.s64 	%rd1510, %rd1509, %rd1373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1484;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 28;
	shf.r.wrap.b32 	%r976, %r973, %r974, 28;
	mov.b64 	%rd1511, {%r976, %r975};
	shf.l.wrap.b32 	%r977, %r973, %r974, 30;
	shf.l.wrap.b32 	%r978, %r974, %r973, 30;
	mov.b64 	%rd1512, {%r978, %r977};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	shf.l.wrap.b32 	%r979, %r973, %r974, 25;
	shf.l.wrap.b32 	%r980, %r974, %r973, 25;
	mov.b64 	%rd1514, {%r980, %r979};
	xor.b64  	%rd1515, %rd1513, %rd1514;
	and.b64  	%rd1516, %rd1484, %rd1447;
	or.b64  	%rd1517, %rd1484, %rd1447;
	and.b64  	%rd1518, %rd1517, %rd1410;
	or.b64  	%rd1519, %rd1518, %rd1516;
	add.s64 	%rd1520, %rd1519, %rd1515;
	add.s64 	%rd1521, %rd1520, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd3219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd3219;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 19;
	shf.r.wrap.b32 	%r984, %r981, %r982, 19;
	mov.b64 	%rd1522, {%r984, %r983};
	shf.l.wrap.b32 	%r985, %r981, %r982, 3;
	shf.l.wrap.b32 	%r986, %r982, %r981, 3;
	mov.b64 	%rd1523, {%r986, %r985};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	shr.u64 	%rd1525, %rd3219, 6;
	xor.b64  	%rd1526, %rd1524, %rd1525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r987,%dummy}, %rd3226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r988}, %rd3226;
	}
	shf.r.wrap.b32 	%r989, %r988, %r987, 8;
	shf.r.wrap.b32 	%r990, %r987, %r988, 8;
	mov.b64 	%rd1527, {%r990, %r989};
	shf.r.wrap.b32 	%r991, %r988, %r987, 1;
	shf.r.wrap.b32 	%r992, %r987, %r988, 1;
	mov.b64 	%rd1528, {%r992, %r991};
	xor.b64  	%rd1529, %rd1528, %rd1527;
	shr.u64 	%rd1530, %rd3226, 7;
	xor.b64  	%rd1531, %rd1529, %rd1530;
	add.s64 	%rd1532, %rd1526, %rd3228;
	add.s64 	%rd1533, %rd1532, %rd3227;
	add.s64 	%rd3228, %rd1533, %rd1531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd1510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r994}, %rd1510;
	}
	shf.r.wrap.b32 	%r995, %r994, %r993, 14;
	shf.r.wrap.b32 	%r996, %r993, %r994, 14;
	mov.b64 	%rd1534, {%r996, %r995};
	shf.r.wrap.b32 	%r997, %r994, %r993, 18;
	shf.r.wrap.b32 	%r998, %r993, %r994, 18;
	mov.b64 	%rd1535, {%r998, %r997};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	shf.l.wrap.b32 	%r999, %r993, %r994, 23;
	shf.l.wrap.b32 	%r1000, %r994, %r993, 23;
	mov.b64 	%rd1537, {%r1000, %r999};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	xor.b64  	%rd1539, %rd1473, %rd1436;
	and.b64  	%rd1540, %rd1510, %rd1539;
	xor.b64  	%rd1541, %rd1540, %rd1436;
	ld.const.u64 	%rd1542, [%rd1163+80];
	add.s64 	%rd1543, %rd1542, %rd1399;
	add.s64 	%rd1544, %rd1543, %rd3228;
	add.s64 	%rd1545, %rd1544, %rd1541;
	add.s64 	%rd1546, %rd1545, %rd1538;
	add.s64 	%rd1547, %rd1546, %rd1410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1001,%dummy}, %rd1521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1002}, %rd1521;
	}
	shf.r.wrap.b32 	%r1003, %r1002, %r1001, 28;
	shf.r.wrap.b32 	%r1004, %r1001, %r1002, 28;
	mov.b64 	%rd1548, {%r1004, %r1003};
	shf.l.wrap.b32 	%r1005, %r1001, %r1002, 30;
	shf.l.wrap.b32 	%r1006, %r1002, %r1001, 30;
	mov.b64 	%rd1549, {%r1006, %r1005};
	xor.b64  	%rd1550, %rd1548, %rd1549;
	shf.l.wrap.b32 	%r1007, %r1001, %r1002, 25;
	shf.l.wrap.b32 	%r1008, %r1002, %r1001, 25;
	mov.b64 	%rd1551, {%r1008, %r1007};
	xor.b64  	%rd1552, %rd1550, %rd1551;
	and.b64  	%rd1553, %rd1521, %rd1484;
	or.b64  	%rd1554, %rd1521, %rd1484;
	and.b64  	%rd1555, %rd1554, %rd1447;
	or.b64  	%rd1556, %rd1555, %rd1553;
	add.s64 	%rd1557, %rd1556, %rd1552;
	add.s64 	%rd1558, %rd1557, %rd1546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd3231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd3231;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 19;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 19;
	mov.b64 	%rd1559, {%r1012, %r1011};
	shf.l.wrap.b32 	%r1013, %r1009, %r1010, 3;
	shf.l.wrap.b32 	%r1014, %r1010, %r1009, 3;
	mov.b64 	%rd1560, {%r1014, %r1013};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	shr.u64 	%rd1562, %rd3231, 6;
	xor.b64  	%rd1563, %rd1561, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd3224;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 8;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 8;
	mov.b64 	%rd1564, {%r1018, %r1017};
	shf.r.wrap.b32 	%r1019, %r1016, %r1015, 1;
	shf.r.wrap.b32 	%r1020, %r1015, %r1016, 1;
	mov.b64 	%rd1565, {%r1020, %r1019};
	xor.b64  	%rd1566, %rd1565, %rd1564;
	shr.u64 	%rd1567, %rd3224, 7;
	xor.b64  	%rd1568, %rd1566, %rd1567;
	add.s64 	%rd1569, %rd1563, %rd3226;
	add.s64 	%rd1570, %rd1569, %rd3225;
	add.s64 	%rd3226, %rd1570, %rd1568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd1547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd1547;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 14;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 14;
	mov.b64 	%rd1571, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r1022, %r1021, 18;
	shf.r.wrap.b32 	%r1026, %r1021, %r1022, 18;
	mov.b64 	%rd1572, {%r1026, %r1025};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 23;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 23;
	mov.b64 	%rd1574, {%r1028, %r1027};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	xor.b64  	%rd1576, %rd1510, %rd1473;
	and.b64  	%rd1577, %rd1547, %rd1576;
	xor.b64  	%rd1578, %rd1577, %rd1473;
	ld.const.u64 	%rd1579, [%rd1163+88];
	add.s64 	%rd1580, %rd1579, %rd1436;
	add.s64 	%rd1581, %rd1580, %rd3226;
	add.s64 	%rd1582, %rd1581, %rd1578;
	add.s64 	%rd1583, %rd1582, %rd1575;
	add.s64 	%rd1584, %rd1583, %rd1447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1558;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 28;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 28;
	mov.b64 	%rd1585, {%r1032, %r1031};
	shf.l.wrap.b32 	%r1033, %r1029, %r1030, 30;
	shf.l.wrap.b32 	%r1034, %r1030, %r1029, 30;
	mov.b64 	%rd1586, {%r1034, %r1033};
	xor.b64  	%rd1587, %rd1585, %rd1586;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 25;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 25;
	mov.b64 	%rd1588, {%r1036, %r1035};
	xor.b64  	%rd1589, %rd1587, %rd1588;
	and.b64  	%rd1590, %rd1558, %rd1521;
	or.b64  	%rd1591, %rd1558, %rd1521;
	and.b64  	%rd1592, %rd1591, %rd1484;
	or.b64  	%rd1593, %rd1592, %rd1590;
	add.s64 	%rd1594, %rd1593, %rd1589;
	add.s64 	%rd1595, %rd1594, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd3228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd3228;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 19;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 19;
	mov.b64 	%rd1596, {%r1040, %r1039};
	shf.l.wrap.b32 	%r1041, %r1037, %r1038, 3;
	shf.l.wrap.b32 	%r1042, %r1038, %r1037, 3;
	mov.b64 	%rd1597, {%r1042, %r1041};
	xor.b64  	%rd1598, %rd1596, %rd1597;
	shr.u64 	%rd1599, %rd3228, 6;
	xor.b64  	%rd1600, %rd1598, %rd1599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd3222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd3222;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 8;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 8;
	mov.b64 	%rd1601, {%r1046, %r1045};
	shf.r.wrap.b32 	%r1047, %r1044, %r1043, 1;
	shf.r.wrap.b32 	%r1048, %r1043, %r1044, 1;
	mov.b64 	%rd1602, {%r1048, %r1047};
	xor.b64  	%rd1603, %rd1602, %rd1601;
	shr.u64 	%rd1604, %rd3222, 7;
	xor.b64  	%rd1605, %rd1603, %rd1604;
	add.s64 	%rd1606, %rd1600, %rd3224;
	add.s64 	%rd1607, %rd1606, %rd3223;
	add.s64 	%rd3224, %rd1607, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1049,%dummy}, %rd1584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1050}, %rd1584;
	}
	shf.r.wrap.b32 	%r1051, %r1050, %r1049, 14;
	shf.r.wrap.b32 	%r1052, %r1049, %r1050, 14;
	mov.b64 	%rd1608, {%r1052, %r1051};
	shf.r.wrap.b32 	%r1053, %r1050, %r1049, 18;
	shf.r.wrap.b32 	%r1054, %r1049, %r1050, 18;
	mov.b64 	%rd1609, {%r1054, %r1053};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	shf.l.wrap.b32 	%r1055, %r1049, %r1050, 23;
	shf.l.wrap.b32 	%r1056, %r1050, %r1049, 23;
	mov.b64 	%rd1611, {%r1056, %r1055};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	xor.b64  	%rd1613, %rd1547, %rd1510;
	and.b64  	%rd1614, %rd1584, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1510;
	ld.const.u64 	%rd1616, [%rd1163+96];
	add.s64 	%rd1617, %rd1616, %rd1473;
	add.s64 	%rd1618, %rd1617, %rd3224;
	add.s64 	%rd1619, %rd1618, %rd1615;
	add.s64 	%rd1620, %rd1619, %rd1612;
	add.s64 	%rd3235, %rd1620, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd1595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1058}, %rd1595;
	}
	shf.r.wrap.b32 	%r1059, %r1058, %r1057, 28;
	shf.r.wrap.b32 	%r1060, %r1057, %r1058, 28;
	mov.b64 	%rd1621, {%r1060, %r1059};
	shf.l.wrap.b32 	%r1061, %r1057, %r1058, 30;
	shf.l.wrap.b32 	%r1062, %r1058, %r1057, 30;
	mov.b64 	%rd1622, {%r1062, %r1061};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	shf.l.wrap.b32 	%r1063, %r1057, %r1058, 25;
	shf.l.wrap.b32 	%r1064, %r1058, %r1057, 25;
	mov.b64 	%rd1624, {%r1064, %r1063};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	and.b64  	%rd1626, %rd1595, %rd1558;
	or.b64  	%rd1627, %rd1595, %rd1558;
	and.b64  	%rd1628, %rd1627, %rd1521;
	or.b64  	%rd1629, %rd1628, %rd1626;
	add.s64 	%rd1630, %rd1629, %rd1625;
	add.s64 	%rd3239, %rd1630, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1065,%dummy}, %rd3226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1066}, %rd3226;
	}
	shf.r.wrap.b32 	%r1067, %r1066, %r1065, 19;
	shf.r.wrap.b32 	%r1068, %r1065, %r1066, 19;
	mov.b64 	%rd1631, {%r1068, %r1067};
	shf.l.wrap.b32 	%r1069, %r1065, %r1066, 3;
	shf.l.wrap.b32 	%r1070, %r1066, %r1065, 3;
	mov.b64 	%rd1632, {%r1070, %r1069};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	shr.u64 	%rd1634, %rd3226, 6;
	xor.b64  	%rd1635, %rd1633, %rd1634;
	shf.r.wrap.b32 	%r1071, %r701, %r702, 8;
	shf.r.wrap.b32 	%r1072, %r702, %r701, 8;
	mov.b64 	%rd1636, {%r1072, %r1071};
	shf.r.wrap.b32 	%r1073, %r701, %r702, 1;
	shf.r.wrap.b32 	%r1074, %r702, %r701, 1;
	mov.b64 	%rd1637, {%r1074, %r1073};
	xor.b64  	%rd1638, %rd1637, %rd1636;
	shr.u64 	%rd1639, %rd3234, 7;
	xor.b64  	%rd1640, %rd1638, %rd1639;
	add.s64 	%rd1641, %rd1635, %rd3222;
	add.s64 	%rd1642, %rd1641, %rd3221;
	add.s64 	%rd3222, %rd1642, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1075,%dummy}, %rd3235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1076}, %rd3235;
	}
	shf.r.wrap.b32 	%r1077, %r1076, %r1075, 14;
	shf.r.wrap.b32 	%r1078, %r1075, %r1076, 14;
	mov.b64 	%rd1643, {%r1078, %r1077};
	shf.r.wrap.b32 	%r1079, %r1076, %r1075, 18;
	shf.r.wrap.b32 	%r1080, %r1075, %r1076, 18;
	mov.b64 	%rd1644, {%r1080, %r1079};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	shf.l.wrap.b32 	%r1081, %r1075, %r1076, 23;
	shf.l.wrap.b32 	%r1082, %r1076, %r1075, 23;
	mov.b64 	%rd1646, {%r1082, %r1081};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	xor.b64  	%rd1648, %rd1584, %rd1547;
	and.b64  	%rd1649, %rd3235, %rd1648;
	xor.b64  	%rd1650, %rd1649, %rd1547;
	ld.const.u64 	%rd1651, [%rd1163+104];
	add.s64 	%rd1652, %rd1651, %rd1510;
	add.s64 	%rd1653, %rd1652, %rd3222;
	add.s64 	%rd1654, %rd1653, %rd1650;
	add.s64 	%rd1655, %rd1654, %rd1647;
	add.s64 	%rd3242, %rd1655, %rd1521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd3239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd3239;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 28;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 28;
	mov.b64 	%rd1656, {%r1086, %r1085};
	shf.l.wrap.b32 	%r1087, %r1083, %r1084, 30;
	shf.l.wrap.b32 	%r1088, %r1084, %r1083, 30;
	mov.b64 	%rd1657, {%r1088, %r1087};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	shf.l.wrap.b32 	%r1089, %r1083, %r1084, 25;
	shf.l.wrap.b32 	%r1090, %r1084, %r1083, 25;
	mov.b64 	%rd1659, {%r1090, %r1089};
	xor.b64  	%rd1660, %rd1658, %rd1659;
	and.b64  	%rd1661, %rd3239, %rd1595;
	or.b64  	%rd1662, %rd3239, %rd1595;
	and.b64  	%rd1663, %rd1662, %rd1558;
	or.b64  	%rd1664, %rd1663, %rd1661;
	add.s64 	%rd1665, %rd1664, %rd1660;
	add.s64 	%rd3238, %rd1665, %rd1655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1091,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1092}, %rd3224;
	}
	shf.r.wrap.b32 	%r1093, %r1092, %r1091, 19;
	shf.r.wrap.b32 	%r1094, %r1091, %r1092, 19;
	mov.b64 	%rd1666, {%r1094, %r1093};
	shf.l.wrap.b32 	%r1095, %r1091, %r1092, 3;
	shf.l.wrap.b32 	%r1096, %r1092, %r1091, 3;
	mov.b64 	%rd1667, {%r1096, %r1095};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	shr.u64 	%rd1669, %rd3224, 6;
	xor.b64  	%rd1670, %rd1668, %rd1669;
	shf.r.wrap.b32 	%r1097, %r729, %r730, 8;
	shf.r.wrap.b32 	%r1098, %r730, %r729, 8;
	mov.b64 	%rd1671, {%r1098, %r1097};
	shf.r.wrap.b32 	%r1099, %r729, %r730, 1;
	shf.r.wrap.b32 	%r1100, %r730, %r729, 1;
	mov.b64 	%rd1672, {%r1100, %r1099};
	xor.b64  	%rd1673, %rd1672, %rd1671;
	shr.u64 	%rd1674, %rd3230, 7;
	xor.b64  	%rd1675, %rd1673, %rd1674;
	add.s64 	%rd1676, %rd1670, %rd3234;
	add.s64 	%rd1677, %rd1676, %rd3220;
	add.s64 	%rd3234, %rd1677, %rd1675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd3242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd3242;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 14;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 14;
	mov.b64 	%rd1678, {%r1104, %r1103};
	shf.r.wrap.b32 	%r1105, %r1102, %r1101, 18;
	shf.r.wrap.b32 	%r1106, %r1101, %r1102, 18;
	mov.b64 	%rd1679, {%r1106, %r1105};
	xor.b64  	%rd1680, %rd1678, %rd1679;
	shf.l.wrap.b32 	%r1107, %r1101, %r1102, 23;
	shf.l.wrap.b32 	%r1108, %r1102, %r1101, 23;
	mov.b64 	%rd1681, {%r1108, %r1107};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	xor.b64  	%rd1683, %rd3235, %rd1584;
	and.b64  	%rd1684, %rd3242, %rd1683;
	xor.b64  	%rd1685, %rd1684, %rd1584;
	ld.const.u64 	%rd1686, [%rd1163+112];
	add.s64 	%rd1687, %rd1686, %rd1547;
	add.s64 	%rd1688, %rd1687, %rd3234;
	add.s64 	%rd1689, %rd1688, %rd1685;
	add.s64 	%rd1690, %rd1689, %rd1682;
	add.s64 	%rd3241, %rd1690, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd3238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd3238;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 28;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 28;
	mov.b64 	%rd1691, {%r1112, %r1111};
	shf.l.wrap.b32 	%r1113, %r1109, %r1110, 30;
	shf.l.wrap.b32 	%r1114, %r1110, %r1109, 30;
	mov.b64 	%rd1692, {%r1114, %r1113};
	xor.b64  	%rd1693, %rd1691, %rd1692;
	shf.l.wrap.b32 	%r1115, %r1109, %r1110, 25;
	shf.l.wrap.b32 	%r1116, %r1110, %r1109, 25;
	mov.b64 	%rd1694, {%r1116, %r1115};
	xor.b64  	%rd1695, %rd1693, %rd1694;
	and.b64  	%rd1696, %rd3238, %rd3239;
	or.b64  	%rd1697, %rd3238, %rd3239;
	and.b64  	%rd1698, %rd1697, %rd1595;
	or.b64  	%rd1699, %rd1698, %rd1696;
	add.s64 	%rd1700, %rd1699, %rd1695;
	add.s64 	%rd3237, %rd1700, %rd1690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd3222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd3222;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 19;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 19;
	mov.b64 	%rd1701, {%r1120, %r1119};
	shf.l.wrap.b32 	%r1121, %r1117, %r1118, 3;
	shf.l.wrap.b32 	%r1122, %r1118, %r1117, 3;
	mov.b64 	%rd1702, {%r1122, %r1121};
	xor.b64  	%rd1703, %rd1701, %rd1702;
	shr.u64 	%rd1704, %rd3222, 6;
	xor.b64  	%rd1705, %rd1703, %rd1704;
	shf.r.wrap.b32 	%r1123, %r758, %r757, 1;
	shf.r.wrap.b32 	%r1124, %r757, %r758, 1;
	mov.b64 	%rd1706, {%r1124, %r1123};
	shf.r.wrap.b32 	%r1125, %r758, %r757, 8;
	shf.r.wrap.b32 	%r1126, %r757, %r758, 8;
	mov.b64 	%rd1707, {%r1126, %r1125};
	xor.b64  	%rd1708, %rd1706, %rd1707;
	shr.u64 	%rd1709, %rd3232, 7;
	xor.b64  	%rd1710, %rd1708, %rd1709;
	add.s64 	%rd1711, %rd1705, %rd3230;
	add.s64 	%rd1712, %rd1711, %rd3219;
	add.s64 	%rd3230, %rd1712, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1127,%dummy}, %rd3241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1128}, %rd3241;
	}
	shf.r.wrap.b32 	%r1129, %r1128, %r1127, 14;
	shf.r.wrap.b32 	%r1130, %r1127, %r1128, 14;
	mov.b64 	%rd1713, {%r1130, %r1129};
	shf.r.wrap.b32 	%r1131, %r1128, %r1127, 18;
	shf.r.wrap.b32 	%r1132, %r1127, %r1128, 18;
	mov.b64 	%rd1714, {%r1132, %r1131};
	xor.b64  	%rd1715, %rd1713, %rd1714;
	shf.l.wrap.b32 	%r1133, %r1127, %r1128, 23;
	shf.l.wrap.b32 	%r1134, %r1128, %r1127, 23;
	mov.b64 	%rd1716, {%r1134, %r1133};
	xor.b64  	%rd1717, %rd1715, %rd1716;
	xor.b64  	%rd1718, %rd3242, %rd3235;
	and.b64  	%rd1719, %rd3241, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd3235;
	ld.const.u64 	%rd1721, [%rd1163+120];
	add.s64 	%rd1722, %rd1721, %rd1584;
	add.s64 	%rd1723, %rd1722, %rd3230;
	add.s64 	%rd1724, %rd1723, %rd1720;
	add.s64 	%rd1725, %rd1724, %rd1717;
	add.s64 	%rd3240, %rd1725, %rd1595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1135,%dummy}, %rd3237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1136}, %rd3237;
	}
	shf.r.wrap.b32 	%r1137, %r1136, %r1135, 28;
	shf.r.wrap.b32 	%r1138, %r1135, %r1136, 28;
	mov.b64 	%rd1726, {%r1138, %r1137};
	shf.l.wrap.b32 	%r1139, %r1135, %r1136, 30;
	shf.l.wrap.b32 	%r1140, %r1136, %r1135, 30;
	mov.b64 	%rd1727, {%r1140, %r1139};
	xor.b64  	%rd1728, %rd1726, %rd1727;
	shf.l.wrap.b32 	%r1141, %r1135, %r1136, 25;
	shf.l.wrap.b32 	%r1142, %r1136, %r1135, 25;
	mov.b64 	%rd1729, {%r1142, %r1141};
	xor.b64  	%rd1730, %rd1728, %rd1729;
	and.b64  	%rd1731, %rd3237, %rd3238;
	or.b64  	%rd1732, %rd3237, %rd3238;
	and.b64  	%rd1733, %rd1732, %rd3239;
	or.b64  	%rd1734, %rd1733, %rd1731;
	add.s64 	%rd1735, %rd1734, %rd1730;
	add.s64 	%rd3236, %rd1735, %rd1725;
	add.s32 	%r2222, %r2222, 16;
	setp.lt.u32 	%p2, %r2222, 65;
	@%p2 bra 	$L__BB3_3;

	add.s64 	%rd1736, %rd2, %rd3236;
	add.s64 	%rd1737, %rd37, %rd1736;
	xor.b64  	%rd1738, %rd27, %rd23;
	and.b64  	%rd1739, %rd1738, %rd19;
	xor.b64  	%rd1740, %rd1739, %rd27;
	add.s64 	%rd1741, %rd1737, %rd1740;
	add.s64 	%rd1742, %rd1741, %rd15;
	add.s64 	%rd1743, %rd38, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1144,%dummy}, %rd1742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd1742;
	}
	shf.r.wrap.b32 	%r1146, %r1145, %r1144, 14;
	shf.r.wrap.b32 	%r1147, %r1144, %r1145, 14;
	mov.b64 	%rd1744, {%r1147, %r1146};
	shf.r.wrap.b32 	%r1148, %r1145, %r1144, 18;
	shf.r.wrap.b32 	%r1149, %r1144, %r1145, 18;
	mov.b64 	%rd1745, {%r1149, %r1148};
	xor.b64  	%rd1746, %rd1744, %rd1745;
	shf.l.wrap.b32 	%r1150, %r1144, %r1145, 23;
	shf.l.wrap.b32 	%r1151, %r1145, %r1144, 23;
	mov.b64 	%rd1747, {%r1151, %r1150};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	xor.b64  	%rd1749, %rd23, %rd19;
	and.b64  	%rd1750, %rd1742, %rd1749;
	xor.b64  	%rd1751, %rd1750, %rd23;
	add.s64 	%rd1752, %rd6, %rd3237;
	add.s64 	%rd1753, %rd27, %rd1752;
	add.s64 	%rd1754, %rd1753, %rd1751;
	add.s64 	%rd1755, %rd1754, %rd1748;
	add.s64 	%rd1756, %rd1755, 8158064640168781261;
	add.s64 	%rd1757, %rd1756, %rd11;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1152,%dummy}, %rd1743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd1743;
	}
	shf.r.wrap.b32 	%r1154, %r1153, %r1152, 28;
	shf.r.wrap.b32 	%r1155, %r1152, %r1153, 28;
	mov.b64 	%rd1758, {%r1155, %r1154};
	shf.l.wrap.b32 	%r1156, %r1152, %r1153, 30;
	shf.l.wrap.b32 	%r1157, %r1153, %r1152, 30;
	mov.b64 	%rd1759, {%r1157, %r1156};
	xor.b64  	%rd1760, %rd1758, %rd1759;
	shf.l.wrap.b32 	%r1158, %r1152, %r1153, 25;
	shf.l.wrap.b32 	%r1159, %r1153, %r1152, 25;
	mov.b64 	%rd1761, {%r1159, %r1158};
	xor.b64  	%rd1762, %rd1760, %rd1761;
	and.b64  	%rd1763, %rd1743, %rd3;
	or.b64  	%rd1764, %rd1743, %rd3;
	and.b64  	%rd1765, %rd1764, %rd7;
	or.b64  	%rd1766, %rd1765, %rd1763;
	add.s64 	%rd1767, %rd1766, %rd1762;
	add.s64 	%rd1768, %rd1767, %rd1756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd1757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd1757;
	}
	shf.r.wrap.b32 	%r1162, %r1161, %r1160, 14;
	shf.r.wrap.b32 	%r1163, %r1160, %r1161, 14;
	mov.b64 	%rd1769, {%r1163, %r1162};
	shf.r.wrap.b32 	%r1164, %r1161, %r1160, 18;
	shf.r.wrap.b32 	%r1165, %r1160, %r1161, 18;
	mov.b64 	%rd1770, {%r1165, %r1164};
	xor.b64  	%rd1771, %rd1769, %rd1770;
	shf.l.wrap.b32 	%r1166, %r1160, %r1161, 23;
	shf.l.wrap.b32 	%r1167, %r1161, %r1160, 23;
	mov.b64 	%rd1772, {%r1167, %r1166};
	xor.b64  	%rd1773, %rd1771, %rd1772;
	xor.b64  	%rd1774, %rd1742, %rd19;
	and.b64  	%rd1775, %rd1757, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd19;
	add.s64 	%rd1777, %rd10, %rd3238;
	add.s64 	%rd1778, %rd23, %rd1777;
	add.s64 	%rd1779, %rd1778, %rd1776;
	add.s64 	%rd1780, %rd1779, %rd1773;
	add.s64 	%rd1781, %rd1780, -5349999486874862801;
	add.s64 	%rd1782, %rd1781, %rd7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd1768;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 28;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 28;
	mov.b64 	%rd1783, {%r1171, %r1170};
	shf.l.wrap.b32 	%r1172, %r1168, %r1169, 30;
	shf.l.wrap.b32 	%r1173, %r1169, %r1168, 30;
	mov.b64 	%rd1784, {%r1173, %r1172};
	xor.b64  	%rd1785, %rd1783, %rd1784;
	shf.l.wrap.b32 	%r1174, %r1168, %r1169, 25;
	shf.l.wrap.b32 	%r1175, %r1169, %r1168, 25;
	mov.b64 	%rd1786, {%r1175, %r1174};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	and.b64  	%rd1788, %rd1768, %rd1743;
	or.b64  	%rd1789, %rd1768, %rd1743;
	and.b64  	%rd1790, %rd1789, %rd3;
	or.b64  	%rd1791, %rd1790, %rd1788;
	add.s64 	%rd1792, %rd1791, %rd1787;
	add.s64 	%rd1793, %rd1792, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd1782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1782;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 14;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 14;
	mov.b64 	%rd1794, {%r1179, %r1178};
	shf.r.wrap.b32 	%r1180, %r1177, %r1176, 18;
	shf.r.wrap.b32 	%r1181, %r1176, %r1177, 18;
	mov.b64 	%rd1795, {%r1181, %r1180};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	shf.l.wrap.b32 	%r1182, %r1176, %r1177, 23;
	shf.l.wrap.b32 	%r1183, %r1177, %r1176, 23;
	mov.b64 	%rd1797, {%r1183, %r1182};
	xor.b64  	%rd1798, %rd1796, %rd1797;
	xor.b64  	%rd1799, %rd1757, %rd1742;
	and.b64  	%rd1800, %rd1782, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1742;
	add.s64 	%rd1802, %rd14, %rd3239;
	add.s64 	%rd1803, %rd19, %rd1802;
	add.s64 	%rd1804, %rd1803, %rd1801;
	add.s64 	%rd1805, %rd1804, %rd1798;
	add.s64 	%rd1806, %rd1805, -1606136188198331460;
	add.s64 	%rd1807, %rd1806, %rd3;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1184,%dummy}, %rd1793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1185}, %rd1793;
	}
	shf.r.wrap.b32 	%r1186, %r1185, %r1184, 28;
	shf.r.wrap.b32 	%r1187, %r1184, %r1185, 28;
	mov.b64 	%rd1808, {%r1187, %r1186};
	shf.l.wrap.b32 	%r1188, %r1184, %r1185, 30;
	shf.l.wrap.b32 	%r1189, %r1185, %r1184, 30;
	mov.b64 	%rd1809, {%r1189, %r1188};
	xor.b64  	%rd1810, %rd1808, %rd1809;
	shf.l.wrap.b32 	%r1190, %r1184, %r1185, 25;
	shf.l.wrap.b32 	%r1191, %r1185, %r1184, 25;
	mov.b64 	%rd1811, {%r1191, %r1190};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	and.b64  	%rd1813, %rd1793, %rd1768;
	or.b64  	%rd1814, %rd1793, %rd1768;
	and.b64  	%rd1815, %rd1814, %rd1743;
	or.b64  	%rd1816, %rd1815, %rd1813;
	add.s64 	%rd1817, %rd1816, %rd1812;
	add.s64 	%rd1818, %rd1817, %rd1806;
	add.s64 	%rd1819, %rd18, %rd3240;
	add.s64 	%rd1820, %rd1819, %rd1742;
	xor.b64  	%rd1821, %rd1782, %rd1757;
	and.b64  	%rd1822, %rd1807, %rd1821;
	xor.b64  	%rd1823, %rd1822, %rd1757;
	add.s64 	%rd1824, %rd1820, %rd1823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1192,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd1807;
	}
	shf.r.wrap.b32 	%r1194, %r1193, %r1192, 14;
	shf.r.wrap.b32 	%r1195, %r1192, %r1193, 14;
	mov.b64 	%rd1825, {%r1195, %r1194};
	shf.r.wrap.b32 	%r1196, %r1193, %r1192, 18;
	shf.r.wrap.b32 	%r1197, %r1192, %r1193, 18;
	mov.b64 	%rd1826, {%r1197, %r1196};
	xor.b64  	%rd1827, %rd1825, %rd1826;
	shf.l.wrap.b32 	%r1198, %r1192, %r1193, 23;
	shf.l.wrap.b32 	%r1199, %r1193, %r1192, 23;
	mov.b64 	%rd1828, {%r1199, %r1198};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	add.s64 	%rd1830, %rd1824, %rd1829;
	add.s64 	%rd1831, %rd1830, 4131703408338449720;
	add.s64 	%rd1832, %rd1831, %rd1743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1200,%dummy}, %rd1818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1201}, %rd1818;
	}
	shf.r.wrap.b32 	%r1202, %r1201, %r1200, 28;
	shf.r.wrap.b32 	%r1203, %r1200, %r1201, 28;
	mov.b64 	%rd1833, {%r1203, %r1202};
	shf.l.wrap.b32 	%r1204, %r1200, %r1201, 30;
	shf.l.wrap.b32 	%r1205, %r1201, %r1200, 30;
	mov.b64 	%rd1834, {%r1205, %r1204};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	shf.l.wrap.b32 	%r1206, %r1200, %r1201, 25;
	shf.l.wrap.b32 	%r1207, %r1201, %r1200, 25;
	mov.b64 	%rd1836, {%r1207, %r1206};
	xor.b64  	%rd1837, %rd1835, %rd1836;
	and.b64  	%rd1838, %rd1818, %rd1793;
	or.b64  	%rd1839, %rd1818, %rd1793;
	and.b64  	%rd1840, %rd1839, %rd1768;
	or.b64  	%rd1841, %rd1840, %rd1838;
	add.s64 	%rd1842, %rd1841, %rd1837;
	add.s64 	%rd1843, %rd1842, %rd1831;
	add.s64 	%rd1844, %rd22, %rd3241;
	add.s64 	%rd1845, %rd1844, %rd1757;
	xor.b64  	%rd1846, %rd1807, %rd1782;
	and.b64  	%rd1847, %rd1832, %rd1846;
	xor.b64  	%rd1848, %rd1847, %rd1782;
	add.s64 	%rd1849, %rd1845, %rd1848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1208,%dummy}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd1832;
	}
	shf.r.wrap.b32 	%r1210, %r1209, %r1208, 14;
	shf.r.wrap.b32 	%r1211, %r1208, %r1209, 14;
	mov.b64 	%rd1850, {%r1211, %r1210};
	shf.r.wrap.b32 	%r1212, %r1209, %r1208, 18;
	shf.r.wrap.b32 	%r1213, %r1208, %r1209, 18;
	mov.b64 	%rd1851, {%r1213, %r1212};
	xor.b64  	%rd1852, %rd1850, %rd1851;
	shf.l.wrap.b32 	%r1214, %r1208, %r1209, 23;
	shf.l.wrap.b32 	%r1215, %r1209, %r1208, 23;
	mov.b64 	%rd1853, {%r1215, %r1214};
	xor.b64  	%rd1854, %rd1852, %rd1853;
	add.s64 	%rd1855, %rd1849, %rd1854;
	add.s64 	%rd1856, %rd1855, 6480981068601479193;
	add.s64 	%rd1857, %rd1856, %rd1768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1216,%dummy}, %rd1843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1217}, %rd1843;
	}
	shf.r.wrap.b32 	%r1218, %r1217, %r1216, 28;
	shf.r.wrap.b32 	%r1219, %r1216, %r1217, 28;
	mov.b64 	%rd1858, {%r1219, %r1218};
	shf.l.wrap.b32 	%r1220, %r1216, %r1217, 30;
	shf.l.wrap.b32 	%r1221, %r1217, %r1216, 30;
	mov.b64 	%rd1859, {%r1221, %r1220};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	shf.l.wrap.b32 	%r1222, %r1216, %r1217, 25;
	shf.l.wrap.b32 	%r1223, %r1217, %r1216, 25;
	mov.b64 	%rd1861, {%r1223, %r1222};
	xor.b64  	%rd1862, %rd1860, %rd1861;
	and.b64  	%rd1863, %rd1843, %rd1818;
	or.b64  	%rd1864, %rd1843, %rd1818;
	and.b64  	%rd1865, %rd1864, %rd1793;
	or.b64  	%rd1866, %rd1865, %rd1863;
	add.s64 	%rd1867, %rd1866, %rd1862;
	add.s64 	%rd1868, %rd1867, %rd1856;
	add.s64 	%rd1869, %rd26, %rd3242;
	add.s64 	%rd1870, %rd1869, %rd1782;
	xor.b64  	%rd1871, %rd1832, %rd1807;
	and.b64  	%rd1872, %rd1857, %rd1871;
	xor.b64  	%rd1873, %rd1872, %rd1807;
	add.s64 	%rd1874, %rd1870, %rd1873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1224,%dummy}, %rd1857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1225}, %rd1857;
	}
	shf.r.wrap.b32 	%r1226, %r1225, %r1224, 14;
	shf.r.wrap.b32 	%r1227, %r1224, %r1225, 14;
	mov.b64 	%rd1875, {%r1227, %r1226};
	shf.r.wrap.b32 	%r1228, %r1225, %r1224, 18;
	shf.r.wrap.b32 	%r1229, %r1224, %r1225, 18;
	mov.b64 	%rd1876, {%r1229, %r1228};
	xor.b64  	%rd1877, %rd1875, %rd1876;
	shf.l.wrap.b32 	%r1230, %r1224, %r1225, 23;
	shf.l.wrap.b32 	%r1231, %r1225, %r1224, 23;
	mov.b64 	%rd1878, {%r1231, %r1230};
	xor.b64  	%rd1879, %rd1877, %rd1878;
	add.s64 	%rd1880, %rd1874, %rd1879;
	add.s64 	%rd1881, %rd1880, -7908458776815382629;
	add.s64 	%rd1882, %rd1881, %rd1793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1868;
	}
	shf.r.wrap.b32 	%r1234, %r1233, %r1232, 28;
	shf.r.wrap.b32 	%r1235, %r1232, %r1233, 28;
	mov.b64 	%rd1883, {%r1235, %r1234};
	shf.l.wrap.b32 	%r1236, %r1232, %r1233, 30;
	shf.l.wrap.b32 	%r1237, %r1233, %r1232, 30;
	mov.b64 	%rd1884, {%r1237, %r1236};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	shf.l.wrap.b32 	%r1238, %r1232, %r1233, 25;
	shf.l.wrap.b32 	%r1239, %r1233, %r1232, 25;
	mov.b64 	%rd1886, {%r1239, %r1238};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	and.b64  	%rd1888, %rd1868, %rd1843;
	or.b64  	%rd1889, %rd1868, %rd1843;
	and.b64  	%rd1890, %rd1889, %rd1818;
	or.b64  	%rd1891, %rd1890, %rd1888;
	add.s64 	%rd1892, %rd1891, %rd1887;
	add.s64 	%rd1893, %rd1892, %rd1881;
	add.s64 	%rd1894, %rd30, %rd3235;
	add.s64 	%rd1895, %rd1894, %rd1807;
	xor.b64  	%rd1896, %rd1857, %rd1832;
	and.b64  	%rd1897, %rd1882, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1832;
	add.s64 	%rd1899, %rd1895, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1882;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 14;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 14;
	mov.b64 	%rd1900, {%r1243, %r1242};
	shf.r.wrap.b32 	%r1244, %r1241, %r1240, 18;
	shf.r.wrap.b32 	%r1245, %r1240, %r1241, 18;
	mov.b64 	%rd1901, {%r1245, %r1244};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	shf.l.wrap.b32 	%r1246, %r1240, %r1241, 23;
	shf.l.wrap.b32 	%r1247, %r1241, %r1240, 23;
	mov.b64 	%rd1903, {%r1247, %r1246};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	add.s64 	%rd1905, %rd1899, %rd1904;
	add.s64 	%rd1906, %rd1905, -6116909921290321640;
	add.s64 	%rd1907, %rd1906, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd1893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1893;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 28;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 28;
	mov.b64 	%rd1908, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 30;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 30;
	mov.b64 	%rd1909, {%r1253, %r1252};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	shf.l.wrap.b32 	%r1254, %r1248, %r1249, 25;
	shf.l.wrap.b32 	%r1255, %r1249, %r1248, 25;
	mov.b64 	%rd1911, {%r1255, %r1254};
	xor.b64  	%rd1912, %rd1910, %rd1911;
	and.b64  	%rd1913, %rd1893, %rd1868;
	or.b64  	%rd1914, %rd1893, %rd1868;
	and.b64  	%rd1915, %rd1914, %rd1843;
	or.b64  	%rd1916, %rd1915, %rd1913;
	add.s64 	%rd1917, %rd1916, %rd1912;
	add.s64 	%rd1918, %rd1917, %rd1906;
	xor.b64  	%rd1919, %rd1882, %rd1857;
	and.b64  	%rd1920, %rd1907, %rd1919;
	xor.b64  	%rd1921, %rd1920, %rd1857;
	add.s64 	%rd1922, %rd1832, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1256,%dummy}, %rd1907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1257}, %rd1907;
	}
	shf.r.wrap.b32 	%r1258, %r1257, %r1256, 14;
	shf.r.wrap.b32 	%r1259, %r1256, %r1257, 14;
	mov.b64 	%rd1923, {%r1259, %r1258};
	shf.r.wrap.b32 	%r1260, %r1257, %r1256, 18;
	shf.r.wrap.b32 	%r1261, %r1256, %r1257, 18;
	mov.b64 	%rd1924, {%r1261, %r1260};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	shf.l.wrap.b32 	%r1262, %r1256, %r1257, 23;
	shf.l.wrap.b32 	%r1263, %r1257, %r1256, 23;
	mov.b64 	%rd1926, {%r1263, %r1262};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	add.s64 	%rd1928, %rd1922, %rd1927;
	add.s64 	%rd1929, %rd1928, 6343226172721267266;
	add.s64 	%rd1930, %rd1929, %rd1843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1264,%dummy}, %rd1918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1265}, %rd1918;
	}
	shf.r.wrap.b32 	%r1266, %r1265, %r1264, 28;
	shf.r.wrap.b32 	%r1267, %r1264, %r1265, 28;
	mov.b64 	%rd1931, {%r1267, %r1266};
	shf.l.wrap.b32 	%r1268, %r1264, %r1265, 30;
	shf.l.wrap.b32 	%r1269, %r1265, %r1264, 30;
	mov.b64 	%rd1932, {%r1269, %r1268};
	xor.b64  	%rd1933, %rd1931, %rd1932;
	shf.l.wrap.b32 	%r1270, %r1264, %r1265, 25;
	shf.l.wrap.b32 	%r1271, %r1265, %r1264, 25;
	mov.b64 	%rd1934, {%r1271, %r1270};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	and.b64  	%rd1936, %rd1918, %rd1893;
	or.b64  	%rd1937, %rd1918, %rd1893;
	and.b64  	%rd1938, %rd1937, %rd1868;
	or.b64  	%rd1939, %rd1938, %rd1936;
	add.s64 	%rd1940, %rd1939, %rd1935;
	add.s64 	%rd1941, %rd1940, %rd1929;
	xor.b64  	%rd1942, %rd1907, %rd1882;
	and.b64  	%rd1943, %rd1930, %rd1942;
	xor.b64  	%rd1944, %rd1943, %rd1882;
	add.s64 	%rd1945, %rd1857, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1272,%dummy}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1273}, %rd1930;
	}
	shf.r.wrap.b32 	%r1274, %r1273, %r1272, 14;
	shf.r.wrap.b32 	%r1275, %r1272, %r1273, 14;
	mov.b64 	%rd1946, {%r1275, %r1274};
	shf.r.wrap.b32 	%r1276, %r1273, %r1272, 18;
	shf.r.wrap.b32 	%r1277, %r1272, %r1273, 18;
	mov.b64 	%rd1947, {%r1277, %r1276};
	xor.b64  	%rd1948, %rd1946, %rd1947;
	shf.l.wrap.b32 	%r1278, %r1272, %r1273, 23;
	shf.l.wrap.b32 	%r1279, %r1273, %r1272, 23;
	mov.b64 	%rd1949, {%r1279, %r1278};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	add.s64 	%rd1951, %rd1945, %rd1950;
	add.s64 	%rd1952, %rd1951, 1334009975649890238;
	add.s64 	%rd1953, %rd1952, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1280,%dummy}, %rd1941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1281}, %rd1941;
	}
	shf.r.wrap.b32 	%r1282, %r1281, %r1280, 28;
	shf.r.wrap.b32 	%r1283, %r1280, %r1281, 28;
	mov.b64 	%rd1954, {%r1283, %r1282};
	shf.l.wrap.b32 	%r1284, %r1280, %r1281, 30;
	shf.l.wrap.b32 	%r1285, %r1281, %r1280, 30;
	mov.b64 	%rd1955, {%r1285, %r1284};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	shf.l.wrap.b32 	%r1286, %r1280, %r1281, 25;
	shf.l.wrap.b32 	%r1287, %r1281, %r1280, 25;
	mov.b64 	%rd1957, {%r1287, %r1286};
	xor.b64  	%rd1958, %rd1956, %rd1957;
	and.b64  	%rd1959, %rd1941, %rd1918;
	or.b64  	%rd1960, %rd1941, %rd1918;
	and.b64  	%rd1961, %rd1960, %rd1893;
	or.b64  	%rd1962, %rd1961, %rd1959;
	add.s64 	%rd1963, %rd1962, %rd1958;
	add.s64 	%rd1964, %rd1963, %rd1952;
	xor.b64  	%rd1965, %rd1930, %rd1907;
	and.b64  	%rd1966, %rd1953, %rd1965;
	xor.b64  	%rd1967, %rd1966, %rd1907;
	add.s64 	%rd1968, %rd1882, %rd1967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1288,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1289}, %rd1953;
	}
	shf.r.wrap.b32 	%r1290, %r1289, %r1288, 14;
	shf.r.wrap.b32 	%r1291, %r1288, %r1289, 14;
	mov.b64 	%rd1969, {%r1291, %r1290};
	shf.r.wrap.b32 	%r1292, %r1289, %r1288, 18;
	shf.r.wrap.b32 	%r1293, %r1288, %r1289, 18;
	mov.b64 	%rd1970, {%r1293, %r1292};
	xor.b64  	%rd1971, %rd1969, %rd1970;
	shf.l.wrap.b32 	%r1294, %r1288, %r1289, 23;
	shf.l.wrap.b32 	%r1295, %r1289, %r1288, 23;
	mov.b64 	%rd1972, {%r1295, %r1294};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	add.s64 	%rd1974, %rd1968, %rd1973;
	add.s64 	%rd1975, %rd1974, 2608012711638119052;
	add.s64 	%rd1976, %rd1975, %rd1893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1296,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1297}, %rd1964;
	}
	shf.r.wrap.b32 	%r1298, %r1297, %r1296, 28;
	shf.r.wrap.b32 	%r1299, %r1296, %r1297, 28;
	mov.b64 	%rd1977, {%r1299, %r1298};
	shf.l.wrap.b32 	%r1300, %r1296, %r1297, 30;
	shf.l.wrap.b32 	%r1301, %r1297, %r1296, 30;
	mov.b64 	%rd1978, {%r1301, %r1300};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	shf.l.wrap.b32 	%r1302, %r1296, %r1297, 25;
	shf.l.wrap.b32 	%r1303, %r1297, %r1296, 25;
	mov.b64 	%rd1980, {%r1303, %r1302};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	and.b64  	%rd1982, %rd1964, %rd1941;
	or.b64  	%rd1983, %rd1964, %rd1941;
	and.b64  	%rd1984, %rd1983, %rd1918;
	or.b64  	%rd1985, %rd1984, %rd1982;
	add.s64 	%rd1986, %rd1985, %rd1981;
	add.s64 	%rd1987, %rd1986, %rd1975;
	xor.b64  	%rd1988, %rd1953, %rd1930;
	and.b64  	%rd1989, %rd1976, %rd1988;
	xor.b64  	%rd1990, %rd1989, %rd1930;
	add.s64 	%rd1991, %rd1907, %rd1990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1304,%dummy}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd1976;
	}
	shf.r.wrap.b32 	%r1306, %r1305, %r1304, 14;
	shf.r.wrap.b32 	%r1307, %r1304, %r1305, 14;
	mov.b64 	%rd1992, {%r1307, %r1306};
	shf.r.wrap.b32 	%r1308, %r1305, %r1304, 18;
	shf.r.wrap.b32 	%r1309, %r1304, %r1305, 18;
	mov.b64 	%rd1993, {%r1309, %r1308};
	xor.b64  	%rd1994, %rd1992, %rd1993;
	shf.l.wrap.b32 	%r1310, %r1304, %r1305, 23;
	shf.l.wrap.b32 	%r1311, %r1305, %r1304, 23;
	mov.b64 	%rd1995, {%r1311, %r1310};
	xor.b64  	%rd1996, %rd1994, %rd1995;
	add.s64 	%rd1997, %rd1991, %rd1996;
	add.s64 	%rd1998, %rd1997, 6128411473006802146;
	add.s64 	%rd1999, %rd1998, %rd1918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1312,%dummy}, %rd1987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd1987;
	}
	shf.r.wrap.b32 	%r1314, %r1313, %r1312, 28;
	shf.r.wrap.b32 	%r1315, %r1312, %r1313, 28;
	mov.b64 	%rd2000, {%r1315, %r1314};
	shf.l.wrap.b32 	%r1316, %r1312, %r1313, 30;
	shf.l.wrap.b32 	%r1317, %r1313, %r1312, 30;
	mov.b64 	%rd2001, {%r1317, %r1316};
	xor.b64  	%rd2002, %rd2000, %rd2001;
	shf.l.wrap.b32 	%r1318, %r1312, %r1313, 25;
	shf.l.wrap.b32 	%r1319, %r1313, %r1312, 25;
	mov.b64 	%rd2003, {%r1319, %r1318};
	xor.b64  	%rd2004, %rd2002, %rd2003;
	and.b64  	%rd2005, %rd1987, %rd1964;
	or.b64  	%rd2006, %rd1987, %rd1964;
	and.b64  	%rd2007, %rd2006, %rd1941;
	or.b64  	%rd2008, %rd2007, %rd2005;
	add.s64 	%rd2009, %rd2008, %rd2004;
	add.s64 	%rd2010, %rd2009, %rd1998;
	xor.b64  	%rd2011, %rd1976, %rd1953;
	and.b64  	%rd2012, %rd1999, %rd2011;
	xor.b64  	%rd2013, %rd2012, %rd1953;
	add.s64 	%rd2014, %rd1930, %rd2013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1320,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1321}, %rd1999;
	}
	shf.r.wrap.b32 	%r1322, %r1321, %r1320, 14;
	shf.r.wrap.b32 	%r1323, %r1320, %r1321, 14;
	mov.b64 	%rd2015, {%r1323, %r1322};
	shf.r.wrap.b32 	%r1324, %r1321, %r1320, 18;
	shf.r.wrap.b32 	%r1325, %r1320, %r1321, 18;
	mov.b64 	%rd2016, {%r1325, %r1324};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	shf.l.wrap.b32 	%r1326, %r1320, %r1321, 23;
	shf.l.wrap.b32 	%r1327, %r1321, %r1320, 23;
	mov.b64 	%rd2018, {%r1327, %r1326};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	add.s64 	%rd2020, %rd2014, %rd2019;
	add.s64 	%rd2021, %rd2020, 8268148722764581231;
	add.s64 	%rd2022, %rd2021, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1328,%dummy}, %rd2010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1329}, %rd2010;
	}
	shf.r.wrap.b32 	%r1330, %r1329, %r1328, 28;
	shf.r.wrap.b32 	%r1331, %r1328, %r1329, 28;
	mov.b64 	%rd2023, {%r1331, %r1330};
	shf.l.wrap.b32 	%r1332, %r1328, %r1329, 30;
	shf.l.wrap.b32 	%r1333, %r1329, %r1328, 30;
	mov.b64 	%rd2024, {%r1333, %r1332};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	shf.l.wrap.b32 	%r1334, %r1328, %r1329, 25;
	shf.l.wrap.b32 	%r1335, %r1329, %r1328, 25;
	mov.b64 	%rd2026, {%r1335, %r1334};
	xor.b64  	%rd2027, %rd2025, %rd2026;
	and.b64  	%rd2028, %rd2010, %rd1987;
	or.b64  	%rd2029, %rd2010, %rd1987;
	and.b64  	%rd2030, %rd2029, %rd1964;
	or.b64  	%rd2031, %rd2030, %rd2028;
	add.s64 	%rd2032, %rd2031, %rd2027;
	add.s64 	%rd2033, %rd2032, %rd2021;
	xor.b64  	%rd2034, %rd1999, %rd1976;
	and.b64  	%rd2035, %rd2022, %rd2034;
	xor.b64  	%rd2036, %rd2035, %rd1976;
	add.s64 	%rd2037, %rd1953, %rd2036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1336,%dummy}, %rd2022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1337}, %rd2022;
	}
	shf.r.wrap.b32 	%r1338, %r1337, %r1336, 14;
	shf.r.wrap.b32 	%r1339, %r1336, %r1337, 14;
	mov.b64 	%rd2038, {%r1339, %r1338};
	shf.r.wrap.b32 	%r1340, %r1337, %r1336, 18;
	shf.r.wrap.b32 	%r1341, %r1336, %r1337, 18;
	mov.b64 	%rd2039, {%r1341, %r1340};
	xor.b64  	%rd2040, %rd2038, %rd2039;
	shf.l.wrap.b32 	%r1342, %r1336, %r1337, 23;
	shf.l.wrap.b32 	%r1343, %r1337, %r1336, 23;
	mov.b64 	%rd2041, {%r1343, %r1342};
	xor.b64  	%rd2042, %rd2040, %rd2041;
	add.s64 	%rd2043, %rd2037, %rd2042;
	add.s64 	%rd2044, %rd2043, -9160688886553864527;
	add.s64 	%rd2045, %rd2044, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1344,%dummy}, %rd2033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1345}, %rd2033;
	}
	shf.r.wrap.b32 	%r1346, %r1345, %r1344, 28;
	shf.r.wrap.b32 	%r1347, %r1344, %r1345, 28;
	mov.b64 	%rd2046, {%r1347, %r1346};
	shf.l.wrap.b32 	%r1348, %r1344, %r1345, 30;
	shf.l.wrap.b32 	%r1349, %r1345, %r1344, 30;
	mov.b64 	%rd2047, {%r1349, %r1348};
	xor.b64  	%rd2048, %rd2046, %rd2047;
	shf.l.wrap.b32 	%r1350, %r1344, %r1345, 25;
	shf.l.wrap.b32 	%r1351, %r1345, %r1344, 25;
	mov.b64 	%rd2049, {%r1351, %r1350};
	xor.b64  	%rd2050, %rd2048, %rd2049;
	and.b64  	%rd2051, %rd2033, %rd2010;
	or.b64  	%rd2052, %rd2033, %rd2010;
	and.b64  	%rd2053, %rd2052, %rd1987;
	or.b64  	%rd2054, %rd2053, %rd2051;
	add.s64 	%rd2055, %rd2054, %rd2050;
	add.s64 	%rd2056, %rd2055, %rd2044;
	xor.b64  	%rd2057, %rd2022, %rd1999;
	and.b64  	%rd2058, %rd2045, %rd2057;
	xor.b64  	%rd2059, %rd2058, %rd1999;
	add.s64 	%rd2060, %rd1976, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd2045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd2045;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 14;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 14;
	mov.b64 	%rd2061, {%r1355, %r1354};
	shf.r.wrap.b32 	%r1356, %r1353, %r1352, 18;
	shf.r.wrap.b32 	%r1357, %r1352, %r1353, 18;
	mov.b64 	%rd2062, {%r1357, %r1356};
	xor.b64  	%rd2063, %rd2061, %rd2062;
	shf.l.wrap.b32 	%r1358, %r1352, %r1353, 23;
	shf.l.wrap.b32 	%r1359, %r1353, %r1352, 23;
	mov.b64 	%rd2064, {%r1359, %r1358};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	add.s64 	%rd2066, %rd2060, %rd2065;
	add.s64 	%rd2067, %rd2066, -7215885187991268811;
	add.s64 	%rd2068, %rd2067, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1360,%dummy}, %rd2056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd2056;
	}
	shf.r.wrap.b32 	%r1362, %r1361, %r1360, 28;
	shf.r.wrap.b32 	%r1363, %r1360, %r1361, 28;
	mov.b64 	%rd2069, {%r1363, %r1362};
	shf.l.wrap.b32 	%r1364, %r1360, %r1361, 30;
	shf.l.wrap.b32 	%r1365, %r1361, %r1360, 30;
	mov.b64 	%rd2070, {%r1365, %r1364};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	shf.l.wrap.b32 	%r1366, %r1360, %r1361, 25;
	shf.l.wrap.b32 	%r1367, %r1361, %r1360, 25;
	mov.b64 	%rd2072, {%r1367, %r1366};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	and.b64  	%rd2074, %rd2056, %rd2033;
	or.b64  	%rd2075, %rd2056, %rd2033;
	and.b64  	%rd2076, %rd2075, %rd2010;
	or.b64  	%rd2077, %rd2076, %rd2074;
	add.s64 	%rd2078, %rd2077, %rd2073;
	add.s64 	%rd2079, %rd2078, %rd2067;
	xor.b64  	%rd2080, %rd2045, %rd2022;
	and.b64  	%rd2081, %rd2068, %rd2080;
	xor.b64  	%rd2082, %rd2081, %rd2022;
	add.s64 	%rd2083, %rd1999, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1368,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1369}, %rd2068;
	}
	shf.r.wrap.b32 	%r1370, %r1369, %r1368, 14;
	shf.r.wrap.b32 	%r1371, %r1368, %r1369, 14;
	mov.b64 	%rd2084, {%r1371, %r1370};
	shf.r.wrap.b32 	%r1372, %r1369, %r1368, 18;
	shf.r.wrap.b32 	%r1373, %r1368, %r1369, 18;
	mov.b64 	%rd2085, {%r1373, %r1372};
	xor.b64  	%rd2086, %rd2084, %rd2085;
	shf.l.wrap.b32 	%r1374, %r1368, %r1369, 23;
	shf.l.wrap.b32 	%r1375, %r1369, %r1368, 23;
	mov.b64 	%rd2087, {%r1375, %r1374};
	xor.b64  	%rd2088, %rd2086, %rd2087;
	add.s64 	%rd2089, %rd2083, %rd2088;
	add.s64 	%rd2090, %rd2089, -4495734319001031532;
	add.s64 	%rd2091, %rd2090, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1376,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1377}, %rd2079;
	}
	shf.r.wrap.b32 	%r1378, %r1377, %r1376, 28;
	shf.r.wrap.b32 	%r1379, %r1376, %r1377, 28;
	mov.b64 	%rd2092, {%r1379, %r1378};
	shf.l.wrap.b32 	%r1380, %r1376, %r1377, 30;
	shf.l.wrap.b32 	%r1381, %r1377, %r1376, 30;
	mov.b64 	%rd2093, {%r1381, %r1380};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	shf.l.wrap.b32 	%r1382, %r1376, %r1377, 25;
	shf.l.wrap.b32 	%r1383, %r1377, %r1376, 25;
	mov.b64 	%rd2095, {%r1383, %r1382};
	xor.b64  	%rd2096, %rd2094, %rd2095;
	and.b64  	%rd2097, %rd2079, %rd2056;
	or.b64  	%rd2098, %rd2079, %rd2056;
	and.b64  	%rd2099, %rd2098, %rd2033;
	or.b64  	%rd2100, %rd2099, %rd2097;
	add.s64 	%rd2101, %rd2100, %rd2096;
	add.s64 	%rd2102, %rd2101, %rd2090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1384,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd1752;
	}
	shf.r.wrap.b32 	%r1386, %r1385, %r1384, 1;
	shf.r.wrap.b32 	%r1387, %r1384, %r1385, 1;
	mov.b64 	%rd2103, {%r1387, %r1386};
	shf.r.wrap.b32 	%r1388, %r1385, %r1384, 8;
	shf.r.wrap.b32 	%r1389, %r1384, %r1385, 8;
	mov.b64 	%rd2104, {%r1389, %r1388};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	shr.u64 	%rd2106, %rd1752, 7;
	xor.b64  	%rd2107, %rd2105, %rd2106;
	add.s64 	%rd2108, %rd1736, %rd35;
	add.s64 	%rd3256, %rd2108, %rd2107;
	add.s64 	%rd2109, %rd3256, %rd2022;
	xor.b64  	%rd2110, %rd2068, %rd2045;
	and.b64  	%rd2111, %rd2091, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2045;
	add.s64 	%rd2113, %rd2109, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd2091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd2091;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 14;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 14;
	mov.b64 	%rd2114, {%r1393, %r1392};
	shf.r.wrap.b32 	%r1394, %r1391, %r1390, 18;
	shf.r.wrap.b32 	%r1395, %r1390, %r1391, 18;
	mov.b64 	%rd2115, {%r1395, %r1394};
	xor.b64  	%rd2116, %rd2114, %rd2115;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 23;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 23;
	mov.b64 	%rd2117, {%r1397, %r1396};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	add.s64 	%rd2119, %rd2113, %rd2118;
	add.s64 	%rd2120, %rd2119, -1973867731355612462;
	add.s64 	%rd2121, %rd2120, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd2102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd2102;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 28;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 28;
	mov.b64 	%rd2122, {%r1401, %r1400};
	shf.l.wrap.b32 	%r1402, %r1398, %r1399, 30;
	shf.l.wrap.b32 	%r1403, %r1399, %r1398, 30;
	mov.b64 	%rd2123, {%r1403, %r1402};
	xor.b64  	%rd2124, %rd2122, %rd2123;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 25;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 25;
	mov.b64 	%rd2125, {%r1405, %r1404};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	and.b64  	%rd2127, %rd2102, %rd2079;
	or.b64  	%rd2128, %rd2102, %rd2079;
	and.b64  	%rd2129, %rd2128, %rd2056;
	or.b64  	%rd2130, %rd2129, %rd2127;
	add.s64 	%rd2131, %rd2130, %rd2126;
	add.s64 	%rd2132, %rd2131, %rd2120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd1777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd1777;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 1;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 1;
	mov.b64 	%rd2133, {%r1409, %r1408};
	shf.r.wrap.b32 	%r1410, %r1407, %r1406, 8;
	shf.r.wrap.b32 	%r1411, %r1406, %r1407, 8;
	mov.b64 	%rd2134, {%r1411, %r1410};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	shr.u64 	%rd2136, %rd1777, 7;
	xor.b64  	%rd2137, %rd2135, %rd2136;
	add.s64 	%rd2138, %rd39, %rd1752;
	add.s64 	%rd3257, %rd2138, %rd2137;
	add.s64 	%rd2139, %rd3257, %rd2045;
	xor.b64  	%rd2140, %rd2091, %rd2068;
	and.b64  	%rd2141, %rd2121, %rd2140;
	xor.b64  	%rd2142, %rd2141, %rd2068;
	add.s64 	%rd2143, %rd2139, %rd2142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd2121;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 14;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 14;
	mov.b64 	%rd2144, {%r1415, %r1414};
	shf.r.wrap.b32 	%r1416, %r1413, %r1412, 18;
	shf.r.wrap.b32 	%r1417, %r1412, %r1413, 18;
	mov.b64 	%rd2145, {%r1417, %r1416};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	shf.l.wrap.b32 	%r1418, %r1412, %r1413, 23;
	shf.l.wrap.b32 	%r1419, %r1413, %r1412, 23;
	mov.b64 	%rd2147, {%r1419, %r1418};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	add.s64 	%rd2149, %rd2143, %rd2148;
	add.s64 	%rd2150, %rd2149, -1171420211273849373;
	add.s64 	%rd2151, %rd2150, %rd2056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1420,%dummy}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd2132;
	}
	shf.r.wrap.b32 	%r1422, %r1421, %r1420, 28;
	shf.r.wrap.b32 	%r1423, %r1420, %r1421, 28;
	mov.b64 	%rd2152, {%r1423, %r1422};
	shf.l.wrap.b32 	%r1424, %r1420, %r1421, 30;
	shf.l.wrap.b32 	%r1425, %r1421, %r1420, 30;
	mov.b64 	%rd2153, {%r1425, %r1424};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	shf.l.wrap.b32 	%r1426, %r1420, %r1421, 25;
	shf.l.wrap.b32 	%r1427, %r1421, %r1420, 25;
	mov.b64 	%rd2155, {%r1427, %r1426};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	and.b64  	%rd2157, %rd2132, %rd2102;
	or.b64  	%rd2158, %rd2132, %rd2102;
	and.b64  	%rd2159, %rd2158, %rd2079;
	or.b64  	%rd2160, %rd2159, %rd2157;
	add.s64 	%rd2161, %rd2160, %rd2156;
	add.s64 	%rd2162, %rd2161, %rd2150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd3256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd3256;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 19;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 19;
	mov.b64 	%rd2163, {%r1431, %r1430};
	shf.l.wrap.b32 	%r1432, %r1428, %r1429, 3;
	shf.l.wrap.b32 	%r1433, %r1429, %r1428, 3;
	mov.b64 	%rd2164, {%r1433, %r1432};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	shr.u64 	%rd2166, %rd3256, 6;
	xor.b64  	%rd2167, %rd2165, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1434,%dummy}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1435}, %rd1802;
	}
	shf.r.wrap.b32 	%r1436, %r1435, %r1434, 1;
	shf.r.wrap.b32 	%r1437, %r1434, %r1435, 1;
	mov.b64 	%rd2168, {%r1437, %r1436};
	shf.r.wrap.b32 	%r1438, %r1435, %r1434, 8;
	shf.r.wrap.b32 	%r1439, %r1434, %r1435, 8;
	mov.b64 	%rd2169, {%r1439, %r1438};
	xor.b64  	%rd2170, %rd2168, %rd2169;
	shr.u64 	%rd2171, %rd1802, 7;
	xor.b64  	%rd2172, %rd2170, %rd2171;
	add.s64 	%rd2173, %rd2167, %rd1777;
	add.s64 	%rd3253, %rd2173, %rd2172;
	add.s64 	%rd2174, %rd3253, %rd2068;
	xor.b64  	%rd2175, %rd2121, %rd2091;
	and.b64  	%rd2176, %rd2151, %rd2175;
	xor.b64  	%rd2177, %rd2176, %rd2091;
	add.s64 	%rd2178, %rd2174, %rd2177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1440,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1441}, %rd2151;
	}
	shf.r.wrap.b32 	%r1442, %r1441, %r1440, 14;
	shf.r.wrap.b32 	%r1443, %r1440, %r1441, 14;
	mov.b64 	%rd2179, {%r1443, %r1442};
	shf.r.wrap.b32 	%r1444, %r1441, %r1440, 18;
	shf.r.wrap.b32 	%r1445, %r1440, %r1441, 18;
	mov.b64 	%rd2180, {%r1445, %r1444};
	xor.b64  	%rd2181, %rd2179, %rd2180;
	shf.l.wrap.b32 	%r1446, %r1440, %r1441, 23;
	shf.l.wrap.b32 	%r1447, %r1441, %r1440, 23;
	mov.b64 	%rd2182, {%r1447, %r1446};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	add.s64 	%rd2184, %rd2178, %rd2183;
	add.s64 	%rd2185, %rd2184, 1135362057144423861;
	add.s64 	%rd2186, %rd2185, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1448,%dummy}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd2162;
	}
	shf.r.wrap.b32 	%r1450, %r1449, %r1448, 28;
	shf.r.wrap.b32 	%r1451, %r1448, %r1449, 28;
	mov.b64 	%rd2187, {%r1451, %r1450};
	shf.l.wrap.b32 	%r1452, %r1448, %r1449, 30;
	shf.l.wrap.b32 	%r1453, %r1449, %r1448, 30;
	mov.b64 	%rd2188, {%r1453, %r1452};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	shf.l.wrap.b32 	%r1454, %r1448, %r1449, 25;
	shf.l.wrap.b32 	%r1455, %r1449, %r1448, 25;
	mov.b64 	%rd2190, {%r1455, %r1454};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	and.b64  	%rd2192, %rd2162, %rd2132;
	or.b64  	%rd2193, %rd2162, %rd2132;
	and.b64  	%rd2194, %rd2193, %rd2102;
	or.b64  	%rd2195, %rd2194, %rd2192;
	add.s64 	%rd2196, %rd2195, %rd2191;
	add.s64 	%rd2197, %rd2196, %rd2185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1456,%dummy}, %rd3257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1457}, %rd3257;
	}
	shf.r.wrap.b32 	%r1458, %r1457, %r1456, 19;
	shf.r.wrap.b32 	%r1459, %r1456, %r1457, 19;
	mov.b64 	%rd2198, {%r1459, %r1458};
	shf.l.wrap.b32 	%r1460, %r1456, %r1457, 3;
	shf.l.wrap.b32 	%r1461, %r1457, %r1456, 3;
	mov.b64 	%rd2199, {%r1461, %r1460};
	xor.b64  	%rd2200, %rd2198, %rd2199;
	shr.u64 	%rd2201, %rd3257, 6;
	xor.b64  	%rd2202, %rd2200, %rd2201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd1819;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 1;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 1;
	mov.b64 	%rd2203, {%r1465, %r1464};
	shf.r.wrap.b32 	%r1466, %r1463, %r1462, 8;
	shf.r.wrap.b32 	%r1467, %r1462, %r1463, 8;
	mov.b64 	%rd2204, {%r1467, %r1466};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	shr.u64 	%rd2206, %rd1819, 7;
	xor.b64  	%rd2207, %rd2205, %rd2206;
	add.s64 	%rd2208, %rd2202, %rd1802;
	add.s64 	%rd3251, %rd2208, %rd2207;
	add.s64 	%rd2209, %rd3251, %rd2091;
	xor.b64  	%rd2210, %rd2151, %rd2121;
	and.b64  	%rd2211, %rd2186, %rd2210;
	xor.b64  	%rd2212, %rd2211, %rd2121;
	add.s64 	%rd2213, %rd2209, %rd2212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1468,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd2186;
	}
	shf.r.wrap.b32 	%r1470, %r1469, %r1468, 14;
	shf.r.wrap.b32 	%r1471, %r1468, %r1469, 14;
	mov.b64 	%rd2214, {%r1471, %r1470};
	shf.r.wrap.b32 	%r1472, %r1469, %r1468, 18;
	shf.r.wrap.b32 	%r1473, %r1468, %r1469, 18;
	mov.b64 	%rd2215, {%r1473, %r1472};
	xor.b64  	%rd2216, %rd2214, %rd2215;
	shf.l.wrap.b32 	%r1474, %r1468, %r1469, 23;
	shf.l.wrap.b32 	%r1475, %r1469, %r1468, 23;
	mov.b64 	%rd2217, {%r1475, %r1474};
	xor.b64  	%rd2218, %rd2216, %rd2217;
	add.s64 	%rd2219, %rd2213, %rd2218;
	add.s64 	%rd2220, %rd2219, 2597628984639134821;
	add.s64 	%rd2221, %rd2220, %rd2102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1476,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd2197;
	}
	shf.r.wrap.b32 	%r1478, %r1477, %r1476, 28;
	shf.r.wrap.b32 	%r1479, %r1476, %r1477, 28;
	mov.b64 	%rd2222, {%r1479, %r1478};
	shf.l.wrap.b32 	%r1480, %r1476, %r1477, 30;
	shf.l.wrap.b32 	%r1481, %r1477, %r1476, 30;
	mov.b64 	%rd2223, {%r1481, %r1480};
	xor.b64  	%rd2224, %rd2222, %rd2223;
	shf.l.wrap.b32 	%r1482, %r1476, %r1477, 25;
	shf.l.wrap.b32 	%r1483, %r1477, %r1476, 25;
	mov.b64 	%rd2225, {%r1483, %r1482};
	xor.b64  	%rd2226, %rd2224, %rd2225;
	and.b64  	%rd2227, %rd2197, %rd2162;
	or.b64  	%rd2228, %rd2197, %rd2162;
	and.b64  	%rd2229, %rd2228, %rd2132;
	or.b64  	%rd2230, %rd2229, %rd2227;
	add.s64 	%rd2231, %rd2230, %rd2226;
	add.s64 	%rd2232, %rd2231, %rd2220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1484,%dummy}, %rd3253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd3253;
	}
	shf.r.wrap.b32 	%r1486, %r1485, %r1484, 19;
	shf.r.wrap.b32 	%r1487, %r1484, %r1485, 19;
	mov.b64 	%rd2233, {%r1487, %r1486};
	shf.l.wrap.b32 	%r1488, %r1484, %r1485, 3;
	shf.l.wrap.b32 	%r1489, %r1485, %r1484, 3;
	mov.b64 	%rd2234, {%r1489, %r1488};
	xor.b64  	%rd2235, %rd2233, %rd2234;
	shr.u64 	%rd2236, %rd3253, 6;
	xor.b64  	%rd2237, %rd2235, %rd2236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1490,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1491}, %rd1844;
	}
	shf.r.wrap.b32 	%r1492, %r1491, %r1490, 1;
	shf.r.wrap.b32 	%r1493, %r1490, %r1491, 1;
	mov.b64 	%rd2238, {%r1493, %r1492};
	shf.r.wrap.b32 	%r1494, %r1491, %r1490, 8;
	shf.r.wrap.b32 	%r1495, %r1490, %r1491, 8;
	mov.b64 	%rd2239, {%r1495, %r1494};
	xor.b64  	%rd2240, %rd2238, %rd2239;
	shr.u64 	%rd2241, %rd1844, 7;
	xor.b64  	%rd2242, %rd2240, %rd2241;
	add.s64 	%rd2243, %rd2237, %rd1819;
	add.s64 	%rd3249, %rd2243, %rd2242;
	add.s64 	%rd2244, %rd3249, %rd2121;
	xor.b64  	%rd2245, %rd2186, %rd2151;
	and.b64  	%rd2246, %rd2221, %rd2245;
	xor.b64  	%rd2247, %rd2246, %rd2151;
	add.s64 	%rd2248, %rd2244, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1496,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd2221;
	}
	shf.r.wrap.b32 	%r1498, %r1497, %r1496, 14;
	shf.r.wrap.b32 	%r1499, %r1496, %r1497, 14;
	mov.b64 	%rd2249, {%r1499, %r1498};
	shf.r.wrap.b32 	%r1500, %r1497, %r1496, 18;
	shf.r.wrap.b32 	%r1501, %r1496, %r1497, 18;
	mov.b64 	%rd2250, {%r1501, %r1500};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	shf.l.wrap.b32 	%r1502, %r1496, %r1497, 23;
	shf.l.wrap.b32 	%r1503, %r1497, %r1496, 23;
	mov.b64 	%rd2252, {%r1503, %r1502};
	xor.b64  	%rd2253, %rd2251, %rd2252;
	add.s64 	%rd2254, %rd2248, %rd2253;
	add.s64 	%rd2255, %rd2254, 3308224258029322869;
	add.s64 	%rd2256, %rd2255, %rd2132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1504,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1505}, %rd2232;
	}
	shf.r.wrap.b32 	%r1506, %r1505, %r1504, 28;
	shf.r.wrap.b32 	%r1507, %r1504, %r1505, 28;
	mov.b64 	%rd2257, {%r1507, %r1506};
	shf.l.wrap.b32 	%r1508, %r1504, %r1505, 30;
	shf.l.wrap.b32 	%r1509, %r1505, %r1504, 30;
	mov.b64 	%rd2258, {%r1509, %r1508};
	xor.b64  	%rd2259, %rd2257, %rd2258;
	shf.l.wrap.b32 	%r1510, %r1504, %r1505, 25;
	shf.l.wrap.b32 	%r1511, %r1505, %r1504, 25;
	mov.b64 	%rd2260, {%r1511, %r1510};
	xor.b64  	%rd2261, %rd2259, %rd2260;
	and.b64  	%rd2262, %rd2232, %rd2197;
	or.b64  	%rd2263, %rd2232, %rd2197;
	and.b64  	%rd2264, %rd2263, %rd2162;
	or.b64  	%rd2265, %rd2264, %rd2262;
	add.s64 	%rd2266, %rd2265, %rd2261;
	add.s64 	%rd2267, %rd2266, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1512,%dummy}, %rd3251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1513}, %rd3251;
	}
	shf.r.wrap.b32 	%r1514, %r1513, %r1512, 19;
	shf.r.wrap.b32 	%r1515, %r1512, %r1513, 19;
	mov.b64 	%rd2268, {%r1515, %r1514};
	shf.l.wrap.b32 	%r1516, %r1512, %r1513, 3;
	shf.l.wrap.b32 	%r1517, %r1513, %r1512, 3;
	mov.b64 	%rd2269, {%r1517, %r1516};
	xor.b64  	%rd2270, %rd2268, %rd2269;
	shr.u64 	%rd2271, %rd3251, 6;
	xor.b64  	%rd2272, %rd2270, %rd2271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd1869;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 1;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 1;
	mov.b64 	%rd2273, {%r1521, %r1520};
	shf.r.wrap.b32 	%r1522, %r1519, %r1518, 8;
	shf.r.wrap.b32 	%r1523, %r1518, %r1519, 8;
	mov.b64 	%rd2274, {%r1523, %r1522};
	xor.b64  	%rd2275, %rd2273, %rd2274;
	shr.u64 	%rd2276, %rd1869, 7;
	xor.b64  	%rd2277, %rd2275, %rd2276;
	add.s64 	%rd2278, %rd2272, %rd1844;
	add.s64 	%rd3247, %rd2278, %rd2277;
	add.s64 	%rd2279, %rd3247, %rd2151;
	xor.b64  	%rd2280, %rd2221, %rd2186;
	and.b64  	%rd2281, %rd2256, %rd2280;
	xor.b64  	%rd2282, %rd2281, %rd2186;
	add.s64 	%rd2283, %rd2279, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd2256;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 14;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 14;
	mov.b64 	%rd2284, {%r1527, %r1526};
	shf.r.wrap.b32 	%r1528, %r1525, %r1524, 18;
	shf.r.wrap.b32 	%r1529, %r1524, %r1525, 18;
	mov.b64 	%rd2285, {%r1529, %r1528};
	xor.b64  	%rd2286, %rd2284, %rd2285;
	shf.l.wrap.b32 	%r1530, %r1524, %r1525, 23;
	shf.l.wrap.b32 	%r1531, %r1525, %r1524, 23;
	mov.b64 	%rd2287, {%r1531, %r1530};
	xor.b64  	%rd2288, %rd2286, %rd2287;
	add.s64 	%rd2289, %rd2283, %rd2288;
	add.s64 	%rd2290, %rd2289, 5365058923640841347;
	add.s64 	%rd2291, %rd2290, %rd2162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1532,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd2267;
	}
	shf.r.wrap.b32 	%r1534, %r1533, %r1532, 28;
	shf.r.wrap.b32 	%r1535, %r1532, %r1533, 28;
	mov.b64 	%rd2292, {%r1535, %r1534};
	shf.l.wrap.b32 	%r1536, %r1532, %r1533, 30;
	shf.l.wrap.b32 	%r1537, %r1533, %r1532, 30;
	mov.b64 	%rd2293, {%r1537, %r1536};
	xor.b64  	%rd2294, %rd2292, %rd2293;
	shf.l.wrap.b32 	%r1538, %r1532, %r1533, 25;
	shf.l.wrap.b32 	%r1539, %r1533, %r1532, 25;
	mov.b64 	%rd2295, {%r1539, %r1538};
	xor.b64  	%rd2296, %rd2294, %rd2295;
	and.b64  	%rd2297, %rd2267, %rd2232;
	or.b64  	%rd2298, %rd2267, %rd2232;
	and.b64  	%rd2299, %rd2298, %rd2197;
	or.b64  	%rd2300, %rd2299, %rd2297;
	add.s64 	%rd2301, %rd2300, %rd2296;
	add.s64 	%rd2302, %rd2301, %rd2290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1540,%dummy}, %rd3249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1541}, %rd3249;
	}
	shf.r.wrap.b32 	%r1542, %r1541, %r1540, 19;
	shf.r.wrap.b32 	%r1543, %r1540, %r1541, 19;
	mov.b64 	%rd2303, {%r1543, %r1542};
	shf.l.wrap.b32 	%r1544, %r1540, %r1541, 3;
	shf.l.wrap.b32 	%r1545, %r1541, %r1540, 3;
	mov.b64 	%rd2304, {%r1545, %r1544};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	shr.u64 	%rd2306, %rd3249, 6;
	xor.b64  	%rd2307, %rd2305, %rd2306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd1894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd1894;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 1;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 1;
	mov.b64 	%rd2308, {%r1549, %r1548};
	shf.r.wrap.b32 	%r1550, %r1547, %r1546, 8;
	shf.r.wrap.b32 	%r1551, %r1546, %r1547, 8;
	mov.b64 	%rd2309, {%r1551, %r1550};
	xor.b64  	%rd2310, %rd2308, %rd2309;
	shr.u64 	%rd2311, %rd1894, 7;
	xor.b64  	%rd2312, %rd2310, %rd2311;
	add.s64 	%rd2313, %rd2307, %rd1869;
	add.s64 	%rd2314, %rd2313, %rd2312;
	add.s64 	%rd3245, %rd2314, 1536;
	add.s64 	%rd2315, %rd3245, %rd2186;
	xor.b64  	%rd2316, %rd2256, %rd2221;
	and.b64  	%rd2317, %rd2291, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2221;
	add.s64 	%rd2319, %rd2315, %rd2318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2291;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 14;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 14;
	mov.b64 	%rd2320, {%r1555, %r1554};
	shf.r.wrap.b32 	%r1556, %r1553, %r1552, 18;
	shf.r.wrap.b32 	%r1557, %r1552, %r1553, 18;
	mov.b64 	%rd2321, {%r1557, %r1556};
	xor.b64  	%rd2322, %rd2320, %rd2321;
	shf.l.wrap.b32 	%r1558, %r1552, %r1553, 23;
	shf.l.wrap.b32 	%r1559, %r1553, %r1552, 23;
	mov.b64 	%rd2323, {%r1559, %r1558};
	xor.b64  	%rd2324, %rd2322, %rd2323;
	add.s64 	%rd2325, %rd2319, %rd2324;
	add.s64 	%rd2326, %rd2325, 6679025012923562964;
	add.s64 	%rd2327, %rd2326, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd2302;
	}
	shf.r.wrap.b32 	%r1562, %r1561, %r1560, 28;
	shf.r.wrap.b32 	%r1563, %r1560, %r1561, 28;
	mov.b64 	%rd2328, {%r1563, %r1562};
	shf.l.wrap.b32 	%r1564, %r1560, %r1561, 30;
	shf.l.wrap.b32 	%r1565, %r1561, %r1560, 30;
	mov.b64 	%rd2329, {%r1565, %r1564};
	xor.b64  	%rd2330, %rd2328, %rd2329;
	shf.l.wrap.b32 	%r1566, %r1560, %r1561, 25;
	shf.l.wrap.b32 	%r1567, %r1561, %r1560, 25;
	mov.b64 	%rd2331, {%r1567, %r1566};
	xor.b64  	%rd2332, %rd2330, %rd2331;
	and.b64  	%rd2333, %rd2302, %rd2267;
	or.b64  	%rd2334, %rd2302, %rd2267;
	and.b64  	%rd2335, %rd2334, %rd2232;
	or.b64  	%rd2336, %rd2335, %rd2333;
	add.s64 	%rd2337, %rd2336, %rd2332;
	add.s64 	%rd2338, %rd2337, %rd2326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1568,%dummy}, %rd3247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1569}, %rd3247;
	}
	shf.r.wrap.b32 	%r1570, %r1569, %r1568, 19;
	shf.r.wrap.b32 	%r1571, %r1568, %r1569, 19;
	mov.b64 	%rd2339, {%r1571, %r1570};
	shf.l.wrap.b32 	%r1572, %r1568, %r1569, 3;
	shf.l.wrap.b32 	%r1573, %r1569, %r1568, 3;
	mov.b64 	%rd2340, {%r1573, %r1572};
	xor.b64  	%rd2341, %rd2339, %rd2340;
	shr.u64 	%rd2342, %rd3247, 6;
	xor.b64  	%rd2343, %rd2341, %rd2342;
	add.s64 	%rd2344, %rd2343, %rd1894;
	add.s64 	%rd2345, %rd2344, %rd3256;
	add.s64 	%rd3244, %rd2345, %rd40;
	add.s64 	%rd2346, %rd3244, %rd2221;
	xor.b64  	%rd2347, %rd2291, %rd2256;
	and.b64  	%rd2348, %rd2327, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2256;
	add.s64 	%rd2350, %rd2346, %rd2349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd2327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd2327;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 14;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 14;
	mov.b64 	%rd2351, {%r1577, %r1576};
	shf.r.wrap.b32 	%r1578, %r1575, %r1574, 18;
	shf.r.wrap.b32 	%r1579, %r1574, %r1575, 18;
	mov.b64 	%rd2352, {%r1579, %r1578};
	xor.b64  	%rd2353, %rd2351, %rd2352;
	shf.l.wrap.b32 	%r1580, %r1574, %r1575, 23;
	shf.l.wrap.b32 	%r1581, %r1575, %r1574, 23;
	mov.b64 	%rd2354, {%r1581, %r1580};
	xor.b64  	%rd2355, %rd2353, %rd2354;
	add.s64 	%rd2356, %rd2350, %rd2355;
	add.s64 	%rd2357, %rd2356, 8573033837759648693;
	add.s64 	%rd2358, %rd2357, %rd2232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1582,%dummy}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1583}, %rd2338;
	}
	shf.r.wrap.b32 	%r1584, %r1583, %r1582, 28;
	shf.r.wrap.b32 	%r1585, %r1582, %r1583, 28;
	mov.b64 	%rd2359, {%r1585, %r1584};
	shf.l.wrap.b32 	%r1586, %r1582, %r1583, 30;
	shf.l.wrap.b32 	%r1587, %r1583, %r1582, 30;
	mov.b64 	%rd2360, {%r1587, %r1586};
	xor.b64  	%rd2361, %rd2359, %rd2360;
	shf.l.wrap.b32 	%r1588, %r1582, %r1583, 25;
	shf.l.wrap.b32 	%r1589, %r1583, %r1582, 25;
	mov.b64 	%rd2362, {%r1589, %r1588};
	xor.b64  	%rd2363, %rd2361, %rd2362;
	and.b64  	%rd2364, %rd2338, %rd2302;
	or.b64  	%rd2365, %rd2338, %rd2302;
	and.b64  	%rd2366, %rd2365, %rd2267;
	or.b64  	%rd2367, %rd2366, %rd2364;
	add.s64 	%rd2368, %rd2367, %rd2363;
	add.s64 	%rd2369, %rd2368, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1590,%dummy}, %rd3245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1591}, %rd3245;
	}
	shf.r.wrap.b32 	%r1592, %r1591, %r1590, 19;
	shf.r.wrap.b32 	%r1593, %r1590, %r1591, 19;
	mov.b64 	%rd2370, {%r1593, %r1592};
	shf.l.wrap.b32 	%r1594, %r1590, %r1591, 3;
	shf.l.wrap.b32 	%r1595, %r1591, %r1590, 3;
	mov.b64 	%rd2371, {%r1595, %r1594};
	xor.b64  	%rd2372, %rd2370, %rd2371;
	shr.u64 	%rd2373, %rd3245, 6;
	xor.b64  	%rd2374, %rd2372, %rd2373;
	add.s64 	%rd2375, %rd41, %rd3257;
	add.s64 	%rd3243, %rd2375, %rd2374;
	add.s64 	%rd2376, %rd3243, %rd2256;
	xor.b64  	%rd2377, %rd2327, %rd2291;
	and.b64  	%rd2378, %rd2358, %rd2377;
	xor.b64  	%rd2379, %rd2378, %rd2291;
	add.s64 	%rd2380, %rd2376, %rd2379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd2358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd2358;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 14;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 14;
	mov.b64 	%rd2381, {%r1599, %r1598};
	shf.r.wrap.b32 	%r1600, %r1597, %r1596, 18;
	shf.r.wrap.b32 	%r1601, %r1596, %r1597, 18;
	mov.b64 	%rd2382, {%r1601, %r1600};
	xor.b64  	%rd2383, %rd2381, %rd2382;
	shf.l.wrap.b32 	%r1602, %r1596, %r1597, 23;
	shf.l.wrap.b32 	%r1603, %r1597, %r1596, 23;
	mov.b64 	%rd2384, {%r1603, %r1602};
	xor.b64  	%rd2385, %rd2383, %rd2384;
	add.s64 	%rd2386, %rd2380, %rd2385;
	add.s64 	%rd2387, %rd2386, -7476448914759557205;
	add.s64 	%rd2388, %rd2387, %rd2267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd2369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd2369;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 28;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 28;
	mov.b64 	%rd2389, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 30;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 30;
	mov.b64 	%rd2390, {%r1609, %r1608};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	shf.l.wrap.b32 	%r1610, %r1604, %r1605, 25;
	shf.l.wrap.b32 	%r1611, %r1605, %r1604, 25;
	mov.b64 	%rd2392, {%r1611, %r1610};
	xor.b64  	%rd2393, %rd2391, %rd2392;
	and.b64  	%rd2394, %rd2369, %rd2338;
	or.b64  	%rd2395, %rd2369, %rd2338;
	and.b64  	%rd2396, %rd2395, %rd2302;
	or.b64  	%rd2397, %rd2396, %rd2394;
	add.s64 	%rd2398, %rd2397, %rd2393;
	add.s64 	%rd2399, %rd2398, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1612,%dummy}, %rd3244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd3244;
	}
	shf.r.wrap.b32 	%r1614, %r1613, %r1612, 19;
	shf.r.wrap.b32 	%r1615, %r1612, %r1613, 19;
	mov.b64 	%rd2400, {%r1615, %r1614};
	shf.l.wrap.b32 	%r1616, %r1612, %r1613, 3;
	shf.l.wrap.b32 	%r1617, %r1613, %r1612, 3;
	mov.b64 	%rd2401, {%r1617, %r1616};
	xor.b64  	%rd2402, %rd2400, %rd2401;
	shr.u64 	%rd2403, %rd3244, 6;
	xor.b64  	%rd2404, %rd2402, %rd2403;
	add.s64 	%rd2405, %rd3253, %rd36;
	add.s64 	%rd3255, %rd2405, %rd2404;
	add.s64 	%rd2406, %rd3255, %rd2291;
	xor.b64  	%rd2407, %rd2358, %rd2327;
	and.b64  	%rd2408, %rd2388, %rd2407;
	xor.b64  	%rd2409, %rd2408, %rd2327;
	add.s64 	%rd2410, %rd2406, %rd2409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1619}, %rd2388;
	}
	shf.r.wrap.b32 	%r1620, %r1619, %r1618, 14;
	shf.r.wrap.b32 	%r1621, %r1618, %r1619, 14;
	mov.b64 	%rd2411, {%r1621, %r1620};
	shf.r.wrap.b32 	%r1622, %r1619, %r1618, 18;
	shf.r.wrap.b32 	%r1623, %r1618, %r1619, 18;
	mov.b64 	%rd2412, {%r1623, %r1622};
	xor.b64  	%rd2413, %rd2411, %rd2412;
	shf.l.wrap.b32 	%r1624, %r1618, %r1619, 23;
	shf.l.wrap.b32 	%r1625, %r1619, %r1618, 23;
	mov.b64 	%rd2414, {%r1625, %r1624};
	xor.b64  	%rd2415, %rd2413, %rd2414;
	add.s64 	%rd2416, %rd2410, %rd2415;
	add.s64 	%rd2417, %rd2416, -6327057829258317296;
	add.s64 	%rd2418, %rd2417, %rd2302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1627}, %rd2399;
	}
	shf.r.wrap.b32 	%r1628, %r1627, %r1626, 28;
	shf.r.wrap.b32 	%r1629, %r1626, %r1627, 28;
	mov.b64 	%rd2419, {%r1629, %r1628};
	shf.l.wrap.b32 	%r1630, %r1626, %r1627, 30;
	shf.l.wrap.b32 	%r1631, %r1627, %r1626, 30;
	mov.b64 	%rd2420, {%r1631, %r1630};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	shf.l.wrap.b32 	%r1632, %r1626, %r1627, 25;
	shf.l.wrap.b32 	%r1633, %r1627, %r1626, 25;
	mov.b64 	%rd2422, {%r1633, %r1632};
	xor.b64  	%rd2423, %rd2421, %rd2422;
	and.b64  	%rd2424, %rd2399, %rd2369;
	or.b64  	%rd2425, %rd2399, %rd2369;
	and.b64  	%rd2426, %rd2425, %rd2338;
	or.b64  	%rd2427, %rd2426, %rd2424;
	add.s64 	%rd2428, %rd2427, %rd2423;
	add.s64 	%rd2429, %rd2428, %rd2417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd3243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd3243;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 19;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 19;
	mov.b64 	%rd2430, {%r1637, %r1636};
	shf.l.wrap.b32 	%r1638, %r1634, %r1635, 3;
	shf.l.wrap.b32 	%r1639, %r1635, %r1634, 3;
	mov.b64 	%rd2431, {%r1639, %r1638};
	xor.b64  	%rd2432, %rd2430, %rd2431;
	shr.u64 	%rd2433, %rd3243, 6;
	xor.b64  	%rd2434, %rd2432, %rd2433;
	add.s64 	%rd2435, %rd3251, %rd36;
	add.s64 	%rd3252, %rd2435, %rd2434;
	add.s64 	%rd2436, %rd3252, %rd2327;
	xor.b64  	%rd2437, %rd2388, %rd2358;
	and.b64  	%rd2438, %rd2418, %rd2437;
	xor.b64  	%rd2439, %rd2438, %rd2358;
	add.s64 	%rd2440, %rd2436, %rd2439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1640,%dummy}, %rd2418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd2418;
	}
	shf.r.wrap.b32 	%r1642, %r1641, %r1640, 14;
	shf.r.wrap.b32 	%r1643, %r1640, %r1641, 14;
	mov.b64 	%rd2441, {%r1643, %r1642};
	shf.r.wrap.b32 	%r1644, %r1641, %r1640, 18;
	shf.r.wrap.b32 	%r1645, %r1640, %r1641, 18;
	mov.b64 	%rd2442, {%r1645, %r1644};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	shf.l.wrap.b32 	%r1646, %r1640, %r1641, 23;
	shf.l.wrap.b32 	%r1647, %r1641, %r1640, 23;
	mov.b64 	%rd2444, {%r1647, %r1646};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	add.s64 	%rd2446, %rd2440, %rd2445;
	add.s64 	%rd2447, %rd2446, -5763719355590565569;
	add.s64 	%rd2448, %rd2447, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2429;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 28;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 28;
	mov.b64 	%rd2449, {%r1651, %r1650};
	shf.l.wrap.b32 	%r1652, %r1648, %r1649, 30;
	shf.l.wrap.b32 	%r1653, %r1649, %r1648, 30;
	mov.b64 	%rd2450, {%r1653, %r1652};
	xor.b64  	%rd2451, %rd2449, %rd2450;
	shf.l.wrap.b32 	%r1654, %r1648, %r1649, 25;
	shf.l.wrap.b32 	%r1655, %r1649, %r1648, 25;
	mov.b64 	%rd2452, {%r1655, %r1654};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	and.b64  	%rd2454, %rd2429, %rd2399;
	or.b64  	%rd2455, %rd2429, %rd2399;
	and.b64  	%rd2456, %rd2455, %rd2369;
	or.b64  	%rd2457, %rd2456, %rd2454;
	add.s64 	%rd2458, %rd2457, %rd2453;
	add.s64 	%rd2459, %rd2458, %rd2447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd3255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd3255;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 19;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 19;
	mov.b64 	%rd2460, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 3;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 3;
	mov.b64 	%rd2461, {%r1661, %r1660};
	xor.b64  	%rd2462, %rd2460, %rd2461;
	shr.u64 	%rd2463, %rd3255, 6;
	xor.b64  	%rd2464, %rd2462, %rd2463;
	add.s64 	%rd2465, %rd3249, %rd36;
	add.s64 	%rd3250, %rd2465, %rd2464;
	add.s64 	%rd2466, %rd3250, %rd2358;
	xor.b64  	%rd2467, %rd2418, %rd2388;
	and.b64  	%rd2468, %rd2448, %rd2467;
	xor.b64  	%rd2469, %rd2468, %rd2388;
	add.s64 	%rd2470, %rd2466, %rd2469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd2448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd2448;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 14;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 14;
	mov.b64 	%rd2471, {%r1665, %r1664};
	shf.r.wrap.b32 	%r1666, %r1663, %r1662, 18;
	shf.r.wrap.b32 	%r1667, %r1662, %r1663, 18;
	mov.b64 	%rd2472, {%r1667, %r1666};
	xor.b64  	%rd2473, %rd2471, %rd2472;
	shf.l.wrap.b32 	%r1668, %r1662, %r1663, 23;
	shf.l.wrap.b32 	%r1669, %r1663, %r1662, 23;
	mov.b64 	%rd2474, {%r1669, %r1668};
	xor.b64  	%rd2475, %rd2473, %rd2474;
	add.s64 	%rd2476, %rd2470, %rd2475;
	add.s64 	%rd2477, %rd2476, -4658551843659510044;
	add.s64 	%rd2478, %rd2477, %rd2369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd2459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd2459;
	}
	shf.r.wrap.b32 	%r1672, %r1671, %r1670, 28;
	shf.r.wrap.b32 	%r1673, %r1670, %r1671, 28;
	mov.b64 	%rd2479, {%r1673, %r1672};
	shf.l.wrap.b32 	%r1674, %r1670, %r1671, 30;
	shf.l.wrap.b32 	%r1675, %r1671, %r1670, 30;
	mov.b64 	%rd2480, {%r1675, %r1674};
	xor.b64  	%rd2481, %rd2479, %rd2480;
	shf.l.wrap.b32 	%r1676, %r1670, %r1671, 25;
	shf.l.wrap.b32 	%r1677, %r1671, %r1670, 25;
	mov.b64 	%rd2482, {%r1677, %r1676};
	xor.b64  	%rd2483, %rd2481, %rd2482;
	and.b64  	%rd2484, %rd2459, %rd2429;
	or.b64  	%rd2485, %rd2459, %rd2429;
	and.b64  	%rd2486, %rd2485, %rd2399;
	or.b64  	%rd2487, %rd2486, %rd2484;
	add.s64 	%rd2488, %rd2487, %rd2483;
	add.s64 	%rd2489, %rd2488, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd3252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd3252;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 19;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 19;
	mov.b64 	%rd2490, {%r1681, %r1680};
	shf.l.wrap.b32 	%r1682, %r1678, %r1679, 3;
	shf.l.wrap.b32 	%r1683, %r1679, %r1678, 3;
	mov.b64 	%rd2491, {%r1683, %r1682};
	xor.b64  	%rd2492, %rd2490, %rd2491;
	shr.u64 	%rd2493, %rd3252, 6;
	xor.b64  	%rd2494, %rd2492, %rd2493;
	add.s64 	%rd2495, %rd3247, %rd36;
	add.s64 	%rd3248, %rd2495, %rd2494;
	add.s64 	%rd2496, %rd3248, %rd2388;
	xor.b64  	%rd2497, %rd2448, %rd2418;
	and.b64  	%rd2498, %rd2478, %rd2497;
	xor.b64  	%rd2499, %rd2498, %rd2418;
	add.s64 	%rd2500, %rd2496, %rd2499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1684,%dummy}, %rd2478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1685}, %rd2478;
	}
	shf.r.wrap.b32 	%r1686, %r1685, %r1684, 14;
	shf.r.wrap.b32 	%r1687, %r1684, %r1685, 14;
	mov.b64 	%rd2501, {%r1687, %r1686};
	shf.r.wrap.b32 	%r1688, %r1685, %r1684, 18;
	shf.r.wrap.b32 	%r1689, %r1684, %r1685, 18;
	mov.b64 	%rd2502, {%r1689, %r1688};
	xor.b64  	%rd2503, %rd2501, %rd2502;
	shf.l.wrap.b32 	%r1690, %r1684, %r1685, 23;
	shf.l.wrap.b32 	%r1691, %r1685, %r1684, 23;
	mov.b64 	%rd2504, {%r1691, %r1690};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	add.s64 	%rd2506, %rd2500, %rd2505;
	add.s64 	%rd2507, %rd2506, -4116276920077217854;
	add.s64 	%rd3259, %rd2507, %rd2399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1692,%dummy}, %rd2489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd2489;
	}
	shf.r.wrap.b32 	%r1694, %r1693, %r1692, 28;
	shf.r.wrap.b32 	%r1695, %r1692, %r1693, 28;
	mov.b64 	%rd2508, {%r1695, %r1694};
	shf.l.wrap.b32 	%r1696, %r1692, %r1693, 30;
	shf.l.wrap.b32 	%r1697, %r1693, %r1692, 30;
	mov.b64 	%rd2509, {%r1697, %r1696};
	xor.b64  	%rd2510, %rd2508, %rd2509;
	shf.l.wrap.b32 	%r1698, %r1692, %r1693, 25;
	shf.l.wrap.b32 	%r1699, %r1693, %r1692, 25;
	mov.b64 	%rd2511, {%r1699, %r1698};
	xor.b64  	%rd2512, %rd2510, %rd2511;
	and.b64  	%rd2513, %rd2489, %rd2459;
	or.b64  	%rd2514, %rd2489, %rd2459;
	and.b64  	%rd2515, %rd2514, %rd2429;
	or.b64  	%rd2516, %rd2515, %rd2513;
	add.s64 	%rd2517, %rd2516, %rd2512;
	add.s64 	%rd3263, %rd2517, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1700,%dummy}, %rd3250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd3250;
	}
	shf.r.wrap.b32 	%r1702, %r1701, %r1700, 19;
	shf.r.wrap.b32 	%r1703, %r1700, %r1701, 19;
	mov.b64 	%rd2518, {%r1703, %r1702};
	shf.l.wrap.b32 	%r1704, %r1700, %r1701, 3;
	shf.l.wrap.b32 	%r1705, %r1701, %r1700, 3;
	mov.b64 	%rd2519, {%r1705, %r1704};
	xor.b64  	%rd2520, %rd2518, %rd2519;
	shr.u64 	%rd2521, %rd3250, 6;
	xor.b64  	%rd2522, %rd2520, %rd2521;
	add.s64 	%rd2523, %rd3245, %rd36;
	add.s64 	%rd3246, %rd2523, %rd2522;
	add.s64 	%rd2524, %rd3246, %rd2418;
	xor.b64  	%rd2525, %rd2478, %rd2448;
	and.b64  	%rd2526, %rd3259, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2448;
	add.s64 	%rd2528, %rd2524, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1706,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1707}, %rd3259;
	}
	shf.r.wrap.b32 	%r1708, %r1707, %r1706, 14;
	shf.r.wrap.b32 	%r1709, %r1706, %r1707, 14;
	mov.b64 	%rd2529, {%r1709, %r1708};
	shf.r.wrap.b32 	%r1710, %r1707, %r1706, 18;
	shf.r.wrap.b32 	%r1711, %r1706, %r1707, 18;
	mov.b64 	%rd2530, {%r1711, %r1710};
	xor.b64  	%rd2531, %rd2529, %rd2530;
	shf.l.wrap.b32 	%r1712, %r1706, %r1707, 23;
	shf.l.wrap.b32 	%r1713, %r1707, %r1706, 23;
	mov.b64 	%rd2532, {%r1713, %r1712};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	add.s64 	%rd2534, %rd2528, %rd2533;
	add.s64 	%rd2535, %rd2534, -3051310485924567259;
	add.s64 	%rd3266, %rd2535, %rd2429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1714,%dummy}, %rd3263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1715}, %rd3263;
	}
	shf.r.wrap.b32 	%r1716, %r1715, %r1714, 28;
	shf.r.wrap.b32 	%r1717, %r1714, %r1715, 28;
	mov.b64 	%rd2536, {%r1717, %r1716};
	shf.l.wrap.b32 	%r1718, %r1714, %r1715, 30;
	shf.l.wrap.b32 	%r1719, %r1715, %r1714, 30;
	mov.b64 	%rd2537, {%r1719, %r1718};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	shf.l.wrap.b32 	%r1720, %r1714, %r1715, 25;
	shf.l.wrap.b32 	%r1721, %r1715, %r1714, 25;
	mov.b64 	%rd2539, {%r1721, %r1720};
	xor.b64  	%rd2540, %rd2538, %rd2539;
	and.b64  	%rd2541, %rd3263, %rd2489;
	or.b64  	%rd2542, %rd3263, %rd2489;
	and.b64  	%rd2543, %rd2542, %rd2459;
	or.b64  	%rd2544, %rd2543, %rd2541;
	add.s64 	%rd2545, %rd2544, %rd2540;
	add.s64 	%rd3262, %rd2545, %rd2535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1722,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1723}, %rd3248;
	}
	shf.r.wrap.b32 	%r1724, %r1723, %r1722, 19;
	shf.r.wrap.b32 	%r1725, %r1722, %r1723, 19;
	mov.b64 	%rd2546, {%r1725, %r1724};
	shf.l.wrap.b32 	%r1726, %r1722, %r1723, 3;
	shf.l.wrap.b32 	%r1727, %r1723, %r1722, 3;
	mov.b64 	%rd2547, {%r1727, %r1726};
	xor.b64  	%rd2548, %rd2546, %rd2547;
	shr.u64 	%rd2549, %rd3248, 6;
	xor.b64  	%rd2550, %rd2548, %rd2549;
	add.s64 	%rd2551, %rd2550, %rd3244;
	add.s64 	%rd3258, %rd2551, %rd42;
	add.s64 	%rd2552, %rd3258, %rd2448;
	xor.b64  	%rd2553, %rd3259, %rd2478;
	and.b64  	%rd2554, %rd3266, %rd2553;
	xor.b64  	%rd2555, %rd2554, %rd2478;
	add.s64 	%rd2556, %rd2552, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd3266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd3266;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 14;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 14;
	mov.b64 	%rd2557, {%r1731, %r1730};
	shf.r.wrap.b32 	%r1732, %r1729, %r1728, 18;
	shf.r.wrap.b32 	%r1733, %r1728, %r1729, 18;
	mov.b64 	%rd2558, {%r1733, %r1732};
	xor.b64  	%rd2559, %rd2557, %rd2558;
	shf.l.wrap.b32 	%r1734, %r1728, %r1729, 23;
	shf.l.wrap.b32 	%r1735, %r1729, %r1728, 23;
	mov.b64 	%rd2560, {%r1735, %r1734};
	xor.b64  	%rd2561, %rd2559, %rd2560;
	add.s64 	%rd2562, %rd2556, %rd2561;
	add.s64 	%rd2563, %rd2562, 489312712824947311;
	add.s64 	%rd3265, %rd2563, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1736,%dummy}, %rd3262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd3262;
	}
	shf.r.wrap.b32 	%r1738, %r1737, %r1736, 28;
	shf.r.wrap.b32 	%r1739, %r1736, %r1737, 28;
	mov.b64 	%rd2564, {%r1739, %r1738};
	shf.l.wrap.b32 	%r1740, %r1736, %r1737, 30;
	shf.l.wrap.b32 	%r1741, %r1737, %r1736, 30;
	mov.b64 	%rd2565, {%r1741, %r1740};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	shf.l.wrap.b32 	%r1742, %r1736, %r1737, 25;
	shf.l.wrap.b32 	%r1743, %r1737, %r1736, 25;
	mov.b64 	%rd2567, {%r1743, %r1742};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	and.b64  	%rd2569, %rd3262, %rd3263;
	or.b64  	%rd2570, %rd3262, %rd3263;
	and.b64  	%rd2571, %rd2570, %rd2489;
	or.b64  	%rd2572, %rd2571, %rd2569;
	add.s64 	%rd2573, %rd2572, %rd2568;
	add.s64 	%rd3261, %rd2573, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd3246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd3246;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 19;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 19;
	mov.b64 	%rd2574, {%r1747, %r1746};
	shf.l.wrap.b32 	%r1748, %r1744, %r1745, 3;
	shf.l.wrap.b32 	%r1749, %r1745, %r1744, 3;
	mov.b64 	%rd2575, {%r1749, %r1748};
	xor.b64  	%rd2576, %rd2574, %rd2575;
	shr.u64 	%rd2577, %rd3246, 6;
	xor.b64  	%rd2578, %rd2576, %rd2577;
	shf.r.wrap.b32 	%r1750, %r1429, %r1428, 1;
	shf.r.wrap.b32 	%r1751, %r1428, %r1429, 1;
	mov.b64 	%rd2579, {%r1751, %r1750};
	shf.r.wrap.b32 	%r1752, %r1429, %r1428, 8;
	shf.r.wrap.b32 	%r1753, %r1428, %r1429, 8;
	mov.b64 	%rd2580, {%r1753, %r1752};
	xor.b64  	%rd2581, %rd2579, %rd2580;
	shr.u64 	%rd2582, %rd3256, 7;
	xor.b64  	%rd2583, %rd2581, %rd2582;
	add.s64 	%rd2584, %rd2578, %rd3243;
	add.s64 	%rd2585, %rd2584, %rd2583;
	add.s64 	%rd3254, %rd2585, 1536;
	add.s64 	%rd2586, %rd3254, %rd2478;
	xor.b64  	%rd2587, %rd3266, %rd3259;
	and.b64  	%rd2588, %rd3265, %rd2587;
	xor.b64  	%rd2589, %rd2588, %rd3259;
	add.s64 	%rd2590, %rd2586, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1754,%dummy}, %rd3265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1755}, %rd3265;
	}
	shf.r.wrap.b32 	%r1756, %r1755, %r1754, 14;
	shf.r.wrap.b32 	%r1757, %r1754, %r1755, 14;
	mov.b64 	%rd2591, {%r1757, %r1756};
	shf.r.wrap.b32 	%r1758, %r1755, %r1754, 18;
	shf.r.wrap.b32 	%r1759, %r1754, %r1755, 18;
	mov.b64 	%rd2592, {%r1759, %r1758};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	shf.l.wrap.b32 	%r1760, %r1754, %r1755, 23;
	shf.l.wrap.b32 	%r1761, %r1755, %r1754, 23;
	mov.b64 	%rd2594, {%r1761, %r1760};
	xor.b64  	%rd2595, %rd2593, %rd2594;
	add.s64 	%rd2596, %rd2590, %rd2595;
	add.s64 	%rd2597, %rd2596, 1452737877330783856;
	add.s64 	%rd3264, %rd2597, %rd2489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1762,%dummy}, %rd3261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1763}, %rd3261;
	}
	shf.r.wrap.b32 	%r1764, %r1763, %r1762, 28;
	shf.r.wrap.b32 	%r1765, %r1762, %r1763, 28;
	mov.b64 	%rd2598, {%r1765, %r1764};
	shf.l.wrap.b32 	%r1766, %r1762, %r1763, 30;
	shf.l.wrap.b32 	%r1767, %r1763, %r1762, 30;
	mov.b64 	%rd2599, {%r1767, %r1766};
	xor.b64  	%rd2600, %rd2598, %rd2599;
	shf.l.wrap.b32 	%r1768, %r1762, %r1763, 25;
	shf.l.wrap.b32 	%r1769, %r1763, %r1762, 25;
	mov.b64 	%rd2601, {%r1769, %r1768};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	and.b64  	%rd2603, %rd3261, %rd3262;
	or.b64  	%rd2604, %rd3261, %rd3262;
	and.b64  	%rd2605, %rd2604, %rd3263;
	or.b64  	%rd2606, %rd2605, %rd2603;
	add.s64 	%rd2607, %rd2606, %rd2602;
	add.s64 	%rd3260, %rd2607, %rd2597;
	mov.u32 	%r2223, 32;

$L__BB3_5:
	mov.u64 	%rd3201, K;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1770}, %rd3258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd3258;
	}
	shf.l.wrap.b32 	%r1772, %r1771, %r1770, 3;
	shf.l.wrap.b32 	%r1773, %r1770, %r1771, 3;
	mov.b64 	%rd2608, {%r1773, %r1772};
	shf.r.wrap.b32 	%r1774, %r1770, %r1771, 19;
	shf.r.wrap.b32 	%r1775, %r1771, %r1770, 19;
	mov.b64 	%rd2609, {%r1775, %r1774};
	xor.b64  	%rd2610, %rd2609, %rd2608;
	shr.u64 	%rd2611, %rd3258, 6;
	xor.b64  	%rd2612, %rd2610, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd3257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd3257;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 8;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 8;
	mov.b64 	%rd2613, {%r1779, %r1778};
	shf.r.wrap.b32 	%r1780, %r1777, %r1776, 1;
	shf.r.wrap.b32 	%r1781, %r1776, %r1777, 1;
	mov.b64 	%rd2614, {%r1781, %r1780};
	xor.b64  	%rd2615, %rd2614, %rd2613;
	shr.u64 	%rd2616, %rd3257, 7;
	xor.b64  	%rd2617, %rd2615, %rd2616;
	add.s64 	%rd2618, %rd2612, %rd3256;
	add.s64 	%rd2619, %rd2618, %rd3255;
	add.s64 	%rd3256, %rd2619, %rd2617;
	mul.wide.u32 	%rd2620, %r2223, 8;
	add.s64 	%rd2622, %rd3201, %rd2620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd3264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd3264;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 18;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 18;
	mov.b64 	%rd2623, {%r1785, %r1784};
	shf.r.wrap.b32 	%r1786, %r1783, %r1782, 14;
	shf.r.wrap.b32 	%r1787, %r1782, %r1783, 14;
	mov.b64 	%rd2624, {%r1787, %r1786};
	xor.b64  	%rd2625, %rd2624, %rd2623;
	shf.l.wrap.b32 	%r1788, %r1782, %r1783, 23;
	shf.l.wrap.b32 	%r1789, %r1783, %r1782, 23;
	mov.b64 	%rd2626, {%r1789, %r1788};
	xor.b64  	%rd2627, %rd2625, %rd2626;
	xor.b64  	%rd2628, %rd3265, %rd3266;
	and.b64  	%rd2629, %rd3264, %rd2628;
	xor.b64  	%rd2630, %rd2629, %rd3266;
	add.s64 	%rd2631, %rd2627, %rd2630;
	add.s64 	%rd2632, %rd2631, %rd3259;
	ld.const.u64 	%rd2633, [%rd2622];
	add.s64 	%rd2634, %rd2632, %rd2633;
	add.s64 	%rd2635, %rd2634, %rd3256;
	add.s64 	%rd2636, %rd2635, %rd3263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1790}, %rd3260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd3260;
	}
	shf.l.wrap.b32 	%r1792, %r1791, %r1790, 30;
	shf.l.wrap.b32 	%r1793, %r1790, %r1791, 30;
	mov.b64 	%rd2637, {%r1793, %r1792};
	shf.r.wrap.b32 	%r1794, %r1790, %r1791, 28;
	shf.r.wrap.b32 	%r1795, %r1791, %r1790, 28;
	mov.b64 	%rd2638, {%r1795, %r1794};
	xor.b64  	%rd2639, %rd2638, %rd2637;
	shf.l.wrap.b32 	%r1796, %r1791, %r1790, 25;
	shf.l.wrap.b32 	%r1797, %r1790, %r1791, 25;
	mov.b64 	%rd2640, {%r1797, %r1796};
	xor.b64  	%rd2641, %rd2639, %rd2640;
	or.b64  	%rd2642, %rd3260, %rd3261;
	and.b64  	%rd2643, %rd2642, %rd3262;
	and.b64  	%rd2644, %rd3260, %rd3261;
	or.b64  	%rd2645, %rd2643, %rd2644;
	add.s64 	%rd2646, %rd2645, %rd2641;
	add.s64 	%rd2647, %rd2646, %rd2635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd3254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd3254;
	}
	shf.l.wrap.b32 	%r1800, %r1799, %r1798, 3;
	shf.l.wrap.b32 	%r1801, %r1798, %r1799, 3;
	mov.b64 	%rd2648, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1798, %r1799, 19;
	shf.r.wrap.b32 	%r1803, %r1799, %r1798, 19;
	mov.b64 	%rd2649, {%r1803, %r1802};
	xor.b64  	%rd2650, %rd2649, %rd2648;
	shr.u64 	%rd2651, %rd3254, 6;
	xor.b64  	%rd2652, %rd2650, %rd2651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd3253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd3253;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 8;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 8;
	mov.b64 	%rd2653, {%r1807, %r1806};
	shf.r.wrap.b32 	%r1808, %r1805, %r1804, 1;
	shf.r.wrap.b32 	%r1809, %r1804, %r1805, 1;
	mov.b64 	%rd2654, {%r1809, %r1808};
	xor.b64  	%rd2655, %rd2654, %rd2653;
	shr.u64 	%rd2656, %rd3253, 7;
	xor.b64  	%rd2657, %rd2655, %rd2656;
	add.s64 	%rd2658, %rd2652, %rd3257;
	add.s64 	%rd2659, %rd2658, %rd3252;
	add.s64 	%rd3257, %rd2659, %rd2657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1810,%dummy}, %rd2636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1811}, %rd2636;
	}
	shf.r.wrap.b32 	%r1812, %r1811, %r1810, 14;
	shf.r.wrap.b32 	%r1813, %r1810, %r1811, 14;
	mov.b64 	%rd2660, {%r1813, %r1812};
	shf.r.wrap.b32 	%r1814, %r1811, %r1810, 18;
	shf.r.wrap.b32 	%r1815, %r1810, %r1811, 18;
	mov.b64 	%rd2661, {%r1815, %r1814};
	xor.b64  	%rd2662, %rd2660, %rd2661;
	shf.l.wrap.b32 	%r1816, %r1810, %r1811, 23;
	shf.l.wrap.b32 	%r1817, %r1811, %r1810, 23;
	mov.b64 	%rd2663, {%r1817, %r1816};
	xor.b64  	%rd2664, %rd2662, %rd2663;
	xor.b64  	%rd2665, %rd3264, %rd3265;
	and.b64  	%rd2666, %rd2636, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd3265;
	ld.const.u64 	%rd2668, [%rd2622+8];
	add.s64 	%rd2669, %rd2668, %rd3266;
	add.s64 	%rd2670, %rd2669, %rd3257;
	add.s64 	%rd2671, %rd2670, %rd2667;
	add.s64 	%rd2672, %rd2671, %rd2664;
	add.s64 	%rd2673, %rd2672, %rd3262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1819}, %rd2647;
	}
	shf.r.wrap.b32 	%r1820, %r1819, %r1818, 28;
	shf.r.wrap.b32 	%r1821, %r1818, %r1819, 28;
	mov.b64 	%rd2674, {%r1821, %r1820};
	shf.l.wrap.b32 	%r1822, %r1818, %r1819, 30;
	shf.l.wrap.b32 	%r1823, %r1819, %r1818, 30;
	mov.b64 	%rd2675, {%r1823, %r1822};
	xor.b64  	%rd2676, %rd2674, %rd2675;
	shf.l.wrap.b32 	%r1824, %r1818, %r1819, 25;
	shf.l.wrap.b32 	%r1825, %r1819, %r1818, 25;
	mov.b64 	%rd2677, {%r1825, %r1824};
	xor.b64  	%rd2678, %rd2676, %rd2677;
	and.b64  	%rd2679, %rd2647, %rd3260;
	or.b64  	%rd2680, %rd2647, %rd3260;
	and.b64  	%rd2681, %rd2680, %rd3261;
	or.b64  	%rd2682, %rd2681, %rd2679;
	add.s64 	%rd2683, %rd2682, %rd2678;
	add.s64 	%rd2684, %rd2683, %rd2672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd3256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd3256;
	}
	shf.r.wrap.b32 	%r1828, %r1827, %r1826, 19;
	shf.r.wrap.b32 	%r1829, %r1826, %r1827, 19;
	mov.b64 	%rd2685, {%r1829, %r1828};
	shf.l.wrap.b32 	%r1830, %r1826, %r1827, 3;
	shf.l.wrap.b32 	%r1831, %r1827, %r1826, 3;
	mov.b64 	%rd2686, {%r1831, %r1830};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	shr.u64 	%rd2688, %rd3256, 6;
	xor.b64  	%rd2689, %rd2687, %rd2688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1832,%dummy}, %rd3251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd3251;
	}
	shf.r.wrap.b32 	%r1834, %r1833, %r1832, 8;
	shf.r.wrap.b32 	%r1835, %r1832, %r1833, 8;
	mov.b64 	%rd2690, {%r1835, %r1834};
	shf.r.wrap.b32 	%r1836, %r1833, %r1832, 1;
	shf.r.wrap.b32 	%r1837, %r1832, %r1833, 1;
	mov.b64 	%rd2691, {%r1837, %r1836};
	xor.b64  	%rd2692, %rd2691, %rd2690;
	shr.u64 	%rd2693, %rd3251, 7;
	xor.b64  	%rd2694, %rd2692, %rd2693;
	add.s64 	%rd2695, %rd2689, %rd3253;
	add.s64 	%rd2696, %rd2695, %rd3250;
	add.s64 	%rd3253, %rd2696, %rd2694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd2673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd2673;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 14;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 14;
	mov.b64 	%rd2697, {%r1841, %r1840};
	shf.r.wrap.b32 	%r1842, %r1839, %r1838, 18;
	shf.r.wrap.b32 	%r1843, %r1838, %r1839, 18;
	mov.b64 	%rd2698, {%r1843, %r1842};
	xor.b64  	%rd2699, %rd2697, %rd2698;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 23;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 23;
	mov.b64 	%rd2700, {%r1845, %r1844};
	xor.b64  	%rd2701, %rd2699, %rd2700;
	xor.b64  	%rd2702, %rd2636, %rd3264;
	and.b64  	%rd2703, %rd2673, %rd2702;
	xor.b64  	%rd2704, %rd2703, %rd3264;
	ld.const.u64 	%rd2705, [%rd2622+16];
	add.s64 	%rd2706, %rd2705, %rd3265;
	add.s64 	%rd2707, %rd2706, %rd3253;
	add.s64 	%rd2708, %rd2707, %rd2704;
	add.s64 	%rd2709, %rd2708, %rd2701;
	add.s64 	%rd2710, %rd2709, %rd3261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd2684;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 28;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 28;
	mov.b64 	%rd2711, {%r1849, %r1848};
	shf.l.wrap.b32 	%r1850, %r1846, %r1847, 30;
	shf.l.wrap.b32 	%r1851, %r1847, %r1846, 30;
	mov.b64 	%rd2712, {%r1851, %r1850};
	xor.b64  	%rd2713, %rd2711, %rd2712;
	shf.l.wrap.b32 	%r1852, %r1846, %r1847, 25;
	shf.l.wrap.b32 	%r1853, %r1847, %r1846, 25;
	mov.b64 	%rd2714, {%r1853, %r1852};
	xor.b64  	%rd2715, %rd2713, %rd2714;
	and.b64  	%rd2716, %rd2684, %rd2647;
	or.b64  	%rd2717, %rd2684, %rd2647;
	and.b64  	%rd2718, %rd2717, %rd3260;
	or.b64  	%rd2719, %rd2718, %rd2716;
	add.s64 	%rd2720, %rd2719, %rd2715;
	add.s64 	%rd2721, %rd2720, %rd2709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd3257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd3257;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 19;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 19;
	mov.b64 	%rd2722, {%r1857, %r1856};
	shf.l.wrap.b32 	%r1858, %r1854, %r1855, 3;
	shf.l.wrap.b32 	%r1859, %r1855, %r1854, 3;
	mov.b64 	%rd2723, {%r1859, %r1858};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	shr.u64 	%rd2725, %rd3257, 6;
	xor.b64  	%rd2726, %rd2724, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1860,%dummy}, %rd3249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd3249;
	}
	shf.r.wrap.b32 	%r1862, %r1861, %r1860, 8;
	shf.r.wrap.b32 	%r1863, %r1860, %r1861, 8;
	mov.b64 	%rd2727, {%r1863, %r1862};
	shf.r.wrap.b32 	%r1864, %r1861, %r1860, 1;
	shf.r.wrap.b32 	%r1865, %r1860, %r1861, 1;
	mov.b64 	%rd2728, {%r1865, %r1864};
	xor.b64  	%rd2729, %rd2728, %rd2727;
	shr.u64 	%rd2730, %rd3249, 7;
	xor.b64  	%rd2731, %rd2729, %rd2730;
	add.s64 	%rd2732, %rd2726, %rd3251;
	add.s64 	%rd2733, %rd2732, %rd3248;
	add.s64 	%rd3251, %rd2733, %rd2731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1866,%dummy}, %rd2710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1867}, %rd2710;
	}
	shf.r.wrap.b32 	%r1868, %r1867, %r1866, 14;
	shf.r.wrap.b32 	%r1869, %r1866, %r1867, 14;
	mov.b64 	%rd2734, {%r1869, %r1868};
	shf.r.wrap.b32 	%r1870, %r1867, %r1866, 18;
	shf.r.wrap.b32 	%r1871, %r1866, %r1867, 18;
	mov.b64 	%rd2735, {%r1871, %r1870};
	xor.b64  	%rd2736, %rd2734, %rd2735;
	shf.l.wrap.b32 	%r1872, %r1866, %r1867, 23;
	shf.l.wrap.b32 	%r1873, %r1867, %r1866, 23;
	mov.b64 	%rd2737, {%r1873, %r1872};
	xor.b64  	%rd2738, %rd2736, %rd2737;
	xor.b64  	%rd2739, %rd2673, %rd2636;
	and.b64  	%rd2740, %rd2710, %rd2739;
	xor.b64  	%rd2741, %rd2740, %rd2636;
	ld.const.u64 	%rd2742, [%rd2622+24];
	add.s64 	%rd2743, %rd2742, %rd3264;
	add.s64 	%rd2744, %rd2743, %rd3251;
	add.s64 	%rd2745, %rd2744, %rd2741;
	add.s64 	%rd2746, %rd2745, %rd2738;
	add.s64 	%rd2747, %rd2746, %rd3260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1874,%dummy}, %rd2721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1875}, %rd2721;
	}
	shf.r.wrap.b32 	%r1876, %r1875, %r1874, 28;
	shf.r.wrap.b32 	%r1877, %r1874, %r1875, 28;
	mov.b64 	%rd2748, {%r1877, %r1876};
	shf.l.wrap.b32 	%r1878, %r1874, %r1875, 30;
	shf.l.wrap.b32 	%r1879, %r1875, %r1874, 30;
	mov.b64 	%rd2749, {%r1879, %r1878};
	xor.b64  	%rd2750, %rd2748, %rd2749;
	shf.l.wrap.b32 	%r1880, %r1874, %r1875, 25;
	shf.l.wrap.b32 	%r1881, %r1875, %r1874, 25;
	mov.b64 	%rd2751, {%r1881, %r1880};
	xor.b64  	%rd2752, %rd2750, %rd2751;
	and.b64  	%rd2753, %rd2721, %rd2684;
	or.b64  	%rd2754, %rd2721, %rd2684;
	and.b64  	%rd2755, %rd2754, %rd2647;
	or.b64  	%rd2756, %rd2755, %rd2753;
	add.s64 	%rd2757, %rd2756, %rd2752;
	add.s64 	%rd2758, %rd2757, %rd2746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd3253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd3253;
	}
	shf.r.wrap.b32 	%r1884, %r1883, %r1882, 19;
	shf.r.wrap.b32 	%r1885, %r1882, %r1883, 19;
	mov.b64 	%rd2759, {%r1885, %r1884};
	shf.l.wrap.b32 	%r1886, %r1882, %r1883, 3;
	shf.l.wrap.b32 	%r1887, %r1883, %r1882, 3;
	mov.b64 	%rd2760, {%r1887, %r1886};
	xor.b64  	%rd2761, %rd2759, %rd2760;
	shr.u64 	%rd2762, %rd3253, 6;
	xor.b64  	%rd2763, %rd2761, %rd2762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1888,%dummy}, %rd3247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1889}, %rd3247;
	}
	shf.r.wrap.b32 	%r1890, %r1889, %r1888, 8;
	shf.r.wrap.b32 	%r1891, %r1888, %r1889, 8;
	mov.b64 	%rd2764, {%r1891, %r1890};
	shf.r.wrap.b32 	%r1892, %r1889, %r1888, 1;
	shf.r.wrap.b32 	%r1893, %r1888, %r1889, 1;
	mov.b64 	%rd2765, {%r1893, %r1892};
	xor.b64  	%rd2766, %rd2765, %rd2764;
	shr.u64 	%rd2767, %rd3247, 7;
	xor.b64  	%rd2768, %rd2766, %rd2767;
	add.s64 	%rd2769, %rd2763, %rd3249;
	add.s64 	%rd2770, %rd2769, %rd3246;
	add.s64 	%rd3249, %rd2770, %rd2768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1895}, %rd2747;
	}
	shf.r.wrap.b32 	%r1896, %r1895, %r1894, 14;
	shf.r.wrap.b32 	%r1897, %r1894, %r1895, 14;
	mov.b64 	%rd2771, {%r1897, %r1896};
	shf.r.wrap.b32 	%r1898, %r1895, %r1894, 18;
	shf.r.wrap.b32 	%r1899, %r1894, %r1895, 18;
	mov.b64 	%rd2772, {%r1899, %r1898};
	xor.b64  	%rd2773, %rd2771, %rd2772;
	shf.l.wrap.b32 	%r1900, %r1894, %r1895, 23;
	shf.l.wrap.b32 	%r1901, %r1895, %r1894, 23;
	mov.b64 	%rd2774, {%r1901, %r1900};
	xor.b64  	%rd2775, %rd2773, %rd2774;
	xor.b64  	%rd2776, %rd2710, %rd2673;
	and.b64  	%rd2777, %rd2747, %rd2776;
	xor.b64  	%rd2778, %rd2777, %rd2673;
	ld.const.u64 	%rd2779, [%rd2622+32];
	add.s64 	%rd2780, %rd2779, %rd2636;
	add.s64 	%rd2781, %rd2780, %rd3249;
	add.s64 	%rd2782, %rd2781, %rd2778;
	add.s64 	%rd2783, %rd2782, %rd2775;
	add.s64 	%rd2784, %rd2783, %rd2647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd2758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1903}, %rd2758;
	}
	shf.r.wrap.b32 	%r1904, %r1903, %r1902, 28;
	shf.r.wrap.b32 	%r1905, %r1902, %r1903, 28;
	mov.b64 	%rd2785, {%r1905, %r1904};
	shf.l.wrap.b32 	%r1906, %r1902, %r1903, 30;
	shf.l.wrap.b32 	%r1907, %r1903, %r1902, 30;
	mov.b64 	%rd2786, {%r1907, %r1906};
	xor.b64  	%rd2787, %rd2785, %rd2786;
	shf.l.wrap.b32 	%r1908, %r1902, %r1903, 25;
	shf.l.wrap.b32 	%r1909, %r1903, %r1902, 25;
	mov.b64 	%rd2788, {%r1909, %r1908};
	xor.b64  	%rd2789, %rd2787, %rd2788;
	and.b64  	%rd2790, %rd2758, %rd2721;
	or.b64  	%rd2791, %rd2758, %rd2721;
	and.b64  	%rd2792, %rd2791, %rd2684;
	or.b64  	%rd2793, %rd2792, %rd2790;
	add.s64 	%rd2794, %rd2793, %rd2789;
	add.s64 	%rd2795, %rd2794, %rd2783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1910,%dummy}, %rd3251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1911}, %rd3251;
	}
	shf.r.wrap.b32 	%r1912, %r1911, %r1910, 19;
	shf.r.wrap.b32 	%r1913, %r1910, %r1911, 19;
	mov.b64 	%rd2796, {%r1913, %r1912};
	shf.l.wrap.b32 	%r1914, %r1910, %r1911, 3;
	shf.l.wrap.b32 	%r1915, %r1911, %r1910, 3;
	mov.b64 	%rd2797, {%r1915, %r1914};
	xor.b64  	%rd2798, %rd2796, %rd2797;
	shr.u64 	%rd2799, %rd3251, 6;
	xor.b64  	%rd2800, %rd2798, %rd2799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd3245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd3245;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 8;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 8;
	mov.b64 	%rd2801, {%r1919, %r1918};
	shf.r.wrap.b32 	%r1920, %r1917, %r1916, 1;
	shf.r.wrap.b32 	%r1921, %r1916, %r1917, 1;
	mov.b64 	%rd2802, {%r1921, %r1920};
	xor.b64  	%rd2803, %rd2802, %rd2801;
	shr.u64 	%rd2804, %rd3245, 7;
	xor.b64  	%rd2805, %rd2803, %rd2804;
	add.s64 	%rd2806, %rd2800, %rd3247;
	add.s64 	%rd2807, %rd2806, %rd3258;
	add.s64 	%rd3247, %rd2807, %rd2805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1922,%dummy}, %rd2784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1923}, %rd2784;
	}
	shf.r.wrap.b32 	%r1924, %r1923, %r1922, 14;
	shf.r.wrap.b32 	%r1925, %r1922, %r1923, 14;
	mov.b64 	%rd2808, {%r1925, %r1924};
	shf.r.wrap.b32 	%r1926, %r1923, %r1922, 18;
	shf.r.wrap.b32 	%r1927, %r1922, %r1923, 18;
	mov.b64 	%rd2809, {%r1927, %r1926};
	xor.b64  	%rd2810, %rd2808, %rd2809;
	shf.l.wrap.b32 	%r1928, %r1922, %r1923, 23;
	shf.l.wrap.b32 	%r1929, %r1923, %r1922, 23;
	mov.b64 	%rd2811, {%r1929, %r1928};
	xor.b64  	%rd2812, %rd2810, %rd2811;
	xor.b64  	%rd2813, %rd2747, %rd2710;
	and.b64  	%rd2814, %rd2784, %rd2813;
	xor.b64  	%rd2815, %rd2814, %rd2710;
	ld.const.u64 	%rd2816, [%rd2622+40];
	add.s64 	%rd2817, %rd2816, %rd2673;
	add.s64 	%rd2818, %rd2817, %rd3247;
	add.s64 	%rd2819, %rd2818, %rd2815;
	add.s64 	%rd2820, %rd2819, %rd2812;
	add.s64 	%rd2821, %rd2820, %rd2684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd2795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd2795;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 28;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 28;
	mov.b64 	%rd2822, {%r1933, %r1932};
	shf.l.wrap.b32 	%r1934, %r1930, %r1931, 30;
	shf.l.wrap.b32 	%r1935, %r1931, %r1930, 30;
	mov.b64 	%rd2823, {%r1935, %r1934};
	xor.b64  	%rd2824, %rd2822, %rd2823;
	shf.l.wrap.b32 	%r1936, %r1930, %r1931, 25;
	shf.l.wrap.b32 	%r1937, %r1931, %r1930, 25;
	mov.b64 	%rd2825, {%r1937, %r1936};
	xor.b64  	%rd2826, %rd2824, %rd2825;
	and.b64  	%rd2827, %rd2795, %rd2758;
	or.b64  	%rd2828, %rd2795, %rd2758;
	and.b64  	%rd2829, %rd2828, %rd2721;
	or.b64  	%rd2830, %rd2829, %rd2827;
	add.s64 	%rd2831, %rd2830, %rd2826;
	add.s64 	%rd2832, %rd2831, %rd2820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1938,%dummy}, %rd3249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1939}, %rd3249;
	}
	shf.r.wrap.b32 	%r1940, %r1939, %r1938, 19;
	shf.r.wrap.b32 	%r1941, %r1938, %r1939, 19;
	mov.b64 	%rd2833, {%r1941, %r1940};
	shf.l.wrap.b32 	%r1942, %r1938, %r1939, 3;
	shf.l.wrap.b32 	%r1943, %r1939, %r1938, 3;
	mov.b64 	%rd2834, {%r1943, %r1942};
	xor.b64  	%rd2835, %rd2833, %rd2834;
	shr.u64 	%rd2836, %rd3249, 6;
	xor.b64  	%rd2837, %rd2835, %rd2836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1944,%dummy}, %rd3244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1945}, %rd3244;
	}
	shf.r.wrap.b32 	%r1946, %r1945, %r1944, 8;
	shf.r.wrap.b32 	%r1947, %r1944, %r1945, 8;
	mov.b64 	%rd2838, {%r1947, %r1946};
	shf.r.wrap.b32 	%r1948, %r1945, %r1944, 1;
	shf.r.wrap.b32 	%r1949, %r1944, %r1945, 1;
	mov.b64 	%rd2839, {%r1949, %r1948};
	xor.b64  	%rd2840, %rd2839, %rd2838;
	shr.u64 	%rd2841, %rd3244, 7;
	xor.b64  	%rd2842, %rd2840, %rd2841;
	add.s64 	%rd2843, %rd2837, %rd3245;
	add.s64 	%rd2844, %rd2843, %rd3254;
	add.s64 	%rd3245, %rd2844, %rd2842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd2821;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 14;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 14;
	mov.b64 	%rd2845, {%r1953, %r1952};
	shf.r.wrap.b32 	%r1954, %r1951, %r1950, 18;
	shf.r.wrap.b32 	%r1955, %r1950, %r1951, 18;
	mov.b64 	%rd2846, {%r1955, %r1954};
	xor.b64  	%rd2847, %rd2845, %rd2846;
	shf.l.wrap.b32 	%r1956, %r1950, %r1951, 23;
	shf.l.wrap.b32 	%r1957, %r1951, %r1950, 23;
	mov.b64 	%rd2848, {%r1957, %r1956};
	xor.b64  	%rd2849, %rd2847, %rd2848;
	xor.b64  	%rd2850, %rd2784, %rd2747;
	and.b64  	%rd2851, %rd2821, %rd2850;
	xor.b64  	%rd2852, %rd2851, %rd2747;
	ld.const.u64 	%rd2853, [%rd2622+48];
	add.s64 	%rd2854, %rd2853, %rd2710;
	add.s64 	%rd2855, %rd2854, %rd3245;
	add.s64 	%rd2856, %rd2855, %rd2852;
	add.s64 	%rd2857, %rd2856, %rd2849;
	add.s64 	%rd2858, %rd2857, %rd2721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1958,%dummy}, %rd2832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1959}, %rd2832;
	}
	shf.r.wrap.b32 	%r1960, %r1959, %r1958, 28;
	shf.r.wrap.b32 	%r1961, %r1958, %r1959, 28;
	mov.b64 	%rd2859, {%r1961, %r1960};
	shf.l.wrap.b32 	%r1962, %r1958, %r1959, 30;
	shf.l.wrap.b32 	%r1963, %r1959, %r1958, 30;
	mov.b64 	%rd2860, {%r1963, %r1962};
	xor.b64  	%rd2861, %rd2859, %rd2860;
	shf.l.wrap.b32 	%r1964, %r1958, %r1959, 25;
	shf.l.wrap.b32 	%r1965, %r1959, %r1958, 25;
	mov.b64 	%rd2862, {%r1965, %r1964};
	xor.b64  	%rd2863, %rd2861, %rd2862;
	and.b64  	%rd2864, %rd2832, %rd2795;
	or.b64  	%rd2865, %rd2832, %rd2795;
	and.b64  	%rd2866, %rd2865, %rd2758;
	or.b64  	%rd2867, %rd2866, %rd2864;
	add.s64 	%rd2868, %rd2867, %rd2863;
	add.s64 	%rd2869, %rd2868, %rd2857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1966,%dummy}, %rd3247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1967}, %rd3247;
	}
	shf.r.wrap.b32 	%r1968, %r1967, %r1966, 19;
	shf.r.wrap.b32 	%r1969, %r1966, %r1967, 19;
	mov.b64 	%rd2870, {%r1969, %r1968};
	shf.l.wrap.b32 	%r1970, %r1966, %r1967, 3;
	shf.l.wrap.b32 	%r1971, %r1967, %r1966, 3;
	mov.b64 	%rd2871, {%r1971, %r1970};
	xor.b64  	%rd2872, %rd2870, %rd2871;
	shr.u64 	%rd2873, %rd3247, 6;
	xor.b64  	%rd2874, %rd2872, %rd2873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1972,%dummy}, %rd3243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1973}, %rd3243;
	}
	shf.r.wrap.b32 	%r1974, %r1973, %r1972, 8;
	shf.r.wrap.b32 	%r1975, %r1972, %r1973, 8;
	mov.b64 	%rd2875, {%r1975, %r1974};
	shf.r.wrap.b32 	%r1976, %r1973, %r1972, 1;
	shf.r.wrap.b32 	%r1977, %r1972, %r1973, 1;
	mov.b64 	%rd2876, {%r1977, %r1976};
	xor.b64  	%rd2877, %rd2876, %rd2875;
	shr.u64 	%rd2878, %rd3243, 7;
	xor.b64  	%rd2879, %rd2877, %rd2878;
	add.s64 	%rd2880, %rd2874, %rd3244;
	add.s64 	%rd2881, %rd2880, %rd3256;
	add.s64 	%rd3244, %rd2881, %rd2879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd2858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1979}, %rd2858;
	}
	shf.r.wrap.b32 	%r1980, %r1979, %r1978, 14;
	shf.r.wrap.b32 	%r1981, %r1978, %r1979, 14;
	mov.b64 	%rd2882, {%r1981, %r1980};
	shf.r.wrap.b32 	%r1982, %r1979, %r1978, 18;
	shf.r.wrap.b32 	%r1983, %r1978, %r1979, 18;
	mov.b64 	%rd2883, {%r1983, %r1982};
	xor.b64  	%rd2884, %rd2882, %rd2883;
	shf.l.wrap.b32 	%r1984, %r1978, %r1979, 23;
	shf.l.wrap.b32 	%r1985, %r1979, %r1978, 23;
	mov.b64 	%rd2885, {%r1985, %r1984};
	xor.b64  	%rd2886, %rd2884, %rd2885;
	xor.b64  	%rd2887, %rd2821, %rd2784;
	and.b64  	%rd2888, %rd2858, %rd2887;
	xor.b64  	%rd2889, %rd2888, %rd2784;
	ld.const.u64 	%rd2890, [%rd2622+56];
	add.s64 	%rd2891, %rd2890, %rd2747;
	add.s64 	%rd2892, %rd2891, %rd3244;
	add.s64 	%rd2893, %rd2892, %rd2889;
	add.s64 	%rd2894, %rd2893, %rd2886;
	add.s64 	%rd2895, %rd2894, %rd2758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1986,%dummy}, %rd2869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1987}, %rd2869;
	}
	shf.r.wrap.b32 	%r1988, %r1987, %r1986, 28;
	shf.r.wrap.b32 	%r1989, %r1986, %r1987, 28;
	mov.b64 	%rd2896, {%r1989, %r1988};
	shf.l.wrap.b32 	%r1990, %r1986, %r1987, 30;
	shf.l.wrap.b32 	%r1991, %r1987, %r1986, 30;
	mov.b64 	%rd2897, {%r1991, %r1990};
	xor.b64  	%rd2898, %rd2896, %rd2897;
	shf.l.wrap.b32 	%r1992, %r1986, %r1987, 25;
	shf.l.wrap.b32 	%r1993, %r1987, %r1986, 25;
	mov.b64 	%rd2899, {%r1993, %r1992};
	xor.b64  	%rd2900, %rd2898, %rd2899;
	and.b64  	%rd2901, %rd2869, %rd2832;
	or.b64  	%rd2902, %rd2869, %rd2832;
	and.b64  	%rd2903, %rd2902, %rd2795;
	or.b64  	%rd2904, %rd2903, %rd2901;
	add.s64 	%rd2905, %rd2904, %rd2900;
	add.s64 	%rd2906, %rd2905, %rd2894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd3245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd3245;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 19;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 19;
	mov.b64 	%rd2907, {%r1997, %r1996};
	shf.l.wrap.b32 	%r1998, %r1994, %r1995, 3;
	shf.l.wrap.b32 	%r1999, %r1995, %r1994, 3;
	mov.b64 	%rd2908, {%r1999, %r1998};
	xor.b64  	%rd2909, %rd2907, %rd2908;
	shr.u64 	%rd2910, %rd3245, 6;
	xor.b64  	%rd2911, %rd2909, %rd2910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd3255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd3255;
	}
	shf.r.wrap.b32 	%r2002, %r2001, %r2000, 8;
	shf.r.wrap.b32 	%r2003, %r2000, %r2001, 8;
	mov.b64 	%rd2912, {%r2003, %r2002};
	shf.r.wrap.b32 	%r2004, %r2001, %r2000, 1;
	shf.r.wrap.b32 	%r2005, %r2000, %r2001, 1;
	mov.b64 	%rd2913, {%r2005, %r2004};
	xor.b64  	%rd2914, %rd2913, %rd2912;
	shr.u64 	%rd2915, %rd3255, 7;
	xor.b64  	%rd2916, %rd2914, %rd2915;
	add.s64 	%rd2917, %rd2911, %rd3243;
	add.s64 	%rd2918, %rd2917, %rd3257;
	add.s64 	%rd3243, %rd2918, %rd2916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2006,%dummy}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2007}, %rd2895;
	}
	shf.r.wrap.b32 	%r2008, %r2007, %r2006, 14;
	shf.r.wrap.b32 	%r2009, %r2006, %r2007, 14;
	mov.b64 	%rd2919, {%r2009, %r2008};
	shf.r.wrap.b32 	%r2010, %r2007, %r2006, 18;
	shf.r.wrap.b32 	%r2011, %r2006, %r2007, 18;
	mov.b64 	%rd2920, {%r2011, %r2010};
	xor.b64  	%rd2921, %rd2919, %rd2920;
	shf.l.wrap.b32 	%r2012, %r2006, %r2007, 23;
	shf.l.wrap.b32 	%r2013, %r2007, %r2006, 23;
	mov.b64 	%rd2922, {%r2013, %r2012};
	xor.b64  	%rd2923, %rd2921, %rd2922;
	xor.b64  	%rd2924, %rd2858, %rd2821;
	and.b64  	%rd2925, %rd2895, %rd2924;
	xor.b64  	%rd2926, %rd2925, %rd2821;
	ld.const.u64 	%rd2927, [%rd2622+64];
	add.s64 	%rd2928, %rd2927, %rd2784;
	add.s64 	%rd2929, %rd2928, %rd3243;
	add.s64 	%rd2930, %rd2929, %rd2926;
	add.s64 	%rd2931, %rd2930, %rd2923;
	add.s64 	%rd2932, %rd2931, %rd2795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2014,%dummy}, %rd2906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2015}, %rd2906;
	}
	shf.r.wrap.b32 	%r2016, %r2015, %r2014, 28;
	shf.r.wrap.b32 	%r2017, %r2014, %r2015, 28;
	mov.b64 	%rd2933, {%r2017, %r2016};
	shf.l.wrap.b32 	%r2018, %r2014, %r2015, 30;
	shf.l.wrap.b32 	%r2019, %r2015, %r2014, 30;
	mov.b64 	%rd2934, {%r2019, %r2018};
	xor.b64  	%rd2935, %rd2933, %rd2934;
	shf.l.wrap.b32 	%r2020, %r2014, %r2015, 25;
	shf.l.wrap.b32 	%r2021, %r2015, %r2014, 25;
	mov.b64 	%rd2936, {%r2021, %r2020};
	xor.b64  	%rd2937, %rd2935, %rd2936;
	and.b64  	%rd2938, %rd2906, %rd2869;
	or.b64  	%rd2939, %rd2906, %rd2869;
	and.b64  	%rd2940, %rd2939, %rd2832;
	or.b64  	%rd2941, %rd2940, %rd2938;
	add.s64 	%rd2942, %rd2941, %rd2937;
	add.s64 	%rd2943, %rd2942, %rd2931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2022,%dummy}, %rd3244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2023}, %rd3244;
	}
	shf.r.wrap.b32 	%r2024, %r2023, %r2022, 19;
	shf.r.wrap.b32 	%r2025, %r2022, %r2023, 19;
	mov.b64 	%rd2944, {%r2025, %r2024};
	shf.l.wrap.b32 	%r2026, %r2022, %r2023, 3;
	shf.l.wrap.b32 	%r2027, %r2023, %r2022, 3;
	mov.b64 	%rd2945, {%r2027, %r2026};
	xor.b64  	%rd2946, %rd2944, %rd2945;
	shr.u64 	%rd2947, %rd3244, 6;
	xor.b64  	%rd2948, %rd2946, %rd2947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd3252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd3252;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 8;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 8;
	mov.b64 	%rd2949, {%r2031, %r2030};
	shf.r.wrap.b32 	%r2032, %r2029, %r2028, 1;
	shf.r.wrap.b32 	%r2033, %r2028, %r2029, 1;
	mov.b64 	%rd2950, {%r2033, %r2032};
	xor.b64  	%rd2951, %rd2950, %rd2949;
	shr.u64 	%rd2952, %rd3252, 7;
	xor.b64  	%rd2953, %rd2951, %rd2952;
	add.s64 	%rd2954, %rd2948, %rd3255;
	add.s64 	%rd2955, %rd2954, %rd3253;
	add.s64 	%rd3255, %rd2955, %rd2953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2034,%dummy}, %rd2932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2035}, %rd2932;
	}
	shf.r.wrap.b32 	%r2036, %r2035, %r2034, 14;
	shf.r.wrap.b32 	%r2037, %r2034, %r2035, 14;
	mov.b64 	%rd2956, {%r2037, %r2036};
	shf.r.wrap.b32 	%r2038, %r2035, %r2034, 18;
	shf.r.wrap.b32 	%r2039, %r2034, %r2035, 18;
	mov.b64 	%rd2957, {%r2039, %r2038};
	xor.b64  	%rd2958, %rd2956, %rd2957;
	shf.l.wrap.b32 	%r2040, %r2034, %r2035, 23;
	shf.l.wrap.b32 	%r2041, %r2035, %r2034, 23;
	mov.b64 	%rd2959, {%r2041, %r2040};
	xor.b64  	%rd2960, %rd2958, %rd2959;
	xor.b64  	%rd2961, %rd2895, %rd2858;
	and.b64  	%rd2962, %rd2932, %rd2961;
	xor.b64  	%rd2963, %rd2962, %rd2858;
	ld.const.u64 	%rd2964, [%rd2622+72];
	add.s64 	%rd2965, %rd2964, %rd2821;
	add.s64 	%rd2966, %rd2965, %rd3255;
	add.s64 	%rd2967, %rd2966, %rd2963;
	add.s64 	%rd2968, %rd2967, %rd2960;
	add.s64 	%rd2969, %rd2968, %rd2832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2042,%dummy}, %rd2943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2043}, %rd2943;
	}
	shf.r.wrap.b32 	%r2044, %r2043, %r2042, 28;
	shf.r.wrap.b32 	%r2045, %r2042, %r2043, 28;
	mov.b64 	%rd2970, {%r2045, %r2044};
	shf.l.wrap.b32 	%r2046, %r2042, %r2043, 30;
	shf.l.wrap.b32 	%r2047, %r2043, %r2042, 30;
	mov.b64 	%rd2971, {%r2047, %r2046};
	xor.b64  	%rd2972, %rd2970, %rd2971;
	shf.l.wrap.b32 	%r2048, %r2042, %r2043, 25;
	shf.l.wrap.b32 	%r2049, %r2043, %r2042, 25;
	mov.b64 	%rd2973, {%r2049, %r2048};
	xor.b64  	%rd2974, %rd2972, %rd2973;
	and.b64  	%rd2975, %rd2943, %rd2906;
	or.b64  	%rd2976, %rd2943, %rd2906;
	and.b64  	%rd2977, %rd2976, %rd2869;
	or.b64  	%rd2978, %rd2977, %rd2975;
	add.s64 	%rd2979, %rd2978, %rd2974;
	add.s64 	%rd2980, %rd2979, %rd2968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd3243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2051}, %rd3243;
	}
	shf.r.wrap.b32 	%r2052, %r2051, %r2050, 19;
	shf.r.wrap.b32 	%r2053, %r2050, %r2051, 19;
	mov.b64 	%rd2981, {%r2053, %r2052};
	shf.l.wrap.b32 	%r2054, %r2050, %r2051, 3;
	shf.l.wrap.b32 	%r2055, %r2051, %r2050, 3;
	mov.b64 	%rd2982, {%r2055, %r2054};
	xor.b64  	%rd2983, %rd2981, %rd2982;
	shr.u64 	%rd2984, %rd3243, 6;
	xor.b64  	%rd2985, %rd2983, %rd2984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2056,%dummy}, %rd3250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2057}, %rd3250;
	}
	shf.r.wrap.b32 	%r2058, %r2057, %r2056, 8;
	shf.r.wrap.b32 	%r2059, %r2056, %r2057, 8;
	mov.b64 	%rd2986, {%r2059, %r2058};
	shf.r.wrap.b32 	%r2060, %r2057, %r2056, 1;
	shf.r.wrap.b32 	%r2061, %r2056, %r2057, 1;
	mov.b64 	%rd2987, {%r2061, %r2060};
	xor.b64  	%rd2988, %rd2987, %rd2986;
	shr.u64 	%rd2989, %rd3250, 7;
	xor.b64  	%rd2990, %rd2988, %rd2989;
	add.s64 	%rd2991, %rd2985, %rd3252;
	add.s64 	%rd2992, %rd2991, %rd3251;
	add.s64 	%rd3252, %rd2992, %rd2990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2062,%dummy}, %rd2969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2063}, %rd2969;
	}
	shf.r.wrap.b32 	%r2064, %r2063, %r2062, 14;
	shf.r.wrap.b32 	%r2065, %r2062, %r2063, 14;
	mov.b64 	%rd2993, {%r2065, %r2064};
	shf.r.wrap.b32 	%r2066, %r2063, %r2062, 18;
	shf.r.wrap.b32 	%r2067, %r2062, %r2063, 18;
	mov.b64 	%rd2994, {%r2067, %r2066};
	xor.b64  	%rd2995, %rd2993, %rd2994;
	shf.l.wrap.b32 	%r2068, %r2062, %r2063, 23;
	shf.l.wrap.b32 	%r2069, %r2063, %r2062, 23;
	mov.b64 	%rd2996, {%r2069, %r2068};
	xor.b64  	%rd2997, %rd2995, %rd2996;
	xor.b64  	%rd2998, %rd2932, %rd2895;
	and.b64  	%rd2999, %rd2969, %rd2998;
	xor.b64  	%rd3000, %rd2999, %rd2895;
	ld.const.u64 	%rd3001, [%rd2622+80];
	add.s64 	%rd3002, %rd3001, %rd2858;
	add.s64 	%rd3003, %rd3002, %rd3252;
	add.s64 	%rd3004, %rd3003, %rd3000;
	add.s64 	%rd3005, %rd3004, %rd2997;
	add.s64 	%rd3006, %rd3005, %rd2869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2070,%dummy}, %rd2980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd2980;
	}
	shf.r.wrap.b32 	%r2072, %r2071, %r2070, 28;
	shf.r.wrap.b32 	%r2073, %r2070, %r2071, 28;
	mov.b64 	%rd3007, {%r2073, %r2072};
	shf.l.wrap.b32 	%r2074, %r2070, %r2071, 30;
	shf.l.wrap.b32 	%r2075, %r2071, %r2070, 30;
	mov.b64 	%rd3008, {%r2075, %r2074};
	xor.b64  	%rd3009, %rd3007, %rd3008;
	shf.l.wrap.b32 	%r2076, %r2070, %r2071, 25;
	shf.l.wrap.b32 	%r2077, %r2071, %r2070, 25;
	mov.b64 	%rd3010, {%r2077, %r2076};
	xor.b64  	%rd3011, %rd3009, %rd3010;
	and.b64  	%rd3012, %rd2980, %rd2943;
	or.b64  	%rd3013, %rd2980, %rd2943;
	and.b64  	%rd3014, %rd3013, %rd2906;
	or.b64  	%rd3015, %rd3014, %rd3012;
	add.s64 	%rd3016, %rd3015, %rd3011;
	add.s64 	%rd3017, %rd3016, %rd3005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2078,%dummy}, %rd3255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2079}, %rd3255;
	}
	shf.r.wrap.b32 	%r2080, %r2079, %r2078, 19;
	shf.r.wrap.b32 	%r2081, %r2078, %r2079, 19;
	mov.b64 	%rd3018, {%r2081, %r2080};
	shf.l.wrap.b32 	%r2082, %r2078, %r2079, 3;
	shf.l.wrap.b32 	%r2083, %r2079, %r2078, 3;
	mov.b64 	%rd3019, {%r2083, %r2082};
	xor.b64  	%rd3020, %rd3018, %rd3019;
	shr.u64 	%rd3021, %rd3255, 6;
	xor.b64  	%rd3022, %rd3020, %rd3021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2084,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2085}, %rd3248;
	}
	shf.r.wrap.b32 	%r2086, %r2085, %r2084, 8;
	shf.r.wrap.b32 	%r2087, %r2084, %r2085, 8;
	mov.b64 	%rd3023, {%r2087, %r2086};
	shf.r.wrap.b32 	%r2088, %r2085, %r2084, 1;
	shf.r.wrap.b32 	%r2089, %r2084, %r2085, 1;
	mov.b64 	%rd3024, {%r2089, %r2088};
	xor.b64  	%rd3025, %rd3024, %rd3023;
	shr.u64 	%rd3026, %rd3248, 7;
	xor.b64  	%rd3027, %rd3025, %rd3026;
	add.s64 	%rd3028, %rd3022, %rd3250;
	add.s64 	%rd3029, %rd3028, %rd3249;
	add.s64 	%rd3250, %rd3029, %rd3027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd3006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd3006;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 14;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 14;
	mov.b64 	%rd3030, {%r2093, %r2092};
	shf.r.wrap.b32 	%r2094, %r2091, %r2090, 18;
	shf.r.wrap.b32 	%r2095, %r2090, %r2091, 18;
	mov.b64 	%rd3031, {%r2095, %r2094};
	xor.b64  	%rd3032, %rd3030, %rd3031;
	shf.l.wrap.b32 	%r2096, %r2090, %r2091, 23;
	shf.l.wrap.b32 	%r2097, %r2091, %r2090, 23;
	mov.b64 	%rd3033, {%r2097, %r2096};
	xor.b64  	%rd3034, %rd3032, %rd3033;
	xor.b64  	%rd3035, %rd2969, %rd2932;
	and.b64  	%rd3036, %rd3006, %rd3035;
	xor.b64  	%rd3037, %rd3036, %rd2932;
	ld.const.u64 	%rd3038, [%rd2622+88];
	add.s64 	%rd3039, %rd3038, %rd2895;
	add.s64 	%rd3040, %rd3039, %rd3250;
	add.s64 	%rd3041, %rd3040, %rd3037;
	add.s64 	%rd3042, %rd3041, %rd3034;
	add.s64 	%rd3043, %rd3042, %rd2906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd3017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd3017;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 28;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 28;
	mov.b64 	%rd3044, {%r2101, %r2100};
	shf.l.wrap.b32 	%r2102, %r2098, %r2099, 30;
	shf.l.wrap.b32 	%r2103, %r2099, %r2098, 30;
	mov.b64 	%rd3045, {%r2103, %r2102};
	xor.b64  	%rd3046, %rd3044, %rd3045;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 25;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 25;
	mov.b64 	%rd3047, {%r2105, %r2104};
	xor.b64  	%rd3048, %rd3046, %rd3047;
	and.b64  	%rd3049, %rd3017, %rd2980;
	or.b64  	%rd3050, %rd3017, %rd2980;
	and.b64  	%rd3051, %rd3050, %rd2943;
	or.b64  	%rd3052, %rd3051, %rd3049;
	add.s64 	%rd3053, %rd3052, %rd3048;
	add.s64 	%rd3054, %rd3053, %rd3042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd3252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd3252;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 19;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 19;
	mov.b64 	%rd3055, {%r2109, %r2108};
	shf.l.wrap.b32 	%r2110, %r2106, %r2107, 3;
	shf.l.wrap.b32 	%r2111, %r2107, %r2106, 3;
	mov.b64 	%rd3056, {%r2111, %r2110};
	xor.b64  	%rd3057, %rd3055, %rd3056;
	shr.u64 	%rd3058, %rd3252, 6;
	xor.b64  	%rd3059, %rd3057, %rd3058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2112,%dummy}, %rd3246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2113}, %rd3246;
	}
	shf.r.wrap.b32 	%r2114, %r2113, %r2112, 8;
	shf.r.wrap.b32 	%r2115, %r2112, %r2113, 8;
	mov.b64 	%rd3060, {%r2115, %r2114};
	shf.r.wrap.b32 	%r2116, %r2113, %r2112, 1;
	shf.r.wrap.b32 	%r2117, %r2112, %r2113, 1;
	mov.b64 	%rd3061, {%r2117, %r2116};
	xor.b64  	%rd3062, %rd3061, %rd3060;
	shr.u64 	%rd3063, %rd3246, 7;
	xor.b64  	%rd3064, %rd3062, %rd3063;
	add.s64 	%rd3065, %rd3059, %rd3248;
	add.s64 	%rd3066, %rd3065, %rd3247;
	add.s64 	%rd3248, %rd3066, %rd3064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2118,%dummy}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2119}, %rd3043;
	}
	shf.r.wrap.b32 	%r2120, %r2119, %r2118, 14;
	shf.r.wrap.b32 	%r2121, %r2118, %r2119, 14;
	mov.b64 	%rd3067, {%r2121, %r2120};
	shf.r.wrap.b32 	%r2122, %r2119, %r2118, 18;
	shf.r.wrap.b32 	%r2123, %r2118, %r2119, 18;
	mov.b64 	%rd3068, {%r2123, %r2122};
	xor.b64  	%rd3069, %rd3067, %rd3068;
	shf.l.wrap.b32 	%r2124, %r2118, %r2119, 23;
	shf.l.wrap.b32 	%r2125, %r2119, %r2118, 23;
	mov.b64 	%rd3070, {%r2125, %r2124};
	xor.b64  	%rd3071, %rd3069, %rd3070;
	xor.b64  	%rd3072, %rd3006, %rd2969;
	and.b64  	%rd3073, %rd3043, %rd3072;
	xor.b64  	%rd3074, %rd3073, %rd2969;
	ld.const.u64 	%rd3075, [%rd2622+96];
	add.s64 	%rd3076, %rd3075, %rd2932;
	add.s64 	%rd3077, %rd3076, %rd3248;
	add.s64 	%rd3078, %rd3077, %rd3074;
	add.s64 	%rd3079, %rd3078, %rd3071;
	add.s64 	%rd3259, %rd3079, %rd2943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2126,%dummy}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2127}, %rd3054;
	}
	shf.r.wrap.b32 	%r2128, %r2127, %r2126, 28;
	shf.r.wrap.b32 	%r2129, %r2126, %r2127, 28;
	mov.b64 	%rd3080, {%r2129, %r2128};
	shf.l.wrap.b32 	%r2130, %r2126, %r2127, 30;
	shf.l.wrap.b32 	%r2131, %r2127, %r2126, 30;
	mov.b64 	%rd3081, {%r2131, %r2130};
	xor.b64  	%rd3082, %rd3080, %rd3081;
	shf.l.wrap.b32 	%r2132, %r2126, %r2127, 25;
	shf.l.wrap.b32 	%r2133, %r2127, %r2126, 25;
	mov.b64 	%rd3083, {%r2133, %r2132};
	xor.b64  	%rd3084, %rd3082, %rd3083;
	and.b64  	%rd3085, %rd3054, %rd3017;
	or.b64  	%rd3086, %rd3054, %rd3017;
	and.b64  	%rd3087, %rd3086, %rd2980;
	or.b64  	%rd3088, %rd3087, %rd3085;
	add.s64 	%rd3089, %rd3088, %rd3084;
	add.s64 	%rd3263, %rd3089, %rd3079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2134,%dummy}, %rd3250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2135}, %rd3250;
	}
	shf.r.wrap.b32 	%r2136, %r2135, %r2134, 19;
	shf.r.wrap.b32 	%r2137, %r2134, %r2135, 19;
	mov.b64 	%rd3090, {%r2137, %r2136};
	shf.l.wrap.b32 	%r2138, %r2134, %r2135, 3;
	shf.l.wrap.b32 	%r2139, %r2135, %r2134, 3;
	mov.b64 	%rd3091, {%r2139, %r2138};
	xor.b64  	%rd3092, %rd3090, %rd3091;
	shr.u64 	%rd3093, %rd3250, 6;
	xor.b64  	%rd3094, %rd3092, %rd3093;
	shf.r.wrap.b32 	%r2140, %r1770, %r1771, 8;
	shf.r.wrap.b32 	%r2141, %r1771, %r1770, 8;
	mov.b64 	%rd3095, {%r2141, %r2140};
	shf.r.wrap.b32 	%r2142, %r1770, %r1771, 1;
	shf.r.wrap.b32 	%r2143, %r1771, %r1770, 1;
	mov.b64 	%rd3096, {%r2143, %r2142};
	xor.b64  	%rd3097, %rd3096, %rd3095;
	shr.u64 	%rd3098, %rd3258, 7;
	xor.b64  	%rd3099, %rd3097, %rd3098;
	add.s64 	%rd3100, %rd3094, %rd3246;
	add.s64 	%rd3101, %rd3100, %rd3245;
	add.s64 	%rd3246, %rd3101, %rd3099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2144,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2145}, %rd3259;
	}
	shf.r.wrap.b32 	%r2146, %r2145, %r2144, 14;
	shf.r.wrap.b32 	%r2147, %r2144, %r2145, 14;
	mov.b64 	%rd3102, {%r2147, %r2146};
	shf.r.wrap.b32 	%r2148, %r2145, %r2144, 18;
	shf.r.wrap.b32 	%r2149, %r2144, %r2145, 18;
	mov.b64 	%rd3103, {%r2149, %r2148};
	xor.b64  	%rd3104, %rd3102, %rd3103;
	shf.l.wrap.b32 	%r2150, %r2144, %r2145, 23;
	shf.l.wrap.b32 	%r2151, %r2145, %r2144, 23;
	mov.b64 	%rd3105, {%r2151, %r2150};
	xor.b64  	%rd3106, %rd3104, %rd3105;
	xor.b64  	%rd3107, %rd3043, %rd3006;
	and.b64  	%rd3108, %rd3259, %rd3107;
	xor.b64  	%rd3109, %rd3108, %rd3006;
	ld.const.u64 	%rd3110, [%rd2622+104];
	add.s64 	%rd3111, %rd3110, %rd2969;
	add.s64 	%rd3112, %rd3111, %rd3246;
	add.s64 	%rd3113, %rd3112, %rd3109;
	add.s64 	%rd3114, %rd3113, %rd3106;
	add.s64 	%rd3266, %rd3114, %rd2980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2152,%dummy}, %rd3263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2153}, %rd3263;
	}
	shf.r.wrap.b32 	%r2154, %r2153, %r2152, 28;
	shf.r.wrap.b32 	%r2155, %r2152, %r2153, 28;
	mov.b64 	%rd3115, {%r2155, %r2154};
	shf.l.wrap.b32 	%r2156, %r2152, %r2153, 30;
	shf.l.wrap.b32 	%r2157, %r2153, %r2152, 30;
	mov.b64 	%rd3116, {%r2157, %r2156};
	xor.b64  	%rd3117, %rd3115, %rd3116;
	shf.l.wrap.b32 	%r2158, %r2152, %r2153, 25;
	shf.l.wrap.b32 	%r2159, %r2153, %r2152, 25;
	mov.b64 	%rd3118, {%r2159, %r2158};
	xor.b64  	%rd3119, %rd3117, %rd3118;
	and.b64  	%rd3120, %rd3263, %rd3054;
	or.b64  	%rd3121, %rd3263, %rd3054;
	and.b64  	%rd3122, %rd3121, %rd3017;
	or.b64  	%rd3123, %rd3122, %rd3120;
	add.s64 	%rd3124, %rd3123, %rd3119;
	add.s64 	%rd3262, %rd3124, %rd3114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2160,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2161}, %rd3248;
	}
	shf.r.wrap.b32 	%r2162, %r2161, %r2160, 19;
	shf.r.wrap.b32 	%r2163, %r2160, %r2161, 19;
	mov.b64 	%rd3125, {%r2163, %r2162};
	shf.l.wrap.b32 	%r2164, %r2160, %r2161, 3;
	shf.l.wrap.b32 	%r2165, %r2161, %r2160, 3;
	mov.b64 	%rd3126, {%r2165, %r2164};
	xor.b64  	%rd3127, %rd3125, %rd3126;
	shr.u64 	%rd3128, %rd3248, 6;
	xor.b64  	%rd3129, %rd3127, %rd3128;
	shf.r.wrap.b32 	%r2166, %r1798, %r1799, 8;
	shf.r.wrap.b32 	%r2167, %r1799, %r1798, 8;
	mov.b64 	%rd3130, {%r2167, %r2166};
	shf.r.wrap.b32 	%r2168, %r1798, %r1799, 1;
	shf.r.wrap.b32 	%r2169, %r1799, %r1798, 1;
	mov.b64 	%rd3131, {%r2169, %r2168};
	xor.b64  	%rd3132, %rd3131, %rd3130;
	shr.u64 	%rd3133, %rd3254, 7;
	xor.b64  	%rd3134, %rd3132, %rd3133;
	add.s64 	%rd3135, %rd3129, %rd3258;
	add.s64 	%rd3136, %rd3135, %rd3244;
	add.s64 	%rd3258, %rd3136, %rd3134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd3266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2171}, %rd3266;
	}
	shf.r.wrap.b32 	%r2172, %r2171, %r2170, 14;
	shf.r.wrap.b32 	%r2173, %r2170, %r2171, 14;
	mov.b64 	%rd3137, {%r2173, %r2172};
	shf.r.wrap.b32 	%r2174, %r2171, %r2170, 18;
	shf.r.wrap.b32 	%r2175, %r2170, %r2171, 18;
	mov.b64 	%rd3138, {%r2175, %r2174};
	xor.b64  	%rd3139, %rd3137, %rd3138;
	shf.l.wrap.b32 	%r2176, %r2170, %r2171, 23;
	shf.l.wrap.b32 	%r2177, %r2171, %r2170, 23;
	mov.b64 	%rd3140, {%r2177, %r2176};
	xor.b64  	%rd3141, %rd3139, %rd3140;
	xor.b64  	%rd3142, %rd3259, %rd3043;
	and.b64  	%rd3143, %rd3266, %rd3142;
	xor.b64  	%rd3144, %rd3143, %rd3043;
	ld.const.u64 	%rd3145, [%rd2622+112];
	add.s64 	%rd3146, %rd3145, %rd3006;
	add.s64 	%rd3147, %rd3146, %rd3258;
	add.s64 	%rd3148, %rd3147, %rd3144;
	add.s64 	%rd3149, %rd3148, %rd3141;
	add.s64 	%rd3265, %rd3149, %rd3017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2178,%dummy}, %rd3262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2179}, %rd3262;
	}
	shf.r.wrap.b32 	%r2180, %r2179, %r2178, 28;
	shf.r.wrap.b32 	%r2181, %r2178, %r2179, 28;
	mov.b64 	%rd3150, {%r2181, %r2180};
	shf.l.wrap.b32 	%r2182, %r2178, %r2179, 30;
	shf.l.wrap.b32 	%r2183, %r2179, %r2178, 30;
	mov.b64 	%rd3151, {%r2183, %r2182};
	xor.b64  	%rd3152, %rd3150, %rd3151;
	shf.l.wrap.b32 	%r2184, %r2178, %r2179, 25;
	shf.l.wrap.b32 	%r2185, %r2179, %r2178, 25;
	mov.b64 	%rd3153, {%r2185, %r2184};
	xor.b64  	%rd3154, %rd3152, %rd3153;
	and.b64  	%rd3155, %rd3262, %rd3263;
	or.b64  	%rd3156, %rd3262, %rd3263;
	and.b64  	%rd3157, %rd3156, %rd3054;
	or.b64  	%rd3158, %rd3157, %rd3155;
	add.s64 	%rd3159, %rd3158, %rd3154;
	add.s64 	%rd3261, %rd3159, %rd3149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2186,%dummy}, %rd3246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2187}, %rd3246;
	}
	shf.r.wrap.b32 	%r2188, %r2187, %r2186, 19;
	shf.r.wrap.b32 	%r2189, %r2186, %r2187, 19;
	mov.b64 	%rd3160, {%r2189, %r2188};
	shf.l.wrap.b32 	%r2190, %r2186, %r2187, 3;
	shf.l.wrap.b32 	%r2191, %r2187, %r2186, 3;
	mov.b64 	%rd3161, {%r2191, %r2190};
	xor.b64  	%rd3162, %rd3160, %rd3161;
	shr.u64 	%rd3163, %rd3246, 6;
	xor.b64  	%rd3164, %rd3162, %rd3163;
	shf.r.wrap.b32 	%r2192, %r1827, %r1826, 1;
	shf.r.wrap.b32 	%r2193, %r1826, %r1827, 1;
	mov.b64 	%rd3165, {%r2193, %r2192};
	shf.r.wrap.b32 	%r2194, %r1827, %r1826, 8;
	shf.r.wrap.b32 	%r2195, %r1826, %r1827, 8;
	mov.b64 	%rd3166, {%r2195, %r2194};
	xor.b64  	%rd3167, %rd3165, %rd3166;
	shr.u64 	%rd3168, %rd3256, 7;
	xor.b64  	%rd3169, %rd3167, %rd3168;
	add.s64 	%rd3170, %rd3164, %rd3254;
	add.s64 	%rd3171, %rd3170, %rd3243;
	add.s64 	%rd3254, %rd3171, %rd3169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2196,%dummy}, %rd3265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2197}, %rd3265;
	}
	shf.r.wrap.b32 	%r2198, %r2197, %r2196, 14;
	shf.r.wrap.b32 	%r2199, %r2196, %r2197, 14;
	mov.b64 	%rd3172, {%r2199, %r2198};
	shf.r.wrap.b32 	%r2200, %r2197, %r2196, 18;
	shf.r.wrap.b32 	%r2201, %r2196, %r2197, 18;
	mov.b64 	%rd3173, {%r2201, %r2200};
	xor.b64  	%rd3174, %rd3172, %rd3173;
	shf.l.wrap.b32 	%r2202, %r2196, %r2197, 23;
	shf.l.wrap.b32 	%r2203, %r2197, %r2196, 23;
	mov.b64 	%rd3175, {%r2203, %r2202};
	xor.b64  	%rd3176, %rd3174, %rd3175;
	xor.b64  	%rd3177, %rd3266, %rd3259;
	and.b64  	%rd3178, %rd3265, %rd3177;
	xor.b64  	%rd3179, %rd3178, %rd3259;
	ld.const.u64 	%rd3180, [%rd2622+120];
	add.s64 	%rd3181, %rd3180, %rd3043;
	add.s64 	%rd3182, %rd3181, %rd3254;
	add.s64 	%rd3183, %rd3182, %rd3179;
	add.s64 	%rd3184, %rd3183, %rd3176;
	add.s64 	%rd3264, %rd3184, %rd3054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2204,%dummy}, %rd3261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2205}, %rd3261;
	}
	shf.r.wrap.b32 	%r2206, %r2205, %r2204, 28;
	shf.r.wrap.b32 	%r2207, %r2204, %r2205, 28;
	mov.b64 	%rd3185, {%r2207, %r2206};
	shf.l.wrap.b32 	%r2208, %r2204, %r2205, 30;
	shf.l.wrap.b32 	%r2209, %r2205, %r2204, 30;
	mov.b64 	%rd3186, {%r2209, %r2208};
	xor.b64  	%rd3187, %rd3185, %rd3186;
	shf.l.wrap.b32 	%r2210, %r2204, %r2205, 25;
	shf.l.wrap.b32 	%r2211, %r2205, %r2204, 25;
	mov.b64 	%rd3188, {%r2211, %r2210};
	xor.b64  	%rd3189, %rd3187, %rd3188;
	and.b64  	%rd3190, %rd3261, %rd3262;
	or.b64  	%rd3191, %rd3261, %rd3262;
	and.b64  	%rd3192, %rd3191, %rd3263;
	or.b64  	%rd3193, %rd3192, %rd3190;
	add.s64 	%rd3194, %rd3193, %rd3189;
	add.s64 	%rd3260, %rd3194, %rd3184;
	add.s32 	%r2223, %r2223, 16;
	setp.lt.u32 	%p3, %r2223, 65;
	@%p3 bra 	$L__BB3_5;

	add.s64 	%rd3267, %rd3, %rd3260;
	xor.b64  	%rd3282, %rd3282, %rd3267;
	add.s64 	%rd3268, %rd7, %rd3261;
	xor.b64  	%rd3281, %rd3281, %rd3268;
	add.s64 	%rd3269, %rd11, %rd3262;
	xor.b64  	%rd3280, %rd3280, %rd3269;
	add.s64 	%rd3270, %rd15, %rd3263;
	xor.b64  	%rd3279, %rd3279, %rd3270;
	add.s64 	%rd3271, %rd19, %rd3264;
	xor.b64  	%rd3278, %rd3278, %rd3271;
	add.s64 	%rd3272, %rd23, %rd3265;
	xor.b64  	%rd3277, %rd3277, %rd3272;
	add.s64 	%rd3273, %rd27, %rd3266;
	xor.b64  	%rd3276, %rd3276, %rd3273;
	add.s64 	%rd3274, %rd31, %rd3259;
	xor.b64  	%rd3275, %rd3275, %rd3274;
	add.s32 	%r2221, %r2221, 1;
	setp.lt.u32 	%p4, %r2221, %r14;
	@%p4 bra 	$L__BB3_2;

$L__BB3_7:
	sub.s32 	%r2214, %r2, %r14;
	st.global.u32 	[%rd238+256], %r2214;
	setp.eq.s32 	%p5, %r2214, 0;
	@%p5 bra 	$L__BB3_9;

	st.global.u64 	[%rd238+128], %rd3282;
	st.global.u64 	[%rd238+192], %rd3267;
	st.global.u64 	[%rd238+136], %rd3281;
	st.global.u64 	[%rd238+200], %rd3268;
	st.global.u64 	[%rd238+144], %rd3280;
	st.global.u64 	[%rd238+208], %rd3269;
	st.global.u64 	[%rd238+152], %rd3279;
	st.global.u64 	[%rd238+216], %rd3270;
	st.global.u64 	[%rd238+160], %rd3278;
	st.global.u64 	[%rd238+224], %rd3271;
	st.global.u64 	[%rd238+168], %rd3277;
	st.global.u64 	[%rd238+232], %rd3272;
	st.global.u64 	[%rd238+176], %rd3276;
	st.global.u64 	[%rd238+240], %rd3273;
	st.global.u64 	[%rd238+184], %rd3275;
	st.global.u64 	[%rd238+248], %rd3274;
	bra.uni 	$L__BB3_10;

$L__BB3_9:
	mov.b32 	%r2220, %envreg3;
	mov.u32 	%r2219, %tid.x;
	add.s32 	%r2218, %r2219, %r2220;
	mov.u32 	%r2217, %ctaid.x;
	mov.u32 	%r2216, %ntid.x;
	mad.lo.s32 	%r2215, %r2216, %r2217, %r2218;
	ld.param.u64 	%rd3202, [pbkdf2_sha512_loop_param_1];
	mul.wide.u32 	%rd3199, %r2215, 64;
	add.s64 	%rd3200, %rd3202, %rd3199;
	st.global.u64 	[%rd3200], %rd3282;
	st.global.u64 	[%rd3200+8], %rd3281;
	st.global.u64 	[%rd3200+16], %rd3280;
	st.global.u64 	[%rd3200+24], %rd3279;
	st.global.u64 	[%rd3200+32], %rd3278;
	st.global.u64 	[%rd3200+40], %rd3277;
	st.global.u64 	[%rd3200+48], %rd3276;
	st.global.u64 	[%rd3200+56], %rd3275;

$L__BB3_10:
	ret;

}
	// .globl	pbkdf2_sha512_kernel
.entry pbkdf2_sha512_kernel(
	.param .u64 .ptr .global .align 8 pbkdf2_sha512_kernel_param_0,
	.param .u64 .ptr .const .align 8 pbkdf2_sha512_kernel_param_1,
	.param .u64 .ptr .global .align 8 pbkdf2_sha512_kernel_param_2
)
{
	.local .align 16 .b8 	__local_depot4[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .b32 	%r<7004>;
	.reg .b64 	%rd<10029>;


	mov.u64 	%SPL, __local_depot4;
	ld.param.u64 	%rd148, [pbkdf2_sha512_kernel_param_0];
	ld.param.u64 	%rd149, [pbkdf2_sha512_kernel_param_1];
	ld.param.u64 	%rd150, [pbkdf2_sha512_kernel_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mov.b32 	%r22, %envreg3;
	add.s32 	%r23, %r21, %r22;
	mad.lo.s32 	%r24, %r20, %r19, %r23;
	cvt.u64.u32 	%rd2, %r24;
	mul.wide.u32 	%rd152, %r24, 72;
	add.s64 	%rd153, %rd148, %rd152;
	ld.global.u32 	%r25, [%rd153+64];
	ld.const.v2.u32 	{%r26, %r27}, [%rd149+112];
	mov.u32 	%r6997, 0;
	add.s32 	%r29, %r27, -1;
	mul.wide.u32 	%rd154, %r24, 264;
	add.s64 	%rd155, %rd150, %rd154;
	st.global.u32 	[%rd155+256], %r29;
	add.s32 	%r30, %r25, 7;
	shr.u32 	%r2, %r30, 3;
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	$L__BB4_3;

	mul.lo.s64 	%rd156, %rd2, 72;
	add.s64 	%rd9983, %rd148, %rd156;
	mov.u32 	%r31, 0;
	mov.u64 	%rd9984, %rd1;
	mov.u32 	%r6997, %r31;

$L__BB4_2:
	ld.global.u64 	%rd157, [%rd9983];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %rd157;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %rd157;
	}
	mov.u32 	%r34, 291;
	prmt.b32 	%r36, %r32, %r31, %r34;
	prmt.b32 	%r37, %r33, %r31, %r34;
	mov.b64 	%rd158, {%r37, %r36};
	xor.b64  	%rd159, %rd158, 3906369333256140342;
	st.local.u64 	[%rd9984], %rd159;
	add.s64 	%rd9984, %rd9984, 8;
	add.s64 	%rd9983, %rd9983, 8;
	add.s32 	%r6997, %r6997, 1;
	setp.lt.u32 	%p2, %r6997, %r2;
	@%p2 bra 	$L__BB4_2;

$L__BB4_3:
	setp.gt.u32 	%p3, %r6997, 15;
	@%p3 bra 	$L__BB4_6;

	mul.wide.u32 	%rd160, %r6997, 8;
	add.s64 	%rd9985, %rd1, %rd160;

$L__BB4_5:
	mov.u64 	%rd161, 3906369333256140342;
	st.local.u64 	[%rd9985], %rd161;
	add.s64 	%rd9985, %rd9985, 8;
	add.s32 	%r6997, %r6997, 1;
	setp.lt.u32 	%p4, %r6997, 16;
	@%p4 bra 	$L__BB4_5;

$L__BB4_6:
	mov.u32 	%r7000, 0;
	ld.local.v2.u64 	{%rd162, %rd163}, [%rd1];
	mov.u64 	%rd166, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39,%dummy}, %rd166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd166;
	}
	shf.r.wrap.b32 	%r41, %r40, %r39, 18;
	shf.r.wrap.b32 	%r42, %r39, %r40, 18;
	mov.b64 	%rd167, {%r42, %r41};
	shf.r.wrap.b32 	%r43, %r40, %r39, 14;
	shf.r.wrap.b32 	%r44, %r39, %r40, 14;
	mov.b64 	%rd168, {%r44, %r43};
	xor.b64  	%rd169, %rd168, %rd167;
	shf.l.wrap.b32 	%r45, %r39, %r40, 23;
	shf.l.wrap.b32 	%r46, %r40, %r39, 23;
	mov.b64 	%rd170, {%r46, %r45};
	xor.b64  	%rd171, %rd169, %rd170;
	add.s64 	%rd12, %rd171, -7031530027109396581;
	add.s64 	%rd172, %rd12, %rd162;
	add.s64 	%rd173, %rd172, -4263291710961585108;
	mov.u64 	%rd174, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r47}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd174;
	}
	shf.l.wrap.b32 	%r49, %r48, %r47, 30;
	shf.l.wrap.b32 	%r50, %r47, %r48, 30;
	mov.b64 	%rd175, {%r50, %r49};
	shf.r.wrap.b32 	%r51, %r47, %r48, 28;
	shf.r.wrap.b32 	%r52, %r48, %r47, 28;
	mov.b64 	%rd176, {%r52, %r51};
	xor.b64  	%rd177, %rd176, %rd175;
	shf.l.wrap.b32 	%r53, %r48, %r47, 25;
	shf.l.wrap.b32 	%r54, %r47, %r48, 25;
	mov.b64 	%rd178, {%r54, %r53};
	xor.b64  	%rd179, %rd177, %rd178;
	add.s64 	%rd13, %rd179, 6482280703085258342;
	add.s64 	%rd180, %rd13, %rd172;
	and.b64  	%rd181, %rd173, -3887949035690463538;
	xor.b64  	%rd182, %rd181, -7276294671716946913;
	add.s64 	%rd183, %rd163, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r55,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r56}, %rd173;
	}
	shf.r.wrap.b32 	%r57, %r56, %r55, 14;
	shf.r.wrap.b32 	%r58, %r55, %r56, 14;
	mov.b64 	%rd184, {%r58, %r57};
	shf.r.wrap.b32 	%r59, %r56, %r55, 18;
	shf.r.wrap.b32 	%r60, %r55, %r56, 18;
	mov.b64 	%rd185, {%r60, %r59};
	xor.b64  	%rd186, %rd184, %rd185;
	shf.l.wrap.b32 	%r61, %r55, %r56, 23;
	shf.l.wrap.b32 	%r62, %r56, %r55, 23;
	mov.b64 	%rd187, {%r62, %r61};
	xor.b64  	%rd188, %rd186, %rd187;
	add.s64 	%rd189, %rd183, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd180;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 28;
	shf.r.wrap.b32 	%r66, %r63, %r64, 28;
	mov.b64 	%rd190, {%r66, %r65};
	shf.l.wrap.b32 	%r67, %r63, %r64, 30;
	shf.l.wrap.b32 	%r68, %r64, %r63, 30;
	mov.b64 	%rd191, {%r68, %r67};
	xor.b64  	%rd192, %rd190, %rd191;
	shf.l.wrap.b32 	%r69, %r63, %r64, 25;
	shf.l.wrap.b32 	%r70, %r64, %r63, 25;
	mov.b64 	%rd193, {%r70, %r69};
	xor.b64  	%rd194, %rd192, %rd193;
	and.b64  	%rd195, %rd180, -3355664534840381901;
	or.b64  	%rd196, %rd195, 3026882967131160840;
	add.s64 	%rd197, %rd196, %rd194;
	add.s64 	%rd198, %rd197, %rd189;
	add.s64 	%rd199, %rd189, -3663095898801038493;
	add.s64 	%rd200, %rd198, -8017781463737883848;
	ld.local.v2.u64 	{%rd201, %rd202}, [%rd1+16];
	xor.b64  	%rd205, %rd173, 5840696475078001361;
	and.b64  	%rd206, %rd199, %rd205;
	xor.b64  	%rd207, %rd206, 5840696475078001361;
	add.s64 	%rd208, %rd201, %rd207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r72}, %rd199;
	}
	shf.r.wrap.b32 	%r73, %r72, %r71, 14;
	shf.r.wrap.b32 	%r74, %r71, %r72, 14;
	mov.b64 	%rd209, {%r74, %r73};
	shf.r.wrap.b32 	%r75, %r72, %r71, 18;
	shf.r.wrap.b32 	%r76, %r71, %r72, 18;
	mov.b64 	%rd210, {%r76, %r75};
	xor.b64  	%rd211, %rd209, %rd210;
	shf.l.wrap.b32 	%r77, %r71, %r72, 23;
	shf.l.wrap.b32 	%r78, %r72, %r71, 23;
	mov.b64 	%rd212, {%r78, %r77};
	xor.b64  	%rd213, %rd211, %rd212;
	add.s64 	%rd214, %rd208, %rd213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r79,%dummy}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r80}, %rd200;
	}
	shf.r.wrap.b32 	%r81, %r80, %r79, 28;
	shf.r.wrap.b32 	%r82, %r79, %r80, 28;
	mov.b64 	%rd215, {%r82, %r81};
	shf.l.wrap.b32 	%r83, %r79, %r80, 30;
	shf.l.wrap.b32 	%r84, %r80, %r79, 30;
	mov.b64 	%rd216, {%r84, %r83};
	xor.b64  	%rd217, %rd215, %rd216;
	shf.l.wrap.b32 	%r85, %r79, %r80, 25;
	shf.l.wrap.b32 	%r86, %r80, %r79, 25;
	mov.b64 	%rd218, {%r86, %r85};
	xor.b64  	%rd219, %rd217, %rd218;
	and.b64  	%rd220, %rd200, %rd180;
	or.b64  	%rd221, %rd200, %rd180;
	and.b64  	%rd222, %rd221, 7640891576956012808;
	or.b64  	%rd223, %rd222, %rd220;
	add.s64 	%rd224, %rd223, %rd219;
	add.s64 	%rd225, %rd224, %rd214;
	add.s64 	%rd226, %rd214, 877659737583668873;
	add.s64 	%rd227, %rd225, 5820449915117741902;
	xor.b64  	%rd228, %rd199, %rd173;
	and.b64  	%rd229, %rd226, %rd228;
	xor.b64  	%rd230, %rd229, %rd173;
	add.s64 	%rd231, %rd202, %rd230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd226;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 14;
	shf.r.wrap.b32 	%r90, %r87, %r88, 14;
	mov.b64 	%rd232, {%r90, %r89};
	shf.r.wrap.b32 	%r91, %r88, %r87, 18;
	shf.r.wrap.b32 	%r92, %r87, %r88, 18;
	mov.b64 	%rd233, {%r92, %r91};
	xor.b64  	%rd234, %rd232, %rd233;
	shf.l.wrap.b32 	%r93, %r87, %r88, 23;
	shf.l.wrap.b32 	%r94, %r88, %r87, 23;
	mov.b64 	%rd235, {%r94, %r93};
	xor.b64  	%rd236, %rd234, %rd235;
	add.s64 	%rd237, %rd231, %rd236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd227;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 28;
	shf.r.wrap.b32 	%r98, %r95, %r96, 28;
	mov.b64 	%rd238, {%r98, %r97};
	shf.l.wrap.b32 	%r99, %r95, %r96, 30;
	shf.l.wrap.b32 	%r100, %r96, %r95, 30;
	mov.b64 	%rd239, {%r100, %r99};
	xor.b64  	%rd240, %rd238, %rd239;
	shf.l.wrap.b32 	%r101, %r95, %r96, 25;
	shf.l.wrap.b32 	%r102, %r96, %r95, 25;
	mov.b64 	%rd241, {%r102, %r101};
	xor.b64  	%rd242, %rd240, %rd241;
	and.b64  	%rd243, %rd227, %rd200;
	or.b64  	%rd244, %rd227, %rd200;
	and.b64  	%rd245, %rd244, %rd180;
	or.b64  	%rd246, %rd245, %rd243;
	add.s64 	%rd247, %rd246, %rd242;
	add.s64 	%rd248, %rd247, %rd237;
	add.s64 	%rd249, %rd237, -6571292209873868907;
	add.s64 	%rd250, %rd248, 4234560286879669901;
	ld.local.v2.u64 	{%rd251, %rd252}, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r103,%dummy}, %rd249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd249;
	}
	shf.r.wrap.b32 	%r105, %r104, %r103, 14;
	shf.r.wrap.b32 	%r106, %r103, %r104, 14;
	mov.b64 	%rd255, {%r106, %r105};
	shf.r.wrap.b32 	%r107, %r104, %r103, 18;
	shf.r.wrap.b32 	%r108, %r103, %r104, 18;
	mov.b64 	%rd256, {%r108, %r107};
	xor.b64  	%rd257, %rd255, %rd256;
	shf.l.wrap.b32 	%r109, %r103, %r104, 23;
	shf.l.wrap.b32 	%r110, %r104, %r103, 23;
	mov.b64 	%rd258, {%r110, %r109};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd226, %rd199;
	and.b64  	%rd261, %rd249, %rd260;
	xor.b64  	%rd262, %rd261, %rd199;
	add.s64 	%rd263, %rd172, %rd251;
	add.s64 	%rd264, %rd263, %rd262;
	add.s64 	%rd265, %rd264, %rd259;
	add.s64 	%rd266, %rd265, -131588302623135388;
	add.s64 	%rd267, %rd266, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd250;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 28;
	shf.r.wrap.b32 	%r114, %r111, %r112, 28;
	mov.b64 	%rd268, {%r114, %r113};
	shf.l.wrap.b32 	%r115, %r111, %r112, 30;
	shf.l.wrap.b32 	%r116, %r112, %r111, 30;
	mov.b64 	%rd269, {%r116, %r115};
	xor.b64  	%rd270, %rd268, %rd269;
	shf.l.wrap.b32 	%r117, %r111, %r112, 25;
	shf.l.wrap.b32 	%r118, %r112, %r111, 25;
	mov.b64 	%rd271, {%r118, %r117};
	xor.b64  	%rd272, %rd270, %rd271;
	and.b64  	%rd273, %rd250, %rd227;
	or.b64  	%rd274, %rd250, %rd227;
	and.b64  	%rd275, %rd274, %rd200;
	or.b64  	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd276, %rd272;
	add.s64 	%rd278, %rd277, %rd266;
	add.s64 	%rd279, %rd252, %rd199;
	xor.b64  	%rd280, %rd249, %rd226;
	and.b64  	%rd281, %rd267, %rd280;
	xor.b64  	%rd282, %rd281, %rd226;
	add.s64 	%rd283, %rd279, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd267;
	}
	shf.r.wrap.b32 	%r121, %r120, %r119, 14;
	shf.r.wrap.b32 	%r122, %r119, %r120, 14;
	mov.b64 	%rd284, {%r122, %r121};
	shf.r.wrap.b32 	%r123, %r120, %r119, 18;
	shf.r.wrap.b32 	%r124, %r119, %r120, 18;
	mov.b64 	%rd285, {%r124, %r123};
	xor.b64  	%rd286, %rd284, %rd285;
	shf.l.wrap.b32 	%r125, %r119, %r120, 23;
	shf.l.wrap.b32 	%r126, %r120, %r119, 23;
	mov.b64 	%rd287, {%r126, %r125};
	xor.b64  	%rd288, %rd286, %rd287;
	add.s64 	%rd289, %rd283, %rd288;
	add.s64 	%rd290, %rd289, 6480981068601479193;
	add.s64 	%rd291, %rd290, %rd200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd278;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 28;
	shf.r.wrap.b32 	%r130, %r127, %r128, 28;
	mov.b64 	%rd292, {%r130, %r129};
	shf.l.wrap.b32 	%r131, %r127, %r128, 30;
	shf.l.wrap.b32 	%r132, %r128, %r127, 30;
	mov.b64 	%rd293, {%r132, %r131};
	xor.b64  	%rd294, %rd292, %rd293;
	shf.l.wrap.b32 	%r133, %r127, %r128, 25;
	shf.l.wrap.b32 	%r134, %r128, %r127, 25;
	mov.b64 	%rd295, {%r134, %r133};
	xor.b64  	%rd296, %rd294, %rd295;
	and.b64  	%rd297, %rd278, %rd250;
	or.b64  	%rd298, %rd278, %rd250;
	and.b64  	%rd299, %rd298, %rd227;
	or.b64  	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd300, %rd296;
	add.s64 	%rd302, %rd301, %rd290;
	ld.local.v2.u64 	{%rd303, %rd304}, [%rd1+48];
	add.s64 	%rd307, %rd303, %rd226;
	xor.b64  	%rd308, %rd267, %rd249;
	and.b64  	%rd309, %rd291, %rd308;
	xor.b64  	%rd310, %rd309, %rd249;
	add.s64 	%rd311, %rd307, %rd310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd291;
	}
	shf.r.wrap.b32 	%r137, %r136, %r135, 14;
	shf.r.wrap.b32 	%r138, %r135, %r136, 14;
	mov.b64 	%rd312, {%r138, %r137};
	shf.r.wrap.b32 	%r139, %r136, %r135, 18;
	shf.r.wrap.b32 	%r140, %r135, %r136, 18;
	mov.b64 	%rd313, {%r140, %r139};
	xor.b64  	%rd314, %rd312, %rd313;
	shf.l.wrap.b32 	%r141, %r135, %r136, 23;
	shf.l.wrap.b32 	%r142, %r136, %r135, 23;
	mov.b64 	%rd315, {%r142, %r141};
	xor.b64  	%rd316, %rd314, %rd315;
	add.s64 	%rd317, %rd311, %rd316;
	add.s64 	%rd318, %rd317, -7908458776815382629;
	add.s64 	%rd319, %rd318, %rd227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd302;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 28;
	shf.r.wrap.b32 	%r146, %r143, %r144, 28;
	mov.b64 	%rd320, {%r146, %r145};
	shf.l.wrap.b32 	%r147, %r143, %r144, 30;
	shf.l.wrap.b32 	%r148, %r144, %r143, 30;
	mov.b64 	%rd321, {%r148, %r147};
	xor.b64  	%rd322, %rd320, %rd321;
	shf.l.wrap.b32 	%r149, %r143, %r144, 25;
	shf.l.wrap.b32 	%r150, %r144, %r143, 25;
	mov.b64 	%rd323, {%r150, %r149};
	xor.b64  	%rd324, %rd322, %rd323;
	and.b64  	%rd325, %rd302, %rd278;
	or.b64  	%rd326, %rd302, %rd278;
	and.b64  	%rd327, %rd326, %rd250;
	or.b64  	%rd328, %rd327, %rd325;
	add.s64 	%rd329, %rd328, %rd324;
	add.s64 	%rd330, %rd329, %rd318;
	add.s64 	%rd331, %rd304, %rd249;
	xor.b64  	%rd332, %rd291, %rd267;
	and.b64  	%rd333, %rd319, %rd332;
	xor.b64  	%rd334, %rd333, %rd267;
	add.s64 	%rd335, %rd331, %rd334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r151,%dummy}, %rd319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd319;
	}
	shf.r.wrap.b32 	%r153, %r152, %r151, 14;
	shf.r.wrap.b32 	%r154, %r151, %r152, 14;
	mov.b64 	%rd336, {%r154, %r153};
	shf.r.wrap.b32 	%r155, %r152, %r151, 18;
	shf.r.wrap.b32 	%r156, %r151, %r152, 18;
	mov.b64 	%rd337, {%r156, %r155};
	xor.b64  	%rd338, %rd336, %rd337;
	shf.l.wrap.b32 	%r157, %r151, %r152, 23;
	shf.l.wrap.b32 	%r158, %r152, %r151, 23;
	mov.b64 	%rd339, {%r158, %r157};
	xor.b64  	%rd340, %rd338, %rd339;
	add.s64 	%rd341, %rd335, %rd340;
	add.s64 	%rd342, %rd341, -6116909921290321640;
	add.s64 	%rd343, %rd342, %rd250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd330;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 28;
	shf.r.wrap.b32 	%r162, %r159, %r160, 28;
	mov.b64 	%rd344, {%r162, %r161};
	shf.l.wrap.b32 	%r163, %r159, %r160, 30;
	shf.l.wrap.b32 	%r164, %r160, %r159, 30;
	mov.b64 	%rd345, {%r164, %r163};
	xor.b64  	%rd346, %rd344, %rd345;
	shf.l.wrap.b32 	%r165, %r159, %r160, 25;
	shf.l.wrap.b32 	%r166, %r160, %r159, 25;
	mov.b64 	%rd347, {%r166, %r165};
	xor.b64  	%rd348, %rd346, %rd347;
	and.b64  	%rd349, %rd330, %rd302;
	or.b64  	%rd350, %rd330, %rd302;
	and.b64  	%rd351, %rd350, %rd278;
	or.b64  	%rd352, %rd351, %rd349;
	add.s64 	%rd353, %rd352, %rd348;
	add.s64 	%rd354, %rd353, %rd342;
	ld.local.v2.u64 	{%rd355, %rd356}, [%rd1+64];
	add.s64 	%rd359, %rd355, %rd267;
	xor.b64  	%rd360, %rd319, %rd291;
	and.b64  	%rd361, %rd343, %rd360;
	xor.b64  	%rd362, %rd361, %rd291;
	add.s64 	%rd363, %rd359, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd343;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 14;
	shf.r.wrap.b32 	%r170, %r167, %r168, 14;
	mov.b64 	%rd364, {%r170, %r169};
	shf.r.wrap.b32 	%r171, %r168, %r167, 18;
	shf.r.wrap.b32 	%r172, %r167, %r168, 18;
	mov.b64 	%rd365, {%r172, %r171};
	xor.b64  	%rd366, %rd364, %rd365;
	shf.l.wrap.b32 	%r173, %r167, %r168, 23;
	shf.l.wrap.b32 	%r174, %r168, %r167, 23;
	mov.b64 	%rd367, {%r174, %r173};
	xor.b64  	%rd368, %rd366, %rd367;
	add.s64 	%rd369, %rd363, %rd368;
	add.s64 	%rd370, %rd369, -2880145864133508542;
	add.s64 	%rd371, %rd370, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd354;
	}
	shf.r.wrap.b32 	%r177, %r176, %r175, 28;
	shf.r.wrap.b32 	%r178, %r175, %r176, 28;
	mov.b64 	%rd372, {%r178, %r177};
	shf.l.wrap.b32 	%r179, %r175, %r176, 30;
	shf.l.wrap.b32 	%r180, %r176, %r175, 30;
	mov.b64 	%rd373, {%r180, %r179};
	xor.b64  	%rd374, %rd372, %rd373;
	shf.l.wrap.b32 	%r181, %r175, %r176, 25;
	shf.l.wrap.b32 	%r182, %r176, %r175, 25;
	mov.b64 	%rd375, {%r182, %r181};
	xor.b64  	%rd376, %rd374, %rd375;
	and.b64  	%rd377, %rd354, %rd330;
	or.b64  	%rd378, %rd354, %rd330;
	and.b64  	%rd379, %rd378, %rd302;
	or.b64  	%rd380, %rd379, %rd377;
	add.s64 	%rd381, %rd380, %rd376;
	add.s64 	%rd382, %rd381, %rd370;
	add.s64 	%rd383, %rd356, %rd291;
	xor.b64  	%rd384, %rd343, %rd319;
	and.b64  	%rd385, %rd371, %rd384;
	xor.b64  	%rd386, %rd385, %rd319;
	add.s64 	%rd387, %rd383, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd371;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 14;
	shf.r.wrap.b32 	%r186, %r183, %r184, 14;
	mov.b64 	%rd388, {%r186, %r185};
	shf.r.wrap.b32 	%r187, %r184, %r183, 18;
	shf.r.wrap.b32 	%r188, %r183, %r184, 18;
	mov.b64 	%rd389, {%r188, %r187};
	xor.b64  	%rd390, %rd388, %rd389;
	shf.l.wrap.b32 	%r189, %r183, %r184, 23;
	shf.l.wrap.b32 	%r190, %r184, %r183, 23;
	mov.b64 	%rd391, {%r190, %r189};
	xor.b64  	%rd392, %rd390, %rd391;
	add.s64 	%rd393, %rd387, %rd392;
	add.s64 	%rd394, %rd393, 1334009975649890238;
	add.s64 	%rd395, %rd394, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd382;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 28;
	shf.r.wrap.b32 	%r194, %r191, %r192, 28;
	mov.b64 	%rd396, {%r194, %r193};
	shf.l.wrap.b32 	%r195, %r191, %r192, 30;
	shf.l.wrap.b32 	%r196, %r192, %r191, 30;
	mov.b64 	%rd397, {%r196, %r195};
	xor.b64  	%rd398, %rd396, %rd397;
	shf.l.wrap.b32 	%r197, %r191, %r192, 25;
	shf.l.wrap.b32 	%r198, %r192, %r191, 25;
	mov.b64 	%rd399, {%r198, %r197};
	xor.b64  	%rd400, %rd398, %rd399;
	and.b64  	%rd401, %rd382, %rd354;
	or.b64  	%rd402, %rd382, %rd354;
	and.b64  	%rd403, %rd402, %rd330;
	or.b64  	%rd404, %rd403, %rd401;
	add.s64 	%rd405, %rd404, %rd400;
	add.s64 	%rd406, %rd405, %rd394;
	ld.local.v2.u64 	{%rd407, %rd408}, [%rd1+80];
	add.s64 	%rd411, %rd407, %rd319;
	xor.b64  	%rd412, %rd371, %rd343;
	and.b64  	%rd413, %rd395, %rd412;
	xor.b64  	%rd414, %rd413, %rd343;
	add.s64 	%rd415, %rd411, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd395;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 14;
	shf.r.wrap.b32 	%r202, %r199, %r200, 14;
	mov.b64 	%rd416, {%r202, %r201};
	shf.r.wrap.b32 	%r203, %r200, %r199, 18;
	shf.r.wrap.b32 	%r204, %r199, %r200, 18;
	mov.b64 	%rd417, {%r204, %r203};
	xor.b64  	%rd418, %rd416, %rd417;
	shf.l.wrap.b32 	%r205, %r199, %r200, 23;
	shf.l.wrap.b32 	%r206, %r200, %r199, 23;
	mov.b64 	%rd419, {%r206, %r205};
	xor.b64  	%rd420, %rd418, %rd419;
	add.s64 	%rd421, %rd415, %rd420;
	add.s64 	%rd422, %rd421, 2608012711638119052;
	add.s64 	%rd423, %rd422, %rd330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r208}, %rd406;
	}
	shf.r.wrap.b32 	%r209, %r208, %r207, 28;
	shf.r.wrap.b32 	%r210, %r207, %r208, 28;
	mov.b64 	%rd424, {%r210, %r209};
	shf.l.wrap.b32 	%r211, %r207, %r208, 30;
	shf.l.wrap.b32 	%r212, %r208, %r207, 30;
	mov.b64 	%rd425, {%r212, %r211};
	xor.b64  	%rd426, %rd424, %rd425;
	shf.l.wrap.b32 	%r213, %r207, %r208, 25;
	shf.l.wrap.b32 	%r214, %r208, %r207, 25;
	mov.b64 	%rd427, {%r214, %r213};
	xor.b64  	%rd428, %rd426, %rd427;
	and.b64  	%rd429, %rd406, %rd382;
	or.b64  	%rd430, %rd406, %rd382;
	and.b64  	%rd431, %rd430, %rd354;
	or.b64  	%rd432, %rd431, %rd429;
	add.s64 	%rd433, %rd432, %rd428;
	add.s64 	%rd434, %rd433, %rd422;
	add.s64 	%rd435, %rd408, %rd343;
	xor.b64  	%rd436, %rd395, %rd371;
	and.b64  	%rd437, %rd423, %rd436;
	xor.b64  	%rd438, %rd437, %rd371;
	add.s64 	%rd439, %rd435, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd423;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 14;
	shf.r.wrap.b32 	%r218, %r215, %r216, 14;
	mov.b64 	%rd440, {%r218, %r217};
	shf.r.wrap.b32 	%r219, %r216, %r215, 18;
	shf.r.wrap.b32 	%r220, %r215, %r216, 18;
	mov.b64 	%rd441, {%r220, %r219};
	xor.b64  	%rd442, %rd440, %rd441;
	shf.l.wrap.b32 	%r221, %r215, %r216, 23;
	shf.l.wrap.b32 	%r222, %r216, %r215, 23;
	mov.b64 	%rd443, {%r222, %r221};
	xor.b64  	%rd444, %rd442, %rd443;
	add.s64 	%rd445, %rd439, %rd444;
	add.s64 	%rd446, %rd445, 6128411473006802146;
	add.s64 	%rd447, %rd446, %rd354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd434;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 28;
	shf.r.wrap.b32 	%r226, %r223, %r224, 28;
	mov.b64 	%rd448, {%r226, %r225};
	shf.l.wrap.b32 	%r227, %r223, %r224, 30;
	shf.l.wrap.b32 	%r228, %r224, %r223, 30;
	mov.b64 	%rd449, {%r228, %r227};
	xor.b64  	%rd450, %rd448, %rd449;
	shf.l.wrap.b32 	%r229, %r223, %r224, 25;
	shf.l.wrap.b32 	%r230, %r224, %r223, 25;
	mov.b64 	%rd451, {%r230, %r229};
	xor.b64  	%rd452, %rd450, %rd451;
	and.b64  	%rd453, %rd434, %rd406;
	or.b64  	%rd454, %rd434, %rd406;
	and.b64  	%rd455, %rd454, %rd382;
	or.b64  	%rd456, %rd455, %rd453;
	add.s64 	%rd457, %rd456, %rd452;
	add.s64 	%rd458, %rd457, %rd446;
	ld.local.v2.u64 	{%rd459, %rd460}, [%rd1+96];
	add.s64 	%rd463, %rd459, %rd371;
	xor.b64  	%rd464, %rd423, %rd395;
	and.b64  	%rd465, %rd447, %rd464;
	xor.b64  	%rd466, %rd465, %rd395;
	add.s64 	%rd467, %rd463, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r231,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd447;
	}
	shf.r.wrap.b32 	%r233, %r232, %r231, 14;
	shf.r.wrap.b32 	%r234, %r231, %r232, 14;
	mov.b64 	%rd468, {%r234, %r233};
	shf.r.wrap.b32 	%r235, %r232, %r231, 18;
	shf.r.wrap.b32 	%r236, %r231, %r232, 18;
	mov.b64 	%rd469, {%r236, %r235};
	xor.b64  	%rd470, %rd468, %rd469;
	shf.l.wrap.b32 	%r237, %r231, %r232, 23;
	shf.l.wrap.b32 	%r238, %r232, %r231, 23;
	mov.b64 	%rd471, {%r238, %r237};
	xor.b64  	%rd472, %rd470, %rd471;
	add.s64 	%rd473, %rd467, %rd472;
	add.s64 	%rd474, %rd473, 8268148722764581231;
	add.s64 	%rd475, %rd474, %rd382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd458;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 28;
	shf.r.wrap.b32 	%r242, %r239, %r240, 28;
	mov.b64 	%rd476, {%r242, %r241};
	shf.l.wrap.b32 	%r243, %r239, %r240, 30;
	shf.l.wrap.b32 	%r244, %r240, %r239, 30;
	mov.b64 	%rd477, {%r244, %r243};
	xor.b64  	%rd478, %rd476, %rd477;
	shf.l.wrap.b32 	%r245, %r239, %r240, 25;
	shf.l.wrap.b32 	%r246, %r240, %r239, 25;
	mov.b64 	%rd479, {%r246, %r245};
	xor.b64  	%rd480, %rd478, %rd479;
	and.b64  	%rd481, %rd458, %rd434;
	or.b64  	%rd482, %rd458, %rd434;
	and.b64  	%rd483, %rd482, %rd406;
	or.b64  	%rd484, %rd483, %rd481;
	add.s64 	%rd485, %rd484, %rd480;
	add.s64 	%rd486, %rd485, %rd474;
	add.s64 	%rd487, %rd460, %rd395;
	xor.b64  	%rd488, %rd447, %rd423;
	and.b64  	%rd489, %rd475, %rd488;
	xor.b64  	%rd490, %rd489, %rd423;
	add.s64 	%rd491, %rd487, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd475;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 14;
	shf.r.wrap.b32 	%r250, %r247, %r248, 14;
	mov.b64 	%rd492, {%r250, %r249};
	shf.r.wrap.b32 	%r251, %r248, %r247, 18;
	shf.r.wrap.b32 	%r252, %r247, %r248, 18;
	mov.b64 	%rd493, {%r252, %r251};
	xor.b64  	%rd494, %rd492, %rd493;
	shf.l.wrap.b32 	%r253, %r247, %r248, 23;
	shf.l.wrap.b32 	%r254, %r248, %r247, 23;
	mov.b64 	%rd495, {%r254, %r253};
	xor.b64  	%rd496, %rd494, %rd495;
	add.s64 	%rd497, %rd491, %rd496;
	add.s64 	%rd498, %rd497, -9160688886553864527;
	add.s64 	%rd499, %rd498, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd486;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 28;
	shf.r.wrap.b32 	%r258, %r255, %r256, 28;
	mov.b64 	%rd500, {%r258, %r257};
	shf.l.wrap.b32 	%r259, %r255, %r256, 30;
	shf.l.wrap.b32 	%r260, %r256, %r255, 30;
	mov.b64 	%rd501, {%r260, %r259};
	xor.b64  	%rd502, %rd500, %rd501;
	shf.l.wrap.b32 	%r261, %r255, %r256, 25;
	shf.l.wrap.b32 	%r262, %r256, %r255, 25;
	mov.b64 	%rd503, {%r262, %r261};
	xor.b64  	%rd504, %rd502, %rd503;
	and.b64  	%rd505, %rd486, %rd458;
	or.b64  	%rd506, %rd486, %rd458;
	and.b64  	%rd507, %rd506, %rd434;
	or.b64  	%rd508, %rd507, %rd505;
	add.s64 	%rd509, %rd508, %rd504;
	add.s64 	%rd510, %rd509, %rd498;
	ld.local.v2.u64 	{%rd511, %rd512}, [%rd1+112];
	add.s64 	%rd515, %rd511, %rd423;
	xor.b64  	%rd516, %rd475, %rd447;
	and.b64  	%rd517, %rd499, %rd516;
	xor.b64  	%rd518, %rd517, %rd447;
	add.s64 	%rd519, %rd515, %rd518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r263,%dummy}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd499;
	}
	shf.r.wrap.b32 	%r265, %r264, %r263, 14;
	shf.r.wrap.b32 	%r266, %r263, %r264, 14;
	mov.b64 	%rd520, {%r266, %r265};
	shf.r.wrap.b32 	%r267, %r264, %r263, 18;
	shf.r.wrap.b32 	%r268, %r263, %r264, 18;
	mov.b64 	%rd521, {%r268, %r267};
	xor.b64  	%rd522, %rd520, %rd521;
	shf.l.wrap.b32 	%r269, %r263, %r264, 23;
	shf.l.wrap.b32 	%r270, %r264, %r263, 23;
	mov.b64 	%rd523, {%r270, %r269};
	xor.b64  	%rd524, %rd522, %rd523;
	add.s64 	%rd525, %rd519, %rd524;
	add.s64 	%rd526, %rd525, -7215885187991268811;
	add.s64 	%rd527, %rd526, %rd434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd510;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 28;
	shf.r.wrap.b32 	%r274, %r271, %r272, 28;
	mov.b64 	%rd528, {%r274, %r273};
	shf.l.wrap.b32 	%r275, %r271, %r272, 30;
	shf.l.wrap.b32 	%r276, %r272, %r271, 30;
	mov.b64 	%rd529, {%r276, %r275};
	xor.b64  	%rd530, %rd528, %rd529;
	shf.l.wrap.b32 	%r277, %r271, %r272, 25;
	shf.l.wrap.b32 	%r278, %r272, %r271, 25;
	mov.b64 	%rd531, {%r278, %r277};
	xor.b64  	%rd532, %rd530, %rd531;
	and.b64  	%rd533, %rd510, %rd486;
	or.b64  	%rd534, %rd510, %rd486;
	and.b64  	%rd535, %rd534, %rd458;
	or.b64  	%rd536, %rd535, %rd533;
	add.s64 	%rd537, %rd536, %rd532;
	add.s64 	%rd538, %rd537, %rd526;
	add.s64 	%rd539, %rd512, %rd447;
	xor.b64  	%rd540, %rd499, %rd475;
	and.b64  	%rd541, %rd527, %rd540;
	xor.b64  	%rd542, %rd541, %rd475;
	add.s64 	%rd543, %rd539, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r279,%dummy}, %rd527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd527;
	}
	shf.r.wrap.b32 	%r281, %r280, %r279, 14;
	shf.r.wrap.b32 	%r282, %r279, %r280, 14;
	mov.b64 	%rd544, {%r282, %r281};
	shf.r.wrap.b32 	%r283, %r280, %r279, 18;
	shf.r.wrap.b32 	%r284, %r279, %r280, 18;
	mov.b64 	%rd545, {%r284, %r283};
	xor.b64  	%rd546, %rd544, %rd545;
	shf.l.wrap.b32 	%r285, %r279, %r280, 23;
	shf.l.wrap.b32 	%r286, %r280, %r279, 23;
	mov.b64 	%rd547, {%r286, %r285};
	xor.b64  	%rd548, %rd546, %rd547;
	add.s64 	%rd549, %rd543, %rd548;
	add.s64 	%rd550, %rd549, -4495734319001033068;
	add.s64 	%rd551, %rd550, %rd458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r287,%dummy}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd538;
	}
	shf.r.wrap.b32 	%r289, %r288, %r287, 28;
	shf.r.wrap.b32 	%r290, %r287, %r288, 28;
	mov.b64 	%rd552, {%r290, %r289};
	shf.l.wrap.b32 	%r291, %r287, %r288, 30;
	shf.l.wrap.b32 	%r292, %r288, %r287, 30;
	mov.b64 	%rd553, {%r292, %r291};
	xor.b64  	%rd554, %rd552, %rd553;
	shf.l.wrap.b32 	%r293, %r287, %r288, 25;
	shf.l.wrap.b32 	%r294, %r288, %r287, 25;
	mov.b64 	%rd555, {%r294, %r293};
	xor.b64  	%rd556, %rd554, %rd555;
	and.b64  	%rd557, %rd538, %rd510;
	or.b64  	%rd558, %rd538, %rd510;
	and.b64  	%rd559, %rd558, %rd486;
	or.b64  	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd560, %rd556;
	add.s64 	%rd562, %rd561, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd511;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 19;
	shf.r.wrap.b32 	%r298, %r295, %r296, 19;
	mov.b64 	%rd563, {%r298, %r297};
	shf.l.wrap.b32 	%r299, %r295, %r296, 3;
	shf.l.wrap.b32 	%r300, %r296, %r295, 3;
	mov.b64 	%rd564, {%r300, %r299};
	xor.b64  	%rd565, %rd563, %rd564;
	shr.u64 	%rd566, %rd511, 6;
	xor.b64  	%rd567, %rd565, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd163;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 1;
	shf.r.wrap.b32 	%r304, %r301, %r302, 1;
	mov.b64 	%rd568, {%r304, %r303};
	shf.r.wrap.b32 	%r305, %r302, %r301, 8;
	shf.r.wrap.b32 	%r306, %r301, %r302, 8;
	mov.b64 	%rd569, {%r306, %r305};
	xor.b64  	%rd570, %rd568, %rd569;
	shr.u64 	%rd571, %rd163, 7;
	xor.b64  	%rd572, %rd570, %rd571;
	add.s64 	%rd573, %rd567, %rd162;
	add.s64 	%rd574, %rd573, %rd356;
	add.s64 	%rd575, %rd574, %rd572;
	add.s64 	%rd576, %rd575, %rd475;
	xor.b64  	%rd577, %rd527, %rd499;
	and.b64  	%rd578, %rd551, %rd577;
	xor.b64  	%rd579, %rd578, %rd499;
	add.s64 	%rd580, %rd576, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd551;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 14;
	shf.r.wrap.b32 	%r310, %r307, %r308, 14;
	mov.b64 	%rd581, {%r310, %r309};
	shf.r.wrap.b32 	%r311, %r308, %r307, 18;
	shf.r.wrap.b32 	%r312, %r307, %r308, 18;
	mov.b64 	%rd582, {%r312, %r311};
	xor.b64  	%rd583, %rd581, %rd582;
	shf.l.wrap.b32 	%r313, %r307, %r308, 23;
	shf.l.wrap.b32 	%r314, %r308, %r307, 23;
	mov.b64 	%rd584, {%r314, %r313};
	xor.b64  	%rd585, %rd583, %rd584;
	add.s64 	%rd586, %rd580, %rd585;
	add.s64 	%rd587, %rd586, -1973867731355612462;
	add.s64 	%rd588, %rd587, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd562;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 28;
	shf.r.wrap.b32 	%r318, %r315, %r316, 28;
	mov.b64 	%rd589, {%r318, %r317};
	shf.l.wrap.b32 	%r319, %r315, %r316, 30;
	shf.l.wrap.b32 	%r320, %r316, %r315, 30;
	mov.b64 	%rd590, {%r320, %r319};
	xor.b64  	%rd591, %rd589, %rd590;
	shf.l.wrap.b32 	%r321, %r315, %r316, 25;
	shf.l.wrap.b32 	%r322, %r316, %r315, 25;
	mov.b64 	%rd592, {%r322, %r321};
	xor.b64  	%rd593, %rd591, %rd592;
	and.b64  	%rd594, %rd562, %rd538;
	or.b64  	%rd595, %rd562, %rd538;
	and.b64  	%rd596, %rd595, %rd510;
	or.b64  	%rd597, %rd596, %rd594;
	add.s64 	%rd598, %rd597, %rd593;
	add.s64 	%rd599, %rd598, %rd587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd512;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 19;
	shf.r.wrap.b32 	%r326, %r323, %r324, 19;
	mov.b64 	%rd600, {%r326, %r325};
	shf.l.wrap.b32 	%r327, %r323, %r324, 3;
	shf.l.wrap.b32 	%r328, %r324, %r323, 3;
	mov.b64 	%rd601, {%r328, %r327};
	xor.b64  	%rd602, %rd600, %rd601;
	shr.u64 	%rd603, %rd512, 6;
	xor.b64  	%rd604, %rd602, %rd603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd201;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 1;
	shf.r.wrap.b32 	%r332, %r329, %r330, 1;
	mov.b64 	%rd605, {%r332, %r331};
	shf.r.wrap.b32 	%r333, %r330, %r329, 8;
	shf.r.wrap.b32 	%r334, %r329, %r330, 8;
	mov.b64 	%rd606, {%r334, %r333};
	xor.b64  	%rd607, %rd605, %rd606;
	shr.u64 	%rd608, %rd201, 7;
	xor.b64  	%rd609, %rd607, %rd608;
	add.s64 	%rd610, %rd604, %rd163;
	add.s64 	%rd611, %rd610, %rd407;
	add.s64 	%rd612, %rd611, %rd609;
	add.s64 	%rd613, %rd612, %rd499;
	xor.b64  	%rd614, %rd551, %rd527;
	and.b64  	%rd615, %rd588, %rd614;
	xor.b64  	%rd616, %rd615, %rd527;
	add.s64 	%rd617, %rd613, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd588;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 14;
	shf.r.wrap.b32 	%r338, %r335, %r336, 14;
	mov.b64 	%rd618, {%r338, %r337};
	shf.r.wrap.b32 	%r339, %r336, %r335, 18;
	shf.r.wrap.b32 	%r340, %r335, %r336, 18;
	mov.b64 	%rd619, {%r340, %r339};
	xor.b64  	%rd620, %rd618, %rd619;
	shf.l.wrap.b32 	%r341, %r335, %r336, 23;
	shf.l.wrap.b32 	%r342, %r336, %r335, 23;
	mov.b64 	%rd621, {%r342, %r341};
	xor.b64  	%rd622, %rd620, %rd621;
	add.s64 	%rd623, %rd617, %rd622;
	add.s64 	%rd624, %rd623, -1171420211273849373;
	add.s64 	%rd625, %rd624, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd599;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 28;
	shf.r.wrap.b32 	%r346, %r343, %r344, 28;
	mov.b64 	%rd626, {%r346, %r345};
	shf.l.wrap.b32 	%r347, %r343, %r344, 30;
	shf.l.wrap.b32 	%r348, %r344, %r343, 30;
	mov.b64 	%rd627, {%r348, %r347};
	xor.b64  	%rd628, %rd626, %rd627;
	shf.l.wrap.b32 	%r349, %r343, %r344, 25;
	shf.l.wrap.b32 	%r350, %r344, %r343, 25;
	mov.b64 	%rd629, {%r350, %r349};
	xor.b64  	%rd630, %rd628, %rd629;
	and.b64  	%rd631, %rd599, %rd562;
	or.b64  	%rd632, %rd599, %rd562;
	and.b64  	%rd633, %rd632, %rd538;
	or.b64  	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd634, %rd630;
	add.s64 	%rd636, %rd635, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd575;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 19;
	shf.r.wrap.b32 	%r354, %r351, %r352, 19;
	mov.b64 	%rd637, {%r354, %r353};
	shf.l.wrap.b32 	%r355, %r351, %r352, 3;
	shf.l.wrap.b32 	%r356, %r352, %r351, 3;
	mov.b64 	%rd638, {%r356, %r355};
	xor.b64  	%rd639, %rd637, %rd638;
	shr.u64 	%rd640, %rd575, 6;
	xor.b64  	%rd641, %rd639, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd202;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 1;
	shf.r.wrap.b32 	%r360, %r357, %r358, 1;
	mov.b64 	%rd642, {%r360, %r359};
	shf.r.wrap.b32 	%r361, %r358, %r357, 8;
	shf.r.wrap.b32 	%r362, %r357, %r358, 8;
	mov.b64 	%rd643, {%r362, %r361};
	xor.b64  	%rd644, %rd642, %rd643;
	shr.u64 	%rd645, %rd202, 7;
	xor.b64  	%rd646, %rd644, %rd645;
	add.s64 	%rd647, %rd641, %rd201;
	add.s64 	%rd648, %rd647, %rd408;
	add.s64 	%rd649, %rd648, %rd646;
	add.s64 	%rd650, %rd649, %rd527;
	xor.b64  	%rd651, %rd588, %rd551;
	and.b64  	%rd652, %rd625, %rd651;
	xor.b64  	%rd653, %rd652, %rd551;
	add.s64 	%rd654, %rd650, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd625;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 14;
	shf.r.wrap.b32 	%r366, %r363, %r364, 14;
	mov.b64 	%rd655, {%r366, %r365};
	shf.r.wrap.b32 	%r367, %r364, %r363, 18;
	shf.r.wrap.b32 	%r368, %r363, %r364, 18;
	mov.b64 	%rd656, {%r368, %r367};
	xor.b64  	%rd657, %rd655, %rd656;
	shf.l.wrap.b32 	%r369, %r363, %r364, 23;
	shf.l.wrap.b32 	%r370, %r364, %r363, 23;
	mov.b64 	%rd658, {%r370, %r369};
	xor.b64  	%rd659, %rd657, %rd658;
	add.s64 	%rd660, %rd654, %rd659;
	add.s64 	%rd661, %rd660, 1135362057144423861;
	add.s64 	%rd662, %rd661, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd636;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 28;
	shf.r.wrap.b32 	%r374, %r371, %r372, 28;
	mov.b64 	%rd663, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 30;
	shf.l.wrap.b32 	%r376, %r372, %r371, 30;
	mov.b64 	%rd664, {%r376, %r375};
	xor.b64  	%rd665, %rd663, %rd664;
	shf.l.wrap.b32 	%r377, %r371, %r372, 25;
	shf.l.wrap.b32 	%r378, %r372, %r371, 25;
	mov.b64 	%rd666, {%r378, %r377};
	xor.b64  	%rd667, %rd665, %rd666;
	and.b64  	%rd668, %rd636, %rd599;
	or.b64  	%rd669, %rd636, %rd599;
	and.b64  	%rd670, %rd669, %rd562;
	or.b64  	%rd671, %rd670, %rd668;
	add.s64 	%rd672, %rd671, %rd667;
	add.s64 	%rd673, %rd672, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd612;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd674, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd675, {%r384, %r383};
	xor.b64  	%rd676, %rd674, %rd675;
	shr.u64 	%rd677, %rd612, 6;
	xor.b64  	%rd678, %rd676, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd251;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 1;
	shf.r.wrap.b32 	%r388, %r385, %r386, 1;
	mov.b64 	%rd679, {%r388, %r387};
	shf.r.wrap.b32 	%r389, %r386, %r385, 8;
	shf.r.wrap.b32 	%r390, %r385, %r386, 8;
	mov.b64 	%rd680, {%r390, %r389};
	xor.b64  	%rd681, %rd679, %rd680;
	shr.u64 	%rd682, %rd251, 7;
	xor.b64  	%rd683, %rd681, %rd682;
	add.s64 	%rd684, %rd678, %rd202;
	add.s64 	%rd685, %rd684, %rd459;
	add.s64 	%rd686, %rd685, %rd683;
	add.s64 	%rd687, %rd686, %rd551;
	xor.b64  	%rd688, %rd625, %rd588;
	and.b64  	%rd689, %rd662, %rd688;
	xor.b64  	%rd690, %rd689, %rd588;
	add.s64 	%rd691, %rd687, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd662;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 14;
	shf.r.wrap.b32 	%r394, %r391, %r392, 14;
	mov.b64 	%rd692, {%r394, %r393};
	shf.r.wrap.b32 	%r395, %r392, %r391, 18;
	shf.r.wrap.b32 	%r396, %r391, %r392, 18;
	mov.b64 	%rd693, {%r396, %r395};
	xor.b64  	%rd694, %rd692, %rd693;
	shf.l.wrap.b32 	%r397, %r391, %r392, 23;
	shf.l.wrap.b32 	%r398, %r392, %r391, 23;
	mov.b64 	%rd695, {%r398, %r397};
	xor.b64  	%rd696, %rd694, %rd695;
	add.s64 	%rd697, %rd691, %rd696;
	add.s64 	%rd698, %rd697, 2597628984639134821;
	add.s64 	%rd699, %rd698, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd673;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 28;
	shf.r.wrap.b32 	%r402, %r399, %r400, 28;
	mov.b64 	%rd700, {%r402, %r401};
	shf.l.wrap.b32 	%r403, %r399, %r400, 30;
	shf.l.wrap.b32 	%r404, %r400, %r399, 30;
	mov.b64 	%rd701, {%r404, %r403};
	xor.b64  	%rd702, %rd700, %rd701;
	shf.l.wrap.b32 	%r405, %r399, %r400, 25;
	shf.l.wrap.b32 	%r406, %r400, %r399, 25;
	mov.b64 	%rd703, {%r406, %r405};
	xor.b64  	%rd704, %rd702, %rd703;
	and.b64  	%rd705, %rd673, %rd636;
	or.b64  	%rd706, %rd673, %rd636;
	and.b64  	%rd707, %rd706, %rd599;
	or.b64  	%rd708, %rd707, %rd705;
	add.s64 	%rd709, %rd708, %rd704;
	add.s64 	%rd710, %rd709, %rd698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd649;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 19;
	shf.r.wrap.b32 	%r410, %r407, %r408, 19;
	mov.b64 	%rd711, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 3;
	shf.l.wrap.b32 	%r412, %r408, %r407, 3;
	mov.b64 	%rd712, {%r412, %r411};
	xor.b64  	%rd713, %rd711, %rd712;
	shr.u64 	%rd714, %rd649, 6;
	xor.b64  	%rd715, %rd713, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd252;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 1;
	shf.r.wrap.b32 	%r416, %r413, %r414, 1;
	mov.b64 	%rd716, {%r416, %r415};
	shf.r.wrap.b32 	%r417, %r414, %r413, 8;
	shf.r.wrap.b32 	%r418, %r413, %r414, 8;
	mov.b64 	%rd717, {%r418, %r417};
	xor.b64  	%rd718, %rd716, %rd717;
	shr.u64 	%rd719, %rd252, 7;
	xor.b64  	%rd720, %rd718, %rd719;
	add.s64 	%rd721, %rd715, %rd251;
	add.s64 	%rd722, %rd721, %rd460;
	add.s64 	%rd723, %rd722, %rd720;
	add.s64 	%rd724, %rd723, %rd588;
	xor.b64  	%rd725, %rd662, %rd625;
	and.b64  	%rd726, %rd699, %rd725;
	xor.b64  	%rd727, %rd726, %rd625;
	add.s64 	%rd728, %rd724, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd699;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 14;
	shf.r.wrap.b32 	%r422, %r419, %r420, 14;
	mov.b64 	%rd729, {%r422, %r421};
	shf.r.wrap.b32 	%r423, %r420, %r419, 18;
	shf.r.wrap.b32 	%r424, %r419, %r420, 18;
	mov.b64 	%rd730, {%r424, %r423};
	xor.b64  	%rd731, %rd729, %rd730;
	shf.l.wrap.b32 	%r425, %r419, %r420, 23;
	shf.l.wrap.b32 	%r426, %r420, %r419, 23;
	mov.b64 	%rd732, {%r426, %r425};
	xor.b64  	%rd733, %rd731, %rd732;
	add.s64 	%rd734, %rd728, %rd733;
	add.s64 	%rd735, %rd734, 3308224258029322869;
	add.s64 	%rd736, %rd735, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd710;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 28;
	shf.r.wrap.b32 	%r430, %r427, %r428, 28;
	mov.b64 	%rd737, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 30;
	shf.l.wrap.b32 	%r432, %r428, %r427, 30;
	mov.b64 	%rd738, {%r432, %r431};
	xor.b64  	%rd739, %rd737, %rd738;
	shf.l.wrap.b32 	%r433, %r427, %r428, 25;
	shf.l.wrap.b32 	%r434, %r428, %r427, 25;
	mov.b64 	%rd740, {%r434, %r433};
	xor.b64  	%rd741, %rd739, %rd740;
	and.b64  	%rd742, %rd710, %rd673;
	or.b64  	%rd743, %rd710, %rd673;
	and.b64  	%rd744, %rd743, %rd636;
	or.b64  	%rd745, %rd744, %rd742;
	add.s64 	%rd746, %rd745, %rd741;
	add.s64 	%rd747, %rd746, %rd735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd686;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 19;
	shf.r.wrap.b32 	%r438, %r435, %r436, 19;
	mov.b64 	%rd748, {%r438, %r437};
	shf.l.wrap.b32 	%r439, %r435, %r436, 3;
	shf.l.wrap.b32 	%r440, %r436, %r435, 3;
	mov.b64 	%rd749, {%r440, %r439};
	xor.b64  	%rd750, %rd748, %rd749;
	shr.u64 	%rd751, %rd686, 6;
	xor.b64  	%rd752, %rd750, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd303;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 1;
	shf.r.wrap.b32 	%r444, %r441, %r442, 1;
	mov.b64 	%rd753, {%r444, %r443};
	shf.r.wrap.b32 	%r445, %r442, %r441, 8;
	shf.r.wrap.b32 	%r446, %r441, %r442, 8;
	mov.b64 	%rd754, {%r446, %r445};
	xor.b64  	%rd755, %rd753, %rd754;
	shr.u64 	%rd756, %rd303, 7;
	xor.b64  	%rd757, %rd755, %rd756;
	add.s64 	%rd758, %rd752, %rd252;
	add.s64 	%rd759, %rd758, %rd511;
	add.s64 	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd760, %rd625;
	xor.b64  	%rd762, %rd699, %rd662;
	and.b64  	%rd763, %rd736, %rd762;
	xor.b64  	%rd764, %rd763, %rd662;
	add.s64 	%rd765, %rd761, %rd764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd736;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 14;
	shf.r.wrap.b32 	%r450, %r447, %r448, 14;
	mov.b64 	%rd766, {%r450, %r449};
	shf.r.wrap.b32 	%r451, %r448, %r447, 18;
	shf.r.wrap.b32 	%r452, %r447, %r448, 18;
	mov.b64 	%rd767, {%r452, %r451};
	xor.b64  	%rd768, %rd766, %rd767;
	shf.l.wrap.b32 	%r453, %r447, %r448, 23;
	shf.l.wrap.b32 	%r454, %r448, %r447, 23;
	mov.b64 	%rd769, {%r454, %r453};
	xor.b64  	%rd770, %rd768, %rd769;
	add.s64 	%rd771, %rd765, %rd770;
	add.s64 	%rd772, %rd771, 5365058923640841347;
	add.s64 	%rd773, %rd772, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd747;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 28;
	shf.r.wrap.b32 	%r458, %r455, %r456, 28;
	mov.b64 	%rd774, {%r458, %r457};
	shf.l.wrap.b32 	%r459, %r455, %r456, 30;
	shf.l.wrap.b32 	%r460, %r456, %r455, 30;
	mov.b64 	%rd775, {%r460, %r459};
	xor.b64  	%rd776, %rd774, %rd775;
	shf.l.wrap.b32 	%r461, %r455, %r456, 25;
	shf.l.wrap.b32 	%r462, %r456, %r455, 25;
	mov.b64 	%rd777, {%r462, %r461};
	xor.b64  	%rd778, %rd776, %rd777;
	and.b64  	%rd779, %rd747, %rd710;
	or.b64  	%rd780, %rd747, %rd710;
	and.b64  	%rd781, %rd780, %rd673;
	or.b64  	%rd782, %rd781, %rd779;
	add.s64 	%rd783, %rd782, %rd778;
	add.s64 	%rd784, %rd783, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd723;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 19;
	shf.r.wrap.b32 	%r466, %r463, %r464, 19;
	mov.b64 	%rd785, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 3;
	shf.l.wrap.b32 	%r468, %r464, %r463, 3;
	mov.b64 	%rd786, {%r468, %r467};
	xor.b64  	%rd787, %rd785, %rd786;
	shr.u64 	%rd788, %rd723, 6;
	xor.b64  	%rd789, %rd787, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd304;
	}
	shf.r.wrap.b32 	%r471, %r470, %r469, 1;
	shf.r.wrap.b32 	%r472, %r469, %r470, 1;
	mov.b64 	%rd790, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r470, %r469, 8;
	shf.r.wrap.b32 	%r474, %r469, %r470, 8;
	mov.b64 	%rd791, {%r474, %r473};
	xor.b64  	%rd792, %rd790, %rd791;
	shr.u64 	%rd793, %rd304, 7;
	xor.b64  	%rd794, %rd792, %rd793;
	add.s64 	%rd795, %rd789, %rd303;
	add.s64 	%rd796, %rd795, %rd512;
	add.s64 	%rd797, %rd796, %rd794;
	add.s64 	%rd798, %rd797, %rd662;
	xor.b64  	%rd799, %rd736, %rd699;
	and.b64  	%rd800, %rd773, %rd799;
	xor.b64  	%rd801, %rd800, %rd699;
	add.s64 	%rd802, %rd798, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd773;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 14;
	shf.r.wrap.b32 	%r478, %r475, %r476, 14;
	mov.b64 	%rd803, {%r478, %r477};
	shf.r.wrap.b32 	%r479, %r476, %r475, 18;
	shf.r.wrap.b32 	%r480, %r475, %r476, 18;
	mov.b64 	%rd804, {%r480, %r479};
	xor.b64  	%rd805, %rd803, %rd804;
	shf.l.wrap.b32 	%r481, %r475, %r476, 23;
	shf.l.wrap.b32 	%r482, %r476, %r475, 23;
	mov.b64 	%rd806, {%r482, %r481};
	xor.b64  	%rd807, %rd805, %rd806;
	add.s64 	%rd808, %rd802, %rd807;
	add.s64 	%rd809, %rd808, 6679025012923562964;
	add.s64 	%rd810, %rd809, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd784;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 28;
	shf.r.wrap.b32 	%r486, %r483, %r484, 28;
	mov.b64 	%rd811, {%r486, %r485};
	shf.l.wrap.b32 	%r487, %r483, %r484, 30;
	shf.l.wrap.b32 	%r488, %r484, %r483, 30;
	mov.b64 	%rd812, {%r488, %r487};
	xor.b64  	%rd813, %rd811, %rd812;
	shf.l.wrap.b32 	%r489, %r483, %r484, 25;
	shf.l.wrap.b32 	%r490, %r484, %r483, 25;
	mov.b64 	%rd814, {%r490, %r489};
	xor.b64  	%rd815, %rd813, %rd814;
	and.b64  	%rd816, %rd784, %rd747;
	or.b64  	%rd817, %rd784, %rd747;
	and.b64  	%rd818, %rd817, %rd710;
	or.b64  	%rd819, %rd818, %rd816;
	add.s64 	%rd820, %rd819, %rd815;
	add.s64 	%rd821, %rd820, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd760;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 19;
	shf.r.wrap.b32 	%r494, %r491, %r492, 19;
	mov.b64 	%rd822, {%r494, %r493};
	shf.l.wrap.b32 	%r495, %r491, %r492, 3;
	shf.l.wrap.b32 	%r496, %r492, %r491, 3;
	mov.b64 	%rd823, {%r496, %r495};
	xor.b64  	%rd824, %rd822, %rd823;
	shr.u64 	%rd825, %rd760, 6;
	xor.b64  	%rd826, %rd824, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd355;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 1;
	shf.r.wrap.b32 	%r500, %r497, %r498, 1;
	mov.b64 	%rd827, {%r500, %r499};
	shf.r.wrap.b32 	%r501, %r498, %r497, 8;
	shf.r.wrap.b32 	%r502, %r497, %r498, 8;
	mov.b64 	%rd828, {%r502, %r501};
	xor.b64  	%rd829, %rd827, %rd828;
	shr.u64 	%rd830, %rd355, 7;
	xor.b64  	%rd831, %rd829, %rd830;
	add.s64 	%rd832, %rd826, %rd304;
	add.s64 	%rd833, %rd832, %rd575;
	add.s64 	%rd834, %rd833, %rd831;
	add.s64 	%rd835, %rd834, %rd699;
	xor.b64  	%rd836, %rd773, %rd736;
	and.b64  	%rd837, %rd810, %rd836;
	xor.b64  	%rd838, %rd837, %rd736;
	add.s64 	%rd839, %rd835, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd810;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 14;
	shf.r.wrap.b32 	%r506, %r503, %r504, 14;
	mov.b64 	%rd840, {%r506, %r505};
	shf.r.wrap.b32 	%r507, %r504, %r503, 18;
	shf.r.wrap.b32 	%r508, %r503, %r504, 18;
	mov.b64 	%rd841, {%r508, %r507};
	xor.b64  	%rd842, %rd840, %rd841;
	shf.l.wrap.b32 	%r509, %r503, %r504, 23;
	shf.l.wrap.b32 	%r510, %r504, %r503, 23;
	mov.b64 	%rd843, {%r510, %r509};
	xor.b64  	%rd844, %rd842, %rd843;
	add.s64 	%rd845, %rd839, %rd844;
	add.s64 	%rd846, %rd845, 8573033837759648693;
	add.s64 	%rd847, %rd846, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd821;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 28;
	shf.r.wrap.b32 	%r514, %r511, %r512, 28;
	mov.b64 	%rd848, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 30;
	shf.l.wrap.b32 	%r516, %r512, %r511, 30;
	mov.b64 	%rd849, {%r516, %r515};
	xor.b64  	%rd850, %rd848, %rd849;
	shf.l.wrap.b32 	%r517, %r511, %r512, 25;
	shf.l.wrap.b32 	%r518, %r512, %r511, 25;
	mov.b64 	%rd851, {%r518, %r517};
	xor.b64  	%rd852, %rd850, %rd851;
	and.b64  	%rd853, %rd821, %rd784;
	or.b64  	%rd854, %rd821, %rd784;
	and.b64  	%rd855, %rd854, %rd747;
	or.b64  	%rd856, %rd855, %rd853;
	add.s64 	%rd857, %rd856, %rd852;
	add.s64 	%rd858, %rd857, %rd846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd797;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 19;
	shf.r.wrap.b32 	%r522, %r519, %r520, 19;
	mov.b64 	%rd859, {%r522, %r521};
	shf.l.wrap.b32 	%r523, %r519, %r520, 3;
	shf.l.wrap.b32 	%r524, %r520, %r519, 3;
	mov.b64 	%rd860, {%r524, %r523};
	xor.b64  	%rd861, %rd859, %rd860;
	shr.u64 	%rd862, %rd797, 6;
	xor.b64  	%rd863, %rd861, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd356;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 1;
	shf.r.wrap.b32 	%r528, %r525, %r526, 1;
	mov.b64 	%rd864, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 8;
	shf.r.wrap.b32 	%r530, %r525, %r526, 8;
	mov.b64 	%rd865, {%r530, %r529};
	xor.b64  	%rd866, %rd864, %rd865;
	shr.u64 	%rd867, %rd356, 7;
	xor.b64  	%rd868, %rd866, %rd867;
	add.s64 	%rd869, %rd863, %rd355;
	add.s64 	%rd870, %rd869, %rd612;
	add.s64 	%rd871, %rd870, %rd868;
	add.s64 	%rd872, %rd871, %rd736;
	xor.b64  	%rd873, %rd810, %rd773;
	and.b64  	%rd874, %rd847, %rd873;
	xor.b64  	%rd875, %rd874, %rd773;
	add.s64 	%rd876, %rd872, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd847;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 14;
	shf.r.wrap.b32 	%r534, %r531, %r532, 14;
	mov.b64 	%rd877, {%r534, %r533};
	shf.r.wrap.b32 	%r535, %r532, %r531, 18;
	shf.r.wrap.b32 	%r536, %r531, %r532, 18;
	mov.b64 	%rd878, {%r536, %r535};
	xor.b64  	%rd879, %rd877, %rd878;
	shf.l.wrap.b32 	%r537, %r531, %r532, 23;
	shf.l.wrap.b32 	%r538, %r532, %r531, 23;
	mov.b64 	%rd880, {%r538, %r537};
	xor.b64  	%rd881, %rd879, %rd880;
	add.s64 	%rd882, %rd876, %rd881;
	add.s64 	%rd883, %rd882, -7476448914759557205;
	add.s64 	%rd884, %rd883, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd858;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 28;
	shf.r.wrap.b32 	%r542, %r539, %r540, 28;
	mov.b64 	%rd885, {%r542, %r541};
	shf.l.wrap.b32 	%r543, %r539, %r540, 30;
	shf.l.wrap.b32 	%r544, %r540, %r539, 30;
	mov.b64 	%rd886, {%r544, %r543};
	xor.b64  	%rd887, %rd885, %rd886;
	shf.l.wrap.b32 	%r545, %r539, %r540, 25;
	shf.l.wrap.b32 	%r546, %r540, %r539, 25;
	mov.b64 	%rd888, {%r546, %r545};
	xor.b64  	%rd889, %rd887, %rd888;
	and.b64  	%rd890, %rd858, %rd821;
	or.b64  	%rd891, %rd858, %rd821;
	and.b64  	%rd892, %rd891, %rd784;
	or.b64  	%rd893, %rd892, %rd890;
	add.s64 	%rd894, %rd893, %rd889;
	add.s64 	%rd895, %rd894, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd834;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 19;
	shf.r.wrap.b32 	%r550, %r547, %r548, 19;
	mov.b64 	%rd896, {%r550, %r549};
	shf.l.wrap.b32 	%r551, %r547, %r548, 3;
	shf.l.wrap.b32 	%r552, %r548, %r547, 3;
	mov.b64 	%rd897, {%r552, %r551};
	xor.b64  	%rd898, %rd896, %rd897;
	shr.u64 	%rd899, %rd834, 6;
	xor.b64  	%rd900, %rd898, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd407;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 1;
	shf.r.wrap.b32 	%r556, %r553, %r554, 1;
	mov.b64 	%rd901, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 8;
	shf.r.wrap.b32 	%r558, %r553, %r554, 8;
	mov.b64 	%rd902, {%r558, %r557};
	xor.b64  	%rd903, %rd901, %rd902;
	shr.u64 	%rd904, %rd407, 7;
	xor.b64  	%rd905, %rd903, %rd904;
	add.s64 	%rd906, %rd900, %rd356;
	add.s64 	%rd907, %rd906, %rd649;
	add.s64 	%rd908, %rd907, %rd905;
	add.s64 	%rd909, %rd908, %rd773;
	xor.b64  	%rd910, %rd847, %rd810;
	and.b64  	%rd911, %rd884, %rd910;
	xor.b64  	%rd912, %rd911, %rd810;
	add.s64 	%rd913, %rd909, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd884;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 14;
	shf.r.wrap.b32 	%r562, %r559, %r560, 14;
	mov.b64 	%rd914, {%r562, %r561};
	shf.r.wrap.b32 	%r563, %r560, %r559, 18;
	shf.r.wrap.b32 	%r564, %r559, %r560, 18;
	mov.b64 	%rd915, {%r564, %r563};
	xor.b64  	%rd916, %rd914, %rd915;
	shf.l.wrap.b32 	%r565, %r559, %r560, 23;
	shf.l.wrap.b32 	%r566, %r560, %r559, 23;
	mov.b64 	%rd917, {%r566, %r565};
	xor.b64  	%rd918, %rd916, %rd917;
	add.s64 	%rd919, %rd913, %rd918;
	add.s64 	%rd920, %rd919, -6327057829258317296;
	add.s64 	%rd921, %rd920, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd895;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 28;
	shf.r.wrap.b32 	%r570, %r567, %r568, 28;
	mov.b64 	%rd922, {%r570, %r569};
	shf.l.wrap.b32 	%r571, %r567, %r568, 30;
	shf.l.wrap.b32 	%r572, %r568, %r567, 30;
	mov.b64 	%rd923, {%r572, %r571};
	xor.b64  	%rd924, %rd922, %rd923;
	shf.l.wrap.b32 	%r573, %r567, %r568, 25;
	shf.l.wrap.b32 	%r574, %r568, %r567, 25;
	mov.b64 	%rd925, {%r574, %r573};
	xor.b64  	%rd926, %rd924, %rd925;
	and.b64  	%rd927, %rd895, %rd858;
	or.b64  	%rd928, %rd895, %rd858;
	and.b64  	%rd929, %rd928, %rd821;
	or.b64  	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd930, %rd926;
	add.s64 	%rd932, %rd931, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd871;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 19;
	shf.r.wrap.b32 	%r578, %r575, %r576, 19;
	mov.b64 	%rd933, {%r578, %r577};
	shf.l.wrap.b32 	%r579, %r575, %r576, 3;
	shf.l.wrap.b32 	%r580, %r576, %r575, 3;
	mov.b64 	%rd934, {%r580, %r579};
	xor.b64  	%rd935, %rd933, %rd934;
	shr.u64 	%rd936, %rd871, 6;
	xor.b64  	%rd937, %rd935, %rd936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd408;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 1;
	shf.r.wrap.b32 	%r584, %r581, %r582, 1;
	mov.b64 	%rd938, {%r584, %r583};
	shf.r.wrap.b32 	%r585, %r582, %r581, 8;
	shf.r.wrap.b32 	%r586, %r581, %r582, 8;
	mov.b64 	%rd939, {%r586, %r585};
	xor.b64  	%rd940, %rd938, %rd939;
	shr.u64 	%rd941, %rd408, 7;
	xor.b64  	%rd942, %rd940, %rd941;
	add.s64 	%rd943, %rd937, %rd407;
	add.s64 	%rd944, %rd943, %rd686;
	add.s64 	%rd945, %rd944, %rd942;
	add.s64 	%rd946, %rd945, %rd810;
	xor.b64  	%rd947, %rd884, %rd847;
	and.b64  	%rd948, %rd921, %rd947;
	xor.b64  	%rd949, %rd948, %rd847;
	add.s64 	%rd950, %rd946, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd921;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 14;
	shf.r.wrap.b32 	%r590, %r587, %r588, 14;
	mov.b64 	%rd951, {%r590, %r589};
	shf.r.wrap.b32 	%r591, %r588, %r587, 18;
	shf.r.wrap.b32 	%r592, %r587, %r588, 18;
	mov.b64 	%rd952, {%r592, %r591};
	xor.b64  	%rd953, %rd951, %rd952;
	shf.l.wrap.b32 	%r593, %r587, %r588, 23;
	shf.l.wrap.b32 	%r594, %r588, %r587, 23;
	mov.b64 	%rd954, {%r594, %r593};
	xor.b64  	%rd955, %rd953, %rd954;
	add.s64 	%rd956, %rd950, %rd955;
	add.s64 	%rd957, %rd956, -5763719355590565569;
	add.s64 	%rd958, %rd957, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd932;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 28;
	shf.r.wrap.b32 	%r598, %r595, %r596, 28;
	mov.b64 	%rd959, {%r598, %r597};
	shf.l.wrap.b32 	%r599, %r595, %r596, 30;
	shf.l.wrap.b32 	%r600, %r596, %r595, 30;
	mov.b64 	%rd960, {%r600, %r599};
	xor.b64  	%rd961, %rd959, %rd960;
	shf.l.wrap.b32 	%r601, %r595, %r596, 25;
	shf.l.wrap.b32 	%r602, %r596, %r595, 25;
	mov.b64 	%rd962, {%r602, %r601};
	xor.b64  	%rd963, %rd961, %rd962;
	and.b64  	%rd964, %rd932, %rd895;
	or.b64  	%rd965, %rd932, %rd895;
	and.b64  	%rd966, %rd965, %rd858;
	or.b64  	%rd967, %rd966, %rd964;
	add.s64 	%rd968, %rd967, %rd963;
	add.s64 	%rd969, %rd968, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd908;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 19;
	shf.r.wrap.b32 	%r606, %r603, %r604, 19;
	mov.b64 	%rd970, {%r606, %r605};
	shf.l.wrap.b32 	%r607, %r603, %r604, 3;
	shf.l.wrap.b32 	%r608, %r604, %r603, 3;
	mov.b64 	%rd971, {%r608, %r607};
	xor.b64  	%rd972, %rd970, %rd971;
	shr.u64 	%rd973, %rd908, 6;
	xor.b64  	%rd974, %rd972, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd459;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 1;
	shf.r.wrap.b32 	%r612, %r609, %r610, 1;
	mov.b64 	%rd975, {%r612, %r611};
	shf.r.wrap.b32 	%r613, %r610, %r609, 8;
	shf.r.wrap.b32 	%r614, %r609, %r610, 8;
	mov.b64 	%rd976, {%r614, %r613};
	xor.b64  	%rd977, %rd975, %rd976;
	shr.u64 	%rd978, %rd459, 7;
	xor.b64  	%rd979, %rd977, %rd978;
	add.s64 	%rd980, %rd974, %rd408;
	add.s64 	%rd981, %rd980, %rd723;
	add.s64 	%rd982, %rd981, %rd979;
	add.s64 	%rd983, %rd982, %rd847;
	xor.b64  	%rd984, %rd921, %rd884;
	and.b64  	%rd985, %rd958, %rd984;
	xor.b64  	%rd986, %rd985, %rd884;
	add.s64 	%rd987, %rd983, %rd986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd958;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 14;
	shf.r.wrap.b32 	%r618, %r615, %r616, 14;
	mov.b64 	%rd988, {%r618, %r617};
	shf.r.wrap.b32 	%r619, %r616, %r615, 18;
	shf.r.wrap.b32 	%r620, %r615, %r616, 18;
	mov.b64 	%rd989, {%r620, %r619};
	xor.b64  	%rd990, %rd988, %rd989;
	shf.l.wrap.b32 	%r621, %r615, %r616, 23;
	shf.l.wrap.b32 	%r622, %r616, %r615, 23;
	mov.b64 	%rd991, {%r622, %r621};
	xor.b64  	%rd992, %rd990, %rd991;
	add.s64 	%rd993, %rd987, %rd992;
	add.s64 	%rd994, %rd993, -4658551843659510044;
	add.s64 	%rd995, %rd994, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd969;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 28;
	shf.r.wrap.b32 	%r626, %r623, %r624, 28;
	mov.b64 	%rd996, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 30;
	shf.l.wrap.b32 	%r628, %r624, %r623, 30;
	mov.b64 	%rd997, {%r628, %r627};
	xor.b64  	%rd998, %rd996, %rd997;
	shf.l.wrap.b32 	%r629, %r623, %r624, 25;
	shf.l.wrap.b32 	%r630, %r624, %r623, 25;
	mov.b64 	%rd999, {%r630, %r629};
	xor.b64  	%rd1000, %rd998, %rd999;
	and.b64  	%rd1001, %rd969, %rd932;
	or.b64  	%rd1002, %rd969, %rd932;
	and.b64  	%rd1003, %rd1002, %rd895;
	or.b64  	%rd1004, %rd1003, %rd1001;
	add.s64 	%rd1005, %rd1004, %rd1000;
	add.s64 	%rd1006, %rd1005, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd945;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 19;
	shf.r.wrap.b32 	%r634, %r631, %r632, 19;
	mov.b64 	%rd1007, {%r634, %r633};
	shf.l.wrap.b32 	%r635, %r631, %r632, 3;
	shf.l.wrap.b32 	%r636, %r632, %r631, 3;
	mov.b64 	%rd1008, {%r636, %r635};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	shr.u64 	%rd1010, %rd945, 6;
	xor.b64  	%rd1011, %rd1009, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd460;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 1;
	shf.r.wrap.b32 	%r640, %r637, %r638, 1;
	mov.b64 	%rd1012, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 8;
	shf.r.wrap.b32 	%r642, %r637, %r638, 8;
	mov.b64 	%rd1013, {%r642, %r641};
	xor.b64  	%rd1014, %rd1012, %rd1013;
	shr.u64 	%rd1015, %rd460, 7;
	xor.b64  	%rd1016, %rd1014, %rd1015;
	add.s64 	%rd1017, %rd1011, %rd459;
	add.s64 	%rd1018, %rd1017, %rd760;
	add.s64 	%rd1019, %rd1018, %rd1016;
	add.s64 	%rd1020, %rd1019, %rd884;
	xor.b64  	%rd1021, %rd958, %rd921;
	and.b64  	%rd1022, %rd995, %rd1021;
	xor.b64  	%rd1023, %rd1022, %rd921;
	add.s64 	%rd1024, %rd1020, %rd1023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd995;
	}
	shf.r.wrap.b32 	%r645, %r644, %r643, 14;
	shf.r.wrap.b32 	%r646, %r643, %r644, 14;
	mov.b64 	%rd1025, {%r646, %r645};
	shf.r.wrap.b32 	%r647, %r644, %r643, 18;
	shf.r.wrap.b32 	%r648, %r643, %r644, 18;
	mov.b64 	%rd1026, {%r648, %r647};
	xor.b64  	%rd1027, %rd1025, %rd1026;
	shf.l.wrap.b32 	%r649, %r643, %r644, 23;
	shf.l.wrap.b32 	%r650, %r644, %r643, 23;
	mov.b64 	%rd1028, {%r650, %r649};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	add.s64 	%rd1030, %rd1024, %rd1029;
	add.s64 	%rd1031, %rd1030, -4116276920077217854;
	add.s64 	%rd1032, %rd1031, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd1006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd1006;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 28;
	shf.r.wrap.b32 	%r654, %r651, %r652, 28;
	mov.b64 	%rd1033, {%r654, %r653};
	shf.l.wrap.b32 	%r655, %r651, %r652, 30;
	shf.l.wrap.b32 	%r656, %r652, %r651, 30;
	mov.b64 	%rd1034, {%r656, %r655};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	shf.l.wrap.b32 	%r657, %r651, %r652, 25;
	shf.l.wrap.b32 	%r658, %r652, %r651, 25;
	mov.b64 	%rd1036, {%r658, %r657};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	and.b64  	%rd1038, %rd1006, %rd969;
	or.b64  	%rd1039, %rd1006, %rd969;
	and.b64  	%rd1040, %rd1039, %rd932;
	or.b64  	%rd1041, %rd1040, %rd1038;
	add.s64 	%rd1042, %rd1041, %rd1037;
	add.s64 	%rd1043, %rd1042, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd982;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 19;
	shf.r.wrap.b32 	%r662, %r659, %r660, 19;
	mov.b64 	%rd1044, {%r662, %r661};
	shf.l.wrap.b32 	%r663, %r659, %r660, 3;
	shf.l.wrap.b32 	%r664, %r660, %r659, 3;
	mov.b64 	%rd1045, {%r664, %r663};
	xor.b64  	%rd1046, %rd1044, %rd1045;
	shr.u64 	%rd1047, %rd982, 6;
	xor.b64  	%rd1048, %rd1046, %rd1047;
	shf.r.wrap.b32 	%r665, %r296, %r295, 1;
	shf.r.wrap.b32 	%r666, %r295, %r296, 1;
	mov.b64 	%rd1049, {%r666, %r665};
	shf.r.wrap.b32 	%r667, %r296, %r295, 8;
	shf.r.wrap.b32 	%r668, %r295, %r296, 8;
	mov.b64 	%rd1050, {%r668, %r667};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	shr.u64 	%rd1052, %rd511, 7;
	xor.b64  	%rd1053, %rd1051, %rd1052;
	add.s64 	%rd1054, %rd1048, %rd460;
	add.s64 	%rd1055, %rd1054, %rd797;
	add.s64 	%rd1056, %rd1055, %rd1053;
	add.s64 	%rd1057, %rd1056, %rd921;
	xor.b64  	%rd1058, %rd995, %rd958;
	and.b64  	%rd1059, %rd1032, %rd1058;
	xor.b64  	%rd1060, %rd1059, %rd958;
	add.s64 	%rd1061, %rd1057, %rd1060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1032;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 14;
	shf.r.wrap.b32 	%r672, %r669, %r670, 14;
	mov.b64 	%rd1062, {%r672, %r671};
	shf.r.wrap.b32 	%r673, %r670, %r669, 18;
	shf.r.wrap.b32 	%r674, %r669, %r670, 18;
	mov.b64 	%rd1063, {%r674, %r673};
	xor.b64  	%rd1064, %rd1062, %rd1063;
	shf.l.wrap.b32 	%r675, %r669, %r670, 23;
	shf.l.wrap.b32 	%r676, %r670, %r669, 23;
	mov.b64 	%rd1065, {%r676, %r675};
	xor.b64  	%rd1066, %rd1064, %rd1065;
	add.s64 	%rd1067, %rd1061, %rd1066;
	add.s64 	%rd1068, %rd1067, -3051310485924567259;
	add.s64 	%rd1069, %rd1068, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1043;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 28;
	shf.r.wrap.b32 	%r680, %r677, %r678, 28;
	mov.b64 	%rd1070, {%r680, %r679};
	shf.l.wrap.b32 	%r681, %r677, %r678, 30;
	shf.l.wrap.b32 	%r682, %r678, %r677, 30;
	mov.b64 	%rd1071, {%r682, %r681};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	shf.l.wrap.b32 	%r683, %r677, %r678, 25;
	shf.l.wrap.b32 	%r684, %r678, %r677, 25;
	mov.b64 	%rd1073, {%r684, %r683};
	xor.b64  	%rd1074, %rd1072, %rd1073;
	and.b64  	%rd1075, %rd1043, %rd1006;
	or.b64  	%rd1076, %rd1043, %rd1006;
	and.b64  	%rd1077, %rd1076, %rd969;
	or.b64  	%rd1078, %rd1077, %rd1075;
	add.s64 	%rd1079, %rd1078, %rd1074;
	add.s64 	%rd1080, %rd1079, %rd1068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd1019;
	}
	shf.r.wrap.b32 	%r687, %r686, %r685, 19;
	shf.r.wrap.b32 	%r688, %r685, %r686, 19;
	mov.b64 	%rd1081, {%r688, %r687};
	shf.l.wrap.b32 	%r689, %r685, %r686, 3;
	shf.l.wrap.b32 	%r690, %r686, %r685, 3;
	mov.b64 	%rd1082, {%r690, %r689};
	xor.b64  	%rd1083, %rd1081, %rd1082;
	shr.u64 	%rd1084, %rd1019, 6;
	xor.b64  	%rd1085, %rd1083, %rd1084;
	shf.r.wrap.b32 	%r691, %r324, %r323, 1;
	shf.r.wrap.b32 	%r692, %r323, %r324, 1;
	mov.b64 	%rd1086, {%r692, %r691};
	shf.r.wrap.b32 	%r693, %r324, %r323, 8;
	shf.r.wrap.b32 	%r694, %r323, %r324, 8;
	mov.b64 	%rd1087, {%r694, %r693};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	shr.u64 	%rd1089, %rd512, 7;
	xor.b64  	%rd1090, %rd1088, %rd1089;
	add.s64 	%rd1091, %rd1085, %rd511;
	add.s64 	%rd1092, %rd1091, %rd834;
	add.s64 	%rd1093, %rd1092, %rd1090;
	add.s64 	%rd1094, %rd1093, %rd958;
	xor.b64  	%rd1095, %rd1032, %rd995;
	and.b64  	%rd1096, %rd1069, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd995;
	add.s64 	%rd1098, %rd1094, %rd1097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd1069;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 14;
	shf.r.wrap.b32 	%r698, %r695, %r696, 14;
	mov.b64 	%rd1099, {%r698, %r697};
	shf.r.wrap.b32 	%r699, %r696, %r695, 18;
	shf.r.wrap.b32 	%r700, %r695, %r696, 18;
	mov.b64 	%rd1100, {%r700, %r699};
	xor.b64  	%rd1101, %rd1099, %rd1100;
	shf.l.wrap.b32 	%r701, %r695, %r696, 23;
	shf.l.wrap.b32 	%r702, %r696, %r695, 23;
	mov.b64 	%rd1102, {%r702, %r701};
	xor.b64  	%rd1103, %rd1101, %rd1102;
	add.s64 	%rd1104, %rd1098, %rd1103;
	add.s64 	%rd1105, %rd1104, 489312712824947311;
	add.s64 	%rd1106, %rd1105, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd1080;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 28;
	shf.r.wrap.b32 	%r706, %r703, %r704, 28;
	mov.b64 	%rd1107, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 30;
	shf.l.wrap.b32 	%r708, %r704, %r703, 30;
	mov.b64 	%rd1108, {%r708, %r707};
	xor.b64  	%rd1109, %rd1107, %rd1108;
	shf.l.wrap.b32 	%r709, %r703, %r704, 25;
	shf.l.wrap.b32 	%r710, %r704, %r703, 25;
	mov.b64 	%rd1110, {%r710, %r709};
	xor.b64  	%rd1111, %rd1109, %rd1110;
	and.b64  	%rd1112, %rd1080, %rd1043;
	or.b64  	%rd1113, %rd1080, %rd1043;
	and.b64  	%rd1114, %rd1113, %rd1006;
	or.b64  	%rd1115, %rd1114, %rd1112;
	add.s64 	%rd1116, %rd1115, %rd1111;
	add.s64 	%rd1117, %rd1116, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r712}, %rd1056;
	}
	shf.r.wrap.b32 	%r713, %r712, %r711, 19;
	shf.r.wrap.b32 	%r714, %r711, %r712, 19;
	mov.b64 	%rd1118, {%r714, %r713};
	shf.l.wrap.b32 	%r715, %r711, %r712, 3;
	shf.l.wrap.b32 	%r716, %r712, %r711, 3;
	mov.b64 	%rd1119, {%r716, %r715};
	xor.b64  	%rd1120, %rd1118, %rd1119;
	shr.u64 	%rd1121, %rd1056, 6;
	xor.b64  	%rd1122, %rd1120, %rd1121;
	shf.r.wrap.b32 	%r717, %r352, %r351, 1;
	shf.r.wrap.b32 	%r718, %r351, %r352, 1;
	mov.b64 	%rd1123, {%r718, %r717};
	shf.r.wrap.b32 	%r719, %r352, %r351, 8;
	shf.r.wrap.b32 	%r720, %r351, %r352, 8;
	mov.b64 	%rd1124, {%r720, %r719};
	xor.b64  	%rd1125, %rd1123, %rd1124;
	shr.u64 	%rd1126, %rd575, 7;
	xor.b64  	%rd1127, %rd1125, %rd1126;
	add.s64 	%rd1128, %rd1122, %rd512;
	add.s64 	%rd1129, %rd1128, %rd871;
	add.s64 	%rd1130, %rd1129, %rd1127;
	add.s64 	%rd1131, %rd1130, %rd995;
	xor.b64  	%rd1132, %rd1069, %rd1032;
	and.b64  	%rd1133, %rd1106, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1032;
	add.s64 	%rd1135, %rd1131, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1106;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 14;
	shf.r.wrap.b32 	%r724, %r721, %r722, 14;
	mov.b64 	%rd1136, {%r724, %r723};
	shf.r.wrap.b32 	%r725, %r722, %r721, 18;
	shf.r.wrap.b32 	%r726, %r721, %r722, 18;
	mov.b64 	%rd1137, {%r726, %r725};
	xor.b64  	%rd1138, %rd1136, %rd1137;
	shf.l.wrap.b32 	%r727, %r721, %r722, 23;
	shf.l.wrap.b32 	%r728, %r722, %r721, 23;
	mov.b64 	%rd1139, {%r728, %r727};
	xor.b64  	%rd1140, %rd1138, %rd1139;
	add.s64 	%rd1141, %rd1135, %rd1140;
	add.s64 	%rd1142, %rd1141, 1452737877330783856;
	add.s64 	%rd1143, %rd1142, %rd1006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1117;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 28;
	shf.r.wrap.b32 	%r732, %r729, %r730, 28;
	mov.b64 	%rd1144, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 30;
	shf.l.wrap.b32 	%r734, %r730, %r729, 30;
	mov.b64 	%rd1145, {%r734, %r733};
	xor.b64  	%rd1146, %rd1144, %rd1145;
	shf.l.wrap.b32 	%r735, %r729, %r730, 25;
	shf.l.wrap.b32 	%r736, %r730, %r729, 25;
	mov.b64 	%rd1147, {%r736, %r735};
	xor.b64  	%rd1148, %rd1146, %rd1147;
	and.b64  	%rd1149, %rd1117, %rd1080;
	or.b64  	%rd1150, %rd1117, %rd1080;
	and.b64  	%rd1151, %rd1150, %rd1043;
	or.b64  	%rd1152, %rd1151, %rd1149;
	add.s64 	%rd1153, %rd1152, %rd1148;
	add.s64 	%rd1154, %rd1153, %rd1142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1093;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 19;
	shf.r.wrap.b32 	%r740, %r737, %r738, 19;
	mov.b64 	%rd1155, {%r740, %r739};
	shf.l.wrap.b32 	%r741, %r737, %r738, 3;
	shf.l.wrap.b32 	%r742, %r738, %r737, 3;
	mov.b64 	%rd1156, {%r742, %r741};
	xor.b64  	%rd1157, %rd1155, %rd1156;
	shr.u64 	%rd1158, %rd1093, 6;
	xor.b64  	%rd1159, %rd1157, %rd1158;
	shf.r.wrap.b32 	%r743, %r380, %r379, 1;
	shf.r.wrap.b32 	%r744, %r379, %r380, 1;
	mov.b64 	%rd1160, {%r744, %r743};
	shf.r.wrap.b32 	%r745, %r380, %r379, 8;
	shf.r.wrap.b32 	%r746, %r379, %r380, 8;
	mov.b64 	%rd1161, {%r746, %r745};
	xor.b64  	%rd1162, %rd1160, %rd1161;
	shr.u64 	%rd1163, %rd612, 7;
	xor.b64  	%rd1164, %rd1162, %rd1163;
	add.s64 	%rd1165, %rd1159, %rd575;
	add.s64 	%rd1166, %rd1165, %rd908;
	add.s64 	%rd1167, %rd1166, %rd1164;
	add.s64 	%rd1168, %rd1167, %rd1032;
	xor.b64  	%rd1169, %rd1106, %rd1069;
	and.b64  	%rd1170, %rd1143, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1069;
	add.s64 	%rd1172, %rd1168, %rd1171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd1143;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 14;
	shf.r.wrap.b32 	%r750, %r747, %r748, 14;
	mov.b64 	%rd1173, {%r750, %r749};
	shf.r.wrap.b32 	%r751, %r748, %r747, 18;
	shf.r.wrap.b32 	%r752, %r747, %r748, 18;
	mov.b64 	%rd1174, {%r752, %r751};
	xor.b64  	%rd1175, %rd1173, %rd1174;
	shf.l.wrap.b32 	%r753, %r747, %r748, 23;
	shf.l.wrap.b32 	%r754, %r748, %r747, 23;
	mov.b64 	%rd1176, {%r754, %r753};
	xor.b64  	%rd1177, %rd1175, %rd1176;
	add.s64 	%rd1178, %rd1172, %rd1177;
	add.s64 	%rd1179, %rd1178, 2861767655752347644;
	add.s64 	%rd1180, %rd1179, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd1154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd1154;
	}
	shf.r.wrap.b32 	%r757, %r756, %r755, 28;
	shf.r.wrap.b32 	%r758, %r755, %r756, 28;
	mov.b64 	%rd1181, {%r758, %r757};
	shf.l.wrap.b32 	%r759, %r755, %r756, 30;
	shf.l.wrap.b32 	%r760, %r756, %r755, 30;
	mov.b64 	%rd1182, {%r760, %r759};
	xor.b64  	%rd1183, %rd1181, %rd1182;
	shf.l.wrap.b32 	%r761, %r755, %r756, 25;
	shf.l.wrap.b32 	%r762, %r756, %r755, 25;
	mov.b64 	%rd1184, {%r762, %r761};
	xor.b64  	%rd1185, %rd1183, %rd1184;
	and.b64  	%rd1186, %rd1154, %rd1117;
	or.b64  	%rd1187, %rd1154, %rd1117;
	and.b64  	%rd1188, %rd1187, %rd1080;
	or.b64  	%rd1189, %rd1188, %rd1186;
	add.s64 	%rd1190, %rd1189, %rd1185;
	add.s64 	%rd1191, %rd1190, %rd1179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd1130;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 19;
	shf.r.wrap.b32 	%r766, %r763, %r764, 19;
	mov.b64 	%rd1192, {%r766, %r765};
	shf.l.wrap.b32 	%r767, %r763, %r764, 3;
	shf.l.wrap.b32 	%r768, %r764, %r763, 3;
	mov.b64 	%rd1193, {%r768, %r767};
	xor.b64  	%rd1194, %rd1192, %rd1193;
	shr.u64 	%rd1195, %rd1130, 6;
	xor.b64  	%rd1196, %rd1194, %rd1195;
	shf.r.wrap.b32 	%r769, %r408, %r407, 1;
	shf.r.wrap.b32 	%r770, %r407, %r408, 1;
	mov.b64 	%rd1197, {%r770, %r769};
	shf.r.wrap.b32 	%r771, %r408, %r407, 8;
	shf.r.wrap.b32 	%r772, %r407, %r408, 8;
	mov.b64 	%rd1198, {%r772, %r771};
	xor.b64  	%rd1199, %rd1197, %rd1198;
	shr.u64 	%rd1200, %rd649, 7;
	xor.b64  	%rd1201, %rd1199, %rd1200;
	add.s64 	%rd1202, %rd1196, %rd612;
	add.s64 	%rd1203, %rd1202, %rd945;
	add.s64 	%rd1204, %rd1203, %rd1201;
	add.s64 	%rd1205, %rd1204, %rd1069;
	xor.b64  	%rd1206, %rd1143, %rd1106;
	and.b64  	%rd1207, %rd1180, %rd1206;
	xor.b64  	%rd1208, %rd1207, %rd1106;
	add.s64 	%rd1209, %rd1205, %rd1208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd1180;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 14;
	shf.r.wrap.b32 	%r776, %r773, %r774, 14;
	mov.b64 	%rd1210, {%r776, %r775};
	shf.r.wrap.b32 	%r777, %r774, %r773, 18;
	shf.r.wrap.b32 	%r778, %r773, %r774, 18;
	mov.b64 	%rd1211, {%r778, %r777};
	xor.b64  	%rd1212, %rd1210, %rd1211;
	shf.l.wrap.b32 	%r779, %r773, %r774, 23;
	shf.l.wrap.b32 	%r780, %r774, %r773, 23;
	mov.b64 	%rd1213, {%r780, %r779};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	add.s64 	%rd1215, %rd1209, %rd1214;
	add.s64 	%rd1216, %rd1215, 3322285676063803686;
	add.s64 	%rd1217, %rd1216, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r781,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r782}, %rd1191;
	}
	shf.r.wrap.b32 	%r783, %r782, %r781, 28;
	shf.r.wrap.b32 	%r784, %r781, %r782, 28;
	mov.b64 	%rd1218, {%r784, %r783};
	shf.l.wrap.b32 	%r785, %r781, %r782, 30;
	shf.l.wrap.b32 	%r786, %r782, %r781, 30;
	mov.b64 	%rd1219, {%r786, %r785};
	xor.b64  	%rd1220, %rd1218, %rd1219;
	shf.l.wrap.b32 	%r787, %r781, %r782, 25;
	shf.l.wrap.b32 	%r788, %r782, %r781, 25;
	mov.b64 	%rd1221, {%r788, %r787};
	xor.b64  	%rd1222, %rd1220, %rd1221;
	and.b64  	%rd1223, %rd1191, %rd1154;
	or.b64  	%rd1224, %rd1191, %rd1154;
	and.b64  	%rd1225, %rd1224, %rd1117;
	or.b64  	%rd1226, %rd1225, %rd1223;
	add.s64 	%rd1227, %rd1226, %rd1222;
	add.s64 	%rd1228, %rd1227, %rd1216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd1167;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 19;
	shf.r.wrap.b32 	%r792, %r789, %r790, 19;
	mov.b64 	%rd1229, {%r792, %r791};
	shf.l.wrap.b32 	%r793, %r789, %r790, 3;
	shf.l.wrap.b32 	%r794, %r790, %r789, 3;
	mov.b64 	%rd1230, {%r794, %r793};
	xor.b64  	%rd1231, %rd1229, %rd1230;
	shr.u64 	%rd1232, %rd1167, 6;
	xor.b64  	%rd1233, %rd1231, %rd1232;
	shf.r.wrap.b32 	%r795, %r436, %r435, 1;
	shf.r.wrap.b32 	%r796, %r435, %r436, 1;
	mov.b64 	%rd1234, {%r796, %r795};
	shf.r.wrap.b32 	%r797, %r436, %r435, 8;
	shf.r.wrap.b32 	%r798, %r435, %r436, 8;
	mov.b64 	%rd1235, {%r798, %r797};
	xor.b64  	%rd1236, %rd1234, %rd1235;
	shr.u64 	%rd1237, %rd686, 7;
	xor.b64  	%rd1238, %rd1236, %rd1237;
	add.s64 	%rd1239, %rd1233, %rd649;
	add.s64 	%rd1240, %rd1239, %rd982;
	add.s64 	%rd1241, %rd1240, %rd1238;
	add.s64 	%rd1242, %rd1241, %rd1106;
	xor.b64  	%rd1243, %rd1180, %rd1143;
	and.b64  	%rd1244, %rd1217, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd1143;
	add.s64 	%rd1246, %rd1242, %rd1245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r799,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd1217;
	}
	shf.r.wrap.b32 	%r801, %r800, %r799, 14;
	shf.r.wrap.b32 	%r802, %r799, %r800, 14;
	mov.b64 	%rd1247, {%r802, %r801};
	shf.r.wrap.b32 	%r803, %r800, %r799, 18;
	shf.r.wrap.b32 	%r804, %r799, %r800, 18;
	mov.b64 	%rd1248, {%r804, %r803};
	xor.b64  	%rd1249, %rd1247, %rd1248;
	shf.l.wrap.b32 	%r805, %r799, %r800, 23;
	shf.l.wrap.b32 	%r806, %r800, %r799, 23;
	mov.b64 	%rd1250, {%r806, %r805};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	add.s64 	%rd1252, %rd1246, %rd1251;
	add.s64 	%rd1253, %rd1252, 5560940570517711597;
	add.s64 	%rd1254, %rd1253, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r807,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd1228;
	}
	shf.r.wrap.b32 	%r809, %r808, %r807, 28;
	shf.r.wrap.b32 	%r810, %r807, %r808, 28;
	mov.b64 	%rd1255, {%r810, %r809};
	shf.l.wrap.b32 	%r811, %r807, %r808, 30;
	shf.l.wrap.b32 	%r812, %r808, %r807, 30;
	mov.b64 	%rd1256, {%r812, %r811};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	shf.l.wrap.b32 	%r813, %r807, %r808, 25;
	shf.l.wrap.b32 	%r814, %r808, %r807, 25;
	mov.b64 	%rd1258, {%r814, %r813};
	xor.b64  	%rd1259, %rd1257, %rd1258;
	and.b64  	%rd1260, %rd1228, %rd1191;
	or.b64  	%rd1261, %rd1228, %rd1191;
	and.b64  	%rd1262, %rd1261, %rd1154;
	or.b64  	%rd1263, %rd1262, %rd1260;
	add.s64 	%rd1264, %rd1263, %rd1259;
	add.s64 	%rd1265, %rd1264, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r815,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r816}, %rd1204;
	}
	shf.r.wrap.b32 	%r817, %r816, %r815, 19;
	shf.r.wrap.b32 	%r818, %r815, %r816, 19;
	mov.b64 	%rd1266, {%r818, %r817};
	shf.l.wrap.b32 	%r819, %r815, %r816, 3;
	shf.l.wrap.b32 	%r820, %r816, %r815, 3;
	mov.b64 	%rd1267, {%r820, %r819};
	xor.b64  	%rd1268, %rd1266, %rd1267;
	shr.u64 	%rd1269, %rd1204, 6;
	xor.b64  	%rd1270, %rd1268, %rd1269;
	shf.r.wrap.b32 	%r821, %r464, %r463, 1;
	shf.r.wrap.b32 	%r822, %r463, %r464, 1;
	mov.b64 	%rd1271, {%r822, %r821};
	shf.r.wrap.b32 	%r823, %r464, %r463, 8;
	shf.r.wrap.b32 	%r824, %r463, %r464, 8;
	mov.b64 	%rd1272, {%r824, %r823};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	shr.u64 	%rd1274, %rd723, 7;
	xor.b64  	%rd1275, %rd1273, %rd1274;
	add.s64 	%rd1276, %rd1270, %rd686;
	add.s64 	%rd1277, %rd1276, %rd1019;
	add.s64 	%rd1278, %rd1277, %rd1275;
	add.s64 	%rd1279, %rd1278, %rd1143;
	xor.b64  	%rd1280, %rd1217, %rd1180;
	and.b64  	%rd1281, %rd1254, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1180;
	add.s64 	%rd1283, %rd1279, %rd1282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd1254;
	}
	shf.r.wrap.b32 	%r827, %r826, %r825, 14;
	shf.r.wrap.b32 	%r828, %r825, %r826, 14;
	mov.b64 	%rd1284, {%r828, %r827};
	shf.r.wrap.b32 	%r829, %r826, %r825, 18;
	shf.r.wrap.b32 	%r830, %r825, %r826, 18;
	mov.b64 	%rd1285, {%r830, %r829};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	shf.l.wrap.b32 	%r831, %r825, %r826, 23;
	shf.l.wrap.b32 	%r832, %r826, %r825, 23;
	mov.b64 	%rd1287, {%r832, %r831};
	xor.b64  	%rd1288, %rd1286, %rd1287;
	add.s64 	%rd1289, %rd1283, %rd1288;
	add.s64 	%rd1290, %rd1289, 5996557281743188959;
	add.s64 	%rd1291, %rd1290, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r833,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r834}, %rd1265;
	}
	shf.r.wrap.b32 	%r835, %r834, %r833, 28;
	shf.r.wrap.b32 	%r836, %r833, %r834, 28;
	mov.b64 	%rd1292, {%r836, %r835};
	shf.l.wrap.b32 	%r837, %r833, %r834, 30;
	shf.l.wrap.b32 	%r838, %r834, %r833, 30;
	mov.b64 	%rd1293, {%r838, %r837};
	xor.b64  	%rd1294, %rd1292, %rd1293;
	shf.l.wrap.b32 	%r839, %r833, %r834, 25;
	shf.l.wrap.b32 	%r840, %r834, %r833, 25;
	mov.b64 	%rd1295, {%r840, %r839};
	xor.b64  	%rd1296, %rd1294, %rd1295;
	and.b64  	%rd1297, %rd1265, %rd1228;
	or.b64  	%rd1298, %rd1265, %rd1228;
	and.b64  	%rd1299, %rd1298, %rd1191;
	or.b64  	%rd1300, %rd1299, %rd1297;
	add.s64 	%rd1301, %rd1300, %rd1296;
	add.s64 	%rd1302, %rd1301, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r841,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r842}, %rd1241;
	}
	shf.r.wrap.b32 	%r843, %r842, %r841, 19;
	shf.r.wrap.b32 	%r844, %r841, %r842, 19;
	mov.b64 	%rd1303, {%r844, %r843};
	shf.l.wrap.b32 	%r845, %r841, %r842, 3;
	shf.l.wrap.b32 	%r846, %r842, %r841, 3;
	mov.b64 	%rd1304, {%r846, %r845};
	xor.b64  	%rd1305, %rd1303, %rd1304;
	shr.u64 	%rd1306, %rd1241, 6;
	xor.b64  	%rd1307, %rd1305, %rd1306;
	shf.r.wrap.b32 	%r847, %r492, %r491, 1;
	shf.r.wrap.b32 	%r848, %r491, %r492, 1;
	mov.b64 	%rd1308, {%r848, %r847};
	shf.r.wrap.b32 	%r849, %r492, %r491, 8;
	shf.r.wrap.b32 	%r850, %r491, %r492, 8;
	mov.b64 	%rd1309, {%r850, %r849};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	shr.u64 	%rd1311, %rd760, 7;
	xor.b64  	%rd1312, %rd1310, %rd1311;
	add.s64 	%rd1313, %rd1307, %rd723;
	add.s64 	%rd1314, %rd1313, %rd1056;
	add.s64 	%rd1315, %rd1314, %rd1312;
	add.s64 	%rd1316, %rd1315, %rd1180;
	xor.b64  	%rd1317, %rd1254, %rd1217;
	and.b64  	%rd1318, %rd1291, %rd1317;
	xor.b64  	%rd1319, %rd1318, %rd1217;
	add.s64 	%rd1320, %rd1316, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r851,%dummy}, %rd1291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r852}, %rd1291;
	}
	shf.r.wrap.b32 	%r853, %r852, %r851, 14;
	shf.r.wrap.b32 	%r854, %r851, %r852, 14;
	mov.b64 	%rd1321, {%r854, %r853};
	shf.r.wrap.b32 	%r855, %r852, %r851, 18;
	shf.r.wrap.b32 	%r856, %r851, %r852, 18;
	mov.b64 	%rd1322, {%r856, %r855};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shf.l.wrap.b32 	%r857, %r851, %r852, 23;
	shf.l.wrap.b32 	%r858, %r852, %r851, 23;
	mov.b64 	%rd1324, {%r858, %r857};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	add.s64 	%rd1326, %rd1320, %rd1325;
	add.s64 	%rd1327, %rd1326, 7280758554555802590;
	add.s64 	%rd1328, %rd1327, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r859,%dummy}, %rd1302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r860}, %rd1302;
	}
	shf.r.wrap.b32 	%r861, %r860, %r859, 28;
	shf.r.wrap.b32 	%r862, %r859, %r860, 28;
	mov.b64 	%rd1329, {%r862, %r861};
	shf.l.wrap.b32 	%r863, %r859, %r860, 30;
	shf.l.wrap.b32 	%r864, %r860, %r859, 30;
	mov.b64 	%rd1330, {%r864, %r863};
	xor.b64  	%rd1331, %rd1329, %rd1330;
	shf.l.wrap.b32 	%r865, %r859, %r860, 25;
	shf.l.wrap.b32 	%r866, %r860, %r859, 25;
	mov.b64 	%rd1332, {%r866, %r865};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	and.b64  	%rd1334, %rd1302, %rd1265;
	or.b64  	%rd1335, %rd1302, %rd1265;
	and.b64  	%rd1336, %rd1335, %rd1228;
	or.b64  	%rd1337, %rd1336, %rd1334;
	add.s64 	%rd1338, %rd1337, %rd1333;
	add.s64 	%rd1339, %rd1338, %rd1327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd1278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd1278;
	}
	shf.r.wrap.b32 	%r869, %r868, %r867, 19;
	shf.r.wrap.b32 	%r870, %r867, %r868, 19;
	mov.b64 	%rd1340, {%r870, %r869};
	shf.l.wrap.b32 	%r871, %r867, %r868, 3;
	shf.l.wrap.b32 	%r872, %r868, %r867, 3;
	mov.b64 	%rd1341, {%r872, %r871};
	xor.b64  	%rd1342, %rd1340, %rd1341;
	shr.u64 	%rd1343, %rd1278, 6;
	xor.b64  	%rd1344, %rd1342, %rd1343;
	shf.r.wrap.b32 	%r873, %r520, %r519, 1;
	shf.r.wrap.b32 	%r874, %r519, %r520, 1;
	mov.b64 	%rd1345, {%r874, %r873};
	shf.r.wrap.b32 	%r875, %r520, %r519, 8;
	shf.r.wrap.b32 	%r876, %r519, %r520, 8;
	mov.b64 	%rd1346, {%r876, %r875};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	shr.u64 	%rd1348, %rd797, 7;
	xor.b64  	%rd1349, %rd1347, %rd1348;
	add.s64 	%rd1350, %rd1344, %rd760;
	add.s64 	%rd1351, %rd1350, %rd1093;
	add.s64 	%rd1352, %rd1351, %rd1349;
	add.s64 	%rd1353, %rd1352, %rd1217;
	xor.b64  	%rd1354, %rd1291, %rd1254;
	and.b64  	%rd1355, %rd1328, %rd1354;
	xor.b64  	%rd1356, %rd1355, %rd1254;
	add.s64 	%rd1357, %rd1353, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1328;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 14;
	shf.r.wrap.b32 	%r880, %r877, %r878, 14;
	mov.b64 	%rd1358, {%r880, %r879};
	shf.r.wrap.b32 	%r881, %r878, %r877, 18;
	shf.r.wrap.b32 	%r882, %r877, %r878, 18;
	mov.b64 	%rd1359, {%r882, %r881};
	xor.b64  	%rd1360, %rd1358, %rd1359;
	shf.l.wrap.b32 	%r883, %r877, %r878, 23;
	shf.l.wrap.b32 	%r884, %r878, %r877, 23;
	mov.b64 	%rd1361, {%r884, %r883};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	add.s64 	%rd1363, %rd1357, %rd1362;
	add.s64 	%rd1364, %rd1363, 8532644243296465576;
	add.s64 	%rd1365, %rd1364, %rd1228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1339;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 28;
	shf.r.wrap.b32 	%r888, %r885, %r886, 28;
	mov.b64 	%rd1366, {%r888, %r887};
	shf.l.wrap.b32 	%r889, %r885, %r886, 30;
	shf.l.wrap.b32 	%r890, %r886, %r885, 30;
	mov.b64 	%rd1367, {%r890, %r889};
	xor.b64  	%rd1368, %rd1366, %rd1367;
	shf.l.wrap.b32 	%r891, %r885, %r886, 25;
	shf.l.wrap.b32 	%r892, %r886, %r885, 25;
	mov.b64 	%rd1369, {%r892, %r891};
	xor.b64  	%rd1370, %rd1368, %rd1369;
	and.b64  	%rd1371, %rd1339, %rd1302;
	or.b64  	%rd1372, %rd1339, %rd1302;
	and.b64  	%rd1373, %rd1372, %rd1265;
	or.b64  	%rd1374, %rd1373, %rd1371;
	add.s64 	%rd1375, %rd1374, %rd1370;
	add.s64 	%rd1376, %rd1375, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd1315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd1315;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 19;
	shf.r.wrap.b32 	%r896, %r893, %r894, 19;
	mov.b64 	%rd1377, {%r896, %r895};
	shf.l.wrap.b32 	%r897, %r893, %r894, 3;
	shf.l.wrap.b32 	%r898, %r894, %r893, 3;
	mov.b64 	%rd1378, {%r898, %r897};
	xor.b64  	%rd1379, %rd1377, %rd1378;
	shr.u64 	%rd1380, %rd1315, 6;
	xor.b64  	%rd1381, %rd1379, %rd1380;
	shf.r.wrap.b32 	%r899, %r548, %r547, 1;
	shf.r.wrap.b32 	%r900, %r547, %r548, 1;
	mov.b64 	%rd1382, {%r900, %r899};
	shf.r.wrap.b32 	%r901, %r548, %r547, 8;
	shf.r.wrap.b32 	%r902, %r547, %r548, 8;
	mov.b64 	%rd1383, {%r902, %r901};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	shr.u64 	%rd1385, %rd834, 7;
	xor.b64  	%rd1386, %rd1384, %rd1385;
	add.s64 	%rd1387, %rd1381, %rd797;
	add.s64 	%rd1388, %rd1387, %rd1130;
	add.s64 	%rd1389, %rd1388, %rd1386;
	add.s64 	%rd1390, %rd1389, %rd1254;
	xor.b64  	%rd1391, %rd1328, %rd1291;
	and.b64  	%rd1392, %rd1365, %rd1391;
	xor.b64  	%rd1393, %rd1392, %rd1291;
	add.s64 	%rd1394, %rd1390, %rd1393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd1365;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 14;
	shf.r.wrap.b32 	%r906, %r903, %r904, 14;
	mov.b64 	%rd1395, {%r906, %r905};
	shf.r.wrap.b32 	%r907, %r904, %r903, 18;
	shf.r.wrap.b32 	%r908, %r903, %r904, 18;
	mov.b64 	%rd1396, {%r908, %r907};
	xor.b64  	%rd1397, %rd1395, %rd1396;
	shf.l.wrap.b32 	%r909, %r903, %r904, 23;
	shf.l.wrap.b32 	%r910, %r904, %r903, 23;
	mov.b64 	%rd1398, {%r910, %r909};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	add.s64 	%rd1400, %rd1394, %rd1399;
	add.s64 	%rd1401, %rd1400, -9096487096722542874;
	add.s64 	%rd1402, %rd1401, %rd1265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd1376;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 28;
	shf.r.wrap.b32 	%r914, %r911, %r912, 28;
	mov.b64 	%rd1403, {%r914, %r913};
	shf.l.wrap.b32 	%r915, %r911, %r912, 30;
	shf.l.wrap.b32 	%r916, %r912, %r911, 30;
	mov.b64 	%rd1404, {%r916, %r915};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	shf.l.wrap.b32 	%r917, %r911, %r912, 25;
	shf.l.wrap.b32 	%r918, %r912, %r911, 25;
	mov.b64 	%rd1406, {%r918, %r917};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	and.b64  	%rd1408, %rd1376, %rd1339;
	or.b64  	%rd1409, %rd1376, %rd1339;
	and.b64  	%rd1410, %rd1409, %rd1302;
	or.b64  	%rd1411, %rd1410, %rd1408;
	add.s64 	%rd1412, %rd1411, %rd1407;
	add.s64 	%rd1413, %rd1412, %rd1401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1352;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 19;
	shf.r.wrap.b32 	%r922, %r919, %r920, 19;
	mov.b64 	%rd1414, {%r922, %r921};
	shf.l.wrap.b32 	%r923, %r919, %r920, 3;
	shf.l.wrap.b32 	%r924, %r920, %r919, 3;
	mov.b64 	%rd1415, {%r924, %r923};
	xor.b64  	%rd1416, %rd1414, %rd1415;
	shr.u64 	%rd1417, %rd1352, 6;
	xor.b64  	%rd1418, %rd1416, %rd1417;
	shf.r.wrap.b32 	%r925, %r576, %r575, 1;
	shf.r.wrap.b32 	%r926, %r575, %r576, 1;
	mov.b64 	%rd1419, {%r926, %r925};
	shf.r.wrap.b32 	%r927, %r576, %r575, 8;
	shf.r.wrap.b32 	%r928, %r575, %r576, 8;
	mov.b64 	%rd1420, {%r928, %r927};
	xor.b64  	%rd1421, %rd1419, %rd1420;
	shr.u64 	%rd1422, %rd871, 7;
	xor.b64  	%rd1423, %rd1421, %rd1422;
	add.s64 	%rd1424, %rd1418, %rd834;
	add.s64 	%rd1425, %rd1424, %rd1167;
	add.s64 	%rd1426, %rd1425, %rd1423;
	add.s64 	%rd1427, %rd1426, %rd1291;
	xor.b64  	%rd1428, %rd1365, %rd1328;
	and.b64  	%rd1429, %rd1402, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1328;
	add.s64 	%rd1431, %rd1427, %rd1430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r929,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r930}, %rd1402;
	}
	shf.r.wrap.b32 	%r931, %r930, %r929, 14;
	shf.r.wrap.b32 	%r932, %r929, %r930, 14;
	mov.b64 	%rd1432, {%r932, %r931};
	shf.r.wrap.b32 	%r933, %r930, %r929, 18;
	shf.r.wrap.b32 	%r934, %r929, %r930, 18;
	mov.b64 	%rd1433, {%r934, %r933};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	shf.l.wrap.b32 	%r935, %r929, %r930, 23;
	shf.l.wrap.b32 	%r936, %r930, %r929, 23;
	mov.b64 	%rd1435, {%r936, %r935};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	add.s64 	%rd1437, %rd1431, %rd1436;
	add.s64 	%rd1438, %rd1437, -7894198246740708037;
	add.s64 	%rd1439, %rd1438, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r938}, %rd1413;
	}
	shf.r.wrap.b32 	%r939, %r938, %r937, 28;
	shf.r.wrap.b32 	%r940, %r937, %r938, 28;
	mov.b64 	%rd1440, {%r940, %r939};
	shf.l.wrap.b32 	%r941, %r937, %r938, 30;
	shf.l.wrap.b32 	%r942, %r938, %r937, 30;
	mov.b64 	%rd1441, {%r942, %r941};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	shf.l.wrap.b32 	%r943, %r937, %r938, 25;
	shf.l.wrap.b32 	%r944, %r938, %r937, 25;
	mov.b64 	%rd1443, {%r944, %r943};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	and.b64  	%rd1445, %rd1413, %rd1376;
	or.b64  	%rd1446, %rd1413, %rd1376;
	and.b64  	%rd1447, %rd1446, %rd1339;
	or.b64  	%rd1448, %rd1447, %rd1445;
	add.s64 	%rd1449, %rd1448, %rd1444;
	add.s64 	%rd1450, %rd1449, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r945,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r946}, %rd1389;
	}
	shf.r.wrap.b32 	%r947, %r946, %r945, 19;
	shf.r.wrap.b32 	%r948, %r945, %r946, 19;
	mov.b64 	%rd1451, {%r948, %r947};
	shf.l.wrap.b32 	%r949, %r945, %r946, 3;
	shf.l.wrap.b32 	%r950, %r946, %r945, 3;
	mov.b64 	%rd1452, {%r950, %r949};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	shr.u64 	%rd1454, %rd1389, 6;
	xor.b64  	%rd1455, %rd1453, %rd1454;
	shf.r.wrap.b32 	%r951, %r604, %r603, 1;
	shf.r.wrap.b32 	%r952, %r603, %r604, 1;
	mov.b64 	%rd1456, {%r952, %r951};
	shf.r.wrap.b32 	%r953, %r604, %r603, 8;
	shf.r.wrap.b32 	%r954, %r603, %r604, 8;
	mov.b64 	%rd1457, {%r954, %r953};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	shr.u64 	%rd1459, %rd908, 7;
	xor.b64  	%rd1460, %rd1458, %rd1459;
	add.s64 	%rd1461, %rd1455, %rd871;
	add.s64 	%rd1462, %rd1461, %rd1204;
	add.s64 	%rd1463, %rd1462, %rd1460;
	add.s64 	%rd1464, %rd1463, %rd1328;
	xor.b64  	%rd1465, %rd1402, %rd1365;
	and.b64  	%rd1466, %rd1439, %rd1465;
	xor.b64  	%rd1467, %rd1466, %rd1365;
	add.s64 	%rd1468, %rd1464, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r955,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r956}, %rd1439;
	}
	shf.r.wrap.b32 	%r957, %r956, %r955, 14;
	shf.r.wrap.b32 	%r958, %r955, %r956, 14;
	mov.b64 	%rd1469, {%r958, %r957};
	shf.r.wrap.b32 	%r959, %r956, %r955, 18;
	shf.r.wrap.b32 	%r960, %r955, %r956, 18;
	mov.b64 	%rd1470, {%r960, %r959};
	xor.b64  	%rd1471, %rd1469, %rd1470;
	shf.l.wrap.b32 	%r961, %r955, %r956, 23;
	shf.l.wrap.b32 	%r962, %r956, %r955, 23;
	mov.b64 	%rd1472, {%r962, %r961};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	add.s64 	%rd1474, %rd1468, %rd1473;
	add.s64 	%rd1475, %rd1474, -6719396339535248540;
	add.s64 	%rd1476, %rd1475, %rd1339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r963,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r964}, %rd1450;
	}
	shf.r.wrap.b32 	%r965, %r964, %r963, 28;
	shf.r.wrap.b32 	%r966, %r963, %r964, 28;
	mov.b64 	%rd1477, {%r966, %r965};
	shf.l.wrap.b32 	%r967, %r963, %r964, 30;
	shf.l.wrap.b32 	%r968, %r964, %r963, 30;
	mov.b64 	%rd1478, {%r968, %r967};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	shf.l.wrap.b32 	%r969, %r963, %r964, 25;
	shf.l.wrap.b32 	%r970, %r964, %r963, 25;
	mov.b64 	%rd1480, {%r970, %r969};
	xor.b64  	%rd1481, %rd1479, %rd1480;
	and.b64  	%rd1482, %rd1450, %rd1413;
	or.b64  	%rd1483, %rd1450, %rd1413;
	and.b64  	%rd1484, %rd1483, %rd1376;
	or.b64  	%rd1485, %rd1484, %rd1482;
	add.s64 	%rd1486, %rd1485, %rd1481;
	add.s64 	%rd1487, %rd1486, %rd1475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r971,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r972}, %rd1426;
	}
	shf.r.wrap.b32 	%r973, %r972, %r971, 19;
	shf.r.wrap.b32 	%r974, %r971, %r972, 19;
	mov.b64 	%rd1488, {%r974, %r973};
	shf.l.wrap.b32 	%r975, %r971, %r972, 3;
	shf.l.wrap.b32 	%r976, %r972, %r971, 3;
	mov.b64 	%rd1489, {%r976, %r975};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	shr.u64 	%rd1491, %rd1426, 6;
	xor.b64  	%rd1492, %rd1490, %rd1491;
	shf.r.wrap.b32 	%r977, %r632, %r631, 1;
	shf.r.wrap.b32 	%r978, %r631, %r632, 1;
	mov.b64 	%rd1493, {%r978, %r977};
	shf.r.wrap.b32 	%r979, %r632, %r631, 8;
	shf.r.wrap.b32 	%r980, %r631, %r632, 8;
	mov.b64 	%rd1494, {%r980, %r979};
	xor.b64  	%rd1495, %rd1493, %rd1494;
	shr.u64 	%rd1496, %rd945, 7;
	xor.b64  	%rd1497, %rd1495, %rd1496;
	add.s64 	%rd1498, %rd1492, %rd908;
	add.s64 	%rd1499, %rd1498, %rd1241;
	add.s64 	%rd1500, %rd1499, %rd1497;
	add.s64 	%rd1501, %rd1500, %rd1365;
	xor.b64  	%rd1502, %rd1439, %rd1402;
	and.b64  	%rd1503, %rd1476, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1402;
	add.s64 	%rd1505, %rd1501, %rd1504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1476;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 14;
	shf.r.wrap.b32 	%r984, %r981, %r982, 14;
	mov.b64 	%rd1506, {%r984, %r983};
	shf.r.wrap.b32 	%r985, %r982, %r981, 18;
	shf.r.wrap.b32 	%r986, %r981, %r982, 18;
	mov.b64 	%rd1507, {%r986, %r985};
	xor.b64  	%rd1508, %rd1506, %rd1507;
	shf.l.wrap.b32 	%r987, %r981, %r982, 23;
	shf.l.wrap.b32 	%r988, %r982, %r981, 23;
	mov.b64 	%rd1509, {%r988, %r987};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	add.s64 	%rd1511, %rd1505, %rd1510;
	add.s64 	%rd1512, %rd1511, -6333637450476146687;
	add.s64 	%rd1513, %rd1512, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1487;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 28;
	shf.r.wrap.b32 	%r992, %r989, %r990, 28;
	mov.b64 	%rd1514, {%r992, %r991};
	shf.l.wrap.b32 	%r993, %r989, %r990, 30;
	shf.l.wrap.b32 	%r994, %r990, %r989, 30;
	mov.b64 	%rd1515, {%r994, %r993};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	shf.l.wrap.b32 	%r995, %r989, %r990, 25;
	shf.l.wrap.b32 	%r996, %r990, %r989, 25;
	mov.b64 	%rd1517, {%r996, %r995};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	and.b64  	%rd1519, %rd1487, %rd1450;
	or.b64  	%rd1520, %rd1487, %rd1450;
	and.b64  	%rd1521, %rd1520, %rd1413;
	or.b64  	%rd1522, %rd1521, %rd1519;
	add.s64 	%rd1523, %rd1522, %rd1518;
	add.s64 	%rd1524, %rd1523, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1463;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 19;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 19;
	mov.b64 	%rd1525, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 3;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 3;
	mov.b64 	%rd1526, {%r1002, %r1001};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	shr.u64 	%rd1528, %rd1463, 6;
	xor.b64  	%rd1529, %rd1527, %rd1528;
	shf.r.wrap.b32 	%r1003, %r660, %r659, 1;
	shf.r.wrap.b32 	%r1004, %r659, %r660, 1;
	mov.b64 	%rd1530, {%r1004, %r1003};
	shf.r.wrap.b32 	%r1005, %r660, %r659, 8;
	shf.r.wrap.b32 	%r1006, %r659, %r660, 8;
	mov.b64 	%rd1531, {%r1006, %r1005};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	shr.u64 	%rd1533, %rd982, 7;
	xor.b64  	%rd1534, %rd1532, %rd1533;
	add.s64 	%rd1535, %rd1529, %rd945;
	add.s64 	%rd1536, %rd1535, %rd1278;
	add.s64 	%rd1537, %rd1536, %rd1534;
	add.s64 	%rd1538, %rd1537, %rd1402;
	xor.b64  	%rd1539, %rd1476, %rd1439;
	and.b64  	%rd1540, %rd1513, %rd1539;
	xor.b64  	%rd1541, %rd1540, %rd1439;
	add.s64 	%rd1542, %rd1538, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1513;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 14;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 14;
	mov.b64 	%rd1543, {%r1010, %r1009};
	shf.r.wrap.b32 	%r1011, %r1008, %r1007, 18;
	shf.r.wrap.b32 	%r1012, %r1007, %r1008, 18;
	mov.b64 	%rd1544, {%r1012, %r1011};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	shf.l.wrap.b32 	%r1013, %r1007, %r1008, 23;
	shf.l.wrap.b32 	%r1014, %r1008, %r1007, 23;
	mov.b64 	%rd1546, {%r1014, %r1013};
	xor.b64  	%rd1547, %rd1545, %rd1546;
	add.s64 	%rd1548, %rd1542, %rd1547;
	add.s64 	%rd1549, %rd1548, -4446306890439682159;
	add.s64 	%rd1550, %rd1549, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd1524;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 28;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 28;
	mov.b64 	%rd1551, {%r1018, %r1017};
	shf.l.wrap.b32 	%r1019, %r1015, %r1016, 30;
	shf.l.wrap.b32 	%r1020, %r1016, %r1015, 30;
	mov.b64 	%rd1552, {%r1020, %r1019};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	shf.l.wrap.b32 	%r1021, %r1015, %r1016, 25;
	shf.l.wrap.b32 	%r1022, %r1016, %r1015, 25;
	mov.b64 	%rd1554, {%r1022, %r1021};
	xor.b64  	%rd1555, %rd1553, %rd1554;
	and.b64  	%rd1556, %rd1524, %rd1487;
	or.b64  	%rd1557, %rd1524, %rd1487;
	and.b64  	%rd1558, %rd1557, %rd1450;
	or.b64  	%rd1559, %rd1558, %rd1556;
	add.s64 	%rd1560, %rd1559, %rd1555;
	add.s64 	%rd1561, %rd1560, %rd1549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd1500;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 19;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 19;
	mov.b64 	%rd1562, {%r1026, %r1025};
	shf.l.wrap.b32 	%r1027, %r1023, %r1024, 3;
	shf.l.wrap.b32 	%r1028, %r1024, %r1023, 3;
	mov.b64 	%rd1563, {%r1028, %r1027};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	shr.u64 	%rd1565, %rd1500, 6;
	xor.b64  	%rd1566, %rd1564, %rd1565;
	shf.r.wrap.b32 	%r1029, %r686, %r685, 1;
	shf.r.wrap.b32 	%r1030, %r685, %r686, 1;
	mov.b64 	%rd1567, {%r1030, %r1029};
	shf.r.wrap.b32 	%r1031, %r686, %r685, 8;
	shf.r.wrap.b32 	%r1032, %r685, %r686, 8;
	mov.b64 	%rd1568, {%r1032, %r1031};
	xor.b64  	%rd1569, %rd1567, %rd1568;
	shr.u64 	%rd1570, %rd1019, 7;
	xor.b64  	%rd1571, %rd1569, %rd1570;
	add.s64 	%rd1572, %rd1566, %rd982;
	add.s64 	%rd1573, %rd1572, %rd1315;
	add.s64 	%rd1574, %rd1573, %rd1571;
	add.s64 	%rd1575, %rd1574, %rd1439;
	xor.b64  	%rd1576, %rd1513, %rd1476;
	and.b64  	%rd1577, %rd1550, %rd1576;
	xor.b64  	%rd1578, %rd1577, %rd1476;
	add.s64 	%rd1579, %rd1575, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1033,%dummy}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1034}, %rd1550;
	}
	shf.r.wrap.b32 	%r1035, %r1034, %r1033, 14;
	shf.r.wrap.b32 	%r1036, %r1033, %r1034, 14;
	mov.b64 	%rd1580, {%r1036, %r1035};
	shf.r.wrap.b32 	%r1037, %r1034, %r1033, 18;
	shf.r.wrap.b32 	%r1038, %r1033, %r1034, 18;
	mov.b64 	%rd1581, {%r1038, %r1037};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	shf.l.wrap.b32 	%r1039, %r1033, %r1034, 23;
	shf.l.wrap.b32 	%r1040, %r1034, %r1033, 23;
	mov.b64 	%rd1583, {%r1040, %r1039};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	add.s64 	%rd1585, %rd1579, %rd1584;
	add.s64 	%rd1586, %rd1585, -4076793802049405392;
	add.s64 	%rd1587, %rd1586, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1041,%dummy}, %rd1561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1042}, %rd1561;
	}
	shf.r.wrap.b32 	%r1043, %r1042, %r1041, 28;
	shf.r.wrap.b32 	%r1044, %r1041, %r1042, 28;
	mov.b64 	%rd1588, {%r1044, %r1043};
	shf.l.wrap.b32 	%r1045, %r1041, %r1042, 30;
	shf.l.wrap.b32 	%r1046, %r1042, %r1041, 30;
	mov.b64 	%rd1589, {%r1046, %r1045};
	xor.b64  	%rd1590, %rd1588, %rd1589;
	shf.l.wrap.b32 	%r1047, %r1041, %r1042, 25;
	shf.l.wrap.b32 	%r1048, %r1042, %r1041, 25;
	mov.b64 	%rd1591, {%r1048, %r1047};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	and.b64  	%rd1593, %rd1561, %rd1524;
	or.b64  	%rd1594, %rd1561, %rd1524;
	and.b64  	%rd1595, %rd1594, %rd1487;
	or.b64  	%rd1596, %rd1595, %rd1593;
	add.s64 	%rd1597, %rd1596, %rd1592;
	add.s64 	%rd1598, %rd1597, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1049,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1050}, %rd1537;
	}
	shf.r.wrap.b32 	%r1051, %r1050, %r1049, 19;
	shf.r.wrap.b32 	%r1052, %r1049, %r1050, 19;
	mov.b64 	%rd1599, {%r1052, %r1051};
	shf.l.wrap.b32 	%r1053, %r1049, %r1050, 3;
	shf.l.wrap.b32 	%r1054, %r1050, %r1049, 3;
	mov.b64 	%rd1600, {%r1054, %r1053};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	shr.u64 	%rd1602, %rd1537, 6;
	xor.b64  	%rd1603, %rd1601, %rd1602;
	shf.r.wrap.b32 	%r1055, %r712, %r711, 1;
	shf.r.wrap.b32 	%r1056, %r711, %r712, 1;
	mov.b64 	%rd1604, {%r1056, %r1055};
	shf.r.wrap.b32 	%r1057, %r712, %r711, 8;
	shf.r.wrap.b32 	%r1058, %r711, %r712, 8;
	mov.b64 	%rd1605, {%r1058, %r1057};
	xor.b64  	%rd1606, %rd1604, %rd1605;
	shr.u64 	%rd1607, %rd1056, 7;
	xor.b64  	%rd1608, %rd1606, %rd1607;
	add.s64 	%rd1609, %rd1603, %rd1019;
	add.s64 	%rd1610, %rd1609, %rd1352;
	add.s64 	%rd1611, %rd1610, %rd1608;
	add.s64 	%rd1612, %rd1611, %rd1476;
	xor.b64  	%rd1613, %rd1550, %rd1513;
	and.b64  	%rd1614, %rd1587, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1513;
	add.s64 	%rd1616, %rd1612, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1059,%dummy}, %rd1587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1060}, %rd1587;
	}
	shf.r.wrap.b32 	%r1061, %r1060, %r1059, 14;
	shf.r.wrap.b32 	%r1062, %r1059, %r1060, 14;
	mov.b64 	%rd1617, {%r1062, %r1061};
	shf.r.wrap.b32 	%r1063, %r1060, %r1059, 18;
	shf.r.wrap.b32 	%r1064, %r1059, %r1060, 18;
	mov.b64 	%rd1618, {%r1064, %r1063};
	xor.b64  	%rd1619, %rd1617, %rd1618;
	shf.l.wrap.b32 	%r1065, %r1059, %r1060, 23;
	shf.l.wrap.b32 	%r1066, %r1060, %r1059, 23;
	mov.b64 	%rd1620, {%r1066, %r1065};
	xor.b64  	%rd1621, %rd1619, %rd1620;
	add.s64 	%rd1622, %rd1616, %rd1621;
	add.s64 	%rd1623, %rd1622, -3345356375505022440;
	add.s64 	%rd1624, %rd1623, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1067,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1068}, %rd1598;
	}
	shf.r.wrap.b32 	%r1069, %r1068, %r1067, 28;
	shf.r.wrap.b32 	%r1070, %r1067, %r1068, 28;
	mov.b64 	%rd1625, {%r1070, %r1069};
	shf.l.wrap.b32 	%r1071, %r1067, %r1068, 30;
	shf.l.wrap.b32 	%r1072, %r1068, %r1067, 30;
	mov.b64 	%rd1626, {%r1072, %r1071};
	xor.b64  	%rd1627, %rd1625, %rd1626;
	shf.l.wrap.b32 	%r1073, %r1067, %r1068, 25;
	shf.l.wrap.b32 	%r1074, %r1068, %r1067, 25;
	mov.b64 	%rd1628, {%r1074, %r1073};
	xor.b64  	%rd1629, %rd1627, %rd1628;
	and.b64  	%rd1630, %rd1598, %rd1561;
	or.b64  	%rd1631, %rd1598, %rd1561;
	and.b64  	%rd1632, %rd1631, %rd1524;
	or.b64  	%rd1633, %rd1632, %rd1630;
	add.s64 	%rd1634, %rd1633, %rd1629;
	add.s64 	%rd1635, %rd1634, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1075,%dummy}, %rd1574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1076}, %rd1574;
	}
	shf.r.wrap.b32 	%r1077, %r1076, %r1075, 19;
	shf.r.wrap.b32 	%r1078, %r1075, %r1076, 19;
	mov.b64 	%rd1636, {%r1078, %r1077};
	shf.l.wrap.b32 	%r1079, %r1075, %r1076, 3;
	shf.l.wrap.b32 	%r1080, %r1076, %r1075, 3;
	mov.b64 	%rd1637, {%r1080, %r1079};
	xor.b64  	%rd1638, %rd1636, %rd1637;
	shr.u64 	%rd1639, %rd1574, 6;
	xor.b64  	%rd1640, %rd1638, %rd1639;
	shf.r.wrap.b32 	%r1081, %r738, %r737, 1;
	shf.r.wrap.b32 	%r1082, %r737, %r738, 1;
	mov.b64 	%rd1641, {%r1082, %r1081};
	shf.r.wrap.b32 	%r1083, %r738, %r737, 8;
	shf.r.wrap.b32 	%r1084, %r737, %r738, 8;
	mov.b64 	%rd1642, {%r1084, %r1083};
	xor.b64  	%rd1643, %rd1641, %rd1642;
	shr.u64 	%rd1644, %rd1093, 7;
	xor.b64  	%rd1645, %rd1643, %rd1644;
	add.s64 	%rd1646, %rd1640, %rd1056;
	add.s64 	%rd1647, %rd1646, %rd1389;
	add.s64 	%rd1648, %rd1647, %rd1645;
	add.s64 	%rd1649, %rd1648, %rd1513;
	xor.b64  	%rd1650, %rd1587, %rd1550;
	and.b64  	%rd1651, %rd1624, %rd1650;
	xor.b64  	%rd1652, %rd1651, %rd1550;
	add.s64 	%rd1653, %rd1649, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1624;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 14;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 14;
	mov.b64 	%rd1654, {%r1088, %r1087};
	shf.r.wrap.b32 	%r1089, %r1086, %r1085, 18;
	shf.r.wrap.b32 	%r1090, %r1085, %r1086, 18;
	mov.b64 	%rd1655, {%r1090, %r1089};
	xor.b64  	%rd1656, %rd1654, %rd1655;
	shf.l.wrap.b32 	%r1091, %r1085, %r1086, 23;
	shf.l.wrap.b32 	%r1092, %r1086, %r1085, 23;
	mov.b64 	%rd1657, {%r1092, %r1091};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	add.s64 	%rd1659, %rd1653, %rd1658;
	add.s64 	%rd1660, %rd1659, -2983346525034927856;
	add.s64 	%rd1661, %rd1660, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd1635;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 28;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 28;
	mov.b64 	%rd1662, {%r1096, %r1095};
	shf.l.wrap.b32 	%r1097, %r1093, %r1094, 30;
	shf.l.wrap.b32 	%r1098, %r1094, %r1093, 30;
	mov.b64 	%rd1663, {%r1098, %r1097};
	xor.b64  	%rd1664, %rd1662, %rd1663;
	shf.l.wrap.b32 	%r1099, %r1093, %r1094, 25;
	shf.l.wrap.b32 	%r1100, %r1094, %r1093, 25;
	mov.b64 	%rd1665, {%r1100, %r1099};
	xor.b64  	%rd1666, %rd1664, %rd1665;
	and.b64  	%rd1667, %rd1635, %rd1598;
	or.b64  	%rd1668, %rd1635, %rd1598;
	and.b64  	%rd1669, %rd1668, %rd1561;
	or.b64  	%rd1670, %rd1669, %rd1667;
	add.s64 	%rd1671, %rd1670, %rd1666;
	add.s64 	%rd1672, %rd1671, %rd1660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd1611;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 19;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 19;
	mov.b64 	%rd1673, {%r1104, %r1103};
	shf.l.wrap.b32 	%r1105, %r1101, %r1102, 3;
	shf.l.wrap.b32 	%r1106, %r1102, %r1101, 3;
	mov.b64 	%rd1674, {%r1106, %r1105};
	xor.b64  	%rd1675, %rd1673, %rd1674;
	shr.u64 	%rd1676, %rd1611, 6;
	xor.b64  	%rd1677, %rd1675, %rd1676;
	shf.r.wrap.b32 	%r1107, %r764, %r763, 1;
	shf.r.wrap.b32 	%r1108, %r763, %r764, 1;
	mov.b64 	%rd1678, {%r1108, %r1107};
	shf.r.wrap.b32 	%r1109, %r764, %r763, 8;
	shf.r.wrap.b32 	%r1110, %r763, %r764, 8;
	mov.b64 	%rd1679, {%r1110, %r1109};
	xor.b64  	%rd1680, %rd1678, %rd1679;
	shr.u64 	%rd1681, %rd1130, 7;
	xor.b64  	%rd1682, %rd1680, %rd1681;
	add.s64 	%rd1683, %rd1677, %rd1093;
	add.s64 	%rd1684, %rd1683, %rd1426;
	add.s64 	%rd1685, %rd1684, %rd1682;
	add.s64 	%rd1686, %rd1685, %rd1550;
	xor.b64  	%rd1687, %rd1624, %rd1587;
	and.b64  	%rd1688, %rd1661, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1587;
	add.s64 	%rd1690, %rd1686, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1111,%dummy}, %rd1661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1112}, %rd1661;
	}
	shf.r.wrap.b32 	%r1113, %r1112, %r1111, 14;
	shf.r.wrap.b32 	%r1114, %r1111, %r1112, 14;
	mov.b64 	%rd1691, {%r1114, %r1113};
	shf.r.wrap.b32 	%r1115, %r1112, %r1111, 18;
	shf.r.wrap.b32 	%r1116, %r1111, %r1112, 18;
	mov.b64 	%rd1692, {%r1116, %r1115};
	xor.b64  	%rd1693, %rd1691, %rd1692;
	shf.l.wrap.b32 	%r1117, %r1111, %r1112, 23;
	shf.l.wrap.b32 	%r1118, %r1112, %r1111, 23;
	mov.b64 	%rd1694, {%r1118, %r1117};
	xor.b64  	%rd1695, %rd1693, %rd1694;
	add.s64 	%rd1696, %rd1690, %rd1695;
	add.s64 	%rd1697, %rd1696, -860691631967231958;
	add.s64 	%rd1698, %rd1697, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd1672;
	}
	shf.r.wrap.b32 	%r1121, %r1120, %r1119, 28;
	shf.r.wrap.b32 	%r1122, %r1119, %r1120, 28;
	mov.b64 	%rd1699, {%r1122, %r1121};
	shf.l.wrap.b32 	%r1123, %r1119, %r1120, 30;
	shf.l.wrap.b32 	%r1124, %r1120, %r1119, 30;
	mov.b64 	%rd1700, {%r1124, %r1123};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	shf.l.wrap.b32 	%r1125, %r1119, %r1120, 25;
	shf.l.wrap.b32 	%r1126, %r1120, %r1119, 25;
	mov.b64 	%rd1702, {%r1126, %r1125};
	xor.b64  	%rd1703, %rd1701, %rd1702;
	and.b64  	%rd1704, %rd1672, %rd1635;
	or.b64  	%rd1705, %rd1672, %rd1635;
	and.b64  	%rd1706, %rd1705, %rd1598;
	or.b64  	%rd1707, %rd1706, %rd1704;
	add.s64 	%rd1708, %rd1707, %rd1703;
	add.s64 	%rd1709, %rd1708, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1127,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1128}, %rd1648;
	}
	shf.r.wrap.b32 	%r1129, %r1128, %r1127, 19;
	shf.r.wrap.b32 	%r1130, %r1127, %r1128, 19;
	mov.b64 	%rd1710, {%r1130, %r1129};
	shf.l.wrap.b32 	%r1131, %r1127, %r1128, 3;
	shf.l.wrap.b32 	%r1132, %r1128, %r1127, 3;
	mov.b64 	%rd1711, {%r1132, %r1131};
	xor.b64  	%rd1712, %rd1710, %rd1711;
	shr.u64 	%rd1713, %rd1648, 6;
	xor.b64  	%rd1714, %rd1712, %rd1713;
	shf.r.wrap.b32 	%r1133, %r790, %r789, 1;
	shf.r.wrap.b32 	%r1134, %r789, %r790, 1;
	mov.b64 	%rd1715, {%r1134, %r1133};
	shf.r.wrap.b32 	%r1135, %r790, %r789, 8;
	shf.r.wrap.b32 	%r1136, %r789, %r790, 8;
	mov.b64 	%rd1716, {%r1136, %r1135};
	xor.b64  	%rd1717, %rd1715, %rd1716;
	shr.u64 	%rd1718, %rd1167, 7;
	xor.b64  	%rd1719, %rd1717, %rd1718;
	add.s64 	%rd1720, %rd1714, %rd1130;
	add.s64 	%rd1721, %rd1720, %rd1463;
	add.s64 	%rd1722, %rd1721, %rd1719;
	add.s64 	%rd1723, %rd1722, %rd1587;
	xor.b64  	%rd1724, %rd1661, %rd1624;
	and.b64  	%rd1725, %rd1698, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1624;
	add.s64 	%rd1727, %rd1723, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd1698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1138}, %rd1698;
	}
	shf.r.wrap.b32 	%r1139, %r1138, %r1137, 14;
	shf.r.wrap.b32 	%r1140, %r1137, %r1138, 14;
	mov.b64 	%rd1728, {%r1140, %r1139};
	shf.r.wrap.b32 	%r1141, %r1138, %r1137, 18;
	shf.r.wrap.b32 	%r1142, %r1137, %r1138, 18;
	mov.b64 	%rd1729, {%r1142, %r1141};
	xor.b64  	%rd1730, %rd1728, %rd1729;
	shf.l.wrap.b32 	%r1143, %r1137, %r1138, 23;
	shf.l.wrap.b32 	%r1144, %r1138, %r1137, 23;
	mov.b64 	%rd1731, {%r1144, %r1143};
	xor.b64  	%rd1732, %rd1730, %rd1731;
	add.s64 	%rd1733, %rd1727, %rd1732;
	add.s64 	%rd1734, %rd1733, 1182934255886127544;
	add.s64 	%rd1735, %rd1734, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd1709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1146}, %rd1709;
	}
	shf.r.wrap.b32 	%r1147, %r1146, %r1145, 28;
	shf.r.wrap.b32 	%r1148, %r1145, %r1146, 28;
	mov.b64 	%rd1736, {%r1148, %r1147};
	shf.l.wrap.b32 	%r1149, %r1145, %r1146, 30;
	shf.l.wrap.b32 	%r1150, %r1146, %r1145, 30;
	mov.b64 	%rd1737, {%r1150, %r1149};
	xor.b64  	%rd1738, %rd1736, %rd1737;
	shf.l.wrap.b32 	%r1151, %r1145, %r1146, 25;
	shf.l.wrap.b32 	%r1152, %r1146, %r1145, 25;
	mov.b64 	%rd1739, {%r1152, %r1151};
	xor.b64  	%rd1740, %rd1738, %rd1739;
	and.b64  	%rd1741, %rd1709, %rd1672;
	or.b64  	%rd1742, %rd1709, %rd1672;
	and.b64  	%rd1743, %rd1742, %rd1635;
	or.b64  	%rd1744, %rd1743, %rd1741;
	add.s64 	%rd1745, %rd1744, %rd1740;
	add.s64 	%rd1746, %rd1745, %rd1734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd1685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd1685;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 19;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 19;
	mov.b64 	%rd1747, {%r1156, %r1155};
	shf.l.wrap.b32 	%r1157, %r1153, %r1154, 3;
	shf.l.wrap.b32 	%r1158, %r1154, %r1153, 3;
	mov.b64 	%rd1748, {%r1158, %r1157};
	xor.b64  	%rd1749, %rd1747, %rd1748;
	shr.u64 	%rd1750, %rd1685, 6;
	xor.b64  	%rd1751, %rd1749, %rd1750;
	shf.r.wrap.b32 	%r1159, %r816, %r815, 1;
	shf.r.wrap.b32 	%r1160, %r815, %r816, 1;
	mov.b64 	%rd1752, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r816, %r815, 8;
	shf.r.wrap.b32 	%r1162, %r815, %r816, 8;
	mov.b64 	%rd1753, {%r1162, %r1161};
	xor.b64  	%rd1754, %rd1752, %rd1753;
	shr.u64 	%rd1755, %rd1204, 7;
	xor.b64  	%rd1756, %rd1754, %rd1755;
	add.s64 	%rd1757, %rd1751, %rd1167;
	add.s64 	%rd1758, %rd1757, %rd1500;
	add.s64 	%rd1759, %rd1758, %rd1756;
	add.s64 	%rd1760, %rd1759, %rd1624;
	xor.b64  	%rd1761, %rd1698, %rd1661;
	and.b64  	%rd1762, %rd1735, %rd1761;
	xor.b64  	%rd1763, %rd1762, %rd1661;
	add.s64 	%rd1764, %rd1760, %rd1763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd1735;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 14;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 14;
	mov.b64 	%rd1765, {%r1166, %r1165};
	shf.r.wrap.b32 	%r1167, %r1164, %r1163, 18;
	shf.r.wrap.b32 	%r1168, %r1163, %r1164, 18;
	mov.b64 	%rd1766, {%r1168, %r1167};
	xor.b64  	%rd1767, %rd1765, %rd1766;
	shf.l.wrap.b32 	%r1169, %r1163, %r1164, 23;
	shf.l.wrap.b32 	%r1170, %r1164, %r1163, 23;
	mov.b64 	%rd1768, {%r1170, %r1169};
	xor.b64  	%rd1769, %rd1767, %rd1768;
	add.s64 	%rd1770, %rd1764, %rd1769;
	add.s64 	%rd1771, %rd1770, 1847814050463011016;
	add.s64 	%rd1772, %rd1771, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1171,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1172}, %rd1746;
	}
	shf.r.wrap.b32 	%r1173, %r1172, %r1171, 28;
	shf.r.wrap.b32 	%r1174, %r1171, %r1172, 28;
	mov.b64 	%rd1773, {%r1174, %r1173};
	shf.l.wrap.b32 	%r1175, %r1171, %r1172, 30;
	shf.l.wrap.b32 	%r1176, %r1172, %r1171, 30;
	mov.b64 	%rd1774, {%r1176, %r1175};
	xor.b64  	%rd1775, %rd1773, %rd1774;
	shf.l.wrap.b32 	%r1177, %r1171, %r1172, 25;
	shf.l.wrap.b32 	%r1178, %r1172, %r1171, 25;
	mov.b64 	%rd1776, {%r1178, %r1177};
	xor.b64  	%rd1777, %rd1775, %rd1776;
	and.b64  	%rd1778, %rd1746, %rd1709;
	or.b64  	%rd1779, %rd1746, %rd1709;
	and.b64  	%rd1780, %rd1779, %rd1672;
	or.b64  	%rd1781, %rd1780, %rd1778;
	add.s64 	%rd1782, %rd1781, %rd1777;
	add.s64 	%rd1783, %rd1782, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1179,%dummy}, %rd1722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd1722;
	}
	shf.r.wrap.b32 	%r1181, %r1180, %r1179, 19;
	shf.r.wrap.b32 	%r1182, %r1179, %r1180, 19;
	mov.b64 	%rd1784, {%r1182, %r1181};
	shf.l.wrap.b32 	%r1183, %r1179, %r1180, 3;
	shf.l.wrap.b32 	%r1184, %r1180, %r1179, 3;
	mov.b64 	%rd1785, {%r1184, %r1183};
	xor.b64  	%rd1786, %rd1784, %rd1785;
	shr.u64 	%rd1787, %rd1722, 6;
	xor.b64  	%rd1788, %rd1786, %rd1787;
	shf.r.wrap.b32 	%r1185, %r842, %r841, 1;
	shf.r.wrap.b32 	%r1186, %r841, %r842, 1;
	mov.b64 	%rd1789, {%r1186, %r1185};
	shf.r.wrap.b32 	%r1187, %r842, %r841, 8;
	shf.r.wrap.b32 	%r1188, %r841, %r842, 8;
	mov.b64 	%rd1790, {%r1188, %r1187};
	xor.b64  	%rd1791, %rd1789, %rd1790;
	shr.u64 	%rd1792, %rd1241, 7;
	xor.b64  	%rd1793, %rd1791, %rd1792;
	add.s64 	%rd1794, %rd1788, %rd1204;
	add.s64 	%rd1795, %rd1794, %rd1537;
	add.s64 	%rd1796, %rd1795, %rd1793;
	add.s64 	%rd1797, %rd1796, %rd1661;
	xor.b64  	%rd1798, %rd1735, %rd1698;
	and.b64  	%rd1799, %rd1772, %rd1798;
	xor.b64  	%rd1800, %rd1799, %rd1698;
	add.s64 	%rd1801, %rd1797, %rd1800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1772;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 14;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 14;
	mov.b64 	%rd1802, {%r1192, %r1191};
	shf.r.wrap.b32 	%r1193, %r1190, %r1189, 18;
	shf.r.wrap.b32 	%r1194, %r1189, %r1190, 18;
	mov.b64 	%rd1803, {%r1194, %r1193};
	xor.b64  	%rd1804, %rd1802, %rd1803;
	shf.l.wrap.b32 	%r1195, %r1189, %r1190, 23;
	shf.l.wrap.b32 	%r1196, %r1190, %r1189, 23;
	mov.b64 	%rd1805, {%r1196, %r1195};
	xor.b64  	%rd1806, %rd1804, %rd1805;
	add.s64 	%rd1807, %rd1801, %rd1806;
	add.s64 	%rd1808, %rd1807, 2177327727835720531;
	add.s64 	%rd1809, %rd1808, %rd1672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd1783;
	}
	shf.r.wrap.b32 	%r1199, %r1198, %r1197, 28;
	shf.r.wrap.b32 	%r1200, %r1197, %r1198, 28;
	mov.b64 	%rd1810, {%r1200, %r1199};
	shf.l.wrap.b32 	%r1201, %r1197, %r1198, 30;
	shf.l.wrap.b32 	%r1202, %r1198, %r1197, 30;
	mov.b64 	%rd1811, {%r1202, %r1201};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	shf.l.wrap.b32 	%r1203, %r1197, %r1198, 25;
	shf.l.wrap.b32 	%r1204, %r1198, %r1197, 25;
	mov.b64 	%rd1813, {%r1204, %r1203};
	xor.b64  	%rd1814, %rd1812, %rd1813;
	and.b64  	%rd1815, %rd1783, %rd1746;
	or.b64  	%rd1816, %rd1783, %rd1746;
	and.b64  	%rd1817, %rd1816, %rd1709;
	or.b64  	%rd1818, %rd1817, %rd1815;
	add.s64 	%rd1819, %rd1818, %rd1814;
	add.s64 	%rd1820, %rd1819, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1759;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 19;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 19;
	mov.b64 	%rd1821, {%r1208, %r1207};
	shf.l.wrap.b32 	%r1209, %r1205, %r1206, 3;
	shf.l.wrap.b32 	%r1210, %r1206, %r1205, 3;
	mov.b64 	%rd1822, {%r1210, %r1209};
	xor.b64  	%rd1823, %rd1821, %rd1822;
	shr.u64 	%rd1824, %rd1759, 6;
	xor.b64  	%rd1825, %rd1823, %rd1824;
	shf.r.wrap.b32 	%r1211, %r868, %r867, 1;
	shf.r.wrap.b32 	%r1212, %r867, %r868, 1;
	mov.b64 	%rd1826, {%r1212, %r1211};
	shf.r.wrap.b32 	%r1213, %r868, %r867, 8;
	shf.r.wrap.b32 	%r1214, %r867, %r868, 8;
	mov.b64 	%rd1827, {%r1214, %r1213};
	xor.b64  	%rd1828, %rd1826, %rd1827;
	shr.u64 	%rd1829, %rd1278, 7;
	xor.b64  	%rd1830, %rd1828, %rd1829;
	add.s64 	%rd1831, %rd1825, %rd1241;
	add.s64 	%rd1832, %rd1831, %rd1574;
	add.s64 	%rd1833, %rd1832, %rd1830;
	add.s64 	%rd1834, %rd1833, %rd1698;
	xor.b64  	%rd1835, %rd1772, %rd1735;
	and.b64  	%rd1836, %rd1809, %rd1835;
	xor.b64  	%rd1837, %rd1836, %rd1735;
	add.s64 	%rd1838, %rd1834, %rd1837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1809;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 14;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 14;
	mov.b64 	%rd1839, {%r1218, %r1217};
	shf.r.wrap.b32 	%r1219, %r1216, %r1215, 18;
	shf.r.wrap.b32 	%r1220, %r1215, %r1216, 18;
	mov.b64 	%rd1840, {%r1220, %r1219};
	xor.b64  	%rd1841, %rd1839, %rd1840;
	shf.l.wrap.b32 	%r1221, %r1215, %r1216, 23;
	shf.l.wrap.b32 	%r1222, %r1216, %r1215, 23;
	mov.b64 	%rd1842, {%r1222, %r1221};
	xor.b64  	%rd1843, %rd1841, %rd1842;
	add.s64 	%rd1844, %rd1838, %rd1843;
	add.s64 	%rd1845, %rd1844, 2830643537854262169;
	add.s64 	%rd1846, %rd1845, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1820;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 28;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 28;
	mov.b64 	%rd1847, {%r1226, %r1225};
	shf.l.wrap.b32 	%r1227, %r1223, %r1224, 30;
	shf.l.wrap.b32 	%r1228, %r1224, %r1223, 30;
	mov.b64 	%rd1848, {%r1228, %r1227};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	shf.l.wrap.b32 	%r1229, %r1223, %r1224, 25;
	shf.l.wrap.b32 	%r1230, %r1224, %r1223, 25;
	mov.b64 	%rd1850, {%r1230, %r1229};
	xor.b64  	%rd1851, %rd1849, %rd1850;
	and.b64  	%rd1852, %rd1820, %rd1783;
	or.b64  	%rd1853, %rd1820, %rd1783;
	and.b64  	%rd1854, %rd1853, %rd1746;
	or.b64  	%rd1855, %rd1854, %rd1852;
	add.s64 	%rd1856, %rd1855, %rd1851;
	add.s64 	%rd1857, %rd1856, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1231,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1232}, %rd1796;
	}
	shf.r.wrap.b32 	%r1233, %r1232, %r1231, 19;
	shf.r.wrap.b32 	%r1234, %r1231, %r1232, 19;
	mov.b64 	%rd1858, {%r1234, %r1233};
	shf.l.wrap.b32 	%r1235, %r1231, %r1232, 3;
	shf.l.wrap.b32 	%r1236, %r1232, %r1231, 3;
	mov.b64 	%rd1859, {%r1236, %r1235};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	shr.u64 	%rd1861, %rd1796, 6;
	xor.b64  	%rd1862, %rd1860, %rd1861;
	shf.r.wrap.b32 	%r1237, %r894, %r893, 1;
	shf.r.wrap.b32 	%r1238, %r893, %r894, 1;
	mov.b64 	%rd1863, {%r1238, %r1237};
	shf.r.wrap.b32 	%r1239, %r894, %r893, 8;
	shf.r.wrap.b32 	%r1240, %r893, %r894, 8;
	mov.b64 	%rd1864, {%r1240, %r1239};
	xor.b64  	%rd1865, %rd1863, %rd1864;
	shr.u64 	%rd1866, %rd1315, 7;
	xor.b64  	%rd1867, %rd1865, %rd1866;
	add.s64 	%rd1868, %rd1862, %rd1278;
	add.s64 	%rd1869, %rd1868, %rd1611;
	add.s64 	%rd1870, %rd1869, %rd1867;
	add.s64 	%rd1871, %rd1870, %rd1735;
	xor.b64  	%rd1872, %rd1809, %rd1772;
	and.b64  	%rd1873, %rd1846, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1772;
	add.s64 	%rd1875, %rd1871, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd1846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd1846;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 14;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 14;
	mov.b64 	%rd1876, {%r1244, %r1243};
	shf.r.wrap.b32 	%r1245, %r1242, %r1241, 18;
	shf.r.wrap.b32 	%r1246, %r1241, %r1242, 18;
	mov.b64 	%rd1877, {%r1246, %r1245};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	shf.l.wrap.b32 	%r1247, %r1241, %r1242, 23;
	shf.l.wrap.b32 	%r1248, %r1242, %r1241, 23;
	mov.b64 	%rd1879, {%r1248, %r1247};
	xor.b64  	%rd1880, %rd1878, %rd1879;
	add.s64 	%rd1881, %rd1875, %rd1880;
	add.s64 	%rd1882, %rd1881, 3796741975233480872;
	add.s64 	%rd1883, %rd1882, %rd1746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1249,%dummy}, %rd1857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1250}, %rd1857;
	}
	shf.r.wrap.b32 	%r1251, %r1250, %r1249, 28;
	shf.r.wrap.b32 	%r1252, %r1249, %r1250, 28;
	mov.b64 	%rd1884, {%r1252, %r1251};
	shf.l.wrap.b32 	%r1253, %r1249, %r1250, 30;
	shf.l.wrap.b32 	%r1254, %r1250, %r1249, 30;
	mov.b64 	%rd1885, {%r1254, %r1253};
	xor.b64  	%rd1886, %rd1884, %rd1885;
	shf.l.wrap.b32 	%r1255, %r1249, %r1250, 25;
	shf.l.wrap.b32 	%r1256, %r1250, %r1249, 25;
	mov.b64 	%rd1887, {%r1256, %r1255};
	xor.b64  	%rd1888, %rd1886, %rd1887;
	and.b64  	%rd1889, %rd1857, %rd1820;
	or.b64  	%rd1890, %rd1857, %rd1820;
	and.b64  	%rd1891, %rd1890, %rd1783;
	or.b64  	%rd1892, %rd1891, %rd1889;
	add.s64 	%rd1893, %rd1892, %rd1888;
	add.s64 	%rd1894, %rd1893, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1258}, %rd1833;
	}
	shf.r.wrap.b32 	%r1259, %r1258, %r1257, 19;
	shf.r.wrap.b32 	%r1260, %r1257, %r1258, 19;
	mov.b64 	%rd1895, {%r1260, %r1259};
	shf.l.wrap.b32 	%r1261, %r1257, %r1258, 3;
	shf.l.wrap.b32 	%r1262, %r1258, %r1257, 3;
	mov.b64 	%rd1896, {%r1262, %r1261};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	shr.u64 	%rd1898, %rd1833, 6;
	xor.b64  	%rd1899, %rd1897, %rd1898;
	shf.r.wrap.b32 	%r1263, %r920, %r919, 1;
	shf.r.wrap.b32 	%r1264, %r919, %r920, 1;
	mov.b64 	%rd1900, {%r1264, %r1263};
	shf.r.wrap.b32 	%r1265, %r920, %r919, 8;
	shf.r.wrap.b32 	%r1266, %r919, %r920, 8;
	mov.b64 	%rd1901, {%r1266, %r1265};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	shr.u64 	%rd1903, %rd1352, 7;
	xor.b64  	%rd1904, %rd1902, %rd1903;
	add.s64 	%rd1905, %rd1899, %rd1315;
	add.s64 	%rd1906, %rd1905, %rd1648;
	add.s64 	%rd1907, %rd1906, %rd1904;
	add.s64 	%rd1908, %rd1907, %rd1772;
	xor.b64  	%rd1909, %rd1846, %rd1809;
	and.b64  	%rd1910, %rd1883, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1809;
	add.s64 	%rd1912, %rd1908, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1267,%dummy}, %rd1883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1268}, %rd1883;
	}
	shf.r.wrap.b32 	%r1269, %r1268, %r1267, 14;
	shf.r.wrap.b32 	%r1270, %r1267, %r1268, 14;
	mov.b64 	%rd1913, {%r1270, %r1269};
	shf.r.wrap.b32 	%r1271, %r1268, %r1267, 18;
	shf.r.wrap.b32 	%r1272, %r1267, %r1268, 18;
	mov.b64 	%rd1914, {%r1272, %r1271};
	xor.b64  	%rd1915, %rd1913, %rd1914;
	shf.l.wrap.b32 	%r1273, %r1267, %r1268, 23;
	shf.l.wrap.b32 	%r1274, %r1268, %r1267, 23;
	mov.b64 	%rd1916, {%r1274, %r1273};
	xor.b64  	%rd1917, %rd1915, %rd1916;
	add.s64 	%rd1918, %rd1912, %rd1917;
	add.s64 	%rd1919, %rd1918, 4115178125766777443;
	add.s64 	%rd1920, %rd1919, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1275,%dummy}, %rd1894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1276}, %rd1894;
	}
	shf.r.wrap.b32 	%r1277, %r1276, %r1275, 28;
	shf.r.wrap.b32 	%r1278, %r1275, %r1276, 28;
	mov.b64 	%rd1921, {%r1278, %r1277};
	shf.l.wrap.b32 	%r1279, %r1275, %r1276, 30;
	shf.l.wrap.b32 	%r1280, %r1276, %r1275, 30;
	mov.b64 	%rd1922, {%r1280, %r1279};
	xor.b64  	%rd1923, %rd1921, %rd1922;
	shf.l.wrap.b32 	%r1281, %r1275, %r1276, 25;
	shf.l.wrap.b32 	%r1282, %r1276, %r1275, 25;
	mov.b64 	%rd1924, {%r1282, %r1281};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	and.b64  	%rd1926, %rd1894, %rd1857;
	or.b64  	%rd1927, %rd1894, %rd1857;
	and.b64  	%rd1928, %rd1927, %rd1820;
	or.b64  	%rd1929, %rd1928, %rd1926;
	add.s64 	%rd1930, %rd1929, %rd1925;
	add.s64 	%rd1931, %rd1930, %rd1919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1283,%dummy}, %rd1870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1284}, %rd1870;
	}
	shf.r.wrap.b32 	%r1285, %r1284, %r1283, 19;
	shf.r.wrap.b32 	%r1286, %r1283, %r1284, 19;
	mov.b64 	%rd1932, {%r1286, %r1285};
	shf.l.wrap.b32 	%r1287, %r1283, %r1284, 3;
	shf.l.wrap.b32 	%r1288, %r1284, %r1283, 3;
	mov.b64 	%rd1933, {%r1288, %r1287};
	xor.b64  	%rd1934, %rd1932, %rd1933;
	shr.u64 	%rd1935, %rd1870, 6;
	xor.b64  	%rd1936, %rd1934, %rd1935;
	shf.r.wrap.b32 	%r1289, %r946, %r945, 1;
	shf.r.wrap.b32 	%r1290, %r945, %r946, 1;
	mov.b64 	%rd1937, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r946, %r945, 8;
	shf.r.wrap.b32 	%r1292, %r945, %r946, 8;
	mov.b64 	%rd1938, {%r1292, %r1291};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	shr.u64 	%rd1940, %rd1389, 7;
	xor.b64  	%rd1941, %rd1939, %rd1940;
	add.s64 	%rd1942, %rd1936, %rd1352;
	add.s64 	%rd1943, %rd1942, %rd1685;
	add.s64 	%rd1944, %rd1943, %rd1941;
	add.s64 	%rd1945, %rd1944, %rd1809;
	xor.b64  	%rd1946, %rd1883, %rd1846;
	and.b64  	%rd1947, %rd1920, %rd1946;
	xor.b64  	%rd1948, %rd1947, %rd1846;
	add.s64 	%rd1949, %rd1945, %rd1948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1920;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 14;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 14;
	mov.b64 	%rd1950, {%r1296, %r1295};
	shf.r.wrap.b32 	%r1297, %r1294, %r1293, 18;
	shf.r.wrap.b32 	%r1298, %r1293, %r1294, 18;
	mov.b64 	%rd1951, {%r1298, %r1297};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 23;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 23;
	mov.b64 	%rd1953, {%r1300, %r1299};
	xor.b64  	%rd1954, %rd1952, %rd1953;
	add.s64 	%rd1955, %rd1949, %rd1954;
	add.s64 	%rd1956, %rd1955, 5681478168544905931;
	add.s64 	%rd1957, %rd1956, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1931;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 28;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 28;
	mov.b64 	%rd1958, {%r1304, %r1303};
	shf.l.wrap.b32 	%r1305, %r1301, %r1302, 30;
	shf.l.wrap.b32 	%r1306, %r1302, %r1301, 30;
	mov.b64 	%rd1959, {%r1306, %r1305};
	xor.b64  	%rd1960, %rd1958, %rd1959;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 25;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 25;
	mov.b64 	%rd1961, {%r1308, %r1307};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	and.b64  	%rd1963, %rd1931, %rd1894;
	or.b64  	%rd1964, %rd1931, %rd1894;
	and.b64  	%rd1965, %rd1964, %rd1857;
	or.b64  	%rd1966, %rd1965, %rd1963;
	add.s64 	%rd1967, %rd1966, %rd1962;
	add.s64 	%rd1968, %rd1967, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd1907;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 19;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 19;
	mov.b64 	%rd1969, {%r1312, %r1311};
	shf.l.wrap.b32 	%r1313, %r1309, %r1310, 3;
	shf.l.wrap.b32 	%r1314, %r1310, %r1309, 3;
	mov.b64 	%rd1970, {%r1314, %r1313};
	xor.b64  	%rd1971, %rd1969, %rd1970;
	shr.u64 	%rd1972, %rd1907, 6;
	xor.b64  	%rd1973, %rd1971, %rd1972;
	shf.r.wrap.b32 	%r1315, %r972, %r971, 1;
	shf.r.wrap.b32 	%r1316, %r971, %r972, 1;
	mov.b64 	%rd1974, {%r1316, %r1315};
	shf.r.wrap.b32 	%r1317, %r972, %r971, 8;
	shf.r.wrap.b32 	%r1318, %r971, %r972, 8;
	mov.b64 	%rd1975, {%r1318, %r1317};
	xor.b64  	%rd1976, %rd1974, %rd1975;
	shr.u64 	%rd1977, %rd1426, 7;
	xor.b64  	%rd1978, %rd1976, %rd1977;
	add.s64 	%rd1979, %rd1973, %rd1389;
	add.s64 	%rd1980, %rd1979, %rd1722;
	add.s64 	%rd1981, %rd1980, %rd1978;
	add.s64 	%rd1982, %rd1981, %rd1846;
	xor.b64  	%rd1983, %rd1920, %rd1883;
	and.b64  	%rd1984, %rd1957, %rd1983;
	xor.b64  	%rd1985, %rd1984, %rd1883;
	add.s64 	%rd1986, %rd1982, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1957;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 14;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 14;
	mov.b64 	%rd1987, {%r1322, %r1321};
	shf.r.wrap.b32 	%r1323, %r1320, %r1319, 18;
	shf.r.wrap.b32 	%r1324, %r1319, %r1320, 18;
	mov.b64 	%rd1988, {%r1324, %r1323};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 23;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 23;
	mov.b64 	%rd1990, {%r1326, %r1325};
	xor.b64  	%rd1991, %rd1989, %rd1990;
	add.s64 	%rd1992, %rd1986, %rd1991;
	add.s64 	%rd1993, %rd1992, 6601373596472566643;
	add.s64 	%rd1994, %rd1993, %rd1857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1968;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 28;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 28;
	mov.b64 	%rd1995, {%r1330, %r1329};
	shf.l.wrap.b32 	%r1331, %r1327, %r1328, 30;
	shf.l.wrap.b32 	%r1332, %r1328, %r1327, 30;
	mov.b64 	%rd1996, {%r1332, %r1331};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 25;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 25;
	mov.b64 	%rd1998, {%r1334, %r1333};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	and.b64  	%rd2000, %rd1968, %rd1931;
	or.b64  	%rd2001, %rd1968, %rd1931;
	and.b64  	%rd2002, %rd2001, %rd1894;
	or.b64  	%rd2003, %rd2002, %rd2000;
	add.s64 	%rd2004, %rd2003, %rd1999;
	add.s64 	%rd2005, %rd2004, %rd1993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1944;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 19;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 19;
	mov.b64 	%rd2006, {%r1338, %r1337};
	shf.l.wrap.b32 	%r1339, %r1335, %r1336, 3;
	shf.l.wrap.b32 	%r1340, %r1336, %r1335, 3;
	mov.b64 	%rd2007, {%r1340, %r1339};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	shr.u64 	%rd2009, %rd1944, 6;
	xor.b64  	%rd2010, %rd2008, %rd2009;
	shf.r.wrap.b32 	%r1341, %r998, %r997, 1;
	shf.r.wrap.b32 	%r1342, %r997, %r998, 1;
	mov.b64 	%rd2011, {%r1342, %r1341};
	shf.r.wrap.b32 	%r1343, %r998, %r997, 8;
	shf.r.wrap.b32 	%r1344, %r997, %r998, 8;
	mov.b64 	%rd2012, {%r1344, %r1343};
	xor.b64  	%rd2013, %rd2011, %rd2012;
	shr.u64 	%rd2014, %rd1463, 7;
	xor.b64  	%rd2015, %rd2013, %rd2014;
	add.s64 	%rd2016, %rd2010, %rd1426;
	add.s64 	%rd2017, %rd2016, %rd1759;
	add.s64 	%rd2018, %rd2017, %rd2015;
	add.s64 	%rd2019, %rd2018, %rd1883;
	xor.b64  	%rd2020, %rd1957, %rd1920;
	and.b64  	%rd2021, %rd1994, %rd2020;
	xor.b64  	%rd2022, %rd2021, %rd1920;
	add.s64 	%rd2023, %rd2019, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd1994;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 14;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 14;
	mov.b64 	%rd2024, {%r1348, %r1347};
	shf.r.wrap.b32 	%r1349, %r1346, %r1345, 18;
	shf.r.wrap.b32 	%r1350, %r1345, %r1346, 18;
	mov.b64 	%rd2025, {%r1350, %r1349};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	shf.l.wrap.b32 	%r1351, %r1345, %r1346, 23;
	shf.l.wrap.b32 	%r1352, %r1346, %r1345, 23;
	mov.b64 	%rd2027, {%r1352, %r1351};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	add.s64 	%rd2029, %rd2023, %rd2028;
	add.s64 	%rd2030, %rd2029, 7507060721942968483;
	add.s64 	%rd2031, %rd2030, %rd1894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1353,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1354}, %rd2005;
	}
	shf.r.wrap.b32 	%r1355, %r1354, %r1353, 28;
	shf.r.wrap.b32 	%r1356, %r1353, %r1354, 28;
	mov.b64 	%rd2032, {%r1356, %r1355};
	shf.l.wrap.b32 	%r1357, %r1353, %r1354, 30;
	shf.l.wrap.b32 	%r1358, %r1354, %r1353, 30;
	mov.b64 	%rd2033, {%r1358, %r1357};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	shf.l.wrap.b32 	%r1359, %r1353, %r1354, 25;
	shf.l.wrap.b32 	%r1360, %r1354, %r1353, 25;
	mov.b64 	%rd2035, {%r1360, %r1359};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	and.b64  	%rd2037, %rd2005, %rd1968;
	or.b64  	%rd2038, %rd2005, %rd1968;
	and.b64  	%rd2039, %rd2038, %rd1931;
	or.b64  	%rd2040, %rd2039, %rd2037;
	add.s64 	%rd2041, %rd2040, %rd2036;
	add.s64 	%rd2042, %rd2041, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1361,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1362}, %rd1981;
	}
	shf.r.wrap.b32 	%r1363, %r1362, %r1361, 19;
	shf.r.wrap.b32 	%r1364, %r1361, %r1362, 19;
	mov.b64 	%rd2043, {%r1364, %r1363};
	shf.l.wrap.b32 	%r1365, %r1361, %r1362, 3;
	shf.l.wrap.b32 	%r1366, %r1362, %r1361, 3;
	mov.b64 	%rd2044, {%r1366, %r1365};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	shr.u64 	%rd2046, %rd1981, 6;
	xor.b64  	%rd2047, %rd2045, %rd2046;
	shf.r.wrap.b32 	%r1367, %r1024, %r1023, 1;
	shf.r.wrap.b32 	%r1368, %r1023, %r1024, 1;
	mov.b64 	%rd2048, {%r1368, %r1367};
	shf.r.wrap.b32 	%r1369, %r1024, %r1023, 8;
	shf.r.wrap.b32 	%r1370, %r1023, %r1024, 8;
	mov.b64 	%rd2049, {%r1370, %r1369};
	xor.b64  	%rd2050, %rd2048, %rd2049;
	shr.u64 	%rd2051, %rd1500, 7;
	xor.b64  	%rd2052, %rd2050, %rd2051;
	add.s64 	%rd2053, %rd2047, %rd1463;
	add.s64 	%rd2054, %rd2053, %rd1796;
	add.s64 	%rd2055, %rd2054, %rd2052;
	add.s64 	%rd2056, %rd2055, %rd1920;
	xor.b64  	%rd2057, %rd1994, %rd1957;
	and.b64  	%rd2058, %rd2031, %rd2057;
	xor.b64  	%rd2059, %rd2058, %rd1957;
	add.s64 	%rd2060, %rd2056, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1371,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1372}, %rd2031;
	}
	shf.r.wrap.b32 	%r1373, %r1372, %r1371, 14;
	shf.r.wrap.b32 	%r1374, %r1371, %r1372, 14;
	mov.b64 	%rd2061, {%r1374, %r1373};
	shf.r.wrap.b32 	%r1375, %r1372, %r1371, 18;
	shf.r.wrap.b32 	%r1376, %r1371, %r1372, 18;
	mov.b64 	%rd2062, {%r1376, %r1375};
	xor.b64  	%rd2063, %rd2061, %rd2062;
	shf.l.wrap.b32 	%r1377, %r1371, %r1372, 23;
	shf.l.wrap.b32 	%r1378, %r1372, %r1371, 23;
	mov.b64 	%rd2064, {%r1378, %r1377};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	add.s64 	%rd2066, %rd2060, %rd2065;
	add.s64 	%rd2067, %rd2066, 8399075790359081724;
	add.s64 	%rd2068, %rd2067, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1379,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1380}, %rd2042;
	}
	shf.r.wrap.b32 	%r1381, %r1380, %r1379, 28;
	shf.r.wrap.b32 	%r1382, %r1379, %r1380, 28;
	mov.b64 	%rd2069, {%r1382, %r1381};
	shf.l.wrap.b32 	%r1383, %r1379, %r1380, 30;
	shf.l.wrap.b32 	%r1384, %r1380, %r1379, 30;
	mov.b64 	%rd2070, {%r1384, %r1383};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	shf.l.wrap.b32 	%r1385, %r1379, %r1380, 25;
	shf.l.wrap.b32 	%r1386, %r1380, %r1379, 25;
	mov.b64 	%rd2072, {%r1386, %r1385};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	and.b64  	%rd2074, %rd2042, %rd2005;
	or.b64  	%rd2075, %rd2042, %rd2005;
	and.b64  	%rd2076, %rd2075, %rd1968;
	or.b64  	%rd2077, %rd2076, %rd2074;
	add.s64 	%rd2078, %rd2077, %rd2073;
	add.s64 	%rd2079, %rd2078, %rd2067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1387,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1388}, %rd2018;
	}
	shf.r.wrap.b32 	%r1389, %r1388, %r1387, 19;
	shf.r.wrap.b32 	%r1390, %r1387, %r1388, 19;
	mov.b64 	%rd2080, {%r1390, %r1389};
	shf.l.wrap.b32 	%r1391, %r1387, %r1388, 3;
	shf.l.wrap.b32 	%r1392, %r1388, %r1387, 3;
	mov.b64 	%rd2081, {%r1392, %r1391};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	shr.u64 	%rd2083, %rd2018, 6;
	xor.b64  	%rd2084, %rd2082, %rd2083;
	shf.r.wrap.b32 	%r1393, %r1050, %r1049, 1;
	shf.r.wrap.b32 	%r1394, %r1049, %r1050, 1;
	mov.b64 	%rd2085, {%r1394, %r1393};
	shf.r.wrap.b32 	%r1395, %r1050, %r1049, 8;
	shf.r.wrap.b32 	%r1396, %r1049, %r1050, 8;
	mov.b64 	%rd2086, {%r1396, %r1395};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	shr.u64 	%rd2088, %rd1537, 7;
	xor.b64  	%rd2089, %rd2087, %rd2088;
	add.s64 	%rd2090, %rd2084, %rd1500;
	add.s64 	%rd2091, %rd2090, %rd1833;
	add.s64 	%rd2092, %rd2091, %rd2089;
	add.s64 	%rd2093, %rd2092, %rd1957;
	xor.b64  	%rd2094, %rd2031, %rd1994;
	and.b64  	%rd2095, %rd2068, %rd2094;
	xor.b64  	%rd2096, %rd2095, %rd1994;
	add.s64 	%rd2097, %rd2093, %rd2096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd2068;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 14;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 14;
	mov.b64 	%rd2098, {%r1400, %r1399};
	shf.r.wrap.b32 	%r1401, %r1398, %r1397, 18;
	shf.r.wrap.b32 	%r1402, %r1397, %r1398, 18;
	mov.b64 	%rd2099, {%r1402, %r1401};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	shf.l.wrap.b32 	%r1403, %r1397, %r1398, 23;
	shf.l.wrap.b32 	%r1404, %r1398, %r1397, 23;
	mov.b64 	%rd2101, {%r1404, %r1403};
	xor.b64  	%rd2102, %rd2100, %rd2101;
	add.s64 	%rd2103, %rd2097, %rd2102;
	add.s64 	%rd2104, %rd2103, 8693463985226723168;
	add.s64 	%rd2105, %rd2104, %rd1968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2079;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 28;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 28;
	mov.b64 	%rd2106, {%r1408, %r1407};
	shf.l.wrap.b32 	%r1409, %r1405, %r1406, 30;
	shf.l.wrap.b32 	%r1410, %r1406, %r1405, 30;
	mov.b64 	%rd2107, {%r1410, %r1409};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	shf.l.wrap.b32 	%r1411, %r1405, %r1406, 25;
	shf.l.wrap.b32 	%r1412, %r1406, %r1405, 25;
	mov.b64 	%rd2109, {%r1412, %r1411};
	xor.b64  	%rd2110, %rd2108, %rd2109;
	and.b64  	%rd2111, %rd2079, %rd2042;
	or.b64  	%rd2112, %rd2079, %rd2042;
	and.b64  	%rd2113, %rd2112, %rd2005;
	or.b64  	%rd2114, %rd2113, %rd2111;
	add.s64 	%rd2115, %rd2114, %rd2110;
	add.s64 	%rd2116, %rd2115, %rd2104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd2055;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 19;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 19;
	mov.b64 	%rd2117, {%r1416, %r1415};
	shf.l.wrap.b32 	%r1417, %r1413, %r1414, 3;
	shf.l.wrap.b32 	%r1418, %r1414, %r1413, 3;
	mov.b64 	%rd2118, {%r1418, %r1417};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	shr.u64 	%rd2120, %rd2055, 6;
	xor.b64  	%rd2121, %rd2119, %rd2120;
	shf.r.wrap.b32 	%r1419, %r1076, %r1075, 1;
	shf.r.wrap.b32 	%r1420, %r1075, %r1076, 1;
	mov.b64 	%rd2122, {%r1420, %r1419};
	shf.r.wrap.b32 	%r1421, %r1076, %r1075, 8;
	shf.r.wrap.b32 	%r1422, %r1075, %r1076, 8;
	mov.b64 	%rd2123, {%r1422, %r1421};
	xor.b64  	%rd2124, %rd2122, %rd2123;
	shr.u64 	%rd2125, %rd1574, 7;
	xor.b64  	%rd2126, %rd2124, %rd2125;
	add.s64 	%rd2127, %rd2121, %rd1537;
	add.s64 	%rd2128, %rd2127, %rd1870;
	add.s64 	%rd2129, %rd2128, %rd2126;
	add.s64 	%rd2130, %rd2129, %rd1994;
	xor.b64  	%rd2131, %rd2068, %rd2031;
	and.b64  	%rd2132, %rd2105, %rd2131;
	xor.b64  	%rd2133, %rd2132, %rd2031;
	add.s64 	%rd2134, %rd2130, %rd2133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2105;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 14;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 14;
	mov.b64 	%rd2135, {%r1426, %r1425};
	shf.r.wrap.b32 	%r1427, %r1424, %r1423, 18;
	shf.r.wrap.b32 	%r1428, %r1423, %r1424, 18;
	mov.b64 	%rd2136, {%r1428, %r1427};
	xor.b64  	%rd2137, %rd2135, %rd2136;
	shf.l.wrap.b32 	%r1429, %r1423, %r1424, 23;
	shf.l.wrap.b32 	%r1430, %r1424, %r1423, 23;
	mov.b64 	%rd2138, {%r1430, %r1429};
	xor.b64  	%rd2139, %rd2137, %rd2138;
	add.s64 	%rd2140, %rd2134, %rd2139;
	add.s64 	%rd2141, %rd2140, -8878714635349349518;
	add.s64 	%rd2142, %rd2141, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1431,%dummy}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd2116;
	}
	shf.r.wrap.b32 	%r1433, %r1432, %r1431, 28;
	shf.r.wrap.b32 	%r1434, %r1431, %r1432, 28;
	mov.b64 	%rd2143, {%r1434, %r1433};
	shf.l.wrap.b32 	%r1435, %r1431, %r1432, 30;
	shf.l.wrap.b32 	%r1436, %r1432, %r1431, 30;
	mov.b64 	%rd2144, {%r1436, %r1435};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	shf.l.wrap.b32 	%r1437, %r1431, %r1432, 25;
	shf.l.wrap.b32 	%r1438, %r1432, %r1431, 25;
	mov.b64 	%rd2146, {%r1438, %r1437};
	xor.b64  	%rd2147, %rd2145, %rd2146;
	and.b64  	%rd2148, %rd2116, %rd2079;
	or.b64  	%rd2149, %rd2116, %rd2079;
	and.b64  	%rd2150, %rd2149, %rd2042;
	or.b64  	%rd2151, %rd2150, %rd2148;
	add.s64 	%rd2152, %rd2151, %rd2147;
	add.s64 	%rd2153, %rd2152, %rd2141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1439,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd2092;
	}
	shf.r.wrap.b32 	%r1441, %r1440, %r1439, 19;
	shf.r.wrap.b32 	%r1442, %r1439, %r1440, 19;
	mov.b64 	%rd2154, {%r1442, %r1441};
	shf.l.wrap.b32 	%r1443, %r1439, %r1440, 3;
	shf.l.wrap.b32 	%r1444, %r1440, %r1439, 3;
	mov.b64 	%rd2155, {%r1444, %r1443};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	shr.u64 	%rd2157, %rd2092, 6;
	xor.b64  	%rd2158, %rd2156, %rd2157;
	shf.r.wrap.b32 	%r1445, %r1102, %r1101, 1;
	shf.r.wrap.b32 	%r1446, %r1101, %r1102, 1;
	mov.b64 	%rd2159, {%r1446, %r1445};
	shf.r.wrap.b32 	%r1447, %r1102, %r1101, 8;
	shf.r.wrap.b32 	%r1448, %r1101, %r1102, 8;
	mov.b64 	%rd2160, {%r1448, %r1447};
	xor.b64  	%rd2161, %rd2159, %rd2160;
	shr.u64 	%rd2162, %rd1611, 7;
	xor.b64  	%rd2163, %rd2161, %rd2162;
	add.s64 	%rd2164, %rd2158, %rd1574;
	add.s64 	%rd2165, %rd2164, %rd1907;
	add.s64 	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd2166, %rd2031;
	xor.b64  	%rd2168, %rd2105, %rd2068;
	and.b64  	%rd2169, %rd2142, %rd2168;
	xor.b64  	%rd2170, %rd2169, %rd2068;
	add.s64 	%rd2171, %rd2167, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1449,%dummy}, %rd2142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1450}, %rd2142;
	}
	shf.r.wrap.b32 	%r1451, %r1450, %r1449, 14;
	shf.r.wrap.b32 	%r1452, %r1449, %r1450, 14;
	mov.b64 	%rd2172, {%r1452, %r1451};
	shf.r.wrap.b32 	%r1453, %r1450, %r1449, 18;
	shf.r.wrap.b32 	%r1454, %r1449, %r1450, 18;
	mov.b64 	%rd2173, {%r1454, %r1453};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	shf.l.wrap.b32 	%r1455, %r1449, %r1450, 23;
	shf.l.wrap.b32 	%r1456, %r1450, %r1449, 23;
	mov.b64 	%rd2175, {%r1456, %r1455};
	xor.b64  	%rd2176, %rd2174, %rd2175;
	add.s64 	%rd2177, %rd2171, %rd2176;
	add.s64 	%rd2178, %rd2177, -8302665154208450068;
	add.s64 	%rd2179, %rd2178, %rd2042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1457,%dummy}, %rd2153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1458}, %rd2153;
	}
	shf.r.wrap.b32 	%r1459, %r1458, %r1457, 28;
	shf.r.wrap.b32 	%r1460, %r1457, %r1458, 28;
	mov.b64 	%rd2180, {%r1460, %r1459};
	shf.l.wrap.b32 	%r1461, %r1457, %r1458, 30;
	shf.l.wrap.b32 	%r1462, %r1458, %r1457, 30;
	mov.b64 	%rd2181, {%r1462, %r1461};
	xor.b64  	%rd2182, %rd2180, %rd2181;
	shf.l.wrap.b32 	%r1463, %r1457, %r1458, 25;
	shf.l.wrap.b32 	%r1464, %r1458, %r1457, 25;
	mov.b64 	%rd2183, {%r1464, %r1463};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	and.b64  	%rd2185, %rd2153, %rd2116;
	or.b64  	%rd2186, %rd2153, %rd2116;
	and.b64  	%rd2187, %rd2186, %rd2079;
	or.b64  	%rd2188, %rd2187, %rd2185;
	add.s64 	%rd2189, %rd2188, %rd2184;
	add.s64 	%rd2190, %rd2189, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1466}, %rd2129;
	}
	shf.r.wrap.b32 	%r1467, %r1466, %r1465, 19;
	shf.r.wrap.b32 	%r1468, %r1465, %r1466, 19;
	mov.b64 	%rd2191, {%r1468, %r1467};
	shf.l.wrap.b32 	%r1469, %r1465, %r1466, 3;
	shf.l.wrap.b32 	%r1470, %r1466, %r1465, 3;
	mov.b64 	%rd2192, {%r1470, %r1469};
	xor.b64  	%rd2193, %rd2191, %rd2192;
	shr.u64 	%rd2194, %rd2129, 6;
	xor.b64  	%rd2195, %rd2193, %rd2194;
	shf.r.wrap.b32 	%r1471, %r1128, %r1127, 1;
	shf.r.wrap.b32 	%r1472, %r1127, %r1128, 1;
	mov.b64 	%rd2196, {%r1472, %r1471};
	shf.r.wrap.b32 	%r1473, %r1128, %r1127, 8;
	shf.r.wrap.b32 	%r1474, %r1127, %r1128, 8;
	mov.b64 	%rd2197, {%r1474, %r1473};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	shr.u64 	%rd2199, %rd1648, 7;
	xor.b64  	%rd2200, %rd2198, %rd2199;
	add.s64 	%rd2201, %rd2195, %rd1611;
	add.s64 	%rd2202, %rd2201, %rd1944;
	add.s64 	%rd2203, %rd2202, %rd2200;
	add.s64 	%rd2204, %rd2203, %rd2068;
	xor.b64  	%rd2205, %rd2142, %rd2105;
	and.b64  	%rd2206, %rd2179, %rd2205;
	xor.b64  	%rd2207, %rd2206, %rd2105;
	add.s64 	%rd2208, %rd2204, %rd2207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1475,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1476}, %rd2179;
	}
	shf.r.wrap.b32 	%r1477, %r1476, %r1475, 14;
	shf.r.wrap.b32 	%r1478, %r1475, %r1476, 14;
	mov.b64 	%rd2209, {%r1478, %r1477};
	shf.r.wrap.b32 	%r1479, %r1476, %r1475, 18;
	shf.r.wrap.b32 	%r1480, %r1475, %r1476, 18;
	mov.b64 	%rd2210, {%r1480, %r1479};
	xor.b64  	%rd2211, %rd2209, %rd2210;
	shf.l.wrap.b32 	%r1481, %r1475, %r1476, 23;
	shf.l.wrap.b32 	%r1482, %r1476, %r1475, 23;
	mov.b64 	%rd2212, {%r1482, %r1481};
	xor.b64  	%rd2213, %rd2211, %rd2212;
	add.s64 	%rd2214, %rd2208, %rd2213;
	add.s64 	%rd2215, %rd2214, -8016688836872298968;
	add.s64 	%rd2216, %rd2215, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd2190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1484}, %rd2190;
	}
	shf.r.wrap.b32 	%r1485, %r1484, %r1483, 28;
	shf.r.wrap.b32 	%r1486, %r1483, %r1484, 28;
	mov.b64 	%rd2217, {%r1486, %r1485};
	shf.l.wrap.b32 	%r1487, %r1483, %r1484, 30;
	shf.l.wrap.b32 	%r1488, %r1484, %r1483, 30;
	mov.b64 	%rd2218, {%r1488, %r1487};
	xor.b64  	%rd2219, %rd2217, %rd2218;
	shf.l.wrap.b32 	%r1489, %r1483, %r1484, 25;
	shf.l.wrap.b32 	%r1490, %r1484, %r1483, 25;
	mov.b64 	%rd2220, {%r1490, %r1489};
	xor.b64  	%rd2221, %rd2219, %rd2220;
	and.b64  	%rd2222, %rd2190, %rd2153;
	or.b64  	%rd2223, %rd2190, %rd2153;
	and.b64  	%rd2224, %rd2223, %rd2116;
	or.b64  	%rd2225, %rd2224, %rd2222;
	add.s64 	%rd2226, %rd2225, %rd2221;
	add.s64 	%rd2227, %rd2226, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1491,%dummy}, %rd2166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1492}, %rd2166;
	}
	shf.r.wrap.b32 	%r1493, %r1492, %r1491, 19;
	shf.r.wrap.b32 	%r1494, %r1491, %r1492, 19;
	mov.b64 	%rd2228, {%r1494, %r1493};
	shf.l.wrap.b32 	%r1495, %r1491, %r1492, 3;
	shf.l.wrap.b32 	%r1496, %r1492, %r1491, 3;
	mov.b64 	%rd2229, {%r1496, %r1495};
	xor.b64  	%rd2230, %rd2228, %rd2229;
	shr.u64 	%rd2231, %rd2166, 6;
	xor.b64  	%rd2232, %rd2230, %rd2231;
	shf.r.wrap.b32 	%r1497, %r1154, %r1153, 1;
	shf.r.wrap.b32 	%r1498, %r1153, %r1154, 1;
	mov.b64 	%rd2233, {%r1498, %r1497};
	shf.r.wrap.b32 	%r1499, %r1154, %r1153, 8;
	shf.r.wrap.b32 	%r1500, %r1153, %r1154, 8;
	mov.b64 	%rd2234, {%r1500, %r1499};
	xor.b64  	%rd2235, %rd2233, %rd2234;
	shr.u64 	%rd2236, %rd1685, 7;
	xor.b64  	%rd2237, %rd2235, %rd2236;
	add.s64 	%rd2238, %rd2232, %rd1648;
	add.s64 	%rd2239, %rd2238, %rd1981;
	add.s64 	%rd2240, %rd2239, %rd2237;
	add.s64 	%rd2241, %rd2240, %rd2105;
	xor.b64  	%rd2242, %rd2179, %rd2142;
	and.b64  	%rd2243, %rd2216, %rd2242;
	xor.b64  	%rd2244, %rd2243, %rd2142;
	add.s64 	%rd2245, %rd2241, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd2216;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 14;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 14;
	mov.b64 	%rd2246, {%r1504, %r1503};
	shf.r.wrap.b32 	%r1505, %r1502, %r1501, 18;
	shf.r.wrap.b32 	%r1506, %r1501, %r1502, 18;
	mov.b64 	%rd2247, {%r1506, %r1505};
	xor.b64  	%rd2248, %rd2246, %rd2247;
	shf.l.wrap.b32 	%r1507, %r1501, %r1502, 23;
	shf.l.wrap.b32 	%r1508, %r1502, %r1501, 23;
	mov.b64 	%rd2249, {%r1508, %r1507};
	xor.b64  	%rd2250, %rd2248, %rd2249;
	add.s64 	%rd2251, %rd2245, %rd2250;
	add.s64 	%rd2252, %rd2251, -6606660893046293015;
	add.s64 	%rd2253, %rd2252, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1509,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1510}, %rd2227;
	}
	shf.r.wrap.b32 	%r1511, %r1510, %r1509, 28;
	shf.r.wrap.b32 	%r1512, %r1509, %r1510, 28;
	mov.b64 	%rd2254, {%r1512, %r1511};
	shf.l.wrap.b32 	%r1513, %r1509, %r1510, 30;
	shf.l.wrap.b32 	%r1514, %r1510, %r1509, 30;
	mov.b64 	%rd2255, {%r1514, %r1513};
	xor.b64  	%rd2256, %rd2254, %rd2255;
	shf.l.wrap.b32 	%r1515, %r1509, %r1510, 25;
	shf.l.wrap.b32 	%r1516, %r1510, %r1509, 25;
	mov.b64 	%rd2257, {%r1516, %r1515};
	xor.b64  	%rd2258, %rd2256, %rd2257;
	and.b64  	%rd2259, %rd2227, %rd2190;
	or.b64  	%rd2260, %rd2227, %rd2190;
	and.b64  	%rd2261, %rd2260, %rd2153;
	or.b64  	%rd2262, %rd2261, %rd2259;
	add.s64 	%rd2263, %rd2262, %rd2258;
	add.s64 	%rd2264, %rd2263, %rd2252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1518}, %rd2203;
	}
	shf.r.wrap.b32 	%r1519, %r1518, %r1517, 19;
	shf.r.wrap.b32 	%r1520, %r1517, %r1518, 19;
	mov.b64 	%rd2265, {%r1520, %r1519};
	shf.l.wrap.b32 	%r1521, %r1517, %r1518, 3;
	shf.l.wrap.b32 	%r1522, %r1518, %r1517, 3;
	mov.b64 	%rd2266, {%r1522, %r1521};
	xor.b64  	%rd2267, %rd2265, %rd2266;
	shr.u64 	%rd2268, %rd2203, 6;
	xor.b64  	%rd2269, %rd2267, %rd2268;
	shf.r.wrap.b32 	%r1523, %r1180, %r1179, 1;
	shf.r.wrap.b32 	%r1524, %r1179, %r1180, 1;
	mov.b64 	%rd2270, {%r1524, %r1523};
	shf.r.wrap.b32 	%r1525, %r1180, %r1179, 8;
	shf.r.wrap.b32 	%r1526, %r1179, %r1180, 8;
	mov.b64 	%rd2271, {%r1526, %r1525};
	xor.b64  	%rd2272, %rd2270, %rd2271;
	shr.u64 	%rd2273, %rd1722, 7;
	xor.b64  	%rd2274, %rd2272, %rd2273;
	add.s64 	%rd2275, %rd2269, %rd1685;
	add.s64 	%rd2276, %rd2275, %rd2018;
	add.s64 	%rd2277, %rd2276, %rd2274;
	add.s64 	%rd2278, %rd2277, %rd2142;
	xor.b64  	%rd2279, %rd2216, %rd2179;
	and.b64  	%rd2280, %rd2253, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2179;
	add.s64 	%rd2282, %rd2278, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1527,%dummy}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1528}, %rd2253;
	}
	shf.r.wrap.b32 	%r1529, %r1528, %r1527, 14;
	shf.r.wrap.b32 	%r1530, %r1527, %r1528, 14;
	mov.b64 	%rd2283, {%r1530, %r1529};
	shf.r.wrap.b32 	%r1531, %r1528, %r1527, 18;
	shf.r.wrap.b32 	%r1532, %r1527, %r1528, 18;
	mov.b64 	%rd2284, {%r1532, %r1531};
	xor.b64  	%rd2285, %rd2283, %rd2284;
	shf.l.wrap.b32 	%r1533, %r1527, %r1528, 23;
	shf.l.wrap.b32 	%r1534, %r1528, %r1527, 23;
	mov.b64 	%rd2286, {%r1534, %r1533};
	xor.b64  	%rd2287, %rd2285, %rd2286;
	add.s64 	%rd2288, %rd2282, %rd2287;
	add.s64 	%rd2289, %rd2288, -4685533653050689259;
	add.s64 	%rd2290, %rd2289, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1535,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1536}, %rd2264;
	}
	shf.r.wrap.b32 	%r1537, %r1536, %r1535, 28;
	shf.r.wrap.b32 	%r1538, %r1535, %r1536, 28;
	mov.b64 	%rd2291, {%r1538, %r1537};
	shf.l.wrap.b32 	%r1539, %r1535, %r1536, 30;
	shf.l.wrap.b32 	%r1540, %r1536, %r1535, 30;
	mov.b64 	%rd2292, {%r1540, %r1539};
	xor.b64  	%rd2293, %rd2291, %rd2292;
	shf.l.wrap.b32 	%r1541, %r1535, %r1536, 25;
	shf.l.wrap.b32 	%r1542, %r1536, %r1535, 25;
	mov.b64 	%rd2294, {%r1542, %r1541};
	xor.b64  	%rd2295, %rd2293, %rd2294;
	and.b64  	%rd2296, %rd2264, %rd2227;
	or.b64  	%rd2297, %rd2264, %rd2227;
	and.b64  	%rd2298, %rd2297, %rd2190;
	or.b64  	%rd2299, %rd2298, %rd2296;
	add.s64 	%rd2300, %rd2299, %rd2295;
	add.s64 	%rd2301, %rd2300, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1543,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1544}, %rd2240;
	}
	shf.r.wrap.b32 	%r1545, %r1544, %r1543, 19;
	shf.r.wrap.b32 	%r1546, %r1543, %r1544, 19;
	mov.b64 	%rd2302, {%r1546, %r1545};
	shf.l.wrap.b32 	%r1547, %r1543, %r1544, 3;
	shf.l.wrap.b32 	%r1548, %r1544, %r1543, 3;
	mov.b64 	%rd2303, {%r1548, %r1547};
	xor.b64  	%rd2304, %rd2302, %rd2303;
	shr.u64 	%rd2305, %rd2240, 6;
	xor.b64  	%rd2306, %rd2304, %rd2305;
	shf.r.wrap.b32 	%r1549, %r1206, %r1205, 1;
	shf.r.wrap.b32 	%r1550, %r1205, %r1206, 1;
	mov.b64 	%rd2307, {%r1550, %r1549};
	shf.r.wrap.b32 	%r1551, %r1206, %r1205, 8;
	shf.r.wrap.b32 	%r1552, %r1205, %r1206, 8;
	mov.b64 	%rd2308, {%r1552, %r1551};
	xor.b64  	%rd2309, %rd2307, %rd2308;
	shr.u64 	%rd2310, %rd1759, 7;
	xor.b64  	%rd2311, %rd2309, %rd2310;
	add.s64 	%rd2312, %rd2306, %rd1722;
	add.s64 	%rd2313, %rd2312, %rd2055;
	add.s64 	%rd2314, %rd2313, %rd2311;
	add.s64 	%rd2315, %rd2314, %rd2179;
	xor.b64  	%rd2316, %rd2253, %rd2216;
	and.b64  	%rd2317, %rd2290, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2216;
	add.s64 	%rd2319, %rd2315, %rd2318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1553,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1554}, %rd2290;
	}
	shf.r.wrap.b32 	%r1555, %r1554, %r1553, 14;
	shf.r.wrap.b32 	%r1556, %r1553, %r1554, 14;
	mov.b64 	%rd2320, {%r1556, %r1555};
	shf.r.wrap.b32 	%r1557, %r1554, %r1553, 18;
	shf.r.wrap.b32 	%r1558, %r1553, %r1554, 18;
	mov.b64 	%rd2321, {%r1558, %r1557};
	xor.b64  	%rd2322, %rd2320, %rd2321;
	shf.l.wrap.b32 	%r1559, %r1553, %r1554, 23;
	shf.l.wrap.b32 	%r1560, %r1554, %r1553, 23;
	mov.b64 	%rd2323, {%r1560, %r1559};
	xor.b64  	%rd2324, %rd2322, %rd2323;
	add.s64 	%rd2325, %rd2319, %rd2324;
	add.s64 	%rd2326, %rd2325, -4147400797238176981;
	add.s64 	%rd2327, %rd2326, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1561,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd2301;
	}
	shf.r.wrap.b32 	%r1563, %r1562, %r1561, 28;
	shf.r.wrap.b32 	%r1564, %r1561, %r1562, 28;
	mov.b64 	%rd2328, {%r1564, %r1563};
	shf.l.wrap.b32 	%r1565, %r1561, %r1562, 30;
	shf.l.wrap.b32 	%r1566, %r1562, %r1561, 30;
	mov.b64 	%rd2329, {%r1566, %r1565};
	xor.b64  	%rd2330, %rd2328, %rd2329;
	shf.l.wrap.b32 	%r1567, %r1561, %r1562, 25;
	shf.l.wrap.b32 	%r1568, %r1562, %r1561, 25;
	mov.b64 	%rd2331, {%r1568, %r1567};
	xor.b64  	%rd2332, %rd2330, %rd2331;
	and.b64  	%rd2333, %rd2301, %rd2264;
	or.b64  	%rd2334, %rd2301, %rd2264;
	and.b64  	%rd2335, %rd2334, %rd2227;
	or.b64  	%rd2336, %rd2335, %rd2333;
	add.s64 	%rd2337, %rd2336, %rd2332;
	add.s64 	%rd2338, %rd2337, %rd2326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd2277;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 19;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 19;
	mov.b64 	%rd2339, {%r1572, %r1571};
	shf.l.wrap.b32 	%r1573, %r1569, %r1570, 3;
	shf.l.wrap.b32 	%r1574, %r1570, %r1569, 3;
	mov.b64 	%rd2340, {%r1574, %r1573};
	xor.b64  	%rd2341, %rd2339, %rd2340;
	shr.u64 	%rd2342, %rd2277, 6;
	xor.b64  	%rd2343, %rd2341, %rd2342;
	shf.r.wrap.b32 	%r1575, %r1232, %r1231, 1;
	shf.r.wrap.b32 	%r1576, %r1231, %r1232, 1;
	mov.b64 	%rd2344, {%r1576, %r1575};
	shf.r.wrap.b32 	%r1577, %r1232, %r1231, 8;
	shf.r.wrap.b32 	%r1578, %r1231, %r1232, 8;
	mov.b64 	%rd2345, {%r1578, %r1577};
	xor.b64  	%rd2346, %rd2344, %rd2345;
	shr.u64 	%rd2347, %rd1796, 7;
	xor.b64  	%rd2348, %rd2346, %rd2347;
	add.s64 	%rd2349, %rd2343, %rd1759;
	add.s64 	%rd2350, %rd2349, %rd2092;
	add.s64 	%rd2351, %rd2350, %rd2348;
	add.s64 	%rd2352, %rd2351, %rd2216;
	xor.b64  	%rd2353, %rd2290, %rd2253;
	and.b64  	%rd2354, %rd2327, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd2253;
	add.s64 	%rd2356, %rd2352, %rd2355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1579,%dummy}, %rd2327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd2327;
	}
	shf.r.wrap.b32 	%r1581, %r1580, %r1579, 14;
	shf.r.wrap.b32 	%r1582, %r1579, %r1580, 14;
	mov.b64 	%rd2357, {%r1582, %r1581};
	shf.r.wrap.b32 	%r1583, %r1580, %r1579, 18;
	shf.r.wrap.b32 	%r1584, %r1579, %r1580, 18;
	mov.b64 	%rd2358, {%r1584, %r1583};
	xor.b64  	%rd2359, %rd2357, %rd2358;
	shf.l.wrap.b32 	%r1585, %r1579, %r1580, 23;
	shf.l.wrap.b32 	%r1586, %r1580, %r1579, 23;
	mov.b64 	%rd2360, {%r1586, %r1585};
	xor.b64  	%rd2361, %rd2359, %rd2360;
	add.s64 	%rd2362, %rd2356, %rd2361;
	add.s64 	%rd2363, %rd2362, -3880063495543823972;
	add.s64 	%rd2364, %rd2363, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1587,%dummy}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1588}, %rd2338;
	}
	shf.r.wrap.b32 	%r1589, %r1588, %r1587, 28;
	shf.r.wrap.b32 	%r1590, %r1587, %r1588, 28;
	mov.b64 	%rd2365, {%r1590, %r1589};
	shf.l.wrap.b32 	%r1591, %r1587, %r1588, 30;
	shf.l.wrap.b32 	%r1592, %r1588, %r1587, 30;
	mov.b64 	%rd2366, {%r1592, %r1591};
	xor.b64  	%rd2367, %rd2365, %rd2366;
	shf.l.wrap.b32 	%r1593, %r1587, %r1588, 25;
	shf.l.wrap.b32 	%r1594, %r1588, %r1587, 25;
	mov.b64 	%rd2368, {%r1594, %r1593};
	xor.b64  	%rd2369, %rd2367, %rd2368;
	and.b64  	%rd2370, %rd2338, %rd2301;
	or.b64  	%rd2371, %rd2338, %rd2301;
	and.b64  	%rd2372, %rd2371, %rd2264;
	or.b64  	%rd2373, %rd2372, %rd2370;
	add.s64 	%rd2374, %rd2373, %rd2369;
	add.s64 	%rd2375, %rd2374, %rd2363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1595,%dummy}, %rd2314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd2314;
	}
	shf.r.wrap.b32 	%r1597, %r1596, %r1595, 19;
	shf.r.wrap.b32 	%r1598, %r1595, %r1596, 19;
	mov.b64 	%rd2376, {%r1598, %r1597};
	shf.l.wrap.b32 	%r1599, %r1595, %r1596, 3;
	shf.l.wrap.b32 	%r1600, %r1596, %r1595, 3;
	mov.b64 	%rd2377, {%r1600, %r1599};
	xor.b64  	%rd2378, %rd2376, %rd2377;
	shr.u64 	%rd2379, %rd2314, 6;
	xor.b64  	%rd2380, %rd2378, %rd2379;
	shf.r.wrap.b32 	%r1601, %r1258, %r1257, 1;
	shf.r.wrap.b32 	%r1602, %r1257, %r1258, 1;
	mov.b64 	%rd2381, {%r1602, %r1601};
	shf.r.wrap.b32 	%r1603, %r1258, %r1257, 8;
	shf.r.wrap.b32 	%r1604, %r1257, %r1258, 8;
	mov.b64 	%rd2382, {%r1604, %r1603};
	xor.b64  	%rd2383, %rd2381, %rd2382;
	shr.u64 	%rd2384, %rd1833, 7;
	xor.b64  	%rd2385, %rd2383, %rd2384;
	add.s64 	%rd2386, %rd2380, %rd1796;
	add.s64 	%rd2387, %rd2386, %rd2129;
	add.s64 	%rd2388, %rd2387, %rd2385;
	add.s64 	%rd2389, %rd2388, %rd2253;
	xor.b64  	%rd2390, %rd2327, %rd2290;
	and.b64  	%rd2391, %rd2364, %rd2390;
	xor.b64  	%rd2392, %rd2391, %rd2290;
	add.s64 	%rd2393, %rd2389, %rd2392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd2364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd2364;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 14;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 14;
	mov.b64 	%rd2394, {%r1608, %r1607};
	shf.r.wrap.b32 	%r1609, %r1606, %r1605, 18;
	shf.r.wrap.b32 	%r1610, %r1605, %r1606, 18;
	mov.b64 	%rd2395, {%r1610, %r1609};
	xor.b64  	%rd2396, %rd2394, %rd2395;
	shf.l.wrap.b32 	%r1611, %r1605, %r1606, 23;
	shf.l.wrap.b32 	%r1612, %r1606, %r1605, 23;
	mov.b64 	%rd2397, {%r1612, %r1611};
	xor.b64  	%rd2398, %rd2396, %rd2397;
	add.s64 	%rd2399, %rd2393, %rd2398;
	add.s64 	%rd2400, %rd2399, -3348786107499101689;
	add.s64 	%rd2401, %rd2400, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1613,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1614}, %rd2375;
	}
	shf.r.wrap.b32 	%r1615, %r1614, %r1613, 28;
	shf.r.wrap.b32 	%r1616, %r1613, %r1614, 28;
	mov.b64 	%rd2402, {%r1616, %r1615};
	shf.l.wrap.b32 	%r1617, %r1613, %r1614, 30;
	shf.l.wrap.b32 	%r1618, %r1614, %r1613, 30;
	mov.b64 	%rd2403, {%r1618, %r1617};
	xor.b64  	%rd2404, %rd2402, %rd2403;
	shf.l.wrap.b32 	%r1619, %r1613, %r1614, 25;
	shf.l.wrap.b32 	%r1620, %r1614, %r1613, 25;
	mov.b64 	%rd2405, {%r1620, %r1619};
	xor.b64  	%rd2406, %rd2404, %rd2405;
	and.b64  	%rd2407, %rd2375, %rd2338;
	or.b64  	%rd2408, %rd2375, %rd2338;
	and.b64  	%rd2409, %rd2408, %rd2301;
	or.b64  	%rd2410, %rd2409, %rd2407;
	add.s64 	%rd2411, %rd2410, %rd2406;
	add.s64 	%rd2412, %rd2411, %rd2400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd2351;
	}
	shf.r.wrap.b32 	%r1623, %r1622, %r1621, 19;
	shf.r.wrap.b32 	%r1624, %r1621, %r1622, 19;
	mov.b64 	%rd2413, {%r1624, %r1623};
	shf.l.wrap.b32 	%r1625, %r1621, %r1622, 3;
	shf.l.wrap.b32 	%r1626, %r1622, %r1621, 3;
	mov.b64 	%rd2414, {%r1626, %r1625};
	xor.b64  	%rd2415, %rd2413, %rd2414;
	shr.u64 	%rd2416, %rd2351, 6;
	xor.b64  	%rd2417, %rd2415, %rd2416;
	shf.r.wrap.b32 	%r1627, %r1284, %r1283, 1;
	shf.r.wrap.b32 	%r1628, %r1283, %r1284, 1;
	mov.b64 	%rd2418, {%r1628, %r1627};
	shf.r.wrap.b32 	%r1629, %r1284, %r1283, 8;
	shf.r.wrap.b32 	%r1630, %r1283, %r1284, 8;
	mov.b64 	%rd2419, {%r1630, %r1629};
	xor.b64  	%rd2420, %rd2418, %rd2419;
	shr.u64 	%rd2421, %rd1870, 7;
	xor.b64  	%rd2422, %rd2420, %rd2421;
	add.s64 	%rd2423, %rd2417, %rd1833;
	add.s64 	%rd2424, %rd2423, %rd2166;
	add.s64 	%rd2425, %rd2424, %rd2422;
	add.s64 	%rd2426, %rd2425, %rd2290;
	xor.b64  	%rd2427, %rd2364, %rd2327;
	and.b64  	%rd2428, %rd2401, %rd2427;
	xor.b64  	%rd2429, %rd2428, %rd2327;
	add.s64 	%rd2430, %rd2426, %rd2429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd2401;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 14;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 14;
	mov.b64 	%rd2431, {%r1634, %r1633};
	shf.r.wrap.b32 	%r1635, %r1632, %r1631, 18;
	shf.r.wrap.b32 	%r1636, %r1631, %r1632, 18;
	mov.b64 	%rd2432, {%r1636, %r1635};
	xor.b64  	%rd2433, %rd2431, %rd2432;
	shf.l.wrap.b32 	%r1637, %r1631, %r1632, 23;
	shf.l.wrap.b32 	%r1638, %r1632, %r1631, 23;
	mov.b64 	%rd2434, {%r1638, %r1637};
	xor.b64  	%rd2435, %rd2433, %rd2434;
	add.s64 	%rd2436, %rd2430, %rd2435;
	add.s64 	%rd2437, %rd2436, -1523767162380948706;
	add.s64 	%rd2438, %rd2437, %rd2301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd2412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd2412;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 28;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 28;
	mov.b64 	%rd2439, {%r1642, %r1641};
	shf.l.wrap.b32 	%r1643, %r1639, %r1640, 30;
	shf.l.wrap.b32 	%r1644, %r1640, %r1639, 30;
	mov.b64 	%rd2440, {%r1644, %r1643};
	xor.b64  	%rd2441, %rd2439, %rd2440;
	shf.l.wrap.b32 	%r1645, %r1639, %r1640, 25;
	shf.l.wrap.b32 	%r1646, %r1640, %r1639, 25;
	mov.b64 	%rd2442, {%r1646, %r1645};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	and.b64  	%rd2444, %rd2412, %rd2375;
	or.b64  	%rd2445, %rd2412, %rd2375;
	and.b64  	%rd2446, %rd2445, %rd2338;
	or.b64  	%rd2447, %rd2446, %rd2444;
	add.s64 	%rd2448, %rd2447, %rd2443;
	add.s64 	%rd2449, %rd2448, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd2388;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 19;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 19;
	mov.b64 	%rd2450, {%r1650, %r1649};
	shf.l.wrap.b32 	%r1651, %r1647, %r1648, 3;
	shf.l.wrap.b32 	%r1652, %r1648, %r1647, 3;
	mov.b64 	%rd2451, {%r1652, %r1651};
	xor.b64  	%rd2452, %rd2450, %rd2451;
	shr.u64 	%rd2453, %rd2388, 6;
	xor.b64  	%rd2454, %rd2452, %rd2453;
	shf.r.wrap.b32 	%r1653, %r1310, %r1309, 1;
	shf.r.wrap.b32 	%r1654, %r1309, %r1310, 1;
	mov.b64 	%rd2455, {%r1654, %r1653};
	shf.r.wrap.b32 	%r1655, %r1310, %r1309, 8;
	shf.r.wrap.b32 	%r1656, %r1309, %r1310, 8;
	mov.b64 	%rd2456, {%r1656, %r1655};
	xor.b64  	%rd2457, %rd2455, %rd2456;
	shr.u64 	%rd2458, %rd1907, 7;
	xor.b64  	%rd2459, %rd2457, %rd2458;
	add.s64 	%rd2460, %rd2454, %rd1870;
	add.s64 	%rd2461, %rd2460, %rd2203;
	add.s64 	%rd2462, %rd2461, %rd2459;
	add.s64 	%rd2463, %rd2462, %rd2327;
	xor.b64  	%rd2464, %rd2401, %rd2364;
	and.b64  	%rd2465, %rd2438, %rd2464;
	xor.b64  	%rd2466, %rd2465, %rd2364;
	add.s64 	%rd2467, %rd2463, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1657,%dummy}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1658}, %rd2438;
	}
	shf.r.wrap.b32 	%r1659, %r1658, %r1657, 14;
	shf.r.wrap.b32 	%r1660, %r1657, %r1658, 14;
	mov.b64 	%rd2468, {%r1660, %r1659};
	shf.r.wrap.b32 	%r1661, %r1658, %r1657, 18;
	shf.r.wrap.b32 	%r1662, %r1657, %r1658, 18;
	mov.b64 	%rd2469, {%r1662, %r1661};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	shf.l.wrap.b32 	%r1663, %r1657, %r1658, 23;
	shf.l.wrap.b32 	%r1664, %r1658, %r1657, 23;
	mov.b64 	%rd2471, {%r1664, %r1663};
	xor.b64  	%rd2472, %rd2470, %rd2471;
	add.s64 	%rd2473, %rd2467, %rd2472;
	add.s64 	%rd2474, %rd2473, -757361751448694408;
	add.s64 	%rd2475, %rd2474, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd2449;
	}
	shf.r.wrap.b32 	%r1667, %r1666, %r1665, 28;
	shf.r.wrap.b32 	%r1668, %r1665, %r1666, 28;
	mov.b64 	%rd2476, {%r1668, %r1667};
	shf.l.wrap.b32 	%r1669, %r1665, %r1666, 30;
	shf.l.wrap.b32 	%r1670, %r1666, %r1665, 30;
	mov.b64 	%rd2477, {%r1670, %r1669};
	xor.b64  	%rd2478, %rd2476, %rd2477;
	shf.l.wrap.b32 	%r1671, %r1665, %r1666, 25;
	shf.l.wrap.b32 	%r1672, %r1666, %r1665, 25;
	mov.b64 	%rd2479, {%r1672, %r1671};
	xor.b64  	%rd2480, %rd2478, %rd2479;
	and.b64  	%rd2481, %rd2449, %rd2412;
	or.b64  	%rd2482, %rd2449, %rd2412;
	and.b64  	%rd2483, %rd2482, %rd2375;
	or.b64  	%rd2484, %rd2483, %rd2481;
	add.s64 	%rd2485, %rd2484, %rd2480;
	add.s64 	%rd2486, %rd2485, %rd2474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1673,%dummy}, %rd2425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1674}, %rd2425;
	}
	shf.r.wrap.b32 	%r1675, %r1674, %r1673, 19;
	shf.r.wrap.b32 	%r1676, %r1673, %r1674, 19;
	mov.b64 	%rd2487, {%r1676, %r1675};
	shf.l.wrap.b32 	%r1677, %r1673, %r1674, 3;
	shf.l.wrap.b32 	%r1678, %r1674, %r1673, 3;
	mov.b64 	%rd2488, {%r1678, %r1677};
	xor.b64  	%rd2489, %rd2487, %rd2488;
	shr.u64 	%rd2490, %rd2425, 6;
	xor.b64  	%rd2491, %rd2489, %rd2490;
	shf.r.wrap.b32 	%r1679, %r1336, %r1335, 1;
	shf.r.wrap.b32 	%r1680, %r1335, %r1336, 1;
	mov.b64 	%rd2492, {%r1680, %r1679};
	shf.r.wrap.b32 	%r1681, %r1336, %r1335, 8;
	shf.r.wrap.b32 	%r1682, %r1335, %r1336, 8;
	mov.b64 	%rd2493, {%r1682, %r1681};
	xor.b64  	%rd2494, %rd2492, %rd2493;
	shr.u64 	%rd2495, %rd1944, 7;
	xor.b64  	%rd2496, %rd2494, %rd2495;
	add.s64 	%rd2497, %rd2491, %rd1907;
	add.s64 	%rd2498, %rd2497, %rd2240;
	add.s64 	%rd2499, %rd2498, %rd2496;
	add.s64 	%rd2500, %rd2499, %rd2364;
	xor.b64  	%rd2501, %rd2438, %rd2401;
	and.b64  	%rd2502, %rd2475, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2401;
	add.s64 	%rd2504, %rd2500, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1683,%dummy}, %rd2475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1684}, %rd2475;
	}
	shf.r.wrap.b32 	%r1685, %r1684, %r1683, 14;
	shf.r.wrap.b32 	%r1686, %r1683, %r1684, 14;
	mov.b64 	%rd2505, {%r1686, %r1685};
	shf.r.wrap.b32 	%r1687, %r1684, %r1683, 18;
	shf.r.wrap.b32 	%r1688, %r1683, %r1684, 18;
	mov.b64 	%rd2506, {%r1688, %r1687};
	xor.b64  	%rd2507, %rd2505, %rd2506;
	shf.l.wrap.b32 	%r1689, %r1683, %r1684, 23;
	shf.l.wrap.b32 	%r1690, %r1684, %r1683, 23;
	mov.b64 	%rd2508, {%r1690, %r1689};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	add.s64 	%rd2510, %rd2504, %rd2509;
	add.s64 	%rd2511, %rd2510, 500013540394364858;
	add.s64 	%rd2512, %rd2511, %rd2375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1691,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1692}, %rd2486;
	}
	shf.r.wrap.b32 	%r1693, %r1692, %r1691, 28;
	shf.r.wrap.b32 	%r1694, %r1691, %r1692, 28;
	mov.b64 	%rd2513, {%r1694, %r1693};
	shf.l.wrap.b32 	%r1695, %r1691, %r1692, 30;
	shf.l.wrap.b32 	%r1696, %r1692, %r1691, 30;
	mov.b64 	%rd2514, {%r1696, %r1695};
	xor.b64  	%rd2515, %rd2513, %rd2514;
	shf.l.wrap.b32 	%r1697, %r1691, %r1692, 25;
	shf.l.wrap.b32 	%r1698, %r1692, %r1691, 25;
	mov.b64 	%rd2516, {%r1698, %r1697};
	xor.b64  	%rd2517, %rd2515, %rd2516;
	and.b64  	%rd2518, %rd2486, %rd2449;
	or.b64  	%rd2519, %rd2486, %rd2449;
	and.b64  	%rd2520, %rd2519, %rd2412;
	or.b64  	%rd2521, %rd2520, %rd2518;
	add.s64 	%rd2522, %rd2521, %rd2517;
	add.s64 	%rd2523, %rd2522, %rd2511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1699,%dummy}, %rd2462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1700}, %rd2462;
	}
	shf.r.wrap.b32 	%r1701, %r1700, %r1699, 19;
	shf.r.wrap.b32 	%r1702, %r1699, %r1700, 19;
	mov.b64 	%rd2524, {%r1702, %r1701};
	shf.l.wrap.b32 	%r1703, %r1699, %r1700, 3;
	shf.l.wrap.b32 	%r1704, %r1700, %r1699, 3;
	mov.b64 	%rd2525, {%r1704, %r1703};
	xor.b64  	%rd2526, %rd2524, %rd2525;
	shr.u64 	%rd2527, %rd2462, 6;
	xor.b64  	%rd2528, %rd2526, %rd2527;
	shf.r.wrap.b32 	%r1705, %r1362, %r1361, 1;
	shf.r.wrap.b32 	%r1706, %r1361, %r1362, 1;
	mov.b64 	%rd2529, {%r1706, %r1705};
	shf.r.wrap.b32 	%r1707, %r1362, %r1361, 8;
	shf.r.wrap.b32 	%r1708, %r1361, %r1362, 8;
	mov.b64 	%rd2530, {%r1708, %r1707};
	xor.b64  	%rd2531, %rd2529, %rd2530;
	shr.u64 	%rd2532, %rd1981, 7;
	xor.b64  	%rd2533, %rd2531, %rd2532;
	add.s64 	%rd2534, %rd2528, %rd1944;
	add.s64 	%rd2535, %rd2534, %rd2277;
	add.s64 	%rd2536, %rd2535, %rd2533;
	add.s64 	%rd2537, %rd2536, %rd2401;
	xor.b64  	%rd2538, %rd2475, %rd2438;
	and.b64  	%rd2539, %rd2512, %rd2538;
	xor.b64  	%rd2540, %rd2539, %rd2438;
	add.s64 	%rd2541, %rd2537, %rd2540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1709,%dummy}, %rd2512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1710}, %rd2512;
	}
	shf.r.wrap.b32 	%r1711, %r1710, %r1709, 14;
	shf.r.wrap.b32 	%r1712, %r1709, %r1710, 14;
	mov.b64 	%rd2542, {%r1712, %r1711};
	shf.r.wrap.b32 	%r1713, %r1710, %r1709, 18;
	shf.r.wrap.b32 	%r1714, %r1709, %r1710, 18;
	mov.b64 	%rd2543, {%r1714, %r1713};
	xor.b64  	%rd2544, %rd2542, %rd2543;
	shf.l.wrap.b32 	%r1715, %r1709, %r1710, 23;
	shf.l.wrap.b32 	%r1716, %r1710, %r1709, 23;
	mov.b64 	%rd2545, {%r1716, %r1715};
	xor.b64  	%rd2546, %rd2544, %rd2545;
	add.s64 	%rd2547, %rd2541, %rd2546;
	add.s64 	%rd2548, %rd2547, 748580250866718886;
	add.s64 	%rd2549, %rd2548, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1717,%dummy}, %rd2523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1718}, %rd2523;
	}
	shf.r.wrap.b32 	%r1719, %r1718, %r1717, 28;
	shf.r.wrap.b32 	%r1720, %r1717, %r1718, 28;
	mov.b64 	%rd2550, {%r1720, %r1719};
	shf.l.wrap.b32 	%r1721, %r1717, %r1718, 30;
	shf.l.wrap.b32 	%r1722, %r1718, %r1717, 30;
	mov.b64 	%rd2551, {%r1722, %r1721};
	xor.b64  	%rd2552, %rd2550, %rd2551;
	shf.l.wrap.b32 	%r1723, %r1717, %r1718, 25;
	shf.l.wrap.b32 	%r1724, %r1718, %r1717, 25;
	mov.b64 	%rd2553, {%r1724, %r1723};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	and.b64  	%rd2555, %rd2523, %rd2486;
	or.b64  	%rd2556, %rd2523, %rd2486;
	and.b64  	%rd2557, %rd2556, %rd2449;
	or.b64  	%rd2558, %rd2557, %rd2555;
	add.s64 	%rd2559, %rd2558, %rd2554;
	add.s64 	%rd2560, %rd2559, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd2499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd2499;
	}
	shf.r.wrap.b32 	%r1727, %r1726, %r1725, 19;
	shf.r.wrap.b32 	%r1728, %r1725, %r1726, 19;
	mov.b64 	%rd2561, {%r1728, %r1727};
	shf.l.wrap.b32 	%r1729, %r1725, %r1726, 3;
	shf.l.wrap.b32 	%r1730, %r1726, %r1725, 3;
	mov.b64 	%rd2562, {%r1730, %r1729};
	xor.b64  	%rd2563, %rd2561, %rd2562;
	shr.u64 	%rd2564, %rd2499, 6;
	xor.b64  	%rd2565, %rd2563, %rd2564;
	shf.r.wrap.b32 	%r1731, %r1388, %r1387, 1;
	shf.r.wrap.b32 	%r1732, %r1387, %r1388, 1;
	mov.b64 	%rd2566, {%r1732, %r1731};
	shf.r.wrap.b32 	%r1733, %r1388, %r1387, 8;
	shf.r.wrap.b32 	%r1734, %r1387, %r1388, 8;
	mov.b64 	%rd2567, {%r1734, %r1733};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	shr.u64 	%rd2569, %rd2018, 7;
	xor.b64  	%rd2570, %rd2568, %rd2569;
	add.s64 	%rd2571, %rd2565, %rd1981;
	add.s64 	%rd2572, %rd2571, %rd2314;
	add.s64 	%rd2573, %rd2572, %rd2570;
	add.s64 	%rd2574, %rd2573, %rd2438;
	xor.b64  	%rd2575, %rd2512, %rd2475;
	and.b64  	%rd2576, %rd2549, %rd2575;
	xor.b64  	%rd2577, %rd2576, %rd2475;
	add.s64 	%rd2578, %rd2574, %rd2577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2549;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 14;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 14;
	mov.b64 	%rd2579, {%r1738, %r1737};
	shf.r.wrap.b32 	%r1739, %r1736, %r1735, 18;
	shf.r.wrap.b32 	%r1740, %r1735, %r1736, 18;
	mov.b64 	%rd2580, {%r1740, %r1739};
	xor.b64  	%rd2581, %rd2579, %rd2580;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 23;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 23;
	mov.b64 	%rd2582, {%r1742, %r1741};
	xor.b64  	%rd2583, %rd2581, %rd2582;
	add.s64 	%rd2584, %rd2578, %rd2583;
	add.s64 	%rd2585, %rd2584, 1242879168328830382;
	add.s64 	%rd2586, %rd2585, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2560;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 28;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 28;
	mov.b64 	%rd2587, {%r1746, %r1745};
	shf.l.wrap.b32 	%r1747, %r1743, %r1744, 30;
	shf.l.wrap.b32 	%r1748, %r1744, %r1743, 30;
	mov.b64 	%rd2588, {%r1748, %r1747};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 25;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 25;
	mov.b64 	%rd2590, {%r1750, %r1749};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	and.b64  	%rd2592, %rd2560, %rd2523;
	or.b64  	%rd2593, %rd2560, %rd2523;
	and.b64  	%rd2594, %rd2593, %rd2486;
	or.b64  	%rd2595, %rd2594, %rd2592;
	add.s64 	%rd2596, %rd2595, %rd2591;
	add.s64 	%rd2597, %rd2596, %rd2585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2536;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 19;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 19;
	mov.b64 	%rd2598, {%r1754, %r1753};
	shf.l.wrap.b32 	%r1755, %r1751, %r1752, 3;
	shf.l.wrap.b32 	%r1756, %r1752, %r1751, 3;
	mov.b64 	%rd2599, {%r1756, %r1755};
	xor.b64  	%rd2600, %rd2598, %rd2599;
	shr.u64 	%rd2601, %rd2536, 6;
	xor.b64  	%rd2602, %rd2600, %rd2601;
	shf.r.wrap.b32 	%r1757, %r1414, %r1413, 1;
	shf.r.wrap.b32 	%r1758, %r1413, %r1414, 1;
	mov.b64 	%rd2603, {%r1758, %r1757};
	shf.r.wrap.b32 	%r1759, %r1414, %r1413, 8;
	shf.r.wrap.b32 	%r1760, %r1413, %r1414, 8;
	mov.b64 	%rd2604, {%r1760, %r1759};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	shr.u64 	%rd2606, %rd2055, 7;
	xor.b64  	%rd2607, %rd2605, %rd2606;
	add.s64 	%rd2608, %rd2602, %rd2018;
	add.s64 	%rd2609, %rd2608, %rd2351;
	add.s64 	%rd2610, %rd2609, %rd2607;
	add.s64 	%rd2611, %rd2610, %rd2475;
	xor.b64  	%rd2612, %rd2549, %rd2512;
	and.b64  	%rd2613, %rd2586, %rd2612;
	xor.b64  	%rd2614, %rd2613, %rd2512;
	add.s64 	%rd2615, %rd2611, %rd2614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1761,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1762}, %rd2586;
	}
	shf.r.wrap.b32 	%r1763, %r1762, %r1761, 14;
	shf.r.wrap.b32 	%r1764, %r1761, %r1762, 14;
	mov.b64 	%rd2616, {%r1764, %r1763};
	shf.r.wrap.b32 	%r1765, %r1762, %r1761, 18;
	shf.r.wrap.b32 	%r1766, %r1761, %r1762, 18;
	mov.b64 	%rd2617, {%r1766, %r1765};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	shf.l.wrap.b32 	%r1767, %r1761, %r1762, 23;
	shf.l.wrap.b32 	%r1768, %r1762, %r1761, 23;
	mov.b64 	%rd2619, {%r1768, %r1767};
	xor.b64  	%rd2620, %rd2618, %rd2619;
	add.s64 	%rd2621, %rd2615, %rd2620;
	add.s64 	%rd2622, %rd2621, 1977374033974150939;
	add.s64 	%rd2623, %rd2622, %rd2486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1769,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1770}, %rd2597;
	}
	shf.r.wrap.b32 	%r1771, %r1770, %r1769, 28;
	shf.r.wrap.b32 	%r1772, %r1769, %r1770, 28;
	mov.b64 	%rd2624, {%r1772, %r1771};
	shf.l.wrap.b32 	%r1773, %r1769, %r1770, 30;
	shf.l.wrap.b32 	%r1774, %r1770, %r1769, 30;
	mov.b64 	%rd2625, {%r1774, %r1773};
	xor.b64  	%rd2626, %rd2624, %rd2625;
	shf.l.wrap.b32 	%r1775, %r1769, %r1770, 25;
	shf.l.wrap.b32 	%r1776, %r1770, %r1769, 25;
	mov.b64 	%rd2627, {%r1776, %r1775};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	and.b64  	%rd2629, %rd2597, %rd2560;
	or.b64  	%rd2630, %rd2597, %rd2560;
	and.b64  	%rd2631, %rd2630, %rd2523;
	or.b64  	%rd2632, %rd2631, %rd2629;
	add.s64 	%rd2633, %rd2632, %rd2628;
	add.s64 	%rd2634, %rd2633, %rd2622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1777,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1778}, %rd2573;
	}
	shf.r.wrap.b32 	%r1779, %r1778, %r1777, 19;
	shf.r.wrap.b32 	%r1780, %r1777, %r1778, 19;
	mov.b64 	%rd2635, {%r1780, %r1779};
	shf.l.wrap.b32 	%r1781, %r1777, %r1778, 3;
	shf.l.wrap.b32 	%r1782, %r1778, %r1777, 3;
	mov.b64 	%rd2636, {%r1782, %r1781};
	xor.b64  	%rd2637, %rd2635, %rd2636;
	shr.u64 	%rd2638, %rd2573, 6;
	xor.b64  	%rd2639, %rd2637, %rd2638;
	shf.r.wrap.b32 	%r1783, %r1440, %r1439, 1;
	shf.r.wrap.b32 	%r1784, %r1439, %r1440, 1;
	mov.b64 	%rd2640, {%r1784, %r1783};
	shf.r.wrap.b32 	%r1785, %r1440, %r1439, 8;
	shf.r.wrap.b32 	%r1786, %r1439, %r1440, 8;
	mov.b64 	%rd2641, {%r1786, %r1785};
	xor.b64  	%rd2642, %rd2640, %rd2641;
	shr.u64 	%rd2643, %rd2092, 7;
	xor.b64  	%rd2644, %rd2642, %rd2643;
	add.s64 	%rd2645, %rd2639, %rd2055;
	add.s64 	%rd2646, %rd2645, %rd2388;
	add.s64 	%rd2647, %rd2646, %rd2644;
	add.s64 	%rd2648, %rd2647, %rd2512;
	xor.b64  	%rd2649, %rd2586, %rd2549;
	and.b64  	%rd2650, %rd2623, %rd2649;
	xor.b64  	%rd2651, %rd2650, %rd2549;
	add.s64 	%rd2652, %rd2648, %rd2651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1787,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1788}, %rd2623;
	}
	shf.r.wrap.b32 	%r1789, %r1788, %r1787, 14;
	shf.r.wrap.b32 	%r1790, %r1787, %r1788, 14;
	mov.b64 	%rd2653, {%r1790, %r1789};
	shf.r.wrap.b32 	%r1791, %r1788, %r1787, 18;
	shf.r.wrap.b32 	%r1792, %r1787, %r1788, 18;
	mov.b64 	%rd2654, {%r1792, %r1791};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	shf.l.wrap.b32 	%r1793, %r1787, %r1788, 23;
	shf.l.wrap.b32 	%r1794, %r1788, %r1787, 23;
	mov.b64 	%rd2656, {%r1794, %r1793};
	xor.b64  	%rd2657, %rd2655, %rd2656;
	add.s64 	%rd2658, %rd2652, %rd2657;
	add.s64 	%rd2659, %rd2658, 2944078676154940804;
	add.s64 	%rd2660, %rd2659, %rd2523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1795,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1796}, %rd2634;
	}
	shf.r.wrap.b32 	%r1797, %r1796, %r1795, 28;
	shf.r.wrap.b32 	%r1798, %r1795, %r1796, 28;
	mov.b64 	%rd2661, {%r1798, %r1797};
	shf.l.wrap.b32 	%r1799, %r1795, %r1796, 30;
	shf.l.wrap.b32 	%r1800, %r1796, %r1795, 30;
	mov.b64 	%rd2662, {%r1800, %r1799};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	shf.l.wrap.b32 	%r1801, %r1795, %r1796, 25;
	shf.l.wrap.b32 	%r1802, %r1796, %r1795, 25;
	mov.b64 	%rd2664, {%r1802, %r1801};
	xor.b64  	%rd2665, %rd2663, %rd2664;
	and.b64  	%rd2666, %rd2634, %rd2597;
	or.b64  	%rd2667, %rd2634, %rd2597;
	and.b64  	%rd2668, %rd2667, %rd2560;
	or.b64  	%rd2669, %rd2668, %rd2666;
	add.s64 	%rd2670, %rd2669, %rd2665;
	add.s64 	%rd2671, %rd2670, %rd2659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1803,%dummy}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1804}, %rd2610;
	}
	shf.r.wrap.b32 	%r1805, %r1804, %r1803, 19;
	shf.r.wrap.b32 	%r1806, %r1803, %r1804, 19;
	mov.b64 	%rd2672, {%r1806, %r1805};
	shf.l.wrap.b32 	%r1807, %r1803, %r1804, 3;
	shf.l.wrap.b32 	%r1808, %r1804, %r1803, 3;
	mov.b64 	%rd2673, {%r1808, %r1807};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	shr.u64 	%rd2675, %rd2610, 6;
	xor.b64  	%rd2676, %rd2674, %rd2675;
	shf.r.wrap.b32 	%r1809, %r1466, %r1465, 1;
	shf.r.wrap.b32 	%r1810, %r1465, %r1466, 1;
	mov.b64 	%rd2677, {%r1810, %r1809};
	shf.r.wrap.b32 	%r1811, %r1466, %r1465, 8;
	shf.r.wrap.b32 	%r1812, %r1465, %r1466, 8;
	mov.b64 	%rd2678, {%r1812, %r1811};
	xor.b64  	%rd2679, %rd2677, %rd2678;
	shr.u64 	%rd2680, %rd2129, 7;
	xor.b64  	%rd2681, %rd2679, %rd2680;
	add.s64 	%rd2682, %rd2676, %rd2092;
	add.s64 	%rd2683, %rd2682, %rd2425;
	add.s64 	%rd2684, %rd2683, %rd2681;
	add.s64 	%rd2685, %rd2684, %rd2549;
	xor.b64  	%rd2686, %rd2623, %rd2586;
	and.b64  	%rd2687, %rd2660, %rd2686;
	xor.b64  	%rd2688, %rd2687, %rd2586;
	add.s64 	%rd2689, %rd2685, %rd2688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1813,%dummy}, %rd2660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1814}, %rd2660;
	}
	shf.r.wrap.b32 	%r1815, %r1814, %r1813, 14;
	shf.r.wrap.b32 	%r1816, %r1813, %r1814, 14;
	mov.b64 	%rd2690, {%r1816, %r1815};
	shf.r.wrap.b32 	%r1817, %r1814, %r1813, 18;
	shf.r.wrap.b32 	%r1818, %r1813, %r1814, 18;
	mov.b64 	%rd2691, {%r1818, %r1817};
	xor.b64  	%rd2692, %rd2690, %rd2691;
	shf.l.wrap.b32 	%r1819, %r1813, %r1814, 23;
	shf.l.wrap.b32 	%r1820, %r1814, %r1813, 23;
	mov.b64 	%rd2693, {%r1820, %r1819};
	xor.b64  	%rd2694, %rd2692, %rd2693;
	add.s64 	%rd2695, %rd2689, %rd2694;
	add.s64 	%rd2696, %rd2695, 3659926193048069267;
	add.s64 	%rd2697, %rd2696, %rd2560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1821,%dummy}, %rd2671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1822}, %rd2671;
	}
	shf.r.wrap.b32 	%r1823, %r1822, %r1821, 28;
	shf.r.wrap.b32 	%r1824, %r1821, %r1822, 28;
	mov.b64 	%rd2698, {%r1824, %r1823};
	shf.l.wrap.b32 	%r1825, %r1821, %r1822, 30;
	shf.l.wrap.b32 	%r1826, %r1822, %r1821, 30;
	mov.b64 	%rd2699, {%r1826, %r1825};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	shf.l.wrap.b32 	%r1827, %r1821, %r1822, 25;
	shf.l.wrap.b32 	%r1828, %r1822, %r1821, 25;
	mov.b64 	%rd2701, {%r1828, %r1827};
	xor.b64  	%rd2702, %rd2700, %rd2701;
	and.b64  	%rd2703, %rd2671, %rd2634;
	or.b64  	%rd2704, %rd2671, %rd2634;
	and.b64  	%rd2705, %rd2704, %rd2597;
	or.b64  	%rd2706, %rd2705, %rd2703;
	add.s64 	%rd2707, %rd2706, %rd2702;
	add.s64 	%rd2708, %rd2707, %rd2696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1830}, %rd2647;
	}
	shf.r.wrap.b32 	%r1831, %r1830, %r1829, 19;
	shf.r.wrap.b32 	%r1832, %r1829, %r1830, 19;
	mov.b64 	%rd2709, {%r1832, %r1831};
	shf.l.wrap.b32 	%r1833, %r1829, %r1830, 3;
	shf.l.wrap.b32 	%r1834, %r1830, %r1829, 3;
	mov.b64 	%rd2710, {%r1834, %r1833};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	shr.u64 	%rd2712, %rd2647, 6;
	xor.b64  	%rd2713, %rd2711, %rd2712;
	shf.r.wrap.b32 	%r1835, %r1492, %r1491, 1;
	shf.r.wrap.b32 	%r1836, %r1491, %r1492, 1;
	mov.b64 	%rd2714, {%r1836, %r1835};
	shf.r.wrap.b32 	%r1837, %r1492, %r1491, 8;
	shf.r.wrap.b32 	%r1838, %r1491, %r1492, 8;
	mov.b64 	%rd2715, {%r1838, %r1837};
	xor.b64  	%rd2716, %rd2714, %rd2715;
	shr.u64 	%rd2717, %rd2166, 7;
	xor.b64  	%rd2718, %rd2716, %rd2717;
	add.s64 	%rd2719, %rd2713, %rd2129;
	add.s64 	%rd2720, %rd2719, %rd2462;
	add.s64 	%rd2721, %rd2720, %rd2718;
	add.s64 	%rd2722, %rd2721, %rd2586;
	xor.b64  	%rd2723, %rd2660, %rd2623;
	and.b64  	%rd2724, %rd2697, %rd2723;
	xor.b64  	%rd2725, %rd2724, %rd2623;
	add.s64 	%rd2726, %rd2722, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2697;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 14;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 14;
	mov.b64 	%rd2727, {%r1842, %r1841};
	shf.r.wrap.b32 	%r1843, %r1840, %r1839, 18;
	shf.r.wrap.b32 	%r1844, %r1839, %r1840, 18;
	mov.b64 	%rd2728, {%r1844, %r1843};
	xor.b64  	%rd2729, %rd2727, %rd2728;
	shf.l.wrap.b32 	%r1845, %r1839, %r1840, 23;
	shf.l.wrap.b32 	%r1846, %r1840, %r1839, 23;
	mov.b64 	%rd2730, {%r1846, %r1845};
	xor.b64  	%rd2731, %rd2729, %rd2730;
	add.s64 	%rd2732, %rd2726, %rd2731;
	add.s64 	%rd2733, %rd2732, 4368137639120453308;
	add.s64 	%rd2734, %rd2733, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd2708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd2708;
	}
	shf.r.wrap.b32 	%r1849, %r1848, %r1847, 28;
	shf.r.wrap.b32 	%r1850, %r1847, %r1848, 28;
	mov.b64 	%rd2735, {%r1850, %r1849};
	shf.l.wrap.b32 	%r1851, %r1847, %r1848, 30;
	shf.l.wrap.b32 	%r1852, %r1848, %r1847, 30;
	mov.b64 	%rd2736, {%r1852, %r1851};
	xor.b64  	%rd2737, %rd2735, %rd2736;
	shf.l.wrap.b32 	%r1853, %r1847, %r1848, 25;
	shf.l.wrap.b32 	%r1854, %r1848, %r1847, 25;
	mov.b64 	%rd2738, {%r1854, %r1853};
	xor.b64  	%rd2739, %rd2737, %rd2738;
	and.b64  	%rd2740, %rd2708, %rd2671;
	or.b64  	%rd2741, %rd2708, %rd2671;
	and.b64  	%rd2742, %rd2741, %rd2634;
	or.b64  	%rd2743, %rd2742, %rd2740;
	add.s64 	%rd2744, %rd2743, %rd2739;
	add.s64 	%rd2745, %rd2744, %rd2733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd2684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd2684;
	}
	shf.r.wrap.b32 	%r1857, %r1856, %r1855, 19;
	shf.r.wrap.b32 	%r1858, %r1855, %r1856, 19;
	mov.b64 	%rd2746, {%r1858, %r1857};
	shf.l.wrap.b32 	%r1859, %r1855, %r1856, 3;
	shf.l.wrap.b32 	%r1860, %r1856, %r1855, 3;
	mov.b64 	%rd2747, {%r1860, %r1859};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	shr.u64 	%rd2749, %rd2684, 6;
	xor.b64  	%rd2750, %rd2748, %rd2749;
	shf.r.wrap.b32 	%r1861, %r1518, %r1517, 1;
	shf.r.wrap.b32 	%r1862, %r1517, %r1518, 1;
	mov.b64 	%rd2751, {%r1862, %r1861};
	shf.r.wrap.b32 	%r1863, %r1518, %r1517, 8;
	shf.r.wrap.b32 	%r1864, %r1517, %r1518, 8;
	mov.b64 	%rd2752, {%r1864, %r1863};
	xor.b64  	%rd2753, %rd2751, %rd2752;
	shr.u64 	%rd2754, %rd2203, 7;
	xor.b64  	%rd2755, %rd2753, %rd2754;
	add.s64 	%rd2756, %rd2750, %rd2166;
	add.s64 	%rd2757, %rd2756, %rd2499;
	add.s64 	%rd2758, %rd2757, %rd2755;
	add.s64 	%rd2759, %rd2758, %rd2623;
	xor.b64  	%rd2760, %rd2697, %rd2660;
	and.b64  	%rd2761, %rd2734, %rd2760;
	xor.b64  	%rd2762, %rd2761, %rd2660;
	add.s64 	%rd2763, %rd2759, %rd2762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1865,%dummy}, %rd2734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1866}, %rd2734;
	}
	shf.r.wrap.b32 	%r1867, %r1866, %r1865, 14;
	shf.r.wrap.b32 	%r1868, %r1865, %r1866, 14;
	mov.b64 	%rd2764, {%r1868, %r1867};
	shf.r.wrap.b32 	%r1869, %r1866, %r1865, 18;
	shf.r.wrap.b32 	%r1870, %r1865, %r1866, 18;
	mov.b64 	%rd2765, {%r1870, %r1869};
	xor.b64  	%rd2766, %rd2764, %rd2765;
	shf.l.wrap.b32 	%r1871, %r1865, %r1866, 23;
	shf.l.wrap.b32 	%r1872, %r1866, %r1865, 23;
	mov.b64 	%rd2767, {%r1872, %r1871};
	xor.b64  	%rd2768, %rd2766, %rd2767;
	add.s64 	%rd2769, %rd2763, %rd2768;
	add.s64 	%rd2770, %rd2769, 4836135668995329356;
	add.s64 	%rd2771, %rd2770, %rd2634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1873,%dummy}, %rd2745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1874}, %rd2745;
	}
	shf.r.wrap.b32 	%r1875, %r1874, %r1873, 28;
	shf.r.wrap.b32 	%r1876, %r1873, %r1874, 28;
	mov.b64 	%rd2772, {%r1876, %r1875};
	shf.l.wrap.b32 	%r1877, %r1873, %r1874, 30;
	shf.l.wrap.b32 	%r1878, %r1874, %r1873, 30;
	mov.b64 	%rd2773, {%r1878, %r1877};
	xor.b64  	%rd2774, %rd2772, %rd2773;
	shf.l.wrap.b32 	%r1879, %r1873, %r1874, 25;
	shf.l.wrap.b32 	%r1880, %r1874, %r1873, 25;
	mov.b64 	%rd2775, {%r1880, %r1879};
	xor.b64  	%rd2776, %rd2774, %rd2775;
	and.b64  	%rd2777, %rd2745, %rd2708;
	or.b64  	%rd2778, %rd2745, %rd2708;
	and.b64  	%rd2779, %rd2778, %rd2671;
	or.b64  	%rd2780, %rd2779, %rd2777;
	add.s64 	%rd2781, %rd2780, %rd2776;
	add.s64 	%rd2782, %rd2781, %rd2770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1881,%dummy}, %rd2721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1882}, %rd2721;
	}
	shf.r.wrap.b32 	%r1883, %r1882, %r1881, 19;
	shf.r.wrap.b32 	%r1884, %r1881, %r1882, 19;
	mov.b64 	%rd2783, {%r1884, %r1883};
	shf.l.wrap.b32 	%r1885, %r1881, %r1882, 3;
	shf.l.wrap.b32 	%r1886, %r1882, %r1881, 3;
	mov.b64 	%rd2784, {%r1886, %r1885};
	xor.b64  	%rd2785, %rd2783, %rd2784;
	shr.u64 	%rd2786, %rd2721, 6;
	xor.b64  	%rd2787, %rd2785, %rd2786;
	shf.r.wrap.b32 	%r1887, %r1544, %r1543, 1;
	shf.r.wrap.b32 	%r1888, %r1543, %r1544, 1;
	mov.b64 	%rd2788, {%r1888, %r1887};
	shf.r.wrap.b32 	%r1889, %r1544, %r1543, 8;
	shf.r.wrap.b32 	%r1890, %r1543, %r1544, 8;
	mov.b64 	%rd2789, {%r1890, %r1889};
	xor.b64  	%rd2790, %rd2788, %rd2789;
	shr.u64 	%rd2791, %rd2240, 7;
	xor.b64  	%rd2792, %rd2790, %rd2791;
	add.s64 	%rd2793, %rd2787, %rd2203;
	add.s64 	%rd2794, %rd2793, %rd2536;
	add.s64 	%rd2795, %rd2794, %rd2792;
	add.s64 	%rd2796, %rd2795, %rd2660;
	xor.b64  	%rd2797, %rd2734, %rd2697;
	and.b64  	%rd2798, %rd2771, %rd2797;
	xor.b64  	%rd2799, %rd2798, %rd2697;
	add.s64 	%rd2800, %rd2796, %rd2799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1891,%dummy}, %rd2771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1892}, %rd2771;
	}
	shf.r.wrap.b32 	%r1893, %r1892, %r1891, 14;
	shf.r.wrap.b32 	%r1894, %r1891, %r1892, 14;
	mov.b64 	%rd2801, {%r1894, %r1893};
	shf.r.wrap.b32 	%r1895, %r1892, %r1891, 18;
	shf.r.wrap.b32 	%r1896, %r1891, %r1892, 18;
	mov.b64 	%rd2802, {%r1896, %r1895};
	xor.b64  	%rd2803, %rd2801, %rd2802;
	shf.l.wrap.b32 	%r1897, %r1891, %r1892, 23;
	shf.l.wrap.b32 	%r1898, %r1892, %r1891, 23;
	mov.b64 	%rd2804, {%r1898, %r1897};
	xor.b64  	%rd2805, %rd2803, %rd2804;
	add.s64 	%rd2806, %rd2800, %rd2805;
	add.s64 	%rd2807, %rd2806, 5532061633213252278;
	add.s64 	%rd14, %rd2807, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1899,%dummy}, %rd2782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1900}, %rd2782;
	}
	shf.r.wrap.b32 	%r1901, %r1900, %r1899, 28;
	shf.r.wrap.b32 	%r1902, %r1899, %r1900, 28;
	mov.b64 	%rd2808, {%r1902, %r1901};
	shf.l.wrap.b32 	%r1903, %r1899, %r1900, 30;
	shf.l.wrap.b32 	%r1904, %r1900, %r1899, 30;
	mov.b64 	%rd2809, {%r1904, %r1903};
	xor.b64  	%rd2810, %rd2808, %rd2809;
	shf.l.wrap.b32 	%r1905, %r1899, %r1900, 25;
	shf.l.wrap.b32 	%r1906, %r1900, %r1899, 25;
	mov.b64 	%rd2811, {%r1906, %r1905};
	xor.b64  	%rd2812, %rd2810, %rd2811;
	and.b64  	%rd2813, %rd2782, %rd2745;
	or.b64  	%rd2814, %rd2782, %rd2745;
	and.b64  	%rd2815, %rd2814, %rd2708;
	or.b64  	%rd2816, %rd2815, %rd2813;
	add.s64 	%rd2817, %rd2816, %rd2812;
	add.s64 	%rd2818, %rd2817, %rd2807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1907,%dummy}, %rd2758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1908}, %rd2758;
	}
	shf.r.wrap.b32 	%r1909, %r1908, %r1907, 19;
	shf.r.wrap.b32 	%r1910, %r1907, %r1908, 19;
	mov.b64 	%rd2819, {%r1910, %r1909};
	shf.l.wrap.b32 	%r1911, %r1907, %r1908, 3;
	shf.l.wrap.b32 	%r1912, %r1908, %r1907, 3;
	mov.b64 	%rd2820, {%r1912, %r1911};
	xor.b64  	%rd2821, %rd2819, %rd2820;
	shr.u64 	%rd2822, %rd2758, 6;
	xor.b64  	%rd2823, %rd2821, %rd2822;
	shf.r.wrap.b32 	%r1913, %r1570, %r1569, 1;
	shf.r.wrap.b32 	%r1914, %r1569, %r1570, 1;
	mov.b64 	%rd2824, {%r1914, %r1913};
	shf.r.wrap.b32 	%r1915, %r1570, %r1569, 8;
	shf.r.wrap.b32 	%r1916, %r1569, %r1570, 8;
	mov.b64 	%rd2825, {%r1916, %r1915};
	xor.b64  	%rd2826, %rd2824, %rd2825;
	shr.u64 	%rd2827, %rd2277, 7;
	xor.b64  	%rd2828, %rd2826, %rd2827;
	add.s64 	%rd2829, %rd2823, %rd2240;
	add.s64 	%rd2830, %rd2829, %rd2573;
	add.s64 	%rd2831, %rd2830, %rd2828;
	add.s64 	%rd2832, %rd2831, %rd2697;
	xor.b64  	%rd2833, %rd2771, %rd2734;
	and.b64  	%rd2834, %rd14, %rd2833;
	xor.b64  	%rd2835, %rd2834, %rd2734;
	add.s64 	%rd2836, %rd2832, %rd2835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd14;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd14;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 14;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 14;
	mov.b64 	%rd2837, {%r1920, %r1919};
	shf.r.wrap.b32 	%r1921, %r1918, %r1917, 18;
	shf.r.wrap.b32 	%r1922, %r1917, %r1918, 18;
	mov.b64 	%rd2838, {%r1922, %r1921};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	shf.l.wrap.b32 	%r1923, %r1917, %r1918, 23;
	shf.l.wrap.b32 	%r1924, %r1918, %r1917, 23;
	mov.b64 	%rd2840, {%r1924, %r1923};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	add.s64 	%rd2842, %rd2836, %rd2841;
	add.s64 	%rd2843, %rd2842, 6448918945643986474;
	add.s64 	%rd15, %rd2843, %rd2708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd2818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd2818;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 28;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 28;
	mov.b64 	%rd2844, {%r1928, %r1927};
	shf.l.wrap.b32 	%r1929, %r1925, %r1926, 30;
	shf.l.wrap.b32 	%r1930, %r1926, %r1925, 30;
	mov.b64 	%rd2845, {%r1930, %r1929};
	xor.b64  	%rd2846, %rd2844, %rd2845;
	shf.l.wrap.b32 	%r1931, %r1925, %r1926, 25;
	shf.l.wrap.b32 	%r1932, %r1926, %r1925, 25;
	mov.b64 	%rd2847, {%r1932, %r1931};
	xor.b64  	%rd2848, %rd2846, %rd2847;
	and.b64  	%rd2849, %rd2818, %rd2782;
	or.b64  	%rd2850, %rd2818, %rd2782;
	and.b64  	%rd2851, %rd2850, %rd2745;
	or.b64  	%rd2852, %rd2851, %rd2849;
	add.s64 	%rd2853, %rd2852, %rd2848;
	add.s64 	%rd2854, %rd2853, %rd2843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1933,%dummy}, %rd2795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1934}, %rd2795;
	}
	shf.r.wrap.b32 	%r1935, %r1934, %r1933, 19;
	shf.r.wrap.b32 	%r1936, %r1933, %r1934, 19;
	mov.b64 	%rd2855, {%r1936, %r1935};
	shf.l.wrap.b32 	%r1937, %r1933, %r1934, 3;
	shf.l.wrap.b32 	%r1938, %r1934, %r1933, 3;
	mov.b64 	%rd2856, {%r1938, %r1937};
	xor.b64  	%rd2857, %rd2855, %rd2856;
	shr.u64 	%rd2858, %rd2795, 6;
	xor.b64  	%rd2859, %rd2857, %rd2858;
	shf.r.wrap.b32 	%r1939, %r1596, %r1595, 1;
	shf.r.wrap.b32 	%r1940, %r1595, %r1596, 1;
	mov.b64 	%rd2860, {%r1940, %r1939};
	shf.r.wrap.b32 	%r1941, %r1596, %r1595, 8;
	shf.r.wrap.b32 	%r1942, %r1595, %r1596, 8;
	mov.b64 	%rd2861, {%r1942, %r1941};
	xor.b64  	%rd2862, %rd2860, %rd2861;
	shr.u64 	%rd2863, %rd2314, 7;
	xor.b64  	%rd2864, %rd2862, %rd2863;
	add.s64 	%rd2865, %rd2859, %rd2277;
	add.s64 	%rd2866, %rd2865, %rd2610;
	add.s64 	%rd2867, %rd2866, %rd2864;
	add.s64 	%rd2868, %rd2867, %rd2734;
	xor.b64  	%rd2869, %rd14, %rd2771;
	and.b64  	%rd2870, %rd15, %rd2869;
	xor.b64  	%rd2871, %rd2870, %rd2771;
	add.s64 	%rd2872, %rd2868, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1943,%dummy}, %rd15;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1944}, %rd15;
	}
	shf.r.wrap.b32 	%r1945, %r1944, %r1943, 14;
	shf.r.wrap.b32 	%r1946, %r1943, %r1944, 14;
	mov.b64 	%rd2873, {%r1946, %r1945};
	shf.r.wrap.b32 	%r1947, %r1944, %r1943, 18;
	shf.r.wrap.b32 	%r1948, %r1943, %r1944, 18;
	mov.b64 	%rd2874, {%r1948, %r1947};
	xor.b64  	%rd2875, %rd2873, %rd2874;
	shf.l.wrap.b32 	%r1949, %r1943, %r1944, 23;
	shf.l.wrap.b32 	%r1950, %r1944, %r1943, 23;
	mov.b64 	%rd2876, {%r1950, %r1949};
	xor.b64  	%rd2877, %rd2875, %rd2876;
	add.s64 	%rd2878, %rd2872, %rd2877;
	add.s64 	%rd2879, %rd2878, 6902733635092675308;
	add.s64 	%rd16, %rd2879, %rd2745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1951,%dummy}, %rd2854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1952}, %rd2854;
	}
	shf.r.wrap.b32 	%r1953, %r1952, %r1951, 28;
	shf.r.wrap.b32 	%r1954, %r1951, %r1952, 28;
	mov.b64 	%rd2880, {%r1954, %r1953};
	shf.l.wrap.b32 	%r1955, %r1951, %r1952, 30;
	shf.l.wrap.b32 	%r1956, %r1952, %r1951, 30;
	mov.b64 	%rd2881, {%r1956, %r1955};
	xor.b64  	%rd2882, %rd2880, %rd2881;
	shf.l.wrap.b32 	%r1957, %r1951, %r1952, 25;
	shf.l.wrap.b32 	%r1958, %r1952, %r1951, 25;
	mov.b64 	%rd2883, {%r1958, %r1957};
	xor.b64  	%rd2884, %rd2882, %rd2883;
	and.b64  	%rd2885, %rd2854, %rd2818;
	or.b64  	%rd2886, %rd2854, %rd2818;
	and.b64  	%rd2887, %rd2886, %rd2782;
	or.b64  	%rd2888, %rd2887, %rd2885;
	add.s64 	%rd2889, %rd2888, %rd2884;
	add.s64 	%rd2890, %rd2889, %rd2879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1959,%dummy}, %rd2831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1960}, %rd2831;
	}
	shf.r.wrap.b32 	%r1961, %r1960, %r1959, 19;
	shf.r.wrap.b32 	%r1962, %r1959, %r1960, 19;
	mov.b64 	%rd2891, {%r1962, %r1961};
	shf.l.wrap.b32 	%r1963, %r1959, %r1960, 3;
	shf.l.wrap.b32 	%r1964, %r1960, %r1959, 3;
	mov.b64 	%rd2892, {%r1964, %r1963};
	xor.b64  	%rd2893, %rd2891, %rd2892;
	shr.u64 	%rd2894, %rd2831, 6;
	xor.b64  	%rd2895, %rd2893, %rd2894;
	shf.r.wrap.b32 	%r1965, %r1622, %r1621, 1;
	shf.r.wrap.b32 	%r1966, %r1621, %r1622, 1;
	mov.b64 	%rd2896, {%r1966, %r1965};
	shf.r.wrap.b32 	%r1967, %r1622, %r1621, 8;
	shf.r.wrap.b32 	%r1968, %r1621, %r1622, 8;
	mov.b64 	%rd2897, {%r1968, %r1967};
	xor.b64  	%rd2898, %rd2896, %rd2897;
	shr.u64 	%rd2899, %rd2351, 7;
	xor.b64  	%rd2900, %rd2898, %rd2899;
	add.s64 	%rd2901, %rd2895, %rd2314;
	add.s64 	%rd2902, %rd2901, %rd2647;
	add.s64 	%rd2903, %rd2902, %rd2900;
	add.s64 	%rd2904, %rd2903, %rd2771;
	xor.b64  	%rd2905, %rd15, %rd14;
	and.b64  	%rd2906, %rd16, %rd2905;
	xor.b64  	%rd2907, %rd2906, %rd14;
	add.s64 	%rd2908, %rd2904, %rd2907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1969,%dummy}, %rd16;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1970}, %rd16;
	}
	shf.r.wrap.b32 	%r1971, %r1970, %r1969, 14;
	shf.r.wrap.b32 	%r1972, %r1969, %r1970, 14;
	mov.b64 	%rd2909, {%r1972, %r1971};
	shf.r.wrap.b32 	%r1973, %r1970, %r1969, 18;
	shf.r.wrap.b32 	%r1974, %r1969, %r1970, 18;
	mov.b64 	%rd2910, {%r1974, %r1973};
	xor.b64  	%rd2911, %rd2909, %rd2910;
	shf.l.wrap.b32 	%r1975, %r1969, %r1970, 23;
	shf.l.wrap.b32 	%r1976, %r1970, %r1969, 23;
	mov.b64 	%rd2912, {%r1976, %r1975};
	xor.b64  	%rd2913, %rd2911, %rd2912;
	add.s64 	%rd2914, %rd2908, %rd2913;
	add.s64 	%rd2915, %rd2914, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1977,%dummy}, %rd2890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1978}, %rd2890;
	}
	shf.r.wrap.b32 	%r1979, %r1978, %r1977, 28;
	shf.r.wrap.b32 	%r1980, %r1977, %r1978, 28;
	mov.b64 	%rd2916, {%r1980, %r1979};
	shf.l.wrap.b32 	%r1981, %r1977, %r1978, 30;
	shf.l.wrap.b32 	%r1982, %r1978, %r1977, 30;
	mov.b64 	%rd2917, {%r1982, %r1981};
	xor.b64  	%rd2918, %rd2916, %rd2917;
	shf.l.wrap.b32 	%r1983, %r1977, %r1978, 25;
	shf.l.wrap.b32 	%r1984, %r1978, %r1977, 25;
	mov.b64 	%rd2919, {%r1984, %r1983};
	xor.b64  	%rd2920, %rd2918, %rd2919;
	and.b64  	%rd2921, %rd2890, %rd2854;
	or.b64  	%rd2922, %rd2890, %rd2854;
	and.b64  	%rd2923, %rd2922, %rd2818;
	or.b64  	%rd2924, %rd2923, %rd2921;
	add.s64 	%rd2925, %rd2920, %rd2924;
	add.s64 	%rd2926, %rd2925, %rd2915;
	add.s64 	%rd17, %rd2926, 7640891576956012808;
	add.s64 	%rd18, %rd2890, -4942790177534073029;
	add.s64 	%rd19, %rd2854, 4354685564936845355;
	add.s64 	%rd20, %rd2818, -6534734903238641935;
	add.s64 	%rd2927, %rd2782, %rd2915;
	add.s64 	%rd21, %rd2927, 5840696475078001361;
	add.s64 	%rd22, %rd16, -7276294671716946913;
	add.s64 	%rd23, %rd15, 2270897969802886507;
	add.s64 	%rd24, %rd14, 6620516959819538809;
	@%p1 bra 	$L__BB4_9;

	mul.lo.s64 	%rd2928, %rd2, 72;
	add.s64 	%rd9986, %rd148, %rd2928;
	mov.u32 	%r1985, 0;
	mov.u64 	%rd9987, %rd1;
	mov.u32 	%r7000, %r1985;

$L__BB4_8:
	ld.global.u64 	%rd2929, [%rd9986];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1986, %temp}, %rd2929;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1987}, %rd2929;
	}
	mov.u32 	%r1988, 291;
	prmt.b32 	%r1990, %r1986, %r1985, %r1988;
	prmt.b32 	%r1991, %r1987, %r1985, %r1988;
	mov.b64 	%rd2930, {%r1991, %r1990};
	xor.b64  	%rd2931, %rd2930, 6655295901103053916;
	st.local.u64 	[%rd9987], %rd2931;
	add.s64 	%rd9987, %rd9987, 8;
	add.s64 	%rd9986, %rd9986, 8;
	add.s32 	%r7000, %r7000, 1;
	setp.lt.u32 	%p6, %r7000, %r2;
	@%p6 bra 	$L__BB4_8;

$L__BB4_9:
	setp.gt.u32 	%p7, %r7000, 15;
	@%p7 bra 	$L__BB4_12;

	mul.wide.u32 	%rd2932, %r7000, 8;
	add.s64 	%rd9988, %rd1, %rd2932;

$L__BB4_11:
	mov.u64 	%rd2933, 6655295901103053916;
	st.local.u64 	[%rd9988], %rd2933;
	add.s64 	%rd9988, %rd9988, 8;
	add.s32 	%r7000, %r7000, 1;
	setp.lt.u32 	%p8, %r7000, 16;
	@%p8 bra 	$L__BB4_11;

$L__BB4_12:
	ld.local.v2.u64 	{%rd2949, %rd2950}, [%rd1];
	mov.u64 	%rd2948, 0;
	add.s64 	%rd2953, %rd12, %rd2949;
	add.s64 	%rd2954, %rd2953, -4263291710961585108;
	add.s64 	%rd2955, %rd13, %rd2953;
	and.b64  	%rd2956, %rd2954, -3887949035690463538;
	xor.b64  	%rd2957, %rd2956, -7276294671716946913;
	add.s64 	%rd2958, %rd2950, %rd2957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1992,%dummy}, %rd2954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1993}, %rd2954;
	}
	shf.r.wrap.b32 	%r1994, %r1993, %r1992, 14;
	shf.r.wrap.b32 	%r1995, %r1992, %r1993, 14;
	mov.b64 	%rd2959, {%r1995, %r1994};
	shf.r.wrap.b32 	%r1996, %r1993, %r1992, 18;
	shf.r.wrap.b32 	%r1997, %r1992, %r1993, 18;
	mov.b64 	%rd2960, {%r1997, %r1996};
	xor.b64  	%rd2961, %rd2959, %rd2960;
	shf.l.wrap.b32 	%r1998, %r1992, %r1993, 23;
	shf.l.wrap.b32 	%r1999, %r1993, %r1992, 23;
	mov.b64 	%rd2962, {%r1999, %r1998};
	xor.b64  	%rd2963, %rd2961, %rd2962;
	add.s64 	%rd2964, %rd2958, %rd2963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd2955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd2955;
	}
	shf.r.wrap.b32 	%r2002, %r2001, %r2000, 28;
	shf.r.wrap.b32 	%r2003, %r2000, %r2001, 28;
	mov.b64 	%rd2965, {%r2003, %r2002};
	shf.l.wrap.b32 	%r2004, %r2000, %r2001, 30;
	shf.l.wrap.b32 	%r2005, %r2001, %r2000, 30;
	mov.b64 	%rd2966, {%r2005, %r2004};
	xor.b64  	%rd2967, %rd2965, %rd2966;
	shf.l.wrap.b32 	%r2006, %r2000, %r2001, 25;
	shf.l.wrap.b32 	%r2007, %r2001, %r2000, 25;
	mov.b64 	%rd2968, {%r2007, %r2006};
	xor.b64  	%rd2969, %rd2967, %rd2968;
	and.b64  	%rd2970, %rd2955, -3355664534840381901;
	or.b64  	%rd2971, %rd2970, 3026882967131160840;
	add.s64 	%rd2972, %rd2971, %rd2969;
	add.s64 	%rd2973, %rd2972, %rd2964;
	add.s64 	%rd2974, %rd2964, -3663095898801038493;
	add.s64 	%rd2975, %rd2973, -8017781463737883848;
	ld.local.v2.u64 	{%rd2976, %rd2977}, [%rd1+16];
	xor.b64  	%rd2980, %rd2954, 5840696475078001361;
	and.b64  	%rd2981, %rd2974, %rd2980;
	xor.b64  	%rd2982, %rd2981, 5840696475078001361;
	add.s64 	%rd2983, %rd2976, %rd2982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2008,%dummy}, %rd2974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2009}, %rd2974;
	}
	shf.r.wrap.b32 	%r2010, %r2009, %r2008, 14;
	shf.r.wrap.b32 	%r2011, %r2008, %r2009, 14;
	mov.b64 	%rd2984, {%r2011, %r2010};
	shf.r.wrap.b32 	%r2012, %r2009, %r2008, 18;
	shf.r.wrap.b32 	%r2013, %r2008, %r2009, 18;
	mov.b64 	%rd2985, {%r2013, %r2012};
	xor.b64  	%rd2986, %rd2984, %rd2985;
	shf.l.wrap.b32 	%r2014, %r2008, %r2009, 23;
	shf.l.wrap.b32 	%r2015, %r2009, %r2008, 23;
	mov.b64 	%rd2987, {%r2015, %r2014};
	xor.b64  	%rd2988, %rd2986, %rd2987;
	add.s64 	%rd2989, %rd2983, %rd2988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2016,%dummy}, %rd2975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2017}, %rd2975;
	}
	shf.r.wrap.b32 	%r2018, %r2017, %r2016, 28;
	shf.r.wrap.b32 	%r2019, %r2016, %r2017, 28;
	mov.b64 	%rd2990, {%r2019, %r2018};
	shf.l.wrap.b32 	%r2020, %r2016, %r2017, 30;
	shf.l.wrap.b32 	%r2021, %r2017, %r2016, 30;
	mov.b64 	%rd2991, {%r2021, %r2020};
	xor.b64  	%rd2992, %rd2990, %rd2991;
	shf.l.wrap.b32 	%r2022, %r2016, %r2017, 25;
	shf.l.wrap.b32 	%r2023, %r2017, %r2016, 25;
	mov.b64 	%rd2993, {%r2023, %r2022};
	xor.b64  	%rd2994, %rd2992, %rd2993;
	and.b64  	%rd2995, %rd2975, %rd2955;
	or.b64  	%rd2996, %rd2975, %rd2955;
	and.b64  	%rd2997, %rd2996, 7640891576956012808;
	or.b64  	%rd2998, %rd2997, %rd2995;
	add.s64 	%rd2999, %rd2998, %rd2994;
	add.s64 	%rd3000, %rd2999, %rd2989;
	add.s64 	%rd3001, %rd2989, 877659737583668873;
	add.s64 	%rd3002, %rd3000, 5820449915117741902;
	xor.b64  	%rd3003, %rd2974, %rd2954;
	and.b64  	%rd3004, %rd3001, %rd3003;
	xor.b64  	%rd3005, %rd3004, %rd2954;
	add.s64 	%rd3006, %rd2977, %rd3005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2024,%dummy}, %rd3001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2025}, %rd3001;
	}
	shf.r.wrap.b32 	%r2026, %r2025, %r2024, 14;
	shf.r.wrap.b32 	%r2027, %r2024, %r2025, 14;
	mov.b64 	%rd3007, {%r2027, %r2026};
	shf.r.wrap.b32 	%r2028, %r2025, %r2024, 18;
	shf.r.wrap.b32 	%r2029, %r2024, %r2025, 18;
	mov.b64 	%rd3008, {%r2029, %r2028};
	xor.b64  	%rd3009, %rd3007, %rd3008;
	shf.l.wrap.b32 	%r2030, %r2024, %r2025, 23;
	shf.l.wrap.b32 	%r2031, %r2025, %r2024, 23;
	mov.b64 	%rd3010, {%r2031, %r2030};
	xor.b64  	%rd3011, %rd3009, %rd3010;
	add.s64 	%rd3012, %rd3006, %rd3011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2032,%dummy}, %rd3002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2033}, %rd3002;
	}
	shf.r.wrap.b32 	%r2034, %r2033, %r2032, 28;
	shf.r.wrap.b32 	%r2035, %r2032, %r2033, 28;
	mov.b64 	%rd3013, {%r2035, %r2034};
	shf.l.wrap.b32 	%r2036, %r2032, %r2033, 30;
	shf.l.wrap.b32 	%r2037, %r2033, %r2032, 30;
	mov.b64 	%rd3014, {%r2037, %r2036};
	xor.b64  	%rd3015, %rd3013, %rd3014;
	shf.l.wrap.b32 	%r2038, %r2032, %r2033, 25;
	shf.l.wrap.b32 	%r2039, %r2033, %r2032, 25;
	mov.b64 	%rd3016, {%r2039, %r2038};
	xor.b64  	%rd3017, %rd3015, %rd3016;
	and.b64  	%rd3018, %rd3002, %rd2975;
	or.b64  	%rd3019, %rd3002, %rd2975;
	and.b64  	%rd3020, %rd3019, %rd2955;
	or.b64  	%rd3021, %rd3020, %rd3018;
	add.s64 	%rd3022, %rd3021, %rd3017;
	add.s64 	%rd3023, %rd3022, %rd3012;
	add.s64 	%rd3024, %rd3012, -6571292209873868907;
	add.s64 	%rd3025, %rd3023, 4234560286879669901;
	ld.local.v2.u64 	{%rd3026, %rd3027}, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2040,%dummy}, %rd3024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2041}, %rd3024;
	}
	shf.r.wrap.b32 	%r2042, %r2041, %r2040, 14;
	shf.r.wrap.b32 	%r2043, %r2040, %r2041, 14;
	mov.b64 	%rd3030, {%r2043, %r2042};
	shf.r.wrap.b32 	%r2044, %r2041, %r2040, 18;
	shf.r.wrap.b32 	%r2045, %r2040, %r2041, 18;
	mov.b64 	%rd3031, {%r2045, %r2044};
	xor.b64  	%rd3032, %rd3030, %rd3031;
	shf.l.wrap.b32 	%r2046, %r2040, %r2041, 23;
	shf.l.wrap.b32 	%r2047, %r2041, %r2040, 23;
	mov.b64 	%rd3033, {%r2047, %r2046};
	xor.b64  	%rd3034, %rd3032, %rd3033;
	xor.b64  	%rd3035, %rd3001, %rd2974;
	and.b64  	%rd3036, %rd3024, %rd3035;
	xor.b64  	%rd3037, %rd3036, %rd2974;
	add.s64 	%rd3038, %rd2953, %rd3026;
	add.s64 	%rd3039, %rd3038, %rd3037;
	add.s64 	%rd3040, %rd3039, %rd3034;
	add.s64 	%rd3041, %rd3040, -131588302623135388;
	add.s64 	%rd3042, %rd3041, %rd2955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2048,%dummy}, %rd3025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2049}, %rd3025;
	}
	shf.r.wrap.b32 	%r2050, %r2049, %r2048, 28;
	shf.r.wrap.b32 	%r2051, %r2048, %r2049, 28;
	mov.b64 	%rd3043, {%r2051, %r2050};
	shf.l.wrap.b32 	%r2052, %r2048, %r2049, 30;
	shf.l.wrap.b32 	%r2053, %r2049, %r2048, 30;
	mov.b64 	%rd3044, {%r2053, %r2052};
	xor.b64  	%rd3045, %rd3043, %rd3044;
	shf.l.wrap.b32 	%r2054, %r2048, %r2049, 25;
	shf.l.wrap.b32 	%r2055, %r2049, %r2048, 25;
	mov.b64 	%rd3046, {%r2055, %r2054};
	xor.b64  	%rd3047, %rd3045, %rd3046;
	and.b64  	%rd3048, %rd3025, %rd3002;
	or.b64  	%rd3049, %rd3025, %rd3002;
	and.b64  	%rd3050, %rd3049, %rd2975;
	or.b64  	%rd3051, %rd3050, %rd3048;
	add.s64 	%rd3052, %rd3051, %rd3047;
	add.s64 	%rd3053, %rd3052, %rd3041;
	add.s64 	%rd3054, %rd3027, %rd2974;
	xor.b64  	%rd3055, %rd3024, %rd3001;
	and.b64  	%rd3056, %rd3042, %rd3055;
	xor.b64  	%rd3057, %rd3056, %rd3001;
	add.s64 	%rd3058, %rd3054, %rd3057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2056,%dummy}, %rd3042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2057}, %rd3042;
	}
	shf.r.wrap.b32 	%r2058, %r2057, %r2056, 14;
	shf.r.wrap.b32 	%r2059, %r2056, %r2057, 14;
	mov.b64 	%rd3059, {%r2059, %r2058};
	shf.r.wrap.b32 	%r2060, %r2057, %r2056, 18;
	shf.r.wrap.b32 	%r2061, %r2056, %r2057, 18;
	mov.b64 	%rd3060, {%r2061, %r2060};
	xor.b64  	%rd3061, %rd3059, %rd3060;
	shf.l.wrap.b32 	%r2062, %r2056, %r2057, 23;
	shf.l.wrap.b32 	%r2063, %r2057, %r2056, 23;
	mov.b64 	%rd3062, {%r2063, %r2062};
	xor.b64  	%rd3063, %rd3061, %rd3062;
	add.s64 	%rd3064, %rd3058, %rd3063;
	add.s64 	%rd3065, %rd3064, 6480981068601479193;
	add.s64 	%rd3066, %rd3065, %rd2975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2064,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2065}, %rd3053;
	}
	shf.r.wrap.b32 	%r2066, %r2065, %r2064, 28;
	shf.r.wrap.b32 	%r2067, %r2064, %r2065, 28;
	mov.b64 	%rd3067, {%r2067, %r2066};
	shf.l.wrap.b32 	%r2068, %r2064, %r2065, 30;
	shf.l.wrap.b32 	%r2069, %r2065, %r2064, 30;
	mov.b64 	%rd3068, {%r2069, %r2068};
	xor.b64  	%rd3069, %rd3067, %rd3068;
	shf.l.wrap.b32 	%r2070, %r2064, %r2065, 25;
	shf.l.wrap.b32 	%r2071, %r2065, %r2064, 25;
	mov.b64 	%rd3070, {%r2071, %r2070};
	xor.b64  	%rd3071, %rd3069, %rd3070;
	and.b64  	%rd3072, %rd3053, %rd3025;
	or.b64  	%rd3073, %rd3053, %rd3025;
	and.b64  	%rd3074, %rd3073, %rd3002;
	or.b64  	%rd3075, %rd3074, %rd3072;
	add.s64 	%rd3076, %rd3075, %rd3071;
	add.s64 	%rd3077, %rd3076, %rd3065;
	ld.local.v2.u64 	{%rd3078, %rd3079}, [%rd1+48];
	add.s64 	%rd3082, %rd3078, %rd3001;
	xor.b64  	%rd3083, %rd3042, %rd3024;
	and.b64  	%rd3084, %rd3066, %rd3083;
	xor.b64  	%rd3085, %rd3084, %rd3024;
	add.s64 	%rd3086, %rd3082, %rd3085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2072,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2073}, %rd3066;
	}
	shf.r.wrap.b32 	%r2074, %r2073, %r2072, 14;
	shf.r.wrap.b32 	%r2075, %r2072, %r2073, 14;
	mov.b64 	%rd3087, {%r2075, %r2074};
	shf.r.wrap.b32 	%r2076, %r2073, %r2072, 18;
	shf.r.wrap.b32 	%r2077, %r2072, %r2073, 18;
	mov.b64 	%rd3088, {%r2077, %r2076};
	xor.b64  	%rd3089, %rd3087, %rd3088;
	shf.l.wrap.b32 	%r2078, %r2072, %r2073, 23;
	shf.l.wrap.b32 	%r2079, %r2073, %r2072, 23;
	mov.b64 	%rd3090, {%r2079, %r2078};
	xor.b64  	%rd3091, %rd3089, %rd3090;
	add.s64 	%rd3092, %rd3086, %rd3091;
	add.s64 	%rd3093, %rd3092, -7908458776815382629;
	add.s64 	%rd3094, %rd3093, %rd3002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd3077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd3077;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 28;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 28;
	mov.b64 	%rd3095, {%r2083, %r2082};
	shf.l.wrap.b32 	%r2084, %r2080, %r2081, 30;
	shf.l.wrap.b32 	%r2085, %r2081, %r2080, 30;
	mov.b64 	%rd3096, {%r2085, %r2084};
	xor.b64  	%rd3097, %rd3095, %rd3096;
	shf.l.wrap.b32 	%r2086, %r2080, %r2081, 25;
	shf.l.wrap.b32 	%r2087, %r2081, %r2080, 25;
	mov.b64 	%rd3098, {%r2087, %r2086};
	xor.b64  	%rd3099, %rd3097, %rd3098;
	and.b64  	%rd3100, %rd3077, %rd3053;
	or.b64  	%rd3101, %rd3077, %rd3053;
	and.b64  	%rd3102, %rd3101, %rd3025;
	or.b64  	%rd3103, %rd3102, %rd3100;
	add.s64 	%rd3104, %rd3103, %rd3099;
	add.s64 	%rd3105, %rd3104, %rd3093;
	add.s64 	%rd3106, %rd3079, %rd3024;
	xor.b64  	%rd3107, %rd3066, %rd3042;
	and.b64  	%rd3108, %rd3094, %rd3107;
	xor.b64  	%rd3109, %rd3108, %rd3042;
	add.s64 	%rd3110, %rd3106, %rd3109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2088,%dummy}, %rd3094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2089}, %rd3094;
	}
	shf.r.wrap.b32 	%r2090, %r2089, %r2088, 14;
	shf.r.wrap.b32 	%r2091, %r2088, %r2089, 14;
	mov.b64 	%rd3111, {%r2091, %r2090};
	shf.r.wrap.b32 	%r2092, %r2089, %r2088, 18;
	shf.r.wrap.b32 	%r2093, %r2088, %r2089, 18;
	mov.b64 	%rd3112, {%r2093, %r2092};
	xor.b64  	%rd3113, %rd3111, %rd3112;
	shf.l.wrap.b32 	%r2094, %r2088, %r2089, 23;
	shf.l.wrap.b32 	%r2095, %r2089, %r2088, 23;
	mov.b64 	%rd3114, {%r2095, %r2094};
	xor.b64  	%rd3115, %rd3113, %rd3114;
	add.s64 	%rd3116, %rd3110, %rd3115;
	add.s64 	%rd3117, %rd3116, -6116909921290321640;
	add.s64 	%rd3118, %rd3117, %rd3025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2096,%dummy}, %rd3105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2097}, %rd3105;
	}
	shf.r.wrap.b32 	%r2098, %r2097, %r2096, 28;
	shf.r.wrap.b32 	%r2099, %r2096, %r2097, 28;
	mov.b64 	%rd3119, {%r2099, %r2098};
	shf.l.wrap.b32 	%r2100, %r2096, %r2097, 30;
	shf.l.wrap.b32 	%r2101, %r2097, %r2096, 30;
	mov.b64 	%rd3120, {%r2101, %r2100};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	shf.l.wrap.b32 	%r2102, %r2096, %r2097, 25;
	shf.l.wrap.b32 	%r2103, %r2097, %r2096, 25;
	mov.b64 	%rd3122, {%r2103, %r2102};
	xor.b64  	%rd3123, %rd3121, %rd3122;
	and.b64  	%rd3124, %rd3105, %rd3077;
	or.b64  	%rd3125, %rd3105, %rd3077;
	and.b64  	%rd3126, %rd3125, %rd3053;
	or.b64  	%rd3127, %rd3126, %rd3124;
	add.s64 	%rd3128, %rd3127, %rd3123;
	add.s64 	%rd3129, %rd3128, %rd3117;
	ld.local.v2.u64 	{%rd3130, %rd3131}, [%rd1+64];
	add.s64 	%rd3134, %rd3130, %rd3042;
	xor.b64  	%rd3135, %rd3094, %rd3066;
	and.b64  	%rd3136, %rd3118, %rd3135;
	xor.b64  	%rd3137, %rd3136, %rd3066;
	add.s64 	%rd3138, %rd3134, %rd3137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2104,%dummy}, %rd3118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2105}, %rd3118;
	}
	shf.r.wrap.b32 	%r2106, %r2105, %r2104, 14;
	shf.r.wrap.b32 	%r2107, %r2104, %r2105, 14;
	mov.b64 	%rd3139, {%r2107, %r2106};
	shf.r.wrap.b32 	%r2108, %r2105, %r2104, 18;
	shf.r.wrap.b32 	%r2109, %r2104, %r2105, 18;
	mov.b64 	%rd3140, {%r2109, %r2108};
	xor.b64  	%rd3141, %rd3139, %rd3140;
	shf.l.wrap.b32 	%r2110, %r2104, %r2105, 23;
	shf.l.wrap.b32 	%r2111, %r2105, %r2104, 23;
	mov.b64 	%rd3142, {%r2111, %r2110};
	xor.b64  	%rd3143, %rd3141, %rd3142;
	add.s64 	%rd3144, %rd3138, %rd3143;
	add.s64 	%rd3145, %rd3144, -2880145864133508542;
	add.s64 	%rd3146, %rd3145, %rd3053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2112,%dummy}, %rd3129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2113}, %rd3129;
	}
	shf.r.wrap.b32 	%r2114, %r2113, %r2112, 28;
	shf.r.wrap.b32 	%r2115, %r2112, %r2113, 28;
	mov.b64 	%rd3147, {%r2115, %r2114};
	shf.l.wrap.b32 	%r2116, %r2112, %r2113, 30;
	shf.l.wrap.b32 	%r2117, %r2113, %r2112, 30;
	mov.b64 	%rd3148, {%r2117, %r2116};
	xor.b64  	%rd3149, %rd3147, %rd3148;
	shf.l.wrap.b32 	%r2118, %r2112, %r2113, 25;
	shf.l.wrap.b32 	%r2119, %r2113, %r2112, 25;
	mov.b64 	%rd3150, {%r2119, %r2118};
	xor.b64  	%rd3151, %rd3149, %rd3150;
	and.b64  	%rd3152, %rd3129, %rd3105;
	or.b64  	%rd3153, %rd3129, %rd3105;
	and.b64  	%rd3154, %rd3153, %rd3077;
	or.b64  	%rd3155, %rd3154, %rd3152;
	add.s64 	%rd3156, %rd3155, %rd3151;
	add.s64 	%rd3157, %rd3156, %rd3145;
	add.s64 	%rd3158, %rd3131, %rd3066;
	xor.b64  	%rd3159, %rd3118, %rd3094;
	and.b64  	%rd3160, %rd3146, %rd3159;
	xor.b64  	%rd3161, %rd3160, %rd3094;
	add.s64 	%rd3162, %rd3158, %rd3161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2120,%dummy}, %rd3146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2121}, %rd3146;
	}
	shf.r.wrap.b32 	%r2122, %r2121, %r2120, 14;
	shf.r.wrap.b32 	%r2123, %r2120, %r2121, 14;
	mov.b64 	%rd3163, {%r2123, %r2122};
	shf.r.wrap.b32 	%r2124, %r2121, %r2120, 18;
	shf.r.wrap.b32 	%r2125, %r2120, %r2121, 18;
	mov.b64 	%rd3164, {%r2125, %r2124};
	xor.b64  	%rd3165, %rd3163, %rd3164;
	shf.l.wrap.b32 	%r2126, %r2120, %r2121, 23;
	shf.l.wrap.b32 	%r2127, %r2121, %r2120, 23;
	mov.b64 	%rd3166, {%r2127, %r2126};
	xor.b64  	%rd3167, %rd3165, %rd3166;
	add.s64 	%rd3168, %rd3162, %rd3167;
	add.s64 	%rd3169, %rd3168, 1334009975649890238;
	add.s64 	%rd3170, %rd3169, %rd3077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2128,%dummy}, %rd3157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2129}, %rd3157;
	}
	shf.r.wrap.b32 	%r2130, %r2129, %r2128, 28;
	shf.r.wrap.b32 	%r2131, %r2128, %r2129, 28;
	mov.b64 	%rd3171, {%r2131, %r2130};
	shf.l.wrap.b32 	%r2132, %r2128, %r2129, 30;
	shf.l.wrap.b32 	%r2133, %r2129, %r2128, 30;
	mov.b64 	%rd3172, {%r2133, %r2132};
	xor.b64  	%rd3173, %rd3171, %rd3172;
	shf.l.wrap.b32 	%r2134, %r2128, %r2129, 25;
	shf.l.wrap.b32 	%r2135, %r2129, %r2128, 25;
	mov.b64 	%rd3174, {%r2135, %r2134};
	xor.b64  	%rd3175, %rd3173, %rd3174;
	and.b64  	%rd3176, %rd3157, %rd3129;
	or.b64  	%rd3177, %rd3157, %rd3129;
	and.b64  	%rd3178, %rd3177, %rd3105;
	or.b64  	%rd3179, %rd3178, %rd3176;
	add.s64 	%rd3180, %rd3179, %rd3175;
	add.s64 	%rd3181, %rd3180, %rd3169;
	ld.local.v2.u64 	{%rd3182, %rd3183}, [%rd1+80];
	add.s64 	%rd3186, %rd3182, %rd3094;
	xor.b64  	%rd3187, %rd3146, %rd3118;
	and.b64  	%rd3188, %rd3170, %rd3187;
	xor.b64  	%rd3189, %rd3188, %rd3118;
	add.s64 	%rd3190, %rd3186, %rd3189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2136,%dummy}, %rd3170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2137}, %rd3170;
	}
	shf.r.wrap.b32 	%r2138, %r2137, %r2136, 14;
	shf.r.wrap.b32 	%r2139, %r2136, %r2137, 14;
	mov.b64 	%rd3191, {%r2139, %r2138};
	shf.r.wrap.b32 	%r2140, %r2137, %r2136, 18;
	shf.r.wrap.b32 	%r2141, %r2136, %r2137, 18;
	mov.b64 	%rd3192, {%r2141, %r2140};
	xor.b64  	%rd3193, %rd3191, %rd3192;
	shf.l.wrap.b32 	%r2142, %r2136, %r2137, 23;
	shf.l.wrap.b32 	%r2143, %r2137, %r2136, 23;
	mov.b64 	%rd3194, {%r2143, %r2142};
	xor.b64  	%rd3195, %rd3193, %rd3194;
	add.s64 	%rd3196, %rd3190, %rd3195;
	add.s64 	%rd3197, %rd3196, 2608012711638119052;
	add.s64 	%rd3198, %rd3197, %rd3105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2144,%dummy}, %rd3181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2145}, %rd3181;
	}
	shf.r.wrap.b32 	%r2146, %r2145, %r2144, 28;
	shf.r.wrap.b32 	%r2147, %r2144, %r2145, 28;
	mov.b64 	%rd3199, {%r2147, %r2146};
	shf.l.wrap.b32 	%r2148, %r2144, %r2145, 30;
	shf.l.wrap.b32 	%r2149, %r2145, %r2144, 30;
	mov.b64 	%rd3200, {%r2149, %r2148};
	xor.b64  	%rd3201, %rd3199, %rd3200;
	shf.l.wrap.b32 	%r2150, %r2144, %r2145, 25;
	shf.l.wrap.b32 	%r2151, %r2145, %r2144, 25;
	mov.b64 	%rd3202, {%r2151, %r2150};
	xor.b64  	%rd3203, %rd3201, %rd3202;
	and.b64  	%rd3204, %rd3181, %rd3157;
	or.b64  	%rd3205, %rd3181, %rd3157;
	and.b64  	%rd3206, %rd3205, %rd3129;
	or.b64  	%rd3207, %rd3206, %rd3204;
	add.s64 	%rd3208, %rd3207, %rd3203;
	add.s64 	%rd3209, %rd3208, %rd3197;
	add.s64 	%rd3210, %rd3183, %rd3118;
	xor.b64  	%rd3211, %rd3170, %rd3146;
	and.b64  	%rd3212, %rd3198, %rd3211;
	xor.b64  	%rd3213, %rd3212, %rd3146;
	add.s64 	%rd3214, %rd3210, %rd3213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2152,%dummy}, %rd3198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2153}, %rd3198;
	}
	shf.r.wrap.b32 	%r2154, %r2153, %r2152, 14;
	shf.r.wrap.b32 	%r2155, %r2152, %r2153, 14;
	mov.b64 	%rd3215, {%r2155, %r2154};
	shf.r.wrap.b32 	%r2156, %r2153, %r2152, 18;
	shf.r.wrap.b32 	%r2157, %r2152, %r2153, 18;
	mov.b64 	%rd3216, {%r2157, %r2156};
	xor.b64  	%rd3217, %rd3215, %rd3216;
	shf.l.wrap.b32 	%r2158, %r2152, %r2153, 23;
	shf.l.wrap.b32 	%r2159, %r2153, %r2152, 23;
	mov.b64 	%rd3218, {%r2159, %r2158};
	xor.b64  	%rd3219, %rd3217, %rd3218;
	add.s64 	%rd3220, %rd3214, %rd3219;
	add.s64 	%rd3221, %rd3220, 6128411473006802146;
	add.s64 	%rd3222, %rd3221, %rd3129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2160,%dummy}, %rd3209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2161}, %rd3209;
	}
	shf.r.wrap.b32 	%r2162, %r2161, %r2160, 28;
	shf.r.wrap.b32 	%r2163, %r2160, %r2161, 28;
	mov.b64 	%rd3223, {%r2163, %r2162};
	shf.l.wrap.b32 	%r2164, %r2160, %r2161, 30;
	shf.l.wrap.b32 	%r2165, %r2161, %r2160, 30;
	mov.b64 	%rd3224, {%r2165, %r2164};
	xor.b64  	%rd3225, %rd3223, %rd3224;
	shf.l.wrap.b32 	%r2166, %r2160, %r2161, 25;
	shf.l.wrap.b32 	%r2167, %r2161, %r2160, 25;
	mov.b64 	%rd3226, {%r2167, %r2166};
	xor.b64  	%rd3227, %rd3225, %rd3226;
	and.b64  	%rd3228, %rd3209, %rd3181;
	or.b64  	%rd3229, %rd3209, %rd3181;
	and.b64  	%rd3230, %rd3229, %rd3157;
	or.b64  	%rd3231, %rd3230, %rd3228;
	add.s64 	%rd3232, %rd3231, %rd3227;
	add.s64 	%rd3233, %rd3232, %rd3221;
	ld.local.v2.u64 	{%rd3234, %rd3235}, [%rd1+96];
	add.s64 	%rd3238, %rd3234, %rd3146;
	xor.b64  	%rd3239, %rd3198, %rd3170;
	and.b64  	%rd3240, %rd3222, %rd3239;
	xor.b64  	%rd3241, %rd3240, %rd3170;
	add.s64 	%rd3242, %rd3238, %rd3241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2168,%dummy}, %rd3222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2169}, %rd3222;
	}
	shf.r.wrap.b32 	%r2170, %r2169, %r2168, 14;
	shf.r.wrap.b32 	%r2171, %r2168, %r2169, 14;
	mov.b64 	%rd3243, {%r2171, %r2170};
	shf.r.wrap.b32 	%r2172, %r2169, %r2168, 18;
	shf.r.wrap.b32 	%r2173, %r2168, %r2169, 18;
	mov.b64 	%rd3244, {%r2173, %r2172};
	xor.b64  	%rd3245, %rd3243, %rd3244;
	shf.l.wrap.b32 	%r2174, %r2168, %r2169, 23;
	shf.l.wrap.b32 	%r2175, %r2169, %r2168, 23;
	mov.b64 	%rd3246, {%r2175, %r2174};
	xor.b64  	%rd3247, %rd3245, %rd3246;
	add.s64 	%rd3248, %rd3242, %rd3247;
	add.s64 	%rd3249, %rd3248, 8268148722764581231;
	add.s64 	%rd3250, %rd3249, %rd3157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2176,%dummy}, %rd3233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2177}, %rd3233;
	}
	shf.r.wrap.b32 	%r2178, %r2177, %r2176, 28;
	shf.r.wrap.b32 	%r2179, %r2176, %r2177, 28;
	mov.b64 	%rd3251, {%r2179, %r2178};
	shf.l.wrap.b32 	%r2180, %r2176, %r2177, 30;
	shf.l.wrap.b32 	%r2181, %r2177, %r2176, 30;
	mov.b64 	%rd3252, {%r2181, %r2180};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	shf.l.wrap.b32 	%r2182, %r2176, %r2177, 25;
	shf.l.wrap.b32 	%r2183, %r2177, %r2176, 25;
	mov.b64 	%rd3254, {%r2183, %r2182};
	xor.b64  	%rd3255, %rd3253, %rd3254;
	and.b64  	%rd3256, %rd3233, %rd3209;
	or.b64  	%rd3257, %rd3233, %rd3209;
	and.b64  	%rd3258, %rd3257, %rd3181;
	or.b64  	%rd3259, %rd3258, %rd3256;
	add.s64 	%rd3260, %rd3259, %rd3255;
	add.s64 	%rd3261, %rd3260, %rd3249;
	add.s64 	%rd3262, %rd3235, %rd3170;
	xor.b64  	%rd3263, %rd3222, %rd3198;
	and.b64  	%rd3264, %rd3250, %rd3263;
	xor.b64  	%rd3265, %rd3264, %rd3198;
	add.s64 	%rd3266, %rd3262, %rd3265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2184,%dummy}, %rd3250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2185}, %rd3250;
	}
	shf.r.wrap.b32 	%r2186, %r2185, %r2184, 14;
	shf.r.wrap.b32 	%r2187, %r2184, %r2185, 14;
	mov.b64 	%rd3267, {%r2187, %r2186};
	shf.r.wrap.b32 	%r2188, %r2185, %r2184, 18;
	shf.r.wrap.b32 	%r2189, %r2184, %r2185, 18;
	mov.b64 	%rd3268, {%r2189, %r2188};
	xor.b64  	%rd3269, %rd3267, %rd3268;
	shf.l.wrap.b32 	%r2190, %r2184, %r2185, 23;
	shf.l.wrap.b32 	%r2191, %r2185, %r2184, 23;
	mov.b64 	%rd3270, {%r2191, %r2190};
	xor.b64  	%rd3271, %rd3269, %rd3270;
	add.s64 	%rd3272, %rd3266, %rd3271;
	add.s64 	%rd3273, %rd3272, -9160688886553864527;
	add.s64 	%rd3274, %rd3273, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2192,%dummy}, %rd3261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2193}, %rd3261;
	}
	shf.r.wrap.b32 	%r2194, %r2193, %r2192, 28;
	shf.r.wrap.b32 	%r2195, %r2192, %r2193, 28;
	mov.b64 	%rd3275, {%r2195, %r2194};
	shf.l.wrap.b32 	%r2196, %r2192, %r2193, 30;
	shf.l.wrap.b32 	%r2197, %r2193, %r2192, 30;
	mov.b64 	%rd3276, {%r2197, %r2196};
	xor.b64  	%rd3277, %rd3275, %rd3276;
	shf.l.wrap.b32 	%r2198, %r2192, %r2193, 25;
	shf.l.wrap.b32 	%r2199, %r2193, %r2192, 25;
	mov.b64 	%rd3278, {%r2199, %r2198};
	xor.b64  	%rd3279, %rd3277, %rd3278;
	and.b64  	%rd3280, %rd3261, %rd3233;
	or.b64  	%rd3281, %rd3261, %rd3233;
	and.b64  	%rd3282, %rd3281, %rd3209;
	or.b64  	%rd3283, %rd3282, %rd3280;
	add.s64 	%rd3284, %rd3283, %rd3279;
	add.s64 	%rd3285, %rd3284, %rd3273;
	ld.local.v2.u64 	{%rd3286, %rd3287}, [%rd1+112];
	add.s64 	%rd3290, %rd3286, %rd3198;
	xor.b64  	%rd3291, %rd3250, %rd3222;
	and.b64  	%rd3292, %rd3274, %rd3291;
	xor.b64  	%rd3293, %rd3292, %rd3222;
	add.s64 	%rd3294, %rd3290, %rd3293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2200,%dummy}, %rd3274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2201}, %rd3274;
	}
	shf.r.wrap.b32 	%r2202, %r2201, %r2200, 14;
	shf.r.wrap.b32 	%r2203, %r2200, %r2201, 14;
	mov.b64 	%rd3295, {%r2203, %r2202};
	shf.r.wrap.b32 	%r2204, %r2201, %r2200, 18;
	shf.r.wrap.b32 	%r2205, %r2200, %r2201, 18;
	mov.b64 	%rd3296, {%r2205, %r2204};
	xor.b64  	%rd3297, %rd3295, %rd3296;
	shf.l.wrap.b32 	%r2206, %r2200, %r2201, 23;
	shf.l.wrap.b32 	%r2207, %r2201, %r2200, 23;
	mov.b64 	%rd3298, {%r2207, %r2206};
	xor.b64  	%rd3299, %rd3297, %rd3298;
	add.s64 	%rd3300, %rd3294, %rd3299;
	add.s64 	%rd3301, %rd3300, -7215885187991268811;
	add.s64 	%rd3302, %rd3301, %rd3209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2208,%dummy}, %rd3285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2209}, %rd3285;
	}
	shf.r.wrap.b32 	%r2210, %r2209, %r2208, 28;
	shf.r.wrap.b32 	%r2211, %r2208, %r2209, 28;
	mov.b64 	%rd3303, {%r2211, %r2210};
	shf.l.wrap.b32 	%r2212, %r2208, %r2209, 30;
	shf.l.wrap.b32 	%r2213, %r2209, %r2208, 30;
	mov.b64 	%rd3304, {%r2213, %r2212};
	xor.b64  	%rd3305, %rd3303, %rd3304;
	shf.l.wrap.b32 	%r2214, %r2208, %r2209, 25;
	shf.l.wrap.b32 	%r2215, %r2209, %r2208, 25;
	mov.b64 	%rd3306, {%r2215, %r2214};
	xor.b64  	%rd3307, %rd3305, %rd3306;
	and.b64  	%rd3308, %rd3285, %rd3261;
	or.b64  	%rd3309, %rd3285, %rd3261;
	and.b64  	%rd3310, %rd3309, %rd3233;
	or.b64  	%rd3311, %rd3310, %rd3308;
	add.s64 	%rd3312, %rd3311, %rd3307;
	add.s64 	%rd3313, %rd3312, %rd3301;
	add.s64 	%rd3314, %rd3287, %rd3222;
	xor.b64  	%rd3315, %rd3274, %rd3250;
	and.b64  	%rd3316, %rd3302, %rd3315;
	xor.b64  	%rd3317, %rd3316, %rd3250;
	add.s64 	%rd3318, %rd3314, %rd3317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2216,%dummy}, %rd3302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2217}, %rd3302;
	}
	shf.r.wrap.b32 	%r2218, %r2217, %r2216, 14;
	shf.r.wrap.b32 	%r2219, %r2216, %r2217, 14;
	mov.b64 	%rd3319, {%r2219, %r2218};
	shf.r.wrap.b32 	%r2220, %r2217, %r2216, 18;
	shf.r.wrap.b32 	%r2221, %r2216, %r2217, 18;
	mov.b64 	%rd3320, {%r2221, %r2220};
	xor.b64  	%rd3321, %rd3319, %rd3320;
	shf.l.wrap.b32 	%r2222, %r2216, %r2217, 23;
	shf.l.wrap.b32 	%r2223, %r2217, %r2216, 23;
	mov.b64 	%rd3322, {%r2223, %r2222};
	xor.b64  	%rd3323, %rd3321, %rd3322;
	add.s64 	%rd3324, %rd3318, %rd3323;
	add.s64 	%rd3325, %rd3324, -4495734319001033068;
	add.s64 	%rd3326, %rd3325, %rd3233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2224,%dummy}, %rd3313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2225}, %rd3313;
	}
	shf.r.wrap.b32 	%r2226, %r2225, %r2224, 28;
	shf.r.wrap.b32 	%r2227, %r2224, %r2225, 28;
	mov.b64 	%rd3327, {%r2227, %r2226};
	shf.l.wrap.b32 	%r2228, %r2224, %r2225, 30;
	shf.l.wrap.b32 	%r2229, %r2225, %r2224, 30;
	mov.b64 	%rd3328, {%r2229, %r2228};
	xor.b64  	%rd3329, %rd3327, %rd3328;
	shf.l.wrap.b32 	%r2230, %r2224, %r2225, 25;
	shf.l.wrap.b32 	%r2231, %r2225, %r2224, 25;
	mov.b64 	%rd3330, {%r2231, %r2230};
	xor.b64  	%rd3331, %rd3329, %rd3330;
	and.b64  	%rd3332, %rd3313, %rd3285;
	or.b64  	%rd3333, %rd3313, %rd3285;
	and.b64  	%rd3334, %rd3333, %rd3261;
	or.b64  	%rd3335, %rd3334, %rd3332;
	add.s64 	%rd3336, %rd3335, %rd3331;
	add.s64 	%rd3337, %rd3336, %rd3325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2232,%dummy}, %rd3286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2233}, %rd3286;
	}
	shf.r.wrap.b32 	%r2234, %r2233, %r2232, 19;
	shf.r.wrap.b32 	%r2235, %r2232, %r2233, 19;
	mov.b64 	%rd3338, {%r2235, %r2234};
	shf.l.wrap.b32 	%r2236, %r2232, %r2233, 3;
	shf.l.wrap.b32 	%r2237, %r2233, %r2232, 3;
	mov.b64 	%rd3339, {%r2237, %r2236};
	xor.b64  	%rd3340, %rd3338, %rd3339;
	shr.u64 	%rd3341, %rd3286, 6;
	xor.b64  	%rd3342, %rd3340, %rd3341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd2950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2239}, %rd2950;
	}
	shf.r.wrap.b32 	%r2240, %r2239, %r2238, 1;
	shf.r.wrap.b32 	%r2241, %r2238, %r2239, 1;
	mov.b64 	%rd3343, {%r2241, %r2240};
	shf.r.wrap.b32 	%r2242, %r2239, %r2238, 8;
	shf.r.wrap.b32 	%r2243, %r2238, %r2239, 8;
	mov.b64 	%rd3344, {%r2243, %r2242};
	xor.b64  	%rd3345, %rd3343, %rd3344;
	shr.u64 	%rd3346, %rd2950, 7;
	xor.b64  	%rd3347, %rd3345, %rd3346;
	add.s64 	%rd3348, %rd3342, %rd2949;
	add.s64 	%rd3349, %rd3348, %rd3131;
	add.s64 	%rd3350, %rd3349, %rd3347;
	add.s64 	%rd3351, %rd3350, %rd3250;
	xor.b64  	%rd3352, %rd3302, %rd3274;
	and.b64  	%rd3353, %rd3326, %rd3352;
	xor.b64  	%rd3354, %rd3353, %rd3274;
	add.s64 	%rd3355, %rd3351, %rd3354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd3326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2245}, %rd3326;
	}
	shf.r.wrap.b32 	%r2246, %r2245, %r2244, 14;
	shf.r.wrap.b32 	%r2247, %r2244, %r2245, 14;
	mov.b64 	%rd3356, {%r2247, %r2246};
	shf.r.wrap.b32 	%r2248, %r2245, %r2244, 18;
	shf.r.wrap.b32 	%r2249, %r2244, %r2245, 18;
	mov.b64 	%rd3357, {%r2249, %r2248};
	xor.b64  	%rd3358, %rd3356, %rd3357;
	shf.l.wrap.b32 	%r2250, %r2244, %r2245, 23;
	shf.l.wrap.b32 	%r2251, %r2245, %r2244, 23;
	mov.b64 	%rd3359, {%r2251, %r2250};
	xor.b64  	%rd3360, %rd3358, %rd3359;
	add.s64 	%rd3361, %rd3355, %rd3360;
	add.s64 	%rd3362, %rd3361, -1973867731355612462;
	add.s64 	%rd3363, %rd3362, %rd3261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2252,%dummy}, %rd3337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2253}, %rd3337;
	}
	shf.r.wrap.b32 	%r2254, %r2253, %r2252, 28;
	shf.r.wrap.b32 	%r2255, %r2252, %r2253, 28;
	mov.b64 	%rd3364, {%r2255, %r2254};
	shf.l.wrap.b32 	%r2256, %r2252, %r2253, 30;
	shf.l.wrap.b32 	%r2257, %r2253, %r2252, 30;
	mov.b64 	%rd3365, {%r2257, %r2256};
	xor.b64  	%rd3366, %rd3364, %rd3365;
	shf.l.wrap.b32 	%r2258, %r2252, %r2253, 25;
	shf.l.wrap.b32 	%r2259, %r2253, %r2252, 25;
	mov.b64 	%rd3367, {%r2259, %r2258};
	xor.b64  	%rd3368, %rd3366, %rd3367;
	and.b64  	%rd3369, %rd3337, %rd3313;
	or.b64  	%rd3370, %rd3337, %rd3313;
	and.b64  	%rd3371, %rd3370, %rd3285;
	or.b64  	%rd3372, %rd3371, %rd3369;
	add.s64 	%rd3373, %rd3372, %rd3368;
	add.s64 	%rd3374, %rd3373, %rd3362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2260,%dummy}, %rd3287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2261}, %rd3287;
	}
	shf.r.wrap.b32 	%r2262, %r2261, %r2260, 19;
	shf.r.wrap.b32 	%r2263, %r2260, %r2261, 19;
	mov.b64 	%rd3375, {%r2263, %r2262};
	shf.l.wrap.b32 	%r2264, %r2260, %r2261, 3;
	shf.l.wrap.b32 	%r2265, %r2261, %r2260, 3;
	mov.b64 	%rd3376, {%r2265, %r2264};
	xor.b64  	%rd3377, %rd3375, %rd3376;
	shr.u64 	%rd3378, %rd3287, 6;
	xor.b64  	%rd3379, %rd3377, %rd3378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2266,%dummy}, %rd2976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2267}, %rd2976;
	}
	shf.r.wrap.b32 	%r2268, %r2267, %r2266, 1;
	shf.r.wrap.b32 	%r2269, %r2266, %r2267, 1;
	mov.b64 	%rd3380, {%r2269, %r2268};
	shf.r.wrap.b32 	%r2270, %r2267, %r2266, 8;
	shf.r.wrap.b32 	%r2271, %r2266, %r2267, 8;
	mov.b64 	%rd3381, {%r2271, %r2270};
	xor.b64  	%rd3382, %rd3380, %rd3381;
	shr.u64 	%rd3383, %rd2976, 7;
	xor.b64  	%rd3384, %rd3382, %rd3383;
	add.s64 	%rd3385, %rd3379, %rd2950;
	add.s64 	%rd3386, %rd3385, %rd3182;
	add.s64 	%rd3387, %rd3386, %rd3384;
	add.s64 	%rd3388, %rd3387, %rd3274;
	xor.b64  	%rd3389, %rd3326, %rd3302;
	and.b64  	%rd3390, %rd3363, %rd3389;
	xor.b64  	%rd3391, %rd3390, %rd3302;
	add.s64 	%rd3392, %rd3388, %rd3391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2272,%dummy}, %rd3363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2273}, %rd3363;
	}
	shf.r.wrap.b32 	%r2274, %r2273, %r2272, 14;
	shf.r.wrap.b32 	%r2275, %r2272, %r2273, 14;
	mov.b64 	%rd3393, {%r2275, %r2274};
	shf.r.wrap.b32 	%r2276, %r2273, %r2272, 18;
	shf.r.wrap.b32 	%r2277, %r2272, %r2273, 18;
	mov.b64 	%rd3394, {%r2277, %r2276};
	xor.b64  	%rd3395, %rd3393, %rd3394;
	shf.l.wrap.b32 	%r2278, %r2272, %r2273, 23;
	shf.l.wrap.b32 	%r2279, %r2273, %r2272, 23;
	mov.b64 	%rd3396, {%r2279, %r2278};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	add.s64 	%rd3398, %rd3392, %rd3397;
	add.s64 	%rd3399, %rd3398, -1171420211273849373;
	add.s64 	%rd3400, %rd3399, %rd3285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2280,%dummy}, %rd3374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2281}, %rd3374;
	}
	shf.r.wrap.b32 	%r2282, %r2281, %r2280, 28;
	shf.r.wrap.b32 	%r2283, %r2280, %r2281, 28;
	mov.b64 	%rd3401, {%r2283, %r2282};
	shf.l.wrap.b32 	%r2284, %r2280, %r2281, 30;
	shf.l.wrap.b32 	%r2285, %r2281, %r2280, 30;
	mov.b64 	%rd3402, {%r2285, %r2284};
	xor.b64  	%rd3403, %rd3401, %rd3402;
	shf.l.wrap.b32 	%r2286, %r2280, %r2281, 25;
	shf.l.wrap.b32 	%r2287, %r2281, %r2280, 25;
	mov.b64 	%rd3404, {%r2287, %r2286};
	xor.b64  	%rd3405, %rd3403, %rd3404;
	and.b64  	%rd3406, %rd3374, %rd3337;
	or.b64  	%rd3407, %rd3374, %rd3337;
	and.b64  	%rd3408, %rd3407, %rd3313;
	or.b64  	%rd3409, %rd3408, %rd3406;
	add.s64 	%rd3410, %rd3409, %rd3405;
	add.s64 	%rd3411, %rd3410, %rd3399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2288,%dummy}, %rd3350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2289}, %rd3350;
	}
	shf.r.wrap.b32 	%r2290, %r2289, %r2288, 19;
	shf.r.wrap.b32 	%r2291, %r2288, %r2289, 19;
	mov.b64 	%rd3412, {%r2291, %r2290};
	shf.l.wrap.b32 	%r2292, %r2288, %r2289, 3;
	shf.l.wrap.b32 	%r2293, %r2289, %r2288, 3;
	mov.b64 	%rd3413, {%r2293, %r2292};
	xor.b64  	%rd3414, %rd3412, %rd3413;
	shr.u64 	%rd3415, %rd3350, 6;
	xor.b64  	%rd3416, %rd3414, %rd3415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd2977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2295}, %rd2977;
	}
	shf.r.wrap.b32 	%r2296, %r2295, %r2294, 1;
	shf.r.wrap.b32 	%r2297, %r2294, %r2295, 1;
	mov.b64 	%rd3417, {%r2297, %r2296};
	shf.r.wrap.b32 	%r2298, %r2295, %r2294, 8;
	shf.r.wrap.b32 	%r2299, %r2294, %r2295, 8;
	mov.b64 	%rd3418, {%r2299, %r2298};
	xor.b64  	%rd3419, %rd3417, %rd3418;
	shr.u64 	%rd3420, %rd2977, 7;
	xor.b64  	%rd3421, %rd3419, %rd3420;
	add.s64 	%rd3422, %rd3416, %rd2976;
	add.s64 	%rd3423, %rd3422, %rd3183;
	add.s64 	%rd3424, %rd3423, %rd3421;
	add.s64 	%rd3425, %rd3424, %rd3302;
	xor.b64  	%rd3426, %rd3363, %rd3326;
	and.b64  	%rd3427, %rd3400, %rd3426;
	xor.b64  	%rd3428, %rd3427, %rd3326;
	add.s64 	%rd3429, %rd3425, %rd3428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2300,%dummy}, %rd3400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2301}, %rd3400;
	}
	shf.r.wrap.b32 	%r2302, %r2301, %r2300, 14;
	shf.r.wrap.b32 	%r2303, %r2300, %r2301, 14;
	mov.b64 	%rd3430, {%r2303, %r2302};
	shf.r.wrap.b32 	%r2304, %r2301, %r2300, 18;
	shf.r.wrap.b32 	%r2305, %r2300, %r2301, 18;
	mov.b64 	%rd3431, {%r2305, %r2304};
	xor.b64  	%rd3432, %rd3430, %rd3431;
	shf.l.wrap.b32 	%r2306, %r2300, %r2301, 23;
	shf.l.wrap.b32 	%r2307, %r2301, %r2300, 23;
	mov.b64 	%rd3433, {%r2307, %r2306};
	xor.b64  	%rd3434, %rd3432, %rd3433;
	add.s64 	%rd3435, %rd3429, %rd3434;
	add.s64 	%rd3436, %rd3435, 1135362057144423861;
	add.s64 	%rd3437, %rd3436, %rd3313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2308,%dummy}, %rd3411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2309}, %rd3411;
	}
	shf.r.wrap.b32 	%r2310, %r2309, %r2308, 28;
	shf.r.wrap.b32 	%r2311, %r2308, %r2309, 28;
	mov.b64 	%rd3438, {%r2311, %r2310};
	shf.l.wrap.b32 	%r2312, %r2308, %r2309, 30;
	shf.l.wrap.b32 	%r2313, %r2309, %r2308, 30;
	mov.b64 	%rd3439, {%r2313, %r2312};
	xor.b64  	%rd3440, %rd3438, %rd3439;
	shf.l.wrap.b32 	%r2314, %r2308, %r2309, 25;
	shf.l.wrap.b32 	%r2315, %r2309, %r2308, 25;
	mov.b64 	%rd3441, {%r2315, %r2314};
	xor.b64  	%rd3442, %rd3440, %rd3441;
	and.b64  	%rd3443, %rd3411, %rd3374;
	or.b64  	%rd3444, %rd3411, %rd3374;
	and.b64  	%rd3445, %rd3444, %rd3337;
	or.b64  	%rd3446, %rd3445, %rd3443;
	add.s64 	%rd3447, %rd3446, %rd3442;
	add.s64 	%rd3448, %rd3447, %rd3436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2316,%dummy}, %rd3387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2317}, %rd3387;
	}
	shf.r.wrap.b32 	%r2318, %r2317, %r2316, 19;
	shf.r.wrap.b32 	%r2319, %r2316, %r2317, 19;
	mov.b64 	%rd3449, {%r2319, %r2318};
	shf.l.wrap.b32 	%r2320, %r2316, %r2317, 3;
	shf.l.wrap.b32 	%r2321, %r2317, %r2316, 3;
	mov.b64 	%rd3450, {%r2321, %r2320};
	xor.b64  	%rd3451, %rd3449, %rd3450;
	shr.u64 	%rd3452, %rd3387, 6;
	xor.b64  	%rd3453, %rd3451, %rd3452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2322,%dummy}, %rd3026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2323}, %rd3026;
	}
	shf.r.wrap.b32 	%r2324, %r2323, %r2322, 1;
	shf.r.wrap.b32 	%r2325, %r2322, %r2323, 1;
	mov.b64 	%rd3454, {%r2325, %r2324};
	shf.r.wrap.b32 	%r2326, %r2323, %r2322, 8;
	shf.r.wrap.b32 	%r2327, %r2322, %r2323, 8;
	mov.b64 	%rd3455, {%r2327, %r2326};
	xor.b64  	%rd3456, %rd3454, %rd3455;
	shr.u64 	%rd3457, %rd3026, 7;
	xor.b64  	%rd3458, %rd3456, %rd3457;
	add.s64 	%rd3459, %rd3453, %rd2977;
	add.s64 	%rd3460, %rd3459, %rd3234;
	add.s64 	%rd3461, %rd3460, %rd3458;
	add.s64 	%rd3462, %rd3461, %rd3326;
	xor.b64  	%rd3463, %rd3400, %rd3363;
	and.b64  	%rd3464, %rd3437, %rd3463;
	xor.b64  	%rd3465, %rd3464, %rd3363;
	add.s64 	%rd3466, %rd3462, %rd3465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2328,%dummy}, %rd3437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2329}, %rd3437;
	}
	shf.r.wrap.b32 	%r2330, %r2329, %r2328, 14;
	shf.r.wrap.b32 	%r2331, %r2328, %r2329, 14;
	mov.b64 	%rd3467, {%r2331, %r2330};
	shf.r.wrap.b32 	%r2332, %r2329, %r2328, 18;
	shf.r.wrap.b32 	%r2333, %r2328, %r2329, 18;
	mov.b64 	%rd3468, {%r2333, %r2332};
	xor.b64  	%rd3469, %rd3467, %rd3468;
	shf.l.wrap.b32 	%r2334, %r2328, %r2329, 23;
	shf.l.wrap.b32 	%r2335, %r2329, %r2328, 23;
	mov.b64 	%rd3470, {%r2335, %r2334};
	xor.b64  	%rd3471, %rd3469, %rd3470;
	add.s64 	%rd3472, %rd3466, %rd3471;
	add.s64 	%rd3473, %rd3472, 2597628984639134821;
	add.s64 	%rd3474, %rd3473, %rd3337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2336,%dummy}, %rd3448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2337}, %rd3448;
	}
	shf.r.wrap.b32 	%r2338, %r2337, %r2336, 28;
	shf.r.wrap.b32 	%r2339, %r2336, %r2337, 28;
	mov.b64 	%rd3475, {%r2339, %r2338};
	shf.l.wrap.b32 	%r2340, %r2336, %r2337, 30;
	shf.l.wrap.b32 	%r2341, %r2337, %r2336, 30;
	mov.b64 	%rd3476, {%r2341, %r2340};
	xor.b64  	%rd3477, %rd3475, %rd3476;
	shf.l.wrap.b32 	%r2342, %r2336, %r2337, 25;
	shf.l.wrap.b32 	%r2343, %r2337, %r2336, 25;
	mov.b64 	%rd3478, {%r2343, %r2342};
	xor.b64  	%rd3479, %rd3477, %rd3478;
	and.b64  	%rd3480, %rd3448, %rd3411;
	or.b64  	%rd3481, %rd3448, %rd3411;
	and.b64  	%rd3482, %rd3481, %rd3374;
	or.b64  	%rd3483, %rd3482, %rd3480;
	add.s64 	%rd3484, %rd3483, %rd3479;
	add.s64 	%rd3485, %rd3484, %rd3473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2344,%dummy}, %rd3424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2345}, %rd3424;
	}
	shf.r.wrap.b32 	%r2346, %r2345, %r2344, 19;
	shf.r.wrap.b32 	%r2347, %r2344, %r2345, 19;
	mov.b64 	%rd3486, {%r2347, %r2346};
	shf.l.wrap.b32 	%r2348, %r2344, %r2345, 3;
	shf.l.wrap.b32 	%r2349, %r2345, %r2344, 3;
	mov.b64 	%rd3487, {%r2349, %r2348};
	xor.b64  	%rd3488, %rd3486, %rd3487;
	shr.u64 	%rd3489, %rd3424, 6;
	xor.b64  	%rd3490, %rd3488, %rd3489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2350,%dummy}, %rd3027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2351}, %rd3027;
	}
	shf.r.wrap.b32 	%r2352, %r2351, %r2350, 1;
	shf.r.wrap.b32 	%r2353, %r2350, %r2351, 1;
	mov.b64 	%rd3491, {%r2353, %r2352};
	shf.r.wrap.b32 	%r2354, %r2351, %r2350, 8;
	shf.r.wrap.b32 	%r2355, %r2350, %r2351, 8;
	mov.b64 	%rd3492, {%r2355, %r2354};
	xor.b64  	%rd3493, %rd3491, %rd3492;
	shr.u64 	%rd3494, %rd3027, 7;
	xor.b64  	%rd3495, %rd3493, %rd3494;
	add.s64 	%rd3496, %rd3490, %rd3026;
	add.s64 	%rd3497, %rd3496, %rd3235;
	add.s64 	%rd3498, %rd3497, %rd3495;
	add.s64 	%rd3499, %rd3498, %rd3363;
	xor.b64  	%rd3500, %rd3437, %rd3400;
	and.b64  	%rd3501, %rd3474, %rd3500;
	xor.b64  	%rd3502, %rd3501, %rd3400;
	add.s64 	%rd3503, %rd3499, %rd3502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd3474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd3474;
	}
	shf.r.wrap.b32 	%r2358, %r2357, %r2356, 14;
	shf.r.wrap.b32 	%r2359, %r2356, %r2357, 14;
	mov.b64 	%rd3504, {%r2359, %r2358};
	shf.r.wrap.b32 	%r2360, %r2357, %r2356, 18;
	shf.r.wrap.b32 	%r2361, %r2356, %r2357, 18;
	mov.b64 	%rd3505, {%r2361, %r2360};
	xor.b64  	%rd3506, %rd3504, %rd3505;
	shf.l.wrap.b32 	%r2362, %r2356, %r2357, 23;
	shf.l.wrap.b32 	%r2363, %r2357, %r2356, 23;
	mov.b64 	%rd3507, {%r2363, %r2362};
	xor.b64  	%rd3508, %rd3506, %rd3507;
	add.s64 	%rd3509, %rd3503, %rd3508;
	add.s64 	%rd3510, %rd3509, 3308224258029322869;
	add.s64 	%rd3511, %rd3510, %rd3374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2364,%dummy}, %rd3485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2365}, %rd3485;
	}
	shf.r.wrap.b32 	%r2366, %r2365, %r2364, 28;
	shf.r.wrap.b32 	%r2367, %r2364, %r2365, 28;
	mov.b64 	%rd3512, {%r2367, %r2366};
	shf.l.wrap.b32 	%r2368, %r2364, %r2365, 30;
	shf.l.wrap.b32 	%r2369, %r2365, %r2364, 30;
	mov.b64 	%rd3513, {%r2369, %r2368};
	xor.b64  	%rd3514, %rd3512, %rd3513;
	shf.l.wrap.b32 	%r2370, %r2364, %r2365, 25;
	shf.l.wrap.b32 	%r2371, %r2365, %r2364, 25;
	mov.b64 	%rd3515, {%r2371, %r2370};
	xor.b64  	%rd3516, %rd3514, %rd3515;
	and.b64  	%rd3517, %rd3485, %rd3448;
	or.b64  	%rd3518, %rd3485, %rd3448;
	and.b64  	%rd3519, %rd3518, %rd3411;
	or.b64  	%rd3520, %rd3519, %rd3517;
	add.s64 	%rd3521, %rd3520, %rd3516;
	add.s64 	%rd3522, %rd3521, %rd3510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2372,%dummy}, %rd3461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2373}, %rd3461;
	}
	shf.r.wrap.b32 	%r2374, %r2373, %r2372, 19;
	shf.r.wrap.b32 	%r2375, %r2372, %r2373, 19;
	mov.b64 	%rd3523, {%r2375, %r2374};
	shf.l.wrap.b32 	%r2376, %r2372, %r2373, 3;
	shf.l.wrap.b32 	%r2377, %r2373, %r2372, 3;
	mov.b64 	%rd3524, {%r2377, %r2376};
	xor.b64  	%rd3525, %rd3523, %rd3524;
	shr.u64 	%rd3526, %rd3461, 6;
	xor.b64  	%rd3527, %rd3525, %rd3526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2378,%dummy}, %rd3078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2379}, %rd3078;
	}
	shf.r.wrap.b32 	%r2380, %r2379, %r2378, 1;
	shf.r.wrap.b32 	%r2381, %r2378, %r2379, 1;
	mov.b64 	%rd3528, {%r2381, %r2380};
	shf.r.wrap.b32 	%r2382, %r2379, %r2378, 8;
	shf.r.wrap.b32 	%r2383, %r2378, %r2379, 8;
	mov.b64 	%rd3529, {%r2383, %r2382};
	xor.b64  	%rd3530, %rd3528, %rd3529;
	shr.u64 	%rd3531, %rd3078, 7;
	xor.b64  	%rd3532, %rd3530, %rd3531;
	add.s64 	%rd3533, %rd3527, %rd3027;
	add.s64 	%rd3534, %rd3533, %rd3286;
	add.s64 	%rd3535, %rd3534, %rd3532;
	add.s64 	%rd3536, %rd3535, %rd3400;
	xor.b64  	%rd3537, %rd3474, %rd3437;
	and.b64  	%rd3538, %rd3511, %rd3537;
	xor.b64  	%rd3539, %rd3538, %rd3437;
	add.s64 	%rd3540, %rd3536, %rd3539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2384,%dummy}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2385}, %rd3511;
	}
	shf.r.wrap.b32 	%r2386, %r2385, %r2384, 14;
	shf.r.wrap.b32 	%r2387, %r2384, %r2385, 14;
	mov.b64 	%rd3541, {%r2387, %r2386};
	shf.r.wrap.b32 	%r2388, %r2385, %r2384, 18;
	shf.r.wrap.b32 	%r2389, %r2384, %r2385, 18;
	mov.b64 	%rd3542, {%r2389, %r2388};
	xor.b64  	%rd3543, %rd3541, %rd3542;
	shf.l.wrap.b32 	%r2390, %r2384, %r2385, 23;
	shf.l.wrap.b32 	%r2391, %r2385, %r2384, 23;
	mov.b64 	%rd3544, {%r2391, %r2390};
	xor.b64  	%rd3545, %rd3543, %rd3544;
	add.s64 	%rd3546, %rd3540, %rd3545;
	add.s64 	%rd3547, %rd3546, 5365058923640841347;
	add.s64 	%rd3548, %rd3547, %rd3411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2392,%dummy}, %rd3522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2393}, %rd3522;
	}
	shf.r.wrap.b32 	%r2394, %r2393, %r2392, 28;
	shf.r.wrap.b32 	%r2395, %r2392, %r2393, 28;
	mov.b64 	%rd3549, {%r2395, %r2394};
	shf.l.wrap.b32 	%r2396, %r2392, %r2393, 30;
	shf.l.wrap.b32 	%r2397, %r2393, %r2392, 30;
	mov.b64 	%rd3550, {%r2397, %r2396};
	xor.b64  	%rd3551, %rd3549, %rd3550;
	shf.l.wrap.b32 	%r2398, %r2392, %r2393, 25;
	shf.l.wrap.b32 	%r2399, %r2393, %r2392, 25;
	mov.b64 	%rd3552, {%r2399, %r2398};
	xor.b64  	%rd3553, %rd3551, %rd3552;
	and.b64  	%rd3554, %rd3522, %rd3485;
	or.b64  	%rd3555, %rd3522, %rd3485;
	and.b64  	%rd3556, %rd3555, %rd3448;
	or.b64  	%rd3557, %rd3556, %rd3554;
	add.s64 	%rd3558, %rd3557, %rd3553;
	add.s64 	%rd3559, %rd3558, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2400,%dummy}, %rd3498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd3498;
	}
	shf.r.wrap.b32 	%r2402, %r2401, %r2400, 19;
	shf.r.wrap.b32 	%r2403, %r2400, %r2401, 19;
	mov.b64 	%rd3560, {%r2403, %r2402};
	shf.l.wrap.b32 	%r2404, %r2400, %r2401, 3;
	shf.l.wrap.b32 	%r2405, %r2401, %r2400, 3;
	mov.b64 	%rd3561, {%r2405, %r2404};
	xor.b64  	%rd3562, %rd3560, %rd3561;
	shr.u64 	%rd3563, %rd3498, 6;
	xor.b64  	%rd3564, %rd3562, %rd3563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2406,%dummy}, %rd3079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2407}, %rd3079;
	}
	shf.r.wrap.b32 	%r2408, %r2407, %r2406, 1;
	shf.r.wrap.b32 	%r2409, %r2406, %r2407, 1;
	mov.b64 	%rd3565, {%r2409, %r2408};
	shf.r.wrap.b32 	%r2410, %r2407, %r2406, 8;
	shf.r.wrap.b32 	%r2411, %r2406, %r2407, 8;
	mov.b64 	%rd3566, {%r2411, %r2410};
	xor.b64  	%rd3567, %rd3565, %rd3566;
	shr.u64 	%rd3568, %rd3079, 7;
	xor.b64  	%rd3569, %rd3567, %rd3568;
	add.s64 	%rd3570, %rd3564, %rd3078;
	add.s64 	%rd3571, %rd3570, %rd3287;
	add.s64 	%rd3572, %rd3571, %rd3569;
	add.s64 	%rd3573, %rd3572, %rd3437;
	xor.b64  	%rd3574, %rd3511, %rd3474;
	and.b64  	%rd3575, %rd3548, %rd3574;
	xor.b64  	%rd3576, %rd3575, %rd3474;
	add.s64 	%rd3577, %rd3573, %rd3576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2412,%dummy}, %rd3548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd3548;
	}
	shf.r.wrap.b32 	%r2414, %r2413, %r2412, 14;
	shf.r.wrap.b32 	%r2415, %r2412, %r2413, 14;
	mov.b64 	%rd3578, {%r2415, %r2414};
	shf.r.wrap.b32 	%r2416, %r2413, %r2412, 18;
	shf.r.wrap.b32 	%r2417, %r2412, %r2413, 18;
	mov.b64 	%rd3579, {%r2417, %r2416};
	xor.b64  	%rd3580, %rd3578, %rd3579;
	shf.l.wrap.b32 	%r2418, %r2412, %r2413, 23;
	shf.l.wrap.b32 	%r2419, %r2413, %r2412, 23;
	mov.b64 	%rd3581, {%r2419, %r2418};
	xor.b64  	%rd3582, %rd3580, %rd3581;
	add.s64 	%rd3583, %rd3577, %rd3582;
	add.s64 	%rd3584, %rd3583, 6679025012923562964;
	add.s64 	%rd3585, %rd3584, %rd3448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2420,%dummy}, %rd3559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2421}, %rd3559;
	}
	shf.r.wrap.b32 	%r2422, %r2421, %r2420, 28;
	shf.r.wrap.b32 	%r2423, %r2420, %r2421, 28;
	mov.b64 	%rd3586, {%r2423, %r2422};
	shf.l.wrap.b32 	%r2424, %r2420, %r2421, 30;
	shf.l.wrap.b32 	%r2425, %r2421, %r2420, 30;
	mov.b64 	%rd3587, {%r2425, %r2424};
	xor.b64  	%rd3588, %rd3586, %rd3587;
	shf.l.wrap.b32 	%r2426, %r2420, %r2421, 25;
	shf.l.wrap.b32 	%r2427, %r2421, %r2420, 25;
	mov.b64 	%rd3589, {%r2427, %r2426};
	xor.b64  	%rd3590, %rd3588, %rd3589;
	and.b64  	%rd3591, %rd3559, %rd3522;
	or.b64  	%rd3592, %rd3559, %rd3522;
	and.b64  	%rd3593, %rd3592, %rd3485;
	or.b64  	%rd3594, %rd3593, %rd3591;
	add.s64 	%rd3595, %rd3594, %rd3590;
	add.s64 	%rd3596, %rd3595, %rd3584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2428,%dummy}, %rd3535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2429}, %rd3535;
	}
	shf.r.wrap.b32 	%r2430, %r2429, %r2428, 19;
	shf.r.wrap.b32 	%r2431, %r2428, %r2429, 19;
	mov.b64 	%rd3597, {%r2431, %r2430};
	shf.l.wrap.b32 	%r2432, %r2428, %r2429, 3;
	shf.l.wrap.b32 	%r2433, %r2429, %r2428, 3;
	mov.b64 	%rd3598, {%r2433, %r2432};
	xor.b64  	%rd3599, %rd3597, %rd3598;
	shr.u64 	%rd3600, %rd3535, 6;
	xor.b64  	%rd3601, %rd3599, %rd3600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2434,%dummy}, %rd3130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2435}, %rd3130;
	}
	shf.r.wrap.b32 	%r2436, %r2435, %r2434, 1;
	shf.r.wrap.b32 	%r2437, %r2434, %r2435, 1;
	mov.b64 	%rd3602, {%r2437, %r2436};
	shf.r.wrap.b32 	%r2438, %r2435, %r2434, 8;
	shf.r.wrap.b32 	%r2439, %r2434, %r2435, 8;
	mov.b64 	%rd3603, {%r2439, %r2438};
	xor.b64  	%rd3604, %rd3602, %rd3603;
	shr.u64 	%rd3605, %rd3130, 7;
	xor.b64  	%rd3606, %rd3604, %rd3605;
	add.s64 	%rd3607, %rd3601, %rd3079;
	add.s64 	%rd3608, %rd3607, %rd3350;
	add.s64 	%rd3609, %rd3608, %rd3606;
	add.s64 	%rd3610, %rd3609, %rd3474;
	xor.b64  	%rd3611, %rd3548, %rd3511;
	and.b64  	%rd3612, %rd3585, %rd3611;
	xor.b64  	%rd3613, %rd3612, %rd3511;
	add.s64 	%rd3614, %rd3610, %rd3613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2440,%dummy}, %rd3585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2441}, %rd3585;
	}
	shf.r.wrap.b32 	%r2442, %r2441, %r2440, 14;
	shf.r.wrap.b32 	%r2443, %r2440, %r2441, 14;
	mov.b64 	%rd3615, {%r2443, %r2442};
	shf.r.wrap.b32 	%r2444, %r2441, %r2440, 18;
	shf.r.wrap.b32 	%r2445, %r2440, %r2441, 18;
	mov.b64 	%rd3616, {%r2445, %r2444};
	xor.b64  	%rd3617, %rd3615, %rd3616;
	shf.l.wrap.b32 	%r2446, %r2440, %r2441, 23;
	shf.l.wrap.b32 	%r2447, %r2441, %r2440, 23;
	mov.b64 	%rd3618, {%r2447, %r2446};
	xor.b64  	%rd3619, %rd3617, %rd3618;
	add.s64 	%rd3620, %rd3614, %rd3619;
	add.s64 	%rd3621, %rd3620, 8573033837759648693;
	add.s64 	%rd3622, %rd3621, %rd3485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2448,%dummy}, %rd3596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2449}, %rd3596;
	}
	shf.r.wrap.b32 	%r2450, %r2449, %r2448, 28;
	shf.r.wrap.b32 	%r2451, %r2448, %r2449, 28;
	mov.b64 	%rd3623, {%r2451, %r2450};
	shf.l.wrap.b32 	%r2452, %r2448, %r2449, 30;
	shf.l.wrap.b32 	%r2453, %r2449, %r2448, 30;
	mov.b64 	%rd3624, {%r2453, %r2452};
	xor.b64  	%rd3625, %rd3623, %rd3624;
	shf.l.wrap.b32 	%r2454, %r2448, %r2449, 25;
	shf.l.wrap.b32 	%r2455, %r2449, %r2448, 25;
	mov.b64 	%rd3626, {%r2455, %r2454};
	xor.b64  	%rd3627, %rd3625, %rd3626;
	and.b64  	%rd3628, %rd3596, %rd3559;
	or.b64  	%rd3629, %rd3596, %rd3559;
	and.b64  	%rd3630, %rd3629, %rd3522;
	or.b64  	%rd3631, %rd3630, %rd3628;
	add.s64 	%rd3632, %rd3631, %rd3627;
	add.s64 	%rd3633, %rd3632, %rd3621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2456,%dummy}, %rd3572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2457}, %rd3572;
	}
	shf.r.wrap.b32 	%r2458, %r2457, %r2456, 19;
	shf.r.wrap.b32 	%r2459, %r2456, %r2457, 19;
	mov.b64 	%rd3634, {%r2459, %r2458};
	shf.l.wrap.b32 	%r2460, %r2456, %r2457, 3;
	shf.l.wrap.b32 	%r2461, %r2457, %r2456, 3;
	mov.b64 	%rd3635, {%r2461, %r2460};
	xor.b64  	%rd3636, %rd3634, %rd3635;
	shr.u64 	%rd3637, %rd3572, 6;
	xor.b64  	%rd3638, %rd3636, %rd3637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2462,%dummy}, %rd3131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2463}, %rd3131;
	}
	shf.r.wrap.b32 	%r2464, %r2463, %r2462, 1;
	shf.r.wrap.b32 	%r2465, %r2462, %r2463, 1;
	mov.b64 	%rd3639, {%r2465, %r2464};
	shf.r.wrap.b32 	%r2466, %r2463, %r2462, 8;
	shf.r.wrap.b32 	%r2467, %r2462, %r2463, 8;
	mov.b64 	%rd3640, {%r2467, %r2466};
	xor.b64  	%rd3641, %rd3639, %rd3640;
	shr.u64 	%rd3642, %rd3131, 7;
	xor.b64  	%rd3643, %rd3641, %rd3642;
	add.s64 	%rd3644, %rd3638, %rd3130;
	add.s64 	%rd3645, %rd3644, %rd3387;
	add.s64 	%rd3646, %rd3645, %rd3643;
	add.s64 	%rd3647, %rd3646, %rd3511;
	xor.b64  	%rd3648, %rd3585, %rd3548;
	and.b64  	%rd3649, %rd3622, %rd3648;
	xor.b64  	%rd3650, %rd3649, %rd3548;
	add.s64 	%rd3651, %rd3647, %rd3650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2468,%dummy}, %rd3622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2469}, %rd3622;
	}
	shf.r.wrap.b32 	%r2470, %r2469, %r2468, 14;
	shf.r.wrap.b32 	%r2471, %r2468, %r2469, 14;
	mov.b64 	%rd3652, {%r2471, %r2470};
	shf.r.wrap.b32 	%r2472, %r2469, %r2468, 18;
	shf.r.wrap.b32 	%r2473, %r2468, %r2469, 18;
	mov.b64 	%rd3653, {%r2473, %r2472};
	xor.b64  	%rd3654, %rd3652, %rd3653;
	shf.l.wrap.b32 	%r2474, %r2468, %r2469, 23;
	shf.l.wrap.b32 	%r2475, %r2469, %r2468, 23;
	mov.b64 	%rd3655, {%r2475, %r2474};
	xor.b64  	%rd3656, %rd3654, %rd3655;
	add.s64 	%rd3657, %rd3651, %rd3656;
	add.s64 	%rd3658, %rd3657, -7476448914759557205;
	add.s64 	%rd3659, %rd3658, %rd3522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2476,%dummy}, %rd3633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2477}, %rd3633;
	}
	shf.r.wrap.b32 	%r2478, %r2477, %r2476, 28;
	shf.r.wrap.b32 	%r2479, %r2476, %r2477, 28;
	mov.b64 	%rd3660, {%r2479, %r2478};
	shf.l.wrap.b32 	%r2480, %r2476, %r2477, 30;
	shf.l.wrap.b32 	%r2481, %r2477, %r2476, 30;
	mov.b64 	%rd3661, {%r2481, %r2480};
	xor.b64  	%rd3662, %rd3660, %rd3661;
	shf.l.wrap.b32 	%r2482, %r2476, %r2477, 25;
	shf.l.wrap.b32 	%r2483, %r2477, %r2476, 25;
	mov.b64 	%rd3663, {%r2483, %r2482};
	xor.b64  	%rd3664, %rd3662, %rd3663;
	and.b64  	%rd3665, %rd3633, %rd3596;
	or.b64  	%rd3666, %rd3633, %rd3596;
	and.b64  	%rd3667, %rd3666, %rd3559;
	or.b64  	%rd3668, %rd3667, %rd3665;
	add.s64 	%rd3669, %rd3668, %rd3664;
	add.s64 	%rd3670, %rd3669, %rd3658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2484,%dummy}, %rd3609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2485}, %rd3609;
	}
	shf.r.wrap.b32 	%r2486, %r2485, %r2484, 19;
	shf.r.wrap.b32 	%r2487, %r2484, %r2485, 19;
	mov.b64 	%rd3671, {%r2487, %r2486};
	shf.l.wrap.b32 	%r2488, %r2484, %r2485, 3;
	shf.l.wrap.b32 	%r2489, %r2485, %r2484, 3;
	mov.b64 	%rd3672, {%r2489, %r2488};
	xor.b64  	%rd3673, %rd3671, %rd3672;
	shr.u64 	%rd3674, %rd3609, 6;
	xor.b64  	%rd3675, %rd3673, %rd3674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2490,%dummy}, %rd3182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2491}, %rd3182;
	}
	shf.r.wrap.b32 	%r2492, %r2491, %r2490, 1;
	shf.r.wrap.b32 	%r2493, %r2490, %r2491, 1;
	mov.b64 	%rd3676, {%r2493, %r2492};
	shf.r.wrap.b32 	%r2494, %r2491, %r2490, 8;
	shf.r.wrap.b32 	%r2495, %r2490, %r2491, 8;
	mov.b64 	%rd3677, {%r2495, %r2494};
	xor.b64  	%rd3678, %rd3676, %rd3677;
	shr.u64 	%rd3679, %rd3182, 7;
	xor.b64  	%rd3680, %rd3678, %rd3679;
	add.s64 	%rd3681, %rd3675, %rd3131;
	add.s64 	%rd3682, %rd3681, %rd3424;
	add.s64 	%rd3683, %rd3682, %rd3680;
	add.s64 	%rd3684, %rd3683, %rd3548;
	xor.b64  	%rd3685, %rd3622, %rd3585;
	and.b64  	%rd3686, %rd3659, %rd3685;
	xor.b64  	%rd3687, %rd3686, %rd3585;
	add.s64 	%rd3688, %rd3684, %rd3687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd3659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd3659;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 14;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 14;
	mov.b64 	%rd3689, {%r2499, %r2498};
	shf.r.wrap.b32 	%r2500, %r2497, %r2496, 18;
	shf.r.wrap.b32 	%r2501, %r2496, %r2497, 18;
	mov.b64 	%rd3690, {%r2501, %r2500};
	xor.b64  	%rd3691, %rd3689, %rd3690;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 23;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 23;
	mov.b64 	%rd3692, {%r2503, %r2502};
	xor.b64  	%rd3693, %rd3691, %rd3692;
	add.s64 	%rd3694, %rd3688, %rd3693;
	add.s64 	%rd3695, %rd3694, -6327057829258317296;
	add.s64 	%rd3696, %rd3695, %rd3559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2504,%dummy}, %rd3670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2505}, %rd3670;
	}
	shf.r.wrap.b32 	%r2506, %r2505, %r2504, 28;
	shf.r.wrap.b32 	%r2507, %r2504, %r2505, 28;
	mov.b64 	%rd3697, {%r2507, %r2506};
	shf.l.wrap.b32 	%r2508, %r2504, %r2505, 30;
	shf.l.wrap.b32 	%r2509, %r2505, %r2504, 30;
	mov.b64 	%rd3698, {%r2509, %r2508};
	xor.b64  	%rd3699, %rd3697, %rd3698;
	shf.l.wrap.b32 	%r2510, %r2504, %r2505, 25;
	shf.l.wrap.b32 	%r2511, %r2505, %r2504, 25;
	mov.b64 	%rd3700, {%r2511, %r2510};
	xor.b64  	%rd3701, %rd3699, %rd3700;
	and.b64  	%rd3702, %rd3670, %rd3633;
	or.b64  	%rd3703, %rd3670, %rd3633;
	and.b64  	%rd3704, %rd3703, %rd3596;
	or.b64  	%rd3705, %rd3704, %rd3702;
	add.s64 	%rd3706, %rd3705, %rd3701;
	add.s64 	%rd3707, %rd3706, %rd3695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2512,%dummy}, %rd3646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2513}, %rd3646;
	}
	shf.r.wrap.b32 	%r2514, %r2513, %r2512, 19;
	shf.r.wrap.b32 	%r2515, %r2512, %r2513, 19;
	mov.b64 	%rd3708, {%r2515, %r2514};
	shf.l.wrap.b32 	%r2516, %r2512, %r2513, 3;
	shf.l.wrap.b32 	%r2517, %r2513, %r2512, 3;
	mov.b64 	%rd3709, {%r2517, %r2516};
	xor.b64  	%rd3710, %rd3708, %rd3709;
	shr.u64 	%rd3711, %rd3646, 6;
	xor.b64  	%rd3712, %rd3710, %rd3711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2518,%dummy}, %rd3183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2519}, %rd3183;
	}
	shf.r.wrap.b32 	%r2520, %r2519, %r2518, 1;
	shf.r.wrap.b32 	%r2521, %r2518, %r2519, 1;
	mov.b64 	%rd3713, {%r2521, %r2520};
	shf.r.wrap.b32 	%r2522, %r2519, %r2518, 8;
	shf.r.wrap.b32 	%r2523, %r2518, %r2519, 8;
	mov.b64 	%rd3714, {%r2523, %r2522};
	xor.b64  	%rd3715, %rd3713, %rd3714;
	shr.u64 	%rd3716, %rd3183, 7;
	xor.b64  	%rd3717, %rd3715, %rd3716;
	add.s64 	%rd3718, %rd3712, %rd3182;
	add.s64 	%rd3719, %rd3718, %rd3461;
	add.s64 	%rd3720, %rd3719, %rd3717;
	add.s64 	%rd3721, %rd3720, %rd3585;
	xor.b64  	%rd3722, %rd3659, %rd3622;
	and.b64  	%rd3723, %rd3696, %rd3722;
	xor.b64  	%rd3724, %rd3723, %rd3622;
	add.s64 	%rd3725, %rd3721, %rd3724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2524,%dummy}, %rd3696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2525}, %rd3696;
	}
	shf.r.wrap.b32 	%r2526, %r2525, %r2524, 14;
	shf.r.wrap.b32 	%r2527, %r2524, %r2525, 14;
	mov.b64 	%rd3726, {%r2527, %r2526};
	shf.r.wrap.b32 	%r2528, %r2525, %r2524, 18;
	shf.r.wrap.b32 	%r2529, %r2524, %r2525, 18;
	mov.b64 	%rd3727, {%r2529, %r2528};
	xor.b64  	%rd3728, %rd3726, %rd3727;
	shf.l.wrap.b32 	%r2530, %r2524, %r2525, 23;
	shf.l.wrap.b32 	%r2531, %r2525, %r2524, 23;
	mov.b64 	%rd3729, {%r2531, %r2530};
	xor.b64  	%rd3730, %rd3728, %rd3729;
	add.s64 	%rd3731, %rd3725, %rd3730;
	add.s64 	%rd3732, %rd3731, -5763719355590565569;
	add.s64 	%rd3733, %rd3732, %rd3596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2532,%dummy}, %rd3707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2533}, %rd3707;
	}
	shf.r.wrap.b32 	%r2534, %r2533, %r2532, 28;
	shf.r.wrap.b32 	%r2535, %r2532, %r2533, 28;
	mov.b64 	%rd3734, {%r2535, %r2534};
	shf.l.wrap.b32 	%r2536, %r2532, %r2533, 30;
	shf.l.wrap.b32 	%r2537, %r2533, %r2532, 30;
	mov.b64 	%rd3735, {%r2537, %r2536};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	shf.l.wrap.b32 	%r2538, %r2532, %r2533, 25;
	shf.l.wrap.b32 	%r2539, %r2533, %r2532, 25;
	mov.b64 	%rd3737, {%r2539, %r2538};
	xor.b64  	%rd3738, %rd3736, %rd3737;
	and.b64  	%rd3739, %rd3707, %rd3670;
	or.b64  	%rd3740, %rd3707, %rd3670;
	and.b64  	%rd3741, %rd3740, %rd3633;
	or.b64  	%rd3742, %rd3741, %rd3739;
	add.s64 	%rd3743, %rd3742, %rd3738;
	add.s64 	%rd3744, %rd3743, %rd3732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2540,%dummy}, %rd3683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2541}, %rd3683;
	}
	shf.r.wrap.b32 	%r2542, %r2541, %r2540, 19;
	shf.r.wrap.b32 	%r2543, %r2540, %r2541, 19;
	mov.b64 	%rd3745, {%r2543, %r2542};
	shf.l.wrap.b32 	%r2544, %r2540, %r2541, 3;
	shf.l.wrap.b32 	%r2545, %r2541, %r2540, 3;
	mov.b64 	%rd3746, {%r2545, %r2544};
	xor.b64  	%rd3747, %rd3745, %rd3746;
	shr.u64 	%rd3748, %rd3683, 6;
	xor.b64  	%rd3749, %rd3747, %rd3748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2546,%dummy}, %rd3234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2547}, %rd3234;
	}
	shf.r.wrap.b32 	%r2548, %r2547, %r2546, 1;
	shf.r.wrap.b32 	%r2549, %r2546, %r2547, 1;
	mov.b64 	%rd3750, {%r2549, %r2548};
	shf.r.wrap.b32 	%r2550, %r2547, %r2546, 8;
	shf.r.wrap.b32 	%r2551, %r2546, %r2547, 8;
	mov.b64 	%rd3751, {%r2551, %r2550};
	xor.b64  	%rd3752, %rd3750, %rd3751;
	shr.u64 	%rd3753, %rd3234, 7;
	xor.b64  	%rd3754, %rd3752, %rd3753;
	add.s64 	%rd3755, %rd3749, %rd3183;
	add.s64 	%rd3756, %rd3755, %rd3498;
	add.s64 	%rd3757, %rd3756, %rd3754;
	add.s64 	%rd3758, %rd3757, %rd3622;
	xor.b64  	%rd3759, %rd3696, %rd3659;
	and.b64  	%rd3760, %rd3733, %rd3759;
	xor.b64  	%rd3761, %rd3760, %rd3659;
	add.s64 	%rd3762, %rd3758, %rd3761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2552,%dummy}, %rd3733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd3733;
	}
	shf.r.wrap.b32 	%r2554, %r2553, %r2552, 14;
	shf.r.wrap.b32 	%r2555, %r2552, %r2553, 14;
	mov.b64 	%rd3763, {%r2555, %r2554};
	shf.r.wrap.b32 	%r2556, %r2553, %r2552, 18;
	shf.r.wrap.b32 	%r2557, %r2552, %r2553, 18;
	mov.b64 	%rd3764, {%r2557, %r2556};
	xor.b64  	%rd3765, %rd3763, %rd3764;
	shf.l.wrap.b32 	%r2558, %r2552, %r2553, 23;
	shf.l.wrap.b32 	%r2559, %r2553, %r2552, 23;
	mov.b64 	%rd3766, {%r2559, %r2558};
	xor.b64  	%rd3767, %rd3765, %rd3766;
	add.s64 	%rd3768, %rd3762, %rd3767;
	add.s64 	%rd3769, %rd3768, -4658551843659510044;
	add.s64 	%rd3770, %rd3769, %rd3633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd3744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd3744;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 28;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 28;
	mov.b64 	%rd3771, {%r2563, %r2562};
	shf.l.wrap.b32 	%r2564, %r2560, %r2561, 30;
	shf.l.wrap.b32 	%r2565, %r2561, %r2560, 30;
	mov.b64 	%rd3772, {%r2565, %r2564};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	shf.l.wrap.b32 	%r2566, %r2560, %r2561, 25;
	shf.l.wrap.b32 	%r2567, %r2561, %r2560, 25;
	mov.b64 	%rd3774, {%r2567, %r2566};
	xor.b64  	%rd3775, %rd3773, %rd3774;
	and.b64  	%rd3776, %rd3744, %rd3707;
	or.b64  	%rd3777, %rd3744, %rd3707;
	and.b64  	%rd3778, %rd3777, %rd3670;
	or.b64  	%rd3779, %rd3778, %rd3776;
	add.s64 	%rd3780, %rd3779, %rd3775;
	add.s64 	%rd3781, %rd3780, %rd3769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2568,%dummy}, %rd3720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd3720;
	}
	shf.r.wrap.b32 	%r2570, %r2569, %r2568, 19;
	shf.r.wrap.b32 	%r2571, %r2568, %r2569, 19;
	mov.b64 	%rd3782, {%r2571, %r2570};
	shf.l.wrap.b32 	%r2572, %r2568, %r2569, 3;
	shf.l.wrap.b32 	%r2573, %r2569, %r2568, 3;
	mov.b64 	%rd3783, {%r2573, %r2572};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	shr.u64 	%rd3785, %rd3720, 6;
	xor.b64  	%rd3786, %rd3784, %rd3785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2574,%dummy}, %rd3235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2575}, %rd3235;
	}
	shf.r.wrap.b32 	%r2576, %r2575, %r2574, 1;
	shf.r.wrap.b32 	%r2577, %r2574, %r2575, 1;
	mov.b64 	%rd3787, {%r2577, %r2576};
	shf.r.wrap.b32 	%r2578, %r2575, %r2574, 8;
	shf.r.wrap.b32 	%r2579, %r2574, %r2575, 8;
	mov.b64 	%rd3788, {%r2579, %r2578};
	xor.b64  	%rd3789, %rd3787, %rd3788;
	shr.u64 	%rd3790, %rd3235, 7;
	xor.b64  	%rd3791, %rd3789, %rd3790;
	add.s64 	%rd3792, %rd3786, %rd3234;
	add.s64 	%rd3793, %rd3792, %rd3535;
	add.s64 	%rd3794, %rd3793, %rd3791;
	add.s64 	%rd3795, %rd3794, %rd3659;
	xor.b64  	%rd3796, %rd3733, %rd3696;
	and.b64  	%rd3797, %rd3770, %rd3796;
	xor.b64  	%rd3798, %rd3797, %rd3696;
	add.s64 	%rd3799, %rd3795, %rd3798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2580,%dummy}, %rd3770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2581}, %rd3770;
	}
	shf.r.wrap.b32 	%r2582, %r2581, %r2580, 14;
	shf.r.wrap.b32 	%r2583, %r2580, %r2581, 14;
	mov.b64 	%rd3800, {%r2583, %r2582};
	shf.r.wrap.b32 	%r2584, %r2581, %r2580, 18;
	shf.r.wrap.b32 	%r2585, %r2580, %r2581, 18;
	mov.b64 	%rd3801, {%r2585, %r2584};
	xor.b64  	%rd3802, %rd3800, %rd3801;
	shf.l.wrap.b32 	%r2586, %r2580, %r2581, 23;
	shf.l.wrap.b32 	%r2587, %r2581, %r2580, 23;
	mov.b64 	%rd3803, {%r2587, %r2586};
	xor.b64  	%rd3804, %rd3802, %rd3803;
	add.s64 	%rd3805, %rd3799, %rd3804;
	add.s64 	%rd3806, %rd3805, -4116276920077217854;
	add.s64 	%rd3807, %rd3806, %rd3670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2588,%dummy}, %rd3781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2589}, %rd3781;
	}
	shf.r.wrap.b32 	%r2590, %r2589, %r2588, 28;
	shf.r.wrap.b32 	%r2591, %r2588, %r2589, 28;
	mov.b64 	%rd3808, {%r2591, %r2590};
	shf.l.wrap.b32 	%r2592, %r2588, %r2589, 30;
	shf.l.wrap.b32 	%r2593, %r2589, %r2588, 30;
	mov.b64 	%rd3809, {%r2593, %r2592};
	xor.b64  	%rd3810, %rd3808, %rd3809;
	shf.l.wrap.b32 	%r2594, %r2588, %r2589, 25;
	shf.l.wrap.b32 	%r2595, %r2589, %r2588, 25;
	mov.b64 	%rd3811, {%r2595, %r2594};
	xor.b64  	%rd3812, %rd3810, %rd3811;
	and.b64  	%rd3813, %rd3781, %rd3744;
	or.b64  	%rd3814, %rd3781, %rd3744;
	and.b64  	%rd3815, %rd3814, %rd3707;
	or.b64  	%rd3816, %rd3815, %rd3813;
	add.s64 	%rd3817, %rd3816, %rd3812;
	add.s64 	%rd3818, %rd3817, %rd3806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2596,%dummy}, %rd3757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd3757;
	}
	shf.r.wrap.b32 	%r2598, %r2597, %r2596, 19;
	shf.r.wrap.b32 	%r2599, %r2596, %r2597, 19;
	mov.b64 	%rd3819, {%r2599, %r2598};
	shf.l.wrap.b32 	%r2600, %r2596, %r2597, 3;
	shf.l.wrap.b32 	%r2601, %r2597, %r2596, 3;
	mov.b64 	%rd3820, {%r2601, %r2600};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	shr.u64 	%rd3822, %rd3757, 6;
	xor.b64  	%rd3823, %rd3821, %rd3822;
	shf.r.wrap.b32 	%r2602, %r2233, %r2232, 1;
	shf.r.wrap.b32 	%r2603, %r2232, %r2233, 1;
	mov.b64 	%rd3824, {%r2603, %r2602};
	shf.r.wrap.b32 	%r2604, %r2233, %r2232, 8;
	shf.r.wrap.b32 	%r2605, %r2232, %r2233, 8;
	mov.b64 	%rd3825, {%r2605, %r2604};
	xor.b64  	%rd3826, %rd3824, %rd3825;
	shr.u64 	%rd3827, %rd3286, 7;
	xor.b64  	%rd3828, %rd3826, %rd3827;
	add.s64 	%rd3829, %rd3823, %rd3235;
	add.s64 	%rd3830, %rd3829, %rd3572;
	add.s64 	%rd3831, %rd3830, %rd3828;
	add.s64 	%rd3832, %rd3831, %rd3696;
	xor.b64  	%rd3833, %rd3770, %rd3733;
	and.b64  	%rd3834, %rd3807, %rd3833;
	xor.b64  	%rd3835, %rd3834, %rd3733;
	add.s64 	%rd3836, %rd3832, %rd3835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2606,%dummy}, %rd3807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2607}, %rd3807;
	}
	shf.r.wrap.b32 	%r2608, %r2607, %r2606, 14;
	shf.r.wrap.b32 	%r2609, %r2606, %r2607, 14;
	mov.b64 	%rd3837, {%r2609, %r2608};
	shf.r.wrap.b32 	%r2610, %r2607, %r2606, 18;
	shf.r.wrap.b32 	%r2611, %r2606, %r2607, 18;
	mov.b64 	%rd3838, {%r2611, %r2610};
	xor.b64  	%rd3839, %rd3837, %rd3838;
	shf.l.wrap.b32 	%r2612, %r2606, %r2607, 23;
	shf.l.wrap.b32 	%r2613, %r2607, %r2606, 23;
	mov.b64 	%rd3840, {%r2613, %r2612};
	xor.b64  	%rd3841, %rd3839, %rd3840;
	add.s64 	%rd3842, %rd3836, %rd3841;
	add.s64 	%rd3843, %rd3842, -3051310485924567259;
	add.s64 	%rd3844, %rd3843, %rd3707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2614,%dummy}, %rd3818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2615}, %rd3818;
	}
	shf.r.wrap.b32 	%r2616, %r2615, %r2614, 28;
	shf.r.wrap.b32 	%r2617, %r2614, %r2615, 28;
	mov.b64 	%rd3845, {%r2617, %r2616};
	shf.l.wrap.b32 	%r2618, %r2614, %r2615, 30;
	shf.l.wrap.b32 	%r2619, %r2615, %r2614, 30;
	mov.b64 	%rd3846, {%r2619, %r2618};
	xor.b64  	%rd3847, %rd3845, %rd3846;
	shf.l.wrap.b32 	%r2620, %r2614, %r2615, 25;
	shf.l.wrap.b32 	%r2621, %r2615, %r2614, 25;
	mov.b64 	%rd3848, {%r2621, %r2620};
	xor.b64  	%rd3849, %rd3847, %rd3848;
	and.b64  	%rd3850, %rd3818, %rd3781;
	or.b64  	%rd3851, %rd3818, %rd3781;
	and.b64  	%rd3852, %rd3851, %rd3744;
	or.b64  	%rd3853, %rd3852, %rd3850;
	add.s64 	%rd3854, %rd3853, %rd3849;
	add.s64 	%rd3855, %rd3854, %rd3843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2622,%dummy}, %rd3794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2623}, %rd3794;
	}
	shf.r.wrap.b32 	%r2624, %r2623, %r2622, 19;
	shf.r.wrap.b32 	%r2625, %r2622, %r2623, 19;
	mov.b64 	%rd3856, {%r2625, %r2624};
	shf.l.wrap.b32 	%r2626, %r2622, %r2623, 3;
	shf.l.wrap.b32 	%r2627, %r2623, %r2622, 3;
	mov.b64 	%rd3857, {%r2627, %r2626};
	xor.b64  	%rd3858, %rd3856, %rd3857;
	shr.u64 	%rd3859, %rd3794, 6;
	xor.b64  	%rd3860, %rd3858, %rd3859;
	shf.r.wrap.b32 	%r2628, %r2261, %r2260, 1;
	shf.r.wrap.b32 	%r2629, %r2260, %r2261, 1;
	mov.b64 	%rd3861, {%r2629, %r2628};
	shf.r.wrap.b32 	%r2630, %r2261, %r2260, 8;
	shf.r.wrap.b32 	%r2631, %r2260, %r2261, 8;
	mov.b64 	%rd3862, {%r2631, %r2630};
	xor.b64  	%rd3863, %rd3861, %rd3862;
	shr.u64 	%rd3864, %rd3287, 7;
	xor.b64  	%rd3865, %rd3863, %rd3864;
	add.s64 	%rd3866, %rd3860, %rd3286;
	add.s64 	%rd3867, %rd3866, %rd3609;
	add.s64 	%rd3868, %rd3867, %rd3865;
	add.s64 	%rd3869, %rd3868, %rd3733;
	xor.b64  	%rd3870, %rd3807, %rd3770;
	and.b64  	%rd3871, %rd3844, %rd3870;
	xor.b64  	%rd3872, %rd3871, %rd3770;
	add.s64 	%rd3873, %rd3869, %rd3872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2632,%dummy}, %rd3844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2633}, %rd3844;
	}
	shf.r.wrap.b32 	%r2634, %r2633, %r2632, 14;
	shf.r.wrap.b32 	%r2635, %r2632, %r2633, 14;
	mov.b64 	%rd3874, {%r2635, %r2634};
	shf.r.wrap.b32 	%r2636, %r2633, %r2632, 18;
	shf.r.wrap.b32 	%r2637, %r2632, %r2633, 18;
	mov.b64 	%rd3875, {%r2637, %r2636};
	xor.b64  	%rd3876, %rd3874, %rd3875;
	shf.l.wrap.b32 	%r2638, %r2632, %r2633, 23;
	shf.l.wrap.b32 	%r2639, %r2633, %r2632, 23;
	mov.b64 	%rd3877, {%r2639, %r2638};
	xor.b64  	%rd3878, %rd3876, %rd3877;
	add.s64 	%rd3879, %rd3873, %rd3878;
	add.s64 	%rd3880, %rd3879, 489312712824947311;
	add.s64 	%rd3881, %rd3880, %rd3744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2640,%dummy}, %rd3855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2641}, %rd3855;
	}
	shf.r.wrap.b32 	%r2642, %r2641, %r2640, 28;
	shf.r.wrap.b32 	%r2643, %r2640, %r2641, 28;
	mov.b64 	%rd3882, {%r2643, %r2642};
	shf.l.wrap.b32 	%r2644, %r2640, %r2641, 30;
	shf.l.wrap.b32 	%r2645, %r2641, %r2640, 30;
	mov.b64 	%rd3883, {%r2645, %r2644};
	xor.b64  	%rd3884, %rd3882, %rd3883;
	shf.l.wrap.b32 	%r2646, %r2640, %r2641, 25;
	shf.l.wrap.b32 	%r2647, %r2641, %r2640, 25;
	mov.b64 	%rd3885, {%r2647, %r2646};
	xor.b64  	%rd3886, %rd3884, %rd3885;
	and.b64  	%rd3887, %rd3855, %rd3818;
	or.b64  	%rd3888, %rd3855, %rd3818;
	and.b64  	%rd3889, %rd3888, %rd3781;
	or.b64  	%rd3890, %rd3889, %rd3887;
	add.s64 	%rd3891, %rd3890, %rd3886;
	add.s64 	%rd3892, %rd3891, %rd3880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2648,%dummy}, %rd3831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2649}, %rd3831;
	}
	shf.r.wrap.b32 	%r2650, %r2649, %r2648, 19;
	shf.r.wrap.b32 	%r2651, %r2648, %r2649, 19;
	mov.b64 	%rd3893, {%r2651, %r2650};
	shf.l.wrap.b32 	%r2652, %r2648, %r2649, 3;
	shf.l.wrap.b32 	%r2653, %r2649, %r2648, 3;
	mov.b64 	%rd3894, {%r2653, %r2652};
	xor.b64  	%rd3895, %rd3893, %rd3894;
	shr.u64 	%rd3896, %rd3831, 6;
	xor.b64  	%rd3897, %rd3895, %rd3896;
	shf.r.wrap.b32 	%r2654, %r2289, %r2288, 1;
	shf.r.wrap.b32 	%r2655, %r2288, %r2289, 1;
	mov.b64 	%rd3898, {%r2655, %r2654};
	shf.r.wrap.b32 	%r2656, %r2289, %r2288, 8;
	shf.r.wrap.b32 	%r2657, %r2288, %r2289, 8;
	mov.b64 	%rd3899, {%r2657, %r2656};
	xor.b64  	%rd3900, %rd3898, %rd3899;
	shr.u64 	%rd3901, %rd3350, 7;
	xor.b64  	%rd3902, %rd3900, %rd3901;
	add.s64 	%rd3903, %rd3897, %rd3287;
	add.s64 	%rd3904, %rd3903, %rd3646;
	add.s64 	%rd3905, %rd3904, %rd3902;
	add.s64 	%rd3906, %rd3905, %rd3770;
	xor.b64  	%rd3907, %rd3844, %rd3807;
	and.b64  	%rd3908, %rd3881, %rd3907;
	xor.b64  	%rd3909, %rd3908, %rd3807;
	add.s64 	%rd3910, %rd3906, %rd3909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2658,%dummy}, %rd3881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2659}, %rd3881;
	}
	shf.r.wrap.b32 	%r2660, %r2659, %r2658, 14;
	shf.r.wrap.b32 	%r2661, %r2658, %r2659, 14;
	mov.b64 	%rd3911, {%r2661, %r2660};
	shf.r.wrap.b32 	%r2662, %r2659, %r2658, 18;
	shf.r.wrap.b32 	%r2663, %r2658, %r2659, 18;
	mov.b64 	%rd3912, {%r2663, %r2662};
	xor.b64  	%rd3913, %rd3911, %rd3912;
	shf.l.wrap.b32 	%r2664, %r2658, %r2659, 23;
	shf.l.wrap.b32 	%r2665, %r2659, %r2658, 23;
	mov.b64 	%rd3914, {%r2665, %r2664};
	xor.b64  	%rd3915, %rd3913, %rd3914;
	add.s64 	%rd3916, %rd3910, %rd3915;
	add.s64 	%rd3917, %rd3916, 1452737877330783856;
	add.s64 	%rd3918, %rd3917, %rd3781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2666,%dummy}, %rd3892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2667}, %rd3892;
	}
	shf.r.wrap.b32 	%r2668, %r2667, %r2666, 28;
	shf.r.wrap.b32 	%r2669, %r2666, %r2667, 28;
	mov.b64 	%rd3919, {%r2669, %r2668};
	shf.l.wrap.b32 	%r2670, %r2666, %r2667, 30;
	shf.l.wrap.b32 	%r2671, %r2667, %r2666, 30;
	mov.b64 	%rd3920, {%r2671, %r2670};
	xor.b64  	%rd3921, %rd3919, %rd3920;
	shf.l.wrap.b32 	%r2672, %r2666, %r2667, 25;
	shf.l.wrap.b32 	%r2673, %r2667, %r2666, 25;
	mov.b64 	%rd3922, {%r2673, %r2672};
	xor.b64  	%rd3923, %rd3921, %rd3922;
	and.b64  	%rd3924, %rd3892, %rd3855;
	or.b64  	%rd3925, %rd3892, %rd3855;
	and.b64  	%rd3926, %rd3925, %rd3818;
	or.b64  	%rd3927, %rd3926, %rd3924;
	add.s64 	%rd3928, %rd3927, %rd3923;
	add.s64 	%rd3929, %rd3928, %rd3917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2674,%dummy}, %rd3868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2675}, %rd3868;
	}
	shf.r.wrap.b32 	%r2676, %r2675, %r2674, 19;
	shf.r.wrap.b32 	%r2677, %r2674, %r2675, 19;
	mov.b64 	%rd3930, {%r2677, %r2676};
	shf.l.wrap.b32 	%r2678, %r2674, %r2675, 3;
	shf.l.wrap.b32 	%r2679, %r2675, %r2674, 3;
	mov.b64 	%rd3931, {%r2679, %r2678};
	xor.b64  	%rd3932, %rd3930, %rd3931;
	shr.u64 	%rd3933, %rd3868, 6;
	xor.b64  	%rd3934, %rd3932, %rd3933;
	shf.r.wrap.b32 	%r2680, %r2317, %r2316, 1;
	shf.r.wrap.b32 	%r2681, %r2316, %r2317, 1;
	mov.b64 	%rd3935, {%r2681, %r2680};
	shf.r.wrap.b32 	%r2682, %r2317, %r2316, 8;
	shf.r.wrap.b32 	%r2683, %r2316, %r2317, 8;
	mov.b64 	%rd3936, {%r2683, %r2682};
	xor.b64  	%rd3937, %rd3935, %rd3936;
	shr.u64 	%rd3938, %rd3387, 7;
	xor.b64  	%rd3939, %rd3937, %rd3938;
	add.s64 	%rd3940, %rd3934, %rd3350;
	add.s64 	%rd3941, %rd3940, %rd3683;
	add.s64 	%rd3942, %rd3941, %rd3939;
	add.s64 	%rd3943, %rd3942, %rd3807;
	xor.b64  	%rd3944, %rd3881, %rd3844;
	and.b64  	%rd3945, %rd3918, %rd3944;
	xor.b64  	%rd3946, %rd3945, %rd3844;
	add.s64 	%rd3947, %rd3943, %rd3946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2684,%dummy}, %rd3918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd3918;
	}
	shf.r.wrap.b32 	%r2686, %r2685, %r2684, 14;
	shf.r.wrap.b32 	%r2687, %r2684, %r2685, 14;
	mov.b64 	%rd3948, {%r2687, %r2686};
	shf.r.wrap.b32 	%r2688, %r2685, %r2684, 18;
	shf.r.wrap.b32 	%r2689, %r2684, %r2685, 18;
	mov.b64 	%rd3949, {%r2689, %r2688};
	xor.b64  	%rd3950, %rd3948, %rd3949;
	shf.l.wrap.b32 	%r2690, %r2684, %r2685, 23;
	shf.l.wrap.b32 	%r2691, %r2685, %r2684, 23;
	mov.b64 	%rd3951, {%r2691, %r2690};
	xor.b64  	%rd3952, %rd3950, %rd3951;
	add.s64 	%rd3953, %rd3947, %rd3952;
	add.s64 	%rd3954, %rd3953, 2861767655752347644;
	add.s64 	%rd3955, %rd3954, %rd3818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2692,%dummy}, %rd3929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2693}, %rd3929;
	}
	shf.r.wrap.b32 	%r2694, %r2693, %r2692, 28;
	shf.r.wrap.b32 	%r2695, %r2692, %r2693, 28;
	mov.b64 	%rd3956, {%r2695, %r2694};
	shf.l.wrap.b32 	%r2696, %r2692, %r2693, 30;
	shf.l.wrap.b32 	%r2697, %r2693, %r2692, 30;
	mov.b64 	%rd3957, {%r2697, %r2696};
	xor.b64  	%rd3958, %rd3956, %rd3957;
	shf.l.wrap.b32 	%r2698, %r2692, %r2693, 25;
	shf.l.wrap.b32 	%r2699, %r2693, %r2692, 25;
	mov.b64 	%rd3959, {%r2699, %r2698};
	xor.b64  	%rd3960, %rd3958, %rd3959;
	and.b64  	%rd3961, %rd3929, %rd3892;
	or.b64  	%rd3962, %rd3929, %rd3892;
	and.b64  	%rd3963, %rd3962, %rd3855;
	or.b64  	%rd3964, %rd3963, %rd3961;
	add.s64 	%rd3965, %rd3964, %rd3960;
	add.s64 	%rd3966, %rd3965, %rd3954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2700,%dummy}, %rd3905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2701}, %rd3905;
	}
	shf.r.wrap.b32 	%r2702, %r2701, %r2700, 19;
	shf.r.wrap.b32 	%r2703, %r2700, %r2701, 19;
	mov.b64 	%rd3967, {%r2703, %r2702};
	shf.l.wrap.b32 	%r2704, %r2700, %r2701, 3;
	shf.l.wrap.b32 	%r2705, %r2701, %r2700, 3;
	mov.b64 	%rd3968, {%r2705, %r2704};
	xor.b64  	%rd3969, %rd3967, %rd3968;
	shr.u64 	%rd3970, %rd3905, 6;
	xor.b64  	%rd3971, %rd3969, %rd3970;
	shf.r.wrap.b32 	%r2706, %r2345, %r2344, 1;
	shf.r.wrap.b32 	%r2707, %r2344, %r2345, 1;
	mov.b64 	%rd3972, {%r2707, %r2706};
	shf.r.wrap.b32 	%r2708, %r2345, %r2344, 8;
	shf.r.wrap.b32 	%r2709, %r2344, %r2345, 8;
	mov.b64 	%rd3973, {%r2709, %r2708};
	xor.b64  	%rd3974, %rd3972, %rd3973;
	shr.u64 	%rd3975, %rd3424, 7;
	xor.b64  	%rd3976, %rd3974, %rd3975;
	add.s64 	%rd3977, %rd3971, %rd3387;
	add.s64 	%rd3978, %rd3977, %rd3720;
	add.s64 	%rd3979, %rd3978, %rd3976;
	add.s64 	%rd3980, %rd3979, %rd3844;
	xor.b64  	%rd3981, %rd3918, %rd3881;
	and.b64  	%rd3982, %rd3955, %rd3981;
	xor.b64  	%rd3983, %rd3982, %rd3881;
	add.s64 	%rd3984, %rd3980, %rd3983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2710,%dummy}, %rd3955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2711}, %rd3955;
	}
	shf.r.wrap.b32 	%r2712, %r2711, %r2710, 14;
	shf.r.wrap.b32 	%r2713, %r2710, %r2711, 14;
	mov.b64 	%rd3985, {%r2713, %r2712};
	shf.r.wrap.b32 	%r2714, %r2711, %r2710, 18;
	shf.r.wrap.b32 	%r2715, %r2710, %r2711, 18;
	mov.b64 	%rd3986, {%r2715, %r2714};
	xor.b64  	%rd3987, %rd3985, %rd3986;
	shf.l.wrap.b32 	%r2716, %r2710, %r2711, 23;
	shf.l.wrap.b32 	%r2717, %r2711, %r2710, 23;
	mov.b64 	%rd3988, {%r2717, %r2716};
	xor.b64  	%rd3989, %rd3987, %rd3988;
	add.s64 	%rd3990, %rd3984, %rd3989;
	add.s64 	%rd3991, %rd3990, 3322285676063803686;
	add.s64 	%rd3992, %rd3991, %rd3855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2718,%dummy}, %rd3966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2719}, %rd3966;
	}
	shf.r.wrap.b32 	%r2720, %r2719, %r2718, 28;
	shf.r.wrap.b32 	%r2721, %r2718, %r2719, 28;
	mov.b64 	%rd3993, {%r2721, %r2720};
	shf.l.wrap.b32 	%r2722, %r2718, %r2719, 30;
	shf.l.wrap.b32 	%r2723, %r2719, %r2718, 30;
	mov.b64 	%rd3994, {%r2723, %r2722};
	xor.b64  	%rd3995, %rd3993, %rd3994;
	shf.l.wrap.b32 	%r2724, %r2718, %r2719, 25;
	shf.l.wrap.b32 	%r2725, %r2719, %r2718, 25;
	mov.b64 	%rd3996, {%r2725, %r2724};
	xor.b64  	%rd3997, %rd3995, %rd3996;
	and.b64  	%rd3998, %rd3966, %rd3929;
	or.b64  	%rd3999, %rd3966, %rd3929;
	and.b64  	%rd4000, %rd3999, %rd3892;
	or.b64  	%rd4001, %rd4000, %rd3998;
	add.s64 	%rd4002, %rd4001, %rd3997;
	add.s64 	%rd4003, %rd4002, %rd3991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2726,%dummy}, %rd3942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2727}, %rd3942;
	}
	shf.r.wrap.b32 	%r2728, %r2727, %r2726, 19;
	shf.r.wrap.b32 	%r2729, %r2726, %r2727, 19;
	mov.b64 	%rd4004, {%r2729, %r2728};
	shf.l.wrap.b32 	%r2730, %r2726, %r2727, 3;
	shf.l.wrap.b32 	%r2731, %r2727, %r2726, 3;
	mov.b64 	%rd4005, {%r2731, %r2730};
	xor.b64  	%rd4006, %rd4004, %rd4005;
	shr.u64 	%rd4007, %rd3942, 6;
	xor.b64  	%rd4008, %rd4006, %rd4007;
	shf.r.wrap.b32 	%r2732, %r2373, %r2372, 1;
	shf.r.wrap.b32 	%r2733, %r2372, %r2373, 1;
	mov.b64 	%rd4009, {%r2733, %r2732};
	shf.r.wrap.b32 	%r2734, %r2373, %r2372, 8;
	shf.r.wrap.b32 	%r2735, %r2372, %r2373, 8;
	mov.b64 	%rd4010, {%r2735, %r2734};
	xor.b64  	%rd4011, %rd4009, %rd4010;
	shr.u64 	%rd4012, %rd3461, 7;
	xor.b64  	%rd4013, %rd4011, %rd4012;
	add.s64 	%rd4014, %rd4008, %rd3424;
	add.s64 	%rd4015, %rd4014, %rd3757;
	add.s64 	%rd4016, %rd4015, %rd4013;
	add.s64 	%rd4017, %rd4016, %rd3881;
	xor.b64  	%rd4018, %rd3955, %rd3918;
	and.b64  	%rd4019, %rd3992, %rd4018;
	xor.b64  	%rd4020, %rd4019, %rd3918;
	add.s64 	%rd4021, %rd4017, %rd4020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2736,%dummy}, %rd3992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2737}, %rd3992;
	}
	shf.r.wrap.b32 	%r2738, %r2737, %r2736, 14;
	shf.r.wrap.b32 	%r2739, %r2736, %r2737, 14;
	mov.b64 	%rd4022, {%r2739, %r2738};
	shf.r.wrap.b32 	%r2740, %r2737, %r2736, 18;
	shf.r.wrap.b32 	%r2741, %r2736, %r2737, 18;
	mov.b64 	%rd4023, {%r2741, %r2740};
	xor.b64  	%rd4024, %rd4022, %rd4023;
	shf.l.wrap.b32 	%r2742, %r2736, %r2737, 23;
	shf.l.wrap.b32 	%r2743, %r2737, %r2736, 23;
	mov.b64 	%rd4025, {%r2743, %r2742};
	xor.b64  	%rd4026, %rd4024, %rd4025;
	add.s64 	%rd4027, %rd4021, %rd4026;
	add.s64 	%rd4028, %rd4027, 5560940570517711597;
	add.s64 	%rd4029, %rd4028, %rd3892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2744,%dummy}, %rd4003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2745}, %rd4003;
	}
	shf.r.wrap.b32 	%r2746, %r2745, %r2744, 28;
	shf.r.wrap.b32 	%r2747, %r2744, %r2745, 28;
	mov.b64 	%rd4030, {%r2747, %r2746};
	shf.l.wrap.b32 	%r2748, %r2744, %r2745, 30;
	shf.l.wrap.b32 	%r2749, %r2745, %r2744, 30;
	mov.b64 	%rd4031, {%r2749, %r2748};
	xor.b64  	%rd4032, %rd4030, %rd4031;
	shf.l.wrap.b32 	%r2750, %r2744, %r2745, 25;
	shf.l.wrap.b32 	%r2751, %r2745, %r2744, 25;
	mov.b64 	%rd4033, {%r2751, %r2750};
	xor.b64  	%rd4034, %rd4032, %rd4033;
	and.b64  	%rd4035, %rd4003, %rd3966;
	or.b64  	%rd4036, %rd4003, %rd3966;
	and.b64  	%rd4037, %rd4036, %rd3929;
	or.b64  	%rd4038, %rd4037, %rd4035;
	add.s64 	%rd4039, %rd4038, %rd4034;
	add.s64 	%rd4040, %rd4039, %rd4028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2752,%dummy}, %rd3979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2753}, %rd3979;
	}
	shf.r.wrap.b32 	%r2754, %r2753, %r2752, 19;
	shf.r.wrap.b32 	%r2755, %r2752, %r2753, 19;
	mov.b64 	%rd4041, {%r2755, %r2754};
	shf.l.wrap.b32 	%r2756, %r2752, %r2753, 3;
	shf.l.wrap.b32 	%r2757, %r2753, %r2752, 3;
	mov.b64 	%rd4042, {%r2757, %r2756};
	xor.b64  	%rd4043, %rd4041, %rd4042;
	shr.u64 	%rd4044, %rd3979, 6;
	xor.b64  	%rd4045, %rd4043, %rd4044;
	shf.r.wrap.b32 	%r2758, %r2401, %r2400, 1;
	shf.r.wrap.b32 	%r2759, %r2400, %r2401, 1;
	mov.b64 	%rd4046, {%r2759, %r2758};
	shf.r.wrap.b32 	%r2760, %r2401, %r2400, 8;
	shf.r.wrap.b32 	%r2761, %r2400, %r2401, 8;
	mov.b64 	%rd4047, {%r2761, %r2760};
	xor.b64  	%rd4048, %rd4046, %rd4047;
	shr.u64 	%rd4049, %rd3498, 7;
	xor.b64  	%rd4050, %rd4048, %rd4049;
	add.s64 	%rd4051, %rd4045, %rd3461;
	add.s64 	%rd4052, %rd4051, %rd3794;
	add.s64 	%rd4053, %rd4052, %rd4050;
	add.s64 	%rd4054, %rd4053, %rd3918;
	xor.b64  	%rd4055, %rd3992, %rd3955;
	and.b64  	%rd4056, %rd4029, %rd4055;
	xor.b64  	%rd4057, %rd4056, %rd3955;
	add.s64 	%rd4058, %rd4054, %rd4057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd4029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd4029;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 14;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 14;
	mov.b64 	%rd4059, {%r2765, %r2764};
	shf.r.wrap.b32 	%r2766, %r2763, %r2762, 18;
	shf.r.wrap.b32 	%r2767, %r2762, %r2763, 18;
	mov.b64 	%rd4060, {%r2767, %r2766};
	xor.b64  	%rd4061, %rd4059, %rd4060;
	shf.l.wrap.b32 	%r2768, %r2762, %r2763, 23;
	shf.l.wrap.b32 	%r2769, %r2763, %r2762, 23;
	mov.b64 	%rd4062, {%r2769, %r2768};
	xor.b64  	%rd4063, %rd4061, %rd4062;
	add.s64 	%rd4064, %rd4058, %rd4063;
	add.s64 	%rd4065, %rd4064, 5996557281743188959;
	add.s64 	%rd4066, %rd4065, %rd3929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2770,%dummy}, %rd4040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2771}, %rd4040;
	}
	shf.r.wrap.b32 	%r2772, %r2771, %r2770, 28;
	shf.r.wrap.b32 	%r2773, %r2770, %r2771, 28;
	mov.b64 	%rd4067, {%r2773, %r2772};
	shf.l.wrap.b32 	%r2774, %r2770, %r2771, 30;
	shf.l.wrap.b32 	%r2775, %r2771, %r2770, 30;
	mov.b64 	%rd4068, {%r2775, %r2774};
	xor.b64  	%rd4069, %rd4067, %rd4068;
	shf.l.wrap.b32 	%r2776, %r2770, %r2771, 25;
	shf.l.wrap.b32 	%r2777, %r2771, %r2770, 25;
	mov.b64 	%rd4070, {%r2777, %r2776};
	xor.b64  	%rd4071, %rd4069, %rd4070;
	and.b64  	%rd4072, %rd4040, %rd4003;
	or.b64  	%rd4073, %rd4040, %rd4003;
	and.b64  	%rd4074, %rd4073, %rd3966;
	or.b64  	%rd4075, %rd4074, %rd4072;
	add.s64 	%rd4076, %rd4075, %rd4071;
	add.s64 	%rd4077, %rd4076, %rd4065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2778,%dummy}, %rd4016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2779}, %rd4016;
	}
	shf.r.wrap.b32 	%r2780, %r2779, %r2778, 19;
	shf.r.wrap.b32 	%r2781, %r2778, %r2779, 19;
	mov.b64 	%rd4078, {%r2781, %r2780};
	shf.l.wrap.b32 	%r2782, %r2778, %r2779, 3;
	shf.l.wrap.b32 	%r2783, %r2779, %r2778, 3;
	mov.b64 	%rd4079, {%r2783, %r2782};
	xor.b64  	%rd4080, %rd4078, %rd4079;
	shr.u64 	%rd4081, %rd4016, 6;
	xor.b64  	%rd4082, %rd4080, %rd4081;
	shf.r.wrap.b32 	%r2784, %r2429, %r2428, 1;
	shf.r.wrap.b32 	%r2785, %r2428, %r2429, 1;
	mov.b64 	%rd4083, {%r2785, %r2784};
	shf.r.wrap.b32 	%r2786, %r2429, %r2428, 8;
	shf.r.wrap.b32 	%r2787, %r2428, %r2429, 8;
	mov.b64 	%rd4084, {%r2787, %r2786};
	xor.b64  	%rd4085, %rd4083, %rd4084;
	shr.u64 	%rd4086, %rd3535, 7;
	xor.b64  	%rd4087, %rd4085, %rd4086;
	add.s64 	%rd4088, %rd4082, %rd3498;
	add.s64 	%rd4089, %rd4088, %rd3831;
	add.s64 	%rd4090, %rd4089, %rd4087;
	add.s64 	%rd4091, %rd4090, %rd3955;
	xor.b64  	%rd4092, %rd4029, %rd3992;
	and.b64  	%rd4093, %rd4066, %rd4092;
	xor.b64  	%rd4094, %rd4093, %rd3992;
	add.s64 	%rd4095, %rd4091, %rd4094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2788,%dummy}, %rd4066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2789}, %rd4066;
	}
	shf.r.wrap.b32 	%r2790, %r2789, %r2788, 14;
	shf.r.wrap.b32 	%r2791, %r2788, %r2789, 14;
	mov.b64 	%rd4096, {%r2791, %r2790};
	shf.r.wrap.b32 	%r2792, %r2789, %r2788, 18;
	shf.r.wrap.b32 	%r2793, %r2788, %r2789, 18;
	mov.b64 	%rd4097, {%r2793, %r2792};
	xor.b64  	%rd4098, %rd4096, %rd4097;
	shf.l.wrap.b32 	%r2794, %r2788, %r2789, 23;
	shf.l.wrap.b32 	%r2795, %r2789, %r2788, 23;
	mov.b64 	%rd4099, {%r2795, %r2794};
	xor.b64  	%rd4100, %rd4098, %rd4099;
	add.s64 	%rd4101, %rd4095, %rd4100;
	add.s64 	%rd4102, %rd4101, 7280758554555802590;
	add.s64 	%rd4103, %rd4102, %rd3966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2796,%dummy}, %rd4077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2797}, %rd4077;
	}
	shf.r.wrap.b32 	%r2798, %r2797, %r2796, 28;
	shf.r.wrap.b32 	%r2799, %r2796, %r2797, 28;
	mov.b64 	%rd4104, {%r2799, %r2798};
	shf.l.wrap.b32 	%r2800, %r2796, %r2797, 30;
	shf.l.wrap.b32 	%r2801, %r2797, %r2796, 30;
	mov.b64 	%rd4105, {%r2801, %r2800};
	xor.b64  	%rd4106, %rd4104, %rd4105;
	shf.l.wrap.b32 	%r2802, %r2796, %r2797, 25;
	shf.l.wrap.b32 	%r2803, %r2797, %r2796, 25;
	mov.b64 	%rd4107, {%r2803, %r2802};
	xor.b64  	%rd4108, %rd4106, %rd4107;
	and.b64  	%rd4109, %rd4077, %rd4040;
	or.b64  	%rd4110, %rd4077, %rd4040;
	and.b64  	%rd4111, %rd4110, %rd4003;
	or.b64  	%rd4112, %rd4111, %rd4109;
	add.s64 	%rd4113, %rd4112, %rd4108;
	add.s64 	%rd4114, %rd4113, %rd4102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2804,%dummy}, %rd4053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd4053;
	}
	shf.r.wrap.b32 	%r2806, %r2805, %r2804, 19;
	shf.r.wrap.b32 	%r2807, %r2804, %r2805, 19;
	mov.b64 	%rd4115, {%r2807, %r2806};
	shf.l.wrap.b32 	%r2808, %r2804, %r2805, 3;
	shf.l.wrap.b32 	%r2809, %r2805, %r2804, 3;
	mov.b64 	%rd4116, {%r2809, %r2808};
	xor.b64  	%rd4117, %rd4115, %rd4116;
	shr.u64 	%rd4118, %rd4053, 6;
	xor.b64  	%rd4119, %rd4117, %rd4118;
	shf.r.wrap.b32 	%r2810, %r2457, %r2456, 1;
	shf.r.wrap.b32 	%r2811, %r2456, %r2457, 1;
	mov.b64 	%rd4120, {%r2811, %r2810};
	shf.r.wrap.b32 	%r2812, %r2457, %r2456, 8;
	shf.r.wrap.b32 	%r2813, %r2456, %r2457, 8;
	mov.b64 	%rd4121, {%r2813, %r2812};
	xor.b64  	%rd4122, %rd4120, %rd4121;
	shr.u64 	%rd4123, %rd3572, 7;
	xor.b64  	%rd4124, %rd4122, %rd4123;
	add.s64 	%rd4125, %rd4119, %rd3535;
	add.s64 	%rd4126, %rd4125, %rd3868;
	add.s64 	%rd4127, %rd4126, %rd4124;
	add.s64 	%rd4128, %rd4127, %rd3992;
	xor.b64  	%rd4129, %rd4066, %rd4029;
	and.b64  	%rd4130, %rd4103, %rd4129;
	xor.b64  	%rd4131, %rd4130, %rd4029;
	add.s64 	%rd4132, %rd4128, %rd4131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2814,%dummy}, %rd4103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2815}, %rd4103;
	}
	shf.r.wrap.b32 	%r2816, %r2815, %r2814, 14;
	shf.r.wrap.b32 	%r2817, %r2814, %r2815, 14;
	mov.b64 	%rd4133, {%r2817, %r2816};
	shf.r.wrap.b32 	%r2818, %r2815, %r2814, 18;
	shf.r.wrap.b32 	%r2819, %r2814, %r2815, 18;
	mov.b64 	%rd4134, {%r2819, %r2818};
	xor.b64  	%rd4135, %rd4133, %rd4134;
	shf.l.wrap.b32 	%r2820, %r2814, %r2815, 23;
	shf.l.wrap.b32 	%r2821, %r2815, %r2814, 23;
	mov.b64 	%rd4136, {%r2821, %r2820};
	xor.b64  	%rd4137, %rd4135, %rd4136;
	add.s64 	%rd4138, %rd4132, %rd4137;
	add.s64 	%rd4139, %rd4138, 8532644243296465576;
	add.s64 	%rd4140, %rd4139, %rd4003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2822,%dummy}, %rd4114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2823}, %rd4114;
	}
	shf.r.wrap.b32 	%r2824, %r2823, %r2822, 28;
	shf.r.wrap.b32 	%r2825, %r2822, %r2823, 28;
	mov.b64 	%rd4141, {%r2825, %r2824};
	shf.l.wrap.b32 	%r2826, %r2822, %r2823, 30;
	shf.l.wrap.b32 	%r2827, %r2823, %r2822, 30;
	mov.b64 	%rd4142, {%r2827, %r2826};
	xor.b64  	%rd4143, %rd4141, %rd4142;
	shf.l.wrap.b32 	%r2828, %r2822, %r2823, 25;
	shf.l.wrap.b32 	%r2829, %r2823, %r2822, 25;
	mov.b64 	%rd4144, {%r2829, %r2828};
	xor.b64  	%rd4145, %rd4143, %rd4144;
	and.b64  	%rd4146, %rd4114, %rd4077;
	or.b64  	%rd4147, %rd4114, %rd4077;
	and.b64  	%rd4148, %rd4147, %rd4040;
	or.b64  	%rd4149, %rd4148, %rd4146;
	add.s64 	%rd4150, %rd4149, %rd4145;
	add.s64 	%rd4151, %rd4150, %rd4139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2830,%dummy}, %rd4090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2831}, %rd4090;
	}
	shf.r.wrap.b32 	%r2832, %r2831, %r2830, 19;
	shf.r.wrap.b32 	%r2833, %r2830, %r2831, 19;
	mov.b64 	%rd4152, {%r2833, %r2832};
	shf.l.wrap.b32 	%r2834, %r2830, %r2831, 3;
	shf.l.wrap.b32 	%r2835, %r2831, %r2830, 3;
	mov.b64 	%rd4153, {%r2835, %r2834};
	xor.b64  	%rd4154, %rd4152, %rd4153;
	shr.u64 	%rd4155, %rd4090, 6;
	xor.b64  	%rd4156, %rd4154, %rd4155;
	shf.r.wrap.b32 	%r2836, %r2485, %r2484, 1;
	shf.r.wrap.b32 	%r2837, %r2484, %r2485, 1;
	mov.b64 	%rd4157, {%r2837, %r2836};
	shf.r.wrap.b32 	%r2838, %r2485, %r2484, 8;
	shf.r.wrap.b32 	%r2839, %r2484, %r2485, 8;
	mov.b64 	%rd4158, {%r2839, %r2838};
	xor.b64  	%rd4159, %rd4157, %rd4158;
	shr.u64 	%rd4160, %rd3609, 7;
	xor.b64  	%rd4161, %rd4159, %rd4160;
	add.s64 	%rd4162, %rd4156, %rd3572;
	add.s64 	%rd4163, %rd4162, %rd3905;
	add.s64 	%rd4164, %rd4163, %rd4161;
	add.s64 	%rd4165, %rd4164, %rd4029;
	xor.b64  	%rd4166, %rd4103, %rd4066;
	and.b64  	%rd4167, %rd4140, %rd4166;
	xor.b64  	%rd4168, %rd4167, %rd4066;
	add.s64 	%rd4169, %rd4165, %rd4168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2840,%dummy}, %rd4140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2841}, %rd4140;
	}
	shf.r.wrap.b32 	%r2842, %r2841, %r2840, 14;
	shf.r.wrap.b32 	%r2843, %r2840, %r2841, 14;
	mov.b64 	%rd4170, {%r2843, %r2842};
	shf.r.wrap.b32 	%r2844, %r2841, %r2840, 18;
	shf.r.wrap.b32 	%r2845, %r2840, %r2841, 18;
	mov.b64 	%rd4171, {%r2845, %r2844};
	xor.b64  	%rd4172, %rd4170, %rd4171;
	shf.l.wrap.b32 	%r2846, %r2840, %r2841, 23;
	shf.l.wrap.b32 	%r2847, %r2841, %r2840, 23;
	mov.b64 	%rd4173, {%r2847, %r2846};
	xor.b64  	%rd4174, %rd4172, %rd4173;
	add.s64 	%rd4175, %rd4169, %rd4174;
	add.s64 	%rd4176, %rd4175, -9096487096722542874;
	add.s64 	%rd4177, %rd4176, %rd4040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2848,%dummy}, %rd4151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2849}, %rd4151;
	}
	shf.r.wrap.b32 	%r2850, %r2849, %r2848, 28;
	shf.r.wrap.b32 	%r2851, %r2848, %r2849, 28;
	mov.b64 	%rd4178, {%r2851, %r2850};
	shf.l.wrap.b32 	%r2852, %r2848, %r2849, 30;
	shf.l.wrap.b32 	%r2853, %r2849, %r2848, 30;
	mov.b64 	%rd4179, {%r2853, %r2852};
	xor.b64  	%rd4180, %rd4178, %rd4179;
	shf.l.wrap.b32 	%r2854, %r2848, %r2849, 25;
	shf.l.wrap.b32 	%r2855, %r2849, %r2848, 25;
	mov.b64 	%rd4181, {%r2855, %r2854};
	xor.b64  	%rd4182, %rd4180, %rd4181;
	and.b64  	%rd4183, %rd4151, %rd4114;
	or.b64  	%rd4184, %rd4151, %rd4114;
	and.b64  	%rd4185, %rd4184, %rd4077;
	or.b64  	%rd4186, %rd4185, %rd4183;
	add.s64 	%rd4187, %rd4186, %rd4182;
	add.s64 	%rd4188, %rd4187, %rd4176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2856,%dummy}, %rd4127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2857}, %rd4127;
	}
	shf.r.wrap.b32 	%r2858, %r2857, %r2856, 19;
	shf.r.wrap.b32 	%r2859, %r2856, %r2857, 19;
	mov.b64 	%rd4189, {%r2859, %r2858};
	shf.l.wrap.b32 	%r2860, %r2856, %r2857, 3;
	shf.l.wrap.b32 	%r2861, %r2857, %r2856, 3;
	mov.b64 	%rd4190, {%r2861, %r2860};
	xor.b64  	%rd4191, %rd4189, %rd4190;
	shr.u64 	%rd4192, %rd4127, 6;
	xor.b64  	%rd4193, %rd4191, %rd4192;
	shf.r.wrap.b32 	%r2862, %r2513, %r2512, 1;
	shf.r.wrap.b32 	%r2863, %r2512, %r2513, 1;
	mov.b64 	%rd4194, {%r2863, %r2862};
	shf.r.wrap.b32 	%r2864, %r2513, %r2512, 8;
	shf.r.wrap.b32 	%r2865, %r2512, %r2513, 8;
	mov.b64 	%rd4195, {%r2865, %r2864};
	xor.b64  	%rd4196, %rd4194, %rd4195;
	shr.u64 	%rd4197, %rd3646, 7;
	xor.b64  	%rd4198, %rd4196, %rd4197;
	add.s64 	%rd4199, %rd4193, %rd3609;
	add.s64 	%rd4200, %rd4199, %rd3942;
	add.s64 	%rd4201, %rd4200, %rd4198;
	add.s64 	%rd4202, %rd4201, %rd4066;
	xor.b64  	%rd4203, %rd4140, %rd4103;
	and.b64  	%rd4204, %rd4177, %rd4203;
	xor.b64  	%rd4205, %rd4204, %rd4103;
	add.s64 	%rd4206, %rd4202, %rd4205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd4177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd4177;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 14;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 14;
	mov.b64 	%rd4207, {%r2869, %r2868};
	shf.r.wrap.b32 	%r2870, %r2867, %r2866, 18;
	shf.r.wrap.b32 	%r2871, %r2866, %r2867, 18;
	mov.b64 	%rd4208, {%r2871, %r2870};
	xor.b64  	%rd4209, %rd4207, %rd4208;
	shf.l.wrap.b32 	%r2872, %r2866, %r2867, 23;
	shf.l.wrap.b32 	%r2873, %r2867, %r2866, 23;
	mov.b64 	%rd4210, {%r2873, %r2872};
	xor.b64  	%rd4211, %rd4209, %rd4210;
	add.s64 	%rd4212, %rd4206, %rd4211;
	add.s64 	%rd4213, %rd4212, -7894198246740708037;
	add.s64 	%rd4214, %rd4213, %rd4077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd4188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd4188;
	}
	shf.r.wrap.b32 	%r2876, %r2875, %r2874, 28;
	shf.r.wrap.b32 	%r2877, %r2874, %r2875, 28;
	mov.b64 	%rd4215, {%r2877, %r2876};
	shf.l.wrap.b32 	%r2878, %r2874, %r2875, 30;
	shf.l.wrap.b32 	%r2879, %r2875, %r2874, 30;
	mov.b64 	%rd4216, {%r2879, %r2878};
	xor.b64  	%rd4217, %rd4215, %rd4216;
	shf.l.wrap.b32 	%r2880, %r2874, %r2875, 25;
	shf.l.wrap.b32 	%r2881, %r2875, %r2874, 25;
	mov.b64 	%rd4218, {%r2881, %r2880};
	xor.b64  	%rd4219, %rd4217, %rd4218;
	and.b64  	%rd4220, %rd4188, %rd4151;
	or.b64  	%rd4221, %rd4188, %rd4151;
	and.b64  	%rd4222, %rd4221, %rd4114;
	or.b64  	%rd4223, %rd4222, %rd4220;
	add.s64 	%rd4224, %rd4223, %rd4219;
	add.s64 	%rd4225, %rd4224, %rd4213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2882,%dummy}, %rd4164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2883}, %rd4164;
	}
	shf.r.wrap.b32 	%r2884, %r2883, %r2882, 19;
	shf.r.wrap.b32 	%r2885, %r2882, %r2883, 19;
	mov.b64 	%rd4226, {%r2885, %r2884};
	shf.l.wrap.b32 	%r2886, %r2882, %r2883, 3;
	shf.l.wrap.b32 	%r2887, %r2883, %r2882, 3;
	mov.b64 	%rd4227, {%r2887, %r2886};
	xor.b64  	%rd4228, %rd4226, %rd4227;
	shr.u64 	%rd4229, %rd4164, 6;
	xor.b64  	%rd4230, %rd4228, %rd4229;
	shf.r.wrap.b32 	%r2888, %r2541, %r2540, 1;
	shf.r.wrap.b32 	%r2889, %r2540, %r2541, 1;
	mov.b64 	%rd4231, {%r2889, %r2888};
	shf.r.wrap.b32 	%r2890, %r2541, %r2540, 8;
	shf.r.wrap.b32 	%r2891, %r2540, %r2541, 8;
	mov.b64 	%rd4232, {%r2891, %r2890};
	xor.b64  	%rd4233, %rd4231, %rd4232;
	shr.u64 	%rd4234, %rd3683, 7;
	xor.b64  	%rd4235, %rd4233, %rd4234;
	add.s64 	%rd4236, %rd4230, %rd3646;
	add.s64 	%rd4237, %rd4236, %rd3979;
	add.s64 	%rd4238, %rd4237, %rd4235;
	add.s64 	%rd4239, %rd4238, %rd4103;
	xor.b64  	%rd4240, %rd4177, %rd4140;
	and.b64  	%rd4241, %rd4214, %rd4240;
	xor.b64  	%rd4242, %rd4241, %rd4140;
	add.s64 	%rd4243, %rd4239, %rd4242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2892,%dummy}, %rd4214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2893}, %rd4214;
	}
	shf.r.wrap.b32 	%r2894, %r2893, %r2892, 14;
	shf.r.wrap.b32 	%r2895, %r2892, %r2893, 14;
	mov.b64 	%rd4244, {%r2895, %r2894};
	shf.r.wrap.b32 	%r2896, %r2893, %r2892, 18;
	shf.r.wrap.b32 	%r2897, %r2892, %r2893, 18;
	mov.b64 	%rd4245, {%r2897, %r2896};
	xor.b64  	%rd4246, %rd4244, %rd4245;
	shf.l.wrap.b32 	%r2898, %r2892, %r2893, 23;
	shf.l.wrap.b32 	%r2899, %r2893, %r2892, 23;
	mov.b64 	%rd4247, {%r2899, %r2898};
	xor.b64  	%rd4248, %rd4246, %rd4247;
	add.s64 	%rd4249, %rd4243, %rd4248;
	add.s64 	%rd4250, %rd4249, -6719396339535248540;
	add.s64 	%rd4251, %rd4250, %rd4114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2900,%dummy}, %rd4225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2901}, %rd4225;
	}
	shf.r.wrap.b32 	%r2902, %r2901, %r2900, 28;
	shf.r.wrap.b32 	%r2903, %r2900, %r2901, 28;
	mov.b64 	%rd4252, {%r2903, %r2902};
	shf.l.wrap.b32 	%r2904, %r2900, %r2901, 30;
	shf.l.wrap.b32 	%r2905, %r2901, %r2900, 30;
	mov.b64 	%rd4253, {%r2905, %r2904};
	xor.b64  	%rd4254, %rd4252, %rd4253;
	shf.l.wrap.b32 	%r2906, %r2900, %r2901, 25;
	shf.l.wrap.b32 	%r2907, %r2901, %r2900, 25;
	mov.b64 	%rd4255, {%r2907, %r2906};
	xor.b64  	%rd4256, %rd4254, %rd4255;
	and.b64  	%rd4257, %rd4225, %rd4188;
	or.b64  	%rd4258, %rd4225, %rd4188;
	and.b64  	%rd4259, %rd4258, %rd4151;
	or.b64  	%rd4260, %rd4259, %rd4257;
	add.s64 	%rd4261, %rd4260, %rd4256;
	add.s64 	%rd4262, %rd4261, %rd4250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2908,%dummy}, %rd4201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2909}, %rd4201;
	}
	shf.r.wrap.b32 	%r2910, %r2909, %r2908, 19;
	shf.r.wrap.b32 	%r2911, %r2908, %r2909, 19;
	mov.b64 	%rd4263, {%r2911, %r2910};
	shf.l.wrap.b32 	%r2912, %r2908, %r2909, 3;
	shf.l.wrap.b32 	%r2913, %r2909, %r2908, 3;
	mov.b64 	%rd4264, {%r2913, %r2912};
	xor.b64  	%rd4265, %rd4263, %rd4264;
	shr.u64 	%rd4266, %rd4201, 6;
	xor.b64  	%rd4267, %rd4265, %rd4266;
	shf.r.wrap.b32 	%r2914, %r2569, %r2568, 1;
	shf.r.wrap.b32 	%r2915, %r2568, %r2569, 1;
	mov.b64 	%rd4268, {%r2915, %r2914};
	shf.r.wrap.b32 	%r2916, %r2569, %r2568, 8;
	shf.r.wrap.b32 	%r2917, %r2568, %r2569, 8;
	mov.b64 	%rd4269, {%r2917, %r2916};
	xor.b64  	%rd4270, %rd4268, %rd4269;
	shr.u64 	%rd4271, %rd3720, 7;
	xor.b64  	%rd4272, %rd4270, %rd4271;
	add.s64 	%rd4273, %rd4267, %rd3683;
	add.s64 	%rd4274, %rd4273, %rd4016;
	add.s64 	%rd4275, %rd4274, %rd4272;
	add.s64 	%rd4276, %rd4275, %rd4140;
	xor.b64  	%rd4277, %rd4214, %rd4177;
	and.b64  	%rd4278, %rd4251, %rd4277;
	xor.b64  	%rd4279, %rd4278, %rd4177;
	add.s64 	%rd4280, %rd4276, %rd4279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2918,%dummy}, %rd4251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2919}, %rd4251;
	}
	shf.r.wrap.b32 	%r2920, %r2919, %r2918, 14;
	shf.r.wrap.b32 	%r2921, %r2918, %r2919, 14;
	mov.b64 	%rd4281, {%r2921, %r2920};
	shf.r.wrap.b32 	%r2922, %r2919, %r2918, 18;
	shf.r.wrap.b32 	%r2923, %r2918, %r2919, 18;
	mov.b64 	%rd4282, {%r2923, %r2922};
	xor.b64  	%rd4283, %rd4281, %rd4282;
	shf.l.wrap.b32 	%r2924, %r2918, %r2919, 23;
	shf.l.wrap.b32 	%r2925, %r2919, %r2918, 23;
	mov.b64 	%rd4284, {%r2925, %r2924};
	xor.b64  	%rd4285, %rd4283, %rd4284;
	add.s64 	%rd4286, %rd4280, %rd4285;
	add.s64 	%rd4287, %rd4286, -6333637450476146687;
	add.s64 	%rd4288, %rd4287, %rd4151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2926,%dummy}, %rd4262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2927}, %rd4262;
	}
	shf.r.wrap.b32 	%r2928, %r2927, %r2926, 28;
	shf.r.wrap.b32 	%r2929, %r2926, %r2927, 28;
	mov.b64 	%rd4289, {%r2929, %r2928};
	shf.l.wrap.b32 	%r2930, %r2926, %r2927, 30;
	shf.l.wrap.b32 	%r2931, %r2927, %r2926, 30;
	mov.b64 	%rd4290, {%r2931, %r2930};
	xor.b64  	%rd4291, %rd4289, %rd4290;
	shf.l.wrap.b32 	%r2932, %r2926, %r2927, 25;
	shf.l.wrap.b32 	%r2933, %r2927, %r2926, 25;
	mov.b64 	%rd4292, {%r2933, %r2932};
	xor.b64  	%rd4293, %rd4291, %rd4292;
	and.b64  	%rd4294, %rd4262, %rd4225;
	or.b64  	%rd4295, %rd4262, %rd4225;
	and.b64  	%rd4296, %rd4295, %rd4188;
	or.b64  	%rd4297, %rd4296, %rd4294;
	add.s64 	%rd4298, %rd4297, %rd4293;
	add.s64 	%rd4299, %rd4298, %rd4287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2934,%dummy}, %rd4238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2935}, %rd4238;
	}
	shf.r.wrap.b32 	%r2936, %r2935, %r2934, 19;
	shf.r.wrap.b32 	%r2937, %r2934, %r2935, 19;
	mov.b64 	%rd4300, {%r2937, %r2936};
	shf.l.wrap.b32 	%r2938, %r2934, %r2935, 3;
	shf.l.wrap.b32 	%r2939, %r2935, %r2934, 3;
	mov.b64 	%rd4301, {%r2939, %r2938};
	xor.b64  	%rd4302, %rd4300, %rd4301;
	shr.u64 	%rd4303, %rd4238, 6;
	xor.b64  	%rd4304, %rd4302, %rd4303;
	shf.r.wrap.b32 	%r2940, %r2597, %r2596, 1;
	shf.r.wrap.b32 	%r2941, %r2596, %r2597, 1;
	mov.b64 	%rd4305, {%r2941, %r2940};
	shf.r.wrap.b32 	%r2942, %r2597, %r2596, 8;
	shf.r.wrap.b32 	%r2943, %r2596, %r2597, 8;
	mov.b64 	%rd4306, {%r2943, %r2942};
	xor.b64  	%rd4307, %rd4305, %rd4306;
	shr.u64 	%rd4308, %rd3757, 7;
	xor.b64  	%rd4309, %rd4307, %rd4308;
	add.s64 	%rd4310, %rd4304, %rd3720;
	add.s64 	%rd4311, %rd4310, %rd4053;
	add.s64 	%rd4312, %rd4311, %rd4309;
	add.s64 	%rd4313, %rd4312, %rd4177;
	xor.b64  	%rd4314, %rd4251, %rd4214;
	and.b64  	%rd4315, %rd4288, %rd4314;
	xor.b64  	%rd4316, %rd4315, %rd4214;
	add.s64 	%rd4317, %rd4313, %rd4316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2944,%dummy}, %rd4288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd4288;
	}
	shf.r.wrap.b32 	%r2946, %r2945, %r2944, 14;
	shf.r.wrap.b32 	%r2947, %r2944, %r2945, 14;
	mov.b64 	%rd4318, {%r2947, %r2946};
	shf.r.wrap.b32 	%r2948, %r2945, %r2944, 18;
	shf.r.wrap.b32 	%r2949, %r2944, %r2945, 18;
	mov.b64 	%rd4319, {%r2949, %r2948};
	xor.b64  	%rd4320, %rd4318, %rd4319;
	shf.l.wrap.b32 	%r2950, %r2944, %r2945, 23;
	shf.l.wrap.b32 	%r2951, %r2945, %r2944, 23;
	mov.b64 	%rd4321, {%r2951, %r2950};
	xor.b64  	%rd4322, %rd4320, %rd4321;
	add.s64 	%rd4323, %rd4317, %rd4322;
	add.s64 	%rd4324, %rd4323, -4446306890439682159;
	add.s64 	%rd4325, %rd4324, %rd4188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2952,%dummy}, %rd4299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2953}, %rd4299;
	}
	shf.r.wrap.b32 	%r2954, %r2953, %r2952, 28;
	shf.r.wrap.b32 	%r2955, %r2952, %r2953, 28;
	mov.b64 	%rd4326, {%r2955, %r2954};
	shf.l.wrap.b32 	%r2956, %r2952, %r2953, 30;
	shf.l.wrap.b32 	%r2957, %r2953, %r2952, 30;
	mov.b64 	%rd4327, {%r2957, %r2956};
	xor.b64  	%rd4328, %rd4326, %rd4327;
	shf.l.wrap.b32 	%r2958, %r2952, %r2953, 25;
	shf.l.wrap.b32 	%r2959, %r2953, %r2952, 25;
	mov.b64 	%rd4329, {%r2959, %r2958};
	xor.b64  	%rd4330, %rd4328, %rd4329;
	and.b64  	%rd4331, %rd4299, %rd4262;
	or.b64  	%rd4332, %rd4299, %rd4262;
	and.b64  	%rd4333, %rd4332, %rd4225;
	or.b64  	%rd4334, %rd4333, %rd4331;
	add.s64 	%rd4335, %rd4334, %rd4330;
	add.s64 	%rd4336, %rd4335, %rd4324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2960,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2961}, %rd4275;
	}
	shf.r.wrap.b32 	%r2962, %r2961, %r2960, 19;
	shf.r.wrap.b32 	%r2963, %r2960, %r2961, 19;
	mov.b64 	%rd4337, {%r2963, %r2962};
	shf.l.wrap.b32 	%r2964, %r2960, %r2961, 3;
	shf.l.wrap.b32 	%r2965, %r2961, %r2960, 3;
	mov.b64 	%rd4338, {%r2965, %r2964};
	xor.b64  	%rd4339, %rd4337, %rd4338;
	shr.u64 	%rd4340, %rd4275, 6;
	xor.b64  	%rd4341, %rd4339, %rd4340;
	shf.r.wrap.b32 	%r2966, %r2623, %r2622, 1;
	shf.r.wrap.b32 	%r2967, %r2622, %r2623, 1;
	mov.b64 	%rd4342, {%r2967, %r2966};
	shf.r.wrap.b32 	%r2968, %r2623, %r2622, 8;
	shf.r.wrap.b32 	%r2969, %r2622, %r2623, 8;
	mov.b64 	%rd4343, {%r2969, %r2968};
	xor.b64  	%rd4344, %rd4342, %rd4343;
	shr.u64 	%rd4345, %rd3794, 7;
	xor.b64  	%rd4346, %rd4344, %rd4345;
	add.s64 	%rd4347, %rd4341, %rd3757;
	add.s64 	%rd4348, %rd4347, %rd4090;
	add.s64 	%rd4349, %rd4348, %rd4346;
	add.s64 	%rd4350, %rd4349, %rd4214;
	xor.b64  	%rd4351, %rd4288, %rd4251;
	and.b64  	%rd4352, %rd4325, %rd4351;
	xor.b64  	%rd4353, %rd4352, %rd4251;
	add.s64 	%rd4354, %rd4350, %rd4353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd4325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd4325;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 14;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 14;
	mov.b64 	%rd4355, {%r2973, %r2972};
	shf.r.wrap.b32 	%r2974, %r2971, %r2970, 18;
	shf.r.wrap.b32 	%r2975, %r2970, %r2971, 18;
	mov.b64 	%rd4356, {%r2975, %r2974};
	xor.b64  	%rd4357, %rd4355, %rd4356;
	shf.l.wrap.b32 	%r2976, %r2970, %r2971, 23;
	shf.l.wrap.b32 	%r2977, %r2971, %r2970, 23;
	mov.b64 	%rd4358, {%r2977, %r2976};
	xor.b64  	%rd4359, %rd4357, %rd4358;
	add.s64 	%rd4360, %rd4354, %rd4359;
	add.s64 	%rd4361, %rd4360, -4076793802049405392;
	add.s64 	%rd4362, %rd4361, %rd4225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd4336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd4336;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 28;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 28;
	mov.b64 	%rd4363, {%r2981, %r2980};
	shf.l.wrap.b32 	%r2982, %r2978, %r2979, 30;
	shf.l.wrap.b32 	%r2983, %r2979, %r2978, 30;
	mov.b64 	%rd4364, {%r2983, %r2982};
	xor.b64  	%rd4365, %rd4363, %rd4364;
	shf.l.wrap.b32 	%r2984, %r2978, %r2979, 25;
	shf.l.wrap.b32 	%r2985, %r2979, %r2978, 25;
	mov.b64 	%rd4366, {%r2985, %r2984};
	xor.b64  	%rd4367, %rd4365, %rd4366;
	and.b64  	%rd4368, %rd4336, %rd4299;
	or.b64  	%rd4369, %rd4336, %rd4299;
	and.b64  	%rd4370, %rd4369, %rd4262;
	or.b64  	%rd4371, %rd4370, %rd4368;
	add.s64 	%rd4372, %rd4371, %rd4367;
	add.s64 	%rd4373, %rd4372, %rd4361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2987}, %rd4312;
	}
	shf.r.wrap.b32 	%r2988, %r2987, %r2986, 19;
	shf.r.wrap.b32 	%r2989, %r2986, %r2987, 19;
	mov.b64 	%rd4374, {%r2989, %r2988};
	shf.l.wrap.b32 	%r2990, %r2986, %r2987, 3;
	shf.l.wrap.b32 	%r2991, %r2987, %r2986, 3;
	mov.b64 	%rd4375, {%r2991, %r2990};
	xor.b64  	%rd4376, %rd4374, %rd4375;
	shr.u64 	%rd4377, %rd4312, 6;
	xor.b64  	%rd4378, %rd4376, %rd4377;
	shf.r.wrap.b32 	%r2992, %r2649, %r2648, 1;
	shf.r.wrap.b32 	%r2993, %r2648, %r2649, 1;
	mov.b64 	%rd4379, {%r2993, %r2992};
	shf.r.wrap.b32 	%r2994, %r2649, %r2648, 8;
	shf.r.wrap.b32 	%r2995, %r2648, %r2649, 8;
	mov.b64 	%rd4380, {%r2995, %r2994};
	xor.b64  	%rd4381, %rd4379, %rd4380;
	shr.u64 	%rd4382, %rd3831, 7;
	xor.b64  	%rd4383, %rd4381, %rd4382;
	add.s64 	%rd4384, %rd4378, %rd3794;
	add.s64 	%rd4385, %rd4384, %rd4127;
	add.s64 	%rd4386, %rd4385, %rd4383;
	add.s64 	%rd4387, %rd4386, %rd4251;
	xor.b64  	%rd4388, %rd4325, %rd4288;
	and.b64  	%rd4389, %rd4362, %rd4388;
	xor.b64  	%rd4390, %rd4389, %rd4288;
	add.s64 	%rd4391, %rd4387, %rd4390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2996,%dummy}, %rd4362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2997}, %rd4362;
	}
	shf.r.wrap.b32 	%r2998, %r2997, %r2996, 14;
	shf.r.wrap.b32 	%r2999, %r2996, %r2997, 14;
	mov.b64 	%rd4392, {%r2999, %r2998};
	shf.r.wrap.b32 	%r3000, %r2997, %r2996, 18;
	shf.r.wrap.b32 	%r3001, %r2996, %r2997, 18;
	mov.b64 	%rd4393, {%r3001, %r3000};
	xor.b64  	%rd4394, %rd4392, %rd4393;
	shf.l.wrap.b32 	%r3002, %r2996, %r2997, 23;
	shf.l.wrap.b32 	%r3003, %r2997, %r2996, 23;
	mov.b64 	%rd4395, {%r3003, %r3002};
	xor.b64  	%rd4396, %rd4394, %rd4395;
	add.s64 	%rd4397, %rd4391, %rd4396;
	add.s64 	%rd4398, %rd4397, -3345356375505022440;
	add.s64 	%rd4399, %rd4398, %rd4262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3004,%dummy}, %rd4373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3005}, %rd4373;
	}
	shf.r.wrap.b32 	%r3006, %r3005, %r3004, 28;
	shf.r.wrap.b32 	%r3007, %r3004, %r3005, 28;
	mov.b64 	%rd4400, {%r3007, %r3006};
	shf.l.wrap.b32 	%r3008, %r3004, %r3005, 30;
	shf.l.wrap.b32 	%r3009, %r3005, %r3004, 30;
	mov.b64 	%rd4401, {%r3009, %r3008};
	xor.b64  	%rd4402, %rd4400, %rd4401;
	shf.l.wrap.b32 	%r3010, %r3004, %r3005, 25;
	shf.l.wrap.b32 	%r3011, %r3005, %r3004, 25;
	mov.b64 	%rd4403, {%r3011, %r3010};
	xor.b64  	%rd4404, %rd4402, %rd4403;
	and.b64  	%rd4405, %rd4373, %rd4336;
	or.b64  	%rd4406, %rd4373, %rd4336;
	and.b64  	%rd4407, %rd4406, %rd4299;
	or.b64  	%rd4408, %rd4407, %rd4405;
	add.s64 	%rd4409, %rd4408, %rd4404;
	add.s64 	%rd4410, %rd4409, %rd4398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3012,%dummy}, %rd4349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3013}, %rd4349;
	}
	shf.r.wrap.b32 	%r3014, %r3013, %r3012, 19;
	shf.r.wrap.b32 	%r3015, %r3012, %r3013, 19;
	mov.b64 	%rd4411, {%r3015, %r3014};
	shf.l.wrap.b32 	%r3016, %r3012, %r3013, 3;
	shf.l.wrap.b32 	%r3017, %r3013, %r3012, 3;
	mov.b64 	%rd4412, {%r3017, %r3016};
	xor.b64  	%rd4413, %rd4411, %rd4412;
	shr.u64 	%rd4414, %rd4349, 6;
	xor.b64  	%rd4415, %rd4413, %rd4414;
	shf.r.wrap.b32 	%r3018, %r2675, %r2674, 1;
	shf.r.wrap.b32 	%r3019, %r2674, %r2675, 1;
	mov.b64 	%rd4416, {%r3019, %r3018};
	shf.r.wrap.b32 	%r3020, %r2675, %r2674, 8;
	shf.r.wrap.b32 	%r3021, %r2674, %r2675, 8;
	mov.b64 	%rd4417, {%r3021, %r3020};
	xor.b64  	%rd4418, %rd4416, %rd4417;
	shr.u64 	%rd4419, %rd3868, 7;
	xor.b64  	%rd4420, %rd4418, %rd4419;
	add.s64 	%rd4421, %rd4415, %rd3831;
	add.s64 	%rd4422, %rd4421, %rd4164;
	add.s64 	%rd4423, %rd4422, %rd4420;
	add.s64 	%rd4424, %rd4423, %rd4288;
	xor.b64  	%rd4425, %rd4362, %rd4325;
	and.b64  	%rd4426, %rd4399, %rd4425;
	xor.b64  	%rd4427, %rd4426, %rd4325;
	add.s64 	%rd4428, %rd4424, %rd4427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3022,%dummy}, %rd4399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3023}, %rd4399;
	}
	shf.r.wrap.b32 	%r3024, %r3023, %r3022, 14;
	shf.r.wrap.b32 	%r3025, %r3022, %r3023, 14;
	mov.b64 	%rd4429, {%r3025, %r3024};
	shf.r.wrap.b32 	%r3026, %r3023, %r3022, 18;
	shf.r.wrap.b32 	%r3027, %r3022, %r3023, 18;
	mov.b64 	%rd4430, {%r3027, %r3026};
	xor.b64  	%rd4431, %rd4429, %rd4430;
	shf.l.wrap.b32 	%r3028, %r3022, %r3023, 23;
	shf.l.wrap.b32 	%r3029, %r3023, %r3022, 23;
	mov.b64 	%rd4432, {%r3029, %r3028};
	xor.b64  	%rd4433, %rd4431, %rd4432;
	add.s64 	%rd4434, %rd4428, %rd4433;
	add.s64 	%rd4435, %rd4434, -2983346525034927856;
	add.s64 	%rd4436, %rd4435, %rd4299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3030,%dummy}, %rd4410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3031}, %rd4410;
	}
	shf.r.wrap.b32 	%r3032, %r3031, %r3030, 28;
	shf.r.wrap.b32 	%r3033, %r3030, %r3031, 28;
	mov.b64 	%rd4437, {%r3033, %r3032};
	shf.l.wrap.b32 	%r3034, %r3030, %r3031, 30;
	shf.l.wrap.b32 	%r3035, %r3031, %r3030, 30;
	mov.b64 	%rd4438, {%r3035, %r3034};
	xor.b64  	%rd4439, %rd4437, %rd4438;
	shf.l.wrap.b32 	%r3036, %r3030, %r3031, 25;
	shf.l.wrap.b32 	%r3037, %r3031, %r3030, 25;
	mov.b64 	%rd4440, {%r3037, %r3036};
	xor.b64  	%rd4441, %rd4439, %rd4440;
	and.b64  	%rd4442, %rd4410, %rd4373;
	or.b64  	%rd4443, %rd4410, %rd4373;
	and.b64  	%rd4444, %rd4443, %rd4336;
	or.b64  	%rd4445, %rd4444, %rd4442;
	add.s64 	%rd4446, %rd4445, %rd4441;
	add.s64 	%rd4447, %rd4446, %rd4435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3038,%dummy}, %rd4386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3039}, %rd4386;
	}
	shf.r.wrap.b32 	%r3040, %r3039, %r3038, 19;
	shf.r.wrap.b32 	%r3041, %r3038, %r3039, 19;
	mov.b64 	%rd4448, {%r3041, %r3040};
	shf.l.wrap.b32 	%r3042, %r3038, %r3039, 3;
	shf.l.wrap.b32 	%r3043, %r3039, %r3038, 3;
	mov.b64 	%rd4449, {%r3043, %r3042};
	xor.b64  	%rd4450, %rd4448, %rd4449;
	shr.u64 	%rd4451, %rd4386, 6;
	xor.b64  	%rd4452, %rd4450, %rd4451;
	shf.r.wrap.b32 	%r3044, %r2701, %r2700, 1;
	shf.r.wrap.b32 	%r3045, %r2700, %r2701, 1;
	mov.b64 	%rd4453, {%r3045, %r3044};
	shf.r.wrap.b32 	%r3046, %r2701, %r2700, 8;
	shf.r.wrap.b32 	%r3047, %r2700, %r2701, 8;
	mov.b64 	%rd4454, {%r3047, %r3046};
	xor.b64  	%rd4455, %rd4453, %rd4454;
	shr.u64 	%rd4456, %rd3905, 7;
	xor.b64  	%rd4457, %rd4455, %rd4456;
	add.s64 	%rd4458, %rd4452, %rd3868;
	add.s64 	%rd4459, %rd4458, %rd4201;
	add.s64 	%rd4460, %rd4459, %rd4457;
	add.s64 	%rd4461, %rd4460, %rd4325;
	xor.b64  	%rd4462, %rd4399, %rd4362;
	and.b64  	%rd4463, %rd4436, %rd4462;
	xor.b64  	%rd4464, %rd4463, %rd4362;
	add.s64 	%rd4465, %rd4461, %rd4464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3048,%dummy}, %rd4436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd4436;
	}
	shf.r.wrap.b32 	%r3050, %r3049, %r3048, 14;
	shf.r.wrap.b32 	%r3051, %r3048, %r3049, 14;
	mov.b64 	%rd4466, {%r3051, %r3050};
	shf.r.wrap.b32 	%r3052, %r3049, %r3048, 18;
	shf.r.wrap.b32 	%r3053, %r3048, %r3049, 18;
	mov.b64 	%rd4467, {%r3053, %r3052};
	xor.b64  	%rd4468, %rd4466, %rd4467;
	shf.l.wrap.b32 	%r3054, %r3048, %r3049, 23;
	shf.l.wrap.b32 	%r3055, %r3049, %r3048, 23;
	mov.b64 	%rd4469, {%r3055, %r3054};
	xor.b64  	%rd4470, %rd4468, %rd4469;
	add.s64 	%rd4471, %rd4465, %rd4470;
	add.s64 	%rd4472, %rd4471, -860691631967231958;
	add.s64 	%rd4473, %rd4472, %rd4336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3056,%dummy}, %rd4447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3057}, %rd4447;
	}
	shf.r.wrap.b32 	%r3058, %r3057, %r3056, 28;
	shf.r.wrap.b32 	%r3059, %r3056, %r3057, 28;
	mov.b64 	%rd4474, {%r3059, %r3058};
	shf.l.wrap.b32 	%r3060, %r3056, %r3057, 30;
	shf.l.wrap.b32 	%r3061, %r3057, %r3056, 30;
	mov.b64 	%rd4475, {%r3061, %r3060};
	xor.b64  	%rd4476, %rd4474, %rd4475;
	shf.l.wrap.b32 	%r3062, %r3056, %r3057, 25;
	shf.l.wrap.b32 	%r3063, %r3057, %r3056, 25;
	mov.b64 	%rd4477, {%r3063, %r3062};
	xor.b64  	%rd4478, %rd4476, %rd4477;
	and.b64  	%rd4479, %rd4447, %rd4410;
	or.b64  	%rd4480, %rd4447, %rd4410;
	and.b64  	%rd4481, %rd4480, %rd4373;
	or.b64  	%rd4482, %rd4481, %rd4479;
	add.s64 	%rd4483, %rd4482, %rd4478;
	add.s64 	%rd4484, %rd4483, %rd4472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3064,%dummy}, %rd4423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3065}, %rd4423;
	}
	shf.r.wrap.b32 	%r3066, %r3065, %r3064, 19;
	shf.r.wrap.b32 	%r3067, %r3064, %r3065, 19;
	mov.b64 	%rd4485, {%r3067, %r3066};
	shf.l.wrap.b32 	%r3068, %r3064, %r3065, 3;
	shf.l.wrap.b32 	%r3069, %r3065, %r3064, 3;
	mov.b64 	%rd4486, {%r3069, %r3068};
	xor.b64  	%rd4487, %rd4485, %rd4486;
	shr.u64 	%rd4488, %rd4423, 6;
	xor.b64  	%rd4489, %rd4487, %rd4488;
	shf.r.wrap.b32 	%r3070, %r2727, %r2726, 1;
	shf.r.wrap.b32 	%r3071, %r2726, %r2727, 1;
	mov.b64 	%rd4490, {%r3071, %r3070};
	shf.r.wrap.b32 	%r3072, %r2727, %r2726, 8;
	shf.r.wrap.b32 	%r3073, %r2726, %r2727, 8;
	mov.b64 	%rd4491, {%r3073, %r3072};
	xor.b64  	%rd4492, %rd4490, %rd4491;
	shr.u64 	%rd4493, %rd3942, 7;
	xor.b64  	%rd4494, %rd4492, %rd4493;
	add.s64 	%rd4495, %rd4489, %rd3905;
	add.s64 	%rd4496, %rd4495, %rd4238;
	add.s64 	%rd4497, %rd4496, %rd4494;
	add.s64 	%rd4498, %rd4497, %rd4362;
	xor.b64  	%rd4499, %rd4436, %rd4399;
	and.b64  	%rd4500, %rd4473, %rd4499;
	xor.b64  	%rd4501, %rd4500, %rd4399;
	add.s64 	%rd4502, %rd4498, %rd4501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd4473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd4473;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 14;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 14;
	mov.b64 	%rd4503, {%r3077, %r3076};
	shf.r.wrap.b32 	%r3078, %r3075, %r3074, 18;
	shf.r.wrap.b32 	%r3079, %r3074, %r3075, 18;
	mov.b64 	%rd4504, {%r3079, %r3078};
	xor.b64  	%rd4505, %rd4503, %rd4504;
	shf.l.wrap.b32 	%r3080, %r3074, %r3075, 23;
	shf.l.wrap.b32 	%r3081, %r3075, %r3074, 23;
	mov.b64 	%rd4506, {%r3081, %r3080};
	xor.b64  	%rd4507, %rd4505, %rd4506;
	add.s64 	%rd4508, %rd4502, %rd4507;
	add.s64 	%rd4509, %rd4508, 1182934255886127544;
	add.s64 	%rd4510, %rd4509, %rd4373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3082,%dummy}, %rd4484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3083}, %rd4484;
	}
	shf.r.wrap.b32 	%r3084, %r3083, %r3082, 28;
	shf.r.wrap.b32 	%r3085, %r3082, %r3083, 28;
	mov.b64 	%rd4511, {%r3085, %r3084};
	shf.l.wrap.b32 	%r3086, %r3082, %r3083, 30;
	shf.l.wrap.b32 	%r3087, %r3083, %r3082, 30;
	mov.b64 	%rd4512, {%r3087, %r3086};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	shf.l.wrap.b32 	%r3088, %r3082, %r3083, 25;
	shf.l.wrap.b32 	%r3089, %r3083, %r3082, 25;
	mov.b64 	%rd4514, {%r3089, %r3088};
	xor.b64  	%rd4515, %rd4513, %rd4514;
	and.b64  	%rd4516, %rd4484, %rd4447;
	or.b64  	%rd4517, %rd4484, %rd4447;
	and.b64  	%rd4518, %rd4517, %rd4410;
	or.b64  	%rd4519, %rd4518, %rd4516;
	add.s64 	%rd4520, %rd4519, %rd4515;
	add.s64 	%rd4521, %rd4520, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd4460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd4460;
	}
	shf.r.wrap.b32 	%r3092, %r3091, %r3090, 19;
	shf.r.wrap.b32 	%r3093, %r3090, %r3091, 19;
	mov.b64 	%rd4522, {%r3093, %r3092};
	shf.l.wrap.b32 	%r3094, %r3090, %r3091, 3;
	shf.l.wrap.b32 	%r3095, %r3091, %r3090, 3;
	mov.b64 	%rd4523, {%r3095, %r3094};
	xor.b64  	%rd4524, %rd4522, %rd4523;
	shr.u64 	%rd4525, %rd4460, 6;
	xor.b64  	%rd4526, %rd4524, %rd4525;
	shf.r.wrap.b32 	%r3096, %r2753, %r2752, 1;
	shf.r.wrap.b32 	%r3097, %r2752, %r2753, 1;
	mov.b64 	%rd4527, {%r3097, %r3096};
	shf.r.wrap.b32 	%r3098, %r2753, %r2752, 8;
	shf.r.wrap.b32 	%r3099, %r2752, %r2753, 8;
	mov.b64 	%rd4528, {%r3099, %r3098};
	xor.b64  	%rd4529, %rd4527, %rd4528;
	shr.u64 	%rd4530, %rd3979, 7;
	xor.b64  	%rd4531, %rd4529, %rd4530;
	add.s64 	%rd4532, %rd4526, %rd3942;
	add.s64 	%rd4533, %rd4532, %rd4275;
	add.s64 	%rd4534, %rd4533, %rd4531;
	add.s64 	%rd4535, %rd4534, %rd4399;
	xor.b64  	%rd4536, %rd4473, %rd4436;
	and.b64  	%rd4537, %rd4510, %rd4536;
	xor.b64  	%rd4538, %rd4537, %rd4436;
	add.s64 	%rd4539, %rd4535, %rd4538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3100,%dummy}, %rd4510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3101}, %rd4510;
	}
	shf.r.wrap.b32 	%r3102, %r3101, %r3100, 14;
	shf.r.wrap.b32 	%r3103, %r3100, %r3101, 14;
	mov.b64 	%rd4540, {%r3103, %r3102};
	shf.r.wrap.b32 	%r3104, %r3101, %r3100, 18;
	shf.r.wrap.b32 	%r3105, %r3100, %r3101, 18;
	mov.b64 	%rd4541, {%r3105, %r3104};
	xor.b64  	%rd4542, %rd4540, %rd4541;
	shf.l.wrap.b32 	%r3106, %r3100, %r3101, 23;
	shf.l.wrap.b32 	%r3107, %r3101, %r3100, 23;
	mov.b64 	%rd4543, {%r3107, %r3106};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	add.s64 	%rd4545, %rd4539, %rd4544;
	add.s64 	%rd4546, %rd4545, 1847814050463011016;
	add.s64 	%rd4547, %rd4546, %rd4410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3108,%dummy}, %rd4521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3109}, %rd4521;
	}
	shf.r.wrap.b32 	%r3110, %r3109, %r3108, 28;
	shf.r.wrap.b32 	%r3111, %r3108, %r3109, 28;
	mov.b64 	%rd4548, {%r3111, %r3110};
	shf.l.wrap.b32 	%r3112, %r3108, %r3109, 30;
	shf.l.wrap.b32 	%r3113, %r3109, %r3108, 30;
	mov.b64 	%rd4549, {%r3113, %r3112};
	xor.b64  	%rd4550, %rd4548, %rd4549;
	shf.l.wrap.b32 	%r3114, %r3108, %r3109, 25;
	shf.l.wrap.b32 	%r3115, %r3109, %r3108, 25;
	mov.b64 	%rd4551, {%r3115, %r3114};
	xor.b64  	%rd4552, %rd4550, %rd4551;
	and.b64  	%rd4553, %rd4521, %rd4484;
	or.b64  	%rd4554, %rd4521, %rd4484;
	and.b64  	%rd4555, %rd4554, %rd4447;
	or.b64  	%rd4556, %rd4555, %rd4553;
	add.s64 	%rd4557, %rd4556, %rd4552;
	add.s64 	%rd4558, %rd4557, %rd4546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3116,%dummy}, %rd4497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3117}, %rd4497;
	}
	shf.r.wrap.b32 	%r3118, %r3117, %r3116, 19;
	shf.r.wrap.b32 	%r3119, %r3116, %r3117, 19;
	mov.b64 	%rd4559, {%r3119, %r3118};
	shf.l.wrap.b32 	%r3120, %r3116, %r3117, 3;
	shf.l.wrap.b32 	%r3121, %r3117, %r3116, 3;
	mov.b64 	%rd4560, {%r3121, %r3120};
	xor.b64  	%rd4561, %rd4559, %rd4560;
	shr.u64 	%rd4562, %rd4497, 6;
	xor.b64  	%rd4563, %rd4561, %rd4562;
	shf.r.wrap.b32 	%r3122, %r2779, %r2778, 1;
	shf.r.wrap.b32 	%r3123, %r2778, %r2779, 1;
	mov.b64 	%rd4564, {%r3123, %r3122};
	shf.r.wrap.b32 	%r3124, %r2779, %r2778, 8;
	shf.r.wrap.b32 	%r3125, %r2778, %r2779, 8;
	mov.b64 	%rd4565, {%r3125, %r3124};
	xor.b64  	%rd4566, %rd4564, %rd4565;
	shr.u64 	%rd4567, %rd4016, 7;
	xor.b64  	%rd4568, %rd4566, %rd4567;
	add.s64 	%rd4569, %rd4563, %rd3979;
	add.s64 	%rd4570, %rd4569, %rd4312;
	add.s64 	%rd4571, %rd4570, %rd4568;
	add.s64 	%rd4572, %rd4571, %rd4436;
	xor.b64  	%rd4573, %rd4510, %rd4473;
	and.b64  	%rd4574, %rd4547, %rd4573;
	xor.b64  	%rd4575, %rd4574, %rd4473;
	add.s64 	%rd4576, %rd4572, %rd4575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd4547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd4547;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 14;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 14;
	mov.b64 	%rd4577, {%r3129, %r3128};
	shf.r.wrap.b32 	%r3130, %r3127, %r3126, 18;
	shf.r.wrap.b32 	%r3131, %r3126, %r3127, 18;
	mov.b64 	%rd4578, {%r3131, %r3130};
	xor.b64  	%rd4579, %rd4577, %rd4578;
	shf.l.wrap.b32 	%r3132, %r3126, %r3127, 23;
	shf.l.wrap.b32 	%r3133, %r3127, %r3126, 23;
	mov.b64 	%rd4580, {%r3133, %r3132};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	add.s64 	%rd4582, %rd4576, %rd4581;
	add.s64 	%rd4583, %rd4582, 2177327727835720531;
	add.s64 	%rd4584, %rd4583, %rd4447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3134,%dummy}, %rd4558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3135}, %rd4558;
	}
	shf.r.wrap.b32 	%r3136, %r3135, %r3134, 28;
	shf.r.wrap.b32 	%r3137, %r3134, %r3135, 28;
	mov.b64 	%rd4585, {%r3137, %r3136};
	shf.l.wrap.b32 	%r3138, %r3134, %r3135, 30;
	shf.l.wrap.b32 	%r3139, %r3135, %r3134, 30;
	mov.b64 	%rd4586, {%r3139, %r3138};
	xor.b64  	%rd4587, %rd4585, %rd4586;
	shf.l.wrap.b32 	%r3140, %r3134, %r3135, 25;
	shf.l.wrap.b32 	%r3141, %r3135, %r3134, 25;
	mov.b64 	%rd4588, {%r3141, %r3140};
	xor.b64  	%rd4589, %rd4587, %rd4588;
	and.b64  	%rd4590, %rd4558, %rd4521;
	or.b64  	%rd4591, %rd4558, %rd4521;
	and.b64  	%rd4592, %rd4591, %rd4484;
	or.b64  	%rd4593, %rd4592, %rd4590;
	add.s64 	%rd4594, %rd4593, %rd4589;
	add.s64 	%rd4595, %rd4594, %rd4583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3142,%dummy}, %rd4534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3143}, %rd4534;
	}
	shf.r.wrap.b32 	%r3144, %r3143, %r3142, 19;
	shf.r.wrap.b32 	%r3145, %r3142, %r3143, 19;
	mov.b64 	%rd4596, {%r3145, %r3144};
	shf.l.wrap.b32 	%r3146, %r3142, %r3143, 3;
	shf.l.wrap.b32 	%r3147, %r3143, %r3142, 3;
	mov.b64 	%rd4597, {%r3147, %r3146};
	xor.b64  	%rd4598, %rd4596, %rd4597;
	shr.u64 	%rd4599, %rd4534, 6;
	xor.b64  	%rd4600, %rd4598, %rd4599;
	shf.r.wrap.b32 	%r3148, %r2805, %r2804, 1;
	shf.r.wrap.b32 	%r3149, %r2804, %r2805, 1;
	mov.b64 	%rd4601, {%r3149, %r3148};
	shf.r.wrap.b32 	%r3150, %r2805, %r2804, 8;
	shf.r.wrap.b32 	%r3151, %r2804, %r2805, 8;
	mov.b64 	%rd4602, {%r3151, %r3150};
	xor.b64  	%rd4603, %rd4601, %rd4602;
	shr.u64 	%rd4604, %rd4053, 7;
	xor.b64  	%rd4605, %rd4603, %rd4604;
	add.s64 	%rd4606, %rd4600, %rd4016;
	add.s64 	%rd4607, %rd4606, %rd4349;
	add.s64 	%rd4608, %rd4607, %rd4605;
	add.s64 	%rd4609, %rd4608, %rd4473;
	xor.b64  	%rd4610, %rd4547, %rd4510;
	and.b64  	%rd4611, %rd4584, %rd4610;
	xor.b64  	%rd4612, %rd4611, %rd4510;
	add.s64 	%rd4613, %rd4609, %rd4612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3152,%dummy}, %rd4584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd4584;
	}
	shf.r.wrap.b32 	%r3154, %r3153, %r3152, 14;
	shf.r.wrap.b32 	%r3155, %r3152, %r3153, 14;
	mov.b64 	%rd4614, {%r3155, %r3154};
	shf.r.wrap.b32 	%r3156, %r3153, %r3152, 18;
	shf.r.wrap.b32 	%r3157, %r3152, %r3153, 18;
	mov.b64 	%rd4615, {%r3157, %r3156};
	xor.b64  	%rd4616, %rd4614, %rd4615;
	shf.l.wrap.b32 	%r3158, %r3152, %r3153, 23;
	shf.l.wrap.b32 	%r3159, %r3153, %r3152, 23;
	mov.b64 	%rd4617, {%r3159, %r3158};
	xor.b64  	%rd4618, %rd4616, %rd4617;
	add.s64 	%rd4619, %rd4613, %rd4618;
	add.s64 	%rd4620, %rd4619, 2830643537854262169;
	add.s64 	%rd4621, %rd4620, %rd4484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3160,%dummy}, %rd4595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3161}, %rd4595;
	}
	shf.r.wrap.b32 	%r3162, %r3161, %r3160, 28;
	shf.r.wrap.b32 	%r3163, %r3160, %r3161, 28;
	mov.b64 	%rd4622, {%r3163, %r3162};
	shf.l.wrap.b32 	%r3164, %r3160, %r3161, 30;
	shf.l.wrap.b32 	%r3165, %r3161, %r3160, 30;
	mov.b64 	%rd4623, {%r3165, %r3164};
	xor.b64  	%rd4624, %rd4622, %rd4623;
	shf.l.wrap.b32 	%r3166, %r3160, %r3161, 25;
	shf.l.wrap.b32 	%r3167, %r3161, %r3160, 25;
	mov.b64 	%rd4625, {%r3167, %r3166};
	xor.b64  	%rd4626, %rd4624, %rd4625;
	and.b64  	%rd4627, %rd4595, %rd4558;
	or.b64  	%rd4628, %rd4595, %rd4558;
	and.b64  	%rd4629, %rd4628, %rd4521;
	or.b64  	%rd4630, %rd4629, %rd4627;
	add.s64 	%rd4631, %rd4630, %rd4626;
	add.s64 	%rd4632, %rd4631, %rd4620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3168,%dummy}, %rd4571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3169}, %rd4571;
	}
	shf.r.wrap.b32 	%r3170, %r3169, %r3168, 19;
	shf.r.wrap.b32 	%r3171, %r3168, %r3169, 19;
	mov.b64 	%rd4633, {%r3171, %r3170};
	shf.l.wrap.b32 	%r3172, %r3168, %r3169, 3;
	shf.l.wrap.b32 	%r3173, %r3169, %r3168, 3;
	mov.b64 	%rd4634, {%r3173, %r3172};
	xor.b64  	%rd4635, %rd4633, %rd4634;
	shr.u64 	%rd4636, %rd4571, 6;
	xor.b64  	%rd4637, %rd4635, %rd4636;
	shf.r.wrap.b32 	%r3174, %r2831, %r2830, 1;
	shf.r.wrap.b32 	%r3175, %r2830, %r2831, 1;
	mov.b64 	%rd4638, {%r3175, %r3174};
	shf.r.wrap.b32 	%r3176, %r2831, %r2830, 8;
	shf.r.wrap.b32 	%r3177, %r2830, %r2831, 8;
	mov.b64 	%rd4639, {%r3177, %r3176};
	xor.b64  	%rd4640, %rd4638, %rd4639;
	shr.u64 	%rd4641, %rd4090, 7;
	xor.b64  	%rd4642, %rd4640, %rd4641;
	add.s64 	%rd4643, %rd4637, %rd4053;
	add.s64 	%rd4644, %rd4643, %rd4386;
	add.s64 	%rd4645, %rd4644, %rd4642;
	add.s64 	%rd4646, %rd4645, %rd4510;
	xor.b64  	%rd4647, %rd4584, %rd4547;
	and.b64  	%rd4648, %rd4621, %rd4647;
	xor.b64  	%rd4649, %rd4648, %rd4547;
	add.s64 	%rd4650, %rd4646, %rd4649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd4621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3179}, %rd4621;
	}
	shf.r.wrap.b32 	%r3180, %r3179, %r3178, 14;
	shf.r.wrap.b32 	%r3181, %r3178, %r3179, 14;
	mov.b64 	%rd4651, {%r3181, %r3180};
	shf.r.wrap.b32 	%r3182, %r3179, %r3178, 18;
	shf.r.wrap.b32 	%r3183, %r3178, %r3179, 18;
	mov.b64 	%rd4652, {%r3183, %r3182};
	xor.b64  	%rd4653, %rd4651, %rd4652;
	shf.l.wrap.b32 	%r3184, %r3178, %r3179, 23;
	shf.l.wrap.b32 	%r3185, %r3179, %r3178, 23;
	mov.b64 	%rd4654, {%r3185, %r3184};
	xor.b64  	%rd4655, %rd4653, %rd4654;
	add.s64 	%rd4656, %rd4650, %rd4655;
	add.s64 	%rd4657, %rd4656, 3796741975233480872;
	add.s64 	%rd4658, %rd4657, %rd4521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3186,%dummy}, %rd4632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3187}, %rd4632;
	}
	shf.r.wrap.b32 	%r3188, %r3187, %r3186, 28;
	shf.r.wrap.b32 	%r3189, %r3186, %r3187, 28;
	mov.b64 	%rd4659, {%r3189, %r3188};
	shf.l.wrap.b32 	%r3190, %r3186, %r3187, 30;
	shf.l.wrap.b32 	%r3191, %r3187, %r3186, 30;
	mov.b64 	%rd4660, {%r3191, %r3190};
	xor.b64  	%rd4661, %rd4659, %rd4660;
	shf.l.wrap.b32 	%r3192, %r3186, %r3187, 25;
	shf.l.wrap.b32 	%r3193, %r3187, %r3186, 25;
	mov.b64 	%rd4662, {%r3193, %r3192};
	xor.b64  	%rd4663, %rd4661, %rd4662;
	and.b64  	%rd4664, %rd4632, %rd4595;
	or.b64  	%rd4665, %rd4632, %rd4595;
	and.b64  	%rd4666, %rd4665, %rd4558;
	or.b64  	%rd4667, %rd4666, %rd4664;
	add.s64 	%rd4668, %rd4667, %rd4663;
	add.s64 	%rd4669, %rd4668, %rd4657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3194,%dummy}, %rd4608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3195}, %rd4608;
	}
	shf.r.wrap.b32 	%r3196, %r3195, %r3194, 19;
	shf.r.wrap.b32 	%r3197, %r3194, %r3195, 19;
	mov.b64 	%rd4670, {%r3197, %r3196};
	shf.l.wrap.b32 	%r3198, %r3194, %r3195, 3;
	shf.l.wrap.b32 	%r3199, %r3195, %r3194, 3;
	mov.b64 	%rd4671, {%r3199, %r3198};
	xor.b64  	%rd4672, %rd4670, %rd4671;
	shr.u64 	%rd4673, %rd4608, 6;
	xor.b64  	%rd4674, %rd4672, %rd4673;
	shf.r.wrap.b32 	%r3200, %r2857, %r2856, 1;
	shf.r.wrap.b32 	%r3201, %r2856, %r2857, 1;
	mov.b64 	%rd4675, {%r3201, %r3200};
	shf.r.wrap.b32 	%r3202, %r2857, %r2856, 8;
	shf.r.wrap.b32 	%r3203, %r2856, %r2857, 8;
	mov.b64 	%rd4676, {%r3203, %r3202};
	xor.b64  	%rd4677, %rd4675, %rd4676;
	shr.u64 	%rd4678, %rd4127, 7;
	xor.b64  	%rd4679, %rd4677, %rd4678;
	add.s64 	%rd4680, %rd4674, %rd4090;
	add.s64 	%rd4681, %rd4680, %rd4423;
	add.s64 	%rd4682, %rd4681, %rd4679;
	add.s64 	%rd4683, %rd4682, %rd4547;
	xor.b64  	%rd4684, %rd4621, %rd4584;
	and.b64  	%rd4685, %rd4658, %rd4684;
	xor.b64  	%rd4686, %rd4685, %rd4584;
	add.s64 	%rd4687, %rd4683, %rd4686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3204,%dummy}, %rd4658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd4658;
	}
	shf.r.wrap.b32 	%r3206, %r3205, %r3204, 14;
	shf.r.wrap.b32 	%r3207, %r3204, %r3205, 14;
	mov.b64 	%rd4688, {%r3207, %r3206};
	shf.r.wrap.b32 	%r3208, %r3205, %r3204, 18;
	shf.r.wrap.b32 	%r3209, %r3204, %r3205, 18;
	mov.b64 	%rd4689, {%r3209, %r3208};
	xor.b64  	%rd4690, %rd4688, %rd4689;
	shf.l.wrap.b32 	%r3210, %r3204, %r3205, 23;
	shf.l.wrap.b32 	%r3211, %r3205, %r3204, 23;
	mov.b64 	%rd4691, {%r3211, %r3210};
	xor.b64  	%rd4692, %rd4690, %rd4691;
	add.s64 	%rd4693, %rd4687, %rd4692;
	add.s64 	%rd4694, %rd4693, 4115178125766777443;
	add.s64 	%rd4695, %rd4694, %rd4558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3212,%dummy}, %rd4669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3213}, %rd4669;
	}
	shf.r.wrap.b32 	%r3214, %r3213, %r3212, 28;
	shf.r.wrap.b32 	%r3215, %r3212, %r3213, 28;
	mov.b64 	%rd4696, {%r3215, %r3214};
	shf.l.wrap.b32 	%r3216, %r3212, %r3213, 30;
	shf.l.wrap.b32 	%r3217, %r3213, %r3212, 30;
	mov.b64 	%rd4697, {%r3217, %r3216};
	xor.b64  	%rd4698, %rd4696, %rd4697;
	shf.l.wrap.b32 	%r3218, %r3212, %r3213, 25;
	shf.l.wrap.b32 	%r3219, %r3213, %r3212, 25;
	mov.b64 	%rd4699, {%r3219, %r3218};
	xor.b64  	%rd4700, %rd4698, %rd4699;
	and.b64  	%rd4701, %rd4669, %rd4632;
	or.b64  	%rd4702, %rd4669, %rd4632;
	and.b64  	%rd4703, %rd4702, %rd4595;
	or.b64  	%rd4704, %rd4703, %rd4701;
	add.s64 	%rd4705, %rd4704, %rd4700;
	add.s64 	%rd4706, %rd4705, %rd4694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3220,%dummy}, %rd4645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3221}, %rd4645;
	}
	shf.r.wrap.b32 	%r3222, %r3221, %r3220, 19;
	shf.r.wrap.b32 	%r3223, %r3220, %r3221, 19;
	mov.b64 	%rd4707, {%r3223, %r3222};
	shf.l.wrap.b32 	%r3224, %r3220, %r3221, 3;
	shf.l.wrap.b32 	%r3225, %r3221, %r3220, 3;
	mov.b64 	%rd4708, {%r3225, %r3224};
	xor.b64  	%rd4709, %rd4707, %rd4708;
	shr.u64 	%rd4710, %rd4645, 6;
	xor.b64  	%rd4711, %rd4709, %rd4710;
	shf.r.wrap.b32 	%r3226, %r2883, %r2882, 1;
	shf.r.wrap.b32 	%r3227, %r2882, %r2883, 1;
	mov.b64 	%rd4712, {%r3227, %r3226};
	shf.r.wrap.b32 	%r3228, %r2883, %r2882, 8;
	shf.r.wrap.b32 	%r3229, %r2882, %r2883, 8;
	mov.b64 	%rd4713, {%r3229, %r3228};
	xor.b64  	%rd4714, %rd4712, %rd4713;
	shr.u64 	%rd4715, %rd4164, 7;
	xor.b64  	%rd4716, %rd4714, %rd4715;
	add.s64 	%rd4717, %rd4711, %rd4127;
	add.s64 	%rd4718, %rd4717, %rd4460;
	add.s64 	%rd4719, %rd4718, %rd4716;
	add.s64 	%rd4720, %rd4719, %rd4584;
	xor.b64  	%rd4721, %rd4658, %rd4621;
	and.b64  	%rd4722, %rd4695, %rd4721;
	xor.b64  	%rd4723, %rd4722, %rd4621;
	add.s64 	%rd4724, %rd4720, %rd4723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3230,%dummy}, %rd4695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3231}, %rd4695;
	}
	shf.r.wrap.b32 	%r3232, %r3231, %r3230, 14;
	shf.r.wrap.b32 	%r3233, %r3230, %r3231, 14;
	mov.b64 	%rd4725, {%r3233, %r3232};
	shf.r.wrap.b32 	%r3234, %r3231, %r3230, 18;
	shf.r.wrap.b32 	%r3235, %r3230, %r3231, 18;
	mov.b64 	%rd4726, {%r3235, %r3234};
	xor.b64  	%rd4727, %rd4725, %rd4726;
	shf.l.wrap.b32 	%r3236, %r3230, %r3231, 23;
	shf.l.wrap.b32 	%r3237, %r3231, %r3230, 23;
	mov.b64 	%rd4728, {%r3237, %r3236};
	xor.b64  	%rd4729, %rd4727, %rd4728;
	add.s64 	%rd4730, %rd4724, %rd4729;
	add.s64 	%rd4731, %rd4730, 5681478168544905931;
	add.s64 	%rd4732, %rd4731, %rd4595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3238,%dummy}, %rd4706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3239}, %rd4706;
	}
	shf.r.wrap.b32 	%r3240, %r3239, %r3238, 28;
	shf.r.wrap.b32 	%r3241, %r3238, %r3239, 28;
	mov.b64 	%rd4733, {%r3241, %r3240};
	shf.l.wrap.b32 	%r3242, %r3238, %r3239, 30;
	shf.l.wrap.b32 	%r3243, %r3239, %r3238, 30;
	mov.b64 	%rd4734, {%r3243, %r3242};
	xor.b64  	%rd4735, %rd4733, %rd4734;
	shf.l.wrap.b32 	%r3244, %r3238, %r3239, 25;
	shf.l.wrap.b32 	%r3245, %r3239, %r3238, 25;
	mov.b64 	%rd4736, {%r3245, %r3244};
	xor.b64  	%rd4737, %rd4735, %rd4736;
	and.b64  	%rd4738, %rd4706, %rd4669;
	or.b64  	%rd4739, %rd4706, %rd4669;
	and.b64  	%rd4740, %rd4739, %rd4632;
	or.b64  	%rd4741, %rd4740, %rd4738;
	add.s64 	%rd4742, %rd4741, %rd4737;
	add.s64 	%rd4743, %rd4742, %rd4731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3246,%dummy}, %rd4682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3247}, %rd4682;
	}
	shf.r.wrap.b32 	%r3248, %r3247, %r3246, 19;
	shf.r.wrap.b32 	%r3249, %r3246, %r3247, 19;
	mov.b64 	%rd4744, {%r3249, %r3248};
	shf.l.wrap.b32 	%r3250, %r3246, %r3247, 3;
	shf.l.wrap.b32 	%r3251, %r3247, %r3246, 3;
	mov.b64 	%rd4745, {%r3251, %r3250};
	xor.b64  	%rd4746, %rd4744, %rd4745;
	shr.u64 	%rd4747, %rd4682, 6;
	xor.b64  	%rd4748, %rd4746, %rd4747;
	shf.r.wrap.b32 	%r3252, %r2909, %r2908, 1;
	shf.r.wrap.b32 	%r3253, %r2908, %r2909, 1;
	mov.b64 	%rd4749, {%r3253, %r3252};
	shf.r.wrap.b32 	%r3254, %r2909, %r2908, 8;
	shf.r.wrap.b32 	%r3255, %r2908, %r2909, 8;
	mov.b64 	%rd4750, {%r3255, %r3254};
	xor.b64  	%rd4751, %rd4749, %rd4750;
	shr.u64 	%rd4752, %rd4201, 7;
	xor.b64  	%rd4753, %rd4751, %rd4752;
	add.s64 	%rd4754, %rd4748, %rd4164;
	add.s64 	%rd4755, %rd4754, %rd4497;
	add.s64 	%rd4756, %rd4755, %rd4753;
	add.s64 	%rd4757, %rd4756, %rd4621;
	xor.b64  	%rd4758, %rd4695, %rd4658;
	and.b64  	%rd4759, %rd4732, %rd4758;
	xor.b64  	%rd4760, %rd4759, %rd4658;
	add.s64 	%rd4761, %rd4757, %rd4760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3256,%dummy}, %rd4732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3257}, %rd4732;
	}
	shf.r.wrap.b32 	%r3258, %r3257, %r3256, 14;
	shf.r.wrap.b32 	%r3259, %r3256, %r3257, 14;
	mov.b64 	%rd4762, {%r3259, %r3258};
	shf.r.wrap.b32 	%r3260, %r3257, %r3256, 18;
	shf.r.wrap.b32 	%r3261, %r3256, %r3257, 18;
	mov.b64 	%rd4763, {%r3261, %r3260};
	xor.b64  	%rd4764, %rd4762, %rd4763;
	shf.l.wrap.b32 	%r3262, %r3256, %r3257, 23;
	shf.l.wrap.b32 	%r3263, %r3257, %r3256, 23;
	mov.b64 	%rd4765, {%r3263, %r3262};
	xor.b64  	%rd4766, %rd4764, %rd4765;
	add.s64 	%rd4767, %rd4761, %rd4766;
	add.s64 	%rd4768, %rd4767, 6601373596472566643;
	add.s64 	%rd4769, %rd4768, %rd4632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3264,%dummy}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3265}, %rd4743;
	}
	shf.r.wrap.b32 	%r3266, %r3265, %r3264, 28;
	shf.r.wrap.b32 	%r3267, %r3264, %r3265, 28;
	mov.b64 	%rd4770, {%r3267, %r3266};
	shf.l.wrap.b32 	%r3268, %r3264, %r3265, 30;
	shf.l.wrap.b32 	%r3269, %r3265, %r3264, 30;
	mov.b64 	%rd4771, {%r3269, %r3268};
	xor.b64  	%rd4772, %rd4770, %rd4771;
	shf.l.wrap.b32 	%r3270, %r3264, %r3265, 25;
	shf.l.wrap.b32 	%r3271, %r3265, %r3264, 25;
	mov.b64 	%rd4773, {%r3271, %r3270};
	xor.b64  	%rd4774, %rd4772, %rd4773;
	and.b64  	%rd4775, %rd4743, %rd4706;
	or.b64  	%rd4776, %rd4743, %rd4706;
	and.b64  	%rd4777, %rd4776, %rd4669;
	or.b64  	%rd4778, %rd4777, %rd4775;
	add.s64 	%rd4779, %rd4778, %rd4774;
	add.s64 	%rd4780, %rd4779, %rd4768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3272,%dummy}, %rd4719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3273}, %rd4719;
	}
	shf.r.wrap.b32 	%r3274, %r3273, %r3272, 19;
	shf.r.wrap.b32 	%r3275, %r3272, %r3273, 19;
	mov.b64 	%rd4781, {%r3275, %r3274};
	shf.l.wrap.b32 	%r3276, %r3272, %r3273, 3;
	shf.l.wrap.b32 	%r3277, %r3273, %r3272, 3;
	mov.b64 	%rd4782, {%r3277, %r3276};
	xor.b64  	%rd4783, %rd4781, %rd4782;
	shr.u64 	%rd4784, %rd4719, 6;
	xor.b64  	%rd4785, %rd4783, %rd4784;
	shf.r.wrap.b32 	%r3278, %r2935, %r2934, 1;
	shf.r.wrap.b32 	%r3279, %r2934, %r2935, 1;
	mov.b64 	%rd4786, {%r3279, %r3278};
	shf.r.wrap.b32 	%r3280, %r2935, %r2934, 8;
	shf.r.wrap.b32 	%r3281, %r2934, %r2935, 8;
	mov.b64 	%rd4787, {%r3281, %r3280};
	xor.b64  	%rd4788, %rd4786, %rd4787;
	shr.u64 	%rd4789, %rd4238, 7;
	xor.b64  	%rd4790, %rd4788, %rd4789;
	add.s64 	%rd4791, %rd4785, %rd4201;
	add.s64 	%rd4792, %rd4791, %rd4534;
	add.s64 	%rd4793, %rd4792, %rd4790;
	add.s64 	%rd4794, %rd4793, %rd4658;
	xor.b64  	%rd4795, %rd4732, %rd4695;
	and.b64  	%rd4796, %rd4769, %rd4795;
	xor.b64  	%rd4797, %rd4796, %rd4695;
	add.s64 	%rd4798, %rd4794, %rd4797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd4769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd4769;
	}
	shf.r.wrap.b32 	%r3284, %r3283, %r3282, 14;
	shf.r.wrap.b32 	%r3285, %r3282, %r3283, 14;
	mov.b64 	%rd4799, {%r3285, %r3284};
	shf.r.wrap.b32 	%r3286, %r3283, %r3282, 18;
	shf.r.wrap.b32 	%r3287, %r3282, %r3283, 18;
	mov.b64 	%rd4800, {%r3287, %r3286};
	xor.b64  	%rd4801, %rd4799, %rd4800;
	shf.l.wrap.b32 	%r3288, %r3282, %r3283, 23;
	shf.l.wrap.b32 	%r3289, %r3283, %r3282, 23;
	mov.b64 	%rd4802, {%r3289, %r3288};
	xor.b64  	%rd4803, %rd4801, %rd4802;
	add.s64 	%rd4804, %rd4798, %rd4803;
	add.s64 	%rd4805, %rd4804, 7507060721942968483;
	add.s64 	%rd4806, %rd4805, %rd4669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3290,%dummy}, %rd4780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3291}, %rd4780;
	}
	shf.r.wrap.b32 	%r3292, %r3291, %r3290, 28;
	shf.r.wrap.b32 	%r3293, %r3290, %r3291, 28;
	mov.b64 	%rd4807, {%r3293, %r3292};
	shf.l.wrap.b32 	%r3294, %r3290, %r3291, 30;
	shf.l.wrap.b32 	%r3295, %r3291, %r3290, 30;
	mov.b64 	%rd4808, {%r3295, %r3294};
	xor.b64  	%rd4809, %rd4807, %rd4808;
	shf.l.wrap.b32 	%r3296, %r3290, %r3291, 25;
	shf.l.wrap.b32 	%r3297, %r3291, %r3290, 25;
	mov.b64 	%rd4810, {%r3297, %r3296};
	xor.b64  	%rd4811, %rd4809, %rd4810;
	and.b64  	%rd4812, %rd4780, %rd4743;
	or.b64  	%rd4813, %rd4780, %rd4743;
	and.b64  	%rd4814, %rd4813, %rd4706;
	or.b64  	%rd4815, %rd4814, %rd4812;
	add.s64 	%rd4816, %rd4815, %rd4811;
	add.s64 	%rd4817, %rd4816, %rd4805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd4756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3299}, %rd4756;
	}
	shf.r.wrap.b32 	%r3300, %r3299, %r3298, 19;
	shf.r.wrap.b32 	%r3301, %r3298, %r3299, 19;
	mov.b64 	%rd4818, {%r3301, %r3300};
	shf.l.wrap.b32 	%r3302, %r3298, %r3299, 3;
	shf.l.wrap.b32 	%r3303, %r3299, %r3298, 3;
	mov.b64 	%rd4819, {%r3303, %r3302};
	xor.b64  	%rd4820, %rd4818, %rd4819;
	shr.u64 	%rd4821, %rd4756, 6;
	xor.b64  	%rd4822, %rd4820, %rd4821;
	shf.r.wrap.b32 	%r3304, %r2961, %r2960, 1;
	shf.r.wrap.b32 	%r3305, %r2960, %r2961, 1;
	mov.b64 	%rd4823, {%r3305, %r3304};
	shf.r.wrap.b32 	%r3306, %r2961, %r2960, 8;
	shf.r.wrap.b32 	%r3307, %r2960, %r2961, 8;
	mov.b64 	%rd4824, {%r3307, %r3306};
	xor.b64  	%rd4825, %rd4823, %rd4824;
	shr.u64 	%rd4826, %rd4275, 7;
	xor.b64  	%rd4827, %rd4825, %rd4826;
	add.s64 	%rd4828, %rd4822, %rd4238;
	add.s64 	%rd4829, %rd4828, %rd4571;
	add.s64 	%rd4830, %rd4829, %rd4827;
	add.s64 	%rd4831, %rd4830, %rd4695;
	xor.b64  	%rd4832, %rd4769, %rd4732;
	and.b64  	%rd4833, %rd4806, %rd4832;
	xor.b64  	%rd4834, %rd4833, %rd4732;
	add.s64 	%rd4835, %rd4831, %rd4834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3308,%dummy}, %rd4806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3309}, %rd4806;
	}
	shf.r.wrap.b32 	%r3310, %r3309, %r3308, 14;
	shf.r.wrap.b32 	%r3311, %r3308, %r3309, 14;
	mov.b64 	%rd4836, {%r3311, %r3310};
	shf.r.wrap.b32 	%r3312, %r3309, %r3308, 18;
	shf.r.wrap.b32 	%r3313, %r3308, %r3309, 18;
	mov.b64 	%rd4837, {%r3313, %r3312};
	xor.b64  	%rd4838, %rd4836, %rd4837;
	shf.l.wrap.b32 	%r3314, %r3308, %r3309, 23;
	shf.l.wrap.b32 	%r3315, %r3309, %r3308, 23;
	mov.b64 	%rd4839, {%r3315, %r3314};
	xor.b64  	%rd4840, %rd4838, %rd4839;
	add.s64 	%rd4841, %rd4835, %rd4840;
	add.s64 	%rd4842, %rd4841, 8399075790359081724;
	add.s64 	%rd4843, %rd4842, %rd4706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3316,%dummy}, %rd4817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3317}, %rd4817;
	}
	shf.r.wrap.b32 	%r3318, %r3317, %r3316, 28;
	shf.r.wrap.b32 	%r3319, %r3316, %r3317, 28;
	mov.b64 	%rd4844, {%r3319, %r3318};
	shf.l.wrap.b32 	%r3320, %r3316, %r3317, 30;
	shf.l.wrap.b32 	%r3321, %r3317, %r3316, 30;
	mov.b64 	%rd4845, {%r3321, %r3320};
	xor.b64  	%rd4846, %rd4844, %rd4845;
	shf.l.wrap.b32 	%r3322, %r3316, %r3317, 25;
	shf.l.wrap.b32 	%r3323, %r3317, %r3316, 25;
	mov.b64 	%rd4847, {%r3323, %r3322};
	xor.b64  	%rd4848, %rd4846, %rd4847;
	and.b64  	%rd4849, %rd4817, %rd4780;
	or.b64  	%rd4850, %rd4817, %rd4780;
	and.b64  	%rd4851, %rd4850, %rd4743;
	or.b64  	%rd4852, %rd4851, %rd4849;
	add.s64 	%rd4853, %rd4852, %rd4848;
	add.s64 	%rd4854, %rd4853, %rd4842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3324,%dummy}, %rd4793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3325}, %rd4793;
	}
	shf.r.wrap.b32 	%r3326, %r3325, %r3324, 19;
	shf.r.wrap.b32 	%r3327, %r3324, %r3325, 19;
	mov.b64 	%rd4855, {%r3327, %r3326};
	shf.l.wrap.b32 	%r3328, %r3324, %r3325, 3;
	shf.l.wrap.b32 	%r3329, %r3325, %r3324, 3;
	mov.b64 	%rd4856, {%r3329, %r3328};
	xor.b64  	%rd4857, %rd4855, %rd4856;
	shr.u64 	%rd4858, %rd4793, 6;
	xor.b64  	%rd4859, %rd4857, %rd4858;
	shf.r.wrap.b32 	%r3330, %r2987, %r2986, 1;
	shf.r.wrap.b32 	%r3331, %r2986, %r2987, 1;
	mov.b64 	%rd4860, {%r3331, %r3330};
	shf.r.wrap.b32 	%r3332, %r2987, %r2986, 8;
	shf.r.wrap.b32 	%r3333, %r2986, %r2987, 8;
	mov.b64 	%rd4861, {%r3333, %r3332};
	xor.b64  	%rd4862, %rd4860, %rd4861;
	shr.u64 	%rd4863, %rd4312, 7;
	xor.b64  	%rd4864, %rd4862, %rd4863;
	add.s64 	%rd4865, %rd4859, %rd4275;
	add.s64 	%rd4866, %rd4865, %rd4608;
	add.s64 	%rd4867, %rd4866, %rd4864;
	add.s64 	%rd4868, %rd4867, %rd4732;
	xor.b64  	%rd4869, %rd4806, %rd4769;
	and.b64  	%rd4870, %rd4843, %rd4869;
	xor.b64  	%rd4871, %rd4870, %rd4769;
	add.s64 	%rd4872, %rd4868, %rd4871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3334,%dummy}, %rd4843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3335}, %rd4843;
	}
	shf.r.wrap.b32 	%r3336, %r3335, %r3334, 14;
	shf.r.wrap.b32 	%r3337, %r3334, %r3335, 14;
	mov.b64 	%rd4873, {%r3337, %r3336};
	shf.r.wrap.b32 	%r3338, %r3335, %r3334, 18;
	shf.r.wrap.b32 	%r3339, %r3334, %r3335, 18;
	mov.b64 	%rd4874, {%r3339, %r3338};
	xor.b64  	%rd4875, %rd4873, %rd4874;
	shf.l.wrap.b32 	%r3340, %r3334, %r3335, 23;
	shf.l.wrap.b32 	%r3341, %r3335, %r3334, 23;
	mov.b64 	%rd4876, {%r3341, %r3340};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	add.s64 	%rd4878, %rd4872, %rd4877;
	add.s64 	%rd4879, %rd4878, 8693463985226723168;
	add.s64 	%rd4880, %rd4879, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3342,%dummy}, %rd4854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3343}, %rd4854;
	}
	shf.r.wrap.b32 	%r3344, %r3343, %r3342, 28;
	shf.r.wrap.b32 	%r3345, %r3342, %r3343, 28;
	mov.b64 	%rd4881, {%r3345, %r3344};
	shf.l.wrap.b32 	%r3346, %r3342, %r3343, 30;
	shf.l.wrap.b32 	%r3347, %r3343, %r3342, 30;
	mov.b64 	%rd4882, {%r3347, %r3346};
	xor.b64  	%rd4883, %rd4881, %rd4882;
	shf.l.wrap.b32 	%r3348, %r3342, %r3343, 25;
	shf.l.wrap.b32 	%r3349, %r3343, %r3342, 25;
	mov.b64 	%rd4884, {%r3349, %r3348};
	xor.b64  	%rd4885, %rd4883, %rd4884;
	and.b64  	%rd4886, %rd4854, %rd4817;
	or.b64  	%rd4887, %rd4854, %rd4817;
	and.b64  	%rd4888, %rd4887, %rd4780;
	or.b64  	%rd4889, %rd4888, %rd4886;
	add.s64 	%rd4890, %rd4889, %rd4885;
	add.s64 	%rd4891, %rd4890, %rd4879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3350,%dummy}, %rd4830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3351}, %rd4830;
	}
	shf.r.wrap.b32 	%r3352, %r3351, %r3350, 19;
	shf.r.wrap.b32 	%r3353, %r3350, %r3351, 19;
	mov.b64 	%rd4892, {%r3353, %r3352};
	shf.l.wrap.b32 	%r3354, %r3350, %r3351, 3;
	shf.l.wrap.b32 	%r3355, %r3351, %r3350, 3;
	mov.b64 	%rd4893, {%r3355, %r3354};
	xor.b64  	%rd4894, %rd4892, %rd4893;
	shr.u64 	%rd4895, %rd4830, 6;
	xor.b64  	%rd4896, %rd4894, %rd4895;
	shf.r.wrap.b32 	%r3356, %r3013, %r3012, 1;
	shf.r.wrap.b32 	%r3357, %r3012, %r3013, 1;
	mov.b64 	%rd4897, {%r3357, %r3356};
	shf.r.wrap.b32 	%r3358, %r3013, %r3012, 8;
	shf.r.wrap.b32 	%r3359, %r3012, %r3013, 8;
	mov.b64 	%rd4898, {%r3359, %r3358};
	xor.b64  	%rd4899, %rd4897, %rd4898;
	shr.u64 	%rd4900, %rd4349, 7;
	xor.b64  	%rd4901, %rd4899, %rd4900;
	add.s64 	%rd4902, %rd4896, %rd4312;
	add.s64 	%rd4903, %rd4902, %rd4645;
	add.s64 	%rd4904, %rd4903, %rd4901;
	add.s64 	%rd4905, %rd4904, %rd4769;
	xor.b64  	%rd4906, %rd4843, %rd4806;
	and.b64  	%rd4907, %rd4880, %rd4906;
	xor.b64  	%rd4908, %rd4907, %rd4806;
	add.s64 	%rd4909, %rd4905, %rd4908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3360,%dummy}, %rd4880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3361}, %rd4880;
	}
	shf.r.wrap.b32 	%r3362, %r3361, %r3360, 14;
	shf.r.wrap.b32 	%r3363, %r3360, %r3361, 14;
	mov.b64 	%rd4910, {%r3363, %r3362};
	shf.r.wrap.b32 	%r3364, %r3361, %r3360, 18;
	shf.r.wrap.b32 	%r3365, %r3360, %r3361, 18;
	mov.b64 	%rd4911, {%r3365, %r3364};
	xor.b64  	%rd4912, %rd4910, %rd4911;
	shf.l.wrap.b32 	%r3366, %r3360, %r3361, 23;
	shf.l.wrap.b32 	%r3367, %r3361, %r3360, 23;
	mov.b64 	%rd4913, {%r3367, %r3366};
	xor.b64  	%rd4914, %rd4912, %rd4913;
	add.s64 	%rd4915, %rd4909, %rd4914;
	add.s64 	%rd4916, %rd4915, -8878714635349349518;
	add.s64 	%rd4917, %rd4916, %rd4780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3368,%dummy}, %rd4891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3369}, %rd4891;
	}
	shf.r.wrap.b32 	%r3370, %r3369, %r3368, 28;
	shf.r.wrap.b32 	%r3371, %r3368, %r3369, 28;
	mov.b64 	%rd4918, {%r3371, %r3370};
	shf.l.wrap.b32 	%r3372, %r3368, %r3369, 30;
	shf.l.wrap.b32 	%r3373, %r3369, %r3368, 30;
	mov.b64 	%rd4919, {%r3373, %r3372};
	xor.b64  	%rd4920, %rd4918, %rd4919;
	shf.l.wrap.b32 	%r3374, %r3368, %r3369, 25;
	shf.l.wrap.b32 	%r3375, %r3369, %r3368, 25;
	mov.b64 	%rd4921, {%r3375, %r3374};
	xor.b64  	%rd4922, %rd4920, %rd4921;
	and.b64  	%rd4923, %rd4891, %rd4854;
	or.b64  	%rd4924, %rd4891, %rd4854;
	and.b64  	%rd4925, %rd4924, %rd4817;
	or.b64  	%rd4926, %rd4925, %rd4923;
	add.s64 	%rd4927, %rd4926, %rd4922;
	add.s64 	%rd4928, %rd4927, %rd4916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3376,%dummy}, %rd4867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3377}, %rd4867;
	}
	shf.r.wrap.b32 	%r3378, %r3377, %r3376, 19;
	shf.r.wrap.b32 	%r3379, %r3376, %r3377, 19;
	mov.b64 	%rd4929, {%r3379, %r3378};
	shf.l.wrap.b32 	%r3380, %r3376, %r3377, 3;
	shf.l.wrap.b32 	%r3381, %r3377, %r3376, 3;
	mov.b64 	%rd4930, {%r3381, %r3380};
	xor.b64  	%rd4931, %rd4929, %rd4930;
	shr.u64 	%rd4932, %rd4867, 6;
	xor.b64  	%rd4933, %rd4931, %rd4932;
	shf.r.wrap.b32 	%r3382, %r3039, %r3038, 1;
	shf.r.wrap.b32 	%r3383, %r3038, %r3039, 1;
	mov.b64 	%rd4934, {%r3383, %r3382};
	shf.r.wrap.b32 	%r3384, %r3039, %r3038, 8;
	shf.r.wrap.b32 	%r3385, %r3038, %r3039, 8;
	mov.b64 	%rd4935, {%r3385, %r3384};
	xor.b64  	%rd4936, %rd4934, %rd4935;
	shr.u64 	%rd4937, %rd4386, 7;
	xor.b64  	%rd4938, %rd4936, %rd4937;
	add.s64 	%rd4939, %rd4933, %rd4349;
	add.s64 	%rd4940, %rd4939, %rd4682;
	add.s64 	%rd4941, %rd4940, %rd4938;
	add.s64 	%rd4942, %rd4941, %rd4806;
	xor.b64  	%rd4943, %rd4880, %rd4843;
	and.b64  	%rd4944, %rd4917, %rd4943;
	xor.b64  	%rd4945, %rd4944, %rd4843;
	add.s64 	%rd4946, %rd4942, %rd4945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd4917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd4917;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 14;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 14;
	mov.b64 	%rd4947, {%r3389, %r3388};
	shf.r.wrap.b32 	%r3390, %r3387, %r3386, 18;
	shf.r.wrap.b32 	%r3391, %r3386, %r3387, 18;
	mov.b64 	%rd4948, {%r3391, %r3390};
	xor.b64  	%rd4949, %rd4947, %rd4948;
	shf.l.wrap.b32 	%r3392, %r3386, %r3387, 23;
	shf.l.wrap.b32 	%r3393, %r3387, %r3386, 23;
	mov.b64 	%rd4950, {%r3393, %r3392};
	xor.b64  	%rd4951, %rd4949, %rd4950;
	add.s64 	%rd4952, %rd4946, %rd4951;
	add.s64 	%rd4953, %rd4952, -8302665154208450068;
	add.s64 	%rd4954, %rd4953, %rd4817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3394,%dummy}, %rd4928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3395}, %rd4928;
	}
	shf.r.wrap.b32 	%r3396, %r3395, %r3394, 28;
	shf.r.wrap.b32 	%r3397, %r3394, %r3395, 28;
	mov.b64 	%rd4955, {%r3397, %r3396};
	shf.l.wrap.b32 	%r3398, %r3394, %r3395, 30;
	shf.l.wrap.b32 	%r3399, %r3395, %r3394, 30;
	mov.b64 	%rd4956, {%r3399, %r3398};
	xor.b64  	%rd4957, %rd4955, %rd4956;
	shf.l.wrap.b32 	%r3400, %r3394, %r3395, 25;
	shf.l.wrap.b32 	%r3401, %r3395, %r3394, 25;
	mov.b64 	%rd4958, {%r3401, %r3400};
	xor.b64  	%rd4959, %rd4957, %rd4958;
	and.b64  	%rd4960, %rd4928, %rd4891;
	or.b64  	%rd4961, %rd4928, %rd4891;
	and.b64  	%rd4962, %rd4961, %rd4854;
	or.b64  	%rd4963, %rd4962, %rd4960;
	add.s64 	%rd4964, %rd4963, %rd4959;
	add.s64 	%rd4965, %rd4964, %rd4953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3402,%dummy}, %rd4904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3403}, %rd4904;
	}
	shf.r.wrap.b32 	%r3404, %r3403, %r3402, 19;
	shf.r.wrap.b32 	%r3405, %r3402, %r3403, 19;
	mov.b64 	%rd4966, {%r3405, %r3404};
	shf.l.wrap.b32 	%r3406, %r3402, %r3403, 3;
	shf.l.wrap.b32 	%r3407, %r3403, %r3402, 3;
	mov.b64 	%rd4967, {%r3407, %r3406};
	xor.b64  	%rd4968, %rd4966, %rd4967;
	shr.u64 	%rd4969, %rd4904, 6;
	xor.b64  	%rd4970, %rd4968, %rd4969;
	shf.r.wrap.b32 	%r3408, %r3065, %r3064, 1;
	shf.r.wrap.b32 	%r3409, %r3064, %r3065, 1;
	mov.b64 	%rd4971, {%r3409, %r3408};
	shf.r.wrap.b32 	%r3410, %r3065, %r3064, 8;
	shf.r.wrap.b32 	%r3411, %r3064, %r3065, 8;
	mov.b64 	%rd4972, {%r3411, %r3410};
	xor.b64  	%rd4973, %rd4971, %rd4972;
	shr.u64 	%rd4974, %rd4423, 7;
	xor.b64  	%rd4975, %rd4973, %rd4974;
	add.s64 	%rd4976, %rd4970, %rd4386;
	add.s64 	%rd4977, %rd4976, %rd4719;
	add.s64 	%rd4978, %rd4977, %rd4975;
	add.s64 	%rd4979, %rd4978, %rd4843;
	xor.b64  	%rd4980, %rd4917, %rd4880;
	and.b64  	%rd4981, %rd4954, %rd4980;
	xor.b64  	%rd4982, %rd4981, %rd4880;
	add.s64 	%rd4983, %rd4979, %rd4982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3412,%dummy}, %rd4954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3413}, %rd4954;
	}
	shf.r.wrap.b32 	%r3414, %r3413, %r3412, 14;
	shf.r.wrap.b32 	%r3415, %r3412, %r3413, 14;
	mov.b64 	%rd4984, {%r3415, %r3414};
	shf.r.wrap.b32 	%r3416, %r3413, %r3412, 18;
	shf.r.wrap.b32 	%r3417, %r3412, %r3413, 18;
	mov.b64 	%rd4985, {%r3417, %r3416};
	xor.b64  	%rd4986, %rd4984, %rd4985;
	shf.l.wrap.b32 	%r3418, %r3412, %r3413, 23;
	shf.l.wrap.b32 	%r3419, %r3413, %r3412, 23;
	mov.b64 	%rd4987, {%r3419, %r3418};
	xor.b64  	%rd4988, %rd4986, %rd4987;
	add.s64 	%rd4989, %rd4983, %rd4988;
	add.s64 	%rd4990, %rd4989, -8016688836872298968;
	add.s64 	%rd4991, %rd4990, %rd4854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3420,%dummy}, %rd4965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3421}, %rd4965;
	}
	shf.r.wrap.b32 	%r3422, %r3421, %r3420, 28;
	shf.r.wrap.b32 	%r3423, %r3420, %r3421, 28;
	mov.b64 	%rd4992, {%r3423, %r3422};
	shf.l.wrap.b32 	%r3424, %r3420, %r3421, 30;
	shf.l.wrap.b32 	%r3425, %r3421, %r3420, 30;
	mov.b64 	%rd4993, {%r3425, %r3424};
	xor.b64  	%rd4994, %rd4992, %rd4993;
	shf.l.wrap.b32 	%r3426, %r3420, %r3421, 25;
	shf.l.wrap.b32 	%r3427, %r3421, %r3420, 25;
	mov.b64 	%rd4995, {%r3427, %r3426};
	xor.b64  	%rd4996, %rd4994, %rd4995;
	and.b64  	%rd4997, %rd4965, %rd4928;
	or.b64  	%rd4998, %rd4965, %rd4928;
	and.b64  	%rd4999, %rd4998, %rd4891;
	or.b64  	%rd5000, %rd4999, %rd4997;
	add.s64 	%rd5001, %rd5000, %rd4996;
	add.s64 	%rd5002, %rd5001, %rd4990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3428,%dummy}, %rd4941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3429}, %rd4941;
	}
	shf.r.wrap.b32 	%r3430, %r3429, %r3428, 19;
	shf.r.wrap.b32 	%r3431, %r3428, %r3429, 19;
	mov.b64 	%rd5003, {%r3431, %r3430};
	shf.l.wrap.b32 	%r3432, %r3428, %r3429, 3;
	shf.l.wrap.b32 	%r3433, %r3429, %r3428, 3;
	mov.b64 	%rd5004, {%r3433, %r3432};
	xor.b64  	%rd5005, %rd5003, %rd5004;
	shr.u64 	%rd5006, %rd4941, 6;
	xor.b64  	%rd5007, %rd5005, %rd5006;
	shf.r.wrap.b32 	%r3434, %r3091, %r3090, 1;
	shf.r.wrap.b32 	%r3435, %r3090, %r3091, 1;
	mov.b64 	%rd5008, {%r3435, %r3434};
	shf.r.wrap.b32 	%r3436, %r3091, %r3090, 8;
	shf.r.wrap.b32 	%r3437, %r3090, %r3091, 8;
	mov.b64 	%rd5009, {%r3437, %r3436};
	xor.b64  	%rd5010, %rd5008, %rd5009;
	shr.u64 	%rd5011, %rd4460, 7;
	xor.b64  	%rd5012, %rd5010, %rd5011;
	add.s64 	%rd5013, %rd5007, %rd4423;
	add.s64 	%rd5014, %rd5013, %rd4756;
	add.s64 	%rd5015, %rd5014, %rd5012;
	add.s64 	%rd5016, %rd5015, %rd4880;
	xor.b64  	%rd5017, %rd4954, %rd4917;
	and.b64  	%rd5018, %rd4991, %rd5017;
	xor.b64  	%rd5019, %rd5018, %rd4917;
	add.s64 	%rd5020, %rd5016, %rd5019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3438,%dummy}, %rd4991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3439}, %rd4991;
	}
	shf.r.wrap.b32 	%r3440, %r3439, %r3438, 14;
	shf.r.wrap.b32 	%r3441, %r3438, %r3439, 14;
	mov.b64 	%rd5021, {%r3441, %r3440};
	shf.r.wrap.b32 	%r3442, %r3439, %r3438, 18;
	shf.r.wrap.b32 	%r3443, %r3438, %r3439, 18;
	mov.b64 	%rd5022, {%r3443, %r3442};
	xor.b64  	%rd5023, %rd5021, %rd5022;
	shf.l.wrap.b32 	%r3444, %r3438, %r3439, 23;
	shf.l.wrap.b32 	%r3445, %r3439, %r3438, 23;
	mov.b64 	%rd5024, {%r3445, %r3444};
	xor.b64  	%rd5025, %rd5023, %rd5024;
	add.s64 	%rd5026, %rd5020, %rd5025;
	add.s64 	%rd5027, %rd5026, -6606660893046293015;
	add.s64 	%rd5028, %rd5027, %rd4891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3446,%dummy}, %rd5002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3447}, %rd5002;
	}
	shf.r.wrap.b32 	%r3448, %r3447, %r3446, 28;
	shf.r.wrap.b32 	%r3449, %r3446, %r3447, 28;
	mov.b64 	%rd5029, {%r3449, %r3448};
	shf.l.wrap.b32 	%r3450, %r3446, %r3447, 30;
	shf.l.wrap.b32 	%r3451, %r3447, %r3446, 30;
	mov.b64 	%rd5030, {%r3451, %r3450};
	xor.b64  	%rd5031, %rd5029, %rd5030;
	shf.l.wrap.b32 	%r3452, %r3446, %r3447, 25;
	shf.l.wrap.b32 	%r3453, %r3447, %r3446, 25;
	mov.b64 	%rd5032, {%r3453, %r3452};
	xor.b64  	%rd5033, %rd5031, %rd5032;
	and.b64  	%rd5034, %rd5002, %rd4965;
	or.b64  	%rd5035, %rd5002, %rd4965;
	and.b64  	%rd5036, %rd5035, %rd4928;
	or.b64  	%rd5037, %rd5036, %rd5034;
	add.s64 	%rd5038, %rd5037, %rd5033;
	add.s64 	%rd5039, %rd5038, %rd5027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3454,%dummy}, %rd4978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3455}, %rd4978;
	}
	shf.r.wrap.b32 	%r3456, %r3455, %r3454, 19;
	shf.r.wrap.b32 	%r3457, %r3454, %r3455, 19;
	mov.b64 	%rd5040, {%r3457, %r3456};
	shf.l.wrap.b32 	%r3458, %r3454, %r3455, 3;
	shf.l.wrap.b32 	%r3459, %r3455, %r3454, 3;
	mov.b64 	%rd5041, {%r3459, %r3458};
	xor.b64  	%rd5042, %rd5040, %rd5041;
	shr.u64 	%rd5043, %rd4978, 6;
	xor.b64  	%rd5044, %rd5042, %rd5043;
	shf.r.wrap.b32 	%r3460, %r3117, %r3116, 1;
	shf.r.wrap.b32 	%r3461, %r3116, %r3117, 1;
	mov.b64 	%rd5045, {%r3461, %r3460};
	shf.r.wrap.b32 	%r3462, %r3117, %r3116, 8;
	shf.r.wrap.b32 	%r3463, %r3116, %r3117, 8;
	mov.b64 	%rd5046, {%r3463, %r3462};
	xor.b64  	%rd5047, %rd5045, %rd5046;
	shr.u64 	%rd5048, %rd4497, 7;
	xor.b64  	%rd5049, %rd5047, %rd5048;
	add.s64 	%rd5050, %rd5044, %rd4460;
	add.s64 	%rd5051, %rd5050, %rd4793;
	add.s64 	%rd5052, %rd5051, %rd5049;
	add.s64 	%rd5053, %rd5052, %rd4917;
	xor.b64  	%rd5054, %rd4991, %rd4954;
	and.b64  	%rd5055, %rd5028, %rd5054;
	xor.b64  	%rd5056, %rd5055, %rd4954;
	add.s64 	%rd5057, %rd5053, %rd5056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3464,%dummy}, %rd5028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3465}, %rd5028;
	}
	shf.r.wrap.b32 	%r3466, %r3465, %r3464, 14;
	shf.r.wrap.b32 	%r3467, %r3464, %r3465, 14;
	mov.b64 	%rd5058, {%r3467, %r3466};
	shf.r.wrap.b32 	%r3468, %r3465, %r3464, 18;
	shf.r.wrap.b32 	%r3469, %r3464, %r3465, 18;
	mov.b64 	%rd5059, {%r3469, %r3468};
	xor.b64  	%rd5060, %rd5058, %rd5059;
	shf.l.wrap.b32 	%r3470, %r3464, %r3465, 23;
	shf.l.wrap.b32 	%r3471, %r3465, %r3464, 23;
	mov.b64 	%rd5061, {%r3471, %r3470};
	xor.b64  	%rd5062, %rd5060, %rd5061;
	add.s64 	%rd5063, %rd5057, %rd5062;
	add.s64 	%rd5064, %rd5063, -4685533653050689259;
	add.s64 	%rd5065, %rd5064, %rd4928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3472,%dummy}, %rd5039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3473}, %rd5039;
	}
	shf.r.wrap.b32 	%r3474, %r3473, %r3472, 28;
	shf.r.wrap.b32 	%r3475, %r3472, %r3473, 28;
	mov.b64 	%rd5066, {%r3475, %r3474};
	shf.l.wrap.b32 	%r3476, %r3472, %r3473, 30;
	shf.l.wrap.b32 	%r3477, %r3473, %r3472, 30;
	mov.b64 	%rd5067, {%r3477, %r3476};
	xor.b64  	%rd5068, %rd5066, %rd5067;
	shf.l.wrap.b32 	%r3478, %r3472, %r3473, 25;
	shf.l.wrap.b32 	%r3479, %r3473, %r3472, 25;
	mov.b64 	%rd5069, {%r3479, %r3478};
	xor.b64  	%rd5070, %rd5068, %rd5069;
	and.b64  	%rd5071, %rd5039, %rd5002;
	or.b64  	%rd5072, %rd5039, %rd5002;
	and.b64  	%rd5073, %rd5072, %rd4965;
	or.b64  	%rd5074, %rd5073, %rd5071;
	add.s64 	%rd5075, %rd5074, %rd5070;
	add.s64 	%rd5076, %rd5075, %rd5064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3480,%dummy}, %rd5015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3481}, %rd5015;
	}
	shf.r.wrap.b32 	%r3482, %r3481, %r3480, 19;
	shf.r.wrap.b32 	%r3483, %r3480, %r3481, 19;
	mov.b64 	%rd5077, {%r3483, %r3482};
	shf.l.wrap.b32 	%r3484, %r3480, %r3481, 3;
	shf.l.wrap.b32 	%r3485, %r3481, %r3480, 3;
	mov.b64 	%rd5078, {%r3485, %r3484};
	xor.b64  	%rd5079, %rd5077, %rd5078;
	shr.u64 	%rd5080, %rd5015, 6;
	xor.b64  	%rd5081, %rd5079, %rd5080;
	shf.r.wrap.b32 	%r3486, %r3143, %r3142, 1;
	shf.r.wrap.b32 	%r3487, %r3142, %r3143, 1;
	mov.b64 	%rd5082, {%r3487, %r3486};
	shf.r.wrap.b32 	%r3488, %r3143, %r3142, 8;
	shf.r.wrap.b32 	%r3489, %r3142, %r3143, 8;
	mov.b64 	%rd5083, {%r3489, %r3488};
	xor.b64  	%rd5084, %rd5082, %rd5083;
	shr.u64 	%rd5085, %rd4534, 7;
	xor.b64  	%rd5086, %rd5084, %rd5085;
	add.s64 	%rd5087, %rd5081, %rd4497;
	add.s64 	%rd5088, %rd5087, %rd4830;
	add.s64 	%rd5089, %rd5088, %rd5086;
	add.s64 	%rd5090, %rd5089, %rd4954;
	xor.b64  	%rd5091, %rd5028, %rd4991;
	and.b64  	%rd5092, %rd5065, %rd5091;
	xor.b64  	%rd5093, %rd5092, %rd4991;
	add.s64 	%rd5094, %rd5090, %rd5093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3490,%dummy}, %rd5065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3491}, %rd5065;
	}
	shf.r.wrap.b32 	%r3492, %r3491, %r3490, 14;
	shf.r.wrap.b32 	%r3493, %r3490, %r3491, 14;
	mov.b64 	%rd5095, {%r3493, %r3492};
	shf.r.wrap.b32 	%r3494, %r3491, %r3490, 18;
	shf.r.wrap.b32 	%r3495, %r3490, %r3491, 18;
	mov.b64 	%rd5096, {%r3495, %r3494};
	xor.b64  	%rd5097, %rd5095, %rd5096;
	shf.l.wrap.b32 	%r3496, %r3490, %r3491, 23;
	shf.l.wrap.b32 	%r3497, %r3491, %r3490, 23;
	mov.b64 	%rd5098, {%r3497, %r3496};
	xor.b64  	%rd5099, %rd5097, %rd5098;
	add.s64 	%rd5100, %rd5094, %rd5099;
	add.s64 	%rd5101, %rd5100, -4147400797238176981;
	add.s64 	%rd5102, %rd5101, %rd4965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3498,%dummy}, %rd5076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3499}, %rd5076;
	}
	shf.r.wrap.b32 	%r3500, %r3499, %r3498, 28;
	shf.r.wrap.b32 	%r3501, %r3498, %r3499, 28;
	mov.b64 	%rd5103, {%r3501, %r3500};
	shf.l.wrap.b32 	%r3502, %r3498, %r3499, 30;
	shf.l.wrap.b32 	%r3503, %r3499, %r3498, 30;
	mov.b64 	%rd5104, {%r3503, %r3502};
	xor.b64  	%rd5105, %rd5103, %rd5104;
	shf.l.wrap.b32 	%r3504, %r3498, %r3499, 25;
	shf.l.wrap.b32 	%r3505, %r3499, %r3498, 25;
	mov.b64 	%rd5106, {%r3505, %r3504};
	xor.b64  	%rd5107, %rd5105, %rd5106;
	and.b64  	%rd5108, %rd5076, %rd5039;
	or.b64  	%rd5109, %rd5076, %rd5039;
	and.b64  	%rd5110, %rd5109, %rd5002;
	or.b64  	%rd5111, %rd5110, %rd5108;
	add.s64 	%rd5112, %rd5111, %rd5107;
	add.s64 	%rd5113, %rd5112, %rd5101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3506,%dummy}, %rd5052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3507}, %rd5052;
	}
	shf.r.wrap.b32 	%r3508, %r3507, %r3506, 19;
	shf.r.wrap.b32 	%r3509, %r3506, %r3507, 19;
	mov.b64 	%rd5114, {%r3509, %r3508};
	shf.l.wrap.b32 	%r3510, %r3506, %r3507, 3;
	shf.l.wrap.b32 	%r3511, %r3507, %r3506, 3;
	mov.b64 	%rd5115, {%r3511, %r3510};
	xor.b64  	%rd5116, %rd5114, %rd5115;
	shr.u64 	%rd5117, %rd5052, 6;
	xor.b64  	%rd5118, %rd5116, %rd5117;
	shf.r.wrap.b32 	%r3512, %r3169, %r3168, 1;
	shf.r.wrap.b32 	%r3513, %r3168, %r3169, 1;
	mov.b64 	%rd5119, {%r3513, %r3512};
	shf.r.wrap.b32 	%r3514, %r3169, %r3168, 8;
	shf.r.wrap.b32 	%r3515, %r3168, %r3169, 8;
	mov.b64 	%rd5120, {%r3515, %r3514};
	xor.b64  	%rd5121, %rd5119, %rd5120;
	shr.u64 	%rd5122, %rd4571, 7;
	xor.b64  	%rd5123, %rd5121, %rd5122;
	add.s64 	%rd5124, %rd5118, %rd4534;
	add.s64 	%rd5125, %rd5124, %rd4867;
	add.s64 	%rd5126, %rd5125, %rd5123;
	add.s64 	%rd5127, %rd5126, %rd4991;
	xor.b64  	%rd5128, %rd5065, %rd5028;
	and.b64  	%rd5129, %rd5102, %rd5128;
	xor.b64  	%rd5130, %rd5129, %rd5028;
	add.s64 	%rd5131, %rd5127, %rd5130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3516,%dummy}, %rd5102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3517}, %rd5102;
	}
	shf.r.wrap.b32 	%r3518, %r3517, %r3516, 14;
	shf.r.wrap.b32 	%r3519, %r3516, %r3517, 14;
	mov.b64 	%rd5132, {%r3519, %r3518};
	shf.r.wrap.b32 	%r3520, %r3517, %r3516, 18;
	shf.r.wrap.b32 	%r3521, %r3516, %r3517, 18;
	mov.b64 	%rd5133, {%r3521, %r3520};
	xor.b64  	%rd5134, %rd5132, %rd5133;
	shf.l.wrap.b32 	%r3522, %r3516, %r3517, 23;
	shf.l.wrap.b32 	%r3523, %r3517, %r3516, 23;
	mov.b64 	%rd5135, {%r3523, %r3522};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	add.s64 	%rd5137, %rd5131, %rd5136;
	add.s64 	%rd5138, %rd5137, -3880063495543823972;
	add.s64 	%rd5139, %rd5138, %rd5002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3524,%dummy}, %rd5113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3525}, %rd5113;
	}
	shf.r.wrap.b32 	%r3526, %r3525, %r3524, 28;
	shf.r.wrap.b32 	%r3527, %r3524, %r3525, 28;
	mov.b64 	%rd5140, {%r3527, %r3526};
	shf.l.wrap.b32 	%r3528, %r3524, %r3525, 30;
	shf.l.wrap.b32 	%r3529, %r3525, %r3524, 30;
	mov.b64 	%rd5141, {%r3529, %r3528};
	xor.b64  	%rd5142, %rd5140, %rd5141;
	shf.l.wrap.b32 	%r3530, %r3524, %r3525, 25;
	shf.l.wrap.b32 	%r3531, %r3525, %r3524, 25;
	mov.b64 	%rd5143, {%r3531, %r3530};
	xor.b64  	%rd5144, %rd5142, %rd5143;
	and.b64  	%rd5145, %rd5113, %rd5076;
	or.b64  	%rd5146, %rd5113, %rd5076;
	and.b64  	%rd5147, %rd5146, %rd5039;
	or.b64  	%rd5148, %rd5147, %rd5145;
	add.s64 	%rd5149, %rd5148, %rd5144;
	add.s64 	%rd5150, %rd5149, %rd5138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3532,%dummy}, %rd5089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3533}, %rd5089;
	}
	shf.r.wrap.b32 	%r3534, %r3533, %r3532, 19;
	shf.r.wrap.b32 	%r3535, %r3532, %r3533, 19;
	mov.b64 	%rd5151, {%r3535, %r3534};
	shf.l.wrap.b32 	%r3536, %r3532, %r3533, 3;
	shf.l.wrap.b32 	%r3537, %r3533, %r3532, 3;
	mov.b64 	%rd5152, {%r3537, %r3536};
	xor.b64  	%rd5153, %rd5151, %rd5152;
	shr.u64 	%rd5154, %rd5089, 6;
	xor.b64  	%rd5155, %rd5153, %rd5154;
	shf.r.wrap.b32 	%r3538, %r3195, %r3194, 1;
	shf.r.wrap.b32 	%r3539, %r3194, %r3195, 1;
	mov.b64 	%rd5156, {%r3539, %r3538};
	shf.r.wrap.b32 	%r3540, %r3195, %r3194, 8;
	shf.r.wrap.b32 	%r3541, %r3194, %r3195, 8;
	mov.b64 	%rd5157, {%r3541, %r3540};
	xor.b64  	%rd5158, %rd5156, %rd5157;
	shr.u64 	%rd5159, %rd4608, 7;
	xor.b64  	%rd5160, %rd5158, %rd5159;
	add.s64 	%rd5161, %rd5155, %rd4571;
	add.s64 	%rd5162, %rd5161, %rd4904;
	add.s64 	%rd5163, %rd5162, %rd5160;
	add.s64 	%rd5164, %rd5163, %rd5028;
	xor.b64  	%rd5165, %rd5102, %rd5065;
	and.b64  	%rd5166, %rd5139, %rd5165;
	xor.b64  	%rd5167, %rd5166, %rd5065;
	add.s64 	%rd5168, %rd5164, %rd5167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3542,%dummy}, %rd5139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3543}, %rd5139;
	}
	shf.r.wrap.b32 	%r3544, %r3543, %r3542, 14;
	shf.r.wrap.b32 	%r3545, %r3542, %r3543, 14;
	mov.b64 	%rd5169, {%r3545, %r3544};
	shf.r.wrap.b32 	%r3546, %r3543, %r3542, 18;
	shf.r.wrap.b32 	%r3547, %r3542, %r3543, 18;
	mov.b64 	%rd5170, {%r3547, %r3546};
	xor.b64  	%rd5171, %rd5169, %rd5170;
	shf.l.wrap.b32 	%r3548, %r3542, %r3543, 23;
	shf.l.wrap.b32 	%r3549, %r3543, %r3542, 23;
	mov.b64 	%rd5172, {%r3549, %r3548};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	add.s64 	%rd5174, %rd5168, %rd5173;
	add.s64 	%rd5175, %rd5174, -3348786107499101689;
	add.s64 	%rd5176, %rd5175, %rd5039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3550,%dummy}, %rd5150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3551}, %rd5150;
	}
	shf.r.wrap.b32 	%r3552, %r3551, %r3550, 28;
	shf.r.wrap.b32 	%r3553, %r3550, %r3551, 28;
	mov.b64 	%rd5177, {%r3553, %r3552};
	shf.l.wrap.b32 	%r3554, %r3550, %r3551, 30;
	shf.l.wrap.b32 	%r3555, %r3551, %r3550, 30;
	mov.b64 	%rd5178, {%r3555, %r3554};
	xor.b64  	%rd5179, %rd5177, %rd5178;
	shf.l.wrap.b32 	%r3556, %r3550, %r3551, 25;
	shf.l.wrap.b32 	%r3557, %r3551, %r3550, 25;
	mov.b64 	%rd5180, {%r3557, %r3556};
	xor.b64  	%rd5181, %rd5179, %rd5180;
	and.b64  	%rd5182, %rd5150, %rd5113;
	or.b64  	%rd5183, %rd5150, %rd5113;
	and.b64  	%rd5184, %rd5183, %rd5076;
	or.b64  	%rd5185, %rd5184, %rd5182;
	add.s64 	%rd5186, %rd5185, %rd5181;
	add.s64 	%rd5187, %rd5186, %rd5175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3558,%dummy}, %rd5126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3559}, %rd5126;
	}
	shf.r.wrap.b32 	%r3560, %r3559, %r3558, 19;
	shf.r.wrap.b32 	%r3561, %r3558, %r3559, 19;
	mov.b64 	%rd5188, {%r3561, %r3560};
	shf.l.wrap.b32 	%r3562, %r3558, %r3559, 3;
	shf.l.wrap.b32 	%r3563, %r3559, %r3558, 3;
	mov.b64 	%rd5189, {%r3563, %r3562};
	xor.b64  	%rd5190, %rd5188, %rd5189;
	shr.u64 	%rd5191, %rd5126, 6;
	xor.b64  	%rd5192, %rd5190, %rd5191;
	shf.r.wrap.b32 	%r3564, %r3221, %r3220, 1;
	shf.r.wrap.b32 	%r3565, %r3220, %r3221, 1;
	mov.b64 	%rd5193, {%r3565, %r3564};
	shf.r.wrap.b32 	%r3566, %r3221, %r3220, 8;
	shf.r.wrap.b32 	%r3567, %r3220, %r3221, 8;
	mov.b64 	%rd5194, {%r3567, %r3566};
	xor.b64  	%rd5195, %rd5193, %rd5194;
	shr.u64 	%rd5196, %rd4645, 7;
	xor.b64  	%rd5197, %rd5195, %rd5196;
	add.s64 	%rd5198, %rd5192, %rd4608;
	add.s64 	%rd5199, %rd5198, %rd4941;
	add.s64 	%rd5200, %rd5199, %rd5197;
	add.s64 	%rd5201, %rd5200, %rd5065;
	xor.b64  	%rd5202, %rd5139, %rd5102;
	and.b64  	%rd5203, %rd5176, %rd5202;
	xor.b64  	%rd5204, %rd5203, %rd5102;
	add.s64 	%rd5205, %rd5201, %rd5204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3568,%dummy}, %rd5176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd5176;
	}
	shf.r.wrap.b32 	%r3570, %r3569, %r3568, 14;
	shf.r.wrap.b32 	%r3571, %r3568, %r3569, 14;
	mov.b64 	%rd5206, {%r3571, %r3570};
	shf.r.wrap.b32 	%r3572, %r3569, %r3568, 18;
	shf.r.wrap.b32 	%r3573, %r3568, %r3569, 18;
	mov.b64 	%rd5207, {%r3573, %r3572};
	xor.b64  	%rd5208, %rd5206, %rd5207;
	shf.l.wrap.b32 	%r3574, %r3568, %r3569, 23;
	shf.l.wrap.b32 	%r3575, %r3569, %r3568, 23;
	mov.b64 	%rd5209, {%r3575, %r3574};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	add.s64 	%rd5211, %rd5205, %rd5210;
	add.s64 	%rd5212, %rd5211, -1523767162380948706;
	add.s64 	%rd5213, %rd5212, %rd5076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3576,%dummy}, %rd5187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3577}, %rd5187;
	}
	shf.r.wrap.b32 	%r3578, %r3577, %r3576, 28;
	shf.r.wrap.b32 	%r3579, %r3576, %r3577, 28;
	mov.b64 	%rd5214, {%r3579, %r3578};
	shf.l.wrap.b32 	%r3580, %r3576, %r3577, 30;
	shf.l.wrap.b32 	%r3581, %r3577, %r3576, 30;
	mov.b64 	%rd5215, {%r3581, %r3580};
	xor.b64  	%rd5216, %rd5214, %rd5215;
	shf.l.wrap.b32 	%r3582, %r3576, %r3577, 25;
	shf.l.wrap.b32 	%r3583, %r3577, %r3576, 25;
	mov.b64 	%rd5217, {%r3583, %r3582};
	xor.b64  	%rd5218, %rd5216, %rd5217;
	and.b64  	%rd5219, %rd5187, %rd5150;
	or.b64  	%rd5220, %rd5187, %rd5150;
	and.b64  	%rd5221, %rd5220, %rd5113;
	or.b64  	%rd5222, %rd5221, %rd5219;
	add.s64 	%rd5223, %rd5222, %rd5218;
	add.s64 	%rd5224, %rd5223, %rd5212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3584,%dummy}, %rd5163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3585}, %rd5163;
	}
	shf.r.wrap.b32 	%r3586, %r3585, %r3584, 19;
	shf.r.wrap.b32 	%r3587, %r3584, %r3585, 19;
	mov.b64 	%rd5225, {%r3587, %r3586};
	shf.l.wrap.b32 	%r3588, %r3584, %r3585, 3;
	shf.l.wrap.b32 	%r3589, %r3585, %r3584, 3;
	mov.b64 	%rd5226, {%r3589, %r3588};
	xor.b64  	%rd5227, %rd5225, %rd5226;
	shr.u64 	%rd5228, %rd5163, 6;
	xor.b64  	%rd5229, %rd5227, %rd5228;
	shf.r.wrap.b32 	%r3590, %r3247, %r3246, 1;
	shf.r.wrap.b32 	%r3591, %r3246, %r3247, 1;
	mov.b64 	%rd5230, {%r3591, %r3590};
	shf.r.wrap.b32 	%r3592, %r3247, %r3246, 8;
	shf.r.wrap.b32 	%r3593, %r3246, %r3247, 8;
	mov.b64 	%rd5231, {%r3593, %r3592};
	xor.b64  	%rd5232, %rd5230, %rd5231;
	shr.u64 	%rd5233, %rd4682, 7;
	xor.b64  	%rd5234, %rd5232, %rd5233;
	add.s64 	%rd5235, %rd5229, %rd4645;
	add.s64 	%rd5236, %rd5235, %rd4978;
	add.s64 	%rd5237, %rd5236, %rd5234;
	add.s64 	%rd5238, %rd5237, %rd5102;
	xor.b64  	%rd5239, %rd5176, %rd5139;
	and.b64  	%rd5240, %rd5213, %rd5239;
	xor.b64  	%rd5241, %rd5240, %rd5139;
	add.s64 	%rd5242, %rd5238, %rd5241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd5213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd5213;
	}
	shf.r.wrap.b32 	%r3596, %r3595, %r3594, 14;
	shf.r.wrap.b32 	%r3597, %r3594, %r3595, 14;
	mov.b64 	%rd5243, {%r3597, %r3596};
	shf.r.wrap.b32 	%r3598, %r3595, %r3594, 18;
	shf.r.wrap.b32 	%r3599, %r3594, %r3595, 18;
	mov.b64 	%rd5244, {%r3599, %r3598};
	xor.b64  	%rd5245, %rd5243, %rd5244;
	shf.l.wrap.b32 	%r3600, %r3594, %r3595, 23;
	shf.l.wrap.b32 	%r3601, %r3595, %r3594, 23;
	mov.b64 	%rd5246, {%r3601, %r3600};
	xor.b64  	%rd5247, %rd5245, %rd5246;
	add.s64 	%rd5248, %rd5242, %rd5247;
	add.s64 	%rd5249, %rd5248, -757361751448694408;
	add.s64 	%rd5250, %rd5249, %rd5113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3602,%dummy}, %rd5224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3603}, %rd5224;
	}
	shf.r.wrap.b32 	%r3604, %r3603, %r3602, 28;
	shf.r.wrap.b32 	%r3605, %r3602, %r3603, 28;
	mov.b64 	%rd5251, {%r3605, %r3604};
	shf.l.wrap.b32 	%r3606, %r3602, %r3603, 30;
	shf.l.wrap.b32 	%r3607, %r3603, %r3602, 30;
	mov.b64 	%rd5252, {%r3607, %r3606};
	xor.b64  	%rd5253, %rd5251, %rd5252;
	shf.l.wrap.b32 	%r3608, %r3602, %r3603, 25;
	shf.l.wrap.b32 	%r3609, %r3603, %r3602, 25;
	mov.b64 	%rd5254, {%r3609, %r3608};
	xor.b64  	%rd5255, %rd5253, %rd5254;
	and.b64  	%rd5256, %rd5224, %rd5187;
	or.b64  	%rd5257, %rd5224, %rd5187;
	and.b64  	%rd5258, %rd5257, %rd5150;
	or.b64  	%rd5259, %rd5258, %rd5256;
	add.s64 	%rd5260, %rd5259, %rd5255;
	add.s64 	%rd5261, %rd5260, %rd5249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3610,%dummy}, %rd5200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3611}, %rd5200;
	}
	shf.r.wrap.b32 	%r3612, %r3611, %r3610, 19;
	shf.r.wrap.b32 	%r3613, %r3610, %r3611, 19;
	mov.b64 	%rd5262, {%r3613, %r3612};
	shf.l.wrap.b32 	%r3614, %r3610, %r3611, 3;
	shf.l.wrap.b32 	%r3615, %r3611, %r3610, 3;
	mov.b64 	%rd5263, {%r3615, %r3614};
	xor.b64  	%rd5264, %rd5262, %rd5263;
	shr.u64 	%rd5265, %rd5200, 6;
	xor.b64  	%rd5266, %rd5264, %rd5265;
	shf.r.wrap.b32 	%r3616, %r3273, %r3272, 1;
	shf.r.wrap.b32 	%r3617, %r3272, %r3273, 1;
	mov.b64 	%rd5267, {%r3617, %r3616};
	shf.r.wrap.b32 	%r3618, %r3273, %r3272, 8;
	shf.r.wrap.b32 	%r3619, %r3272, %r3273, 8;
	mov.b64 	%rd5268, {%r3619, %r3618};
	xor.b64  	%rd5269, %rd5267, %rd5268;
	shr.u64 	%rd5270, %rd4719, 7;
	xor.b64  	%rd5271, %rd5269, %rd5270;
	add.s64 	%rd5272, %rd5266, %rd4682;
	add.s64 	%rd5273, %rd5272, %rd5015;
	add.s64 	%rd5274, %rd5273, %rd5271;
	add.s64 	%rd5275, %rd5274, %rd5139;
	xor.b64  	%rd5276, %rd5213, %rd5176;
	and.b64  	%rd5277, %rd5250, %rd5276;
	xor.b64  	%rd5278, %rd5277, %rd5176;
	add.s64 	%rd5279, %rd5275, %rd5278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3620,%dummy}, %rd5250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3621}, %rd5250;
	}
	shf.r.wrap.b32 	%r3622, %r3621, %r3620, 14;
	shf.r.wrap.b32 	%r3623, %r3620, %r3621, 14;
	mov.b64 	%rd5280, {%r3623, %r3622};
	shf.r.wrap.b32 	%r3624, %r3621, %r3620, 18;
	shf.r.wrap.b32 	%r3625, %r3620, %r3621, 18;
	mov.b64 	%rd5281, {%r3625, %r3624};
	xor.b64  	%rd5282, %rd5280, %rd5281;
	shf.l.wrap.b32 	%r3626, %r3620, %r3621, 23;
	shf.l.wrap.b32 	%r3627, %r3621, %r3620, 23;
	mov.b64 	%rd5283, {%r3627, %r3626};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	add.s64 	%rd5285, %rd5279, %rd5284;
	add.s64 	%rd5286, %rd5285, 500013540394364858;
	add.s64 	%rd5287, %rd5286, %rd5150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3628,%dummy}, %rd5261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3629}, %rd5261;
	}
	shf.r.wrap.b32 	%r3630, %r3629, %r3628, 28;
	shf.r.wrap.b32 	%r3631, %r3628, %r3629, 28;
	mov.b64 	%rd5288, {%r3631, %r3630};
	shf.l.wrap.b32 	%r3632, %r3628, %r3629, 30;
	shf.l.wrap.b32 	%r3633, %r3629, %r3628, 30;
	mov.b64 	%rd5289, {%r3633, %r3632};
	xor.b64  	%rd5290, %rd5288, %rd5289;
	shf.l.wrap.b32 	%r3634, %r3628, %r3629, 25;
	shf.l.wrap.b32 	%r3635, %r3629, %r3628, 25;
	mov.b64 	%rd5291, {%r3635, %r3634};
	xor.b64  	%rd5292, %rd5290, %rd5291;
	and.b64  	%rd5293, %rd5261, %rd5224;
	or.b64  	%rd5294, %rd5261, %rd5224;
	and.b64  	%rd5295, %rd5294, %rd5187;
	or.b64  	%rd5296, %rd5295, %rd5293;
	add.s64 	%rd5297, %rd5296, %rd5292;
	add.s64 	%rd5298, %rd5297, %rd5286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3636,%dummy}, %rd5237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3637}, %rd5237;
	}
	shf.r.wrap.b32 	%r3638, %r3637, %r3636, 19;
	shf.r.wrap.b32 	%r3639, %r3636, %r3637, 19;
	mov.b64 	%rd5299, {%r3639, %r3638};
	shf.l.wrap.b32 	%r3640, %r3636, %r3637, 3;
	shf.l.wrap.b32 	%r3641, %r3637, %r3636, 3;
	mov.b64 	%rd5300, {%r3641, %r3640};
	xor.b64  	%rd5301, %rd5299, %rd5300;
	shr.u64 	%rd5302, %rd5237, 6;
	xor.b64  	%rd5303, %rd5301, %rd5302;
	shf.r.wrap.b32 	%r3642, %r3299, %r3298, 1;
	shf.r.wrap.b32 	%r3643, %r3298, %r3299, 1;
	mov.b64 	%rd5304, {%r3643, %r3642};
	shf.r.wrap.b32 	%r3644, %r3299, %r3298, 8;
	shf.r.wrap.b32 	%r3645, %r3298, %r3299, 8;
	mov.b64 	%rd5305, {%r3645, %r3644};
	xor.b64  	%rd5306, %rd5304, %rd5305;
	shr.u64 	%rd5307, %rd4756, 7;
	xor.b64  	%rd5308, %rd5306, %rd5307;
	add.s64 	%rd5309, %rd5303, %rd4719;
	add.s64 	%rd5310, %rd5309, %rd5052;
	add.s64 	%rd5311, %rd5310, %rd5308;
	add.s64 	%rd5312, %rd5311, %rd5176;
	xor.b64  	%rd5313, %rd5250, %rd5213;
	and.b64  	%rd5314, %rd5287, %rd5313;
	xor.b64  	%rd5315, %rd5314, %rd5213;
	add.s64 	%rd5316, %rd5312, %rd5315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3646,%dummy}, %rd5287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3647}, %rd5287;
	}
	shf.r.wrap.b32 	%r3648, %r3647, %r3646, 14;
	shf.r.wrap.b32 	%r3649, %r3646, %r3647, 14;
	mov.b64 	%rd5317, {%r3649, %r3648};
	shf.r.wrap.b32 	%r3650, %r3647, %r3646, 18;
	shf.r.wrap.b32 	%r3651, %r3646, %r3647, 18;
	mov.b64 	%rd5318, {%r3651, %r3650};
	xor.b64  	%rd5319, %rd5317, %rd5318;
	shf.l.wrap.b32 	%r3652, %r3646, %r3647, 23;
	shf.l.wrap.b32 	%r3653, %r3647, %r3646, 23;
	mov.b64 	%rd5320, {%r3653, %r3652};
	xor.b64  	%rd5321, %rd5319, %rd5320;
	add.s64 	%rd5322, %rd5316, %rd5321;
	add.s64 	%rd5323, %rd5322, 748580250866718886;
	add.s64 	%rd5324, %rd5323, %rd5187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3654,%dummy}, %rd5298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3655}, %rd5298;
	}
	shf.r.wrap.b32 	%r3656, %r3655, %r3654, 28;
	shf.r.wrap.b32 	%r3657, %r3654, %r3655, 28;
	mov.b64 	%rd5325, {%r3657, %r3656};
	shf.l.wrap.b32 	%r3658, %r3654, %r3655, 30;
	shf.l.wrap.b32 	%r3659, %r3655, %r3654, 30;
	mov.b64 	%rd5326, {%r3659, %r3658};
	xor.b64  	%rd5327, %rd5325, %rd5326;
	shf.l.wrap.b32 	%r3660, %r3654, %r3655, 25;
	shf.l.wrap.b32 	%r3661, %r3655, %r3654, 25;
	mov.b64 	%rd5328, {%r3661, %r3660};
	xor.b64  	%rd5329, %rd5327, %rd5328;
	and.b64  	%rd5330, %rd5298, %rd5261;
	or.b64  	%rd5331, %rd5298, %rd5261;
	and.b64  	%rd5332, %rd5331, %rd5224;
	or.b64  	%rd5333, %rd5332, %rd5330;
	add.s64 	%rd5334, %rd5333, %rd5329;
	add.s64 	%rd5335, %rd5334, %rd5323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3662,%dummy}, %rd5274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3663}, %rd5274;
	}
	shf.r.wrap.b32 	%r3664, %r3663, %r3662, 19;
	shf.r.wrap.b32 	%r3665, %r3662, %r3663, 19;
	mov.b64 	%rd5336, {%r3665, %r3664};
	shf.l.wrap.b32 	%r3666, %r3662, %r3663, 3;
	shf.l.wrap.b32 	%r3667, %r3663, %r3662, 3;
	mov.b64 	%rd5337, {%r3667, %r3666};
	xor.b64  	%rd5338, %rd5336, %rd5337;
	shr.u64 	%rd5339, %rd5274, 6;
	xor.b64  	%rd5340, %rd5338, %rd5339;
	shf.r.wrap.b32 	%r3668, %r3325, %r3324, 1;
	shf.r.wrap.b32 	%r3669, %r3324, %r3325, 1;
	mov.b64 	%rd5341, {%r3669, %r3668};
	shf.r.wrap.b32 	%r3670, %r3325, %r3324, 8;
	shf.r.wrap.b32 	%r3671, %r3324, %r3325, 8;
	mov.b64 	%rd5342, {%r3671, %r3670};
	xor.b64  	%rd5343, %rd5341, %rd5342;
	shr.u64 	%rd5344, %rd4793, 7;
	xor.b64  	%rd5345, %rd5343, %rd5344;
	add.s64 	%rd5346, %rd5340, %rd4756;
	add.s64 	%rd5347, %rd5346, %rd5089;
	add.s64 	%rd5348, %rd5347, %rd5345;
	add.s64 	%rd5349, %rd5348, %rd5213;
	xor.b64  	%rd5350, %rd5287, %rd5250;
	and.b64  	%rd5351, %rd5324, %rd5350;
	xor.b64  	%rd5352, %rd5351, %rd5250;
	add.s64 	%rd5353, %rd5349, %rd5352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3672,%dummy}, %rd5324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd5324;
	}
	shf.r.wrap.b32 	%r3674, %r3673, %r3672, 14;
	shf.r.wrap.b32 	%r3675, %r3672, %r3673, 14;
	mov.b64 	%rd5354, {%r3675, %r3674};
	shf.r.wrap.b32 	%r3676, %r3673, %r3672, 18;
	shf.r.wrap.b32 	%r3677, %r3672, %r3673, 18;
	mov.b64 	%rd5355, {%r3677, %r3676};
	xor.b64  	%rd5356, %rd5354, %rd5355;
	shf.l.wrap.b32 	%r3678, %r3672, %r3673, 23;
	shf.l.wrap.b32 	%r3679, %r3673, %r3672, 23;
	mov.b64 	%rd5357, {%r3679, %r3678};
	xor.b64  	%rd5358, %rd5356, %rd5357;
	add.s64 	%rd5359, %rd5353, %rd5358;
	add.s64 	%rd5360, %rd5359, 1242879168328830382;
	add.s64 	%rd5361, %rd5360, %rd5224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3680,%dummy}, %rd5335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3681}, %rd5335;
	}
	shf.r.wrap.b32 	%r3682, %r3681, %r3680, 28;
	shf.r.wrap.b32 	%r3683, %r3680, %r3681, 28;
	mov.b64 	%rd5362, {%r3683, %r3682};
	shf.l.wrap.b32 	%r3684, %r3680, %r3681, 30;
	shf.l.wrap.b32 	%r3685, %r3681, %r3680, 30;
	mov.b64 	%rd5363, {%r3685, %r3684};
	xor.b64  	%rd5364, %rd5362, %rd5363;
	shf.l.wrap.b32 	%r3686, %r3680, %r3681, 25;
	shf.l.wrap.b32 	%r3687, %r3681, %r3680, 25;
	mov.b64 	%rd5365, {%r3687, %r3686};
	xor.b64  	%rd5366, %rd5364, %rd5365;
	and.b64  	%rd5367, %rd5335, %rd5298;
	or.b64  	%rd5368, %rd5335, %rd5298;
	and.b64  	%rd5369, %rd5368, %rd5261;
	or.b64  	%rd5370, %rd5369, %rd5367;
	add.s64 	%rd5371, %rd5370, %rd5366;
	add.s64 	%rd5372, %rd5371, %rd5360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3688,%dummy}, %rd5311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3689}, %rd5311;
	}
	shf.r.wrap.b32 	%r3690, %r3689, %r3688, 19;
	shf.r.wrap.b32 	%r3691, %r3688, %r3689, 19;
	mov.b64 	%rd5373, {%r3691, %r3690};
	shf.l.wrap.b32 	%r3692, %r3688, %r3689, 3;
	shf.l.wrap.b32 	%r3693, %r3689, %r3688, 3;
	mov.b64 	%rd5374, {%r3693, %r3692};
	xor.b64  	%rd5375, %rd5373, %rd5374;
	shr.u64 	%rd5376, %rd5311, 6;
	xor.b64  	%rd5377, %rd5375, %rd5376;
	shf.r.wrap.b32 	%r3694, %r3351, %r3350, 1;
	shf.r.wrap.b32 	%r3695, %r3350, %r3351, 1;
	mov.b64 	%rd5378, {%r3695, %r3694};
	shf.r.wrap.b32 	%r3696, %r3351, %r3350, 8;
	shf.r.wrap.b32 	%r3697, %r3350, %r3351, 8;
	mov.b64 	%rd5379, {%r3697, %r3696};
	xor.b64  	%rd5380, %rd5378, %rd5379;
	shr.u64 	%rd5381, %rd4830, 7;
	xor.b64  	%rd5382, %rd5380, %rd5381;
	add.s64 	%rd5383, %rd5377, %rd4793;
	add.s64 	%rd5384, %rd5383, %rd5126;
	add.s64 	%rd5385, %rd5384, %rd5382;
	add.s64 	%rd5386, %rd5385, %rd5250;
	xor.b64  	%rd5387, %rd5324, %rd5287;
	and.b64  	%rd5388, %rd5361, %rd5387;
	xor.b64  	%rd5389, %rd5388, %rd5287;
	add.s64 	%rd5390, %rd5386, %rd5389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3698,%dummy}, %rd5361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3699}, %rd5361;
	}
	shf.r.wrap.b32 	%r3700, %r3699, %r3698, 14;
	shf.r.wrap.b32 	%r3701, %r3698, %r3699, 14;
	mov.b64 	%rd5391, {%r3701, %r3700};
	shf.r.wrap.b32 	%r3702, %r3699, %r3698, 18;
	shf.r.wrap.b32 	%r3703, %r3698, %r3699, 18;
	mov.b64 	%rd5392, {%r3703, %r3702};
	xor.b64  	%rd5393, %rd5391, %rd5392;
	shf.l.wrap.b32 	%r3704, %r3698, %r3699, 23;
	shf.l.wrap.b32 	%r3705, %r3699, %r3698, 23;
	mov.b64 	%rd5394, {%r3705, %r3704};
	xor.b64  	%rd5395, %rd5393, %rd5394;
	add.s64 	%rd5396, %rd5390, %rd5395;
	add.s64 	%rd5397, %rd5396, 1977374033974150939;
	add.s64 	%rd5398, %rd5397, %rd5261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd5372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3707}, %rd5372;
	}
	shf.r.wrap.b32 	%r3708, %r3707, %r3706, 28;
	shf.r.wrap.b32 	%r3709, %r3706, %r3707, 28;
	mov.b64 	%rd5399, {%r3709, %r3708};
	shf.l.wrap.b32 	%r3710, %r3706, %r3707, 30;
	shf.l.wrap.b32 	%r3711, %r3707, %r3706, 30;
	mov.b64 	%rd5400, {%r3711, %r3710};
	xor.b64  	%rd5401, %rd5399, %rd5400;
	shf.l.wrap.b32 	%r3712, %r3706, %r3707, 25;
	shf.l.wrap.b32 	%r3713, %r3707, %r3706, 25;
	mov.b64 	%rd5402, {%r3713, %r3712};
	xor.b64  	%rd5403, %rd5401, %rd5402;
	and.b64  	%rd5404, %rd5372, %rd5335;
	or.b64  	%rd5405, %rd5372, %rd5335;
	and.b64  	%rd5406, %rd5405, %rd5298;
	or.b64  	%rd5407, %rd5406, %rd5404;
	add.s64 	%rd5408, %rd5407, %rd5403;
	add.s64 	%rd5409, %rd5408, %rd5397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3714,%dummy}, %rd5348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3715}, %rd5348;
	}
	shf.r.wrap.b32 	%r3716, %r3715, %r3714, 19;
	shf.r.wrap.b32 	%r3717, %r3714, %r3715, 19;
	mov.b64 	%rd5410, {%r3717, %r3716};
	shf.l.wrap.b32 	%r3718, %r3714, %r3715, 3;
	shf.l.wrap.b32 	%r3719, %r3715, %r3714, 3;
	mov.b64 	%rd5411, {%r3719, %r3718};
	xor.b64  	%rd5412, %rd5410, %rd5411;
	shr.u64 	%rd5413, %rd5348, 6;
	xor.b64  	%rd5414, %rd5412, %rd5413;
	shf.r.wrap.b32 	%r3720, %r3377, %r3376, 1;
	shf.r.wrap.b32 	%r3721, %r3376, %r3377, 1;
	mov.b64 	%rd5415, {%r3721, %r3720};
	shf.r.wrap.b32 	%r3722, %r3377, %r3376, 8;
	shf.r.wrap.b32 	%r3723, %r3376, %r3377, 8;
	mov.b64 	%rd5416, {%r3723, %r3722};
	xor.b64  	%rd5417, %rd5415, %rd5416;
	shr.u64 	%rd5418, %rd4867, 7;
	xor.b64  	%rd5419, %rd5417, %rd5418;
	add.s64 	%rd5420, %rd5414, %rd4830;
	add.s64 	%rd5421, %rd5420, %rd5163;
	add.s64 	%rd5422, %rd5421, %rd5419;
	add.s64 	%rd5423, %rd5422, %rd5287;
	xor.b64  	%rd5424, %rd5361, %rd5324;
	and.b64  	%rd5425, %rd5398, %rd5424;
	xor.b64  	%rd5426, %rd5425, %rd5324;
	add.s64 	%rd5427, %rd5423, %rd5426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3724,%dummy}, %rd5398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3725}, %rd5398;
	}
	shf.r.wrap.b32 	%r3726, %r3725, %r3724, 14;
	shf.r.wrap.b32 	%r3727, %r3724, %r3725, 14;
	mov.b64 	%rd5428, {%r3727, %r3726};
	shf.r.wrap.b32 	%r3728, %r3725, %r3724, 18;
	shf.r.wrap.b32 	%r3729, %r3724, %r3725, 18;
	mov.b64 	%rd5429, {%r3729, %r3728};
	xor.b64  	%rd5430, %rd5428, %rd5429;
	shf.l.wrap.b32 	%r3730, %r3724, %r3725, 23;
	shf.l.wrap.b32 	%r3731, %r3725, %r3724, 23;
	mov.b64 	%rd5431, {%r3731, %r3730};
	xor.b64  	%rd5432, %rd5430, %rd5431;
	add.s64 	%rd5433, %rd5427, %rd5432;
	add.s64 	%rd5434, %rd5433, 2944078676154940804;
	add.s64 	%rd5435, %rd5434, %rd5298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3732,%dummy}, %rd5409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3733}, %rd5409;
	}
	shf.r.wrap.b32 	%r3734, %r3733, %r3732, 28;
	shf.r.wrap.b32 	%r3735, %r3732, %r3733, 28;
	mov.b64 	%rd5436, {%r3735, %r3734};
	shf.l.wrap.b32 	%r3736, %r3732, %r3733, 30;
	shf.l.wrap.b32 	%r3737, %r3733, %r3732, 30;
	mov.b64 	%rd5437, {%r3737, %r3736};
	xor.b64  	%rd5438, %rd5436, %rd5437;
	shf.l.wrap.b32 	%r3738, %r3732, %r3733, 25;
	shf.l.wrap.b32 	%r3739, %r3733, %r3732, 25;
	mov.b64 	%rd5439, {%r3739, %r3738};
	xor.b64  	%rd5440, %rd5438, %rd5439;
	and.b64  	%rd5441, %rd5409, %rd5372;
	or.b64  	%rd5442, %rd5409, %rd5372;
	and.b64  	%rd5443, %rd5442, %rd5335;
	or.b64  	%rd5444, %rd5443, %rd5441;
	add.s64 	%rd5445, %rd5444, %rd5440;
	add.s64 	%rd5446, %rd5445, %rd5434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3740,%dummy}, %rd5385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3741}, %rd5385;
	}
	shf.r.wrap.b32 	%r3742, %r3741, %r3740, 19;
	shf.r.wrap.b32 	%r3743, %r3740, %r3741, 19;
	mov.b64 	%rd5447, {%r3743, %r3742};
	shf.l.wrap.b32 	%r3744, %r3740, %r3741, 3;
	shf.l.wrap.b32 	%r3745, %r3741, %r3740, 3;
	mov.b64 	%rd5448, {%r3745, %r3744};
	xor.b64  	%rd5449, %rd5447, %rd5448;
	shr.u64 	%rd5450, %rd5385, 6;
	xor.b64  	%rd5451, %rd5449, %rd5450;
	shf.r.wrap.b32 	%r3746, %r3403, %r3402, 1;
	shf.r.wrap.b32 	%r3747, %r3402, %r3403, 1;
	mov.b64 	%rd5452, {%r3747, %r3746};
	shf.r.wrap.b32 	%r3748, %r3403, %r3402, 8;
	shf.r.wrap.b32 	%r3749, %r3402, %r3403, 8;
	mov.b64 	%rd5453, {%r3749, %r3748};
	xor.b64  	%rd5454, %rd5452, %rd5453;
	shr.u64 	%rd5455, %rd4904, 7;
	xor.b64  	%rd5456, %rd5454, %rd5455;
	add.s64 	%rd5457, %rd5451, %rd4867;
	add.s64 	%rd5458, %rd5457, %rd5200;
	add.s64 	%rd5459, %rd5458, %rd5456;
	add.s64 	%rd5460, %rd5459, %rd5324;
	xor.b64  	%rd5461, %rd5398, %rd5361;
	and.b64  	%rd5462, %rd5435, %rd5461;
	xor.b64  	%rd5463, %rd5462, %rd5361;
	add.s64 	%rd5464, %rd5460, %rd5463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3750,%dummy}, %rd5435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3751}, %rd5435;
	}
	shf.r.wrap.b32 	%r3752, %r3751, %r3750, 14;
	shf.r.wrap.b32 	%r3753, %r3750, %r3751, 14;
	mov.b64 	%rd5465, {%r3753, %r3752};
	shf.r.wrap.b32 	%r3754, %r3751, %r3750, 18;
	shf.r.wrap.b32 	%r3755, %r3750, %r3751, 18;
	mov.b64 	%rd5466, {%r3755, %r3754};
	xor.b64  	%rd5467, %rd5465, %rd5466;
	shf.l.wrap.b32 	%r3756, %r3750, %r3751, 23;
	shf.l.wrap.b32 	%r3757, %r3751, %r3750, 23;
	mov.b64 	%rd5468, {%r3757, %r3756};
	xor.b64  	%rd5469, %rd5467, %rd5468;
	add.s64 	%rd5470, %rd5464, %rd5469;
	add.s64 	%rd5471, %rd5470, 3659926193048069267;
	add.s64 	%rd5472, %rd5471, %rd5335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3758,%dummy}, %rd5446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3759}, %rd5446;
	}
	shf.r.wrap.b32 	%r3760, %r3759, %r3758, 28;
	shf.r.wrap.b32 	%r3761, %r3758, %r3759, 28;
	mov.b64 	%rd5473, {%r3761, %r3760};
	shf.l.wrap.b32 	%r3762, %r3758, %r3759, 30;
	shf.l.wrap.b32 	%r3763, %r3759, %r3758, 30;
	mov.b64 	%rd5474, {%r3763, %r3762};
	xor.b64  	%rd5475, %rd5473, %rd5474;
	shf.l.wrap.b32 	%r3764, %r3758, %r3759, 25;
	shf.l.wrap.b32 	%r3765, %r3759, %r3758, 25;
	mov.b64 	%rd5476, {%r3765, %r3764};
	xor.b64  	%rd5477, %rd5475, %rd5476;
	and.b64  	%rd5478, %rd5446, %rd5409;
	or.b64  	%rd5479, %rd5446, %rd5409;
	and.b64  	%rd5480, %rd5479, %rd5372;
	or.b64  	%rd5481, %rd5480, %rd5478;
	add.s64 	%rd5482, %rd5481, %rd5477;
	add.s64 	%rd5483, %rd5482, %rd5471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3766,%dummy}, %rd5422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3767}, %rd5422;
	}
	shf.r.wrap.b32 	%r3768, %r3767, %r3766, 19;
	shf.r.wrap.b32 	%r3769, %r3766, %r3767, 19;
	mov.b64 	%rd5484, {%r3769, %r3768};
	shf.l.wrap.b32 	%r3770, %r3766, %r3767, 3;
	shf.l.wrap.b32 	%r3771, %r3767, %r3766, 3;
	mov.b64 	%rd5485, {%r3771, %r3770};
	xor.b64  	%rd5486, %rd5484, %rd5485;
	shr.u64 	%rd5487, %rd5422, 6;
	xor.b64  	%rd5488, %rd5486, %rd5487;
	shf.r.wrap.b32 	%r3772, %r3429, %r3428, 1;
	shf.r.wrap.b32 	%r3773, %r3428, %r3429, 1;
	mov.b64 	%rd5489, {%r3773, %r3772};
	shf.r.wrap.b32 	%r3774, %r3429, %r3428, 8;
	shf.r.wrap.b32 	%r3775, %r3428, %r3429, 8;
	mov.b64 	%rd5490, {%r3775, %r3774};
	xor.b64  	%rd5491, %rd5489, %rd5490;
	shr.u64 	%rd5492, %rd4941, 7;
	xor.b64  	%rd5493, %rd5491, %rd5492;
	add.s64 	%rd5494, %rd5488, %rd4904;
	add.s64 	%rd5495, %rd5494, %rd5237;
	add.s64 	%rd5496, %rd5495, %rd5493;
	add.s64 	%rd5497, %rd5496, %rd5361;
	xor.b64  	%rd5498, %rd5435, %rd5398;
	and.b64  	%rd5499, %rd5472, %rd5498;
	xor.b64  	%rd5500, %rd5499, %rd5398;
	add.s64 	%rd5501, %rd5497, %rd5500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3776,%dummy}, %rd5472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3777}, %rd5472;
	}
	shf.r.wrap.b32 	%r3778, %r3777, %r3776, 14;
	shf.r.wrap.b32 	%r3779, %r3776, %r3777, 14;
	mov.b64 	%rd5502, {%r3779, %r3778};
	shf.r.wrap.b32 	%r3780, %r3777, %r3776, 18;
	shf.r.wrap.b32 	%r3781, %r3776, %r3777, 18;
	mov.b64 	%rd5503, {%r3781, %r3780};
	xor.b64  	%rd5504, %rd5502, %rd5503;
	shf.l.wrap.b32 	%r3782, %r3776, %r3777, 23;
	shf.l.wrap.b32 	%r3783, %r3777, %r3776, 23;
	mov.b64 	%rd5505, {%r3783, %r3782};
	xor.b64  	%rd5506, %rd5504, %rd5505;
	add.s64 	%rd5507, %rd5501, %rd5506;
	add.s64 	%rd5508, %rd5507, 4368137639120453308;
	add.s64 	%rd5509, %rd5508, %rd5372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3784,%dummy}, %rd5483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3785}, %rd5483;
	}
	shf.r.wrap.b32 	%r3786, %r3785, %r3784, 28;
	shf.r.wrap.b32 	%r3787, %r3784, %r3785, 28;
	mov.b64 	%rd5510, {%r3787, %r3786};
	shf.l.wrap.b32 	%r3788, %r3784, %r3785, 30;
	shf.l.wrap.b32 	%r3789, %r3785, %r3784, 30;
	mov.b64 	%rd5511, {%r3789, %r3788};
	xor.b64  	%rd5512, %rd5510, %rd5511;
	shf.l.wrap.b32 	%r3790, %r3784, %r3785, 25;
	shf.l.wrap.b32 	%r3791, %r3785, %r3784, 25;
	mov.b64 	%rd5513, {%r3791, %r3790};
	xor.b64  	%rd5514, %rd5512, %rd5513;
	and.b64  	%rd5515, %rd5483, %rd5446;
	or.b64  	%rd5516, %rd5483, %rd5446;
	and.b64  	%rd5517, %rd5516, %rd5409;
	or.b64  	%rd5518, %rd5517, %rd5515;
	add.s64 	%rd5519, %rd5518, %rd5514;
	add.s64 	%rd5520, %rd5519, %rd5508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3792,%dummy}, %rd5459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3793}, %rd5459;
	}
	shf.r.wrap.b32 	%r3794, %r3793, %r3792, 19;
	shf.r.wrap.b32 	%r3795, %r3792, %r3793, 19;
	mov.b64 	%rd5521, {%r3795, %r3794};
	shf.l.wrap.b32 	%r3796, %r3792, %r3793, 3;
	shf.l.wrap.b32 	%r3797, %r3793, %r3792, 3;
	mov.b64 	%rd5522, {%r3797, %r3796};
	xor.b64  	%rd5523, %rd5521, %rd5522;
	shr.u64 	%rd5524, %rd5459, 6;
	xor.b64  	%rd5525, %rd5523, %rd5524;
	shf.r.wrap.b32 	%r3798, %r3455, %r3454, 1;
	shf.r.wrap.b32 	%r3799, %r3454, %r3455, 1;
	mov.b64 	%rd5526, {%r3799, %r3798};
	shf.r.wrap.b32 	%r3800, %r3455, %r3454, 8;
	shf.r.wrap.b32 	%r3801, %r3454, %r3455, 8;
	mov.b64 	%rd5527, {%r3801, %r3800};
	xor.b64  	%rd5528, %rd5526, %rd5527;
	shr.u64 	%rd5529, %rd4978, 7;
	xor.b64  	%rd5530, %rd5528, %rd5529;
	add.s64 	%rd5531, %rd5525, %rd4941;
	add.s64 	%rd5532, %rd5531, %rd5274;
	add.s64 	%rd5533, %rd5532, %rd5530;
	add.s64 	%rd5534, %rd5533, %rd5398;
	xor.b64  	%rd5535, %rd5472, %rd5435;
	and.b64  	%rd5536, %rd5509, %rd5535;
	xor.b64  	%rd5537, %rd5536, %rd5435;
	add.s64 	%rd5538, %rd5534, %rd5537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd5509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3803}, %rd5509;
	}
	shf.r.wrap.b32 	%r3804, %r3803, %r3802, 14;
	shf.r.wrap.b32 	%r3805, %r3802, %r3803, 14;
	mov.b64 	%rd5539, {%r3805, %r3804};
	shf.r.wrap.b32 	%r3806, %r3803, %r3802, 18;
	shf.r.wrap.b32 	%r3807, %r3802, %r3803, 18;
	mov.b64 	%rd5540, {%r3807, %r3806};
	xor.b64  	%rd5541, %rd5539, %rd5540;
	shf.l.wrap.b32 	%r3808, %r3802, %r3803, 23;
	shf.l.wrap.b32 	%r3809, %r3803, %r3802, 23;
	mov.b64 	%rd5542, {%r3809, %r3808};
	xor.b64  	%rd5543, %rd5541, %rd5542;
	add.s64 	%rd5544, %rd5538, %rd5543;
	add.s64 	%rd5545, %rd5544, 4836135668995329356;
	add.s64 	%rd5546, %rd5545, %rd5409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3810,%dummy}, %rd5520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3811}, %rd5520;
	}
	shf.r.wrap.b32 	%r3812, %r3811, %r3810, 28;
	shf.r.wrap.b32 	%r3813, %r3810, %r3811, 28;
	mov.b64 	%rd5547, {%r3813, %r3812};
	shf.l.wrap.b32 	%r3814, %r3810, %r3811, 30;
	shf.l.wrap.b32 	%r3815, %r3811, %r3810, 30;
	mov.b64 	%rd5548, {%r3815, %r3814};
	xor.b64  	%rd5549, %rd5547, %rd5548;
	shf.l.wrap.b32 	%r3816, %r3810, %r3811, 25;
	shf.l.wrap.b32 	%r3817, %r3811, %r3810, 25;
	mov.b64 	%rd5550, {%r3817, %r3816};
	xor.b64  	%rd5551, %rd5549, %rd5550;
	and.b64  	%rd5552, %rd5520, %rd5483;
	or.b64  	%rd5553, %rd5520, %rd5483;
	and.b64  	%rd5554, %rd5553, %rd5446;
	or.b64  	%rd5555, %rd5554, %rd5552;
	add.s64 	%rd5556, %rd5555, %rd5551;
	add.s64 	%rd5557, %rd5556, %rd5545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3818,%dummy}, %rd5496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3819}, %rd5496;
	}
	shf.r.wrap.b32 	%r3820, %r3819, %r3818, 19;
	shf.r.wrap.b32 	%r3821, %r3818, %r3819, 19;
	mov.b64 	%rd5558, {%r3821, %r3820};
	shf.l.wrap.b32 	%r3822, %r3818, %r3819, 3;
	shf.l.wrap.b32 	%r3823, %r3819, %r3818, 3;
	mov.b64 	%rd5559, {%r3823, %r3822};
	xor.b64  	%rd5560, %rd5558, %rd5559;
	shr.u64 	%rd5561, %rd5496, 6;
	xor.b64  	%rd5562, %rd5560, %rd5561;
	shf.r.wrap.b32 	%r3824, %r3481, %r3480, 1;
	shf.r.wrap.b32 	%r3825, %r3480, %r3481, 1;
	mov.b64 	%rd5563, {%r3825, %r3824};
	shf.r.wrap.b32 	%r3826, %r3481, %r3480, 8;
	shf.r.wrap.b32 	%r3827, %r3480, %r3481, 8;
	mov.b64 	%rd5564, {%r3827, %r3826};
	xor.b64  	%rd5565, %rd5563, %rd5564;
	shr.u64 	%rd5566, %rd5015, 7;
	xor.b64  	%rd5567, %rd5565, %rd5566;
	add.s64 	%rd5568, %rd5562, %rd4978;
	add.s64 	%rd5569, %rd5568, %rd5311;
	add.s64 	%rd5570, %rd5569, %rd5567;
	add.s64 	%rd5571, %rd5570, %rd5435;
	xor.b64  	%rd5572, %rd5509, %rd5472;
	and.b64  	%rd5573, %rd5546, %rd5572;
	xor.b64  	%rd5574, %rd5573, %rd5472;
	add.s64 	%rd5575, %rd5571, %rd5574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3828,%dummy}, %rd5546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3829}, %rd5546;
	}
	shf.r.wrap.b32 	%r3830, %r3829, %r3828, 14;
	shf.r.wrap.b32 	%r3831, %r3828, %r3829, 14;
	mov.b64 	%rd5576, {%r3831, %r3830};
	shf.r.wrap.b32 	%r3832, %r3829, %r3828, 18;
	shf.r.wrap.b32 	%r3833, %r3828, %r3829, 18;
	mov.b64 	%rd5577, {%r3833, %r3832};
	xor.b64  	%rd5578, %rd5576, %rd5577;
	shf.l.wrap.b32 	%r3834, %r3828, %r3829, 23;
	shf.l.wrap.b32 	%r3835, %r3829, %r3828, 23;
	mov.b64 	%rd5579, {%r3835, %r3834};
	xor.b64  	%rd5580, %rd5578, %rd5579;
	add.s64 	%rd5581, %rd5575, %rd5580;
	add.s64 	%rd5582, %rd5581, 5532061633213252278;
	add.s64 	%rd33, %rd5582, %rd5446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3836,%dummy}, %rd5557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3837}, %rd5557;
	}
	shf.r.wrap.b32 	%r3838, %r3837, %r3836, 28;
	shf.r.wrap.b32 	%r3839, %r3836, %r3837, 28;
	mov.b64 	%rd5583, {%r3839, %r3838};
	shf.l.wrap.b32 	%r3840, %r3836, %r3837, 30;
	shf.l.wrap.b32 	%r3841, %r3837, %r3836, 30;
	mov.b64 	%rd5584, {%r3841, %r3840};
	xor.b64  	%rd5585, %rd5583, %rd5584;
	shf.l.wrap.b32 	%r3842, %r3836, %r3837, 25;
	shf.l.wrap.b32 	%r3843, %r3837, %r3836, 25;
	mov.b64 	%rd5586, {%r3843, %r3842};
	xor.b64  	%rd5587, %rd5585, %rd5586;
	and.b64  	%rd5588, %rd5557, %rd5520;
	or.b64  	%rd5589, %rd5557, %rd5520;
	and.b64  	%rd5590, %rd5589, %rd5483;
	or.b64  	%rd5591, %rd5590, %rd5588;
	add.s64 	%rd5592, %rd5591, %rd5587;
	add.s64 	%rd5593, %rd5592, %rd5582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3844,%dummy}, %rd5533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3845}, %rd5533;
	}
	shf.r.wrap.b32 	%r3846, %r3845, %r3844, 19;
	shf.r.wrap.b32 	%r3847, %r3844, %r3845, 19;
	mov.b64 	%rd5594, {%r3847, %r3846};
	shf.l.wrap.b32 	%r3848, %r3844, %r3845, 3;
	shf.l.wrap.b32 	%r3849, %r3845, %r3844, 3;
	mov.b64 	%rd5595, {%r3849, %r3848};
	xor.b64  	%rd5596, %rd5594, %rd5595;
	shr.u64 	%rd5597, %rd5533, 6;
	xor.b64  	%rd5598, %rd5596, %rd5597;
	shf.r.wrap.b32 	%r3850, %r3507, %r3506, 1;
	shf.r.wrap.b32 	%r3851, %r3506, %r3507, 1;
	mov.b64 	%rd5599, {%r3851, %r3850};
	shf.r.wrap.b32 	%r3852, %r3507, %r3506, 8;
	shf.r.wrap.b32 	%r3853, %r3506, %r3507, 8;
	mov.b64 	%rd5600, {%r3853, %r3852};
	xor.b64  	%rd5601, %rd5599, %rd5600;
	shr.u64 	%rd5602, %rd5052, 7;
	xor.b64  	%rd5603, %rd5601, %rd5602;
	add.s64 	%rd5604, %rd5598, %rd5015;
	add.s64 	%rd5605, %rd5604, %rd5348;
	add.s64 	%rd5606, %rd5605, %rd5603;
	add.s64 	%rd5607, %rd5606, %rd5472;
	xor.b64  	%rd5608, %rd5546, %rd5509;
	and.b64  	%rd5609, %rd33, %rd5608;
	xor.b64  	%rd5610, %rd5609, %rd5509;
	add.s64 	%rd5611, %rd5607, %rd5610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3854,%dummy}, %rd33;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3855}, %rd33;
	}
	shf.r.wrap.b32 	%r3856, %r3855, %r3854, 14;
	shf.r.wrap.b32 	%r3857, %r3854, %r3855, 14;
	mov.b64 	%rd5612, {%r3857, %r3856};
	shf.r.wrap.b32 	%r3858, %r3855, %r3854, 18;
	shf.r.wrap.b32 	%r3859, %r3854, %r3855, 18;
	mov.b64 	%rd5613, {%r3859, %r3858};
	xor.b64  	%rd5614, %rd5612, %rd5613;
	shf.l.wrap.b32 	%r3860, %r3854, %r3855, 23;
	shf.l.wrap.b32 	%r3861, %r3855, %r3854, 23;
	mov.b64 	%rd5615, {%r3861, %r3860};
	xor.b64  	%rd5616, %rd5614, %rd5615;
	add.s64 	%rd5617, %rd5611, %rd5616;
	add.s64 	%rd5618, %rd5617, 6448918945643986474;
	add.s64 	%rd34, %rd5618, %rd5483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3862,%dummy}, %rd5593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3863}, %rd5593;
	}
	shf.r.wrap.b32 	%r3864, %r3863, %r3862, 28;
	shf.r.wrap.b32 	%r3865, %r3862, %r3863, 28;
	mov.b64 	%rd5619, {%r3865, %r3864};
	shf.l.wrap.b32 	%r3866, %r3862, %r3863, 30;
	shf.l.wrap.b32 	%r3867, %r3863, %r3862, 30;
	mov.b64 	%rd5620, {%r3867, %r3866};
	xor.b64  	%rd5621, %rd5619, %rd5620;
	shf.l.wrap.b32 	%r3868, %r3862, %r3863, 25;
	shf.l.wrap.b32 	%r3869, %r3863, %r3862, 25;
	mov.b64 	%rd5622, {%r3869, %r3868};
	xor.b64  	%rd5623, %rd5621, %rd5622;
	and.b64  	%rd5624, %rd5593, %rd5557;
	or.b64  	%rd5625, %rd5593, %rd5557;
	and.b64  	%rd5626, %rd5625, %rd5520;
	or.b64  	%rd5627, %rd5626, %rd5624;
	add.s64 	%rd5628, %rd5627, %rd5623;
	add.s64 	%rd5629, %rd5628, %rd5618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3870,%dummy}, %rd5570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3871}, %rd5570;
	}
	shf.r.wrap.b32 	%r3872, %r3871, %r3870, 19;
	shf.r.wrap.b32 	%r3873, %r3870, %r3871, 19;
	mov.b64 	%rd5630, {%r3873, %r3872};
	shf.l.wrap.b32 	%r3874, %r3870, %r3871, 3;
	shf.l.wrap.b32 	%r3875, %r3871, %r3870, 3;
	mov.b64 	%rd5631, {%r3875, %r3874};
	xor.b64  	%rd5632, %rd5630, %rd5631;
	shr.u64 	%rd5633, %rd5570, 6;
	xor.b64  	%rd5634, %rd5632, %rd5633;
	shf.r.wrap.b32 	%r3876, %r3533, %r3532, 1;
	shf.r.wrap.b32 	%r3877, %r3532, %r3533, 1;
	mov.b64 	%rd5635, {%r3877, %r3876};
	shf.r.wrap.b32 	%r3878, %r3533, %r3532, 8;
	shf.r.wrap.b32 	%r3879, %r3532, %r3533, 8;
	mov.b64 	%rd5636, {%r3879, %r3878};
	xor.b64  	%rd5637, %rd5635, %rd5636;
	shr.u64 	%rd5638, %rd5089, 7;
	xor.b64  	%rd5639, %rd5637, %rd5638;
	add.s64 	%rd5640, %rd5634, %rd5052;
	add.s64 	%rd5641, %rd5640, %rd5385;
	add.s64 	%rd5642, %rd5641, %rd5639;
	add.s64 	%rd5643, %rd5642, %rd5509;
	xor.b64  	%rd5644, %rd33, %rd5546;
	and.b64  	%rd5645, %rd34, %rd5644;
	xor.b64  	%rd5646, %rd5645, %rd5546;
	add.s64 	%rd5647, %rd5643, %rd5646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3880,%dummy}, %rd34;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3881}, %rd34;
	}
	shf.r.wrap.b32 	%r3882, %r3881, %r3880, 14;
	shf.r.wrap.b32 	%r3883, %r3880, %r3881, 14;
	mov.b64 	%rd5648, {%r3883, %r3882};
	shf.r.wrap.b32 	%r3884, %r3881, %r3880, 18;
	shf.r.wrap.b32 	%r3885, %r3880, %r3881, 18;
	mov.b64 	%rd5649, {%r3885, %r3884};
	xor.b64  	%rd5650, %rd5648, %rd5649;
	shf.l.wrap.b32 	%r3886, %r3880, %r3881, 23;
	shf.l.wrap.b32 	%r3887, %r3881, %r3880, 23;
	mov.b64 	%rd5651, {%r3887, %r3886};
	xor.b64  	%rd5652, %rd5650, %rd5651;
	add.s64 	%rd5653, %rd5647, %rd5652;
	add.s64 	%rd5654, %rd5653, 6902733635092675308;
	add.s64 	%rd35, %rd5654, %rd5520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3888,%dummy}, %rd5629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3889}, %rd5629;
	}
	shf.r.wrap.b32 	%r3890, %r3889, %r3888, 28;
	shf.r.wrap.b32 	%r3891, %r3888, %r3889, 28;
	mov.b64 	%rd5655, {%r3891, %r3890};
	shf.l.wrap.b32 	%r3892, %r3888, %r3889, 30;
	shf.l.wrap.b32 	%r3893, %r3889, %r3888, 30;
	mov.b64 	%rd5656, {%r3893, %r3892};
	xor.b64  	%rd5657, %rd5655, %rd5656;
	shf.l.wrap.b32 	%r3894, %r3888, %r3889, 25;
	shf.l.wrap.b32 	%r3895, %r3889, %r3888, 25;
	mov.b64 	%rd5658, {%r3895, %r3894};
	xor.b64  	%rd5659, %rd5657, %rd5658;
	and.b64  	%rd5660, %rd5629, %rd5593;
	or.b64  	%rd5661, %rd5629, %rd5593;
	and.b64  	%rd5662, %rd5661, %rd5557;
	or.b64  	%rd5663, %rd5662, %rd5660;
	add.s64 	%rd5664, %rd5663, %rd5659;
	add.s64 	%rd5665, %rd5664, %rd5654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3896,%dummy}, %rd5606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3897}, %rd5606;
	}
	shf.r.wrap.b32 	%r3898, %r3897, %r3896, 19;
	shf.r.wrap.b32 	%r3899, %r3896, %r3897, 19;
	mov.b64 	%rd5666, {%r3899, %r3898};
	shf.l.wrap.b32 	%r3900, %r3896, %r3897, 3;
	shf.l.wrap.b32 	%r3901, %r3897, %r3896, 3;
	mov.b64 	%rd5667, {%r3901, %r3900};
	xor.b64  	%rd5668, %rd5666, %rd5667;
	shr.u64 	%rd5669, %rd5606, 6;
	xor.b64  	%rd5670, %rd5668, %rd5669;
	shf.r.wrap.b32 	%r3902, %r3559, %r3558, 1;
	shf.r.wrap.b32 	%r3903, %r3558, %r3559, 1;
	mov.b64 	%rd5671, {%r3903, %r3902};
	shf.r.wrap.b32 	%r3904, %r3559, %r3558, 8;
	shf.r.wrap.b32 	%r3905, %r3558, %r3559, 8;
	mov.b64 	%rd5672, {%r3905, %r3904};
	xor.b64  	%rd5673, %rd5671, %rd5672;
	shr.u64 	%rd5674, %rd5126, 7;
	xor.b64  	%rd5675, %rd5673, %rd5674;
	add.s64 	%rd5676, %rd5670, %rd5089;
	add.s64 	%rd5677, %rd5676, %rd5422;
	add.s64 	%rd5678, %rd5677, %rd5675;
	add.s64 	%rd5679, %rd5678, %rd5546;
	xor.b64  	%rd5680, %rd34, %rd33;
	and.b64  	%rd5681, %rd35, %rd5680;
	xor.b64  	%rd5682, %rd5681, %rd33;
	add.s64 	%rd5683, %rd5679, %rd5682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3906,%dummy}, %rd35;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3907}, %rd35;
	}
	shf.r.wrap.b32 	%r3908, %r3907, %r3906, 14;
	shf.r.wrap.b32 	%r3909, %r3906, %r3907, 14;
	mov.b64 	%rd5684, {%r3909, %r3908};
	shf.r.wrap.b32 	%r3910, %r3907, %r3906, 18;
	shf.r.wrap.b32 	%r3911, %r3906, %r3907, 18;
	mov.b64 	%rd5685, {%r3911, %r3910};
	xor.b64  	%rd5686, %rd5684, %rd5685;
	shf.l.wrap.b32 	%r3912, %r3906, %r3907, 23;
	shf.l.wrap.b32 	%r3913, %r3907, %r3906, 23;
	mov.b64 	%rd5687, {%r3913, %r3912};
	xor.b64  	%rd5688, %rd5686, %rd5687;
	add.s64 	%rd5689, %rd5683, %rd5688;
	add.s64 	%rd5690, %rd5689, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3914,%dummy}, %rd5665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3915}, %rd5665;
	}
	shf.r.wrap.b32 	%r3916, %r3915, %r3914, 28;
	shf.r.wrap.b32 	%r3917, %r3914, %r3915, 28;
	mov.b64 	%rd5691, {%r3917, %r3916};
	shf.l.wrap.b32 	%r3918, %r3914, %r3915, 30;
	shf.l.wrap.b32 	%r3919, %r3915, %r3914, 30;
	mov.b64 	%rd5692, {%r3919, %r3918};
	xor.b64  	%rd5693, %rd5691, %rd5692;
	shf.l.wrap.b32 	%r3920, %r3914, %r3915, 25;
	shf.l.wrap.b32 	%r3921, %r3915, %r3914, 25;
	mov.b64 	%rd5694, {%r3921, %r3920};
	xor.b64  	%rd5695, %rd5693, %rd5694;
	and.b64  	%rd5696, %rd5665, %rd5629;
	or.b64  	%rd5697, %rd5665, %rd5629;
	and.b64  	%rd5698, %rd5697, %rd5593;
	or.b64  	%rd5699, %rd5698, %rd5696;
	add.s64 	%rd5700, %rd5695, %rd5699;
	add.s64 	%rd5701, %rd5700, %rd5690;
	add.s64 	%rd36, %rd5701, 7640891576956012808;
	add.s64 	%rd37, %rd5665, -4942790177534073029;
	add.s64 	%rd38, %rd5629, 4354685564936845355;
	add.s64 	%rd39, %rd5593, -6534734903238641935;
	add.s64 	%rd5702, %rd5557, %rd5690;
	add.s64 	%rd40, %rd5702, 5840696475078001361;
	add.s64 	%rd41, %rd35, -7276294671716946913;
	add.s64 	%rd42, %rd34, 2270897969802886507;
	mov.u32 	%r7002, 0;
	st.local.v4.u32 	[%rd1], {%r7002, %r7002, %r7002, %r7002};
	st.local.v4.u32 	[%rd1+16], {%r7002, %r7002, %r7002, %r7002};
	st.local.v4.u32 	[%rd1+32], {%r7002, %r7002, %r7002, %r7002};
	st.local.v4.u32 	[%rd1+48], {%r7002, %r7002, %r7002, %r7002};
	st.local.v4.u32 	[%rd1+64], {%r7002, %r7002, %r7002, %r7002};
	st.local.v4.u32 	[%rd1+80], {%r7002, %r7002, %r7002, %r7002};
	st.local.v4.u32 	[%rd1+96], {%r7002, %r7002, %r7002, %r7002};
	st.local.v4.u32 	[%rd1+112], {%r7002, %r7002, %r7002, %r7002};
	add.s32 	%r3923, %r26, 7;
	shr.u32 	%r13, %r3923, 3;
	setp.eq.s32 	%p9, %r13, 0;
	mov.u64 	%rd9989, %rd2948;
	mov.u64 	%rd9990, %rd2948;
	mov.u64 	%rd9991, %rd2948;
	mov.u64 	%rd9992, %rd2948;
	mov.u64 	%rd9993, %rd2948;
	mov.u64 	%rd9994, %rd2948;
	mov.u64 	%rd9995, %rd2948;
	mov.u64 	%rd9996, %rd2948;
	mov.u64 	%rd9997, %rd2948;
	mov.u64 	%rd9998, %rd2948;
	mov.u64 	%rd9999, %rd2948;
	mov.u64 	%rd10000, %rd2948;
	mov.u64 	%rd10001, %rd2948;
	mov.u64 	%rd10002, %rd2948;
	mov.u64 	%rd10003, %rd2948;
	@%p9 bra 	$L__BB4_15;

$L__BB4_13:
	mul.wide.u32 	%rd5703, %r7002, 8;
	add.s64 	%rd5704, %rd149, %rd5703;
	ld.const.u64 	%rd5705, [%rd5704];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3925, %temp}, %rd5705;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3926}, %rd5705;
	}
	mov.u32 	%r3927, 291;
	mov.u32 	%r3928, 0;
	prmt.b32 	%r3929, %r3925, %r3928, %r3927;
	prmt.b32 	%r3930, %r3926, %r3928, %r3927;
	mov.b64 	%rd5706, {%r3930, %r3929};
	add.s64 	%rd5707, %rd1, %rd5703;
	st.local.u64 	[%rd5707], %rd5706;
	add.s32 	%r7002, %r7002, 1;
	setp.lt.u32 	%p10, %r7002, %r13;
	@%p10 bra 	$L__BB4_13;

	ld.local.v2.u64 	{%rd10003, %rd10002}, [%rd1];
	ld.local.v2.u64 	{%rd10001, %rd10000}, [%rd1+16];
	ld.local.v2.u64 	{%rd9999, %rd9998}, [%rd1+32];
	ld.local.v2.u64 	{%rd9997, %rd9996}, [%rd1+48];
	ld.local.v2.u64 	{%rd9995, %rd9994}, [%rd1+64];
	ld.local.v2.u64 	{%rd9993, %rd9992}, [%rd1+80];
	ld.local.v2.u64 	{%rd9991, %rd9990}, [%rd1+96];
	ld.local.u64 	%rd9989, [%rd1+112];

$L__BB4_15:
	add.s64 	%rd73, %rd33, 6620516959819538809;
	shl.b32 	%r3932, %r26, 3;
	add.s32 	%r3933, %r3932, 1016;
	cvt.u64.u32 	%rd5723, %r3933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3934,%dummy}, %rd21;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3935}, %rd21;
	}
	shf.r.wrap.b32 	%r3936, %r3935, %r3934, 18;
	shf.r.wrap.b32 	%r3937, %r3934, %r3935, 18;
	mov.b64 	%rd5724, {%r3937, %r3936};
	shf.r.wrap.b32 	%r3938, %r3935, %r3934, 14;
	shf.r.wrap.b32 	%r3939, %r3934, %r3935, 14;
	mov.b64 	%rd5725, {%r3939, %r3938};
	xor.b64  	%rd5726, %rd5725, %rd5724;
	shf.l.wrap.b32 	%r3940, %r3934, %r3935, 23;
	shf.l.wrap.b32 	%r3941, %r3935, %r3934, 23;
	mov.b64 	%rd5727, {%r3941, %r3940};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	xor.b64  	%rd5729, %rd23, %rd22;
	and.b64  	%rd5730, %rd5729, %rd21;
	xor.b64  	%rd5731, %rd5730, %rd23;
	add.s64 	%rd5732, %rd14, %rd5728;
	add.s64 	%rd5733, %rd5732, %rd10003;
	add.s64 	%rd5734, %rd5733, %rd5731;
	add.s64 	%rd5735, %rd5734, -7031530027109396581;
	add.s64 	%rd5736, %rd5735, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3942}, %rd17;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3943,%dummy}, %rd17;
	}
	shf.l.wrap.b32 	%r3944, %r3943, %r3942, 30;
	shf.l.wrap.b32 	%r3945, %r3942, %r3943, 30;
	mov.b64 	%rd5737, {%r3945, %r3944};
	shf.r.wrap.b32 	%r3946, %r3942, %r3943, 28;
	shf.r.wrap.b32 	%r3947, %r3943, %r3942, 28;
	mov.b64 	%rd5738, {%r3947, %r3946};
	xor.b64  	%rd5739, %rd5738, %rd5737;
	shf.l.wrap.b32 	%r3948, %r3943, %r3942, 25;
	shf.l.wrap.b32 	%r3949, %r3942, %r3943, 25;
	mov.b64 	%rd5740, {%r3949, %r3948};
	xor.b64  	%rd5741, %rd5739, %rd5740;
	or.b64  	%rd5742, %rd18, %rd17;
	and.b64  	%rd5743, %rd19, %rd5742;
	and.b64  	%rd5744, %rd18, %rd17;
	or.b64  	%rd5745, %rd5743, %rd5744;
	add.s64 	%rd5746, %rd5745, %rd5741;
	add.s64 	%rd5747, %rd5746, %rd5735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3950,%dummy}, %rd5736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3951}, %rd5736;
	}
	shf.r.wrap.b32 	%r3952, %r3951, %r3950, 14;
	shf.r.wrap.b32 	%r3953, %r3950, %r3951, 14;
	mov.b64 	%rd5748, {%r3953, %r3952};
	shf.r.wrap.b32 	%r3954, %r3951, %r3950, 18;
	shf.r.wrap.b32 	%r3955, %r3950, %r3951, 18;
	mov.b64 	%rd5749, {%r3955, %r3954};
	xor.b64  	%rd5750, %rd5748, %rd5749;
	shf.l.wrap.b32 	%r3956, %r3950, %r3951, 23;
	shf.l.wrap.b32 	%r3957, %r3951, %r3950, 23;
	mov.b64 	%rd5751, {%r3957, %r3956};
	xor.b64  	%rd5752, %rd5750, %rd5751;
	xor.b64  	%rd5753, %rd22, %rd21;
	and.b64  	%rd5754, %rd5736, %rd5753;
	xor.b64  	%rd5755, %rd5754, %rd22;
	add.s64 	%rd5756, %rd15, %rd10002;
	add.s64 	%rd5757, %rd5756, %rd5755;
	add.s64 	%rd5758, %rd5757, %rd5752;
	add.s64 	%rd5759, %rd5758, -8017781463737883848;
	add.s64 	%rd5760, %rd5759, %rd19;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3958,%dummy}, %rd5747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3959}, %rd5747;
	}
	shf.r.wrap.b32 	%r3960, %r3959, %r3958, 28;
	shf.r.wrap.b32 	%r3961, %r3958, %r3959, 28;
	mov.b64 	%rd5761, {%r3961, %r3960};
	shf.l.wrap.b32 	%r3962, %r3958, %r3959, 30;
	shf.l.wrap.b32 	%r3963, %r3959, %r3958, 30;
	mov.b64 	%rd5762, {%r3963, %r3962};
	xor.b64  	%rd5763, %rd5761, %rd5762;
	shf.l.wrap.b32 	%r3964, %r3958, %r3959, 25;
	shf.l.wrap.b32 	%r3965, %r3959, %r3958, 25;
	mov.b64 	%rd5764, {%r3965, %r3964};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	and.b64  	%rd5766, %rd5747, %rd17;
	or.b64  	%rd5767, %rd5747, %rd17;
	and.b64  	%rd5768, %rd5767, %rd18;
	or.b64  	%rd5769, %rd5768, %rd5766;
	add.s64 	%rd5770, %rd5769, %rd5765;
	add.s64 	%rd5771, %rd5770, %rd5759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3966,%dummy}, %rd5760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3967}, %rd5760;
	}
	shf.r.wrap.b32 	%r3968, %r3967, %r3966, 14;
	shf.r.wrap.b32 	%r3969, %r3966, %r3967, 14;
	mov.b64 	%rd5772, {%r3969, %r3968};
	shf.r.wrap.b32 	%r3970, %r3967, %r3966, 18;
	shf.r.wrap.b32 	%r3971, %r3966, %r3967, 18;
	mov.b64 	%rd5773, {%r3971, %r3970};
	xor.b64  	%rd5774, %rd5772, %rd5773;
	shf.l.wrap.b32 	%r3972, %r3966, %r3967, 23;
	shf.l.wrap.b32 	%r3973, %r3967, %r3966, 23;
	mov.b64 	%rd5775, {%r3973, %r3972};
	xor.b64  	%rd5776, %rd5774, %rd5775;
	xor.b64  	%rd5777, %rd5736, %rd21;
	and.b64  	%rd5778, %rd5760, %rd5777;
	xor.b64  	%rd5779, %rd5778, %rd21;
	add.s64 	%rd5780, %rd16, %rd10001;
	add.s64 	%rd5781, %rd5780, %rd5779;
	add.s64 	%rd5782, %rd5781, %rd5776;
	add.s64 	%rd5783, %rd5782, 5820449915117741902;
	add.s64 	%rd5784, %rd5783, %rd18;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3974,%dummy}, %rd5771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3975}, %rd5771;
	}
	shf.r.wrap.b32 	%r3976, %r3975, %r3974, 28;
	shf.r.wrap.b32 	%r3977, %r3974, %r3975, 28;
	mov.b64 	%rd5785, {%r3977, %r3976};
	shf.l.wrap.b32 	%r3978, %r3974, %r3975, 30;
	shf.l.wrap.b32 	%r3979, %r3975, %r3974, 30;
	mov.b64 	%rd5786, {%r3979, %r3978};
	xor.b64  	%rd5787, %rd5785, %rd5786;
	shf.l.wrap.b32 	%r3980, %r3974, %r3975, 25;
	shf.l.wrap.b32 	%r3981, %r3975, %r3974, 25;
	mov.b64 	%rd5788, {%r3981, %r3980};
	xor.b64  	%rd5789, %rd5787, %rd5788;
	and.b64  	%rd5790, %rd5771, %rd5747;
	or.b64  	%rd5791, %rd5771, %rd5747;
	and.b64  	%rd5792, %rd5791, %rd17;
	or.b64  	%rd5793, %rd5792, %rd5790;
	add.s64 	%rd5794, %rd5793, %rd5789;
	add.s64 	%rd5795, %rd5794, %rd5783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3982,%dummy}, %rd5784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3983}, %rd5784;
	}
	shf.r.wrap.b32 	%r3984, %r3983, %r3982, 14;
	shf.r.wrap.b32 	%r3985, %r3982, %r3983, 14;
	mov.b64 	%rd5796, {%r3985, %r3984};
	shf.r.wrap.b32 	%r3986, %r3983, %r3982, 18;
	shf.r.wrap.b32 	%r3987, %r3982, %r3983, 18;
	mov.b64 	%rd5797, {%r3987, %r3986};
	xor.b64  	%rd5798, %rd5796, %rd5797;
	shf.l.wrap.b32 	%r3988, %r3982, %r3983, 23;
	shf.l.wrap.b32 	%r3989, %r3983, %r3982, 23;
	mov.b64 	%rd5799, {%r3989, %r3988};
	xor.b64  	%rd5800, %rd5798, %rd5799;
	xor.b64  	%rd5801, %rd5760, %rd5736;
	and.b64  	%rd5802, %rd5784, %rd5801;
	xor.b64  	%rd5803, %rd5802, %rd5736;
	add.s64 	%rd5804, %rd21, %rd10000;
	add.s64 	%rd5805, %rd5804, %rd5803;
	add.s64 	%rd5806, %rd5805, %rd5800;
	add.s64 	%rd5807, %rd5806, -1606136188198331460;
	add.s64 	%rd5808, %rd5807, %rd17;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3990,%dummy}, %rd5795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3991}, %rd5795;
	}
	shf.r.wrap.b32 	%r3992, %r3991, %r3990, 28;
	shf.r.wrap.b32 	%r3993, %r3990, %r3991, 28;
	mov.b64 	%rd5809, {%r3993, %r3992};
	shf.l.wrap.b32 	%r3994, %r3990, %r3991, 30;
	shf.l.wrap.b32 	%r3995, %r3991, %r3990, 30;
	mov.b64 	%rd5810, {%r3995, %r3994};
	xor.b64  	%rd5811, %rd5809, %rd5810;
	shf.l.wrap.b32 	%r3996, %r3990, %r3991, 25;
	shf.l.wrap.b32 	%r3997, %r3991, %r3990, 25;
	mov.b64 	%rd5812, {%r3997, %r3996};
	xor.b64  	%rd5813, %rd5811, %rd5812;
	and.b64  	%rd5814, %rd5795, %rd5771;
	or.b64  	%rd5815, %rd5795, %rd5771;
	and.b64  	%rd5816, %rd5815, %rd5747;
	or.b64  	%rd5817, %rd5816, %rd5814;
	add.s64 	%rd5818, %rd5817, %rd5813;
	add.s64 	%rd5819, %rd5818, %rd5807;
	add.s64 	%rd5820, %rd9999, %rd5736;
	xor.b64  	%rd5821, %rd5784, %rd5760;
	and.b64  	%rd5822, %rd5808, %rd5821;
	xor.b64  	%rd5823, %rd5822, %rd5760;
	add.s64 	%rd5824, %rd5820, %rd5823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3998,%dummy}, %rd5808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3999}, %rd5808;
	}
	shf.r.wrap.b32 	%r4000, %r3999, %r3998, 14;
	shf.r.wrap.b32 	%r4001, %r3998, %r3999, 14;
	mov.b64 	%rd5825, {%r4001, %r4000};
	shf.r.wrap.b32 	%r4002, %r3999, %r3998, 18;
	shf.r.wrap.b32 	%r4003, %r3998, %r3999, 18;
	mov.b64 	%rd5826, {%r4003, %r4002};
	xor.b64  	%rd5827, %rd5825, %rd5826;
	shf.l.wrap.b32 	%r4004, %r3998, %r3999, 23;
	shf.l.wrap.b32 	%r4005, %r3999, %r3998, 23;
	mov.b64 	%rd5828, {%r4005, %r4004};
	xor.b64  	%rd5829, %rd5827, %rd5828;
	add.s64 	%rd5830, %rd5824, %rd5829;
	add.s64 	%rd5831, %rd5830, 4131703408338449720;
	add.s64 	%rd5832, %rd5831, %rd5747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4006,%dummy}, %rd5819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4007}, %rd5819;
	}
	shf.r.wrap.b32 	%r4008, %r4007, %r4006, 28;
	shf.r.wrap.b32 	%r4009, %r4006, %r4007, 28;
	mov.b64 	%rd5833, {%r4009, %r4008};
	shf.l.wrap.b32 	%r4010, %r4006, %r4007, 30;
	shf.l.wrap.b32 	%r4011, %r4007, %r4006, 30;
	mov.b64 	%rd5834, {%r4011, %r4010};
	xor.b64  	%rd5835, %rd5833, %rd5834;
	shf.l.wrap.b32 	%r4012, %r4006, %r4007, 25;
	shf.l.wrap.b32 	%r4013, %r4007, %r4006, 25;
	mov.b64 	%rd5836, {%r4013, %r4012};
	xor.b64  	%rd5837, %rd5835, %rd5836;
	and.b64  	%rd5838, %rd5819, %rd5795;
	or.b64  	%rd5839, %rd5819, %rd5795;
	and.b64  	%rd5840, %rd5839, %rd5771;
	or.b64  	%rd5841, %rd5840, %rd5838;
	add.s64 	%rd5842, %rd5841, %rd5837;
	add.s64 	%rd5843, %rd5842, %rd5831;
	add.s64 	%rd5844, %rd9998, %rd5760;
	xor.b64  	%rd5845, %rd5808, %rd5784;
	and.b64  	%rd5846, %rd5832, %rd5845;
	xor.b64  	%rd5847, %rd5846, %rd5784;
	add.s64 	%rd5848, %rd5844, %rd5847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4014,%dummy}, %rd5832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4015}, %rd5832;
	}
	shf.r.wrap.b32 	%r4016, %r4015, %r4014, 14;
	shf.r.wrap.b32 	%r4017, %r4014, %r4015, 14;
	mov.b64 	%rd5849, {%r4017, %r4016};
	shf.r.wrap.b32 	%r4018, %r4015, %r4014, 18;
	shf.r.wrap.b32 	%r4019, %r4014, %r4015, 18;
	mov.b64 	%rd5850, {%r4019, %r4018};
	xor.b64  	%rd5851, %rd5849, %rd5850;
	shf.l.wrap.b32 	%r4020, %r4014, %r4015, 23;
	shf.l.wrap.b32 	%r4021, %r4015, %r4014, 23;
	mov.b64 	%rd5852, {%r4021, %r4020};
	xor.b64  	%rd5853, %rd5851, %rd5852;
	add.s64 	%rd5854, %rd5848, %rd5853;
	add.s64 	%rd5855, %rd5854, 6480981068601479193;
	add.s64 	%rd5856, %rd5855, %rd5771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4022,%dummy}, %rd5843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4023}, %rd5843;
	}
	shf.r.wrap.b32 	%r4024, %r4023, %r4022, 28;
	shf.r.wrap.b32 	%r4025, %r4022, %r4023, 28;
	mov.b64 	%rd5857, {%r4025, %r4024};
	shf.l.wrap.b32 	%r4026, %r4022, %r4023, 30;
	shf.l.wrap.b32 	%r4027, %r4023, %r4022, 30;
	mov.b64 	%rd5858, {%r4027, %r4026};
	xor.b64  	%rd5859, %rd5857, %rd5858;
	shf.l.wrap.b32 	%r4028, %r4022, %r4023, 25;
	shf.l.wrap.b32 	%r4029, %r4023, %r4022, 25;
	mov.b64 	%rd5860, {%r4029, %r4028};
	xor.b64  	%rd5861, %rd5859, %rd5860;
	and.b64  	%rd5862, %rd5843, %rd5819;
	or.b64  	%rd5863, %rd5843, %rd5819;
	and.b64  	%rd5864, %rd5863, %rd5795;
	or.b64  	%rd5865, %rd5864, %rd5862;
	add.s64 	%rd5866, %rd5865, %rd5861;
	add.s64 	%rd5867, %rd5866, %rd5855;
	add.s64 	%rd5868, %rd9997, %rd5784;
	xor.b64  	%rd5869, %rd5832, %rd5808;
	and.b64  	%rd5870, %rd5856, %rd5869;
	xor.b64  	%rd5871, %rd5870, %rd5808;
	add.s64 	%rd5872, %rd5868, %rd5871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4030,%dummy}, %rd5856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4031}, %rd5856;
	}
	shf.r.wrap.b32 	%r4032, %r4031, %r4030, 14;
	shf.r.wrap.b32 	%r4033, %r4030, %r4031, 14;
	mov.b64 	%rd5873, {%r4033, %r4032};
	shf.r.wrap.b32 	%r4034, %r4031, %r4030, 18;
	shf.r.wrap.b32 	%r4035, %r4030, %r4031, 18;
	mov.b64 	%rd5874, {%r4035, %r4034};
	xor.b64  	%rd5875, %rd5873, %rd5874;
	shf.l.wrap.b32 	%r4036, %r4030, %r4031, 23;
	shf.l.wrap.b32 	%r4037, %r4031, %r4030, 23;
	mov.b64 	%rd5876, {%r4037, %r4036};
	xor.b64  	%rd5877, %rd5875, %rd5876;
	add.s64 	%rd5878, %rd5872, %rd5877;
	add.s64 	%rd5879, %rd5878, -7908458776815382629;
	add.s64 	%rd5880, %rd5879, %rd5795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4038,%dummy}, %rd5867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4039}, %rd5867;
	}
	shf.r.wrap.b32 	%r4040, %r4039, %r4038, 28;
	shf.r.wrap.b32 	%r4041, %r4038, %r4039, 28;
	mov.b64 	%rd5881, {%r4041, %r4040};
	shf.l.wrap.b32 	%r4042, %r4038, %r4039, 30;
	shf.l.wrap.b32 	%r4043, %r4039, %r4038, 30;
	mov.b64 	%rd5882, {%r4043, %r4042};
	xor.b64  	%rd5883, %rd5881, %rd5882;
	shf.l.wrap.b32 	%r4044, %r4038, %r4039, 25;
	shf.l.wrap.b32 	%r4045, %r4039, %r4038, 25;
	mov.b64 	%rd5884, {%r4045, %r4044};
	xor.b64  	%rd5885, %rd5883, %rd5884;
	and.b64  	%rd5886, %rd5867, %rd5843;
	or.b64  	%rd5887, %rd5867, %rd5843;
	and.b64  	%rd5888, %rd5887, %rd5819;
	or.b64  	%rd5889, %rd5888, %rd5886;
	add.s64 	%rd5890, %rd5889, %rd5885;
	add.s64 	%rd5891, %rd5890, %rd5879;
	add.s64 	%rd5892, %rd9996, %rd5808;
	xor.b64  	%rd5893, %rd5856, %rd5832;
	and.b64  	%rd5894, %rd5880, %rd5893;
	xor.b64  	%rd5895, %rd5894, %rd5832;
	add.s64 	%rd5896, %rd5892, %rd5895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4046,%dummy}, %rd5880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4047}, %rd5880;
	}
	shf.r.wrap.b32 	%r4048, %r4047, %r4046, 14;
	shf.r.wrap.b32 	%r4049, %r4046, %r4047, 14;
	mov.b64 	%rd5897, {%r4049, %r4048};
	shf.r.wrap.b32 	%r4050, %r4047, %r4046, 18;
	shf.r.wrap.b32 	%r4051, %r4046, %r4047, 18;
	mov.b64 	%rd5898, {%r4051, %r4050};
	xor.b64  	%rd5899, %rd5897, %rd5898;
	shf.l.wrap.b32 	%r4052, %r4046, %r4047, 23;
	shf.l.wrap.b32 	%r4053, %r4047, %r4046, 23;
	mov.b64 	%rd5900, {%r4053, %r4052};
	xor.b64  	%rd5901, %rd5899, %rd5900;
	add.s64 	%rd5902, %rd5896, %rd5901;
	add.s64 	%rd5903, %rd5902, -6116909921290321640;
	add.s64 	%rd5904, %rd5903, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4054,%dummy}, %rd5891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4055}, %rd5891;
	}
	shf.r.wrap.b32 	%r4056, %r4055, %r4054, 28;
	shf.r.wrap.b32 	%r4057, %r4054, %r4055, 28;
	mov.b64 	%rd5905, {%r4057, %r4056};
	shf.l.wrap.b32 	%r4058, %r4054, %r4055, 30;
	shf.l.wrap.b32 	%r4059, %r4055, %r4054, 30;
	mov.b64 	%rd5906, {%r4059, %r4058};
	xor.b64  	%rd5907, %rd5905, %rd5906;
	shf.l.wrap.b32 	%r4060, %r4054, %r4055, 25;
	shf.l.wrap.b32 	%r4061, %r4055, %r4054, 25;
	mov.b64 	%rd5908, {%r4061, %r4060};
	xor.b64  	%rd5909, %rd5907, %rd5908;
	and.b64  	%rd5910, %rd5891, %rd5867;
	or.b64  	%rd5911, %rd5891, %rd5867;
	and.b64  	%rd5912, %rd5911, %rd5843;
	or.b64  	%rd5913, %rd5912, %rd5910;
	add.s64 	%rd5914, %rd5913, %rd5909;
	add.s64 	%rd5915, %rd5914, %rd5903;
	add.s64 	%rd5916, %rd9995, %rd5832;
	xor.b64  	%rd5917, %rd5880, %rd5856;
	and.b64  	%rd5918, %rd5904, %rd5917;
	xor.b64  	%rd5919, %rd5918, %rd5856;
	add.s64 	%rd5920, %rd5916, %rd5919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4062,%dummy}, %rd5904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4063}, %rd5904;
	}
	shf.r.wrap.b32 	%r4064, %r4063, %r4062, 14;
	shf.r.wrap.b32 	%r4065, %r4062, %r4063, 14;
	mov.b64 	%rd5921, {%r4065, %r4064};
	shf.r.wrap.b32 	%r4066, %r4063, %r4062, 18;
	shf.r.wrap.b32 	%r4067, %r4062, %r4063, 18;
	mov.b64 	%rd5922, {%r4067, %r4066};
	xor.b64  	%rd5923, %rd5921, %rd5922;
	shf.l.wrap.b32 	%r4068, %r4062, %r4063, 23;
	shf.l.wrap.b32 	%r4069, %r4063, %r4062, 23;
	mov.b64 	%rd5924, {%r4069, %r4068};
	xor.b64  	%rd5925, %rd5923, %rd5924;
	add.s64 	%rd5926, %rd5920, %rd5925;
	add.s64 	%rd5927, %rd5926, -2880145864133508542;
	add.s64 	%rd5928, %rd5927, %rd5843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4070,%dummy}, %rd5915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4071}, %rd5915;
	}
	shf.r.wrap.b32 	%r4072, %r4071, %r4070, 28;
	shf.r.wrap.b32 	%r4073, %r4070, %r4071, 28;
	mov.b64 	%rd5929, {%r4073, %r4072};
	shf.l.wrap.b32 	%r4074, %r4070, %r4071, 30;
	shf.l.wrap.b32 	%r4075, %r4071, %r4070, 30;
	mov.b64 	%rd5930, {%r4075, %r4074};
	xor.b64  	%rd5931, %rd5929, %rd5930;
	shf.l.wrap.b32 	%r4076, %r4070, %r4071, 25;
	shf.l.wrap.b32 	%r4077, %r4071, %r4070, 25;
	mov.b64 	%rd5932, {%r4077, %r4076};
	xor.b64  	%rd5933, %rd5931, %rd5932;
	and.b64  	%rd5934, %rd5915, %rd5891;
	or.b64  	%rd5935, %rd5915, %rd5891;
	and.b64  	%rd5936, %rd5935, %rd5867;
	or.b64  	%rd5937, %rd5936, %rd5934;
	add.s64 	%rd5938, %rd5937, %rd5933;
	add.s64 	%rd5939, %rd5938, %rd5927;
	add.s64 	%rd5940, %rd9994, %rd5856;
	xor.b64  	%rd5941, %rd5904, %rd5880;
	and.b64  	%rd5942, %rd5928, %rd5941;
	xor.b64  	%rd5943, %rd5942, %rd5880;
	add.s64 	%rd5944, %rd5940, %rd5943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4078,%dummy}, %rd5928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4079}, %rd5928;
	}
	shf.r.wrap.b32 	%r4080, %r4079, %r4078, 14;
	shf.r.wrap.b32 	%r4081, %r4078, %r4079, 14;
	mov.b64 	%rd5945, {%r4081, %r4080};
	shf.r.wrap.b32 	%r4082, %r4079, %r4078, 18;
	shf.r.wrap.b32 	%r4083, %r4078, %r4079, 18;
	mov.b64 	%rd5946, {%r4083, %r4082};
	xor.b64  	%rd5947, %rd5945, %rd5946;
	shf.l.wrap.b32 	%r4084, %r4078, %r4079, 23;
	shf.l.wrap.b32 	%r4085, %r4079, %r4078, 23;
	mov.b64 	%rd5948, {%r4085, %r4084};
	xor.b64  	%rd5949, %rd5947, %rd5948;
	add.s64 	%rd5950, %rd5944, %rd5949;
	add.s64 	%rd5951, %rd5950, 1334009975649890238;
	add.s64 	%rd5952, %rd5951, %rd5867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4086,%dummy}, %rd5939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4087}, %rd5939;
	}
	shf.r.wrap.b32 	%r4088, %r4087, %r4086, 28;
	shf.r.wrap.b32 	%r4089, %r4086, %r4087, 28;
	mov.b64 	%rd5953, {%r4089, %r4088};
	shf.l.wrap.b32 	%r4090, %r4086, %r4087, 30;
	shf.l.wrap.b32 	%r4091, %r4087, %r4086, 30;
	mov.b64 	%rd5954, {%r4091, %r4090};
	xor.b64  	%rd5955, %rd5953, %rd5954;
	shf.l.wrap.b32 	%r4092, %r4086, %r4087, 25;
	shf.l.wrap.b32 	%r4093, %r4087, %r4086, 25;
	mov.b64 	%rd5956, {%r4093, %r4092};
	xor.b64  	%rd5957, %rd5955, %rd5956;
	and.b64  	%rd5958, %rd5939, %rd5915;
	or.b64  	%rd5959, %rd5939, %rd5915;
	and.b64  	%rd5960, %rd5959, %rd5891;
	or.b64  	%rd5961, %rd5960, %rd5958;
	add.s64 	%rd5962, %rd5961, %rd5957;
	add.s64 	%rd5963, %rd5962, %rd5951;
	add.s64 	%rd5964, %rd9993, %rd5880;
	xor.b64  	%rd5965, %rd5928, %rd5904;
	and.b64  	%rd5966, %rd5952, %rd5965;
	xor.b64  	%rd5967, %rd5966, %rd5904;
	add.s64 	%rd5968, %rd5964, %rd5967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4094,%dummy}, %rd5952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4095}, %rd5952;
	}
	shf.r.wrap.b32 	%r4096, %r4095, %r4094, 14;
	shf.r.wrap.b32 	%r4097, %r4094, %r4095, 14;
	mov.b64 	%rd5969, {%r4097, %r4096};
	shf.r.wrap.b32 	%r4098, %r4095, %r4094, 18;
	shf.r.wrap.b32 	%r4099, %r4094, %r4095, 18;
	mov.b64 	%rd5970, {%r4099, %r4098};
	xor.b64  	%rd5971, %rd5969, %rd5970;
	shf.l.wrap.b32 	%r4100, %r4094, %r4095, 23;
	shf.l.wrap.b32 	%r4101, %r4095, %r4094, 23;
	mov.b64 	%rd5972, {%r4101, %r4100};
	xor.b64  	%rd5973, %rd5971, %rd5972;
	add.s64 	%rd5974, %rd5968, %rd5973;
	add.s64 	%rd5975, %rd5974, 2608012711638119052;
	add.s64 	%rd5976, %rd5975, %rd5891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4102,%dummy}, %rd5963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4103}, %rd5963;
	}
	shf.r.wrap.b32 	%r4104, %r4103, %r4102, 28;
	shf.r.wrap.b32 	%r4105, %r4102, %r4103, 28;
	mov.b64 	%rd5977, {%r4105, %r4104};
	shf.l.wrap.b32 	%r4106, %r4102, %r4103, 30;
	shf.l.wrap.b32 	%r4107, %r4103, %r4102, 30;
	mov.b64 	%rd5978, {%r4107, %r4106};
	xor.b64  	%rd5979, %rd5977, %rd5978;
	shf.l.wrap.b32 	%r4108, %r4102, %r4103, 25;
	shf.l.wrap.b32 	%r4109, %r4103, %r4102, 25;
	mov.b64 	%rd5980, {%r4109, %r4108};
	xor.b64  	%rd5981, %rd5979, %rd5980;
	and.b64  	%rd5982, %rd5963, %rd5939;
	or.b64  	%rd5983, %rd5963, %rd5939;
	and.b64  	%rd5984, %rd5983, %rd5915;
	or.b64  	%rd5985, %rd5984, %rd5982;
	add.s64 	%rd5986, %rd5985, %rd5981;
	add.s64 	%rd5987, %rd5986, %rd5975;
	add.s64 	%rd5988, %rd9992, %rd5904;
	xor.b64  	%rd5989, %rd5952, %rd5928;
	and.b64  	%rd5990, %rd5976, %rd5989;
	xor.b64  	%rd5991, %rd5990, %rd5928;
	add.s64 	%rd5992, %rd5988, %rd5991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4110,%dummy}, %rd5976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4111}, %rd5976;
	}
	shf.r.wrap.b32 	%r4112, %r4111, %r4110, 14;
	shf.r.wrap.b32 	%r4113, %r4110, %r4111, 14;
	mov.b64 	%rd5993, {%r4113, %r4112};
	shf.r.wrap.b32 	%r4114, %r4111, %r4110, 18;
	shf.r.wrap.b32 	%r4115, %r4110, %r4111, 18;
	mov.b64 	%rd5994, {%r4115, %r4114};
	xor.b64  	%rd5995, %rd5993, %rd5994;
	shf.l.wrap.b32 	%r4116, %r4110, %r4111, 23;
	shf.l.wrap.b32 	%r4117, %r4111, %r4110, 23;
	mov.b64 	%rd5996, {%r4117, %r4116};
	xor.b64  	%rd5997, %rd5995, %rd5996;
	add.s64 	%rd5998, %rd5992, %rd5997;
	add.s64 	%rd5999, %rd5998, 6128411473006802146;
	add.s64 	%rd6000, %rd5999, %rd5915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4118,%dummy}, %rd5987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4119}, %rd5987;
	}
	shf.r.wrap.b32 	%r4120, %r4119, %r4118, 28;
	shf.r.wrap.b32 	%r4121, %r4118, %r4119, 28;
	mov.b64 	%rd6001, {%r4121, %r4120};
	shf.l.wrap.b32 	%r4122, %r4118, %r4119, 30;
	shf.l.wrap.b32 	%r4123, %r4119, %r4118, 30;
	mov.b64 	%rd6002, {%r4123, %r4122};
	xor.b64  	%rd6003, %rd6001, %rd6002;
	shf.l.wrap.b32 	%r4124, %r4118, %r4119, 25;
	shf.l.wrap.b32 	%r4125, %r4119, %r4118, 25;
	mov.b64 	%rd6004, {%r4125, %r4124};
	xor.b64  	%rd6005, %rd6003, %rd6004;
	and.b64  	%rd6006, %rd5987, %rd5963;
	or.b64  	%rd6007, %rd5987, %rd5963;
	and.b64  	%rd6008, %rd6007, %rd5939;
	or.b64  	%rd6009, %rd6008, %rd6006;
	add.s64 	%rd6010, %rd6009, %rd6005;
	add.s64 	%rd6011, %rd6010, %rd5999;
	add.s64 	%rd6012, %rd9991, %rd5928;
	xor.b64  	%rd6013, %rd5976, %rd5952;
	and.b64  	%rd6014, %rd6000, %rd6013;
	xor.b64  	%rd6015, %rd6014, %rd5952;
	add.s64 	%rd6016, %rd6012, %rd6015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4126,%dummy}, %rd6000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4127}, %rd6000;
	}
	shf.r.wrap.b32 	%r4128, %r4127, %r4126, 14;
	shf.r.wrap.b32 	%r4129, %r4126, %r4127, 14;
	mov.b64 	%rd6017, {%r4129, %r4128};
	shf.r.wrap.b32 	%r4130, %r4127, %r4126, 18;
	shf.r.wrap.b32 	%r4131, %r4126, %r4127, 18;
	mov.b64 	%rd6018, {%r4131, %r4130};
	xor.b64  	%rd6019, %rd6017, %rd6018;
	shf.l.wrap.b32 	%r4132, %r4126, %r4127, 23;
	shf.l.wrap.b32 	%r4133, %r4127, %r4126, 23;
	mov.b64 	%rd6020, {%r4133, %r4132};
	xor.b64  	%rd6021, %rd6019, %rd6020;
	add.s64 	%rd6022, %rd6016, %rd6021;
	add.s64 	%rd6023, %rd6022, 8268148722764581231;
	add.s64 	%rd6024, %rd6023, %rd5939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4134,%dummy}, %rd6011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4135}, %rd6011;
	}
	shf.r.wrap.b32 	%r4136, %r4135, %r4134, 28;
	shf.r.wrap.b32 	%r4137, %r4134, %r4135, 28;
	mov.b64 	%rd6025, {%r4137, %r4136};
	shf.l.wrap.b32 	%r4138, %r4134, %r4135, 30;
	shf.l.wrap.b32 	%r4139, %r4135, %r4134, 30;
	mov.b64 	%rd6026, {%r4139, %r4138};
	xor.b64  	%rd6027, %rd6025, %rd6026;
	shf.l.wrap.b32 	%r4140, %r4134, %r4135, 25;
	shf.l.wrap.b32 	%r4141, %r4135, %r4134, 25;
	mov.b64 	%rd6028, {%r4141, %r4140};
	xor.b64  	%rd6029, %rd6027, %rd6028;
	and.b64  	%rd6030, %rd6011, %rd5987;
	or.b64  	%rd6031, %rd6011, %rd5987;
	and.b64  	%rd6032, %rd6031, %rd5963;
	or.b64  	%rd6033, %rd6032, %rd6030;
	add.s64 	%rd6034, %rd6033, %rd6029;
	add.s64 	%rd6035, %rd6034, %rd6023;
	add.s64 	%rd6036, %rd9990, %rd5952;
	xor.b64  	%rd6037, %rd6000, %rd5976;
	and.b64  	%rd6038, %rd6024, %rd6037;
	xor.b64  	%rd6039, %rd6038, %rd5976;
	add.s64 	%rd6040, %rd6036, %rd6039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4142,%dummy}, %rd6024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4143}, %rd6024;
	}
	shf.r.wrap.b32 	%r4144, %r4143, %r4142, 14;
	shf.r.wrap.b32 	%r4145, %r4142, %r4143, 14;
	mov.b64 	%rd6041, {%r4145, %r4144};
	shf.r.wrap.b32 	%r4146, %r4143, %r4142, 18;
	shf.r.wrap.b32 	%r4147, %r4142, %r4143, 18;
	mov.b64 	%rd6042, {%r4147, %r4146};
	xor.b64  	%rd6043, %rd6041, %rd6042;
	shf.l.wrap.b32 	%r4148, %r4142, %r4143, 23;
	shf.l.wrap.b32 	%r4149, %r4143, %r4142, 23;
	mov.b64 	%rd6044, {%r4149, %r4148};
	xor.b64  	%rd6045, %rd6043, %rd6044;
	add.s64 	%rd6046, %rd6040, %rd6045;
	add.s64 	%rd6047, %rd6046, -9160688886553864527;
	add.s64 	%rd6048, %rd6047, %rd5963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4150,%dummy}, %rd6035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4151}, %rd6035;
	}
	shf.r.wrap.b32 	%r4152, %r4151, %r4150, 28;
	shf.r.wrap.b32 	%r4153, %r4150, %r4151, 28;
	mov.b64 	%rd6049, {%r4153, %r4152};
	shf.l.wrap.b32 	%r4154, %r4150, %r4151, 30;
	shf.l.wrap.b32 	%r4155, %r4151, %r4150, 30;
	mov.b64 	%rd6050, {%r4155, %r4154};
	xor.b64  	%rd6051, %rd6049, %rd6050;
	shf.l.wrap.b32 	%r4156, %r4150, %r4151, 25;
	shf.l.wrap.b32 	%r4157, %r4151, %r4150, 25;
	mov.b64 	%rd6052, {%r4157, %r4156};
	xor.b64  	%rd6053, %rd6051, %rd6052;
	and.b64  	%rd6054, %rd6035, %rd6011;
	or.b64  	%rd6055, %rd6035, %rd6011;
	and.b64  	%rd6056, %rd6055, %rd5987;
	or.b64  	%rd6057, %rd6056, %rd6054;
	add.s64 	%rd6058, %rd6057, %rd6053;
	add.s64 	%rd6059, %rd6058, %rd6047;
	add.s64 	%rd6060, %rd9989, %rd5976;
	xor.b64  	%rd6061, %rd6024, %rd6000;
	and.b64  	%rd6062, %rd6048, %rd6061;
	xor.b64  	%rd6063, %rd6062, %rd6000;
	add.s64 	%rd6064, %rd6060, %rd6063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4158,%dummy}, %rd6048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4159}, %rd6048;
	}
	shf.r.wrap.b32 	%r4160, %r4159, %r4158, 14;
	shf.r.wrap.b32 	%r4161, %r4158, %r4159, 14;
	mov.b64 	%rd6065, {%r4161, %r4160};
	shf.r.wrap.b32 	%r4162, %r4159, %r4158, 18;
	shf.r.wrap.b32 	%r4163, %r4158, %r4159, 18;
	mov.b64 	%rd6066, {%r4163, %r4162};
	xor.b64  	%rd6067, %rd6065, %rd6066;
	shf.l.wrap.b32 	%r4164, %r4158, %r4159, 23;
	shf.l.wrap.b32 	%r4165, %r4159, %r4158, 23;
	mov.b64 	%rd6068, {%r4165, %r4164};
	xor.b64  	%rd6069, %rd6067, %rd6068;
	add.s64 	%rd6070, %rd6064, %rd6069;
	add.s64 	%rd6071, %rd6070, -7215885187991268811;
	add.s64 	%rd6072, %rd6071, %rd5987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4166,%dummy}, %rd6059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4167}, %rd6059;
	}
	shf.r.wrap.b32 	%r4168, %r4167, %r4166, 28;
	shf.r.wrap.b32 	%r4169, %r4166, %r4167, 28;
	mov.b64 	%rd6073, {%r4169, %r4168};
	shf.l.wrap.b32 	%r4170, %r4166, %r4167, 30;
	shf.l.wrap.b32 	%r4171, %r4167, %r4166, 30;
	mov.b64 	%rd6074, {%r4171, %r4170};
	xor.b64  	%rd6075, %rd6073, %rd6074;
	shf.l.wrap.b32 	%r4172, %r4166, %r4167, 25;
	shf.l.wrap.b32 	%r4173, %r4167, %r4166, 25;
	mov.b64 	%rd6076, {%r4173, %r4172};
	xor.b64  	%rd6077, %rd6075, %rd6076;
	and.b64  	%rd6078, %rd6059, %rd6035;
	or.b64  	%rd6079, %rd6059, %rd6035;
	and.b64  	%rd6080, %rd6079, %rd6011;
	or.b64  	%rd6081, %rd6080, %rd6078;
	add.s64 	%rd6082, %rd6081, %rd6077;
	add.s64 	%rd6083, %rd6082, %rd6071;
	add.s64 	%rd6084, %rd5723, %rd6000;
	xor.b64  	%rd6085, %rd6048, %rd6024;
	and.b64  	%rd6086, %rd6072, %rd6085;
	xor.b64  	%rd6087, %rd6086, %rd6024;
	add.s64 	%rd6088, %rd6084, %rd6087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4174,%dummy}, %rd6072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4175}, %rd6072;
	}
	shf.r.wrap.b32 	%r4176, %r4175, %r4174, 14;
	shf.r.wrap.b32 	%r4177, %r4174, %r4175, 14;
	mov.b64 	%rd6089, {%r4177, %r4176};
	shf.r.wrap.b32 	%r4178, %r4175, %r4174, 18;
	shf.r.wrap.b32 	%r4179, %r4174, %r4175, 18;
	mov.b64 	%rd6090, {%r4179, %r4178};
	xor.b64  	%rd6091, %rd6089, %rd6090;
	shf.l.wrap.b32 	%r4180, %r4174, %r4175, 23;
	shf.l.wrap.b32 	%r4181, %r4175, %r4174, 23;
	mov.b64 	%rd6092, {%r4181, %r4180};
	xor.b64  	%rd6093, %rd6091, %rd6092;
	add.s64 	%rd6094, %rd6088, %rd6093;
	add.s64 	%rd6095, %rd6094, -4495734319001033068;
	add.s64 	%rd6096, %rd6095, %rd6011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4182,%dummy}, %rd6083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4183}, %rd6083;
	}
	shf.r.wrap.b32 	%r4184, %r4183, %r4182, 28;
	shf.r.wrap.b32 	%r4185, %r4182, %r4183, 28;
	mov.b64 	%rd6097, {%r4185, %r4184};
	shf.l.wrap.b32 	%r4186, %r4182, %r4183, 30;
	shf.l.wrap.b32 	%r4187, %r4183, %r4182, 30;
	mov.b64 	%rd6098, {%r4187, %r4186};
	xor.b64  	%rd6099, %rd6097, %rd6098;
	shf.l.wrap.b32 	%r4188, %r4182, %r4183, 25;
	shf.l.wrap.b32 	%r4189, %r4183, %r4182, 25;
	mov.b64 	%rd6100, {%r4189, %r4188};
	xor.b64  	%rd6101, %rd6099, %rd6100;
	and.b64  	%rd6102, %rd6083, %rd6059;
	or.b64  	%rd6103, %rd6083, %rd6059;
	and.b64  	%rd6104, %rd6103, %rd6035;
	or.b64  	%rd6105, %rd6104, %rd6102;
	add.s64 	%rd6106, %rd6105, %rd6101;
	add.s64 	%rd6107, %rd6106, %rd6095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4190}, %rd9989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4191,%dummy}, %rd9989;
	}
	shf.l.wrap.b32 	%r4192, %r4191, %r4190, 3;
	shf.l.wrap.b32 	%r4193, %r4190, %r4191, 3;
	mov.b64 	%rd6108, {%r4193, %r4192};
	shf.r.wrap.b32 	%r4194, %r4190, %r4191, 19;
	shf.r.wrap.b32 	%r4195, %r4191, %r4190, 19;
	mov.b64 	%rd6109, {%r4195, %r4194};
	xor.b64  	%rd6110, %rd6109, %rd6108;
	shr.u64 	%rd6111, %rd9989, 6;
	xor.b64  	%rd6112, %rd6110, %rd6111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4196,%dummy}, %rd10002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4197}, %rd10002;
	}
	shf.r.wrap.b32 	%r4198, %r4197, %r4196, 8;
	shf.r.wrap.b32 	%r4199, %r4196, %r4197, 8;
	mov.b64 	%rd6113, {%r4199, %r4198};
	shf.r.wrap.b32 	%r4200, %r4197, %r4196, 1;
	shf.r.wrap.b32 	%r4201, %r4196, %r4197, 1;
	mov.b64 	%rd6114, {%r4201, %r4200};
	xor.b64  	%rd6115, %rd6114, %rd6113;
	shr.u64 	%rd6116, %rd10002, 7;
	xor.b64  	%rd6117, %rd6115, %rd6116;
	add.s64 	%rd6118, %rd6112, %rd10003;
	add.s64 	%rd6119, %rd6118, %rd9994;
	add.s64 	%rd6120, %rd6119, %rd6117;
	add.s64 	%rd6121, %rd6120, %rd6024;
	xor.b64  	%rd6122, %rd6072, %rd6048;
	and.b64  	%rd6123, %rd6096, %rd6122;
	xor.b64  	%rd6124, %rd6123, %rd6048;
	add.s64 	%rd6125, %rd6121, %rd6124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4202,%dummy}, %rd6096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4203}, %rd6096;
	}
	shf.r.wrap.b32 	%r4204, %r4203, %r4202, 14;
	shf.r.wrap.b32 	%r4205, %r4202, %r4203, 14;
	mov.b64 	%rd6126, {%r4205, %r4204};
	shf.r.wrap.b32 	%r4206, %r4203, %r4202, 18;
	shf.r.wrap.b32 	%r4207, %r4202, %r4203, 18;
	mov.b64 	%rd6127, {%r4207, %r4206};
	xor.b64  	%rd6128, %rd6126, %rd6127;
	shf.l.wrap.b32 	%r4208, %r4202, %r4203, 23;
	shf.l.wrap.b32 	%r4209, %r4203, %r4202, 23;
	mov.b64 	%rd6129, {%r4209, %r4208};
	xor.b64  	%rd6130, %rd6128, %rd6129;
	add.s64 	%rd6131, %rd6125, %rd6130;
	add.s64 	%rd6132, %rd6131, -1973867731355612462;
	add.s64 	%rd6133, %rd6132, %rd6035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4210,%dummy}, %rd6107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4211}, %rd6107;
	}
	shf.r.wrap.b32 	%r4212, %r4211, %r4210, 28;
	shf.r.wrap.b32 	%r4213, %r4210, %r4211, 28;
	mov.b64 	%rd6134, {%r4213, %r4212};
	shf.l.wrap.b32 	%r4214, %r4210, %r4211, 30;
	shf.l.wrap.b32 	%r4215, %r4211, %r4210, 30;
	mov.b64 	%rd6135, {%r4215, %r4214};
	xor.b64  	%rd6136, %rd6134, %rd6135;
	shf.l.wrap.b32 	%r4216, %r4210, %r4211, 25;
	shf.l.wrap.b32 	%r4217, %r4211, %r4210, 25;
	mov.b64 	%rd6137, {%r4217, %r4216};
	xor.b64  	%rd6138, %rd6136, %rd6137;
	and.b64  	%rd6139, %rd6107, %rd6083;
	or.b64  	%rd6140, %rd6107, %rd6083;
	and.b64  	%rd6141, %rd6140, %rd6059;
	or.b64  	%rd6142, %rd6141, %rd6139;
	add.s64 	%rd6143, %rd6142, %rd6138;
	add.s64 	%rd6144, %rd6143, %rd6132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4218,%dummy}, %rd5723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4219}, %rd5723;
	}
	shf.r.wrap.b32 	%r4220, %r4219, %r4218, 19;
	shf.r.wrap.b32 	%r4221, %r4218, %r4219, 19;
	mov.b64 	%rd6145, {%r4221, %r4220};
	shf.l.wrap.b32 	%r4222, %r4218, %r4219, 3;
	shf.l.wrap.b32 	%r4223, %r4219, %r4218, 3;
	mov.b64 	%rd6146, {%r4223, %r4222};
	xor.b64  	%rd6147, %rd6145, %rd6146;
	shr.u64 	%rd6148, %rd5723, 6;
	xor.b64  	%rd6149, %rd6147, %rd6148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4224,%dummy}, %rd10001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4225}, %rd10001;
	}
	shf.r.wrap.b32 	%r4226, %r4225, %r4224, 8;
	shf.r.wrap.b32 	%r4227, %r4224, %r4225, 8;
	mov.b64 	%rd6150, {%r4227, %r4226};
	shf.r.wrap.b32 	%r4228, %r4225, %r4224, 1;
	shf.r.wrap.b32 	%r4229, %r4224, %r4225, 1;
	mov.b64 	%rd6151, {%r4229, %r4228};
	xor.b64  	%rd6152, %rd6151, %rd6150;
	shr.u64 	%rd6153, %rd10001, 7;
	xor.b64  	%rd6154, %rd6152, %rd6153;
	add.s64 	%rd6155, %rd6149, %rd10002;
	add.s64 	%rd6156, %rd6155, %rd9993;
	add.s64 	%rd6157, %rd6156, %rd6154;
	add.s64 	%rd6158, %rd6157, %rd6048;
	xor.b64  	%rd6159, %rd6096, %rd6072;
	and.b64  	%rd6160, %rd6133, %rd6159;
	xor.b64  	%rd6161, %rd6160, %rd6072;
	add.s64 	%rd6162, %rd6158, %rd6161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4230,%dummy}, %rd6133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4231}, %rd6133;
	}
	shf.r.wrap.b32 	%r4232, %r4231, %r4230, 14;
	shf.r.wrap.b32 	%r4233, %r4230, %r4231, 14;
	mov.b64 	%rd6163, {%r4233, %r4232};
	shf.r.wrap.b32 	%r4234, %r4231, %r4230, 18;
	shf.r.wrap.b32 	%r4235, %r4230, %r4231, 18;
	mov.b64 	%rd6164, {%r4235, %r4234};
	xor.b64  	%rd6165, %rd6163, %rd6164;
	shf.l.wrap.b32 	%r4236, %r4230, %r4231, 23;
	shf.l.wrap.b32 	%r4237, %r4231, %r4230, 23;
	mov.b64 	%rd6166, {%r4237, %r4236};
	xor.b64  	%rd6167, %rd6165, %rd6166;
	add.s64 	%rd6168, %rd6162, %rd6167;
	add.s64 	%rd6169, %rd6168, -1171420211273849373;
	add.s64 	%rd6170, %rd6169, %rd6059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4238,%dummy}, %rd6144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4239}, %rd6144;
	}
	shf.r.wrap.b32 	%r4240, %r4239, %r4238, 28;
	shf.r.wrap.b32 	%r4241, %r4238, %r4239, 28;
	mov.b64 	%rd6171, {%r4241, %r4240};
	shf.l.wrap.b32 	%r4242, %r4238, %r4239, 30;
	shf.l.wrap.b32 	%r4243, %r4239, %r4238, 30;
	mov.b64 	%rd6172, {%r4243, %r4242};
	xor.b64  	%rd6173, %rd6171, %rd6172;
	shf.l.wrap.b32 	%r4244, %r4238, %r4239, 25;
	shf.l.wrap.b32 	%r4245, %r4239, %r4238, 25;
	mov.b64 	%rd6174, {%r4245, %r4244};
	xor.b64  	%rd6175, %rd6173, %rd6174;
	and.b64  	%rd6176, %rd6144, %rd6107;
	or.b64  	%rd6177, %rd6144, %rd6107;
	and.b64  	%rd6178, %rd6177, %rd6083;
	or.b64  	%rd6179, %rd6178, %rd6176;
	add.s64 	%rd6180, %rd6179, %rd6175;
	add.s64 	%rd6181, %rd6180, %rd6169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4246,%dummy}, %rd6120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4247}, %rd6120;
	}
	shf.r.wrap.b32 	%r4248, %r4247, %r4246, 19;
	shf.r.wrap.b32 	%r4249, %r4246, %r4247, 19;
	mov.b64 	%rd6182, {%r4249, %r4248};
	shf.l.wrap.b32 	%r4250, %r4246, %r4247, 3;
	shf.l.wrap.b32 	%r4251, %r4247, %r4246, 3;
	mov.b64 	%rd6183, {%r4251, %r4250};
	xor.b64  	%rd6184, %rd6182, %rd6183;
	shr.u64 	%rd6185, %rd6120, 6;
	xor.b64  	%rd6186, %rd6184, %rd6185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4252,%dummy}, %rd10000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4253}, %rd10000;
	}
	shf.r.wrap.b32 	%r4254, %r4253, %r4252, 8;
	shf.r.wrap.b32 	%r4255, %r4252, %r4253, 8;
	mov.b64 	%rd6187, {%r4255, %r4254};
	shf.r.wrap.b32 	%r4256, %r4253, %r4252, 1;
	shf.r.wrap.b32 	%r4257, %r4252, %r4253, 1;
	mov.b64 	%rd6188, {%r4257, %r4256};
	xor.b64  	%rd6189, %rd6188, %rd6187;
	shr.u64 	%rd6190, %rd10000, 7;
	xor.b64  	%rd6191, %rd6189, %rd6190;
	add.s64 	%rd6192, %rd6186, %rd10001;
	add.s64 	%rd6193, %rd6192, %rd9992;
	add.s64 	%rd6194, %rd6193, %rd6191;
	add.s64 	%rd6195, %rd6194, %rd6072;
	xor.b64  	%rd6196, %rd6133, %rd6096;
	and.b64  	%rd6197, %rd6170, %rd6196;
	xor.b64  	%rd6198, %rd6197, %rd6096;
	add.s64 	%rd6199, %rd6195, %rd6198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4258,%dummy}, %rd6170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4259}, %rd6170;
	}
	shf.r.wrap.b32 	%r4260, %r4259, %r4258, 14;
	shf.r.wrap.b32 	%r4261, %r4258, %r4259, 14;
	mov.b64 	%rd6200, {%r4261, %r4260};
	shf.r.wrap.b32 	%r4262, %r4259, %r4258, 18;
	shf.r.wrap.b32 	%r4263, %r4258, %r4259, 18;
	mov.b64 	%rd6201, {%r4263, %r4262};
	xor.b64  	%rd6202, %rd6200, %rd6201;
	shf.l.wrap.b32 	%r4264, %r4258, %r4259, 23;
	shf.l.wrap.b32 	%r4265, %r4259, %r4258, 23;
	mov.b64 	%rd6203, {%r4265, %r4264};
	xor.b64  	%rd6204, %rd6202, %rd6203;
	add.s64 	%rd6205, %rd6199, %rd6204;
	add.s64 	%rd6206, %rd6205, 1135362057144423861;
	add.s64 	%rd6207, %rd6206, %rd6083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd6181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4267}, %rd6181;
	}
	shf.r.wrap.b32 	%r4268, %r4267, %r4266, 28;
	shf.r.wrap.b32 	%r4269, %r4266, %r4267, 28;
	mov.b64 	%rd6208, {%r4269, %r4268};
	shf.l.wrap.b32 	%r4270, %r4266, %r4267, 30;
	shf.l.wrap.b32 	%r4271, %r4267, %r4266, 30;
	mov.b64 	%rd6209, {%r4271, %r4270};
	xor.b64  	%rd6210, %rd6208, %rd6209;
	shf.l.wrap.b32 	%r4272, %r4266, %r4267, 25;
	shf.l.wrap.b32 	%r4273, %r4267, %r4266, 25;
	mov.b64 	%rd6211, {%r4273, %r4272};
	xor.b64  	%rd6212, %rd6210, %rd6211;
	and.b64  	%rd6213, %rd6181, %rd6144;
	or.b64  	%rd6214, %rd6181, %rd6144;
	and.b64  	%rd6215, %rd6214, %rd6107;
	or.b64  	%rd6216, %rd6215, %rd6213;
	add.s64 	%rd6217, %rd6216, %rd6212;
	add.s64 	%rd6218, %rd6217, %rd6206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4274,%dummy}, %rd6157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4275}, %rd6157;
	}
	shf.r.wrap.b32 	%r4276, %r4275, %r4274, 19;
	shf.r.wrap.b32 	%r4277, %r4274, %r4275, 19;
	mov.b64 	%rd6219, {%r4277, %r4276};
	shf.l.wrap.b32 	%r4278, %r4274, %r4275, 3;
	shf.l.wrap.b32 	%r4279, %r4275, %r4274, 3;
	mov.b64 	%rd6220, {%r4279, %r4278};
	xor.b64  	%rd6221, %rd6219, %rd6220;
	shr.u64 	%rd6222, %rd6157, 6;
	xor.b64  	%rd6223, %rd6221, %rd6222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4280,%dummy}, %rd9999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4281}, %rd9999;
	}
	shf.r.wrap.b32 	%r4282, %r4281, %r4280, 8;
	shf.r.wrap.b32 	%r4283, %r4280, %r4281, 8;
	mov.b64 	%rd6224, {%r4283, %r4282};
	shf.r.wrap.b32 	%r4284, %r4281, %r4280, 1;
	shf.r.wrap.b32 	%r4285, %r4280, %r4281, 1;
	mov.b64 	%rd6225, {%r4285, %r4284};
	xor.b64  	%rd6226, %rd6225, %rd6224;
	shr.u64 	%rd6227, %rd9999, 7;
	xor.b64  	%rd6228, %rd6226, %rd6227;
	add.s64 	%rd6229, %rd6223, %rd10000;
	add.s64 	%rd6230, %rd6229, %rd9991;
	add.s64 	%rd6231, %rd6230, %rd6228;
	add.s64 	%rd6232, %rd6231, %rd6096;
	xor.b64  	%rd6233, %rd6170, %rd6133;
	and.b64  	%rd6234, %rd6207, %rd6233;
	xor.b64  	%rd6235, %rd6234, %rd6133;
	add.s64 	%rd6236, %rd6232, %rd6235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4286,%dummy}, %rd6207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4287}, %rd6207;
	}
	shf.r.wrap.b32 	%r4288, %r4287, %r4286, 14;
	shf.r.wrap.b32 	%r4289, %r4286, %r4287, 14;
	mov.b64 	%rd6237, {%r4289, %r4288};
	shf.r.wrap.b32 	%r4290, %r4287, %r4286, 18;
	shf.r.wrap.b32 	%r4291, %r4286, %r4287, 18;
	mov.b64 	%rd6238, {%r4291, %r4290};
	xor.b64  	%rd6239, %rd6237, %rd6238;
	shf.l.wrap.b32 	%r4292, %r4286, %r4287, 23;
	shf.l.wrap.b32 	%r4293, %r4287, %r4286, 23;
	mov.b64 	%rd6240, {%r4293, %r4292};
	xor.b64  	%rd6241, %rd6239, %rd6240;
	add.s64 	%rd6242, %rd6236, %rd6241;
	add.s64 	%rd6243, %rd6242, 2597628984639134821;
	add.s64 	%rd6244, %rd6243, %rd6107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4294,%dummy}, %rd6218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4295}, %rd6218;
	}
	shf.r.wrap.b32 	%r4296, %r4295, %r4294, 28;
	shf.r.wrap.b32 	%r4297, %r4294, %r4295, 28;
	mov.b64 	%rd6245, {%r4297, %r4296};
	shf.l.wrap.b32 	%r4298, %r4294, %r4295, 30;
	shf.l.wrap.b32 	%r4299, %r4295, %r4294, 30;
	mov.b64 	%rd6246, {%r4299, %r4298};
	xor.b64  	%rd6247, %rd6245, %rd6246;
	shf.l.wrap.b32 	%r4300, %r4294, %r4295, 25;
	shf.l.wrap.b32 	%r4301, %r4295, %r4294, 25;
	mov.b64 	%rd6248, {%r4301, %r4300};
	xor.b64  	%rd6249, %rd6247, %rd6248;
	and.b64  	%rd6250, %rd6218, %rd6181;
	or.b64  	%rd6251, %rd6218, %rd6181;
	and.b64  	%rd6252, %rd6251, %rd6144;
	or.b64  	%rd6253, %rd6252, %rd6250;
	add.s64 	%rd6254, %rd6253, %rd6249;
	add.s64 	%rd6255, %rd6254, %rd6243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4302,%dummy}, %rd6194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4303}, %rd6194;
	}
	shf.r.wrap.b32 	%r4304, %r4303, %r4302, 19;
	shf.r.wrap.b32 	%r4305, %r4302, %r4303, 19;
	mov.b64 	%rd6256, {%r4305, %r4304};
	shf.l.wrap.b32 	%r4306, %r4302, %r4303, 3;
	shf.l.wrap.b32 	%r4307, %r4303, %r4302, 3;
	mov.b64 	%rd6257, {%r4307, %r4306};
	xor.b64  	%rd6258, %rd6256, %rd6257;
	shr.u64 	%rd6259, %rd6194, 6;
	xor.b64  	%rd6260, %rd6258, %rd6259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4308,%dummy}, %rd9998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4309}, %rd9998;
	}
	shf.r.wrap.b32 	%r4310, %r4309, %r4308, 8;
	shf.r.wrap.b32 	%r4311, %r4308, %r4309, 8;
	mov.b64 	%rd6261, {%r4311, %r4310};
	shf.r.wrap.b32 	%r4312, %r4309, %r4308, 1;
	shf.r.wrap.b32 	%r4313, %r4308, %r4309, 1;
	mov.b64 	%rd6262, {%r4313, %r4312};
	xor.b64  	%rd6263, %rd6262, %rd6261;
	shr.u64 	%rd6264, %rd9998, 7;
	xor.b64  	%rd6265, %rd6263, %rd6264;
	add.s64 	%rd6266, %rd6260, %rd9999;
	add.s64 	%rd6267, %rd6266, %rd9990;
	add.s64 	%rd6268, %rd6267, %rd6265;
	add.s64 	%rd6269, %rd6268, %rd6133;
	xor.b64  	%rd6270, %rd6207, %rd6170;
	and.b64  	%rd6271, %rd6244, %rd6270;
	xor.b64  	%rd6272, %rd6271, %rd6170;
	add.s64 	%rd6273, %rd6269, %rd6272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4314,%dummy}, %rd6244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4315}, %rd6244;
	}
	shf.r.wrap.b32 	%r4316, %r4315, %r4314, 14;
	shf.r.wrap.b32 	%r4317, %r4314, %r4315, 14;
	mov.b64 	%rd6274, {%r4317, %r4316};
	shf.r.wrap.b32 	%r4318, %r4315, %r4314, 18;
	shf.r.wrap.b32 	%r4319, %r4314, %r4315, 18;
	mov.b64 	%rd6275, {%r4319, %r4318};
	xor.b64  	%rd6276, %rd6274, %rd6275;
	shf.l.wrap.b32 	%r4320, %r4314, %r4315, 23;
	shf.l.wrap.b32 	%r4321, %r4315, %r4314, 23;
	mov.b64 	%rd6277, {%r4321, %r4320};
	xor.b64  	%rd6278, %rd6276, %rd6277;
	add.s64 	%rd6279, %rd6273, %rd6278;
	add.s64 	%rd6280, %rd6279, 3308224258029322869;
	add.s64 	%rd6281, %rd6280, %rd6144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4322,%dummy}, %rd6255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4323}, %rd6255;
	}
	shf.r.wrap.b32 	%r4324, %r4323, %r4322, 28;
	shf.r.wrap.b32 	%r4325, %r4322, %r4323, 28;
	mov.b64 	%rd6282, {%r4325, %r4324};
	shf.l.wrap.b32 	%r4326, %r4322, %r4323, 30;
	shf.l.wrap.b32 	%r4327, %r4323, %r4322, 30;
	mov.b64 	%rd6283, {%r4327, %r4326};
	xor.b64  	%rd6284, %rd6282, %rd6283;
	shf.l.wrap.b32 	%r4328, %r4322, %r4323, 25;
	shf.l.wrap.b32 	%r4329, %r4323, %r4322, 25;
	mov.b64 	%rd6285, {%r4329, %r4328};
	xor.b64  	%rd6286, %rd6284, %rd6285;
	and.b64  	%rd6287, %rd6255, %rd6218;
	or.b64  	%rd6288, %rd6255, %rd6218;
	and.b64  	%rd6289, %rd6288, %rd6181;
	or.b64  	%rd6290, %rd6289, %rd6287;
	add.s64 	%rd6291, %rd6290, %rd6286;
	add.s64 	%rd6292, %rd6291, %rd6280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4330,%dummy}, %rd6231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4331}, %rd6231;
	}
	shf.r.wrap.b32 	%r4332, %r4331, %r4330, 19;
	shf.r.wrap.b32 	%r4333, %r4330, %r4331, 19;
	mov.b64 	%rd6293, {%r4333, %r4332};
	shf.l.wrap.b32 	%r4334, %r4330, %r4331, 3;
	shf.l.wrap.b32 	%r4335, %r4331, %r4330, 3;
	mov.b64 	%rd6294, {%r4335, %r4334};
	xor.b64  	%rd6295, %rd6293, %rd6294;
	shr.u64 	%rd6296, %rd6231, 6;
	xor.b64  	%rd6297, %rd6295, %rd6296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4336,%dummy}, %rd9997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4337}, %rd9997;
	}
	shf.r.wrap.b32 	%r4338, %r4337, %r4336, 8;
	shf.r.wrap.b32 	%r4339, %r4336, %r4337, 8;
	mov.b64 	%rd6298, {%r4339, %r4338};
	shf.r.wrap.b32 	%r4340, %r4337, %r4336, 1;
	shf.r.wrap.b32 	%r4341, %r4336, %r4337, 1;
	mov.b64 	%rd6299, {%r4341, %r4340};
	xor.b64  	%rd6300, %rd6299, %rd6298;
	shr.u64 	%rd6301, %rd9997, 7;
	xor.b64  	%rd6302, %rd6300, %rd6301;
	add.s64 	%rd6303, %rd6297, %rd9998;
	add.s64 	%rd6304, %rd6303, %rd9989;
	add.s64 	%rd6305, %rd6304, %rd6302;
	add.s64 	%rd6306, %rd6305, %rd6170;
	xor.b64  	%rd6307, %rd6244, %rd6207;
	and.b64  	%rd6308, %rd6281, %rd6307;
	xor.b64  	%rd6309, %rd6308, %rd6207;
	add.s64 	%rd6310, %rd6306, %rd6309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4342,%dummy}, %rd6281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4343}, %rd6281;
	}
	shf.r.wrap.b32 	%r4344, %r4343, %r4342, 14;
	shf.r.wrap.b32 	%r4345, %r4342, %r4343, 14;
	mov.b64 	%rd6311, {%r4345, %r4344};
	shf.r.wrap.b32 	%r4346, %r4343, %r4342, 18;
	shf.r.wrap.b32 	%r4347, %r4342, %r4343, 18;
	mov.b64 	%rd6312, {%r4347, %r4346};
	xor.b64  	%rd6313, %rd6311, %rd6312;
	shf.l.wrap.b32 	%r4348, %r4342, %r4343, 23;
	shf.l.wrap.b32 	%r4349, %r4343, %r4342, 23;
	mov.b64 	%rd6314, {%r4349, %r4348};
	xor.b64  	%rd6315, %rd6313, %rd6314;
	add.s64 	%rd6316, %rd6310, %rd6315;
	add.s64 	%rd6317, %rd6316, 5365058923640841347;
	add.s64 	%rd6318, %rd6317, %rd6181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4350,%dummy}, %rd6292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4351}, %rd6292;
	}
	shf.r.wrap.b32 	%r4352, %r4351, %r4350, 28;
	shf.r.wrap.b32 	%r4353, %r4350, %r4351, 28;
	mov.b64 	%rd6319, {%r4353, %r4352};
	shf.l.wrap.b32 	%r4354, %r4350, %r4351, 30;
	shf.l.wrap.b32 	%r4355, %r4351, %r4350, 30;
	mov.b64 	%rd6320, {%r4355, %r4354};
	xor.b64  	%rd6321, %rd6319, %rd6320;
	shf.l.wrap.b32 	%r4356, %r4350, %r4351, 25;
	shf.l.wrap.b32 	%r4357, %r4351, %r4350, 25;
	mov.b64 	%rd6322, {%r4357, %r4356};
	xor.b64  	%rd6323, %rd6321, %rd6322;
	and.b64  	%rd6324, %rd6292, %rd6255;
	or.b64  	%rd6325, %rd6292, %rd6255;
	and.b64  	%rd6326, %rd6325, %rd6218;
	or.b64  	%rd6327, %rd6326, %rd6324;
	add.s64 	%rd6328, %rd6327, %rd6323;
	add.s64 	%rd6329, %rd6328, %rd6317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4358,%dummy}, %rd6268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4359}, %rd6268;
	}
	shf.r.wrap.b32 	%r4360, %r4359, %r4358, 19;
	shf.r.wrap.b32 	%r4361, %r4358, %r4359, 19;
	mov.b64 	%rd6330, {%r4361, %r4360};
	shf.l.wrap.b32 	%r4362, %r4358, %r4359, 3;
	shf.l.wrap.b32 	%r4363, %r4359, %r4358, 3;
	mov.b64 	%rd6331, {%r4363, %r4362};
	xor.b64  	%rd6332, %rd6330, %rd6331;
	shr.u64 	%rd6333, %rd6268, 6;
	xor.b64  	%rd6334, %rd6332, %rd6333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4364,%dummy}, %rd9996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4365}, %rd9996;
	}
	shf.r.wrap.b32 	%r4366, %r4365, %r4364, 8;
	shf.r.wrap.b32 	%r4367, %r4364, %r4365, 8;
	mov.b64 	%rd6335, {%r4367, %r4366};
	shf.r.wrap.b32 	%r4368, %r4365, %r4364, 1;
	shf.r.wrap.b32 	%r4369, %r4364, %r4365, 1;
	mov.b64 	%rd6336, {%r4369, %r4368};
	xor.b64  	%rd6337, %rd6336, %rd6335;
	shr.u64 	%rd6338, %rd9996, 7;
	xor.b64  	%rd6339, %rd6337, %rd6338;
	add.s64 	%rd6340, %rd6334, %rd9997;
	add.s64 	%rd6341, %rd6340, %rd5723;
	add.s64 	%rd6342, %rd6341, %rd6339;
	add.s64 	%rd6343, %rd6342, %rd6207;
	xor.b64  	%rd6344, %rd6281, %rd6244;
	and.b64  	%rd6345, %rd6318, %rd6344;
	xor.b64  	%rd6346, %rd6345, %rd6244;
	add.s64 	%rd6347, %rd6343, %rd6346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4370,%dummy}, %rd6318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4371}, %rd6318;
	}
	shf.r.wrap.b32 	%r4372, %r4371, %r4370, 14;
	shf.r.wrap.b32 	%r4373, %r4370, %r4371, 14;
	mov.b64 	%rd6348, {%r4373, %r4372};
	shf.r.wrap.b32 	%r4374, %r4371, %r4370, 18;
	shf.r.wrap.b32 	%r4375, %r4370, %r4371, 18;
	mov.b64 	%rd6349, {%r4375, %r4374};
	xor.b64  	%rd6350, %rd6348, %rd6349;
	shf.l.wrap.b32 	%r4376, %r4370, %r4371, 23;
	shf.l.wrap.b32 	%r4377, %r4371, %r4370, 23;
	mov.b64 	%rd6351, {%r4377, %r4376};
	xor.b64  	%rd6352, %rd6350, %rd6351;
	add.s64 	%rd6353, %rd6347, %rd6352;
	add.s64 	%rd6354, %rd6353, 6679025012923562964;
	add.s64 	%rd6355, %rd6354, %rd6218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4378,%dummy}, %rd6329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4379}, %rd6329;
	}
	shf.r.wrap.b32 	%r4380, %r4379, %r4378, 28;
	shf.r.wrap.b32 	%r4381, %r4378, %r4379, 28;
	mov.b64 	%rd6356, {%r4381, %r4380};
	shf.l.wrap.b32 	%r4382, %r4378, %r4379, 30;
	shf.l.wrap.b32 	%r4383, %r4379, %r4378, 30;
	mov.b64 	%rd6357, {%r4383, %r4382};
	xor.b64  	%rd6358, %rd6356, %rd6357;
	shf.l.wrap.b32 	%r4384, %r4378, %r4379, 25;
	shf.l.wrap.b32 	%r4385, %r4379, %r4378, 25;
	mov.b64 	%rd6359, {%r4385, %r4384};
	xor.b64  	%rd6360, %rd6358, %rd6359;
	and.b64  	%rd6361, %rd6329, %rd6292;
	or.b64  	%rd6362, %rd6329, %rd6292;
	and.b64  	%rd6363, %rd6362, %rd6255;
	or.b64  	%rd6364, %rd6363, %rd6361;
	add.s64 	%rd6365, %rd6364, %rd6360;
	add.s64 	%rd6366, %rd6365, %rd6354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4386,%dummy}, %rd6305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4387}, %rd6305;
	}
	shf.r.wrap.b32 	%r4388, %r4387, %r4386, 19;
	shf.r.wrap.b32 	%r4389, %r4386, %r4387, 19;
	mov.b64 	%rd6367, {%r4389, %r4388};
	shf.l.wrap.b32 	%r4390, %r4386, %r4387, 3;
	shf.l.wrap.b32 	%r4391, %r4387, %r4386, 3;
	mov.b64 	%rd6368, {%r4391, %r4390};
	xor.b64  	%rd6369, %rd6367, %rd6368;
	shr.u64 	%rd6370, %rd6305, 6;
	xor.b64  	%rd6371, %rd6369, %rd6370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4392,%dummy}, %rd9995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4393}, %rd9995;
	}
	shf.r.wrap.b32 	%r4394, %r4393, %r4392, 8;
	shf.r.wrap.b32 	%r4395, %r4392, %r4393, 8;
	mov.b64 	%rd6372, {%r4395, %r4394};
	shf.r.wrap.b32 	%r4396, %r4393, %r4392, 1;
	shf.r.wrap.b32 	%r4397, %r4392, %r4393, 1;
	mov.b64 	%rd6373, {%r4397, %r4396};
	xor.b64  	%rd6374, %rd6373, %rd6372;
	shr.u64 	%rd6375, %rd9995, 7;
	xor.b64  	%rd6376, %rd6374, %rd6375;
	add.s64 	%rd6377, %rd6371, %rd9996;
	add.s64 	%rd6378, %rd6377, %rd6120;
	add.s64 	%rd6379, %rd6378, %rd6376;
	add.s64 	%rd6380, %rd6379, %rd6244;
	xor.b64  	%rd6381, %rd6318, %rd6281;
	and.b64  	%rd6382, %rd6355, %rd6381;
	xor.b64  	%rd6383, %rd6382, %rd6281;
	add.s64 	%rd6384, %rd6380, %rd6383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4398,%dummy}, %rd6355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4399}, %rd6355;
	}
	shf.r.wrap.b32 	%r4400, %r4399, %r4398, 14;
	shf.r.wrap.b32 	%r4401, %r4398, %r4399, 14;
	mov.b64 	%rd6385, {%r4401, %r4400};
	shf.r.wrap.b32 	%r4402, %r4399, %r4398, 18;
	shf.r.wrap.b32 	%r4403, %r4398, %r4399, 18;
	mov.b64 	%rd6386, {%r4403, %r4402};
	xor.b64  	%rd6387, %rd6385, %rd6386;
	shf.l.wrap.b32 	%r4404, %r4398, %r4399, 23;
	shf.l.wrap.b32 	%r4405, %r4399, %r4398, 23;
	mov.b64 	%rd6388, {%r4405, %r4404};
	xor.b64  	%rd6389, %rd6387, %rd6388;
	add.s64 	%rd6390, %rd6384, %rd6389;
	add.s64 	%rd6391, %rd6390, 8573033837759648693;
	add.s64 	%rd6392, %rd6391, %rd6255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd6366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4407}, %rd6366;
	}
	shf.r.wrap.b32 	%r4408, %r4407, %r4406, 28;
	shf.r.wrap.b32 	%r4409, %r4406, %r4407, 28;
	mov.b64 	%rd6393, {%r4409, %r4408};
	shf.l.wrap.b32 	%r4410, %r4406, %r4407, 30;
	shf.l.wrap.b32 	%r4411, %r4407, %r4406, 30;
	mov.b64 	%rd6394, {%r4411, %r4410};
	xor.b64  	%rd6395, %rd6393, %rd6394;
	shf.l.wrap.b32 	%r4412, %r4406, %r4407, 25;
	shf.l.wrap.b32 	%r4413, %r4407, %r4406, 25;
	mov.b64 	%rd6396, {%r4413, %r4412};
	xor.b64  	%rd6397, %rd6395, %rd6396;
	and.b64  	%rd6398, %rd6366, %rd6329;
	or.b64  	%rd6399, %rd6366, %rd6329;
	and.b64  	%rd6400, %rd6399, %rd6292;
	or.b64  	%rd6401, %rd6400, %rd6398;
	add.s64 	%rd6402, %rd6401, %rd6397;
	add.s64 	%rd6403, %rd6402, %rd6391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd6342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4415}, %rd6342;
	}
	shf.r.wrap.b32 	%r4416, %r4415, %r4414, 19;
	shf.r.wrap.b32 	%r4417, %r4414, %r4415, 19;
	mov.b64 	%rd6404, {%r4417, %r4416};
	shf.l.wrap.b32 	%r4418, %r4414, %r4415, 3;
	shf.l.wrap.b32 	%r4419, %r4415, %r4414, 3;
	mov.b64 	%rd6405, {%r4419, %r4418};
	xor.b64  	%rd6406, %rd6404, %rd6405;
	shr.u64 	%rd6407, %rd6342, 6;
	xor.b64  	%rd6408, %rd6406, %rd6407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4420,%dummy}, %rd9994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4421}, %rd9994;
	}
	shf.r.wrap.b32 	%r4422, %r4421, %r4420, 8;
	shf.r.wrap.b32 	%r4423, %r4420, %r4421, 8;
	mov.b64 	%rd6409, {%r4423, %r4422};
	shf.r.wrap.b32 	%r4424, %r4421, %r4420, 1;
	shf.r.wrap.b32 	%r4425, %r4420, %r4421, 1;
	mov.b64 	%rd6410, {%r4425, %r4424};
	xor.b64  	%rd6411, %rd6410, %rd6409;
	shr.u64 	%rd6412, %rd9994, 7;
	xor.b64  	%rd6413, %rd6411, %rd6412;
	add.s64 	%rd6414, %rd6408, %rd9995;
	add.s64 	%rd6415, %rd6414, %rd6157;
	add.s64 	%rd6416, %rd6415, %rd6413;
	add.s64 	%rd6417, %rd6416, %rd6281;
	xor.b64  	%rd6418, %rd6355, %rd6318;
	and.b64  	%rd6419, %rd6392, %rd6418;
	xor.b64  	%rd6420, %rd6419, %rd6318;
	add.s64 	%rd6421, %rd6417, %rd6420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4426,%dummy}, %rd6392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4427}, %rd6392;
	}
	shf.r.wrap.b32 	%r4428, %r4427, %r4426, 14;
	shf.r.wrap.b32 	%r4429, %r4426, %r4427, 14;
	mov.b64 	%rd6422, {%r4429, %r4428};
	shf.r.wrap.b32 	%r4430, %r4427, %r4426, 18;
	shf.r.wrap.b32 	%r4431, %r4426, %r4427, 18;
	mov.b64 	%rd6423, {%r4431, %r4430};
	xor.b64  	%rd6424, %rd6422, %rd6423;
	shf.l.wrap.b32 	%r4432, %r4426, %r4427, 23;
	shf.l.wrap.b32 	%r4433, %r4427, %r4426, 23;
	mov.b64 	%rd6425, {%r4433, %r4432};
	xor.b64  	%rd6426, %rd6424, %rd6425;
	add.s64 	%rd6427, %rd6421, %rd6426;
	add.s64 	%rd6428, %rd6427, -7476448914759557205;
	add.s64 	%rd6429, %rd6428, %rd6292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4434,%dummy}, %rd6403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4435}, %rd6403;
	}
	shf.r.wrap.b32 	%r4436, %r4435, %r4434, 28;
	shf.r.wrap.b32 	%r4437, %r4434, %r4435, 28;
	mov.b64 	%rd6430, {%r4437, %r4436};
	shf.l.wrap.b32 	%r4438, %r4434, %r4435, 30;
	shf.l.wrap.b32 	%r4439, %r4435, %r4434, 30;
	mov.b64 	%rd6431, {%r4439, %r4438};
	xor.b64  	%rd6432, %rd6430, %rd6431;
	shf.l.wrap.b32 	%r4440, %r4434, %r4435, 25;
	shf.l.wrap.b32 	%r4441, %r4435, %r4434, 25;
	mov.b64 	%rd6433, {%r4441, %r4440};
	xor.b64  	%rd6434, %rd6432, %rd6433;
	and.b64  	%rd6435, %rd6403, %rd6366;
	or.b64  	%rd6436, %rd6403, %rd6366;
	and.b64  	%rd6437, %rd6436, %rd6329;
	or.b64  	%rd6438, %rd6437, %rd6435;
	add.s64 	%rd6439, %rd6438, %rd6434;
	add.s64 	%rd6440, %rd6439, %rd6428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4442,%dummy}, %rd6379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4443}, %rd6379;
	}
	shf.r.wrap.b32 	%r4444, %r4443, %r4442, 19;
	shf.r.wrap.b32 	%r4445, %r4442, %r4443, 19;
	mov.b64 	%rd6441, {%r4445, %r4444};
	shf.l.wrap.b32 	%r4446, %r4442, %r4443, 3;
	shf.l.wrap.b32 	%r4447, %r4443, %r4442, 3;
	mov.b64 	%rd6442, {%r4447, %r4446};
	xor.b64  	%rd6443, %rd6441, %rd6442;
	shr.u64 	%rd6444, %rd6379, 6;
	xor.b64  	%rd6445, %rd6443, %rd6444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4448,%dummy}, %rd9993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4449}, %rd9993;
	}
	shf.r.wrap.b32 	%r4450, %r4449, %r4448, 8;
	shf.r.wrap.b32 	%r4451, %r4448, %r4449, 8;
	mov.b64 	%rd6446, {%r4451, %r4450};
	shf.r.wrap.b32 	%r4452, %r4449, %r4448, 1;
	shf.r.wrap.b32 	%r4453, %r4448, %r4449, 1;
	mov.b64 	%rd6447, {%r4453, %r4452};
	xor.b64  	%rd6448, %rd6447, %rd6446;
	shr.u64 	%rd6449, %rd9993, 7;
	xor.b64  	%rd6450, %rd6448, %rd6449;
	add.s64 	%rd6451, %rd6445, %rd9994;
	add.s64 	%rd6452, %rd6451, %rd6194;
	add.s64 	%rd6453, %rd6452, %rd6450;
	add.s64 	%rd6454, %rd6453, %rd6318;
	xor.b64  	%rd6455, %rd6392, %rd6355;
	and.b64  	%rd6456, %rd6429, %rd6455;
	xor.b64  	%rd6457, %rd6456, %rd6355;
	add.s64 	%rd6458, %rd6454, %rd6457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4454,%dummy}, %rd6429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4455}, %rd6429;
	}
	shf.r.wrap.b32 	%r4456, %r4455, %r4454, 14;
	shf.r.wrap.b32 	%r4457, %r4454, %r4455, 14;
	mov.b64 	%rd6459, {%r4457, %r4456};
	shf.r.wrap.b32 	%r4458, %r4455, %r4454, 18;
	shf.r.wrap.b32 	%r4459, %r4454, %r4455, 18;
	mov.b64 	%rd6460, {%r4459, %r4458};
	xor.b64  	%rd6461, %rd6459, %rd6460;
	shf.l.wrap.b32 	%r4460, %r4454, %r4455, 23;
	shf.l.wrap.b32 	%r4461, %r4455, %r4454, 23;
	mov.b64 	%rd6462, {%r4461, %r4460};
	xor.b64  	%rd6463, %rd6461, %rd6462;
	add.s64 	%rd6464, %rd6458, %rd6463;
	add.s64 	%rd6465, %rd6464, -6327057829258317296;
	add.s64 	%rd6466, %rd6465, %rd6329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4462,%dummy}, %rd6440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4463}, %rd6440;
	}
	shf.r.wrap.b32 	%r4464, %r4463, %r4462, 28;
	shf.r.wrap.b32 	%r4465, %r4462, %r4463, 28;
	mov.b64 	%rd6467, {%r4465, %r4464};
	shf.l.wrap.b32 	%r4466, %r4462, %r4463, 30;
	shf.l.wrap.b32 	%r4467, %r4463, %r4462, 30;
	mov.b64 	%rd6468, {%r4467, %r4466};
	xor.b64  	%rd6469, %rd6467, %rd6468;
	shf.l.wrap.b32 	%r4468, %r4462, %r4463, 25;
	shf.l.wrap.b32 	%r4469, %r4463, %r4462, 25;
	mov.b64 	%rd6470, {%r4469, %r4468};
	xor.b64  	%rd6471, %rd6469, %rd6470;
	and.b64  	%rd6472, %rd6440, %rd6403;
	or.b64  	%rd6473, %rd6440, %rd6403;
	and.b64  	%rd6474, %rd6473, %rd6366;
	or.b64  	%rd6475, %rd6474, %rd6472;
	add.s64 	%rd6476, %rd6475, %rd6471;
	add.s64 	%rd6477, %rd6476, %rd6465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4470,%dummy}, %rd6416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4471}, %rd6416;
	}
	shf.r.wrap.b32 	%r4472, %r4471, %r4470, 19;
	shf.r.wrap.b32 	%r4473, %r4470, %r4471, 19;
	mov.b64 	%rd6478, {%r4473, %r4472};
	shf.l.wrap.b32 	%r4474, %r4470, %r4471, 3;
	shf.l.wrap.b32 	%r4475, %r4471, %r4470, 3;
	mov.b64 	%rd6479, {%r4475, %r4474};
	xor.b64  	%rd6480, %rd6478, %rd6479;
	shr.u64 	%rd6481, %rd6416, 6;
	xor.b64  	%rd6482, %rd6480, %rd6481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4476,%dummy}, %rd9992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4477}, %rd9992;
	}
	shf.r.wrap.b32 	%r4478, %r4477, %r4476, 8;
	shf.r.wrap.b32 	%r4479, %r4476, %r4477, 8;
	mov.b64 	%rd6483, {%r4479, %r4478};
	shf.r.wrap.b32 	%r4480, %r4477, %r4476, 1;
	shf.r.wrap.b32 	%r4481, %r4476, %r4477, 1;
	mov.b64 	%rd6484, {%r4481, %r4480};
	xor.b64  	%rd6485, %rd6484, %rd6483;
	shr.u64 	%rd6486, %rd9992, 7;
	xor.b64  	%rd6487, %rd6485, %rd6486;
	add.s64 	%rd6488, %rd6482, %rd9993;
	add.s64 	%rd6489, %rd6488, %rd6231;
	add.s64 	%rd6490, %rd6489, %rd6487;
	add.s64 	%rd6491, %rd6490, %rd6355;
	xor.b64  	%rd6492, %rd6429, %rd6392;
	and.b64  	%rd6493, %rd6466, %rd6492;
	xor.b64  	%rd6494, %rd6493, %rd6392;
	add.s64 	%rd6495, %rd6491, %rd6494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4482,%dummy}, %rd6466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4483}, %rd6466;
	}
	shf.r.wrap.b32 	%r4484, %r4483, %r4482, 14;
	shf.r.wrap.b32 	%r4485, %r4482, %r4483, 14;
	mov.b64 	%rd6496, {%r4485, %r4484};
	shf.r.wrap.b32 	%r4486, %r4483, %r4482, 18;
	shf.r.wrap.b32 	%r4487, %r4482, %r4483, 18;
	mov.b64 	%rd6497, {%r4487, %r4486};
	xor.b64  	%rd6498, %rd6496, %rd6497;
	shf.l.wrap.b32 	%r4488, %r4482, %r4483, 23;
	shf.l.wrap.b32 	%r4489, %r4483, %r4482, 23;
	mov.b64 	%rd6499, {%r4489, %r4488};
	xor.b64  	%rd6500, %rd6498, %rd6499;
	add.s64 	%rd6501, %rd6495, %rd6500;
	add.s64 	%rd6502, %rd6501, -5763719355590565569;
	add.s64 	%rd6503, %rd6502, %rd6366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4490,%dummy}, %rd6477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4491}, %rd6477;
	}
	shf.r.wrap.b32 	%r4492, %r4491, %r4490, 28;
	shf.r.wrap.b32 	%r4493, %r4490, %r4491, 28;
	mov.b64 	%rd6504, {%r4493, %r4492};
	shf.l.wrap.b32 	%r4494, %r4490, %r4491, 30;
	shf.l.wrap.b32 	%r4495, %r4491, %r4490, 30;
	mov.b64 	%rd6505, {%r4495, %r4494};
	xor.b64  	%rd6506, %rd6504, %rd6505;
	shf.l.wrap.b32 	%r4496, %r4490, %r4491, 25;
	shf.l.wrap.b32 	%r4497, %r4491, %r4490, 25;
	mov.b64 	%rd6507, {%r4497, %r4496};
	xor.b64  	%rd6508, %rd6506, %rd6507;
	and.b64  	%rd6509, %rd6477, %rd6440;
	or.b64  	%rd6510, %rd6477, %rd6440;
	and.b64  	%rd6511, %rd6510, %rd6403;
	or.b64  	%rd6512, %rd6511, %rd6509;
	add.s64 	%rd6513, %rd6512, %rd6508;
	add.s64 	%rd6514, %rd6513, %rd6502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4498,%dummy}, %rd6453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4499}, %rd6453;
	}
	shf.r.wrap.b32 	%r4500, %r4499, %r4498, 19;
	shf.r.wrap.b32 	%r4501, %r4498, %r4499, 19;
	mov.b64 	%rd6515, {%r4501, %r4500};
	shf.l.wrap.b32 	%r4502, %r4498, %r4499, 3;
	shf.l.wrap.b32 	%r4503, %r4499, %r4498, 3;
	mov.b64 	%rd6516, {%r4503, %r4502};
	xor.b64  	%rd6517, %rd6515, %rd6516;
	shr.u64 	%rd6518, %rd6453, 6;
	xor.b64  	%rd6519, %rd6517, %rd6518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4504,%dummy}, %rd9991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4505}, %rd9991;
	}
	shf.r.wrap.b32 	%r4506, %r4505, %r4504, 8;
	shf.r.wrap.b32 	%r4507, %r4504, %r4505, 8;
	mov.b64 	%rd6520, {%r4507, %r4506};
	shf.r.wrap.b32 	%r4508, %r4505, %r4504, 1;
	shf.r.wrap.b32 	%r4509, %r4504, %r4505, 1;
	mov.b64 	%rd6521, {%r4509, %r4508};
	xor.b64  	%rd6522, %rd6521, %rd6520;
	shr.u64 	%rd6523, %rd9991, 7;
	xor.b64  	%rd6524, %rd6522, %rd6523;
	add.s64 	%rd6525, %rd6519, %rd9992;
	add.s64 	%rd6526, %rd6525, %rd6268;
	add.s64 	%rd6527, %rd6526, %rd6524;
	add.s64 	%rd6528, %rd6527, %rd6392;
	xor.b64  	%rd6529, %rd6466, %rd6429;
	and.b64  	%rd6530, %rd6503, %rd6529;
	xor.b64  	%rd6531, %rd6530, %rd6429;
	add.s64 	%rd6532, %rd6528, %rd6531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4510,%dummy}, %rd6503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4511}, %rd6503;
	}
	shf.r.wrap.b32 	%r4512, %r4511, %r4510, 14;
	shf.r.wrap.b32 	%r4513, %r4510, %r4511, 14;
	mov.b64 	%rd6533, {%r4513, %r4512};
	shf.r.wrap.b32 	%r4514, %r4511, %r4510, 18;
	shf.r.wrap.b32 	%r4515, %r4510, %r4511, 18;
	mov.b64 	%rd6534, {%r4515, %r4514};
	xor.b64  	%rd6535, %rd6533, %rd6534;
	shf.l.wrap.b32 	%r4516, %r4510, %r4511, 23;
	shf.l.wrap.b32 	%r4517, %r4511, %r4510, 23;
	mov.b64 	%rd6536, {%r4517, %r4516};
	xor.b64  	%rd6537, %rd6535, %rd6536;
	add.s64 	%rd6538, %rd6532, %rd6537;
	add.s64 	%rd6539, %rd6538, -4658551843659510044;
	add.s64 	%rd6540, %rd6539, %rd6403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4518,%dummy}, %rd6514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4519}, %rd6514;
	}
	shf.r.wrap.b32 	%r4520, %r4519, %r4518, 28;
	shf.r.wrap.b32 	%r4521, %r4518, %r4519, 28;
	mov.b64 	%rd6541, {%r4521, %r4520};
	shf.l.wrap.b32 	%r4522, %r4518, %r4519, 30;
	shf.l.wrap.b32 	%r4523, %r4519, %r4518, 30;
	mov.b64 	%rd6542, {%r4523, %r4522};
	xor.b64  	%rd6543, %rd6541, %rd6542;
	shf.l.wrap.b32 	%r4524, %r4518, %r4519, 25;
	shf.l.wrap.b32 	%r4525, %r4519, %r4518, 25;
	mov.b64 	%rd6544, {%r4525, %r4524};
	xor.b64  	%rd6545, %rd6543, %rd6544;
	and.b64  	%rd6546, %rd6514, %rd6477;
	or.b64  	%rd6547, %rd6514, %rd6477;
	and.b64  	%rd6548, %rd6547, %rd6440;
	or.b64  	%rd6549, %rd6548, %rd6546;
	add.s64 	%rd6550, %rd6549, %rd6545;
	add.s64 	%rd6551, %rd6550, %rd6539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4526,%dummy}, %rd6490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4527}, %rd6490;
	}
	shf.r.wrap.b32 	%r4528, %r4527, %r4526, 19;
	shf.r.wrap.b32 	%r4529, %r4526, %r4527, 19;
	mov.b64 	%rd6552, {%r4529, %r4528};
	shf.l.wrap.b32 	%r4530, %r4526, %r4527, 3;
	shf.l.wrap.b32 	%r4531, %r4527, %r4526, 3;
	mov.b64 	%rd6553, {%r4531, %r4530};
	xor.b64  	%rd6554, %rd6552, %rd6553;
	shr.u64 	%rd6555, %rd6490, 6;
	xor.b64  	%rd6556, %rd6554, %rd6555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4532,%dummy}, %rd9990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4533}, %rd9990;
	}
	shf.r.wrap.b32 	%r4534, %r4533, %r4532, 8;
	shf.r.wrap.b32 	%r4535, %r4532, %r4533, 8;
	mov.b64 	%rd6557, {%r4535, %r4534};
	shf.r.wrap.b32 	%r4536, %r4533, %r4532, 1;
	shf.r.wrap.b32 	%r4537, %r4532, %r4533, 1;
	mov.b64 	%rd6558, {%r4537, %r4536};
	xor.b64  	%rd6559, %rd6558, %rd6557;
	shr.u64 	%rd6560, %rd9990, 7;
	xor.b64  	%rd6561, %rd6559, %rd6560;
	add.s64 	%rd6562, %rd6556, %rd9991;
	add.s64 	%rd6563, %rd6562, %rd6305;
	add.s64 	%rd6564, %rd6563, %rd6561;
	add.s64 	%rd6565, %rd6564, %rd6429;
	xor.b64  	%rd6566, %rd6503, %rd6466;
	and.b64  	%rd6567, %rd6540, %rd6566;
	xor.b64  	%rd6568, %rd6567, %rd6466;
	add.s64 	%rd6569, %rd6565, %rd6568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4538,%dummy}, %rd6540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4539}, %rd6540;
	}
	shf.r.wrap.b32 	%r4540, %r4539, %r4538, 14;
	shf.r.wrap.b32 	%r4541, %r4538, %r4539, 14;
	mov.b64 	%rd6570, {%r4541, %r4540};
	shf.r.wrap.b32 	%r4542, %r4539, %r4538, 18;
	shf.r.wrap.b32 	%r4543, %r4538, %r4539, 18;
	mov.b64 	%rd6571, {%r4543, %r4542};
	xor.b64  	%rd6572, %rd6570, %rd6571;
	shf.l.wrap.b32 	%r4544, %r4538, %r4539, 23;
	shf.l.wrap.b32 	%r4545, %r4539, %r4538, 23;
	mov.b64 	%rd6573, {%r4545, %r4544};
	xor.b64  	%rd6574, %rd6572, %rd6573;
	add.s64 	%rd6575, %rd6569, %rd6574;
	add.s64 	%rd6576, %rd6575, -4116276920077217854;
	add.s64 	%rd6577, %rd6576, %rd6440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4546,%dummy}, %rd6551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4547}, %rd6551;
	}
	shf.r.wrap.b32 	%r4548, %r4547, %r4546, 28;
	shf.r.wrap.b32 	%r4549, %r4546, %r4547, 28;
	mov.b64 	%rd6578, {%r4549, %r4548};
	shf.l.wrap.b32 	%r4550, %r4546, %r4547, 30;
	shf.l.wrap.b32 	%r4551, %r4547, %r4546, 30;
	mov.b64 	%rd6579, {%r4551, %r4550};
	xor.b64  	%rd6580, %rd6578, %rd6579;
	shf.l.wrap.b32 	%r4552, %r4546, %r4547, 25;
	shf.l.wrap.b32 	%r4553, %r4547, %r4546, 25;
	mov.b64 	%rd6581, {%r4553, %r4552};
	xor.b64  	%rd6582, %rd6580, %rd6581;
	and.b64  	%rd6583, %rd6551, %rd6514;
	or.b64  	%rd6584, %rd6551, %rd6514;
	and.b64  	%rd6585, %rd6584, %rd6477;
	or.b64  	%rd6586, %rd6585, %rd6583;
	add.s64 	%rd6587, %rd6586, %rd6582;
	add.s64 	%rd6588, %rd6587, %rd6576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4554,%dummy}, %rd6527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4555}, %rd6527;
	}
	shf.r.wrap.b32 	%r4556, %r4555, %r4554, 19;
	shf.r.wrap.b32 	%r4557, %r4554, %r4555, 19;
	mov.b64 	%rd6589, {%r4557, %r4556};
	shf.l.wrap.b32 	%r4558, %r4554, %r4555, 3;
	shf.l.wrap.b32 	%r4559, %r4555, %r4554, 3;
	mov.b64 	%rd6590, {%r4559, %r4558};
	xor.b64  	%rd6591, %rd6589, %rd6590;
	shr.u64 	%rd6592, %rd6527, 6;
	xor.b64  	%rd6593, %rd6591, %rd6592;
	shf.r.wrap.b32 	%r4560, %r4190, %r4191, 8;
	shf.r.wrap.b32 	%r4561, %r4191, %r4190, 8;
	mov.b64 	%rd6594, {%r4561, %r4560};
	shf.r.wrap.b32 	%r4562, %r4190, %r4191, 1;
	shf.r.wrap.b32 	%r4563, %r4191, %r4190, 1;
	mov.b64 	%rd6595, {%r4563, %r4562};
	xor.b64  	%rd6596, %rd6595, %rd6594;
	shr.u64 	%rd6597, %rd9989, 7;
	xor.b64  	%rd6598, %rd6596, %rd6597;
	add.s64 	%rd6599, %rd6593, %rd9990;
	add.s64 	%rd6600, %rd6599, %rd6342;
	add.s64 	%rd6601, %rd6600, %rd6598;
	add.s64 	%rd6602, %rd6601, %rd6466;
	xor.b64  	%rd6603, %rd6540, %rd6503;
	and.b64  	%rd6604, %rd6577, %rd6603;
	xor.b64  	%rd6605, %rd6604, %rd6503;
	add.s64 	%rd6606, %rd6602, %rd6605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4564,%dummy}, %rd6577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4565}, %rd6577;
	}
	shf.r.wrap.b32 	%r4566, %r4565, %r4564, 14;
	shf.r.wrap.b32 	%r4567, %r4564, %r4565, 14;
	mov.b64 	%rd6607, {%r4567, %r4566};
	shf.r.wrap.b32 	%r4568, %r4565, %r4564, 18;
	shf.r.wrap.b32 	%r4569, %r4564, %r4565, 18;
	mov.b64 	%rd6608, {%r4569, %r4568};
	xor.b64  	%rd6609, %rd6607, %rd6608;
	shf.l.wrap.b32 	%r4570, %r4564, %r4565, 23;
	shf.l.wrap.b32 	%r4571, %r4565, %r4564, 23;
	mov.b64 	%rd6610, {%r4571, %r4570};
	xor.b64  	%rd6611, %rd6609, %rd6610;
	add.s64 	%rd6612, %rd6606, %rd6611;
	add.s64 	%rd6613, %rd6612, -3051310485924567259;
	add.s64 	%rd6614, %rd6613, %rd6477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4572,%dummy}, %rd6588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4573}, %rd6588;
	}
	shf.r.wrap.b32 	%r4574, %r4573, %r4572, 28;
	shf.r.wrap.b32 	%r4575, %r4572, %r4573, 28;
	mov.b64 	%rd6615, {%r4575, %r4574};
	shf.l.wrap.b32 	%r4576, %r4572, %r4573, 30;
	shf.l.wrap.b32 	%r4577, %r4573, %r4572, 30;
	mov.b64 	%rd6616, {%r4577, %r4576};
	xor.b64  	%rd6617, %rd6615, %rd6616;
	shf.l.wrap.b32 	%r4578, %r4572, %r4573, 25;
	shf.l.wrap.b32 	%r4579, %r4573, %r4572, 25;
	mov.b64 	%rd6618, {%r4579, %r4578};
	xor.b64  	%rd6619, %rd6617, %rd6618;
	and.b64  	%rd6620, %rd6588, %rd6551;
	or.b64  	%rd6621, %rd6588, %rd6551;
	and.b64  	%rd6622, %rd6621, %rd6514;
	or.b64  	%rd6623, %rd6622, %rd6620;
	add.s64 	%rd6624, %rd6623, %rd6619;
	add.s64 	%rd6625, %rd6624, %rd6613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4580,%dummy}, %rd6564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4581}, %rd6564;
	}
	shf.r.wrap.b32 	%r4582, %r4581, %r4580, 19;
	shf.r.wrap.b32 	%r4583, %r4580, %r4581, 19;
	mov.b64 	%rd6626, {%r4583, %r4582};
	shf.l.wrap.b32 	%r4584, %r4580, %r4581, 3;
	shf.l.wrap.b32 	%r4585, %r4581, %r4580, 3;
	mov.b64 	%rd6627, {%r4585, %r4584};
	xor.b64  	%rd6628, %rd6626, %rd6627;
	shr.u64 	%rd6629, %rd6564, 6;
	xor.b64  	%rd6630, %rd6628, %rd6629;
	shf.r.wrap.b32 	%r4586, %r4219, %r4218, 1;
	shf.r.wrap.b32 	%r4587, %r4218, %r4219, 1;
	mov.b64 	%rd6631, {%r4587, %r4586};
	shf.r.wrap.b32 	%r4588, %r4219, %r4218, 8;
	shf.r.wrap.b32 	%r4589, %r4218, %r4219, 8;
	mov.b64 	%rd6632, {%r4589, %r4588};
	xor.b64  	%rd6633, %rd6631, %rd6632;
	shr.u64 	%rd6634, %rd5723, 7;
	xor.b64  	%rd6635, %rd6633, %rd6634;
	add.s64 	%rd6636, %rd6630, %rd9989;
	add.s64 	%rd6637, %rd6636, %rd6379;
	add.s64 	%rd6638, %rd6637, %rd6635;
	add.s64 	%rd6639, %rd6638, %rd6503;
	xor.b64  	%rd6640, %rd6577, %rd6540;
	and.b64  	%rd6641, %rd6614, %rd6640;
	xor.b64  	%rd6642, %rd6641, %rd6540;
	add.s64 	%rd6643, %rd6639, %rd6642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4590,%dummy}, %rd6614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4591}, %rd6614;
	}
	shf.r.wrap.b32 	%r4592, %r4591, %r4590, 14;
	shf.r.wrap.b32 	%r4593, %r4590, %r4591, 14;
	mov.b64 	%rd6644, {%r4593, %r4592};
	shf.r.wrap.b32 	%r4594, %r4591, %r4590, 18;
	shf.r.wrap.b32 	%r4595, %r4590, %r4591, 18;
	mov.b64 	%rd6645, {%r4595, %r4594};
	xor.b64  	%rd6646, %rd6644, %rd6645;
	shf.l.wrap.b32 	%r4596, %r4590, %r4591, 23;
	shf.l.wrap.b32 	%r4597, %r4591, %r4590, 23;
	mov.b64 	%rd6647, {%r4597, %r4596};
	xor.b64  	%rd6648, %rd6646, %rd6647;
	add.s64 	%rd6649, %rd6643, %rd6648;
	add.s64 	%rd6650, %rd6649, 489312712824947311;
	add.s64 	%rd6651, %rd6650, %rd6514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4598,%dummy}, %rd6625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4599}, %rd6625;
	}
	shf.r.wrap.b32 	%r4600, %r4599, %r4598, 28;
	shf.r.wrap.b32 	%r4601, %r4598, %r4599, 28;
	mov.b64 	%rd6652, {%r4601, %r4600};
	shf.l.wrap.b32 	%r4602, %r4598, %r4599, 30;
	shf.l.wrap.b32 	%r4603, %r4599, %r4598, 30;
	mov.b64 	%rd6653, {%r4603, %r4602};
	xor.b64  	%rd6654, %rd6652, %rd6653;
	shf.l.wrap.b32 	%r4604, %r4598, %r4599, 25;
	shf.l.wrap.b32 	%r4605, %r4599, %r4598, 25;
	mov.b64 	%rd6655, {%r4605, %r4604};
	xor.b64  	%rd6656, %rd6654, %rd6655;
	and.b64  	%rd6657, %rd6625, %rd6588;
	or.b64  	%rd6658, %rd6625, %rd6588;
	and.b64  	%rd6659, %rd6658, %rd6551;
	or.b64  	%rd6660, %rd6659, %rd6657;
	add.s64 	%rd6661, %rd6660, %rd6656;
	add.s64 	%rd6662, %rd6661, %rd6650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4606,%dummy}, %rd6601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4607}, %rd6601;
	}
	shf.r.wrap.b32 	%r4608, %r4607, %r4606, 19;
	shf.r.wrap.b32 	%r4609, %r4606, %r4607, 19;
	mov.b64 	%rd6663, {%r4609, %r4608};
	shf.l.wrap.b32 	%r4610, %r4606, %r4607, 3;
	shf.l.wrap.b32 	%r4611, %r4607, %r4606, 3;
	mov.b64 	%rd6664, {%r4611, %r4610};
	xor.b64  	%rd6665, %rd6663, %rd6664;
	shr.u64 	%rd6666, %rd6601, 6;
	xor.b64  	%rd6667, %rd6665, %rd6666;
	shf.r.wrap.b32 	%r4612, %r4247, %r4246, 1;
	shf.r.wrap.b32 	%r4613, %r4246, %r4247, 1;
	mov.b64 	%rd6668, {%r4613, %r4612};
	shf.r.wrap.b32 	%r4614, %r4247, %r4246, 8;
	shf.r.wrap.b32 	%r4615, %r4246, %r4247, 8;
	mov.b64 	%rd6669, {%r4615, %r4614};
	xor.b64  	%rd6670, %rd6668, %rd6669;
	shr.u64 	%rd6671, %rd6120, 7;
	xor.b64  	%rd6672, %rd6670, %rd6671;
	add.s64 	%rd6673, %rd6667, %rd5723;
	add.s64 	%rd6674, %rd6673, %rd6416;
	add.s64 	%rd6675, %rd6674, %rd6672;
	add.s64 	%rd6676, %rd6675, %rd6540;
	xor.b64  	%rd6677, %rd6614, %rd6577;
	and.b64  	%rd6678, %rd6651, %rd6677;
	xor.b64  	%rd6679, %rd6678, %rd6577;
	add.s64 	%rd6680, %rd6676, %rd6679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4616,%dummy}, %rd6651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4617}, %rd6651;
	}
	shf.r.wrap.b32 	%r4618, %r4617, %r4616, 14;
	shf.r.wrap.b32 	%r4619, %r4616, %r4617, 14;
	mov.b64 	%rd6681, {%r4619, %r4618};
	shf.r.wrap.b32 	%r4620, %r4617, %r4616, 18;
	shf.r.wrap.b32 	%r4621, %r4616, %r4617, 18;
	mov.b64 	%rd6682, {%r4621, %r4620};
	xor.b64  	%rd6683, %rd6681, %rd6682;
	shf.l.wrap.b32 	%r4622, %r4616, %r4617, 23;
	shf.l.wrap.b32 	%r4623, %r4617, %r4616, 23;
	mov.b64 	%rd6684, {%r4623, %r4622};
	xor.b64  	%rd6685, %rd6683, %rd6684;
	add.s64 	%rd6686, %rd6680, %rd6685;
	add.s64 	%rd6687, %rd6686, 1452737877330783856;
	add.s64 	%rd6688, %rd6687, %rd6551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4624,%dummy}, %rd6662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4625}, %rd6662;
	}
	shf.r.wrap.b32 	%r4626, %r4625, %r4624, 28;
	shf.r.wrap.b32 	%r4627, %r4624, %r4625, 28;
	mov.b64 	%rd6689, {%r4627, %r4626};
	shf.l.wrap.b32 	%r4628, %r4624, %r4625, 30;
	shf.l.wrap.b32 	%r4629, %r4625, %r4624, 30;
	mov.b64 	%rd6690, {%r4629, %r4628};
	xor.b64  	%rd6691, %rd6689, %rd6690;
	shf.l.wrap.b32 	%r4630, %r4624, %r4625, 25;
	shf.l.wrap.b32 	%r4631, %r4625, %r4624, 25;
	mov.b64 	%rd6692, {%r4631, %r4630};
	xor.b64  	%rd6693, %rd6691, %rd6692;
	and.b64  	%rd6694, %rd6662, %rd6625;
	or.b64  	%rd6695, %rd6662, %rd6625;
	and.b64  	%rd6696, %rd6695, %rd6588;
	or.b64  	%rd6697, %rd6696, %rd6694;
	add.s64 	%rd6698, %rd6697, %rd6693;
	add.s64 	%rd6699, %rd6698, %rd6687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4632,%dummy}, %rd6638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4633}, %rd6638;
	}
	shf.r.wrap.b32 	%r4634, %r4633, %r4632, 19;
	shf.r.wrap.b32 	%r4635, %r4632, %r4633, 19;
	mov.b64 	%rd6700, {%r4635, %r4634};
	shf.l.wrap.b32 	%r4636, %r4632, %r4633, 3;
	shf.l.wrap.b32 	%r4637, %r4633, %r4632, 3;
	mov.b64 	%rd6701, {%r4637, %r4636};
	xor.b64  	%rd6702, %rd6700, %rd6701;
	shr.u64 	%rd6703, %rd6638, 6;
	xor.b64  	%rd6704, %rd6702, %rd6703;
	shf.r.wrap.b32 	%r4638, %r4275, %r4274, 1;
	shf.r.wrap.b32 	%r4639, %r4274, %r4275, 1;
	mov.b64 	%rd6705, {%r4639, %r4638};
	shf.r.wrap.b32 	%r4640, %r4275, %r4274, 8;
	shf.r.wrap.b32 	%r4641, %r4274, %r4275, 8;
	mov.b64 	%rd6706, {%r4641, %r4640};
	xor.b64  	%rd6707, %rd6705, %rd6706;
	shr.u64 	%rd6708, %rd6157, 7;
	xor.b64  	%rd6709, %rd6707, %rd6708;
	add.s64 	%rd6710, %rd6704, %rd6120;
	add.s64 	%rd6711, %rd6710, %rd6453;
	add.s64 	%rd6712, %rd6711, %rd6709;
	add.s64 	%rd6713, %rd6712, %rd6577;
	xor.b64  	%rd6714, %rd6651, %rd6614;
	and.b64  	%rd6715, %rd6688, %rd6714;
	xor.b64  	%rd6716, %rd6715, %rd6614;
	add.s64 	%rd6717, %rd6713, %rd6716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4642,%dummy}, %rd6688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4643}, %rd6688;
	}
	shf.r.wrap.b32 	%r4644, %r4643, %r4642, 14;
	shf.r.wrap.b32 	%r4645, %r4642, %r4643, 14;
	mov.b64 	%rd6718, {%r4645, %r4644};
	shf.r.wrap.b32 	%r4646, %r4643, %r4642, 18;
	shf.r.wrap.b32 	%r4647, %r4642, %r4643, 18;
	mov.b64 	%rd6719, {%r4647, %r4646};
	xor.b64  	%rd6720, %rd6718, %rd6719;
	shf.l.wrap.b32 	%r4648, %r4642, %r4643, 23;
	shf.l.wrap.b32 	%r4649, %r4643, %r4642, 23;
	mov.b64 	%rd6721, {%r4649, %r4648};
	xor.b64  	%rd6722, %rd6720, %rd6721;
	add.s64 	%rd6723, %rd6717, %rd6722;
	add.s64 	%rd6724, %rd6723, 2861767655752347644;
	add.s64 	%rd6725, %rd6724, %rd6588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4650,%dummy}, %rd6699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4651}, %rd6699;
	}
	shf.r.wrap.b32 	%r4652, %r4651, %r4650, 28;
	shf.r.wrap.b32 	%r4653, %r4650, %r4651, 28;
	mov.b64 	%rd6726, {%r4653, %r4652};
	shf.l.wrap.b32 	%r4654, %r4650, %r4651, 30;
	shf.l.wrap.b32 	%r4655, %r4651, %r4650, 30;
	mov.b64 	%rd6727, {%r4655, %r4654};
	xor.b64  	%rd6728, %rd6726, %rd6727;
	shf.l.wrap.b32 	%r4656, %r4650, %r4651, 25;
	shf.l.wrap.b32 	%r4657, %r4651, %r4650, 25;
	mov.b64 	%rd6729, {%r4657, %r4656};
	xor.b64  	%rd6730, %rd6728, %rd6729;
	and.b64  	%rd6731, %rd6699, %rd6662;
	or.b64  	%rd6732, %rd6699, %rd6662;
	and.b64  	%rd6733, %rd6732, %rd6625;
	or.b64  	%rd6734, %rd6733, %rd6731;
	add.s64 	%rd6735, %rd6734, %rd6730;
	add.s64 	%rd6736, %rd6735, %rd6724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4658,%dummy}, %rd6675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4659}, %rd6675;
	}
	shf.r.wrap.b32 	%r4660, %r4659, %r4658, 19;
	shf.r.wrap.b32 	%r4661, %r4658, %r4659, 19;
	mov.b64 	%rd6737, {%r4661, %r4660};
	shf.l.wrap.b32 	%r4662, %r4658, %r4659, 3;
	shf.l.wrap.b32 	%r4663, %r4659, %r4658, 3;
	mov.b64 	%rd6738, {%r4663, %r4662};
	xor.b64  	%rd6739, %rd6737, %rd6738;
	shr.u64 	%rd6740, %rd6675, 6;
	xor.b64  	%rd6741, %rd6739, %rd6740;
	shf.r.wrap.b32 	%r4664, %r4303, %r4302, 1;
	shf.r.wrap.b32 	%r4665, %r4302, %r4303, 1;
	mov.b64 	%rd6742, {%r4665, %r4664};
	shf.r.wrap.b32 	%r4666, %r4303, %r4302, 8;
	shf.r.wrap.b32 	%r4667, %r4302, %r4303, 8;
	mov.b64 	%rd6743, {%r4667, %r4666};
	xor.b64  	%rd6744, %rd6742, %rd6743;
	shr.u64 	%rd6745, %rd6194, 7;
	xor.b64  	%rd6746, %rd6744, %rd6745;
	add.s64 	%rd6747, %rd6741, %rd6157;
	add.s64 	%rd6748, %rd6747, %rd6490;
	add.s64 	%rd6749, %rd6748, %rd6746;
	add.s64 	%rd6750, %rd6749, %rd6614;
	xor.b64  	%rd6751, %rd6688, %rd6651;
	and.b64  	%rd6752, %rd6725, %rd6751;
	xor.b64  	%rd6753, %rd6752, %rd6651;
	add.s64 	%rd6754, %rd6750, %rd6753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4668,%dummy}, %rd6725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4669}, %rd6725;
	}
	shf.r.wrap.b32 	%r4670, %r4669, %r4668, 14;
	shf.r.wrap.b32 	%r4671, %r4668, %r4669, 14;
	mov.b64 	%rd6755, {%r4671, %r4670};
	shf.r.wrap.b32 	%r4672, %r4669, %r4668, 18;
	shf.r.wrap.b32 	%r4673, %r4668, %r4669, 18;
	mov.b64 	%rd6756, {%r4673, %r4672};
	xor.b64  	%rd6757, %rd6755, %rd6756;
	shf.l.wrap.b32 	%r4674, %r4668, %r4669, 23;
	shf.l.wrap.b32 	%r4675, %r4669, %r4668, 23;
	mov.b64 	%rd6758, {%r4675, %r4674};
	xor.b64  	%rd6759, %rd6757, %rd6758;
	add.s64 	%rd6760, %rd6754, %rd6759;
	add.s64 	%rd6761, %rd6760, 3322285676063803686;
	add.s64 	%rd6762, %rd6761, %rd6625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4676,%dummy}, %rd6736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4677}, %rd6736;
	}
	shf.r.wrap.b32 	%r4678, %r4677, %r4676, 28;
	shf.r.wrap.b32 	%r4679, %r4676, %r4677, 28;
	mov.b64 	%rd6763, {%r4679, %r4678};
	shf.l.wrap.b32 	%r4680, %r4676, %r4677, 30;
	shf.l.wrap.b32 	%r4681, %r4677, %r4676, 30;
	mov.b64 	%rd6764, {%r4681, %r4680};
	xor.b64  	%rd6765, %rd6763, %rd6764;
	shf.l.wrap.b32 	%r4682, %r4676, %r4677, 25;
	shf.l.wrap.b32 	%r4683, %r4677, %r4676, 25;
	mov.b64 	%rd6766, {%r4683, %r4682};
	xor.b64  	%rd6767, %rd6765, %rd6766;
	and.b64  	%rd6768, %rd6736, %rd6699;
	or.b64  	%rd6769, %rd6736, %rd6699;
	and.b64  	%rd6770, %rd6769, %rd6662;
	or.b64  	%rd6771, %rd6770, %rd6768;
	add.s64 	%rd6772, %rd6771, %rd6767;
	add.s64 	%rd6773, %rd6772, %rd6761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4684,%dummy}, %rd6712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4685}, %rd6712;
	}
	shf.r.wrap.b32 	%r4686, %r4685, %r4684, 19;
	shf.r.wrap.b32 	%r4687, %r4684, %r4685, 19;
	mov.b64 	%rd6774, {%r4687, %r4686};
	shf.l.wrap.b32 	%r4688, %r4684, %r4685, 3;
	shf.l.wrap.b32 	%r4689, %r4685, %r4684, 3;
	mov.b64 	%rd6775, {%r4689, %r4688};
	xor.b64  	%rd6776, %rd6774, %rd6775;
	shr.u64 	%rd6777, %rd6712, 6;
	xor.b64  	%rd6778, %rd6776, %rd6777;
	shf.r.wrap.b32 	%r4690, %r4331, %r4330, 1;
	shf.r.wrap.b32 	%r4691, %r4330, %r4331, 1;
	mov.b64 	%rd6779, {%r4691, %r4690};
	shf.r.wrap.b32 	%r4692, %r4331, %r4330, 8;
	shf.r.wrap.b32 	%r4693, %r4330, %r4331, 8;
	mov.b64 	%rd6780, {%r4693, %r4692};
	xor.b64  	%rd6781, %rd6779, %rd6780;
	shr.u64 	%rd6782, %rd6231, 7;
	xor.b64  	%rd6783, %rd6781, %rd6782;
	add.s64 	%rd6784, %rd6778, %rd6194;
	add.s64 	%rd6785, %rd6784, %rd6527;
	add.s64 	%rd6786, %rd6785, %rd6783;
	add.s64 	%rd6787, %rd6786, %rd6651;
	xor.b64  	%rd6788, %rd6725, %rd6688;
	and.b64  	%rd6789, %rd6762, %rd6788;
	xor.b64  	%rd6790, %rd6789, %rd6688;
	add.s64 	%rd6791, %rd6787, %rd6790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4694,%dummy}, %rd6762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4695}, %rd6762;
	}
	shf.r.wrap.b32 	%r4696, %r4695, %r4694, 14;
	shf.r.wrap.b32 	%r4697, %r4694, %r4695, 14;
	mov.b64 	%rd6792, {%r4697, %r4696};
	shf.r.wrap.b32 	%r4698, %r4695, %r4694, 18;
	shf.r.wrap.b32 	%r4699, %r4694, %r4695, 18;
	mov.b64 	%rd6793, {%r4699, %r4698};
	xor.b64  	%rd6794, %rd6792, %rd6793;
	shf.l.wrap.b32 	%r4700, %r4694, %r4695, 23;
	shf.l.wrap.b32 	%r4701, %r4695, %r4694, 23;
	mov.b64 	%rd6795, {%r4701, %r4700};
	xor.b64  	%rd6796, %rd6794, %rd6795;
	add.s64 	%rd6797, %rd6791, %rd6796;
	add.s64 	%rd6798, %rd6797, 5560940570517711597;
	add.s64 	%rd6799, %rd6798, %rd6662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4702,%dummy}, %rd6773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4703}, %rd6773;
	}
	shf.r.wrap.b32 	%r4704, %r4703, %r4702, 28;
	shf.r.wrap.b32 	%r4705, %r4702, %r4703, 28;
	mov.b64 	%rd6800, {%r4705, %r4704};
	shf.l.wrap.b32 	%r4706, %r4702, %r4703, 30;
	shf.l.wrap.b32 	%r4707, %r4703, %r4702, 30;
	mov.b64 	%rd6801, {%r4707, %r4706};
	xor.b64  	%rd6802, %rd6800, %rd6801;
	shf.l.wrap.b32 	%r4708, %r4702, %r4703, 25;
	shf.l.wrap.b32 	%r4709, %r4703, %r4702, 25;
	mov.b64 	%rd6803, {%r4709, %r4708};
	xor.b64  	%rd6804, %rd6802, %rd6803;
	and.b64  	%rd6805, %rd6773, %rd6736;
	or.b64  	%rd6806, %rd6773, %rd6736;
	and.b64  	%rd6807, %rd6806, %rd6699;
	or.b64  	%rd6808, %rd6807, %rd6805;
	add.s64 	%rd6809, %rd6808, %rd6804;
	add.s64 	%rd6810, %rd6809, %rd6798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4710,%dummy}, %rd6749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4711}, %rd6749;
	}
	shf.r.wrap.b32 	%r4712, %r4711, %r4710, 19;
	shf.r.wrap.b32 	%r4713, %r4710, %r4711, 19;
	mov.b64 	%rd6811, {%r4713, %r4712};
	shf.l.wrap.b32 	%r4714, %r4710, %r4711, 3;
	shf.l.wrap.b32 	%r4715, %r4711, %r4710, 3;
	mov.b64 	%rd6812, {%r4715, %r4714};
	xor.b64  	%rd6813, %rd6811, %rd6812;
	shr.u64 	%rd6814, %rd6749, 6;
	xor.b64  	%rd6815, %rd6813, %rd6814;
	shf.r.wrap.b32 	%r4716, %r4359, %r4358, 1;
	shf.r.wrap.b32 	%r4717, %r4358, %r4359, 1;
	mov.b64 	%rd6816, {%r4717, %r4716};
	shf.r.wrap.b32 	%r4718, %r4359, %r4358, 8;
	shf.r.wrap.b32 	%r4719, %r4358, %r4359, 8;
	mov.b64 	%rd6817, {%r4719, %r4718};
	xor.b64  	%rd6818, %rd6816, %rd6817;
	shr.u64 	%rd6819, %rd6268, 7;
	xor.b64  	%rd6820, %rd6818, %rd6819;
	add.s64 	%rd6821, %rd6815, %rd6231;
	add.s64 	%rd6822, %rd6821, %rd6564;
	add.s64 	%rd6823, %rd6822, %rd6820;
	add.s64 	%rd6824, %rd6823, %rd6688;
	xor.b64  	%rd6825, %rd6762, %rd6725;
	and.b64  	%rd6826, %rd6799, %rd6825;
	xor.b64  	%rd6827, %rd6826, %rd6725;
	add.s64 	%rd6828, %rd6824, %rd6827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4720,%dummy}, %rd6799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4721}, %rd6799;
	}
	shf.r.wrap.b32 	%r4722, %r4721, %r4720, 14;
	shf.r.wrap.b32 	%r4723, %r4720, %r4721, 14;
	mov.b64 	%rd6829, {%r4723, %r4722};
	shf.r.wrap.b32 	%r4724, %r4721, %r4720, 18;
	shf.r.wrap.b32 	%r4725, %r4720, %r4721, 18;
	mov.b64 	%rd6830, {%r4725, %r4724};
	xor.b64  	%rd6831, %rd6829, %rd6830;
	shf.l.wrap.b32 	%r4726, %r4720, %r4721, 23;
	shf.l.wrap.b32 	%r4727, %r4721, %r4720, 23;
	mov.b64 	%rd6832, {%r4727, %r4726};
	xor.b64  	%rd6833, %rd6831, %rd6832;
	add.s64 	%rd6834, %rd6828, %rd6833;
	add.s64 	%rd6835, %rd6834, 5996557281743188959;
	add.s64 	%rd6836, %rd6835, %rd6699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4728,%dummy}, %rd6810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4729}, %rd6810;
	}
	shf.r.wrap.b32 	%r4730, %r4729, %r4728, 28;
	shf.r.wrap.b32 	%r4731, %r4728, %r4729, 28;
	mov.b64 	%rd6837, {%r4731, %r4730};
	shf.l.wrap.b32 	%r4732, %r4728, %r4729, 30;
	shf.l.wrap.b32 	%r4733, %r4729, %r4728, 30;
	mov.b64 	%rd6838, {%r4733, %r4732};
	xor.b64  	%rd6839, %rd6837, %rd6838;
	shf.l.wrap.b32 	%r4734, %r4728, %r4729, 25;
	shf.l.wrap.b32 	%r4735, %r4729, %r4728, 25;
	mov.b64 	%rd6840, {%r4735, %r4734};
	xor.b64  	%rd6841, %rd6839, %rd6840;
	and.b64  	%rd6842, %rd6810, %rd6773;
	or.b64  	%rd6843, %rd6810, %rd6773;
	and.b64  	%rd6844, %rd6843, %rd6736;
	or.b64  	%rd6845, %rd6844, %rd6842;
	add.s64 	%rd6846, %rd6845, %rd6841;
	add.s64 	%rd6847, %rd6846, %rd6835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4736,%dummy}, %rd6786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4737}, %rd6786;
	}
	shf.r.wrap.b32 	%r4738, %r4737, %r4736, 19;
	shf.r.wrap.b32 	%r4739, %r4736, %r4737, 19;
	mov.b64 	%rd6848, {%r4739, %r4738};
	shf.l.wrap.b32 	%r4740, %r4736, %r4737, 3;
	shf.l.wrap.b32 	%r4741, %r4737, %r4736, 3;
	mov.b64 	%rd6849, {%r4741, %r4740};
	xor.b64  	%rd6850, %rd6848, %rd6849;
	shr.u64 	%rd6851, %rd6786, 6;
	xor.b64  	%rd6852, %rd6850, %rd6851;
	shf.r.wrap.b32 	%r4742, %r4387, %r4386, 1;
	shf.r.wrap.b32 	%r4743, %r4386, %r4387, 1;
	mov.b64 	%rd6853, {%r4743, %r4742};
	shf.r.wrap.b32 	%r4744, %r4387, %r4386, 8;
	shf.r.wrap.b32 	%r4745, %r4386, %r4387, 8;
	mov.b64 	%rd6854, {%r4745, %r4744};
	xor.b64  	%rd6855, %rd6853, %rd6854;
	shr.u64 	%rd6856, %rd6305, 7;
	xor.b64  	%rd6857, %rd6855, %rd6856;
	add.s64 	%rd6858, %rd6852, %rd6268;
	add.s64 	%rd6859, %rd6858, %rd6601;
	add.s64 	%rd6860, %rd6859, %rd6857;
	add.s64 	%rd6861, %rd6860, %rd6725;
	xor.b64  	%rd6862, %rd6799, %rd6762;
	and.b64  	%rd6863, %rd6836, %rd6862;
	xor.b64  	%rd6864, %rd6863, %rd6762;
	add.s64 	%rd6865, %rd6861, %rd6864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4746,%dummy}, %rd6836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4747}, %rd6836;
	}
	shf.r.wrap.b32 	%r4748, %r4747, %r4746, 14;
	shf.r.wrap.b32 	%r4749, %r4746, %r4747, 14;
	mov.b64 	%rd6866, {%r4749, %r4748};
	shf.r.wrap.b32 	%r4750, %r4747, %r4746, 18;
	shf.r.wrap.b32 	%r4751, %r4746, %r4747, 18;
	mov.b64 	%rd6867, {%r4751, %r4750};
	xor.b64  	%rd6868, %rd6866, %rd6867;
	shf.l.wrap.b32 	%r4752, %r4746, %r4747, 23;
	shf.l.wrap.b32 	%r4753, %r4747, %r4746, 23;
	mov.b64 	%rd6869, {%r4753, %r4752};
	xor.b64  	%rd6870, %rd6868, %rd6869;
	add.s64 	%rd6871, %rd6865, %rd6870;
	add.s64 	%rd6872, %rd6871, 7280758554555802590;
	add.s64 	%rd6873, %rd6872, %rd6736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4754,%dummy}, %rd6847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4755}, %rd6847;
	}
	shf.r.wrap.b32 	%r4756, %r4755, %r4754, 28;
	shf.r.wrap.b32 	%r4757, %r4754, %r4755, 28;
	mov.b64 	%rd6874, {%r4757, %r4756};
	shf.l.wrap.b32 	%r4758, %r4754, %r4755, 30;
	shf.l.wrap.b32 	%r4759, %r4755, %r4754, 30;
	mov.b64 	%rd6875, {%r4759, %r4758};
	xor.b64  	%rd6876, %rd6874, %rd6875;
	shf.l.wrap.b32 	%r4760, %r4754, %r4755, 25;
	shf.l.wrap.b32 	%r4761, %r4755, %r4754, 25;
	mov.b64 	%rd6877, {%r4761, %r4760};
	xor.b64  	%rd6878, %rd6876, %rd6877;
	and.b64  	%rd6879, %rd6847, %rd6810;
	or.b64  	%rd6880, %rd6847, %rd6810;
	and.b64  	%rd6881, %rd6880, %rd6773;
	or.b64  	%rd6882, %rd6881, %rd6879;
	add.s64 	%rd6883, %rd6882, %rd6878;
	add.s64 	%rd6884, %rd6883, %rd6872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4762,%dummy}, %rd6823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4763}, %rd6823;
	}
	shf.r.wrap.b32 	%r4764, %r4763, %r4762, 19;
	shf.r.wrap.b32 	%r4765, %r4762, %r4763, 19;
	mov.b64 	%rd6885, {%r4765, %r4764};
	shf.l.wrap.b32 	%r4766, %r4762, %r4763, 3;
	shf.l.wrap.b32 	%r4767, %r4763, %r4762, 3;
	mov.b64 	%rd6886, {%r4767, %r4766};
	xor.b64  	%rd6887, %rd6885, %rd6886;
	shr.u64 	%rd6888, %rd6823, 6;
	xor.b64  	%rd6889, %rd6887, %rd6888;
	shf.r.wrap.b32 	%r4768, %r4415, %r4414, 1;
	shf.r.wrap.b32 	%r4769, %r4414, %r4415, 1;
	mov.b64 	%rd6890, {%r4769, %r4768};
	shf.r.wrap.b32 	%r4770, %r4415, %r4414, 8;
	shf.r.wrap.b32 	%r4771, %r4414, %r4415, 8;
	mov.b64 	%rd6891, {%r4771, %r4770};
	xor.b64  	%rd6892, %rd6890, %rd6891;
	shr.u64 	%rd6893, %rd6342, 7;
	xor.b64  	%rd6894, %rd6892, %rd6893;
	add.s64 	%rd6895, %rd6889, %rd6305;
	add.s64 	%rd6896, %rd6895, %rd6638;
	add.s64 	%rd6897, %rd6896, %rd6894;
	add.s64 	%rd6898, %rd6897, %rd6762;
	xor.b64  	%rd6899, %rd6836, %rd6799;
	and.b64  	%rd6900, %rd6873, %rd6899;
	xor.b64  	%rd6901, %rd6900, %rd6799;
	add.s64 	%rd6902, %rd6898, %rd6901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4772,%dummy}, %rd6873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4773}, %rd6873;
	}
	shf.r.wrap.b32 	%r4774, %r4773, %r4772, 14;
	shf.r.wrap.b32 	%r4775, %r4772, %r4773, 14;
	mov.b64 	%rd6903, {%r4775, %r4774};
	shf.r.wrap.b32 	%r4776, %r4773, %r4772, 18;
	shf.r.wrap.b32 	%r4777, %r4772, %r4773, 18;
	mov.b64 	%rd6904, {%r4777, %r4776};
	xor.b64  	%rd6905, %rd6903, %rd6904;
	shf.l.wrap.b32 	%r4778, %r4772, %r4773, 23;
	shf.l.wrap.b32 	%r4779, %r4773, %r4772, 23;
	mov.b64 	%rd6906, {%r4779, %r4778};
	xor.b64  	%rd6907, %rd6905, %rd6906;
	add.s64 	%rd6908, %rd6902, %rd6907;
	add.s64 	%rd6909, %rd6908, 8532644243296465576;
	add.s64 	%rd6910, %rd6909, %rd6773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4780,%dummy}, %rd6884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4781}, %rd6884;
	}
	shf.r.wrap.b32 	%r4782, %r4781, %r4780, 28;
	shf.r.wrap.b32 	%r4783, %r4780, %r4781, 28;
	mov.b64 	%rd6911, {%r4783, %r4782};
	shf.l.wrap.b32 	%r4784, %r4780, %r4781, 30;
	shf.l.wrap.b32 	%r4785, %r4781, %r4780, 30;
	mov.b64 	%rd6912, {%r4785, %r4784};
	xor.b64  	%rd6913, %rd6911, %rd6912;
	shf.l.wrap.b32 	%r4786, %r4780, %r4781, 25;
	shf.l.wrap.b32 	%r4787, %r4781, %r4780, 25;
	mov.b64 	%rd6914, {%r4787, %r4786};
	xor.b64  	%rd6915, %rd6913, %rd6914;
	and.b64  	%rd6916, %rd6884, %rd6847;
	or.b64  	%rd6917, %rd6884, %rd6847;
	and.b64  	%rd6918, %rd6917, %rd6810;
	or.b64  	%rd6919, %rd6918, %rd6916;
	add.s64 	%rd6920, %rd6919, %rd6915;
	add.s64 	%rd6921, %rd6920, %rd6909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4788,%dummy}, %rd6860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4789}, %rd6860;
	}
	shf.r.wrap.b32 	%r4790, %r4789, %r4788, 19;
	shf.r.wrap.b32 	%r4791, %r4788, %r4789, 19;
	mov.b64 	%rd6922, {%r4791, %r4790};
	shf.l.wrap.b32 	%r4792, %r4788, %r4789, 3;
	shf.l.wrap.b32 	%r4793, %r4789, %r4788, 3;
	mov.b64 	%rd6923, {%r4793, %r4792};
	xor.b64  	%rd6924, %rd6922, %rd6923;
	shr.u64 	%rd6925, %rd6860, 6;
	xor.b64  	%rd6926, %rd6924, %rd6925;
	shf.r.wrap.b32 	%r4794, %r4443, %r4442, 1;
	shf.r.wrap.b32 	%r4795, %r4442, %r4443, 1;
	mov.b64 	%rd6927, {%r4795, %r4794};
	shf.r.wrap.b32 	%r4796, %r4443, %r4442, 8;
	shf.r.wrap.b32 	%r4797, %r4442, %r4443, 8;
	mov.b64 	%rd6928, {%r4797, %r4796};
	xor.b64  	%rd6929, %rd6927, %rd6928;
	shr.u64 	%rd6930, %rd6379, 7;
	xor.b64  	%rd6931, %rd6929, %rd6930;
	add.s64 	%rd6932, %rd6926, %rd6342;
	add.s64 	%rd6933, %rd6932, %rd6675;
	add.s64 	%rd6934, %rd6933, %rd6931;
	add.s64 	%rd6935, %rd6934, %rd6799;
	xor.b64  	%rd6936, %rd6873, %rd6836;
	and.b64  	%rd6937, %rd6910, %rd6936;
	xor.b64  	%rd6938, %rd6937, %rd6836;
	add.s64 	%rd6939, %rd6935, %rd6938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4798,%dummy}, %rd6910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4799}, %rd6910;
	}
	shf.r.wrap.b32 	%r4800, %r4799, %r4798, 14;
	shf.r.wrap.b32 	%r4801, %r4798, %r4799, 14;
	mov.b64 	%rd6940, {%r4801, %r4800};
	shf.r.wrap.b32 	%r4802, %r4799, %r4798, 18;
	shf.r.wrap.b32 	%r4803, %r4798, %r4799, 18;
	mov.b64 	%rd6941, {%r4803, %r4802};
	xor.b64  	%rd6942, %rd6940, %rd6941;
	shf.l.wrap.b32 	%r4804, %r4798, %r4799, 23;
	shf.l.wrap.b32 	%r4805, %r4799, %r4798, 23;
	mov.b64 	%rd6943, {%r4805, %r4804};
	xor.b64  	%rd6944, %rd6942, %rd6943;
	add.s64 	%rd6945, %rd6939, %rd6944;
	add.s64 	%rd6946, %rd6945, -9096487096722542874;
	add.s64 	%rd6947, %rd6946, %rd6810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4806,%dummy}, %rd6921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4807}, %rd6921;
	}
	shf.r.wrap.b32 	%r4808, %r4807, %r4806, 28;
	shf.r.wrap.b32 	%r4809, %r4806, %r4807, 28;
	mov.b64 	%rd6948, {%r4809, %r4808};
	shf.l.wrap.b32 	%r4810, %r4806, %r4807, 30;
	shf.l.wrap.b32 	%r4811, %r4807, %r4806, 30;
	mov.b64 	%rd6949, {%r4811, %r4810};
	xor.b64  	%rd6950, %rd6948, %rd6949;
	shf.l.wrap.b32 	%r4812, %r4806, %r4807, 25;
	shf.l.wrap.b32 	%r4813, %r4807, %r4806, 25;
	mov.b64 	%rd6951, {%r4813, %r4812};
	xor.b64  	%rd6952, %rd6950, %rd6951;
	and.b64  	%rd6953, %rd6921, %rd6884;
	or.b64  	%rd6954, %rd6921, %rd6884;
	and.b64  	%rd6955, %rd6954, %rd6847;
	or.b64  	%rd6956, %rd6955, %rd6953;
	add.s64 	%rd6957, %rd6956, %rd6952;
	add.s64 	%rd6958, %rd6957, %rd6946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4814,%dummy}, %rd6897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4815}, %rd6897;
	}
	shf.r.wrap.b32 	%r4816, %r4815, %r4814, 19;
	shf.r.wrap.b32 	%r4817, %r4814, %r4815, 19;
	mov.b64 	%rd6959, {%r4817, %r4816};
	shf.l.wrap.b32 	%r4818, %r4814, %r4815, 3;
	shf.l.wrap.b32 	%r4819, %r4815, %r4814, 3;
	mov.b64 	%rd6960, {%r4819, %r4818};
	xor.b64  	%rd6961, %rd6959, %rd6960;
	shr.u64 	%rd6962, %rd6897, 6;
	xor.b64  	%rd6963, %rd6961, %rd6962;
	shf.r.wrap.b32 	%r4820, %r4471, %r4470, 1;
	shf.r.wrap.b32 	%r4821, %r4470, %r4471, 1;
	mov.b64 	%rd6964, {%r4821, %r4820};
	shf.r.wrap.b32 	%r4822, %r4471, %r4470, 8;
	shf.r.wrap.b32 	%r4823, %r4470, %r4471, 8;
	mov.b64 	%rd6965, {%r4823, %r4822};
	xor.b64  	%rd6966, %rd6964, %rd6965;
	shr.u64 	%rd6967, %rd6416, 7;
	xor.b64  	%rd6968, %rd6966, %rd6967;
	add.s64 	%rd6969, %rd6963, %rd6379;
	add.s64 	%rd6970, %rd6969, %rd6712;
	add.s64 	%rd6971, %rd6970, %rd6968;
	add.s64 	%rd6972, %rd6971, %rd6836;
	xor.b64  	%rd6973, %rd6910, %rd6873;
	and.b64  	%rd6974, %rd6947, %rd6973;
	xor.b64  	%rd6975, %rd6974, %rd6873;
	add.s64 	%rd6976, %rd6972, %rd6975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4824,%dummy}, %rd6947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4825}, %rd6947;
	}
	shf.r.wrap.b32 	%r4826, %r4825, %r4824, 14;
	shf.r.wrap.b32 	%r4827, %r4824, %r4825, 14;
	mov.b64 	%rd6977, {%r4827, %r4826};
	shf.r.wrap.b32 	%r4828, %r4825, %r4824, 18;
	shf.r.wrap.b32 	%r4829, %r4824, %r4825, 18;
	mov.b64 	%rd6978, {%r4829, %r4828};
	xor.b64  	%rd6979, %rd6977, %rd6978;
	shf.l.wrap.b32 	%r4830, %r4824, %r4825, 23;
	shf.l.wrap.b32 	%r4831, %r4825, %r4824, 23;
	mov.b64 	%rd6980, {%r4831, %r4830};
	xor.b64  	%rd6981, %rd6979, %rd6980;
	add.s64 	%rd6982, %rd6976, %rd6981;
	add.s64 	%rd6983, %rd6982, -7894198246740708037;
	add.s64 	%rd6984, %rd6983, %rd6847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4832,%dummy}, %rd6958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4833}, %rd6958;
	}
	shf.r.wrap.b32 	%r4834, %r4833, %r4832, 28;
	shf.r.wrap.b32 	%r4835, %r4832, %r4833, 28;
	mov.b64 	%rd6985, {%r4835, %r4834};
	shf.l.wrap.b32 	%r4836, %r4832, %r4833, 30;
	shf.l.wrap.b32 	%r4837, %r4833, %r4832, 30;
	mov.b64 	%rd6986, {%r4837, %r4836};
	xor.b64  	%rd6987, %rd6985, %rd6986;
	shf.l.wrap.b32 	%r4838, %r4832, %r4833, 25;
	shf.l.wrap.b32 	%r4839, %r4833, %r4832, 25;
	mov.b64 	%rd6988, {%r4839, %r4838};
	xor.b64  	%rd6989, %rd6987, %rd6988;
	and.b64  	%rd6990, %rd6958, %rd6921;
	or.b64  	%rd6991, %rd6958, %rd6921;
	and.b64  	%rd6992, %rd6991, %rd6884;
	or.b64  	%rd6993, %rd6992, %rd6990;
	add.s64 	%rd6994, %rd6993, %rd6989;
	add.s64 	%rd6995, %rd6994, %rd6983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4840,%dummy}, %rd6934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4841}, %rd6934;
	}
	shf.r.wrap.b32 	%r4842, %r4841, %r4840, 19;
	shf.r.wrap.b32 	%r4843, %r4840, %r4841, 19;
	mov.b64 	%rd6996, {%r4843, %r4842};
	shf.l.wrap.b32 	%r4844, %r4840, %r4841, 3;
	shf.l.wrap.b32 	%r4845, %r4841, %r4840, 3;
	mov.b64 	%rd6997, {%r4845, %r4844};
	xor.b64  	%rd6998, %rd6996, %rd6997;
	shr.u64 	%rd6999, %rd6934, 6;
	xor.b64  	%rd7000, %rd6998, %rd6999;
	shf.r.wrap.b32 	%r4846, %r4499, %r4498, 1;
	shf.r.wrap.b32 	%r4847, %r4498, %r4499, 1;
	mov.b64 	%rd7001, {%r4847, %r4846};
	shf.r.wrap.b32 	%r4848, %r4499, %r4498, 8;
	shf.r.wrap.b32 	%r4849, %r4498, %r4499, 8;
	mov.b64 	%rd7002, {%r4849, %r4848};
	xor.b64  	%rd7003, %rd7001, %rd7002;
	shr.u64 	%rd7004, %rd6453, 7;
	xor.b64  	%rd7005, %rd7003, %rd7004;
	add.s64 	%rd7006, %rd7000, %rd6416;
	add.s64 	%rd7007, %rd7006, %rd6749;
	add.s64 	%rd7008, %rd7007, %rd7005;
	add.s64 	%rd7009, %rd7008, %rd6873;
	xor.b64  	%rd7010, %rd6947, %rd6910;
	and.b64  	%rd7011, %rd6984, %rd7010;
	xor.b64  	%rd7012, %rd7011, %rd6910;
	add.s64 	%rd7013, %rd7009, %rd7012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4850,%dummy}, %rd6984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4851}, %rd6984;
	}
	shf.r.wrap.b32 	%r4852, %r4851, %r4850, 14;
	shf.r.wrap.b32 	%r4853, %r4850, %r4851, 14;
	mov.b64 	%rd7014, {%r4853, %r4852};
	shf.r.wrap.b32 	%r4854, %r4851, %r4850, 18;
	shf.r.wrap.b32 	%r4855, %r4850, %r4851, 18;
	mov.b64 	%rd7015, {%r4855, %r4854};
	xor.b64  	%rd7016, %rd7014, %rd7015;
	shf.l.wrap.b32 	%r4856, %r4850, %r4851, 23;
	shf.l.wrap.b32 	%r4857, %r4851, %r4850, 23;
	mov.b64 	%rd7017, {%r4857, %r4856};
	xor.b64  	%rd7018, %rd7016, %rd7017;
	add.s64 	%rd7019, %rd7013, %rd7018;
	add.s64 	%rd7020, %rd7019, -6719396339535248540;
	add.s64 	%rd7021, %rd7020, %rd6884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4858,%dummy}, %rd6995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4859}, %rd6995;
	}
	shf.r.wrap.b32 	%r4860, %r4859, %r4858, 28;
	shf.r.wrap.b32 	%r4861, %r4858, %r4859, 28;
	mov.b64 	%rd7022, {%r4861, %r4860};
	shf.l.wrap.b32 	%r4862, %r4858, %r4859, 30;
	shf.l.wrap.b32 	%r4863, %r4859, %r4858, 30;
	mov.b64 	%rd7023, {%r4863, %r4862};
	xor.b64  	%rd7024, %rd7022, %rd7023;
	shf.l.wrap.b32 	%r4864, %r4858, %r4859, 25;
	shf.l.wrap.b32 	%r4865, %r4859, %r4858, 25;
	mov.b64 	%rd7025, {%r4865, %r4864};
	xor.b64  	%rd7026, %rd7024, %rd7025;
	and.b64  	%rd7027, %rd6995, %rd6958;
	or.b64  	%rd7028, %rd6995, %rd6958;
	and.b64  	%rd7029, %rd7028, %rd6921;
	or.b64  	%rd7030, %rd7029, %rd7027;
	add.s64 	%rd7031, %rd7030, %rd7026;
	add.s64 	%rd7032, %rd7031, %rd7020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4866,%dummy}, %rd6971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4867}, %rd6971;
	}
	shf.r.wrap.b32 	%r4868, %r4867, %r4866, 19;
	shf.r.wrap.b32 	%r4869, %r4866, %r4867, 19;
	mov.b64 	%rd7033, {%r4869, %r4868};
	shf.l.wrap.b32 	%r4870, %r4866, %r4867, 3;
	shf.l.wrap.b32 	%r4871, %r4867, %r4866, 3;
	mov.b64 	%rd7034, {%r4871, %r4870};
	xor.b64  	%rd7035, %rd7033, %rd7034;
	shr.u64 	%rd7036, %rd6971, 6;
	xor.b64  	%rd7037, %rd7035, %rd7036;
	shf.r.wrap.b32 	%r4872, %r4527, %r4526, 1;
	shf.r.wrap.b32 	%r4873, %r4526, %r4527, 1;
	mov.b64 	%rd7038, {%r4873, %r4872};
	shf.r.wrap.b32 	%r4874, %r4527, %r4526, 8;
	shf.r.wrap.b32 	%r4875, %r4526, %r4527, 8;
	mov.b64 	%rd7039, {%r4875, %r4874};
	xor.b64  	%rd7040, %rd7038, %rd7039;
	shr.u64 	%rd7041, %rd6490, 7;
	xor.b64  	%rd7042, %rd7040, %rd7041;
	add.s64 	%rd7043, %rd7037, %rd6453;
	add.s64 	%rd7044, %rd7043, %rd6786;
	add.s64 	%rd7045, %rd7044, %rd7042;
	add.s64 	%rd7046, %rd7045, %rd6910;
	xor.b64  	%rd7047, %rd6984, %rd6947;
	and.b64  	%rd7048, %rd7021, %rd7047;
	xor.b64  	%rd7049, %rd7048, %rd6947;
	add.s64 	%rd7050, %rd7046, %rd7049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4876,%dummy}, %rd7021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4877}, %rd7021;
	}
	shf.r.wrap.b32 	%r4878, %r4877, %r4876, 14;
	shf.r.wrap.b32 	%r4879, %r4876, %r4877, 14;
	mov.b64 	%rd7051, {%r4879, %r4878};
	shf.r.wrap.b32 	%r4880, %r4877, %r4876, 18;
	shf.r.wrap.b32 	%r4881, %r4876, %r4877, 18;
	mov.b64 	%rd7052, {%r4881, %r4880};
	xor.b64  	%rd7053, %rd7051, %rd7052;
	shf.l.wrap.b32 	%r4882, %r4876, %r4877, 23;
	shf.l.wrap.b32 	%r4883, %r4877, %r4876, 23;
	mov.b64 	%rd7054, {%r4883, %r4882};
	xor.b64  	%rd7055, %rd7053, %rd7054;
	add.s64 	%rd7056, %rd7050, %rd7055;
	add.s64 	%rd7057, %rd7056, -6333637450476146687;
	add.s64 	%rd7058, %rd7057, %rd6921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4884,%dummy}, %rd7032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4885}, %rd7032;
	}
	shf.r.wrap.b32 	%r4886, %r4885, %r4884, 28;
	shf.r.wrap.b32 	%r4887, %r4884, %r4885, 28;
	mov.b64 	%rd7059, {%r4887, %r4886};
	shf.l.wrap.b32 	%r4888, %r4884, %r4885, 30;
	shf.l.wrap.b32 	%r4889, %r4885, %r4884, 30;
	mov.b64 	%rd7060, {%r4889, %r4888};
	xor.b64  	%rd7061, %rd7059, %rd7060;
	shf.l.wrap.b32 	%r4890, %r4884, %r4885, 25;
	shf.l.wrap.b32 	%r4891, %r4885, %r4884, 25;
	mov.b64 	%rd7062, {%r4891, %r4890};
	xor.b64  	%rd7063, %rd7061, %rd7062;
	and.b64  	%rd7064, %rd7032, %rd6995;
	or.b64  	%rd7065, %rd7032, %rd6995;
	and.b64  	%rd7066, %rd7065, %rd6958;
	or.b64  	%rd7067, %rd7066, %rd7064;
	add.s64 	%rd7068, %rd7067, %rd7063;
	add.s64 	%rd7069, %rd7068, %rd7057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4892,%dummy}, %rd7008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4893}, %rd7008;
	}
	shf.r.wrap.b32 	%r4894, %r4893, %r4892, 19;
	shf.r.wrap.b32 	%r4895, %r4892, %r4893, 19;
	mov.b64 	%rd7070, {%r4895, %r4894};
	shf.l.wrap.b32 	%r4896, %r4892, %r4893, 3;
	shf.l.wrap.b32 	%r4897, %r4893, %r4892, 3;
	mov.b64 	%rd7071, {%r4897, %r4896};
	xor.b64  	%rd7072, %rd7070, %rd7071;
	shr.u64 	%rd7073, %rd7008, 6;
	xor.b64  	%rd7074, %rd7072, %rd7073;
	shf.r.wrap.b32 	%r4898, %r4555, %r4554, 1;
	shf.r.wrap.b32 	%r4899, %r4554, %r4555, 1;
	mov.b64 	%rd7075, {%r4899, %r4898};
	shf.r.wrap.b32 	%r4900, %r4555, %r4554, 8;
	shf.r.wrap.b32 	%r4901, %r4554, %r4555, 8;
	mov.b64 	%rd7076, {%r4901, %r4900};
	xor.b64  	%rd7077, %rd7075, %rd7076;
	shr.u64 	%rd7078, %rd6527, 7;
	xor.b64  	%rd7079, %rd7077, %rd7078;
	add.s64 	%rd7080, %rd7074, %rd6490;
	add.s64 	%rd7081, %rd7080, %rd6823;
	add.s64 	%rd7082, %rd7081, %rd7079;
	add.s64 	%rd7083, %rd7082, %rd6947;
	xor.b64  	%rd7084, %rd7021, %rd6984;
	and.b64  	%rd7085, %rd7058, %rd7084;
	xor.b64  	%rd7086, %rd7085, %rd6984;
	add.s64 	%rd7087, %rd7083, %rd7086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4902,%dummy}, %rd7058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4903}, %rd7058;
	}
	shf.r.wrap.b32 	%r4904, %r4903, %r4902, 14;
	shf.r.wrap.b32 	%r4905, %r4902, %r4903, 14;
	mov.b64 	%rd7088, {%r4905, %r4904};
	shf.r.wrap.b32 	%r4906, %r4903, %r4902, 18;
	shf.r.wrap.b32 	%r4907, %r4902, %r4903, 18;
	mov.b64 	%rd7089, {%r4907, %r4906};
	xor.b64  	%rd7090, %rd7088, %rd7089;
	shf.l.wrap.b32 	%r4908, %r4902, %r4903, 23;
	shf.l.wrap.b32 	%r4909, %r4903, %r4902, 23;
	mov.b64 	%rd7091, {%r4909, %r4908};
	xor.b64  	%rd7092, %rd7090, %rd7091;
	add.s64 	%rd7093, %rd7087, %rd7092;
	add.s64 	%rd7094, %rd7093, -4446306890439682159;
	add.s64 	%rd7095, %rd7094, %rd6958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4910,%dummy}, %rd7069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4911}, %rd7069;
	}
	shf.r.wrap.b32 	%r4912, %r4911, %r4910, 28;
	shf.r.wrap.b32 	%r4913, %r4910, %r4911, 28;
	mov.b64 	%rd7096, {%r4913, %r4912};
	shf.l.wrap.b32 	%r4914, %r4910, %r4911, 30;
	shf.l.wrap.b32 	%r4915, %r4911, %r4910, 30;
	mov.b64 	%rd7097, {%r4915, %r4914};
	xor.b64  	%rd7098, %rd7096, %rd7097;
	shf.l.wrap.b32 	%r4916, %r4910, %r4911, 25;
	shf.l.wrap.b32 	%r4917, %r4911, %r4910, 25;
	mov.b64 	%rd7099, {%r4917, %r4916};
	xor.b64  	%rd7100, %rd7098, %rd7099;
	and.b64  	%rd7101, %rd7069, %rd7032;
	or.b64  	%rd7102, %rd7069, %rd7032;
	and.b64  	%rd7103, %rd7102, %rd6995;
	or.b64  	%rd7104, %rd7103, %rd7101;
	add.s64 	%rd7105, %rd7104, %rd7100;
	add.s64 	%rd7106, %rd7105, %rd7094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4918,%dummy}, %rd7045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4919}, %rd7045;
	}
	shf.r.wrap.b32 	%r4920, %r4919, %r4918, 19;
	shf.r.wrap.b32 	%r4921, %r4918, %r4919, 19;
	mov.b64 	%rd7107, {%r4921, %r4920};
	shf.l.wrap.b32 	%r4922, %r4918, %r4919, 3;
	shf.l.wrap.b32 	%r4923, %r4919, %r4918, 3;
	mov.b64 	%rd7108, {%r4923, %r4922};
	xor.b64  	%rd7109, %rd7107, %rd7108;
	shr.u64 	%rd7110, %rd7045, 6;
	xor.b64  	%rd7111, %rd7109, %rd7110;
	shf.r.wrap.b32 	%r4924, %r4581, %r4580, 1;
	shf.r.wrap.b32 	%r4925, %r4580, %r4581, 1;
	mov.b64 	%rd7112, {%r4925, %r4924};
	shf.r.wrap.b32 	%r4926, %r4581, %r4580, 8;
	shf.r.wrap.b32 	%r4927, %r4580, %r4581, 8;
	mov.b64 	%rd7113, {%r4927, %r4926};
	xor.b64  	%rd7114, %rd7112, %rd7113;
	shr.u64 	%rd7115, %rd6564, 7;
	xor.b64  	%rd7116, %rd7114, %rd7115;
	add.s64 	%rd7117, %rd7111, %rd6527;
	add.s64 	%rd7118, %rd7117, %rd6860;
	add.s64 	%rd7119, %rd7118, %rd7116;
	add.s64 	%rd7120, %rd7119, %rd6984;
	xor.b64  	%rd7121, %rd7058, %rd7021;
	and.b64  	%rd7122, %rd7095, %rd7121;
	xor.b64  	%rd7123, %rd7122, %rd7021;
	add.s64 	%rd7124, %rd7120, %rd7123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4928,%dummy}, %rd7095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4929}, %rd7095;
	}
	shf.r.wrap.b32 	%r4930, %r4929, %r4928, 14;
	shf.r.wrap.b32 	%r4931, %r4928, %r4929, 14;
	mov.b64 	%rd7125, {%r4931, %r4930};
	shf.r.wrap.b32 	%r4932, %r4929, %r4928, 18;
	shf.r.wrap.b32 	%r4933, %r4928, %r4929, 18;
	mov.b64 	%rd7126, {%r4933, %r4932};
	xor.b64  	%rd7127, %rd7125, %rd7126;
	shf.l.wrap.b32 	%r4934, %r4928, %r4929, 23;
	shf.l.wrap.b32 	%r4935, %r4929, %r4928, 23;
	mov.b64 	%rd7128, {%r4935, %r4934};
	xor.b64  	%rd7129, %rd7127, %rd7128;
	add.s64 	%rd7130, %rd7124, %rd7129;
	add.s64 	%rd7131, %rd7130, -4076793802049405392;
	add.s64 	%rd7132, %rd7131, %rd6995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4936,%dummy}, %rd7106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4937}, %rd7106;
	}
	shf.r.wrap.b32 	%r4938, %r4937, %r4936, 28;
	shf.r.wrap.b32 	%r4939, %r4936, %r4937, 28;
	mov.b64 	%rd7133, {%r4939, %r4938};
	shf.l.wrap.b32 	%r4940, %r4936, %r4937, 30;
	shf.l.wrap.b32 	%r4941, %r4937, %r4936, 30;
	mov.b64 	%rd7134, {%r4941, %r4940};
	xor.b64  	%rd7135, %rd7133, %rd7134;
	shf.l.wrap.b32 	%r4942, %r4936, %r4937, 25;
	shf.l.wrap.b32 	%r4943, %r4937, %r4936, 25;
	mov.b64 	%rd7136, {%r4943, %r4942};
	xor.b64  	%rd7137, %rd7135, %rd7136;
	and.b64  	%rd7138, %rd7106, %rd7069;
	or.b64  	%rd7139, %rd7106, %rd7069;
	and.b64  	%rd7140, %rd7139, %rd7032;
	or.b64  	%rd7141, %rd7140, %rd7138;
	add.s64 	%rd7142, %rd7141, %rd7137;
	add.s64 	%rd7143, %rd7142, %rd7131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4944,%dummy}, %rd7082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4945}, %rd7082;
	}
	shf.r.wrap.b32 	%r4946, %r4945, %r4944, 19;
	shf.r.wrap.b32 	%r4947, %r4944, %r4945, 19;
	mov.b64 	%rd7144, {%r4947, %r4946};
	shf.l.wrap.b32 	%r4948, %r4944, %r4945, 3;
	shf.l.wrap.b32 	%r4949, %r4945, %r4944, 3;
	mov.b64 	%rd7145, {%r4949, %r4948};
	xor.b64  	%rd7146, %rd7144, %rd7145;
	shr.u64 	%rd7147, %rd7082, 6;
	xor.b64  	%rd7148, %rd7146, %rd7147;
	shf.r.wrap.b32 	%r4950, %r4607, %r4606, 1;
	shf.r.wrap.b32 	%r4951, %r4606, %r4607, 1;
	mov.b64 	%rd7149, {%r4951, %r4950};
	shf.r.wrap.b32 	%r4952, %r4607, %r4606, 8;
	shf.r.wrap.b32 	%r4953, %r4606, %r4607, 8;
	mov.b64 	%rd7150, {%r4953, %r4952};
	xor.b64  	%rd7151, %rd7149, %rd7150;
	shr.u64 	%rd7152, %rd6601, 7;
	xor.b64  	%rd7153, %rd7151, %rd7152;
	add.s64 	%rd7154, %rd7148, %rd6564;
	add.s64 	%rd7155, %rd7154, %rd6897;
	add.s64 	%rd7156, %rd7155, %rd7153;
	add.s64 	%rd7157, %rd7156, %rd7021;
	xor.b64  	%rd7158, %rd7095, %rd7058;
	and.b64  	%rd7159, %rd7132, %rd7158;
	xor.b64  	%rd7160, %rd7159, %rd7058;
	add.s64 	%rd7161, %rd7157, %rd7160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4954,%dummy}, %rd7132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4955}, %rd7132;
	}
	shf.r.wrap.b32 	%r4956, %r4955, %r4954, 14;
	shf.r.wrap.b32 	%r4957, %r4954, %r4955, 14;
	mov.b64 	%rd7162, {%r4957, %r4956};
	shf.r.wrap.b32 	%r4958, %r4955, %r4954, 18;
	shf.r.wrap.b32 	%r4959, %r4954, %r4955, 18;
	mov.b64 	%rd7163, {%r4959, %r4958};
	xor.b64  	%rd7164, %rd7162, %rd7163;
	shf.l.wrap.b32 	%r4960, %r4954, %r4955, 23;
	shf.l.wrap.b32 	%r4961, %r4955, %r4954, 23;
	mov.b64 	%rd7165, {%r4961, %r4960};
	xor.b64  	%rd7166, %rd7164, %rd7165;
	add.s64 	%rd7167, %rd7161, %rd7166;
	add.s64 	%rd7168, %rd7167, -3345356375505022440;
	add.s64 	%rd7169, %rd7168, %rd7032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4962,%dummy}, %rd7143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4963}, %rd7143;
	}
	shf.r.wrap.b32 	%r4964, %r4963, %r4962, 28;
	shf.r.wrap.b32 	%r4965, %r4962, %r4963, 28;
	mov.b64 	%rd7170, {%r4965, %r4964};
	shf.l.wrap.b32 	%r4966, %r4962, %r4963, 30;
	shf.l.wrap.b32 	%r4967, %r4963, %r4962, 30;
	mov.b64 	%rd7171, {%r4967, %r4966};
	xor.b64  	%rd7172, %rd7170, %rd7171;
	shf.l.wrap.b32 	%r4968, %r4962, %r4963, 25;
	shf.l.wrap.b32 	%r4969, %r4963, %r4962, 25;
	mov.b64 	%rd7173, {%r4969, %r4968};
	xor.b64  	%rd7174, %rd7172, %rd7173;
	and.b64  	%rd7175, %rd7143, %rd7106;
	or.b64  	%rd7176, %rd7143, %rd7106;
	and.b64  	%rd7177, %rd7176, %rd7069;
	or.b64  	%rd7178, %rd7177, %rd7175;
	add.s64 	%rd7179, %rd7178, %rd7174;
	add.s64 	%rd7180, %rd7179, %rd7168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4970,%dummy}, %rd7119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4971}, %rd7119;
	}
	shf.r.wrap.b32 	%r4972, %r4971, %r4970, 19;
	shf.r.wrap.b32 	%r4973, %r4970, %r4971, 19;
	mov.b64 	%rd7181, {%r4973, %r4972};
	shf.l.wrap.b32 	%r4974, %r4970, %r4971, 3;
	shf.l.wrap.b32 	%r4975, %r4971, %r4970, 3;
	mov.b64 	%rd7182, {%r4975, %r4974};
	xor.b64  	%rd7183, %rd7181, %rd7182;
	shr.u64 	%rd7184, %rd7119, 6;
	xor.b64  	%rd7185, %rd7183, %rd7184;
	shf.r.wrap.b32 	%r4976, %r4633, %r4632, 1;
	shf.r.wrap.b32 	%r4977, %r4632, %r4633, 1;
	mov.b64 	%rd7186, {%r4977, %r4976};
	shf.r.wrap.b32 	%r4978, %r4633, %r4632, 8;
	shf.r.wrap.b32 	%r4979, %r4632, %r4633, 8;
	mov.b64 	%rd7187, {%r4979, %r4978};
	xor.b64  	%rd7188, %rd7186, %rd7187;
	shr.u64 	%rd7189, %rd6638, 7;
	xor.b64  	%rd7190, %rd7188, %rd7189;
	add.s64 	%rd7191, %rd7185, %rd6601;
	add.s64 	%rd7192, %rd7191, %rd6934;
	add.s64 	%rd7193, %rd7192, %rd7190;
	add.s64 	%rd7194, %rd7193, %rd7058;
	xor.b64  	%rd7195, %rd7132, %rd7095;
	and.b64  	%rd7196, %rd7169, %rd7195;
	xor.b64  	%rd7197, %rd7196, %rd7095;
	add.s64 	%rd7198, %rd7194, %rd7197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4980,%dummy}, %rd7169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4981}, %rd7169;
	}
	shf.r.wrap.b32 	%r4982, %r4981, %r4980, 14;
	shf.r.wrap.b32 	%r4983, %r4980, %r4981, 14;
	mov.b64 	%rd7199, {%r4983, %r4982};
	shf.r.wrap.b32 	%r4984, %r4981, %r4980, 18;
	shf.r.wrap.b32 	%r4985, %r4980, %r4981, 18;
	mov.b64 	%rd7200, {%r4985, %r4984};
	xor.b64  	%rd7201, %rd7199, %rd7200;
	shf.l.wrap.b32 	%r4986, %r4980, %r4981, 23;
	shf.l.wrap.b32 	%r4987, %r4981, %r4980, 23;
	mov.b64 	%rd7202, {%r4987, %r4986};
	xor.b64  	%rd7203, %rd7201, %rd7202;
	add.s64 	%rd7204, %rd7198, %rd7203;
	add.s64 	%rd7205, %rd7204, -2983346525034927856;
	add.s64 	%rd7206, %rd7205, %rd7069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4988,%dummy}, %rd7180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4989}, %rd7180;
	}
	shf.r.wrap.b32 	%r4990, %r4989, %r4988, 28;
	shf.r.wrap.b32 	%r4991, %r4988, %r4989, 28;
	mov.b64 	%rd7207, {%r4991, %r4990};
	shf.l.wrap.b32 	%r4992, %r4988, %r4989, 30;
	shf.l.wrap.b32 	%r4993, %r4989, %r4988, 30;
	mov.b64 	%rd7208, {%r4993, %r4992};
	xor.b64  	%rd7209, %rd7207, %rd7208;
	shf.l.wrap.b32 	%r4994, %r4988, %r4989, 25;
	shf.l.wrap.b32 	%r4995, %r4989, %r4988, 25;
	mov.b64 	%rd7210, {%r4995, %r4994};
	xor.b64  	%rd7211, %rd7209, %rd7210;
	and.b64  	%rd7212, %rd7180, %rd7143;
	or.b64  	%rd7213, %rd7180, %rd7143;
	and.b64  	%rd7214, %rd7213, %rd7106;
	or.b64  	%rd7215, %rd7214, %rd7212;
	add.s64 	%rd7216, %rd7215, %rd7211;
	add.s64 	%rd7217, %rd7216, %rd7205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4996,%dummy}, %rd7156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4997}, %rd7156;
	}
	shf.r.wrap.b32 	%r4998, %r4997, %r4996, 19;
	shf.r.wrap.b32 	%r4999, %r4996, %r4997, 19;
	mov.b64 	%rd7218, {%r4999, %r4998};
	shf.l.wrap.b32 	%r5000, %r4996, %r4997, 3;
	shf.l.wrap.b32 	%r5001, %r4997, %r4996, 3;
	mov.b64 	%rd7219, {%r5001, %r5000};
	xor.b64  	%rd7220, %rd7218, %rd7219;
	shr.u64 	%rd7221, %rd7156, 6;
	xor.b64  	%rd7222, %rd7220, %rd7221;
	shf.r.wrap.b32 	%r5002, %r4659, %r4658, 1;
	shf.r.wrap.b32 	%r5003, %r4658, %r4659, 1;
	mov.b64 	%rd7223, {%r5003, %r5002};
	shf.r.wrap.b32 	%r5004, %r4659, %r4658, 8;
	shf.r.wrap.b32 	%r5005, %r4658, %r4659, 8;
	mov.b64 	%rd7224, {%r5005, %r5004};
	xor.b64  	%rd7225, %rd7223, %rd7224;
	shr.u64 	%rd7226, %rd6675, 7;
	xor.b64  	%rd7227, %rd7225, %rd7226;
	add.s64 	%rd7228, %rd7222, %rd6638;
	add.s64 	%rd7229, %rd7228, %rd6971;
	add.s64 	%rd7230, %rd7229, %rd7227;
	add.s64 	%rd7231, %rd7230, %rd7095;
	xor.b64  	%rd7232, %rd7169, %rd7132;
	and.b64  	%rd7233, %rd7206, %rd7232;
	xor.b64  	%rd7234, %rd7233, %rd7132;
	add.s64 	%rd7235, %rd7231, %rd7234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5006,%dummy}, %rd7206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5007}, %rd7206;
	}
	shf.r.wrap.b32 	%r5008, %r5007, %r5006, 14;
	shf.r.wrap.b32 	%r5009, %r5006, %r5007, 14;
	mov.b64 	%rd7236, {%r5009, %r5008};
	shf.r.wrap.b32 	%r5010, %r5007, %r5006, 18;
	shf.r.wrap.b32 	%r5011, %r5006, %r5007, 18;
	mov.b64 	%rd7237, {%r5011, %r5010};
	xor.b64  	%rd7238, %rd7236, %rd7237;
	shf.l.wrap.b32 	%r5012, %r5006, %r5007, 23;
	shf.l.wrap.b32 	%r5013, %r5007, %r5006, 23;
	mov.b64 	%rd7239, {%r5013, %r5012};
	xor.b64  	%rd7240, %rd7238, %rd7239;
	add.s64 	%rd7241, %rd7235, %rd7240;
	add.s64 	%rd7242, %rd7241, -860691631967231958;
	add.s64 	%rd7243, %rd7242, %rd7106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5014,%dummy}, %rd7217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5015}, %rd7217;
	}
	shf.r.wrap.b32 	%r5016, %r5015, %r5014, 28;
	shf.r.wrap.b32 	%r5017, %r5014, %r5015, 28;
	mov.b64 	%rd7244, {%r5017, %r5016};
	shf.l.wrap.b32 	%r5018, %r5014, %r5015, 30;
	shf.l.wrap.b32 	%r5019, %r5015, %r5014, 30;
	mov.b64 	%rd7245, {%r5019, %r5018};
	xor.b64  	%rd7246, %rd7244, %rd7245;
	shf.l.wrap.b32 	%r5020, %r5014, %r5015, 25;
	shf.l.wrap.b32 	%r5021, %r5015, %r5014, 25;
	mov.b64 	%rd7247, {%r5021, %r5020};
	xor.b64  	%rd7248, %rd7246, %rd7247;
	and.b64  	%rd7249, %rd7217, %rd7180;
	or.b64  	%rd7250, %rd7217, %rd7180;
	and.b64  	%rd7251, %rd7250, %rd7143;
	or.b64  	%rd7252, %rd7251, %rd7249;
	add.s64 	%rd7253, %rd7252, %rd7248;
	add.s64 	%rd7254, %rd7253, %rd7242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5022,%dummy}, %rd7193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5023}, %rd7193;
	}
	shf.r.wrap.b32 	%r5024, %r5023, %r5022, 19;
	shf.r.wrap.b32 	%r5025, %r5022, %r5023, 19;
	mov.b64 	%rd7255, {%r5025, %r5024};
	shf.l.wrap.b32 	%r5026, %r5022, %r5023, 3;
	shf.l.wrap.b32 	%r5027, %r5023, %r5022, 3;
	mov.b64 	%rd7256, {%r5027, %r5026};
	xor.b64  	%rd7257, %rd7255, %rd7256;
	shr.u64 	%rd7258, %rd7193, 6;
	xor.b64  	%rd7259, %rd7257, %rd7258;
	shf.r.wrap.b32 	%r5028, %r4685, %r4684, 1;
	shf.r.wrap.b32 	%r5029, %r4684, %r4685, 1;
	mov.b64 	%rd7260, {%r5029, %r5028};
	shf.r.wrap.b32 	%r5030, %r4685, %r4684, 8;
	shf.r.wrap.b32 	%r5031, %r4684, %r4685, 8;
	mov.b64 	%rd7261, {%r5031, %r5030};
	xor.b64  	%rd7262, %rd7260, %rd7261;
	shr.u64 	%rd7263, %rd6712, 7;
	xor.b64  	%rd7264, %rd7262, %rd7263;
	add.s64 	%rd7265, %rd7259, %rd6675;
	add.s64 	%rd7266, %rd7265, %rd7008;
	add.s64 	%rd7267, %rd7266, %rd7264;
	add.s64 	%rd7268, %rd7267, %rd7132;
	xor.b64  	%rd7269, %rd7206, %rd7169;
	and.b64  	%rd7270, %rd7243, %rd7269;
	xor.b64  	%rd7271, %rd7270, %rd7169;
	add.s64 	%rd7272, %rd7268, %rd7271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5032,%dummy}, %rd7243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd7243;
	}
	shf.r.wrap.b32 	%r5034, %r5033, %r5032, 14;
	shf.r.wrap.b32 	%r5035, %r5032, %r5033, 14;
	mov.b64 	%rd7273, {%r5035, %r5034};
	shf.r.wrap.b32 	%r5036, %r5033, %r5032, 18;
	shf.r.wrap.b32 	%r5037, %r5032, %r5033, 18;
	mov.b64 	%rd7274, {%r5037, %r5036};
	xor.b64  	%rd7275, %rd7273, %rd7274;
	shf.l.wrap.b32 	%r5038, %r5032, %r5033, 23;
	shf.l.wrap.b32 	%r5039, %r5033, %r5032, 23;
	mov.b64 	%rd7276, {%r5039, %r5038};
	xor.b64  	%rd7277, %rd7275, %rd7276;
	add.s64 	%rd7278, %rd7272, %rd7277;
	add.s64 	%rd7279, %rd7278, 1182934255886127544;
	add.s64 	%rd7280, %rd7279, %rd7143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5040,%dummy}, %rd7254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5041}, %rd7254;
	}
	shf.r.wrap.b32 	%r5042, %r5041, %r5040, 28;
	shf.r.wrap.b32 	%r5043, %r5040, %r5041, 28;
	mov.b64 	%rd7281, {%r5043, %r5042};
	shf.l.wrap.b32 	%r5044, %r5040, %r5041, 30;
	shf.l.wrap.b32 	%r5045, %r5041, %r5040, 30;
	mov.b64 	%rd7282, {%r5045, %r5044};
	xor.b64  	%rd7283, %rd7281, %rd7282;
	shf.l.wrap.b32 	%r5046, %r5040, %r5041, 25;
	shf.l.wrap.b32 	%r5047, %r5041, %r5040, 25;
	mov.b64 	%rd7284, {%r5047, %r5046};
	xor.b64  	%rd7285, %rd7283, %rd7284;
	and.b64  	%rd7286, %rd7254, %rd7217;
	or.b64  	%rd7287, %rd7254, %rd7217;
	and.b64  	%rd7288, %rd7287, %rd7180;
	or.b64  	%rd7289, %rd7288, %rd7286;
	add.s64 	%rd7290, %rd7289, %rd7285;
	add.s64 	%rd7291, %rd7290, %rd7279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5048,%dummy}, %rd7230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5049}, %rd7230;
	}
	shf.r.wrap.b32 	%r5050, %r5049, %r5048, 19;
	shf.r.wrap.b32 	%r5051, %r5048, %r5049, 19;
	mov.b64 	%rd7292, {%r5051, %r5050};
	shf.l.wrap.b32 	%r5052, %r5048, %r5049, 3;
	shf.l.wrap.b32 	%r5053, %r5049, %r5048, 3;
	mov.b64 	%rd7293, {%r5053, %r5052};
	xor.b64  	%rd7294, %rd7292, %rd7293;
	shr.u64 	%rd7295, %rd7230, 6;
	xor.b64  	%rd7296, %rd7294, %rd7295;
	shf.r.wrap.b32 	%r5054, %r4711, %r4710, 1;
	shf.r.wrap.b32 	%r5055, %r4710, %r4711, 1;
	mov.b64 	%rd7297, {%r5055, %r5054};
	shf.r.wrap.b32 	%r5056, %r4711, %r4710, 8;
	shf.r.wrap.b32 	%r5057, %r4710, %r4711, 8;
	mov.b64 	%rd7298, {%r5057, %r5056};
	xor.b64  	%rd7299, %rd7297, %rd7298;
	shr.u64 	%rd7300, %rd6749, 7;
	xor.b64  	%rd7301, %rd7299, %rd7300;
	add.s64 	%rd7302, %rd7296, %rd6712;
	add.s64 	%rd7303, %rd7302, %rd7045;
	add.s64 	%rd7304, %rd7303, %rd7301;
	add.s64 	%rd7305, %rd7304, %rd7169;
	xor.b64  	%rd7306, %rd7243, %rd7206;
	and.b64  	%rd7307, %rd7280, %rd7306;
	xor.b64  	%rd7308, %rd7307, %rd7206;
	add.s64 	%rd7309, %rd7305, %rd7308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5058,%dummy}, %rd7280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5059}, %rd7280;
	}
	shf.r.wrap.b32 	%r5060, %r5059, %r5058, 14;
	shf.r.wrap.b32 	%r5061, %r5058, %r5059, 14;
	mov.b64 	%rd7310, {%r5061, %r5060};
	shf.r.wrap.b32 	%r5062, %r5059, %r5058, 18;
	shf.r.wrap.b32 	%r5063, %r5058, %r5059, 18;
	mov.b64 	%rd7311, {%r5063, %r5062};
	xor.b64  	%rd7312, %rd7310, %rd7311;
	shf.l.wrap.b32 	%r5064, %r5058, %r5059, 23;
	shf.l.wrap.b32 	%r5065, %r5059, %r5058, 23;
	mov.b64 	%rd7313, {%r5065, %r5064};
	xor.b64  	%rd7314, %rd7312, %rd7313;
	add.s64 	%rd7315, %rd7309, %rd7314;
	add.s64 	%rd7316, %rd7315, 1847814050463011016;
	add.s64 	%rd7317, %rd7316, %rd7180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5066,%dummy}, %rd7291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5067}, %rd7291;
	}
	shf.r.wrap.b32 	%r5068, %r5067, %r5066, 28;
	shf.r.wrap.b32 	%r5069, %r5066, %r5067, 28;
	mov.b64 	%rd7318, {%r5069, %r5068};
	shf.l.wrap.b32 	%r5070, %r5066, %r5067, 30;
	shf.l.wrap.b32 	%r5071, %r5067, %r5066, 30;
	mov.b64 	%rd7319, {%r5071, %r5070};
	xor.b64  	%rd7320, %rd7318, %rd7319;
	shf.l.wrap.b32 	%r5072, %r5066, %r5067, 25;
	shf.l.wrap.b32 	%r5073, %r5067, %r5066, 25;
	mov.b64 	%rd7321, {%r5073, %r5072};
	xor.b64  	%rd7322, %rd7320, %rd7321;
	and.b64  	%rd7323, %rd7291, %rd7254;
	or.b64  	%rd7324, %rd7291, %rd7254;
	and.b64  	%rd7325, %rd7324, %rd7217;
	or.b64  	%rd7326, %rd7325, %rd7323;
	add.s64 	%rd7327, %rd7326, %rd7322;
	add.s64 	%rd7328, %rd7327, %rd7316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5074,%dummy}, %rd7267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5075}, %rd7267;
	}
	shf.r.wrap.b32 	%r5076, %r5075, %r5074, 19;
	shf.r.wrap.b32 	%r5077, %r5074, %r5075, 19;
	mov.b64 	%rd7329, {%r5077, %r5076};
	shf.l.wrap.b32 	%r5078, %r5074, %r5075, 3;
	shf.l.wrap.b32 	%r5079, %r5075, %r5074, 3;
	mov.b64 	%rd7330, {%r5079, %r5078};
	xor.b64  	%rd7331, %rd7329, %rd7330;
	shr.u64 	%rd7332, %rd7267, 6;
	xor.b64  	%rd7333, %rd7331, %rd7332;
	shf.r.wrap.b32 	%r5080, %r4737, %r4736, 1;
	shf.r.wrap.b32 	%r5081, %r4736, %r4737, 1;
	mov.b64 	%rd7334, {%r5081, %r5080};
	shf.r.wrap.b32 	%r5082, %r4737, %r4736, 8;
	shf.r.wrap.b32 	%r5083, %r4736, %r4737, 8;
	mov.b64 	%rd7335, {%r5083, %r5082};
	xor.b64  	%rd7336, %rd7334, %rd7335;
	shr.u64 	%rd7337, %rd6786, 7;
	xor.b64  	%rd7338, %rd7336, %rd7337;
	add.s64 	%rd7339, %rd7333, %rd6749;
	add.s64 	%rd7340, %rd7339, %rd7082;
	add.s64 	%rd7341, %rd7340, %rd7338;
	add.s64 	%rd7342, %rd7341, %rd7206;
	xor.b64  	%rd7343, %rd7280, %rd7243;
	and.b64  	%rd7344, %rd7317, %rd7343;
	xor.b64  	%rd7345, %rd7344, %rd7243;
	add.s64 	%rd7346, %rd7342, %rd7345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5084,%dummy}, %rd7317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5085}, %rd7317;
	}
	shf.r.wrap.b32 	%r5086, %r5085, %r5084, 14;
	shf.r.wrap.b32 	%r5087, %r5084, %r5085, 14;
	mov.b64 	%rd7347, {%r5087, %r5086};
	shf.r.wrap.b32 	%r5088, %r5085, %r5084, 18;
	shf.r.wrap.b32 	%r5089, %r5084, %r5085, 18;
	mov.b64 	%rd7348, {%r5089, %r5088};
	xor.b64  	%rd7349, %rd7347, %rd7348;
	shf.l.wrap.b32 	%r5090, %r5084, %r5085, 23;
	shf.l.wrap.b32 	%r5091, %r5085, %r5084, 23;
	mov.b64 	%rd7350, {%r5091, %r5090};
	xor.b64  	%rd7351, %rd7349, %rd7350;
	add.s64 	%rd7352, %rd7346, %rd7351;
	add.s64 	%rd7353, %rd7352, 2177327727835720531;
	add.s64 	%rd7354, %rd7353, %rd7217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5092,%dummy}, %rd7328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5093}, %rd7328;
	}
	shf.r.wrap.b32 	%r5094, %r5093, %r5092, 28;
	shf.r.wrap.b32 	%r5095, %r5092, %r5093, 28;
	mov.b64 	%rd7355, {%r5095, %r5094};
	shf.l.wrap.b32 	%r5096, %r5092, %r5093, 30;
	shf.l.wrap.b32 	%r5097, %r5093, %r5092, 30;
	mov.b64 	%rd7356, {%r5097, %r5096};
	xor.b64  	%rd7357, %rd7355, %rd7356;
	shf.l.wrap.b32 	%r5098, %r5092, %r5093, 25;
	shf.l.wrap.b32 	%r5099, %r5093, %r5092, 25;
	mov.b64 	%rd7358, {%r5099, %r5098};
	xor.b64  	%rd7359, %rd7357, %rd7358;
	and.b64  	%rd7360, %rd7328, %rd7291;
	or.b64  	%rd7361, %rd7328, %rd7291;
	and.b64  	%rd7362, %rd7361, %rd7254;
	or.b64  	%rd7363, %rd7362, %rd7360;
	add.s64 	%rd7364, %rd7363, %rd7359;
	add.s64 	%rd7365, %rd7364, %rd7353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5100,%dummy}, %rd7304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5101}, %rd7304;
	}
	shf.r.wrap.b32 	%r5102, %r5101, %r5100, 19;
	shf.r.wrap.b32 	%r5103, %r5100, %r5101, 19;
	mov.b64 	%rd7366, {%r5103, %r5102};
	shf.l.wrap.b32 	%r5104, %r5100, %r5101, 3;
	shf.l.wrap.b32 	%r5105, %r5101, %r5100, 3;
	mov.b64 	%rd7367, {%r5105, %r5104};
	xor.b64  	%rd7368, %rd7366, %rd7367;
	shr.u64 	%rd7369, %rd7304, 6;
	xor.b64  	%rd7370, %rd7368, %rd7369;
	shf.r.wrap.b32 	%r5106, %r4763, %r4762, 1;
	shf.r.wrap.b32 	%r5107, %r4762, %r4763, 1;
	mov.b64 	%rd7371, {%r5107, %r5106};
	shf.r.wrap.b32 	%r5108, %r4763, %r4762, 8;
	shf.r.wrap.b32 	%r5109, %r4762, %r4763, 8;
	mov.b64 	%rd7372, {%r5109, %r5108};
	xor.b64  	%rd7373, %rd7371, %rd7372;
	shr.u64 	%rd7374, %rd6823, 7;
	xor.b64  	%rd7375, %rd7373, %rd7374;
	add.s64 	%rd7376, %rd7370, %rd6786;
	add.s64 	%rd7377, %rd7376, %rd7119;
	add.s64 	%rd7378, %rd7377, %rd7375;
	add.s64 	%rd7379, %rd7378, %rd7243;
	xor.b64  	%rd7380, %rd7317, %rd7280;
	and.b64  	%rd7381, %rd7354, %rd7380;
	xor.b64  	%rd7382, %rd7381, %rd7280;
	add.s64 	%rd7383, %rd7379, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5110,%dummy}, %rd7354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5111}, %rd7354;
	}
	shf.r.wrap.b32 	%r5112, %r5111, %r5110, 14;
	shf.r.wrap.b32 	%r5113, %r5110, %r5111, 14;
	mov.b64 	%rd7384, {%r5113, %r5112};
	shf.r.wrap.b32 	%r5114, %r5111, %r5110, 18;
	shf.r.wrap.b32 	%r5115, %r5110, %r5111, 18;
	mov.b64 	%rd7385, {%r5115, %r5114};
	xor.b64  	%rd7386, %rd7384, %rd7385;
	shf.l.wrap.b32 	%r5116, %r5110, %r5111, 23;
	shf.l.wrap.b32 	%r5117, %r5111, %r5110, 23;
	mov.b64 	%rd7387, {%r5117, %r5116};
	xor.b64  	%rd7388, %rd7386, %rd7387;
	add.s64 	%rd7389, %rd7383, %rd7388;
	add.s64 	%rd7390, %rd7389, 2830643537854262169;
	add.s64 	%rd7391, %rd7390, %rd7254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5118,%dummy}, %rd7365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5119}, %rd7365;
	}
	shf.r.wrap.b32 	%r5120, %r5119, %r5118, 28;
	shf.r.wrap.b32 	%r5121, %r5118, %r5119, 28;
	mov.b64 	%rd7392, {%r5121, %r5120};
	shf.l.wrap.b32 	%r5122, %r5118, %r5119, 30;
	shf.l.wrap.b32 	%r5123, %r5119, %r5118, 30;
	mov.b64 	%rd7393, {%r5123, %r5122};
	xor.b64  	%rd7394, %rd7392, %rd7393;
	shf.l.wrap.b32 	%r5124, %r5118, %r5119, 25;
	shf.l.wrap.b32 	%r5125, %r5119, %r5118, 25;
	mov.b64 	%rd7395, {%r5125, %r5124};
	xor.b64  	%rd7396, %rd7394, %rd7395;
	and.b64  	%rd7397, %rd7365, %rd7328;
	or.b64  	%rd7398, %rd7365, %rd7328;
	and.b64  	%rd7399, %rd7398, %rd7291;
	or.b64  	%rd7400, %rd7399, %rd7397;
	add.s64 	%rd7401, %rd7400, %rd7396;
	add.s64 	%rd7402, %rd7401, %rd7390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5126,%dummy}, %rd7341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5127}, %rd7341;
	}
	shf.r.wrap.b32 	%r5128, %r5127, %r5126, 19;
	shf.r.wrap.b32 	%r5129, %r5126, %r5127, 19;
	mov.b64 	%rd7403, {%r5129, %r5128};
	shf.l.wrap.b32 	%r5130, %r5126, %r5127, 3;
	shf.l.wrap.b32 	%r5131, %r5127, %r5126, 3;
	mov.b64 	%rd7404, {%r5131, %r5130};
	xor.b64  	%rd7405, %rd7403, %rd7404;
	shr.u64 	%rd7406, %rd7341, 6;
	xor.b64  	%rd7407, %rd7405, %rd7406;
	shf.r.wrap.b32 	%r5132, %r4789, %r4788, 1;
	shf.r.wrap.b32 	%r5133, %r4788, %r4789, 1;
	mov.b64 	%rd7408, {%r5133, %r5132};
	shf.r.wrap.b32 	%r5134, %r4789, %r4788, 8;
	shf.r.wrap.b32 	%r5135, %r4788, %r4789, 8;
	mov.b64 	%rd7409, {%r5135, %r5134};
	xor.b64  	%rd7410, %rd7408, %rd7409;
	shr.u64 	%rd7411, %rd6860, 7;
	xor.b64  	%rd7412, %rd7410, %rd7411;
	add.s64 	%rd7413, %rd7407, %rd6823;
	add.s64 	%rd7414, %rd7413, %rd7156;
	add.s64 	%rd7415, %rd7414, %rd7412;
	add.s64 	%rd7416, %rd7415, %rd7280;
	xor.b64  	%rd7417, %rd7354, %rd7317;
	and.b64  	%rd7418, %rd7391, %rd7417;
	xor.b64  	%rd7419, %rd7418, %rd7317;
	add.s64 	%rd7420, %rd7416, %rd7419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5136,%dummy}, %rd7391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5137}, %rd7391;
	}
	shf.r.wrap.b32 	%r5138, %r5137, %r5136, 14;
	shf.r.wrap.b32 	%r5139, %r5136, %r5137, 14;
	mov.b64 	%rd7421, {%r5139, %r5138};
	shf.r.wrap.b32 	%r5140, %r5137, %r5136, 18;
	shf.r.wrap.b32 	%r5141, %r5136, %r5137, 18;
	mov.b64 	%rd7422, {%r5141, %r5140};
	xor.b64  	%rd7423, %rd7421, %rd7422;
	shf.l.wrap.b32 	%r5142, %r5136, %r5137, 23;
	shf.l.wrap.b32 	%r5143, %r5137, %r5136, 23;
	mov.b64 	%rd7424, {%r5143, %r5142};
	xor.b64  	%rd7425, %rd7423, %rd7424;
	add.s64 	%rd7426, %rd7420, %rd7425;
	add.s64 	%rd7427, %rd7426, 3796741975233480872;
	add.s64 	%rd7428, %rd7427, %rd7291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5144,%dummy}, %rd7402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5145}, %rd7402;
	}
	shf.r.wrap.b32 	%r5146, %r5145, %r5144, 28;
	shf.r.wrap.b32 	%r5147, %r5144, %r5145, 28;
	mov.b64 	%rd7429, {%r5147, %r5146};
	shf.l.wrap.b32 	%r5148, %r5144, %r5145, 30;
	shf.l.wrap.b32 	%r5149, %r5145, %r5144, 30;
	mov.b64 	%rd7430, {%r5149, %r5148};
	xor.b64  	%rd7431, %rd7429, %rd7430;
	shf.l.wrap.b32 	%r5150, %r5144, %r5145, 25;
	shf.l.wrap.b32 	%r5151, %r5145, %r5144, 25;
	mov.b64 	%rd7432, {%r5151, %r5150};
	xor.b64  	%rd7433, %rd7431, %rd7432;
	and.b64  	%rd7434, %rd7402, %rd7365;
	or.b64  	%rd7435, %rd7402, %rd7365;
	and.b64  	%rd7436, %rd7435, %rd7328;
	or.b64  	%rd7437, %rd7436, %rd7434;
	add.s64 	%rd7438, %rd7437, %rd7433;
	add.s64 	%rd7439, %rd7438, %rd7427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5152,%dummy}, %rd7378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5153}, %rd7378;
	}
	shf.r.wrap.b32 	%r5154, %r5153, %r5152, 19;
	shf.r.wrap.b32 	%r5155, %r5152, %r5153, 19;
	mov.b64 	%rd7440, {%r5155, %r5154};
	shf.l.wrap.b32 	%r5156, %r5152, %r5153, 3;
	shf.l.wrap.b32 	%r5157, %r5153, %r5152, 3;
	mov.b64 	%rd7441, {%r5157, %r5156};
	xor.b64  	%rd7442, %rd7440, %rd7441;
	shr.u64 	%rd7443, %rd7378, 6;
	xor.b64  	%rd7444, %rd7442, %rd7443;
	shf.r.wrap.b32 	%r5158, %r4815, %r4814, 1;
	shf.r.wrap.b32 	%r5159, %r4814, %r4815, 1;
	mov.b64 	%rd7445, {%r5159, %r5158};
	shf.r.wrap.b32 	%r5160, %r4815, %r4814, 8;
	shf.r.wrap.b32 	%r5161, %r4814, %r4815, 8;
	mov.b64 	%rd7446, {%r5161, %r5160};
	xor.b64  	%rd7447, %rd7445, %rd7446;
	shr.u64 	%rd7448, %rd6897, 7;
	xor.b64  	%rd7449, %rd7447, %rd7448;
	add.s64 	%rd7450, %rd7444, %rd6860;
	add.s64 	%rd7451, %rd7450, %rd7193;
	add.s64 	%rd7452, %rd7451, %rd7449;
	add.s64 	%rd7453, %rd7452, %rd7317;
	xor.b64  	%rd7454, %rd7391, %rd7354;
	and.b64  	%rd7455, %rd7428, %rd7454;
	xor.b64  	%rd7456, %rd7455, %rd7354;
	add.s64 	%rd7457, %rd7453, %rd7456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5162,%dummy}, %rd7428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5163}, %rd7428;
	}
	shf.r.wrap.b32 	%r5164, %r5163, %r5162, 14;
	shf.r.wrap.b32 	%r5165, %r5162, %r5163, 14;
	mov.b64 	%rd7458, {%r5165, %r5164};
	shf.r.wrap.b32 	%r5166, %r5163, %r5162, 18;
	shf.r.wrap.b32 	%r5167, %r5162, %r5163, 18;
	mov.b64 	%rd7459, {%r5167, %r5166};
	xor.b64  	%rd7460, %rd7458, %rd7459;
	shf.l.wrap.b32 	%r5168, %r5162, %r5163, 23;
	shf.l.wrap.b32 	%r5169, %r5163, %r5162, 23;
	mov.b64 	%rd7461, {%r5169, %r5168};
	xor.b64  	%rd7462, %rd7460, %rd7461;
	add.s64 	%rd7463, %rd7457, %rd7462;
	add.s64 	%rd7464, %rd7463, 4115178125766777443;
	add.s64 	%rd7465, %rd7464, %rd7328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5170,%dummy}, %rd7439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5171}, %rd7439;
	}
	shf.r.wrap.b32 	%r5172, %r5171, %r5170, 28;
	shf.r.wrap.b32 	%r5173, %r5170, %r5171, 28;
	mov.b64 	%rd7466, {%r5173, %r5172};
	shf.l.wrap.b32 	%r5174, %r5170, %r5171, 30;
	shf.l.wrap.b32 	%r5175, %r5171, %r5170, 30;
	mov.b64 	%rd7467, {%r5175, %r5174};
	xor.b64  	%rd7468, %rd7466, %rd7467;
	shf.l.wrap.b32 	%r5176, %r5170, %r5171, 25;
	shf.l.wrap.b32 	%r5177, %r5171, %r5170, 25;
	mov.b64 	%rd7469, {%r5177, %r5176};
	xor.b64  	%rd7470, %rd7468, %rd7469;
	and.b64  	%rd7471, %rd7439, %rd7402;
	or.b64  	%rd7472, %rd7439, %rd7402;
	and.b64  	%rd7473, %rd7472, %rd7365;
	or.b64  	%rd7474, %rd7473, %rd7471;
	add.s64 	%rd7475, %rd7474, %rd7470;
	add.s64 	%rd7476, %rd7475, %rd7464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5178,%dummy}, %rd7415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5179}, %rd7415;
	}
	shf.r.wrap.b32 	%r5180, %r5179, %r5178, 19;
	shf.r.wrap.b32 	%r5181, %r5178, %r5179, 19;
	mov.b64 	%rd7477, {%r5181, %r5180};
	shf.l.wrap.b32 	%r5182, %r5178, %r5179, 3;
	shf.l.wrap.b32 	%r5183, %r5179, %r5178, 3;
	mov.b64 	%rd7478, {%r5183, %r5182};
	xor.b64  	%rd7479, %rd7477, %rd7478;
	shr.u64 	%rd7480, %rd7415, 6;
	xor.b64  	%rd7481, %rd7479, %rd7480;
	shf.r.wrap.b32 	%r5184, %r4841, %r4840, 1;
	shf.r.wrap.b32 	%r5185, %r4840, %r4841, 1;
	mov.b64 	%rd7482, {%r5185, %r5184};
	shf.r.wrap.b32 	%r5186, %r4841, %r4840, 8;
	shf.r.wrap.b32 	%r5187, %r4840, %r4841, 8;
	mov.b64 	%rd7483, {%r5187, %r5186};
	xor.b64  	%rd7484, %rd7482, %rd7483;
	shr.u64 	%rd7485, %rd6934, 7;
	xor.b64  	%rd7486, %rd7484, %rd7485;
	add.s64 	%rd7487, %rd7481, %rd6897;
	add.s64 	%rd7488, %rd7487, %rd7230;
	add.s64 	%rd7489, %rd7488, %rd7486;
	add.s64 	%rd7490, %rd7489, %rd7354;
	xor.b64  	%rd7491, %rd7428, %rd7391;
	and.b64  	%rd7492, %rd7465, %rd7491;
	xor.b64  	%rd7493, %rd7492, %rd7391;
	add.s64 	%rd7494, %rd7490, %rd7493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5188,%dummy}, %rd7465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5189}, %rd7465;
	}
	shf.r.wrap.b32 	%r5190, %r5189, %r5188, 14;
	shf.r.wrap.b32 	%r5191, %r5188, %r5189, 14;
	mov.b64 	%rd7495, {%r5191, %r5190};
	shf.r.wrap.b32 	%r5192, %r5189, %r5188, 18;
	shf.r.wrap.b32 	%r5193, %r5188, %r5189, 18;
	mov.b64 	%rd7496, {%r5193, %r5192};
	xor.b64  	%rd7497, %rd7495, %rd7496;
	shf.l.wrap.b32 	%r5194, %r5188, %r5189, 23;
	shf.l.wrap.b32 	%r5195, %r5189, %r5188, 23;
	mov.b64 	%rd7498, {%r5195, %r5194};
	xor.b64  	%rd7499, %rd7497, %rd7498;
	add.s64 	%rd7500, %rd7494, %rd7499;
	add.s64 	%rd7501, %rd7500, 5681478168544905931;
	add.s64 	%rd7502, %rd7501, %rd7365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5196,%dummy}, %rd7476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5197}, %rd7476;
	}
	shf.r.wrap.b32 	%r5198, %r5197, %r5196, 28;
	shf.r.wrap.b32 	%r5199, %r5196, %r5197, 28;
	mov.b64 	%rd7503, {%r5199, %r5198};
	shf.l.wrap.b32 	%r5200, %r5196, %r5197, 30;
	shf.l.wrap.b32 	%r5201, %r5197, %r5196, 30;
	mov.b64 	%rd7504, {%r5201, %r5200};
	xor.b64  	%rd7505, %rd7503, %rd7504;
	shf.l.wrap.b32 	%r5202, %r5196, %r5197, 25;
	shf.l.wrap.b32 	%r5203, %r5197, %r5196, 25;
	mov.b64 	%rd7506, {%r5203, %r5202};
	xor.b64  	%rd7507, %rd7505, %rd7506;
	and.b64  	%rd7508, %rd7476, %rd7439;
	or.b64  	%rd7509, %rd7476, %rd7439;
	and.b64  	%rd7510, %rd7509, %rd7402;
	or.b64  	%rd7511, %rd7510, %rd7508;
	add.s64 	%rd7512, %rd7511, %rd7507;
	add.s64 	%rd7513, %rd7512, %rd7501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5204,%dummy}, %rd7452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5205}, %rd7452;
	}
	shf.r.wrap.b32 	%r5206, %r5205, %r5204, 19;
	shf.r.wrap.b32 	%r5207, %r5204, %r5205, 19;
	mov.b64 	%rd7514, {%r5207, %r5206};
	shf.l.wrap.b32 	%r5208, %r5204, %r5205, 3;
	shf.l.wrap.b32 	%r5209, %r5205, %r5204, 3;
	mov.b64 	%rd7515, {%r5209, %r5208};
	xor.b64  	%rd7516, %rd7514, %rd7515;
	shr.u64 	%rd7517, %rd7452, 6;
	xor.b64  	%rd7518, %rd7516, %rd7517;
	shf.r.wrap.b32 	%r5210, %r4867, %r4866, 1;
	shf.r.wrap.b32 	%r5211, %r4866, %r4867, 1;
	mov.b64 	%rd7519, {%r5211, %r5210};
	shf.r.wrap.b32 	%r5212, %r4867, %r4866, 8;
	shf.r.wrap.b32 	%r5213, %r4866, %r4867, 8;
	mov.b64 	%rd7520, {%r5213, %r5212};
	xor.b64  	%rd7521, %rd7519, %rd7520;
	shr.u64 	%rd7522, %rd6971, 7;
	xor.b64  	%rd7523, %rd7521, %rd7522;
	add.s64 	%rd7524, %rd7518, %rd6934;
	add.s64 	%rd7525, %rd7524, %rd7267;
	add.s64 	%rd7526, %rd7525, %rd7523;
	add.s64 	%rd7527, %rd7526, %rd7391;
	xor.b64  	%rd7528, %rd7465, %rd7428;
	and.b64  	%rd7529, %rd7502, %rd7528;
	xor.b64  	%rd7530, %rd7529, %rd7428;
	add.s64 	%rd7531, %rd7527, %rd7530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5214,%dummy}, %rd7502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5215}, %rd7502;
	}
	shf.r.wrap.b32 	%r5216, %r5215, %r5214, 14;
	shf.r.wrap.b32 	%r5217, %r5214, %r5215, 14;
	mov.b64 	%rd7532, {%r5217, %r5216};
	shf.r.wrap.b32 	%r5218, %r5215, %r5214, 18;
	shf.r.wrap.b32 	%r5219, %r5214, %r5215, 18;
	mov.b64 	%rd7533, {%r5219, %r5218};
	xor.b64  	%rd7534, %rd7532, %rd7533;
	shf.l.wrap.b32 	%r5220, %r5214, %r5215, 23;
	shf.l.wrap.b32 	%r5221, %r5215, %r5214, 23;
	mov.b64 	%rd7535, {%r5221, %r5220};
	xor.b64  	%rd7536, %rd7534, %rd7535;
	add.s64 	%rd7537, %rd7531, %rd7536;
	add.s64 	%rd7538, %rd7537, 6601373596472566643;
	add.s64 	%rd7539, %rd7538, %rd7402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5222,%dummy}, %rd7513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5223}, %rd7513;
	}
	shf.r.wrap.b32 	%r5224, %r5223, %r5222, 28;
	shf.r.wrap.b32 	%r5225, %r5222, %r5223, 28;
	mov.b64 	%rd7540, {%r5225, %r5224};
	shf.l.wrap.b32 	%r5226, %r5222, %r5223, 30;
	shf.l.wrap.b32 	%r5227, %r5223, %r5222, 30;
	mov.b64 	%rd7541, {%r5227, %r5226};
	xor.b64  	%rd7542, %rd7540, %rd7541;
	shf.l.wrap.b32 	%r5228, %r5222, %r5223, 25;
	shf.l.wrap.b32 	%r5229, %r5223, %r5222, 25;
	mov.b64 	%rd7543, {%r5229, %r5228};
	xor.b64  	%rd7544, %rd7542, %rd7543;
	and.b64  	%rd7545, %rd7513, %rd7476;
	or.b64  	%rd7546, %rd7513, %rd7476;
	and.b64  	%rd7547, %rd7546, %rd7439;
	or.b64  	%rd7548, %rd7547, %rd7545;
	add.s64 	%rd7549, %rd7548, %rd7544;
	add.s64 	%rd7550, %rd7549, %rd7538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5230,%dummy}, %rd7489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5231}, %rd7489;
	}
	shf.r.wrap.b32 	%r5232, %r5231, %r5230, 19;
	shf.r.wrap.b32 	%r5233, %r5230, %r5231, 19;
	mov.b64 	%rd7551, {%r5233, %r5232};
	shf.l.wrap.b32 	%r5234, %r5230, %r5231, 3;
	shf.l.wrap.b32 	%r5235, %r5231, %r5230, 3;
	mov.b64 	%rd7552, {%r5235, %r5234};
	xor.b64  	%rd7553, %rd7551, %rd7552;
	shr.u64 	%rd7554, %rd7489, 6;
	xor.b64  	%rd7555, %rd7553, %rd7554;
	shf.r.wrap.b32 	%r5236, %r4893, %r4892, 1;
	shf.r.wrap.b32 	%r5237, %r4892, %r4893, 1;
	mov.b64 	%rd7556, {%r5237, %r5236};
	shf.r.wrap.b32 	%r5238, %r4893, %r4892, 8;
	shf.r.wrap.b32 	%r5239, %r4892, %r4893, 8;
	mov.b64 	%rd7557, {%r5239, %r5238};
	xor.b64  	%rd7558, %rd7556, %rd7557;
	shr.u64 	%rd7559, %rd7008, 7;
	xor.b64  	%rd7560, %rd7558, %rd7559;
	add.s64 	%rd7561, %rd7555, %rd6971;
	add.s64 	%rd7562, %rd7561, %rd7304;
	add.s64 	%rd7563, %rd7562, %rd7560;
	add.s64 	%rd7564, %rd7563, %rd7428;
	xor.b64  	%rd7565, %rd7502, %rd7465;
	and.b64  	%rd7566, %rd7539, %rd7565;
	xor.b64  	%rd7567, %rd7566, %rd7465;
	add.s64 	%rd7568, %rd7564, %rd7567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5240,%dummy}, %rd7539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5241}, %rd7539;
	}
	shf.r.wrap.b32 	%r5242, %r5241, %r5240, 14;
	shf.r.wrap.b32 	%r5243, %r5240, %r5241, 14;
	mov.b64 	%rd7569, {%r5243, %r5242};
	shf.r.wrap.b32 	%r5244, %r5241, %r5240, 18;
	shf.r.wrap.b32 	%r5245, %r5240, %r5241, 18;
	mov.b64 	%rd7570, {%r5245, %r5244};
	xor.b64  	%rd7571, %rd7569, %rd7570;
	shf.l.wrap.b32 	%r5246, %r5240, %r5241, 23;
	shf.l.wrap.b32 	%r5247, %r5241, %r5240, 23;
	mov.b64 	%rd7572, {%r5247, %r5246};
	xor.b64  	%rd7573, %rd7571, %rd7572;
	add.s64 	%rd7574, %rd7568, %rd7573;
	add.s64 	%rd7575, %rd7574, 7507060721942968483;
	add.s64 	%rd7576, %rd7575, %rd7439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5248,%dummy}, %rd7550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd7550;
	}
	shf.r.wrap.b32 	%r5250, %r5249, %r5248, 28;
	shf.r.wrap.b32 	%r5251, %r5248, %r5249, 28;
	mov.b64 	%rd7577, {%r5251, %r5250};
	shf.l.wrap.b32 	%r5252, %r5248, %r5249, 30;
	shf.l.wrap.b32 	%r5253, %r5249, %r5248, 30;
	mov.b64 	%rd7578, {%r5253, %r5252};
	xor.b64  	%rd7579, %rd7577, %rd7578;
	shf.l.wrap.b32 	%r5254, %r5248, %r5249, 25;
	shf.l.wrap.b32 	%r5255, %r5249, %r5248, 25;
	mov.b64 	%rd7580, {%r5255, %r5254};
	xor.b64  	%rd7581, %rd7579, %rd7580;
	and.b64  	%rd7582, %rd7550, %rd7513;
	or.b64  	%rd7583, %rd7550, %rd7513;
	and.b64  	%rd7584, %rd7583, %rd7476;
	or.b64  	%rd7585, %rd7584, %rd7582;
	add.s64 	%rd7586, %rd7585, %rd7581;
	add.s64 	%rd7587, %rd7586, %rd7575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5256,%dummy}, %rd7526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5257}, %rd7526;
	}
	shf.r.wrap.b32 	%r5258, %r5257, %r5256, 19;
	shf.r.wrap.b32 	%r5259, %r5256, %r5257, 19;
	mov.b64 	%rd7588, {%r5259, %r5258};
	shf.l.wrap.b32 	%r5260, %r5256, %r5257, 3;
	shf.l.wrap.b32 	%r5261, %r5257, %r5256, 3;
	mov.b64 	%rd7589, {%r5261, %r5260};
	xor.b64  	%rd7590, %rd7588, %rd7589;
	shr.u64 	%rd7591, %rd7526, 6;
	xor.b64  	%rd7592, %rd7590, %rd7591;
	shf.r.wrap.b32 	%r5262, %r4919, %r4918, 1;
	shf.r.wrap.b32 	%r5263, %r4918, %r4919, 1;
	mov.b64 	%rd7593, {%r5263, %r5262};
	shf.r.wrap.b32 	%r5264, %r4919, %r4918, 8;
	shf.r.wrap.b32 	%r5265, %r4918, %r4919, 8;
	mov.b64 	%rd7594, {%r5265, %r5264};
	xor.b64  	%rd7595, %rd7593, %rd7594;
	shr.u64 	%rd7596, %rd7045, 7;
	xor.b64  	%rd7597, %rd7595, %rd7596;
	add.s64 	%rd7598, %rd7592, %rd7008;
	add.s64 	%rd7599, %rd7598, %rd7341;
	add.s64 	%rd7600, %rd7599, %rd7597;
	add.s64 	%rd7601, %rd7600, %rd7465;
	xor.b64  	%rd7602, %rd7539, %rd7502;
	and.b64  	%rd7603, %rd7576, %rd7602;
	xor.b64  	%rd7604, %rd7603, %rd7502;
	add.s64 	%rd7605, %rd7601, %rd7604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5266,%dummy}, %rd7576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5267}, %rd7576;
	}
	shf.r.wrap.b32 	%r5268, %r5267, %r5266, 14;
	shf.r.wrap.b32 	%r5269, %r5266, %r5267, 14;
	mov.b64 	%rd7606, {%r5269, %r5268};
	shf.r.wrap.b32 	%r5270, %r5267, %r5266, 18;
	shf.r.wrap.b32 	%r5271, %r5266, %r5267, 18;
	mov.b64 	%rd7607, {%r5271, %r5270};
	xor.b64  	%rd7608, %rd7606, %rd7607;
	shf.l.wrap.b32 	%r5272, %r5266, %r5267, 23;
	shf.l.wrap.b32 	%r5273, %r5267, %r5266, 23;
	mov.b64 	%rd7609, {%r5273, %r5272};
	xor.b64  	%rd7610, %rd7608, %rd7609;
	add.s64 	%rd7611, %rd7605, %rd7610;
	add.s64 	%rd7612, %rd7611, 8399075790359081724;
	add.s64 	%rd7613, %rd7612, %rd7476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5274,%dummy}, %rd7587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5275}, %rd7587;
	}
	shf.r.wrap.b32 	%r5276, %r5275, %r5274, 28;
	shf.r.wrap.b32 	%r5277, %r5274, %r5275, 28;
	mov.b64 	%rd7614, {%r5277, %r5276};
	shf.l.wrap.b32 	%r5278, %r5274, %r5275, 30;
	shf.l.wrap.b32 	%r5279, %r5275, %r5274, 30;
	mov.b64 	%rd7615, {%r5279, %r5278};
	xor.b64  	%rd7616, %rd7614, %rd7615;
	shf.l.wrap.b32 	%r5280, %r5274, %r5275, 25;
	shf.l.wrap.b32 	%r5281, %r5275, %r5274, 25;
	mov.b64 	%rd7617, {%r5281, %r5280};
	xor.b64  	%rd7618, %rd7616, %rd7617;
	and.b64  	%rd7619, %rd7587, %rd7550;
	or.b64  	%rd7620, %rd7587, %rd7550;
	and.b64  	%rd7621, %rd7620, %rd7513;
	or.b64  	%rd7622, %rd7621, %rd7619;
	add.s64 	%rd7623, %rd7622, %rd7618;
	add.s64 	%rd7624, %rd7623, %rd7612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5282,%dummy}, %rd7563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5283}, %rd7563;
	}
	shf.r.wrap.b32 	%r5284, %r5283, %r5282, 19;
	shf.r.wrap.b32 	%r5285, %r5282, %r5283, 19;
	mov.b64 	%rd7625, {%r5285, %r5284};
	shf.l.wrap.b32 	%r5286, %r5282, %r5283, 3;
	shf.l.wrap.b32 	%r5287, %r5283, %r5282, 3;
	mov.b64 	%rd7626, {%r5287, %r5286};
	xor.b64  	%rd7627, %rd7625, %rd7626;
	shr.u64 	%rd7628, %rd7563, 6;
	xor.b64  	%rd7629, %rd7627, %rd7628;
	shf.r.wrap.b32 	%r5288, %r4945, %r4944, 1;
	shf.r.wrap.b32 	%r5289, %r4944, %r4945, 1;
	mov.b64 	%rd7630, {%r5289, %r5288};
	shf.r.wrap.b32 	%r5290, %r4945, %r4944, 8;
	shf.r.wrap.b32 	%r5291, %r4944, %r4945, 8;
	mov.b64 	%rd7631, {%r5291, %r5290};
	xor.b64  	%rd7632, %rd7630, %rd7631;
	shr.u64 	%rd7633, %rd7082, 7;
	xor.b64  	%rd7634, %rd7632, %rd7633;
	add.s64 	%rd7635, %rd7629, %rd7045;
	add.s64 	%rd7636, %rd7635, %rd7378;
	add.s64 	%rd7637, %rd7636, %rd7634;
	add.s64 	%rd7638, %rd7637, %rd7502;
	xor.b64  	%rd7639, %rd7576, %rd7539;
	and.b64  	%rd7640, %rd7613, %rd7639;
	xor.b64  	%rd7641, %rd7640, %rd7539;
	add.s64 	%rd7642, %rd7638, %rd7641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5292,%dummy}, %rd7613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5293}, %rd7613;
	}
	shf.r.wrap.b32 	%r5294, %r5293, %r5292, 14;
	shf.r.wrap.b32 	%r5295, %r5292, %r5293, 14;
	mov.b64 	%rd7643, {%r5295, %r5294};
	shf.r.wrap.b32 	%r5296, %r5293, %r5292, 18;
	shf.r.wrap.b32 	%r5297, %r5292, %r5293, 18;
	mov.b64 	%rd7644, {%r5297, %r5296};
	xor.b64  	%rd7645, %rd7643, %rd7644;
	shf.l.wrap.b32 	%r5298, %r5292, %r5293, 23;
	shf.l.wrap.b32 	%r5299, %r5293, %r5292, 23;
	mov.b64 	%rd7646, {%r5299, %r5298};
	xor.b64  	%rd7647, %rd7645, %rd7646;
	add.s64 	%rd7648, %rd7642, %rd7647;
	add.s64 	%rd7649, %rd7648, 8693463985226723168;
	add.s64 	%rd7650, %rd7649, %rd7513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5300,%dummy}, %rd7624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5301}, %rd7624;
	}
	shf.r.wrap.b32 	%r5302, %r5301, %r5300, 28;
	shf.r.wrap.b32 	%r5303, %r5300, %r5301, 28;
	mov.b64 	%rd7651, {%r5303, %r5302};
	shf.l.wrap.b32 	%r5304, %r5300, %r5301, 30;
	shf.l.wrap.b32 	%r5305, %r5301, %r5300, 30;
	mov.b64 	%rd7652, {%r5305, %r5304};
	xor.b64  	%rd7653, %rd7651, %rd7652;
	shf.l.wrap.b32 	%r5306, %r5300, %r5301, 25;
	shf.l.wrap.b32 	%r5307, %r5301, %r5300, 25;
	mov.b64 	%rd7654, {%r5307, %r5306};
	xor.b64  	%rd7655, %rd7653, %rd7654;
	and.b64  	%rd7656, %rd7624, %rd7587;
	or.b64  	%rd7657, %rd7624, %rd7587;
	and.b64  	%rd7658, %rd7657, %rd7550;
	or.b64  	%rd7659, %rd7658, %rd7656;
	add.s64 	%rd7660, %rd7659, %rd7655;
	add.s64 	%rd7661, %rd7660, %rd7649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5308,%dummy}, %rd7600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5309}, %rd7600;
	}
	shf.r.wrap.b32 	%r5310, %r5309, %r5308, 19;
	shf.r.wrap.b32 	%r5311, %r5308, %r5309, 19;
	mov.b64 	%rd7662, {%r5311, %r5310};
	shf.l.wrap.b32 	%r5312, %r5308, %r5309, 3;
	shf.l.wrap.b32 	%r5313, %r5309, %r5308, 3;
	mov.b64 	%rd7663, {%r5313, %r5312};
	xor.b64  	%rd7664, %rd7662, %rd7663;
	shr.u64 	%rd7665, %rd7600, 6;
	xor.b64  	%rd7666, %rd7664, %rd7665;
	shf.r.wrap.b32 	%r5314, %r4971, %r4970, 1;
	shf.r.wrap.b32 	%r5315, %r4970, %r4971, 1;
	mov.b64 	%rd7667, {%r5315, %r5314};
	shf.r.wrap.b32 	%r5316, %r4971, %r4970, 8;
	shf.r.wrap.b32 	%r5317, %r4970, %r4971, 8;
	mov.b64 	%rd7668, {%r5317, %r5316};
	xor.b64  	%rd7669, %rd7667, %rd7668;
	shr.u64 	%rd7670, %rd7119, 7;
	xor.b64  	%rd7671, %rd7669, %rd7670;
	add.s64 	%rd7672, %rd7666, %rd7082;
	add.s64 	%rd7673, %rd7672, %rd7415;
	add.s64 	%rd7674, %rd7673, %rd7671;
	add.s64 	%rd7675, %rd7674, %rd7539;
	xor.b64  	%rd7676, %rd7613, %rd7576;
	and.b64  	%rd7677, %rd7650, %rd7676;
	xor.b64  	%rd7678, %rd7677, %rd7576;
	add.s64 	%rd7679, %rd7675, %rd7678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5318,%dummy}, %rd7650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5319}, %rd7650;
	}
	shf.r.wrap.b32 	%r5320, %r5319, %r5318, 14;
	shf.r.wrap.b32 	%r5321, %r5318, %r5319, 14;
	mov.b64 	%rd7680, {%r5321, %r5320};
	shf.r.wrap.b32 	%r5322, %r5319, %r5318, 18;
	shf.r.wrap.b32 	%r5323, %r5318, %r5319, 18;
	mov.b64 	%rd7681, {%r5323, %r5322};
	xor.b64  	%rd7682, %rd7680, %rd7681;
	shf.l.wrap.b32 	%r5324, %r5318, %r5319, 23;
	shf.l.wrap.b32 	%r5325, %r5319, %r5318, 23;
	mov.b64 	%rd7683, {%r5325, %r5324};
	xor.b64  	%rd7684, %rd7682, %rd7683;
	add.s64 	%rd7685, %rd7679, %rd7684;
	add.s64 	%rd7686, %rd7685, -8878714635349349518;
	add.s64 	%rd7687, %rd7686, %rd7550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5326,%dummy}, %rd7661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5327}, %rd7661;
	}
	shf.r.wrap.b32 	%r5328, %r5327, %r5326, 28;
	shf.r.wrap.b32 	%r5329, %r5326, %r5327, 28;
	mov.b64 	%rd7688, {%r5329, %r5328};
	shf.l.wrap.b32 	%r5330, %r5326, %r5327, 30;
	shf.l.wrap.b32 	%r5331, %r5327, %r5326, 30;
	mov.b64 	%rd7689, {%r5331, %r5330};
	xor.b64  	%rd7690, %rd7688, %rd7689;
	shf.l.wrap.b32 	%r5332, %r5326, %r5327, 25;
	shf.l.wrap.b32 	%r5333, %r5327, %r5326, 25;
	mov.b64 	%rd7691, {%r5333, %r5332};
	xor.b64  	%rd7692, %rd7690, %rd7691;
	and.b64  	%rd7693, %rd7661, %rd7624;
	or.b64  	%rd7694, %rd7661, %rd7624;
	and.b64  	%rd7695, %rd7694, %rd7587;
	or.b64  	%rd7696, %rd7695, %rd7693;
	add.s64 	%rd7697, %rd7696, %rd7692;
	add.s64 	%rd7698, %rd7697, %rd7686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5334,%dummy}, %rd7637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5335}, %rd7637;
	}
	shf.r.wrap.b32 	%r5336, %r5335, %r5334, 19;
	shf.r.wrap.b32 	%r5337, %r5334, %r5335, 19;
	mov.b64 	%rd7699, {%r5337, %r5336};
	shf.l.wrap.b32 	%r5338, %r5334, %r5335, 3;
	shf.l.wrap.b32 	%r5339, %r5335, %r5334, 3;
	mov.b64 	%rd7700, {%r5339, %r5338};
	xor.b64  	%rd7701, %rd7699, %rd7700;
	shr.u64 	%rd7702, %rd7637, 6;
	xor.b64  	%rd7703, %rd7701, %rd7702;
	shf.r.wrap.b32 	%r5340, %r4997, %r4996, 1;
	shf.r.wrap.b32 	%r5341, %r4996, %r4997, 1;
	mov.b64 	%rd7704, {%r5341, %r5340};
	shf.r.wrap.b32 	%r5342, %r4997, %r4996, 8;
	shf.r.wrap.b32 	%r5343, %r4996, %r4997, 8;
	mov.b64 	%rd7705, {%r5343, %r5342};
	xor.b64  	%rd7706, %rd7704, %rd7705;
	shr.u64 	%rd7707, %rd7156, 7;
	xor.b64  	%rd7708, %rd7706, %rd7707;
	add.s64 	%rd7709, %rd7703, %rd7119;
	add.s64 	%rd7710, %rd7709, %rd7452;
	add.s64 	%rd7711, %rd7710, %rd7708;
	add.s64 	%rd7712, %rd7711, %rd7576;
	xor.b64  	%rd7713, %rd7650, %rd7613;
	and.b64  	%rd7714, %rd7687, %rd7713;
	xor.b64  	%rd7715, %rd7714, %rd7613;
	add.s64 	%rd7716, %rd7712, %rd7715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5344,%dummy}, %rd7687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5345}, %rd7687;
	}
	shf.r.wrap.b32 	%r5346, %r5345, %r5344, 14;
	shf.r.wrap.b32 	%r5347, %r5344, %r5345, 14;
	mov.b64 	%rd7717, {%r5347, %r5346};
	shf.r.wrap.b32 	%r5348, %r5345, %r5344, 18;
	shf.r.wrap.b32 	%r5349, %r5344, %r5345, 18;
	mov.b64 	%rd7718, {%r5349, %r5348};
	xor.b64  	%rd7719, %rd7717, %rd7718;
	shf.l.wrap.b32 	%r5350, %r5344, %r5345, 23;
	shf.l.wrap.b32 	%r5351, %r5345, %r5344, 23;
	mov.b64 	%rd7720, {%r5351, %r5350};
	xor.b64  	%rd7721, %rd7719, %rd7720;
	add.s64 	%rd7722, %rd7716, %rd7721;
	add.s64 	%rd7723, %rd7722, -8302665154208450068;
	add.s64 	%rd7724, %rd7723, %rd7587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5352,%dummy}, %rd7698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5353}, %rd7698;
	}
	shf.r.wrap.b32 	%r5354, %r5353, %r5352, 28;
	shf.r.wrap.b32 	%r5355, %r5352, %r5353, 28;
	mov.b64 	%rd7725, {%r5355, %r5354};
	shf.l.wrap.b32 	%r5356, %r5352, %r5353, 30;
	shf.l.wrap.b32 	%r5357, %r5353, %r5352, 30;
	mov.b64 	%rd7726, {%r5357, %r5356};
	xor.b64  	%rd7727, %rd7725, %rd7726;
	shf.l.wrap.b32 	%r5358, %r5352, %r5353, 25;
	shf.l.wrap.b32 	%r5359, %r5353, %r5352, 25;
	mov.b64 	%rd7728, {%r5359, %r5358};
	xor.b64  	%rd7729, %rd7727, %rd7728;
	and.b64  	%rd7730, %rd7698, %rd7661;
	or.b64  	%rd7731, %rd7698, %rd7661;
	and.b64  	%rd7732, %rd7731, %rd7624;
	or.b64  	%rd7733, %rd7732, %rd7730;
	add.s64 	%rd7734, %rd7733, %rd7729;
	add.s64 	%rd7735, %rd7734, %rd7723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5360,%dummy}, %rd7674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5361}, %rd7674;
	}
	shf.r.wrap.b32 	%r5362, %r5361, %r5360, 19;
	shf.r.wrap.b32 	%r5363, %r5360, %r5361, 19;
	mov.b64 	%rd7736, {%r5363, %r5362};
	shf.l.wrap.b32 	%r5364, %r5360, %r5361, 3;
	shf.l.wrap.b32 	%r5365, %r5361, %r5360, 3;
	mov.b64 	%rd7737, {%r5365, %r5364};
	xor.b64  	%rd7738, %rd7736, %rd7737;
	shr.u64 	%rd7739, %rd7674, 6;
	xor.b64  	%rd7740, %rd7738, %rd7739;
	shf.r.wrap.b32 	%r5366, %r5023, %r5022, 1;
	shf.r.wrap.b32 	%r5367, %r5022, %r5023, 1;
	mov.b64 	%rd7741, {%r5367, %r5366};
	shf.r.wrap.b32 	%r5368, %r5023, %r5022, 8;
	shf.r.wrap.b32 	%r5369, %r5022, %r5023, 8;
	mov.b64 	%rd7742, {%r5369, %r5368};
	xor.b64  	%rd7743, %rd7741, %rd7742;
	shr.u64 	%rd7744, %rd7193, 7;
	xor.b64  	%rd7745, %rd7743, %rd7744;
	add.s64 	%rd7746, %rd7740, %rd7156;
	add.s64 	%rd7747, %rd7746, %rd7489;
	add.s64 	%rd7748, %rd7747, %rd7745;
	add.s64 	%rd7749, %rd7748, %rd7613;
	xor.b64  	%rd7750, %rd7687, %rd7650;
	and.b64  	%rd7751, %rd7724, %rd7750;
	xor.b64  	%rd7752, %rd7751, %rd7650;
	add.s64 	%rd7753, %rd7749, %rd7752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5370,%dummy}, %rd7724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5371}, %rd7724;
	}
	shf.r.wrap.b32 	%r5372, %r5371, %r5370, 14;
	shf.r.wrap.b32 	%r5373, %r5370, %r5371, 14;
	mov.b64 	%rd7754, {%r5373, %r5372};
	shf.r.wrap.b32 	%r5374, %r5371, %r5370, 18;
	shf.r.wrap.b32 	%r5375, %r5370, %r5371, 18;
	mov.b64 	%rd7755, {%r5375, %r5374};
	xor.b64  	%rd7756, %rd7754, %rd7755;
	shf.l.wrap.b32 	%r5376, %r5370, %r5371, 23;
	shf.l.wrap.b32 	%r5377, %r5371, %r5370, 23;
	mov.b64 	%rd7757, {%r5377, %r5376};
	xor.b64  	%rd7758, %rd7756, %rd7757;
	add.s64 	%rd7759, %rd7753, %rd7758;
	add.s64 	%rd7760, %rd7759, -8016688836872298968;
	add.s64 	%rd7761, %rd7760, %rd7624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5378,%dummy}, %rd7735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5379}, %rd7735;
	}
	shf.r.wrap.b32 	%r5380, %r5379, %r5378, 28;
	shf.r.wrap.b32 	%r5381, %r5378, %r5379, 28;
	mov.b64 	%rd7762, {%r5381, %r5380};
	shf.l.wrap.b32 	%r5382, %r5378, %r5379, 30;
	shf.l.wrap.b32 	%r5383, %r5379, %r5378, 30;
	mov.b64 	%rd7763, {%r5383, %r5382};
	xor.b64  	%rd7764, %rd7762, %rd7763;
	shf.l.wrap.b32 	%r5384, %r5378, %r5379, 25;
	shf.l.wrap.b32 	%r5385, %r5379, %r5378, 25;
	mov.b64 	%rd7765, {%r5385, %r5384};
	xor.b64  	%rd7766, %rd7764, %rd7765;
	and.b64  	%rd7767, %rd7735, %rd7698;
	or.b64  	%rd7768, %rd7735, %rd7698;
	and.b64  	%rd7769, %rd7768, %rd7661;
	or.b64  	%rd7770, %rd7769, %rd7767;
	add.s64 	%rd7771, %rd7770, %rd7766;
	add.s64 	%rd7772, %rd7771, %rd7760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5386,%dummy}, %rd7711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5387}, %rd7711;
	}
	shf.r.wrap.b32 	%r5388, %r5387, %r5386, 19;
	shf.r.wrap.b32 	%r5389, %r5386, %r5387, 19;
	mov.b64 	%rd7773, {%r5389, %r5388};
	shf.l.wrap.b32 	%r5390, %r5386, %r5387, 3;
	shf.l.wrap.b32 	%r5391, %r5387, %r5386, 3;
	mov.b64 	%rd7774, {%r5391, %r5390};
	xor.b64  	%rd7775, %rd7773, %rd7774;
	shr.u64 	%rd7776, %rd7711, 6;
	xor.b64  	%rd7777, %rd7775, %rd7776;
	shf.r.wrap.b32 	%r5392, %r5049, %r5048, 1;
	shf.r.wrap.b32 	%r5393, %r5048, %r5049, 1;
	mov.b64 	%rd7778, {%r5393, %r5392};
	shf.r.wrap.b32 	%r5394, %r5049, %r5048, 8;
	shf.r.wrap.b32 	%r5395, %r5048, %r5049, 8;
	mov.b64 	%rd7779, {%r5395, %r5394};
	xor.b64  	%rd7780, %rd7778, %rd7779;
	shr.u64 	%rd7781, %rd7230, 7;
	xor.b64  	%rd7782, %rd7780, %rd7781;
	add.s64 	%rd7783, %rd7777, %rd7193;
	add.s64 	%rd7784, %rd7783, %rd7526;
	add.s64 	%rd7785, %rd7784, %rd7782;
	add.s64 	%rd7786, %rd7785, %rd7650;
	xor.b64  	%rd7787, %rd7724, %rd7687;
	and.b64  	%rd7788, %rd7761, %rd7787;
	xor.b64  	%rd7789, %rd7788, %rd7687;
	add.s64 	%rd7790, %rd7786, %rd7789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5396,%dummy}, %rd7761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5397}, %rd7761;
	}
	shf.r.wrap.b32 	%r5398, %r5397, %r5396, 14;
	shf.r.wrap.b32 	%r5399, %r5396, %r5397, 14;
	mov.b64 	%rd7791, {%r5399, %r5398};
	shf.r.wrap.b32 	%r5400, %r5397, %r5396, 18;
	shf.r.wrap.b32 	%r5401, %r5396, %r5397, 18;
	mov.b64 	%rd7792, {%r5401, %r5400};
	xor.b64  	%rd7793, %rd7791, %rd7792;
	shf.l.wrap.b32 	%r5402, %r5396, %r5397, 23;
	shf.l.wrap.b32 	%r5403, %r5397, %r5396, 23;
	mov.b64 	%rd7794, {%r5403, %r5402};
	xor.b64  	%rd7795, %rd7793, %rd7794;
	add.s64 	%rd7796, %rd7790, %rd7795;
	add.s64 	%rd7797, %rd7796, -6606660893046293015;
	add.s64 	%rd7798, %rd7797, %rd7661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5404,%dummy}, %rd7772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5405}, %rd7772;
	}
	shf.r.wrap.b32 	%r5406, %r5405, %r5404, 28;
	shf.r.wrap.b32 	%r5407, %r5404, %r5405, 28;
	mov.b64 	%rd7799, {%r5407, %r5406};
	shf.l.wrap.b32 	%r5408, %r5404, %r5405, 30;
	shf.l.wrap.b32 	%r5409, %r5405, %r5404, 30;
	mov.b64 	%rd7800, {%r5409, %r5408};
	xor.b64  	%rd7801, %rd7799, %rd7800;
	shf.l.wrap.b32 	%r5410, %r5404, %r5405, 25;
	shf.l.wrap.b32 	%r5411, %r5405, %r5404, 25;
	mov.b64 	%rd7802, {%r5411, %r5410};
	xor.b64  	%rd7803, %rd7801, %rd7802;
	and.b64  	%rd7804, %rd7772, %rd7735;
	or.b64  	%rd7805, %rd7772, %rd7735;
	and.b64  	%rd7806, %rd7805, %rd7698;
	or.b64  	%rd7807, %rd7806, %rd7804;
	add.s64 	%rd7808, %rd7807, %rd7803;
	add.s64 	%rd7809, %rd7808, %rd7797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5412,%dummy}, %rd7748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5413}, %rd7748;
	}
	shf.r.wrap.b32 	%r5414, %r5413, %r5412, 19;
	shf.r.wrap.b32 	%r5415, %r5412, %r5413, 19;
	mov.b64 	%rd7810, {%r5415, %r5414};
	shf.l.wrap.b32 	%r5416, %r5412, %r5413, 3;
	shf.l.wrap.b32 	%r5417, %r5413, %r5412, 3;
	mov.b64 	%rd7811, {%r5417, %r5416};
	xor.b64  	%rd7812, %rd7810, %rd7811;
	shr.u64 	%rd7813, %rd7748, 6;
	xor.b64  	%rd7814, %rd7812, %rd7813;
	shf.r.wrap.b32 	%r5418, %r5075, %r5074, 1;
	shf.r.wrap.b32 	%r5419, %r5074, %r5075, 1;
	mov.b64 	%rd7815, {%r5419, %r5418};
	shf.r.wrap.b32 	%r5420, %r5075, %r5074, 8;
	shf.r.wrap.b32 	%r5421, %r5074, %r5075, 8;
	mov.b64 	%rd7816, {%r5421, %r5420};
	xor.b64  	%rd7817, %rd7815, %rd7816;
	shr.u64 	%rd7818, %rd7267, 7;
	xor.b64  	%rd7819, %rd7817, %rd7818;
	add.s64 	%rd7820, %rd7814, %rd7230;
	add.s64 	%rd7821, %rd7820, %rd7563;
	add.s64 	%rd7822, %rd7821, %rd7819;
	add.s64 	%rd7823, %rd7822, %rd7687;
	xor.b64  	%rd7824, %rd7761, %rd7724;
	and.b64  	%rd7825, %rd7798, %rd7824;
	xor.b64  	%rd7826, %rd7825, %rd7724;
	add.s64 	%rd7827, %rd7823, %rd7826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd7798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5423}, %rd7798;
	}
	shf.r.wrap.b32 	%r5424, %r5423, %r5422, 14;
	shf.r.wrap.b32 	%r5425, %r5422, %r5423, 14;
	mov.b64 	%rd7828, {%r5425, %r5424};
	shf.r.wrap.b32 	%r5426, %r5423, %r5422, 18;
	shf.r.wrap.b32 	%r5427, %r5422, %r5423, 18;
	mov.b64 	%rd7829, {%r5427, %r5426};
	xor.b64  	%rd7830, %rd7828, %rd7829;
	shf.l.wrap.b32 	%r5428, %r5422, %r5423, 23;
	shf.l.wrap.b32 	%r5429, %r5423, %r5422, 23;
	mov.b64 	%rd7831, {%r5429, %r5428};
	xor.b64  	%rd7832, %rd7830, %rd7831;
	add.s64 	%rd7833, %rd7827, %rd7832;
	add.s64 	%rd7834, %rd7833, -4685533653050689259;
	add.s64 	%rd7835, %rd7834, %rd7698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5430,%dummy}, %rd7809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5431}, %rd7809;
	}
	shf.r.wrap.b32 	%r5432, %r5431, %r5430, 28;
	shf.r.wrap.b32 	%r5433, %r5430, %r5431, 28;
	mov.b64 	%rd7836, {%r5433, %r5432};
	shf.l.wrap.b32 	%r5434, %r5430, %r5431, 30;
	shf.l.wrap.b32 	%r5435, %r5431, %r5430, 30;
	mov.b64 	%rd7837, {%r5435, %r5434};
	xor.b64  	%rd7838, %rd7836, %rd7837;
	shf.l.wrap.b32 	%r5436, %r5430, %r5431, 25;
	shf.l.wrap.b32 	%r5437, %r5431, %r5430, 25;
	mov.b64 	%rd7839, {%r5437, %r5436};
	xor.b64  	%rd7840, %rd7838, %rd7839;
	and.b64  	%rd7841, %rd7809, %rd7772;
	or.b64  	%rd7842, %rd7809, %rd7772;
	and.b64  	%rd7843, %rd7842, %rd7735;
	or.b64  	%rd7844, %rd7843, %rd7841;
	add.s64 	%rd7845, %rd7844, %rd7840;
	add.s64 	%rd7846, %rd7845, %rd7834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5438,%dummy}, %rd7785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5439}, %rd7785;
	}
	shf.r.wrap.b32 	%r5440, %r5439, %r5438, 19;
	shf.r.wrap.b32 	%r5441, %r5438, %r5439, 19;
	mov.b64 	%rd7847, {%r5441, %r5440};
	shf.l.wrap.b32 	%r5442, %r5438, %r5439, 3;
	shf.l.wrap.b32 	%r5443, %r5439, %r5438, 3;
	mov.b64 	%rd7848, {%r5443, %r5442};
	xor.b64  	%rd7849, %rd7847, %rd7848;
	shr.u64 	%rd7850, %rd7785, 6;
	xor.b64  	%rd7851, %rd7849, %rd7850;
	shf.r.wrap.b32 	%r5444, %r5101, %r5100, 1;
	shf.r.wrap.b32 	%r5445, %r5100, %r5101, 1;
	mov.b64 	%rd7852, {%r5445, %r5444};
	shf.r.wrap.b32 	%r5446, %r5101, %r5100, 8;
	shf.r.wrap.b32 	%r5447, %r5100, %r5101, 8;
	mov.b64 	%rd7853, {%r5447, %r5446};
	xor.b64  	%rd7854, %rd7852, %rd7853;
	shr.u64 	%rd7855, %rd7304, 7;
	xor.b64  	%rd7856, %rd7854, %rd7855;
	add.s64 	%rd7857, %rd7851, %rd7267;
	add.s64 	%rd7858, %rd7857, %rd7600;
	add.s64 	%rd7859, %rd7858, %rd7856;
	add.s64 	%rd7860, %rd7859, %rd7724;
	xor.b64  	%rd7861, %rd7798, %rd7761;
	and.b64  	%rd7862, %rd7835, %rd7861;
	xor.b64  	%rd7863, %rd7862, %rd7761;
	add.s64 	%rd7864, %rd7860, %rd7863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5448,%dummy}, %rd7835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5449}, %rd7835;
	}
	shf.r.wrap.b32 	%r5450, %r5449, %r5448, 14;
	shf.r.wrap.b32 	%r5451, %r5448, %r5449, 14;
	mov.b64 	%rd7865, {%r5451, %r5450};
	shf.r.wrap.b32 	%r5452, %r5449, %r5448, 18;
	shf.r.wrap.b32 	%r5453, %r5448, %r5449, 18;
	mov.b64 	%rd7866, {%r5453, %r5452};
	xor.b64  	%rd7867, %rd7865, %rd7866;
	shf.l.wrap.b32 	%r5454, %r5448, %r5449, 23;
	shf.l.wrap.b32 	%r5455, %r5449, %r5448, 23;
	mov.b64 	%rd7868, {%r5455, %r5454};
	xor.b64  	%rd7869, %rd7867, %rd7868;
	add.s64 	%rd7870, %rd7864, %rd7869;
	add.s64 	%rd7871, %rd7870, -4147400797238176981;
	add.s64 	%rd7872, %rd7871, %rd7735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5456,%dummy}, %rd7846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5457}, %rd7846;
	}
	shf.r.wrap.b32 	%r5458, %r5457, %r5456, 28;
	shf.r.wrap.b32 	%r5459, %r5456, %r5457, 28;
	mov.b64 	%rd7873, {%r5459, %r5458};
	shf.l.wrap.b32 	%r5460, %r5456, %r5457, 30;
	shf.l.wrap.b32 	%r5461, %r5457, %r5456, 30;
	mov.b64 	%rd7874, {%r5461, %r5460};
	xor.b64  	%rd7875, %rd7873, %rd7874;
	shf.l.wrap.b32 	%r5462, %r5456, %r5457, 25;
	shf.l.wrap.b32 	%r5463, %r5457, %r5456, 25;
	mov.b64 	%rd7876, {%r5463, %r5462};
	xor.b64  	%rd7877, %rd7875, %rd7876;
	and.b64  	%rd7878, %rd7846, %rd7809;
	or.b64  	%rd7879, %rd7846, %rd7809;
	and.b64  	%rd7880, %rd7879, %rd7772;
	or.b64  	%rd7881, %rd7880, %rd7878;
	add.s64 	%rd7882, %rd7881, %rd7877;
	add.s64 	%rd7883, %rd7882, %rd7871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5464,%dummy}, %rd7822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5465}, %rd7822;
	}
	shf.r.wrap.b32 	%r5466, %r5465, %r5464, 19;
	shf.r.wrap.b32 	%r5467, %r5464, %r5465, 19;
	mov.b64 	%rd7884, {%r5467, %r5466};
	shf.l.wrap.b32 	%r5468, %r5464, %r5465, 3;
	shf.l.wrap.b32 	%r5469, %r5465, %r5464, 3;
	mov.b64 	%rd7885, {%r5469, %r5468};
	xor.b64  	%rd7886, %rd7884, %rd7885;
	shr.u64 	%rd7887, %rd7822, 6;
	xor.b64  	%rd7888, %rd7886, %rd7887;
	shf.r.wrap.b32 	%r5470, %r5127, %r5126, 1;
	shf.r.wrap.b32 	%r5471, %r5126, %r5127, 1;
	mov.b64 	%rd7889, {%r5471, %r5470};
	shf.r.wrap.b32 	%r5472, %r5127, %r5126, 8;
	shf.r.wrap.b32 	%r5473, %r5126, %r5127, 8;
	mov.b64 	%rd7890, {%r5473, %r5472};
	xor.b64  	%rd7891, %rd7889, %rd7890;
	shr.u64 	%rd7892, %rd7341, 7;
	xor.b64  	%rd7893, %rd7891, %rd7892;
	add.s64 	%rd7894, %rd7888, %rd7304;
	add.s64 	%rd7895, %rd7894, %rd7637;
	add.s64 	%rd7896, %rd7895, %rd7893;
	add.s64 	%rd7897, %rd7896, %rd7761;
	xor.b64  	%rd7898, %rd7835, %rd7798;
	and.b64  	%rd7899, %rd7872, %rd7898;
	xor.b64  	%rd7900, %rd7899, %rd7798;
	add.s64 	%rd7901, %rd7897, %rd7900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd7872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5475}, %rd7872;
	}
	shf.r.wrap.b32 	%r5476, %r5475, %r5474, 14;
	shf.r.wrap.b32 	%r5477, %r5474, %r5475, 14;
	mov.b64 	%rd7902, {%r5477, %r5476};
	shf.r.wrap.b32 	%r5478, %r5475, %r5474, 18;
	shf.r.wrap.b32 	%r5479, %r5474, %r5475, 18;
	mov.b64 	%rd7903, {%r5479, %r5478};
	xor.b64  	%rd7904, %rd7902, %rd7903;
	shf.l.wrap.b32 	%r5480, %r5474, %r5475, 23;
	shf.l.wrap.b32 	%r5481, %r5475, %r5474, 23;
	mov.b64 	%rd7905, {%r5481, %r5480};
	xor.b64  	%rd7906, %rd7904, %rd7905;
	add.s64 	%rd7907, %rd7901, %rd7906;
	add.s64 	%rd7908, %rd7907, -3880063495543823972;
	add.s64 	%rd7909, %rd7908, %rd7772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd7883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5483}, %rd7883;
	}
	shf.r.wrap.b32 	%r5484, %r5483, %r5482, 28;
	shf.r.wrap.b32 	%r5485, %r5482, %r5483, 28;
	mov.b64 	%rd7910, {%r5485, %r5484};
	shf.l.wrap.b32 	%r5486, %r5482, %r5483, 30;
	shf.l.wrap.b32 	%r5487, %r5483, %r5482, 30;
	mov.b64 	%rd7911, {%r5487, %r5486};
	xor.b64  	%rd7912, %rd7910, %rd7911;
	shf.l.wrap.b32 	%r5488, %r5482, %r5483, 25;
	shf.l.wrap.b32 	%r5489, %r5483, %r5482, 25;
	mov.b64 	%rd7913, {%r5489, %r5488};
	xor.b64  	%rd7914, %rd7912, %rd7913;
	and.b64  	%rd7915, %rd7883, %rd7846;
	or.b64  	%rd7916, %rd7883, %rd7846;
	and.b64  	%rd7917, %rd7916, %rd7809;
	or.b64  	%rd7918, %rd7917, %rd7915;
	add.s64 	%rd7919, %rd7918, %rd7914;
	add.s64 	%rd7920, %rd7919, %rd7908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5490,%dummy}, %rd7859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5491}, %rd7859;
	}
	shf.r.wrap.b32 	%r5492, %r5491, %r5490, 19;
	shf.r.wrap.b32 	%r5493, %r5490, %r5491, 19;
	mov.b64 	%rd7921, {%r5493, %r5492};
	shf.l.wrap.b32 	%r5494, %r5490, %r5491, 3;
	shf.l.wrap.b32 	%r5495, %r5491, %r5490, 3;
	mov.b64 	%rd7922, {%r5495, %r5494};
	xor.b64  	%rd7923, %rd7921, %rd7922;
	shr.u64 	%rd7924, %rd7859, 6;
	xor.b64  	%rd7925, %rd7923, %rd7924;
	shf.r.wrap.b32 	%r5496, %r5153, %r5152, 1;
	shf.r.wrap.b32 	%r5497, %r5152, %r5153, 1;
	mov.b64 	%rd7926, {%r5497, %r5496};
	shf.r.wrap.b32 	%r5498, %r5153, %r5152, 8;
	shf.r.wrap.b32 	%r5499, %r5152, %r5153, 8;
	mov.b64 	%rd7927, {%r5499, %r5498};
	xor.b64  	%rd7928, %rd7926, %rd7927;
	shr.u64 	%rd7929, %rd7378, 7;
	xor.b64  	%rd7930, %rd7928, %rd7929;
	add.s64 	%rd7931, %rd7925, %rd7341;
	add.s64 	%rd7932, %rd7931, %rd7674;
	add.s64 	%rd7933, %rd7932, %rd7930;
	add.s64 	%rd7934, %rd7933, %rd7798;
	xor.b64  	%rd7935, %rd7872, %rd7835;
	and.b64  	%rd7936, %rd7909, %rd7935;
	xor.b64  	%rd7937, %rd7936, %rd7835;
	add.s64 	%rd7938, %rd7934, %rd7937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5500,%dummy}, %rd7909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd7909;
	}
	shf.r.wrap.b32 	%r5502, %r5501, %r5500, 14;
	shf.r.wrap.b32 	%r5503, %r5500, %r5501, 14;
	mov.b64 	%rd7939, {%r5503, %r5502};
	shf.r.wrap.b32 	%r5504, %r5501, %r5500, 18;
	shf.r.wrap.b32 	%r5505, %r5500, %r5501, 18;
	mov.b64 	%rd7940, {%r5505, %r5504};
	xor.b64  	%rd7941, %rd7939, %rd7940;
	shf.l.wrap.b32 	%r5506, %r5500, %r5501, 23;
	shf.l.wrap.b32 	%r5507, %r5501, %r5500, 23;
	mov.b64 	%rd7942, {%r5507, %r5506};
	xor.b64  	%rd7943, %rd7941, %rd7942;
	add.s64 	%rd7944, %rd7938, %rd7943;
	add.s64 	%rd7945, %rd7944, -3348786107499101689;
	add.s64 	%rd7946, %rd7945, %rd7809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5508,%dummy}, %rd7920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5509}, %rd7920;
	}
	shf.r.wrap.b32 	%r5510, %r5509, %r5508, 28;
	shf.r.wrap.b32 	%r5511, %r5508, %r5509, 28;
	mov.b64 	%rd7947, {%r5511, %r5510};
	shf.l.wrap.b32 	%r5512, %r5508, %r5509, 30;
	shf.l.wrap.b32 	%r5513, %r5509, %r5508, 30;
	mov.b64 	%rd7948, {%r5513, %r5512};
	xor.b64  	%rd7949, %rd7947, %rd7948;
	shf.l.wrap.b32 	%r5514, %r5508, %r5509, 25;
	shf.l.wrap.b32 	%r5515, %r5509, %r5508, 25;
	mov.b64 	%rd7950, {%r5515, %r5514};
	xor.b64  	%rd7951, %rd7949, %rd7950;
	and.b64  	%rd7952, %rd7920, %rd7883;
	or.b64  	%rd7953, %rd7920, %rd7883;
	and.b64  	%rd7954, %rd7953, %rd7846;
	or.b64  	%rd7955, %rd7954, %rd7952;
	add.s64 	%rd7956, %rd7955, %rd7951;
	add.s64 	%rd7957, %rd7956, %rd7945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5516,%dummy}, %rd7896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5517}, %rd7896;
	}
	shf.r.wrap.b32 	%r5518, %r5517, %r5516, 19;
	shf.r.wrap.b32 	%r5519, %r5516, %r5517, 19;
	mov.b64 	%rd7958, {%r5519, %r5518};
	shf.l.wrap.b32 	%r5520, %r5516, %r5517, 3;
	shf.l.wrap.b32 	%r5521, %r5517, %r5516, 3;
	mov.b64 	%rd7959, {%r5521, %r5520};
	xor.b64  	%rd7960, %rd7958, %rd7959;
	shr.u64 	%rd7961, %rd7896, 6;
	xor.b64  	%rd7962, %rd7960, %rd7961;
	shf.r.wrap.b32 	%r5522, %r5179, %r5178, 1;
	shf.r.wrap.b32 	%r5523, %r5178, %r5179, 1;
	mov.b64 	%rd7963, {%r5523, %r5522};
	shf.r.wrap.b32 	%r5524, %r5179, %r5178, 8;
	shf.r.wrap.b32 	%r5525, %r5178, %r5179, 8;
	mov.b64 	%rd7964, {%r5525, %r5524};
	xor.b64  	%rd7965, %rd7963, %rd7964;
	shr.u64 	%rd7966, %rd7415, 7;
	xor.b64  	%rd7967, %rd7965, %rd7966;
	add.s64 	%rd7968, %rd7962, %rd7378;
	add.s64 	%rd7969, %rd7968, %rd7711;
	add.s64 	%rd7970, %rd7969, %rd7967;
	add.s64 	%rd7971, %rd7970, %rd7835;
	xor.b64  	%rd7972, %rd7909, %rd7872;
	and.b64  	%rd7973, %rd7946, %rd7972;
	xor.b64  	%rd7974, %rd7973, %rd7872;
	add.s64 	%rd7975, %rd7971, %rd7974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5526,%dummy}, %rd7946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5527}, %rd7946;
	}
	shf.r.wrap.b32 	%r5528, %r5527, %r5526, 14;
	shf.r.wrap.b32 	%r5529, %r5526, %r5527, 14;
	mov.b64 	%rd7976, {%r5529, %r5528};
	shf.r.wrap.b32 	%r5530, %r5527, %r5526, 18;
	shf.r.wrap.b32 	%r5531, %r5526, %r5527, 18;
	mov.b64 	%rd7977, {%r5531, %r5530};
	xor.b64  	%rd7978, %rd7976, %rd7977;
	shf.l.wrap.b32 	%r5532, %r5526, %r5527, 23;
	shf.l.wrap.b32 	%r5533, %r5527, %r5526, 23;
	mov.b64 	%rd7979, {%r5533, %r5532};
	xor.b64  	%rd7980, %rd7978, %rd7979;
	add.s64 	%rd7981, %rd7975, %rd7980;
	add.s64 	%rd7982, %rd7981, -1523767162380948706;
	add.s64 	%rd7983, %rd7982, %rd7846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd7957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5535}, %rd7957;
	}
	shf.r.wrap.b32 	%r5536, %r5535, %r5534, 28;
	shf.r.wrap.b32 	%r5537, %r5534, %r5535, 28;
	mov.b64 	%rd7984, {%r5537, %r5536};
	shf.l.wrap.b32 	%r5538, %r5534, %r5535, 30;
	shf.l.wrap.b32 	%r5539, %r5535, %r5534, 30;
	mov.b64 	%rd7985, {%r5539, %r5538};
	xor.b64  	%rd7986, %rd7984, %rd7985;
	shf.l.wrap.b32 	%r5540, %r5534, %r5535, 25;
	shf.l.wrap.b32 	%r5541, %r5535, %r5534, 25;
	mov.b64 	%rd7987, {%r5541, %r5540};
	xor.b64  	%rd7988, %rd7986, %rd7987;
	and.b64  	%rd7989, %rd7957, %rd7920;
	or.b64  	%rd7990, %rd7957, %rd7920;
	and.b64  	%rd7991, %rd7990, %rd7883;
	or.b64  	%rd7992, %rd7991, %rd7989;
	add.s64 	%rd7993, %rd7992, %rd7988;
	add.s64 	%rd7994, %rd7993, %rd7982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5542,%dummy}, %rd7933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5543}, %rd7933;
	}
	shf.r.wrap.b32 	%r5544, %r5543, %r5542, 19;
	shf.r.wrap.b32 	%r5545, %r5542, %r5543, 19;
	mov.b64 	%rd7995, {%r5545, %r5544};
	shf.l.wrap.b32 	%r5546, %r5542, %r5543, 3;
	shf.l.wrap.b32 	%r5547, %r5543, %r5542, 3;
	mov.b64 	%rd7996, {%r5547, %r5546};
	xor.b64  	%rd7997, %rd7995, %rd7996;
	shr.u64 	%rd7998, %rd7933, 6;
	xor.b64  	%rd7999, %rd7997, %rd7998;
	shf.r.wrap.b32 	%r5548, %r5205, %r5204, 1;
	shf.r.wrap.b32 	%r5549, %r5204, %r5205, 1;
	mov.b64 	%rd8000, {%r5549, %r5548};
	shf.r.wrap.b32 	%r5550, %r5205, %r5204, 8;
	shf.r.wrap.b32 	%r5551, %r5204, %r5205, 8;
	mov.b64 	%rd8001, {%r5551, %r5550};
	xor.b64  	%rd8002, %rd8000, %rd8001;
	shr.u64 	%rd8003, %rd7452, 7;
	xor.b64  	%rd8004, %rd8002, %rd8003;
	add.s64 	%rd8005, %rd7999, %rd7415;
	add.s64 	%rd8006, %rd8005, %rd7748;
	add.s64 	%rd8007, %rd8006, %rd8004;
	add.s64 	%rd8008, %rd8007, %rd7872;
	xor.b64  	%rd8009, %rd7946, %rd7909;
	and.b64  	%rd8010, %rd7983, %rd8009;
	xor.b64  	%rd8011, %rd8010, %rd7909;
	add.s64 	%rd8012, %rd8008, %rd8011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5552,%dummy}, %rd7983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5553}, %rd7983;
	}
	shf.r.wrap.b32 	%r5554, %r5553, %r5552, 14;
	shf.r.wrap.b32 	%r5555, %r5552, %r5553, 14;
	mov.b64 	%rd8013, {%r5555, %r5554};
	shf.r.wrap.b32 	%r5556, %r5553, %r5552, 18;
	shf.r.wrap.b32 	%r5557, %r5552, %r5553, 18;
	mov.b64 	%rd8014, {%r5557, %r5556};
	xor.b64  	%rd8015, %rd8013, %rd8014;
	shf.l.wrap.b32 	%r5558, %r5552, %r5553, 23;
	shf.l.wrap.b32 	%r5559, %r5553, %r5552, 23;
	mov.b64 	%rd8016, {%r5559, %r5558};
	xor.b64  	%rd8017, %rd8015, %rd8016;
	add.s64 	%rd8018, %rd8012, %rd8017;
	add.s64 	%rd8019, %rd8018, -757361751448694408;
	add.s64 	%rd8020, %rd8019, %rd7883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd7994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd7994;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 28;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 28;
	mov.b64 	%rd8021, {%r5563, %r5562};
	shf.l.wrap.b32 	%r5564, %r5560, %r5561, 30;
	shf.l.wrap.b32 	%r5565, %r5561, %r5560, 30;
	mov.b64 	%rd8022, {%r5565, %r5564};
	xor.b64  	%rd8023, %rd8021, %rd8022;
	shf.l.wrap.b32 	%r5566, %r5560, %r5561, 25;
	shf.l.wrap.b32 	%r5567, %r5561, %r5560, 25;
	mov.b64 	%rd8024, {%r5567, %r5566};
	xor.b64  	%rd8025, %rd8023, %rd8024;
	and.b64  	%rd8026, %rd7994, %rd7957;
	or.b64  	%rd8027, %rd7994, %rd7957;
	and.b64  	%rd8028, %rd8027, %rd7920;
	or.b64  	%rd8029, %rd8028, %rd8026;
	add.s64 	%rd8030, %rd8029, %rd8025;
	add.s64 	%rd8031, %rd8030, %rd8019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5568,%dummy}, %rd7970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd7970;
	}
	shf.r.wrap.b32 	%r5570, %r5569, %r5568, 19;
	shf.r.wrap.b32 	%r5571, %r5568, %r5569, 19;
	mov.b64 	%rd8032, {%r5571, %r5570};
	shf.l.wrap.b32 	%r5572, %r5568, %r5569, 3;
	shf.l.wrap.b32 	%r5573, %r5569, %r5568, 3;
	mov.b64 	%rd8033, {%r5573, %r5572};
	xor.b64  	%rd8034, %rd8032, %rd8033;
	shr.u64 	%rd8035, %rd7970, 6;
	xor.b64  	%rd8036, %rd8034, %rd8035;
	shf.r.wrap.b32 	%r5574, %r5231, %r5230, 1;
	shf.r.wrap.b32 	%r5575, %r5230, %r5231, 1;
	mov.b64 	%rd8037, {%r5575, %r5574};
	shf.r.wrap.b32 	%r5576, %r5231, %r5230, 8;
	shf.r.wrap.b32 	%r5577, %r5230, %r5231, 8;
	mov.b64 	%rd8038, {%r5577, %r5576};
	xor.b64  	%rd8039, %rd8037, %rd8038;
	shr.u64 	%rd8040, %rd7489, 7;
	xor.b64  	%rd8041, %rd8039, %rd8040;
	add.s64 	%rd8042, %rd8036, %rd7452;
	add.s64 	%rd8043, %rd8042, %rd7785;
	add.s64 	%rd8044, %rd8043, %rd8041;
	add.s64 	%rd8045, %rd8044, %rd7909;
	xor.b64  	%rd8046, %rd7983, %rd7946;
	and.b64  	%rd8047, %rd8020, %rd8046;
	xor.b64  	%rd8048, %rd8047, %rd7946;
	add.s64 	%rd8049, %rd8045, %rd8048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5578,%dummy}, %rd8020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5579}, %rd8020;
	}
	shf.r.wrap.b32 	%r5580, %r5579, %r5578, 14;
	shf.r.wrap.b32 	%r5581, %r5578, %r5579, 14;
	mov.b64 	%rd8050, {%r5581, %r5580};
	shf.r.wrap.b32 	%r5582, %r5579, %r5578, 18;
	shf.r.wrap.b32 	%r5583, %r5578, %r5579, 18;
	mov.b64 	%rd8051, {%r5583, %r5582};
	xor.b64  	%rd8052, %rd8050, %rd8051;
	shf.l.wrap.b32 	%r5584, %r5578, %r5579, 23;
	shf.l.wrap.b32 	%r5585, %r5579, %r5578, 23;
	mov.b64 	%rd8053, {%r5585, %r5584};
	xor.b64  	%rd8054, %rd8052, %rd8053;
	add.s64 	%rd8055, %rd8049, %rd8054;
	add.s64 	%rd8056, %rd8055, 500013540394364858;
	add.s64 	%rd8057, %rd8056, %rd7920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd8031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5587}, %rd8031;
	}
	shf.r.wrap.b32 	%r5588, %r5587, %r5586, 28;
	shf.r.wrap.b32 	%r5589, %r5586, %r5587, 28;
	mov.b64 	%rd8058, {%r5589, %r5588};
	shf.l.wrap.b32 	%r5590, %r5586, %r5587, 30;
	shf.l.wrap.b32 	%r5591, %r5587, %r5586, 30;
	mov.b64 	%rd8059, {%r5591, %r5590};
	xor.b64  	%rd8060, %rd8058, %rd8059;
	shf.l.wrap.b32 	%r5592, %r5586, %r5587, 25;
	shf.l.wrap.b32 	%r5593, %r5587, %r5586, 25;
	mov.b64 	%rd8061, {%r5593, %r5592};
	xor.b64  	%rd8062, %rd8060, %rd8061;
	and.b64  	%rd8063, %rd8031, %rd7994;
	or.b64  	%rd8064, %rd8031, %rd7994;
	and.b64  	%rd8065, %rd8064, %rd7957;
	or.b64  	%rd8066, %rd8065, %rd8063;
	add.s64 	%rd8067, %rd8066, %rd8062;
	add.s64 	%rd8068, %rd8067, %rd8056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5594,%dummy}, %rd8007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5595}, %rd8007;
	}
	shf.r.wrap.b32 	%r5596, %r5595, %r5594, 19;
	shf.r.wrap.b32 	%r5597, %r5594, %r5595, 19;
	mov.b64 	%rd8069, {%r5597, %r5596};
	shf.l.wrap.b32 	%r5598, %r5594, %r5595, 3;
	shf.l.wrap.b32 	%r5599, %r5595, %r5594, 3;
	mov.b64 	%rd8070, {%r5599, %r5598};
	xor.b64  	%rd8071, %rd8069, %rd8070;
	shr.u64 	%rd8072, %rd8007, 6;
	xor.b64  	%rd8073, %rd8071, %rd8072;
	shf.r.wrap.b32 	%r5600, %r5257, %r5256, 1;
	shf.r.wrap.b32 	%r5601, %r5256, %r5257, 1;
	mov.b64 	%rd8074, {%r5601, %r5600};
	shf.r.wrap.b32 	%r5602, %r5257, %r5256, 8;
	shf.r.wrap.b32 	%r5603, %r5256, %r5257, 8;
	mov.b64 	%rd8075, {%r5603, %r5602};
	xor.b64  	%rd8076, %rd8074, %rd8075;
	shr.u64 	%rd8077, %rd7526, 7;
	xor.b64  	%rd8078, %rd8076, %rd8077;
	add.s64 	%rd8079, %rd8073, %rd7489;
	add.s64 	%rd8080, %rd8079, %rd7822;
	add.s64 	%rd8081, %rd8080, %rd8078;
	add.s64 	%rd8082, %rd8081, %rd7946;
	xor.b64  	%rd8083, %rd8020, %rd7983;
	and.b64  	%rd8084, %rd8057, %rd8083;
	xor.b64  	%rd8085, %rd8084, %rd7983;
	add.s64 	%rd8086, %rd8082, %rd8085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5604,%dummy}, %rd8057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5605}, %rd8057;
	}
	shf.r.wrap.b32 	%r5606, %r5605, %r5604, 14;
	shf.r.wrap.b32 	%r5607, %r5604, %r5605, 14;
	mov.b64 	%rd8087, {%r5607, %r5606};
	shf.r.wrap.b32 	%r5608, %r5605, %r5604, 18;
	shf.r.wrap.b32 	%r5609, %r5604, %r5605, 18;
	mov.b64 	%rd8088, {%r5609, %r5608};
	xor.b64  	%rd8089, %rd8087, %rd8088;
	shf.l.wrap.b32 	%r5610, %r5604, %r5605, 23;
	shf.l.wrap.b32 	%r5611, %r5605, %r5604, 23;
	mov.b64 	%rd8090, {%r5611, %r5610};
	xor.b64  	%rd8091, %rd8089, %rd8090;
	add.s64 	%rd8092, %rd8086, %rd8091;
	add.s64 	%rd8093, %rd8092, 748580250866718886;
	add.s64 	%rd8094, %rd8093, %rd7957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5612,%dummy}, %rd8068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5613}, %rd8068;
	}
	shf.r.wrap.b32 	%r5614, %r5613, %r5612, 28;
	shf.r.wrap.b32 	%r5615, %r5612, %r5613, 28;
	mov.b64 	%rd8095, {%r5615, %r5614};
	shf.l.wrap.b32 	%r5616, %r5612, %r5613, 30;
	shf.l.wrap.b32 	%r5617, %r5613, %r5612, 30;
	mov.b64 	%rd8096, {%r5617, %r5616};
	xor.b64  	%rd8097, %rd8095, %rd8096;
	shf.l.wrap.b32 	%r5618, %r5612, %r5613, 25;
	shf.l.wrap.b32 	%r5619, %r5613, %r5612, 25;
	mov.b64 	%rd8098, {%r5619, %r5618};
	xor.b64  	%rd8099, %rd8097, %rd8098;
	and.b64  	%rd8100, %rd8068, %rd8031;
	or.b64  	%rd8101, %rd8068, %rd8031;
	and.b64  	%rd8102, %rd8101, %rd7994;
	or.b64  	%rd8103, %rd8102, %rd8100;
	add.s64 	%rd8104, %rd8103, %rd8099;
	add.s64 	%rd8105, %rd8104, %rd8093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5620,%dummy}, %rd8044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5621}, %rd8044;
	}
	shf.r.wrap.b32 	%r5622, %r5621, %r5620, 19;
	shf.r.wrap.b32 	%r5623, %r5620, %r5621, 19;
	mov.b64 	%rd8106, {%r5623, %r5622};
	shf.l.wrap.b32 	%r5624, %r5620, %r5621, 3;
	shf.l.wrap.b32 	%r5625, %r5621, %r5620, 3;
	mov.b64 	%rd8107, {%r5625, %r5624};
	xor.b64  	%rd8108, %rd8106, %rd8107;
	shr.u64 	%rd8109, %rd8044, 6;
	xor.b64  	%rd8110, %rd8108, %rd8109;
	shf.r.wrap.b32 	%r5626, %r5283, %r5282, 1;
	shf.r.wrap.b32 	%r5627, %r5282, %r5283, 1;
	mov.b64 	%rd8111, {%r5627, %r5626};
	shf.r.wrap.b32 	%r5628, %r5283, %r5282, 8;
	shf.r.wrap.b32 	%r5629, %r5282, %r5283, 8;
	mov.b64 	%rd8112, {%r5629, %r5628};
	xor.b64  	%rd8113, %rd8111, %rd8112;
	shr.u64 	%rd8114, %rd7563, 7;
	xor.b64  	%rd8115, %rd8113, %rd8114;
	add.s64 	%rd8116, %rd8110, %rd7526;
	add.s64 	%rd8117, %rd8116, %rd7859;
	add.s64 	%rd8118, %rd8117, %rd8115;
	add.s64 	%rd8119, %rd8118, %rd7983;
	xor.b64  	%rd8120, %rd8057, %rd8020;
	and.b64  	%rd8121, %rd8094, %rd8120;
	xor.b64  	%rd8122, %rd8121, %rd8020;
	add.s64 	%rd8123, %rd8119, %rd8122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5630,%dummy}, %rd8094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5631}, %rd8094;
	}
	shf.r.wrap.b32 	%r5632, %r5631, %r5630, 14;
	shf.r.wrap.b32 	%r5633, %r5630, %r5631, 14;
	mov.b64 	%rd8124, {%r5633, %r5632};
	shf.r.wrap.b32 	%r5634, %r5631, %r5630, 18;
	shf.r.wrap.b32 	%r5635, %r5630, %r5631, 18;
	mov.b64 	%rd8125, {%r5635, %r5634};
	xor.b64  	%rd8126, %rd8124, %rd8125;
	shf.l.wrap.b32 	%r5636, %r5630, %r5631, 23;
	shf.l.wrap.b32 	%r5637, %r5631, %r5630, 23;
	mov.b64 	%rd8127, {%r5637, %r5636};
	xor.b64  	%rd8128, %rd8126, %rd8127;
	add.s64 	%rd8129, %rd8123, %rd8128;
	add.s64 	%rd8130, %rd8129, 1242879168328830382;
	add.s64 	%rd8131, %rd8130, %rd7994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5638,%dummy}, %rd8105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5639}, %rd8105;
	}
	shf.r.wrap.b32 	%r5640, %r5639, %r5638, 28;
	shf.r.wrap.b32 	%r5641, %r5638, %r5639, 28;
	mov.b64 	%rd8132, {%r5641, %r5640};
	shf.l.wrap.b32 	%r5642, %r5638, %r5639, 30;
	shf.l.wrap.b32 	%r5643, %r5639, %r5638, 30;
	mov.b64 	%rd8133, {%r5643, %r5642};
	xor.b64  	%rd8134, %rd8132, %rd8133;
	shf.l.wrap.b32 	%r5644, %r5638, %r5639, 25;
	shf.l.wrap.b32 	%r5645, %r5639, %r5638, 25;
	mov.b64 	%rd8135, {%r5645, %r5644};
	xor.b64  	%rd8136, %rd8134, %rd8135;
	and.b64  	%rd8137, %rd8105, %rd8068;
	or.b64  	%rd8138, %rd8105, %rd8068;
	and.b64  	%rd8139, %rd8138, %rd8031;
	or.b64  	%rd8140, %rd8139, %rd8137;
	add.s64 	%rd8141, %rd8140, %rd8136;
	add.s64 	%rd8142, %rd8141, %rd8130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5646,%dummy}, %rd8081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5647}, %rd8081;
	}
	shf.r.wrap.b32 	%r5648, %r5647, %r5646, 19;
	shf.r.wrap.b32 	%r5649, %r5646, %r5647, 19;
	mov.b64 	%rd8143, {%r5649, %r5648};
	shf.l.wrap.b32 	%r5650, %r5646, %r5647, 3;
	shf.l.wrap.b32 	%r5651, %r5647, %r5646, 3;
	mov.b64 	%rd8144, {%r5651, %r5650};
	xor.b64  	%rd8145, %rd8143, %rd8144;
	shr.u64 	%rd8146, %rd8081, 6;
	xor.b64  	%rd8147, %rd8145, %rd8146;
	shf.r.wrap.b32 	%r5652, %r5309, %r5308, 1;
	shf.r.wrap.b32 	%r5653, %r5308, %r5309, 1;
	mov.b64 	%rd8148, {%r5653, %r5652};
	shf.r.wrap.b32 	%r5654, %r5309, %r5308, 8;
	shf.r.wrap.b32 	%r5655, %r5308, %r5309, 8;
	mov.b64 	%rd8149, {%r5655, %r5654};
	xor.b64  	%rd8150, %rd8148, %rd8149;
	shr.u64 	%rd8151, %rd7600, 7;
	xor.b64  	%rd8152, %rd8150, %rd8151;
	add.s64 	%rd8153, %rd8147, %rd7563;
	add.s64 	%rd8154, %rd8153, %rd7896;
	add.s64 	%rd8155, %rd8154, %rd8152;
	add.s64 	%rd8156, %rd8155, %rd8020;
	xor.b64  	%rd8157, %rd8094, %rd8057;
	and.b64  	%rd8158, %rd8131, %rd8157;
	xor.b64  	%rd8159, %rd8158, %rd8057;
	add.s64 	%rd8160, %rd8156, %rd8159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd8131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd8131;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 14;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 14;
	mov.b64 	%rd8161, {%r5659, %r5658};
	shf.r.wrap.b32 	%r5660, %r5657, %r5656, 18;
	shf.r.wrap.b32 	%r5661, %r5656, %r5657, 18;
	mov.b64 	%rd8162, {%r5661, %r5660};
	xor.b64  	%rd8163, %rd8161, %rd8162;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 23;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 23;
	mov.b64 	%rd8164, {%r5663, %r5662};
	xor.b64  	%rd8165, %rd8163, %rd8164;
	add.s64 	%rd8166, %rd8160, %rd8165;
	add.s64 	%rd8167, %rd8166, 1977374033974150939;
	add.s64 	%rd8168, %rd8167, %rd8031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd8142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd8142;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 28;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 28;
	mov.b64 	%rd8169, {%r5667, %r5666};
	shf.l.wrap.b32 	%r5668, %r5664, %r5665, 30;
	shf.l.wrap.b32 	%r5669, %r5665, %r5664, 30;
	mov.b64 	%rd8170, {%r5669, %r5668};
	xor.b64  	%rd8171, %rd8169, %rd8170;
	shf.l.wrap.b32 	%r5670, %r5664, %r5665, 25;
	shf.l.wrap.b32 	%r5671, %r5665, %r5664, 25;
	mov.b64 	%rd8172, {%r5671, %r5670};
	xor.b64  	%rd8173, %rd8171, %rd8172;
	and.b64  	%rd8174, %rd8142, %rd8105;
	or.b64  	%rd8175, %rd8142, %rd8105;
	and.b64  	%rd8176, %rd8175, %rd8068;
	or.b64  	%rd8177, %rd8176, %rd8174;
	add.s64 	%rd8178, %rd8177, %rd8173;
	add.s64 	%rd8179, %rd8178, %rd8167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd8118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd8118;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 19;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 19;
	mov.b64 	%rd8180, {%r5675, %r5674};
	shf.l.wrap.b32 	%r5676, %r5672, %r5673, 3;
	shf.l.wrap.b32 	%r5677, %r5673, %r5672, 3;
	mov.b64 	%rd8181, {%r5677, %r5676};
	xor.b64  	%rd8182, %rd8180, %rd8181;
	shr.u64 	%rd8183, %rd8118, 6;
	xor.b64  	%rd8184, %rd8182, %rd8183;
	shf.r.wrap.b32 	%r5678, %r5335, %r5334, 1;
	shf.r.wrap.b32 	%r5679, %r5334, %r5335, 1;
	mov.b64 	%rd8185, {%r5679, %r5678};
	shf.r.wrap.b32 	%r5680, %r5335, %r5334, 8;
	shf.r.wrap.b32 	%r5681, %r5334, %r5335, 8;
	mov.b64 	%rd8186, {%r5681, %r5680};
	xor.b64  	%rd8187, %rd8185, %rd8186;
	shr.u64 	%rd8188, %rd7637, 7;
	xor.b64  	%rd8189, %rd8187, %rd8188;
	add.s64 	%rd8190, %rd8184, %rd7600;
	add.s64 	%rd8191, %rd8190, %rd7933;
	add.s64 	%rd8192, %rd8191, %rd8189;
	add.s64 	%rd8193, %rd8192, %rd8057;
	xor.b64  	%rd8194, %rd8131, %rd8094;
	and.b64  	%rd8195, %rd8168, %rd8194;
	xor.b64  	%rd8196, %rd8195, %rd8094;
	add.s64 	%rd8197, %rd8193, %rd8196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5682,%dummy}, %rd8168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5683}, %rd8168;
	}
	shf.r.wrap.b32 	%r5684, %r5683, %r5682, 14;
	shf.r.wrap.b32 	%r5685, %r5682, %r5683, 14;
	mov.b64 	%rd8198, {%r5685, %r5684};
	shf.r.wrap.b32 	%r5686, %r5683, %r5682, 18;
	shf.r.wrap.b32 	%r5687, %r5682, %r5683, 18;
	mov.b64 	%rd8199, {%r5687, %r5686};
	xor.b64  	%rd8200, %rd8198, %rd8199;
	shf.l.wrap.b32 	%r5688, %r5682, %r5683, 23;
	shf.l.wrap.b32 	%r5689, %r5683, %r5682, 23;
	mov.b64 	%rd8201, {%r5689, %r5688};
	xor.b64  	%rd8202, %rd8200, %rd8201;
	add.s64 	%rd8203, %rd8197, %rd8202;
	add.s64 	%rd8204, %rd8203, 2944078676154940804;
	add.s64 	%rd8205, %rd8204, %rd8068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5690,%dummy}, %rd8179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5691}, %rd8179;
	}
	shf.r.wrap.b32 	%r5692, %r5691, %r5690, 28;
	shf.r.wrap.b32 	%r5693, %r5690, %r5691, 28;
	mov.b64 	%rd8206, {%r5693, %r5692};
	shf.l.wrap.b32 	%r5694, %r5690, %r5691, 30;
	shf.l.wrap.b32 	%r5695, %r5691, %r5690, 30;
	mov.b64 	%rd8207, {%r5695, %r5694};
	xor.b64  	%rd8208, %rd8206, %rd8207;
	shf.l.wrap.b32 	%r5696, %r5690, %r5691, 25;
	shf.l.wrap.b32 	%r5697, %r5691, %r5690, 25;
	mov.b64 	%rd8209, {%r5697, %r5696};
	xor.b64  	%rd8210, %rd8208, %rd8209;
	and.b64  	%rd8211, %rd8179, %rd8142;
	or.b64  	%rd8212, %rd8179, %rd8142;
	and.b64  	%rd8213, %rd8212, %rd8105;
	or.b64  	%rd8214, %rd8213, %rd8211;
	add.s64 	%rd8215, %rd8214, %rd8210;
	add.s64 	%rd8216, %rd8215, %rd8204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5698,%dummy}, %rd8155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5699}, %rd8155;
	}
	shf.r.wrap.b32 	%r5700, %r5699, %r5698, 19;
	shf.r.wrap.b32 	%r5701, %r5698, %r5699, 19;
	mov.b64 	%rd8217, {%r5701, %r5700};
	shf.l.wrap.b32 	%r5702, %r5698, %r5699, 3;
	shf.l.wrap.b32 	%r5703, %r5699, %r5698, 3;
	mov.b64 	%rd8218, {%r5703, %r5702};
	xor.b64  	%rd8219, %rd8217, %rd8218;
	shr.u64 	%rd8220, %rd8155, 6;
	xor.b64  	%rd8221, %rd8219, %rd8220;
	shf.r.wrap.b32 	%r5704, %r5361, %r5360, 1;
	shf.r.wrap.b32 	%r5705, %r5360, %r5361, 1;
	mov.b64 	%rd8222, {%r5705, %r5704};
	shf.r.wrap.b32 	%r5706, %r5361, %r5360, 8;
	shf.r.wrap.b32 	%r5707, %r5360, %r5361, 8;
	mov.b64 	%rd8223, {%r5707, %r5706};
	xor.b64  	%rd8224, %rd8222, %rd8223;
	shr.u64 	%rd8225, %rd7674, 7;
	xor.b64  	%rd8226, %rd8224, %rd8225;
	add.s64 	%rd8227, %rd8221, %rd7637;
	add.s64 	%rd8228, %rd8227, %rd7970;
	add.s64 	%rd8229, %rd8228, %rd8226;
	add.s64 	%rd8230, %rd8229, %rd8094;
	xor.b64  	%rd8231, %rd8168, %rd8131;
	and.b64  	%rd8232, %rd8205, %rd8231;
	xor.b64  	%rd8233, %rd8232, %rd8131;
	add.s64 	%rd8234, %rd8230, %rd8233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5708,%dummy}, %rd8205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5709}, %rd8205;
	}
	shf.r.wrap.b32 	%r5710, %r5709, %r5708, 14;
	shf.r.wrap.b32 	%r5711, %r5708, %r5709, 14;
	mov.b64 	%rd8235, {%r5711, %r5710};
	shf.r.wrap.b32 	%r5712, %r5709, %r5708, 18;
	shf.r.wrap.b32 	%r5713, %r5708, %r5709, 18;
	mov.b64 	%rd8236, {%r5713, %r5712};
	xor.b64  	%rd8237, %rd8235, %rd8236;
	shf.l.wrap.b32 	%r5714, %r5708, %r5709, 23;
	shf.l.wrap.b32 	%r5715, %r5709, %r5708, 23;
	mov.b64 	%rd8238, {%r5715, %r5714};
	xor.b64  	%rd8239, %rd8237, %rd8238;
	add.s64 	%rd8240, %rd8234, %rd8239;
	add.s64 	%rd8241, %rd8240, 3659926193048069267;
	add.s64 	%rd8242, %rd8241, %rd8105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5716,%dummy}, %rd8216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5717}, %rd8216;
	}
	shf.r.wrap.b32 	%r5718, %r5717, %r5716, 28;
	shf.r.wrap.b32 	%r5719, %r5716, %r5717, 28;
	mov.b64 	%rd8243, {%r5719, %r5718};
	shf.l.wrap.b32 	%r5720, %r5716, %r5717, 30;
	shf.l.wrap.b32 	%r5721, %r5717, %r5716, 30;
	mov.b64 	%rd8244, {%r5721, %r5720};
	xor.b64  	%rd8245, %rd8243, %rd8244;
	shf.l.wrap.b32 	%r5722, %r5716, %r5717, 25;
	shf.l.wrap.b32 	%r5723, %r5717, %r5716, 25;
	mov.b64 	%rd8246, {%r5723, %r5722};
	xor.b64  	%rd8247, %rd8245, %rd8246;
	and.b64  	%rd8248, %rd8216, %rd8179;
	or.b64  	%rd8249, %rd8216, %rd8179;
	and.b64  	%rd8250, %rd8249, %rd8142;
	or.b64  	%rd8251, %rd8250, %rd8248;
	add.s64 	%rd8252, %rd8251, %rd8247;
	add.s64 	%rd8253, %rd8252, %rd8241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5724,%dummy}, %rd8192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5725}, %rd8192;
	}
	shf.r.wrap.b32 	%r5726, %r5725, %r5724, 19;
	shf.r.wrap.b32 	%r5727, %r5724, %r5725, 19;
	mov.b64 	%rd8254, {%r5727, %r5726};
	shf.l.wrap.b32 	%r5728, %r5724, %r5725, 3;
	shf.l.wrap.b32 	%r5729, %r5725, %r5724, 3;
	mov.b64 	%rd8255, {%r5729, %r5728};
	xor.b64  	%rd8256, %rd8254, %rd8255;
	shr.u64 	%rd8257, %rd8192, 6;
	xor.b64  	%rd8258, %rd8256, %rd8257;
	shf.r.wrap.b32 	%r5730, %r5387, %r5386, 1;
	shf.r.wrap.b32 	%r5731, %r5386, %r5387, 1;
	mov.b64 	%rd8259, {%r5731, %r5730};
	shf.r.wrap.b32 	%r5732, %r5387, %r5386, 8;
	shf.r.wrap.b32 	%r5733, %r5386, %r5387, 8;
	mov.b64 	%rd8260, {%r5733, %r5732};
	xor.b64  	%rd8261, %rd8259, %rd8260;
	shr.u64 	%rd8262, %rd7711, 7;
	xor.b64  	%rd8263, %rd8261, %rd8262;
	add.s64 	%rd8264, %rd8258, %rd7674;
	add.s64 	%rd8265, %rd8264, %rd8007;
	add.s64 	%rd8266, %rd8265, %rd8263;
	add.s64 	%rd8267, %rd8266, %rd8131;
	xor.b64  	%rd8268, %rd8205, %rd8168;
	and.b64  	%rd8269, %rd8242, %rd8268;
	xor.b64  	%rd8270, %rd8269, %rd8168;
	add.s64 	%rd8271, %rd8267, %rd8270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5734,%dummy}, %rd8242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5735}, %rd8242;
	}
	shf.r.wrap.b32 	%r5736, %r5735, %r5734, 14;
	shf.r.wrap.b32 	%r5737, %r5734, %r5735, 14;
	mov.b64 	%rd8272, {%r5737, %r5736};
	shf.r.wrap.b32 	%r5738, %r5735, %r5734, 18;
	shf.r.wrap.b32 	%r5739, %r5734, %r5735, 18;
	mov.b64 	%rd8273, {%r5739, %r5738};
	xor.b64  	%rd8274, %rd8272, %rd8273;
	shf.l.wrap.b32 	%r5740, %r5734, %r5735, 23;
	shf.l.wrap.b32 	%r5741, %r5735, %r5734, 23;
	mov.b64 	%rd8275, {%r5741, %r5740};
	xor.b64  	%rd8276, %rd8274, %rd8275;
	add.s64 	%rd8277, %rd8271, %rd8276;
	add.s64 	%rd8278, %rd8277, 4368137639120453308;
	add.s64 	%rd8279, %rd8278, %rd8142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5742,%dummy}, %rd8253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5743}, %rd8253;
	}
	shf.r.wrap.b32 	%r5744, %r5743, %r5742, 28;
	shf.r.wrap.b32 	%r5745, %r5742, %r5743, 28;
	mov.b64 	%rd8280, {%r5745, %r5744};
	shf.l.wrap.b32 	%r5746, %r5742, %r5743, 30;
	shf.l.wrap.b32 	%r5747, %r5743, %r5742, 30;
	mov.b64 	%rd8281, {%r5747, %r5746};
	xor.b64  	%rd8282, %rd8280, %rd8281;
	shf.l.wrap.b32 	%r5748, %r5742, %r5743, 25;
	shf.l.wrap.b32 	%r5749, %r5743, %r5742, 25;
	mov.b64 	%rd8283, {%r5749, %r5748};
	xor.b64  	%rd8284, %rd8282, %rd8283;
	and.b64  	%rd8285, %rd8253, %rd8216;
	or.b64  	%rd8286, %rd8253, %rd8216;
	and.b64  	%rd8287, %rd8286, %rd8179;
	or.b64  	%rd8288, %rd8287, %rd8285;
	add.s64 	%rd8289, %rd8288, %rd8284;
	add.s64 	%rd8290, %rd8289, %rd8278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd8229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5751}, %rd8229;
	}
	shf.r.wrap.b32 	%r5752, %r5751, %r5750, 19;
	shf.r.wrap.b32 	%r5753, %r5750, %r5751, 19;
	mov.b64 	%rd8291, {%r5753, %r5752};
	shf.l.wrap.b32 	%r5754, %r5750, %r5751, 3;
	shf.l.wrap.b32 	%r5755, %r5751, %r5750, 3;
	mov.b64 	%rd8292, {%r5755, %r5754};
	xor.b64  	%rd8293, %rd8291, %rd8292;
	shr.u64 	%rd8294, %rd8229, 6;
	xor.b64  	%rd8295, %rd8293, %rd8294;
	shf.r.wrap.b32 	%r5756, %r5413, %r5412, 1;
	shf.r.wrap.b32 	%r5757, %r5412, %r5413, 1;
	mov.b64 	%rd8296, {%r5757, %r5756};
	shf.r.wrap.b32 	%r5758, %r5413, %r5412, 8;
	shf.r.wrap.b32 	%r5759, %r5412, %r5413, 8;
	mov.b64 	%rd8297, {%r5759, %r5758};
	xor.b64  	%rd8298, %rd8296, %rd8297;
	shr.u64 	%rd8299, %rd7748, 7;
	xor.b64  	%rd8300, %rd8298, %rd8299;
	add.s64 	%rd8301, %rd8295, %rd7711;
	add.s64 	%rd8302, %rd8301, %rd8044;
	add.s64 	%rd8303, %rd8302, %rd8300;
	add.s64 	%rd8304, %rd8303, %rd8168;
	xor.b64  	%rd8305, %rd8242, %rd8205;
	and.b64  	%rd8306, %rd8279, %rd8305;
	xor.b64  	%rd8307, %rd8306, %rd8205;
	add.s64 	%rd8308, %rd8304, %rd8307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5760,%dummy}, %rd8279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd8279;
	}
	shf.r.wrap.b32 	%r5762, %r5761, %r5760, 14;
	shf.r.wrap.b32 	%r5763, %r5760, %r5761, 14;
	mov.b64 	%rd8309, {%r5763, %r5762};
	shf.r.wrap.b32 	%r5764, %r5761, %r5760, 18;
	shf.r.wrap.b32 	%r5765, %r5760, %r5761, 18;
	mov.b64 	%rd8310, {%r5765, %r5764};
	xor.b64  	%rd8311, %rd8309, %rd8310;
	shf.l.wrap.b32 	%r5766, %r5760, %r5761, 23;
	shf.l.wrap.b32 	%r5767, %r5761, %r5760, 23;
	mov.b64 	%rd8312, {%r5767, %r5766};
	xor.b64  	%rd8313, %rd8311, %rd8312;
	add.s64 	%rd8314, %rd8308, %rd8313;
	add.s64 	%rd8315, %rd8314, 4836135668995329356;
	add.s64 	%rd8316, %rd8315, %rd8179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd8290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd8290;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 28;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 28;
	mov.b64 	%rd8317, {%r5771, %r5770};
	shf.l.wrap.b32 	%r5772, %r5768, %r5769, 30;
	shf.l.wrap.b32 	%r5773, %r5769, %r5768, 30;
	mov.b64 	%rd8318, {%r5773, %r5772};
	xor.b64  	%rd8319, %rd8317, %rd8318;
	shf.l.wrap.b32 	%r5774, %r5768, %r5769, 25;
	shf.l.wrap.b32 	%r5775, %r5769, %r5768, 25;
	mov.b64 	%rd8320, {%r5775, %r5774};
	xor.b64  	%rd8321, %rd8319, %rd8320;
	and.b64  	%rd8322, %rd8290, %rd8253;
	or.b64  	%rd8323, %rd8290, %rd8253;
	and.b64  	%rd8324, %rd8323, %rd8216;
	or.b64  	%rd8325, %rd8324, %rd8322;
	add.s64 	%rd8326, %rd8325, %rd8321;
	add.s64 	%rd8327, %rd8326, %rd8315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5776,%dummy}, %rd8266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5777}, %rd8266;
	}
	shf.r.wrap.b32 	%r5778, %r5777, %r5776, 19;
	shf.r.wrap.b32 	%r5779, %r5776, %r5777, 19;
	mov.b64 	%rd8328, {%r5779, %r5778};
	shf.l.wrap.b32 	%r5780, %r5776, %r5777, 3;
	shf.l.wrap.b32 	%r5781, %r5777, %r5776, 3;
	mov.b64 	%rd8329, {%r5781, %r5780};
	xor.b64  	%rd8330, %rd8328, %rd8329;
	shr.u64 	%rd8331, %rd8266, 6;
	xor.b64  	%rd8332, %rd8330, %rd8331;
	shf.r.wrap.b32 	%r5782, %r5439, %r5438, 1;
	shf.r.wrap.b32 	%r5783, %r5438, %r5439, 1;
	mov.b64 	%rd8333, {%r5783, %r5782};
	shf.r.wrap.b32 	%r5784, %r5439, %r5438, 8;
	shf.r.wrap.b32 	%r5785, %r5438, %r5439, 8;
	mov.b64 	%rd8334, {%r5785, %r5784};
	xor.b64  	%rd8335, %rd8333, %rd8334;
	shr.u64 	%rd8336, %rd7785, 7;
	xor.b64  	%rd8337, %rd8335, %rd8336;
	add.s64 	%rd8338, %rd8332, %rd7748;
	add.s64 	%rd8339, %rd8338, %rd8081;
	add.s64 	%rd8340, %rd8339, %rd8337;
	add.s64 	%rd8341, %rd8340, %rd8205;
	xor.b64  	%rd8342, %rd8279, %rd8242;
	and.b64  	%rd8343, %rd8316, %rd8342;
	xor.b64  	%rd8344, %rd8343, %rd8242;
	add.s64 	%rd8345, %rd8341, %rd8344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd8316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd8316;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 14;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 14;
	mov.b64 	%rd8346, {%r5789, %r5788};
	shf.r.wrap.b32 	%r5790, %r5787, %r5786, 18;
	shf.r.wrap.b32 	%r5791, %r5786, %r5787, 18;
	mov.b64 	%rd8347, {%r5791, %r5790};
	xor.b64  	%rd8348, %rd8346, %rd8347;
	shf.l.wrap.b32 	%r5792, %r5786, %r5787, 23;
	shf.l.wrap.b32 	%r5793, %r5787, %r5786, 23;
	mov.b64 	%rd8349, {%r5793, %r5792};
	xor.b64  	%rd8350, %rd8348, %rd8349;
	add.s64 	%rd8351, %rd8345, %rd8350;
	add.s64 	%rd8352, %rd8351, 5532061633213252278;
	add.s64 	%rd8353, %rd8352, %rd8216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5794,%dummy}, %rd8327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5795}, %rd8327;
	}
	shf.r.wrap.b32 	%r5796, %r5795, %r5794, 28;
	shf.r.wrap.b32 	%r5797, %r5794, %r5795, 28;
	mov.b64 	%rd8354, {%r5797, %r5796};
	shf.l.wrap.b32 	%r5798, %r5794, %r5795, 30;
	shf.l.wrap.b32 	%r5799, %r5795, %r5794, 30;
	mov.b64 	%rd8355, {%r5799, %r5798};
	xor.b64  	%rd8356, %rd8354, %rd8355;
	shf.l.wrap.b32 	%r5800, %r5794, %r5795, 25;
	shf.l.wrap.b32 	%r5801, %r5795, %r5794, 25;
	mov.b64 	%rd8357, {%r5801, %r5800};
	xor.b64  	%rd8358, %rd8356, %rd8357;
	and.b64  	%rd8359, %rd8327, %rd8290;
	or.b64  	%rd8360, %rd8327, %rd8290;
	and.b64  	%rd8361, %rd8360, %rd8253;
	or.b64  	%rd8362, %rd8361, %rd8359;
	add.s64 	%rd8363, %rd8362, %rd8358;
	add.s64 	%rd8364, %rd8363, %rd8352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5802,%dummy}, %rd8303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5803}, %rd8303;
	}
	shf.r.wrap.b32 	%r5804, %r5803, %r5802, 19;
	shf.r.wrap.b32 	%r5805, %r5802, %r5803, 19;
	mov.b64 	%rd8365, {%r5805, %r5804};
	shf.l.wrap.b32 	%r5806, %r5802, %r5803, 3;
	shf.l.wrap.b32 	%r5807, %r5803, %r5802, 3;
	mov.b64 	%rd8366, {%r5807, %r5806};
	xor.b64  	%rd8367, %rd8365, %rd8366;
	shr.u64 	%rd8368, %rd8303, 6;
	xor.b64  	%rd8369, %rd8367, %rd8368;
	shf.r.wrap.b32 	%r5808, %r5465, %r5464, 1;
	shf.r.wrap.b32 	%r5809, %r5464, %r5465, 1;
	mov.b64 	%rd8370, {%r5809, %r5808};
	shf.r.wrap.b32 	%r5810, %r5465, %r5464, 8;
	shf.r.wrap.b32 	%r5811, %r5464, %r5465, 8;
	mov.b64 	%rd8371, {%r5811, %r5810};
	xor.b64  	%rd8372, %rd8370, %rd8371;
	shr.u64 	%rd8373, %rd7822, 7;
	xor.b64  	%rd8374, %rd8372, %rd8373;
	add.s64 	%rd8375, %rd8369, %rd7785;
	add.s64 	%rd8376, %rd8375, %rd8118;
	add.s64 	%rd8377, %rd8376, %rd8374;
	add.s64 	%rd8378, %rd8377, %rd8242;
	xor.b64  	%rd8379, %rd8316, %rd8279;
	and.b64  	%rd8380, %rd8353, %rd8379;
	xor.b64  	%rd8381, %rd8380, %rd8279;
	add.s64 	%rd8382, %rd8378, %rd8381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5812,%dummy}, %rd8353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5813}, %rd8353;
	}
	shf.r.wrap.b32 	%r5814, %r5813, %r5812, 14;
	shf.r.wrap.b32 	%r5815, %r5812, %r5813, 14;
	mov.b64 	%rd8383, {%r5815, %r5814};
	shf.r.wrap.b32 	%r5816, %r5813, %r5812, 18;
	shf.r.wrap.b32 	%r5817, %r5812, %r5813, 18;
	mov.b64 	%rd8384, {%r5817, %r5816};
	xor.b64  	%rd8385, %rd8383, %rd8384;
	shf.l.wrap.b32 	%r5818, %r5812, %r5813, 23;
	shf.l.wrap.b32 	%r5819, %r5813, %r5812, 23;
	mov.b64 	%rd8386, {%r5819, %r5818};
	xor.b64  	%rd8387, %rd8385, %rd8386;
	add.s64 	%rd8388, %rd8382, %rd8387;
	add.s64 	%rd8389, %rd8388, 6448918945643986474;
	add.s64 	%rd8390, %rd8389, %rd8253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5820,%dummy}, %rd8364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5821}, %rd8364;
	}
	shf.r.wrap.b32 	%r5822, %r5821, %r5820, 28;
	shf.r.wrap.b32 	%r5823, %r5820, %r5821, 28;
	mov.b64 	%rd8391, {%r5823, %r5822};
	shf.l.wrap.b32 	%r5824, %r5820, %r5821, 30;
	shf.l.wrap.b32 	%r5825, %r5821, %r5820, 30;
	mov.b64 	%rd8392, {%r5825, %r5824};
	xor.b64  	%rd8393, %rd8391, %rd8392;
	shf.l.wrap.b32 	%r5826, %r5820, %r5821, 25;
	shf.l.wrap.b32 	%r5827, %r5821, %r5820, 25;
	mov.b64 	%rd8394, {%r5827, %r5826};
	xor.b64  	%rd8395, %rd8393, %rd8394;
	and.b64  	%rd8396, %rd8364, %rd8327;
	or.b64  	%rd8397, %rd8364, %rd8327;
	and.b64  	%rd8398, %rd8397, %rd8290;
	or.b64  	%rd8399, %rd8398, %rd8396;
	add.s64 	%rd8400, %rd8399, %rd8395;
	add.s64 	%rd8401, %rd8400, %rd8389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd8340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd8340;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 19;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 19;
	mov.b64 	%rd8402, {%r5831, %r5830};
	shf.l.wrap.b32 	%r5832, %r5828, %r5829, 3;
	shf.l.wrap.b32 	%r5833, %r5829, %r5828, 3;
	mov.b64 	%rd8403, {%r5833, %r5832};
	xor.b64  	%rd8404, %rd8402, %rd8403;
	shr.u64 	%rd8405, %rd8340, 6;
	xor.b64  	%rd8406, %rd8404, %rd8405;
	shf.r.wrap.b32 	%r5834, %r5491, %r5490, 1;
	shf.r.wrap.b32 	%r5835, %r5490, %r5491, 1;
	mov.b64 	%rd8407, {%r5835, %r5834};
	shf.r.wrap.b32 	%r5836, %r5491, %r5490, 8;
	shf.r.wrap.b32 	%r5837, %r5490, %r5491, 8;
	mov.b64 	%rd8408, {%r5837, %r5836};
	xor.b64  	%rd8409, %rd8407, %rd8408;
	shr.u64 	%rd8410, %rd7859, 7;
	xor.b64  	%rd8411, %rd8409, %rd8410;
	add.s64 	%rd8412, %rd8406, %rd7822;
	add.s64 	%rd8413, %rd8412, %rd8155;
	add.s64 	%rd8414, %rd8413, %rd8411;
	add.s64 	%rd8415, %rd8414, %rd8279;
	xor.b64  	%rd8416, %rd8353, %rd8316;
	and.b64  	%rd8417, %rd8390, %rd8416;
	xor.b64  	%rd8418, %rd8417, %rd8316;
	add.s64 	%rd8419, %rd8415, %rd8418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5838,%dummy}, %rd8390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5839}, %rd8390;
	}
	shf.r.wrap.b32 	%r5840, %r5839, %r5838, 14;
	shf.r.wrap.b32 	%r5841, %r5838, %r5839, 14;
	mov.b64 	%rd8420, {%r5841, %r5840};
	shf.r.wrap.b32 	%r5842, %r5839, %r5838, 18;
	shf.r.wrap.b32 	%r5843, %r5838, %r5839, 18;
	mov.b64 	%rd8421, {%r5843, %r5842};
	xor.b64  	%rd8422, %rd8420, %rd8421;
	shf.l.wrap.b32 	%r5844, %r5838, %r5839, 23;
	shf.l.wrap.b32 	%r5845, %r5839, %r5838, 23;
	mov.b64 	%rd8423, {%r5845, %r5844};
	xor.b64  	%rd8424, %rd8422, %rd8423;
	add.s64 	%rd8425, %rd8419, %rd8424;
	add.s64 	%rd8426, %rd8425, 6902733635092675308;
	add.s64 	%rd8427, %rd8426, %rd8290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd8401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd8401;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 28;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 28;
	mov.b64 	%rd8428, {%r5849, %r5848};
	shf.l.wrap.b32 	%r5850, %r5846, %r5847, 30;
	shf.l.wrap.b32 	%r5851, %r5847, %r5846, 30;
	mov.b64 	%rd8429, {%r5851, %r5850};
	xor.b64  	%rd8430, %rd8428, %rd8429;
	shf.l.wrap.b32 	%r5852, %r5846, %r5847, 25;
	shf.l.wrap.b32 	%r5853, %r5847, %r5846, 25;
	mov.b64 	%rd8431, {%r5853, %r5852};
	xor.b64  	%rd8432, %rd8430, %rd8431;
	and.b64  	%rd8433, %rd8401, %rd8364;
	or.b64  	%rd8434, %rd8401, %rd8364;
	and.b64  	%rd8435, %rd8434, %rd8327;
	or.b64  	%rd8436, %rd8435, %rd8433;
	add.s64 	%rd8437, %rd8436, %rd8432;
	add.s64 	%rd8438, %rd8437, %rd8426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5854,%dummy}, %rd8377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5855}, %rd8377;
	}
	shf.r.wrap.b32 	%r5856, %r5855, %r5854, 19;
	shf.r.wrap.b32 	%r5857, %r5854, %r5855, 19;
	mov.b64 	%rd8439, {%r5857, %r5856};
	shf.l.wrap.b32 	%r5858, %r5854, %r5855, 3;
	shf.l.wrap.b32 	%r5859, %r5855, %r5854, 3;
	mov.b64 	%rd8440, {%r5859, %r5858};
	xor.b64  	%rd8441, %rd8439, %rd8440;
	shr.u64 	%rd8442, %rd8377, 6;
	xor.b64  	%rd8443, %rd8441, %rd8442;
	shf.r.wrap.b32 	%r5860, %r5517, %r5516, 1;
	shf.r.wrap.b32 	%r5861, %r5516, %r5517, 1;
	mov.b64 	%rd8444, {%r5861, %r5860};
	shf.r.wrap.b32 	%r5862, %r5517, %r5516, 8;
	shf.r.wrap.b32 	%r5863, %r5516, %r5517, 8;
	mov.b64 	%rd8445, {%r5863, %r5862};
	xor.b64  	%rd8446, %rd8444, %rd8445;
	shr.u64 	%rd8447, %rd7896, 7;
	xor.b64  	%rd8448, %rd8446, %rd8447;
	add.s64 	%rd8449, %rd8443, %rd7859;
	add.s64 	%rd8450, %rd8449, %rd8192;
	add.s64 	%rd8451, %rd8450, %rd8448;
	add.s64 	%rd8452, %rd8451, %rd8316;
	xor.b64  	%rd8453, %rd8390, %rd8353;
	and.b64  	%rd8454, %rd8427, %rd8453;
	xor.b64  	%rd8455, %rd8454, %rd8353;
	add.s64 	%rd8456, %rd8452, %rd8455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd8427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd8427;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 14;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 14;
	mov.b64 	%rd8457, {%r5867, %r5866};
	shf.r.wrap.b32 	%r5868, %r5865, %r5864, 18;
	shf.r.wrap.b32 	%r5869, %r5864, %r5865, 18;
	mov.b64 	%rd8458, {%r5869, %r5868};
	xor.b64  	%rd8459, %rd8457, %rd8458;
	shf.l.wrap.b32 	%r5870, %r5864, %r5865, 23;
	shf.l.wrap.b32 	%r5871, %r5865, %r5864, 23;
	mov.b64 	%rd8460, {%r5871, %r5870};
	xor.b64  	%rd8461, %rd8459, %rd8460;
	add.s64 	%rd8462, %rd8456, %rd8461;
	add.s64 	%rd8463, %rd8462, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5872,%dummy}, %rd8438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5873}, %rd8438;
	}
	shf.r.wrap.b32 	%r5874, %r5873, %r5872, 28;
	shf.r.wrap.b32 	%r5875, %r5872, %r5873, 28;
	mov.b64 	%rd8464, {%r5875, %r5874};
	shf.l.wrap.b32 	%r5876, %r5872, %r5873, 30;
	shf.l.wrap.b32 	%r5877, %r5873, %r5872, 30;
	mov.b64 	%rd8465, {%r5877, %r5876};
	xor.b64  	%rd8466, %rd8464, %rd8465;
	shf.l.wrap.b32 	%r5878, %r5872, %r5873, 25;
	shf.l.wrap.b32 	%r5879, %r5873, %r5872, 25;
	mov.b64 	%rd8467, {%r5879, %r5878};
	xor.b64  	%rd8468, %rd8466, %rd8467;
	and.b64  	%rd8469, %rd8438, %rd8401;
	or.b64  	%rd8470, %rd8438, %rd8401;
	and.b64  	%rd8471, %rd8470, %rd8364;
	or.b64  	%rd8472, %rd8471, %rd8469;
	add.s64 	%rd8473, %rd8468, %rd17;
	add.s64 	%rd8474, %rd8473, %rd8472;
	add.s64 	%rd8475, %rd8474, %rd8463;
	add.s64 	%rd8476, %rd8438, %rd18;
	add.s64 	%rd8477, %rd8401, %rd19;
	add.s64 	%rd8478, %rd8364, %rd20;
	add.s64 	%rd8479, %rd8327, %rd21;
	add.s64 	%rd8480, %rd8479, %rd8463;
	add.s64 	%rd8481, %rd8427, %rd22;
	add.s64 	%rd8482, %rd8390, %rd23;
	add.s64 	%rd8483, %rd8353, %rd24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5880,%dummy}, %rd40;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5881}, %rd40;
	}
	shf.r.wrap.b32 	%r5882, %r5881, %r5880, 18;
	shf.r.wrap.b32 	%r5883, %r5880, %r5881, 18;
	mov.b64 	%rd8484, {%r5883, %r5882};
	shf.r.wrap.b32 	%r5884, %r5881, %r5880, 14;
	shf.r.wrap.b32 	%r5885, %r5880, %r5881, 14;
	mov.b64 	%rd8485, {%r5885, %r5884};
	xor.b64  	%rd8486, %rd8485, %rd8484;
	shf.l.wrap.b32 	%r5886, %r5880, %r5881, 23;
	shf.l.wrap.b32 	%r5887, %r5881, %r5880, 23;
	mov.b64 	%rd8487, {%r5887, %r5886};
	xor.b64  	%rd8488, %rd8486, %rd8487;
	xor.b64  	%rd8489, %rd42, %rd41;
	and.b64  	%rd8490, %rd8489, %rd40;
	xor.b64  	%rd8491, %rd8490, %rd42;
	add.s64 	%rd8492, %rd33, %rd8488;
	add.s64 	%rd8493, %rd8492, %rd8475;
	add.s64 	%rd8494, %rd8493, %rd8491;
	add.s64 	%rd8495, %rd8494, -7031530027109396581;
	add.s64 	%rd8496, %rd8495, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5888}, %rd36;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5889,%dummy}, %rd36;
	}
	shf.l.wrap.b32 	%r5890, %r5889, %r5888, 30;
	shf.l.wrap.b32 	%r5891, %r5888, %r5889, 30;
	mov.b64 	%rd8497, {%r5891, %r5890};
	shf.r.wrap.b32 	%r5892, %r5888, %r5889, 28;
	shf.r.wrap.b32 	%r5893, %r5889, %r5888, 28;
	mov.b64 	%rd8498, {%r5893, %r5892};
	xor.b64  	%rd8499, %rd8498, %rd8497;
	shf.l.wrap.b32 	%r5894, %r5889, %r5888, 25;
	shf.l.wrap.b32 	%r5895, %r5888, %r5889, 25;
	mov.b64 	%rd8500, {%r5895, %r5894};
	xor.b64  	%rd8501, %rd8499, %rd8500;
	or.b64  	%rd8502, %rd37, %rd36;
	and.b64  	%rd8503, %rd38, %rd8502;
	and.b64  	%rd8504, %rd37, %rd36;
	or.b64  	%rd8505, %rd8503, %rd8504;
	add.s64 	%rd8506, %rd8505, %rd8501;
	add.s64 	%rd8507, %rd8506, %rd8495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5896,%dummy}, %rd8496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5897}, %rd8496;
	}
	shf.r.wrap.b32 	%r5898, %r5897, %r5896, 14;
	shf.r.wrap.b32 	%r5899, %r5896, %r5897, 14;
	mov.b64 	%rd8508, {%r5899, %r5898};
	shf.r.wrap.b32 	%r5900, %r5897, %r5896, 18;
	shf.r.wrap.b32 	%r5901, %r5896, %r5897, 18;
	mov.b64 	%rd8509, {%r5901, %r5900};
	xor.b64  	%rd8510, %rd8508, %rd8509;
	shf.l.wrap.b32 	%r5902, %r5896, %r5897, 23;
	shf.l.wrap.b32 	%r5903, %r5897, %r5896, 23;
	mov.b64 	%rd8511, {%r5903, %r5902};
	xor.b64  	%rd8512, %rd8510, %rd8511;
	xor.b64  	%rd8513, %rd41, %rd40;
	and.b64  	%rd8514, %rd8496, %rd8513;
	xor.b64  	%rd8515, %rd8514, %rd41;
	add.s64 	%rd8516, %rd34, %rd8476;
	add.s64 	%rd8517, %rd8516, %rd8515;
	add.s64 	%rd8518, %rd8517, %rd8512;
	add.s64 	%rd8519, %rd8518, -8017781463737883848;
	add.s64 	%rd8520, %rd8519, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5904,%dummy}, %rd8507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5905}, %rd8507;
	}
	shf.r.wrap.b32 	%r5906, %r5905, %r5904, 28;
	shf.r.wrap.b32 	%r5907, %r5904, %r5905, 28;
	mov.b64 	%rd8521, {%r5907, %r5906};
	shf.l.wrap.b32 	%r5908, %r5904, %r5905, 30;
	shf.l.wrap.b32 	%r5909, %r5905, %r5904, 30;
	mov.b64 	%rd8522, {%r5909, %r5908};
	xor.b64  	%rd8523, %rd8521, %rd8522;
	shf.l.wrap.b32 	%r5910, %r5904, %r5905, 25;
	shf.l.wrap.b32 	%r5911, %r5905, %r5904, 25;
	mov.b64 	%rd8524, {%r5911, %r5910};
	xor.b64  	%rd8525, %rd8523, %rd8524;
	and.b64  	%rd8526, %rd8507, %rd36;
	or.b64  	%rd8527, %rd8507, %rd36;
	and.b64  	%rd8528, %rd8527, %rd37;
	or.b64  	%rd8529, %rd8528, %rd8526;
	add.s64 	%rd8530, %rd8529, %rd8525;
	add.s64 	%rd8531, %rd8530, %rd8519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5912,%dummy}, %rd8520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5913}, %rd8520;
	}
	shf.r.wrap.b32 	%r5914, %r5913, %r5912, 14;
	shf.r.wrap.b32 	%r5915, %r5912, %r5913, 14;
	mov.b64 	%rd8532, {%r5915, %r5914};
	shf.r.wrap.b32 	%r5916, %r5913, %r5912, 18;
	shf.r.wrap.b32 	%r5917, %r5912, %r5913, 18;
	mov.b64 	%rd8533, {%r5917, %r5916};
	xor.b64  	%rd8534, %rd8532, %rd8533;
	shf.l.wrap.b32 	%r5918, %r5912, %r5913, 23;
	shf.l.wrap.b32 	%r5919, %r5913, %r5912, 23;
	mov.b64 	%rd8535, {%r5919, %r5918};
	xor.b64  	%rd8536, %rd8534, %rd8535;
	xor.b64  	%rd8537, %rd8496, %rd40;
	and.b64  	%rd8538, %rd8520, %rd8537;
	xor.b64  	%rd8539, %rd8538, %rd40;
	add.s64 	%rd8540, %rd35, %rd8477;
	add.s64 	%rd8541, %rd8540, %rd8539;
	add.s64 	%rd8542, %rd8541, %rd8536;
	add.s64 	%rd8543, %rd8542, 5820449915117741902;
	add.s64 	%rd8544, %rd8543, %rd37;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5920,%dummy}, %rd8531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5921}, %rd8531;
	}
	shf.r.wrap.b32 	%r5922, %r5921, %r5920, 28;
	shf.r.wrap.b32 	%r5923, %r5920, %r5921, 28;
	mov.b64 	%rd8545, {%r5923, %r5922};
	shf.l.wrap.b32 	%r5924, %r5920, %r5921, 30;
	shf.l.wrap.b32 	%r5925, %r5921, %r5920, 30;
	mov.b64 	%rd8546, {%r5925, %r5924};
	xor.b64  	%rd8547, %rd8545, %rd8546;
	shf.l.wrap.b32 	%r5926, %r5920, %r5921, 25;
	shf.l.wrap.b32 	%r5927, %r5921, %r5920, 25;
	mov.b64 	%rd8548, {%r5927, %r5926};
	xor.b64  	%rd8549, %rd8547, %rd8548;
	and.b64  	%rd8550, %rd8531, %rd8507;
	or.b64  	%rd8551, %rd8531, %rd8507;
	and.b64  	%rd8552, %rd8551, %rd36;
	or.b64  	%rd8553, %rd8552, %rd8550;
	add.s64 	%rd8554, %rd8553, %rd8549;
	add.s64 	%rd8555, %rd8554, %rd8543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5928,%dummy}, %rd8544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5929}, %rd8544;
	}
	shf.r.wrap.b32 	%r5930, %r5929, %r5928, 14;
	shf.r.wrap.b32 	%r5931, %r5928, %r5929, 14;
	mov.b64 	%rd8556, {%r5931, %r5930};
	shf.r.wrap.b32 	%r5932, %r5929, %r5928, 18;
	shf.r.wrap.b32 	%r5933, %r5928, %r5929, 18;
	mov.b64 	%rd8557, {%r5933, %r5932};
	xor.b64  	%rd8558, %rd8556, %rd8557;
	shf.l.wrap.b32 	%r5934, %r5928, %r5929, 23;
	shf.l.wrap.b32 	%r5935, %r5929, %r5928, 23;
	mov.b64 	%rd8559, {%r5935, %r5934};
	xor.b64  	%rd8560, %rd8558, %rd8559;
	xor.b64  	%rd8561, %rd8520, %rd8496;
	and.b64  	%rd8562, %rd8544, %rd8561;
	xor.b64  	%rd8563, %rd8562, %rd8496;
	add.s64 	%rd8564, %rd40, %rd8478;
	add.s64 	%rd8565, %rd8564, %rd8563;
	add.s64 	%rd8566, %rd8565, %rd8560;
	add.s64 	%rd8567, %rd8566, -1606136188198331460;
	add.s64 	%rd8568, %rd8567, %rd36;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5936,%dummy}, %rd8555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5937}, %rd8555;
	}
	shf.r.wrap.b32 	%r5938, %r5937, %r5936, 28;
	shf.r.wrap.b32 	%r5939, %r5936, %r5937, 28;
	mov.b64 	%rd8569, {%r5939, %r5938};
	shf.l.wrap.b32 	%r5940, %r5936, %r5937, 30;
	shf.l.wrap.b32 	%r5941, %r5937, %r5936, 30;
	mov.b64 	%rd8570, {%r5941, %r5940};
	xor.b64  	%rd8571, %rd8569, %rd8570;
	shf.l.wrap.b32 	%r5942, %r5936, %r5937, 25;
	shf.l.wrap.b32 	%r5943, %r5937, %r5936, 25;
	mov.b64 	%rd8572, {%r5943, %r5942};
	xor.b64  	%rd8573, %rd8571, %rd8572;
	and.b64  	%rd8574, %rd8555, %rd8531;
	or.b64  	%rd8575, %rd8555, %rd8531;
	and.b64  	%rd8576, %rd8575, %rd8507;
	or.b64  	%rd8577, %rd8576, %rd8574;
	add.s64 	%rd8578, %rd8577, %rd8573;
	add.s64 	%rd8579, %rd8578, %rd8567;
	add.s64 	%rd8580, %rd8480, %rd8496;
	xor.b64  	%rd8581, %rd8544, %rd8520;
	and.b64  	%rd8582, %rd8568, %rd8581;
	xor.b64  	%rd8583, %rd8582, %rd8520;
	add.s64 	%rd8584, %rd8580, %rd8583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5944,%dummy}, %rd8568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5945}, %rd8568;
	}
	shf.r.wrap.b32 	%r5946, %r5945, %r5944, 14;
	shf.r.wrap.b32 	%r5947, %r5944, %r5945, 14;
	mov.b64 	%rd8585, {%r5947, %r5946};
	shf.r.wrap.b32 	%r5948, %r5945, %r5944, 18;
	shf.r.wrap.b32 	%r5949, %r5944, %r5945, 18;
	mov.b64 	%rd8586, {%r5949, %r5948};
	xor.b64  	%rd8587, %rd8585, %rd8586;
	shf.l.wrap.b32 	%r5950, %r5944, %r5945, 23;
	shf.l.wrap.b32 	%r5951, %r5945, %r5944, 23;
	mov.b64 	%rd8588, {%r5951, %r5950};
	xor.b64  	%rd8589, %rd8587, %rd8588;
	add.s64 	%rd8590, %rd8584, %rd8589;
	add.s64 	%rd8591, %rd8590, 4131703408338449720;
	add.s64 	%rd8592, %rd8591, %rd8507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5952,%dummy}, %rd8579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5953}, %rd8579;
	}
	shf.r.wrap.b32 	%r5954, %r5953, %r5952, 28;
	shf.r.wrap.b32 	%r5955, %r5952, %r5953, 28;
	mov.b64 	%rd8593, {%r5955, %r5954};
	shf.l.wrap.b32 	%r5956, %r5952, %r5953, 30;
	shf.l.wrap.b32 	%r5957, %r5953, %r5952, 30;
	mov.b64 	%rd8594, {%r5957, %r5956};
	xor.b64  	%rd8595, %rd8593, %rd8594;
	shf.l.wrap.b32 	%r5958, %r5952, %r5953, 25;
	shf.l.wrap.b32 	%r5959, %r5953, %r5952, 25;
	mov.b64 	%rd8596, {%r5959, %r5958};
	xor.b64  	%rd8597, %rd8595, %rd8596;
	and.b64  	%rd8598, %rd8579, %rd8555;
	or.b64  	%rd8599, %rd8579, %rd8555;
	and.b64  	%rd8600, %rd8599, %rd8531;
	or.b64  	%rd8601, %rd8600, %rd8598;
	add.s64 	%rd8602, %rd8601, %rd8597;
	add.s64 	%rd8603, %rd8602, %rd8591;
	add.s64 	%rd8604, %rd8481, %rd8520;
	xor.b64  	%rd8605, %rd8568, %rd8544;
	and.b64  	%rd8606, %rd8592, %rd8605;
	xor.b64  	%rd8607, %rd8606, %rd8544;
	add.s64 	%rd8608, %rd8604, %rd8607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5960,%dummy}, %rd8592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5961}, %rd8592;
	}
	shf.r.wrap.b32 	%r5962, %r5961, %r5960, 14;
	shf.r.wrap.b32 	%r5963, %r5960, %r5961, 14;
	mov.b64 	%rd8609, {%r5963, %r5962};
	shf.r.wrap.b32 	%r5964, %r5961, %r5960, 18;
	shf.r.wrap.b32 	%r5965, %r5960, %r5961, 18;
	mov.b64 	%rd8610, {%r5965, %r5964};
	xor.b64  	%rd8611, %rd8609, %rd8610;
	shf.l.wrap.b32 	%r5966, %r5960, %r5961, 23;
	shf.l.wrap.b32 	%r5967, %r5961, %r5960, 23;
	mov.b64 	%rd8612, {%r5967, %r5966};
	xor.b64  	%rd8613, %rd8611, %rd8612;
	add.s64 	%rd8614, %rd8608, %rd8613;
	add.s64 	%rd8615, %rd8614, 6480981068601479193;
	add.s64 	%rd8616, %rd8615, %rd8531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5968,%dummy}, %rd8603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5969}, %rd8603;
	}
	shf.r.wrap.b32 	%r5970, %r5969, %r5968, 28;
	shf.r.wrap.b32 	%r5971, %r5968, %r5969, 28;
	mov.b64 	%rd8617, {%r5971, %r5970};
	shf.l.wrap.b32 	%r5972, %r5968, %r5969, 30;
	shf.l.wrap.b32 	%r5973, %r5969, %r5968, 30;
	mov.b64 	%rd8618, {%r5973, %r5972};
	xor.b64  	%rd8619, %rd8617, %rd8618;
	shf.l.wrap.b32 	%r5974, %r5968, %r5969, 25;
	shf.l.wrap.b32 	%r5975, %r5969, %r5968, 25;
	mov.b64 	%rd8620, {%r5975, %r5974};
	xor.b64  	%rd8621, %rd8619, %rd8620;
	and.b64  	%rd8622, %rd8603, %rd8579;
	or.b64  	%rd8623, %rd8603, %rd8579;
	and.b64  	%rd8624, %rd8623, %rd8555;
	or.b64  	%rd8625, %rd8624, %rd8622;
	add.s64 	%rd8626, %rd8625, %rd8621;
	add.s64 	%rd8627, %rd8626, %rd8615;
	add.s64 	%rd8628, %rd8482, %rd8544;
	xor.b64  	%rd8629, %rd8592, %rd8568;
	and.b64  	%rd8630, %rd8616, %rd8629;
	xor.b64  	%rd8631, %rd8630, %rd8568;
	add.s64 	%rd8632, %rd8628, %rd8631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5976,%dummy}, %rd8616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5977}, %rd8616;
	}
	shf.r.wrap.b32 	%r5978, %r5977, %r5976, 14;
	shf.r.wrap.b32 	%r5979, %r5976, %r5977, 14;
	mov.b64 	%rd8633, {%r5979, %r5978};
	shf.r.wrap.b32 	%r5980, %r5977, %r5976, 18;
	shf.r.wrap.b32 	%r5981, %r5976, %r5977, 18;
	mov.b64 	%rd8634, {%r5981, %r5980};
	xor.b64  	%rd8635, %rd8633, %rd8634;
	shf.l.wrap.b32 	%r5982, %r5976, %r5977, 23;
	shf.l.wrap.b32 	%r5983, %r5977, %r5976, 23;
	mov.b64 	%rd8636, {%r5983, %r5982};
	xor.b64  	%rd8637, %rd8635, %rd8636;
	add.s64 	%rd8638, %rd8632, %rd8637;
	add.s64 	%rd8639, %rd8638, -7908458776815382629;
	add.s64 	%rd8640, %rd8639, %rd8555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5984,%dummy}, %rd8627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5985}, %rd8627;
	}
	shf.r.wrap.b32 	%r5986, %r5985, %r5984, 28;
	shf.r.wrap.b32 	%r5987, %r5984, %r5985, 28;
	mov.b64 	%rd8641, {%r5987, %r5986};
	shf.l.wrap.b32 	%r5988, %r5984, %r5985, 30;
	shf.l.wrap.b32 	%r5989, %r5985, %r5984, 30;
	mov.b64 	%rd8642, {%r5989, %r5988};
	xor.b64  	%rd8643, %rd8641, %rd8642;
	shf.l.wrap.b32 	%r5990, %r5984, %r5985, 25;
	shf.l.wrap.b32 	%r5991, %r5985, %r5984, 25;
	mov.b64 	%rd8644, {%r5991, %r5990};
	xor.b64  	%rd8645, %rd8643, %rd8644;
	and.b64  	%rd8646, %rd8627, %rd8603;
	or.b64  	%rd8647, %rd8627, %rd8603;
	and.b64  	%rd8648, %rd8647, %rd8579;
	or.b64  	%rd8649, %rd8648, %rd8646;
	add.s64 	%rd8650, %rd8649, %rd8645;
	add.s64 	%rd8651, %rd8650, %rd8639;
	add.s64 	%rd8652, %rd8483, %rd8568;
	xor.b64  	%rd8653, %rd8616, %rd8592;
	and.b64  	%rd8654, %rd8640, %rd8653;
	xor.b64  	%rd8655, %rd8654, %rd8592;
	add.s64 	%rd8656, %rd8652, %rd8655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5992,%dummy}, %rd8640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5993}, %rd8640;
	}
	shf.r.wrap.b32 	%r5994, %r5993, %r5992, 14;
	shf.r.wrap.b32 	%r5995, %r5992, %r5993, 14;
	mov.b64 	%rd8657, {%r5995, %r5994};
	shf.r.wrap.b32 	%r5996, %r5993, %r5992, 18;
	shf.r.wrap.b32 	%r5997, %r5992, %r5993, 18;
	mov.b64 	%rd8658, {%r5997, %r5996};
	xor.b64  	%rd8659, %rd8657, %rd8658;
	shf.l.wrap.b32 	%r5998, %r5992, %r5993, 23;
	shf.l.wrap.b32 	%r5999, %r5993, %r5992, 23;
	mov.b64 	%rd8660, {%r5999, %r5998};
	xor.b64  	%rd8661, %rd8659, %rd8660;
	add.s64 	%rd8662, %rd8656, %rd8661;
	add.s64 	%rd8663, %rd8662, -6116909921290321640;
	add.s64 	%rd8664, %rd8663, %rd8579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6000,%dummy}, %rd8651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6001}, %rd8651;
	}
	shf.r.wrap.b32 	%r6002, %r6001, %r6000, 28;
	shf.r.wrap.b32 	%r6003, %r6000, %r6001, 28;
	mov.b64 	%rd8665, {%r6003, %r6002};
	shf.l.wrap.b32 	%r6004, %r6000, %r6001, 30;
	shf.l.wrap.b32 	%r6005, %r6001, %r6000, 30;
	mov.b64 	%rd8666, {%r6005, %r6004};
	xor.b64  	%rd8667, %rd8665, %rd8666;
	shf.l.wrap.b32 	%r6006, %r6000, %r6001, 25;
	shf.l.wrap.b32 	%r6007, %r6001, %r6000, 25;
	mov.b64 	%rd8668, {%r6007, %r6006};
	xor.b64  	%rd8669, %rd8667, %rd8668;
	and.b64  	%rd8670, %rd8651, %rd8627;
	or.b64  	%rd8671, %rd8651, %rd8627;
	and.b64  	%rd8672, %rd8671, %rd8603;
	or.b64  	%rd8673, %rd8672, %rd8670;
	add.s64 	%rd8674, %rd8673, %rd8669;
	add.s64 	%rd8675, %rd8674, %rd8663;
	xor.b64  	%rd8676, %rd8640, %rd8616;
	and.b64  	%rd8677, %rd8664, %rd8676;
	xor.b64  	%rd8678, %rd8677, %rd8616;
	add.s64 	%rd8679, %rd8592, %rd8678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6008,%dummy}, %rd8664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6009}, %rd8664;
	}
	shf.r.wrap.b32 	%r6010, %r6009, %r6008, 14;
	shf.r.wrap.b32 	%r6011, %r6008, %r6009, 14;
	mov.b64 	%rd8680, {%r6011, %r6010};
	shf.r.wrap.b32 	%r6012, %r6009, %r6008, 18;
	shf.r.wrap.b32 	%r6013, %r6008, %r6009, 18;
	mov.b64 	%rd8681, {%r6013, %r6012};
	xor.b64  	%rd8682, %rd8680, %rd8681;
	shf.l.wrap.b32 	%r6014, %r6008, %r6009, 23;
	shf.l.wrap.b32 	%r6015, %r6009, %r6008, 23;
	mov.b64 	%rd8683, {%r6015, %r6014};
	xor.b64  	%rd8684, %rd8682, %rd8683;
	add.s64 	%rd8685, %rd8679, %rd8684;
	add.s64 	%rd8686, %rd8685, 6343226172721267266;
	add.s64 	%rd8687, %rd8686, %rd8603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6016,%dummy}, %rd8675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6017}, %rd8675;
	}
	shf.r.wrap.b32 	%r6018, %r6017, %r6016, 28;
	shf.r.wrap.b32 	%r6019, %r6016, %r6017, 28;
	mov.b64 	%rd8688, {%r6019, %r6018};
	shf.l.wrap.b32 	%r6020, %r6016, %r6017, 30;
	shf.l.wrap.b32 	%r6021, %r6017, %r6016, 30;
	mov.b64 	%rd8689, {%r6021, %r6020};
	xor.b64  	%rd8690, %rd8688, %rd8689;
	shf.l.wrap.b32 	%r6022, %r6016, %r6017, 25;
	shf.l.wrap.b32 	%r6023, %r6017, %r6016, 25;
	mov.b64 	%rd8691, {%r6023, %r6022};
	xor.b64  	%rd8692, %rd8690, %rd8691;
	and.b64  	%rd8693, %rd8675, %rd8651;
	or.b64  	%rd8694, %rd8675, %rd8651;
	and.b64  	%rd8695, %rd8694, %rd8627;
	or.b64  	%rd8696, %rd8695, %rd8693;
	add.s64 	%rd8697, %rd8696, %rd8692;
	add.s64 	%rd8698, %rd8697, %rd8686;
	xor.b64  	%rd8699, %rd8664, %rd8640;
	and.b64  	%rd8700, %rd8687, %rd8699;
	xor.b64  	%rd8701, %rd8700, %rd8640;
	add.s64 	%rd8702, %rd8616, %rd8701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6024,%dummy}, %rd8687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6025}, %rd8687;
	}
	shf.r.wrap.b32 	%r6026, %r6025, %r6024, 14;
	shf.r.wrap.b32 	%r6027, %r6024, %r6025, 14;
	mov.b64 	%rd8703, {%r6027, %r6026};
	shf.r.wrap.b32 	%r6028, %r6025, %r6024, 18;
	shf.r.wrap.b32 	%r6029, %r6024, %r6025, 18;
	mov.b64 	%rd8704, {%r6029, %r6028};
	xor.b64  	%rd8705, %rd8703, %rd8704;
	shf.l.wrap.b32 	%r6030, %r6024, %r6025, 23;
	shf.l.wrap.b32 	%r6031, %r6025, %r6024, 23;
	mov.b64 	%rd8706, {%r6031, %r6030};
	xor.b64  	%rd8707, %rd8705, %rd8706;
	add.s64 	%rd8708, %rd8702, %rd8707;
	add.s64 	%rd8709, %rd8708, 1334009975649890238;
	add.s64 	%rd8710, %rd8709, %rd8627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6032,%dummy}, %rd8698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6033}, %rd8698;
	}
	shf.r.wrap.b32 	%r6034, %r6033, %r6032, 28;
	shf.r.wrap.b32 	%r6035, %r6032, %r6033, 28;
	mov.b64 	%rd8711, {%r6035, %r6034};
	shf.l.wrap.b32 	%r6036, %r6032, %r6033, 30;
	shf.l.wrap.b32 	%r6037, %r6033, %r6032, 30;
	mov.b64 	%rd8712, {%r6037, %r6036};
	xor.b64  	%rd8713, %rd8711, %rd8712;
	shf.l.wrap.b32 	%r6038, %r6032, %r6033, 25;
	shf.l.wrap.b32 	%r6039, %r6033, %r6032, 25;
	mov.b64 	%rd8714, {%r6039, %r6038};
	xor.b64  	%rd8715, %rd8713, %rd8714;
	and.b64  	%rd8716, %rd8698, %rd8675;
	or.b64  	%rd8717, %rd8698, %rd8675;
	and.b64  	%rd8718, %rd8717, %rd8651;
	or.b64  	%rd8719, %rd8718, %rd8716;
	add.s64 	%rd8720, %rd8719, %rd8715;
	add.s64 	%rd8721, %rd8720, %rd8709;
	xor.b64  	%rd8722, %rd8687, %rd8664;
	and.b64  	%rd8723, %rd8710, %rd8722;
	xor.b64  	%rd8724, %rd8723, %rd8664;
	add.s64 	%rd8725, %rd8640, %rd8724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6040,%dummy}, %rd8710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6041}, %rd8710;
	}
	shf.r.wrap.b32 	%r6042, %r6041, %r6040, 14;
	shf.r.wrap.b32 	%r6043, %r6040, %r6041, 14;
	mov.b64 	%rd8726, {%r6043, %r6042};
	shf.r.wrap.b32 	%r6044, %r6041, %r6040, 18;
	shf.r.wrap.b32 	%r6045, %r6040, %r6041, 18;
	mov.b64 	%rd8727, {%r6045, %r6044};
	xor.b64  	%rd8728, %rd8726, %rd8727;
	shf.l.wrap.b32 	%r6046, %r6040, %r6041, 23;
	shf.l.wrap.b32 	%r6047, %r6041, %r6040, 23;
	mov.b64 	%rd8729, {%r6047, %r6046};
	xor.b64  	%rd8730, %rd8728, %rd8729;
	add.s64 	%rd8731, %rd8725, %rd8730;
	add.s64 	%rd8732, %rd8731, 2608012711638119052;
	add.s64 	%rd8733, %rd8732, %rd8651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6048,%dummy}, %rd8721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6049}, %rd8721;
	}
	shf.r.wrap.b32 	%r6050, %r6049, %r6048, 28;
	shf.r.wrap.b32 	%r6051, %r6048, %r6049, 28;
	mov.b64 	%rd8734, {%r6051, %r6050};
	shf.l.wrap.b32 	%r6052, %r6048, %r6049, 30;
	shf.l.wrap.b32 	%r6053, %r6049, %r6048, 30;
	mov.b64 	%rd8735, {%r6053, %r6052};
	xor.b64  	%rd8736, %rd8734, %rd8735;
	shf.l.wrap.b32 	%r6054, %r6048, %r6049, 25;
	shf.l.wrap.b32 	%r6055, %r6049, %r6048, 25;
	mov.b64 	%rd8737, {%r6055, %r6054};
	xor.b64  	%rd8738, %rd8736, %rd8737;
	and.b64  	%rd8739, %rd8721, %rd8698;
	or.b64  	%rd8740, %rd8721, %rd8698;
	and.b64  	%rd8741, %rd8740, %rd8675;
	or.b64  	%rd8742, %rd8741, %rd8739;
	add.s64 	%rd8743, %rd8742, %rd8738;
	add.s64 	%rd8744, %rd8743, %rd8732;
	xor.b64  	%rd8745, %rd8710, %rd8687;
	and.b64  	%rd8746, %rd8733, %rd8745;
	xor.b64  	%rd8747, %rd8746, %rd8687;
	add.s64 	%rd8748, %rd8664, %rd8747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6056,%dummy}, %rd8733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6057}, %rd8733;
	}
	shf.r.wrap.b32 	%r6058, %r6057, %r6056, 14;
	shf.r.wrap.b32 	%r6059, %r6056, %r6057, 14;
	mov.b64 	%rd8749, {%r6059, %r6058};
	shf.r.wrap.b32 	%r6060, %r6057, %r6056, 18;
	shf.r.wrap.b32 	%r6061, %r6056, %r6057, 18;
	mov.b64 	%rd8750, {%r6061, %r6060};
	xor.b64  	%rd8751, %rd8749, %rd8750;
	shf.l.wrap.b32 	%r6062, %r6056, %r6057, 23;
	shf.l.wrap.b32 	%r6063, %r6057, %r6056, 23;
	mov.b64 	%rd8752, {%r6063, %r6062};
	xor.b64  	%rd8753, %rd8751, %rd8752;
	add.s64 	%rd8754, %rd8748, %rd8753;
	add.s64 	%rd8755, %rd8754, 6128411473006802146;
	add.s64 	%rd8756, %rd8755, %rd8675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6064,%dummy}, %rd8744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6065}, %rd8744;
	}
	shf.r.wrap.b32 	%r6066, %r6065, %r6064, 28;
	shf.r.wrap.b32 	%r6067, %r6064, %r6065, 28;
	mov.b64 	%rd8757, {%r6067, %r6066};
	shf.l.wrap.b32 	%r6068, %r6064, %r6065, 30;
	shf.l.wrap.b32 	%r6069, %r6065, %r6064, 30;
	mov.b64 	%rd8758, {%r6069, %r6068};
	xor.b64  	%rd8759, %rd8757, %rd8758;
	shf.l.wrap.b32 	%r6070, %r6064, %r6065, 25;
	shf.l.wrap.b32 	%r6071, %r6065, %r6064, 25;
	mov.b64 	%rd8760, {%r6071, %r6070};
	xor.b64  	%rd8761, %rd8759, %rd8760;
	and.b64  	%rd8762, %rd8744, %rd8721;
	or.b64  	%rd8763, %rd8744, %rd8721;
	and.b64  	%rd8764, %rd8763, %rd8698;
	or.b64  	%rd8765, %rd8764, %rd8762;
	add.s64 	%rd8766, %rd8765, %rd8761;
	add.s64 	%rd8767, %rd8766, %rd8755;
	xor.b64  	%rd8768, %rd8733, %rd8710;
	and.b64  	%rd8769, %rd8756, %rd8768;
	xor.b64  	%rd8770, %rd8769, %rd8710;
	add.s64 	%rd8771, %rd8687, %rd8770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6072,%dummy}, %rd8756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6073}, %rd8756;
	}
	shf.r.wrap.b32 	%r6074, %r6073, %r6072, 14;
	shf.r.wrap.b32 	%r6075, %r6072, %r6073, 14;
	mov.b64 	%rd8772, {%r6075, %r6074};
	shf.r.wrap.b32 	%r6076, %r6073, %r6072, 18;
	shf.r.wrap.b32 	%r6077, %r6072, %r6073, 18;
	mov.b64 	%rd8773, {%r6077, %r6076};
	xor.b64  	%rd8774, %rd8772, %rd8773;
	shf.l.wrap.b32 	%r6078, %r6072, %r6073, 23;
	shf.l.wrap.b32 	%r6079, %r6073, %r6072, 23;
	mov.b64 	%rd8775, {%r6079, %r6078};
	xor.b64  	%rd8776, %rd8774, %rd8775;
	add.s64 	%rd8777, %rd8771, %rd8776;
	add.s64 	%rd8778, %rd8777, 8268148722764581231;
	add.s64 	%rd8779, %rd8778, %rd8698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6080,%dummy}, %rd8767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6081}, %rd8767;
	}
	shf.r.wrap.b32 	%r6082, %r6081, %r6080, 28;
	shf.r.wrap.b32 	%r6083, %r6080, %r6081, 28;
	mov.b64 	%rd8780, {%r6083, %r6082};
	shf.l.wrap.b32 	%r6084, %r6080, %r6081, 30;
	shf.l.wrap.b32 	%r6085, %r6081, %r6080, 30;
	mov.b64 	%rd8781, {%r6085, %r6084};
	xor.b64  	%rd8782, %rd8780, %rd8781;
	shf.l.wrap.b32 	%r6086, %r6080, %r6081, 25;
	shf.l.wrap.b32 	%r6087, %r6081, %r6080, 25;
	mov.b64 	%rd8783, {%r6087, %r6086};
	xor.b64  	%rd8784, %rd8782, %rd8783;
	and.b64  	%rd8785, %rd8767, %rd8744;
	or.b64  	%rd8786, %rd8767, %rd8744;
	and.b64  	%rd8787, %rd8786, %rd8721;
	or.b64  	%rd8788, %rd8787, %rd8785;
	add.s64 	%rd8789, %rd8788, %rd8784;
	add.s64 	%rd8790, %rd8789, %rd8778;
	xor.b64  	%rd8791, %rd8756, %rd8733;
	and.b64  	%rd8792, %rd8779, %rd8791;
	xor.b64  	%rd8793, %rd8792, %rd8733;
	add.s64 	%rd8794, %rd8710, %rd8793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6088,%dummy}, %rd8779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6089}, %rd8779;
	}
	shf.r.wrap.b32 	%r6090, %r6089, %r6088, 14;
	shf.r.wrap.b32 	%r6091, %r6088, %r6089, 14;
	mov.b64 	%rd8795, {%r6091, %r6090};
	shf.r.wrap.b32 	%r6092, %r6089, %r6088, 18;
	shf.r.wrap.b32 	%r6093, %r6088, %r6089, 18;
	mov.b64 	%rd8796, {%r6093, %r6092};
	xor.b64  	%rd8797, %rd8795, %rd8796;
	shf.l.wrap.b32 	%r6094, %r6088, %r6089, 23;
	shf.l.wrap.b32 	%r6095, %r6089, %r6088, 23;
	mov.b64 	%rd8798, {%r6095, %r6094};
	xor.b64  	%rd8799, %rd8797, %rd8798;
	add.s64 	%rd8800, %rd8794, %rd8799;
	add.s64 	%rd8801, %rd8800, -9160688886553864527;
	add.s64 	%rd8802, %rd8801, %rd8721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6096,%dummy}, %rd8790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6097}, %rd8790;
	}
	shf.r.wrap.b32 	%r6098, %r6097, %r6096, 28;
	shf.r.wrap.b32 	%r6099, %r6096, %r6097, 28;
	mov.b64 	%rd8803, {%r6099, %r6098};
	shf.l.wrap.b32 	%r6100, %r6096, %r6097, 30;
	shf.l.wrap.b32 	%r6101, %r6097, %r6096, 30;
	mov.b64 	%rd8804, {%r6101, %r6100};
	xor.b64  	%rd8805, %rd8803, %rd8804;
	shf.l.wrap.b32 	%r6102, %r6096, %r6097, 25;
	shf.l.wrap.b32 	%r6103, %r6097, %r6096, 25;
	mov.b64 	%rd8806, {%r6103, %r6102};
	xor.b64  	%rd8807, %rd8805, %rd8806;
	and.b64  	%rd8808, %rd8790, %rd8767;
	or.b64  	%rd8809, %rd8790, %rd8767;
	and.b64  	%rd8810, %rd8809, %rd8744;
	or.b64  	%rd8811, %rd8810, %rd8808;
	add.s64 	%rd8812, %rd8811, %rd8807;
	add.s64 	%rd8813, %rd8812, %rd8801;
	xor.b64  	%rd8814, %rd8779, %rd8756;
	and.b64  	%rd8815, %rd8802, %rd8814;
	xor.b64  	%rd8816, %rd8815, %rd8756;
	add.s64 	%rd8817, %rd8733, %rd8816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6104,%dummy}, %rd8802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6105}, %rd8802;
	}
	shf.r.wrap.b32 	%r6106, %r6105, %r6104, 14;
	shf.r.wrap.b32 	%r6107, %r6104, %r6105, 14;
	mov.b64 	%rd8818, {%r6107, %r6106};
	shf.r.wrap.b32 	%r6108, %r6105, %r6104, 18;
	shf.r.wrap.b32 	%r6109, %r6104, %r6105, 18;
	mov.b64 	%rd8819, {%r6109, %r6108};
	xor.b64  	%rd8820, %rd8818, %rd8819;
	shf.l.wrap.b32 	%r6110, %r6104, %r6105, 23;
	shf.l.wrap.b32 	%r6111, %r6105, %r6104, 23;
	mov.b64 	%rd8821, {%r6111, %r6110};
	xor.b64  	%rd8822, %rd8820, %rd8821;
	add.s64 	%rd8823, %rd8817, %rd8822;
	add.s64 	%rd8824, %rd8823, -7215885187991268811;
	add.s64 	%rd8825, %rd8824, %rd8744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6112,%dummy}, %rd8813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6113}, %rd8813;
	}
	shf.r.wrap.b32 	%r6114, %r6113, %r6112, 28;
	shf.r.wrap.b32 	%r6115, %r6112, %r6113, 28;
	mov.b64 	%rd8826, {%r6115, %r6114};
	shf.l.wrap.b32 	%r6116, %r6112, %r6113, 30;
	shf.l.wrap.b32 	%r6117, %r6113, %r6112, 30;
	mov.b64 	%rd8827, {%r6117, %r6116};
	xor.b64  	%rd8828, %rd8826, %rd8827;
	shf.l.wrap.b32 	%r6118, %r6112, %r6113, 25;
	shf.l.wrap.b32 	%r6119, %r6113, %r6112, 25;
	mov.b64 	%rd8829, {%r6119, %r6118};
	xor.b64  	%rd8830, %rd8828, %rd8829;
	and.b64  	%rd8831, %rd8813, %rd8790;
	or.b64  	%rd8832, %rd8813, %rd8790;
	and.b64  	%rd8833, %rd8832, %rd8767;
	or.b64  	%rd8834, %rd8833, %rd8831;
	add.s64 	%rd8835, %rd8834, %rd8830;
	add.s64 	%rd8836, %rd8835, %rd8824;
	xor.b64  	%rd8837, %rd8802, %rd8779;
	and.b64  	%rd8838, %rd8825, %rd8837;
	xor.b64  	%rd8839, %rd8838, %rd8779;
	add.s64 	%rd8840, %rd8756, %rd8839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6120,%dummy}, %rd8825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6121}, %rd8825;
	}
	shf.r.wrap.b32 	%r6122, %r6121, %r6120, 14;
	shf.r.wrap.b32 	%r6123, %r6120, %r6121, 14;
	mov.b64 	%rd8841, {%r6123, %r6122};
	shf.r.wrap.b32 	%r6124, %r6121, %r6120, 18;
	shf.r.wrap.b32 	%r6125, %r6120, %r6121, 18;
	mov.b64 	%rd8842, {%r6125, %r6124};
	xor.b64  	%rd8843, %rd8841, %rd8842;
	shf.l.wrap.b32 	%r6126, %r6120, %r6121, 23;
	shf.l.wrap.b32 	%r6127, %r6121, %r6120, 23;
	mov.b64 	%rd8844, {%r6127, %r6126};
	xor.b64  	%rd8845, %rd8843, %rd8844;
	add.s64 	%rd8846, %rd8840, %rd8845;
	add.s64 	%rd8847, %rd8846, -4495734319001031532;
	add.s64 	%rd8848, %rd8847, %rd8767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6128,%dummy}, %rd8836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6129}, %rd8836;
	}
	shf.r.wrap.b32 	%r6130, %r6129, %r6128, 28;
	shf.r.wrap.b32 	%r6131, %r6128, %r6129, 28;
	mov.b64 	%rd8849, {%r6131, %r6130};
	shf.l.wrap.b32 	%r6132, %r6128, %r6129, 30;
	shf.l.wrap.b32 	%r6133, %r6129, %r6128, 30;
	mov.b64 	%rd8850, {%r6133, %r6132};
	xor.b64  	%rd8851, %rd8849, %rd8850;
	shf.l.wrap.b32 	%r6134, %r6128, %r6129, 25;
	shf.l.wrap.b32 	%r6135, %r6129, %r6128, 25;
	mov.b64 	%rd8852, {%r6135, %r6134};
	xor.b64  	%rd8853, %rd8851, %rd8852;
	and.b64  	%rd8854, %rd8836, %rd8813;
	or.b64  	%rd8855, %rd8836, %rd8813;
	and.b64  	%rd8856, %rd8855, %rd8790;
	or.b64  	%rd8857, %rd8856, %rd8854;
	add.s64 	%rd8858, %rd8857, %rd8853;
	add.s64 	%rd8859, %rd8858, %rd8847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6136}, %rd2948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6137,%dummy}, %rd2948;
	}
	shf.l.wrap.b32 	%r6138, %r6137, %r6136, 3;
	shf.l.wrap.b32 	%r6139, %r6136, %r6137, 3;
	mov.b64 	%rd8861, {%r6139, %r6138};
	shf.r.wrap.b32 	%r6140, %r6136, %r6137, 19;
	shf.r.wrap.b32 	%r6141, %r6137, %r6136, 19;
	mov.b64 	%rd8862, {%r6141, %r6140};
	xor.b64  	%rd8863, %rd8862, %rd8861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6142,%dummy}, %rd8476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6143}, %rd8476;
	}
	shf.r.wrap.b32 	%r6144, %r6143, %r6142, 1;
	shf.r.wrap.b32 	%r6145, %r6142, %r6143, 1;
	mov.b64 	%rd8864, {%r6145, %r6144};
	shf.r.wrap.b32 	%r6146, %r6143, %r6142, 8;
	shf.r.wrap.b32 	%r6147, %r6142, %r6143, 8;
	mov.b64 	%rd8865, {%r6147, %r6146};
	xor.b64  	%rd8866, %rd8864, %rd8865;
	shr.u64 	%rd8867, %rd8476, 7;
	xor.b64  	%rd8868, %rd8866, %rd8867;
	add.s64 	%rd8869, %rd8475, %rd8863;
	add.s64 	%rd10018, %rd8869, %rd8868;
	add.s64 	%rd8870, %rd10018, %rd8779;
	xor.b64  	%rd8871, %rd8825, %rd8802;
	and.b64  	%rd8872, %rd8848, %rd8871;
	xor.b64  	%rd8873, %rd8872, %rd8802;
	add.s64 	%rd8874, %rd8870, %rd8873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6148,%dummy}, %rd8848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6149}, %rd8848;
	}
	shf.r.wrap.b32 	%r6150, %r6149, %r6148, 14;
	shf.r.wrap.b32 	%r6151, %r6148, %r6149, 14;
	mov.b64 	%rd8875, {%r6151, %r6150};
	shf.r.wrap.b32 	%r6152, %r6149, %r6148, 18;
	shf.r.wrap.b32 	%r6153, %r6148, %r6149, 18;
	mov.b64 	%rd8876, {%r6153, %r6152};
	xor.b64  	%rd8877, %rd8875, %rd8876;
	shf.l.wrap.b32 	%r6154, %r6148, %r6149, 23;
	shf.l.wrap.b32 	%r6155, %r6149, %r6148, 23;
	mov.b64 	%rd8878, {%r6155, %r6154};
	xor.b64  	%rd8879, %rd8877, %rd8878;
	add.s64 	%rd8880, %rd8874, %rd8879;
	add.s64 	%rd8881, %rd8880, -1973867731355612462;
	add.s64 	%rd8882, %rd8881, %rd8790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6156,%dummy}, %rd8859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6157}, %rd8859;
	}
	shf.r.wrap.b32 	%r6158, %r6157, %r6156, 28;
	shf.r.wrap.b32 	%r6159, %r6156, %r6157, 28;
	mov.b64 	%rd8883, {%r6159, %r6158};
	shf.l.wrap.b32 	%r6160, %r6156, %r6157, 30;
	shf.l.wrap.b32 	%r6161, %r6157, %r6156, 30;
	mov.b64 	%rd8884, {%r6161, %r6160};
	xor.b64  	%rd8885, %rd8883, %rd8884;
	shf.l.wrap.b32 	%r6162, %r6156, %r6157, 25;
	shf.l.wrap.b32 	%r6163, %r6157, %r6156, 25;
	mov.b64 	%rd8886, {%r6163, %r6162};
	xor.b64  	%rd8887, %rd8885, %rd8886;
	and.b64  	%rd8888, %rd8859, %rd8836;
	or.b64  	%rd8889, %rd8859, %rd8836;
	and.b64  	%rd8890, %rd8889, %rd8813;
	or.b64  	%rd8891, %rd8890, %rd8888;
	add.s64 	%rd8892, %rd8891, %rd8887;
	add.s64 	%rd8893, %rd8892, %rd8881;
	mov.u64 	%rd8894, 1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6164}, %rd8894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6165,%dummy}, %rd8894;
	}
	shf.l.wrap.b32 	%r6166, %r6165, %r6164, 3;
	shf.l.wrap.b32 	%r6167, %r6164, %r6165, 3;
	mov.b64 	%rd8895, {%r6167, %r6166};
	shf.r.wrap.b32 	%r6168, %r6164, %r6165, 19;
	shf.r.wrap.b32 	%r6169, %r6165, %r6164, 19;
	mov.b64 	%rd8896, {%r6169, %r6168};
	xor.b64  	%rd8897, %rd8896, %rd8895;
	xor.b64  	%rd8898, %rd8897, 24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6170,%dummy}, %rd8477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6171}, %rd8477;
	}
	shf.r.wrap.b32 	%r6172, %r6171, %r6170, 1;
	shf.r.wrap.b32 	%r6173, %r6170, %r6171, 1;
	mov.b64 	%rd8899, {%r6173, %r6172};
	shf.r.wrap.b32 	%r6174, %r6171, %r6170, 8;
	shf.r.wrap.b32 	%r6175, %r6170, %r6171, 8;
	mov.b64 	%rd8900, {%r6175, %r6174};
	xor.b64  	%rd8901, %rd8899, %rd8900;
	shr.u64 	%rd8902, %rd8477, 7;
	xor.b64  	%rd8903, %rd8901, %rd8902;
	add.s64 	%rd8904, %rd8898, %rd8476;
	add.s64 	%rd10019, %rd8904, %rd8903;
	st.local.v2.u64 	[%rd1], {%rd10018, %rd10019};
	add.s64 	%rd8905, %rd10019, %rd8802;
	xor.b64  	%rd8906, %rd8848, %rd8825;
	and.b64  	%rd8907, %rd8882, %rd8906;
	xor.b64  	%rd8908, %rd8907, %rd8825;
	add.s64 	%rd8909, %rd8905, %rd8908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6176,%dummy}, %rd8882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6177}, %rd8882;
	}
	shf.r.wrap.b32 	%r6178, %r6177, %r6176, 14;
	shf.r.wrap.b32 	%r6179, %r6176, %r6177, 14;
	mov.b64 	%rd8910, {%r6179, %r6178};
	shf.r.wrap.b32 	%r6180, %r6177, %r6176, 18;
	shf.r.wrap.b32 	%r6181, %r6176, %r6177, 18;
	mov.b64 	%rd8911, {%r6181, %r6180};
	xor.b64  	%rd8912, %rd8910, %rd8911;
	shf.l.wrap.b32 	%r6182, %r6176, %r6177, 23;
	shf.l.wrap.b32 	%r6183, %r6177, %r6176, 23;
	mov.b64 	%rd8913, {%r6183, %r6182};
	xor.b64  	%rd8914, %rd8912, %rd8913;
	add.s64 	%rd8915, %rd8909, %rd8914;
	add.s64 	%rd8916, %rd8915, -1171420211273849373;
	add.s64 	%rd8917, %rd8916, %rd8813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6184,%dummy}, %rd8893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6185}, %rd8893;
	}
	shf.r.wrap.b32 	%r6186, %r6185, %r6184, 28;
	shf.r.wrap.b32 	%r6187, %r6184, %r6185, 28;
	mov.b64 	%rd8918, {%r6187, %r6186};
	shf.l.wrap.b32 	%r6188, %r6184, %r6185, 30;
	shf.l.wrap.b32 	%r6189, %r6185, %r6184, 30;
	mov.b64 	%rd8919, {%r6189, %r6188};
	xor.b64  	%rd8920, %rd8918, %rd8919;
	shf.l.wrap.b32 	%r6190, %r6184, %r6185, 25;
	shf.l.wrap.b32 	%r6191, %r6185, %r6184, 25;
	mov.b64 	%rd8921, {%r6191, %r6190};
	xor.b64  	%rd8922, %rd8920, %rd8921;
	and.b64  	%rd8923, %rd8893, %rd8859;
	or.b64  	%rd8924, %rd8893, %rd8859;
	and.b64  	%rd8925, %rd8924, %rd8836;
	or.b64  	%rd8926, %rd8925, %rd8923;
	add.s64 	%rd8927, %rd8926, %rd8922;
	add.s64 	%rd8928, %rd8927, %rd8916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6192,%dummy}, %rd10018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6193}, %rd10018;
	}
	shf.r.wrap.b32 	%r6194, %r6193, %r6192, 19;
	shf.r.wrap.b32 	%r6195, %r6192, %r6193, 19;
	mov.b64 	%rd8929, {%r6195, %r6194};
	shf.l.wrap.b32 	%r6196, %r6192, %r6193, 3;
	shf.l.wrap.b32 	%r6197, %r6193, %r6192, 3;
	mov.b64 	%rd8930, {%r6197, %r6196};
	xor.b64  	%rd8931, %rd8929, %rd8930;
	shr.u64 	%rd8932, %rd10018, 6;
	xor.b64  	%rd8933, %rd8931, %rd8932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6198,%dummy}, %rd8478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6199}, %rd8478;
	}
	shf.r.wrap.b32 	%r6200, %r6199, %r6198, 1;
	shf.r.wrap.b32 	%r6201, %r6198, %r6199, 1;
	mov.b64 	%rd8934, {%r6201, %r6200};
	shf.r.wrap.b32 	%r6202, %r6199, %r6198, 8;
	shf.r.wrap.b32 	%r6203, %r6198, %r6199, 8;
	mov.b64 	%rd8935, {%r6203, %r6202};
	xor.b64  	%rd8936, %rd8934, %rd8935;
	shr.u64 	%rd8937, %rd8478, 7;
	xor.b64  	%rd8938, %rd8936, %rd8937;
	add.s64 	%rd8939, %rd8933, %rd8477;
	add.s64 	%rd10015, %rd8939, %rd8938;
	add.s64 	%rd8940, %rd10015, %rd8825;
	xor.b64  	%rd8941, %rd8882, %rd8848;
	and.b64  	%rd8942, %rd8917, %rd8941;
	xor.b64  	%rd8943, %rd8942, %rd8848;
	add.s64 	%rd8944, %rd8940, %rd8943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6204,%dummy}, %rd8917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6205}, %rd8917;
	}
	shf.r.wrap.b32 	%r6206, %r6205, %r6204, 14;
	shf.r.wrap.b32 	%r6207, %r6204, %r6205, 14;
	mov.b64 	%rd8945, {%r6207, %r6206};
	shf.r.wrap.b32 	%r6208, %r6205, %r6204, 18;
	shf.r.wrap.b32 	%r6209, %r6204, %r6205, 18;
	mov.b64 	%rd8946, {%r6209, %r6208};
	xor.b64  	%rd8947, %rd8945, %rd8946;
	shf.l.wrap.b32 	%r6210, %r6204, %r6205, 23;
	shf.l.wrap.b32 	%r6211, %r6205, %r6204, 23;
	mov.b64 	%rd8948, {%r6211, %r6210};
	xor.b64  	%rd8949, %rd8947, %rd8948;
	add.s64 	%rd8950, %rd8944, %rd8949;
	add.s64 	%rd8951, %rd8950, 1135362057144423861;
	add.s64 	%rd8952, %rd8951, %rd8836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6212,%dummy}, %rd8928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6213}, %rd8928;
	}
	shf.r.wrap.b32 	%r6214, %r6213, %r6212, 28;
	shf.r.wrap.b32 	%r6215, %r6212, %r6213, 28;
	mov.b64 	%rd8953, {%r6215, %r6214};
	shf.l.wrap.b32 	%r6216, %r6212, %r6213, 30;
	shf.l.wrap.b32 	%r6217, %r6213, %r6212, 30;
	mov.b64 	%rd8954, {%r6217, %r6216};
	xor.b64  	%rd8955, %rd8953, %rd8954;
	shf.l.wrap.b32 	%r6218, %r6212, %r6213, 25;
	shf.l.wrap.b32 	%r6219, %r6213, %r6212, 25;
	mov.b64 	%rd8956, {%r6219, %r6218};
	xor.b64  	%rd8957, %rd8955, %rd8956;
	and.b64  	%rd8958, %rd8928, %rd8893;
	or.b64  	%rd8959, %rd8928, %rd8893;
	and.b64  	%rd8960, %rd8959, %rd8859;
	or.b64  	%rd8961, %rd8960, %rd8958;
	add.s64 	%rd8962, %rd8961, %rd8957;
	add.s64 	%rd8963, %rd8962, %rd8951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6220,%dummy}, %rd10019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6221}, %rd10019;
	}
	shf.r.wrap.b32 	%r6222, %r6221, %r6220, 19;
	shf.r.wrap.b32 	%r6223, %r6220, %r6221, 19;
	mov.b64 	%rd8964, {%r6223, %r6222};
	shf.l.wrap.b32 	%r6224, %r6220, %r6221, 3;
	shf.l.wrap.b32 	%r6225, %r6221, %r6220, 3;
	mov.b64 	%rd8965, {%r6225, %r6224};
	xor.b64  	%rd8966, %rd8964, %rd8965;
	shr.u64 	%rd8967, %rd10019, 6;
	xor.b64  	%rd8968, %rd8966, %rd8967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6226,%dummy}, %rd8480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6227}, %rd8480;
	}
	shf.r.wrap.b32 	%r6228, %r6227, %r6226, 1;
	shf.r.wrap.b32 	%r6229, %r6226, %r6227, 1;
	mov.b64 	%rd8969, {%r6229, %r6228};
	shf.r.wrap.b32 	%r6230, %r6227, %r6226, 8;
	shf.r.wrap.b32 	%r6231, %r6226, %r6227, 8;
	mov.b64 	%rd8970, {%r6231, %r6230};
	xor.b64  	%rd8971, %rd8969, %rd8970;
	shr.u64 	%rd8972, %rd8480, 7;
	xor.b64  	%rd8973, %rd8971, %rd8972;
	add.s64 	%rd8974, %rd8968, %rd8478;
	add.s64 	%rd10013, %rd8974, %rd8973;
	st.local.v2.u64 	[%rd1+16], {%rd10015, %rd10013};
	add.s64 	%rd8975, %rd10013, %rd8848;
	xor.b64  	%rd8976, %rd8917, %rd8882;
	and.b64  	%rd8977, %rd8952, %rd8976;
	xor.b64  	%rd8978, %rd8977, %rd8882;
	add.s64 	%rd8979, %rd8975, %rd8978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6232,%dummy}, %rd8952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6233}, %rd8952;
	}
	shf.r.wrap.b32 	%r6234, %r6233, %r6232, 14;
	shf.r.wrap.b32 	%r6235, %r6232, %r6233, 14;
	mov.b64 	%rd8980, {%r6235, %r6234};
	shf.r.wrap.b32 	%r6236, %r6233, %r6232, 18;
	shf.r.wrap.b32 	%r6237, %r6232, %r6233, 18;
	mov.b64 	%rd8981, {%r6237, %r6236};
	xor.b64  	%rd8982, %rd8980, %rd8981;
	shf.l.wrap.b32 	%r6238, %r6232, %r6233, 23;
	shf.l.wrap.b32 	%r6239, %r6233, %r6232, 23;
	mov.b64 	%rd8983, {%r6239, %r6238};
	xor.b64  	%rd8984, %rd8982, %rd8983;
	add.s64 	%rd8985, %rd8979, %rd8984;
	add.s64 	%rd8986, %rd8985, 2597628984639134821;
	add.s64 	%rd8987, %rd8986, %rd8859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6240,%dummy}, %rd8963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6241}, %rd8963;
	}
	shf.r.wrap.b32 	%r6242, %r6241, %r6240, 28;
	shf.r.wrap.b32 	%r6243, %r6240, %r6241, 28;
	mov.b64 	%rd8988, {%r6243, %r6242};
	shf.l.wrap.b32 	%r6244, %r6240, %r6241, 30;
	shf.l.wrap.b32 	%r6245, %r6241, %r6240, 30;
	mov.b64 	%rd8989, {%r6245, %r6244};
	xor.b64  	%rd8990, %rd8988, %rd8989;
	shf.l.wrap.b32 	%r6246, %r6240, %r6241, 25;
	shf.l.wrap.b32 	%r6247, %r6241, %r6240, 25;
	mov.b64 	%rd8991, {%r6247, %r6246};
	xor.b64  	%rd8992, %rd8990, %rd8991;
	and.b64  	%rd8993, %rd8963, %rd8928;
	or.b64  	%rd8994, %rd8963, %rd8928;
	and.b64  	%rd8995, %rd8994, %rd8893;
	or.b64  	%rd8996, %rd8995, %rd8993;
	add.s64 	%rd8997, %rd8996, %rd8992;
	add.s64 	%rd8998, %rd8997, %rd8986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6248,%dummy}, %rd10015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6249}, %rd10015;
	}
	shf.r.wrap.b32 	%r6250, %r6249, %r6248, 19;
	shf.r.wrap.b32 	%r6251, %r6248, %r6249, 19;
	mov.b64 	%rd8999, {%r6251, %r6250};
	shf.l.wrap.b32 	%r6252, %r6248, %r6249, 3;
	shf.l.wrap.b32 	%r6253, %r6249, %r6248, 3;
	mov.b64 	%rd9000, {%r6253, %r6252};
	xor.b64  	%rd9001, %rd8999, %rd9000;
	shr.u64 	%rd9002, %rd10015, 6;
	xor.b64  	%rd9003, %rd9001, %rd9002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6254,%dummy}, %rd8481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6255}, %rd8481;
	}
	shf.r.wrap.b32 	%r6256, %r6255, %r6254, 1;
	shf.r.wrap.b32 	%r6257, %r6254, %r6255, 1;
	mov.b64 	%rd9004, {%r6257, %r6256};
	shf.r.wrap.b32 	%r6258, %r6255, %r6254, 8;
	shf.r.wrap.b32 	%r6259, %r6254, %r6255, 8;
	mov.b64 	%rd9005, {%r6259, %r6258};
	xor.b64  	%rd9006, %rd9004, %rd9005;
	shr.u64 	%rd9007, %rd8481, 7;
	xor.b64  	%rd9008, %rd9006, %rd9007;
	add.s64 	%rd9009, %rd9003, %rd8480;
	add.s64 	%rd10011, %rd9009, %rd9008;
	add.s64 	%rd9010, %rd10011, %rd8882;
	xor.b64  	%rd9011, %rd8952, %rd8917;
	and.b64  	%rd9012, %rd8987, %rd9011;
	xor.b64  	%rd9013, %rd9012, %rd8917;
	add.s64 	%rd9014, %rd9010, %rd9013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6260,%dummy}, %rd8987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6261}, %rd8987;
	}
	shf.r.wrap.b32 	%r6262, %r6261, %r6260, 14;
	shf.r.wrap.b32 	%r6263, %r6260, %r6261, 14;
	mov.b64 	%rd9015, {%r6263, %r6262};
	shf.r.wrap.b32 	%r6264, %r6261, %r6260, 18;
	shf.r.wrap.b32 	%r6265, %r6260, %r6261, 18;
	mov.b64 	%rd9016, {%r6265, %r6264};
	xor.b64  	%rd9017, %rd9015, %rd9016;
	shf.l.wrap.b32 	%r6266, %r6260, %r6261, 23;
	shf.l.wrap.b32 	%r6267, %r6261, %r6260, 23;
	mov.b64 	%rd9018, {%r6267, %r6266};
	xor.b64  	%rd9019, %rd9017, %rd9018;
	add.s64 	%rd9020, %rd9014, %rd9019;
	add.s64 	%rd9021, %rd9020, 3308224258029322869;
	add.s64 	%rd9022, %rd9021, %rd8893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6268,%dummy}, %rd8998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6269}, %rd8998;
	}
	shf.r.wrap.b32 	%r6270, %r6269, %r6268, 28;
	shf.r.wrap.b32 	%r6271, %r6268, %r6269, 28;
	mov.b64 	%rd9023, {%r6271, %r6270};
	shf.l.wrap.b32 	%r6272, %r6268, %r6269, 30;
	shf.l.wrap.b32 	%r6273, %r6269, %r6268, 30;
	mov.b64 	%rd9024, {%r6273, %r6272};
	xor.b64  	%rd9025, %rd9023, %rd9024;
	shf.l.wrap.b32 	%r6274, %r6268, %r6269, 25;
	shf.l.wrap.b32 	%r6275, %r6269, %r6268, 25;
	mov.b64 	%rd9026, {%r6275, %r6274};
	xor.b64  	%rd9027, %rd9025, %rd9026;
	and.b64  	%rd9028, %rd8998, %rd8963;
	or.b64  	%rd9029, %rd8998, %rd8963;
	and.b64  	%rd9030, %rd9029, %rd8928;
	or.b64  	%rd9031, %rd9030, %rd9028;
	add.s64 	%rd9032, %rd9031, %rd9027;
	add.s64 	%rd9033, %rd9032, %rd9021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6276,%dummy}, %rd10013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6277}, %rd10013;
	}
	shf.r.wrap.b32 	%r6278, %r6277, %r6276, 19;
	shf.r.wrap.b32 	%r6279, %r6276, %r6277, 19;
	mov.b64 	%rd9034, {%r6279, %r6278};
	shf.l.wrap.b32 	%r6280, %r6276, %r6277, 3;
	shf.l.wrap.b32 	%r6281, %r6277, %r6276, 3;
	mov.b64 	%rd9035, {%r6281, %r6280};
	xor.b64  	%rd9036, %rd9034, %rd9035;
	shr.u64 	%rd9037, %rd10013, 6;
	xor.b64  	%rd9038, %rd9036, %rd9037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6282,%dummy}, %rd8482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6283}, %rd8482;
	}
	shf.r.wrap.b32 	%r6284, %r6283, %r6282, 1;
	shf.r.wrap.b32 	%r6285, %r6282, %r6283, 1;
	mov.b64 	%rd9039, {%r6285, %r6284};
	shf.r.wrap.b32 	%r6286, %r6283, %r6282, 8;
	shf.r.wrap.b32 	%r6287, %r6282, %r6283, 8;
	mov.b64 	%rd9040, {%r6287, %r6286};
	xor.b64  	%rd9041, %rd9039, %rd9040;
	shr.u64 	%rd9042, %rd8482, 7;
	xor.b64  	%rd9043, %rd9041, %rd9042;
	add.s64 	%rd9044, %rd9038, %rd8481;
	add.s64 	%rd10009, %rd9044, %rd9043;
	st.local.v2.u64 	[%rd1+32], {%rd10011, %rd10009};
	add.s64 	%rd9045, %rd10009, %rd8917;
	xor.b64  	%rd9046, %rd8987, %rd8952;
	and.b64  	%rd9047, %rd9022, %rd9046;
	xor.b64  	%rd9048, %rd9047, %rd8952;
	add.s64 	%rd9049, %rd9045, %rd9048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6288,%dummy}, %rd9022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6289}, %rd9022;
	}
	shf.r.wrap.b32 	%r6290, %r6289, %r6288, 14;
	shf.r.wrap.b32 	%r6291, %r6288, %r6289, 14;
	mov.b64 	%rd9050, {%r6291, %r6290};
	shf.r.wrap.b32 	%r6292, %r6289, %r6288, 18;
	shf.r.wrap.b32 	%r6293, %r6288, %r6289, 18;
	mov.b64 	%rd9051, {%r6293, %r6292};
	xor.b64  	%rd9052, %rd9050, %rd9051;
	shf.l.wrap.b32 	%r6294, %r6288, %r6289, 23;
	shf.l.wrap.b32 	%r6295, %r6289, %r6288, 23;
	mov.b64 	%rd9053, {%r6295, %r6294};
	xor.b64  	%rd9054, %rd9052, %rd9053;
	add.s64 	%rd9055, %rd9049, %rd9054;
	add.s64 	%rd9056, %rd9055, 5365058923640841347;
	add.s64 	%rd9057, %rd9056, %rd8928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6296,%dummy}, %rd9033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd9033;
	}
	shf.r.wrap.b32 	%r6298, %r6297, %r6296, 28;
	shf.r.wrap.b32 	%r6299, %r6296, %r6297, 28;
	mov.b64 	%rd9058, {%r6299, %r6298};
	shf.l.wrap.b32 	%r6300, %r6296, %r6297, 30;
	shf.l.wrap.b32 	%r6301, %r6297, %r6296, 30;
	mov.b64 	%rd9059, {%r6301, %r6300};
	xor.b64  	%rd9060, %rd9058, %rd9059;
	shf.l.wrap.b32 	%r6302, %r6296, %r6297, 25;
	shf.l.wrap.b32 	%r6303, %r6297, %r6296, 25;
	mov.b64 	%rd9061, {%r6303, %r6302};
	xor.b64  	%rd9062, %rd9060, %rd9061;
	and.b64  	%rd9063, %rd9033, %rd8998;
	or.b64  	%rd9064, %rd9033, %rd8998;
	and.b64  	%rd9065, %rd9064, %rd8963;
	or.b64  	%rd9066, %rd9065, %rd9063;
	add.s64 	%rd9067, %rd9066, %rd9062;
	add.s64 	%rd9068, %rd9067, %rd9056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6304,%dummy}, %rd10011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6305}, %rd10011;
	}
	shf.r.wrap.b32 	%r6306, %r6305, %r6304, 19;
	shf.r.wrap.b32 	%r6307, %r6304, %r6305, 19;
	mov.b64 	%rd9069, {%r6307, %r6306};
	shf.l.wrap.b32 	%r6308, %r6304, %r6305, 3;
	shf.l.wrap.b32 	%r6309, %r6305, %r6304, 3;
	mov.b64 	%rd9070, {%r6309, %r6308};
	xor.b64  	%rd9071, %rd9069, %rd9070;
	shr.u64 	%rd9072, %rd10011, 6;
	xor.b64  	%rd9073, %rd9071, %rd9072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6310,%dummy}, %rd8483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6311}, %rd8483;
	}
	shf.r.wrap.b32 	%r6312, %r6311, %r6310, 1;
	shf.r.wrap.b32 	%r6313, %r6310, %r6311, 1;
	mov.b64 	%rd9074, {%r6313, %r6312};
	shf.r.wrap.b32 	%r6314, %r6311, %r6310, 8;
	shf.r.wrap.b32 	%r6315, %r6310, %r6311, 8;
	mov.b64 	%rd9075, {%r6315, %r6314};
	xor.b64  	%rd9076, %rd9074, %rd9075;
	shr.u64 	%rd9077, %rd8483, 7;
	xor.b64  	%rd9078, %rd9076, %rd9077;
	add.s64 	%rd9079, %rd9073, %rd8482;
	add.s64 	%rd9080, %rd9079, %rd9078;
	add.s64 	%rd10007, %rd9080, 1536;
	add.s64 	%rd9081, %rd10007, %rd8952;
	xor.b64  	%rd9082, %rd9022, %rd8987;
	and.b64  	%rd9083, %rd9057, %rd9082;
	xor.b64  	%rd9084, %rd9083, %rd8987;
	add.s64 	%rd9085, %rd9081, %rd9084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6316,%dummy}, %rd9057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6317}, %rd9057;
	}
	shf.r.wrap.b32 	%r6318, %r6317, %r6316, 14;
	shf.r.wrap.b32 	%r6319, %r6316, %r6317, 14;
	mov.b64 	%rd9086, {%r6319, %r6318};
	shf.r.wrap.b32 	%r6320, %r6317, %r6316, 18;
	shf.r.wrap.b32 	%r6321, %r6316, %r6317, 18;
	mov.b64 	%rd9087, {%r6321, %r6320};
	xor.b64  	%rd9088, %rd9086, %rd9087;
	shf.l.wrap.b32 	%r6322, %r6316, %r6317, 23;
	shf.l.wrap.b32 	%r6323, %r6317, %r6316, 23;
	mov.b64 	%rd9089, {%r6323, %r6322};
	xor.b64  	%rd9090, %rd9088, %rd9089;
	add.s64 	%rd9091, %rd9085, %rd9090;
	add.s64 	%rd9092, %rd9091, 6679025012923562964;
	add.s64 	%rd9093, %rd9092, %rd8963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6324,%dummy}, %rd9068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6325}, %rd9068;
	}
	shf.r.wrap.b32 	%r6326, %r6325, %r6324, 28;
	shf.r.wrap.b32 	%r6327, %r6324, %r6325, 28;
	mov.b64 	%rd9094, {%r6327, %r6326};
	shf.l.wrap.b32 	%r6328, %r6324, %r6325, 30;
	shf.l.wrap.b32 	%r6329, %r6325, %r6324, 30;
	mov.b64 	%rd9095, {%r6329, %r6328};
	xor.b64  	%rd9096, %rd9094, %rd9095;
	shf.l.wrap.b32 	%r6330, %r6324, %r6325, 25;
	shf.l.wrap.b32 	%r6331, %r6325, %r6324, 25;
	mov.b64 	%rd9097, {%r6331, %r6330};
	xor.b64  	%rd9098, %rd9096, %rd9097;
	and.b64  	%rd9099, %rd9068, %rd9033;
	or.b64  	%rd9100, %rd9068, %rd9033;
	and.b64  	%rd9101, %rd9100, %rd8998;
	or.b64  	%rd9102, %rd9101, %rd9099;
	add.s64 	%rd9103, %rd9102, %rd9098;
	add.s64 	%rd9104, %rd9103, %rd9092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6332,%dummy}, %rd10009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6333}, %rd10009;
	}
	shf.r.wrap.b32 	%r6334, %r6333, %r6332, 19;
	shf.r.wrap.b32 	%r6335, %r6332, %r6333, 19;
	mov.b64 	%rd9105, {%r6335, %r6334};
	shf.l.wrap.b32 	%r6336, %r6332, %r6333, 3;
	shf.l.wrap.b32 	%r6337, %r6333, %r6332, 3;
	mov.b64 	%rd9106, {%r6337, %r6336};
	xor.b64  	%rd9107, %rd9105, %rd9106;
	shr.u64 	%rd9108, %rd10009, 6;
	xor.b64  	%rd9109, %rd9107, %rd9108;
	mov.u64 	%rd9110, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6338,%dummy}, %rd9110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6339}, %rd9110;
	}
	shf.r.wrap.b32 	%r6340, %r6339, %r6338, 8;
	shf.r.wrap.b32 	%r6341, %r6338, %r6339, 8;
	mov.b64 	%rd9111, {%r6341, %r6340};
	shf.r.wrap.b32 	%r6342, %r6339, %r6338, 1;
	shf.r.wrap.b32 	%r6343, %r6338, %r6339, 1;
	mov.b64 	%rd9112, {%r6343, %r6342};
	xor.b64  	%rd9113, %rd9112, %rd9111;
	xor.b64  	%rd9114, %rd9113, 72057594037927936;
	add.s64 	%rd9115, %rd9109, %rd8483;
	add.s64 	%rd9116, %rd9115, %rd10018;
	add.s64 	%rd10006, %rd9116, %rd9114;
	st.local.v2.u64 	[%rd1+48], {%rd10007, %rd10006};
	add.s64 	%rd9117, %rd10006, %rd8987;
	xor.b64  	%rd9118, %rd9057, %rd9022;
	and.b64  	%rd9119, %rd9093, %rd9118;
	xor.b64  	%rd9120, %rd9119, %rd9022;
	add.s64 	%rd9121, %rd9117, %rd9120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6344,%dummy}, %rd9093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6345}, %rd9093;
	}
	shf.r.wrap.b32 	%r6346, %r6345, %r6344, 14;
	shf.r.wrap.b32 	%r6347, %r6344, %r6345, 14;
	mov.b64 	%rd9122, {%r6347, %r6346};
	shf.r.wrap.b32 	%r6348, %r6345, %r6344, 18;
	shf.r.wrap.b32 	%r6349, %r6344, %r6345, 18;
	mov.b64 	%rd9123, {%r6349, %r6348};
	xor.b64  	%rd9124, %rd9122, %rd9123;
	shf.l.wrap.b32 	%r6350, %r6344, %r6345, 23;
	shf.l.wrap.b32 	%r6351, %r6345, %r6344, 23;
	mov.b64 	%rd9125, {%r6351, %r6350};
	xor.b64  	%rd9126, %rd9124, %rd9125;
	add.s64 	%rd9127, %rd9121, %rd9126;
	add.s64 	%rd9128, %rd9127, 8573033837759648693;
	add.s64 	%rd9129, %rd9128, %rd8998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6352,%dummy}, %rd9104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6353}, %rd9104;
	}
	shf.r.wrap.b32 	%r6354, %r6353, %r6352, 28;
	shf.r.wrap.b32 	%r6355, %r6352, %r6353, 28;
	mov.b64 	%rd9130, {%r6355, %r6354};
	shf.l.wrap.b32 	%r6356, %r6352, %r6353, 30;
	shf.l.wrap.b32 	%r6357, %r6353, %r6352, 30;
	mov.b64 	%rd9131, {%r6357, %r6356};
	xor.b64  	%rd9132, %rd9130, %rd9131;
	shf.l.wrap.b32 	%r6358, %r6352, %r6353, 25;
	shf.l.wrap.b32 	%r6359, %r6353, %r6352, 25;
	mov.b64 	%rd9133, {%r6359, %r6358};
	xor.b64  	%rd9134, %rd9132, %rd9133;
	and.b64  	%rd9135, %rd9104, %rd9068;
	or.b64  	%rd9136, %rd9104, %rd9068;
	and.b64  	%rd9137, %rd9136, %rd9033;
	or.b64  	%rd9138, %rd9137, %rd9135;
	add.s64 	%rd9139, %rd9138, %rd9134;
	add.s64 	%rd9140, %rd9139, %rd9128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6360,%dummy}, %rd10007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6361}, %rd10007;
	}
	shf.r.wrap.b32 	%r6362, %r6361, %r6360, 19;
	shf.r.wrap.b32 	%r6363, %r6360, %r6361, 19;
	mov.b64 	%rd9141, {%r6363, %r6362};
	shf.l.wrap.b32 	%r6364, %r6360, %r6361, 3;
	shf.l.wrap.b32 	%r6365, %r6361, %r6360, 3;
	mov.b64 	%rd9142, {%r6365, %r6364};
	xor.b64  	%rd9143, %rd9141, %rd9142;
	shr.u64 	%rd9144, %rd10007, 6;
	xor.b64  	%rd9145, %rd9143, %rd9144;
	shf.r.wrap.b32 	%r6366, %r6136, %r6137, 8;
	shf.r.wrap.b32 	%r6367, %r6137, %r6136, 8;
	mov.b64 	%rd9146, {%r6367, %r6366};
	shf.r.wrap.b32 	%r6368, %r6136, %r6137, 1;
	shf.r.wrap.b32 	%r6369, %r6137, %r6136, 1;
	mov.b64 	%rd9147, {%r6369, %r6368};
	xor.b64  	%rd9148, %rd9147, %rd9146;
	xor.b64  	%rd9149, %rd9148, -9223372036854775808;
	add.s64 	%rd9150, %rd9149, %rd10019;
	add.s64 	%rd10005, %rd9150, %rd9145;
	add.s64 	%rd9151, %rd10005, %rd9022;
	xor.b64  	%rd9152, %rd9093, %rd9057;
	and.b64  	%rd9153, %rd9129, %rd9152;
	xor.b64  	%rd9154, %rd9153, %rd9057;
	add.s64 	%rd9155, %rd9151, %rd9154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd9129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6371}, %rd9129;
	}
	shf.r.wrap.b32 	%r6372, %r6371, %r6370, 14;
	shf.r.wrap.b32 	%r6373, %r6370, %r6371, 14;
	mov.b64 	%rd9156, {%r6373, %r6372};
	shf.r.wrap.b32 	%r6374, %r6371, %r6370, 18;
	shf.r.wrap.b32 	%r6375, %r6370, %r6371, 18;
	mov.b64 	%rd9157, {%r6375, %r6374};
	xor.b64  	%rd9158, %rd9156, %rd9157;
	shf.l.wrap.b32 	%r6376, %r6370, %r6371, 23;
	shf.l.wrap.b32 	%r6377, %r6371, %r6370, 23;
	mov.b64 	%rd9159, {%r6377, %r6376};
	xor.b64  	%rd9160, %rd9158, %rd9159;
	add.s64 	%rd9161, %rd9155, %rd9160;
	add.s64 	%rd9162, %rd9161, -7476448914759557205;
	add.s64 	%rd9163, %rd9162, %rd9033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd9140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6379}, %rd9140;
	}
	shf.r.wrap.b32 	%r6380, %r6379, %r6378, 28;
	shf.r.wrap.b32 	%r6381, %r6378, %r6379, 28;
	mov.b64 	%rd9164, {%r6381, %r6380};
	shf.l.wrap.b32 	%r6382, %r6378, %r6379, 30;
	shf.l.wrap.b32 	%r6383, %r6379, %r6378, 30;
	mov.b64 	%rd9165, {%r6383, %r6382};
	xor.b64  	%rd9166, %rd9164, %rd9165;
	shf.l.wrap.b32 	%r6384, %r6378, %r6379, 25;
	shf.l.wrap.b32 	%r6385, %r6379, %r6378, 25;
	mov.b64 	%rd9167, {%r6385, %r6384};
	xor.b64  	%rd9168, %rd9166, %rd9167;
	and.b64  	%rd9169, %rd9140, %rd9104;
	or.b64  	%rd9170, %rd9140, %rd9104;
	and.b64  	%rd9171, %rd9170, %rd9068;
	or.b64  	%rd9172, %rd9171, %rd9169;
	add.s64 	%rd9173, %rd9172, %rd9168;
	add.s64 	%rd9174, %rd9173, %rd9162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd10006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6387}, %rd10006;
	}
	shf.r.wrap.b32 	%r6388, %r6387, %r6386, 19;
	shf.r.wrap.b32 	%r6389, %r6386, %r6387, 19;
	mov.b64 	%rd9175, {%r6389, %r6388};
	shf.l.wrap.b32 	%r6390, %r6386, %r6387, 3;
	shf.l.wrap.b32 	%r6391, %r6387, %r6386, 3;
	mov.b64 	%rd9176, {%r6391, %r6390};
	xor.b64  	%rd9177, %rd9175, %rd9176;
	shr.u64 	%rd9178, %rd10006, 6;
	xor.b64  	%rd9179, %rd9177, %rd9178;
	add.s64 	%rd9180, %rd10015, %rd9148;
	add.s64 	%rd10017, %rd9180, %rd9179;
	st.local.v2.u64 	[%rd1+64], {%rd10005, %rd10017};
	add.s64 	%rd9181, %rd10017, %rd9057;
	xor.b64  	%rd9182, %rd9129, %rd9093;
	and.b64  	%rd9183, %rd9163, %rd9182;
	xor.b64  	%rd9184, %rd9183, %rd9093;
	add.s64 	%rd9185, %rd9181, %rd9184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6392,%dummy}, %rd9163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6393}, %rd9163;
	}
	shf.r.wrap.b32 	%r6394, %r6393, %r6392, 14;
	shf.r.wrap.b32 	%r6395, %r6392, %r6393, 14;
	mov.b64 	%rd9186, {%r6395, %r6394};
	shf.r.wrap.b32 	%r6396, %r6393, %r6392, 18;
	shf.r.wrap.b32 	%r6397, %r6392, %r6393, 18;
	mov.b64 	%rd9187, {%r6397, %r6396};
	xor.b64  	%rd9188, %rd9186, %rd9187;
	shf.l.wrap.b32 	%r6398, %r6392, %r6393, 23;
	shf.l.wrap.b32 	%r6399, %r6393, %r6392, 23;
	mov.b64 	%rd9189, {%r6399, %r6398};
	xor.b64  	%rd9190, %rd9188, %rd9189;
	add.s64 	%rd9191, %rd9185, %rd9190;
	add.s64 	%rd9192, %rd9191, -6327057829258317296;
	add.s64 	%rd9193, %rd9192, %rd9068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6400,%dummy}, %rd9174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6401}, %rd9174;
	}
	shf.r.wrap.b32 	%r6402, %r6401, %r6400, 28;
	shf.r.wrap.b32 	%r6403, %r6400, %r6401, 28;
	mov.b64 	%rd9194, {%r6403, %r6402};
	shf.l.wrap.b32 	%r6404, %r6400, %r6401, 30;
	shf.l.wrap.b32 	%r6405, %r6401, %r6400, 30;
	mov.b64 	%rd9195, {%r6405, %r6404};
	xor.b64  	%rd9196, %rd9194, %rd9195;
	shf.l.wrap.b32 	%r6406, %r6400, %r6401, 25;
	shf.l.wrap.b32 	%r6407, %r6401, %r6400, 25;
	mov.b64 	%rd9197, {%r6407, %r6406};
	xor.b64  	%rd9198, %rd9196, %rd9197;
	and.b64  	%rd9199, %rd9174, %rd9140;
	or.b64  	%rd9200, %rd9174, %rd9140;
	and.b64  	%rd9201, %rd9200, %rd9104;
	or.b64  	%rd9202, %rd9201, %rd9199;
	add.s64 	%rd9203, %rd9202, %rd9198;
	add.s64 	%rd9204, %rd9203, %rd9192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6408,%dummy}, %rd10005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6409}, %rd10005;
	}
	shf.r.wrap.b32 	%r6410, %r6409, %r6408, 19;
	shf.r.wrap.b32 	%r6411, %r6408, %r6409, 19;
	mov.b64 	%rd9205, {%r6411, %r6410};
	shf.l.wrap.b32 	%r6412, %r6408, %r6409, 3;
	shf.l.wrap.b32 	%r6413, %r6409, %r6408, 3;
	mov.b64 	%rd9206, {%r6413, %r6412};
	xor.b64  	%rd9207, %rd9205, %rd9206;
	shr.u64 	%rd9208, %rd10005, 6;
	xor.b64  	%rd9209, %rd9207, %rd9208;
	add.s64 	%rd9210, %rd10013, %rd9148;
	add.s64 	%rd10014, %rd9210, %rd9209;
	add.s64 	%rd9211, %rd10014, %rd9093;
	xor.b64  	%rd9212, %rd9163, %rd9129;
	and.b64  	%rd9213, %rd9193, %rd9212;
	xor.b64  	%rd9214, %rd9213, %rd9129;
	add.s64 	%rd9215, %rd9211, %rd9214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6414,%dummy}, %rd9193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6415}, %rd9193;
	}
	shf.r.wrap.b32 	%r6416, %r6415, %r6414, 14;
	shf.r.wrap.b32 	%r6417, %r6414, %r6415, 14;
	mov.b64 	%rd9216, {%r6417, %r6416};
	shf.r.wrap.b32 	%r6418, %r6415, %r6414, 18;
	shf.r.wrap.b32 	%r6419, %r6414, %r6415, 18;
	mov.b64 	%rd9217, {%r6419, %r6418};
	xor.b64  	%rd9218, %rd9216, %rd9217;
	shf.l.wrap.b32 	%r6420, %r6414, %r6415, 23;
	shf.l.wrap.b32 	%r6421, %r6415, %r6414, 23;
	mov.b64 	%rd9219, {%r6421, %r6420};
	xor.b64  	%rd9220, %rd9218, %rd9219;
	add.s64 	%rd9221, %rd9215, %rd9220;
	add.s64 	%rd9222, %rd9221, -5763719355590565569;
	add.s64 	%rd9223, %rd9222, %rd9104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6422,%dummy}, %rd9204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6423}, %rd9204;
	}
	shf.r.wrap.b32 	%r6424, %r6423, %r6422, 28;
	shf.r.wrap.b32 	%r6425, %r6422, %r6423, 28;
	mov.b64 	%rd9224, {%r6425, %r6424};
	shf.l.wrap.b32 	%r6426, %r6422, %r6423, 30;
	shf.l.wrap.b32 	%r6427, %r6423, %r6422, 30;
	mov.b64 	%rd9225, {%r6427, %r6426};
	xor.b64  	%rd9226, %rd9224, %rd9225;
	shf.l.wrap.b32 	%r6428, %r6422, %r6423, 25;
	shf.l.wrap.b32 	%r6429, %r6423, %r6422, 25;
	mov.b64 	%rd9227, {%r6429, %r6428};
	xor.b64  	%rd9228, %rd9226, %rd9227;
	and.b64  	%rd9229, %rd9204, %rd9174;
	or.b64  	%rd9230, %rd9204, %rd9174;
	and.b64  	%rd9231, %rd9230, %rd9140;
	or.b64  	%rd9232, %rd9231, %rd9229;
	add.s64 	%rd9233, %rd9232, %rd9228;
	add.s64 	%rd9234, %rd9233, %rd9222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6430,%dummy}, %rd10017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6431}, %rd10017;
	}
	shf.r.wrap.b32 	%r6432, %r6431, %r6430, 19;
	shf.r.wrap.b32 	%r6433, %r6430, %r6431, 19;
	mov.b64 	%rd9235, {%r6433, %r6432};
	shf.l.wrap.b32 	%r6434, %r6430, %r6431, 3;
	shf.l.wrap.b32 	%r6435, %r6431, %r6430, 3;
	mov.b64 	%rd9236, {%r6435, %r6434};
	xor.b64  	%rd9237, %rd9235, %rd9236;
	shr.u64 	%rd9238, %rd10017, 6;
	xor.b64  	%rd9239, %rd9237, %rd9238;
	add.s64 	%rd9240, %rd10011, %rd9148;
	add.s64 	%rd10012, %rd9240, %rd9239;
	st.local.v2.u64 	[%rd1+80], {%rd10014, %rd10012};
	add.s64 	%rd9241, %rd10012, %rd9129;
	xor.b64  	%rd9242, %rd9193, %rd9163;
	and.b64  	%rd9243, %rd9223, %rd9242;
	xor.b64  	%rd9244, %rd9243, %rd9163;
	add.s64 	%rd9245, %rd9241, %rd9244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6436,%dummy}, %rd9223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6437}, %rd9223;
	}
	shf.r.wrap.b32 	%r6438, %r6437, %r6436, 14;
	shf.r.wrap.b32 	%r6439, %r6436, %r6437, 14;
	mov.b64 	%rd9246, {%r6439, %r6438};
	shf.r.wrap.b32 	%r6440, %r6437, %r6436, 18;
	shf.r.wrap.b32 	%r6441, %r6436, %r6437, 18;
	mov.b64 	%rd9247, {%r6441, %r6440};
	xor.b64  	%rd9248, %rd9246, %rd9247;
	shf.l.wrap.b32 	%r6442, %r6436, %r6437, 23;
	shf.l.wrap.b32 	%r6443, %r6437, %r6436, 23;
	mov.b64 	%rd9249, {%r6443, %r6442};
	xor.b64  	%rd9250, %rd9248, %rd9249;
	add.s64 	%rd9251, %rd9245, %rd9250;
	add.s64 	%rd9252, %rd9251, -4658551843659510044;
	add.s64 	%rd9253, %rd9252, %rd9140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6444,%dummy}, %rd9234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6445}, %rd9234;
	}
	shf.r.wrap.b32 	%r6446, %r6445, %r6444, 28;
	shf.r.wrap.b32 	%r6447, %r6444, %r6445, 28;
	mov.b64 	%rd9254, {%r6447, %r6446};
	shf.l.wrap.b32 	%r6448, %r6444, %r6445, 30;
	shf.l.wrap.b32 	%r6449, %r6445, %r6444, 30;
	mov.b64 	%rd9255, {%r6449, %r6448};
	xor.b64  	%rd9256, %rd9254, %rd9255;
	shf.l.wrap.b32 	%r6450, %r6444, %r6445, 25;
	shf.l.wrap.b32 	%r6451, %r6445, %r6444, 25;
	mov.b64 	%rd9257, {%r6451, %r6450};
	xor.b64  	%rd9258, %rd9256, %rd9257;
	and.b64  	%rd9259, %rd9234, %rd9204;
	or.b64  	%rd9260, %rd9234, %rd9204;
	and.b64  	%rd9261, %rd9260, %rd9174;
	or.b64  	%rd9262, %rd9261, %rd9259;
	add.s64 	%rd9263, %rd9262, %rd9258;
	add.s64 	%rd9264, %rd9263, %rd9252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6452,%dummy}, %rd10014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6453}, %rd10014;
	}
	shf.r.wrap.b32 	%r6454, %r6453, %r6452, 19;
	shf.r.wrap.b32 	%r6455, %r6452, %r6453, 19;
	mov.b64 	%rd9265, {%r6455, %r6454};
	shf.l.wrap.b32 	%r6456, %r6452, %r6453, 3;
	shf.l.wrap.b32 	%r6457, %r6453, %r6452, 3;
	mov.b64 	%rd9266, {%r6457, %r6456};
	xor.b64  	%rd9267, %rd9265, %rd9266;
	shr.u64 	%rd9268, %rd10014, 6;
	xor.b64  	%rd9269, %rd9267, %rd9268;
	add.s64 	%rd9270, %rd10009, %rd9148;
	add.s64 	%rd10010, %rd9270, %rd9269;
	add.s64 	%rd9271, %rd10010, %rd9163;
	xor.b64  	%rd9272, %rd9223, %rd9193;
	and.b64  	%rd9273, %rd9253, %rd9272;
	xor.b64  	%rd9274, %rd9273, %rd9193;
	add.s64 	%rd9275, %rd9271, %rd9274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd9253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6459}, %rd9253;
	}
	shf.r.wrap.b32 	%r6460, %r6459, %r6458, 14;
	shf.r.wrap.b32 	%r6461, %r6458, %r6459, 14;
	mov.b64 	%rd9276, {%r6461, %r6460};
	shf.r.wrap.b32 	%r6462, %r6459, %r6458, 18;
	shf.r.wrap.b32 	%r6463, %r6458, %r6459, 18;
	mov.b64 	%rd9277, {%r6463, %r6462};
	xor.b64  	%rd9278, %rd9276, %rd9277;
	shf.l.wrap.b32 	%r6464, %r6458, %r6459, 23;
	shf.l.wrap.b32 	%r6465, %r6459, %r6458, 23;
	mov.b64 	%rd9279, {%r6465, %r6464};
	xor.b64  	%rd9280, %rd9278, %rd9279;
	add.s64 	%rd9281, %rd9275, %rd9280;
	add.s64 	%rd9282, %rd9281, -4116276920077217854;
	add.s64 	%rd10021, %rd9282, %rd9174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd9264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6467}, %rd9264;
	}
	shf.r.wrap.b32 	%r6468, %r6467, %r6466, 28;
	shf.r.wrap.b32 	%r6469, %r6466, %r6467, 28;
	mov.b64 	%rd9283, {%r6469, %r6468};
	shf.l.wrap.b32 	%r6470, %r6466, %r6467, 30;
	shf.l.wrap.b32 	%r6471, %r6467, %r6466, 30;
	mov.b64 	%rd9284, {%r6471, %r6470};
	xor.b64  	%rd9285, %rd9283, %rd9284;
	shf.l.wrap.b32 	%r6472, %r6466, %r6467, 25;
	shf.l.wrap.b32 	%r6473, %r6467, %r6466, 25;
	mov.b64 	%rd9286, {%r6473, %r6472};
	xor.b64  	%rd9287, %rd9285, %rd9286;
	and.b64  	%rd9288, %rd9264, %rd9234;
	or.b64  	%rd9289, %rd9264, %rd9234;
	and.b64  	%rd9290, %rd9289, %rd9204;
	or.b64  	%rd9291, %rd9290, %rd9288;
	add.s64 	%rd9292, %rd9291, %rd9287;
	add.s64 	%rd10028, %rd9292, %rd9282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6474,%dummy}, %rd10012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6475}, %rd10012;
	}
	shf.r.wrap.b32 	%r6476, %r6475, %r6474, 19;
	shf.r.wrap.b32 	%r6477, %r6474, %r6475, 19;
	mov.b64 	%rd9293, {%r6477, %r6476};
	shf.l.wrap.b32 	%r6478, %r6474, %r6475, 3;
	shf.l.wrap.b32 	%r6479, %r6475, %r6474, 3;
	mov.b64 	%rd9294, {%r6479, %r6478};
	xor.b64  	%rd9295, %rd9293, %rd9294;
	shr.u64 	%rd9296, %rd10012, 6;
	xor.b64  	%rd9297, %rd9295, %rd9296;
	add.s64 	%rd9298, %rd10007, %rd9148;
	add.s64 	%rd10008, %rd9298, %rd9297;
	st.local.v2.u64 	[%rd1+96], {%rd10010, %rd10008};
	add.s64 	%rd9299, %rd10008, %rd9193;
	xor.b64  	%rd9300, %rd9253, %rd9223;
	and.b64  	%rd9301, %rd10021, %rd9300;
	xor.b64  	%rd9302, %rd9301, %rd9223;
	add.s64 	%rd9303, %rd9299, %rd9302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6480,%dummy}, %rd10021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6481}, %rd10021;
	}
	shf.r.wrap.b32 	%r6482, %r6481, %r6480, 14;
	shf.r.wrap.b32 	%r6483, %r6480, %r6481, 14;
	mov.b64 	%rd9304, {%r6483, %r6482};
	shf.r.wrap.b32 	%r6484, %r6481, %r6480, 18;
	shf.r.wrap.b32 	%r6485, %r6480, %r6481, 18;
	mov.b64 	%rd9305, {%r6485, %r6484};
	xor.b64  	%rd9306, %rd9304, %rd9305;
	shf.l.wrap.b32 	%r6486, %r6480, %r6481, 23;
	shf.l.wrap.b32 	%r6487, %r6481, %r6480, 23;
	mov.b64 	%rd9307, {%r6487, %r6486};
	xor.b64  	%rd9308, %rd9306, %rd9307;
	add.s64 	%rd9309, %rd9303, %rd9308;
	add.s64 	%rd9310, %rd9309, -3051310485924567259;
	add.s64 	%rd10022, %rd9310, %rd9204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6488,%dummy}, %rd10028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6489}, %rd10028;
	}
	shf.r.wrap.b32 	%r6490, %r6489, %r6488, 28;
	shf.r.wrap.b32 	%r6491, %r6488, %r6489, 28;
	mov.b64 	%rd9311, {%r6491, %r6490};
	shf.l.wrap.b32 	%r6492, %r6488, %r6489, 30;
	shf.l.wrap.b32 	%r6493, %r6489, %r6488, 30;
	mov.b64 	%rd9312, {%r6493, %r6492};
	xor.b64  	%rd9313, %rd9311, %rd9312;
	shf.l.wrap.b32 	%r6494, %r6488, %r6489, 25;
	shf.l.wrap.b32 	%r6495, %r6489, %r6488, 25;
	mov.b64 	%rd9314, {%r6495, %r6494};
	xor.b64  	%rd9315, %rd9313, %rd9314;
	and.b64  	%rd9316, %rd10028, %rd9264;
	or.b64  	%rd9317, %rd10028, %rd9264;
	and.b64  	%rd9318, %rd9317, %rd9234;
	or.b64  	%rd9319, %rd9318, %rd9316;
	add.s64 	%rd9320, %rd9319, %rd9315;
	add.s64 	%rd10027, %rd9320, %rd9310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6496,%dummy}, %rd10010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6497}, %rd10010;
	}
	shf.r.wrap.b32 	%r6498, %r6497, %r6496, 19;
	shf.r.wrap.b32 	%r6499, %r6496, %r6497, 19;
	mov.b64 	%rd9321, {%r6499, %r6498};
	shf.l.wrap.b32 	%r6500, %r6496, %r6497, 3;
	shf.l.wrap.b32 	%r6501, %r6497, %r6496, 3;
	mov.b64 	%rd9322, {%r6501, %r6500};
	xor.b64  	%rd9323, %rd9321, %rd9322;
	shr.u64 	%rd9324, %rd10010, 6;
	xor.b64  	%rd9325, %rd9323, %rd9324;
	shf.r.wrap.b32 	%r6502, %r6164, %r6165, 8;
	shf.r.wrap.b32 	%r6503, %r6165, %r6164, 8;
	mov.b64 	%rd9326, {%r6503, %r6502};
	shf.r.wrap.b32 	%r6504, %r6164, %r6165, 1;
	shf.r.wrap.b32 	%r6505, %r6165, %r6164, 1;
	mov.b64 	%rd9327, {%r6505, %r6504};
	xor.b64  	%rd9328, %rd9327, %rd9326;
	xor.b64  	%rd9329, %rd9328, 12;
	add.s64 	%rd9330, %rd9325, %rd10006;
	add.s64 	%rd10020, %rd9330, %rd9329;
	add.s64 	%rd9331, %rd10020, %rd9223;
	xor.b64  	%rd9332, %rd10021, %rd9253;
	and.b64  	%rd9333, %rd10022, %rd9332;
	xor.b64  	%rd9334, %rd9333, %rd9253;
	add.s64 	%rd9335, %rd9331, %rd9334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6506,%dummy}, %rd10022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6507}, %rd10022;
	}
	shf.r.wrap.b32 	%r6508, %r6507, %r6506, 14;
	shf.r.wrap.b32 	%r6509, %r6506, %r6507, 14;
	mov.b64 	%rd9336, {%r6509, %r6508};
	shf.r.wrap.b32 	%r6510, %r6507, %r6506, 18;
	shf.r.wrap.b32 	%r6511, %r6506, %r6507, 18;
	mov.b64 	%rd9337, {%r6511, %r6510};
	xor.b64  	%rd9338, %rd9336, %rd9337;
	shf.l.wrap.b32 	%r6512, %r6506, %r6507, 23;
	shf.l.wrap.b32 	%r6513, %r6507, %r6506, 23;
	mov.b64 	%rd9339, {%r6513, %r6512};
	xor.b64  	%rd9340, %rd9338, %rd9339;
	add.s64 	%rd9341, %rd9335, %rd9340;
	add.s64 	%rd9342, %rd9341, 489312712824947311;
	add.s64 	%rd10023, %rd9342, %rd9234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd10027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6515}, %rd10027;
	}
	shf.r.wrap.b32 	%r6516, %r6515, %r6514, 28;
	shf.r.wrap.b32 	%r6517, %r6514, %r6515, 28;
	mov.b64 	%rd9343, {%r6517, %r6516};
	shf.l.wrap.b32 	%r6518, %r6514, %r6515, 30;
	shf.l.wrap.b32 	%r6519, %r6515, %r6514, 30;
	mov.b64 	%rd9344, {%r6519, %r6518};
	xor.b64  	%rd9345, %rd9343, %rd9344;
	shf.l.wrap.b32 	%r6520, %r6514, %r6515, 25;
	shf.l.wrap.b32 	%r6521, %r6515, %r6514, 25;
	mov.b64 	%rd9346, {%r6521, %r6520};
	xor.b64  	%rd9347, %rd9345, %rd9346;
	and.b64  	%rd9348, %rd10027, %rd10028;
	or.b64  	%rd9349, %rd10027, %rd10028;
	and.b64  	%rd9350, %rd9349, %rd9264;
	or.b64  	%rd9351, %rd9350, %rd9348;
	add.s64 	%rd9352, %rd9351, %rd9347;
	add.s64 	%rd10026, %rd9352, %rd9342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd10008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6523}, %rd10008;
	}
	shf.r.wrap.b32 	%r6524, %r6523, %r6522, 19;
	shf.r.wrap.b32 	%r6525, %r6522, %r6523, 19;
	mov.b64 	%rd9353, {%r6525, %r6524};
	shf.l.wrap.b32 	%r6526, %r6522, %r6523, 3;
	shf.l.wrap.b32 	%r6527, %r6523, %r6522, 3;
	mov.b64 	%rd9354, {%r6527, %r6526};
	xor.b64  	%rd9355, %rd9353, %rd9354;
	shr.u64 	%rd9356, %rd10008, 6;
	xor.b64  	%rd9357, %rd9355, %rd9356;
	shf.r.wrap.b32 	%r6528, %r6193, %r6192, 1;
	shf.r.wrap.b32 	%r6529, %r6192, %r6193, 1;
	mov.b64 	%rd9358, {%r6529, %r6528};
	shf.r.wrap.b32 	%r6530, %r6193, %r6192, 8;
	shf.r.wrap.b32 	%r6531, %r6192, %r6193, 8;
	mov.b64 	%rd9359, {%r6531, %r6530};
	xor.b64  	%rd9360, %rd9358, %rd9359;
	shr.u64 	%rd9361, %rd10018, 7;
	xor.b64  	%rd9362, %rd9360, %rd9361;
	add.s64 	%rd9363, %rd9357, %rd10005;
	add.s64 	%rd9364, %rd9363, %rd9362;
	add.s64 	%rd10016, %rd9364, 1536;
	st.local.v2.u64 	[%rd1+112], {%rd10020, %rd10016};
	add.s64 	%rd9365, %rd10016, %rd9253;
	xor.b64  	%rd9366, %rd10022, %rd10021;
	and.b64  	%rd9367, %rd10023, %rd9366;
	xor.b64  	%rd9368, %rd9367, %rd10021;
	add.s64 	%rd9369, %rd9365, %rd9368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6532,%dummy}, %rd10023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6533}, %rd10023;
	}
	shf.r.wrap.b32 	%r6534, %r6533, %r6532, 14;
	shf.r.wrap.b32 	%r6535, %r6532, %r6533, 14;
	mov.b64 	%rd9370, {%r6535, %r6534};
	shf.r.wrap.b32 	%r6536, %r6533, %r6532, 18;
	shf.r.wrap.b32 	%r6537, %r6532, %r6533, 18;
	mov.b64 	%rd9371, {%r6537, %r6536};
	xor.b64  	%rd9372, %rd9370, %rd9371;
	shf.l.wrap.b32 	%r6538, %r6532, %r6533, 23;
	shf.l.wrap.b32 	%r6539, %r6533, %r6532, 23;
	mov.b64 	%rd9373, {%r6539, %r6538};
	xor.b64  	%rd9374, %rd9372, %rd9373;
	add.s64 	%rd9375, %rd9369, %rd9374;
	add.s64 	%rd9376, %rd9375, 1452737877330783856;
	add.s64 	%rd10024, %rd9376, %rd9264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6540,%dummy}, %rd10026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6541}, %rd10026;
	}
	shf.r.wrap.b32 	%r6542, %r6541, %r6540, 28;
	shf.r.wrap.b32 	%r6543, %r6540, %r6541, 28;
	mov.b64 	%rd9377, {%r6543, %r6542};
	shf.l.wrap.b32 	%r6544, %r6540, %r6541, 30;
	shf.l.wrap.b32 	%r6545, %r6541, %r6540, 30;
	mov.b64 	%rd9378, {%r6545, %r6544};
	xor.b64  	%rd9379, %rd9377, %rd9378;
	shf.l.wrap.b32 	%r6546, %r6540, %r6541, 25;
	shf.l.wrap.b32 	%r6547, %r6541, %r6540, 25;
	mov.b64 	%rd9380, {%r6547, %r6546};
	xor.b64  	%rd9381, %rd9379, %rd9380;
	and.b64  	%rd9382, %rd10026, %rd10027;
	or.b64  	%rd9383, %rd10026, %rd10027;
	and.b64  	%rd9384, %rd9383, %rd10028;
	or.b64  	%rd9385, %rd9384, %rd9382;
	add.s64 	%rd9386, %rd9385, %rd9381;
	add.s64 	%rd10025, %rd9386, %rd9376;
	mov.u32 	%r7003, 32;
	mov.u64 	%rd10004, K;

$L__BB4_16:
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6548}, %rd10020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6549,%dummy}, %rd10020;
	}
	shf.l.wrap.b32 	%r6550, %r6549, %r6548, 3;
	shf.l.wrap.b32 	%r6551, %r6548, %r6549, 3;
	mov.b64 	%rd9387, {%r6551, %r6550};
	shf.r.wrap.b32 	%r6552, %r6548, %r6549, 19;
	shf.r.wrap.b32 	%r6553, %r6549, %r6548, 19;
	mov.b64 	%rd9388, {%r6553, %r6552};
	xor.b64  	%rd9389, %rd9388, %rd9387;
	shr.u64 	%rd9390, %rd10020, 6;
	xor.b64  	%rd9391, %rd9389, %rd9390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6554,%dummy}, %rd10019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd10019;
	}
	shf.r.wrap.b32 	%r6556, %r6555, %r6554, 8;
	shf.r.wrap.b32 	%r6557, %r6554, %r6555, 8;
	mov.b64 	%rd9392, {%r6557, %r6556};
	shf.r.wrap.b32 	%r6558, %r6555, %r6554, 1;
	shf.r.wrap.b32 	%r6559, %r6554, %r6555, 1;
	mov.b64 	%rd9393, {%r6559, %r6558};
	xor.b64  	%rd9394, %rd9393, %rd9392;
	shr.u64 	%rd9395, %rd10019, 7;
	xor.b64  	%rd9396, %rd9394, %rd9395;
	add.s64 	%rd9397, %rd9391, %rd10018;
	add.s64 	%rd9398, %rd9397, %rd10017;
	add.s64 	%rd10018, %rd9398, %rd9396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6560,%dummy}, %rd10024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6561}, %rd10024;
	}
	shf.r.wrap.b32 	%r6562, %r6561, %r6560, 18;
	shf.r.wrap.b32 	%r6563, %r6560, %r6561, 18;
	mov.b64 	%rd9399, {%r6563, %r6562};
	shf.r.wrap.b32 	%r6564, %r6561, %r6560, 14;
	shf.r.wrap.b32 	%r6565, %r6560, %r6561, 14;
	mov.b64 	%rd9400, {%r6565, %r6564};
	xor.b64  	%rd9401, %rd9400, %rd9399;
	shf.l.wrap.b32 	%r6566, %r6560, %r6561, 23;
	shf.l.wrap.b32 	%r6567, %r6561, %r6560, 23;
	mov.b64 	%rd9402, {%r6567, %r6566};
	xor.b64  	%rd9403, %rd9401, %rd9402;
	xor.b64  	%rd9404, %rd10022, %rd10023;
	and.b64  	%rd9405, %rd9404, %rd10024;
	xor.b64  	%rd9406, %rd9405, %rd10022;
	add.s64 	%rd9407, %rd9403, %rd10021;
	add.s64 	%rd9408, %rd9407, %rd9406;
	ld.const.u64 	%rd9409, [%rd10004+256];
	add.s64 	%rd9410, %rd9408, %rd9409;
	add.s64 	%rd9411, %rd9410, %rd10018;
	add.s64 	%rd9412, %rd9411, %rd10028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6568}, %rd10025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6569,%dummy}, %rd10025;
	}
	shf.l.wrap.b32 	%r6570, %r6569, %r6568, 30;
	shf.l.wrap.b32 	%r6571, %r6568, %r6569, 30;
	mov.b64 	%rd9413, {%r6571, %r6570};
	shf.r.wrap.b32 	%r6572, %r6568, %r6569, 28;
	shf.r.wrap.b32 	%r6573, %r6569, %r6568, 28;
	mov.b64 	%rd9414, {%r6573, %r6572};
	xor.b64  	%rd9415, %rd9414, %rd9413;
	shf.l.wrap.b32 	%r6574, %r6569, %r6568, 25;
	shf.l.wrap.b32 	%r6575, %r6568, %r6569, 25;
	mov.b64 	%rd9416, {%r6575, %r6574};
	xor.b64  	%rd9417, %rd9415, %rd9416;
	or.b64  	%rd9418, %rd10025, %rd10026;
	and.b64  	%rd9419, %rd9418, %rd10027;
	and.b64  	%rd9420, %rd10025, %rd10026;
	or.b64  	%rd9421, %rd9419, %rd9420;
	add.s64 	%rd9422, %rd9421, %rd9417;
	add.s64 	%rd9423, %rd9422, %rd9411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6576}, %rd10016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6577,%dummy}, %rd10016;
	}
	shf.l.wrap.b32 	%r6578, %r6577, %r6576, 3;
	shf.l.wrap.b32 	%r6579, %r6576, %r6577, 3;
	mov.b64 	%rd9424, {%r6579, %r6578};
	shf.r.wrap.b32 	%r6580, %r6576, %r6577, 19;
	shf.r.wrap.b32 	%r6581, %r6577, %r6576, 19;
	mov.b64 	%rd9425, {%r6581, %r6580};
	xor.b64  	%rd9426, %rd9425, %rd9424;
	shr.u64 	%rd9427, %rd10016, 6;
	xor.b64  	%rd9428, %rd9426, %rd9427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6582,%dummy}, %rd10015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6583}, %rd10015;
	}
	shf.r.wrap.b32 	%r6584, %r6583, %r6582, 8;
	shf.r.wrap.b32 	%r6585, %r6582, %r6583, 8;
	mov.b64 	%rd9429, {%r6585, %r6584};
	shf.r.wrap.b32 	%r6586, %r6583, %r6582, 1;
	shf.r.wrap.b32 	%r6587, %r6582, %r6583, 1;
	mov.b64 	%rd9430, {%r6587, %r6586};
	xor.b64  	%rd9431, %rd9430, %rd9429;
	shr.u64 	%rd9432, %rd10015, 7;
	xor.b64  	%rd9433, %rd9431, %rd9432;
	add.s64 	%rd9434, %rd9428, %rd10019;
	add.s64 	%rd9435, %rd9434, %rd10014;
	add.s64 	%rd10019, %rd9435, %rd9433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6588,%dummy}, %rd9412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6589}, %rd9412;
	}
	shf.r.wrap.b32 	%r6590, %r6589, %r6588, 14;
	shf.r.wrap.b32 	%r6591, %r6588, %r6589, 14;
	mov.b64 	%rd9436, {%r6591, %r6590};
	shf.r.wrap.b32 	%r6592, %r6589, %r6588, 18;
	shf.r.wrap.b32 	%r6593, %r6588, %r6589, 18;
	mov.b64 	%rd9437, {%r6593, %r6592};
	xor.b64  	%rd9438, %rd9436, %rd9437;
	shf.l.wrap.b32 	%r6594, %r6588, %r6589, 23;
	shf.l.wrap.b32 	%r6595, %r6589, %r6588, 23;
	mov.b64 	%rd9439, {%r6595, %r6594};
	xor.b64  	%rd9440, %rd9438, %rd9439;
	xor.b64  	%rd9441, %rd10023, %rd10024;
	and.b64  	%rd9442, %rd9412, %rd9441;
	xor.b64  	%rd9443, %rd9442, %rd10023;
	ld.const.u64 	%rd9444, [%rd10004+264];
	add.s64 	%rd9445, %rd9444, %rd10022;
	add.s64 	%rd9446, %rd9445, %rd10019;
	add.s64 	%rd9447, %rd9446, %rd9443;
	add.s64 	%rd9448, %rd9447, %rd9440;
	add.s64 	%rd9449, %rd9448, %rd10027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6596,%dummy}, %rd9423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6597}, %rd9423;
	}
	shf.r.wrap.b32 	%r6598, %r6597, %r6596, 28;
	shf.r.wrap.b32 	%r6599, %r6596, %r6597, 28;
	mov.b64 	%rd9450, {%r6599, %r6598};
	shf.l.wrap.b32 	%r6600, %r6596, %r6597, 30;
	shf.l.wrap.b32 	%r6601, %r6597, %r6596, 30;
	mov.b64 	%rd9451, {%r6601, %r6600};
	xor.b64  	%rd9452, %rd9450, %rd9451;
	shf.l.wrap.b32 	%r6602, %r6596, %r6597, 25;
	shf.l.wrap.b32 	%r6603, %r6597, %r6596, 25;
	mov.b64 	%rd9453, {%r6603, %r6602};
	xor.b64  	%rd9454, %rd9452, %rd9453;
	and.b64  	%rd9455, %rd9423, %rd10025;
	or.b64  	%rd9456, %rd9423, %rd10025;
	and.b64  	%rd9457, %rd9456, %rd10026;
	or.b64  	%rd9458, %rd9457, %rd9455;
	add.s64 	%rd9459, %rd9458, %rd9454;
	add.s64 	%rd9460, %rd9459, %rd9448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6604,%dummy}, %rd10018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6605}, %rd10018;
	}
	shf.r.wrap.b32 	%r6606, %r6605, %r6604, 19;
	shf.r.wrap.b32 	%r6607, %r6604, %r6605, 19;
	mov.b64 	%rd9461, {%r6607, %r6606};
	shf.l.wrap.b32 	%r6608, %r6604, %r6605, 3;
	shf.l.wrap.b32 	%r6609, %r6605, %r6604, 3;
	mov.b64 	%rd9462, {%r6609, %r6608};
	xor.b64  	%rd9463, %rd9461, %rd9462;
	shr.u64 	%rd9464, %rd10018, 6;
	xor.b64  	%rd9465, %rd9463, %rd9464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6610,%dummy}, %rd10013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6611}, %rd10013;
	}
	shf.r.wrap.b32 	%r6612, %r6611, %r6610, 8;
	shf.r.wrap.b32 	%r6613, %r6610, %r6611, 8;
	mov.b64 	%rd9466, {%r6613, %r6612};
	shf.r.wrap.b32 	%r6614, %r6611, %r6610, 1;
	shf.r.wrap.b32 	%r6615, %r6610, %r6611, 1;
	mov.b64 	%rd9467, {%r6615, %r6614};
	xor.b64  	%rd9468, %rd9467, %rd9466;
	shr.u64 	%rd9469, %rd10013, 7;
	xor.b64  	%rd9470, %rd9468, %rd9469;
	add.s64 	%rd9471, %rd9465, %rd10015;
	add.s64 	%rd9472, %rd9471, %rd10012;
	add.s64 	%rd10015, %rd9472, %rd9470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6616,%dummy}, %rd9449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6617}, %rd9449;
	}
	shf.r.wrap.b32 	%r6618, %r6617, %r6616, 14;
	shf.r.wrap.b32 	%r6619, %r6616, %r6617, 14;
	mov.b64 	%rd9473, {%r6619, %r6618};
	shf.r.wrap.b32 	%r6620, %r6617, %r6616, 18;
	shf.r.wrap.b32 	%r6621, %r6616, %r6617, 18;
	mov.b64 	%rd9474, {%r6621, %r6620};
	xor.b64  	%rd9475, %rd9473, %rd9474;
	shf.l.wrap.b32 	%r6622, %r6616, %r6617, 23;
	shf.l.wrap.b32 	%r6623, %r6617, %r6616, 23;
	mov.b64 	%rd9476, {%r6623, %r6622};
	xor.b64  	%rd9477, %rd9475, %rd9476;
	xor.b64  	%rd9478, %rd9412, %rd10024;
	and.b64  	%rd9479, %rd9449, %rd9478;
	xor.b64  	%rd9480, %rd9479, %rd10024;
	ld.const.u64 	%rd9481, [%rd10004+272];
	add.s64 	%rd9482, %rd9481, %rd10023;
	add.s64 	%rd9483, %rd9482, %rd10015;
	add.s64 	%rd9484, %rd9483, %rd9480;
	add.s64 	%rd9485, %rd9484, %rd9477;
	add.s64 	%rd9486, %rd9485, %rd10026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6624,%dummy}, %rd9460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6625}, %rd9460;
	}
	shf.r.wrap.b32 	%r6626, %r6625, %r6624, 28;
	shf.r.wrap.b32 	%r6627, %r6624, %r6625, 28;
	mov.b64 	%rd9487, {%r6627, %r6626};
	shf.l.wrap.b32 	%r6628, %r6624, %r6625, 30;
	shf.l.wrap.b32 	%r6629, %r6625, %r6624, 30;
	mov.b64 	%rd9488, {%r6629, %r6628};
	xor.b64  	%rd9489, %rd9487, %rd9488;
	shf.l.wrap.b32 	%r6630, %r6624, %r6625, 25;
	shf.l.wrap.b32 	%r6631, %r6625, %r6624, 25;
	mov.b64 	%rd9490, {%r6631, %r6630};
	xor.b64  	%rd9491, %rd9489, %rd9490;
	and.b64  	%rd9492, %rd9460, %rd9423;
	or.b64  	%rd9493, %rd9460, %rd9423;
	and.b64  	%rd9494, %rd9493, %rd10025;
	or.b64  	%rd9495, %rd9494, %rd9492;
	add.s64 	%rd9496, %rd9495, %rd9491;
	add.s64 	%rd9497, %rd9496, %rd9485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6632,%dummy}, %rd10019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6633}, %rd10019;
	}
	shf.r.wrap.b32 	%r6634, %r6633, %r6632, 19;
	shf.r.wrap.b32 	%r6635, %r6632, %r6633, 19;
	mov.b64 	%rd9498, {%r6635, %r6634};
	shf.l.wrap.b32 	%r6636, %r6632, %r6633, 3;
	shf.l.wrap.b32 	%r6637, %r6633, %r6632, 3;
	mov.b64 	%rd9499, {%r6637, %r6636};
	xor.b64  	%rd9500, %rd9498, %rd9499;
	shr.u64 	%rd9501, %rd10019, 6;
	xor.b64  	%rd9502, %rd9500, %rd9501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6638,%dummy}, %rd10011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6639}, %rd10011;
	}
	shf.r.wrap.b32 	%r6640, %r6639, %r6638, 8;
	shf.r.wrap.b32 	%r6641, %r6638, %r6639, 8;
	mov.b64 	%rd9503, {%r6641, %r6640};
	shf.r.wrap.b32 	%r6642, %r6639, %r6638, 1;
	shf.r.wrap.b32 	%r6643, %r6638, %r6639, 1;
	mov.b64 	%rd9504, {%r6643, %r6642};
	xor.b64  	%rd9505, %rd9504, %rd9503;
	shr.u64 	%rd9506, %rd10011, 7;
	xor.b64  	%rd9507, %rd9505, %rd9506;
	add.s64 	%rd9508, %rd9502, %rd10013;
	add.s64 	%rd9509, %rd9508, %rd10010;
	add.s64 	%rd10013, %rd9509, %rd9507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6644,%dummy}, %rd9486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6645}, %rd9486;
	}
	shf.r.wrap.b32 	%r6646, %r6645, %r6644, 14;
	shf.r.wrap.b32 	%r6647, %r6644, %r6645, 14;
	mov.b64 	%rd9510, {%r6647, %r6646};
	shf.r.wrap.b32 	%r6648, %r6645, %r6644, 18;
	shf.r.wrap.b32 	%r6649, %r6644, %r6645, 18;
	mov.b64 	%rd9511, {%r6649, %r6648};
	xor.b64  	%rd9512, %rd9510, %rd9511;
	shf.l.wrap.b32 	%r6650, %r6644, %r6645, 23;
	shf.l.wrap.b32 	%r6651, %r6645, %r6644, 23;
	mov.b64 	%rd9513, {%r6651, %r6650};
	xor.b64  	%rd9514, %rd9512, %rd9513;
	xor.b64  	%rd9515, %rd9449, %rd9412;
	and.b64  	%rd9516, %rd9486, %rd9515;
	xor.b64  	%rd9517, %rd9516, %rd9412;
	ld.const.u64 	%rd9518, [%rd10004+280];
	add.s64 	%rd9519, %rd9518, %rd10024;
	add.s64 	%rd9520, %rd9519, %rd10013;
	add.s64 	%rd9521, %rd9520, %rd9517;
	add.s64 	%rd9522, %rd9521, %rd9514;
	add.s64 	%rd9523, %rd9522, %rd10025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6652,%dummy}, %rd9497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6653}, %rd9497;
	}
	shf.r.wrap.b32 	%r6654, %r6653, %r6652, 28;
	shf.r.wrap.b32 	%r6655, %r6652, %r6653, 28;
	mov.b64 	%rd9524, {%r6655, %r6654};
	shf.l.wrap.b32 	%r6656, %r6652, %r6653, 30;
	shf.l.wrap.b32 	%r6657, %r6653, %r6652, 30;
	mov.b64 	%rd9525, {%r6657, %r6656};
	xor.b64  	%rd9526, %rd9524, %rd9525;
	shf.l.wrap.b32 	%r6658, %r6652, %r6653, 25;
	shf.l.wrap.b32 	%r6659, %r6653, %r6652, 25;
	mov.b64 	%rd9527, {%r6659, %r6658};
	xor.b64  	%rd9528, %rd9526, %rd9527;
	and.b64  	%rd9529, %rd9497, %rd9460;
	or.b64  	%rd9530, %rd9497, %rd9460;
	and.b64  	%rd9531, %rd9530, %rd9423;
	or.b64  	%rd9532, %rd9531, %rd9529;
	add.s64 	%rd9533, %rd9532, %rd9528;
	add.s64 	%rd9534, %rd9533, %rd9522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6660,%dummy}, %rd10015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6661}, %rd10015;
	}
	shf.r.wrap.b32 	%r6662, %r6661, %r6660, 19;
	shf.r.wrap.b32 	%r6663, %r6660, %r6661, 19;
	mov.b64 	%rd9535, {%r6663, %r6662};
	shf.l.wrap.b32 	%r6664, %r6660, %r6661, 3;
	shf.l.wrap.b32 	%r6665, %r6661, %r6660, 3;
	mov.b64 	%rd9536, {%r6665, %r6664};
	xor.b64  	%rd9537, %rd9535, %rd9536;
	shr.u64 	%rd9538, %rd10015, 6;
	xor.b64  	%rd9539, %rd9537, %rd9538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6666,%dummy}, %rd10009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6667}, %rd10009;
	}
	shf.r.wrap.b32 	%r6668, %r6667, %r6666, 8;
	shf.r.wrap.b32 	%r6669, %r6666, %r6667, 8;
	mov.b64 	%rd9540, {%r6669, %r6668};
	shf.r.wrap.b32 	%r6670, %r6667, %r6666, 1;
	shf.r.wrap.b32 	%r6671, %r6666, %r6667, 1;
	mov.b64 	%rd9541, {%r6671, %r6670};
	xor.b64  	%rd9542, %rd9541, %rd9540;
	shr.u64 	%rd9543, %rd10009, 7;
	xor.b64  	%rd9544, %rd9542, %rd9543;
	add.s64 	%rd9545, %rd9539, %rd10011;
	add.s64 	%rd9546, %rd9545, %rd10008;
	add.s64 	%rd10011, %rd9546, %rd9544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6672,%dummy}, %rd9523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6673}, %rd9523;
	}
	shf.r.wrap.b32 	%r6674, %r6673, %r6672, 14;
	shf.r.wrap.b32 	%r6675, %r6672, %r6673, 14;
	mov.b64 	%rd9547, {%r6675, %r6674};
	shf.r.wrap.b32 	%r6676, %r6673, %r6672, 18;
	shf.r.wrap.b32 	%r6677, %r6672, %r6673, 18;
	mov.b64 	%rd9548, {%r6677, %r6676};
	xor.b64  	%rd9549, %rd9547, %rd9548;
	shf.l.wrap.b32 	%r6678, %r6672, %r6673, 23;
	shf.l.wrap.b32 	%r6679, %r6673, %r6672, 23;
	mov.b64 	%rd9550, {%r6679, %r6678};
	xor.b64  	%rd9551, %rd9549, %rd9550;
	xor.b64  	%rd9552, %rd9486, %rd9449;
	and.b64  	%rd9553, %rd9523, %rd9552;
	xor.b64  	%rd9554, %rd9553, %rd9449;
	ld.const.u64 	%rd9555, [%rd10004+288];
	add.s64 	%rd9556, %rd9555, %rd9412;
	add.s64 	%rd9557, %rd9556, %rd10011;
	add.s64 	%rd9558, %rd9557, %rd9554;
	add.s64 	%rd9559, %rd9558, %rd9551;
	add.s64 	%rd9560, %rd9559, %rd9423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6680,%dummy}, %rd9534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6681}, %rd9534;
	}
	shf.r.wrap.b32 	%r6682, %r6681, %r6680, 28;
	shf.r.wrap.b32 	%r6683, %r6680, %r6681, 28;
	mov.b64 	%rd9561, {%r6683, %r6682};
	shf.l.wrap.b32 	%r6684, %r6680, %r6681, 30;
	shf.l.wrap.b32 	%r6685, %r6681, %r6680, 30;
	mov.b64 	%rd9562, {%r6685, %r6684};
	xor.b64  	%rd9563, %rd9561, %rd9562;
	shf.l.wrap.b32 	%r6686, %r6680, %r6681, 25;
	shf.l.wrap.b32 	%r6687, %r6681, %r6680, 25;
	mov.b64 	%rd9564, {%r6687, %r6686};
	xor.b64  	%rd9565, %rd9563, %rd9564;
	and.b64  	%rd9566, %rd9534, %rd9497;
	or.b64  	%rd9567, %rd9534, %rd9497;
	and.b64  	%rd9568, %rd9567, %rd9460;
	or.b64  	%rd9569, %rd9568, %rd9566;
	add.s64 	%rd9570, %rd9569, %rd9565;
	add.s64 	%rd9571, %rd9570, %rd9559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6688,%dummy}, %rd10013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6689}, %rd10013;
	}
	shf.r.wrap.b32 	%r6690, %r6689, %r6688, 19;
	shf.r.wrap.b32 	%r6691, %r6688, %r6689, 19;
	mov.b64 	%rd9572, {%r6691, %r6690};
	shf.l.wrap.b32 	%r6692, %r6688, %r6689, 3;
	shf.l.wrap.b32 	%r6693, %r6689, %r6688, 3;
	mov.b64 	%rd9573, {%r6693, %r6692};
	xor.b64  	%rd9574, %rd9572, %rd9573;
	shr.u64 	%rd9575, %rd10013, 6;
	xor.b64  	%rd9576, %rd9574, %rd9575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6694,%dummy}, %rd10007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6695}, %rd10007;
	}
	shf.r.wrap.b32 	%r6696, %r6695, %r6694, 8;
	shf.r.wrap.b32 	%r6697, %r6694, %r6695, 8;
	mov.b64 	%rd9577, {%r6697, %r6696};
	shf.r.wrap.b32 	%r6698, %r6695, %r6694, 1;
	shf.r.wrap.b32 	%r6699, %r6694, %r6695, 1;
	mov.b64 	%rd9578, {%r6699, %r6698};
	xor.b64  	%rd9579, %rd9578, %rd9577;
	shr.u64 	%rd9580, %rd10007, 7;
	xor.b64  	%rd9581, %rd9579, %rd9580;
	add.s64 	%rd9582, %rd9576, %rd10009;
	add.s64 	%rd9583, %rd9582, %rd10020;
	add.s64 	%rd10009, %rd9583, %rd9581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6700,%dummy}, %rd9560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6701}, %rd9560;
	}
	shf.r.wrap.b32 	%r6702, %r6701, %r6700, 14;
	shf.r.wrap.b32 	%r6703, %r6700, %r6701, 14;
	mov.b64 	%rd9584, {%r6703, %r6702};
	shf.r.wrap.b32 	%r6704, %r6701, %r6700, 18;
	shf.r.wrap.b32 	%r6705, %r6700, %r6701, 18;
	mov.b64 	%rd9585, {%r6705, %r6704};
	xor.b64  	%rd9586, %rd9584, %rd9585;
	shf.l.wrap.b32 	%r6706, %r6700, %r6701, 23;
	shf.l.wrap.b32 	%r6707, %r6701, %r6700, 23;
	mov.b64 	%rd9587, {%r6707, %r6706};
	xor.b64  	%rd9588, %rd9586, %rd9587;
	xor.b64  	%rd9589, %rd9523, %rd9486;
	and.b64  	%rd9590, %rd9560, %rd9589;
	xor.b64  	%rd9591, %rd9590, %rd9486;
	ld.const.u64 	%rd9592, [%rd10004+296];
	add.s64 	%rd9593, %rd9592, %rd9449;
	add.s64 	%rd9594, %rd9593, %rd10009;
	add.s64 	%rd9595, %rd9594, %rd9591;
	add.s64 	%rd9596, %rd9595, %rd9588;
	add.s64 	%rd9597, %rd9596, %rd9460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6708,%dummy}, %rd9571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6709}, %rd9571;
	}
	shf.r.wrap.b32 	%r6710, %r6709, %r6708, 28;
	shf.r.wrap.b32 	%r6711, %r6708, %r6709, 28;
	mov.b64 	%rd9598, {%r6711, %r6710};
	shf.l.wrap.b32 	%r6712, %r6708, %r6709, 30;
	shf.l.wrap.b32 	%r6713, %r6709, %r6708, 30;
	mov.b64 	%rd9599, {%r6713, %r6712};
	xor.b64  	%rd9600, %rd9598, %rd9599;
	shf.l.wrap.b32 	%r6714, %r6708, %r6709, 25;
	shf.l.wrap.b32 	%r6715, %r6709, %r6708, 25;
	mov.b64 	%rd9601, {%r6715, %r6714};
	xor.b64  	%rd9602, %rd9600, %rd9601;
	and.b64  	%rd9603, %rd9571, %rd9534;
	or.b64  	%rd9604, %rd9571, %rd9534;
	and.b64  	%rd9605, %rd9604, %rd9497;
	or.b64  	%rd9606, %rd9605, %rd9603;
	add.s64 	%rd9607, %rd9606, %rd9602;
	add.s64 	%rd9608, %rd9607, %rd9596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6716,%dummy}, %rd10011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6717}, %rd10011;
	}
	shf.r.wrap.b32 	%r6718, %r6717, %r6716, 19;
	shf.r.wrap.b32 	%r6719, %r6716, %r6717, 19;
	mov.b64 	%rd9609, {%r6719, %r6718};
	shf.l.wrap.b32 	%r6720, %r6716, %r6717, 3;
	shf.l.wrap.b32 	%r6721, %r6717, %r6716, 3;
	mov.b64 	%rd9610, {%r6721, %r6720};
	xor.b64  	%rd9611, %rd9609, %rd9610;
	shr.u64 	%rd9612, %rd10011, 6;
	xor.b64  	%rd9613, %rd9611, %rd9612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd10006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd10006;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 8;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 8;
	mov.b64 	%rd9614, {%r6725, %r6724};
	shf.r.wrap.b32 	%r6726, %r6723, %r6722, 1;
	shf.r.wrap.b32 	%r6727, %r6722, %r6723, 1;
	mov.b64 	%rd9615, {%r6727, %r6726};
	xor.b64  	%rd9616, %rd9615, %rd9614;
	shr.u64 	%rd9617, %rd10006, 7;
	xor.b64  	%rd9618, %rd9616, %rd9617;
	add.s64 	%rd9619, %rd9613, %rd10007;
	add.s64 	%rd9620, %rd9619, %rd10016;
	add.s64 	%rd10007, %rd9620, %rd9618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6728,%dummy}, %rd9597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6729}, %rd9597;
	}
	shf.r.wrap.b32 	%r6730, %r6729, %r6728, 14;
	shf.r.wrap.b32 	%r6731, %r6728, %r6729, 14;
	mov.b64 	%rd9621, {%r6731, %r6730};
	shf.r.wrap.b32 	%r6732, %r6729, %r6728, 18;
	shf.r.wrap.b32 	%r6733, %r6728, %r6729, 18;
	mov.b64 	%rd9622, {%r6733, %r6732};
	xor.b64  	%rd9623, %rd9621, %rd9622;
	shf.l.wrap.b32 	%r6734, %r6728, %r6729, 23;
	shf.l.wrap.b32 	%r6735, %r6729, %r6728, 23;
	mov.b64 	%rd9624, {%r6735, %r6734};
	xor.b64  	%rd9625, %rd9623, %rd9624;
	xor.b64  	%rd9626, %rd9560, %rd9523;
	and.b64  	%rd9627, %rd9597, %rd9626;
	xor.b64  	%rd9628, %rd9627, %rd9523;
	ld.const.u64 	%rd9629, [%rd10004+304];
	add.s64 	%rd9630, %rd9629, %rd9486;
	add.s64 	%rd9631, %rd9630, %rd10007;
	add.s64 	%rd9632, %rd9631, %rd9628;
	add.s64 	%rd9633, %rd9632, %rd9625;
	add.s64 	%rd9634, %rd9633, %rd9497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6736,%dummy}, %rd9608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6737}, %rd9608;
	}
	shf.r.wrap.b32 	%r6738, %r6737, %r6736, 28;
	shf.r.wrap.b32 	%r6739, %r6736, %r6737, 28;
	mov.b64 	%rd9635, {%r6739, %r6738};
	shf.l.wrap.b32 	%r6740, %r6736, %r6737, 30;
	shf.l.wrap.b32 	%r6741, %r6737, %r6736, 30;
	mov.b64 	%rd9636, {%r6741, %r6740};
	xor.b64  	%rd9637, %rd9635, %rd9636;
	shf.l.wrap.b32 	%r6742, %r6736, %r6737, 25;
	shf.l.wrap.b32 	%r6743, %r6737, %r6736, 25;
	mov.b64 	%rd9638, {%r6743, %r6742};
	xor.b64  	%rd9639, %rd9637, %rd9638;
	and.b64  	%rd9640, %rd9608, %rd9571;
	or.b64  	%rd9641, %rd9608, %rd9571;
	and.b64  	%rd9642, %rd9641, %rd9534;
	or.b64  	%rd9643, %rd9642, %rd9640;
	add.s64 	%rd9644, %rd9643, %rd9639;
	add.s64 	%rd9645, %rd9644, %rd9633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6744,%dummy}, %rd10009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6745}, %rd10009;
	}
	shf.r.wrap.b32 	%r6746, %r6745, %r6744, 19;
	shf.r.wrap.b32 	%r6747, %r6744, %r6745, 19;
	mov.b64 	%rd9646, {%r6747, %r6746};
	shf.l.wrap.b32 	%r6748, %r6744, %r6745, 3;
	shf.l.wrap.b32 	%r6749, %r6745, %r6744, 3;
	mov.b64 	%rd9647, {%r6749, %r6748};
	xor.b64  	%rd9648, %rd9646, %rd9647;
	shr.u64 	%rd9649, %rd10009, 6;
	xor.b64  	%rd9650, %rd9648, %rd9649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6750,%dummy}, %rd10005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6751}, %rd10005;
	}
	shf.r.wrap.b32 	%r6752, %r6751, %r6750, 8;
	shf.r.wrap.b32 	%r6753, %r6750, %r6751, 8;
	mov.b64 	%rd9651, {%r6753, %r6752};
	shf.r.wrap.b32 	%r6754, %r6751, %r6750, 1;
	shf.r.wrap.b32 	%r6755, %r6750, %r6751, 1;
	mov.b64 	%rd9652, {%r6755, %r6754};
	xor.b64  	%rd9653, %rd9652, %rd9651;
	shr.u64 	%rd9654, %rd10005, 7;
	xor.b64  	%rd9655, %rd9653, %rd9654;
	add.s64 	%rd9656, %rd9650, %rd10006;
	add.s64 	%rd9657, %rd9656, %rd10018;
	add.s64 	%rd10006, %rd9657, %rd9655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6756,%dummy}, %rd9634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6757}, %rd9634;
	}
	shf.r.wrap.b32 	%r6758, %r6757, %r6756, 14;
	shf.r.wrap.b32 	%r6759, %r6756, %r6757, 14;
	mov.b64 	%rd9658, {%r6759, %r6758};
	shf.r.wrap.b32 	%r6760, %r6757, %r6756, 18;
	shf.r.wrap.b32 	%r6761, %r6756, %r6757, 18;
	mov.b64 	%rd9659, {%r6761, %r6760};
	xor.b64  	%rd9660, %rd9658, %rd9659;
	shf.l.wrap.b32 	%r6762, %r6756, %r6757, 23;
	shf.l.wrap.b32 	%r6763, %r6757, %r6756, 23;
	mov.b64 	%rd9661, {%r6763, %r6762};
	xor.b64  	%rd9662, %rd9660, %rd9661;
	xor.b64  	%rd9663, %rd9597, %rd9560;
	and.b64  	%rd9664, %rd9634, %rd9663;
	xor.b64  	%rd9665, %rd9664, %rd9560;
	ld.const.u64 	%rd9666, [%rd10004+312];
	add.s64 	%rd9667, %rd9666, %rd9523;
	add.s64 	%rd9668, %rd9667, %rd10006;
	add.s64 	%rd9669, %rd9668, %rd9665;
	add.s64 	%rd9670, %rd9669, %rd9662;
	add.s64 	%rd9671, %rd9670, %rd9534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6764,%dummy}, %rd9645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6765}, %rd9645;
	}
	shf.r.wrap.b32 	%r6766, %r6765, %r6764, 28;
	shf.r.wrap.b32 	%r6767, %r6764, %r6765, 28;
	mov.b64 	%rd9672, {%r6767, %r6766};
	shf.l.wrap.b32 	%r6768, %r6764, %r6765, 30;
	shf.l.wrap.b32 	%r6769, %r6765, %r6764, 30;
	mov.b64 	%rd9673, {%r6769, %r6768};
	xor.b64  	%rd9674, %rd9672, %rd9673;
	shf.l.wrap.b32 	%r6770, %r6764, %r6765, 25;
	shf.l.wrap.b32 	%r6771, %r6765, %r6764, 25;
	mov.b64 	%rd9675, {%r6771, %r6770};
	xor.b64  	%rd9676, %rd9674, %rd9675;
	and.b64  	%rd9677, %rd9645, %rd9608;
	or.b64  	%rd9678, %rd9645, %rd9608;
	and.b64  	%rd9679, %rd9678, %rd9571;
	or.b64  	%rd9680, %rd9679, %rd9677;
	add.s64 	%rd9681, %rd9680, %rd9676;
	add.s64 	%rd9682, %rd9681, %rd9670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6772,%dummy}, %rd10007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6773}, %rd10007;
	}
	shf.r.wrap.b32 	%r6774, %r6773, %r6772, 19;
	shf.r.wrap.b32 	%r6775, %r6772, %r6773, 19;
	mov.b64 	%rd9683, {%r6775, %r6774};
	shf.l.wrap.b32 	%r6776, %r6772, %r6773, 3;
	shf.l.wrap.b32 	%r6777, %r6773, %r6772, 3;
	mov.b64 	%rd9684, {%r6777, %r6776};
	xor.b64  	%rd9685, %rd9683, %rd9684;
	shr.u64 	%rd9686, %rd10007, 6;
	xor.b64  	%rd9687, %rd9685, %rd9686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd10017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd10017;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 8;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 8;
	mov.b64 	%rd9688, {%r6781, %r6780};
	shf.r.wrap.b32 	%r6782, %r6779, %r6778, 1;
	shf.r.wrap.b32 	%r6783, %r6778, %r6779, 1;
	mov.b64 	%rd9689, {%r6783, %r6782};
	xor.b64  	%rd9690, %rd9689, %rd9688;
	shr.u64 	%rd9691, %rd10017, 7;
	xor.b64  	%rd9692, %rd9690, %rd9691;
	add.s64 	%rd9693, %rd9687, %rd10005;
	add.s64 	%rd9694, %rd9693, %rd10019;
	add.s64 	%rd10005, %rd9694, %rd9692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6784,%dummy}, %rd9671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6785}, %rd9671;
	}
	shf.r.wrap.b32 	%r6786, %r6785, %r6784, 14;
	shf.r.wrap.b32 	%r6787, %r6784, %r6785, 14;
	mov.b64 	%rd9695, {%r6787, %r6786};
	shf.r.wrap.b32 	%r6788, %r6785, %r6784, 18;
	shf.r.wrap.b32 	%r6789, %r6784, %r6785, 18;
	mov.b64 	%rd9696, {%r6789, %r6788};
	xor.b64  	%rd9697, %rd9695, %rd9696;
	shf.l.wrap.b32 	%r6790, %r6784, %r6785, 23;
	shf.l.wrap.b32 	%r6791, %r6785, %r6784, 23;
	mov.b64 	%rd9698, {%r6791, %r6790};
	xor.b64  	%rd9699, %rd9697, %rd9698;
	xor.b64  	%rd9700, %rd9634, %rd9597;
	and.b64  	%rd9701, %rd9671, %rd9700;
	xor.b64  	%rd9702, %rd9701, %rd9597;
	ld.const.u64 	%rd9703, [%rd10004+320];
	add.s64 	%rd9704, %rd9703, %rd9560;
	add.s64 	%rd9705, %rd9704, %rd10005;
	add.s64 	%rd9706, %rd9705, %rd9702;
	add.s64 	%rd9707, %rd9706, %rd9699;
	add.s64 	%rd9708, %rd9707, %rd9571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6792,%dummy}, %rd9682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6793}, %rd9682;
	}
	shf.r.wrap.b32 	%r6794, %r6793, %r6792, 28;
	shf.r.wrap.b32 	%r6795, %r6792, %r6793, 28;
	mov.b64 	%rd9709, {%r6795, %r6794};
	shf.l.wrap.b32 	%r6796, %r6792, %r6793, 30;
	shf.l.wrap.b32 	%r6797, %r6793, %r6792, 30;
	mov.b64 	%rd9710, {%r6797, %r6796};
	xor.b64  	%rd9711, %rd9709, %rd9710;
	shf.l.wrap.b32 	%r6798, %r6792, %r6793, 25;
	shf.l.wrap.b32 	%r6799, %r6793, %r6792, 25;
	mov.b64 	%rd9712, {%r6799, %r6798};
	xor.b64  	%rd9713, %rd9711, %rd9712;
	and.b64  	%rd9714, %rd9682, %rd9645;
	or.b64  	%rd9715, %rd9682, %rd9645;
	and.b64  	%rd9716, %rd9715, %rd9608;
	or.b64  	%rd9717, %rd9716, %rd9714;
	add.s64 	%rd9718, %rd9717, %rd9713;
	add.s64 	%rd9719, %rd9718, %rd9707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6800,%dummy}, %rd10006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6801}, %rd10006;
	}
	shf.r.wrap.b32 	%r6802, %r6801, %r6800, 19;
	shf.r.wrap.b32 	%r6803, %r6800, %r6801, 19;
	mov.b64 	%rd9720, {%r6803, %r6802};
	shf.l.wrap.b32 	%r6804, %r6800, %r6801, 3;
	shf.l.wrap.b32 	%r6805, %r6801, %r6800, 3;
	mov.b64 	%rd9721, {%r6805, %r6804};
	xor.b64  	%rd9722, %rd9720, %rd9721;
	shr.u64 	%rd9723, %rd10006, 6;
	xor.b64  	%rd9724, %rd9722, %rd9723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6806,%dummy}, %rd10014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6807}, %rd10014;
	}
	shf.r.wrap.b32 	%r6808, %r6807, %r6806, 8;
	shf.r.wrap.b32 	%r6809, %r6806, %r6807, 8;
	mov.b64 	%rd9725, {%r6809, %r6808};
	shf.r.wrap.b32 	%r6810, %r6807, %r6806, 1;
	shf.r.wrap.b32 	%r6811, %r6806, %r6807, 1;
	mov.b64 	%rd9726, {%r6811, %r6810};
	xor.b64  	%rd9727, %rd9726, %rd9725;
	shr.u64 	%rd9728, %rd10014, 7;
	xor.b64  	%rd9729, %rd9727, %rd9728;
	add.s64 	%rd9730, %rd9724, %rd10017;
	add.s64 	%rd9731, %rd9730, %rd10015;
	add.s64 	%rd10017, %rd9731, %rd9729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6812,%dummy}, %rd9708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6813}, %rd9708;
	}
	shf.r.wrap.b32 	%r6814, %r6813, %r6812, 14;
	shf.r.wrap.b32 	%r6815, %r6812, %r6813, 14;
	mov.b64 	%rd9732, {%r6815, %r6814};
	shf.r.wrap.b32 	%r6816, %r6813, %r6812, 18;
	shf.r.wrap.b32 	%r6817, %r6812, %r6813, 18;
	mov.b64 	%rd9733, {%r6817, %r6816};
	xor.b64  	%rd9734, %rd9732, %rd9733;
	shf.l.wrap.b32 	%r6818, %r6812, %r6813, 23;
	shf.l.wrap.b32 	%r6819, %r6813, %r6812, 23;
	mov.b64 	%rd9735, {%r6819, %r6818};
	xor.b64  	%rd9736, %rd9734, %rd9735;
	xor.b64  	%rd9737, %rd9671, %rd9634;
	and.b64  	%rd9738, %rd9708, %rd9737;
	xor.b64  	%rd9739, %rd9738, %rd9634;
	ld.const.u64 	%rd9740, [%rd10004+328];
	add.s64 	%rd9741, %rd9740, %rd9597;
	add.s64 	%rd9742, %rd9741, %rd10017;
	add.s64 	%rd9743, %rd9742, %rd9739;
	add.s64 	%rd9744, %rd9743, %rd9736;
	add.s64 	%rd9745, %rd9744, %rd9608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6820,%dummy}, %rd9719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6821}, %rd9719;
	}
	shf.r.wrap.b32 	%r6822, %r6821, %r6820, 28;
	shf.r.wrap.b32 	%r6823, %r6820, %r6821, 28;
	mov.b64 	%rd9746, {%r6823, %r6822};
	shf.l.wrap.b32 	%r6824, %r6820, %r6821, 30;
	shf.l.wrap.b32 	%r6825, %r6821, %r6820, 30;
	mov.b64 	%rd9747, {%r6825, %r6824};
	xor.b64  	%rd9748, %rd9746, %rd9747;
	shf.l.wrap.b32 	%r6826, %r6820, %r6821, 25;
	shf.l.wrap.b32 	%r6827, %r6821, %r6820, 25;
	mov.b64 	%rd9749, {%r6827, %r6826};
	xor.b64  	%rd9750, %rd9748, %rd9749;
	and.b64  	%rd9751, %rd9719, %rd9682;
	or.b64  	%rd9752, %rd9719, %rd9682;
	and.b64  	%rd9753, %rd9752, %rd9645;
	or.b64  	%rd9754, %rd9753, %rd9751;
	add.s64 	%rd9755, %rd9754, %rd9750;
	add.s64 	%rd9756, %rd9755, %rd9744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6828,%dummy}, %rd10005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6829}, %rd10005;
	}
	shf.r.wrap.b32 	%r6830, %r6829, %r6828, 19;
	shf.r.wrap.b32 	%r6831, %r6828, %r6829, 19;
	mov.b64 	%rd9757, {%r6831, %r6830};
	shf.l.wrap.b32 	%r6832, %r6828, %r6829, 3;
	shf.l.wrap.b32 	%r6833, %r6829, %r6828, 3;
	mov.b64 	%rd9758, {%r6833, %r6832};
	xor.b64  	%rd9759, %rd9757, %rd9758;
	shr.u64 	%rd9760, %rd10005, 6;
	xor.b64  	%rd9761, %rd9759, %rd9760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd10012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd10012;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 8;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 8;
	mov.b64 	%rd9762, {%r6837, %r6836};
	shf.r.wrap.b32 	%r6838, %r6835, %r6834, 1;
	shf.r.wrap.b32 	%r6839, %r6834, %r6835, 1;
	mov.b64 	%rd9763, {%r6839, %r6838};
	xor.b64  	%rd9764, %rd9763, %rd9762;
	shr.u64 	%rd9765, %rd10012, 7;
	xor.b64  	%rd9766, %rd9764, %rd9765;
	add.s64 	%rd9767, %rd9761, %rd10014;
	add.s64 	%rd9768, %rd9767, %rd10013;
	add.s64 	%rd10014, %rd9768, %rd9766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6840,%dummy}, %rd9745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6841}, %rd9745;
	}
	shf.r.wrap.b32 	%r6842, %r6841, %r6840, 14;
	shf.r.wrap.b32 	%r6843, %r6840, %r6841, 14;
	mov.b64 	%rd9769, {%r6843, %r6842};
	shf.r.wrap.b32 	%r6844, %r6841, %r6840, 18;
	shf.r.wrap.b32 	%r6845, %r6840, %r6841, 18;
	mov.b64 	%rd9770, {%r6845, %r6844};
	xor.b64  	%rd9771, %rd9769, %rd9770;
	shf.l.wrap.b32 	%r6846, %r6840, %r6841, 23;
	shf.l.wrap.b32 	%r6847, %r6841, %r6840, 23;
	mov.b64 	%rd9772, {%r6847, %r6846};
	xor.b64  	%rd9773, %rd9771, %rd9772;
	xor.b64  	%rd9774, %rd9708, %rd9671;
	and.b64  	%rd9775, %rd9745, %rd9774;
	xor.b64  	%rd9776, %rd9775, %rd9671;
	ld.const.u64 	%rd9777, [%rd10004+336];
	add.s64 	%rd9778, %rd9777, %rd9634;
	add.s64 	%rd9779, %rd9778, %rd10014;
	add.s64 	%rd9780, %rd9779, %rd9776;
	add.s64 	%rd9781, %rd9780, %rd9773;
	add.s64 	%rd9782, %rd9781, %rd9645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6848,%dummy}, %rd9756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6849}, %rd9756;
	}
	shf.r.wrap.b32 	%r6850, %r6849, %r6848, 28;
	shf.r.wrap.b32 	%r6851, %r6848, %r6849, 28;
	mov.b64 	%rd9783, {%r6851, %r6850};
	shf.l.wrap.b32 	%r6852, %r6848, %r6849, 30;
	shf.l.wrap.b32 	%r6853, %r6849, %r6848, 30;
	mov.b64 	%rd9784, {%r6853, %r6852};
	xor.b64  	%rd9785, %rd9783, %rd9784;
	shf.l.wrap.b32 	%r6854, %r6848, %r6849, 25;
	shf.l.wrap.b32 	%r6855, %r6849, %r6848, 25;
	mov.b64 	%rd9786, {%r6855, %r6854};
	xor.b64  	%rd9787, %rd9785, %rd9786;
	and.b64  	%rd9788, %rd9756, %rd9719;
	or.b64  	%rd9789, %rd9756, %rd9719;
	and.b64  	%rd9790, %rd9789, %rd9682;
	or.b64  	%rd9791, %rd9790, %rd9788;
	add.s64 	%rd9792, %rd9791, %rd9787;
	add.s64 	%rd9793, %rd9792, %rd9781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6856,%dummy}, %rd10017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6857}, %rd10017;
	}
	shf.r.wrap.b32 	%r6858, %r6857, %r6856, 19;
	shf.r.wrap.b32 	%r6859, %r6856, %r6857, 19;
	mov.b64 	%rd9794, {%r6859, %r6858};
	shf.l.wrap.b32 	%r6860, %r6856, %r6857, 3;
	shf.l.wrap.b32 	%r6861, %r6857, %r6856, 3;
	mov.b64 	%rd9795, {%r6861, %r6860};
	xor.b64  	%rd9796, %rd9794, %rd9795;
	shr.u64 	%rd9797, %rd10017, 6;
	xor.b64  	%rd9798, %rd9796, %rd9797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6862,%dummy}, %rd10010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6863}, %rd10010;
	}
	shf.r.wrap.b32 	%r6864, %r6863, %r6862, 8;
	shf.r.wrap.b32 	%r6865, %r6862, %r6863, 8;
	mov.b64 	%rd9799, {%r6865, %r6864};
	shf.r.wrap.b32 	%r6866, %r6863, %r6862, 1;
	shf.r.wrap.b32 	%r6867, %r6862, %r6863, 1;
	mov.b64 	%rd9800, {%r6867, %r6866};
	xor.b64  	%rd9801, %rd9800, %rd9799;
	shr.u64 	%rd9802, %rd10010, 7;
	xor.b64  	%rd9803, %rd9801, %rd9802;
	add.s64 	%rd9804, %rd9798, %rd10012;
	add.s64 	%rd9805, %rd9804, %rd10011;
	add.s64 	%rd10012, %rd9805, %rd9803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6868,%dummy}, %rd9782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6869}, %rd9782;
	}
	shf.r.wrap.b32 	%r6870, %r6869, %r6868, 14;
	shf.r.wrap.b32 	%r6871, %r6868, %r6869, 14;
	mov.b64 	%rd9806, {%r6871, %r6870};
	shf.r.wrap.b32 	%r6872, %r6869, %r6868, 18;
	shf.r.wrap.b32 	%r6873, %r6868, %r6869, 18;
	mov.b64 	%rd9807, {%r6873, %r6872};
	xor.b64  	%rd9808, %rd9806, %rd9807;
	shf.l.wrap.b32 	%r6874, %r6868, %r6869, 23;
	shf.l.wrap.b32 	%r6875, %r6869, %r6868, 23;
	mov.b64 	%rd9809, {%r6875, %r6874};
	xor.b64  	%rd9810, %rd9808, %rd9809;
	xor.b64  	%rd9811, %rd9745, %rd9708;
	and.b64  	%rd9812, %rd9782, %rd9811;
	xor.b64  	%rd9813, %rd9812, %rd9708;
	ld.const.u64 	%rd9814, [%rd10004+344];
	add.s64 	%rd9815, %rd9814, %rd9671;
	add.s64 	%rd9816, %rd9815, %rd10012;
	add.s64 	%rd9817, %rd9816, %rd9813;
	add.s64 	%rd9818, %rd9817, %rd9810;
	add.s64 	%rd9819, %rd9818, %rd9682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6876,%dummy}, %rd9793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6877}, %rd9793;
	}
	shf.r.wrap.b32 	%r6878, %r6877, %r6876, 28;
	shf.r.wrap.b32 	%r6879, %r6876, %r6877, 28;
	mov.b64 	%rd9820, {%r6879, %r6878};
	shf.l.wrap.b32 	%r6880, %r6876, %r6877, 30;
	shf.l.wrap.b32 	%r6881, %r6877, %r6876, 30;
	mov.b64 	%rd9821, {%r6881, %r6880};
	xor.b64  	%rd9822, %rd9820, %rd9821;
	shf.l.wrap.b32 	%r6882, %r6876, %r6877, 25;
	shf.l.wrap.b32 	%r6883, %r6877, %r6876, 25;
	mov.b64 	%rd9823, {%r6883, %r6882};
	xor.b64  	%rd9824, %rd9822, %rd9823;
	and.b64  	%rd9825, %rd9793, %rd9756;
	or.b64  	%rd9826, %rd9793, %rd9756;
	and.b64  	%rd9827, %rd9826, %rd9719;
	or.b64  	%rd9828, %rd9827, %rd9825;
	add.s64 	%rd9829, %rd9828, %rd9824;
	add.s64 	%rd9830, %rd9829, %rd9818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6884,%dummy}, %rd10014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6885}, %rd10014;
	}
	shf.r.wrap.b32 	%r6886, %r6885, %r6884, 19;
	shf.r.wrap.b32 	%r6887, %r6884, %r6885, 19;
	mov.b64 	%rd9831, {%r6887, %r6886};
	shf.l.wrap.b32 	%r6888, %r6884, %r6885, 3;
	shf.l.wrap.b32 	%r6889, %r6885, %r6884, 3;
	mov.b64 	%rd9832, {%r6889, %r6888};
	xor.b64  	%rd9833, %rd9831, %rd9832;
	shr.u64 	%rd9834, %rd10014, 6;
	xor.b64  	%rd9835, %rd9833, %rd9834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd10008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd10008;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 8;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 8;
	mov.b64 	%rd9836, {%r6893, %r6892};
	shf.r.wrap.b32 	%r6894, %r6891, %r6890, 1;
	shf.r.wrap.b32 	%r6895, %r6890, %r6891, 1;
	mov.b64 	%rd9837, {%r6895, %r6894};
	xor.b64  	%rd9838, %rd9837, %rd9836;
	shr.u64 	%rd9839, %rd10008, 7;
	xor.b64  	%rd9840, %rd9838, %rd9839;
	add.s64 	%rd9841, %rd9835, %rd10010;
	add.s64 	%rd9842, %rd9841, %rd10009;
	add.s64 	%rd10010, %rd9842, %rd9840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6896,%dummy}, %rd9819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6897}, %rd9819;
	}
	shf.r.wrap.b32 	%r6898, %r6897, %r6896, 14;
	shf.r.wrap.b32 	%r6899, %r6896, %r6897, 14;
	mov.b64 	%rd9843, {%r6899, %r6898};
	shf.r.wrap.b32 	%r6900, %r6897, %r6896, 18;
	shf.r.wrap.b32 	%r6901, %r6896, %r6897, 18;
	mov.b64 	%rd9844, {%r6901, %r6900};
	xor.b64  	%rd9845, %rd9843, %rd9844;
	shf.l.wrap.b32 	%r6902, %r6896, %r6897, 23;
	shf.l.wrap.b32 	%r6903, %r6897, %r6896, 23;
	mov.b64 	%rd9846, {%r6903, %r6902};
	xor.b64  	%rd9847, %rd9845, %rd9846;
	xor.b64  	%rd9848, %rd9782, %rd9745;
	and.b64  	%rd9849, %rd9819, %rd9848;
	xor.b64  	%rd9850, %rd9849, %rd9745;
	ld.const.u64 	%rd9851, [%rd10004+352];
	add.s64 	%rd9852, %rd9851, %rd9708;
	add.s64 	%rd9853, %rd9852, %rd10010;
	add.s64 	%rd9854, %rd9853, %rd9850;
	add.s64 	%rd9855, %rd9854, %rd9847;
	add.s64 	%rd10021, %rd9855, %rd9719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6904,%dummy}, %rd9830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6905}, %rd9830;
	}
	shf.r.wrap.b32 	%r6906, %r6905, %r6904, 28;
	shf.r.wrap.b32 	%r6907, %r6904, %r6905, 28;
	mov.b64 	%rd9856, {%r6907, %r6906};
	shf.l.wrap.b32 	%r6908, %r6904, %r6905, 30;
	shf.l.wrap.b32 	%r6909, %r6905, %r6904, 30;
	mov.b64 	%rd9857, {%r6909, %r6908};
	xor.b64  	%rd9858, %rd9856, %rd9857;
	shf.l.wrap.b32 	%r6910, %r6904, %r6905, 25;
	shf.l.wrap.b32 	%r6911, %r6905, %r6904, 25;
	mov.b64 	%rd9859, {%r6911, %r6910};
	xor.b64  	%rd9860, %rd9858, %rd9859;
	and.b64  	%rd9861, %rd9830, %rd9793;
	or.b64  	%rd9862, %rd9830, %rd9793;
	and.b64  	%rd9863, %rd9862, %rd9756;
	or.b64  	%rd9864, %rd9863, %rd9861;
	add.s64 	%rd9865, %rd9864, %rd9860;
	add.s64 	%rd10028, %rd9865, %rd9855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6912,%dummy}, %rd10012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6913}, %rd10012;
	}
	shf.r.wrap.b32 	%r6914, %r6913, %r6912, 19;
	shf.r.wrap.b32 	%r6915, %r6912, %r6913, 19;
	mov.b64 	%rd9866, {%r6915, %r6914};
	shf.l.wrap.b32 	%r6916, %r6912, %r6913, 3;
	shf.l.wrap.b32 	%r6917, %r6913, %r6912, 3;
	mov.b64 	%rd9867, {%r6917, %r6916};
	xor.b64  	%rd9868, %rd9866, %rd9867;
	shr.u64 	%rd9869, %rd10012, 6;
	xor.b64  	%rd9870, %rd9868, %rd9869;
	shf.r.wrap.b32 	%r6918, %r6548, %r6549, 8;
	shf.r.wrap.b32 	%r6919, %r6549, %r6548, 8;
	mov.b64 	%rd9871, {%r6919, %r6918};
	shf.r.wrap.b32 	%r6920, %r6548, %r6549, 1;
	shf.r.wrap.b32 	%r6921, %r6549, %r6548, 1;
	mov.b64 	%rd9872, {%r6921, %r6920};
	xor.b64  	%rd9873, %rd9872, %rd9871;
	shr.u64 	%rd9874, %rd10020, 7;
	xor.b64  	%rd9875, %rd9873, %rd9874;
	add.s64 	%rd9876, %rd9870, %rd10008;
	add.s64 	%rd9877, %rd9876, %rd10007;
	add.s64 	%rd10008, %rd9877, %rd9875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd10021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd10021;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 14;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 14;
	mov.b64 	%rd9878, {%r6925, %r6924};
	shf.r.wrap.b32 	%r6926, %r6923, %r6922, 18;
	shf.r.wrap.b32 	%r6927, %r6922, %r6923, 18;
	mov.b64 	%rd9879, {%r6927, %r6926};
	xor.b64  	%rd9880, %rd9878, %rd9879;
	shf.l.wrap.b32 	%r6928, %r6922, %r6923, 23;
	shf.l.wrap.b32 	%r6929, %r6923, %r6922, 23;
	mov.b64 	%rd9881, {%r6929, %r6928};
	xor.b64  	%rd9882, %rd9880, %rd9881;
	xor.b64  	%rd9883, %rd9819, %rd9782;
	and.b64  	%rd9884, %rd10021, %rd9883;
	xor.b64  	%rd9885, %rd9884, %rd9782;
	ld.const.u64 	%rd9886, [%rd10004+360];
	add.s64 	%rd9887, %rd9886, %rd9745;
	add.s64 	%rd9888, %rd9887, %rd10008;
	add.s64 	%rd9889, %rd9888, %rd9885;
	add.s64 	%rd9890, %rd9889, %rd9882;
	add.s64 	%rd10022, %rd9890, %rd9756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6930,%dummy}, %rd10028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6931}, %rd10028;
	}
	shf.r.wrap.b32 	%r6932, %r6931, %r6930, 28;
	shf.r.wrap.b32 	%r6933, %r6930, %r6931, 28;
	mov.b64 	%rd9891, {%r6933, %r6932};
	shf.l.wrap.b32 	%r6934, %r6930, %r6931, 30;
	shf.l.wrap.b32 	%r6935, %r6931, %r6930, 30;
	mov.b64 	%rd9892, {%r6935, %r6934};
	xor.b64  	%rd9893, %rd9891, %rd9892;
	shf.l.wrap.b32 	%r6936, %r6930, %r6931, 25;
	shf.l.wrap.b32 	%r6937, %r6931, %r6930, 25;
	mov.b64 	%rd9894, {%r6937, %r6936};
	xor.b64  	%rd9895, %rd9893, %rd9894;
	and.b64  	%rd9896, %rd10028, %rd9830;
	or.b64  	%rd9897, %rd10028, %rd9830;
	and.b64  	%rd9898, %rd9897, %rd9793;
	or.b64  	%rd9899, %rd9898, %rd9896;
	add.s64 	%rd9900, %rd9899, %rd9895;
	add.s64 	%rd10027, %rd9900, %rd9890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd10010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6939}, %rd10010;
	}
	shf.r.wrap.b32 	%r6940, %r6939, %r6938, 19;
	shf.r.wrap.b32 	%r6941, %r6938, %r6939, 19;
	mov.b64 	%rd9901, {%r6941, %r6940};
	shf.l.wrap.b32 	%r6942, %r6938, %r6939, 3;
	shf.l.wrap.b32 	%r6943, %r6939, %r6938, 3;
	mov.b64 	%rd9902, {%r6943, %r6942};
	xor.b64  	%rd9903, %rd9901, %rd9902;
	shr.u64 	%rd9904, %rd10010, 6;
	xor.b64  	%rd9905, %rd9903, %rd9904;
	shf.r.wrap.b32 	%r6944, %r6576, %r6577, 8;
	shf.r.wrap.b32 	%r6945, %r6577, %r6576, 8;
	mov.b64 	%rd9906, {%r6945, %r6944};
	shf.r.wrap.b32 	%r6946, %r6576, %r6577, 1;
	shf.r.wrap.b32 	%r6947, %r6577, %r6576, 1;
	mov.b64 	%rd9907, {%r6947, %r6946};
	xor.b64  	%rd9908, %rd9907, %rd9906;
	shr.u64 	%rd9909, %rd10016, 7;
	xor.b64  	%rd9910, %rd9908, %rd9909;
	add.s64 	%rd9911, %rd9905, %rd10020;
	add.s64 	%rd9912, %rd9911, %rd10006;
	add.s64 	%rd10020, %rd9912, %rd9910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6948,%dummy}, %rd10022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6949}, %rd10022;
	}
	shf.r.wrap.b32 	%r6950, %r6949, %r6948, 14;
	shf.r.wrap.b32 	%r6951, %r6948, %r6949, 14;
	mov.b64 	%rd9913, {%r6951, %r6950};
	shf.r.wrap.b32 	%r6952, %r6949, %r6948, 18;
	shf.r.wrap.b32 	%r6953, %r6948, %r6949, 18;
	mov.b64 	%rd9914, {%r6953, %r6952};
	xor.b64  	%rd9915, %rd9913, %rd9914;
	shf.l.wrap.b32 	%r6954, %r6948, %r6949, 23;
	shf.l.wrap.b32 	%r6955, %r6949, %r6948, 23;
	mov.b64 	%rd9916, {%r6955, %r6954};
	xor.b64  	%rd9917, %rd9915, %rd9916;
	xor.b64  	%rd9918, %rd10021, %rd9819;
	and.b64  	%rd9919, %rd10022, %rd9918;
	xor.b64  	%rd9920, %rd9919, %rd9819;
	ld.const.u64 	%rd9921, [%rd10004+368];
	add.s64 	%rd9922, %rd9921, %rd9782;
	add.s64 	%rd9923, %rd9922, %rd10020;
	add.s64 	%rd9924, %rd9923, %rd9920;
	add.s64 	%rd9925, %rd9924, %rd9917;
	add.s64 	%rd10023, %rd9925, %rd9793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6956,%dummy}, %rd10027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6957}, %rd10027;
	}
	shf.r.wrap.b32 	%r6958, %r6957, %r6956, 28;
	shf.r.wrap.b32 	%r6959, %r6956, %r6957, 28;
	mov.b64 	%rd9926, {%r6959, %r6958};
	shf.l.wrap.b32 	%r6960, %r6956, %r6957, 30;
	shf.l.wrap.b32 	%r6961, %r6957, %r6956, 30;
	mov.b64 	%rd9927, {%r6961, %r6960};
	xor.b64  	%rd9928, %rd9926, %rd9927;
	shf.l.wrap.b32 	%r6962, %r6956, %r6957, 25;
	shf.l.wrap.b32 	%r6963, %r6957, %r6956, 25;
	mov.b64 	%rd9929, {%r6963, %r6962};
	xor.b64  	%rd9930, %rd9928, %rd9929;
	and.b64  	%rd9931, %rd10027, %rd10028;
	or.b64  	%rd9932, %rd10027, %rd10028;
	and.b64  	%rd9933, %rd9932, %rd9830;
	or.b64  	%rd9934, %rd9933, %rd9931;
	add.s64 	%rd9935, %rd9934, %rd9930;
	add.s64 	%rd10026, %rd9935, %rd9925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6964,%dummy}, %rd10008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd10008;
	}
	shf.r.wrap.b32 	%r6966, %r6965, %r6964, 19;
	shf.r.wrap.b32 	%r6967, %r6964, %r6965, 19;
	mov.b64 	%rd9936, {%r6967, %r6966};
	shf.l.wrap.b32 	%r6968, %r6964, %r6965, 3;
	shf.l.wrap.b32 	%r6969, %r6965, %r6964, 3;
	mov.b64 	%rd9937, {%r6969, %r6968};
	xor.b64  	%rd9938, %rd9936, %rd9937;
	shr.u64 	%rd9939, %rd10008, 6;
	xor.b64  	%rd9940, %rd9938, %rd9939;
	shf.r.wrap.b32 	%r6970, %r6605, %r6604, 1;
	shf.r.wrap.b32 	%r6971, %r6604, %r6605, 1;
	mov.b64 	%rd9941, {%r6971, %r6970};
	shf.r.wrap.b32 	%r6972, %r6605, %r6604, 8;
	shf.r.wrap.b32 	%r6973, %r6604, %r6605, 8;
	mov.b64 	%rd9942, {%r6973, %r6972};
	xor.b64  	%rd9943, %rd9941, %rd9942;
	shr.u64 	%rd9944, %rd10018, 7;
	xor.b64  	%rd9945, %rd9943, %rd9944;
	add.s64 	%rd9946, %rd9940, %rd10016;
	add.s64 	%rd9947, %rd9946, %rd10005;
	add.s64 	%rd10016, %rd9947, %rd9945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6974,%dummy}, %rd10023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6975}, %rd10023;
	}
	shf.r.wrap.b32 	%r6976, %r6975, %r6974, 14;
	shf.r.wrap.b32 	%r6977, %r6974, %r6975, 14;
	mov.b64 	%rd9948, {%r6977, %r6976};
	shf.r.wrap.b32 	%r6978, %r6975, %r6974, 18;
	shf.r.wrap.b32 	%r6979, %r6974, %r6975, 18;
	mov.b64 	%rd9949, {%r6979, %r6978};
	xor.b64  	%rd9950, %rd9948, %rd9949;
	shf.l.wrap.b32 	%r6980, %r6974, %r6975, 23;
	shf.l.wrap.b32 	%r6981, %r6975, %r6974, 23;
	mov.b64 	%rd9951, {%r6981, %r6980};
	xor.b64  	%rd9952, %rd9950, %rd9951;
	xor.b64  	%rd9953, %rd10022, %rd10021;
	and.b64  	%rd9954, %rd10023, %rd9953;
	xor.b64  	%rd9955, %rd9954, %rd10021;
	ld.const.u64 	%rd9956, [%rd10004+376];
	add.s64 	%rd9957, %rd9956, %rd9819;
	add.s64 	%rd9958, %rd9957, %rd10016;
	add.s64 	%rd9959, %rd9958, %rd9955;
	add.s64 	%rd9960, %rd9959, %rd9952;
	add.s64 	%rd10024, %rd9960, %rd9830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd10026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6983}, %rd10026;
	}
	shf.r.wrap.b32 	%r6984, %r6983, %r6982, 28;
	shf.r.wrap.b32 	%r6985, %r6982, %r6983, 28;
	mov.b64 	%rd9961, {%r6985, %r6984};
	shf.l.wrap.b32 	%r6986, %r6982, %r6983, 30;
	shf.l.wrap.b32 	%r6987, %r6983, %r6982, 30;
	mov.b64 	%rd9962, {%r6987, %r6986};
	xor.b64  	%rd9963, %rd9961, %rd9962;
	shf.l.wrap.b32 	%r6988, %r6982, %r6983, 25;
	shf.l.wrap.b32 	%r6989, %r6983, %r6982, 25;
	mov.b64 	%rd9964, {%r6989, %r6988};
	xor.b64  	%rd9965, %rd9963, %rd9964;
	and.b64  	%rd9966, %rd10026, %rd10027;
	or.b64  	%rd9967, %rd10026, %rd10027;
	and.b64  	%rd9968, %rd9967, %rd10028;
	or.b64  	%rd9969, %rd9968, %rd9966;
	add.s64 	%rd9970, %rd9969, %rd9965;
	add.s64 	%rd10025, %rd9970, %rd9960;
	add.s64 	%rd10004, %rd10004, 128;
	add.s32 	%r7003, %r7003, 16;
	setp.lt.u32 	%p11, %r7003, 65;
	@%p11 bra 	$L__BB4_16;

	mov.b32 	%r6995, %envreg3;
	mov.u32 	%r6994, %tid.x;
	add.s32 	%r6993, %r6994, %r6995;
	mov.u32 	%r6992, %ctaid.x;
	mov.u32 	%r6991, %ntid.x;
	mad.lo.s32 	%r6990, %r6991, %r6992, %r6993;
	cvt.u64.u32 	%rd9982, %r6990;
	ld.param.u64 	%rd9981, [pbkdf2_sha512_kernel_param_2];
	mul.lo.s64 	%rd9971, %rd9982, 264;
	add.s64 	%rd9972, %rd9981, %rd9971;
	st.global.u64 	[%rd9972], %rd17;
	st.global.u64 	[%rd9972+64], %rd36;
	add.s64 	%rd9973, %rd36, %rd10025;
	st.global.u64 	[%rd9972+128], %rd9973;
	st.global.u64 	[%rd9972+192], %rd9973;
	st.global.u64 	[%rd9972+8], %rd18;
	st.global.u64 	[%rd9972+72], %rd37;
	add.s64 	%rd9974, %rd37, %rd10026;
	st.global.u64 	[%rd9972+136], %rd9974;
	st.global.u64 	[%rd9972+200], %rd9974;
	st.global.u64 	[%rd9972+16], %rd19;
	st.global.u64 	[%rd9972+80], %rd38;
	add.s64 	%rd9975, %rd38, %rd10027;
	st.global.u64 	[%rd9972+144], %rd9975;
	st.global.u64 	[%rd9972+208], %rd9975;
	st.global.u64 	[%rd9972+24], %rd20;
	st.global.u64 	[%rd9972+88], %rd39;
	add.s64 	%rd9976, %rd39, %rd10028;
	st.global.u64 	[%rd9972+152], %rd9976;
	st.global.u64 	[%rd9972+216], %rd9976;
	st.global.u64 	[%rd9972+32], %rd21;
	st.global.u64 	[%rd9972+96], %rd40;
	add.s64 	%rd9977, %rd40, %rd10024;
	st.global.u64 	[%rd9972+160], %rd9977;
	st.global.u64 	[%rd9972+224], %rd9977;
	st.global.u64 	[%rd9972+40], %rd22;
	st.global.u64 	[%rd9972+104], %rd41;
	add.s64 	%rd9978, %rd41, %rd10023;
	st.global.u64 	[%rd9972+168], %rd9978;
	st.global.u64 	[%rd9972+232], %rd9978;
	st.global.u64 	[%rd9972+48], %rd23;
	st.global.u64 	[%rd9972+112], %rd42;
	add.s64 	%rd9979, %rd42, %rd10022;
	st.global.u64 	[%rd9972+176], %rd9979;
	st.global.u64 	[%rd9972+240], %rd9979;
	st.global.u64 	[%rd9972+56], %rd24;
	st.global.u64 	[%rd9972+120], %rd73;
	add.s64 	%rd9980, %rd73, %rd10021;
	st.global.u64 	[%rd9972+184], %rd9980;
	st.global.u64 	[%rd9972+248], %rd9980;
	ret;

}
	// .globl	enpass5_final
.entry enpass5_final(
	.param .u64 .ptr .global .align 8 enpass5_final_param_0,
	.param .u64 .ptr .global .align 4 enpass5_final_param_1,
	.param .u64 .ptr .global .align 4 enpass5_final_param_2
)
{
	.local .align 16 .b8 	__local_depot5[976];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<36>;
	.reg .b32 	%r<7119>;
	.reg .b64 	%rd<75>;


	mov.u64 	%SPL, __local_depot5;
	ld.param.u64 	%rd13, [enpass5_final_param_0];
	ld.param.u64 	%rd14, [enpass5_final_param_1];
	ld.param.u64 	%rd15, [enpass5_final_param_2];
	mov.u32 	%r107, %ctaid.x;
	mov.u32 	%r108, %ntid.x;
	mov.u32 	%r109, %tid.x;
	mov.b32 	%r110, %envreg3;
	add.s32 	%r111, %r109, %r110;
	mad.lo.s32 	%r112, %r108, %r107, %r111;
	cvt.u64.u32 	%rd1, %r112;
	mul.wide.u32 	%rd16, %r112, 88;
	add.s64 	%rd17, %rd15, %rd16;
	add.s64 	%rd2, %rd17, 84;
	ld.global.u32 	%r113, [%rd17+84];
	add.s32 	%r1, %r113, 1;
	st.global.u32 	[%rd17+84], %r1;
	mul.lo.s32 	%r114, %r113, 5;
	ld.global.u32 	%r115, [%rd17+60];
	shf.l.wrap.b32 	%r116, %r115, %r115, 16;
	shl.b32 	%r117, %r116, 8;
	and.b32  	%r118, %r117, -16711936;
	shr.u32 	%r119, %r116, 8;
	and.b32  	%r120, %r119, 16711935;
	or.b32  	%r121, %r118, %r120;
	mul.wide.u32 	%rd18, %r112, 44;
	add.s64 	%rd19, %rd14, %rd18;
	add.s64 	%rd20, %rd19, 4;
	mul.wide.u32 	%rd21, %r114, 4;
	add.s64 	%rd22, %rd20, %rd21;
	st.global.u32 	[%rd22], %r121;
	ld.global.u32 	%r122, [%rd17+64];
	shf.l.wrap.b32 	%r123, %r122, %r122, 16;
	shl.b32 	%r124, %r123, 8;
	and.b32  	%r125, %r124, -16711936;
	shr.u32 	%r126, %r123, 8;
	and.b32  	%r127, %r126, 16711935;
	or.b32  	%r128, %r125, %r127;
	shl.b32 	%r129, %r113, 2;
	add.s32 	%r130, %r1, %r129;
	mul.wide.u32 	%rd23, %r130, 4;
	add.s64 	%rd24, %rd20, %rd23;
	st.global.u32 	[%rd24], %r128;
	ld.global.u32 	%r131, [%rd17+68];
	shf.l.wrap.b32 	%r132, %r131, %r131, 16;
	shl.b32 	%r133, %r132, 8;
	and.b32  	%r134, %r133, -16711936;
	shr.u32 	%r135, %r132, 8;
	and.b32  	%r136, %r135, 16711935;
	or.b32  	%r137, %r134, %r136;
	add.s32 	%r138, %r114, 2;
	mul.wide.u32 	%rd25, %r138, 4;
	add.s64 	%rd26, %rd20, %rd25;
	st.global.u32 	[%rd26], %r137;
	ld.global.u32 	%r139, [%rd17+72];
	shf.l.wrap.b32 	%r140, %r139, %r139, 16;
	shl.b32 	%r141, %r140, 8;
	and.b32  	%r142, %r141, -16711936;
	shr.u32 	%r143, %r140, 8;
	and.b32  	%r144, %r143, 16711935;
	or.b32  	%r145, %r142, %r144;
	add.s32 	%r146, %r114, 3;
	mul.wide.u32 	%rd27, %r146, 4;
	add.s64 	%rd28, %rd20, %rd27;
	st.global.u32 	[%rd28], %r145;
	ld.global.u32 	%r147, [%rd17+76];
	shf.l.wrap.b32 	%r148, %r147, %r147, 16;
	shl.b32 	%r149, %r148, 8;
	and.b32  	%r150, %r149, -16711936;
	shr.u32 	%r151, %r148, 8;
	and.b32  	%r152, %r151, 16711935;
	or.b32  	%r153, %r150, %r152;
	add.s32 	%r154, %r114, 4;
	mul.wide.u32 	%rd29, %r154, 4;
	add.s64 	%rd30, %rd20, %rd29;
	st.global.u32 	[%rd30], %r153;
	add.u64 	%rd3, %SPL, 0;
	add.u64 	%rd74, %SPL, 240;
	mad.lo.s32 	%r155, %r113, 20, 20;
	setp.lt.u32 	%p1, %r155, 32;
	@%p1 bra 	$L__BB5_13;
	bra.uni 	$L__BB5_1;

$L__BB5_13:
	ld.global.u32 	%r53, [%rd13];
	ld.global.u32 	%r7103, [%rd2+-64];
	ld.global.u32 	%r7102, [%rd2+-60];
	ld.global.u32 	%r7101, [%rd2+-56];
	ld.global.u32 	%r7100, [%rd2+-52];
	ld.global.u32 	%r7099, [%rd2+-48];
	cvt.u16.u32 	%rs27, %r1;
	add.s16 	%rs1, %rs27, 1;
	setp.lt.u32 	%p15, %r53, 64;
	@%p15 bra 	$L__BB5_16;
	bra.uni 	$L__BB5_14;

$L__BB5_16:
	mov.u32 	%r7110, 0;
	mov.u32 	%r7105, %r53;
	bra.uni 	$L__BB5_17;

$L__BB5_1:
	mul.lo.s64 	%rd33, %rd1, 44;
	add.s64 	%rd34, %rd14, %rd33;
	add.s64 	%rd7, %rd34, 4;
	ld.global.u32 	%r7081, [%rd34+32];
	ld.global.v2.u32 	{%r159, %r160}, [%rd13+192];
	mov.u32 	%r7077, 0;
	ld.global.u32 	%r161, [%rd34+16];
	ld.global.u32 	%r162, [%rd34+12];
	ld.global.u32 	%r163, [%rd34+8];
	ld.global.u32 	%r164, [%rd34+4];
	ld.global.u32 	%r165, [%rd34+28];
	ld.global.u32 	%r166, [%rd34+24];
	ld.global.u32 	%r167, [%rd34+20];
	st.local.v4.u32 	[%rd3], {%r164, %r163, %r162, %r161};
	st.local.v4.u32 	[%rd3+16], {%r167, %r166, %r165, %r7081};
	mov.u64 	%rd73, %rd3;
	mov.u32 	%r7079, %r7077;
	mov.u32 	%r7080, %r7077;

$L__BB5_2:
	setp.eq.s32 	%p2, %r7080, 0;
	@%p2 bra 	$L__BB5_5;

	setp.ne.s32 	%p3, %r7080, 4;
	@%p3 bra 	$L__BB5_6;

	and.b32  	%r168, %r7081, 1431655765;
	shl.b32 	%r169, %r7081, 1;
	and.b32  	%r170, %r169, -1431655766;
	or.b32  	%r171, %r170, %r168;
	and.b32  	%r172, %r7081, -1431655766;
	shr.u32 	%r173, %r172, 1;
	or.b32  	%r174, %r173, %r172;
	and.b32  	%r175, %r171, 858993459;
	shl.b32 	%r176, %r171, 2;
	and.b32  	%r177, %r176, -858993460;
	or.b32  	%r178, %r177, %r175;
	and.b32  	%r179, %r171, -858993460;
	shr.u32 	%r180, %r179, 2;
	or.b32  	%r181, %r180, %r179;
	and.b32  	%r182, %r174, 858993459;
	shl.b32 	%r183, %r174, 2;
	and.b32  	%r184, %r183, -858993460;
	or.b32  	%r185, %r184, %r182;
	and.b32  	%r186, %r174, -858993460;
	shr.u32 	%r187, %r186, 2;
	or.b32  	%r188, %r187, %r186;
	and.b32  	%r189, %r178, 252645135;
	shl.b32 	%r190, %r178, 4;
	and.b32  	%r191, %r190, -252645136;
	or.b32  	%r192, %r191, %r189;
	and.b32  	%r193, %r178, -252645136;
	shr.u32 	%r194, %r193, 4;
	or.b32  	%r195, %r194, %r193;
	and.b32  	%r196, %r185, 252645135;
	shl.b32 	%r197, %r185, 4;
	and.b32  	%r198, %r197, -252645136;
	or.b32  	%r199, %r198, %r196;
	and.b32  	%r200, %r185, -252645136;
	shr.u32 	%r201, %r200, 4;
	or.b32  	%r202, %r201, %r200;
	and.b32  	%r203, %r181, 252645135;
	shl.b32 	%r204, %r181, 4;
	and.b32  	%r205, %r204, -252645136;
	or.b32  	%r206, %r205, %r203;
	and.b32  	%r207, %r181, -252645136;
	shr.u32 	%r208, %r207, 4;
	or.b32  	%r209, %r208, %r207;
	and.b32  	%r210, %r188, 252645135;
	shl.b32 	%r211, %r188, 4;
	and.b32  	%r212, %r211, -252645136;
	or.b32  	%r213, %r212, %r210;
	and.b32  	%r214, %r188, -252645136;
	shr.u32 	%r215, %r214, 4;
	or.b32  	%r216, %r215, %r214;
	xor.b32  	%r217, %r206, %r195;
	xor.b32  	%r218, %r199, %r216;
	xor.b32  	%r219, %r195, %r216;
	xor.b32  	%r220, %r206, %r216;
	xor.b32  	%r221, %r202, %r209;
	xor.b32  	%r222, %r192, %r221;
	xor.b32  	%r223, %r222, %r195;
	xor.b32  	%r224, %r218, %r217;
	xor.b32  	%r225, %r222, %r216;
	xor.b32  	%r226, %r222, %r199;
	xor.b32  	%r227, %r226, %r220;
	xor.b32  	%r228, %r224, %r213;
	xor.b32  	%r229, %r228, %r206;
	xor.b32  	%r230, %r228, %r209;
	xor.b32  	%r231, %r229, %r192;
	xor.b32  	%r232, %r229, %r221;
	xor.b32  	%r233, %r230, %r219;
	xor.b32  	%r234, %r233, %r192;
	xor.b32  	%r235, %r232, %r233;
	xor.b32  	%r236, %r233, %r221;
	and.b32  	%r237, %r229, %r224;
	and.b32  	%r238, %r231, %r227;
	and.b32  	%r239, %r223, %r192;
	and.b32  	%r240, %r236, %r218;
	and.b32  	%r241, %r226, %r222;
	and.b32  	%r242, %r234, %r225;
	and.b32  	%r243, %r233, %r219;
	and.b32  	%r244, %r235, %r217;
	xor.b32  	%r245, %r244, %r243;
	and.b32  	%r246, %r232, %r220;
	xor.b32  	%r247, %r246, %r243;
	xor.b32  	%r248, %r237, %r230;
	xor.b32  	%r249, %r248, %r238;
	xor.b32  	%r250, %r249, %r245;
	xor.b32  	%r251, %r239, %r220;
	xor.b32  	%r252, %r251, %r232;
	xor.b32  	%r253, %r252, %r237;
	xor.b32  	%r254, %r253, %r247;
	xor.b32  	%r255, %r241, %r218;
	xor.b32  	%r256, %r255, %r236;
	xor.b32  	%r257, %r256, %r240;
	xor.b32  	%r258, %r257, %r245;
	xor.b32  	%r259, %r236, %r216;
	xor.b32  	%r260, %r259, %r240;
	xor.b32  	%r261, %r260, %r242;
	xor.b32  	%r262, %r261, %r247;
	xor.b32  	%r263, %r250, %r254;
	and.b32  	%r264, %r250, %r258;
	xor.b32  	%r265, %r264, %r262;
	and.b32  	%r266, %r265, %r263;
	xor.b32  	%r267, %r266, %r254;
	xor.b32  	%r268, %r258, %r262;
	xor.b32  	%r269, %r264, %r254;
	and.b32  	%r270, %r269, %r268;
	xor.b32  	%r271, %r270, %r262;
	xor.b32  	%r272, %r271, %r258;
	xor.b32  	%r273, %r270, %r264;
	and.b32  	%r274, %r273, %r262;
	xor.b32  	%r275, %r272, %r274;
	xor.b32  	%r276, %r274, %r265;
	and.b32  	%r277, %r276, %r267;
	xor.b32  	%r278, %r277, %r263;
	xor.b32  	%r279, %r278, %r275;
	xor.b32  	%r280, %r267, %r271;
	xor.b32  	%r281, %r278, %r267;
	xor.b32  	%r282, %r274, %r258;
	xor.b32  	%r283, %r279, %r280;
	and.b32  	%r284, %r282, %r229;
	and.b32  	%r285, %r275, %r231;
	and.b32  	%r286, %r271, %r192;
	and.b32  	%r287, %r281, %r236;
	and.b32  	%r288, %r278, %r222;
	and.b32  	%r289, %r267, %r234;
	and.b32  	%r290, %r280, %r233;
	and.b32  	%r291, %r283, %r235;
	and.b32  	%r292, %r279, %r232;
	and.b32  	%r293, %r282, %r224;
	and.b32  	%r294, %r275, %r227;
	and.b32  	%r295, %r271, %r223;
	and.b32  	%r296, %r281, %r218;
	and.b32  	%r297, %r278, %r226;
	and.b32  	%r298, %r267, %r225;
	and.b32  	%r299, %r280, %r219;
	and.b32  	%r300, %r283, %r217;
	and.b32  	%r301, %r279, %r220;
	xor.b32  	%r302, %r300, %r299;
	xor.b32  	%r303, %r294, %r295;
	xor.b32  	%r304, %r297, %r289;
	xor.b32  	%r305, %r293, %r294;
	xor.b32  	%r306, %r296, %r286;
	xor.b32  	%r307, %r286, %r289;
	xor.b32  	%r308, %r291, %r292;
	xor.b32  	%r309, %r287, %r284;
	xor.b32  	%r310, %r306, %r309;
	xor.b32  	%r311, %r302, %r288;
	xor.b32  	%r312, %r287, %r290;
	xor.b32  	%r313, %r312, %r291;
	xor.b32  	%r314, %r310, %r298;
	xor.b32  	%r315, %r308, %r311;
	xor.b32  	%r316, %r305, %r311;
	xor.b32  	%r317, %r313, %r288;
	xor.b32  	%r318, %r314, %r315;
	xor.b32  	%r319, %r316, %r285;
	xor.b32  	%r320, %r316, %r313;
	xor.b32  	%r321, %r304, 16843009;
	xor.b32  	%r322, %r296, %r321;
	xor.b32  	%r323, %r322, %r315;
	xor.b32  	%r324, %r310, %r321;
	xor.b32  	%r325, %r324, %r302;
	xor.b32  	%r326, %r319, %r309;
	xor.b32  	%r327, %r307, %r319;
	xor.b32  	%r328, %r303, %r318;
	xor.b32  	%r329, %r326, %r317;
	not.b32 	%r330, %r329;
	xor.b32  	%r331, %r300, %r301;
	xor.b32  	%r332, %r331, %r317;
	xor.b32  	%r333, %r332, %r318;
	and.b32  	%r334, %r325, 16843009;
	shl.b32 	%r335, %r323, 1;
	and.b32  	%r336, %r335, 33686018;
	or.b32  	%r337, %r336, %r334;
	and.b32  	%r338, %r328, 16843009;
	shl.b32 	%r339, %r327, 1;
	and.b32  	%r340, %r339, 33686018;
	or.b32  	%r341, %r340, %r338;
	and.b32  	%r342, %r326, 16843009;
	shl.b32 	%r343, %r333, 1;
	not.b32 	%r344, %r343;
	and.b32  	%r345, %r344, 33686018;
	or.b32  	%r346, %r345, %r342;
	and.b32  	%r347, %r330, 16843009;
	shl.b32 	%r348, %r320, 1;
	and.b32  	%r349, %r348, 33686018;
	or.b32  	%r350, %r349, %r347;
	shl.b32 	%r351, %r341, 2;
	or.b32  	%r352, %r351, %r337;
	shl.b32 	%r353, %r350, 2;
	or.b32  	%r354, %r353, %r346;
	shl.b32 	%r355, %r354, 4;
	or.b32  	%r7081, %r355, %r352;
	bra.uni 	$L__BB5_6;

$L__BB5_5:
	shf.l.wrap.b32 	%r356, %r7081, %r7081, 24;
	and.b32  	%r357, %r356, 1431655765;
	shl.b32 	%r358, %r356, 1;
	and.b32  	%r359, %r358, -1431655766;
	or.b32  	%r360, %r359, %r357;
	and.b32  	%r361, %r356, -1431655766;
	shr.u32 	%r362, %r361, 1;
	or.b32  	%r363, %r362, %r361;
	and.b32  	%r364, %r360, 858993459;
	shl.b32 	%r365, %r360, 2;
	and.b32  	%r366, %r365, -858993460;
	or.b32  	%r367, %r366, %r364;
	and.b32  	%r368, %r360, -858993460;
	shr.u32 	%r369, %r368, 2;
	or.b32  	%r370, %r369, %r368;
	and.b32  	%r371, %r363, 858993459;
	shl.b32 	%r372, %r363, 2;
	and.b32  	%r373, %r372, -858993460;
	or.b32  	%r374, %r373, %r371;
	and.b32  	%r375, %r363, -858993460;
	shr.u32 	%r376, %r375, 2;
	or.b32  	%r377, %r376, %r375;
	and.b32  	%r378, %r367, 252645135;
	shl.b32 	%r379, %r367, 4;
	and.b32  	%r380, %r379, -252645136;
	or.b32  	%r381, %r380, %r378;
	and.b32  	%r382, %r367, -252645136;
	shr.u32 	%r383, %r382, 4;
	or.b32  	%r384, %r383, %r382;
	and.b32  	%r385, %r374, 252645135;
	shl.b32 	%r386, %r374, 4;
	and.b32  	%r387, %r386, -252645136;
	or.b32  	%r388, %r387, %r385;
	and.b32  	%r389, %r374, -252645136;
	shr.u32 	%r390, %r389, 4;
	or.b32  	%r391, %r390, %r389;
	and.b32  	%r392, %r370, 252645135;
	shl.b32 	%r393, %r370, 4;
	and.b32  	%r394, %r393, -252645136;
	or.b32  	%r395, %r394, %r392;
	and.b32  	%r396, %r370, -252645136;
	shr.u32 	%r397, %r396, 4;
	or.b32  	%r398, %r397, %r396;
	and.b32  	%r399, %r377, 252645135;
	shl.b32 	%r400, %r377, 4;
	and.b32  	%r401, %r400, -252645136;
	or.b32  	%r402, %r401, %r399;
	and.b32  	%r403, %r377, -252645136;
	shr.u32 	%r404, %r403, 4;
	or.b32  	%r405, %r404, %r403;
	xor.b32  	%r406, %r395, %r384;
	xor.b32  	%r407, %r388, %r405;
	xor.b32  	%r408, %r384, %r405;
	xor.b32  	%r409, %r395, %r405;
	xor.b32  	%r410, %r391, %r398;
	xor.b32  	%r411, %r381, %r410;
	xor.b32  	%r412, %r411, %r384;
	xor.b32  	%r413, %r407, %r406;
	xor.b32  	%r414, %r411, %r405;
	xor.b32  	%r415, %r411, %r388;
	xor.b32  	%r416, %r415, %r409;
	xor.b32  	%r417, %r413, %r402;
	xor.b32  	%r418, %r417, %r395;
	xor.b32  	%r419, %r417, %r398;
	xor.b32  	%r420, %r418, %r381;
	xor.b32  	%r421, %r418, %r410;
	xor.b32  	%r422, %r419, %r408;
	xor.b32  	%r423, %r422, %r381;
	xor.b32  	%r424, %r421, %r422;
	xor.b32  	%r425, %r422, %r410;
	and.b32  	%r426, %r418, %r413;
	and.b32  	%r427, %r420, %r416;
	and.b32  	%r428, %r412, %r381;
	and.b32  	%r429, %r425, %r407;
	and.b32  	%r430, %r415, %r411;
	and.b32  	%r431, %r423, %r414;
	and.b32  	%r432, %r422, %r408;
	and.b32  	%r433, %r424, %r406;
	xor.b32  	%r434, %r433, %r432;
	and.b32  	%r435, %r421, %r409;
	xor.b32  	%r436, %r435, %r432;
	xor.b32  	%r437, %r426, %r419;
	xor.b32  	%r438, %r437, %r427;
	xor.b32  	%r439, %r438, %r434;
	xor.b32  	%r440, %r428, %r409;
	xor.b32  	%r441, %r440, %r421;
	xor.b32  	%r442, %r441, %r426;
	xor.b32  	%r443, %r442, %r436;
	xor.b32  	%r444, %r430, %r407;
	xor.b32  	%r445, %r444, %r425;
	xor.b32  	%r446, %r445, %r429;
	xor.b32  	%r447, %r446, %r434;
	xor.b32  	%r448, %r425, %r405;
	xor.b32  	%r449, %r448, %r429;
	xor.b32  	%r450, %r449, %r431;
	xor.b32  	%r451, %r450, %r436;
	xor.b32  	%r452, %r439, %r443;
	and.b32  	%r453, %r439, %r447;
	xor.b32  	%r454, %r453, %r451;
	and.b32  	%r455, %r454, %r452;
	xor.b32  	%r456, %r455, %r443;
	xor.b32  	%r457, %r447, %r451;
	xor.b32  	%r458, %r453, %r443;
	and.b32  	%r459, %r458, %r457;
	xor.b32  	%r460, %r459, %r451;
	xor.b32  	%r461, %r460, %r447;
	xor.b32  	%r462, %r459, %r453;
	and.b32  	%r463, %r462, %r451;
	xor.b32  	%r464, %r461, %r463;
	xor.b32  	%r465, %r463, %r454;
	and.b32  	%r466, %r465, %r456;
	xor.b32  	%r467, %r466, %r452;
	xor.b32  	%r468, %r467, %r464;
	xor.b32  	%r469, %r456, %r460;
	xor.b32  	%r470, %r467, %r456;
	xor.b32  	%r471, %r463, %r447;
	xor.b32  	%r472, %r468, %r469;
	and.b32  	%r473, %r471, %r418;
	and.b32  	%r474, %r464, %r420;
	and.b32  	%r475, %r460, %r381;
	and.b32  	%r476, %r470, %r425;
	and.b32  	%r477, %r467, %r411;
	and.b32  	%r478, %r456, %r423;
	and.b32  	%r479, %r469, %r422;
	and.b32  	%r480, %r472, %r424;
	and.b32  	%r481, %r468, %r421;
	and.b32  	%r482, %r471, %r413;
	and.b32  	%r483, %r464, %r416;
	and.b32  	%r484, %r460, %r412;
	and.b32  	%r485, %r470, %r407;
	and.b32  	%r486, %r467, %r415;
	and.b32  	%r487, %r456, %r414;
	and.b32  	%r488, %r469, %r408;
	and.b32  	%r489, %r472, %r406;
	and.b32  	%r490, %r468, %r409;
	xor.b32  	%r491, %r489, %r488;
	xor.b32  	%r492, %r483, %r484;
	xor.b32  	%r493, %r486, %r478;
	xor.b32  	%r494, %r482, %r483;
	xor.b32  	%r495, %r485, %r475;
	xor.b32  	%r496, %r475, %r478;
	xor.b32  	%r497, %r480, %r481;
	xor.b32  	%r498, %r476, %r473;
	xor.b32  	%r499, %r495, %r498;
	xor.b32  	%r500, %r491, %r477;
	xor.b32  	%r501, %r476, %r479;
	xor.b32  	%r502, %r501, %r480;
	xor.b32  	%r503, %r499, %r487;
	xor.b32  	%r504, %r497, %r500;
	xor.b32  	%r505, %r494, %r500;
	xor.b32  	%r506, %r502, %r477;
	xor.b32  	%r507, %r503, %r504;
	xor.b32  	%r508, %r505, %r474;
	xor.b32  	%r509, %r505, %r502;
	xor.b32  	%r510, %r493, 16843009;
	xor.b32  	%r511, %r485, %r510;
	xor.b32  	%r512, %r511, %r504;
	xor.b32  	%r513, %r499, %r510;
	xor.b32  	%r514, %r513, %r491;
	xor.b32  	%r515, %r508, %r498;
	xor.b32  	%r516, %r496, %r508;
	xor.b32  	%r517, %r492, %r507;
	xor.b32  	%r518, %r515, %r506;
	not.b32 	%r519, %r518;
	xor.b32  	%r520, %r489, %r490;
	xor.b32  	%r521, %r520, %r506;
	xor.b32  	%r522, %r521, %r507;
	and.b32  	%r523, %r514, 16843009;
	shl.b32 	%r524, %r512, 1;
	and.b32  	%r525, %r524, 33686018;
	or.b32  	%r526, %r525, %r523;
	and.b32  	%r527, %r517, 16843009;
	shl.b32 	%r528, %r516, 1;
	and.b32  	%r529, %r528, 33686018;
	or.b32  	%r530, %r529, %r527;
	and.b32  	%r531, %r515, 16843009;
	shl.b32 	%r532, %r522, 1;
	not.b32 	%r533, %r532;
	and.b32  	%r534, %r533, 33686018;
	or.b32  	%r535, %r534, %r531;
	and.b32  	%r536, %r519, 16843009;
	shl.b32 	%r537, %r509, 1;
	and.b32  	%r538, %r537, 33686018;
	or.b32  	%r539, %r538, %r536;
	shl.b32 	%r540, %r530, 2;
	or.b32  	%r541, %r540, %r526;
	shl.b32 	%r542, %r539, 2;
	or.b32  	%r543, %r542, %r535;
	shl.b32 	%r544, %r543, 4;
	or.b32  	%r545, %r544, %r541;
	cvt.s64.s32 	%rd35, %r7079;
	mov.u64 	%rd36, aes_keysched_base_$_Rcon;
	add.s64 	%rd37, %rd36, %rd35;
	ld.const.u8 	%r546, [%rd37];
	xor.b32  	%r7081, %r545, %r546;

$L__BB5_6:
	ld.local.u32 	%r547, [%rd73];
	xor.b32  	%r7081, %r547, %r7081;
	st.local.u32 	[%rd73+32], %r7081;
	add.s32 	%r548, %r7080, 1;
	setp.eq.s32 	%p4, %r548, 8;
	selp.b32 	%r7080, 0, %r548, %p4;
	selp.u32 	%r549, 1, 0, %p4;
	add.s32 	%r7079, %r7079, %r549;
	add.s64 	%rd73, %rd73, 4;
	add.s32 	%r7077, %r7077, 1;
	setp.ne.s32 	%p5, %r7077, 52;
	@%p5 bra 	$L__BB5_2;

	ld.local.v4.u32 	{%r551, %r552, %r553, %r554}, [%rd3];
	mov.u32 	%r7082, 0;
	and.b32  	%r559, %r551, 1431655765;
	shl.b32 	%r560, %r551, 1;
	and.b32  	%r561, %r560, -1431655766;
	or.b32  	%r562, %r561, %r559;
	and.b32  	%r563, %r551, -1431655766;
	shr.u32 	%r564, %r563, 1;
	or.b32  	%r565, %r564, %r563;
	and.b32  	%r566, %r552, 1431655765;
	shl.b32 	%r567, %r552, 1;
	and.b32  	%r568, %r567, -1431655766;
	or.b32  	%r569, %r568, %r566;
	and.b32  	%r570, %r552, -1431655766;
	shr.u32 	%r571, %r570, 1;
	or.b32  	%r572, %r571, %r570;
	and.b32  	%r573, %r553, 1431655765;
	shl.b32 	%r574, %r553, 1;
	and.b32  	%r575, %r574, -1431655766;
	or.b32  	%r576, %r575, %r573;
	and.b32  	%r577, %r553, -1431655766;
	shr.u32 	%r578, %r577, 1;
	or.b32  	%r579, %r578, %r577;
	and.b32  	%r580, %r554, 1431655765;
	shl.b32 	%r581, %r554, 1;
	and.b32  	%r582, %r581, -1431655766;
	or.b32  	%r583, %r582, %r580;
	and.b32  	%r584, %r554, -1431655766;
	shr.u32 	%r585, %r584, 1;
	or.b32  	%r586, %r585, %r584;
	and.b32  	%r587, %r562, 858993459;
	shl.b32 	%r588, %r569, 2;
	and.b32  	%r589, %r588, -858993460;
	or.b32  	%r590, %r589, %r587;
	and.b32  	%r591, %r562, -858993460;
	shr.u32 	%r592, %r591, 2;
	and.b32  	%r593, %r569, -858993460;
	or.b32  	%r594, %r592, %r593;
	and.b32  	%r595, %r565, 858993459;
	shl.b32 	%r596, %r572, 2;
	and.b32  	%r597, %r596, -858993460;
	or.b32  	%r598, %r597, %r595;
	and.b32  	%r599, %r565, -858993460;
	shr.u32 	%r600, %r599, 2;
	and.b32  	%r601, %r572, -858993460;
	or.b32  	%r602, %r600, %r601;
	and.b32  	%r603, %r576, 858993459;
	shl.b32 	%r604, %r583, 2;
	and.b32  	%r605, %r604, -858993460;
	or.b32  	%r606, %r605, %r603;
	and.b32  	%r607, %r576, -858993460;
	shr.u32 	%r608, %r607, 2;
	and.b32  	%r609, %r583, -858993460;
	or.b32  	%r610, %r608, %r609;
	and.b32  	%r611, %r579, 858993459;
	shl.b32 	%r612, %r586, 2;
	and.b32  	%r613, %r612, -858993460;
	or.b32  	%r614, %r613, %r611;
	and.b32  	%r615, %r579, -858993460;
	shr.u32 	%r616, %r615, 2;
	and.b32  	%r617, %r586, -858993460;
	or.b32  	%r618, %r616, %r617;
	and.b32  	%r619, %r590, 84215045;
	shl.b32 	%r620, %r606, 4;
	and.b32  	%r621, %r620, 1347440720;
	and.b32  	%r622, %r590, 1347440720;
	and.b32  	%r623, %r606, 1347440720;
	and.b32  	%r624, %r598, 168430090;
	shl.b32 	%r625, %r614, 4;
	and.b32  	%r626, %r625, -1600085856;
	and.b32  	%r627, %r598, -1600085856;
	and.b32  	%r628, %r614, -1600085856;
	and.b32  	%r629, %r594, 84215045;
	shl.b32 	%r630, %r610, 4;
	and.b32  	%r631, %r630, 1347440720;
	and.b32  	%r632, %r594, 1347440720;
	and.b32  	%r633, %r610, 1347440720;
	and.b32  	%r634, %r602, 168430090;
	shl.b32 	%r635, %r618, 4;
	and.b32  	%r636, %r635, -1600085856;
	and.b32  	%r637, %r602, -1600085856;
	and.b32  	%r638, %r618, -1600085856;
	or.b32  	%r639, %r624, %r619;
	or.b32  	%r16, %r639, %r621;
	or.b32  	%r640, %r16, %r626;
	st.local.u32 	[%rd74], %r640;
	or.b32  	%r641, %r634, %r629;
	or.b32  	%r17, %r641, %r631;
	or.b32  	%r642, %r17, %r636;
	st.local.u32 	[%rd74+4], %r642;
	or.b32  	%r643, %r627, %r622;
	shr.u32 	%r644, %r643, 4;
	or.b32  	%r18, %r644, %r623;
	or.b32  	%r645, %r18, %r628;
	st.local.u32 	[%rd74+8], %r645;
	or.b32  	%r646, %r637, %r632;
	shr.u32 	%r647, %r646, 4;
	or.b32  	%r19, %r647, %r633;
	or.b32  	%r648, %r19, %r638;
	st.local.u32 	[%rd74+12], %r648;
	ld.local.v4.u32 	{%r649, %r650, %r651, %r652}, [%rd3+16];
	and.b32  	%r657, %r649, 1431655765;
	shl.b32 	%r658, %r649, 1;
	and.b32  	%r659, %r658, -1431655766;
	or.b32  	%r660, %r659, %r657;
	and.b32  	%r661, %r649, -1431655766;
	shr.u32 	%r662, %r661, 1;
	or.b32  	%r663, %r662, %r661;
	and.b32  	%r664, %r650, 1431655765;
	shl.b32 	%r665, %r650, 1;
	and.b32  	%r666, %r665, -1431655766;
	or.b32  	%r667, %r666, %r664;
	and.b32  	%r668, %r650, -1431655766;
	shr.u32 	%r669, %r668, 1;
	or.b32  	%r670, %r669, %r668;
	and.b32  	%r671, %r651, 1431655765;
	shl.b32 	%r672, %r651, 1;
	and.b32  	%r673, %r672, -1431655766;
	or.b32  	%r674, %r673, %r671;
	and.b32  	%r675, %r651, -1431655766;
	shr.u32 	%r676, %r675, 1;
	or.b32  	%r677, %r676, %r675;
	and.b32  	%r678, %r652, 1431655765;
	shl.b32 	%r679, %r652, 1;
	and.b32  	%r680, %r679, -1431655766;
	or.b32  	%r681, %r680, %r678;
	and.b32  	%r682, %r652, -1431655766;
	shr.u32 	%r683, %r682, 1;
	or.b32  	%r684, %r683, %r682;
	and.b32  	%r685, %r660, 858993459;
	shl.b32 	%r686, %r667, 2;
	and.b32  	%r687, %r686, -858993460;
	or.b32  	%r688, %r687, %r685;
	and.b32  	%r689, %r660, -858993460;
	shr.u32 	%r690, %r689, 2;
	and.b32  	%r691, %r667, -858993460;
	or.b32  	%r692, %r690, %r691;
	and.b32  	%r693, %r663, 858993459;
	shl.b32 	%r694, %r670, 2;
	and.b32  	%r695, %r694, -858993460;
	or.b32  	%r696, %r695, %r693;
	and.b32  	%r697, %r663, -858993460;
	shr.u32 	%r698, %r697, 2;
	and.b32  	%r699, %r670, -858993460;
	or.b32  	%r700, %r698, %r699;
	and.b32  	%r701, %r674, 858993459;
	shl.b32 	%r702, %r681, 2;
	and.b32  	%r703, %r702, -858993460;
	or.b32  	%r704, %r703, %r701;
	and.b32  	%r705, %r674, -858993460;
	shr.u32 	%r706, %r705, 2;
	and.b32  	%r707, %r681, -858993460;
	or.b32  	%r708, %r706, %r707;
	and.b32  	%r709, %r677, 858993459;
	shl.b32 	%r710, %r684, 2;
	and.b32  	%r711, %r710, -858993460;
	or.b32  	%r712, %r711, %r709;
	and.b32  	%r713, %r677, -858993460;
	shr.u32 	%r714, %r713, 2;
	and.b32  	%r715, %r684, -858993460;
	or.b32  	%r716, %r714, %r715;
	and.b32  	%r717, %r688, 84215045;
	shl.b32 	%r718, %r704, 4;
	and.b32  	%r719, %r718, 1347440720;
	and.b32  	%r720, %r688, 1347440720;
	and.b32  	%r721, %r704, 1347440720;
	and.b32  	%r722, %r696, 168430090;
	shl.b32 	%r723, %r712, 4;
	and.b32  	%r724, %r723, -1600085856;
	and.b32  	%r725, %r696, -1600085856;
	and.b32  	%r726, %r712, -1600085856;
	and.b32  	%r727, %r692, 84215045;
	shl.b32 	%r728, %r708, 4;
	and.b32  	%r729, %r728, 1347440720;
	and.b32  	%r730, %r692, 1347440720;
	and.b32  	%r731, %r708, 1347440720;
	and.b32  	%r732, %r700, 168430090;
	shl.b32 	%r733, %r716, 4;
	and.b32  	%r734, %r733, -1600085856;
	and.b32  	%r735, %r700, -1600085856;
	and.b32  	%r736, %r716, -1600085856;
	or.b32  	%r737, %r722, %r717;
	or.b32  	%r738, %r737, %r719;
	or.b32  	%r739, %r738, %r724;
	st.local.u32 	[%rd74+16], %r739;
	or.b32  	%r740, %r732, %r727;
	or.b32  	%r741, %r740, %r729;
	or.b32  	%r742, %r741, %r734;
	st.local.u32 	[%rd74+20], %r742;
	or.b32  	%r743, %r725, %r720;
	shr.u32 	%r744, %r743, 4;
	or.b32  	%r745, %r744, %r721;
	or.b32  	%r746, %r745, %r726;
	st.local.u32 	[%rd74+24], %r746;
	or.b32  	%r747, %r735, %r730;
	shr.u32 	%r748, %r747, 4;
	or.b32  	%r749, %r748, %r731;
	or.b32  	%r750, %r749, %r736;
	st.local.u32 	[%rd74+28], %r750;
	ld.local.v4.u32 	{%r751, %r752, %r753, %r754}, [%rd3+32];
	and.b32  	%r759, %r751, 1431655765;
	shl.b32 	%r760, %r751, 1;
	and.b32  	%r761, %r760, -1431655766;
	or.b32  	%r762, %r761, %r759;
	and.b32  	%r763, %r751, -1431655766;
	shr.u32 	%r764, %r763, 1;
	or.b32  	%r765, %r764, %r763;
	and.b32  	%r766, %r752, 1431655765;
	shl.b32 	%r767, %r752, 1;
	and.b32  	%r768, %r767, -1431655766;
	or.b32  	%r769, %r768, %r766;
	and.b32  	%r770, %r752, -1431655766;
	shr.u32 	%r771, %r770, 1;
	or.b32  	%r772, %r771, %r770;
	and.b32  	%r773, %r753, 1431655765;
	shl.b32 	%r774, %r753, 1;
	and.b32  	%r775, %r774, -1431655766;
	or.b32  	%r776, %r775, %r773;
	and.b32  	%r777, %r753, -1431655766;
	shr.u32 	%r778, %r777, 1;
	or.b32  	%r779, %r778, %r777;
	and.b32  	%r780, %r754, 1431655765;
	shl.b32 	%r781, %r754, 1;
	and.b32  	%r782, %r781, -1431655766;
	or.b32  	%r783, %r782, %r780;
	and.b32  	%r784, %r754, -1431655766;
	shr.u32 	%r785, %r784, 1;
	or.b32  	%r786, %r785, %r784;
	and.b32  	%r787, %r762, 858993459;
	shl.b32 	%r788, %r769, 2;
	and.b32  	%r789, %r788, -858993460;
	or.b32  	%r790, %r789, %r787;
	and.b32  	%r791, %r762, -858993460;
	shr.u32 	%r792, %r791, 2;
	and.b32  	%r793, %r769, -858993460;
	or.b32  	%r794, %r792, %r793;
	and.b32  	%r795, %r765, 858993459;
	shl.b32 	%r796, %r772, 2;
	and.b32  	%r797, %r796, -858993460;
	or.b32  	%r798, %r797, %r795;
	and.b32  	%r799, %r765, -858993460;
	shr.u32 	%r800, %r799, 2;
	and.b32  	%r801, %r772, -858993460;
	or.b32  	%r802, %r800, %r801;
	and.b32  	%r803, %r776, 858993459;
	shl.b32 	%r804, %r783, 2;
	and.b32  	%r805, %r804, -858993460;
	or.b32  	%r806, %r805, %r803;
	and.b32  	%r807, %r776, -858993460;
	shr.u32 	%r808, %r807, 2;
	and.b32  	%r809, %r783, -858993460;
	or.b32  	%r810, %r808, %r809;
	and.b32  	%r811, %r779, 858993459;
	shl.b32 	%r812, %r786, 2;
	and.b32  	%r813, %r812, -858993460;
	or.b32  	%r814, %r813, %r811;
	and.b32  	%r815, %r779, -858993460;
	shr.u32 	%r816, %r815, 2;
	and.b32  	%r817, %r786, -858993460;
	or.b32  	%r818, %r816, %r817;
	and.b32  	%r819, %r790, 84215045;
	shl.b32 	%r820, %r806, 4;
	and.b32  	%r821, %r820, 1347440720;
	and.b32  	%r822, %r790, 1347440720;
	and.b32  	%r823, %r806, 1347440720;
	and.b32  	%r824, %r798, 168430090;
	shl.b32 	%r825, %r814, 4;
	and.b32  	%r826, %r825, -1600085856;
	and.b32  	%r827, %r798, -1600085856;
	and.b32  	%r828, %r814, -1600085856;
	and.b32  	%r829, %r794, 84215045;
	shl.b32 	%r830, %r810, 4;
	and.b32  	%r831, %r830, 1347440720;
	and.b32  	%r832, %r794, 1347440720;
	and.b32  	%r833, %r810, 1347440720;
	and.b32  	%r834, %r802, 168430090;
	shl.b32 	%r835, %r818, 4;
	and.b32  	%r836, %r835, -1600085856;
	and.b32  	%r837, %r802, -1600085856;
	and.b32  	%r838, %r818, -1600085856;
	or.b32  	%r839, %r824, %r819;
	or.b32  	%r840, %r839, %r821;
	or.b32  	%r841, %r840, %r826;
	st.local.u32 	[%rd74+32], %r841;
	or.b32  	%r842, %r834, %r829;
	or.b32  	%r843, %r842, %r831;
	or.b32  	%r844, %r843, %r836;
	st.local.u32 	[%rd74+36], %r844;
	or.b32  	%r845, %r827, %r822;
	shr.u32 	%r846, %r845, 4;
	or.b32  	%r847, %r846, %r823;
	or.b32  	%r848, %r847, %r828;
	st.local.u32 	[%rd74+40], %r848;
	or.b32  	%r849, %r837, %r832;
	shr.u32 	%r850, %r849, 4;
	or.b32  	%r851, %r850, %r833;
	or.b32  	%r852, %r851, %r838;
	st.local.u32 	[%rd74+44], %r852;
	ld.local.v4.u32 	{%r853, %r854, %r855, %r856}, [%rd3+48];
	and.b32  	%r861, %r853, 1431655765;
	shl.b32 	%r862, %r853, 1;
	and.b32  	%r863, %r862, -1431655766;
	or.b32  	%r864, %r863, %r861;
	and.b32  	%r865, %r853, -1431655766;
	shr.u32 	%r866, %r865, 1;
	or.b32  	%r867, %r866, %r865;
	and.b32  	%r868, %r854, 1431655765;
	shl.b32 	%r869, %r854, 1;
	and.b32  	%r870, %r869, -1431655766;
	or.b32  	%r871, %r870, %r868;
	and.b32  	%r872, %r854, -1431655766;
	shr.u32 	%r873, %r872, 1;
	or.b32  	%r874, %r873, %r872;
	and.b32  	%r875, %r855, 1431655765;
	shl.b32 	%r876, %r855, 1;
	and.b32  	%r877, %r876, -1431655766;
	or.b32  	%r878, %r877, %r875;
	and.b32  	%r879, %r855, -1431655766;
	shr.u32 	%r880, %r879, 1;
	or.b32  	%r881, %r880, %r879;
	and.b32  	%r882, %r856, 1431655765;
	shl.b32 	%r883, %r856, 1;
	and.b32  	%r884, %r883, -1431655766;
	or.b32  	%r885, %r884, %r882;
	and.b32  	%r886, %r856, -1431655766;
	shr.u32 	%r887, %r886, 1;
	or.b32  	%r888, %r887, %r886;
	and.b32  	%r889, %r864, 858993459;
	shl.b32 	%r890, %r871, 2;
	and.b32  	%r891, %r890, -858993460;
	or.b32  	%r892, %r891, %r889;
	and.b32  	%r893, %r864, -858993460;
	shr.u32 	%r894, %r893, 2;
	and.b32  	%r895, %r871, -858993460;
	or.b32  	%r896, %r894, %r895;
	and.b32  	%r897, %r867, 858993459;
	shl.b32 	%r898, %r874, 2;
	and.b32  	%r899, %r898, -858993460;
	or.b32  	%r900, %r899, %r897;
	and.b32  	%r901, %r867, -858993460;
	shr.u32 	%r902, %r901, 2;
	and.b32  	%r903, %r874, -858993460;
	or.b32  	%r904, %r902, %r903;
	and.b32  	%r905, %r878, 858993459;
	shl.b32 	%r906, %r885, 2;
	and.b32  	%r907, %r906, -858993460;
	or.b32  	%r908, %r907, %r905;
	and.b32  	%r909, %r878, -858993460;
	shr.u32 	%r910, %r909, 2;
	and.b32  	%r911, %r885, -858993460;
	or.b32  	%r912, %r910, %r911;
	and.b32  	%r913, %r881, 858993459;
	shl.b32 	%r914, %r888, 2;
	and.b32  	%r915, %r914, -858993460;
	or.b32  	%r916, %r915, %r913;
	and.b32  	%r917, %r881, -858993460;
	shr.u32 	%r918, %r917, 2;
	and.b32  	%r919, %r888, -858993460;
	or.b32  	%r920, %r918, %r919;
	and.b32  	%r921, %r892, 84215045;
	shl.b32 	%r922, %r908, 4;
	and.b32  	%r923, %r922, 1347440720;
	and.b32  	%r924, %r892, 1347440720;
	and.b32  	%r925, %r908, 1347440720;
	and.b32  	%r926, %r900, 168430090;
	shl.b32 	%r927, %r916, 4;
	and.b32  	%r928, %r927, -1600085856;
	and.b32  	%r929, %r900, -1600085856;
	and.b32  	%r930, %r916, -1600085856;
	and.b32  	%r931, %r896, 84215045;
	shl.b32 	%r932, %r912, 4;
	and.b32  	%r933, %r932, 1347440720;
	and.b32  	%r934, %r896, 1347440720;
	and.b32  	%r935, %r912, 1347440720;
	and.b32  	%r936, %r904, 168430090;
	shl.b32 	%r937, %r920, 4;
	and.b32  	%r938, %r937, -1600085856;
	and.b32  	%r939, %r904, -1600085856;
	and.b32  	%r940, %r920, -1600085856;
	or.b32  	%r941, %r926, %r921;
	or.b32  	%r942, %r941, %r923;
	or.b32  	%r943, %r942, %r928;
	st.local.u32 	[%rd74+48], %r943;
	or.b32  	%r944, %r936, %r931;
	or.b32  	%r945, %r944, %r933;
	or.b32  	%r946, %r945, %r938;
	st.local.u32 	[%rd74+52], %r946;
	or.b32  	%r947, %r929, %r924;
	shr.u32 	%r948, %r947, 4;
	or.b32  	%r949, %r948, %r925;
	or.b32  	%r950, %r949, %r930;
	st.local.u32 	[%rd74+56], %r950;
	or.b32  	%r951, %r939, %r934;
	shr.u32 	%r952, %r951, 4;
	or.b32  	%r953, %r952, %r935;
	or.b32  	%r954, %r953, %r940;
	st.local.u32 	[%rd74+60], %r954;
	ld.local.v4.u32 	{%r955, %r956, %r957, %r958}, [%rd3+64];
	and.b32  	%r963, %r955, 1431655765;
	shl.b32 	%r964, %r955, 1;
	and.b32  	%r965, %r964, -1431655766;
	or.b32  	%r966, %r965, %r963;
	and.b32  	%r967, %r955, -1431655766;
	shr.u32 	%r968, %r967, 1;
	or.b32  	%r969, %r968, %r967;
	and.b32  	%r970, %r956, 1431655765;
	shl.b32 	%r971, %r956, 1;
	and.b32  	%r972, %r971, -1431655766;
	or.b32  	%r973, %r972, %r970;
	and.b32  	%r974, %r956, -1431655766;
	shr.u32 	%r975, %r974, 1;
	or.b32  	%r976, %r975, %r974;
	and.b32  	%r977, %r957, 1431655765;
	shl.b32 	%r978, %r957, 1;
	and.b32  	%r979, %r978, -1431655766;
	or.b32  	%r980, %r979, %r977;
	and.b32  	%r981, %r957, -1431655766;
	shr.u32 	%r982, %r981, 1;
	or.b32  	%r983, %r982, %r981;
	and.b32  	%r984, %r958, 1431655765;
	shl.b32 	%r985, %r958, 1;
	and.b32  	%r986, %r985, -1431655766;
	or.b32  	%r987, %r986, %r984;
	and.b32  	%r988, %r958, -1431655766;
	shr.u32 	%r989, %r988, 1;
	or.b32  	%r990, %r989, %r988;
	and.b32  	%r991, %r966, 858993459;
	shl.b32 	%r992, %r973, 2;
	and.b32  	%r993, %r992, -858993460;
	or.b32  	%r994, %r993, %r991;
	and.b32  	%r995, %r966, -858993460;
	shr.u32 	%r996, %r995, 2;
	and.b32  	%r997, %r973, -858993460;
	or.b32  	%r998, %r996, %r997;
	and.b32  	%r999, %r969, 858993459;
	shl.b32 	%r1000, %r976, 2;
	and.b32  	%r1001, %r1000, -858993460;
	or.b32  	%r1002, %r1001, %r999;
	and.b32  	%r1003, %r969, -858993460;
	shr.u32 	%r1004, %r1003, 2;
	and.b32  	%r1005, %r976, -858993460;
	or.b32  	%r1006, %r1004, %r1005;
	and.b32  	%r1007, %r980, 858993459;
	shl.b32 	%r1008, %r987, 2;
	and.b32  	%r1009, %r1008, -858993460;
	or.b32  	%r1010, %r1009, %r1007;
	and.b32  	%r1011, %r980, -858993460;
	shr.u32 	%r1012, %r1011, 2;
	and.b32  	%r1013, %r987, -858993460;
	or.b32  	%r1014, %r1012, %r1013;
	and.b32  	%r1015, %r983, 858993459;
	shl.b32 	%r1016, %r990, 2;
	and.b32  	%r1017, %r1016, -858993460;
	or.b32  	%r1018, %r1017, %r1015;
	and.b32  	%r1019, %r983, -858993460;
	shr.u32 	%r1020, %r1019, 2;
	and.b32  	%r1021, %r990, -858993460;
	or.b32  	%r1022, %r1020, %r1021;
	and.b32  	%r1023, %r994, 84215045;
	shl.b32 	%r1024, %r1010, 4;
	and.b32  	%r1025, %r1024, 1347440720;
	and.b32  	%r1026, %r994, 1347440720;
	and.b32  	%r1027, %r1010, 1347440720;
	and.b32  	%r1028, %r1002, 168430090;
	shl.b32 	%r1029, %r1018, 4;
	and.b32  	%r1030, %r1029, -1600085856;
	and.b32  	%r1031, %r1002, -1600085856;
	and.b32  	%r1032, %r1018, -1600085856;
	and.b32  	%r1033, %r998, 84215045;
	shl.b32 	%r1034, %r1014, 4;
	and.b32  	%r1035, %r1034, 1347440720;
	and.b32  	%r1036, %r998, 1347440720;
	and.b32  	%r1037, %r1014, 1347440720;
	and.b32  	%r1038, %r1006, 168430090;
	shl.b32 	%r1039, %r1022, 4;
	and.b32  	%r1040, %r1039, -1600085856;
	and.b32  	%r1041, %r1006, -1600085856;
	and.b32  	%r1042, %r1022, -1600085856;
	or.b32  	%r1043, %r1028, %r1023;
	or.b32  	%r1044, %r1043, %r1025;
	or.b32  	%r1045, %r1044, %r1030;
	st.local.u32 	[%rd74+64], %r1045;
	or.b32  	%r1046, %r1038, %r1033;
	or.b32  	%r1047, %r1046, %r1035;
	or.b32  	%r1048, %r1047, %r1040;
	st.local.u32 	[%rd74+68], %r1048;
	or.b32  	%r1049, %r1031, %r1026;
	shr.u32 	%r1050, %r1049, 4;
	or.b32  	%r1051, %r1050, %r1027;
	or.b32  	%r1052, %r1051, %r1032;
	st.local.u32 	[%rd74+72], %r1052;
	or.b32  	%r1053, %r1041, %r1036;
	shr.u32 	%r1054, %r1053, 4;
	or.b32  	%r1055, %r1054, %r1037;
	or.b32  	%r1056, %r1055, %r1042;
	st.local.u32 	[%rd74+76], %r1056;
	ld.local.v4.u32 	{%r1057, %r1058, %r1059, %r1060}, [%rd3+80];
	and.b32  	%r1065, %r1057, 1431655765;
	shl.b32 	%r1066, %r1057, 1;
	and.b32  	%r1067, %r1066, -1431655766;
	or.b32  	%r1068, %r1067, %r1065;
	and.b32  	%r1069, %r1057, -1431655766;
	shr.u32 	%r1070, %r1069, 1;
	or.b32  	%r1071, %r1070, %r1069;
	and.b32  	%r1072, %r1058, 1431655765;
	shl.b32 	%r1073, %r1058, 1;
	and.b32  	%r1074, %r1073, -1431655766;
	or.b32  	%r1075, %r1074, %r1072;
	and.b32  	%r1076, %r1058, -1431655766;
	shr.u32 	%r1077, %r1076, 1;
	or.b32  	%r1078, %r1077, %r1076;
	and.b32  	%r1079, %r1059, 1431655765;
	shl.b32 	%r1080, %r1059, 1;
	and.b32  	%r1081, %r1080, -1431655766;
	or.b32  	%r1082, %r1081, %r1079;
	and.b32  	%r1083, %r1059, -1431655766;
	shr.u32 	%r1084, %r1083, 1;
	or.b32  	%r1085, %r1084, %r1083;
	and.b32  	%r1086, %r1060, 1431655765;
	shl.b32 	%r1087, %r1060, 1;
	and.b32  	%r1088, %r1087, -1431655766;
	or.b32  	%r1089, %r1088, %r1086;
	and.b32  	%r1090, %r1060, -1431655766;
	shr.u32 	%r1091, %r1090, 1;
	or.b32  	%r1092, %r1091, %r1090;
	and.b32  	%r1093, %r1068, 858993459;
	shl.b32 	%r1094, %r1075, 2;
	and.b32  	%r1095, %r1094, -858993460;
	or.b32  	%r1096, %r1095, %r1093;
	and.b32  	%r1097, %r1068, -858993460;
	shr.u32 	%r1098, %r1097, 2;
	and.b32  	%r1099, %r1075, -858993460;
	or.b32  	%r1100, %r1098, %r1099;
	and.b32  	%r1101, %r1071, 858993459;
	shl.b32 	%r1102, %r1078, 2;
	and.b32  	%r1103, %r1102, -858993460;
	or.b32  	%r1104, %r1103, %r1101;
	and.b32  	%r1105, %r1071, -858993460;
	shr.u32 	%r1106, %r1105, 2;
	and.b32  	%r1107, %r1078, -858993460;
	or.b32  	%r1108, %r1106, %r1107;
	and.b32  	%r1109, %r1082, 858993459;
	shl.b32 	%r1110, %r1089, 2;
	and.b32  	%r1111, %r1110, -858993460;
	or.b32  	%r1112, %r1111, %r1109;
	and.b32  	%r1113, %r1082, -858993460;
	shr.u32 	%r1114, %r1113, 2;
	and.b32  	%r1115, %r1089, -858993460;
	or.b32  	%r1116, %r1114, %r1115;
	and.b32  	%r1117, %r1085, 858993459;
	shl.b32 	%r1118, %r1092, 2;
	and.b32  	%r1119, %r1118, -858993460;
	or.b32  	%r1120, %r1119, %r1117;
	and.b32  	%r1121, %r1085, -858993460;
	shr.u32 	%r1122, %r1121, 2;
	and.b32  	%r1123, %r1092, -858993460;
	or.b32  	%r1124, %r1122, %r1123;
	and.b32  	%r1125, %r1096, 84215045;
	shl.b32 	%r1126, %r1112, 4;
	and.b32  	%r1127, %r1126, 1347440720;
	and.b32  	%r1128, %r1096, 1347440720;
	and.b32  	%r1129, %r1112, 1347440720;
	and.b32  	%r1130, %r1104, 168430090;
	shl.b32 	%r1131, %r1120, 4;
	and.b32  	%r1132, %r1131, -1600085856;
	and.b32  	%r1133, %r1104, -1600085856;
	and.b32  	%r1134, %r1120, -1600085856;
	and.b32  	%r1135, %r1100, 84215045;
	shl.b32 	%r1136, %r1116, 4;
	and.b32  	%r1137, %r1136, 1347440720;
	and.b32  	%r1138, %r1100, 1347440720;
	and.b32  	%r1139, %r1116, 1347440720;
	and.b32  	%r1140, %r1108, 168430090;
	shl.b32 	%r1141, %r1124, 4;
	and.b32  	%r1142, %r1141, -1600085856;
	and.b32  	%r1143, %r1108, -1600085856;
	and.b32  	%r1144, %r1124, -1600085856;
	or.b32  	%r1145, %r1130, %r1125;
	or.b32  	%r1146, %r1145, %r1127;
	or.b32  	%r1147, %r1146, %r1132;
	st.local.u32 	[%rd74+80], %r1147;
	or.b32  	%r1148, %r1140, %r1135;
	or.b32  	%r1149, %r1148, %r1137;
	or.b32  	%r1150, %r1149, %r1142;
	st.local.u32 	[%rd74+84], %r1150;
	or.b32  	%r1151, %r1133, %r1128;
	shr.u32 	%r1152, %r1151, 4;
	or.b32  	%r1153, %r1152, %r1129;
	or.b32  	%r1154, %r1153, %r1134;
	st.local.u32 	[%rd74+88], %r1154;
	or.b32  	%r1155, %r1143, %r1138;
	shr.u32 	%r1156, %r1155, 4;
	or.b32  	%r1157, %r1156, %r1139;
	or.b32  	%r1158, %r1157, %r1144;
	st.local.u32 	[%rd74+92], %r1158;
	ld.local.v4.u32 	{%r1159, %r1160, %r1161, %r1162}, [%rd3+96];
	and.b32  	%r1167, %r1159, 1431655765;
	shl.b32 	%r1168, %r1159, 1;
	and.b32  	%r1169, %r1168, -1431655766;
	or.b32  	%r1170, %r1169, %r1167;
	and.b32  	%r1171, %r1159, -1431655766;
	shr.u32 	%r1172, %r1171, 1;
	or.b32  	%r1173, %r1172, %r1171;
	and.b32  	%r1174, %r1160, 1431655765;
	shl.b32 	%r1175, %r1160, 1;
	and.b32  	%r1176, %r1175, -1431655766;
	or.b32  	%r1177, %r1176, %r1174;
	and.b32  	%r1178, %r1160, -1431655766;
	shr.u32 	%r1179, %r1178, 1;
	or.b32  	%r1180, %r1179, %r1178;
	and.b32  	%r1181, %r1161, 1431655765;
	shl.b32 	%r1182, %r1161, 1;
	and.b32  	%r1183, %r1182, -1431655766;
	or.b32  	%r1184, %r1183, %r1181;
	and.b32  	%r1185, %r1161, -1431655766;
	shr.u32 	%r1186, %r1185, 1;
	or.b32  	%r1187, %r1186, %r1185;
	and.b32  	%r1188, %r1162, 1431655765;
	shl.b32 	%r1189, %r1162, 1;
	and.b32  	%r1190, %r1189, -1431655766;
	or.b32  	%r1191, %r1190, %r1188;
	and.b32  	%r1192, %r1162, -1431655766;
	shr.u32 	%r1193, %r1192, 1;
	or.b32  	%r1194, %r1193, %r1192;
	and.b32  	%r1195, %r1170, 858993459;
	shl.b32 	%r1196, %r1177, 2;
	and.b32  	%r1197, %r1196, -858993460;
	or.b32  	%r1198, %r1197, %r1195;
	and.b32  	%r1199, %r1170, -858993460;
	shr.u32 	%r1200, %r1199, 2;
	and.b32  	%r1201, %r1177, -858993460;
	or.b32  	%r1202, %r1200, %r1201;
	and.b32  	%r1203, %r1173, 858993459;
	shl.b32 	%r1204, %r1180, 2;
	and.b32  	%r1205, %r1204, -858993460;
	or.b32  	%r1206, %r1205, %r1203;
	and.b32  	%r1207, %r1173, -858993460;
	shr.u32 	%r1208, %r1207, 2;
	and.b32  	%r1209, %r1180, -858993460;
	or.b32  	%r1210, %r1208, %r1209;
	and.b32  	%r1211, %r1184, 858993459;
	shl.b32 	%r1212, %r1191, 2;
	and.b32  	%r1213, %r1212, -858993460;
	or.b32  	%r1214, %r1213, %r1211;
	and.b32  	%r1215, %r1184, -858993460;
	shr.u32 	%r1216, %r1215, 2;
	and.b32  	%r1217, %r1191, -858993460;
	or.b32  	%r1218, %r1216, %r1217;
	and.b32  	%r1219, %r1187, 858993459;
	shl.b32 	%r1220, %r1194, 2;
	and.b32  	%r1221, %r1220, -858993460;
	or.b32  	%r1222, %r1221, %r1219;
	and.b32  	%r1223, %r1187, -858993460;
	shr.u32 	%r1224, %r1223, 2;
	and.b32  	%r1225, %r1194, -858993460;
	or.b32  	%r1226, %r1224, %r1225;
	and.b32  	%r1227, %r1198, 84215045;
	shl.b32 	%r1228, %r1214, 4;
	and.b32  	%r1229, %r1228, 1347440720;
	and.b32  	%r1230, %r1198, 1347440720;
	and.b32  	%r1231, %r1214, 1347440720;
	and.b32  	%r1232, %r1206, 168430090;
	shl.b32 	%r1233, %r1222, 4;
	and.b32  	%r1234, %r1233, -1600085856;
	and.b32  	%r1235, %r1206, -1600085856;
	and.b32  	%r1236, %r1222, -1600085856;
	and.b32  	%r1237, %r1202, 84215045;
	shl.b32 	%r1238, %r1218, 4;
	and.b32  	%r1239, %r1238, 1347440720;
	and.b32  	%r1240, %r1202, 1347440720;
	and.b32  	%r1241, %r1218, 1347440720;
	and.b32  	%r1242, %r1210, 168430090;
	shl.b32 	%r1243, %r1226, 4;
	and.b32  	%r1244, %r1243, -1600085856;
	and.b32  	%r1245, %r1210, -1600085856;
	and.b32  	%r1246, %r1226, -1600085856;
	or.b32  	%r1247, %r1232, %r1227;
	or.b32  	%r1248, %r1247, %r1229;
	or.b32  	%r1249, %r1248, %r1234;
	st.local.u32 	[%rd74+96], %r1249;
	or.b32  	%r1250, %r1242, %r1237;
	or.b32  	%r1251, %r1250, %r1239;
	or.b32  	%r1252, %r1251, %r1244;
	st.local.u32 	[%rd74+100], %r1252;
	or.b32  	%r1253, %r1235, %r1230;
	shr.u32 	%r1254, %r1253, 4;
	or.b32  	%r1255, %r1254, %r1231;
	or.b32  	%r1256, %r1255, %r1236;
	st.local.u32 	[%rd74+104], %r1256;
	or.b32  	%r1257, %r1245, %r1240;
	shr.u32 	%r1258, %r1257, 4;
	or.b32  	%r1259, %r1258, %r1241;
	or.b32  	%r1260, %r1259, %r1246;
	st.local.u32 	[%rd74+108], %r1260;
	ld.local.v4.u32 	{%r1261, %r1262, %r1263, %r1264}, [%rd3+112];
	and.b32  	%r1269, %r1261, 1431655765;
	shl.b32 	%r1270, %r1261, 1;
	and.b32  	%r1271, %r1270, -1431655766;
	or.b32  	%r1272, %r1271, %r1269;
	and.b32  	%r1273, %r1261, -1431655766;
	shr.u32 	%r1274, %r1273, 1;
	or.b32  	%r1275, %r1274, %r1273;
	and.b32  	%r1276, %r1262, 1431655765;
	shl.b32 	%r1277, %r1262, 1;
	and.b32  	%r1278, %r1277, -1431655766;
	or.b32  	%r1279, %r1278, %r1276;
	and.b32  	%r1280, %r1262, -1431655766;
	shr.u32 	%r1281, %r1280, 1;
	or.b32  	%r1282, %r1281, %r1280;
	and.b32  	%r1283, %r1263, 1431655765;
	shl.b32 	%r1284, %r1263, 1;
	and.b32  	%r1285, %r1284, -1431655766;
	or.b32  	%r1286, %r1285, %r1283;
	and.b32  	%r1287, %r1263, -1431655766;
	shr.u32 	%r1288, %r1287, 1;
	or.b32  	%r1289, %r1288, %r1287;
	and.b32  	%r1290, %r1264, 1431655765;
	shl.b32 	%r1291, %r1264, 1;
	and.b32  	%r1292, %r1291, -1431655766;
	or.b32  	%r1293, %r1292, %r1290;
	and.b32  	%r1294, %r1264, -1431655766;
	shr.u32 	%r1295, %r1294, 1;
	or.b32  	%r1296, %r1295, %r1294;
	and.b32  	%r1297, %r1272, 858993459;
	shl.b32 	%r1298, %r1279, 2;
	and.b32  	%r1299, %r1298, -858993460;
	or.b32  	%r1300, %r1299, %r1297;
	and.b32  	%r1301, %r1272, -858993460;
	shr.u32 	%r1302, %r1301, 2;
	and.b32  	%r1303, %r1279, -858993460;
	or.b32  	%r1304, %r1302, %r1303;
	and.b32  	%r1305, %r1275, 858993459;
	shl.b32 	%r1306, %r1282, 2;
	and.b32  	%r1307, %r1306, -858993460;
	or.b32  	%r1308, %r1307, %r1305;
	and.b32  	%r1309, %r1275, -858993460;
	shr.u32 	%r1310, %r1309, 2;
	and.b32  	%r1311, %r1282, -858993460;
	or.b32  	%r1312, %r1310, %r1311;
	and.b32  	%r1313, %r1286, 858993459;
	shl.b32 	%r1314, %r1293, 2;
	and.b32  	%r1315, %r1314, -858993460;
	or.b32  	%r1316, %r1315, %r1313;
	and.b32  	%r1317, %r1286, -858993460;
	shr.u32 	%r1318, %r1317, 2;
	and.b32  	%r1319, %r1293, -858993460;
	or.b32  	%r1320, %r1318, %r1319;
	and.b32  	%r1321, %r1289, 858993459;
	shl.b32 	%r1322, %r1296, 2;
	and.b32  	%r1323, %r1322, -858993460;
	or.b32  	%r1324, %r1323, %r1321;
	and.b32  	%r1325, %r1289, -858993460;
	shr.u32 	%r1326, %r1325, 2;
	and.b32  	%r1327, %r1296, -858993460;
	or.b32  	%r1328, %r1326, %r1327;
	and.b32  	%r1329, %r1300, 84215045;
	shl.b32 	%r1330, %r1316, 4;
	and.b32  	%r1331, %r1330, 1347440720;
	and.b32  	%r1332, %r1300, 1347440720;
	and.b32  	%r1333, %r1316, 1347440720;
	and.b32  	%r1334, %r1308, 168430090;
	shl.b32 	%r1335, %r1324, 4;
	and.b32  	%r1336, %r1335, -1600085856;
	and.b32  	%r1337, %r1308, -1600085856;
	and.b32  	%r1338, %r1324, -1600085856;
	and.b32  	%r1339, %r1304, 84215045;
	shl.b32 	%r1340, %r1320, 4;
	and.b32  	%r1341, %r1340, 1347440720;
	and.b32  	%r1342, %r1304, 1347440720;
	and.b32  	%r1343, %r1320, 1347440720;
	and.b32  	%r1344, %r1312, 168430090;
	shl.b32 	%r1345, %r1328, 4;
	and.b32  	%r1346, %r1345, -1600085856;
	and.b32  	%r1347, %r1312, -1600085856;
	and.b32  	%r1348, %r1328, -1600085856;
	or.b32  	%r1349, %r1334, %r1329;
	or.b32  	%r1350, %r1349, %r1331;
	or.b32  	%r1351, %r1350, %r1336;
	st.local.u32 	[%rd74+112], %r1351;
	or.b32  	%r1352, %r1344, %r1339;
	or.b32  	%r1353, %r1352, %r1341;
	or.b32  	%r1354, %r1353, %r1346;
	st.local.u32 	[%rd74+116], %r1354;
	or.b32  	%r1355, %r1337, %r1332;
	shr.u32 	%r1356, %r1355, 4;
	or.b32  	%r1357, %r1356, %r1333;
	or.b32  	%r1358, %r1357, %r1338;
	st.local.u32 	[%rd74+120], %r1358;
	or.b32  	%r1359, %r1347, %r1342;
	shr.u32 	%r1360, %r1359, 4;
	or.b32  	%r1361, %r1360, %r1343;
	or.b32  	%r1362, %r1361, %r1348;
	st.local.u32 	[%rd74+124], %r1362;
	ld.local.v4.u32 	{%r1363, %r1364, %r1365, %r1366}, [%rd3+128];
	and.b32  	%r1371, %r1363, 1431655765;
	shl.b32 	%r1372, %r1363, 1;
	and.b32  	%r1373, %r1372, -1431655766;
	or.b32  	%r1374, %r1373, %r1371;
	and.b32  	%r1375, %r1363, -1431655766;
	shr.u32 	%r1376, %r1375, 1;
	or.b32  	%r1377, %r1376, %r1375;
	and.b32  	%r1378, %r1364, 1431655765;
	shl.b32 	%r1379, %r1364, 1;
	and.b32  	%r1380, %r1379, -1431655766;
	or.b32  	%r1381, %r1380, %r1378;
	and.b32  	%r1382, %r1364, -1431655766;
	shr.u32 	%r1383, %r1382, 1;
	or.b32  	%r1384, %r1383, %r1382;
	and.b32  	%r1385, %r1365, 1431655765;
	shl.b32 	%r1386, %r1365, 1;
	and.b32  	%r1387, %r1386, -1431655766;
	or.b32  	%r1388, %r1387, %r1385;
	and.b32  	%r1389, %r1365, -1431655766;
	shr.u32 	%r1390, %r1389, 1;
	or.b32  	%r1391, %r1390, %r1389;
	and.b32  	%r1392, %r1366, 1431655765;
	shl.b32 	%r1393, %r1366, 1;
	and.b32  	%r1394, %r1393, -1431655766;
	or.b32  	%r1395, %r1394, %r1392;
	and.b32  	%r1396, %r1366, -1431655766;
	shr.u32 	%r1397, %r1396, 1;
	or.b32  	%r1398, %r1397, %r1396;
	and.b32  	%r1399, %r1374, 858993459;
	shl.b32 	%r1400, %r1381, 2;
	and.b32  	%r1401, %r1400, -858993460;
	or.b32  	%r1402, %r1401, %r1399;
	and.b32  	%r1403, %r1374, -858993460;
	shr.u32 	%r1404, %r1403, 2;
	and.b32  	%r1405, %r1381, -858993460;
	or.b32  	%r1406, %r1404, %r1405;
	and.b32  	%r1407, %r1377, 858993459;
	shl.b32 	%r1408, %r1384, 2;
	and.b32  	%r1409, %r1408, -858993460;
	or.b32  	%r1410, %r1409, %r1407;
	and.b32  	%r1411, %r1377, -858993460;
	shr.u32 	%r1412, %r1411, 2;
	and.b32  	%r1413, %r1384, -858993460;
	or.b32  	%r1414, %r1412, %r1413;
	and.b32  	%r1415, %r1388, 858993459;
	shl.b32 	%r1416, %r1395, 2;
	and.b32  	%r1417, %r1416, -858993460;
	or.b32  	%r1418, %r1417, %r1415;
	and.b32  	%r1419, %r1388, -858993460;
	shr.u32 	%r1420, %r1419, 2;
	and.b32  	%r1421, %r1395, -858993460;
	or.b32  	%r1422, %r1420, %r1421;
	and.b32  	%r1423, %r1391, 858993459;
	shl.b32 	%r1424, %r1398, 2;
	and.b32  	%r1425, %r1424, -858993460;
	or.b32  	%r1426, %r1425, %r1423;
	and.b32  	%r1427, %r1391, -858993460;
	shr.u32 	%r1428, %r1427, 2;
	and.b32  	%r1429, %r1398, -858993460;
	or.b32  	%r1430, %r1428, %r1429;
	and.b32  	%r1431, %r1402, 84215045;
	shl.b32 	%r1432, %r1418, 4;
	and.b32  	%r1433, %r1432, 1347440720;
	and.b32  	%r1434, %r1402, 1347440720;
	and.b32  	%r1435, %r1418, 1347440720;
	and.b32  	%r1436, %r1410, 168430090;
	shl.b32 	%r1437, %r1426, 4;
	and.b32  	%r1438, %r1437, -1600085856;
	and.b32  	%r1439, %r1410, -1600085856;
	and.b32  	%r1440, %r1426, -1600085856;
	and.b32  	%r1441, %r1406, 84215045;
	shl.b32 	%r1442, %r1422, 4;
	and.b32  	%r1443, %r1442, 1347440720;
	and.b32  	%r1444, %r1406, 1347440720;
	and.b32  	%r1445, %r1422, 1347440720;
	and.b32  	%r1446, %r1414, 168430090;
	shl.b32 	%r1447, %r1430, 4;
	and.b32  	%r1448, %r1447, -1600085856;
	and.b32  	%r1449, %r1414, -1600085856;
	and.b32  	%r1450, %r1430, -1600085856;
	or.b32  	%r1451, %r1436, %r1431;
	or.b32  	%r1452, %r1451, %r1433;
	or.b32  	%r1453, %r1452, %r1438;
	st.local.u32 	[%rd74+128], %r1453;
	or.b32  	%r1454, %r1446, %r1441;
	or.b32  	%r1455, %r1454, %r1443;
	or.b32  	%r1456, %r1455, %r1448;
	st.local.u32 	[%rd74+132], %r1456;
	or.b32  	%r1457, %r1439, %r1434;
	shr.u32 	%r1458, %r1457, 4;
	or.b32  	%r1459, %r1458, %r1435;
	or.b32  	%r1460, %r1459, %r1440;
	st.local.u32 	[%rd74+136], %r1460;
	or.b32  	%r1461, %r1449, %r1444;
	shr.u32 	%r1462, %r1461, 4;
	or.b32  	%r1463, %r1462, %r1445;
	or.b32  	%r1464, %r1463, %r1450;
	st.local.u32 	[%rd74+140], %r1464;
	ld.local.v4.u32 	{%r1465, %r1466, %r1467, %r1468}, [%rd3+144];
	and.b32  	%r1473, %r1465, 1431655765;
	shl.b32 	%r1474, %r1465, 1;
	and.b32  	%r1475, %r1474, -1431655766;
	or.b32  	%r1476, %r1475, %r1473;
	and.b32  	%r1477, %r1465, -1431655766;
	shr.u32 	%r1478, %r1477, 1;
	or.b32  	%r1479, %r1478, %r1477;
	and.b32  	%r1480, %r1466, 1431655765;
	shl.b32 	%r1481, %r1466, 1;
	and.b32  	%r1482, %r1481, -1431655766;
	or.b32  	%r1483, %r1482, %r1480;
	and.b32  	%r1484, %r1466, -1431655766;
	shr.u32 	%r1485, %r1484, 1;
	or.b32  	%r1486, %r1485, %r1484;
	and.b32  	%r1487, %r1467, 1431655765;
	shl.b32 	%r1488, %r1467, 1;
	and.b32  	%r1489, %r1488, -1431655766;
	or.b32  	%r1490, %r1489, %r1487;
	and.b32  	%r1491, %r1467, -1431655766;
	shr.u32 	%r1492, %r1491, 1;
	or.b32  	%r1493, %r1492, %r1491;
	and.b32  	%r1494, %r1468, 1431655765;
	shl.b32 	%r1495, %r1468, 1;
	and.b32  	%r1496, %r1495, -1431655766;
	or.b32  	%r1497, %r1496, %r1494;
	and.b32  	%r1498, %r1468, -1431655766;
	shr.u32 	%r1499, %r1498, 1;
	or.b32  	%r1500, %r1499, %r1498;
	and.b32  	%r1501, %r1476, 858993459;
	shl.b32 	%r1502, %r1483, 2;
	and.b32  	%r1503, %r1502, -858993460;
	or.b32  	%r1504, %r1503, %r1501;
	and.b32  	%r1505, %r1476, -858993460;
	shr.u32 	%r1506, %r1505, 2;
	and.b32  	%r1507, %r1483, -858993460;
	or.b32  	%r1508, %r1506, %r1507;
	and.b32  	%r1509, %r1479, 858993459;
	shl.b32 	%r1510, %r1486, 2;
	and.b32  	%r1511, %r1510, -858993460;
	or.b32  	%r1512, %r1511, %r1509;
	and.b32  	%r1513, %r1479, -858993460;
	shr.u32 	%r1514, %r1513, 2;
	and.b32  	%r1515, %r1486, -858993460;
	or.b32  	%r1516, %r1514, %r1515;
	and.b32  	%r1517, %r1490, 858993459;
	shl.b32 	%r1518, %r1497, 2;
	and.b32  	%r1519, %r1518, -858993460;
	or.b32  	%r1520, %r1519, %r1517;
	and.b32  	%r1521, %r1490, -858993460;
	shr.u32 	%r1522, %r1521, 2;
	and.b32  	%r1523, %r1497, -858993460;
	or.b32  	%r1524, %r1522, %r1523;
	and.b32  	%r1525, %r1493, 858993459;
	shl.b32 	%r1526, %r1500, 2;
	and.b32  	%r1527, %r1526, -858993460;
	or.b32  	%r1528, %r1527, %r1525;
	and.b32  	%r1529, %r1493, -858993460;
	shr.u32 	%r1530, %r1529, 2;
	and.b32  	%r1531, %r1500, -858993460;
	or.b32  	%r1532, %r1530, %r1531;
	and.b32  	%r1533, %r1504, 84215045;
	shl.b32 	%r1534, %r1520, 4;
	and.b32  	%r1535, %r1534, 1347440720;
	and.b32  	%r1536, %r1504, 1347440720;
	and.b32  	%r1537, %r1520, 1347440720;
	and.b32  	%r1538, %r1512, 168430090;
	shl.b32 	%r1539, %r1528, 4;
	and.b32  	%r1540, %r1539, -1600085856;
	and.b32  	%r1541, %r1512, -1600085856;
	and.b32  	%r1542, %r1528, -1600085856;
	and.b32  	%r1543, %r1508, 84215045;
	shl.b32 	%r1544, %r1524, 4;
	and.b32  	%r1545, %r1544, 1347440720;
	and.b32  	%r1546, %r1508, 1347440720;
	and.b32  	%r1547, %r1524, 1347440720;
	and.b32  	%r1548, %r1516, 168430090;
	shl.b32 	%r1549, %r1532, 4;
	and.b32  	%r1550, %r1549, -1600085856;
	and.b32  	%r1551, %r1516, -1600085856;
	and.b32  	%r1552, %r1532, -1600085856;
	or.b32  	%r1553, %r1538, %r1533;
	or.b32  	%r1554, %r1553, %r1535;
	or.b32  	%r1555, %r1554, %r1540;
	st.local.u32 	[%rd74+144], %r1555;
	or.b32  	%r1556, %r1548, %r1543;
	or.b32  	%r1557, %r1556, %r1545;
	or.b32  	%r1558, %r1557, %r1550;
	st.local.u32 	[%rd74+148], %r1558;
	or.b32  	%r1559, %r1541, %r1536;
	shr.u32 	%r1560, %r1559, 4;
	or.b32  	%r1561, %r1560, %r1537;
	or.b32  	%r1562, %r1561, %r1542;
	st.local.u32 	[%rd74+152], %r1562;
	or.b32  	%r1563, %r1551, %r1546;
	shr.u32 	%r1564, %r1563, 4;
	or.b32  	%r1565, %r1564, %r1547;
	or.b32  	%r1566, %r1565, %r1552;
	st.local.u32 	[%rd74+156], %r1566;
	ld.local.v4.u32 	{%r1567, %r1568, %r1569, %r1570}, [%rd3+160];
	and.b32  	%r1575, %r1567, 1431655765;
	shl.b32 	%r1576, %r1567, 1;
	and.b32  	%r1577, %r1576, -1431655766;
	or.b32  	%r1578, %r1577, %r1575;
	and.b32  	%r1579, %r1567, -1431655766;
	shr.u32 	%r1580, %r1579, 1;
	or.b32  	%r1581, %r1580, %r1579;
	and.b32  	%r1582, %r1568, 1431655765;
	shl.b32 	%r1583, %r1568, 1;
	and.b32  	%r1584, %r1583, -1431655766;
	or.b32  	%r1585, %r1584, %r1582;
	and.b32  	%r1586, %r1568, -1431655766;
	shr.u32 	%r1587, %r1586, 1;
	or.b32  	%r1588, %r1587, %r1586;
	and.b32  	%r1589, %r1569, 1431655765;
	shl.b32 	%r1590, %r1569, 1;
	and.b32  	%r1591, %r1590, -1431655766;
	or.b32  	%r1592, %r1591, %r1589;
	and.b32  	%r1593, %r1569, -1431655766;
	shr.u32 	%r1594, %r1593, 1;
	or.b32  	%r1595, %r1594, %r1593;
	and.b32  	%r1596, %r1570, 1431655765;
	shl.b32 	%r1597, %r1570, 1;
	and.b32  	%r1598, %r1597, -1431655766;
	or.b32  	%r1599, %r1598, %r1596;
	and.b32  	%r1600, %r1570, -1431655766;
	shr.u32 	%r1601, %r1600, 1;
	or.b32  	%r1602, %r1601, %r1600;
	and.b32  	%r1603, %r1578, 858993459;
	shl.b32 	%r1604, %r1585, 2;
	and.b32  	%r1605, %r1604, -858993460;
	or.b32  	%r1606, %r1605, %r1603;
	and.b32  	%r1607, %r1578, -858993460;
	shr.u32 	%r1608, %r1607, 2;
	and.b32  	%r1609, %r1585, -858993460;
	or.b32  	%r1610, %r1608, %r1609;
	and.b32  	%r1611, %r1581, 858993459;
	shl.b32 	%r1612, %r1588, 2;
	and.b32  	%r1613, %r1612, -858993460;
	or.b32  	%r1614, %r1613, %r1611;
	and.b32  	%r1615, %r1581, -858993460;
	shr.u32 	%r1616, %r1615, 2;
	and.b32  	%r1617, %r1588, -858993460;
	or.b32  	%r1618, %r1616, %r1617;
	and.b32  	%r1619, %r1592, 858993459;
	shl.b32 	%r1620, %r1599, 2;
	and.b32  	%r1621, %r1620, -858993460;
	or.b32  	%r1622, %r1621, %r1619;
	and.b32  	%r1623, %r1592, -858993460;
	shr.u32 	%r1624, %r1623, 2;
	and.b32  	%r1625, %r1599, -858993460;
	or.b32  	%r1626, %r1624, %r1625;
	and.b32  	%r1627, %r1595, 858993459;
	shl.b32 	%r1628, %r1602, 2;
	and.b32  	%r1629, %r1628, -858993460;
	or.b32  	%r1630, %r1629, %r1627;
	and.b32  	%r1631, %r1595, -858993460;
	shr.u32 	%r1632, %r1631, 2;
	and.b32  	%r1633, %r1602, -858993460;
	or.b32  	%r1634, %r1632, %r1633;
	and.b32  	%r1635, %r1606, 84215045;
	shl.b32 	%r1636, %r1622, 4;
	and.b32  	%r1637, %r1636, 1347440720;
	and.b32  	%r1638, %r1606, 1347440720;
	and.b32  	%r1639, %r1622, 1347440720;
	and.b32  	%r1640, %r1614, 168430090;
	shl.b32 	%r1641, %r1630, 4;
	and.b32  	%r1642, %r1641, -1600085856;
	and.b32  	%r1643, %r1614, -1600085856;
	and.b32  	%r1644, %r1630, -1600085856;
	and.b32  	%r1645, %r1610, 84215045;
	shl.b32 	%r1646, %r1626, 4;
	and.b32  	%r1647, %r1646, 1347440720;
	and.b32  	%r1648, %r1610, 1347440720;
	and.b32  	%r1649, %r1626, 1347440720;
	and.b32  	%r1650, %r1618, 168430090;
	shl.b32 	%r1651, %r1634, 4;
	and.b32  	%r1652, %r1651, -1600085856;
	and.b32  	%r1653, %r1618, -1600085856;
	and.b32  	%r1654, %r1634, -1600085856;
	or.b32  	%r1655, %r1640, %r1635;
	or.b32  	%r1656, %r1655, %r1637;
	or.b32  	%r1657, %r1656, %r1642;
	st.local.u32 	[%rd74+160], %r1657;
	or.b32  	%r1658, %r1650, %r1645;
	or.b32  	%r1659, %r1658, %r1647;
	or.b32  	%r1660, %r1659, %r1652;
	st.local.u32 	[%rd74+164], %r1660;
	or.b32  	%r1661, %r1643, %r1638;
	shr.u32 	%r1662, %r1661, 4;
	or.b32  	%r1663, %r1662, %r1639;
	or.b32  	%r1664, %r1663, %r1644;
	st.local.u32 	[%rd74+168], %r1664;
	or.b32  	%r1665, %r1653, %r1648;
	shr.u32 	%r1666, %r1665, 4;
	or.b32  	%r1667, %r1666, %r1649;
	or.b32  	%r1668, %r1667, %r1654;
	st.local.u32 	[%rd74+172], %r1668;
	ld.local.v4.u32 	{%r1669, %r1670, %r1671, %r1672}, [%rd3+176];
	and.b32  	%r1677, %r1669, 1431655765;
	shl.b32 	%r1678, %r1669, 1;
	and.b32  	%r1679, %r1678, -1431655766;
	or.b32  	%r1680, %r1679, %r1677;
	and.b32  	%r1681, %r1669, -1431655766;
	shr.u32 	%r1682, %r1681, 1;
	or.b32  	%r1683, %r1682, %r1681;
	and.b32  	%r1684, %r1670, 1431655765;
	shl.b32 	%r1685, %r1670, 1;
	and.b32  	%r1686, %r1685, -1431655766;
	or.b32  	%r1687, %r1686, %r1684;
	and.b32  	%r1688, %r1670, -1431655766;
	shr.u32 	%r1689, %r1688, 1;
	or.b32  	%r1690, %r1689, %r1688;
	and.b32  	%r1691, %r1671, 1431655765;
	shl.b32 	%r1692, %r1671, 1;
	and.b32  	%r1693, %r1692, -1431655766;
	or.b32  	%r1694, %r1693, %r1691;
	and.b32  	%r1695, %r1671, -1431655766;
	shr.u32 	%r1696, %r1695, 1;
	or.b32  	%r1697, %r1696, %r1695;
	and.b32  	%r1698, %r1672, 1431655765;
	shl.b32 	%r1699, %r1672, 1;
	and.b32  	%r1700, %r1699, -1431655766;
	or.b32  	%r1701, %r1700, %r1698;
	and.b32  	%r1702, %r1672, -1431655766;
	shr.u32 	%r1703, %r1702, 1;
	or.b32  	%r1704, %r1703, %r1702;
	and.b32  	%r1705, %r1680, 858993459;
	shl.b32 	%r1706, %r1687, 2;
	and.b32  	%r1707, %r1706, -858993460;
	or.b32  	%r1708, %r1707, %r1705;
	and.b32  	%r1709, %r1680, -858993460;
	shr.u32 	%r1710, %r1709, 2;
	and.b32  	%r1711, %r1687, -858993460;
	or.b32  	%r1712, %r1710, %r1711;
	and.b32  	%r1713, %r1683, 858993459;
	shl.b32 	%r1714, %r1690, 2;
	and.b32  	%r1715, %r1714, -858993460;
	or.b32  	%r1716, %r1715, %r1713;
	and.b32  	%r1717, %r1683, -858993460;
	shr.u32 	%r1718, %r1717, 2;
	and.b32  	%r1719, %r1690, -858993460;
	or.b32  	%r1720, %r1718, %r1719;
	and.b32  	%r1721, %r1694, 858993459;
	shl.b32 	%r1722, %r1701, 2;
	and.b32  	%r1723, %r1722, -858993460;
	or.b32  	%r1724, %r1723, %r1721;
	and.b32  	%r1725, %r1694, -858993460;
	shr.u32 	%r1726, %r1725, 2;
	and.b32  	%r1727, %r1701, -858993460;
	or.b32  	%r1728, %r1726, %r1727;
	and.b32  	%r1729, %r1697, 858993459;
	shl.b32 	%r1730, %r1704, 2;
	and.b32  	%r1731, %r1730, -858993460;
	or.b32  	%r1732, %r1731, %r1729;
	and.b32  	%r1733, %r1697, -858993460;
	shr.u32 	%r1734, %r1733, 2;
	and.b32  	%r1735, %r1704, -858993460;
	or.b32  	%r1736, %r1734, %r1735;
	and.b32  	%r1737, %r1708, 84215045;
	shl.b32 	%r1738, %r1724, 4;
	and.b32  	%r1739, %r1738, 1347440720;
	and.b32  	%r1740, %r1708, 1347440720;
	and.b32  	%r1741, %r1724, 1347440720;
	and.b32  	%r1742, %r1716, 168430090;
	shl.b32 	%r1743, %r1732, 4;
	and.b32  	%r1744, %r1743, -1600085856;
	and.b32  	%r1745, %r1716, -1600085856;
	and.b32  	%r1746, %r1732, -1600085856;
	and.b32  	%r1747, %r1712, 84215045;
	shl.b32 	%r1748, %r1728, 4;
	and.b32  	%r1749, %r1748, 1347440720;
	and.b32  	%r1750, %r1712, 1347440720;
	and.b32  	%r1751, %r1728, 1347440720;
	and.b32  	%r1752, %r1720, 168430090;
	shl.b32 	%r1753, %r1736, 4;
	and.b32  	%r1754, %r1753, -1600085856;
	and.b32  	%r1755, %r1720, -1600085856;
	and.b32  	%r1756, %r1736, -1600085856;
	or.b32  	%r1757, %r1742, %r1737;
	or.b32  	%r1758, %r1757, %r1739;
	or.b32  	%r1759, %r1758, %r1744;
	st.local.u32 	[%rd74+176], %r1759;
	or.b32  	%r1760, %r1752, %r1747;
	or.b32  	%r1761, %r1760, %r1749;
	or.b32  	%r1762, %r1761, %r1754;
	st.local.u32 	[%rd74+180], %r1762;
	or.b32  	%r1763, %r1745, %r1740;
	shr.u32 	%r1764, %r1763, 4;
	or.b32  	%r1765, %r1764, %r1741;
	or.b32  	%r1766, %r1765, %r1746;
	st.local.u32 	[%rd74+184], %r1766;
	or.b32  	%r1767, %r1755, %r1750;
	shr.u32 	%r1768, %r1767, 4;
	or.b32  	%r1769, %r1768, %r1751;
	or.b32  	%r1770, %r1769, %r1756;
	st.local.u32 	[%rd74+188], %r1770;
	ld.local.v4.u32 	{%r1771, %r1772, %r1773, %r1774}, [%rd3+192];
	and.b32  	%r1779, %r1771, 1431655765;
	shl.b32 	%r1780, %r1771, 1;
	and.b32  	%r1781, %r1780, -1431655766;
	or.b32  	%r1782, %r1781, %r1779;
	and.b32  	%r1783, %r1771, -1431655766;
	shr.u32 	%r1784, %r1783, 1;
	or.b32  	%r1785, %r1784, %r1783;
	and.b32  	%r1786, %r1772, 1431655765;
	shl.b32 	%r1787, %r1772, 1;
	and.b32  	%r1788, %r1787, -1431655766;
	or.b32  	%r1789, %r1788, %r1786;
	and.b32  	%r1790, %r1772, -1431655766;
	shr.u32 	%r1791, %r1790, 1;
	or.b32  	%r1792, %r1791, %r1790;
	and.b32  	%r1793, %r1773, 1431655765;
	shl.b32 	%r1794, %r1773, 1;
	and.b32  	%r1795, %r1794, -1431655766;
	or.b32  	%r1796, %r1795, %r1793;
	and.b32  	%r1797, %r1773, -1431655766;
	shr.u32 	%r1798, %r1797, 1;
	or.b32  	%r1799, %r1798, %r1797;
	and.b32  	%r1800, %r1774, 1431655765;
	shl.b32 	%r1801, %r1774, 1;
	and.b32  	%r1802, %r1801, -1431655766;
	or.b32  	%r1803, %r1802, %r1800;
	and.b32  	%r1804, %r1774, -1431655766;
	shr.u32 	%r1805, %r1804, 1;
	or.b32  	%r1806, %r1805, %r1804;
	and.b32  	%r1807, %r1782, 858993459;
	shl.b32 	%r1808, %r1789, 2;
	and.b32  	%r1809, %r1808, -858993460;
	or.b32  	%r1810, %r1809, %r1807;
	and.b32  	%r1811, %r1782, -858993460;
	shr.u32 	%r1812, %r1811, 2;
	and.b32  	%r1813, %r1789, -858993460;
	or.b32  	%r1814, %r1812, %r1813;
	and.b32  	%r1815, %r1785, 858993459;
	shl.b32 	%r1816, %r1792, 2;
	and.b32  	%r1817, %r1816, -858993460;
	or.b32  	%r1818, %r1817, %r1815;
	and.b32  	%r1819, %r1785, -858993460;
	shr.u32 	%r1820, %r1819, 2;
	and.b32  	%r1821, %r1792, -858993460;
	or.b32  	%r1822, %r1820, %r1821;
	and.b32  	%r1823, %r1796, 858993459;
	shl.b32 	%r1824, %r1803, 2;
	and.b32  	%r1825, %r1824, -858993460;
	or.b32  	%r1826, %r1825, %r1823;
	and.b32  	%r1827, %r1796, -858993460;
	shr.u32 	%r1828, %r1827, 2;
	and.b32  	%r1829, %r1803, -858993460;
	or.b32  	%r1830, %r1828, %r1829;
	and.b32  	%r1831, %r1799, 858993459;
	shl.b32 	%r1832, %r1806, 2;
	and.b32  	%r1833, %r1832, -858993460;
	or.b32  	%r1834, %r1833, %r1831;
	and.b32  	%r1835, %r1799, -858993460;
	shr.u32 	%r1836, %r1835, 2;
	and.b32  	%r1837, %r1806, -858993460;
	or.b32  	%r1838, %r1836, %r1837;
	and.b32  	%r1839, %r1810, 84215045;
	shl.b32 	%r1840, %r1826, 4;
	and.b32  	%r1841, %r1840, 1347440720;
	and.b32  	%r1842, %r1810, 1347440720;
	and.b32  	%r1843, %r1826, 1347440720;
	and.b32  	%r1844, %r1818, 168430090;
	shl.b32 	%r1845, %r1834, 4;
	and.b32  	%r1846, %r1845, -1600085856;
	and.b32  	%r1847, %r1818, -1600085856;
	and.b32  	%r1848, %r1834, -1600085856;
	and.b32  	%r1849, %r1814, 84215045;
	shl.b32 	%r1850, %r1830, 4;
	and.b32  	%r1851, %r1850, 1347440720;
	and.b32  	%r1852, %r1814, 1347440720;
	and.b32  	%r1853, %r1830, 1347440720;
	and.b32  	%r1854, %r1822, 168430090;
	shl.b32 	%r1855, %r1838, 4;
	and.b32  	%r1856, %r1855, -1600085856;
	and.b32  	%r1857, %r1822, -1600085856;
	and.b32  	%r1858, %r1838, -1600085856;
	or.b32  	%r1859, %r1844, %r1839;
	or.b32  	%r1860, %r1859, %r1841;
	or.b32  	%r1861, %r1860, %r1846;
	st.local.u32 	[%rd74+192], %r1861;
	or.b32  	%r1862, %r1854, %r1849;
	or.b32  	%r1863, %r1862, %r1851;
	or.b32  	%r1864, %r1863, %r1856;
	st.local.u32 	[%rd74+196], %r1864;
	or.b32  	%r1865, %r1847, %r1842;
	shr.u32 	%r1866, %r1865, 4;
	or.b32  	%r1867, %r1866, %r1843;
	or.b32  	%r1868, %r1867, %r1848;
	st.local.u32 	[%rd74+200], %r1868;
	or.b32  	%r1869, %r1857, %r1852;
	shr.u32 	%r1870, %r1869, 4;
	or.b32  	%r1871, %r1870, %r1853;
	or.b32  	%r1872, %r1871, %r1858;
	st.local.u32 	[%rd74+204], %r1872;
	ld.local.v4.u32 	{%r1873, %r1874, %r1875, %r1876}, [%rd3+208];
	and.b32  	%r1881, %r1873, 1431655765;
	shl.b32 	%r1882, %r1873, 1;
	and.b32  	%r1883, %r1882, -1431655766;
	or.b32  	%r1884, %r1883, %r1881;
	and.b32  	%r1885, %r1873, -1431655766;
	shr.u32 	%r1886, %r1885, 1;
	or.b32  	%r1887, %r1886, %r1885;
	and.b32  	%r1888, %r1874, 1431655765;
	shl.b32 	%r1889, %r1874, 1;
	and.b32  	%r1890, %r1889, -1431655766;
	or.b32  	%r1891, %r1890, %r1888;
	and.b32  	%r1892, %r1874, -1431655766;
	shr.u32 	%r1893, %r1892, 1;
	or.b32  	%r1894, %r1893, %r1892;
	and.b32  	%r1895, %r1875, 1431655765;
	shl.b32 	%r1896, %r1875, 1;
	and.b32  	%r1897, %r1896, -1431655766;
	or.b32  	%r1898, %r1897, %r1895;
	and.b32  	%r1899, %r1875, -1431655766;
	shr.u32 	%r1900, %r1899, 1;
	or.b32  	%r1901, %r1900, %r1899;
	and.b32  	%r1902, %r1876, 1431655765;
	shl.b32 	%r1903, %r1876, 1;
	and.b32  	%r1904, %r1903, -1431655766;
	or.b32  	%r1905, %r1904, %r1902;
	and.b32  	%r1906, %r1876, -1431655766;
	shr.u32 	%r1907, %r1906, 1;
	or.b32  	%r1908, %r1907, %r1906;
	and.b32  	%r1909, %r1884, 858993459;
	shl.b32 	%r1910, %r1891, 2;
	and.b32  	%r1911, %r1910, -858993460;
	or.b32  	%r1912, %r1911, %r1909;
	and.b32  	%r1913, %r1884, -858993460;
	shr.u32 	%r1914, %r1913, 2;
	and.b32  	%r1915, %r1891, -858993460;
	or.b32  	%r1916, %r1914, %r1915;
	and.b32  	%r1917, %r1887, 858993459;
	shl.b32 	%r1918, %r1894, 2;
	and.b32  	%r1919, %r1918, -858993460;
	or.b32  	%r1920, %r1919, %r1917;
	and.b32  	%r1921, %r1887, -858993460;
	shr.u32 	%r1922, %r1921, 2;
	and.b32  	%r1923, %r1894, -858993460;
	or.b32  	%r1924, %r1922, %r1923;
	and.b32  	%r1925, %r1898, 858993459;
	shl.b32 	%r1926, %r1905, 2;
	and.b32  	%r1927, %r1926, -858993460;
	or.b32  	%r1928, %r1927, %r1925;
	and.b32  	%r1929, %r1898, -858993460;
	shr.u32 	%r1930, %r1929, 2;
	and.b32  	%r1931, %r1905, -858993460;
	or.b32  	%r1932, %r1930, %r1931;
	and.b32  	%r1933, %r1901, 858993459;
	shl.b32 	%r1934, %r1908, 2;
	and.b32  	%r1935, %r1934, -858993460;
	or.b32  	%r1936, %r1935, %r1933;
	and.b32  	%r1937, %r1901, -858993460;
	shr.u32 	%r1938, %r1937, 2;
	and.b32  	%r1939, %r1908, -858993460;
	or.b32  	%r1940, %r1938, %r1939;
	and.b32  	%r1941, %r1912, 84215045;
	shl.b32 	%r1942, %r1928, 4;
	and.b32  	%r1943, %r1942, 1347440720;
	and.b32  	%r1944, %r1912, 1347440720;
	and.b32  	%r1945, %r1928, 1347440720;
	and.b32  	%r1946, %r1920, 168430090;
	shl.b32 	%r1947, %r1936, 4;
	and.b32  	%r1948, %r1947, -1600085856;
	and.b32  	%r1949, %r1920, -1600085856;
	and.b32  	%r1950, %r1936, -1600085856;
	and.b32  	%r1951, %r1916, 84215045;
	shl.b32 	%r1952, %r1932, 4;
	and.b32  	%r1953, %r1952, 1347440720;
	and.b32  	%r1954, %r1916, 1347440720;
	and.b32  	%r1955, %r1932, 1347440720;
	and.b32  	%r1956, %r1924, 168430090;
	shl.b32 	%r1957, %r1940, 4;
	and.b32  	%r1958, %r1957, -1600085856;
	and.b32  	%r1959, %r1924, -1600085856;
	and.b32  	%r1960, %r1940, -1600085856;
	or.b32  	%r1961, %r1946, %r1941;
	or.b32  	%r1962, %r1961, %r1943;
	or.b32  	%r1963, %r1962, %r1948;
	st.local.u32 	[%rd74+208], %r1963;
	or.b32  	%r1964, %r1956, %r1951;
	or.b32  	%r1965, %r1964, %r1953;
	or.b32  	%r1966, %r1965, %r1958;
	st.local.u32 	[%rd74+212], %r1966;
	or.b32  	%r1967, %r1949, %r1944;
	shr.u32 	%r1968, %r1967, 4;
	or.b32  	%r1969, %r1968, %r1945;
	or.b32  	%r1970, %r1969, %r1950;
	st.local.u32 	[%rd74+216], %r1970;
	or.b32  	%r1971, %r1959, %r1954;
	shr.u32 	%r1972, %r1971, 4;
	or.b32  	%r1973, %r1972, %r1955;
	or.b32  	%r1974, %r1973, %r1960;
	st.local.u32 	[%rd74+220], %r1974;
	ld.local.v4.u32 	{%r1975, %r1976, %r1977, %r1978}, [%rd3+224];
	and.b32  	%r1983, %r1975, 1431655765;
	shl.b32 	%r1984, %r1975, 1;
	and.b32  	%r1985, %r1984, -1431655766;
	or.b32  	%r1986, %r1985, %r1983;
	and.b32  	%r1987, %r1975, -1431655766;
	shr.u32 	%r1988, %r1987, 1;
	or.b32  	%r1989, %r1988, %r1987;
	and.b32  	%r1990, %r1976, 1431655765;
	shl.b32 	%r1991, %r1976, 1;
	and.b32  	%r1992, %r1991, -1431655766;
	or.b32  	%r1993, %r1992, %r1990;
	and.b32  	%r1994, %r1976, -1431655766;
	shr.u32 	%r1995, %r1994, 1;
	or.b32  	%r1996, %r1995, %r1994;
	and.b32  	%r1997, %r1977, 1431655765;
	shl.b32 	%r1998, %r1977, 1;
	and.b32  	%r1999, %r1998, -1431655766;
	or.b32  	%r2000, %r1999, %r1997;
	and.b32  	%r2001, %r1977, -1431655766;
	shr.u32 	%r2002, %r2001, 1;
	or.b32  	%r2003, %r2002, %r2001;
	and.b32  	%r2004, %r1978, 1431655765;
	shl.b32 	%r2005, %r1978, 1;
	and.b32  	%r2006, %r2005, -1431655766;
	or.b32  	%r2007, %r2006, %r2004;
	and.b32  	%r2008, %r1978, -1431655766;
	shr.u32 	%r2009, %r2008, 1;
	or.b32  	%r2010, %r2009, %r2008;
	and.b32  	%r2011, %r1986, 858993459;
	shl.b32 	%r2012, %r1993, 2;
	and.b32  	%r2013, %r2012, -858993460;
	or.b32  	%r2014, %r2013, %r2011;
	and.b32  	%r2015, %r1986, -858993460;
	shr.u32 	%r2016, %r2015, 2;
	and.b32  	%r2017, %r1993, -858993460;
	or.b32  	%r2018, %r2016, %r2017;
	and.b32  	%r2019, %r1989, 858993459;
	shl.b32 	%r2020, %r1996, 2;
	and.b32  	%r2021, %r2020, -858993460;
	or.b32  	%r2022, %r2021, %r2019;
	and.b32  	%r2023, %r1989, -858993460;
	shr.u32 	%r2024, %r2023, 2;
	and.b32  	%r2025, %r1996, -858993460;
	or.b32  	%r2026, %r2024, %r2025;
	and.b32  	%r2027, %r2000, 858993459;
	shl.b32 	%r2028, %r2007, 2;
	and.b32  	%r2029, %r2028, -858993460;
	or.b32  	%r2030, %r2029, %r2027;
	and.b32  	%r2031, %r2000, -858993460;
	shr.u32 	%r2032, %r2031, 2;
	and.b32  	%r2033, %r2007, -858993460;
	or.b32  	%r2034, %r2032, %r2033;
	and.b32  	%r2035, %r2003, 858993459;
	shl.b32 	%r2036, %r2010, 2;
	and.b32  	%r2037, %r2036, -858993460;
	or.b32  	%r2038, %r2037, %r2035;
	and.b32  	%r2039, %r2003, -858993460;
	shr.u32 	%r2040, %r2039, 2;
	and.b32  	%r2041, %r2010, -858993460;
	or.b32  	%r2042, %r2040, %r2041;
	and.b32  	%r2043, %r2014, 84215045;
	shl.b32 	%r2044, %r2030, 4;
	and.b32  	%r2045, %r2044, 1347440720;
	and.b32  	%r2046, %r2014, 1347440720;
	and.b32  	%r2047, %r2030, 1347440720;
	and.b32  	%r2048, %r2022, 168430090;
	shl.b32 	%r2049, %r2038, 4;
	and.b32  	%r2050, %r2049, -1600085856;
	and.b32  	%r2051, %r2022, -1600085856;
	and.b32  	%r2052, %r2038, -1600085856;
	and.b32  	%r2053, %r2018, 84215045;
	shl.b32 	%r2054, %r2034, 4;
	and.b32  	%r2055, %r2054, 1347440720;
	and.b32  	%r2056, %r2018, 1347440720;
	and.b32  	%r2057, %r2034, 1347440720;
	and.b32  	%r2058, %r2026, 168430090;
	shl.b32 	%r2059, %r2042, 4;
	and.b32  	%r2060, %r2059, -1600085856;
	and.b32  	%r2061, %r2026, -1600085856;
	and.b32  	%r2062, %r2042, -1600085856;
	or.b32  	%r2063, %r2048, %r2043;
	or.b32  	%r2064, %r2063, %r2045;
	or.b32  	%r2065, %r2064, %r2050;
	st.local.u32 	[%rd74+224], %r2065;
	or.b32  	%r2066, %r2058, %r2053;
	or.b32  	%r2067, %r2066, %r2055;
	or.b32  	%r2068, %r2067, %r2060;
	st.local.u32 	[%rd74+228], %r2068;
	or.b32  	%r2069, %r2051, %r2046;
	shr.u32 	%r2070, %r2069, 4;
	or.b32  	%r2071, %r2070, %r2047;
	or.b32  	%r2072, %r2071, %r2052;
	st.local.u32 	[%rd74+232], %r2072;
	or.b32  	%r2073, %r2061, %r2056;
	shr.u32 	%r2074, %r2073, 4;
	or.b32  	%r2075, %r2074, %r2057;
	or.b32  	%r2076, %r2075, %r2062;
	st.local.u32 	[%rd74+236], %r2076;
	mov.u32 	%r2077, 14;
	st.local.u32 	[%rd74+720], %r2077;
	and.b32  	%r2078, %r16, 1431655765;
	shl.b32 	%r2079, %r16, 1;
	and.b32  	%r2080, %r2079, -1431655766;
	or.b32  	%r2081, %r2080, %r2078;
	st.local.u32 	[%rd74+240], %r2081;
	and.b32  	%r2082, %r640, -1431655766;
	shr.u32 	%r20, %r2082, 1;
	or.b32  	%r2083, %r20, %r2082;
	st.local.u32 	[%rd74+244], %r2083;
	and.b32  	%r2084, %r17, 1431655765;
	shl.b32 	%r2085, %r17, 1;
	and.b32  	%r2086, %r2085, -1431655766;
	or.b32  	%r2087, %r2086, %r2084;
	st.local.u32 	[%rd74+248], %r2087;
	and.b32  	%r2088, %r642, -1431655766;
	shr.u32 	%r21, %r2088, 1;
	or.b32  	%r2089, %r21, %r2088;
	st.local.u32 	[%rd74+252], %r2089;
	and.b32  	%r2090, %r18, 1431655765;
	shl.b32 	%r2091, %r18, 1;
	and.b32  	%r2092, %r2091, -1431655766;
	or.b32  	%r2093, %r2092, %r2090;
	st.local.u32 	[%rd74+256], %r2093;
	and.b32  	%r2094, %r645, -1431655766;
	shr.u32 	%r22, %r2094, 1;
	or.b32  	%r2095, %r22, %r2094;
	st.local.u32 	[%rd74+260], %r2095;
	and.b32  	%r2096, %r19, 1431655765;
	shl.b32 	%r2097, %r19, 1;
	and.b32  	%r2098, %r2097, -1431655766;
	or.b32  	%r2099, %r2098, %r2096;
	st.local.u32 	[%rd74+264], %r2099;
	and.b32  	%r2100, %r648, -1431655766;
	shr.u32 	%r23, %r2100, 1;
	or.b32  	%r2101, %r23, %r2100;
	st.local.u32 	[%rd74+268], %r2101;
	and.b32  	%r2102, %r738, 1431655765;
	shl.b32 	%r2103, %r738, 1;
	and.b32  	%r2104, %r2103, -1431655766;
	or.b32  	%r2105, %r2104, %r2102;
	st.local.u32 	[%rd74+272], %r2105;
	and.b32  	%r2106, %r739, -1431655766;
	shr.u32 	%r2107, %r2106, 1;
	or.b32  	%r2108, %r2107, %r2106;
	st.local.u32 	[%rd74+276], %r2108;
	and.b32  	%r2109, %r741, 1431655765;
	shl.b32 	%r2110, %r741, 1;
	and.b32  	%r2111, %r2110, -1431655766;
	or.b32  	%r2112, %r2111, %r2109;
	st.local.u32 	[%rd74+280], %r2112;
	and.b32  	%r2113, %r742, -1431655766;
	shr.u32 	%r2114, %r2113, 1;
	or.b32  	%r2115, %r2114, %r2113;
	st.local.u32 	[%rd74+284], %r2115;
	and.b32  	%r2116, %r745, 1431655765;
	shl.b32 	%r2117, %r745, 1;
	and.b32  	%r2118, %r2117, -1431655766;
	or.b32  	%r2119, %r2118, %r2116;
	st.local.u32 	[%rd74+288], %r2119;
	and.b32  	%r2120, %r746, -1431655766;
	shr.u32 	%r2121, %r2120, 1;
	or.b32  	%r2122, %r2121, %r2120;
	st.local.u32 	[%rd74+292], %r2122;
	and.b32  	%r2123, %r749, 1431655765;
	shl.b32 	%r2124, %r749, 1;
	and.b32  	%r2125, %r2124, -1431655766;
	or.b32  	%r2126, %r2125, %r2123;
	st.local.u32 	[%rd74+296], %r2126;
	and.b32  	%r2127, %r750, -1431655766;
	shr.u32 	%r2128, %r2127, 1;
	or.b32  	%r2129, %r2128, %r2127;
	st.local.u32 	[%rd74+300], %r2129;
	and.b32  	%r2130, %r840, 1431655765;
	shl.b32 	%r2131, %r840, 1;
	and.b32  	%r2132, %r2131, -1431655766;
	or.b32  	%r2133, %r2132, %r2130;
	st.local.u32 	[%rd74+304], %r2133;
	and.b32  	%r2134, %r841, -1431655766;
	shr.u32 	%r2135, %r2134, 1;
	or.b32  	%r2136, %r2135, %r2134;
	st.local.u32 	[%rd74+308], %r2136;
	and.b32  	%r2137, %r843, 1431655765;
	shl.b32 	%r2138, %r843, 1;
	and.b32  	%r2139, %r2138, -1431655766;
	or.b32  	%r2140, %r2139, %r2137;
	st.local.u32 	[%rd74+312], %r2140;
	and.b32  	%r2141, %r844, -1431655766;
	shr.u32 	%r2142, %r2141, 1;
	or.b32  	%r2143, %r2142, %r2141;
	st.local.u32 	[%rd74+316], %r2143;
	and.b32  	%r2144, %r847, 1431655765;
	shl.b32 	%r2145, %r847, 1;
	and.b32  	%r2146, %r2145, -1431655766;
	or.b32  	%r2147, %r2146, %r2144;
	st.local.u32 	[%rd74+320], %r2147;
	and.b32  	%r2148, %r848, -1431655766;
	shr.u32 	%r2149, %r2148, 1;
	or.b32  	%r2150, %r2149, %r2148;
	st.local.u32 	[%rd74+324], %r2150;
	and.b32  	%r2151, %r851, 1431655765;
	shl.b32 	%r2152, %r851, 1;
	and.b32  	%r2153, %r2152, -1431655766;
	or.b32  	%r2154, %r2153, %r2151;
	st.local.u32 	[%rd74+328], %r2154;
	and.b32  	%r2155, %r852, -1431655766;
	shr.u32 	%r2156, %r2155, 1;
	or.b32  	%r2157, %r2156, %r2155;
	st.local.u32 	[%rd74+332], %r2157;
	and.b32  	%r2158, %r942, 1431655765;
	shl.b32 	%r2159, %r942, 1;
	and.b32  	%r2160, %r2159, -1431655766;
	or.b32  	%r2161, %r2160, %r2158;
	st.local.u32 	[%rd74+336], %r2161;
	and.b32  	%r2162, %r943, -1431655766;
	shr.u32 	%r2163, %r2162, 1;
	or.b32  	%r2164, %r2163, %r2162;
	st.local.u32 	[%rd74+340], %r2164;
	and.b32  	%r2165, %r945, 1431655765;
	shl.b32 	%r2166, %r945, 1;
	and.b32  	%r2167, %r2166, -1431655766;
	or.b32  	%r2168, %r2167, %r2165;
	st.local.u32 	[%rd74+344], %r2168;
	and.b32  	%r2169, %r946, -1431655766;
	shr.u32 	%r2170, %r2169, 1;
	or.b32  	%r2171, %r2170, %r2169;
	st.local.u32 	[%rd74+348], %r2171;
	and.b32  	%r2172, %r949, 1431655765;
	shl.b32 	%r2173, %r949, 1;
	and.b32  	%r2174, %r2173, -1431655766;
	or.b32  	%r2175, %r2174, %r2172;
	st.local.u32 	[%rd74+352], %r2175;
	and.b32  	%r2176, %r950, -1431655766;
	shr.u32 	%r2177, %r2176, 1;
	or.b32  	%r2178, %r2177, %r2176;
	st.local.u32 	[%rd74+356], %r2178;
	and.b32  	%r2179, %r953, 1431655765;
	shl.b32 	%r2180, %r953, 1;
	and.b32  	%r2181, %r2180, -1431655766;
	or.b32  	%r2182, %r2181, %r2179;
	st.local.u32 	[%rd74+360], %r2182;
	and.b32  	%r2183, %r954, -1431655766;
	shr.u32 	%r2184, %r2183, 1;
	or.b32  	%r2185, %r2184, %r2183;
	st.local.u32 	[%rd74+364], %r2185;
	and.b32  	%r2186, %r1044, 1431655765;
	shl.b32 	%r2187, %r1044, 1;
	and.b32  	%r2188, %r2187, -1431655766;
	or.b32  	%r2189, %r2188, %r2186;
	st.local.u32 	[%rd74+368], %r2189;
	and.b32  	%r2190, %r1045, -1431655766;
	shr.u32 	%r2191, %r2190, 1;
	or.b32  	%r2192, %r2191, %r2190;
	st.local.u32 	[%rd74+372], %r2192;
	and.b32  	%r2193, %r1047, 1431655765;
	shl.b32 	%r2194, %r1047, 1;
	and.b32  	%r2195, %r2194, -1431655766;
	or.b32  	%r2196, %r2195, %r2193;
	st.local.u32 	[%rd74+376], %r2196;
	and.b32  	%r2197, %r1048, -1431655766;
	shr.u32 	%r2198, %r2197, 1;
	or.b32  	%r2199, %r2198, %r2197;
	st.local.u32 	[%rd74+380], %r2199;
	and.b32  	%r2200, %r1051, 1431655765;
	shl.b32 	%r2201, %r1051, 1;
	and.b32  	%r2202, %r2201, -1431655766;
	or.b32  	%r2203, %r2202, %r2200;
	st.local.u32 	[%rd74+384], %r2203;
	and.b32  	%r2204, %r1052, -1431655766;
	shr.u32 	%r2205, %r2204, 1;
	or.b32  	%r2206, %r2205, %r2204;
	st.local.u32 	[%rd74+388], %r2206;
	and.b32  	%r2207, %r1055, 1431655765;
	shl.b32 	%r2208, %r1055, 1;
	and.b32  	%r2209, %r2208, -1431655766;
	or.b32  	%r2210, %r2209, %r2207;
	st.local.u32 	[%rd74+392], %r2210;
	and.b32  	%r2211, %r1056, -1431655766;
	shr.u32 	%r2212, %r2211, 1;
	or.b32  	%r2213, %r2212, %r2211;
	st.local.u32 	[%rd74+396], %r2213;
	and.b32  	%r2214, %r1146, 1431655765;
	shl.b32 	%r2215, %r1146, 1;
	and.b32  	%r2216, %r2215, -1431655766;
	or.b32  	%r2217, %r2216, %r2214;
	st.local.u32 	[%rd74+400], %r2217;
	and.b32  	%r2218, %r1147, -1431655766;
	shr.u32 	%r2219, %r2218, 1;
	or.b32  	%r2220, %r2219, %r2218;
	st.local.u32 	[%rd74+404], %r2220;
	and.b32  	%r2221, %r1149, 1431655765;
	shl.b32 	%r2222, %r1149, 1;
	and.b32  	%r2223, %r2222, -1431655766;
	or.b32  	%r2224, %r2223, %r2221;
	st.local.u32 	[%rd74+408], %r2224;
	and.b32  	%r2225, %r1150, -1431655766;
	shr.u32 	%r2226, %r2225, 1;
	or.b32  	%r2227, %r2226, %r2225;
	st.local.u32 	[%rd74+412], %r2227;
	and.b32  	%r2228, %r1153, 1431655765;
	shl.b32 	%r2229, %r1153, 1;
	and.b32  	%r2230, %r2229, -1431655766;
	or.b32  	%r2231, %r2230, %r2228;
	st.local.u32 	[%rd74+416], %r2231;
	and.b32  	%r2232, %r1154, -1431655766;
	shr.u32 	%r2233, %r2232, 1;
	or.b32  	%r2234, %r2233, %r2232;
	st.local.u32 	[%rd74+420], %r2234;
	and.b32  	%r2235, %r1157, 1431655765;
	shl.b32 	%r2236, %r1157, 1;
	and.b32  	%r2237, %r2236, -1431655766;
	or.b32  	%r2238, %r2237, %r2235;
	st.local.u32 	[%rd74+424], %r2238;
	and.b32  	%r2239, %r1158, -1431655766;
	shr.u32 	%r2240, %r2239, 1;
	or.b32  	%r2241, %r2240, %r2239;
	st.local.u32 	[%rd74+428], %r2241;
	and.b32  	%r2242, %r1248, 1431655765;
	shl.b32 	%r2243, %r1248, 1;
	and.b32  	%r2244, %r2243, -1431655766;
	or.b32  	%r2245, %r2244, %r2242;
	st.local.u32 	[%rd74+432], %r2245;
	and.b32  	%r2246, %r1249, -1431655766;
	shr.u32 	%r2247, %r2246, 1;
	or.b32  	%r2248, %r2247, %r2246;
	st.local.u32 	[%rd74+436], %r2248;
	and.b32  	%r2249, %r1251, 1431655765;
	shl.b32 	%r2250, %r1251, 1;
	and.b32  	%r2251, %r2250, -1431655766;
	or.b32  	%r2252, %r2251, %r2249;
	st.local.u32 	[%rd74+440], %r2252;
	and.b32  	%r2253, %r1252, -1431655766;
	shr.u32 	%r2254, %r2253, 1;
	or.b32  	%r2255, %r2254, %r2253;
	st.local.u32 	[%rd74+444], %r2255;
	and.b32  	%r2256, %r1255, 1431655765;
	shl.b32 	%r2257, %r1255, 1;
	and.b32  	%r2258, %r2257, -1431655766;
	or.b32  	%r2259, %r2258, %r2256;
	st.local.u32 	[%rd74+448], %r2259;
	and.b32  	%r2260, %r1256, -1431655766;
	shr.u32 	%r2261, %r2260, 1;
	or.b32  	%r2262, %r2261, %r2260;
	st.local.u32 	[%rd74+452], %r2262;
	and.b32  	%r2263, %r1259, 1431655765;
	shl.b32 	%r2264, %r1259, 1;
	and.b32  	%r2265, %r2264, -1431655766;
	or.b32  	%r2266, %r2265, %r2263;
	st.local.u32 	[%rd74+456], %r2266;
	and.b32  	%r2267, %r1260, -1431655766;
	shr.u32 	%r2268, %r2267, 1;
	or.b32  	%r2269, %r2268, %r2267;
	st.local.u32 	[%rd74+460], %r2269;
	and.b32  	%r2270, %r1350, 1431655765;
	shl.b32 	%r2271, %r1350, 1;
	and.b32  	%r2272, %r2271, -1431655766;
	or.b32  	%r2273, %r2272, %r2270;
	st.local.u32 	[%rd74+464], %r2273;
	and.b32  	%r2274, %r1351, -1431655766;
	shr.u32 	%r2275, %r2274, 1;
	or.b32  	%r2276, %r2275, %r2274;
	st.local.u32 	[%rd74+468], %r2276;
	and.b32  	%r2277, %r1353, 1431655765;
	shl.b32 	%r2278, %r1353, 1;
	and.b32  	%r2279, %r2278, -1431655766;
	or.b32  	%r2280, %r2279, %r2277;
	st.local.u32 	[%rd74+472], %r2280;
	and.b32  	%r2281, %r1354, -1431655766;
	shr.u32 	%r2282, %r2281, 1;
	or.b32  	%r2283, %r2282, %r2281;
	st.local.u32 	[%rd74+476], %r2283;
	and.b32  	%r2284, %r1357, 1431655765;
	shl.b32 	%r2285, %r1357, 1;
	and.b32  	%r2286, %r2285, -1431655766;
	or.b32  	%r2287, %r2286, %r2284;
	st.local.u32 	[%rd74+480], %r2287;
	and.b32  	%r2288, %r1358, -1431655766;
	shr.u32 	%r2289, %r2288, 1;
	or.b32  	%r2290, %r2289, %r2288;
	st.local.u32 	[%rd74+484], %r2290;
	and.b32  	%r2291, %r1361, 1431655765;
	shl.b32 	%r2292, %r1361, 1;
	and.b32  	%r2293, %r2292, -1431655766;
	or.b32  	%r2294, %r2293, %r2291;
	st.local.u32 	[%rd74+488], %r2294;
	and.b32  	%r2295, %r1362, -1431655766;
	shr.u32 	%r2296, %r2295, 1;
	or.b32  	%r2297, %r2296, %r2295;
	st.local.u32 	[%rd74+492], %r2297;
	and.b32  	%r2298, %r1452, 1431655765;
	shl.b32 	%r2299, %r1452, 1;
	and.b32  	%r2300, %r2299, -1431655766;
	or.b32  	%r2301, %r2300, %r2298;
	st.local.u32 	[%rd74+496], %r2301;
	and.b32  	%r2302, %r1453, -1431655766;
	shr.u32 	%r2303, %r2302, 1;
	or.b32  	%r2304, %r2303, %r2302;
	st.local.u32 	[%rd74+500], %r2304;
	and.b32  	%r2305, %r1455, 1431655765;
	shl.b32 	%r2306, %r1455, 1;
	and.b32  	%r2307, %r2306, -1431655766;
	or.b32  	%r2308, %r2307, %r2305;
	st.local.u32 	[%rd74+504], %r2308;
	and.b32  	%r2309, %r1456, -1431655766;
	shr.u32 	%r2310, %r2309, 1;
	or.b32  	%r2311, %r2310, %r2309;
	st.local.u32 	[%rd74+508], %r2311;
	and.b32  	%r2312, %r1459, 1431655765;
	shl.b32 	%r2313, %r1459, 1;
	and.b32  	%r2314, %r2313, -1431655766;
	or.b32  	%r2315, %r2314, %r2312;
	st.local.u32 	[%rd74+512], %r2315;
	and.b32  	%r2316, %r1460, -1431655766;
	shr.u32 	%r2317, %r2316, 1;
	or.b32  	%r2318, %r2317, %r2316;
	st.local.u32 	[%rd74+516], %r2318;
	and.b32  	%r2319, %r1463, 1431655765;
	shl.b32 	%r2320, %r1463, 1;
	and.b32  	%r2321, %r2320, -1431655766;
	or.b32  	%r2322, %r2321, %r2319;
	st.local.u32 	[%rd74+520], %r2322;
	and.b32  	%r2323, %r1464, -1431655766;
	shr.u32 	%r2324, %r2323, 1;
	or.b32  	%r2325, %r2324, %r2323;
	st.local.u32 	[%rd74+524], %r2325;
	and.b32  	%r2326, %r1554, 1431655765;
	shl.b32 	%r2327, %r1554, 1;
	and.b32  	%r2328, %r2327, -1431655766;
	or.b32  	%r2329, %r2328, %r2326;
	st.local.u32 	[%rd74+528], %r2329;
	and.b32  	%r2330, %r1555, -1431655766;
	shr.u32 	%r2331, %r2330, 1;
	or.b32  	%r2332, %r2331, %r2330;
	st.local.u32 	[%rd74+532], %r2332;
	and.b32  	%r2333, %r1557, 1431655765;
	shl.b32 	%r2334, %r1557, 1;
	and.b32  	%r2335, %r2334, -1431655766;
	or.b32  	%r2336, %r2335, %r2333;
	st.local.u32 	[%rd74+536], %r2336;
	and.b32  	%r2337, %r1558, -1431655766;
	shr.u32 	%r2338, %r2337, 1;
	or.b32  	%r2339, %r2338, %r2337;
	st.local.u32 	[%rd74+540], %r2339;
	and.b32  	%r2340, %r1561, 1431655765;
	shl.b32 	%r2341, %r1561, 1;
	and.b32  	%r2342, %r2341, -1431655766;
	or.b32  	%r2343, %r2342, %r2340;
	st.local.u32 	[%rd74+544], %r2343;
	and.b32  	%r2344, %r1562, -1431655766;
	shr.u32 	%r2345, %r2344, 1;
	or.b32  	%r2346, %r2345, %r2344;
	st.local.u32 	[%rd74+548], %r2346;
	and.b32  	%r2347, %r1565, 1431655765;
	shl.b32 	%r2348, %r1565, 1;
	and.b32  	%r2349, %r2348, -1431655766;
	or.b32  	%r2350, %r2349, %r2347;
	st.local.u32 	[%rd74+552], %r2350;
	and.b32  	%r2351, %r1566, -1431655766;
	shr.u32 	%r2352, %r2351, 1;
	or.b32  	%r2353, %r2352, %r2351;
	st.local.u32 	[%rd74+556], %r2353;
	and.b32  	%r2354, %r1656, 1431655765;
	shl.b32 	%r2355, %r1656, 1;
	and.b32  	%r2356, %r2355, -1431655766;
	or.b32  	%r2357, %r2356, %r2354;
	st.local.u32 	[%rd74+560], %r2357;
	and.b32  	%r2358, %r1657, -1431655766;
	shr.u32 	%r2359, %r2358, 1;
	or.b32  	%r2360, %r2359, %r2358;
	st.local.u32 	[%rd74+564], %r2360;
	and.b32  	%r2361, %r1659, 1431655765;
	shl.b32 	%r2362, %r1659, 1;
	and.b32  	%r2363, %r2362, -1431655766;
	or.b32  	%r2364, %r2363, %r2361;
	st.local.u32 	[%rd74+568], %r2364;
	and.b32  	%r2365, %r1660, -1431655766;
	shr.u32 	%r2366, %r2365, 1;
	or.b32  	%r2367, %r2366, %r2365;
	st.local.u32 	[%rd74+572], %r2367;
	and.b32  	%r2368, %r1663, 1431655765;
	shl.b32 	%r2369, %r1663, 1;
	and.b32  	%r2370, %r2369, -1431655766;
	or.b32  	%r2371, %r2370, %r2368;
	st.local.u32 	[%rd74+576], %r2371;
	and.b32  	%r2372, %r1664, -1431655766;
	shr.u32 	%r2373, %r2372, 1;
	or.b32  	%r2374, %r2373, %r2372;
	st.local.u32 	[%rd74+580], %r2374;
	and.b32  	%r2375, %r1667, 1431655765;
	shl.b32 	%r2376, %r1667, 1;
	and.b32  	%r2377, %r2376, -1431655766;
	or.b32  	%r2378, %r2377, %r2375;
	st.local.u32 	[%rd74+584], %r2378;
	and.b32  	%r2379, %r1668, -1431655766;
	shr.u32 	%r2380, %r2379, 1;
	or.b32  	%r2381, %r2380, %r2379;
	st.local.u32 	[%rd74+588], %r2381;
	and.b32  	%r2382, %r1758, 1431655765;
	shl.b32 	%r2383, %r1758, 1;
	and.b32  	%r2384, %r2383, -1431655766;
	or.b32  	%r2385, %r2384, %r2382;
	st.local.u32 	[%rd74+592], %r2385;
	and.b32  	%r2386, %r1759, -1431655766;
	shr.u32 	%r2387, %r2386, 1;
	or.b32  	%r2388, %r2387, %r2386;
	st.local.u32 	[%rd74+596], %r2388;
	and.b32  	%r2389, %r1761, 1431655765;
	shl.b32 	%r2390, %r1761, 1;
	and.b32  	%r2391, %r2390, -1431655766;
	or.b32  	%r2392, %r2391, %r2389;
	st.local.u32 	[%rd74+600], %r2392;
	and.b32  	%r2393, %r1762, -1431655766;
	shr.u32 	%r2394, %r2393, 1;
	or.b32  	%r2395, %r2394, %r2393;
	st.local.u32 	[%rd74+604], %r2395;
	and.b32  	%r2396, %r1765, 1431655765;
	shl.b32 	%r2397, %r1765, 1;
	and.b32  	%r2398, %r2397, -1431655766;
	or.b32  	%r2399, %r2398, %r2396;
	st.local.u32 	[%rd74+608], %r2399;
	and.b32  	%r2400, %r1766, -1431655766;
	shr.u32 	%r2401, %r2400, 1;
	or.b32  	%r2402, %r2401, %r2400;
	st.local.u32 	[%rd74+612], %r2402;
	and.b32  	%r2403, %r1769, 1431655765;
	shl.b32 	%r2404, %r1769, 1;
	and.b32  	%r2405, %r2404, -1431655766;
	or.b32  	%r2406, %r2405, %r2403;
	st.local.u32 	[%rd74+616], %r2406;
	and.b32  	%r2407, %r1770, -1431655766;
	shr.u32 	%r2408, %r2407, 1;
	or.b32  	%r2409, %r2408, %r2407;
	st.local.u32 	[%rd74+620], %r2409;
	and.b32  	%r2410, %r1860, 1431655765;
	shl.b32 	%r2411, %r1860, 1;
	and.b32  	%r2412, %r2411, -1431655766;
	or.b32  	%r2413, %r2412, %r2410;
	st.local.u32 	[%rd74+624], %r2413;
	and.b32  	%r2414, %r1861, -1431655766;
	shr.u32 	%r2415, %r2414, 1;
	or.b32  	%r2416, %r2415, %r2414;
	st.local.u32 	[%rd74+628], %r2416;
	and.b32  	%r2417, %r1863, 1431655765;
	shl.b32 	%r2418, %r1863, 1;
	and.b32  	%r2419, %r2418, -1431655766;
	or.b32  	%r2420, %r2419, %r2417;
	st.local.u32 	[%rd74+632], %r2420;
	and.b32  	%r2421, %r1864, -1431655766;
	shr.u32 	%r2422, %r2421, 1;
	or.b32  	%r2423, %r2422, %r2421;
	st.local.u32 	[%rd74+636], %r2423;
	and.b32  	%r2424, %r1867, 1431655765;
	shl.b32 	%r2425, %r1867, 1;
	and.b32  	%r2426, %r2425, -1431655766;
	or.b32  	%r2427, %r2426, %r2424;
	st.local.u32 	[%rd74+640], %r2427;
	and.b32  	%r2428, %r1868, -1431655766;
	shr.u32 	%r2429, %r2428, 1;
	or.b32  	%r2430, %r2429, %r2428;
	st.local.u32 	[%rd74+644], %r2430;
	and.b32  	%r2431, %r1871, 1431655765;
	shl.b32 	%r2432, %r1871, 1;
	and.b32  	%r2433, %r2432, -1431655766;
	or.b32  	%r2434, %r2433, %r2431;
	st.local.u32 	[%rd74+648], %r2434;
	and.b32  	%r2435, %r1872, -1431655766;
	shr.u32 	%r2436, %r2435, 1;
	or.b32  	%r2437, %r2436, %r2435;
	st.local.u32 	[%rd74+652], %r2437;
	and.b32  	%r2438, %r1962, 1431655765;
	shl.b32 	%r2439, %r1962, 1;
	and.b32  	%r2440, %r2439, -1431655766;
	or.b32  	%r2441, %r2440, %r2438;
	st.local.u32 	[%rd74+656], %r2441;
	and.b32  	%r2442, %r1963, -1431655766;
	shr.u32 	%r2443, %r2442, 1;
	or.b32  	%r2444, %r2443, %r2442;
	st.local.u32 	[%rd74+660], %r2444;
	and.b32  	%r2445, %r1965, 1431655765;
	shl.b32 	%r2446, %r1965, 1;
	and.b32  	%r2447, %r2446, -1431655766;
	or.b32  	%r2448, %r2447, %r2445;
	st.local.u32 	[%rd74+664], %r2448;
	and.b32  	%r2449, %r1966, -1431655766;
	shr.u32 	%r2450, %r2449, 1;
	or.b32  	%r2451, %r2450, %r2449;
	st.local.u32 	[%rd74+668], %r2451;
	and.b32  	%r2452, %r1969, 1431655765;
	shl.b32 	%r2453, %r1969, 1;
	and.b32  	%r2454, %r2453, -1431655766;
	or.b32  	%r2455, %r2454, %r2452;
	st.local.u32 	[%rd74+672], %r2455;
	and.b32  	%r2456, %r1970, -1431655766;
	shr.u32 	%r2457, %r2456, 1;
	or.b32  	%r2458, %r2457, %r2456;
	st.local.u32 	[%rd74+676], %r2458;
	and.b32  	%r2459, %r1973, 1431655765;
	shl.b32 	%r2460, %r1973, 1;
	and.b32  	%r2461, %r2460, -1431655766;
	or.b32  	%r2462, %r2461, %r2459;
	st.local.u32 	[%rd74+680], %r2462;
	and.b32  	%r2463, %r1974, -1431655766;
	shr.u32 	%r2464, %r2463, 1;
	or.b32  	%r2465, %r2464, %r2463;
	st.local.u32 	[%rd74+684], %r2465;
	and.b32  	%r2466, %r2064, 1431655765;
	shl.b32 	%r2467, %r2064, 1;
	and.b32  	%r2468, %r2467, -1431655766;
	or.b32  	%r2469, %r2468, %r2466;
	st.local.u32 	[%rd74+688], %r2469;
	and.b32  	%r2470, %r2065, -1431655766;
	shr.u32 	%r2471, %r2470, 1;
	or.b32  	%r2472, %r2471, %r2470;
	st.local.u32 	[%rd74+692], %r2472;
	and.b32  	%r2473, %r2067, 1431655765;
	shl.b32 	%r2474, %r2067, 1;
	and.b32  	%r2475, %r2474, -1431655766;
	or.b32  	%r2476, %r2475, %r2473;
	st.local.u32 	[%rd74+696], %r2476;
	and.b32  	%r2477, %r2068, -1431655766;
	shr.u32 	%r2478, %r2477, 1;
	or.b32  	%r2479, %r2478, %r2477;
	st.local.u32 	[%rd74+700], %r2479;
	and.b32  	%r2480, %r2071, 1431655765;
	shl.b32 	%r2481, %r2071, 1;
	and.b32  	%r2482, %r2481, -1431655766;
	or.b32  	%r2483, %r2482, %r2480;
	st.local.u32 	[%rd74+704], %r2483;
	and.b32  	%r2484, %r2072, -1431655766;
	shr.u32 	%r2485, %r2484, 1;
	or.b32  	%r2486, %r2485, %r2484;
	st.local.u32 	[%rd74+708], %r2486;
	and.b32  	%r2487, %r2075, 1431655765;
	shl.b32 	%r2488, %r2075, 1;
	and.b32  	%r2489, %r2488, -1431655766;
	or.b32  	%r2490, %r2489, %r2487;
	st.local.u32 	[%rd74+712], %r2490;
	and.b32  	%r2491, %r2076, -1431655766;
	shr.u32 	%r2492, %r2491, 1;
	or.b32  	%r2493, %r2492, %r2491;
	st.local.u32 	[%rd74+716], %r2493;
	ld.global.v4.u16 	{%rs2, %rs3, %rs4, %rs5}, [%rd13+208];
	shr.u16 	%rs7, %rs2, 8;
	shr.u16 	%rs9, %rs3, 8;
	shr.u16 	%rs11, %rs4, 8;
	shr.u16 	%rs13, %rs5, 8;
	ld.global.v4.u16 	{%rs14, %rs15, %rs16, %rs17}, [%rd13+216];
	shr.u16 	%rs19, %rs14, 8;
	shr.u16 	%rs21, %rs15, 8;
	shr.u16 	%rs23, %rs16, 8;
	shr.u16 	%rs25, %rs17, 8;
	cvt.u32.u16 	%r2494, %rs2;
	and.b32  	%r2495, %r2494, 255;
	cvt.u32.u16 	%r2496, %rs7;
	prmt.b32 	%r2497, %r2496, %r2495, 30212;
	cvt.u32.u16 	%r2498, %rs3;
	prmt.b32 	%r2499, %r2498, %r2497, 28756;
	cvt.u32.u16 	%r2500, %rs9;
	prmt.b32 	%r2501, %r2500, %r2499, 1620;
	cvt.u32.u16 	%r2502, %rs4;
	and.b32  	%r2503, %r2502, 255;
	cvt.u32.u16 	%r2504, %rs11;
	prmt.b32 	%r2505, %r2504, %r2503, 30212;
	cvt.u32.u16 	%r2506, %rs5;
	prmt.b32 	%r2507, %r2506, %r2505, 28756;
	cvt.u32.u16 	%r2508, %rs13;
	prmt.b32 	%r2509, %r2508, %r2507, 1620;
	cvt.u32.u16 	%r2510, %rs14;
	and.b32  	%r2511, %r2510, 255;
	cvt.u32.u16 	%r2512, %rs19;
	prmt.b32 	%r2513, %r2512, %r2511, 30212;
	cvt.u32.u16 	%r2514, %rs15;
	prmt.b32 	%r2515, %r2514, %r2513, 28756;
	cvt.u32.u16 	%r2516, %rs21;
	prmt.b32 	%r2517, %r2516, %r2515, 1620;
	cvt.u32.u16 	%r2518, %rs16;
	and.b32  	%r2519, %r2518, 255;
	cvt.u32.u16 	%r2520, %rs23;
	prmt.b32 	%r2521, %r2520, %r2519, 30212;
	cvt.u32.u16 	%r2522, %rs17;
	prmt.b32 	%r2523, %r2522, %r2521, 28756;
	cvt.u32.u16 	%r2524, %rs25;
	prmt.b32 	%r2525, %r2524, %r2523, 1620;
	and.b32  	%r2526, %r2501, -1431655766;
	shr.u32 	%r2527, %r2526, 3;
	shr.u32 	%r2528, %r2526, 1;
	and.b32  	%r2529, %r2509, -2004318072;
	and.b32  	%r2530, %r2517, -1431655766;
	shr.u32 	%r2531, %r2530, 3;
	shr.u32 	%r2532, %r2530, 1;
	and.b32  	%r2533, %r2525, -2004318072;
	and.b32  	%r2534, %r2501, 286331153;
	shl.b32 	%r2535, %r2509, 2;
	and.b32  	%r2536, %r2535, 1145324612;
	or.b32  	%r2537, %r2536, %r2534;
	and.b32  	%r2538, %r2501, 1145324612;
	shr.u32 	%r2539, %r2538, 2;
	and.b32  	%r2540, %r2509, 1145324612;
	or.b32  	%r2541, %r2539, %r2540;
	and.b32  	%r2542, %r2528, 286331153;
	shl.b32 	%r2543, %r2509, 1;
	and.b32  	%r2544, %r2543, 1145324612;
	or.b32  	%r2545, %r2544, %r2542;
	and.b32  	%r2546, %r2527, 286331153;
	shr.u32 	%r2547, %r2529, 1;
	or.b32  	%r2548, %r2546, %r2547;
	and.b32  	%r2549, %r2517, 286331153;
	shl.b32 	%r2550, %r2525, 2;
	and.b32  	%r2551, %r2550, 1145324612;
	or.b32  	%r2552, %r2551, %r2549;
	and.b32  	%r2553, %r2517, 1145324612;
	shr.u32 	%r2554, %r2553, 2;
	and.b32  	%r2555, %r2525, 1145324612;
	or.b32  	%r2556, %r2554, %r2555;
	and.b32  	%r2557, %r2532, 286331153;
	shl.b32 	%r2558, %r2525, 1;
	and.b32  	%r2559, %r2558, 1145324612;
	or.b32  	%r2560, %r2559, %r2557;
	and.b32  	%r2561, %r2531, 286331153;
	shr.u32 	%r2562, %r2533, 1;
	or.b32  	%r2563, %r2561, %r2562;
	and.b32  	%r2564, %r2537, 84215045;
	shl.b32 	%r2565, %r2552, 4;
	and.b32  	%r2566, %r2565, 1347440720;
	or.b32  	%r2567, %r2566, %r2564;
	and.b32  	%r2568, %r2537, 1347440720;
	shr.u32 	%r2569, %r2568, 4;
	and.b32  	%r2570, %r2552, 1347440720;
	or.b32  	%r2571, %r2569, %r2570;
	and.b32  	%r2572, %r2545, 84215045;
	shl.b32 	%r2573, %r2560, 4;
	and.b32  	%r2574, %r2573, 1347440720;
	or.b32  	%r2575, %r2574, %r2572;
	and.b32  	%r2576, %r2545, 1347440720;
	shr.u32 	%r2577, %r2576, 4;
	and.b32  	%r2578, %r2560, 1347440720;
	or.b32  	%r2579, %r2577, %r2578;
	and.b32  	%r2580, %r2541, 84215045;
	shl.b32 	%r2581, %r2556, 4;
	and.b32  	%r2582, %r2581, 1347440720;
	or.b32  	%r2583, %r2582, %r2580;
	and.b32  	%r2584, %r2541, 1347440720;
	shr.u32 	%r2585, %r2584, 4;
	and.b32  	%r2586, %r2556, 1347440720;
	or.b32  	%r2587, %r2585, %r2586;
	and.b32  	%r2588, %r2548, 84215045;
	shl.b32 	%r2589, %r2563, 4;
	and.b32  	%r2590, %r2589, 1347440720;
	or.b32  	%r2591, %r2590, %r2588;
	and.b32  	%r2592, %r2548, 1347440720;
	shr.u32 	%r2593, %r2592, 4;
	and.b32  	%r2594, %r2563, 1347440720;
	or.b32  	%r2595, %r2593, %r2594;
	xor.b32  	%r7083, %r2567, %r2469;
	xor.b32  	%r7084, %r2575, %r2472;
	xor.b32  	%r7085, %r2583, %r2476;
	xor.b32  	%r7086, %r2591, %r2479;
	xor.b32  	%r7087, %r2571, %r2483;
	xor.b32  	%r7088, %r2579, %r2486;
	xor.b32  	%r7089, %r2587, %r2490;
	xor.b32  	%r7090, %r2595, %r2493;

$L__BB5_8:
	shl.b32 	%r2596, %r7083, 2;
	and.b32  	%r2597, %r2596, 64512;
	and.b32  	%r2598, %r7083, 255;
	or.b32  	%r2599, %r2597, %r2598;
	and.b32  	%r2600, %r7083, 49152;
	shr.u32 	%r2601, %r2600, 6;
	or.b32  	%r2602, %r2599, %r2601;
	shl.b32 	%r2603, %r7083, 4;
	and.b32  	%r2604, %r2603, 15728640;
	or.b32  	%r2605, %r2602, %r2604;
	and.b32  	%r2606, %r7083, 15728640;
	shr.u32 	%r2607, %r2606, 4;
	or.b32  	%r2608, %r2605, %r2607;
	shl.b32 	%r2609, %r7083, 6;
	and.b32  	%r2610, %r2609, -1073741824;
	or.b32  	%r2611, %r2608, %r2610;
	and.b32  	%r2612, %r7083, -67108864;
	shr.u32 	%r2613, %r2612, 2;
	or.b32  	%r2614, %r2611, %r2613;
	shl.b32 	%r2615, %r7084, 2;
	and.b32  	%r2616, %r2615, 64512;
	and.b32  	%r2617, %r7084, 255;
	or.b32  	%r2618, %r2616, %r2617;
	and.b32  	%r2619, %r7084, 49152;
	shr.u32 	%r2620, %r2619, 6;
	or.b32  	%r2621, %r2618, %r2620;
	shl.b32 	%r2622, %r7084, 4;
	and.b32  	%r2623, %r2622, 15728640;
	or.b32  	%r2624, %r2621, %r2623;
	and.b32  	%r2625, %r7084, 15728640;
	shr.u32 	%r2626, %r2625, 4;
	or.b32  	%r2627, %r2624, %r2626;
	shl.b32 	%r2628, %r7084, 6;
	and.b32  	%r2629, %r2628, -1073741824;
	or.b32  	%r2630, %r2627, %r2629;
	and.b32  	%r2631, %r7084, -67108864;
	shr.u32 	%r2632, %r2631, 2;
	or.b32  	%r2633, %r2630, %r2632;
	shl.b32 	%r2634, %r7085, 2;
	and.b32  	%r2635, %r2634, 64512;
	and.b32  	%r2636, %r7085, 255;
	or.b32  	%r2637, %r2635, %r2636;
	and.b32  	%r2638, %r7085, 49152;
	shr.u32 	%r2639, %r2638, 6;
	or.b32  	%r2640, %r2637, %r2639;
	shl.b32 	%r2641, %r7085, 4;
	and.b32  	%r2642, %r2641, 15728640;
	or.b32  	%r2643, %r2640, %r2642;
	and.b32  	%r2644, %r7085, 15728640;
	shr.u32 	%r2645, %r2644, 4;
	or.b32  	%r2646, %r2643, %r2645;
	shl.b32 	%r2647, %r7085, 6;
	and.b32  	%r2648, %r2647, -1073741824;
	or.b32  	%r2649, %r2646, %r2648;
	and.b32  	%r2650, %r7085, -67108864;
	shr.u32 	%r2651, %r2650, 2;
	or.b32  	%r2652, %r2649, %r2651;
	shl.b32 	%r2653, %r7086, 2;
	and.b32  	%r2654, %r2653, 64512;
	and.b32  	%r2655, %r7086, 255;
	or.b32  	%r2656, %r2654, %r2655;
	and.b32  	%r2657, %r7086, 49152;
	shr.u32 	%r2658, %r2657, 6;
	or.b32  	%r2659, %r2656, %r2658;
	shl.b32 	%r2660, %r7086, 4;
	and.b32  	%r2661, %r2660, 15728640;
	or.b32  	%r2662, %r2659, %r2661;
	and.b32  	%r2663, %r7086, 15728640;
	shr.u32 	%r2664, %r2663, 4;
	or.b32  	%r2665, %r2662, %r2664;
	shl.b32 	%r2666, %r7086, 6;
	and.b32  	%r2667, %r2666, -1073741824;
	or.b32  	%r2668, %r2665, %r2667;
	and.b32  	%r2669, %r7086, -67108864;
	shr.u32 	%r2670, %r2669, 2;
	or.b32  	%r2671, %r2668, %r2670;
	shl.b32 	%r2672, %r7087, 2;
	and.b32  	%r2673, %r2672, 64512;
	and.b32  	%r2674, %r7087, 255;
	or.b32  	%r2675, %r2673, %r2674;
	and.b32  	%r2676, %r7087, 49152;
	shr.u32 	%r2677, %r2676, 6;
	or.b32  	%r2678, %r2675, %r2677;
	shl.b32 	%r2679, %r7087, 4;
	and.b32  	%r2680, %r2679, 15728640;
	or.b32  	%r2681, %r2678, %r2680;
	and.b32  	%r2682, %r7087, 15728640;
	shr.u32 	%r2683, %r2682, 4;
	or.b32  	%r2684, %r2681, %r2683;
	shl.b32 	%r2685, %r7087, 6;
	and.b32  	%r2686, %r2685, -1073741824;
	or.b32  	%r2687, %r2684, %r2686;
	and.b32  	%r2688, %r7087, -67108864;
	shr.u32 	%r2689, %r2688, 2;
	or.b32  	%r2690, %r2687, %r2689;
	shl.b32 	%r2691, %r7088, 2;
	and.b32  	%r2692, %r2691, 64512;
	and.b32  	%r2693, %r7088, 255;
	or.b32  	%r2694, %r2692, %r2693;
	and.b32  	%r2695, %r7088, 49152;
	shr.u32 	%r2696, %r2695, 6;
	or.b32  	%r2697, %r2694, %r2696;
	shl.b32 	%r2698, %r7088, 4;
	and.b32  	%r2699, %r2698, 15728640;
	or.b32  	%r2700, %r2697, %r2699;
	and.b32  	%r2701, %r7088, 15728640;
	shr.u32 	%r2702, %r2701, 4;
	or.b32  	%r2703, %r2700, %r2702;
	shl.b32 	%r2704, %r7088, 6;
	and.b32  	%r2705, %r2704, -1073741824;
	or.b32  	%r2706, %r2703, %r2705;
	and.b32  	%r2707, %r7088, -67108864;
	shr.u32 	%r2708, %r2707, 2;
	or.b32  	%r2709, %r2706, %r2708;
	shl.b32 	%r2710, %r7089, 2;
	and.b32  	%r2711, %r2710, 64512;
	and.b32  	%r2712, %r7089, 255;
	or.b32  	%r2713, %r2711, %r2712;
	and.b32  	%r2714, %r7089, 49152;
	shr.u32 	%r2715, %r2714, 6;
	or.b32  	%r2716, %r2713, %r2715;
	shl.b32 	%r2717, %r7089, 4;
	and.b32  	%r2718, %r2717, 15728640;
	or.b32  	%r2719, %r2716, %r2718;
	and.b32  	%r2720, %r7089, 15728640;
	shr.u32 	%r2721, %r2720, 4;
	or.b32  	%r2722, %r2719, %r2721;
	shl.b32 	%r2723, %r7089, 6;
	and.b32  	%r2724, %r2723, -1073741824;
	or.b32  	%r2725, %r2722, %r2724;
	and.b32  	%r2726, %r7089, -67108864;
	shr.u32 	%r2727, %r2726, 2;
	or.b32  	%r2728, %r2725, %r2727;
	shl.b32 	%r2729, %r7090, 2;
	and.b32  	%r2730, %r2729, 64512;
	and.b32  	%r2731, %r7090, 255;
	or.b32  	%r2732, %r2730, %r2731;
	and.b32  	%r2733, %r7090, 49152;
	shr.u32 	%r2734, %r2733, 6;
	or.b32  	%r2735, %r2732, %r2734;
	shl.b32 	%r2736, %r7090, 4;
	and.b32  	%r2737, %r2736, 15728640;
	or.b32  	%r2738, %r2735, %r2737;
	and.b32  	%r2739, %r7090, 15728640;
	shr.u32 	%r2740, %r2739, 4;
	or.b32  	%r2741, %r2738, %r2740;
	shl.b32 	%r2742, %r7090, 6;
	and.b32  	%r2743, %r2742, -1073741824;
	or.b32  	%r2744, %r2741, %r2743;
	and.b32  	%r2745, %r7090, -67108864;
	shr.u32 	%r2746, %r2745, 2;
	or.b32  	%r2747, %r2744, %r2746;
	xor.b32  	%r2748, %r2671, %r2614;
	xor.b32  	%r2749, %r2690, %r2633;
	not.b32 	%r2750, %r2709;
	not.b32 	%r2751, %r2728;
	not.b32 	%r2752, %r2749;
	xor.b32  	%r2753, %r2752, %r2751;
	not.b32 	%r2754, %r2748;
	xor.b32  	%r2755, %r2754, %r2750;
	xor.b32  	%r2756, %r2690, %r2652;
	xor.b32  	%r2757, %r2756, %r2747;
	xor.b32  	%r2758, %r2671, %r2633;
	xor.b32  	%r2759, %r2758, %r2728;
	xor.b32  	%r2760, %r2652, %r2614;
	xor.b32  	%r2761, %r2760, %r2709;
	xor.b32  	%r2762, %r2752, %r2747;
	xor.b32  	%r2763, %r2754, %r2751;
	xor.b32  	%r2764, %r2652, %r2750;
	xor.b32  	%r2765, %r2764, %r2747;
	xor.b32  	%r2766, %r2762, %r2759;
	xor.b32  	%r2767, %r2754, %r2752;
	xor.b32  	%r2768, %r2759, %r2753;
	xor.b32  	%r2769, %r2747, %r2751;
	xor.b32  	%r2770, %r2757, %r2755;
	xor.b32  	%r2771, %r2765, %r2770;
	xor.b32  	%r2772, %r2771, %r2759;
	xor.b32  	%r2773, %r2767, %r2766;
	xor.b32  	%r2774, %r2771, %r2753;
	xor.b32  	%r2775, %r2771, %r2763;
	xor.b32  	%r2776, %r2775, %r2769;
	xor.b32  	%r2777, %r2773, %r2761;
	xor.b32  	%r2778, %r2777, %r2762;
	xor.b32  	%r2779, %r2777, %r2755;
	xor.b32  	%r2780, %r2778, %r2765;
	xor.b32  	%r2781, %r2778, %r2770;
	xor.b32  	%r2782, %r2779, %r2768;
	xor.b32  	%r2783, %r2782, %r2765;
	xor.b32  	%r2784, %r2781, %r2782;
	xor.b32  	%r2785, %r2782, %r2770;
	and.b32  	%r2786, %r2778, %r2773;
	and.b32  	%r2787, %r2780, %r2776;
	and.b32  	%r2788, %r2772, %r2765;
	and.b32  	%r2789, %r2785, %r2767;
	and.b32  	%r2790, %r2775, %r2771;
	and.b32  	%r2791, %r2783, %r2774;
	and.b32  	%r2792, %r2782, %r2768;
	and.b32  	%r2793, %r2784, %r2766;
	xor.b32  	%r2794, %r2793, %r2792;
	and.b32  	%r2795, %r2781, %r2769;
	xor.b32  	%r2796, %r2795, %r2792;
	xor.b32  	%r2797, %r2786, %r2779;
	xor.b32  	%r2798, %r2797, %r2787;
	xor.b32  	%r2799, %r2798, %r2794;
	xor.b32  	%r2800, %r2788, %r2769;
	xor.b32  	%r2801, %r2800, %r2781;
	xor.b32  	%r2802, %r2801, %r2786;
	xor.b32  	%r2803, %r2802, %r2796;
	xor.b32  	%r2804, %r2790, %r2767;
	xor.b32  	%r2805, %r2804, %r2785;
	xor.b32  	%r2806, %r2805, %r2789;
	xor.b32  	%r2807, %r2806, %r2794;
	xor.b32  	%r2808, %r2785, %r2753;
	xor.b32  	%r2809, %r2808, %r2789;
	xor.b32  	%r2810, %r2809, %r2791;
	xor.b32  	%r2811, %r2810, %r2796;
	xor.b32  	%r2812, %r2799, %r2803;
	and.b32  	%r2813, %r2799, %r2807;
	xor.b32  	%r2814, %r2813, %r2811;
	and.b32  	%r2815, %r2814, %r2812;
	xor.b32  	%r2816, %r2815, %r2803;
	xor.b32  	%r2817, %r2807, %r2811;
	xor.b32  	%r2818, %r2813, %r2803;
	and.b32  	%r2819, %r2818, %r2817;
	xor.b32  	%r2820, %r2819, %r2811;
	xor.b32  	%r2821, %r2820, %r2807;
	xor.b32  	%r2822, %r2819, %r2813;
	and.b32  	%r2823, %r2822, %r2811;
	xor.b32  	%r2824, %r2821, %r2823;
	xor.b32  	%r2825, %r2823, %r2814;
	and.b32  	%r2826, %r2825, %r2816;
	xor.b32  	%r2827, %r2826, %r2812;
	xor.b32  	%r2828, %r2827, %r2824;
	xor.b32  	%r2829, %r2816, %r2820;
	xor.b32  	%r2830, %r2827, %r2816;
	xor.b32  	%r2831, %r2823, %r2807;
	xor.b32  	%r2832, %r2828, %r2829;
	and.b32  	%r2833, %r2831, %r2778;
	and.b32  	%r2834, %r2824, %r2780;
	and.b32  	%r2835, %r2820, %r2765;
	and.b32  	%r2836, %r2830, %r2785;
	and.b32  	%r2837, %r2827, %r2771;
	and.b32  	%r2838, %r2816, %r2783;
	and.b32  	%r2839, %r2829, %r2782;
	and.b32  	%r2840, %r2832, %r2784;
	and.b32  	%r2841, %r2828, %r2781;
	and.b32  	%r2842, %r2831, %r2773;
	and.b32  	%r2843, %r2824, %r2776;
	and.b32  	%r2844, %r2820, %r2772;
	and.b32  	%r2845, %r2830, %r2767;
	and.b32  	%r2846, %r2827, %r2775;
	and.b32  	%r2847, %r2816, %r2774;
	and.b32  	%r2848, %r2829, %r2768;
	and.b32  	%r2849, %r2832, %r2766;
	and.b32  	%r2850, %r2828, %r2769;
	xor.b32  	%r2851, %r2849, %r2848;
	xor.b32  	%r2852, %r2843, %r2844;
	xor.b32  	%r2853, %r2846, %r2838;
	xor.b32  	%r2854, %r2842, %r2843;
	xor.b32  	%r2855, %r2845, %r2835;
	xor.b32  	%r2856, %r2835, %r2838;
	xor.b32  	%r2857, %r2840, %r2841;
	xor.b32  	%r2858, %r2836, %r2833;
	xor.b32  	%r2859, %r2845, %r2853;
	xor.b32  	%r2860, %r2855, %r2858;
	xor.b32  	%r2861, %r2851, %r2837;
	xor.b32  	%r2862, %r2836, %r2839;
	xor.b32  	%r2863, %r2862, %r2840;
	xor.b32  	%r2864, %r2851, %r2860;
	xor.b32  	%r2865, %r2860, %r2847;
	xor.b32  	%r2866, %r2857, %r2861;
	xor.b32  	%r2867, %r2854, %r2861;
	xor.b32  	%r2868, %r2863, %r2837;
	xor.b32  	%r2869, %r2865, %r2866;
	xor.b32  	%r2870, %r2867, %r2834;
	xor.b32  	%r2871, %r2867, %r2863;
	xor.b32  	%r2872, %r2870, %r2858;
	xor.b32  	%r2873, %r2866, %r2859;
	xor.b32  	%r2874, %r2872, %r2868;
	xor.b32  	%r2875, %r2873, %r2874;
	xor.b32  	%r2876, %r2852, %r2869;
	xor.b32  	%r2877, %r2849, %r2850;
	xor.b32  	%r2878, %r2877, %r2868;
	xor.b32  	%r2879, %r2864, %r2853;
	xor.b32  	%r2880, %r2878, %r2869;
	xor.b32  	%r2881, %r2879, %r2880;
	xor.b32  	%r2882, %r2881, %r2876;
	xor.b32  	%r2883, %r2856, %r2870;
	xor.b32  	%r2884, %r2875, %r2883;
	xor.b32  	%r2885, %r2868, %r2873;
	xor.b32  	%r2886, %r2881, %r2883;
	xor.b32  	%r2887, %r2871, %r2872;
	xor.b32  	%r2888, %r2887, %r2876;
	xor.b32  	%r2889, %r2887, %r2873;
	xor.b32  	%r2890, %r2879, %r2874;
	xor.b32  	%r2891, %r2890, %r2883;
	xor.b32  	%r2892, %r2871, %r2880;
	xor.b32  	%r2893, %r2892, %r2876;
	ld.local.u32 	%r2894, [%rd74+656];
	xor.b32  	%r2895, %r2893, %r2894;
	ld.local.u32 	%r2896, [%rd74+660];
	xor.b32  	%r2897, %r2891, %r2896;
	ld.local.u32 	%r2898, [%rd74+664];
	xor.b32  	%r2899, %r2889, %r2898;
	ld.local.u32 	%r2900, [%rd74+668];
	xor.b32  	%r2901, %r2882, %r2900;
	ld.local.u32 	%r2902, [%rd74+672];
	xor.b32  	%r2903, %r2884, %r2902;
	ld.local.u32 	%r2904, [%rd74+676];
	xor.b32  	%r2905, %r2888, %r2904;
	ld.local.u32 	%r2906, [%rd74+680];
	xor.b32  	%r2907, %r2886, %r2906;
	ld.local.u32 	%r2908, [%rd74+684];
	xor.b32  	%r2909, %r2885, %r2908;
	shf.l.wrap.b32 	%r2910, %r2895, %r2895, 24;
	shf.l.wrap.b32 	%r2911, %r2897, %r2897, 24;
	shf.l.wrap.b32 	%r2912, %r2899, %r2899, 24;
	shf.l.wrap.b32 	%r2913, %r2901, %r2901, 24;
	shf.l.wrap.b32 	%r2914, %r2903, %r2903, 24;
	shf.l.wrap.b32 	%r2915, %r2905, %r2905, 24;
	shf.l.wrap.b32 	%r2916, %r2907, %r2907, 24;
	shf.l.wrap.b32 	%r2917, %r2909, %r2909, 24;
	xor.b32  	%r2918, %r2905, %r2895;
	xor.b32  	%r2919, %r2907, %r2910;
	xor.b32  	%r2920, %r2919, %r2918;
	xor.b32  	%r2921, %r2920, %r2915;
	shf.l.wrap.b32 	%r2922, %r2921, %r2921, 16;
	xor.b32  	%r2923, %r2905, %r2910;
	xor.b32  	%r2924, %r2923, %r2907;
	xor.b32  	%r2925, %r2924, %r2909;
	xor.b32  	%r2926, %r2925, %r2915;
	xor.b32  	%r2927, %r2926, %r2917;
	xor.b32  	%r7083, %r2927, %r2922;
	xor.b32  	%r2928, %r2911, %r2897;
	xor.b32  	%r2929, %r2928, %r2905;
	xor.b32  	%r2930, %r2929, %r2909;
	xor.b32  	%r2931, %r2930, %r2915;
	xor.b32  	%r2932, %r2931, %r2916;
	shf.l.wrap.b32 	%r2933, %r2932, %r2932, 16;
	xor.b32  	%r2934, %r2911, %r2910;
	xor.b32  	%r2935, %r2934, %r2918;
	xor.b32  	%r2936, %r2935, %r2915;
	xor.b32  	%r2937, %r2936, %r2916;
	xor.b32  	%r2938, %r2937, %r2917;
	xor.b32  	%r7084, %r2938, %r2933;
	xor.b32  	%r2939, %r2897, %r2895;
	xor.b32  	%r2940, %r2899, %r2895;
	xor.b32  	%r2941, %r2940, %r2912;
	xor.b32  	%r2942, %r2941, %r2907;
	xor.b32  	%r2943, %r2942, %r2916;
	xor.b32  	%r2944, %r2943, %r2917;
	shf.l.wrap.b32 	%r2945, %r2944, %r2944, 16;
	xor.b32  	%r2946, %r2911, %r2939;
	xor.b32  	%r2947, %r2946, %r2912;
	xor.b32  	%r2948, %r2947, %r2907;
	xor.b32  	%r2949, %r2948, %r2916;
	xor.b32  	%r2950, %r2949, %r2917;
	xor.b32  	%r7085, %r2950, %r2945;
	xor.b32  	%r2951, %r2939, %r2899;
	xor.b32  	%r2952, %r2910, %r2939;
	xor.b32  	%r2953, %r2952, %r2901;
	xor.b32  	%r2954, %r2953, %r2905;
	xor.b32  	%r2955, %r2954, %r2913;
	xor.b32  	%r2956, %r2955, %r2907;
	xor.b32  	%r2957, %r2956, %r2909;
	xor.b32  	%r2958, %r2957, %r2915;
	xor.b32  	%r2959, %r2958, %r2917;
	shf.l.wrap.b32 	%r2960, %r2959, %r2959, 16;
	xor.b32  	%r2961, %r2951, %r2910;
	xor.b32  	%r2962, %r2961, %r2912;
	xor.b32  	%r2963, %r2962, %r2905;
	xor.b32  	%r2964, %r2963, %r2913;
	xor.b32  	%r2965, %r2964, %r2907;
	xor.b32  	%r2966, %r2965, %r2915;
	xor.b32  	%r7086, %r2966, %r2960;
	xor.b32  	%r2967, %r2899, %r2897;
	xor.b32  	%r2968, %r2967, %r2901;
	xor.b32  	%r2969, %r2911, %r2967;
	xor.b32  	%r2970, %r2969, %r2903;
	xor.b32  	%r2971, %r2970, %r2905;
	xor.b32  	%r2972, %r2971, %r2914;
	xor.b32  	%r2973, %r2972, %r2909;
	xor.b32  	%r2974, %r2973, %r2915;
	xor.b32  	%r2975, %r2974, %r2916;
	shf.l.wrap.b32 	%r2976, %r2975, %r2975, 16;
	xor.b32  	%r2977, %r2968, %r2911;
	xor.b32  	%r2978, %r2977, %r2905;
	xor.b32  	%r2979, %r2978, %r2913;
	xor.b32  	%r2980, %r2979, %r2914;
	xor.b32  	%r2981, %r2980, %r2915;
	xor.b32  	%r2982, %r2981, %r2916;
	xor.b32  	%r2983, %r2982, %r2917;
	xor.b32  	%r7087, %r2983, %r2976;
	xor.b32  	%r2984, %r2901, %r2899;
	xor.b32  	%r2985, %r2984, %r2903;
	xor.b32  	%r2986, %r2912, %r2984;
	xor.b32  	%r2987, %r2986, %r2905;
	xor.b32  	%r2988, %r2987, %r2907;
	xor.b32  	%r2989, %r2988, %r2915;
	xor.b32  	%r2990, %r2989, %r2916;
	xor.b32  	%r2991, %r2990, %r2917;
	shf.l.wrap.b32 	%r2992, %r2991, %r2991, 16;
	xor.b32  	%r2993, %r2985, %r2912;
	xor.b32  	%r2994, %r2993, %r2907;
	xor.b32  	%r2995, %r2994, %r2914;
	xor.b32  	%r2996, %r2995, %r2915;
	xor.b32  	%r2997, %r2996, %r2916;
	xor.b32  	%r2998, %r2997, %r2917;
	xor.b32  	%r7088, %r2998, %r2992;
	xor.b32  	%r2999, %r2903, %r2901;
	xor.b32  	%r3000, %r2999, %r2905;
	xor.b32  	%r3001, %r2913, %r2999;
	xor.b32  	%r3002, %r3001, %r2907;
	xor.b32  	%r3003, %r3002, %r2909;
	xor.b32  	%r3004, %r3003, %r2916;
	xor.b32  	%r3005, %r3004, %r2917;
	shf.l.wrap.b32 	%r3006, %r3005, %r3005, 16;
	xor.b32  	%r3007, %r3000, %r2913;
	xor.b32  	%r3008, %r3007, %r2909;
	xor.b32  	%r3009, %r3008, %r2915;
	xor.b32  	%r3010, %r3009, %r2916;
	xor.b32  	%r3011, %r3010, %r2917;
	xor.b32  	%r7089, %r3011, %r3006;
	xor.b32  	%r3012, %r2905, %r2903;
	xor.b32  	%r3013, %r3012, %r2907;
	xor.b32  	%r3014, %r3013, %r2914;
	xor.b32  	%r3015, %r3014, %r2916;
	xor.b32  	%r3016, %r3015, %r2917;
	xor.b32  	%r3017, %r2914, %r3012;
	xor.b32  	%r3018, %r3017, %r2909;
	xor.b32  	%r3019, %r3018, %r2917;
	shf.l.wrap.b32 	%r3020, %r3019, %r3019, 16;
	xor.b32  	%r7090, %r3016, %r3020;
	add.s64 	%rd74, %rd74, -32;
	add.s32 	%r7082, %r7082, -1;
	setp.ne.s32 	%p6, %r7082, -13;
	@%p6 bra 	$L__BB5_8;

	and.b32  	%r3021, %r7083, 255;
	shl.b32 	%r3022, %r7083, 2;
	and.b32  	%r3023, %r3022, 64512;
	or.b32  	%r3024, %r3023, %r3021;
	and.b32  	%r3025, %r7083, 49152;
	shr.u32 	%r3026, %r3025, 6;
	or.b32  	%r3027, %r3024, %r3026;
	shl.b32 	%r3028, %r7083, 4;
	and.b32  	%r3029, %r3028, 15728640;
	or.b32  	%r3030, %r3027, %r3029;
	and.b32  	%r3031, %r7083, 15728640;
	shr.u32 	%r3032, %r3031, 4;
	or.b32  	%r3033, %r3030, %r3032;
	shl.b32 	%r3034, %r7083, 6;
	and.b32  	%r3035, %r3034, -1073741824;
	or.b32  	%r3036, %r3033, %r3035;
	and.b32  	%r3037, %r7083, -67108864;
	shr.u32 	%r3038, %r3037, 2;
	or.b32  	%r3039, %r3036, %r3038;
	shl.b32 	%r3040, %r7084, 2;
	and.b32  	%r3041, %r3040, 64512;
	and.b32  	%r3042, %r7084, 255;
	or.b32  	%r3043, %r3041, %r3042;
	and.b32  	%r3044, %r7084, 49152;
	shr.u32 	%r3045, %r3044, 6;
	or.b32  	%r3046, %r3043, %r3045;
	shl.b32 	%r3047, %r7084, 4;
	and.b32  	%r3048, %r3047, 15728640;
	or.b32  	%r3049, %r3046, %r3048;
	and.b32  	%r3050, %r7084, 15728640;
	shr.u32 	%r3051, %r3050, 4;
	or.b32  	%r3052, %r3049, %r3051;
	shl.b32 	%r3053, %r7084, 6;
	and.b32  	%r3054, %r3053, -1073741824;
	or.b32  	%r3055, %r3052, %r3054;
	and.b32  	%r3056, %r7084, -67108864;
	shr.u32 	%r3057, %r3056, 2;
	or.b32  	%r3058, %r3055, %r3057;
	shl.b32 	%r3059, %r7085, 2;
	and.b32  	%r3060, %r3059, 64512;
	and.b32  	%r3061, %r7085, 255;
	or.b32  	%r3062, %r3060, %r3061;
	and.b32  	%r3063, %r7085, 49152;
	shr.u32 	%r3064, %r3063, 6;
	or.b32  	%r3065, %r3062, %r3064;
	shl.b32 	%r3066, %r7085, 4;
	and.b32  	%r3067, %r3066, 15728640;
	or.b32  	%r3068, %r3065, %r3067;
	and.b32  	%r3069, %r7085, 15728640;
	shr.u32 	%r3070, %r3069, 4;
	or.b32  	%r3071, %r3068, %r3070;
	shl.b32 	%r3072, %r7085, 6;
	and.b32  	%r3073, %r3072, -1073741824;
	or.b32  	%r3074, %r3071, %r3073;
	and.b32  	%r3075, %r7085, -67108864;
	shr.u32 	%r3076, %r3075, 2;
	or.b32  	%r3077, %r3074, %r3076;
	shl.b32 	%r3078, %r7086, 2;
	and.b32  	%r3079, %r3078, 64512;
	and.b32  	%r3080, %r7086, 255;
	or.b32  	%r3081, %r3079, %r3080;
	and.b32  	%r3082, %r7086, 49152;
	shr.u32 	%r3083, %r3082, 6;
	or.b32  	%r3084, %r3081, %r3083;
	shl.b32 	%r3085, %r7086, 4;
	and.b32  	%r3086, %r3085, 15728640;
	or.b32  	%r3087, %r3084, %r3086;
	and.b32  	%r3088, %r7086, 15728640;
	shr.u32 	%r3089, %r3088, 4;
	or.b32  	%r3090, %r3087, %r3089;
	shl.b32 	%r3091, %r7086, 6;
	and.b32  	%r3092, %r3091, -1073741824;
	or.b32  	%r3093, %r3090, %r3092;
	and.b32  	%r3094, %r7086, -67108864;
	shr.u32 	%r3095, %r3094, 2;
	or.b32  	%r3096, %r3093, %r3095;
	shl.b32 	%r3097, %r7087, 2;
	and.b32  	%r3098, %r3097, 64512;
	and.b32  	%r3099, %r7087, 255;
	or.b32  	%r3100, %r3098, %r3099;
	and.b32  	%r3101, %r7087, 49152;
	shr.u32 	%r3102, %r3101, 6;
	or.b32  	%r3103, %r3100, %r3102;
	shl.b32 	%r3104, %r7087, 4;
	and.b32  	%r3105, %r3104, 15728640;
	or.b32  	%r3106, %r3103, %r3105;
	and.b32  	%r3107, %r7087, 15728640;
	shr.u32 	%r3108, %r3107, 4;
	or.b32  	%r3109, %r3106, %r3108;
	shl.b32 	%r3110, %r7087, 6;
	and.b32  	%r3111, %r3110, -1073741824;
	or.b32  	%r3112, %r3109, %r3111;
	and.b32  	%r3113, %r7087, -67108864;
	shr.u32 	%r3114, %r3113, 2;
	or.b32  	%r3115, %r3112, %r3114;
	shl.b32 	%r3116, %r7088, 2;
	and.b32  	%r3117, %r3116, 64512;
	and.b32  	%r3118, %r7088, 255;
	or.b32  	%r3119, %r3117, %r3118;
	and.b32  	%r3120, %r7088, 49152;
	shr.u32 	%r3121, %r3120, 6;
	or.b32  	%r3122, %r3119, %r3121;
	shl.b32 	%r3123, %r7088, 4;
	and.b32  	%r3124, %r3123, 15728640;
	or.b32  	%r3125, %r3122, %r3124;
	and.b32  	%r3126, %r7088, 15728640;
	shr.u32 	%r3127, %r3126, 4;
	or.b32  	%r3128, %r3125, %r3127;
	shl.b32 	%r3129, %r7088, 6;
	and.b32  	%r3130, %r3129, -1073741824;
	or.b32  	%r3131, %r3128, %r3130;
	and.b32  	%r3132, %r7088, -67108864;
	shr.u32 	%r3133, %r3132, 2;
	or.b32  	%r3134, %r3131, %r3133;
	shl.b32 	%r3135, %r7089, 2;
	and.b32  	%r3136, %r3135, 64512;
	and.b32  	%r3137, %r7089, 255;
	or.b32  	%r3138, %r3136, %r3137;
	and.b32  	%r3139, %r7089, 49152;
	shr.u32 	%r3140, %r3139, 6;
	or.b32  	%r3141, %r3138, %r3140;
	shl.b32 	%r3142, %r7089, 4;
	and.b32  	%r3143, %r3142, 15728640;
	or.b32  	%r3144, %r3141, %r3143;
	and.b32  	%r3145, %r7089, 15728640;
	shr.u32 	%r3146, %r3145, 4;
	or.b32  	%r3147, %r3144, %r3146;
	shl.b32 	%r3148, %r7089, 6;
	and.b32  	%r3149, %r3148, -1073741824;
	or.b32  	%r3150, %r3147, %r3149;
	and.b32  	%r3151, %r7089, -67108864;
	shr.u32 	%r3152, %r3151, 2;
	or.b32  	%r3153, %r3150, %r3152;
	shl.b32 	%r3154, %r7090, 2;
	and.b32  	%r3155, %r3154, 64512;
	and.b32  	%r3156, %r7090, 255;
	or.b32  	%r3157, %r3155, %r3156;
	and.b32  	%r3158, %r7090, 49152;
	shr.u32 	%r3159, %r3158, 6;
	or.b32  	%r3160, %r3157, %r3159;
	shl.b32 	%r3161, %r7090, 4;
	and.b32  	%r3162, %r3161, 15728640;
	or.b32  	%r3163, %r3160, %r3162;
	and.b32  	%r3164, %r7090, 15728640;
	shr.u32 	%r3165, %r3164, 4;
	or.b32  	%r3166, %r3163, %r3165;
	shl.b32 	%r3167, %r7090, 6;
	and.b32  	%r3168, %r3167, -1073741824;
	or.b32  	%r3169, %r3166, %r3168;
	and.b32  	%r3170, %r7090, -67108864;
	shr.u32 	%r3171, %r3170, 2;
	or.b32  	%r3172, %r3169, %r3171;
	xor.b32  	%r3173, %r3096, %r3039;
	xor.b32  	%r3174, %r3115, %r3058;
	not.b32 	%r3175, %r3134;
	not.b32 	%r3176, %r3153;
	not.b32 	%r3177, %r3174;
	xor.b32  	%r3178, %r3177, %r3176;
	not.b32 	%r3179, %r3173;
	xor.b32  	%r3180, %r3179, %r3175;
	xor.b32  	%r3181, %r3115, %r3077;
	xor.b32  	%r3182, %r3181, %r3172;
	xor.b32  	%r3183, %r3096, %r3058;
	xor.b32  	%r3184, %r3183, %r3153;
	xor.b32  	%r3185, %r3077, %r3039;
	xor.b32  	%r3186, %r3185, %r3134;
	xor.b32  	%r3187, %r3177, %r3172;
	xor.b32  	%r3188, %r3179, %r3176;
	xor.b32  	%r3189, %r3077, %r3175;
	xor.b32  	%r3190, %r3189, %r3172;
	xor.b32  	%r3191, %r3187, %r3184;
	xor.b32  	%r3192, %r3179, %r3177;
	xor.b32  	%r3193, %r3184, %r3178;
	xor.b32  	%r3194, %r3172, %r3176;
	xor.b32  	%r3195, %r3182, %r3180;
	xor.b32  	%r3196, %r3190, %r3195;
	xor.b32  	%r3197, %r3196, %r3184;
	xor.b32  	%r3198, %r3192, %r3191;
	xor.b32  	%r3199, %r3196, %r3178;
	xor.b32  	%r3200, %r3196, %r3188;
	xor.b32  	%r3201, %r3200, %r3194;
	xor.b32  	%r3202, %r3198, %r3186;
	xor.b32  	%r3203, %r3202, %r3187;
	xor.b32  	%r3204, %r3202, %r3180;
	xor.b32  	%r3205, %r3203, %r3190;
	xor.b32  	%r3206, %r3203, %r3195;
	xor.b32  	%r3207, %r3204, %r3193;
	xor.b32  	%r3208, %r3207, %r3190;
	xor.b32  	%r3209, %r3206, %r3207;
	xor.b32  	%r3210, %r3207, %r3195;
	and.b32  	%r3211, %r3203, %r3198;
	and.b32  	%r3212, %r3205, %r3201;
	and.b32  	%r3213, %r3197, %r3190;
	and.b32  	%r3214, %r3210, %r3192;
	and.b32  	%r3215, %r3200, %r3196;
	and.b32  	%r3216, %r3208, %r3199;
	and.b32  	%r3217, %r3207, %r3193;
	and.b32  	%r3218, %r3209, %r3191;
	xor.b32  	%r3219, %r3218, %r3217;
	and.b32  	%r3220, %r3206, %r3194;
	xor.b32  	%r3221, %r3220, %r3217;
	xor.b32  	%r3222, %r3211, %r3204;
	xor.b32  	%r3223, %r3222, %r3212;
	xor.b32  	%r3224, %r3223, %r3219;
	xor.b32  	%r3225, %r3213, %r3194;
	xor.b32  	%r3226, %r3225, %r3206;
	xor.b32  	%r3227, %r3226, %r3211;
	xor.b32  	%r3228, %r3227, %r3221;
	xor.b32  	%r3229, %r3215, %r3192;
	xor.b32  	%r3230, %r3229, %r3210;
	xor.b32  	%r3231, %r3230, %r3214;
	xor.b32  	%r3232, %r3231, %r3219;
	xor.b32  	%r3233, %r3210, %r3178;
	xor.b32  	%r3234, %r3233, %r3214;
	xor.b32  	%r3235, %r3234, %r3216;
	xor.b32  	%r3236, %r3235, %r3221;
	xor.b32  	%r3237, %r3224, %r3228;
	and.b32  	%r3238, %r3224, %r3232;
	xor.b32  	%r3239, %r3238, %r3236;
	and.b32  	%r3240, %r3239, %r3237;
	xor.b32  	%r3241, %r3240, %r3228;
	xor.b32  	%r3242, %r3232, %r3236;
	xor.b32  	%r3243, %r3238, %r3228;
	and.b32  	%r3244, %r3243, %r3242;
	xor.b32  	%r3245, %r3244, %r3236;
	xor.b32  	%r3246, %r3245, %r3232;
	xor.b32  	%r3247, %r3244, %r3238;
	and.b32  	%r3248, %r3247, %r3236;
	xor.b32  	%r3249, %r3246, %r3248;
	xor.b32  	%r3250, %r3248, %r3239;
	and.b32  	%r3251, %r3250, %r3241;
	xor.b32  	%r3252, %r3251, %r3237;
	xor.b32  	%r3253, %r3252, %r3249;
	xor.b32  	%r3254, %r3241, %r3245;
	xor.b32  	%r3255, %r3252, %r3241;
	xor.b32  	%r3256, %r3248, %r3232;
	xor.b32  	%r3257, %r3253, %r3254;
	and.b32  	%r3258, %r3256, %r3203;
	and.b32  	%r3259, %r3249, %r3205;
	and.b32  	%r3260, %r3245, %r3190;
	and.b32  	%r3261, %r3255, %r3210;
	and.b32  	%r3262, %r3252, %r3196;
	and.b32  	%r3263, %r3241, %r3208;
	and.b32  	%r3264, %r3254, %r3207;
	and.b32  	%r3265, %r3257, %r3209;
	and.b32  	%r3266, %r3253, %r3206;
	and.b32  	%r3267, %r3256, %r3198;
	and.b32  	%r3268, %r3249, %r3201;
	and.b32  	%r3269, %r3245, %r3197;
	and.b32  	%r3270, %r3255, %r3192;
	and.b32  	%r3271, %r3252, %r3200;
	and.b32  	%r3272, %r3241, %r3199;
	and.b32  	%r3273, %r3254, %r3193;
	and.b32  	%r3274, %r3257, %r3191;
	and.b32  	%r3275, %r3253, %r3194;
	xor.b32  	%r3276, %r3274, %r3273;
	xor.b32  	%r3277, %r3268, %r3269;
	xor.b32  	%r3278, %r3271, %r3263;
	xor.b32  	%r3279, %r3267, %r3268;
	xor.b32  	%r3280, %r3270, %r3260;
	xor.b32  	%r3281, %r3260, %r3263;
	xor.b32  	%r3282, %r3265, %r3266;
	xor.b32  	%r3283, %r3261, %r3258;
	xor.b32  	%r3284, %r3270, %r3278;
	xor.b32  	%r3285, %r3280, %r3283;
	xor.b32  	%r3286, %r3276, %r3262;
	xor.b32  	%r3287, %r3261, %r3264;
	xor.b32  	%r3288, %r3287, %r3265;
	xor.b32  	%r3289, %r3276, %r3285;
	xor.b32  	%r3290, %r3285, %r3272;
	xor.b32  	%r3291, %r3282, %r3286;
	xor.b32  	%r3292, %r3279, %r3286;
	xor.b32  	%r3293, %r3288, %r3262;
	xor.b32  	%r3294, %r3290, %r3291;
	xor.b32  	%r3295, %r3292, %r3259;
	xor.b32  	%r3296, %r3292, %r3288;
	xor.b32  	%r3297, %r3295, %r3283;
	xor.b32  	%r3298, %r3291, %r3284;
	xor.b32  	%r3299, %r3297, %r3293;
	xor.b32  	%r3300, %r3298, %r3299;
	xor.b32  	%r3301, %r3281, %r3295;
	xor.b32  	%r3302, %r3277, %r3294;
	xor.b32  	%r3303, %r3300, %r3301;
	xor.b32  	%r3304, %r3274, %r3275;
	xor.b32  	%r3305, %r3304, %r3293;
	xor.b32  	%r3306, %r3289, %r3278;
	xor.b32  	%r3307, %r3305, %r3294;
	xor.b32  	%r3308, %r3293, %r3298;
	xor.b32  	%r3309, %r3306, %r3307;
	xor.b32  	%r3310, %r3309, %r3301;
	xor.b32  	%r3311, %r3296, %r3297;
	xor.b32  	%r3312, %r3311, %r3302;
	xor.b32  	%r3313, %r3309, %r3302;
	xor.b32  	%r3314, %r3311, %r3298;
	xor.b32  	%r3315, %r3306, %r3299;
	xor.b32  	%r3316, %r3315, %r3301;
	xor.b32  	%r3317, %r3296, %r3307;
	xor.b32  	%r3318, %r3317, %r3302;
	xor.b32  	%r3319, %r3318, %r16;
	xor.b32  	%r3320, %r3314, %r17;
	xor.b32  	%r3321, %r3303, %r18;
	xor.b32  	%r3322, %r3310, %r19;
	and.b32  	%r3323, %r3319, 1431655765;
	and.b32  	%r3324, %r3316, 1431655765;
	xor.b32  	%r3325, %r3324, %r20;
	shl.b32 	%r3326, %r3325, 1;
	or.b32  	%r3327, %r3326, %r3323;
	and.b32  	%r3328, %r3320, 1431655765;
	and.b32  	%r3329, %r3313, 1431655765;
	xor.b32  	%r3330, %r3329, %r21;
	shl.b32 	%r3331, %r3330, 1;
	or.b32  	%r3332, %r3331, %r3328;
	and.b32  	%r3333, %r3321, 1431655765;
	and.b32  	%r3334, %r3312, 1431655765;
	xor.b32  	%r3335, %r3334, %r22;
	shl.b32 	%r3336, %r3335, 1;
	or.b32  	%r3337, %r3336, %r3333;
	and.b32  	%r3338, %r3322, 1431655765;
	and.b32  	%r3339, %r3308, 1431655765;
	xor.b32  	%r3340, %r3339, %r23;
	shl.b32 	%r3341, %r3340, 1;
	or.b32  	%r3342, %r3341, %r3338;
	and.b32  	%r3343, %r3327, 50529027;
	shl.b32 	%r3344, %r3332, 2;
	and.b32  	%r3345, %r3344, 202116108;
	or.b32  	%r3346, %r3345, %r3343;
	and.b32  	%r3347, %r3327, 202116108;
	shr.u32 	%r3348, %r3347, 2;
	and.b32  	%r3349, %r3332, 202116108;
	or.b32  	%r3350, %r3348, %r3349;
	and.b32  	%r3351, %r3337, 50529027;
	shl.b32 	%r3352, %r3342, 2;
	and.b32  	%r3353, %r3352, 202116108;
	or.b32  	%r3354, %r3353, %r3351;
	and.b32  	%r3355, %r3337, 202116108;
	shr.u32 	%r3356, %r3355, 2;
	and.b32  	%r3357, %r3342, 202116108;
	or.b32  	%r3358, %r3356, %r3357;
	shl.b32 	%r3359, %r3354, 4;
	or.b32  	%r3360, %r3359, %r3346;
	shl.b32 	%r3361, %r3358, 4;
	or.b32  	%r3362, %r3361, %r3350;
	xor.b32  	%r50, %r159, %r3360;
	shr.u32 	%r3363, %r50, 24;
	cvt.u16.u32 	%rs26, %r3363;
	xor.b32  	%r51, %r160, %r3362;
	setp.gt.u16 	%p7, %rs26, 2;
	and.b32  	%r3364, %r51, -256;
	setp.ne.s32 	%p8, %r3364, 538984448;
	or.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB5_11;

	shl.b32 	%r3366, %r50, 8;
	and.b32  	%r3367, %r3366, 16776960;
	add.s32 	%r3368, %r3367, -1;
	and.b32  	%r3369, %r3368, %r3367;
	setp.eq.s32 	%p10, %r3369, 0;
	add.s32 	%r3370, %r3367, -257;
	setp.lt.u32 	%p11, %r3370, 65280;
	and.pred  	%p12, %p11, %p10;
	and.b32  	%r3371, %r51, 255;
	sub.s32 	%r3372, %r3367, %r3371;
	setp.gt.u32 	%p13, %r3372, 479;
	and.pred  	%p14, %p13, %p12;
	mov.u32 	%r7091, 1;
	@%p14 bra 	$L__BB5_12;

$L__BB5_11:
	mov.u32 	%r7091, 0;

$L__BB5_12:
	st.global.u32 	[%rd7+-4], %r7091;
	bra.uni 	$L__BB5_34;

$L__BB5_14:
	mov.u32 	%r3374, 0;
	mov.u32 	%r7105, %r53;
	mov.u32 	%r7098, %r3374;

$L__BB5_15:
	cvt.u64.u32 	%rd38, %r7098;
	add.s64 	%rd39, %rd13, %rd38;
	ld.global.u32 	%r3695, [%rd39+12];
	mov.u32 	%r3696, 291;
	ld.global.u32 	%r3698, [%rd39+16];
	ld.global.u32 	%r3699, [%rd39+20];
	ld.global.u32 	%r3700, [%rd39+24];
	prmt.b32 	%r3701, %r3700, %r3374, %r3696;
	prmt.b32 	%r3702, %r3699, %r3374, %r3696;
	prmt.b32 	%r3703, %r3698, %r3374, %r3696;
	prmt.b32 	%r3704, %r3695, %r3374, %r3696;
	st.local.v4.u32 	[%rd3], {%r3704, %r3703, %r3702, %r3701};
	ld.global.u32 	%r3705, [%rd39+28];
	ld.global.u32 	%r3706, [%rd39+32];
	ld.global.u32 	%r3707, [%rd39+36];
	ld.global.u32 	%r3708, [%rd39+40];
	prmt.b32 	%r3709, %r3708, %r3374, %r3696;
	prmt.b32 	%r3710, %r3707, %r3374, %r3696;
	prmt.b32 	%r3711, %r3706, %r3374, %r3696;
	prmt.b32 	%r3712, %r3705, %r3374, %r3696;
	st.local.v4.u32 	[%rd3+16], {%r3712, %r3711, %r3710, %r3709};
	ld.global.u32 	%r3713, [%rd39+44];
	ld.global.u32 	%r3714, [%rd39+48];
	ld.global.u32 	%r3715, [%rd39+52];
	ld.global.u32 	%r3716, [%rd39+56];
	prmt.b32 	%r3717, %r3716, %r3374, %r3696;
	prmt.b32 	%r3718, %r3715, %r3374, %r3696;
	prmt.b32 	%r3719, %r3714, %r3374, %r3696;
	prmt.b32 	%r3720, %r3713, %r3374, %r3696;
	st.local.v4.u32 	[%rd3+32], {%r3720, %r3719, %r3718, %r3717};
	ld.global.u32 	%r3721, [%rd39+60];
	ld.global.u32 	%r3722, [%rd39+64];
	ld.global.u32 	%r3723, [%rd39+68];
	ld.global.u32 	%r3724, [%rd39+72];
	prmt.b32 	%r3725, %r3724, %r3374, %r3696;
	prmt.b32 	%r3726, %r3723, %r3374, %r3696;
	prmt.b32 	%r3727, %r3722, %r3374, %r3696;
	prmt.b32 	%r3728, %r3721, %r3374, %r3696;
	st.local.v4.u32 	[%rd3+48], {%r3728, %r3727, %r3726, %r3725};
	add.s32 	%r7110, %r7098, 64;
	add.s32 	%r7105, %r7105, -64;
	shf.l.wrap.b32 	%r3729, %r7103, %r7103, 5;
	add.s32 	%r3730, %r3729, %r7099;
	// begin inline asm
	lop3.b32 %r3375, %r7102, %r7101, %r7100, 202;
	// end inline asm
	add.s32 	%r3731, %r3730, %r3375;
	add.s32 	%r3732, %r3731, %r3704;
	add.s32 	%r3384, %r3732, 1518500249;
	shf.l.wrap.b32 	%r3733, %r3384, %r3384, 5;
	shf.l.wrap.b32 	%r3386, %r7102, %r7102, 30;
	// begin inline asm
	lop3.b32 %r3379, %r7103, %r3386, %r7101, 202;
	// end inline asm
	add.s32 	%r3734, %r7100, %r3379;
	add.s32 	%r3735, %r3734, %r3703;
	add.s32 	%r3736, %r3735, %r3733;
	add.s32 	%r3388, %r3736, 1518500249;
	shf.l.wrap.b32 	%r3737, %r3388, %r3388, 5;
	shf.l.wrap.b32 	%r3390, %r7103, %r7103, 30;
	// begin inline asm
	lop3.b32 %r3383, %r3384, %r3390, %r3386, 202;
	// end inline asm
	add.s32 	%r3738, %r7101, %r3383;
	add.s32 	%r3739, %r3738, %r3702;
	add.s32 	%r3740, %r3739, %r3737;
	add.s32 	%r3392, %r3740, 1518500249;
	shf.l.wrap.b32 	%r3394, %r3384, %r3384, 30;
	shf.l.wrap.b32 	%r3741, %r3392, %r3392, 5;
	// begin inline asm
	lop3.b32 %r3387, %r3388, %r3394, %r3390, 202;
	// end inline asm
	add.s32 	%r3742, %r3386, %r3387;
	add.s32 	%r3743, %r3742, %r3701;
	add.s32 	%r3744, %r3743, %r3741;
	add.s32 	%r3396, %r3744, 1518500249;
	shf.l.wrap.b32 	%r3398, %r3388, %r3388, 30;
	shf.l.wrap.b32 	%r3745, %r3396, %r3396, 5;
	// begin inline asm
	lop3.b32 %r3391, %r3392, %r3398, %r3394, 202;
	// end inline asm
	add.s32 	%r3746, %r3390, %r3391;
	add.s32 	%r3747, %r3746, %r3712;
	add.s32 	%r3748, %r3747, %r3745;
	add.s32 	%r3400, %r3748, 1518500249;
	shf.l.wrap.b32 	%r3402, %r3392, %r3392, 30;
	shf.l.wrap.b32 	%r3749, %r3400, %r3400, 5;
	// begin inline asm
	lop3.b32 %r3395, %r3396, %r3402, %r3398, 202;
	// end inline asm
	add.s32 	%r3750, %r3394, %r3395;
	add.s32 	%r3751, %r3750, %r3711;
	add.s32 	%r3752, %r3751, %r3749;
	add.s32 	%r3404, %r3752, 1518500249;
	shf.l.wrap.b32 	%r3406, %r3396, %r3396, 30;
	shf.l.wrap.b32 	%r3753, %r3404, %r3404, 5;
	// begin inline asm
	lop3.b32 %r3399, %r3400, %r3406, %r3402, 202;
	// end inline asm
	add.s32 	%r3754, %r3398, %r3399;
	add.s32 	%r3755, %r3754, %r3710;
	add.s32 	%r3756, %r3755, %r3753;
	add.s32 	%r3408, %r3756, 1518500249;
	shf.l.wrap.b32 	%r3410, %r3400, %r3400, 30;
	shf.l.wrap.b32 	%r3757, %r3408, %r3408, 5;
	// begin inline asm
	lop3.b32 %r3403, %r3404, %r3410, %r3406, 202;
	// end inline asm
	add.s32 	%r3758, %r3403, %r3709;
	add.s32 	%r3759, %r3758, %r3402;
	add.s32 	%r3760, %r3759, %r3757;
	add.s32 	%r3412, %r3760, 1518500249;
	shf.l.wrap.b32 	%r3414, %r3404, %r3404, 30;
	shf.l.wrap.b32 	%r3761, %r3412, %r3412, 5;
	// begin inline asm
	lop3.b32 %r3407, %r3408, %r3414, %r3410, 202;
	// end inline asm
	add.s32 	%r3762, %r3407, %r3720;
	add.s32 	%r3763, %r3762, %r3406;
	add.s32 	%r3764, %r3763, %r3761;
	add.s32 	%r3416, %r3764, 1518500249;
	shf.l.wrap.b32 	%r3418, %r3408, %r3408, 30;
	shf.l.wrap.b32 	%r3765, %r3416, %r3416, 5;
	// begin inline asm
	lop3.b32 %r3411, %r3412, %r3418, %r3414, 202;
	// end inline asm
	add.s32 	%r3766, %r3411, %r3719;
	add.s32 	%r3767, %r3766, %r3410;
	add.s32 	%r3768, %r3767, %r3765;
	add.s32 	%r3420, %r3768, 1518500249;
	shf.l.wrap.b32 	%r3422, %r3412, %r3412, 30;
	shf.l.wrap.b32 	%r3769, %r3420, %r3420, 5;
	// begin inline asm
	lop3.b32 %r3415, %r3416, %r3422, %r3418, 202;
	// end inline asm
	add.s32 	%r3770, %r3415, %r3718;
	add.s32 	%r3771, %r3770, %r3414;
	add.s32 	%r3772, %r3771, %r3769;
	add.s32 	%r3424, %r3772, 1518500249;
	shf.l.wrap.b32 	%r3426, %r3416, %r3416, 30;
	shf.l.wrap.b32 	%r3773, %r3424, %r3424, 5;
	// begin inline asm
	lop3.b32 %r3419, %r3420, %r3426, %r3422, 202;
	// end inline asm
	add.s32 	%r3774, %r3419, %r3717;
	add.s32 	%r3775, %r3774, %r3418;
	add.s32 	%r3776, %r3775, %r3773;
	add.s32 	%r3428, %r3776, 1518500249;
	shf.l.wrap.b32 	%r3430, %r3420, %r3420, 30;
	shf.l.wrap.b32 	%r3777, %r3428, %r3428, 5;
	// begin inline asm
	lop3.b32 %r3423, %r3424, %r3430, %r3426, 202;
	// end inline asm
	add.s32 	%r3778, %r3423, %r3728;
	add.s32 	%r3779, %r3778, %r3422;
	add.s32 	%r3780, %r3779, %r3777;
	add.s32 	%r3432, %r3780, 1518500249;
	shf.l.wrap.b32 	%r3434, %r3424, %r3424, 30;
	shf.l.wrap.b32 	%r3781, %r3432, %r3432, 5;
	// begin inline asm
	lop3.b32 %r3427, %r3428, %r3434, %r3430, 202;
	// end inline asm
	add.s32 	%r3782, %r3427, %r3727;
	add.s32 	%r3783, %r3782, %r3426;
	add.s32 	%r3784, %r3783, %r3781;
	add.s32 	%r3436, %r3784, 1518500249;
	shf.l.wrap.b32 	%r3438, %r3428, %r3428, 30;
	shf.l.wrap.b32 	%r3785, %r3436, %r3436, 5;
	// begin inline asm
	lop3.b32 %r3431, %r3432, %r3438, %r3434, 202;
	// end inline asm
	add.s32 	%r3786, %r3431, %r3726;
	add.s32 	%r3787, %r3786, %r3430;
	add.s32 	%r3788, %r3787, %r3785;
	add.s32 	%r3440, %r3788, 1518500249;
	shf.l.wrap.b32 	%r3442, %r3432, %r3432, 30;
	shf.l.wrap.b32 	%r3789, %r3440, %r3440, 5;
	// begin inline asm
	lop3.b32 %r3435, %r3436, %r3442, %r3438, 202;
	// end inline asm
	add.s32 	%r3790, %r3435, %r3725;
	add.s32 	%r3791, %r3790, %r3434;
	add.s32 	%r3792, %r3791, %r3789;
	add.s32 	%r3444, %r3792, 1518500249;
	shf.l.wrap.b32 	%r3446, %r3436, %r3436, 30;
	shf.l.wrap.b32 	%r3793, %r3444, %r3444, 5;
	// begin inline asm
	lop3.b32 %r3439, %r3440, %r3446, %r3442, 202;
	// end inline asm
	xor.b32  	%r3794, %r3720, %r3727;
	xor.b32  	%r3795, %r3794, %r3702;
	xor.b32  	%r3796, %r3795, %r3704;
	shf.l.wrap.b32 	%r3797, %r3796, %r3796, 1;
	add.s32 	%r3798, %r3439, %r3797;
	add.s32 	%r3799, %r3798, %r3438;
	add.s32 	%r3800, %r3799, %r3793;
	add.s32 	%r3448, %r3800, 1518500249;
	shf.l.wrap.b32 	%r3450, %r3440, %r3440, 30;
	shf.l.wrap.b32 	%r3801, %r3448, %r3448, 5;
	// begin inline asm
	lop3.b32 %r3443, %r3444, %r3450, %r3446, 202;
	// end inline asm
	xor.b32  	%r3802, %r3719, %r3726;
	xor.b32  	%r3803, %r3802, %r3701;
	xor.b32  	%r3804, %r3803, %r3703;
	shf.l.wrap.b32 	%r3805, %r3804, %r3804, 1;
	add.s32 	%r3806, %r3443, %r3805;
	add.s32 	%r3807, %r3806, %r3442;
	add.s32 	%r3808, %r3807, %r3801;
	add.s32 	%r3452, %r3808, 1518500249;
	shf.l.wrap.b32 	%r3454, %r3444, %r3444, 30;
	shf.l.wrap.b32 	%r3809, %r3452, %r3452, 5;
	// begin inline asm
	lop3.b32 %r3447, %r3448, %r3454, %r3450, 202;
	// end inline asm
	xor.b32  	%r3810, %r3718, %r3725;
	xor.b32  	%r3811, %r3810, %r3712;
	xor.b32  	%r3812, %r3811, %r3702;
	shf.l.wrap.b32 	%r3813, %r3812, %r3812, 1;
	add.s32 	%r3814, %r3447, %r3813;
	add.s32 	%r3815, %r3814, %r3446;
	add.s32 	%r3816, %r3815, %r3809;
	add.s32 	%r3456, %r3816, 1518500249;
	shf.l.wrap.b32 	%r3458, %r3448, %r3448, 30;
	shf.l.wrap.b32 	%r3817, %r3456, %r3456, 5;
	// begin inline asm
	lop3.b32 %r3451, %r3452, %r3458, %r3454, 202;
	// end inline asm
	xor.b32  	%r3818, %r3717, %r3797;
	xor.b32  	%r3819, %r3818, %r3711;
	xor.b32  	%r3820, %r3819, %r3701;
	shf.l.wrap.b32 	%r3821, %r3820, %r3820, 1;
	add.s32 	%r3822, %r3451, %r3821;
	add.s32 	%r3823, %r3822, %r3450;
	add.s32 	%r3824, %r3823, %r3817;
	add.s32 	%r3460, %r3824, 1518500249;
	shf.l.wrap.b32 	%r3462, %r3452, %r3452, 30;
	shf.l.wrap.b32 	%r3825, %r3460, %r3460, 5;
	// begin inline asm
	lop3.b32 %r3455, %r3456, %r3462, %r3458, 150;
	// end inline asm
	xor.b32  	%r3826, %r3728, %r3805;
	xor.b32  	%r3827, %r3826, %r3710;
	xor.b32  	%r3828, %r3827, %r3712;
	shf.l.wrap.b32 	%r3829, %r3828, %r3828, 1;
	add.s32 	%r3830, %r3455, %r3829;
	add.s32 	%r3831, %r3830, %r3454;
	add.s32 	%r3832, %r3831, %r3825;
	add.s32 	%r3464, %r3832, 1859775393;
	shf.l.wrap.b32 	%r3466, %r3456, %r3456, 30;
	shf.l.wrap.b32 	%r3833, %r3464, %r3464, 5;
	// begin inline asm
	lop3.b32 %r3459, %r3460, %r3466, %r3462, 150;
	// end inline asm
	xor.b32  	%r3834, %r3727, %r3813;
	xor.b32  	%r3835, %r3834, %r3709;
	xor.b32  	%r3836, %r3835, %r3711;
	shf.l.wrap.b32 	%r3837, %r3836, %r3836, 1;
	add.s32 	%r3838, %r3459, %r3837;
	add.s32 	%r3839, %r3838, %r3458;
	add.s32 	%r3840, %r3839, %r3833;
	add.s32 	%r3468, %r3840, 1859775393;
	shf.l.wrap.b32 	%r3470, %r3460, %r3460, 30;
	shf.l.wrap.b32 	%r3841, %r3468, %r3468, 5;
	// begin inline asm
	lop3.b32 %r3463, %r3464, %r3470, %r3466, 150;
	// end inline asm
	xor.b32  	%r3842, %r3726, %r3821;
	xor.b32  	%r3843, %r3842, %r3720;
	xor.b32  	%r3844, %r3843, %r3710;
	shf.l.wrap.b32 	%r3845, %r3844, %r3844, 1;
	add.s32 	%r3846, %r3463, %r3845;
	add.s32 	%r3847, %r3846, %r3462;
	add.s32 	%r3848, %r3847, %r3841;
	add.s32 	%r3472, %r3848, 1859775393;
	shf.l.wrap.b32 	%r3474, %r3464, %r3464, 30;
	shf.l.wrap.b32 	%r3849, %r3472, %r3472, 5;
	// begin inline asm
	lop3.b32 %r3467, %r3468, %r3474, %r3470, 150;
	// end inline asm
	xor.b32  	%r3850, %r3725, %r3829;
	xor.b32  	%r3851, %r3850, %r3719;
	xor.b32  	%r3852, %r3851, %r3709;
	shf.l.wrap.b32 	%r3853, %r3852, %r3852, 1;
	add.s32 	%r3854, %r3467, %r3853;
	add.s32 	%r3855, %r3854, %r3466;
	add.s32 	%r3856, %r3855, %r3849;
	add.s32 	%r3476, %r3856, 1859775393;
	shf.l.wrap.b32 	%r3478, %r3468, %r3468, 30;
	shf.l.wrap.b32 	%r3857, %r3476, %r3476, 5;
	// begin inline asm
	lop3.b32 %r3471, %r3472, %r3478, %r3474, 150;
	// end inline asm
	xor.b32  	%r3858, %r3837, %r3797;
	xor.b32  	%r3859, %r3858, %r3718;
	xor.b32  	%r3860, %r3859, %r3720;
	shf.l.wrap.b32 	%r3861, %r3860, %r3860, 1;
	add.s32 	%r3862, %r3471, %r3861;
	add.s32 	%r3863, %r3862, %r3470;
	add.s32 	%r3864, %r3863, %r3857;
	add.s32 	%r3480, %r3864, 1859775393;
	shf.l.wrap.b32 	%r3482, %r3472, %r3472, 30;
	shf.l.wrap.b32 	%r3865, %r3480, %r3480, 5;
	// begin inline asm
	lop3.b32 %r3475, %r3476, %r3482, %r3478, 150;
	// end inline asm
	xor.b32  	%r3866, %r3845, %r3805;
	xor.b32  	%r3867, %r3866, %r3717;
	xor.b32  	%r3868, %r3867, %r3719;
	shf.l.wrap.b32 	%r3869, %r3868, %r3868, 1;
	add.s32 	%r3870, %r3475, %r3869;
	add.s32 	%r3871, %r3870, %r3474;
	add.s32 	%r3872, %r3871, %r3865;
	add.s32 	%r3484, %r3872, 1859775393;
	shf.l.wrap.b32 	%r3486, %r3476, %r3476, 30;
	shf.l.wrap.b32 	%r3873, %r3484, %r3484, 5;
	// begin inline asm
	lop3.b32 %r3479, %r3480, %r3486, %r3482, 150;
	// end inline asm
	xor.b32  	%r3874, %r3853, %r3813;
	xor.b32  	%r3875, %r3874, %r3728;
	xor.b32  	%r3876, %r3875, %r3718;
	shf.l.wrap.b32 	%r3877, %r3876, %r3876, 1;
	add.s32 	%r3878, %r3479, %r3877;
	add.s32 	%r3879, %r3878, %r3478;
	add.s32 	%r3880, %r3879, %r3873;
	add.s32 	%r3488, %r3880, 1859775393;
	shf.l.wrap.b32 	%r3490, %r3480, %r3480, 30;
	shf.l.wrap.b32 	%r3881, %r3488, %r3488, 5;
	// begin inline asm
	lop3.b32 %r3483, %r3484, %r3490, %r3486, 150;
	// end inline asm
	xor.b32  	%r3882, %r3861, %r3821;
	xor.b32  	%r3883, %r3882, %r3727;
	xor.b32  	%r3884, %r3883, %r3717;
	shf.l.wrap.b32 	%r3885, %r3884, %r3884, 1;
	add.s32 	%r3886, %r3483, %r3885;
	add.s32 	%r3887, %r3886, %r3482;
	add.s32 	%r3888, %r3887, %r3881;
	add.s32 	%r3492, %r3888, 1859775393;
	shf.l.wrap.b32 	%r3494, %r3484, %r3484, 30;
	shf.l.wrap.b32 	%r3889, %r3492, %r3492, 5;
	// begin inline asm
	lop3.b32 %r3487, %r3488, %r3494, %r3490, 150;
	// end inline asm
	xor.b32  	%r3890, %r3869, %r3829;
	xor.b32  	%r3891, %r3890, %r3726;
	xor.b32  	%r3892, %r3891, %r3728;
	shf.l.wrap.b32 	%r3893, %r3892, %r3892, 1;
	add.s32 	%r3894, %r3487, %r3893;
	add.s32 	%r3895, %r3894, %r3486;
	add.s32 	%r3896, %r3895, %r3889;
	add.s32 	%r3496, %r3896, 1859775393;
	shf.l.wrap.b32 	%r3498, %r3488, %r3488, 30;
	shf.l.wrap.b32 	%r3897, %r3496, %r3496, 5;
	// begin inline asm
	lop3.b32 %r3491, %r3492, %r3498, %r3494, 150;
	// end inline asm
	xor.b32  	%r3898, %r3877, %r3837;
	xor.b32  	%r3899, %r3898, %r3725;
	xor.b32  	%r3900, %r3899, %r3727;
	shf.l.wrap.b32 	%r3901, %r3900, %r3900, 1;
	add.s32 	%r3902, %r3491, %r3901;
	add.s32 	%r3903, %r3902, %r3490;
	add.s32 	%r3904, %r3903, %r3897;
	add.s32 	%r3500, %r3904, 1859775393;
	shf.l.wrap.b32 	%r3502, %r3492, %r3492, 30;
	shf.l.wrap.b32 	%r3905, %r3500, %r3500, 5;
	// begin inline asm
	lop3.b32 %r3495, %r3496, %r3502, %r3498, 150;
	// end inline asm
	xor.b32  	%r3906, %r3845, %r3797;
	xor.b32  	%r3907, %r3906, %r3885;
	xor.b32  	%r3908, %r3907, %r3726;
	shf.l.wrap.b32 	%r3909, %r3908, %r3908, 1;
	add.s32 	%r3910, %r3495, %r3909;
	add.s32 	%r3911, %r3910, %r3494;
	add.s32 	%r3912, %r3911, %r3905;
	add.s32 	%r3504, %r3912, 1859775393;
	shf.l.wrap.b32 	%r3506, %r3496, %r3496, 30;
	shf.l.wrap.b32 	%r3913, %r3504, %r3504, 5;
	// begin inline asm
	lop3.b32 %r3499, %r3500, %r3506, %r3502, 150;
	// end inline asm
	xor.b32  	%r3914, %r3853, %r3805;
	xor.b32  	%r3915, %r3914, %r3893;
	xor.b32  	%r3916, %r3915, %r3725;
	shf.l.wrap.b32 	%r3917, %r3916, %r3916, 1;
	add.s32 	%r3918, %r3499, %r3917;
	add.s32 	%r3919, %r3918, %r3498;
	add.s32 	%r3920, %r3919, %r3913;
	add.s32 	%r3508, %r3920, 1859775393;
	shf.l.wrap.b32 	%r3510, %r3500, %r3500, 30;
	shf.l.wrap.b32 	%r3921, %r3508, %r3508, 5;
	// begin inline asm
	lop3.b32 %r3503, %r3504, %r3510, %r3506, 150;
	// end inline asm
	xor.b32  	%r3922, %r3813, %r3797;
	xor.b32  	%r3923, %r3922, %r3861;
	xor.b32  	%r3924, %r3923, %r3901;
	shf.l.wrap.b32 	%r3925, %r3924, %r3924, 1;
	add.s32 	%r3926, %r3503, %r3925;
	add.s32 	%r3927, %r3926, %r3502;
	add.s32 	%r3928, %r3927, %r3921;
	add.s32 	%r3512, %r3928, 1859775393;
	shf.l.wrap.b32 	%r3514, %r3504, %r3504, 30;
	shf.l.wrap.b32 	%r3929, %r3512, %r3512, 5;
	// begin inline asm
	lop3.b32 %r3507, %r3508, %r3514, %r3510, 150;
	// end inline asm
	xor.b32  	%r3930, %r3821, %r3805;
	xor.b32  	%r3931, %r3930, %r3869;
	xor.b32  	%r3932, %r3931, %r3909;
	shf.l.wrap.b32 	%r3933, %r3932, %r3932, 1;
	add.s32 	%r3934, %r3507, %r3933;
	add.s32 	%r3935, %r3934, %r3506;
	add.s32 	%r3936, %r3935, %r3929;
	add.s32 	%r3516, %r3936, 1859775393;
	shf.l.wrap.b32 	%r3518, %r3508, %r3508, 30;
	shf.l.wrap.b32 	%r3937, %r3516, %r3516, 5;
	// begin inline asm
	lop3.b32 %r3511, %r3512, %r3518, %r3514, 150;
	// end inline asm
	xor.b32  	%r3938, %r3829, %r3813;
	xor.b32  	%r3939, %r3938, %r3877;
	xor.b32  	%r3940, %r3939, %r3917;
	shf.l.wrap.b32 	%r3941, %r3940, %r3940, 1;
	add.s32 	%r3942, %r3511, %r3941;
	add.s32 	%r3943, %r3942, %r3510;
	add.s32 	%r3944, %r3943, %r3937;
	add.s32 	%r3520, %r3944, 1859775393;
	shf.l.wrap.b32 	%r3522, %r3512, %r3512, 30;
	shf.l.wrap.b32 	%r3945, %r3520, %r3520, 5;
	// begin inline asm
	lop3.b32 %r3515, %r3516, %r3522, %r3518, 150;
	// end inline asm
	xor.b32  	%r3946, %r3837, %r3821;
	xor.b32  	%r3947, %r3946, %r3885;
	xor.b32  	%r3948, %r3947, %r3925;
	shf.l.wrap.b32 	%r3949, %r3948, %r3948, 1;
	add.s32 	%r3950, %r3515, %r3949;
	add.s32 	%r3951, %r3950, %r3514;
	add.s32 	%r3952, %r3951, %r3945;
	add.s32 	%r3524, %r3952, 1859775393;
	shf.l.wrap.b32 	%r3526, %r3516, %r3516, 30;
	shf.l.wrap.b32 	%r3953, %r3524, %r3524, 5;
	// begin inline asm
	lop3.b32 %r3519, %r3520, %r3526, %r3522, 150;
	// end inline asm
	xor.b32  	%r3954, %r3845, %r3829;
	xor.b32  	%r3955, %r3954, %r3893;
	xor.b32  	%r3956, %r3955, %r3933;
	shf.l.wrap.b32 	%r3957, %r3956, %r3956, 1;
	add.s32 	%r3958, %r3519, %r3957;
	add.s32 	%r3959, %r3958, %r3518;
	add.s32 	%r3960, %r3959, %r3953;
	add.s32 	%r3528, %r3960, 1859775393;
	shf.l.wrap.b32 	%r3530, %r3520, %r3520, 30;
	shf.l.wrap.b32 	%r3961, %r3528, %r3528, 5;
	// begin inline asm
	lop3.b32 %r3523, %r3524, %r3530, %r3526, 150;
	// end inline asm
	xor.b32  	%r3962, %r3853, %r3837;
	xor.b32  	%r3963, %r3962, %r3901;
	xor.b32  	%r3964, %r3963, %r3941;
	shf.l.wrap.b32 	%r3965, %r3964, %r3964, 1;
	add.s32 	%r3966, %r3523, %r3965;
	add.s32 	%r3967, %r3966, %r3522;
	add.s32 	%r3968, %r3967, %r3961;
	add.s32 	%r3532, %r3968, 1859775393;
	shf.l.wrap.b32 	%r3534, %r3524, %r3524, 30;
	shf.l.wrap.b32 	%r3969, %r3532, %r3532, 5;
	// begin inline asm
	lop3.b32 %r3527, %r3528, %r3534, %r3530, 150;
	// end inline asm
	xor.b32  	%r3970, %r3861, %r3845;
	xor.b32  	%r3971, %r3970, %r3909;
	xor.b32  	%r3972, %r3971, %r3949;
	shf.l.wrap.b32 	%r3973, %r3972, %r3972, 1;
	add.s32 	%r3974, %r3527, %r3973;
	add.s32 	%r3975, %r3974, %r3526;
	add.s32 	%r3976, %r3975, %r3969;
	add.s32 	%r3536, %r3976, 1859775393;
	shf.l.wrap.b32 	%r3538, %r3528, %r3528, 30;
	shf.l.wrap.b32 	%r3977, %r3536, %r3536, 5;
	// begin inline asm
	lop3.b32 %r3531, %r3532, %r3538, %r3534, 150;
	// end inline asm
	xor.b32  	%r3978, %r3869, %r3853;
	xor.b32  	%r3979, %r3978, %r3917;
	xor.b32  	%r3980, %r3979, %r3957;
	shf.l.wrap.b32 	%r3981, %r3980, %r3980, 1;
	add.s32 	%r3982, %r3531, %r3981;
	add.s32 	%r3983, %r3982, %r3530;
	add.s32 	%r3984, %r3983, %r3977;
	add.s32 	%r3540, %r3984, 1859775393;
	shf.l.wrap.b32 	%r3542, %r3532, %r3532, 30;
	shf.l.wrap.b32 	%r3985, %r3540, %r3540, 5;
	// begin inline asm
	lop3.b32 %r3535, %r3536, %r3542, %r3538, 232;
	// end inline asm
	xor.b32  	%r3986, %r3877, %r3861;
	xor.b32  	%r3987, %r3986, %r3925;
	xor.b32  	%r3988, %r3987, %r3965;
	shf.l.wrap.b32 	%r3989, %r3988, %r3988, 1;
	add.s32 	%r3990, %r3535, %r3989;
	add.s32 	%r3991, %r3990, %r3534;
	add.s32 	%r3992, %r3991, %r3985;
	add.s32 	%r3544, %r3992, -1894007588;
	shf.l.wrap.b32 	%r3546, %r3536, %r3536, 30;
	shf.l.wrap.b32 	%r3993, %r3544, %r3544, 5;
	// begin inline asm
	lop3.b32 %r3539, %r3540, %r3546, %r3542, 232;
	// end inline asm
	xor.b32  	%r3994, %r3885, %r3869;
	xor.b32  	%r3995, %r3994, %r3933;
	xor.b32  	%r3996, %r3995, %r3973;
	shf.l.wrap.b32 	%r3997, %r3996, %r3996, 1;
	add.s32 	%r3998, %r3539, %r3997;
	add.s32 	%r3999, %r3998, %r3538;
	add.s32 	%r4000, %r3999, %r3993;
	add.s32 	%r3548, %r4000, -1894007588;
	shf.l.wrap.b32 	%r3550, %r3540, %r3540, 30;
	shf.l.wrap.b32 	%r4001, %r3548, %r3548, 5;
	// begin inline asm
	lop3.b32 %r3543, %r3544, %r3550, %r3546, 232;
	// end inline asm
	xor.b32  	%r4002, %r3893, %r3877;
	xor.b32  	%r4003, %r4002, %r3941;
	xor.b32  	%r4004, %r4003, %r3981;
	shf.l.wrap.b32 	%r4005, %r4004, %r4004, 1;
	add.s32 	%r4006, %r3543, %r4005;
	add.s32 	%r4007, %r4006, %r3542;
	add.s32 	%r4008, %r4007, %r4001;
	add.s32 	%r3552, %r4008, -1894007588;
	shf.l.wrap.b32 	%r3554, %r3544, %r3544, 30;
	shf.l.wrap.b32 	%r4009, %r3552, %r3552, 5;
	// begin inline asm
	lop3.b32 %r3547, %r3548, %r3554, %r3550, 232;
	// end inline asm
	xor.b32  	%r4010, %r3901, %r3885;
	xor.b32  	%r4011, %r4010, %r3949;
	xor.b32  	%r4012, %r4011, %r3989;
	shf.l.wrap.b32 	%r4013, %r4012, %r4012, 1;
	add.s32 	%r4014, %r3547, %r4013;
	add.s32 	%r4015, %r4014, %r3546;
	add.s32 	%r4016, %r4015, %r4009;
	add.s32 	%r3556, %r4016, -1894007588;
	shf.l.wrap.b32 	%r3558, %r3548, %r3548, 30;
	shf.l.wrap.b32 	%r4017, %r3556, %r3556, 5;
	// begin inline asm
	lop3.b32 %r3551, %r3552, %r3558, %r3554, 232;
	// end inline asm
	xor.b32  	%r4018, %r3909, %r3893;
	xor.b32  	%r4019, %r4018, %r3957;
	xor.b32  	%r4020, %r4019, %r3997;
	shf.l.wrap.b32 	%r4021, %r4020, %r4020, 1;
	add.s32 	%r4022, %r3551, %r4021;
	add.s32 	%r4023, %r4022, %r3550;
	add.s32 	%r4024, %r4023, %r4017;
	add.s32 	%r3560, %r4024, -1894007588;
	shf.l.wrap.b32 	%r3562, %r3552, %r3552, 30;
	shf.l.wrap.b32 	%r4025, %r3560, %r3560, 5;
	// begin inline asm
	lop3.b32 %r3555, %r3556, %r3562, %r3558, 232;
	// end inline asm
	xor.b32  	%r4026, %r3917, %r3901;
	xor.b32  	%r4027, %r4026, %r3965;
	xor.b32  	%r4028, %r4027, %r4005;
	shf.l.wrap.b32 	%r4029, %r4028, %r4028, 1;
	add.s32 	%r4030, %r3555, %r4029;
	add.s32 	%r4031, %r4030, %r3554;
	add.s32 	%r4032, %r4031, %r4025;
	add.s32 	%r3564, %r4032, -1894007588;
	shf.l.wrap.b32 	%r3566, %r3556, %r3556, 30;
	shf.l.wrap.b32 	%r4033, %r3564, %r3564, 5;
	// begin inline asm
	lop3.b32 %r3559, %r3560, %r3566, %r3562, 232;
	// end inline asm
	xor.b32  	%r4034, %r3925, %r3909;
	xor.b32  	%r4035, %r4034, %r3973;
	xor.b32  	%r4036, %r4035, %r4013;
	shf.l.wrap.b32 	%r4037, %r4036, %r4036, 1;
	add.s32 	%r4038, %r3559, %r4037;
	add.s32 	%r4039, %r4038, %r3558;
	add.s32 	%r4040, %r4039, %r4033;
	add.s32 	%r3568, %r4040, -1894007588;
	shf.l.wrap.b32 	%r3570, %r3560, %r3560, 30;
	shf.l.wrap.b32 	%r4041, %r3568, %r3568, 5;
	// begin inline asm
	lop3.b32 %r3563, %r3564, %r3570, %r3566, 232;
	// end inline asm
	xor.b32  	%r4042, %r3933, %r3917;
	xor.b32  	%r4043, %r4042, %r3981;
	xor.b32  	%r4044, %r4043, %r4021;
	shf.l.wrap.b32 	%r4045, %r4044, %r4044, 1;
	add.s32 	%r4046, %r3563, %r4045;
	add.s32 	%r4047, %r4046, %r3562;
	add.s32 	%r4048, %r4047, %r4041;
	add.s32 	%r3572, %r4048, -1894007588;
	shf.l.wrap.b32 	%r3574, %r3564, %r3564, 30;
	shf.l.wrap.b32 	%r4049, %r3572, %r3572, 5;
	// begin inline asm
	lop3.b32 %r3567, %r3568, %r3574, %r3570, 232;
	// end inline asm
	xor.b32  	%r4050, %r3941, %r3925;
	xor.b32  	%r4051, %r4050, %r3989;
	xor.b32  	%r4052, %r4051, %r4029;
	shf.l.wrap.b32 	%r4053, %r4052, %r4052, 1;
	add.s32 	%r4054, %r3567, %r4053;
	add.s32 	%r4055, %r4054, %r3566;
	add.s32 	%r4056, %r4055, %r4049;
	add.s32 	%r3576, %r4056, -1894007588;
	shf.l.wrap.b32 	%r3578, %r3568, %r3568, 30;
	shf.l.wrap.b32 	%r4057, %r3576, %r3576, 5;
	// begin inline asm
	lop3.b32 %r3571, %r3572, %r3578, %r3574, 232;
	// end inline asm
	xor.b32  	%r4058, %r3949, %r3933;
	xor.b32  	%r4059, %r4058, %r3997;
	xor.b32  	%r4060, %r4059, %r4037;
	shf.l.wrap.b32 	%r4061, %r4060, %r4060, 1;
	add.s32 	%r4062, %r3571, %r4061;
	add.s32 	%r4063, %r4062, %r3570;
	add.s32 	%r4064, %r4063, %r4057;
	add.s32 	%r3580, %r4064, -1894007588;
	shf.l.wrap.b32 	%r3582, %r3572, %r3572, 30;
	shf.l.wrap.b32 	%r4065, %r3580, %r3580, 5;
	// begin inline asm
	lop3.b32 %r3575, %r3576, %r3582, %r3578, 232;
	// end inline asm
	xor.b32  	%r4066, %r3957, %r3941;
	xor.b32  	%r4067, %r4066, %r4005;
	xor.b32  	%r4068, %r4067, %r4045;
	shf.l.wrap.b32 	%r4069, %r4068, %r4068, 1;
	add.s32 	%r4070, %r3575, %r4069;
	add.s32 	%r4071, %r4070, %r3574;
	add.s32 	%r4072, %r4071, %r4065;
	add.s32 	%r3584, %r4072, -1894007588;
	shf.l.wrap.b32 	%r3586, %r3576, %r3576, 30;
	shf.l.wrap.b32 	%r4073, %r3584, %r3584, 5;
	// begin inline asm
	lop3.b32 %r3579, %r3580, %r3586, %r3582, 232;
	// end inline asm
	xor.b32  	%r4074, %r3965, %r3949;
	xor.b32  	%r4075, %r4074, %r4013;
	xor.b32  	%r4076, %r4075, %r4053;
	shf.l.wrap.b32 	%r4077, %r4076, %r4076, 1;
	add.s32 	%r4078, %r3579, %r4077;
	add.s32 	%r4079, %r4078, %r3578;
	add.s32 	%r4080, %r4079, %r4073;
	add.s32 	%r3588, %r4080, -1894007588;
	shf.l.wrap.b32 	%r3590, %r3580, %r3580, 30;
	shf.l.wrap.b32 	%r4081, %r3588, %r3588, 5;
	// begin inline asm
	lop3.b32 %r3583, %r3584, %r3590, %r3586, 232;
	// end inline asm
	xor.b32  	%r4082, %r3973, %r3957;
	xor.b32  	%r4083, %r4082, %r4021;
	xor.b32  	%r4084, %r4083, %r4061;
	shf.l.wrap.b32 	%r4085, %r4084, %r4084, 1;
	add.s32 	%r4086, %r3583, %r4085;
	add.s32 	%r4087, %r4086, %r3582;
	add.s32 	%r4088, %r4087, %r4081;
	add.s32 	%r3592, %r4088, -1894007588;
	shf.l.wrap.b32 	%r3594, %r3584, %r3584, 30;
	shf.l.wrap.b32 	%r4089, %r3592, %r3592, 5;
	// begin inline asm
	lop3.b32 %r3587, %r3588, %r3594, %r3590, 232;
	// end inline asm
	xor.b32  	%r4090, %r3981, %r3965;
	xor.b32  	%r4091, %r4090, %r4029;
	xor.b32  	%r4092, %r4091, %r4069;
	shf.l.wrap.b32 	%r4093, %r4092, %r4092, 1;
	add.s32 	%r4094, %r3587, %r4093;
	add.s32 	%r4095, %r4094, %r3586;
	add.s32 	%r4096, %r4095, %r4089;
	add.s32 	%r3596, %r4096, -1894007588;
	shf.l.wrap.b32 	%r3598, %r3588, %r3588, 30;
	shf.l.wrap.b32 	%r4097, %r3596, %r3596, 5;
	// begin inline asm
	lop3.b32 %r3591, %r3592, %r3598, %r3594, 232;
	// end inline asm
	xor.b32  	%r4098, %r3989, %r3973;
	xor.b32  	%r4099, %r4098, %r4037;
	xor.b32  	%r4100, %r4099, %r4077;
	shf.l.wrap.b32 	%r4101, %r4100, %r4100, 1;
	add.s32 	%r4102, %r3591, %r4101;
	add.s32 	%r4103, %r4102, %r3590;
	add.s32 	%r4104, %r4103, %r4097;
	add.s32 	%r3600, %r4104, -1894007588;
	shf.l.wrap.b32 	%r3602, %r3592, %r3592, 30;
	shf.l.wrap.b32 	%r4105, %r3600, %r3600, 5;
	// begin inline asm
	lop3.b32 %r3595, %r3596, %r3602, %r3598, 232;
	// end inline asm
	xor.b32  	%r4106, %r3997, %r3981;
	xor.b32  	%r4107, %r4106, %r4045;
	xor.b32  	%r4108, %r4107, %r4085;
	shf.l.wrap.b32 	%r4109, %r4108, %r4108, 1;
	add.s32 	%r4110, %r3595, %r4109;
	add.s32 	%r4111, %r4110, %r3594;
	add.s32 	%r4112, %r4111, %r4105;
	add.s32 	%r3604, %r4112, -1894007588;
	shf.l.wrap.b32 	%r3606, %r3596, %r3596, 30;
	shf.l.wrap.b32 	%r4113, %r3604, %r3604, 5;
	// begin inline asm
	lop3.b32 %r3599, %r3600, %r3606, %r3602, 232;
	// end inline asm
	xor.b32  	%r4114, %r4005, %r3989;
	xor.b32  	%r4115, %r4114, %r4053;
	xor.b32  	%r4116, %r4115, %r4093;
	shf.l.wrap.b32 	%r4117, %r4116, %r4116, 1;
	add.s32 	%r4118, %r3599, %r4117;
	add.s32 	%r4119, %r4118, %r3598;
	add.s32 	%r4120, %r4119, %r4113;
	add.s32 	%r3608, %r4120, -1894007588;
	shf.l.wrap.b32 	%r3610, %r3600, %r3600, 30;
	shf.l.wrap.b32 	%r4121, %r3608, %r3608, 5;
	// begin inline asm
	lop3.b32 %r3603, %r3604, %r3610, %r3606, 232;
	// end inline asm
	xor.b32  	%r4122, %r4013, %r3997;
	xor.b32  	%r4123, %r4122, %r4061;
	xor.b32  	%r4124, %r4123, %r4101;
	shf.l.wrap.b32 	%r4125, %r4124, %r4124, 1;
	add.s32 	%r4126, %r3603, %r4125;
	add.s32 	%r4127, %r4126, %r3602;
	add.s32 	%r4128, %r4127, %r4121;
	add.s32 	%r3612, %r4128, -1894007588;
	shf.l.wrap.b32 	%r3614, %r3604, %r3604, 30;
	shf.l.wrap.b32 	%r4129, %r3612, %r3612, 5;
	// begin inline asm
	lop3.b32 %r3607, %r3608, %r3614, %r3610, 232;
	// end inline asm
	xor.b32  	%r4130, %r4021, %r4005;
	xor.b32  	%r4131, %r4130, %r4069;
	xor.b32  	%r4132, %r4131, %r4109;
	shf.l.wrap.b32 	%r4133, %r4132, %r4132, 1;
	add.s32 	%r4134, %r3607, %r4133;
	add.s32 	%r4135, %r4134, %r3606;
	add.s32 	%r4136, %r4135, %r4129;
	add.s32 	%r3616, %r4136, -1894007588;
	shf.l.wrap.b32 	%r3618, %r3608, %r3608, 30;
	shf.l.wrap.b32 	%r4137, %r3616, %r3616, 5;
	// begin inline asm
	lop3.b32 %r3611, %r3612, %r3618, %r3614, 232;
	// end inline asm
	xor.b32  	%r4138, %r4029, %r4013;
	xor.b32  	%r4139, %r4138, %r4077;
	xor.b32  	%r4140, %r4139, %r4117;
	shf.l.wrap.b32 	%r4141, %r4140, %r4140, 1;
	add.s32 	%r4142, %r3611, %r4141;
	add.s32 	%r4143, %r4142, %r3610;
	add.s32 	%r4144, %r4143, %r4137;
	add.s32 	%r3620, %r4144, -1894007588;
	shf.l.wrap.b32 	%r3622, %r3612, %r3612, 30;
	shf.l.wrap.b32 	%r4145, %r3620, %r3620, 5;
	// begin inline asm
	lop3.b32 %r3615, %r3616, %r3622, %r3618, 150;
	// end inline asm
	xor.b32  	%r4146, %r4037, %r4021;
	xor.b32  	%r4147, %r4146, %r4085;
	xor.b32  	%r4148, %r4147, %r4125;
	shf.l.wrap.b32 	%r4149, %r4148, %r4148, 1;
	add.s32 	%r4150, %r3615, %r4149;
	add.s32 	%r4151, %r4150, %r3614;
	add.s32 	%r4152, %r4151, %r4145;
	add.s32 	%r3624, %r4152, -899497514;
	shf.l.wrap.b32 	%r3626, %r3616, %r3616, 30;
	shf.l.wrap.b32 	%r4153, %r3624, %r3624, 5;
	// begin inline asm
	lop3.b32 %r3619, %r3620, %r3626, %r3622, 150;
	// end inline asm
	xor.b32  	%r4154, %r4045, %r4029;
	xor.b32  	%r4155, %r4154, %r4093;
	xor.b32  	%r4156, %r4155, %r4133;
	shf.l.wrap.b32 	%r4157, %r4156, %r4156, 1;
	add.s32 	%r4158, %r3619, %r4157;
	add.s32 	%r4159, %r4158, %r3618;
	add.s32 	%r4160, %r4159, %r4153;
	add.s32 	%r3628, %r4160, -899497514;
	shf.l.wrap.b32 	%r3630, %r3620, %r3620, 30;
	shf.l.wrap.b32 	%r4161, %r3628, %r3628, 5;
	// begin inline asm
	lop3.b32 %r3623, %r3624, %r3630, %r3626, 150;
	// end inline asm
	xor.b32  	%r4162, %r4053, %r4037;
	xor.b32  	%r4163, %r4162, %r4101;
	xor.b32  	%r4164, %r4163, %r4141;
	shf.l.wrap.b32 	%r4165, %r4164, %r4164, 1;
	add.s32 	%r4166, %r3623, %r4165;
	add.s32 	%r4167, %r4166, %r3622;
	add.s32 	%r4168, %r4167, %r4161;
	add.s32 	%r3632, %r4168, -899497514;
	shf.l.wrap.b32 	%r3634, %r3624, %r3624, 30;
	shf.l.wrap.b32 	%r4169, %r3632, %r3632, 5;
	// begin inline asm
	lop3.b32 %r3627, %r3628, %r3634, %r3630, 150;
	// end inline asm
	xor.b32  	%r4170, %r4061, %r4045;
	xor.b32  	%r4171, %r4170, %r4109;
	xor.b32  	%r4172, %r4171, %r4149;
	shf.l.wrap.b32 	%r4173, %r4172, %r4172, 1;
	add.s32 	%r4174, %r3627, %r4173;
	add.s32 	%r4175, %r4174, %r3626;
	add.s32 	%r4176, %r4175, %r4169;
	add.s32 	%r3636, %r4176, -899497514;
	shf.l.wrap.b32 	%r3638, %r3628, %r3628, 30;
	shf.l.wrap.b32 	%r4177, %r3636, %r3636, 5;
	// begin inline asm
	lop3.b32 %r3631, %r3632, %r3638, %r3634, 150;
	// end inline asm
	xor.b32  	%r4178, %r4069, %r4053;
	xor.b32  	%r4179, %r4178, %r4117;
	xor.b32  	%r4180, %r4179, %r4157;
	shf.l.wrap.b32 	%r4181, %r4180, %r4180, 1;
	add.s32 	%r4182, %r3631, %r4181;
	add.s32 	%r4183, %r4182, %r3630;
	add.s32 	%r4184, %r4183, %r4177;
	add.s32 	%r3640, %r4184, -899497514;
	shf.l.wrap.b32 	%r3642, %r3632, %r3632, 30;
	shf.l.wrap.b32 	%r4185, %r3640, %r3640, 5;
	// begin inline asm
	lop3.b32 %r3635, %r3636, %r3642, %r3638, 150;
	// end inline asm
	xor.b32  	%r4186, %r4077, %r4061;
	xor.b32  	%r4187, %r4186, %r4125;
	xor.b32  	%r4188, %r4187, %r4165;
	shf.l.wrap.b32 	%r4189, %r4188, %r4188, 1;
	add.s32 	%r4190, %r3635, %r4189;
	add.s32 	%r4191, %r4190, %r3634;
	add.s32 	%r4192, %r4191, %r4185;
	add.s32 	%r3644, %r4192, -899497514;
	shf.l.wrap.b32 	%r3646, %r3636, %r3636, 30;
	shf.l.wrap.b32 	%r4193, %r3644, %r3644, 5;
	// begin inline asm
	lop3.b32 %r3639, %r3640, %r3646, %r3642, 150;
	// end inline asm
	xor.b32  	%r4194, %r4085, %r4069;
	xor.b32  	%r4195, %r4194, %r4133;
	xor.b32  	%r4196, %r4195, %r4173;
	shf.l.wrap.b32 	%r4197, %r4196, %r4196, 1;
	add.s32 	%r4198, %r3639, %r4197;
	add.s32 	%r4199, %r4198, %r3638;
	add.s32 	%r4200, %r4199, %r4193;
	add.s32 	%r3648, %r4200, -899497514;
	shf.l.wrap.b32 	%r3650, %r3640, %r3640, 30;
	shf.l.wrap.b32 	%r4201, %r3648, %r3648, 5;
	// begin inline asm
	lop3.b32 %r3643, %r3644, %r3650, %r3646, 150;
	// end inline asm
	xor.b32  	%r4202, %r4093, %r4077;
	xor.b32  	%r4203, %r4202, %r4141;
	xor.b32  	%r4204, %r4203, %r4181;
	shf.l.wrap.b32 	%r4205, %r4204, %r4204, 1;
	add.s32 	%r4206, %r3643, %r4205;
	add.s32 	%r4207, %r4206, %r3642;
	add.s32 	%r4208, %r4207, %r4201;
	add.s32 	%r3652, %r4208, -899497514;
	shf.l.wrap.b32 	%r3654, %r3644, %r3644, 30;
	shf.l.wrap.b32 	%r4209, %r3652, %r3652, 5;
	// begin inline asm
	lop3.b32 %r3647, %r3648, %r3654, %r3650, 150;
	// end inline asm
	xor.b32  	%r4210, %r4101, %r4085;
	xor.b32  	%r4211, %r4210, %r4149;
	xor.b32  	%r4212, %r4211, %r4189;
	shf.l.wrap.b32 	%r4213, %r4212, %r4212, 1;
	add.s32 	%r4214, %r3647, %r4213;
	add.s32 	%r4215, %r4214, %r3646;
	add.s32 	%r4216, %r4215, %r4209;
	add.s32 	%r3656, %r4216, -899497514;
	shf.l.wrap.b32 	%r3658, %r3648, %r3648, 30;
	shf.l.wrap.b32 	%r4217, %r3656, %r3656, 5;
	// begin inline asm
	lop3.b32 %r3651, %r3652, %r3658, %r3654, 150;
	// end inline asm
	xor.b32  	%r4218, %r4109, %r4093;
	xor.b32  	%r4219, %r4218, %r4157;
	xor.b32  	%r4220, %r4219, %r4197;
	shf.l.wrap.b32 	%r4221, %r4220, %r4220, 1;
	add.s32 	%r4222, %r3651, %r4221;
	add.s32 	%r4223, %r4222, %r3650;
	add.s32 	%r4224, %r4223, %r4217;
	add.s32 	%r3660, %r4224, -899497514;
	shf.l.wrap.b32 	%r3662, %r3652, %r3652, 30;
	shf.l.wrap.b32 	%r4225, %r3660, %r3660, 5;
	// begin inline asm
	lop3.b32 %r3655, %r3656, %r3662, %r3658, 150;
	// end inline asm
	xor.b32  	%r4226, %r4117, %r4101;
	xor.b32  	%r4227, %r4226, %r4165;
	xor.b32  	%r4228, %r4227, %r4205;
	shf.l.wrap.b32 	%r4229, %r4228, %r4228, 1;
	add.s32 	%r4230, %r3655, %r4229;
	add.s32 	%r4231, %r4230, %r3654;
	add.s32 	%r4232, %r4231, %r4225;
	add.s32 	%r3664, %r4232, -899497514;
	shf.l.wrap.b32 	%r3666, %r3656, %r3656, 30;
	shf.l.wrap.b32 	%r4233, %r3664, %r3664, 5;
	// begin inline asm
	lop3.b32 %r3659, %r3660, %r3666, %r3662, 150;
	// end inline asm
	xor.b32  	%r4234, %r4125, %r4109;
	xor.b32  	%r4235, %r4234, %r4173;
	xor.b32  	%r4236, %r4235, %r4213;
	shf.l.wrap.b32 	%r4237, %r4236, %r4236, 1;
	add.s32 	%r4238, %r3659, %r4237;
	add.s32 	%r4239, %r4238, %r3658;
	add.s32 	%r4240, %r4239, %r4233;
	add.s32 	%r3668, %r4240, -899497514;
	shf.l.wrap.b32 	%r3670, %r3660, %r3660, 30;
	shf.l.wrap.b32 	%r4241, %r3668, %r3668, 5;
	// begin inline asm
	lop3.b32 %r3663, %r3664, %r3670, %r3666, 150;
	// end inline asm
	xor.b32  	%r4242, %r4133, %r4117;
	xor.b32  	%r4243, %r4242, %r4181;
	xor.b32  	%r4244, %r4243, %r4221;
	shf.l.wrap.b32 	%r4245, %r4244, %r4244, 1;
	add.s32 	%r4246, %r3663, %r4245;
	add.s32 	%r4247, %r4246, %r3662;
	add.s32 	%r4248, %r4247, %r4241;
	add.s32 	%r3672, %r4248, -899497514;
	shf.l.wrap.b32 	%r3674, %r3664, %r3664, 30;
	shf.l.wrap.b32 	%r4249, %r3672, %r3672, 5;
	// begin inline asm
	lop3.b32 %r3667, %r3668, %r3674, %r3670, 150;
	// end inline asm
	xor.b32  	%r4250, %r4141, %r4125;
	xor.b32  	%r4251, %r4250, %r4189;
	xor.b32  	%r4252, %r4251, %r4229;
	shf.l.wrap.b32 	%r4253, %r4252, %r4252, 1;
	add.s32 	%r4254, %r3667, %r4253;
	add.s32 	%r4255, %r4254, %r3666;
	add.s32 	%r4256, %r4255, %r4249;
	add.s32 	%r3676, %r4256, -899497514;
	shf.l.wrap.b32 	%r3678, %r3668, %r3668, 30;
	shf.l.wrap.b32 	%r4257, %r3676, %r3676, 5;
	// begin inline asm
	lop3.b32 %r3671, %r3672, %r3678, %r3674, 150;
	// end inline asm
	xor.b32  	%r4258, %r4149, %r4133;
	xor.b32  	%r4259, %r4258, %r4197;
	xor.b32  	%r4260, %r4259, %r4237;
	shf.l.wrap.b32 	%r4261, %r4260, %r4260, 1;
	add.s32 	%r4262, %r3671, %r4261;
	add.s32 	%r4263, %r4262, %r3670;
	add.s32 	%r4264, %r4263, %r4257;
	add.s32 	%r3680, %r4264, -899497514;
	shf.l.wrap.b32 	%r3682, %r3672, %r3672, 30;
	shf.l.wrap.b32 	%r4265, %r3680, %r3680, 5;
	// begin inline asm
	lop3.b32 %r3675, %r3676, %r3682, %r3678, 150;
	// end inline asm
	xor.b32  	%r4266, %r4157, %r4141;
	xor.b32  	%r4267, %r4266, %r4205;
	xor.b32  	%r4268, %r4267, %r4245;
	shf.l.wrap.b32 	%r4269, %r4268, %r4268, 1;
	add.s32 	%r4270, %r3675, %r4269;
	add.s32 	%r4271, %r4270, %r3674;
	add.s32 	%r4272, %r4271, %r4265;
	add.s32 	%r3684, %r4272, -899497514;
	shf.l.wrap.b32 	%r3686, %r3676, %r3676, 30;
	shf.l.wrap.b32 	%r4273, %r3684, %r3684, 5;
	// begin inline asm
	lop3.b32 %r3679, %r3680, %r3686, %r3682, 150;
	// end inline asm
	xor.b32  	%r4274, %r4165, %r4149;
	xor.b32  	%r4275, %r4274, %r4213;
	xor.b32  	%r4276, %r4275, %r4253;
	shf.l.wrap.b32 	%r4277, %r4276, %r4276, 1;
	add.s32 	%r4278, %r3679, %r4277;
	add.s32 	%r4279, %r4278, %r3678;
	add.s32 	%r4280, %r4279, %r4273;
	add.s32 	%r3688, %r4280, -899497514;
	shf.l.wrap.b32 	%r3690, %r3680, %r3680, 30;
	shf.l.wrap.b32 	%r4281, %r3688, %r3688, 5;
	// begin inline asm
	lop3.b32 %r3683, %r3684, %r3690, %r3686, 150;
	// end inline asm
	xor.b32  	%r4282, %r4173, %r4157;
	xor.b32  	%r4283, %r4282, %r4221;
	xor.b32  	%r4284, %r4283, %r4261;
	shf.l.wrap.b32 	%r4285, %r4284, %r4284, 1;
	add.s32 	%r4286, %r3683, %r4285;
	add.s32 	%r4287, %r4286, %r3682;
	add.s32 	%r4288, %r4287, %r4281;
	add.s32 	%r3692, %r4288, -899497514;
	shf.l.wrap.b32 	%r3694, %r3684, %r3684, 30;
	shf.l.wrap.b32 	%r4289, %r3692, %r3692, 5;
	// begin inline asm
	lop3.b32 %r3687, %r3688, %r3694, %r3690, 150;
	// end inline asm
	xor.b32  	%r4290, %r4181, %r4165;
	xor.b32  	%r4291, %r4290, %r4229;
	xor.b32  	%r4292, %r4291, %r4269;
	shf.l.wrap.b32 	%r4293, %r4292, %r4292, 1;
	add.s32 	%r4294, %r3687, %r4293;
	add.s32 	%r4295, %r4294, %r3686;
	add.s32 	%r4296, %r4295, %r4289;
	add.s32 	%r4297, %r4296, -899497514;
	shf.l.wrap.b32 	%r3693, %r3688, %r3688, 30;
	shf.l.wrap.b32 	%r4298, %r4297, %r4297, 5;
	// begin inline asm
	lop3.b32 %r3691, %r3692, %r3693, %r3694, 150;
	// end inline asm
	xor.b32  	%r4299, %r4189, %r4173;
	xor.b32  	%r4300, %r4299, %r4237;
	xor.b32  	%r4301, %r4300, %r4277;
	shf.l.wrap.b32 	%r4302, %r4301, %r4301, 1;
	shf.l.wrap.b32 	%r4303, %r3692, %r3692, 30;
	add.s32 	%r4304, %r7103, %r3691;
	add.s32 	%r4305, %r4304, %r4302;
	add.s32 	%r4306, %r4305, %r3690;
	add.s32 	%r4307, %r4306, %r4298;
	add.s32 	%r7103, %r4307, -899497514;
	add.s32 	%r7102, %r4297, %r7102;
	add.s32 	%r7101, %r4303, %r7101;
	add.s32 	%r7100, %r3693, %r7100;
	add.s32 	%r7099, %r3694, %r7099;
	add.s32 	%r4308, %r7098, 128;
	setp.gt.u32 	%p16, %r4308, %r53;
	mov.u32 	%r7098, %r7110;
	@%p16 bra 	$L__BB5_17;
	bra.uni 	$L__BB5_15;

$L__BB5_17:
	mov.u32 	%r7109, 0;
	st.local.v4.u32 	[%rd3], {%r7109, %r7109, %r7109, %r7109};
	st.local.v4.u32 	[%rd3+16], {%r7109, %r7109, %r7109, %r7109};
	st.local.v4.u32 	[%rd3+32], {%r7109, %r7109, %r7109, %r7109};
	st.local.v4.u32 	[%rd3+48], {%r7109, %r7109, %r7109, %r7109};
	setp.le.u32 	%p17, %r53, %r7110;
	@%p17 bra 	$L__BB5_23;

	sub.s32 	%r80, %r53, %r7110;
	not.b32 	%r4312, %r7110;
	add.s32 	%r4313, %r53, %r4312;
	and.b32  	%r7113, %r80, 3;
	setp.lt.u32 	%p18, %r4313, 3;
	@%p18 bra 	$L__BB5_21;

	sub.s32 	%r7108, %r80, %r7113;
	mov.u32 	%r7109, 0;
	add.s64 	%rd41, %rd13, 12;

$L__BB5_20:
	cvt.u64.u32 	%rd40, %r7110;
	add.s64 	%rd42, %rd41, %rd40;
	ld.global.u8 	%rs28, [%rd42];
	or.b32  	%r4315, %r7109, 3;
	cvt.u64.u32 	%rd43, %r4315;
	add.s64 	%rd44, %rd3, %rd43;
	st.local.u8 	[%rd44], %rs28;
	add.s32 	%r4316, %r7110, 1;
	cvt.u64.u32 	%rd45, %r4316;
	add.s64 	%rd46, %rd41, %rd45;
	ld.global.u8 	%rs29, [%rd46];
	add.s32 	%r4317, %r7109, 1;
	xor.b32  	%r4318, %r4317, 3;
	cvt.u64.u32 	%rd47, %r4318;
	add.s64 	%rd48, %rd3, %rd47;
	st.local.u8 	[%rd48], %rs29;
	add.s32 	%r4319, %r7110, 2;
	cvt.u64.u32 	%rd49, %r4319;
	add.s64 	%rd50, %rd41, %rd49;
	ld.global.u8 	%rs30, [%rd50];
	add.s32 	%r4320, %r7109, 2;
	xor.b32  	%r4321, %r4320, 3;
	cvt.u64.u32 	%rd51, %r4321;
	add.s64 	%rd52, %rd3, %rd51;
	st.local.u8 	[%rd52], %rs30;
	add.s32 	%r4322, %r7110, 3;
	cvt.u64.u32 	%rd53, %r4322;
	add.s64 	%rd54, %rd41, %rd53;
	ld.global.u8 	%rs31, [%rd54];
	add.s32 	%r4323, %r7109, 3;
	and.b32  	%r4324, %r4323, -4;
	cvt.u64.u32 	%rd55, %r4324;
	add.s64 	%rd56, %rd3, %rd55;
	st.local.u8 	[%rd56], %rs31;
	add.s32 	%r7109, %r7109, 4;
	add.s32 	%r7110, %r7110, 4;
	add.s32 	%r7108, %r7108, -4;
	setp.ne.s32 	%p19, %r7108, 0;
	@%p19 bra 	$L__BB5_20;

$L__BB5_21:
	setp.eq.s32 	%p20, %r7113, 0;
	@%p20 bra 	$L__BB5_23;

$L__BB5_22:
	.pragma "nounroll";
	cvt.u64.u32 	%rd57, %r7110;
	add.s64 	%rd58, %rd13, %rd57;
	ld.global.u8 	%rs32, [%rd58+12];
	xor.b32  	%r4325, %r7109, 3;
	cvt.u64.u32 	%rd59, %r4325;
	add.s64 	%rd60, %rd3, %rd59;
	st.local.u8 	[%rd60], %rs32;
	add.s32 	%r7109, %r7109, 1;
	add.s32 	%r7110, %r7110, 1;
	add.s32 	%r7113, %r7113, -1;
	setp.ne.s32 	%p21, %r7113, 0;
	@%p21 bra 	$L__BB5_22;

$L__BB5_23:
	setp.lt.u32 	%p22, %r7105, 52;
	@%p22 bra 	$L__BB5_32;
	bra.uni 	$L__BB5_24;

$L__BB5_32:
	add.s32 	%r5266, %r7105, 3;
	xor.b32  	%r5267, %r5266, 3;
	cvt.u64.u32 	%rd69, %r5267;
	add.s64 	%rd70, %rd3, %rd69;
	st.local.u8 	[%rd70], %rs1;
	add.s32 	%r5268, %r7105, 4;
	xor.b32  	%r5269, %r5268, 3;
	cvt.u64.u32 	%rd71, %r5269;
	add.s64 	%rd72, %rd3, %rd71;
	mov.u16 	%rs35, 128;
	st.local.u8 	[%rd72], %rs35;
	bra.uni 	$L__BB5_33;

$L__BB5_24:
	setp.gt.u32 	%p23, %r7105, 60;
	@%p23 bra 	$L__BB5_26;

	add.s32 	%r4326, %r7105, 3;
	xor.b32  	%r4327, %r4326, 3;
	cvt.u64.u32 	%rd61, %r4327;
	add.s64 	%rd62, %rd3, %rd61;
	st.local.u8 	[%rd62], %rs1;

$L__BB5_26:
	setp.gt.u32 	%p24, %r7105, 59;
	@%p24 bra 	$L__BB5_28;

	add.s32 	%r4328, %r7105, 4;
	xor.b32  	%r4329, %r4328, 3;
	cvt.u64.u32 	%rd63, %r4329;
	add.s64 	%rd64, %rd3, %rd63;
	mov.u16 	%rs33, 128;
	st.local.u8 	[%rd64], %rs33;

$L__BB5_28:
	shf.l.wrap.b32 	%r4650, %r7103, %r7103, 5;
	ld.local.v4.u32 	{%r4651, %r4652, %r4653, %r4654}, [%rd3];
	add.s32 	%r4659, %r4650, %r7099;
	// begin inline asm
	lop3.b32 %r4330, %r7102, %r7101, %r7100, 202;
	// end inline asm
	add.s32 	%r4660, %r4659, %r4330;
	add.s32 	%r4661, %r4660, %r4651;
	add.s32 	%r4339, %r4661, 1518500249;
	shf.l.wrap.b32 	%r4662, %r4339, %r4339, 5;
	shf.l.wrap.b32 	%r4341, %r7102, %r7102, 30;
	// begin inline asm
	lop3.b32 %r4334, %r7103, %r4341, %r7101, 202;
	// end inline asm
	add.s32 	%r4663, %r7100, %r4334;
	add.s32 	%r4664, %r4663, %r4652;
	add.s32 	%r4665, %r4664, %r4662;
	add.s32 	%r4343, %r4665, 1518500249;
	shf.l.wrap.b32 	%r4666, %r4343, %r4343, 5;
	shf.l.wrap.b32 	%r4345, %r7103, %r7103, 30;
	// begin inline asm
	lop3.b32 %r4338, %r4339, %r4345, %r4341, 202;
	// end inline asm
	add.s32 	%r4667, %r7101, %r4338;
	add.s32 	%r4668, %r4667, %r4653;
	add.s32 	%r4669, %r4668, %r4666;
	add.s32 	%r4347, %r4669, 1518500249;
	shf.l.wrap.b32 	%r4349, %r4339, %r4339, 30;
	shf.l.wrap.b32 	%r4670, %r4347, %r4347, 5;
	// begin inline asm
	lop3.b32 %r4342, %r4343, %r4349, %r4345, 202;
	// end inline asm
	add.s32 	%r4671, %r4341, %r4342;
	add.s32 	%r4672, %r4671, %r4654;
	add.s32 	%r4673, %r4672, %r4670;
	add.s32 	%r4351, %r4673, 1518500249;
	shf.l.wrap.b32 	%r4353, %r4343, %r4343, 30;
	shf.l.wrap.b32 	%r4674, %r4351, %r4351, 5;
	// begin inline asm
	lop3.b32 %r4346, %r4347, %r4353, %r4349, 202;
	// end inline asm
	ld.local.v4.u32 	{%r4675, %r4676, %r4677, %r4678}, [%rd3+16];
	add.s32 	%r4683, %r4345, %r4346;
	add.s32 	%r4684, %r4683, %r4675;
	add.s32 	%r4685, %r4684, %r4674;
	add.s32 	%r4355, %r4685, 1518500249;
	shf.l.wrap.b32 	%r4357, %r4347, %r4347, 30;
	shf.l.wrap.b32 	%r4686, %r4355, %r4355, 5;
	// begin inline asm
	lop3.b32 %r4350, %r4351, %r4357, %r4353, 202;
	// end inline asm
	add.s32 	%r4687, %r4349, %r4350;
	add.s32 	%r4688, %r4687, %r4676;
	add.s32 	%r4689, %r4688, %r4686;
	add.s32 	%r4359, %r4689, 1518500249;
	shf.l.wrap.b32 	%r4361, %r4351, %r4351, 30;
	shf.l.wrap.b32 	%r4690, %r4359, %r4359, 5;
	// begin inline asm
	lop3.b32 %r4354, %r4355, %r4361, %r4357, 202;
	// end inline asm
	add.s32 	%r4691, %r4353, %r4354;
	add.s32 	%r4692, %r4691, %r4677;
	add.s32 	%r4693, %r4692, %r4690;
	add.s32 	%r4363, %r4693, 1518500249;
	shf.l.wrap.b32 	%r4365, %r4355, %r4355, 30;
	shf.l.wrap.b32 	%r4694, %r4363, %r4363, 5;
	// begin inline asm
	lop3.b32 %r4358, %r4359, %r4365, %r4361, 202;
	// end inline asm
	add.s32 	%r4695, %r4358, %r4678;
	add.s32 	%r4696, %r4695, %r4357;
	add.s32 	%r4697, %r4696, %r4694;
	add.s32 	%r4367, %r4697, 1518500249;
	shf.l.wrap.b32 	%r4369, %r4359, %r4359, 30;
	shf.l.wrap.b32 	%r4698, %r4367, %r4367, 5;
	// begin inline asm
	lop3.b32 %r4362, %r4363, %r4369, %r4365, 202;
	// end inline asm
	ld.local.v4.u32 	{%r4699, %r4700, %r4701, %r4702}, [%rd3+32];
	add.s32 	%r4707, %r4362, %r4699;
	add.s32 	%r4708, %r4707, %r4361;
	add.s32 	%r4709, %r4708, %r4698;
	add.s32 	%r4371, %r4709, 1518500249;
	shf.l.wrap.b32 	%r4373, %r4363, %r4363, 30;
	shf.l.wrap.b32 	%r4710, %r4371, %r4371, 5;
	// begin inline asm
	lop3.b32 %r4366, %r4367, %r4373, %r4369, 202;
	// end inline asm
	add.s32 	%r4711, %r4366, %r4700;
	add.s32 	%r4712, %r4711, %r4365;
	add.s32 	%r4713, %r4712, %r4710;
	add.s32 	%r4375, %r4713, 1518500249;
	shf.l.wrap.b32 	%r4377, %r4367, %r4367, 30;
	shf.l.wrap.b32 	%r4714, %r4375, %r4375, 5;
	// begin inline asm
	lop3.b32 %r4370, %r4371, %r4377, %r4373, 202;
	// end inline asm
	add.s32 	%r4715, %r4370, %r4701;
	add.s32 	%r4716, %r4715, %r4369;
	add.s32 	%r4717, %r4716, %r4714;
	add.s32 	%r4379, %r4717, 1518500249;
	shf.l.wrap.b32 	%r4381, %r4371, %r4371, 30;
	shf.l.wrap.b32 	%r4718, %r4379, %r4379, 5;
	// begin inline asm
	lop3.b32 %r4374, %r4375, %r4381, %r4377, 202;
	// end inline asm
	add.s32 	%r4719, %r4374, %r4702;
	add.s32 	%r4720, %r4719, %r4373;
	add.s32 	%r4721, %r4720, %r4718;
	add.s32 	%r4383, %r4721, 1518500249;
	shf.l.wrap.b32 	%r4385, %r4375, %r4375, 30;
	shf.l.wrap.b32 	%r4722, %r4383, %r4383, 5;
	// begin inline asm
	lop3.b32 %r4378, %r4379, %r4385, %r4381, 202;
	// end inline asm
	ld.local.v4.u32 	{%r4723, %r4724, %r4725, %r4726}, [%rd3+48];
	add.s32 	%r4731, %r4378, %r4723;
	add.s32 	%r4732, %r4731, %r4377;
	add.s32 	%r4733, %r4732, %r4722;
	add.s32 	%r4387, %r4733, 1518500249;
	shf.l.wrap.b32 	%r4389, %r4379, %r4379, 30;
	shf.l.wrap.b32 	%r4734, %r4387, %r4387, 5;
	// begin inline asm
	lop3.b32 %r4382, %r4383, %r4389, %r4385, 202;
	// end inline asm
	add.s32 	%r4735, %r4382, %r4724;
	add.s32 	%r4736, %r4735, %r4381;
	add.s32 	%r4737, %r4736, %r4734;
	add.s32 	%r4391, %r4737, 1518500249;
	shf.l.wrap.b32 	%r4393, %r4383, %r4383, 30;
	shf.l.wrap.b32 	%r4738, %r4391, %r4391, 5;
	// begin inline asm
	lop3.b32 %r4386, %r4387, %r4393, %r4389, 202;
	// end inline asm
	add.s32 	%r4739, %r4386, %r4725;
	add.s32 	%r4740, %r4739, %r4385;
	add.s32 	%r4741, %r4740, %r4738;
	add.s32 	%r4395, %r4741, 1518500249;
	shf.l.wrap.b32 	%r4397, %r4387, %r4387, 30;
	shf.l.wrap.b32 	%r4742, %r4395, %r4395, 5;
	// begin inline asm
	lop3.b32 %r4390, %r4391, %r4397, %r4393, 202;
	// end inline asm
	add.s32 	%r4743, %r4390, %r4726;
	add.s32 	%r4744, %r4743, %r4389;
	add.s32 	%r4745, %r4744, %r4742;
	add.s32 	%r4399, %r4745, 1518500249;
	shf.l.wrap.b32 	%r4401, %r4391, %r4391, 30;
	shf.l.wrap.b32 	%r4746, %r4399, %r4399, 5;
	// begin inline asm
	lop3.b32 %r4394, %r4395, %r4401, %r4397, 202;
	// end inline asm
	xor.b32  	%r4747, %r4699, %r4724;
	xor.b32  	%r4748, %r4747, %r4653;
	xor.b32  	%r4749, %r4748, %r4651;
	shf.l.wrap.b32 	%r4750, %r4749, %r4749, 1;
	add.s32 	%r4751, %r4394, %r4750;
	add.s32 	%r4752, %r4751, %r4393;
	add.s32 	%r4753, %r4752, %r4746;
	add.s32 	%r4403, %r4753, 1518500249;
	shf.l.wrap.b32 	%r4405, %r4395, %r4395, 30;
	shf.l.wrap.b32 	%r4754, %r4403, %r4403, 5;
	// begin inline asm
	lop3.b32 %r4398, %r4399, %r4405, %r4401, 202;
	// end inline asm
	xor.b32  	%r4755, %r4700, %r4725;
	xor.b32  	%r4756, %r4755, %r4654;
	xor.b32  	%r4757, %r4756, %r4652;
	shf.l.wrap.b32 	%r4758, %r4757, %r4757, 1;
	add.s32 	%r4759, %r4398, %r4758;
	add.s32 	%r4760, %r4759, %r4397;
	add.s32 	%r4761, %r4760, %r4754;
	add.s32 	%r4407, %r4761, 1518500249;
	shf.l.wrap.b32 	%r4409, %r4399, %r4399, 30;
	shf.l.wrap.b32 	%r4762, %r4407, %r4407, 5;
	// begin inline asm
	lop3.b32 %r4402, %r4403, %r4409, %r4405, 202;
	// end inline asm
	xor.b32  	%r4763, %r4701, %r4726;
	xor.b32  	%r4764, %r4763, %r4675;
	xor.b32  	%r4765, %r4764, %r4653;
	shf.l.wrap.b32 	%r4766, %r4765, %r4765, 1;
	add.s32 	%r4767, %r4402, %r4766;
	add.s32 	%r4768, %r4767, %r4401;
	add.s32 	%r4769, %r4768, %r4762;
	add.s32 	%r4411, %r4769, 1518500249;
	shf.l.wrap.b32 	%r4413, %r4403, %r4403, 30;
	shf.l.wrap.b32 	%r4770, %r4411, %r4411, 5;
	// begin inline asm
	lop3.b32 %r4406, %r4407, %r4413, %r4409, 202;
	// end inline asm
	xor.b32  	%r4771, %r4702, %r4750;
	xor.b32  	%r4772, %r4771, %r4676;
	xor.b32  	%r4773, %r4772, %r4654;
	shf.l.wrap.b32 	%r4774, %r4773, %r4773, 1;
	add.s32 	%r4775, %r4406, %r4774;
	add.s32 	%r4776, %r4775, %r4405;
	add.s32 	%r4777, %r4776, %r4770;
	add.s32 	%r4415, %r4777, 1518500249;
	shf.l.wrap.b32 	%r4417, %r4407, %r4407, 30;
	shf.l.wrap.b32 	%r4778, %r4415, %r4415, 5;
	// begin inline asm
	lop3.b32 %r4410, %r4411, %r4417, %r4413, 150;
	// end inline asm
	xor.b32  	%r4779, %r4723, %r4758;
	xor.b32  	%r4780, %r4779, %r4677;
	xor.b32  	%r4781, %r4780, %r4675;
	shf.l.wrap.b32 	%r4782, %r4781, %r4781, 1;
	add.s32 	%r4783, %r4410, %r4782;
	add.s32 	%r4784, %r4783, %r4409;
	add.s32 	%r4785, %r4784, %r4778;
	add.s32 	%r4419, %r4785, 1859775393;
	shf.l.wrap.b32 	%r4421, %r4411, %r4411, 30;
	shf.l.wrap.b32 	%r4786, %r4419, %r4419, 5;
	// begin inline asm
	lop3.b32 %r4414, %r4415, %r4421, %r4417, 150;
	// end inline asm
	xor.b32  	%r4787, %r4724, %r4766;
	xor.b32  	%r4788, %r4787, %r4678;
	xor.b32  	%r4789, %r4788, %r4676;
	shf.l.wrap.b32 	%r4790, %r4789, %r4789, 1;
	add.s32 	%r4791, %r4414, %r4790;
	add.s32 	%r4792, %r4791, %r4413;
	add.s32 	%r4793, %r4792, %r4786;
	add.s32 	%r4423, %r4793, 1859775393;
	shf.l.wrap.b32 	%r4425, %r4415, %r4415, 30;
	shf.l.wrap.b32 	%r4794, %r4423, %r4423, 5;
	// begin inline asm
	lop3.b32 %r4418, %r4419, %r4425, %r4421, 150;
	// end inline asm
	xor.b32  	%r4795, %r4725, %r4774;
	xor.b32  	%r4796, %r4795, %r4699;
	xor.b32  	%r4797, %r4796, %r4677;
	shf.l.wrap.b32 	%r4798, %r4797, %r4797, 1;
	add.s32 	%r4799, %r4418, %r4798;
	add.s32 	%r4800, %r4799, %r4417;
	add.s32 	%r4801, %r4800, %r4794;
	add.s32 	%r4427, %r4801, 1859775393;
	shf.l.wrap.b32 	%r4429, %r4419, %r4419, 30;
	shf.l.wrap.b32 	%r4802, %r4427, %r4427, 5;
	// begin inline asm
	lop3.b32 %r4422, %r4423, %r4429, %r4425, 150;
	// end inline asm
	xor.b32  	%r4803, %r4726, %r4782;
	xor.b32  	%r4804, %r4803, %r4700;
	xor.b32  	%r4805, %r4804, %r4678;
	shf.l.wrap.b32 	%r4806, %r4805, %r4805, 1;
	add.s32 	%r4807, %r4422, %r4806;
	add.s32 	%r4808, %r4807, %r4421;
	add.s32 	%r4809, %r4808, %r4802;
	add.s32 	%r4431, %r4809, 1859775393;
	shf.l.wrap.b32 	%r4433, %r4423, %r4423, 30;
	shf.l.wrap.b32 	%r4810, %r4431, %r4431, 5;
	// begin inline asm
	lop3.b32 %r4426, %r4427, %r4433, %r4429, 150;
	// end inline asm
	xor.b32  	%r4811, %r4790, %r4750;
	xor.b32  	%r4812, %r4811, %r4701;
	xor.b32  	%r4813, %r4812, %r4699;
	shf.l.wrap.b32 	%r4814, %r4813, %r4813, 1;
	add.s32 	%r4815, %r4426, %r4814;
	add.s32 	%r4816, %r4815, %r4425;
	add.s32 	%r4817, %r4816, %r4810;
	add.s32 	%r4435, %r4817, 1859775393;
	shf.l.wrap.b32 	%r4437, %r4427, %r4427, 30;
	shf.l.wrap.b32 	%r4818, %r4435, %r4435, 5;
	// begin inline asm
	lop3.b32 %r4430, %r4431, %r4437, %r4433, 150;
	// end inline asm
	xor.b32  	%r4819, %r4798, %r4758;
	xor.b32  	%r4820, %r4819, %r4702;
	xor.b32  	%r4821, %r4820, %r4700;
	shf.l.wrap.b32 	%r4822, %r4821, %r4821, 1;
	add.s32 	%r4823, %r4430, %r4822;
	add.s32 	%r4824, %r4823, %r4429;
	add.s32 	%r4825, %r4824, %r4818;
	add.s32 	%r4439, %r4825, 1859775393;
	shf.l.wrap.b32 	%r4441, %r4431, %r4431, 30;
	shf.l.wrap.b32 	%r4826, %r4439, %r4439, 5;
	// begin inline asm
	lop3.b32 %r4434, %r4435, %r4441, %r4437, 150;
	// end inline asm
	xor.b32  	%r4827, %r4806, %r4766;
	xor.b32  	%r4828, %r4827, %r4723;
	xor.b32  	%r4829, %r4828, %r4701;
	shf.l.wrap.b32 	%r4830, %r4829, %r4829, 1;
	add.s32 	%r4831, %r4434, %r4830;
	add.s32 	%r4832, %r4831, %r4433;
	add.s32 	%r4833, %r4832, %r4826;
	add.s32 	%r4443, %r4833, 1859775393;
	shf.l.wrap.b32 	%r4445, %r4435, %r4435, 30;
	shf.l.wrap.b32 	%r4834, %r4443, %r4443, 5;
	// begin inline asm
	lop3.b32 %r4438, %r4439, %r4445, %r4441, 150;
	// end inline asm
	xor.b32  	%r4835, %r4814, %r4774;
	xor.b32  	%r4836, %r4835, %r4724;
	xor.b32  	%r4837, %r4836, %r4702;
	shf.l.wrap.b32 	%r4838, %r4837, %r4837, 1;
	add.s32 	%r4839, %r4438, %r4838;
	add.s32 	%r4840, %r4839, %r4437;
	add.s32 	%r4841, %r4840, %r4834;
	add.s32 	%r4447, %r4841, 1859775393;
	shf.l.wrap.b32 	%r4449, %r4439, %r4439, 30;
	shf.l.wrap.b32 	%r4842, %r4447, %r4447, 5;
	// begin inline asm
	lop3.b32 %r4442, %r4443, %r4449, %r4445, 150;
	// end inline asm
	xor.b32  	%r4843, %r4822, %r4782;
	xor.b32  	%r4844, %r4843, %r4725;
	xor.b32  	%r4845, %r4844, %r4723;
	shf.l.wrap.b32 	%r4846, %r4845, %r4845, 1;
	add.s32 	%r4847, %r4442, %r4846;
	add.s32 	%r4848, %r4847, %r4441;
	add.s32 	%r4849, %r4848, %r4842;
	add.s32 	%r4451, %r4849, 1859775393;
	shf.l.wrap.b32 	%r4453, %r4443, %r4443, 30;
	shf.l.wrap.b32 	%r4850, %r4451, %r4451, 5;
	// begin inline asm
	lop3.b32 %r4446, %r4447, %r4453, %r4449, 150;
	// end inline asm
	xor.b32  	%r4851, %r4830, %r4790;
	xor.b32  	%r4852, %r4851, %r4726;
	xor.b32  	%r4853, %r4852, %r4724;
	shf.l.wrap.b32 	%r4854, %r4853, %r4853, 1;
	add.s32 	%r4855, %r4446, %r4854;
	add.s32 	%r4856, %r4855, %r4445;
	add.s32 	%r4857, %r4856, %r4850;
	add.s32 	%r4455, %r4857, 1859775393;
	shf.l.wrap.b32 	%r4457, %r4447, %r4447, 30;
	shf.l.wrap.b32 	%r4858, %r4455, %r4455, 5;
	// begin inline asm
	lop3.b32 %r4450, %r4451, %r4457, %r4453, 150;
	// end inline asm
	xor.b32  	%r4859, %r4798, %r4750;
	xor.b32  	%r4860, %r4859, %r4838;
	xor.b32  	%r4861, %r4860, %r4725;
	shf.l.wrap.b32 	%r4862, %r4861, %r4861, 1;
	add.s32 	%r4863, %r4450, %r4862;
	add.s32 	%r4864, %r4863, %r4449;
	add.s32 	%r4865, %r4864, %r4858;
	add.s32 	%r4459, %r4865, 1859775393;
	shf.l.wrap.b32 	%r4461, %r4451, %r4451, 30;
	shf.l.wrap.b32 	%r4866, %r4459, %r4459, 5;
	// begin inline asm
	lop3.b32 %r4454, %r4455, %r4461, %r4457, 150;
	// end inline asm
	xor.b32  	%r4867, %r4806, %r4758;
	xor.b32  	%r4868, %r4867, %r4846;
	xor.b32  	%r4869, %r4868, %r4726;
	shf.l.wrap.b32 	%r4870, %r4869, %r4869, 1;
	add.s32 	%r4871, %r4454, %r4870;
	add.s32 	%r4872, %r4871, %r4453;
	add.s32 	%r4873, %r4872, %r4866;
	add.s32 	%r4463, %r4873, 1859775393;
	shf.l.wrap.b32 	%r4465, %r4455, %r4455, 30;
	shf.l.wrap.b32 	%r4874, %r4463, %r4463, 5;
	// begin inline asm
	lop3.b32 %r4458, %r4459, %r4465, %r4461, 150;
	// end inline asm
	xor.b32  	%r4875, %r4766, %r4750;
	xor.b32  	%r4876, %r4875, %r4814;
	xor.b32  	%r4877, %r4876, %r4854;
	shf.l.wrap.b32 	%r4878, %r4877, %r4877, 1;
	add.s32 	%r4879, %r4458, %r4878;
	add.s32 	%r4880, %r4879, %r4457;
	add.s32 	%r4881, %r4880, %r4874;
	add.s32 	%r4467, %r4881, 1859775393;
	shf.l.wrap.b32 	%r4469, %r4459, %r4459, 30;
	shf.l.wrap.b32 	%r4882, %r4467, %r4467, 5;
	// begin inline asm
	lop3.b32 %r4462, %r4463, %r4469, %r4465, 150;
	// end inline asm
	xor.b32  	%r4883, %r4774, %r4758;
	xor.b32  	%r4884, %r4883, %r4822;
	xor.b32  	%r4885, %r4884, %r4862;
	shf.l.wrap.b32 	%r4886, %r4885, %r4885, 1;
	add.s32 	%r4887, %r4462, %r4886;
	add.s32 	%r4888, %r4887, %r4461;
	add.s32 	%r4889, %r4888, %r4882;
	add.s32 	%r4471, %r4889, 1859775393;
	shf.l.wrap.b32 	%r4473, %r4463, %r4463, 30;
	shf.l.wrap.b32 	%r4890, %r4471, %r4471, 5;
	// begin inline asm
	lop3.b32 %r4466, %r4467, %r4473, %r4469, 150;
	// end inline asm
	xor.b32  	%r4891, %r4782, %r4766;
	xor.b32  	%r4892, %r4891, %r4830;
	xor.b32  	%r4893, %r4892, %r4870;
	shf.l.wrap.b32 	%r4894, %r4893, %r4893, 1;
	add.s32 	%r4895, %r4466, %r4894;
	add.s32 	%r4896, %r4895, %r4465;
	add.s32 	%r4897, %r4896, %r4890;
	add.s32 	%r4475, %r4897, 1859775393;
	shf.l.wrap.b32 	%r4477, %r4467, %r4467, 30;
	shf.l.wrap.b32 	%r4898, %r4475, %r4475, 5;
	// begin inline asm
	lop3.b32 %r4470, %r4471, %r4477, %r4473, 150;
	// end inline asm
	xor.b32  	%r4899, %r4790, %r4774;
	xor.b32  	%r4900, %r4899, %r4838;
	xor.b32  	%r4901, %r4900, %r4878;
	shf.l.wrap.b32 	%r4902, %r4901, %r4901, 1;
	add.s32 	%r4903, %r4470, %r4902;
	add.s32 	%r4904, %r4903, %r4469;
	add.s32 	%r4905, %r4904, %r4898;
	add.s32 	%r4479, %r4905, 1859775393;
	shf.l.wrap.b32 	%r4481, %r4471, %r4471, 30;
	shf.l.wrap.b32 	%r4906, %r4479, %r4479, 5;
	// begin inline asm
	lop3.b32 %r4474, %r4475, %r4481, %r4477, 150;
	// end inline asm
	xor.b32  	%r4907, %r4798, %r4782;
	xor.b32  	%r4908, %r4907, %r4846;
	xor.b32  	%r4909, %r4908, %r4886;
	shf.l.wrap.b32 	%r4910, %r4909, %r4909, 1;
	add.s32 	%r4911, %r4474, %r4910;
	add.s32 	%r4912, %r4911, %r4473;
	add.s32 	%r4913, %r4912, %r4906;
	add.s32 	%r4483, %r4913, 1859775393;
	shf.l.wrap.b32 	%r4485, %r4475, %r4475, 30;
	shf.l.wrap.b32 	%r4914, %r4483, %r4483, 5;
	// begin inline asm
	lop3.b32 %r4478, %r4479, %r4485, %r4481, 150;
	// end inline asm
	xor.b32  	%r4915, %r4806, %r4790;
	xor.b32  	%r4916, %r4915, %r4854;
	xor.b32  	%r4917, %r4916, %r4894;
	shf.l.wrap.b32 	%r4918, %r4917, %r4917, 1;
	add.s32 	%r4919, %r4478, %r4918;
	add.s32 	%r4920, %r4919, %r4477;
	add.s32 	%r4921, %r4920, %r4914;
	add.s32 	%r4487, %r4921, 1859775393;
	shf.l.wrap.b32 	%r4489, %r4479, %r4479, 30;
	shf.l.wrap.b32 	%r4922, %r4487, %r4487, 5;
	// begin inline asm
	lop3.b32 %r4482, %r4483, %r4489, %r4485, 150;
	// end inline asm
	xor.b32  	%r4923, %r4814, %r4798;
	xor.b32  	%r4924, %r4923, %r4862;
	xor.b32  	%r4925, %r4924, %r4902;
	shf.l.wrap.b32 	%r4926, %r4925, %r4925, 1;
	add.s32 	%r4927, %r4482, %r4926;
	add.s32 	%r4928, %r4927, %r4481;
	add.s32 	%r4929, %r4928, %r4922;
	add.s32 	%r4491, %r4929, 1859775393;
	shf.l.wrap.b32 	%r4493, %r4483, %r4483, 30;
	shf.l.wrap.b32 	%r4930, %r4491, %r4491, 5;
	// begin inline asm
	lop3.b32 %r4486, %r4487, %r4493, %r4489, 150;
	// end inline asm
	xor.b32  	%r4931, %r4822, %r4806;
	xor.b32  	%r4932, %r4931, %r4870;
	xor.b32  	%r4933, %r4932, %r4910;
	shf.l.wrap.b32 	%r4934, %r4933, %r4933, 1;
	add.s32 	%r4935, %r4486, %r4934;
	add.s32 	%r4936, %r4935, %r4485;
	add.s32 	%r4937, %r4936, %r4930;
	add.s32 	%r4495, %r4937, 1859775393;
	shf.l.wrap.b32 	%r4497, %r4487, %r4487, 30;
	shf.l.wrap.b32 	%r4938, %r4495, %r4495, 5;
	// begin inline asm
	lop3.b32 %r4490, %r4491, %r4497, %r4493, 232;
	// end inline asm
	xor.b32  	%r4939, %r4830, %r4814;
	xor.b32  	%r4940, %r4939, %r4878;
	xor.b32  	%r4941, %r4940, %r4918;
	shf.l.wrap.b32 	%r4942, %r4941, %r4941, 1;
	add.s32 	%r4943, %r4490, %r4942;
	add.s32 	%r4944, %r4943, %r4489;
	add.s32 	%r4945, %r4944, %r4938;
	add.s32 	%r4499, %r4945, -1894007588;
	shf.l.wrap.b32 	%r4501, %r4491, %r4491, 30;
	shf.l.wrap.b32 	%r4946, %r4499, %r4499, 5;
	// begin inline asm
	lop3.b32 %r4494, %r4495, %r4501, %r4497, 232;
	// end inline asm
	xor.b32  	%r4947, %r4838, %r4822;
	xor.b32  	%r4948, %r4947, %r4886;
	xor.b32  	%r4949, %r4948, %r4926;
	shf.l.wrap.b32 	%r4950, %r4949, %r4949, 1;
	add.s32 	%r4951, %r4494, %r4950;
	add.s32 	%r4952, %r4951, %r4493;
	add.s32 	%r4953, %r4952, %r4946;
	add.s32 	%r4503, %r4953, -1894007588;
	shf.l.wrap.b32 	%r4505, %r4495, %r4495, 30;
	shf.l.wrap.b32 	%r4954, %r4503, %r4503, 5;
	// begin inline asm
	lop3.b32 %r4498, %r4499, %r4505, %r4501, 232;
	// end inline asm
	xor.b32  	%r4955, %r4846, %r4830;
	xor.b32  	%r4956, %r4955, %r4894;
	xor.b32  	%r4957, %r4956, %r4934;
	shf.l.wrap.b32 	%r4958, %r4957, %r4957, 1;
	add.s32 	%r4959, %r4498, %r4958;
	add.s32 	%r4960, %r4959, %r4497;
	add.s32 	%r4961, %r4960, %r4954;
	add.s32 	%r4507, %r4961, -1894007588;
	shf.l.wrap.b32 	%r4509, %r4499, %r4499, 30;
	shf.l.wrap.b32 	%r4962, %r4507, %r4507, 5;
	// begin inline asm
	lop3.b32 %r4502, %r4503, %r4509, %r4505, 232;
	// end inline asm
	xor.b32  	%r4963, %r4854, %r4838;
	xor.b32  	%r4964, %r4963, %r4902;
	xor.b32  	%r4965, %r4964, %r4942;
	shf.l.wrap.b32 	%r4966, %r4965, %r4965, 1;
	add.s32 	%r4967, %r4502, %r4966;
	add.s32 	%r4968, %r4967, %r4501;
	add.s32 	%r4969, %r4968, %r4962;
	add.s32 	%r4511, %r4969, -1894007588;
	shf.l.wrap.b32 	%r4513, %r4503, %r4503, 30;
	shf.l.wrap.b32 	%r4970, %r4511, %r4511, 5;
	// begin inline asm
	lop3.b32 %r4506, %r4507, %r4513, %r4509, 232;
	// end inline asm
	xor.b32  	%r4971, %r4862, %r4846;
	xor.b32  	%r4972, %r4971, %r4910;
	xor.b32  	%r4973, %r4972, %r4950;
	shf.l.wrap.b32 	%r4974, %r4973, %r4973, 1;
	add.s32 	%r4975, %r4506, %r4974;
	add.s32 	%r4976, %r4975, %r4505;
	add.s32 	%r4977, %r4976, %r4970;
	add.s32 	%r4515, %r4977, -1894007588;
	shf.l.wrap.b32 	%r4517, %r4507, %r4507, 30;
	shf.l.wrap.b32 	%r4978, %r4515, %r4515, 5;
	// begin inline asm
	lop3.b32 %r4510, %r4511, %r4517, %r4513, 232;
	// end inline asm
	xor.b32  	%r4979, %r4870, %r4854;
	xor.b32  	%r4980, %r4979, %r4918;
	xor.b32  	%r4981, %r4980, %r4958;
	shf.l.wrap.b32 	%r4982, %r4981, %r4981, 1;
	add.s32 	%r4983, %r4510, %r4982;
	add.s32 	%r4984, %r4983, %r4509;
	add.s32 	%r4985, %r4984, %r4978;
	add.s32 	%r4519, %r4985, -1894007588;
	shf.l.wrap.b32 	%r4521, %r4511, %r4511, 30;
	shf.l.wrap.b32 	%r4986, %r4519, %r4519, 5;
	// begin inline asm
	lop3.b32 %r4514, %r4515, %r4521, %r4517, 232;
	// end inline asm
	xor.b32  	%r4987, %r4878, %r4862;
	xor.b32  	%r4988, %r4987, %r4926;
	xor.b32  	%r4989, %r4988, %r4966;
	shf.l.wrap.b32 	%r4990, %r4989, %r4989, 1;
	add.s32 	%r4991, %r4514, %r4990;
	add.s32 	%r4992, %r4991, %r4513;
	add.s32 	%r4993, %r4992, %r4986;
	add.s32 	%r4523, %r4993, -1894007588;
	shf.l.wrap.b32 	%r4525, %r4515, %r4515, 30;
	shf.l.wrap.b32 	%r4994, %r4523, %r4523, 5;
	// begin inline asm
	lop3.b32 %r4518, %r4519, %r4525, %r4521, 232;
	// end inline asm
	xor.b32  	%r4995, %r4886, %r4870;
	xor.b32  	%r4996, %r4995, %r4934;
	xor.b32  	%r4997, %r4996, %r4974;
	shf.l.wrap.b32 	%r4998, %r4997, %r4997, 1;
	add.s32 	%r4999, %r4518, %r4998;
	add.s32 	%r5000, %r4999, %r4517;
	add.s32 	%r5001, %r5000, %r4994;
	add.s32 	%r4527, %r5001, -1894007588;
	shf.l.wrap.b32 	%r4529, %r4519, %r4519, 30;
	shf.l.wrap.b32 	%r5002, %r4527, %r4527, 5;
	// begin inline asm
	lop3.b32 %r4522, %r4523, %r4529, %r4525, 232;
	// end inline asm
	xor.b32  	%r5003, %r4894, %r4878;
	xor.b32  	%r5004, %r5003, %r4942;
	xor.b32  	%r5005, %r5004, %r4982;
	shf.l.wrap.b32 	%r5006, %r5005, %r5005, 1;
	add.s32 	%r5007, %r4522, %r5006;
	add.s32 	%r5008, %r5007, %r4521;
	add.s32 	%r5009, %r5008, %r5002;
	add.s32 	%r4531, %r5009, -1894007588;
	shf.l.wrap.b32 	%r4533, %r4523, %r4523, 30;
	shf.l.wrap.b32 	%r5010, %r4531, %r4531, 5;
	// begin inline asm
	lop3.b32 %r4526, %r4527, %r4533, %r4529, 232;
	// end inline asm
	xor.b32  	%r5011, %r4902, %r4886;
	xor.b32  	%r5012, %r5011, %r4950;
	xor.b32  	%r5013, %r5012, %r4990;
	shf.l.wrap.b32 	%r5014, %r5013, %r5013, 1;
	add.s32 	%r5015, %r4526, %r5014;
	add.s32 	%r5016, %r5015, %r4525;
	add.s32 	%r5017, %r5016, %r5010;
	add.s32 	%r4535, %r5017, -1894007588;
	shf.l.wrap.b32 	%r4537, %r4527, %r4527, 30;
	shf.l.wrap.b32 	%r5018, %r4535, %r4535, 5;
	// begin inline asm
	lop3.b32 %r4530, %r4531, %r4537, %r4533, 232;
	// end inline asm
	xor.b32  	%r5019, %r4910, %r4894;
	xor.b32  	%r5020, %r5019, %r4958;
	xor.b32  	%r5021, %r5020, %r4998;
	shf.l.wrap.b32 	%r5022, %r5021, %r5021, 1;
	add.s32 	%r5023, %r4530, %r5022;
	add.s32 	%r5024, %r5023, %r4529;
	add.s32 	%r5025, %r5024, %r5018;
	add.s32 	%r4539, %r5025, -1894007588;
	shf.l.wrap.b32 	%r4541, %r4531, %r4531, 30;
	shf.l.wrap.b32 	%r5026, %r4539, %r4539, 5;
	// begin inline asm
	lop3.b32 %r4534, %r4535, %r4541, %r4537, 232;
	// end inline asm
	xor.b32  	%r5027, %r4918, %r4902;
	xor.b32  	%r5028, %r5027, %r4966;
	xor.b32  	%r5029, %r5028, %r5006;
	shf.l.wrap.b32 	%r5030, %r5029, %r5029, 1;
	add.s32 	%r5031, %r4534, %r5030;
	add.s32 	%r5032, %r5031, %r4533;
	add.s32 	%r5033, %r5032, %r5026;
	add.s32 	%r4543, %r5033, -1894007588;
	shf.l.wrap.b32 	%r4545, %r4535, %r4535, 30;
	shf.l.wrap.b32 	%r5034, %r4543, %r4543, 5;
	// begin inline asm
	lop3.b32 %r4538, %r4539, %r4545, %r4541, 232;
	// end inline asm
	xor.b32  	%r5035, %r4926, %r4910;
	xor.b32  	%r5036, %r5035, %r4974;
	xor.b32  	%r5037, %r5036, %r5014;
	shf.l.wrap.b32 	%r5038, %r5037, %r5037, 1;
	add.s32 	%r5039, %r4538, %r5038;
	add.s32 	%r5040, %r5039, %r4537;
	add.s32 	%r5041, %r5040, %r5034;
	add.s32 	%r4547, %r5041, -1894007588;
	shf.l.wrap.b32 	%r4549, %r4539, %r4539, 30;
	shf.l.wrap.b32 	%r5042, %r4547, %r4547, 5;
	// begin inline asm
	lop3.b32 %r4542, %r4543, %r4549, %r4545, 232;
	// end inline asm
	xor.b32  	%r5043, %r4934, %r4918;
	xor.b32  	%r5044, %r5043, %r4982;
	xor.b32  	%r5045, %r5044, %r5022;
	shf.l.wrap.b32 	%r5046, %r5045, %r5045, 1;
	add.s32 	%r5047, %r4542, %r5046;
	add.s32 	%r5048, %r5047, %r4541;
	add.s32 	%r5049, %r5048, %r5042;
	add.s32 	%r4551, %r5049, -1894007588;
	shf.l.wrap.b32 	%r4553, %r4543, %r4543, 30;
	shf.l.wrap.b32 	%r5050, %r4551, %r4551, 5;
	// begin inline asm
	lop3.b32 %r4546, %r4547, %r4553, %r4549, 232;
	// end inline asm
	xor.b32  	%r5051, %r4942, %r4926;
	xor.b32  	%r5052, %r5051, %r4990;
	xor.b32  	%r5053, %r5052, %r5030;
	shf.l.wrap.b32 	%r5054, %r5053, %r5053, 1;
	add.s32 	%r5055, %r4546, %r5054;
	add.s32 	%r5056, %r5055, %r4545;
	add.s32 	%r5057, %r5056, %r5050;
	add.s32 	%r4555, %r5057, -1894007588;
	shf.l.wrap.b32 	%r4557, %r4547, %r4547, 30;
	shf.l.wrap.b32 	%r5058, %r4555, %r4555, 5;
	// begin inline asm
	lop3.b32 %r4550, %r4551, %r4557, %r4553, 232;
	// end inline asm
	xor.b32  	%r5059, %r4950, %r4934;
	xor.b32  	%r5060, %r5059, %r4998;
	xor.b32  	%r5061, %r5060, %r5038;
	shf.l.wrap.b32 	%r5062, %r5061, %r5061, 1;
	add.s32 	%r5063, %r4550, %r5062;
	add.s32 	%r5064, %r5063, %r4549;
	add.s32 	%r5065, %r5064, %r5058;
	add.s32 	%r4559, %r5065, -1894007588;
	shf.l.wrap.b32 	%r4561, %r4551, %r4551, 30;
	shf.l.wrap.b32 	%r5066, %r4559, %r4559, 5;
	// begin inline asm
	lop3.b32 %r4554, %r4555, %r4561, %r4557, 232;
	// end inline asm
	xor.b32  	%r5067, %r4958, %r4942;
	xor.b32  	%r5068, %r5067, %r5006;
	xor.b32  	%r5069, %r5068, %r5046;
	shf.l.wrap.b32 	%r5070, %r5069, %r5069, 1;
	add.s32 	%r5071, %r4554, %r5070;
	add.s32 	%r5072, %r5071, %r4553;
	add.s32 	%r5073, %r5072, %r5066;
	add.s32 	%r4563, %r5073, -1894007588;
	shf.l.wrap.b32 	%r4565, %r4555, %r4555, 30;
	shf.l.wrap.b32 	%r5074, %r4563, %r4563, 5;
	// begin inline asm
	lop3.b32 %r4558, %r4559, %r4565, %r4561, 232;
	// end inline asm
	xor.b32  	%r5075, %r4966, %r4950;
	xor.b32  	%r5076, %r5075, %r5014;
	xor.b32  	%r5077, %r5076, %r5054;
	shf.l.wrap.b32 	%r5078, %r5077, %r5077, 1;
	add.s32 	%r5079, %r4558, %r5078;
	add.s32 	%r5080, %r5079, %r4557;
	add.s32 	%r5081, %r5080, %r5074;
	add.s32 	%r4567, %r5081, -1894007588;
	shf.l.wrap.b32 	%r4569, %r4559, %r4559, 30;
	shf.l.wrap.b32 	%r5082, %r4567, %r4567, 5;
	// begin inline asm
	lop3.b32 %r4562, %r4563, %r4569, %r4565, 232;
	// end inline asm
	xor.b32  	%r5083, %r4974, %r4958;
	xor.b32  	%r5084, %r5083, %r5022;
	xor.b32  	%r5085, %r5084, %r5062;
	shf.l.wrap.b32 	%r5086, %r5085, %r5085, 1;
	add.s32 	%r5087, %r4562, %r5086;
	add.s32 	%r5088, %r5087, %r4561;
	add.s32 	%r5089, %r5088, %r5082;
	add.s32 	%r4571, %r5089, -1894007588;
	shf.l.wrap.b32 	%r4573, %r4563, %r4563, 30;
	shf.l.wrap.b32 	%r5090, %r4571, %r4571, 5;
	// begin inline asm
	lop3.b32 %r4566, %r4567, %r4573, %r4569, 232;
	// end inline asm
	xor.b32  	%r5091, %r4982, %r4966;
	xor.b32  	%r5092, %r5091, %r5030;
	xor.b32  	%r5093, %r5092, %r5070;
	shf.l.wrap.b32 	%r5094, %r5093, %r5093, 1;
	add.s32 	%r5095, %r4566, %r5094;
	add.s32 	%r5096, %r5095, %r4565;
	add.s32 	%r5097, %r5096, %r5090;
	add.s32 	%r4575, %r5097, -1894007588;
	shf.l.wrap.b32 	%r4577, %r4567, %r4567, 30;
	shf.l.wrap.b32 	%r5098, %r4575, %r4575, 5;
	// begin inline asm
	lop3.b32 %r4570, %r4571, %r4577, %r4573, 150;
	// end inline asm
	xor.b32  	%r5099, %r4990, %r4974;
	xor.b32  	%r5100, %r5099, %r5038;
	xor.b32  	%r5101, %r5100, %r5078;
	shf.l.wrap.b32 	%r5102, %r5101, %r5101, 1;
	add.s32 	%r5103, %r4570, %r5102;
	add.s32 	%r5104, %r5103, %r4569;
	add.s32 	%r5105, %r5104, %r5098;
	add.s32 	%r4579, %r5105, -899497514;
	shf.l.wrap.b32 	%r4581, %r4571, %r4571, 30;
	shf.l.wrap.b32 	%r5106, %r4579, %r4579, 5;
	// begin inline asm
	lop3.b32 %r4574, %r4575, %r4581, %r4577, 150;
	// end inline asm
	xor.b32  	%r5107, %r4998, %r4982;
	xor.b32  	%r5108, %r5107, %r5046;
	xor.b32  	%r5109, %r5108, %r5086;
	shf.l.wrap.b32 	%r5110, %r5109, %r5109, 1;
	add.s32 	%r5111, %r4574, %r5110;
	add.s32 	%r5112, %r5111, %r4573;
	add.s32 	%r5113, %r5112, %r5106;
	add.s32 	%r4583, %r5113, -899497514;
	shf.l.wrap.b32 	%r4585, %r4575, %r4575, 30;
	shf.l.wrap.b32 	%r5114, %r4583, %r4583, 5;
	// begin inline asm
	lop3.b32 %r4578, %r4579, %r4585, %r4581, 150;
	// end inline asm
	xor.b32  	%r5115, %r5006, %r4990;
	xor.b32  	%r5116, %r5115, %r5054;
	xor.b32  	%r5117, %r5116, %r5094;
	shf.l.wrap.b32 	%r5118, %r5117, %r5117, 1;
	add.s32 	%r5119, %r4578, %r5118;
	add.s32 	%r5120, %r5119, %r4577;
	add.s32 	%r5121, %r5120, %r5114;
	add.s32 	%r4587, %r5121, -899497514;
	shf.l.wrap.b32 	%r4589, %r4579, %r4579, 30;
	shf.l.wrap.b32 	%r5122, %r4587, %r4587, 5;
	// begin inline asm
	lop3.b32 %r4582, %r4583, %r4589, %r4585, 150;
	// end inline asm
	xor.b32  	%r5123, %r5014, %r4998;
	xor.b32  	%r5124, %r5123, %r5062;
	xor.b32  	%r5125, %r5124, %r5102;
	shf.l.wrap.b32 	%r5126, %r5125, %r5125, 1;
	add.s32 	%r5127, %r4582, %r5126;
	add.s32 	%r5128, %r5127, %r4581;
	add.s32 	%r5129, %r5128, %r5122;
	add.s32 	%r4591, %r5129, -899497514;
	shf.l.wrap.b32 	%r4593, %r4583, %r4583, 30;
	shf.l.wrap.b32 	%r5130, %r4591, %r4591, 5;
	// begin inline asm
	lop3.b32 %r4586, %r4587, %r4593, %r4589, 150;
	// end inline asm
	xor.b32  	%r5131, %r5022, %r5006;
	xor.b32  	%r5132, %r5131, %r5070;
	xor.b32  	%r5133, %r5132, %r5110;
	shf.l.wrap.b32 	%r5134, %r5133, %r5133, 1;
	add.s32 	%r5135, %r4586, %r5134;
	add.s32 	%r5136, %r5135, %r4585;
	add.s32 	%r5137, %r5136, %r5130;
	add.s32 	%r4595, %r5137, -899497514;
	shf.l.wrap.b32 	%r4597, %r4587, %r4587, 30;
	shf.l.wrap.b32 	%r5138, %r4595, %r4595, 5;
	// begin inline asm
	lop3.b32 %r4590, %r4591, %r4597, %r4593, 150;
	// end inline asm
	xor.b32  	%r5139, %r5030, %r5014;
	xor.b32  	%r5140, %r5139, %r5078;
	xor.b32  	%r5141, %r5140, %r5118;
	shf.l.wrap.b32 	%r5142, %r5141, %r5141, 1;
	add.s32 	%r5143, %r4590, %r5142;
	add.s32 	%r5144, %r5143, %r4589;
	add.s32 	%r5145, %r5144, %r5138;
	add.s32 	%r4599, %r5145, -899497514;
	shf.l.wrap.b32 	%r4601, %r4591, %r4591, 30;
	shf.l.wrap.b32 	%r5146, %r4599, %r4599, 5;
	// begin inline asm
	lop3.b32 %r4594, %r4595, %r4601, %r4597, 150;
	// end inline asm
	xor.b32  	%r5147, %r5038, %r5022;
	xor.b32  	%r5148, %r5147, %r5086;
	xor.b32  	%r5149, %r5148, %r5126;
	shf.l.wrap.b32 	%r5150, %r5149, %r5149, 1;
	add.s32 	%r5151, %r4594, %r5150;
	add.s32 	%r5152, %r5151, %r4593;
	add.s32 	%r5153, %r5152, %r5146;
	add.s32 	%r4603, %r5153, -899497514;
	shf.l.wrap.b32 	%r4605, %r4595, %r4595, 30;
	shf.l.wrap.b32 	%r5154, %r4603, %r4603, 5;
	// begin inline asm
	lop3.b32 %r4598, %r4599, %r4605, %r4601, 150;
	// end inline asm
	xor.b32  	%r5155, %r5046, %r5030;
	xor.b32  	%r5156, %r5155, %r5094;
	xor.b32  	%r5157, %r5156, %r5134;
	shf.l.wrap.b32 	%r5158, %r5157, %r5157, 1;
	add.s32 	%r5159, %r4598, %r5158;
	add.s32 	%r5160, %r5159, %r4597;
	add.s32 	%r5161, %r5160, %r5154;
	add.s32 	%r4607, %r5161, -899497514;
	shf.l.wrap.b32 	%r4609, %r4599, %r4599, 30;
	shf.l.wrap.b32 	%r5162, %r4607, %r4607, 5;
	// begin inline asm
	lop3.b32 %r4602, %r4603, %r4609, %r4605, 150;
	// end inline asm
	xor.b32  	%r5163, %r5054, %r5038;
	xor.b32  	%r5164, %r5163, %r5102;
	xor.b32  	%r5165, %r5164, %r5142;
	shf.l.wrap.b32 	%r5166, %r5165, %r5165, 1;
	add.s32 	%r5167, %r4602, %r5166;
	add.s32 	%r5168, %r5167, %r4601;
	add.s32 	%r5169, %r5168, %r5162;
	add.s32 	%r4611, %r5169, -899497514;
	shf.l.wrap.b32 	%r4613, %r4603, %r4603, 30;
	shf.l.wrap.b32 	%r5170, %r4611, %r4611, 5;
	// begin inline asm
	lop3.b32 %r4606, %r4607, %r4613, %r4609, 150;
	// end inline asm
	xor.b32  	%r5171, %r5062, %r5046;
	xor.b32  	%r5172, %r5171, %r5110;
	xor.b32  	%r5173, %r5172, %r5150;
	shf.l.wrap.b32 	%r5174, %r5173, %r5173, 1;
	add.s32 	%r5175, %r4606, %r5174;
	add.s32 	%r5176, %r5175, %r4605;
	add.s32 	%r5177, %r5176, %r5170;
	add.s32 	%r4615, %r5177, -899497514;
	shf.l.wrap.b32 	%r4617, %r4607, %r4607, 30;
	shf.l.wrap.b32 	%r5178, %r4615, %r4615, 5;
	// begin inline asm
	lop3.b32 %r4610, %r4611, %r4617, %r4613, 150;
	// end inline asm
	xor.b32  	%r5179, %r5070, %r5054;
	xor.b32  	%r5180, %r5179, %r5118;
	xor.b32  	%r5181, %r5180, %r5158;
	shf.l.wrap.b32 	%r5182, %r5181, %r5181, 1;
	add.s32 	%r5183, %r4610, %r5182;
	add.s32 	%r5184, %r5183, %r4609;
	add.s32 	%r5185, %r5184, %r5178;
	add.s32 	%r4619, %r5185, -899497514;
	shf.l.wrap.b32 	%r4621, %r4611, %r4611, 30;
	shf.l.wrap.b32 	%r5186, %r4619, %r4619, 5;
	// begin inline asm
	lop3.b32 %r4614, %r4615, %r4621, %r4617, 150;
	// end inline asm
	xor.b32  	%r5187, %r5078, %r5062;
	xor.b32  	%r5188, %r5187, %r5126;
	xor.b32  	%r5189, %r5188, %r5166;
	shf.l.wrap.b32 	%r5190, %r5189, %r5189, 1;
	add.s32 	%r5191, %r4614, %r5190;
	add.s32 	%r5192, %r5191, %r4613;
	add.s32 	%r5193, %r5192, %r5186;
	add.s32 	%r4623, %r5193, -899497514;
	shf.l.wrap.b32 	%r4625, %r4615, %r4615, 30;
	shf.l.wrap.b32 	%r5194, %r4623, %r4623, 5;
	// begin inline asm
	lop3.b32 %r4618, %r4619, %r4625, %r4621, 150;
	// end inline asm
	xor.b32  	%r5195, %r5086, %r5070;
	xor.b32  	%r5196, %r5195, %r5134;
	xor.b32  	%r5197, %r5196, %r5174;
	shf.l.wrap.b32 	%r5198, %r5197, %r5197, 1;
	add.s32 	%r5199, %r4618, %r5198;
	add.s32 	%r5200, %r5199, %r4617;
	add.s32 	%r5201, %r5200, %r5194;
	add.s32 	%r4627, %r5201, -899497514;
	shf.l.wrap.b32 	%r4629, %r4619, %r4619, 30;
	shf.l.wrap.b32 	%r5202, %r4627, %r4627, 5;
	// begin inline asm
	lop3.b32 %r4622, %r4623, %r4629, %r4625, 150;
	// end inline asm
	xor.b32  	%r5203, %r5094, %r5078;
	xor.b32  	%r5204, %r5203, %r5142;
	xor.b32  	%r5205, %r5204, %r5182;
	shf.l.wrap.b32 	%r5206, %r5205, %r5205, 1;
	add.s32 	%r5207, %r4622, %r5206;
	add.s32 	%r5208, %r5207, %r4621;
	add.s32 	%r5209, %r5208, %r5202;
	add.s32 	%r4631, %r5209, -899497514;
	shf.l.wrap.b32 	%r4633, %r4623, %r4623, 30;
	shf.l.wrap.b32 	%r5210, %r4631, %r4631, 5;
	// begin inline asm
	lop3.b32 %r4626, %r4627, %r4633, %r4629, 150;
	// end inline asm
	xor.b32  	%r5211, %r5102, %r5086;
	xor.b32  	%r5212, %r5211, %r5150;
	xor.b32  	%r5213, %r5212, %r5190;
	shf.l.wrap.b32 	%r5214, %r5213, %r5213, 1;
	add.s32 	%r5215, %r4626, %r5214;
	add.s32 	%r5216, %r5215, %r4625;
	add.s32 	%r5217, %r5216, %r5210;
	add.s32 	%r4635, %r5217, -899497514;
	shf.l.wrap.b32 	%r4637, %r4627, %r4627, 30;
	shf.l.wrap.b32 	%r5218, %r4635, %r4635, 5;
	// begin inline asm
	lop3.b32 %r4630, %r4631, %r4637, %r4633, 150;
	// end inline asm
	xor.b32  	%r5219, %r5110, %r5094;
	xor.b32  	%r5220, %r5219, %r5158;
	xor.b32  	%r5221, %r5220, %r5198;
	shf.l.wrap.b32 	%r5222, %r5221, %r5221, 1;
	add.s32 	%r5223, %r4630, %r5222;
	add.s32 	%r5224, %r5223, %r4629;
	add.s32 	%r5225, %r5224, %r5218;
	add.s32 	%r4639, %r5225, -899497514;
	shf.l.wrap.b32 	%r4641, %r4631, %r4631, 30;
	shf.l.wrap.b32 	%r5226, %r4639, %r4639, 5;
	// begin inline asm
	lop3.b32 %r4634, %r4635, %r4641, %r4637, 150;
	// end inline asm
	xor.b32  	%r5227, %r5118, %r5102;
	xor.b32  	%r5228, %r5227, %r5166;
	xor.b32  	%r5229, %r5228, %r5206;
	shf.l.wrap.b32 	%r5230, %r5229, %r5229, 1;
	add.s32 	%r5231, %r4634, %r5230;
	add.s32 	%r5232, %r5231, %r4633;
	add.s32 	%r5233, %r5232, %r5226;
	add.s32 	%r4643, %r5233, -899497514;
	shf.l.wrap.b32 	%r4645, %r4635, %r4635, 30;
	shf.l.wrap.b32 	%r5234, %r4643, %r4643, 5;
	// begin inline asm
	lop3.b32 %r4638, %r4639, %r4645, %r4641, 150;
	// end inline asm
	xor.b32  	%r5235, %r5126, %r5110;
	xor.b32  	%r5236, %r5235, %r5174;
	xor.b32  	%r5237, %r5236, %r5214;
	shf.l.wrap.b32 	%r5238, %r5237, %r5237, 1;
	add.s32 	%r5239, %r4638, %r5238;
	add.s32 	%r5240, %r5239, %r4637;
	add.s32 	%r5241, %r5240, %r5234;
	add.s32 	%r4647, %r5241, -899497514;
	shf.l.wrap.b32 	%r4649, %r4639, %r4639, 30;
	shf.l.wrap.b32 	%r5242, %r4647, %r4647, 5;
	// begin inline asm
	lop3.b32 %r4642, %r4643, %r4649, %r4645, 150;
	// end inline asm
	xor.b32  	%r5243, %r5134, %r5118;
	xor.b32  	%r5244, %r5243, %r5182;
	xor.b32  	%r5245, %r5244, %r5222;
	shf.l.wrap.b32 	%r5246, %r5245, %r5245, 1;
	add.s32 	%r5247, %r4642, %r5246;
	add.s32 	%r5248, %r5247, %r4641;
	add.s32 	%r5249, %r5248, %r5242;
	add.s32 	%r5250, %r5249, -899497514;
	shf.l.wrap.b32 	%r4648, %r4643, %r4643, 30;
	shf.l.wrap.b32 	%r5251, %r5250, %r5250, 5;
	// begin inline asm
	lop3.b32 %r4646, %r4647, %r4648, %r4649, 150;
	// end inline asm
	xor.b32  	%r5252, %r5142, %r5126;
	xor.b32  	%r5253, %r5252, %r5190;
	xor.b32  	%r5254, %r5253, %r5230;
	shf.l.wrap.b32 	%r5255, %r5254, %r5254, 1;
	shf.l.wrap.b32 	%r5256, %r4647, %r4647, 30;
	add.s32 	%r5257, %r7103, %r4646;
	add.s32 	%r5258, %r5257, %r5255;
	add.s32 	%r5259, %r5258, %r4645;
	add.s32 	%r5260, %r5259, %r5251;
	add.s32 	%r7103, %r5260, -899497514;
	add.s32 	%r7102, %r5250, %r7102;
	add.s32 	%r7101, %r5256, %r7101;
	add.s32 	%r7100, %r4648, %r7100;
	add.s32 	%r7099, %r4649, %r7099;
	mov.u32 	%r5261, 0;
	st.local.v4.u32 	[%rd3], {%r5261, %r5261, %r5261, %r5261};
	st.local.v4.u32 	[%rd3+16], {%r5261, %r5261, %r5261, %r5261};
	st.local.v4.u32 	[%rd3+32], {%r5261, %r5261, %r5261, %r5261};
	st.local.v2.u32 	[%rd3+48], {%r5261, %r5261};
	st.local.u32 	[%rd3+56], %r5261;
	setp.lt.u32 	%p25, %r7105, 61;
	@%p25 bra 	$L__BB5_30;

	add.s32 	%r5262, %r7105, -61;
	xor.b32  	%r5263, %r5262, 3;
	cvt.u64.u32 	%rd65, %r5263;
	add.s64 	%rd66, %rd3, %rd65;
	st.local.u8 	[%rd66], %rs1;

$L__BB5_30:
	setp.lt.u32 	%p26, %r7105, 60;
	@%p26 bra 	$L__BB5_33;

	add.s32 	%r5264, %r7105, -60;
	xor.b32  	%r5265, %r5264, 3;
	cvt.u64.u32 	%rd67, %r5265;
	add.s64 	%rd68, %rd3, %rd67;
	mov.u16 	%rs34, 128;
	st.local.u8 	[%rd68], %rs34;

$L__BB5_33:
	shl.b32 	%r5910, %r53, 3;
	add.s32 	%r5911, %r5910, 544;
	ld.local.v4.u32 	{%r5912, %r5913, %r5914, %r5915}, [%rd3];
	shf.l.wrap.b32 	%r5920, %r7103, %r7103, 5;
	add.s32 	%r5921, %r5920, %r7099;
	// begin inline asm
	lop3.b32 %r5270, %r7102, %r7101, %r7100, 202;
	// end inline asm
	add.s32 	%r5922, %r5921, %r5270;
	add.s32 	%r5923, %r5922, %r5912;
	add.s32 	%r5279, %r5923, 1518500249;
	shf.l.wrap.b32 	%r5924, %r5279, %r5279, 5;
	shf.l.wrap.b32 	%r5281, %r7102, %r7102, 30;
	// begin inline asm
	lop3.b32 %r5274, %r7103, %r5281, %r7101, 202;
	// end inline asm
	add.s32 	%r5925, %r7100, %r5274;
	add.s32 	%r5926, %r5925, %r5913;
	add.s32 	%r5927, %r5926, %r5924;
	add.s32 	%r5283, %r5927, 1518500249;
	shf.l.wrap.b32 	%r5928, %r5283, %r5283, 5;
	shf.l.wrap.b32 	%r5285, %r7103, %r7103, 30;
	// begin inline asm
	lop3.b32 %r5278, %r5279, %r5285, %r5281, 202;
	// end inline asm
	add.s32 	%r5929, %r7101, %r5278;
	add.s32 	%r5930, %r5929, %r5914;
	add.s32 	%r5931, %r5930, %r5928;
	add.s32 	%r5287, %r5931, 1518500249;
	shf.l.wrap.b32 	%r5289, %r5279, %r5279, 30;
	shf.l.wrap.b32 	%r5932, %r5287, %r5287, 5;
	// begin inline asm
	lop3.b32 %r5282, %r5283, %r5289, %r5285, 202;
	// end inline asm
	add.s32 	%r5933, %r5281, %r5282;
	add.s32 	%r5934, %r5933, %r5915;
	add.s32 	%r5935, %r5934, %r5932;
	add.s32 	%r5291, %r5935, 1518500249;
	shf.l.wrap.b32 	%r5293, %r5283, %r5283, 30;
	shf.l.wrap.b32 	%r5936, %r5291, %r5291, 5;
	// begin inline asm
	lop3.b32 %r5286, %r5287, %r5293, %r5289, 202;
	// end inline asm
	ld.local.v4.u32 	{%r5937, %r5938, %r5939, %r5940}, [%rd3+16];
	add.s32 	%r5945, %r5285, %r5286;
	add.s32 	%r5946, %r5945, %r5937;
	add.s32 	%r5947, %r5946, %r5936;
	add.s32 	%r5295, %r5947, 1518500249;
	shf.l.wrap.b32 	%r5297, %r5287, %r5287, 30;
	shf.l.wrap.b32 	%r5948, %r5295, %r5295, 5;
	// begin inline asm
	lop3.b32 %r5290, %r5291, %r5297, %r5293, 202;
	// end inline asm
	add.s32 	%r5949, %r5289, %r5290;
	add.s32 	%r5950, %r5949, %r5938;
	add.s32 	%r5951, %r5950, %r5948;
	add.s32 	%r5299, %r5951, 1518500249;
	shf.l.wrap.b32 	%r5301, %r5291, %r5291, 30;
	shf.l.wrap.b32 	%r5952, %r5299, %r5299, 5;
	// begin inline asm
	lop3.b32 %r5294, %r5295, %r5301, %r5297, 202;
	// end inline asm
	add.s32 	%r5953, %r5293, %r5294;
	add.s32 	%r5954, %r5953, %r5939;
	add.s32 	%r5955, %r5954, %r5952;
	add.s32 	%r5303, %r5955, 1518500249;
	shf.l.wrap.b32 	%r5305, %r5295, %r5295, 30;
	shf.l.wrap.b32 	%r5956, %r5303, %r5303, 5;
	// begin inline asm
	lop3.b32 %r5298, %r5299, %r5305, %r5301, 202;
	// end inline asm
	add.s32 	%r5957, %r5298, %r5940;
	add.s32 	%r5958, %r5957, %r5297;
	add.s32 	%r5959, %r5958, %r5956;
	add.s32 	%r5307, %r5959, 1518500249;
	shf.l.wrap.b32 	%r5309, %r5299, %r5299, 30;
	shf.l.wrap.b32 	%r5960, %r5307, %r5307, 5;
	// begin inline asm
	lop3.b32 %r5302, %r5303, %r5309, %r5305, 202;
	// end inline asm
	ld.local.v4.u32 	{%r5961, %r5962, %r5963, %r5964}, [%rd3+32];
	add.s32 	%r5969, %r5302, %r5961;
	add.s32 	%r5970, %r5969, %r5301;
	add.s32 	%r5971, %r5970, %r5960;
	add.s32 	%r5311, %r5971, 1518500249;
	shf.l.wrap.b32 	%r5313, %r5303, %r5303, 30;
	shf.l.wrap.b32 	%r5972, %r5311, %r5311, 5;
	// begin inline asm
	lop3.b32 %r5306, %r5307, %r5313, %r5309, 202;
	// end inline asm
	add.s32 	%r5973, %r5306, %r5962;
	add.s32 	%r5974, %r5973, %r5305;
	add.s32 	%r5975, %r5974, %r5972;
	add.s32 	%r5315, %r5975, 1518500249;
	shf.l.wrap.b32 	%r5317, %r5307, %r5307, 30;
	shf.l.wrap.b32 	%r5976, %r5315, %r5315, 5;
	// begin inline asm
	lop3.b32 %r5310, %r5311, %r5317, %r5313, 202;
	// end inline asm
	add.s32 	%r5977, %r5310, %r5963;
	add.s32 	%r5978, %r5977, %r5309;
	add.s32 	%r5979, %r5978, %r5976;
	add.s32 	%r5319, %r5979, 1518500249;
	shf.l.wrap.b32 	%r5321, %r5311, %r5311, 30;
	shf.l.wrap.b32 	%r5980, %r5319, %r5319, 5;
	// begin inline asm
	lop3.b32 %r5314, %r5315, %r5321, %r5317, 202;
	// end inline asm
	add.s32 	%r5981, %r5314, %r5964;
	add.s32 	%r5982, %r5981, %r5313;
	add.s32 	%r5983, %r5982, %r5980;
	add.s32 	%r5323, %r5983, 1518500249;
	shf.l.wrap.b32 	%r5325, %r5315, %r5315, 30;
	shf.l.wrap.b32 	%r5984, %r5323, %r5323, 5;
	// begin inline asm
	lop3.b32 %r5318, %r5319, %r5325, %r5321, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r5985, %r5986, %r5987, %r5988}, [%rd3+48];
	add.s32 	%r5992, %r5318, %r5985;
	add.s32 	%r5993, %r5992, %r5317;
	add.s32 	%r5994, %r5993, %r5984;
	add.s32 	%r5327, %r5994, 1518500249;
	shf.l.wrap.b32 	%r5329, %r5319, %r5319, 30;
	shf.l.wrap.b32 	%r5995, %r5327, %r5327, 5;
	// begin inline asm
	lop3.b32 %r5322, %r5323, %r5329, %r5325, 202;
	// end inline asm
	add.s32 	%r5996, %r5322, %r5986;
	add.s32 	%r5997, %r5996, %r5321;
	add.s32 	%r5998, %r5997, %r5995;
	add.s32 	%r5331, %r5998, 1518500249;
	shf.l.wrap.b32 	%r5333, %r5323, %r5323, 30;
	shf.l.wrap.b32 	%r5999, %r5331, %r5331, 5;
	// begin inline asm
	lop3.b32 %r5326, %r5327, %r5333, %r5329, 202;
	// end inline asm
	add.s32 	%r6000, %r5326, %r5987;
	add.s32 	%r6001, %r6000, %r5325;
	add.s32 	%r6002, %r6001, %r5999;
	add.s32 	%r5335, %r6002, 1518500249;
	shf.l.wrap.b32 	%r5337, %r5327, %r5327, 30;
	shf.l.wrap.b32 	%r6003, %r5335, %r5335, 5;
	// begin inline asm
	lop3.b32 %r5330, %r5331, %r5337, %r5333, 202;
	// end inline asm
	add.s32 	%r6004, %r5330, %r5911;
	add.s32 	%r6005, %r6004, %r5329;
	add.s32 	%r6006, %r6005, %r6003;
	add.s32 	%r5339, %r6006, 1518500249;
	shf.l.wrap.b32 	%r5341, %r5331, %r5331, 30;
	shf.l.wrap.b32 	%r6007, %r5339, %r5339, 5;
	// begin inline asm
	lop3.b32 %r5334, %r5335, %r5341, %r5337, 202;
	// end inline asm
	xor.b32  	%r6008, %r5961, %r5986;
	xor.b32  	%r6009, %r6008, %r5914;
	xor.b32  	%r6010, %r6009, %r5912;
	shf.l.wrap.b32 	%r6011, %r6010, %r6010, 1;
	add.s32 	%r6012, %r5334, %r6011;
	add.s32 	%r6013, %r6012, %r5333;
	add.s32 	%r6014, %r6013, %r6007;
	add.s32 	%r5343, %r6014, 1518500249;
	shf.l.wrap.b32 	%r5345, %r5335, %r5335, 30;
	shf.l.wrap.b32 	%r6015, %r5343, %r5343, 5;
	// begin inline asm
	lop3.b32 %r5338, %r5339, %r5345, %r5341, 202;
	// end inline asm
	xor.b32  	%r6016, %r5962, %r5987;
	xor.b32  	%r6017, %r6016, %r5915;
	xor.b32  	%r6018, %r6017, %r5913;
	shf.l.wrap.b32 	%r6019, %r6018, %r6018, 1;
	add.s32 	%r6020, %r5338, %r6019;
	add.s32 	%r6021, %r6020, %r5337;
	add.s32 	%r6022, %r6021, %r6015;
	add.s32 	%r5347, %r6022, 1518500249;
	shf.l.wrap.b32 	%r5349, %r5339, %r5339, 30;
	shf.l.wrap.b32 	%r6023, %r5347, %r5347, 5;
	// begin inline asm
	lop3.b32 %r5342, %r5343, %r5349, %r5345, 202;
	// end inline asm
	xor.b32  	%r6024, %r5963, %r5911;
	xor.b32  	%r6025, %r6024, %r5937;
	xor.b32  	%r6026, %r6025, %r5914;
	shf.l.wrap.b32 	%r6027, %r6026, %r6026, 1;
	add.s32 	%r6028, %r5342, %r6027;
	add.s32 	%r6029, %r6028, %r5341;
	add.s32 	%r6030, %r6029, %r6023;
	add.s32 	%r5351, %r6030, 1518500249;
	shf.l.wrap.b32 	%r5353, %r5343, %r5343, 30;
	shf.l.wrap.b32 	%r6031, %r5351, %r5351, 5;
	// begin inline asm
	lop3.b32 %r5346, %r5347, %r5353, %r5349, 202;
	// end inline asm
	xor.b32  	%r6032, %r5964, %r6011;
	xor.b32  	%r6033, %r6032, %r5938;
	xor.b32  	%r6034, %r6033, %r5915;
	shf.l.wrap.b32 	%r6035, %r6034, %r6034, 1;
	add.s32 	%r6036, %r5346, %r6035;
	add.s32 	%r6037, %r6036, %r5345;
	add.s32 	%r6038, %r6037, %r6031;
	add.s32 	%r5355, %r6038, 1518500249;
	shf.l.wrap.b32 	%r5357, %r5347, %r5347, 30;
	shf.l.wrap.b32 	%r6039, %r5355, %r5355, 5;
	// begin inline asm
	lop3.b32 %r5350, %r5351, %r5357, %r5353, 150;
	// end inline asm
	xor.b32  	%r6040, %r5985, %r6019;
	xor.b32  	%r6041, %r6040, %r5939;
	xor.b32  	%r6042, %r6041, %r5937;
	shf.l.wrap.b32 	%r6043, %r6042, %r6042, 1;
	add.s32 	%r6044, %r5350, %r6043;
	add.s32 	%r6045, %r6044, %r5349;
	add.s32 	%r6046, %r6045, %r6039;
	add.s32 	%r5359, %r6046, 1859775393;
	shf.l.wrap.b32 	%r5361, %r5351, %r5351, 30;
	shf.l.wrap.b32 	%r6047, %r5359, %r5359, 5;
	// begin inline asm
	lop3.b32 %r5354, %r5355, %r5361, %r5357, 150;
	// end inline asm
	xor.b32  	%r6048, %r5986, %r6027;
	xor.b32  	%r6049, %r6048, %r5940;
	xor.b32  	%r6050, %r6049, %r5938;
	shf.l.wrap.b32 	%r6051, %r6050, %r6050, 1;
	add.s32 	%r6052, %r5354, %r6051;
	add.s32 	%r6053, %r6052, %r5353;
	add.s32 	%r6054, %r6053, %r6047;
	add.s32 	%r5363, %r6054, 1859775393;
	shf.l.wrap.b32 	%r5365, %r5355, %r5355, 30;
	shf.l.wrap.b32 	%r6055, %r5363, %r5363, 5;
	// begin inline asm
	lop3.b32 %r5358, %r5359, %r5365, %r5361, 150;
	// end inline asm
	xor.b32  	%r6056, %r5987, %r6035;
	xor.b32  	%r6057, %r6056, %r5961;
	xor.b32  	%r6058, %r6057, %r5939;
	shf.l.wrap.b32 	%r6059, %r6058, %r6058, 1;
	add.s32 	%r6060, %r5358, %r6059;
	add.s32 	%r6061, %r6060, %r5357;
	add.s32 	%r6062, %r6061, %r6055;
	add.s32 	%r5367, %r6062, 1859775393;
	shf.l.wrap.b32 	%r5369, %r5359, %r5359, 30;
	shf.l.wrap.b32 	%r6063, %r5367, %r5367, 5;
	// begin inline asm
	lop3.b32 %r5362, %r5363, %r5369, %r5365, 150;
	// end inline asm
	xor.b32  	%r6064, %r5911, %r6043;
	xor.b32  	%r6065, %r6064, %r5962;
	xor.b32  	%r6066, %r6065, %r5940;
	shf.l.wrap.b32 	%r6067, %r6066, %r6066, 1;
	add.s32 	%r6068, %r5362, %r6067;
	add.s32 	%r6069, %r6068, %r5361;
	add.s32 	%r6070, %r6069, %r6063;
	add.s32 	%r5371, %r6070, 1859775393;
	shf.l.wrap.b32 	%r5373, %r5363, %r5363, 30;
	shf.l.wrap.b32 	%r6071, %r5371, %r5371, 5;
	// begin inline asm
	lop3.b32 %r5366, %r5367, %r5373, %r5369, 150;
	// end inline asm
	xor.b32  	%r6072, %r6051, %r6011;
	xor.b32  	%r6073, %r6072, %r5963;
	xor.b32  	%r6074, %r6073, %r5961;
	shf.l.wrap.b32 	%r6075, %r6074, %r6074, 1;
	add.s32 	%r6076, %r5366, %r6075;
	add.s32 	%r6077, %r6076, %r5365;
	add.s32 	%r6078, %r6077, %r6071;
	add.s32 	%r5375, %r6078, 1859775393;
	shf.l.wrap.b32 	%r5377, %r5367, %r5367, 30;
	shf.l.wrap.b32 	%r6079, %r5375, %r5375, 5;
	// begin inline asm
	lop3.b32 %r5370, %r5371, %r5377, %r5373, 150;
	// end inline asm
	xor.b32  	%r6080, %r6059, %r6019;
	xor.b32  	%r6081, %r6080, %r5964;
	xor.b32  	%r6082, %r6081, %r5962;
	shf.l.wrap.b32 	%r6083, %r6082, %r6082, 1;
	add.s32 	%r6084, %r5370, %r6083;
	add.s32 	%r6085, %r6084, %r5369;
	add.s32 	%r6086, %r6085, %r6079;
	add.s32 	%r5379, %r6086, 1859775393;
	shf.l.wrap.b32 	%r5381, %r5371, %r5371, 30;
	shf.l.wrap.b32 	%r6087, %r5379, %r5379, 5;
	// begin inline asm
	lop3.b32 %r5374, %r5375, %r5381, %r5377, 150;
	// end inline asm
	xor.b32  	%r6088, %r6067, %r6027;
	xor.b32  	%r6089, %r6088, %r5985;
	xor.b32  	%r6090, %r6089, %r5963;
	shf.l.wrap.b32 	%r6091, %r6090, %r6090, 1;
	add.s32 	%r6092, %r5374, %r6091;
	add.s32 	%r6093, %r6092, %r5373;
	add.s32 	%r6094, %r6093, %r6087;
	add.s32 	%r5383, %r6094, 1859775393;
	shf.l.wrap.b32 	%r5385, %r5375, %r5375, 30;
	shf.l.wrap.b32 	%r6095, %r5383, %r5383, 5;
	// begin inline asm
	lop3.b32 %r5378, %r5379, %r5385, %r5381, 150;
	// end inline asm
	xor.b32  	%r6096, %r6075, %r6035;
	xor.b32  	%r6097, %r6096, %r5986;
	xor.b32  	%r6098, %r6097, %r5964;
	shf.l.wrap.b32 	%r6099, %r6098, %r6098, 1;
	add.s32 	%r6100, %r5378, %r6099;
	add.s32 	%r6101, %r6100, %r5377;
	add.s32 	%r6102, %r6101, %r6095;
	add.s32 	%r5387, %r6102, 1859775393;
	shf.l.wrap.b32 	%r5389, %r5379, %r5379, 30;
	shf.l.wrap.b32 	%r6103, %r5387, %r5387, 5;
	// begin inline asm
	lop3.b32 %r5382, %r5383, %r5389, %r5385, 150;
	// end inline asm
	xor.b32  	%r6104, %r6083, %r6043;
	xor.b32  	%r6105, %r6104, %r5987;
	xor.b32  	%r6106, %r6105, %r5985;
	shf.l.wrap.b32 	%r6107, %r6106, %r6106, 1;
	add.s32 	%r6108, %r5382, %r6107;
	add.s32 	%r6109, %r6108, %r5381;
	add.s32 	%r6110, %r6109, %r6103;
	add.s32 	%r5391, %r6110, 1859775393;
	shf.l.wrap.b32 	%r5393, %r5383, %r5383, 30;
	shf.l.wrap.b32 	%r6111, %r5391, %r5391, 5;
	// begin inline asm
	lop3.b32 %r5386, %r5387, %r5393, %r5389, 150;
	// end inline asm
	xor.b32  	%r6112, %r6091, %r6051;
	xor.b32  	%r6113, %r6112, %r5911;
	xor.b32  	%r6114, %r6113, %r5986;
	shf.l.wrap.b32 	%r6115, %r6114, %r6114, 1;
	add.s32 	%r6116, %r5386, %r6115;
	add.s32 	%r6117, %r6116, %r5385;
	add.s32 	%r6118, %r6117, %r6111;
	add.s32 	%r5395, %r6118, 1859775393;
	shf.l.wrap.b32 	%r5397, %r5387, %r5387, 30;
	shf.l.wrap.b32 	%r6119, %r5395, %r5395, 5;
	// begin inline asm
	lop3.b32 %r5390, %r5391, %r5397, %r5393, 150;
	// end inline asm
	xor.b32  	%r6120, %r6059, %r6011;
	xor.b32  	%r6121, %r6120, %r6099;
	xor.b32  	%r6122, %r6121, %r5987;
	shf.l.wrap.b32 	%r6123, %r6122, %r6122, 1;
	add.s32 	%r6124, %r5390, %r6123;
	add.s32 	%r6125, %r6124, %r5389;
	add.s32 	%r6126, %r6125, %r6119;
	add.s32 	%r5399, %r6126, 1859775393;
	shf.l.wrap.b32 	%r5401, %r5391, %r5391, 30;
	shf.l.wrap.b32 	%r6127, %r5399, %r5399, 5;
	// begin inline asm
	lop3.b32 %r5394, %r5395, %r5401, %r5397, 150;
	// end inline asm
	xor.b32  	%r6128, %r6067, %r6019;
	xor.b32  	%r6129, %r6128, %r6107;
	xor.b32  	%r6130, %r6129, %r5911;
	shf.l.wrap.b32 	%r6131, %r6130, %r6130, 1;
	add.s32 	%r6132, %r5394, %r6131;
	add.s32 	%r6133, %r6132, %r5393;
	add.s32 	%r6134, %r6133, %r6127;
	add.s32 	%r5403, %r6134, 1859775393;
	shf.l.wrap.b32 	%r5405, %r5395, %r5395, 30;
	shf.l.wrap.b32 	%r6135, %r5403, %r5403, 5;
	// begin inline asm
	lop3.b32 %r5398, %r5399, %r5405, %r5401, 150;
	// end inline asm
	xor.b32  	%r6136, %r6027, %r6011;
	xor.b32  	%r6137, %r6136, %r6075;
	xor.b32  	%r6138, %r6137, %r6115;
	shf.l.wrap.b32 	%r6139, %r6138, %r6138, 1;
	add.s32 	%r6140, %r5398, %r6139;
	add.s32 	%r6141, %r6140, %r5397;
	add.s32 	%r6142, %r6141, %r6135;
	add.s32 	%r5407, %r6142, 1859775393;
	shf.l.wrap.b32 	%r5409, %r5399, %r5399, 30;
	shf.l.wrap.b32 	%r6143, %r5407, %r5407, 5;
	// begin inline asm
	lop3.b32 %r5402, %r5403, %r5409, %r5405, 150;
	// end inline asm
	xor.b32  	%r6144, %r6035, %r6019;
	xor.b32  	%r6145, %r6144, %r6083;
	xor.b32  	%r6146, %r6145, %r6123;
	shf.l.wrap.b32 	%r6147, %r6146, %r6146, 1;
	add.s32 	%r6148, %r5402, %r6147;
	add.s32 	%r6149, %r6148, %r5401;
	add.s32 	%r6150, %r6149, %r6143;
	add.s32 	%r5411, %r6150, 1859775393;
	shf.l.wrap.b32 	%r5413, %r5403, %r5403, 30;
	shf.l.wrap.b32 	%r6151, %r5411, %r5411, 5;
	// begin inline asm
	lop3.b32 %r5406, %r5407, %r5413, %r5409, 150;
	// end inline asm
	xor.b32  	%r6152, %r6043, %r6027;
	xor.b32  	%r6153, %r6152, %r6091;
	xor.b32  	%r6154, %r6153, %r6131;
	shf.l.wrap.b32 	%r6155, %r6154, %r6154, 1;
	add.s32 	%r6156, %r5406, %r6155;
	add.s32 	%r6157, %r6156, %r5405;
	add.s32 	%r6158, %r6157, %r6151;
	add.s32 	%r5415, %r6158, 1859775393;
	shf.l.wrap.b32 	%r5417, %r5407, %r5407, 30;
	shf.l.wrap.b32 	%r6159, %r5415, %r5415, 5;
	// begin inline asm
	lop3.b32 %r5410, %r5411, %r5417, %r5413, 150;
	// end inline asm
	xor.b32  	%r6160, %r6051, %r6035;
	xor.b32  	%r6161, %r6160, %r6099;
	xor.b32  	%r6162, %r6161, %r6139;
	shf.l.wrap.b32 	%r6163, %r6162, %r6162, 1;
	add.s32 	%r6164, %r5410, %r6163;
	add.s32 	%r6165, %r6164, %r5409;
	add.s32 	%r6166, %r6165, %r6159;
	add.s32 	%r5419, %r6166, 1859775393;
	shf.l.wrap.b32 	%r5421, %r5411, %r5411, 30;
	shf.l.wrap.b32 	%r6167, %r5419, %r5419, 5;
	// begin inline asm
	lop3.b32 %r5414, %r5415, %r5421, %r5417, 150;
	// end inline asm
	xor.b32  	%r6168, %r6059, %r6043;
	xor.b32  	%r6169, %r6168, %r6107;
	xor.b32  	%r6170, %r6169, %r6147;
	shf.l.wrap.b32 	%r6171, %r6170, %r6170, 1;
	add.s32 	%r6172, %r5414, %r6171;
	add.s32 	%r6173, %r6172, %r5413;
	add.s32 	%r6174, %r6173, %r6167;
	add.s32 	%r5423, %r6174, 1859775393;
	shf.l.wrap.b32 	%r5425, %r5415, %r5415, 30;
	shf.l.wrap.b32 	%r6175, %r5423, %r5423, 5;
	// begin inline asm
	lop3.b32 %r5418, %r5419, %r5425, %r5421, 150;
	// end inline asm
	xor.b32  	%r6176, %r6067, %r6051;
	xor.b32  	%r6177, %r6176, %r6115;
	xor.b32  	%r6178, %r6177, %r6155;
	shf.l.wrap.b32 	%r6179, %r6178, %r6178, 1;
	add.s32 	%r6180, %r5418, %r6179;
	add.s32 	%r6181, %r6180, %r5417;
	add.s32 	%r6182, %r6181, %r6175;
	add.s32 	%r5427, %r6182, 1859775393;
	shf.l.wrap.b32 	%r5429, %r5419, %r5419, 30;
	shf.l.wrap.b32 	%r6183, %r5427, %r5427, 5;
	// begin inline asm
	lop3.b32 %r5422, %r5423, %r5429, %r5425, 150;
	// end inline asm
	xor.b32  	%r6184, %r6075, %r6059;
	xor.b32  	%r6185, %r6184, %r6123;
	xor.b32  	%r6186, %r6185, %r6163;
	shf.l.wrap.b32 	%r6187, %r6186, %r6186, 1;
	add.s32 	%r6188, %r5422, %r6187;
	add.s32 	%r6189, %r6188, %r5421;
	add.s32 	%r6190, %r6189, %r6183;
	add.s32 	%r5431, %r6190, 1859775393;
	shf.l.wrap.b32 	%r5433, %r5423, %r5423, 30;
	shf.l.wrap.b32 	%r6191, %r5431, %r5431, 5;
	// begin inline asm
	lop3.b32 %r5426, %r5427, %r5433, %r5429, 150;
	// end inline asm
	xor.b32  	%r6192, %r6083, %r6067;
	xor.b32  	%r6193, %r6192, %r6131;
	xor.b32  	%r6194, %r6193, %r6171;
	shf.l.wrap.b32 	%r6195, %r6194, %r6194, 1;
	add.s32 	%r6196, %r5426, %r6195;
	add.s32 	%r6197, %r6196, %r5425;
	add.s32 	%r6198, %r6197, %r6191;
	add.s32 	%r5435, %r6198, 1859775393;
	shf.l.wrap.b32 	%r5437, %r5427, %r5427, 30;
	shf.l.wrap.b32 	%r6199, %r5435, %r5435, 5;
	// begin inline asm
	lop3.b32 %r5430, %r5431, %r5437, %r5433, 232;
	// end inline asm
	xor.b32  	%r6200, %r6091, %r6075;
	xor.b32  	%r6201, %r6200, %r6139;
	xor.b32  	%r6202, %r6201, %r6179;
	shf.l.wrap.b32 	%r6203, %r6202, %r6202, 1;
	add.s32 	%r6204, %r5430, %r6203;
	add.s32 	%r6205, %r6204, %r5429;
	add.s32 	%r6206, %r6205, %r6199;
	add.s32 	%r5439, %r6206, -1894007588;
	shf.l.wrap.b32 	%r5441, %r5431, %r5431, 30;
	shf.l.wrap.b32 	%r6207, %r5439, %r5439, 5;
	// begin inline asm
	lop3.b32 %r5434, %r5435, %r5441, %r5437, 232;
	// end inline asm
	xor.b32  	%r6208, %r6099, %r6083;
	xor.b32  	%r6209, %r6208, %r6147;
	xor.b32  	%r6210, %r6209, %r6187;
	shf.l.wrap.b32 	%r6211, %r6210, %r6210, 1;
	add.s32 	%r6212, %r5434, %r6211;
	add.s32 	%r6213, %r6212, %r5433;
	add.s32 	%r6214, %r6213, %r6207;
	add.s32 	%r5443, %r6214, -1894007588;
	shf.l.wrap.b32 	%r5445, %r5435, %r5435, 30;
	shf.l.wrap.b32 	%r6215, %r5443, %r5443, 5;
	// begin inline asm
	lop3.b32 %r5438, %r5439, %r5445, %r5441, 232;
	// end inline asm
	xor.b32  	%r6216, %r6107, %r6091;
	xor.b32  	%r6217, %r6216, %r6155;
	xor.b32  	%r6218, %r6217, %r6195;
	shf.l.wrap.b32 	%r6219, %r6218, %r6218, 1;
	add.s32 	%r6220, %r5438, %r6219;
	add.s32 	%r6221, %r6220, %r5437;
	add.s32 	%r6222, %r6221, %r6215;
	add.s32 	%r5447, %r6222, -1894007588;
	shf.l.wrap.b32 	%r5449, %r5439, %r5439, 30;
	shf.l.wrap.b32 	%r6223, %r5447, %r5447, 5;
	// begin inline asm
	lop3.b32 %r5442, %r5443, %r5449, %r5445, 232;
	// end inline asm
	xor.b32  	%r6224, %r6115, %r6099;
	xor.b32  	%r6225, %r6224, %r6163;
	xor.b32  	%r6226, %r6225, %r6203;
	shf.l.wrap.b32 	%r6227, %r6226, %r6226, 1;
	add.s32 	%r6228, %r5442, %r6227;
	add.s32 	%r6229, %r6228, %r5441;
	add.s32 	%r6230, %r6229, %r6223;
	add.s32 	%r5451, %r6230, -1894007588;
	shf.l.wrap.b32 	%r5453, %r5443, %r5443, 30;
	shf.l.wrap.b32 	%r6231, %r5451, %r5451, 5;
	// begin inline asm
	lop3.b32 %r5446, %r5447, %r5453, %r5449, 232;
	// end inline asm
	xor.b32  	%r6232, %r6123, %r6107;
	xor.b32  	%r6233, %r6232, %r6171;
	xor.b32  	%r6234, %r6233, %r6211;
	shf.l.wrap.b32 	%r6235, %r6234, %r6234, 1;
	add.s32 	%r6236, %r5446, %r6235;
	add.s32 	%r6237, %r6236, %r5445;
	add.s32 	%r6238, %r6237, %r6231;
	add.s32 	%r5455, %r6238, -1894007588;
	shf.l.wrap.b32 	%r5457, %r5447, %r5447, 30;
	shf.l.wrap.b32 	%r6239, %r5455, %r5455, 5;
	// begin inline asm
	lop3.b32 %r5450, %r5451, %r5457, %r5453, 232;
	// end inline asm
	xor.b32  	%r6240, %r6131, %r6115;
	xor.b32  	%r6241, %r6240, %r6179;
	xor.b32  	%r6242, %r6241, %r6219;
	shf.l.wrap.b32 	%r6243, %r6242, %r6242, 1;
	add.s32 	%r6244, %r5450, %r6243;
	add.s32 	%r6245, %r6244, %r5449;
	add.s32 	%r6246, %r6245, %r6239;
	add.s32 	%r5459, %r6246, -1894007588;
	shf.l.wrap.b32 	%r5461, %r5451, %r5451, 30;
	shf.l.wrap.b32 	%r6247, %r5459, %r5459, 5;
	// begin inline asm
	lop3.b32 %r5454, %r5455, %r5461, %r5457, 232;
	// end inline asm
	xor.b32  	%r6248, %r6139, %r6123;
	xor.b32  	%r6249, %r6248, %r6187;
	xor.b32  	%r6250, %r6249, %r6227;
	shf.l.wrap.b32 	%r6251, %r6250, %r6250, 1;
	add.s32 	%r6252, %r5454, %r6251;
	add.s32 	%r6253, %r6252, %r5453;
	add.s32 	%r6254, %r6253, %r6247;
	add.s32 	%r5463, %r6254, -1894007588;
	shf.l.wrap.b32 	%r5465, %r5455, %r5455, 30;
	shf.l.wrap.b32 	%r6255, %r5463, %r5463, 5;
	// begin inline asm
	lop3.b32 %r5458, %r5459, %r5465, %r5461, 232;
	// end inline asm
	xor.b32  	%r6256, %r6147, %r6131;
	xor.b32  	%r6257, %r6256, %r6195;
	xor.b32  	%r6258, %r6257, %r6235;
	shf.l.wrap.b32 	%r6259, %r6258, %r6258, 1;
	add.s32 	%r6260, %r5458, %r6259;
	add.s32 	%r6261, %r6260, %r5457;
	add.s32 	%r6262, %r6261, %r6255;
	add.s32 	%r5467, %r6262, -1894007588;
	shf.l.wrap.b32 	%r5469, %r5459, %r5459, 30;
	shf.l.wrap.b32 	%r6263, %r5467, %r5467, 5;
	// begin inline asm
	lop3.b32 %r5462, %r5463, %r5469, %r5465, 232;
	// end inline asm
	xor.b32  	%r6264, %r6155, %r6139;
	xor.b32  	%r6265, %r6264, %r6203;
	xor.b32  	%r6266, %r6265, %r6243;
	shf.l.wrap.b32 	%r6267, %r6266, %r6266, 1;
	add.s32 	%r6268, %r5462, %r6267;
	add.s32 	%r6269, %r6268, %r5461;
	add.s32 	%r6270, %r6269, %r6263;
	add.s32 	%r5471, %r6270, -1894007588;
	shf.l.wrap.b32 	%r5473, %r5463, %r5463, 30;
	shf.l.wrap.b32 	%r6271, %r5471, %r5471, 5;
	// begin inline asm
	lop3.b32 %r5466, %r5467, %r5473, %r5469, 232;
	// end inline asm
	xor.b32  	%r6272, %r6163, %r6147;
	xor.b32  	%r6273, %r6272, %r6211;
	xor.b32  	%r6274, %r6273, %r6251;
	shf.l.wrap.b32 	%r6275, %r6274, %r6274, 1;
	add.s32 	%r6276, %r5466, %r6275;
	add.s32 	%r6277, %r6276, %r5465;
	add.s32 	%r6278, %r6277, %r6271;
	add.s32 	%r5475, %r6278, -1894007588;
	shf.l.wrap.b32 	%r5477, %r5467, %r5467, 30;
	shf.l.wrap.b32 	%r6279, %r5475, %r5475, 5;
	// begin inline asm
	lop3.b32 %r5470, %r5471, %r5477, %r5473, 232;
	// end inline asm
	xor.b32  	%r6280, %r6171, %r6155;
	xor.b32  	%r6281, %r6280, %r6219;
	xor.b32  	%r6282, %r6281, %r6259;
	shf.l.wrap.b32 	%r6283, %r6282, %r6282, 1;
	add.s32 	%r6284, %r5470, %r6283;
	add.s32 	%r6285, %r6284, %r5469;
	add.s32 	%r6286, %r6285, %r6279;
	add.s32 	%r5479, %r6286, -1894007588;
	shf.l.wrap.b32 	%r5481, %r5471, %r5471, 30;
	shf.l.wrap.b32 	%r6287, %r5479, %r5479, 5;
	// begin inline asm
	lop3.b32 %r5474, %r5475, %r5481, %r5477, 232;
	// end inline asm
	xor.b32  	%r6288, %r6179, %r6163;
	xor.b32  	%r6289, %r6288, %r6227;
	xor.b32  	%r6290, %r6289, %r6267;
	shf.l.wrap.b32 	%r6291, %r6290, %r6290, 1;
	add.s32 	%r6292, %r5474, %r6291;
	add.s32 	%r6293, %r6292, %r5473;
	add.s32 	%r6294, %r6293, %r6287;
	add.s32 	%r5483, %r6294, -1894007588;
	shf.l.wrap.b32 	%r5485, %r5475, %r5475, 30;
	shf.l.wrap.b32 	%r6295, %r5483, %r5483, 5;
	// begin inline asm
	lop3.b32 %r5478, %r5479, %r5485, %r5481, 232;
	// end inline asm
	xor.b32  	%r6296, %r6187, %r6171;
	xor.b32  	%r6297, %r6296, %r6235;
	xor.b32  	%r6298, %r6297, %r6275;
	shf.l.wrap.b32 	%r6299, %r6298, %r6298, 1;
	add.s32 	%r6300, %r5478, %r6299;
	add.s32 	%r6301, %r6300, %r5477;
	add.s32 	%r6302, %r6301, %r6295;
	add.s32 	%r5487, %r6302, -1894007588;
	shf.l.wrap.b32 	%r5489, %r5479, %r5479, 30;
	shf.l.wrap.b32 	%r6303, %r5487, %r5487, 5;
	// begin inline asm
	lop3.b32 %r5482, %r5483, %r5489, %r5485, 232;
	// end inline asm
	xor.b32  	%r6304, %r6195, %r6179;
	xor.b32  	%r6305, %r6304, %r6243;
	xor.b32  	%r6306, %r6305, %r6283;
	shf.l.wrap.b32 	%r6307, %r6306, %r6306, 1;
	add.s32 	%r6308, %r5482, %r6307;
	add.s32 	%r6309, %r6308, %r5481;
	add.s32 	%r6310, %r6309, %r6303;
	add.s32 	%r5491, %r6310, -1894007588;
	shf.l.wrap.b32 	%r5493, %r5483, %r5483, 30;
	shf.l.wrap.b32 	%r6311, %r5491, %r5491, 5;
	// begin inline asm
	lop3.b32 %r5486, %r5487, %r5493, %r5489, 232;
	// end inline asm
	xor.b32  	%r6312, %r6203, %r6187;
	xor.b32  	%r6313, %r6312, %r6251;
	xor.b32  	%r6314, %r6313, %r6291;
	shf.l.wrap.b32 	%r6315, %r6314, %r6314, 1;
	add.s32 	%r6316, %r5486, %r6315;
	add.s32 	%r6317, %r6316, %r5485;
	add.s32 	%r6318, %r6317, %r6311;
	add.s32 	%r5495, %r6318, -1894007588;
	shf.l.wrap.b32 	%r5497, %r5487, %r5487, 30;
	shf.l.wrap.b32 	%r6319, %r5495, %r5495, 5;
	// begin inline asm
	lop3.b32 %r5490, %r5491, %r5497, %r5493, 232;
	// end inline asm
	xor.b32  	%r6320, %r6211, %r6195;
	xor.b32  	%r6321, %r6320, %r6259;
	xor.b32  	%r6322, %r6321, %r6299;
	shf.l.wrap.b32 	%r6323, %r6322, %r6322, 1;
	add.s32 	%r6324, %r5490, %r6323;
	add.s32 	%r6325, %r6324, %r5489;
	add.s32 	%r6326, %r6325, %r6319;
	add.s32 	%r5499, %r6326, -1894007588;
	shf.l.wrap.b32 	%r5501, %r5491, %r5491, 30;
	shf.l.wrap.b32 	%r6327, %r5499, %r5499, 5;
	// begin inline asm
	lop3.b32 %r5494, %r5495, %r5501, %r5497, 232;
	// end inline asm
	xor.b32  	%r6328, %r6219, %r6203;
	xor.b32  	%r6329, %r6328, %r6267;
	xor.b32  	%r6330, %r6329, %r6307;
	shf.l.wrap.b32 	%r6331, %r6330, %r6330, 1;
	add.s32 	%r6332, %r5494, %r6331;
	add.s32 	%r6333, %r6332, %r5493;
	add.s32 	%r6334, %r6333, %r6327;
	add.s32 	%r5503, %r6334, -1894007588;
	shf.l.wrap.b32 	%r5505, %r5495, %r5495, 30;
	shf.l.wrap.b32 	%r6335, %r5503, %r5503, 5;
	// begin inline asm
	lop3.b32 %r5498, %r5499, %r5505, %r5501, 232;
	// end inline asm
	xor.b32  	%r6336, %r6227, %r6211;
	xor.b32  	%r6337, %r6336, %r6275;
	xor.b32  	%r6338, %r6337, %r6315;
	shf.l.wrap.b32 	%r6339, %r6338, %r6338, 1;
	add.s32 	%r6340, %r5498, %r6339;
	add.s32 	%r6341, %r6340, %r5497;
	add.s32 	%r6342, %r6341, %r6335;
	add.s32 	%r5507, %r6342, -1894007588;
	shf.l.wrap.b32 	%r5509, %r5499, %r5499, 30;
	shf.l.wrap.b32 	%r6343, %r5507, %r5507, 5;
	// begin inline asm
	lop3.b32 %r5502, %r5503, %r5509, %r5505, 232;
	// end inline asm
	xor.b32  	%r6344, %r6235, %r6219;
	xor.b32  	%r6345, %r6344, %r6283;
	xor.b32  	%r6346, %r6345, %r6323;
	shf.l.wrap.b32 	%r6347, %r6346, %r6346, 1;
	add.s32 	%r6348, %r5502, %r6347;
	add.s32 	%r6349, %r6348, %r5501;
	add.s32 	%r6350, %r6349, %r6343;
	add.s32 	%r5511, %r6350, -1894007588;
	shf.l.wrap.b32 	%r5513, %r5503, %r5503, 30;
	shf.l.wrap.b32 	%r6351, %r5511, %r5511, 5;
	// begin inline asm
	lop3.b32 %r5506, %r5507, %r5513, %r5509, 232;
	// end inline asm
	xor.b32  	%r6352, %r6243, %r6227;
	xor.b32  	%r6353, %r6352, %r6291;
	xor.b32  	%r6354, %r6353, %r6331;
	shf.l.wrap.b32 	%r6355, %r6354, %r6354, 1;
	add.s32 	%r6356, %r5506, %r6355;
	add.s32 	%r6357, %r6356, %r5505;
	add.s32 	%r6358, %r6357, %r6351;
	add.s32 	%r5515, %r6358, -1894007588;
	shf.l.wrap.b32 	%r5517, %r5507, %r5507, 30;
	shf.l.wrap.b32 	%r6359, %r5515, %r5515, 5;
	// begin inline asm
	lop3.b32 %r5510, %r5511, %r5517, %r5513, 150;
	// end inline asm
	xor.b32  	%r6360, %r6251, %r6235;
	xor.b32  	%r6361, %r6360, %r6299;
	xor.b32  	%r6362, %r6361, %r6339;
	shf.l.wrap.b32 	%r6363, %r6362, %r6362, 1;
	add.s32 	%r6364, %r5510, %r6363;
	add.s32 	%r6365, %r6364, %r5509;
	add.s32 	%r6366, %r6365, %r6359;
	add.s32 	%r5519, %r6366, -899497514;
	shf.l.wrap.b32 	%r5521, %r5511, %r5511, 30;
	shf.l.wrap.b32 	%r6367, %r5519, %r5519, 5;
	// begin inline asm
	lop3.b32 %r5514, %r5515, %r5521, %r5517, 150;
	// end inline asm
	xor.b32  	%r6368, %r6259, %r6243;
	xor.b32  	%r6369, %r6368, %r6307;
	xor.b32  	%r6370, %r6369, %r6347;
	shf.l.wrap.b32 	%r6371, %r6370, %r6370, 1;
	add.s32 	%r6372, %r5514, %r6371;
	add.s32 	%r6373, %r6372, %r5513;
	add.s32 	%r6374, %r6373, %r6367;
	add.s32 	%r5523, %r6374, -899497514;
	shf.l.wrap.b32 	%r5525, %r5515, %r5515, 30;
	shf.l.wrap.b32 	%r6375, %r5523, %r5523, 5;
	// begin inline asm
	lop3.b32 %r5518, %r5519, %r5525, %r5521, 150;
	// end inline asm
	xor.b32  	%r6376, %r6267, %r6251;
	xor.b32  	%r6377, %r6376, %r6315;
	xor.b32  	%r6378, %r6377, %r6355;
	shf.l.wrap.b32 	%r6379, %r6378, %r6378, 1;
	add.s32 	%r6380, %r5518, %r6379;
	add.s32 	%r6381, %r6380, %r5517;
	add.s32 	%r6382, %r6381, %r6375;
	add.s32 	%r5527, %r6382, -899497514;
	shf.l.wrap.b32 	%r5529, %r5519, %r5519, 30;
	shf.l.wrap.b32 	%r6383, %r5527, %r5527, 5;
	// begin inline asm
	lop3.b32 %r5522, %r5523, %r5529, %r5525, 150;
	// end inline asm
	xor.b32  	%r6384, %r6275, %r6259;
	xor.b32  	%r6385, %r6384, %r6323;
	xor.b32  	%r6386, %r6385, %r6363;
	shf.l.wrap.b32 	%r6387, %r6386, %r6386, 1;
	add.s32 	%r6388, %r5522, %r6387;
	add.s32 	%r6389, %r6388, %r5521;
	add.s32 	%r6390, %r6389, %r6383;
	add.s32 	%r5531, %r6390, -899497514;
	shf.l.wrap.b32 	%r5533, %r5523, %r5523, 30;
	shf.l.wrap.b32 	%r6391, %r5531, %r5531, 5;
	// begin inline asm
	lop3.b32 %r5526, %r5527, %r5533, %r5529, 150;
	// end inline asm
	xor.b32  	%r6392, %r6283, %r6267;
	xor.b32  	%r6393, %r6392, %r6331;
	xor.b32  	%r6394, %r6393, %r6371;
	shf.l.wrap.b32 	%r6395, %r6394, %r6394, 1;
	add.s32 	%r6396, %r5526, %r6395;
	add.s32 	%r6397, %r6396, %r5525;
	add.s32 	%r6398, %r6397, %r6391;
	add.s32 	%r5535, %r6398, -899497514;
	shf.l.wrap.b32 	%r5537, %r5527, %r5527, 30;
	shf.l.wrap.b32 	%r6399, %r5535, %r5535, 5;
	// begin inline asm
	lop3.b32 %r5530, %r5531, %r5537, %r5533, 150;
	// end inline asm
	xor.b32  	%r6400, %r6291, %r6275;
	xor.b32  	%r6401, %r6400, %r6339;
	xor.b32  	%r6402, %r6401, %r6379;
	shf.l.wrap.b32 	%r6403, %r6402, %r6402, 1;
	add.s32 	%r6404, %r5530, %r6403;
	add.s32 	%r6405, %r6404, %r5529;
	add.s32 	%r6406, %r6405, %r6399;
	add.s32 	%r5539, %r6406, -899497514;
	shf.l.wrap.b32 	%r5541, %r5531, %r5531, 30;
	shf.l.wrap.b32 	%r6407, %r5539, %r5539, 5;
	// begin inline asm
	lop3.b32 %r5534, %r5535, %r5541, %r5537, 150;
	// end inline asm
	xor.b32  	%r6408, %r6299, %r6283;
	xor.b32  	%r6409, %r6408, %r6347;
	xor.b32  	%r6410, %r6409, %r6387;
	shf.l.wrap.b32 	%r6411, %r6410, %r6410, 1;
	add.s32 	%r6412, %r5534, %r6411;
	add.s32 	%r6413, %r6412, %r5533;
	add.s32 	%r6414, %r6413, %r6407;
	add.s32 	%r5543, %r6414, -899497514;
	shf.l.wrap.b32 	%r5545, %r5535, %r5535, 30;
	shf.l.wrap.b32 	%r6415, %r5543, %r5543, 5;
	// begin inline asm
	lop3.b32 %r5538, %r5539, %r5545, %r5541, 150;
	// end inline asm
	xor.b32  	%r6416, %r6307, %r6291;
	xor.b32  	%r6417, %r6416, %r6355;
	xor.b32  	%r6418, %r6417, %r6395;
	shf.l.wrap.b32 	%r6419, %r6418, %r6418, 1;
	add.s32 	%r6420, %r5538, %r6419;
	add.s32 	%r6421, %r6420, %r5537;
	add.s32 	%r6422, %r6421, %r6415;
	add.s32 	%r5547, %r6422, -899497514;
	shf.l.wrap.b32 	%r5549, %r5539, %r5539, 30;
	shf.l.wrap.b32 	%r6423, %r5547, %r5547, 5;
	// begin inline asm
	lop3.b32 %r5542, %r5543, %r5549, %r5545, 150;
	// end inline asm
	xor.b32  	%r6424, %r6315, %r6299;
	xor.b32  	%r6425, %r6424, %r6363;
	xor.b32  	%r6426, %r6425, %r6403;
	shf.l.wrap.b32 	%r6427, %r6426, %r6426, 1;
	add.s32 	%r6428, %r5542, %r6427;
	add.s32 	%r6429, %r6428, %r5541;
	add.s32 	%r6430, %r6429, %r6423;
	add.s32 	%r5551, %r6430, -899497514;
	shf.l.wrap.b32 	%r5553, %r5543, %r5543, 30;
	shf.l.wrap.b32 	%r6431, %r5551, %r5551, 5;
	// begin inline asm
	lop3.b32 %r5546, %r5547, %r5553, %r5549, 150;
	// end inline asm
	xor.b32  	%r6432, %r6323, %r6307;
	xor.b32  	%r6433, %r6432, %r6371;
	xor.b32  	%r6434, %r6433, %r6411;
	shf.l.wrap.b32 	%r6435, %r6434, %r6434, 1;
	add.s32 	%r6436, %r5546, %r6435;
	add.s32 	%r6437, %r6436, %r5545;
	add.s32 	%r6438, %r6437, %r6431;
	add.s32 	%r5555, %r6438, -899497514;
	shf.l.wrap.b32 	%r5557, %r5547, %r5547, 30;
	shf.l.wrap.b32 	%r6439, %r5555, %r5555, 5;
	// begin inline asm
	lop3.b32 %r5550, %r5551, %r5557, %r5553, 150;
	// end inline asm
	xor.b32  	%r6440, %r6331, %r6315;
	xor.b32  	%r6441, %r6440, %r6379;
	xor.b32  	%r6442, %r6441, %r6419;
	shf.l.wrap.b32 	%r6443, %r6442, %r6442, 1;
	add.s32 	%r6444, %r5550, %r6443;
	add.s32 	%r6445, %r6444, %r5549;
	add.s32 	%r6446, %r6445, %r6439;
	add.s32 	%r5559, %r6446, -899497514;
	shf.l.wrap.b32 	%r5561, %r5551, %r5551, 30;
	shf.l.wrap.b32 	%r6447, %r5559, %r5559, 5;
	// begin inline asm
	lop3.b32 %r5554, %r5555, %r5561, %r5557, 150;
	// end inline asm
	xor.b32  	%r6448, %r6339, %r6323;
	xor.b32  	%r6449, %r6448, %r6387;
	xor.b32  	%r6450, %r6449, %r6427;
	shf.l.wrap.b32 	%r6451, %r6450, %r6450, 1;
	add.s32 	%r6452, %r5554, %r6451;
	add.s32 	%r6453, %r6452, %r5553;
	add.s32 	%r6454, %r6453, %r6447;
	add.s32 	%r5563, %r6454, -899497514;
	shf.l.wrap.b32 	%r5565, %r5555, %r5555, 30;
	shf.l.wrap.b32 	%r6455, %r5563, %r5563, 5;
	// begin inline asm
	lop3.b32 %r5558, %r5559, %r5565, %r5561, 150;
	// end inline asm
	xor.b32  	%r6456, %r6347, %r6331;
	xor.b32  	%r6457, %r6456, %r6395;
	xor.b32  	%r6458, %r6457, %r6435;
	shf.l.wrap.b32 	%r6459, %r6458, %r6458, 1;
	add.s32 	%r6460, %r5558, %r6459;
	add.s32 	%r6461, %r6460, %r5557;
	add.s32 	%r6462, %r6461, %r6455;
	add.s32 	%r5567, %r6462, -899497514;
	shf.l.wrap.b32 	%r5569, %r5559, %r5559, 30;
	shf.l.wrap.b32 	%r6463, %r5567, %r5567, 5;
	// begin inline asm
	lop3.b32 %r5562, %r5563, %r5569, %r5565, 150;
	// end inline asm
	xor.b32  	%r6464, %r6355, %r6339;
	xor.b32  	%r6465, %r6464, %r6403;
	xor.b32  	%r6466, %r6465, %r6443;
	shf.l.wrap.b32 	%r6467, %r6466, %r6466, 1;
	add.s32 	%r6468, %r5562, %r6467;
	add.s32 	%r6469, %r6468, %r5561;
	add.s32 	%r6470, %r6469, %r6463;
	add.s32 	%r5571, %r6470, -899497514;
	shf.l.wrap.b32 	%r5573, %r5563, %r5563, 30;
	shf.l.wrap.b32 	%r6471, %r5571, %r5571, 5;
	// begin inline asm
	lop3.b32 %r5566, %r5567, %r5573, %r5569, 150;
	// end inline asm
	xor.b32  	%r6472, %r6363, %r6347;
	xor.b32  	%r6473, %r6472, %r6411;
	xor.b32  	%r6474, %r6473, %r6451;
	shf.l.wrap.b32 	%r6475, %r6474, %r6474, 1;
	add.s32 	%r6476, %r5566, %r6475;
	add.s32 	%r6477, %r6476, %r5565;
	add.s32 	%r6478, %r6477, %r6471;
	add.s32 	%r5575, %r6478, -899497514;
	shf.l.wrap.b32 	%r5577, %r5567, %r5567, 30;
	shf.l.wrap.b32 	%r6479, %r5575, %r5575, 5;
	// begin inline asm
	lop3.b32 %r5570, %r5571, %r5577, %r5573, 150;
	// end inline asm
	xor.b32  	%r6480, %r6371, %r6355;
	xor.b32  	%r6481, %r6480, %r6419;
	xor.b32  	%r6482, %r6481, %r6459;
	shf.l.wrap.b32 	%r6483, %r6482, %r6482, 1;
	add.s32 	%r6484, %r5570, %r6483;
	add.s32 	%r6485, %r6484, %r5569;
	add.s32 	%r6486, %r6485, %r6479;
	add.s32 	%r5579, %r6486, -899497514;
	shf.l.wrap.b32 	%r5581, %r5571, %r5571, 30;
	shf.l.wrap.b32 	%r6487, %r5579, %r5579, 5;
	// begin inline asm
	lop3.b32 %r5574, %r5575, %r5581, %r5577, 150;
	// end inline asm
	xor.b32  	%r6488, %r6379, %r6363;
	xor.b32  	%r6489, %r6488, %r6427;
	xor.b32  	%r6490, %r6489, %r6467;
	shf.l.wrap.b32 	%r6491, %r6490, %r6490, 1;
	add.s32 	%r6492, %r5574, %r6491;
	add.s32 	%r6493, %r6492, %r5573;
	add.s32 	%r6494, %r6493, %r6487;
	add.s32 	%r5583, %r6494, -899497514;
	shf.l.wrap.b32 	%r5585, %r5575, %r5575, 30;
	shf.l.wrap.b32 	%r6495, %r5583, %r5583, 5;
	// begin inline asm
	lop3.b32 %r5578, %r5579, %r5585, %r5581, 150;
	// end inline asm
	xor.b32  	%r6496, %r6387, %r6371;
	xor.b32  	%r6497, %r6496, %r6435;
	xor.b32  	%r6498, %r6497, %r6475;
	shf.l.wrap.b32 	%r6499, %r6498, %r6498, 1;
	add.s32 	%r6500, %r5578, %r6499;
	add.s32 	%r6501, %r6500, %r5577;
	add.s32 	%r6502, %r6501, %r6495;
	add.s32 	%r5587, %r6502, -899497514;
	shf.l.wrap.b32 	%r5589, %r5579, %r5579, 30;
	shf.l.wrap.b32 	%r6503, %r5587, %r5587, 5;
	// begin inline asm
	lop3.b32 %r5582, %r5583, %r5589, %r5585, 150;
	// end inline asm
	xor.b32  	%r6504, %r6395, %r6379;
	xor.b32  	%r6505, %r6504, %r6443;
	xor.b32  	%r6506, %r6505, %r6483;
	shf.l.wrap.b32 	%r6507, %r6506, %r6506, 1;
	add.s32 	%r6508, %r5582, %r6507;
	add.s32 	%r6509, %r6508, %r5581;
	add.s32 	%r6510, %r6509, %r6503;
	add.s32 	%r6511, %r6510, -899497514;
	shf.l.wrap.b32 	%r5588, %r5583, %r5583, 30;
	shf.l.wrap.b32 	%r6512, %r6511, %r6511, 5;
	// begin inline asm
	lop3.b32 %r5586, %r5587, %r5588, %r5589, 150;
	// end inline asm
	xor.b32  	%r6513, %r6403, %r6387;
	xor.b32  	%r6514, %r6513, %r6451;
	xor.b32  	%r6515, %r6514, %r6491;
	shf.l.wrap.b32 	%r6516, %r6515, %r6515, 1;
	shf.l.wrap.b32 	%r6517, %r5587, %r5587, 30;
	add.s32 	%r6518, %r7103, %r5586;
	add.s32 	%r6519, %r6518, %r6516;
	add.s32 	%r6520, %r6519, %r5585;
	add.s32 	%r6521, %r6520, %r6512;
	add.s32 	%r6522, %r6521, -899497514;
	add.s32 	%r6523, %r6511, %r7102;
	add.s32 	%r6524, %r6517, %r7101;
	add.s32 	%r6525, %r5588, %r7100;
	add.s32 	%r6526, %r5589, %r7099;
	ld.global.u32 	%r5595, [%rd2+-44];
	shf.l.wrap.b32 	%r6527, %r5595, %r5595, 5;
	ld.global.u32 	%r5593, [%rd2+-32];
	ld.global.u32 	%r5592, [%rd2+-36];
	ld.global.u32 	%r5591, [%rd2+-40];
	// begin inline asm
	lop3.b32 %r5590, %r5591, %r5592, %r5593, 202;
	// end inline asm
	ld.global.u32 	%r6528, [%rd2+-28];
	add.s32 	%r6529, %r6527, %r6528;
	add.s32 	%r6530, %r6529, %r5590;
	add.s32 	%r6531, %r6530, %r6522;
	add.s32 	%r5599, %r6531, 1518500249;
	shf.l.wrap.b32 	%r5601, %r5591, %r5591, 30;
	shf.l.wrap.b32 	%r6532, %r5599, %r5599, 5;
	// begin inline asm
	lop3.b32 %r5594, %r5595, %r5601, %r5592, 202;
	// end inline asm
	add.s32 	%r6533, %r5593, %r5594;
	add.s32 	%r6534, %r6533, %r6523;
	add.s32 	%r6535, %r6534, %r6532;
	add.s32 	%r5603, %r6535, 1518500249;
	shf.l.wrap.b32 	%r5605, %r5595, %r5595, 30;
	shf.l.wrap.b32 	%r6536, %r5603, %r5603, 5;
	// begin inline asm
	lop3.b32 %r5598, %r5599, %r5605, %r5601, 202;
	// end inline asm
	add.s32 	%r6537, %r5592, %r5598;
	add.s32 	%r6538, %r6537, %r6524;
	add.s32 	%r6539, %r6538, %r6536;
	add.s32 	%r5607, %r6539, 1518500249;
	shf.l.wrap.b32 	%r5609, %r5599, %r5599, 30;
	shf.l.wrap.b32 	%r6540, %r5607, %r5607, 5;
	// begin inline asm
	lop3.b32 %r5602, %r5603, %r5609, %r5605, 202;
	// end inline asm
	add.s32 	%r6541, %r5601, %r5602;
	add.s32 	%r6542, %r6541, %r6525;
	add.s32 	%r6543, %r6542, %r6540;
	add.s32 	%r5611, %r6543, 1518500249;
	shf.l.wrap.b32 	%r5613, %r5603, %r5603, 30;
	shf.l.wrap.b32 	%r6544, %r5611, %r5611, 5;
	// begin inline asm
	lop3.b32 %r5606, %r5607, %r5613, %r5609, 202;
	// end inline asm
	add.s32 	%r6545, %r5605, %r5606;
	add.s32 	%r6546, %r6545, %r6526;
	add.s32 	%r6547, %r6546, %r6544;
	add.s32 	%r5615, %r6547, 1518500249;
	shf.l.wrap.b32 	%r5617, %r5607, %r5607, 30;
	shf.l.wrap.b32 	%r6548, %r5615, %r5615, 5;
	// begin inline asm
	lop3.b32 %r5610, %r5611, %r5617, %r5613, 202;
	// end inline asm
	add.s32 	%r6549, %r5609, %r5610;
	add.s32 	%r6550, %r6549, 1518500249;
	xor.b32  	%r6551, %r6550, -2147483648;
	add.s32 	%r5619, %r6551, %r6548;
	shf.l.wrap.b32 	%r5621, %r5611, %r5611, 30;
	shf.l.wrap.b32 	%r6552, %r5619, %r5619, 5;
	// begin inline asm
	lop3.b32 %r5614, %r5615, %r5621, %r5617, 202;
	// end inline asm
	add.s32 	%r6553, %r5613, %r5614;
	add.s32 	%r6554, %r6553, %r6552;
	add.s32 	%r5623, %r6554, 1518500249;
	shf.l.wrap.b32 	%r5625, %r5615, %r5615, 30;
	shf.l.wrap.b32 	%r6555, %r5623, %r5623, 5;
	// begin inline asm
	lop3.b32 %r5618, %r5619, %r5625, %r5621, 202;
	// end inline asm
	add.s32 	%r6556, %r5618, %r5617;
	add.s32 	%r6557, %r6556, %r6555;
	add.s32 	%r5627, %r6557, 1518500249;
	shf.l.wrap.b32 	%r5629, %r5619, %r5619, 30;
	shf.l.wrap.b32 	%r6558, %r5627, %r5627, 5;
	// begin inline asm
	lop3.b32 %r5622, %r5623, %r5629, %r5625, 202;
	// end inline asm
	add.s32 	%r6559, %r5622, %r5621;
	add.s32 	%r6560, %r6559, %r6558;
	add.s32 	%r5631, %r6560, 1518500249;
	shf.l.wrap.b32 	%r5633, %r5623, %r5623, 30;
	shf.l.wrap.b32 	%r6561, %r5631, %r5631, 5;
	// begin inline asm
	lop3.b32 %r5626, %r5627, %r5633, %r5629, 202;
	// end inline asm
	add.s32 	%r6562, %r5626, %r5625;
	add.s32 	%r6563, %r6562, %r6561;
	add.s32 	%r5635, %r6563, 1518500249;
	shf.l.wrap.b32 	%r5637, %r5627, %r5627, 30;
	shf.l.wrap.b32 	%r6564, %r5635, %r5635, 5;
	// begin inline asm
	lop3.b32 %r5630, %r5631, %r5637, %r5633, 202;
	// end inline asm
	add.s32 	%r6565, %r5630, %r5629;
	add.s32 	%r6566, %r6565, %r6564;
	add.s32 	%r5639, %r6566, 1518500249;
	shf.l.wrap.b32 	%r5641, %r5631, %r5631, 30;
	shf.l.wrap.b32 	%r6567, %r5639, %r5639, 5;
	// begin inline asm
	lop3.b32 %r5634, %r5635, %r5641, %r5637, 202;
	// end inline asm
	add.s32 	%r6568, %r5634, %r5633;
	add.s32 	%r6569, %r6568, %r6567;
	add.s32 	%r5643, %r6569, 1518500249;
	shf.l.wrap.b32 	%r5645, %r5635, %r5635, 30;
	shf.l.wrap.b32 	%r6570, %r5643, %r5643, 5;
	// begin inline asm
	lop3.b32 %r5638, %r5639, %r5645, %r5641, 202;
	// end inline asm
	add.s32 	%r6571, %r5638, %r5637;
	add.s32 	%r6572, %r6571, %r6570;
	add.s32 	%r5647, %r6572, 1518500249;
	shf.l.wrap.b32 	%r5649, %r5639, %r5639, 30;
	shf.l.wrap.b32 	%r6573, %r5647, %r5647, 5;
	// begin inline asm
	lop3.b32 %r5642, %r5643, %r5649, %r5645, 202;
	// end inline asm
	add.s32 	%r6574, %r5642, %r5641;
	add.s32 	%r6575, %r6574, %r6573;
	add.s32 	%r5651, %r6575, 1518500249;
	shf.l.wrap.b32 	%r5653, %r5643, %r5643, 30;
	shf.l.wrap.b32 	%r6576, %r5651, %r5651, 5;
	// begin inline asm
	lop3.b32 %r5646, %r5647, %r5653, %r5649, 202;
	// end inline asm
	add.s32 	%r6577, %r5646, %r5645;
	add.s32 	%r6578, %r6577, %r6576;
	add.s32 	%r5655, %r6578, 1518500249;
	shf.l.wrap.b32 	%r5657, %r5647, %r5647, 30;
	shf.l.wrap.b32 	%r6579, %r5655, %r5655, 5;
	// begin inline asm
	lop3.b32 %r5650, %r5651, %r5657, %r5653, 202;
	// end inline asm
	add.s32 	%r6580, %r5650, %r5649;
	add.s32 	%r6581, %r6580, %r6579;
	add.s32 	%r5659, %r6581, 1518500921;
	shf.l.wrap.b32 	%r5661, %r5651, %r5651, 30;
	shf.l.wrap.b32 	%r6582, %r5659, %r5659, 5;
	// begin inline asm
	lop3.b32 %r5654, %r5655, %r5661, %r5657, 202;
	// end inline asm
	xor.b32  	%r6583, %r6522, %r6524;
	shf.l.wrap.b32 	%r6584, %r6583, %r6583, 1;
	add.s32 	%r6585, %r5654, %r6584;
	add.s32 	%r6586, %r6585, %r5653;
	add.s32 	%r6587, %r6586, %r6582;
	add.s32 	%r5663, %r6587, 1518500249;
	shf.l.wrap.b32 	%r5665, %r5655, %r5655, 30;
	shf.l.wrap.b32 	%r6588, %r5663, %r5663, 5;
	// begin inline asm
	lop3.b32 %r5658, %r5659, %r5665, %r5661, 202;
	// end inline asm
	xor.b32  	%r6589, %r6523, %r6525;
	shf.l.wrap.b32 	%r6590, %r6589, %r6589, 1;
	add.s32 	%r6591, %r5658, %r6590;
	add.s32 	%r6592, %r6591, %r5657;
	add.s32 	%r6593, %r6592, %r6588;
	add.s32 	%r5667, %r6593, 1518500249;
	shf.l.wrap.b32 	%r5669, %r5659, %r5659, 30;
	shf.l.wrap.b32 	%r6594, %r5667, %r5667, 5;
	// begin inline asm
	lop3.b32 %r5662, %r5663, %r5669, %r5665, 202;
	// end inline asm
	xor.b32  	%r6595, %r6526, %r6524;
	xor.b32  	%r6596, %r6595, 672;
	shf.l.wrap.b32 	%r6597, %r6596, %r6596, 1;
	add.s32 	%r6598, %r5662, %r6597;
	add.s32 	%r6599, %r6598, %r5661;
	add.s32 	%r6600, %r6599, %r6594;
	add.s32 	%r5671, %r6600, 1518500249;
	shf.l.wrap.b32 	%r5673, %r5663, %r5663, 30;
	shf.l.wrap.b32 	%r6601, %r5671, %r5671, 5;
	// begin inline asm
	lop3.b32 %r5666, %r5667, %r5673, %r5669, 202;
	// end inline asm
	xor.b32  	%r6602, %r6584, %r6525;
	xor.b32  	%r6603, %r6602, -2147483648;
	shf.l.wrap.b32 	%r6604, %r6603, %r6603, 1;
	add.s32 	%r6605, %r5666, %r6604;
	add.s32 	%r6606, %r6605, %r5665;
	add.s32 	%r6607, %r6606, %r6601;
	add.s32 	%r5675, %r6607, 1518500249;
	shf.l.wrap.b32 	%r5677, %r5667, %r5667, 30;
	shf.l.wrap.b32 	%r6608, %r5675, %r5675, 5;
	// begin inline asm
	lop3.b32 %r5670, %r5671, %r5677, %r5673, 150;
	// end inline asm
	xor.b32  	%r6609, %r6526, %r6590;
	shf.l.wrap.b32 	%r6610, %r6609, %r6609, 1;
	add.s32 	%r6611, %r5670, %r6610;
	add.s32 	%r6612, %r6611, %r5669;
	add.s32 	%r6613, %r6612, %r6608;
	add.s32 	%r5679, %r6613, 1859775393;
	shf.l.wrap.b32 	%r5681, %r5671, %r5671, 30;
	shf.l.wrap.b32 	%r6614, %r5679, %r5679, 5;
	// begin inline asm
	lop3.b32 %r5674, %r5675, %r5681, %r5677, 150;
	// end inline asm
	xor.b32  	%r6615, %r6597, -2147483648;
	shf.l.wrap.b32 	%r6616, %r6615, %r6615, 1;
	add.s32 	%r6617, %r5674, %r6616;
	add.s32 	%r6618, %r6617, %r5673;
	add.s32 	%r6619, %r6618, %r6614;
	add.s32 	%r5683, %r6619, 1859775393;
	shf.l.wrap.b32 	%r5685, %r5675, %r5675, 30;
	shf.l.wrap.b32 	%r6620, %r5683, %r5683, 5;
	// begin inline asm
	lop3.b32 %r5678, %r5679, %r5685, %r5681, 150;
	// end inline asm
	shf.l.wrap.b32 	%r6621, %r6604, %r6604, 1;
	add.s32 	%r6622, %r5678, %r6621;
	add.s32 	%r6623, %r6622, %r5677;
	add.s32 	%r6624, %r6623, %r6620;
	add.s32 	%r5687, %r6624, 1859775393;
	shf.l.wrap.b32 	%r5689, %r5679, %r5679, 30;
	shf.l.wrap.b32 	%r6625, %r5687, %r5687, 5;
	// begin inline asm
	lop3.b32 %r5682, %r5683, %r5689, %r5685, 150;
	// end inline asm
	xor.b32  	%r6626, %r6610, 672;
	shf.l.wrap.b32 	%r6627, %r6626, %r6626, 1;
	add.s32 	%r6628, %r5682, %r6627;
	add.s32 	%r6629, %r6628, %r5681;
	add.s32 	%r6630, %r6629, %r6625;
	add.s32 	%r5691, %r6630, 1859775393;
	shf.l.wrap.b32 	%r5693, %r5683, %r5683, 30;
	shf.l.wrap.b32 	%r6631, %r5691, %r5691, 5;
	// begin inline asm
	lop3.b32 %r5686, %r5687, %r5693, %r5689, 150;
	// end inline asm
	xor.b32  	%r6632, %r6584, %r6616;
	shf.l.wrap.b32 	%r6633, %r6632, %r6632, 1;
	add.s32 	%r6634, %r5686, %r6633;
	add.s32 	%r6635, %r6634, %r5685;
	add.s32 	%r6636, %r6635, %r6631;
	add.s32 	%r5695, %r6636, 1859775393;
	shf.l.wrap.b32 	%r5697, %r5687, %r5687, 30;
	shf.l.wrap.b32 	%r6637, %r5695, %r5695, 5;
	// begin inline asm
	lop3.b32 %r5690, %r5691, %r5697, %r5693, 150;
	// end inline asm
	xor.b32  	%r6638, %r6590, %r6621;
	shf.l.wrap.b32 	%r6639, %r6638, %r6638, 1;
	add.s32 	%r6640, %r5690, %r6639;
	add.s32 	%r6641, %r6640, %r5689;
	add.s32 	%r6642, %r6641, %r6637;
	add.s32 	%r5699, %r6642, 1859775393;
	shf.l.wrap.b32 	%r5701, %r5691, %r5691, 30;
	shf.l.wrap.b32 	%r6643, %r5699, %r5699, 5;
	// begin inline asm
	lop3.b32 %r5694, %r5695, %r5701, %r5697, 150;
	// end inline asm
	xor.b32  	%r6644, %r6597, %r6627;
	shf.l.wrap.b32 	%r6645, %r6644, %r6644, 1;
	add.s32 	%r6646, %r5694, %r6645;
	add.s32 	%r6647, %r6646, %r5693;
	add.s32 	%r6648, %r6647, %r6643;
	add.s32 	%r5703, %r6648, 1859775393;
	shf.l.wrap.b32 	%r5705, %r5695, %r5695, 30;
	shf.l.wrap.b32 	%r6649, %r5703, %r5703, 5;
	// begin inline asm
	lop3.b32 %r5698, %r5699, %r5705, %r5701, 150;
	// end inline asm
	xor.b32  	%r6650, %r6604, %r6633;
	shf.l.wrap.b32 	%r6651, %r6650, %r6650, 1;
	add.s32 	%r6652, %r5698, %r6651;
	add.s32 	%r6653, %r6652, %r5697;
	add.s32 	%r6654, %r6653, %r6649;
	add.s32 	%r5707, %r6654, 1859775393;
	shf.l.wrap.b32 	%r5709, %r5699, %r5699, 30;
	shf.l.wrap.b32 	%r6655, %r5707, %r5707, 5;
	// begin inline asm
	lop3.b32 %r5702, %r5703, %r5709, %r5705, 150;
	// end inline asm
	xor.b32  	%r6656, %r6610, %r6639;
	shf.l.wrap.b32 	%r6657, %r6656, %r6656, 1;
	add.s32 	%r6658, %r5702, %r6657;
	add.s32 	%r6659, %r6658, %r5701;
	add.s32 	%r6660, %r6659, %r6655;
	add.s32 	%r5711, %r6660, 1859775393;
	shf.l.wrap.b32 	%r5713, %r5703, %r5703, 30;
	shf.l.wrap.b32 	%r6661, %r5711, %r5711, 5;
	// begin inline asm
	lop3.b32 %r5706, %r5707, %r5713, %r5709, 150;
	// end inline asm
	xor.b32  	%r6662, %r6616, %r6645;
	xor.b32  	%r6663, %r6662, 672;
	shf.l.wrap.b32 	%r6664, %r6663, %r6663, 1;
	add.s32 	%r6665, %r5706, %r6664;
	add.s32 	%r6666, %r6665, %r5705;
	add.s32 	%r6667, %r6666, %r6661;
	add.s32 	%r5715, %r6667, 1859775393;
	shf.l.wrap.b32 	%r5717, %r5707, %r5707, 30;
	shf.l.wrap.b32 	%r6668, %r5715, %r5715, 5;
	// begin inline asm
	lop3.b32 %r5710, %r5711, %r5717, %r5713, 150;
	// end inline asm
	xor.b32  	%r6669, %r6621, %r6651;
	xor.b32  	%r6670, %r6669, %r6584;
	shf.l.wrap.b32 	%r6671, %r6670, %r6670, 1;
	add.s32 	%r6672, %r5710, %r6671;
	add.s32 	%r6673, %r6672, %r5709;
	add.s32 	%r6674, %r6673, %r6668;
	add.s32 	%r5719, %r6674, 1859775393;
	shf.l.wrap.b32 	%r5721, %r5711, %r5711, 30;
	shf.l.wrap.b32 	%r6675, %r5719, %r5719, 5;
	// begin inline asm
	lop3.b32 %r5714, %r5715, %r5721, %r5717, 150;
	// end inline asm
	xor.b32  	%r6676, %r6627, %r6657;
	xor.b32  	%r6677, %r6676, %r6590;
	xor.b32  	%r6678, %r6677, 672;
	shf.l.wrap.b32 	%r6679, %r6678, %r6678, 1;
	add.s32 	%r6680, %r5714, %r6679;
	add.s32 	%r6681, %r6680, %r5713;
	add.s32 	%r6682, %r6681, %r6675;
	add.s32 	%r5723, %r6682, 1859775393;
	shf.l.wrap.b32 	%r5725, %r5715, %r5715, 30;
	shf.l.wrap.b32 	%r6683, %r5723, %r5723, 5;
	// begin inline asm
	lop3.b32 %r5718, %r5719, %r5725, %r5721, 150;
	// end inline asm
	xor.b32  	%r6684, %r6633, %r6664;
	xor.b32  	%r6685, %r6684, %r6597;
	xor.b32  	%r6686, %r6685, %r6584;
	shf.l.wrap.b32 	%r6687, %r6686, %r6686, 1;
	add.s32 	%r6688, %r5718, %r6687;
	add.s32 	%r6689, %r6688, %r5717;
	add.s32 	%r6690, %r6689, %r6683;
	add.s32 	%r5727, %r6690, 1859775393;
	shf.l.wrap.b32 	%r5729, %r5719, %r5719, 30;
	shf.l.wrap.b32 	%r6691, %r5727, %r5727, 5;
	// begin inline asm
	lop3.b32 %r5722, %r5723, %r5729, %r5725, 150;
	// end inline asm
	xor.b32  	%r6692, %r6639, %r6671;
	xor.b32  	%r6693, %r6692, %r6604;
	xor.b32  	%r6694, %r6693, %r6590;
	shf.l.wrap.b32 	%r6695, %r6694, %r6694, 1;
	add.s32 	%r6696, %r5722, %r6695;
	add.s32 	%r6697, %r6696, %r5721;
	add.s32 	%r6698, %r6697, %r6691;
	add.s32 	%r5731, %r6698, 1859775393;
	shf.l.wrap.b32 	%r5733, %r5723, %r5723, 30;
	shf.l.wrap.b32 	%r6699, %r5731, %r5731, 5;
	// begin inline asm
	lop3.b32 %r5726, %r5727, %r5733, %r5729, 150;
	// end inline asm
	xor.b32  	%r6700, %r6645, %r6679;
	xor.b32  	%r6701, %r6700, %r6610;
	xor.b32  	%r6702, %r6701, %r6597;
	shf.l.wrap.b32 	%r6703, %r6702, %r6702, 1;
	add.s32 	%r6704, %r5726, %r6703;
	add.s32 	%r6705, %r6704, %r5725;
	add.s32 	%r6706, %r6705, %r6699;
	add.s32 	%r5735, %r6706, 1859775393;
	shf.l.wrap.b32 	%r5737, %r5727, %r5727, 30;
	shf.l.wrap.b32 	%r6707, %r5735, %r5735, 5;
	// begin inline asm
	lop3.b32 %r5730, %r5731, %r5737, %r5733, 150;
	// end inline asm
	xor.b32  	%r6708, %r6651, %r6687;
	xor.b32  	%r6709, %r6708, %r6616;
	xor.b32  	%r6710, %r6709, %r6604;
	shf.l.wrap.b32 	%r6711, %r6710, %r6710, 1;
	add.s32 	%r6712, %r5730, %r6711;
	add.s32 	%r6713, %r6712, %r5729;
	add.s32 	%r6714, %r6713, %r6707;
	add.s32 	%r5739, %r6714, 1859775393;
	shf.l.wrap.b32 	%r5741, %r5731, %r5731, 30;
	shf.l.wrap.b32 	%r6715, %r5739, %r5739, 5;
	// begin inline asm
	lop3.b32 %r5734, %r5735, %r5741, %r5737, 150;
	// end inline asm
	xor.b32  	%r6716, %r6657, %r6695;
	xor.b32  	%r6717, %r6716, %r6621;
	xor.b32  	%r6718, %r6717, %r6610;
	shf.l.wrap.b32 	%r6719, %r6718, %r6718, 1;
	add.s32 	%r6720, %r5734, %r6719;
	add.s32 	%r6721, %r6720, %r5733;
	add.s32 	%r6722, %r6721, %r6715;
	add.s32 	%r5743, %r6722, 1859775393;
	shf.l.wrap.b32 	%r5745, %r5735, %r5735, 30;
	shf.l.wrap.b32 	%r6723, %r5743, %r5743, 5;
	// begin inline asm
	lop3.b32 %r5738, %r5739, %r5745, %r5741, 150;
	// end inline asm
	xor.b32  	%r6724, %r6664, %r6703;
	xor.b32  	%r6725, %r6724, %r6627;
	xor.b32  	%r6726, %r6725, %r6616;
	shf.l.wrap.b32 	%r6727, %r6726, %r6726, 1;
	add.s32 	%r6728, %r5738, %r6727;
	add.s32 	%r6729, %r6728, %r5737;
	add.s32 	%r6730, %r6729, %r6723;
	add.s32 	%r5747, %r6730, 1859775393;
	shf.l.wrap.b32 	%r5749, %r5739, %r5739, 30;
	shf.l.wrap.b32 	%r6731, %r5747, %r5747, 5;
	// begin inline asm
	lop3.b32 %r5742, %r5743, %r5749, %r5745, 150;
	// end inline asm
	xor.b32  	%r6732, %r6671, %r6711;
	xor.b32  	%r6733, %r6732, %r6633;
	xor.b32  	%r6734, %r6733, %r6621;
	shf.l.wrap.b32 	%r6735, %r6734, %r6734, 1;
	add.s32 	%r6736, %r5742, %r6735;
	add.s32 	%r6737, %r6736, %r5741;
	add.s32 	%r6738, %r6737, %r6731;
	add.s32 	%r5751, %r6738, 1859775393;
	shf.l.wrap.b32 	%r5753, %r5743, %r5743, 30;
	shf.l.wrap.b32 	%r6739, %r5751, %r5751, 5;
	// begin inline asm
	lop3.b32 %r5746, %r5747, %r5753, %r5749, 150;
	// end inline asm
	xor.b32  	%r6740, %r6679, %r6719;
	xor.b32  	%r6741, %r6740, %r6639;
	xor.b32  	%r6742, %r6741, %r6627;
	shf.l.wrap.b32 	%r6743, %r6742, %r6742, 1;
	add.s32 	%r6744, %r5746, %r6743;
	add.s32 	%r6745, %r6744, %r5745;
	add.s32 	%r6746, %r6745, %r6739;
	add.s32 	%r5755, %r6746, 1859775393;
	shf.l.wrap.b32 	%r5757, %r5747, %r5747, 30;
	shf.l.wrap.b32 	%r6747, %r5755, %r5755, 5;
	// begin inline asm
	lop3.b32 %r5750, %r5751, %r5757, %r5753, 232;
	// end inline asm
	xor.b32  	%r6748, %r6687, %r6727;
	xor.b32  	%r6749, %r6748, %r6645;
	xor.b32  	%r6750, %r6749, %r6633;
	shf.l.wrap.b32 	%r6751, %r6750, %r6750, 1;
	add.s32 	%r6752, %r5750, %r6751;
	add.s32 	%r6753, %r6752, %r5749;
	add.s32 	%r6754, %r6753, %r6747;
	add.s32 	%r5759, %r6754, -1894007588;
	shf.l.wrap.b32 	%r5761, %r5751, %r5751, 30;
	shf.l.wrap.b32 	%r6755, %r5759, %r5759, 5;
	// begin inline asm
	lop3.b32 %r5754, %r5755, %r5761, %r5757, 232;
	// end inline asm
	xor.b32  	%r6756, %r6695, %r6735;
	xor.b32  	%r6757, %r6756, %r6651;
	xor.b32  	%r6758, %r6757, %r6639;
	shf.l.wrap.b32 	%r6759, %r6758, %r6758, 1;
	add.s32 	%r6760, %r5754, %r6759;
	add.s32 	%r6761, %r6760, %r5753;
	add.s32 	%r6762, %r6761, %r6755;
	add.s32 	%r5763, %r6762, -1894007588;
	shf.l.wrap.b32 	%r5765, %r5755, %r5755, 30;
	shf.l.wrap.b32 	%r6763, %r5763, %r5763, 5;
	// begin inline asm
	lop3.b32 %r5758, %r5759, %r5765, %r5761, 232;
	// end inline asm
	xor.b32  	%r6764, %r6703, %r6743;
	xor.b32  	%r6765, %r6764, %r6657;
	xor.b32  	%r6766, %r6765, %r6645;
	shf.l.wrap.b32 	%r6767, %r6766, %r6766, 1;
	add.s32 	%r6768, %r5758, %r6767;
	add.s32 	%r6769, %r6768, %r5757;
	add.s32 	%r6770, %r6769, %r6763;
	add.s32 	%r5767, %r6770, -1894007588;
	shf.l.wrap.b32 	%r5769, %r5759, %r5759, 30;
	shf.l.wrap.b32 	%r6771, %r5767, %r5767, 5;
	// begin inline asm
	lop3.b32 %r5762, %r5763, %r5769, %r5765, 232;
	// end inline asm
	xor.b32  	%r6772, %r6711, %r6751;
	xor.b32  	%r6773, %r6772, %r6664;
	xor.b32  	%r6774, %r6773, %r6651;
	shf.l.wrap.b32 	%r6775, %r6774, %r6774, 1;
	add.s32 	%r6776, %r5762, %r6775;
	add.s32 	%r6777, %r6776, %r5761;
	add.s32 	%r6778, %r6777, %r6771;
	add.s32 	%r5771, %r6778, -1894007588;
	shf.l.wrap.b32 	%r5773, %r5763, %r5763, 30;
	shf.l.wrap.b32 	%r6779, %r5771, %r5771, 5;
	// begin inline asm
	lop3.b32 %r5766, %r5767, %r5773, %r5769, 232;
	// end inline asm
	xor.b32  	%r6780, %r6719, %r6759;
	xor.b32  	%r6781, %r6780, %r6671;
	xor.b32  	%r6782, %r6781, %r6657;
	shf.l.wrap.b32 	%r6783, %r6782, %r6782, 1;
	add.s32 	%r6784, %r5766, %r6783;
	add.s32 	%r6785, %r6784, %r5765;
	add.s32 	%r6786, %r6785, %r6779;
	add.s32 	%r5775, %r6786, -1894007588;
	shf.l.wrap.b32 	%r5777, %r5767, %r5767, 30;
	shf.l.wrap.b32 	%r6787, %r5775, %r5775, 5;
	// begin inline asm
	lop3.b32 %r5770, %r5771, %r5777, %r5773, 232;
	// end inline asm
	xor.b32  	%r6788, %r6727, %r6767;
	xor.b32  	%r6789, %r6788, %r6679;
	xor.b32  	%r6790, %r6789, %r6664;
	shf.l.wrap.b32 	%r6791, %r6790, %r6790, 1;
	add.s32 	%r6792, %r5770, %r6791;
	add.s32 	%r6793, %r6792, %r5769;
	add.s32 	%r6794, %r6793, %r6787;
	add.s32 	%r5779, %r6794, -1894007588;
	shf.l.wrap.b32 	%r5781, %r5771, %r5771, 30;
	shf.l.wrap.b32 	%r6795, %r5779, %r5779, 5;
	// begin inline asm
	lop3.b32 %r5774, %r5775, %r5781, %r5777, 232;
	// end inline asm
	xor.b32  	%r6796, %r6735, %r6775;
	xor.b32  	%r6797, %r6796, %r6687;
	xor.b32  	%r6798, %r6797, %r6671;
	shf.l.wrap.b32 	%r6799, %r6798, %r6798, 1;
	add.s32 	%r6800, %r5774, %r6799;
	add.s32 	%r6801, %r6800, %r5773;
	add.s32 	%r6802, %r6801, %r6795;
	add.s32 	%r5783, %r6802, -1894007588;
	shf.l.wrap.b32 	%r5785, %r5775, %r5775, 30;
	shf.l.wrap.b32 	%r6803, %r5783, %r5783, 5;
	// begin inline asm
	lop3.b32 %r5778, %r5779, %r5785, %r5781, 232;
	// end inline asm
	xor.b32  	%r6804, %r6743, %r6783;
	xor.b32  	%r6805, %r6804, %r6695;
	xor.b32  	%r6806, %r6805, %r6679;
	shf.l.wrap.b32 	%r6807, %r6806, %r6806, 1;
	add.s32 	%r6808, %r5778, %r6807;
	add.s32 	%r6809, %r6808, %r5777;
	add.s32 	%r6810, %r6809, %r6803;
	add.s32 	%r5787, %r6810, -1894007588;
	shf.l.wrap.b32 	%r5789, %r5779, %r5779, 30;
	shf.l.wrap.b32 	%r6811, %r5787, %r5787, 5;
	// begin inline asm
	lop3.b32 %r5782, %r5783, %r5789, %r5785, 232;
	// end inline asm
	xor.b32  	%r6812, %r6751, %r6791;
	xor.b32  	%r6813, %r6812, %r6703;
	xor.b32  	%r6814, %r6813, %r6687;
	shf.l.wrap.b32 	%r6815, %r6814, %r6814, 1;
	add.s32 	%r6816, %r5782, %r6815;
	add.s32 	%r6817, %r6816, %r5781;
	add.s32 	%r6818, %r6817, %r6811;
	add.s32 	%r5791, %r6818, -1894007588;
	shf.l.wrap.b32 	%r5793, %r5783, %r5783, 30;
	shf.l.wrap.b32 	%r6819, %r5791, %r5791, 5;
	// begin inline asm
	lop3.b32 %r5786, %r5787, %r5793, %r5789, 232;
	// end inline asm
	xor.b32  	%r6820, %r6759, %r6799;
	xor.b32  	%r6821, %r6820, %r6711;
	xor.b32  	%r6822, %r6821, %r6695;
	shf.l.wrap.b32 	%r6823, %r6822, %r6822, 1;
	add.s32 	%r6824, %r5786, %r6823;
	add.s32 	%r6825, %r6824, %r5785;
	add.s32 	%r6826, %r6825, %r6819;
	add.s32 	%r5795, %r6826, -1894007588;
	shf.l.wrap.b32 	%r5797, %r5787, %r5787, 30;
	shf.l.wrap.b32 	%r6827, %r5795, %r5795, 5;
	// begin inline asm
	lop3.b32 %r5790, %r5791, %r5797, %r5793, 232;
	// end inline asm
	xor.b32  	%r6828, %r6767, %r6807;
	xor.b32  	%r6829, %r6828, %r6719;
	xor.b32  	%r6830, %r6829, %r6703;
	shf.l.wrap.b32 	%r6831, %r6830, %r6830, 1;
	add.s32 	%r6832, %r5790, %r6831;
	add.s32 	%r6833, %r6832, %r5789;
	add.s32 	%r6834, %r6833, %r6827;
	add.s32 	%r5799, %r6834, -1894007588;
	shf.l.wrap.b32 	%r5801, %r5791, %r5791, 30;
	shf.l.wrap.b32 	%r6835, %r5799, %r5799, 5;
	// begin inline asm
	lop3.b32 %r5794, %r5795, %r5801, %r5797, 232;
	// end inline asm
	xor.b32  	%r6836, %r6775, %r6815;
	xor.b32  	%r6837, %r6836, %r6727;
	xor.b32  	%r6838, %r6837, %r6711;
	shf.l.wrap.b32 	%r6839, %r6838, %r6838, 1;
	add.s32 	%r6840, %r5794, %r6839;
	add.s32 	%r6841, %r6840, %r5793;
	add.s32 	%r6842, %r6841, %r6835;
	add.s32 	%r5803, %r6842, -1894007588;
	shf.l.wrap.b32 	%r5805, %r5795, %r5795, 30;
	shf.l.wrap.b32 	%r6843, %r5803, %r5803, 5;
	// begin inline asm
	lop3.b32 %r5798, %r5799, %r5805, %r5801, 232;
	// end inline asm
	xor.b32  	%r6844, %r6783, %r6823;
	xor.b32  	%r6845, %r6844, %r6735;
	xor.b32  	%r6846, %r6845, %r6719;
	shf.l.wrap.b32 	%r6847, %r6846, %r6846, 1;
	add.s32 	%r6848, %r5798, %r6847;
	add.s32 	%r6849, %r6848, %r5797;
	add.s32 	%r6850, %r6849, %r6843;
	add.s32 	%r5807, %r6850, -1894007588;
	shf.l.wrap.b32 	%r5809, %r5799, %r5799, 30;
	shf.l.wrap.b32 	%r6851, %r5807, %r5807, 5;
	// begin inline asm
	lop3.b32 %r5802, %r5803, %r5809, %r5805, 232;
	// end inline asm
	xor.b32  	%r6852, %r6791, %r6831;
	xor.b32  	%r6853, %r6852, %r6743;
	xor.b32  	%r6854, %r6853, %r6727;
	shf.l.wrap.b32 	%r6855, %r6854, %r6854, 1;
	add.s32 	%r6856, %r5802, %r6855;
	add.s32 	%r6857, %r6856, %r5801;
	add.s32 	%r6858, %r6857, %r6851;
	add.s32 	%r5811, %r6858, -1894007588;
	shf.l.wrap.b32 	%r5813, %r5803, %r5803, 30;
	shf.l.wrap.b32 	%r6859, %r5811, %r5811, 5;
	// begin inline asm
	lop3.b32 %r5806, %r5807, %r5813, %r5809, 232;
	// end inline asm
	xor.b32  	%r6860, %r6799, %r6839;
	xor.b32  	%r6861, %r6860, %r6751;
	xor.b32  	%r6862, %r6861, %r6735;
	shf.l.wrap.b32 	%r6863, %r6862, %r6862, 1;
	add.s32 	%r6864, %r5806, %r6863;
	add.s32 	%r6865, %r6864, %r5805;
	add.s32 	%r6866, %r6865, %r6859;
	add.s32 	%r5815, %r6866, -1894007588;
	shf.l.wrap.b32 	%r5817, %r5807, %r5807, 30;
	shf.l.wrap.b32 	%r6867, %r5815, %r5815, 5;
	// begin inline asm
	lop3.b32 %r5810, %r5811, %r5817, %r5813, 232;
	// end inline asm
	xor.b32  	%r6868, %r6807, %r6847;
	xor.b32  	%r6869, %r6868, %r6759;
	xor.b32  	%r6870, %r6869, %r6743;
	shf.l.wrap.b32 	%r6871, %r6870, %r6870, 1;
	add.s32 	%r6872, %r5810, %r6871;
	add.s32 	%r6873, %r6872, %r5809;
	add.s32 	%r6874, %r6873, %r6867;
	add.s32 	%r5819, %r6874, -1894007588;
	shf.l.wrap.b32 	%r5821, %r5811, %r5811, 30;
	shf.l.wrap.b32 	%r6875, %r5819, %r5819, 5;
	// begin inline asm
	lop3.b32 %r5814, %r5815, %r5821, %r5817, 232;
	// end inline asm
	xor.b32  	%r6876, %r6815, %r6855;
	xor.b32  	%r6877, %r6876, %r6767;
	xor.b32  	%r6878, %r6877, %r6751;
	shf.l.wrap.b32 	%r6879, %r6878, %r6878, 1;
	add.s32 	%r6880, %r5814, %r6879;
	add.s32 	%r6881, %r6880, %r5813;
	add.s32 	%r6882, %r6881, %r6875;
	add.s32 	%r5823, %r6882, -1894007588;
	shf.l.wrap.b32 	%r5825, %r5815, %r5815, 30;
	shf.l.wrap.b32 	%r6883, %r5823, %r5823, 5;
	// begin inline asm
	lop3.b32 %r5818, %r5819, %r5825, %r5821, 232;
	// end inline asm
	xor.b32  	%r6884, %r6823, %r6863;
	xor.b32  	%r6885, %r6884, %r6775;
	xor.b32  	%r6886, %r6885, %r6759;
	shf.l.wrap.b32 	%r6887, %r6886, %r6886, 1;
	add.s32 	%r6888, %r5818, %r6887;
	add.s32 	%r6889, %r6888, %r5817;
	add.s32 	%r6890, %r6889, %r6883;
	add.s32 	%r5827, %r6890, -1894007588;
	shf.l.wrap.b32 	%r5829, %r5819, %r5819, 30;
	shf.l.wrap.b32 	%r6891, %r5827, %r5827, 5;
	// begin inline asm
	lop3.b32 %r5822, %r5823, %r5829, %r5825, 232;
	// end inline asm
	xor.b32  	%r6892, %r6831, %r6871;
	xor.b32  	%r6893, %r6892, %r6783;
	xor.b32  	%r6894, %r6893, %r6767;
	shf.l.wrap.b32 	%r6895, %r6894, %r6894, 1;
	add.s32 	%r6896, %r5822, %r6895;
	add.s32 	%r6897, %r6896, %r5821;
	add.s32 	%r6898, %r6897, %r6891;
	add.s32 	%r5831, %r6898, -1894007588;
	shf.l.wrap.b32 	%r5833, %r5823, %r5823, 30;
	shf.l.wrap.b32 	%r6899, %r5831, %r5831, 5;
	// begin inline asm
	lop3.b32 %r5826, %r5827, %r5833, %r5829, 232;
	// end inline asm
	xor.b32  	%r6900, %r6839, %r6879;
	xor.b32  	%r6901, %r6900, %r6791;
	xor.b32  	%r6902, %r6901, %r6775;
	shf.l.wrap.b32 	%r6903, %r6902, %r6902, 1;
	add.s32 	%r6904, %r5826, %r6903;
	add.s32 	%r6905, %r6904, %r5825;
	add.s32 	%r6906, %r6905, %r6899;
	add.s32 	%r5835, %r6906, -1894007588;
	shf.l.wrap.b32 	%r5837, %r5827, %r5827, 30;
	shf.l.wrap.b32 	%r6907, %r5835, %r5835, 5;
	// begin inline asm
	lop3.b32 %r5830, %r5831, %r5837, %r5833, 150;
	// end inline asm
	xor.b32  	%r6908, %r6847, %r6887;
	xor.b32  	%r6909, %r6908, %r6799;
	xor.b32  	%r6910, %r6909, %r6783;
	shf.l.wrap.b32 	%r6911, %r6910, %r6910, 1;
	add.s32 	%r6912, %r5830, %r6911;
	add.s32 	%r6913, %r6912, %r5829;
	add.s32 	%r6914, %r6913, %r6907;
	add.s32 	%r5839, %r6914, -899497514;
	shf.l.wrap.b32 	%r5841, %r5831, %r5831, 30;
	shf.l.wrap.b32 	%r6915, %r5839, %r5839, 5;
	// begin inline asm
	lop3.b32 %r5834, %r5835, %r5841, %r5837, 150;
	// end inline asm
	xor.b32  	%r6916, %r6855, %r6895;
	xor.b32  	%r6917, %r6916, %r6807;
	xor.b32  	%r6918, %r6917, %r6791;
	shf.l.wrap.b32 	%r6919, %r6918, %r6918, 1;
	add.s32 	%r6920, %r5834, %r6919;
	add.s32 	%r6921, %r6920, %r5833;
	add.s32 	%r6922, %r6921, %r6915;
	add.s32 	%r5843, %r6922, -899497514;
	shf.l.wrap.b32 	%r5845, %r5835, %r5835, 30;
	shf.l.wrap.b32 	%r6923, %r5843, %r5843, 5;
	// begin inline asm
	lop3.b32 %r5838, %r5839, %r5845, %r5841, 150;
	// end inline asm
	xor.b32  	%r6924, %r6863, %r6903;
	xor.b32  	%r6925, %r6924, %r6815;
	xor.b32  	%r6926, %r6925, %r6799;
	shf.l.wrap.b32 	%r6927, %r6926, %r6926, 1;
	add.s32 	%r6928, %r5838, %r6927;
	add.s32 	%r6929, %r6928, %r5837;
	add.s32 	%r6930, %r6929, %r6923;
	add.s32 	%r5847, %r6930, -899497514;
	shf.l.wrap.b32 	%r5849, %r5839, %r5839, 30;
	shf.l.wrap.b32 	%r6931, %r5847, %r5847, 5;
	// begin inline asm
	lop3.b32 %r5842, %r5843, %r5849, %r5845, 150;
	// end inline asm
	xor.b32  	%r6932, %r6871, %r6911;
	xor.b32  	%r6933, %r6932, %r6823;
	xor.b32  	%r6934, %r6933, %r6807;
	shf.l.wrap.b32 	%r6935, %r6934, %r6934, 1;
	add.s32 	%r6936, %r5842, %r6935;
	add.s32 	%r6937, %r6936, %r5841;
	add.s32 	%r6938, %r6937, %r6931;
	add.s32 	%r5851, %r6938, -899497514;
	shf.l.wrap.b32 	%r5853, %r5843, %r5843, 30;
	shf.l.wrap.b32 	%r6939, %r5851, %r5851, 5;
	// begin inline asm
	lop3.b32 %r5846, %r5847, %r5853, %r5849, 150;
	// end inline asm
	xor.b32  	%r6940, %r6879, %r6919;
	xor.b32  	%r6941, %r6940, %r6831;
	xor.b32  	%r6942, %r6941, %r6815;
	shf.l.wrap.b32 	%r6943, %r6942, %r6942, 1;
	add.s32 	%r6944, %r5846, %r6943;
	add.s32 	%r6945, %r6944, %r5845;
	add.s32 	%r6946, %r6945, %r6939;
	add.s32 	%r5855, %r6946, -899497514;
	shf.l.wrap.b32 	%r5857, %r5847, %r5847, 30;
	shf.l.wrap.b32 	%r6947, %r5855, %r5855, 5;
	// begin inline asm
	lop3.b32 %r5850, %r5851, %r5857, %r5853, 150;
	// end inline asm
	xor.b32  	%r6948, %r6887, %r6927;
	xor.b32  	%r6949, %r6948, %r6839;
	xor.b32  	%r6950, %r6949, %r6823;
	shf.l.wrap.b32 	%r6951, %r6950, %r6950, 1;
	add.s32 	%r6952, %r5850, %r6951;
	add.s32 	%r6953, %r6952, %r5849;
	add.s32 	%r6954, %r6953, %r6947;
	add.s32 	%r5859, %r6954, -899497514;
	shf.l.wrap.b32 	%r5861, %r5851, %r5851, 30;
	shf.l.wrap.b32 	%r6955, %r5859, %r5859, 5;
	// begin inline asm
	lop3.b32 %r5854, %r5855, %r5861, %r5857, 150;
	// end inline asm
	xor.b32  	%r6956, %r6895, %r6935;
	xor.b32  	%r6957, %r6956, %r6847;
	xor.b32  	%r6958, %r6957, %r6831;
	shf.l.wrap.b32 	%r6959, %r6958, %r6958, 1;
	add.s32 	%r6960, %r5854, %r5853;
	add.s32 	%r6961, %r6960, %r6959;
	add.s32 	%r6962, %r6961, %r6955;
	add.s32 	%r5863, %r6962, -899497514;
	shf.l.wrap.b32 	%r5865, %r5855, %r5855, 30;
	shf.l.wrap.b32 	%r6963, %r5863, %r5863, 5;
	// begin inline asm
	lop3.b32 %r5858, %r5859, %r5865, %r5861, 150;
	// end inline asm
	xor.b32  	%r6964, %r6903, %r6943;
	xor.b32  	%r6965, %r6964, %r6855;
	xor.b32  	%r6966, %r6965, %r6839;
	shf.l.wrap.b32 	%r6967, %r6966, %r6966, 1;
	add.s32 	%r6968, %r5858, %r5857;
	add.s32 	%r6969, %r6968, %r6967;
	add.s32 	%r6970, %r6969, %r6963;
	add.s32 	%r5867, %r6970, -899497514;
	shf.l.wrap.b32 	%r5869, %r5859, %r5859, 30;
	shf.l.wrap.b32 	%r6971, %r5867, %r5867, 5;
	// begin inline asm
	lop3.b32 %r5862, %r5863, %r5869, %r5865, 150;
	// end inline asm
	xor.b32  	%r6972, %r6911, %r6951;
	xor.b32  	%r6973, %r6972, %r6863;
	xor.b32  	%r6974, %r6973, %r6847;
	shf.l.wrap.b32 	%r6975, %r6974, %r6974, 1;
	add.s32 	%r6976, %r5862, %r5861;
	add.s32 	%r6977, %r6976, %r6975;
	add.s32 	%r6978, %r6977, %r6971;
	add.s32 	%r5871, %r6978, -899497514;
	shf.l.wrap.b32 	%r5873, %r5863, %r5863, 30;
	shf.l.wrap.b32 	%r6979, %r5871, %r5871, 5;
	// begin inline asm
	lop3.b32 %r5866, %r5867, %r5873, %r5869, 150;
	// end inline asm
	xor.b32  	%r6980, %r6919, %r6959;
	xor.b32  	%r6981, %r6980, %r6871;
	xor.b32  	%r6982, %r6981, %r6855;
	shf.l.wrap.b32 	%r6983, %r6982, %r6982, 1;
	add.s32 	%r6984, %r5866, %r5865;
	add.s32 	%r6985, %r6984, %r6983;
	add.s32 	%r6986, %r6985, %r6979;
	add.s32 	%r5875, %r6986, -899497514;
	shf.l.wrap.b32 	%r5877, %r5867, %r5867, 30;
	shf.l.wrap.b32 	%r6987, %r5875, %r5875, 5;
	// begin inline asm
	lop3.b32 %r5870, %r5871, %r5877, %r5873, 150;
	// end inline asm
	xor.b32  	%r6988, %r6927, %r6967;
	xor.b32  	%r6989, %r6988, %r6879;
	xor.b32  	%r6990, %r6989, %r6863;
	shf.l.wrap.b32 	%r6991, %r6990, %r6990, 1;
	add.s32 	%r6992, %r5870, %r5869;
	add.s32 	%r6993, %r6992, %r6991;
	add.s32 	%r6994, %r6993, %r6987;
	add.s32 	%r5879, %r6994, -899497514;
	shf.l.wrap.b32 	%r5881, %r5871, %r5871, 30;
	shf.l.wrap.b32 	%r6995, %r5879, %r5879, 5;
	// begin inline asm
	lop3.b32 %r5874, %r5875, %r5881, %r5877, 150;
	// end inline asm
	xor.b32  	%r6996, %r6935, %r6975;
	xor.b32  	%r6997, %r6996, %r6887;
	xor.b32  	%r6998, %r6997, %r6871;
	shf.l.wrap.b32 	%r6999, %r6998, %r6998, 1;
	add.s32 	%r7000, %r5874, %r5873;
	add.s32 	%r7001, %r7000, %r6999;
	add.s32 	%r7002, %r7001, %r6995;
	add.s32 	%r5883, %r7002, -899497514;
	shf.l.wrap.b32 	%r5885, %r5875, %r5875, 30;
	shf.l.wrap.b32 	%r7003, %r5883, %r5883, 5;
	// begin inline asm
	lop3.b32 %r5878, %r5879, %r5885, %r5881, 150;
	// end inline asm
	xor.b32  	%r7004, %r6943, %r6983;
	xor.b32  	%r7005, %r7004, %r6895;
	xor.b32  	%r7006, %r7005, %r6879;
	shf.l.wrap.b32 	%r7007, %r7006, %r7006, 1;
	add.s32 	%r7008, %r5877, %r5878;
	add.s32 	%r7009, %r7008, %r7007;
	add.s32 	%r7010, %r7009, %r7003;
	add.s32 	%r5887, %r7010, -899497514;
	shf.l.wrap.b32 	%r5889, %r5879, %r5879, 30;
	shf.l.wrap.b32 	%r7011, %r5887, %r5887, 5;
	// begin inline asm
	lop3.b32 %r5882, %r5883, %r5889, %r5885, 150;
	// end inline asm
	xor.b32  	%r7012, %r6951, %r6991;
	xor.b32  	%r7013, %r7012, %r6903;
	xor.b32  	%r7014, %r7013, %r6887;
	shf.l.wrap.b32 	%r7015, %r7014, %r7014, 1;
	add.s32 	%r7016, %r5881, %r5882;
	add.s32 	%r7017, %r7016, %r7015;
	add.s32 	%r7018, %r7017, %r7011;
	add.s32 	%r5891, %r7018, -899497514;
	shf.l.wrap.b32 	%r5893, %r5883, %r5883, 30;
	shf.l.wrap.b32 	%r7019, %r5891, %r5891, 5;
	// begin inline asm
	lop3.b32 %r5886, %r5887, %r5893, %r5889, 150;
	// end inline asm
	xor.b32  	%r7020, %r6959, %r6999;
	xor.b32  	%r7021, %r7020, %r6911;
	xor.b32  	%r7022, %r7021, %r6895;
	shf.l.wrap.b32 	%r7023, %r7022, %r7022, 1;
	add.s32 	%r7024, %r5885, %r5886;
	add.s32 	%r7025, %r7024, %r7023;
	add.s32 	%r7026, %r7025, %r7019;
	add.s32 	%r5895, %r7026, -899497514;
	shf.l.wrap.b32 	%r5897, %r5887, %r5887, 30;
	shf.l.wrap.b32 	%r7027, %r5895, %r5895, 5;
	// begin inline asm
	lop3.b32 %r5890, %r5891, %r5897, %r5893, 150;
	// end inline asm
	xor.b32  	%r7028, %r6967, %r7007;
	xor.b32  	%r7029, %r7028, %r6919;
	xor.b32  	%r7030, %r7029, %r6903;
	shf.l.wrap.b32 	%r7031, %r7030, %r7030, 1;
	add.s32 	%r7032, %r5889, %r5890;
	add.s32 	%r7033, %r7032, %r7031;
	add.s32 	%r7034, %r7033, %r7027;
	add.s32 	%r5899, %r7034, -899497514;
	shf.l.wrap.b32 	%r5901, %r5891, %r5891, 30;
	shf.l.wrap.b32 	%r7035, %r5899, %r5899, 5;
	// begin inline asm
	lop3.b32 %r5894, %r5895, %r5901, %r5897, 150;
	// end inline asm
	xor.b32  	%r7036, %r6975, %r7015;
	xor.b32  	%r7037, %r7036, %r6927;
	xor.b32  	%r7038, %r7037, %r6911;
	shf.l.wrap.b32 	%r7039, %r7038, %r7038, 1;
	add.s32 	%r7040, %r5893, %r5894;
	add.s32 	%r7041, %r7040, %r7039;
	add.s32 	%r7042, %r7041, %r7035;
	add.s32 	%r5903, %r7042, -899497514;
	shf.l.wrap.b32 	%r5905, %r5895, %r5895, 30;
	shf.l.wrap.b32 	%r7043, %r5903, %r5903, 5;
	// begin inline asm
	lop3.b32 %r5898, %r5899, %r5905, %r5901, 150;
	// end inline asm
	xor.b32  	%r7044, %r6983, %r7023;
	xor.b32  	%r7045, %r7044, %r6935;
	xor.b32  	%r7046, %r7045, %r6919;
	shf.l.wrap.b32 	%r7047, %r7046, %r7046, 1;
	add.s32 	%r7048, %r5897, %r5898;
	add.s32 	%r7049, %r7048, %r7047;
	add.s32 	%r7050, %r7049, %r7043;
	add.s32 	%r5907, %r7050, -899497514;
	shf.l.wrap.b32 	%r5909, %r5899, %r5899, 30;
	shf.l.wrap.b32 	%r7051, %r5907, %r5907, 5;
	// begin inline asm
	lop3.b32 %r5902, %r5903, %r5909, %r5905, 150;
	// end inline asm
	xor.b32  	%r7052, %r6991, %r7031;
	xor.b32  	%r7053, %r7052, %r6943;
	xor.b32  	%r7054, %r7053, %r6927;
	shf.l.wrap.b32 	%r7055, %r7054, %r7054, 1;
	add.s32 	%r7056, %r5901, %r5902;
	add.s32 	%r7057, %r7056, %r7055;
	add.s32 	%r7058, %r7057, %r7051;
	add.s32 	%r7059, %r7058, -899497514;
	shf.l.wrap.b32 	%r5908, %r5903, %r5903, 30;
	shf.l.wrap.b32 	%r7060, %r7059, %r7059, 5;
	// begin inline asm
	lop3.b32 %r5906, %r5907, %r5908, %r5909, 150;
	// end inline asm
	xor.b32  	%r7061, %r6999, %r7039;
	xor.b32  	%r7062, %r7061, %r6951;
	xor.b32  	%r7063, %r7062, %r6935;
	shf.l.wrap.b32 	%r7064, %r7063, %r7063, 1;
	shf.l.wrap.b32 	%r7065, %r5907, %r5907, 30;
	add.s32 	%r7066, %r5595, %r5905;
	add.s32 	%r7067, %r7066, %r5906;
	add.s32 	%r7068, %r7067, %r7064;
	add.s32 	%r7069, %r7068, %r7060;
	add.s32 	%r7070, %r7069, -899497514;
	add.s32 	%r7071, %r7059, %r5591;
	add.s32 	%r7072, %r7065, %r5592;
	add.s32 	%r7073, %r5908, %r5593;
	add.s32 	%r7074, %r5909, %r6528;
	st.global.u32 	[%rd2+-24], %r7070;
	st.global.u32 	[%rd2+-20], %r7071;
	st.global.u32 	[%rd2+-16], %r7072;
	st.global.u32 	[%rd2+-12], %r7073;
	st.global.u32 	[%rd2+-8], %r7074;
	st.global.u32 	[%rd2+-84], %r7070;
	st.global.u32 	[%rd2+-80], %r7071;
	st.global.u32 	[%rd2+-76], %r7072;
	st.global.u32 	[%rd2+-72], %r7073;
	st.global.u32 	[%rd2+-68], %r7074;
	ld.global.u32 	%r7075, [%rd13+8];
	add.s32 	%r7076, %r7075, -1;
	st.global.u32 	[%rd2+-4], %r7076;

$L__BB5_34:
	ret;

}
	// .globl	enpass6_init
.entry enpass6_init(
	.param .u64 .ptr .global .align 4 enpass6_init_param_0,
	.param .u64 .ptr .const .align 8 enpass6_init_param_1,
	.param .u64 .ptr .global .align 8 enpass6_init_param_2
)
{
	.local .align 16 .b8 	__local_depot6[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b32 	%r<6877>;
	.reg .b64 	%rd<9874>;


	mov.u64 	%SPL, __local_depot6;
	ld.param.u64 	%rd131, [enpass6_init_param_0];
	ld.param.u64 	%rd129, [enpass6_init_param_1];
	ld.param.u64 	%rd130, [enpass6_init_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mov.b32 	%r10, %envreg3;
	add.s32 	%r11, %r9, %r10;
	mad.lo.s32 	%r12, %r8, %r7, %r11;
	mul.wide.s32 	%rd133, %r12, 16;
	ld.const.v2.u32 	{%r13, %r14}, [%rd129+112];
	add.s32 	%r16, %r14, -1;
	mul.wide.u32 	%rd134, %r12, 264;
	add.s64 	%rd135, %rd130, %rd134;
	st.global.u32 	[%rd135+256], %r16;
	shl.b64 	%rd136, %rd133, 2;
	and.b64  	%rd137, %rd136, 17179869120;
	add.s64 	%rd138, %rd131, %rd137;
	ld.global.u32 	%rd139, [%rd138];
	ld.global.u32 	%rd140, [%rd138+4];
	bfi.b64 	%rd141, %rd139, %rd140, 32, 32;
	xor.b64  	%rd142, %rd141, 3906369333256140342;
	mov.u64 	%rd143, 3906369333256140342;
	ld.global.u32 	%rd144, [%rd138+8];
	ld.global.u32 	%rd145, [%rd138+12];
	bfi.b64 	%rd146, %rd144, %rd145, 32, 32;
	xor.b64  	%rd147, %rd146, 3906369333256140342;
	ld.global.u32 	%rd148, [%rd138+16];
	ld.global.u32 	%rd149, [%rd138+20];
	bfi.b64 	%rd150, %rd148, %rd149, 32, 32;
	xor.b64  	%rd151, %rd150, 3906369333256140342;
	ld.global.u32 	%rd152, [%rd138+24];
	ld.global.u32 	%rd153, [%rd138+28];
	bfi.b64 	%rd154, %rd152, %rd153, 32, 32;
	xor.b64  	%rd155, %rd154, 3906369333256140342;
	ld.global.u32 	%rd156, [%rd138+32];
	ld.global.u32 	%rd157, [%rd138+36];
	bfi.b64 	%rd158, %rd156, %rd157, 32, 32;
	xor.b64  	%rd159, %rd158, 3906369333256140342;
	ld.global.u32 	%rd160, [%rd138+40];
	ld.global.u32 	%rd161, [%rd138+44];
	bfi.b64 	%rd162, %rd160, %rd161, 32, 32;
	xor.b64  	%rd163, %rd162, 3906369333256140342;
	ld.global.u32 	%rd164, [%rd138+48];
	ld.global.u32 	%rd165, [%rd138+52];
	bfi.b64 	%rd166, %rd164, %rd165, 32, 32;
	xor.b64  	%rd167, %rd166, 3906369333256140342;
	ld.global.u32 	%rd168, [%rd138+56];
	ld.global.u32 	%rd169, [%rd138+60];
	bfi.b64 	%rd170, %rd168, %rd169, 32, 32;
	xor.b64  	%rd171, %rd170, 3906369333256140342;
	mov.u64 	%rd172, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18}, %rd172;
	}
	shf.r.wrap.b32 	%r19, %r18, %r17, 18;
	shf.r.wrap.b32 	%r20, %r17, %r18, 18;
	mov.b64 	%rd173, {%r20, %r19};
	shf.r.wrap.b32 	%r21, %r18, %r17, 14;
	shf.r.wrap.b32 	%r22, %r17, %r18, 14;
	mov.b64 	%rd174, {%r22, %r21};
	xor.b64  	%rd175, %rd174, %rd173;
	shf.l.wrap.b32 	%r23, %r17, %r18, 23;
	shf.l.wrap.b32 	%r24, %r18, %r17, 23;
	mov.b64 	%rd176, {%r24, %r23};
	xor.b64  	%rd177, %rd175, %rd176;
	add.s64 	%rd178, %rd177, -7031530027109396581;
	add.s64 	%rd179, %rd178, %rd142;
	add.s64 	%rd180, %rd179, -4263291710961585108;
	mov.u64 	%rd181, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26,%dummy}, %rd181;
	}
	shf.l.wrap.b32 	%r27, %r26, %r25, 30;
	shf.l.wrap.b32 	%r28, %r25, %r26, 30;
	mov.b64 	%rd182, {%r28, %r27};
	shf.r.wrap.b32 	%r29, %r25, %r26, 28;
	shf.r.wrap.b32 	%r30, %r26, %r25, 28;
	mov.b64 	%rd183, {%r30, %r29};
	xor.b64  	%rd184, %rd183, %rd182;
	shf.l.wrap.b32 	%r31, %r26, %r25, 25;
	shf.l.wrap.b32 	%r32, %r25, %r26, 25;
	mov.b64 	%rd185, {%r32, %r31};
	xor.b64  	%rd186, %rd184, %rd185;
	add.s64 	%rd187, %rd186, 6482280703085258342;
	add.s64 	%rd188, %rd187, %rd179;
	and.b64  	%rd189, %rd180, -3887949035690463538;
	xor.b64  	%rd190, %rd189, -7276294671716946913;
	add.s64 	%rd191, %rd147, %rd190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r33,%dummy}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r34}, %rd180;
	}
	shf.r.wrap.b32 	%r35, %r34, %r33, 14;
	shf.r.wrap.b32 	%r36, %r33, %r34, 14;
	mov.b64 	%rd192, {%r36, %r35};
	shf.r.wrap.b32 	%r37, %r34, %r33, 18;
	shf.r.wrap.b32 	%r38, %r33, %r34, 18;
	mov.b64 	%rd193, {%r38, %r37};
	xor.b64  	%rd194, %rd192, %rd193;
	shf.l.wrap.b32 	%r39, %r33, %r34, 23;
	shf.l.wrap.b32 	%r40, %r34, %r33, 23;
	mov.b64 	%rd195, {%r40, %r39};
	xor.b64  	%rd196, %rd194, %rd195;
	add.s64 	%rd197, %rd191, %rd196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r41,%dummy}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r42}, %rd188;
	}
	shf.r.wrap.b32 	%r43, %r42, %r41, 28;
	shf.r.wrap.b32 	%r44, %r41, %r42, 28;
	mov.b64 	%rd198, {%r44, %r43};
	shf.l.wrap.b32 	%r45, %r41, %r42, 30;
	shf.l.wrap.b32 	%r46, %r42, %r41, 30;
	mov.b64 	%rd199, {%r46, %r45};
	xor.b64  	%rd200, %rd198, %rd199;
	shf.l.wrap.b32 	%r47, %r41, %r42, 25;
	shf.l.wrap.b32 	%r48, %r42, %r41, 25;
	mov.b64 	%rd201, {%r48, %r47};
	xor.b64  	%rd202, %rd200, %rd201;
	and.b64  	%rd203, %rd188, -3355664534840381901;
	or.b64  	%rd204, %rd203, 3026882967131160840;
	add.s64 	%rd205, %rd204, %rd202;
	add.s64 	%rd206, %rd205, %rd197;
	add.s64 	%rd207, %rd197, -3663095898801038493;
	add.s64 	%rd208, %rd206, -8017781463737883848;
	xor.b64  	%rd209, %rd180, 5840696475078001361;
	and.b64  	%rd210, %rd207, %rd209;
	xor.b64  	%rd211, %rd210, 5840696475078001361;
	add.s64 	%rd212, %rd151, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r49,%dummy}, %rd207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r50}, %rd207;
	}
	shf.r.wrap.b32 	%r51, %r50, %r49, 14;
	shf.r.wrap.b32 	%r52, %r49, %r50, 14;
	mov.b64 	%rd213, {%r52, %r51};
	shf.r.wrap.b32 	%r53, %r50, %r49, 18;
	shf.r.wrap.b32 	%r54, %r49, %r50, 18;
	mov.b64 	%rd214, {%r54, %r53};
	xor.b64  	%rd215, %rd213, %rd214;
	shf.l.wrap.b32 	%r55, %r49, %r50, 23;
	shf.l.wrap.b32 	%r56, %r50, %r49, 23;
	mov.b64 	%rd216, {%r56, %r55};
	xor.b64  	%rd217, %rd215, %rd216;
	add.s64 	%rd218, %rd212, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd208;
	}
	shf.r.wrap.b32 	%r59, %r58, %r57, 28;
	shf.r.wrap.b32 	%r60, %r57, %r58, 28;
	mov.b64 	%rd219, {%r60, %r59};
	shf.l.wrap.b32 	%r61, %r57, %r58, 30;
	shf.l.wrap.b32 	%r62, %r58, %r57, 30;
	mov.b64 	%rd220, {%r62, %r61};
	xor.b64  	%rd221, %rd219, %rd220;
	shf.l.wrap.b32 	%r63, %r57, %r58, 25;
	shf.l.wrap.b32 	%r64, %r58, %r57, 25;
	mov.b64 	%rd222, {%r64, %r63};
	xor.b64  	%rd223, %rd221, %rd222;
	and.b64  	%rd224, %rd208, %rd188;
	or.b64  	%rd225, %rd208, %rd188;
	and.b64  	%rd226, %rd225, 7640891576956012808;
	or.b64  	%rd227, %rd226, %rd224;
	add.s64 	%rd228, %rd227, %rd223;
	add.s64 	%rd229, %rd228, %rd218;
	add.s64 	%rd230, %rd218, 877659737583668873;
	add.s64 	%rd231, %rd229, 5820449915117741902;
	xor.b64  	%rd232, %rd207, %rd180;
	and.b64  	%rd233, %rd230, %rd232;
	xor.b64  	%rd234, %rd233, %rd180;
	add.s64 	%rd235, %rd155, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd230;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 14;
	shf.r.wrap.b32 	%r68, %r65, %r66, 14;
	mov.b64 	%rd236, {%r68, %r67};
	shf.r.wrap.b32 	%r69, %r66, %r65, 18;
	shf.r.wrap.b32 	%r70, %r65, %r66, 18;
	mov.b64 	%rd237, {%r70, %r69};
	xor.b64  	%rd238, %rd236, %rd237;
	shf.l.wrap.b32 	%r71, %r65, %r66, 23;
	shf.l.wrap.b32 	%r72, %r66, %r65, 23;
	mov.b64 	%rd239, {%r72, %r71};
	xor.b64  	%rd240, %rd238, %rd239;
	add.s64 	%rd241, %rd235, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r73,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r74}, %rd231;
	}
	shf.r.wrap.b32 	%r75, %r74, %r73, 28;
	shf.r.wrap.b32 	%r76, %r73, %r74, 28;
	mov.b64 	%rd242, {%r76, %r75};
	shf.l.wrap.b32 	%r77, %r73, %r74, 30;
	shf.l.wrap.b32 	%r78, %r74, %r73, 30;
	mov.b64 	%rd243, {%r78, %r77};
	xor.b64  	%rd244, %rd242, %rd243;
	shf.l.wrap.b32 	%r79, %r73, %r74, 25;
	shf.l.wrap.b32 	%r80, %r74, %r73, 25;
	mov.b64 	%rd245, {%r80, %r79};
	xor.b64  	%rd246, %rd244, %rd245;
	and.b64  	%rd247, %rd231, %rd208;
	or.b64  	%rd248, %rd231, %rd208;
	and.b64  	%rd249, %rd248, %rd188;
	or.b64  	%rd250, %rd249, %rd247;
	add.s64 	%rd251, %rd250, %rd246;
	add.s64 	%rd252, %rd251, %rd241;
	add.s64 	%rd253, %rd241, -6571292209873868907;
	add.s64 	%rd254, %rd252, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd253;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 14;
	shf.r.wrap.b32 	%r84, %r81, %r82, 14;
	mov.b64 	%rd255, {%r84, %r83};
	shf.r.wrap.b32 	%r85, %r82, %r81, 18;
	shf.r.wrap.b32 	%r86, %r81, %r82, 18;
	mov.b64 	%rd256, {%r86, %r85};
	xor.b64  	%rd257, %rd255, %rd256;
	shf.l.wrap.b32 	%r87, %r81, %r82, 23;
	shf.l.wrap.b32 	%r88, %r82, %r81, 23;
	mov.b64 	%rd258, {%r88, %r87};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd230, %rd207;
	and.b64  	%rd261, %rd253, %rd260;
	xor.b64  	%rd262, %rd261, %rd207;
	add.s64 	%rd263, %rd179, %rd159;
	add.s64 	%rd264, %rd263, %rd262;
	add.s64 	%rd265, %rd264, %rd259;
	add.s64 	%rd266, %rd265, -131588302623135388;
	add.s64 	%rd267, %rd266, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r89,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd254;
	}
	shf.r.wrap.b32 	%r91, %r90, %r89, 28;
	shf.r.wrap.b32 	%r92, %r89, %r90, 28;
	mov.b64 	%rd268, {%r92, %r91};
	shf.l.wrap.b32 	%r93, %r89, %r90, 30;
	shf.l.wrap.b32 	%r94, %r90, %r89, 30;
	mov.b64 	%rd269, {%r94, %r93};
	xor.b64  	%rd270, %rd268, %rd269;
	shf.l.wrap.b32 	%r95, %r89, %r90, 25;
	shf.l.wrap.b32 	%r96, %r90, %r89, 25;
	mov.b64 	%rd271, {%r96, %r95};
	xor.b64  	%rd272, %rd270, %rd271;
	and.b64  	%rd273, %rd254, %rd231;
	or.b64  	%rd274, %rd254, %rd231;
	and.b64  	%rd275, %rd274, %rd208;
	or.b64  	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd276, %rd272;
	add.s64 	%rd278, %rd277, %rd266;
	add.s64 	%rd279, %rd163, %rd207;
	xor.b64  	%rd280, %rd253, %rd230;
	and.b64  	%rd281, %rd267, %rd280;
	xor.b64  	%rd282, %rd281, %rd230;
	add.s64 	%rd283, %rd279, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd267;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 14;
	shf.r.wrap.b32 	%r100, %r97, %r98, 14;
	mov.b64 	%rd284, {%r100, %r99};
	shf.r.wrap.b32 	%r101, %r98, %r97, 18;
	shf.r.wrap.b32 	%r102, %r97, %r98, 18;
	mov.b64 	%rd285, {%r102, %r101};
	xor.b64  	%rd286, %rd284, %rd285;
	shf.l.wrap.b32 	%r103, %r97, %r98, 23;
	shf.l.wrap.b32 	%r104, %r98, %r97, 23;
	mov.b64 	%rd287, {%r104, %r103};
	xor.b64  	%rd288, %rd286, %rd287;
	add.s64 	%rd289, %rd283, %rd288;
	add.s64 	%rd290, %rd289, 6480981068601479193;
	add.s64 	%rd291, %rd290, %rd208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd278;
	}
	shf.r.wrap.b32 	%r107, %r106, %r105, 28;
	shf.r.wrap.b32 	%r108, %r105, %r106, 28;
	mov.b64 	%rd292, {%r108, %r107};
	shf.l.wrap.b32 	%r109, %r105, %r106, 30;
	shf.l.wrap.b32 	%r110, %r106, %r105, 30;
	mov.b64 	%rd293, {%r110, %r109};
	xor.b64  	%rd294, %rd292, %rd293;
	shf.l.wrap.b32 	%r111, %r105, %r106, 25;
	shf.l.wrap.b32 	%r112, %r106, %r105, 25;
	mov.b64 	%rd295, {%r112, %r111};
	xor.b64  	%rd296, %rd294, %rd295;
	and.b64  	%rd297, %rd278, %rd254;
	or.b64  	%rd298, %rd278, %rd254;
	and.b64  	%rd299, %rd298, %rd231;
	or.b64  	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd300, %rd296;
	add.s64 	%rd302, %rd301, %rd290;
	add.s64 	%rd303, %rd167, %rd230;
	xor.b64  	%rd304, %rd267, %rd253;
	and.b64  	%rd305, %rd291, %rd304;
	xor.b64  	%rd306, %rd305, %rd253;
	add.s64 	%rd307, %rd303, %rd306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd291;
	}
	shf.r.wrap.b32 	%r115, %r114, %r113, 14;
	shf.r.wrap.b32 	%r116, %r113, %r114, 14;
	mov.b64 	%rd308, {%r116, %r115};
	shf.r.wrap.b32 	%r117, %r114, %r113, 18;
	shf.r.wrap.b32 	%r118, %r113, %r114, 18;
	mov.b64 	%rd309, {%r118, %r117};
	xor.b64  	%rd310, %rd308, %rd309;
	shf.l.wrap.b32 	%r119, %r113, %r114, 23;
	shf.l.wrap.b32 	%r120, %r114, %r113, 23;
	mov.b64 	%rd311, {%r120, %r119};
	xor.b64  	%rd312, %rd310, %rd311;
	add.s64 	%rd313, %rd307, %rd312;
	add.s64 	%rd314, %rd313, -7908458776815382629;
	add.s64 	%rd315, %rd314, %rd231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r122}, %rd302;
	}
	shf.r.wrap.b32 	%r123, %r122, %r121, 28;
	shf.r.wrap.b32 	%r124, %r121, %r122, 28;
	mov.b64 	%rd316, {%r124, %r123};
	shf.l.wrap.b32 	%r125, %r121, %r122, 30;
	shf.l.wrap.b32 	%r126, %r122, %r121, 30;
	mov.b64 	%rd317, {%r126, %r125};
	xor.b64  	%rd318, %rd316, %rd317;
	shf.l.wrap.b32 	%r127, %r121, %r122, 25;
	shf.l.wrap.b32 	%r128, %r122, %r121, 25;
	mov.b64 	%rd319, {%r128, %r127};
	xor.b64  	%rd320, %rd318, %rd319;
	and.b64  	%rd321, %rd302, %rd278;
	or.b64  	%rd322, %rd302, %rd278;
	and.b64  	%rd323, %rd322, %rd254;
	or.b64  	%rd324, %rd323, %rd321;
	add.s64 	%rd325, %rd324, %rd320;
	add.s64 	%rd326, %rd325, %rd314;
	add.s64 	%rd327, %rd171, %rd253;
	xor.b64  	%rd328, %rd291, %rd267;
	and.b64  	%rd329, %rd315, %rd328;
	xor.b64  	%rd330, %rd329, %rd267;
	add.s64 	%rd331, %rd327, %rd330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd315;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 14;
	shf.r.wrap.b32 	%r132, %r129, %r130, 14;
	mov.b64 	%rd332, {%r132, %r131};
	shf.r.wrap.b32 	%r133, %r130, %r129, 18;
	shf.r.wrap.b32 	%r134, %r129, %r130, 18;
	mov.b64 	%rd333, {%r134, %r133};
	xor.b64  	%rd334, %rd332, %rd333;
	shf.l.wrap.b32 	%r135, %r129, %r130, 23;
	shf.l.wrap.b32 	%r136, %r130, %r129, 23;
	mov.b64 	%rd335, {%r136, %r135};
	xor.b64  	%rd336, %rd334, %rd335;
	add.s64 	%rd337, %rd331, %rd336;
	add.s64 	%rd338, %rd337, -6116909921290321640;
	add.s64 	%rd339, %rd338, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r138}, %rd326;
	}
	shf.r.wrap.b32 	%r139, %r138, %r137, 28;
	shf.r.wrap.b32 	%r140, %r137, %r138, 28;
	mov.b64 	%rd340, {%r140, %r139};
	shf.l.wrap.b32 	%r141, %r137, %r138, 30;
	shf.l.wrap.b32 	%r142, %r138, %r137, 30;
	mov.b64 	%rd341, {%r142, %r141};
	xor.b64  	%rd342, %rd340, %rd341;
	shf.l.wrap.b32 	%r143, %r137, %r138, 25;
	shf.l.wrap.b32 	%r144, %r138, %r137, 25;
	mov.b64 	%rd343, {%r144, %r143};
	xor.b64  	%rd344, %rd342, %rd343;
	and.b64  	%rd345, %rd326, %rd302;
	or.b64  	%rd346, %rd326, %rd302;
	and.b64  	%rd347, %rd346, %rd278;
	or.b64  	%rd348, %rd347, %rd345;
	add.s64 	%rd349, %rd348, %rd344;
	add.s64 	%rd350, %rd349, %rd338;
	xor.b64  	%rd351, %rd315, %rd291;
	and.b64  	%rd352, %rd339, %rd351;
	xor.b64  	%rd353, %rd352, %rd291;
	add.s64 	%rd354, %rd267, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd339;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 14;
	shf.r.wrap.b32 	%r148, %r145, %r146, 14;
	mov.b64 	%rd355, {%r148, %r147};
	shf.r.wrap.b32 	%r149, %r146, %r145, 18;
	shf.r.wrap.b32 	%r150, %r145, %r146, 18;
	mov.b64 	%rd356, {%r150, %r149};
	xor.b64  	%rd357, %rd355, %rd356;
	shf.l.wrap.b32 	%r151, %r145, %r146, 23;
	shf.l.wrap.b32 	%r152, %r146, %r145, 23;
	mov.b64 	%rd358, {%r152, %r151};
	xor.b64  	%rd359, %rd357, %rd358;
	add.s64 	%rd360, %rd354, %rd359;
	add.s64 	%rd361, %rd360, 1026223469122631800;
	add.s64 	%rd362, %rd361, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd350;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 28;
	shf.r.wrap.b32 	%r156, %r153, %r154, 28;
	mov.b64 	%rd363, {%r156, %r155};
	shf.l.wrap.b32 	%r157, %r153, %r154, 30;
	shf.l.wrap.b32 	%r158, %r154, %r153, 30;
	mov.b64 	%rd364, {%r158, %r157};
	xor.b64  	%rd365, %rd363, %rd364;
	shf.l.wrap.b32 	%r159, %r153, %r154, 25;
	shf.l.wrap.b32 	%r160, %r154, %r153, 25;
	mov.b64 	%rd366, {%r160, %r159};
	xor.b64  	%rd367, %rd365, %rd366;
	and.b64  	%rd368, %rd350, %rd326;
	or.b64  	%rd369, %rd350, %rd326;
	and.b64  	%rd370, %rd369, %rd302;
	or.b64  	%rd371, %rd370, %rd368;
	add.s64 	%rd372, %rd371, %rd367;
	add.s64 	%rd373, %rd372, %rd361;
	xor.b64  	%rd374, %rd339, %rd315;
	and.b64  	%rd375, %rd362, %rd374;
	xor.b64  	%rd376, %rd375, %rd315;
	add.s64 	%rd377, %rd291, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd362;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 14;
	shf.r.wrap.b32 	%r164, %r161, %r162, 14;
	mov.b64 	%rd378, {%r164, %r163};
	shf.r.wrap.b32 	%r165, %r162, %r161, 18;
	shf.r.wrap.b32 	%r166, %r161, %r162, 18;
	mov.b64 	%rd379, {%r166, %r165};
	xor.b64  	%rd380, %rd378, %rd379;
	shf.l.wrap.b32 	%r167, %r161, %r162, 23;
	shf.l.wrap.b32 	%r168, %r162, %r161, 23;
	mov.b64 	%rd381, {%r168, %r167};
	xor.b64  	%rd382, %rd380, %rd381;
	add.s64 	%rd383, %rd377, %rd382;
	add.s64 	%rd384, %rd383, 5240379308906030580;
	add.s64 	%rd385, %rd384, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd373;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 28;
	shf.r.wrap.b32 	%r172, %r169, %r170, 28;
	mov.b64 	%rd386, {%r172, %r171};
	shf.l.wrap.b32 	%r173, %r169, %r170, 30;
	shf.l.wrap.b32 	%r174, %r170, %r169, 30;
	mov.b64 	%rd387, {%r174, %r173};
	xor.b64  	%rd388, %rd386, %rd387;
	shf.l.wrap.b32 	%r175, %r169, %r170, 25;
	shf.l.wrap.b32 	%r176, %r170, %r169, 25;
	mov.b64 	%rd389, {%r176, %r175};
	xor.b64  	%rd390, %rd388, %rd389;
	and.b64  	%rd391, %rd373, %rd350;
	or.b64  	%rd392, %rd373, %rd350;
	and.b64  	%rd393, %rd392, %rd326;
	or.b64  	%rd394, %rd393, %rd391;
	add.s64 	%rd395, %rd394, %rd390;
	add.s64 	%rd396, %rd395, %rd384;
	xor.b64  	%rd397, %rd362, %rd339;
	and.b64  	%rd398, %rd385, %rd397;
	xor.b64  	%rd399, %rd398, %rd339;
	add.s64 	%rd400, %rd315, %rd399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd385;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 14;
	shf.r.wrap.b32 	%r180, %r177, %r178, 14;
	mov.b64 	%rd401, {%r180, %r179};
	shf.r.wrap.b32 	%r181, %r178, %r177, 18;
	shf.r.wrap.b32 	%r182, %r177, %r178, 18;
	mov.b64 	%rd402, {%r182, %r181};
	xor.b64  	%rd403, %rd401, %rd402;
	shf.l.wrap.b32 	%r183, %r177, %r178, 23;
	shf.l.wrap.b32 	%r184, %r178, %r177, 23;
	mov.b64 	%rd404, {%r184, %r183};
	xor.b64  	%rd405, %rd403, %rd404;
	add.s64 	%rd406, %rd400, %rd405;
	add.s64 	%rd407, %rd406, 6514382044894259394;
	add.s64 	%rd408, %rd407, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd396;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 28;
	shf.r.wrap.b32 	%r188, %r185, %r186, 28;
	mov.b64 	%rd409, {%r188, %r187};
	shf.l.wrap.b32 	%r189, %r185, %r186, 30;
	shf.l.wrap.b32 	%r190, %r186, %r185, 30;
	mov.b64 	%rd410, {%r190, %r189};
	xor.b64  	%rd411, %rd409, %rd410;
	shf.l.wrap.b32 	%r191, %r185, %r186, 25;
	shf.l.wrap.b32 	%r192, %r186, %r185, 25;
	mov.b64 	%rd412, {%r192, %r191};
	xor.b64  	%rd413, %rd411, %rd412;
	and.b64  	%rd414, %rd396, %rd373;
	or.b64  	%rd415, %rd396, %rd373;
	and.b64  	%rd416, %rd415, %rd350;
	or.b64  	%rd417, %rd416, %rd414;
	add.s64 	%rd418, %rd417, %rd413;
	add.s64 	%rd419, %rd418, %rd407;
	xor.b64  	%rd420, %rd385, %rd362;
	and.b64  	%rd421, %rd408, %rd420;
	xor.b64  	%rd422, %rd421, %rd362;
	add.s64 	%rd423, %rd339, %rd422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd408;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 14;
	shf.r.wrap.b32 	%r196, %r193, %r194, 14;
	mov.b64 	%rd424, {%r196, %r195};
	shf.r.wrap.b32 	%r197, %r194, %r193, 18;
	shf.r.wrap.b32 	%r198, %r193, %r194, 18;
	mov.b64 	%rd425, {%r198, %r197};
	xor.b64  	%rd426, %rd424, %rd425;
	shf.l.wrap.b32 	%r199, %r193, %r194, 23;
	shf.l.wrap.b32 	%r200, %r194, %r193, 23;
	mov.b64 	%rd427, {%r200, %r199};
	xor.b64  	%rd428, %rd426, %rd427;
	add.s64 	%rd429, %rd423, %rd428;
	add.s64 	%rd430, %rd429, -8411963267446609128;
	add.s64 	%rd431, %rd430, %rd350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd419;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 28;
	shf.r.wrap.b32 	%r204, %r201, %r202, 28;
	mov.b64 	%rd432, {%r204, %r203};
	shf.l.wrap.b32 	%r205, %r201, %r202, 30;
	shf.l.wrap.b32 	%r206, %r202, %r201, 30;
	mov.b64 	%rd433, {%r206, %r205};
	xor.b64  	%rd434, %rd432, %rd433;
	shf.l.wrap.b32 	%r207, %r201, %r202, 25;
	shf.l.wrap.b32 	%r208, %r202, %r201, 25;
	mov.b64 	%rd435, {%r208, %r207};
	xor.b64  	%rd436, %rd434, %rd435;
	and.b64  	%rd437, %rd419, %rd396;
	or.b64  	%rd438, %rd419, %rd396;
	and.b64  	%rd439, %rd438, %rd373;
	or.b64  	%rd440, %rd439, %rd437;
	add.s64 	%rd441, %rd440, %rd436;
	add.s64 	%rd442, %rd441, %rd430;
	xor.b64  	%rd443, %rd408, %rd385;
	and.b64  	%rd444, %rd431, %rd443;
	xor.b64  	%rd445, %rd444, %rd385;
	add.s64 	%rd446, %rd362, %rd445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd431;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 14;
	shf.r.wrap.b32 	%r212, %r209, %r210, 14;
	mov.b64 	%rd447, {%r212, %r211};
	shf.r.wrap.b32 	%r213, %r210, %r209, 18;
	shf.r.wrap.b32 	%r214, %r209, %r210, 18;
	mov.b64 	%rd448, {%r214, %r213};
	xor.b64  	%rd449, %rd447, %rd448;
	shf.l.wrap.b32 	%r215, %r209, %r210, 23;
	shf.l.wrap.b32 	%r216, %r210, %r209, 23;
	mov.b64 	%rd450, {%r216, %r215};
	xor.b64  	%rd451, %rd449, %rd450;
	add.s64 	%rd452, %rd446, %rd451;
	add.s64 	%rd453, %rd452, -6272226017688830043;
	add.s64 	%rd454, %rd453, %rd373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd442;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 28;
	shf.r.wrap.b32 	%r220, %r217, %r218, 28;
	mov.b64 	%rd455, {%r220, %r219};
	shf.l.wrap.b32 	%r221, %r217, %r218, 30;
	shf.l.wrap.b32 	%r222, %r218, %r217, 30;
	mov.b64 	%rd456, {%r222, %r221};
	xor.b64  	%rd457, %rd455, %rd456;
	shf.l.wrap.b32 	%r223, %r217, %r218, 25;
	shf.l.wrap.b32 	%r224, %r218, %r217, 25;
	mov.b64 	%rd458, {%r224, %r223};
	xor.b64  	%rd459, %rd457, %rd458;
	and.b64  	%rd460, %rd442, %rd419;
	or.b64  	%rd461, %rd442, %rd419;
	and.b64  	%rd462, %rd461, %rd396;
	or.b64  	%rd463, %rd462, %rd460;
	add.s64 	%rd464, %rd463, %rd459;
	add.s64 	%rd465, %rd464, %rd453;
	xor.b64  	%rd466, %rd431, %rd408;
	and.b64  	%rd467, %rd454, %rd466;
	xor.b64  	%rd468, %rd467, %rd408;
	add.s64 	%rd469, %rd385, %rd468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd454;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 14;
	shf.r.wrap.b32 	%r228, %r225, %r226, 14;
	mov.b64 	%rd470, {%r228, %r227};
	shf.r.wrap.b32 	%r229, %r226, %r225, 18;
	shf.r.wrap.b32 	%r230, %r225, %r226, 18;
	mov.b64 	%rd471, {%r230, %r229};
	xor.b64  	%rd472, %rd470, %rd471;
	shf.l.wrap.b32 	%r231, %r225, %r226, 23;
	shf.l.wrap.b32 	%r232, %r226, %r225, 23;
	mov.b64 	%rd473, {%r232, %r231};
	xor.b64  	%rd474, %rd472, %rd473;
	add.s64 	%rd475, %rd469, %rd474;
	add.s64 	%rd476, %rd475, -5254319553297724185;
	add.s64 	%rd477, %rd476, %rd396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd465;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 28;
	shf.r.wrap.b32 	%r236, %r233, %r234, 28;
	mov.b64 	%rd478, {%r236, %r235};
	shf.l.wrap.b32 	%r237, %r233, %r234, 30;
	shf.l.wrap.b32 	%r238, %r234, %r233, 30;
	mov.b64 	%rd479, {%r238, %r237};
	xor.b64  	%rd480, %rd478, %rd479;
	shf.l.wrap.b32 	%r239, %r233, %r234, 25;
	shf.l.wrap.b32 	%r240, %r234, %r233, 25;
	mov.b64 	%rd481, {%r240, %r239};
	xor.b64  	%rd482, %rd480, %rd481;
	and.b64  	%rd483, %rd465, %rd442;
	or.b64  	%rd484, %rd465, %rd442;
	and.b64  	%rd485, %rd484, %rd419;
	or.b64  	%rd486, %rd485, %rd483;
	add.s64 	%rd487, %rd486, %rd482;
	add.s64 	%rd488, %rd487, %rd476;
	xor.b64  	%rd489, %rd454, %rd431;
	and.b64  	%rd490, %rd477, %rd489;
	xor.b64  	%rd491, %rd490, %rd431;
	add.s64 	%rd492, %rd408, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd477;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 14;
	shf.r.wrap.b32 	%r244, %r241, %r242, 14;
	mov.b64 	%rd493, {%r244, %r243};
	shf.r.wrap.b32 	%r245, %r242, %r241, 18;
	shf.r.wrap.b32 	%r246, %r241, %r242, 18;
	mov.b64 	%rd494, {%r246, %r245};
	xor.b64  	%rd495, %rd493, %rd494;
	shf.l.wrap.b32 	%r247, %r241, %r242, 23;
	shf.l.wrap.b32 	%r248, %r242, %r241, 23;
	mov.b64 	%rd496, {%r248, %r247};
	xor.b64  	%rd497, %rd495, %rd496;
	add.s64 	%rd498, %rd492, %rd497;
	add.s64 	%rd499, %rd498, -3309515854735128469;
	add.s64 	%rd500, %rd499, %rd419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd488;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 28;
	shf.r.wrap.b32 	%r252, %r249, %r250, 28;
	mov.b64 	%rd501, {%r252, %r251};
	shf.l.wrap.b32 	%r253, %r249, %r250, 30;
	shf.l.wrap.b32 	%r254, %r250, %r249, 30;
	mov.b64 	%rd502, {%r254, %r253};
	xor.b64  	%rd503, %rd501, %rd502;
	shf.l.wrap.b32 	%r255, %r249, %r250, 25;
	shf.l.wrap.b32 	%r256, %r250, %r249, 25;
	mov.b64 	%rd504, {%r256, %r255};
	xor.b64  	%rd505, %rd503, %rd504;
	and.b64  	%rd506, %rd488, %rd465;
	or.b64  	%rd507, %rd488, %rd465;
	and.b64  	%rd508, %rd507, %rd442;
	or.b64  	%rd509, %rd508, %rd506;
	add.s64 	%rd510, %rd509, %rd505;
	add.s64 	%rd511, %rd510, %rd499;
	xor.b64  	%rd512, %rd477, %rd454;
	and.b64  	%rd513, %rd500, %rd512;
	xor.b64  	%rd514, %rd513, %rd454;
	add.s64 	%rd515, %rd431, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd500;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 14;
	shf.r.wrap.b32 	%r260, %r257, %r258, 14;
	mov.b64 	%rd516, {%r260, %r259};
	shf.r.wrap.b32 	%r261, %r258, %r257, 18;
	shf.r.wrap.b32 	%r262, %r257, %r258, 18;
	mov.b64 	%rd517, {%r262, %r261};
	xor.b64  	%rd518, %rd516, %rd517;
	shf.l.wrap.b32 	%r263, %r257, %r258, 23;
	shf.l.wrap.b32 	%r264, %r258, %r257, 23;
	mov.b64 	%rd519, {%r264, %r263};
	xor.b64  	%rd520, %rd518, %rd519;
	add.s64 	%rd521, %rd515, %rd520;
	add.s64 	%rd522, %rd521, -589364985744892726;
	add.s64 	%rd523, %rd522, %rd442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd511;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 28;
	shf.r.wrap.b32 	%r268, %r265, %r266, 28;
	mov.b64 	%rd524, {%r268, %r267};
	shf.l.wrap.b32 	%r269, %r265, %r266, 30;
	shf.l.wrap.b32 	%r270, %r266, %r265, 30;
	mov.b64 	%rd525, {%r270, %r269};
	xor.b64  	%rd526, %rd524, %rd525;
	shf.l.wrap.b32 	%r271, %r265, %r266, 25;
	shf.l.wrap.b32 	%r272, %r266, %r265, 25;
	mov.b64 	%rd527, {%r272, %r271};
	xor.b64  	%rd528, %rd526, %rd527;
	and.b64  	%rd529, %rd511, %rd488;
	or.b64  	%rd530, %rd511, %rd488;
	and.b64  	%rd531, %rd530, %rd465;
	or.b64  	%rd532, %rd531, %rd529;
	add.s64 	%rd533, %rd532, %rd528;
	add.s64 	%rd534, %rd533, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r274,%dummy}, %rd143;
	}
	shf.l.wrap.b32 	%r275, %r274, %r273, 3;
	shf.l.wrap.b32 	%r276, %r273, %r274, 3;
	mov.b64 	%rd535, {%r276, %r275};
	shf.r.wrap.b32 	%r277, %r273, %r274, 19;
	shf.r.wrap.b32 	%r278, %r274, %r273, 19;
	mov.b64 	%rd536, {%r278, %r277};
	xor.b64  	%rd537, %rd536, %rd535;
	xor.b64  	%rd538, %rd537, 61037020832127192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r279,%dummy}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd147;
	}
	shf.r.wrap.b32 	%r281, %r280, %r279, 1;
	shf.r.wrap.b32 	%r282, %r279, %r280, 1;
	mov.b64 	%rd539, {%r282, %r281};
	shf.r.wrap.b32 	%r283, %r280, %r279, 8;
	shf.r.wrap.b32 	%r284, %r279, %r280, 8;
	mov.b64 	%rd540, {%r284, %r283};
	xor.b64  	%rd541, %rd539, %rd540;
	shr.u64 	%rd542, %rd147, 7;
	xor.b64  	%rd543, %rd541, %rd542;
	add.s64 	%rd544, %rd538, %rd142;
	add.s64 	%rd545, %rd544, %rd543;
	add.s64 	%rd546, %rd545, 3906369333256140342;
	add.s64 	%rd547, %rd546, %rd454;
	xor.b64  	%rd548, %rd500, %rd477;
	and.b64  	%rd549, %rd523, %rd548;
	xor.b64  	%rd550, %rd549, %rd477;
	add.s64 	%rd551, %rd547, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd523;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 14;
	shf.r.wrap.b32 	%r288, %r285, %r286, 14;
	mov.b64 	%rd552, {%r288, %r287};
	shf.r.wrap.b32 	%r289, %r286, %r285, 18;
	shf.r.wrap.b32 	%r290, %r285, %r286, 18;
	mov.b64 	%rd553, {%r290, %r289};
	xor.b64  	%rd554, %rd552, %rd553;
	shf.l.wrap.b32 	%r291, %r285, %r286, 23;
	shf.l.wrap.b32 	%r292, %r286, %r285, 23;
	mov.b64 	%rd555, {%r292, %r291};
	xor.b64  	%rd556, %rd554, %rd555;
	add.s64 	%rd557, %rd551, %rd556;
	add.s64 	%rd558, %rd557, -1973867731355612462;
	add.s64 	%rd559, %rd558, %rd465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd534;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 28;
	shf.r.wrap.b32 	%r296, %r293, %r294, 28;
	mov.b64 	%rd560, {%r296, %r295};
	shf.l.wrap.b32 	%r297, %r293, %r294, 30;
	shf.l.wrap.b32 	%r298, %r294, %r293, 30;
	mov.b64 	%rd561, {%r298, %r297};
	xor.b64  	%rd562, %rd560, %rd561;
	shf.l.wrap.b32 	%r299, %r293, %r294, 25;
	shf.l.wrap.b32 	%r300, %r294, %r293, 25;
	mov.b64 	%rd563, {%r300, %r299};
	xor.b64  	%rd564, %rd562, %rd563;
	and.b64  	%rd565, %rd534, %rd511;
	or.b64  	%rd566, %rd534, %rd511;
	and.b64  	%rd567, %rd566, %rd488;
	or.b64  	%rd568, %rd567, %rd565;
	add.s64 	%rd569, %rd568, %rd564;
	add.s64 	%rd570, %rd569, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd151;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 1;
	shf.r.wrap.b32 	%r304, %r301, %r302, 1;
	mov.b64 	%rd571, {%r304, %r303};
	shf.r.wrap.b32 	%r305, %r302, %r301, 8;
	shf.r.wrap.b32 	%r306, %r301, %r302, 8;
	mov.b64 	%rd572, {%r306, %r305};
	xor.b64  	%rd573, %rd571, %rd572;
	shr.u64 	%rd574, %rd151, 7;
	xor.b64  	%rd575, %rd573, %rd574;
	add.s64 	%rd576, %rd538, %rd147;
	add.s64 	%rd577, %rd576, %rd575;
	add.s64 	%rd578, %rd577, 3906369333256140342;
	add.s64 	%rd579, %rd578, %rd477;
	xor.b64  	%rd580, %rd523, %rd500;
	and.b64  	%rd581, %rd559, %rd580;
	xor.b64  	%rd582, %rd581, %rd500;
	add.s64 	%rd583, %rd579, %rd582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd559;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 14;
	shf.r.wrap.b32 	%r310, %r307, %r308, 14;
	mov.b64 	%rd584, {%r310, %r309};
	shf.r.wrap.b32 	%r311, %r308, %r307, 18;
	shf.r.wrap.b32 	%r312, %r307, %r308, 18;
	mov.b64 	%rd585, {%r312, %r311};
	xor.b64  	%rd586, %rd584, %rd585;
	shf.l.wrap.b32 	%r313, %r307, %r308, 23;
	shf.l.wrap.b32 	%r314, %r308, %r307, 23;
	mov.b64 	%rd587, {%r314, %r313};
	xor.b64  	%rd588, %rd586, %rd587;
	add.s64 	%rd589, %rd583, %rd588;
	add.s64 	%rd590, %rd589, -1171420211273849373;
	add.s64 	%rd591, %rd590, %rd488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd570;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 28;
	shf.r.wrap.b32 	%r318, %r315, %r316, 28;
	mov.b64 	%rd592, {%r318, %r317};
	shf.l.wrap.b32 	%r319, %r315, %r316, 30;
	shf.l.wrap.b32 	%r320, %r316, %r315, 30;
	mov.b64 	%rd593, {%r320, %r319};
	xor.b64  	%rd594, %rd592, %rd593;
	shf.l.wrap.b32 	%r321, %r315, %r316, 25;
	shf.l.wrap.b32 	%r322, %r316, %r315, 25;
	mov.b64 	%rd595, {%r322, %r321};
	xor.b64  	%rd596, %rd594, %rd595;
	and.b64  	%rd597, %rd570, %rd534;
	or.b64  	%rd598, %rd570, %rd534;
	and.b64  	%rd599, %rd598, %rd511;
	or.b64  	%rd600, %rd599, %rd597;
	add.s64 	%rd601, %rd600, %rd596;
	add.s64 	%rd602, %rd601, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd546;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 19;
	shf.r.wrap.b32 	%r326, %r323, %r324, 19;
	mov.b64 	%rd603, {%r326, %r325};
	shf.l.wrap.b32 	%r327, %r323, %r324, 3;
	shf.l.wrap.b32 	%r328, %r324, %r323, 3;
	mov.b64 	%rd604, {%r328, %r327};
	xor.b64  	%rd605, %rd603, %rd604;
	shr.u64 	%rd606, %rd546, 6;
	xor.b64  	%rd607, %rd605, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd155;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 1;
	shf.r.wrap.b32 	%r332, %r329, %r330, 1;
	mov.b64 	%rd608, {%r332, %r331};
	shf.r.wrap.b32 	%r333, %r330, %r329, 8;
	shf.r.wrap.b32 	%r334, %r329, %r330, 8;
	mov.b64 	%rd609, {%r334, %r333};
	xor.b64  	%rd610, %rd608, %rd609;
	shr.u64 	%rd611, %rd155, 7;
	xor.b64  	%rd612, %rd610, %rd611;
	add.s64 	%rd613, %rd607, %rd151;
	add.s64 	%rd614, %rd613, %rd612;
	add.s64 	%rd615, %rd614, 3906369333256140342;
	add.s64 	%rd616, %rd615, %rd500;
	xor.b64  	%rd617, %rd559, %rd523;
	and.b64  	%rd618, %rd591, %rd617;
	xor.b64  	%rd619, %rd618, %rd523;
	add.s64 	%rd620, %rd616, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd591;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 14;
	shf.r.wrap.b32 	%r338, %r335, %r336, 14;
	mov.b64 	%rd621, {%r338, %r337};
	shf.r.wrap.b32 	%r339, %r336, %r335, 18;
	shf.r.wrap.b32 	%r340, %r335, %r336, 18;
	mov.b64 	%rd622, {%r340, %r339};
	xor.b64  	%rd623, %rd621, %rd622;
	shf.l.wrap.b32 	%r341, %r335, %r336, 23;
	shf.l.wrap.b32 	%r342, %r336, %r335, 23;
	mov.b64 	%rd624, {%r342, %r341};
	xor.b64  	%rd625, %rd623, %rd624;
	add.s64 	%rd626, %rd620, %rd625;
	add.s64 	%rd627, %rd626, 1135362057144423861;
	add.s64 	%rd628, %rd627, %rd511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd602;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 28;
	shf.r.wrap.b32 	%r346, %r343, %r344, 28;
	mov.b64 	%rd629, {%r346, %r345};
	shf.l.wrap.b32 	%r347, %r343, %r344, 30;
	shf.l.wrap.b32 	%r348, %r344, %r343, 30;
	mov.b64 	%rd630, {%r348, %r347};
	xor.b64  	%rd631, %rd629, %rd630;
	shf.l.wrap.b32 	%r349, %r343, %r344, 25;
	shf.l.wrap.b32 	%r350, %r344, %r343, 25;
	mov.b64 	%rd632, {%r350, %r349};
	xor.b64  	%rd633, %rd631, %rd632;
	and.b64  	%rd634, %rd602, %rd570;
	or.b64  	%rd635, %rd602, %rd570;
	and.b64  	%rd636, %rd635, %rd534;
	or.b64  	%rd637, %rd636, %rd634;
	add.s64 	%rd638, %rd637, %rd633;
	add.s64 	%rd639, %rd638, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd578;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 19;
	shf.r.wrap.b32 	%r354, %r351, %r352, 19;
	mov.b64 	%rd640, {%r354, %r353};
	shf.l.wrap.b32 	%r355, %r351, %r352, 3;
	shf.l.wrap.b32 	%r356, %r352, %r351, 3;
	mov.b64 	%rd641, {%r356, %r355};
	xor.b64  	%rd642, %rd640, %rd641;
	shr.u64 	%rd643, %rd578, 6;
	xor.b64  	%rd644, %rd642, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd159;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 1;
	shf.r.wrap.b32 	%r360, %r357, %r358, 1;
	mov.b64 	%rd645, {%r360, %r359};
	shf.r.wrap.b32 	%r361, %r358, %r357, 8;
	shf.r.wrap.b32 	%r362, %r357, %r358, 8;
	mov.b64 	%rd646, {%r362, %r361};
	xor.b64  	%rd647, %rd645, %rd646;
	shr.u64 	%rd648, %rd159, 7;
	xor.b64  	%rd649, %rd647, %rd648;
	add.s64 	%rd650, %rd644, %rd155;
	add.s64 	%rd651, %rd650, %rd649;
	add.s64 	%rd652, %rd651, 3906369333256140342;
	add.s64 	%rd653, %rd652, %rd523;
	xor.b64  	%rd654, %rd591, %rd559;
	and.b64  	%rd655, %rd628, %rd654;
	xor.b64  	%rd656, %rd655, %rd559;
	add.s64 	%rd657, %rd653, %rd656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd628;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 14;
	shf.r.wrap.b32 	%r366, %r363, %r364, 14;
	mov.b64 	%rd658, {%r366, %r365};
	shf.r.wrap.b32 	%r367, %r364, %r363, 18;
	shf.r.wrap.b32 	%r368, %r363, %r364, 18;
	mov.b64 	%rd659, {%r368, %r367};
	xor.b64  	%rd660, %rd658, %rd659;
	shf.l.wrap.b32 	%r369, %r363, %r364, 23;
	shf.l.wrap.b32 	%r370, %r364, %r363, 23;
	mov.b64 	%rd661, {%r370, %r369};
	xor.b64  	%rd662, %rd660, %rd661;
	add.s64 	%rd663, %rd657, %rd662;
	add.s64 	%rd664, %rd663, 2597628984639134821;
	add.s64 	%rd665, %rd664, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd639;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 28;
	shf.r.wrap.b32 	%r374, %r371, %r372, 28;
	mov.b64 	%rd666, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 30;
	shf.l.wrap.b32 	%r376, %r372, %r371, 30;
	mov.b64 	%rd667, {%r376, %r375};
	xor.b64  	%rd668, %rd666, %rd667;
	shf.l.wrap.b32 	%r377, %r371, %r372, 25;
	shf.l.wrap.b32 	%r378, %r372, %r371, 25;
	mov.b64 	%rd669, {%r378, %r377};
	xor.b64  	%rd670, %rd668, %rd669;
	and.b64  	%rd671, %rd639, %rd602;
	or.b64  	%rd672, %rd639, %rd602;
	and.b64  	%rd673, %rd672, %rd570;
	or.b64  	%rd674, %rd673, %rd671;
	add.s64 	%rd675, %rd674, %rd670;
	add.s64 	%rd676, %rd675, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd615;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd677, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd678, {%r384, %r383};
	xor.b64  	%rd679, %rd677, %rd678;
	shr.u64 	%rd680, %rd615, 6;
	xor.b64  	%rd681, %rd679, %rd680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd163;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 1;
	shf.r.wrap.b32 	%r388, %r385, %r386, 1;
	mov.b64 	%rd682, {%r388, %r387};
	shf.r.wrap.b32 	%r389, %r386, %r385, 8;
	shf.r.wrap.b32 	%r390, %r385, %r386, 8;
	mov.b64 	%rd683, {%r390, %r389};
	xor.b64  	%rd684, %rd682, %rd683;
	shr.u64 	%rd685, %rd163, 7;
	xor.b64  	%rd686, %rd684, %rd685;
	add.s64 	%rd687, %rd681, %rd159;
	add.s64 	%rd688, %rd687, %rd686;
	add.s64 	%rd689, %rd688, 3906369333256140342;
	add.s64 	%rd690, %rd689, %rd559;
	xor.b64  	%rd691, %rd628, %rd591;
	and.b64  	%rd692, %rd665, %rd691;
	xor.b64  	%rd693, %rd692, %rd591;
	add.s64 	%rd694, %rd690, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd665;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 14;
	shf.r.wrap.b32 	%r394, %r391, %r392, 14;
	mov.b64 	%rd695, {%r394, %r393};
	shf.r.wrap.b32 	%r395, %r392, %r391, 18;
	shf.r.wrap.b32 	%r396, %r391, %r392, 18;
	mov.b64 	%rd696, {%r396, %r395};
	xor.b64  	%rd697, %rd695, %rd696;
	shf.l.wrap.b32 	%r397, %r391, %r392, 23;
	shf.l.wrap.b32 	%r398, %r392, %r391, 23;
	mov.b64 	%rd698, {%r398, %r397};
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd694, %rd699;
	add.s64 	%rd701, %rd700, 3308224258029322869;
	add.s64 	%rd702, %rd701, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd676;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 28;
	shf.r.wrap.b32 	%r402, %r399, %r400, 28;
	mov.b64 	%rd703, {%r402, %r401};
	shf.l.wrap.b32 	%r403, %r399, %r400, 30;
	shf.l.wrap.b32 	%r404, %r400, %r399, 30;
	mov.b64 	%rd704, {%r404, %r403};
	xor.b64  	%rd705, %rd703, %rd704;
	shf.l.wrap.b32 	%r405, %r399, %r400, 25;
	shf.l.wrap.b32 	%r406, %r400, %r399, 25;
	mov.b64 	%rd706, {%r406, %r405};
	xor.b64  	%rd707, %rd705, %rd706;
	and.b64  	%rd708, %rd676, %rd639;
	or.b64  	%rd709, %rd676, %rd639;
	and.b64  	%rd710, %rd709, %rd602;
	or.b64  	%rd711, %rd710, %rd708;
	add.s64 	%rd712, %rd711, %rd707;
	add.s64 	%rd713, %rd712, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd652;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 19;
	shf.r.wrap.b32 	%r410, %r407, %r408, 19;
	mov.b64 	%rd714, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 3;
	shf.l.wrap.b32 	%r412, %r408, %r407, 3;
	mov.b64 	%rd715, {%r412, %r411};
	xor.b64  	%rd716, %rd714, %rd715;
	shr.u64 	%rd717, %rd652, 6;
	xor.b64  	%rd718, %rd716, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd167;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 1;
	shf.r.wrap.b32 	%r416, %r413, %r414, 1;
	mov.b64 	%rd719, {%r416, %r415};
	shf.r.wrap.b32 	%r417, %r414, %r413, 8;
	shf.r.wrap.b32 	%r418, %r413, %r414, 8;
	mov.b64 	%rd720, {%r418, %r417};
	xor.b64  	%rd721, %rd719, %rd720;
	shr.u64 	%rd722, %rd167, 7;
	xor.b64  	%rd723, %rd721, %rd722;
	add.s64 	%rd724, %rd718, %rd163;
	add.s64 	%rd725, %rd724, %rd723;
	add.s64 	%rd726, %rd725, 3906369333256140342;
	add.s64 	%rd727, %rd726, %rd591;
	xor.b64  	%rd728, %rd665, %rd628;
	and.b64  	%rd729, %rd702, %rd728;
	xor.b64  	%rd730, %rd729, %rd628;
	add.s64 	%rd731, %rd727, %rd730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd702;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 14;
	shf.r.wrap.b32 	%r422, %r419, %r420, 14;
	mov.b64 	%rd732, {%r422, %r421};
	shf.r.wrap.b32 	%r423, %r420, %r419, 18;
	shf.r.wrap.b32 	%r424, %r419, %r420, 18;
	mov.b64 	%rd733, {%r424, %r423};
	xor.b64  	%rd734, %rd732, %rd733;
	shf.l.wrap.b32 	%r425, %r419, %r420, 23;
	shf.l.wrap.b32 	%r426, %r420, %r419, 23;
	mov.b64 	%rd735, {%r426, %r425};
	xor.b64  	%rd736, %rd734, %rd735;
	add.s64 	%rd737, %rd731, %rd736;
	add.s64 	%rd738, %rd737, 5365058923640841347;
	add.s64 	%rd739, %rd738, %rd602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd713;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 28;
	shf.r.wrap.b32 	%r430, %r427, %r428, 28;
	mov.b64 	%rd740, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 30;
	shf.l.wrap.b32 	%r432, %r428, %r427, 30;
	mov.b64 	%rd741, {%r432, %r431};
	xor.b64  	%rd742, %rd740, %rd741;
	shf.l.wrap.b32 	%r433, %r427, %r428, 25;
	shf.l.wrap.b32 	%r434, %r428, %r427, 25;
	mov.b64 	%rd743, {%r434, %r433};
	xor.b64  	%rd744, %rd742, %rd743;
	and.b64  	%rd745, %rd713, %rd676;
	or.b64  	%rd746, %rd713, %rd676;
	and.b64  	%rd747, %rd746, %rd639;
	or.b64  	%rd748, %rd747, %rd745;
	add.s64 	%rd749, %rd748, %rd744;
	add.s64 	%rd750, %rd749, %rd738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd689;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 19;
	shf.r.wrap.b32 	%r438, %r435, %r436, 19;
	mov.b64 	%rd751, {%r438, %r437};
	shf.l.wrap.b32 	%r439, %r435, %r436, 3;
	shf.l.wrap.b32 	%r440, %r436, %r435, 3;
	mov.b64 	%rd752, {%r440, %r439};
	xor.b64  	%rd753, %rd751, %rd752;
	shr.u64 	%rd754, %rd689, 6;
	xor.b64  	%rd755, %rd753, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd171;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 1;
	shf.r.wrap.b32 	%r444, %r441, %r442, 1;
	mov.b64 	%rd756, {%r444, %r443};
	shf.r.wrap.b32 	%r445, %r442, %r441, 8;
	shf.r.wrap.b32 	%r446, %r441, %r442, 8;
	mov.b64 	%rd757, {%r446, %r445};
	xor.b64  	%rd758, %rd756, %rd757;
	shr.u64 	%rd759, %rd171, 7;
	xor.b64  	%rd760, %rd758, %rd759;
	add.s64 	%rd761, %rd755, %rd167;
	add.s64 	%rd762, %rd761, %rd760;
	add.s64 	%rd763, %rd762, 3906369333256140342;
	add.s64 	%rd764, %rd763, %rd628;
	xor.b64  	%rd765, %rd702, %rd665;
	and.b64  	%rd766, %rd739, %rd765;
	xor.b64  	%rd767, %rd766, %rd665;
	add.s64 	%rd768, %rd764, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd739;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 14;
	shf.r.wrap.b32 	%r450, %r447, %r448, 14;
	mov.b64 	%rd769, {%r450, %r449};
	shf.r.wrap.b32 	%r451, %r448, %r447, 18;
	shf.r.wrap.b32 	%r452, %r447, %r448, 18;
	mov.b64 	%rd770, {%r452, %r451};
	xor.b64  	%rd771, %rd769, %rd770;
	shf.l.wrap.b32 	%r453, %r447, %r448, 23;
	shf.l.wrap.b32 	%r454, %r448, %r447, 23;
	mov.b64 	%rd772, {%r454, %r453};
	xor.b64  	%rd773, %rd771, %rd772;
	add.s64 	%rd774, %rd768, %rd773;
	add.s64 	%rd775, %rd774, 6679025012923562964;
	add.s64 	%rd776, %rd775, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd750;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 28;
	shf.r.wrap.b32 	%r458, %r455, %r456, 28;
	mov.b64 	%rd777, {%r458, %r457};
	shf.l.wrap.b32 	%r459, %r455, %r456, 30;
	shf.l.wrap.b32 	%r460, %r456, %r455, 30;
	mov.b64 	%rd778, {%r460, %r459};
	xor.b64  	%rd779, %rd777, %rd778;
	shf.l.wrap.b32 	%r461, %r455, %r456, 25;
	shf.l.wrap.b32 	%r462, %r456, %r455, 25;
	mov.b64 	%rd780, {%r462, %r461};
	xor.b64  	%rd781, %rd779, %rd780;
	and.b64  	%rd782, %rd750, %rd713;
	or.b64  	%rd783, %rd750, %rd713;
	and.b64  	%rd784, %rd783, %rd676;
	or.b64  	%rd785, %rd784, %rd782;
	add.s64 	%rd786, %rd785, %rd781;
	add.s64 	%rd787, %rd786, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd726;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 19;
	shf.r.wrap.b32 	%r466, %r463, %r464, 19;
	mov.b64 	%rd788, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 3;
	shf.l.wrap.b32 	%r468, %r464, %r463, 3;
	mov.b64 	%rd789, {%r468, %r467};
	xor.b64  	%rd790, %rd788, %rd789;
	shr.u64 	%rd791, %rd726, 6;
	xor.b64  	%rd792, %rd790, %rd791;
	shf.r.wrap.b32 	%r469, %r273, %r274, 8;
	shf.r.wrap.b32 	%r470, %r274, %r273, 8;
	mov.b64 	%rd793, {%r470, %r469};
	shf.r.wrap.b32 	%r471, %r273, %r274, 1;
	shf.r.wrap.b32 	%r472, %r274, %r273, 1;
	mov.b64 	%rd794, {%r472, %r471};
	xor.b64  	%rd795, %rd794, %rd793;
	xor.b64  	%rd796, %rd795, 30518510416063596;
	add.s64 	%rd797, %rd792, %rd171;
	add.s64 	%rd798, %rd797, %rd546;
	add.s64 	%rd799, %rd798, %rd796;
	add.s64 	%rd800, %rd799, %rd665;
	xor.b64  	%rd801, %rd739, %rd702;
	and.b64  	%rd802, %rd776, %rd801;
	xor.b64  	%rd803, %rd802, %rd702;
	add.s64 	%rd804, %rd800, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd776;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 14;
	shf.r.wrap.b32 	%r476, %r473, %r474, 14;
	mov.b64 	%rd805, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r474, %r473, 18;
	shf.r.wrap.b32 	%r478, %r473, %r474, 18;
	mov.b64 	%rd806, {%r478, %r477};
	xor.b64  	%rd807, %rd805, %rd806;
	shf.l.wrap.b32 	%r479, %r473, %r474, 23;
	shf.l.wrap.b32 	%r480, %r474, %r473, 23;
	mov.b64 	%rd808, {%r480, %r479};
	xor.b64  	%rd809, %rd807, %rd808;
	add.s64 	%rd810, %rd804, %rd809;
	add.s64 	%rd811, %rd810, 8573033837759648693;
	add.s64 	%rd812, %rd811, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd787;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 28;
	shf.r.wrap.b32 	%r484, %r481, %r482, 28;
	mov.b64 	%rd813, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 30;
	shf.l.wrap.b32 	%r486, %r482, %r481, 30;
	mov.b64 	%rd814, {%r486, %r485};
	xor.b64  	%rd815, %rd813, %rd814;
	shf.l.wrap.b32 	%r487, %r481, %r482, 25;
	shf.l.wrap.b32 	%r488, %r482, %r481, 25;
	mov.b64 	%rd816, {%r488, %r487};
	xor.b64  	%rd817, %rd815, %rd816;
	and.b64  	%rd818, %rd787, %rd750;
	or.b64  	%rd819, %rd787, %rd750;
	and.b64  	%rd820, %rd819, %rd713;
	or.b64  	%rd821, %rd820, %rd818;
	add.s64 	%rd822, %rd821, %rd817;
	add.s64 	%rd823, %rd822, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd763;
	}
	shf.r.wrap.b32 	%r491, %r490, %r489, 19;
	shf.r.wrap.b32 	%r492, %r489, %r490, 19;
	mov.b64 	%rd824, {%r492, %r491};
	shf.l.wrap.b32 	%r493, %r489, %r490, 3;
	shf.l.wrap.b32 	%r494, %r490, %r489, 3;
	mov.b64 	%rd825, {%r494, %r493};
	xor.b64  	%rd826, %rd824, %rd825;
	shr.u64 	%rd827, %rd763, 6;
	xor.b64  	%rd828, %rd826, %rd827;
	add.s64 	%rd829, %rd828, %rd578;
	add.s64 	%rd830, %rd829, %rd796;
	add.s64 	%rd831, %rd830, 3906369333256140342;
	add.s64 	%rd832, %rd831, %rd702;
	xor.b64  	%rd833, %rd776, %rd739;
	and.b64  	%rd834, %rd812, %rd833;
	xor.b64  	%rd835, %rd834, %rd739;
	add.s64 	%rd836, %rd832, %rd835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd812;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 14;
	shf.r.wrap.b32 	%r498, %r495, %r496, 14;
	mov.b64 	%rd837, {%r498, %r497};
	shf.r.wrap.b32 	%r499, %r496, %r495, 18;
	shf.r.wrap.b32 	%r500, %r495, %r496, 18;
	mov.b64 	%rd838, {%r500, %r499};
	xor.b64  	%rd839, %rd837, %rd838;
	shf.l.wrap.b32 	%r501, %r495, %r496, 23;
	shf.l.wrap.b32 	%r502, %r496, %r495, 23;
	mov.b64 	%rd840, {%r502, %r501};
	xor.b64  	%rd841, %rd839, %rd840;
	add.s64 	%rd842, %rd836, %rd841;
	add.s64 	%rd843, %rd842, -7476448914759557205;
	add.s64 	%rd844, %rd843, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd823;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 28;
	shf.r.wrap.b32 	%r506, %r503, %r504, 28;
	mov.b64 	%rd845, {%r506, %r505};
	shf.l.wrap.b32 	%r507, %r503, %r504, 30;
	shf.l.wrap.b32 	%r508, %r504, %r503, 30;
	mov.b64 	%rd846, {%r508, %r507};
	xor.b64  	%rd847, %rd845, %rd846;
	shf.l.wrap.b32 	%r509, %r503, %r504, 25;
	shf.l.wrap.b32 	%r510, %r504, %r503, 25;
	mov.b64 	%rd848, {%r510, %r509};
	xor.b64  	%rd849, %rd847, %rd848;
	and.b64  	%rd850, %rd823, %rd787;
	or.b64  	%rd851, %rd823, %rd787;
	and.b64  	%rd852, %rd851, %rd750;
	or.b64  	%rd853, %rd852, %rd850;
	add.s64 	%rd854, %rd853, %rd849;
	add.s64 	%rd855, %rd854, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd799;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 19;
	shf.r.wrap.b32 	%r514, %r511, %r512, 19;
	mov.b64 	%rd856, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 3;
	shf.l.wrap.b32 	%r516, %r512, %r511, 3;
	mov.b64 	%rd857, {%r516, %r515};
	xor.b64  	%rd858, %rd856, %rd857;
	shr.u64 	%rd859, %rd799, 6;
	xor.b64  	%rd860, %rd858, %rd859;
	add.s64 	%rd861, %rd860, %rd615;
	add.s64 	%rd862, %rd861, %rd796;
	add.s64 	%rd863, %rd862, 3906369333256140342;
	add.s64 	%rd864, %rd863, %rd739;
	xor.b64  	%rd865, %rd812, %rd776;
	and.b64  	%rd866, %rd844, %rd865;
	xor.b64  	%rd867, %rd866, %rd776;
	add.s64 	%rd868, %rd864, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd844;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 14;
	shf.r.wrap.b32 	%r520, %r517, %r518, 14;
	mov.b64 	%rd869, {%r520, %r519};
	shf.r.wrap.b32 	%r521, %r518, %r517, 18;
	shf.r.wrap.b32 	%r522, %r517, %r518, 18;
	mov.b64 	%rd870, {%r522, %r521};
	xor.b64  	%rd871, %rd869, %rd870;
	shf.l.wrap.b32 	%r523, %r517, %r518, 23;
	shf.l.wrap.b32 	%r524, %r518, %r517, 23;
	mov.b64 	%rd872, {%r524, %r523};
	xor.b64  	%rd873, %rd871, %rd872;
	add.s64 	%rd874, %rd868, %rd873;
	add.s64 	%rd875, %rd874, -6327057829258317296;
	add.s64 	%rd876, %rd875, %rd750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd855;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 28;
	shf.r.wrap.b32 	%r528, %r525, %r526, 28;
	mov.b64 	%rd877, {%r528, %r527};
	shf.l.wrap.b32 	%r529, %r525, %r526, 30;
	shf.l.wrap.b32 	%r530, %r526, %r525, 30;
	mov.b64 	%rd878, {%r530, %r529};
	xor.b64  	%rd879, %rd877, %rd878;
	shf.l.wrap.b32 	%r531, %r525, %r526, 25;
	shf.l.wrap.b32 	%r532, %r526, %r525, 25;
	mov.b64 	%rd880, {%r532, %r531};
	xor.b64  	%rd881, %rd879, %rd880;
	and.b64  	%rd882, %rd855, %rd823;
	or.b64  	%rd883, %rd855, %rd823;
	and.b64  	%rd884, %rd883, %rd787;
	or.b64  	%rd885, %rd884, %rd882;
	add.s64 	%rd886, %rd885, %rd881;
	add.s64 	%rd887, %rd886, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd831;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 19;
	shf.r.wrap.b32 	%r536, %r533, %r534, 19;
	mov.b64 	%rd888, {%r536, %r535};
	shf.l.wrap.b32 	%r537, %r533, %r534, 3;
	shf.l.wrap.b32 	%r538, %r534, %r533, 3;
	mov.b64 	%rd889, {%r538, %r537};
	xor.b64  	%rd890, %rd888, %rd889;
	shr.u64 	%rd891, %rd831, 6;
	xor.b64  	%rd892, %rd890, %rd891;
	add.s64 	%rd893, %rd892, %rd652;
	add.s64 	%rd894, %rd893, %rd796;
	add.s64 	%rd895, %rd894, 3906369333256140342;
	add.s64 	%rd896, %rd895, %rd776;
	xor.b64  	%rd897, %rd844, %rd812;
	and.b64  	%rd898, %rd876, %rd897;
	xor.b64  	%rd899, %rd898, %rd812;
	add.s64 	%rd900, %rd896, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd876;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 14;
	shf.r.wrap.b32 	%r542, %r539, %r540, 14;
	mov.b64 	%rd901, {%r542, %r541};
	shf.r.wrap.b32 	%r543, %r540, %r539, 18;
	shf.r.wrap.b32 	%r544, %r539, %r540, 18;
	mov.b64 	%rd902, {%r544, %r543};
	xor.b64  	%rd903, %rd901, %rd902;
	shf.l.wrap.b32 	%r545, %r539, %r540, 23;
	shf.l.wrap.b32 	%r546, %r540, %r539, 23;
	mov.b64 	%rd904, {%r546, %r545};
	xor.b64  	%rd905, %rd903, %rd904;
	add.s64 	%rd906, %rd900, %rd905;
	add.s64 	%rd907, %rd906, -5763719355590565569;
	add.s64 	%rd908, %rd907, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd887;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 28;
	shf.r.wrap.b32 	%r550, %r547, %r548, 28;
	mov.b64 	%rd909, {%r550, %r549};
	shf.l.wrap.b32 	%r551, %r547, %r548, 30;
	shf.l.wrap.b32 	%r552, %r548, %r547, 30;
	mov.b64 	%rd910, {%r552, %r551};
	xor.b64  	%rd911, %rd909, %rd910;
	shf.l.wrap.b32 	%r553, %r547, %r548, 25;
	shf.l.wrap.b32 	%r554, %r548, %r547, 25;
	mov.b64 	%rd912, {%r554, %r553};
	xor.b64  	%rd913, %rd911, %rd912;
	and.b64  	%rd914, %rd887, %rd855;
	or.b64  	%rd915, %rd887, %rd855;
	and.b64  	%rd916, %rd915, %rd823;
	or.b64  	%rd917, %rd916, %rd914;
	add.s64 	%rd918, %rd917, %rd913;
	add.s64 	%rd919, %rd918, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd863;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 19;
	shf.r.wrap.b32 	%r558, %r555, %r556, 19;
	mov.b64 	%rd920, {%r558, %r557};
	shf.l.wrap.b32 	%r559, %r555, %r556, 3;
	shf.l.wrap.b32 	%r560, %r556, %r555, 3;
	mov.b64 	%rd921, {%r560, %r559};
	xor.b64  	%rd922, %rd920, %rd921;
	shr.u64 	%rd923, %rd863, 6;
	xor.b64  	%rd924, %rd922, %rd923;
	add.s64 	%rd925, %rd924, %rd689;
	add.s64 	%rd926, %rd925, %rd796;
	add.s64 	%rd927, %rd926, 3906369333256140342;
	add.s64 	%rd928, %rd927, %rd812;
	xor.b64  	%rd929, %rd876, %rd844;
	and.b64  	%rd930, %rd908, %rd929;
	xor.b64  	%rd931, %rd930, %rd844;
	add.s64 	%rd932, %rd928, %rd931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd908;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 14;
	shf.r.wrap.b32 	%r564, %r561, %r562, 14;
	mov.b64 	%rd933, {%r564, %r563};
	shf.r.wrap.b32 	%r565, %r562, %r561, 18;
	shf.r.wrap.b32 	%r566, %r561, %r562, 18;
	mov.b64 	%rd934, {%r566, %r565};
	xor.b64  	%rd935, %rd933, %rd934;
	shf.l.wrap.b32 	%r567, %r561, %r562, 23;
	shf.l.wrap.b32 	%r568, %r562, %r561, 23;
	mov.b64 	%rd936, {%r568, %r567};
	xor.b64  	%rd937, %rd935, %rd936;
	add.s64 	%rd938, %rd932, %rd937;
	add.s64 	%rd939, %rd938, -4658551843659510044;
	add.s64 	%rd940, %rd939, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd919;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 28;
	shf.r.wrap.b32 	%r572, %r569, %r570, 28;
	mov.b64 	%rd941, {%r572, %r571};
	shf.l.wrap.b32 	%r573, %r569, %r570, 30;
	shf.l.wrap.b32 	%r574, %r570, %r569, 30;
	mov.b64 	%rd942, {%r574, %r573};
	xor.b64  	%rd943, %rd941, %rd942;
	shf.l.wrap.b32 	%r575, %r569, %r570, 25;
	shf.l.wrap.b32 	%r576, %r570, %r569, 25;
	mov.b64 	%rd944, {%r576, %r575};
	xor.b64  	%rd945, %rd943, %rd944;
	and.b64  	%rd946, %rd919, %rd887;
	or.b64  	%rd947, %rd919, %rd887;
	and.b64  	%rd948, %rd947, %rd855;
	or.b64  	%rd949, %rd948, %rd946;
	add.s64 	%rd950, %rd949, %rd945;
	add.s64 	%rd951, %rd950, %rd939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd895;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 19;
	shf.r.wrap.b32 	%r580, %r577, %r578, 19;
	mov.b64 	%rd952, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 3;
	shf.l.wrap.b32 	%r582, %r578, %r577, 3;
	mov.b64 	%rd953, {%r582, %r581};
	xor.b64  	%rd954, %rd952, %rd953;
	shr.u64 	%rd955, %rd895, 6;
	xor.b64  	%rd956, %rd954, %rd955;
	add.s64 	%rd957, %rd956, %rd726;
	add.s64 	%rd958, %rd957, %rd796;
	add.s64 	%rd959, %rd958, 3906369333256140342;
	add.s64 	%rd960, %rd959, %rd844;
	xor.b64  	%rd961, %rd908, %rd876;
	and.b64  	%rd962, %rd940, %rd961;
	xor.b64  	%rd963, %rd962, %rd876;
	add.s64 	%rd964, %rd960, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd940;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 14;
	shf.r.wrap.b32 	%r586, %r583, %r584, 14;
	mov.b64 	%rd965, {%r586, %r585};
	shf.r.wrap.b32 	%r587, %r584, %r583, 18;
	shf.r.wrap.b32 	%r588, %r583, %r584, 18;
	mov.b64 	%rd966, {%r588, %r587};
	xor.b64  	%rd967, %rd965, %rd966;
	shf.l.wrap.b32 	%r589, %r583, %r584, 23;
	shf.l.wrap.b32 	%r590, %r584, %r583, 23;
	mov.b64 	%rd968, {%r590, %r589};
	xor.b64  	%rd969, %rd967, %rd968;
	add.s64 	%rd970, %rd964, %rd969;
	add.s64 	%rd971, %rd970, -4116276920077217854;
	add.s64 	%rd972, %rd971, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd951;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 28;
	shf.r.wrap.b32 	%r594, %r591, %r592, 28;
	mov.b64 	%rd973, {%r594, %r593};
	shf.l.wrap.b32 	%r595, %r591, %r592, 30;
	shf.l.wrap.b32 	%r596, %r592, %r591, 30;
	mov.b64 	%rd974, {%r596, %r595};
	xor.b64  	%rd975, %rd973, %rd974;
	shf.l.wrap.b32 	%r597, %r591, %r592, 25;
	shf.l.wrap.b32 	%r598, %r592, %r591, 25;
	mov.b64 	%rd976, {%r598, %r597};
	xor.b64  	%rd977, %rd975, %rd976;
	and.b64  	%rd978, %rd951, %rd919;
	or.b64  	%rd979, %rd951, %rd919;
	and.b64  	%rd980, %rd979, %rd887;
	or.b64  	%rd981, %rd980, %rd978;
	add.s64 	%rd982, %rd981, %rd977;
	add.s64 	%rd983, %rd982, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd927;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 19;
	shf.r.wrap.b32 	%r602, %r599, %r600, 19;
	mov.b64 	%rd984, {%r602, %r601};
	shf.l.wrap.b32 	%r603, %r599, %r600, 3;
	shf.l.wrap.b32 	%r604, %r600, %r599, 3;
	mov.b64 	%rd985, {%r604, %r603};
	xor.b64  	%rd986, %rd984, %rd985;
	shr.u64 	%rd987, %rd927, 6;
	xor.b64  	%rd988, %rd986, %rd987;
	add.s64 	%rd989, %rd988, %rd763;
	add.s64 	%rd990, %rd989, %rd796;
	add.s64 	%rd991, %rd990, 3906369333256140342;
	add.s64 	%rd992, %rd991, %rd876;
	xor.b64  	%rd993, %rd940, %rd908;
	and.b64  	%rd994, %rd972, %rd993;
	xor.b64  	%rd995, %rd994, %rd908;
	add.s64 	%rd996, %rd992, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r606}, %rd972;
	}
	shf.r.wrap.b32 	%r607, %r606, %r605, 14;
	shf.r.wrap.b32 	%r608, %r605, %r606, 14;
	mov.b64 	%rd997, {%r608, %r607};
	shf.r.wrap.b32 	%r609, %r606, %r605, 18;
	shf.r.wrap.b32 	%r610, %r605, %r606, 18;
	mov.b64 	%rd998, {%r610, %r609};
	xor.b64  	%rd999, %rd997, %rd998;
	shf.l.wrap.b32 	%r611, %r605, %r606, 23;
	shf.l.wrap.b32 	%r612, %r606, %r605, 23;
	mov.b64 	%rd1000, {%r612, %r611};
	xor.b64  	%rd1001, %rd999, %rd1000;
	add.s64 	%rd1002, %rd996, %rd1001;
	add.s64 	%rd1003, %rd1002, -3051310485924567259;
	add.s64 	%rd1004, %rd1003, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r614}, %rd983;
	}
	shf.r.wrap.b32 	%r615, %r614, %r613, 28;
	shf.r.wrap.b32 	%r616, %r613, %r614, 28;
	mov.b64 	%rd1005, {%r616, %r615};
	shf.l.wrap.b32 	%r617, %r613, %r614, 30;
	shf.l.wrap.b32 	%r618, %r614, %r613, 30;
	mov.b64 	%rd1006, {%r618, %r617};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	shf.l.wrap.b32 	%r619, %r613, %r614, 25;
	shf.l.wrap.b32 	%r620, %r614, %r613, 25;
	mov.b64 	%rd1008, {%r620, %r619};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	and.b64  	%rd1010, %rd983, %rd951;
	or.b64  	%rd1011, %rd983, %rd951;
	and.b64  	%rd1012, %rd1011, %rd919;
	or.b64  	%rd1013, %rd1012, %rd1010;
	add.s64 	%rd1014, %rd1013, %rd1009;
	add.s64 	%rd1015, %rd1014, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd959;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 19;
	shf.r.wrap.b32 	%r624, %r621, %r622, 19;
	mov.b64 	%rd1016, {%r624, %r623};
	shf.l.wrap.b32 	%r625, %r621, %r622, 3;
	shf.l.wrap.b32 	%r626, %r622, %r621, 3;
	mov.b64 	%rd1017, {%r626, %r625};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	shr.u64 	%rd1019, %rd959, 6;
	xor.b64  	%rd1020, %rd1018, %rd1019;
	add.s64 	%rd1021, %rd1020, %rd799;
	add.s64 	%rd1022, %rd1021, %rd796;
	add.s64 	%rd1023, %rd1022, 3906369333256140342;
	add.s64 	%rd1024, %rd1023, %rd908;
	xor.b64  	%rd1025, %rd972, %rd940;
	and.b64  	%rd1026, %rd1004, %rd1025;
	xor.b64  	%rd1027, %rd1026, %rd940;
	add.s64 	%rd1028, %rd1024, %rd1027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd1004;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 14;
	shf.r.wrap.b32 	%r630, %r627, %r628, 14;
	mov.b64 	%rd1029, {%r630, %r629};
	shf.r.wrap.b32 	%r631, %r628, %r627, 18;
	shf.r.wrap.b32 	%r632, %r627, %r628, 18;
	mov.b64 	%rd1030, {%r632, %r631};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	shf.l.wrap.b32 	%r633, %r627, %r628, 23;
	shf.l.wrap.b32 	%r634, %r628, %r627, 23;
	mov.b64 	%rd1032, {%r634, %r633};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	add.s64 	%rd1034, %rd1028, %rd1033;
	add.s64 	%rd1035, %rd1034, 489312712824947311;
	add.s64 	%rd1036, %rd1035, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd1015;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 28;
	shf.r.wrap.b32 	%r638, %r635, %r636, 28;
	mov.b64 	%rd1037, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 30;
	shf.l.wrap.b32 	%r640, %r636, %r635, 30;
	mov.b64 	%rd1038, {%r640, %r639};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	shf.l.wrap.b32 	%r641, %r635, %r636, 25;
	shf.l.wrap.b32 	%r642, %r636, %r635, 25;
	mov.b64 	%rd1040, {%r642, %r641};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	and.b64  	%rd1042, %rd1015, %rd983;
	or.b64  	%rd1043, %rd1015, %rd983;
	and.b64  	%rd1044, %rd1043, %rd951;
	or.b64  	%rd1045, %rd1044, %rd1042;
	add.s64 	%rd1046, %rd1045, %rd1041;
	add.s64 	%rd1047, %rd1046, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd991;
	}
	shf.r.wrap.b32 	%r645, %r644, %r643, 19;
	shf.r.wrap.b32 	%r646, %r643, %r644, 19;
	mov.b64 	%rd1048, {%r646, %r645};
	shf.l.wrap.b32 	%r647, %r643, %r644, 3;
	shf.l.wrap.b32 	%r648, %r644, %r643, 3;
	mov.b64 	%rd1049, {%r648, %r647};
	xor.b64  	%rd1050, %rd1048, %rd1049;
	shr.u64 	%rd1051, %rd991, 6;
	xor.b64  	%rd1052, %rd1050, %rd1051;
	shf.r.wrap.b32 	%r649, %r324, %r323, 1;
	shf.r.wrap.b32 	%r650, %r323, %r324, 1;
	mov.b64 	%rd1053, {%r650, %r649};
	shf.r.wrap.b32 	%r651, %r324, %r323, 8;
	shf.r.wrap.b32 	%r652, %r323, %r324, 8;
	mov.b64 	%rd1054, {%r652, %r651};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	shr.u64 	%rd1056, %rd546, 7;
	xor.b64  	%rd1057, %rd1055, %rd1056;
	add.s64 	%rd1058, %rd1052, %rd831;
	add.s64 	%rd1059, %rd1058, %rd1057;
	add.s64 	%rd1060, %rd1059, 3906369333256140342;
	add.s64 	%rd1061, %rd1060, %rd940;
	xor.b64  	%rd1062, %rd1004, %rd972;
	and.b64  	%rd1063, %rd1036, %rd1062;
	xor.b64  	%rd1064, %rd1063, %rd972;
	add.s64 	%rd1065, %rd1061, %rd1064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd1036;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 14;
	shf.r.wrap.b32 	%r656, %r653, %r654, 14;
	mov.b64 	%rd1066, {%r656, %r655};
	shf.r.wrap.b32 	%r657, %r654, %r653, 18;
	shf.r.wrap.b32 	%r658, %r653, %r654, 18;
	mov.b64 	%rd1067, {%r658, %r657};
	xor.b64  	%rd1068, %rd1066, %rd1067;
	shf.l.wrap.b32 	%r659, %r653, %r654, 23;
	shf.l.wrap.b32 	%r660, %r654, %r653, 23;
	mov.b64 	%rd1069, {%r660, %r659};
	xor.b64  	%rd1070, %rd1068, %rd1069;
	add.s64 	%rd1071, %rd1065, %rd1070;
	add.s64 	%rd1072, %rd1071, 1452737877330783856;
	add.s64 	%rd1073, %rd1072, %rd951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd1047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd1047;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 28;
	shf.r.wrap.b32 	%r664, %r661, %r662, 28;
	mov.b64 	%rd1074, {%r664, %r663};
	shf.l.wrap.b32 	%r665, %r661, %r662, 30;
	shf.l.wrap.b32 	%r666, %r662, %r661, 30;
	mov.b64 	%rd1075, {%r666, %r665};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	shf.l.wrap.b32 	%r667, %r661, %r662, 25;
	shf.l.wrap.b32 	%r668, %r662, %r661, 25;
	mov.b64 	%rd1077, {%r668, %r667};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	and.b64  	%rd1079, %rd1047, %rd1015;
	or.b64  	%rd1080, %rd1047, %rd1015;
	and.b64  	%rd1081, %rd1080, %rd983;
	or.b64  	%rd1082, %rd1081, %rd1079;
	add.s64 	%rd1083, %rd1082, %rd1078;
	add.s64 	%rd1084, %rd1083, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1023;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 19;
	shf.r.wrap.b32 	%r672, %r669, %r670, 19;
	mov.b64 	%rd1085, {%r672, %r671};
	shf.l.wrap.b32 	%r673, %r669, %r670, 3;
	shf.l.wrap.b32 	%r674, %r670, %r669, 3;
	mov.b64 	%rd1086, {%r674, %r673};
	xor.b64  	%rd1087, %rd1085, %rd1086;
	shr.u64 	%rd1088, %rd1023, 6;
	xor.b64  	%rd1089, %rd1087, %rd1088;
	shf.r.wrap.b32 	%r675, %r352, %r351, 1;
	shf.r.wrap.b32 	%r676, %r351, %r352, 1;
	mov.b64 	%rd1090, {%r676, %r675};
	shf.r.wrap.b32 	%r677, %r352, %r351, 8;
	shf.r.wrap.b32 	%r678, %r351, %r352, 8;
	mov.b64 	%rd1091, {%r678, %r677};
	xor.b64  	%rd1092, %rd1090, %rd1091;
	shr.u64 	%rd1093, %rd578, 7;
	xor.b64  	%rd1094, %rd1092, %rd1093;
	add.s64 	%rd1095, %rd1089, %rd546;
	add.s64 	%rd1096, %rd1095, %rd863;
	add.s64 	%rd1097, %rd1096, %rd1094;
	add.s64 	%rd1098, %rd1097, %rd972;
	xor.b64  	%rd1099, %rd1036, %rd1004;
	and.b64  	%rd1100, %rd1073, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1004;
	add.s64 	%rd1102, %rd1098, %rd1101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd1073;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 14;
	shf.r.wrap.b32 	%r682, %r679, %r680, 14;
	mov.b64 	%rd1103, {%r682, %r681};
	shf.r.wrap.b32 	%r683, %r680, %r679, 18;
	shf.r.wrap.b32 	%r684, %r679, %r680, 18;
	mov.b64 	%rd1104, {%r684, %r683};
	xor.b64  	%rd1105, %rd1103, %rd1104;
	shf.l.wrap.b32 	%r685, %r679, %r680, 23;
	shf.l.wrap.b32 	%r686, %r680, %r679, 23;
	mov.b64 	%rd1106, {%r686, %r685};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	add.s64 	%rd1108, %rd1102, %rd1107;
	add.s64 	%rd1109, %rd1108, 2861767655752347644;
	add.s64 	%rd1110, %rd1109, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd1084;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 28;
	shf.r.wrap.b32 	%r690, %r687, %r688, 28;
	mov.b64 	%rd1111, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 30;
	shf.l.wrap.b32 	%r692, %r688, %r687, 30;
	mov.b64 	%rd1112, {%r692, %r691};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	shf.l.wrap.b32 	%r693, %r687, %r688, 25;
	shf.l.wrap.b32 	%r694, %r688, %r687, 25;
	mov.b64 	%rd1114, {%r694, %r693};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	and.b64  	%rd1116, %rd1084, %rd1047;
	or.b64  	%rd1117, %rd1084, %rd1047;
	and.b64  	%rd1118, %rd1117, %rd1015;
	or.b64  	%rd1119, %rd1118, %rd1116;
	add.s64 	%rd1120, %rd1119, %rd1115;
	add.s64 	%rd1121, %rd1120, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd1060;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 19;
	shf.r.wrap.b32 	%r698, %r695, %r696, 19;
	mov.b64 	%rd1122, {%r698, %r697};
	shf.l.wrap.b32 	%r699, %r695, %r696, 3;
	shf.l.wrap.b32 	%r700, %r696, %r695, 3;
	mov.b64 	%rd1123, {%r700, %r699};
	xor.b64  	%rd1124, %rd1122, %rd1123;
	shr.u64 	%rd1125, %rd1060, 6;
	xor.b64  	%rd1126, %rd1124, %rd1125;
	shf.r.wrap.b32 	%r701, %r380, %r379, 1;
	shf.r.wrap.b32 	%r702, %r379, %r380, 1;
	mov.b64 	%rd1127, {%r702, %r701};
	shf.r.wrap.b32 	%r703, %r380, %r379, 8;
	shf.r.wrap.b32 	%r704, %r379, %r380, 8;
	mov.b64 	%rd1128, {%r704, %r703};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	shr.u64 	%rd1130, %rd615, 7;
	xor.b64  	%rd1131, %rd1129, %rd1130;
	add.s64 	%rd1132, %rd1126, %rd578;
	add.s64 	%rd1133, %rd1132, %rd895;
	add.s64 	%rd1134, %rd1133, %rd1131;
	add.s64 	%rd1135, %rd1134, %rd1004;
	xor.b64  	%rd1136, %rd1073, %rd1036;
	and.b64  	%rd1137, %rd1110, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1036;
	add.s64 	%rd1139, %rd1135, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1110;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 14;
	shf.r.wrap.b32 	%r708, %r705, %r706, 14;
	mov.b64 	%rd1140, {%r708, %r707};
	shf.r.wrap.b32 	%r709, %r706, %r705, 18;
	shf.r.wrap.b32 	%r710, %r705, %r706, 18;
	mov.b64 	%rd1141, {%r710, %r709};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	shf.l.wrap.b32 	%r711, %r705, %r706, 23;
	shf.l.wrap.b32 	%r712, %r706, %r705, 23;
	mov.b64 	%rd1143, {%r712, %r711};
	xor.b64  	%rd1144, %rd1142, %rd1143;
	add.s64 	%rd1145, %rd1139, %rd1144;
	add.s64 	%rd1146, %rd1145, 3322285676063803686;
	add.s64 	%rd1147, %rd1146, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd1121;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 28;
	shf.r.wrap.b32 	%r716, %r713, %r714, 28;
	mov.b64 	%rd1148, {%r716, %r715};
	shf.l.wrap.b32 	%r717, %r713, %r714, 30;
	shf.l.wrap.b32 	%r718, %r714, %r713, 30;
	mov.b64 	%rd1149, {%r718, %r717};
	xor.b64  	%rd1150, %rd1148, %rd1149;
	shf.l.wrap.b32 	%r719, %r713, %r714, 25;
	shf.l.wrap.b32 	%r720, %r714, %r713, 25;
	mov.b64 	%rd1151, {%r720, %r719};
	xor.b64  	%rd1152, %rd1150, %rd1151;
	and.b64  	%rd1153, %rd1121, %rd1084;
	or.b64  	%rd1154, %rd1121, %rd1084;
	and.b64  	%rd1155, %rd1154, %rd1047;
	or.b64  	%rd1156, %rd1155, %rd1153;
	add.s64 	%rd1157, %rd1156, %rd1152;
	add.s64 	%rd1158, %rd1157, %rd1146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1097;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 19;
	shf.r.wrap.b32 	%r724, %r721, %r722, 19;
	mov.b64 	%rd1159, {%r724, %r723};
	shf.l.wrap.b32 	%r725, %r721, %r722, 3;
	shf.l.wrap.b32 	%r726, %r722, %r721, 3;
	mov.b64 	%rd1160, {%r726, %r725};
	xor.b64  	%rd1161, %rd1159, %rd1160;
	shr.u64 	%rd1162, %rd1097, 6;
	xor.b64  	%rd1163, %rd1161, %rd1162;
	shf.r.wrap.b32 	%r727, %r408, %r407, 1;
	shf.r.wrap.b32 	%r728, %r407, %r408, 1;
	mov.b64 	%rd1164, {%r728, %r727};
	shf.r.wrap.b32 	%r729, %r408, %r407, 8;
	shf.r.wrap.b32 	%r730, %r407, %r408, 8;
	mov.b64 	%rd1165, {%r730, %r729};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	shr.u64 	%rd1167, %rd652, 7;
	xor.b64  	%rd1168, %rd1166, %rd1167;
	add.s64 	%rd1169, %rd1163, %rd615;
	add.s64 	%rd1170, %rd1169, %rd927;
	add.s64 	%rd1171, %rd1170, %rd1168;
	add.s64 	%rd1172, %rd1171, %rd1036;
	xor.b64  	%rd1173, %rd1110, %rd1073;
	and.b64  	%rd1174, %rd1147, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1073;
	add.s64 	%rd1176, %rd1172, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd1147;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 14;
	shf.r.wrap.b32 	%r734, %r731, %r732, 14;
	mov.b64 	%rd1177, {%r734, %r733};
	shf.r.wrap.b32 	%r735, %r732, %r731, 18;
	shf.r.wrap.b32 	%r736, %r731, %r732, 18;
	mov.b64 	%rd1178, {%r736, %r735};
	xor.b64  	%rd1179, %rd1177, %rd1178;
	shf.l.wrap.b32 	%r737, %r731, %r732, 23;
	shf.l.wrap.b32 	%r738, %r732, %r731, 23;
	mov.b64 	%rd1180, {%r738, %r737};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	add.s64 	%rd1182, %rd1176, %rd1181;
	add.s64 	%rd1183, %rd1182, 5560940570517711597;
	add.s64 	%rd1184, %rd1183, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1158;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 28;
	shf.r.wrap.b32 	%r742, %r739, %r740, 28;
	mov.b64 	%rd1185, {%r742, %r741};
	shf.l.wrap.b32 	%r743, %r739, %r740, 30;
	shf.l.wrap.b32 	%r744, %r740, %r739, 30;
	mov.b64 	%rd1186, {%r744, %r743};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	shf.l.wrap.b32 	%r745, %r739, %r740, 25;
	shf.l.wrap.b32 	%r746, %r740, %r739, 25;
	mov.b64 	%rd1188, {%r746, %r745};
	xor.b64  	%rd1189, %rd1187, %rd1188;
	and.b64  	%rd1190, %rd1158, %rd1121;
	or.b64  	%rd1191, %rd1158, %rd1121;
	and.b64  	%rd1192, %rd1191, %rd1084;
	or.b64  	%rd1193, %rd1192, %rd1190;
	add.s64 	%rd1194, %rd1193, %rd1189;
	add.s64 	%rd1195, %rd1194, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd1134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd1134;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 19;
	shf.r.wrap.b32 	%r750, %r747, %r748, 19;
	mov.b64 	%rd1196, {%r750, %r749};
	shf.l.wrap.b32 	%r751, %r747, %r748, 3;
	shf.l.wrap.b32 	%r752, %r748, %r747, 3;
	mov.b64 	%rd1197, {%r752, %r751};
	xor.b64  	%rd1198, %rd1196, %rd1197;
	shr.u64 	%rd1199, %rd1134, 6;
	xor.b64  	%rd1200, %rd1198, %rd1199;
	shf.r.wrap.b32 	%r753, %r436, %r435, 1;
	shf.r.wrap.b32 	%r754, %r435, %r436, 1;
	mov.b64 	%rd1201, {%r754, %r753};
	shf.r.wrap.b32 	%r755, %r436, %r435, 8;
	shf.r.wrap.b32 	%r756, %r435, %r436, 8;
	mov.b64 	%rd1202, {%r756, %r755};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	shr.u64 	%rd1204, %rd689, 7;
	xor.b64  	%rd1205, %rd1203, %rd1204;
	add.s64 	%rd1206, %rd1200, %rd652;
	add.s64 	%rd1207, %rd1206, %rd959;
	add.s64 	%rd1208, %rd1207, %rd1205;
	add.s64 	%rd1209, %rd1208, %rd1073;
	xor.b64  	%rd1210, %rd1147, %rd1110;
	and.b64  	%rd1211, %rd1184, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1110;
	add.s64 	%rd1213, %rd1209, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1184;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 14;
	shf.r.wrap.b32 	%r760, %r757, %r758, 14;
	mov.b64 	%rd1214, {%r760, %r759};
	shf.r.wrap.b32 	%r761, %r758, %r757, 18;
	shf.r.wrap.b32 	%r762, %r757, %r758, 18;
	mov.b64 	%rd1215, {%r762, %r761};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	shf.l.wrap.b32 	%r763, %r757, %r758, 23;
	shf.l.wrap.b32 	%r764, %r758, %r757, 23;
	mov.b64 	%rd1217, {%r764, %r763};
	xor.b64  	%rd1218, %rd1216, %rd1217;
	add.s64 	%rd1219, %rd1213, %rd1218;
	add.s64 	%rd1220, %rd1219, 5996557281743188959;
	add.s64 	%rd1221, %rd1220, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd1195;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 28;
	shf.r.wrap.b32 	%r768, %r765, %r766, 28;
	mov.b64 	%rd1222, {%r768, %r767};
	shf.l.wrap.b32 	%r769, %r765, %r766, 30;
	shf.l.wrap.b32 	%r770, %r766, %r765, 30;
	mov.b64 	%rd1223, {%r770, %r769};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	shf.l.wrap.b32 	%r771, %r765, %r766, 25;
	shf.l.wrap.b32 	%r772, %r766, %r765, 25;
	mov.b64 	%rd1225, {%r772, %r771};
	xor.b64  	%rd1226, %rd1224, %rd1225;
	and.b64  	%rd1227, %rd1195, %rd1158;
	or.b64  	%rd1228, %rd1195, %rd1158;
	and.b64  	%rd1229, %rd1228, %rd1121;
	or.b64  	%rd1230, %rd1229, %rd1227;
	add.s64 	%rd1231, %rd1230, %rd1226;
	add.s64 	%rd1232, %rd1231, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd1171;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 19;
	shf.r.wrap.b32 	%r776, %r773, %r774, 19;
	mov.b64 	%rd1233, {%r776, %r775};
	shf.l.wrap.b32 	%r777, %r773, %r774, 3;
	shf.l.wrap.b32 	%r778, %r774, %r773, 3;
	mov.b64 	%rd1234, {%r778, %r777};
	xor.b64  	%rd1235, %rd1233, %rd1234;
	shr.u64 	%rd1236, %rd1171, 6;
	xor.b64  	%rd1237, %rd1235, %rd1236;
	shf.r.wrap.b32 	%r779, %r464, %r463, 1;
	shf.r.wrap.b32 	%r780, %r463, %r464, 1;
	mov.b64 	%rd1238, {%r780, %r779};
	shf.r.wrap.b32 	%r781, %r464, %r463, 8;
	shf.r.wrap.b32 	%r782, %r463, %r464, 8;
	mov.b64 	%rd1239, {%r782, %r781};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	shr.u64 	%rd1241, %rd726, 7;
	xor.b64  	%rd1242, %rd1240, %rd1241;
	add.s64 	%rd1243, %rd1237, %rd689;
	add.s64 	%rd1244, %rd1243, %rd991;
	add.s64 	%rd1245, %rd1244, %rd1242;
	add.s64 	%rd1246, %rd1245, %rd1110;
	xor.b64  	%rd1247, %rd1184, %rd1147;
	and.b64  	%rd1248, %rd1221, %rd1247;
	xor.b64  	%rd1249, %rd1248, %rd1147;
	add.s64 	%rd1250, %rd1246, %rd1249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd1221;
	}
	shf.r.wrap.b32 	%r785, %r784, %r783, 14;
	shf.r.wrap.b32 	%r786, %r783, %r784, 14;
	mov.b64 	%rd1251, {%r786, %r785};
	shf.r.wrap.b32 	%r787, %r784, %r783, 18;
	shf.r.wrap.b32 	%r788, %r783, %r784, 18;
	mov.b64 	%rd1252, {%r788, %r787};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	shf.l.wrap.b32 	%r789, %r783, %r784, 23;
	shf.l.wrap.b32 	%r790, %r784, %r783, 23;
	mov.b64 	%rd1254, {%r790, %r789};
	xor.b64  	%rd1255, %rd1253, %rd1254;
	add.s64 	%rd1256, %rd1250, %rd1255;
	add.s64 	%rd1257, %rd1256, 7280758554555802590;
	add.s64 	%rd1258, %rd1257, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r791,%dummy}, %rd1232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r792}, %rd1232;
	}
	shf.r.wrap.b32 	%r793, %r792, %r791, 28;
	shf.r.wrap.b32 	%r794, %r791, %r792, 28;
	mov.b64 	%rd1259, {%r794, %r793};
	shf.l.wrap.b32 	%r795, %r791, %r792, 30;
	shf.l.wrap.b32 	%r796, %r792, %r791, 30;
	mov.b64 	%rd1260, {%r796, %r795};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	shf.l.wrap.b32 	%r797, %r791, %r792, 25;
	shf.l.wrap.b32 	%r798, %r792, %r791, 25;
	mov.b64 	%rd1262, {%r798, %r797};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	and.b64  	%rd1264, %rd1232, %rd1195;
	or.b64  	%rd1265, %rd1232, %rd1195;
	and.b64  	%rd1266, %rd1265, %rd1158;
	or.b64  	%rd1267, %rd1266, %rd1264;
	add.s64 	%rd1268, %rd1267, %rd1263;
	add.s64 	%rd1269, %rd1268, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r799,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd1208;
	}
	shf.r.wrap.b32 	%r801, %r800, %r799, 19;
	shf.r.wrap.b32 	%r802, %r799, %r800, 19;
	mov.b64 	%rd1270, {%r802, %r801};
	shf.l.wrap.b32 	%r803, %r799, %r800, 3;
	shf.l.wrap.b32 	%r804, %r800, %r799, 3;
	mov.b64 	%rd1271, {%r804, %r803};
	xor.b64  	%rd1272, %rd1270, %rd1271;
	shr.u64 	%rd1273, %rd1208, 6;
	xor.b64  	%rd1274, %rd1272, %rd1273;
	shf.r.wrap.b32 	%r805, %r490, %r489, 1;
	shf.r.wrap.b32 	%r806, %r489, %r490, 1;
	mov.b64 	%rd1275, {%r806, %r805};
	shf.r.wrap.b32 	%r807, %r490, %r489, 8;
	shf.r.wrap.b32 	%r808, %r489, %r490, 8;
	mov.b64 	%rd1276, {%r808, %r807};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	shr.u64 	%rd1278, %rd763, 7;
	xor.b64  	%rd1279, %rd1277, %rd1278;
	add.s64 	%rd1280, %rd1274, %rd726;
	add.s64 	%rd1281, %rd1280, %rd1023;
	add.s64 	%rd1282, %rd1281, %rd1279;
	add.s64 	%rd1283, %rd1282, %rd1147;
	xor.b64  	%rd1284, %rd1221, %rd1184;
	and.b64  	%rd1285, %rd1258, %rd1284;
	xor.b64  	%rd1286, %rd1285, %rd1184;
	add.s64 	%rd1287, %rd1283, %rd1286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r810}, %rd1258;
	}
	shf.r.wrap.b32 	%r811, %r810, %r809, 14;
	shf.r.wrap.b32 	%r812, %r809, %r810, 14;
	mov.b64 	%rd1288, {%r812, %r811};
	shf.r.wrap.b32 	%r813, %r810, %r809, 18;
	shf.r.wrap.b32 	%r814, %r809, %r810, 18;
	mov.b64 	%rd1289, {%r814, %r813};
	xor.b64  	%rd1290, %rd1288, %rd1289;
	shf.l.wrap.b32 	%r815, %r809, %r810, 23;
	shf.l.wrap.b32 	%r816, %r810, %r809, 23;
	mov.b64 	%rd1291, {%r816, %r815};
	xor.b64  	%rd1292, %rd1290, %rd1291;
	add.s64 	%rd1293, %rd1287, %rd1292;
	add.s64 	%rd1294, %rd1293, 8532644243296465576;
	add.s64 	%rd1295, %rd1294, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd1269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd1269;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 28;
	shf.r.wrap.b32 	%r820, %r817, %r818, 28;
	mov.b64 	%rd1296, {%r820, %r819};
	shf.l.wrap.b32 	%r821, %r817, %r818, 30;
	shf.l.wrap.b32 	%r822, %r818, %r817, 30;
	mov.b64 	%rd1297, {%r822, %r821};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shf.l.wrap.b32 	%r823, %r817, %r818, 25;
	shf.l.wrap.b32 	%r824, %r818, %r817, 25;
	mov.b64 	%rd1299, {%r824, %r823};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	and.b64  	%rd1301, %rd1269, %rd1232;
	or.b64  	%rd1302, %rd1269, %rd1232;
	and.b64  	%rd1303, %rd1302, %rd1195;
	or.b64  	%rd1304, %rd1303, %rd1301;
	add.s64 	%rd1305, %rd1304, %rd1300;
	add.s64 	%rd1306, %rd1305, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd1245;
	}
	shf.r.wrap.b32 	%r827, %r826, %r825, 19;
	shf.r.wrap.b32 	%r828, %r825, %r826, 19;
	mov.b64 	%rd1307, {%r828, %r827};
	shf.l.wrap.b32 	%r829, %r825, %r826, 3;
	shf.l.wrap.b32 	%r830, %r826, %r825, 3;
	mov.b64 	%rd1308, {%r830, %r829};
	xor.b64  	%rd1309, %rd1307, %rd1308;
	shr.u64 	%rd1310, %rd1245, 6;
	xor.b64  	%rd1311, %rd1309, %rd1310;
	shf.r.wrap.b32 	%r831, %r512, %r511, 1;
	shf.r.wrap.b32 	%r832, %r511, %r512, 1;
	mov.b64 	%rd1312, {%r832, %r831};
	shf.r.wrap.b32 	%r833, %r512, %r511, 8;
	shf.r.wrap.b32 	%r834, %r511, %r512, 8;
	mov.b64 	%rd1313, {%r834, %r833};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	shr.u64 	%rd1315, %rd799, 7;
	xor.b64  	%rd1316, %rd1314, %rd1315;
	add.s64 	%rd1317, %rd1311, %rd763;
	add.s64 	%rd1318, %rd1317, %rd1060;
	add.s64 	%rd1319, %rd1318, %rd1316;
	add.s64 	%rd1320, %rd1319, %rd1184;
	xor.b64  	%rd1321, %rd1258, %rd1221;
	and.b64  	%rd1322, %rd1295, %rd1321;
	xor.b64  	%rd1323, %rd1322, %rd1221;
	add.s64 	%rd1324, %rd1320, %rd1323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1295;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 14;
	shf.r.wrap.b32 	%r838, %r835, %r836, 14;
	mov.b64 	%rd1325, {%r838, %r837};
	shf.r.wrap.b32 	%r839, %r836, %r835, 18;
	shf.r.wrap.b32 	%r840, %r835, %r836, 18;
	mov.b64 	%rd1326, {%r840, %r839};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	shf.l.wrap.b32 	%r841, %r835, %r836, 23;
	shf.l.wrap.b32 	%r842, %r836, %r835, 23;
	mov.b64 	%rd1328, {%r842, %r841};
	xor.b64  	%rd1329, %rd1327, %rd1328;
	add.s64 	%rd1330, %rd1324, %rd1329;
	add.s64 	%rd1331, %rd1330, -9096487096722542874;
	add.s64 	%rd1332, %rd1331, %rd1195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd1306;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 28;
	shf.r.wrap.b32 	%r846, %r843, %r844, 28;
	mov.b64 	%rd1333, {%r846, %r845};
	shf.l.wrap.b32 	%r847, %r843, %r844, 30;
	shf.l.wrap.b32 	%r848, %r844, %r843, 30;
	mov.b64 	%rd1334, {%r848, %r847};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	shf.l.wrap.b32 	%r849, %r843, %r844, 25;
	shf.l.wrap.b32 	%r850, %r844, %r843, 25;
	mov.b64 	%rd1336, {%r850, %r849};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	and.b64  	%rd1338, %rd1306, %rd1269;
	or.b64  	%rd1339, %rd1306, %rd1269;
	and.b64  	%rd1340, %rd1339, %rd1232;
	or.b64  	%rd1341, %rd1340, %rd1338;
	add.s64 	%rd1342, %rd1341, %rd1337;
	add.s64 	%rd1343, %rd1342, %rd1331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r851,%dummy}, %rd1282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r852}, %rd1282;
	}
	shf.r.wrap.b32 	%r853, %r852, %r851, 19;
	shf.r.wrap.b32 	%r854, %r851, %r852, 19;
	mov.b64 	%rd1344, {%r854, %r853};
	shf.l.wrap.b32 	%r855, %r851, %r852, 3;
	shf.l.wrap.b32 	%r856, %r852, %r851, 3;
	mov.b64 	%rd1345, {%r856, %r855};
	xor.b64  	%rd1346, %rd1344, %rd1345;
	shr.u64 	%rd1347, %rd1282, 6;
	xor.b64  	%rd1348, %rd1346, %rd1347;
	shf.r.wrap.b32 	%r857, %r534, %r533, 1;
	shf.r.wrap.b32 	%r858, %r533, %r534, 1;
	mov.b64 	%rd1349, {%r858, %r857};
	shf.r.wrap.b32 	%r859, %r534, %r533, 8;
	shf.r.wrap.b32 	%r860, %r533, %r534, 8;
	mov.b64 	%rd1350, {%r860, %r859};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	shr.u64 	%rd1352, %rd831, 7;
	xor.b64  	%rd1353, %rd1351, %rd1352;
	add.s64 	%rd1354, %rd1348, %rd799;
	add.s64 	%rd1355, %rd1354, %rd1097;
	add.s64 	%rd1356, %rd1355, %rd1353;
	add.s64 	%rd1357, %rd1356, %rd1221;
	xor.b64  	%rd1358, %rd1295, %rd1258;
	and.b64  	%rd1359, %rd1332, %rd1358;
	xor.b64  	%rd1360, %rd1359, %rd1258;
	add.s64 	%rd1361, %rd1357, %rd1360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1332;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 14;
	shf.r.wrap.b32 	%r864, %r861, %r862, 14;
	mov.b64 	%rd1362, {%r864, %r863};
	shf.r.wrap.b32 	%r865, %r862, %r861, 18;
	shf.r.wrap.b32 	%r866, %r861, %r862, 18;
	mov.b64 	%rd1363, {%r866, %r865};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	shf.l.wrap.b32 	%r867, %r861, %r862, 23;
	shf.l.wrap.b32 	%r868, %r862, %r861, 23;
	mov.b64 	%rd1365, {%r868, %r867};
	xor.b64  	%rd1366, %rd1364, %rd1365;
	add.s64 	%rd1367, %rd1361, %rd1366;
	add.s64 	%rd1368, %rd1367, -7894198246740708037;
	add.s64 	%rd1369, %rd1368, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1343;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 28;
	shf.r.wrap.b32 	%r872, %r869, %r870, 28;
	mov.b64 	%rd1370, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 30;
	shf.l.wrap.b32 	%r874, %r870, %r869, 30;
	mov.b64 	%rd1371, {%r874, %r873};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	shf.l.wrap.b32 	%r875, %r869, %r870, 25;
	shf.l.wrap.b32 	%r876, %r870, %r869, 25;
	mov.b64 	%rd1373, {%r876, %r875};
	xor.b64  	%rd1374, %rd1372, %rd1373;
	and.b64  	%rd1375, %rd1343, %rd1306;
	or.b64  	%rd1376, %rd1343, %rd1306;
	and.b64  	%rd1377, %rd1376, %rd1269;
	or.b64  	%rd1378, %rd1377, %rd1375;
	add.s64 	%rd1379, %rd1378, %rd1374;
	add.s64 	%rd1380, %rd1379, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1319;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 19;
	shf.r.wrap.b32 	%r880, %r877, %r878, 19;
	mov.b64 	%rd1381, {%r880, %r879};
	shf.l.wrap.b32 	%r881, %r877, %r878, 3;
	shf.l.wrap.b32 	%r882, %r878, %r877, 3;
	mov.b64 	%rd1382, {%r882, %r881};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	shr.u64 	%rd1384, %rd1319, 6;
	xor.b64  	%rd1385, %rd1383, %rd1384;
	shf.r.wrap.b32 	%r883, %r556, %r555, 1;
	shf.r.wrap.b32 	%r884, %r555, %r556, 1;
	mov.b64 	%rd1386, {%r884, %r883};
	shf.r.wrap.b32 	%r885, %r556, %r555, 8;
	shf.r.wrap.b32 	%r886, %r555, %r556, 8;
	mov.b64 	%rd1387, {%r886, %r885};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	shr.u64 	%rd1389, %rd863, 7;
	xor.b64  	%rd1390, %rd1388, %rd1389;
	add.s64 	%rd1391, %rd1385, %rd831;
	add.s64 	%rd1392, %rd1391, %rd1134;
	add.s64 	%rd1393, %rd1392, %rd1390;
	add.s64 	%rd1394, %rd1393, %rd1258;
	xor.b64  	%rd1395, %rd1332, %rd1295;
	and.b64  	%rd1396, %rd1369, %rd1395;
	xor.b64  	%rd1397, %rd1396, %rd1295;
	add.s64 	%rd1398, %rd1394, %rd1397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1369;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 14;
	shf.r.wrap.b32 	%r890, %r887, %r888, 14;
	mov.b64 	%rd1399, {%r890, %r889};
	shf.r.wrap.b32 	%r891, %r888, %r887, 18;
	shf.r.wrap.b32 	%r892, %r887, %r888, 18;
	mov.b64 	%rd1400, {%r892, %r891};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	shf.l.wrap.b32 	%r893, %r887, %r888, 23;
	shf.l.wrap.b32 	%r894, %r888, %r887, 23;
	mov.b64 	%rd1402, {%r894, %r893};
	xor.b64  	%rd1403, %rd1401, %rd1402;
	add.s64 	%rd1404, %rd1398, %rd1403;
	add.s64 	%rd1405, %rd1404, -6719396339535248540;
	add.s64 	%rd1406, %rd1405, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1380;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 28;
	shf.r.wrap.b32 	%r898, %r895, %r896, 28;
	mov.b64 	%rd1407, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 30;
	shf.l.wrap.b32 	%r900, %r896, %r895, 30;
	mov.b64 	%rd1408, {%r900, %r899};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	shf.l.wrap.b32 	%r901, %r895, %r896, 25;
	shf.l.wrap.b32 	%r902, %r896, %r895, 25;
	mov.b64 	%rd1410, {%r902, %r901};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	and.b64  	%rd1412, %rd1380, %rd1343;
	or.b64  	%rd1413, %rd1380, %rd1343;
	and.b64  	%rd1414, %rd1413, %rd1306;
	or.b64  	%rd1415, %rd1414, %rd1412;
	add.s64 	%rd1416, %rd1415, %rd1411;
	add.s64 	%rd1417, %rd1416, %rd1405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd1356;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 19;
	shf.r.wrap.b32 	%r906, %r903, %r904, 19;
	mov.b64 	%rd1418, {%r906, %r905};
	shf.l.wrap.b32 	%r907, %r903, %r904, 3;
	shf.l.wrap.b32 	%r908, %r904, %r903, 3;
	mov.b64 	%rd1419, {%r908, %r907};
	xor.b64  	%rd1420, %rd1418, %rd1419;
	shr.u64 	%rd1421, %rd1356, 6;
	xor.b64  	%rd1422, %rd1420, %rd1421;
	shf.r.wrap.b32 	%r909, %r578, %r577, 1;
	shf.r.wrap.b32 	%r910, %r577, %r578, 1;
	mov.b64 	%rd1423, {%r910, %r909};
	shf.r.wrap.b32 	%r911, %r578, %r577, 8;
	shf.r.wrap.b32 	%r912, %r577, %r578, 8;
	mov.b64 	%rd1424, {%r912, %r911};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	shr.u64 	%rd1426, %rd895, 7;
	xor.b64  	%rd1427, %rd1425, %rd1426;
	add.s64 	%rd1428, %rd1422, %rd863;
	add.s64 	%rd1429, %rd1428, %rd1171;
	add.s64 	%rd1430, %rd1429, %rd1427;
	add.s64 	%rd1431, %rd1430, %rd1295;
	xor.b64  	%rd1432, %rd1369, %rd1332;
	and.b64  	%rd1433, %rd1406, %rd1432;
	xor.b64  	%rd1434, %rd1433, %rd1332;
	add.s64 	%rd1435, %rd1431, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1406;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 14;
	shf.r.wrap.b32 	%r916, %r913, %r914, 14;
	mov.b64 	%rd1436, {%r916, %r915};
	shf.r.wrap.b32 	%r917, %r914, %r913, 18;
	shf.r.wrap.b32 	%r918, %r913, %r914, 18;
	mov.b64 	%rd1437, {%r918, %r917};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	shf.l.wrap.b32 	%r919, %r913, %r914, 23;
	shf.l.wrap.b32 	%r920, %r914, %r913, 23;
	mov.b64 	%rd1439, {%r920, %r919};
	xor.b64  	%rd1440, %rd1438, %rd1439;
	add.s64 	%rd1441, %rd1435, %rd1440;
	add.s64 	%rd1442, %rd1441, -6333637450476146687;
	add.s64 	%rd1443, %rd1442, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r921,%dummy}, %rd1417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r922}, %rd1417;
	}
	shf.r.wrap.b32 	%r923, %r922, %r921, 28;
	shf.r.wrap.b32 	%r924, %r921, %r922, 28;
	mov.b64 	%rd1444, {%r924, %r923};
	shf.l.wrap.b32 	%r925, %r921, %r922, 30;
	shf.l.wrap.b32 	%r926, %r922, %r921, 30;
	mov.b64 	%rd1445, {%r926, %r925};
	xor.b64  	%rd1446, %rd1444, %rd1445;
	shf.l.wrap.b32 	%r927, %r921, %r922, 25;
	shf.l.wrap.b32 	%r928, %r922, %r921, 25;
	mov.b64 	%rd1447, {%r928, %r927};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	and.b64  	%rd1449, %rd1417, %rd1380;
	or.b64  	%rd1450, %rd1417, %rd1380;
	and.b64  	%rd1451, %rd1450, %rd1343;
	or.b64  	%rd1452, %rd1451, %rd1449;
	add.s64 	%rd1453, %rd1452, %rd1448;
	add.s64 	%rd1454, %rd1453, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r929,%dummy}, %rd1393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r930}, %rd1393;
	}
	shf.r.wrap.b32 	%r931, %r930, %r929, 19;
	shf.r.wrap.b32 	%r932, %r929, %r930, 19;
	mov.b64 	%rd1455, {%r932, %r931};
	shf.l.wrap.b32 	%r933, %r929, %r930, 3;
	shf.l.wrap.b32 	%r934, %r930, %r929, 3;
	mov.b64 	%rd1456, {%r934, %r933};
	xor.b64  	%rd1457, %rd1455, %rd1456;
	shr.u64 	%rd1458, %rd1393, 6;
	xor.b64  	%rd1459, %rd1457, %rd1458;
	shf.r.wrap.b32 	%r935, %r600, %r599, 1;
	shf.r.wrap.b32 	%r936, %r599, %r600, 1;
	mov.b64 	%rd1460, {%r936, %r935};
	shf.r.wrap.b32 	%r937, %r600, %r599, 8;
	shf.r.wrap.b32 	%r938, %r599, %r600, 8;
	mov.b64 	%rd1461, {%r938, %r937};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	shr.u64 	%rd1463, %rd927, 7;
	xor.b64  	%rd1464, %rd1462, %rd1463;
	add.s64 	%rd1465, %rd1459, %rd895;
	add.s64 	%rd1466, %rd1465, %rd1208;
	add.s64 	%rd1467, %rd1466, %rd1464;
	add.s64 	%rd1468, %rd1467, %rd1332;
	xor.b64  	%rd1469, %rd1406, %rd1369;
	and.b64  	%rd1470, %rd1443, %rd1469;
	xor.b64  	%rd1471, %rd1470, %rd1369;
	add.s64 	%rd1472, %rd1468, %rd1471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd1443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd1443;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 14;
	shf.r.wrap.b32 	%r942, %r939, %r940, 14;
	mov.b64 	%rd1473, {%r942, %r941};
	shf.r.wrap.b32 	%r943, %r940, %r939, 18;
	shf.r.wrap.b32 	%r944, %r939, %r940, 18;
	mov.b64 	%rd1474, {%r944, %r943};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	shf.l.wrap.b32 	%r945, %r939, %r940, 23;
	shf.l.wrap.b32 	%r946, %r940, %r939, 23;
	mov.b64 	%rd1476, {%r946, %r945};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	add.s64 	%rd1478, %rd1472, %rd1477;
	add.s64 	%rd1479, %rd1478, -4446306890439682159;
	add.s64 	%rd1480, %rd1479, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd1454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd1454;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 28;
	shf.r.wrap.b32 	%r950, %r947, %r948, 28;
	mov.b64 	%rd1481, {%r950, %r949};
	shf.l.wrap.b32 	%r951, %r947, %r948, 30;
	shf.l.wrap.b32 	%r952, %r948, %r947, 30;
	mov.b64 	%rd1482, {%r952, %r951};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	shf.l.wrap.b32 	%r953, %r947, %r948, 25;
	shf.l.wrap.b32 	%r954, %r948, %r947, 25;
	mov.b64 	%rd1484, {%r954, %r953};
	xor.b64  	%rd1485, %rd1483, %rd1484;
	and.b64  	%rd1486, %rd1454, %rd1417;
	or.b64  	%rd1487, %rd1454, %rd1417;
	and.b64  	%rd1488, %rd1487, %rd1380;
	or.b64  	%rd1489, %rd1488, %rd1486;
	add.s64 	%rd1490, %rd1489, %rd1485;
	add.s64 	%rd1491, %rd1490, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r955,%dummy}, %rd1430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r956}, %rd1430;
	}
	shf.r.wrap.b32 	%r957, %r956, %r955, 19;
	shf.r.wrap.b32 	%r958, %r955, %r956, 19;
	mov.b64 	%rd1492, {%r958, %r957};
	shf.l.wrap.b32 	%r959, %r955, %r956, 3;
	shf.l.wrap.b32 	%r960, %r956, %r955, 3;
	mov.b64 	%rd1493, {%r960, %r959};
	xor.b64  	%rd1494, %rd1492, %rd1493;
	shr.u64 	%rd1495, %rd1430, 6;
	xor.b64  	%rd1496, %rd1494, %rd1495;
	shf.r.wrap.b32 	%r961, %r622, %r621, 1;
	shf.r.wrap.b32 	%r962, %r621, %r622, 1;
	mov.b64 	%rd1497, {%r962, %r961};
	shf.r.wrap.b32 	%r963, %r622, %r621, 8;
	shf.r.wrap.b32 	%r964, %r621, %r622, 8;
	mov.b64 	%rd1498, {%r964, %r963};
	xor.b64  	%rd1499, %rd1497, %rd1498;
	shr.u64 	%rd1500, %rd959, 7;
	xor.b64  	%rd1501, %rd1499, %rd1500;
	add.s64 	%rd1502, %rd1496, %rd927;
	add.s64 	%rd1503, %rd1502, %rd1245;
	add.s64 	%rd1504, %rd1503, %rd1501;
	add.s64 	%rd1505, %rd1504, %rd1369;
	xor.b64  	%rd1506, %rd1443, %rd1406;
	and.b64  	%rd1507, %rd1480, %rd1506;
	xor.b64  	%rd1508, %rd1507, %rd1406;
	add.s64 	%rd1509, %rd1505, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1480;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 14;
	shf.r.wrap.b32 	%r968, %r965, %r966, 14;
	mov.b64 	%rd1510, {%r968, %r967};
	shf.r.wrap.b32 	%r969, %r966, %r965, 18;
	shf.r.wrap.b32 	%r970, %r965, %r966, 18;
	mov.b64 	%rd1511, {%r970, %r969};
	xor.b64  	%rd1512, %rd1510, %rd1511;
	shf.l.wrap.b32 	%r971, %r965, %r966, 23;
	shf.l.wrap.b32 	%r972, %r966, %r965, 23;
	mov.b64 	%rd1513, {%r972, %r971};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	add.s64 	%rd1515, %rd1509, %rd1514;
	add.s64 	%rd1516, %rd1515, -4076793802049405392;
	add.s64 	%rd1517, %rd1516, %rd1380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1491;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 28;
	shf.r.wrap.b32 	%r976, %r973, %r974, 28;
	mov.b64 	%rd1518, {%r976, %r975};
	shf.l.wrap.b32 	%r977, %r973, %r974, 30;
	shf.l.wrap.b32 	%r978, %r974, %r973, 30;
	mov.b64 	%rd1519, {%r978, %r977};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	shf.l.wrap.b32 	%r979, %r973, %r974, 25;
	shf.l.wrap.b32 	%r980, %r974, %r973, 25;
	mov.b64 	%rd1521, {%r980, %r979};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	and.b64  	%rd1523, %rd1491, %rd1454;
	or.b64  	%rd1524, %rd1491, %rd1454;
	and.b64  	%rd1525, %rd1524, %rd1417;
	or.b64  	%rd1526, %rd1525, %rd1523;
	add.s64 	%rd1527, %rd1526, %rd1522;
	add.s64 	%rd1528, %rd1527, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1467;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 19;
	shf.r.wrap.b32 	%r984, %r981, %r982, 19;
	mov.b64 	%rd1529, {%r984, %r983};
	shf.l.wrap.b32 	%r985, %r981, %r982, 3;
	shf.l.wrap.b32 	%r986, %r982, %r981, 3;
	mov.b64 	%rd1530, {%r986, %r985};
	xor.b64  	%rd1531, %rd1529, %rd1530;
	shr.u64 	%rd1532, %rd1467, 6;
	xor.b64  	%rd1533, %rd1531, %rd1532;
	shf.r.wrap.b32 	%r987, %r644, %r643, 1;
	shf.r.wrap.b32 	%r988, %r643, %r644, 1;
	mov.b64 	%rd1534, {%r988, %r987};
	shf.r.wrap.b32 	%r989, %r644, %r643, 8;
	shf.r.wrap.b32 	%r990, %r643, %r644, 8;
	mov.b64 	%rd1535, {%r990, %r989};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	shr.u64 	%rd1537, %rd991, 7;
	xor.b64  	%rd1538, %rd1536, %rd1537;
	add.s64 	%rd1539, %rd1533, %rd959;
	add.s64 	%rd1540, %rd1539, %rd1282;
	add.s64 	%rd1541, %rd1540, %rd1538;
	add.s64 	%rd1542, %rd1541, %rd1406;
	xor.b64  	%rd1543, %rd1480, %rd1443;
	and.b64  	%rd1544, %rd1517, %rd1543;
	xor.b64  	%rd1545, %rd1544, %rd1443;
	add.s64 	%rd1546, %rd1542, %rd1545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1517;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 14;
	shf.r.wrap.b32 	%r994, %r991, %r992, 14;
	mov.b64 	%rd1547, {%r994, %r993};
	shf.r.wrap.b32 	%r995, %r992, %r991, 18;
	shf.r.wrap.b32 	%r996, %r991, %r992, 18;
	mov.b64 	%rd1548, {%r996, %r995};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	shf.l.wrap.b32 	%r997, %r991, %r992, 23;
	shf.l.wrap.b32 	%r998, %r992, %r991, 23;
	mov.b64 	%rd1550, {%r998, %r997};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	add.s64 	%rd1552, %rd1546, %rd1551;
	add.s64 	%rd1553, %rd1552, -3345356375505022440;
	add.s64 	%rd1554, %rd1553, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1528;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 28;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 28;
	mov.b64 	%rd1555, {%r1002, %r1001};
	shf.l.wrap.b32 	%r1003, %r999, %r1000, 30;
	shf.l.wrap.b32 	%r1004, %r1000, %r999, 30;
	mov.b64 	%rd1556, {%r1004, %r1003};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shf.l.wrap.b32 	%r1005, %r999, %r1000, 25;
	shf.l.wrap.b32 	%r1006, %r1000, %r999, 25;
	mov.b64 	%rd1558, {%r1006, %r1005};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	and.b64  	%rd1560, %rd1528, %rd1491;
	or.b64  	%rd1561, %rd1528, %rd1491;
	and.b64  	%rd1562, %rd1561, %rd1454;
	or.b64  	%rd1563, %rd1562, %rd1560;
	add.s64 	%rd1564, %rd1563, %rd1559;
	add.s64 	%rd1565, %rd1564, %rd1553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1504;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 19;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 19;
	mov.b64 	%rd1566, {%r1010, %r1009};
	shf.l.wrap.b32 	%r1011, %r1007, %r1008, 3;
	shf.l.wrap.b32 	%r1012, %r1008, %r1007, 3;
	mov.b64 	%rd1567, {%r1012, %r1011};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	shr.u64 	%rd1569, %rd1504, 6;
	xor.b64  	%rd1570, %rd1568, %rd1569;
	shf.r.wrap.b32 	%r1013, %r670, %r669, 1;
	shf.r.wrap.b32 	%r1014, %r669, %r670, 1;
	mov.b64 	%rd1571, {%r1014, %r1013};
	shf.r.wrap.b32 	%r1015, %r670, %r669, 8;
	shf.r.wrap.b32 	%r1016, %r669, %r670, 8;
	mov.b64 	%rd1572, {%r1016, %r1015};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	shr.u64 	%rd1574, %rd1023, 7;
	xor.b64  	%rd1575, %rd1573, %rd1574;
	add.s64 	%rd1576, %rd1570, %rd991;
	add.s64 	%rd1577, %rd1576, %rd1319;
	add.s64 	%rd1578, %rd1577, %rd1575;
	add.s64 	%rd1579, %rd1578, %rd1443;
	xor.b64  	%rd1580, %rd1517, %rd1480;
	and.b64  	%rd1581, %rd1554, %rd1580;
	xor.b64  	%rd1582, %rd1581, %rd1480;
	add.s64 	%rd1583, %rd1579, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd1554;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 14;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 14;
	mov.b64 	%rd1584, {%r1020, %r1019};
	shf.r.wrap.b32 	%r1021, %r1018, %r1017, 18;
	shf.r.wrap.b32 	%r1022, %r1017, %r1018, 18;
	mov.b64 	%rd1585, {%r1022, %r1021};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	shf.l.wrap.b32 	%r1023, %r1017, %r1018, 23;
	shf.l.wrap.b32 	%r1024, %r1018, %r1017, 23;
	mov.b64 	%rd1587, {%r1024, %r1023};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	add.s64 	%rd1589, %rd1583, %rd1588;
	add.s64 	%rd1590, %rd1589, -2983346525034927856;
	add.s64 	%rd1591, %rd1590, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd1565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd1565;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 28;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 28;
	mov.b64 	%rd1592, {%r1028, %r1027};
	shf.l.wrap.b32 	%r1029, %r1025, %r1026, 30;
	shf.l.wrap.b32 	%r1030, %r1026, %r1025, 30;
	mov.b64 	%rd1593, {%r1030, %r1029};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	shf.l.wrap.b32 	%r1031, %r1025, %r1026, 25;
	shf.l.wrap.b32 	%r1032, %r1026, %r1025, 25;
	mov.b64 	%rd1595, {%r1032, %r1031};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	and.b64  	%rd1597, %rd1565, %rd1528;
	or.b64  	%rd1598, %rd1565, %rd1528;
	and.b64  	%rd1599, %rd1598, %rd1491;
	or.b64  	%rd1600, %rd1599, %rd1597;
	add.s64 	%rd1601, %rd1600, %rd1596;
	add.s64 	%rd1602, %rd1601, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1033,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1034}, %rd1541;
	}
	shf.r.wrap.b32 	%r1035, %r1034, %r1033, 19;
	shf.r.wrap.b32 	%r1036, %r1033, %r1034, 19;
	mov.b64 	%rd1603, {%r1036, %r1035};
	shf.l.wrap.b32 	%r1037, %r1033, %r1034, 3;
	shf.l.wrap.b32 	%r1038, %r1034, %r1033, 3;
	mov.b64 	%rd1604, {%r1038, %r1037};
	xor.b64  	%rd1605, %rd1603, %rd1604;
	shr.u64 	%rd1606, %rd1541, 6;
	xor.b64  	%rd1607, %rd1605, %rd1606;
	shf.r.wrap.b32 	%r1039, %r696, %r695, 1;
	shf.r.wrap.b32 	%r1040, %r695, %r696, 1;
	mov.b64 	%rd1608, {%r1040, %r1039};
	shf.r.wrap.b32 	%r1041, %r696, %r695, 8;
	shf.r.wrap.b32 	%r1042, %r695, %r696, 8;
	mov.b64 	%rd1609, {%r1042, %r1041};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	shr.u64 	%rd1611, %rd1060, 7;
	xor.b64  	%rd1612, %rd1610, %rd1611;
	add.s64 	%rd1613, %rd1607, %rd1023;
	add.s64 	%rd1614, %rd1613, %rd1356;
	add.s64 	%rd1615, %rd1614, %rd1612;
	add.s64 	%rd1616, %rd1615, %rd1480;
	xor.b64  	%rd1617, %rd1554, %rd1517;
	and.b64  	%rd1618, %rd1591, %rd1617;
	xor.b64  	%rd1619, %rd1618, %rd1517;
	add.s64 	%rd1620, %rd1616, %rd1619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd1591;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 14;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 14;
	mov.b64 	%rd1621, {%r1046, %r1045};
	shf.r.wrap.b32 	%r1047, %r1044, %r1043, 18;
	shf.r.wrap.b32 	%r1048, %r1043, %r1044, 18;
	mov.b64 	%rd1622, {%r1048, %r1047};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	shf.l.wrap.b32 	%r1049, %r1043, %r1044, 23;
	shf.l.wrap.b32 	%r1050, %r1044, %r1043, 23;
	mov.b64 	%rd1624, {%r1050, %r1049};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	add.s64 	%rd1626, %rd1620, %rd1625;
	add.s64 	%rd1627, %rd1626, -860691631967231958;
	add.s64 	%rd1628, %rd1627, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd1602;
	}
	shf.r.wrap.b32 	%r1053, %r1052, %r1051, 28;
	shf.r.wrap.b32 	%r1054, %r1051, %r1052, 28;
	mov.b64 	%rd1629, {%r1054, %r1053};
	shf.l.wrap.b32 	%r1055, %r1051, %r1052, 30;
	shf.l.wrap.b32 	%r1056, %r1052, %r1051, 30;
	mov.b64 	%rd1630, {%r1056, %r1055};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	shf.l.wrap.b32 	%r1057, %r1051, %r1052, 25;
	shf.l.wrap.b32 	%r1058, %r1052, %r1051, 25;
	mov.b64 	%rd1632, {%r1058, %r1057};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	and.b64  	%rd1634, %rd1602, %rd1565;
	or.b64  	%rd1635, %rd1602, %rd1565;
	and.b64  	%rd1636, %rd1635, %rd1528;
	or.b64  	%rd1637, %rd1636, %rd1634;
	add.s64 	%rd1638, %rd1637, %rd1633;
	add.s64 	%rd1639, %rd1638, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1059,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1060}, %rd1578;
	}
	shf.r.wrap.b32 	%r1061, %r1060, %r1059, 19;
	shf.r.wrap.b32 	%r1062, %r1059, %r1060, 19;
	mov.b64 	%rd1640, {%r1062, %r1061};
	shf.l.wrap.b32 	%r1063, %r1059, %r1060, 3;
	shf.l.wrap.b32 	%r1064, %r1060, %r1059, 3;
	mov.b64 	%rd1641, {%r1064, %r1063};
	xor.b64  	%rd1642, %rd1640, %rd1641;
	shr.u64 	%rd1643, %rd1578, 6;
	xor.b64  	%rd1644, %rd1642, %rd1643;
	shf.r.wrap.b32 	%r1065, %r722, %r721, 1;
	shf.r.wrap.b32 	%r1066, %r721, %r722, 1;
	mov.b64 	%rd1645, {%r1066, %r1065};
	shf.r.wrap.b32 	%r1067, %r722, %r721, 8;
	shf.r.wrap.b32 	%r1068, %r721, %r722, 8;
	mov.b64 	%rd1646, {%r1068, %r1067};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	shr.u64 	%rd1648, %rd1097, 7;
	xor.b64  	%rd1649, %rd1647, %rd1648;
	add.s64 	%rd1650, %rd1644, %rd1060;
	add.s64 	%rd1651, %rd1650, %rd1393;
	add.s64 	%rd1652, %rd1651, %rd1649;
	add.s64 	%rd1653, %rd1652, %rd1517;
	xor.b64  	%rd1654, %rd1591, %rd1554;
	and.b64  	%rd1655, %rd1628, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1554;
	add.s64 	%rd1657, %rd1653, %rd1656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1628;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 14;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 14;
	mov.b64 	%rd1658, {%r1072, %r1071};
	shf.r.wrap.b32 	%r1073, %r1070, %r1069, 18;
	shf.r.wrap.b32 	%r1074, %r1069, %r1070, 18;
	mov.b64 	%rd1659, {%r1074, %r1073};
	xor.b64  	%rd1660, %rd1658, %rd1659;
	shf.l.wrap.b32 	%r1075, %r1069, %r1070, 23;
	shf.l.wrap.b32 	%r1076, %r1070, %r1069, 23;
	mov.b64 	%rd1661, {%r1076, %r1075};
	xor.b64  	%rd1662, %rd1660, %rd1661;
	add.s64 	%rd1663, %rd1657, %rd1662;
	add.s64 	%rd1664, %rd1663, 1182934255886127544;
	add.s64 	%rd1665, %rd1664, %rd1528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd1639;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 28;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 28;
	mov.b64 	%rd1666, {%r1080, %r1079};
	shf.l.wrap.b32 	%r1081, %r1077, %r1078, 30;
	shf.l.wrap.b32 	%r1082, %r1078, %r1077, 30;
	mov.b64 	%rd1667, {%r1082, %r1081};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	shf.l.wrap.b32 	%r1083, %r1077, %r1078, 25;
	shf.l.wrap.b32 	%r1084, %r1078, %r1077, 25;
	mov.b64 	%rd1669, {%r1084, %r1083};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	and.b64  	%rd1671, %rd1639, %rd1602;
	or.b64  	%rd1672, %rd1639, %rd1602;
	and.b64  	%rd1673, %rd1672, %rd1565;
	or.b64  	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1674, %rd1670;
	add.s64 	%rd1676, %rd1675, %rd1664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1615;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 19;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 19;
	mov.b64 	%rd1677, {%r1088, %r1087};
	shf.l.wrap.b32 	%r1089, %r1085, %r1086, 3;
	shf.l.wrap.b32 	%r1090, %r1086, %r1085, 3;
	mov.b64 	%rd1678, {%r1090, %r1089};
	xor.b64  	%rd1679, %rd1677, %rd1678;
	shr.u64 	%rd1680, %rd1615, 6;
	xor.b64  	%rd1681, %rd1679, %rd1680;
	shf.r.wrap.b32 	%r1091, %r748, %r747, 1;
	shf.r.wrap.b32 	%r1092, %r747, %r748, 1;
	mov.b64 	%rd1682, {%r1092, %r1091};
	shf.r.wrap.b32 	%r1093, %r748, %r747, 8;
	shf.r.wrap.b32 	%r1094, %r747, %r748, 8;
	mov.b64 	%rd1683, {%r1094, %r1093};
	xor.b64  	%rd1684, %rd1682, %rd1683;
	shr.u64 	%rd1685, %rd1134, 7;
	xor.b64  	%rd1686, %rd1684, %rd1685;
	add.s64 	%rd1687, %rd1681, %rd1097;
	add.s64 	%rd1688, %rd1687, %rd1430;
	add.s64 	%rd1689, %rd1688, %rd1686;
	add.s64 	%rd1690, %rd1689, %rd1554;
	xor.b64  	%rd1691, %rd1628, %rd1591;
	and.b64  	%rd1692, %rd1665, %rd1691;
	xor.b64  	%rd1693, %rd1692, %rd1591;
	add.s64 	%rd1694, %rd1690, %rd1693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1665;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 14;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 14;
	mov.b64 	%rd1695, {%r1098, %r1097};
	shf.r.wrap.b32 	%r1099, %r1096, %r1095, 18;
	shf.r.wrap.b32 	%r1100, %r1095, %r1096, 18;
	mov.b64 	%rd1696, {%r1100, %r1099};
	xor.b64  	%rd1697, %rd1695, %rd1696;
	shf.l.wrap.b32 	%r1101, %r1095, %r1096, 23;
	shf.l.wrap.b32 	%r1102, %r1096, %r1095, 23;
	mov.b64 	%rd1698, {%r1102, %r1101};
	xor.b64  	%rd1699, %rd1697, %rd1698;
	add.s64 	%rd1700, %rd1694, %rd1699;
	add.s64 	%rd1701, %rd1700, 1847814050463011016;
	add.s64 	%rd1702, %rd1701, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1103,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd1676;
	}
	shf.r.wrap.b32 	%r1105, %r1104, %r1103, 28;
	shf.r.wrap.b32 	%r1106, %r1103, %r1104, 28;
	mov.b64 	%rd1703, {%r1106, %r1105};
	shf.l.wrap.b32 	%r1107, %r1103, %r1104, 30;
	shf.l.wrap.b32 	%r1108, %r1104, %r1103, 30;
	mov.b64 	%rd1704, {%r1108, %r1107};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	shf.l.wrap.b32 	%r1109, %r1103, %r1104, 25;
	shf.l.wrap.b32 	%r1110, %r1104, %r1103, 25;
	mov.b64 	%rd1706, {%r1110, %r1109};
	xor.b64  	%rd1707, %rd1705, %rd1706;
	and.b64  	%rd1708, %rd1676, %rd1639;
	or.b64  	%rd1709, %rd1676, %rd1639;
	and.b64  	%rd1710, %rd1709, %rd1602;
	or.b64  	%rd1711, %rd1710, %rd1708;
	add.s64 	%rd1712, %rd1711, %rd1707;
	add.s64 	%rd1713, %rd1712, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1111,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1112}, %rd1652;
	}
	shf.r.wrap.b32 	%r1113, %r1112, %r1111, 19;
	shf.r.wrap.b32 	%r1114, %r1111, %r1112, 19;
	mov.b64 	%rd1714, {%r1114, %r1113};
	shf.l.wrap.b32 	%r1115, %r1111, %r1112, 3;
	shf.l.wrap.b32 	%r1116, %r1112, %r1111, 3;
	mov.b64 	%rd1715, {%r1116, %r1115};
	xor.b64  	%rd1716, %rd1714, %rd1715;
	shr.u64 	%rd1717, %rd1652, 6;
	xor.b64  	%rd1718, %rd1716, %rd1717;
	shf.r.wrap.b32 	%r1117, %r774, %r773, 1;
	shf.r.wrap.b32 	%r1118, %r773, %r774, 1;
	mov.b64 	%rd1719, {%r1118, %r1117};
	shf.r.wrap.b32 	%r1119, %r774, %r773, 8;
	shf.r.wrap.b32 	%r1120, %r773, %r774, 8;
	mov.b64 	%rd1720, {%r1120, %r1119};
	xor.b64  	%rd1721, %rd1719, %rd1720;
	shr.u64 	%rd1722, %rd1171, 7;
	xor.b64  	%rd1723, %rd1721, %rd1722;
	add.s64 	%rd1724, %rd1718, %rd1134;
	add.s64 	%rd1725, %rd1724, %rd1467;
	add.s64 	%rd1726, %rd1725, %rd1723;
	add.s64 	%rd1727, %rd1726, %rd1591;
	xor.b64  	%rd1728, %rd1665, %rd1628;
	and.b64  	%rd1729, %rd1702, %rd1728;
	xor.b64  	%rd1730, %rd1729, %rd1628;
	add.s64 	%rd1731, %rd1727, %rd1730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd1702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd1702;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 14;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 14;
	mov.b64 	%rd1732, {%r1124, %r1123};
	shf.r.wrap.b32 	%r1125, %r1122, %r1121, 18;
	shf.r.wrap.b32 	%r1126, %r1121, %r1122, 18;
	mov.b64 	%rd1733, {%r1126, %r1125};
	xor.b64  	%rd1734, %rd1732, %rd1733;
	shf.l.wrap.b32 	%r1127, %r1121, %r1122, 23;
	shf.l.wrap.b32 	%r1128, %r1122, %r1121, 23;
	mov.b64 	%rd1735, {%r1128, %r1127};
	xor.b64  	%rd1736, %rd1734, %rd1735;
	add.s64 	%rd1737, %rd1731, %rd1736;
	add.s64 	%rd1738, %rd1737, 2177327727835720531;
	add.s64 	%rd1739, %rd1738, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd1713;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 28;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 28;
	mov.b64 	%rd1740, {%r1132, %r1131};
	shf.l.wrap.b32 	%r1133, %r1129, %r1130, 30;
	shf.l.wrap.b32 	%r1134, %r1130, %r1129, 30;
	mov.b64 	%rd1741, {%r1134, %r1133};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	shf.l.wrap.b32 	%r1135, %r1129, %r1130, 25;
	shf.l.wrap.b32 	%r1136, %r1130, %r1129, 25;
	mov.b64 	%rd1743, {%r1136, %r1135};
	xor.b64  	%rd1744, %rd1742, %rd1743;
	and.b64  	%rd1745, %rd1713, %rd1676;
	or.b64  	%rd1746, %rd1713, %rd1676;
	and.b64  	%rd1747, %rd1746, %rd1639;
	or.b64  	%rd1748, %rd1747, %rd1745;
	add.s64 	%rd1749, %rd1748, %rd1744;
	add.s64 	%rd1750, %rd1749, %rd1738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd1689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1138}, %rd1689;
	}
	shf.r.wrap.b32 	%r1139, %r1138, %r1137, 19;
	shf.r.wrap.b32 	%r1140, %r1137, %r1138, 19;
	mov.b64 	%rd1751, {%r1140, %r1139};
	shf.l.wrap.b32 	%r1141, %r1137, %r1138, 3;
	shf.l.wrap.b32 	%r1142, %r1138, %r1137, 3;
	mov.b64 	%rd1752, {%r1142, %r1141};
	xor.b64  	%rd1753, %rd1751, %rd1752;
	shr.u64 	%rd1754, %rd1689, 6;
	xor.b64  	%rd1755, %rd1753, %rd1754;
	shf.r.wrap.b32 	%r1143, %r800, %r799, 1;
	shf.r.wrap.b32 	%r1144, %r799, %r800, 1;
	mov.b64 	%rd1756, {%r1144, %r1143};
	shf.r.wrap.b32 	%r1145, %r800, %r799, 8;
	shf.r.wrap.b32 	%r1146, %r799, %r800, 8;
	mov.b64 	%rd1757, {%r1146, %r1145};
	xor.b64  	%rd1758, %rd1756, %rd1757;
	shr.u64 	%rd1759, %rd1208, 7;
	xor.b64  	%rd1760, %rd1758, %rd1759;
	add.s64 	%rd1761, %rd1755, %rd1171;
	add.s64 	%rd1762, %rd1761, %rd1504;
	add.s64 	%rd1763, %rd1762, %rd1760;
	add.s64 	%rd1764, %rd1763, %rd1628;
	xor.b64  	%rd1765, %rd1702, %rd1665;
	and.b64  	%rd1766, %rd1739, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1665;
	add.s64 	%rd1768, %rd1764, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd1739;
	}
	shf.r.wrap.b32 	%r1149, %r1148, %r1147, 14;
	shf.r.wrap.b32 	%r1150, %r1147, %r1148, 14;
	mov.b64 	%rd1769, {%r1150, %r1149};
	shf.r.wrap.b32 	%r1151, %r1148, %r1147, 18;
	shf.r.wrap.b32 	%r1152, %r1147, %r1148, 18;
	mov.b64 	%rd1770, {%r1152, %r1151};
	xor.b64  	%rd1771, %rd1769, %rd1770;
	shf.l.wrap.b32 	%r1153, %r1147, %r1148, 23;
	shf.l.wrap.b32 	%r1154, %r1148, %r1147, 23;
	mov.b64 	%rd1772, {%r1154, %r1153};
	xor.b64  	%rd1773, %rd1771, %rd1772;
	add.s64 	%rd1774, %rd1768, %rd1773;
	add.s64 	%rd1775, %rd1774, 2830643537854262169;
	add.s64 	%rd1776, %rd1775, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd1750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd1750;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 28;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 28;
	mov.b64 	%rd1777, {%r1158, %r1157};
	shf.l.wrap.b32 	%r1159, %r1155, %r1156, 30;
	shf.l.wrap.b32 	%r1160, %r1156, %r1155, 30;
	mov.b64 	%rd1778, {%r1160, %r1159};
	xor.b64  	%rd1779, %rd1777, %rd1778;
	shf.l.wrap.b32 	%r1161, %r1155, %r1156, 25;
	shf.l.wrap.b32 	%r1162, %r1156, %r1155, 25;
	mov.b64 	%rd1780, {%r1162, %r1161};
	xor.b64  	%rd1781, %rd1779, %rd1780;
	and.b64  	%rd1782, %rd1750, %rd1713;
	or.b64  	%rd1783, %rd1750, %rd1713;
	and.b64  	%rd1784, %rd1783, %rd1676;
	or.b64  	%rd1785, %rd1784, %rd1782;
	add.s64 	%rd1786, %rd1785, %rd1781;
	add.s64 	%rd1787, %rd1786, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd1726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd1726;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 19;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 19;
	mov.b64 	%rd1788, {%r1166, %r1165};
	shf.l.wrap.b32 	%r1167, %r1163, %r1164, 3;
	shf.l.wrap.b32 	%r1168, %r1164, %r1163, 3;
	mov.b64 	%rd1789, {%r1168, %r1167};
	xor.b64  	%rd1790, %rd1788, %rd1789;
	shr.u64 	%rd1791, %rd1726, 6;
	xor.b64  	%rd1792, %rd1790, %rd1791;
	shf.r.wrap.b32 	%r1169, %r826, %r825, 1;
	shf.r.wrap.b32 	%r1170, %r825, %r826, 1;
	mov.b64 	%rd1793, {%r1170, %r1169};
	shf.r.wrap.b32 	%r1171, %r826, %r825, 8;
	shf.r.wrap.b32 	%r1172, %r825, %r826, 8;
	mov.b64 	%rd1794, {%r1172, %r1171};
	xor.b64  	%rd1795, %rd1793, %rd1794;
	shr.u64 	%rd1796, %rd1245, 7;
	xor.b64  	%rd1797, %rd1795, %rd1796;
	add.s64 	%rd1798, %rd1792, %rd1208;
	add.s64 	%rd1799, %rd1798, %rd1541;
	add.s64 	%rd1800, %rd1799, %rd1797;
	add.s64 	%rd1801, %rd1800, %rd1665;
	xor.b64  	%rd1802, %rd1739, %rd1702;
	and.b64  	%rd1803, %rd1776, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1702;
	add.s64 	%rd1805, %rd1801, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1776;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 14;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 14;
	mov.b64 	%rd1806, {%r1176, %r1175};
	shf.r.wrap.b32 	%r1177, %r1174, %r1173, 18;
	shf.r.wrap.b32 	%r1178, %r1173, %r1174, 18;
	mov.b64 	%rd1807, {%r1178, %r1177};
	xor.b64  	%rd1808, %rd1806, %rd1807;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 23;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 23;
	mov.b64 	%rd1809, {%r1180, %r1179};
	xor.b64  	%rd1810, %rd1808, %rd1809;
	add.s64 	%rd1811, %rd1805, %rd1810;
	add.s64 	%rd1812, %rd1811, 3796741975233480872;
	add.s64 	%rd1813, %rd1812, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1787;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 28;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 28;
	mov.b64 	%rd1814, {%r1184, %r1183};
	shf.l.wrap.b32 	%r1185, %r1181, %r1182, 30;
	shf.l.wrap.b32 	%r1186, %r1182, %r1181, 30;
	mov.b64 	%rd1815, {%r1186, %r1185};
	xor.b64  	%rd1816, %rd1814, %rd1815;
	shf.l.wrap.b32 	%r1187, %r1181, %r1182, 25;
	shf.l.wrap.b32 	%r1188, %r1182, %r1181, 25;
	mov.b64 	%rd1817, {%r1188, %r1187};
	xor.b64  	%rd1818, %rd1816, %rd1817;
	and.b64  	%rd1819, %rd1787, %rd1750;
	or.b64  	%rd1820, %rd1787, %rd1750;
	and.b64  	%rd1821, %rd1820, %rd1713;
	or.b64  	%rd1822, %rd1821, %rd1819;
	add.s64 	%rd1823, %rd1822, %rd1818;
	add.s64 	%rd1824, %rd1823, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1763;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 19;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 19;
	mov.b64 	%rd1825, {%r1192, %r1191};
	shf.l.wrap.b32 	%r1193, %r1189, %r1190, 3;
	shf.l.wrap.b32 	%r1194, %r1190, %r1189, 3;
	mov.b64 	%rd1826, {%r1194, %r1193};
	xor.b64  	%rd1827, %rd1825, %rd1826;
	shr.u64 	%rd1828, %rd1763, 6;
	xor.b64  	%rd1829, %rd1827, %rd1828;
	shf.r.wrap.b32 	%r1195, %r852, %r851, 1;
	shf.r.wrap.b32 	%r1196, %r851, %r852, 1;
	mov.b64 	%rd1830, {%r1196, %r1195};
	shf.r.wrap.b32 	%r1197, %r852, %r851, 8;
	shf.r.wrap.b32 	%r1198, %r851, %r852, 8;
	mov.b64 	%rd1831, {%r1198, %r1197};
	xor.b64  	%rd1832, %rd1830, %rd1831;
	shr.u64 	%rd1833, %rd1282, 7;
	xor.b64  	%rd1834, %rd1832, %rd1833;
	add.s64 	%rd1835, %rd1829, %rd1245;
	add.s64 	%rd1836, %rd1835, %rd1578;
	add.s64 	%rd1837, %rd1836, %rd1834;
	add.s64 	%rd1838, %rd1837, %rd1702;
	xor.b64  	%rd1839, %rd1776, %rd1739;
	and.b64  	%rd1840, %rd1813, %rd1839;
	xor.b64  	%rd1841, %rd1840, %rd1739;
	add.s64 	%rd1842, %rd1838, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1813;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 14;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 14;
	mov.b64 	%rd1843, {%r1202, %r1201};
	shf.r.wrap.b32 	%r1203, %r1200, %r1199, 18;
	shf.r.wrap.b32 	%r1204, %r1199, %r1200, 18;
	mov.b64 	%rd1844, {%r1204, %r1203};
	xor.b64  	%rd1845, %rd1843, %rd1844;
	shf.l.wrap.b32 	%r1205, %r1199, %r1200, 23;
	shf.l.wrap.b32 	%r1206, %r1200, %r1199, 23;
	mov.b64 	%rd1846, {%r1206, %r1205};
	xor.b64  	%rd1847, %rd1845, %rd1846;
	add.s64 	%rd1848, %rd1842, %rd1847;
	add.s64 	%rd1849, %rd1848, 4115178125766777443;
	add.s64 	%rd1850, %rd1849, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1207,%dummy}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1208}, %rd1824;
	}
	shf.r.wrap.b32 	%r1209, %r1208, %r1207, 28;
	shf.r.wrap.b32 	%r1210, %r1207, %r1208, 28;
	mov.b64 	%rd1851, {%r1210, %r1209};
	shf.l.wrap.b32 	%r1211, %r1207, %r1208, 30;
	shf.l.wrap.b32 	%r1212, %r1208, %r1207, 30;
	mov.b64 	%rd1852, {%r1212, %r1211};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	shf.l.wrap.b32 	%r1213, %r1207, %r1208, 25;
	shf.l.wrap.b32 	%r1214, %r1208, %r1207, 25;
	mov.b64 	%rd1854, {%r1214, %r1213};
	xor.b64  	%rd1855, %rd1853, %rd1854;
	and.b64  	%rd1856, %rd1824, %rd1787;
	or.b64  	%rd1857, %rd1824, %rd1787;
	and.b64  	%rd1858, %rd1857, %rd1750;
	or.b64  	%rd1859, %rd1858, %rd1856;
	add.s64 	%rd1860, %rd1859, %rd1855;
	add.s64 	%rd1861, %rd1860, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1800;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 19;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 19;
	mov.b64 	%rd1862, {%r1218, %r1217};
	shf.l.wrap.b32 	%r1219, %r1215, %r1216, 3;
	shf.l.wrap.b32 	%r1220, %r1216, %r1215, 3;
	mov.b64 	%rd1863, {%r1220, %r1219};
	xor.b64  	%rd1864, %rd1862, %rd1863;
	shr.u64 	%rd1865, %rd1800, 6;
	xor.b64  	%rd1866, %rd1864, %rd1865;
	shf.r.wrap.b32 	%r1221, %r878, %r877, 1;
	shf.r.wrap.b32 	%r1222, %r877, %r878, 1;
	mov.b64 	%rd1867, {%r1222, %r1221};
	shf.r.wrap.b32 	%r1223, %r878, %r877, 8;
	shf.r.wrap.b32 	%r1224, %r877, %r878, 8;
	mov.b64 	%rd1868, {%r1224, %r1223};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	shr.u64 	%rd1870, %rd1319, 7;
	xor.b64  	%rd1871, %rd1869, %rd1870;
	add.s64 	%rd1872, %rd1866, %rd1282;
	add.s64 	%rd1873, %rd1872, %rd1615;
	add.s64 	%rd1874, %rd1873, %rd1871;
	add.s64 	%rd1875, %rd1874, %rd1739;
	xor.b64  	%rd1876, %rd1813, %rd1776;
	and.b64  	%rd1877, %rd1850, %rd1876;
	xor.b64  	%rd1878, %rd1877, %rd1776;
	add.s64 	%rd1879, %rd1875, %rd1878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1850;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 14;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 14;
	mov.b64 	%rd1880, {%r1228, %r1227};
	shf.r.wrap.b32 	%r1229, %r1226, %r1225, 18;
	shf.r.wrap.b32 	%r1230, %r1225, %r1226, 18;
	mov.b64 	%rd1881, {%r1230, %r1229};
	xor.b64  	%rd1882, %rd1880, %rd1881;
	shf.l.wrap.b32 	%r1231, %r1225, %r1226, 23;
	shf.l.wrap.b32 	%r1232, %r1226, %r1225, 23;
	mov.b64 	%rd1883, {%r1232, %r1231};
	xor.b64  	%rd1884, %rd1882, %rd1883;
	add.s64 	%rd1885, %rd1879, %rd1884;
	add.s64 	%rd1886, %rd1885, 5681478168544905931;
	add.s64 	%rd1887, %rd1886, %rd1750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd1861;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 28;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 28;
	mov.b64 	%rd1888, {%r1236, %r1235};
	shf.l.wrap.b32 	%r1237, %r1233, %r1234, 30;
	shf.l.wrap.b32 	%r1238, %r1234, %r1233, 30;
	mov.b64 	%rd1889, {%r1238, %r1237};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	shf.l.wrap.b32 	%r1239, %r1233, %r1234, 25;
	shf.l.wrap.b32 	%r1240, %r1234, %r1233, 25;
	mov.b64 	%rd1891, {%r1240, %r1239};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	and.b64  	%rd1893, %rd1861, %rd1824;
	or.b64  	%rd1894, %rd1861, %rd1824;
	and.b64  	%rd1895, %rd1894, %rd1787;
	or.b64  	%rd1896, %rd1895, %rd1893;
	add.s64 	%rd1897, %rd1896, %rd1892;
	add.s64 	%rd1898, %rd1897, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd1837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd1837;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 19;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 19;
	mov.b64 	%rd1899, {%r1244, %r1243};
	shf.l.wrap.b32 	%r1245, %r1241, %r1242, 3;
	shf.l.wrap.b32 	%r1246, %r1242, %r1241, 3;
	mov.b64 	%rd1900, {%r1246, %r1245};
	xor.b64  	%rd1901, %rd1899, %rd1900;
	shr.u64 	%rd1902, %rd1837, 6;
	xor.b64  	%rd1903, %rd1901, %rd1902;
	shf.r.wrap.b32 	%r1247, %r904, %r903, 1;
	shf.r.wrap.b32 	%r1248, %r903, %r904, 1;
	mov.b64 	%rd1904, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r904, %r903, 8;
	shf.r.wrap.b32 	%r1250, %r903, %r904, 8;
	mov.b64 	%rd1905, {%r1250, %r1249};
	xor.b64  	%rd1906, %rd1904, %rd1905;
	shr.u64 	%rd1907, %rd1356, 7;
	xor.b64  	%rd1908, %rd1906, %rd1907;
	add.s64 	%rd1909, %rd1903, %rd1319;
	add.s64 	%rd1910, %rd1909, %rd1652;
	add.s64 	%rd1911, %rd1910, %rd1908;
	add.s64 	%rd1912, %rd1911, %rd1776;
	xor.b64  	%rd1913, %rd1850, %rd1813;
	and.b64  	%rd1914, %rd1887, %rd1913;
	xor.b64  	%rd1915, %rd1914, %rd1813;
	add.s64 	%rd1916, %rd1912, %rd1915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1251,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1252}, %rd1887;
	}
	shf.r.wrap.b32 	%r1253, %r1252, %r1251, 14;
	shf.r.wrap.b32 	%r1254, %r1251, %r1252, 14;
	mov.b64 	%rd1917, {%r1254, %r1253};
	shf.r.wrap.b32 	%r1255, %r1252, %r1251, 18;
	shf.r.wrap.b32 	%r1256, %r1251, %r1252, 18;
	mov.b64 	%rd1918, {%r1256, %r1255};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	shf.l.wrap.b32 	%r1257, %r1251, %r1252, 23;
	shf.l.wrap.b32 	%r1258, %r1252, %r1251, 23;
	mov.b64 	%rd1920, {%r1258, %r1257};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	add.s64 	%rd1922, %rd1916, %rd1921;
	add.s64 	%rd1923, %rd1922, 6601373596472566643;
	add.s64 	%rd1924, %rd1923, %rd1787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1259,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1260}, %rd1898;
	}
	shf.r.wrap.b32 	%r1261, %r1260, %r1259, 28;
	shf.r.wrap.b32 	%r1262, %r1259, %r1260, 28;
	mov.b64 	%rd1925, {%r1262, %r1261};
	shf.l.wrap.b32 	%r1263, %r1259, %r1260, 30;
	shf.l.wrap.b32 	%r1264, %r1260, %r1259, 30;
	mov.b64 	%rd1926, {%r1264, %r1263};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	shf.l.wrap.b32 	%r1265, %r1259, %r1260, 25;
	shf.l.wrap.b32 	%r1266, %r1260, %r1259, 25;
	mov.b64 	%rd1928, {%r1266, %r1265};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	and.b64  	%rd1930, %rd1898, %rd1861;
	or.b64  	%rd1931, %rd1898, %rd1861;
	and.b64  	%rd1932, %rd1931, %rd1824;
	or.b64  	%rd1933, %rd1932, %rd1930;
	add.s64 	%rd1934, %rd1933, %rd1929;
	add.s64 	%rd1935, %rd1934, %rd1923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1267,%dummy}, %rd1874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1268}, %rd1874;
	}
	shf.r.wrap.b32 	%r1269, %r1268, %r1267, 19;
	shf.r.wrap.b32 	%r1270, %r1267, %r1268, 19;
	mov.b64 	%rd1936, {%r1270, %r1269};
	shf.l.wrap.b32 	%r1271, %r1267, %r1268, 3;
	shf.l.wrap.b32 	%r1272, %r1268, %r1267, 3;
	mov.b64 	%rd1937, {%r1272, %r1271};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	shr.u64 	%rd1939, %rd1874, 6;
	xor.b64  	%rd1940, %rd1938, %rd1939;
	shf.r.wrap.b32 	%r1273, %r930, %r929, 1;
	shf.r.wrap.b32 	%r1274, %r929, %r930, 1;
	mov.b64 	%rd1941, {%r1274, %r1273};
	shf.r.wrap.b32 	%r1275, %r930, %r929, 8;
	shf.r.wrap.b32 	%r1276, %r929, %r930, 8;
	mov.b64 	%rd1942, {%r1276, %r1275};
	xor.b64  	%rd1943, %rd1941, %rd1942;
	shr.u64 	%rd1944, %rd1393, 7;
	xor.b64  	%rd1945, %rd1943, %rd1944;
	add.s64 	%rd1946, %rd1940, %rd1356;
	add.s64 	%rd1947, %rd1946, %rd1689;
	add.s64 	%rd1948, %rd1947, %rd1945;
	add.s64 	%rd1949, %rd1948, %rd1813;
	xor.b64  	%rd1950, %rd1887, %rd1850;
	and.b64  	%rd1951, %rd1924, %rd1950;
	xor.b64  	%rd1952, %rd1951, %rd1850;
	add.s64 	%rd1953, %rd1949, %rd1952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1924;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 14;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 14;
	mov.b64 	%rd1954, {%r1280, %r1279};
	shf.r.wrap.b32 	%r1281, %r1278, %r1277, 18;
	shf.r.wrap.b32 	%r1282, %r1277, %r1278, 18;
	mov.b64 	%rd1955, {%r1282, %r1281};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 23;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 23;
	mov.b64 	%rd1957, {%r1284, %r1283};
	xor.b64  	%rd1958, %rd1956, %rd1957;
	add.s64 	%rd1959, %rd1953, %rd1958;
	add.s64 	%rd1960, %rd1959, 7507060721942968483;
	add.s64 	%rd1961, %rd1960, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1935;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 28;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 28;
	mov.b64 	%rd1962, {%r1288, %r1287};
	shf.l.wrap.b32 	%r1289, %r1285, %r1286, 30;
	shf.l.wrap.b32 	%r1290, %r1286, %r1285, 30;
	mov.b64 	%rd1963, {%r1290, %r1289};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	shf.l.wrap.b32 	%r1291, %r1285, %r1286, 25;
	shf.l.wrap.b32 	%r1292, %r1286, %r1285, 25;
	mov.b64 	%rd1965, {%r1292, %r1291};
	xor.b64  	%rd1966, %rd1964, %rd1965;
	and.b64  	%rd1967, %rd1935, %rd1898;
	or.b64  	%rd1968, %rd1935, %rd1898;
	and.b64  	%rd1969, %rd1968, %rd1861;
	or.b64  	%rd1970, %rd1969, %rd1967;
	add.s64 	%rd1971, %rd1970, %rd1966;
	add.s64 	%rd1972, %rd1971, %rd1960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1911;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 19;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 19;
	mov.b64 	%rd1973, {%r1296, %r1295};
	shf.l.wrap.b32 	%r1297, %r1293, %r1294, 3;
	shf.l.wrap.b32 	%r1298, %r1294, %r1293, 3;
	mov.b64 	%rd1974, {%r1298, %r1297};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	shr.u64 	%rd1976, %rd1911, 6;
	xor.b64  	%rd1977, %rd1975, %rd1976;
	shf.r.wrap.b32 	%r1299, %r956, %r955, 1;
	shf.r.wrap.b32 	%r1300, %r955, %r956, 1;
	mov.b64 	%rd1978, {%r1300, %r1299};
	shf.r.wrap.b32 	%r1301, %r956, %r955, 8;
	shf.r.wrap.b32 	%r1302, %r955, %r956, 8;
	mov.b64 	%rd1979, {%r1302, %r1301};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	shr.u64 	%rd1981, %rd1430, 7;
	xor.b64  	%rd1982, %rd1980, %rd1981;
	add.s64 	%rd1983, %rd1977, %rd1393;
	add.s64 	%rd1984, %rd1983, %rd1726;
	add.s64 	%rd1985, %rd1984, %rd1982;
	add.s64 	%rd1986, %rd1985, %rd1850;
	xor.b64  	%rd1987, %rd1924, %rd1887;
	and.b64  	%rd1988, %rd1961, %rd1987;
	xor.b64  	%rd1989, %rd1988, %rd1887;
	add.s64 	%rd1990, %rd1986, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1961;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 14;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 14;
	mov.b64 	%rd1991, {%r1306, %r1305};
	shf.r.wrap.b32 	%r1307, %r1304, %r1303, 18;
	shf.r.wrap.b32 	%r1308, %r1303, %r1304, 18;
	mov.b64 	%rd1992, {%r1308, %r1307};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 23;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 23;
	mov.b64 	%rd1994, {%r1310, %r1309};
	xor.b64  	%rd1995, %rd1993, %rd1994;
	add.s64 	%rd1996, %rd1990, %rd1995;
	add.s64 	%rd1997, %rd1996, 8399075790359081724;
	add.s64 	%rd1998, %rd1997, %rd1861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1972;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 28;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 28;
	mov.b64 	%rd1999, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 30;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 30;
	mov.b64 	%rd2000, {%r1316, %r1315};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 25;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 25;
	mov.b64 	%rd2002, {%r1318, %r1317};
	xor.b64  	%rd2003, %rd2001, %rd2002;
	and.b64  	%rd2004, %rd1972, %rd1935;
	or.b64  	%rd2005, %rd1972, %rd1935;
	and.b64  	%rd2006, %rd2005, %rd1898;
	or.b64  	%rd2007, %rd2006, %rd2004;
	add.s64 	%rd2008, %rd2007, %rd2003;
	add.s64 	%rd2009, %rd2008, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1948;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 19;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 19;
	mov.b64 	%rd2010, {%r1322, %r1321};
	shf.l.wrap.b32 	%r1323, %r1319, %r1320, 3;
	shf.l.wrap.b32 	%r1324, %r1320, %r1319, 3;
	mov.b64 	%rd2011, {%r1324, %r1323};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	shr.u64 	%rd2013, %rd1948, 6;
	xor.b64  	%rd2014, %rd2012, %rd2013;
	shf.r.wrap.b32 	%r1325, %r982, %r981, 1;
	shf.r.wrap.b32 	%r1326, %r981, %r982, 1;
	mov.b64 	%rd2015, {%r1326, %r1325};
	shf.r.wrap.b32 	%r1327, %r982, %r981, 8;
	shf.r.wrap.b32 	%r1328, %r981, %r982, 8;
	mov.b64 	%rd2016, {%r1328, %r1327};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	shr.u64 	%rd2018, %rd1467, 7;
	xor.b64  	%rd2019, %rd2017, %rd2018;
	add.s64 	%rd2020, %rd2014, %rd1430;
	add.s64 	%rd2021, %rd2020, %rd1763;
	add.s64 	%rd2022, %rd2021, %rd2019;
	add.s64 	%rd2023, %rd2022, %rd1887;
	xor.b64  	%rd2024, %rd1961, %rd1924;
	and.b64  	%rd2025, %rd1998, %rd2024;
	xor.b64  	%rd2026, %rd2025, %rd1924;
	add.s64 	%rd2027, %rd2023, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd1998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd1998;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 14;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 14;
	mov.b64 	%rd2028, {%r1332, %r1331};
	shf.r.wrap.b32 	%r1333, %r1330, %r1329, 18;
	shf.r.wrap.b32 	%r1334, %r1329, %r1330, 18;
	mov.b64 	%rd2029, {%r1334, %r1333};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	shf.l.wrap.b32 	%r1335, %r1329, %r1330, 23;
	shf.l.wrap.b32 	%r1336, %r1330, %r1329, 23;
	mov.b64 	%rd2031, {%r1336, %r1335};
	xor.b64  	%rd2032, %rd2030, %rd2031;
	add.s64 	%rd2033, %rd2027, %rd2032;
	add.s64 	%rd2034, %rd2033, 8693463985226723168;
	add.s64 	%rd2035, %rd2034, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd2009;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 28;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 28;
	mov.b64 	%rd2036, {%r1340, %r1339};
	shf.l.wrap.b32 	%r1341, %r1337, %r1338, 30;
	shf.l.wrap.b32 	%r1342, %r1338, %r1337, 30;
	mov.b64 	%rd2037, {%r1342, %r1341};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	shf.l.wrap.b32 	%r1343, %r1337, %r1338, 25;
	shf.l.wrap.b32 	%r1344, %r1338, %r1337, 25;
	mov.b64 	%rd2039, {%r1344, %r1343};
	xor.b64  	%rd2040, %rd2038, %rd2039;
	and.b64  	%rd2041, %rd2009, %rd1972;
	or.b64  	%rd2042, %rd2009, %rd1972;
	and.b64  	%rd2043, %rd2042, %rd1935;
	or.b64  	%rd2044, %rd2043, %rd2041;
	add.s64 	%rd2045, %rd2044, %rd2040;
	add.s64 	%rd2046, %rd2045, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd1985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd1985;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 19;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 19;
	mov.b64 	%rd2047, {%r1348, %r1347};
	shf.l.wrap.b32 	%r1349, %r1345, %r1346, 3;
	shf.l.wrap.b32 	%r1350, %r1346, %r1345, 3;
	mov.b64 	%rd2048, {%r1350, %r1349};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	shr.u64 	%rd2050, %rd1985, 6;
	xor.b64  	%rd2051, %rd2049, %rd2050;
	shf.r.wrap.b32 	%r1351, %r1008, %r1007, 1;
	shf.r.wrap.b32 	%r1352, %r1007, %r1008, 1;
	mov.b64 	%rd2052, {%r1352, %r1351};
	shf.r.wrap.b32 	%r1353, %r1008, %r1007, 8;
	shf.r.wrap.b32 	%r1354, %r1007, %r1008, 8;
	mov.b64 	%rd2053, {%r1354, %r1353};
	xor.b64  	%rd2054, %rd2052, %rd2053;
	shr.u64 	%rd2055, %rd1504, 7;
	xor.b64  	%rd2056, %rd2054, %rd2055;
	add.s64 	%rd2057, %rd2051, %rd1467;
	add.s64 	%rd2058, %rd2057, %rd1800;
	add.s64 	%rd2059, %rd2058, %rd2056;
	add.s64 	%rd2060, %rd2059, %rd1924;
	xor.b64  	%rd2061, %rd1998, %rd1961;
	and.b64  	%rd2062, %rd2035, %rd2061;
	xor.b64  	%rd2063, %rd2062, %rd1961;
	add.s64 	%rd2064, %rd2060, %rd2063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1355,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1356}, %rd2035;
	}
	shf.r.wrap.b32 	%r1357, %r1356, %r1355, 14;
	shf.r.wrap.b32 	%r1358, %r1355, %r1356, 14;
	mov.b64 	%rd2065, {%r1358, %r1357};
	shf.r.wrap.b32 	%r1359, %r1356, %r1355, 18;
	shf.r.wrap.b32 	%r1360, %r1355, %r1356, 18;
	mov.b64 	%rd2066, {%r1360, %r1359};
	xor.b64  	%rd2067, %rd2065, %rd2066;
	shf.l.wrap.b32 	%r1361, %r1355, %r1356, 23;
	shf.l.wrap.b32 	%r1362, %r1356, %r1355, 23;
	mov.b64 	%rd2068, {%r1362, %r1361};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	add.s64 	%rd2070, %rd2064, %rd2069;
	add.s64 	%rd2071, %rd2070, -8878714635349349518;
	add.s64 	%rd2072, %rd2071, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd2046;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 28;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 28;
	mov.b64 	%rd2073, {%r1366, %r1365};
	shf.l.wrap.b32 	%r1367, %r1363, %r1364, 30;
	shf.l.wrap.b32 	%r1368, %r1364, %r1363, 30;
	mov.b64 	%rd2074, {%r1368, %r1367};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	shf.l.wrap.b32 	%r1369, %r1363, %r1364, 25;
	shf.l.wrap.b32 	%r1370, %r1364, %r1363, 25;
	mov.b64 	%rd2076, {%r1370, %r1369};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	and.b64  	%rd2078, %rd2046, %rd2009;
	or.b64  	%rd2079, %rd2046, %rd2009;
	and.b64  	%rd2080, %rd2079, %rd1972;
	or.b64  	%rd2081, %rd2080, %rd2078;
	add.s64 	%rd2082, %rd2081, %rd2077;
	add.s64 	%rd2083, %rd2082, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1371,%dummy}, %rd2022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1372}, %rd2022;
	}
	shf.r.wrap.b32 	%r1373, %r1372, %r1371, 19;
	shf.r.wrap.b32 	%r1374, %r1371, %r1372, 19;
	mov.b64 	%rd2084, {%r1374, %r1373};
	shf.l.wrap.b32 	%r1375, %r1371, %r1372, 3;
	shf.l.wrap.b32 	%r1376, %r1372, %r1371, 3;
	mov.b64 	%rd2085, {%r1376, %r1375};
	xor.b64  	%rd2086, %rd2084, %rd2085;
	shr.u64 	%rd2087, %rd2022, 6;
	xor.b64  	%rd2088, %rd2086, %rd2087;
	shf.r.wrap.b32 	%r1377, %r1034, %r1033, 1;
	shf.r.wrap.b32 	%r1378, %r1033, %r1034, 1;
	mov.b64 	%rd2089, {%r1378, %r1377};
	shf.r.wrap.b32 	%r1379, %r1034, %r1033, 8;
	shf.r.wrap.b32 	%r1380, %r1033, %r1034, 8;
	mov.b64 	%rd2090, {%r1380, %r1379};
	xor.b64  	%rd2091, %rd2089, %rd2090;
	shr.u64 	%rd2092, %rd1541, 7;
	xor.b64  	%rd2093, %rd2091, %rd2092;
	add.s64 	%rd2094, %rd2088, %rd1504;
	add.s64 	%rd2095, %rd2094, %rd1837;
	add.s64 	%rd2096, %rd2095, %rd2093;
	add.s64 	%rd2097, %rd2096, %rd1961;
	xor.b64  	%rd2098, %rd2035, %rd1998;
	and.b64  	%rd2099, %rd2072, %rd2098;
	xor.b64  	%rd2100, %rd2099, %rd1998;
	add.s64 	%rd2101, %rd2097, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd2072;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 14;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 14;
	mov.b64 	%rd2102, {%r1384, %r1383};
	shf.r.wrap.b32 	%r1385, %r1382, %r1381, 18;
	shf.r.wrap.b32 	%r1386, %r1381, %r1382, 18;
	mov.b64 	%rd2103, {%r1386, %r1385};
	xor.b64  	%rd2104, %rd2102, %rd2103;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 23;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 23;
	mov.b64 	%rd2105, {%r1388, %r1387};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	add.s64 	%rd2107, %rd2101, %rd2106;
	add.s64 	%rd2108, %rd2107, -8302665154208450068;
	add.s64 	%rd2109, %rd2108, %rd1972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd2083;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 28;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 28;
	mov.b64 	%rd2110, {%r1392, %r1391};
	shf.l.wrap.b32 	%r1393, %r1389, %r1390, 30;
	shf.l.wrap.b32 	%r1394, %r1390, %r1389, 30;
	mov.b64 	%rd2111, {%r1394, %r1393};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	shf.l.wrap.b32 	%r1395, %r1389, %r1390, 25;
	shf.l.wrap.b32 	%r1396, %r1390, %r1389, 25;
	mov.b64 	%rd2113, {%r1396, %r1395};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	and.b64  	%rd2115, %rd2083, %rd2046;
	or.b64  	%rd2116, %rd2083, %rd2046;
	and.b64  	%rd2117, %rd2116, %rd2009;
	or.b64  	%rd2118, %rd2117, %rd2115;
	add.s64 	%rd2119, %rd2118, %rd2114;
	add.s64 	%rd2120, %rd2119, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd2059;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 19;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 19;
	mov.b64 	%rd2121, {%r1400, %r1399};
	shf.l.wrap.b32 	%r1401, %r1397, %r1398, 3;
	shf.l.wrap.b32 	%r1402, %r1398, %r1397, 3;
	mov.b64 	%rd2122, {%r1402, %r1401};
	xor.b64  	%rd2123, %rd2121, %rd2122;
	shr.u64 	%rd2124, %rd2059, 6;
	xor.b64  	%rd2125, %rd2123, %rd2124;
	shf.r.wrap.b32 	%r1403, %r1060, %r1059, 1;
	shf.r.wrap.b32 	%r1404, %r1059, %r1060, 1;
	mov.b64 	%rd2126, {%r1404, %r1403};
	shf.r.wrap.b32 	%r1405, %r1060, %r1059, 8;
	shf.r.wrap.b32 	%r1406, %r1059, %r1060, 8;
	mov.b64 	%rd2127, {%r1406, %r1405};
	xor.b64  	%rd2128, %rd2126, %rd2127;
	shr.u64 	%rd2129, %rd1578, 7;
	xor.b64  	%rd2130, %rd2128, %rd2129;
	add.s64 	%rd2131, %rd2125, %rd1541;
	add.s64 	%rd2132, %rd2131, %rd1874;
	add.s64 	%rd2133, %rd2132, %rd2130;
	add.s64 	%rd2134, %rd2133, %rd1998;
	xor.b64  	%rd2135, %rd2072, %rd2035;
	and.b64  	%rd2136, %rd2109, %rd2135;
	xor.b64  	%rd2137, %rd2136, %rd2035;
	add.s64 	%rd2138, %rd2134, %rd2137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2109;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 14;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 14;
	mov.b64 	%rd2139, {%r1410, %r1409};
	shf.r.wrap.b32 	%r1411, %r1408, %r1407, 18;
	shf.r.wrap.b32 	%r1412, %r1407, %r1408, 18;
	mov.b64 	%rd2140, {%r1412, %r1411};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 23;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 23;
	mov.b64 	%rd2142, {%r1414, %r1413};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	add.s64 	%rd2144, %rd2138, %rd2143;
	add.s64 	%rd2145, %rd2144, -8016688836872298968;
	add.s64 	%rd2146, %rd2145, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2120;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 28;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 28;
	mov.b64 	%rd2147, {%r1418, %r1417};
	shf.l.wrap.b32 	%r1419, %r1415, %r1416, 30;
	shf.l.wrap.b32 	%r1420, %r1416, %r1415, 30;
	mov.b64 	%rd2148, {%r1420, %r1419};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	shf.l.wrap.b32 	%r1421, %r1415, %r1416, 25;
	shf.l.wrap.b32 	%r1422, %r1416, %r1415, 25;
	mov.b64 	%rd2150, {%r1422, %r1421};
	xor.b64  	%rd2151, %rd2149, %rd2150;
	and.b64  	%rd2152, %rd2120, %rd2083;
	or.b64  	%rd2153, %rd2120, %rd2083;
	and.b64  	%rd2154, %rd2153, %rd2046;
	or.b64  	%rd2155, %rd2154, %rd2152;
	add.s64 	%rd2156, %rd2155, %rd2151;
	add.s64 	%rd2157, %rd2156, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2096;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 19;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 19;
	mov.b64 	%rd2158, {%r1426, %r1425};
	shf.l.wrap.b32 	%r1427, %r1423, %r1424, 3;
	shf.l.wrap.b32 	%r1428, %r1424, %r1423, 3;
	mov.b64 	%rd2159, {%r1428, %r1427};
	xor.b64  	%rd2160, %rd2158, %rd2159;
	shr.u64 	%rd2161, %rd2096, 6;
	xor.b64  	%rd2162, %rd2160, %rd2161;
	shf.r.wrap.b32 	%r1429, %r1086, %r1085, 1;
	shf.r.wrap.b32 	%r1430, %r1085, %r1086, 1;
	mov.b64 	%rd2163, {%r1430, %r1429};
	shf.r.wrap.b32 	%r1431, %r1086, %r1085, 8;
	shf.r.wrap.b32 	%r1432, %r1085, %r1086, 8;
	mov.b64 	%rd2164, {%r1432, %r1431};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	shr.u64 	%rd2166, %rd1615, 7;
	xor.b64  	%rd2167, %rd2165, %rd2166;
	add.s64 	%rd2168, %rd2162, %rd1578;
	add.s64 	%rd2169, %rd2168, %rd1911;
	add.s64 	%rd2170, %rd2169, %rd2167;
	add.s64 	%rd2171, %rd2170, %rd2035;
	xor.b64  	%rd2172, %rd2109, %rd2072;
	and.b64  	%rd2173, %rd2146, %rd2172;
	xor.b64  	%rd2174, %rd2173, %rd2072;
	add.s64 	%rd2175, %rd2171, %rd2174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd2146;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 14;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 14;
	mov.b64 	%rd2176, {%r1436, %r1435};
	shf.r.wrap.b32 	%r1437, %r1434, %r1433, 18;
	shf.r.wrap.b32 	%r1438, %r1433, %r1434, 18;
	mov.b64 	%rd2177, {%r1438, %r1437};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	shf.l.wrap.b32 	%r1439, %r1433, %r1434, 23;
	shf.l.wrap.b32 	%r1440, %r1434, %r1433, 23;
	mov.b64 	%rd2179, {%r1440, %r1439};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	add.s64 	%rd2181, %rd2175, %rd2180;
	add.s64 	%rd2182, %rd2181, -6606660893046293015;
	add.s64 	%rd2183, %rd2182, %rd2046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd2157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd2157;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 28;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 28;
	mov.b64 	%rd2184, {%r1444, %r1443};
	shf.l.wrap.b32 	%r1445, %r1441, %r1442, 30;
	shf.l.wrap.b32 	%r1446, %r1442, %r1441, 30;
	mov.b64 	%rd2185, {%r1446, %r1445};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	shf.l.wrap.b32 	%r1447, %r1441, %r1442, 25;
	shf.l.wrap.b32 	%r1448, %r1442, %r1441, 25;
	mov.b64 	%rd2187, {%r1448, %r1447};
	xor.b64  	%rd2188, %rd2186, %rd2187;
	and.b64  	%rd2189, %rd2157, %rd2120;
	or.b64  	%rd2190, %rd2157, %rd2120;
	and.b64  	%rd2191, %rd2190, %rd2083;
	or.b64  	%rd2192, %rd2191, %rd2189;
	add.s64 	%rd2193, %rd2192, %rd2188;
	add.s64 	%rd2194, %rd2193, %rd2182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1449,%dummy}, %rd2133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1450}, %rd2133;
	}
	shf.r.wrap.b32 	%r1451, %r1450, %r1449, 19;
	shf.r.wrap.b32 	%r1452, %r1449, %r1450, 19;
	mov.b64 	%rd2195, {%r1452, %r1451};
	shf.l.wrap.b32 	%r1453, %r1449, %r1450, 3;
	shf.l.wrap.b32 	%r1454, %r1450, %r1449, 3;
	mov.b64 	%rd2196, {%r1454, %r1453};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	shr.u64 	%rd2198, %rd2133, 6;
	xor.b64  	%rd2199, %rd2197, %rd2198;
	shf.r.wrap.b32 	%r1455, %r1112, %r1111, 1;
	shf.r.wrap.b32 	%r1456, %r1111, %r1112, 1;
	mov.b64 	%rd2200, {%r1456, %r1455};
	shf.r.wrap.b32 	%r1457, %r1112, %r1111, 8;
	shf.r.wrap.b32 	%r1458, %r1111, %r1112, 8;
	mov.b64 	%rd2201, {%r1458, %r1457};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	shr.u64 	%rd2203, %rd1652, 7;
	xor.b64  	%rd2204, %rd2202, %rd2203;
	add.s64 	%rd2205, %rd2199, %rd1615;
	add.s64 	%rd2206, %rd2205, %rd1948;
	add.s64 	%rd2207, %rd2206, %rd2204;
	add.s64 	%rd2208, %rd2207, %rd2072;
	xor.b64  	%rd2209, %rd2146, %rd2109;
	and.b64  	%rd2210, %rd2183, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2109;
	add.s64 	%rd2212, %rd2208, %rd2211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1459,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1460}, %rd2183;
	}
	shf.r.wrap.b32 	%r1461, %r1460, %r1459, 14;
	shf.r.wrap.b32 	%r1462, %r1459, %r1460, 14;
	mov.b64 	%rd2213, {%r1462, %r1461};
	shf.r.wrap.b32 	%r1463, %r1460, %r1459, 18;
	shf.r.wrap.b32 	%r1464, %r1459, %r1460, 18;
	mov.b64 	%rd2214, {%r1464, %r1463};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	shf.l.wrap.b32 	%r1465, %r1459, %r1460, 23;
	shf.l.wrap.b32 	%r1466, %r1460, %r1459, 23;
	mov.b64 	%rd2216, {%r1466, %r1465};
	xor.b64  	%rd2217, %rd2215, %rd2216;
	add.s64 	%rd2218, %rd2212, %rd2217;
	add.s64 	%rd2219, %rd2218, -4685533653050689259;
	add.s64 	%rd2220, %rd2219, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1467,%dummy}, %rd2194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1468}, %rd2194;
	}
	shf.r.wrap.b32 	%r1469, %r1468, %r1467, 28;
	shf.r.wrap.b32 	%r1470, %r1467, %r1468, 28;
	mov.b64 	%rd2221, {%r1470, %r1469};
	shf.l.wrap.b32 	%r1471, %r1467, %r1468, 30;
	shf.l.wrap.b32 	%r1472, %r1468, %r1467, 30;
	mov.b64 	%rd2222, {%r1472, %r1471};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	shf.l.wrap.b32 	%r1473, %r1467, %r1468, 25;
	shf.l.wrap.b32 	%r1474, %r1468, %r1467, 25;
	mov.b64 	%rd2224, {%r1474, %r1473};
	xor.b64  	%rd2225, %rd2223, %rd2224;
	and.b64  	%rd2226, %rd2194, %rd2157;
	or.b64  	%rd2227, %rd2194, %rd2157;
	and.b64  	%rd2228, %rd2227, %rd2120;
	or.b64  	%rd2229, %rd2228, %rd2226;
	add.s64 	%rd2230, %rd2229, %rd2225;
	add.s64 	%rd2231, %rd2230, %rd2219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1475,%dummy}, %rd2170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1476}, %rd2170;
	}
	shf.r.wrap.b32 	%r1477, %r1476, %r1475, 19;
	shf.r.wrap.b32 	%r1478, %r1475, %r1476, 19;
	mov.b64 	%rd2232, {%r1478, %r1477};
	shf.l.wrap.b32 	%r1479, %r1475, %r1476, 3;
	shf.l.wrap.b32 	%r1480, %r1476, %r1475, 3;
	mov.b64 	%rd2233, {%r1480, %r1479};
	xor.b64  	%rd2234, %rd2232, %rd2233;
	shr.u64 	%rd2235, %rd2170, 6;
	xor.b64  	%rd2236, %rd2234, %rd2235;
	shf.r.wrap.b32 	%r1481, %r1138, %r1137, 1;
	shf.r.wrap.b32 	%r1482, %r1137, %r1138, 1;
	mov.b64 	%rd2237, {%r1482, %r1481};
	shf.r.wrap.b32 	%r1483, %r1138, %r1137, 8;
	shf.r.wrap.b32 	%r1484, %r1137, %r1138, 8;
	mov.b64 	%rd2238, {%r1484, %r1483};
	xor.b64  	%rd2239, %rd2237, %rd2238;
	shr.u64 	%rd2240, %rd1689, 7;
	xor.b64  	%rd2241, %rd2239, %rd2240;
	add.s64 	%rd2242, %rd2236, %rd1652;
	add.s64 	%rd2243, %rd2242, %rd1985;
	add.s64 	%rd2244, %rd2243, %rd2241;
	add.s64 	%rd2245, %rd2244, %rd2109;
	xor.b64  	%rd2246, %rd2183, %rd2146;
	and.b64  	%rd2247, %rd2220, %rd2246;
	xor.b64  	%rd2248, %rd2247, %rd2146;
	add.s64 	%rd2249, %rd2245, %rd2248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd2220;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 14;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 14;
	mov.b64 	%rd2250, {%r1488, %r1487};
	shf.r.wrap.b32 	%r1489, %r1486, %r1485, 18;
	shf.r.wrap.b32 	%r1490, %r1485, %r1486, 18;
	mov.b64 	%rd2251, {%r1490, %r1489};
	xor.b64  	%rd2252, %rd2250, %rd2251;
	shf.l.wrap.b32 	%r1491, %r1485, %r1486, 23;
	shf.l.wrap.b32 	%r1492, %r1486, %r1485, 23;
	mov.b64 	%rd2253, {%r1492, %r1491};
	xor.b64  	%rd2254, %rd2252, %rd2253;
	add.s64 	%rd2255, %rd2249, %rd2254;
	add.s64 	%rd2256, %rd2255, -4147400797238176981;
	add.s64 	%rd2257, %rd2256, %rd2120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2231;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 28;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 28;
	mov.b64 	%rd2258, {%r1496, %r1495};
	shf.l.wrap.b32 	%r1497, %r1493, %r1494, 30;
	shf.l.wrap.b32 	%r1498, %r1494, %r1493, 30;
	mov.b64 	%rd2259, {%r1498, %r1497};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	shf.l.wrap.b32 	%r1499, %r1493, %r1494, 25;
	shf.l.wrap.b32 	%r1500, %r1494, %r1493, 25;
	mov.b64 	%rd2261, {%r1500, %r1499};
	xor.b64  	%rd2262, %rd2260, %rd2261;
	and.b64  	%rd2263, %rd2231, %rd2194;
	or.b64  	%rd2264, %rd2231, %rd2194;
	and.b64  	%rd2265, %rd2264, %rd2157;
	or.b64  	%rd2266, %rd2265, %rd2263;
	add.s64 	%rd2267, %rd2266, %rd2262;
	add.s64 	%rd2268, %rd2267, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd2207;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 19;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 19;
	mov.b64 	%rd2269, {%r1504, %r1503};
	shf.l.wrap.b32 	%r1505, %r1501, %r1502, 3;
	shf.l.wrap.b32 	%r1506, %r1502, %r1501, 3;
	mov.b64 	%rd2270, {%r1506, %r1505};
	xor.b64  	%rd2271, %rd2269, %rd2270;
	shr.u64 	%rd2272, %rd2207, 6;
	xor.b64  	%rd2273, %rd2271, %rd2272;
	shf.r.wrap.b32 	%r1507, %r1164, %r1163, 1;
	shf.r.wrap.b32 	%r1508, %r1163, %r1164, 1;
	mov.b64 	%rd2274, {%r1508, %r1507};
	shf.r.wrap.b32 	%r1509, %r1164, %r1163, 8;
	shf.r.wrap.b32 	%r1510, %r1163, %r1164, 8;
	mov.b64 	%rd2275, {%r1510, %r1509};
	xor.b64  	%rd2276, %rd2274, %rd2275;
	shr.u64 	%rd2277, %rd1726, 7;
	xor.b64  	%rd2278, %rd2276, %rd2277;
	add.s64 	%rd2279, %rd2273, %rd1689;
	add.s64 	%rd2280, %rd2279, %rd2022;
	add.s64 	%rd2281, %rd2280, %rd2278;
	add.s64 	%rd2282, %rd2281, %rd2146;
	xor.b64  	%rd2283, %rd2220, %rd2183;
	and.b64  	%rd2284, %rd2257, %rd2283;
	xor.b64  	%rd2285, %rd2284, %rd2183;
	add.s64 	%rd2286, %rd2282, %rd2285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd2257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd2257;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 14;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 14;
	mov.b64 	%rd2287, {%r1514, %r1513};
	shf.r.wrap.b32 	%r1515, %r1512, %r1511, 18;
	shf.r.wrap.b32 	%r1516, %r1511, %r1512, 18;
	mov.b64 	%rd2288, {%r1516, %r1515};
	xor.b64  	%rd2289, %rd2287, %rd2288;
	shf.l.wrap.b32 	%r1517, %r1511, %r1512, 23;
	shf.l.wrap.b32 	%r1518, %r1512, %r1511, 23;
	mov.b64 	%rd2290, {%r1518, %r1517};
	xor.b64  	%rd2291, %rd2289, %rd2290;
	add.s64 	%rd2292, %rd2286, %rd2291;
	add.s64 	%rd2293, %rd2292, -3880063495543823972;
	add.s64 	%rd2294, %rd2293, %rd2157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd2268;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 28;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 28;
	mov.b64 	%rd2295, {%r1522, %r1521};
	shf.l.wrap.b32 	%r1523, %r1519, %r1520, 30;
	shf.l.wrap.b32 	%r1524, %r1520, %r1519, 30;
	mov.b64 	%rd2296, {%r1524, %r1523};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	shf.l.wrap.b32 	%r1525, %r1519, %r1520, 25;
	shf.l.wrap.b32 	%r1526, %r1520, %r1519, 25;
	mov.b64 	%rd2298, {%r1526, %r1525};
	xor.b64  	%rd2299, %rd2297, %rd2298;
	and.b64  	%rd2300, %rd2268, %rd2231;
	or.b64  	%rd2301, %rd2268, %rd2231;
	and.b64  	%rd2302, %rd2301, %rd2194;
	or.b64  	%rd2303, %rd2302, %rd2300;
	add.s64 	%rd2304, %rd2303, %rd2299;
	add.s64 	%rd2305, %rd2304, %rd2293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1527,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1528}, %rd2244;
	}
	shf.r.wrap.b32 	%r1529, %r1528, %r1527, 19;
	shf.r.wrap.b32 	%r1530, %r1527, %r1528, 19;
	mov.b64 	%rd2306, {%r1530, %r1529};
	shf.l.wrap.b32 	%r1531, %r1527, %r1528, 3;
	shf.l.wrap.b32 	%r1532, %r1528, %r1527, 3;
	mov.b64 	%rd2307, {%r1532, %r1531};
	xor.b64  	%rd2308, %rd2306, %rd2307;
	shr.u64 	%rd2309, %rd2244, 6;
	xor.b64  	%rd2310, %rd2308, %rd2309;
	shf.r.wrap.b32 	%r1533, %r1190, %r1189, 1;
	shf.r.wrap.b32 	%r1534, %r1189, %r1190, 1;
	mov.b64 	%rd2311, {%r1534, %r1533};
	shf.r.wrap.b32 	%r1535, %r1190, %r1189, 8;
	shf.r.wrap.b32 	%r1536, %r1189, %r1190, 8;
	mov.b64 	%rd2312, {%r1536, %r1535};
	xor.b64  	%rd2313, %rd2311, %rd2312;
	shr.u64 	%rd2314, %rd1763, 7;
	xor.b64  	%rd2315, %rd2313, %rd2314;
	add.s64 	%rd2316, %rd2310, %rd1726;
	add.s64 	%rd2317, %rd2316, %rd2059;
	add.s64 	%rd2318, %rd2317, %rd2315;
	add.s64 	%rd2319, %rd2318, %rd2183;
	xor.b64  	%rd2320, %rd2257, %rd2220;
	and.b64  	%rd2321, %rd2294, %rd2320;
	xor.b64  	%rd2322, %rd2321, %rd2220;
	add.s64 	%rd2323, %rd2319, %rd2322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd2294;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 14;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 14;
	mov.b64 	%rd2324, {%r1540, %r1539};
	shf.r.wrap.b32 	%r1541, %r1538, %r1537, 18;
	shf.r.wrap.b32 	%r1542, %r1537, %r1538, 18;
	mov.b64 	%rd2325, {%r1542, %r1541};
	xor.b64  	%rd2326, %rd2324, %rd2325;
	shf.l.wrap.b32 	%r1543, %r1537, %r1538, 23;
	shf.l.wrap.b32 	%r1544, %r1538, %r1537, 23;
	mov.b64 	%rd2327, {%r1544, %r1543};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	add.s64 	%rd2329, %rd2323, %rd2328;
	add.s64 	%rd2330, %rd2329, -3348786107499101689;
	add.s64 	%rd2331, %rd2330, %rd2194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1545,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1546}, %rd2305;
	}
	shf.r.wrap.b32 	%r1547, %r1546, %r1545, 28;
	shf.r.wrap.b32 	%r1548, %r1545, %r1546, 28;
	mov.b64 	%rd2332, {%r1548, %r1547};
	shf.l.wrap.b32 	%r1549, %r1545, %r1546, 30;
	shf.l.wrap.b32 	%r1550, %r1546, %r1545, 30;
	mov.b64 	%rd2333, {%r1550, %r1549};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	shf.l.wrap.b32 	%r1551, %r1545, %r1546, 25;
	shf.l.wrap.b32 	%r1552, %r1546, %r1545, 25;
	mov.b64 	%rd2335, {%r1552, %r1551};
	xor.b64  	%rd2336, %rd2334, %rd2335;
	and.b64  	%rd2337, %rd2305, %rd2268;
	or.b64  	%rd2338, %rd2305, %rd2268;
	and.b64  	%rd2339, %rd2338, %rd2231;
	or.b64  	%rd2340, %rd2339, %rd2337;
	add.s64 	%rd2341, %rd2340, %rd2336;
	add.s64 	%rd2342, %rd2341, %rd2330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1553,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1554}, %rd2281;
	}
	shf.r.wrap.b32 	%r1555, %r1554, %r1553, 19;
	shf.r.wrap.b32 	%r1556, %r1553, %r1554, 19;
	mov.b64 	%rd2343, {%r1556, %r1555};
	shf.l.wrap.b32 	%r1557, %r1553, %r1554, 3;
	shf.l.wrap.b32 	%r1558, %r1554, %r1553, 3;
	mov.b64 	%rd2344, {%r1558, %r1557};
	xor.b64  	%rd2345, %rd2343, %rd2344;
	shr.u64 	%rd2346, %rd2281, 6;
	xor.b64  	%rd2347, %rd2345, %rd2346;
	shf.r.wrap.b32 	%r1559, %r1216, %r1215, 1;
	shf.r.wrap.b32 	%r1560, %r1215, %r1216, 1;
	mov.b64 	%rd2348, {%r1560, %r1559};
	shf.r.wrap.b32 	%r1561, %r1216, %r1215, 8;
	shf.r.wrap.b32 	%r1562, %r1215, %r1216, 8;
	mov.b64 	%rd2349, {%r1562, %r1561};
	xor.b64  	%rd2350, %rd2348, %rd2349;
	shr.u64 	%rd2351, %rd1800, 7;
	xor.b64  	%rd2352, %rd2350, %rd2351;
	add.s64 	%rd2353, %rd2347, %rd1763;
	add.s64 	%rd2354, %rd2353, %rd2096;
	add.s64 	%rd2355, %rd2354, %rd2352;
	add.s64 	%rd2356, %rd2355, %rd2220;
	xor.b64  	%rd2357, %rd2294, %rd2257;
	and.b64  	%rd2358, %rd2331, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2257;
	add.s64 	%rd2360, %rd2356, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd2331;
	}
	shf.r.wrap.b32 	%r1565, %r1564, %r1563, 14;
	shf.r.wrap.b32 	%r1566, %r1563, %r1564, 14;
	mov.b64 	%rd2361, {%r1566, %r1565};
	shf.r.wrap.b32 	%r1567, %r1564, %r1563, 18;
	shf.r.wrap.b32 	%r1568, %r1563, %r1564, 18;
	mov.b64 	%rd2362, {%r1568, %r1567};
	xor.b64  	%rd2363, %rd2361, %rd2362;
	shf.l.wrap.b32 	%r1569, %r1563, %r1564, 23;
	shf.l.wrap.b32 	%r1570, %r1564, %r1563, 23;
	mov.b64 	%rd2364, {%r1570, %r1569};
	xor.b64  	%rd2365, %rd2363, %rd2364;
	add.s64 	%rd2366, %rd2360, %rd2365;
	add.s64 	%rd2367, %rd2366, -1523767162380948706;
	add.s64 	%rd2368, %rd2367, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1571,%dummy}, %rd2342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd2342;
	}
	shf.r.wrap.b32 	%r1573, %r1572, %r1571, 28;
	shf.r.wrap.b32 	%r1574, %r1571, %r1572, 28;
	mov.b64 	%rd2369, {%r1574, %r1573};
	shf.l.wrap.b32 	%r1575, %r1571, %r1572, 30;
	shf.l.wrap.b32 	%r1576, %r1572, %r1571, 30;
	mov.b64 	%rd2370, {%r1576, %r1575};
	xor.b64  	%rd2371, %rd2369, %rd2370;
	shf.l.wrap.b32 	%r1577, %r1571, %r1572, 25;
	shf.l.wrap.b32 	%r1578, %r1572, %r1571, 25;
	mov.b64 	%rd2372, {%r1578, %r1577};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	and.b64  	%rd2374, %rd2342, %rd2305;
	or.b64  	%rd2375, %rd2342, %rd2305;
	and.b64  	%rd2376, %rd2375, %rd2268;
	or.b64  	%rd2377, %rd2376, %rd2374;
	add.s64 	%rd2378, %rd2377, %rd2373;
	add.s64 	%rd2379, %rd2378, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1579,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd2318;
	}
	shf.r.wrap.b32 	%r1581, %r1580, %r1579, 19;
	shf.r.wrap.b32 	%r1582, %r1579, %r1580, 19;
	mov.b64 	%rd2380, {%r1582, %r1581};
	shf.l.wrap.b32 	%r1583, %r1579, %r1580, 3;
	shf.l.wrap.b32 	%r1584, %r1580, %r1579, 3;
	mov.b64 	%rd2381, {%r1584, %r1583};
	xor.b64  	%rd2382, %rd2380, %rd2381;
	shr.u64 	%rd2383, %rd2318, 6;
	xor.b64  	%rd2384, %rd2382, %rd2383;
	shf.r.wrap.b32 	%r1585, %r1242, %r1241, 1;
	shf.r.wrap.b32 	%r1586, %r1241, %r1242, 1;
	mov.b64 	%rd2385, {%r1586, %r1585};
	shf.r.wrap.b32 	%r1587, %r1242, %r1241, 8;
	shf.r.wrap.b32 	%r1588, %r1241, %r1242, 8;
	mov.b64 	%rd2386, {%r1588, %r1587};
	xor.b64  	%rd2387, %rd2385, %rd2386;
	shr.u64 	%rd2388, %rd1837, 7;
	xor.b64  	%rd2389, %rd2387, %rd2388;
	add.s64 	%rd2390, %rd2384, %rd1800;
	add.s64 	%rd2391, %rd2390, %rd2133;
	add.s64 	%rd2392, %rd2391, %rd2389;
	add.s64 	%rd2393, %rd2392, %rd2257;
	xor.b64  	%rd2394, %rd2331, %rd2294;
	and.b64  	%rd2395, %rd2368, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2294;
	add.s64 	%rd2397, %rd2393, %rd2396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd2368;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 14;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 14;
	mov.b64 	%rd2398, {%r1592, %r1591};
	shf.r.wrap.b32 	%r1593, %r1590, %r1589, 18;
	shf.r.wrap.b32 	%r1594, %r1589, %r1590, 18;
	mov.b64 	%rd2399, {%r1594, %r1593};
	xor.b64  	%rd2400, %rd2398, %rd2399;
	shf.l.wrap.b32 	%r1595, %r1589, %r1590, 23;
	shf.l.wrap.b32 	%r1596, %r1590, %r1589, 23;
	mov.b64 	%rd2401, {%r1596, %r1595};
	xor.b64  	%rd2402, %rd2400, %rd2401;
	add.s64 	%rd2403, %rd2397, %rd2402;
	add.s64 	%rd2404, %rd2403, -757361751448694408;
	add.s64 	%rd2405, %rd2404, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd2379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd2379;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 28;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 28;
	mov.b64 	%rd2406, {%r1600, %r1599};
	shf.l.wrap.b32 	%r1601, %r1597, %r1598, 30;
	shf.l.wrap.b32 	%r1602, %r1598, %r1597, 30;
	mov.b64 	%rd2407, {%r1602, %r1601};
	xor.b64  	%rd2408, %rd2406, %rd2407;
	shf.l.wrap.b32 	%r1603, %r1597, %r1598, 25;
	shf.l.wrap.b32 	%r1604, %r1598, %r1597, 25;
	mov.b64 	%rd2409, {%r1604, %r1603};
	xor.b64  	%rd2410, %rd2408, %rd2409;
	and.b64  	%rd2411, %rd2379, %rd2342;
	or.b64  	%rd2412, %rd2379, %rd2342;
	and.b64  	%rd2413, %rd2412, %rd2305;
	or.b64  	%rd2414, %rd2413, %rd2411;
	add.s64 	%rd2415, %rd2414, %rd2410;
	add.s64 	%rd2416, %rd2415, %rd2404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd2355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd2355;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 19;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 19;
	mov.b64 	%rd2417, {%r1608, %r1607};
	shf.l.wrap.b32 	%r1609, %r1605, %r1606, 3;
	shf.l.wrap.b32 	%r1610, %r1606, %r1605, 3;
	mov.b64 	%rd2418, {%r1610, %r1609};
	xor.b64  	%rd2419, %rd2417, %rd2418;
	shr.u64 	%rd2420, %rd2355, 6;
	xor.b64  	%rd2421, %rd2419, %rd2420;
	shf.r.wrap.b32 	%r1611, %r1268, %r1267, 1;
	shf.r.wrap.b32 	%r1612, %r1267, %r1268, 1;
	mov.b64 	%rd2422, {%r1612, %r1611};
	shf.r.wrap.b32 	%r1613, %r1268, %r1267, 8;
	shf.r.wrap.b32 	%r1614, %r1267, %r1268, 8;
	mov.b64 	%rd2423, {%r1614, %r1613};
	xor.b64  	%rd2424, %rd2422, %rd2423;
	shr.u64 	%rd2425, %rd1874, 7;
	xor.b64  	%rd2426, %rd2424, %rd2425;
	add.s64 	%rd2427, %rd2421, %rd1837;
	add.s64 	%rd2428, %rd2427, %rd2170;
	add.s64 	%rd2429, %rd2428, %rd2426;
	add.s64 	%rd2430, %rd2429, %rd2294;
	xor.b64  	%rd2431, %rd2368, %rd2331;
	and.b64  	%rd2432, %rd2405, %rd2431;
	xor.b64  	%rd2433, %rd2432, %rd2331;
	add.s64 	%rd2434, %rd2430, %rd2433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd2405;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 14;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 14;
	mov.b64 	%rd2435, {%r1618, %r1617};
	shf.r.wrap.b32 	%r1619, %r1616, %r1615, 18;
	shf.r.wrap.b32 	%r1620, %r1615, %r1616, 18;
	mov.b64 	%rd2436, {%r1620, %r1619};
	xor.b64  	%rd2437, %rd2435, %rd2436;
	shf.l.wrap.b32 	%r1621, %r1615, %r1616, 23;
	shf.l.wrap.b32 	%r1622, %r1616, %r1615, 23;
	mov.b64 	%rd2438, {%r1622, %r1621};
	xor.b64  	%rd2439, %rd2437, %rd2438;
	add.s64 	%rd2440, %rd2434, %rd2439;
	add.s64 	%rd2441, %rd2440, 500013540394364858;
	add.s64 	%rd2442, %rd2441, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd2416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd2416;
	}
	shf.r.wrap.b32 	%r1625, %r1624, %r1623, 28;
	shf.r.wrap.b32 	%r1626, %r1623, %r1624, 28;
	mov.b64 	%rd2443, {%r1626, %r1625};
	shf.l.wrap.b32 	%r1627, %r1623, %r1624, 30;
	shf.l.wrap.b32 	%r1628, %r1624, %r1623, 30;
	mov.b64 	%rd2444, {%r1628, %r1627};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	shf.l.wrap.b32 	%r1629, %r1623, %r1624, 25;
	shf.l.wrap.b32 	%r1630, %r1624, %r1623, 25;
	mov.b64 	%rd2446, {%r1630, %r1629};
	xor.b64  	%rd2447, %rd2445, %rd2446;
	and.b64  	%rd2448, %rd2416, %rd2379;
	or.b64  	%rd2449, %rd2416, %rd2379;
	and.b64  	%rd2450, %rd2449, %rd2342;
	or.b64  	%rd2451, %rd2450, %rd2448;
	add.s64 	%rd2452, %rd2451, %rd2447;
	add.s64 	%rd2453, %rd2452, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd2392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd2392;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 19;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 19;
	mov.b64 	%rd2454, {%r1634, %r1633};
	shf.l.wrap.b32 	%r1635, %r1631, %r1632, 3;
	shf.l.wrap.b32 	%r1636, %r1632, %r1631, 3;
	mov.b64 	%rd2455, {%r1636, %r1635};
	xor.b64  	%rd2456, %rd2454, %rd2455;
	shr.u64 	%rd2457, %rd2392, 6;
	xor.b64  	%rd2458, %rd2456, %rd2457;
	shf.r.wrap.b32 	%r1637, %r1294, %r1293, 1;
	shf.r.wrap.b32 	%r1638, %r1293, %r1294, 1;
	mov.b64 	%rd2459, {%r1638, %r1637};
	shf.r.wrap.b32 	%r1639, %r1294, %r1293, 8;
	shf.r.wrap.b32 	%r1640, %r1293, %r1294, 8;
	mov.b64 	%rd2460, {%r1640, %r1639};
	xor.b64  	%rd2461, %rd2459, %rd2460;
	shr.u64 	%rd2462, %rd1911, 7;
	xor.b64  	%rd2463, %rd2461, %rd2462;
	add.s64 	%rd2464, %rd2458, %rd1874;
	add.s64 	%rd2465, %rd2464, %rd2207;
	add.s64 	%rd2466, %rd2465, %rd2463;
	add.s64 	%rd2467, %rd2466, %rd2331;
	xor.b64  	%rd2468, %rd2405, %rd2368;
	and.b64  	%rd2469, %rd2442, %rd2468;
	xor.b64  	%rd2470, %rd2469, %rd2368;
	add.s64 	%rd2471, %rd2467, %rd2470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1641,%dummy}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd2442;
	}
	shf.r.wrap.b32 	%r1643, %r1642, %r1641, 14;
	shf.r.wrap.b32 	%r1644, %r1641, %r1642, 14;
	mov.b64 	%rd2472, {%r1644, %r1643};
	shf.r.wrap.b32 	%r1645, %r1642, %r1641, 18;
	shf.r.wrap.b32 	%r1646, %r1641, %r1642, 18;
	mov.b64 	%rd2473, {%r1646, %r1645};
	xor.b64  	%rd2474, %rd2472, %rd2473;
	shf.l.wrap.b32 	%r1647, %r1641, %r1642, 23;
	shf.l.wrap.b32 	%r1648, %r1642, %r1641, 23;
	mov.b64 	%rd2475, {%r1648, %r1647};
	xor.b64  	%rd2476, %rd2474, %rd2475;
	add.s64 	%rd2477, %rd2471, %rd2476;
	add.s64 	%rd2478, %rd2477, 748580250866718886;
	add.s64 	%rd2479, %rd2478, %rd2342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1649,%dummy}, %rd2453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1650}, %rd2453;
	}
	shf.r.wrap.b32 	%r1651, %r1650, %r1649, 28;
	shf.r.wrap.b32 	%r1652, %r1649, %r1650, 28;
	mov.b64 	%rd2480, {%r1652, %r1651};
	shf.l.wrap.b32 	%r1653, %r1649, %r1650, 30;
	shf.l.wrap.b32 	%r1654, %r1650, %r1649, 30;
	mov.b64 	%rd2481, {%r1654, %r1653};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	shf.l.wrap.b32 	%r1655, %r1649, %r1650, 25;
	shf.l.wrap.b32 	%r1656, %r1650, %r1649, 25;
	mov.b64 	%rd2483, {%r1656, %r1655};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	and.b64  	%rd2485, %rd2453, %rd2416;
	or.b64  	%rd2486, %rd2453, %rd2416;
	and.b64  	%rd2487, %rd2486, %rd2379;
	or.b64  	%rd2488, %rd2487, %rd2485;
	add.s64 	%rd2489, %rd2488, %rd2484;
	add.s64 	%rd2490, %rd2489, %rd2478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1657,%dummy}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1658}, %rd2429;
	}
	shf.r.wrap.b32 	%r1659, %r1658, %r1657, 19;
	shf.r.wrap.b32 	%r1660, %r1657, %r1658, 19;
	mov.b64 	%rd2491, {%r1660, %r1659};
	shf.l.wrap.b32 	%r1661, %r1657, %r1658, 3;
	shf.l.wrap.b32 	%r1662, %r1658, %r1657, 3;
	mov.b64 	%rd2492, {%r1662, %r1661};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	shr.u64 	%rd2494, %rd2429, 6;
	xor.b64  	%rd2495, %rd2493, %rd2494;
	shf.r.wrap.b32 	%r1663, %r1320, %r1319, 1;
	shf.r.wrap.b32 	%r1664, %r1319, %r1320, 1;
	mov.b64 	%rd2496, {%r1664, %r1663};
	shf.r.wrap.b32 	%r1665, %r1320, %r1319, 8;
	shf.r.wrap.b32 	%r1666, %r1319, %r1320, 8;
	mov.b64 	%rd2497, {%r1666, %r1665};
	xor.b64  	%rd2498, %rd2496, %rd2497;
	shr.u64 	%rd2499, %rd1948, 7;
	xor.b64  	%rd2500, %rd2498, %rd2499;
	add.s64 	%rd2501, %rd2495, %rd1911;
	add.s64 	%rd2502, %rd2501, %rd2244;
	add.s64 	%rd2503, %rd2502, %rd2500;
	add.s64 	%rd2504, %rd2503, %rd2368;
	xor.b64  	%rd2505, %rd2442, %rd2405;
	and.b64  	%rd2506, %rd2479, %rd2505;
	xor.b64  	%rd2507, %rd2506, %rd2405;
	add.s64 	%rd2508, %rd2504, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1668}, %rd2479;
	}
	shf.r.wrap.b32 	%r1669, %r1668, %r1667, 14;
	shf.r.wrap.b32 	%r1670, %r1667, %r1668, 14;
	mov.b64 	%rd2509, {%r1670, %r1669};
	shf.r.wrap.b32 	%r1671, %r1668, %r1667, 18;
	shf.r.wrap.b32 	%r1672, %r1667, %r1668, 18;
	mov.b64 	%rd2510, {%r1672, %r1671};
	xor.b64  	%rd2511, %rd2509, %rd2510;
	shf.l.wrap.b32 	%r1673, %r1667, %r1668, 23;
	shf.l.wrap.b32 	%r1674, %r1668, %r1667, 23;
	mov.b64 	%rd2512, {%r1674, %r1673};
	xor.b64  	%rd2513, %rd2511, %rd2512;
	add.s64 	%rd2514, %rd2508, %rd2513;
	add.s64 	%rd2515, %rd2514, 1242879168328830382;
	add.s64 	%rd2516, %rd2515, %rd2379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1675,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1676}, %rd2490;
	}
	shf.r.wrap.b32 	%r1677, %r1676, %r1675, 28;
	shf.r.wrap.b32 	%r1678, %r1675, %r1676, 28;
	mov.b64 	%rd2517, {%r1678, %r1677};
	shf.l.wrap.b32 	%r1679, %r1675, %r1676, 30;
	shf.l.wrap.b32 	%r1680, %r1676, %r1675, 30;
	mov.b64 	%rd2518, {%r1680, %r1679};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	shf.l.wrap.b32 	%r1681, %r1675, %r1676, 25;
	shf.l.wrap.b32 	%r1682, %r1676, %r1675, 25;
	mov.b64 	%rd2520, {%r1682, %r1681};
	xor.b64  	%rd2521, %rd2519, %rd2520;
	and.b64  	%rd2522, %rd2490, %rd2453;
	or.b64  	%rd2523, %rd2490, %rd2453;
	and.b64  	%rd2524, %rd2523, %rd2416;
	or.b64  	%rd2525, %rd2524, %rd2522;
	add.s64 	%rd2526, %rd2525, %rd2521;
	add.s64 	%rd2527, %rd2526, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1683,%dummy}, %rd2466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1684}, %rd2466;
	}
	shf.r.wrap.b32 	%r1685, %r1684, %r1683, 19;
	shf.r.wrap.b32 	%r1686, %r1683, %r1684, 19;
	mov.b64 	%rd2528, {%r1686, %r1685};
	shf.l.wrap.b32 	%r1687, %r1683, %r1684, 3;
	shf.l.wrap.b32 	%r1688, %r1684, %r1683, 3;
	mov.b64 	%rd2529, {%r1688, %r1687};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	shr.u64 	%rd2531, %rd2466, 6;
	xor.b64  	%rd2532, %rd2530, %rd2531;
	shf.r.wrap.b32 	%r1689, %r1346, %r1345, 1;
	shf.r.wrap.b32 	%r1690, %r1345, %r1346, 1;
	mov.b64 	%rd2533, {%r1690, %r1689};
	shf.r.wrap.b32 	%r1691, %r1346, %r1345, 8;
	shf.r.wrap.b32 	%r1692, %r1345, %r1346, 8;
	mov.b64 	%rd2534, {%r1692, %r1691};
	xor.b64  	%rd2535, %rd2533, %rd2534;
	shr.u64 	%rd2536, %rd1985, 7;
	xor.b64  	%rd2537, %rd2535, %rd2536;
	add.s64 	%rd2538, %rd2532, %rd1948;
	add.s64 	%rd2539, %rd2538, %rd2281;
	add.s64 	%rd2540, %rd2539, %rd2537;
	add.s64 	%rd2541, %rd2540, %rd2405;
	xor.b64  	%rd2542, %rd2479, %rd2442;
	and.b64  	%rd2543, %rd2516, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2442;
	add.s64 	%rd2545, %rd2541, %rd2544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2516;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 14;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 14;
	mov.b64 	%rd2546, {%r1696, %r1695};
	shf.r.wrap.b32 	%r1697, %r1694, %r1693, 18;
	shf.r.wrap.b32 	%r1698, %r1693, %r1694, 18;
	mov.b64 	%rd2547, {%r1698, %r1697};
	xor.b64  	%rd2548, %rd2546, %rd2547;
	shf.l.wrap.b32 	%r1699, %r1693, %r1694, 23;
	shf.l.wrap.b32 	%r1700, %r1694, %r1693, 23;
	mov.b64 	%rd2549, {%r1700, %r1699};
	xor.b64  	%rd2550, %rd2548, %rd2549;
	add.s64 	%rd2551, %rd2545, %rd2550;
	add.s64 	%rd2552, %rd2551, 1977374033974150939;
	add.s64 	%rd2553, %rd2552, %rd2416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd2527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd2527;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 28;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 28;
	mov.b64 	%rd2554, {%r1704, %r1703};
	shf.l.wrap.b32 	%r1705, %r1701, %r1702, 30;
	shf.l.wrap.b32 	%r1706, %r1702, %r1701, 30;
	mov.b64 	%rd2555, {%r1706, %r1705};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	shf.l.wrap.b32 	%r1707, %r1701, %r1702, 25;
	shf.l.wrap.b32 	%r1708, %r1702, %r1701, 25;
	mov.b64 	%rd2557, {%r1708, %r1707};
	xor.b64  	%rd2558, %rd2556, %rd2557;
	and.b64  	%rd2559, %rd2527, %rd2490;
	or.b64  	%rd2560, %rd2527, %rd2490;
	and.b64  	%rd2561, %rd2560, %rd2453;
	or.b64  	%rd2562, %rd2561, %rd2559;
	add.s64 	%rd2563, %rd2562, %rd2558;
	add.s64 	%rd2564, %rd2563, %rd2552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1709,%dummy}, %rd2503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1710}, %rd2503;
	}
	shf.r.wrap.b32 	%r1711, %r1710, %r1709, 19;
	shf.r.wrap.b32 	%r1712, %r1709, %r1710, 19;
	mov.b64 	%rd2565, {%r1712, %r1711};
	shf.l.wrap.b32 	%r1713, %r1709, %r1710, 3;
	shf.l.wrap.b32 	%r1714, %r1710, %r1709, 3;
	mov.b64 	%rd2566, {%r1714, %r1713};
	xor.b64  	%rd2567, %rd2565, %rd2566;
	shr.u64 	%rd2568, %rd2503, 6;
	xor.b64  	%rd2569, %rd2567, %rd2568;
	shf.r.wrap.b32 	%r1715, %r1372, %r1371, 1;
	shf.r.wrap.b32 	%r1716, %r1371, %r1372, 1;
	mov.b64 	%rd2570, {%r1716, %r1715};
	shf.r.wrap.b32 	%r1717, %r1372, %r1371, 8;
	shf.r.wrap.b32 	%r1718, %r1371, %r1372, 8;
	mov.b64 	%rd2571, {%r1718, %r1717};
	xor.b64  	%rd2572, %rd2570, %rd2571;
	shr.u64 	%rd2573, %rd2022, 7;
	xor.b64  	%rd2574, %rd2572, %rd2573;
	add.s64 	%rd2575, %rd2569, %rd1985;
	add.s64 	%rd2576, %rd2575, %rd2318;
	add.s64 	%rd2577, %rd2576, %rd2574;
	add.s64 	%rd2578, %rd2577, %rd2442;
	xor.b64  	%rd2579, %rd2516, %rd2479;
	and.b64  	%rd2580, %rd2553, %rd2579;
	xor.b64  	%rd2581, %rd2580, %rd2479;
	add.s64 	%rd2582, %rd2578, %rd2581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2553;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 14;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 14;
	mov.b64 	%rd2583, {%r1722, %r1721};
	shf.r.wrap.b32 	%r1723, %r1720, %r1719, 18;
	shf.r.wrap.b32 	%r1724, %r1719, %r1720, 18;
	mov.b64 	%rd2584, {%r1724, %r1723};
	xor.b64  	%rd2585, %rd2583, %rd2584;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 23;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 23;
	mov.b64 	%rd2586, {%r1726, %r1725};
	xor.b64  	%rd2587, %rd2585, %rd2586;
	add.s64 	%rd2588, %rd2582, %rd2587;
	add.s64 	%rd2589, %rd2588, 2944078676154940804;
	add.s64 	%rd2590, %rd2589, %rd2453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2564;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 28;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 28;
	mov.b64 	%rd2591, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 30;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 30;
	mov.b64 	%rd2592, {%r1732, %r1731};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 25;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 25;
	mov.b64 	%rd2594, {%r1734, %r1733};
	xor.b64  	%rd2595, %rd2593, %rd2594;
	and.b64  	%rd2596, %rd2564, %rd2527;
	or.b64  	%rd2597, %rd2564, %rd2527;
	and.b64  	%rd2598, %rd2597, %rd2490;
	or.b64  	%rd2599, %rd2598, %rd2596;
	add.s64 	%rd2600, %rd2599, %rd2595;
	add.s64 	%rd2601, %rd2600, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2540;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 19;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 19;
	mov.b64 	%rd2602, {%r1738, %r1737};
	shf.l.wrap.b32 	%r1739, %r1735, %r1736, 3;
	shf.l.wrap.b32 	%r1740, %r1736, %r1735, 3;
	mov.b64 	%rd2603, {%r1740, %r1739};
	xor.b64  	%rd2604, %rd2602, %rd2603;
	shr.u64 	%rd2605, %rd2540, 6;
	xor.b64  	%rd2606, %rd2604, %rd2605;
	shf.r.wrap.b32 	%r1741, %r1398, %r1397, 1;
	shf.r.wrap.b32 	%r1742, %r1397, %r1398, 1;
	mov.b64 	%rd2607, {%r1742, %r1741};
	shf.r.wrap.b32 	%r1743, %r1398, %r1397, 8;
	shf.r.wrap.b32 	%r1744, %r1397, %r1398, 8;
	mov.b64 	%rd2608, {%r1744, %r1743};
	xor.b64  	%rd2609, %rd2607, %rd2608;
	shr.u64 	%rd2610, %rd2059, 7;
	xor.b64  	%rd2611, %rd2609, %rd2610;
	add.s64 	%rd2612, %rd2606, %rd2022;
	add.s64 	%rd2613, %rd2612, %rd2355;
	add.s64 	%rd2614, %rd2613, %rd2611;
	add.s64 	%rd2615, %rd2614, %rd2479;
	xor.b64  	%rd2616, %rd2553, %rd2516;
	and.b64  	%rd2617, %rd2590, %rd2616;
	xor.b64  	%rd2618, %rd2617, %rd2516;
	add.s64 	%rd2619, %rd2615, %rd2618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd2590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd2590;
	}
	shf.r.wrap.b32 	%r1747, %r1746, %r1745, 14;
	shf.r.wrap.b32 	%r1748, %r1745, %r1746, 14;
	mov.b64 	%rd2620, {%r1748, %r1747};
	shf.r.wrap.b32 	%r1749, %r1746, %r1745, 18;
	shf.r.wrap.b32 	%r1750, %r1745, %r1746, 18;
	mov.b64 	%rd2621, {%r1750, %r1749};
	xor.b64  	%rd2622, %rd2620, %rd2621;
	shf.l.wrap.b32 	%r1751, %r1745, %r1746, 23;
	shf.l.wrap.b32 	%r1752, %r1746, %r1745, 23;
	mov.b64 	%rd2623, {%r1752, %r1751};
	xor.b64  	%rd2624, %rd2622, %rd2623;
	add.s64 	%rd2625, %rd2619, %rd2624;
	add.s64 	%rd2626, %rd2625, 3659926193048069267;
	add.s64 	%rd2627, %rd2626, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1753,%dummy}, %rd2601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1754}, %rd2601;
	}
	shf.r.wrap.b32 	%r1755, %r1754, %r1753, 28;
	shf.r.wrap.b32 	%r1756, %r1753, %r1754, 28;
	mov.b64 	%rd2628, {%r1756, %r1755};
	shf.l.wrap.b32 	%r1757, %r1753, %r1754, 30;
	shf.l.wrap.b32 	%r1758, %r1754, %r1753, 30;
	mov.b64 	%rd2629, {%r1758, %r1757};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	shf.l.wrap.b32 	%r1759, %r1753, %r1754, 25;
	shf.l.wrap.b32 	%r1760, %r1754, %r1753, 25;
	mov.b64 	%rd2631, {%r1760, %r1759};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	and.b64  	%rd2633, %rd2601, %rd2564;
	or.b64  	%rd2634, %rd2601, %rd2564;
	and.b64  	%rd2635, %rd2634, %rd2527;
	or.b64  	%rd2636, %rd2635, %rd2633;
	add.s64 	%rd2637, %rd2636, %rd2632;
	add.s64 	%rd2638, %rd2637, %rd2626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1761,%dummy}, %rd2577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1762}, %rd2577;
	}
	shf.r.wrap.b32 	%r1763, %r1762, %r1761, 19;
	shf.r.wrap.b32 	%r1764, %r1761, %r1762, 19;
	mov.b64 	%rd2639, {%r1764, %r1763};
	shf.l.wrap.b32 	%r1765, %r1761, %r1762, 3;
	shf.l.wrap.b32 	%r1766, %r1762, %r1761, 3;
	mov.b64 	%rd2640, {%r1766, %r1765};
	xor.b64  	%rd2641, %rd2639, %rd2640;
	shr.u64 	%rd2642, %rd2577, 6;
	xor.b64  	%rd2643, %rd2641, %rd2642;
	shf.r.wrap.b32 	%r1767, %r1424, %r1423, 1;
	shf.r.wrap.b32 	%r1768, %r1423, %r1424, 1;
	mov.b64 	%rd2644, {%r1768, %r1767};
	shf.r.wrap.b32 	%r1769, %r1424, %r1423, 8;
	shf.r.wrap.b32 	%r1770, %r1423, %r1424, 8;
	mov.b64 	%rd2645, {%r1770, %r1769};
	xor.b64  	%rd2646, %rd2644, %rd2645;
	shr.u64 	%rd2647, %rd2096, 7;
	xor.b64  	%rd2648, %rd2646, %rd2647;
	add.s64 	%rd2649, %rd2643, %rd2059;
	add.s64 	%rd2650, %rd2649, %rd2392;
	add.s64 	%rd2651, %rd2650, %rd2648;
	add.s64 	%rd2652, %rd2651, %rd2516;
	xor.b64  	%rd2653, %rd2590, %rd2553;
	and.b64  	%rd2654, %rd2627, %rd2653;
	xor.b64  	%rd2655, %rd2654, %rd2553;
	add.s64 	%rd2656, %rd2652, %rd2655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd2627;
	}
	shf.r.wrap.b32 	%r1773, %r1772, %r1771, 14;
	shf.r.wrap.b32 	%r1774, %r1771, %r1772, 14;
	mov.b64 	%rd2657, {%r1774, %r1773};
	shf.r.wrap.b32 	%r1775, %r1772, %r1771, 18;
	shf.r.wrap.b32 	%r1776, %r1771, %r1772, 18;
	mov.b64 	%rd2658, {%r1776, %r1775};
	xor.b64  	%rd2659, %rd2657, %rd2658;
	shf.l.wrap.b32 	%r1777, %r1771, %r1772, 23;
	shf.l.wrap.b32 	%r1778, %r1772, %r1771, 23;
	mov.b64 	%rd2660, {%r1778, %r1777};
	xor.b64  	%rd2661, %rd2659, %rd2660;
	add.s64 	%rd2662, %rd2656, %rd2661;
	add.s64 	%rd2663, %rd2662, 4368137639120453308;
	add.s64 	%rd2664, %rd2663, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1779,%dummy}, %rd2638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd2638;
	}
	shf.r.wrap.b32 	%r1781, %r1780, %r1779, 28;
	shf.r.wrap.b32 	%r1782, %r1779, %r1780, 28;
	mov.b64 	%rd2665, {%r1782, %r1781};
	shf.l.wrap.b32 	%r1783, %r1779, %r1780, 30;
	shf.l.wrap.b32 	%r1784, %r1780, %r1779, 30;
	mov.b64 	%rd2666, {%r1784, %r1783};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	shf.l.wrap.b32 	%r1785, %r1779, %r1780, 25;
	shf.l.wrap.b32 	%r1786, %r1780, %r1779, 25;
	mov.b64 	%rd2668, {%r1786, %r1785};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	and.b64  	%rd2670, %rd2638, %rd2601;
	or.b64  	%rd2671, %rd2638, %rd2601;
	and.b64  	%rd2672, %rd2671, %rd2564;
	or.b64  	%rd2673, %rd2672, %rd2670;
	add.s64 	%rd2674, %rd2673, %rd2669;
	add.s64 	%rd2675, %rd2674, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1787,%dummy}, %rd2614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1788}, %rd2614;
	}
	shf.r.wrap.b32 	%r1789, %r1788, %r1787, 19;
	shf.r.wrap.b32 	%r1790, %r1787, %r1788, 19;
	mov.b64 	%rd2676, {%r1790, %r1789};
	shf.l.wrap.b32 	%r1791, %r1787, %r1788, 3;
	shf.l.wrap.b32 	%r1792, %r1788, %r1787, 3;
	mov.b64 	%rd2677, {%r1792, %r1791};
	xor.b64  	%rd2678, %rd2676, %rd2677;
	shr.u64 	%rd2679, %rd2614, 6;
	xor.b64  	%rd2680, %rd2678, %rd2679;
	shf.r.wrap.b32 	%r1793, %r1450, %r1449, 1;
	shf.r.wrap.b32 	%r1794, %r1449, %r1450, 1;
	mov.b64 	%rd2681, {%r1794, %r1793};
	shf.r.wrap.b32 	%r1795, %r1450, %r1449, 8;
	shf.r.wrap.b32 	%r1796, %r1449, %r1450, 8;
	mov.b64 	%rd2682, {%r1796, %r1795};
	xor.b64  	%rd2683, %rd2681, %rd2682;
	shr.u64 	%rd2684, %rd2133, 7;
	xor.b64  	%rd2685, %rd2683, %rd2684;
	add.s64 	%rd2686, %rd2680, %rd2096;
	add.s64 	%rd2687, %rd2686, %rd2429;
	add.s64 	%rd2688, %rd2687, %rd2685;
	add.s64 	%rd2689, %rd2688, %rd2553;
	xor.b64  	%rd2690, %rd2627, %rd2590;
	and.b64  	%rd2691, %rd2664, %rd2690;
	xor.b64  	%rd2692, %rd2691, %rd2590;
	add.s64 	%rd2693, %rd2689, %rd2692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd2664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd2664;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 14;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 14;
	mov.b64 	%rd2694, {%r1800, %r1799};
	shf.r.wrap.b32 	%r1801, %r1798, %r1797, 18;
	shf.r.wrap.b32 	%r1802, %r1797, %r1798, 18;
	mov.b64 	%rd2695, {%r1802, %r1801};
	xor.b64  	%rd2696, %rd2694, %rd2695;
	shf.l.wrap.b32 	%r1803, %r1797, %r1798, 23;
	shf.l.wrap.b32 	%r1804, %r1798, %r1797, 23;
	mov.b64 	%rd2697, {%r1804, %r1803};
	xor.b64  	%rd2698, %rd2696, %rd2697;
	add.s64 	%rd2699, %rd2693, %rd2698;
	add.s64 	%rd2700, %rd2699, 4836135668995329356;
	add.s64 	%rd2701, %rd2700, %rd2564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd2675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd2675;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 28;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 28;
	mov.b64 	%rd2702, {%r1808, %r1807};
	shf.l.wrap.b32 	%r1809, %r1805, %r1806, 30;
	shf.l.wrap.b32 	%r1810, %r1806, %r1805, 30;
	mov.b64 	%rd2703, {%r1810, %r1809};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	shf.l.wrap.b32 	%r1811, %r1805, %r1806, 25;
	shf.l.wrap.b32 	%r1812, %r1806, %r1805, 25;
	mov.b64 	%rd2705, {%r1812, %r1811};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	and.b64  	%rd2707, %rd2675, %rd2638;
	or.b64  	%rd2708, %rd2675, %rd2638;
	and.b64  	%rd2709, %rd2708, %rd2601;
	or.b64  	%rd2710, %rd2709, %rd2707;
	add.s64 	%rd2711, %rd2710, %rd2706;
	add.s64 	%rd2712, %rd2711, %rd2700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1813,%dummy}, %rd2651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1814}, %rd2651;
	}
	shf.r.wrap.b32 	%r1815, %r1814, %r1813, 19;
	shf.r.wrap.b32 	%r1816, %r1813, %r1814, 19;
	mov.b64 	%rd2713, {%r1816, %r1815};
	shf.l.wrap.b32 	%r1817, %r1813, %r1814, 3;
	shf.l.wrap.b32 	%r1818, %r1814, %r1813, 3;
	mov.b64 	%rd2714, {%r1818, %r1817};
	xor.b64  	%rd2715, %rd2713, %rd2714;
	shr.u64 	%rd2716, %rd2651, 6;
	xor.b64  	%rd2717, %rd2715, %rd2716;
	shf.r.wrap.b32 	%r1819, %r1476, %r1475, 1;
	shf.r.wrap.b32 	%r1820, %r1475, %r1476, 1;
	mov.b64 	%rd2718, {%r1820, %r1819};
	shf.r.wrap.b32 	%r1821, %r1476, %r1475, 8;
	shf.r.wrap.b32 	%r1822, %r1475, %r1476, 8;
	mov.b64 	%rd2719, {%r1822, %r1821};
	xor.b64  	%rd2720, %rd2718, %rd2719;
	shr.u64 	%rd2721, %rd2170, 7;
	xor.b64  	%rd2722, %rd2720, %rd2721;
	add.s64 	%rd2723, %rd2717, %rd2133;
	add.s64 	%rd2724, %rd2723, %rd2466;
	add.s64 	%rd2725, %rd2724, %rd2722;
	add.s64 	%rd2726, %rd2725, %rd2590;
	xor.b64  	%rd2727, %rd2664, %rd2627;
	and.b64  	%rd2728, %rd2701, %rd2727;
	xor.b64  	%rd2729, %rd2728, %rd2627;
	add.s64 	%rd2730, %rd2726, %rd2729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2701;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 14;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 14;
	mov.b64 	%rd2731, {%r1826, %r1825};
	shf.r.wrap.b32 	%r1827, %r1824, %r1823, 18;
	shf.r.wrap.b32 	%r1828, %r1823, %r1824, 18;
	mov.b64 	%rd2732, {%r1828, %r1827};
	xor.b64  	%rd2733, %rd2731, %rd2732;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 23;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 23;
	mov.b64 	%rd2734, {%r1830, %r1829};
	xor.b64  	%rd2735, %rd2733, %rd2734;
	add.s64 	%rd2736, %rd2730, %rd2735;
	add.s64 	%rd2737, %rd2736, 5532061633213252278;
	add.s64 	%rd3, %rd2737, %rd2601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2712;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 28;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 28;
	mov.b64 	%rd2738, {%r1834, %r1833};
	shf.l.wrap.b32 	%r1835, %r1831, %r1832, 30;
	shf.l.wrap.b32 	%r1836, %r1832, %r1831, 30;
	mov.b64 	%rd2739, {%r1836, %r1835};
	xor.b64  	%rd2740, %rd2738, %rd2739;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 25;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 25;
	mov.b64 	%rd2741, {%r1838, %r1837};
	xor.b64  	%rd2742, %rd2740, %rd2741;
	and.b64  	%rd2743, %rd2712, %rd2675;
	or.b64  	%rd2744, %rd2712, %rd2675;
	and.b64  	%rd2745, %rd2744, %rd2638;
	or.b64  	%rd2746, %rd2745, %rd2743;
	add.s64 	%rd2747, %rd2746, %rd2742;
	add.s64 	%rd2748, %rd2747, %rd2737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2688;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 19;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 19;
	mov.b64 	%rd2749, {%r1842, %r1841};
	shf.l.wrap.b32 	%r1843, %r1839, %r1840, 3;
	shf.l.wrap.b32 	%r1844, %r1840, %r1839, 3;
	mov.b64 	%rd2750, {%r1844, %r1843};
	xor.b64  	%rd2751, %rd2749, %rd2750;
	shr.u64 	%rd2752, %rd2688, 6;
	xor.b64  	%rd2753, %rd2751, %rd2752;
	shf.r.wrap.b32 	%r1845, %r1502, %r1501, 1;
	shf.r.wrap.b32 	%r1846, %r1501, %r1502, 1;
	mov.b64 	%rd2754, {%r1846, %r1845};
	shf.r.wrap.b32 	%r1847, %r1502, %r1501, 8;
	shf.r.wrap.b32 	%r1848, %r1501, %r1502, 8;
	mov.b64 	%rd2755, {%r1848, %r1847};
	xor.b64  	%rd2756, %rd2754, %rd2755;
	shr.u64 	%rd2757, %rd2207, 7;
	xor.b64  	%rd2758, %rd2756, %rd2757;
	add.s64 	%rd2759, %rd2753, %rd2170;
	add.s64 	%rd2760, %rd2759, %rd2503;
	add.s64 	%rd2761, %rd2760, %rd2758;
	add.s64 	%rd2762, %rd2761, %rd2627;
	xor.b64  	%rd2763, %rd2701, %rd2664;
	and.b64  	%rd2764, %rd3, %rd2763;
	xor.b64  	%rd2765, %rd2764, %rd2664;
	add.s64 	%rd2766, %rd2762, %rd2765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd3;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd3;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 14;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 14;
	mov.b64 	%rd2767, {%r1852, %r1851};
	shf.r.wrap.b32 	%r1853, %r1850, %r1849, 18;
	shf.r.wrap.b32 	%r1854, %r1849, %r1850, 18;
	mov.b64 	%rd2768, {%r1854, %r1853};
	xor.b64  	%rd2769, %rd2767, %rd2768;
	shf.l.wrap.b32 	%r1855, %r1849, %r1850, 23;
	shf.l.wrap.b32 	%r1856, %r1850, %r1849, 23;
	mov.b64 	%rd2770, {%r1856, %r1855};
	xor.b64  	%rd2771, %rd2769, %rd2770;
	add.s64 	%rd2772, %rd2766, %rd2771;
	add.s64 	%rd2773, %rd2772, 6448918945643986474;
	add.s64 	%rd4, %rd2773, %rd2638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd2748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd2748;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 28;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 28;
	mov.b64 	%rd2774, {%r1860, %r1859};
	shf.l.wrap.b32 	%r1861, %r1857, %r1858, 30;
	shf.l.wrap.b32 	%r1862, %r1858, %r1857, 30;
	mov.b64 	%rd2775, {%r1862, %r1861};
	xor.b64  	%rd2776, %rd2774, %rd2775;
	shf.l.wrap.b32 	%r1863, %r1857, %r1858, 25;
	shf.l.wrap.b32 	%r1864, %r1858, %r1857, 25;
	mov.b64 	%rd2777, {%r1864, %r1863};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	and.b64  	%rd2779, %rd2748, %rd2712;
	or.b64  	%rd2780, %rd2748, %rd2712;
	and.b64  	%rd2781, %rd2780, %rd2675;
	or.b64  	%rd2782, %rd2781, %rd2779;
	add.s64 	%rd2783, %rd2782, %rd2778;
	add.s64 	%rd2784, %rd2783, %rd2773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1865,%dummy}, %rd2725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1866}, %rd2725;
	}
	shf.r.wrap.b32 	%r1867, %r1866, %r1865, 19;
	shf.r.wrap.b32 	%r1868, %r1865, %r1866, 19;
	mov.b64 	%rd2785, {%r1868, %r1867};
	shf.l.wrap.b32 	%r1869, %r1865, %r1866, 3;
	shf.l.wrap.b32 	%r1870, %r1866, %r1865, 3;
	mov.b64 	%rd2786, {%r1870, %r1869};
	xor.b64  	%rd2787, %rd2785, %rd2786;
	shr.u64 	%rd2788, %rd2725, 6;
	xor.b64  	%rd2789, %rd2787, %rd2788;
	shf.r.wrap.b32 	%r1871, %r1528, %r1527, 1;
	shf.r.wrap.b32 	%r1872, %r1527, %r1528, 1;
	mov.b64 	%rd2790, {%r1872, %r1871};
	shf.r.wrap.b32 	%r1873, %r1528, %r1527, 8;
	shf.r.wrap.b32 	%r1874, %r1527, %r1528, 8;
	mov.b64 	%rd2791, {%r1874, %r1873};
	xor.b64  	%rd2792, %rd2790, %rd2791;
	shr.u64 	%rd2793, %rd2244, 7;
	xor.b64  	%rd2794, %rd2792, %rd2793;
	add.s64 	%rd2795, %rd2789, %rd2207;
	add.s64 	%rd2796, %rd2795, %rd2540;
	add.s64 	%rd2797, %rd2796, %rd2794;
	add.s64 	%rd2798, %rd2797, %rd2664;
	xor.b64  	%rd2799, %rd3, %rd2701;
	and.b64  	%rd2800, %rd4, %rd2799;
	xor.b64  	%rd2801, %rd2800, %rd2701;
	add.s64 	%rd2802, %rd2798, %rd2801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1875,%dummy}, %rd4;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1876}, %rd4;
	}
	shf.r.wrap.b32 	%r1877, %r1876, %r1875, 14;
	shf.r.wrap.b32 	%r1878, %r1875, %r1876, 14;
	mov.b64 	%rd2803, {%r1878, %r1877};
	shf.r.wrap.b32 	%r1879, %r1876, %r1875, 18;
	shf.r.wrap.b32 	%r1880, %r1875, %r1876, 18;
	mov.b64 	%rd2804, {%r1880, %r1879};
	xor.b64  	%rd2805, %rd2803, %rd2804;
	shf.l.wrap.b32 	%r1881, %r1875, %r1876, 23;
	shf.l.wrap.b32 	%r1882, %r1876, %r1875, 23;
	mov.b64 	%rd2806, {%r1882, %r1881};
	xor.b64  	%rd2807, %rd2805, %rd2806;
	add.s64 	%rd2808, %rd2802, %rd2807;
	add.s64 	%rd2809, %rd2808, 6902733635092675308;
	add.s64 	%rd5, %rd2809, %rd2675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1883,%dummy}, %rd2784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1884}, %rd2784;
	}
	shf.r.wrap.b32 	%r1885, %r1884, %r1883, 28;
	shf.r.wrap.b32 	%r1886, %r1883, %r1884, 28;
	mov.b64 	%rd2810, {%r1886, %r1885};
	shf.l.wrap.b32 	%r1887, %r1883, %r1884, 30;
	shf.l.wrap.b32 	%r1888, %r1884, %r1883, 30;
	mov.b64 	%rd2811, {%r1888, %r1887};
	xor.b64  	%rd2812, %rd2810, %rd2811;
	shf.l.wrap.b32 	%r1889, %r1883, %r1884, 25;
	shf.l.wrap.b32 	%r1890, %r1884, %r1883, 25;
	mov.b64 	%rd2813, {%r1890, %r1889};
	xor.b64  	%rd2814, %rd2812, %rd2813;
	and.b64  	%rd2815, %rd2784, %rd2748;
	or.b64  	%rd2816, %rd2784, %rd2748;
	and.b64  	%rd2817, %rd2816, %rd2712;
	or.b64  	%rd2818, %rd2817, %rd2815;
	add.s64 	%rd2819, %rd2818, %rd2814;
	add.s64 	%rd2820, %rd2819, %rd2809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1891,%dummy}, %rd2761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1892}, %rd2761;
	}
	shf.r.wrap.b32 	%r1893, %r1892, %r1891, 19;
	shf.r.wrap.b32 	%r1894, %r1891, %r1892, 19;
	mov.b64 	%rd2821, {%r1894, %r1893};
	shf.l.wrap.b32 	%r1895, %r1891, %r1892, 3;
	shf.l.wrap.b32 	%r1896, %r1892, %r1891, 3;
	mov.b64 	%rd2822, {%r1896, %r1895};
	xor.b64  	%rd2823, %rd2821, %rd2822;
	shr.u64 	%rd2824, %rd2761, 6;
	xor.b64  	%rd2825, %rd2823, %rd2824;
	shf.r.wrap.b32 	%r1897, %r1554, %r1553, 1;
	shf.r.wrap.b32 	%r1898, %r1553, %r1554, 1;
	mov.b64 	%rd2826, {%r1898, %r1897};
	shf.r.wrap.b32 	%r1899, %r1554, %r1553, 8;
	shf.r.wrap.b32 	%r1900, %r1553, %r1554, 8;
	mov.b64 	%rd2827, {%r1900, %r1899};
	xor.b64  	%rd2828, %rd2826, %rd2827;
	shr.u64 	%rd2829, %rd2281, 7;
	xor.b64  	%rd2830, %rd2828, %rd2829;
	add.s64 	%rd2831, %rd2825, %rd2244;
	add.s64 	%rd2832, %rd2831, %rd2577;
	add.s64 	%rd2833, %rd2832, %rd2830;
	add.s64 	%rd2834, %rd2833, %rd2701;
	xor.b64  	%rd2835, %rd4, %rd3;
	and.b64  	%rd2836, %rd5, %rd2835;
	xor.b64  	%rd2837, %rd2836, %rd3;
	add.s64 	%rd2838, %rd2834, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1901,%dummy}, %rd5;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1902}, %rd5;
	}
	shf.r.wrap.b32 	%r1903, %r1902, %r1901, 14;
	shf.r.wrap.b32 	%r1904, %r1901, %r1902, 14;
	mov.b64 	%rd2839, {%r1904, %r1903};
	shf.r.wrap.b32 	%r1905, %r1902, %r1901, 18;
	shf.r.wrap.b32 	%r1906, %r1901, %r1902, 18;
	mov.b64 	%rd2840, {%r1906, %r1905};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	shf.l.wrap.b32 	%r1907, %r1901, %r1902, 23;
	shf.l.wrap.b32 	%r1908, %r1902, %r1901, 23;
	mov.b64 	%rd2842, {%r1908, %r1907};
	xor.b64  	%rd2843, %rd2841, %rd2842;
	add.s64 	%rd2844, %rd2838, %rd2843;
	add.s64 	%rd2845, %rd2844, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd2820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd2820;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 28;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 28;
	mov.b64 	%rd2846, {%r1912, %r1911};
	shf.l.wrap.b32 	%r1913, %r1909, %r1910, 30;
	shf.l.wrap.b32 	%r1914, %r1910, %r1909, 30;
	mov.b64 	%rd2847, {%r1914, %r1913};
	xor.b64  	%rd2848, %rd2846, %rd2847;
	shf.l.wrap.b32 	%r1915, %r1909, %r1910, 25;
	shf.l.wrap.b32 	%r1916, %r1910, %r1909, 25;
	mov.b64 	%rd2849, {%r1916, %r1915};
	xor.b64  	%rd2850, %rd2848, %rd2849;
	and.b64  	%rd2851, %rd2820, %rd2784;
	or.b64  	%rd2852, %rd2820, %rd2784;
	and.b64  	%rd2853, %rd2852, %rd2748;
	or.b64  	%rd2854, %rd2853, %rd2851;
	add.s64 	%rd2855, %rd2850, %rd2854;
	add.s64 	%rd2856, %rd2855, %rd2845;
	add.s64 	%rd6, %rd2856, 7640891576956012808;
	add.s64 	%rd7, %rd2820, -4942790177534073029;
	add.s64 	%rd8, %rd2784, 4354685564936845355;
	add.s64 	%rd9, %rd2748, -6534734903238641935;
	add.s64 	%rd2857, %rd2712, %rd2845;
	add.s64 	%rd10, %rd2857, 5840696475078001361;
	add.s64 	%rd11, %rd5, -7276294671716946913;
	add.s64 	%rd12, %rd4, 2270897969802886507;
	add.s64 	%rd13, %rd3, 6620516959819538809;
	xor.b64  	%rd2858, %rd141, 6655295901103053916;
	mov.u64 	%rd2859, 6655295901103053916;
	xor.b64  	%rd2860, %rd146, 6655295901103053916;
	xor.b64  	%rd2861, %rd150, 6655295901103053916;
	xor.b64  	%rd2862, %rd154, 6655295901103053916;
	xor.b64  	%rd2863, %rd158, 6655295901103053916;
	xor.b64  	%rd2864, %rd162, 6655295901103053916;
	xor.b64  	%rd2865, %rd166, 6655295901103053916;
	xor.b64  	%rd2866, %rd170, 6655295901103053916;
	add.s64 	%rd2867, %rd178, %rd2858;
	add.s64 	%rd2868, %rd2867, -4263291710961585108;
	add.s64 	%rd2869, %rd187, %rd2867;
	and.b64  	%rd2870, %rd2868, -3887949035690463538;
	xor.b64  	%rd2871, %rd2870, -7276294671716946913;
	add.s64 	%rd2872, %rd2860, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd2868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd2868;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 14;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 14;
	mov.b64 	%rd2873, {%r1920, %r1919};
	shf.r.wrap.b32 	%r1921, %r1918, %r1917, 18;
	shf.r.wrap.b32 	%r1922, %r1917, %r1918, 18;
	mov.b64 	%rd2874, {%r1922, %r1921};
	xor.b64  	%rd2875, %rd2873, %rd2874;
	shf.l.wrap.b32 	%r1923, %r1917, %r1918, 23;
	shf.l.wrap.b32 	%r1924, %r1918, %r1917, 23;
	mov.b64 	%rd2876, {%r1924, %r1923};
	xor.b64  	%rd2877, %rd2875, %rd2876;
	add.s64 	%rd2878, %rd2872, %rd2877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd2869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd2869;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 28;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 28;
	mov.b64 	%rd2879, {%r1928, %r1927};
	shf.l.wrap.b32 	%r1929, %r1925, %r1926, 30;
	shf.l.wrap.b32 	%r1930, %r1926, %r1925, 30;
	mov.b64 	%rd2880, {%r1930, %r1929};
	xor.b64  	%rd2881, %rd2879, %rd2880;
	shf.l.wrap.b32 	%r1931, %r1925, %r1926, 25;
	shf.l.wrap.b32 	%r1932, %r1926, %r1925, 25;
	mov.b64 	%rd2882, {%r1932, %r1931};
	xor.b64  	%rd2883, %rd2881, %rd2882;
	and.b64  	%rd2884, %rd2869, -3355664534840381901;
	or.b64  	%rd2885, %rd2884, 3026882967131160840;
	add.s64 	%rd2886, %rd2885, %rd2883;
	add.s64 	%rd2887, %rd2886, %rd2878;
	add.s64 	%rd2888, %rd2878, -3663095898801038493;
	add.s64 	%rd2889, %rd2887, -8017781463737883848;
	xor.b64  	%rd2890, %rd2868, 5840696475078001361;
	and.b64  	%rd2891, %rd2888, %rd2890;
	xor.b64  	%rd2892, %rd2891, 5840696475078001361;
	add.s64 	%rd2893, %rd2861, %rd2892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1933,%dummy}, %rd2888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1934}, %rd2888;
	}
	shf.r.wrap.b32 	%r1935, %r1934, %r1933, 14;
	shf.r.wrap.b32 	%r1936, %r1933, %r1934, 14;
	mov.b64 	%rd2894, {%r1936, %r1935};
	shf.r.wrap.b32 	%r1937, %r1934, %r1933, 18;
	shf.r.wrap.b32 	%r1938, %r1933, %r1934, 18;
	mov.b64 	%rd2895, {%r1938, %r1937};
	xor.b64  	%rd2896, %rd2894, %rd2895;
	shf.l.wrap.b32 	%r1939, %r1933, %r1934, 23;
	shf.l.wrap.b32 	%r1940, %r1934, %r1933, 23;
	mov.b64 	%rd2897, {%r1940, %r1939};
	xor.b64  	%rd2898, %rd2896, %rd2897;
	add.s64 	%rd2899, %rd2893, %rd2898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd2889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1942}, %rd2889;
	}
	shf.r.wrap.b32 	%r1943, %r1942, %r1941, 28;
	shf.r.wrap.b32 	%r1944, %r1941, %r1942, 28;
	mov.b64 	%rd2900, {%r1944, %r1943};
	shf.l.wrap.b32 	%r1945, %r1941, %r1942, 30;
	shf.l.wrap.b32 	%r1946, %r1942, %r1941, 30;
	mov.b64 	%rd2901, {%r1946, %r1945};
	xor.b64  	%rd2902, %rd2900, %rd2901;
	shf.l.wrap.b32 	%r1947, %r1941, %r1942, 25;
	shf.l.wrap.b32 	%r1948, %r1942, %r1941, 25;
	mov.b64 	%rd2903, {%r1948, %r1947};
	xor.b64  	%rd2904, %rd2902, %rd2903;
	and.b64  	%rd2905, %rd2889, %rd2869;
	or.b64  	%rd2906, %rd2889, %rd2869;
	and.b64  	%rd2907, %rd2906, 7640891576956012808;
	or.b64  	%rd2908, %rd2907, %rd2905;
	add.s64 	%rd2909, %rd2908, %rd2904;
	add.s64 	%rd2910, %rd2909, %rd2899;
	add.s64 	%rd2911, %rd2899, 877659737583668873;
	add.s64 	%rd2912, %rd2910, 5820449915117741902;
	xor.b64  	%rd2913, %rd2888, %rd2868;
	and.b64  	%rd2914, %rd2911, %rd2913;
	xor.b64  	%rd2915, %rd2914, %rd2868;
	add.s64 	%rd2916, %rd2862, %rd2915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1949,%dummy}, %rd2911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1950}, %rd2911;
	}
	shf.r.wrap.b32 	%r1951, %r1950, %r1949, 14;
	shf.r.wrap.b32 	%r1952, %r1949, %r1950, 14;
	mov.b64 	%rd2917, {%r1952, %r1951};
	shf.r.wrap.b32 	%r1953, %r1950, %r1949, 18;
	shf.r.wrap.b32 	%r1954, %r1949, %r1950, 18;
	mov.b64 	%rd2918, {%r1954, %r1953};
	xor.b64  	%rd2919, %rd2917, %rd2918;
	shf.l.wrap.b32 	%r1955, %r1949, %r1950, 23;
	shf.l.wrap.b32 	%r1956, %r1950, %r1949, 23;
	mov.b64 	%rd2920, {%r1956, %r1955};
	xor.b64  	%rd2921, %rd2919, %rd2920;
	add.s64 	%rd2922, %rd2916, %rd2921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1957,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1958}, %rd2912;
	}
	shf.r.wrap.b32 	%r1959, %r1958, %r1957, 28;
	shf.r.wrap.b32 	%r1960, %r1957, %r1958, 28;
	mov.b64 	%rd2923, {%r1960, %r1959};
	shf.l.wrap.b32 	%r1961, %r1957, %r1958, 30;
	shf.l.wrap.b32 	%r1962, %r1958, %r1957, 30;
	mov.b64 	%rd2924, {%r1962, %r1961};
	xor.b64  	%rd2925, %rd2923, %rd2924;
	shf.l.wrap.b32 	%r1963, %r1957, %r1958, 25;
	shf.l.wrap.b32 	%r1964, %r1958, %r1957, 25;
	mov.b64 	%rd2926, {%r1964, %r1963};
	xor.b64  	%rd2927, %rd2925, %rd2926;
	and.b64  	%rd2928, %rd2912, %rd2889;
	or.b64  	%rd2929, %rd2912, %rd2889;
	and.b64  	%rd2930, %rd2929, %rd2869;
	or.b64  	%rd2931, %rd2930, %rd2928;
	add.s64 	%rd2932, %rd2931, %rd2927;
	add.s64 	%rd2933, %rd2932, %rd2922;
	add.s64 	%rd2934, %rd2922, -6571292209873868907;
	add.s64 	%rd2935, %rd2933, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1965,%dummy}, %rd2934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1966}, %rd2934;
	}
	shf.r.wrap.b32 	%r1967, %r1966, %r1965, 14;
	shf.r.wrap.b32 	%r1968, %r1965, %r1966, 14;
	mov.b64 	%rd2936, {%r1968, %r1967};
	shf.r.wrap.b32 	%r1969, %r1966, %r1965, 18;
	shf.r.wrap.b32 	%r1970, %r1965, %r1966, 18;
	mov.b64 	%rd2937, {%r1970, %r1969};
	xor.b64  	%rd2938, %rd2936, %rd2937;
	shf.l.wrap.b32 	%r1971, %r1965, %r1966, 23;
	shf.l.wrap.b32 	%r1972, %r1966, %r1965, 23;
	mov.b64 	%rd2939, {%r1972, %r1971};
	xor.b64  	%rd2940, %rd2938, %rd2939;
	xor.b64  	%rd2941, %rd2911, %rd2888;
	and.b64  	%rd2942, %rd2934, %rd2941;
	xor.b64  	%rd2943, %rd2942, %rd2888;
	add.s64 	%rd2944, %rd2867, %rd2863;
	add.s64 	%rd2945, %rd2944, %rd2943;
	add.s64 	%rd2946, %rd2945, %rd2940;
	add.s64 	%rd2947, %rd2946, -131588302623135388;
	add.s64 	%rd2948, %rd2947, %rd2869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1973,%dummy}, %rd2935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1974}, %rd2935;
	}
	shf.r.wrap.b32 	%r1975, %r1974, %r1973, 28;
	shf.r.wrap.b32 	%r1976, %r1973, %r1974, 28;
	mov.b64 	%rd2949, {%r1976, %r1975};
	shf.l.wrap.b32 	%r1977, %r1973, %r1974, 30;
	shf.l.wrap.b32 	%r1978, %r1974, %r1973, 30;
	mov.b64 	%rd2950, {%r1978, %r1977};
	xor.b64  	%rd2951, %rd2949, %rd2950;
	shf.l.wrap.b32 	%r1979, %r1973, %r1974, 25;
	shf.l.wrap.b32 	%r1980, %r1974, %r1973, 25;
	mov.b64 	%rd2952, {%r1980, %r1979};
	xor.b64  	%rd2953, %rd2951, %rd2952;
	and.b64  	%rd2954, %rd2935, %rd2912;
	or.b64  	%rd2955, %rd2935, %rd2912;
	and.b64  	%rd2956, %rd2955, %rd2889;
	or.b64  	%rd2957, %rd2956, %rd2954;
	add.s64 	%rd2958, %rd2957, %rd2953;
	add.s64 	%rd2959, %rd2958, %rd2947;
	add.s64 	%rd2960, %rd2864, %rd2888;
	xor.b64  	%rd2961, %rd2934, %rd2911;
	and.b64  	%rd2962, %rd2948, %rd2961;
	xor.b64  	%rd2963, %rd2962, %rd2911;
	add.s64 	%rd2964, %rd2960, %rd2963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1981,%dummy}, %rd2948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd2948;
	}
	shf.r.wrap.b32 	%r1983, %r1982, %r1981, 14;
	shf.r.wrap.b32 	%r1984, %r1981, %r1982, 14;
	mov.b64 	%rd2965, {%r1984, %r1983};
	shf.r.wrap.b32 	%r1985, %r1982, %r1981, 18;
	shf.r.wrap.b32 	%r1986, %r1981, %r1982, 18;
	mov.b64 	%rd2966, {%r1986, %r1985};
	xor.b64  	%rd2967, %rd2965, %rd2966;
	shf.l.wrap.b32 	%r1987, %r1981, %r1982, 23;
	shf.l.wrap.b32 	%r1988, %r1982, %r1981, 23;
	mov.b64 	%rd2968, {%r1988, %r1987};
	xor.b64  	%rd2969, %rd2967, %rd2968;
	add.s64 	%rd2970, %rd2964, %rd2969;
	add.s64 	%rd2971, %rd2970, 6480981068601479193;
	add.s64 	%rd2972, %rd2971, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1989,%dummy}, %rd2959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1990}, %rd2959;
	}
	shf.r.wrap.b32 	%r1991, %r1990, %r1989, 28;
	shf.r.wrap.b32 	%r1992, %r1989, %r1990, 28;
	mov.b64 	%rd2973, {%r1992, %r1991};
	shf.l.wrap.b32 	%r1993, %r1989, %r1990, 30;
	shf.l.wrap.b32 	%r1994, %r1990, %r1989, 30;
	mov.b64 	%rd2974, {%r1994, %r1993};
	xor.b64  	%rd2975, %rd2973, %rd2974;
	shf.l.wrap.b32 	%r1995, %r1989, %r1990, 25;
	shf.l.wrap.b32 	%r1996, %r1990, %r1989, 25;
	mov.b64 	%rd2976, {%r1996, %r1995};
	xor.b64  	%rd2977, %rd2975, %rd2976;
	and.b64  	%rd2978, %rd2959, %rd2935;
	or.b64  	%rd2979, %rd2959, %rd2935;
	and.b64  	%rd2980, %rd2979, %rd2912;
	or.b64  	%rd2981, %rd2980, %rd2978;
	add.s64 	%rd2982, %rd2981, %rd2977;
	add.s64 	%rd2983, %rd2982, %rd2971;
	add.s64 	%rd2984, %rd2865, %rd2911;
	xor.b64  	%rd2985, %rd2948, %rd2934;
	and.b64  	%rd2986, %rd2972, %rd2985;
	xor.b64  	%rd2987, %rd2986, %rd2934;
	add.s64 	%rd2988, %rd2984, %rd2987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1997,%dummy}, %rd2972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1998}, %rd2972;
	}
	shf.r.wrap.b32 	%r1999, %r1998, %r1997, 14;
	shf.r.wrap.b32 	%r2000, %r1997, %r1998, 14;
	mov.b64 	%rd2989, {%r2000, %r1999};
	shf.r.wrap.b32 	%r2001, %r1998, %r1997, 18;
	shf.r.wrap.b32 	%r2002, %r1997, %r1998, 18;
	mov.b64 	%rd2990, {%r2002, %r2001};
	xor.b64  	%rd2991, %rd2989, %rd2990;
	shf.l.wrap.b32 	%r2003, %r1997, %r1998, 23;
	shf.l.wrap.b32 	%r2004, %r1998, %r1997, 23;
	mov.b64 	%rd2992, {%r2004, %r2003};
	xor.b64  	%rd2993, %rd2991, %rd2992;
	add.s64 	%rd2994, %rd2988, %rd2993;
	add.s64 	%rd2995, %rd2994, -7908458776815382629;
	add.s64 	%rd2996, %rd2995, %rd2912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2005,%dummy}, %rd2983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2006}, %rd2983;
	}
	shf.r.wrap.b32 	%r2007, %r2006, %r2005, 28;
	shf.r.wrap.b32 	%r2008, %r2005, %r2006, 28;
	mov.b64 	%rd2997, {%r2008, %r2007};
	shf.l.wrap.b32 	%r2009, %r2005, %r2006, 30;
	shf.l.wrap.b32 	%r2010, %r2006, %r2005, 30;
	mov.b64 	%rd2998, {%r2010, %r2009};
	xor.b64  	%rd2999, %rd2997, %rd2998;
	shf.l.wrap.b32 	%r2011, %r2005, %r2006, 25;
	shf.l.wrap.b32 	%r2012, %r2006, %r2005, 25;
	mov.b64 	%rd3000, {%r2012, %r2011};
	xor.b64  	%rd3001, %rd2999, %rd3000;
	and.b64  	%rd3002, %rd2983, %rd2959;
	or.b64  	%rd3003, %rd2983, %rd2959;
	and.b64  	%rd3004, %rd3003, %rd2935;
	or.b64  	%rd3005, %rd3004, %rd3002;
	add.s64 	%rd3006, %rd3005, %rd3001;
	add.s64 	%rd3007, %rd3006, %rd2995;
	add.s64 	%rd3008, %rd2866, %rd2934;
	xor.b64  	%rd3009, %rd2972, %rd2948;
	and.b64  	%rd3010, %rd2996, %rd3009;
	xor.b64  	%rd3011, %rd3010, %rd2948;
	add.s64 	%rd3012, %rd3008, %rd3011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd2996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd2996;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 14;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 14;
	mov.b64 	%rd3013, {%r2016, %r2015};
	shf.r.wrap.b32 	%r2017, %r2014, %r2013, 18;
	shf.r.wrap.b32 	%r2018, %r2013, %r2014, 18;
	mov.b64 	%rd3014, {%r2018, %r2017};
	xor.b64  	%rd3015, %rd3013, %rd3014;
	shf.l.wrap.b32 	%r2019, %r2013, %r2014, 23;
	shf.l.wrap.b32 	%r2020, %r2014, %r2013, 23;
	mov.b64 	%rd3016, {%r2020, %r2019};
	xor.b64  	%rd3017, %rd3015, %rd3016;
	add.s64 	%rd3018, %rd3012, %rd3017;
	add.s64 	%rd3019, %rd3018, -6116909921290321640;
	add.s64 	%rd3020, %rd3019, %rd2935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2021,%dummy}, %rd3007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2022}, %rd3007;
	}
	shf.r.wrap.b32 	%r2023, %r2022, %r2021, 28;
	shf.r.wrap.b32 	%r2024, %r2021, %r2022, 28;
	mov.b64 	%rd3021, {%r2024, %r2023};
	shf.l.wrap.b32 	%r2025, %r2021, %r2022, 30;
	shf.l.wrap.b32 	%r2026, %r2022, %r2021, 30;
	mov.b64 	%rd3022, {%r2026, %r2025};
	xor.b64  	%rd3023, %rd3021, %rd3022;
	shf.l.wrap.b32 	%r2027, %r2021, %r2022, 25;
	shf.l.wrap.b32 	%r2028, %r2022, %r2021, 25;
	mov.b64 	%rd3024, {%r2028, %r2027};
	xor.b64  	%rd3025, %rd3023, %rd3024;
	and.b64  	%rd3026, %rd3007, %rd2983;
	or.b64  	%rd3027, %rd3007, %rd2983;
	and.b64  	%rd3028, %rd3027, %rd2959;
	or.b64  	%rd3029, %rd3028, %rd3026;
	add.s64 	%rd3030, %rd3029, %rd3025;
	add.s64 	%rd3031, %rd3030, %rd3019;
	xor.b64  	%rd3032, %rd2996, %rd2972;
	and.b64  	%rd3033, %rd3020, %rd3032;
	xor.b64  	%rd3034, %rd3033, %rd2972;
	add.s64 	%rd3035, %rd2948, %rd3034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2029,%dummy}, %rd3020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2030}, %rd3020;
	}
	shf.r.wrap.b32 	%r2031, %r2030, %r2029, 14;
	shf.r.wrap.b32 	%r2032, %r2029, %r2030, 14;
	mov.b64 	%rd3036, {%r2032, %r2031};
	shf.r.wrap.b32 	%r2033, %r2030, %r2029, 18;
	shf.r.wrap.b32 	%r2034, %r2029, %r2030, 18;
	mov.b64 	%rd3037, {%r2034, %r2033};
	xor.b64  	%rd3038, %rd3036, %rd3037;
	shf.l.wrap.b32 	%r2035, %r2029, %r2030, 23;
	shf.l.wrap.b32 	%r2036, %r2030, %r2029, 23;
	mov.b64 	%rd3039, {%r2036, %r2035};
	xor.b64  	%rd3040, %rd3038, %rd3039;
	add.s64 	%rd3041, %rd3035, %rd3040;
	add.s64 	%rd3042, %rd3041, 3775150036969545374;
	add.s64 	%rd3043, %rd3042, %rd2959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2037,%dummy}, %rd3031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2038}, %rd3031;
	}
	shf.r.wrap.b32 	%r2039, %r2038, %r2037, 28;
	shf.r.wrap.b32 	%r2040, %r2037, %r2038, 28;
	mov.b64 	%rd3044, {%r2040, %r2039};
	shf.l.wrap.b32 	%r2041, %r2037, %r2038, 30;
	shf.l.wrap.b32 	%r2042, %r2038, %r2037, 30;
	mov.b64 	%rd3045, {%r2042, %r2041};
	xor.b64  	%rd3046, %rd3044, %rd3045;
	shf.l.wrap.b32 	%r2043, %r2037, %r2038, 25;
	shf.l.wrap.b32 	%r2044, %r2038, %r2037, 25;
	mov.b64 	%rd3047, {%r2044, %r2043};
	xor.b64  	%rd3048, %rd3046, %rd3047;
	and.b64  	%rd3049, %rd3031, %rd3007;
	or.b64  	%rd3050, %rd3031, %rd3007;
	and.b64  	%rd3051, %rd3050, %rd2983;
	or.b64  	%rd3052, %rd3051, %rd3049;
	add.s64 	%rd3053, %rd3052, %rd3048;
	add.s64 	%rd3054, %rd3053, %rd3042;
	xor.b64  	%rd3055, %rd3020, %rd2996;
	and.b64  	%rd3056, %rd3043, %rd3055;
	xor.b64  	%rd3057, %rd3056, %rd2996;
	add.s64 	%rd3058, %rd2972, %rd3057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2045,%dummy}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2046}, %rd3043;
	}
	shf.r.wrap.b32 	%r2047, %r2046, %r2045, 14;
	shf.r.wrap.b32 	%r2048, %r2045, %r2046, 14;
	mov.b64 	%rd3059, {%r2048, %r2047};
	shf.r.wrap.b32 	%r2049, %r2046, %r2045, 18;
	shf.r.wrap.b32 	%r2050, %r2045, %r2046, 18;
	mov.b64 	%rd3060, {%r2050, %r2049};
	xor.b64  	%rd3061, %rd3059, %rd3060;
	shf.l.wrap.b32 	%r2051, %r2045, %r2046, 23;
	shf.l.wrap.b32 	%r2052, %r2046, %r2045, 23;
	mov.b64 	%rd3062, {%r2052, %r2051};
	xor.b64  	%rd3063, %rd3061, %rd3062;
	add.s64 	%rd3064, %rd3058, %rd3063;
	add.s64 	%rd3065, %rd3064, 7989305876752944154;
	add.s64 	%rd3066, %rd3065, %rd2983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2053,%dummy}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2054}, %rd3054;
	}
	shf.r.wrap.b32 	%r2055, %r2054, %r2053, 28;
	shf.r.wrap.b32 	%r2056, %r2053, %r2054, 28;
	mov.b64 	%rd3067, {%r2056, %r2055};
	shf.l.wrap.b32 	%r2057, %r2053, %r2054, 30;
	shf.l.wrap.b32 	%r2058, %r2054, %r2053, 30;
	mov.b64 	%rd3068, {%r2058, %r2057};
	xor.b64  	%rd3069, %rd3067, %rd3068;
	shf.l.wrap.b32 	%r2059, %r2053, %r2054, 25;
	shf.l.wrap.b32 	%r2060, %r2054, %r2053, 25;
	mov.b64 	%rd3070, {%r2060, %r2059};
	xor.b64  	%rd3071, %rd3069, %rd3070;
	and.b64  	%rd3072, %rd3054, %rd3031;
	or.b64  	%rd3073, %rd3054, %rd3031;
	and.b64  	%rd3074, %rd3073, %rd3007;
	or.b64  	%rd3075, %rd3074, %rd3072;
	add.s64 	%rd3076, %rd3075, %rd3071;
	add.s64 	%rd3077, %rd3076, %rd3065;
	xor.b64  	%rd3078, %rd3043, %rd3020;
	and.b64  	%rd3079, %rd3066, %rd3078;
	xor.b64  	%rd3080, %rd3079, %rd3020;
	add.s64 	%rd3081, %rd2996, %rd3080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2061,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2062}, %rd3066;
	}
	shf.r.wrap.b32 	%r2063, %r2062, %r2061, 14;
	shf.r.wrap.b32 	%r2064, %r2061, %r2062, 14;
	mov.b64 	%rd3082, {%r2064, %r2063};
	shf.r.wrap.b32 	%r2065, %r2062, %r2061, 18;
	shf.r.wrap.b32 	%r2066, %r2061, %r2062, 18;
	mov.b64 	%rd3083, {%r2066, %r2065};
	xor.b64  	%rd3084, %rd3082, %rd3083;
	shf.l.wrap.b32 	%r2067, %r2061, %r2062, 23;
	shf.l.wrap.b32 	%r2068, %r2062, %r2061, 23;
	mov.b64 	%rd3085, {%r2068, %r2067};
	xor.b64  	%rd3086, %rd3084, %rd3085;
	add.s64 	%rd3087, %rd3081, %rd3086;
	add.s64 	%rd3088, %rd3087, -9183435460968378648;
	add.s64 	%rd3089, %rd3088, %rd3007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2069,%dummy}, %rd3077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2070}, %rd3077;
	}
	shf.r.wrap.b32 	%r2071, %r2070, %r2069, 28;
	shf.r.wrap.b32 	%r2072, %r2069, %r2070, 28;
	mov.b64 	%rd3090, {%r2072, %r2071};
	shf.l.wrap.b32 	%r2073, %r2069, %r2070, 30;
	shf.l.wrap.b32 	%r2074, %r2070, %r2069, 30;
	mov.b64 	%rd3091, {%r2074, %r2073};
	xor.b64  	%rd3092, %rd3090, %rd3091;
	shf.l.wrap.b32 	%r2075, %r2069, %r2070, 25;
	shf.l.wrap.b32 	%r2076, %r2070, %r2069, 25;
	mov.b64 	%rd3093, {%r2076, %r2075};
	xor.b64  	%rd3094, %rd3092, %rd3093;
	and.b64  	%rd3095, %rd3077, %rd3054;
	or.b64  	%rd3096, %rd3077, %rd3054;
	and.b64  	%rd3097, %rd3096, %rd3031;
	or.b64  	%rd3098, %rd3097, %rd3095;
	add.s64 	%rd3099, %rd3098, %rd3094;
	add.s64 	%rd3100, %rd3099, %rd3088;
	xor.b64  	%rd3101, %rd3066, %rd3043;
	and.b64  	%rd3102, %rd3089, %rd3101;
	xor.b64  	%rd3103, %rd3102, %rd3043;
	add.s64 	%rd3104, %rd3020, %rd3103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2077,%dummy}, %rd3089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2078}, %rd3089;
	}
	shf.r.wrap.b32 	%r2079, %r2078, %r2077, 14;
	shf.r.wrap.b32 	%r2080, %r2077, %r2078, 14;
	mov.b64 	%rd3105, {%r2080, %r2079};
	shf.r.wrap.b32 	%r2081, %r2078, %r2077, 18;
	shf.r.wrap.b32 	%r2082, %r2077, %r2078, 18;
	mov.b64 	%rd3106, {%r2082, %r2081};
	xor.b64  	%rd3107, %rd3105, %rd3106;
	shf.l.wrap.b32 	%r2083, %r2077, %r2078, 23;
	shf.l.wrap.b32 	%r2084, %r2078, %r2077, 23;
	mov.b64 	%rd3108, {%r2084, %r2083};
	xor.b64  	%rd3109, %rd3107, %rd3108;
	add.s64 	%rd3110, %rd3104, %rd3109;
	add.s64 	%rd3111, %rd3110, -5663036699599695554;
	add.s64 	%rd3112, %rd3111, %rd3031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2085,%dummy}, %rd3100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2086}, %rd3100;
	}
	shf.r.wrap.b32 	%r2087, %r2086, %r2085, 28;
	shf.r.wrap.b32 	%r2088, %r2085, %r2086, 28;
	mov.b64 	%rd3113, {%r2088, %r2087};
	shf.l.wrap.b32 	%r2089, %r2085, %r2086, 30;
	shf.l.wrap.b32 	%r2090, %r2086, %r2085, 30;
	mov.b64 	%rd3114, {%r2090, %r2089};
	xor.b64  	%rd3115, %rd3113, %rd3114;
	shf.l.wrap.b32 	%r2091, %r2085, %r2086, 25;
	shf.l.wrap.b32 	%r2092, %r2086, %r2085, 25;
	mov.b64 	%rd3116, {%r2092, %r2091};
	xor.b64  	%rd3117, %rd3115, %rd3116;
	and.b64  	%rd3118, %rd3100, %rd3077;
	or.b64  	%rd3119, %rd3100, %rd3077;
	and.b64  	%rd3120, %rd3119, %rd3054;
	or.b64  	%rd3121, %rd3120, %rd3118;
	add.s64 	%rd3122, %rd3121, %rd3117;
	add.s64 	%rd3123, %rd3122, %rd3111;
	xor.b64  	%rd3124, %rd3089, %rd3066;
	and.b64  	%rd3125, %rd3112, %rd3124;
	xor.b64  	%rd3126, %rd3125, %rd3066;
	add.s64 	%rd3127, %rd3043, %rd3126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2093,%dummy}, %rd3112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2094}, %rd3112;
	}
	shf.r.wrap.b32 	%r2095, %r2094, %r2093, 14;
	shf.r.wrap.b32 	%r2096, %r2093, %r2094, 14;
	mov.b64 	%rd3128, {%r2096, %r2095};
	shf.r.wrap.b32 	%r2097, %r2094, %r2093, 18;
	shf.r.wrap.b32 	%r2098, %r2093, %r2094, 18;
	mov.b64 	%rd3129, {%r2098, %r2097};
	xor.b64  	%rd3130, %rd3128, %rd3129;
	shf.l.wrap.b32 	%r2099, %r2093, %r2094, 23;
	shf.l.wrap.b32 	%r2100, %r2094, %r2093, 23;
	mov.b64 	%rd3131, {%r2100, %r2099};
	xor.b64  	%rd3132, %rd3130, %rd3131;
	add.s64 	%rd3133, %rd3127, %rd3132;
	add.s64 	%rd3134, %rd3133, -3523299449841916469;
	add.s64 	%rd3135, %rd3134, %rd3054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd3123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd3123;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 28;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 28;
	mov.b64 	%rd3136, {%r2104, %r2103};
	shf.l.wrap.b32 	%r2105, %r2101, %r2102, 30;
	shf.l.wrap.b32 	%r2106, %r2102, %r2101, 30;
	mov.b64 	%rd3137, {%r2106, %r2105};
	xor.b64  	%rd3138, %rd3136, %rd3137;
	shf.l.wrap.b32 	%r2107, %r2101, %r2102, 25;
	shf.l.wrap.b32 	%r2108, %r2102, %r2101, 25;
	mov.b64 	%rd3139, {%r2108, %r2107};
	xor.b64  	%rd3140, %rd3138, %rd3139;
	and.b64  	%rd3141, %rd3123, %rd3100;
	or.b64  	%rd3142, %rd3123, %rd3100;
	and.b64  	%rd3143, %rd3142, %rd3077;
	or.b64  	%rd3144, %rd3143, %rd3141;
	add.s64 	%rd3145, %rd3144, %rd3140;
	add.s64 	%rd3146, %rd3145, %rd3134;
	xor.b64  	%rd3147, %rd3112, %rd3089;
	and.b64  	%rd3148, %rd3135, %rd3147;
	xor.b64  	%rd3149, %rd3148, %rd3089;
	add.s64 	%rd3150, %rd3066, %rd3149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2109,%dummy}, %rd3135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2110}, %rd3135;
	}
	shf.r.wrap.b32 	%r2111, %r2110, %r2109, 14;
	shf.r.wrap.b32 	%r2112, %r2109, %r2110, 14;
	mov.b64 	%rd3151, {%r2112, %r2111};
	shf.r.wrap.b32 	%r2113, %r2110, %r2109, 18;
	shf.r.wrap.b32 	%r2114, %r2109, %r2110, 18;
	mov.b64 	%rd3152, {%r2114, %r2113};
	xor.b64  	%rd3153, %rd3151, %rd3152;
	shf.l.wrap.b32 	%r2115, %r2109, %r2110, 23;
	shf.l.wrap.b32 	%r2116, %r2110, %r2109, 23;
	mov.b64 	%rd3154, {%r2116, %r2115};
	xor.b64  	%rd3155, %rd3153, %rd3154;
	add.s64 	%rd3156, %rd3150, %rd3155;
	add.s64 	%rd3157, %rd3156, -2505392985450810611;
	add.s64 	%rd3158, %rd3157, %rd3077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2117,%dummy}, %rd3146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2118}, %rd3146;
	}
	shf.r.wrap.b32 	%r2119, %r2118, %r2117, 28;
	shf.r.wrap.b32 	%r2120, %r2117, %r2118, 28;
	mov.b64 	%rd3159, {%r2120, %r2119};
	shf.l.wrap.b32 	%r2121, %r2117, %r2118, 30;
	shf.l.wrap.b32 	%r2122, %r2118, %r2117, 30;
	mov.b64 	%rd3160, {%r2122, %r2121};
	xor.b64  	%rd3161, %rd3159, %rd3160;
	shf.l.wrap.b32 	%r2123, %r2117, %r2118, 25;
	shf.l.wrap.b32 	%r2124, %r2118, %r2117, 25;
	mov.b64 	%rd3162, {%r2124, %r2123};
	xor.b64  	%rd3163, %rd3161, %rd3162;
	and.b64  	%rd3164, %rd3146, %rd3123;
	or.b64  	%rd3165, %rd3146, %rd3123;
	and.b64  	%rd3166, %rd3165, %rd3100;
	or.b64  	%rd3167, %rd3166, %rd3164;
	add.s64 	%rd3168, %rd3167, %rd3163;
	add.s64 	%rd3169, %rd3168, %rd3157;
	xor.b64  	%rd3170, %rd3135, %rd3112;
	and.b64  	%rd3171, %rd3158, %rd3170;
	xor.b64  	%rd3172, %rd3171, %rd3112;
	add.s64 	%rd3173, %rd3089, %rd3172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2125,%dummy}, %rd3158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2126}, %rd3158;
	}
	shf.r.wrap.b32 	%r2127, %r2126, %r2125, 14;
	shf.r.wrap.b32 	%r2128, %r2125, %r2126, 14;
	mov.b64 	%rd3174, {%r2128, %r2127};
	shf.r.wrap.b32 	%r2129, %r2126, %r2125, 18;
	shf.r.wrap.b32 	%r2130, %r2125, %r2126, 18;
	mov.b64 	%rd3175, {%r2130, %r2129};
	xor.b64  	%rd3176, %rd3174, %rd3175;
	shf.l.wrap.b32 	%r2131, %r2125, %r2126, 23;
	shf.l.wrap.b32 	%r2132, %r2126, %r2125, 23;
	mov.b64 	%rd3177, {%r2132, %r2131};
	xor.b64  	%rd3178, %rd3176, %rd3177;
	add.s64 	%rd3179, %rd3173, %rd3178;
	add.s64 	%rd3180, %rd3179, -560589286888214895;
	add.s64 	%rd3181, %rd3180, %rd3100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2133,%dummy}, %rd3169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2134}, %rd3169;
	}
	shf.r.wrap.b32 	%r2135, %r2134, %r2133, 28;
	shf.r.wrap.b32 	%r2136, %r2133, %r2134, 28;
	mov.b64 	%rd3182, {%r2136, %r2135};
	shf.l.wrap.b32 	%r2137, %r2133, %r2134, 30;
	shf.l.wrap.b32 	%r2138, %r2134, %r2133, 30;
	mov.b64 	%rd3183, {%r2138, %r2137};
	xor.b64  	%rd3184, %rd3182, %rd3183;
	shf.l.wrap.b32 	%r2139, %r2133, %r2134, 25;
	shf.l.wrap.b32 	%r2140, %r2134, %r2133, 25;
	mov.b64 	%rd3185, {%r2140, %r2139};
	xor.b64  	%rd3186, %rd3184, %rd3185;
	and.b64  	%rd3187, %rd3169, %rd3146;
	or.b64  	%rd3188, %rd3169, %rd3146;
	and.b64  	%rd3189, %rd3188, %rd3123;
	or.b64  	%rd3190, %rd3189, %rd3187;
	add.s64 	%rd3191, %rd3190, %rd3186;
	add.s64 	%rd3192, %rd3191, %rd3180;
	xor.b64  	%rd3193, %rd3158, %rd3135;
	and.b64  	%rd3194, %rd3181, %rd3193;
	xor.b64  	%rd3195, %rd3194, %rd3135;
	add.s64 	%rd3196, %rd3112, %rd3195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd3181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd3181;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 14;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 14;
	mov.b64 	%rd3197, {%r2144, %r2143};
	shf.r.wrap.b32 	%r2145, %r2142, %r2141, 18;
	shf.r.wrap.b32 	%r2146, %r2141, %r2142, 18;
	mov.b64 	%rd3198, {%r2146, %r2145};
	xor.b64  	%rd3199, %rd3197, %rd3198;
	shf.l.wrap.b32 	%r2147, %r2141, %r2142, 23;
	shf.l.wrap.b32 	%r2148, %r2142, %r2141, 23;
	mov.b64 	%rd3200, {%r2148, %r2147};
	xor.b64  	%rd3201, %rd3199, %rd3200;
	add.s64 	%rd3202, %rd3196, %rd3201;
	add.s64 	%rd3203, %rd3202, 2159561582102020848;
	add.s64 	%rd3204, %rd3203, %rd3123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd3192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd3192;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 28;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 28;
	mov.b64 	%rd3205, {%r2152, %r2151};
	shf.l.wrap.b32 	%r2153, %r2149, %r2150, 30;
	shf.l.wrap.b32 	%r2154, %r2150, %r2149, 30;
	mov.b64 	%rd3206, {%r2154, %r2153};
	xor.b64  	%rd3207, %rd3205, %rd3206;
	shf.l.wrap.b32 	%r2155, %r2149, %r2150, 25;
	shf.l.wrap.b32 	%r2156, %r2150, %r2149, 25;
	mov.b64 	%rd3208, {%r2156, %r2155};
	xor.b64  	%rd3209, %rd3207, %rd3208;
	and.b64  	%rd3210, %rd3192, %rd3169;
	or.b64  	%rd3211, %rd3192, %rd3169;
	and.b64  	%rd3212, %rd3211, %rd3146;
	or.b64  	%rd3213, %rd3212, %rd3210;
	add.s64 	%rd3214, %rd3213, %rd3209;
	add.s64 	%rd3215, %rd3214, %rd3203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2157}, %rd2859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd2859;
	}
	shf.l.wrap.b32 	%r2159, %r2158, %r2157, 3;
	shf.l.wrap.b32 	%r2160, %r2157, %r2158, 3;
	mov.b64 	%rd3216, {%r2160, %r2159};
	shf.r.wrap.b32 	%r2161, %r2157, %r2158, 19;
	shf.r.wrap.b32 	%r2162, %r2158, %r2157, 19;
	mov.b64 	%rd3217, {%r2162, %r2161};
	xor.b64  	%rd3218, %rd3217, %rd3216;
	xor.b64  	%rd3219, %rd3218, 103988998454735217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2163,%dummy}, %rd2860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2164}, %rd2860;
	}
	shf.r.wrap.b32 	%r2165, %r2164, %r2163, 1;
	shf.r.wrap.b32 	%r2166, %r2163, %r2164, 1;
	mov.b64 	%rd3220, {%r2166, %r2165};
	shf.r.wrap.b32 	%r2167, %r2164, %r2163, 8;
	shf.r.wrap.b32 	%r2168, %r2163, %r2164, 8;
	mov.b64 	%rd3221, {%r2168, %r2167};
	xor.b64  	%rd3222, %rd3220, %rd3221;
	shr.u64 	%rd3223, %rd2860, 7;
	xor.b64  	%rd3224, %rd3222, %rd3223;
	add.s64 	%rd3225, %rd3219, %rd2858;
	add.s64 	%rd3226, %rd3225, %rd3224;
	add.s64 	%rd3227, %rd3226, 6655295901103053916;
	add.s64 	%rd3228, %rd3227, %rd3135;
	xor.b64  	%rd3229, %rd3181, %rd3158;
	and.b64  	%rd3230, %rd3204, %rd3229;
	xor.b64  	%rd3231, %rd3230, %rd3158;
	add.s64 	%rd3232, %rd3228, %rd3231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2169,%dummy}, %rd3204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2170}, %rd3204;
	}
	shf.r.wrap.b32 	%r2171, %r2170, %r2169, 14;
	shf.r.wrap.b32 	%r2172, %r2169, %r2170, 14;
	mov.b64 	%rd3233, {%r2172, %r2171};
	shf.r.wrap.b32 	%r2173, %r2170, %r2169, 18;
	shf.r.wrap.b32 	%r2174, %r2169, %r2170, 18;
	mov.b64 	%rd3234, {%r2174, %r2173};
	xor.b64  	%rd3235, %rd3233, %rd3234;
	shf.l.wrap.b32 	%r2175, %r2169, %r2170, 23;
	shf.l.wrap.b32 	%r2176, %r2170, %r2169, 23;
	mov.b64 	%rd3236, {%r2176, %r2175};
	xor.b64  	%rd3237, %rd3235, %rd3236;
	add.s64 	%rd3238, %rd3232, %rd3237;
	add.s64 	%rd3239, %rd3238, -1973867731355612462;
	add.s64 	%rd3240, %rd3239, %rd3146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2177,%dummy}, %rd3215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2178}, %rd3215;
	}
	shf.r.wrap.b32 	%r2179, %r2178, %r2177, 28;
	shf.r.wrap.b32 	%r2180, %r2177, %r2178, 28;
	mov.b64 	%rd3241, {%r2180, %r2179};
	shf.l.wrap.b32 	%r2181, %r2177, %r2178, 30;
	shf.l.wrap.b32 	%r2182, %r2178, %r2177, 30;
	mov.b64 	%rd3242, {%r2182, %r2181};
	xor.b64  	%rd3243, %rd3241, %rd3242;
	shf.l.wrap.b32 	%r2183, %r2177, %r2178, 25;
	shf.l.wrap.b32 	%r2184, %r2178, %r2177, 25;
	mov.b64 	%rd3244, {%r2184, %r2183};
	xor.b64  	%rd3245, %rd3243, %rd3244;
	and.b64  	%rd3246, %rd3215, %rd3192;
	or.b64  	%rd3247, %rd3215, %rd3192;
	and.b64  	%rd3248, %rd3247, %rd3169;
	or.b64  	%rd3249, %rd3248, %rd3246;
	add.s64 	%rd3250, %rd3249, %rd3245;
	add.s64 	%rd3251, %rd3250, %rd3239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2185,%dummy}, %rd2861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2186}, %rd2861;
	}
	shf.r.wrap.b32 	%r2187, %r2186, %r2185, 1;
	shf.r.wrap.b32 	%r2188, %r2185, %r2186, 1;
	mov.b64 	%rd3252, {%r2188, %r2187};
	shf.r.wrap.b32 	%r2189, %r2186, %r2185, 8;
	shf.r.wrap.b32 	%r2190, %r2185, %r2186, 8;
	mov.b64 	%rd3253, {%r2190, %r2189};
	xor.b64  	%rd3254, %rd3252, %rd3253;
	shr.u64 	%rd3255, %rd2861, 7;
	xor.b64  	%rd3256, %rd3254, %rd3255;
	add.s64 	%rd3257, %rd3219, %rd2860;
	add.s64 	%rd3258, %rd3257, %rd3256;
	add.s64 	%rd3259, %rd3258, 6655295901103053916;
	add.s64 	%rd3260, %rd3259, %rd3158;
	xor.b64  	%rd3261, %rd3204, %rd3181;
	and.b64  	%rd3262, %rd3240, %rd3261;
	xor.b64  	%rd3263, %rd3262, %rd3181;
	add.s64 	%rd3264, %rd3260, %rd3263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2191,%dummy}, %rd3240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2192}, %rd3240;
	}
	shf.r.wrap.b32 	%r2193, %r2192, %r2191, 14;
	shf.r.wrap.b32 	%r2194, %r2191, %r2192, 14;
	mov.b64 	%rd3265, {%r2194, %r2193};
	shf.r.wrap.b32 	%r2195, %r2192, %r2191, 18;
	shf.r.wrap.b32 	%r2196, %r2191, %r2192, 18;
	mov.b64 	%rd3266, {%r2196, %r2195};
	xor.b64  	%rd3267, %rd3265, %rd3266;
	shf.l.wrap.b32 	%r2197, %r2191, %r2192, 23;
	shf.l.wrap.b32 	%r2198, %r2192, %r2191, 23;
	mov.b64 	%rd3268, {%r2198, %r2197};
	xor.b64  	%rd3269, %rd3267, %rd3268;
	add.s64 	%rd3270, %rd3264, %rd3269;
	add.s64 	%rd3271, %rd3270, -1171420211273849373;
	add.s64 	%rd3272, %rd3271, %rd3169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2199,%dummy}, %rd3251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2200}, %rd3251;
	}
	shf.r.wrap.b32 	%r2201, %r2200, %r2199, 28;
	shf.r.wrap.b32 	%r2202, %r2199, %r2200, 28;
	mov.b64 	%rd3273, {%r2202, %r2201};
	shf.l.wrap.b32 	%r2203, %r2199, %r2200, 30;
	shf.l.wrap.b32 	%r2204, %r2200, %r2199, 30;
	mov.b64 	%rd3274, {%r2204, %r2203};
	xor.b64  	%rd3275, %rd3273, %rd3274;
	shf.l.wrap.b32 	%r2205, %r2199, %r2200, 25;
	shf.l.wrap.b32 	%r2206, %r2200, %r2199, 25;
	mov.b64 	%rd3276, {%r2206, %r2205};
	xor.b64  	%rd3277, %rd3275, %rd3276;
	and.b64  	%rd3278, %rd3251, %rd3215;
	or.b64  	%rd3279, %rd3251, %rd3215;
	and.b64  	%rd3280, %rd3279, %rd3192;
	or.b64  	%rd3281, %rd3280, %rd3278;
	add.s64 	%rd3282, %rd3281, %rd3277;
	add.s64 	%rd3283, %rd3282, %rd3271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2207,%dummy}, %rd3227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2208}, %rd3227;
	}
	shf.r.wrap.b32 	%r2209, %r2208, %r2207, 19;
	shf.r.wrap.b32 	%r2210, %r2207, %r2208, 19;
	mov.b64 	%rd3284, {%r2210, %r2209};
	shf.l.wrap.b32 	%r2211, %r2207, %r2208, 3;
	shf.l.wrap.b32 	%r2212, %r2208, %r2207, 3;
	mov.b64 	%rd3285, {%r2212, %r2211};
	xor.b64  	%rd3286, %rd3284, %rd3285;
	shr.u64 	%rd3287, %rd3227, 6;
	xor.b64  	%rd3288, %rd3286, %rd3287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd2862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd2862;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 1;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 1;
	mov.b64 	%rd3289, {%r2216, %r2215};
	shf.r.wrap.b32 	%r2217, %r2214, %r2213, 8;
	shf.r.wrap.b32 	%r2218, %r2213, %r2214, 8;
	mov.b64 	%rd3290, {%r2218, %r2217};
	xor.b64  	%rd3291, %rd3289, %rd3290;
	shr.u64 	%rd3292, %rd2862, 7;
	xor.b64  	%rd3293, %rd3291, %rd3292;
	add.s64 	%rd3294, %rd3288, %rd2861;
	add.s64 	%rd3295, %rd3294, %rd3293;
	add.s64 	%rd3296, %rd3295, 6655295901103053916;
	add.s64 	%rd3297, %rd3296, %rd3181;
	xor.b64  	%rd3298, %rd3240, %rd3204;
	and.b64  	%rd3299, %rd3272, %rd3298;
	xor.b64  	%rd3300, %rd3299, %rd3204;
	add.s64 	%rd3301, %rd3297, %rd3300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2219,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2220}, %rd3272;
	}
	shf.r.wrap.b32 	%r2221, %r2220, %r2219, 14;
	shf.r.wrap.b32 	%r2222, %r2219, %r2220, 14;
	mov.b64 	%rd3302, {%r2222, %r2221};
	shf.r.wrap.b32 	%r2223, %r2220, %r2219, 18;
	shf.r.wrap.b32 	%r2224, %r2219, %r2220, 18;
	mov.b64 	%rd3303, {%r2224, %r2223};
	xor.b64  	%rd3304, %rd3302, %rd3303;
	shf.l.wrap.b32 	%r2225, %r2219, %r2220, 23;
	shf.l.wrap.b32 	%r2226, %r2220, %r2219, 23;
	mov.b64 	%rd3305, {%r2226, %r2225};
	xor.b64  	%rd3306, %rd3304, %rd3305;
	add.s64 	%rd3307, %rd3301, %rd3306;
	add.s64 	%rd3308, %rd3307, 1135362057144423861;
	add.s64 	%rd3309, %rd3308, %rd3192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2227,%dummy}, %rd3283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2228}, %rd3283;
	}
	shf.r.wrap.b32 	%r2229, %r2228, %r2227, 28;
	shf.r.wrap.b32 	%r2230, %r2227, %r2228, 28;
	mov.b64 	%rd3310, {%r2230, %r2229};
	shf.l.wrap.b32 	%r2231, %r2227, %r2228, 30;
	shf.l.wrap.b32 	%r2232, %r2228, %r2227, 30;
	mov.b64 	%rd3311, {%r2232, %r2231};
	xor.b64  	%rd3312, %rd3310, %rd3311;
	shf.l.wrap.b32 	%r2233, %r2227, %r2228, 25;
	shf.l.wrap.b32 	%r2234, %r2228, %r2227, 25;
	mov.b64 	%rd3313, {%r2234, %r2233};
	xor.b64  	%rd3314, %rd3312, %rd3313;
	and.b64  	%rd3315, %rd3283, %rd3251;
	or.b64  	%rd3316, %rd3283, %rd3251;
	and.b64  	%rd3317, %rd3316, %rd3215;
	or.b64  	%rd3318, %rd3317, %rd3315;
	add.s64 	%rd3319, %rd3318, %rd3314;
	add.s64 	%rd3320, %rd3319, %rd3308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2235,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2236}, %rd3259;
	}
	shf.r.wrap.b32 	%r2237, %r2236, %r2235, 19;
	shf.r.wrap.b32 	%r2238, %r2235, %r2236, 19;
	mov.b64 	%rd3321, {%r2238, %r2237};
	shf.l.wrap.b32 	%r2239, %r2235, %r2236, 3;
	shf.l.wrap.b32 	%r2240, %r2236, %r2235, 3;
	mov.b64 	%rd3322, {%r2240, %r2239};
	xor.b64  	%rd3323, %rd3321, %rd3322;
	shr.u64 	%rd3324, %rd3259, 6;
	xor.b64  	%rd3325, %rd3323, %rd3324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2241,%dummy}, %rd2863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2242}, %rd2863;
	}
	shf.r.wrap.b32 	%r2243, %r2242, %r2241, 1;
	shf.r.wrap.b32 	%r2244, %r2241, %r2242, 1;
	mov.b64 	%rd3326, {%r2244, %r2243};
	shf.r.wrap.b32 	%r2245, %r2242, %r2241, 8;
	shf.r.wrap.b32 	%r2246, %r2241, %r2242, 8;
	mov.b64 	%rd3327, {%r2246, %r2245};
	xor.b64  	%rd3328, %rd3326, %rd3327;
	shr.u64 	%rd3329, %rd2863, 7;
	xor.b64  	%rd3330, %rd3328, %rd3329;
	add.s64 	%rd3331, %rd3325, %rd2862;
	add.s64 	%rd3332, %rd3331, %rd3330;
	add.s64 	%rd3333, %rd3332, 6655295901103053916;
	add.s64 	%rd3334, %rd3333, %rd3204;
	xor.b64  	%rd3335, %rd3272, %rd3240;
	and.b64  	%rd3336, %rd3309, %rd3335;
	xor.b64  	%rd3337, %rd3336, %rd3240;
	add.s64 	%rd3338, %rd3334, %rd3337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2247,%dummy}, %rd3309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2248}, %rd3309;
	}
	shf.r.wrap.b32 	%r2249, %r2248, %r2247, 14;
	shf.r.wrap.b32 	%r2250, %r2247, %r2248, 14;
	mov.b64 	%rd3339, {%r2250, %r2249};
	shf.r.wrap.b32 	%r2251, %r2248, %r2247, 18;
	shf.r.wrap.b32 	%r2252, %r2247, %r2248, 18;
	mov.b64 	%rd3340, {%r2252, %r2251};
	xor.b64  	%rd3341, %rd3339, %rd3340;
	shf.l.wrap.b32 	%r2253, %r2247, %r2248, 23;
	shf.l.wrap.b32 	%r2254, %r2248, %r2247, 23;
	mov.b64 	%rd3342, {%r2254, %r2253};
	xor.b64  	%rd3343, %rd3341, %rd3342;
	add.s64 	%rd3344, %rd3338, %rd3343;
	add.s64 	%rd3345, %rd3344, 2597628984639134821;
	add.s64 	%rd3346, %rd3345, %rd3215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2255,%dummy}, %rd3320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2256}, %rd3320;
	}
	shf.r.wrap.b32 	%r2257, %r2256, %r2255, 28;
	shf.r.wrap.b32 	%r2258, %r2255, %r2256, 28;
	mov.b64 	%rd3347, {%r2258, %r2257};
	shf.l.wrap.b32 	%r2259, %r2255, %r2256, 30;
	shf.l.wrap.b32 	%r2260, %r2256, %r2255, 30;
	mov.b64 	%rd3348, {%r2260, %r2259};
	xor.b64  	%rd3349, %rd3347, %rd3348;
	shf.l.wrap.b32 	%r2261, %r2255, %r2256, 25;
	shf.l.wrap.b32 	%r2262, %r2256, %r2255, 25;
	mov.b64 	%rd3350, {%r2262, %r2261};
	xor.b64  	%rd3351, %rd3349, %rd3350;
	and.b64  	%rd3352, %rd3320, %rd3283;
	or.b64  	%rd3353, %rd3320, %rd3283;
	and.b64  	%rd3354, %rd3353, %rd3251;
	or.b64  	%rd3355, %rd3354, %rd3352;
	add.s64 	%rd3356, %rd3355, %rd3351;
	add.s64 	%rd3357, %rd3356, %rd3345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2263,%dummy}, %rd3296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2264}, %rd3296;
	}
	shf.r.wrap.b32 	%r2265, %r2264, %r2263, 19;
	shf.r.wrap.b32 	%r2266, %r2263, %r2264, 19;
	mov.b64 	%rd3358, {%r2266, %r2265};
	shf.l.wrap.b32 	%r2267, %r2263, %r2264, 3;
	shf.l.wrap.b32 	%r2268, %r2264, %r2263, 3;
	mov.b64 	%rd3359, {%r2268, %r2267};
	xor.b64  	%rd3360, %rd3358, %rd3359;
	shr.u64 	%rd3361, %rd3296, 6;
	xor.b64  	%rd3362, %rd3360, %rd3361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd2864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd2864;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 1;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 1;
	mov.b64 	%rd3363, {%r2272, %r2271};
	shf.r.wrap.b32 	%r2273, %r2270, %r2269, 8;
	shf.r.wrap.b32 	%r2274, %r2269, %r2270, 8;
	mov.b64 	%rd3364, {%r2274, %r2273};
	xor.b64  	%rd3365, %rd3363, %rd3364;
	shr.u64 	%rd3366, %rd2864, 7;
	xor.b64  	%rd3367, %rd3365, %rd3366;
	add.s64 	%rd3368, %rd3362, %rd2863;
	add.s64 	%rd3369, %rd3368, %rd3367;
	add.s64 	%rd3370, %rd3369, 6655295901103053916;
	add.s64 	%rd3371, %rd3370, %rd3240;
	xor.b64  	%rd3372, %rd3309, %rd3272;
	and.b64  	%rd3373, %rd3346, %rd3372;
	xor.b64  	%rd3374, %rd3373, %rd3272;
	add.s64 	%rd3375, %rd3371, %rd3374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2275,%dummy}, %rd3346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2276}, %rd3346;
	}
	shf.r.wrap.b32 	%r2277, %r2276, %r2275, 14;
	shf.r.wrap.b32 	%r2278, %r2275, %r2276, 14;
	mov.b64 	%rd3376, {%r2278, %r2277};
	shf.r.wrap.b32 	%r2279, %r2276, %r2275, 18;
	shf.r.wrap.b32 	%r2280, %r2275, %r2276, 18;
	mov.b64 	%rd3377, {%r2280, %r2279};
	xor.b64  	%rd3378, %rd3376, %rd3377;
	shf.l.wrap.b32 	%r2281, %r2275, %r2276, 23;
	shf.l.wrap.b32 	%r2282, %r2276, %r2275, 23;
	mov.b64 	%rd3379, {%r2282, %r2281};
	xor.b64  	%rd3380, %rd3378, %rd3379;
	add.s64 	%rd3381, %rd3375, %rd3380;
	add.s64 	%rd3382, %rd3381, 3308224258029322869;
	add.s64 	%rd3383, %rd3382, %rd3251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2283,%dummy}, %rd3357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2284}, %rd3357;
	}
	shf.r.wrap.b32 	%r2285, %r2284, %r2283, 28;
	shf.r.wrap.b32 	%r2286, %r2283, %r2284, 28;
	mov.b64 	%rd3384, {%r2286, %r2285};
	shf.l.wrap.b32 	%r2287, %r2283, %r2284, 30;
	shf.l.wrap.b32 	%r2288, %r2284, %r2283, 30;
	mov.b64 	%rd3385, {%r2288, %r2287};
	xor.b64  	%rd3386, %rd3384, %rd3385;
	shf.l.wrap.b32 	%r2289, %r2283, %r2284, 25;
	shf.l.wrap.b32 	%r2290, %r2284, %r2283, 25;
	mov.b64 	%rd3387, {%r2290, %r2289};
	xor.b64  	%rd3388, %rd3386, %rd3387;
	and.b64  	%rd3389, %rd3357, %rd3320;
	or.b64  	%rd3390, %rd3357, %rd3320;
	and.b64  	%rd3391, %rd3390, %rd3283;
	or.b64  	%rd3392, %rd3391, %rd3389;
	add.s64 	%rd3393, %rd3392, %rd3388;
	add.s64 	%rd3394, %rd3393, %rd3382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2291,%dummy}, %rd3333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2292}, %rd3333;
	}
	shf.r.wrap.b32 	%r2293, %r2292, %r2291, 19;
	shf.r.wrap.b32 	%r2294, %r2291, %r2292, 19;
	mov.b64 	%rd3395, {%r2294, %r2293};
	shf.l.wrap.b32 	%r2295, %r2291, %r2292, 3;
	shf.l.wrap.b32 	%r2296, %r2292, %r2291, 3;
	mov.b64 	%rd3396, {%r2296, %r2295};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	shr.u64 	%rd3398, %rd3333, 6;
	xor.b64  	%rd3399, %rd3397, %rd3398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2297,%dummy}, %rd2865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2298}, %rd2865;
	}
	shf.r.wrap.b32 	%r2299, %r2298, %r2297, 1;
	shf.r.wrap.b32 	%r2300, %r2297, %r2298, 1;
	mov.b64 	%rd3400, {%r2300, %r2299};
	shf.r.wrap.b32 	%r2301, %r2298, %r2297, 8;
	shf.r.wrap.b32 	%r2302, %r2297, %r2298, 8;
	mov.b64 	%rd3401, {%r2302, %r2301};
	xor.b64  	%rd3402, %rd3400, %rd3401;
	shr.u64 	%rd3403, %rd2865, 7;
	xor.b64  	%rd3404, %rd3402, %rd3403;
	add.s64 	%rd3405, %rd3399, %rd2864;
	add.s64 	%rd3406, %rd3405, %rd3404;
	add.s64 	%rd3407, %rd3406, 6655295901103053916;
	add.s64 	%rd3408, %rd3407, %rd3272;
	xor.b64  	%rd3409, %rd3346, %rd3309;
	and.b64  	%rd3410, %rd3383, %rd3409;
	xor.b64  	%rd3411, %rd3410, %rd3309;
	add.s64 	%rd3412, %rd3408, %rd3411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2303,%dummy}, %rd3383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2304}, %rd3383;
	}
	shf.r.wrap.b32 	%r2305, %r2304, %r2303, 14;
	shf.r.wrap.b32 	%r2306, %r2303, %r2304, 14;
	mov.b64 	%rd3413, {%r2306, %r2305};
	shf.r.wrap.b32 	%r2307, %r2304, %r2303, 18;
	shf.r.wrap.b32 	%r2308, %r2303, %r2304, 18;
	mov.b64 	%rd3414, {%r2308, %r2307};
	xor.b64  	%rd3415, %rd3413, %rd3414;
	shf.l.wrap.b32 	%r2309, %r2303, %r2304, 23;
	shf.l.wrap.b32 	%r2310, %r2304, %r2303, 23;
	mov.b64 	%rd3416, {%r2310, %r2309};
	xor.b64  	%rd3417, %rd3415, %rd3416;
	add.s64 	%rd3418, %rd3412, %rd3417;
	add.s64 	%rd3419, %rd3418, 5365058923640841347;
	add.s64 	%rd3420, %rd3419, %rd3283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2311,%dummy}, %rd3394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2312}, %rd3394;
	}
	shf.r.wrap.b32 	%r2313, %r2312, %r2311, 28;
	shf.r.wrap.b32 	%r2314, %r2311, %r2312, 28;
	mov.b64 	%rd3421, {%r2314, %r2313};
	shf.l.wrap.b32 	%r2315, %r2311, %r2312, 30;
	shf.l.wrap.b32 	%r2316, %r2312, %r2311, 30;
	mov.b64 	%rd3422, {%r2316, %r2315};
	xor.b64  	%rd3423, %rd3421, %rd3422;
	shf.l.wrap.b32 	%r2317, %r2311, %r2312, 25;
	shf.l.wrap.b32 	%r2318, %r2312, %r2311, 25;
	mov.b64 	%rd3424, {%r2318, %r2317};
	xor.b64  	%rd3425, %rd3423, %rd3424;
	and.b64  	%rd3426, %rd3394, %rd3357;
	or.b64  	%rd3427, %rd3394, %rd3357;
	and.b64  	%rd3428, %rd3427, %rd3320;
	or.b64  	%rd3429, %rd3428, %rd3426;
	add.s64 	%rd3430, %rd3429, %rd3425;
	add.s64 	%rd3431, %rd3430, %rd3419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2319,%dummy}, %rd3370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2320}, %rd3370;
	}
	shf.r.wrap.b32 	%r2321, %r2320, %r2319, 19;
	shf.r.wrap.b32 	%r2322, %r2319, %r2320, 19;
	mov.b64 	%rd3432, {%r2322, %r2321};
	shf.l.wrap.b32 	%r2323, %r2319, %r2320, 3;
	shf.l.wrap.b32 	%r2324, %r2320, %r2319, 3;
	mov.b64 	%rd3433, {%r2324, %r2323};
	xor.b64  	%rd3434, %rd3432, %rd3433;
	shr.u64 	%rd3435, %rd3370, 6;
	xor.b64  	%rd3436, %rd3434, %rd3435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd2866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd2866;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 1;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 1;
	mov.b64 	%rd3437, {%r2328, %r2327};
	shf.r.wrap.b32 	%r2329, %r2326, %r2325, 8;
	shf.r.wrap.b32 	%r2330, %r2325, %r2326, 8;
	mov.b64 	%rd3438, {%r2330, %r2329};
	xor.b64  	%rd3439, %rd3437, %rd3438;
	shr.u64 	%rd3440, %rd2866, 7;
	xor.b64  	%rd3441, %rd3439, %rd3440;
	add.s64 	%rd3442, %rd3436, %rd2865;
	add.s64 	%rd3443, %rd3442, %rd3441;
	add.s64 	%rd3444, %rd3443, 6655295901103053916;
	add.s64 	%rd3445, %rd3444, %rd3309;
	xor.b64  	%rd3446, %rd3383, %rd3346;
	and.b64  	%rd3447, %rd3420, %rd3446;
	xor.b64  	%rd3448, %rd3447, %rd3346;
	add.s64 	%rd3449, %rd3445, %rd3448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2331,%dummy}, %rd3420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2332}, %rd3420;
	}
	shf.r.wrap.b32 	%r2333, %r2332, %r2331, 14;
	shf.r.wrap.b32 	%r2334, %r2331, %r2332, 14;
	mov.b64 	%rd3450, {%r2334, %r2333};
	shf.r.wrap.b32 	%r2335, %r2332, %r2331, 18;
	shf.r.wrap.b32 	%r2336, %r2331, %r2332, 18;
	mov.b64 	%rd3451, {%r2336, %r2335};
	xor.b64  	%rd3452, %rd3450, %rd3451;
	shf.l.wrap.b32 	%r2337, %r2331, %r2332, 23;
	shf.l.wrap.b32 	%r2338, %r2332, %r2331, 23;
	mov.b64 	%rd3453, {%r2338, %r2337};
	xor.b64  	%rd3454, %rd3452, %rd3453;
	add.s64 	%rd3455, %rd3449, %rd3454;
	add.s64 	%rd3456, %rd3455, 6679025012923562964;
	add.s64 	%rd3457, %rd3456, %rd3320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2339,%dummy}, %rd3431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2340}, %rd3431;
	}
	shf.r.wrap.b32 	%r2341, %r2340, %r2339, 28;
	shf.r.wrap.b32 	%r2342, %r2339, %r2340, 28;
	mov.b64 	%rd3458, {%r2342, %r2341};
	shf.l.wrap.b32 	%r2343, %r2339, %r2340, 30;
	shf.l.wrap.b32 	%r2344, %r2340, %r2339, 30;
	mov.b64 	%rd3459, {%r2344, %r2343};
	xor.b64  	%rd3460, %rd3458, %rd3459;
	shf.l.wrap.b32 	%r2345, %r2339, %r2340, 25;
	shf.l.wrap.b32 	%r2346, %r2340, %r2339, 25;
	mov.b64 	%rd3461, {%r2346, %r2345};
	xor.b64  	%rd3462, %rd3460, %rd3461;
	and.b64  	%rd3463, %rd3431, %rd3394;
	or.b64  	%rd3464, %rd3431, %rd3394;
	and.b64  	%rd3465, %rd3464, %rd3357;
	or.b64  	%rd3466, %rd3465, %rd3463;
	add.s64 	%rd3467, %rd3466, %rd3462;
	add.s64 	%rd3468, %rd3467, %rd3456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2347,%dummy}, %rd3407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2348}, %rd3407;
	}
	shf.r.wrap.b32 	%r2349, %r2348, %r2347, 19;
	shf.r.wrap.b32 	%r2350, %r2347, %r2348, 19;
	mov.b64 	%rd3469, {%r2350, %r2349};
	shf.l.wrap.b32 	%r2351, %r2347, %r2348, 3;
	shf.l.wrap.b32 	%r2352, %r2348, %r2347, 3;
	mov.b64 	%rd3470, {%r2352, %r2351};
	xor.b64  	%rd3471, %rd3469, %rd3470;
	shr.u64 	%rd3472, %rd3407, 6;
	xor.b64  	%rd3473, %rd3471, %rd3472;
	shf.r.wrap.b32 	%r2353, %r2157, %r2158, 8;
	shf.r.wrap.b32 	%r2354, %r2158, %r2157, 8;
	mov.b64 	%rd3474, {%r2354, %r2353};
	shf.r.wrap.b32 	%r2355, %r2157, %r2158, 1;
	shf.r.wrap.b32 	%r2356, %r2158, %r2157, 1;
	mov.b64 	%rd3475, {%r2356, %r2355};
	xor.b64  	%rd3476, %rd3475, %rd3474;
	xor.b64  	%rd3477, %rd3476, 51994499227367608;
	add.s64 	%rd3478, %rd3473, %rd2866;
	add.s64 	%rd3479, %rd3478, %rd3227;
	add.s64 	%rd3480, %rd3479, %rd3477;
	add.s64 	%rd3481, %rd3480, %rd3346;
	xor.b64  	%rd3482, %rd3420, %rd3383;
	and.b64  	%rd3483, %rd3457, %rd3482;
	xor.b64  	%rd3484, %rd3483, %rd3383;
	add.s64 	%rd3485, %rd3481, %rd3484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd3457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd3457;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 14;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 14;
	mov.b64 	%rd3486, {%r2360, %r2359};
	shf.r.wrap.b32 	%r2361, %r2358, %r2357, 18;
	shf.r.wrap.b32 	%r2362, %r2357, %r2358, 18;
	mov.b64 	%rd3487, {%r2362, %r2361};
	xor.b64  	%rd3488, %rd3486, %rd3487;
	shf.l.wrap.b32 	%r2363, %r2357, %r2358, 23;
	shf.l.wrap.b32 	%r2364, %r2358, %r2357, 23;
	mov.b64 	%rd3489, {%r2364, %r2363};
	xor.b64  	%rd3490, %rd3488, %rd3489;
	add.s64 	%rd3491, %rd3485, %rd3490;
	add.s64 	%rd3492, %rd3491, 8573033837759648693;
	add.s64 	%rd3493, %rd3492, %rd3357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2365,%dummy}, %rd3468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2366}, %rd3468;
	}
	shf.r.wrap.b32 	%r2367, %r2366, %r2365, 28;
	shf.r.wrap.b32 	%r2368, %r2365, %r2366, 28;
	mov.b64 	%rd3494, {%r2368, %r2367};
	shf.l.wrap.b32 	%r2369, %r2365, %r2366, 30;
	shf.l.wrap.b32 	%r2370, %r2366, %r2365, 30;
	mov.b64 	%rd3495, {%r2370, %r2369};
	xor.b64  	%rd3496, %rd3494, %rd3495;
	shf.l.wrap.b32 	%r2371, %r2365, %r2366, 25;
	shf.l.wrap.b32 	%r2372, %r2366, %r2365, 25;
	mov.b64 	%rd3497, {%r2372, %r2371};
	xor.b64  	%rd3498, %rd3496, %rd3497;
	and.b64  	%rd3499, %rd3468, %rd3431;
	or.b64  	%rd3500, %rd3468, %rd3431;
	and.b64  	%rd3501, %rd3500, %rd3394;
	or.b64  	%rd3502, %rd3501, %rd3499;
	add.s64 	%rd3503, %rd3502, %rd3498;
	add.s64 	%rd3504, %rd3503, %rd3492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd3444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd3444;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 19;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 19;
	mov.b64 	%rd3505, {%r2376, %r2375};
	shf.l.wrap.b32 	%r2377, %r2373, %r2374, 3;
	shf.l.wrap.b32 	%r2378, %r2374, %r2373, 3;
	mov.b64 	%rd3506, {%r2378, %r2377};
	xor.b64  	%rd3507, %rd3505, %rd3506;
	shr.u64 	%rd3508, %rd3444, 6;
	xor.b64  	%rd3509, %rd3507, %rd3508;
	add.s64 	%rd3510, %rd3509, %rd3259;
	add.s64 	%rd3511, %rd3510, %rd3477;
	add.s64 	%rd3512, %rd3511, 6655295901103053916;
	add.s64 	%rd3513, %rd3512, %rd3383;
	xor.b64  	%rd3514, %rd3457, %rd3420;
	and.b64  	%rd3515, %rd3493, %rd3514;
	xor.b64  	%rd3516, %rd3515, %rd3420;
	add.s64 	%rd3517, %rd3513, %rd3516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2379,%dummy}, %rd3493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2380}, %rd3493;
	}
	shf.r.wrap.b32 	%r2381, %r2380, %r2379, 14;
	shf.r.wrap.b32 	%r2382, %r2379, %r2380, 14;
	mov.b64 	%rd3518, {%r2382, %r2381};
	shf.r.wrap.b32 	%r2383, %r2380, %r2379, 18;
	shf.r.wrap.b32 	%r2384, %r2379, %r2380, 18;
	mov.b64 	%rd3519, {%r2384, %r2383};
	xor.b64  	%rd3520, %rd3518, %rd3519;
	shf.l.wrap.b32 	%r2385, %r2379, %r2380, 23;
	shf.l.wrap.b32 	%r2386, %r2380, %r2379, 23;
	mov.b64 	%rd3521, {%r2386, %r2385};
	xor.b64  	%rd3522, %rd3520, %rd3521;
	add.s64 	%rd3523, %rd3517, %rd3522;
	add.s64 	%rd3524, %rd3523, -7476448914759557205;
	add.s64 	%rd3525, %rd3524, %rd3394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd3504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd3504;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 28;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 28;
	mov.b64 	%rd3526, {%r2390, %r2389};
	shf.l.wrap.b32 	%r2391, %r2387, %r2388, 30;
	shf.l.wrap.b32 	%r2392, %r2388, %r2387, 30;
	mov.b64 	%rd3527, {%r2392, %r2391};
	xor.b64  	%rd3528, %rd3526, %rd3527;
	shf.l.wrap.b32 	%r2393, %r2387, %r2388, 25;
	shf.l.wrap.b32 	%r2394, %r2388, %r2387, 25;
	mov.b64 	%rd3529, {%r2394, %r2393};
	xor.b64  	%rd3530, %rd3528, %rd3529;
	and.b64  	%rd3531, %rd3504, %rd3468;
	or.b64  	%rd3532, %rd3504, %rd3468;
	and.b64  	%rd3533, %rd3532, %rd3431;
	or.b64  	%rd3534, %rd3533, %rd3531;
	add.s64 	%rd3535, %rd3534, %rd3530;
	add.s64 	%rd3536, %rd3535, %rd3524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2395,%dummy}, %rd3480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2396}, %rd3480;
	}
	shf.r.wrap.b32 	%r2397, %r2396, %r2395, 19;
	shf.r.wrap.b32 	%r2398, %r2395, %r2396, 19;
	mov.b64 	%rd3537, {%r2398, %r2397};
	shf.l.wrap.b32 	%r2399, %r2395, %r2396, 3;
	shf.l.wrap.b32 	%r2400, %r2396, %r2395, 3;
	mov.b64 	%rd3538, {%r2400, %r2399};
	xor.b64  	%rd3539, %rd3537, %rd3538;
	shr.u64 	%rd3540, %rd3480, 6;
	xor.b64  	%rd3541, %rd3539, %rd3540;
	add.s64 	%rd3542, %rd3541, %rd3296;
	add.s64 	%rd3543, %rd3542, %rd3477;
	add.s64 	%rd3544, %rd3543, 6655295901103053916;
	add.s64 	%rd3545, %rd3544, %rd3420;
	xor.b64  	%rd3546, %rd3493, %rd3457;
	and.b64  	%rd3547, %rd3525, %rd3546;
	xor.b64  	%rd3548, %rd3547, %rd3457;
	add.s64 	%rd3549, %rd3545, %rd3548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2401,%dummy}, %rd3525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2402}, %rd3525;
	}
	shf.r.wrap.b32 	%r2403, %r2402, %r2401, 14;
	shf.r.wrap.b32 	%r2404, %r2401, %r2402, 14;
	mov.b64 	%rd3550, {%r2404, %r2403};
	shf.r.wrap.b32 	%r2405, %r2402, %r2401, 18;
	shf.r.wrap.b32 	%r2406, %r2401, %r2402, 18;
	mov.b64 	%rd3551, {%r2406, %r2405};
	xor.b64  	%rd3552, %rd3550, %rd3551;
	shf.l.wrap.b32 	%r2407, %r2401, %r2402, 23;
	shf.l.wrap.b32 	%r2408, %r2402, %r2401, 23;
	mov.b64 	%rd3553, {%r2408, %r2407};
	xor.b64  	%rd3554, %rd3552, %rd3553;
	add.s64 	%rd3555, %rd3549, %rd3554;
	add.s64 	%rd3556, %rd3555, -6327057829258317296;
	add.s64 	%rd3557, %rd3556, %rd3431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2409,%dummy}, %rd3536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2410}, %rd3536;
	}
	shf.r.wrap.b32 	%r2411, %r2410, %r2409, 28;
	shf.r.wrap.b32 	%r2412, %r2409, %r2410, 28;
	mov.b64 	%rd3558, {%r2412, %r2411};
	shf.l.wrap.b32 	%r2413, %r2409, %r2410, 30;
	shf.l.wrap.b32 	%r2414, %r2410, %r2409, 30;
	mov.b64 	%rd3559, {%r2414, %r2413};
	xor.b64  	%rd3560, %rd3558, %rd3559;
	shf.l.wrap.b32 	%r2415, %r2409, %r2410, 25;
	shf.l.wrap.b32 	%r2416, %r2410, %r2409, 25;
	mov.b64 	%rd3561, {%r2416, %r2415};
	xor.b64  	%rd3562, %rd3560, %rd3561;
	and.b64  	%rd3563, %rd3536, %rd3504;
	or.b64  	%rd3564, %rd3536, %rd3504;
	and.b64  	%rd3565, %rd3564, %rd3468;
	or.b64  	%rd3566, %rd3565, %rd3563;
	add.s64 	%rd3567, %rd3566, %rd3562;
	add.s64 	%rd3568, %rd3567, %rd3556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd3512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2418}, %rd3512;
	}
	shf.r.wrap.b32 	%r2419, %r2418, %r2417, 19;
	shf.r.wrap.b32 	%r2420, %r2417, %r2418, 19;
	mov.b64 	%rd3569, {%r2420, %r2419};
	shf.l.wrap.b32 	%r2421, %r2417, %r2418, 3;
	shf.l.wrap.b32 	%r2422, %r2418, %r2417, 3;
	mov.b64 	%rd3570, {%r2422, %r2421};
	xor.b64  	%rd3571, %rd3569, %rd3570;
	shr.u64 	%rd3572, %rd3512, 6;
	xor.b64  	%rd3573, %rd3571, %rd3572;
	add.s64 	%rd3574, %rd3573, %rd3333;
	add.s64 	%rd3575, %rd3574, %rd3477;
	add.s64 	%rd3576, %rd3575, 6655295901103053916;
	add.s64 	%rd3577, %rd3576, %rd3457;
	xor.b64  	%rd3578, %rd3525, %rd3493;
	and.b64  	%rd3579, %rd3557, %rd3578;
	xor.b64  	%rd3580, %rd3579, %rd3493;
	add.s64 	%rd3581, %rd3577, %rd3580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2423,%dummy}, %rd3557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2424}, %rd3557;
	}
	shf.r.wrap.b32 	%r2425, %r2424, %r2423, 14;
	shf.r.wrap.b32 	%r2426, %r2423, %r2424, 14;
	mov.b64 	%rd3582, {%r2426, %r2425};
	shf.r.wrap.b32 	%r2427, %r2424, %r2423, 18;
	shf.r.wrap.b32 	%r2428, %r2423, %r2424, 18;
	mov.b64 	%rd3583, {%r2428, %r2427};
	xor.b64  	%rd3584, %rd3582, %rd3583;
	shf.l.wrap.b32 	%r2429, %r2423, %r2424, 23;
	shf.l.wrap.b32 	%r2430, %r2424, %r2423, 23;
	mov.b64 	%rd3585, {%r2430, %r2429};
	xor.b64  	%rd3586, %rd3584, %rd3585;
	add.s64 	%rd3587, %rd3581, %rd3586;
	add.s64 	%rd3588, %rd3587, -5763719355590565569;
	add.s64 	%rd3589, %rd3588, %rd3468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2431,%dummy}, %rd3568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2432}, %rd3568;
	}
	shf.r.wrap.b32 	%r2433, %r2432, %r2431, 28;
	shf.r.wrap.b32 	%r2434, %r2431, %r2432, 28;
	mov.b64 	%rd3590, {%r2434, %r2433};
	shf.l.wrap.b32 	%r2435, %r2431, %r2432, 30;
	shf.l.wrap.b32 	%r2436, %r2432, %r2431, 30;
	mov.b64 	%rd3591, {%r2436, %r2435};
	xor.b64  	%rd3592, %rd3590, %rd3591;
	shf.l.wrap.b32 	%r2437, %r2431, %r2432, 25;
	shf.l.wrap.b32 	%r2438, %r2432, %r2431, 25;
	mov.b64 	%rd3593, {%r2438, %r2437};
	xor.b64  	%rd3594, %rd3592, %rd3593;
	and.b64  	%rd3595, %rd3568, %rd3536;
	or.b64  	%rd3596, %rd3568, %rd3536;
	and.b64  	%rd3597, %rd3596, %rd3504;
	or.b64  	%rd3598, %rd3597, %rd3595;
	add.s64 	%rd3599, %rd3598, %rd3594;
	add.s64 	%rd3600, %rd3599, %rd3588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2439,%dummy}, %rd3544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2440}, %rd3544;
	}
	shf.r.wrap.b32 	%r2441, %r2440, %r2439, 19;
	shf.r.wrap.b32 	%r2442, %r2439, %r2440, 19;
	mov.b64 	%rd3601, {%r2442, %r2441};
	shf.l.wrap.b32 	%r2443, %r2439, %r2440, 3;
	shf.l.wrap.b32 	%r2444, %r2440, %r2439, 3;
	mov.b64 	%rd3602, {%r2444, %r2443};
	xor.b64  	%rd3603, %rd3601, %rd3602;
	shr.u64 	%rd3604, %rd3544, 6;
	xor.b64  	%rd3605, %rd3603, %rd3604;
	add.s64 	%rd3606, %rd3605, %rd3370;
	add.s64 	%rd3607, %rd3606, %rd3477;
	add.s64 	%rd3608, %rd3607, 6655295901103053916;
	add.s64 	%rd3609, %rd3608, %rd3493;
	xor.b64  	%rd3610, %rd3557, %rd3525;
	and.b64  	%rd3611, %rd3589, %rd3610;
	xor.b64  	%rd3612, %rd3611, %rd3525;
	add.s64 	%rd3613, %rd3609, %rd3612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2445,%dummy}, %rd3589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2446}, %rd3589;
	}
	shf.r.wrap.b32 	%r2447, %r2446, %r2445, 14;
	shf.r.wrap.b32 	%r2448, %r2445, %r2446, 14;
	mov.b64 	%rd3614, {%r2448, %r2447};
	shf.r.wrap.b32 	%r2449, %r2446, %r2445, 18;
	shf.r.wrap.b32 	%r2450, %r2445, %r2446, 18;
	mov.b64 	%rd3615, {%r2450, %r2449};
	xor.b64  	%rd3616, %rd3614, %rd3615;
	shf.l.wrap.b32 	%r2451, %r2445, %r2446, 23;
	shf.l.wrap.b32 	%r2452, %r2446, %r2445, 23;
	mov.b64 	%rd3617, {%r2452, %r2451};
	xor.b64  	%rd3618, %rd3616, %rd3617;
	add.s64 	%rd3619, %rd3613, %rd3618;
	add.s64 	%rd3620, %rd3619, -4658551843659510044;
	add.s64 	%rd3621, %rd3620, %rd3504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2453,%dummy}, %rd3600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2454}, %rd3600;
	}
	shf.r.wrap.b32 	%r2455, %r2454, %r2453, 28;
	shf.r.wrap.b32 	%r2456, %r2453, %r2454, 28;
	mov.b64 	%rd3622, {%r2456, %r2455};
	shf.l.wrap.b32 	%r2457, %r2453, %r2454, 30;
	shf.l.wrap.b32 	%r2458, %r2454, %r2453, 30;
	mov.b64 	%rd3623, {%r2458, %r2457};
	xor.b64  	%rd3624, %rd3622, %rd3623;
	shf.l.wrap.b32 	%r2459, %r2453, %r2454, 25;
	shf.l.wrap.b32 	%r2460, %r2454, %r2453, 25;
	mov.b64 	%rd3625, {%r2460, %r2459};
	xor.b64  	%rd3626, %rd3624, %rd3625;
	and.b64  	%rd3627, %rd3600, %rd3568;
	or.b64  	%rd3628, %rd3600, %rd3568;
	and.b64  	%rd3629, %rd3628, %rd3536;
	or.b64  	%rd3630, %rd3629, %rd3627;
	add.s64 	%rd3631, %rd3630, %rd3626;
	add.s64 	%rd3632, %rd3631, %rd3620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2461,%dummy}, %rd3576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2462}, %rd3576;
	}
	shf.r.wrap.b32 	%r2463, %r2462, %r2461, 19;
	shf.r.wrap.b32 	%r2464, %r2461, %r2462, 19;
	mov.b64 	%rd3633, {%r2464, %r2463};
	shf.l.wrap.b32 	%r2465, %r2461, %r2462, 3;
	shf.l.wrap.b32 	%r2466, %r2462, %r2461, 3;
	mov.b64 	%rd3634, {%r2466, %r2465};
	xor.b64  	%rd3635, %rd3633, %rd3634;
	shr.u64 	%rd3636, %rd3576, 6;
	xor.b64  	%rd3637, %rd3635, %rd3636;
	add.s64 	%rd3638, %rd3637, %rd3407;
	add.s64 	%rd3639, %rd3638, %rd3477;
	add.s64 	%rd3640, %rd3639, 6655295901103053916;
	add.s64 	%rd3641, %rd3640, %rd3525;
	xor.b64  	%rd3642, %rd3589, %rd3557;
	and.b64  	%rd3643, %rd3621, %rd3642;
	xor.b64  	%rd3644, %rd3643, %rd3557;
	add.s64 	%rd3645, %rd3641, %rd3644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2467,%dummy}, %rd3621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2468}, %rd3621;
	}
	shf.r.wrap.b32 	%r2469, %r2468, %r2467, 14;
	shf.r.wrap.b32 	%r2470, %r2467, %r2468, 14;
	mov.b64 	%rd3646, {%r2470, %r2469};
	shf.r.wrap.b32 	%r2471, %r2468, %r2467, 18;
	shf.r.wrap.b32 	%r2472, %r2467, %r2468, 18;
	mov.b64 	%rd3647, {%r2472, %r2471};
	xor.b64  	%rd3648, %rd3646, %rd3647;
	shf.l.wrap.b32 	%r2473, %r2467, %r2468, 23;
	shf.l.wrap.b32 	%r2474, %r2468, %r2467, 23;
	mov.b64 	%rd3649, {%r2474, %r2473};
	xor.b64  	%rd3650, %rd3648, %rd3649;
	add.s64 	%rd3651, %rd3645, %rd3650;
	add.s64 	%rd3652, %rd3651, -4116276920077217854;
	add.s64 	%rd3653, %rd3652, %rd3536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2475,%dummy}, %rd3632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd3632;
	}
	shf.r.wrap.b32 	%r2477, %r2476, %r2475, 28;
	shf.r.wrap.b32 	%r2478, %r2475, %r2476, 28;
	mov.b64 	%rd3654, {%r2478, %r2477};
	shf.l.wrap.b32 	%r2479, %r2475, %r2476, 30;
	shf.l.wrap.b32 	%r2480, %r2476, %r2475, 30;
	mov.b64 	%rd3655, {%r2480, %r2479};
	xor.b64  	%rd3656, %rd3654, %rd3655;
	shf.l.wrap.b32 	%r2481, %r2475, %r2476, 25;
	shf.l.wrap.b32 	%r2482, %r2476, %r2475, 25;
	mov.b64 	%rd3657, {%r2482, %r2481};
	xor.b64  	%rd3658, %rd3656, %rd3657;
	and.b64  	%rd3659, %rd3632, %rd3600;
	or.b64  	%rd3660, %rd3632, %rd3600;
	and.b64  	%rd3661, %rd3660, %rd3568;
	or.b64  	%rd3662, %rd3661, %rd3659;
	add.s64 	%rd3663, %rd3662, %rd3658;
	add.s64 	%rd3664, %rd3663, %rd3652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2483,%dummy}, %rd3608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd3608;
	}
	shf.r.wrap.b32 	%r2485, %r2484, %r2483, 19;
	shf.r.wrap.b32 	%r2486, %r2483, %r2484, 19;
	mov.b64 	%rd3665, {%r2486, %r2485};
	shf.l.wrap.b32 	%r2487, %r2483, %r2484, 3;
	shf.l.wrap.b32 	%r2488, %r2484, %r2483, 3;
	mov.b64 	%rd3666, {%r2488, %r2487};
	xor.b64  	%rd3667, %rd3665, %rd3666;
	shr.u64 	%rd3668, %rd3608, 6;
	xor.b64  	%rd3669, %rd3667, %rd3668;
	add.s64 	%rd3670, %rd3669, %rd3444;
	add.s64 	%rd3671, %rd3670, %rd3477;
	add.s64 	%rd3672, %rd3671, 6655295901103053916;
	add.s64 	%rd3673, %rd3672, %rd3557;
	xor.b64  	%rd3674, %rd3621, %rd3589;
	and.b64  	%rd3675, %rd3653, %rd3674;
	xor.b64  	%rd3676, %rd3675, %rd3589;
	add.s64 	%rd3677, %rd3673, %rd3676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2489,%dummy}, %rd3653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2490}, %rd3653;
	}
	shf.r.wrap.b32 	%r2491, %r2490, %r2489, 14;
	shf.r.wrap.b32 	%r2492, %r2489, %r2490, 14;
	mov.b64 	%rd3678, {%r2492, %r2491};
	shf.r.wrap.b32 	%r2493, %r2490, %r2489, 18;
	shf.r.wrap.b32 	%r2494, %r2489, %r2490, 18;
	mov.b64 	%rd3679, {%r2494, %r2493};
	xor.b64  	%rd3680, %rd3678, %rd3679;
	shf.l.wrap.b32 	%r2495, %r2489, %r2490, 23;
	shf.l.wrap.b32 	%r2496, %r2490, %r2489, 23;
	mov.b64 	%rd3681, {%r2496, %r2495};
	xor.b64  	%rd3682, %rd3680, %rd3681;
	add.s64 	%rd3683, %rd3677, %rd3682;
	add.s64 	%rd3684, %rd3683, -3051310485924567259;
	add.s64 	%rd3685, %rd3684, %rd3568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2497,%dummy}, %rd3664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2498}, %rd3664;
	}
	shf.r.wrap.b32 	%r2499, %r2498, %r2497, 28;
	shf.r.wrap.b32 	%r2500, %r2497, %r2498, 28;
	mov.b64 	%rd3686, {%r2500, %r2499};
	shf.l.wrap.b32 	%r2501, %r2497, %r2498, 30;
	shf.l.wrap.b32 	%r2502, %r2498, %r2497, 30;
	mov.b64 	%rd3687, {%r2502, %r2501};
	xor.b64  	%rd3688, %rd3686, %rd3687;
	shf.l.wrap.b32 	%r2503, %r2497, %r2498, 25;
	shf.l.wrap.b32 	%r2504, %r2498, %r2497, 25;
	mov.b64 	%rd3689, {%r2504, %r2503};
	xor.b64  	%rd3690, %rd3688, %rd3689;
	and.b64  	%rd3691, %rd3664, %rd3632;
	or.b64  	%rd3692, %rd3664, %rd3632;
	and.b64  	%rd3693, %rd3692, %rd3600;
	or.b64  	%rd3694, %rd3693, %rd3691;
	add.s64 	%rd3695, %rd3694, %rd3690;
	add.s64 	%rd3696, %rd3695, %rd3684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd3640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2506}, %rd3640;
	}
	shf.r.wrap.b32 	%r2507, %r2506, %r2505, 19;
	shf.r.wrap.b32 	%r2508, %r2505, %r2506, 19;
	mov.b64 	%rd3697, {%r2508, %r2507};
	shf.l.wrap.b32 	%r2509, %r2505, %r2506, 3;
	shf.l.wrap.b32 	%r2510, %r2506, %r2505, 3;
	mov.b64 	%rd3698, {%r2510, %r2509};
	xor.b64  	%rd3699, %rd3697, %rd3698;
	shr.u64 	%rd3700, %rd3640, 6;
	xor.b64  	%rd3701, %rd3699, %rd3700;
	add.s64 	%rd3702, %rd3701, %rd3480;
	add.s64 	%rd3703, %rd3702, %rd3477;
	add.s64 	%rd3704, %rd3703, 6655295901103053916;
	add.s64 	%rd3705, %rd3704, %rd3589;
	xor.b64  	%rd3706, %rd3653, %rd3621;
	and.b64  	%rd3707, %rd3685, %rd3706;
	xor.b64  	%rd3708, %rd3707, %rd3621;
	add.s64 	%rd3709, %rd3705, %rd3708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2511,%dummy}, %rd3685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2512}, %rd3685;
	}
	shf.r.wrap.b32 	%r2513, %r2512, %r2511, 14;
	shf.r.wrap.b32 	%r2514, %r2511, %r2512, 14;
	mov.b64 	%rd3710, {%r2514, %r2513};
	shf.r.wrap.b32 	%r2515, %r2512, %r2511, 18;
	shf.r.wrap.b32 	%r2516, %r2511, %r2512, 18;
	mov.b64 	%rd3711, {%r2516, %r2515};
	xor.b64  	%rd3712, %rd3710, %rd3711;
	shf.l.wrap.b32 	%r2517, %r2511, %r2512, 23;
	shf.l.wrap.b32 	%r2518, %r2512, %r2511, 23;
	mov.b64 	%rd3713, {%r2518, %r2517};
	xor.b64  	%rd3714, %rd3712, %rd3713;
	add.s64 	%rd3715, %rd3709, %rd3714;
	add.s64 	%rd3716, %rd3715, 489312712824947311;
	add.s64 	%rd3717, %rd3716, %rd3600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2519,%dummy}, %rd3696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd3696;
	}
	shf.r.wrap.b32 	%r2521, %r2520, %r2519, 28;
	shf.r.wrap.b32 	%r2522, %r2519, %r2520, 28;
	mov.b64 	%rd3718, {%r2522, %r2521};
	shf.l.wrap.b32 	%r2523, %r2519, %r2520, 30;
	shf.l.wrap.b32 	%r2524, %r2520, %r2519, 30;
	mov.b64 	%rd3719, {%r2524, %r2523};
	xor.b64  	%rd3720, %rd3718, %rd3719;
	shf.l.wrap.b32 	%r2525, %r2519, %r2520, 25;
	shf.l.wrap.b32 	%r2526, %r2520, %r2519, 25;
	mov.b64 	%rd3721, {%r2526, %r2525};
	xor.b64  	%rd3722, %rd3720, %rd3721;
	and.b64  	%rd3723, %rd3696, %rd3664;
	or.b64  	%rd3724, %rd3696, %rd3664;
	and.b64  	%rd3725, %rd3724, %rd3632;
	or.b64  	%rd3726, %rd3725, %rd3723;
	add.s64 	%rd3727, %rd3726, %rd3722;
	add.s64 	%rd3728, %rd3727, %rd3716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2527,%dummy}, %rd3672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2528}, %rd3672;
	}
	shf.r.wrap.b32 	%r2529, %r2528, %r2527, 19;
	shf.r.wrap.b32 	%r2530, %r2527, %r2528, 19;
	mov.b64 	%rd3729, {%r2530, %r2529};
	shf.l.wrap.b32 	%r2531, %r2527, %r2528, 3;
	shf.l.wrap.b32 	%r2532, %r2528, %r2527, 3;
	mov.b64 	%rd3730, {%r2532, %r2531};
	xor.b64  	%rd3731, %rd3729, %rd3730;
	shr.u64 	%rd3732, %rd3672, 6;
	xor.b64  	%rd3733, %rd3731, %rd3732;
	shf.r.wrap.b32 	%r2533, %r2208, %r2207, 1;
	shf.r.wrap.b32 	%r2534, %r2207, %r2208, 1;
	mov.b64 	%rd3734, {%r2534, %r2533};
	shf.r.wrap.b32 	%r2535, %r2208, %r2207, 8;
	shf.r.wrap.b32 	%r2536, %r2207, %r2208, 8;
	mov.b64 	%rd3735, {%r2536, %r2535};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	shr.u64 	%rd3737, %rd3227, 7;
	xor.b64  	%rd3738, %rd3736, %rd3737;
	add.s64 	%rd3739, %rd3733, %rd3512;
	add.s64 	%rd3740, %rd3739, %rd3738;
	add.s64 	%rd3741, %rd3740, 6655295901103053916;
	add.s64 	%rd3742, %rd3741, %rd3621;
	xor.b64  	%rd3743, %rd3685, %rd3653;
	and.b64  	%rd3744, %rd3717, %rd3743;
	xor.b64  	%rd3745, %rd3744, %rd3653;
	add.s64 	%rd3746, %rd3742, %rd3745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2537,%dummy}, %rd3717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2538}, %rd3717;
	}
	shf.r.wrap.b32 	%r2539, %r2538, %r2537, 14;
	shf.r.wrap.b32 	%r2540, %r2537, %r2538, 14;
	mov.b64 	%rd3747, {%r2540, %r2539};
	shf.r.wrap.b32 	%r2541, %r2538, %r2537, 18;
	shf.r.wrap.b32 	%r2542, %r2537, %r2538, 18;
	mov.b64 	%rd3748, {%r2542, %r2541};
	xor.b64  	%rd3749, %rd3747, %rd3748;
	shf.l.wrap.b32 	%r2543, %r2537, %r2538, 23;
	shf.l.wrap.b32 	%r2544, %r2538, %r2537, 23;
	mov.b64 	%rd3750, {%r2544, %r2543};
	xor.b64  	%rd3751, %rd3749, %rd3750;
	add.s64 	%rd3752, %rd3746, %rd3751;
	add.s64 	%rd3753, %rd3752, 1452737877330783856;
	add.s64 	%rd3754, %rd3753, %rd3632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2545,%dummy}, %rd3728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2546}, %rd3728;
	}
	shf.r.wrap.b32 	%r2547, %r2546, %r2545, 28;
	shf.r.wrap.b32 	%r2548, %r2545, %r2546, 28;
	mov.b64 	%rd3755, {%r2548, %r2547};
	shf.l.wrap.b32 	%r2549, %r2545, %r2546, 30;
	shf.l.wrap.b32 	%r2550, %r2546, %r2545, 30;
	mov.b64 	%rd3756, {%r2550, %r2549};
	xor.b64  	%rd3757, %rd3755, %rd3756;
	shf.l.wrap.b32 	%r2551, %r2545, %r2546, 25;
	shf.l.wrap.b32 	%r2552, %r2546, %r2545, 25;
	mov.b64 	%rd3758, {%r2552, %r2551};
	xor.b64  	%rd3759, %rd3757, %rd3758;
	and.b64  	%rd3760, %rd3728, %rd3696;
	or.b64  	%rd3761, %rd3728, %rd3696;
	and.b64  	%rd3762, %rd3761, %rd3664;
	or.b64  	%rd3763, %rd3762, %rd3760;
	add.s64 	%rd3764, %rd3763, %rd3759;
	add.s64 	%rd3765, %rd3764, %rd3753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2553,%dummy}, %rd3704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2554}, %rd3704;
	}
	shf.r.wrap.b32 	%r2555, %r2554, %r2553, 19;
	shf.r.wrap.b32 	%r2556, %r2553, %r2554, 19;
	mov.b64 	%rd3766, {%r2556, %r2555};
	shf.l.wrap.b32 	%r2557, %r2553, %r2554, 3;
	shf.l.wrap.b32 	%r2558, %r2554, %r2553, 3;
	mov.b64 	%rd3767, {%r2558, %r2557};
	xor.b64  	%rd3768, %rd3766, %rd3767;
	shr.u64 	%rd3769, %rd3704, 6;
	xor.b64  	%rd3770, %rd3768, %rd3769;
	shf.r.wrap.b32 	%r2559, %r2236, %r2235, 1;
	shf.r.wrap.b32 	%r2560, %r2235, %r2236, 1;
	mov.b64 	%rd3771, {%r2560, %r2559};
	shf.r.wrap.b32 	%r2561, %r2236, %r2235, 8;
	shf.r.wrap.b32 	%r2562, %r2235, %r2236, 8;
	mov.b64 	%rd3772, {%r2562, %r2561};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	shr.u64 	%rd3774, %rd3259, 7;
	xor.b64  	%rd3775, %rd3773, %rd3774;
	add.s64 	%rd3776, %rd3770, %rd3227;
	add.s64 	%rd3777, %rd3776, %rd3544;
	add.s64 	%rd3778, %rd3777, %rd3775;
	add.s64 	%rd3779, %rd3778, %rd3653;
	xor.b64  	%rd3780, %rd3717, %rd3685;
	and.b64  	%rd3781, %rd3754, %rd3780;
	xor.b64  	%rd3782, %rd3781, %rd3685;
	add.s64 	%rd3783, %rd3779, %rd3782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2563,%dummy}, %rd3754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2564}, %rd3754;
	}
	shf.r.wrap.b32 	%r2565, %r2564, %r2563, 14;
	shf.r.wrap.b32 	%r2566, %r2563, %r2564, 14;
	mov.b64 	%rd3784, {%r2566, %r2565};
	shf.r.wrap.b32 	%r2567, %r2564, %r2563, 18;
	shf.r.wrap.b32 	%r2568, %r2563, %r2564, 18;
	mov.b64 	%rd3785, {%r2568, %r2567};
	xor.b64  	%rd3786, %rd3784, %rd3785;
	shf.l.wrap.b32 	%r2569, %r2563, %r2564, 23;
	shf.l.wrap.b32 	%r2570, %r2564, %r2563, 23;
	mov.b64 	%rd3787, {%r2570, %r2569};
	xor.b64  	%rd3788, %rd3786, %rd3787;
	add.s64 	%rd3789, %rd3783, %rd3788;
	add.s64 	%rd3790, %rd3789, 2861767655752347644;
	add.s64 	%rd3791, %rd3790, %rd3664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2571,%dummy}, %rd3765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2572}, %rd3765;
	}
	shf.r.wrap.b32 	%r2573, %r2572, %r2571, 28;
	shf.r.wrap.b32 	%r2574, %r2571, %r2572, 28;
	mov.b64 	%rd3792, {%r2574, %r2573};
	shf.l.wrap.b32 	%r2575, %r2571, %r2572, 30;
	shf.l.wrap.b32 	%r2576, %r2572, %r2571, 30;
	mov.b64 	%rd3793, {%r2576, %r2575};
	xor.b64  	%rd3794, %rd3792, %rd3793;
	shf.l.wrap.b32 	%r2577, %r2571, %r2572, 25;
	shf.l.wrap.b32 	%r2578, %r2572, %r2571, 25;
	mov.b64 	%rd3795, {%r2578, %r2577};
	xor.b64  	%rd3796, %rd3794, %rd3795;
	and.b64  	%rd3797, %rd3765, %rd3728;
	or.b64  	%rd3798, %rd3765, %rd3728;
	and.b64  	%rd3799, %rd3798, %rd3696;
	or.b64  	%rd3800, %rd3799, %rd3797;
	add.s64 	%rd3801, %rd3800, %rd3796;
	add.s64 	%rd3802, %rd3801, %rd3790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2579,%dummy}, %rd3741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2580}, %rd3741;
	}
	shf.r.wrap.b32 	%r2581, %r2580, %r2579, 19;
	shf.r.wrap.b32 	%r2582, %r2579, %r2580, 19;
	mov.b64 	%rd3803, {%r2582, %r2581};
	shf.l.wrap.b32 	%r2583, %r2579, %r2580, 3;
	shf.l.wrap.b32 	%r2584, %r2580, %r2579, 3;
	mov.b64 	%rd3804, {%r2584, %r2583};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	shr.u64 	%rd3806, %rd3741, 6;
	xor.b64  	%rd3807, %rd3805, %rd3806;
	shf.r.wrap.b32 	%r2585, %r2264, %r2263, 1;
	shf.r.wrap.b32 	%r2586, %r2263, %r2264, 1;
	mov.b64 	%rd3808, {%r2586, %r2585};
	shf.r.wrap.b32 	%r2587, %r2264, %r2263, 8;
	shf.r.wrap.b32 	%r2588, %r2263, %r2264, 8;
	mov.b64 	%rd3809, {%r2588, %r2587};
	xor.b64  	%rd3810, %rd3808, %rd3809;
	shr.u64 	%rd3811, %rd3296, 7;
	xor.b64  	%rd3812, %rd3810, %rd3811;
	add.s64 	%rd3813, %rd3807, %rd3259;
	add.s64 	%rd3814, %rd3813, %rd3576;
	add.s64 	%rd3815, %rd3814, %rd3812;
	add.s64 	%rd3816, %rd3815, %rd3685;
	xor.b64  	%rd3817, %rd3754, %rd3717;
	and.b64  	%rd3818, %rd3791, %rd3817;
	xor.b64  	%rd3819, %rd3818, %rd3717;
	add.s64 	%rd3820, %rd3816, %rd3819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2589,%dummy}, %rd3791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2590}, %rd3791;
	}
	shf.r.wrap.b32 	%r2591, %r2590, %r2589, 14;
	shf.r.wrap.b32 	%r2592, %r2589, %r2590, 14;
	mov.b64 	%rd3821, {%r2592, %r2591};
	shf.r.wrap.b32 	%r2593, %r2590, %r2589, 18;
	shf.r.wrap.b32 	%r2594, %r2589, %r2590, 18;
	mov.b64 	%rd3822, {%r2594, %r2593};
	xor.b64  	%rd3823, %rd3821, %rd3822;
	shf.l.wrap.b32 	%r2595, %r2589, %r2590, 23;
	shf.l.wrap.b32 	%r2596, %r2590, %r2589, 23;
	mov.b64 	%rd3824, {%r2596, %r2595};
	xor.b64  	%rd3825, %rd3823, %rd3824;
	add.s64 	%rd3826, %rd3820, %rd3825;
	add.s64 	%rd3827, %rd3826, 3322285676063803686;
	add.s64 	%rd3828, %rd3827, %rd3696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2597,%dummy}, %rd3802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2598}, %rd3802;
	}
	shf.r.wrap.b32 	%r2599, %r2598, %r2597, 28;
	shf.r.wrap.b32 	%r2600, %r2597, %r2598, 28;
	mov.b64 	%rd3829, {%r2600, %r2599};
	shf.l.wrap.b32 	%r2601, %r2597, %r2598, 30;
	shf.l.wrap.b32 	%r2602, %r2598, %r2597, 30;
	mov.b64 	%rd3830, {%r2602, %r2601};
	xor.b64  	%rd3831, %rd3829, %rd3830;
	shf.l.wrap.b32 	%r2603, %r2597, %r2598, 25;
	shf.l.wrap.b32 	%r2604, %r2598, %r2597, 25;
	mov.b64 	%rd3832, {%r2604, %r2603};
	xor.b64  	%rd3833, %rd3831, %rd3832;
	and.b64  	%rd3834, %rd3802, %rd3765;
	or.b64  	%rd3835, %rd3802, %rd3765;
	and.b64  	%rd3836, %rd3835, %rd3728;
	or.b64  	%rd3837, %rd3836, %rd3834;
	add.s64 	%rd3838, %rd3837, %rd3833;
	add.s64 	%rd3839, %rd3838, %rd3827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2605,%dummy}, %rd3778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2606}, %rd3778;
	}
	shf.r.wrap.b32 	%r2607, %r2606, %r2605, 19;
	shf.r.wrap.b32 	%r2608, %r2605, %r2606, 19;
	mov.b64 	%rd3840, {%r2608, %r2607};
	shf.l.wrap.b32 	%r2609, %r2605, %r2606, 3;
	shf.l.wrap.b32 	%r2610, %r2606, %r2605, 3;
	mov.b64 	%rd3841, {%r2610, %r2609};
	xor.b64  	%rd3842, %rd3840, %rd3841;
	shr.u64 	%rd3843, %rd3778, 6;
	xor.b64  	%rd3844, %rd3842, %rd3843;
	shf.r.wrap.b32 	%r2611, %r2292, %r2291, 1;
	shf.r.wrap.b32 	%r2612, %r2291, %r2292, 1;
	mov.b64 	%rd3845, {%r2612, %r2611};
	shf.r.wrap.b32 	%r2613, %r2292, %r2291, 8;
	shf.r.wrap.b32 	%r2614, %r2291, %r2292, 8;
	mov.b64 	%rd3846, {%r2614, %r2613};
	xor.b64  	%rd3847, %rd3845, %rd3846;
	shr.u64 	%rd3848, %rd3333, 7;
	xor.b64  	%rd3849, %rd3847, %rd3848;
	add.s64 	%rd3850, %rd3844, %rd3296;
	add.s64 	%rd3851, %rd3850, %rd3608;
	add.s64 	%rd3852, %rd3851, %rd3849;
	add.s64 	%rd3853, %rd3852, %rd3717;
	xor.b64  	%rd3854, %rd3791, %rd3754;
	and.b64  	%rd3855, %rd3828, %rd3854;
	xor.b64  	%rd3856, %rd3855, %rd3754;
	add.s64 	%rd3857, %rd3853, %rd3856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2615,%dummy}, %rd3828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2616}, %rd3828;
	}
	shf.r.wrap.b32 	%r2617, %r2616, %r2615, 14;
	shf.r.wrap.b32 	%r2618, %r2615, %r2616, 14;
	mov.b64 	%rd3858, {%r2618, %r2617};
	shf.r.wrap.b32 	%r2619, %r2616, %r2615, 18;
	shf.r.wrap.b32 	%r2620, %r2615, %r2616, 18;
	mov.b64 	%rd3859, {%r2620, %r2619};
	xor.b64  	%rd3860, %rd3858, %rd3859;
	shf.l.wrap.b32 	%r2621, %r2615, %r2616, 23;
	shf.l.wrap.b32 	%r2622, %r2616, %r2615, 23;
	mov.b64 	%rd3861, {%r2622, %r2621};
	xor.b64  	%rd3862, %rd3860, %rd3861;
	add.s64 	%rd3863, %rd3857, %rd3862;
	add.s64 	%rd3864, %rd3863, 5560940570517711597;
	add.s64 	%rd3865, %rd3864, %rd3728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2623,%dummy}, %rd3839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2624}, %rd3839;
	}
	shf.r.wrap.b32 	%r2625, %r2624, %r2623, 28;
	shf.r.wrap.b32 	%r2626, %r2623, %r2624, 28;
	mov.b64 	%rd3866, {%r2626, %r2625};
	shf.l.wrap.b32 	%r2627, %r2623, %r2624, 30;
	shf.l.wrap.b32 	%r2628, %r2624, %r2623, 30;
	mov.b64 	%rd3867, {%r2628, %r2627};
	xor.b64  	%rd3868, %rd3866, %rd3867;
	shf.l.wrap.b32 	%r2629, %r2623, %r2624, 25;
	shf.l.wrap.b32 	%r2630, %r2624, %r2623, 25;
	mov.b64 	%rd3869, {%r2630, %r2629};
	xor.b64  	%rd3870, %rd3868, %rd3869;
	and.b64  	%rd3871, %rd3839, %rd3802;
	or.b64  	%rd3872, %rd3839, %rd3802;
	and.b64  	%rd3873, %rd3872, %rd3765;
	or.b64  	%rd3874, %rd3873, %rd3871;
	add.s64 	%rd3875, %rd3874, %rd3870;
	add.s64 	%rd3876, %rd3875, %rd3864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd3815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd3815;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 19;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 19;
	mov.b64 	%rd3877, {%r2634, %r2633};
	shf.l.wrap.b32 	%r2635, %r2631, %r2632, 3;
	shf.l.wrap.b32 	%r2636, %r2632, %r2631, 3;
	mov.b64 	%rd3878, {%r2636, %r2635};
	xor.b64  	%rd3879, %rd3877, %rd3878;
	shr.u64 	%rd3880, %rd3815, 6;
	xor.b64  	%rd3881, %rd3879, %rd3880;
	shf.r.wrap.b32 	%r2637, %r2320, %r2319, 1;
	shf.r.wrap.b32 	%r2638, %r2319, %r2320, 1;
	mov.b64 	%rd3882, {%r2638, %r2637};
	shf.r.wrap.b32 	%r2639, %r2320, %r2319, 8;
	shf.r.wrap.b32 	%r2640, %r2319, %r2320, 8;
	mov.b64 	%rd3883, {%r2640, %r2639};
	xor.b64  	%rd3884, %rd3882, %rd3883;
	shr.u64 	%rd3885, %rd3370, 7;
	xor.b64  	%rd3886, %rd3884, %rd3885;
	add.s64 	%rd3887, %rd3881, %rd3333;
	add.s64 	%rd3888, %rd3887, %rd3640;
	add.s64 	%rd3889, %rd3888, %rd3886;
	add.s64 	%rd3890, %rd3889, %rd3754;
	xor.b64  	%rd3891, %rd3828, %rd3791;
	and.b64  	%rd3892, %rd3865, %rd3891;
	xor.b64  	%rd3893, %rd3892, %rd3791;
	add.s64 	%rd3894, %rd3890, %rd3893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2641,%dummy}, %rd3865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2642}, %rd3865;
	}
	shf.r.wrap.b32 	%r2643, %r2642, %r2641, 14;
	shf.r.wrap.b32 	%r2644, %r2641, %r2642, 14;
	mov.b64 	%rd3895, {%r2644, %r2643};
	shf.r.wrap.b32 	%r2645, %r2642, %r2641, 18;
	shf.r.wrap.b32 	%r2646, %r2641, %r2642, 18;
	mov.b64 	%rd3896, {%r2646, %r2645};
	xor.b64  	%rd3897, %rd3895, %rd3896;
	shf.l.wrap.b32 	%r2647, %r2641, %r2642, 23;
	shf.l.wrap.b32 	%r2648, %r2642, %r2641, 23;
	mov.b64 	%rd3898, {%r2648, %r2647};
	xor.b64  	%rd3899, %rd3897, %rd3898;
	add.s64 	%rd3900, %rd3894, %rd3899;
	add.s64 	%rd3901, %rd3900, 5996557281743188959;
	add.s64 	%rd3902, %rd3901, %rd3765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd3876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2650}, %rd3876;
	}
	shf.r.wrap.b32 	%r2651, %r2650, %r2649, 28;
	shf.r.wrap.b32 	%r2652, %r2649, %r2650, 28;
	mov.b64 	%rd3903, {%r2652, %r2651};
	shf.l.wrap.b32 	%r2653, %r2649, %r2650, 30;
	shf.l.wrap.b32 	%r2654, %r2650, %r2649, 30;
	mov.b64 	%rd3904, {%r2654, %r2653};
	xor.b64  	%rd3905, %rd3903, %rd3904;
	shf.l.wrap.b32 	%r2655, %r2649, %r2650, 25;
	shf.l.wrap.b32 	%r2656, %r2650, %r2649, 25;
	mov.b64 	%rd3906, {%r2656, %r2655};
	xor.b64  	%rd3907, %rd3905, %rd3906;
	and.b64  	%rd3908, %rd3876, %rd3839;
	or.b64  	%rd3909, %rd3876, %rd3839;
	and.b64  	%rd3910, %rd3909, %rd3802;
	or.b64  	%rd3911, %rd3910, %rd3908;
	add.s64 	%rd3912, %rd3911, %rd3907;
	add.s64 	%rd3913, %rd3912, %rd3901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2657,%dummy}, %rd3852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2658}, %rd3852;
	}
	shf.r.wrap.b32 	%r2659, %r2658, %r2657, 19;
	shf.r.wrap.b32 	%r2660, %r2657, %r2658, 19;
	mov.b64 	%rd3914, {%r2660, %r2659};
	shf.l.wrap.b32 	%r2661, %r2657, %r2658, 3;
	shf.l.wrap.b32 	%r2662, %r2658, %r2657, 3;
	mov.b64 	%rd3915, {%r2662, %r2661};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	shr.u64 	%rd3917, %rd3852, 6;
	xor.b64  	%rd3918, %rd3916, %rd3917;
	shf.r.wrap.b32 	%r2663, %r2348, %r2347, 1;
	shf.r.wrap.b32 	%r2664, %r2347, %r2348, 1;
	mov.b64 	%rd3919, {%r2664, %r2663};
	shf.r.wrap.b32 	%r2665, %r2348, %r2347, 8;
	shf.r.wrap.b32 	%r2666, %r2347, %r2348, 8;
	mov.b64 	%rd3920, {%r2666, %r2665};
	xor.b64  	%rd3921, %rd3919, %rd3920;
	shr.u64 	%rd3922, %rd3407, 7;
	xor.b64  	%rd3923, %rd3921, %rd3922;
	add.s64 	%rd3924, %rd3918, %rd3370;
	add.s64 	%rd3925, %rd3924, %rd3672;
	add.s64 	%rd3926, %rd3925, %rd3923;
	add.s64 	%rd3927, %rd3926, %rd3791;
	xor.b64  	%rd3928, %rd3865, %rd3828;
	and.b64  	%rd3929, %rd3902, %rd3928;
	xor.b64  	%rd3930, %rd3929, %rd3828;
	add.s64 	%rd3931, %rd3927, %rd3930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2667,%dummy}, %rd3902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2668}, %rd3902;
	}
	shf.r.wrap.b32 	%r2669, %r2668, %r2667, 14;
	shf.r.wrap.b32 	%r2670, %r2667, %r2668, 14;
	mov.b64 	%rd3932, {%r2670, %r2669};
	shf.r.wrap.b32 	%r2671, %r2668, %r2667, 18;
	shf.r.wrap.b32 	%r2672, %r2667, %r2668, 18;
	mov.b64 	%rd3933, {%r2672, %r2671};
	xor.b64  	%rd3934, %rd3932, %rd3933;
	shf.l.wrap.b32 	%r2673, %r2667, %r2668, 23;
	shf.l.wrap.b32 	%r2674, %r2668, %r2667, 23;
	mov.b64 	%rd3935, {%r2674, %r2673};
	xor.b64  	%rd3936, %rd3934, %rd3935;
	add.s64 	%rd3937, %rd3931, %rd3936;
	add.s64 	%rd3938, %rd3937, 7280758554555802590;
	add.s64 	%rd3939, %rd3938, %rd3802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2675,%dummy}, %rd3913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2676}, %rd3913;
	}
	shf.r.wrap.b32 	%r2677, %r2676, %r2675, 28;
	shf.r.wrap.b32 	%r2678, %r2675, %r2676, 28;
	mov.b64 	%rd3940, {%r2678, %r2677};
	shf.l.wrap.b32 	%r2679, %r2675, %r2676, 30;
	shf.l.wrap.b32 	%r2680, %r2676, %r2675, 30;
	mov.b64 	%rd3941, {%r2680, %r2679};
	xor.b64  	%rd3942, %rd3940, %rd3941;
	shf.l.wrap.b32 	%r2681, %r2675, %r2676, 25;
	shf.l.wrap.b32 	%r2682, %r2676, %r2675, 25;
	mov.b64 	%rd3943, {%r2682, %r2681};
	xor.b64  	%rd3944, %rd3942, %rd3943;
	and.b64  	%rd3945, %rd3913, %rd3876;
	or.b64  	%rd3946, %rd3913, %rd3876;
	and.b64  	%rd3947, %rd3946, %rd3839;
	or.b64  	%rd3948, %rd3947, %rd3945;
	add.s64 	%rd3949, %rd3948, %rd3944;
	add.s64 	%rd3950, %rd3949, %rd3938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2683,%dummy}, %rd3889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2684}, %rd3889;
	}
	shf.r.wrap.b32 	%r2685, %r2684, %r2683, 19;
	shf.r.wrap.b32 	%r2686, %r2683, %r2684, 19;
	mov.b64 	%rd3951, {%r2686, %r2685};
	shf.l.wrap.b32 	%r2687, %r2683, %r2684, 3;
	shf.l.wrap.b32 	%r2688, %r2684, %r2683, 3;
	mov.b64 	%rd3952, {%r2688, %r2687};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	shr.u64 	%rd3954, %rd3889, 6;
	xor.b64  	%rd3955, %rd3953, %rd3954;
	shf.r.wrap.b32 	%r2689, %r2374, %r2373, 1;
	shf.r.wrap.b32 	%r2690, %r2373, %r2374, 1;
	mov.b64 	%rd3956, {%r2690, %r2689};
	shf.r.wrap.b32 	%r2691, %r2374, %r2373, 8;
	shf.r.wrap.b32 	%r2692, %r2373, %r2374, 8;
	mov.b64 	%rd3957, {%r2692, %r2691};
	xor.b64  	%rd3958, %rd3956, %rd3957;
	shr.u64 	%rd3959, %rd3444, 7;
	xor.b64  	%rd3960, %rd3958, %rd3959;
	add.s64 	%rd3961, %rd3955, %rd3407;
	add.s64 	%rd3962, %rd3961, %rd3704;
	add.s64 	%rd3963, %rd3962, %rd3960;
	add.s64 	%rd3964, %rd3963, %rd3828;
	xor.b64  	%rd3965, %rd3902, %rd3865;
	and.b64  	%rd3966, %rd3939, %rd3965;
	xor.b64  	%rd3967, %rd3966, %rd3865;
	add.s64 	%rd3968, %rd3964, %rd3967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2693,%dummy}, %rd3939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2694}, %rd3939;
	}
	shf.r.wrap.b32 	%r2695, %r2694, %r2693, 14;
	shf.r.wrap.b32 	%r2696, %r2693, %r2694, 14;
	mov.b64 	%rd3969, {%r2696, %r2695};
	shf.r.wrap.b32 	%r2697, %r2694, %r2693, 18;
	shf.r.wrap.b32 	%r2698, %r2693, %r2694, 18;
	mov.b64 	%rd3970, {%r2698, %r2697};
	xor.b64  	%rd3971, %rd3969, %rd3970;
	shf.l.wrap.b32 	%r2699, %r2693, %r2694, 23;
	shf.l.wrap.b32 	%r2700, %r2694, %r2693, 23;
	mov.b64 	%rd3972, {%r2700, %r2699};
	xor.b64  	%rd3973, %rd3971, %rd3972;
	add.s64 	%rd3974, %rd3968, %rd3973;
	add.s64 	%rd3975, %rd3974, 8532644243296465576;
	add.s64 	%rd3976, %rd3975, %rd3839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2701,%dummy}, %rd3950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2702}, %rd3950;
	}
	shf.r.wrap.b32 	%r2703, %r2702, %r2701, 28;
	shf.r.wrap.b32 	%r2704, %r2701, %r2702, 28;
	mov.b64 	%rd3977, {%r2704, %r2703};
	shf.l.wrap.b32 	%r2705, %r2701, %r2702, 30;
	shf.l.wrap.b32 	%r2706, %r2702, %r2701, 30;
	mov.b64 	%rd3978, {%r2706, %r2705};
	xor.b64  	%rd3979, %rd3977, %rd3978;
	shf.l.wrap.b32 	%r2707, %r2701, %r2702, 25;
	shf.l.wrap.b32 	%r2708, %r2702, %r2701, 25;
	mov.b64 	%rd3980, {%r2708, %r2707};
	xor.b64  	%rd3981, %rd3979, %rd3980;
	and.b64  	%rd3982, %rd3950, %rd3913;
	or.b64  	%rd3983, %rd3950, %rd3913;
	and.b64  	%rd3984, %rd3983, %rd3876;
	or.b64  	%rd3985, %rd3984, %rd3982;
	add.s64 	%rd3986, %rd3985, %rd3981;
	add.s64 	%rd3987, %rd3986, %rd3975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2709,%dummy}, %rd3926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2710}, %rd3926;
	}
	shf.r.wrap.b32 	%r2711, %r2710, %r2709, 19;
	shf.r.wrap.b32 	%r2712, %r2709, %r2710, 19;
	mov.b64 	%rd3988, {%r2712, %r2711};
	shf.l.wrap.b32 	%r2713, %r2709, %r2710, 3;
	shf.l.wrap.b32 	%r2714, %r2710, %r2709, 3;
	mov.b64 	%rd3989, {%r2714, %r2713};
	xor.b64  	%rd3990, %rd3988, %rd3989;
	shr.u64 	%rd3991, %rd3926, 6;
	xor.b64  	%rd3992, %rd3990, %rd3991;
	shf.r.wrap.b32 	%r2715, %r2396, %r2395, 1;
	shf.r.wrap.b32 	%r2716, %r2395, %r2396, 1;
	mov.b64 	%rd3993, {%r2716, %r2715};
	shf.r.wrap.b32 	%r2717, %r2396, %r2395, 8;
	shf.r.wrap.b32 	%r2718, %r2395, %r2396, 8;
	mov.b64 	%rd3994, {%r2718, %r2717};
	xor.b64  	%rd3995, %rd3993, %rd3994;
	shr.u64 	%rd3996, %rd3480, 7;
	xor.b64  	%rd3997, %rd3995, %rd3996;
	add.s64 	%rd3998, %rd3992, %rd3444;
	add.s64 	%rd3999, %rd3998, %rd3741;
	add.s64 	%rd4000, %rd3999, %rd3997;
	add.s64 	%rd4001, %rd4000, %rd3865;
	xor.b64  	%rd4002, %rd3939, %rd3902;
	and.b64  	%rd4003, %rd3976, %rd4002;
	xor.b64  	%rd4004, %rd4003, %rd3902;
	add.s64 	%rd4005, %rd4001, %rd4004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd3976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd3976;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 14;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 14;
	mov.b64 	%rd4006, {%r2722, %r2721};
	shf.r.wrap.b32 	%r2723, %r2720, %r2719, 18;
	shf.r.wrap.b32 	%r2724, %r2719, %r2720, 18;
	mov.b64 	%rd4007, {%r2724, %r2723};
	xor.b64  	%rd4008, %rd4006, %rd4007;
	shf.l.wrap.b32 	%r2725, %r2719, %r2720, 23;
	shf.l.wrap.b32 	%r2726, %r2720, %r2719, 23;
	mov.b64 	%rd4009, {%r2726, %r2725};
	xor.b64  	%rd4010, %rd4008, %rd4009;
	add.s64 	%rd4011, %rd4005, %rd4010;
	add.s64 	%rd4012, %rd4011, -9096487096722542874;
	add.s64 	%rd4013, %rd4012, %rd3876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2727,%dummy}, %rd3987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2728}, %rd3987;
	}
	shf.r.wrap.b32 	%r2729, %r2728, %r2727, 28;
	shf.r.wrap.b32 	%r2730, %r2727, %r2728, 28;
	mov.b64 	%rd4014, {%r2730, %r2729};
	shf.l.wrap.b32 	%r2731, %r2727, %r2728, 30;
	shf.l.wrap.b32 	%r2732, %r2728, %r2727, 30;
	mov.b64 	%rd4015, {%r2732, %r2731};
	xor.b64  	%rd4016, %rd4014, %rd4015;
	shf.l.wrap.b32 	%r2733, %r2727, %r2728, 25;
	shf.l.wrap.b32 	%r2734, %r2728, %r2727, 25;
	mov.b64 	%rd4017, {%r2734, %r2733};
	xor.b64  	%rd4018, %rd4016, %rd4017;
	and.b64  	%rd4019, %rd3987, %rd3950;
	or.b64  	%rd4020, %rd3987, %rd3950;
	and.b64  	%rd4021, %rd4020, %rd3913;
	or.b64  	%rd4022, %rd4021, %rd4019;
	add.s64 	%rd4023, %rd4022, %rd4018;
	add.s64 	%rd4024, %rd4023, %rd4012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2735,%dummy}, %rd3963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2736}, %rd3963;
	}
	shf.r.wrap.b32 	%r2737, %r2736, %r2735, 19;
	shf.r.wrap.b32 	%r2738, %r2735, %r2736, 19;
	mov.b64 	%rd4025, {%r2738, %r2737};
	shf.l.wrap.b32 	%r2739, %r2735, %r2736, 3;
	shf.l.wrap.b32 	%r2740, %r2736, %r2735, 3;
	mov.b64 	%rd4026, {%r2740, %r2739};
	xor.b64  	%rd4027, %rd4025, %rd4026;
	shr.u64 	%rd4028, %rd3963, 6;
	xor.b64  	%rd4029, %rd4027, %rd4028;
	shf.r.wrap.b32 	%r2741, %r2418, %r2417, 1;
	shf.r.wrap.b32 	%r2742, %r2417, %r2418, 1;
	mov.b64 	%rd4030, {%r2742, %r2741};
	shf.r.wrap.b32 	%r2743, %r2418, %r2417, 8;
	shf.r.wrap.b32 	%r2744, %r2417, %r2418, 8;
	mov.b64 	%rd4031, {%r2744, %r2743};
	xor.b64  	%rd4032, %rd4030, %rd4031;
	shr.u64 	%rd4033, %rd3512, 7;
	xor.b64  	%rd4034, %rd4032, %rd4033;
	add.s64 	%rd4035, %rd4029, %rd3480;
	add.s64 	%rd4036, %rd4035, %rd3778;
	add.s64 	%rd4037, %rd4036, %rd4034;
	add.s64 	%rd4038, %rd4037, %rd3902;
	xor.b64  	%rd4039, %rd3976, %rd3939;
	and.b64  	%rd4040, %rd4013, %rd4039;
	xor.b64  	%rd4041, %rd4040, %rd3939;
	add.s64 	%rd4042, %rd4038, %rd4041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2745,%dummy}, %rd4013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2746}, %rd4013;
	}
	shf.r.wrap.b32 	%r2747, %r2746, %r2745, 14;
	shf.r.wrap.b32 	%r2748, %r2745, %r2746, 14;
	mov.b64 	%rd4043, {%r2748, %r2747};
	shf.r.wrap.b32 	%r2749, %r2746, %r2745, 18;
	shf.r.wrap.b32 	%r2750, %r2745, %r2746, 18;
	mov.b64 	%rd4044, {%r2750, %r2749};
	xor.b64  	%rd4045, %rd4043, %rd4044;
	shf.l.wrap.b32 	%r2751, %r2745, %r2746, 23;
	shf.l.wrap.b32 	%r2752, %r2746, %r2745, 23;
	mov.b64 	%rd4046, {%r2752, %r2751};
	xor.b64  	%rd4047, %rd4045, %rd4046;
	add.s64 	%rd4048, %rd4042, %rd4047;
	add.s64 	%rd4049, %rd4048, -7894198246740708037;
	add.s64 	%rd4050, %rd4049, %rd3913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd4024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2754}, %rd4024;
	}
	shf.r.wrap.b32 	%r2755, %r2754, %r2753, 28;
	shf.r.wrap.b32 	%r2756, %r2753, %r2754, 28;
	mov.b64 	%rd4051, {%r2756, %r2755};
	shf.l.wrap.b32 	%r2757, %r2753, %r2754, 30;
	shf.l.wrap.b32 	%r2758, %r2754, %r2753, 30;
	mov.b64 	%rd4052, {%r2758, %r2757};
	xor.b64  	%rd4053, %rd4051, %rd4052;
	shf.l.wrap.b32 	%r2759, %r2753, %r2754, 25;
	shf.l.wrap.b32 	%r2760, %r2754, %r2753, 25;
	mov.b64 	%rd4054, {%r2760, %r2759};
	xor.b64  	%rd4055, %rd4053, %rd4054;
	and.b64  	%rd4056, %rd4024, %rd3987;
	or.b64  	%rd4057, %rd4024, %rd3987;
	and.b64  	%rd4058, %rd4057, %rd3950;
	or.b64  	%rd4059, %rd4058, %rd4056;
	add.s64 	%rd4060, %rd4059, %rd4055;
	add.s64 	%rd4061, %rd4060, %rd4049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2761,%dummy}, %rd4000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2762}, %rd4000;
	}
	shf.r.wrap.b32 	%r2763, %r2762, %r2761, 19;
	shf.r.wrap.b32 	%r2764, %r2761, %r2762, 19;
	mov.b64 	%rd4062, {%r2764, %r2763};
	shf.l.wrap.b32 	%r2765, %r2761, %r2762, 3;
	shf.l.wrap.b32 	%r2766, %r2762, %r2761, 3;
	mov.b64 	%rd4063, {%r2766, %r2765};
	xor.b64  	%rd4064, %rd4062, %rd4063;
	shr.u64 	%rd4065, %rd4000, 6;
	xor.b64  	%rd4066, %rd4064, %rd4065;
	shf.r.wrap.b32 	%r2767, %r2440, %r2439, 1;
	shf.r.wrap.b32 	%r2768, %r2439, %r2440, 1;
	mov.b64 	%rd4067, {%r2768, %r2767};
	shf.r.wrap.b32 	%r2769, %r2440, %r2439, 8;
	shf.r.wrap.b32 	%r2770, %r2439, %r2440, 8;
	mov.b64 	%rd4068, {%r2770, %r2769};
	xor.b64  	%rd4069, %rd4067, %rd4068;
	shr.u64 	%rd4070, %rd3544, 7;
	xor.b64  	%rd4071, %rd4069, %rd4070;
	add.s64 	%rd4072, %rd4066, %rd3512;
	add.s64 	%rd4073, %rd4072, %rd3815;
	add.s64 	%rd4074, %rd4073, %rd4071;
	add.s64 	%rd4075, %rd4074, %rd3939;
	xor.b64  	%rd4076, %rd4013, %rd3976;
	and.b64  	%rd4077, %rd4050, %rd4076;
	xor.b64  	%rd4078, %rd4077, %rd3976;
	add.s64 	%rd4079, %rd4075, %rd4078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2771,%dummy}, %rd4050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2772}, %rd4050;
	}
	shf.r.wrap.b32 	%r2773, %r2772, %r2771, 14;
	shf.r.wrap.b32 	%r2774, %r2771, %r2772, 14;
	mov.b64 	%rd4080, {%r2774, %r2773};
	shf.r.wrap.b32 	%r2775, %r2772, %r2771, 18;
	shf.r.wrap.b32 	%r2776, %r2771, %r2772, 18;
	mov.b64 	%rd4081, {%r2776, %r2775};
	xor.b64  	%rd4082, %rd4080, %rd4081;
	shf.l.wrap.b32 	%r2777, %r2771, %r2772, 23;
	shf.l.wrap.b32 	%r2778, %r2772, %r2771, 23;
	mov.b64 	%rd4083, {%r2778, %r2777};
	xor.b64  	%rd4084, %rd4082, %rd4083;
	add.s64 	%rd4085, %rd4079, %rd4084;
	add.s64 	%rd4086, %rd4085, -6719396339535248540;
	add.s64 	%rd4087, %rd4086, %rd3950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2779,%dummy}, %rd4061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2780}, %rd4061;
	}
	shf.r.wrap.b32 	%r2781, %r2780, %r2779, 28;
	shf.r.wrap.b32 	%r2782, %r2779, %r2780, 28;
	mov.b64 	%rd4088, {%r2782, %r2781};
	shf.l.wrap.b32 	%r2783, %r2779, %r2780, 30;
	shf.l.wrap.b32 	%r2784, %r2780, %r2779, 30;
	mov.b64 	%rd4089, {%r2784, %r2783};
	xor.b64  	%rd4090, %rd4088, %rd4089;
	shf.l.wrap.b32 	%r2785, %r2779, %r2780, 25;
	shf.l.wrap.b32 	%r2786, %r2780, %r2779, 25;
	mov.b64 	%rd4091, {%r2786, %r2785};
	xor.b64  	%rd4092, %rd4090, %rd4091;
	and.b64  	%rd4093, %rd4061, %rd4024;
	or.b64  	%rd4094, %rd4061, %rd4024;
	and.b64  	%rd4095, %rd4094, %rd3987;
	or.b64  	%rd4096, %rd4095, %rd4093;
	add.s64 	%rd4097, %rd4096, %rd4092;
	add.s64 	%rd4098, %rd4097, %rd4086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2787,%dummy}, %rd4037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2788}, %rd4037;
	}
	shf.r.wrap.b32 	%r2789, %r2788, %r2787, 19;
	shf.r.wrap.b32 	%r2790, %r2787, %r2788, 19;
	mov.b64 	%rd4099, {%r2790, %r2789};
	shf.l.wrap.b32 	%r2791, %r2787, %r2788, 3;
	shf.l.wrap.b32 	%r2792, %r2788, %r2787, 3;
	mov.b64 	%rd4100, {%r2792, %r2791};
	xor.b64  	%rd4101, %rd4099, %rd4100;
	shr.u64 	%rd4102, %rd4037, 6;
	xor.b64  	%rd4103, %rd4101, %rd4102;
	shf.r.wrap.b32 	%r2793, %r2462, %r2461, 1;
	shf.r.wrap.b32 	%r2794, %r2461, %r2462, 1;
	mov.b64 	%rd4104, {%r2794, %r2793};
	shf.r.wrap.b32 	%r2795, %r2462, %r2461, 8;
	shf.r.wrap.b32 	%r2796, %r2461, %r2462, 8;
	mov.b64 	%rd4105, {%r2796, %r2795};
	xor.b64  	%rd4106, %rd4104, %rd4105;
	shr.u64 	%rd4107, %rd3576, 7;
	xor.b64  	%rd4108, %rd4106, %rd4107;
	add.s64 	%rd4109, %rd4103, %rd3544;
	add.s64 	%rd4110, %rd4109, %rd3852;
	add.s64 	%rd4111, %rd4110, %rd4108;
	add.s64 	%rd4112, %rd4111, %rd3976;
	xor.b64  	%rd4113, %rd4050, %rd4013;
	and.b64  	%rd4114, %rd4087, %rd4113;
	xor.b64  	%rd4115, %rd4114, %rd4013;
	add.s64 	%rd4116, %rd4112, %rd4115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2797,%dummy}, %rd4087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2798}, %rd4087;
	}
	shf.r.wrap.b32 	%r2799, %r2798, %r2797, 14;
	shf.r.wrap.b32 	%r2800, %r2797, %r2798, 14;
	mov.b64 	%rd4117, {%r2800, %r2799};
	shf.r.wrap.b32 	%r2801, %r2798, %r2797, 18;
	shf.r.wrap.b32 	%r2802, %r2797, %r2798, 18;
	mov.b64 	%rd4118, {%r2802, %r2801};
	xor.b64  	%rd4119, %rd4117, %rd4118;
	shf.l.wrap.b32 	%r2803, %r2797, %r2798, 23;
	shf.l.wrap.b32 	%r2804, %r2798, %r2797, 23;
	mov.b64 	%rd4120, {%r2804, %r2803};
	xor.b64  	%rd4121, %rd4119, %rd4120;
	add.s64 	%rd4122, %rd4116, %rd4121;
	add.s64 	%rd4123, %rd4122, -6333637450476146687;
	add.s64 	%rd4124, %rd4123, %rd3987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2805,%dummy}, %rd4098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2806}, %rd4098;
	}
	shf.r.wrap.b32 	%r2807, %r2806, %r2805, 28;
	shf.r.wrap.b32 	%r2808, %r2805, %r2806, 28;
	mov.b64 	%rd4125, {%r2808, %r2807};
	shf.l.wrap.b32 	%r2809, %r2805, %r2806, 30;
	shf.l.wrap.b32 	%r2810, %r2806, %r2805, 30;
	mov.b64 	%rd4126, {%r2810, %r2809};
	xor.b64  	%rd4127, %rd4125, %rd4126;
	shf.l.wrap.b32 	%r2811, %r2805, %r2806, 25;
	shf.l.wrap.b32 	%r2812, %r2806, %r2805, 25;
	mov.b64 	%rd4128, {%r2812, %r2811};
	xor.b64  	%rd4129, %rd4127, %rd4128;
	and.b64  	%rd4130, %rd4098, %rd4061;
	or.b64  	%rd4131, %rd4098, %rd4061;
	and.b64  	%rd4132, %rd4131, %rd4024;
	or.b64  	%rd4133, %rd4132, %rd4130;
	add.s64 	%rd4134, %rd4133, %rd4129;
	add.s64 	%rd4135, %rd4134, %rd4123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2813,%dummy}, %rd4074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2814}, %rd4074;
	}
	shf.r.wrap.b32 	%r2815, %r2814, %r2813, 19;
	shf.r.wrap.b32 	%r2816, %r2813, %r2814, 19;
	mov.b64 	%rd4136, {%r2816, %r2815};
	shf.l.wrap.b32 	%r2817, %r2813, %r2814, 3;
	shf.l.wrap.b32 	%r2818, %r2814, %r2813, 3;
	mov.b64 	%rd4137, {%r2818, %r2817};
	xor.b64  	%rd4138, %rd4136, %rd4137;
	shr.u64 	%rd4139, %rd4074, 6;
	xor.b64  	%rd4140, %rd4138, %rd4139;
	shf.r.wrap.b32 	%r2819, %r2484, %r2483, 1;
	shf.r.wrap.b32 	%r2820, %r2483, %r2484, 1;
	mov.b64 	%rd4141, {%r2820, %r2819};
	shf.r.wrap.b32 	%r2821, %r2484, %r2483, 8;
	shf.r.wrap.b32 	%r2822, %r2483, %r2484, 8;
	mov.b64 	%rd4142, {%r2822, %r2821};
	xor.b64  	%rd4143, %rd4141, %rd4142;
	shr.u64 	%rd4144, %rd3608, 7;
	xor.b64  	%rd4145, %rd4143, %rd4144;
	add.s64 	%rd4146, %rd4140, %rd3576;
	add.s64 	%rd4147, %rd4146, %rd3889;
	add.s64 	%rd4148, %rd4147, %rd4145;
	add.s64 	%rd4149, %rd4148, %rd4013;
	xor.b64  	%rd4150, %rd4087, %rd4050;
	and.b64  	%rd4151, %rd4124, %rd4150;
	xor.b64  	%rd4152, %rd4151, %rd4050;
	add.s64 	%rd4153, %rd4149, %rd4152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2823,%dummy}, %rd4124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2824}, %rd4124;
	}
	shf.r.wrap.b32 	%r2825, %r2824, %r2823, 14;
	shf.r.wrap.b32 	%r2826, %r2823, %r2824, 14;
	mov.b64 	%rd4154, {%r2826, %r2825};
	shf.r.wrap.b32 	%r2827, %r2824, %r2823, 18;
	shf.r.wrap.b32 	%r2828, %r2823, %r2824, 18;
	mov.b64 	%rd4155, {%r2828, %r2827};
	xor.b64  	%rd4156, %rd4154, %rd4155;
	shf.l.wrap.b32 	%r2829, %r2823, %r2824, 23;
	shf.l.wrap.b32 	%r2830, %r2824, %r2823, 23;
	mov.b64 	%rd4157, {%r2830, %r2829};
	xor.b64  	%rd4158, %rd4156, %rd4157;
	add.s64 	%rd4159, %rd4153, %rd4158;
	add.s64 	%rd4160, %rd4159, -4446306890439682159;
	add.s64 	%rd4161, %rd4160, %rd4024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2831,%dummy}, %rd4135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2832}, %rd4135;
	}
	shf.r.wrap.b32 	%r2833, %r2832, %r2831, 28;
	shf.r.wrap.b32 	%r2834, %r2831, %r2832, 28;
	mov.b64 	%rd4162, {%r2834, %r2833};
	shf.l.wrap.b32 	%r2835, %r2831, %r2832, 30;
	shf.l.wrap.b32 	%r2836, %r2832, %r2831, 30;
	mov.b64 	%rd4163, {%r2836, %r2835};
	xor.b64  	%rd4164, %rd4162, %rd4163;
	shf.l.wrap.b32 	%r2837, %r2831, %r2832, 25;
	shf.l.wrap.b32 	%r2838, %r2832, %r2831, 25;
	mov.b64 	%rd4165, {%r2838, %r2837};
	xor.b64  	%rd4166, %rd4164, %rd4165;
	and.b64  	%rd4167, %rd4135, %rd4098;
	or.b64  	%rd4168, %rd4135, %rd4098;
	and.b64  	%rd4169, %rd4168, %rd4061;
	or.b64  	%rd4170, %rd4169, %rd4167;
	add.s64 	%rd4171, %rd4170, %rd4166;
	add.s64 	%rd4172, %rd4171, %rd4160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2839,%dummy}, %rd4111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2840}, %rd4111;
	}
	shf.r.wrap.b32 	%r2841, %r2840, %r2839, 19;
	shf.r.wrap.b32 	%r2842, %r2839, %r2840, 19;
	mov.b64 	%rd4173, {%r2842, %r2841};
	shf.l.wrap.b32 	%r2843, %r2839, %r2840, 3;
	shf.l.wrap.b32 	%r2844, %r2840, %r2839, 3;
	mov.b64 	%rd4174, {%r2844, %r2843};
	xor.b64  	%rd4175, %rd4173, %rd4174;
	shr.u64 	%rd4176, %rd4111, 6;
	xor.b64  	%rd4177, %rd4175, %rd4176;
	shf.r.wrap.b32 	%r2845, %r2506, %r2505, 1;
	shf.r.wrap.b32 	%r2846, %r2505, %r2506, 1;
	mov.b64 	%rd4178, {%r2846, %r2845};
	shf.r.wrap.b32 	%r2847, %r2506, %r2505, 8;
	shf.r.wrap.b32 	%r2848, %r2505, %r2506, 8;
	mov.b64 	%rd4179, {%r2848, %r2847};
	xor.b64  	%rd4180, %rd4178, %rd4179;
	shr.u64 	%rd4181, %rd3640, 7;
	xor.b64  	%rd4182, %rd4180, %rd4181;
	add.s64 	%rd4183, %rd4177, %rd3608;
	add.s64 	%rd4184, %rd4183, %rd3926;
	add.s64 	%rd4185, %rd4184, %rd4182;
	add.s64 	%rd4186, %rd4185, %rd4050;
	xor.b64  	%rd4187, %rd4124, %rd4087;
	and.b64  	%rd4188, %rd4161, %rd4187;
	xor.b64  	%rd4189, %rd4188, %rd4087;
	add.s64 	%rd4190, %rd4186, %rd4189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2849,%dummy}, %rd4161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2850}, %rd4161;
	}
	shf.r.wrap.b32 	%r2851, %r2850, %r2849, 14;
	shf.r.wrap.b32 	%r2852, %r2849, %r2850, 14;
	mov.b64 	%rd4191, {%r2852, %r2851};
	shf.r.wrap.b32 	%r2853, %r2850, %r2849, 18;
	shf.r.wrap.b32 	%r2854, %r2849, %r2850, 18;
	mov.b64 	%rd4192, {%r2854, %r2853};
	xor.b64  	%rd4193, %rd4191, %rd4192;
	shf.l.wrap.b32 	%r2855, %r2849, %r2850, 23;
	shf.l.wrap.b32 	%r2856, %r2850, %r2849, 23;
	mov.b64 	%rd4194, {%r2856, %r2855};
	xor.b64  	%rd4195, %rd4193, %rd4194;
	add.s64 	%rd4196, %rd4190, %rd4195;
	add.s64 	%rd4197, %rd4196, -4076793802049405392;
	add.s64 	%rd4198, %rd4197, %rd4061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2857,%dummy}, %rd4172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2858}, %rd4172;
	}
	shf.r.wrap.b32 	%r2859, %r2858, %r2857, 28;
	shf.r.wrap.b32 	%r2860, %r2857, %r2858, 28;
	mov.b64 	%rd4199, {%r2860, %r2859};
	shf.l.wrap.b32 	%r2861, %r2857, %r2858, 30;
	shf.l.wrap.b32 	%r2862, %r2858, %r2857, 30;
	mov.b64 	%rd4200, {%r2862, %r2861};
	xor.b64  	%rd4201, %rd4199, %rd4200;
	shf.l.wrap.b32 	%r2863, %r2857, %r2858, 25;
	shf.l.wrap.b32 	%r2864, %r2858, %r2857, 25;
	mov.b64 	%rd4202, {%r2864, %r2863};
	xor.b64  	%rd4203, %rd4201, %rd4202;
	and.b64  	%rd4204, %rd4172, %rd4135;
	or.b64  	%rd4205, %rd4172, %rd4135;
	and.b64  	%rd4206, %rd4205, %rd4098;
	or.b64  	%rd4207, %rd4206, %rd4204;
	add.s64 	%rd4208, %rd4207, %rd4203;
	add.s64 	%rd4209, %rd4208, %rd4197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2865,%dummy}, %rd4148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2866}, %rd4148;
	}
	shf.r.wrap.b32 	%r2867, %r2866, %r2865, 19;
	shf.r.wrap.b32 	%r2868, %r2865, %r2866, 19;
	mov.b64 	%rd4210, {%r2868, %r2867};
	shf.l.wrap.b32 	%r2869, %r2865, %r2866, 3;
	shf.l.wrap.b32 	%r2870, %r2866, %r2865, 3;
	mov.b64 	%rd4211, {%r2870, %r2869};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	shr.u64 	%rd4213, %rd4148, 6;
	xor.b64  	%rd4214, %rd4212, %rd4213;
	shf.r.wrap.b32 	%r2871, %r2528, %r2527, 1;
	shf.r.wrap.b32 	%r2872, %r2527, %r2528, 1;
	mov.b64 	%rd4215, {%r2872, %r2871};
	shf.r.wrap.b32 	%r2873, %r2528, %r2527, 8;
	shf.r.wrap.b32 	%r2874, %r2527, %r2528, 8;
	mov.b64 	%rd4216, {%r2874, %r2873};
	xor.b64  	%rd4217, %rd4215, %rd4216;
	shr.u64 	%rd4218, %rd3672, 7;
	xor.b64  	%rd4219, %rd4217, %rd4218;
	add.s64 	%rd4220, %rd4214, %rd3640;
	add.s64 	%rd4221, %rd4220, %rd3963;
	add.s64 	%rd4222, %rd4221, %rd4219;
	add.s64 	%rd4223, %rd4222, %rd4087;
	xor.b64  	%rd4224, %rd4161, %rd4124;
	and.b64  	%rd4225, %rd4198, %rd4224;
	xor.b64  	%rd4226, %rd4225, %rd4124;
	add.s64 	%rd4227, %rd4223, %rd4226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2875,%dummy}, %rd4198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2876}, %rd4198;
	}
	shf.r.wrap.b32 	%r2877, %r2876, %r2875, 14;
	shf.r.wrap.b32 	%r2878, %r2875, %r2876, 14;
	mov.b64 	%rd4228, {%r2878, %r2877};
	shf.r.wrap.b32 	%r2879, %r2876, %r2875, 18;
	shf.r.wrap.b32 	%r2880, %r2875, %r2876, 18;
	mov.b64 	%rd4229, {%r2880, %r2879};
	xor.b64  	%rd4230, %rd4228, %rd4229;
	shf.l.wrap.b32 	%r2881, %r2875, %r2876, 23;
	shf.l.wrap.b32 	%r2882, %r2876, %r2875, 23;
	mov.b64 	%rd4231, {%r2882, %r2881};
	xor.b64  	%rd4232, %rd4230, %rd4231;
	add.s64 	%rd4233, %rd4227, %rd4232;
	add.s64 	%rd4234, %rd4233, -3345356375505022440;
	add.s64 	%rd4235, %rd4234, %rd4098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2883,%dummy}, %rd4209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2884}, %rd4209;
	}
	shf.r.wrap.b32 	%r2885, %r2884, %r2883, 28;
	shf.r.wrap.b32 	%r2886, %r2883, %r2884, 28;
	mov.b64 	%rd4236, {%r2886, %r2885};
	shf.l.wrap.b32 	%r2887, %r2883, %r2884, 30;
	shf.l.wrap.b32 	%r2888, %r2884, %r2883, 30;
	mov.b64 	%rd4237, {%r2888, %r2887};
	xor.b64  	%rd4238, %rd4236, %rd4237;
	shf.l.wrap.b32 	%r2889, %r2883, %r2884, 25;
	shf.l.wrap.b32 	%r2890, %r2884, %r2883, 25;
	mov.b64 	%rd4239, {%r2890, %r2889};
	xor.b64  	%rd4240, %rd4238, %rd4239;
	and.b64  	%rd4241, %rd4209, %rd4172;
	or.b64  	%rd4242, %rd4209, %rd4172;
	and.b64  	%rd4243, %rd4242, %rd4135;
	or.b64  	%rd4244, %rd4243, %rd4241;
	add.s64 	%rd4245, %rd4244, %rd4240;
	add.s64 	%rd4246, %rd4245, %rd4234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2891,%dummy}, %rd4185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2892}, %rd4185;
	}
	shf.r.wrap.b32 	%r2893, %r2892, %r2891, 19;
	shf.r.wrap.b32 	%r2894, %r2891, %r2892, 19;
	mov.b64 	%rd4247, {%r2894, %r2893};
	shf.l.wrap.b32 	%r2895, %r2891, %r2892, 3;
	shf.l.wrap.b32 	%r2896, %r2892, %r2891, 3;
	mov.b64 	%rd4248, {%r2896, %r2895};
	xor.b64  	%rd4249, %rd4247, %rd4248;
	shr.u64 	%rd4250, %rd4185, 6;
	xor.b64  	%rd4251, %rd4249, %rd4250;
	shf.r.wrap.b32 	%r2897, %r2554, %r2553, 1;
	shf.r.wrap.b32 	%r2898, %r2553, %r2554, 1;
	mov.b64 	%rd4252, {%r2898, %r2897};
	shf.r.wrap.b32 	%r2899, %r2554, %r2553, 8;
	shf.r.wrap.b32 	%r2900, %r2553, %r2554, 8;
	mov.b64 	%rd4253, {%r2900, %r2899};
	xor.b64  	%rd4254, %rd4252, %rd4253;
	shr.u64 	%rd4255, %rd3704, 7;
	xor.b64  	%rd4256, %rd4254, %rd4255;
	add.s64 	%rd4257, %rd4251, %rd3672;
	add.s64 	%rd4258, %rd4257, %rd4000;
	add.s64 	%rd4259, %rd4258, %rd4256;
	add.s64 	%rd4260, %rd4259, %rd4124;
	xor.b64  	%rd4261, %rd4198, %rd4161;
	and.b64  	%rd4262, %rd4235, %rd4261;
	xor.b64  	%rd4263, %rd4262, %rd4161;
	add.s64 	%rd4264, %rd4260, %rd4263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2901,%dummy}, %rd4235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2902}, %rd4235;
	}
	shf.r.wrap.b32 	%r2903, %r2902, %r2901, 14;
	shf.r.wrap.b32 	%r2904, %r2901, %r2902, 14;
	mov.b64 	%rd4265, {%r2904, %r2903};
	shf.r.wrap.b32 	%r2905, %r2902, %r2901, 18;
	shf.r.wrap.b32 	%r2906, %r2901, %r2902, 18;
	mov.b64 	%rd4266, {%r2906, %r2905};
	xor.b64  	%rd4267, %rd4265, %rd4266;
	shf.l.wrap.b32 	%r2907, %r2901, %r2902, 23;
	shf.l.wrap.b32 	%r2908, %r2902, %r2901, 23;
	mov.b64 	%rd4268, {%r2908, %r2907};
	xor.b64  	%rd4269, %rd4267, %rd4268;
	add.s64 	%rd4270, %rd4264, %rd4269;
	add.s64 	%rd4271, %rd4270, -2983346525034927856;
	add.s64 	%rd4272, %rd4271, %rd4135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2909,%dummy}, %rd4246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2910}, %rd4246;
	}
	shf.r.wrap.b32 	%r2911, %r2910, %r2909, 28;
	shf.r.wrap.b32 	%r2912, %r2909, %r2910, 28;
	mov.b64 	%rd4273, {%r2912, %r2911};
	shf.l.wrap.b32 	%r2913, %r2909, %r2910, 30;
	shf.l.wrap.b32 	%r2914, %r2910, %r2909, 30;
	mov.b64 	%rd4274, {%r2914, %r2913};
	xor.b64  	%rd4275, %rd4273, %rd4274;
	shf.l.wrap.b32 	%r2915, %r2909, %r2910, 25;
	shf.l.wrap.b32 	%r2916, %r2910, %r2909, 25;
	mov.b64 	%rd4276, {%r2916, %r2915};
	xor.b64  	%rd4277, %rd4275, %rd4276;
	and.b64  	%rd4278, %rd4246, %rd4209;
	or.b64  	%rd4279, %rd4246, %rd4209;
	and.b64  	%rd4280, %rd4279, %rd4172;
	or.b64  	%rd4281, %rd4280, %rd4278;
	add.s64 	%rd4282, %rd4281, %rd4277;
	add.s64 	%rd4283, %rd4282, %rd4271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2917,%dummy}, %rd4222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2918}, %rd4222;
	}
	shf.r.wrap.b32 	%r2919, %r2918, %r2917, 19;
	shf.r.wrap.b32 	%r2920, %r2917, %r2918, 19;
	mov.b64 	%rd4284, {%r2920, %r2919};
	shf.l.wrap.b32 	%r2921, %r2917, %r2918, 3;
	shf.l.wrap.b32 	%r2922, %r2918, %r2917, 3;
	mov.b64 	%rd4285, {%r2922, %r2921};
	xor.b64  	%rd4286, %rd4284, %rd4285;
	shr.u64 	%rd4287, %rd4222, 6;
	xor.b64  	%rd4288, %rd4286, %rd4287;
	shf.r.wrap.b32 	%r2923, %r2580, %r2579, 1;
	shf.r.wrap.b32 	%r2924, %r2579, %r2580, 1;
	mov.b64 	%rd4289, {%r2924, %r2923};
	shf.r.wrap.b32 	%r2925, %r2580, %r2579, 8;
	shf.r.wrap.b32 	%r2926, %r2579, %r2580, 8;
	mov.b64 	%rd4290, {%r2926, %r2925};
	xor.b64  	%rd4291, %rd4289, %rd4290;
	shr.u64 	%rd4292, %rd3741, 7;
	xor.b64  	%rd4293, %rd4291, %rd4292;
	add.s64 	%rd4294, %rd4288, %rd3704;
	add.s64 	%rd4295, %rd4294, %rd4037;
	add.s64 	%rd4296, %rd4295, %rd4293;
	add.s64 	%rd4297, %rd4296, %rd4161;
	xor.b64  	%rd4298, %rd4235, %rd4198;
	and.b64  	%rd4299, %rd4272, %rd4298;
	xor.b64  	%rd4300, %rd4299, %rd4198;
	add.s64 	%rd4301, %rd4297, %rd4300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2927,%dummy}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2928}, %rd4272;
	}
	shf.r.wrap.b32 	%r2929, %r2928, %r2927, 14;
	shf.r.wrap.b32 	%r2930, %r2927, %r2928, 14;
	mov.b64 	%rd4302, {%r2930, %r2929};
	shf.r.wrap.b32 	%r2931, %r2928, %r2927, 18;
	shf.r.wrap.b32 	%r2932, %r2927, %r2928, 18;
	mov.b64 	%rd4303, {%r2932, %r2931};
	xor.b64  	%rd4304, %rd4302, %rd4303;
	shf.l.wrap.b32 	%r2933, %r2927, %r2928, 23;
	shf.l.wrap.b32 	%r2934, %r2928, %r2927, 23;
	mov.b64 	%rd4305, {%r2934, %r2933};
	xor.b64  	%rd4306, %rd4304, %rd4305;
	add.s64 	%rd4307, %rd4301, %rd4306;
	add.s64 	%rd4308, %rd4307, -860691631967231958;
	add.s64 	%rd4309, %rd4308, %rd4172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2935,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2936}, %rd4283;
	}
	shf.r.wrap.b32 	%r2937, %r2936, %r2935, 28;
	shf.r.wrap.b32 	%r2938, %r2935, %r2936, 28;
	mov.b64 	%rd4310, {%r2938, %r2937};
	shf.l.wrap.b32 	%r2939, %r2935, %r2936, 30;
	shf.l.wrap.b32 	%r2940, %r2936, %r2935, 30;
	mov.b64 	%rd4311, {%r2940, %r2939};
	xor.b64  	%rd4312, %rd4310, %rd4311;
	shf.l.wrap.b32 	%r2941, %r2935, %r2936, 25;
	shf.l.wrap.b32 	%r2942, %r2936, %r2935, 25;
	mov.b64 	%rd4313, {%r2942, %r2941};
	xor.b64  	%rd4314, %rd4312, %rd4313;
	and.b64  	%rd4315, %rd4283, %rd4246;
	or.b64  	%rd4316, %rd4283, %rd4246;
	and.b64  	%rd4317, %rd4316, %rd4209;
	or.b64  	%rd4318, %rd4317, %rd4315;
	add.s64 	%rd4319, %rd4318, %rd4314;
	add.s64 	%rd4320, %rd4319, %rd4308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2943,%dummy}, %rd4259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2944}, %rd4259;
	}
	shf.r.wrap.b32 	%r2945, %r2944, %r2943, 19;
	shf.r.wrap.b32 	%r2946, %r2943, %r2944, 19;
	mov.b64 	%rd4321, {%r2946, %r2945};
	shf.l.wrap.b32 	%r2947, %r2943, %r2944, 3;
	shf.l.wrap.b32 	%r2948, %r2944, %r2943, 3;
	mov.b64 	%rd4322, {%r2948, %r2947};
	xor.b64  	%rd4323, %rd4321, %rd4322;
	shr.u64 	%rd4324, %rd4259, 6;
	xor.b64  	%rd4325, %rd4323, %rd4324;
	shf.r.wrap.b32 	%r2949, %r2606, %r2605, 1;
	shf.r.wrap.b32 	%r2950, %r2605, %r2606, 1;
	mov.b64 	%rd4326, {%r2950, %r2949};
	shf.r.wrap.b32 	%r2951, %r2606, %r2605, 8;
	shf.r.wrap.b32 	%r2952, %r2605, %r2606, 8;
	mov.b64 	%rd4327, {%r2952, %r2951};
	xor.b64  	%rd4328, %rd4326, %rd4327;
	shr.u64 	%rd4329, %rd3778, 7;
	xor.b64  	%rd4330, %rd4328, %rd4329;
	add.s64 	%rd4331, %rd4325, %rd3741;
	add.s64 	%rd4332, %rd4331, %rd4074;
	add.s64 	%rd4333, %rd4332, %rd4330;
	add.s64 	%rd4334, %rd4333, %rd4198;
	xor.b64  	%rd4335, %rd4272, %rd4235;
	and.b64  	%rd4336, %rd4309, %rd4335;
	xor.b64  	%rd4337, %rd4336, %rd4235;
	add.s64 	%rd4338, %rd4334, %rd4337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2953,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2954}, %rd4309;
	}
	shf.r.wrap.b32 	%r2955, %r2954, %r2953, 14;
	shf.r.wrap.b32 	%r2956, %r2953, %r2954, 14;
	mov.b64 	%rd4339, {%r2956, %r2955};
	shf.r.wrap.b32 	%r2957, %r2954, %r2953, 18;
	shf.r.wrap.b32 	%r2958, %r2953, %r2954, 18;
	mov.b64 	%rd4340, {%r2958, %r2957};
	xor.b64  	%rd4341, %rd4339, %rd4340;
	shf.l.wrap.b32 	%r2959, %r2953, %r2954, 23;
	shf.l.wrap.b32 	%r2960, %r2954, %r2953, 23;
	mov.b64 	%rd4342, {%r2960, %r2959};
	xor.b64  	%rd4343, %rd4341, %rd4342;
	add.s64 	%rd4344, %rd4338, %rd4343;
	add.s64 	%rd4345, %rd4344, 1182934255886127544;
	add.s64 	%rd4346, %rd4345, %rd4209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2961,%dummy}, %rd4320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2962}, %rd4320;
	}
	shf.r.wrap.b32 	%r2963, %r2962, %r2961, 28;
	shf.r.wrap.b32 	%r2964, %r2961, %r2962, 28;
	mov.b64 	%rd4347, {%r2964, %r2963};
	shf.l.wrap.b32 	%r2965, %r2961, %r2962, 30;
	shf.l.wrap.b32 	%r2966, %r2962, %r2961, 30;
	mov.b64 	%rd4348, {%r2966, %r2965};
	xor.b64  	%rd4349, %rd4347, %rd4348;
	shf.l.wrap.b32 	%r2967, %r2961, %r2962, 25;
	shf.l.wrap.b32 	%r2968, %r2962, %r2961, 25;
	mov.b64 	%rd4350, {%r2968, %r2967};
	xor.b64  	%rd4351, %rd4349, %rd4350;
	and.b64  	%rd4352, %rd4320, %rd4283;
	or.b64  	%rd4353, %rd4320, %rd4283;
	and.b64  	%rd4354, %rd4353, %rd4246;
	or.b64  	%rd4355, %rd4354, %rd4352;
	add.s64 	%rd4356, %rd4355, %rd4351;
	add.s64 	%rd4357, %rd4356, %rd4345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2969,%dummy}, %rd4296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2970}, %rd4296;
	}
	shf.r.wrap.b32 	%r2971, %r2970, %r2969, 19;
	shf.r.wrap.b32 	%r2972, %r2969, %r2970, 19;
	mov.b64 	%rd4358, {%r2972, %r2971};
	shf.l.wrap.b32 	%r2973, %r2969, %r2970, 3;
	shf.l.wrap.b32 	%r2974, %r2970, %r2969, 3;
	mov.b64 	%rd4359, {%r2974, %r2973};
	xor.b64  	%rd4360, %rd4358, %rd4359;
	shr.u64 	%rd4361, %rd4296, 6;
	xor.b64  	%rd4362, %rd4360, %rd4361;
	shf.r.wrap.b32 	%r2975, %r2632, %r2631, 1;
	shf.r.wrap.b32 	%r2976, %r2631, %r2632, 1;
	mov.b64 	%rd4363, {%r2976, %r2975};
	shf.r.wrap.b32 	%r2977, %r2632, %r2631, 8;
	shf.r.wrap.b32 	%r2978, %r2631, %r2632, 8;
	mov.b64 	%rd4364, {%r2978, %r2977};
	xor.b64  	%rd4365, %rd4363, %rd4364;
	shr.u64 	%rd4366, %rd3815, 7;
	xor.b64  	%rd4367, %rd4365, %rd4366;
	add.s64 	%rd4368, %rd4362, %rd3778;
	add.s64 	%rd4369, %rd4368, %rd4111;
	add.s64 	%rd4370, %rd4369, %rd4367;
	add.s64 	%rd4371, %rd4370, %rd4235;
	xor.b64  	%rd4372, %rd4309, %rd4272;
	and.b64  	%rd4373, %rd4346, %rd4372;
	xor.b64  	%rd4374, %rd4373, %rd4272;
	add.s64 	%rd4375, %rd4371, %rd4374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2979,%dummy}, %rd4346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2980}, %rd4346;
	}
	shf.r.wrap.b32 	%r2981, %r2980, %r2979, 14;
	shf.r.wrap.b32 	%r2982, %r2979, %r2980, 14;
	mov.b64 	%rd4376, {%r2982, %r2981};
	shf.r.wrap.b32 	%r2983, %r2980, %r2979, 18;
	shf.r.wrap.b32 	%r2984, %r2979, %r2980, 18;
	mov.b64 	%rd4377, {%r2984, %r2983};
	xor.b64  	%rd4378, %rd4376, %rd4377;
	shf.l.wrap.b32 	%r2985, %r2979, %r2980, 23;
	shf.l.wrap.b32 	%r2986, %r2980, %r2979, 23;
	mov.b64 	%rd4379, {%r2986, %r2985};
	xor.b64  	%rd4380, %rd4378, %rd4379;
	add.s64 	%rd4381, %rd4375, %rd4380;
	add.s64 	%rd4382, %rd4381, 1847814050463011016;
	add.s64 	%rd4383, %rd4382, %rd4246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2987,%dummy}, %rd4357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2988}, %rd4357;
	}
	shf.r.wrap.b32 	%r2989, %r2988, %r2987, 28;
	shf.r.wrap.b32 	%r2990, %r2987, %r2988, 28;
	mov.b64 	%rd4384, {%r2990, %r2989};
	shf.l.wrap.b32 	%r2991, %r2987, %r2988, 30;
	shf.l.wrap.b32 	%r2992, %r2988, %r2987, 30;
	mov.b64 	%rd4385, {%r2992, %r2991};
	xor.b64  	%rd4386, %rd4384, %rd4385;
	shf.l.wrap.b32 	%r2993, %r2987, %r2988, 25;
	shf.l.wrap.b32 	%r2994, %r2988, %r2987, 25;
	mov.b64 	%rd4387, {%r2994, %r2993};
	xor.b64  	%rd4388, %rd4386, %rd4387;
	and.b64  	%rd4389, %rd4357, %rd4320;
	or.b64  	%rd4390, %rd4357, %rd4320;
	and.b64  	%rd4391, %rd4390, %rd4283;
	or.b64  	%rd4392, %rd4391, %rd4389;
	add.s64 	%rd4393, %rd4392, %rd4388;
	add.s64 	%rd4394, %rd4393, %rd4382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2995,%dummy}, %rd4333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2996}, %rd4333;
	}
	shf.r.wrap.b32 	%r2997, %r2996, %r2995, 19;
	shf.r.wrap.b32 	%r2998, %r2995, %r2996, 19;
	mov.b64 	%rd4395, {%r2998, %r2997};
	shf.l.wrap.b32 	%r2999, %r2995, %r2996, 3;
	shf.l.wrap.b32 	%r3000, %r2996, %r2995, 3;
	mov.b64 	%rd4396, {%r3000, %r2999};
	xor.b64  	%rd4397, %rd4395, %rd4396;
	shr.u64 	%rd4398, %rd4333, 6;
	xor.b64  	%rd4399, %rd4397, %rd4398;
	shf.r.wrap.b32 	%r3001, %r2658, %r2657, 1;
	shf.r.wrap.b32 	%r3002, %r2657, %r2658, 1;
	mov.b64 	%rd4400, {%r3002, %r3001};
	shf.r.wrap.b32 	%r3003, %r2658, %r2657, 8;
	shf.r.wrap.b32 	%r3004, %r2657, %r2658, 8;
	mov.b64 	%rd4401, {%r3004, %r3003};
	xor.b64  	%rd4402, %rd4400, %rd4401;
	shr.u64 	%rd4403, %rd3852, 7;
	xor.b64  	%rd4404, %rd4402, %rd4403;
	add.s64 	%rd4405, %rd4399, %rd3815;
	add.s64 	%rd4406, %rd4405, %rd4148;
	add.s64 	%rd4407, %rd4406, %rd4404;
	add.s64 	%rd4408, %rd4407, %rd4272;
	xor.b64  	%rd4409, %rd4346, %rd4309;
	and.b64  	%rd4410, %rd4383, %rd4409;
	xor.b64  	%rd4411, %rd4410, %rd4309;
	add.s64 	%rd4412, %rd4408, %rd4411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3005,%dummy}, %rd4383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3006}, %rd4383;
	}
	shf.r.wrap.b32 	%r3007, %r3006, %r3005, 14;
	shf.r.wrap.b32 	%r3008, %r3005, %r3006, 14;
	mov.b64 	%rd4413, {%r3008, %r3007};
	shf.r.wrap.b32 	%r3009, %r3006, %r3005, 18;
	shf.r.wrap.b32 	%r3010, %r3005, %r3006, 18;
	mov.b64 	%rd4414, {%r3010, %r3009};
	xor.b64  	%rd4415, %rd4413, %rd4414;
	shf.l.wrap.b32 	%r3011, %r3005, %r3006, 23;
	shf.l.wrap.b32 	%r3012, %r3006, %r3005, 23;
	mov.b64 	%rd4416, {%r3012, %r3011};
	xor.b64  	%rd4417, %rd4415, %rd4416;
	add.s64 	%rd4418, %rd4412, %rd4417;
	add.s64 	%rd4419, %rd4418, 2177327727835720531;
	add.s64 	%rd4420, %rd4419, %rd4283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3013,%dummy}, %rd4394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3014}, %rd4394;
	}
	shf.r.wrap.b32 	%r3015, %r3014, %r3013, 28;
	shf.r.wrap.b32 	%r3016, %r3013, %r3014, 28;
	mov.b64 	%rd4421, {%r3016, %r3015};
	shf.l.wrap.b32 	%r3017, %r3013, %r3014, 30;
	shf.l.wrap.b32 	%r3018, %r3014, %r3013, 30;
	mov.b64 	%rd4422, {%r3018, %r3017};
	xor.b64  	%rd4423, %rd4421, %rd4422;
	shf.l.wrap.b32 	%r3019, %r3013, %r3014, 25;
	shf.l.wrap.b32 	%r3020, %r3014, %r3013, 25;
	mov.b64 	%rd4424, {%r3020, %r3019};
	xor.b64  	%rd4425, %rd4423, %rd4424;
	and.b64  	%rd4426, %rd4394, %rd4357;
	or.b64  	%rd4427, %rd4394, %rd4357;
	and.b64  	%rd4428, %rd4427, %rd4320;
	or.b64  	%rd4429, %rd4428, %rd4426;
	add.s64 	%rd4430, %rd4429, %rd4425;
	add.s64 	%rd4431, %rd4430, %rd4419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3021,%dummy}, %rd4370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3022}, %rd4370;
	}
	shf.r.wrap.b32 	%r3023, %r3022, %r3021, 19;
	shf.r.wrap.b32 	%r3024, %r3021, %r3022, 19;
	mov.b64 	%rd4432, {%r3024, %r3023};
	shf.l.wrap.b32 	%r3025, %r3021, %r3022, 3;
	shf.l.wrap.b32 	%r3026, %r3022, %r3021, 3;
	mov.b64 	%rd4433, {%r3026, %r3025};
	xor.b64  	%rd4434, %rd4432, %rd4433;
	shr.u64 	%rd4435, %rd4370, 6;
	xor.b64  	%rd4436, %rd4434, %rd4435;
	shf.r.wrap.b32 	%r3027, %r2684, %r2683, 1;
	shf.r.wrap.b32 	%r3028, %r2683, %r2684, 1;
	mov.b64 	%rd4437, {%r3028, %r3027};
	shf.r.wrap.b32 	%r3029, %r2684, %r2683, 8;
	shf.r.wrap.b32 	%r3030, %r2683, %r2684, 8;
	mov.b64 	%rd4438, {%r3030, %r3029};
	xor.b64  	%rd4439, %rd4437, %rd4438;
	shr.u64 	%rd4440, %rd3889, 7;
	xor.b64  	%rd4441, %rd4439, %rd4440;
	add.s64 	%rd4442, %rd4436, %rd3852;
	add.s64 	%rd4443, %rd4442, %rd4185;
	add.s64 	%rd4444, %rd4443, %rd4441;
	add.s64 	%rd4445, %rd4444, %rd4309;
	xor.b64  	%rd4446, %rd4383, %rd4346;
	and.b64  	%rd4447, %rd4420, %rd4446;
	xor.b64  	%rd4448, %rd4447, %rd4346;
	add.s64 	%rd4449, %rd4445, %rd4448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3031,%dummy}, %rd4420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3032}, %rd4420;
	}
	shf.r.wrap.b32 	%r3033, %r3032, %r3031, 14;
	shf.r.wrap.b32 	%r3034, %r3031, %r3032, 14;
	mov.b64 	%rd4450, {%r3034, %r3033};
	shf.r.wrap.b32 	%r3035, %r3032, %r3031, 18;
	shf.r.wrap.b32 	%r3036, %r3031, %r3032, 18;
	mov.b64 	%rd4451, {%r3036, %r3035};
	xor.b64  	%rd4452, %rd4450, %rd4451;
	shf.l.wrap.b32 	%r3037, %r3031, %r3032, 23;
	shf.l.wrap.b32 	%r3038, %r3032, %r3031, 23;
	mov.b64 	%rd4453, {%r3038, %r3037};
	xor.b64  	%rd4454, %rd4452, %rd4453;
	add.s64 	%rd4455, %rd4449, %rd4454;
	add.s64 	%rd4456, %rd4455, 2830643537854262169;
	add.s64 	%rd4457, %rd4456, %rd4320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3039,%dummy}, %rd4431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3040}, %rd4431;
	}
	shf.r.wrap.b32 	%r3041, %r3040, %r3039, 28;
	shf.r.wrap.b32 	%r3042, %r3039, %r3040, 28;
	mov.b64 	%rd4458, {%r3042, %r3041};
	shf.l.wrap.b32 	%r3043, %r3039, %r3040, 30;
	shf.l.wrap.b32 	%r3044, %r3040, %r3039, 30;
	mov.b64 	%rd4459, {%r3044, %r3043};
	xor.b64  	%rd4460, %rd4458, %rd4459;
	shf.l.wrap.b32 	%r3045, %r3039, %r3040, 25;
	shf.l.wrap.b32 	%r3046, %r3040, %r3039, 25;
	mov.b64 	%rd4461, {%r3046, %r3045};
	xor.b64  	%rd4462, %rd4460, %rd4461;
	and.b64  	%rd4463, %rd4431, %rd4394;
	or.b64  	%rd4464, %rd4431, %rd4394;
	and.b64  	%rd4465, %rd4464, %rd4357;
	or.b64  	%rd4466, %rd4465, %rd4463;
	add.s64 	%rd4467, %rd4466, %rd4462;
	add.s64 	%rd4468, %rd4467, %rd4456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3047,%dummy}, %rd4407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3048}, %rd4407;
	}
	shf.r.wrap.b32 	%r3049, %r3048, %r3047, 19;
	shf.r.wrap.b32 	%r3050, %r3047, %r3048, 19;
	mov.b64 	%rd4469, {%r3050, %r3049};
	shf.l.wrap.b32 	%r3051, %r3047, %r3048, 3;
	shf.l.wrap.b32 	%r3052, %r3048, %r3047, 3;
	mov.b64 	%rd4470, {%r3052, %r3051};
	xor.b64  	%rd4471, %rd4469, %rd4470;
	shr.u64 	%rd4472, %rd4407, 6;
	xor.b64  	%rd4473, %rd4471, %rd4472;
	shf.r.wrap.b32 	%r3053, %r2710, %r2709, 1;
	shf.r.wrap.b32 	%r3054, %r2709, %r2710, 1;
	mov.b64 	%rd4474, {%r3054, %r3053};
	shf.r.wrap.b32 	%r3055, %r2710, %r2709, 8;
	shf.r.wrap.b32 	%r3056, %r2709, %r2710, 8;
	mov.b64 	%rd4475, {%r3056, %r3055};
	xor.b64  	%rd4476, %rd4474, %rd4475;
	shr.u64 	%rd4477, %rd3926, 7;
	xor.b64  	%rd4478, %rd4476, %rd4477;
	add.s64 	%rd4479, %rd4473, %rd3889;
	add.s64 	%rd4480, %rd4479, %rd4222;
	add.s64 	%rd4481, %rd4480, %rd4478;
	add.s64 	%rd4482, %rd4481, %rd4346;
	xor.b64  	%rd4483, %rd4420, %rd4383;
	and.b64  	%rd4484, %rd4457, %rd4483;
	xor.b64  	%rd4485, %rd4484, %rd4383;
	add.s64 	%rd4486, %rd4482, %rd4485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3057,%dummy}, %rd4457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3058}, %rd4457;
	}
	shf.r.wrap.b32 	%r3059, %r3058, %r3057, 14;
	shf.r.wrap.b32 	%r3060, %r3057, %r3058, 14;
	mov.b64 	%rd4487, {%r3060, %r3059};
	shf.r.wrap.b32 	%r3061, %r3058, %r3057, 18;
	shf.r.wrap.b32 	%r3062, %r3057, %r3058, 18;
	mov.b64 	%rd4488, {%r3062, %r3061};
	xor.b64  	%rd4489, %rd4487, %rd4488;
	shf.l.wrap.b32 	%r3063, %r3057, %r3058, 23;
	shf.l.wrap.b32 	%r3064, %r3058, %r3057, 23;
	mov.b64 	%rd4490, {%r3064, %r3063};
	xor.b64  	%rd4491, %rd4489, %rd4490;
	add.s64 	%rd4492, %rd4486, %rd4491;
	add.s64 	%rd4493, %rd4492, 3796741975233480872;
	add.s64 	%rd4494, %rd4493, %rd4357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3065,%dummy}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3066}, %rd4468;
	}
	shf.r.wrap.b32 	%r3067, %r3066, %r3065, 28;
	shf.r.wrap.b32 	%r3068, %r3065, %r3066, 28;
	mov.b64 	%rd4495, {%r3068, %r3067};
	shf.l.wrap.b32 	%r3069, %r3065, %r3066, 30;
	shf.l.wrap.b32 	%r3070, %r3066, %r3065, 30;
	mov.b64 	%rd4496, {%r3070, %r3069};
	xor.b64  	%rd4497, %rd4495, %rd4496;
	shf.l.wrap.b32 	%r3071, %r3065, %r3066, 25;
	shf.l.wrap.b32 	%r3072, %r3066, %r3065, 25;
	mov.b64 	%rd4498, {%r3072, %r3071};
	xor.b64  	%rd4499, %rd4497, %rd4498;
	and.b64  	%rd4500, %rd4468, %rd4431;
	or.b64  	%rd4501, %rd4468, %rd4431;
	and.b64  	%rd4502, %rd4501, %rd4394;
	or.b64  	%rd4503, %rd4502, %rd4500;
	add.s64 	%rd4504, %rd4503, %rd4499;
	add.s64 	%rd4505, %rd4504, %rd4493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3073,%dummy}, %rd4444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3074}, %rd4444;
	}
	shf.r.wrap.b32 	%r3075, %r3074, %r3073, 19;
	shf.r.wrap.b32 	%r3076, %r3073, %r3074, 19;
	mov.b64 	%rd4506, {%r3076, %r3075};
	shf.l.wrap.b32 	%r3077, %r3073, %r3074, 3;
	shf.l.wrap.b32 	%r3078, %r3074, %r3073, 3;
	mov.b64 	%rd4507, {%r3078, %r3077};
	xor.b64  	%rd4508, %rd4506, %rd4507;
	shr.u64 	%rd4509, %rd4444, 6;
	xor.b64  	%rd4510, %rd4508, %rd4509;
	shf.r.wrap.b32 	%r3079, %r2736, %r2735, 1;
	shf.r.wrap.b32 	%r3080, %r2735, %r2736, 1;
	mov.b64 	%rd4511, {%r3080, %r3079};
	shf.r.wrap.b32 	%r3081, %r2736, %r2735, 8;
	shf.r.wrap.b32 	%r3082, %r2735, %r2736, 8;
	mov.b64 	%rd4512, {%r3082, %r3081};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	shr.u64 	%rd4514, %rd3963, 7;
	xor.b64  	%rd4515, %rd4513, %rd4514;
	add.s64 	%rd4516, %rd4510, %rd3926;
	add.s64 	%rd4517, %rd4516, %rd4259;
	add.s64 	%rd4518, %rd4517, %rd4515;
	add.s64 	%rd4519, %rd4518, %rd4383;
	xor.b64  	%rd4520, %rd4457, %rd4420;
	and.b64  	%rd4521, %rd4494, %rd4520;
	xor.b64  	%rd4522, %rd4521, %rd4420;
	add.s64 	%rd4523, %rd4519, %rd4522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3083,%dummy}, %rd4494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3084}, %rd4494;
	}
	shf.r.wrap.b32 	%r3085, %r3084, %r3083, 14;
	shf.r.wrap.b32 	%r3086, %r3083, %r3084, 14;
	mov.b64 	%rd4524, {%r3086, %r3085};
	shf.r.wrap.b32 	%r3087, %r3084, %r3083, 18;
	shf.r.wrap.b32 	%r3088, %r3083, %r3084, 18;
	mov.b64 	%rd4525, {%r3088, %r3087};
	xor.b64  	%rd4526, %rd4524, %rd4525;
	shf.l.wrap.b32 	%r3089, %r3083, %r3084, 23;
	shf.l.wrap.b32 	%r3090, %r3084, %r3083, 23;
	mov.b64 	%rd4527, {%r3090, %r3089};
	xor.b64  	%rd4528, %rd4526, %rd4527;
	add.s64 	%rd4529, %rd4523, %rd4528;
	add.s64 	%rd4530, %rd4529, 4115178125766777443;
	add.s64 	%rd4531, %rd4530, %rd4394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3091,%dummy}, %rd4505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3092}, %rd4505;
	}
	shf.r.wrap.b32 	%r3093, %r3092, %r3091, 28;
	shf.r.wrap.b32 	%r3094, %r3091, %r3092, 28;
	mov.b64 	%rd4532, {%r3094, %r3093};
	shf.l.wrap.b32 	%r3095, %r3091, %r3092, 30;
	shf.l.wrap.b32 	%r3096, %r3092, %r3091, 30;
	mov.b64 	%rd4533, {%r3096, %r3095};
	xor.b64  	%rd4534, %rd4532, %rd4533;
	shf.l.wrap.b32 	%r3097, %r3091, %r3092, 25;
	shf.l.wrap.b32 	%r3098, %r3092, %r3091, 25;
	mov.b64 	%rd4535, {%r3098, %r3097};
	xor.b64  	%rd4536, %rd4534, %rd4535;
	and.b64  	%rd4537, %rd4505, %rd4468;
	or.b64  	%rd4538, %rd4505, %rd4468;
	and.b64  	%rd4539, %rd4538, %rd4431;
	or.b64  	%rd4540, %rd4539, %rd4537;
	add.s64 	%rd4541, %rd4540, %rd4536;
	add.s64 	%rd4542, %rd4541, %rd4530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3099,%dummy}, %rd4481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3100}, %rd4481;
	}
	shf.r.wrap.b32 	%r3101, %r3100, %r3099, 19;
	shf.r.wrap.b32 	%r3102, %r3099, %r3100, 19;
	mov.b64 	%rd4543, {%r3102, %r3101};
	shf.l.wrap.b32 	%r3103, %r3099, %r3100, 3;
	shf.l.wrap.b32 	%r3104, %r3100, %r3099, 3;
	mov.b64 	%rd4544, {%r3104, %r3103};
	xor.b64  	%rd4545, %rd4543, %rd4544;
	shr.u64 	%rd4546, %rd4481, 6;
	xor.b64  	%rd4547, %rd4545, %rd4546;
	shf.r.wrap.b32 	%r3105, %r2762, %r2761, 1;
	shf.r.wrap.b32 	%r3106, %r2761, %r2762, 1;
	mov.b64 	%rd4548, {%r3106, %r3105};
	shf.r.wrap.b32 	%r3107, %r2762, %r2761, 8;
	shf.r.wrap.b32 	%r3108, %r2761, %r2762, 8;
	mov.b64 	%rd4549, {%r3108, %r3107};
	xor.b64  	%rd4550, %rd4548, %rd4549;
	shr.u64 	%rd4551, %rd4000, 7;
	xor.b64  	%rd4552, %rd4550, %rd4551;
	add.s64 	%rd4553, %rd4547, %rd3963;
	add.s64 	%rd4554, %rd4553, %rd4296;
	add.s64 	%rd4555, %rd4554, %rd4552;
	add.s64 	%rd4556, %rd4555, %rd4420;
	xor.b64  	%rd4557, %rd4494, %rd4457;
	and.b64  	%rd4558, %rd4531, %rd4557;
	xor.b64  	%rd4559, %rd4558, %rd4457;
	add.s64 	%rd4560, %rd4556, %rd4559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3109,%dummy}, %rd4531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3110}, %rd4531;
	}
	shf.r.wrap.b32 	%r3111, %r3110, %r3109, 14;
	shf.r.wrap.b32 	%r3112, %r3109, %r3110, 14;
	mov.b64 	%rd4561, {%r3112, %r3111};
	shf.r.wrap.b32 	%r3113, %r3110, %r3109, 18;
	shf.r.wrap.b32 	%r3114, %r3109, %r3110, 18;
	mov.b64 	%rd4562, {%r3114, %r3113};
	xor.b64  	%rd4563, %rd4561, %rd4562;
	shf.l.wrap.b32 	%r3115, %r3109, %r3110, 23;
	shf.l.wrap.b32 	%r3116, %r3110, %r3109, 23;
	mov.b64 	%rd4564, {%r3116, %r3115};
	xor.b64  	%rd4565, %rd4563, %rd4564;
	add.s64 	%rd4566, %rd4560, %rd4565;
	add.s64 	%rd4567, %rd4566, 5681478168544905931;
	add.s64 	%rd4568, %rd4567, %rd4431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3117,%dummy}, %rd4542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3118}, %rd4542;
	}
	shf.r.wrap.b32 	%r3119, %r3118, %r3117, 28;
	shf.r.wrap.b32 	%r3120, %r3117, %r3118, 28;
	mov.b64 	%rd4569, {%r3120, %r3119};
	shf.l.wrap.b32 	%r3121, %r3117, %r3118, 30;
	shf.l.wrap.b32 	%r3122, %r3118, %r3117, 30;
	mov.b64 	%rd4570, {%r3122, %r3121};
	xor.b64  	%rd4571, %rd4569, %rd4570;
	shf.l.wrap.b32 	%r3123, %r3117, %r3118, 25;
	shf.l.wrap.b32 	%r3124, %r3118, %r3117, 25;
	mov.b64 	%rd4572, {%r3124, %r3123};
	xor.b64  	%rd4573, %rd4571, %rd4572;
	and.b64  	%rd4574, %rd4542, %rd4505;
	or.b64  	%rd4575, %rd4542, %rd4505;
	and.b64  	%rd4576, %rd4575, %rd4468;
	or.b64  	%rd4577, %rd4576, %rd4574;
	add.s64 	%rd4578, %rd4577, %rd4573;
	add.s64 	%rd4579, %rd4578, %rd4567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3125,%dummy}, %rd4518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3126}, %rd4518;
	}
	shf.r.wrap.b32 	%r3127, %r3126, %r3125, 19;
	shf.r.wrap.b32 	%r3128, %r3125, %r3126, 19;
	mov.b64 	%rd4580, {%r3128, %r3127};
	shf.l.wrap.b32 	%r3129, %r3125, %r3126, 3;
	shf.l.wrap.b32 	%r3130, %r3126, %r3125, 3;
	mov.b64 	%rd4581, {%r3130, %r3129};
	xor.b64  	%rd4582, %rd4580, %rd4581;
	shr.u64 	%rd4583, %rd4518, 6;
	xor.b64  	%rd4584, %rd4582, %rd4583;
	shf.r.wrap.b32 	%r3131, %r2788, %r2787, 1;
	shf.r.wrap.b32 	%r3132, %r2787, %r2788, 1;
	mov.b64 	%rd4585, {%r3132, %r3131};
	shf.r.wrap.b32 	%r3133, %r2788, %r2787, 8;
	shf.r.wrap.b32 	%r3134, %r2787, %r2788, 8;
	mov.b64 	%rd4586, {%r3134, %r3133};
	xor.b64  	%rd4587, %rd4585, %rd4586;
	shr.u64 	%rd4588, %rd4037, 7;
	xor.b64  	%rd4589, %rd4587, %rd4588;
	add.s64 	%rd4590, %rd4584, %rd4000;
	add.s64 	%rd4591, %rd4590, %rd4333;
	add.s64 	%rd4592, %rd4591, %rd4589;
	add.s64 	%rd4593, %rd4592, %rd4457;
	xor.b64  	%rd4594, %rd4531, %rd4494;
	and.b64  	%rd4595, %rd4568, %rd4594;
	xor.b64  	%rd4596, %rd4595, %rd4494;
	add.s64 	%rd4597, %rd4593, %rd4596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3135,%dummy}, %rd4568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3136}, %rd4568;
	}
	shf.r.wrap.b32 	%r3137, %r3136, %r3135, 14;
	shf.r.wrap.b32 	%r3138, %r3135, %r3136, 14;
	mov.b64 	%rd4598, {%r3138, %r3137};
	shf.r.wrap.b32 	%r3139, %r3136, %r3135, 18;
	shf.r.wrap.b32 	%r3140, %r3135, %r3136, 18;
	mov.b64 	%rd4599, {%r3140, %r3139};
	xor.b64  	%rd4600, %rd4598, %rd4599;
	shf.l.wrap.b32 	%r3141, %r3135, %r3136, 23;
	shf.l.wrap.b32 	%r3142, %r3136, %r3135, 23;
	mov.b64 	%rd4601, {%r3142, %r3141};
	xor.b64  	%rd4602, %rd4600, %rd4601;
	add.s64 	%rd4603, %rd4597, %rd4602;
	add.s64 	%rd4604, %rd4603, 6601373596472566643;
	add.s64 	%rd4605, %rd4604, %rd4468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3143,%dummy}, %rd4579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3144}, %rd4579;
	}
	shf.r.wrap.b32 	%r3145, %r3144, %r3143, 28;
	shf.r.wrap.b32 	%r3146, %r3143, %r3144, 28;
	mov.b64 	%rd4606, {%r3146, %r3145};
	shf.l.wrap.b32 	%r3147, %r3143, %r3144, 30;
	shf.l.wrap.b32 	%r3148, %r3144, %r3143, 30;
	mov.b64 	%rd4607, {%r3148, %r3147};
	xor.b64  	%rd4608, %rd4606, %rd4607;
	shf.l.wrap.b32 	%r3149, %r3143, %r3144, 25;
	shf.l.wrap.b32 	%r3150, %r3144, %r3143, 25;
	mov.b64 	%rd4609, {%r3150, %r3149};
	xor.b64  	%rd4610, %rd4608, %rd4609;
	and.b64  	%rd4611, %rd4579, %rd4542;
	or.b64  	%rd4612, %rd4579, %rd4542;
	and.b64  	%rd4613, %rd4612, %rd4505;
	or.b64  	%rd4614, %rd4613, %rd4611;
	add.s64 	%rd4615, %rd4614, %rd4610;
	add.s64 	%rd4616, %rd4615, %rd4604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3151,%dummy}, %rd4555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3152}, %rd4555;
	}
	shf.r.wrap.b32 	%r3153, %r3152, %r3151, 19;
	shf.r.wrap.b32 	%r3154, %r3151, %r3152, 19;
	mov.b64 	%rd4617, {%r3154, %r3153};
	shf.l.wrap.b32 	%r3155, %r3151, %r3152, 3;
	shf.l.wrap.b32 	%r3156, %r3152, %r3151, 3;
	mov.b64 	%rd4618, {%r3156, %r3155};
	xor.b64  	%rd4619, %rd4617, %rd4618;
	shr.u64 	%rd4620, %rd4555, 6;
	xor.b64  	%rd4621, %rd4619, %rd4620;
	shf.r.wrap.b32 	%r3157, %r2814, %r2813, 1;
	shf.r.wrap.b32 	%r3158, %r2813, %r2814, 1;
	mov.b64 	%rd4622, {%r3158, %r3157};
	shf.r.wrap.b32 	%r3159, %r2814, %r2813, 8;
	shf.r.wrap.b32 	%r3160, %r2813, %r2814, 8;
	mov.b64 	%rd4623, {%r3160, %r3159};
	xor.b64  	%rd4624, %rd4622, %rd4623;
	shr.u64 	%rd4625, %rd4074, 7;
	xor.b64  	%rd4626, %rd4624, %rd4625;
	add.s64 	%rd4627, %rd4621, %rd4037;
	add.s64 	%rd4628, %rd4627, %rd4370;
	add.s64 	%rd4629, %rd4628, %rd4626;
	add.s64 	%rd4630, %rd4629, %rd4494;
	xor.b64  	%rd4631, %rd4568, %rd4531;
	and.b64  	%rd4632, %rd4605, %rd4631;
	xor.b64  	%rd4633, %rd4632, %rd4531;
	add.s64 	%rd4634, %rd4630, %rd4633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3161,%dummy}, %rd4605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3162}, %rd4605;
	}
	shf.r.wrap.b32 	%r3163, %r3162, %r3161, 14;
	shf.r.wrap.b32 	%r3164, %r3161, %r3162, 14;
	mov.b64 	%rd4635, {%r3164, %r3163};
	shf.r.wrap.b32 	%r3165, %r3162, %r3161, 18;
	shf.r.wrap.b32 	%r3166, %r3161, %r3162, 18;
	mov.b64 	%rd4636, {%r3166, %r3165};
	xor.b64  	%rd4637, %rd4635, %rd4636;
	shf.l.wrap.b32 	%r3167, %r3161, %r3162, 23;
	shf.l.wrap.b32 	%r3168, %r3162, %r3161, 23;
	mov.b64 	%rd4638, {%r3168, %r3167};
	xor.b64  	%rd4639, %rd4637, %rd4638;
	add.s64 	%rd4640, %rd4634, %rd4639;
	add.s64 	%rd4641, %rd4640, 7507060721942968483;
	add.s64 	%rd4642, %rd4641, %rd4505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3169,%dummy}, %rd4616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3170}, %rd4616;
	}
	shf.r.wrap.b32 	%r3171, %r3170, %r3169, 28;
	shf.r.wrap.b32 	%r3172, %r3169, %r3170, 28;
	mov.b64 	%rd4643, {%r3172, %r3171};
	shf.l.wrap.b32 	%r3173, %r3169, %r3170, 30;
	shf.l.wrap.b32 	%r3174, %r3170, %r3169, 30;
	mov.b64 	%rd4644, {%r3174, %r3173};
	xor.b64  	%rd4645, %rd4643, %rd4644;
	shf.l.wrap.b32 	%r3175, %r3169, %r3170, 25;
	shf.l.wrap.b32 	%r3176, %r3170, %r3169, 25;
	mov.b64 	%rd4646, {%r3176, %r3175};
	xor.b64  	%rd4647, %rd4645, %rd4646;
	and.b64  	%rd4648, %rd4616, %rd4579;
	or.b64  	%rd4649, %rd4616, %rd4579;
	and.b64  	%rd4650, %rd4649, %rd4542;
	or.b64  	%rd4651, %rd4650, %rd4648;
	add.s64 	%rd4652, %rd4651, %rd4647;
	add.s64 	%rd4653, %rd4652, %rd4641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3177,%dummy}, %rd4592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3178}, %rd4592;
	}
	shf.r.wrap.b32 	%r3179, %r3178, %r3177, 19;
	shf.r.wrap.b32 	%r3180, %r3177, %r3178, 19;
	mov.b64 	%rd4654, {%r3180, %r3179};
	shf.l.wrap.b32 	%r3181, %r3177, %r3178, 3;
	shf.l.wrap.b32 	%r3182, %r3178, %r3177, 3;
	mov.b64 	%rd4655, {%r3182, %r3181};
	xor.b64  	%rd4656, %rd4654, %rd4655;
	shr.u64 	%rd4657, %rd4592, 6;
	xor.b64  	%rd4658, %rd4656, %rd4657;
	shf.r.wrap.b32 	%r3183, %r2840, %r2839, 1;
	shf.r.wrap.b32 	%r3184, %r2839, %r2840, 1;
	mov.b64 	%rd4659, {%r3184, %r3183};
	shf.r.wrap.b32 	%r3185, %r2840, %r2839, 8;
	shf.r.wrap.b32 	%r3186, %r2839, %r2840, 8;
	mov.b64 	%rd4660, {%r3186, %r3185};
	xor.b64  	%rd4661, %rd4659, %rd4660;
	shr.u64 	%rd4662, %rd4111, 7;
	xor.b64  	%rd4663, %rd4661, %rd4662;
	add.s64 	%rd4664, %rd4658, %rd4074;
	add.s64 	%rd4665, %rd4664, %rd4407;
	add.s64 	%rd4666, %rd4665, %rd4663;
	add.s64 	%rd4667, %rd4666, %rd4531;
	xor.b64  	%rd4668, %rd4605, %rd4568;
	and.b64  	%rd4669, %rd4642, %rd4668;
	xor.b64  	%rd4670, %rd4669, %rd4568;
	add.s64 	%rd4671, %rd4667, %rd4670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3187,%dummy}, %rd4642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3188}, %rd4642;
	}
	shf.r.wrap.b32 	%r3189, %r3188, %r3187, 14;
	shf.r.wrap.b32 	%r3190, %r3187, %r3188, 14;
	mov.b64 	%rd4672, {%r3190, %r3189};
	shf.r.wrap.b32 	%r3191, %r3188, %r3187, 18;
	shf.r.wrap.b32 	%r3192, %r3187, %r3188, 18;
	mov.b64 	%rd4673, {%r3192, %r3191};
	xor.b64  	%rd4674, %rd4672, %rd4673;
	shf.l.wrap.b32 	%r3193, %r3187, %r3188, 23;
	shf.l.wrap.b32 	%r3194, %r3188, %r3187, 23;
	mov.b64 	%rd4675, {%r3194, %r3193};
	xor.b64  	%rd4676, %rd4674, %rd4675;
	add.s64 	%rd4677, %rd4671, %rd4676;
	add.s64 	%rd4678, %rd4677, 8399075790359081724;
	add.s64 	%rd4679, %rd4678, %rd4542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3195,%dummy}, %rd4653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3196}, %rd4653;
	}
	shf.r.wrap.b32 	%r3197, %r3196, %r3195, 28;
	shf.r.wrap.b32 	%r3198, %r3195, %r3196, 28;
	mov.b64 	%rd4680, {%r3198, %r3197};
	shf.l.wrap.b32 	%r3199, %r3195, %r3196, 30;
	shf.l.wrap.b32 	%r3200, %r3196, %r3195, 30;
	mov.b64 	%rd4681, {%r3200, %r3199};
	xor.b64  	%rd4682, %rd4680, %rd4681;
	shf.l.wrap.b32 	%r3201, %r3195, %r3196, 25;
	shf.l.wrap.b32 	%r3202, %r3196, %r3195, 25;
	mov.b64 	%rd4683, {%r3202, %r3201};
	xor.b64  	%rd4684, %rd4682, %rd4683;
	and.b64  	%rd4685, %rd4653, %rd4616;
	or.b64  	%rd4686, %rd4653, %rd4616;
	and.b64  	%rd4687, %rd4686, %rd4579;
	or.b64  	%rd4688, %rd4687, %rd4685;
	add.s64 	%rd4689, %rd4688, %rd4684;
	add.s64 	%rd4690, %rd4689, %rd4678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3203,%dummy}, %rd4629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3204}, %rd4629;
	}
	shf.r.wrap.b32 	%r3205, %r3204, %r3203, 19;
	shf.r.wrap.b32 	%r3206, %r3203, %r3204, 19;
	mov.b64 	%rd4691, {%r3206, %r3205};
	shf.l.wrap.b32 	%r3207, %r3203, %r3204, 3;
	shf.l.wrap.b32 	%r3208, %r3204, %r3203, 3;
	mov.b64 	%rd4692, {%r3208, %r3207};
	xor.b64  	%rd4693, %rd4691, %rd4692;
	shr.u64 	%rd4694, %rd4629, 6;
	xor.b64  	%rd4695, %rd4693, %rd4694;
	shf.r.wrap.b32 	%r3209, %r2866, %r2865, 1;
	shf.r.wrap.b32 	%r3210, %r2865, %r2866, 1;
	mov.b64 	%rd4696, {%r3210, %r3209};
	shf.r.wrap.b32 	%r3211, %r2866, %r2865, 8;
	shf.r.wrap.b32 	%r3212, %r2865, %r2866, 8;
	mov.b64 	%rd4697, {%r3212, %r3211};
	xor.b64  	%rd4698, %rd4696, %rd4697;
	shr.u64 	%rd4699, %rd4148, 7;
	xor.b64  	%rd4700, %rd4698, %rd4699;
	add.s64 	%rd4701, %rd4695, %rd4111;
	add.s64 	%rd4702, %rd4701, %rd4444;
	add.s64 	%rd4703, %rd4702, %rd4700;
	add.s64 	%rd4704, %rd4703, %rd4568;
	xor.b64  	%rd4705, %rd4642, %rd4605;
	and.b64  	%rd4706, %rd4679, %rd4705;
	xor.b64  	%rd4707, %rd4706, %rd4605;
	add.s64 	%rd4708, %rd4704, %rd4707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3213,%dummy}, %rd4679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3214}, %rd4679;
	}
	shf.r.wrap.b32 	%r3215, %r3214, %r3213, 14;
	shf.r.wrap.b32 	%r3216, %r3213, %r3214, 14;
	mov.b64 	%rd4709, {%r3216, %r3215};
	shf.r.wrap.b32 	%r3217, %r3214, %r3213, 18;
	shf.r.wrap.b32 	%r3218, %r3213, %r3214, 18;
	mov.b64 	%rd4710, {%r3218, %r3217};
	xor.b64  	%rd4711, %rd4709, %rd4710;
	shf.l.wrap.b32 	%r3219, %r3213, %r3214, 23;
	shf.l.wrap.b32 	%r3220, %r3214, %r3213, 23;
	mov.b64 	%rd4712, {%r3220, %r3219};
	xor.b64  	%rd4713, %rd4711, %rd4712;
	add.s64 	%rd4714, %rd4708, %rd4713;
	add.s64 	%rd4715, %rd4714, 8693463985226723168;
	add.s64 	%rd4716, %rd4715, %rd4579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3221,%dummy}, %rd4690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3222}, %rd4690;
	}
	shf.r.wrap.b32 	%r3223, %r3222, %r3221, 28;
	shf.r.wrap.b32 	%r3224, %r3221, %r3222, 28;
	mov.b64 	%rd4717, {%r3224, %r3223};
	shf.l.wrap.b32 	%r3225, %r3221, %r3222, 30;
	shf.l.wrap.b32 	%r3226, %r3222, %r3221, 30;
	mov.b64 	%rd4718, {%r3226, %r3225};
	xor.b64  	%rd4719, %rd4717, %rd4718;
	shf.l.wrap.b32 	%r3227, %r3221, %r3222, 25;
	shf.l.wrap.b32 	%r3228, %r3222, %r3221, 25;
	mov.b64 	%rd4720, {%r3228, %r3227};
	xor.b64  	%rd4721, %rd4719, %rd4720;
	and.b64  	%rd4722, %rd4690, %rd4653;
	or.b64  	%rd4723, %rd4690, %rd4653;
	and.b64  	%rd4724, %rd4723, %rd4616;
	or.b64  	%rd4725, %rd4724, %rd4722;
	add.s64 	%rd4726, %rd4725, %rd4721;
	add.s64 	%rd4727, %rd4726, %rd4715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3229,%dummy}, %rd4666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3230}, %rd4666;
	}
	shf.r.wrap.b32 	%r3231, %r3230, %r3229, 19;
	shf.r.wrap.b32 	%r3232, %r3229, %r3230, 19;
	mov.b64 	%rd4728, {%r3232, %r3231};
	shf.l.wrap.b32 	%r3233, %r3229, %r3230, 3;
	shf.l.wrap.b32 	%r3234, %r3230, %r3229, 3;
	mov.b64 	%rd4729, {%r3234, %r3233};
	xor.b64  	%rd4730, %rd4728, %rd4729;
	shr.u64 	%rd4731, %rd4666, 6;
	xor.b64  	%rd4732, %rd4730, %rd4731;
	shf.r.wrap.b32 	%r3235, %r2892, %r2891, 1;
	shf.r.wrap.b32 	%r3236, %r2891, %r2892, 1;
	mov.b64 	%rd4733, {%r3236, %r3235};
	shf.r.wrap.b32 	%r3237, %r2892, %r2891, 8;
	shf.r.wrap.b32 	%r3238, %r2891, %r2892, 8;
	mov.b64 	%rd4734, {%r3238, %r3237};
	xor.b64  	%rd4735, %rd4733, %rd4734;
	shr.u64 	%rd4736, %rd4185, 7;
	xor.b64  	%rd4737, %rd4735, %rd4736;
	add.s64 	%rd4738, %rd4732, %rd4148;
	add.s64 	%rd4739, %rd4738, %rd4481;
	add.s64 	%rd4740, %rd4739, %rd4737;
	add.s64 	%rd4741, %rd4740, %rd4605;
	xor.b64  	%rd4742, %rd4679, %rd4642;
	and.b64  	%rd4743, %rd4716, %rd4742;
	xor.b64  	%rd4744, %rd4743, %rd4642;
	add.s64 	%rd4745, %rd4741, %rd4744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3239,%dummy}, %rd4716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3240}, %rd4716;
	}
	shf.r.wrap.b32 	%r3241, %r3240, %r3239, 14;
	shf.r.wrap.b32 	%r3242, %r3239, %r3240, 14;
	mov.b64 	%rd4746, {%r3242, %r3241};
	shf.r.wrap.b32 	%r3243, %r3240, %r3239, 18;
	shf.r.wrap.b32 	%r3244, %r3239, %r3240, 18;
	mov.b64 	%rd4747, {%r3244, %r3243};
	xor.b64  	%rd4748, %rd4746, %rd4747;
	shf.l.wrap.b32 	%r3245, %r3239, %r3240, 23;
	shf.l.wrap.b32 	%r3246, %r3240, %r3239, 23;
	mov.b64 	%rd4749, {%r3246, %r3245};
	xor.b64  	%rd4750, %rd4748, %rd4749;
	add.s64 	%rd4751, %rd4745, %rd4750;
	add.s64 	%rd4752, %rd4751, -8878714635349349518;
	add.s64 	%rd4753, %rd4752, %rd4616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3247,%dummy}, %rd4727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3248}, %rd4727;
	}
	shf.r.wrap.b32 	%r3249, %r3248, %r3247, 28;
	shf.r.wrap.b32 	%r3250, %r3247, %r3248, 28;
	mov.b64 	%rd4754, {%r3250, %r3249};
	shf.l.wrap.b32 	%r3251, %r3247, %r3248, 30;
	shf.l.wrap.b32 	%r3252, %r3248, %r3247, 30;
	mov.b64 	%rd4755, {%r3252, %r3251};
	xor.b64  	%rd4756, %rd4754, %rd4755;
	shf.l.wrap.b32 	%r3253, %r3247, %r3248, 25;
	shf.l.wrap.b32 	%r3254, %r3248, %r3247, 25;
	mov.b64 	%rd4757, {%r3254, %r3253};
	xor.b64  	%rd4758, %rd4756, %rd4757;
	and.b64  	%rd4759, %rd4727, %rd4690;
	or.b64  	%rd4760, %rd4727, %rd4690;
	and.b64  	%rd4761, %rd4760, %rd4653;
	or.b64  	%rd4762, %rd4761, %rd4759;
	add.s64 	%rd4763, %rd4762, %rd4758;
	add.s64 	%rd4764, %rd4763, %rd4752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3255,%dummy}, %rd4703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3256}, %rd4703;
	}
	shf.r.wrap.b32 	%r3257, %r3256, %r3255, 19;
	shf.r.wrap.b32 	%r3258, %r3255, %r3256, 19;
	mov.b64 	%rd4765, {%r3258, %r3257};
	shf.l.wrap.b32 	%r3259, %r3255, %r3256, 3;
	shf.l.wrap.b32 	%r3260, %r3256, %r3255, 3;
	mov.b64 	%rd4766, {%r3260, %r3259};
	xor.b64  	%rd4767, %rd4765, %rd4766;
	shr.u64 	%rd4768, %rd4703, 6;
	xor.b64  	%rd4769, %rd4767, %rd4768;
	shf.r.wrap.b32 	%r3261, %r2918, %r2917, 1;
	shf.r.wrap.b32 	%r3262, %r2917, %r2918, 1;
	mov.b64 	%rd4770, {%r3262, %r3261};
	shf.r.wrap.b32 	%r3263, %r2918, %r2917, 8;
	shf.r.wrap.b32 	%r3264, %r2917, %r2918, 8;
	mov.b64 	%rd4771, {%r3264, %r3263};
	xor.b64  	%rd4772, %rd4770, %rd4771;
	shr.u64 	%rd4773, %rd4222, 7;
	xor.b64  	%rd4774, %rd4772, %rd4773;
	add.s64 	%rd4775, %rd4769, %rd4185;
	add.s64 	%rd4776, %rd4775, %rd4518;
	add.s64 	%rd4777, %rd4776, %rd4774;
	add.s64 	%rd4778, %rd4777, %rd4642;
	xor.b64  	%rd4779, %rd4716, %rd4679;
	and.b64  	%rd4780, %rd4753, %rd4779;
	xor.b64  	%rd4781, %rd4780, %rd4679;
	add.s64 	%rd4782, %rd4778, %rd4781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3265,%dummy}, %rd4753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3266}, %rd4753;
	}
	shf.r.wrap.b32 	%r3267, %r3266, %r3265, 14;
	shf.r.wrap.b32 	%r3268, %r3265, %r3266, 14;
	mov.b64 	%rd4783, {%r3268, %r3267};
	shf.r.wrap.b32 	%r3269, %r3266, %r3265, 18;
	shf.r.wrap.b32 	%r3270, %r3265, %r3266, 18;
	mov.b64 	%rd4784, {%r3270, %r3269};
	xor.b64  	%rd4785, %rd4783, %rd4784;
	shf.l.wrap.b32 	%r3271, %r3265, %r3266, 23;
	shf.l.wrap.b32 	%r3272, %r3266, %r3265, 23;
	mov.b64 	%rd4786, {%r3272, %r3271};
	xor.b64  	%rd4787, %rd4785, %rd4786;
	add.s64 	%rd4788, %rd4782, %rd4787;
	add.s64 	%rd4789, %rd4788, -8302665154208450068;
	add.s64 	%rd4790, %rd4789, %rd4653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3273,%dummy}, %rd4764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3274}, %rd4764;
	}
	shf.r.wrap.b32 	%r3275, %r3274, %r3273, 28;
	shf.r.wrap.b32 	%r3276, %r3273, %r3274, 28;
	mov.b64 	%rd4791, {%r3276, %r3275};
	shf.l.wrap.b32 	%r3277, %r3273, %r3274, 30;
	shf.l.wrap.b32 	%r3278, %r3274, %r3273, 30;
	mov.b64 	%rd4792, {%r3278, %r3277};
	xor.b64  	%rd4793, %rd4791, %rd4792;
	shf.l.wrap.b32 	%r3279, %r3273, %r3274, 25;
	shf.l.wrap.b32 	%r3280, %r3274, %r3273, 25;
	mov.b64 	%rd4794, {%r3280, %r3279};
	xor.b64  	%rd4795, %rd4793, %rd4794;
	and.b64  	%rd4796, %rd4764, %rd4727;
	or.b64  	%rd4797, %rd4764, %rd4727;
	and.b64  	%rd4798, %rd4797, %rd4690;
	or.b64  	%rd4799, %rd4798, %rd4796;
	add.s64 	%rd4800, %rd4799, %rd4795;
	add.s64 	%rd4801, %rd4800, %rd4789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3281,%dummy}, %rd4740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3282}, %rd4740;
	}
	shf.r.wrap.b32 	%r3283, %r3282, %r3281, 19;
	shf.r.wrap.b32 	%r3284, %r3281, %r3282, 19;
	mov.b64 	%rd4802, {%r3284, %r3283};
	shf.l.wrap.b32 	%r3285, %r3281, %r3282, 3;
	shf.l.wrap.b32 	%r3286, %r3282, %r3281, 3;
	mov.b64 	%rd4803, {%r3286, %r3285};
	xor.b64  	%rd4804, %rd4802, %rd4803;
	shr.u64 	%rd4805, %rd4740, 6;
	xor.b64  	%rd4806, %rd4804, %rd4805;
	shf.r.wrap.b32 	%r3287, %r2944, %r2943, 1;
	shf.r.wrap.b32 	%r3288, %r2943, %r2944, 1;
	mov.b64 	%rd4807, {%r3288, %r3287};
	shf.r.wrap.b32 	%r3289, %r2944, %r2943, 8;
	shf.r.wrap.b32 	%r3290, %r2943, %r2944, 8;
	mov.b64 	%rd4808, {%r3290, %r3289};
	xor.b64  	%rd4809, %rd4807, %rd4808;
	shr.u64 	%rd4810, %rd4259, 7;
	xor.b64  	%rd4811, %rd4809, %rd4810;
	add.s64 	%rd4812, %rd4806, %rd4222;
	add.s64 	%rd4813, %rd4812, %rd4555;
	add.s64 	%rd4814, %rd4813, %rd4811;
	add.s64 	%rd4815, %rd4814, %rd4679;
	xor.b64  	%rd4816, %rd4753, %rd4716;
	and.b64  	%rd4817, %rd4790, %rd4816;
	xor.b64  	%rd4818, %rd4817, %rd4716;
	add.s64 	%rd4819, %rd4815, %rd4818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3291,%dummy}, %rd4790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3292}, %rd4790;
	}
	shf.r.wrap.b32 	%r3293, %r3292, %r3291, 14;
	shf.r.wrap.b32 	%r3294, %r3291, %r3292, 14;
	mov.b64 	%rd4820, {%r3294, %r3293};
	shf.r.wrap.b32 	%r3295, %r3292, %r3291, 18;
	shf.r.wrap.b32 	%r3296, %r3291, %r3292, 18;
	mov.b64 	%rd4821, {%r3296, %r3295};
	xor.b64  	%rd4822, %rd4820, %rd4821;
	shf.l.wrap.b32 	%r3297, %r3291, %r3292, 23;
	shf.l.wrap.b32 	%r3298, %r3292, %r3291, 23;
	mov.b64 	%rd4823, {%r3298, %r3297};
	xor.b64  	%rd4824, %rd4822, %rd4823;
	add.s64 	%rd4825, %rd4819, %rd4824;
	add.s64 	%rd4826, %rd4825, -8016688836872298968;
	add.s64 	%rd4827, %rd4826, %rd4690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3299,%dummy}, %rd4801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3300}, %rd4801;
	}
	shf.r.wrap.b32 	%r3301, %r3300, %r3299, 28;
	shf.r.wrap.b32 	%r3302, %r3299, %r3300, 28;
	mov.b64 	%rd4828, {%r3302, %r3301};
	shf.l.wrap.b32 	%r3303, %r3299, %r3300, 30;
	shf.l.wrap.b32 	%r3304, %r3300, %r3299, 30;
	mov.b64 	%rd4829, {%r3304, %r3303};
	xor.b64  	%rd4830, %rd4828, %rd4829;
	shf.l.wrap.b32 	%r3305, %r3299, %r3300, 25;
	shf.l.wrap.b32 	%r3306, %r3300, %r3299, 25;
	mov.b64 	%rd4831, {%r3306, %r3305};
	xor.b64  	%rd4832, %rd4830, %rd4831;
	and.b64  	%rd4833, %rd4801, %rd4764;
	or.b64  	%rd4834, %rd4801, %rd4764;
	and.b64  	%rd4835, %rd4834, %rd4727;
	or.b64  	%rd4836, %rd4835, %rd4833;
	add.s64 	%rd4837, %rd4836, %rd4832;
	add.s64 	%rd4838, %rd4837, %rd4826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3307,%dummy}, %rd4777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3308}, %rd4777;
	}
	shf.r.wrap.b32 	%r3309, %r3308, %r3307, 19;
	shf.r.wrap.b32 	%r3310, %r3307, %r3308, 19;
	mov.b64 	%rd4839, {%r3310, %r3309};
	shf.l.wrap.b32 	%r3311, %r3307, %r3308, 3;
	shf.l.wrap.b32 	%r3312, %r3308, %r3307, 3;
	mov.b64 	%rd4840, {%r3312, %r3311};
	xor.b64  	%rd4841, %rd4839, %rd4840;
	shr.u64 	%rd4842, %rd4777, 6;
	xor.b64  	%rd4843, %rd4841, %rd4842;
	shf.r.wrap.b32 	%r3313, %r2970, %r2969, 1;
	shf.r.wrap.b32 	%r3314, %r2969, %r2970, 1;
	mov.b64 	%rd4844, {%r3314, %r3313};
	shf.r.wrap.b32 	%r3315, %r2970, %r2969, 8;
	shf.r.wrap.b32 	%r3316, %r2969, %r2970, 8;
	mov.b64 	%rd4845, {%r3316, %r3315};
	xor.b64  	%rd4846, %rd4844, %rd4845;
	shr.u64 	%rd4847, %rd4296, 7;
	xor.b64  	%rd4848, %rd4846, %rd4847;
	add.s64 	%rd4849, %rd4843, %rd4259;
	add.s64 	%rd4850, %rd4849, %rd4592;
	add.s64 	%rd4851, %rd4850, %rd4848;
	add.s64 	%rd4852, %rd4851, %rd4716;
	xor.b64  	%rd4853, %rd4790, %rd4753;
	and.b64  	%rd4854, %rd4827, %rd4853;
	xor.b64  	%rd4855, %rd4854, %rd4753;
	add.s64 	%rd4856, %rd4852, %rd4855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3317,%dummy}, %rd4827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3318}, %rd4827;
	}
	shf.r.wrap.b32 	%r3319, %r3318, %r3317, 14;
	shf.r.wrap.b32 	%r3320, %r3317, %r3318, 14;
	mov.b64 	%rd4857, {%r3320, %r3319};
	shf.r.wrap.b32 	%r3321, %r3318, %r3317, 18;
	shf.r.wrap.b32 	%r3322, %r3317, %r3318, 18;
	mov.b64 	%rd4858, {%r3322, %r3321};
	xor.b64  	%rd4859, %rd4857, %rd4858;
	shf.l.wrap.b32 	%r3323, %r3317, %r3318, 23;
	shf.l.wrap.b32 	%r3324, %r3318, %r3317, 23;
	mov.b64 	%rd4860, {%r3324, %r3323};
	xor.b64  	%rd4861, %rd4859, %rd4860;
	add.s64 	%rd4862, %rd4856, %rd4861;
	add.s64 	%rd4863, %rd4862, -6606660893046293015;
	add.s64 	%rd4864, %rd4863, %rd4727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3325,%dummy}, %rd4838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3326}, %rd4838;
	}
	shf.r.wrap.b32 	%r3327, %r3326, %r3325, 28;
	shf.r.wrap.b32 	%r3328, %r3325, %r3326, 28;
	mov.b64 	%rd4865, {%r3328, %r3327};
	shf.l.wrap.b32 	%r3329, %r3325, %r3326, 30;
	shf.l.wrap.b32 	%r3330, %r3326, %r3325, 30;
	mov.b64 	%rd4866, {%r3330, %r3329};
	xor.b64  	%rd4867, %rd4865, %rd4866;
	shf.l.wrap.b32 	%r3331, %r3325, %r3326, 25;
	shf.l.wrap.b32 	%r3332, %r3326, %r3325, 25;
	mov.b64 	%rd4868, {%r3332, %r3331};
	xor.b64  	%rd4869, %rd4867, %rd4868;
	and.b64  	%rd4870, %rd4838, %rd4801;
	or.b64  	%rd4871, %rd4838, %rd4801;
	and.b64  	%rd4872, %rd4871, %rd4764;
	or.b64  	%rd4873, %rd4872, %rd4870;
	add.s64 	%rd4874, %rd4873, %rd4869;
	add.s64 	%rd4875, %rd4874, %rd4863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3333,%dummy}, %rd4814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3334}, %rd4814;
	}
	shf.r.wrap.b32 	%r3335, %r3334, %r3333, 19;
	shf.r.wrap.b32 	%r3336, %r3333, %r3334, 19;
	mov.b64 	%rd4876, {%r3336, %r3335};
	shf.l.wrap.b32 	%r3337, %r3333, %r3334, 3;
	shf.l.wrap.b32 	%r3338, %r3334, %r3333, 3;
	mov.b64 	%rd4877, {%r3338, %r3337};
	xor.b64  	%rd4878, %rd4876, %rd4877;
	shr.u64 	%rd4879, %rd4814, 6;
	xor.b64  	%rd4880, %rd4878, %rd4879;
	shf.r.wrap.b32 	%r3339, %r2996, %r2995, 1;
	shf.r.wrap.b32 	%r3340, %r2995, %r2996, 1;
	mov.b64 	%rd4881, {%r3340, %r3339};
	shf.r.wrap.b32 	%r3341, %r2996, %r2995, 8;
	shf.r.wrap.b32 	%r3342, %r2995, %r2996, 8;
	mov.b64 	%rd4882, {%r3342, %r3341};
	xor.b64  	%rd4883, %rd4881, %rd4882;
	shr.u64 	%rd4884, %rd4333, 7;
	xor.b64  	%rd4885, %rd4883, %rd4884;
	add.s64 	%rd4886, %rd4880, %rd4296;
	add.s64 	%rd4887, %rd4886, %rd4629;
	add.s64 	%rd4888, %rd4887, %rd4885;
	add.s64 	%rd4889, %rd4888, %rd4753;
	xor.b64  	%rd4890, %rd4827, %rd4790;
	and.b64  	%rd4891, %rd4864, %rd4890;
	xor.b64  	%rd4892, %rd4891, %rd4790;
	add.s64 	%rd4893, %rd4889, %rd4892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3343,%dummy}, %rd4864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3344}, %rd4864;
	}
	shf.r.wrap.b32 	%r3345, %r3344, %r3343, 14;
	shf.r.wrap.b32 	%r3346, %r3343, %r3344, 14;
	mov.b64 	%rd4894, {%r3346, %r3345};
	shf.r.wrap.b32 	%r3347, %r3344, %r3343, 18;
	shf.r.wrap.b32 	%r3348, %r3343, %r3344, 18;
	mov.b64 	%rd4895, {%r3348, %r3347};
	xor.b64  	%rd4896, %rd4894, %rd4895;
	shf.l.wrap.b32 	%r3349, %r3343, %r3344, 23;
	shf.l.wrap.b32 	%r3350, %r3344, %r3343, 23;
	mov.b64 	%rd4897, {%r3350, %r3349};
	xor.b64  	%rd4898, %rd4896, %rd4897;
	add.s64 	%rd4899, %rd4893, %rd4898;
	add.s64 	%rd4900, %rd4899, -4685533653050689259;
	add.s64 	%rd4901, %rd4900, %rd4764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3351,%dummy}, %rd4875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3352}, %rd4875;
	}
	shf.r.wrap.b32 	%r3353, %r3352, %r3351, 28;
	shf.r.wrap.b32 	%r3354, %r3351, %r3352, 28;
	mov.b64 	%rd4902, {%r3354, %r3353};
	shf.l.wrap.b32 	%r3355, %r3351, %r3352, 30;
	shf.l.wrap.b32 	%r3356, %r3352, %r3351, 30;
	mov.b64 	%rd4903, {%r3356, %r3355};
	xor.b64  	%rd4904, %rd4902, %rd4903;
	shf.l.wrap.b32 	%r3357, %r3351, %r3352, 25;
	shf.l.wrap.b32 	%r3358, %r3352, %r3351, 25;
	mov.b64 	%rd4905, {%r3358, %r3357};
	xor.b64  	%rd4906, %rd4904, %rd4905;
	and.b64  	%rd4907, %rd4875, %rd4838;
	or.b64  	%rd4908, %rd4875, %rd4838;
	and.b64  	%rd4909, %rd4908, %rd4801;
	or.b64  	%rd4910, %rd4909, %rd4907;
	add.s64 	%rd4911, %rd4910, %rd4906;
	add.s64 	%rd4912, %rd4911, %rd4900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3359,%dummy}, %rd4851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3360}, %rd4851;
	}
	shf.r.wrap.b32 	%r3361, %r3360, %r3359, 19;
	shf.r.wrap.b32 	%r3362, %r3359, %r3360, 19;
	mov.b64 	%rd4913, {%r3362, %r3361};
	shf.l.wrap.b32 	%r3363, %r3359, %r3360, 3;
	shf.l.wrap.b32 	%r3364, %r3360, %r3359, 3;
	mov.b64 	%rd4914, {%r3364, %r3363};
	xor.b64  	%rd4915, %rd4913, %rd4914;
	shr.u64 	%rd4916, %rd4851, 6;
	xor.b64  	%rd4917, %rd4915, %rd4916;
	shf.r.wrap.b32 	%r3365, %r3022, %r3021, 1;
	shf.r.wrap.b32 	%r3366, %r3021, %r3022, 1;
	mov.b64 	%rd4918, {%r3366, %r3365};
	shf.r.wrap.b32 	%r3367, %r3022, %r3021, 8;
	shf.r.wrap.b32 	%r3368, %r3021, %r3022, 8;
	mov.b64 	%rd4919, {%r3368, %r3367};
	xor.b64  	%rd4920, %rd4918, %rd4919;
	shr.u64 	%rd4921, %rd4370, 7;
	xor.b64  	%rd4922, %rd4920, %rd4921;
	add.s64 	%rd4923, %rd4917, %rd4333;
	add.s64 	%rd4924, %rd4923, %rd4666;
	add.s64 	%rd4925, %rd4924, %rd4922;
	add.s64 	%rd4926, %rd4925, %rd4790;
	xor.b64  	%rd4927, %rd4864, %rd4827;
	and.b64  	%rd4928, %rd4901, %rd4927;
	xor.b64  	%rd4929, %rd4928, %rd4827;
	add.s64 	%rd4930, %rd4926, %rd4929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3369,%dummy}, %rd4901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3370}, %rd4901;
	}
	shf.r.wrap.b32 	%r3371, %r3370, %r3369, 14;
	shf.r.wrap.b32 	%r3372, %r3369, %r3370, 14;
	mov.b64 	%rd4931, {%r3372, %r3371};
	shf.r.wrap.b32 	%r3373, %r3370, %r3369, 18;
	shf.r.wrap.b32 	%r3374, %r3369, %r3370, 18;
	mov.b64 	%rd4932, {%r3374, %r3373};
	xor.b64  	%rd4933, %rd4931, %rd4932;
	shf.l.wrap.b32 	%r3375, %r3369, %r3370, 23;
	shf.l.wrap.b32 	%r3376, %r3370, %r3369, 23;
	mov.b64 	%rd4934, {%r3376, %r3375};
	xor.b64  	%rd4935, %rd4933, %rd4934;
	add.s64 	%rd4936, %rd4930, %rd4935;
	add.s64 	%rd4937, %rd4936, -4147400797238176981;
	add.s64 	%rd4938, %rd4937, %rd4801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3377,%dummy}, %rd4912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3378}, %rd4912;
	}
	shf.r.wrap.b32 	%r3379, %r3378, %r3377, 28;
	shf.r.wrap.b32 	%r3380, %r3377, %r3378, 28;
	mov.b64 	%rd4939, {%r3380, %r3379};
	shf.l.wrap.b32 	%r3381, %r3377, %r3378, 30;
	shf.l.wrap.b32 	%r3382, %r3378, %r3377, 30;
	mov.b64 	%rd4940, {%r3382, %r3381};
	xor.b64  	%rd4941, %rd4939, %rd4940;
	shf.l.wrap.b32 	%r3383, %r3377, %r3378, 25;
	shf.l.wrap.b32 	%r3384, %r3378, %r3377, 25;
	mov.b64 	%rd4942, {%r3384, %r3383};
	xor.b64  	%rd4943, %rd4941, %rd4942;
	and.b64  	%rd4944, %rd4912, %rd4875;
	or.b64  	%rd4945, %rd4912, %rd4875;
	and.b64  	%rd4946, %rd4945, %rd4838;
	or.b64  	%rd4947, %rd4946, %rd4944;
	add.s64 	%rd4948, %rd4947, %rd4943;
	add.s64 	%rd4949, %rd4948, %rd4937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3385,%dummy}, %rd4888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3386}, %rd4888;
	}
	shf.r.wrap.b32 	%r3387, %r3386, %r3385, 19;
	shf.r.wrap.b32 	%r3388, %r3385, %r3386, 19;
	mov.b64 	%rd4950, {%r3388, %r3387};
	shf.l.wrap.b32 	%r3389, %r3385, %r3386, 3;
	shf.l.wrap.b32 	%r3390, %r3386, %r3385, 3;
	mov.b64 	%rd4951, {%r3390, %r3389};
	xor.b64  	%rd4952, %rd4950, %rd4951;
	shr.u64 	%rd4953, %rd4888, 6;
	xor.b64  	%rd4954, %rd4952, %rd4953;
	shf.r.wrap.b32 	%r3391, %r3048, %r3047, 1;
	shf.r.wrap.b32 	%r3392, %r3047, %r3048, 1;
	mov.b64 	%rd4955, {%r3392, %r3391};
	shf.r.wrap.b32 	%r3393, %r3048, %r3047, 8;
	shf.r.wrap.b32 	%r3394, %r3047, %r3048, 8;
	mov.b64 	%rd4956, {%r3394, %r3393};
	xor.b64  	%rd4957, %rd4955, %rd4956;
	shr.u64 	%rd4958, %rd4407, 7;
	xor.b64  	%rd4959, %rd4957, %rd4958;
	add.s64 	%rd4960, %rd4954, %rd4370;
	add.s64 	%rd4961, %rd4960, %rd4703;
	add.s64 	%rd4962, %rd4961, %rd4959;
	add.s64 	%rd4963, %rd4962, %rd4827;
	xor.b64  	%rd4964, %rd4901, %rd4864;
	and.b64  	%rd4965, %rd4938, %rd4964;
	xor.b64  	%rd4966, %rd4965, %rd4864;
	add.s64 	%rd4967, %rd4963, %rd4966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3395,%dummy}, %rd4938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3396}, %rd4938;
	}
	shf.r.wrap.b32 	%r3397, %r3396, %r3395, 14;
	shf.r.wrap.b32 	%r3398, %r3395, %r3396, 14;
	mov.b64 	%rd4968, {%r3398, %r3397};
	shf.r.wrap.b32 	%r3399, %r3396, %r3395, 18;
	shf.r.wrap.b32 	%r3400, %r3395, %r3396, 18;
	mov.b64 	%rd4969, {%r3400, %r3399};
	xor.b64  	%rd4970, %rd4968, %rd4969;
	shf.l.wrap.b32 	%r3401, %r3395, %r3396, 23;
	shf.l.wrap.b32 	%r3402, %r3396, %r3395, 23;
	mov.b64 	%rd4971, {%r3402, %r3401};
	xor.b64  	%rd4972, %rd4970, %rd4971;
	add.s64 	%rd4973, %rd4967, %rd4972;
	add.s64 	%rd4974, %rd4973, -3880063495543823972;
	add.s64 	%rd4975, %rd4974, %rd4838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3403,%dummy}, %rd4949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3404}, %rd4949;
	}
	shf.r.wrap.b32 	%r3405, %r3404, %r3403, 28;
	shf.r.wrap.b32 	%r3406, %r3403, %r3404, 28;
	mov.b64 	%rd4976, {%r3406, %r3405};
	shf.l.wrap.b32 	%r3407, %r3403, %r3404, 30;
	shf.l.wrap.b32 	%r3408, %r3404, %r3403, 30;
	mov.b64 	%rd4977, {%r3408, %r3407};
	xor.b64  	%rd4978, %rd4976, %rd4977;
	shf.l.wrap.b32 	%r3409, %r3403, %r3404, 25;
	shf.l.wrap.b32 	%r3410, %r3404, %r3403, 25;
	mov.b64 	%rd4979, {%r3410, %r3409};
	xor.b64  	%rd4980, %rd4978, %rd4979;
	and.b64  	%rd4981, %rd4949, %rd4912;
	or.b64  	%rd4982, %rd4949, %rd4912;
	and.b64  	%rd4983, %rd4982, %rd4875;
	or.b64  	%rd4984, %rd4983, %rd4981;
	add.s64 	%rd4985, %rd4984, %rd4980;
	add.s64 	%rd4986, %rd4985, %rd4974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3411,%dummy}, %rd4925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3412}, %rd4925;
	}
	shf.r.wrap.b32 	%r3413, %r3412, %r3411, 19;
	shf.r.wrap.b32 	%r3414, %r3411, %r3412, 19;
	mov.b64 	%rd4987, {%r3414, %r3413};
	shf.l.wrap.b32 	%r3415, %r3411, %r3412, 3;
	shf.l.wrap.b32 	%r3416, %r3412, %r3411, 3;
	mov.b64 	%rd4988, {%r3416, %r3415};
	xor.b64  	%rd4989, %rd4987, %rd4988;
	shr.u64 	%rd4990, %rd4925, 6;
	xor.b64  	%rd4991, %rd4989, %rd4990;
	shf.r.wrap.b32 	%r3417, %r3074, %r3073, 1;
	shf.r.wrap.b32 	%r3418, %r3073, %r3074, 1;
	mov.b64 	%rd4992, {%r3418, %r3417};
	shf.r.wrap.b32 	%r3419, %r3074, %r3073, 8;
	shf.r.wrap.b32 	%r3420, %r3073, %r3074, 8;
	mov.b64 	%rd4993, {%r3420, %r3419};
	xor.b64  	%rd4994, %rd4992, %rd4993;
	shr.u64 	%rd4995, %rd4444, 7;
	xor.b64  	%rd4996, %rd4994, %rd4995;
	add.s64 	%rd4997, %rd4991, %rd4407;
	add.s64 	%rd4998, %rd4997, %rd4740;
	add.s64 	%rd4999, %rd4998, %rd4996;
	add.s64 	%rd5000, %rd4999, %rd4864;
	xor.b64  	%rd5001, %rd4938, %rd4901;
	and.b64  	%rd5002, %rd4975, %rd5001;
	xor.b64  	%rd5003, %rd5002, %rd4901;
	add.s64 	%rd5004, %rd5000, %rd5003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3421,%dummy}, %rd4975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3422}, %rd4975;
	}
	shf.r.wrap.b32 	%r3423, %r3422, %r3421, 14;
	shf.r.wrap.b32 	%r3424, %r3421, %r3422, 14;
	mov.b64 	%rd5005, {%r3424, %r3423};
	shf.r.wrap.b32 	%r3425, %r3422, %r3421, 18;
	shf.r.wrap.b32 	%r3426, %r3421, %r3422, 18;
	mov.b64 	%rd5006, {%r3426, %r3425};
	xor.b64  	%rd5007, %rd5005, %rd5006;
	shf.l.wrap.b32 	%r3427, %r3421, %r3422, 23;
	shf.l.wrap.b32 	%r3428, %r3422, %r3421, 23;
	mov.b64 	%rd5008, {%r3428, %r3427};
	xor.b64  	%rd5009, %rd5007, %rd5008;
	add.s64 	%rd5010, %rd5004, %rd5009;
	add.s64 	%rd5011, %rd5010, -3348786107499101689;
	add.s64 	%rd5012, %rd5011, %rd4875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3429,%dummy}, %rd4986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3430}, %rd4986;
	}
	shf.r.wrap.b32 	%r3431, %r3430, %r3429, 28;
	shf.r.wrap.b32 	%r3432, %r3429, %r3430, 28;
	mov.b64 	%rd5013, {%r3432, %r3431};
	shf.l.wrap.b32 	%r3433, %r3429, %r3430, 30;
	shf.l.wrap.b32 	%r3434, %r3430, %r3429, 30;
	mov.b64 	%rd5014, {%r3434, %r3433};
	xor.b64  	%rd5015, %rd5013, %rd5014;
	shf.l.wrap.b32 	%r3435, %r3429, %r3430, 25;
	shf.l.wrap.b32 	%r3436, %r3430, %r3429, 25;
	mov.b64 	%rd5016, {%r3436, %r3435};
	xor.b64  	%rd5017, %rd5015, %rd5016;
	and.b64  	%rd5018, %rd4986, %rd4949;
	or.b64  	%rd5019, %rd4986, %rd4949;
	and.b64  	%rd5020, %rd5019, %rd4912;
	or.b64  	%rd5021, %rd5020, %rd5018;
	add.s64 	%rd5022, %rd5021, %rd5017;
	add.s64 	%rd5023, %rd5022, %rd5011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3437,%dummy}, %rd4962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3438}, %rd4962;
	}
	shf.r.wrap.b32 	%r3439, %r3438, %r3437, 19;
	shf.r.wrap.b32 	%r3440, %r3437, %r3438, 19;
	mov.b64 	%rd5024, {%r3440, %r3439};
	shf.l.wrap.b32 	%r3441, %r3437, %r3438, 3;
	shf.l.wrap.b32 	%r3442, %r3438, %r3437, 3;
	mov.b64 	%rd5025, {%r3442, %r3441};
	xor.b64  	%rd5026, %rd5024, %rd5025;
	shr.u64 	%rd5027, %rd4962, 6;
	xor.b64  	%rd5028, %rd5026, %rd5027;
	shf.r.wrap.b32 	%r3443, %r3100, %r3099, 1;
	shf.r.wrap.b32 	%r3444, %r3099, %r3100, 1;
	mov.b64 	%rd5029, {%r3444, %r3443};
	shf.r.wrap.b32 	%r3445, %r3100, %r3099, 8;
	shf.r.wrap.b32 	%r3446, %r3099, %r3100, 8;
	mov.b64 	%rd5030, {%r3446, %r3445};
	xor.b64  	%rd5031, %rd5029, %rd5030;
	shr.u64 	%rd5032, %rd4481, 7;
	xor.b64  	%rd5033, %rd5031, %rd5032;
	add.s64 	%rd5034, %rd5028, %rd4444;
	add.s64 	%rd5035, %rd5034, %rd4777;
	add.s64 	%rd5036, %rd5035, %rd5033;
	add.s64 	%rd5037, %rd5036, %rd4901;
	xor.b64  	%rd5038, %rd4975, %rd4938;
	and.b64  	%rd5039, %rd5012, %rd5038;
	xor.b64  	%rd5040, %rd5039, %rd4938;
	add.s64 	%rd5041, %rd5037, %rd5040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3447,%dummy}, %rd5012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3448}, %rd5012;
	}
	shf.r.wrap.b32 	%r3449, %r3448, %r3447, 14;
	shf.r.wrap.b32 	%r3450, %r3447, %r3448, 14;
	mov.b64 	%rd5042, {%r3450, %r3449};
	shf.r.wrap.b32 	%r3451, %r3448, %r3447, 18;
	shf.r.wrap.b32 	%r3452, %r3447, %r3448, 18;
	mov.b64 	%rd5043, {%r3452, %r3451};
	xor.b64  	%rd5044, %rd5042, %rd5043;
	shf.l.wrap.b32 	%r3453, %r3447, %r3448, 23;
	shf.l.wrap.b32 	%r3454, %r3448, %r3447, 23;
	mov.b64 	%rd5045, {%r3454, %r3453};
	xor.b64  	%rd5046, %rd5044, %rd5045;
	add.s64 	%rd5047, %rd5041, %rd5046;
	add.s64 	%rd5048, %rd5047, -1523767162380948706;
	add.s64 	%rd5049, %rd5048, %rd4912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3455,%dummy}, %rd5023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3456}, %rd5023;
	}
	shf.r.wrap.b32 	%r3457, %r3456, %r3455, 28;
	shf.r.wrap.b32 	%r3458, %r3455, %r3456, 28;
	mov.b64 	%rd5050, {%r3458, %r3457};
	shf.l.wrap.b32 	%r3459, %r3455, %r3456, 30;
	shf.l.wrap.b32 	%r3460, %r3456, %r3455, 30;
	mov.b64 	%rd5051, {%r3460, %r3459};
	xor.b64  	%rd5052, %rd5050, %rd5051;
	shf.l.wrap.b32 	%r3461, %r3455, %r3456, 25;
	shf.l.wrap.b32 	%r3462, %r3456, %r3455, 25;
	mov.b64 	%rd5053, {%r3462, %r3461};
	xor.b64  	%rd5054, %rd5052, %rd5053;
	and.b64  	%rd5055, %rd5023, %rd4986;
	or.b64  	%rd5056, %rd5023, %rd4986;
	and.b64  	%rd5057, %rd5056, %rd4949;
	or.b64  	%rd5058, %rd5057, %rd5055;
	add.s64 	%rd5059, %rd5058, %rd5054;
	add.s64 	%rd5060, %rd5059, %rd5048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3463,%dummy}, %rd4999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3464}, %rd4999;
	}
	shf.r.wrap.b32 	%r3465, %r3464, %r3463, 19;
	shf.r.wrap.b32 	%r3466, %r3463, %r3464, 19;
	mov.b64 	%rd5061, {%r3466, %r3465};
	shf.l.wrap.b32 	%r3467, %r3463, %r3464, 3;
	shf.l.wrap.b32 	%r3468, %r3464, %r3463, 3;
	mov.b64 	%rd5062, {%r3468, %r3467};
	xor.b64  	%rd5063, %rd5061, %rd5062;
	shr.u64 	%rd5064, %rd4999, 6;
	xor.b64  	%rd5065, %rd5063, %rd5064;
	shf.r.wrap.b32 	%r3469, %r3126, %r3125, 1;
	shf.r.wrap.b32 	%r3470, %r3125, %r3126, 1;
	mov.b64 	%rd5066, {%r3470, %r3469};
	shf.r.wrap.b32 	%r3471, %r3126, %r3125, 8;
	shf.r.wrap.b32 	%r3472, %r3125, %r3126, 8;
	mov.b64 	%rd5067, {%r3472, %r3471};
	xor.b64  	%rd5068, %rd5066, %rd5067;
	shr.u64 	%rd5069, %rd4518, 7;
	xor.b64  	%rd5070, %rd5068, %rd5069;
	add.s64 	%rd5071, %rd5065, %rd4481;
	add.s64 	%rd5072, %rd5071, %rd4814;
	add.s64 	%rd5073, %rd5072, %rd5070;
	add.s64 	%rd5074, %rd5073, %rd4938;
	xor.b64  	%rd5075, %rd5012, %rd4975;
	and.b64  	%rd5076, %rd5049, %rd5075;
	xor.b64  	%rd5077, %rd5076, %rd4975;
	add.s64 	%rd5078, %rd5074, %rd5077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3473,%dummy}, %rd5049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3474}, %rd5049;
	}
	shf.r.wrap.b32 	%r3475, %r3474, %r3473, 14;
	shf.r.wrap.b32 	%r3476, %r3473, %r3474, 14;
	mov.b64 	%rd5079, {%r3476, %r3475};
	shf.r.wrap.b32 	%r3477, %r3474, %r3473, 18;
	shf.r.wrap.b32 	%r3478, %r3473, %r3474, 18;
	mov.b64 	%rd5080, {%r3478, %r3477};
	xor.b64  	%rd5081, %rd5079, %rd5080;
	shf.l.wrap.b32 	%r3479, %r3473, %r3474, 23;
	shf.l.wrap.b32 	%r3480, %r3474, %r3473, 23;
	mov.b64 	%rd5082, {%r3480, %r3479};
	xor.b64  	%rd5083, %rd5081, %rd5082;
	add.s64 	%rd5084, %rd5078, %rd5083;
	add.s64 	%rd5085, %rd5084, -757361751448694408;
	add.s64 	%rd5086, %rd5085, %rd4949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3481,%dummy}, %rd5060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3482}, %rd5060;
	}
	shf.r.wrap.b32 	%r3483, %r3482, %r3481, 28;
	shf.r.wrap.b32 	%r3484, %r3481, %r3482, 28;
	mov.b64 	%rd5087, {%r3484, %r3483};
	shf.l.wrap.b32 	%r3485, %r3481, %r3482, 30;
	shf.l.wrap.b32 	%r3486, %r3482, %r3481, 30;
	mov.b64 	%rd5088, {%r3486, %r3485};
	xor.b64  	%rd5089, %rd5087, %rd5088;
	shf.l.wrap.b32 	%r3487, %r3481, %r3482, 25;
	shf.l.wrap.b32 	%r3488, %r3482, %r3481, 25;
	mov.b64 	%rd5090, {%r3488, %r3487};
	xor.b64  	%rd5091, %rd5089, %rd5090;
	and.b64  	%rd5092, %rd5060, %rd5023;
	or.b64  	%rd5093, %rd5060, %rd5023;
	and.b64  	%rd5094, %rd5093, %rd4986;
	or.b64  	%rd5095, %rd5094, %rd5092;
	add.s64 	%rd5096, %rd5095, %rd5091;
	add.s64 	%rd5097, %rd5096, %rd5085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3489,%dummy}, %rd5036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3490}, %rd5036;
	}
	shf.r.wrap.b32 	%r3491, %r3490, %r3489, 19;
	shf.r.wrap.b32 	%r3492, %r3489, %r3490, 19;
	mov.b64 	%rd5098, {%r3492, %r3491};
	shf.l.wrap.b32 	%r3493, %r3489, %r3490, 3;
	shf.l.wrap.b32 	%r3494, %r3490, %r3489, 3;
	mov.b64 	%rd5099, {%r3494, %r3493};
	xor.b64  	%rd5100, %rd5098, %rd5099;
	shr.u64 	%rd5101, %rd5036, 6;
	xor.b64  	%rd5102, %rd5100, %rd5101;
	shf.r.wrap.b32 	%r3495, %r3152, %r3151, 1;
	shf.r.wrap.b32 	%r3496, %r3151, %r3152, 1;
	mov.b64 	%rd5103, {%r3496, %r3495};
	shf.r.wrap.b32 	%r3497, %r3152, %r3151, 8;
	shf.r.wrap.b32 	%r3498, %r3151, %r3152, 8;
	mov.b64 	%rd5104, {%r3498, %r3497};
	xor.b64  	%rd5105, %rd5103, %rd5104;
	shr.u64 	%rd5106, %rd4555, 7;
	xor.b64  	%rd5107, %rd5105, %rd5106;
	add.s64 	%rd5108, %rd5102, %rd4518;
	add.s64 	%rd5109, %rd5108, %rd4851;
	add.s64 	%rd5110, %rd5109, %rd5107;
	add.s64 	%rd5111, %rd5110, %rd4975;
	xor.b64  	%rd5112, %rd5049, %rd5012;
	and.b64  	%rd5113, %rd5086, %rd5112;
	xor.b64  	%rd5114, %rd5113, %rd5012;
	add.s64 	%rd5115, %rd5111, %rd5114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3499,%dummy}, %rd5086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3500}, %rd5086;
	}
	shf.r.wrap.b32 	%r3501, %r3500, %r3499, 14;
	shf.r.wrap.b32 	%r3502, %r3499, %r3500, 14;
	mov.b64 	%rd5116, {%r3502, %r3501};
	shf.r.wrap.b32 	%r3503, %r3500, %r3499, 18;
	shf.r.wrap.b32 	%r3504, %r3499, %r3500, 18;
	mov.b64 	%rd5117, {%r3504, %r3503};
	xor.b64  	%rd5118, %rd5116, %rd5117;
	shf.l.wrap.b32 	%r3505, %r3499, %r3500, 23;
	shf.l.wrap.b32 	%r3506, %r3500, %r3499, 23;
	mov.b64 	%rd5119, {%r3506, %r3505};
	xor.b64  	%rd5120, %rd5118, %rd5119;
	add.s64 	%rd5121, %rd5115, %rd5120;
	add.s64 	%rd5122, %rd5121, 500013540394364858;
	add.s64 	%rd5123, %rd5122, %rd4986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3507,%dummy}, %rd5097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3508}, %rd5097;
	}
	shf.r.wrap.b32 	%r3509, %r3508, %r3507, 28;
	shf.r.wrap.b32 	%r3510, %r3507, %r3508, 28;
	mov.b64 	%rd5124, {%r3510, %r3509};
	shf.l.wrap.b32 	%r3511, %r3507, %r3508, 30;
	shf.l.wrap.b32 	%r3512, %r3508, %r3507, 30;
	mov.b64 	%rd5125, {%r3512, %r3511};
	xor.b64  	%rd5126, %rd5124, %rd5125;
	shf.l.wrap.b32 	%r3513, %r3507, %r3508, 25;
	shf.l.wrap.b32 	%r3514, %r3508, %r3507, 25;
	mov.b64 	%rd5127, {%r3514, %r3513};
	xor.b64  	%rd5128, %rd5126, %rd5127;
	and.b64  	%rd5129, %rd5097, %rd5060;
	or.b64  	%rd5130, %rd5097, %rd5060;
	and.b64  	%rd5131, %rd5130, %rd5023;
	or.b64  	%rd5132, %rd5131, %rd5129;
	add.s64 	%rd5133, %rd5132, %rd5128;
	add.s64 	%rd5134, %rd5133, %rd5122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3515,%dummy}, %rd5073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3516}, %rd5073;
	}
	shf.r.wrap.b32 	%r3517, %r3516, %r3515, 19;
	shf.r.wrap.b32 	%r3518, %r3515, %r3516, 19;
	mov.b64 	%rd5135, {%r3518, %r3517};
	shf.l.wrap.b32 	%r3519, %r3515, %r3516, 3;
	shf.l.wrap.b32 	%r3520, %r3516, %r3515, 3;
	mov.b64 	%rd5136, {%r3520, %r3519};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	shr.u64 	%rd5138, %rd5073, 6;
	xor.b64  	%rd5139, %rd5137, %rd5138;
	shf.r.wrap.b32 	%r3521, %r3178, %r3177, 1;
	shf.r.wrap.b32 	%r3522, %r3177, %r3178, 1;
	mov.b64 	%rd5140, {%r3522, %r3521};
	shf.r.wrap.b32 	%r3523, %r3178, %r3177, 8;
	shf.r.wrap.b32 	%r3524, %r3177, %r3178, 8;
	mov.b64 	%rd5141, {%r3524, %r3523};
	xor.b64  	%rd5142, %rd5140, %rd5141;
	shr.u64 	%rd5143, %rd4592, 7;
	xor.b64  	%rd5144, %rd5142, %rd5143;
	add.s64 	%rd5145, %rd5139, %rd4555;
	add.s64 	%rd5146, %rd5145, %rd4888;
	add.s64 	%rd5147, %rd5146, %rd5144;
	add.s64 	%rd5148, %rd5147, %rd5012;
	xor.b64  	%rd5149, %rd5086, %rd5049;
	and.b64  	%rd5150, %rd5123, %rd5149;
	xor.b64  	%rd5151, %rd5150, %rd5049;
	add.s64 	%rd5152, %rd5148, %rd5151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3525,%dummy}, %rd5123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3526}, %rd5123;
	}
	shf.r.wrap.b32 	%r3527, %r3526, %r3525, 14;
	shf.r.wrap.b32 	%r3528, %r3525, %r3526, 14;
	mov.b64 	%rd5153, {%r3528, %r3527};
	shf.r.wrap.b32 	%r3529, %r3526, %r3525, 18;
	shf.r.wrap.b32 	%r3530, %r3525, %r3526, 18;
	mov.b64 	%rd5154, {%r3530, %r3529};
	xor.b64  	%rd5155, %rd5153, %rd5154;
	shf.l.wrap.b32 	%r3531, %r3525, %r3526, 23;
	shf.l.wrap.b32 	%r3532, %r3526, %r3525, 23;
	mov.b64 	%rd5156, {%r3532, %r3531};
	xor.b64  	%rd5157, %rd5155, %rd5156;
	add.s64 	%rd5158, %rd5152, %rd5157;
	add.s64 	%rd5159, %rd5158, 748580250866718886;
	add.s64 	%rd5160, %rd5159, %rd5023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3533,%dummy}, %rd5134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3534}, %rd5134;
	}
	shf.r.wrap.b32 	%r3535, %r3534, %r3533, 28;
	shf.r.wrap.b32 	%r3536, %r3533, %r3534, 28;
	mov.b64 	%rd5161, {%r3536, %r3535};
	shf.l.wrap.b32 	%r3537, %r3533, %r3534, 30;
	shf.l.wrap.b32 	%r3538, %r3534, %r3533, 30;
	mov.b64 	%rd5162, {%r3538, %r3537};
	xor.b64  	%rd5163, %rd5161, %rd5162;
	shf.l.wrap.b32 	%r3539, %r3533, %r3534, 25;
	shf.l.wrap.b32 	%r3540, %r3534, %r3533, 25;
	mov.b64 	%rd5164, {%r3540, %r3539};
	xor.b64  	%rd5165, %rd5163, %rd5164;
	and.b64  	%rd5166, %rd5134, %rd5097;
	or.b64  	%rd5167, %rd5134, %rd5097;
	and.b64  	%rd5168, %rd5167, %rd5060;
	or.b64  	%rd5169, %rd5168, %rd5166;
	add.s64 	%rd5170, %rd5169, %rd5165;
	add.s64 	%rd5171, %rd5170, %rd5159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3541,%dummy}, %rd5110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3542}, %rd5110;
	}
	shf.r.wrap.b32 	%r3543, %r3542, %r3541, 19;
	shf.r.wrap.b32 	%r3544, %r3541, %r3542, 19;
	mov.b64 	%rd5172, {%r3544, %r3543};
	shf.l.wrap.b32 	%r3545, %r3541, %r3542, 3;
	shf.l.wrap.b32 	%r3546, %r3542, %r3541, 3;
	mov.b64 	%rd5173, {%r3546, %r3545};
	xor.b64  	%rd5174, %rd5172, %rd5173;
	shr.u64 	%rd5175, %rd5110, 6;
	xor.b64  	%rd5176, %rd5174, %rd5175;
	shf.r.wrap.b32 	%r3547, %r3204, %r3203, 1;
	shf.r.wrap.b32 	%r3548, %r3203, %r3204, 1;
	mov.b64 	%rd5177, {%r3548, %r3547};
	shf.r.wrap.b32 	%r3549, %r3204, %r3203, 8;
	shf.r.wrap.b32 	%r3550, %r3203, %r3204, 8;
	mov.b64 	%rd5178, {%r3550, %r3549};
	xor.b64  	%rd5179, %rd5177, %rd5178;
	shr.u64 	%rd5180, %rd4629, 7;
	xor.b64  	%rd5181, %rd5179, %rd5180;
	add.s64 	%rd5182, %rd5176, %rd4592;
	add.s64 	%rd5183, %rd5182, %rd4925;
	add.s64 	%rd5184, %rd5183, %rd5181;
	add.s64 	%rd5185, %rd5184, %rd5049;
	xor.b64  	%rd5186, %rd5123, %rd5086;
	and.b64  	%rd5187, %rd5160, %rd5186;
	xor.b64  	%rd5188, %rd5187, %rd5086;
	add.s64 	%rd5189, %rd5185, %rd5188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3551,%dummy}, %rd5160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3552}, %rd5160;
	}
	shf.r.wrap.b32 	%r3553, %r3552, %r3551, 14;
	shf.r.wrap.b32 	%r3554, %r3551, %r3552, 14;
	mov.b64 	%rd5190, {%r3554, %r3553};
	shf.r.wrap.b32 	%r3555, %r3552, %r3551, 18;
	shf.r.wrap.b32 	%r3556, %r3551, %r3552, 18;
	mov.b64 	%rd5191, {%r3556, %r3555};
	xor.b64  	%rd5192, %rd5190, %rd5191;
	shf.l.wrap.b32 	%r3557, %r3551, %r3552, 23;
	shf.l.wrap.b32 	%r3558, %r3552, %r3551, 23;
	mov.b64 	%rd5193, {%r3558, %r3557};
	xor.b64  	%rd5194, %rd5192, %rd5193;
	add.s64 	%rd5195, %rd5189, %rd5194;
	add.s64 	%rd5196, %rd5195, 1242879168328830382;
	add.s64 	%rd5197, %rd5196, %rd5060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3559,%dummy}, %rd5171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3560}, %rd5171;
	}
	shf.r.wrap.b32 	%r3561, %r3560, %r3559, 28;
	shf.r.wrap.b32 	%r3562, %r3559, %r3560, 28;
	mov.b64 	%rd5198, {%r3562, %r3561};
	shf.l.wrap.b32 	%r3563, %r3559, %r3560, 30;
	shf.l.wrap.b32 	%r3564, %r3560, %r3559, 30;
	mov.b64 	%rd5199, {%r3564, %r3563};
	xor.b64  	%rd5200, %rd5198, %rd5199;
	shf.l.wrap.b32 	%r3565, %r3559, %r3560, 25;
	shf.l.wrap.b32 	%r3566, %r3560, %r3559, 25;
	mov.b64 	%rd5201, {%r3566, %r3565};
	xor.b64  	%rd5202, %rd5200, %rd5201;
	and.b64  	%rd5203, %rd5171, %rd5134;
	or.b64  	%rd5204, %rd5171, %rd5134;
	and.b64  	%rd5205, %rd5204, %rd5097;
	or.b64  	%rd5206, %rd5205, %rd5203;
	add.s64 	%rd5207, %rd5206, %rd5202;
	add.s64 	%rd5208, %rd5207, %rd5196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3567,%dummy}, %rd5147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3568}, %rd5147;
	}
	shf.r.wrap.b32 	%r3569, %r3568, %r3567, 19;
	shf.r.wrap.b32 	%r3570, %r3567, %r3568, 19;
	mov.b64 	%rd5209, {%r3570, %r3569};
	shf.l.wrap.b32 	%r3571, %r3567, %r3568, 3;
	shf.l.wrap.b32 	%r3572, %r3568, %r3567, 3;
	mov.b64 	%rd5210, {%r3572, %r3571};
	xor.b64  	%rd5211, %rd5209, %rd5210;
	shr.u64 	%rd5212, %rd5147, 6;
	xor.b64  	%rd5213, %rd5211, %rd5212;
	shf.r.wrap.b32 	%r3573, %r3230, %r3229, 1;
	shf.r.wrap.b32 	%r3574, %r3229, %r3230, 1;
	mov.b64 	%rd5214, {%r3574, %r3573};
	shf.r.wrap.b32 	%r3575, %r3230, %r3229, 8;
	shf.r.wrap.b32 	%r3576, %r3229, %r3230, 8;
	mov.b64 	%rd5215, {%r3576, %r3575};
	xor.b64  	%rd5216, %rd5214, %rd5215;
	shr.u64 	%rd5217, %rd4666, 7;
	xor.b64  	%rd5218, %rd5216, %rd5217;
	add.s64 	%rd5219, %rd5213, %rd4629;
	add.s64 	%rd5220, %rd5219, %rd4962;
	add.s64 	%rd5221, %rd5220, %rd5218;
	add.s64 	%rd5222, %rd5221, %rd5086;
	xor.b64  	%rd5223, %rd5160, %rd5123;
	and.b64  	%rd5224, %rd5197, %rd5223;
	xor.b64  	%rd5225, %rd5224, %rd5123;
	add.s64 	%rd5226, %rd5222, %rd5225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3577,%dummy}, %rd5197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3578}, %rd5197;
	}
	shf.r.wrap.b32 	%r3579, %r3578, %r3577, 14;
	shf.r.wrap.b32 	%r3580, %r3577, %r3578, 14;
	mov.b64 	%rd5227, {%r3580, %r3579};
	shf.r.wrap.b32 	%r3581, %r3578, %r3577, 18;
	shf.r.wrap.b32 	%r3582, %r3577, %r3578, 18;
	mov.b64 	%rd5228, {%r3582, %r3581};
	xor.b64  	%rd5229, %rd5227, %rd5228;
	shf.l.wrap.b32 	%r3583, %r3577, %r3578, 23;
	shf.l.wrap.b32 	%r3584, %r3578, %r3577, 23;
	mov.b64 	%rd5230, {%r3584, %r3583};
	xor.b64  	%rd5231, %rd5229, %rd5230;
	add.s64 	%rd5232, %rd5226, %rd5231;
	add.s64 	%rd5233, %rd5232, 1977374033974150939;
	add.s64 	%rd5234, %rd5233, %rd5097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3585,%dummy}, %rd5208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3586}, %rd5208;
	}
	shf.r.wrap.b32 	%r3587, %r3586, %r3585, 28;
	shf.r.wrap.b32 	%r3588, %r3585, %r3586, 28;
	mov.b64 	%rd5235, {%r3588, %r3587};
	shf.l.wrap.b32 	%r3589, %r3585, %r3586, 30;
	shf.l.wrap.b32 	%r3590, %r3586, %r3585, 30;
	mov.b64 	%rd5236, {%r3590, %r3589};
	xor.b64  	%rd5237, %rd5235, %rd5236;
	shf.l.wrap.b32 	%r3591, %r3585, %r3586, 25;
	shf.l.wrap.b32 	%r3592, %r3586, %r3585, 25;
	mov.b64 	%rd5238, {%r3592, %r3591};
	xor.b64  	%rd5239, %rd5237, %rd5238;
	and.b64  	%rd5240, %rd5208, %rd5171;
	or.b64  	%rd5241, %rd5208, %rd5171;
	and.b64  	%rd5242, %rd5241, %rd5134;
	or.b64  	%rd5243, %rd5242, %rd5240;
	add.s64 	%rd5244, %rd5243, %rd5239;
	add.s64 	%rd5245, %rd5244, %rd5233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3593,%dummy}, %rd5184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3594}, %rd5184;
	}
	shf.r.wrap.b32 	%r3595, %r3594, %r3593, 19;
	shf.r.wrap.b32 	%r3596, %r3593, %r3594, 19;
	mov.b64 	%rd5246, {%r3596, %r3595};
	shf.l.wrap.b32 	%r3597, %r3593, %r3594, 3;
	shf.l.wrap.b32 	%r3598, %r3594, %r3593, 3;
	mov.b64 	%rd5247, {%r3598, %r3597};
	xor.b64  	%rd5248, %rd5246, %rd5247;
	shr.u64 	%rd5249, %rd5184, 6;
	xor.b64  	%rd5250, %rd5248, %rd5249;
	shf.r.wrap.b32 	%r3599, %r3256, %r3255, 1;
	shf.r.wrap.b32 	%r3600, %r3255, %r3256, 1;
	mov.b64 	%rd5251, {%r3600, %r3599};
	shf.r.wrap.b32 	%r3601, %r3256, %r3255, 8;
	shf.r.wrap.b32 	%r3602, %r3255, %r3256, 8;
	mov.b64 	%rd5252, {%r3602, %r3601};
	xor.b64  	%rd5253, %rd5251, %rd5252;
	shr.u64 	%rd5254, %rd4703, 7;
	xor.b64  	%rd5255, %rd5253, %rd5254;
	add.s64 	%rd5256, %rd5250, %rd4666;
	add.s64 	%rd5257, %rd5256, %rd4999;
	add.s64 	%rd5258, %rd5257, %rd5255;
	add.s64 	%rd5259, %rd5258, %rd5123;
	xor.b64  	%rd5260, %rd5197, %rd5160;
	and.b64  	%rd5261, %rd5234, %rd5260;
	xor.b64  	%rd5262, %rd5261, %rd5160;
	add.s64 	%rd5263, %rd5259, %rd5262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3603,%dummy}, %rd5234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3604}, %rd5234;
	}
	shf.r.wrap.b32 	%r3605, %r3604, %r3603, 14;
	shf.r.wrap.b32 	%r3606, %r3603, %r3604, 14;
	mov.b64 	%rd5264, {%r3606, %r3605};
	shf.r.wrap.b32 	%r3607, %r3604, %r3603, 18;
	shf.r.wrap.b32 	%r3608, %r3603, %r3604, 18;
	mov.b64 	%rd5265, {%r3608, %r3607};
	xor.b64  	%rd5266, %rd5264, %rd5265;
	shf.l.wrap.b32 	%r3609, %r3603, %r3604, 23;
	shf.l.wrap.b32 	%r3610, %r3604, %r3603, 23;
	mov.b64 	%rd5267, {%r3610, %r3609};
	xor.b64  	%rd5268, %rd5266, %rd5267;
	add.s64 	%rd5269, %rd5263, %rd5268;
	add.s64 	%rd5270, %rd5269, 2944078676154940804;
	add.s64 	%rd5271, %rd5270, %rd5134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3611,%dummy}, %rd5245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3612}, %rd5245;
	}
	shf.r.wrap.b32 	%r3613, %r3612, %r3611, 28;
	shf.r.wrap.b32 	%r3614, %r3611, %r3612, 28;
	mov.b64 	%rd5272, {%r3614, %r3613};
	shf.l.wrap.b32 	%r3615, %r3611, %r3612, 30;
	shf.l.wrap.b32 	%r3616, %r3612, %r3611, 30;
	mov.b64 	%rd5273, {%r3616, %r3615};
	xor.b64  	%rd5274, %rd5272, %rd5273;
	shf.l.wrap.b32 	%r3617, %r3611, %r3612, 25;
	shf.l.wrap.b32 	%r3618, %r3612, %r3611, 25;
	mov.b64 	%rd5275, {%r3618, %r3617};
	xor.b64  	%rd5276, %rd5274, %rd5275;
	and.b64  	%rd5277, %rd5245, %rd5208;
	or.b64  	%rd5278, %rd5245, %rd5208;
	and.b64  	%rd5279, %rd5278, %rd5171;
	or.b64  	%rd5280, %rd5279, %rd5277;
	add.s64 	%rd5281, %rd5280, %rd5276;
	add.s64 	%rd5282, %rd5281, %rd5270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3619,%dummy}, %rd5221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3620}, %rd5221;
	}
	shf.r.wrap.b32 	%r3621, %r3620, %r3619, 19;
	shf.r.wrap.b32 	%r3622, %r3619, %r3620, 19;
	mov.b64 	%rd5283, {%r3622, %r3621};
	shf.l.wrap.b32 	%r3623, %r3619, %r3620, 3;
	shf.l.wrap.b32 	%r3624, %r3620, %r3619, 3;
	mov.b64 	%rd5284, {%r3624, %r3623};
	xor.b64  	%rd5285, %rd5283, %rd5284;
	shr.u64 	%rd5286, %rd5221, 6;
	xor.b64  	%rd5287, %rd5285, %rd5286;
	shf.r.wrap.b32 	%r3625, %r3282, %r3281, 1;
	shf.r.wrap.b32 	%r3626, %r3281, %r3282, 1;
	mov.b64 	%rd5288, {%r3626, %r3625};
	shf.r.wrap.b32 	%r3627, %r3282, %r3281, 8;
	shf.r.wrap.b32 	%r3628, %r3281, %r3282, 8;
	mov.b64 	%rd5289, {%r3628, %r3627};
	xor.b64  	%rd5290, %rd5288, %rd5289;
	shr.u64 	%rd5291, %rd4740, 7;
	xor.b64  	%rd5292, %rd5290, %rd5291;
	add.s64 	%rd5293, %rd5287, %rd4703;
	add.s64 	%rd5294, %rd5293, %rd5036;
	add.s64 	%rd5295, %rd5294, %rd5292;
	add.s64 	%rd5296, %rd5295, %rd5160;
	xor.b64  	%rd5297, %rd5234, %rd5197;
	and.b64  	%rd5298, %rd5271, %rd5297;
	xor.b64  	%rd5299, %rd5298, %rd5197;
	add.s64 	%rd5300, %rd5296, %rd5299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3629,%dummy}, %rd5271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3630}, %rd5271;
	}
	shf.r.wrap.b32 	%r3631, %r3630, %r3629, 14;
	shf.r.wrap.b32 	%r3632, %r3629, %r3630, 14;
	mov.b64 	%rd5301, {%r3632, %r3631};
	shf.r.wrap.b32 	%r3633, %r3630, %r3629, 18;
	shf.r.wrap.b32 	%r3634, %r3629, %r3630, 18;
	mov.b64 	%rd5302, {%r3634, %r3633};
	xor.b64  	%rd5303, %rd5301, %rd5302;
	shf.l.wrap.b32 	%r3635, %r3629, %r3630, 23;
	shf.l.wrap.b32 	%r3636, %r3630, %r3629, 23;
	mov.b64 	%rd5304, {%r3636, %r3635};
	xor.b64  	%rd5305, %rd5303, %rd5304;
	add.s64 	%rd5306, %rd5300, %rd5305;
	add.s64 	%rd5307, %rd5306, 3659926193048069267;
	add.s64 	%rd5308, %rd5307, %rd5171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3637,%dummy}, %rd5282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3638}, %rd5282;
	}
	shf.r.wrap.b32 	%r3639, %r3638, %r3637, 28;
	shf.r.wrap.b32 	%r3640, %r3637, %r3638, 28;
	mov.b64 	%rd5309, {%r3640, %r3639};
	shf.l.wrap.b32 	%r3641, %r3637, %r3638, 30;
	shf.l.wrap.b32 	%r3642, %r3638, %r3637, 30;
	mov.b64 	%rd5310, {%r3642, %r3641};
	xor.b64  	%rd5311, %rd5309, %rd5310;
	shf.l.wrap.b32 	%r3643, %r3637, %r3638, 25;
	shf.l.wrap.b32 	%r3644, %r3638, %r3637, 25;
	mov.b64 	%rd5312, {%r3644, %r3643};
	xor.b64  	%rd5313, %rd5311, %rd5312;
	and.b64  	%rd5314, %rd5282, %rd5245;
	or.b64  	%rd5315, %rd5282, %rd5245;
	and.b64  	%rd5316, %rd5315, %rd5208;
	or.b64  	%rd5317, %rd5316, %rd5314;
	add.s64 	%rd5318, %rd5317, %rd5313;
	add.s64 	%rd5319, %rd5318, %rd5307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3645,%dummy}, %rd5258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3646}, %rd5258;
	}
	shf.r.wrap.b32 	%r3647, %r3646, %r3645, 19;
	shf.r.wrap.b32 	%r3648, %r3645, %r3646, 19;
	mov.b64 	%rd5320, {%r3648, %r3647};
	shf.l.wrap.b32 	%r3649, %r3645, %r3646, 3;
	shf.l.wrap.b32 	%r3650, %r3646, %r3645, 3;
	mov.b64 	%rd5321, {%r3650, %r3649};
	xor.b64  	%rd5322, %rd5320, %rd5321;
	shr.u64 	%rd5323, %rd5258, 6;
	xor.b64  	%rd5324, %rd5322, %rd5323;
	shf.r.wrap.b32 	%r3651, %r3308, %r3307, 1;
	shf.r.wrap.b32 	%r3652, %r3307, %r3308, 1;
	mov.b64 	%rd5325, {%r3652, %r3651};
	shf.r.wrap.b32 	%r3653, %r3308, %r3307, 8;
	shf.r.wrap.b32 	%r3654, %r3307, %r3308, 8;
	mov.b64 	%rd5326, {%r3654, %r3653};
	xor.b64  	%rd5327, %rd5325, %rd5326;
	shr.u64 	%rd5328, %rd4777, 7;
	xor.b64  	%rd5329, %rd5327, %rd5328;
	add.s64 	%rd5330, %rd5324, %rd4740;
	add.s64 	%rd5331, %rd5330, %rd5073;
	add.s64 	%rd5332, %rd5331, %rd5329;
	add.s64 	%rd5333, %rd5332, %rd5197;
	xor.b64  	%rd5334, %rd5271, %rd5234;
	and.b64  	%rd5335, %rd5308, %rd5334;
	xor.b64  	%rd5336, %rd5335, %rd5234;
	add.s64 	%rd5337, %rd5333, %rd5336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3655,%dummy}, %rd5308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3656}, %rd5308;
	}
	shf.r.wrap.b32 	%r3657, %r3656, %r3655, 14;
	shf.r.wrap.b32 	%r3658, %r3655, %r3656, 14;
	mov.b64 	%rd5338, {%r3658, %r3657};
	shf.r.wrap.b32 	%r3659, %r3656, %r3655, 18;
	shf.r.wrap.b32 	%r3660, %r3655, %r3656, 18;
	mov.b64 	%rd5339, {%r3660, %r3659};
	xor.b64  	%rd5340, %rd5338, %rd5339;
	shf.l.wrap.b32 	%r3661, %r3655, %r3656, 23;
	shf.l.wrap.b32 	%r3662, %r3656, %r3655, 23;
	mov.b64 	%rd5341, {%r3662, %r3661};
	xor.b64  	%rd5342, %rd5340, %rd5341;
	add.s64 	%rd5343, %rd5337, %rd5342;
	add.s64 	%rd5344, %rd5343, 4368137639120453308;
	add.s64 	%rd5345, %rd5344, %rd5208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3663,%dummy}, %rd5319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3664}, %rd5319;
	}
	shf.r.wrap.b32 	%r3665, %r3664, %r3663, 28;
	shf.r.wrap.b32 	%r3666, %r3663, %r3664, 28;
	mov.b64 	%rd5346, {%r3666, %r3665};
	shf.l.wrap.b32 	%r3667, %r3663, %r3664, 30;
	shf.l.wrap.b32 	%r3668, %r3664, %r3663, 30;
	mov.b64 	%rd5347, {%r3668, %r3667};
	xor.b64  	%rd5348, %rd5346, %rd5347;
	shf.l.wrap.b32 	%r3669, %r3663, %r3664, 25;
	shf.l.wrap.b32 	%r3670, %r3664, %r3663, 25;
	mov.b64 	%rd5349, {%r3670, %r3669};
	xor.b64  	%rd5350, %rd5348, %rd5349;
	and.b64  	%rd5351, %rd5319, %rd5282;
	or.b64  	%rd5352, %rd5319, %rd5282;
	and.b64  	%rd5353, %rd5352, %rd5245;
	or.b64  	%rd5354, %rd5353, %rd5351;
	add.s64 	%rd5355, %rd5354, %rd5350;
	add.s64 	%rd5356, %rd5355, %rd5344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3671,%dummy}, %rd5295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3672}, %rd5295;
	}
	shf.r.wrap.b32 	%r3673, %r3672, %r3671, 19;
	shf.r.wrap.b32 	%r3674, %r3671, %r3672, 19;
	mov.b64 	%rd5357, {%r3674, %r3673};
	shf.l.wrap.b32 	%r3675, %r3671, %r3672, 3;
	shf.l.wrap.b32 	%r3676, %r3672, %r3671, 3;
	mov.b64 	%rd5358, {%r3676, %r3675};
	xor.b64  	%rd5359, %rd5357, %rd5358;
	shr.u64 	%rd5360, %rd5295, 6;
	xor.b64  	%rd5361, %rd5359, %rd5360;
	shf.r.wrap.b32 	%r3677, %r3334, %r3333, 1;
	shf.r.wrap.b32 	%r3678, %r3333, %r3334, 1;
	mov.b64 	%rd5362, {%r3678, %r3677};
	shf.r.wrap.b32 	%r3679, %r3334, %r3333, 8;
	shf.r.wrap.b32 	%r3680, %r3333, %r3334, 8;
	mov.b64 	%rd5363, {%r3680, %r3679};
	xor.b64  	%rd5364, %rd5362, %rd5363;
	shr.u64 	%rd5365, %rd4814, 7;
	xor.b64  	%rd5366, %rd5364, %rd5365;
	add.s64 	%rd5367, %rd5361, %rd4777;
	add.s64 	%rd5368, %rd5367, %rd5110;
	add.s64 	%rd5369, %rd5368, %rd5366;
	add.s64 	%rd5370, %rd5369, %rd5234;
	xor.b64  	%rd5371, %rd5308, %rd5271;
	and.b64  	%rd5372, %rd5345, %rd5371;
	xor.b64  	%rd5373, %rd5372, %rd5271;
	add.s64 	%rd5374, %rd5370, %rd5373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3681,%dummy}, %rd5345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3682}, %rd5345;
	}
	shf.r.wrap.b32 	%r3683, %r3682, %r3681, 14;
	shf.r.wrap.b32 	%r3684, %r3681, %r3682, 14;
	mov.b64 	%rd5375, {%r3684, %r3683};
	shf.r.wrap.b32 	%r3685, %r3682, %r3681, 18;
	shf.r.wrap.b32 	%r3686, %r3681, %r3682, 18;
	mov.b64 	%rd5376, {%r3686, %r3685};
	xor.b64  	%rd5377, %rd5375, %rd5376;
	shf.l.wrap.b32 	%r3687, %r3681, %r3682, 23;
	shf.l.wrap.b32 	%r3688, %r3682, %r3681, 23;
	mov.b64 	%rd5378, {%r3688, %r3687};
	xor.b64  	%rd5379, %rd5377, %rd5378;
	add.s64 	%rd5380, %rd5374, %rd5379;
	add.s64 	%rd5381, %rd5380, 4836135668995329356;
	add.s64 	%rd5382, %rd5381, %rd5245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3689,%dummy}, %rd5356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3690}, %rd5356;
	}
	shf.r.wrap.b32 	%r3691, %r3690, %r3689, 28;
	shf.r.wrap.b32 	%r3692, %r3689, %r3690, 28;
	mov.b64 	%rd5383, {%r3692, %r3691};
	shf.l.wrap.b32 	%r3693, %r3689, %r3690, 30;
	shf.l.wrap.b32 	%r3694, %r3690, %r3689, 30;
	mov.b64 	%rd5384, {%r3694, %r3693};
	xor.b64  	%rd5385, %rd5383, %rd5384;
	shf.l.wrap.b32 	%r3695, %r3689, %r3690, 25;
	shf.l.wrap.b32 	%r3696, %r3690, %r3689, 25;
	mov.b64 	%rd5386, {%r3696, %r3695};
	xor.b64  	%rd5387, %rd5385, %rd5386;
	and.b64  	%rd5388, %rd5356, %rd5319;
	or.b64  	%rd5389, %rd5356, %rd5319;
	and.b64  	%rd5390, %rd5389, %rd5282;
	or.b64  	%rd5391, %rd5390, %rd5388;
	add.s64 	%rd5392, %rd5391, %rd5387;
	add.s64 	%rd5393, %rd5392, %rd5381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3697,%dummy}, %rd5332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3698}, %rd5332;
	}
	shf.r.wrap.b32 	%r3699, %r3698, %r3697, 19;
	shf.r.wrap.b32 	%r3700, %r3697, %r3698, 19;
	mov.b64 	%rd5394, {%r3700, %r3699};
	shf.l.wrap.b32 	%r3701, %r3697, %r3698, 3;
	shf.l.wrap.b32 	%r3702, %r3698, %r3697, 3;
	mov.b64 	%rd5395, {%r3702, %r3701};
	xor.b64  	%rd5396, %rd5394, %rd5395;
	shr.u64 	%rd5397, %rd5332, 6;
	xor.b64  	%rd5398, %rd5396, %rd5397;
	shf.r.wrap.b32 	%r3703, %r3360, %r3359, 1;
	shf.r.wrap.b32 	%r3704, %r3359, %r3360, 1;
	mov.b64 	%rd5399, {%r3704, %r3703};
	shf.r.wrap.b32 	%r3705, %r3360, %r3359, 8;
	shf.r.wrap.b32 	%r3706, %r3359, %r3360, 8;
	mov.b64 	%rd5400, {%r3706, %r3705};
	xor.b64  	%rd5401, %rd5399, %rd5400;
	shr.u64 	%rd5402, %rd4851, 7;
	xor.b64  	%rd5403, %rd5401, %rd5402;
	add.s64 	%rd5404, %rd5398, %rd4814;
	add.s64 	%rd5405, %rd5404, %rd5147;
	add.s64 	%rd5406, %rd5405, %rd5403;
	add.s64 	%rd5407, %rd5406, %rd5271;
	xor.b64  	%rd5408, %rd5345, %rd5308;
	and.b64  	%rd5409, %rd5382, %rd5408;
	xor.b64  	%rd5410, %rd5409, %rd5308;
	add.s64 	%rd5411, %rd5407, %rd5410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3707,%dummy}, %rd5382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3708}, %rd5382;
	}
	shf.r.wrap.b32 	%r3709, %r3708, %r3707, 14;
	shf.r.wrap.b32 	%r3710, %r3707, %r3708, 14;
	mov.b64 	%rd5412, {%r3710, %r3709};
	shf.r.wrap.b32 	%r3711, %r3708, %r3707, 18;
	shf.r.wrap.b32 	%r3712, %r3707, %r3708, 18;
	mov.b64 	%rd5413, {%r3712, %r3711};
	xor.b64  	%rd5414, %rd5412, %rd5413;
	shf.l.wrap.b32 	%r3713, %r3707, %r3708, 23;
	shf.l.wrap.b32 	%r3714, %r3708, %r3707, 23;
	mov.b64 	%rd5415, {%r3714, %r3713};
	xor.b64  	%rd5416, %rd5414, %rd5415;
	add.s64 	%rd5417, %rd5411, %rd5416;
	add.s64 	%rd5418, %rd5417, 5532061633213252278;
	add.s64 	%rd14, %rd5418, %rd5282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3715,%dummy}, %rd5393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3716}, %rd5393;
	}
	shf.r.wrap.b32 	%r3717, %r3716, %r3715, 28;
	shf.r.wrap.b32 	%r3718, %r3715, %r3716, 28;
	mov.b64 	%rd5419, {%r3718, %r3717};
	shf.l.wrap.b32 	%r3719, %r3715, %r3716, 30;
	shf.l.wrap.b32 	%r3720, %r3716, %r3715, 30;
	mov.b64 	%rd5420, {%r3720, %r3719};
	xor.b64  	%rd5421, %rd5419, %rd5420;
	shf.l.wrap.b32 	%r3721, %r3715, %r3716, 25;
	shf.l.wrap.b32 	%r3722, %r3716, %r3715, 25;
	mov.b64 	%rd5422, {%r3722, %r3721};
	xor.b64  	%rd5423, %rd5421, %rd5422;
	and.b64  	%rd5424, %rd5393, %rd5356;
	or.b64  	%rd5425, %rd5393, %rd5356;
	and.b64  	%rd5426, %rd5425, %rd5319;
	or.b64  	%rd5427, %rd5426, %rd5424;
	add.s64 	%rd5428, %rd5427, %rd5423;
	add.s64 	%rd5429, %rd5428, %rd5418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3723,%dummy}, %rd5369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3724}, %rd5369;
	}
	shf.r.wrap.b32 	%r3725, %r3724, %r3723, 19;
	shf.r.wrap.b32 	%r3726, %r3723, %r3724, 19;
	mov.b64 	%rd5430, {%r3726, %r3725};
	shf.l.wrap.b32 	%r3727, %r3723, %r3724, 3;
	shf.l.wrap.b32 	%r3728, %r3724, %r3723, 3;
	mov.b64 	%rd5431, {%r3728, %r3727};
	xor.b64  	%rd5432, %rd5430, %rd5431;
	shr.u64 	%rd5433, %rd5369, 6;
	xor.b64  	%rd5434, %rd5432, %rd5433;
	shf.r.wrap.b32 	%r3729, %r3386, %r3385, 1;
	shf.r.wrap.b32 	%r3730, %r3385, %r3386, 1;
	mov.b64 	%rd5435, {%r3730, %r3729};
	shf.r.wrap.b32 	%r3731, %r3386, %r3385, 8;
	shf.r.wrap.b32 	%r3732, %r3385, %r3386, 8;
	mov.b64 	%rd5436, {%r3732, %r3731};
	xor.b64  	%rd5437, %rd5435, %rd5436;
	shr.u64 	%rd5438, %rd4888, 7;
	xor.b64  	%rd5439, %rd5437, %rd5438;
	add.s64 	%rd5440, %rd5434, %rd4851;
	add.s64 	%rd5441, %rd5440, %rd5184;
	add.s64 	%rd5442, %rd5441, %rd5439;
	add.s64 	%rd5443, %rd5442, %rd5308;
	xor.b64  	%rd5444, %rd5382, %rd5345;
	and.b64  	%rd5445, %rd14, %rd5444;
	xor.b64  	%rd5446, %rd5445, %rd5345;
	add.s64 	%rd5447, %rd5443, %rd5446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3733,%dummy}, %rd14;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3734}, %rd14;
	}
	shf.r.wrap.b32 	%r3735, %r3734, %r3733, 14;
	shf.r.wrap.b32 	%r3736, %r3733, %r3734, 14;
	mov.b64 	%rd5448, {%r3736, %r3735};
	shf.r.wrap.b32 	%r3737, %r3734, %r3733, 18;
	shf.r.wrap.b32 	%r3738, %r3733, %r3734, 18;
	mov.b64 	%rd5449, {%r3738, %r3737};
	xor.b64  	%rd5450, %rd5448, %rd5449;
	shf.l.wrap.b32 	%r3739, %r3733, %r3734, 23;
	shf.l.wrap.b32 	%r3740, %r3734, %r3733, 23;
	mov.b64 	%rd5451, {%r3740, %r3739};
	xor.b64  	%rd5452, %rd5450, %rd5451;
	add.s64 	%rd5453, %rd5447, %rd5452;
	add.s64 	%rd5454, %rd5453, 6448918945643986474;
	add.s64 	%rd15, %rd5454, %rd5319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3741,%dummy}, %rd5429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3742}, %rd5429;
	}
	shf.r.wrap.b32 	%r3743, %r3742, %r3741, 28;
	shf.r.wrap.b32 	%r3744, %r3741, %r3742, 28;
	mov.b64 	%rd5455, {%r3744, %r3743};
	shf.l.wrap.b32 	%r3745, %r3741, %r3742, 30;
	shf.l.wrap.b32 	%r3746, %r3742, %r3741, 30;
	mov.b64 	%rd5456, {%r3746, %r3745};
	xor.b64  	%rd5457, %rd5455, %rd5456;
	shf.l.wrap.b32 	%r3747, %r3741, %r3742, 25;
	shf.l.wrap.b32 	%r3748, %r3742, %r3741, 25;
	mov.b64 	%rd5458, {%r3748, %r3747};
	xor.b64  	%rd5459, %rd5457, %rd5458;
	and.b64  	%rd5460, %rd5429, %rd5393;
	or.b64  	%rd5461, %rd5429, %rd5393;
	and.b64  	%rd5462, %rd5461, %rd5356;
	or.b64  	%rd5463, %rd5462, %rd5460;
	add.s64 	%rd5464, %rd5463, %rd5459;
	add.s64 	%rd5465, %rd5464, %rd5454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3749,%dummy}, %rd5406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3750}, %rd5406;
	}
	shf.r.wrap.b32 	%r3751, %r3750, %r3749, 19;
	shf.r.wrap.b32 	%r3752, %r3749, %r3750, 19;
	mov.b64 	%rd5466, {%r3752, %r3751};
	shf.l.wrap.b32 	%r3753, %r3749, %r3750, 3;
	shf.l.wrap.b32 	%r3754, %r3750, %r3749, 3;
	mov.b64 	%rd5467, {%r3754, %r3753};
	xor.b64  	%rd5468, %rd5466, %rd5467;
	shr.u64 	%rd5469, %rd5406, 6;
	xor.b64  	%rd5470, %rd5468, %rd5469;
	shf.r.wrap.b32 	%r3755, %r3412, %r3411, 1;
	shf.r.wrap.b32 	%r3756, %r3411, %r3412, 1;
	mov.b64 	%rd5471, {%r3756, %r3755};
	shf.r.wrap.b32 	%r3757, %r3412, %r3411, 8;
	shf.r.wrap.b32 	%r3758, %r3411, %r3412, 8;
	mov.b64 	%rd5472, {%r3758, %r3757};
	xor.b64  	%rd5473, %rd5471, %rd5472;
	shr.u64 	%rd5474, %rd4925, 7;
	xor.b64  	%rd5475, %rd5473, %rd5474;
	add.s64 	%rd5476, %rd5470, %rd4888;
	add.s64 	%rd5477, %rd5476, %rd5221;
	add.s64 	%rd5478, %rd5477, %rd5475;
	add.s64 	%rd5479, %rd5478, %rd5345;
	xor.b64  	%rd5480, %rd14, %rd5382;
	and.b64  	%rd5481, %rd15, %rd5480;
	xor.b64  	%rd5482, %rd5481, %rd5382;
	add.s64 	%rd5483, %rd5479, %rd5482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3759,%dummy}, %rd15;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3760}, %rd15;
	}
	shf.r.wrap.b32 	%r3761, %r3760, %r3759, 14;
	shf.r.wrap.b32 	%r3762, %r3759, %r3760, 14;
	mov.b64 	%rd5484, {%r3762, %r3761};
	shf.r.wrap.b32 	%r3763, %r3760, %r3759, 18;
	shf.r.wrap.b32 	%r3764, %r3759, %r3760, 18;
	mov.b64 	%rd5485, {%r3764, %r3763};
	xor.b64  	%rd5486, %rd5484, %rd5485;
	shf.l.wrap.b32 	%r3765, %r3759, %r3760, 23;
	shf.l.wrap.b32 	%r3766, %r3760, %r3759, 23;
	mov.b64 	%rd5487, {%r3766, %r3765};
	xor.b64  	%rd5488, %rd5486, %rd5487;
	add.s64 	%rd5489, %rd5483, %rd5488;
	add.s64 	%rd5490, %rd5489, 6902733635092675308;
	add.s64 	%rd16, %rd5490, %rd5356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3767,%dummy}, %rd5465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3768}, %rd5465;
	}
	shf.r.wrap.b32 	%r3769, %r3768, %r3767, 28;
	shf.r.wrap.b32 	%r3770, %r3767, %r3768, 28;
	mov.b64 	%rd5491, {%r3770, %r3769};
	shf.l.wrap.b32 	%r3771, %r3767, %r3768, 30;
	shf.l.wrap.b32 	%r3772, %r3768, %r3767, 30;
	mov.b64 	%rd5492, {%r3772, %r3771};
	xor.b64  	%rd5493, %rd5491, %rd5492;
	shf.l.wrap.b32 	%r3773, %r3767, %r3768, 25;
	shf.l.wrap.b32 	%r3774, %r3768, %r3767, 25;
	mov.b64 	%rd5494, {%r3774, %r3773};
	xor.b64  	%rd5495, %rd5493, %rd5494;
	and.b64  	%rd5496, %rd5465, %rd5429;
	or.b64  	%rd5497, %rd5465, %rd5429;
	and.b64  	%rd5498, %rd5497, %rd5393;
	or.b64  	%rd5499, %rd5498, %rd5496;
	add.s64 	%rd5500, %rd5499, %rd5495;
	add.s64 	%rd5501, %rd5500, %rd5490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3775,%dummy}, %rd5442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3776}, %rd5442;
	}
	shf.r.wrap.b32 	%r3777, %r3776, %r3775, 19;
	shf.r.wrap.b32 	%r3778, %r3775, %r3776, 19;
	mov.b64 	%rd5502, {%r3778, %r3777};
	shf.l.wrap.b32 	%r3779, %r3775, %r3776, 3;
	shf.l.wrap.b32 	%r3780, %r3776, %r3775, 3;
	mov.b64 	%rd5503, {%r3780, %r3779};
	xor.b64  	%rd5504, %rd5502, %rd5503;
	shr.u64 	%rd5505, %rd5442, 6;
	xor.b64  	%rd5506, %rd5504, %rd5505;
	shf.r.wrap.b32 	%r3781, %r3438, %r3437, 1;
	shf.r.wrap.b32 	%r3782, %r3437, %r3438, 1;
	mov.b64 	%rd5507, {%r3782, %r3781};
	shf.r.wrap.b32 	%r3783, %r3438, %r3437, 8;
	shf.r.wrap.b32 	%r3784, %r3437, %r3438, 8;
	mov.b64 	%rd5508, {%r3784, %r3783};
	xor.b64  	%rd5509, %rd5507, %rd5508;
	shr.u64 	%rd5510, %rd4962, 7;
	xor.b64  	%rd5511, %rd5509, %rd5510;
	add.s64 	%rd5512, %rd5506, %rd4925;
	add.s64 	%rd5513, %rd5512, %rd5258;
	add.s64 	%rd5514, %rd5513, %rd5511;
	add.s64 	%rd5515, %rd5514, %rd5382;
	xor.b64  	%rd5516, %rd15, %rd14;
	and.b64  	%rd5517, %rd16, %rd5516;
	xor.b64  	%rd5518, %rd5517, %rd14;
	add.s64 	%rd5519, %rd5515, %rd5518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3785,%dummy}, %rd16;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3786}, %rd16;
	}
	shf.r.wrap.b32 	%r3787, %r3786, %r3785, 14;
	shf.r.wrap.b32 	%r3788, %r3785, %r3786, 14;
	mov.b64 	%rd5520, {%r3788, %r3787};
	shf.r.wrap.b32 	%r3789, %r3786, %r3785, 18;
	shf.r.wrap.b32 	%r3790, %r3785, %r3786, 18;
	mov.b64 	%rd5521, {%r3790, %r3789};
	xor.b64  	%rd5522, %rd5520, %rd5521;
	shf.l.wrap.b32 	%r3791, %r3785, %r3786, 23;
	shf.l.wrap.b32 	%r3792, %r3786, %r3785, 23;
	mov.b64 	%rd5523, {%r3792, %r3791};
	xor.b64  	%rd5524, %rd5522, %rd5523;
	add.s64 	%rd5525, %rd5519, %rd5524;
	add.s64 	%rd5526, %rd5525, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3793,%dummy}, %rd5501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3794}, %rd5501;
	}
	shf.r.wrap.b32 	%r3795, %r3794, %r3793, 28;
	shf.r.wrap.b32 	%r3796, %r3793, %r3794, 28;
	mov.b64 	%rd5527, {%r3796, %r3795};
	shf.l.wrap.b32 	%r3797, %r3793, %r3794, 30;
	shf.l.wrap.b32 	%r3798, %r3794, %r3793, 30;
	mov.b64 	%rd5528, {%r3798, %r3797};
	xor.b64  	%rd5529, %rd5527, %rd5528;
	shf.l.wrap.b32 	%r3799, %r3793, %r3794, 25;
	shf.l.wrap.b32 	%r3800, %r3794, %r3793, 25;
	mov.b64 	%rd5530, {%r3800, %r3799};
	xor.b64  	%rd5531, %rd5529, %rd5530;
	and.b64  	%rd5532, %rd5501, %rd5465;
	or.b64  	%rd5533, %rd5501, %rd5465;
	and.b64  	%rd5534, %rd5533, %rd5429;
	or.b64  	%rd5535, %rd5534, %rd5532;
	add.s64 	%rd5536, %rd5531, %rd5535;
	add.s64 	%rd5537, %rd5536, %rd5526;
	add.s64 	%rd17, %rd5537, 7640891576956012808;
	add.s64 	%rd18, %rd5501, -4942790177534073029;
	add.s64 	%rd19, %rd5465, 4354685564936845355;
	add.s64 	%rd20, %rd5429, -6534734903238641935;
	add.s64 	%rd5538, %rd5393, %rd5526;
	add.s64 	%rd21, %rd5538, 5840696475078001361;
	add.s64 	%rd22, %rd16, -7276294671716946913;
	add.s64 	%rd23, %rd15, 2270897969802886507;
	mov.u32 	%r6875, 0;
	st.local.v4.u32 	[%rd1], {%r6875, %r6875, %r6875, %r6875};
	st.local.v4.u32 	[%rd1+16], {%r6875, %r6875, %r6875, %r6875};
	st.local.v4.u32 	[%rd1+32], {%r6875, %r6875, %r6875, %r6875};
	st.local.v4.u32 	[%rd1+48], {%r6875, %r6875, %r6875, %r6875};
	st.local.v4.u32 	[%rd1+64], {%r6875, %r6875, %r6875, %r6875};
	st.local.v4.u32 	[%rd1+80], {%r6875, %r6875, %r6875, %r6875};
	st.local.v4.u32 	[%rd1+96], {%r6875, %r6875, %r6875, %r6875};
	st.local.v4.u32 	[%rd1+112], {%r6875, %r6875, %r6875, %r6875};
	add.s32 	%r3802, %r13, 7;
	shr.u32 	%r2, %r3802, 3;
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	$L__BB6_3;

$L__BB6_1:
	mul.wide.u32 	%rd5539, %r6875, 8;
	add.s64 	%rd5540, %rd129, %rd5539;
	ld.const.u64 	%rd5541, [%rd5540];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3804, %temp}, %rd5541;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3805}, %rd5541;
	}
	mov.u32 	%r3806, 291;
	mov.u32 	%r3807, 0;
	prmt.b32 	%r3808, %r3804, %r3807, %r3806;
	prmt.b32 	%r3809, %r3805, %r3807, %r3806;
	mov.b64 	%rd5542, {%r3809, %r3808};
	add.s64 	%rd5543, %rd1, %rd5539;
	st.local.u64 	[%rd5543], %rd5542;
	add.s32 	%r6875, %r6875, 1;
	setp.lt.u32 	%p2, %r6875, %r2;
	@%p2 bra 	$L__BB6_1;

	ld.local.v2.u64 	{%rd9848, %rd9847}, [%rd1];
	ld.local.v2.u64 	{%rd9846, %rd9845}, [%rd1+16];
	ld.local.v2.u64 	{%rd9844, %rd9843}, [%rd1+32];
	ld.local.v2.u64 	{%rd9842, %rd9841}, [%rd1+48];
	ld.local.v2.u64 	{%rd9840, %rd9839}, [%rd1+64];
	ld.local.v2.u64 	{%rd9838, %rd9837}, [%rd1+80];
	ld.local.v2.u64 	{%rd9836, %rd9835}, [%rd1+96];
	ld.local.u64 	%rd9834, [%rd1+112];
	bra.uni 	$L__BB6_4;

$L__BB6_3:
	mov.u64 	%rd9834, 0;
	mov.u64 	%rd9835, %rd9834;
	mov.u64 	%rd9836, %rd9834;
	mov.u64 	%rd9837, %rd9834;
	mov.u64 	%rd9838, %rd9834;
	mov.u64 	%rd9839, %rd9834;
	mov.u64 	%rd9840, %rd9834;
	mov.u64 	%rd9841, %rd9834;
	mov.u64 	%rd9842, %rd9834;
	mov.u64 	%rd9843, %rd9834;
	mov.u64 	%rd9844, %rd9834;
	mov.u64 	%rd9845, %rd9834;
	mov.u64 	%rd9846, %rd9834;
	mov.u64 	%rd9847, %rd9834;
	mov.u64 	%rd9848, %rd9834;

$L__BB6_4:
	add.s64 	%rd54, %rd14, 6620516959819538809;
	shl.b32 	%r3811, %r13, 3;
	add.s32 	%r3812, %r3811, 1016;
	cvt.u64.u32 	%rd5574, %r3812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd10;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd10;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 18;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 18;
	mov.b64 	%rd5575, {%r3816, %r3815};
	shf.r.wrap.b32 	%r3817, %r3814, %r3813, 14;
	shf.r.wrap.b32 	%r3818, %r3813, %r3814, 14;
	mov.b64 	%rd5576, {%r3818, %r3817};
	xor.b64  	%rd5577, %rd5576, %rd5575;
	shf.l.wrap.b32 	%r3819, %r3813, %r3814, 23;
	shf.l.wrap.b32 	%r3820, %r3814, %r3813, 23;
	mov.b64 	%rd5578, {%r3820, %r3819};
	xor.b64  	%rd5579, %rd5577, %rd5578;
	xor.b64  	%rd5580, %rd12, %rd11;
	and.b64  	%rd5581, %rd5580, %rd10;
	xor.b64  	%rd5582, %rd5581, %rd12;
	add.s64 	%rd5583, %rd3, %rd5579;
	add.s64 	%rd5584, %rd5583, %rd9848;
	add.s64 	%rd5585, %rd5584, %rd5582;
	add.s64 	%rd5586, %rd5585, -7031530027109396581;
	add.s64 	%rd5587, %rd5586, %rd9;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd6;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3822,%dummy}, %rd6;
	}
	shf.l.wrap.b32 	%r3823, %r3822, %r3821, 30;
	shf.l.wrap.b32 	%r3824, %r3821, %r3822, 30;
	mov.b64 	%rd5588, {%r3824, %r3823};
	shf.r.wrap.b32 	%r3825, %r3821, %r3822, 28;
	shf.r.wrap.b32 	%r3826, %r3822, %r3821, 28;
	mov.b64 	%rd5589, {%r3826, %r3825};
	xor.b64  	%rd5590, %rd5589, %rd5588;
	shf.l.wrap.b32 	%r3827, %r3822, %r3821, 25;
	shf.l.wrap.b32 	%r3828, %r3821, %r3822, 25;
	mov.b64 	%rd5591, {%r3828, %r3827};
	xor.b64  	%rd5592, %rd5590, %rd5591;
	or.b64  	%rd5593, %rd7, %rd6;
	and.b64  	%rd5594, %rd8, %rd5593;
	and.b64  	%rd5595, %rd7, %rd6;
	or.b64  	%rd5596, %rd5594, %rd5595;
	add.s64 	%rd5597, %rd5596, %rd5592;
	add.s64 	%rd5598, %rd5597, %rd5586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3829,%dummy}, %rd5587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3830}, %rd5587;
	}
	shf.r.wrap.b32 	%r3831, %r3830, %r3829, 14;
	shf.r.wrap.b32 	%r3832, %r3829, %r3830, 14;
	mov.b64 	%rd5599, {%r3832, %r3831};
	shf.r.wrap.b32 	%r3833, %r3830, %r3829, 18;
	shf.r.wrap.b32 	%r3834, %r3829, %r3830, 18;
	mov.b64 	%rd5600, {%r3834, %r3833};
	xor.b64  	%rd5601, %rd5599, %rd5600;
	shf.l.wrap.b32 	%r3835, %r3829, %r3830, 23;
	shf.l.wrap.b32 	%r3836, %r3830, %r3829, 23;
	mov.b64 	%rd5602, {%r3836, %r3835};
	xor.b64  	%rd5603, %rd5601, %rd5602;
	xor.b64  	%rd5604, %rd11, %rd10;
	and.b64  	%rd5605, %rd5587, %rd5604;
	xor.b64  	%rd5606, %rd5605, %rd11;
	add.s64 	%rd5607, %rd4, %rd9847;
	add.s64 	%rd5608, %rd5607, %rd5606;
	add.s64 	%rd5609, %rd5608, %rd5603;
	add.s64 	%rd5610, %rd5609, -8017781463737883848;
	add.s64 	%rd5611, %rd5610, %rd8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3837,%dummy}, %rd5598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3838}, %rd5598;
	}
	shf.r.wrap.b32 	%r3839, %r3838, %r3837, 28;
	shf.r.wrap.b32 	%r3840, %r3837, %r3838, 28;
	mov.b64 	%rd5612, {%r3840, %r3839};
	shf.l.wrap.b32 	%r3841, %r3837, %r3838, 30;
	shf.l.wrap.b32 	%r3842, %r3838, %r3837, 30;
	mov.b64 	%rd5613, {%r3842, %r3841};
	xor.b64  	%rd5614, %rd5612, %rd5613;
	shf.l.wrap.b32 	%r3843, %r3837, %r3838, 25;
	shf.l.wrap.b32 	%r3844, %r3838, %r3837, 25;
	mov.b64 	%rd5615, {%r3844, %r3843};
	xor.b64  	%rd5616, %rd5614, %rd5615;
	and.b64  	%rd5617, %rd5598, %rd6;
	or.b64  	%rd5618, %rd5598, %rd6;
	and.b64  	%rd5619, %rd5618, %rd7;
	or.b64  	%rd5620, %rd5619, %rd5617;
	add.s64 	%rd5621, %rd5620, %rd5616;
	add.s64 	%rd5622, %rd5621, %rd5610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3845,%dummy}, %rd5611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3846}, %rd5611;
	}
	shf.r.wrap.b32 	%r3847, %r3846, %r3845, 14;
	shf.r.wrap.b32 	%r3848, %r3845, %r3846, 14;
	mov.b64 	%rd5623, {%r3848, %r3847};
	shf.r.wrap.b32 	%r3849, %r3846, %r3845, 18;
	shf.r.wrap.b32 	%r3850, %r3845, %r3846, 18;
	mov.b64 	%rd5624, {%r3850, %r3849};
	xor.b64  	%rd5625, %rd5623, %rd5624;
	shf.l.wrap.b32 	%r3851, %r3845, %r3846, 23;
	shf.l.wrap.b32 	%r3852, %r3846, %r3845, 23;
	mov.b64 	%rd5626, {%r3852, %r3851};
	xor.b64  	%rd5627, %rd5625, %rd5626;
	xor.b64  	%rd5628, %rd5587, %rd10;
	and.b64  	%rd5629, %rd5611, %rd5628;
	xor.b64  	%rd5630, %rd5629, %rd10;
	add.s64 	%rd5631, %rd5, %rd9846;
	add.s64 	%rd5632, %rd5631, %rd5630;
	add.s64 	%rd5633, %rd5632, %rd5627;
	add.s64 	%rd5634, %rd5633, 5820449915117741902;
	add.s64 	%rd5635, %rd5634, %rd7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3853,%dummy}, %rd5622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3854}, %rd5622;
	}
	shf.r.wrap.b32 	%r3855, %r3854, %r3853, 28;
	shf.r.wrap.b32 	%r3856, %r3853, %r3854, 28;
	mov.b64 	%rd5636, {%r3856, %r3855};
	shf.l.wrap.b32 	%r3857, %r3853, %r3854, 30;
	shf.l.wrap.b32 	%r3858, %r3854, %r3853, 30;
	mov.b64 	%rd5637, {%r3858, %r3857};
	xor.b64  	%rd5638, %rd5636, %rd5637;
	shf.l.wrap.b32 	%r3859, %r3853, %r3854, 25;
	shf.l.wrap.b32 	%r3860, %r3854, %r3853, 25;
	mov.b64 	%rd5639, {%r3860, %r3859};
	xor.b64  	%rd5640, %rd5638, %rd5639;
	and.b64  	%rd5641, %rd5622, %rd5598;
	or.b64  	%rd5642, %rd5622, %rd5598;
	and.b64  	%rd5643, %rd5642, %rd6;
	or.b64  	%rd5644, %rd5643, %rd5641;
	add.s64 	%rd5645, %rd5644, %rd5640;
	add.s64 	%rd5646, %rd5645, %rd5634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3861,%dummy}, %rd5635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3862}, %rd5635;
	}
	shf.r.wrap.b32 	%r3863, %r3862, %r3861, 14;
	shf.r.wrap.b32 	%r3864, %r3861, %r3862, 14;
	mov.b64 	%rd5647, {%r3864, %r3863};
	shf.r.wrap.b32 	%r3865, %r3862, %r3861, 18;
	shf.r.wrap.b32 	%r3866, %r3861, %r3862, 18;
	mov.b64 	%rd5648, {%r3866, %r3865};
	xor.b64  	%rd5649, %rd5647, %rd5648;
	shf.l.wrap.b32 	%r3867, %r3861, %r3862, 23;
	shf.l.wrap.b32 	%r3868, %r3862, %r3861, 23;
	mov.b64 	%rd5650, {%r3868, %r3867};
	xor.b64  	%rd5651, %rd5649, %rd5650;
	xor.b64  	%rd5652, %rd5611, %rd5587;
	and.b64  	%rd5653, %rd5635, %rd5652;
	xor.b64  	%rd5654, %rd5653, %rd5587;
	add.s64 	%rd5655, %rd10, %rd9845;
	add.s64 	%rd5656, %rd5655, %rd5654;
	add.s64 	%rd5657, %rd5656, %rd5651;
	add.s64 	%rd5658, %rd5657, -1606136188198331460;
	add.s64 	%rd5659, %rd5658, %rd6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3869,%dummy}, %rd5646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3870}, %rd5646;
	}
	shf.r.wrap.b32 	%r3871, %r3870, %r3869, 28;
	shf.r.wrap.b32 	%r3872, %r3869, %r3870, 28;
	mov.b64 	%rd5660, {%r3872, %r3871};
	shf.l.wrap.b32 	%r3873, %r3869, %r3870, 30;
	shf.l.wrap.b32 	%r3874, %r3870, %r3869, 30;
	mov.b64 	%rd5661, {%r3874, %r3873};
	xor.b64  	%rd5662, %rd5660, %rd5661;
	shf.l.wrap.b32 	%r3875, %r3869, %r3870, 25;
	shf.l.wrap.b32 	%r3876, %r3870, %r3869, 25;
	mov.b64 	%rd5663, {%r3876, %r3875};
	xor.b64  	%rd5664, %rd5662, %rd5663;
	and.b64  	%rd5665, %rd5646, %rd5622;
	or.b64  	%rd5666, %rd5646, %rd5622;
	and.b64  	%rd5667, %rd5666, %rd5598;
	or.b64  	%rd5668, %rd5667, %rd5665;
	add.s64 	%rd5669, %rd5668, %rd5664;
	add.s64 	%rd5670, %rd5669, %rd5658;
	add.s64 	%rd5671, %rd9844, %rd5587;
	xor.b64  	%rd5672, %rd5635, %rd5611;
	and.b64  	%rd5673, %rd5659, %rd5672;
	xor.b64  	%rd5674, %rd5673, %rd5611;
	add.s64 	%rd5675, %rd5671, %rd5674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3877,%dummy}, %rd5659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3878}, %rd5659;
	}
	shf.r.wrap.b32 	%r3879, %r3878, %r3877, 14;
	shf.r.wrap.b32 	%r3880, %r3877, %r3878, 14;
	mov.b64 	%rd5676, {%r3880, %r3879};
	shf.r.wrap.b32 	%r3881, %r3878, %r3877, 18;
	shf.r.wrap.b32 	%r3882, %r3877, %r3878, 18;
	mov.b64 	%rd5677, {%r3882, %r3881};
	xor.b64  	%rd5678, %rd5676, %rd5677;
	shf.l.wrap.b32 	%r3883, %r3877, %r3878, 23;
	shf.l.wrap.b32 	%r3884, %r3878, %r3877, 23;
	mov.b64 	%rd5679, {%r3884, %r3883};
	xor.b64  	%rd5680, %rd5678, %rd5679;
	add.s64 	%rd5681, %rd5675, %rd5680;
	add.s64 	%rd5682, %rd5681, 4131703408338449720;
	add.s64 	%rd5683, %rd5682, %rd5598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3885,%dummy}, %rd5670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3886}, %rd5670;
	}
	shf.r.wrap.b32 	%r3887, %r3886, %r3885, 28;
	shf.r.wrap.b32 	%r3888, %r3885, %r3886, 28;
	mov.b64 	%rd5684, {%r3888, %r3887};
	shf.l.wrap.b32 	%r3889, %r3885, %r3886, 30;
	shf.l.wrap.b32 	%r3890, %r3886, %r3885, 30;
	mov.b64 	%rd5685, {%r3890, %r3889};
	xor.b64  	%rd5686, %rd5684, %rd5685;
	shf.l.wrap.b32 	%r3891, %r3885, %r3886, 25;
	shf.l.wrap.b32 	%r3892, %r3886, %r3885, 25;
	mov.b64 	%rd5687, {%r3892, %r3891};
	xor.b64  	%rd5688, %rd5686, %rd5687;
	and.b64  	%rd5689, %rd5670, %rd5646;
	or.b64  	%rd5690, %rd5670, %rd5646;
	and.b64  	%rd5691, %rd5690, %rd5622;
	or.b64  	%rd5692, %rd5691, %rd5689;
	add.s64 	%rd5693, %rd5692, %rd5688;
	add.s64 	%rd5694, %rd5693, %rd5682;
	add.s64 	%rd5695, %rd9843, %rd5611;
	xor.b64  	%rd5696, %rd5659, %rd5635;
	and.b64  	%rd5697, %rd5683, %rd5696;
	xor.b64  	%rd5698, %rd5697, %rd5635;
	add.s64 	%rd5699, %rd5695, %rd5698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3893,%dummy}, %rd5683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3894}, %rd5683;
	}
	shf.r.wrap.b32 	%r3895, %r3894, %r3893, 14;
	shf.r.wrap.b32 	%r3896, %r3893, %r3894, 14;
	mov.b64 	%rd5700, {%r3896, %r3895};
	shf.r.wrap.b32 	%r3897, %r3894, %r3893, 18;
	shf.r.wrap.b32 	%r3898, %r3893, %r3894, 18;
	mov.b64 	%rd5701, {%r3898, %r3897};
	xor.b64  	%rd5702, %rd5700, %rd5701;
	shf.l.wrap.b32 	%r3899, %r3893, %r3894, 23;
	shf.l.wrap.b32 	%r3900, %r3894, %r3893, 23;
	mov.b64 	%rd5703, {%r3900, %r3899};
	xor.b64  	%rd5704, %rd5702, %rd5703;
	add.s64 	%rd5705, %rd5699, %rd5704;
	add.s64 	%rd5706, %rd5705, 6480981068601479193;
	add.s64 	%rd5707, %rd5706, %rd5622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3901,%dummy}, %rd5694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3902}, %rd5694;
	}
	shf.r.wrap.b32 	%r3903, %r3902, %r3901, 28;
	shf.r.wrap.b32 	%r3904, %r3901, %r3902, 28;
	mov.b64 	%rd5708, {%r3904, %r3903};
	shf.l.wrap.b32 	%r3905, %r3901, %r3902, 30;
	shf.l.wrap.b32 	%r3906, %r3902, %r3901, 30;
	mov.b64 	%rd5709, {%r3906, %r3905};
	xor.b64  	%rd5710, %rd5708, %rd5709;
	shf.l.wrap.b32 	%r3907, %r3901, %r3902, 25;
	shf.l.wrap.b32 	%r3908, %r3902, %r3901, 25;
	mov.b64 	%rd5711, {%r3908, %r3907};
	xor.b64  	%rd5712, %rd5710, %rd5711;
	and.b64  	%rd5713, %rd5694, %rd5670;
	or.b64  	%rd5714, %rd5694, %rd5670;
	and.b64  	%rd5715, %rd5714, %rd5646;
	or.b64  	%rd5716, %rd5715, %rd5713;
	add.s64 	%rd5717, %rd5716, %rd5712;
	add.s64 	%rd5718, %rd5717, %rd5706;
	add.s64 	%rd5719, %rd9842, %rd5635;
	xor.b64  	%rd5720, %rd5683, %rd5659;
	and.b64  	%rd5721, %rd5707, %rd5720;
	xor.b64  	%rd5722, %rd5721, %rd5659;
	add.s64 	%rd5723, %rd5719, %rd5722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3909,%dummy}, %rd5707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3910}, %rd5707;
	}
	shf.r.wrap.b32 	%r3911, %r3910, %r3909, 14;
	shf.r.wrap.b32 	%r3912, %r3909, %r3910, 14;
	mov.b64 	%rd5724, {%r3912, %r3911};
	shf.r.wrap.b32 	%r3913, %r3910, %r3909, 18;
	shf.r.wrap.b32 	%r3914, %r3909, %r3910, 18;
	mov.b64 	%rd5725, {%r3914, %r3913};
	xor.b64  	%rd5726, %rd5724, %rd5725;
	shf.l.wrap.b32 	%r3915, %r3909, %r3910, 23;
	shf.l.wrap.b32 	%r3916, %r3910, %r3909, 23;
	mov.b64 	%rd5727, {%r3916, %r3915};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	add.s64 	%rd5729, %rd5723, %rd5728;
	add.s64 	%rd5730, %rd5729, -7908458776815382629;
	add.s64 	%rd5731, %rd5730, %rd5646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3917,%dummy}, %rd5718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3918}, %rd5718;
	}
	shf.r.wrap.b32 	%r3919, %r3918, %r3917, 28;
	shf.r.wrap.b32 	%r3920, %r3917, %r3918, 28;
	mov.b64 	%rd5732, {%r3920, %r3919};
	shf.l.wrap.b32 	%r3921, %r3917, %r3918, 30;
	shf.l.wrap.b32 	%r3922, %r3918, %r3917, 30;
	mov.b64 	%rd5733, {%r3922, %r3921};
	xor.b64  	%rd5734, %rd5732, %rd5733;
	shf.l.wrap.b32 	%r3923, %r3917, %r3918, 25;
	shf.l.wrap.b32 	%r3924, %r3918, %r3917, 25;
	mov.b64 	%rd5735, {%r3924, %r3923};
	xor.b64  	%rd5736, %rd5734, %rd5735;
	and.b64  	%rd5737, %rd5718, %rd5694;
	or.b64  	%rd5738, %rd5718, %rd5694;
	and.b64  	%rd5739, %rd5738, %rd5670;
	or.b64  	%rd5740, %rd5739, %rd5737;
	add.s64 	%rd5741, %rd5740, %rd5736;
	add.s64 	%rd5742, %rd5741, %rd5730;
	add.s64 	%rd5743, %rd9841, %rd5659;
	xor.b64  	%rd5744, %rd5707, %rd5683;
	and.b64  	%rd5745, %rd5731, %rd5744;
	xor.b64  	%rd5746, %rd5745, %rd5683;
	add.s64 	%rd5747, %rd5743, %rd5746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3925,%dummy}, %rd5731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3926}, %rd5731;
	}
	shf.r.wrap.b32 	%r3927, %r3926, %r3925, 14;
	shf.r.wrap.b32 	%r3928, %r3925, %r3926, 14;
	mov.b64 	%rd5748, {%r3928, %r3927};
	shf.r.wrap.b32 	%r3929, %r3926, %r3925, 18;
	shf.r.wrap.b32 	%r3930, %r3925, %r3926, 18;
	mov.b64 	%rd5749, {%r3930, %r3929};
	xor.b64  	%rd5750, %rd5748, %rd5749;
	shf.l.wrap.b32 	%r3931, %r3925, %r3926, 23;
	shf.l.wrap.b32 	%r3932, %r3926, %r3925, 23;
	mov.b64 	%rd5751, {%r3932, %r3931};
	xor.b64  	%rd5752, %rd5750, %rd5751;
	add.s64 	%rd5753, %rd5747, %rd5752;
	add.s64 	%rd5754, %rd5753, -6116909921290321640;
	add.s64 	%rd5755, %rd5754, %rd5670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3933,%dummy}, %rd5742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3934}, %rd5742;
	}
	shf.r.wrap.b32 	%r3935, %r3934, %r3933, 28;
	shf.r.wrap.b32 	%r3936, %r3933, %r3934, 28;
	mov.b64 	%rd5756, {%r3936, %r3935};
	shf.l.wrap.b32 	%r3937, %r3933, %r3934, 30;
	shf.l.wrap.b32 	%r3938, %r3934, %r3933, 30;
	mov.b64 	%rd5757, {%r3938, %r3937};
	xor.b64  	%rd5758, %rd5756, %rd5757;
	shf.l.wrap.b32 	%r3939, %r3933, %r3934, 25;
	shf.l.wrap.b32 	%r3940, %r3934, %r3933, 25;
	mov.b64 	%rd5759, {%r3940, %r3939};
	xor.b64  	%rd5760, %rd5758, %rd5759;
	and.b64  	%rd5761, %rd5742, %rd5718;
	or.b64  	%rd5762, %rd5742, %rd5718;
	and.b64  	%rd5763, %rd5762, %rd5694;
	or.b64  	%rd5764, %rd5763, %rd5761;
	add.s64 	%rd5765, %rd5764, %rd5760;
	add.s64 	%rd5766, %rd5765, %rd5754;
	add.s64 	%rd5767, %rd9840, %rd5683;
	xor.b64  	%rd5768, %rd5731, %rd5707;
	and.b64  	%rd5769, %rd5755, %rd5768;
	xor.b64  	%rd5770, %rd5769, %rd5707;
	add.s64 	%rd5771, %rd5767, %rd5770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3941,%dummy}, %rd5755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3942}, %rd5755;
	}
	shf.r.wrap.b32 	%r3943, %r3942, %r3941, 14;
	shf.r.wrap.b32 	%r3944, %r3941, %r3942, 14;
	mov.b64 	%rd5772, {%r3944, %r3943};
	shf.r.wrap.b32 	%r3945, %r3942, %r3941, 18;
	shf.r.wrap.b32 	%r3946, %r3941, %r3942, 18;
	mov.b64 	%rd5773, {%r3946, %r3945};
	xor.b64  	%rd5774, %rd5772, %rd5773;
	shf.l.wrap.b32 	%r3947, %r3941, %r3942, 23;
	shf.l.wrap.b32 	%r3948, %r3942, %r3941, 23;
	mov.b64 	%rd5775, {%r3948, %r3947};
	xor.b64  	%rd5776, %rd5774, %rd5775;
	add.s64 	%rd5777, %rd5771, %rd5776;
	add.s64 	%rd5778, %rd5777, -2880145864133508542;
	add.s64 	%rd5779, %rd5778, %rd5694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3949,%dummy}, %rd5766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3950}, %rd5766;
	}
	shf.r.wrap.b32 	%r3951, %r3950, %r3949, 28;
	shf.r.wrap.b32 	%r3952, %r3949, %r3950, 28;
	mov.b64 	%rd5780, {%r3952, %r3951};
	shf.l.wrap.b32 	%r3953, %r3949, %r3950, 30;
	shf.l.wrap.b32 	%r3954, %r3950, %r3949, 30;
	mov.b64 	%rd5781, {%r3954, %r3953};
	xor.b64  	%rd5782, %rd5780, %rd5781;
	shf.l.wrap.b32 	%r3955, %r3949, %r3950, 25;
	shf.l.wrap.b32 	%r3956, %r3950, %r3949, 25;
	mov.b64 	%rd5783, {%r3956, %r3955};
	xor.b64  	%rd5784, %rd5782, %rd5783;
	and.b64  	%rd5785, %rd5766, %rd5742;
	or.b64  	%rd5786, %rd5766, %rd5742;
	and.b64  	%rd5787, %rd5786, %rd5718;
	or.b64  	%rd5788, %rd5787, %rd5785;
	add.s64 	%rd5789, %rd5788, %rd5784;
	add.s64 	%rd5790, %rd5789, %rd5778;
	add.s64 	%rd5791, %rd9839, %rd5707;
	xor.b64  	%rd5792, %rd5755, %rd5731;
	and.b64  	%rd5793, %rd5779, %rd5792;
	xor.b64  	%rd5794, %rd5793, %rd5731;
	add.s64 	%rd5795, %rd5791, %rd5794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3957,%dummy}, %rd5779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3958}, %rd5779;
	}
	shf.r.wrap.b32 	%r3959, %r3958, %r3957, 14;
	shf.r.wrap.b32 	%r3960, %r3957, %r3958, 14;
	mov.b64 	%rd5796, {%r3960, %r3959};
	shf.r.wrap.b32 	%r3961, %r3958, %r3957, 18;
	shf.r.wrap.b32 	%r3962, %r3957, %r3958, 18;
	mov.b64 	%rd5797, {%r3962, %r3961};
	xor.b64  	%rd5798, %rd5796, %rd5797;
	shf.l.wrap.b32 	%r3963, %r3957, %r3958, 23;
	shf.l.wrap.b32 	%r3964, %r3958, %r3957, 23;
	mov.b64 	%rd5799, {%r3964, %r3963};
	xor.b64  	%rd5800, %rd5798, %rd5799;
	add.s64 	%rd5801, %rd5795, %rd5800;
	add.s64 	%rd5802, %rd5801, 1334009975649890238;
	add.s64 	%rd5803, %rd5802, %rd5718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3965,%dummy}, %rd5790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3966}, %rd5790;
	}
	shf.r.wrap.b32 	%r3967, %r3966, %r3965, 28;
	shf.r.wrap.b32 	%r3968, %r3965, %r3966, 28;
	mov.b64 	%rd5804, {%r3968, %r3967};
	shf.l.wrap.b32 	%r3969, %r3965, %r3966, 30;
	shf.l.wrap.b32 	%r3970, %r3966, %r3965, 30;
	mov.b64 	%rd5805, {%r3970, %r3969};
	xor.b64  	%rd5806, %rd5804, %rd5805;
	shf.l.wrap.b32 	%r3971, %r3965, %r3966, 25;
	shf.l.wrap.b32 	%r3972, %r3966, %r3965, 25;
	mov.b64 	%rd5807, {%r3972, %r3971};
	xor.b64  	%rd5808, %rd5806, %rd5807;
	and.b64  	%rd5809, %rd5790, %rd5766;
	or.b64  	%rd5810, %rd5790, %rd5766;
	and.b64  	%rd5811, %rd5810, %rd5742;
	or.b64  	%rd5812, %rd5811, %rd5809;
	add.s64 	%rd5813, %rd5812, %rd5808;
	add.s64 	%rd5814, %rd5813, %rd5802;
	add.s64 	%rd5815, %rd9838, %rd5731;
	xor.b64  	%rd5816, %rd5779, %rd5755;
	and.b64  	%rd5817, %rd5803, %rd5816;
	xor.b64  	%rd5818, %rd5817, %rd5755;
	add.s64 	%rd5819, %rd5815, %rd5818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3973,%dummy}, %rd5803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3974}, %rd5803;
	}
	shf.r.wrap.b32 	%r3975, %r3974, %r3973, 14;
	shf.r.wrap.b32 	%r3976, %r3973, %r3974, 14;
	mov.b64 	%rd5820, {%r3976, %r3975};
	shf.r.wrap.b32 	%r3977, %r3974, %r3973, 18;
	shf.r.wrap.b32 	%r3978, %r3973, %r3974, 18;
	mov.b64 	%rd5821, {%r3978, %r3977};
	xor.b64  	%rd5822, %rd5820, %rd5821;
	shf.l.wrap.b32 	%r3979, %r3973, %r3974, 23;
	shf.l.wrap.b32 	%r3980, %r3974, %r3973, 23;
	mov.b64 	%rd5823, {%r3980, %r3979};
	xor.b64  	%rd5824, %rd5822, %rd5823;
	add.s64 	%rd5825, %rd5819, %rd5824;
	add.s64 	%rd5826, %rd5825, 2608012711638119052;
	add.s64 	%rd5827, %rd5826, %rd5742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3981,%dummy}, %rd5814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3982}, %rd5814;
	}
	shf.r.wrap.b32 	%r3983, %r3982, %r3981, 28;
	shf.r.wrap.b32 	%r3984, %r3981, %r3982, 28;
	mov.b64 	%rd5828, {%r3984, %r3983};
	shf.l.wrap.b32 	%r3985, %r3981, %r3982, 30;
	shf.l.wrap.b32 	%r3986, %r3982, %r3981, 30;
	mov.b64 	%rd5829, {%r3986, %r3985};
	xor.b64  	%rd5830, %rd5828, %rd5829;
	shf.l.wrap.b32 	%r3987, %r3981, %r3982, 25;
	shf.l.wrap.b32 	%r3988, %r3982, %r3981, 25;
	mov.b64 	%rd5831, {%r3988, %r3987};
	xor.b64  	%rd5832, %rd5830, %rd5831;
	and.b64  	%rd5833, %rd5814, %rd5790;
	or.b64  	%rd5834, %rd5814, %rd5790;
	and.b64  	%rd5835, %rd5834, %rd5766;
	or.b64  	%rd5836, %rd5835, %rd5833;
	add.s64 	%rd5837, %rd5836, %rd5832;
	add.s64 	%rd5838, %rd5837, %rd5826;
	add.s64 	%rd5839, %rd9837, %rd5755;
	xor.b64  	%rd5840, %rd5803, %rd5779;
	and.b64  	%rd5841, %rd5827, %rd5840;
	xor.b64  	%rd5842, %rd5841, %rd5779;
	add.s64 	%rd5843, %rd5839, %rd5842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3989,%dummy}, %rd5827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3990}, %rd5827;
	}
	shf.r.wrap.b32 	%r3991, %r3990, %r3989, 14;
	shf.r.wrap.b32 	%r3992, %r3989, %r3990, 14;
	mov.b64 	%rd5844, {%r3992, %r3991};
	shf.r.wrap.b32 	%r3993, %r3990, %r3989, 18;
	shf.r.wrap.b32 	%r3994, %r3989, %r3990, 18;
	mov.b64 	%rd5845, {%r3994, %r3993};
	xor.b64  	%rd5846, %rd5844, %rd5845;
	shf.l.wrap.b32 	%r3995, %r3989, %r3990, 23;
	shf.l.wrap.b32 	%r3996, %r3990, %r3989, 23;
	mov.b64 	%rd5847, {%r3996, %r3995};
	xor.b64  	%rd5848, %rd5846, %rd5847;
	add.s64 	%rd5849, %rd5843, %rd5848;
	add.s64 	%rd5850, %rd5849, 6128411473006802146;
	add.s64 	%rd5851, %rd5850, %rd5766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3997,%dummy}, %rd5838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3998}, %rd5838;
	}
	shf.r.wrap.b32 	%r3999, %r3998, %r3997, 28;
	shf.r.wrap.b32 	%r4000, %r3997, %r3998, 28;
	mov.b64 	%rd5852, {%r4000, %r3999};
	shf.l.wrap.b32 	%r4001, %r3997, %r3998, 30;
	shf.l.wrap.b32 	%r4002, %r3998, %r3997, 30;
	mov.b64 	%rd5853, {%r4002, %r4001};
	xor.b64  	%rd5854, %rd5852, %rd5853;
	shf.l.wrap.b32 	%r4003, %r3997, %r3998, 25;
	shf.l.wrap.b32 	%r4004, %r3998, %r3997, 25;
	mov.b64 	%rd5855, {%r4004, %r4003};
	xor.b64  	%rd5856, %rd5854, %rd5855;
	and.b64  	%rd5857, %rd5838, %rd5814;
	or.b64  	%rd5858, %rd5838, %rd5814;
	and.b64  	%rd5859, %rd5858, %rd5790;
	or.b64  	%rd5860, %rd5859, %rd5857;
	add.s64 	%rd5861, %rd5860, %rd5856;
	add.s64 	%rd5862, %rd5861, %rd5850;
	add.s64 	%rd5863, %rd9836, %rd5779;
	xor.b64  	%rd5864, %rd5827, %rd5803;
	and.b64  	%rd5865, %rd5851, %rd5864;
	xor.b64  	%rd5866, %rd5865, %rd5803;
	add.s64 	%rd5867, %rd5863, %rd5866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd5851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd5851;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 14;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 14;
	mov.b64 	%rd5868, {%r4008, %r4007};
	shf.r.wrap.b32 	%r4009, %r4006, %r4005, 18;
	shf.r.wrap.b32 	%r4010, %r4005, %r4006, 18;
	mov.b64 	%rd5869, {%r4010, %r4009};
	xor.b64  	%rd5870, %rd5868, %rd5869;
	shf.l.wrap.b32 	%r4011, %r4005, %r4006, 23;
	shf.l.wrap.b32 	%r4012, %r4006, %r4005, 23;
	mov.b64 	%rd5871, {%r4012, %r4011};
	xor.b64  	%rd5872, %rd5870, %rd5871;
	add.s64 	%rd5873, %rd5867, %rd5872;
	add.s64 	%rd5874, %rd5873, 8268148722764581231;
	add.s64 	%rd5875, %rd5874, %rd5790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4013,%dummy}, %rd5862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4014}, %rd5862;
	}
	shf.r.wrap.b32 	%r4015, %r4014, %r4013, 28;
	shf.r.wrap.b32 	%r4016, %r4013, %r4014, 28;
	mov.b64 	%rd5876, {%r4016, %r4015};
	shf.l.wrap.b32 	%r4017, %r4013, %r4014, 30;
	shf.l.wrap.b32 	%r4018, %r4014, %r4013, 30;
	mov.b64 	%rd5877, {%r4018, %r4017};
	xor.b64  	%rd5878, %rd5876, %rd5877;
	shf.l.wrap.b32 	%r4019, %r4013, %r4014, 25;
	shf.l.wrap.b32 	%r4020, %r4014, %r4013, 25;
	mov.b64 	%rd5879, {%r4020, %r4019};
	xor.b64  	%rd5880, %rd5878, %rd5879;
	and.b64  	%rd5881, %rd5862, %rd5838;
	or.b64  	%rd5882, %rd5862, %rd5838;
	and.b64  	%rd5883, %rd5882, %rd5814;
	or.b64  	%rd5884, %rd5883, %rd5881;
	add.s64 	%rd5885, %rd5884, %rd5880;
	add.s64 	%rd5886, %rd5885, %rd5874;
	add.s64 	%rd5887, %rd9835, %rd5803;
	xor.b64  	%rd5888, %rd5851, %rd5827;
	and.b64  	%rd5889, %rd5875, %rd5888;
	xor.b64  	%rd5890, %rd5889, %rd5827;
	add.s64 	%rd5891, %rd5887, %rd5890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4021,%dummy}, %rd5875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4022}, %rd5875;
	}
	shf.r.wrap.b32 	%r4023, %r4022, %r4021, 14;
	shf.r.wrap.b32 	%r4024, %r4021, %r4022, 14;
	mov.b64 	%rd5892, {%r4024, %r4023};
	shf.r.wrap.b32 	%r4025, %r4022, %r4021, 18;
	shf.r.wrap.b32 	%r4026, %r4021, %r4022, 18;
	mov.b64 	%rd5893, {%r4026, %r4025};
	xor.b64  	%rd5894, %rd5892, %rd5893;
	shf.l.wrap.b32 	%r4027, %r4021, %r4022, 23;
	shf.l.wrap.b32 	%r4028, %r4022, %r4021, 23;
	mov.b64 	%rd5895, {%r4028, %r4027};
	xor.b64  	%rd5896, %rd5894, %rd5895;
	add.s64 	%rd5897, %rd5891, %rd5896;
	add.s64 	%rd5898, %rd5897, -9160688886553864527;
	add.s64 	%rd5899, %rd5898, %rd5814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4029,%dummy}, %rd5886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4030}, %rd5886;
	}
	shf.r.wrap.b32 	%r4031, %r4030, %r4029, 28;
	shf.r.wrap.b32 	%r4032, %r4029, %r4030, 28;
	mov.b64 	%rd5900, {%r4032, %r4031};
	shf.l.wrap.b32 	%r4033, %r4029, %r4030, 30;
	shf.l.wrap.b32 	%r4034, %r4030, %r4029, 30;
	mov.b64 	%rd5901, {%r4034, %r4033};
	xor.b64  	%rd5902, %rd5900, %rd5901;
	shf.l.wrap.b32 	%r4035, %r4029, %r4030, 25;
	shf.l.wrap.b32 	%r4036, %r4030, %r4029, 25;
	mov.b64 	%rd5903, {%r4036, %r4035};
	xor.b64  	%rd5904, %rd5902, %rd5903;
	and.b64  	%rd5905, %rd5886, %rd5862;
	or.b64  	%rd5906, %rd5886, %rd5862;
	and.b64  	%rd5907, %rd5906, %rd5838;
	or.b64  	%rd5908, %rd5907, %rd5905;
	add.s64 	%rd5909, %rd5908, %rd5904;
	add.s64 	%rd5910, %rd5909, %rd5898;
	add.s64 	%rd5911, %rd9834, %rd5827;
	xor.b64  	%rd5912, %rd5875, %rd5851;
	and.b64  	%rd5913, %rd5899, %rd5912;
	xor.b64  	%rd5914, %rd5913, %rd5851;
	add.s64 	%rd5915, %rd5911, %rd5914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4037,%dummy}, %rd5899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4038}, %rd5899;
	}
	shf.r.wrap.b32 	%r4039, %r4038, %r4037, 14;
	shf.r.wrap.b32 	%r4040, %r4037, %r4038, 14;
	mov.b64 	%rd5916, {%r4040, %r4039};
	shf.r.wrap.b32 	%r4041, %r4038, %r4037, 18;
	shf.r.wrap.b32 	%r4042, %r4037, %r4038, 18;
	mov.b64 	%rd5917, {%r4042, %r4041};
	xor.b64  	%rd5918, %rd5916, %rd5917;
	shf.l.wrap.b32 	%r4043, %r4037, %r4038, 23;
	shf.l.wrap.b32 	%r4044, %r4038, %r4037, 23;
	mov.b64 	%rd5919, {%r4044, %r4043};
	xor.b64  	%rd5920, %rd5918, %rd5919;
	add.s64 	%rd5921, %rd5915, %rd5920;
	add.s64 	%rd5922, %rd5921, -7215885187991268811;
	add.s64 	%rd5923, %rd5922, %rd5838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4045,%dummy}, %rd5910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4046}, %rd5910;
	}
	shf.r.wrap.b32 	%r4047, %r4046, %r4045, 28;
	shf.r.wrap.b32 	%r4048, %r4045, %r4046, 28;
	mov.b64 	%rd5924, {%r4048, %r4047};
	shf.l.wrap.b32 	%r4049, %r4045, %r4046, 30;
	shf.l.wrap.b32 	%r4050, %r4046, %r4045, 30;
	mov.b64 	%rd5925, {%r4050, %r4049};
	xor.b64  	%rd5926, %rd5924, %rd5925;
	shf.l.wrap.b32 	%r4051, %r4045, %r4046, 25;
	shf.l.wrap.b32 	%r4052, %r4046, %r4045, 25;
	mov.b64 	%rd5927, {%r4052, %r4051};
	xor.b64  	%rd5928, %rd5926, %rd5927;
	and.b64  	%rd5929, %rd5910, %rd5886;
	or.b64  	%rd5930, %rd5910, %rd5886;
	and.b64  	%rd5931, %rd5930, %rd5862;
	or.b64  	%rd5932, %rd5931, %rd5929;
	add.s64 	%rd5933, %rd5932, %rd5928;
	add.s64 	%rd5934, %rd5933, %rd5922;
	add.s64 	%rd5935, %rd5574, %rd5851;
	xor.b64  	%rd5936, %rd5899, %rd5875;
	and.b64  	%rd5937, %rd5923, %rd5936;
	xor.b64  	%rd5938, %rd5937, %rd5875;
	add.s64 	%rd5939, %rd5935, %rd5938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4053,%dummy}, %rd5923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4054}, %rd5923;
	}
	shf.r.wrap.b32 	%r4055, %r4054, %r4053, 14;
	shf.r.wrap.b32 	%r4056, %r4053, %r4054, 14;
	mov.b64 	%rd5940, {%r4056, %r4055};
	shf.r.wrap.b32 	%r4057, %r4054, %r4053, 18;
	shf.r.wrap.b32 	%r4058, %r4053, %r4054, 18;
	mov.b64 	%rd5941, {%r4058, %r4057};
	xor.b64  	%rd5942, %rd5940, %rd5941;
	shf.l.wrap.b32 	%r4059, %r4053, %r4054, 23;
	shf.l.wrap.b32 	%r4060, %r4054, %r4053, 23;
	mov.b64 	%rd5943, {%r4060, %r4059};
	xor.b64  	%rd5944, %rd5942, %rd5943;
	add.s64 	%rd5945, %rd5939, %rd5944;
	add.s64 	%rd5946, %rd5945, -4495734319001033068;
	add.s64 	%rd5947, %rd5946, %rd5862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4061,%dummy}, %rd5934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4062}, %rd5934;
	}
	shf.r.wrap.b32 	%r4063, %r4062, %r4061, 28;
	shf.r.wrap.b32 	%r4064, %r4061, %r4062, 28;
	mov.b64 	%rd5948, {%r4064, %r4063};
	shf.l.wrap.b32 	%r4065, %r4061, %r4062, 30;
	shf.l.wrap.b32 	%r4066, %r4062, %r4061, 30;
	mov.b64 	%rd5949, {%r4066, %r4065};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	shf.l.wrap.b32 	%r4067, %r4061, %r4062, 25;
	shf.l.wrap.b32 	%r4068, %r4062, %r4061, 25;
	mov.b64 	%rd5951, {%r4068, %r4067};
	xor.b64  	%rd5952, %rd5950, %rd5951;
	and.b64  	%rd5953, %rd5934, %rd5910;
	or.b64  	%rd5954, %rd5934, %rd5910;
	and.b64  	%rd5955, %rd5954, %rd5886;
	or.b64  	%rd5956, %rd5955, %rd5953;
	add.s64 	%rd5957, %rd5956, %rd5952;
	add.s64 	%rd5958, %rd5957, %rd5946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4069}, %rd9834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4070,%dummy}, %rd9834;
	}
	shf.l.wrap.b32 	%r4071, %r4070, %r4069, 3;
	shf.l.wrap.b32 	%r4072, %r4069, %r4070, 3;
	mov.b64 	%rd5959, {%r4072, %r4071};
	shf.r.wrap.b32 	%r4073, %r4069, %r4070, 19;
	shf.r.wrap.b32 	%r4074, %r4070, %r4069, 19;
	mov.b64 	%rd5960, {%r4074, %r4073};
	xor.b64  	%rd5961, %rd5960, %rd5959;
	shr.u64 	%rd5962, %rd9834, 6;
	xor.b64  	%rd5963, %rd5961, %rd5962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4075,%dummy}, %rd9847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4076}, %rd9847;
	}
	shf.r.wrap.b32 	%r4077, %r4076, %r4075, 8;
	shf.r.wrap.b32 	%r4078, %r4075, %r4076, 8;
	mov.b64 	%rd5964, {%r4078, %r4077};
	shf.r.wrap.b32 	%r4079, %r4076, %r4075, 1;
	shf.r.wrap.b32 	%r4080, %r4075, %r4076, 1;
	mov.b64 	%rd5965, {%r4080, %r4079};
	xor.b64  	%rd5966, %rd5965, %rd5964;
	shr.u64 	%rd5967, %rd9847, 7;
	xor.b64  	%rd5968, %rd5966, %rd5967;
	add.s64 	%rd5969, %rd5963, %rd9848;
	add.s64 	%rd5970, %rd5969, %rd9839;
	add.s64 	%rd5971, %rd5970, %rd5968;
	add.s64 	%rd5972, %rd5971, %rd5875;
	xor.b64  	%rd5973, %rd5923, %rd5899;
	and.b64  	%rd5974, %rd5947, %rd5973;
	xor.b64  	%rd5975, %rd5974, %rd5899;
	add.s64 	%rd5976, %rd5972, %rd5975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4081,%dummy}, %rd5947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4082}, %rd5947;
	}
	shf.r.wrap.b32 	%r4083, %r4082, %r4081, 14;
	shf.r.wrap.b32 	%r4084, %r4081, %r4082, 14;
	mov.b64 	%rd5977, {%r4084, %r4083};
	shf.r.wrap.b32 	%r4085, %r4082, %r4081, 18;
	shf.r.wrap.b32 	%r4086, %r4081, %r4082, 18;
	mov.b64 	%rd5978, {%r4086, %r4085};
	xor.b64  	%rd5979, %rd5977, %rd5978;
	shf.l.wrap.b32 	%r4087, %r4081, %r4082, 23;
	shf.l.wrap.b32 	%r4088, %r4082, %r4081, 23;
	mov.b64 	%rd5980, {%r4088, %r4087};
	xor.b64  	%rd5981, %rd5979, %rd5980;
	add.s64 	%rd5982, %rd5976, %rd5981;
	add.s64 	%rd5983, %rd5982, -1973867731355612462;
	add.s64 	%rd5984, %rd5983, %rd5886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4089,%dummy}, %rd5958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4090}, %rd5958;
	}
	shf.r.wrap.b32 	%r4091, %r4090, %r4089, 28;
	shf.r.wrap.b32 	%r4092, %r4089, %r4090, 28;
	mov.b64 	%rd5985, {%r4092, %r4091};
	shf.l.wrap.b32 	%r4093, %r4089, %r4090, 30;
	shf.l.wrap.b32 	%r4094, %r4090, %r4089, 30;
	mov.b64 	%rd5986, {%r4094, %r4093};
	xor.b64  	%rd5987, %rd5985, %rd5986;
	shf.l.wrap.b32 	%r4095, %r4089, %r4090, 25;
	shf.l.wrap.b32 	%r4096, %r4090, %r4089, 25;
	mov.b64 	%rd5988, {%r4096, %r4095};
	xor.b64  	%rd5989, %rd5987, %rd5988;
	and.b64  	%rd5990, %rd5958, %rd5934;
	or.b64  	%rd5991, %rd5958, %rd5934;
	and.b64  	%rd5992, %rd5991, %rd5910;
	or.b64  	%rd5993, %rd5992, %rd5990;
	add.s64 	%rd5994, %rd5993, %rd5989;
	add.s64 	%rd5995, %rd5994, %rd5983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4097,%dummy}, %rd5574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4098}, %rd5574;
	}
	shf.r.wrap.b32 	%r4099, %r4098, %r4097, 19;
	shf.r.wrap.b32 	%r4100, %r4097, %r4098, 19;
	mov.b64 	%rd5996, {%r4100, %r4099};
	shf.l.wrap.b32 	%r4101, %r4097, %r4098, 3;
	shf.l.wrap.b32 	%r4102, %r4098, %r4097, 3;
	mov.b64 	%rd5997, {%r4102, %r4101};
	xor.b64  	%rd5998, %rd5996, %rd5997;
	shr.u64 	%rd5999, %rd5574, 6;
	xor.b64  	%rd6000, %rd5998, %rd5999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4103,%dummy}, %rd9846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4104}, %rd9846;
	}
	shf.r.wrap.b32 	%r4105, %r4104, %r4103, 8;
	shf.r.wrap.b32 	%r4106, %r4103, %r4104, 8;
	mov.b64 	%rd6001, {%r4106, %r4105};
	shf.r.wrap.b32 	%r4107, %r4104, %r4103, 1;
	shf.r.wrap.b32 	%r4108, %r4103, %r4104, 1;
	mov.b64 	%rd6002, {%r4108, %r4107};
	xor.b64  	%rd6003, %rd6002, %rd6001;
	shr.u64 	%rd6004, %rd9846, 7;
	xor.b64  	%rd6005, %rd6003, %rd6004;
	add.s64 	%rd6006, %rd6000, %rd9847;
	add.s64 	%rd6007, %rd6006, %rd9838;
	add.s64 	%rd6008, %rd6007, %rd6005;
	add.s64 	%rd6009, %rd6008, %rd5899;
	xor.b64  	%rd6010, %rd5947, %rd5923;
	and.b64  	%rd6011, %rd5984, %rd6010;
	xor.b64  	%rd6012, %rd6011, %rd5923;
	add.s64 	%rd6013, %rd6009, %rd6012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4109,%dummy}, %rd5984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4110}, %rd5984;
	}
	shf.r.wrap.b32 	%r4111, %r4110, %r4109, 14;
	shf.r.wrap.b32 	%r4112, %r4109, %r4110, 14;
	mov.b64 	%rd6014, {%r4112, %r4111};
	shf.r.wrap.b32 	%r4113, %r4110, %r4109, 18;
	shf.r.wrap.b32 	%r4114, %r4109, %r4110, 18;
	mov.b64 	%rd6015, {%r4114, %r4113};
	xor.b64  	%rd6016, %rd6014, %rd6015;
	shf.l.wrap.b32 	%r4115, %r4109, %r4110, 23;
	shf.l.wrap.b32 	%r4116, %r4110, %r4109, 23;
	mov.b64 	%rd6017, {%r4116, %r4115};
	xor.b64  	%rd6018, %rd6016, %rd6017;
	add.s64 	%rd6019, %rd6013, %rd6018;
	add.s64 	%rd6020, %rd6019, -1171420211273849373;
	add.s64 	%rd6021, %rd6020, %rd5910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4117,%dummy}, %rd5995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4118}, %rd5995;
	}
	shf.r.wrap.b32 	%r4119, %r4118, %r4117, 28;
	shf.r.wrap.b32 	%r4120, %r4117, %r4118, 28;
	mov.b64 	%rd6022, {%r4120, %r4119};
	shf.l.wrap.b32 	%r4121, %r4117, %r4118, 30;
	shf.l.wrap.b32 	%r4122, %r4118, %r4117, 30;
	mov.b64 	%rd6023, {%r4122, %r4121};
	xor.b64  	%rd6024, %rd6022, %rd6023;
	shf.l.wrap.b32 	%r4123, %r4117, %r4118, 25;
	shf.l.wrap.b32 	%r4124, %r4118, %r4117, 25;
	mov.b64 	%rd6025, {%r4124, %r4123};
	xor.b64  	%rd6026, %rd6024, %rd6025;
	and.b64  	%rd6027, %rd5995, %rd5958;
	or.b64  	%rd6028, %rd5995, %rd5958;
	and.b64  	%rd6029, %rd6028, %rd5934;
	or.b64  	%rd6030, %rd6029, %rd6027;
	add.s64 	%rd6031, %rd6030, %rd6026;
	add.s64 	%rd6032, %rd6031, %rd6020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd5971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd5971;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 19;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 19;
	mov.b64 	%rd6033, {%r4128, %r4127};
	shf.l.wrap.b32 	%r4129, %r4125, %r4126, 3;
	shf.l.wrap.b32 	%r4130, %r4126, %r4125, 3;
	mov.b64 	%rd6034, {%r4130, %r4129};
	xor.b64  	%rd6035, %rd6033, %rd6034;
	shr.u64 	%rd6036, %rd5971, 6;
	xor.b64  	%rd6037, %rd6035, %rd6036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4131,%dummy}, %rd9845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4132}, %rd9845;
	}
	shf.r.wrap.b32 	%r4133, %r4132, %r4131, 8;
	shf.r.wrap.b32 	%r4134, %r4131, %r4132, 8;
	mov.b64 	%rd6038, {%r4134, %r4133};
	shf.r.wrap.b32 	%r4135, %r4132, %r4131, 1;
	shf.r.wrap.b32 	%r4136, %r4131, %r4132, 1;
	mov.b64 	%rd6039, {%r4136, %r4135};
	xor.b64  	%rd6040, %rd6039, %rd6038;
	shr.u64 	%rd6041, %rd9845, 7;
	xor.b64  	%rd6042, %rd6040, %rd6041;
	add.s64 	%rd6043, %rd6037, %rd9846;
	add.s64 	%rd6044, %rd6043, %rd9837;
	add.s64 	%rd6045, %rd6044, %rd6042;
	add.s64 	%rd6046, %rd6045, %rd5923;
	xor.b64  	%rd6047, %rd5984, %rd5947;
	and.b64  	%rd6048, %rd6021, %rd6047;
	xor.b64  	%rd6049, %rd6048, %rd5947;
	add.s64 	%rd6050, %rd6046, %rd6049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4137,%dummy}, %rd6021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4138}, %rd6021;
	}
	shf.r.wrap.b32 	%r4139, %r4138, %r4137, 14;
	shf.r.wrap.b32 	%r4140, %r4137, %r4138, 14;
	mov.b64 	%rd6051, {%r4140, %r4139};
	shf.r.wrap.b32 	%r4141, %r4138, %r4137, 18;
	shf.r.wrap.b32 	%r4142, %r4137, %r4138, 18;
	mov.b64 	%rd6052, {%r4142, %r4141};
	xor.b64  	%rd6053, %rd6051, %rd6052;
	shf.l.wrap.b32 	%r4143, %r4137, %r4138, 23;
	shf.l.wrap.b32 	%r4144, %r4138, %r4137, 23;
	mov.b64 	%rd6054, {%r4144, %r4143};
	xor.b64  	%rd6055, %rd6053, %rd6054;
	add.s64 	%rd6056, %rd6050, %rd6055;
	add.s64 	%rd6057, %rd6056, 1135362057144423861;
	add.s64 	%rd6058, %rd6057, %rd5934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4145,%dummy}, %rd6032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4146}, %rd6032;
	}
	shf.r.wrap.b32 	%r4147, %r4146, %r4145, 28;
	shf.r.wrap.b32 	%r4148, %r4145, %r4146, 28;
	mov.b64 	%rd6059, {%r4148, %r4147};
	shf.l.wrap.b32 	%r4149, %r4145, %r4146, 30;
	shf.l.wrap.b32 	%r4150, %r4146, %r4145, 30;
	mov.b64 	%rd6060, {%r4150, %r4149};
	xor.b64  	%rd6061, %rd6059, %rd6060;
	shf.l.wrap.b32 	%r4151, %r4145, %r4146, 25;
	shf.l.wrap.b32 	%r4152, %r4146, %r4145, 25;
	mov.b64 	%rd6062, {%r4152, %r4151};
	xor.b64  	%rd6063, %rd6061, %rd6062;
	and.b64  	%rd6064, %rd6032, %rd5995;
	or.b64  	%rd6065, %rd6032, %rd5995;
	and.b64  	%rd6066, %rd6065, %rd5958;
	or.b64  	%rd6067, %rd6066, %rd6064;
	add.s64 	%rd6068, %rd6067, %rd6063;
	add.s64 	%rd6069, %rd6068, %rd6057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4153,%dummy}, %rd6008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4154}, %rd6008;
	}
	shf.r.wrap.b32 	%r4155, %r4154, %r4153, 19;
	shf.r.wrap.b32 	%r4156, %r4153, %r4154, 19;
	mov.b64 	%rd6070, {%r4156, %r4155};
	shf.l.wrap.b32 	%r4157, %r4153, %r4154, 3;
	shf.l.wrap.b32 	%r4158, %r4154, %r4153, 3;
	mov.b64 	%rd6071, {%r4158, %r4157};
	xor.b64  	%rd6072, %rd6070, %rd6071;
	shr.u64 	%rd6073, %rd6008, 6;
	xor.b64  	%rd6074, %rd6072, %rd6073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4159,%dummy}, %rd9844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4160}, %rd9844;
	}
	shf.r.wrap.b32 	%r4161, %r4160, %r4159, 8;
	shf.r.wrap.b32 	%r4162, %r4159, %r4160, 8;
	mov.b64 	%rd6075, {%r4162, %r4161};
	shf.r.wrap.b32 	%r4163, %r4160, %r4159, 1;
	shf.r.wrap.b32 	%r4164, %r4159, %r4160, 1;
	mov.b64 	%rd6076, {%r4164, %r4163};
	xor.b64  	%rd6077, %rd6076, %rd6075;
	shr.u64 	%rd6078, %rd9844, 7;
	xor.b64  	%rd6079, %rd6077, %rd6078;
	add.s64 	%rd6080, %rd6074, %rd9845;
	add.s64 	%rd6081, %rd6080, %rd9836;
	add.s64 	%rd6082, %rd6081, %rd6079;
	add.s64 	%rd6083, %rd6082, %rd5947;
	xor.b64  	%rd6084, %rd6021, %rd5984;
	and.b64  	%rd6085, %rd6058, %rd6084;
	xor.b64  	%rd6086, %rd6085, %rd5984;
	add.s64 	%rd6087, %rd6083, %rd6086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4165,%dummy}, %rd6058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4166}, %rd6058;
	}
	shf.r.wrap.b32 	%r4167, %r4166, %r4165, 14;
	shf.r.wrap.b32 	%r4168, %r4165, %r4166, 14;
	mov.b64 	%rd6088, {%r4168, %r4167};
	shf.r.wrap.b32 	%r4169, %r4166, %r4165, 18;
	shf.r.wrap.b32 	%r4170, %r4165, %r4166, 18;
	mov.b64 	%rd6089, {%r4170, %r4169};
	xor.b64  	%rd6090, %rd6088, %rd6089;
	shf.l.wrap.b32 	%r4171, %r4165, %r4166, 23;
	shf.l.wrap.b32 	%r4172, %r4166, %r4165, 23;
	mov.b64 	%rd6091, {%r4172, %r4171};
	xor.b64  	%rd6092, %rd6090, %rd6091;
	add.s64 	%rd6093, %rd6087, %rd6092;
	add.s64 	%rd6094, %rd6093, 2597628984639134821;
	add.s64 	%rd6095, %rd6094, %rd5958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4173,%dummy}, %rd6069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4174}, %rd6069;
	}
	shf.r.wrap.b32 	%r4175, %r4174, %r4173, 28;
	shf.r.wrap.b32 	%r4176, %r4173, %r4174, 28;
	mov.b64 	%rd6096, {%r4176, %r4175};
	shf.l.wrap.b32 	%r4177, %r4173, %r4174, 30;
	shf.l.wrap.b32 	%r4178, %r4174, %r4173, 30;
	mov.b64 	%rd6097, {%r4178, %r4177};
	xor.b64  	%rd6098, %rd6096, %rd6097;
	shf.l.wrap.b32 	%r4179, %r4173, %r4174, 25;
	shf.l.wrap.b32 	%r4180, %r4174, %r4173, 25;
	mov.b64 	%rd6099, {%r4180, %r4179};
	xor.b64  	%rd6100, %rd6098, %rd6099;
	and.b64  	%rd6101, %rd6069, %rd6032;
	or.b64  	%rd6102, %rd6069, %rd6032;
	and.b64  	%rd6103, %rd6102, %rd5995;
	or.b64  	%rd6104, %rd6103, %rd6101;
	add.s64 	%rd6105, %rd6104, %rd6100;
	add.s64 	%rd6106, %rd6105, %rd6094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4181,%dummy}, %rd6045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4182}, %rd6045;
	}
	shf.r.wrap.b32 	%r4183, %r4182, %r4181, 19;
	shf.r.wrap.b32 	%r4184, %r4181, %r4182, 19;
	mov.b64 	%rd6107, {%r4184, %r4183};
	shf.l.wrap.b32 	%r4185, %r4181, %r4182, 3;
	shf.l.wrap.b32 	%r4186, %r4182, %r4181, 3;
	mov.b64 	%rd6108, {%r4186, %r4185};
	xor.b64  	%rd6109, %rd6107, %rd6108;
	shr.u64 	%rd6110, %rd6045, 6;
	xor.b64  	%rd6111, %rd6109, %rd6110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4187,%dummy}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4188}, %rd9843;
	}
	shf.r.wrap.b32 	%r4189, %r4188, %r4187, 8;
	shf.r.wrap.b32 	%r4190, %r4187, %r4188, 8;
	mov.b64 	%rd6112, {%r4190, %r4189};
	shf.r.wrap.b32 	%r4191, %r4188, %r4187, 1;
	shf.r.wrap.b32 	%r4192, %r4187, %r4188, 1;
	mov.b64 	%rd6113, {%r4192, %r4191};
	xor.b64  	%rd6114, %rd6113, %rd6112;
	shr.u64 	%rd6115, %rd9843, 7;
	xor.b64  	%rd6116, %rd6114, %rd6115;
	add.s64 	%rd6117, %rd6111, %rd9844;
	add.s64 	%rd6118, %rd6117, %rd9835;
	add.s64 	%rd6119, %rd6118, %rd6116;
	add.s64 	%rd6120, %rd6119, %rd5984;
	xor.b64  	%rd6121, %rd6058, %rd6021;
	and.b64  	%rd6122, %rd6095, %rd6121;
	xor.b64  	%rd6123, %rd6122, %rd6021;
	add.s64 	%rd6124, %rd6120, %rd6123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4193,%dummy}, %rd6095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4194}, %rd6095;
	}
	shf.r.wrap.b32 	%r4195, %r4194, %r4193, 14;
	shf.r.wrap.b32 	%r4196, %r4193, %r4194, 14;
	mov.b64 	%rd6125, {%r4196, %r4195};
	shf.r.wrap.b32 	%r4197, %r4194, %r4193, 18;
	shf.r.wrap.b32 	%r4198, %r4193, %r4194, 18;
	mov.b64 	%rd6126, {%r4198, %r4197};
	xor.b64  	%rd6127, %rd6125, %rd6126;
	shf.l.wrap.b32 	%r4199, %r4193, %r4194, 23;
	shf.l.wrap.b32 	%r4200, %r4194, %r4193, 23;
	mov.b64 	%rd6128, {%r4200, %r4199};
	xor.b64  	%rd6129, %rd6127, %rd6128;
	add.s64 	%rd6130, %rd6124, %rd6129;
	add.s64 	%rd6131, %rd6130, 3308224258029322869;
	add.s64 	%rd6132, %rd6131, %rd5995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4201,%dummy}, %rd6106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4202}, %rd6106;
	}
	shf.r.wrap.b32 	%r4203, %r4202, %r4201, 28;
	shf.r.wrap.b32 	%r4204, %r4201, %r4202, 28;
	mov.b64 	%rd6133, {%r4204, %r4203};
	shf.l.wrap.b32 	%r4205, %r4201, %r4202, 30;
	shf.l.wrap.b32 	%r4206, %r4202, %r4201, 30;
	mov.b64 	%rd6134, {%r4206, %r4205};
	xor.b64  	%rd6135, %rd6133, %rd6134;
	shf.l.wrap.b32 	%r4207, %r4201, %r4202, 25;
	shf.l.wrap.b32 	%r4208, %r4202, %r4201, 25;
	mov.b64 	%rd6136, {%r4208, %r4207};
	xor.b64  	%rd6137, %rd6135, %rd6136;
	and.b64  	%rd6138, %rd6106, %rd6069;
	or.b64  	%rd6139, %rd6106, %rd6069;
	and.b64  	%rd6140, %rd6139, %rd6032;
	or.b64  	%rd6141, %rd6140, %rd6138;
	add.s64 	%rd6142, %rd6141, %rd6137;
	add.s64 	%rd6143, %rd6142, %rd6131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4209,%dummy}, %rd6082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4210}, %rd6082;
	}
	shf.r.wrap.b32 	%r4211, %r4210, %r4209, 19;
	shf.r.wrap.b32 	%r4212, %r4209, %r4210, 19;
	mov.b64 	%rd6144, {%r4212, %r4211};
	shf.l.wrap.b32 	%r4213, %r4209, %r4210, 3;
	shf.l.wrap.b32 	%r4214, %r4210, %r4209, 3;
	mov.b64 	%rd6145, {%r4214, %r4213};
	xor.b64  	%rd6146, %rd6144, %rd6145;
	shr.u64 	%rd6147, %rd6082, 6;
	xor.b64  	%rd6148, %rd6146, %rd6147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4215,%dummy}, %rd9842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4216}, %rd9842;
	}
	shf.r.wrap.b32 	%r4217, %r4216, %r4215, 8;
	shf.r.wrap.b32 	%r4218, %r4215, %r4216, 8;
	mov.b64 	%rd6149, {%r4218, %r4217};
	shf.r.wrap.b32 	%r4219, %r4216, %r4215, 1;
	shf.r.wrap.b32 	%r4220, %r4215, %r4216, 1;
	mov.b64 	%rd6150, {%r4220, %r4219};
	xor.b64  	%rd6151, %rd6150, %rd6149;
	shr.u64 	%rd6152, %rd9842, 7;
	xor.b64  	%rd6153, %rd6151, %rd6152;
	add.s64 	%rd6154, %rd6148, %rd9843;
	add.s64 	%rd6155, %rd6154, %rd9834;
	add.s64 	%rd6156, %rd6155, %rd6153;
	add.s64 	%rd6157, %rd6156, %rd6021;
	xor.b64  	%rd6158, %rd6095, %rd6058;
	and.b64  	%rd6159, %rd6132, %rd6158;
	xor.b64  	%rd6160, %rd6159, %rd6058;
	add.s64 	%rd6161, %rd6157, %rd6160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4221,%dummy}, %rd6132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4222}, %rd6132;
	}
	shf.r.wrap.b32 	%r4223, %r4222, %r4221, 14;
	shf.r.wrap.b32 	%r4224, %r4221, %r4222, 14;
	mov.b64 	%rd6162, {%r4224, %r4223};
	shf.r.wrap.b32 	%r4225, %r4222, %r4221, 18;
	shf.r.wrap.b32 	%r4226, %r4221, %r4222, 18;
	mov.b64 	%rd6163, {%r4226, %r4225};
	xor.b64  	%rd6164, %rd6162, %rd6163;
	shf.l.wrap.b32 	%r4227, %r4221, %r4222, 23;
	shf.l.wrap.b32 	%r4228, %r4222, %r4221, 23;
	mov.b64 	%rd6165, {%r4228, %r4227};
	xor.b64  	%rd6166, %rd6164, %rd6165;
	add.s64 	%rd6167, %rd6161, %rd6166;
	add.s64 	%rd6168, %rd6167, 5365058923640841347;
	add.s64 	%rd6169, %rd6168, %rd6032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4229,%dummy}, %rd6143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4230}, %rd6143;
	}
	shf.r.wrap.b32 	%r4231, %r4230, %r4229, 28;
	shf.r.wrap.b32 	%r4232, %r4229, %r4230, 28;
	mov.b64 	%rd6170, {%r4232, %r4231};
	shf.l.wrap.b32 	%r4233, %r4229, %r4230, 30;
	shf.l.wrap.b32 	%r4234, %r4230, %r4229, 30;
	mov.b64 	%rd6171, {%r4234, %r4233};
	xor.b64  	%rd6172, %rd6170, %rd6171;
	shf.l.wrap.b32 	%r4235, %r4229, %r4230, 25;
	shf.l.wrap.b32 	%r4236, %r4230, %r4229, 25;
	mov.b64 	%rd6173, {%r4236, %r4235};
	xor.b64  	%rd6174, %rd6172, %rd6173;
	and.b64  	%rd6175, %rd6143, %rd6106;
	or.b64  	%rd6176, %rd6143, %rd6106;
	and.b64  	%rd6177, %rd6176, %rd6069;
	or.b64  	%rd6178, %rd6177, %rd6175;
	add.s64 	%rd6179, %rd6178, %rd6174;
	add.s64 	%rd6180, %rd6179, %rd6168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4237,%dummy}, %rd6119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4238}, %rd6119;
	}
	shf.r.wrap.b32 	%r4239, %r4238, %r4237, 19;
	shf.r.wrap.b32 	%r4240, %r4237, %r4238, 19;
	mov.b64 	%rd6181, {%r4240, %r4239};
	shf.l.wrap.b32 	%r4241, %r4237, %r4238, 3;
	shf.l.wrap.b32 	%r4242, %r4238, %r4237, 3;
	mov.b64 	%rd6182, {%r4242, %r4241};
	xor.b64  	%rd6183, %rd6181, %rd6182;
	shr.u64 	%rd6184, %rd6119, 6;
	xor.b64  	%rd6185, %rd6183, %rd6184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4243,%dummy}, %rd9841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4244}, %rd9841;
	}
	shf.r.wrap.b32 	%r4245, %r4244, %r4243, 8;
	shf.r.wrap.b32 	%r4246, %r4243, %r4244, 8;
	mov.b64 	%rd6186, {%r4246, %r4245};
	shf.r.wrap.b32 	%r4247, %r4244, %r4243, 1;
	shf.r.wrap.b32 	%r4248, %r4243, %r4244, 1;
	mov.b64 	%rd6187, {%r4248, %r4247};
	xor.b64  	%rd6188, %rd6187, %rd6186;
	shr.u64 	%rd6189, %rd9841, 7;
	xor.b64  	%rd6190, %rd6188, %rd6189;
	add.s64 	%rd6191, %rd6185, %rd9842;
	add.s64 	%rd6192, %rd6191, %rd5574;
	add.s64 	%rd6193, %rd6192, %rd6190;
	add.s64 	%rd6194, %rd6193, %rd6058;
	xor.b64  	%rd6195, %rd6132, %rd6095;
	and.b64  	%rd6196, %rd6169, %rd6195;
	xor.b64  	%rd6197, %rd6196, %rd6095;
	add.s64 	%rd6198, %rd6194, %rd6197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4249,%dummy}, %rd6169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4250}, %rd6169;
	}
	shf.r.wrap.b32 	%r4251, %r4250, %r4249, 14;
	shf.r.wrap.b32 	%r4252, %r4249, %r4250, 14;
	mov.b64 	%rd6199, {%r4252, %r4251};
	shf.r.wrap.b32 	%r4253, %r4250, %r4249, 18;
	shf.r.wrap.b32 	%r4254, %r4249, %r4250, 18;
	mov.b64 	%rd6200, {%r4254, %r4253};
	xor.b64  	%rd6201, %rd6199, %rd6200;
	shf.l.wrap.b32 	%r4255, %r4249, %r4250, 23;
	shf.l.wrap.b32 	%r4256, %r4250, %r4249, 23;
	mov.b64 	%rd6202, {%r4256, %r4255};
	xor.b64  	%rd6203, %rd6201, %rd6202;
	add.s64 	%rd6204, %rd6198, %rd6203;
	add.s64 	%rd6205, %rd6204, 6679025012923562964;
	add.s64 	%rd6206, %rd6205, %rd6069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4257,%dummy}, %rd6180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4258}, %rd6180;
	}
	shf.r.wrap.b32 	%r4259, %r4258, %r4257, 28;
	shf.r.wrap.b32 	%r4260, %r4257, %r4258, 28;
	mov.b64 	%rd6207, {%r4260, %r4259};
	shf.l.wrap.b32 	%r4261, %r4257, %r4258, 30;
	shf.l.wrap.b32 	%r4262, %r4258, %r4257, 30;
	mov.b64 	%rd6208, {%r4262, %r4261};
	xor.b64  	%rd6209, %rd6207, %rd6208;
	shf.l.wrap.b32 	%r4263, %r4257, %r4258, 25;
	shf.l.wrap.b32 	%r4264, %r4258, %r4257, 25;
	mov.b64 	%rd6210, {%r4264, %r4263};
	xor.b64  	%rd6211, %rd6209, %rd6210;
	and.b64  	%rd6212, %rd6180, %rd6143;
	or.b64  	%rd6213, %rd6180, %rd6143;
	and.b64  	%rd6214, %rd6213, %rd6106;
	or.b64  	%rd6215, %rd6214, %rd6212;
	add.s64 	%rd6216, %rd6215, %rd6211;
	add.s64 	%rd6217, %rd6216, %rd6205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4265,%dummy}, %rd6156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4266}, %rd6156;
	}
	shf.r.wrap.b32 	%r4267, %r4266, %r4265, 19;
	shf.r.wrap.b32 	%r4268, %r4265, %r4266, 19;
	mov.b64 	%rd6218, {%r4268, %r4267};
	shf.l.wrap.b32 	%r4269, %r4265, %r4266, 3;
	shf.l.wrap.b32 	%r4270, %r4266, %r4265, 3;
	mov.b64 	%rd6219, {%r4270, %r4269};
	xor.b64  	%rd6220, %rd6218, %rd6219;
	shr.u64 	%rd6221, %rd6156, 6;
	xor.b64  	%rd6222, %rd6220, %rd6221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4271,%dummy}, %rd9840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4272}, %rd9840;
	}
	shf.r.wrap.b32 	%r4273, %r4272, %r4271, 8;
	shf.r.wrap.b32 	%r4274, %r4271, %r4272, 8;
	mov.b64 	%rd6223, {%r4274, %r4273};
	shf.r.wrap.b32 	%r4275, %r4272, %r4271, 1;
	shf.r.wrap.b32 	%r4276, %r4271, %r4272, 1;
	mov.b64 	%rd6224, {%r4276, %r4275};
	xor.b64  	%rd6225, %rd6224, %rd6223;
	shr.u64 	%rd6226, %rd9840, 7;
	xor.b64  	%rd6227, %rd6225, %rd6226;
	add.s64 	%rd6228, %rd6222, %rd9841;
	add.s64 	%rd6229, %rd6228, %rd5971;
	add.s64 	%rd6230, %rd6229, %rd6227;
	add.s64 	%rd6231, %rd6230, %rd6095;
	xor.b64  	%rd6232, %rd6169, %rd6132;
	and.b64  	%rd6233, %rd6206, %rd6232;
	xor.b64  	%rd6234, %rd6233, %rd6132;
	add.s64 	%rd6235, %rd6231, %rd6234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4277,%dummy}, %rd6206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4278}, %rd6206;
	}
	shf.r.wrap.b32 	%r4279, %r4278, %r4277, 14;
	shf.r.wrap.b32 	%r4280, %r4277, %r4278, 14;
	mov.b64 	%rd6236, {%r4280, %r4279};
	shf.r.wrap.b32 	%r4281, %r4278, %r4277, 18;
	shf.r.wrap.b32 	%r4282, %r4277, %r4278, 18;
	mov.b64 	%rd6237, {%r4282, %r4281};
	xor.b64  	%rd6238, %rd6236, %rd6237;
	shf.l.wrap.b32 	%r4283, %r4277, %r4278, 23;
	shf.l.wrap.b32 	%r4284, %r4278, %r4277, 23;
	mov.b64 	%rd6239, {%r4284, %r4283};
	xor.b64  	%rd6240, %rd6238, %rd6239;
	add.s64 	%rd6241, %rd6235, %rd6240;
	add.s64 	%rd6242, %rd6241, 8573033837759648693;
	add.s64 	%rd6243, %rd6242, %rd6106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4285,%dummy}, %rd6217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4286}, %rd6217;
	}
	shf.r.wrap.b32 	%r4287, %r4286, %r4285, 28;
	shf.r.wrap.b32 	%r4288, %r4285, %r4286, 28;
	mov.b64 	%rd6244, {%r4288, %r4287};
	shf.l.wrap.b32 	%r4289, %r4285, %r4286, 30;
	shf.l.wrap.b32 	%r4290, %r4286, %r4285, 30;
	mov.b64 	%rd6245, {%r4290, %r4289};
	xor.b64  	%rd6246, %rd6244, %rd6245;
	shf.l.wrap.b32 	%r4291, %r4285, %r4286, 25;
	shf.l.wrap.b32 	%r4292, %r4286, %r4285, 25;
	mov.b64 	%rd6247, {%r4292, %r4291};
	xor.b64  	%rd6248, %rd6246, %rd6247;
	and.b64  	%rd6249, %rd6217, %rd6180;
	or.b64  	%rd6250, %rd6217, %rd6180;
	and.b64  	%rd6251, %rd6250, %rd6143;
	or.b64  	%rd6252, %rd6251, %rd6249;
	add.s64 	%rd6253, %rd6252, %rd6248;
	add.s64 	%rd6254, %rd6253, %rd6242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4293,%dummy}, %rd6193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4294}, %rd6193;
	}
	shf.r.wrap.b32 	%r4295, %r4294, %r4293, 19;
	shf.r.wrap.b32 	%r4296, %r4293, %r4294, 19;
	mov.b64 	%rd6255, {%r4296, %r4295};
	shf.l.wrap.b32 	%r4297, %r4293, %r4294, 3;
	shf.l.wrap.b32 	%r4298, %r4294, %r4293, 3;
	mov.b64 	%rd6256, {%r4298, %r4297};
	xor.b64  	%rd6257, %rd6255, %rd6256;
	shr.u64 	%rd6258, %rd6193, 6;
	xor.b64  	%rd6259, %rd6257, %rd6258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4299,%dummy}, %rd9839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4300}, %rd9839;
	}
	shf.r.wrap.b32 	%r4301, %r4300, %r4299, 8;
	shf.r.wrap.b32 	%r4302, %r4299, %r4300, 8;
	mov.b64 	%rd6260, {%r4302, %r4301};
	shf.r.wrap.b32 	%r4303, %r4300, %r4299, 1;
	shf.r.wrap.b32 	%r4304, %r4299, %r4300, 1;
	mov.b64 	%rd6261, {%r4304, %r4303};
	xor.b64  	%rd6262, %rd6261, %rd6260;
	shr.u64 	%rd6263, %rd9839, 7;
	xor.b64  	%rd6264, %rd6262, %rd6263;
	add.s64 	%rd6265, %rd6259, %rd9840;
	add.s64 	%rd6266, %rd6265, %rd6008;
	add.s64 	%rd6267, %rd6266, %rd6264;
	add.s64 	%rd6268, %rd6267, %rd6132;
	xor.b64  	%rd6269, %rd6206, %rd6169;
	and.b64  	%rd6270, %rd6243, %rd6269;
	xor.b64  	%rd6271, %rd6270, %rd6169;
	add.s64 	%rd6272, %rd6268, %rd6271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4305,%dummy}, %rd6243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4306}, %rd6243;
	}
	shf.r.wrap.b32 	%r4307, %r4306, %r4305, 14;
	shf.r.wrap.b32 	%r4308, %r4305, %r4306, 14;
	mov.b64 	%rd6273, {%r4308, %r4307};
	shf.r.wrap.b32 	%r4309, %r4306, %r4305, 18;
	shf.r.wrap.b32 	%r4310, %r4305, %r4306, 18;
	mov.b64 	%rd6274, {%r4310, %r4309};
	xor.b64  	%rd6275, %rd6273, %rd6274;
	shf.l.wrap.b32 	%r4311, %r4305, %r4306, 23;
	shf.l.wrap.b32 	%r4312, %r4306, %r4305, 23;
	mov.b64 	%rd6276, {%r4312, %r4311};
	xor.b64  	%rd6277, %rd6275, %rd6276;
	add.s64 	%rd6278, %rd6272, %rd6277;
	add.s64 	%rd6279, %rd6278, -7476448914759557205;
	add.s64 	%rd6280, %rd6279, %rd6143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4313,%dummy}, %rd6254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4314}, %rd6254;
	}
	shf.r.wrap.b32 	%r4315, %r4314, %r4313, 28;
	shf.r.wrap.b32 	%r4316, %r4313, %r4314, 28;
	mov.b64 	%rd6281, {%r4316, %r4315};
	shf.l.wrap.b32 	%r4317, %r4313, %r4314, 30;
	shf.l.wrap.b32 	%r4318, %r4314, %r4313, 30;
	mov.b64 	%rd6282, {%r4318, %r4317};
	xor.b64  	%rd6283, %rd6281, %rd6282;
	shf.l.wrap.b32 	%r4319, %r4313, %r4314, 25;
	shf.l.wrap.b32 	%r4320, %r4314, %r4313, 25;
	mov.b64 	%rd6284, {%r4320, %r4319};
	xor.b64  	%rd6285, %rd6283, %rd6284;
	and.b64  	%rd6286, %rd6254, %rd6217;
	or.b64  	%rd6287, %rd6254, %rd6217;
	and.b64  	%rd6288, %rd6287, %rd6180;
	or.b64  	%rd6289, %rd6288, %rd6286;
	add.s64 	%rd6290, %rd6289, %rd6285;
	add.s64 	%rd6291, %rd6290, %rd6279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4321,%dummy}, %rd6230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4322}, %rd6230;
	}
	shf.r.wrap.b32 	%r4323, %r4322, %r4321, 19;
	shf.r.wrap.b32 	%r4324, %r4321, %r4322, 19;
	mov.b64 	%rd6292, {%r4324, %r4323};
	shf.l.wrap.b32 	%r4325, %r4321, %r4322, 3;
	shf.l.wrap.b32 	%r4326, %r4322, %r4321, 3;
	mov.b64 	%rd6293, {%r4326, %r4325};
	xor.b64  	%rd6294, %rd6292, %rd6293;
	shr.u64 	%rd6295, %rd6230, 6;
	xor.b64  	%rd6296, %rd6294, %rd6295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4327,%dummy}, %rd9838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4328}, %rd9838;
	}
	shf.r.wrap.b32 	%r4329, %r4328, %r4327, 8;
	shf.r.wrap.b32 	%r4330, %r4327, %r4328, 8;
	mov.b64 	%rd6297, {%r4330, %r4329};
	shf.r.wrap.b32 	%r4331, %r4328, %r4327, 1;
	shf.r.wrap.b32 	%r4332, %r4327, %r4328, 1;
	mov.b64 	%rd6298, {%r4332, %r4331};
	xor.b64  	%rd6299, %rd6298, %rd6297;
	shr.u64 	%rd6300, %rd9838, 7;
	xor.b64  	%rd6301, %rd6299, %rd6300;
	add.s64 	%rd6302, %rd6296, %rd9839;
	add.s64 	%rd6303, %rd6302, %rd6045;
	add.s64 	%rd6304, %rd6303, %rd6301;
	add.s64 	%rd6305, %rd6304, %rd6169;
	xor.b64  	%rd6306, %rd6243, %rd6206;
	and.b64  	%rd6307, %rd6280, %rd6306;
	xor.b64  	%rd6308, %rd6307, %rd6206;
	add.s64 	%rd6309, %rd6305, %rd6308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4333,%dummy}, %rd6280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4334}, %rd6280;
	}
	shf.r.wrap.b32 	%r4335, %r4334, %r4333, 14;
	shf.r.wrap.b32 	%r4336, %r4333, %r4334, 14;
	mov.b64 	%rd6310, {%r4336, %r4335};
	shf.r.wrap.b32 	%r4337, %r4334, %r4333, 18;
	shf.r.wrap.b32 	%r4338, %r4333, %r4334, 18;
	mov.b64 	%rd6311, {%r4338, %r4337};
	xor.b64  	%rd6312, %rd6310, %rd6311;
	shf.l.wrap.b32 	%r4339, %r4333, %r4334, 23;
	shf.l.wrap.b32 	%r4340, %r4334, %r4333, 23;
	mov.b64 	%rd6313, {%r4340, %r4339};
	xor.b64  	%rd6314, %rd6312, %rd6313;
	add.s64 	%rd6315, %rd6309, %rd6314;
	add.s64 	%rd6316, %rd6315, -6327057829258317296;
	add.s64 	%rd6317, %rd6316, %rd6180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4341,%dummy}, %rd6291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4342}, %rd6291;
	}
	shf.r.wrap.b32 	%r4343, %r4342, %r4341, 28;
	shf.r.wrap.b32 	%r4344, %r4341, %r4342, 28;
	mov.b64 	%rd6318, {%r4344, %r4343};
	shf.l.wrap.b32 	%r4345, %r4341, %r4342, 30;
	shf.l.wrap.b32 	%r4346, %r4342, %r4341, 30;
	mov.b64 	%rd6319, {%r4346, %r4345};
	xor.b64  	%rd6320, %rd6318, %rd6319;
	shf.l.wrap.b32 	%r4347, %r4341, %r4342, 25;
	shf.l.wrap.b32 	%r4348, %r4342, %r4341, 25;
	mov.b64 	%rd6321, {%r4348, %r4347};
	xor.b64  	%rd6322, %rd6320, %rd6321;
	and.b64  	%rd6323, %rd6291, %rd6254;
	or.b64  	%rd6324, %rd6291, %rd6254;
	and.b64  	%rd6325, %rd6324, %rd6217;
	or.b64  	%rd6326, %rd6325, %rd6323;
	add.s64 	%rd6327, %rd6326, %rd6322;
	add.s64 	%rd6328, %rd6327, %rd6316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4349,%dummy}, %rd6267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4350}, %rd6267;
	}
	shf.r.wrap.b32 	%r4351, %r4350, %r4349, 19;
	shf.r.wrap.b32 	%r4352, %r4349, %r4350, 19;
	mov.b64 	%rd6329, {%r4352, %r4351};
	shf.l.wrap.b32 	%r4353, %r4349, %r4350, 3;
	shf.l.wrap.b32 	%r4354, %r4350, %r4349, 3;
	mov.b64 	%rd6330, {%r4354, %r4353};
	xor.b64  	%rd6331, %rd6329, %rd6330;
	shr.u64 	%rd6332, %rd6267, 6;
	xor.b64  	%rd6333, %rd6331, %rd6332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4355,%dummy}, %rd9837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4356}, %rd9837;
	}
	shf.r.wrap.b32 	%r4357, %r4356, %r4355, 8;
	shf.r.wrap.b32 	%r4358, %r4355, %r4356, 8;
	mov.b64 	%rd6334, {%r4358, %r4357};
	shf.r.wrap.b32 	%r4359, %r4356, %r4355, 1;
	shf.r.wrap.b32 	%r4360, %r4355, %r4356, 1;
	mov.b64 	%rd6335, {%r4360, %r4359};
	xor.b64  	%rd6336, %rd6335, %rd6334;
	shr.u64 	%rd6337, %rd9837, 7;
	xor.b64  	%rd6338, %rd6336, %rd6337;
	add.s64 	%rd6339, %rd6333, %rd9838;
	add.s64 	%rd6340, %rd6339, %rd6082;
	add.s64 	%rd6341, %rd6340, %rd6338;
	add.s64 	%rd6342, %rd6341, %rd6206;
	xor.b64  	%rd6343, %rd6280, %rd6243;
	and.b64  	%rd6344, %rd6317, %rd6343;
	xor.b64  	%rd6345, %rd6344, %rd6243;
	add.s64 	%rd6346, %rd6342, %rd6345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4361,%dummy}, %rd6317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4362}, %rd6317;
	}
	shf.r.wrap.b32 	%r4363, %r4362, %r4361, 14;
	shf.r.wrap.b32 	%r4364, %r4361, %r4362, 14;
	mov.b64 	%rd6347, {%r4364, %r4363};
	shf.r.wrap.b32 	%r4365, %r4362, %r4361, 18;
	shf.r.wrap.b32 	%r4366, %r4361, %r4362, 18;
	mov.b64 	%rd6348, {%r4366, %r4365};
	xor.b64  	%rd6349, %rd6347, %rd6348;
	shf.l.wrap.b32 	%r4367, %r4361, %r4362, 23;
	shf.l.wrap.b32 	%r4368, %r4362, %r4361, 23;
	mov.b64 	%rd6350, {%r4368, %r4367};
	xor.b64  	%rd6351, %rd6349, %rd6350;
	add.s64 	%rd6352, %rd6346, %rd6351;
	add.s64 	%rd6353, %rd6352, -5763719355590565569;
	add.s64 	%rd6354, %rd6353, %rd6217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4369,%dummy}, %rd6328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4370}, %rd6328;
	}
	shf.r.wrap.b32 	%r4371, %r4370, %r4369, 28;
	shf.r.wrap.b32 	%r4372, %r4369, %r4370, 28;
	mov.b64 	%rd6355, {%r4372, %r4371};
	shf.l.wrap.b32 	%r4373, %r4369, %r4370, 30;
	shf.l.wrap.b32 	%r4374, %r4370, %r4369, 30;
	mov.b64 	%rd6356, {%r4374, %r4373};
	xor.b64  	%rd6357, %rd6355, %rd6356;
	shf.l.wrap.b32 	%r4375, %r4369, %r4370, 25;
	shf.l.wrap.b32 	%r4376, %r4370, %r4369, 25;
	mov.b64 	%rd6358, {%r4376, %r4375};
	xor.b64  	%rd6359, %rd6357, %rd6358;
	and.b64  	%rd6360, %rd6328, %rd6291;
	or.b64  	%rd6361, %rd6328, %rd6291;
	and.b64  	%rd6362, %rd6361, %rd6254;
	or.b64  	%rd6363, %rd6362, %rd6360;
	add.s64 	%rd6364, %rd6363, %rd6359;
	add.s64 	%rd6365, %rd6364, %rd6353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4377,%dummy}, %rd6304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4378}, %rd6304;
	}
	shf.r.wrap.b32 	%r4379, %r4378, %r4377, 19;
	shf.r.wrap.b32 	%r4380, %r4377, %r4378, 19;
	mov.b64 	%rd6366, {%r4380, %r4379};
	shf.l.wrap.b32 	%r4381, %r4377, %r4378, 3;
	shf.l.wrap.b32 	%r4382, %r4378, %r4377, 3;
	mov.b64 	%rd6367, {%r4382, %r4381};
	xor.b64  	%rd6368, %rd6366, %rd6367;
	shr.u64 	%rd6369, %rd6304, 6;
	xor.b64  	%rd6370, %rd6368, %rd6369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4383,%dummy}, %rd9836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4384}, %rd9836;
	}
	shf.r.wrap.b32 	%r4385, %r4384, %r4383, 8;
	shf.r.wrap.b32 	%r4386, %r4383, %r4384, 8;
	mov.b64 	%rd6371, {%r4386, %r4385};
	shf.r.wrap.b32 	%r4387, %r4384, %r4383, 1;
	shf.r.wrap.b32 	%r4388, %r4383, %r4384, 1;
	mov.b64 	%rd6372, {%r4388, %r4387};
	xor.b64  	%rd6373, %rd6372, %rd6371;
	shr.u64 	%rd6374, %rd9836, 7;
	xor.b64  	%rd6375, %rd6373, %rd6374;
	add.s64 	%rd6376, %rd6370, %rd9837;
	add.s64 	%rd6377, %rd6376, %rd6119;
	add.s64 	%rd6378, %rd6377, %rd6375;
	add.s64 	%rd6379, %rd6378, %rd6243;
	xor.b64  	%rd6380, %rd6317, %rd6280;
	and.b64  	%rd6381, %rd6354, %rd6380;
	xor.b64  	%rd6382, %rd6381, %rd6280;
	add.s64 	%rd6383, %rd6379, %rd6382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4389,%dummy}, %rd6354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4390}, %rd6354;
	}
	shf.r.wrap.b32 	%r4391, %r4390, %r4389, 14;
	shf.r.wrap.b32 	%r4392, %r4389, %r4390, 14;
	mov.b64 	%rd6384, {%r4392, %r4391};
	shf.r.wrap.b32 	%r4393, %r4390, %r4389, 18;
	shf.r.wrap.b32 	%r4394, %r4389, %r4390, 18;
	mov.b64 	%rd6385, {%r4394, %r4393};
	xor.b64  	%rd6386, %rd6384, %rd6385;
	shf.l.wrap.b32 	%r4395, %r4389, %r4390, 23;
	shf.l.wrap.b32 	%r4396, %r4390, %r4389, 23;
	mov.b64 	%rd6387, {%r4396, %r4395};
	xor.b64  	%rd6388, %rd6386, %rd6387;
	add.s64 	%rd6389, %rd6383, %rd6388;
	add.s64 	%rd6390, %rd6389, -4658551843659510044;
	add.s64 	%rd6391, %rd6390, %rd6254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4397,%dummy}, %rd6365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4398}, %rd6365;
	}
	shf.r.wrap.b32 	%r4399, %r4398, %r4397, 28;
	shf.r.wrap.b32 	%r4400, %r4397, %r4398, 28;
	mov.b64 	%rd6392, {%r4400, %r4399};
	shf.l.wrap.b32 	%r4401, %r4397, %r4398, 30;
	shf.l.wrap.b32 	%r4402, %r4398, %r4397, 30;
	mov.b64 	%rd6393, {%r4402, %r4401};
	xor.b64  	%rd6394, %rd6392, %rd6393;
	shf.l.wrap.b32 	%r4403, %r4397, %r4398, 25;
	shf.l.wrap.b32 	%r4404, %r4398, %r4397, 25;
	mov.b64 	%rd6395, {%r4404, %r4403};
	xor.b64  	%rd6396, %rd6394, %rd6395;
	and.b64  	%rd6397, %rd6365, %rd6328;
	or.b64  	%rd6398, %rd6365, %rd6328;
	and.b64  	%rd6399, %rd6398, %rd6291;
	or.b64  	%rd6400, %rd6399, %rd6397;
	add.s64 	%rd6401, %rd6400, %rd6396;
	add.s64 	%rd6402, %rd6401, %rd6390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4405,%dummy}, %rd6341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4406}, %rd6341;
	}
	shf.r.wrap.b32 	%r4407, %r4406, %r4405, 19;
	shf.r.wrap.b32 	%r4408, %r4405, %r4406, 19;
	mov.b64 	%rd6403, {%r4408, %r4407};
	shf.l.wrap.b32 	%r4409, %r4405, %r4406, 3;
	shf.l.wrap.b32 	%r4410, %r4406, %r4405, 3;
	mov.b64 	%rd6404, {%r4410, %r4409};
	xor.b64  	%rd6405, %rd6403, %rd6404;
	shr.u64 	%rd6406, %rd6341, 6;
	xor.b64  	%rd6407, %rd6405, %rd6406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4411,%dummy}, %rd9835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4412}, %rd9835;
	}
	shf.r.wrap.b32 	%r4413, %r4412, %r4411, 8;
	shf.r.wrap.b32 	%r4414, %r4411, %r4412, 8;
	mov.b64 	%rd6408, {%r4414, %r4413};
	shf.r.wrap.b32 	%r4415, %r4412, %r4411, 1;
	shf.r.wrap.b32 	%r4416, %r4411, %r4412, 1;
	mov.b64 	%rd6409, {%r4416, %r4415};
	xor.b64  	%rd6410, %rd6409, %rd6408;
	shr.u64 	%rd6411, %rd9835, 7;
	xor.b64  	%rd6412, %rd6410, %rd6411;
	add.s64 	%rd6413, %rd6407, %rd9836;
	add.s64 	%rd6414, %rd6413, %rd6156;
	add.s64 	%rd6415, %rd6414, %rd6412;
	add.s64 	%rd6416, %rd6415, %rd6280;
	xor.b64  	%rd6417, %rd6354, %rd6317;
	and.b64  	%rd6418, %rd6391, %rd6417;
	xor.b64  	%rd6419, %rd6418, %rd6317;
	add.s64 	%rd6420, %rd6416, %rd6419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4417,%dummy}, %rd6391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4418}, %rd6391;
	}
	shf.r.wrap.b32 	%r4419, %r4418, %r4417, 14;
	shf.r.wrap.b32 	%r4420, %r4417, %r4418, 14;
	mov.b64 	%rd6421, {%r4420, %r4419};
	shf.r.wrap.b32 	%r4421, %r4418, %r4417, 18;
	shf.r.wrap.b32 	%r4422, %r4417, %r4418, 18;
	mov.b64 	%rd6422, {%r4422, %r4421};
	xor.b64  	%rd6423, %rd6421, %rd6422;
	shf.l.wrap.b32 	%r4423, %r4417, %r4418, 23;
	shf.l.wrap.b32 	%r4424, %r4418, %r4417, 23;
	mov.b64 	%rd6424, {%r4424, %r4423};
	xor.b64  	%rd6425, %rd6423, %rd6424;
	add.s64 	%rd6426, %rd6420, %rd6425;
	add.s64 	%rd6427, %rd6426, -4116276920077217854;
	add.s64 	%rd6428, %rd6427, %rd6291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4425,%dummy}, %rd6402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4426}, %rd6402;
	}
	shf.r.wrap.b32 	%r4427, %r4426, %r4425, 28;
	shf.r.wrap.b32 	%r4428, %r4425, %r4426, 28;
	mov.b64 	%rd6429, {%r4428, %r4427};
	shf.l.wrap.b32 	%r4429, %r4425, %r4426, 30;
	shf.l.wrap.b32 	%r4430, %r4426, %r4425, 30;
	mov.b64 	%rd6430, {%r4430, %r4429};
	xor.b64  	%rd6431, %rd6429, %rd6430;
	shf.l.wrap.b32 	%r4431, %r4425, %r4426, 25;
	shf.l.wrap.b32 	%r4432, %r4426, %r4425, 25;
	mov.b64 	%rd6432, {%r4432, %r4431};
	xor.b64  	%rd6433, %rd6431, %rd6432;
	and.b64  	%rd6434, %rd6402, %rd6365;
	or.b64  	%rd6435, %rd6402, %rd6365;
	and.b64  	%rd6436, %rd6435, %rd6328;
	or.b64  	%rd6437, %rd6436, %rd6434;
	add.s64 	%rd6438, %rd6437, %rd6433;
	add.s64 	%rd6439, %rd6438, %rd6427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4433,%dummy}, %rd6378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4434}, %rd6378;
	}
	shf.r.wrap.b32 	%r4435, %r4434, %r4433, 19;
	shf.r.wrap.b32 	%r4436, %r4433, %r4434, 19;
	mov.b64 	%rd6440, {%r4436, %r4435};
	shf.l.wrap.b32 	%r4437, %r4433, %r4434, 3;
	shf.l.wrap.b32 	%r4438, %r4434, %r4433, 3;
	mov.b64 	%rd6441, {%r4438, %r4437};
	xor.b64  	%rd6442, %rd6440, %rd6441;
	shr.u64 	%rd6443, %rd6378, 6;
	xor.b64  	%rd6444, %rd6442, %rd6443;
	shf.r.wrap.b32 	%r4439, %r4069, %r4070, 8;
	shf.r.wrap.b32 	%r4440, %r4070, %r4069, 8;
	mov.b64 	%rd6445, {%r4440, %r4439};
	shf.r.wrap.b32 	%r4441, %r4069, %r4070, 1;
	shf.r.wrap.b32 	%r4442, %r4070, %r4069, 1;
	mov.b64 	%rd6446, {%r4442, %r4441};
	xor.b64  	%rd6447, %rd6446, %rd6445;
	shr.u64 	%rd6448, %rd9834, 7;
	xor.b64  	%rd6449, %rd6447, %rd6448;
	add.s64 	%rd6450, %rd6444, %rd9835;
	add.s64 	%rd6451, %rd6450, %rd6193;
	add.s64 	%rd6452, %rd6451, %rd6449;
	add.s64 	%rd6453, %rd6452, %rd6317;
	xor.b64  	%rd6454, %rd6391, %rd6354;
	and.b64  	%rd6455, %rd6428, %rd6454;
	xor.b64  	%rd6456, %rd6455, %rd6354;
	add.s64 	%rd6457, %rd6453, %rd6456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4443,%dummy}, %rd6428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4444}, %rd6428;
	}
	shf.r.wrap.b32 	%r4445, %r4444, %r4443, 14;
	shf.r.wrap.b32 	%r4446, %r4443, %r4444, 14;
	mov.b64 	%rd6458, {%r4446, %r4445};
	shf.r.wrap.b32 	%r4447, %r4444, %r4443, 18;
	shf.r.wrap.b32 	%r4448, %r4443, %r4444, 18;
	mov.b64 	%rd6459, {%r4448, %r4447};
	xor.b64  	%rd6460, %rd6458, %rd6459;
	shf.l.wrap.b32 	%r4449, %r4443, %r4444, 23;
	shf.l.wrap.b32 	%r4450, %r4444, %r4443, 23;
	mov.b64 	%rd6461, {%r4450, %r4449};
	xor.b64  	%rd6462, %rd6460, %rd6461;
	add.s64 	%rd6463, %rd6457, %rd6462;
	add.s64 	%rd6464, %rd6463, -3051310485924567259;
	add.s64 	%rd6465, %rd6464, %rd6328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4451,%dummy}, %rd6439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4452}, %rd6439;
	}
	shf.r.wrap.b32 	%r4453, %r4452, %r4451, 28;
	shf.r.wrap.b32 	%r4454, %r4451, %r4452, 28;
	mov.b64 	%rd6466, {%r4454, %r4453};
	shf.l.wrap.b32 	%r4455, %r4451, %r4452, 30;
	shf.l.wrap.b32 	%r4456, %r4452, %r4451, 30;
	mov.b64 	%rd6467, {%r4456, %r4455};
	xor.b64  	%rd6468, %rd6466, %rd6467;
	shf.l.wrap.b32 	%r4457, %r4451, %r4452, 25;
	shf.l.wrap.b32 	%r4458, %r4452, %r4451, 25;
	mov.b64 	%rd6469, {%r4458, %r4457};
	xor.b64  	%rd6470, %rd6468, %rd6469;
	and.b64  	%rd6471, %rd6439, %rd6402;
	or.b64  	%rd6472, %rd6439, %rd6402;
	and.b64  	%rd6473, %rd6472, %rd6365;
	or.b64  	%rd6474, %rd6473, %rd6471;
	add.s64 	%rd6475, %rd6474, %rd6470;
	add.s64 	%rd6476, %rd6475, %rd6464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4459,%dummy}, %rd6415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4460}, %rd6415;
	}
	shf.r.wrap.b32 	%r4461, %r4460, %r4459, 19;
	shf.r.wrap.b32 	%r4462, %r4459, %r4460, 19;
	mov.b64 	%rd6477, {%r4462, %r4461};
	shf.l.wrap.b32 	%r4463, %r4459, %r4460, 3;
	shf.l.wrap.b32 	%r4464, %r4460, %r4459, 3;
	mov.b64 	%rd6478, {%r4464, %r4463};
	xor.b64  	%rd6479, %rd6477, %rd6478;
	shr.u64 	%rd6480, %rd6415, 6;
	xor.b64  	%rd6481, %rd6479, %rd6480;
	shf.r.wrap.b32 	%r4465, %r4098, %r4097, 1;
	shf.r.wrap.b32 	%r4466, %r4097, %r4098, 1;
	mov.b64 	%rd6482, {%r4466, %r4465};
	shf.r.wrap.b32 	%r4467, %r4098, %r4097, 8;
	shf.r.wrap.b32 	%r4468, %r4097, %r4098, 8;
	mov.b64 	%rd6483, {%r4468, %r4467};
	xor.b64  	%rd6484, %rd6482, %rd6483;
	shr.u64 	%rd6485, %rd5574, 7;
	xor.b64  	%rd6486, %rd6484, %rd6485;
	add.s64 	%rd6487, %rd6481, %rd9834;
	add.s64 	%rd6488, %rd6487, %rd6230;
	add.s64 	%rd6489, %rd6488, %rd6486;
	add.s64 	%rd6490, %rd6489, %rd6354;
	xor.b64  	%rd6491, %rd6428, %rd6391;
	and.b64  	%rd6492, %rd6465, %rd6491;
	xor.b64  	%rd6493, %rd6492, %rd6391;
	add.s64 	%rd6494, %rd6490, %rd6493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4469,%dummy}, %rd6465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4470}, %rd6465;
	}
	shf.r.wrap.b32 	%r4471, %r4470, %r4469, 14;
	shf.r.wrap.b32 	%r4472, %r4469, %r4470, 14;
	mov.b64 	%rd6495, {%r4472, %r4471};
	shf.r.wrap.b32 	%r4473, %r4470, %r4469, 18;
	shf.r.wrap.b32 	%r4474, %r4469, %r4470, 18;
	mov.b64 	%rd6496, {%r4474, %r4473};
	xor.b64  	%rd6497, %rd6495, %rd6496;
	shf.l.wrap.b32 	%r4475, %r4469, %r4470, 23;
	shf.l.wrap.b32 	%r4476, %r4470, %r4469, 23;
	mov.b64 	%rd6498, {%r4476, %r4475};
	xor.b64  	%rd6499, %rd6497, %rd6498;
	add.s64 	%rd6500, %rd6494, %rd6499;
	add.s64 	%rd6501, %rd6500, 489312712824947311;
	add.s64 	%rd6502, %rd6501, %rd6365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4477,%dummy}, %rd6476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4478}, %rd6476;
	}
	shf.r.wrap.b32 	%r4479, %r4478, %r4477, 28;
	shf.r.wrap.b32 	%r4480, %r4477, %r4478, 28;
	mov.b64 	%rd6503, {%r4480, %r4479};
	shf.l.wrap.b32 	%r4481, %r4477, %r4478, 30;
	shf.l.wrap.b32 	%r4482, %r4478, %r4477, 30;
	mov.b64 	%rd6504, {%r4482, %r4481};
	xor.b64  	%rd6505, %rd6503, %rd6504;
	shf.l.wrap.b32 	%r4483, %r4477, %r4478, 25;
	shf.l.wrap.b32 	%r4484, %r4478, %r4477, 25;
	mov.b64 	%rd6506, {%r4484, %r4483};
	xor.b64  	%rd6507, %rd6505, %rd6506;
	and.b64  	%rd6508, %rd6476, %rd6439;
	or.b64  	%rd6509, %rd6476, %rd6439;
	and.b64  	%rd6510, %rd6509, %rd6402;
	or.b64  	%rd6511, %rd6510, %rd6508;
	add.s64 	%rd6512, %rd6511, %rd6507;
	add.s64 	%rd6513, %rd6512, %rd6501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4485,%dummy}, %rd6452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4486}, %rd6452;
	}
	shf.r.wrap.b32 	%r4487, %r4486, %r4485, 19;
	shf.r.wrap.b32 	%r4488, %r4485, %r4486, 19;
	mov.b64 	%rd6514, {%r4488, %r4487};
	shf.l.wrap.b32 	%r4489, %r4485, %r4486, 3;
	shf.l.wrap.b32 	%r4490, %r4486, %r4485, 3;
	mov.b64 	%rd6515, {%r4490, %r4489};
	xor.b64  	%rd6516, %rd6514, %rd6515;
	shr.u64 	%rd6517, %rd6452, 6;
	xor.b64  	%rd6518, %rd6516, %rd6517;
	shf.r.wrap.b32 	%r4491, %r4126, %r4125, 1;
	shf.r.wrap.b32 	%r4492, %r4125, %r4126, 1;
	mov.b64 	%rd6519, {%r4492, %r4491};
	shf.r.wrap.b32 	%r4493, %r4126, %r4125, 8;
	shf.r.wrap.b32 	%r4494, %r4125, %r4126, 8;
	mov.b64 	%rd6520, {%r4494, %r4493};
	xor.b64  	%rd6521, %rd6519, %rd6520;
	shr.u64 	%rd6522, %rd5971, 7;
	xor.b64  	%rd6523, %rd6521, %rd6522;
	add.s64 	%rd6524, %rd6518, %rd5574;
	add.s64 	%rd6525, %rd6524, %rd6267;
	add.s64 	%rd6526, %rd6525, %rd6523;
	add.s64 	%rd6527, %rd6526, %rd6391;
	xor.b64  	%rd6528, %rd6465, %rd6428;
	and.b64  	%rd6529, %rd6502, %rd6528;
	xor.b64  	%rd6530, %rd6529, %rd6428;
	add.s64 	%rd6531, %rd6527, %rd6530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4495,%dummy}, %rd6502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4496}, %rd6502;
	}
	shf.r.wrap.b32 	%r4497, %r4496, %r4495, 14;
	shf.r.wrap.b32 	%r4498, %r4495, %r4496, 14;
	mov.b64 	%rd6532, {%r4498, %r4497};
	shf.r.wrap.b32 	%r4499, %r4496, %r4495, 18;
	shf.r.wrap.b32 	%r4500, %r4495, %r4496, 18;
	mov.b64 	%rd6533, {%r4500, %r4499};
	xor.b64  	%rd6534, %rd6532, %rd6533;
	shf.l.wrap.b32 	%r4501, %r4495, %r4496, 23;
	shf.l.wrap.b32 	%r4502, %r4496, %r4495, 23;
	mov.b64 	%rd6535, {%r4502, %r4501};
	xor.b64  	%rd6536, %rd6534, %rd6535;
	add.s64 	%rd6537, %rd6531, %rd6536;
	add.s64 	%rd6538, %rd6537, 1452737877330783856;
	add.s64 	%rd6539, %rd6538, %rd6402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4503,%dummy}, %rd6513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4504}, %rd6513;
	}
	shf.r.wrap.b32 	%r4505, %r4504, %r4503, 28;
	shf.r.wrap.b32 	%r4506, %r4503, %r4504, 28;
	mov.b64 	%rd6540, {%r4506, %r4505};
	shf.l.wrap.b32 	%r4507, %r4503, %r4504, 30;
	shf.l.wrap.b32 	%r4508, %r4504, %r4503, 30;
	mov.b64 	%rd6541, {%r4508, %r4507};
	xor.b64  	%rd6542, %rd6540, %rd6541;
	shf.l.wrap.b32 	%r4509, %r4503, %r4504, 25;
	shf.l.wrap.b32 	%r4510, %r4504, %r4503, 25;
	mov.b64 	%rd6543, {%r4510, %r4509};
	xor.b64  	%rd6544, %rd6542, %rd6543;
	and.b64  	%rd6545, %rd6513, %rd6476;
	or.b64  	%rd6546, %rd6513, %rd6476;
	and.b64  	%rd6547, %rd6546, %rd6439;
	or.b64  	%rd6548, %rd6547, %rd6545;
	add.s64 	%rd6549, %rd6548, %rd6544;
	add.s64 	%rd6550, %rd6549, %rd6538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4511,%dummy}, %rd6489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4512}, %rd6489;
	}
	shf.r.wrap.b32 	%r4513, %r4512, %r4511, 19;
	shf.r.wrap.b32 	%r4514, %r4511, %r4512, 19;
	mov.b64 	%rd6551, {%r4514, %r4513};
	shf.l.wrap.b32 	%r4515, %r4511, %r4512, 3;
	shf.l.wrap.b32 	%r4516, %r4512, %r4511, 3;
	mov.b64 	%rd6552, {%r4516, %r4515};
	xor.b64  	%rd6553, %rd6551, %rd6552;
	shr.u64 	%rd6554, %rd6489, 6;
	xor.b64  	%rd6555, %rd6553, %rd6554;
	shf.r.wrap.b32 	%r4517, %r4154, %r4153, 1;
	shf.r.wrap.b32 	%r4518, %r4153, %r4154, 1;
	mov.b64 	%rd6556, {%r4518, %r4517};
	shf.r.wrap.b32 	%r4519, %r4154, %r4153, 8;
	shf.r.wrap.b32 	%r4520, %r4153, %r4154, 8;
	mov.b64 	%rd6557, {%r4520, %r4519};
	xor.b64  	%rd6558, %rd6556, %rd6557;
	shr.u64 	%rd6559, %rd6008, 7;
	xor.b64  	%rd6560, %rd6558, %rd6559;
	add.s64 	%rd6561, %rd6555, %rd5971;
	add.s64 	%rd6562, %rd6561, %rd6304;
	add.s64 	%rd6563, %rd6562, %rd6560;
	add.s64 	%rd6564, %rd6563, %rd6428;
	xor.b64  	%rd6565, %rd6502, %rd6465;
	and.b64  	%rd6566, %rd6539, %rd6565;
	xor.b64  	%rd6567, %rd6566, %rd6465;
	add.s64 	%rd6568, %rd6564, %rd6567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4521,%dummy}, %rd6539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4522}, %rd6539;
	}
	shf.r.wrap.b32 	%r4523, %r4522, %r4521, 14;
	shf.r.wrap.b32 	%r4524, %r4521, %r4522, 14;
	mov.b64 	%rd6569, {%r4524, %r4523};
	shf.r.wrap.b32 	%r4525, %r4522, %r4521, 18;
	shf.r.wrap.b32 	%r4526, %r4521, %r4522, 18;
	mov.b64 	%rd6570, {%r4526, %r4525};
	xor.b64  	%rd6571, %rd6569, %rd6570;
	shf.l.wrap.b32 	%r4527, %r4521, %r4522, 23;
	shf.l.wrap.b32 	%r4528, %r4522, %r4521, 23;
	mov.b64 	%rd6572, {%r4528, %r4527};
	xor.b64  	%rd6573, %rd6571, %rd6572;
	add.s64 	%rd6574, %rd6568, %rd6573;
	add.s64 	%rd6575, %rd6574, 2861767655752347644;
	add.s64 	%rd6576, %rd6575, %rd6439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4529,%dummy}, %rd6550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4530}, %rd6550;
	}
	shf.r.wrap.b32 	%r4531, %r4530, %r4529, 28;
	shf.r.wrap.b32 	%r4532, %r4529, %r4530, 28;
	mov.b64 	%rd6577, {%r4532, %r4531};
	shf.l.wrap.b32 	%r4533, %r4529, %r4530, 30;
	shf.l.wrap.b32 	%r4534, %r4530, %r4529, 30;
	mov.b64 	%rd6578, {%r4534, %r4533};
	xor.b64  	%rd6579, %rd6577, %rd6578;
	shf.l.wrap.b32 	%r4535, %r4529, %r4530, 25;
	shf.l.wrap.b32 	%r4536, %r4530, %r4529, 25;
	mov.b64 	%rd6580, {%r4536, %r4535};
	xor.b64  	%rd6581, %rd6579, %rd6580;
	and.b64  	%rd6582, %rd6550, %rd6513;
	or.b64  	%rd6583, %rd6550, %rd6513;
	and.b64  	%rd6584, %rd6583, %rd6476;
	or.b64  	%rd6585, %rd6584, %rd6582;
	add.s64 	%rd6586, %rd6585, %rd6581;
	add.s64 	%rd6587, %rd6586, %rd6575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4537,%dummy}, %rd6526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4538}, %rd6526;
	}
	shf.r.wrap.b32 	%r4539, %r4538, %r4537, 19;
	shf.r.wrap.b32 	%r4540, %r4537, %r4538, 19;
	mov.b64 	%rd6588, {%r4540, %r4539};
	shf.l.wrap.b32 	%r4541, %r4537, %r4538, 3;
	shf.l.wrap.b32 	%r4542, %r4538, %r4537, 3;
	mov.b64 	%rd6589, {%r4542, %r4541};
	xor.b64  	%rd6590, %rd6588, %rd6589;
	shr.u64 	%rd6591, %rd6526, 6;
	xor.b64  	%rd6592, %rd6590, %rd6591;
	shf.r.wrap.b32 	%r4543, %r4182, %r4181, 1;
	shf.r.wrap.b32 	%r4544, %r4181, %r4182, 1;
	mov.b64 	%rd6593, {%r4544, %r4543};
	shf.r.wrap.b32 	%r4545, %r4182, %r4181, 8;
	shf.r.wrap.b32 	%r4546, %r4181, %r4182, 8;
	mov.b64 	%rd6594, {%r4546, %r4545};
	xor.b64  	%rd6595, %rd6593, %rd6594;
	shr.u64 	%rd6596, %rd6045, 7;
	xor.b64  	%rd6597, %rd6595, %rd6596;
	add.s64 	%rd6598, %rd6592, %rd6008;
	add.s64 	%rd6599, %rd6598, %rd6341;
	add.s64 	%rd6600, %rd6599, %rd6597;
	add.s64 	%rd6601, %rd6600, %rd6465;
	xor.b64  	%rd6602, %rd6539, %rd6502;
	and.b64  	%rd6603, %rd6576, %rd6602;
	xor.b64  	%rd6604, %rd6603, %rd6502;
	add.s64 	%rd6605, %rd6601, %rd6604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4547,%dummy}, %rd6576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4548}, %rd6576;
	}
	shf.r.wrap.b32 	%r4549, %r4548, %r4547, 14;
	shf.r.wrap.b32 	%r4550, %r4547, %r4548, 14;
	mov.b64 	%rd6606, {%r4550, %r4549};
	shf.r.wrap.b32 	%r4551, %r4548, %r4547, 18;
	shf.r.wrap.b32 	%r4552, %r4547, %r4548, 18;
	mov.b64 	%rd6607, {%r4552, %r4551};
	xor.b64  	%rd6608, %rd6606, %rd6607;
	shf.l.wrap.b32 	%r4553, %r4547, %r4548, 23;
	shf.l.wrap.b32 	%r4554, %r4548, %r4547, 23;
	mov.b64 	%rd6609, {%r4554, %r4553};
	xor.b64  	%rd6610, %rd6608, %rd6609;
	add.s64 	%rd6611, %rd6605, %rd6610;
	add.s64 	%rd6612, %rd6611, 3322285676063803686;
	add.s64 	%rd6613, %rd6612, %rd6476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4555,%dummy}, %rd6587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4556}, %rd6587;
	}
	shf.r.wrap.b32 	%r4557, %r4556, %r4555, 28;
	shf.r.wrap.b32 	%r4558, %r4555, %r4556, 28;
	mov.b64 	%rd6614, {%r4558, %r4557};
	shf.l.wrap.b32 	%r4559, %r4555, %r4556, 30;
	shf.l.wrap.b32 	%r4560, %r4556, %r4555, 30;
	mov.b64 	%rd6615, {%r4560, %r4559};
	xor.b64  	%rd6616, %rd6614, %rd6615;
	shf.l.wrap.b32 	%r4561, %r4555, %r4556, 25;
	shf.l.wrap.b32 	%r4562, %r4556, %r4555, 25;
	mov.b64 	%rd6617, {%r4562, %r4561};
	xor.b64  	%rd6618, %rd6616, %rd6617;
	and.b64  	%rd6619, %rd6587, %rd6550;
	or.b64  	%rd6620, %rd6587, %rd6550;
	and.b64  	%rd6621, %rd6620, %rd6513;
	or.b64  	%rd6622, %rd6621, %rd6619;
	add.s64 	%rd6623, %rd6622, %rd6618;
	add.s64 	%rd6624, %rd6623, %rd6612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4563,%dummy}, %rd6563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4564}, %rd6563;
	}
	shf.r.wrap.b32 	%r4565, %r4564, %r4563, 19;
	shf.r.wrap.b32 	%r4566, %r4563, %r4564, 19;
	mov.b64 	%rd6625, {%r4566, %r4565};
	shf.l.wrap.b32 	%r4567, %r4563, %r4564, 3;
	shf.l.wrap.b32 	%r4568, %r4564, %r4563, 3;
	mov.b64 	%rd6626, {%r4568, %r4567};
	xor.b64  	%rd6627, %rd6625, %rd6626;
	shr.u64 	%rd6628, %rd6563, 6;
	xor.b64  	%rd6629, %rd6627, %rd6628;
	shf.r.wrap.b32 	%r4569, %r4210, %r4209, 1;
	shf.r.wrap.b32 	%r4570, %r4209, %r4210, 1;
	mov.b64 	%rd6630, {%r4570, %r4569};
	shf.r.wrap.b32 	%r4571, %r4210, %r4209, 8;
	shf.r.wrap.b32 	%r4572, %r4209, %r4210, 8;
	mov.b64 	%rd6631, {%r4572, %r4571};
	xor.b64  	%rd6632, %rd6630, %rd6631;
	shr.u64 	%rd6633, %rd6082, 7;
	xor.b64  	%rd6634, %rd6632, %rd6633;
	add.s64 	%rd6635, %rd6629, %rd6045;
	add.s64 	%rd6636, %rd6635, %rd6378;
	add.s64 	%rd6637, %rd6636, %rd6634;
	add.s64 	%rd6638, %rd6637, %rd6502;
	xor.b64  	%rd6639, %rd6576, %rd6539;
	and.b64  	%rd6640, %rd6613, %rd6639;
	xor.b64  	%rd6641, %rd6640, %rd6539;
	add.s64 	%rd6642, %rd6638, %rd6641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4573,%dummy}, %rd6613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4574}, %rd6613;
	}
	shf.r.wrap.b32 	%r4575, %r4574, %r4573, 14;
	shf.r.wrap.b32 	%r4576, %r4573, %r4574, 14;
	mov.b64 	%rd6643, {%r4576, %r4575};
	shf.r.wrap.b32 	%r4577, %r4574, %r4573, 18;
	shf.r.wrap.b32 	%r4578, %r4573, %r4574, 18;
	mov.b64 	%rd6644, {%r4578, %r4577};
	xor.b64  	%rd6645, %rd6643, %rd6644;
	shf.l.wrap.b32 	%r4579, %r4573, %r4574, 23;
	shf.l.wrap.b32 	%r4580, %r4574, %r4573, 23;
	mov.b64 	%rd6646, {%r4580, %r4579};
	xor.b64  	%rd6647, %rd6645, %rd6646;
	add.s64 	%rd6648, %rd6642, %rd6647;
	add.s64 	%rd6649, %rd6648, 5560940570517711597;
	add.s64 	%rd6650, %rd6649, %rd6513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4581,%dummy}, %rd6624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4582}, %rd6624;
	}
	shf.r.wrap.b32 	%r4583, %r4582, %r4581, 28;
	shf.r.wrap.b32 	%r4584, %r4581, %r4582, 28;
	mov.b64 	%rd6651, {%r4584, %r4583};
	shf.l.wrap.b32 	%r4585, %r4581, %r4582, 30;
	shf.l.wrap.b32 	%r4586, %r4582, %r4581, 30;
	mov.b64 	%rd6652, {%r4586, %r4585};
	xor.b64  	%rd6653, %rd6651, %rd6652;
	shf.l.wrap.b32 	%r4587, %r4581, %r4582, 25;
	shf.l.wrap.b32 	%r4588, %r4582, %r4581, 25;
	mov.b64 	%rd6654, {%r4588, %r4587};
	xor.b64  	%rd6655, %rd6653, %rd6654;
	and.b64  	%rd6656, %rd6624, %rd6587;
	or.b64  	%rd6657, %rd6624, %rd6587;
	and.b64  	%rd6658, %rd6657, %rd6550;
	or.b64  	%rd6659, %rd6658, %rd6656;
	add.s64 	%rd6660, %rd6659, %rd6655;
	add.s64 	%rd6661, %rd6660, %rd6649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4589,%dummy}, %rd6600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4590}, %rd6600;
	}
	shf.r.wrap.b32 	%r4591, %r4590, %r4589, 19;
	shf.r.wrap.b32 	%r4592, %r4589, %r4590, 19;
	mov.b64 	%rd6662, {%r4592, %r4591};
	shf.l.wrap.b32 	%r4593, %r4589, %r4590, 3;
	shf.l.wrap.b32 	%r4594, %r4590, %r4589, 3;
	mov.b64 	%rd6663, {%r4594, %r4593};
	xor.b64  	%rd6664, %rd6662, %rd6663;
	shr.u64 	%rd6665, %rd6600, 6;
	xor.b64  	%rd6666, %rd6664, %rd6665;
	shf.r.wrap.b32 	%r4595, %r4238, %r4237, 1;
	shf.r.wrap.b32 	%r4596, %r4237, %r4238, 1;
	mov.b64 	%rd6667, {%r4596, %r4595};
	shf.r.wrap.b32 	%r4597, %r4238, %r4237, 8;
	shf.r.wrap.b32 	%r4598, %r4237, %r4238, 8;
	mov.b64 	%rd6668, {%r4598, %r4597};
	xor.b64  	%rd6669, %rd6667, %rd6668;
	shr.u64 	%rd6670, %rd6119, 7;
	xor.b64  	%rd6671, %rd6669, %rd6670;
	add.s64 	%rd6672, %rd6666, %rd6082;
	add.s64 	%rd6673, %rd6672, %rd6415;
	add.s64 	%rd6674, %rd6673, %rd6671;
	add.s64 	%rd6675, %rd6674, %rd6539;
	xor.b64  	%rd6676, %rd6613, %rd6576;
	and.b64  	%rd6677, %rd6650, %rd6676;
	xor.b64  	%rd6678, %rd6677, %rd6576;
	add.s64 	%rd6679, %rd6675, %rd6678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4599,%dummy}, %rd6650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4600}, %rd6650;
	}
	shf.r.wrap.b32 	%r4601, %r4600, %r4599, 14;
	shf.r.wrap.b32 	%r4602, %r4599, %r4600, 14;
	mov.b64 	%rd6680, {%r4602, %r4601};
	shf.r.wrap.b32 	%r4603, %r4600, %r4599, 18;
	shf.r.wrap.b32 	%r4604, %r4599, %r4600, 18;
	mov.b64 	%rd6681, {%r4604, %r4603};
	xor.b64  	%rd6682, %rd6680, %rd6681;
	shf.l.wrap.b32 	%r4605, %r4599, %r4600, 23;
	shf.l.wrap.b32 	%r4606, %r4600, %r4599, 23;
	mov.b64 	%rd6683, {%r4606, %r4605};
	xor.b64  	%rd6684, %rd6682, %rd6683;
	add.s64 	%rd6685, %rd6679, %rd6684;
	add.s64 	%rd6686, %rd6685, 5996557281743188959;
	add.s64 	%rd6687, %rd6686, %rd6550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4607,%dummy}, %rd6661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4608}, %rd6661;
	}
	shf.r.wrap.b32 	%r4609, %r4608, %r4607, 28;
	shf.r.wrap.b32 	%r4610, %r4607, %r4608, 28;
	mov.b64 	%rd6688, {%r4610, %r4609};
	shf.l.wrap.b32 	%r4611, %r4607, %r4608, 30;
	shf.l.wrap.b32 	%r4612, %r4608, %r4607, 30;
	mov.b64 	%rd6689, {%r4612, %r4611};
	xor.b64  	%rd6690, %rd6688, %rd6689;
	shf.l.wrap.b32 	%r4613, %r4607, %r4608, 25;
	shf.l.wrap.b32 	%r4614, %r4608, %r4607, 25;
	mov.b64 	%rd6691, {%r4614, %r4613};
	xor.b64  	%rd6692, %rd6690, %rd6691;
	and.b64  	%rd6693, %rd6661, %rd6624;
	or.b64  	%rd6694, %rd6661, %rd6624;
	and.b64  	%rd6695, %rd6694, %rd6587;
	or.b64  	%rd6696, %rd6695, %rd6693;
	add.s64 	%rd6697, %rd6696, %rd6692;
	add.s64 	%rd6698, %rd6697, %rd6686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4615,%dummy}, %rd6637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4616}, %rd6637;
	}
	shf.r.wrap.b32 	%r4617, %r4616, %r4615, 19;
	shf.r.wrap.b32 	%r4618, %r4615, %r4616, 19;
	mov.b64 	%rd6699, {%r4618, %r4617};
	shf.l.wrap.b32 	%r4619, %r4615, %r4616, 3;
	shf.l.wrap.b32 	%r4620, %r4616, %r4615, 3;
	mov.b64 	%rd6700, {%r4620, %r4619};
	xor.b64  	%rd6701, %rd6699, %rd6700;
	shr.u64 	%rd6702, %rd6637, 6;
	xor.b64  	%rd6703, %rd6701, %rd6702;
	shf.r.wrap.b32 	%r4621, %r4266, %r4265, 1;
	shf.r.wrap.b32 	%r4622, %r4265, %r4266, 1;
	mov.b64 	%rd6704, {%r4622, %r4621};
	shf.r.wrap.b32 	%r4623, %r4266, %r4265, 8;
	shf.r.wrap.b32 	%r4624, %r4265, %r4266, 8;
	mov.b64 	%rd6705, {%r4624, %r4623};
	xor.b64  	%rd6706, %rd6704, %rd6705;
	shr.u64 	%rd6707, %rd6156, 7;
	xor.b64  	%rd6708, %rd6706, %rd6707;
	add.s64 	%rd6709, %rd6703, %rd6119;
	add.s64 	%rd6710, %rd6709, %rd6452;
	add.s64 	%rd6711, %rd6710, %rd6708;
	add.s64 	%rd6712, %rd6711, %rd6576;
	xor.b64  	%rd6713, %rd6650, %rd6613;
	and.b64  	%rd6714, %rd6687, %rd6713;
	xor.b64  	%rd6715, %rd6714, %rd6613;
	add.s64 	%rd6716, %rd6712, %rd6715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4625,%dummy}, %rd6687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4626}, %rd6687;
	}
	shf.r.wrap.b32 	%r4627, %r4626, %r4625, 14;
	shf.r.wrap.b32 	%r4628, %r4625, %r4626, 14;
	mov.b64 	%rd6717, {%r4628, %r4627};
	shf.r.wrap.b32 	%r4629, %r4626, %r4625, 18;
	shf.r.wrap.b32 	%r4630, %r4625, %r4626, 18;
	mov.b64 	%rd6718, {%r4630, %r4629};
	xor.b64  	%rd6719, %rd6717, %rd6718;
	shf.l.wrap.b32 	%r4631, %r4625, %r4626, 23;
	shf.l.wrap.b32 	%r4632, %r4626, %r4625, 23;
	mov.b64 	%rd6720, {%r4632, %r4631};
	xor.b64  	%rd6721, %rd6719, %rd6720;
	add.s64 	%rd6722, %rd6716, %rd6721;
	add.s64 	%rd6723, %rd6722, 7280758554555802590;
	add.s64 	%rd6724, %rd6723, %rd6587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4633,%dummy}, %rd6698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4634}, %rd6698;
	}
	shf.r.wrap.b32 	%r4635, %r4634, %r4633, 28;
	shf.r.wrap.b32 	%r4636, %r4633, %r4634, 28;
	mov.b64 	%rd6725, {%r4636, %r4635};
	shf.l.wrap.b32 	%r4637, %r4633, %r4634, 30;
	shf.l.wrap.b32 	%r4638, %r4634, %r4633, 30;
	mov.b64 	%rd6726, {%r4638, %r4637};
	xor.b64  	%rd6727, %rd6725, %rd6726;
	shf.l.wrap.b32 	%r4639, %r4633, %r4634, 25;
	shf.l.wrap.b32 	%r4640, %r4634, %r4633, 25;
	mov.b64 	%rd6728, {%r4640, %r4639};
	xor.b64  	%rd6729, %rd6727, %rd6728;
	and.b64  	%rd6730, %rd6698, %rd6661;
	or.b64  	%rd6731, %rd6698, %rd6661;
	and.b64  	%rd6732, %rd6731, %rd6624;
	or.b64  	%rd6733, %rd6732, %rd6730;
	add.s64 	%rd6734, %rd6733, %rd6729;
	add.s64 	%rd6735, %rd6734, %rd6723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4641,%dummy}, %rd6674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4642}, %rd6674;
	}
	shf.r.wrap.b32 	%r4643, %r4642, %r4641, 19;
	shf.r.wrap.b32 	%r4644, %r4641, %r4642, 19;
	mov.b64 	%rd6736, {%r4644, %r4643};
	shf.l.wrap.b32 	%r4645, %r4641, %r4642, 3;
	shf.l.wrap.b32 	%r4646, %r4642, %r4641, 3;
	mov.b64 	%rd6737, {%r4646, %r4645};
	xor.b64  	%rd6738, %rd6736, %rd6737;
	shr.u64 	%rd6739, %rd6674, 6;
	xor.b64  	%rd6740, %rd6738, %rd6739;
	shf.r.wrap.b32 	%r4647, %r4294, %r4293, 1;
	shf.r.wrap.b32 	%r4648, %r4293, %r4294, 1;
	mov.b64 	%rd6741, {%r4648, %r4647};
	shf.r.wrap.b32 	%r4649, %r4294, %r4293, 8;
	shf.r.wrap.b32 	%r4650, %r4293, %r4294, 8;
	mov.b64 	%rd6742, {%r4650, %r4649};
	xor.b64  	%rd6743, %rd6741, %rd6742;
	shr.u64 	%rd6744, %rd6193, 7;
	xor.b64  	%rd6745, %rd6743, %rd6744;
	add.s64 	%rd6746, %rd6740, %rd6156;
	add.s64 	%rd6747, %rd6746, %rd6489;
	add.s64 	%rd6748, %rd6747, %rd6745;
	add.s64 	%rd6749, %rd6748, %rd6613;
	xor.b64  	%rd6750, %rd6687, %rd6650;
	and.b64  	%rd6751, %rd6724, %rd6750;
	xor.b64  	%rd6752, %rd6751, %rd6650;
	add.s64 	%rd6753, %rd6749, %rd6752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4651,%dummy}, %rd6724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4652}, %rd6724;
	}
	shf.r.wrap.b32 	%r4653, %r4652, %r4651, 14;
	shf.r.wrap.b32 	%r4654, %r4651, %r4652, 14;
	mov.b64 	%rd6754, {%r4654, %r4653};
	shf.r.wrap.b32 	%r4655, %r4652, %r4651, 18;
	shf.r.wrap.b32 	%r4656, %r4651, %r4652, 18;
	mov.b64 	%rd6755, {%r4656, %r4655};
	xor.b64  	%rd6756, %rd6754, %rd6755;
	shf.l.wrap.b32 	%r4657, %r4651, %r4652, 23;
	shf.l.wrap.b32 	%r4658, %r4652, %r4651, 23;
	mov.b64 	%rd6757, {%r4658, %r4657};
	xor.b64  	%rd6758, %rd6756, %rd6757;
	add.s64 	%rd6759, %rd6753, %rd6758;
	add.s64 	%rd6760, %rd6759, 8532644243296465576;
	add.s64 	%rd6761, %rd6760, %rd6624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4659,%dummy}, %rd6735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4660}, %rd6735;
	}
	shf.r.wrap.b32 	%r4661, %r4660, %r4659, 28;
	shf.r.wrap.b32 	%r4662, %r4659, %r4660, 28;
	mov.b64 	%rd6762, {%r4662, %r4661};
	shf.l.wrap.b32 	%r4663, %r4659, %r4660, 30;
	shf.l.wrap.b32 	%r4664, %r4660, %r4659, 30;
	mov.b64 	%rd6763, {%r4664, %r4663};
	xor.b64  	%rd6764, %rd6762, %rd6763;
	shf.l.wrap.b32 	%r4665, %r4659, %r4660, 25;
	shf.l.wrap.b32 	%r4666, %r4660, %r4659, 25;
	mov.b64 	%rd6765, {%r4666, %r4665};
	xor.b64  	%rd6766, %rd6764, %rd6765;
	and.b64  	%rd6767, %rd6735, %rd6698;
	or.b64  	%rd6768, %rd6735, %rd6698;
	and.b64  	%rd6769, %rd6768, %rd6661;
	or.b64  	%rd6770, %rd6769, %rd6767;
	add.s64 	%rd6771, %rd6770, %rd6766;
	add.s64 	%rd6772, %rd6771, %rd6760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4667,%dummy}, %rd6711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4668}, %rd6711;
	}
	shf.r.wrap.b32 	%r4669, %r4668, %r4667, 19;
	shf.r.wrap.b32 	%r4670, %r4667, %r4668, 19;
	mov.b64 	%rd6773, {%r4670, %r4669};
	shf.l.wrap.b32 	%r4671, %r4667, %r4668, 3;
	shf.l.wrap.b32 	%r4672, %r4668, %r4667, 3;
	mov.b64 	%rd6774, {%r4672, %r4671};
	xor.b64  	%rd6775, %rd6773, %rd6774;
	shr.u64 	%rd6776, %rd6711, 6;
	xor.b64  	%rd6777, %rd6775, %rd6776;
	shf.r.wrap.b32 	%r4673, %r4322, %r4321, 1;
	shf.r.wrap.b32 	%r4674, %r4321, %r4322, 1;
	mov.b64 	%rd6778, {%r4674, %r4673};
	shf.r.wrap.b32 	%r4675, %r4322, %r4321, 8;
	shf.r.wrap.b32 	%r4676, %r4321, %r4322, 8;
	mov.b64 	%rd6779, {%r4676, %r4675};
	xor.b64  	%rd6780, %rd6778, %rd6779;
	shr.u64 	%rd6781, %rd6230, 7;
	xor.b64  	%rd6782, %rd6780, %rd6781;
	add.s64 	%rd6783, %rd6777, %rd6193;
	add.s64 	%rd6784, %rd6783, %rd6526;
	add.s64 	%rd6785, %rd6784, %rd6782;
	add.s64 	%rd6786, %rd6785, %rd6650;
	xor.b64  	%rd6787, %rd6724, %rd6687;
	and.b64  	%rd6788, %rd6761, %rd6787;
	xor.b64  	%rd6789, %rd6788, %rd6687;
	add.s64 	%rd6790, %rd6786, %rd6789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4677,%dummy}, %rd6761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4678}, %rd6761;
	}
	shf.r.wrap.b32 	%r4679, %r4678, %r4677, 14;
	shf.r.wrap.b32 	%r4680, %r4677, %r4678, 14;
	mov.b64 	%rd6791, {%r4680, %r4679};
	shf.r.wrap.b32 	%r4681, %r4678, %r4677, 18;
	shf.r.wrap.b32 	%r4682, %r4677, %r4678, 18;
	mov.b64 	%rd6792, {%r4682, %r4681};
	xor.b64  	%rd6793, %rd6791, %rd6792;
	shf.l.wrap.b32 	%r4683, %r4677, %r4678, 23;
	shf.l.wrap.b32 	%r4684, %r4678, %r4677, 23;
	mov.b64 	%rd6794, {%r4684, %r4683};
	xor.b64  	%rd6795, %rd6793, %rd6794;
	add.s64 	%rd6796, %rd6790, %rd6795;
	add.s64 	%rd6797, %rd6796, -9096487096722542874;
	add.s64 	%rd6798, %rd6797, %rd6661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4685,%dummy}, %rd6772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4686}, %rd6772;
	}
	shf.r.wrap.b32 	%r4687, %r4686, %r4685, 28;
	shf.r.wrap.b32 	%r4688, %r4685, %r4686, 28;
	mov.b64 	%rd6799, {%r4688, %r4687};
	shf.l.wrap.b32 	%r4689, %r4685, %r4686, 30;
	shf.l.wrap.b32 	%r4690, %r4686, %r4685, 30;
	mov.b64 	%rd6800, {%r4690, %r4689};
	xor.b64  	%rd6801, %rd6799, %rd6800;
	shf.l.wrap.b32 	%r4691, %r4685, %r4686, 25;
	shf.l.wrap.b32 	%r4692, %r4686, %r4685, 25;
	mov.b64 	%rd6802, {%r4692, %r4691};
	xor.b64  	%rd6803, %rd6801, %rd6802;
	and.b64  	%rd6804, %rd6772, %rd6735;
	or.b64  	%rd6805, %rd6772, %rd6735;
	and.b64  	%rd6806, %rd6805, %rd6698;
	or.b64  	%rd6807, %rd6806, %rd6804;
	add.s64 	%rd6808, %rd6807, %rd6803;
	add.s64 	%rd6809, %rd6808, %rd6797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4693,%dummy}, %rd6748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4694}, %rd6748;
	}
	shf.r.wrap.b32 	%r4695, %r4694, %r4693, 19;
	shf.r.wrap.b32 	%r4696, %r4693, %r4694, 19;
	mov.b64 	%rd6810, {%r4696, %r4695};
	shf.l.wrap.b32 	%r4697, %r4693, %r4694, 3;
	shf.l.wrap.b32 	%r4698, %r4694, %r4693, 3;
	mov.b64 	%rd6811, {%r4698, %r4697};
	xor.b64  	%rd6812, %rd6810, %rd6811;
	shr.u64 	%rd6813, %rd6748, 6;
	xor.b64  	%rd6814, %rd6812, %rd6813;
	shf.r.wrap.b32 	%r4699, %r4350, %r4349, 1;
	shf.r.wrap.b32 	%r4700, %r4349, %r4350, 1;
	mov.b64 	%rd6815, {%r4700, %r4699};
	shf.r.wrap.b32 	%r4701, %r4350, %r4349, 8;
	shf.r.wrap.b32 	%r4702, %r4349, %r4350, 8;
	mov.b64 	%rd6816, {%r4702, %r4701};
	xor.b64  	%rd6817, %rd6815, %rd6816;
	shr.u64 	%rd6818, %rd6267, 7;
	xor.b64  	%rd6819, %rd6817, %rd6818;
	add.s64 	%rd6820, %rd6814, %rd6230;
	add.s64 	%rd6821, %rd6820, %rd6563;
	add.s64 	%rd6822, %rd6821, %rd6819;
	add.s64 	%rd6823, %rd6822, %rd6687;
	xor.b64  	%rd6824, %rd6761, %rd6724;
	and.b64  	%rd6825, %rd6798, %rd6824;
	xor.b64  	%rd6826, %rd6825, %rd6724;
	add.s64 	%rd6827, %rd6823, %rd6826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4703,%dummy}, %rd6798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4704}, %rd6798;
	}
	shf.r.wrap.b32 	%r4705, %r4704, %r4703, 14;
	shf.r.wrap.b32 	%r4706, %r4703, %r4704, 14;
	mov.b64 	%rd6828, {%r4706, %r4705};
	shf.r.wrap.b32 	%r4707, %r4704, %r4703, 18;
	shf.r.wrap.b32 	%r4708, %r4703, %r4704, 18;
	mov.b64 	%rd6829, {%r4708, %r4707};
	xor.b64  	%rd6830, %rd6828, %rd6829;
	shf.l.wrap.b32 	%r4709, %r4703, %r4704, 23;
	shf.l.wrap.b32 	%r4710, %r4704, %r4703, 23;
	mov.b64 	%rd6831, {%r4710, %r4709};
	xor.b64  	%rd6832, %rd6830, %rd6831;
	add.s64 	%rd6833, %rd6827, %rd6832;
	add.s64 	%rd6834, %rd6833, -7894198246740708037;
	add.s64 	%rd6835, %rd6834, %rd6698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4711,%dummy}, %rd6809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4712}, %rd6809;
	}
	shf.r.wrap.b32 	%r4713, %r4712, %r4711, 28;
	shf.r.wrap.b32 	%r4714, %r4711, %r4712, 28;
	mov.b64 	%rd6836, {%r4714, %r4713};
	shf.l.wrap.b32 	%r4715, %r4711, %r4712, 30;
	shf.l.wrap.b32 	%r4716, %r4712, %r4711, 30;
	mov.b64 	%rd6837, {%r4716, %r4715};
	xor.b64  	%rd6838, %rd6836, %rd6837;
	shf.l.wrap.b32 	%r4717, %r4711, %r4712, 25;
	shf.l.wrap.b32 	%r4718, %r4712, %r4711, 25;
	mov.b64 	%rd6839, {%r4718, %r4717};
	xor.b64  	%rd6840, %rd6838, %rd6839;
	and.b64  	%rd6841, %rd6809, %rd6772;
	or.b64  	%rd6842, %rd6809, %rd6772;
	and.b64  	%rd6843, %rd6842, %rd6735;
	or.b64  	%rd6844, %rd6843, %rd6841;
	add.s64 	%rd6845, %rd6844, %rd6840;
	add.s64 	%rd6846, %rd6845, %rd6834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4719,%dummy}, %rd6785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4720}, %rd6785;
	}
	shf.r.wrap.b32 	%r4721, %r4720, %r4719, 19;
	shf.r.wrap.b32 	%r4722, %r4719, %r4720, 19;
	mov.b64 	%rd6847, {%r4722, %r4721};
	shf.l.wrap.b32 	%r4723, %r4719, %r4720, 3;
	shf.l.wrap.b32 	%r4724, %r4720, %r4719, 3;
	mov.b64 	%rd6848, {%r4724, %r4723};
	xor.b64  	%rd6849, %rd6847, %rd6848;
	shr.u64 	%rd6850, %rd6785, 6;
	xor.b64  	%rd6851, %rd6849, %rd6850;
	shf.r.wrap.b32 	%r4725, %r4378, %r4377, 1;
	shf.r.wrap.b32 	%r4726, %r4377, %r4378, 1;
	mov.b64 	%rd6852, {%r4726, %r4725};
	shf.r.wrap.b32 	%r4727, %r4378, %r4377, 8;
	shf.r.wrap.b32 	%r4728, %r4377, %r4378, 8;
	mov.b64 	%rd6853, {%r4728, %r4727};
	xor.b64  	%rd6854, %rd6852, %rd6853;
	shr.u64 	%rd6855, %rd6304, 7;
	xor.b64  	%rd6856, %rd6854, %rd6855;
	add.s64 	%rd6857, %rd6851, %rd6267;
	add.s64 	%rd6858, %rd6857, %rd6600;
	add.s64 	%rd6859, %rd6858, %rd6856;
	add.s64 	%rd6860, %rd6859, %rd6724;
	xor.b64  	%rd6861, %rd6798, %rd6761;
	and.b64  	%rd6862, %rd6835, %rd6861;
	xor.b64  	%rd6863, %rd6862, %rd6761;
	add.s64 	%rd6864, %rd6860, %rd6863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4729,%dummy}, %rd6835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4730}, %rd6835;
	}
	shf.r.wrap.b32 	%r4731, %r4730, %r4729, 14;
	shf.r.wrap.b32 	%r4732, %r4729, %r4730, 14;
	mov.b64 	%rd6865, {%r4732, %r4731};
	shf.r.wrap.b32 	%r4733, %r4730, %r4729, 18;
	shf.r.wrap.b32 	%r4734, %r4729, %r4730, 18;
	mov.b64 	%rd6866, {%r4734, %r4733};
	xor.b64  	%rd6867, %rd6865, %rd6866;
	shf.l.wrap.b32 	%r4735, %r4729, %r4730, 23;
	shf.l.wrap.b32 	%r4736, %r4730, %r4729, 23;
	mov.b64 	%rd6868, {%r4736, %r4735};
	xor.b64  	%rd6869, %rd6867, %rd6868;
	add.s64 	%rd6870, %rd6864, %rd6869;
	add.s64 	%rd6871, %rd6870, -6719396339535248540;
	add.s64 	%rd6872, %rd6871, %rd6735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4737,%dummy}, %rd6846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4738}, %rd6846;
	}
	shf.r.wrap.b32 	%r4739, %r4738, %r4737, 28;
	shf.r.wrap.b32 	%r4740, %r4737, %r4738, 28;
	mov.b64 	%rd6873, {%r4740, %r4739};
	shf.l.wrap.b32 	%r4741, %r4737, %r4738, 30;
	shf.l.wrap.b32 	%r4742, %r4738, %r4737, 30;
	mov.b64 	%rd6874, {%r4742, %r4741};
	xor.b64  	%rd6875, %rd6873, %rd6874;
	shf.l.wrap.b32 	%r4743, %r4737, %r4738, 25;
	shf.l.wrap.b32 	%r4744, %r4738, %r4737, 25;
	mov.b64 	%rd6876, {%r4744, %r4743};
	xor.b64  	%rd6877, %rd6875, %rd6876;
	and.b64  	%rd6878, %rd6846, %rd6809;
	or.b64  	%rd6879, %rd6846, %rd6809;
	and.b64  	%rd6880, %rd6879, %rd6772;
	or.b64  	%rd6881, %rd6880, %rd6878;
	add.s64 	%rd6882, %rd6881, %rd6877;
	add.s64 	%rd6883, %rd6882, %rd6871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4745,%dummy}, %rd6822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4746}, %rd6822;
	}
	shf.r.wrap.b32 	%r4747, %r4746, %r4745, 19;
	shf.r.wrap.b32 	%r4748, %r4745, %r4746, 19;
	mov.b64 	%rd6884, {%r4748, %r4747};
	shf.l.wrap.b32 	%r4749, %r4745, %r4746, 3;
	shf.l.wrap.b32 	%r4750, %r4746, %r4745, 3;
	mov.b64 	%rd6885, {%r4750, %r4749};
	xor.b64  	%rd6886, %rd6884, %rd6885;
	shr.u64 	%rd6887, %rd6822, 6;
	xor.b64  	%rd6888, %rd6886, %rd6887;
	shf.r.wrap.b32 	%r4751, %r4406, %r4405, 1;
	shf.r.wrap.b32 	%r4752, %r4405, %r4406, 1;
	mov.b64 	%rd6889, {%r4752, %r4751};
	shf.r.wrap.b32 	%r4753, %r4406, %r4405, 8;
	shf.r.wrap.b32 	%r4754, %r4405, %r4406, 8;
	mov.b64 	%rd6890, {%r4754, %r4753};
	xor.b64  	%rd6891, %rd6889, %rd6890;
	shr.u64 	%rd6892, %rd6341, 7;
	xor.b64  	%rd6893, %rd6891, %rd6892;
	add.s64 	%rd6894, %rd6888, %rd6304;
	add.s64 	%rd6895, %rd6894, %rd6637;
	add.s64 	%rd6896, %rd6895, %rd6893;
	add.s64 	%rd6897, %rd6896, %rd6761;
	xor.b64  	%rd6898, %rd6835, %rd6798;
	and.b64  	%rd6899, %rd6872, %rd6898;
	xor.b64  	%rd6900, %rd6899, %rd6798;
	add.s64 	%rd6901, %rd6897, %rd6900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4755,%dummy}, %rd6872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4756}, %rd6872;
	}
	shf.r.wrap.b32 	%r4757, %r4756, %r4755, 14;
	shf.r.wrap.b32 	%r4758, %r4755, %r4756, 14;
	mov.b64 	%rd6902, {%r4758, %r4757};
	shf.r.wrap.b32 	%r4759, %r4756, %r4755, 18;
	shf.r.wrap.b32 	%r4760, %r4755, %r4756, 18;
	mov.b64 	%rd6903, {%r4760, %r4759};
	xor.b64  	%rd6904, %rd6902, %rd6903;
	shf.l.wrap.b32 	%r4761, %r4755, %r4756, 23;
	shf.l.wrap.b32 	%r4762, %r4756, %r4755, 23;
	mov.b64 	%rd6905, {%r4762, %r4761};
	xor.b64  	%rd6906, %rd6904, %rd6905;
	add.s64 	%rd6907, %rd6901, %rd6906;
	add.s64 	%rd6908, %rd6907, -6333637450476146687;
	add.s64 	%rd6909, %rd6908, %rd6772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4763,%dummy}, %rd6883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4764}, %rd6883;
	}
	shf.r.wrap.b32 	%r4765, %r4764, %r4763, 28;
	shf.r.wrap.b32 	%r4766, %r4763, %r4764, 28;
	mov.b64 	%rd6910, {%r4766, %r4765};
	shf.l.wrap.b32 	%r4767, %r4763, %r4764, 30;
	shf.l.wrap.b32 	%r4768, %r4764, %r4763, 30;
	mov.b64 	%rd6911, {%r4768, %r4767};
	xor.b64  	%rd6912, %rd6910, %rd6911;
	shf.l.wrap.b32 	%r4769, %r4763, %r4764, 25;
	shf.l.wrap.b32 	%r4770, %r4764, %r4763, 25;
	mov.b64 	%rd6913, {%r4770, %r4769};
	xor.b64  	%rd6914, %rd6912, %rd6913;
	and.b64  	%rd6915, %rd6883, %rd6846;
	or.b64  	%rd6916, %rd6883, %rd6846;
	and.b64  	%rd6917, %rd6916, %rd6809;
	or.b64  	%rd6918, %rd6917, %rd6915;
	add.s64 	%rd6919, %rd6918, %rd6914;
	add.s64 	%rd6920, %rd6919, %rd6908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4771,%dummy}, %rd6859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4772}, %rd6859;
	}
	shf.r.wrap.b32 	%r4773, %r4772, %r4771, 19;
	shf.r.wrap.b32 	%r4774, %r4771, %r4772, 19;
	mov.b64 	%rd6921, {%r4774, %r4773};
	shf.l.wrap.b32 	%r4775, %r4771, %r4772, 3;
	shf.l.wrap.b32 	%r4776, %r4772, %r4771, 3;
	mov.b64 	%rd6922, {%r4776, %r4775};
	xor.b64  	%rd6923, %rd6921, %rd6922;
	shr.u64 	%rd6924, %rd6859, 6;
	xor.b64  	%rd6925, %rd6923, %rd6924;
	shf.r.wrap.b32 	%r4777, %r4434, %r4433, 1;
	shf.r.wrap.b32 	%r4778, %r4433, %r4434, 1;
	mov.b64 	%rd6926, {%r4778, %r4777};
	shf.r.wrap.b32 	%r4779, %r4434, %r4433, 8;
	shf.r.wrap.b32 	%r4780, %r4433, %r4434, 8;
	mov.b64 	%rd6927, {%r4780, %r4779};
	xor.b64  	%rd6928, %rd6926, %rd6927;
	shr.u64 	%rd6929, %rd6378, 7;
	xor.b64  	%rd6930, %rd6928, %rd6929;
	add.s64 	%rd6931, %rd6925, %rd6341;
	add.s64 	%rd6932, %rd6931, %rd6674;
	add.s64 	%rd6933, %rd6932, %rd6930;
	add.s64 	%rd6934, %rd6933, %rd6798;
	xor.b64  	%rd6935, %rd6872, %rd6835;
	and.b64  	%rd6936, %rd6909, %rd6935;
	xor.b64  	%rd6937, %rd6936, %rd6835;
	add.s64 	%rd6938, %rd6934, %rd6937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4781,%dummy}, %rd6909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4782}, %rd6909;
	}
	shf.r.wrap.b32 	%r4783, %r4782, %r4781, 14;
	shf.r.wrap.b32 	%r4784, %r4781, %r4782, 14;
	mov.b64 	%rd6939, {%r4784, %r4783};
	shf.r.wrap.b32 	%r4785, %r4782, %r4781, 18;
	shf.r.wrap.b32 	%r4786, %r4781, %r4782, 18;
	mov.b64 	%rd6940, {%r4786, %r4785};
	xor.b64  	%rd6941, %rd6939, %rd6940;
	shf.l.wrap.b32 	%r4787, %r4781, %r4782, 23;
	shf.l.wrap.b32 	%r4788, %r4782, %r4781, 23;
	mov.b64 	%rd6942, {%r4788, %r4787};
	xor.b64  	%rd6943, %rd6941, %rd6942;
	add.s64 	%rd6944, %rd6938, %rd6943;
	add.s64 	%rd6945, %rd6944, -4446306890439682159;
	add.s64 	%rd6946, %rd6945, %rd6809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4789,%dummy}, %rd6920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4790}, %rd6920;
	}
	shf.r.wrap.b32 	%r4791, %r4790, %r4789, 28;
	shf.r.wrap.b32 	%r4792, %r4789, %r4790, 28;
	mov.b64 	%rd6947, {%r4792, %r4791};
	shf.l.wrap.b32 	%r4793, %r4789, %r4790, 30;
	shf.l.wrap.b32 	%r4794, %r4790, %r4789, 30;
	mov.b64 	%rd6948, {%r4794, %r4793};
	xor.b64  	%rd6949, %rd6947, %rd6948;
	shf.l.wrap.b32 	%r4795, %r4789, %r4790, 25;
	shf.l.wrap.b32 	%r4796, %r4790, %r4789, 25;
	mov.b64 	%rd6950, {%r4796, %r4795};
	xor.b64  	%rd6951, %rd6949, %rd6950;
	and.b64  	%rd6952, %rd6920, %rd6883;
	or.b64  	%rd6953, %rd6920, %rd6883;
	and.b64  	%rd6954, %rd6953, %rd6846;
	or.b64  	%rd6955, %rd6954, %rd6952;
	add.s64 	%rd6956, %rd6955, %rd6951;
	add.s64 	%rd6957, %rd6956, %rd6945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4797,%dummy}, %rd6896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4798}, %rd6896;
	}
	shf.r.wrap.b32 	%r4799, %r4798, %r4797, 19;
	shf.r.wrap.b32 	%r4800, %r4797, %r4798, 19;
	mov.b64 	%rd6958, {%r4800, %r4799};
	shf.l.wrap.b32 	%r4801, %r4797, %r4798, 3;
	shf.l.wrap.b32 	%r4802, %r4798, %r4797, 3;
	mov.b64 	%rd6959, {%r4802, %r4801};
	xor.b64  	%rd6960, %rd6958, %rd6959;
	shr.u64 	%rd6961, %rd6896, 6;
	xor.b64  	%rd6962, %rd6960, %rd6961;
	shf.r.wrap.b32 	%r4803, %r4460, %r4459, 1;
	shf.r.wrap.b32 	%r4804, %r4459, %r4460, 1;
	mov.b64 	%rd6963, {%r4804, %r4803};
	shf.r.wrap.b32 	%r4805, %r4460, %r4459, 8;
	shf.r.wrap.b32 	%r4806, %r4459, %r4460, 8;
	mov.b64 	%rd6964, {%r4806, %r4805};
	xor.b64  	%rd6965, %rd6963, %rd6964;
	shr.u64 	%rd6966, %rd6415, 7;
	xor.b64  	%rd6967, %rd6965, %rd6966;
	add.s64 	%rd6968, %rd6962, %rd6378;
	add.s64 	%rd6969, %rd6968, %rd6711;
	add.s64 	%rd6970, %rd6969, %rd6967;
	add.s64 	%rd6971, %rd6970, %rd6835;
	xor.b64  	%rd6972, %rd6909, %rd6872;
	and.b64  	%rd6973, %rd6946, %rd6972;
	xor.b64  	%rd6974, %rd6973, %rd6872;
	add.s64 	%rd6975, %rd6971, %rd6974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4807,%dummy}, %rd6946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4808}, %rd6946;
	}
	shf.r.wrap.b32 	%r4809, %r4808, %r4807, 14;
	shf.r.wrap.b32 	%r4810, %r4807, %r4808, 14;
	mov.b64 	%rd6976, {%r4810, %r4809};
	shf.r.wrap.b32 	%r4811, %r4808, %r4807, 18;
	shf.r.wrap.b32 	%r4812, %r4807, %r4808, 18;
	mov.b64 	%rd6977, {%r4812, %r4811};
	xor.b64  	%rd6978, %rd6976, %rd6977;
	shf.l.wrap.b32 	%r4813, %r4807, %r4808, 23;
	shf.l.wrap.b32 	%r4814, %r4808, %r4807, 23;
	mov.b64 	%rd6979, {%r4814, %r4813};
	xor.b64  	%rd6980, %rd6978, %rd6979;
	add.s64 	%rd6981, %rd6975, %rd6980;
	add.s64 	%rd6982, %rd6981, -4076793802049405392;
	add.s64 	%rd6983, %rd6982, %rd6846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4815,%dummy}, %rd6957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4816}, %rd6957;
	}
	shf.r.wrap.b32 	%r4817, %r4816, %r4815, 28;
	shf.r.wrap.b32 	%r4818, %r4815, %r4816, 28;
	mov.b64 	%rd6984, {%r4818, %r4817};
	shf.l.wrap.b32 	%r4819, %r4815, %r4816, 30;
	shf.l.wrap.b32 	%r4820, %r4816, %r4815, 30;
	mov.b64 	%rd6985, {%r4820, %r4819};
	xor.b64  	%rd6986, %rd6984, %rd6985;
	shf.l.wrap.b32 	%r4821, %r4815, %r4816, 25;
	shf.l.wrap.b32 	%r4822, %r4816, %r4815, 25;
	mov.b64 	%rd6987, {%r4822, %r4821};
	xor.b64  	%rd6988, %rd6986, %rd6987;
	and.b64  	%rd6989, %rd6957, %rd6920;
	or.b64  	%rd6990, %rd6957, %rd6920;
	and.b64  	%rd6991, %rd6990, %rd6883;
	or.b64  	%rd6992, %rd6991, %rd6989;
	add.s64 	%rd6993, %rd6992, %rd6988;
	add.s64 	%rd6994, %rd6993, %rd6982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4823,%dummy}, %rd6933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4824}, %rd6933;
	}
	shf.r.wrap.b32 	%r4825, %r4824, %r4823, 19;
	shf.r.wrap.b32 	%r4826, %r4823, %r4824, 19;
	mov.b64 	%rd6995, {%r4826, %r4825};
	shf.l.wrap.b32 	%r4827, %r4823, %r4824, 3;
	shf.l.wrap.b32 	%r4828, %r4824, %r4823, 3;
	mov.b64 	%rd6996, {%r4828, %r4827};
	xor.b64  	%rd6997, %rd6995, %rd6996;
	shr.u64 	%rd6998, %rd6933, 6;
	xor.b64  	%rd6999, %rd6997, %rd6998;
	shf.r.wrap.b32 	%r4829, %r4486, %r4485, 1;
	shf.r.wrap.b32 	%r4830, %r4485, %r4486, 1;
	mov.b64 	%rd7000, {%r4830, %r4829};
	shf.r.wrap.b32 	%r4831, %r4486, %r4485, 8;
	shf.r.wrap.b32 	%r4832, %r4485, %r4486, 8;
	mov.b64 	%rd7001, {%r4832, %r4831};
	xor.b64  	%rd7002, %rd7000, %rd7001;
	shr.u64 	%rd7003, %rd6452, 7;
	xor.b64  	%rd7004, %rd7002, %rd7003;
	add.s64 	%rd7005, %rd6999, %rd6415;
	add.s64 	%rd7006, %rd7005, %rd6748;
	add.s64 	%rd7007, %rd7006, %rd7004;
	add.s64 	%rd7008, %rd7007, %rd6872;
	xor.b64  	%rd7009, %rd6946, %rd6909;
	and.b64  	%rd7010, %rd6983, %rd7009;
	xor.b64  	%rd7011, %rd7010, %rd6909;
	add.s64 	%rd7012, %rd7008, %rd7011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4833,%dummy}, %rd6983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4834}, %rd6983;
	}
	shf.r.wrap.b32 	%r4835, %r4834, %r4833, 14;
	shf.r.wrap.b32 	%r4836, %r4833, %r4834, 14;
	mov.b64 	%rd7013, {%r4836, %r4835};
	shf.r.wrap.b32 	%r4837, %r4834, %r4833, 18;
	shf.r.wrap.b32 	%r4838, %r4833, %r4834, 18;
	mov.b64 	%rd7014, {%r4838, %r4837};
	xor.b64  	%rd7015, %rd7013, %rd7014;
	shf.l.wrap.b32 	%r4839, %r4833, %r4834, 23;
	shf.l.wrap.b32 	%r4840, %r4834, %r4833, 23;
	mov.b64 	%rd7016, {%r4840, %r4839};
	xor.b64  	%rd7017, %rd7015, %rd7016;
	add.s64 	%rd7018, %rd7012, %rd7017;
	add.s64 	%rd7019, %rd7018, -3345356375505022440;
	add.s64 	%rd7020, %rd7019, %rd6883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4841,%dummy}, %rd6994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4842}, %rd6994;
	}
	shf.r.wrap.b32 	%r4843, %r4842, %r4841, 28;
	shf.r.wrap.b32 	%r4844, %r4841, %r4842, 28;
	mov.b64 	%rd7021, {%r4844, %r4843};
	shf.l.wrap.b32 	%r4845, %r4841, %r4842, 30;
	shf.l.wrap.b32 	%r4846, %r4842, %r4841, 30;
	mov.b64 	%rd7022, {%r4846, %r4845};
	xor.b64  	%rd7023, %rd7021, %rd7022;
	shf.l.wrap.b32 	%r4847, %r4841, %r4842, 25;
	shf.l.wrap.b32 	%r4848, %r4842, %r4841, 25;
	mov.b64 	%rd7024, {%r4848, %r4847};
	xor.b64  	%rd7025, %rd7023, %rd7024;
	and.b64  	%rd7026, %rd6994, %rd6957;
	or.b64  	%rd7027, %rd6994, %rd6957;
	and.b64  	%rd7028, %rd7027, %rd6920;
	or.b64  	%rd7029, %rd7028, %rd7026;
	add.s64 	%rd7030, %rd7029, %rd7025;
	add.s64 	%rd7031, %rd7030, %rd7019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4849,%dummy}, %rd6970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4850}, %rd6970;
	}
	shf.r.wrap.b32 	%r4851, %r4850, %r4849, 19;
	shf.r.wrap.b32 	%r4852, %r4849, %r4850, 19;
	mov.b64 	%rd7032, {%r4852, %r4851};
	shf.l.wrap.b32 	%r4853, %r4849, %r4850, 3;
	shf.l.wrap.b32 	%r4854, %r4850, %r4849, 3;
	mov.b64 	%rd7033, {%r4854, %r4853};
	xor.b64  	%rd7034, %rd7032, %rd7033;
	shr.u64 	%rd7035, %rd6970, 6;
	xor.b64  	%rd7036, %rd7034, %rd7035;
	shf.r.wrap.b32 	%r4855, %r4512, %r4511, 1;
	shf.r.wrap.b32 	%r4856, %r4511, %r4512, 1;
	mov.b64 	%rd7037, {%r4856, %r4855};
	shf.r.wrap.b32 	%r4857, %r4512, %r4511, 8;
	shf.r.wrap.b32 	%r4858, %r4511, %r4512, 8;
	mov.b64 	%rd7038, {%r4858, %r4857};
	xor.b64  	%rd7039, %rd7037, %rd7038;
	shr.u64 	%rd7040, %rd6489, 7;
	xor.b64  	%rd7041, %rd7039, %rd7040;
	add.s64 	%rd7042, %rd7036, %rd6452;
	add.s64 	%rd7043, %rd7042, %rd6785;
	add.s64 	%rd7044, %rd7043, %rd7041;
	add.s64 	%rd7045, %rd7044, %rd6909;
	xor.b64  	%rd7046, %rd6983, %rd6946;
	and.b64  	%rd7047, %rd7020, %rd7046;
	xor.b64  	%rd7048, %rd7047, %rd6946;
	add.s64 	%rd7049, %rd7045, %rd7048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4859,%dummy}, %rd7020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4860}, %rd7020;
	}
	shf.r.wrap.b32 	%r4861, %r4860, %r4859, 14;
	shf.r.wrap.b32 	%r4862, %r4859, %r4860, 14;
	mov.b64 	%rd7050, {%r4862, %r4861};
	shf.r.wrap.b32 	%r4863, %r4860, %r4859, 18;
	shf.r.wrap.b32 	%r4864, %r4859, %r4860, 18;
	mov.b64 	%rd7051, {%r4864, %r4863};
	xor.b64  	%rd7052, %rd7050, %rd7051;
	shf.l.wrap.b32 	%r4865, %r4859, %r4860, 23;
	shf.l.wrap.b32 	%r4866, %r4860, %r4859, 23;
	mov.b64 	%rd7053, {%r4866, %r4865};
	xor.b64  	%rd7054, %rd7052, %rd7053;
	add.s64 	%rd7055, %rd7049, %rd7054;
	add.s64 	%rd7056, %rd7055, -2983346525034927856;
	add.s64 	%rd7057, %rd7056, %rd6920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4867,%dummy}, %rd7031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4868}, %rd7031;
	}
	shf.r.wrap.b32 	%r4869, %r4868, %r4867, 28;
	shf.r.wrap.b32 	%r4870, %r4867, %r4868, 28;
	mov.b64 	%rd7058, {%r4870, %r4869};
	shf.l.wrap.b32 	%r4871, %r4867, %r4868, 30;
	shf.l.wrap.b32 	%r4872, %r4868, %r4867, 30;
	mov.b64 	%rd7059, {%r4872, %r4871};
	xor.b64  	%rd7060, %rd7058, %rd7059;
	shf.l.wrap.b32 	%r4873, %r4867, %r4868, 25;
	shf.l.wrap.b32 	%r4874, %r4868, %r4867, 25;
	mov.b64 	%rd7061, {%r4874, %r4873};
	xor.b64  	%rd7062, %rd7060, %rd7061;
	and.b64  	%rd7063, %rd7031, %rd6994;
	or.b64  	%rd7064, %rd7031, %rd6994;
	and.b64  	%rd7065, %rd7064, %rd6957;
	or.b64  	%rd7066, %rd7065, %rd7063;
	add.s64 	%rd7067, %rd7066, %rd7062;
	add.s64 	%rd7068, %rd7067, %rd7056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4875,%dummy}, %rd7007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4876}, %rd7007;
	}
	shf.r.wrap.b32 	%r4877, %r4876, %r4875, 19;
	shf.r.wrap.b32 	%r4878, %r4875, %r4876, 19;
	mov.b64 	%rd7069, {%r4878, %r4877};
	shf.l.wrap.b32 	%r4879, %r4875, %r4876, 3;
	shf.l.wrap.b32 	%r4880, %r4876, %r4875, 3;
	mov.b64 	%rd7070, {%r4880, %r4879};
	xor.b64  	%rd7071, %rd7069, %rd7070;
	shr.u64 	%rd7072, %rd7007, 6;
	xor.b64  	%rd7073, %rd7071, %rd7072;
	shf.r.wrap.b32 	%r4881, %r4538, %r4537, 1;
	shf.r.wrap.b32 	%r4882, %r4537, %r4538, 1;
	mov.b64 	%rd7074, {%r4882, %r4881};
	shf.r.wrap.b32 	%r4883, %r4538, %r4537, 8;
	shf.r.wrap.b32 	%r4884, %r4537, %r4538, 8;
	mov.b64 	%rd7075, {%r4884, %r4883};
	xor.b64  	%rd7076, %rd7074, %rd7075;
	shr.u64 	%rd7077, %rd6526, 7;
	xor.b64  	%rd7078, %rd7076, %rd7077;
	add.s64 	%rd7079, %rd7073, %rd6489;
	add.s64 	%rd7080, %rd7079, %rd6822;
	add.s64 	%rd7081, %rd7080, %rd7078;
	add.s64 	%rd7082, %rd7081, %rd6946;
	xor.b64  	%rd7083, %rd7020, %rd6983;
	and.b64  	%rd7084, %rd7057, %rd7083;
	xor.b64  	%rd7085, %rd7084, %rd6983;
	add.s64 	%rd7086, %rd7082, %rd7085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4885,%dummy}, %rd7057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4886}, %rd7057;
	}
	shf.r.wrap.b32 	%r4887, %r4886, %r4885, 14;
	shf.r.wrap.b32 	%r4888, %r4885, %r4886, 14;
	mov.b64 	%rd7087, {%r4888, %r4887};
	shf.r.wrap.b32 	%r4889, %r4886, %r4885, 18;
	shf.r.wrap.b32 	%r4890, %r4885, %r4886, 18;
	mov.b64 	%rd7088, {%r4890, %r4889};
	xor.b64  	%rd7089, %rd7087, %rd7088;
	shf.l.wrap.b32 	%r4891, %r4885, %r4886, 23;
	shf.l.wrap.b32 	%r4892, %r4886, %r4885, 23;
	mov.b64 	%rd7090, {%r4892, %r4891};
	xor.b64  	%rd7091, %rd7089, %rd7090;
	add.s64 	%rd7092, %rd7086, %rd7091;
	add.s64 	%rd7093, %rd7092, -860691631967231958;
	add.s64 	%rd7094, %rd7093, %rd6957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4893,%dummy}, %rd7068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4894}, %rd7068;
	}
	shf.r.wrap.b32 	%r4895, %r4894, %r4893, 28;
	shf.r.wrap.b32 	%r4896, %r4893, %r4894, 28;
	mov.b64 	%rd7095, {%r4896, %r4895};
	shf.l.wrap.b32 	%r4897, %r4893, %r4894, 30;
	shf.l.wrap.b32 	%r4898, %r4894, %r4893, 30;
	mov.b64 	%rd7096, {%r4898, %r4897};
	xor.b64  	%rd7097, %rd7095, %rd7096;
	shf.l.wrap.b32 	%r4899, %r4893, %r4894, 25;
	shf.l.wrap.b32 	%r4900, %r4894, %r4893, 25;
	mov.b64 	%rd7098, {%r4900, %r4899};
	xor.b64  	%rd7099, %rd7097, %rd7098;
	and.b64  	%rd7100, %rd7068, %rd7031;
	or.b64  	%rd7101, %rd7068, %rd7031;
	and.b64  	%rd7102, %rd7101, %rd6994;
	or.b64  	%rd7103, %rd7102, %rd7100;
	add.s64 	%rd7104, %rd7103, %rd7099;
	add.s64 	%rd7105, %rd7104, %rd7093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4901,%dummy}, %rd7044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4902}, %rd7044;
	}
	shf.r.wrap.b32 	%r4903, %r4902, %r4901, 19;
	shf.r.wrap.b32 	%r4904, %r4901, %r4902, 19;
	mov.b64 	%rd7106, {%r4904, %r4903};
	shf.l.wrap.b32 	%r4905, %r4901, %r4902, 3;
	shf.l.wrap.b32 	%r4906, %r4902, %r4901, 3;
	mov.b64 	%rd7107, {%r4906, %r4905};
	xor.b64  	%rd7108, %rd7106, %rd7107;
	shr.u64 	%rd7109, %rd7044, 6;
	xor.b64  	%rd7110, %rd7108, %rd7109;
	shf.r.wrap.b32 	%r4907, %r4564, %r4563, 1;
	shf.r.wrap.b32 	%r4908, %r4563, %r4564, 1;
	mov.b64 	%rd7111, {%r4908, %r4907};
	shf.r.wrap.b32 	%r4909, %r4564, %r4563, 8;
	shf.r.wrap.b32 	%r4910, %r4563, %r4564, 8;
	mov.b64 	%rd7112, {%r4910, %r4909};
	xor.b64  	%rd7113, %rd7111, %rd7112;
	shr.u64 	%rd7114, %rd6563, 7;
	xor.b64  	%rd7115, %rd7113, %rd7114;
	add.s64 	%rd7116, %rd7110, %rd6526;
	add.s64 	%rd7117, %rd7116, %rd6859;
	add.s64 	%rd7118, %rd7117, %rd7115;
	add.s64 	%rd7119, %rd7118, %rd6983;
	xor.b64  	%rd7120, %rd7057, %rd7020;
	and.b64  	%rd7121, %rd7094, %rd7120;
	xor.b64  	%rd7122, %rd7121, %rd7020;
	add.s64 	%rd7123, %rd7119, %rd7122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4911,%dummy}, %rd7094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4912}, %rd7094;
	}
	shf.r.wrap.b32 	%r4913, %r4912, %r4911, 14;
	shf.r.wrap.b32 	%r4914, %r4911, %r4912, 14;
	mov.b64 	%rd7124, {%r4914, %r4913};
	shf.r.wrap.b32 	%r4915, %r4912, %r4911, 18;
	shf.r.wrap.b32 	%r4916, %r4911, %r4912, 18;
	mov.b64 	%rd7125, {%r4916, %r4915};
	xor.b64  	%rd7126, %rd7124, %rd7125;
	shf.l.wrap.b32 	%r4917, %r4911, %r4912, 23;
	shf.l.wrap.b32 	%r4918, %r4912, %r4911, 23;
	mov.b64 	%rd7127, {%r4918, %r4917};
	xor.b64  	%rd7128, %rd7126, %rd7127;
	add.s64 	%rd7129, %rd7123, %rd7128;
	add.s64 	%rd7130, %rd7129, 1182934255886127544;
	add.s64 	%rd7131, %rd7130, %rd6994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4919,%dummy}, %rd7105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4920}, %rd7105;
	}
	shf.r.wrap.b32 	%r4921, %r4920, %r4919, 28;
	shf.r.wrap.b32 	%r4922, %r4919, %r4920, 28;
	mov.b64 	%rd7132, {%r4922, %r4921};
	shf.l.wrap.b32 	%r4923, %r4919, %r4920, 30;
	shf.l.wrap.b32 	%r4924, %r4920, %r4919, 30;
	mov.b64 	%rd7133, {%r4924, %r4923};
	xor.b64  	%rd7134, %rd7132, %rd7133;
	shf.l.wrap.b32 	%r4925, %r4919, %r4920, 25;
	shf.l.wrap.b32 	%r4926, %r4920, %r4919, 25;
	mov.b64 	%rd7135, {%r4926, %r4925};
	xor.b64  	%rd7136, %rd7134, %rd7135;
	and.b64  	%rd7137, %rd7105, %rd7068;
	or.b64  	%rd7138, %rd7105, %rd7068;
	and.b64  	%rd7139, %rd7138, %rd7031;
	or.b64  	%rd7140, %rd7139, %rd7137;
	add.s64 	%rd7141, %rd7140, %rd7136;
	add.s64 	%rd7142, %rd7141, %rd7130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4927,%dummy}, %rd7081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4928}, %rd7081;
	}
	shf.r.wrap.b32 	%r4929, %r4928, %r4927, 19;
	shf.r.wrap.b32 	%r4930, %r4927, %r4928, 19;
	mov.b64 	%rd7143, {%r4930, %r4929};
	shf.l.wrap.b32 	%r4931, %r4927, %r4928, 3;
	shf.l.wrap.b32 	%r4932, %r4928, %r4927, 3;
	mov.b64 	%rd7144, {%r4932, %r4931};
	xor.b64  	%rd7145, %rd7143, %rd7144;
	shr.u64 	%rd7146, %rd7081, 6;
	xor.b64  	%rd7147, %rd7145, %rd7146;
	shf.r.wrap.b32 	%r4933, %r4590, %r4589, 1;
	shf.r.wrap.b32 	%r4934, %r4589, %r4590, 1;
	mov.b64 	%rd7148, {%r4934, %r4933};
	shf.r.wrap.b32 	%r4935, %r4590, %r4589, 8;
	shf.r.wrap.b32 	%r4936, %r4589, %r4590, 8;
	mov.b64 	%rd7149, {%r4936, %r4935};
	xor.b64  	%rd7150, %rd7148, %rd7149;
	shr.u64 	%rd7151, %rd6600, 7;
	xor.b64  	%rd7152, %rd7150, %rd7151;
	add.s64 	%rd7153, %rd7147, %rd6563;
	add.s64 	%rd7154, %rd7153, %rd6896;
	add.s64 	%rd7155, %rd7154, %rd7152;
	add.s64 	%rd7156, %rd7155, %rd7020;
	xor.b64  	%rd7157, %rd7094, %rd7057;
	and.b64  	%rd7158, %rd7131, %rd7157;
	xor.b64  	%rd7159, %rd7158, %rd7057;
	add.s64 	%rd7160, %rd7156, %rd7159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4937,%dummy}, %rd7131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4938}, %rd7131;
	}
	shf.r.wrap.b32 	%r4939, %r4938, %r4937, 14;
	shf.r.wrap.b32 	%r4940, %r4937, %r4938, 14;
	mov.b64 	%rd7161, {%r4940, %r4939};
	shf.r.wrap.b32 	%r4941, %r4938, %r4937, 18;
	shf.r.wrap.b32 	%r4942, %r4937, %r4938, 18;
	mov.b64 	%rd7162, {%r4942, %r4941};
	xor.b64  	%rd7163, %rd7161, %rd7162;
	shf.l.wrap.b32 	%r4943, %r4937, %r4938, 23;
	shf.l.wrap.b32 	%r4944, %r4938, %r4937, 23;
	mov.b64 	%rd7164, {%r4944, %r4943};
	xor.b64  	%rd7165, %rd7163, %rd7164;
	add.s64 	%rd7166, %rd7160, %rd7165;
	add.s64 	%rd7167, %rd7166, 1847814050463011016;
	add.s64 	%rd7168, %rd7167, %rd7031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4945,%dummy}, %rd7142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4946}, %rd7142;
	}
	shf.r.wrap.b32 	%r4947, %r4946, %r4945, 28;
	shf.r.wrap.b32 	%r4948, %r4945, %r4946, 28;
	mov.b64 	%rd7169, {%r4948, %r4947};
	shf.l.wrap.b32 	%r4949, %r4945, %r4946, 30;
	shf.l.wrap.b32 	%r4950, %r4946, %r4945, 30;
	mov.b64 	%rd7170, {%r4950, %r4949};
	xor.b64  	%rd7171, %rd7169, %rd7170;
	shf.l.wrap.b32 	%r4951, %r4945, %r4946, 25;
	shf.l.wrap.b32 	%r4952, %r4946, %r4945, 25;
	mov.b64 	%rd7172, {%r4952, %r4951};
	xor.b64  	%rd7173, %rd7171, %rd7172;
	and.b64  	%rd7174, %rd7142, %rd7105;
	or.b64  	%rd7175, %rd7142, %rd7105;
	and.b64  	%rd7176, %rd7175, %rd7068;
	or.b64  	%rd7177, %rd7176, %rd7174;
	add.s64 	%rd7178, %rd7177, %rd7173;
	add.s64 	%rd7179, %rd7178, %rd7167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4953,%dummy}, %rd7118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4954}, %rd7118;
	}
	shf.r.wrap.b32 	%r4955, %r4954, %r4953, 19;
	shf.r.wrap.b32 	%r4956, %r4953, %r4954, 19;
	mov.b64 	%rd7180, {%r4956, %r4955};
	shf.l.wrap.b32 	%r4957, %r4953, %r4954, 3;
	shf.l.wrap.b32 	%r4958, %r4954, %r4953, 3;
	mov.b64 	%rd7181, {%r4958, %r4957};
	xor.b64  	%rd7182, %rd7180, %rd7181;
	shr.u64 	%rd7183, %rd7118, 6;
	xor.b64  	%rd7184, %rd7182, %rd7183;
	shf.r.wrap.b32 	%r4959, %r4616, %r4615, 1;
	shf.r.wrap.b32 	%r4960, %r4615, %r4616, 1;
	mov.b64 	%rd7185, {%r4960, %r4959};
	shf.r.wrap.b32 	%r4961, %r4616, %r4615, 8;
	shf.r.wrap.b32 	%r4962, %r4615, %r4616, 8;
	mov.b64 	%rd7186, {%r4962, %r4961};
	xor.b64  	%rd7187, %rd7185, %rd7186;
	shr.u64 	%rd7188, %rd6637, 7;
	xor.b64  	%rd7189, %rd7187, %rd7188;
	add.s64 	%rd7190, %rd7184, %rd6600;
	add.s64 	%rd7191, %rd7190, %rd6933;
	add.s64 	%rd7192, %rd7191, %rd7189;
	add.s64 	%rd7193, %rd7192, %rd7057;
	xor.b64  	%rd7194, %rd7131, %rd7094;
	and.b64  	%rd7195, %rd7168, %rd7194;
	xor.b64  	%rd7196, %rd7195, %rd7094;
	add.s64 	%rd7197, %rd7193, %rd7196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4963,%dummy}, %rd7168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4964}, %rd7168;
	}
	shf.r.wrap.b32 	%r4965, %r4964, %r4963, 14;
	shf.r.wrap.b32 	%r4966, %r4963, %r4964, 14;
	mov.b64 	%rd7198, {%r4966, %r4965};
	shf.r.wrap.b32 	%r4967, %r4964, %r4963, 18;
	shf.r.wrap.b32 	%r4968, %r4963, %r4964, 18;
	mov.b64 	%rd7199, {%r4968, %r4967};
	xor.b64  	%rd7200, %rd7198, %rd7199;
	shf.l.wrap.b32 	%r4969, %r4963, %r4964, 23;
	shf.l.wrap.b32 	%r4970, %r4964, %r4963, 23;
	mov.b64 	%rd7201, {%r4970, %r4969};
	xor.b64  	%rd7202, %rd7200, %rd7201;
	add.s64 	%rd7203, %rd7197, %rd7202;
	add.s64 	%rd7204, %rd7203, 2177327727835720531;
	add.s64 	%rd7205, %rd7204, %rd7068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4971,%dummy}, %rd7179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4972}, %rd7179;
	}
	shf.r.wrap.b32 	%r4973, %r4972, %r4971, 28;
	shf.r.wrap.b32 	%r4974, %r4971, %r4972, 28;
	mov.b64 	%rd7206, {%r4974, %r4973};
	shf.l.wrap.b32 	%r4975, %r4971, %r4972, 30;
	shf.l.wrap.b32 	%r4976, %r4972, %r4971, 30;
	mov.b64 	%rd7207, {%r4976, %r4975};
	xor.b64  	%rd7208, %rd7206, %rd7207;
	shf.l.wrap.b32 	%r4977, %r4971, %r4972, 25;
	shf.l.wrap.b32 	%r4978, %r4972, %r4971, 25;
	mov.b64 	%rd7209, {%r4978, %r4977};
	xor.b64  	%rd7210, %rd7208, %rd7209;
	and.b64  	%rd7211, %rd7179, %rd7142;
	or.b64  	%rd7212, %rd7179, %rd7142;
	and.b64  	%rd7213, %rd7212, %rd7105;
	or.b64  	%rd7214, %rd7213, %rd7211;
	add.s64 	%rd7215, %rd7214, %rd7210;
	add.s64 	%rd7216, %rd7215, %rd7204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4979,%dummy}, %rd7155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4980}, %rd7155;
	}
	shf.r.wrap.b32 	%r4981, %r4980, %r4979, 19;
	shf.r.wrap.b32 	%r4982, %r4979, %r4980, 19;
	mov.b64 	%rd7217, {%r4982, %r4981};
	shf.l.wrap.b32 	%r4983, %r4979, %r4980, 3;
	shf.l.wrap.b32 	%r4984, %r4980, %r4979, 3;
	mov.b64 	%rd7218, {%r4984, %r4983};
	xor.b64  	%rd7219, %rd7217, %rd7218;
	shr.u64 	%rd7220, %rd7155, 6;
	xor.b64  	%rd7221, %rd7219, %rd7220;
	shf.r.wrap.b32 	%r4985, %r4642, %r4641, 1;
	shf.r.wrap.b32 	%r4986, %r4641, %r4642, 1;
	mov.b64 	%rd7222, {%r4986, %r4985};
	shf.r.wrap.b32 	%r4987, %r4642, %r4641, 8;
	shf.r.wrap.b32 	%r4988, %r4641, %r4642, 8;
	mov.b64 	%rd7223, {%r4988, %r4987};
	xor.b64  	%rd7224, %rd7222, %rd7223;
	shr.u64 	%rd7225, %rd6674, 7;
	xor.b64  	%rd7226, %rd7224, %rd7225;
	add.s64 	%rd7227, %rd7221, %rd6637;
	add.s64 	%rd7228, %rd7227, %rd6970;
	add.s64 	%rd7229, %rd7228, %rd7226;
	add.s64 	%rd7230, %rd7229, %rd7094;
	xor.b64  	%rd7231, %rd7168, %rd7131;
	and.b64  	%rd7232, %rd7205, %rd7231;
	xor.b64  	%rd7233, %rd7232, %rd7131;
	add.s64 	%rd7234, %rd7230, %rd7233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4989,%dummy}, %rd7205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4990}, %rd7205;
	}
	shf.r.wrap.b32 	%r4991, %r4990, %r4989, 14;
	shf.r.wrap.b32 	%r4992, %r4989, %r4990, 14;
	mov.b64 	%rd7235, {%r4992, %r4991};
	shf.r.wrap.b32 	%r4993, %r4990, %r4989, 18;
	shf.r.wrap.b32 	%r4994, %r4989, %r4990, 18;
	mov.b64 	%rd7236, {%r4994, %r4993};
	xor.b64  	%rd7237, %rd7235, %rd7236;
	shf.l.wrap.b32 	%r4995, %r4989, %r4990, 23;
	shf.l.wrap.b32 	%r4996, %r4990, %r4989, 23;
	mov.b64 	%rd7238, {%r4996, %r4995};
	xor.b64  	%rd7239, %rd7237, %rd7238;
	add.s64 	%rd7240, %rd7234, %rd7239;
	add.s64 	%rd7241, %rd7240, 2830643537854262169;
	add.s64 	%rd7242, %rd7241, %rd7105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4997,%dummy}, %rd7216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4998}, %rd7216;
	}
	shf.r.wrap.b32 	%r4999, %r4998, %r4997, 28;
	shf.r.wrap.b32 	%r5000, %r4997, %r4998, 28;
	mov.b64 	%rd7243, {%r5000, %r4999};
	shf.l.wrap.b32 	%r5001, %r4997, %r4998, 30;
	shf.l.wrap.b32 	%r5002, %r4998, %r4997, 30;
	mov.b64 	%rd7244, {%r5002, %r5001};
	xor.b64  	%rd7245, %rd7243, %rd7244;
	shf.l.wrap.b32 	%r5003, %r4997, %r4998, 25;
	shf.l.wrap.b32 	%r5004, %r4998, %r4997, 25;
	mov.b64 	%rd7246, {%r5004, %r5003};
	xor.b64  	%rd7247, %rd7245, %rd7246;
	and.b64  	%rd7248, %rd7216, %rd7179;
	or.b64  	%rd7249, %rd7216, %rd7179;
	and.b64  	%rd7250, %rd7249, %rd7142;
	or.b64  	%rd7251, %rd7250, %rd7248;
	add.s64 	%rd7252, %rd7251, %rd7247;
	add.s64 	%rd7253, %rd7252, %rd7241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5005,%dummy}, %rd7192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5006}, %rd7192;
	}
	shf.r.wrap.b32 	%r5007, %r5006, %r5005, 19;
	shf.r.wrap.b32 	%r5008, %r5005, %r5006, 19;
	mov.b64 	%rd7254, {%r5008, %r5007};
	shf.l.wrap.b32 	%r5009, %r5005, %r5006, 3;
	shf.l.wrap.b32 	%r5010, %r5006, %r5005, 3;
	mov.b64 	%rd7255, {%r5010, %r5009};
	xor.b64  	%rd7256, %rd7254, %rd7255;
	shr.u64 	%rd7257, %rd7192, 6;
	xor.b64  	%rd7258, %rd7256, %rd7257;
	shf.r.wrap.b32 	%r5011, %r4668, %r4667, 1;
	shf.r.wrap.b32 	%r5012, %r4667, %r4668, 1;
	mov.b64 	%rd7259, {%r5012, %r5011};
	shf.r.wrap.b32 	%r5013, %r4668, %r4667, 8;
	shf.r.wrap.b32 	%r5014, %r4667, %r4668, 8;
	mov.b64 	%rd7260, {%r5014, %r5013};
	xor.b64  	%rd7261, %rd7259, %rd7260;
	shr.u64 	%rd7262, %rd6711, 7;
	xor.b64  	%rd7263, %rd7261, %rd7262;
	add.s64 	%rd7264, %rd7258, %rd6674;
	add.s64 	%rd7265, %rd7264, %rd7007;
	add.s64 	%rd7266, %rd7265, %rd7263;
	add.s64 	%rd7267, %rd7266, %rd7131;
	xor.b64  	%rd7268, %rd7205, %rd7168;
	and.b64  	%rd7269, %rd7242, %rd7268;
	xor.b64  	%rd7270, %rd7269, %rd7168;
	add.s64 	%rd7271, %rd7267, %rd7270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5015,%dummy}, %rd7242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5016}, %rd7242;
	}
	shf.r.wrap.b32 	%r5017, %r5016, %r5015, 14;
	shf.r.wrap.b32 	%r5018, %r5015, %r5016, 14;
	mov.b64 	%rd7272, {%r5018, %r5017};
	shf.r.wrap.b32 	%r5019, %r5016, %r5015, 18;
	shf.r.wrap.b32 	%r5020, %r5015, %r5016, 18;
	mov.b64 	%rd7273, {%r5020, %r5019};
	xor.b64  	%rd7274, %rd7272, %rd7273;
	shf.l.wrap.b32 	%r5021, %r5015, %r5016, 23;
	shf.l.wrap.b32 	%r5022, %r5016, %r5015, 23;
	mov.b64 	%rd7275, {%r5022, %r5021};
	xor.b64  	%rd7276, %rd7274, %rd7275;
	add.s64 	%rd7277, %rd7271, %rd7276;
	add.s64 	%rd7278, %rd7277, 3796741975233480872;
	add.s64 	%rd7279, %rd7278, %rd7142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5023,%dummy}, %rd7253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5024}, %rd7253;
	}
	shf.r.wrap.b32 	%r5025, %r5024, %r5023, 28;
	shf.r.wrap.b32 	%r5026, %r5023, %r5024, 28;
	mov.b64 	%rd7280, {%r5026, %r5025};
	shf.l.wrap.b32 	%r5027, %r5023, %r5024, 30;
	shf.l.wrap.b32 	%r5028, %r5024, %r5023, 30;
	mov.b64 	%rd7281, {%r5028, %r5027};
	xor.b64  	%rd7282, %rd7280, %rd7281;
	shf.l.wrap.b32 	%r5029, %r5023, %r5024, 25;
	shf.l.wrap.b32 	%r5030, %r5024, %r5023, 25;
	mov.b64 	%rd7283, {%r5030, %r5029};
	xor.b64  	%rd7284, %rd7282, %rd7283;
	and.b64  	%rd7285, %rd7253, %rd7216;
	or.b64  	%rd7286, %rd7253, %rd7216;
	and.b64  	%rd7287, %rd7286, %rd7179;
	or.b64  	%rd7288, %rd7287, %rd7285;
	add.s64 	%rd7289, %rd7288, %rd7284;
	add.s64 	%rd7290, %rd7289, %rd7278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5031,%dummy}, %rd7229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5032}, %rd7229;
	}
	shf.r.wrap.b32 	%r5033, %r5032, %r5031, 19;
	shf.r.wrap.b32 	%r5034, %r5031, %r5032, 19;
	mov.b64 	%rd7291, {%r5034, %r5033};
	shf.l.wrap.b32 	%r5035, %r5031, %r5032, 3;
	shf.l.wrap.b32 	%r5036, %r5032, %r5031, 3;
	mov.b64 	%rd7292, {%r5036, %r5035};
	xor.b64  	%rd7293, %rd7291, %rd7292;
	shr.u64 	%rd7294, %rd7229, 6;
	xor.b64  	%rd7295, %rd7293, %rd7294;
	shf.r.wrap.b32 	%r5037, %r4694, %r4693, 1;
	shf.r.wrap.b32 	%r5038, %r4693, %r4694, 1;
	mov.b64 	%rd7296, {%r5038, %r5037};
	shf.r.wrap.b32 	%r5039, %r4694, %r4693, 8;
	shf.r.wrap.b32 	%r5040, %r4693, %r4694, 8;
	mov.b64 	%rd7297, {%r5040, %r5039};
	xor.b64  	%rd7298, %rd7296, %rd7297;
	shr.u64 	%rd7299, %rd6748, 7;
	xor.b64  	%rd7300, %rd7298, %rd7299;
	add.s64 	%rd7301, %rd7295, %rd6711;
	add.s64 	%rd7302, %rd7301, %rd7044;
	add.s64 	%rd7303, %rd7302, %rd7300;
	add.s64 	%rd7304, %rd7303, %rd7168;
	xor.b64  	%rd7305, %rd7242, %rd7205;
	and.b64  	%rd7306, %rd7279, %rd7305;
	xor.b64  	%rd7307, %rd7306, %rd7205;
	add.s64 	%rd7308, %rd7304, %rd7307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5041,%dummy}, %rd7279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5042}, %rd7279;
	}
	shf.r.wrap.b32 	%r5043, %r5042, %r5041, 14;
	shf.r.wrap.b32 	%r5044, %r5041, %r5042, 14;
	mov.b64 	%rd7309, {%r5044, %r5043};
	shf.r.wrap.b32 	%r5045, %r5042, %r5041, 18;
	shf.r.wrap.b32 	%r5046, %r5041, %r5042, 18;
	mov.b64 	%rd7310, {%r5046, %r5045};
	xor.b64  	%rd7311, %rd7309, %rd7310;
	shf.l.wrap.b32 	%r5047, %r5041, %r5042, 23;
	shf.l.wrap.b32 	%r5048, %r5042, %r5041, 23;
	mov.b64 	%rd7312, {%r5048, %r5047};
	xor.b64  	%rd7313, %rd7311, %rd7312;
	add.s64 	%rd7314, %rd7308, %rd7313;
	add.s64 	%rd7315, %rd7314, 4115178125766777443;
	add.s64 	%rd7316, %rd7315, %rd7179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5049,%dummy}, %rd7290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5050}, %rd7290;
	}
	shf.r.wrap.b32 	%r5051, %r5050, %r5049, 28;
	shf.r.wrap.b32 	%r5052, %r5049, %r5050, 28;
	mov.b64 	%rd7317, {%r5052, %r5051};
	shf.l.wrap.b32 	%r5053, %r5049, %r5050, 30;
	shf.l.wrap.b32 	%r5054, %r5050, %r5049, 30;
	mov.b64 	%rd7318, {%r5054, %r5053};
	xor.b64  	%rd7319, %rd7317, %rd7318;
	shf.l.wrap.b32 	%r5055, %r5049, %r5050, 25;
	shf.l.wrap.b32 	%r5056, %r5050, %r5049, 25;
	mov.b64 	%rd7320, {%r5056, %r5055};
	xor.b64  	%rd7321, %rd7319, %rd7320;
	and.b64  	%rd7322, %rd7290, %rd7253;
	or.b64  	%rd7323, %rd7290, %rd7253;
	and.b64  	%rd7324, %rd7323, %rd7216;
	or.b64  	%rd7325, %rd7324, %rd7322;
	add.s64 	%rd7326, %rd7325, %rd7321;
	add.s64 	%rd7327, %rd7326, %rd7315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5057,%dummy}, %rd7266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5058}, %rd7266;
	}
	shf.r.wrap.b32 	%r5059, %r5058, %r5057, 19;
	shf.r.wrap.b32 	%r5060, %r5057, %r5058, 19;
	mov.b64 	%rd7328, {%r5060, %r5059};
	shf.l.wrap.b32 	%r5061, %r5057, %r5058, 3;
	shf.l.wrap.b32 	%r5062, %r5058, %r5057, 3;
	mov.b64 	%rd7329, {%r5062, %r5061};
	xor.b64  	%rd7330, %rd7328, %rd7329;
	shr.u64 	%rd7331, %rd7266, 6;
	xor.b64  	%rd7332, %rd7330, %rd7331;
	shf.r.wrap.b32 	%r5063, %r4720, %r4719, 1;
	shf.r.wrap.b32 	%r5064, %r4719, %r4720, 1;
	mov.b64 	%rd7333, {%r5064, %r5063};
	shf.r.wrap.b32 	%r5065, %r4720, %r4719, 8;
	shf.r.wrap.b32 	%r5066, %r4719, %r4720, 8;
	mov.b64 	%rd7334, {%r5066, %r5065};
	xor.b64  	%rd7335, %rd7333, %rd7334;
	shr.u64 	%rd7336, %rd6785, 7;
	xor.b64  	%rd7337, %rd7335, %rd7336;
	add.s64 	%rd7338, %rd7332, %rd6748;
	add.s64 	%rd7339, %rd7338, %rd7081;
	add.s64 	%rd7340, %rd7339, %rd7337;
	add.s64 	%rd7341, %rd7340, %rd7205;
	xor.b64  	%rd7342, %rd7279, %rd7242;
	and.b64  	%rd7343, %rd7316, %rd7342;
	xor.b64  	%rd7344, %rd7343, %rd7242;
	add.s64 	%rd7345, %rd7341, %rd7344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5067,%dummy}, %rd7316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5068}, %rd7316;
	}
	shf.r.wrap.b32 	%r5069, %r5068, %r5067, 14;
	shf.r.wrap.b32 	%r5070, %r5067, %r5068, 14;
	mov.b64 	%rd7346, {%r5070, %r5069};
	shf.r.wrap.b32 	%r5071, %r5068, %r5067, 18;
	shf.r.wrap.b32 	%r5072, %r5067, %r5068, 18;
	mov.b64 	%rd7347, {%r5072, %r5071};
	xor.b64  	%rd7348, %rd7346, %rd7347;
	shf.l.wrap.b32 	%r5073, %r5067, %r5068, 23;
	shf.l.wrap.b32 	%r5074, %r5068, %r5067, 23;
	mov.b64 	%rd7349, {%r5074, %r5073};
	xor.b64  	%rd7350, %rd7348, %rd7349;
	add.s64 	%rd7351, %rd7345, %rd7350;
	add.s64 	%rd7352, %rd7351, 5681478168544905931;
	add.s64 	%rd7353, %rd7352, %rd7216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5075,%dummy}, %rd7327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5076}, %rd7327;
	}
	shf.r.wrap.b32 	%r5077, %r5076, %r5075, 28;
	shf.r.wrap.b32 	%r5078, %r5075, %r5076, 28;
	mov.b64 	%rd7354, {%r5078, %r5077};
	shf.l.wrap.b32 	%r5079, %r5075, %r5076, 30;
	shf.l.wrap.b32 	%r5080, %r5076, %r5075, 30;
	mov.b64 	%rd7355, {%r5080, %r5079};
	xor.b64  	%rd7356, %rd7354, %rd7355;
	shf.l.wrap.b32 	%r5081, %r5075, %r5076, 25;
	shf.l.wrap.b32 	%r5082, %r5076, %r5075, 25;
	mov.b64 	%rd7357, {%r5082, %r5081};
	xor.b64  	%rd7358, %rd7356, %rd7357;
	and.b64  	%rd7359, %rd7327, %rd7290;
	or.b64  	%rd7360, %rd7327, %rd7290;
	and.b64  	%rd7361, %rd7360, %rd7253;
	or.b64  	%rd7362, %rd7361, %rd7359;
	add.s64 	%rd7363, %rd7362, %rd7358;
	add.s64 	%rd7364, %rd7363, %rd7352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5083,%dummy}, %rd7303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5084}, %rd7303;
	}
	shf.r.wrap.b32 	%r5085, %r5084, %r5083, 19;
	shf.r.wrap.b32 	%r5086, %r5083, %r5084, 19;
	mov.b64 	%rd7365, {%r5086, %r5085};
	shf.l.wrap.b32 	%r5087, %r5083, %r5084, 3;
	shf.l.wrap.b32 	%r5088, %r5084, %r5083, 3;
	mov.b64 	%rd7366, {%r5088, %r5087};
	xor.b64  	%rd7367, %rd7365, %rd7366;
	shr.u64 	%rd7368, %rd7303, 6;
	xor.b64  	%rd7369, %rd7367, %rd7368;
	shf.r.wrap.b32 	%r5089, %r4746, %r4745, 1;
	shf.r.wrap.b32 	%r5090, %r4745, %r4746, 1;
	mov.b64 	%rd7370, {%r5090, %r5089};
	shf.r.wrap.b32 	%r5091, %r4746, %r4745, 8;
	shf.r.wrap.b32 	%r5092, %r4745, %r4746, 8;
	mov.b64 	%rd7371, {%r5092, %r5091};
	xor.b64  	%rd7372, %rd7370, %rd7371;
	shr.u64 	%rd7373, %rd6822, 7;
	xor.b64  	%rd7374, %rd7372, %rd7373;
	add.s64 	%rd7375, %rd7369, %rd6785;
	add.s64 	%rd7376, %rd7375, %rd7118;
	add.s64 	%rd7377, %rd7376, %rd7374;
	add.s64 	%rd7378, %rd7377, %rd7242;
	xor.b64  	%rd7379, %rd7316, %rd7279;
	and.b64  	%rd7380, %rd7353, %rd7379;
	xor.b64  	%rd7381, %rd7380, %rd7279;
	add.s64 	%rd7382, %rd7378, %rd7381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5093,%dummy}, %rd7353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5094}, %rd7353;
	}
	shf.r.wrap.b32 	%r5095, %r5094, %r5093, 14;
	shf.r.wrap.b32 	%r5096, %r5093, %r5094, 14;
	mov.b64 	%rd7383, {%r5096, %r5095};
	shf.r.wrap.b32 	%r5097, %r5094, %r5093, 18;
	shf.r.wrap.b32 	%r5098, %r5093, %r5094, 18;
	mov.b64 	%rd7384, {%r5098, %r5097};
	xor.b64  	%rd7385, %rd7383, %rd7384;
	shf.l.wrap.b32 	%r5099, %r5093, %r5094, 23;
	shf.l.wrap.b32 	%r5100, %r5094, %r5093, 23;
	mov.b64 	%rd7386, {%r5100, %r5099};
	xor.b64  	%rd7387, %rd7385, %rd7386;
	add.s64 	%rd7388, %rd7382, %rd7387;
	add.s64 	%rd7389, %rd7388, 6601373596472566643;
	add.s64 	%rd7390, %rd7389, %rd7253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5101,%dummy}, %rd7364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5102}, %rd7364;
	}
	shf.r.wrap.b32 	%r5103, %r5102, %r5101, 28;
	shf.r.wrap.b32 	%r5104, %r5101, %r5102, 28;
	mov.b64 	%rd7391, {%r5104, %r5103};
	shf.l.wrap.b32 	%r5105, %r5101, %r5102, 30;
	shf.l.wrap.b32 	%r5106, %r5102, %r5101, 30;
	mov.b64 	%rd7392, {%r5106, %r5105};
	xor.b64  	%rd7393, %rd7391, %rd7392;
	shf.l.wrap.b32 	%r5107, %r5101, %r5102, 25;
	shf.l.wrap.b32 	%r5108, %r5102, %r5101, 25;
	mov.b64 	%rd7394, {%r5108, %r5107};
	xor.b64  	%rd7395, %rd7393, %rd7394;
	and.b64  	%rd7396, %rd7364, %rd7327;
	or.b64  	%rd7397, %rd7364, %rd7327;
	and.b64  	%rd7398, %rd7397, %rd7290;
	or.b64  	%rd7399, %rd7398, %rd7396;
	add.s64 	%rd7400, %rd7399, %rd7395;
	add.s64 	%rd7401, %rd7400, %rd7389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5109,%dummy}, %rd7340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5110}, %rd7340;
	}
	shf.r.wrap.b32 	%r5111, %r5110, %r5109, 19;
	shf.r.wrap.b32 	%r5112, %r5109, %r5110, 19;
	mov.b64 	%rd7402, {%r5112, %r5111};
	shf.l.wrap.b32 	%r5113, %r5109, %r5110, 3;
	shf.l.wrap.b32 	%r5114, %r5110, %r5109, 3;
	mov.b64 	%rd7403, {%r5114, %r5113};
	xor.b64  	%rd7404, %rd7402, %rd7403;
	shr.u64 	%rd7405, %rd7340, 6;
	xor.b64  	%rd7406, %rd7404, %rd7405;
	shf.r.wrap.b32 	%r5115, %r4772, %r4771, 1;
	shf.r.wrap.b32 	%r5116, %r4771, %r4772, 1;
	mov.b64 	%rd7407, {%r5116, %r5115};
	shf.r.wrap.b32 	%r5117, %r4772, %r4771, 8;
	shf.r.wrap.b32 	%r5118, %r4771, %r4772, 8;
	mov.b64 	%rd7408, {%r5118, %r5117};
	xor.b64  	%rd7409, %rd7407, %rd7408;
	shr.u64 	%rd7410, %rd6859, 7;
	xor.b64  	%rd7411, %rd7409, %rd7410;
	add.s64 	%rd7412, %rd7406, %rd6822;
	add.s64 	%rd7413, %rd7412, %rd7155;
	add.s64 	%rd7414, %rd7413, %rd7411;
	add.s64 	%rd7415, %rd7414, %rd7279;
	xor.b64  	%rd7416, %rd7353, %rd7316;
	and.b64  	%rd7417, %rd7390, %rd7416;
	xor.b64  	%rd7418, %rd7417, %rd7316;
	add.s64 	%rd7419, %rd7415, %rd7418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5119,%dummy}, %rd7390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5120}, %rd7390;
	}
	shf.r.wrap.b32 	%r5121, %r5120, %r5119, 14;
	shf.r.wrap.b32 	%r5122, %r5119, %r5120, 14;
	mov.b64 	%rd7420, {%r5122, %r5121};
	shf.r.wrap.b32 	%r5123, %r5120, %r5119, 18;
	shf.r.wrap.b32 	%r5124, %r5119, %r5120, 18;
	mov.b64 	%rd7421, {%r5124, %r5123};
	xor.b64  	%rd7422, %rd7420, %rd7421;
	shf.l.wrap.b32 	%r5125, %r5119, %r5120, 23;
	shf.l.wrap.b32 	%r5126, %r5120, %r5119, 23;
	mov.b64 	%rd7423, {%r5126, %r5125};
	xor.b64  	%rd7424, %rd7422, %rd7423;
	add.s64 	%rd7425, %rd7419, %rd7424;
	add.s64 	%rd7426, %rd7425, 7507060721942968483;
	add.s64 	%rd7427, %rd7426, %rd7290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5127,%dummy}, %rd7401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5128}, %rd7401;
	}
	shf.r.wrap.b32 	%r5129, %r5128, %r5127, 28;
	shf.r.wrap.b32 	%r5130, %r5127, %r5128, 28;
	mov.b64 	%rd7428, {%r5130, %r5129};
	shf.l.wrap.b32 	%r5131, %r5127, %r5128, 30;
	shf.l.wrap.b32 	%r5132, %r5128, %r5127, 30;
	mov.b64 	%rd7429, {%r5132, %r5131};
	xor.b64  	%rd7430, %rd7428, %rd7429;
	shf.l.wrap.b32 	%r5133, %r5127, %r5128, 25;
	shf.l.wrap.b32 	%r5134, %r5128, %r5127, 25;
	mov.b64 	%rd7431, {%r5134, %r5133};
	xor.b64  	%rd7432, %rd7430, %rd7431;
	and.b64  	%rd7433, %rd7401, %rd7364;
	or.b64  	%rd7434, %rd7401, %rd7364;
	and.b64  	%rd7435, %rd7434, %rd7327;
	or.b64  	%rd7436, %rd7435, %rd7433;
	add.s64 	%rd7437, %rd7436, %rd7432;
	add.s64 	%rd7438, %rd7437, %rd7426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5135,%dummy}, %rd7377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5136}, %rd7377;
	}
	shf.r.wrap.b32 	%r5137, %r5136, %r5135, 19;
	shf.r.wrap.b32 	%r5138, %r5135, %r5136, 19;
	mov.b64 	%rd7439, {%r5138, %r5137};
	shf.l.wrap.b32 	%r5139, %r5135, %r5136, 3;
	shf.l.wrap.b32 	%r5140, %r5136, %r5135, 3;
	mov.b64 	%rd7440, {%r5140, %r5139};
	xor.b64  	%rd7441, %rd7439, %rd7440;
	shr.u64 	%rd7442, %rd7377, 6;
	xor.b64  	%rd7443, %rd7441, %rd7442;
	shf.r.wrap.b32 	%r5141, %r4798, %r4797, 1;
	shf.r.wrap.b32 	%r5142, %r4797, %r4798, 1;
	mov.b64 	%rd7444, {%r5142, %r5141};
	shf.r.wrap.b32 	%r5143, %r4798, %r4797, 8;
	shf.r.wrap.b32 	%r5144, %r4797, %r4798, 8;
	mov.b64 	%rd7445, {%r5144, %r5143};
	xor.b64  	%rd7446, %rd7444, %rd7445;
	shr.u64 	%rd7447, %rd6896, 7;
	xor.b64  	%rd7448, %rd7446, %rd7447;
	add.s64 	%rd7449, %rd7443, %rd6859;
	add.s64 	%rd7450, %rd7449, %rd7192;
	add.s64 	%rd7451, %rd7450, %rd7448;
	add.s64 	%rd7452, %rd7451, %rd7316;
	xor.b64  	%rd7453, %rd7390, %rd7353;
	and.b64  	%rd7454, %rd7427, %rd7453;
	xor.b64  	%rd7455, %rd7454, %rd7353;
	add.s64 	%rd7456, %rd7452, %rd7455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5145,%dummy}, %rd7427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5146}, %rd7427;
	}
	shf.r.wrap.b32 	%r5147, %r5146, %r5145, 14;
	shf.r.wrap.b32 	%r5148, %r5145, %r5146, 14;
	mov.b64 	%rd7457, {%r5148, %r5147};
	shf.r.wrap.b32 	%r5149, %r5146, %r5145, 18;
	shf.r.wrap.b32 	%r5150, %r5145, %r5146, 18;
	mov.b64 	%rd7458, {%r5150, %r5149};
	xor.b64  	%rd7459, %rd7457, %rd7458;
	shf.l.wrap.b32 	%r5151, %r5145, %r5146, 23;
	shf.l.wrap.b32 	%r5152, %r5146, %r5145, 23;
	mov.b64 	%rd7460, {%r5152, %r5151};
	xor.b64  	%rd7461, %rd7459, %rd7460;
	add.s64 	%rd7462, %rd7456, %rd7461;
	add.s64 	%rd7463, %rd7462, 8399075790359081724;
	add.s64 	%rd7464, %rd7463, %rd7327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5153,%dummy}, %rd7438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5154}, %rd7438;
	}
	shf.r.wrap.b32 	%r5155, %r5154, %r5153, 28;
	shf.r.wrap.b32 	%r5156, %r5153, %r5154, 28;
	mov.b64 	%rd7465, {%r5156, %r5155};
	shf.l.wrap.b32 	%r5157, %r5153, %r5154, 30;
	shf.l.wrap.b32 	%r5158, %r5154, %r5153, 30;
	mov.b64 	%rd7466, {%r5158, %r5157};
	xor.b64  	%rd7467, %rd7465, %rd7466;
	shf.l.wrap.b32 	%r5159, %r5153, %r5154, 25;
	shf.l.wrap.b32 	%r5160, %r5154, %r5153, 25;
	mov.b64 	%rd7468, {%r5160, %r5159};
	xor.b64  	%rd7469, %rd7467, %rd7468;
	and.b64  	%rd7470, %rd7438, %rd7401;
	or.b64  	%rd7471, %rd7438, %rd7401;
	and.b64  	%rd7472, %rd7471, %rd7364;
	or.b64  	%rd7473, %rd7472, %rd7470;
	add.s64 	%rd7474, %rd7473, %rd7469;
	add.s64 	%rd7475, %rd7474, %rd7463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5161,%dummy}, %rd7414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5162}, %rd7414;
	}
	shf.r.wrap.b32 	%r5163, %r5162, %r5161, 19;
	shf.r.wrap.b32 	%r5164, %r5161, %r5162, 19;
	mov.b64 	%rd7476, {%r5164, %r5163};
	shf.l.wrap.b32 	%r5165, %r5161, %r5162, 3;
	shf.l.wrap.b32 	%r5166, %r5162, %r5161, 3;
	mov.b64 	%rd7477, {%r5166, %r5165};
	xor.b64  	%rd7478, %rd7476, %rd7477;
	shr.u64 	%rd7479, %rd7414, 6;
	xor.b64  	%rd7480, %rd7478, %rd7479;
	shf.r.wrap.b32 	%r5167, %r4824, %r4823, 1;
	shf.r.wrap.b32 	%r5168, %r4823, %r4824, 1;
	mov.b64 	%rd7481, {%r5168, %r5167};
	shf.r.wrap.b32 	%r5169, %r4824, %r4823, 8;
	shf.r.wrap.b32 	%r5170, %r4823, %r4824, 8;
	mov.b64 	%rd7482, {%r5170, %r5169};
	xor.b64  	%rd7483, %rd7481, %rd7482;
	shr.u64 	%rd7484, %rd6933, 7;
	xor.b64  	%rd7485, %rd7483, %rd7484;
	add.s64 	%rd7486, %rd7480, %rd6896;
	add.s64 	%rd7487, %rd7486, %rd7229;
	add.s64 	%rd7488, %rd7487, %rd7485;
	add.s64 	%rd7489, %rd7488, %rd7353;
	xor.b64  	%rd7490, %rd7427, %rd7390;
	and.b64  	%rd7491, %rd7464, %rd7490;
	xor.b64  	%rd7492, %rd7491, %rd7390;
	add.s64 	%rd7493, %rd7489, %rd7492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5171,%dummy}, %rd7464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5172}, %rd7464;
	}
	shf.r.wrap.b32 	%r5173, %r5172, %r5171, 14;
	shf.r.wrap.b32 	%r5174, %r5171, %r5172, 14;
	mov.b64 	%rd7494, {%r5174, %r5173};
	shf.r.wrap.b32 	%r5175, %r5172, %r5171, 18;
	shf.r.wrap.b32 	%r5176, %r5171, %r5172, 18;
	mov.b64 	%rd7495, {%r5176, %r5175};
	xor.b64  	%rd7496, %rd7494, %rd7495;
	shf.l.wrap.b32 	%r5177, %r5171, %r5172, 23;
	shf.l.wrap.b32 	%r5178, %r5172, %r5171, 23;
	mov.b64 	%rd7497, {%r5178, %r5177};
	xor.b64  	%rd7498, %rd7496, %rd7497;
	add.s64 	%rd7499, %rd7493, %rd7498;
	add.s64 	%rd7500, %rd7499, 8693463985226723168;
	add.s64 	%rd7501, %rd7500, %rd7364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5179,%dummy}, %rd7475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5180}, %rd7475;
	}
	shf.r.wrap.b32 	%r5181, %r5180, %r5179, 28;
	shf.r.wrap.b32 	%r5182, %r5179, %r5180, 28;
	mov.b64 	%rd7502, {%r5182, %r5181};
	shf.l.wrap.b32 	%r5183, %r5179, %r5180, 30;
	shf.l.wrap.b32 	%r5184, %r5180, %r5179, 30;
	mov.b64 	%rd7503, {%r5184, %r5183};
	xor.b64  	%rd7504, %rd7502, %rd7503;
	shf.l.wrap.b32 	%r5185, %r5179, %r5180, 25;
	shf.l.wrap.b32 	%r5186, %r5180, %r5179, 25;
	mov.b64 	%rd7505, {%r5186, %r5185};
	xor.b64  	%rd7506, %rd7504, %rd7505;
	and.b64  	%rd7507, %rd7475, %rd7438;
	or.b64  	%rd7508, %rd7475, %rd7438;
	and.b64  	%rd7509, %rd7508, %rd7401;
	or.b64  	%rd7510, %rd7509, %rd7507;
	add.s64 	%rd7511, %rd7510, %rd7506;
	add.s64 	%rd7512, %rd7511, %rd7500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5187,%dummy}, %rd7451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5188}, %rd7451;
	}
	shf.r.wrap.b32 	%r5189, %r5188, %r5187, 19;
	shf.r.wrap.b32 	%r5190, %r5187, %r5188, 19;
	mov.b64 	%rd7513, {%r5190, %r5189};
	shf.l.wrap.b32 	%r5191, %r5187, %r5188, 3;
	shf.l.wrap.b32 	%r5192, %r5188, %r5187, 3;
	mov.b64 	%rd7514, {%r5192, %r5191};
	xor.b64  	%rd7515, %rd7513, %rd7514;
	shr.u64 	%rd7516, %rd7451, 6;
	xor.b64  	%rd7517, %rd7515, %rd7516;
	shf.r.wrap.b32 	%r5193, %r4850, %r4849, 1;
	shf.r.wrap.b32 	%r5194, %r4849, %r4850, 1;
	mov.b64 	%rd7518, {%r5194, %r5193};
	shf.r.wrap.b32 	%r5195, %r4850, %r4849, 8;
	shf.r.wrap.b32 	%r5196, %r4849, %r4850, 8;
	mov.b64 	%rd7519, {%r5196, %r5195};
	xor.b64  	%rd7520, %rd7518, %rd7519;
	shr.u64 	%rd7521, %rd6970, 7;
	xor.b64  	%rd7522, %rd7520, %rd7521;
	add.s64 	%rd7523, %rd7517, %rd6933;
	add.s64 	%rd7524, %rd7523, %rd7266;
	add.s64 	%rd7525, %rd7524, %rd7522;
	add.s64 	%rd7526, %rd7525, %rd7390;
	xor.b64  	%rd7527, %rd7464, %rd7427;
	and.b64  	%rd7528, %rd7501, %rd7527;
	xor.b64  	%rd7529, %rd7528, %rd7427;
	add.s64 	%rd7530, %rd7526, %rd7529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5197,%dummy}, %rd7501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5198}, %rd7501;
	}
	shf.r.wrap.b32 	%r5199, %r5198, %r5197, 14;
	shf.r.wrap.b32 	%r5200, %r5197, %r5198, 14;
	mov.b64 	%rd7531, {%r5200, %r5199};
	shf.r.wrap.b32 	%r5201, %r5198, %r5197, 18;
	shf.r.wrap.b32 	%r5202, %r5197, %r5198, 18;
	mov.b64 	%rd7532, {%r5202, %r5201};
	xor.b64  	%rd7533, %rd7531, %rd7532;
	shf.l.wrap.b32 	%r5203, %r5197, %r5198, 23;
	shf.l.wrap.b32 	%r5204, %r5198, %r5197, 23;
	mov.b64 	%rd7534, {%r5204, %r5203};
	xor.b64  	%rd7535, %rd7533, %rd7534;
	add.s64 	%rd7536, %rd7530, %rd7535;
	add.s64 	%rd7537, %rd7536, -8878714635349349518;
	add.s64 	%rd7538, %rd7537, %rd7401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5205,%dummy}, %rd7512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5206}, %rd7512;
	}
	shf.r.wrap.b32 	%r5207, %r5206, %r5205, 28;
	shf.r.wrap.b32 	%r5208, %r5205, %r5206, 28;
	mov.b64 	%rd7539, {%r5208, %r5207};
	shf.l.wrap.b32 	%r5209, %r5205, %r5206, 30;
	shf.l.wrap.b32 	%r5210, %r5206, %r5205, 30;
	mov.b64 	%rd7540, {%r5210, %r5209};
	xor.b64  	%rd7541, %rd7539, %rd7540;
	shf.l.wrap.b32 	%r5211, %r5205, %r5206, 25;
	shf.l.wrap.b32 	%r5212, %r5206, %r5205, 25;
	mov.b64 	%rd7542, {%r5212, %r5211};
	xor.b64  	%rd7543, %rd7541, %rd7542;
	and.b64  	%rd7544, %rd7512, %rd7475;
	or.b64  	%rd7545, %rd7512, %rd7475;
	and.b64  	%rd7546, %rd7545, %rd7438;
	or.b64  	%rd7547, %rd7546, %rd7544;
	add.s64 	%rd7548, %rd7547, %rd7543;
	add.s64 	%rd7549, %rd7548, %rd7537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5213,%dummy}, %rd7488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5214}, %rd7488;
	}
	shf.r.wrap.b32 	%r5215, %r5214, %r5213, 19;
	shf.r.wrap.b32 	%r5216, %r5213, %r5214, 19;
	mov.b64 	%rd7550, {%r5216, %r5215};
	shf.l.wrap.b32 	%r5217, %r5213, %r5214, 3;
	shf.l.wrap.b32 	%r5218, %r5214, %r5213, 3;
	mov.b64 	%rd7551, {%r5218, %r5217};
	xor.b64  	%rd7552, %rd7550, %rd7551;
	shr.u64 	%rd7553, %rd7488, 6;
	xor.b64  	%rd7554, %rd7552, %rd7553;
	shf.r.wrap.b32 	%r5219, %r4876, %r4875, 1;
	shf.r.wrap.b32 	%r5220, %r4875, %r4876, 1;
	mov.b64 	%rd7555, {%r5220, %r5219};
	shf.r.wrap.b32 	%r5221, %r4876, %r4875, 8;
	shf.r.wrap.b32 	%r5222, %r4875, %r4876, 8;
	mov.b64 	%rd7556, {%r5222, %r5221};
	xor.b64  	%rd7557, %rd7555, %rd7556;
	shr.u64 	%rd7558, %rd7007, 7;
	xor.b64  	%rd7559, %rd7557, %rd7558;
	add.s64 	%rd7560, %rd7554, %rd6970;
	add.s64 	%rd7561, %rd7560, %rd7303;
	add.s64 	%rd7562, %rd7561, %rd7559;
	add.s64 	%rd7563, %rd7562, %rd7427;
	xor.b64  	%rd7564, %rd7501, %rd7464;
	and.b64  	%rd7565, %rd7538, %rd7564;
	xor.b64  	%rd7566, %rd7565, %rd7464;
	add.s64 	%rd7567, %rd7563, %rd7566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5223,%dummy}, %rd7538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5224}, %rd7538;
	}
	shf.r.wrap.b32 	%r5225, %r5224, %r5223, 14;
	shf.r.wrap.b32 	%r5226, %r5223, %r5224, 14;
	mov.b64 	%rd7568, {%r5226, %r5225};
	shf.r.wrap.b32 	%r5227, %r5224, %r5223, 18;
	shf.r.wrap.b32 	%r5228, %r5223, %r5224, 18;
	mov.b64 	%rd7569, {%r5228, %r5227};
	xor.b64  	%rd7570, %rd7568, %rd7569;
	shf.l.wrap.b32 	%r5229, %r5223, %r5224, 23;
	shf.l.wrap.b32 	%r5230, %r5224, %r5223, 23;
	mov.b64 	%rd7571, {%r5230, %r5229};
	xor.b64  	%rd7572, %rd7570, %rd7571;
	add.s64 	%rd7573, %rd7567, %rd7572;
	add.s64 	%rd7574, %rd7573, -8302665154208450068;
	add.s64 	%rd7575, %rd7574, %rd7438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5231,%dummy}, %rd7549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5232}, %rd7549;
	}
	shf.r.wrap.b32 	%r5233, %r5232, %r5231, 28;
	shf.r.wrap.b32 	%r5234, %r5231, %r5232, 28;
	mov.b64 	%rd7576, {%r5234, %r5233};
	shf.l.wrap.b32 	%r5235, %r5231, %r5232, 30;
	shf.l.wrap.b32 	%r5236, %r5232, %r5231, 30;
	mov.b64 	%rd7577, {%r5236, %r5235};
	xor.b64  	%rd7578, %rd7576, %rd7577;
	shf.l.wrap.b32 	%r5237, %r5231, %r5232, 25;
	shf.l.wrap.b32 	%r5238, %r5232, %r5231, 25;
	mov.b64 	%rd7579, {%r5238, %r5237};
	xor.b64  	%rd7580, %rd7578, %rd7579;
	and.b64  	%rd7581, %rd7549, %rd7512;
	or.b64  	%rd7582, %rd7549, %rd7512;
	and.b64  	%rd7583, %rd7582, %rd7475;
	or.b64  	%rd7584, %rd7583, %rd7581;
	add.s64 	%rd7585, %rd7584, %rd7580;
	add.s64 	%rd7586, %rd7585, %rd7574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5239,%dummy}, %rd7525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5240}, %rd7525;
	}
	shf.r.wrap.b32 	%r5241, %r5240, %r5239, 19;
	shf.r.wrap.b32 	%r5242, %r5239, %r5240, 19;
	mov.b64 	%rd7587, {%r5242, %r5241};
	shf.l.wrap.b32 	%r5243, %r5239, %r5240, 3;
	shf.l.wrap.b32 	%r5244, %r5240, %r5239, 3;
	mov.b64 	%rd7588, {%r5244, %r5243};
	xor.b64  	%rd7589, %rd7587, %rd7588;
	shr.u64 	%rd7590, %rd7525, 6;
	xor.b64  	%rd7591, %rd7589, %rd7590;
	shf.r.wrap.b32 	%r5245, %r4902, %r4901, 1;
	shf.r.wrap.b32 	%r5246, %r4901, %r4902, 1;
	mov.b64 	%rd7592, {%r5246, %r5245};
	shf.r.wrap.b32 	%r5247, %r4902, %r4901, 8;
	shf.r.wrap.b32 	%r5248, %r4901, %r4902, 8;
	mov.b64 	%rd7593, {%r5248, %r5247};
	xor.b64  	%rd7594, %rd7592, %rd7593;
	shr.u64 	%rd7595, %rd7044, 7;
	xor.b64  	%rd7596, %rd7594, %rd7595;
	add.s64 	%rd7597, %rd7591, %rd7007;
	add.s64 	%rd7598, %rd7597, %rd7340;
	add.s64 	%rd7599, %rd7598, %rd7596;
	add.s64 	%rd7600, %rd7599, %rd7464;
	xor.b64  	%rd7601, %rd7538, %rd7501;
	and.b64  	%rd7602, %rd7575, %rd7601;
	xor.b64  	%rd7603, %rd7602, %rd7501;
	add.s64 	%rd7604, %rd7600, %rd7603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5249,%dummy}, %rd7575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5250}, %rd7575;
	}
	shf.r.wrap.b32 	%r5251, %r5250, %r5249, 14;
	shf.r.wrap.b32 	%r5252, %r5249, %r5250, 14;
	mov.b64 	%rd7605, {%r5252, %r5251};
	shf.r.wrap.b32 	%r5253, %r5250, %r5249, 18;
	shf.r.wrap.b32 	%r5254, %r5249, %r5250, 18;
	mov.b64 	%rd7606, {%r5254, %r5253};
	xor.b64  	%rd7607, %rd7605, %rd7606;
	shf.l.wrap.b32 	%r5255, %r5249, %r5250, 23;
	shf.l.wrap.b32 	%r5256, %r5250, %r5249, 23;
	mov.b64 	%rd7608, {%r5256, %r5255};
	xor.b64  	%rd7609, %rd7607, %rd7608;
	add.s64 	%rd7610, %rd7604, %rd7609;
	add.s64 	%rd7611, %rd7610, -8016688836872298968;
	add.s64 	%rd7612, %rd7611, %rd7475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5257,%dummy}, %rd7586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5258}, %rd7586;
	}
	shf.r.wrap.b32 	%r5259, %r5258, %r5257, 28;
	shf.r.wrap.b32 	%r5260, %r5257, %r5258, 28;
	mov.b64 	%rd7613, {%r5260, %r5259};
	shf.l.wrap.b32 	%r5261, %r5257, %r5258, 30;
	shf.l.wrap.b32 	%r5262, %r5258, %r5257, 30;
	mov.b64 	%rd7614, {%r5262, %r5261};
	xor.b64  	%rd7615, %rd7613, %rd7614;
	shf.l.wrap.b32 	%r5263, %r5257, %r5258, 25;
	shf.l.wrap.b32 	%r5264, %r5258, %r5257, 25;
	mov.b64 	%rd7616, {%r5264, %r5263};
	xor.b64  	%rd7617, %rd7615, %rd7616;
	and.b64  	%rd7618, %rd7586, %rd7549;
	or.b64  	%rd7619, %rd7586, %rd7549;
	and.b64  	%rd7620, %rd7619, %rd7512;
	or.b64  	%rd7621, %rd7620, %rd7618;
	add.s64 	%rd7622, %rd7621, %rd7617;
	add.s64 	%rd7623, %rd7622, %rd7611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5265,%dummy}, %rd7562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5266}, %rd7562;
	}
	shf.r.wrap.b32 	%r5267, %r5266, %r5265, 19;
	shf.r.wrap.b32 	%r5268, %r5265, %r5266, 19;
	mov.b64 	%rd7624, {%r5268, %r5267};
	shf.l.wrap.b32 	%r5269, %r5265, %r5266, 3;
	shf.l.wrap.b32 	%r5270, %r5266, %r5265, 3;
	mov.b64 	%rd7625, {%r5270, %r5269};
	xor.b64  	%rd7626, %rd7624, %rd7625;
	shr.u64 	%rd7627, %rd7562, 6;
	xor.b64  	%rd7628, %rd7626, %rd7627;
	shf.r.wrap.b32 	%r5271, %r4928, %r4927, 1;
	shf.r.wrap.b32 	%r5272, %r4927, %r4928, 1;
	mov.b64 	%rd7629, {%r5272, %r5271};
	shf.r.wrap.b32 	%r5273, %r4928, %r4927, 8;
	shf.r.wrap.b32 	%r5274, %r4927, %r4928, 8;
	mov.b64 	%rd7630, {%r5274, %r5273};
	xor.b64  	%rd7631, %rd7629, %rd7630;
	shr.u64 	%rd7632, %rd7081, 7;
	xor.b64  	%rd7633, %rd7631, %rd7632;
	add.s64 	%rd7634, %rd7628, %rd7044;
	add.s64 	%rd7635, %rd7634, %rd7377;
	add.s64 	%rd7636, %rd7635, %rd7633;
	add.s64 	%rd7637, %rd7636, %rd7501;
	xor.b64  	%rd7638, %rd7575, %rd7538;
	and.b64  	%rd7639, %rd7612, %rd7638;
	xor.b64  	%rd7640, %rd7639, %rd7538;
	add.s64 	%rd7641, %rd7637, %rd7640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5275,%dummy}, %rd7612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5276}, %rd7612;
	}
	shf.r.wrap.b32 	%r5277, %r5276, %r5275, 14;
	shf.r.wrap.b32 	%r5278, %r5275, %r5276, 14;
	mov.b64 	%rd7642, {%r5278, %r5277};
	shf.r.wrap.b32 	%r5279, %r5276, %r5275, 18;
	shf.r.wrap.b32 	%r5280, %r5275, %r5276, 18;
	mov.b64 	%rd7643, {%r5280, %r5279};
	xor.b64  	%rd7644, %rd7642, %rd7643;
	shf.l.wrap.b32 	%r5281, %r5275, %r5276, 23;
	shf.l.wrap.b32 	%r5282, %r5276, %r5275, 23;
	mov.b64 	%rd7645, {%r5282, %r5281};
	xor.b64  	%rd7646, %rd7644, %rd7645;
	add.s64 	%rd7647, %rd7641, %rd7646;
	add.s64 	%rd7648, %rd7647, -6606660893046293015;
	add.s64 	%rd7649, %rd7648, %rd7512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5283,%dummy}, %rd7623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5284}, %rd7623;
	}
	shf.r.wrap.b32 	%r5285, %r5284, %r5283, 28;
	shf.r.wrap.b32 	%r5286, %r5283, %r5284, 28;
	mov.b64 	%rd7650, {%r5286, %r5285};
	shf.l.wrap.b32 	%r5287, %r5283, %r5284, 30;
	shf.l.wrap.b32 	%r5288, %r5284, %r5283, 30;
	mov.b64 	%rd7651, {%r5288, %r5287};
	xor.b64  	%rd7652, %rd7650, %rd7651;
	shf.l.wrap.b32 	%r5289, %r5283, %r5284, 25;
	shf.l.wrap.b32 	%r5290, %r5284, %r5283, 25;
	mov.b64 	%rd7653, {%r5290, %r5289};
	xor.b64  	%rd7654, %rd7652, %rd7653;
	and.b64  	%rd7655, %rd7623, %rd7586;
	or.b64  	%rd7656, %rd7623, %rd7586;
	and.b64  	%rd7657, %rd7656, %rd7549;
	or.b64  	%rd7658, %rd7657, %rd7655;
	add.s64 	%rd7659, %rd7658, %rd7654;
	add.s64 	%rd7660, %rd7659, %rd7648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5291,%dummy}, %rd7599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5292}, %rd7599;
	}
	shf.r.wrap.b32 	%r5293, %r5292, %r5291, 19;
	shf.r.wrap.b32 	%r5294, %r5291, %r5292, 19;
	mov.b64 	%rd7661, {%r5294, %r5293};
	shf.l.wrap.b32 	%r5295, %r5291, %r5292, 3;
	shf.l.wrap.b32 	%r5296, %r5292, %r5291, 3;
	mov.b64 	%rd7662, {%r5296, %r5295};
	xor.b64  	%rd7663, %rd7661, %rd7662;
	shr.u64 	%rd7664, %rd7599, 6;
	xor.b64  	%rd7665, %rd7663, %rd7664;
	shf.r.wrap.b32 	%r5297, %r4954, %r4953, 1;
	shf.r.wrap.b32 	%r5298, %r4953, %r4954, 1;
	mov.b64 	%rd7666, {%r5298, %r5297};
	shf.r.wrap.b32 	%r5299, %r4954, %r4953, 8;
	shf.r.wrap.b32 	%r5300, %r4953, %r4954, 8;
	mov.b64 	%rd7667, {%r5300, %r5299};
	xor.b64  	%rd7668, %rd7666, %rd7667;
	shr.u64 	%rd7669, %rd7118, 7;
	xor.b64  	%rd7670, %rd7668, %rd7669;
	add.s64 	%rd7671, %rd7665, %rd7081;
	add.s64 	%rd7672, %rd7671, %rd7414;
	add.s64 	%rd7673, %rd7672, %rd7670;
	add.s64 	%rd7674, %rd7673, %rd7538;
	xor.b64  	%rd7675, %rd7612, %rd7575;
	and.b64  	%rd7676, %rd7649, %rd7675;
	xor.b64  	%rd7677, %rd7676, %rd7575;
	add.s64 	%rd7678, %rd7674, %rd7677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5301,%dummy}, %rd7649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5302}, %rd7649;
	}
	shf.r.wrap.b32 	%r5303, %r5302, %r5301, 14;
	shf.r.wrap.b32 	%r5304, %r5301, %r5302, 14;
	mov.b64 	%rd7679, {%r5304, %r5303};
	shf.r.wrap.b32 	%r5305, %r5302, %r5301, 18;
	shf.r.wrap.b32 	%r5306, %r5301, %r5302, 18;
	mov.b64 	%rd7680, {%r5306, %r5305};
	xor.b64  	%rd7681, %rd7679, %rd7680;
	shf.l.wrap.b32 	%r5307, %r5301, %r5302, 23;
	shf.l.wrap.b32 	%r5308, %r5302, %r5301, 23;
	mov.b64 	%rd7682, {%r5308, %r5307};
	xor.b64  	%rd7683, %rd7681, %rd7682;
	add.s64 	%rd7684, %rd7678, %rd7683;
	add.s64 	%rd7685, %rd7684, -4685533653050689259;
	add.s64 	%rd7686, %rd7685, %rd7549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5309,%dummy}, %rd7660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5310}, %rd7660;
	}
	shf.r.wrap.b32 	%r5311, %r5310, %r5309, 28;
	shf.r.wrap.b32 	%r5312, %r5309, %r5310, 28;
	mov.b64 	%rd7687, {%r5312, %r5311};
	shf.l.wrap.b32 	%r5313, %r5309, %r5310, 30;
	shf.l.wrap.b32 	%r5314, %r5310, %r5309, 30;
	mov.b64 	%rd7688, {%r5314, %r5313};
	xor.b64  	%rd7689, %rd7687, %rd7688;
	shf.l.wrap.b32 	%r5315, %r5309, %r5310, 25;
	shf.l.wrap.b32 	%r5316, %r5310, %r5309, 25;
	mov.b64 	%rd7690, {%r5316, %r5315};
	xor.b64  	%rd7691, %rd7689, %rd7690;
	and.b64  	%rd7692, %rd7660, %rd7623;
	or.b64  	%rd7693, %rd7660, %rd7623;
	and.b64  	%rd7694, %rd7693, %rd7586;
	or.b64  	%rd7695, %rd7694, %rd7692;
	add.s64 	%rd7696, %rd7695, %rd7691;
	add.s64 	%rd7697, %rd7696, %rd7685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5317,%dummy}, %rd7636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5318}, %rd7636;
	}
	shf.r.wrap.b32 	%r5319, %r5318, %r5317, 19;
	shf.r.wrap.b32 	%r5320, %r5317, %r5318, 19;
	mov.b64 	%rd7698, {%r5320, %r5319};
	shf.l.wrap.b32 	%r5321, %r5317, %r5318, 3;
	shf.l.wrap.b32 	%r5322, %r5318, %r5317, 3;
	mov.b64 	%rd7699, {%r5322, %r5321};
	xor.b64  	%rd7700, %rd7698, %rd7699;
	shr.u64 	%rd7701, %rd7636, 6;
	xor.b64  	%rd7702, %rd7700, %rd7701;
	shf.r.wrap.b32 	%r5323, %r4980, %r4979, 1;
	shf.r.wrap.b32 	%r5324, %r4979, %r4980, 1;
	mov.b64 	%rd7703, {%r5324, %r5323};
	shf.r.wrap.b32 	%r5325, %r4980, %r4979, 8;
	shf.r.wrap.b32 	%r5326, %r4979, %r4980, 8;
	mov.b64 	%rd7704, {%r5326, %r5325};
	xor.b64  	%rd7705, %rd7703, %rd7704;
	shr.u64 	%rd7706, %rd7155, 7;
	xor.b64  	%rd7707, %rd7705, %rd7706;
	add.s64 	%rd7708, %rd7702, %rd7118;
	add.s64 	%rd7709, %rd7708, %rd7451;
	add.s64 	%rd7710, %rd7709, %rd7707;
	add.s64 	%rd7711, %rd7710, %rd7575;
	xor.b64  	%rd7712, %rd7649, %rd7612;
	and.b64  	%rd7713, %rd7686, %rd7712;
	xor.b64  	%rd7714, %rd7713, %rd7612;
	add.s64 	%rd7715, %rd7711, %rd7714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5327,%dummy}, %rd7686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5328}, %rd7686;
	}
	shf.r.wrap.b32 	%r5329, %r5328, %r5327, 14;
	shf.r.wrap.b32 	%r5330, %r5327, %r5328, 14;
	mov.b64 	%rd7716, {%r5330, %r5329};
	shf.r.wrap.b32 	%r5331, %r5328, %r5327, 18;
	shf.r.wrap.b32 	%r5332, %r5327, %r5328, 18;
	mov.b64 	%rd7717, {%r5332, %r5331};
	xor.b64  	%rd7718, %rd7716, %rd7717;
	shf.l.wrap.b32 	%r5333, %r5327, %r5328, 23;
	shf.l.wrap.b32 	%r5334, %r5328, %r5327, 23;
	mov.b64 	%rd7719, {%r5334, %r5333};
	xor.b64  	%rd7720, %rd7718, %rd7719;
	add.s64 	%rd7721, %rd7715, %rd7720;
	add.s64 	%rd7722, %rd7721, -4147400797238176981;
	add.s64 	%rd7723, %rd7722, %rd7586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5335,%dummy}, %rd7697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5336}, %rd7697;
	}
	shf.r.wrap.b32 	%r5337, %r5336, %r5335, 28;
	shf.r.wrap.b32 	%r5338, %r5335, %r5336, 28;
	mov.b64 	%rd7724, {%r5338, %r5337};
	shf.l.wrap.b32 	%r5339, %r5335, %r5336, 30;
	shf.l.wrap.b32 	%r5340, %r5336, %r5335, 30;
	mov.b64 	%rd7725, {%r5340, %r5339};
	xor.b64  	%rd7726, %rd7724, %rd7725;
	shf.l.wrap.b32 	%r5341, %r5335, %r5336, 25;
	shf.l.wrap.b32 	%r5342, %r5336, %r5335, 25;
	mov.b64 	%rd7727, {%r5342, %r5341};
	xor.b64  	%rd7728, %rd7726, %rd7727;
	and.b64  	%rd7729, %rd7697, %rd7660;
	or.b64  	%rd7730, %rd7697, %rd7660;
	and.b64  	%rd7731, %rd7730, %rd7623;
	or.b64  	%rd7732, %rd7731, %rd7729;
	add.s64 	%rd7733, %rd7732, %rd7728;
	add.s64 	%rd7734, %rd7733, %rd7722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5343,%dummy}, %rd7673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5344}, %rd7673;
	}
	shf.r.wrap.b32 	%r5345, %r5344, %r5343, 19;
	shf.r.wrap.b32 	%r5346, %r5343, %r5344, 19;
	mov.b64 	%rd7735, {%r5346, %r5345};
	shf.l.wrap.b32 	%r5347, %r5343, %r5344, 3;
	shf.l.wrap.b32 	%r5348, %r5344, %r5343, 3;
	mov.b64 	%rd7736, {%r5348, %r5347};
	xor.b64  	%rd7737, %rd7735, %rd7736;
	shr.u64 	%rd7738, %rd7673, 6;
	xor.b64  	%rd7739, %rd7737, %rd7738;
	shf.r.wrap.b32 	%r5349, %r5006, %r5005, 1;
	shf.r.wrap.b32 	%r5350, %r5005, %r5006, 1;
	mov.b64 	%rd7740, {%r5350, %r5349};
	shf.r.wrap.b32 	%r5351, %r5006, %r5005, 8;
	shf.r.wrap.b32 	%r5352, %r5005, %r5006, 8;
	mov.b64 	%rd7741, {%r5352, %r5351};
	xor.b64  	%rd7742, %rd7740, %rd7741;
	shr.u64 	%rd7743, %rd7192, 7;
	xor.b64  	%rd7744, %rd7742, %rd7743;
	add.s64 	%rd7745, %rd7739, %rd7155;
	add.s64 	%rd7746, %rd7745, %rd7488;
	add.s64 	%rd7747, %rd7746, %rd7744;
	add.s64 	%rd7748, %rd7747, %rd7612;
	xor.b64  	%rd7749, %rd7686, %rd7649;
	and.b64  	%rd7750, %rd7723, %rd7749;
	xor.b64  	%rd7751, %rd7750, %rd7649;
	add.s64 	%rd7752, %rd7748, %rd7751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5353,%dummy}, %rd7723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5354}, %rd7723;
	}
	shf.r.wrap.b32 	%r5355, %r5354, %r5353, 14;
	shf.r.wrap.b32 	%r5356, %r5353, %r5354, 14;
	mov.b64 	%rd7753, {%r5356, %r5355};
	shf.r.wrap.b32 	%r5357, %r5354, %r5353, 18;
	shf.r.wrap.b32 	%r5358, %r5353, %r5354, 18;
	mov.b64 	%rd7754, {%r5358, %r5357};
	xor.b64  	%rd7755, %rd7753, %rd7754;
	shf.l.wrap.b32 	%r5359, %r5353, %r5354, 23;
	shf.l.wrap.b32 	%r5360, %r5354, %r5353, 23;
	mov.b64 	%rd7756, {%r5360, %r5359};
	xor.b64  	%rd7757, %rd7755, %rd7756;
	add.s64 	%rd7758, %rd7752, %rd7757;
	add.s64 	%rd7759, %rd7758, -3880063495543823972;
	add.s64 	%rd7760, %rd7759, %rd7623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5361,%dummy}, %rd7734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5362}, %rd7734;
	}
	shf.r.wrap.b32 	%r5363, %r5362, %r5361, 28;
	shf.r.wrap.b32 	%r5364, %r5361, %r5362, 28;
	mov.b64 	%rd7761, {%r5364, %r5363};
	shf.l.wrap.b32 	%r5365, %r5361, %r5362, 30;
	shf.l.wrap.b32 	%r5366, %r5362, %r5361, 30;
	mov.b64 	%rd7762, {%r5366, %r5365};
	xor.b64  	%rd7763, %rd7761, %rd7762;
	shf.l.wrap.b32 	%r5367, %r5361, %r5362, 25;
	shf.l.wrap.b32 	%r5368, %r5362, %r5361, 25;
	mov.b64 	%rd7764, {%r5368, %r5367};
	xor.b64  	%rd7765, %rd7763, %rd7764;
	and.b64  	%rd7766, %rd7734, %rd7697;
	or.b64  	%rd7767, %rd7734, %rd7697;
	and.b64  	%rd7768, %rd7767, %rd7660;
	or.b64  	%rd7769, %rd7768, %rd7766;
	add.s64 	%rd7770, %rd7769, %rd7765;
	add.s64 	%rd7771, %rd7770, %rd7759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5369,%dummy}, %rd7710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5370}, %rd7710;
	}
	shf.r.wrap.b32 	%r5371, %r5370, %r5369, 19;
	shf.r.wrap.b32 	%r5372, %r5369, %r5370, 19;
	mov.b64 	%rd7772, {%r5372, %r5371};
	shf.l.wrap.b32 	%r5373, %r5369, %r5370, 3;
	shf.l.wrap.b32 	%r5374, %r5370, %r5369, 3;
	mov.b64 	%rd7773, {%r5374, %r5373};
	xor.b64  	%rd7774, %rd7772, %rd7773;
	shr.u64 	%rd7775, %rd7710, 6;
	xor.b64  	%rd7776, %rd7774, %rd7775;
	shf.r.wrap.b32 	%r5375, %r5032, %r5031, 1;
	shf.r.wrap.b32 	%r5376, %r5031, %r5032, 1;
	mov.b64 	%rd7777, {%r5376, %r5375};
	shf.r.wrap.b32 	%r5377, %r5032, %r5031, 8;
	shf.r.wrap.b32 	%r5378, %r5031, %r5032, 8;
	mov.b64 	%rd7778, {%r5378, %r5377};
	xor.b64  	%rd7779, %rd7777, %rd7778;
	shr.u64 	%rd7780, %rd7229, 7;
	xor.b64  	%rd7781, %rd7779, %rd7780;
	add.s64 	%rd7782, %rd7776, %rd7192;
	add.s64 	%rd7783, %rd7782, %rd7525;
	add.s64 	%rd7784, %rd7783, %rd7781;
	add.s64 	%rd7785, %rd7784, %rd7649;
	xor.b64  	%rd7786, %rd7723, %rd7686;
	and.b64  	%rd7787, %rd7760, %rd7786;
	xor.b64  	%rd7788, %rd7787, %rd7686;
	add.s64 	%rd7789, %rd7785, %rd7788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5379,%dummy}, %rd7760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5380}, %rd7760;
	}
	shf.r.wrap.b32 	%r5381, %r5380, %r5379, 14;
	shf.r.wrap.b32 	%r5382, %r5379, %r5380, 14;
	mov.b64 	%rd7790, {%r5382, %r5381};
	shf.r.wrap.b32 	%r5383, %r5380, %r5379, 18;
	shf.r.wrap.b32 	%r5384, %r5379, %r5380, 18;
	mov.b64 	%rd7791, {%r5384, %r5383};
	xor.b64  	%rd7792, %rd7790, %rd7791;
	shf.l.wrap.b32 	%r5385, %r5379, %r5380, 23;
	shf.l.wrap.b32 	%r5386, %r5380, %r5379, 23;
	mov.b64 	%rd7793, {%r5386, %r5385};
	xor.b64  	%rd7794, %rd7792, %rd7793;
	add.s64 	%rd7795, %rd7789, %rd7794;
	add.s64 	%rd7796, %rd7795, -3348786107499101689;
	add.s64 	%rd7797, %rd7796, %rd7660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5387,%dummy}, %rd7771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5388}, %rd7771;
	}
	shf.r.wrap.b32 	%r5389, %r5388, %r5387, 28;
	shf.r.wrap.b32 	%r5390, %r5387, %r5388, 28;
	mov.b64 	%rd7798, {%r5390, %r5389};
	shf.l.wrap.b32 	%r5391, %r5387, %r5388, 30;
	shf.l.wrap.b32 	%r5392, %r5388, %r5387, 30;
	mov.b64 	%rd7799, {%r5392, %r5391};
	xor.b64  	%rd7800, %rd7798, %rd7799;
	shf.l.wrap.b32 	%r5393, %r5387, %r5388, 25;
	shf.l.wrap.b32 	%r5394, %r5388, %r5387, 25;
	mov.b64 	%rd7801, {%r5394, %r5393};
	xor.b64  	%rd7802, %rd7800, %rd7801;
	and.b64  	%rd7803, %rd7771, %rd7734;
	or.b64  	%rd7804, %rd7771, %rd7734;
	and.b64  	%rd7805, %rd7804, %rd7697;
	or.b64  	%rd7806, %rd7805, %rd7803;
	add.s64 	%rd7807, %rd7806, %rd7802;
	add.s64 	%rd7808, %rd7807, %rd7796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5395,%dummy}, %rd7747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5396}, %rd7747;
	}
	shf.r.wrap.b32 	%r5397, %r5396, %r5395, 19;
	shf.r.wrap.b32 	%r5398, %r5395, %r5396, 19;
	mov.b64 	%rd7809, {%r5398, %r5397};
	shf.l.wrap.b32 	%r5399, %r5395, %r5396, 3;
	shf.l.wrap.b32 	%r5400, %r5396, %r5395, 3;
	mov.b64 	%rd7810, {%r5400, %r5399};
	xor.b64  	%rd7811, %rd7809, %rd7810;
	shr.u64 	%rd7812, %rd7747, 6;
	xor.b64  	%rd7813, %rd7811, %rd7812;
	shf.r.wrap.b32 	%r5401, %r5058, %r5057, 1;
	shf.r.wrap.b32 	%r5402, %r5057, %r5058, 1;
	mov.b64 	%rd7814, {%r5402, %r5401};
	shf.r.wrap.b32 	%r5403, %r5058, %r5057, 8;
	shf.r.wrap.b32 	%r5404, %r5057, %r5058, 8;
	mov.b64 	%rd7815, {%r5404, %r5403};
	xor.b64  	%rd7816, %rd7814, %rd7815;
	shr.u64 	%rd7817, %rd7266, 7;
	xor.b64  	%rd7818, %rd7816, %rd7817;
	add.s64 	%rd7819, %rd7813, %rd7229;
	add.s64 	%rd7820, %rd7819, %rd7562;
	add.s64 	%rd7821, %rd7820, %rd7818;
	add.s64 	%rd7822, %rd7821, %rd7686;
	xor.b64  	%rd7823, %rd7760, %rd7723;
	and.b64  	%rd7824, %rd7797, %rd7823;
	xor.b64  	%rd7825, %rd7824, %rd7723;
	add.s64 	%rd7826, %rd7822, %rd7825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5405,%dummy}, %rd7797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5406}, %rd7797;
	}
	shf.r.wrap.b32 	%r5407, %r5406, %r5405, 14;
	shf.r.wrap.b32 	%r5408, %r5405, %r5406, 14;
	mov.b64 	%rd7827, {%r5408, %r5407};
	shf.r.wrap.b32 	%r5409, %r5406, %r5405, 18;
	shf.r.wrap.b32 	%r5410, %r5405, %r5406, 18;
	mov.b64 	%rd7828, {%r5410, %r5409};
	xor.b64  	%rd7829, %rd7827, %rd7828;
	shf.l.wrap.b32 	%r5411, %r5405, %r5406, 23;
	shf.l.wrap.b32 	%r5412, %r5406, %r5405, 23;
	mov.b64 	%rd7830, {%r5412, %r5411};
	xor.b64  	%rd7831, %rd7829, %rd7830;
	add.s64 	%rd7832, %rd7826, %rd7831;
	add.s64 	%rd7833, %rd7832, -1523767162380948706;
	add.s64 	%rd7834, %rd7833, %rd7697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5413,%dummy}, %rd7808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5414}, %rd7808;
	}
	shf.r.wrap.b32 	%r5415, %r5414, %r5413, 28;
	shf.r.wrap.b32 	%r5416, %r5413, %r5414, 28;
	mov.b64 	%rd7835, {%r5416, %r5415};
	shf.l.wrap.b32 	%r5417, %r5413, %r5414, 30;
	shf.l.wrap.b32 	%r5418, %r5414, %r5413, 30;
	mov.b64 	%rd7836, {%r5418, %r5417};
	xor.b64  	%rd7837, %rd7835, %rd7836;
	shf.l.wrap.b32 	%r5419, %r5413, %r5414, 25;
	shf.l.wrap.b32 	%r5420, %r5414, %r5413, 25;
	mov.b64 	%rd7838, {%r5420, %r5419};
	xor.b64  	%rd7839, %rd7837, %rd7838;
	and.b64  	%rd7840, %rd7808, %rd7771;
	or.b64  	%rd7841, %rd7808, %rd7771;
	and.b64  	%rd7842, %rd7841, %rd7734;
	or.b64  	%rd7843, %rd7842, %rd7840;
	add.s64 	%rd7844, %rd7843, %rd7839;
	add.s64 	%rd7845, %rd7844, %rd7833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5421,%dummy}, %rd7784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5422}, %rd7784;
	}
	shf.r.wrap.b32 	%r5423, %r5422, %r5421, 19;
	shf.r.wrap.b32 	%r5424, %r5421, %r5422, 19;
	mov.b64 	%rd7846, {%r5424, %r5423};
	shf.l.wrap.b32 	%r5425, %r5421, %r5422, 3;
	shf.l.wrap.b32 	%r5426, %r5422, %r5421, 3;
	mov.b64 	%rd7847, {%r5426, %r5425};
	xor.b64  	%rd7848, %rd7846, %rd7847;
	shr.u64 	%rd7849, %rd7784, 6;
	xor.b64  	%rd7850, %rd7848, %rd7849;
	shf.r.wrap.b32 	%r5427, %r5084, %r5083, 1;
	shf.r.wrap.b32 	%r5428, %r5083, %r5084, 1;
	mov.b64 	%rd7851, {%r5428, %r5427};
	shf.r.wrap.b32 	%r5429, %r5084, %r5083, 8;
	shf.r.wrap.b32 	%r5430, %r5083, %r5084, 8;
	mov.b64 	%rd7852, {%r5430, %r5429};
	xor.b64  	%rd7853, %rd7851, %rd7852;
	shr.u64 	%rd7854, %rd7303, 7;
	xor.b64  	%rd7855, %rd7853, %rd7854;
	add.s64 	%rd7856, %rd7850, %rd7266;
	add.s64 	%rd7857, %rd7856, %rd7599;
	add.s64 	%rd7858, %rd7857, %rd7855;
	add.s64 	%rd7859, %rd7858, %rd7723;
	xor.b64  	%rd7860, %rd7797, %rd7760;
	and.b64  	%rd7861, %rd7834, %rd7860;
	xor.b64  	%rd7862, %rd7861, %rd7760;
	add.s64 	%rd7863, %rd7859, %rd7862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5431,%dummy}, %rd7834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5432}, %rd7834;
	}
	shf.r.wrap.b32 	%r5433, %r5432, %r5431, 14;
	shf.r.wrap.b32 	%r5434, %r5431, %r5432, 14;
	mov.b64 	%rd7864, {%r5434, %r5433};
	shf.r.wrap.b32 	%r5435, %r5432, %r5431, 18;
	shf.r.wrap.b32 	%r5436, %r5431, %r5432, 18;
	mov.b64 	%rd7865, {%r5436, %r5435};
	xor.b64  	%rd7866, %rd7864, %rd7865;
	shf.l.wrap.b32 	%r5437, %r5431, %r5432, 23;
	shf.l.wrap.b32 	%r5438, %r5432, %r5431, 23;
	mov.b64 	%rd7867, {%r5438, %r5437};
	xor.b64  	%rd7868, %rd7866, %rd7867;
	add.s64 	%rd7869, %rd7863, %rd7868;
	add.s64 	%rd7870, %rd7869, -757361751448694408;
	add.s64 	%rd7871, %rd7870, %rd7734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5439,%dummy}, %rd7845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5440}, %rd7845;
	}
	shf.r.wrap.b32 	%r5441, %r5440, %r5439, 28;
	shf.r.wrap.b32 	%r5442, %r5439, %r5440, 28;
	mov.b64 	%rd7872, {%r5442, %r5441};
	shf.l.wrap.b32 	%r5443, %r5439, %r5440, 30;
	shf.l.wrap.b32 	%r5444, %r5440, %r5439, 30;
	mov.b64 	%rd7873, {%r5444, %r5443};
	xor.b64  	%rd7874, %rd7872, %rd7873;
	shf.l.wrap.b32 	%r5445, %r5439, %r5440, 25;
	shf.l.wrap.b32 	%r5446, %r5440, %r5439, 25;
	mov.b64 	%rd7875, {%r5446, %r5445};
	xor.b64  	%rd7876, %rd7874, %rd7875;
	and.b64  	%rd7877, %rd7845, %rd7808;
	or.b64  	%rd7878, %rd7845, %rd7808;
	and.b64  	%rd7879, %rd7878, %rd7771;
	or.b64  	%rd7880, %rd7879, %rd7877;
	add.s64 	%rd7881, %rd7880, %rd7876;
	add.s64 	%rd7882, %rd7881, %rd7870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5447,%dummy}, %rd7821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5448}, %rd7821;
	}
	shf.r.wrap.b32 	%r5449, %r5448, %r5447, 19;
	shf.r.wrap.b32 	%r5450, %r5447, %r5448, 19;
	mov.b64 	%rd7883, {%r5450, %r5449};
	shf.l.wrap.b32 	%r5451, %r5447, %r5448, 3;
	shf.l.wrap.b32 	%r5452, %r5448, %r5447, 3;
	mov.b64 	%rd7884, {%r5452, %r5451};
	xor.b64  	%rd7885, %rd7883, %rd7884;
	shr.u64 	%rd7886, %rd7821, 6;
	xor.b64  	%rd7887, %rd7885, %rd7886;
	shf.r.wrap.b32 	%r5453, %r5110, %r5109, 1;
	shf.r.wrap.b32 	%r5454, %r5109, %r5110, 1;
	mov.b64 	%rd7888, {%r5454, %r5453};
	shf.r.wrap.b32 	%r5455, %r5110, %r5109, 8;
	shf.r.wrap.b32 	%r5456, %r5109, %r5110, 8;
	mov.b64 	%rd7889, {%r5456, %r5455};
	xor.b64  	%rd7890, %rd7888, %rd7889;
	shr.u64 	%rd7891, %rd7340, 7;
	xor.b64  	%rd7892, %rd7890, %rd7891;
	add.s64 	%rd7893, %rd7887, %rd7303;
	add.s64 	%rd7894, %rd7893, %rd7636;
	add.s64 	%rd7895, %rd7894, %rd7892;
	add.s64 	%rd7896, %rd7895, %rd7760;
	xor.b64  	%rd7897, %rd7834, %rd7797;
	and.b64  	%rd7898, %rd7871, %rd7897;
	xor.b64  	%rd7899, %rd7898, %rd7797;
	add.s64 	%rd7900, %rd7896, %rd7899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5457,%dummy}, %rd7871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5458}, %rd7871;
	}
	shf.r.wrap.b32 	%r5459, %r5458, %r5457, 14;
	shf.r.wrap.b32 	%r5460, %r5457, %r5458, 14;
	mov.b64 	%rd7901, {%r5460, %r5459};
	shf.r.wrap.b32 	%r5461, %r5458, %r5457, 18;
	shf.r.wrap.b32 	%r5462, %r5457, %r5458, 18;
	mov.b64 	%rd7902, {%r5462, %r5461};
	xor.b64  	%rd7903, %rd7901, %rd7902;
	shf.l.wrap.b32 	%r5463, %r5457, %r5458, 23;
	shf.l.wrap.b32 	%r5464, %r5458, %r5457, 23;
	mov.b64 	%rd7904, {%r5464, %r5463};
	xor.b64  	%rd7905, %rd7903, %rd7904;
	add.s64 	%rd7906, %rd7900, %rd7905;
	add.s64 	%rd7907, %rd7906, 500013540394364858;
	add.s64 	%rd7908, %rd7907, %rd7771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5465,%dummy}, %rd7882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5466}, %rd7882;
	}
	shf.r.wrap.b32 	%r5467, %r5466, %r5465, 28;
	shf.r.wrap.b32 	%r5468, %r5465, %r5466, 28;
	mov.b64 	%rd7909, {%r5468, %r5467};
	shf.l.wrap.b32 	%r5469, %r5465, %r5466, 30;
	shf.l.wrap.b32 	%r5470, %r5466, %r5465, 30;
	mov.b64 	%rd7910, {%r5470, %r5469};
	xor.b64  	%rd7911, %rd7909, %rd7910;
	shf.l.wrap.b32 	%r5471, %r5465, %r5466, 25;
	shf.l.wrap.b32 	%r5472, %r5466, %r5465, 25;
	mov.b64 	%rd7912, {%r5472, %r5471};
	xor.b64  	%rd7913, %rd7911, %rd7912;
	and.b64  	%rd7914, %rd7882, %rd7845;
	or.b64  	%rd7915, %rd7882, %rd7845;
	and.b64  	%rd7916, %rd7915, %rd7808;
	or.b64  	%rd7917, %rd7916, %rd7914;
	add.s64 	%rd7918, %rd7917, %rd7913;
	add.s64 	%rd7919, %rd7918, %rd7907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5473,%dummy}, %rd7858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5474}, %rd7858;
	}
	shf.r.wrap.b32 	%r5475, %r5474, %r5473, 19;
	shf.r.wrap.b32 	%r5476, %r5473, %r5474, 19;
	mov.b64 	%rd7920, {%r5476, %r5475};
	shf.l.wrap.b32 	%r5477, %r5473, %r5474, 3;
	shf.l.wrap.b32 	%r5478, %r5474, %r5473, 3;
	mov.b64 	%rd7921, {%r5478, %r5477};
	xor.b64  	%rd7922, %rd7920, %rd7921;
	shr.u64 	%rd7923, %rd7858, 6;
	xor.b64  	%rd7924, %rd7922, %rd7923;
	shf.r.wrap.b32 	%r5479, %r5136, %r5135, 1;
	shf.r.wrap.b32 	%r5480, %r5135, %r5136, 1;
	mov.b64 	%rd7925, {%r5480, %r5479};
	shf.r.wrap.b32 	%r5481, %r5136, %r5135, 8;
	shf.r.wrap.b32 	%r5482, %r5135, %r5136, 8;
	mov.b64 	%rd7926, {%r5482, %r5481};
	xor.b64  	%rd7927, %rd7925, %rd7926;
	shr.u64 	%rd7928, %rd7377, 7;
	xor.b64  	%rd7929, %rd7927, %rd7928;
	add.s64 	%rd7930, %rd7924, %rd7340;
	add.s64 	%rd7931, %rd7930, %rd7673;
	add.s64 	%rd7932, %rd7931, %rd7929;
	add.s64 	%rd7933, %rd7932, %rd7797;
	xor.b64  	%rd7934, %rd7871, %rd7834;
	and.b64  	%rd7935, %rd7908, %rd7934;
	xor.b64  	%rd7936, %rd7935, %rd7834;
	add.s64 	%rd7937, %rd7933, %rd7936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5483,%dummy}, %rd7908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5484}, %rd7908;
	}
	shf.r.wrap.b32 	%r5485, %r5484, %r5483, 14;
	shf.r.wrap.b32 	%r5486, %r5483, %r5484, 14;
	mov.b64 	%rd7938, {%r5486, %r5485};
	shf.r.wrap.b32 	%r5487, %r5484, %r5483, 18;
	shf.r.wrap.b32 	%r5488, %r5483, %r5484, 18;
	mov.b64 	%rd7939, {%r5488, %r5487};
	xor.b64  	%rd7940, %rd7938, %rd7939;
	shf.l.wrap.b32 	%r5489, %r5483, %r5484, 23;
	shf.l.wrap.b32 	%r5490, %r5484, %r5483, 23;
	mov.b64 	%rd7941, {%r5490, %r5489};
	xor.b64  	%rd7942, %rd7940, %rd7941;
	add.s64 	%rd7943, %rd7937, %rd7942;
	add.s64 	%rd7944, %rd7943, 748580250866718886;
	add.s64 	%rd7945, %rd7944, %rd7808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5491,%dummy}, %rd7919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5492}, %rd7919;
	}
	shf.r.wrap.b32 	%r5493, %r5492, %r5491, 28;
	shf.r.wrap.b32 	%r5494, %r5491, %r5492, 28;
	mov.b64 	%rd7946, {%r5494, %r5493};
	shf.l.wrap.b32 	%r5495, %r5491, %r5492, 30;
	shf.l.wrap.b32 	%r5496, %r5492, %r5491, 30;
	mov.b64 	%rd7947, {%r5496, %r5495};
	xor.b64  	%rd7948, %rd7946, %rd7947;
	shf.l.wrap.b32 	%r5497, %r5491, %r5492, 25;
	shf.l.wrap.b32 	%r5498, %r5492, %r5491, 25;
	mov.b64 	%rd7949, {%r5498, %r5497};
	xor.b64  	%rd7950, %rd7948, %rd7949;
	and.b64  	%rd7951, %rd7919, %rd7882;
	or.b64  	%rd7952, %rd7919, %rd7882;
	and.b64  	%rd7953, %rd7952, %rd7845;
	or.b64  	%rd7954, %rd7953, %rd7951;
	add.s64 	%rd7955, %rd7954, %rd7950;
	add.s64 	%rd7956, %rd7955, %rd7944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5499,%dummy}, %rd7895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5500}, %rd7895;
	}
	shf.r.wrap.b32 	%r5501, %r5500, %r5499, 19;
	shf.r.wrap.b32 	%r5502, %r5499, %r5500, 19;
	mov.b64 	%rd7957, {%r5502, %r5501};
	shf.l.wrap.b32 	%r5503, %r5499, %r5500, 3;
	shf.l.wrap.b32 	%r5504, %r5500, %r5499, 3;
	mov.b64 	%rd7958, {%r5504, %r5503};
	xor.b64  	%rd7959, %rd7957, %rd7958;
	shr.u64 	%rd7960, %rd7895, 6;
	xor.b64  	%rd7961, %rd7959, %rd7960;
	shf.r.wrap.b32 	%r5505, %r5162, %r5161, 1;
	shf.r.wrap.b32 	%r5506, %r5161, %r5162, 1;
	mov.b64 	%rd7962, {%r5506, %r5505};
	shf.r.wrap.b32 	%r5507, %r5162, %r5161, 8;
	shf.r.wrap.b32 	%r5508, %r5161, %r5162, 8;
	mov.b64 	%rd7963, {%r5508, %r5507};
	xor.b64  	%rd7964, %rd7962, %rd7963;
	shr.u64 	%rd7965, %rd7414, 7;
	xor.b64  	%rd7966, %rd7964, %rd7965;
	add.s64 	%rd7967, %rd7961, %rd7377;
	add.s64 	%rd7968, %rd7967, %rd7710;
	add.s64 	%rd7969, %rd7968, %rd7966;
	add.s64 	%rd7970, %rd7969, %rd7834;
	xor.b64  	%rd7971, %rd7908, %rd7871;
	and.b64  	%rd7972, %rd7945, %rd7971;
	xor.b64  	%rd7973, %rd7972, %rd7871;
	add.s64 	%rd7974, %rd7970, %rd7973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5509,%dummy}, %rd7945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5510}, %rd7945;
	}
	shf.r.wrap.b32 	%r5511, %r5510, %r5509, 14;
	shf.r.wrap.b32 	%r5512, %r5509, %r5510, 14;
	mov.b64 	%rd7975, {%r5512, %r5511};
	shf.r.wrap.b32 	%r5513, %r5510, %r5509, 18;
	shf.r.wrap.b32 	%r5514, %r5509, %r5510, 18;
	mov.b64 	%rd7976, {%r5514, %r5513};
	xor.b64  	%rd7977, %rd7975, %rd7976;
	shf.l.wrap.b32 	%r5515, %r5509, %r5510, 23;
	shf.l.wrap.b32 	%r5516, %r5510, %r5509, 23;
	mov.b64 	%rd7978, {%r5516, %r5515};
	xor.b64  	%rd7979, %rd7977, %rd7978;
	add.s64 	%rd7980, %rd7974, %rd7979;
	add.s64 	%rd7981, %rd7980, 1242879168328830382;
	add.s64 	%rd7982, %rd7981, %rd7845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd7956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd7956;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 28;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 28;
	mov.b64 	%rd7983, {%r5520, %r5519};
	shf.l.wrap.b32 	%r5521, %r5517, %r5518, 30;
	shf.l.wrap.b32 	%r5522, %r5518, %r5517, 30;
	mov.b64 	%rd7984, {%r5522, %r5521};
	xor.b64  	%rd7985, %rd7983, %rd7984;
	shf.l.wrap.b32 	%r5523, %r5517, %r5518, 25;
	shf.l.wrap.b32 	%r5524, %r5518, %r5517, 25;
	mov.b64 	%rd7986, {%r5524, %r5523};
	xor.b64  	%rd7987, %rd7985, %rd7986;
	and.b64  	%rd7988, %rd7956, %rd7919;
	or.b64  	%rd7989, %rd7956, %rd7919;
	and.b64  	%rd7990, %rd7989, %rd7882;
	or.b64  	%rd7991, %rd7990, %rd7988;
	add.s64 	%rd7992, %rd7991, %rd7987;
	add.s64 	%rd7993, %rd7992, %rd7981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5525,%dummy}, %rd7932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5526}, %rd7932;
	}
	shf.r.wrap.b32 	%r5527, %r5526, %r5525, 19;
	shf.r.wrap.b32 	%r5528, %r5525, %r5526, 19;
	mov.b64 	%rd7994, {%r5528, %r5527};
	shf.l.wrap.b32 	%r5529, %r5525, %r5526, 3;
	shf.l.wrap.b32 	%r5530, %r5526, %r5525, 3;
	mov.b64 	%rd7995, {%r5530, %r5529};
	xor.b64  	%rd7996, %rd7994, %rd7995;
	shr.u64 	%rd7997, %rd7932, 6;
	xor.b64  	%rd7998, %rd7996, %rd7997;
	shf.r.wrap.b32 	%r5531, %r5188, %r5187, 1;
	shf.r.wrap.b32 	%r5532, %r5187, %r5188, 1;
	mov.b64 	%rd7999, {%r5532, %r5531};
	shf.r.wrap.b32 	%r5533, %r5188, %r5187, 8;
	shf.r.wrap.b32 	%r5534, %r5187, %r5188, 8;
	mov.b64 	%rd8000, {%r5534, %r5533};
	xor.b64  	%rd8001, %rd7999, %rd8000;
	shr.u64 	%rd8002, %rd7451, 7;
	xor.b64  	%rd8003, %rd8001, %rd8002;
	add.s64 	%rd8004, %rd7998, %rd7414;
	add.s64 	%rd8005, %rd8004, %rd7747;
	add.s64 	%rd8006, %rd8005, %rd8003;
	add.s64 	%rd8007, %rd8006, %rd7871;
	xor.b64  	%rd8008, %rd7945, %rd7908;
	and.b64  	%rd8009, %rd7982, %rd8008;
	xor.b64  	%rd8010, %rd8009, %rd7908;
	add.s64 	%rd8011, %rd8007, %rd8010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5535,%dummy}, %rd7982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5536}, %rd7982;
	}
	shf.r.wrap.b32 	%r5537, %r5536, %r5535, 14;
	shf.r.wrap.b32 	%r5538, %r5535, %r5536, 14;
	mov.b64 	%rd8012, {%r5538, %r5537};
	shf.r.wrap.b32 	%r5539, %r5536, %r5535, 18;
	shf.r.wrap.b32 	%r5540, %r5535, %r5536, 18;
	mov.b64 	%rd8013, {%r5540, %r5539};
	xor.b64  	%rd8014, %rd8012, %rd8013;
	shf.l.wrap.b32 	%r5541, %r5535, %r5536, 23;
	shf.l.wrap.b32 	%r5542, %r5536, %r5535, 23;
	mov.b64 	%rd8015, {%r5542, %r5541};
	xor.b64  	%rd8016, %rd8014, %rd8015;
	add.s64 	%rd8017, %rd8011, %rd8016;
	add.s64 	%rd8018, %rd8017, 1977374033974150939;
	add.s64 	%rd8019, %rd8018, %rd7882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5543,%dummy}, %rd7993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5544}, %rd7993;
	}
	shf.r.wrap.b32 	%r5545, %r5544, %r5543, 28;
	shf.r.wrap.b32 	%r5546, %r5543, %r5544, 28;
	mov.b64 	%rd8020, {%r5546, %r5545};
	shf.l.wrap.b32 	%r5547, %r5543, %r5544, 30;
	shf.l.wrap.b32 	%r5548, %r5544, %r5543, 30;
	mov.b64 	%rd8021, {%r5548, %r5547};
	xor.b64  	%rd8022, %rd8020, %rd8021;
	shf.l.wrap.b32 	%r5549, %r5543, %r5544, 25;
	shf.l.wrap.b32 	%r5550, %r5544, %r5543, 25;
	mov.b64 	%rd8023, {%r5550, %r5549};
	xor.b64  	%rd8024, %rd8022, %rd8023;
	and.b64  	%rd8025, %rd7993, %rd7956;
	or.b64  	%rd8026, %rd7993, %rd7956;
	and.b64  	%rd8027, %rd8026, %rd7919;
	or.b64  	%rd8028, %rd8027, %rd8025;
	add.s64 	%rd8029, %rd8028, %rd8024;
	add.s64 	%rd8030, %rd8029, %rd8018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5551,%dummy}, %rd7969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5552}, %rd7969;
	}
	shf.r.wrap.b32 	%r5553, %r5552, %r5551, 19;
	shf.r.wrap.b32 	%r5554, %r5551, %r5552, 19;
	mov.b64 	%rd8031, {%r5554, %r5553};
	shf.l.wrap.b32 	%r5555, %r5551, %r5552, 3;
	shf.l.wrap.b32 	%r5556, %r5552, %r5551, 3;
	mov.b64 	%rd8032, {%r5556, %r5555};
	xor.b64  	%rd8033, %rd8031, %rd8032;
	shr.u64 	%rd8034, %rd7969, 6;
	xor.b64  	%rd8035, %rd8033, %rd8034;
	shf.r.wrap.b32 	%r5557, %r5214, %r5213, 1;
	shf.r.wrap.b32 	%r5558, %r5213, %r5214, 1;
	mov.b64 	%rd8036, {%r5558, %r5557};
	shf.r.wrap.b32 	%r5559, %r5214, %r5213, 8;
	shf.r.wrap.b32 	%r5560, %r5213, %r5214, 8;
	mov.b64 	%rd8037, {%r5560, %r5559};
	xor.b64  	%rd8038, %rd8036, %rd8037;
	shr.u64 	%rd8039, %rd7488, 7;
	xor.b64  	%rd8040, %rd8038, %rd8039;
	add.s64 	%rd8041, %rd8035, %rd7451;
	add.s64 	%rd8042, %rd8041, %rd7784;
	add.s64 	%rd8043, %rd8042, %rd8040;
	add.s64 	%rd8044, %rd8043, %rd7908;
	xor.b64  	%rd8045, %rd7982, %rd7945;
	and.b64  	%rd8046, %rd8019, %rd8045;
	xor.b64  	%rd8047, %rd8046, %rd7945;
	add.s64 	%rd8048, %rd8044, %rd8047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5561,%dummy}, %rd8019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5562}, %rd8019;
	}
	shf.r.wrap.b32 	%r5563, %r5562, %r5561, 14;
	shf.r.wrap.b32 	%r5564, %r5561, %r5562, 14;
	mov.b64 	%rd8049, {%r5564, %r5563};
	shf.r.wrap.b32 	%r5565, %r5562, %r5561, 18;
	shf.r.wrap.b32 	%r5566, %r5561, %r5562, 18;
	mov.b64 	%rd8050, {%r5566, %r5565};
	xor.b64  	%rd8051, %rd8049, %rd8050;
	shf.l.wrap.b32 	%r5567, %r5561, %r5562, 23;
	shf.l.wrap.b32 	%r5568, %r5562, %r5561, 23;
	mov.b64 	%rd8052, {%r5568, %r5567};
	xor.b64  	%rd8053, %rd8051, %rd8052;
	add.s64 	%rd8054, %rd8048, %rd8053;
	add.s64 	%rd8055, %rd8054, 2944078676154940804;
	add.s64 	%rd8056, %rd8055, %rd7919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5569,%dummy}, %rd8030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5570}, %rd8030;
	}
	shf.r.wrap.b32 	%r5571, %r5570, %r5569, 28;
	shf.r.wrap.b32 	%r5572, %r5569, %r5570, 28;
	mov.b64 	%rd8057, {%r5572, %r5571};
	shf.l.wrap.b32 	%r5573, %r5569, %r5570, 30;
	shf.l.wrap.b32 	%r5574, %r5570, %r5569, 30;
	mov.b64 	%rd8058, {%r5574, %r5573};
	xor.b64  	%rd8059, %rd8057, %rd8058;
	shf.l.wrap.b32 	%r5575, %r5569, %r5570, 25;
	shf.l.wrap.b32 	%r5576, %r5570, %r5569, 25;
	mov.b64 	%rd8060, {%r5576, %r5575};
	xor.b64  	%rd8061, %rd8059, %rd8060;
	and.b64  	%rd8062, %rd8030, %rd7993;
	or.b64  	%rd8063, %rd8030, %rd7993;
	and.b64  	%rd8064, %rd8063, %rd7956;
	or.b64  	%rd8065, %rd8064, %rd8062;
	add.s64 	%rd8066, %rd8065, %rd8061;
	add.s64 	%rd8067, %rd8066, %rd8055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5577,%dummy}, %rd8006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5578}, %rd8006;
	}
	shf.r.wrap.b32 	%r5579, %r5578, %r5577, 19;
	shf.r.wrap.b32 	%r5580, %r5577, %r5578, 19;
	mov.b64 	%rd8068, {%r5580, %r5579};
	shf.l.wrap.b32 	%r5581, %r5577, %r5578, 3;
	shf.l.wrap.b32 	%r5582, %r5578, %r5577, 3;
	mov.b64 	%rd8069, {%r5582, %r5581};
	xor.b64  	%rd8070, %rd8068, %rd8069;
	shr.u64 	%rd8071, %rd8006, 6;
	xor.b64  	%rd8072, %rd8070, %rd8071;
	shf.r.wrap.b32 	%r5583, %r5240, %r5239, 1;
	shf.r.wrap.b32 	%r5584, %r5239, %r5240, 1;
	mov.b64 	%rd8073, {%r5584, %r5583};
	shf.r.wrap.b32 	%r5585, %r5240, %r5239, 8;
	shf.r.wrap.b32 	%r5586, %r5239, %r5240, 8;
	mov.b64 	%rd8074, {%r5586, %r5585};
	xor.b64  	%rd8075, %rd8073, %rd8074;
	shr.u64 	%rd8076, %rd7525, 7;
	xor.b64  	%rd8077, %rd8075, %rd8076;
	add.s64 	%rd8078, %rd8072, %rd7488;
	add.s64 	%rd8079, %rd8078, %rd7821;
	add.s64 	%rd8080, %rd8079, %rd8077;
	add.s64 	%rd8081, %rd8080, %rd7945;
	xor.b64  	%rd8082, %rd8019, %rd7982;
	and.b64  	%rd8083, %rd8056, %rd8082;
	xor.b64  	%rd8084, %rd8083, %rd7982;
	add.s64 	%rd8085, %rd8081, %rd8084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5587,%dummy}, %rd8056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5588}, %rd8056;
	}
	shf.r.wrap.b32 	%r5589, %r5588, %r5587, 14;
	shf.r.wrap.b32 	%r5590, %r5587, %r5588, 14;
	mov.b64 	%rd8086, {%r5590, %r5589};
	shf.r.wrap.b32 	%r5591, %r5588, %r5587, 18;
	shf.r.wrap.b32 	%r5592, %r5587, %r5588, 18;
	mov.b64 	%rd8087, {%r5592, %r5591};
	xor.b64  	%rd8088, %rd8086, %rd8087;
	shf.l.wrap.b32 	%r5593, %r5587, %r5588, 23;
	shf.l.wrap.b32 	%r5594, %r5588, %r5587, 23;
	mov.b64 	%rd8089, {%r5594, %r5593};
	xor.b64  	%rd8090, %rd8088, %rd8089;
	add.s64 	%rd8091, %rd8085, %rd8090;
	add.s64 	%rd8092, %rd8091, 3659926193048069267;
	add.s64 	%rd8093, %rd8092, %rd7956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5595,%dummy}, %rd8067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5596}, %rd8067;
	}
	shf.r.wrap.b32 	%r5597, %r5596, %r5595, 28;
	shf.r.wrap.b32 	%r5598, %r5595, %r5596, 28;
	mov.b64 	%rd8094, {%r5598, %r5597};
	shf.l.wrap.b32 	%r5599, %r5595, %r5596, 30;
	shf.l.wrap.b32 	%r5600, %r5596, %r5595, 30;
	mov.b64 	%rd8095, {%r5600, %r5599};
	xor.b64  	%rd8096, %rd8094, %rd8095;
	shf.l.wrap.b32 	%r5601, %r5595, %r5596, 25;
	shf.l.wrap.b32 	%r5602, %r5596, %r5595, 25;
	mov.b64 	%rd8097, {%r5602, %r5601};
	xor.b64  	%rd8098, %rd8096, %rd8097;
	and.b64  	%rd8099, %rd8067, %rd8030;
	or.b64  	%rd8100, %rd8067, %rd8030;
	and.b64  	%rd8101, %rd8100, %rd7993;
	or.b64  	%rd8102, %rd8101, %rd8099;
	add.s64 	%rd8103, %rd8102, %rd8098;
	add.s64 	%rd8104, %rd8103, %rd8092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5603,%dummy}, %rd8043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5604}, %rd8043;
	}
	shf.r.wrap.b32 	%r5605, %r5604, %r5603, 19;
	shf.r.wrap.b32 	%r5606, %r5603, %r5604, 19;
	mov.b64 	%rd8105, {%r5606, %r5605};
	shf.l.wrap.b32 	%r5607, %r5603, %r5604, 3;
	shf.l.wrap.b32 	%r5608, %r5604, %r5603, 3;
	mov.b64 	%rd8106, {%r5608, %r5607};
	xor.b64  	%rd8107, %rd8105, %rd8106;
	shr.u64 	%rd8108, %rd8043, 6;
	xor.b64  	%rd8109, %rd8107, %rd8108;
	shf.r.wrap.b32 	%r5609, %r5266, %r5265, 1;
	shf.r.wrap.b32 	%r5610, %r5265, %r5266, 1;
	mov.b64 	%rd8110, {%r5610, %r5609};
	shf.r.wrap.b32 	%r5611, %r5266, %r5265, 8;
	shf.r.wrap.b32 	%r5612, %r5265, %r5266, 8;
	mov.b64 	%rd8111, {%r5612, %r5611};
	xor.b64  	%rd8112, %rd8110, %rd8111;
	shr.u64 	%rd8113, %rd7562, 7;
	xor.b64  	%rd8114, %rd8112, %rd8113;
	add.s64 	%rd8115, %rd8109, %rd7525;
	add.s64 	%rd8116, %rd8115, %rd7858;
	add.s64 	%rd8117, %rd8116, %rd8114;
	add.s64 	%rd8118, %rd8117, %rd7982;
	xor.b64  	%rd8119, %rd8056, %rd8019;
	and.b64  	%rd8120, %rd8093, %rd8119;
	xor.b64  	%rd8121, %rd8120, %rd8019;
	add.s64 	%rd8122, %rd8118, %rd8121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5613,%dummy}, %rd8093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5614}, %rd8093;
	}
	shf.r.wrap.b32 	%r5615, %r5614, %r5613, 14;
	shf.r.wrap.b32 	%r5616, %r5613, %r5614, 14;
	mov.b64 	%rd8123, {%r5616, %r5615};
	shf.r.wrap.b32 	%r5617, %r5614, %r5613, 18;
	shf.r.wrap.b32 	%r5618, %r5613, %r5614, 18;
	mov.b64 	%rd8124, {%r5618, %r5617};
	xor.b64  	%rd8125, %rd8123, %rd8124;
	shf.l.wrap.b32 	%r5619, %r5613, %r5614, 23;
	shf.l.wrap.b32 	%r5620, %r5614, %r5613, 23;
	mov.b64 	%rd8126, {%r5620, %r5619};
	xor.b64  	%rd8127, %rd8125, %rd8126;
	add.s64 	%rd8128, %rd8122, %rd8127;
	add.s64 	%rd8129, %rd8128, 4368137639120453308;
	add.s64 	%rd8130, %rd8129, %rd7993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5621,%dummy}, %rd8104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5622}, %rd8104;
	}
	shf.r.wrap.b32 	%r5623, %r5622, %r5621, 28;
	shf.r.wrap.b32 	%r5624, %r5621, %r5622, 28;
	mov.b64 	%rd8131, {%r5624, %r5623};
	shf.l.wrap.b32 	%r5625, %r5621, %r5622, 30;
	shf.l.wrap.b32 	%r5626, %r5622, %r5621, 30;
	mov.b64 	%rd8132, {%r5626, %r5625};
	xor.b64  	%rd8133, %rd8131, %rd8132;
	shf.l.wrap.b32 	%r5627, %r5621, %r5622, 25;
	shf.l.wrap.b32 	%r5628, %r5622, %r5621, 25;
	mov.b64 	%rd8134, {%r5628, %r5627};
	xor.b64  	%rd8135, %rd8133, %rd8134;
	and.b64  	%rd8136, %rd8104, %rd8067;
	or.b64  	%rd8137, %rd8104, %rd8067;
	and.b64  	%rd8138, %rd8137, %rd8030;
	or.b64  	%rd8139, %rd8138, %rd8136;
	add.s64 	%rd8140, %rd8139, %rd8135;
	add.s64 	%rd8141, %rd8140, %rd8129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5629,%dummy}, %rd8080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5630}, %rd8080;
	}
	shf.r.wrap.b32 	%r5631, %r5630, %r5629, 19;
	shf.r.wrap.b32 	%r5632, %r5629, %r5630, 19;
	mov.b64 	%rd8142, {%r5632, %r5631};
	shf.l.wrap.b32 	%r5633, %r5629, %r5630, 3;
	shf.l.wrap.b32 	%r5634, %r5630, %r5629, 3;
	mov.b64 	%rd8143, {%r5634, %r5633};
	xor.b64  	%rd8144, %rd8142, %rd8143;
	shr.u64 	%rd8145, %rd8080, 6;
	xor.b64  	%rd8146, %rd8144, %rd8145;
	shf.r.wrap.b32 	%r5635, %r5292, %r5291, 1;
	shf.r.wrap.b32 	%r5636, %r5291, %r5292, 1;
	mov.b64 	%rd8147, {%r5636, %r5635};
	shf.r.wrap.b32 	%r5637, %r5292, %r5291, 8;
	shf.r.wrap.b32 	%r5638, %r5291, %r5292, 8;
	mov.b64 	%rd8148, {%r5638, %r5637};
	xor.b64  	%rd8149, %rd8147, %rd8148;
	shr.u64 	%rd8150, %rd7599, 7;
	xor.b64  	%rd8151, %rd8149, %rd8150;
	add.s64 	%rd8152, %rd8146, %rd7562;
	add.s64 	%rd8153, %rd8152, %rd7895;
	add.s64 	%rd8154, %rd8153, %rd8151;
	add.s64 	%rd8155, %rd8154, %rd8019;
	xor.b64  	%rd8156, %rd8093, %rd8056;
	and.b64  	%rd8157, %rd8130, %rd8156;
	xor.b64  	%rd8158, %rd8157, %rd8056;
	add.s64 	%rd8159, %rd8155, %rd8158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5639,%dummy}, %rd8130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5640}, %rd8130;
	}
	shf.r.wrap.b32 	%r5641, %r5640, %r5639, 14;
	shf.r.wrap.b32 	%r5642, %r5639, %r5640, 14;
	mov.b64 	%rd8160, {%r5642, %r5641};
	shf.r.wrap.b32 	%r5643, %r5640, %r5639, 18;
	shf.r.wrap.b32 	%r5644, %r5639, %r5640, 18;
	mov.b64 	%rd8161, {%r5644, %r5643};
	xor.b64  	%rd8162, %rd8160, %rd8161;
	shf.l.wrap.b32 	%r5645, %r5639, %r5640, 23;
	shf.l.wrap.b32 	%r5646, %r5640, %r5639, 23;
	mov.b64 	%rd8163, {%r5646, %r5645};
	xor.b64  	%rd8164, %rd8162, %rd8163;
	add.s64 	%rd8165, %rd8159, %rd8164;
	add.s64 	%rd8166, %rd8165, 4836135668995329356;
	add.s64 	%rd8167, %rd8166, %rd8030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5647,%dummy}, %rd8141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5648}, %rd8141;
	}
	shf.r.wrap.b32 	%r5649, %r5648, %r5647, 28;
	shf.r.wrap.b32 	%r5650, %r5647, %r5648, 28;
	mov.b64 	%rd8168, {%r5650, %r5649};
	shf.l.wrap.b32 	%r5651, %r5647, %r5648, 30;
	shf.l.wrap.b32 	%r5652, %r5648, %r5647, 30;
	mov.b64 	%rd8169, {%r5652, %r5651};
	xor.b64  	%rd8170, %rd8168, %rd8169;
	shf.l.wrap.b32 	%r5653, %r5647, %r5648, 25;
	shf.l.wrap.b32 	%r5654, %r5648, %r5647, 25;
	mov.b64 	%rd8171, {%r5654, %r5653};
	xor.b64  	%rd8172, %rd8170, %rd8171;
	and.b64  	%rd8173, %rd8141, %rd8104;
	or.b64  	%rd8174, %rd8141, %rd8104;
	and.b64  	%rd8175, %rd8174, %rd8067;
	or.b64  	%rd8176, %rd8175, %rd8173;
	add.s64 	%rd8177, %rd8176, %rd8172;
	add.s64 	%rd8178, %rd8177, %rd8166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5655,%dummy}, %rd8117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5656}, %rd8117;
	}
	shf.r.wrap.b32 	%r5657, %r5656, %r5655, 19;
	shf.r.wrap.b32 	%r5658, %r5655, %r5656, 19;
	mov.b64 	%rd8179, {%r5658, %r5657};
	shf.l.wrap.b32 	%r5659, %r5655, %r5656, 3;
	shf.l.wrap.b32 	%r5660, %r5656, %r5655, 3;
	mov.b64 	%rd8180, {%r5660, %r5659};
	xor.b64  	%rd8181, %rd8179, %rd8180;
	shr.u64 	%rd8182, %rd8117, 6;
	xor.b64  	%rd8183, %rd8181, %rd8182;
	shf.r.wrap.b32 	%r5661, %r5318, %r5317, 1;
	shf.r.wrap.b32 	%r5662, %r5317, %r5318, 1;
	mov.b64 	%rd8184, {%r5662, %r5661};
	shf.r.wrap.b32 	%r5663, %r5318, %r5317, 8;
	shf.r.wrap.b32 	%r5664, %r5317, %r5318, 8;
	mov.b64 	%rd8185, {%r5664, %r5663};
	xor.b64  	%rd8186, %rd8184, %rd8185;
	shr.u64 	%rd8187, %rd7636, 7;
	xor.b64  	%rd8188, %rd8186, %rd8187;
	add.s64 	%rd8189, %rd8183, %rd7599;
	add.s64 	%rd8190, %rd8189, %rd7932;
	add.s64 	%rd8191, %rd8190, %rd8188;
	add.s64 	%rd8192, %rd8191, %rd8056;
	xor.b64  	%rd8193, %rd8130, %rd8093;
	and.b64  	%rd8194, %rd8167, %rd8193;
	xor.b64  	%rd8195, %rd8194, %rd8093;
	add.s64 	%rd8196, %rd8192, %rd8195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5665,%dummy}, %rd8167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5666}, %rd8167;
	}
	shf.r.wrap.b32 	%r5667, %r5666, %r5665, 14;
	shf.r.wrap.b32 	%r5668, %r5665, %r5666, 14;
	mov.b64 	%rd8197, {%r5668, %r5667};
	shf.r.wrap.b32 	%r5669, %r5666, %r5665, 18;
	shf.r.wrap.b32 	%r5670, %r5665, %r5666, 18;
	mov.b64 	%rd8198, {%r5670, %r5669};
	xor.b64  	%rd8199, %rd8197, %rd8198;
	shf.l.wrap.b32 	%r5671, %r5665, %r5666, 23;
	shf.l.wrap.b32 	%r5672, %r5666, %r5665, 23;
	mov.b64 	%rd8200, {%r5672, %r5671};
	xor.b64  	%rd8201, %rd8199, %rd8200;
	add.s64 	%rd8202, %rd8196, %rd8201;
	add.s64 	%rd8203, %rd8202, 5532061633213252278;
	add.s64 	%rd8204, %rd8203, %rd8067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5673,%dummy}, %rd8178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5674}, %rd8178;
	}
	shf.r.wrap.b32 	%r5675, %r5674, %r5673, 28;
	shf.r.wrap.b32 	%r5676, %r5673, %r5674, 28;
	mov.b64 	%rd8205, {%r5676, %r5675};
	shf.l.wrap.b32 	%r5677, %r5673, %r5674, 30;
	shf.l.wrap.b32 	%r5678, %r5674, %r5673, 30;
	mov.b64 	%rd8206, {%r5678, %r5677};
	xor.b64  	%rd8207, %rd8205, %rd8206;
	shf.l.wrap.b32 	%r5679, %r5673, %r5674, 25;
	shf.l.wrap.b32 	%r5680, %r5674, %r5673, 25;
	mov.b64 	%rd8208, {%r5680, %r5679};
	xor.b64  	%rd8209, %rd8207, %rd8208;
	and.b64  	%rd8210, %rd8178, %rd8141;
	or.b64  	%rd8211, %rd8178, %rd8141;
	and.b64  	%rd8212, %rd8211, %rd8104;
	or.b64  	%rd8213, %rd8212, %rd8210;
	add.s64 	%rd8214, %rd8213, %rd8209;
	add.s64 	%rd8215, %rd8214, %rd8203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5681,%dummy}, %rd8154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5682}, %rd8154;
	}
	shf.r.wrap.b32 	%r5683, %r5682, %r5681, 19;
	shf.r.wrap.b32 	%r5684, %r5681, %r5682, 19;
	mov.b64 	%rd8216, {%r5684, %r5683};
	shf.l.wrap.b32 	%r5685, %r5681, %r5682, 3;
	shf.l.wrap.b32 	%r5686, %r5682, %r5681, 3;
	mov.b64 	%rd8217, {%r5686, %r5685};
	xor.b64  	%rd8218, %rd8216, %rd8217;
	shr.u64 	%rd8219, %rd8154, 6;
	xor.b64  	%rd8220, %rd8218, %rd8219;
	shf.r.wrap.b32 	%r5687, %r5344, %r5343, 1;
	shf.r.wrap.b32 	%r5688, %r5343, %r5344, 1;
	mov.b64 	%rd8221, {%r5688, %r5687};
	shf.r.wrap.b32 	%r5689, %r5344, %r5343, 8;
	shf.r.wrap.b32 	%r5690, %r5343, %r5344, 8;
	mov.b64 	%rd8222, {%r5690, %r5689};
	xor.b64  	%rd8223, %rd8221, %rd8222;
	shr.u64 	%rd8224, %rd7673, 7;
	xor.b64  	%rd8225, %rd8223, %rd8224;
	add.s64 	%rd8226, %rd8220, %rd7636;
	add.s64 	%rd8227, %rd8226, %rd7969;
	add.s64 	%rd8228, %rd8227, %rd8225;
	add.s64 	%rd8229, %rd8228, %rd8093;
	xor.b64  	%rd8230, %rd8167, %rd8130;
	and.b64  	%rd8231, %rd8204, %rd8230;
	xor.b64  	%rd8232, %rd8231, %rd8130;
	add.s64 	%rd8233, %rd8229, %rd8232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5691,%dummy}, %rd8204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5692}, %rd8204;
	}
	shf.r.wrap.b32 	%r5693, %r5692, %r5691, 14;
	shf.r.wrap.b32 	%r5694, %r5691, %r5692, 14;
	mov.b64 	%rd8234, {%r5694, %r5693};
	shf.r.wrap.b32 	%r5695, %r5692, %r5691, 18;
	shf.r.wrap.b32 	%r5696, %r5691, %r5692, 18;
	mov.b64 	%rd8235, {%r5696, %r5695};
	xor.b64  	%rd8236, %rd8234, %rd8235;
	shf.l.wrap.b32 	%r5697, %r5691, %r5692, 23;
	shf.l.wrap.b32 	%r5698, %r5692, %r5691, 23;
	mov.b64 	%rd8237, {%r5698, %r5697};
	xor.b64  	%rd8238, %rd8236, %rd8237;
	add.s64 	%rd8239, %rd8233, %rd8238;
	add.s64 	%rd8240, %rd8239, 6448918945643986474;
	add.s64 	%rd8241, %rd8240, %rd8104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5699,%dummy}, %rd8215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5700}, %rd8215;
	}
	shf.r.wrap.b32 	%r5701, %r5700, %r5699, 28;
	shf.r.wrap.b32 	%r5702, %r5699, %r5700, 28;
	mov.b64 	%rd8242, {%r5702, %r5701};
	shf.l.wrap.b32 	%r5703, %r5699, %r5700, 30;
	shf.l.wrap.b32 	%r5704, %r5700, %r5699, 30;
	mov.b64 	%rd8243, {%r5704, %r5703};
	xor.b64  	%rd8244, %rd8242, %rd8243;
	shf.l.wrap.b32 	%r5705, %r5699, %r5700, 25;
	shf.l.wrap.b32 	%r5706, %r5700, %r5699, 25;
	mov.b64 	%rd8245, {%r5706, %r5705};
	xor.b64  	%rd8246, %rd8244, %rd8245;
	and.b64  	%rd8247, %rd8215, %rd8178;
	or.b64  	%rd8248, %rd8215, %rd8178;
	and.b64  	%rd8249, %rd8248, %rd8141;
	or.b64  	%rd8250, %rd8249, %rd8247;
	add.s64 	%rd8251, %rd8250, %rd8246;
	add.s64 	%rd8252, %rd8251, %rd8240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5707,%dummy}, %rd8191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5708}, %rd8191;
	}
	shf.r.wrap.b32 	%r5709, %r5708, %r5707, 19;
	shf.r.wrap.b32 	%r5710, %r5707, %r5708, 19;
	mov.b64 	%rd8253, {%r5710, %r5709};
	shf.l.wrap.b32 	%r5711, %r5707, %r5708, 3;
	shf.l.wrap.b32 	%r5712, %r5708, %r5707, 3;
	mov.b64 	%rd8254, {%r5712, %r5711};
	xor.b64  	%rd8255, %rd8253, %rd8254;
	shr.u64 	%rd8256, %rd8191, 6;
	xor.b64  	%rd8257, %rd8255, %rd8256;
	shf.r.wrap.b32 	%r5713, %r5370, %r5369, 1;
	shf.r.wrap.b32 	%r5714, %r5369, %r5370, 1;
	mov.b64 	%rd8258, {%r5714, %r5713};
	shf.r.wrap.b32 	%r5715, %r5370, %r5369, 8;
	shf.r.wrap.b32 	%r5716, %r5369, %r5370, 8;
	mov.b64 	%rd8259, {%r5716, %r5715};
	xor.b64  	%rd8260, %rd8258, %rd8259;
	shr.u64 	%rd8261, %rd7710, 7;
	xor.b64  	%rd8262, %rd8260, %rd8261;
	add.s64 	%rd8263, %rd8257, %rd7673;
	add.s64 	%rd8264, %rd8263, %rd8006;
	add.s64 	%rd8265, %rd8264, %rd8262;
	add.s64 	%rd8266, %rd8265, %rd8130;
	xor.b64  	%rd8267, %rd8204, %rd8167;
	and.b64  	%rd8268, %rd8241, %rd8267;
	xor.b64  	%rd8269, %rd8268, %rd8167;
	add.s64 	%rd8270, %rd8266, %rd8269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5717,%dummy}, %rd8241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5718}, %rd8241;
	}
	shf.r.wrap.b32 	%r5719, %r5718, %r5717, 14;
	shf.r.wrap.b32 	%r5720, %r5717, %r5718, 14;
	mov.b64 	%rd8271, {%r5720, %r5719};
	shf.r.wrap.b32 	%r5721, %r5718, %r5717, 18;
	shf.r.wrap.b32 	%r5722, %r5717, %r5718, 18;
	mov.b64 	%rd8272, {%r5722, %r5721};
	xor.b64  	%rd8273, %rd8271, %rd8272;
	shf.l.wrap.b32 	%r5723, %r5717, %r5718, 23;
	shf.l.wrap.b32 	%r5724, %r5718, %r5717, 23;
	mov.b64 	%rd8274, {%r5724, %r5723};
	xor.b64  	%rd8275, %rd8273, %rd8274;
	add.s64 	%rd8276, %rd8270, %rd8275;
	add.s64 	%rd8277, %rd8276, 6902733635092675308;
	add.s64 	%rd8278, %rd8277, %rd8141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5725,%dummy}, %rd8252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5726}, %rd8252;
	}
	shf.r.wrap.b32 	%r5727, %r5726, %r5725, 28;
	shf.r.wrap.b32 	%r5728, %r5725, %r5726, 28;
	mov.b64 	%rd8279, {%r5728, %r5727};
	shf.l.wrap.b32 	%r5729, %r5725, %r5726, 30;
	shf.l.wrap.b32 	%r5730, %r5726, %r5725, 30;
	mov.b64 	%rd8280, {%r5730, %r5729};
	xor.b64  	%rd8281, %rd8279, %rd8280;
	shf.l.wrap.b32 	%r5731, %r5725, %r5726, 25;
	shf.l.wrap.b32 	%r5732, %r5726, %r5725, 25;
	mov.b64 	%rd8282, {%r5732, %r5731};
	xor.b64  	%rd8283, %rd8281, %rd8282;
	and.b64  	%rd8284, %rd8252, %rd8215;
	or.b64  	%rd8285, %rd8252, %rd8215;
	and.b64  	%rd8286, %rd8285, %rd8178;
	or.b64  	%rd8287, %rd8286, %rd8284;
	add.s64 	%rd8288, %rd8287, %rd8283;
	add.s64 	%rd8289, %rd8288, %rd8277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5733,%dummy}, %rd8228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5734}, %rd8228;
	}
	shf.r.wrap.b32 	%r5735, %r5734, %r5733, 19;
	shf.r.wrap.b32 	%r5736, %r5733, %r5734, 19;
	mov.b64 	%rd8290, {%r5736, %r5735};
	shf.l.wrap.b32 	%r5737, %r5733, %r5734, 3;
	shf.l.wrap.b32 	%r5738, %r5734, %r5733, 3;
	mov.b64 	%rd8291, {%r5738, %r5737};
	xor.b64  	%rd8292, %rd8290, %rd8291;
	shr.u64 	%rd8293, %rd8228, 6;
	xor.b64  	%rd8294, %rd8292, %rd8293;
	shf.r.wrap.b32 	%r5739, %r5396, %r5395, 1;
	shf.r.wrap.b32 	%r5740, %r5395, %r5396, 1;
	mov.b64 	%rd8295, {%r5740, %r5739};
	shf.r.wrap.b32 	%r5741, %r5396, %r5395, 8;
	shf.r.wrap.b32 	%r5742, %r5395, %r5396, 8;
	mov.b64 	%rd8296, {%r5742, %r5741};
	xor.b64  	%rd8297, %rd8295, %rd8296;
	shr.u64 	%rd8298, %rd7747, 7;
	xor.b64  	%rd8299, %rd8297, %rd8298;
	add.s64 	%rd8300, %rd8294, %rd7710;
	add.s64 	%rd8301, %rd8300, %rd8043;
	add.s64 	%rd8302, %rd8301, %rd8299;
	add.s64 	%rd8303, %rd8302, %rd8167;
	xor.b64  	%rd8304, %rd8241, %rd8204;
	and.b64  	%rd8305, %rd8278, %rd8304;
	xor.b64  	%rd8306, %rd8305, %rd8204;
	add.s64 	%rd8307, %rd8303, %rd8306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5743,%dummy}, %rd8278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5744}, %rd8278;
	}
	shf.r.wrap.b32 	%r5745, %r5744, %r5743, 14;
	shf.r.wrap.b32 	%r5746, %r5743, %r5744, 14;
	mov.b64 	%rd8308, {%r5746, %r5745};
	shf.r.wrap.b32 	%r5747, %r5744, %r5743, 18;
	shf.r.wrap.b32 	%r5748, %r5743, %r5744, 18;
	mov.b64 	%rd8309, {%r5748, %r5747};
	xor.b64  	%rd8310, %rd8308, %rd8309;
	shf.l.wrap.b32 	%r5749, %r5743, %r5744, 23;
	shf.l.wrap.b32 	%r5750, %r5744, %r5743, 23;
	mov.b64 	%rd8311, {%r5750, %r5749};
	xor.b64  	%rd8312, %rd8310, %rd8311;
	add.s64 	%rd8313, %rd8307, %rd8312;
	add.s64 	%rd8314, %rd8313, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5751,%dummy}, %rd8289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5752}, %rd8289;
	}
	shf.r.wrap.b32 	%r5753, %r5752, %r5751, 28;
	shf.r.wrap.b32 	%r5754, %r5751, %r5752, 28;
	mov.b64 	%rd8315, {%r5754, %r5753};
	shf.l.wrap.b32 	%r5755, %r5751, %r5752, 30;
	shf.l.wrap.b32 	%r5756, %r5752, %r5751, 30;
	mov.b64 	%rd8316, {%r5756, %r5755};
	xor.b64  	%rd8317, %rd8315, %rd8316;
	shf.l.wrap.b32 	%r5757, %r5751, %r5752, 25;
	shf.l.wrap.b32 	%r5758, %r5752, %r5751, 25;
	mov.b64 	%rd8318, {%r5758, %r5757};
	xor.b64  	%rd8319, %rd8317, %rd8318;
	and.b64  	%rd8320, %rd8289, %rd8252;
	or.b64  	%rd8321, %rd8289, %rd8252;
	and.b64  	%rd8322, %rd8321, %rd8215;
	or.b64  	%rd8323, %rd8322, %rd8320;
	add.s64 	%rd8324, %rd8319, %rd6;
	add.s64 	%rd8325, %rd8324, %rd8323;
	add.s64 	%rd8326, %rd8325, %rd8314;
	add.s64 	%rd8327, %rd8289, %rd7;
	add.s64 	%rd8328, %rd8252, %rd8;
	add.s64 	%rd8329, %rd8215, %rd9;
	add.s64 	%rd8330, %rd8178, %rd10;
	add.s64 	%rd8331, %rd8330, %rd8314;
	add.s64 	%rd8332, %rd8278, %rd11;
	add.s64 	%rd8333, %rd8241, %rd12;
	add.s64 	%rd8334, %rd8204, %rd13;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5759,%dummy}, %rd21;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5760}, %rd21;
	}
	shf.r.wrap.b32 	%r5761, %r5760, %r5759, 18;
	shf.r.wrap.b32 	%r5762, %r5759, %r5760, 18;
	mov.b64 	%rd8335, {%r5762, %r5761};
	shf.r.wrap.b32 	%r5763, %r5760, %r5759, 14;
	shf.r.wrap.b32 	%r5764, %r5759, %r5760, 14;
	mov.b64 	%rd8336, {%r5764, %r5763};
	xor.b64  	%rd8337, %rd8336, %rd8335;
	shf.l.wrap.b32 	%r5765, %r5759, %r5760, 23;
	shf.l.wrap.b32 	%r5766, %r5760, %r5759, 23;
	mov.b64 	%rd8338, {%r5766, %r5765};
	xor.b64  	%rd8339, %rd8337, %rd8338;
	xor.b64  	%rd8340, %rd23, %rd22;
	and.b64  	%rd8341, %rd8340, %rd21;
	xor.b64  	%rd8342, %rd8341, %rd23;
	add.s64 	%rd8343, %rd14, %rd8339;
	add.s64 	%rd8344, %rd8343, %rd8326;
	add.s64 	%rd8345, %rd8344, %rd8342;
	add.s64 	%rd8346, %rd8345, -7031530027109396581;
	add.s64 	%rd8347, %rd8346, %rd20;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5767}, %rd17;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd17;
	}
	shf.l.wrap.b32 	%r5769, %r5768, %r5767, 30;
	shf.l.wrap.b32 	%r5770, %r5767, %r5768, 30;
	mov.b64 	%rd8348, {%r5770, %r5769};
	shf.r.wrap.b32 	%r5771, %r5767, %r5768, 28;
	shf.r.wrap.b32 	%r5772, %r5768, %r5767, 28;
	mov.b64 	%rd8349, {%r5772, %r5771};
	xor.b64  	%rd8350, %rd8349, %rd8348;
	shf.l.wrap.b32 	%r5773, %r5768, %r5767, 25;
	shf.l.wrap.b32 	%r5774, %r5767, %r5768, 25;
	mov.b64 	%rd8351, {%r5774, %r5773};
	xor.b64  	%rd8352, %rd8350, %rd8351;
	or.b64  	%rd8353, %rd18, %rd17;
	and.b64  	%rd8354, %rd19, %rd8353;
	and.b64  	%rd8355, %rd18, %rd17;
	or.b64  	%rd8356, %rd8354, %rd8355;
	add.s64 	%rd8357, %rd8356, %rd8352;
	add.s64 	%rd8358, %rd8357, %rd8346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5775,%dummy}, %rd8347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5776}, %rd8347;
	}
	shf.r.wrap.b32 	%r5777, %r5776, %r5775, 14;
	shf.r.wrap.b32 	%r5778, %r5775, %r5776, 14;
	mov.b64 	%rd8359, {%r5778, %r5777};
	shf.r.wrap.b32 	%r5779, %r5776, %r5775, 18;
	shf.r.wrap.b32 	%r5780, %r5775, %r5776, 18;
	mov.b64 	%rd8360, {%r5780, %r5779};
	xor.b64  	%rd8361, %rd8359, %rd8360;
	shf.l.wrap.b32 	%r5781, %r5775, %r5776, 23;
	shf.l.wrap.b32 	%r5782, %r5776, %r5775, 23;
	mov.b64 	%rd8362, {%r5782, %r5781};
	xor.b64  	%rd8363, %rd8361, %rd8362;
	xor.b64  	%rd8364, %rd22, %rd21;
	and.b64  	%rd8365, %rd8347, %rd8364;
	xor.b64  	%rd8366, %rd8365, %rd22;
	add.s64 	%rd8367, %rd15, %rd8327;
	add.s64 	%rd8368, %rd8367, %rd8366;
	add.s64 	%rd8369, %rd8368, %rd8363;
	add.s64 	%rd8370, %rd8369, -8017781463737883848;
	add.s64 	%rd8371, %rd8370, %rd19;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5783,%dummy}, %rd8358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5784}, %rd8358;
	}
	shf.r.wrap.b32 	%r5785, %r5784, %r5783, 28;
	shf.r.wrap.b32 	%r5786, %r5783, %r5784, 28;
	mov.b64 	%rd8372, {%r5786, %r5785};
	shf.l.wrap.b32 	%r5787, %r5783, %r5784, 30;
	shf.l.wrap.b32 	%r5788, %r5784, %r5783, 30;
	mov.b64 	%rd8373, {%r5788, %r5787};
	xor.b64  	%rd8374, %rd8372, %rd8373;
	shf.l.wrap.b32 	%r5789, %r5783, %r5784, 25;
	shf.l.wrap.b32 	%r5790, %r5784, %r5783, 25;
	mov.b64 	%rd8375, {%r5790, %r5789};
	xor.b64  	%rd8376, %rd8374, %rd8375;
	and.b64  	%rd8377, %rd8358, %rd17;
	or.b64  	%rd8378, %rd8358, %rd17;
	and.b64  	%rd8379, %rd8378, %rd18;
	or.b64  	%rd8380, %rd8379, %rd8377;
	add.s64 	%rd8381, %rd8380, %rd8376;
	add.s64 	%rd8382, %rd8381, %rd8370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5791,%dummy}, %rd8371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5792}, %rd8371;
	}
	shf.r.wrap.b32 	%r5793, %r5792, %r5791, 14;
	shf.r.wrap.b32 	%r5794, %r5791, %r5792, 14;
	mov.b64 	%rd8383, {%r5794, %r5793};
	shf.r.wrap.b32 	%r5795, %r5792, %r5791, 18;
	shf.r.wrap.b32 	%r5796, %r5791, %r5792, 18;
	mov.b64 	%rd8384, {%r5796, %r5795};
	xor.b64  	%rd8385, %rd8383, %rd8384;
	shf.l.wrap.b32 	%r5797, %r5791, %r5792, 23;
	shf.l.wrap.b32 	%r5798, %r5792, %r5791, 23;
	mov.b64 	%rd8386, {%r5798, %r5797};
	xor.b64  	%rd8387, %rd8385, %rd8386;
	xor.b64  	%rd8388, %rd8347, %rd21;
	and.b64  	%rd8389, %rd8371, %rd8388;
	xor.b64  	%rd8390, %rd8389, %rd21;
	add.s64 	%rd8391, %rd16, %rd8328;
	add.s64 	%rd8392, %rd8391, %rd8390;
	add.s64 	%rd8393, %rd8392, %rd8387;
	add.s64 	%rd8394, %rd8393, 5820449915117741902;
	add.s64 	%rd8395, %rd8394, %rd18;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5799,%dummy}, %rd8382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5800}, %rd8382;
	}
	shf.r.wrap.b32 	%r5801, %r5800, %r5799, 28;
	shf.r.wrap.b32 	%r5802, %r5799, %r5800, 28;
	mov.b64 	%rd8396, {%r5802, %r5801};
	shf.l.wrap.b32 	%r5803, %r5799, %r5800, 30;
	shf.l.wrap.b32 	%r5804, %r5800, %r5799, 30;
	mov.b64 	%rd8397, {%r5804, %r5803};
	xor.b64  	%rd8398, %rd8396, %rd8397;
	shf.l.wrap.b32 	%r5805, %r5799, %r5800, 25;
	shf.l.wrap.b32 	%r5806, %r5800, %r5799, 25;
	mov.b64 	%rd8399, {%r5806, %r5805};
	xor.b64  	%rd8400, %rd8398, %rd8399;
	and.b64  	%rd8401, %rd8382, %rd8358;
	or.b64  	%rd8402, %rd8382, %rd8358;
	and.b64  	%rd8403, %rd8402, %rd17;
	or.b64  	%rd8404, %rd8403, %rd8401;
	add.s64 	%rd8405, %rd8404, %rd8400;
	add.s64 	%rd8406, %rd8405, %rd8394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5807,%dummy}, %rd8395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5808}, %rd8395;
	}
	shf.r.wrap.b32 	%r5809, %r5808, %r5807, 14;
	shf.r.wrap.b32 	%r5810, %r5807, %r5808, 14;
	mov.b64 	%rd8407, {%r5810, %r5809};
	shf.r.wrap.b32 	%r5811, %r5808, %r5807, 18;
	shf.r.wrap.b32 	%r5812, %r5807, %r5808, 18;
	mov.b64 	%rd8408, {%r5812, %r5811};
	xor.b64  	%rd8409, %rd8407, %rd8408;
	shf.l.wrap.b32 	%r5813, %r5807, %r5808, 23;
	shf.l.wrap.b32 	%r5814, %r5808, %r5807, 23;
	mov.b64 	%rd8410, {%r5814, %r5813};
	xor.b64  	%rd8411, %rd8409, %rd8410;
	xor.b64  	%rd8412, %rd8371, %rd8347;
	and.b64  	%rd8413, %rd8395, %rd8412;
	xor.b64  	%rd8414, %rd8413, %rd8347;
	add.s64 	%rd8415, %rd21, %rd8329;
	add.s64 	%rd8416, %rd8415, %rd8414;
	add.s64 	%rd8417, %rd8416, %rd8411;
	add.s64 	%rd8418, %rd8417, -1606136188198331460;
	add.s64 	%rd8419, %rd8418, %rd17;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5815,%dummy}, %rd8406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5816}, %rd8406;
	}
	shf.r.wrap.b32 	%r5817, %r5816, %r5815, 28;
	shf.r.wrap.b32 	%r5818, %r5815, %r5816, 28;
	mov.b64 	%rd8420, {%r5818, %r5817};
	shf.l.wrap.b32 	%r5819, %r5815, %r5816, 30;
	shf.l.wrap.b32 	%r5820, %r5816, %r5815, 30;
	mov.b64 	%rd8421, {%r5820, %r5819};
	xor.b64  	%rd8422, %rd8420, %rd8421;
	shf.l.wrap.b32 	%r5821, %r5815, %r5816, 25;
	shf.l.wrap.b32 	%r5822, %r5816, %r5815, 25;
	mov.b64 	%rd8423, {%r5822, %r5821};
	xor.b64  	%rd8424, %rd8422, %rd8423;
	and.b64  	%rd8425, %rd8406, %rd8382;
	or.b64  	%rd8426, %rd8406, %rd8382;
	and.b64  	%rd8427, %rd8426, %rd8358;
	or.b64  	%rd8428, %rd8427, %rd8425;
	add.s64 	%rd8429, %rd8428, %rd8424;
	add.s64 	%rd8430, %rd8429, %rd8418;
	add.s64 	%rd8431, %rd8331, %rd8347;
	xor.b64  	%rd8432, %rd8395, %rd8371;
	and.b64  	%rd8433, %rd8419, %rd8432;
	xor.b64  	%rd8434, %rd8433, %rd8371;
	add.s64 	%rd8435, %rd8431, %rd8434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5823,%dummy}, %rd8419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5824}, %rd8419;
	}
	shf.r.wrap.b32 	%r5825, %r5824, %r5823, 14;
	shf.r.wrap.b32 	%r5826, %r5823, %r5824, 14;
	mov.b64 	%rd8436, {%r5826, %r5825};
	shf.r.wrap.b32 	%r5827, %r5824, %r5823, 18;
	shf.r.wrap.b32 	%r5828, %r5823, %r5824, 18;
	mov.b64 	%rd8437, {%r5828, %r5827};
	xor.b64  	%rd8438, %rd8436, %rd8437;
	shf.l.wrap.b32 	%r5829, %r5823, %r5824, 23;
	shf.l.wrap.b32 	%r5830, %r5824, %r5823, 23;
	mov.b64 	%rd8439, {%r5830, %r5829};
	xor.b64  	%rd8440, %rd8438, %rd8439;
	add.s64 	%rd8441, %rd8435, %rd8440;
	add.s64 	%rd8442, %rd8441, 4131703408338449720;
	add.s64 	%rd8443, %rd8442, %rd8358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5831,%dummy}, %rd8430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5832}, %rd8430;
	}
	shf.r.wrap.b32 	%r5833, %r5832, %r5831, 28;
	shf.r.wrap.b32 	%r5834, %r5831, %r5832, 28;
	mov.b64 	%rd8444, {%r5834, %r5833};
	shf.l.wrap.b32 	%r5835, %r5831, %r5832, 30;
	shf.l.wrap.b32 	%r5836, %r5832, %r5831, 30;
	mov.b64 	%rd8445, {%r5836, %r5835};
	xor.b64  	%rd8446, %rd8444, %rd8445;
	shf.l.wrap.b32 	%r5837, %r5831, %r5832, 25;
	shf.l.wrap.b32 	%r5838, %r5832, %r5831, 25;
	mov.b64 	%rd8447, {%r5838, %r5837};
	xor.b64  	%rd8448, %rd8446, %rd8447;
	and.b64  	%rd8449, %rd8430, %rd8406;
	or.b64  	%rd8450, %rd8430, %rd8406;
	and.b64  	%rd8451, %rd8450, %rd8382;
	or.b64  	%rd8452, %rd8451, %rd8449;
	add.s64 	%rd8453, %rd8452, %rd8448;
	add.s64 	%rd8454, %rd8453, %rd8442;
	add.s64 	%rd8455, %rd8332, %rd8371;
	xor.b64  	%rd8456, %rd8419, %rd8395;
	and.b64  	%rd8457, %rd8443, %rd8456;
	xor.b64  	%rd8458, %rd8457, %rd8395;
	add.s64 	%rd8459, %rd8455, %rd8458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5839,%dummy}, %rd8443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5840}, %rd8443;
	}
	shf.r.wrap.b32 	%r5841, %r5840, %r5839, 14;
	shf.r.wrap.b32 	%r5842, %r5839, %r5840, 14;
	mov.b64 	%rd8460, {%r5842, %r5841};
	shf.r.wrap.b32 	%r5843, %r5840, %r5839, 18;
	shf.r.wrap.b32 	%r5844, %r5839, %r5840, 18;
	mov.b64 	%rd8461, {%r5844, %r5843};
	xor.b64  	%rd8462, %rd8460, %rd8461;
	shf.l.wrap.b32 	%r5845, %r5839, %r5840, 23;
	shf.l.wrap.b32 	%r5846, %r5840, %r5839, 23;
	mov.b64 	%rd8463, {%r5846, %r5845};
	xor.b64  	%rd8464, %rd8462, %rd8463;
	add.s64 	%rd8465, %rd8459, %rd8464;
	add.s64 	%rd8466, %rd8465, 6480981068601479193;
	add.s64 	%rd8467, %rd8466, %rd8382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5847,%dummy}, %rd8454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5848}, %rd8454;
	}
	shf.r.wrap.b32 	%r5849, %r5848, %r5847, 28;
	shf.r.wrap.b32 	%r5850, %r5847, %r5848, 28;
	mov.b64 	%rd8468, {%r5850, %r5849};
	shf.l.wrap.b32 	%r5851, %r5847, %r5848, 30;
	shf.l.wrap.b32 	%r5852, %r5848, %r5847, 30;
	mov.b64 	%rd8469, {%r5852, %r5851};
	xor.b64  	%rd8470, %rd8468, %rd8469;
	shf.l.wrap.b32 	%r5853, %r5847, %r5848, 25;
	shf.l.wrap.b32 	%r5854, %r5848, %r5847, 25;
	mov.b64 	%rd8471, {%r5854, %r5853};
	xor.b64  	%rd8472, %rd8470, %rd8471;
	and.b64  	%rd8473, %rd8454, %rd8430;
	or.b64  	%rd8474, %rd8454, %rd8430;
	and.b64  	%rd8475, %rd8474, %rd8406;
	or.b64  	%rd8476, %rd8475, %rd8473;
	add.s64 	%rd8477, %rd8476, %rd8472;
	add.s64 	%rd8478, %rd8477, %rd8466;
	add.s64 	%rd8479, %rd8333, %rd8395;
	xor.b64  	%rd8480, %rd8443, %rd8419;
	and.b64  	%rd8481, %rd8467, %rd8480;
	xor.b64  	%rd8482, %rd8481, %rd8419;
	add.s64 	%rd8483, %rd8479, %rd8482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5855,%dummy}, %rd8467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5856}, %rd8467;
	}
	shf.r.wrap.b32 	%r5857, %r5856, %r5855, 14;
	shf.r.wrap.b32 	%r5858, %r5855, %r5856, 14;
	mov.b64 	%rd8484, {%r5858, %r5857};
	shf.r.wrap.b32 	%r5859, %r5856, %r5855, 18;
	shf.r.wrap.b32 	%r5860, %r5855, %r5856, 18;
	mov.b64 	%rd8485, {%r5860, %r5859};
	xor.b64  	%rd8486, %rd8484, %rd8485;
	shf.l.wrap.b32 	%r5861, %r5855, %r5856, 23;
	shf.l.wrap.b32 	%r5862, %r5856, %r5855, 23;
	mov.b64 	%rd8487, {%r5862, %r5861};
	xor.b64  	%rd8488, %rd8486, %rd8487;
	add.s64 	%rd8489, %rd8483, %rd8488;
	add.s64 	%rd8490, %rd8489, -7908458776815382629;
	add.s64 	%rd8491, %rd8490, %rd8406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5863,%dummy}, %rd8478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5864}, %rd8478;
	}
	shf.r.wrap.b32 	%r5865, %r5864, %r5863, 28;
	shf.r.wrap.b32 	%r5866, %r5863, %r5864, 28;
	mov.b64 	%rd8492, {%r5866, %r5865};
	shf.l.wrap.b32 	%r5867, %r5863, %r5864, 30;
	shf.l.wrap.b32 	%r5868, %r5864, %r5863, 30;
	mov.b64 	%rd8493, {%r5868, %r5867};
	xor.b64  	%rd8494, %rd8492, %rd8493;
	shf.l.wrap.b32 	%r5869, %r5863, %r5864, 25;
	shf.l.wrap.b32 	%r5870, %r5864, %r5863, 25;
	mov.b64 	%rd8495, {%r5870, %r5869};
	xor.b64  	%rd8496, %rd8494, %rd8495;
	and.b64  	%rd8497, %rd8478, %rd8454;
	or.b64  	%rd8498, %rd8478, %rd8454;
	and.b64  	%rd8499, %rd8498, %rd8430;
	or.b64  	%rd8500, %rd8499, %rd8497;
	add.s64 	%rd8501, %rd8500, %rd8496;
	add.s64 	%rd8502, %rd8501, %rd8490;
	add.s64 	%rd8503, %rd8334, %rd8419;
	xor.b64  	%rd8504, %rd8467, %rd8443;
	and.b64  	%rd8505, %rd8491, %rd8504;
	xor.b64  	%rd8506, %rd8505, %rd8443;
	add.s64 	%rd8507, %rd8503, %rd8506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5871,%dummy}, %rd8491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5872}, %rd8491;
	}
	shf.r.wrap.b32 	%r5873, %r5872, %r5871, 14;
	shf.r.wrap.b32 	%r5874, %r5871, %r5872, 14;
	mov.b64 	%rd8508, {%r5874, %r5873};
	shf.r.wrap.b32 	%r5875, %r5872, %r5871, 18;
	shf.r.wrap.b32 	%r5876, %r5871, %r5872, 18;
	mov.b64 	%rd8509, {%r5876, %r5875};
	xor.b64  	%rd8510, %rd8508, %rd8509;
	shf.l.wrap.b32 	%r5877, %r5871, %r5872, 23;
	shf.l.wrap.b32 	%r5878, %r5872, %r5871, 23;
	mov.b64 	%rd8511, {%r5878, %r5877};
	xor.b64  	%rd8512, %rd8510, %rd8511;
	add.s64 	%rd8513, %rd8507, %rd8512;
	add.s64 	%rd8514, %rd8513, -6116909921290321640;
	add.s64 	%rd8515, %rd8514, %rd8430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5879,%dummy}, %rd8502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5880}, %rd8502;
	}
	shf.r.wrap.b32 	%r5881, %r5880, %r5879, 28;
	shf.r.wrap.b32 	%r5882, %r5879, %r5880, 28;
	mov.b64 	%rd8516, {%r5882, %r5881};
	shf.l.wrap.b32 	%r5883, %r5879, %r5880, 30;
	shf.l.wrap.b32 	%r5884, %r5880, %r5879, 30;
	mov.b64 	%rd8517, {%r5884, %r5883};
	xor.b64  	%rd8518, %rd8516, %rd8517;
	shf.l.wrap.b32 	%r5885, %r5879, %r5880, 25;
	shf.l.wrap.b32 	%r5886, %r5880, %r5879, 25;
	mov.b64 	%rd8519, {%r5886, %r5885};
	xor.b64  	%rd8520, %rd8518, %rd8519;
	and.b64  	%rd8521, %rd8502, %rd8478;
	or.b64  	%rd8522, %rd8502, %rd8478;
	and.b64  	%rd8523, %rd8522, %rd8454;
	or.b64  	%rd8524, %rd8523, %rd8521;
	add.s64 	%rd8525, %rd8524, %rd8520;
	add.s64 	%rd8526, %rd8525, %rd8514;
	xor.b64  	%rd8527, %rd8491, %rd8467;
	and.b64  	%rd8528, %rd8515, %rd8527;
	xor.b64  	%rd8529, %rd8528, %rd8467;
	add.s64 	%rd8530, %rd8443, %rd8529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5887,%dummy}, %rd8515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5888}, %rd8515;
	}
	shf.r.wrap.b32 	%r5889, %r5888, %r5887, 14;
	shf.r.wrap.b32 	%r5890, %r5887, %r5888, 14;
	mov.b64 	%rd8531, {%r5890, %r5889};
	shf.r.wrap.b32 	%r5891, %r5888, %r5887, 18;
	shf.r.wrap.b32 	%r5892, %r5887, %r5888, 18;
	mov.b64 	%rd8532, {%r5892, %r5891};
	xor.b64  	%rd8533, %rd8531, %rd8532;
	shf.l.wrap.b32 	%r5893, %r5887, %r5888, 23;
	shf.l.wrap.b32 	%r5894, %r5888, %r5887, 23;
	mov.b64 	%rd8534, {%r5894, %r5893};
	xor.b64  	%rd8535, %rd8533, %rd8534;
	add.s64 	%rd8536, %rd8530, %rd8535;
	add.s64 	%rd8537, %rd8536, 6343226172721267266;
	add.s64 	%rd8538, %rd8537, %rd8454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5895,%dummy}, %rd8526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5896}, %rd8526;
	}
	shf.r.wrap.b32 	%r5897, %r5896, %r5895, 28;
	shf.r.wrap.b32 	%r5898, %r5895, %r5896, 28;
	mov.b64 	%rd8539, {%r5898, %r5897};
	shf.l.wrap.b32 	%r5899, %r5895, %r5896, 30;
	shf.l.wrap.b32 	%r5900, %r5896, %r5895, 30;
	mov.b64 	%rd8540, {%r5900, %r5899};
	xor.b64  	%rd8541, %rd8539, %rd8540;
	shf.l.wrap.b32 	%r5901, %r5895, %r5896, 25;
	shf.l.wrap.b32 	%r5902, %r5896, %r5895, 25;
	mov.b64 	%rd8542, {%r5902, %r5901};
	xor.b64  	%rd8543, %rd8541, %rd8542;
	and.b64  	%rd8544, %rd8526, %rd8502;
	or.b64  	%rd8545, %rd8526, %rd8502;
	and.b64  	%rd8546, %rd8545, %rd8478;
	or.b64  	%rd8547, %rd8546, %rd8544;
	add.s64 	%rd8548, %rd8547, %rd8543;
	add.s64 	%rd8549, %rd8548, %rd8537;
	xor.b64  	%rd8550, %rd8515, %rd8491;
	and.b64  	%rd8551, %rd8538, %rd8550;
	xor.b64  	%rd8552, %rd8551, %rd8491;
	add.s64 	%rd8553, %rd8467, %rd8552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5903,%dummy}, %rd8538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5904}, %rd8538;
	}
	shf.r.wrap.b32 	%r5905, %r5904, %r5903, 14;
	shf.r.wrap.b32 	%r5906, %r5903, %r5904, 14;
	mov.b64 	%rd8554, {%r5906, %r5905};
	shf.r.wrap.b32 	%r5907, %r5904, %r5903, 18;
	shf.r.wrap.b32 	%r5908, %r5903, %r5904, 18;
	mov.b64 	%rd8555, {%r5908, %r5907};
	xor.b64  	%rd8556, %rd8554, %rd8555;
	shf.l.wrap.b32 	%r5909, %r5903, %r5904, 23;
	shf.l.wrap.b32 	%r5910, %r5904, %r5903, 23;
	mov.b64 	%rd8557, {%r5910, %r5909};
	xor.b64  	%rd8558, %rd8556, %rd8557;
	add.s64 	%rd8559, %rd8553, %rd8558;
	add.s64 	%rd8560, %rd8559, 1334009975649890238;
	add.s64 	%rd8561, %rd8560, %rd8478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5911,%dummy}, %rd8549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5912}, %rd8549;
	}
	shf.r.wrap.b32 	%r5913, %r5912, %r5911, 28;
	shf.r.wrap.b32 	%r5914, %r5911, %r5912, 28;
	mov.b64 	%rd8562, {%r5914, %r5913};
	shf.l.wrap.b32 	%r5915, %r5911, %r5912, 30;
	shf.l.wrap.b32 	%r5916, %r5912, %r5911, 30;
	mov.b64 	%rd8563, {%r5916, %r5915};
	xor.b64  	%rd8564, %rd8562, %rd8563;
	shf.l.wrap.b32 	%r5917, %r5911, %r5912, 25;
	shf.l.wrap.b32 	%r5918, %r5912, %r5911, 25;
	mov.b64 	%rd8565, {%r5918, %r5917};
	xor.b64  	%rd8566, %rd8564, %rd8565;
	and.b64  	%rd8567, %rd8549, %rd8526;
	or.b64  	%rd8568, %rd8549, %rd8526;
	and.b64  	%rd8569, %rd8568, %rd8502;
	or.b64  	%rd8570, %rd8569, %rd8567;
	add.s64 	%rd8571, %rd8570, %rd8566;
	add.s64 	%rd8572, %rd8571, %rd8560;
	xor.b64  	%rd8573, %rd8538, %rd8515;
	and.b64  	%rd8574, %rd8561, %rd8573;
	xor.b64  	%rd8575, %rd8574, %rd8515;
	add.s64 	%rd8576, %rd8491, %rd8575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5919,%dummy}, %rd8561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5920}, %rd8561;
	}
	shf.r.wrap.b32 	%r5921, %r5920, %r5919, 14;
	shf.r.wrap.b32 	%r5922, %r5919, %r5920, 14;
	mov.b64 	%rd8577, {%r5922, %r5921};
	shf.r.wrap.b32 	%r5923, %r5920, %r5919, 18;
	shf.r.wrap.b32 	%r5924, %r5919, %r5920, 18;
	mov.b64 	%rd8578, {%r5924, %r5923};
	xor.b64  	%rd8579, %rd8577, %rd8578;
	shf.l.wrap.b32 	%r5925, %r5919, %r5920, 23;
	shf.l.wrap.b32 	%r5926, %r5920, %r5919, 23;
	mov.b64 	%rd8580, {%r5926, %r5925};
	xor.b64  	%rd8581, %rd8579, %rd8580;
	add.s64 	%rd8582, %rd8576, %rd8581;
	add.s64 	%rd8583, %rd8582, 2608012711638119052;
	add.s64 	%rd8584, %rd8583, %rd8502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5927,%dummy}, %rd8572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5928}, %rd8572;
	}
	shf.r.wrap.b32 	%r5929, %r5928, %r5927, 28;
	shf.r.wrap.b32 	%r5930, %r5927, %r5928, 28;
	mov.b64 	%rd8585, {%r5930, %r5929};
	shf.l.wrap.b32 	%r5931, %r5927, %r5928, 30;
	shf.l.wrap.b32 	%r5932, %r5928, %r5927, 30;
	mov.b64 	%rd8586, {%r5932, %r5931};
	xor.b64  	%rd8587, %rd8585, %rd8586;
	shf.l.wrap.b32 	%r5933, %r5927, %r5928, 25;
	shf.l.wrap.b32 	%r5934, %r5928, %r5927, 25;
	mov.b64 	%rd8588, {%r5934, %r5933};
	xor.b64  	%rd8589, %rd8587, %rd8588;
	and.b64  	%rd8590, %rd8572, %rd8549;
	or.b64  	%rd8591, %rd8572, %rd8549;
	and.b64  	%rd8592, %rd8591, %rd8526;
	or.b64  	%rd8593, %rd8592, %rd8590;
	add.s64 	%rd8594, %rd8593, %rd8589;
	add.s64 	%rd8595, %rd8594, %rd8583;
	xor.b64  	%rd8596, %rd8561, %rd8538;
	and.b64  	%rd8597, %rd8584, %rd8596;
	xor.b64  	%rd8598, %rd8597, %rd8538;
	add.s64 	%rd8599, %rd8515, %rd8598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5935,%dummy}, %rd8584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5936}, %rd8584;
	}
	shf.r.wrap.b32 	%r5937, %r5936, %r5935, 14;
	shf.r.wrap.b32 	%r5938, %r5935, %r5936, 14;
	mov.b64 	%rd8600, {%r5938, %r5937};
	shf.r.wrap.b32 	%r5939, %r5936, %r5935, 18;
	shf.r.wrap.b32 	%r5940, %r5935, %r5936, 18;
	mov.b64 	%rd8601, {%r5940, %r5939};
	xor.b64  	%rd8602, %rd8600, %rd8601;
	shf.l.wrap.b32 	%r5941, %r5935, %r5936, 23;
	shf.l.wrap.b32 	%r5942, %r5936, %r5935, 23;
	mov.b64 	%rd8603, {%r5942, %r5941};
	xor.b64  	%rd8604, %rd8602, %rd8603;
	add.s64 	%rd8605, %rd8599, %rd8604;
	add.s64 	%rd8606, %rd8605, 6128411473006802146;
	add.s64 	%rd8607, %rd8606, %rd8526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5943,%dummy}, %rd8595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5944}, %rd8595;
	}
	shf.r.wrap.b32 	%r5945, %r5944, %r5943, 28;
	shf.r.wrap.b32 	%r5946, %r5943, %r5944, 28;
	mov.b64 	%rd8608, {%r5946, %r5945};
	shf.l.wrap.b32 	%r5947, %r5943, %r5944, 30;
	shf.l.wrap.b32 	%r5948, %r5944, %r5943, 30;
	mov.b64 	%rd8609, {%r5948, %r5947};
	xor.b64  	%rd8610, %rd8608, %rd8609;
	shf.l.wrap.b32 	%r5949, %r5943, %r5944, 25;
	shf.l.wrap.b32 	%r5950, %r5944, %r5943, 25;
	mov.b64 	%rd8611, {%r5950, %r5949};
	xor.b64  	%rd8612, %rd8610, %rd8611;
	and.b64  	%rd8613, %rd8595, %rd8572;
	or.b64  	%rd8614, %rd8595, %rd8572;
	and.b64  	%rd8615, %rd8614, %rd8549;
	or.b64  	%rd8616, %rd8615, %rd8613;
	add.s64 	%rd8617, %rd8616, %rd8612;
	add.s64 	%rd8618, %rd8617, %rd8606;
	xor.b64  	%rd8619, %rd8584, %rd8561;
	and.b64  	%rd8620, %rd8607, %rd8619;
	xor.b64  	%rd8621, %rd8620, %rd8561;
	add.s64 	%rd8622, %rd8538, %rd8621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5951,%dummy}, %rd8607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5952}, %rd8607;
	}
	shf.r.wrap.b32 	%r5953, %r5952, %r5951, 14;
	shf.r.wrap.b32 	%r5954, %r5951, %r5952, 14;
	mov.b64 	%rd8623, {%r5954, %r5953};
	shf.r.wrap.b32 	%r5955, %r5952, %r5951, 18;
	shf.r.wrap.b32 	%r5956, %r5951, %r5952, 18;
	mov.b64 	%rd8624, {%r5956, %r5955};
	xor.b64  	%rd8625, %rd8623, %rd8624;
	shf.l.wrap.b32 	%r5957, %r5951, %r5952, 23;
	shf.l.wrap.b32 	%r5958, %r5952, %r5951, 23;
	mov.b64 	%rd8626, {%r5958, %r5957};
	xor.b64  	%rd8627, %rd8625, %rd8626;
	add.s64 	%rd8628, %rd8622, %rd8627;
	add.s64 	%rd8629, %rd8628, 8268148722764581231;
	add.s64 	%rd8630, %rd8629, %rd8549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5959,%dummy}, %rd8618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5960}, %rd8618;
	}
	shf.r.wrap.b32 	%r5961, %r5960, %r5959, 28;
	shf.r.wrap.b32 	%r5962, %r5959, %r5960, 28;
	mov.b64 	%rd8631, {%r5962, %r5961};
	shf.l.wrap.b32 	%r5963, %r5959, %r5960, 30;
	shf.l.wrap.b32 	%r5964, %r5960, %r5959, 30;
	mov.b64 	%rd8632, {%r5964, %r5963};
	xor.b64  	%rd8633, %rd8631, %rd8632;
	shf.l.wrap.b32 	%r5965, %r5959, %r5960, 25;
	shf.l.wrap.b32 	%r5966, %r5960, %r5959, 25;
	mov.b64 	%rd8634, {%r5966, %r5965};
	xor.b64  	%rd8635, %rd8633, %rd8634;
	and.b64  	%rd8636, %rd8618, %rd8595;
	or.b64  	%rd8637, %rd8618, %rd8595;
	and.b64  	%rd8638, %rd8637, %rd8572;
	or.b64  	%rd8639, %rd8638, %rd8636;
	add.s64 	%rd8640, %rd8639, %rd8635;
	add.s64 	%rd8641, %rd8640, %rd8629;
	xor.b64  	%rd8642, %rd8607, %rd8584;
	and.b64  	%rd8643, %rd8630, %rd8642;
	xor.b64  	%rd8644, %rd8643, %rd8584;
	add.s64 	%rd8645, %rd8561, %rd8644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5967,%dummy}, %rd8630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5968}, %rd8630;
	}
	shf.r.wrap.b32 	%r5969, %r5968, %r5967, 14;
	shf.r.wrap.b32 	%r5970, %r5967, %r5968, 14;
	mov.b64 	%rd8646, {%r5970, %r5969};
	shf.r.wrap.b32 	%r5971, %r5968, %r5967, 18;
	shf.r.wrap.b32 	%r5972, %r5967, %r5968, 18;
	mov.b64 	%rd8647, {%r5972, %r5971};
	xor.b64  	%rd8648, %rd8646, %rd8647;
	shf.l.wrap.b32 	%r5973, %r5967, %r5968, 23;
	shf.l.wrap.b32 	%r5974, %r5968, %r5967, 23;
	mov.b64 	%rd8649, {%r5974, %r5973};
	xor.b64  	%rd8650, %rd8648, %rd8649;
	add.s64 	%rd8651, %rd8645, %rd8650;
	add.s64 	%rd8652, %rd8651, -9160688886553864527;
	add.s64 	%rd8653, %rd8652, %rd8572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5975,%dummy}, %rd8641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5976}, %rd8641;
	}
	shf.r.wrap.b32 	%r5977, %r5976, %r5975, 28;
	shf.r.wrap.b32 	%r5978, %r5975, %r5976, 28;
	mov.b64 	%rd8654, {%r5978, %r5977};
	shf.l.wrap.b32 	%r5979, %r5975, %r5976, 30;
	shf.l.wrap.b32 	%r5980, %r5976, %r5975, 30;
	mov.b64 	%rd8655, {%r5980, %r5979};
	xor.b64  	%rd8656, %rd8654, %rd8655;
	shf.l.wrap.b32 	%r5981, %r5975, %r5976, 25;
	shf.l.wrap.b32 	%r5982, %r5976, %r5975, 25;
	mov.b64 	%rd8657, {%r5982, %r5981};
	xor.b64  	%rd8658, %rd8656, %rd8657;
	and.b64  	%rd8659, %rd8641, %rd8618;
	or.b64  	%rd8660, %rd8641, %rd8618;
	and.b64  	%rd8661, %rd8660, %rd8595;
	or.b64  	%rd8662, %rd8661, %rd8659;
	add.s64 	%rd8663, %rd8662, %rd8658;
	add.s64 	%rd8664, %rd8663, %rd8652;
	xor.b64  	%rd8665, %rd8630, %rd8607;
	and.b64  	%rd8666, %rd8653, %rd8665;
	xor.b64  	%rd8667, %rd8666, %rd8607;
	add.s64 	%rd8668, %rd8584, %rd8667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5983,%dummy}, %rd8653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5984}, %rd8653;
	}
	shf.r.wrap.b32 	%r5985, %r5984, %r5983, 14;
	shf.r.wrap.b32 	%r5986, %r5983, %r5984, 14;
	mov.b64 	%rd8669, {%r5986, %r5985};
	shf.r.wrap.b32 	%r5987, %r5984, %r5983, 18;
	shf.r.wrap.b32 	%r5988, %r5983, %r5984, 18;
	mov.b64 	%rd8670, {%r5988, %r5987};
	xor.b64  	%rd8671, %rd8669, %rd8670;
	shf.l.wrap.b32 	%r5989, %r5983, %r5984, 23;
	shf.l.wrap.b32 	%r5990, %r5984, %r5983, 23;
	mov.b64 	%rd8672, {%r5990, %r5989};
	xor.b64  	%rd8673, %rd8671, %rd8672;
	add.s64 	%rd8674, %rd8668, %rd8673;
	add.s64 	%rd8675, %rd8674, -7215885187991268811;
	add.s64 	%rd8676, %rd8675, %rd8595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5991,%dummy}, %rd8664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5992}, %rd8664;
	}
	shf.r.wrap.b32 	%r5993, %r5992, %r5991, 28;
	shf.r.wrap.b32 	%r5994, %r5991, %r5992, 28;
	mov.b64 	%rd8677, {%r5994, %r5993};
	shf.l.wrap.b32 	%r5995, %r5991, %r5992, 30;
	shf.l.wrap.b32 	%r5996, %r5992, %r5991, 30;
	mov.b64 	%rd8678, {%r5996, %r5995};
	xor.b64  	%rd8679, %rd8677, %rd8678;
	shf.l.wrap.b32 	%r5997, %r5991, %r5992, 25;
	shf.l.wrap.b32 	%r5998, %r5992, %r5991, 25;
	mov.b64 	%rd8680, {%r5998, %r5997};
	xor.b64  	%rd8681, %rd8679, %rd8680;
	and.b64  	%rd8682, %rd8664, %rd8641;
	or.b64  	%rd8683, %rd8664, %rd8641;
	and.b64  	%rd8684, %rd8683, %rd8618;
	or.b64  	%rd8685, %rd8684, %rd8682;
	add.s64 	%rd8686, %rd8685, %rd8681;
	add.s64 	%rd8687, %rd8686, %rd8675;
	xor.b64  	%rd8688, %rd8653, %rd8630;
	and.b64  	%rd8689, %rd8676, %rd8688;
	xor.b64  	%rd8690, %rd8689, %rd8630;
	add.s64 	%rd8691, %rd8607, %rd8690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5999,%dummy}, %rd8676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6000}, %rd8676;
	}
	shf.r.wrap.b32 	%r6001, %r6000, %r5999, 14;
	shf.r.wrap.b32 	%r6002, %r5999, %r6000, 14;
	mov.b64 	%rd8692, {%r6002, %r6001};
	shf.r.wrap.b32 	%r6003, %r6000, %r5999, 18;
	shf.r.wrap.b32 	%r6004, %r5999, %r6000, 18;
	mov.b64 	%rd8693, {%r6004, %r6003};
	xor.b64  	%rd8694, %rd8692, %rd8693;
	shf.l.wrap.b32 	%r6005, %r5999, %r6000, 23;
	shf.l.wrap.b32 	%r6006, %r6000, %r5999, 23;
	mov.b64 	%rd8695, {%r6006, %r6005};
	xor.b64  	%rd8696, %rd8694, %rd8695;
	add.s64 	%rd8697, %rd8691, %rd8696;
	add.s64 	%rd8698, %rd8697, -4495734319001031532;
	add.s64 	%rd8699, %rd8698, %rd8618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6007,%dummy}, %rd8687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6008}, %rd8687;
	}
	shf.r.wrap.b32 	%r6009, %r6008, %r6007, 28;
	shf.r.wrap.b32 	%r6010, %r6007, %r6008, 28;
	mov.b64 	%rd8700, {%r6010, %r6009};
	shf.l.wrap.b32 	%r6011, %r6007, %r6008, 30;
	shf.l.wrap.b32 	%r6012, %r6008, %r6007, 30;
	mov.b64 	%rd8701, {%r6012, %r6011};
	xor.b64  	%rd8702, %rd8700, %rd8701;
	shf.l.wrap.b32 	%r6013, %r6007, %r6008, 25;
	shf.l.wrap.b32 	%r6014, %r6008, %r6007, 25;
	mov.b64 	%rd8703, {%r6014, %r6013};
	xor.b64  	%rd8704, %rd8702, %rd8703;
	and.b64  	%rd8705, %rd8687, %rd8664;
	or.b64  	%rd8706, %rd8687, %rd8664;
	and.b64  	%rd8707, %rd8706, %rd8641;
	or.b64  	%rd8708, %rd8707, %rd8705;
	add.s64 	%rd8709, %rd8708, %rd8704;
	add.s64 	%rd8710, %rd8709, %rd8698;
	mov.u64 	%rd8711, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6015}, %rd8711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6016,%dummy}, %rd8711;
	}
	shf.l.wrap.b32 	%r6017, %r6016, %r6015, 3;
	shf.l.wrap.b32 	%r6018, %r6015, %r6016, 3;
	mov.b64 	%rd8712, {%r6018, %r6017};
	shf.r.wrap.b32 	%r6019, %r6015, %r6016, 19;
	shf.r.wrap.b32 	%r6020, %r6016, %r6015, 19;
	mov.b64 	%rd8713, {%r6020, %r6019};
	xor.b64  	%rd8714, %rd8713, %rd8712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6021,%dummy}, %rd8327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6022}, %rd8327;
	}
	shf.r.wrap.b32 	%r6023, %r6022, %r6021, 1;
	shf.r.wrap.b32 	%r6024, %r6021, %r6022, 1;
	mov.b64 	%rd8715, {%r6024, %r6023};
	shf.r.wrap.b32 	%r6025, %r6022, %r6021, 8;
	shf.r.wrap.b32 	%r6026, %r6021, %r6022, 8;
	mov.b64 	%rd8716, {%r6026, %r6025};
	xor.b64  	%rd8717, %rd8715, %rd8716;
	shr.u64 	%rd8718, %rd8327, 7;
	xor.b64  	%rd8719, %rd8717, %rd8718;
	add.s64 	%rd8720, %rd8326, %rd8714;
	add.s64 	%rd9863, %rd8720, %rd8719;
	add.s64 	%rd8721, %rd9863, %rd8630;
	xor.b64  	%rd8722, %rd8676, %rd8653;
	and.b64  	%rd8723, %rd8699, %rd8722;
	xor.b64  	%rd8724, %rd8723, %rd8653;
	add.s64 	%rd8725, %rd8721, %rd8724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6027,%dummy}, %rd8699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6028}, %rd8699;
	}
	shf.r.wrap.b32 	%r6029, %r6028, %r6027, 14;
	shf.r.wrap.b32 	%r6030, %r6027, %r6028, 14;
	mov.b64 	%rd8726, {%r6030, %r6029};
	shf.r.wrap.b32 	%r6031, %r6028, %r6027, 18;
	shf.r.wrap.b32 	%r6032, %r6027, %r6028, 18;
	mov.b64 	%rd8727, {%r6032, %r6031};
	xor.b64  	%rd8728, %rd8726, %rd8727;
	shf.l.wrap.b32 	%r6033, %r6027, %r6028, 23;
	shf.l.wrap.b32 	%r6034, %r6028, %r6027, 23;
	mov.b64 	%rd8729, {%r6034, %r6033};
	xor.b64  	%rd8730, %rd8728, %rd8729;
	add.s64 	%rd8731, %rd8725, %rd8730;
	add.s64 	%rd8732, %rd8731, -1973867731355612462;
	add.s64 	%rd8733, %rd8732, %rd8641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6035,%dummy}, %rd8710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6036}, %rd8710;
	}
	shf.r.wrap.b32 	%r6037, %r6036, %r6035, 28;
	shf.r.wrap.b32 	%r6038, %r6035, %r6036, 28;
	mov.b64 	%rd8734, {%r6038, %r6037};
	shf.l.wrap.b32 	%r6039, %r6035, %r6036, 30;
	shf.l.wrap.b32 	%r6040, %r6036, %r6035, 30;
	mov.b64 	%rd8735, {%r6040, %r6039};
	xor.b64  	%rd8736, %rd8734, %rd8735;
	shf.l.wrap.b32 	%r6041, %r6035, %r6036, 25;
	shf.l.wrap.b32 	%r6042, %r6036, %r6035, 25;
	mov.b64 	%rd8737, {%r6042, %r6041};
	xor.b64  	%rd8738, %rd8736, %rd8737;
	and.b64  	%rd8739, %rd8710, %rd8687;
	or.b64  	%rd8740, %rd8710, %rd8687;
	and.b64  	%rd8741, %rd8740, %rd8664;
	or.b64  	%rd8742, %rd8741, %rd8739;
	add.s64 	%rd8743, %rd8742, %rd8738;
	add.s64 	%rd8744, %rd8743, %rd8732;
	mov.u64 	%rd8745, 1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6043}, %rd8745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6044,%dummy}, %rd8745;
	}
	shf.l.wrap.b32 	%r6045, %r6044, %r6043, 3;
	shf.l.wrap.b32 	%r6046, %r6043, %r6044, 3;
	mov.b64 	%rd8746, {%r6046, %r6045};
	shf.r.wrap.b32 	%r6047, %r6043, %r6044, 19;
	shf.r.wrap.b32 	%r6048, %r6044, %r6043, 19;
	mov.b64 	%rd8747, {%r6048, %r6047};
	xor.b64  	%rd8748, %rd8747, %rd8746;
	xor.b64  	%rd8749, %rd8748, 24;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6049,%dummy}, %rd8328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6050}, %rd8328;
	}
	shf.r.wrap.b32 	%r6051, %r6050, %r6049, 1;
	shf.r.wrap.b32 	%r6052, %r6049, %r6050, 1;
	mov.b64 	%rd8750, {%r6052, %r6051};
	shf.r.wrap.b32 	%r6053, %r6050, %r6049, 8;
	shf.r.wrap.b32 	%r6054, %r6049, %r6050, 8;
	mov.b64 	%rd8751, {%r6054, %r6053};
	xor.b64  	%rd8752, %rd8750, %rd8751;
	shr.u64 	%rd8753, %rd8328, 7;
	xor.b64  	%rd8754, %rd8752, %rd8753;
	add.s64 	%rd8755, %rd8749, %rd8327;
	add.s64 	%rd9864, %rd8755, %rd8754;
	st.local.v2.u64 	[%rd1], {%rd9863, %rd9864};
	add.s64 	%rd8756, %rd9864, %rd8653;
	xor.b64  	%rd8757, %rd8699, %rd8676;
	and.b64  	%rd8758, %rd8733, %rd8757;
	xor.b64  	%rd8759, %rd8758, %rd8676;
	add.s64 	%rd8760, %rd8756, %rd8759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6055,%dummy}, %rd8733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6056}, %rd8733;
	}
	shf.r.wrap.b32 	%r6057, %r6056, %r6055, 14;
	shf.r.wrap.b32 	%r6058, %r6055, %r6056, 14;
	mov.b64 	%rd8761, {%r6058, %r6057};
	shf.r.wrap.b32 	%r6059, %r6056, %r6055, 18;
	shf.r.wrap.b32 	%r6060, %r6055, %r6056, 18;
	mov.b64 	%rd8762, {%r6060, %r6059};
	xor.b64  	%rd8763, %rd8761, %rd8762;
	shf.l.wrap.b32 	%r6061, %r6055, %r6056, 23;
	shf.l.wrap.b32 	%r6062, %r6056, %r6055, 23;
	mov.b64 	%rd8764, {%r6062, %r6061};
	xor.b64  	%rd8765, %rd8763, %rd8764;
	add.s64 	%rd8766, %rd8760, %rd8765;
	add.s64 	%rd8767, %rd8766, -1171420211273849373;
	add.s64 	%rd8768, %rd8767, %rd8664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6063,%dummy}, %rd8744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6064}, %rd8744;
	}
	shf.r.wrap.b32 	%r6065, %r6064, %r6063, 28;
	shf.r.wrap.b32 	%r6066, %r6063, %r6064, 28;
	mov.b64 	%rd8769, {%r6066, %r6065};
	shf.l.wrap.b32 	%r6067, %r6063, %r6064, 30;
	shf.l.wrap.b32 	%r6068, %r6064, %r6063, 30;
	mov.b64 	%rd8770, {%r6068, %r6067};
	xor.b64  	%rd8771, %rd8769, %rd8770;
	shf.l.wrap.b32 	%r6069, %r6063, %r6064, 25;
	shf.l.wrap.b32 	%r6070, %r6064, %r6063, 25;
	mov.b64 	%rd8772, {%r6070, %r6069};
	xor.b64  	%rd8773, %rd8771, %rd8772;
	and.b64  	%rd8774, %rd8744, %rd8710;
	or.b64  	%rd8775, %rd8744, %rd8710;
	and.b64  	%rd8776, %rd8775, %rd8687;
	or.b64  	%rd8777, %rd8776, %rd8774;
	add.s64 	%rd8778, %rd8777, %rd8773;
	add.s64 	%rd8779, %rd8778, %rd8767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6071,%dummy}, %rd9863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6072}, %rd9863;
	}
	shf.r.wrap.b32 	%r6073, %r6072, %r6071, 19;
	shf.r.wrap.b32 	%r6074, %r6071, %r6072, 19;
	mov.b64 	%rd8780, {%r6074, %r6073};
	shf.l.wrap.b32 	%r6075, %r6071, %r6072, 3;
	shf.l.wrap.b32 	%r6076, %r6072, %r6071, 3;
	mov.b64 	%rd8781, {%r6076, %r6075};
	xor.b64  	%rd8782, %rd8780, %rd8781;
	shr.u64 	%rd8783, %rd9863, 6;
	xor.b64  	%rd8784, %rd8782, %rd8783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6077,%dummy}, %rd8329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6078}, %rd8329;
	}
	shf.r.wrap.b32 	%r6079, %r6078, %r6077, 1;
	shf.r.wrap.b32 	%r6080, %r6077, %r6078, 1;
	mov.b64 	%rd8785, {%r6080, %r6079};
	shf.r.wrap.b32 	%r6081, %r6078, %r6077, 8;
	shf.r.wrap.b32 	%r6082, %r6077, %r6078, 8;
	mov.b64 	%rd8786, {%r6082, %r6081};
	xor.b64  	%rd8787, %rd8785, %rd8786;
	shr.u64 	%rd8788, %rd8329, 7;
	xor.b64  	%rd8789, %rd8787, %rd8788;
	add.s64 	%rd8790, %rd8784, %rd8328;
	add.s64 	%rd9860, %rd8790, %rd8789;
	add.s64 	%rd8791, %rd9860, %rd8676;
	xor.b64  	%rd8792, %rd8733, %rd8699;
	and.b64  	%rd8793, %rd8768, %rd8792;
	xor.b64  	%rd8794, %rd8793, %rd8699;
	add.s64 	%rd8795, %rd8791, %rd8794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6083,%dummy}, %rd8768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6084}, %rd8768;
	}
	shf.r.wrap.b32 	%r6085, %r6084, %r6083, 14;
	shf.r.wrap.b32 	%r6086, %r6083, %r6084, 14;
	mov.b64 	%rd8796, {%r6086, %r6085};
	shf.r.wrap.b32 	%r6087, %r6084, %r6083, 18;
	shf.r.wrap.b32 	%r6088, %r6083, %r6084, 18;
	mov.b64 	%rd8797, {%r6088, %r6087};
	xor.b64  	%rd8798, %rd8796, %rd8797;
	shf.l.wrap.b32 	%r6089, %r6083, %r6084, 23;
	shf.l.wrap.b32 	%r6090, %r6084, %r6083, 23;
	mov.b64 	%rd8799, {%r6090, %r6089};
	xor.b64  	%rd8800, %rd8798, %rd8799;
	add.s64 	%rd8801, %rd8795, %rd8800;
	add.s64 	%rd8802, %rd8801, 1135362057144423861;
	add.s64 	%rd8803, %rd8802, %rd8687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6091,%dummy}, %rd8779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6092}, %rd8779;
	}
	shf.r.wrap.b32 	%r6093, %r6092, %r6091, 28;
	shf.r.wrap.b32 	%r6094, %r6091, %r6092, 28;
	mov.b64 	%rd8804, {%r6094, %r6093};
	shf.l.wrap.b32 	%r6095, %r6091, %r6092, 30;
	shf.l.wrap.b32 	%r6096, %r6092, %r6091, 30;
	mov.b64 	%rd8805, {%r6096, %r6095};
	xor.b64  	%rd8806, %rd8804, %rd8805;
	shf.l.wrap.b32 	%r6097, %r6091, %r6092, 25;
	shf.l.wrap.b32 	%r6098, %r6092, %r6091, 25;
	mov.b64 	%rd8807, {%r6098, %r6097};
	xor.b64  	%rd8808, %rd8806, %rd8807;
	and.b64  	%rd8809, %rd8779, %rd8744;
	or.b64  	%rd8810, %rd8779, %rd8744;
	and.b64  	%rd8811, %rd8810, %rd8710;
	or.b64  	%rd8812, %rd8811, %rd8809;
	add.s64 	%rd8813, %rd8812, %rd8808;
	add.s64 	%rd8814, %rd8813, %rd8802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6099,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6100}, %rd9864;
	}
	shf.r.wrap.b32 	%r6101, %r6100, %r6099, 19;
	shf.r.wrap.b32 	%r6102, %r6099, %r6100, 19;
	mov.b64 	%rd8815, {%r6102, %r6101};
	shf.l.wrap.b32 	%r6103, %r6099, %r6100, 3;
	shf.l.wrap.b32 	%r6104, %r6100, %r6099, 3;
	mov.b64 	%rd8816, {%r6104, %r6103};
	xor.b64  	%rd8817, %rd8815, %rd8816;
	shr.u64 	%rd8818, %rd9864, 6;
	xor.b64  	%rd8819, %rd8817, %rd8818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6105,%dummy}, %rd8331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6106}, %rd8331;
	}
	shf.r.wrap.b32 	%r6107, %r6106, %r6105, 1;
	shf.r.wrap.b32 	%r6108, %r6105, %r6106, 1;
	mov.b64 	%rd8820, {%r6108, %r6107};
	shf.r.wrap.b32 	%r6109, %r6106, %r6105, 8;
	shf.r.wrap.b32 	%r6110, %r6105, %r6106, 8;
	mov.b64 	%rd8821, {%r6110, %r6109};
	xor.b64  	%rd8822, %rd8820, %rd8821;
	shr.u64 	%rd8823, %rd8331, 7;
	xor.b64  	%rd8824, %rd8822, %rd8823;
	add.s64 	%rd8825, %rd8819, %rd8329;
	add.s64 	%rd9858, %rd8825, %rd8824;
	st.local.v2.u64 	[%rd1+16], {%rd9860, %rd9858};
	add.s64 	%rd8826, %rd9858, %rd8699;
	xor.b64  	%rd8827, %rd8768, %rd8733;
	and.b64  	%rd8828, %rd8803, %rd8827;
	xor.b64  	%rd8829, %rd8828, %rd8733;
	add.s64 	%rd8830, %rd8826, %rd8829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6111,%dummy}, %rd8803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6112}, %rd8803;
	}
	shf.r.wrap.b32 	%r6113, %r6112, %r6111, 14;
	shf.r.wrap.b32 	%r6114, %r6111, %r6112, 14;
	mov.b64 	%rd8831, {%r6114, %r6113};
	shf.r.wrap.b32 	%r6115, %r6112, %r6111, 18;
	shf.r.wrap.b32 	%r6116, %r6111, %r6112, 18;
	mov.b64 	%rd8832, {%r6116, %r6115};
	xor.b64  	%rd8833, %rd8831, %rd8832;
	shf.l.wrap.b32 	%r6117, %r6111, %r6112, 23;
	shf.l.wrap.b32 	%r6118, %r6112, %r6111, 23;
	mov.b64 	%rd8834, {%r6118, %r6117};
	xor.b64  	%rd8835, %rd8833, %rd8834;
	add.s64 	%rd8836, %rd8830, %rd8835;
	add.s64 	%rd8837, %rd8836, 2597628984639134821;
	add.s64 	%rd8838, %rd8837, %rd8710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6119,%dummy}, %rd8814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6120}, %rd8814;
	}
	shf.r.wrap.b32 	%r6121, %r6120, %r6119, 28;
	shf.r.wrap.b32 	%r6122, %r6119, %r6120, 28;
	mov.b64 	%rd8839, {%r6122, %r6121};
	shf.l.wrap.b32 	%r6123, %r6119, %r6120, 30;
	shf.l.wrap.b32 	%r6124, %r6120, %r6119, 30;
	mov.b64 	%rd8840, {%r6124, %r6123};
	xor.b64  	%rd8841, %rd8839, %rd8840;
	shf.l.wrap.b32 	%r6125, %r6119, %r6120, 25;
	shf.l.wrap.b32 	%r6126, %r6120, %r6119, 25;
	mov.b64 	%rd8842, {%r6126, %r6125};
	xor.b64  	%rd8843, %rd8841, %rd8842;
	and.b64  	%rd8844, %rd8814, %rd8779;
	or.b64  	%rd8845, %rd8814, %rd8779;
	and.b64  	%rd8846, %rd8845, %rd8744;
	or.b64  	%rd8847, %rd8846, %rd8844;
	add.s64 	%rd8848, %rd8847, %rd8843;
	add.s64 	%rd8849, %rd8848, %rd8837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6127,%dummy}, %rd9860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6128}, %rd9860;
	}
	shf.r.wrap.b32 	%r6129, %r6128, %r6127, 19;
	shf.r.wrap.b32 	%r6130, %r6127, %r6128, 19;
	mov.b64 	%rd8850, {%r6130, %r6129};
	shf.l.wrap.b32 	%r6131, %r6127, %r6128, 3;
	shf.l.wrap.b32 	%r6132, %r6128, %r6127, 3;
	mov.b64 	%rd8851, {%r6132, %r6131};
	xor.b64  	%rd8852, %rd8850, %rd8851;
	shr.u64 	%rd8853, %rd9860, 6;
	xor.b64  	%rd8854, %rd8852, %rd8853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6133,%dummy}, %rd8332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6134}, %rd8332;
	}
	shf.r.wrap.b32 	%r6135, %r6134, %r6133, 1;
	shf.r.wrap.b32 	%r6136, %r6133, %r6134, 1;
	mov.b64 	%rd8855, {%r6136, %r6135};
	shf.r.wrap.b32 	%r6137, %r6134, %r6133, 8;
	shf.r.wrap.b32 	%r6138, %r6133, %r6134, 8;
	mov.b64 	%rd8856, {%r6138, %r6137};
	xor.b64  	%rd8857, %rd8855, %rd8856;
	shr.u64 	%rd8858, %rd8332, 7;
	xor.b64  	%rd8859, %rd8857, %rd8858;
	add.s64 	%rd8860, %rd8854, %rd8331;
	add.s64 	%rd9856, %rd8860, %rd8859;
	add.s64 	%rd8861, %rd9856, %rd8733;
	xor.b64  	%rd8862, %rd8803, %rd8768;
	and.b64  	%rd8863, %rd8838, %rd8862;
	xor.b64  	%rd8864, %rd8863, %rd8768;
	add.s64 	%rd8865, %rd8861, %rd8864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6139,%dummy}, %rd8838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6140}, %rd8838;
	}
	shf.r.wrap.b32 	%r6141, %r6140, %r6139, 14;
	shf.r.wrap.b32 	%r6142, %r6139, %r6140, 14;
	mov.b64 	%rd8866, {%r6142, %r6141};
	shf.r.wrap.b32 	%r6143, %r6140, %r6139, 18;
	shf.r.wrap.b32 	%r6144, %r6139, %r6140, 18;
	mov.b64 	%rd8867, {%r6144, %r6143};
	xor.b64  	%rd8868, %rd8866, %rd8867;
	shf.l.wrap.b32 	%r6145, %r6139, %r6140, 23;
	shf.l.wrap.b32 	%r6146, %r6140, %r6139, 23;
	mov.b64 	%rd8869, {%r6146, %r6145};
	xor.b64  	%rd8870, %rd8868, %rd8869;
	add.s64 	%rd8871, %rd8865, %rd8870;
	add.s64 	%rd8872, %rd8871, 3308224258029322869;
	add.s64 	%rd8873, %rd8872, %rd8744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6147,%dummy}, %rd8849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6148}, %rd8849;
	}
	shf.r.wrap.b32 	%r6149, %r6148, %r6147, 28;
	shf.r.wrap.b32 	%r6150, %r6147, %r6148, 28;
	mov.b64 	%rd8874, {%r6150, %r6149};
	shf.l.wrap.b32 	%r6151, %r6147, %r6148, 30;
	shf.l.wrap.b32 	%r6152, %r6148, %r6147, 30;
	mov.b64 	%rd8875, {%r6152, %r6151};
	xor.b64  	%rd8876, %rd8874, %rd8875;
	shf.l.wrap.b32 	%r6153, %r6147, %r6148, 25;
	shf.l.wrap.b32 	%r6154, %r6148, %r6147, 25;
	mov.b64 	%rd8877, {%r6154, %r6153};
	xor.b64  	%rd8878, %rd8876, %rd8877;
	and.b64  	%rd8879, %rd8849, %rd8814;
	or.b64  	%rd8880, %rd8849, %rd8814;
	and.b64  	%rd8881, %rd8880, %rd8779;
	or.b64  	%rd8882, %rd8881, %rd8879;
	add.s64 	%rd8883, %rd8882, %rd8878;
	add.s64 	%rd8884, %rd8883, %rd8872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6155,%dummy}, %rd9858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6156}, %rd9858;
	}
	shf.r.wrap.b32 	%r6157, %r6156, %r6155, 19;
	shf.r.wrap.b32 	%r6158, %r6155, %r6156, 19;
	mov.b64 	%rd8885, {%r6158, %r6157};
	shf.l.wrap.b32 	%r6159, %r6155, %r6156, 3;
	shf.l.wrap.b32 	%r6160, %r6156, %r6155, 3;
	mov.b64 	%rd8886, {%r6160, %r6159};
	xor.b64  	%rd8887, %rd8885, %rd8886;
	shr.u64 	%rd8888, %rd9858, 6;
	xor.b64  	%rd8889, %rd8887, %rd8888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6161,%dummy}, %rd8333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6162}, %rd8333;
	}
	shf.r.wrap.b32 	%r6163, %r6162, %r6161, 1;
	shf.r.wrap.b32 	%r6164, %r6161, %r6162, 1;
	mov.b64 	%rd8890, {%r6164, %r6163};
	shf.r.wrap.b32 	%r6165, %r6162, %r6161, 8;
	shf.r.wrap.b32 	%r6166, %r6161, %r6162, 8;
	mov.b64 	%rd8891, {%r6166, %r6165};
	xor.b64  	%rd8892, %rd8890, %rd8891;
	shr.u64 	%rd8893, %rd8333, 7;
	xor.b64  	%rd8894, %rd8892, %rd8893;
	add.s64 	%rd8895, %rd8889, %rd8332;
	add.s64 	%rd9854, %rd8895, %rd8894;
	st.local.v2.u64 	[%rd1+32], {%rd9856, %rd9854};
	add.s64 	%rd8896, %rd9854, %rd8768;
	xor.b64  	%rd8897, %rd8838, %rd8803;
	and.b64  	%rd8898, %rd8873, %rd8897;
	xor.b64  	%rd8899, %rd8898, %rd8803;
	add.s64 	%rd8900, %rd8896, %rd8899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6167,%dummy}, %rd8873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6168}, %rd8873;
	}
	shf.r.wrap.b32 	%r6169, %r6168, %r6167, 14;
	shf.r.wrap.b32 	%r6170, %r6167, %r6168, 14;
	mov.b64 	%rd8901, {%r6170, %r6169};
	shf.r.wrap.b32 	%r6171, %r6168, %r6167, 18;
	shf.r.wrap.b32 	%r6172, %r6167, %r6168, 18;
	mov.b64 	%rd8902, {%r6172, %r6171};
	xor.b64  	%rd8903, %rd8901, %rd8902;
	shf.l.wrap.b32 	%r6173, %r6167, %r6168, 23;
	shf.l.wrap.b32 	%r6174, %r6168, %r6167, 23;
	mov.b64 	%rd8904, {%r6174, %r6173};
	xor.b64  	%rd8905, %rd8903, %rd8904;
	add.s64 	%rd8906, %rd8900, %rd8905;
	add.s64 	%rd8907, %rd8906, 5365058923640841347;
	add.s64 	%rd8908, %rd8907, %rd8779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6175,%dummy}, %rd8884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6176}, %rd8884;
	}
	shf.r.wrap.b32 	%r6177, %r6176, %r6175, 28;
	shf.r.wrap.b32 	%r6178, %r6175, %r6176, 28;
	mov.b64 	%rd8909, {%r6178, %r6177};
	shf.l.wrap.b32 	%r6179, %r6175, %r6176, 30;
	shf.l.wrap.b32 	%r6180, %r6176, %r6175, 30;
	mov.b64 	%rd8910, {%r6180, %r6179};
	xor.b64  	%rd8911, %rd8909, %rd8910;
	shf.l.wrap.b32 	%r6181, %r6175, %r6176, 25;
	shf.l.wrap.b32 	%r6182, %r6176, %r6175, 25;
	mov.b64 	%rd8912, {%r6182, %r6181};
	xor.b64  	%rd8913, %rd8911, %rd8912;
	and.b64  	%rd8914, %rd8884, %rd8849;
	or.b64  	%rd8915, %rd8884, %rd8849;
	and.b64  	%rd8916, %rd8915, %rd8814;
	or.b64  	%rd8917, %rd8916, %rd8914;
	add.s64 	%rd8918, %rd8917, %rd8913;
	add.s64 	%rd8919, %rd8918, %rd8907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6183,%dummy}, %rd9856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6184}, %rd9856;
	}
	shf.r.wrap.b32 	%r6185, %r6184, %r6183, 19;
	shf.r.wrap.b32 	%r6186, %r6183, %r6184, 19;
	mov.b64 	%rd8920, {%r6186, %r6185};
	shf.l.wrap.b32 	%r6187, %r6183, %r6184, 3;
	shf.l.wrap.b32 	%r6188, %r6184, %r6183, 3;
	mov.b64 	%rd8921, {%r6188, %r6187};
	xor.b64  	%rd8922, %rd8920, %rd8921;
	shr.u64 	%rd8923, %rd9856, 6;
	xor.b64  	%rd8924, %rd8922, %rd8923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6189,%dummy}, %rd8334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6190}, %rd8334;
	}
	shf.r.wrap.b32 	%r6191, %r6190, %r6189, 1;
	shf.r.wrap.b32 	%r6192, %r6189, %r6190, 1;
	mov.b64 	%rd8925, {%r6192, %r6191};
	shf.r.wrap.b32 	%r6193, %r6190, %r6189, 8;
	shf.r.wrap.b32 	%r6194, %r6189, %r6190, 8;
	mov.b64 	%rd8926, {%r6194, %r6193};
	xor.b64  	%rd8927, %rd8925, %rd8926;
	shr.u64 	%rd8928, %rd8334, 7;
	xor.b64  	%rd8929, %rd8927, %rd8928;
	add.s64 	%rd8930, %rd8924, %rd8333;
	add.s64 	%rd8931, %rd8930, %rd8929;
	add.s64 	%rd9852, %rd8931, 1536;
	add.s64 	%rd8932, %rd9852, %rd8803;
	xor.b64  	%rd8933, %rd8873, %rd8838;
	and.b64  	%rd8934, %rd8908, %rd8933;
	xor.b64  	%rd8935, %rd8934, %rd8838;
	add.s64 	%rd8936, %rd8932, %rd8935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6195,%dummy}, %rd8908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6196}, %rd8908;
	}
	shf.r.wrap.b32 	%r6197, %r6196, %r6195, 14;
	shf.r.wrap.b32 	%r6198, %r6195, %r6196, 14;
	mov.b64 	%rd8937, {%r6198, %r6197};
	shf.r.wrap.b32 	%r6199, %r6196, %r6195, 18;
	shf.r.wrap.b32 	%r6200, %r6195, %r6196, 18;
	mov.b64 	%rd8938, {%r6200, %r6199};
	xor.b64  	%rd8939, %rd8937, %rd8938;
	shf.l.wrap.b32 	%r6201, %r6195, %r6196, 23;
	shf.l.wrap.b32 	%r6202, %r6196, %r6195, 23;
	mov.b64 	%rd8940, {%r6202, %r6201};
	xor.b64  	%rd8941, %rd8939, %rd8940;
	add.s64 	%rd8942, %rd8936, %rd8941;
	add.s64 	%rd8943, %rd8942, 6679025012923562964;
	add.s64 	%rd8944, %rd8943, %rd8814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6203,%dummy}, %rd8919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6204}, %rd8919;
	}
	shf.r.wrap.b32 	%r6205, %r6204, %r6203, 28;
	shf.r.wrap.b32 	%r6206, %r6203, %r6204, 28;
	mov.b64 	%rd8945, {%r6206, %r6205};
	shf.l.wrap.b32 	%r6207, %r6203, %r6204, 30;
	shf.l.wrap.b32 	%r6208, %r6204, %r6203, 30;
	mov.b64 	%rd8946, {%r6208, %r6207};
	xor.b64  	%rd8947, %rd8945, %rd8946;
	shf.l.wrap.b32 	%r6209, %r6203, %r6204, 25;
	shf.l.wrap.b32 	%r6210, %r6204, %r6203, 25;
	mov.b64 	%rd8948, {%r6210, %r6209};
	xor.b64  	%rd8949, %rd8947, %rd8948;
	and.b64  	%rd8950, %rd8919, %rd8884;
	or.b64  	%rd8951, %rd8919, %rd8884;
	and.b64  	%rd8952, %rd8951, %rd8849;
	or.b64  	%rd8953, %rd8952, %rd8950;
	add.s64 	%rd8954, %rd8953, %rd8949;
	add.s64 	%rd8955, %rd8954, %rd8943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6211,%dummy}, %rd9854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6212}, %rd9854;
	}
	shf.r.wrap.b32 	%r6213, %r6212, %r6211, 19;
	shf.r.wrap.b32 	%r6214, %r6211, %r6212, 19;
	mov.b64 	%rd8956, {%r6214, %r6213};
	shf.l.wrap.b32 	%r6215, %r6211, %r6212, 3;
	shf.l.wrap.b32 	%r6216, %r6212, %r6211, 3;
	mov.b64 	%rd8957, {%r6216, %r6215};
	xor.b64  	%rd8958, %rd8956, %rd8957;
	shr.u64 	%rd8959, %rd9854, 6;
	xor.b64  	%rd8960, %rd8958, %rd8959;
	mov.u64 	%rd8961, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6217,%dummy}, %rd8961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6218}, %rd8961;
	}
	shf.r.wrap.b32 	%r6219, %r6218, %r6217, 8;
	shf.r.wrap.b32 	%r6220, %r6217, %r6218, 8;
	mov.b64 	%rd8962, {%r6220, %r6219};
	shf.r.wrap.b32 	%r6221, %r6218, %r6217, 1;
	shf.r.wrap.b32 	%r6222, %r6217, %r6218, 1;
	mov.b64 	%rd8963, {%r6222, %r6221};
	xor.b64  	%rd8964, %rd8963, %rd8962;
	xor.b64  	%rd8965, %rd8964, 72057594037927936;
	add.s64 	%rd8966, %rd8960, %rd8334;
	add.s64 	%rd8967, %rd8966, %rd9863;
	add.s64 	%rd9851, %rd8967, %rd8965;
	st.local.v2.u64 	[%rd1+48], {%rd9852, %rd9851};
	add.s64 	%rd8968, %rd9851, %rd8838;
	xor.b64  	%rd8969, %rd8908, %rd8873;
	and.b64  	%rd8970, %rd8944, %rd8969;
	xor.b64  	%rd8971, %rd8970, %rd8873;
	add.s64 	%rd8972, %rd8968, %rd8971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6223,%dummy}, %rd8944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6224}, %rd8944;
	}
	shf.r.wrap.b32 	%r6225, %r6224, %r6223, 14;
	shf.r.wrap.b32 	%r6226, %r6223, %r6224, 14;
	mov.b64 	%rd8973, {%r6226, %r6225};
	shf.r.wrap.b32 	%r6227, %r6224, %r6223, 18;
	shf.r.wrap.b32 	%r6228, %r6223, %r6224, 18;
	mov.b64 	%rd8974, {%r6228, %r6227};
	xor.b64  	%rd8975, %rd8973, %rd8974;
	shf.l.wrap.b32 	%r6229, %r6223, %r6224, 23;
	shf.l.wrap.b32 	%r6230, %r6224, %r6223, 23;
	mov.b64 	%rd8976, {%r6230, %r6229};
	xor.b64  	%rd8977, %rd8975, %rd8976;
	add.s64 	%rd8978, %rd8972, %rd8977;
	add.s64 	%rd8979, %rd8978, 8573033837759648693;
	add.s64 	%rd8980, %rd8979, %rd8849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6231,%dummy}, %rd8955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6232}, %rd8955;
	}
	shf.r.wrap.b32 	%r6233, %r6232, %r6231, 28;
	shf.r.wrap.b32 	%r6234, %r6231, %r6232, 28;
	mov.b64 	%rd8981, {%r6234, %r6233};
	shf.l.wrap.b32 	%r6235, %r6231, %r6232, 30;
	shf.l.wrap.b32 	%r6236, %r6232, %r6231, 30;
	mov.b64 	%rd8982, {%r6236, %r6235};
	xor.b64  	%rd8983, %rd8981, %rd8982;
	shf.l.wrap.b32 	%r6237, %r6231, %r6232, 25;
	shf.l.wrap.b32 	%r6238, %r6232, %r6231, 25;
	mov.b64 	%rd8984, {%r6238, %r6237};
	xor.b64  	%rd8985, %rd8983, %rd8984;
	and.b64  	%rd8986, %rd8955, %rd8919;
	or.b64  	%rd8987, %rd8955, %rd8919;
	and.b64  	%rd8988, %rd8987, %rd8884;
	or.b64  	%rd8989, %rd8988, %rd8986;
	add.s64 	%rd8990, %rd8989, %rd8985;
	add.s64 	%rd8991, %rd8990, %rd8979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6239,%dummy}, %rd9852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6240}, %rd9852;
	}
	shf.r.wrap.b32 	%r6241, %r6240, %r6239, 19;
	shf.r.wrap.b32 	%r6242, %r6239, %r6240, 19;
	mov.b64 	%rd8992, {%r6242, %r6241};
	shf.l.wrap.b32 	%r6243, %r6239, %r6240, 3;
	shf.l.wrap.b32 	%r6244, %r6240, %r6239, 3;
	mov.b64 	%rd8993, {%r6244, %r6243};
	xor.b64  	%rd8994, %rd8992, %rd8993;
	shr.u64 	%rd8995, %rd9852, 6;
	xor.b64  	%rd8996, %rd8994, %rd8995;
	shf.r.wrap.b32 	%r6245, %r6015, %r6016, 8;
	shf.r.wrap.b32 	%r6246, %r6016, %r6015, 8;
	mov.b64 	%rd8997, {%r6246, %r6245};
	shf.r.wrap.b32 	%r6247, %r6015, %r6016, 1;
	shf.r.wrap.b32 	%r6248, %r6016, %r6015, 1;
	mov.b64 	%rd8998, {%r6248, %r6247};
	xor.b64  	%rd8999, %rd8998, %rd8997;
	xor.b64  	%rd9000, %rd8999, -9223372036854775808;
	add.s64 	%rd9001, %rd9000, %rd9864;
	add.s64 	%rd9850, %rd9001, %rd8996;
	add.s64 	%rd9002, %rd9850, %rd8873;
	xor.b64  	%rd9003, %rd8944, %rd8908;
	and.b64  	%rd9004, %rd8980, %rd9003;
	xor.b64  	%rd9005, %rd9004, %rd8908;
	add.s64 	%rd9006, %rd9002, %rd9005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6249,%dummy}, %rd8980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6250}, %rd8980;
	}
	shf.r.wrap.b32 	%r6251, %r6250, %r6249, 14;
	shf.r.wrap.b32 	%r6252, %r6249, %r6250, 14;
	mov.b64 	%rd9007, {%r6252, %r6251};
	shf.r.wrap.b32 	%r6253, %r6250, %r6249, 18;
	shf.r.wrap.b32 	%r6254, %r6249, %r6250, 18;
	mov.b64 	%rd9008, {%r6254, %r6253};
	xor.b64  	%rd9009, %rd9007, %rd9008;
	shf.l.wrap.b32 	%r6255, %r6249, %r6250, 23;
	shf.l.wrap.b32 	%r6256, %r6250, %r6249, 23;
	mov.b64 	%rd9010, {%r6256, %r6255};
	xor.b64  	%rd9011, %rd9009, %rd9010;
	add.s64 	%rd9012, %rd9006, %rd9011;
	add.s64 	%rd9013, %rd9012, -7476448914759557205;
	add.s64 	%rd9014, %rd9013, %rd8884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6257,%dummy}, %rd8991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6258}, %rd8991;
	}
	shf.r.wrap.b32 	%r6259, %r6258, %r6257, 28;
	shf.r.wrap.b32 	%r6260, %r6257, %r6258, 28;
	mov.b64 	%rd9015, {%r6260, %r6259};
	shf.l.wrap.b32 	%r6261, %r6257, %r6258, 30;
	shf.l.wrap.b32 	%r6262, %r6258, %r6257, 30;
	mov.b64 	%rd9016, {%r6262, %r6261};
	xor.b64  	%rd9017, %rd9015, %rd9016;
	shf.l.wrap.b32 	%r6263, %r6257, %r6258, 25;
	shf.l.wrap.b32 	%r6264, %r6258, %r6257, 25;
	mov.b64 	%rd9018, {%r6264, %r6263};
	xor.b64  	%rd9019, %rd9017, %rd9018;
	and.b64  	%rd9020, %rd8991, %rd8955;
	or.b64  	%rd9021, %rd8991, %rd8955;
	and.b64  	%rd9022, %rd9021, %rd8919;
	or.b64  	%rd9023, %rd9022, %rd9020;
	add.s64 	%rd9024, %rd9023, %rd9019;
	add.s64 	%rd9025, %rd9024, %rd9013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6265,%dummy}, %rd9851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6266}, %rd9851;
	}
	shf.r.wrap.b32 	%r6267, %r6266, %r6265, 19;
	shf.r.wrap.b32 	%r6268, %r6265, %r6266, 19;
	mov.b64 	%rd9026, {%r6268, %r6267};
	shf.l.wrap.b32 	%r6269, %r6265, %r6266, 3;
	shf.l.wrap.b32 	%r6270, %r6266, %r6265, 3;
	mov.b64 	%rd9027, {%r6270, %r6269};
	xor.b64  	%rd9028, %rd9026, %rd9027;
	shr.u64 	%rd9029, %rd9851, 6;
	xor.b64  	%rd9030, %rd9028, %rd9029;
	add.s64 	%rd9031, %rd9860, %rd8999;
	add.s64 	%rd9862, %rd9031, %rd9030;
	st.local.v2.u64 	[%rd1+64], {%rd9850, %rd9862};
	add.s64 	%rd9032, %rd9862, %rd8908;
	xor.b64  	%rd9033, %rd8980, %rd8944;
	and.b64  	%rd9034, %rd9014, %rd9033;
	xor.b64  	%rd9035, %rd9034, %rd8944;
	add.s64 	%rd9036, %rd9032, %rd9035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6271,%dummy}, %rd9014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6272}, %rd9014;
	}
	shf.r.wrap.b32 	%r6273, %r6272, %r6271, 14;
	shf.r.wrap.b32 	%r6274, %r6271, %r6272, 14;
	mov.b64 	%rd9037, {%r6274, %r6273};
	shf.r.wrap.b32 	%r6275, %r6272, %r6271, 18;
	shf.r.wrap.b32 	%r6276, %r6271, %r6272, 18;
	mov.b64 	%rd9038, {%r6276, %r6275};
	xor.b64  	%rd9039, %rd9037, %rd9038;
	shf.l.wrap.b32 	%r6277, %r6271, %r6272, 23;
	shf.l.wrap.b32 	%r6278, %r6272, %r6271, 23;
	mov.b64 	%rd9040, {%r6278, %r6277};
	xor.b64  	%rd9041, %rd9039, %rd9040;
	add.s64 	%rd9042, %rd9036, %rd9041;
	add.s64 	%rd9043, %rd9042, -6327057829258317296;
	add.s64 	%rd9044, %rd9043, %rd8919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6279,%dummy}, %rd9025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6280}, %rd9025;
	}
	shf.r.wrap.b32 	%r6281, %r6280, %r6279, 28;
	shf.r.wrap.b32 	%r6282, %r6279, %r6280, 28;
	mov.b64 	%rd9045, {%r6282, %r6281};
	shf.l.wrap.b32 	%r6283, %r6279, %r6280, 30;
	shf.l.wrap.b32 	%r6284, %r6280, %r6279, 30;
	mov.b64 	%rd9046, {%r6284, %r6283};
	xor.b64  	%rd9047, %rd9045, %rd9046;
	shf.l.wrap.b32 	%r6285, %r6279, %r6280, 25;
	shf.l.wrap.b32 	%r6286, %r6280, %r6279, 25;
	mov.b64 	%rd9048, {%r6286, %r6285};
	xor.b64  	%rd9049, %rd9047, %rd9048;
	and.b64  	%rd9050, %rd9025, %rd8991;
	or.b64  	%rd9051, %rd9025, %rd8991;
	and.b64  	%rd9052, %rd9051, %rd8955;
	or.b64  	%rd9053, %rd9052, %rd9050;
	add.s64 	%rd9054, %rd9053, %rd9049;
	add.s64 	%rd9055, %rd9054, %rd9043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6287,%dummy}, %rd9850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6288}, %rd9850;
	}
	shf.r.wrap.b32 	%r6289, %r6288, %r6287, 19;
	shf.r.wrap.b32 	%r6290, %r6287, %r6288, 19;
	mov.b64 	%rd9056, {%r6290, %r6289};
	shf.l.wrap.b32 	%r6291, %r6287, %r6288, 3;
	shf.l.wrap.b32 	%r6292, %r6288, %r6287, 3;
	mov.b64 	%rd9057, {%r6292, %r6291};
	xor.b64  	%rd9058, %rd9056, %rd9057;
	shr.u64 	%rd9059, %rd9850, 6;
	xor.b64  	%rd9060, %rd9058, %rd9059;
	add.s64 	%rd9061, %rd9858, %rd8999;
	add.s64 	%rd9859, %rd9061, %rd9060;
	add.s64 	%rd9062, %rd9859, %rd8944;
	xor.b64  	%rd9063, %rd9014, %rd8980;
	and.b64  	%rd9064, %rd9044, %rd9063;
	xor.b64  	%rd9065, %rd9064, %rd8980;
	add.s64 	%rd9066, %rd9062, %rd9065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6293,%dummy}, %rd9044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6294}, %rd9044;
	}
	shf.r.wrap.b32 	%r6295, %r6294, %r6293, 14;
	shf.r.wrap.b32 	%r6296, %r6293, %r6294, 14;
	mov.b64 	%rd9067, {%r6296, %r6295};
	shf.r.wrap.b32 	%r6297, %r6294, %r6293, 18;
	shf.r.wrap.b32 	%r6298, %r6293, %r6294, 18;
	mov.b64 	%rd9068, {%r6298, %r6297};
	xor.b64  	%rd9069, %rd9067, %rd9068;
	shf.l.wrap.b32 	%r6299, %r6293, %r6294, 23;
	shf.l.wrap.b32 	%r6300, %r6294, %r6293, 23;
	mov.b64 	%rd9070, {%r6300, %r6299};
	xor.b64  	%rd9071, %rd9069, %rd9070;
	add.s64 	%rd9072, %rd9066, %rd9071;
	add.s64 	%rd9073, %rd9072, -5763719355590565569;
	add.s64 	%rd9074, %rd9073, %rd8955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6301,%dummy}, %rd9055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6302}, %rd9055;
	}
	shf.r.wrap.b32 	%r6303, %r6302, %r6301, 28;
	shf.r.wrap.b32 	%r6304, %r6301, %r6302, 28;
	mov.b64 	%rd9075, {%r6304, %r6303};
	shf.l.wrap.b32 	%r6305, %r6301, %r6302, 30;
	shf.l.wrap.b32 	%r6306, %r6302, %r6301, 30;
	mov.b64 	%rd9076, {%r6306, %r6305};
	xor.b64  	%rd9077, %rd9075, %rd9076;
	shf.l.wrap.b32 	%r6307, %r6301, %r6302, 25;
	shf.l.wrap.b32 	%r6308, %r6302, %r6301, 25;
	mov.b64 	%rd9078, {%r6308, %r6307};
	xor.b64  	%rd9079, %rd9077, %rd9078;
	and.b64  	%rd9080, %rd9055, %rd9025;
	or.b64  	%rd9081, %rd9055, %rd9025;
	and.b64  	%rd9082, %rd9081, %rd8991;
	or.b64  	%rd9083, %rd9082, %rd9080;
	add.s64 	%rd9084, %rd9083, %rd9079;
	add.s64 	%rd9085, %rd9084, %rd9073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6309,%dummy}, %rd9862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6310}, %rd9862;
	}
	shf.r.wrap.b32 	%r6311, %r6310, %r6309, 19;
	shf.r.wrap.b32 	%r6312, %r6309, %r6310, 19;
	mov.b64 	%rd9086, {%r6312, %r6311};
	shf.l.wrap.b32 	%r6313, %r6309, %r6310, 3;
	shf.l.wrap.b32 	%r6314, %r6310, %r6309, 3;
	mov.b64 	%rd9087, {%r6314, %r6313};
	xor.b64  	%rd9088, %rd9086, %rd9087;
	shr.u64 	%rd9089, %rd9862, 6;
	xor.b64  	%rd9090, %rd9088, %rd9089;
	add.s64 	%rd9091, %rd9856, %rd8999;
	add.s64 	%rd9857, %rd9091, %rd9090;
	st.local.v2.u64 	[%rd1+80], {%rd9859, %rd9857};
	add.s64 	%rd9092, %rd9857, %rd8980;
	xor.b64  	%rd9093, %rd9044, %rd9014;
	and.b64  	%rd9094, %rd9074, %rd9093;
	xor.b64  	%rd9095, %rd9094, %rd9014;
	add.s64 	%rd9096, %rd9092, %rd9095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6315,%dummy}, %rd9074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6316}, %rd9074;
	}
	shf.r.wrap.b32 	%r6317, %r6316, %r6315, 14;
	shf.r.wrap.b32 	%r6318, %r6315, %r6316, 14;
	mov.b64 	%rd9097, {%r6318, %r6317};
	shf.r.wrap.b32 	%r6319, %r6316, %r6315, 18;
	shf.r.wrap.b32 	%r6320, %r6315, %r6316, 18;
	mov.b64 	%rd9098, {%r6320, %r6319};
	xor.b64  	%rd9099, %rd9097, %rd9098;
	shf.l.wrap.b32 	%r6321, %r6315, %r6316, 23;
	shf.l.wrap.b32 	%r6322, %r6316, %r6315, 23;
	mov.b64 	%rd9100, {%r6322, %r6321};
	xor.b64  	%rd9101, %rd9099, %rd9100;
	add.s64 	%rd9102, %rd9096, %rd9101;
	add.s64 	%rd9103, %rd9102, -4658551843659510044;
	add.s64 	%rd9104, %rd9103, %rd8991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6323,%dummy}, %rd9085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6324}, %rd9085;
	}
	shf.r.wrap.b32 	%r6325, %r6324, %r6323, 28;
	shf.r.wrap.b32 	%r6326, %r6323, %r6324, 28;
	mov.b64 	%rd9105, {%r6326, %r6325};
	shf.l.wrap.b32 	%r6327, %r6323, %r6324, 30;
	shf.l.wrap.b32 	%r6328, %r6324, %r6323, 30;
	mov.b64 	%rd9106, {%r6328, %r6327};
	xor.b64  	%rd9107, %rd9105, %rd9106;
	shf.l.wrap.b32 	%r6329, %r6323, %r6324, 25;
	shf.l.wrap.b32 	%r6330, %r6324, %r6323, 25;
	mov.b64 	%rd9108, {%r6330, %r6329};
	xor.b64  	%rd9109, %rd9107, %rd9108;
	and.b64  	%rd9110, %rd9085, %rd9055;
	or.b64  	%rd9111, %rd9085, %rd9055;
	and.b64  	%rd9112, %rd9111, %rd9025;
	or.b64  	%rd9113, %rd9112, %rd9110;
	add.s64 	%rd9114, %rd9113, %rd9109;
	add.s64 	%rd9115, %rd9114, %rd9103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6331,%dummy}, %rd9859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6332}, %rd9859;
	}
	shf.r.wrap.b32 	%r6333, %r6332, %r6331, 19;
	shf.r.wrap.b32 	%r6334, %r6331, %r6332, 19;
	mov.b64 	%rd9116, {%r6334, %r6333};
	shf.l.wrap.b32 	%r6335, %r6331, %r6332, 3;
	shf.l.wrap.b32 	%r6336, %r6332, %r6331, 3;
	mov.b64 	%rd9117, {%r6336, %r6335};
	xor.b64  	%rd9118, %rd9116, %rd9117;
	shr.u64 	%rd9119, %rd9859, 6;
	xor.b64  	%rd9120, %rd9118, %rd9119;
	add.s64 	%rd9121, %rd9854, %rd8999;
	add.s64 	%rd9855, %rd9121, %rd9120;
	add.s64 	%rd9122, %rd9855, %rd9014;
	xor.b64  	%rd9123, %rd9074, %rd9044;
	and.b64  	%rd9124, %rd9104, %rd9123;
	xor.b64  	%rd9125, %rd9124, %rd9044;
	add.s64 	%rd9126, %rd9122, %rd9125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6337,%dummy}, %rd9104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6338}, %rd9104;
	}
	shf.r.wrap.b32 	%r6339, %r6338, %r6337, 14;
	shf.r.wrap.b32 	%r6340, %r6337, %r6338, 14;
	mov.b64 	%rd9127, {%r6340, %r6339};
	shf.r.wrap.b32 	%r6341, %r6338, %r6337, 18;
	shf.r.wrap.b32 	%r6342, %r6337, %r6338, 18;
	mov.b64 	%rd9128, {%r6342, %r6341};
	xor.b64  	%rd9129, %rd9127, %rd9128;
	shf.l.wrap.b32 	%r6343, %r6337, %r6338, 23;
	shf.l.wrap.b32 	%r6344, %r6338, %r6337, 23;
	mov.b64 	%rd9130, {%r6344, %r6343};
	xor.b64  	%rd9131, %rd9129, %rd9130;
	add.s64 	%rd9132, %rd9126, %rd9131;
	add.s64 	%rd9133, %rd9132, -4116276920077217854;
	add.s64 	%rd9866, %rd9133, %rd9025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6345,%dummy}, %rd9115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6346}, %rd9115;
	}
	shf.r.wrap.b32 	%r6347, %r6346, %r6345, 28;
	shf.r.wrap.b32 	%r6348, %r6345, %r6346, 28;
	mov.b64 	%rd9134, {%r6348, %r6347};
	shf.l.wrap.b32 	%r6349, %r6345, %r6346, 30;
	shf.l.wrap.b32 	%r6350, %r6346, %r6345, 30;
	mov.b64 	%rd9135, {%r6350, %r6349};
	xor.b64  	%rd9136, %rd9134, %rd9135;
	shf.l.wrap.b32 	%r6351, %r6345, %r6346, 25;
	shf.l.wrap.b32 	%r6352, %r6346, %r6345, 25;
	mov.b64 	%rd9137, {%r6352, %r6351};
	xor.b64  	%rd9138, %rd9136, %rd9137;
	and.b64  	%rd9139, %rd9115, %rd9085;
	or.b64  	%rd9140, %rd9115, %rd9085;
	and.b64  	%rd9141, %rd9140, %rd9055;
	or.b64  	%rd9142, %rd9141, %rd9139;
	add.s64 	%rd9143, %rd9142, %rd9138;
	add.s64 	%rd9873, %rd9143, %rd9133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6353,%dummy}, %rd9857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6354}, %rd9857;
	}
	shf.r.wrap.b32 	%r6355, %r6354, %r6353, 19;
	shf.r.wrap.b32 	%r6356, %r6353, %r6354, 19;
	mov.b64 	%rd9144, {%r6356, %r6355};
	shf.l.wrap.b32 	%r6357, %r6353, %r6354, 3;
	shf.l.wrap.b32 	%r6358, %r6354, %r6353, 3;
	mov.b64 	%rd9145, {%r6358, %r6357};
	xor.b64  	%rd9146, %rd9144, %rd9145;
	shr.u64 	%rd9147, %rd9857, 6;
	xor.b64  	%rd9148, %rd9146, %rd9147;
	add.s64 	%rd9149, %rd9852, %rd8999;
	add.s64 	%rd9853, %rd9149, %rd9148;
	st.local.v2.u64 	[%rd1+96], {%rd9855, %rd9853};
	add.s64 	%rd9150, %rd9853, %rd9044;
	xor.b64  	%rd9151, %rd9104, %rd9074;
	and.b64  	%rd9152, %rd9866, %rd9151;
	xor.b64  	%rd9153, %rd9152, %rd9074;
	add.s64 	%rd9154, %rd9150, %rd9153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6359,%dummy}, %rd9866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6360}, %rd9866;
	}
	shf.r.wrap.b32 	%r6361, %r6360, %r6359, 14;
	shf.r.wrap.b32 	%r6362, %r6359, %r6360, 14;
	mov.b64 	%rd9155, {%r6362, %r6361};
	shf.r.wrap.b32 	%r6363, %r6360, %r6359, 18;
	shf.r.wrap.b32 	%r6364, %r6359, %r6360, 18;
	mov.b64 	%rd9156, {%r6364, %r6363};
	xor.b64  	%rd9157, %rd9155, %rd9156;
	shf.l.wrap.b32 	%r6365, %r6359, %r6360, 23;
	shf.l.wrap.b32 	%r6366, %r6360, %r6359, 23;
	mov.b64 	%rd9158, {%r6366, %r6365};
	xor.b64  	%rd9159, %rd9157, %rd9158;
	add.s64 	%rd9160, %rd9154, %rd9159;
	add.s64 	%rd9161, %rd9160, -3051310485924567259;
	add.s64 	%rd9867, %rd9161, %rd9055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6367,%dummy}, %rd9873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6368}, %rd9873;
	}
	shf.r.wrap.b32 	%r6369, %r6368, %r6367, 28;
	shf.r.wrap.b32 	%r6370, %r6367, %r6368, 28;
	mov.b64 	%rd9162, {%r6370, %r6369};
	shf.l.wrap.b32 	%r6371, %r6367, %r6368, 30;
	shf.l.wrap.b32 	%r6372, %r6368, %r6367, 30;
	mov.b64 	%rd9163, {%r6372, %r6371};
	xor.b64  	%rd9164, %rd9162, %rd9163;
	shf.l.wrap.b32 	%r6373, %r6367, %r6368, 25;
	shf.l.wrap.b32 	%r6374, %r6368, %r6367, 25;
	mov.b64 	%rd9165, {%r6374, %r6373};
	xor.b64  	%rd9166, %rd9164, %rd9165;
	and.b64  	%rd9167, %rd9873, %rd9115;
	or.b64  	%rd9168, %rd9873, %rd9115;
	and.b64  	%rd9169, %rd9168, %rd9085;
	or.b64  	%rd9170, %rd9169, %rd9167;
	add.s64 	%rd9171, %rd9170, %rd9166;
	add.s64 	%rd9872, %rd9171, %rd9161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6375,%dummy}, %rd9855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6376}, %rd9855;
	}
	shf.r.wrap.b32 	%r6377, %r6376, %r6375, 19;
	shf.r.wrap.b32 	%r6378, %r6375, %r6376, 19;
	mov.b64 	%rd9172, {%r6378, %r6377};
	shf.l.wrap.b32 	%r6379, %r6375, %r6376, 3;
	shf.l.wrap.b32 	%r6380, %r6376, %r6375, 3;
	mov.b64 	%rd9173, {%r6380, %r6379};
	xor.b64  	%rd9174, %rd9172, %rd9173;
	shr.u64 	%rd9175, %rd9855, 6;
	xor.b64  	%rd9176, %rd9174, %rd9175;
	shf.r.wrap.b32 	%r6381, %r6043, %r6044, 8;
	shf.r.wrap.b32 	%r6382, %r6044, %r6043, 8;
	mov.b64 	%rd9177, {%r6382, %r6381};
	shf.r.wrap.b32 	%r6383, %r6043, %r6044, 1;
	shf.r.wrap.b32 	%r6384, %r6044, %r6043, 1;
	mov.b64 	%rd9178, {%r6384, %r6383};
	xor.b64  	%rd9179, %rd9178, %rd9177;
	xor.b64  	%rd9180, %rd9179, 12;
	add.s64 	%rd9181, %rd9176, %rd9851;
	add.s64 	%rd9865, %rd9181, %rd9180;
	add.s64 	%rd9182, %rd9865, %rd9074;
	xor.b64  	%rd9183, %rd9866, %rd9104;
	and.b64  	%rd9184, %rd9867, %rd9183;
	xor.b64  	%rd9185, %rd9184, %rd9104;
	add.s64 	%rd9186, %rd9182, %rd9185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6385,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6386}, %rd9867;
	}
	shf.r.wrap.b32 	%r6387, %r6386, %r6385, 14;
	shf.r.wrap.b32 	%r6388, %r6385, %r6386, 14;
	mov.b64 	%rd9187, {%r6388, %r6387};
	shf.r.wrap.b32 	%r6389, %r6386, %r6385, 18;
	shf.r.wrap.b32 	%r6390, %r6385, %r6386, 18;
	mov.b64 	%rd9188, {%r6390, %r6389};
	xor.b64  	%rd9189, %rd9187, %rd9188;
	shf.l.wrap.b32 	%r6391, %r6385, %r6386, 23;
	shf.l.wrap.b32 	%r6392, %r6386, %r6385, 23;
	mov.b64 	%rd9190, {%r6392, %r6391};
	xor.b64  	%rd9191, %rd9189, %rd9190;
	add.s64 	%rd9192, %rd9186, %rd9191;
	add.s64 	%rd9193, %rd9192, 489312712824947311;
	add.s64 	%rd9868, %rd9193, %rd9085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6393,%dummy}, %rd9872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6394}, %rd9872;
	}
	shf.r.wrap.b32 	%r6395, %r6394, %r6393, 28;
	shf.r.wrap.b32 	%r6396, %r6393, %r6394, 28;
	mov.b64 	%rd9194, {%r6396, %r6395};
	shf.l.wrap.b32 	%r6397, %r6393, %r6394, 30;
	shf.l.wrap.b32 	%r6398, %r6394, %r6393, 30;
	mov.b64 	%rd9195, {%r6398, %r6397};
	xor.b64  	%rd9196, %rd9194, %rd9195;
	shf.l.wrap.b32 	%r6399, %r6393, %r6394, 25;
	shf.l.wrap.b32 	%r6400, %r6394, %r6393, 25;
	mov.b64 	%rd9197, {%r6400, %r6399};
	xor.b64  	%rd9198, %rd9196, %rd9197;
	and.b64  	%rd9199, %rd9872, %rd9873;
	or.b64  	%rd9200, %rd9872, %rd9873;
	and.b64  	%rd9201, %rd9200, %rd9115;
	or.b64  	%rd9202, %rd9201, %rd9199;
	add.s64 	%rd9203, %rd9202, %rd9198;
	add.s64 	%rd9871, %rd9203, %rd9193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6401,%dummy}, %rd9853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6402}, %rd9853;
	}
	shf.r.wrap.b32 	%r6403, %r6402, %r6401, 19;
	shf.r.wrap.b32 	%r6404, %r6401, %r6402, 19;
	mov.b64 	%rd9204, {%r6404, %r6403};
	shf.l.wrap.b32 	%r6405, %r6401, %r6402, 3;
	shf.l.wrap.b32 	%r6406, %r6402, %r6401, 3;
	mov.b64 	%rd9205, {%r6406, %r6405};
	xor.b64  	%rd9206, %rd9204, %rd9205;
	shr.u64 	%rd9207, %rd9853, 6;
	xor.b64  	%rd9208, %rd9206, %rd9207;
	shf.r.wrap.b32 	%r6407, %r6072, %r6071, 1;
	shf.r.wrap.b32 	%r6408, %r6071, %r6072, 1;
	mov.b64 	%rd9209, {%r6408, %r6407};
	shf.r.wrap.b32 	%r6409, %r6072, %r6071, 8;
	shf.r.wrap.b32 	%r6410, %r6071, %r6072, 8;
	mov.b64 	%rd9210, {%r6410, %r6409};
	xor.b64  	%rd9211, %rd9209, %rd9210;
	shr.u64 	%rd9212, %rd9863, 7;
	xor.b64  	%rd9213, %rd9211, %rd9212;
	add.s64 	%rd9214, %rd9208, %rd9850;
	add.s64 	%rd9215, %rd9214, %rd9213;
	add.s64 	%rd9861, %rd9215, 1536;
	st.local.v2.u64 	[%rd1+112], {%rd9865, %rd9861};
	add.s64 	%rd9216, %rd9861, %rd9104;
	xor.b64  	%rd9217, %rd9867, %rd9866;
	and.b64  	%rd9218, %rd9868, %rd9217;
	xor.b64  	%rd9219, %rd9218, %rd9866;
	add.s64 	%rd9220, %rd9216, %rd9219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6411,%dummy}, %rd9868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6412}, %rd9868;
	}
	shf.r.wrap.b32 	%r6413, %r6412, %r6411, 14;
	shf.r.wrap.b32 	%r6414, %r6411, %r6412, 14;
	mov.b64 	%rd9221, {%r6414, %r6413};
	shf.r.wrap.b32 	%r6415, %r6412, %r6411, 18;
	shf.r.wrap.b32 	%r6416, %r6411, %r6412, 18;
	mov.b64 	%rd9222, {%r6416, %r6415};
	xor.b64  	%rd9223, %rd9221, %rd9222;
	shf.l.wrap.b32 	%r6417, %r6411, %r6412, 23;
	shf.l.wrap.b32 	%r6418, %r6412, %r6411, 23;
	mov.b64 	%rd9224, {%r6418, %r6417};
	xor.b64  	%rd9225, %rd9223, %rd9224;
	add.s64 	%rd9226, %rd9220, %rd9225;
	add.s64 	%rd9227, %rd9226, 1452737877330783856;
	add.s64 	%rd9869, %rd9227, %rd9115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6419,%dummy}, %rd9871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6420}, %rd9871;
	}
	shf.r.wrap.b32 	%r6421, %r6420, %r6419, 28;
	shf.r.wrap.b32 	%r6422, %r6419, %r6420, 28;
	mov.b64 	%rd9228, {%r6422, %r6421};
	shf.l.wrap.b32 	%r6423, %r6419, %r6420, 30;
	shf.l.wrap.b32 	%r6424, %r6420, %r6419, 30;
	mov.b64 	%rd9229, {%r6424, %r6423};
	xor.b64  	%rd9230, %rd9228, %rd9229;
	shf.l.wrap.b32 	%r6425, %r6419, %r6420, 25;
	shf.l.wrap.b32 	%r6426, %r6420, %r6419, 25;
	mov.b64 	%rd9231, {%r6426, %r6425};
	xor.b64  	%rd9232, %rd9230, %rd9231;
	and.b64  	%rd9233, %rd9871, %rd9872;
	or.b64  	%rd9234, %rd9871, %rd9872;
	and.b64  	%rd9235, %rd9234, %rd9873;
	or.b64  	%rd9236, %rd9235, %rd9233;
	add.s64 	%rd9237, %rd9236, %rd9232;
	add.s64 	%rd9870, %rd9237, %rd9227;
	mov.u32 	%r6876, 32;
	mov.u64 	%rd9849, K;

$L__BB6_5:
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6427}, %rd9865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6428,%dummy}, %rd9865;
	}
	shf.l.wrap.b32 	%r6429, %r6428, %r6427, 3;
	shf.l.wrap.b32 	%r6430, %r6427, %r6428, 3;
	mov.b64 	%rd9238, {%r6430, %r6429};
	shf.r.wrap.b32 	%r6431, %r6427, %r6428, 19;
	shf.r.wrap.b32 	%r6432, %r6428, %r6427, 19;
	mov.b64 	%rd9239, {%r6432, %r6431};
	xor.b64  	%rd9240, %rd9239, %rd9238;
	shr.u64 	%rd9241, %rd9865, 6;
	xor.b64  	%rd9242, %rd9240, %rd9241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6433,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6434}, %rd9864;
	}
	shf.r.wrap.b32 	%r6435, %r6434, %r6433, 8;
	shf.r.wrap.b32 	%r6436, %r6433, %r6434, 8;
	mov.b64 	%rd9243, {%r6436, %r6435};
	shf.r.wrap.b32 	%r6437, %r6434, %r6433, 1;
	shf.r.wrap.b32 	%r6438, %r6433, %r6434, 1;
	mov.b64 	%rd9244, {%r6438, %r6437};
	xor.b64  	%rd9245, %rd9244, %rd9243;
	shr.u64 	%rd9246, %rd9864, 7;
	xor.b64  	%rd9247, %rd9245, %rd9246;
	add.s64 	%rd9248, %rd9242, %rd9863;
	add.s64 	%rd9249, %rd9248, %rd9862;
	add.s64 	%rd9863, %rd9249, %rd9247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6439,%dummy}, %rd9869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6440}, %rd9869;
	}
	shf.r.wrap.b32 	%r6441, %r6440, %r6439, 18;
	shf.r.wrap.b32 	%r6442, %r6439, %r6440, 18;
	mov.b64 	%rd9250, {%r6442, %r6441};
	shf.r.wrap.b32 	%r6443, %r6440, %r6439, 14;
	shf.r.wrap.b32 	%r6444, %r6439, %r6440, 14;
	mov.b64 	%rd9251, {%r6444, %r6443};
	xor.b64  	%rd9252, %rd9251, %rd9250;
	shf.l.wrap.b32 	%r6445, %r6439, %r6440, 23;
	shf.l.wrap.b32 	%r6446, %r6440, %r6439, 23;
	mov.b64 	%rd9253, {%r6446, %r6445};
	xor.b64  	%rd9254, %rd9252, %rd9253;
	xor.b64  	%rd9255, %rd9867, %rd9868;
	and.b64  	%rd9256, %rd9255, %rd9869;
	xor.b64  	%rd9257, %rd9256, %rd9867;
	add.s64 	%rd9258, %rd9254, %rd9866;
	add.s64 	%rd9259, %rd9258, %rd9257;
	ld.const.u64 	%rd9260, [%rd9849+256];
	add.s64 	%rd9261, %rd9259, %rd9260;
	add.s64 	%rd9262, %rd9261, %rd9863;
	add.s64 	%rd9263, %rd9262, %rd9873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6447}, %rd9870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6448,%dummy}, %rd9870;
	}
	shf.l.wrap.b32 	%r6449, %r6448, %r6447, 30;
	shf.l.wrap.b32 	%r6450, %r6447, %r6448, 30;
	mov.b64 	%rd9264, {%r6450, %r6449};
	shf.r.wrap.b32 	%r6451, %r6447, %r6448, 28;
	shf.r.wrap.b32 	%r6452, %r6448, %r6447, 28;
	mov.b64 	%rd9265, {%r6452, %r6451};
	xor.b64  	%rd9266, %rd9265, %rd9264;
	shf.l.wrap.b32 	%r6453, %r6448, %r6447, 25;
	shf.l.wrap.b32 	%r6454, %r6447, %r6448, 25;
	mov.b64 	%rd9267, {%r6454, %r6453};
	xor.b64  	%rd9268, %rd9266, %rd9267;
	or.b64  	%rd9269, %rd9870, %rd9871;
	and.b64  	%rd9270, %rd9269, %rd9872;
	and.b64  	%rd9271, %rd9870, %rd9871;
	or.b64  	%rd9272, %rd9270, %rd9271;
	add.s64 	%rd9273, %rd9272, %rd9268;
	add.s64 	%rd9274, %rd9273, %rd9262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6455}, %rd9861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6456,%dummy}, %rd9861;
	}
	shf.l.wrap.b32 	%r6457, %r6456, %r6455, 3;
	shf.l.wrap.b32 	%r6458, %r6455, %r6456, 3;
	mov.b64 	%rd9275, {%r6458, %r6457};
	shf.r.wrap.b32 	%r6459, %r6455, %r6456, 19;
	shf.r.wrap.b32 	%r6460, %r6456, %r6455, 19;
	mov.b64 	%rd9276, {%r6460, %r6459};
	xor.b64  	%rd9277, %rd9276, %rd9275;
	shr.u64 	%rd9278, %rd9861, 6;
	xor.b64  	%rd9279, %rd9277, %rd9278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6461,%dummy}, %rd9860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6462}, %rd9860;
	}
	shf.r.wrap.b32 	%r6463, %r6462, %r6461, 8;
	shf.r.wrap.b32 	%r6464, %r6461, %r6462, 8;
	mov.b64 	%rd9280, {%r6464, %r6463};
	shf.r.wrap.b32 	%r6465, %r6462, %r6461, 1;
	shf.r.wrap.b32 	%r6466, %r6461, %r6462, 1;
	mov.b64 	%rd9281, {%r6466, %r6465};
	xor.b64  	%rd9282, %rd9281, %rd9280;
	shr.u64 	%rd9283, %rd9860, 7;
	xor.b64  	%rd9284, %rd9282, %rd9283;
	add.s64 	%rd9285, %rd9279, %rd9864;
	add.s64 	%rd9286, %rd9285, %rd9859;
	add.s64 	%rd9864, %rd9286, %rd9284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd9263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd9263;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 14;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 14;
	mov.b64 	%rd9287, {%r6470, %r6469};
	shf.r.wrap.b32 	%r6471, %r6468, %r6467, 18;
	shf.r.wrap.b32 	%r6472, %r6467, %r6468, 18;
	mov.b64 	%rd9288, {%r6472, %r6471};
	xor.b64  	%rd9289, %rd9287, %rd9288;
	shf.l.wrap.b32 	%r6473, %r6467, %r6468, 23;
	shf.l.wrap.b32 	%r6474, %r6468, %r6467, 23;
	mov.b64 	%rd9290, {%r6474, %r6473};
	xor.b64  	%rd9291, %rd9289, %rd9290;
	xor.b64  	%rd9292, %rd9868, %rd9869;
	and.b64  	%rd9293, %rd9263, %rd9292;
	xor.b64  	%rd9294, %rd9293, %rd9868;
	ld.const.u64 	%rd9295, [%rd9849+264];
	add.s64 	%rd9296, %rd9295, %rd9867;
	add.s64 	%rd9297, %rd9296, %rd9864;
	add.s64 	%rd9298, %rd9297, %rd9294;
	add.s64 	%rd9299, %rd9298, %rd9291;
	add.s64 	%rd9300, %rd9299, %rd9872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6475,%dummy}, %rd9274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6476}, %rd9274;
	}
	shf.r.wrap.b32 	%r6477, %r6476, %r6475, 28;
	shf.r.wrap.b32 	%r6478, %r6475, %r6476, 28;
	mov.b64 	%rd9301, {%r6478, %r6477};
	shf.l.wrap.b32 	%r6479, %r6475, %r6476, 30;
	shf.l.wrap.b32 	%r6480, %r6476, %r6475, 30;
	mov.b64 	%rd9302, {%r6480, %r6479};
	xor.b64  	%rd9303, %rd9301, %rd9302;
	shf.l.wrap.b32 	%r6481, %r6475, %r6476, 25;
	shf.l.wrap.b32 	%r6482, %r6476, %r6475, 25;
	mov.b64 	%rd9304, {%r6482, %r6481};
	xor.b64  	%rd9305, %rd9303, %rd9304;
	and.b64  	%rd9306, %rd9274, %rd9870;
	or.b64  	%rd9307, %rd9274, %rd9870;
	and.b64  	%rd9308, %rd9307, %rd9871;
	or.b64  	%rd9309, %rd9308, %rd9306;
	add.s64 	%rd9310, %rd9309, %rd9305;
	add.s64 	%rd9311, %rd9310, %rd9299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6483,%dummy}, %rd9863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6484}, %rd9863;
	}
	shf.r.wrap.b32 	%r6485, %r6484, %r6483, 19;
	shf.r.wrap.b32 	%r6486, %r6483, %r6484, 19;
	mov.b64 	%rd9312, {%r6486, %r6485};
	shf.l.wrap.b32 	%r6487, %r6483, %r6484, 3;
	shf.l.wrap.b32 	%r6488, %r6484, %r6483, 3;
	mov.b64 	%rd9313, {%r6488, %r6487};
	xor.b64  	%rd9314, %rd9312, %rd9313;
	shr.u64 	%rd9315, %rd9863, 6;
	xor.b64  	%rd9316, %rd9314, %rd9315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6489,%dummy}, %rd9858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6490}, %rd9858;
	}
	shf.r.wrap.b32 	%r6491, %r6490, %r6489, 8;
	shf.r.wrap.b32 	%r6492, %r6489, %r6490, 8;
	mov.b64 	%rd9317, {%r6492, %r6491};
	shf.r.wrap.b32 	%r6493, %r6490, %r6489, 1;
	shf.r.wrap.b32 	%r6494, %r6489, %r6490, 1;
	mov.b64 	%rd9318, {%r6494, %r6493};
	xor.b64  	%rd9319, %rd9318, %rd9317;
	shr.u64 	%rd9320, %rd9858, 7;
	xor.b64  	%rd9321, %rd9319, %rd9320;
	add.s64 	%rd9322, %rd9316, %rd9860;
	add.s64 	%rd9323, %rd9322, %rd9857;
	add.s64 	%rd9860, %rd9323, %rd9321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6495,%dummy}, %rd9300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6496}, %rd9300;
	}
	shf.r.wrap.b32 	%r6497, %r6496, %r6495, 14;
	shf.r.wrap.b32 	%r6498, %r6495, %r6496, 14;
	mov.b64 	%rd9324, {%r6498, %r6497};
	shf.r.wrap.b32 	%r6499, %r6496, %r6495, 18;
	shf.r.wrap.b32 	%r6500, %r6495, %r6496, 18;
	mov.b64 	%rd9325, {%r6500, %r6499};
	xor.b64  	%rd9326, %rd9324, %rd9325;
	shf.l.wrap.b32 	%r6501, %r6495, %r6496, 23;
	shf.l.wrap.b32 	%r6502, %r6496, %r6495, 23;
	mov.b64 	%rd9327, {%r6502, %r6501};
	xor.b64  	%rd9328, %rd9326, %rd9327;
	xor.b64  	%rd9329, %rd9263, %rd9869;
	and.b64  	%rd9330, %rd9300, %rd9329;
	xor.b64  	%rd9331, %rd9330, %rd9869;
	ld.const.u64 	%rd9332, [%rd9849+272];
	add.s64 	%rd9333, %rd9332, %rd9868;
	add.s64 	%rd9334, %rd9333, %rd9860;
	add.s64 	%rd9335, %rd9334, %rd9331;
	add.s64 	%rd9336, %rd9335, %rd9328;
	add.s64 	%rd9337, %rd9336, %rd9871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6503,%dummy}, %rd9311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6504}, %rd9311;
	}
	shf.r.wrap.b32 	%r6505, %r6504, %r6503, 28;
	shf.r.wrap.b32 	%r6506, %r6503, %r6504, 28;
	mov.b64 	%rd9338, {%r6506, %r6505};
	shf.l.wrap.b32 	%r6507, %r6503, %r6504, 30;
	shf.l.wrap.b32 	%r6508, %r6504, %r6503, 30;
	mov.b64 	%rd9339, {%r6508, %r6507};
	xor.b64  	%rd9340, %rd9338, %rd9339;
	shf.l.wrap.b32 	%r6509, %r6503, %r6504, 25;
	shf.l.wrap.b32 	%r6510, %r6504, %r6503, 25;
	mov.b64 	%rd9341, {%r6510, %r6509};
	xor.b64  	%rd9342, %rd9340, %rd9341;
	and.b64  	%rd9343, %rd9311, %rd9274;
	or.b64  	%rd9344, %rd9311, %rd9274;
	and.b64  	%rd9345, %rd9344, %rd9870;
	or.b64  	%rd9346, %rd9345, %rd9343;
	add.s64 	%rd9347, %rd9346, %rd9342;
	add.s64 	%rd9348, %rd9347, %rd9336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6511,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6512}, %rd9864;
	}
	shf.r.wrap.b32 	%r6513, %r6512, %r6511, 19;
	shf.r.wrap.b32 	%r6514, %r6511, %r6512, 19;
	mov.b64 	%rd9349, {%r6514, %r6513};
	shf.l.wrap.b32 	%r6515, %r6511, %r6512, 3;
	shf.l.wrap.b32 	%r6516, %r6512, %r6511, 3;
	mov.b64 	%rd9350, {%r6516, %r6515};
	xor.b64  	%rd9351, %rd9349, %rd9350;
	shr.u64 	%rd9352, %rd9864, 6;
	xor.b64  	%rd9353, %rd9351, %rd9352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6517,%dummy}, %rd9856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6518}, %rd9856;
	}
	shf.r.wrap.b32 	%r6519, %r6518, %r6517, 8;
	shf.r.wrap.b32 	%r6520, %r6517, %r6518, 8;
	mov.b64 	%rd9354, {%r6520, %r6519};
	shf.r.wrap.b32 	%r6521, %r6518, %r6517, 1;
	shf.r.wrap.b32 	%r6522, %r6517, %r6518, 1;
	mov.b64 	%rd9355, {%r6522, %r6521};
	xor.b64  	%rd9356, %rd9355, %rd9354;
	shr.u64 	%rd9357, %rd9856, 7;
	xor.b64  	%rd9358, %rd9356, %rd9357;
	add.s64 	%rd9359, %rd9353, %rd9858;
	add.s64 	%rd9360, %rd9359, %rd9855;
	add.s64 	%rd9858, %rd9360, %rd9358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6523,%dummy}, %rd9337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6524}, %rd9337;
	}
	shf.r.wrap.b32 	%r6525, %r6524, %r6523, 14;
	shf.r.wrap.b32 	%r6526, %r6523, %r6524, 14;
	mov.b64 	%rd9361, {%r6526, %r6525};
	shf.r.wrap.b32 	%r6527, %r6524, %r6523, 18;
	shf.r.wrap.b32 	%r6528, %r6523, %r6524, 18;
	mov.b64 	%rd9362, {%r6528, %r6527};
	xor.b64  	%rd9363, %rd9361, %rd9362;
	shf.l.wrap.b32 	%r6529, %r6523, %r6524, 23;
	shf.l.wrap.b32 	%r6530, %r6524, %r6523, 23;
	mov.b64 	%rd9364, {%r6530, %r6529};
	xor.b64  	%rd9365, %rd9363, %rd9364;
	xor.b64  	%rd9366, %rd9300, %rd9263;
	and.b64  	%rd9367, %rd9337, %rd9366;
	xor.b64  	%rd9368, %rd9367, %rd9263;
	ld.const.u64 	%rd9369, [%rd9849+280];
	add.s64 	%rd9370, %rd9369, %rd9869;
	add.s64 	%rd9371, %rd9370, %rd9858;
	add.s64 	%rd9372, %rd9371, %rd9368;
	add.s64 	%rd9373, %rd9372, %rd9365;
	add.s64 	%rd9374, %rd9373, %rd9870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6531,%dummy}, %rd9348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6532}, %rd9348;
	}
	shf.r.wrap.b32 	%r6533, %r6532, %r6531, 28;
	shf.r.wrap.b32 	%r6534, %r6531, %r6532, 28;
	mov.b64 	%rd9375, {%r6534, %r6533};
	shf.l.wrap.b32 	%r6535, %r6531, %r6532, 30;
	shf.l.wrap.b32 	%r6536, %r6532, %r6531, 30;
	mov.b64 	%rd9376, {%r6536, %r6535};
	xor.b64  	%rd9377, %rd9375, %rd9376;
	shf.l.wrap.b32 	%r6537, %r6531, %r6532, 25;
	shf.l.wrap.b32 	%r6538, %r6532, %r6531, 25;
	mov.b64 	%rd9378, {%r6538, %r6537};
	xor.b64  	%rd9379, %rd9377, %rd9378;
	and.b64  	%rd9380, %rd9348, %rd9311;
	or.b64  	%rd9381, %rd9348, %rd9311;
	and.b64  	%rd9382, %rd9381, %rd9274;
	or.b64  	%rd9383, %rd9382, %rd9380;
	add.s64 	%rd9384, %rd9383, %rd9379;
	add.s64 	%rd9385, %rd9384, %rd9373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6539,%dummy}, %rd9860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6540}, %rd9860;
	}
	shf.r.wrap.b32 	%r6541, %r6540, %r6539, 19;
	shf.r.wrap.b32 	%r6542, %r6539, %r6540, 19;
	mov.b64 	%rd9386, {%r6542, %r6541};
	shf.l.wrap.b32 	%r6543, %r6539, %r6540, 3;
	shf.l.wrap.b32 	%r6544, %r6540, %r6539, 3;
	mov.b64 	%rd9387, {%r6544, %r6543};
	xor.b64  	%rd9388, %rd9386, %rd9387;
	shr.u64 	%rd9389, %rd9860, 6;
	xor.b64  	%rd9390, %rd9388, %rd9389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6545,%dummy}, %rd9854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6546}, %rd9854;
	}
	shf.r.wrap.b32 	%r6547, %r6546, %r6545, 8;
	shf.r.wrap.b32 	%r6548, %r6545, %r6546, 8;
	mov.b64 	%rd9391, {%r6548, %r6547};
	shf.r.wrap.b32 	%r6549, %r6546, %r6545, 1;
	shf.r.wrap.b32 	%r6550, %r6545, %r6546, 1;
	mov.b64 	%rd9392, {%r6550, %r6549};
	xor.b64  	%rd9393, %rd9392, %rd9391;
	shr.u64 	%rd9394, %rd9854, 7;
	xor.b64  	%rd9395, %rd9393, %rd9394;
	add.s64 	%rd9396, %rd9390, %rd9856;
	add.s64 	%rd9397, %rd9396, %rd9853;
	add.s64 	%rd9856, %rd9397, %rd9395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6551,%dummy}, %rd9374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6552}, %rd9374;
	}
	shf.r.wrap.b32 	%r6553, %r6552, %r6551, 14;
	shf.r.wrap.b32 	%r6554, %r6551, %r6552, 14;
	mov.b64 	%rd9398, {%r6554, %r6553};
	shf.r.wrap.b32 	%r6555, %r6552, %r6551, 18;
	shf.r.wrap.b32 	%r6556, %r6551, %r6552, 18;
	mov.b64 	%rd9399, {%r6556, %r6555};
	xor.b64  	%rd9400, %rd9398, %rd9399;
	shf.l.wrap.b32 	%r6557, %r6551, %r6552, 23;
	shf.l.wrap.b32 	%r6558, %r6552, %r6551, 23;
	mov.b64 	%rd9401, {%r6558, %r6557};
	xor.b64  	%rd9402, %rd9400, %rd9401;
	xor.b64  	%rd9403, %rd9337, %rd9300;
	and.b64  	%rd9404, %rd9374, %rd9403;
	xor.b64  	%rd9405, %rd9404, %rd9300;
	ld.const.u64 	%rd9406, [%rd9849+288];
	add.s64 	%rd9407, %rd9406, %rd9263;
	add.s64 	%rd9408, %rd9407, %rd9856;
	add.s64 	%rd9409, %rd9408, %rd9405;
	add.s64 	%rd9410, %rd9409, %rd9402;
	add.s64 	%rd9411, %rd9410, %rd9274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6559,%dummy}, %rd9385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6560}, %rd9385;
	}
	shf.r.wrap.b32 	%r6561, %r6560, %r6559, 28;
	shf.r.wrap.b32 	%r6562, %r6559, %r6560, 28;
	mov.b64 	%rd9412, {%r6562, %r6561};
	shf.l.wrap.b32 	%r6563, %r6559, %r6560, 30;
	shf.l.wrap.b32 	%r6564, %r6560, %r6559, 30;
	mov.b64 	%rd9413, {%r6564, %r6563};
	xor.b64  	%rd9414, %rd9412, %rd9413;
	shf.l.wrap.b32 	%r6565, %r6559, %r6560, 25;
	shf.l.wrap.b32 	%r6566, %r6560, %r6559, 25;
	mov.b64 	%rd9415, {%r6566, %r6565};
	xor.b64  	%rd9416, %rd9414, %rd9415;
	and.b64  	%rd9417, %rd9385, %rd9348;
	or.b64  	%rd9418, %rd9385, %rd9348;
	and.b64  	%rd9419, %rd9418, %rd9311;
	or.b64  	%rd9420, %rd9419, %rd9417;
	add.s64 	%rd9421, %rd9420, %rd9416;
	add.s64 	%rd9422, %rd9421, %rd9410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6567,%dummy}, %rd9858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6568}, %rd9858;
	}
	shf.r.wrap.b32 	%r6569, %r6568, %r6567, 19;
	shf.r.wrap.b32 	%r6570, %r6567, %r6568, 19;
	mov.b64 	%rd9423, {%r6570, %r6569};
	shf.l.wrap.b32 	%r6571, %r6567, %r6568, 3;
	shf.l.wrap.b32 	%r6572, %r6568, %r6567, 3;
	mov.b64 	%rd9424, {%r6572, %r6571};
	xor.b64  	%rd9425, %rd9423, %rd9424;
	shr.u64 	%rd9426, %rd9858, 6;
	xor.b64  	%rd9427, %rd9425, %rd9426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6573,%dummy}, %rd9852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6574}, %rd9852;
	}
	shf.r.wrap.b32 	%r6575, %r6574, %r6573, 8;
	shf.r.wrap.b32 	%r6576, %r6573, %r6574, 8;
	mov.b64 	%rd9428, {%r6576, %r6575};
	shf.r.wrap.b32 	%r6577, %r6574, %r6573, 1;
	shf.r.wrap.b32 	%r6578, %r6573, %r6574, 1;
	mov.b64 	%rd9429, {%r6578, %r6577};
	xor.b64  	%rd9430, %rd9429, %rd9428;
	shr.u64 	%rd9431, %rd9852, 7;
	xor.b64  	%rd9432, %rd9430, %rd9431;
	add.s64 	%rd9433, %rd9427, %rd9854;
	add.s64 	%rd9434, %rd9433, %rd9865;
	add.s64 	%rd9854, %rd9434, %rd9432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6579,%dummy}, %rd9411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6580}, %rd9411;
	}
	shf.r.wrap.b32 	%r6581, %r6580, %r6579, 14;
	shf.r.wrap.b32 	%r6582, %r6579, %r6580, 14;
	mov.b64 	%rd9435, {%r6582, %r6581};
	shf.r.wrap.b32 	%r6583, %r6580, %r6579, 18;
	shf.r.wrap.b32 	%r6584, %r6579, %r6580, 18;
	mov.b64 	%rd9436, {%r6584, %r6583};
	xor.b64  	%rd9437, %rd9435, %rd9436;
	shf.l.wrap.b32 	%r6585, %r6579, %r6580, 23;
	shf.l.wrap.b32 	%r6586, %r6580, %r6579, 23;
	mov.b64 	%rd9438, {%r6586, %r6585};
	xor.b64  	%rd9439, %rd9437, %rd9438;
	xor.b64  	%rd9440, %rd9374, %rd9337;
	and.b64  	%rd9441, %rd9411, %rd9440;
	xor.b64  	%rd9442, %rd9441, %rd9337;
	ld.const.u64 	%rd9443, [%rd9849+296];
	add.s64 	%rd9444, %rd9443, %rd9300;
	add.s64 	%rd9445, %rd9444, %rd9854;
	add.s64 	%rd9446, %rd9445, %rd9442;
	add.s64 	%rd9447, %rd9446, %rd9439;
	add.s64 	%rd9448, %rd9447, %rd9311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6587,%dummy}, %rd9422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6588}, %rd9422;
	}
	shf.r.wrap.b32 	%r6589, %r6588, %r6587, 28;
	shf.r.wrap.b32 	%r6590, %r6587, %r6588, 28;
	mov.b64 	%rd9449, {%r6590, %r6589};
	shf.l.wrap.b32 	%r6591, %r6587, %r6588, 30;
	shf.l.wrap.b32 	%r6592, %r6588, %r6587, 30;
	mov.b64 	%rd9450, {%r6592, %r6591};
	xor.b64  	%rd9451, %rd9449, %rd9450;
	shf.l.wrap.b32 	%r6593, %r6587, %r6588, 25;
	shf.l.wrap.b32 	%r6594, %r6588, %r6587, 25;
	mov.b64 	%rd9452, {%r6594, %r6593};
	xor.b64  	%rd9453, %rd9451, %rd9452;
	and.b64  	%rd9454, %rd9422, %rd9385;
	or.b64  	%rd9455, %rd9422, %rd9385;
	and.b64  	%rd9456, %rd9455, %rd9348;
	or.b64  	%rd9457, %rd9456, %rd9454;
	add.s64 	%rd9458, %rd9457, %rd9453;
	add.s64 	%rd9459, %rd9458, %rd9447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6595,%dummy}, %rd9856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6596}, %rd9856;
	}
	shf.r.wrap.b32 	%r6597, %r6596, %r6595, 19;
	shf.r.wrap.b32 	%r6598, %r6595, %r6596, 19;
	mov.b64 	%rd9460, {%r6598, %r6597};
	shf.l.wrap.b32 	%r6599, %r6595, %r6596, 3;
	shf.l.wrap.b32 	%r6600, %r6596, %r6595, 3;
	mov.b64 	%rd9461, {%r6600, %r6599};
	xor.b64  	%rd9462, %rd9460, %rd9461;
	shr.u64 	%rd9463, %rd9856, 6;
	xor.b64  	%rd9464, %rd9462, %rd9463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6601,%dummy}, %rd9851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6602}, %rd9851;
	}
	shf.r.wrap.b32 	%r6603, %r6602, %r6601, 8;
	shf.r.wrap.b32 	%r6604, %r6601, %r6602, 8;
	mov.b64 	%rd9465, {%r6604, %r6603};
	shf.r.wrap.b32 	%r6605, %r6602, %r6601, 1;
	shf.r.wrap.b32 	%r6606, %r6601, %r6602, 1;
	mov.b64 	%rd9466, {%r6606, %r6605};
	xor.b64  	%rd9467, %rd9466, %rd9465;
	shr.u64 	%rd9468, %rd9851, 7;
	xor.b64  	%rd9469, %rd9467, %rd9468;
	add.s64 	%rd9470, %rd9464, %rd9852;
	add.s64 	%rd9471, %rd9470, %rd9861;
	add.s64 	%rd9852, %rd9471, %rd9469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6607,%dummy}, %rd9448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6608}, %rd9448;
	}
	shf.r.wrap.b32 	%r6609, %r6608, %r6607, 14;
	shf.r.wrap.b32 	%r6610, %r6607, %r6608, 14;
	mov.b64 	%rd9472, {%r6610, %r6609};
	shf.r.wrap.b32 	%r6611, %r6608, %r6607, 18;
	shf.r.wrap.b32 	%r6612, %r6607, %r6608, 18;
	mov.b64 	%rd9473, {%r6612, %r6611};
	xor.b64  	%rd9474, %rd9472, %rd9473;
	shf.l.wrap.b32 	%r6613, %r6607, %r6608, 23;
	shf.l.wrap.b32 	%r6614, %r6608, %r6607, 23;
	mov.b64 	%rd9475, {%r6614, %r6613};
	xor.b64  	%rd9476, %rd9474, %rd9475;
	xor.b64  	%rd9477, %rd9411, %rd9374;
	and.b64  	%rd9478, %rd9448, %rd9477;
	xor.b64  	%rd9479, %rd9478, %rd9374;
	ld.const.u64 	%rd9480, [%rd9849+304];
	add.s64 	%rd9481, %rd9480, %rd9337;
	add.s64 	%rd9482, %rd9481, %rd9852;
	add.s64 	%rd9483, %rd9482, %rd9479;
	add.s64 	%rd9484, %rd9483, %rd9476;
	add.s64 	%rd9485, %rd9484, %rd9348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6615,%dummy}, %rd9459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6616}, %rd9459;
	}
	shf.r.wrap.b32 	%r6617, %r6616, %r6615, 28;
	shf.r.wrap.b32 	%r6618, %r6615, %r6616, 28;
	mov.b64 	%rd9486, {%r6618, %r6617};
	shf.l.wrap.b32 	%r6619, %r6615, %r6616, 30;
	shf.l.wrap.b32 	%r6620, %r6616, %r6615, 30;
	mov.b64 	%rd9487, {%r6620, %r6619};
	xor.b64  	%rd9488, %rd9486, %rd9487;
	shf.l.wrap.b32 	%r6621, %r6615, %r6616, 25;
	shf.l.wrap.b32 	%r6622, %r6616, %r6615, 25;
	mov.b64 	%rd9489, {%r6622, %r6621};
	xor.b64  	%rd9490, %rd9488, %rd9489;
	and.b64  	%rd9491, %rd9459, %rd9422;
	or.b64  	%rd9492, %rd9459, %rd9422;
	and.b64  	%rd9493, %rd9492, %rd9385;
	or.b64  	%rd9494, %rd9493, %rd9491;
	add.s64 	%rd9495, %rd9494, %rd9490;
	add.s64 	%rd9496, %rd9495, %rd9484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6623,%dummy}, %rd9854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6624}, %rd9854;
	}
	shf.r.wrap.b32 	%r6625, %r6624, %r6623, 19;
	shf.r.wrap.b32 	%r6626, %r6623, %r6624, 19;
	mov.b64 	%rd9497, {%r6626, %r6625};
	shf.l.wrap.b32 	%r6627, %r6623, %r6624, 3;
	shf.l.wrap.b32 	%r6628, %r6624, %r6623, 3;
	mov.b64 	%rd9498, {%r6628, %r6627};
	xor.b64  	%rd9499, %rd9497, %rd9498;
	shr.u64 	%rd9500, %rd9854, 6;
	xor.b64  	%rd9501, %rd9499, %rd9500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6629,%dummy}, %rd9850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6630}, %rd9850;
	}
	shf.r.wrap.b32 	%r6631, %r6630, %r6629, 8;
	shf.r.wrap.b32 	%r6632, %r6629, %r6630, 8;
	mov.b64 	%rd9502, {%r6632, %r6631};
	shf.r.wrap.b32 	%r6633, %r6630, %r6629, 1;
	shf.r.wrap.b32 	%r6634, %r6629, %r6630, 1;
	mov.b64 	%rd9503, {%r6634, %r6633};
	xor.b64  	%rd9504, %rd9503, %rd9502;
	shr.u64 	%rd9505, %rd9850, 7;
	xor.b64  	%rd9506, %rd9504, %rd9505;
	add.s64 	%rd9507, %rd9501, %rd9851;
	add.s64 	%rd9508, %rd9507, %rd9863;
	add.s64 	%rd9851, %rd9508, %rd9506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6635,%dummy}, %rd9485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6636}, %rd9485;
	}
	shf.r.wrap.b32 	%r6637, %r6636, %r6635, 14;
	shf.r.wrap.b32 	%r6638, %r6635, %r6636, 14;
	mov.b64 	%rd9509, {%r6638, %r6637};
	shf.r.wrap.b32 	%r6639, %r6636, %r6635, 18;
	shf.r.wrap.b32 	%r6640, %r6635, %r6636, 18;
	mov.b64 	%rd9510, {%r6640, %r6639};
	xor.b64  	%rd9511, %rd9509, %rd9510;
	shf.l.wrap.b32 	%r6641, %r6635, %r6636, 23;
	shf.l.wrap.b32 	%r6642, %r6636, %r6635, 23;
	mov.b64 	%rd9512, {%r6642, %r6641};
	xor.b64  	%rd9513, %rd9511, %rd9512;
	xor.b64  	%rd9514, %rd9448, %rd9411;
	and.b64  	%rd9515, %rd9485, %rd9514;
	xor.b64  	%rd9516, %rd9515, %rd9411;
	ld.const.u64 	%rd9517, [%rd9849+312];
	add.s64 	%rd9518, %rd9517, %rd9374;
	add.s64 	%rd9519, %rd9518, %rd9851;
	add.s64 	%rd9520, %rd9519, %rd9516;
	add.s64 	%rd9521, %rd9520, %rd9513;
	add.s64 	%rd9522, %rd9521, %rd9385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6643,%dummy}, %rd9496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6644}, %rd9496;
	}
	shf.r.wrap.b32 	%r6645, %r6644, %r6643, 28;
	shf.r.wrap.b32 	%r6646, %r6643, %r6644, 28;
	mov.b64 	%rd9523, {%r6646, %r6645};
	shf.l.wrap.b32 	%r6647, %r6643, %r6644, 30;
	shf.l.wrap.b32 	%r6648, %r6644, %r6643, 30;
	mov.b64 	%rd9524, {%r6648, %r6647};
	xor.b64  	%rd9525, %rd9523, %rd9524;
	shf.l.wrap.b32 	%r6649, %r6643, %r6644, 25;
	shf.l.wrap.b32 	%r6650, %r6644, %r6643, 25;
	mov.b64 	%rd9526, {%r6650, %r6649};
	xor.b64  	%rd9527, %rd9525, %rd9526;
	and.b64  	%rd9528, %rd9496, %rd9459;
	or.b64  	%rd9529, %rd9496, %rd9459;
	and.b64  	%rd9530, %rd9529, %rd9422;
	or.b64  	%rd9531, %rd9530, %rd9528;
	add.s64 	%rd9532, %rd9531, %rd9527;
	add.s64 	%rd9533, %rd9532, %rd9521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6651,%dummy}, %rd9852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6652}, %rd9852;
	}
	shf.r.wrap.b32 	%r6653, %r6652, %r6651, 19;
	shf.r.wrap.b32 	%r6654, %r6651, %r6652, 19;
	mov.b64 	%rd9534, {%r6654, %r6653};
	shf.l.wrap.b32 	%r6655, %r6651, %r6652, 3;
	shf.l.wrap.b32 	%r6656, %r6652, %r6651, 3;
	mov.b64 	%rd9535, {%r6656, %r6655};
	xor.b64  	%rd9536, %rd9534, %rd9535;
	shr.u64 	%rd9537, %rd9852, 6;
	xor.b64  	%rd9538, %rd9536, %rd9537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6657,%dummy}, %rd9862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6658}, %rd9862;
	}
	shf.r.wrap.b32 	%r6659, %r6658, %r6657, 8;
	shf.r.wrap.b32 	%r6660, %r6657, %r6658, 8;
	mov.b64 	%rd9539, {%r6660, %r6659};
	shf.r.wrap.b32 	%r6661, %r6658, %r6657, 1;
	shf.r.wrap.b32 	%r6662, %r6657, %r6658, 1;
	mov.b64 	%rd9540, {%r6662, %r6661};
	xor.b64  	%rd9541, %rd9540, %rd9539;
	shr.u64 	%rd9542, %rd9862, 7;
	xor.b64  	%rd9543, %rd9541, %rd9542;
	add.s64 	%rd9544, %rd9538, %rd9850;
	add.s64 	%rd9545, %rd9544, %rd9864;
	add.s64 	%rd9850, %rd9545, %rd9543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6663,%dummy}, %rd9522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6664}, %rd9522;
	}
	shf.r.wrap.b32 	%r6665, %r6664, %r6663, 14;
	shf.r.wrap.b32 	%r6666, %r6663, %r6664, 14;
	mov.b64 	%rd9546, {%r6666, %r6665};
	shf.r.wrap.b32 	%r6667, %r6664, %r6663, 18;
	shf.r.wrap.b32 	%r6668, %r6663, %r6664, 18;
	mov.b64 	%rd9547, {%r6668, %r6667};
	xor.b64  	%rd9548, %rd9546, %rd9547;
	shf.l.wrap.b32 	%r6669, %r6663, %r6664, 23;
	shf.l.wrap.b32 	%r6670, %r6664, %r6663, 23;
	mov.b64 	%rd9549, {%r6670, %r6669};
	xor.b64  	%rd9550, %rd9548, %rd9549;
	xor.b64  	%rd9551, %rd9485, %rd9448;
	and.b64  	%rd9552, %rd9522, %rd9551;
	xor.b64  	%rd9553, %rd9552, %rd9448;
	ld.const.u64 	%rd9554, [%rd9849+320];
	add.s64 	%rd9555, %rd9554, %rd9411;
	add.s64 	%rd9556, %rd9555, %rd9850;
	add.s64 	%rd9557, %rd9556, %rd9553;
	add.s64 	%rd9558, %rd9557, %rd9550;
	add.s64 	%rd9559, %rd9558, %rd9422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6671,%dummy}, %rd9533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6672}, %rd9533;
	}
	shf.r.wrap.b32 	%r6673, %r6672, %r6671, 28;
	shf.r.wrap.b32 	%r6674, %r6671, %r6672, 28;
	mov.b64 	%rd9560, {%r6674, %r6673};
	shf.l.wrap.b32 	%r6675, %r6671, %r6672, 30;
	shf.l.wrap.b32 	%r6676, %r6672, %r6671, 30;
	mov.b64 	%rd9561, {%r6676, %r6675};
	xor.b64  	%rd9562, %rd9560, %rd9561;
	shf.l.wrap.b32 	%r6677, %r6671, %r6672, 25;
	shf.l.wrap.b32 	%r6678, %r6672, %r6671, 25;
	mov.b64 	%rd9563, {%r6678, %r6677};
	xor.b64  	%rd9564, %rd9562, %rd9563;
	and.b64  	%rd9565, %rd9533, %rd9496;
	or.b64  	%rd9566, %rd9533, %rd9496;
	and.b64  	%rd9567, %rd9566, %rd9459;
	or.b64  	%rd9568, %rd9567, %rd9565;
	add.s64 	%rd9569, %rd9568, %rd9564;
	add.s64 	%rd9570, %rd9569, %rd9558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6679,%dummy}, %rd9851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6680}, %rd9851;
	}
	shf.r.wrap.b32 	%r6681, %r6680, %r6679, 19;
	shf.r.wrap.b32 	%r6682, %r6679, %r6680, 19;
	mov.b64 	%rd9571, {%r6682, %r6681};
	shf.l.wrap.b32 	%r6683, %r6679, %r6680, 3;
	shf.l.wrap.b32 	%r6684, %r6680, %r6679, 3;
	mov.b64 	%rd9572, {%r6684, %r6683};
	xor.b64  	%rd9573, %rd9571, %rd9572;
	shr.u64 	%rd9574, %rd9851, 6;
	xor.b64  	%rd9575, %rd9573, %rd9574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6685,%dummy}, %rd9859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6686}, %rd9859;
	}
	shf.r.wrap.b32 	%r6687, %r6686, %r6685, 8;
	shf.r.wrap.b32 	%r6688, %r6685, %r6686, 8;
	mov.b64 	%rd9576, {%r6688, %r6687};
	shf.r.wrap.b32 	%r6689, %r6686, %r6685, 1;
	shf.r.wrap.b32 	%r6690, %r6685, %r6686, 1;
	mov.b64 	%rd9577, {%r6690, %r6689};
	xor.b64  	%rd9578, %rd9577, %rd9576;
	shr.u64 	%rd9579, %rd9859, 7;
	xor.b64  	%rd9580, %rd9578, %rd9579;
	add.s64 	%rd9581, %rd9575, %rd9862;
	add.s64 	%rd9582, %rd9581, %rd9860;
	add.s64 	%rd9862, %rd9582, %rd9580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6691,%dummy}, %rd9559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6692}, %rd9559;
	}
	shf.r.wrap.b32 	%r6693, %r6692, %r6691, 14;
	shf.r.wrap.b32 	%r6694, %r6691, %r6692, 14;
	mov.b64 	%rd9583, {%r6694, %r6693};
	shf.r.wrap.b32 	%r6695, %r6692, %r6691, 18;
	shf.r.wrap.b32 	%r6696, %r6691, %r6692, 18;
	mov.b64 	%rd9584, {%r6696, %r6695};
	xor.b64  	%rd9585, %rd9583, %rd9584;
	shf.l.wrap.b32 	%r6697, %r6691, %r6692, 23;
	shf.l.wrap.b32 	%r6698, %r6692, %r6691, 23;
	mov.b64 	%rd9586, {%r6698, %r6697};
	xor.b64  	%rd9587, %rd9585, %rd9586;
	xor.b64  	%rd9588, %rd9522, %rd9485;
	and.b64  	%rd9589, %rd9559, %rd9588;
	xor.b64  	%rd9590, %rd9589, %rd9485;
	ld.const.u64 	%rd9591, [%rd9849+328];
	add.s64 	%rd9592, %rd9591, %rd9448;
	add.s64 	%rd9593, %rd9592, %rd9862;
	add.s64 	%rd9594, %rd9593, %rd9590;
	add.s64 	%rd9595, %rd9594, %rd9587;
	add.s64 	%rd9596, %rd9595, %rd9459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6699,%dummy}, %rd9570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6700}, %rd9570;
	}
	shf.r.wrap.b32 	%r6701, %r6700, %r6699, 28;
	shf.r.wrap.b32 	%r6702, %r6699, %r6700, 28;
	mov.b64 	%rd9597, {%r6702, %r6701};
	shf.l.wrap.b32 	%r6703, %r6699, %r6700, 30;
	shf.l.wrap.b32 	%r6704, %r6700, %r6699, 30;
	mov.b64 	%rd9598, {%r6704, %r6703};
	xor.b64  	%rd9599, %rd9597, %rd9598;
	shf.l.wrap.b32 	%r6705, %r6699, %r6700, 25;
	shf.l.wrap.b32 	%r6706, %r6700, %r6699, 25;
	mov.b64 	%rd9600, {%r6706, %r6705};
	xor.b64  	%rd9601, %rd9599, %rd9600;
	and.b64  	%rd9602, %rd9570, %rd9533;
	or.b64  	%rd9603, %rd9570, %rd9533;
	and.b64  	%rd9604, %rd9603, %rd9496;
	or.b64  	%rd9605, %rd9604, %rd9602;
	add.s64 	%rd9606, %rd9605, %rd9601;
	add.s64 	%rd9607, %rd9606, %rd9595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6707,%dummy}, %rd9850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6708}, %rd9850;
	}
	shf.r.wrap.b32 	%r6709, %r6708, %r6707, 19;
	shf.r.wrap.b32 	%r6710, %r6707, %r6708, 19;
	mov.b64 	%rd9608, {%r6710, %r6709};
	shf.l.wrap.b32 	%r6711, %r6707, %r6708, 3;
	shf.l.wrap.b32 	%r6712, %r6708, %r6707, 3;
	mov.b64 	%rd9609, {%r6712, %r6711};
	xor.b64  	%rd9610, %rd9608, %rd9609;
	shr.u64 	%rd9611, %rd9850, 6;
	xor.b64  	%rd9612, %rd9610, %rd9611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6713,%dummy}, %rd9857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6714}, %rd9857;
	}
	shf.r.wrap.b32 	%r6715, %r6714, %r6713, 8;
	shf.r.wrap.b32 	%r6716, %r6713, %r6714, 8;
	mov.b64 	%rd9613, {%r6716, %r6715};
	shf.r.wrap.b32 	%r6717, %r6714, %r6713, 1;
	shf.r.wrap.b32 	%r6718, %r6713, %r6714, 1;
	mov.b64 	%rd9614, {%r6718, %r6717};
	xor.b64  	%rd9615, %rd9614, %rd9613;
	shr.u64 	%rd9616, %rd9857, 7;
	xor.b64  	%rd9617, %rd9615, %rd9616;
	add.s64 	%rd9618, %rd9612, %rd9859;
	add.s64 	%rd9619, %rd9618, %rd9858;
	add.s64 	%rd9859, %rd9619, %rd9617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6719,%dummy}, %rd9596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6720}, %rd9596;
	}
	shf.r.wrap.b32 	%r6721, %r6720, %r6719, 14;
	shf.r.wrap.b32 	%r6722, %r6719, %r6720, 14;
	mov.b64 	%rd9620, {%r6722, %r6721};
	shf.r.wrap.b32 	%r6723, %r6720, %r6719, 18;
	shf.r.wrap.b32 	%r6724, %r6719, %r6720, 18;
	mov.b64 	%rd9621, {%r6724, %r6723};
	xor.b64  	%rd9622, %rd9620, %rd9621;
	shf.l.wrap.b32 	%r6725, %r6719, %r6720, 23;
	shf.l.wrap.b32 	%r6726, %r6720, %r6719, 23;
	mov.b64 	%rd9623, {%r6726, %r6725};
	xor.b64  	%rd9624, %rd9622, %rd9623;
	xor.b64  	%rd9625, %rd9559, %rd9522;
	and.b64  	%rd9626, %rd9596, %rd9625;
	xor.b64  	%rd9627, %rd9626, %rd9522;
	ld.const.u64 	%rd9628, [%rd9849+336];
	add.s64 	%rd9629, %rd9628, %rd9485;
	add.s64 	%rd9630, %rd9629, %rd9859;
	add.s64 	%rd9631, %rd9630, %rd9627;
	add.s64 	%rd9632, %rd9631, %rd9624;
	add.s64 	%rd9633, %rd9632, %rd9496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6727,%dummy}, %rd9607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6728}, %rd9607;
	}
	shf.r.wrap.b32 	%r6729, %r6728, %r6727, 28;
	shf.r.wrap.b32 	%r6730, %r6727, %r6728, 28;
	mov.b64 	%rd9634, {%r6730, %r6729};
	shf.l.wrap.b32 	%r6731, %r6727, %r6728, 30;
	shf.l.wrap.b32 	%r6732, %r6728, %r6727, 30;
	mov.b64 	%rd9635, {%r6732, %r6731};
	xor.b64  	%rd9636, %rd9634, %rd9635;
	shf.l.wrap.b32 	%r6733, %r6727, %r6728, 25;
	shf.l.wrap.b32 	%r6734, %r6728, %r6727, 25;
	mov.b64 	%rd9637, {%r6734, %r6733};
	xor.b64  	%rd9638, %rd9636, %rd9637;
	and.b64  	%rd9639, %rd9607, %rd9570;
	or.b64  	%rd9640, %rd9607, %rd9570;
	and.b64  	%rd9641, %rd9640, %rd9533;
	or.b64  	%rd9642, %rd9641, %rd9639;
	add.s64 	%rd9643, %rd9642, %rd9638;
	add.s64 	%rd9644, %rd9643, %rd9632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6735,%dummy}, %rd9862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6736}, %rd9862;
	}
	shf.r.wrap.b32 	%r6737, %r6736, %r6735, 19;
	shf.r.wrap.b32 	%r6738, %r6735, %r6736, 19;
	mov.b64 	%rd9645, {%r6738, %r6737};
	shf.l.wrap.b32 	%r6739, %r6735, %r6736, 3;
	shf.l.wrap.b32 	%r6740, %r6736, %r6735, 3;
	mov.b64 	%rd9646, {%r6740, %r6739};
	xor.b64  	%rd9647, %rd9645, %rd9646;
	shr.u64 	%rd9648, %rd9862, 6;
	xor.b64  	%rd9649, %rd9647, %rd9648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6741,%dummy}, %rd9855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6742}, %rd9855;
	}
	shf.r.wrap.b32 	%r6743, %r6742, %r6741, 8;
	shf.r.wrap.b32 	%r6744, %r6741, %r6742, 8;
	mov.b64 	%rd9650, {%r6744, %r6743};
	shf.r.wrap.b32 	%r6745, %r6742, %r6741, 1;
	shf.r.wrap.b32 	%r6746, %r6741, %r6742, 1;
	mov.b64 	%rd9651, {%r6746, %r6745};
	xor.b64  	%rd9652, %rd9651, %rd9650;
	shr.u64 	%rd9653, %rd9855, 7;
	xor.b64  	%rd9654, %rd9652, %rd9653;
	add.s64 	%rd9655, %rd9649, %rd9857;
	add.s64 	%rd9656, %rd9655, %rd9856;
	add.s64 	%rd9857, %rd9656, %rd9654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6747,%dummy}, %rd9633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6748}, %rd9633;
	}
	shf.r.wrap.b32 	%r6749, %r6748, %r6747, 14;
	shf.r.wrap.b32 	%r6750, %r6747, %r6748, 14;
	mov.b64 	%rd9657, {%r6750, %r6749};
	shf.r.wrap.b32 	%r6751, %r6748, %r6747, 18;
	shf.r.wrap.b32 	%r6752, %r6747, %r6748, 18;
	mov.b64 	%rd9658, {%r6752, %r6751};
	xor.b64  	%rd9659, %rd9657, %rd9658;
	shf.l.wrap.b32 	%r6753, %r6747, %r6748, 23;
	shf.l.wrap.b32 	%r6754, %r6748, %r6747, 23;
	mov.b64 	%rd9660, {%r6754, %r6753};
	xor.b64  	%rd9661, %rd9659, %rd9660;
	xor.b64  	%rd9662, %rd9596, %rd9559;
	and.b64  	%rd9663, %rd9633, %rd9662;
	xor.b64  	%rd9664, %rd9663, %rd9559;
	ld.const.u64 	%rd9665, [%rd9849+344];
	add.s64 	%rd9666, %rd9665, %rd9522;
	add.s64 	%rd9667, %rd9666, %rd9857;
	add.s64 	%rd9668, %rd9667, %rd9664;
	add.s64 	%rd9669, %rd9668, %rd9661;
	add.s64 	%rd9670, %rd9669, %rd9533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6755,%dummy}, %rd9644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6756}, %rd9644;
	}
	shf.r.wrap.b32 	%r6757, %r6756, %r6755, 28;
	shf.r.wrap.b32 	%r6758, %r6755, %r6756, 28;
	mov.b64 	%rd9671, {%r6758, %r6757};
	shf.l.wrap.b32 	%r6759, %r6755, %r6756, 30;
	shf.l.wrap.b32 	%r6760, %r6756, %r6755, 30;
	mov.b64 	%rd9672, {%r6760, %r6759};
	xor.b64  	%rd9673, %rd9671, %rd9672;
	shf.l.wrap.b32 	%r6761, %r6755, %r6756, 25;
	shf.l.wrap.b32 	%r6762, %r6756, %r6755, 25;
	mov.b64 	%rd9674, {%r6762, %r6761};
	xor.b64  	%rd9675, %rd9673, %rd9674;
	and.b64  	%rd9676, %rd9644, %rd9607;
	or.b64  	%rd9677, %rd9644, %rd9607;
	and.b64  	%rd9678, %rd9677, %rd9570;
	or.b64  	%rd9679, %rd9678, %rd9676;
	add.s64 	%rd9680, %rd9679, %rd9675;
	add.s64 	%rd9681, %rd9680, %rd9669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6763,%dummy}, %rd9859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6764}, %rd9859;
	}
	shf.r.wrap.b32 	%r6765, %r6764, %r6763, 19;
	shf.r.wrap.b32 	%r6766, %r6763, %r6764, 19;
	mov.b64 	%rd9682, {%r6766, %r6765};
	shf.l.wrap.b32 	%r6767, %r6763, %r6764, 3;
	shf.l.wrap.b32 	%r6768, %r6764, %r6763, 3;
	mov.b64 	%rd9683, {%r6768, %r6767};
	xor.b64  	%rd9684, %rd9682, %rd9683;
	shr.u64 	%rd9685, %rd9859, 6;
	xor.b64  	%rd9686, %rd9684, %rd9685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6769,%dummy}, %rd9853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6770}, %rd9853;
	}
	shf.r.wrap.b32 	%r6771, %r6770, %r6769, 8;
	shf.r.wrap.b32 	%r6772, %r6769, %r6770, 8;
	mov.b64 	%rd9687, {%r6772, %r6771};
	shf.r.wrap.b32 	%r6773, %r6770, %r6769, 1;
	shf.r.wrap.b32 	%r6774, %r6769, %r6770, 1;
	mov.b64 	%rd9688, {%r6774, %r6773};
	xor.b64  	%rd9689, %rd9688, %rd9687;
	shr.u64 	%rd9690, %rd9853, 7;
	xor.b64  	%rd9691, %rd9689, %rd9690;
	add.s64 	%rd9692, %rd9686, %rd9855;
	add.s64 	%rd9693, %rd9692, %rd9854;
	add.s64 	%rd9855, %rd9693, %rd9691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6775,%dummy}, %rd9670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6776}, %rd9670;
	}
	shf.r.wrap.b32 	%r6777, %r6776, %r6775, 14;
	shf.r.wrap.b32 	%r6778, %r6775, %r6776, 14;
	mov.b64 	%rd9694, {%r6778, %r6777};
	shf.r.wrap.b32 	%r6779, %r6776, %r6775, 18;
	shf.r.wrap.b32 	%r6780, %r6775, %r6776, 18;
	mov.b64 	%rd9695, {%r6780, %r6779};
	xor.b64  	%rd9696, %rd9694, %rd9695;
	shf.l.wrap.b32 	%r6781, %r6775, %r6776, 23;
	shf.l.wrap.b32 	%r6782, %r6776, %r6775, 23;
	mov.b64 	%rd9697, {%r6782, %r6781};
	xor.b64  	%rd9698, %rd9696, %rd9697;
	xor.b64  	%rd9699, %rd9633, %rd9596;
	and.b64  	%rd9700, %rd9670, %rd9699;
	xor.b64  	%rd9701, %rd9700, %rd9596;
	ld.const.u64 	%rd9702, [%rd9849+352];
	add.s64 	%rd9703, %rd9702, %rd9559;
	add.s64 	%rd9704, %rd9703, %rd9855;
	add.s64 	%rd9705, %rd9704, %rd9701;
	add.s64 	%rd9706, %rd9705, %rd9698;
	add.s64 	%rd9866, %rd9706, %rd9570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6783,%dummy}, %rd9681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6784}, %rd9681;
	}
	shf.r.wrap.b32 	%r6785, %r6784, %r6783, 28;
	shf.r.wrap.b32 	%r6786, %r6783, %r6784, 28;
	mov.b64 	%rd9707, {%r6786, %r6785};
	shf.l.wrap.b32 	%r6787, %r6783, %r6784, 30;
	shf.l.wrap.b32 	%r6788, %r6784, %r6783, 30;
	mov.b64 	%rd9708, {%r6788, %r6787};
	xor.b64  	%rd9709, %rd9707, %rd9708;
	shf.l.wrap.b32 	%r6789, %r6783, %r6784, 25;
	shf.l.wrap.b32 	%r6790, %r6784, %r6783, 25;
	mov.b64 	%rd9710, {%r6790, %r6789};
	xor.b64  	%rd9711, %rd9709, %rd9710;
	and.b64  	%rd9712, %rd9681, %rd9644;
	or.b64  	%rd9713, %rd9681, %rd9644;
	and.b64  	%rd9714, %rd9713, %rd9607;
	or.b64  	%rd9715, %rd9714, %rd9712;
	add.s64 	%rd9716, %rd9715, %rd9711;
	add.s64 	%rd9873, %rd9716, %rd9706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6791,%dummy}, %rd9857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6792}, %rd9857;
	}
	shf.r.wrap.b32 	%r6793, %r6792, %r6791, 19;
	shf.r.wrap.b32 	%r6794, %r6791, %r6792, 19;
	mov.b64 	%rd9717, {%r6794, %r6793};
	shf.l.wrap.b32 	%r6795, %r6791, %r6792, 3;
	shf.l.wrap.b32 	%r6796, %r6792, %r6791, 3;
	mov.b64 	%rd9718, {%r6796, %r6795};
	xor.b64  	%rd9719, %rd9717, %rd9718;
	shr.u64 	%rd9720, %rd9857, 6;
	xor.b64  	%rd9721, %rd9719, %rd9720;
	shf.r.wrap.b32 	%r6797, %r6427, %r6428, 8;
	shf.r.wrap.b32 	%r6798, %r6428, %r6427, 8;
	mov.b64 	%rd9722, {%r6798, %r6797};
	shf.r.wrap.b32 	%r6799, %r6427, %r6428, 1;
	shf.r.wrap.b32 	%r6800, %r6428, %r6427, 1;
	mov.b64 	%rd9723, {%r6800, %r6799};
	xor.b64  	%rd9724, %rd9723, %rd9722;
	shr.u64 	%rd9725, %rd9865, 7;
	xor.b64  	%rd9726, %rd9724, %rd9725;
	add.s64 	%rd9727, %rd9721, %rd9853;
	add.s64 	%rd9728, %rd9727, %rd9852;
	add.s64 	%rd9853, %rd9728, %rd9726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6801,%dummy}, %rd9866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6802}, %rd9866;
	}
	shf.r.wrap.b32 	%r6803, %r6802, %r6801, 14;
	shf.r.wrap.b32 	%r6804, %r6801, %r6802, 14;
	mov.b64 	%rd9729, {%r6804, %r6803};
	shf.r.wrap.b32 	%r6805, %r6802, %r6801, 18;
	shf.r.wrap.b32 	%r6806, %r6801, %r6802, 18;
	mov.b64 	%rd9730, {%r6806, %r6805};
	xor.b64  	%rd9731, %rd9729, %rd9730;
	shf.l.wrap.b32 	%r6807, %r6801, %r6802, 23;
	shf.l.wrap.b32 	%r6808, %r6802, %r6801, 23;
	mov.b64 	%rd9732, {%r6808, %r6807};
	xor.b64  	%rd9733, %rd9731, %rd9732;
	xor.b64  	%rd9734, %rd9670, %rd9633;
	and.b64  	%rd9735, %rd9866, %rd9734;
	xor.b64  	%rd9736, %rd9735, %rd9633;
	ld.const.u64 	%rd9737, [%rd9849+360];
	add.s64 	%rd9738, %rd9737, %rd9596;
	add.s64 	%rd9739, %rd9738, %rd9853;
	add.s64 	%rd9740, %rd9739, %rd9736;
	add.s64 	%rd9741, %rd9740, %rd9733;
	add.s64 	%rd9867, %rd9741, %rd9607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6809,%dummy}, %rd9873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6810}, %rd9873;
	}
	shf.r.wrap.b32 	%r6811, %r6810, %r6809, 28;
	shf.r.wrap.b32 	%r6812, %r6809, %r6810, 28;
	mov.b64 	%rd9742, {%r6812, %r6811};
	shf.l.wrap.b32 	%r6813, %r6809, %r6810, 30;
	shf.l.wrap.b32 	%r6814, %r6810, %r6809, 30;
	mov.b64 	%rd9743, {%r6814, %r6813};
	xor.b64  	%rd9744, %rd9742, %rd9743;
	shf.l.wrap.b32 	%r6815, %r6809, %r6810, 25;
	shf.l.wrap.b32 	%r6816, %r6810, %r6809, 25;
	mov.b64 	%rd9745, {%r6816, %r6815};
	xor.b64  	%rd9746, %rd9744, %rd9745;
	and.b64  	%rd9747, %rd9873, %rd9681;
	or.b64  	%rd9748, %rd9873, %rd9681;
	and.b64  	%rd9749, %rd9748, %rd9644;
	or.b64  	%rd9750, %rd9749, %rd9747;
	add.s64 	%rd9751, %rd9750, %rd9746;
	add.s64 	%rd9872, %rd9751, %rd9741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6817,%dummy}, %rd9855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6818}, %rd9855;
	}
	shf.r.wrap.b32 	%r6819, %r6818, %r6817, 19;
	shf.r.wrap.b32 	%r6820, %r6817, %r6818, 19;
	mov.b64 	%rd9752, {%r6820, %r6819};
	shf.l.wrap.b32 	%r6821, %r6817, %r6818, 3;
	shf.l.wrap.b32 	%r6822, %r6818, %r6817, 3;
	mov.b64 	%rd9753, {%r6822, %r6821};
	xor.b64  	%rd9754, %rd9752, %rd9753;
	shr.u64 	%rd9755, %rd9855, 6;
	xor.b64  	%rd9756, %rd9754, %rd9755;
	shf.r.wrap.b32 	%r6823, %r6455, %r6456, 8;
	shf.r.wrap.b32 	%r6824, %r6456, %r6455, 8;
	mov.b64 	%rd9757, {%r6824, %r6823};
	shf.r.wrap.b32 	%r6825, %r6455, %r6456, 1;
	shf.r.wrap.b32 	%r6826, %r6456, %r6455, 1;
	mov.b64 	%rd9758, {%r6826, %r6825};
	xor.b64  	%rd9759, %rd9758, %rd9757;
	shr.u64 	%rd9760, %rd9861, 7;
	xor.b64  	%rd9761, %rd9759, %rd9760;
	add.s64 	%rd9762, %rd9756, %rd9865;
	add.s64 	%rd9763, %rd9762, %rd9851;
	add.s64 	%rd9865, %rd9763, %rd9761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6827,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6828}, %rd9867;
	}
	shf.r.wrap.b32 	%r6829, %r6828, %r6827, 14;
	shf.r.wrap.b32 	%r6830, %r6827, %r6828, 14;
	mov.b64 	%rd9764, {%r6830, %r6829};
	shf.r.wrap.b32 	%r6831, %r6828, %r6827, 18;
	shf.r.wrap.b32 	%r6832, %r6827, %r6828, 18;
	mov.b64 	%rd9765, {%r6832, %r6831};
	xor.b64  	%rd9766, %rd9764, %rd9765;
	shf.l.wrap.b32 	%r6833, %r6827, %r6828, 23;
	shf.l.wrap.b32 	%r6834, %r6828, %r6827, 23;
	mov.b64 	%rd9767, {%r6834, %r6833};
	xor.b64  	%rd9768, %rd9766, %rd9767;
	xor.b64  	%rd9769, %rd9866, %rd9670;
	and.b64  	%rd9770, %rd9867, %rd9769;
	xor.b64  	%rd9771, %rd9770, %rd9670;
	ld.const.u64 	%rd9772, [%rd9849+368];
	add.s64 	%rd9773, %rd9772, %rd9633;
	add.s64 	%rd9774, %rd9773, %rd9865;
	add.s64 	%rd9775, %rd9774, %rd9771;
	add.s64 	%rd9776, %rd9775, %rd9768;
	add.s64 	%rd9868, %rd9776, %rd9644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6835,%dummy}, %rd9872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6836}, %rd9872;
	}
	shf.r.wrap.b32 	%r6837, %r6836, %r6835, 28;
	shf.r.wrap.b32 	%r6838, %r6835, %r6836, 28;
	mov.b64 	%rd9777, {%r6838, %r6837};
	shf.l.wrap.b32 	%r6839, %r6835, %r6836, 30;
	shf.l.wrap.b32 	%r6840, %r6836, %r6835, 30;
	mov.b64 	%rd9778, {%r6840, %r6839};
	xor.b64  	%rd9779, %rd9777, %rd9778;
	shf.l.wrap.b32 	%r6841, %r6835, %r6836, 25;
	shf.l.wrap.b32 	%r6842, %r6836, %r6835, 25;
	mov.b64 	%rd9780, {%r6842, %r6841};
	xor.b64  	%rd9781, %rd9779, %rd9780;
	and.b64  	%rd9782, %rd9872, %rd9873;
	or.b64  	%rd9783, %rd9872, %rd9873;
	and.b64  	%rd9784, %rd9783, %rd9681;
	or.b64  	%rd9785, %rd9784, %rd9782;
	add.s64 	%rd9786, %rd9785, %rd9781;
	add.s64 	%rd9871, %rd9786, %rd9776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6843,%dummy}, %rd9853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6844}, %rd9853;
	}
	shf.r.wrap.b32 	%r6845, %r6844, %r6843, 19;
	shf.r.wrap.b32 	%r6846, %r6843, %r6844, 19;
	mov.b64 	%rd9787, {%r6846, %r6845};
	shf.l.wrap.b32 	%r6847, %r6843, %r6844, 3;
	shf.l.wrap.b32 	%r6848, %r6844, %r6843, 3;
	mov.b64 	%rd9788, {%r6848, %r6847};
	xor.b64  	%rd9789, %rd9787, %rd9788;
	shr.u64 	%rd9790, %rd9853, 6;
	xor.b64  	%rd9791, %rd9789, %rd9790;
	shf.r.wrap.b32 	%r6849, %r6484, %r6483, 1;
	shf.r.wrap.b32 	%r6850, %r6483, %r6484, 1;
	mov.b64 	%rd9792, {%r6850, %r6849};
	shf.r.wrap.b32 	%r6851, %r6484, %r6483, 8;
	shf.r.wrap.b32 	%r6852, %r6483, %r6484, 8;
	mov.b64 	%rd9793, {%r6852, %r6851};
	xor.b64  	%rd9794, %rd9792, %rd9793;
	shr.u64 	%rd9795, %rd9863, 7;
	xor.b64  	%rd9796, %rd9794, %rd9795;
	add.s64 	%rd9797, %rd9791, %rd9861;
	add.s64 	%rd9798, %rd9797, %rd9850;
	add.s64 	%rd9861, %rd9798, %rd9796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6853,%dummy}, %rd9868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6854}, %rd9868;
	}
	shf.r.wrap.b32 	%r6855, %r6854, %r6853, 14;
	shf.r.wrap.b32 	%r6856, %r6853, %r6854, 14;
	mov.b64 	%rd9799, {%r6856, %r6855};
	shf.r.wrap.b32 	%r6857, %r6854, %r6853, 18;
	shf.r.wrap.b32 	%r6858, %r6853, %r6854, 18;
	mov.b64 	%rd9800, {%r6858, %r6857};
	xor.b64  	%rd9801, %rd9799, %rd9800;
	shf.l.wrap.b32 	%r6859, %r6853, %r6854, 23;
	shf.l.wrap.b32 	%r6860, %r6854, %r6853, 23;
	mov.b64 	%rd9802, {%r6860, %r6859};
	xor.b64  	%rd9803, %rd9801, %rd9802;
	xor.b64  	%rd9804, %rd9867, %rd9866;
	and.b64  	%rd9805, %rd9868, %rd9804;
	xor.b64  	%rd9806, %rd9805, %rd9866;
	ld.const.u64 	%rd9807, [%rd9849+376];
	add.s64 	%rd9808, %rd9807, %rd9670;
	add.s64 	%rd9809, %rd9808, %rd9861;
	add.s64 	%rd9810, %rd9809, %rd9806;
	add.s64 	%rd9811, %rd9810, %rd9803;
	add.s64 	%rd9869, %rd9811, %rd9681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6861,%dummy}, %rd9871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6862}, %rd9871;
	}
	shf.r.wrap.b32 	%r6863, %r6862, %r6861, 28;
	shf.r.wrap.b32 	%r6864, %r6861, %r6862, 28;
	mov.b64 	%rd9812, {%r6864, %r6863};
	shf.l.wrap.b32 	%r6865, %r6861, %r6862, 30;
	shf.l.wrap.b32 	%r6866, %r6862, %r6861, 30;
	mov.b64 	%rd9813, {%r6866, %r6865};
	xor.b64  	%rd9814, %rd9812, %rd9813;
	shf.l.wrap.b32 	%r6867, %r6861, %r6862, 25;
	shf.l.wrap.b32 	%r6868, %r6862, %r6861, 25;
	mov.b64 	%rd9815, {%r6868, %r6867};
	xor.b64  	%rd9816, %rd9814, %rd9815;
	and.b64  	%rd9817, %rd9871, %rd9872;
	or.b64  	%rd9818, %rd9871, %rd9872;
	and.b64  	%rd9819, %rd9818, %rd9873;
	or.b64  	%rd9820, %rd9819, %rd9817;
	add.s64 	%rd9821, %rd9820, %rd9816;
	add.s64 	%rd9870, %rd9821, %rd9811;
	add.s64 	%rd9849, %rd9849, 128;
	add.s32 	%r6876, %r6876, 16;
	setp.lt.u32 	%p3, %r6876, 65;
	@%p3 bra 	$L__BB6_5;

	mov.b32 	%r6874, %envreg3;
	mov.u32 	%r6873, %tid.x;
	add.s32 	%r6872, %r6873, %r6874;
	mov.u32 	%r6871, %ctaid.x;
	mov.u32 	%r6870, %ntid.x;
	mad.lo.s32 	%r6869, %r6870, %r6871, %r6872;
	cvt.u64.u32 	%rd9833, %r6869;
	ld.param.u64 	%rd9832, [enpass6_init_param_2];
	mul.lo.s64 	%rd9822, %rd9833, 264;
	add.s64 	%rd9823, %rd9832, %rd9822;
	st.global.u64 	[%rd9823], %rd6;
	st.global.u64 	[%rd9823+64], %rd17;
	add.s64 	%rd9824, %rd17, %rd9870;
	st.global.u64 	[%rd9823+128], %rd9824;
	st.global.u64 	[%rd9823+192], %rd9824;
	st.global.u64 	[%rd9823+8], %rd7;
	st.global.u64 	[%rd9823+72], %rd18;
	add.s64 	%rd9825, %rd18, %rd9871;
	st.global.u64 	[%rd9823+136], %rd9825;
	st.global.u64 	[%rd9823+200], %rd9825;
	st.global.u64 	[%rd9823+16], %rd8;
	st.global.u64 	[%rd9823+80], %rd19;
	add.s64 	%rd9826, %rd19, %rd9872;
	st.global.u64 	[%rd9823+144], %rd9826;
	st.global.u64 	[%rd9823+208], %rd9826;
	st.global.u64 	[%rd9823+24], %rd9;
	st.global.u64 	[%rd9823+88], %rd20;
	add.s64 	%rd9827, %rd20, %rd9873;
	st.global.u64 	[%rd9823+152], %rd9827;
	st.global.u64 	[%rd9823+216], %rd9827;
	st.global.u64 	[%rd9823+32], %rd10;
	st.global.u64 	[%rd9823+96], %rd21;
	add.s64 	%rd9828, %rd21, %rd9869;
	st.global.u64 	[%rd9823+160], %rd9828;
	st.global.u64 	[%rd9823+224], %rd9828;
	st.global.u64 	[%rd9823+40], %rd11;
	st.global.u64 	[%rd9823+104], %rd22;
	add.s64 	%rd9829, %rd22, %rd9868;
	st.global.u64 	[%rd9823+168], %rd9829;
	st.global.u64 	[%rd9823+232], %rd9829;
	st.global.u64 	[%rd9823+48], %rd12;
	st.global.u64 	[%rd9823+112], %rd23;
	add.s64 	%rd9830, %rd23, %rd9867;
	st.global.u64 	[%rd9823+176], %rd9830;
	st.global.u64 	[%rd9823+240], %rd9830;
	st.global.u64 	[%rd9823+56], %rd13;
	st.global.u64 	[%rd9823+120], %rd54;
	add.s64 	%rd9831, %rd54, %rd9866;
	st.global.u64 	[%rd9823+184], %rd9831;
	st.global.u64 	[%rd9823+248], %rd9831;
	ret;

}
	// .globl	enpass6_final
.entry enpass6_final(
	.param .u64 .ptr .global .align 8 enpass6_final_param_0,
	.param .u64 .ptr .global .align 4 enpass6_final_param_1,
	.param .u64 .ptr .global .align 8 enpass6_final_param_2
)
{
	.local .align 16 .b8 	__local_depot7[976];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<26>;
	.reg .b32 	%r<3358>;
	.reg .b64 	%rd<139>;


	mov.u64 	%SPL, __local_depot7;
	ld.param.u64 	%rd11, [enpass6_final_param_0];
	ld.param.u64 	%rd12, [enpass6_final_param_2];
	mov.u32 	%r55, %ctaid.x;
	mov.u32 	%r56, %ntid.x;
	mov.u32 	%r57, %tid.x;
	mov.b32 	%r58, %envreg3;
	add.s32 	%r59, %r57, %r58;
	mad.lo.s32 	%r60, %r56, %r55, %r59;
	cvt.u64.u32 	%rd1, %r60;
	mul.wide.u32 	%rd13, %r60, 64;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.u64 	%rd15, [%rd14];
	shl.b64 	%rd16, %rd15, 56;
	shl.b64 	%rd17, %rd15, 40;
	and.b64  	%rd18, %rd17, 71776119061217280;
	or.b64  	%rd19, %rd18, %rd16;
	and.b64  	%rd20, %rd15, 16711680;
	shl.b64 	%rd21, %rd15, 24;
	and.b64  	%rd22, %rd21, 280375465082880;
	or.b64  	%rd23, %rd19, %rd22;
	and.b64  	%rd24, %rd15, 4278190080;
	shl.b64 	%rd25, %rd15, 8;
	and.b64  	%rd26, %rd25, 1095216660480;
	or.b64  	%rd27, %rd23, %rd26;
	shr.u64 	%rd28, %rd15, 8;
	and.b64  	%rd29, %rd28, 4278190080;
	or.b64  	%rd30, %rd27, %rd29;
	shr.u64 	%rd31, %rd15, 24;
	and.b64  	%rd32, %rd31, 16711680;
	or.b64  	%rd33, %rd30, %rd32;
	shr.u64 	%rd34, %rd15, 40;
	and.b64  	%rd35, %rd34, 65280;
	or.b64  	%rd36, %rd33, %rd35;
	shr.u64 	%rd37, %rd15, 56;
	ld.global.u64 	%rd38, [%rd14+8];
	shl.b64 	%rd39, %rd38, 56;
	shl.b64 	%rd40, %rd38, 40;
	and.b64  	%rd41, %rd40, 71776119061217280;
	or.b64  	%rd42, %rd41, %rd39;
	and.b64  	%rd43, %rd38, 16711680;
	shl.b64 	%rd44, %rd38, 24;
	and.b64  	%rd45, %rd44, 280375465082880;
	or.b64  	%rd46, %rd42, %rd45;
	and.b64  	%rd47, %rd38, 4278190080;
	shl.b64 	%rd48, %rd38, 8;
	and.b64  	%rd49, %rd48, 1095216660480;
	or.b64  	%rd50, %rd46, %rd49;
	shr.u64 	%rd51, %rd38, 8;
	and.b64  	%rd52, %rd51, 4278190080;
	or.b64  	%rd53, %rd50, %rd52;
	shr.u64 	%rd54, %rd38, 24;
	and.b64  	%rd55, %rd54, 16711680;
	or.b64  	%rd56, %rd53, %rd55;
	shr.u64 	%rd57, %rd38, 40;
	and.b64  	%rd58, %rd57, 65280;
	or.b64  	%rd59, %rd56, %rd58;
	shr.u64 	%rd60, %rd38, 56;
	ld.global.u64 	%rd61, [%rd14+16];
	shl.b64 	%rd62, %rd61, 56;
	shl.b64 	%rd63, %rd61, 40;
	and.b64  	%rd64, %rd63, 71776119061217280;
	or.b64  	%rd65, %rd64, %rd62;
	and.b64  	%rd66, %rd61, 16711680;
	shl.b64 	%rd67, %rd61, 24;
	and.b64  	%rd68, %rd67, 280375465082880;
	or.b64  	%rd69, %rd65, %rd68;
	and.b64  	%rd70, %rd61, 4278190080;
	shl.b64 	%rd71, %rd61, 8;
	and.b64  	%rd72, %rd71, 1095216660480;
	or.b64  	%rd73, %rd69, %rd72;
	shr.u64 	%rd74, %rd61, 8;
	and.b64  	%rd75, %rd74, 4278190080;
	or.b64  	%rd76, %rd73, %rd75;
	shr.u64 	%rd77, %rd61, 24;
	and.b64  	%rd78, %rd77, 16711680;
	or.b64  	%rd79, %rd76, %rd78;
	shr.u64 	%rd80, %rd61, 40;
	and.b64  	%rd81, %rd80, 65280;
	or.b64  	%rd82, %rd79, %rd81;
	shr.u64 	%rd83, %rd61, 56;
	ld.global.u64 	%rd84, [%rd14+24];
	shl.b64 	%rd85, %rd84, 56;
	shl.b64 	%rd86, %rd84, 40;
	and.b64  	%rd87, %rd86, 71776119061217280;
	or.b64  	%rd88, %rd87, %rd85;
	and.b64  	%rd89, %rd84, 16711680;
	shl.b64 	%rd90, %rd84, 24;
	and.b64  	%rd91, %rd90, 280375465082880;
	or.b64  	%rd92, %rd88, %rd91;
	and.b64  	%rd93, %rd84, 4278190080;
	shl.b64 	%rd94, %rd84, 8;
	and.b64  	%rd95, %rd94, 1095216660480;
	or.b64  	%rd96, %rd92, %rd95;
	shr.u64 	%rd97, %rd84, 8;
	and.b64  	%rd98, %rd97, 4278190080;
	or.b64  	%rd99, %rd96, %rd98;
	shr.u64 	%rd100, %rd84, 24;
	and.b64  	%rd101, %rd100, 16711680;
	or.b64  	%rd102, %rd99, %rd101;
	shr.u64 	%rd103, %rd84, 40;
	and.b64  	%rd104, %rd103, 65280;
	or.b64  	%rd105, %rd102, %rd104;
	shr.u64 	%rd106, %rd84, 56;
	add.u64 	%rd137, %SPL, 0;
	add.u64 	%rd138, %SPL, 240;
	add.s64 	%rd4, %rd11, 192;
	ld.global.v2.u32 	{%r61, %r62}, [%rd11+192];
	mov.u32 	%r3343, 0;
	cvt.u32.u64 	%r63, %rd36;
	cvt.u32.u64 	%r64, %rd37;
	or.b32  	%r65, %r63, %r64;
	shr.u64 	%rd109, %rd36, 8;
	cvt.u32.u64 	%r66, %rd109;
	shr.u64 	%rd110, %rd33, 16;
	cvt.u32.u64 	%r67, %rd110;
	shr.u64 	%rd111, %rd30, 24;
	cvt.u32.u64 	%r68, %rd111;
	mov.u32 	%r69, 64;
	prmt.b32 	%r70, %r65, %r66, %r69;
	mov.u32 	%r71, 1040;
	prmt.b32 	%r72, %r70, %r67, %r71;
	mov.u32 	%r73, 16912;
	shr.u64 	%rd112, %rd24, 24;
	shr.u64 	%rd113, %rd20, 8;
	cvt.u32.u64 	%r74, %rd112;
	cvt.u32.u64 	%r75, %rd113;
	or.b32  	%r76, %r75, %r74;
	cvt.u32.u64 	%r77, %rd15;
	shl.b32 	%r78, %r77, 8;
	and.b32  	%r79, %r78, 16711680;
	or.b32  	%r80, %r76, %r79;
	shl.b32 	%r81, %r77, 24;
	cvt.u32.u64 	%r82, %rd59;
	cvt.u32.u64 	%r83, %rd60;
	or.b32  	%r84, %r82, %r83;
	shr.u64 	%rd114, %rd59, 8;
	cvt.u32.u64 	%r85, %rd114;
	shr.u64 	%rd115, %rd56, 16;
	cvt.u32.u64 	%r86, %rd115;
	shr.u64 	%rd116, %rd53, 24;
	cvt.u32.u64 	%r87, %rd116;
	prmt.b32 	%r88, %r84, %r85, %r69;
	prmt.b32 	%r89, %r88, %r86, %r71;
	shr.u64 	%rd117, %rd47, 24;
	shr.u64 	%rd118, %rd43, 8;
	cvt.u32.u64 	%r90, %rd117;
	cvt.u32.u64 	%r91, %rd118;
	or.b32  	%r92, %r91, %r90;
	cvt.u32.u64 	%r93, %rd38;
	shl.b32 	%r94, %r93, 8;
	and.b32  	%r95, %r94, 16711680;
	or.b32  	%r96, %r92, %r95;
	shl.b32 	%r97, %r93, 24;
	prmt.b32 	%r98, %r89, %r87, %r73;
	prmt.b32 	%r99, %r72, %r68, %r73;
	or.b32  	%r100, %r97, %r96;
	or.b32  	%r101, %r81, %r80;
	st.local.v4.u32 	[%rd137], {%r99, %r101, %r98, %r100};
	cvt.u32.u64 	%r102, %rd82;
	cvt.u32.u64 	%r103, %rd83;
	or.b32  	%r104, %r102, %r103;
	shr.u64 	%rd119, %rd82, 8;
	cvt.u32.u64 	%r105, %rd119;
	shr.u64 	%rd120, %rd79, 16;
	cvt.u32.u64 	%r106, %rd120;
	shr.u64 	%rd121, %rd76, 24;
	cvt.u32.u64 	%r107, %rd121;
	prmt.b32 	%r108, %r104, %r105, %r69;
	prmt.b32 	%r109, %r108, %r106, %r71;
	shr.u64 	%rd122, %rd70, 24;
	shr.u64 	%rd123, %rd66, 8;
	cvt.u32.u64 	%r110, %rd122;
	cvt.u32.u64 	%r111, %rd123;
	or.b32  	%r112, %r111, %r110;
	cvt.u32.u64 	%r113, %rd61;
	shl.b32 	%r114, %r113, 8;
	and.b32  	%r115, %r114, 16711680;
	or.b32  	%r116, %r112, %r115;
	shl.b32 	%r117, %r113, 24;
	cvt.u32.u64 	%r118, %rd105;
	cvt.u32.u64 	%r119, %rd106;
	or.b32  	%r120, %r118, %r119;
	shr.u64 	%rd124, %rd105, 8;
	cvt.u32.u64 	%r121, %rd124;
	shr.u64 	%rd125, %rd102, 16;
	cvt.u32.u64 	%r122, %rd125;
	shr.u64 	%rd126, %rd99, 24;
	cvt.u32.u64 	%r123, %rd126;
	prmt.b32 	%r124, %r120, %r121, %r69;
	prmt.b32 	%r125, %r124, %r122, %r71;
	shr.u64 	%rd127, %rd93, 24;
	shr.u64 	%rd128, %rd89, 8;
	cvt.u32.u64 	%r126, %rd127;
	cvt.u32.u64 	%r127, %rd128;
	or.b32  	%r128, %r127, %r126;
	cvt.u32.u64 	%r129, %rd84;
	shl.b32 	%r130, %r129, 8;
	and.b32  	%r131, %r130, 16711680;
	or.b32  	%r132, %r128, %r131;
	shl.b32 	%r133, %r129, 24;
	or.b32  	%r3347, %r133, %r132;
	prmt.b32 	%r134, %r125, %r123, %r73;
	prmt.b32 	%r135, %r109, %r107, %r73;
	or.b32  	%r136, %r117, %r116;
	st.local.v4.u32 	[%rd137+16], {%r135, %r136, %r134, %r3347};
	mov.u32 	%r3345, %r3343;
	mov.u32 	%r3346, %r3343;

$L__BB7_1:
	setp.eq.s32 	%p1, %r3346, 0;
	@%p1 bra 	$L__BB7_4;

	setp.ne.s32 	%p2, %r3346, 4;
	@%p2 bra 	$L__BB7_5;

	and.b32  	%r137, %r3347, 1431655765;
	shl.b32 	%r138, %r3347, 1;
	and.b32  	%r139, %r138, -1431655766;
	or.b32  	%r140, %r139, %r137;
	and.b32  	%r141, %r3347, -1431655766;
	shr.u32 	%r142, %r141, 1;
	or.b32  	%r143, %r142, %r141;
	and.b32  	%r144, %r140, 858993459;
	shl.b32 	%r145, %r140, 2;
	and.b32  	%r146, %r145, -858993460;
	or.b32  	%r147, %r146, %r144;
	and.b32  	%r148, %r140, -858993460;
	shr.u32 	%r149, %r148, 2;
	or.b32  	%r150, %r149, %r148;
	and.b32  	%r151, %r143, 858993459;
	shl.b32 	%r152, %r143, 2;
	and.b32  	%r153, %r152, -858993460;
	or.b32  	%r154, %r153, %r151;
	and.b32  	%r155, %r143, -858993460;
	shr.u32 	%r156, %r155, 2;
	or.b32  	%r157, %r156, %r155;
	and.b32  	%r158, %r147, 252645135;
	shl.b32 	%r159, %r147, 4;
	and.b32  	%r160, %r159, -252645136;
	or.b32  	%r161, %r160, %r158;
	and.b32  	%r162, %r147, -252645136;
	shr.u32 	%r163, %r162, 4;
	or.b32  	%r164, %r163, %r162;
	and.b32  	%r165, %r154, 252645135;
	shl.b32 	%r166, %r154, 4;
	and.b32  	%r167, %r166, -252645136;
	or.b32  	%r168, %r167, %r165;
	and.b32  	%r169, %r154, -252645136;
	shr.u32 	%r170, %r169, 4;
	or.b32  	%r171, %r170, %r169;
	and.b32  	%r172, %r150, 252645135;
	shl.b32 	%r173, %r150, 4;
	and.b32  	%r174, %r173, -252645136;
	or.b32  	%r175, %r174, %r172;
	and.b32  	%r176, %r150, -252645136;
	shr.u32 	%r177, %r176, 4;
	or.b32  	%r178, %r177, %r176;
	and.b32  	%r179, %r157, 252645135;
	shl.b32 	%r180, %r157, 4;
	and.b32  	%r181, %r180, -252645136;
	or.b32  	%r182, %r181, %r179;
	and.b32  	%r183, %r157, -252645136;
	shr.u32 	%r184, %r183, 4;
	or.b32  	%r185, %r184, %r183;
	xor.b32  	%r186, %r175, %r164;
	xor.b32  	%r187, %r168, %r185;
	xor.b32  	%r188, %r164, %r185;
	xor.b32  	%r189, %r175, %r185;
	xor.b32  	%r190, %r171, %r178;
	xor.b32  	%r191, %r161, %r190;
	xor.b32  	%r192, %r191, %r164;
	xor.b32  	%r193, %r187, %r186;
	xor.b32  	%r194, %r191, %r185;
	xor.b32  	%r195, %r191, %r168;
	xor.b32  	%r196, %r195, %r189;
	xor.b32  	%r197, %r193, %r182;
	xor.b32  	%r198, %r197, %r175;
	xor.b32  	%r199, %r197, %r178;
	xor.b32  	%r200, %r198, %r161;
	xor.b32  	%r201, %r198, %r190;
	xor.b32  	%r202, %r199, %r188;
	xor.b32  	%r203, %r202, %r161;
	xor.b32  	%r204, %r201, %r202;
	xor.b32  	%r205, %r202, %r190;
	and.b32  	%r206, %r198, %r193;
	and.b32  	%r207, %r200, %r196;
	and.b32  	%r208, %r192, %r161;
	and.b32  	%r209, %r205, %r187;
	and.b32  	%r210, %r195, %r191;
	and.b32  	%r211, %r203, %r194;
	and.b32  	%r212, %r202, %r188;
	and.b32  	%r213, %r204, %r186;
	xor.b32  	%r214, %r213, %r212;
	and.b32  	%r215, %r201, %r189;
	xor.b32  	%r216, %r215, %r212;
	xor.b32  	%r217, %r206, %r199;
	xor.b32  	%r218, %r217, %r207;
	xor.b32  	%r219, %r218, %r214;
	xor.b32  	%r220, %r208, %r189;
	xor.b32  	%r221, %r220, %r201;
	xor.b32  	%r222, %r221, %r206;
	xor.b32  	%r223, %r222, %r216;
	xor.b32  	%r224, %r210, %r187;
	xor.b32  	%r225, %r224, %r205;
	xor.b32  	%r226, %r225, %r209;
	xor.b32  	%r227, %r226, %r214;
	xor.b32  	%r228, %r205, %r185;
	xor.b32  	%r229, %r228, %r209;
	xor.b32  	%r230, %r229, %r211;
	xor.b32  	%r231, %r230, %r216;
	xor.b32  	%r232, %r219, %r223;
	and.b32  	%r233, %r219, %r227;
	xor.b32  	%r234, %r233, %r231;
	and.b32  	%r235, %r234, %r232;
	xor.b32  	%r236, %r235, %r223;
	xor.b32  	%r237, %r227, %r231;
	xor.b32  	%r238, %r233, %r223;
	and.b32  	%r239, %r238, %r237;
	xor.b32  	%r240, %r239, %r231;
	xor.b32  	%r241, %r240, %r227;
	xor.b32  	%r242, %r239, %r233;
	and.b32  	%r243, %r242, %r231;
	xor.b32  	%r244, %r241, %r243;
	xor.b32  	%r245, %r243, %r234;
	and.b32  	%r246, %r245, %r236;
	xor.b32  	%r247, %r246, %r232;
	xor.b32  	%r248, %r247, %r244;
	xor.b32  	%r249, %r236, %r240;
	xor.b32  	%r250, %r247, %r236;
	xor.b32  	%r251, %r243, %r227;
	xor.b32  	%r252, %r248, %r249;
	and.b32  	%r253, %r251, %r198;
	and.b32  	%r254, %r244, %r200;
	and.b32  	%r255, %r240, %r161;
	and.b32  	%r256, %r250, %r205;
	and.b32  	%r257, %r247, %r191;
	and.b32  	%r258, %r236, %r203;
	and.b32  	%r259, %r249, %r202;
	and.b32  	%r260, %r252, %r204;
	and.b32  	%r261, %r248, %r201;
	and.b32  	%r262, %r251, %r193;
	and.b32  	%r263, %r244, %r196;
	and.b32  	%r264, %r240, %r192;
	and.b32  	%r265, %r250, %r187;
	and.b32  	%r266, %r247, %r195;
	and.b32  	%r267, %r236, %r194;
	and.b32  	%r268, %r249, %r188;
	and.b32  	%r269, %r252, %r186;
	and.b32  	%r270, %r248, %r189;
	xor.b32  	%r271, %r269, %r268;
	xor.b32  	%r272, %r263, %r264;
	xor.b32  	%r273, %r266, %r258;
	xor.b32  	%r274, %r262, %r263;
	xor.b32  	%r275, %r265, %r255;
	xor.b32  	%r276, %r255, %r258;
	xor.b32  	%r277, %r260, %r261;
	xor.b32  	%r278, %r256, %r253;
	xor.b32  	%r279, %r275, %r278;
	xor.b32  	%r280, %r271, %r257;
	xor.b32  	%r281, %r256, %r259;
	xor.b32  	%r282, %r281, %r260;
	xor.b32  	%r283, %r279, %r267;
	xor.b32  	%r284, %r277, %r280;
	xor.b32  	%r285, %r274, %r280;
	xor.b32  	%r286, %r282, %r257;
	xor.b32  	%r287, %r283, %r284;
	xor.b32  	%r288, %r285, %r254;
	xor.b32  	%r289, %r285, %r282;
	xor.b32  	%r290, %r273, 16843009;
	xor.b32  	%r291, %r265, %r290;
	xor.b32  	%r292, %r291, %r284;
	xor.b32  	%r293, %r279, %r290;
	xor.b32  	%r294, %r293, %r271;
	xor.b32  	%r295, %r288, %r278;
	xor.b32  	%r296, %r276, %r288;
	xor.b32  	%r297, %r272, %r287;
	xor.b32  	%r298, %r295, %r286;
	not.b32 	%r299, %r298;
	xor.b32  	%r300, %r269, %r270;
	xor.b32  	%r301, %r300, %r286;
	xor.b32  	%r302, %r301, %r287;
	and.b32  	%r303, %r294, 16843009;
	shl.b32 	%r304, %r292, 1;
	and.b32  	%r305, %r304, 33686018;
	or.b32  	%r306, %r305, %r303;
	and.b32  	%r307, %r297, 16843009;
	shl.b32 	%r308, %r296, 1;
	and.b32  	%r309, %r308, 33686018;
	or.b32  	%r310, %r309, %r307;
	and.b32  	%r311, %r295, 16843009;
	shl.b32 	%r312, %r302, 1;
	not.b32 	%r313, %r312;
	and.b32  	%r314, %r313, 33686018;
	or.b32  	%r315, %r314, %r311;
	and.b32  	%r316, %r299, 16843009;
	shl.b32 	%r317, %r289, 1;
	and.b32  	%r318, %r317, 33686018;
	or.b32  	%r319, %r318, %r316;
	shl.b32 	%r320, %r310, 2;
	or.b32  	%r321, %r320, %r306;
	shl.b32 	%r322, %r319, 2;
	or.b32  	%r323, %r322, %r315;
	shl.b32 	%r324, %r323, 4;
	or.b32  	%r3347, %r324, %r321;
	bra.uni 	$L__BB7_5;

$L__BB7_4:
	shf.l.wrap.b32 	%r325, %r3347, %r3347, 24;
	and.b32  	%r326, %r325, 1431655765;
	shl.b32 	%r327, %r325, 1;
	and.b32  	%r328, %r327, -1431655766;
	or.b32  	%r329, %r328, %r326;
	and.b32  	%r330, %r325, -1431655766;
	shr.u32 	%r331, %r330, 1;
	or.b32  	%r332, %r331, %r330;
	and.b32  	%r333, %r329, 858993459;
	shl.b32 	%r334, %r329, 2;
	and.b32  	%r335, %r334, -858993460;
	or.b32  	%r336, %r335, %r333;
	and.b32  	%r337, %r329, -858993460;
	shr.u32 	%r338, %r337, 2;
	or.b32  	%r339, %r338, %r337;
	and.b32  	%r340, %r332, 858993459;
	shl.b32 	%r341, %r332, 2;
	and.b32  	%r342, %r341, -858993460;
	or.b32  	%r343, %r342, %r340;
	and.b32  	%r344, %r332, -858993460;
	shr.u32 	%r345, %r344, 2;
	or.b32  	%r346, %r345, %r344;
	and.b32  	%r347, %r336, 252645135;
	shl.b32 	%r348, %r336, 4;
	and.b32  	%r349, %r348, -252645136;
	or.b32  	%r350, %r349, %r347;
	and.b32  	%r351, %r336, -252645136;
	shr.u32 	%r352, %r351, 4;
	or.b32  	%r353, %r352, %r351;
	and.b32  	%r354, %r343, 252645135;
	shl.b32 	%r355, %r343, 4;
	and.b32  	%r356, %r355, -252645136;
	or.b32  	%r357, %r356, %r354;
	and.b32  	%r358, %r343, -252645136;
	shr.u32 	%r359, %r358, 4;
	or.b32  	%r360, %r359, %r358;
	and.b32  	%r361, %r339, 252645135;
	shl.b32 	%r362, %r339, 4;
	and.b32  	%r363, %r362, -252645136;
	or.b32  	%r364, %r363, %r361;
	and.b32  	%r365, %r339, -252645136;
	shr.u32 	%r366, %r365, 4;
	or.b32  	%r367, %r366, %r365;
	and.b32  	%r368, %r346, 252645135;
	shl.b32 	%r369, %r346, 4;
	and.b32  	%r370, %r369, -252645136;
	or.b32  	%r371, %r370, %r368;
	and.b32  	%r372, %r346, -252645136;
	shr.u32 	%r373, %r372, 4;
	or.b32  	%r374, %r373, %r372;
	xor.b32  	%r375, %r364, %r353;
	xor.b32  	%r376, %r357, %r374;
	xor.b32  	%r377, %r353, %r374;
	xor.b32  	%r378, %r364, %r374;
	xor.b32  	%r379, %r360, %r367;
	xor.b32  	%r380, %r350, %r379;
	xor.b32  	%r381, %r380, %r353;
	xor.b32  	%r382, %r376, %r375;
	xor.b32  	%r383, %r380, %r374;
	xor.b32  	%r384, %r380, %r357;
	xor.b32  	%r385, %r384, %r378;
	xor.b32  	%r386, %r382, %r371;
	xor.b32  	%r387, %r386, %r364;
	xor.b32  	%r388, %r386, %r367;
	xor.b32  	%r389, %r387, %r350;
	xor.b32  	%r390, %r387, %r379;
	xor.b32  	%r391, %r388, %r377;
	xor.b32  	%r392, %r391, %r350;
	xor.b32  	%r393, %r390, %r391;
	xor.b32  	%r394, %r391, %r379;
	and.b32  	%r395, %r387, %r382;
	and.b32  	%r396, %r389, %r385;
	and.b32  	%r397, %r381, %r350;
	and.b32  	%r398, %r394, %r376;
	and.b32  	%r399, %r384, %r380;
	and.b32  	%r400, %r392, %r383;
	and.b32  	%r401, %r391, %r377;
	and.b32  	%r402, %r393, %r375;
	xor.b32  	%r403, %r402, %r401;
	and.b32  	%r404, %r390, %r378;
	xor.b32  	%r405, %r404, %r401;
	xor.b32  	%r406, %r395, %r388;
	xor.b32  	%r407, %r406, %r396;
	xor.b32  	%r408, %r407, %r403;
	xor.b32  	%r409, %r397, %r378;
	xor.b32  	%r410, %r409, %r390;
	xor.b32  	%r411, %r410, %r395;
	xor.b32  	%r412, %r411, %r405;
	xor.b32  	%r413, %r399, %r376;
	xor.b32  	%r414, %r413, %r394;
	xor.b32  	%r415, %r414, %r398;
	xor.b32  	%r416, %r415, %r403;
	xor.b32  	%r417, %r394, %r374;
	xor.b32  	%r418, %r417, %r398;
	xor.b32  	%r419, %r418, %r400;
	xor.b32  	%r420, %r419, %r405;
	xor.b32  	%r421, %r408, %r412;
	and.b32  	%r422, %r408, %r416;
	xor.b32  	%r423, %r422, %r420;
	and.b32  	%r424, %r423, %r421;
	xor.b32  	%r425, %r424, %r412;
	xor.b32  	%r426, %r416, %r420;
	xor.b32  	%r427, %r422, %r412;
	and.b32  	%r428, %r427, %r426;
	xor.b32  	%r429, %r428, %r420;
	xor.b32  	%r430, %r429, %r416;
	xor.b32  	%r431, %r428, %r422;
	and.b32  	%r432, %r431, %r420;
	xor.b32  	%r433, %r430, %r432;
	xor.b32  	%r434, %r432, %r423;
	and.b32  	%r435, %r434, %r425;
	xor.b32  	%r436, %r435, %r421;
	xor.b32  	%r437, %r436, %r433;
	xor.b32  	%r438, %r425, %r429;
	xor.b32  	%r439, %r436, %r425;
	xor.b32  	%r440, %r432, %r416;
	xor.b32  	%r441, %r437, %r438;
	and.b32  	%r442, %r440, %r387;
	and.b32  	%r443, %r433, %r389;
	and.b32  	%r444, %r429, %r350;
	and.b32  	%r445, %r439, %r394;
	and.b32  	%r446, %r436, %r380;
	and.b32  	%r447, %r425, %r392;
	and.b32  	%r448, %r438, %r391;
	and.b32  	%r449, %r441, %r393;
	and.b32  	%r450, %r437, %r390;
	and.b32  	%r451, %r440, %r382;
	and.b32  	%r452, %r433, %r385;
	and.b32  	%r453, %r429, %r381;
	and.b32  	%r454, %r439, %r376;
	and.b32  	%r455, %r436, %r384;
	and.b32  	%r456, %r425, %r383;
	and.b32  	%r457, %r438, %r377;
	and.b32  	%r458, %r441, %r375;
	and.b32  	%r459, %r437, %r378;
	xor.b32  	%r460, %r458, %r457;
	xor.b32  	%r461, %r452, %r453;
	xor.b32  	%r462, %r455, %r447;
	xor.b32  	%r463, %r451, %r452;
	xor.b32  	%r464, %r454, %r444;
	xor.b32  	%r465, %r444, %r447;
	xor.b32  	%r466, %r449, %r450;
	xor.b32  	%r467, %r445, %r442;
	xor.b32  	%r468, %r464, %r467;
	xor.b32  	%r469, %r460, %r446;
	xor.b32  	%r470, %r445, %r448;
	xor.b32  	%r471, %r470, %r449;
	xor.b32  	%r472, %r468, %r456;
	xor.b32  	%r473, %r466, %r469;
	xor.b32  	%r474, %r463, %r469;
	xor.b32  	%r475, %r471, %r446;
	xor.b32  	%r476, %r472, %r473;
	xor.b32  	%r477, %r474, %r443;
	xor.b32  	%r478, %r474, %r471;
	xor.b32  	%r479, %r462, 16843009;
	xor.b32  	%r480, %r454, %r479;
	xor.b32  	%r481, %r480, %r473;
	xor.b32  	%r482, %r468, %r479;
	xor.b32  	%r483, %r482, %r460;
	xor.b32  	%r484, %r477, %r467;
	xor.b32  	%r485, %r465, %r477;
	xor.b32  	%r486, %r461, %r476;
	xor.b32  	%r487, %r484, %r475;
	not.b32 	%r488, %r487;
	xor.b32  	%r489, %r458, %r459;
	xor.b32  	%r490, %r489, %r475;
	xor.b32  	%r491, %r490, %r476;
	and.b32  	%r492, %r483, 16843009;
	shl.b32 	%r493, %r481, 1;
	and.b32  	%r494, %r493, 33686018;
	or.b32  	%r495, %r494, %r492;
	and.b32  	%r496, %r486, 16843009;
	shl.b32 	%r497, %r485, 1;
	and.b32  	%r498, %r497, 33686018;
	or.b32  	%r499, %r498, %r496;
	and.b32  	%r500, %r484, 16843009;
	shl.b32 	%r501, %r491, 1;
	not.b32 	%r502, %r501;
	and.b32  	%r503, %r502, 33686018;
	or.b32  	%r504, %r503, %r500;
	and.b32  	%r505, %r488, 16843009;
	shl.b32 	%r506, %r478, 1;
	and.b32  	%r507, %r506, 33686018;
	or.b32  	%r508, %r507, %r505;
	shl.b32 	%r509, %r499, 2;
	or.b32  	%r510, %r509, %r495;
	shl.b32 	%r511, %r508, 2;
	or.b32  	%r512, %r511, %r504;
	shl.b32 	%r513, %r512, 4;
	or.b32  	%r514, %r513, %r510;
	cvt.s64.s32 	%rd129, %r3345;
	mov.u64 	%rd130, aes_keysched_base_$_Rcon;
	add.s64 	%rd131, %rd130, %rd129;
	ld.const.u8 	%r515, [%rd131];
	xor.b32  	%r3347, %r514, %r515;

$L__BB7_5:
	ld.local.u32 	%r516, [%rd137];
	xor.b32  	%r3347, %r516, %r3347;
	st.local.u32 	[%rd137+32], %r3347;
	add.s32 	%r517, %r3346, 1;
	setp.eq.s32 	%p3, %r517, 8;
	selp.b32 	%r3346, 0, %r517, %p3;
	selp.u32 	%r518, 1, 0, %p3;
	add.s32 	%r3345, %r3345, %r518;
	add.s64 	%rd137, %rd137, 4;
	add.s32 	%r3343, %r3343, 1;
	setp.ne.s32 	%p4, %r3343, 52;
	@%p4 bra 	$L__BB7_1;

	add.u64 	%rd135, %SPL, 0;
	ld.local.v4.u32 	{%r520, %r521, %r522, %r523}, [%rd135];
	mov.u32 	%r3348, 0;
	and.b32  	%r528, %r520, 1431655765;
	shl.b32 	%r529, %r520, 1;
	and.b32  	%r530, %r529, -1431655766;
	or.b32  	%r531, %r530, %r528;
	and.b32  	%r532, %r520, -1431655766;
	shr.u32 	%r533, %r532, 1;
	or.b32  	%r534, %r533, %r532;
	and.b32  	%r535, %r521, 1431655765;
	shl.b32 	%r536, %r521, 1;
	and.b32  	%r537, %r536, -1431655766;
	or.b32  	%r538, %r537, %r535;
	and.b32  	%r539, %r521, -1431655766;
	shr.u32 	%r540, %r539, 1;
	or.b32  	%r541, %r540, %r539;
	and.b32  	%r542, %r522, 1431655765;
	shl.b32 	%r543, %r522, 1;
	and.b32  	%r544, %r543, -1431655766;
	or.b32  	%r545, %r544, %r542;
	and.b32  	%r546, %r522, -1431655766;
	shr.u32 	%r547, %r546, 1;
	or.b32  	%r548, %r547, %r546;
	and.b32  	%r549, %r523, 1431655765;
	shl.b32 	%r550, %r523, 1;
	and.b32  	%r551, %r550, -1431655766;
	or.b32  	%r552, %r551, %r549;
	and.b32  	%r553, %r523, -1431655766;
	shr.u32 	%r554, %r553, 1;
	or.b32  	%r555, %r554, %r553;
	and.b32  	%r556, %r531, 858993459;
	shl.b32 	%r557, %r538, 2;
	and.b32  	%r558, %r557, -858993460;
	or.b32  	%r559, %r558, %r556;
	and.b32  	%r560, %r531, -858993460;
	shr.u32 	%r561, %r560, 2;
	and.b32  	%r562, %r538, -858993460;
	or.b32  	%r563, %r561, %r562;
	and.b32  	%r564, %r534, 858993459;
	shl.b32 	%r565, %r541, 2;
	and.b32  	%r566, %r565, -858993460;
	or.b32  	%r567, %r566, %r564;
	and.b32  	%r568, %r534, -858993460;
	shr.u32 	%r569, %r568, 2;
	and.b32  	%r570, %r541, -858993460;
	or.b32  	%r571, %r569, %r570;
	and.b32  	%r572, %r545, 858993459;
	shl.b32 	%r573, %r552, 2;
	and.b32  	%r574, %r573, -858993460;
	or.b32  	%r575, %r574, %r572;
	and.b32  	%r576, %r545, -858993460;
	shr.u32 	%r577, %r576, 2;
	and.b32  	%r578, %r552, -858993460;
	or.b32  	%r579, %r577, %r578;
	and.b32  	%r580, %r548, 858993459;
	shl.b32 	%r581, %r555, 2;
	and.b32  	%r582, %r581, -858993460;
	or.b32  	%r583, %r582, %r580;
	and.b32  	%r584, %r548, -858993460;
	shr.u32 	%r585, %r584, 2;
	and.b32  	%r586, %r555, -858993460;
	or.b32  	%r587, %r585, %r586;
	and.b32  	%r588, %r559, 84215045;
	shl.b32 	%r589, %r575, 4;
	and.b32  	%r590, %r589, 1347440720;
	and.b32  	%r591, %r559, 1347440720;
	and.b32  	%r592, %r575, 1347440720;
	and.b32  	%r593, %r567, 168430090;
	shl.b32 	%r594, %r583, 4;
	and.b32  	%r595, %r594, -1600085856;
	and.b32  	%r596, %r567, -1600085856;
	and.b32  	%r597, %r583, -1600085856;
	and.b32  	%r598, %r563, 84215045;
	shl.b32 	%r599, %r579, 4;
	and.b32  	%r600, %r599, 1347440720;
	and.b32  	%r601, %r563, 1347440720;
	and.b32  	%r602, %r579, 1347440720;
	and.b32  	%r603, %r571, 168430090;
	shl.b32 	%r604, %r587, 4;
	and.b32  	%r605, %r604, -1600085856;
	and.b32  	%r606, %r571, -1600085856;
	and.b32  	%r607, %r587, -1600085856;
	or.b32  	%r608, %r593, %r588;
	or.b32  	%r15, %r608, %r590;
	or.b32  	%r609, %r15, %r595;
	st.local.u32 	[%rd138], %r609;
	or.b32  	%r610, %r603, %r598;
	or.b32  	%r16, %r610, %r600;
	or.b32  	%r611, %r16, %r605;
	st.local.u32 	[%rd138+4], %r611;
	or.b32  	%r612, %r596, %r591;
	shr.u32 	%r613, %r612, 4;
	or.b32  	%r17, %r613, %r592;
	or.b32  	%r614, %r17, %r597;
	st.local.u32 	[%rd138+8], %r614;
	or.b32  	%r615, %r606, %r601;
	shr.u32 	%r616, %r615, 4;
	or.b32  	%r18, %r616, %r602;
	or.b32  	%r617, %r18, %r607;
	st.local.u32 	[%rd138+12], %r617;
	ld.local.v4.u32 	{%r618, %r619, %r620, %r621}, [%rd135+16];
	and.b32  	%r626, %r618, 1431655765;
	shl.b32 	%r627, %r618, 1;
	and.b32  	%r628, %r627, -1431655766;
	or.b32  	%r629, %r628, %r626;
	and.b32  	%r630, %r618, -1431655766;
	shr.u32 	%r631, %r630, 1;
	or.b32  	%r632, %r631, %r630;
	and.b32  	%r633, %r619, 1431655765;
	shl.b32 	%r634, %r619, 1;
	and.b32  	%r635, %r634, -1431655766;
	or.b32  	%r636, %r635, %r633;
	and.b32  	%r637, %r619, -1431655766;
	shr.u32 	%r638, %r637, 1;
	or.b32  	%r639, %r638, %r637;
	and.b32  	%r640, %r620, 1431655765;
	shl.b32 	%r641, %r620, 1;
	and.b32  	%r642, %r641, -1431655766;
	or.b32  	%r643, %r642, %r640;
	and.b32  	%r644, %r620, -1431655766;
	shr.u32 	%r645, %r644, 1;
	or.b32  	%r646, %r645, %r644;
	and.b32  	%r647, %r621, 1431655765;
	shl.b32 	%r648, %r621, 1;
	and.b32  	%r649, %r648, -1431655766;
	or.b32  	%r650, %r649, %r647;
	and.b32  	%r651, %r621, -1431655766;
	shr.u32 	%r652, %r651, 1;
	or.b32  	%r653, %r652, %r651;
	and.b32  	%r654, %r629, 858993459;
	shl.b32 	%r655, %r636, 2;
	and.b32  	%r656, %r655, -858993460;
	or.b32  	%r657, %r656, %r654;
	and.b32  	%r658, %r629, -858993460;
	shr.u32 	%r659, %r658, 2;
	and.b32  	%r660, %r636, -858993460;
	or.b32  	%r661, %r659, %r660;
	and.b32  	%r662, %r632, 858993459;
	shl.b32 	%r663, %r639, 2;
	and.b32  	%r664, %r663, -858993460;
	or.b32  	%r665, %r664, %r662;
	and.b32  	%r666, %r632, -858993460;
	shr.u32 	%r667, %r666, 2;
	and.b32  	%r668, %r639, -858993460;
	or.b32  	%r669, %r667, %r668;
	and.b32  	%r670, %r643, 858993459;
	shl.b32 	%r671, %r650, 2;
	and.b32  	%r672, %r671, -858993460;
	or.b32  	%r673, %r672, %r670;
	and.b32  	%r674, %r643, -858993460;
	shr.u32 	%r675, %r674, 2;
	and.b32  	%r676, %r650, -858993460;
	or.b32  	%r677, %r675, %r676;
	and.b32  	%r678, %r646, 858993459;
	shl.b32 	%r679, %r653, 2;
	and.b32  	%r680, %r679, -858993460;
	or.b32  	%r681, %r680, %r678;
	and.b32  	%r682, %r646, -858993460;
	shr.u32 	%r683, %r682, 2;
	and.b32  	%r684, %r653, -858993460;
	or.b32  	%r685, %r683, %r684;
	and.b32  	%r686, %r657, 84215045;
	shl.b32 	%r687, %r673, 4;
	and.b32  	%r688, %r687, 1347440720;
	and.b32  	%r689, %r657, 1347440720;
	and.b32  	%r690, %r673, 1347440720;
	and.b32  	%r691, %r665, 168430090;
	shl.b32 	%r692, %r681, 4;
	and.b32  	%r693, %r692, -1600085856;
	and.b32  	%r694, %r665, -1600085856;
	and.b32  	%r695, %r681, -1600085856;
	and.b32  	%r696, %r661, 84215045;
	shl.b32 	%r697, %r677, 4;
	and.b32  	%r698, %r697, 1347440720;
	and.b32  	%r699, %r661, 1347440720;
	and.b32  	%r700, %r677, 1347440720;
	and.b32  	%r701, %r669, 168430090;
	shl.b32 	%r702, %r685, 4;
	and.b32  	%r703, %r702, -1600085856;
	and.b32  	%r704, %r669, -1600085856;
	and.b32  	%r705, %r685, -1600085856;
	or.b32  	%r706, %r691, %r686;
	or.b32  	%r707, %r706, %r688;
	or.b32  	%r708, %r707, %r693;
	st.local.u32 	[%rd138+16], %r708;
	or.b32  	%r709, %r701, %r696;
	or.b32  	%r710, %r709, %r698;
	or.b32  	%r711, %r710, %r703;
	st.local.u32 	[%rd138+20], %r711;
	or.b32  	%r712, %r694, %r689;
	shr.u32 	%r713, %r712, 4;
	or.b32  	%r714, %r713, %r690;
	or.b32  	%r715, %r714, %r695;
	st.local.u32 	[%rd138+24], %r715;
	or.b32  	%r716, %r704, %r699;
	shr.u32 	%r717, %r716, 4;
	or.b32  	%r718, %r717, %r700;
	or.b32  	%r719, %r718, %r705;
	st.local.u32 	[%rd138+28], %r719;
	ld.local.v4.u32 	{%r720, %r721, %r722, %r723}, [%rd135+32];
	and.b32  	%r728, %r720, 1431655765;
	shl.b32 	%r729, %r720, 1;
	and.b32  	%r730, %r729, -1431655766;
	or.b32  	%r731, %r730, %r728;
	and.b32  	%r732, %r720, -1431655766;
	shr.u32 	%r733, %r732, 1;
	or.b32  	%r734, %r733, %r732;
	and.b32  	%r735, %r721, 1431655765;
	shl.b32 	%r736, %r721, 1;
	and.b32  	%r737, %r736, -1431655766;
	or.b32  	%r738, %r737, %r735;
	and.b32  	%r739, %r721, -1431655766;
	shr.u32 	%r740, %r739, 1;
	or.b32  	%r741, %r740, %r739;
	and.b32  	%r742, %r722, 1431655765;
	shl.b32 	%r743, %r722, 1;
	and.b32  	%r744, %r743, -1431655766;
	or.b32  	%r745, %r744, %r742;
	and.b32  	%r746, %r722, -1431655766;
	shr.u32 	%r747, %r746, 1;
	or.b32  	%r748, %r747, %r746;
	and.b32  	%r749, %r723, 1431655765;
	shl.b32 	%r750, %r723, 1;
	and.b32  	%r751, %r750, -1431655766;
	or.b32  	%r752, %r751, %r749;
	and.b32  	%r753, %r723, -1431655766;
	shr.u32 	%r754, %r753, 1;
	or.b32  	%r755, %r754, %r753;
	and.b32  	%r756, %r731, 858993459;
	shl.b32 	%r757, %r738, 2;
	and.b32  	%r758, %r757, -858993460;
	or.b32  	%r759, %r758, %r756;
	and.b32  	%r760, %r731, -858993460;
	shr.u32 	%r761, %r760, 2;
	and.b32  	%r762, %r738, -858993460;
	or.b32  	%r763, %r761, %r762;
	and.b32  	%r764, %r734, 858993459;
	shl.b32 	%r765, %r741, 2;
	and.b32  	%r766, %r765, -858993460;
	or.b32  	%r767, %r766, %r764;
	and.b32  	%r768, %r734, -858993460;
	shr.u32 	%r769, %r768, 2;
	and.b32  	%r770, %r741, -858993460;
	or.b32  	%r771, %r769, %r770;
	and.b32  	%r772, %r745, 858993459;
	shl.b32 	%r773, %r752, 2;
	and.b32  	%r774, %r773, -858993460;
	or.b32  	%r775, %r774, %r772;
	and.b32  	%r776, %r745, -858993460;
	shr.u32 	%r777, %r776, 2;
	and.b32  	%r778, %r752, -858993460;
	or.b32  	%r779, %r777, %r778;
	and.b32  	%r780, %r748, 858993459;
	shl.b32 	%r781, %r755, 2;
	and.b32  	%r782, %r781, -858993460;
	or.b32  	%r783, %r782, %r780;
	and.b32  	%r784, %r748, -858993460;
	shr.u32 	%r785, %r784, 2;
	and.b32  	%r786, %r755, -858993460;
	or.b32  	%r787, %r785, %r786;
	and.b32  	%r788, %r759, 84215045;
	shl.b32 	%r789, %r775, 4;
	and.b32  	%r790, %r789, 1347440720;
	and.b32  	%r791, %r759, 1347440720;
	and.b32  	%r792, %r775, 1347440720;
	and.b32  	%r793, %r767, 168430090;
	shl.b32 	%r794, %r783, 4;
	and.b32  	%r795, %r794, -1600085856;
	and.b32  	%r796, %r767, -1600085856;
	and.b32  	%r797, %r783, -1600085856;
	and.b32  	%r798, %r763, 84215045;
	shl.b32 	%r799, %r779, 4;
	and.b32  	%r800, %r799, 1347440720;
	and.b32  	%r801, %r763, 1347440720;
	and.b32  	%r802, %r779, 1347440720;
	and.b32  	%r803, %r771, 168430090;
	shl.b32 	%r804, %r787, 4;
	and.b32  	%r805, %r804, -1600085856;
	and.b32  	%r806, %r771, -1600085856;
	and.b32  	%r807, %r787, -1600085856;
	or.b32  	%r808, %r793, %r788;
	or.b32  	%r809, %r808, %r790;
	or.b32  	%r810, %r809, %r795;
	st.local.u32 	[%rd138+32], %r810;
	or.b32  	%r811, %r803, %r798;
	or.b32  	%r812, %r811, %r800;
	or.b32  	%r813, %r812, %r805;
	st.local.u32 	[%rd138+36], %r813;
	or.b32  	%r814, %r796, %r791;
	shr.u32 	%r815, %r814, 4;
	or.b32  	%r816, %r815, %r792;
	or.b32  	%r817, %r816, %r797;
	st.local.u32 	[%rd138+40], %r817;
	or.b32  	%r818, %r806, %r801;
	shr.u32 	%r819, %r818, 4;
	or.b32  	%r820, %r819, %r802;
	or.b32  	%r821, %r820, %r807;
	st.local.u32 	[%rd138+44], %r821;
	ld.local.v4.u32 	{%r822, %r823, %r824, %r825}, [%rd135+48];
	and.b32  	%r830, %r822, 1431655765;
	shl.b32 	%r831, %r822, 1;
	and.b32  	%r832, %r831, -1431655766;
	or.b32  	%r833, %r832, %r830;
	and.b32  	%r834, %r822, -1431655766;
	shr.u32 	%r835, %r834, 1;
	or.b32  	%r836, %r835, %r834;
	and.b32  	%r837, %r823, 1431655765;
	shl.b32 	%r838, %r823, 1;
	and.b32  	%r839, %r838, -1431655766;
	or.b32  	%r840, %r839, %r837;
	and.b32  	%r841, %r823, -1431655766;
	shr.u32 	%r842, %r841, 1;
	or.b32  	%r843, %r842, %r841;
	and.b32  	%r844, %r824, 1431655765;
	shl.b32 	%r845, %r824, 1;
	and.b32  	%r846, %r845, -1431655766;
	or.b32  	%r847, %r846, %r844;
	and.b32  	%r848, %r824, -1431655766;
	shr.u32 	%r849, %r848, 1;
	or.b32  	%r850, %r849, %r848;
	and.b32  	%r851, %r825, 1431655765;
	shl.b32 	%r852, %r825, 1;
	and.b32  	%r853, %r852, -1431655766;
	or.b32  	%r854, %r853, %r851;
	and.b32  	%r855, %r825, -1431655766;
	shr.u32 	%r856, %r855, 1;
	or.b32  	%r857, %r856, %r855;
	and.b32  	%r858, %r833, 858993459;
	shl.b32 	%r859, %r840, 2;
	and.b32  	%r860, %r859, -858993460;
	or.b32  	%r861, %r860, %r858;
	and.b32  	%r862, %r833, -858993460;
	shr.u32 	%r863, %r862, 2;
	and.b32  	%r864, %r840, -858993460;
	or.b32  	%r865, %r863, %r864;
	and.b32  	%r866, %r836, 858993459;
	shl.b32 	%r867, %r843, 2;
	and.b32  	%r868, %r867, -858993460;
	or.b32  	%r869, %r868, %r866;
	and.b32  	%r870, %r836, -858993460;
	shr.u32 	%r871, %r870, 2;
	and.b32  	%r872, %r843, -858993460;
	or.b32  	%r873, %r871, %r872;
	and.b32  	%r874, %r847, 858993459;
	shl.b32 	%r875, %r854, 2;
	and.b32  	%r876, %r875, -858993460;
	or.b32  	%r877, %r876, %r874;
	and.b32  	%r878, %r847, -858993460;
	shr.u32 	%r879, %r878, 2;
	and.b32  	%r880, %r854, -858993460;
	or.b32  	%r881, %r879, %r880;
	and.b32  	%r882, %r850, 858993459;
	shl.b32 	%r883, %r857, 2;
	and.b32  	%r884, %r883, -858993460;
	or.b32  	%r885, %r884, %r882;
	and.b32  	%r886, %r850, -858993460;
	shr.u32 	%r887, %r886, 2;
	and.b32  	%r888, %r857, -858993460;
	or.b32  	%r889, %r887, %r888;
	and.b32  	%r890, %r861, 84215045;
	shl.b32 	%r891, %r877, 4;
	and.b32  	%r892, %r891, 1347440720;
	and.b32  	%r893, %r861, 1347440720;
	and.b32  	%r894, %r877, 1347440720;
	and.b32  	%r895, %r869, 168430090;
	shl.b32 	%r896, %r885, 4;
	and.b32  	%r897, %r896, -1600085856;
	and.b32  	%r898, %r869, -1600085856;
	and.b32  	%r899, %r885, -1600085856;
	and.b32  	%r900, %r865, 84215045;
	shl.b32 	%r901, %r881, 4;
	and.b32  	%r902, %r901, 1347440720;
	and.b32  	%r903, %r865, 1347440720;
	and.b32  	%r904, %r881, 1347440720;
	and.b32  	%r905, %r873, 168430090;
	shl.b32 	%r906, %r889, 4;
	and.b32  	%r907, %r906, -1600085856;
	and.b32  	%r908, %r873, -1600085856;
	and.b32  	%r909, %r889, -1600085856;
	or.b32  	%r910, %r895, %r890;
	or.b32  	%r911, %r910, %r892;
	or.b32  	%r912, %r911, %r897;
	st.local.u32 	[%rd138+48], %r912;
	or.b32  	%r913, %r905, %r900;
	or.b32  	%r914, %r913, %r902;
	or.b32  	%r915, %r914, %r907;
	st.local.u32 	[%rd138+52], %r915;
	or.b32  	%r916, %r898, %r893;
	shr.u32 	%r917, %r916, 4;
	or.b32  	%r918, %r917, %r894;
	or.b32  	%r919, %r918, %r899;
	st.local.u32 	[%rd138+56], %r919;
	or.b32  	%r920, %r908, %r903;
	shr.u32 	%r921, %r920, 4;
	or.b32  	%r922, %r921, %r904;
	or.b32  	%r923, %r922, %r909;
	st.local.u32 	[%rd138+60], %r923;
	ld.local.v4.u32 	{%r924, %r925, %r926, %r927}, [%rd135+64];
	and.b32  	%r932, %r924, 1431655765;
	shl.b32 	%r933, %r924, 1;
	and.b32  	%r934, %r933, -1431655766;
	or.b32  	%r935, %r934, %r932;
	and.b32  	%r936, %r924, -1431655766;
	shr.u32 	%r937, %r936, 1;
	or.b32  	%r938, %r937, %r936;
	and.b32  	%r939, %r925, 1431655765;
	shl.b32 	%r940, %r925, 1;
	and.b32  	%r941, %r940, -1431655766;
	or.b32  	%r942, %r941, %r939;
	and.b32  	%r943, %r925, -1431655766;
	shr.u32 	%r944, %r943, 1;
	or.b32  	%r945, %r944, %r943;
	and.b32  	%r946, %r926, 1431655765;
	shl.b32 	%r947, %r926, 1;
	and.b32  	%r948, %r947, -1431655766;
	or.b32  	%r949, %r948, %r946;
	and.b32  	%r950, %r926, -1431655766;
	shr.u32 	%r951, %r950, 1;
	or.b32  	%r952, %r951, %r950;
	and.b32  	%r953, %r927, 1431655765;
	shl.b32 	%r954, %r927, 1;
	and.b32  	%r955, %r954, -1431655766;
	or.b32  	%r956, %r955, %r953;
	and.b32  	%r957, %r927, -1431655766;
	shr.u32 	%r958, %r957, 1;
	or.b32  	%r959, %r958, %r957;
	and.b32  	%r960, %r935, 858993459;
	shl.b32 	%r961, %r942, 2;
	and.b32  	%r962, %r961, -858993460;
	or.b32  	%r963, %r962, %r960;
	and.b32  	%r964, %r935, -858993460;
	shr.u32 	%r965, %r964, 2;
	and.b32  	%r966, %r942, -858993460;
	or.b32  	%r967, %r965, %r966;
	and.b32  	%r968, %r938, 858993459;
	shl.b32 	%r969, %r945, 2;
	and.b32  	%r970, %r969, -858993460;
	or.b32  	%r971, %r970, %r968;
	and.b32  	%r972, %r938, -858993460;
	shr.u32 	%r973, %r972, 2;
	and.b32  	%r974, %r945, -858993460;
	or.b32  	%r975, %r973, %r974;
	and.b32  	%r976, %r949, 858993459;
	shl.b32 	%r977, %r956, 2;
	and.b32  	%r978, %r977, -858993460;
	or.b32  	%r979, %r978, %r976;
	and.b32  	%r980, %r949, -858993460;
	shr.u32 	%r981, %r980, 2;
	and.b32  	%r982, %r956, -858993460;
	or.b32  	%r983, %r981, %r982;
	and.b32  	%r984, %r952, 858993459;
	shl.b32 	%r985, %r959, 2;
	and.b32  	%r986, %r985, -858993460;
	or.b32  	%r987, %r986, %r984;
	and.b32  	%r988, %r952, -858993460;
	shr.u32 	%r989, %r988, 2;
	and.b32  	%r990, %r959, -858993460;
	or.b32  	%r991, %r989, %r990;
	and.b32  	%r992, %r963, 84215045;
	shl.b32 	%r993, %r979, 4;
	and.b32  	%r994, %r993, 1347440720;
	and.b32  	%r995, %r963, 1347440720;
	and.b32  	%r996, %r979, 1347440720;
	and.b32  	%r997, %r971, 168430090;
	shl.b32 	%r998, %r987, 4;
	and.b32  	%r999, %r998, -1600085856;
	and.b32  	%r1000, %r971, -1600085856;
	and.b32  	%r1001, %r987, -1600085856;
	and.b32  	%r1002, %r967, 84215045;
	shl.b32 	%r1003, %r983, 4;
	and.b32  	%r1004, %r1003, 1347440720;
	and.b32  	%r1005, %r967, 1347440720;
	and.b32  	%r1006, %r983, 1347440720;
	and.b32  	%r1007, %r975, 168430090;
	shl.b32 	%r1008, %r991, 4;
	and.b32  	%r1009, %r1008, -1600085856;
	and.b32  	%r1010, %r975, -1600085856;
	and.b32  	%r1011, %r991, -1600085856;
	or.b32  	%r1012, %r997, %r992;
	or.b32  	%r1013, %r1012, %r994;
	or.b32  	%r1014, %r1013, %r999;
	st.local.u32 	[%rd138+64], %r1014;
	or.b32  	%r1015, %r1007, %r1002;
	or.b32  	%r1016, %r1015, %r1004;
	or.b32  	%r1017, %r1016, %r1009;
	st.local.u32 	[%rd138+68], %r1017;
	or.b32  	%r1018, %r1000, %r995;
	shr.u32 	%r1019, %r1018, 4;
	or.b32  	%r1020, %r1019, %r996;
	or.b32  	%r1021, %r1020, %r1001;
	st.local.u32 	[%rd138+72], %r1021;
	or.b32  	%r1022, %r1010, %r1005;
	shr.u32 	%r1023, %r1022, 4;
	or.b32  	%r1024, %r1023, %r1006;
	or.b32  	%r1025, %r1024, %r1011;
	st.local.u32 	[%rd138+76], %r1025;
	ld.local.v4.u32 	{%r1026, %r1027, %r1028, %r1029}, [%rd135+80];
	and.b32  	%r1034, %r1026, 1431655765;
	shl.b32 	%r1035, %r1026, 1;
	and.b32  	%r1036, %r1035, -1431655766;
	or.b32  	%r1037, %r1036, %r1034;
	and.b32  	%r1038, %r1026, -1431655766;
	shr.u32 	%r1039, %r1038, 1;
	or.b32  	%r1040, %r1039, %r1038;
	and.b32  	%r1041, %r1027, 1431655765;
	shl.b32 	%r1042, %r1027, 1;
	and.b32  	%r1043, %r1042, -1431655766;
	or.b32  	%r1044, %r1043, %r1041;
	and.b32  	%r1045, %r1027, -1431655766;
	shr.u32 	%r1046, %r1045, 1;
	or.b32  	%r1047, %r1046, %r1045;
	and.b32  	%r1048, %r1028, 1431655765;
	shl.b32 	%r1049, %r1028, 1;
	and.b32  	%r1050, %r1049, -1431655766;
	or.b32  	%r1051, %r1050, %r1048;
	and.b32  	%r1052, %r1028, -1431655766;
	shr.u32 	%r1053, %r1052, 1;
	or.b32  	%r1054, %r1053, %r1052;
	and.b32  	%r1055, %r1029, 1431655765;
	shl.b32 	%r1056, %r1029, 1;
	and.b32  	%r1057, %r1056, -1431655766;
	or.b32  	%r1058, %r1057, %r1055;
	and.b32  	%r1059, %r1029, -1431655766;
	shr.u32 	%r1060, %r1059, 1;
	or.b32  	%r1061, %r1060, %r1059;
	and.b32  	%r1062, %r1037, 858993459;
	shl.b32 	%r1063, %r1044, 2;
	and.b32  	%r1064, %r1063, -858993460;
	or.b32  	%r1065, %r1064, %r1062;
	and.b32  	%r1066, %r1037, -858993460;
	shr.u32 	%r1067, %r1066, 2;
	and.b32  	%r1068, %r1044, -858993460;
	or.b32  	%r1069, %r1067, %r1068;
	and.b32  	%r1070, %r1040, 858993459;
	shl.b32 	%r1071, %r1047, 2;
	and.b32  	%r1072, %r1071, -858993460;
	or.b32  	%r1073, %r1072, %r1070;
	and.b32  	%r1074, %r1040, -858993460;
	shr.u32 	%r1075, %r1074, 2;
	and.b32  	%r1076, %r1047, -858993460;
	or.b32  	%r1077, %r1075, %r1076;
	and.b32  	%r1078, %r1051, 858993459;
	shl.b32 	%r1079, %r1058, 2;
	and.b32  	%r1080, %r1079, -858993460;
	or.b32  	%r1081, %r1080, %r1078;
	and.b32  	%r1082, %r1051, -858993460;
	shr.u32 	%r1083, %r1082, 2;
	and.b32  	%r1084, %r1058, -858993460;
	or.b32  	%r1085, %r1083, %r1084;
	and.b32  	%r1086, %r1054, 858993459;
	shl.b32 	%r1087, %r1061, 2;
	and.b32  	%r1088, %r1087, -858993460;
	or.b32  	%r1089, %r1088, %r1086;
	and.b32  	%r1090, %r1054, -858993460;
	shr.u32 	%r1091, %r1090, 2;
	and.b32  	%r1092, %r1061, -858993460;
	or.b32  	%r1093, %r1091, %r1092;
	and.b32  	%r1094, %r1065, 84215045;
	shl.b32 	%r1095, %r1081, 4;
	and.b32  	%r1096, %r1095, 1347440720;
	and.b32  	%r1097, %r1065, 1347440720;
	and.b32  	%r1098, %r1081, 1347440720;
	and.b32  	%r1099, %r1073, 168430090;
	shl.b32 	%r1100, %r1089, 4;
	and.b32  	%r1101, %r1100, -1600085856;
	and.b32  	%r1102, %r1073, -1600085856;
	and.b32  	%r1103, %r1089, -1600085856;
	and.b32  	%r1104, %r1069, 84215045;
	shl.b32 	%r1105, %r1085, 4;
	and.b32  	%r1106, %r1105, 1347440720;
	and.b32  	%r1107, %r1069, 1347440720;
	and.b32  	%r1108, %r1085, 1347440720;
	and.b32  	%r1109, %r1077, 168430090;
	shl.b32 	%r1110, %r1093, 4;
	and.b32  	%r1111, %r1110, -1600085856;
	and.b32  	%r1112, %r1077, -1600085856;
	and.b32  	%r1113, %r1093, -1600085856;
	or.b32  	%r1114, %r1099, %r1094;
	or.b32  	%r1115, %r1114, %r1096;
	or.b32  	%r1116, %r1115, %r1101;
	st.local.u32 	[%rd138+80], %r1116;
	or.b32  	%r1117, %r1109, %r1104;
	or.b32  	%r1118, %r1117, %r1106;
	or.b32  	%r1119, %r1118, %r1111;
	st.local.u32 	[%rd138+84], %r1119;
	or.b32  	%r1120, %r1102, %r1097;
	shr.u32 	%r1121, %r1120, 4;
	or.b32  	%r1122, %r1121, %r1098;
	or.b32  	%r1123, %r1122, %r1103;
	st.local.u32 	[%rd138+88], %r1123;
	or.b32  	%r1124, %r1112, %r1107;
	shr.u32 	%r1125, %r1124, 4;
	or.b32  	%r1126, %r1125, %r1108;
	or.b32  	%r1127, %r1126, %r1113;
	st.local.u32 	[%rd138+92], %r1127;
	ld.local.v4.u32 	{%r1128, %r1129, %r1130, %r1131}, [%rd135+96];
	and.b32  	%r1136, %r1128, 1431655765;
	shl.b32 	%r1137, %r1128, 1;
	and.b32  	%r1138, %r1137, -1431655766;
	or.b32  	%r1139, %r1138, %r1136;
	and.b32  	%r1140, %r1128, -1431655766;
	shr.u32 	%r1141, %r1140, 1;
	or.b32  	%r1142, %r1141, %r1140;
	and.b32  	%r1143, %r1129, 1431655765;
	shl.b32 	%r1144, %r1129, 1;
	and.b32  	%r1145, %r1144, -1431655766;
	or.b32  	%r1146, %r1145, %r1143;
	and.b32  	%r1147, %r1129, -1431655766;
	shr.u32 	%r1148, %r1147, 1;
	or.b32  	%r1149, %r1148, %r1147;
	and.b32  	%r1150, %r1130, 1431655765;
	shl.b32 	%r1151, %r1130, 1;
	and.b32  	%r1152, %r1151, -1431655766;
	or.b32  	%r1153, %r1152, %r1150;
	and.b32  	%r1154, %r1130, -1431655766;
	shr.u32 	%r1155, %r1154, 1;
	or.b32  	%r1156, %r1155, %r1154;
	and.b32  	%r1157, %r1131, 1431655765;
	shl.b32 	%r1158, %r1131, 1;
	and.b32  	%r1159, %r1158, -1431655766;
	or.b32  	%r1160, %r1159, %r1157;
	and.b32  	%r1161, %r1131, -1431655766;
	shr.u32 	%r1162, %r1161, 1;
	or.b32  	%r1163, %r1162, %r1161;
	and.b32  	%r1164, %r1139, 858993459;
	shl.b32 	%r1165, %r1146, 2;
	and.b32  	%r1166, %r1165, -858993460;
	or.b32  	%r1167, %r1166, %r1164;
	and.b32  	%r1168, %r1139, -858993460;
	shr.u32 	%r1169, %r1168, 2;
	and.b32  	%r1170, %r1146, -858993460;
	or.b32  	%r1171, %r1169, %r1170;
	and.b32  	%r1172, %r1142, 858993459;
	shl.b32 	%r1173, %r1149, 2;
	and.b32  	%r1174, %r1173, -858993460;
	or.b32  	%r1175, %r1174, %r1172;
	and.b32  	%r1176, %r1142, -858993460;
	shr.u32 	%r1177, %r1176, 2;
	and.b32  	%r1178, %r1149, -858993460;
	or.b32  	%r1179, %r1177, %r1178;
	and.b32  	%r1180, %r1153, 858993459;
	shl.b32 	%r1181, %r1160, 2;
	and.b32  	%r1182, %r1181, -858993460;
	or.b32  	%r1183, %r1182, %r1180;
	and.b32  	%r1184, %r1153, -858993460;
	shr.u32 	%r1185, %r1184, 2;
	and.b32  	%r1186, %r1160, -858993460;
	or.b32  	%r1187, %r1185, %r1186;
	and.b32  	%r1188, %r1156, 858993459;
	shl.b32 	%r1189, %r1163, 2;
	and.b32  	%r1190, %r1189, -858993460;
	or.b32  	%r1191, %r1190, %r1188;
	and.b32  	%r1192, %r1156, -858993460;
	shr.u32 	%r1193, %r1192, 2;
	and.b32  	%r1194, %r1163, -858993460;
	or.b32  	%r1195, %r1193, %r1194;
	and.b32  	%r1196, %r1167, 84215045;
	shl.b32 	%r1197, %r1183, 4;
	and.b32  	%r1198, %r1197, 1347440720;
	and.b32  	%r1199, %r1167, 1347440720;
	and.b32  	%r1200, %r1183, 1347440720;
	and.b32  	%r1201, %r1175, 168430090;
	shl.b32 	%r1202, %r1191, 4;
	and.b32  	%r1203, %r1202, -1600085856;
	and.b32  	%r1204, %r1175, -1600085856;
	and.b32  	%r1205, %r1191, -1600085856;
	and.b32  	%r1206, %r1171, 84215045;
	shl.b32 	%r1207, %r1187, 4;
	and.b32  	%r1208, %r1207, 1347440720;
	and.b32  	%r1209, %r1171, 1347440720;
	and.b32  	%r1210, %r1187, 1347440720;
	and.b32  	%r1211, %r1179, 168430090;
	shl.b32 	%r1212, %r1195, 4;
	and.b32  	%r1213, %r1212, -1600085856;
	and.b32  	%r1214, %r1179, -1600085856;
	and.b32  	%r1215, %r1195, -1600085856;
	or.b32  	%r1216, %r1201, %r1196;
	or.b32  	%r1217, %r1216, %r1198;
	or.b32  	%r1218, %r1217, %r1203;
	st.local.u32 	[%rd138+96], %r1218;
	or.b32  	%r1219, %r1211, %r1206;
	or.b32  	%r1220, %r1219, %r1208;
	or.b32  	%r1221, %r1220, %r1213;
	st.local.u32 	[%rd138+100], %r1221;
	or.b32  	%r1222, %r1204, %r1199;
	shr.u32 	%r1223, %r1222, 4;
	or.b32  	%r1224, %r1223, %r1200;
	or.b32  	%r1225, %r1224, %r1205;
	st.local.u32 	[%rd138+104], %r1225;
	or.b32  	%r1226, %r1214, %r1209;
	shr.u32 	%r1227, %r1226, 4;
	or.b32  	%r1228, %r1227, %r1210;
	or.b32  	%r1229, %r1228, %r1215;
	st.local.u32 	[%rd138+108], %r1229;
	ld.local.v4.u32 	{%r1230, %r1231, %r1232, %r1233}, [%rd135+112];
	and.b32  	%r1238, %r1230, 1431655765;
	shl.b32 	%r1239, %r1230, 1;
	and.b32  	%r1240, %r1239, -1431655766;
	or.b32  	%r1241, %r1240, %r1238;
	and.b32  	%r1242, %r1230, -1431655766;
	shr.u32 	%r1243, %r1242, 1;
	or.b32  	%r1244, %r1243, %r1242;
	and.b32  	%r1245, %r1231, 1431655765;
	shl.b32 	%r1246, %r1231, 1;
	and.b32  	%r1247, %r1246, -1431655766;
	or.b32  	%r1248, %r1247, %r1245;
	and.b32  	%r1249, %r1231, -1431655766;
	shr.u32 	%r1250, %r1249, 1;
	or.b32  	%r1251, %r1250, %r1249;
	and.b32  	%r1252, %r1232, 1431655765;
	shl.b32 	%r1253, %r1232, 1;
	and.b32  	%r1254, %r1253, -1431655766;
	or.b32  	%r1255, %r1254, %r1252;
	and.b32  	%r1256, %r1232, -1431655766;
	shr.u32 	%r1257, %r1256, 1;
	or.b32  	%r1258, %r1257, %r1256;
	and.b32  	%r1259, %r1233, 1431655765;
	shl.b32 	%r1260, %r1233, 1;
	and.b32  	%r1261, %r1260, -1431655766;
	or.b32  	%r1262, %r1261, %r1259;
	and.b32  	%r1263, %r1233, -1431655766;
	shr.u32 	%r1264, %r1263, 1;
	or.b32  	%r1265, %r1264, %r1263;
	and.b32  	%r1266, %r1241, 858993459;
	shl.b32 	%r1267, %r1248, 2;
	and.b32  	%r1268, %r1267, -858993460;
	or.b32  	%r1269, %r1268, %r1266;
	and.b32  	%r1270, %r1241, -858993460;
	shr.u32 	%r1271, %r1270, 2;
	and.b32  	%r1272, %r1248, -858993460;
	or.b32  	%r1273, %r1271, %r1272;
	and.b32  	%r1274, %r1244, 858993459;
	shl.b32 	%r1275, %r1251, 2;
	and.b32  	%r1276, %r1275, -858993460;
	or.b32  	%r1277, %r1276, %r1274;
	and.b32  	%r1278, %r1244, -858993460;
	shr.u32 	%r1279, %r1278, 2;
	and.b32  	%r1280, %r1251, -858993460;
	or.b32  	%r1281, %r1279, %r1280;
	and.b32  	%r1282, %r1255, 858993459;
	shl.b32 	%r1283, %r1262, 2;
	and.b32  	%r1284, %r1283, -858993460;
	or.b32  	%r1285, %r1284, %r1282;
	and.b32  	%r1286, %r1255, -858993460;
	shr.u32 	%r1287, %r1286, 2;
	and.b32  	%r1288, %r1262, -858993460;
	or.b32  	%r1289, %r1287, %r1288;
	and.b32  	%r1290, %r1258, 858993459;
	shl.b32 	%r1291, %r1265, 2;
	and.b32  	%r1292, %r1291, -858993460;
	or.b32  	%r1293, %r1292, %r1290;
	and.b32  	%r1294, %r1258, -858993460;
	shr.u32 	%r1295, %r1294, 2;
	and.b32  	%r1296, %r1265, -858993460;
	or.b32  	%r1297, %r1295, %r1296;
	and.b32  	%r1298, %r1269, 84215045;
	shl.b32 	%r1299, %r1285, 4;
	and.b32  	%r1300, %r1299, 1347440720;
	and.b32  	%r1301, %r1269, 1347440720;
	and.b32  	%r1302, %r1285, 1347440720;
	and.b32  	%r1303, %r1277, 168430090;
	shl.b32 	%r1304, %r1293, 4;
	and.b32  	%r1305, %r1304, -1600085856;
	and.b32  	%r1306, %r1277, -1600085856;
	and.b32  	%r1307, %r1293, -1600085856;
	and.b32  	%r1308, %r1273, 84215045;
	shl.b32 	%r1309, %r1289, 4;
	and.b32  	%r1310, %r1309, 1347440720;
	and.b32  	%r1311, %r1273, 1347440720;
	and.b32  	%r1312, %r1289, 1347440720;
	and.b32  	%r1313, %r1281, 168430090;
	shl.b32 	%r1314, %r1297, 4;
	and.b32  	%r1315, %r1314, -1600085856;
	and.b32  	%r1316, %r1281, -1600085856;
	and.b32  	%r1317, %r1297, -1600085856;
	or.b32  	%r1318, %r1303, %r1298;
	or.b32  	%r1319, %r1318, %r1300;
	or.b32  	%r1320, %r1319, %r1305;
	st.local.u32 	[%rd138+112], %r1320;
	or.b32  	%r1321, %r1313, %r1308;
	or.b32  	%r1322, %r1321, %r1310;
	or.b32  	%r1323, %r1322, %r1315;
	st.local.u32 	[%rd138+116], %r1323;
	or.b32  	%r1324, %r1306, %r1301;
	shr.u32 	%r1325, %r1324, 4;
	or.b32  	%r1326, %r1325, %r1302;
	or.b32  	%r1327, %r1326, %r1307;
	st.local.u32 	[%rd138+120], %r1327;
	or.b32  	%r1328, %r1316, %r1311;
	shr.u32 	%r1329, %r1328, 4;
	or.b32  	%r1330, %r1329, %r1312;
	or.b32  	%r1331, %r1330, %r1317;
	st.local.u32 	[%rd138+124], %r1331;
	ld.local.v4.u32 	{%r1332, %r1333, %r1334, %r1335}, [%rd135+128];
	and.b32  	%r1340, %r1332, 1431655765;
	shl.b32 	%r1341, %r1332, 1;
	and.b32  	%r1342, %r1341, -1431655766;
	or.b32  	%r1343, %r1342, %r1340;
	and.b32  	%r1344, %r1332, -1431655766;
	shr.u32 	%r1345, %r1344, 1;
	or.b32  	%r1346, %r1345, %r1344;
	and.b32  	%r1347, %r1333, 1431655765;
	shl.b32 	%r1348, %r1333, 1;
	and.b32  	%r1349, %r1348, -1431655766;
	or.b32  	%r1350, %r1349, %r1347;
	and.b32  	%r1351, %r1333, -1431655766;
	shr.u32 	%r1352, %r1351, 1;
	or.b32  	%r1353, %r1352, %r1351;
	and.b32  	%r1354, %r1334, 1431655765;
	shl.b32 	%r1355, %r1334, 1;
	and.b32  	%r1356, %r1355, -1431655766;
	or.b32  	%r1357, %r1356, %r1354;
	and.b32  	%r1358, %r1334, -1431655766;
	shr.u32 	%r1359, %r1358, 1;
	or.b32  	%r1360, %r1359, %r1358;
	and.b32  	%r1361, %r1335, 1431655765;
	shl.b32 	%r1362, %r1335, 1;
	and.b32  	%r1363, %r1362, -1431655766;
	or.b32  	%r1364, %r1363, %r1361;
	and.b32  	%r1365, %r1335, -1431655766;
	shr.u32 	%r1366, %r1365, 1;
	or.b32  	%r1367, %r1366, %r1365;
	and.b32  	%r1368, %r1343, 858993459;
	shl.b32 	%r1369, %r1350, 2;
	and.b32  	%r1370, %r1369, -858993460;
	or.b32  	%r1371, %r1370, %r1368;
	and.b32  	%r1372, %r1343, -858993460;
	shr.u32 	%r1373, %r1372, 2;
	and.b32  	%r1374, %r1350, -858993460;
	or.b32  	%r1375, %r1373, %r1374;
	and.b32  	%r1376, %r1346, 858993459;
	shl.b32 	%r1377, %r1353, 2;
	and.b32  	%r1378, %r1377, -858993460;
	or.b32  	%r1379, %r1378, %r1376;
	and.b32  	%r1380, %r1346, -858993460;
	shr.u32 	%r1381, %r1380, 2;
	and.b32  	%r1382, %r1353, -858993460;
	or.b32  	%r1383, %r1381, %r1382;
	and.b32  	%r1384, %r1357, 858993459;
	shl.b32 	%r1385, %r1364, 2;
	and.b32  	%r1386, %r1385, -858993460;
	or.b32  	%r1387, %r1386, %r1384;
	and.b32  	%r1388, %r1357, -858993460;
	shr.u32 	%r1389, %r1388, 2;
	and.b32  	%r1390, %r1364, -858993460;
	or.b32  	%r1391, %r1389, %r1390;
	and.b32  	%r1392, %r1360, 858993459;
	shl.b32 	%r1393, %r1367, 2;
	and.b32  	%r1394, %r1393, -858993460;
	or.b32  	%r1395, %r1394, %r1392;
	and.b32  	%r1396, %r1360, -858993460;
	shr.u32 	%r1397, %r1396, 2;
	and.b32  	%r1398, %r1367, -858993460;
	or.b32  	%r1399, %r1397, %r1398;
	and.b32  	%r1400, %r1371, 84215045;
	shl.b32 	%r1401, %r1387, 4;
	and.b32  	%r1402, %r1401, 1347440720;
	and.b32  	%r1403, %r1371, 1347440720;
	and.b32  	%r1404, %r1387, 1347440720;
	and.b32  	%r1405, %r1379, 168430090;
	shl.b32 	%r1406, %r1395, 4;
	and.b32  	%r1407, %r1406, -1600085856;
	and.b32  	%r1408, %r1379, -1600085856;
	and.b32  	%r1409, %r1395, -1600085856;
	and.b32  	%r1410, %r1375, 84215045;
	shl.b32 	%r1411, %r1391, 4;
	and.b32  	%r1412, %r1411, 1347440720;
	and.b32  	%r1413, %r1375, 1347440720;
	and.b32  	%r1414, %r1391, 1347440720;
	and.b32  	%r1415, %r1383, 168430090;
	shl.b32 	%r1416, %r1399, 4;
	and.b32  	%r1417, %r1416, -1600085856;
	and.b32  	%r1418, %r1383, -1600085856;
	and.b32  	%r1419, %r1399, -1600085856;
	or.b32  	%r1420, %r1405, %r1400;
	or.b32  	%r1421, %r1420, %r1402;
	or.b32  	%r1422, %r1421, %r1407;
	st.local.u32 	[%rd138+128], %r1422;
	or.b32  	%r1423, %r1415, %r1410;
	or.b32  	%r1424, %r1423, %r1412;
	or.b32  	%r1425, %r1424, %r1417;
	st.local.u32 	[%rd138+132], %r1425;
	or.b32  	%r1426, %r1408, %r1403;
	shr.u32 	%r1427, %r1426, 4;
	or.b32  	%r1428, %r1427, %r1404;
	or.b32  	%r1429, %r1428, %r1409;
	st.local.u32 	[%rd138+136], %r1429;
	or.b32  	%r1430, %r1418, %r1413;
	shr.u32 	%r1431, %r1430, 4;
	or.b32  	%r1432, %r1431, %r1414;
	or.b32  	%r1433, %r1432, %r1419;
	st.local.u32 	[%rd138+140], %r1433;
	ld.local.v4.u32 	{%r1434, %r1435, %r1436, %r1437}, [%rd135+144];
	and.b32  	%r1442, %r1434, 1431655765;
	shl.b32 	%r1443, %r1434, 1;
	and.b32  	%r1444, %r1443, -1431655766;
	or.b32  	%r1445, %r1444, %r1442;
	and.b32  	%r1446, %r1434, -1431655766;
	shr.u32 	%r1447, %r1446, 1;
	or.b32  	%r1448, %r1447, %r1446;
	and.b32  	%r1449, %r1435, 1431655765;
	shl.b32 	%r1450, %r1435, 1;
	and.b32  	%r1451, %r1450, -1431655766;
	or.b32  	%r1452, %r1451, %r1449;
	and.b32  	%r1453, %r1435, -1431655766;
	shr.u32 	%r1454, %r1453, 1;
	or.b32  	%r1455, %r1454, %r1453;
	and.b32  	%r1456, %r1436, 1431655765;
	shl.b32 	%r1457, %r1436, 1;
	and.b32  	%r1458, %r1457, -1431655766;
	or.b32  	%r1459, %r1458, %r1456;
	and.b32  	%r1460, %r1436, -1431655766;
	shr.u32 	%r1461, %r1460, 1;
	or.b32  	%r1462, %r1461, %r1460;
	and.b32  	%r1463, %r1437, 1431655765;
	shl.b32 	%r1464, %r1437, 1;
	and.b32  	%r1465, %r1464, -1431655766;
	or.b32  	%r1466, %r1465, %r1463;
	and.b32  	%r1467, %r1437, -1431655766;
	shr.u32 	%r1468, %r1467, 1;
	or.b32  	%r1469, %r1468, %r1467;
	and.b32  	%r1470, %r1445, 858993459;
	shl.b32 	%r1471, %r1452, 2;
	and.b32  	%r1472, %r1471, -858993460;
	or.b32  	%r1473, %r1472, %r1470;
	and.b32  	%r1474, %r1445, -858993460;
	shr.u32 	%r1475, %r1474, 2;
	and.b32  	%r1476, %r1452, -858993460;
	or.b32  	%r1477, %r1475, %r1476;
	and.b32  	%r1478, %r1448, 858993459;
	shl.b32 	%r1479, %r1455, 2;
	and.b32  	%r1480, %r1479, -858993460;
	or.b32  	%r1481, %r1480, %r1478;
	and.b32  	%r1482, %r1448, -858993460;
	shr.u32 	%r1483, %r1482, 2;
	and.b32  	%r1484, %r1455, -858993460;
	or.b32  	%r1485, %r1483, %r1484;
	and.b32  	%r1486, %r1459, 858993459;
	shl.b32 	%r1487, %r1466, 2;
	and.b32  	%r1488, %r1487, -858993460;
	or.b32  	%r1489, %r1488, %r1486;
	and.b32  	%r1490, %r1459, -858993460;
	shr.u32 	%r1491, %r1490, 2;
	and.b32  	%r1492, %r1466, -858993460;
	or.b32  	%r1493, %r1491, %r1492;
	and.b32  	%r1494, %r1462, 858993459;
	shl.b32 	%r1495, %r1469, 2;
	and.b32  	%r1496, %r1495, -858993460;
	or.b32  	%r1497, %r1496, %r1494;
	and.b32  	%r1498, %r1462, -858993460;
	shr.u32 	%r1499, %r1498, 2;
	and.b32  	%r1500, %r1469, -858993460;
	or.b32  	%r1501, %r1499, %r1500;
	and.b32  	%r1502, %r1473, 84215045;
	shl.b32 	%r1503, %r1489, 4;
	and.b32  	%r1504, %r1503, 1347440720;
	and.b32  	%r1505, %r1473, 1347440720;
	and.b32  	%r1506, %r1489, 1347440720;
	and.b32  	%r1507, %r1481, 168430090;
	shl.b32 	%r1508, %r1497, 4;
	and.b32  	%r1509, %r1508, -1600085856;
	and.b32  	%r1510, %r1481, -1600085856;
	and.b32  	%r1511, %r1497, -1600085856;
	and.b32  	%r1512, %r1477, 84215045;
	shl.b32 	%r1513, %r1493, 4;
	and.b32  	%r1514, %r1513, 1347440720;
	and.b32  	%r1515, %r1477, 1347440720;
	and.b32  	%r1516, %r1493, 1347440720;
	and.b32  	%r1517, %r1485, 168430090;
	shl.b32 	%r1518, %r1501, 4;
	and.b32  	%r1519, %r1518, -1600085856;
	and.b32  	%r1520, %r1485, -1600085856;
	and.b32  	%r1521, %r1501, -1600085856;
	or.b32  	%r1522, %r1507, %r1502;
	or.b32  	%r1523, %r1522, %r1504;
	or.b32  	%r1524, %r1523, %r1509;
	st.local.u32 	[%rd138+144], %r1524;
	or.b32  	%r1525, %r1517, %r1512;
	or.b32  	%r1526, %r1525, %r1514;
	or.b32  	%r1527, %r1526, %r1519;
	st.local.u32 	[%rd138+148], %r1527;
	or.b32  	%r1528, %r1510, %r1505;
	shr.u32 	%r1529, %r1528, 4;
	or.b32  	%r1530, %r1529, %r1506;
	or.b32  	%r1531, %r1530, %r1511;
	st.local.u32 	[%rd138+152], %r1531;
	or.b32  	%r1532, %r1520, %r1515;
	shr.u32 	%r1533, %r1532, 4;
	or.b32  	%r1534, %r1533, %r1516;
	or.b32  	%r1535, %r1534, %r1521;
	st.local.u32 	[%rd138+156], %r1535;
	ld.local.v4.u32 	{%r1536, %r1537, %r1538, %r1539}, [%rd135+160];
	and.b32  	%r1544, %r1536, 1431655765;
	shl.b32 	%r1545, %r1536, 1;
	and.b32  	%r1546, %r1545, -1431655766;
	or.b32  	%r1547, %r1546, %r1544;
	and.b32  	%r1548, %r1536, -1431655766;
	shr.u32 	%r1549, %r1548, 1;
	or.b32  	%r1550, %r1549, %r1548;
	and.b32  	%r1551, %r1537, 1431655765;
	shl.b32 	%r1552, %r1537, 1;
	and.b32  	%r1553, %r1552, -1431655766;
	or.b32  	%r1554, %r1553, %r1551;
	and.b32  	%r1555, %r1537, -1431655766;
	shr.u32 	%r1556, %r1555, 1;
	or.b32  	%r1557, %r1556, %r1555;
	and.b32  	%r1558, %r1538, 1431655765;
	shl.b32 	%r1559, %r1538, 1;
	and.b32  	%r1560, %r1559, -1431655766;
	or.b32  	%r1561, %r1560, %r1558;
	and.b32  	%r1562, %r1538, -1431655766;
	shr.u32 	%r1563, %r1562, 1;
	or.b32  	%r1564, %r1563, %r1562;
	and.b32  	%r1565, %r1539, 1431655765;
	shl.b32 	%r1566, %r1539, 1;
	and.b32  	%r1567, %r1566, -1431655766;
	or.b32  	%r1568, %r1567, %r1565;
	and.b32  	%r1569, %r1539, -1431655766;
	shr.u32 	%r1570, %r1569, 1;
	or.b32  	%r1571, %r1570, %r1569;
	and.b32  	%r1572, %r1547, 858993459;
	shl.b32 	%r1573, %r1554, 2;
	and.b32  	%r1574, %r1573, -858993460;
	or.b32  	%r1575, %r1574, %r1572;
	and.b32  	%r1576, %r1547, -858993460;
	shr.u32 	%r1577, %r1576, 2;
	and.b32  	%r1578, %r1554, -858993460;
	or.b32  	%r1579, %r1577, %r1578;
	and.b32  	%r1580, %r1550, 858993459;
	shl.b32 	%r1581, %r1557, 2;
	and.b32  	%r1582, %r1581, -858993460;
	or.b32  	%r1583, %r1582, %r1580;
	and.b32  	%r1584, %r1550, -858993460;
	shr.u32 	%r1585, %r1584, 2;
	and.b32  	%r1586, %r1557, -858993460;
	or.b32  	%r1587, %r1585, %r1586;
	and.b32  	%r1588, %r1561, 858993459;
	shl.b32 	%r1589, %r1568, 2;
	and.b32  	%r1590, %r1589, -858993460;
	or.b32  	%r1591, %r1590, %r1588;
	and.b32  	%r1592, %r1561, -858993460;
	shr.u32 	%r1593, %r1592, 2;
	and.b32  	%r1594, %r1568, -858993460;
	or.b32  	%r1595, %r1593, %r1594;
	and.b32  	%r1596, %r1564, 858993459;
	shl.b32 	%r1597, %r1571, 2;
	and.b32  	%r1598, %r1597, -858993460;
	or.b32  	%r1599, %r1598, %r1596;
	and.b32  	%r1600, %r1564, -858993460;
	shr.u32 	%r1601, %r1600, 2;
	and.b32  	%r1602, %r1571, -858993460;
	or.b32  	%r1603, %r1601, %r1602;
	and.b32  	%r1604, %r1575, 84215045;
	shl.b32 	%r1605, %r1591, 4;
	and.b32  	%r1606, %r1605, 1347440720;
	and.b32  	%r1607, %r1575, 1347440720;
	and.b32  	%r1608, %r1591, 1347440720;
	and.b32  	%r1609, %r1583, 168430090;
	shl.b32 	%r1610, %r1599, 4;
	and.b32  	%r1611, %r1610, -1600085856;
	and.b32  	%r1612, %r1583, -1600085856;
	and.b32  	%r1613, %r1599, -1600085856;
	and.b32  	%r1614, %r1579, 84215045;
	shl.b32 	%r1615, %r1595, 4;
	and.b32  	%r1616, %r1615, 1347440720;
	and.b32  	%r1617, %r1579, 1347440720;
	and.b32  	%r1618, %r1595, 1347440720;
	and.b32  	%r1619, %r1587, 168430090;
	shl.b32 	%r1620, %r1603, 4;
	and.b32  	%r1621, %r1620, -1600085856;
	and.b32  	%r1622, %r1587, -1600085856;
	and.b32  	%r1623, %r1603, -1600085856;
	or.b32  	%r1624, %r1609, %r1604;
	or.b32  	%r1625, %r1624, %r1606;
	or.b32  	%r1626, %r1625, %r1611;
	st.local.u32 	[%rd138+160], %r1626;
	or.b32  	%r1627, %r1619, %r1614;
	or.b32  	%r1628, %r1627, %r1616;
	or.b32  	%r1629, %r1628, %r1621;
	st.local.u32 	[%rd138+164], %r1629;
	or.b32  	%r1630, %r1612, %r1607;
	shr.u32 	%r1631, %r1630, 4;
	or.b32  	%r1632, %r1631, %r1608;
	or.b32  	%r1633, %r1632, %r1613;
	st.local.u32 	[%rd138+168], %r1633;
	or.b32  	%r1634, %r1622, %r1617;
	shr.u32 	%r1635, %r1634, 4;
	or.b32  	%r1636, %r1635, %r1618;
	or.b32  	%r1637, %r1636, %r1623;
	st.local.u32 	[%rd138+172], %r1637;
	ld.local.v4.u32 	{%r1638, %r1639, %r1640, %r1641}, [%rd135+176];
	and.b32  	%r1646, %r1638, 1431655765;
	shl.b32 	%r1647, %r1638, 1;
	and.b32  	%r1648, %r1647, -1431655766;
	or.b32  	%r1649, %r1648, %r1646;
	and.b32  	%r1650, %r1638, -1431655766;
	shr.u32 	%r1651, %r1650, 1;
	or.b32  	%r1652, %r1651, %r1650;
	and.b32  	%r1653, %r1639, 1431655765;
	shl.b32 	%r1654, %r1639, 1;
	and.b32  	%r1655, %r1654, -1431655766;
	or.b32  	%r1656, %r1655, %r1653;
	and.b32  	%r1657, %r1639, -1431655766;
	shr.u32 	%r1658, %r1657, 1;
	or.b32  	%r1659, %r1658, %r1657;
	and.b32  	%r1660, %r1640, 1431655765;
	shl.b32 	%r1661, %r1640, 1;
	and.b32  	%r1662, %r1661, -1431655766;
	or.b32  	%r1663, %r1662, %r1660;
	and.b32  	%r1664, %r1640, -1431655766;
	shr.u32 	%r1665, %r1664, 1;
	or.b32  	%r1666, %r1665, %r1664;
	and.b32  	%r1667, %r1641, 1431655765;
	shl.b32 	%r1668, %r1641, 1;
	and.b32  	%r1669, %r1668, -1431655766;
	or.b32  	%r1670, %r1669, %r1667;
	and.b32  	%r1671, %r1641, -1431655766;
	shr.u32 	%r1672, %r1671, 1;
	or.b32  	%r1673, %r1672, %r1671;
	and.b32  	%r1674, %r1649, 858993459;
	shl.b32 	%r1675, %r1656, 2;
	and.b32  	%r1676, %r1675, -858993460;
	or.b32  	%r1677, %r1676, %r1674;
	and.b32  	%r1678, %r1649, -858993460;
	shr.u32 	%r1679, %r1678, 2;
	and.b32  	%r1680, %r1656, -858993460;
	or.b32  	%r1681, %r1679, %r1680;
	and.b32  	%r1682, %r1652, 858993459;
	shl.b32 	%r1683, %r1659, 2;
	and.b32  	%r1684, %r1683, -858993460;
	or.b32  	%r1685, %r1684, %r1682;
	and.b32  	%r1686, %r1652, -858993460;
	shr.u32 	%r1687, %r1686, 2;
	and.b32  	%r1688, %r1659, -858993460;
	or.b32  	%r1689, %r1687, %r1688;
	and.b32  	%r1690, %r1663, 858993459;
	shl.b32 	%r1691, %r1670, 2;
	and.b32  	%r1692, %r1691, -858993460;
	or.b32  	%r1693, %r1692, %r1690;
	and.b32  	%r1694, %r1663, -858993460;
	shr.u32 	%r1695, %r1694, 2;
	and.b32  	%r1696, %r1670, -858993460;
	or.b32  	%r1697, %r1695, %r1696;
	and.b32  	%r1698, %r1666, 858993459;
	shl.b32 	%r1699, %r1673, 2;
	and.b32  	%r1700, %r1699, -858993460;
	or.b32  	%r1701, %r1700, %r1698;
	and.b32  	%r1702, %r1666, -858993460;
	shr.u32 	%r1703, %r1702, 2;
	and.b32  	%r1704, %r1673, -858993460;
	or.b32  	%r1705, %r1703, %r1704;
	and.b32  	%r1706, %r1677, 84215045;
	shl.b32 	%r1707, %r1693, 4;
	and.b32  	%r1708, %r1707, 1347440720;
	and.b32  	%r1709, %r1677, 1347440720;
	and.b32  	%r1710, %r1693, 1347440720;
	and.b32  	%r1711, %r1685, 168430090;
	shl.b32 	%r1712, %r1701, 4;
	and.b32  	%r1713, %r1712, -1600085856;
	and.b32  	%r1714, %r1685, -1600085856;
	and.b32  	%r1715, %r1701, -1600085856;
	and.b32  	%r1716, %r1681, 84215045;
	shl.b32 	%r1717, %r1697, 4;
	and.b32  	%r1718, %r1717, 1347440720;
	and.b32  	%r1719, %r1681, 1347440720;
	and.b32  	%r1720, %r1697, 1347440720;
	and.b32  	%r1721, %r1689, 168430090;
	shl.b32 	%r1722, %r1705, 4;
	and.b32  	%r1723, %r1722, -1600085856;
	and.b32  	%r1724, %r1689, -1600085856;
	and.b32  	%r1725, %r1705, -1600085856;
	or.b32  	%r1726, %r1711, %r1706;
	or.b32  	%r1727, %r1726, %r1708;
	or.b32  	%r1728, %r1727, %r1713;
	st.local.u32 	[%rd138+176], %r1728;
	or.b32  	%r1729, %r1721, %r1716;
	or.b32  	%r1730, %r1729, %r1718;
	or.b32  	%r1731, %r1730, %r1723;
	st.local.u32 	[%rd138+180], %r1731;
	or.b32  	%r1732, %r1714, %r1709;
	shr.u32 	%r1733, %r1732, 4;
	or.b32  	%r1734, %r1733, %r1710;
	or.b32  	%r1735, %r1734, %r1715;
	st.local.u32 	[%rd138+184], %r1735;
	or.b32  	%r1736, %r1724, %r1719;
	shr.u32 	%r1737, %r1736, 4;
	or.b32  	%r1738, %r1737, %r1720;
	or.b32  	%r1739, %r1738, %r1725;
	st.local.u32 	[%rd138+188], %r1739;
	ld.local.v4.u32 	{%r1740, %r1741, %r1742, %r1743}, [%rd135+192];
	and.b32  	%r1748, %r1740, 1431655765;
	shl.b32 	%r1749, %r1740, 1;
	and.b32  	%r1750, %r1749, -1431655766;
	or.b32  	%r1751, %r1750, %r1748;
	and.b32  	%r1752, %r1740, -1431655766;
	shr.u32 	%r1753, %r1752, 1;
	or.b32  	%r1754, %r1753, %r1752;
	and.b32  	%r1755, %r1741, 1431655765;
	shl.b32 	%r1756, %r1741, 1;
	and.b32  	%r1757, %r1756, -1431655766;
	or.b32  	%r1758, %r1757, %r1755;
	and.b32  	%r1759, %r1741, -1431655766;
	shr.u32 	%r1760, %r1759, 1;
	or.b32  	%r1761, %r1760, %r1759;
	and.b32  	%r1762, %r1742, 1431655765;
	shl.b32 	%r1763, %r1742, 1;
	and.b32  	%r1764, %r1763, -1431655766;
	or.b32  	%r1765, %r1764, %r1762;
	and.b32  	%r1766, %r1742, -1431655766;
	shr.u32 	%r1767, %r1766, 1;
	or.b32  	%r1768, %r1767, %r1766;
	and.b32  	%r1769, %r1743, 1431655765;
	shl.b32 	%r1770, %r1743, 1;
	and.b32  	%r1771, %r1770, -1431655766;
	or.b32  	%r1772, %r1771, %r1769;
	and.b32  	%r1773, %r1743, -1431655766;
	shr.u32 	%r1774, %r1773, 1;
	or.b32  	%r1775, %r1774, %r1773;
	and.b32  	%r1776, %r1751, 858993459;
	shl.b32 	%r1777, %r1758, 2;
	and.b32  	%r1778, %r1777, -858993460;
	or.b32  	%r1779, %r1778, %r1776;
	and.b32  	%r1780, %r1751, -858993460;
	shr.u32 	%r1781, %r1780, 2;
	and.b32  	%r1782, %r1758, -858993460;
	or.b32  	%r1783, %r1781, %r1782;
	and.b32  	%r1784, %r1754, 858993459;
	shl.b32 	%r1785, %r1761, 2;
	and.b32  	%r1786, %r1785, -858993460;
	or.b32  	%r1787, %r1786, %r1784;
	and.b32  	%r1788, %r1754, -858993460;
	shr.u32 	%r1789, %r1788, 2;
	and.b32  	%r1790, %r1761, -858993460;
	or.b32  	%r1791, %r1789, %r1790;
	and.b32  	%r1792, %r1765, 858993459;
	shl.b32 	%r1793, %r1772, 2;
	and.b32  	%r1794, %r1793, -858993460;
	or.b32  	%r1795, %r1794, %r1792;
	and.b32  	%r1796, %r1765, -858993460;
	shr.u32 	%r1797, %r1796, 2;
	and.b32  	%r1798, %r1772, -858993460;
	or.b32  	%r1799, %r1797, %r1798;
	and.b32  	%r1800, %r1768, 858993459;
	shl.b32 	%r1801, %r1775, 2;
	and.b32  	%r1802, %r1801, -858993460;
	or.b32  	%r1803, %r1802, %r1800;
	and.b32  	%r1804, %r1768, -858993460;
	shr.u32 	%r1805, %r1804, 2;
	and.b32  	%r1806, %r1775, -858993460;
	or.b32  	%r1807, %r1805, %r1806;
	and.b32  	%r1808, %r1779, 84215045;
	shl.b32 	%r1809, %r1795, 4;
	and.b32  	%r1810, %r1809, 1347440720;
	and.b32  	%r1811, %r1779, 1347440720;
	and.b32  	%r1812, %r1795, 1347440720;
	and.b32  	%r1813, %r1787, 168430090;
	shl.b32 	%r1814, %r1803, 4;
	and.b32  	%r1815, %r1814, -1600085856;
	and.b32  	%r1816, %r1787, -1600085856;
	and.b32  	%r1817, %r1803, -1600085856;
	and.b32  	%r1818, %r1783, 84215045;
	shl.b32 	%r1819, %r1799, 4;
	and.b32  	%r1820, %r1819, 1347440720;
	and.b32  	%r1821, %r1783, 1347440720;
	and.b32  	%r1822, %r1799, 1347440720;
	and.b32  	%r1823, %r1791, 168430090;
	shl.b32 	%r1824, %r1807, 4;
	and.b32  	%r1825, %r1824, -1600085856;
	and.b32  	%r1826, %r1791, -1600085856;
	and.b32  	%r1827, %r1807, -1600085856;
	or.b32  	%r1828, %r1813, %r1808;
	or.b32  	%r1829, %r1828, %r1810;
	or.b32  	%r1830, %r1829, %r1815;
	st.local.u32 	[%rd138+192], %r1830;
	or.b32  	%r1831, %r1823, %r1818;
	or.b32  	%r1832, %r1831, %r1820;
	or.b32  	%r1833, %r1832, %r1825;
	st.local.u32 	[%rd138+196], %r1833;
	or.b32  	%r1834, %r1816, %r1811;
	shr.u32 	%r1835, %r1834, 4;
	or.b32  	%r1836, %r1835, %r1812;
	or.b32  	%r1837, %r1836, %r1817;
	st.local.u32 	[%rd138+200], %r1837;
	or.b32  	%r1838, %r1826, %r1821;
	shr.u32 	%r1839, %r1838, 4;
	or.b32  	%r1840, %r1839, %r1822;
	or.b32  	%r1841, %r1840, %r1827;
	st.local.u32 	[%rd138+204], %r1841;
	ld.local.v4.u32 	{%r1842, %r1843, %r1844, %r1845}, [%rd135+208];
	and.b32  	%r1850, %r1842, 1431655765;
	shl.b32 	%r1851, %r1842, 1;
	and.b32  	%r1852, %r1851, -1431655766;
	or.b32  	%r1853, %r1852, %r1850;
	and.b32  	%r1854, %r1842, -1431655766;
	shr.u32 	%r1855, %r1854, 1;
	or.b32  	%r1856, %r1855, %r1854;
	and.b32  	%r1857, %r1843, 1431655765;
	shl.b32 	%r1858, %r1843, 1;
	and.b32  	%r1859, %r1858, -1431655766;
	or.b32  	%r1860, %r1859, %r1857;
	and.b32  	%r1861, %r1843, -1431655766;
	shr.u32 	%r1862, %r1861, 1;
	or.b32  	%r1863, %r1862, %r1861;
	and.b32  	%r1864, %r1844, 1431655765;
	shl.b32 	%r1865, %r1844, 1;
	and.b32  	%r1866, %r1865, -1431655766;
	or.b32  	%r1867, %r1866, %r1864;
	and.b32  	%r1868, %r1844, -1431655766;
	shr.u32 	%r1869, %r1868, 1;
	or.b32  	%r1870, %r1869, %r1868;
	and.b32  	%r1871, %r1845, 1431655765;
	shl.b32 	%r1872, %r1845, 1;
	and.b32  	%r1873, %r1872, -1431655766;
	or.b32  	%r1874, %r1873, %r1871;
	and.b32  	%r1875, %r1845, -1431655766;
	shr.u32 	%r1876, %r1875, 1;
	or.b32  	%r1877, %r1876, %r1875;
	and.b32  	%r1878, %r1853, 858993459;
	shl.b32 	%r1879, %r1860, 2;
	and.b32  	%r1880, %r1879, -858993460;
	or.b32  	%r1881, %r1880, %r1878;
	and.b32  	%r1882, %r1853, -858993460;
	shr.u32 	%r1883, %r1882, 2;
	and.b32  	%r1884, %r1860, -858993460;
	or.b32  	%r1885, %r1883, %r1884;
	and.b32  	%r1886, %r1856, 858993459;
	shl.b32 	%r1887, %r1863, 2;
	and.b32  	%r1888, %r1887, -858993460;
	or.b32  	%r1889, %r1888, %r1886;
	and.b32  	%r1890, %r1856, -858993460;
	shr.u32 	%r1891, %r1890, 2;
	and.b32  	%r1892, %r1863, -858993460;
	or.b32  	%r1893, %r1891, %r1892;
	and.b32  	%r1894, %r1867, 858993459;
	shl.b32 	%r1895, %r1874, 2;
	and.b32  	%r1896, %r1895, -858993460;
	or.b32  	%r1897, %r1896, %r1894;
	and.b32  	%r1898, %r1867, -858993460;
	shr.u32 	%r1899, %r1898, 2;
	and.b32  	%r1900, %r1874, -858993460;
	or.b32  	%r1901, %r1899, %r1900;
	and.b32  	%r1902, %r1870, 858993459;
	shl.b32 	%r1903, %r1877, 2;
	and.b32  	%r1904, %r1903, -858993460;
	or.b32  	%r1905, %r1904, %r1902;
	and.b32  	%r1906, %r1870, -858993460;
	shr.u32 	%r1907, %r1906, 2;
	and.b32  	%r1908, %r1877, -858993460;
	or.b32  	%r1909, %r1907, %r1908;
	and.b32  	%r1910, %r1881, 84215045;
	shl.b32 	%r1911, %r1897, 4;
	and.b32  	%r1912, %r1911, 1347440720;
	and.b32  	%r1913, %r1881, 1347440720;
	and.b32  	%r1914, %r1897, 1347440720;
	and.b32  	%r1915, %r1889, 168430090;
	shl.b32 	%r1916, %r1905, 4;
	and.b32  	%r1917, %r1916, -1600085856;
	and.b32  	%r1918, %r1889, -1600085856;
	and.b32  	%r1919, %r1905, -1600085856;
	and.b32  	%r1920, %r1885, 84215045;
	shl.b32 	%r1921, %r1901, 4;
	and.b32  	%r1922, %r1921, 1347440720;
	and.b32  	%r1923, %r1885, 1347440720;
	and.b32  	%r1924, %r1901, 1347440720;
	and.b32  	%r1925, %r1893, 168430090;
	shl.b32 	%r1926, %r1909, 4;
	and.b32  	%r1927, %r1926, -1600085856;
	and.b32  	%r1928, %r1893, -1600085856;
	and.b32  	%r1929, %r1909, -1600085856;
	or.b32  	%r1930, %r1915, %r1910;
	or.b32  	%r1931, %r1930, %r1912;
	or.b32  	%r1932, %r1931, %r1917;
	st.local.u32 	[%rd138+208], %r1932;
	or.b32  	%r1933, %r1925, %r1920;
	or.b32  	%r1934, %r1933, %r1922;
	or.b32  	%r1935, %r1934, %r1927;
	st.local.u32 	[%rd138+212], %r1935;
	or.b32  	%r1936, %r1918, %r1913;
	shr.u32 	%r1937, %r1936, 4;
	or.b32  	%r1938, %r1937, %r1914;
	or.b32  	%r1939, %r1938, %r1919;
	st.local.u32 	[%rd138+216], %r1939;
	or.b32  	%r1940, %r1928, %r1923;
	shr.u32 	%r1941, %r1940, 4;
	or.b32  	%r1942, %r1941, %r1924;
	or.b32  	%r1943, %r1942, %r1929;
	st.local.u32 	[%rd138+220], %r1943;
	ld.local.v4.u32 	{%r1944, %r1945, %r1946, %r1947}, [%rd135+224];
	and.b32  	%r1952, %r1944, 1431655765;
	shl.b32 	%r1953, %r1944, 1;
	and.b32  	%r1954, %r1953, -1431655766;
	or.b32  	%r1955, %r1954, %r1952;
	and.b32  	%r1956, %r1944, -1431655766;
	shr.u32 	%r1957, %r1956, 1;
	or.b32  	%r1958, %r1957, %r1956;
	and.b32  	%r1959, %r1945, 1431655765;
	shl.b32 	%r1960, %r1945, 1;
	and.b32  	%r1961, %r1960, -1431655766;
	or.b32  	%r1962, %r1961, %r1959;
	and.b32  	%r1963, %r1945, -1431655766;
	shr.u32 	%r1964, %r1963, 1;
	or.b32  	%r1965, %r1964, %r1963;
	and.b32  	%r1966, %r1946, 1431655765;
	shl.b32 	%r1967, %r1946, 1;
	and.b32  	%r1968, %r1967, -1431655766;
	or.b32  	%r1969, %r1968, %r1966;
	and.b32  	%r1970, %r1946, -1431655766;
	shr.u32 	%r1971, %r1970, 1;
	or.b32  	%r1972, %r1971, %r1970;
	and.b32  	%r1973, %r1947, 1431655765;
	shl.b32 	%r1974, %r1947, 1;
	and.b32  	%r1975, %r1974, -1431655766;
	or.b32  	%r1976, %r1975, %r1973;
	and.b32  	%r1977, %r1947, -1431655766;
	shr.u32 	%r1978, %r1977, 1;
	or.b32  	%r1979, %r1978, %r1977;
	and.b32  	%r1980, %r1955, 858993459;
	shl.b32 	%r1981, %r1962, 2;
	and.b32  	%r1982, %r1981, -858993460;
	or.b32  	%r1983, %r1982, %r1980;
	and.b32  	%r1984, %r1955, -858993460;
	shr.u32 	%r1985, %r1984, 2;
	and.b32  	%r1986, %r1962, -858993460;
	or.b32  	%r1987, %r1985, %r1986;
	and.b32  	%r1988, %r1958, 858993459;
	shl.b32 	%r1989, %r1965, 2;
	and.b32  	%r1990, %r1989, -858993460;
	or.b32  	%r1991, %r1990, %r1988;
	and.b32  	%r1992, %r1958, -858993460;
	shr.u32 	%r1993, %r1992, 2;
	and.b32  	%r1994, %r1965, -858993460;
	or.b32  	%r1995, %r1993, %r1994;
	and.b32  	%r1996, %r1969, 858993459;
	shl.b32 	%r1997, %r1976, 2;
	and.b32  	%r1998, %r1997, -858993460;
	or.b32  	%r1999, %r1998, %r1996;
	and.b32  	%r2000, %r1969, -858993460;
	shr.u32 	%r2001, %r2000, 2;
	and.b32  	%r2002, %r1976, -858993460;
	or.b32  	%r2003, %r2001, %r2002;
	and.b32  	%r2004, %r1972, 858993459;
	shl.b32 	%r2005, %r1979, 2;
	and.b32  	%r2006, %r2005, -858993460;
	or.b32  	%r2007, %r2006, %r2004;
	and.b32  	%r2008, %r1972, -858993460;
	shr.u32 	%r2009, %r2008, 2;
	and.b32  	%r2010, %r1979, -858993460;
	or.b32  	%r2011, %r2009, %r2010;
	and.b32  	%r2012, %r1983, 84215045;
	shl.b32 	%r2013, %r1999, 4;
	and.b32  	%r2014, %r2013, 1347440720;
	and.b32  	%r2015, %r1983, 1347440720;
	and.b32  	%r2016, %r1999, 1347440720;
	and.b32  	%r2017, %r1991, 168430090;
	shl.b32 	%r2018, %r2007, 4;
	and.b32  	%r2019, %r2018, -1600085856;
	and.b32  	%r2020, %r1991, -1600085856;
	and.b32  	%r2021, %r2007, -1600085856;
	and.b32  	%r2022, %r1987, 84215045;
	shl.b32 	%r2023, %r2003, 4;
	and.b32  	%r2024, %r2023, 1347440720;
	and.b32  	%r2025, %r1987, 1347440720;
	and.b32  	%r2026, %r2003, 1347440720;
	and.b32  	%r2027, %r1995, 168430090;
	shl.b32 	%r2028, %r2011, 4;
	and.b32  	%r2029, %r2028, -1600085856;
	and.b32  	%r2030, %r1995, -1600085856;
	and.b32  	%r2031, %r2011, -1600085856;
	or.b32  	%r2032, %r2017, %r2012;
	or.b32  	%r2033, %r2032, %r2014;
	or.b32  	%r2034, %r2033, %r2019;
	st.local.u32 	[%rd138+224], %r2034;
	or.b32  	%r2035, %r2027, %r2022;
	or.b32  	%r2036, %r2035, %r2024;
	or.b32  	%r2037, %r2036, %r2029;
	st.local.u32 	[%rd138+228], %r2037;
	or.b32  	%r2038, %r2020, %r2015;
	shr.u32 	%r2039, %r2038, 4;
	or.b32  	%r2040, %r2039, %r2016;
	or.b32  	%r2041, %r2040, %r2021;
	st.local.u32 	[%rd138+232], %r2041;
	or.b32  	%r2042, %r2030, %r2025;
	shr.u32 	%r2043, %r2042, 4;
	or.b32  	%r2044, %r2043, %r2026;
	or.b32  	%r2045, %r2044, %r2031;
	st.local.u32 	[%rd138+236], %r2045;
	mov.u32 	%r2046, 14;
	st.local.u32 	[%rd138+720], %r2046;
	and.b32  	%r2047, %r15, 1431655765;
	shl.b32 	%r2048, %r15, 1;
	and.b32  	%r2049, %r2048, -1431655766;
	or.b32  	%r2050, %r2049, %r2047;
	st.local.u32 	[%rd138+240], %r2050;
	and.b32  	%r2051, %r609, -1431655766;
	shr.u32 	%r19, %r2051, 1;
	or.b32  	%r2052, %r19, %r2051;
	st.local.u32 	[%rd138+244], %r2052;
	and.b32  	%r2053, %r16, 1431655765;
	shl.b32 	%r2054, %r16, 1;
	and.b32  	%r2055, %r2054, -1431655766;
	or.b32  	%r2056, %r2055, %r2053;
	st.local.u32 	[%rd138+248], %r2056;
	and.b32  	%r2057, %r611, -1431655766;
	shr.u32 	%r20, %r2057, 1;
	or.b32  	%r2058, %r20, %r2057;
	st.local.u32 	[%rd138+252], %r2058;
	and.b32  	%r2059, %r17, 1431655765;
	shl.b32 	%r2060, %r17, 1;
	and.b32  	%r2061, %r2060, -1431655766;
	or.b32  	%r2062, %r2061, %r2059;
	st.local.u32 	[%rd138+256], %r2062;
	and.b32  	%r2063, %r614, -1431655766;
	shr.u32 	%r21, %r2063, 1;
	or.b32  	%r2064, %r21, %r2063;
	st.local.u32 	[%rd138+260], %r2064;
	and.b32  	%r2065, %r18, 1431655765;
	shl.b32 	%r2066, %r18, 1;
	and.b32  	%r2067, %r2066, -1431655766;
	or.b32  	%r2068, %r2067, %r2065;
	st.local.u32 	[%rd138+264], %r2068;
	and.b32  	%r2069, %r617, -1431655766;
	shr.u32 	%r22, %r2069, 1;
	or.b32  	%r2070, %r22, %r2069;
	st.local.u32 	[%rd138+268], %r2070;
	and.b32  	%r2071, %r707, 1431655765;
	shl.b32 	%r2072, %r707, 1;
	and.b32  	%r2073, %r2072, -1431655766;
	or.b32  	%r2074, %r2073, %r2071;
	st.local.u32 	[%rd138+272], %r2074;
	and.b32  	%r2075, %r708, -1431655766;
	shr.u32 	%r2076, %r2075, 1;
	or.b32  	%r2077, %r2076, %r2075;
	st.local.u32 	[%rd138+276], %r2077;
	and.b32  	%r2078, %r710, 1431655765;
	shl.b32 	%r2079, %r710, 1;
	and.b32  	%r2080, %r2079, -1431655766;
	or.b32  	%r2081, %r2080, %r2078;
	st.local.u32 	[%rd138+280], %r2081;
	and.b32  	%r2082, %r711, -1431655766;
	shr.u32 	%r2083, %r2082, 1;
	or.b32  	%r2084, %r2083, %r2082;
	st.local.u32 	[%rd138+284], %r2084;
	and.b32  	%r2085, %r714, 1431655765;
	shl.b32 	%r2086, %r714, 1;
	and.b32  	%r2087, %r2086, -1431655766;
	or.b32  	%r2088, %r2087, %r2085;
	st.local.u32 	[%rd138+288], %r2088;
	and.b32  	%r2089, %r715, -1431655766;
	shr.u32 	%r2090, %r2089, 1;
	or.b32  	%r2091, %r2090, %r2089;
	st.local.u32 	[%rd138+292], %r2091;
	and.b32  	%r2092, %r718, 1431655765;
	shl.b32 	%r2093, %r718, 1;
	and.b32  	%r2094, %r2093, -1431655766;
	or.b32  	%r2095, %r2094, %r2092;
	st.local.u32 	[%rd138+296], %r2095;
	and.b32  	%r2096, %r719, -1431655766;
	shr.u32 	%r2097, %r2096, 1;
	or.b32  	%r2098, %r2097, %r2096;
	st.local.u32 	[%rd138+300], %r2098;
	and.b32  	%r2099, %r809, 1431655765;
	shl.b32 	%r2100, %r809, 1;
	and.b32  	%r2101, %r2100, -1431655766;
	or.b32  	%r2102, %r2101, %r2099;
	st.local.u32 	[%rd138+304], %r2102;
	and.b32  	%r2103, %r810, -1431655766;
	shr.u32 	%r2104, %r2103, 1;
	or.b32  	%r2105, %r2104, %r2103;
	st.local.u32 	[%rd138+308], %r2105;
	and.b32  	%r2106, %r812, 1431655765;
	shl.b32 	%r2107, %r812, 1;
	and.b32  	%r2108, %r2107, -1431655766;
	or.b32  	%r2109, %r2108, %r2106;
	st.local.u32 	[%rd138+312], %r2109;
	and.b32  	%r2110, %r813, -1431655766;
	shr.u32 	%r2111, %r2110, 1;
	or.b32  	%r2112, %r2111, %r2110;
	st.local.u32 	[%rd138+316], %r2112;
	and.b32  	%r2113, %r816, 1431655765;
	shl.b32 	%r2114, %r816, 1;
	and.b32  	%r2115, %r2114, -1431655766;
	or.b32  	%r2116, %r2115, %r2113;
	st.local.u32 	[%rd138+320], %r2116;
	and.b32  	%r2117, %r817, -1431655766;
	shr.u32 	%r2118, %r2117, 1;
	or.b32  	%r2119, %r2118, %r2117;
	st.local.u32 	[%rd138+324], %r2119;
	and.b32  	%r2120, %r820, 1431655765;
	shl.b32 	%r2121, %r820, 1;
	and.b32  	%r2122, %r2121, -1431655766;
	or.b32  	%r2123, %r2122, %r2120;
	st.local.u32 	[%rd138+328], %r2123;
	and.b32  	%r2124, %r821, -1431655766;
	shr.u32 	%r2125, %r2124, 1;
	or.b32  	%r2126, %r2125, %r2124;
	st.local.u32 	[%rd138+332], %r2126;
	and.b32  	%r2127, %r911, 1431655765;
	shl.b32 	%r2128, %r911, 1;
	and.b32  	%r2129, %r2128, -1431655766;
	or.b32  	%r2130, %r2129, %r2127;
	st.local.u32 	[%rd138+336], %r2130;
	and.b32  	%r2131, %r912, -1431655766;
	shr.u32 	%r2132, %r2131, 1;
	or.b32  	%r2133, %r2132, %r2131;
	st.local.u32 	[%rd138+340], %r2133;
	and.b32  	%r2134, %r914, 1431655765;
	shl.b32 	%r2135, %r914, 1;
	and.b32  	%r2136, %r2135, -1431655766;
	or.b32  	%r2137, %r2136, %r2134;
	st.local.u32 	[%rd138+344], %r2137;
	and.b32  	%r2138, %r915, -1431655766;
	shr.u32 	%r2139, %r2138, 1;
	or.b32  	%r2140, %r2139, %r2138;
	st.local.u32 	[%rd138+348], %r2140;
	and.b32  	%r2141, %r918, 1431655765;
	shl.b32 	%r2142, %r918, 1;
	and.b32  	%r2143, %r2142, -1431655766;
	or.b32  	%r2144, %r2143, %r2141;
	st.local.u32 	[%rd138+352], %r2144;
	and.b32  	%r2145, %r919, -1431655766;
	shr.u32 	%r2146, %r2145, 1;
	or.b32  	%r2147, %r2146, %r2145;
	st.local.u32 	[%rd138+356], %r2147;
	and.b32  	%r2148, %r922, 1431655765;
	shl.b32 	%r2149, %r922, 1;
	and.b32  	%r2150, %r2149, -1431655766;
	or.b32  	%r2151, %r2150, %r2148;
	st.local.u32 	[%rd138+360], %r2151;
	and.b32  	%r2152, %r923, -1431655766;
	shr.u32 	%r2153, %r2152, 1;
	or.b32  	%r2154, %r2153, %r2152;
	st.local.u32 	[%rd138+364], %r2154;
	and.b32  	%r2155, %r1013, 1431655765;
	shl.b32 	%r2156, %r1013, 1;
	and.b32  	%r2157, %r2156, -1431655766;
	or.b32  	%r2158, %r2157, %r2155;
	st.local.u32 	[%rd138+368], %r2158;
	and.b32  	%r2159, %r1014, -1431655766;
	shr.u32 	%r2160, %r2159, 1;
	or.b32  	%r2161, %r2160, %r2159;
	st.local.u32 	[%rd138+372], %r2161;
	and.b32  	%r2162, %r1016, 1431655765;
	shl.b32 	%r2163, %r1016, 1;
	and.b32  	%r2164, %r2163, -1431655766;
	or.b32  	%r2165, %r2164, %r2162;
	st.local.u32 	[%rd138+376], %r2165;
	and.b32  	%r2166, %r1017, -1431655766;
	shr.u32 	%r2167, %r2166, 1;
	or.b32  	%r2168, %r2167, %r2166;
	st.local.u32 	[%rd138+380], %r2168;
	and.b32  	%r2169, %r1020, 1431655765;
	shl.b32 	%r2170, %r1020, 1;
	and.b32  	%r2171, %r2170, -1431655766;
	or.b32  	%r2172, %r2171, %r2169;
	st.local.u32 	[%rd138+384], %r2172;
	and.b32  	%r2173, %r1021, -1431655766;
	shr.u32 	%r2174, %r2173, 1;
	or.b32  	%r2175, %r2174, %r2173;
	st.local.u32 	[%rd138+388], %r2175;
	and.b32  	%r2176, %r1024, 1431655765;
	shl.b32 	%r2177, %r1024, 1;
	and.b32  	%r2178, %r2177, -1431655766;
	or.b32  	%r2179, %r2178, %r2176;
	st.local.u32 	[%rd138+392], %r2179;
	and.b32  	%r2180, %r1025, -1431655766;
	shr.u32 	%r2181, %r2180, 1;
	or.b32  	%r2182, %r2181, %r2180;
	st.local.u32 	[%rd138+396], %r2182;
	and.b32  	%r2183, %r1115, 1431655765;
	shl.b32 	%r2184, %r1115, 1;
	and.b32  	%r2185, %r2184, -1431655766;
	or.b32  	%r2186, %r2185, %r2183;
	st.local.u32 	[%rd138+400], %r2186;
	and.b32  	%r2187, %r1116, -1431655766;
	shr.u32 	%r2188, %r2187, 1;
	or.b32  	%r2189, %r2188, %r2187;
	st.local.u32 	[%rd138+404], %r2189;
	and.b32  	%r2190, %r1118, 1431655765;
	shl.b32 	%r2191, %r1118, 1;
	and.b32  	%r2192, %r2191, -1431655766;
	or.b32  	%r2193, %r2192, %r2190;
	st.local.u32 	[%rd138+408], %r2193;
	and.b32  	%r2194, %r1119, -1431655766;
	shr.u32 	%r2195, %r2194, 1;
	or.b32  	%r2196, %r2195, %r2194;
	st.local.u32 	[%rd138+412], %r2196;
	and.b32  	%r2197, %r1122, 1431655765;
	shl.b32 	%r2198, %r1122, 1;
	and.b32  	%r2199, %r2198, -1431655766;
	or.b32  	%r2200, %r2199, %r2197;
	st.local.u32 	[%rd138+416], %r2200;
	and.b32  	%r2201, %r1123, -1431655766;
	shr.u32 	%r2202, %r2201, 1;
	or.b32  	%r2203, %r2202, %r2201;
	st.local.u32 	[%rd138+420], %r2203;
	and.b32  	%r2204, %r1126, 1431655765;
	shl.b32 	%r2205, %r1126, 1;
	and.b32  	%r2206, %r2205, -1431655766;
	or.b32  	%r2207, %r2206, %r2204;
	st.local.u32 	[%rd138+424], %r2207;
	and.b32  	%r2208, %r1127, -1431655766;
	shr.u32 	%r2209, %r2208, 1;
	or.b32  	%r2210, %r2209, %r2208;
	st.local.u32 	[%rd138+428], %r2210;
	and.b32  	%r2211, %r1217, 1431655765;
	shl.b32 	%r2212, %r1217, 1;
	and.b32  	%r2213, %r2212, -1431655766;
	or.b32  	%r2214, %r2213, %r2211;
	st.local.u32 	[%rd138+432], %r2214;
	and.b32  	%r2215, %r1218, -1431655766;
	shr.u32 	%r2216, %r2215, 1;
	or.b32  	%r2217, %r2216, %r2215;
	st.local.u32 	[%rd138+436], %r2217;
	and.b32  	%r2218, %r1220, 1431655765;
	shl.b32 	%r2219, %r1220, 1;
	and.b32  	%r2220, %r2219, -1431655766;
	or.b32  	%r2221, %r2220, %r2218;
	st.local.u32 	[%rd138+440], %r2221;
	and.b32  	%r2222, %r1221, -1431655766;
	shr.u32 	%r2223, %r2222, 1;
	or.b32  	%r2224, %r2223, %r2222;
	st.local.u32 	[%rd138+444], %r2224;
	and.b32  	%r2225, %r1224, 1431655765;
	shl.b32 	%r2226, %r1224, 1;
	and.b32  	%r2227, %r2226, -1431655766;
	or.b32  	%r2228, %r2227, %r2225;
	st.local.u32 	[%rd138+448], %r2228;
	and.b32  	%r2229, %r1225, -1431655766;
	shr.u32 	%r2230, %r2229, 1;
	or.b32  	%r2231, %r2230, %r2229;
	st.local.u32 	[%rd138+452], %r2231;
	and.b32  	%r2232, %r1228, 1431655765;
	shl.b32 	%r2233, %r1228, 1;
	and.b32  	%r2234, %r2233, -1431655766;
	or.b32  	%r2235, %r2234, %r2232;
	st.local.u32 	[%rd138+456], %r2235;
	and.b32  	%r2236, %r1229, -1431655766;
	shr.u32 	%r2237, %r2236, 1;
	or.b32  	%r2238, %r2237, %r2236;
	st.local.u32 	[%rd138+460], %r2238;
	and.b32  	%r2239, %r1319, 1431655765;
	shl.b32 	%r2240, %r1319, 1;
	and.b32  	%r2241, %r2240, -1431655766;
	or.b32  	%r2242, %r2241, %r2239;
	st.local.u32 	[%rd138+464], %r2242;
	and.b32  	%r2243, %r1320, -1431655766;
	shr.u32 	%r2244, %r2243, 1;
	or.b32  	%r2245, %r2244, %r2243;
	st.local.u32 	[%rd138+468], %r2245;
	and.b32  	%r2246, %r1322, 1431655765;
	shl.b32 	%r2247, %r1322, 1;
	and.b32  	%r2248, %r2247, -1431655766;
	or.b32  	%r2249, %r2248, %r2246;
	st.local.u32 	[%rd138+472], %r2249;
	and.b32  	%r2250, %r1323, -1431655766;
	shr.u32 	%r2251, %r2250, 1;
	or.b32  	%r2252, %r2251, %r2250;
	st.local.u32 	[%rd138+476], %r2252;
	and.b32  	%r2253, %r1326, 1431655765;
	shl.b32 	%r2254, %r1326, 1;
	and.b32  	%r2255, %r2254, -1431655766;
	or.b32  	%r2256, %r2255, %r2253;
	st.local.u32 	[%rd138+480], %r2256;
	and.b32  	%r2257, %r1327, -1431655766;
	shr.u32 	%r2258, %r2257, 1;
	or.b32  	%r2259, %r2258, %r2257;
	st.local.u32 	[%rd138+484], %r2259;
	and.b32  	%r2260, %r1330, 1431655765;
	shl.b32 	%r2261, %r1330, 1;
	and.b32  	%r2262, %r2261, -1431655766;
	or.b32  	%r2263, %r2262, %r2260;
	st.local.u32 	[%rd138+488], %r2263;
	and.b32  	%r2264, %r1331, -1431655766;
	shr.u32 	%r2265, %r2264, 1;
	or.b32  	%r2266, %r2265, %r2264;
	st.local.u32 	[%rd138+492], %r2266;
	and.b32  	%r2267, %r1421, 1431655765;
	shl.b32 	%r2268, %r1421, 1;
	and.b32  	%r2269, %r2268, -1431655766;
	or.b32  	%r2270, %r2269, %r2267;
	st.local.u32 	[%rd138+496], %r2270;
	and.b32  	%r2271, %r1422, -1431655766;
	shr.u32 	%r2272, %r2271, 1;
	or.b32  	%r2273, %r2272, %r2271;
	st.local.u32 	[%rd138+500], %r2273;
	and.b32  	%r2274, %r1424, 1431655765;
	shl.b32 	%r2275, %r1424, 1;
	and.b32  	%r2276, %r2275, -1431655766;
	or.b32  	%r2277, %r2276, %r2274;
	st.local.u32 	[%rd138+504], %r2277;
	and.b32  	%r2278, %r1425, -1431655766;
	shr.u32 	%r2279, %r2278, 1;
	or.b32  	%r2280, %r2279, %r2278;
	st.local.u32 	[%rd138+508], %r2280;
	and.b32  	%r2281, %r1428, 1431655765;
	shl.b32 	%r2282, %r1428, 1;
	and.b32  	%r2283, %r2282, -1431655766;
	or.b32  	%r2284, %r2283, %r2281;
	st.local.u32 	[%rd138+512], %r2284;
	and.b32  	%r2285, %r1429, -1431655766;
	shr.u32 	%r2286, %r2285, 1;
	or.b32  	%r2287, %r2286, %r2285;
	st.local.u32 	[%rd138+516], %r2287;
	and.b32  	%r2288, %r1432, 1431655765;
	shl.b32 	%r2289, %r1432, 1;
	and.b32  	%r2290, %r2289, -1431655766;
	or.b32  	%r2291, %r2290, %r2288;
	st.local.u32 	[%rd138+520], %r2291;
	and.b32  	%r2292, %r1433, -1431655766;
	shr.u32 	%r2293, %r2292, 1;
	or.b32  	%r2294, %r2293, %r2292;
	st.local.u32 	[%rd138+524], %r2294;
	and.b32  	%r2295, %r1523, 1431655765;
	shl.b32 	%r2296, %r1523, 1;
	and.b32  	%r2297, %r2296, -1431655766;
	or.b32  	%r2298, %r2297, %r2295;
	st.local.u32 	[%rd138+528], %r2298;
	and.b32  	%r2299, %r1524, -1431655766;
	shr.u32 	%r2300, %r2299, 1;
	or.b32  	%r2301, %r2300, %r2299;
	st.local.u32 	[%rd138+532], %r2301;
	and.b32  	%r2302, %r1526, 1431655765;
	shl.b32 	%r2303, %r1526, 1;
	and.b32  	%r2304, %r2303, -1431655766;
	or.b32  	%r2305, %r2304, %r2302;
	st.local.u32 	[%rd138+536], %r2305;
	and.b32  	%r2306, %r1527, -1431655766;
	shr.u32 	%r2307, %r2306, 1;
	or.b32  	%r2308, %r2307, %r2306;
	st.local.u32 	[%rd138+540], %r2308;
	and.b32  	%r2309, %r1530, 1431655765;
	shl.b32 	%r2310, %r1530, 1;
	and.b32  	%r2311, %r2310, -1431655766;
	or.b32  	%r2312, %r2311, %r2309;
	st.local.u32 	[%rd138+544], %r2312;
	and.b32  	%r2313, %r1531, -1431655766;
	shr.u32 	%r2314, %r2313, 1;
	or.b32  	%r2315, %r2314, %r2313;
	st.local.u32 	[%rd138+548], %r2315;
	and.b32  	%r2316, %r1534, 1431655765;
	shl.b32 	%r2317, %r1534, 1;
	and.b32  	%r2318, %r2317, -1431655766;
	or.b32  	%r2319, %r2318, %r2316;
	st.local.u32 	[%rd138+552], %r2319;
	and.b32  	%r2320, %r1535, -1431655766;
	shr.u32 	%r2321, %r2320, 1;
	or.b32  	%r2322, %r2321, %r2320;
	st.local.u32 	[%rd138+556], %r2322;
	and.b32  	%r2323, %r1625, 1431655765;
	shl.b32 	%r2324, %r1625, 1;
	and.b32  	%r2325, %r2324, -1431655766;
	or.b32  	%r2326, %r2325, %r2323;
	st.local.u32 	[%rd138+560], %r2326;
	and.b32  	%r2327, %r1626, -1431655766;
	shr.u32 	%r2328, %r2327, 1;
	or.b32  	%r2329, %r2328, %r2327;
	st.local.u32 	[%rd138+564], %r2329;
	and.b32  	%r2330, %r1628, 1431655765;
	shl.b32 	%r2331, %r1628, 1;
	and.b32  	%r2332, %r2331, -1431655766;
	or.b32  	%r2333, %r2332, %r2330;
	st.local.u32 	[%rd138+568], %r2333;
	and.b32  	%r2334, %r1629, -1431655766;
	shr.u32 	%r2335, %r2334, 1;
	or.b32  	%r2336, %r2335, %r2334;
	st.local.u32 	[%rd138+572], %r2336;
	and.b32  	%r2337, %r1632, 1431655765;
	shl.b32 	%r2338, %r1632, 1;
	and.b32  	%r2339, %r2338, -1431655766;
	or.b32  	%r2340, %r2339, %r2337;
	st.local.u32 	[%rd138+576], %r2340;
	and.b32  	%r2341, %r1633, -1431655766;
	shr.u32 	%r2342, %r2341, 1;
	or.b32  	%r2343, %r2342, %r2341;
	st.local.u32 	[%rd138+580], %r2343;
	and.b32  	%r2344, %r1636, 1431655765;
	shl.b32 	%r2345, %r1636, 1;
	and.b32  	%r2346, %r2345, -1431655766;
	or.b32  	%r2347, %r2346, %r2344;
	st.local.u32 	[%rd138+584], %r2347;
	and.b32  	%r2348, %r1637, -1431655766;
	shr.u32 	%r2349, %r2348, 1;
	or.b32  	%r2350, %r2349, %r2348;
	st.local.u32 	[%rd138+588], %r2350;
	and.b32  	%r2351, %r1727, 1431655765;
	shl.b32 	%r2352, %r1727, 1;
	and.b32  	%r2353, %r2352, -1431655766;
	or.b32  	%r2354, %r2353, %r2351;
	st.local.u32 	[%rd138+592], %r2354;
	and.b32  	%r2355, %r1728, -1431655766;
	shr.u32 	%r2356, %r2355, 1;
	or.b32  	%r2357, %r2356, %r2355;
	st.local.u32 	[%rd138+596], %r2357;
	and.b32  	%r2358, %r1730, 1431655765;
	shl.b32 	%r2359, %r1730, 1;
	and.b32  	%r2360, %r2359, -1431655766;
	or.b32  	%r2361, %r2360, %r2358;
	st.local.u32 	[%rd138+600], %r2361;
	and.b32  	%r2362, %r1731, -1431655766;
	shr.u32 	%r2363, %r2362, 1;
	or.b32  	%r2364, %r2363, %r2362;
	st.local.u32 	[%rd138+604], %r2364;
	and.b32  	%r2365, %r1734, 1431655765;
	shl.b32 	%r2366, %r1734, 1;
	and.b32  	%r2367, %r2366, -1431655766;
	or.b32  	%r2368, %r2367, %r2365;
	st.local.u32 	[%rd138+608], %r2368;
	and.b32  	%r2369, %r1735, -1431655766;
	shr.u32 	%r2370, %r2369, 1;
	or.b32  	%r2371, %r2370, %r2369;
	st.local.u32 	[%rd138+612], %r2371;
	and.b32  	%r2372, %r1738, 1431655765;
	shl.b32 	%r2373, %r1738, 1;
	and.b32  	%r2374, %r2373, -1431655766;
	or.b32  	%r2375, %r2374, %r2372;
	st.local.u32 	[%rd138+616], %r2375;
	and.b32  	%r2376, %r1739, -1431655766;
	shr.u32 	%r2377, %r2376, 1;
	or.b32  	%r2378, %r2377, %r2376;
	st.local.u32 	[%rd138+620], %r2378;
	and.b32  	%r2379, %r1829, 1431655765;
	shl.b32 	%r2380, %r1829, 1;
	and.b32  	%r2381, %r2380, -1431655766;
	or.b32  	%r2382, %r2381, %r2379;
	st.local.u32 	[%rd138+624], %r2382;
	and.b32  	%r2383, %r1830, -1431655766;
	shr.u32 	%r2384, %r2383, 1;
	or.b32  	%r2385, %r2384, %r2383;
	st.local.u32 	[%rd138+628], %r2385;
	and.b32  	%r2386, %r1832, 1431655765;
	shl.b32 	%r2387, %r1832, 1;
	and.b32  	%r2388, %r2387, -1431655766;
	or.b32  	%r2389, %r2388, %r2386;
	st.local.u32 	[%rd138+632], %r2389;
	and.b32  	%r2390, %r1833, -1431655766;
	shr.u32 	%r2391, %r2390, 1;
	or.b32  	%r2392, %r2391, %r2390;
	st.local.u32 	[%rd138+636], %r2392;
	and.b32  	%r2393, %r1836, 1431655765;
	shl.b32 	%r2394, %r1836, 1;
	and.b32  	%r2395, %r2394, -1431655766;
	or.b32  	%r2396, %r2395, %r2393;
	st.local.u32 	[%rd138+640], %r2396;
	and.b32  	%r2397, %r1837, -1431655766;
	shr.u32 	%r2398, %r2397, 1;
	or.b32  	%r2399, %r2398, %r2397;
	st.local.u32 	[%rd138+644], %r2399;
	and.b32  	%r2400, %r1840, 1431655765;
	shl.b32 	%r2401, %r1840, 1;
	and.b32  	%r2402, %r2401, -1431655766;
	or.b32  	%r2403, %r2402, %r2400;
	st.local.u32 	[%rd138+648], %r2403;
	and.b32  	%r2404, %r1841, -1431655766;
	shr.u32 	%r2405, %r2404, 1;
	or.b32  	%r2406, %r2405, %r2404;
	st.local.u32 	[%rd138+652], %r2406;
	and.b32  	%r2407, %r1931, 1431655765;
	shl.b32 	%r2408, %r1931, 1;
	and.b32  	%r2409, %r2408, -1431655766;
	or.b32  	%r2410, %r2409, %r2407;
	st.local.u32 	[%rd138+656], %r2410;
	and.b32  	%r2411, %r1932, -1431655766;
	shr.u32 	%r2412, %r2411, 1;
	or.b32  	%r2413, %r2412, %r2411;
	st.local.u32 	[%rd138+660], %r2413;
	and.b32  	%r2414, %r1934, 1431655765;
	shl.b32 	%r2415, %r1934, 1;
	and.b32  	%r2416, %r2415, -1431655766;
	or.b32  	%r2417, %r2416, %r2414;
	st.local.u32 	[%rd138+664], %r2417;
	and.b32  	%r2418, %r1935, -1431655766;
	shr.u32 	%r2419, %r2418, 1;
	or.b32  	%r2420, %r2419, %r2418;
	st.local.u32 	[%rd138+668], %r2420;
	and.b32  	%r2421, %r1938, 1431655765;
	shl.b32 	%r2422, %r1938, 1;
	and.b32  	%r2423, %r2422, -1431655766;
	or.b32  	%r2424, %r2423, %r2421;
	st.local.u32 	[%rd138+672], %r2424;
	and.b32  	%r2425, %r1939, -1431655766;
	shr.u32 	%r2426, %r2425, 1;
	or.b32  	%r2427, %r2426, %r2425;
	st.local.u32 	[%rd138+676], %r2427;
	and.b32  	%r2428, %r1942, 1431655765;
	shl.b32 	%r2429, %r1942, 1;
	and.b32  	%r2430, %r2429, -1431655766;
	or.b32  	%r2431, %r2430, %r2428;
	st.local.u32 	[%rd138+680], %r2431;
	and.b32  	%r2432, %r1943, -1431655766;
	shr.u32 	%r2433, %r2432, 1;
	or.b32  	%r2434, %r2433, %r2432;
	st.local.u32 	[%rd138+684], %r2434;
	and.b32  	%r2435, %r2033, 1431655765;
	shl.b32 	%r2436, %r2033, 1;
	and.b32  	%r2437, %r2436, -1431655766;
	or.b32  	%r2438, %r2437, %r2435;
	st.local.u32 	[%rd138+688], %r2438;
	and.b32  	%r2439, %r2034, -1431655766;
	shr.u32 	%r2440, %r2439, 1;
	or.b32  	%r2441, %r2440, %r2439;
	st.local.u32 	[%rd138+692], %r2441;
	and.b32  	%r2442, %r2036, 1431655765;
	shl.b32 	%r2443, %r2036, 1;
	and.b32  	%r2444, %r2443, -1431655766;
	or.b32  	%r2445, %r2444, %r2442;
	st.local.u32 	[%rd138+696], %r2445;
	and.b32  	%r2446, %r2037, -1431655766;
	shr.u32 	%r2447, %r2446, 1;
	or.b32  	%r2448, %r2447, %r2446;
	st.local.u32 	[%rd138+700], %r2448;
	and.b32  	%r2449, %r2040, 1431655765;
	shl.b32 	%r2450, %r2040, 1;
	and.b32  	%r2451, %r2450, -1431655766;
	or.b32  	%r2452, %r2451, %r2449;
	st.local.u32 	[%rd138+704], %r2452;
	and.b32  	%r2453, %r2041, -1431655766;
	shr.u32 	%r2454, %r2453, 1;
	or.b32  	%r2455, %r2454, %r2453;
	st.local.u32 	[%rd138+708], %r2455;
	and.b32  	%r2456, %r2044, 1431655765;
	shl.b32 	%r2457, %r2044, 1;
	and.b32  	%r2458, %r2457, -1431655766;
	or.b32  	%r2459, %r2458, %r2456;
	st.local.u32 	[%rd138+712], %r2459;
	and.b32  	%r2460, %r2045, -1431655766;
	shr.u32 	%r2461, %r2460, 1;
	or.b32  	%r2462, %r2461, %r2460;
	st.local.u32 	[%rd138+716], %r2462;
	ld.global.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd4+16];
	shr.u16 	%rs6, %rs1, 8;
	shr.u16 	%rs8, %rs2, 8;
	shr.u16 	%rs10, %rs3, 8;
	shr.u16 	%rs12, %rs4, 8;
	ld.global.v4.u16 	{%rs13, %rs14, %rs15, %rs16}, [%rd4+24];
	shr.u16 	%rs18, %rs13, 8;
	shr.u16 	%rs20, %rs14, 8;
	shr.u16 	%rs22, %rs15, 8;
	shr.u16 	%rs24, %rs16, 8;
	cvt.u32.u16 	%r2463, %rs1;
	and.b32  	%r2464, %r2463, 255;
	cvt.u32.u16 	%r2465, %rs6;
	prmt.b32 	%r2466, %r2465, %r2464, 30212;
	cvt.u32.u16 	%r2467, %rs2;
	prmt.b32 	%r2468, %r2467, %r2466, 28756;
	cvt.u32.u16 	%r2469, %rs8;
	prmt.b32 	%r2470, %r2469, %r2468, 1620;
	cvt.u32.u16 	%r2471, %rs3;
	and.b32  	%r2472, %r2471, 255;
	cvt.u32.u16 	%r2473, %rs10;
	prmt.b32 	%r2474, %r2473, %r2472, 30212;
	cvt.u32.u16 	%r2475, %rs4;
	prmt.b32 	%r2476, %r2475, %r2474, 28756;
	cvt.u32.u16 	%r2477, %rs12;
	prmt.b32 	%r2478, %r2477, %r2476, 1620;
	cvt.u32.u16 	%r2479, %rs13;
	and.b32  	%r2480, %r2479, 255;
	cvt.u32.u16 	%r2481, %rs18;
	prmt.b32 	%r2482, %r2481, %r2480, 30212;
	cvt.u32.u16 	%r2483, %rs14;
	prmt.b32 	%r2484, %r2483, %r2482, 28756;
	cvt.u32.u16 	%r2485, %rs20;
	prmt.b32 	%r2486, %r2485, %r2484, 1620;
	cvt.u32.u16 	%r2487, %rs15;
	and.b32  	%r2488, %r2487, 255;
	cvt.u32.u16 	%r2489, %rs22;
	prmt.b32 	%r2490, %r2489, %r2488, 30212;
	cvt.u32.u16 	%r2491, %rs16;
	prmt.b32 	%r2492, %r2491, %r2490, 28756;
	cvt.u32.u16 	%r2493, %rs24;
	prmt.b32 	%r2494, %r2493, %r2492, 1620;
	and.b32  	%r2495, %r2470, -1431655766;
	shr.u32 	%r2496, %r2495, 3;
	shr.u32 	%r2497, %r2495, 1;
	and.b32  	%r2498, %r2478, -2004318072;
	and.b32  	%r2499, %r2486, -1431655766;
	shr.u32 	%r2500, %r2499, 3;
	shr.u32 	%r2501, %r2499, 1;
	and.b32  	%r2502, %r2494, -2004318072;
	and.b32  	%r2503, %r2470, 286331153;
	shl.b32 	%r2504, %r2478, 2;
	and.b32  	%r2505, %r2504, 1145324612;
	or.b32  	%r2506, %r2505, %r2503;
	and.b32  	%r2507, %r2470, 1145324612;
	shr.u32 	%r2508, %r2507, 2;
	and.b32  	%r2509, %r2478, 1145324612;
	or.b32  	%r2510, %r2508, %r2509;
	and.b32  	%r2511, %r2497, 286331153;
	shl.b32 	%r2512, %r2478, 1;
	and.b32  	%r2513, %r2512, 1145324612;
	or.b32  	%r2514, %r2513, %r2511;
	and.b32  	%r2515, %r2496, 286331153;
	shr.u32 	%r2516, %r2498, 1;
	or.b32  	%r2517, %r2515, %r2516;
	and.b32  	%r2518, %r2486, 286331153;
	shl.b32 	%r2519, %r2494, 2;
	and.b32  	%r2520, %r2519, 1145324612;
	or.b32  	%r2521, %r2520, %r2518;
	and.b32  	%r2522, %r2486, 1145324612;
	shr.u32 	%r2523, %r2522, 2;
	and.b32  	%r2524, %r2494, 1145324612;
	or.b32  	%r2525, %r2523, %r2524;
	and.b32  	%r2526, %r2501, 286331153;
	shl.b32 	%r2527, %r2494, 1;
	and.b32  	%r2528, %r2527, 1145324612;
	or.b32  	%r2529, %r2528, %r2526;
	and.b32  	%r2530, %r2500, 286331153;
	shr.u32 	%r2531, %r2502, 1;
	or.b32  	%r2532, %r2530, %r2531;
	and.b32  	%r2533, %r2506, 84215045;
	shl.b32 	%r2534, %r2521, 4;
	and.b32  	%r2535, %r2534, 1347440720;
	or.b32  	%r2536, %r2535, %r2533;
	and.b32  	%r2537, %r2506, 1347440720;
	shr.u32 	%r2538, %r2537, 4;
	and.b32  	%r2539, %r2521, 1347440720;
	or.b32  	%r2540, %r2538, %r2539;
	and.b32  	%r2541, %r2514, 84215045;
	shl.b32 	%r2542, %r2529, 4;
	and.b32  	%r2543, %r2542, 1347440720;
	or.b32  	%r2544, %r2543, %r2541;
	and.b32  	%r2545, %r2514, 1347440720;
	shr.u32 	%r2546, %r2545, 4;
	and.b32  	%r2547, %r2529, 1347440720;
	or.b32  	%r2548, %r2546, %r2547;
	and.b32  	%r2549, %r2510, 84215045;
	shl.b32 	%r2550, %r2525, 4;
	and.b32  	%r2551, %r2550, 1347440720;
	or.b32  	%r2552, %r2551, %r2549;
	and.b32  	%r2553, %r2510, 1347440720;
	shr.u32 	%r2554, %r2553, 4;
	and.b32  	%r2555, %r2525, 1347440720;
	or.b32  	%r2556, %r2554, %r2555;
	and.b32  	%r2557, %r2517, 84215045;
	shl.b32 	%r2558, %r2532, 4;
	and.b32  	%r2559, %r2558, 1347440720;
	or.b32  	%r2560, %r2559, %r2557;
	and.b32  	%r2561, %r2517, 1347440720;
	shr.u32 	%r2562, %r2561, 4;
	and.b32  	%r2563, %r2532, 1347440720;
	or.b32  	%r2564, %r2562, %r2563;
	xor.b32  	%r3352, %r2536, %r2438;
	xor.b32  	%r3351, %r2544, %r2441;
	xor.b32  	%r3350, %r2552, %r2445;
	xor.b32  	%r3349, %r2560, %r2448;
	xor.b32  	%r3353, %r2540, %r2452;
	xor.b32  	%r3354, %r2548, %r2455;
	xor.b32  	%r3355, %r2556, %r2459;
	xor.b32  	%r3356, %r2564, %r2462;

$L__BB7_7:
	shl.b32 	%r2565, %r3352, 2;
	and.b32  	%r2566, %r2565, 64512;
	and.b32  	%r2567, %r3352, 255;
	or.b32  	%r2568, %r2566, %r2567;
	and.b32  	%r2569, %r3352, 49152;
	shr.u32 	%r2570, %r2569, 6;
	or.b32  	%r2571, %r2568, %r2570;
	shl.b32 	%r2572, %r3352, 4;
	and.b32  	%r2573, %r2572, 15728640;
	or.b32  	%r2574, %r2571, %r2573;
	and.b32  	%r2575, %r3352, 15728640;
	shr.u32 	%r2576, %r2575, 4;
	or.b32  	%r2577, %r2574, %r2576;
	shl.b32 	%r2578, %r3352, 6;
	and.b32  	%r2579, %r2578, -1073741824;
	or.b32  	%r2580, %r2577, %r2579;
	and.b32  	%r2581, %r3352, -67108864;
	shr.u32 	%r2582, %r2581, 2;
	or.b32  	%r2583, %r2580, %r2582;
	shl.b32 	%r2584, %r3351, 2;
	and.b32  	%r2585, %r2584, 64512;
	and.b32  	%r2586, %r3351, 255;
	or.b32  	%r2587, %r2585, %r2586;
	and.b32  	%r2588, %r3351, 49152;
	shr.u32 	%r2589, %r2588, 6;
	or.b32  	%r2590, %r2587, %r2589;
	shl.b32 	%r2591, %r3351, 4;
	and.b32  	%r2592, %r2591, 15728640;
	or.b32  	%r2593, %r2590, %r2592;
	and.b32  	%r2594, %r3351, 15728640;
	shr.u32 	%r2595, %r2594, 4;
	or.b32  	%r2596, %r2593, %r2595;
	shl.b32 	%r2597, %r3351, 6;
	and.b32  	%r2598, %r2597, -1073741824;
	or.b32  	%r2599, %r2596, %r2598;
	and.b32  	%r2600, %r3351, -67108864;
	shr.u32 	%r2601, %r2600, 2;
	or.b32  	%r2602, %r2599, %r2601;
	shl.b32 	%r2603, %r3350, 2;
	and.b32  	%r2604, %r2603, 64512;
	and.b32  	%r2605, %r3350, 255;
	or.b32  	%r2606, %r2604, %r2605;
	and.b32  	%r2607, %r3350, 49152;
	shr.u32 	%r2608, %r2607, 6;
	or.b32  	%r2609, %r2606, %r2608;
	shl.b32 	%r2610, %r3350, 4;
	and.b32  	%r2611, %r2610, 15728640;
	or.b32  	%r2612, %r2609, %r2611;
	and.b32  	%r2613, %r3350, 15728640;
	shr.u32 	%r2614, %r2613, 4;
	or.b32  	%r2615, %r2612, %r2614;
	shl.b32 	%r2616, %r3350, 6;
	and.b32  	%r2617, %r2616, -1073741824;
	or.b32  	%r2618, %r2615, %r2617;
	and.b32  	%r2619, %r3350, -67108864;
	shr.u32 	%r2620, %r2619, 2;
	or.b32  	%r2621, %r2618, %r2620;
	shl.b32 	%r2622, %r3349, 2;
	and.b32  	%r2623, %r2622, 64512;
	and.b32  	%r2624, %r3349, 255;
	or.b32  	%r2625, %r2623, %r2624;
	and.b32  	%r2626, %r3349, 49152;
	shr.u32 	%r2627, %r2626, 6;
	or.b32  	%r2628, %r2625, %r2627;
	shl.b32 	%r2629, %r3349, 4;
	and.b32  	%r2630, %r2629, 15728640;
	or.b32  	%r2631, %r2628, %r2630;
	and.b32  	%r2632, %r3349, 15728640;
	shr.u32 	%r2633, %r2632, 4;
	or.b32  	%r2634, %r2631, %r2633;
	shl.b32 	%r2635, %r3349, 6;
	and.b32  	%r2636, %r2635, -1073741824;
	or.b32  	%r2637, %r2634, %r2636;
	and.b32  	%r2638, %r3349, -67108864;
	shr.u32 	%r2639, %r2638, 2;
	or.b32  	%r2640, %r2637, %r2639;
	shl.b32 	%r2641, %r3353, 2;
	and.b32  	%r2642, %r2641, 64512;
	and.b32  	%r2643, %r3353, 255;
	or.b32  	%r2644, %r2642, %r2643;
	and.b32  	%r2645, %r3353, 49152;
	shr.u32 	%r2646, %r2645, 6;
	or.b32  	%r2647, %r2644, %r2646;
	shl.b32 	%r2648, %r3353, 4;
	and.b32  	%r2649, %r2648, 15728640;
	or.b32  	%r2650, %r2647, %r2649;
	and.b32  	%r2651, %r3353, 15728640;
	shr.u32 	%r2652, %r2651, 4;
	or.b32  	%r2653, %r2650, %r2652;
	shl.b32 	%r2654, %r3353, 6;
	and.b32  	%r2655, %r2654, -1073741824;
	or.b32  	%r2656, %r2653, %r2655;
	and.b32  	%r2657, %r3353, -67108864;
	shr.u32 	%r2658, %r2657, 2;
	or.b32  	%r2659, %r2656, %r2658;
	shl.b32 	%r2660, %r3354, 2;
	and.b32  	%r2661, %r2660, 64512;
	and.b32  	%r2662, %r3354, 255;
	or.b32  	%r2663, %r2661, %r2662;
	and.b32  	%r2664, %r3354, 49152;
	shr.u32 	%r2665, %r2664, 6;
	or.b32  	%r2666, %r2663, %r2665;
	shl.b32 	%r2667, %r3354, 4;
	and.b32  	%r2668, %r2667, 15728640;
	or.b32  	%r2669, %r2666, %r2668;
	and.b32  	%r2670, %r3354, 15728640;
	shr.u32 	%r2671, %r2670, 4;
	or.b32  	%r2672, %r2669, %r2671;
	shl.b32 	%r2673, %r3354, 6;
	and.b32  	%r2674, %r2673, -1073741824;
	or.b32  	%r2675, %r2672, %r2674;
	and.b32  	%r2676, %r3354, -67108864;
	shr.u32 	%r2677, %r2676, 2;
	or.b32  	%r2678, %r2675, %r2677;
	shl.b32 	%r2679, %r3355, 2;
	and.b32  	%r2680, %r2679, 64512;
	and.b32  	%r2681, %r3355, 255;
	or.b32  	%r2682, %r2680, %r2681;
	and.b32  	%r2683, %r3355, 49152;
	shr.u32 	%r2684, %r2683, 6;
	or.b32  	%r2685, %r2682, %r2684;
	shl.b32 	%r2686, %r3355, 4;
	and.b32  	%r2687, %r2686, 15728640;
	or.b32  	%r2688, %r2685, %r2687;
	and.b32  	%r2689, %r3355, 15728640;
	shr.u32 	%r2690, %r2689, 4;
	or.b32  	%r2691, %r2688, %r2690;
	shl.b32 	%r2692, %r3355, 6;
	and.b32  	%r2693, %r2692, -1073741824;
	or.b32  	%r2694, %r2691, %r2693;
	and.b32  	%r2695, %r3355, -67108864;
	shr.u32 	%r2696, %r2695, 2;
	or.b32  	%r2697, %r2694, %r2696;
	shl.b32 	%r2698, %r3356, 2;
	and.b32  	%r2699, %r2698, 64512;
	and.b32  	%r2700, %r3356, 255;
	or.b32  	%r2701, %r2699, %r2700;
	and.b32  	%r2702, %r3356, 49152;
	shr.u32 	%r2703, %r2702, 6;
	or.b32  	%r2704, %r2701, %r2703;
	shl.b32 	%r2705, %r3356, 4;
	and.b32  	%r2706, %r2705, 15728640;
	or.b32  	%r2707, %r2704, %r2706;
	and.b32  	%r2708, %r3356, 15728640;
	shr.u32 	%r2709, %r2708, 4;
	or.b32  	%r2710, %r2707, %r2709;
	shl.b32 	%r2711, %r3356, 6;
	and.b32  	%r2712, %r2711, -1073741824;
	or.b32  	%r2713, %r2710, %r2712;
	and.b32  	%r2714, %r3356, -67108864;
	shr.u32 	%r2715, %r2714, 2;
	or.b32  	%r2716, %r2713, %r2715;
	xor.b32  	%r2717, %r2640, %r2583;
	xor.b32  	%r2718, %r2659, %r2602;
	not.b32 	%r2719, %r2678;
	not.b32 	%r2720, %r2697;
	not.b32 	%r2721, %r2718;
	xor.b32  	%r2722, %r2721, %r2720;
	not.b32 	%r2723, %r2717;
	xor.b32  	%r2724, %r2723, %r2719;
	xor.b32  	%r2725, %r2659, %r2621;
	xor.b32  	%r2726, %r2725, %r2716;
	xor.b32  	%r2727, %r2640, %r2602;
	xor.b32  	%r2728, %r2727, %r2697;
	xor.b32  	%r2729, %r2621, %r2583;
	xor.b32  	%r2730, %r2729, %r2678;
	xor.b32  	%r2731, %r2721, %r2716;
	xor.b32  	%r2732, %r2723, %r2720;
	xor.b32  	%r2733, %r2621, %r2719;
	xor.b32  	%r2734, %r2733, %r2716;
	xor.b32  	%r2735, %r2731, %r2728;
	xor.b32  	%r2736, %r2723, %r2721;
	xor.b32  	%r2737, %r2728, %r2722;
	xor.b32  	%r2738, %r2716, %r2720;
	xor.b32  	%r2739, %r2726, %r2724;
	xor.b32  	%r2740, %r2734, %r2739;
	xor.b32  	%r2741, %r2740, %r2728;
	xor.b32  	%r2742, %r2736, %r2735;
	xor.b32  	%r2743, %r2740, %r2722;
	xor.b32  	%r2744, %r2740, %r2732;
	xor.b32  	%r2745, %r2744, %r2738;
	xor.b32  	%r2746, %r2742, %r2730;
	xor.b32  	%r2747, %r2746, %r2731;
	xor.b32  	%r2748, %r2746, %r2724;
	xor.b32  	%r2749, %r2747, %r2734;
	xor.b32  	%r2750, %r2747, %r2739;
	xor.b32  	%r2751, %r2748, %r2737;
	xor.b32  	%r2752, %r2751, %r2734;
	xor.b32  	%r2753, %r2750, %r2751;
	xor.b32  	%r2754, %r2751, %r2739;
	and.b32  	%r2755, %r2747, %r2742;
	and.b32  	%r2756, %r2749, %r2745;
	and.b32  	%r2757, %r2741, %r2734;
	and.b32  	%r2758, %r2754, %r2736;
	and.b32  	%r2759, %r2744, %r2740;
	and.b32  	%r2760, %r2752, %r2743;
	and.b32  	%r2761, %r2751, %r2737;
	and.b32  	%r2762, %r2753, %r2735;
	xor.b32  	%r2763, %r2762, %r2761;
	and.b32  	%r2764, %r2750, %r2738;
	xor.b32  	%r2765, %r2764, %r2761;
	xor.b32  	%r2766, %r2755, %r2748;
	xor.b32  	%r2767, %r2766, %r2756;
	xor.b32  	%r2768, %r2767, %r2763;
	xor.b32  	%r2769, %r2757, %r2738;
	xor.b32  	%r2770, %r2769, %r2750;
	xor.b32  	%r2771, %r2770, %r2755;
	xor.b32  	%r2772, %r2771, %r2765;
	xor.b32  	%r2773, %r2759, %r2736;
	xor.b32  	%r2774, %r2773, %r2754;
	xor.b32  	%r2775, %r2774, %r2758;
	xor.b32  	%r2776, %r2775, %r2763;
	xor.b32  	%r2777, %r2754, %r2722;
	xor.b32  	%r2778, %r2777, %r2758;
	xor.b32  	%r2779, %r2778, %r2760;
	xor.b32  	%r2780, %r2779, %r2765;
	xor.b32  	%r2781, %r2768, %r2772;
	and.b32  	%r2782, %r2768, %r2776;
	xor.b32  	%r2783, %r2782, %r2780;
	and.b32  	%r2784, %r2783, %r2781;
	xor.b32  	%r2785, %r2784, %r2772;
	xor.b32  	%r2786, %r2776, %r2780;
	xor.b32  	%r2787, %r2782, %r2772;
	and.b32  	%r2788, %r2787, %r2786;
	xor.b32  	%r2789, %r2788, %r2780;
	xor.b32  	%r2790, %r2789, %r2776;
	xor.b32  	%r2791, %r2788, %r2782;
	and.b32  	%r2792, %r2791, %r2780;
	xor.b32  	%r2793, %r2790, %r2792;
	xor.b32  	%r2794, %r2792, %r2783;
	and.b32  	%r2795, %r2794, %r2785;
	xor.b32  	%r2796, %r2795, %r2781;
	xor.b32  	%r2797, %r2796, %r2793;
	xor.b32  	%r2798, %r2785, %r2789;
	xor.b32  	%r2799, %r2796, %r2785;
	xor.b32  	%r2800, %r2792, %r2776;
	xor.b32  	%r2801, %r2797, %r2798;
	and.b32  	%r2802, %r2800, %r2747;
	and.b32  	%r2803, %r2793, %r2749;
	and.b32  	%r2804, %r2789, %r2734;
	and.b32  	%r2805, %r2799, %r2754;
	and.b32  	%r2806, %r2796, %r2740;
	and.b32  	%r2807, %r2785, %r2752;
	and.b32  	%r2808, %r2798, %r2751;
	and.b32  	%r2809, %r2801, %r2753;
	and.b32  	%r2810, %r2797, %r2750;
	and.b32  	%r2811, %r2800, %r2742;
	and.b32  	%r2812, %r2793, %r2745;
	and.b32  	%r2813, %r2789, %r2741;
	and.b32  	%r2814, %r2799, %r2736;
	and.b32  	%r2815, %r2796, %r2744;
	and.b32  	%r2816, %r2785, %r2743;
	and.b32  	%r2817, %r2798, %r2737;
	and.b32  	%r2818, %r2801, %r2735;
	and.b32  	%r2819, %r2797, %r2738;
	xor.b32  	%r2820, %r2818, %r2817;
	xor.b32  	%r2821, %r2812, %r2813;
	xor.b32  	%r2822, %r2815, %r2807;
	xor.b32  	%r2823, %r2811, %r2812;
	xor.b32  	%r2824, %r2814, %r2804;
	xor.b32  	%r2825, %r2804, %r2807;
	xor.b32  	%r2826, %r2809, %r2810;
	xor.b32  	%r2827, %r2805, %r2802;
	xor.b32  	%r2828, %r2814, %r2822;
	xor.b32  	%r2829, %r2824, %r2827;
	xor.b32  	%r2830, %r2820, %r2806;
	xor.b32  	%r2831, %r2805, %r2808;
	xor.b32  	%r2832, %r2831, %r2809;
	xor.b32  	%r2833, %r2820, %r2829;
	xor.b32  	%r2834, %r2829, %r2816;
	xor.b32  	%r2835, %r2826, %r2830;
	xor.b32  	%r2836, %r2823, %r2830;
	xor.b32  	%r2837, %r2832, %r2806;
	xor.b32  	%r2838, %r2834, %r2835;
	xor.b32  	%r2839, %r2836, %r2803;
	xor.b32  	%r2840, %r2836, %r2832;
	xor.b32  	%r2841, %r2839, %r2827;
	xor.b32  	%r2842, %r2835, %r2828;
	xor.b32  	%r2843, %r2841, %r2837;
	xor.b32  	%r2844, %r2842, %r2843;
	xor.b32  	%r2845, %r2821, %r2838;
	xor.b32  	%r2846, %r2818, %r2819;
	xor.b32  	%r2847, %r2846, %r2837;
	xor.b32  	%r2848, %r2833, %r2822;
	xor.b32  	%r2849, %r2847, %r2838;
	xor.b32  	%r2850, %r2848, %r2849;
	xor.b32  	%r2851, %r2850, %r2845;
	xor.b32  	%r2852, %r2825, %r2839;
	xor.b32  	%r2853, %r2844, %r2852;
	xor.b32  	%r2854, %r2837, %r2842;
	xor.b32  	%r2855, %r2850, %r2852;
	xor.b32  	%r2856, %r2840, %r2841;
	xor.b32  	%r2857, %r2856, %r2845;
	xor.b32  	%r2858, %r2856, %r2842;
	xor.b32  	%r2859, %r2848, %r2843;
	xor.b32  	%r2860, %r2859, %r2852;
	xor.b32  	%r2861, %r2840, %r2849;
	xor.b32  	%r2862, %r2861, %r2845;
	ld.local.u32 	%r2863, [%rd138+656];
	xor.b32  	%r2864, %r2862, %r2863;
	ld.local.u32 	%r2865, [%rd138+660];
	xor.b32  	%r2866, %r2860, %r2865;
	ld.local.u32 	%r2867, [%rd138+664];
	xor.b32  	%r2868, %r2858, %r2867;
	ld.local.u32 	%r2869, [%rd138+668];
	xor.b32  	%r2870, %r2851, %r2869;
	ld.local.u32 	%r2871, [%rd138+672];
	xor.b32  	%r2872, %r2853, %r2871;
	ld.local.u32 	%r2873, [%rd138+676];
	xor.b32  	%r2874, %r2857, %r2873;
	ld.local.u32 	%r2875, [%rd138+680];
	xor.b32  	%r2876, %r2855, %r2875;
	ld.local.u32 	%r2877, [%rd138+684];
	xor.b32  	%r2878, %r2854, %r2877;
	shf.l.wrap.b32 	%r2879, %r2864, %r2864, 24;
	shf.l.wrap.b32 	%r2880, %r2866, %r2866, 24;
	shf.l.wrap.b32 	%r2881, %r2868, %r2868, 24;
	shf.l.wrap.b32 	%r2882, %r2870, %r2870, 24;
	shf.l.wrap.b32 	%r2883, %r2872, %r2872, 24;
	shf.l.wrap.b32 	%r2884, %r2874, %r2874, 24;
	shf.l.wrap.b32 	%r2885, %r2876, %r2876, 24;
	shf.l.wrap.b32 	%r2886, %r2878, %r2878, 24;
	xor.b32  	%r2887, %r2874, %r2864;
	xor.b32  	%r2888, %r2876, %r2879;
	xor.b32  	%r2889, %r2888, %r2887;
	xor.b32  	%r2890, %r2889, %r2884;
	shf.l.wrap.b32 	%r2891, %r2890, %r2890, 16;
	xor.b32  	%r2892, %r2874, %r2879;
	xor.b32  	%r2893, %r2892, %r2876;
	xor.b32  	%r2894, %r2893, %r2878;
	xor.b32  	%r2895, %r2894, %r2884;
	xor.b32  	%r2896, %r2895, %r2886;
	xor.b32  	%r3352, %r2896, %r2891;
	xor.b32  	%r2897, %r2880, %r2866;
	xor.b32  	%r2898, %r2897, %r2874;
	xor.b32  	%r2899, %r2898, %r2878;
	xor.b32  	%r2900, %r2899, %r2884;
	xor.b32  	%r2901, %r2900, %r2885;
	shf.l.wrap.b32 	%r2902, %r2901, %r2901, 16;
	xor.b32  	%r2903, %r2880, %r2879;
	xor.b32  	%r2904, %r2903, %r2887;
	xor.b32  	%r2905, %r2904, %r2884;
	xor.b32  	%r2906, %r2905, %r2885;
	xor.b32  	%r2907, %r2906, %r2886;
	xor.b32  	%r3351, %r2907, %r2902;
	xor.b32  	%r2908, %r2866, %r2864;
	xor.b32  	%r2909, %r2868, %r2864;
	xor.b32  	%r2910, %r2909, %r2881;
	xor.b32  	%r2911, %r2910, %r2876;
	xor.b32  	%r2912, %r2911, %r2885;
	xor.b32  	%r2913, %r2912, %r2886;
	shf.l.wrap.b32 	%r2914, %r2913, %r2913, 16;
	xor.b32  	%r2915, %r2880, %r2908;
	xor.b32  	%r2916, %r2915, %r2881;
	xor.b32  	%r2917, %r2916, %r2876;
	xor.b32  	%r2918, %r2917, %r2885;
	xor.b32  	%r2919, %r2918, %r2886;
	xor.b32  	%r3350, %r2919, %r2914;
	xor.b32  	%r2920, %r2908, %r2868;
	xor.b32  	%r2921, %r2879, %r2908;
	xor.b32  	%r2922, %r2921, %r2870;
	xor.b32  	%r2923, %r2922, %r2874;
	xor.b32  	%r2924, %r2923, %r2882;
	xor.b32  	%r2925, %r2924, %r2876;
	xor.b32  	%r2926, %r2925, %r2878;
	xor.b32  	%r2927, %r2926, %r2884;
	xor.b32  	%r2928, %r2927, %r2886;
	shf.l.wrap.b32 	%r2929, %r2928, %r2928, 16;
	xor.b32  	%r2930, %r2920, %r2879;
	xor.b32  	%r2931, %r2930, %r2881;
	xor.b32  	%r2932, %r2931, %r2874;
	xor.b32  	%r2933, %r2932, %r2882;
	xor.b32  	%r2934, %r2933, %r2876;
	xor.b32  	%r2935, %r2934, %r2884;
	xor.b32  	%r3349, %r2935, %r2929;
	xor.b32  	%r2936, %r2868, %r2866;
	xor.b32  	%r2937, %r2936, %r2870;
	xor.b32  	%r2938, %r2880, %r2936;
	xor.b32  	%r2939, %r2938, %r2872;
	xor.b32  	%r2940, %r2939, %r2874;
	xor.b32  	%r2941, %r2940, %r2883;
	xor.b32  	%r2942, %r2941, %r2878;
	xor.b32  	%r2943, %r2942, %r2884;
	xor.b32  	%r2944, %r2943, %r2885;
	shf.l.wrap.b32 	%r2945, %r2944, %r2944, 16;
	xor.b32  	%r2946, %r2937, %r2880;
	xor.b32  	%r2947, %r2946, %r2874;
	xor.b32  	%r2948, %r2947, %r2882;
	xor.b32  	%r2949, %r2948, %r2883;
	xor.b32  	%r2950, %r2949, %r2884;
	xor.b32  	%r2951, %r2950, %r2885;
	xor.b32  	%r2952, %r2951, %r2886;
	xor.b32  	%r3353, %r2952, %r2945;
	xor.b32  	%r2953, %r2870, %r2868;
	xor.b32  	%r2954, %r2953, %r2872;
	xor.b32  	%r2955, %r2881, %r2953;
	xor.b32  	%r2956, %r2955, %r2874;
	xor.b32  	%r2957, %r2956, %r2876;
	xor.b32  	%r2958, %r2957, %r2884;
	xor.b32  	%r2959, %r2958, %r2885;
	xor.b32  	%r2960, %r2959, %r2886;
	shf.l.wrap.b32 	%r2961, %r2960, %r2960, 16;
	xor.b32  	%r2962, %r2954, %r2881;
	xor.b32  	%r2963, %r2962, %r2876;
	xor.b32  	%r2964, %r2963, %r2883;
	xor.b32  	%r2965, %r2964, %r2884;
	xor.b32  	%r2966, %r2965, %r2885;
	xor.b32  	%r2967, %r2966, %r2886;
	xor.b32  	%r3354, %r2967, %r2961;
	xor.b32  	%r2968, %r2872, %r2870;
	xor.b32  	%r2969, %r2968, %r2874;
	xor.b32  	%r2970, %r2882, %r2968;
	xor.b32  	%r2971, %r2970, %r2876;
	xor.b32  	%r2972, %r2971, %r2878;
	xor.b32  	%r2973, %r2972, %r2885;
	xor.b32  	%r2974, %r2973, %r2886;
	shf.l.wrap.b32 	%r2975, %r2974, %r2974, 16;
	xor.b32  	%r2976, %r2969, %r2882;
	xor.b32  	%r2977, %r2976, %r2878;
	xor.b32  	%r2978, %r2977, %r2884;
	xor.b32  	%r2979, %r2978, %r2885;
	xor.b32  	%r2980, %r2979, %r2886;
	xor.b32  	%r3355, %r2980, %r2975;
	xor.b32  	%r2981, %r2874, %r2872;
	xor.b32  	%r2982, %r2981, %r2876;
	xor.b32  	%r2983, %r2982, %r2883;
	xor.b32  	%r2984, %r2983, %r2885;
	xor.b32  	%r2985, %r2984, %r2886;
	xor.b32  	%r2986, %r2883, %r2981;
	xor.b32  	%r2987, %r2986, %r2878;
	xor.b32  	%r2988, %r2987, %r2886;
	shf.l.wrap.b32 	%r2989, %r2988, %r2988, 16;
	xor.b32  	%r3356, %r2985, %r2989;
	add.s64 	%rd138, %rd138, -32;
	add.s32 	%r3348, %r3348, -1;
	setp.ne.s32 	%p5, %r3348, -13;
	@%p5 bra 	$L__BB7_7;

	and.b32  	%r2990, %r3352, 255;
	shl.b32 	%r2991, %r3352, 2;
	and.b32  	%r2992, %r2991, 64512;
	or.b32  	%r2993, %r2992, %r2990;
	and.b32  	%r2994, %r3352, 49152;
	shr.u32 	%r2995, %r2994, 6;
	or.b32  	%r2996, %r2993, %r2995;
	shl.b32 	%r2997, %r3352, 4;
	and.b32  	%r2998, %r2997, 15728640;
	or.b32  	%r2999, %r2996, %r2998;
	and.b32  	%r3000, %r3352, 15728640;
	shr.u32 	%r3001, %r3000, 4;
	or.b32  	%r3002, %r2999, %r3001;
	shl.b32 	%r3003, %r3352, 6;
	and.b32  	%r3004, %r3003, -1073741824;
	or.b32  	%r3005, %r3002, %r3004;
	and.b32  	%r3006, %r3352, -67108864;
	shr.u32 	%r3007, %r3006, 2;
	or.b32  	%r3008, %r3005, %r3007;
	shl.b32 	%r3009, %r3351, 2;
	and.b32  	%r3010, %r3009, 64512;
	and.b32  	%r3011, %r3351, 255;
	or.b32  	%r3012, %r3010, %r3011;
	and.b32  	%r3013, %r3351, 49152;
	shr.u32 	%r3014, %r3013, 6;
	or.b32  	%r3015, %r3012, %r3014;
	shl.b32 	%r3016, %r3351, 4;
	and.b32  	%r3017, %r3016, 15728640;
	or.b32  	%r3018, %r3015, %r3017;
	and.b32  	%r3019, %r3351, 15728640;
	shr.u32 	%r3020, %r3019, 4;
	or.b32  	%r3021, %r3018, %r3020;
	shl.b32 	%r3022, %r3351, 6;
	and.b32  	%r3023, %r3022, -1073741824;
	or.b32  	%r3024, %r3021, %r3023;
	and.b32  	%r3025, %r3351, -67108864;
	shr.u32 	%r3026, %r3025, 2;
	or.b32  	%r3027, %r3024, %r3026;
	shl.b32 	%r3028, %r3350, 2;
	and.b32  	%r3029, %r3028, 64512;
	and.b32  	%r3030, %r3350, 255;
	or.b32  	%r3031, %r3029, %r3030;
	and.b32  	%r3032, %r3350, 49152;
	shr.u32 	%r3033, %r3032, 6;
	or.b32  	%r3034, %r3031, %r3033;
	shl.b32 	%r3035, %r3350, 4;
	and.b32  	%r3036, %r3035, 15728640;
	or.b32  	%r3037, %r3034, %r3036;
	and.b32  	%r3038, %r3350, 15728640;
	shr.u32 	%r3039, %r3038, 4;
	or.b32  	%r3040, %r3037, %r3039;
	shl.b32 	%r3041, %r3350, 6;
	and.b32  	%r3042, %r3041, -1073741824;
	or.b32  	%r3043, %r3040, %r3042;
	and.b32  	%r3044, %r3350, -67108864;
	shr.u32 	%r3045, %r3044, 2;
	or.b32  	%r3046, %r3043, %r3045;
	shl.b32 	%r3047, %r3349, 2;
	and.b32  	%r3048, %r3047, 64512;
	and.b32  	%r3049, %r3349, 255;
	or.b32  	%r3050, %r3048, %r3049;
	and.b32  	%r3051, %r3349, 49152;
	shr.u32 	%r3052, %r3051, 6;
	or.b32  	%r3053, %r3050, %r3052;
	shl.b32 	%r3054, %r3349, 4;
	and.b32  	%r3055, %r3054, 15728640;
	or.b32  	%r3056, %r3053, %r3055;
	and.b32  	%r3057, %r3349, 15728640;
	shr.u32 	%r3058, %r3057, 4;
	or.b32  	%r3059, %r3056, %r3058;
	shl.b32 	%r3060, %r3349, 6;
	and.b32  	%r3061, %r3060, -1073741824;
	or.b32  	%r3062, %r3059, %r3061;
	and.b32  	%r3063, %r3349, -67108864;
	shr.u32 	%r3064, %r3063, 2;
	or.b32  	%r3065, %r3062, %r3064;
	shl.b32 	%r3066, %r3353, 2;
	and.b32  	%r3067, %r3066, 64512;
	and.b32  	%r3068, %r3353, 255;
	or.b32  	%r3069, %r3067, %r3068;
	and.b32  	%r3070, %r3353, 49152;
	shr.u32 	%r3071, %r3070, 6;
	or.b32  	%r3072, %r3069, %r3071;
	shl.b32 	%r3073, %r3353, 4;
	and.b32  	%r3074, %r3073, 15728640;
	or.b32  	%r3075, %r3072, %r3074;
	and.b32  	%r3076, %r3353, 15728640;
	shr.u32 	%r3077, %r3076, 4;
	or.b32  	%r3078, %r3075, %r3077;
	shl.b32 	%r3079, %r3353, 6;
	and.b32  	%r3080, %r3079, -1073741824;
	or.b32  	%r3081, %r3078, %r3080;
	and.b32  	%r3082, %r3353, -67108864;
	shr.u32 	%r3083, %r3082, 2;
	or.b32  	%r3084, %r3081, %r3083;
	shl.b32 	%r3085, %r3354, 2;
	and.b32  	%r3086, %r3085, 64512;
	and.b32  	%r3087, %r3354, 255;
	or.b32  	%r3088, %r3086, %r3087;
	and.b32  	%r3089, %r3354, 49152;
	shr.u32 	%r3090, %r3089, 6;
	or.b32  	%r3091, %r3088, %r3090;
	shl.b32 	%r3092, %r3354, 4;
	and.b32  	%r3093, %r3092, 15728640;
	or.b32  	%r3094, %r3091, %r3093;
	and.b32  	%r3095, %r3354, 15728640;
	shr.u32 	%r3096, %r3095, 4;
	or.b32  	%r3097, %r3094, %r3096;
	shl.b32 	%r3098, %r3354, 6;
	and.b32  	%r3099, %r3098, -1073741824;
	or.b32  	%r3100, %r3097, %r3099;
	and.b32  	%r3101, %r3354, -67108864;
	shr.u32 	%r3102, %r3101, 2;
	or.b32  	%r3103, %r3100, %r3102;
	shl.b32 	%r3104, %r3355, 2;
	and.b32  	%r3105, %r3104, 64512;
	and.b32  	%r3106, %r3355, 255;
	or.b32  	%r3107, %r3105, %r3106;
	and.b32  	%r3108, %r3355, 49152;
	shr.u32 	%r3109, %r3108, 6;
	or.b32  	%r3110, %r3107, %r3109;
	shl.b32 	%r3111, %r3355, 4;
	and.b32  	%r3112, %r3111, 15728640;
	or.b32  	%r3113, %r3110, %r3112;
	and.b32  	%r3114, %r3355, 15728640;
	shr.u32 	%r3115, %r3114, 4;
	or.b32  	%r3116, %r3113, %r3115;
	shl.b32 	%r3117, %r3355, 6;
	and.b32  	%r3118, %r3117, -1073741824;
	or.b32  	%r3119, %r3116, %r3118;
	and.b32  	%r3120, %r3355, -67108864;
	shr.u32 	%r3121, %r3120, 2;
	or.b32  	%r3122, %r3119, %r3121;
	shl.b32 	%r3123, %r3356, 2;
	and.b32  	%r3124, %r3123, 64512;
	and.b32  	%r3125, %r3356, 255;
	or.b32  	%r3126, %r3124, %r3125;
	and.b32  	%r3127, %r3356, 49152;
	shr.u32 	%r3128, %r3127, 6;
	or.b32  	%r3129, %r3126, %r3128;
	shl.b32 	%r3130, %r3356, 4;
	and.b32  	%r3131, %r3130, 15728640;
	or.b32  	%r3132, %r3129, %r3131;
	and.b32  	%r3133, %r3356, 15728640;
	shr.u32 	%r3134, %r3133, 4;
	or.b32  	%r3135, %r3132, %r3134;
	shl.b32 	%r3136, %r3356, 6;
	and.b32  	%r3137, %r3136, -1073741824;
	or.b32  	%r3138, %r3135, %r3137;
	and.b32  	%r3139, %r3356, -67108864;
	shr.u32 	%r3140, %r3139, 2;
	or.b32  	%r3141, %r3138, %r3140;
	xor.b32  	%r3142, %r3065, %r3008;
	xor.b32  	%r3143, %r3084, %r3027;
	not.b32 	%r3144, %r3103;
	not.b32 	%r3145, %r3122;
	not.b32 	%r3146, %r3143;
	xor.b32  	%r3147, %r3146, %r3145;
	not.b32 	%r3148, %r3142;
	xor.b32  	%r3149, %r3148, %r3144;
	xor.b32  	%r3150, %r3084, %r3046;
	xor.b32  	%r3151, %r3150, %r3141;
	xor.b32  	%r3152, %r3065, %r3027;
	xor.b32  	%r3153, %r3152, %r3122;
	xor.b32  	%r3154, %r3046, %r3008;
	xor.b32  	%r3155, %r3154, %r3103;
	xor.b32  	%r3156, %r3146, %r3141;
	xor.b32  	%r3157, %r3148, %r3145;
	xor.b32  	%r3158, %r3046, %r3144;
	xor.b32  	%r3159, %r3158, %r3141;
	xor.b32  	%r3160, %r3156, %r3153;
	xor.b32  	%r3161, %r3148, %r3146;
	xor.b32  	%r3162, %r3153, %r3147;
	xor.b32  	%r3163, %r3141, %r3145;
	xor.b32  	%r3164, %r3151, %r3149;
	xor.b32  	%r3165, %r3159, %r3164;
	xor.b32  	%r3166, %r3165, %r3153;
	xor.b32  	%r3167, %r3161, %r3160;
	xor.b32  	%r3168, %r3165, %r3147;
	xor.b32  	%r3169, %r3165, %r3157;
	xor.b32  	%r3170, %r3169, %r3163;
	xor.b32  	%r3171, %r3167, %r3155;
	xor.b32  	%r3172, %r3171, %r3156;
	xor.b32  	%r3173, %r3171, %r3149;
	xor.b32  	%r3174, %r3172, %r3159;
	xor.b32  	%r3175, %r3172, %r3164;
	xor.b32  	%r3176, %r3173, %r3162;
	xor.b32  	%r3177, %r3176, %r3159;
	xor.b32  	%r3178, %r3175, %r3176;
	xor.b32  	%r3179, %r3176, %r3164;
	and.b32  	%r3180, %r3172, %r3167;
	and.b32  	%r3181, %r3174, %r3170;
	and.b32  	%r3182, %r3166, %r3159;
	and.b32  	%r3183, %r3179, %r3161;
	and.b32  	%r3184, %r3169, %r3165;
	and.b32  	%r3185, %r3177, %r3168;
	and.b32  	%r3186, %r3176, %r3162;
	and.b32  	%r3187, %r3178, %r3160;
	xor.b32  	%r3188, %r3187, %r3186;
	and.b32  	%r3189, %r3175, %r3163;
	xor.b32  	%r3190, %r3189, %r3186;
	xor.b32  	%r3191, %r3180, %r3173;
	xor.b32  	%r3192, %r3191, %r3181;
	xor.b32  	%r3193, %r3192, %r3188;
	xor.b32  	%r3194, %r3182, %r3163;
	xor.b32  	%r3195, %r3194, %r3175;
	xor.b32  	%r3196, %r3195, %r3180;
	xor.b32  	%r3197, %r3196, %r3190;
	xor.b32  	%r3198, %r3184, %r3161;
	xor.b32  	%r3199, %r3198, %r3179;
	xor.b32  	%r3200, %r3199, %r3183;
	xor.b32  	%r3201, %r3200, %r3188;
	xor.b32  	%r3202, %r3179, %r3147;
	xor.b32  	%r3203, %r3202, %r3183;
	xor.b32  	%r3204, %r3203, %r3185;
	xor.b32  	%r3205, %r3204, %r3190;
	xor.b32  	%r3206, %r3193, %r3197;
	and.b32  	%r3207, %r3193, %r3201;
	xor.b32  	%r3208, %r3207, %r3205;
	and.b32  	%r3209, %r3208, %r3206;
	xor.b32  	%r3210, %r3209, %r3197;
	xor.b32  	%r3211, %r3201, %r3205;
	xor.b32  	%r3212, %r3207, %r3197;
	and.b32  	%r3213, %r3212, %r3211;
	xor.b32  	%r3214, %r3213, %r3205;
	xor.b32  	%r3215, %r3214, %r3201;
	xor.b32  	%r3216, %r3213, %r3207;
	and.b32  	%r3217, %r3216, %r3205;
	xor.b32  	%r3218, %r3215, %r3217;
	xor.b32  	%r3219, %r3217, %r3208;
	and.b32  	%r3220, %r3219, %r3210;
	xor.b32  	%r3221, %r3220, %r3206;
	xor.b32  	%r3222, %r3221, %r3218;
	xor.b32  	%r3223, %r3210, %r3214;
	xor.b32  	%r3224, %r3221, %r3210;
	xor.b32  	%r3225, %r3217, %r3201;
	xor.b32  	%r3226, %r3222, %r3223;
	and.b32  	%r3227, %r3225, %r3172;
	and.b32  	%r3228, %r3218, %r3174;
	and.b32  	%r3229, %r3214, %r3159;
	and.b32  	%r3230, %r3224, %r3179;
	and.b32  	%r3231, %r3221, %r3165;
	and.b32  	%r3232, %r3210, %r3177;
	and.b32  	%r3233, %r3223, %r3176;
	and.b32  	%r3234, %r3226, %r3178;
	and.b32  	%r3235, %r3222, %r3175;
	and.b32  	%r3236, %r3225, %r3167;
	and.b32  	%r3237, %r3218, %r3170;
	and.b32  	%r3238, %r3214, %r3166;
	and.b32  	%r3239, %r3224, %r3161;
	and.b32  	%r3240, %r3221, %r3169;
	and.b32  	%r3241, %r3210, %r3168;
	and.b32  	%r3242, %r3223, %r3162;
	and.b32  	%r3243, %r3226, %r3160;
	and.b32  	%r3244, %r3222, %r3163;
	xor.b32  	%r3245, %r3243, %r3242;
	xor.b32  	%r3246, %r3237, %r3238;
	xor.b32  	%r3247, %r3240, %r3232;
	xor.b32  	%r3248, %r3236, %r3237;
	xor.b32  	%r3249, %r3239, %r3229;
	xor.b32  	%r3250, %r3229, %r3232;
	xor.b32  	%r3251, %r3234, %r3235;
	xor.b32  	%r3252, %r3230, %r3227;
	xor.b32  	%r3253, %r3239, %r3247;
	xor.b32  	%r3254, %r3249, %r3252;
	xor.b32  	%r3255, %r3245, %r3231;
	xor.b32  	%r3256, %r3230, %r3233;
	xor.b32  	%r3257, %r3256, %r3234;
	xor.b32  	%r3258, %r3245, %r3254;
	xor.b32  	%r3259, %r3254, %r3241;
	xor.b32  	%r3260, %r3251, %r3255;
	xor.b32  	%r3261, %r3248, %r3255;
	xor.b32  	%r3262, %r3257, %r3231;
	xor.b32  	%r3263, %r3259, %r3260;
	xor.b32  	%r3264, %r3261, %r3228;
	xor.b32  	%r3265, %r3261, %r3257;
	xor.b32  	%r3266, %r3264, %r3252;
	xor.b32  	%r3267, %r3260, %r3253;
	xor.b32  	%r3268, %r3266, %r3262;
	xor.b32  	%r3269, %r3267, %r3268;
	xor.b32  	%r3270, %r3250, %r3264;
	xor.b32  	%r3271, %r3246, %r3263;
	xor.b32  	%r3272, %r3269, %r3270;
	xor.b32  	%r3273, %r3243, %r3244;
	xor.b32  	%r3274, %r3273, %r3262;
	xor.b32  	%r3275, %r3258, %r3247;
	xor.b32  	%r3276, %r3274, %r3263;
	xor.b32  	%r3277, %r3262, %r3267;
	xor.b32  	%r3278, %r3275, %r3276;
	xor.b32  	%r3279, %r3278, %r3270;
	xor.b32  	%r3280, %r3265, %r3266;
	xor.b32  	%r3281, %r3280, %r3271;
	xor.b32  	%r3282, %r3278, %r3271;
	xor.b32  	%r3283, %r3280, %r3267;
	xor.b32  	%r3284, %r3275, %r3268;
	xor.b32  	%r3285, %r3284, %r3270;
	xor.b32  	%r3286, %r3265, %r3276;
	xor.b32  	%r3287, %r3286, %r3271;
	xor.b32  	%r3288, %r3287, %r15;
	xor.b32  	%r3289, %r3283, %r16;
	xor.b32  	%r3290, %r3272, %r17;
	xor.b32  	%r3291, %r3279, %r18;
	and.b32  	%r3292, %r3288, 1431655765;
	and.b32  	%r3293, %r3285, 1431655765;
	xor.b32  	%r3294, %r3293, %r19;
	shl.b32 	%r3295, %r3294, 1;
	or.b32  	%r3296, %r3295, %r3292;
	and.b32  	%r3297, %r3289, 1431655765;
	and.b32  	%r3298, %r3282, 1431655765;
	xor.b32  	%r3299, %r3298, %r20;
	shl.b32 	%r3300, %r3299, 1;
	or.b32  	%r3301, %r3300, %r3297;
	and.b32  	%r3302, %r3290, 1431655765;
	and.b32  	%r3303, %r3281, 1431655765;
	xor.b32  	%r3304, %r3303, %r21;
	shl.b32 	%r3305, %r3304, 1;
	or.b32  	%r3306, %r3305, %r3302;
	and.b32  	%r3307, %r3291, 1431655765;
	and.b32  	%r3308, %r3277, 1431655765;
	xor.b32  	%r3309, %r3308, %r22;
	shl.b32 	%r3310, %r3309, 1;
	or.b32  	%r3311, %r3310, %r3307;
	and.b32  	%r3312, %r3296, 50529027;
	shl.b32 	%r3313, %r3301, 2;
	and.b32  	%r3314, %r3313, 202116108;
	or.b32  	%r3315, %r3314, %r3312;
	and.b32  	%r3316, %r3296, 202116108;
	shr.u32 	%r3317, %r3316, 2;
	and.b32  	%r3318, %r3301, 202116108;
	or.b32  	%r3319, %r3317, %r3318;
	and.b32  	%r3320, %r3306, 50529027;
	shl.b32 	%r3321, %r3311, 2;
	and.b32  	%r3322, %r3321, 202116108;
	or.b32  	%r3323, %r3322, %r3320;
	and.b32  	%r3324, %r3306, 202116108;
	shr.u32 	%r3325, %r3324, 2;
	and.b32  	%r3326, %r3311, 202116108;
	or.b32  	%r3327, %r3325, %r3326;
	shl.b32 	%r3328, %r3323, 4;
	or.b32  	%r3329, %r3328, %r3315;
	shl.b32 	%r3330, %r3327, 4;
	or.b32  	%r3331, %r3330, %r3319;
	xor.b32  	%r49, %r61, %r3329;
	shr.u32 	%r3332, %r49, 24;
	cvt.u16.u32 	%rs25, %r3332;
	xor.b32  	%r50, %r62, %r3331;
	setp.gt.u16 	%p6, %rs25, 2;
	and.b32  	%r3333, %r50, -256;
	setp.ne.s32 	%p7, %r3333, 538984448;
	or.pred  	%p8, %p7, %p6;
	@%p8 bra 	$L__BB7_10;

	shl.b32 	%r3335, %r49, 8;
	and.b32  	%r3336, %r3335, 16776960;
	add.s32 	%r3337, %r3336, -1;
	and.b32  	%r3338, %r3337, %r3336;
	setp.eq.s32 	%p9, %r3338, 0;
	add.s32 	%r3339, %r3336, -257;
	setp.lt.u32 	%p10, %r3339, 65280;
	and.pred  	%p11, %p10, %p9;
	and.b32  	%r3340, %r50, 255;
	sub.s32 	%r3341, %r3336, %r3340;
	setp.gt.u32 	%p12, %r3341, 479;
	and.pred  	%p13, %p12, %p11;
	mov.u32 	%r3357, 1;
	@%p13 bra 	$L__BB7_11;

$L__BB7_10:
	mov.u32 	%r3357, 0;

$L__BB7_11:
	ld.param.u64 	%rd134, [enpass6_final_param_1];
	mul.lo.s64 	%rd132, %rd1, 44;
	add.s64 	%rd133, %rd134, %rd132;
	st.global.u32 	[%rd133], %r3357;
	ret;

}
.metadata_section {

.metadata 0 {
	"cl_kernel_attributes",
	"pbkdf2_init",
	"vec_type_hint(uint)"
}

.metadata 1 {
	"cl_kernel_attributes",
	"pbkdf2_loop",
	"vec_type_hint(uint)"
}

.metadata 2 {
	"cl_kernel_attributes",
	"pbkdf2_final",
	"vec_type_hint(uint)"
}

} // end of .metadata_section

  