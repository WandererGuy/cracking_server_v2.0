//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	kernel_prepare
.const .align 4 .b8 loop_index[168] = {0, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 7};
.const .align 4 .b8 generator_index[32] = {0, 0, 0, 0, 6, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 21, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 1};
.const .align 8 .b8 k[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 8 .b8 clear_mask[72] = {255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 255, 255, 255, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 255, 255, 255, 255, 255, 255, 0, 0, 255, 255, 255, 255, 255, 255, 255, 0, 255, 255, 255, 255, 255, 255, 255, 255};

.entry kernel_prepare(
	.param .u64 .ptr .const .align 8 kernel_prepare_param_0,
	.param .u64 .ptr .global .align 8 kernel_prepare_param_1,
	.param .u64 .ptr .global .align 8 kernel_prepare_param_2
)
{
	.local .align 8 .b8 	__local_depot0[304];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<122>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<9764>;
	.reg .b64 	%rd<13986>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1238, [kernel_prepare_param_0];
	ld.param.u64 	%rd1239, [kernel_prepare_param_1];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r174, %ctaid.x;
	mov.u32 	%r175, %ntid.x;
	mov.u32 	%r176, %tid.x;
	mov.b32 	%r177, %envreg3;
	add.s32 	%r178, %r176, %r177;
	mad.lo.s32 	%r1, %r175, %r174, %r178;
	add.s64 	%rd2, %rd1, 72;
	mov.u64 	%rd1242, 0;
	st.local.u64 	[%rd1+72], %rd1242;
	st.local.u64 	[%rd1+80], %rd1242;
	st.local.u64 	[%rd1+88], %rd1242;
	st.local.u64 	[%rd1+96], %rd1242;
	st.local.u64 	[%rd1+104], %rd1242;
	st.local.u64 	[%rd1+112], %rd1242;
	st.local.u64 	[%rd1+120], %rd1242;
	st.local.u64 	[%rd1+128], %rd1242;
	st.local.u64 	[%rd1+136], %rd1242;
	st.local.u64 	[%rd1+144], %rd1242;
	st.local.u64 	[%rd1+152], %rd1242;
	st.local.u64 	[%rd1+160], %rd1242;
	st.local.u64 	[%rd1+168], %rd1242;
	st.local.u64 	[%rd1+176], %rd1242;
	st.local.u64 	[%rd1+184], %rd1242;
	st.local.u64 	[%rd1+192], %rd1242;
	mov.u32 	%r9693, 0;
	st.local.u32 	[%rd1+68], %r9693;
	mul.wide.s32 	%rd1243, %r1, 32;
	add.s64 	%rd1244, %rd1239, %rd1243;
	add.s64 	%rd13525, %rd1244, 8;
	ld.global.nc.u32 	%r2, [%rd1244];
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	$L__BB0_5;

	mov.u32 	%r9695, %r9693;
	mov.u64 	%rd13523, %rd13525;

$L__BB0_2:
	mul.wide.u32 	%rd1245, %r9695, 8;
	add.s64 	%rd1246, %rd1, %rd1245;
	ld.global.nc.u64 	%rd1247, [%rd13523];
	ld.local.u64 	%rd1248, [%rd1246+72];
	or.b64  	%rd1249, %rd1247, %rd1248;
	st.local.u64 	[%rd1246+72], %rd1249;
	setp.gt.u32 	%p2, %r9695, 14;
	@%p2 bra 	$L__BB0_4;

	add.s32 	%r9695, %r9695, 1;
	mul.wide.u32 	%rd1250, %r9695, 8;
	add.s64 	%rd1251, %rd1, %rd1250;
	mov.u64 	%rd1252, 0;
	st.local.u64 	[%rd1251+72], %rd1252;

$L__BB0_4:
	add.s64 	%rd13523, %rd13523, 8;
	add.s32 	%r9693, %r9693, 8;
	setp.lt.u32 	%p3, %r9693, %r2;
	@%p3 bra 	$L__BB0_2;

$L__BB0_5:
	st.local.u32 	[%rd2+-4], %r2;
	and.b32  	%r8, %r2, 7;
	setp.eq.s32 	%p4, %r8, 0;
	shl.b32 	%r182, %r2, 3;
	cvt.u64.u32 	%rd1253, %r182;
	and.b64  	%rd1254, %rd1253, 56;
	mov.u64 	%rd1255, clear_mask;
	add.s64 	%rd6, %rd1255, %rd1254;
	@%p4 bra 	$L__BB0_7;

	and.b32  	%r183, %r2, -8;
	cvt.u64.u32 	%rd1256, %r183;
	add.s64 	%rd1257, %rd1, %rd1256;
	ld.local.u64 	%rd1258, [%rd1257+72];
	ld.const.u64 	%rd1259, [%rd6];
	and.b64  	%rd1260, %rd1259, %rd1258;
	st.local.u64 	[%rd1257+72], %rd1260;

$L__BB0_7:
	add.s64 	%rd13524, %rd1238, 16;
	ld.const.u32 	%r9, [%rd1238+4];
	setp.eq.s32 	%p5, %r9, 0;
	@%p5 bra 	$L__BB0_12;

	shl.b32 	%r185, %r8, 3;
	shr.u32 	%r9698, %r2, 3;
	cvt.u64.u32 	%rd8, %r185;
	neg.s32 	%r186, %r185;
	mov.u32 	%r9696, 0;
	and.b32  	%r187, %r186, 56;
	cvt.u64.u32 	%rd9, %r187;

$L__BB0_9:
	mul.wide.u32 	%rd1261, %r9698, 8;
	add.s64 	%rd1262, %rd1, %rd1261;
	ld.const.u64 	%rd11, [%rd13524];
	cvt.u32.u64 	%r188, %rd8;
	shl.b64 	%rd1263, %rd11, %r188;
	ld.local.u64 	%rd1264, [%rd1262+72];
	or.b64  	%rd1265, %rd1263, %rd1264;
	st.local.u64 	[%rd1262+72], %rd1265;
	setp.gt.u32 	%p6, %r9698, 14;
	@%p6 bra 	$L__BB0_11;

	cvt.u32.u64 	%r189, %rd9;
	shr.u64 	%rd1266, %rd11, %r189;
	selp.b64 	%rd1267, 0, %rd1266, %p4;
	add.s32 	%r9698, %r9698, 1;
	mul.wide.u32 	%rd1268, %r9698, 8;
	add.s64 	%rd1269, %rd1, %rd1268;
	st.local.u64 	[%rd1269+72], %rd1267;

$L__BB0_11:
	add.s64 	%rd13524, %rd13524, 8;
	add.s32 	%r9696, %r9696, 8;
	setp.lt.u32 	%p8, %r9696, %r9;
	@%p8 bra 	$L__BB0_9;

$L__BB0_12:
	add.s32 	%r16, %r2, %r9;
	st.local.u32 	[%rd2+-4], %r16;
	and.b32  	%r17, %r16, 7;
	setp.eq.s32 	%p9, %r17, 0;
	shl.b32 	%r190, %r16, 3;
	cvt.u64.u32 	%rd1270, %r190;
	and.b64  	%rd1271, %rd1270, 56;
	add.s64 	%rd13, %rd1255, %rd1271;
	@%p9 bra 	$L__BB0_14;

	and.b32  	%r191, %r16, -8;
	cvt.u64.u32 	%rd1273, %r191;
	add.s64 	%rd1274, %rd1, %rd1273;
	ld.local.u64 	%rd1275, [%rd1274+72];
	ld.const.u64 	%rd1276, [%rd13];
	and.b64  	%rd1277, %rd1276, %rd1275;
	st.local.u64 	[%rd1274+72], %rd1277;

$L__BB0_14:
	@%p1 bra 	$L__BB0_19;

	shl.b32 	%r193, %r17, 3;
	shr.u32 	%r9701, %r16, 3;
	cvt.u64.u32 	%rd14, %r193;
	neg.s32 	%r194, %r193;
	mov.u32 	%r9699, 0;
	and.b32  	%r195, %r194, 56;
	cvt.u64.u32 	%rd15, %r195;

$L__BB0_16:
	mul.wide.u32 	%rd1278, %r9701, 8;
	add.s64 	%rd1279, %rd1, %rd1278;
	ld.global.nc.u64 	%rd17, [%rd13525];
	cvt.u32.u64 	%r196, %rd14;
	shl.b64 	%rd1280, %rd17, %r196;
	ld.local.u64 	%rd1281, [%rd1279+72];
	or.b64  	%rd1282, %rd1280, %rd1281;
	st.local.u64 	[%rd1279+72], %rd1282;
	setp.gt.u32 	%p11, %r9701, 14;
	@%p11 bra 	$L__BB0_18;

	cvt.u32.u64 	%r197, %rd15;
	shr.u64 	%rd1283, %rd17, %r197;
	selp.b64 	%rd1284, 0, %rd1283, %p9;
	add.s32 	%r9701, %r9701, 1;
	mul.wide.u32 	%rd1285, %r9701, 8;
	add.s64 	%rd1286, %rd1, %rd1285;
	st.local.u64 	[%rd1286+72], %rd1284;

$L__BB0_18:
	add.s64 	%rd13525, %rd13525, 8;
	add.s32 	%r9699, %r9699, 8;
	setp.lt.u32 	%p13, %r9699, %r2;
	@%p13 bra 	$L__BB0_16;

$L__BB0_19:
	add.s32 	%r24, %r16, %r2;
	st.local.u32 	[%rd2+-4], %r24;
	and.b32  	%r25, %r24, 7;
	setp.eq.s32 	%p14, %r25, 0;
	and.b32  	%r198, %r24, -8;
	cvt.u64.u32 	%rd1287, %r198;
	add.s64 	%rd1288, %rd1, %rd1287;
	add.s64 	%rd19, %rd1288, 72;
	shl.b32 	%r199, %r24, 3;
	cvt.u64.u32 	%rd1289, %r199;
	and.b64  	%rd1290, %rd1289, 56;
	add.s64 	%rd20, %rd1255, %rd1290;
	@%p14 bra 	$L__BB0_21;

	ld.local.u64 	%rd1292, [%rd19];
	ld.const.u64 	%rd1293, [%rd20];
	and.b64  	%rd1294, %rd1293, %rd1292;
	st.local.u64 	[%rd19], %rd1294;

$L__BB0_21:
	st.local.u32 	[%rd2+-8], %r24;
	mov.u64 	%rd13573, 7640891576956012808;
	st.local.u64 	[%rd2+-72], %rd13573;
	mov.u64 	%rd13572, -4942790177534073029;
	st.local.u64 	[%rd2+-64], %rd13572;
	mov.u64 	%rd13571, 4354685564936845355;
	st.local.u64 	[%rd2+-56], %rd13571;
	mov.u64 	%rd13570, -6534734903238641935;
	st.local.u64 	[%rd2+-48], %rd13570;
	mov.u64 	%rd13569, 5840696475078001361;
	st.local.u64 	[%rd2+-40], %rd13569;
	mov.u64 	%rd13568, -7276294671716946913;
	st.local.u64 	[%rd2+-32], %rd13568;
	mov.u64 	%rd13567, 2270897969802886507;
	st.local.u64 	[%rd2+-24], %rd13567;
	mov.u64 	%rd13566, 6620516959819538809;
	st.local.u64 	[%rd2+-16], %rd13566;
	setp.lt.u32 	%p15, %r24, 112;
	@%p15 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_22;

$L__BB0_29:
	shl.b32 	%r970, %r25, 3;
	mov.u64 	%rd2308, 128;
	shl.b64 	%rd2309, %rd2308, %r970;
	ld.local.u64 	%rd2310, [%rd19];
	or.b64  	%rd2311, %rd2310, %rd2309;
	st.local.u64 	[%rd19], %rd2311;
	cvt.u64.u32 	%rd2312, %r24;
	shl.b64 	%rd2313, %rd2312, 59;
	shl.b64 	%rd2314, %rd2312, 43;
	and.b64  	%rd2315, %rd2314, 71776119061217280;
	or.b64  	%rd2316, %rd2315, %rd2313;
	cvt.u64.u32 	%rd2317, %r199;
	shl.b64 	%rd2318, %rd2317, 24;
	and.b64  	%rd2319, %rd2318, 280375465082880;
	or.b64  	%rd2320, %rd2316, %rd2319;
	shl.b64 	%rd2321, %rd2317, 8;
	and.b64  	%rd2322, %rd2321, 1095216660480;
	or.b64  	%rd2323, %rd2320, %rd2322;
	st.local.u64 	[%rd2+120], %rd2323;
	mov.u32 	%r972, 0;
	st.local.u32 	[%rd2+-4], %r972;
	ld.local.u64 	%rd13565, [%rd2];
	ld.local.u64 	%rd13564, [%rd2+8];
	ld.local.u64 	%rd13563, [%rd2+16];
	ld.local.u64 	%rd13562, [%rd2+24];
	ld.local.u64 	%rd13561, [%rd2+32];
	ld.local.u64 	%rd13560, [%rd2+40];
	ld.local.u64 	%rd13559, [%rd2+48];
	ld.local.u64 	%rd13558, [%rd2+56];
	ld.local.u64 	%rd13557, [%rd2+64];
	ld.local.u64 	%rd13556, [%rd2+72];
	ld.local.u64 	%rd13555, [%rd2+80];
	ld.local.u64 	%rd13554, [%rd2+88];
	ld.local.u64 	%rd13553, [%rd2+96];
	ld.local.u64 	%rd13552, [%rd2+104];
	ld.local.u64 	%rd13551, [%rd2+112];
	bra.uni 	$L__BB0_30;

$L__BB0_22:
	setp.gt.u32 	%p16, %r24, 127;
	@%p16 bra 	$L__BB0_24;

	shl.b32 	%r200, %r25, 3;
	mov.u64 	%rd1303, 128;
	shl.b64 	%rd1304, %rd1303, %r200;
	ld.local.u64 	%rd1305, [%rd19];
	or.b64  	%rd1306, %rd1304, %rd1305;
	st.local.u64 	[%rd19], %rd1306;

$L__BB0_24:
	ld.local.u64 	%rd1307, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r202, %temp}, %rd1307;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r203}, %rd1307;
	}
	mov.u32 	%r204, 291;
	mov.u32 	%r205, 0;
	prmt.b32 	%r206, %r202, %r205, %r204;
	prmt.b32 	%r207, %r203, %r205, %r204;
	mov.b64 	%rd13541, {%r207, %r206};
	ld.local.u64 	%rd1308, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r208, %temp}, %rd1308;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r209}, %rd1308;
	}
	prmt.b32 	%r210, %r208, %r205, %r204;
	prmt.b32 	%r211, %r209, %r205, %r204;
	mov.b64 	%rd13540, {%r211, %r210};
	ld.local.u64 	%rd1309, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r212, %temp}, %rd1309;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r213}, %rd1309;
	}
	prmt.b32 	%r214, %r212, %r205, %r204;
	prmt.b32 	%r215, %r213, %r205, %r204;
	mov.b64 	%rd13539, {%r215, %r214};
	ld.local.u64 	%rd1310, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r216, %temp}, %rd1310;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r217}, %rd1310;
	}
	prmt.b32 	%r218, %r216, %r205, %r204;
	prmt.b32 	%r219, %r217, %r205, %r204;
	mov.b64 	%rd13538, {%r219, %r218};
	ld.local.u64 	%rd1311, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r220, %temp}, %rd1311;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r221}, %rd1311;
	}
	prmt.b32 	%r222, %r220, %r205, %r204;
	prmt.b32 	%r223, %r221, %r205, %r204;
	mov.b64 	%rd13537, {%r223, %r222};
	ld.local.u64 	%rd1312, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r224, %temp}, %rd1312;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r225}, %rd1312;
	}
	prmt.b32 	%r226, %r224, %r205, %r204;
	prmt.b32 	%r227, %r225, %r205, %r204;
	mov.b64 	%rd13536, {%r227, %r226};
	ld.local.u64 	%rd1313, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r228, %temp}, %rd1313;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r229}, %rd1313;
	}
	prmt.b32 	%r230, %r228, %r205, %r204;
	prmt.b32 	%r231, %r229, %r205, %r204;
	mov.b64 	%rd13535, {%r231, %r230};
	ld.local.u64 	%rd1314, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r232, %temp}, %rd1314;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r233}, %rd1314;
	}
	prmt.b32 	%r234, %r232, %r205, %r204;
	prmt.b32 	%r235, %r233, %r205, %r204;
	mov.b64 	%rd13534, {%r235, %r234};
	ld.local.u64 	%rd1315, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r236, %temp}, %rd1315;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r237}, %rd1315;
	}
	prmt.b32 	%r238, %r236, %r205, %r204;
	prmt.b32 	%r239, %r237, %r205, %r204;
	mov.b64 	%rd13533, {%r239, %r238};
	ld.local.u64 	%rd1316, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r240, %temp}, %rd1316;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r241}, %rd1316;
	}
	prmt.b32 	%r242, %r240, %r205, %r204;
	prmt.b32 	%r243, %r241, %r205, %r204;
	mov.b64 	%rd13532, {%r243, %r242};
	ld.local.u64 	%rd1317, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r244, %temp}, %rd1317;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r245}, %rd1317;
	}
	prmt.b32 	%r246, %r244, %r205, %r204;
	prmt.b32 	%r247, %r245, %r205, %r204;
	mov.b64 	%rd13531, {%r247, %r246};
	ld.local.u64 	%rd1318, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r248, %temp}, %rd1318;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r249}, %rd1318;
	}
	prmt.b32 	%r250, %r248, %r205, %r204;
	prmt.b32 	%r251, %r249, %r205, %r204;
	mov.b64 	%rd13530, {%r251, %r250};
	ld.local.u64 	%rd1319, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r252, %temp}, %rd1319;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r253}, %rd1319;
	}
	prmt.b32 	%r254, %r252, %r205, %r204;
	prmt.b32 	%r255, %r253, %r205, %r204;
	mov.b64 	%rd13529, {%r255, %r254};
	ld.local.u64 	%rd1320, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r256, %temp}, %rd1320;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r257}, %rd1320;
	}
	prmt.b32 	%r258, %r256, %r205, %r204;
	prmt.b32 	%r259, %r257, %r205, %r204;
	mov.b64 	%rd13528, {%r259, %r258};
	ld.local.u64 	%rd1321, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r260, %temp}, %rd1321;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r261}, %rd1321;
	}
	prmt.b32 	%r262, %r260, %r205, %r204;
	prmt.b32 	%r263, %r261, %r205, %r204;
	mov.b64 	%rd13527, {%r263, %r262};
	ld.local.u64 	%rd1322, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r264, %temp}, %rd1322;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r265}, %rd1322;
	}
	prmt.b32 	%r266, %r264, %r205, %r204;
	prmt.b32 	%r267, %r265, %r205, %r204;
	mov.b64 	%rd13526, {%r267, %r266};
	mov.u64 	%rd1323, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r268,%dummy}, %rd1323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd1323;
	}
	shf.r.wrap.b32 	%r270, %r269, %r268, 18;
	shf.r.wrap.b32 	%r271, %r268, %r269, 18;
	mov.b64 	%rd1324, {%r271, %r270};
	shf.r.wrap.b32 	%r272, %r269, %r268, 14;
	shf.r.wrap.b32 	%r273, %r268, %r269, 14;
	mov.b64 	%rd1325, {%r273, %r272};
	xor.b64  	%rd1326, %rd1325, %rd1324;
	shf.l.wrap.b32 	%r274, %r268, %r269, 23;
	shf.l.wrap.b32 	%r275, %r269, %r268, 23;
	mov.b64 	%rd1327, {%r275, %r274};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	add.s64 	%rd1329, %rd1328, %rd13541;
	mov.u64 	%rd1330, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd1330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd1330;
	}
	shf.l.wrap.b32 	%r278, %r277, %r276, 30;
	shf.l.wrap.b32 	%r279, %r276, %r277, 30;
	mov.b64 	%rd1331, {%r279, %r278};
	shf.r.wrap.b32 	%r280, %r276, %r277, 28;
	shf.r.wrap.b32 	%r281, %r277, %r276, 28;
	mov.b64 	%rd1332, {%r281, %r280};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	shf.l.wrap.b32 	%r282, %r277, %r276, 25;
	shf.l.wrap.b32 	%r283, %r276, %r277, 25;
	mov.b64 	%rd1334, {%r283, %r282};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	add.s64 	%rd1336, %rd1335, %rd1329;
	add.s64 	%rd1337, %rd1329, 7151922335638569927;
	add.s64 	%rd1338, %rd1336, -549249324024138239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd1337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd1337;
	}
	shf.r.wrap.b32 	%r286, %r285, %r284, 14;
	shf.r.wrap.b32 	%r287, %r284, %r285, 14;
	mov.b64 	%rd1339, {%r287, %r286};
	shf.r.wrap.b32 	%r288, %r285, %r284, 18;
	shf.r.wrap.b32 	%r289, %r284, %r285, 18;
	mov.b64 	%rd1340, {%r289, %r288};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	shf.l.wrap.b32 	%r290, %r284, %r285, 23;
	shf.l.wrap.b32 	%r291, %r285, %r284, 23;
	mov.b64 	%rd1342, {%r291, %r290};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	and.b64  	%rd1344, %rd1337, -3887949035690463538;
	xor.b64  	%rd1345, %rd1344, -7276294671716946913;
	add.s64 	%rd1346, %rd1345, %rd1343;
	add.s64 	%rd1347, %rd1346, %rd13540;
	and.b64  	%rd1348, %rd1338, -3355664534840381901;
	or.b64  	%rd1349, %rd1348, 3026882967131160840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r292,%dummy}, %rd1338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r293}, %rd1338;
	}
	shf.r.wrap.b32 	%r294, %r293, %r292, 28;
	shf.r.wrap.b32 	%r295, %r292, %r293, 28;
	mov.b64 	%rd1350, {%r295, %r294};
	shf.l.wrap.b32 	%r296, %r292, %r293, 30;
	shf.l.wrap.b32 	%r297, %r293, %r292, 30;
	mov.b64 	%rd1351, {%r297, %r296};
	xor.b64  	%rd1352, %rd1350, %rd1351;
	shf.l.wrap.b32 	%r298, %r292, %r293, 25;
	shf.l.wrap.b32 	%r299, %r293, %r292, 25;
	mov.b64 	%rd1353, {%r299, %r298};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	add.s64 	%rd1355, %rd1354, %rd1349;
	add.s64 	%rd1356, %rd1355, %rd1347;
	add.s64 	%rd1357, %rd1347, -3663095898801038493;
	add.s64 	%rd1358, %rd1356, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd1357;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 14;
	shf.r.wrap.b32 	%r303, %r300, %r301, 14;
	mov.b64 	%rd1359, {%r303, %r302};
	shf.r.wrap.b32 	%r304, %r301, %r300, 18;
	shf.r.wrap.b32 	%r305, %r300, %r301, 18;
	mov.b64 	%rd1360, {%r305, %r304};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	shf.l.wrap.b32 	%r306, %r300, %r301, 23;
	shf.l.wrap.b32 	%r307, %r301, %r300, 23;
	mov.b64 	%rd1362, {%r307, %r306};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	xor.b64  	%rd1364, %rd1337, 5840696475078001361;
	and.b64  	%rd1365, %rd1357, %rd1364;
	xor.b64  	%rd1366, %rd1365, 5840696475078001361;
	add.s64 	%rd1367, %rd1366, %rd1363;
	add.s64 	%rd1368, %rd1367, %rd13539;
	and.b64  	%rd1369, %rd1358, %rd1338;
	or.b64  	%rd1370, %rd1358, %rd1338;
	and.b64  	%rd1371, %rd1370, 7640891576956012808;
	or.b64  	%rd1372, %rd1371, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r308,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd1358;
	}
	shf.r.wrap.b32 	%r310, %r309, %r308, 28;
	shf.r.wrap.b32 	%r311, %r308, %r309, 28;
	mov.b64 	%rd1373, {%r311, %r310};
	shf.l.wrap.b32 	%r312, %r308, %r309, 30;
	shf.l.wrap.b32 	%r313, %r309, %r308, 30;
	mov.b64 	%rd1374, {%r313, %r312};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	shf.l.wrap.b32 	%r314, %r308, %r309, 25;
	shf.l.wrap.b32 	%r315, %r309, %r308, 25;
	mov.b64 	%rd1376, {%r315, %r314};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	add.s64 	%rd1378, %rd1377, %rd1372;
	add.s64 	%rd1379, %rd1378, %rd1368;
	add.s64 	%rd1380, %rd1368, 877659737583668873;
	add.s64 	%rd1381, %rd1379, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r316,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd1380;
	}
	shf.r.wrap.b32 	%r318, %r317, %r316, 14;
	shf.r.wrap.b32 	%r319, %r316, %r317, 14;
	mov.b64 	%rd1382, {%r319, %r318};
	shf.r.wrap.b32 	%r320, %r317, %r316, 18;
	shf.r.wrap.b32 	%r321, %r316, %r317, 18;
	mov.b64 	%rd1383, {%r321, %r320};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	shf.l.wrap.b32 	%r322, %r316, %r317, 23;
	shf.l.wrap.b32 	%r323, %r317, %r316, 23;
	mov.b64 	%rd1385, {%r323, %r322};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	xor.b64  	%rd1387, %rd1357, %rd1337;
	and.b64  	%rd1388, %rd1380, %rd1387;
	xor.b64  	%rd1389, %rd1388, %rd1337;
	add.s64 	%rd1390, %rd1389, %rd1386;
	add.s64 	%rd1391, %rd1390, %rd13538;
	and.b64  	%rd1392, %rd1381, %rd1358;
	or.b64  	%rd1393, %rd1381, %rd1358;
	and.b64  	%rd1394, %rd1393, %rd1338;
	or.b64  	%rd1395, %rd1394, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd1381;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 28;
	shf.r.wrap.b32 	%r327, %r324, %r325, 28;
	mov.b64 	%rd1396, {%r327, %r326};
	shf.l.wrap.b32 	%r328, %r324, %r325, 30;
	shf.l.wrap.b32 	%r329, %r325, %r324, 30;
	mov.b64 	%rd1397, {%r329, %r328};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	shf.l.wrap.b32 	%r330, %r324, %r325, 25;
	shf.l.wrap.b32 	%r331, %r325, %r324, 25;
	mov.b64 	%rd1399, {%r331, %r330};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	add.s64 	%rd1401, %rd1400, %rd1395;
	add.s64 	%rd1402, %rd1401, %rd1391;
	add.s64 	%rd1403, %rd1391, -6571292209873868907;
	add.s64 	%rd1404, %rd1402, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r332,%dummy}, %rd1403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd1403;
	}
	shf.r.wrap.b32 	%r334, %r333, %r332, 14;
	shf.r.wrap.b32 	%r335, %r332, %r333, 14;
	mov.b64 	%rd1405, {%r335, %r334};
	shf.r.wrap.b32 	%r336, %r333, %r332, 18;
	shf.r.wrap.b32 	%r337, %r332, %r333, 18;
	mov.b64 	%rd1406, {%r337, %r336};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	shf.l.wrap.b32 	%r338, %r332, %r333, 23;
	shf.l.wrap.b32 	%r339, %r333, %r332, 23;
	mov.b64 	%rd1408, {%r339, %r338};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	xor.b64  	%rd1410, %rd1380, %rd1357;
	and.b64  	%rd1411, %rd1403, %rd1410;
	xor.b64  	%rd1412, %rd1411, %rd1357;
	add.s64 	%rd1413, %rd1412, %rd1337;
	add.s64 	%rd1414, %rd1413, %rd1409;
	add.s64 	%rd1415, %rd1414, %rd13537;
	add.s64 	%rd1416, %rd1415, 4131703408338449720;
	add.s64 	%rd1417, %rd1416, %rd1338;
	and.b64  	%rd1418, %rd1404, %rd1381;
	or.b64  	%rd1419, %rd1404, %rd1381;
	and.b64  	%rd1420, %rd1419, %rd1358;
	or.b64  	%rd1421, %rd1420, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd1404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd1404;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 28;
	shf.r.wrap.b32 	%r343, %r340, %r341, 28;
	mov.b64 	%rd1422, {%r343, %r342};
	shf.l.wrap.b32 	%r344, %r340, %r341, 30;
	shf.l.wrap.b32 	%r345, %r341, %r340, 30;
	mov.b64 	%rd1423, {%r345, %r344};
	xor.b64  	%rd1424, %rd1422, %rd1423;
	shf.l.wrap.b32 	%r346, %r340, %r341, 25;
	shf.l.wrap.b32 	%r347, %r341, %r340, 25;
	mov.b64 	%rd1425, {%r347, %r346};
	xor.b64  	%rd1426, %rd1424, %rd1425;
	add.s64 	%rd1427, %rd1426, %rd1421;
	add.s64 	%rd1428, %rd1427, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd1417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd1417;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 14;
	shf.r.wrap.b32 	%r351, %r348, %r349, 14;
	mov.b64 	%rd1429, {%r351, %r350};
	shf.r.wrap.b32 	%r352, %r349, %r348, 18;
	shf.r.wrap.b32 	%r353, %r348, %r349, 18;
	mov.b64 	%rd1430, {%r353, %r352};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	shf.l.wrap.b32 	%r354, %r348, %r349, 23;
	shf.l.wrap.b32 	%r355, %r349, %r348, 23;
	mov.b64 	%rd1432, {%r355, %r354};
	xor.b64  	%rd1433, %rd1431, %rd1432;
	xor.b64  	%rd1434, %rd1403, %rd1380;
	and.b64  	%rd1435, %rd1417, %rd1434;
	xor.b64  	%rd1436, %rd1435, %rd1380;
	add.s64 	%rd1437, %rd1436, %rd1357;
	add.s64 	%rd1438, %rd1437, %rd1433;
	add.s64 	%rd1439, %rd1438, %rd13536;
	add.s64 	%rd1440, %rd1439, 6480981068601479193;
	add.s64 	%rd1441, %rd1440, %rd1358;
	and.b64  	%rd1442, %rd1428, %rd1404;
	or.b64  	%rd1443, %rd1428, %rd1404;
	and.b64  	%rd1444, %rd1443, %rd1381;
	or.b64  	%rd1445, %rd1444, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r356,%dummy}, %rd1428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r357}, %rd1428;
	}
	shf.r.wrap.b32 	%r358, %r357, %r356, 28;
	shf.r.wrap.b32 	%r359, %r356, %r357, 28;
	mov.b64 	%rd1446, {%r359, %r358};
	shf.l.wrap.b32 	%r360, %r356, %r357, 30;
	shf.l.wrap.b32 	%r361, %r357, %r356, 30;
	mov.b64 	%rd1447, {%r361, %r360};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	shf.l.wrap.b32 	%r362, %r356, %r357, 25;
	shf.l.wrap.b32 	%r363, %r357, %r356, 25;
	mov.b64 	%rd1449, {%r363, %r362};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	add.s64 	%rd1451, %rd1450, %rd1445;
	add.s64 	%rd1452, %rd1451, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd1441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd1441;
	}
	shf.r.wrap.b32 	%r366, %r365, %r364, 14;
	shf.r.wrap.b32 	%r367, %r364, %r365, 14;
	mov.b64 	%rd1453, {%r367, %r366};
	shf.r.wrap.b32 	%r368, %r365, %r364, 18;
	shf.r.wrap.b32 	%r369, %r364, %r365, 18;
	mov.b64 	%rd1454, {%r369, %r368};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	shf.l.wrap.b32 	%r370, %r364, %r365, 23;
	shf.l.wrap.b32 	%r371, %r365, %r364, 23;
	mov.b64 	%rd1456, {%r371, %r370};
	xor.b64  	%rd1457, %rd1455, %rd1456;
	xor.b64  	%rd1458, %rd1417, %rd1403;
	and.b64  	%rd1459, %rd1441, %rd1458;
	xor.b64  	%rd1460, %rd1459, %rd1403;
	add.s64 	%rd1461, %rd1460, %rd1380;
	add.s64 	%rd1462, %rd1461, %rd1457;
	add.s64 	%rd1463, %rd1462, %rd13535;
	add.s64 	%rd1464, %rd1463, -7908458776815382629;
	add.s64 	%rd1465, %rd1464, %rd1381;
	and.b64  	%rd1466, %rd1452, %rd1428;
	or.b64  	%rd1467, %rd1452, %rd1428;
	and.b64  	%rd1468, %rd1467, %rd1404;
	or.b64  	%rd1469, %rd1468, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd1452;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 28;
	shf.r.wrap.b32 	%r375, %r372, %r373, 28;
	mov.b64 	%rd1470, {%r375, %r374};
	shf.l.wrap.b32 	%r376, %r372, %r373, 30;
	shf.l.wrap.b32 	%r377, %r373, %r372, 30;
	mov.b64 	%rd1471, {%r377, %r376};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	shf.l.wrap.b32 	%r378, %r372, %r373, 25;
	shf.l.wrap.b32 	%r379, %r373, %r372, 25;
	mov.b64 	%rd1473, {%r379, %r378};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	add.s64 	%rd1475, %rd1474, %rd1469;
	add.s64 	%rd1476, %rd1475, %rd1464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd1465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd1465;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 14;
	shf.r.wrap.b32 	%r383, %r380, %r381, 14;
	mov.b64 	%rd1477, {%r383, %r382};
	shf.r.wrap.b32 	%r384, %r381, %r380, 18;
	shf.r.wrap.b32 	%r385, %r380, %r381, 18;
	mov.b64 	%rd1478, {%r385, %r384};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	shf.l.wrap.b32 	%r386, %r380, %r381, 23;
	shf.l.wrap.b32 	%r387, %r381, %r380, 23;
	mov.b64 	%rd1480, {%r387, %r386};
	xor.b64  	%rd1481, %rd1479, %rd1480;
	xor.b64  	%rd1482, %rd1441, %rd1417;
	and.b64  	%rd1483, %rd1465, %rd1482;
	xor.b64  	%rd1484, %rd1483, %rd1417;
	add.s64 	%rd1485, %rd1484, %rd1403;
	add.s64 	%rd1486, %rd1485, %rd1481;
	add.s64 	%rd1487, %rd1486, %rd13534;
	add.s64 	%rd1488, %rd1487, -6116909921290321640;
	add.s64 	%rd1489, %rd1488, %rd1404;
	and.b64  	%rd1490, %rd1476, %rd1452;
	or.b64  	%rd1491, %rd1476, %rd1452;
	and.b64  	%rd1492, %rd1491, %rd1428;
	or.b64  	%rd1493, %rd1492, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r388,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r389}, %rd1476;
	}
	shf.r.wrap.b32 	%r390, %r389, %r388, 28;
	shf.r.wrap.b32 	%r391, %r388, %r389, 28;
	mov.b64 	%rd1494, {%r391, %r390};
	shf.l.wrap.b32 	%r392, %r388, %r389, 30;
	shf.l.wrap.b32 	%r393, %r389, %r388, 30;
	mov.b64 	%rd1495, {%r393, %r392};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	shf.l.wrap.b32 	%r394, %r388, %r389, 25;
	shf.l.wrap.b32 	%r395, %r389, %r388, 25;
	mov.b64 	%rd1497, {%r395, %r394};
	xor.b64  	%rd1498, %rd1496, %rd1497;
	add.s64 	%rd1499, %rd1498, %rd1493;
	add.s64 	%rd1500, %rd1499, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd1489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd1489;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 14;
	shf.r.wrap.b32 	%r399, %r396, %r397, 14;
	mov.b64 	%rd1501, {%r399, %r398};
	shf.r.wrap.b32 	%r400, %r397, %r396, 18;
	shf.r.wrap.b32 	%r401, %r396, %r397, 18;
	mov.b64 	%rd1502, {%r401, %r400};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	shf.l.wrap.b32 	%r402, %r396, %r397, 23;
	shf.l.wrap.b32 	%r403, %r397, %r396, 23;
	mov.b64 	%rd1504, {%r403, %r402};
	xor.b64  	%rd1505, %rd1503, %rd1504;
	xor.b64  	%rd1506, %rd1465, %rd1441;
	and.b64  	%rd1507, %rd1489, %rd1506;
	xor.b64  	%rd1508, %rd1507, %rd1441;
	add.s64 	%rd1509, %rd1508, %rd1417;
	add.s64 	%rd1510, %rd1509, %rd1505;
	add.s64 	%rd1511, %rd1510, %rd13533;
	add.s64 	%rd1512, %rd1511, -2880145864133508542;
	add.s64 	%rd1513, %rd1512, %rd1428;
	and.b64  	%rd1514, %rd1500, %rd1476;
	or.b64  	%rd1515, %rd1500, %rd1476;
	and.b64  	%rd1516, %rd1515, %rd1452;
	or.b64  	%rd1517, %rd1516, %rd1514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r405}, %rd1500;
	}
	shf.r.wrap.b32 	%r406, %r405, %r404, 28;
	shf.r.wrap.b32 	%r407, %r404, %r405, 28;
	mov.b64 	%rd1518, {%r407, %r406};
	shf.l.wrap.b32 	%r408, %r404, %r405, 30;
	shf.l.wrap.b32 	%r409, %r405, %r404, 30;
	mov.b64 	%rd1519, {%r409, %r408};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	shf.l.wrap.b32 	%r410, %r404, %r405, 25;
	shf.l.wrap.b32 	%r411, %r405, %r404, 25;
	mov.b64 	%rd1521, {%r411, %r410};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	add.s64 	%rd1523, %rd1522, %rd1517;
	add.s64 	%rd1524, %rd1523, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r412,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r413}, %rd1513;
	}
	shf.r.wrap.b32 	%r414, %r413, %r412, 14;
	shf.r.wrap.b32 	%r415, %r412, %r413, 14;
	mov.b64 	%rd1525, {%r415, %r414};
	shf.r.wrap.b32 	%r416, %r413, %r412, 18;
	shf.r.wrap.b32 	%r417, %r412, %r413, 18;
	mov.b64 	%rd1526, {%r417, %r416};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	shf.l.wrap.b32 	%r418, %r412, %r413, 23;
	shf.l.wrap.b32 	%r419, %r413, %r412, 23;
	mov.b64 	%rd1528, {%r419, %r418};
	xor.b64  	%rd1529, %rd1527, %rd1528;
	xor.b64  	%rd1530, %rd1489, %rd1465;
	and.b64  	%rd1531, %rd1513, %rd1530;
	xor.b64  	%rd1532, %rd1531, %rd1465;
	add.s64 	%rd1533, %rd1532, %rd1441;
	add.s64 	%rd1534, %rd1533, %rd1529;
	add.s64 	%rd1535, %rd1534, %rd13532;
	add.s64 	%rd1536, %rd1535, 1334009975649890238;
	add.s64 	%rd1537, %rd1536, %rd1452;
	and.b64  	%rd1538, %rd1524, %rd1500;
	or.b64  	%rd1539, %rd1524, %rd1500;
	and.b64  	%rd1540, %rd1539, %rd1476;
	or.b64  	%rd1541, %rd1540, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd1524;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 28;
	shf.r.wrap.b32 	%r423, %r420, %r421, 28;
	mov.b64 	%rd1542, {%r423, %r422};
	shf.l.wrap.b32 	%r424, %r420, %r421, 30;
	shf.l.wrap.b32 	%r425, %r421, %r420, 30;
	mov.b64 	%rd1543, {%r425, %r424};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	shf.l.wrap.b32 	%r426, %r420, %r421, 25;
	shf.l.wrap.b32 	%r427, %r421, %r420, 25;
	mov.b64 	%rd1545, {%r427, %r426};
	xor.b64  	%rd1546, %rd1544, %rd1545;
	add.s64 	%rd1547, %rd1546, %rd1541;
	add.s64 	%rd1548, %rd1547, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd1537;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 14;
	shf.r.wrap.b32 	%r431, %r428, %r429, 14;
	mov.b64 	%rd1549, {%r431, %r430};
	shf.r.wrap.b32 	%r432, %r429, %r428, 18;
	shf.r.wrap.b32 	%r433, %r428, %r429, 18;
	mov.b64 	%rd1550, {%r433, %r432};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	shf.l.wrap.b32 	%r434, %r428, %r429, 23;
	shf.l.wrap.b32 	%r435, %r429, %r428, 23;
	mov.b64 	%rd1552, {%r435, %r434};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	xor.b64  	%rd1554, %rd1513, %rd1489;
	and.b64  	%rd1555, %rd1537, %rd1554;
	xor.b64  	%rd1556, %rd1555, %rd1489;
	add.s64 	%rd1557, %rd1556, %rd1465;
	add.s64 	%rd1558, %rd1557, %rd1553;
	add.s64 	%rd1559, %rd1558, %rd13531;
	add.s64 	%rd1560, %rd1559, 2608012711638119052;
	add.s64 	%rd1561, %rd1560, %rd1476;
	and.b64  	%rd1562, %rd1548, %rd1524;
	or.b64  	%rd1563, %rd1548, %rd1524;
	and.b64  	%rd1564, %rd1563, %rd1500;
	or.b64  	%rd1565, %rd1564, %rd1562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd1548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd1548;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 28;
	shf.r.wrap.b32 	%r439, %r436, %r437, 28;
	mov.b64 	%rd1566, {%r439, %r438};
	shf.l.wrap.b32 	%r440, %r436, %r437, 30;
	shf.l.wrap.b32 	%r441, %r437, %r436, 30;
	mov.b64 	%rd1567, {%r441, %r440};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	shf.l.wrap.b32 	%r442, %r436, %r437, 25;
	shf.l.wrap.b32 	%r443, %r437, %r436, 25;
	mov.b64 	%rd1569, {%r443, %r442};
	xor.b64  	%rd1570, %rd1568, %rd1569;
	add.s64 	%rd1571, %rd1570, %rd1565;
	add.s64 	%rd1572, %rd1571, %rd1560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd1561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd1561;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 14;
	shf.r.wrap.b32 	%r447, %r444, %r445, 14;
	mov.b64 	%rd1573, {%r447, %r446};
	shf.r.wrap.b32 	%r448, %r445, %r444, 18;
	shf.r.wrap.b32 	%r449, %r444, %r445, 18;
	mov.b64 	%rd1574, {%r449, %r448};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	shf.l.wrap.b32 	%r450, %r444, %r445, 23;
	shf.l.wrap.b32 	%r451, %r445, %r444, 23;
	mov.b64 	%rd1576, {%r451, %r450};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	xor.b64  	%rd1578, %rd1537, %rd1513;
	and.b64  	%rd1579, %rd1561, %rd1578;
	xor.b64  	%rd1580, %rd1579, %rd1513;
	add.s64 	%rd1581, %rd1580, %rd1489;
	add.s64 	%rd1582, %rd1581, %rd1577;
	add.s64 	%rd1583, %rd1582, %rd13530;
	add.s64 	%rd1584, %rd1583, 6128411473006802146;
	add.s64 	%rd1585, %rd1584, %rd1500;
	and.b64  	%rd1586, %rd1572, %rd1548;
	or.b64  	%rd1587, %rd1572, %rd1548;
	and.b64  	%rd1588, %rd1587, %rd1524;
	or.b64  	%rd1589, %rd1588, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd1572;
	}
	shf.r.wrap.b32 	%r454, %r453, %r452, 28;
	shf.r.wrap.b32 	%r455, %r452, %r453, 28;
	mov.b64 	%rd1590, {%r455, %r454};
	shf.l.wrap.b32 	%r456, %r452, %r453, 30;
	shf.l.wrap.b32 	%r457, %r453, %r452, 30;
	mov.b64 	%rd1591, {%r457, %r456};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	shf.l.wrap.b32 	%r458, %r452, %r453, 25;
	shf.l.wrap.b32 	%r459, %r453, %r452, 25;
	mov.b64 	%rd1593, {%r459, %r458};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	add.s64 	%rd1595, %rd1594, %rd1589;
	add.s64 	%rd1596, %rd1595, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r460,%dummy}, %rd1585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd1585;
	}
	shf.r.wrap.b32 	%r462, %r461, %r460, 14;
	shf.r.wrap.b32 	%r463, %r460, %r461, 14;
	mov.b64 	%rd1597, {%r463, %r462};
	shf.r.wrap.b32 	%r464, %r461, %r460, 18;
	shf.r.wrap.b32 	%r465, %r460, %r461, 18;
	mov.b64 	%rd1598, {%r465, %r464};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	shf.l.wrap.b32 	%r466, %r460, %r461, 23;
	shf.l.wrap.b32 	%r467, %r461, %r460, 23;
	mov.b64 	%rd1600, {%r467, %r466};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	xor.b64  	%rd1602, %rd1561, %rd1537;
	and.b64  	%rd1603, %rd1585, %rd1602;
	xor.b64  	%rd1604, %rd1603, %rd1537;
	add.s64 	%rd1605, %rd1604, %rd1513;
	add.s64 	%rd1606, %rd1605, %rd1601;
	add.s64 	%rd1607, %rd1606, %rd13529;
	add.s64 	%rd1608, %rd1607, 8268148722764581231;
	add.s64 	%rd13549, %rd1608, %rd1524;
	and.b64  	%rd1609, %rd1596, %rd1572;
	or.b64  	%rd1610, %rd1596, %rd1572;
	and.b64  	%rd1611, %rd1610, %rd1548;
	or.b64  	%rd1612, %rd1611, %rd1609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd1596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd1596;
	}
	shf.r.wrap.b32 	%r470, %r469, %r468, 28;
	shf.r.wrap.b32 	%r471, %r468, %r469, 28;
	mov.b64 	%rd1613, {%r471, %r470};
	shf.l.wrap.b32 	%r472, %r468, %r469, 30;
	shf.l.wrap.b32 	%r473, %r469, %r468, 30;
	mov.b64 	%rd1614, {%r473, %r472};
	xor.b64  	%rd1615, %rd1613, %rd1614;
	shf.l.wrap.b32 	%r474, %r468, %r469, 25;
	shf.l.wrap.b32 	%r475, %r469, %r468, 25;
	mov.b64 	%rd1616, {%r475, %r474};
	xor.b64  	%rd1617, %rd1615, %rd1616;
	add.s64 	%rd1618, %rd1617, %rd1612;
	add.s64 	%rd13545, %rd1618, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r476,%dummy}, %rd13549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r477}, %rd13549;
	}
	shf.r.wrap.b32 	%r478, %r477, %r476, 14;
	shf.r.wrap.b32 	%r479, %r476, %r477, 14;
	mov.b64 	%rd1619, {%r479, %r478};
	shf.r.wrap.b32 	%r480, %r477, %r476, 18;
	shf.r.wrap.b32 	%r481, %r476, %r477, 18;
	mov.b64 	%rd1620, {%r481, %r480};
	xor.b64  	%rd1621, %rd1619, %rd1620;
	shf.l.wrap.b32 	%r482, %r476, %r477, 23;
	shf.l.wrap.b32 	%r483, %r477, %r476, 23;
	mov.b64 	%rd1622, {%r483, %r482};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	xor.b64  	%rd1624, %rd1585, %rd1561;
	and.b64  	%rd1625, %rd13549, %rd1624;
	xor.b64  	%rd1626, %rd1625, %rd1561;
	add.s64 	%rd1627, %rd1626, %rd1537;
	add.s64 	%rd1628, %rd1627, %rd1623;
	add.s64 	%rd1629, %rd1628, %rd13528;
	add.s64 	%rd1630, %rd1629, -9160688886553864527;
	add.s64 	%rd13548, %rd1630, %rd1548;
	and.b64  	%rd1631, %rd13545, %rd1596;
	or.b64  	%rd1632, %rd13545, %rd1596;
	and.b64  	%rd1633, %rd1632, %rd1572;
	or.b64  	%rd1634, %rd1633, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd13545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd13545;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 28;
	shf.r.wrap.b32 	%r487, %r484, %r485, 28;
	mov.b64 	%rd1635, {%r487, %r486};
	shf.l.wrap.b32 	%r488, %r484, %r485, 30;
	shf.l.wrap.b32 	%r489, %r485, %r484, 30;
	mov.b64 	%rd1636, {%r489, %r488};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	shf.l.wrap.b32 	%r490, %r484, %r485, 25;
	shf.l.wrap.b32 	%r491, %r485, %r484, 25;
	mov.b64 	%rd1638, {%r491, %r490};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	add.s64 	%rd1640, %rd1639, %rd1634;
	add.s64 	%rd13544, %rd1640, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd13548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd13548;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 14;
	shf.r.wrap.b32 	%r495, %r492, %r493, 14;
	mov.b64 	%rd1641, {%r495, %r494};
	shf.r.wrap.b32 	%r496, %r493, %r492, 18;
	shf.r.wrap.b32 	%r497, %r492, %r493, 18;
	mov.b64 	%rd1642, {%r497, %r496};
	xor.b64  	%rd1643, %rd1641, %rd1642;
	shf.l.wrap.b32 	%r498, %r492, %r493, 23;
	shf.l.wrap.b32 	%r499, %r493, %r492, 23;
	mov.b64 	%rd1644, {%r499, %r498};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	xor.b64  	%rd1646, %rd13549, %rd1585;
	and.b64  	%rd1647, %rd13548, %rd1646;
	xor.b64  	%rd1648, %rd1647, %rd1585;
	add.s64 	%rd1649, %rd1648, %rd1561;
	add.s64 	%rd1650, %rd1649, %rd1645;
	add.s64 	%rd1651, %rd1650, %rd13527;
	add.s64 	%rd1652, %rd1651, -7215885187991268811;
	add.s64 	%rd13547, %rd1652, %rd1572;
	and.b64  	%rd1653, %rd13544, %rd13545;
	or.b64  	%rd1654, %rd13544, %rd13545;
	and.b64  	%rd1655, %rd1654, %rd1596;
	or.b64  	%rd1656, %rd1655, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd13544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd13544;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 28;
	shf.r.wrap.b32 	%r503, %r500, %r501, 28;
	mov.b64 	%rd1657, {%r503, %r502};
	shf.l.wrap.b32 	%r504, %r500, %r501, 30;
	shf.l.wrap.b32 	%r505, %r501, %r500, 30;
	mov.b64 	%rd1658, {%r505, %r504};
	xor.b64  	%rd1659, %rd1657, %rd1658;
	shf.l.wrap.b32 	%r506, %r500, %r501, 25;
	shf.l.wrap.b32 	%r507, %r501, %r500, 25;
	mov.b64 	%rd1660, {%r507, %r506};
	xor.b64  	%rd1661, %rd1659, %rd1660;
	add.s64 	%rd1662, %rd1661, %rd1656;
	add.s64 	%rd13543, %rd1662, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd13547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd13547;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 14;
	shf.r.wrap.b32 	%r511, %r508, %r509, 14;
	mov.b64 	%rd1663, {%r511, %r510};
	shf.r.wrap.b32 	%r512, %r509, %r508, 18;
	shf.r.wrap.b32 	%r513, %r508, %r509, 18;
	mov.b64 	%rd1664, {%r513, %r512};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	shf.l.wrap.b32 	%r514, %r508, %r509, 23;
	shf.l.wrap.b32 	%r515, %r509, %r508, 23;
	mov.b64 	%rd1666, {%r515, %r514};
	xor.b64  	%rd1667, %rd1665, %rd1666;
	xor.b64  	%rd1668, %rd13548, %rd13549;
	and.b64  	%rd1669, %rd13547, %rd1668;
	xor.b64  	%rd1670, %rd1669, %rd13549;
	add.s64 	%rd1671, %rd1670, %rd1585;
	add.s64 	%rd1672, %rd1671, %rd1667;
	add.s64 	%rd1673, %rd1672, %rd13526;
	add.s64 	%rd1674, %rd1673, -4495734319001033068;
	add.s64 	%rd13546, %rd1674, %rd1596;
	and.b64  	%rd1675, %rd13543, %rd13544;
	or.b64  	%rd1676, %rd13543, %rd13544;
	and.b64  	%rd1677, %rd1676, %rd13545;
	or.b64  	%rd1678, %rd1677, %rd1675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd13543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd13543;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 28;
	shf.r.wrap.b32 	%r519, %r516, %r517, 28;
	mov.b64 	%rd1679, {%r519, %r518};
	shf.l.wrap.b32 	%r520, %r516, %r517, 30;
	shf.l.wrap.b32 	%r521, %r517, %r516, 30;
	mov.b64 	%rd1680, {%r521, %r520};
	xor.b64  	%rd1681, %rd1679, %rd1680;
	shf.l.wrap.b32 	%r522, %r516, %r517, 25;
	shf.l.wrap.b32 	%r523, %r517, %r516, 25;
	mov.b64 	%rd1682, {%r523, %r522};
	xor.b64  	%rd1683, %rd1681, %rd1682;
	add.s64 	%rd1684, %rd1683, %rd1678;
	add.s64 	%rd13542, %rd1684, %rd1674;
	mov.u32 	%r9702, 16;

$L__BB0_25:
	.pragma "nounroll";
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd13527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd13527;
	}
	shf.l.wrap.b32 	%r526, %r525, %r524, 3;
	shf.l.wrap.b32 	%r527, %r524, %r525, 3;
	mov.b64 	%rd1685, {%r527, %r526};
	shf.r.wrap.b32 	%r528, %r524, %r525, 19;
	shf.r.wrap.b32 	%r529, %r525, %r524, 19;
	mov.b64 	%rd1686, {%r529, %r528};
	xor.b64  	%rd1687, %rd1686, %rd1685;
	shr.u64 	%rd1688, %rd13527, 6;
	xor.b64  	%rd1689, %rd1687, %rd1688;
	add.s64 	%rd1690, %rd13532, %rd13541;
	add.s64 	%rd1691, %rd1690, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd13540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd13540;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 8;
	shf.r.wrap.b32 	%r533, %r530, %r531, 8;
	mov.b64 	%rd1692, {%r533, %r532};
	shf.r.wrap.b32 	%r534, %r531, %r530, 1;
	shf.r.wrap.b32 	%r535, %r530, %r531, 1;
	mov.b64 	%rd1693, {%r535, %r534};
	xor.b64  	%rd1694, %rd1693, %rd1692;
	shr.u64 	%rd1695, %rd13540, 7;
	xor.b64  	%rd1696, %rd1694, %rd1695;
	add.s64 	%rd13541, %rd1691, %rd1696;
	mul.wide.u32 	%rd1697, %r9702, 8;
	mov.u64 	%rd1698, k;
	add.s64 	%rd1699, %rd1698, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r536,%dummy}, %rd13546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd13546;
	}
	shf.r.wrap.b32 	%r538, %r537, %r536, 18;
	shf.r.wrap.b32 	%r539, %r536, %r537, 18;
	mov.b64 	%rd1700, {%r539, %r538};
	shf.r.wrap.b32 	%r540, %r537, %r536, 14;
	shf.r.wrap.b32 	%r541, %r536, %r537, 14;
	mov.b64 	%rd1701, {%r541, %r540};
	xor.b64  	%rd1702, %rd1701, %rd1700;
	shf.l.wrap.b32 	%r542, %r536, %r537, 23;
	shf.l.wrap.b32 	%r543, %r537, %r536, 23;
	mov.b64 	%rd1703, {%r543, %r542};
	xor.b64  	%rd1704, %rd1702, %rd1703;
	xor.b64  	%rd1705, %rd13547, %rd13548;
	and.b64  	%rd1706, %rd13546, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd13548;
	add.s64 	%rd1708, %rd1707, %rd13549;
	add.s64 	%rd1709, %rd1708, %rd1704;
	ld.const.u64 	%rd1710, [%rd1699];
	add.s64 	%rd1711, %rd1709, %rd1710;
	add.s64 	%rd1712, %rd1711, %rd13541;
	add.s64 	%rd1713, %rd1712, %rd13545;
	or.b64  	%rd1714, %rd13542, %rd13543;
	and.b64  	%rd1715, %rd1714, %rd13544;
	and.b64  	%rd1716, %rd13542, %rd13543;
	or.b64  	%rd1717, %rd1715, %rd1716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd13542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd13542;
	}
	shf.l.wrap.b32 	%r546, %r545, %r544, 30;
	shf.l.wrap.b32 	%r547, %r544, %r545, 30;
	mov.b64 	%rd1718, {%r547, %r546};
	shf.r.wrap.b32 	%r548, %r544, %r545, 28;
	shf.r.wrap.b32 	%r549, %r545, %r544, 28;
	mov.b64 	%rd1719, {%r549, %r548};
	xor.b64  	%rd1720, %rd1719, %rd1718;
	shf.l.wrap.b32 	%r550, %r545, %r544, 25;
	shf.l.wrap.b32 	%r551, %r544, %r545, 25;
	mov.b64 	%rd1721, {%r551, %r550};
	xor.b64  	%rd1722, %rd1720, %rd1721;
	add.s64 	%rd1723, %rd1722, %rd1717;
	add.s64 	%rd1724, %rd1723, %rd1712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd13526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd13526;
	}
	shf.l.wrap.b32 	%r554, %r553, %r552, 3;
	shf.l.wrap.b32 	%r555, %r552, %r553, 3;
	mov.b64 	%rd1725, {%r555, %r554};
	shf.r.wrap.b32 	%r556, %r552, %r553, 19;
	shf.r.wrap.b32 	%r557, %r553, %r552, 19;
	mov.b64 	%rd1726, {%r557, %r556};
	xor.b64  	%rd1727, %rd1726, %rd1725;
	shr.u64 	%rd1728, %rd13526, 6;
	xor.b64  	%rd1729, %rd1727, %rd1728;
	add.s64 	%rd1730, %rd13531, %rd13540;
	add.s64 	%rd1731, %rd1730, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r558,%dummy}, %rd13539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r559}, %rd13539;
	}
	shf.r.wrap.b32 	%r560, %r559, %r558, 8;
	shf.r.wrap.b32 	%r561, %r558, %r559, 8;
	mov.b64 	%rd1732, {%r561, %r560};
	shf.r.wrap.b32 	%r562, %r559, %r558, 1;
	shf.r.wrap.b32 	%r563, %r558, %r559, 1;
	mov.b64 	%rd1733, {%r563, %r562};
	xor.b64  	%rd1734, %rd1733, %rd1732;
	shr.u64 	%rd1735, %rd13539, 7;
	xor.b64  	%rd1736, %rd1734, %rd1735;
	add.s64 	%rd13540, %rd1731, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r564,%dummy}, %rd1713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r565}, %rd1713;
	}
	shf.r.wrap.b32 	%r566, %r565, %r564, 14;
	shf.r.wrap.b32 	%r567, %r564, %r565, 14;
	mov.b64 	%rd1737, {%r567, %r566};
	shf.r.wrap.b32 	%r568, %r565, %r564, 18;
	shf.r.wrap.b32 	%r569, %r564, %r565, 18;
	mov.b64 	%rd1738, {%r569, %r568};
	xor.b64  	%rd1739, %rd1737, %rd1738;
	shf.l.wrap.b32 	%r570, %r564, %r565, 23;
	shf.l.wrap.b32 	%r571, %r565, %r564, 23;
	mov.b64 	%rd1740, {%r571, %r570};
	xor.b64  	%rd1741, %rd1739, %rd1740;
	xor.b64  	%rd1742, %rd13546, %rd13547;
	and.b64  	%rd1743, %rd1713, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd13547;
	add.s64 	%rd1745, %rd1744, %rd13548;
	add.s64 	%rd1746, %rd1745, %rd1741;
	ld.const.u64 	%rd1747, [%rd1699+8];
	add.s64 	%rd1748, %rd1746, %rd1747;
	add.s64 	%rd1749, %rd1748, %rd13540;
	add.s64 	%rd1750, %rd1749, %rd13544;
	and.b64  	%rd1751, %rd1724, %rd13542;
	or.b64  	%rd1752, %rd1724, %rd13542;
	and.b64  	%rd1753, %rd1752, %rd13543;
	or.b64  	%rd1754, %rd1753, %rd1751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r572,%dummy}, %rd1724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd1724;
	}
	shf.r.wrap.b32 	%r574, %r573, %r572, 28;
	shf.r.wrap.b32 	%r575, %r572, %r573, 28;
	mov.b64 	%rd1755, {%r575, %r574};
	shf.l.wrap.b32 	%r576, %r572, %r573, 30;
	shf.l.wrap.b32 	%r577, %r573, %r572, 30;
	mov.b64 	%rd1756, {%r577, %r576};
	xor.b64  	%rd1757, %rd1755, %rd1756;
	shf.l.wrap.b32 	%r578, %r572, %r573, 25;
	shf.l.wrap.b32 	%r579, %r573, %r572, 25;
	mov.b64 	%rd1758, {%r579, %r578};
	xor.b64  	%rd1759, %rd1757, %rd1758;
	add.s64 	%rd1760, %rd1759, %rd1754;
	add.s64 	%rd1761, %rd1760, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r580,%dummy}, %rd13541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd13541;
	}
	shf.r.wrap.b32 	%r582, %r581, %r580, 19;
	shf.r.wrap.b32 	%r583, %r580, %r581, 19;
	mov.b64 	%rd1762, {%r583, %r582};
	shf.l.wrap.b32 	%r584, %r580, %r581, 3;
	shf.l.wrap.b32 	%r585, %r581, %r580, 3;
	mov.b64 	%rd1763, {%r585, %r584};
	xor.b64  	%rd1764, %rd1762, %rd1763;
	shr.u64 	%rd1765, %rd13541, 6;
	xor.b64  	%rd1766, %rd1764, %rd1765;
	add.s64 	%rd1767, %rd13530, %rd13539;
	add.s64 	%rd1768, %rd1767, %rd1766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd13538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd13538;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 8;
	shf.r.wrap.b32 	%r589, %r586, %r587, 8;
	mov.b64 	%rd1769, {%r589, %r588};
	shf.r.wrap.b32 	%r590, %r587, %r586, 1;
	shf.r.wrap.b32 	%r591, %r586, %r587, 1;
	mov.b64 	%rd1770, {%r591, %r590};
	xor.b64  	%rd1771, %rd1770, %rd1769;
	shr.u64 	%rd1772, %rd13538, 7;
	xor.b64  	%rd1773, %rd1771, %rd1772;
	add.s64 	%rd13539, %rd1768, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd1750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r593}, %rd1750;
	}
	shf.r.wrap.b32 	%r594, %r593, %r592, 14;
	shf.r.wrap.b32 	%r595, %r592, %r593, 14;
	mov.b64 	%rd1774, {%r595, %r594};
	shf.r.wrap.b32 	%r596, %r593, %r592, 18;
	shf.r.wrap.b32 	%r597, %r592, %r593, 18;
	mov.b64 	%rd1775, {%r597, %r596};
	xor.b64  	%rd1776, %rd1774, %rd1775;
	shf.l.wrap.b32 	%r598, %r592, %r593, 23;
	shf.l.wrap.b32 	%r599, %r593, %r592, 23;
	mov.b64 	%rd1777, {%r599, %r598};
	xor.b64  	%rd1778, %rd1776, %rd1777;
	xor.b64  	%rd1779, %rd1713, %rd13546;
	and.b64  	%rd1780, %rd1750, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd13546;
	add.s64 	%rd1782, %rd1781, %rd13547;
	add.s64 	%rd1783, %rd1782, %rd1778;
	ld.const.u64 	%rd1784, [%rd1699+16];
	add.s64 	%rd1785, %rd1783, %rd1784;
	add.s64 	%rd1786, %rd1785, %rd13539;
	add.s64 	%rd1787, %rd1786, %rd13543;
	and.b64  	%rd1788, %rd1761, %rd1724;
	or.b64  	%rd1789, %rd1761, %rd1724;
	and.b64  	%rd1790, %rd1789, %rd13542;
	or.b64  	%rd1791, %rd1790, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r600,%dummy}, %rd1761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd1761;
	}
	shf.r.wrap.b32 	%r602, %r601, %r600, 28;
	shf.r.wrap.b32 	%r603, %r600, %r601, 28;
	mov.b64 	%rd1792, {%r603, %r602};
	shf.l.wrap.b32 	%r604, %r600, %r601, 30;
	shf.l.wrap.b32 	%r605, %r601, %r600, 30;
	mov.b64 	%rd1793, {%r605, %r604};
	xor.b64  	%rd1794, %rd1792, %rd1793;
	shf.l.wrap.b32 	%r606, %r600, %r601, 25;
	shf.l.wrap.b32 	%r607, %r601, %r600, 25;
	mov.b64 	%rd1795, {%r607, %r606};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	add.s64 	%rd1797, %rd1796, %rd1791;
	add.s64 	%rd1798, %rd1797, %rd1786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r608,%dummy}, %rd13540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd13540;
	}
	shf.r.wrap.b32 	%r610, %r609, %r608, 19;
	shf.r.wrap.b32 	%r611, %r608, %r609, 19;
	mov.b64 	%rd1799, {%r611, %r610};
	shf.l.wrap.b32 	%r612, %r608, %r609, 3;
	shf.l.wrap.b32 	%r613, %r609, %r608, 3;
	mov.b64 	%rd1800, {%r613, %r612};
	xor.b64  	%rd1801, %rd1799, %rd1800;
	shr.u64 	%rd1802, %rd13540, 6;
	xor.b64  	%rd1803, %rd1801, %rd1802;
	add.s64 	%rd1804, %rd13529, %rd13538;
	add.s64 	%rd1805, %rd1804, %rd1803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r614,%dummy}, %rd13537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r615}, %rd13537;
	}
	shf.r.wrap.b32 	%r616, %r615, %r614, 8;
	shf.r.wrap.b32 	%r617, %r614, %r615, 8;
	mov.b64 	%rd1806, {%r617, %r616};
	shf.r.wrap.b32 	%r618, %r615, %r614, 1;
	shf.r.wrap.b32 	%r619, %r614, %r615, 1;
	mov.b64 	%rd1807, {%r619, %r618};
	xor.b64  	%rd1808, %rd1807, %rd1806;
	shr.u64 	%rd1809, %rd13537, 7;
	xor.b64  	%rd1810, %rd1808, %rd1809;
	add.s64 	%rd13538, %rd1805, %rd1810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd1787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd1787;
	}
	shf.r.wrap.b32 	%r622, %r621, %r620, 14;
	shf.r.wrap.b32 	%r623, %r620, %r621, 14;
	mov.b64 	%rd1811, {%r623, %r622};
	shf.r.wrap.b32 	%r624, %r621, %r620, 18;
	shf.r.wrap.b32 	%r625, %r620, %r621, 18;
	mov.b64 	%rd1812, {%r625, %r624};
	xor.b64  	%rd1813, %rd1811, %rd1812;
	shf.l.wrap.b32 	%r626, %r620, %r621, 23;
	shf.l.wrap.b32 	%r627, %r621, %r620, 23;
	mov.b64 	%rd1814, {%r627, %r626};
	xor.b64  	%rd1815, %rd1813, %rd1814;
	xor.b64  	%rd1816, %rd1750, %rd1713;
	and.b64  	%rd1817, %rd1787, %rd1816;
	xor.b64  	%rd1818, %rd1817, %rd1713;
	add.s64 	%rd1819, %rd1818, %rd13546;
	add.s64 	%rd1820, %rd1819, %rd1815;
	ld.const.u64 	%rd1821, [%rd1699+24];
	add.s64 	%rd1822, %rd1820, %rd1821;
	add.s64 	%rd1823, %rd1822, %rd13538;
	add.s64 	%rd1824, %rd1823, %rd13542;
	and.b64  	%rd1825, %rd1798, %rd1761;
	or.b64  	%rd1826, %rd1798, %rd1761;
	and.b64  	%rd1827, %rd1826, %rd1724;
	or.b64  	%rd1828, %rd1827, %rd1825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd1798;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 28;
	shf.r.wrap.b32 	%r631, %r628, %r629, 28;
	mov.b64 	%rd1829, {%r631, %r630};
	shf.l.wrap.b32 	%r632, %r628, %r629, 30;
	shf.l.wrap.b32 	%r633, %r629, %r628, 30;
	mov.b64 	%rd1830, {%r633, %r632};
	xor.b64  	%rd1831, %rd1829, %rd1830;
	shf.l.wrap.b32 	%r634, %r628, %r629, 25;
	shf.l.wrap.b32 	%r635, %r629, %r628, 25;
	mov.b64 	%rd1832, {%r635, %r634};
	xor.b64  	%rd1833, %rd1831, %rd1832;
	add.s64 	%rd1834, %rd1833, %rd1828;
	add.s64 	%rd1835, %rd1834, %rd1823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd13539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd13539;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 19;
	shf.r.wrap.b32 	%r639, %r636, %r637, 19;
	mov.b64 	%rd1836, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 3;
	shf.l.wrap.b32 	%r641, %r637, %r636, 3;
	mov.b64 	%rd1837, {%r641, %r640};
	xor.b64  	%rd1838, %rd1836, %rd1837;
	shr.u64 	%rd1839, %rd13539, 6;
	xor.b64  	%rd1840, %rd1838, %rd1839;
	add.s64 	%rd1841, %rd13528, %rd13537;
	add.s64 	%rd1842, %rd1841, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd13536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd13536;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 8;
	shf.r.wrap.b32 	%r645, %r642, %r643, 8;
	mov.b64 	%rd1843, {%r645, %r644};
	shf.r.wrap.b32 	%r646, %r643, %r642, 1;
	shf.r.wrap.b32 	%r647, %r642, %r643, 1;
	mov.b64 	%rd1844, {%r647, %r646};
	xor.b64  	%rd1845, %rd1844, %rd1843;
	shr.u64 	%rd1846, %rd13536, 7;
	xor.b64  	%rd1847, %rd1845, %rd1846;
	add.s64 	%rd13537, %rd1842, %rd1847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd1824;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 14;
	shf.r.wrap.b32 	%r651, %r648, %r649, 14;
	mov.b64 	%rd1848, {%r651, %r650};
	shf.r.wrap.b32 	%r652, %r649, %r648, 18;
	shf.r.wrap.b32 	%r653, %r648, %r649, 18;
	mov.b64 	%rd1849, {%r653, %r652};
	xor.b64  	%rd1850, %rd1848, %rd1849;
	shf.l.wrap.b32 	%r654, %r648, %r649, 23;
	shf.l.wrap.b32 	%r655, %r649, %r648, 23;
	mov.b64 	%rd1851, {%r655, %r654};
	xor.b64  	%rd1852, %rd1850, %rd1851;
	xor.b64  	%rd1853, %rd1787, %rd1750;
	and.b64  	%rd1854, %rd1824, %rd1853;
	xor.b64  	%rd1855, %rd1854, %rd1750;
	add.s64 	%rd1856, %rd1855, %rd1713;
	add.s64 	%rd1857, %rd1856, %rd1852;
	ld.const.u64 	%rd1858, [%rd1699+32];
	add.s64 	%rd1859, %rd1857, %rd1858;
	add.s64 	%rd1860, %rd1859, %rd13537;
	add.s64 	%rd1861, %rd1860, %rd1724;
	and.b64  	%rd1862, %rd1835, %rd1798;
	or.b64  	%rd1863, %rd1835, %rd1798;
	and.b64  	%rd1864, %rd1863, %rd1761;
	or.b64  	%rd1865, %rd1864, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r656,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd1835;
	}
	shf.r.wrap.b32 	%r658, %r657, %r656, 28;
	shf.r.wrap.b32 	%r659, %r656, %r657, 28;
	mov.b64 	%rd1866, {%r659, %r658};
	shf.l.wrap.b32 	%r660, %r656, %r657, 30;
	shf.l.wrap.b32 	%r661, %r657, %r656, 30;
	mov.b64 	%rd1867, {%r661, %r660};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	shf.l.wrap.b32 	%r662, %r656, %r657, 25;
	shf.l.wrap.b32 	%r663, %r657, %r656, 25;
	mov.b64 	%rd1869, {%r663, %r662};
	xor.b64  	%rd1870, %rd1868, %rd1869;
	add.s64 	%rd1871, %rd1870, %rd1865;
	add.s64 	%rd1872, %rd1871, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r664,%dummy}, %rd13538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd13538;
	}
	shf.r.wrap.b32 	%r666, %r665, %r664, 19;
	shf.r.wrap.b32 	%r667, %r664, %r665, 19;
	mov.b64 	%rd1873, {%r667, %r666};
	shf.l.wrap.b32 	%r668, %r664, %r665, 3;
	shf.l.wrap.b32 	%r669, %r665, %r664, 3;
	mov.b64 	%rd1874, {%r669, %r668};
	xor.b64  	%rd1875, %rd1873, %rd1874;
	shr.u64 	%rd1876, %rd13538, 6;
	xor.b64  	%rd1877, %rd1875, %rd1876;
	add.s64 	%rd1878, %rd13527, %rd13536;
	add.s64 	%rd1879, %rd1878, %rd1877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd13535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r671}, %rd13535;
	}
	shf.r.wrap.b32 	%r672, %r671, %r670, 8;
	shf.r.wrap.b32 	%r673, %r670, %r671, 8;
	mov.b64 	%rd1880, {%r673, %r672};
	shf.r.wrap.b32 	%r674, %r671, %r670, 1;
	shf.r.wrap.b32 	%r675, %r670, %r671, 1;
	mov.b64 	%rd1881, {%r675, %r674};
	xor.b64  	%rd1882, %rd1881, %rd1880;
	shr.u64 	%rd1883, %rd13535, 7;
	xor.b64  	%rd1884, %rd1882, %rd1883;
	add.s64 	%rd13536, %rd1879, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r677}, %rd1861;
	}
	shf.r.wrap.b32 	%r678, %r677, %r676, 14;
	shf.r.wrap.b32 	%r679, %r676, %r677, 14;
	mov.b64 	%rd1885, {%r679, %r678};
	shf.r.wrap.b32 	%r680, %r677, %r676, 18;
	shf.r.wrap.b32 	%r681, %r676, %r677, 18;
	mov.b64 	%rd1886, {%r681, %r680};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	shf.l.wrap.b32 	%r682, %r676, %r677, 23;
	shf.l.wrap.b32 	%r683, %r677, %r676, 23;
	mov.b64 	%rd1888, {%r683, %r682};
	xor.b64  	%rd1889, %rd1887, %rd1888;
	xor.b64  	%rd1890, %rd1824, %rd1787;
	and.b64  	%rd1891, %rd1861, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1787;
	add.s64 	%rd1893, %rd1892, %rd1750;
	add.s64 	%rd1894, %rd1893, %rd1889;
	ld.const.u64 	%rd1895, [%rd1699+40];
	add.s64 	%rd1896, %rd1894, %rd1895;
	add.s64 	%rd1897, %rd1896, %rd13536;
	add.s64 	%rd1898, %rd1897, %rd1761;
	and.b64  	%rd1899, %rd1872, %rd1835;
	or.b64  	%rd1900, %rd1872, %rd1835;
	and.b64  	%rd1901, %rd1900, %rd1798;
	or.b64  	%rd1902, %rd1901, %rd1899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd1872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1872;
	}
	shf.r.wrap.b32 	%r686, %r685, %r684, 28;
	shf.r.wrap.b32 	%r687, %r684, %r685, 28;
	mov.b64 	%rd1903, {%r687, %r686};
	shf.l.wrap.b32 	%r688, %r684, %r685, 30;
	shf.l.wrap.b32 	%r689, %r685, %r684, 30;
	mov.b64 	%rd1904, {%r689, %r688};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	shf.l.wrap.b32 	%r690, %r684, %r685, 25;
	shf.l.wrap.b32 	%r691, %r685, %r684, 25;
	mov.b64 	%rd1906, {%r691, %r690};
	xor.b64  	%rd1907, %rd1905, %rd1906;
	add.s64 	%rd1908, %rd1907, %rd1902;
	add.s64 	%rd1909, %rd1908, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r692,%dummy}, %rd13537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd13537;
	}
	shf.r.wrap.b32 	%r694, %r693, %r692, 19;
	shf.r.wrap.b32 	%r695, %r692, %r693, 19;
	mov.b64 	%rd1910, {%r695, %r694};
	shf.l.wrap.b32 	%r696, %r692, %r693, 3;
	shf.l.wrap.b32 	%r697, %r693, %r692, 3;
	mov.b64 	%rd1911, {%r697, %r696};
	xor.b64  	%rd1912, %rd1910, %rd1911;
	shr.u64 	%rd1913, %rd13537, 6;
	xor.b64  	%rd1914, %rd1912, %rd1913;
	add.s64 	%rd1915, %rd13526, %rd13535;
	add.s64 	%rd1916, %rd1915, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd13534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd13534;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 8;
	shf.r.wrap.b32 	%r701, %r698, %r699, 8;
	mov.b64 	%rd1917, {%r701, %r700};
	shf.r.wrap.b32 	%r702, %r699, %r698, 1;
	shf.r.wrap.b32 	%r703, %r698, %r699, 1;
	mov.b64 	%rd1918, {%r703, %r702};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shr.u64 	%rd1920, %rd13534, 7;
	xor.b64  	%rd1921, %rd1919, %rd1920;
	add.s64 	%rd13535, %rd1916, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd1898;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 14;
	shf.r.wrap.b32 	%r707, %r704, %r705, 14;
	mov.b64 	%rd1922, {%r707, %r706};
	shf.r.wrap.b32 	%r708, %r705, %r704, 18;
	shf.r.wrap.b32 	%r709, %r704, %r705, 18;
	mov.b64 	%rd1923, {%r709, %r708};
	xor.b64  	%rd1924, %rd1922, %rd1923;
	shf.l.wrap.b32 	%r710, %r704, %r705, 23;
	shf.l.wrap.b32 	%r711, %r705, %r704, 23;
	mov.b64 	%rd1925, {%r711, %r710};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	xor.b64  	%rd1927, %rd1861, %rd1824;
	and.b64  	%rd1928, %rd1898, %rd1927;
	xor.b64  	%rd1929, %rd1928, %rd1824;
	add.s64 	%rd1930, %rd1929, %rd1787;
	add.s64 	%rd1931, %rd1930, %rd1926;
	ld.const.u64 	%rd1932, [%rd1699+48];
	add.s64 	%rd1933, %rd1931, %rd1932;
	add.s64 	%rd1934, %rd1933, %rd13535;
	add.s64 	%rd1935, %rd1934, %rd1798;
	and.b64  	%rd1936, %rd1909, %rd1872;
	or.b64  	%rd1937, %rd1909, %rd1872;
	and.b64  	%rd1938, %rd1937, %rd1835;
	or.b64  	%rd1939, %rd1938, %rd1936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd1909;
	}
	shf.r.wrap.b32 	%r714, %r713, %r712, 28;
	shf.r.wrap.b32 	%r715, %r712, %r713, 28;
	mov.b64 	%rd1940, {%r715, %r714};
	shf.l.wrap.b32 	%r716, %r712, %r713, 30;
	shf.l.wrap.b32 	%r717, %r713, %r712, 30;
	mov.b64 	%rd1941, {%r717, %r716};
	xor.b64  	%rd1942, %rd1940, %rd1941;
	shf.l.wrap.b32 	%r718, %r712, %r713, 25;
	shf.l.wrap.b32 	%r719, %r713, %r712, 25;
	mov.b64 	%rd1943, {%r719, %r718};
	xor.b64  	%rd1944, %rd1942, %rd1943;
	add.s64 	%rd1945, %rd1944, %rd1939;
	add.s64 	%rd1946, %rd1945, %rd1934;
	add.s64 	%rd1947, %rd13541, %rd13534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd13536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd13536;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 19;
	shf.r.wrap.b32 	%r723, %r720, %r721, 19;
	mov.b64 	%rd1948, {%r723, %r722};
	shf.l.wrap.b32 	%r724, %r720, %r721, 3;
	shf.l.wrap.b32 	%r725, %r721, %r720, 3;
	mov.b64 	%rd1949, {%r725, %r724};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	shr.u64 	%rd1951, %rd13536, 6;
	xor.b64  	%rd1952, %rd1950, %rd1951;
	add.s64 	%rd1953, %rd1947, %rd1952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd13533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd13533;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 8;
	shf.r.wrap.b32 	%r729, %r726, %r727, 8;
	mov.b64 	%rd1954, {%r729, %r728};
	shf.r.wrap.b32 	%r730, %r727, %r726, 1;
	shf.r.wrap.b32 	%r731, %r726, %r727, 1;
	mov.b64 	%rd1955, {%r731, %r730};
	xor.b64  	%rd1956, %rd1955, %rd1954;
	shr.u64 	%rd1957, %rd13533, 7;
	xor.b64  	%rd1958, %rd1956, %rd1957;
	add.s64 	%rd13534, %rd1953, %rd1958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd1935;
	}
	shf.r.wrap.b32 	%r734, %r733, %r732, 14;
	shf.r.wrap.b32 	%r735, %r732, %r733, 14;
	mov.b64 	%rd1959, {%r735, %r734};
	shf.r.wrap.b32 	%r736, %r733, %r732, 18;
	shf.r.wrap.b32 	%r737, %r732, %r733, 18;
	mov.b64 	%rd1960, {%r737, %r736};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	shf.l.wrap.b32 	%r738, %r732, %r733, 23;
	shf.l.wrap.b32 	%r739, %r733, %r732, 23;
	mov.b64 	%rd1962, {%r739, %r738};
	xor.b64  	%rd1963, %rd1961, %rd1962;
	xor.b64  	%rd1964, %rd1898, %rd1861;
	and.b64  	%rd1965, %rd1935, %rd1964;
	xor.b64  	%rd1966, %rd1965, %rd1861;
	add.s64 	%rd1967, %rd1966, %rd1824;
	add.s64 	%rd1968, %rd1967, %rd1963;
	ld.const.u64 	%rd1969, [%rd1699+56];
	add.s64 	%rd1970, %rd1968, %rd1969;
	add.s64 	%rd1971, %rd1970, %rd13534;
	add.s64 	%rd1972, %rd1971, %rd1835;
	and.b64  	%rd1973, %rd1946, %rd1909;
	or.b64  	%rd1974, %rd1946, %rd1909;
	and.b64  	%rd1975, %rd1974, %rd1872;
	or.b64  	%rd1976, %rd1975, %rd1973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r740,%dummy}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd1946;
	}
	shf.r.wrap.b32 	%r742, %r741, %r740, 28;
	shf.r.wrap.b32 	%r743, %r740, %r741, 28;
	mov.b64 	%rd1977, {%r743, %r742};
	shf.l.wrap.b32 	%r744, %r740, %r741, 30;
	shf.l.wrap.b32 	%r745, %r741, %r740, 30;
	mov.b64 	%rd1978, {%r745, %r744};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	shf.l.wrap.b32 	%r746, %r740, %r741, 25;
	shf.l.wrap.b32 	%r747, %r741, %r740, 25;
	mov.b64 	%rd1980, {%r747, %r746};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	add.s64 	%rd1982, %rd1981, %rd1976;
	add.s64 	%rd1983, %rd1982, %rd1971;
	add.s64 	%rd1984, %rd13540, %rd13533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r748,%dummy}, %rd13535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r749}, %rd13535;
	}
	shf.r.wrap.b32 	%r750, %r749, %r748, 19;
	shf.r.wrap.b32 	%r751, %r748, %r749, 19;
	mov.b64 	%rd1985, {%r751, %r750};
	shf.l.wrap.b32 	%r752, %r748, %r749, 3;
	shf.l.wrap.b32 	%r753, %r749, %r748, 3;
	mov.b64 	%rd1986, {%r753, %r752};
	xor.b64  	%rd1987, %rd1985, %rd1986;
	shr.u64 	%rd1988, %rd13535, 6;
	xor.b64  	%rd1989, %rd1987, %rd1988;
	add.s64 	%rd1990, %rd1984, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd13532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd13532;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 8;
	shf.r.wrap.b32 	%r757, %r754, %r755, 8;
	mov.b64 	%rd1991, {%r757, %r756};
	shf.r.wrap.b32 	%r758, %r755, %r754, 1;
	shf.r.wrap.b32 	%r759, %r754, %r755, 1;
	mov.b64 	%rd1992, {%r759, %r758};
	xor.b64  	%rd1993, %rd1992, %rd1991;
	shr.u64 	%rd1994, %rd13532, 7;
	xor.b64  	%rd1995, %rd1993, %rd1994;
	add.s64 	%rd13533, %rd1990, %rd1995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r760,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r761}, %rd1972;
	}
	shf.r.wrap.b32 	%r762, %r761, %r760, 14;
	shf.r.wrap.b32 	%r763, %r760, %r761, 14;
	mov.b64 	%rd1996, {%r763, %r762};
	shf.r.wrap.b32 	%r764, %r761, %r760, 18;
	shf.r.wrap.b32 	%r765, %r760, %r761, 18;
	mov.b64 	%rd1997, {%r765, %r764};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	shf.l.wrap.b32 	%r766, %r760, %r761, 23;
	shf.l.wrap.b32 	%r767, %r761, %r760, 23;
	mov.b64 	%rd1999, {%r767, %r766};
	xor.b64  	%rd2000, %rd1998, %rd1999;
	xor.b64  	%rd2001, %rd1935, %rd1898;
	and.b64  	%rd2002, %rd1972, %rd2001;
	xor.b64  	%rd2003, %rd2002, %rd1898;
	add.s64 	%rd2004, %rd2003, %rd1861;
	add.s64 	%rd2005, %rd2004, %rd2000;
	ld.const.u64 	%rd2006, [%rd1699+64];
	add.s64 	%rd2007, %rd2005, %rd2006;
	add.s64 	%rd2008, %rd2007, %rd13533;
	add.s64 	%rd2009, %rd2008, %rd1872;
	and.b64  	%rd2010, %rd1983, %rd1946;
	or.b64  	%rd2011, %rd1983, %rd1946;
	and.b64  	%rd2012, %rd2011, %rd1909;
	or.b64  	%rd2013, %rd2012, %rd2010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r768,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r769}, %rd1983;
	}
	shf.r.wrap.b32 	%r770, %r769, %r768, 28;
	shf.r.wrap.b32 	%r771, %r768, %r769, 28;
	mov.b64 	%rd2014, {%r771, %r770};
	shf.l.wrap.b32 	%r772, %r768, %r769, 30;
	shf.l.wrap.b32 	%r773, %r769, %r768, 30;
	mov.b64 	%rd2015, {%r773, %r772};
	xor.b64  	%rd2016, %rd2014, %rd2015;
	shf.l.wrap.b32 	%r774, %r768, %r769, 25;
	shf.l.wrap.b32 	%r775, %r769, %r768, 25;
	mov.b64 	%rd2017, {%r775, %r774};
	xor.b64  	%rd2018, %rd2016, %rd2017;
	add.s64 	%rd2019, %rd2018, %rd2013;
	add.s64 	%rd2020, %rd2019, %rd2008;
	add.s64 	%rd2021, %rd13539, %rd13532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r776,%dummy}, %rd13534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r777}, %rd13534;
	}
	shf.r.wrap.b32 	%r778, %r777, %r776, 19;
	shf.r.wrap.b32 	%r779, %r776, %r777, 19;
	mov.b64 	%rd2022, {%r779, %r778};
	shf.l.wrap.b32 	%r780, %r776, %r777, 3;
	shf.l.wrap.b32 	%r781, %r777, %r776, 3;
	mov.b64 	%rd2023, {%r781, %r780};
	xor.b64  	%rd2024, %rd2022, %rd2023;
	shr.u64 	%rd2025, %rd13534, 6;
	xor.b64  	%rd2026, %rd2024, %rd2025;
	add.s64 	%rd2027, %rd2021, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd13531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r783}, %rd13531;
	}
	shf.r.wrap.b32 	%r784, %r783, %r782, 8;
	shf.r.wrap.b32 	%r785, %r782, %r783, 8;
	mov.b64 	%rd2028, {%r785, %r784};
	shf.r.wrap.b32 	%r786, %r783, %r782, 1;
	shf.r.wrap.b32 	%r787, %r782, %r783, 1;
	mov.b64 	%rd2029, {%r787, %r786};
	xor.b64  	%rd2030, %rd2029, %rd2028;
	shr.u64 	%rd2031, %rd13531, 7;
	xor.b64  	%rd2032, %rd2030, %rd2031;
	add.s64 	%rd13532, %rd2027, %rd2032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r788,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r789}, %rd2009;
	}
	shf.r.wrap.b32 	%r790, %r789, %r788, 14;
	shf.r.wrap.b32 	%r791, %r788, %r789, 14;
	mov.b64 	%rd2033, {%r791, %r790};
	shf.r.wrap.b32 	%r792, %r789, %r788, 18;
	shf.r.wrap.b32 	%r793, %r788, %r789, 18;
	mov.b64 	%rd2034, {%r793, %r792};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	shf.l.wrap.b32 	%r794, %r788, %r789, 23;
	shf.l.wrap.b32 	%r795, %r789, %r788, 23;
	mov.b64 	%rd2036, {%r795, %r794};
	xor.b64  	%rd2037, %rd2035, %rd2036;
	xor.b64  	%rd2038, %rd1972, %rd1935;
	and.b64  	%rd2039, %rd2009, %rd2038;
	xor.b64  	%rd2040, %rd2039, %rd1935;
	add.s64 	%rd2041, %rd2040, %rd1898;
	add.s64 	%rd2042, %rd2041, %rd2037;
	ld.const.u64 	%rd2043, [%rd1699+72];
	add.s64 	%rd2044, %rd2042, %rd2043;
	add.s64 	%rd2045, %rd2044, %rd13532;
	add.s64 	%rd2046, %rd2045, %rd1909;
	and.b64  	%rd2047, %rd2020, %rd1983;
	or.b64  	%rd2048, %rd2020, %rd1983;
	and.b64  	%rd2049, %rd2048, %rd1946;
	or.b64  	%rd2050, %rd2049, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd2020;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 28;
	shf.r.wrap.b32 	%r799, %r796, %r797, 28;
	mov.b64 	%rd2051, {%r799, %r798};
	shf.l.wrap.b32 	%r800, %r796, %r797, 30;
	shf.l.wrap.b32 	%r801, %r797, %r796, 30;
	mov.b64 	%rd2052, {%r801, %r800};
	xor.b64  	%rd2053, %rd2051, %rd2052;
	shf.l.wrap.b32 	%r802, %r796, %r797, 25;
	shf.l.wrap.b32 	%r803, %r797, %r796, 25;
	mov.b64 	%rd2054, {%r803, %r802};
	xor.b64  	%rd2055, %rd2053, %rd2054;
	add.s64 	%rd2056, %rd2055, %rd2050;
	add.s64 	%rd2057, %rd2056, %rd2045;
	add.s64 	%rd2058, %rd13538, %rd13531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd13533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd13533;
	}
	shf.r.wrap.b32 	%r806, %r805, %r804, 19;
	shf.r.wrap.b32 	%r807, %r804, %r805, 19;
	mov.b64 	%rd2059, {%r807, %r806};
	shf.l.wrap.b32 	%r808, %r804, %r805, 3;
	shf.l.wrap.b32 	%r809, %r805, %r804, 3;
	mov.b64 	%rd2060, {%r809, %r808};
	xor.b64  	%rd2061, %rd2059, %rd2060;
	shr.u64 	%rd2062, %rd13533, 6;
	xor.b64  	%rd2063, %rd2061, %rd2062;
	add.s64 	%rd2064, %rd2058, %rd2063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd13530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r811}, %rd13530;
	}
	shf.r.wrap.b32 	%r812, %r811, %r810, 8;
	shf.r.wrap.b32 	%r813, %r810, %r811, 8;
	mov.b64 	%rd2065, {%r813, %r812};
	shf.r.wrap.b32 	%r814, %r811, %r810, 1;
	shf.r.wrap.b32 	%r815, %r810, %r811, 1;
	mov.b64 	%rd2066, {%r815, %r814};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shr.u64 	%rd2068, %rd13530, 7;
	xor.b64  	%rd2069, %rd2067, %rd2068;
	add.s64 	%rd13531, %rd2064, %rd2069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r816,%dummy}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r817}, %rd2046;
	}
	shf.r.wrap.b32 	%r818, %r817, %r816, 14;
	shf.r.wrap.b32 	%r819, %r816, %r817, 14;
	mov.b64 	%rd2070, {%r819, %r818};
	shf.r.wrap.b32 	%r820, %r817, %r816, 18;
	shf.r.wrap.b32 	%r821, %r816, %r817, 18;
	mov.b64 	%rd2071, {%r821, %r820};
	xor.b64  	%rd2072, %rd2070, %rd2071;
	shf.l.wrap.b32 	%r822, %r816, %r817, 23;
	shf.l.wrap.b32 	%r823, %r817, %r816, 23;
	mov.b64 	%rd2073, {%r823, %r822};
	xor.b64  	%rd2074, %rd2072, %rd2073;
	xor.b64  	%rd2075, %rd2009, %rd1972;
	and.b64  	%rd2076, %rd2046, %rd2075;
	xor.b64  	%rd2077, %rd2076, %rd1972;
	add.s64 	%rd2078, %rd2077, %rd1935;
	add.s64 	%rd2079, %rd2078, %rd2074;
	ld.const.u64 	%rd2080, [%rd1699+80];
	add.s64 	%rd2081, %rd2079, %rd2080;
	add.s64 	%rd2082, %rd2081, %rd13531;
	add.s64 	%rd2083, %rd2082, %rd1946;
	and.b64  	%rd2084, %rd2057, %rd2020;
	or.b64  	%rd2085, %rd2057, %rd2020;
	and.b64  	%rd2086, %rd2085, %rd1983;
	or.b64  	%rd2087, %rd2086, %rd2084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r824,%dummy}, %rd2057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r825}, %rd2057;
	}
	shf.r.wrap.b32 	%r826, %r825, %r824, 28;
	shf.r.wrap.b32 	%r827, %r824, %r825, 28;
	mov.b64 	%rd2088, {%r827, %r826};
	shf.l.wrap.b32 	%r828, %r824, %r825, 30;
	shf.l.wrap.b32 	%r829, %r825, %r824, 30;
	mov.b64 	%rd2089, {%r829, %r828};
	xor.b64  	%rd2090, %rd2088, %rd2089;
	shf.l.wrap.b32 	%r830, %r824, %r825, 25;
	shf.l.wrap.b32 	%r831, %r825, %r824, 25;
	mov.b64 	%rd2091, {%r831, %r830};
	xor.b64  	%rd2092, %rd2090, %rd2091;
	add.s64 	%rd2093, %rd2092, %rd2087;
	add.s64 	%rd2094, %rd2093, %rd2082;
	add.s64 	%rd2095, %rd13537, %rd13530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r832,%dummy}, %rd13532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd13532;
	}
	shf.r.wrap.b32 	%r834, %r833, %r832, 19;
	shf.r.wrap.b32 	%r835, %r832, %r833, 19;
	mov.b64 	%rd2096, {%r835, %r834};
	shf.l.wrap.b32 	%r836, %r832, %r833, 3;
	shf.l.wrap.b32 	%r837, %r833, %r832, 3;
	mov.b64 	%rd2097, {%r837, %r836};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	shr.u64 	%rd2099, %rd13532, 6;
	xor.b64  	%rd2100, %rd2098, %rd2099;
	add.s64 	%rd2101, %rd2095, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd13529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd13529;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 8;
	shf.r.wrap.b32 	%r841, %r838, %r839, 8;
	mov.b64 	%rd2102, {%r841, %r840};
	shf.r.wrap.b32 	%r842, %r839, %r838, 1;
	shf.r.wrap.b32 	%r843, %r838, %r839, 1;
	mov.b64 	%rd2103, {%r843, %r842};
	xor.b64  	%rd2104, %rd2103, %rd2102;
	shr.u64 	%rd2105, %rd13529, 7;
	xor.b64  	%rd2106, %rd2104, %rd2105;
	add.s64 	%rd13530, %rd2101, %rd2106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r844,%dummy}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd2083;
	}
	shf.r.wrap.b32 	%r846, %r845, %r844, 14;
	shf.r.wrap.b32 	%r847, %r844, %r845, 14;
	mov.b64 	%rd2107, {%r847, %r846};
	shf.r.wrap.b32 	%r848, %r845, %r844, 18;
	shf.r.wrap.b32 	%r849, %r844, %r845, 18;
	mov.b64 	%rd2108, {%r849, %r848};
	xor.b64  	%rd2109, %rd2107, %rd2108;
	shf.l.wrap.b32 	%r850, %r844, %r845, 23;
	shf.l.wrap.b32 	%r851, %r845, %r844, 23;
	mov.b64 	%rd2110, {%r851, %r850};
	xor.b64  	%rd2111, %rd2109, %rd2110;
	xor.b64  	%rd2112, %rd2046, %rd2009;
	and.b64  	%rd2113, %rd2083, %rd2112;
	xor.b64  	%rd2114, %rd2113, %rd2009;
	add.s64 	%rd2115, %rd2114, %rd1972;
	add.s64 	%rd2116, %rd2115, %rd2111;
	ld.const.u64 	%rd2117, [%rd1699+88];
	add.s64 	%rd2118, %rd2116, %rd2117;
	add.s64 	%rd2119, %rd2118, %rd13530;
	add.s64 	%rd2120, %rd2119, %rd1983;
	and.b64  	%rd2121, %rd2094, %rd2057;
	or.b64  	%rd2122, %rd2094, %rd2057;
	and.b64  	%rd2123, %rd2122, %rd2020;
	or.b64  	%rd2124, %rd2123, %rd2121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd2094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd2094;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 28;
	shf.r.wrap.b32 	%r855, %r852, %r853, 28;
	mov.b64 	%rd2125, {%r855, %r854};
	shf.l.wrap.b32 	%r856, %r852, %r853, 30;
	shf.l.wrap.b32 	%r857, %r853, %r852, 30;
	mov.b64 	%rd2126, {%r857, %r856};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	shf.l.wrap.b32 	%r858, %r852, %r853, 25;
	shf.l.wrap.b32 	%r859, %r853, %r852, 25;
	mov.b64 	%rd2128, {%r859, %r858};
	xor.b64  	%rd2129, %rd2127, %rd2128;
	add.s64 	%rd2130, %rd2129, %rd2124;
	add.s64 	%rd2131, %rd2130, %rd2119;
	add.s64 	%rd2132, %rd13536, %rd13529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd13531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd13531;
	}
	shf.r.wrap.b32 	%r862, %r861, %r860, 19;
	shf.r.wrap.b32 	%r863, %r860, %r861, 19;
	mov.b64 	%rd2133, {%r863, %r862};
	shf.l.wrap.b32 	%r864, %r860, %r861, 3;
	shf.l.wrap.b32 	%r865, %r861, %r860, 3;
	mov.b64 	%rd2134, {%r865, %r864};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	shr.u64 	%rd2136, %rd13531, 6;
	xor.b64  	%rd2137, %rd2135, %rd2136;
	add.s64 	%rd2138, %rd2132, %rd2137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r866,%dummy}, %rd13528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r867}, %rd13528;
	}
	shf.r.wrap.b32 	%r868, %r867, %r866, 8;
	shf.r.wrap.b32 	%r869, %r866, %r867, 8;
	mov.b64 	%rd2139, {%r869, %r868};
	shf.r.wrap.b32 	%r870, %r867, %r866, 1;
	shf.r.wrap.b32 	%r871, %r866, %r867, 1;
	mov.b64 	%rd2140, {%r871, %r870};
	xor.b64  	%rd2141, %rd2140, %rd2139;
	shr.u64 	%rd2142, %rd13528, 7;
	xor.b64  	%rd2143, %rd2141, %rd2142;
	add.s64 	%rd13529, %rd2138, %rd2143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r872,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r873}, %rd2120;
	}
	shf.r.wrap.b32 	%r874, %r873, %r872, 14;
	shf.r.wrap.b32 	%r875, %r872, %r873, 14;
	mov.b64 	%rd2144, {%r875, %r874};
	shf.r.wrap.b32 	%r876, %r873, %r872, 18;
	shf.r.wrap.b32 	%r877, %r872, %r873, 18;
	mov.b64 	%rd2145, {%r877, %r876};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	shf.l.wrap.b32 	%r878, %r872, %r873, 23;
	shf.l.wrap.b32 	%r879, %r873, %r872, 23;
	mov.b64 	%rd2147, {%r879, %r878};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	xor.b64  	%rd2149, %rd2083, %rd2046;
	and.b64  	%rd2150, %rd2120, %rd2149;
	xor.b64  	%rd2151, %rd2150, %rd2046;
	add.s64 	%rd2152, %rd2151, %rd2009;
	add.s64 	%rd2153, %rd2152, %rd2148;
	ld.const.u64 	%rd2154, [%rd1699+96];
	add.s64 	%rd2155, %rd2153, %rd2154;
	add.s64 	%rd2156, %rd2155, %rd13529;
	add.s64 	%rd13549, %rd2156, %rd2020;
	and.b64  	%rd2157, %rd2131, %rd2094;
	or.b64  	%rd2158, %rd2131, %rd2094;
	and.b64  	%rd2159, %rd2158, %rd2057;
	or.b64  	%rd2160, %rd2159, %rd2157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r880,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r881}, %rd2131;
	}
	shf.r.wrap.b32 	%r882, %r881, %r880, 28;
	shf.r.wrap.b32 	%r883, %r880, %r881, 28;
	mov.b64 	%rd2161, {%r883, %r882};
	shf.l.wrap.b32 	%r884, %r880, %r881, 30;
	shf.l.wrap.b32 	%r885, %r881, %r880, 30;
	mov.b64 	%rd2162, {%r885, %r884};
	xor.b64  	%rd2163, %rd2161, %rd2162;
	shf.l.wrap.b32 	%r886, %r880, %r881, 25;
	shf.l.wrap.b32 	%r887, %r881, %r880, 25;
	mov.b64 	%rd2164, {%r887, %r886};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	add.s64 	%rd2166, %rd2165, %rd2160;
	add.s64 	%rd13545, %rd2166, %rd2156;
	add.s64 	%rd2167, %rd13535, %rd13528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r888,%dummy}, %rd13530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd13530;
	}
	shf.r.wrap.b32 	%r890, %r889, %r888, 19;
	shf.r.wrap.b32 	%r891, %r888, %r889, 19;
	mov.b64 	%rd2168, {%r891, %r890};
	shf.l.wrap.b32 	%r892, %r888, %r889, 3;
	shf.l.wrap.b32 	%r893, %r889, %r888, 3;
	mov.b64 	%rd2169, {%r893, %r892};
	xor.b64  	%rd2170, %rd2168, %rd2169;
	shr.u64 	%rd2171, %rd13530, 6;
	xor.b64  	%rd2172, %rd2170, %rd2171;
	add.s64 	%rd2173, %rd2167, %rd2172;
	shf.r.wrap.b32 	%r894, %r524, %r525, 8;
	shf.r.wrap.b32 	%r895, %r525, %r524, 8;
	mov.b64 	%rd2174, {%r895, %r894};
	shf.r.wrap.b32 	%r896, %r524, %r525, 1;
	shf.r.wrap.b32 	%r897, %r525, %r524, 1;
	mov.b64 	%rd2175, {%r897, %r896};
	xor.b64  	%rd2176, %rd2175, %rd2174;
	shr.u64 	%rd2177, %rd13527, 7;
	xor.b64  	%rd2178, %rd2176, %rd2177;
	add.s64 	%rd13528, %rd2173, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd13549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r899}, %rd13549;
	}
	shf.r.wrap.b32 	%r900, %r899, %r898, 14;
	shf.r.wrap.b32 	%r901, %r898, %r899, 14;
	mov.b64 	%rd2179, {%r901, %r900};
	shf.r.wrap.b32 	%r902, %r899, %r898, 18;
	shf.r.wrap.b32 	%r903, %r898, %r899, 18;
	mov.b64 	%rd2180, {%r903, %r902};
	xor.b64  	%rd2181, %rd2179, %rd2180;
	shf.l.wrap.b32 	%r904, %r898, %r899, 23;
	shf.l.wrap.b32 	%r905, %r899, %r898, 23;
	mov.b64 	%rd2182, {%r905, %r904};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	xor.b64  	%rd2184, %rd2120, %rd2083;
	and.b64  	%rd2185, %rd13549, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2083;
	add.s64 	%rd2187, %rd2186, %rd2046;
	add.s64 	%rd2188, %rd2187, %rd2183;
	ld.const.u64 	%rd2189, [%rd1699+104];
	add.s64 	%rd2190, %rd2188, %rd2189;
	add.s64 	%rd2191, %rd2190, %rd13528;
	add.s64 	%rd13548, %rd2191, %rd2057;
	and.b64  	%rd2192, %rd13545, %rd2131;
	or.b64  	%rd2193, %rd13545, %rd2131;
	and.b64  	%rd2194, %rd2193, %rd2094;
	or.b64  	%rd2195, %rd2194, %rd2192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd13545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r907}, %rd13545;
	}
	shf.r.wrap.b32 	%r908, %r907, %r906, 28;
	shf.r.wrap.b32 	%r909, %r906, %r907, 28;
	mov.b64 	%rd2196, {%r909, %r908};
	shf.l.wrap.b32 	%r910, %r906, %r907, 30;
	shf.l.wrap.b32 	%r911, %r907, %r906, 30;
	mov.b64 	%rd2197, {%r911, %r910};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	shf.l.wrap.b32 	%r912, %r906, %r907, 25;
	shf.l.wrap.b32 	%r913, %r907, %r906, 25;
	mov.b64 	%rd2199, {%r913, %r912};
	xor.b64  	%rd2200, %rd2198, %rd2199;
	add.s64 	%rd2201, %rd2200, %rd2195;
	add.s64 	%rd13544, %rd2201, %rd2191;
	add.s64 	%rd2202, %rd13534, %rd13527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r914,%dummy}, %rd13529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r915}, %rd13529;
	}
	shf.r.wrap.b32 	%r916, %r915, %r914, 19;
	shf.r.wrap.b32 	%r917, %r914, %r915, 19;
	mov.b64 	%rd2203, {%r917, %r916};
	shf.l.wrap.b32 	%r918, %r914, %r915, 3;
	shf.l.wrap.b32 	%r919, %r915, %r914, 3;
	mov.b64 	%rd2204, {%r919, %r918};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	shr.u64 	%rd2206, %rd13529, 6;
	xor.b64  	%rd2207, %rd2205, %rd2206;
	add.s64 	%rd2208, %rd2202, %rd2207;
	shf.r.wrap.b32 	%r920, %r552, %r553, 8;
	shf.r.wrap.b32 	%r921, %r553, %r552, 8;
	mov.b64 	%rd2209, {%r921, %r920};
	shf.r.wrap.b32 	%r922, %r552, %r553, 1;
	shf.r.wrap.b32 	%r923, %r553, %r552, 1;
	mov.b64 	%rd2210, {%r923, %r922};
	xor.b64  	%rd2211, %rd2210, %rd2209;
	shr.u64 	%rd2212, %rd13526, 7;
	xor.b64  	%rd2213, %rd2211, %rd2212;
	add.s64 	%rd13527, %rd2208, %rd2213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd13548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd13548;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 14;
	shf.r.wrap.b32 	%r927, %r924, %r925, 14;
	mov.b64 	%rd2214, {%r927, %r926};
	shf.r.wrap.b32 	%r928, %r925, %r924, 18;
	shf.r.wrap.b32 	%r929, %r924, %r925, 18;
	mov.b64 	%rd2215, {%r929, %r928};
	xor.b64  	%rd2216, %rd2214, %rd2215;
	shf.l.wrap.b32 	%r930, %r924, %r925, 23;
	shf.l.wrap.b32 	%r931, %r925, %r924, 23;
	mov.b64 	%rd2217, {%r931, %r930};
	xor.b64  	%rd2218, %rd2216, %rd2217;
	xor.b64  	%rd2219, %rd13549, %rd2120;
	and.b64  	%rd2220, %rd13548, %rd2219;
	xor.b64  	%rd2221, %rd2220, %rd2120;
	add.s64 	%rd2222, %rd2221, %rd2083;
	add.s64 	%rd2223, %rd2222, %rd2218;
	ld.const.u64 	%rd2224, [%rd1699+112];
	add.s64 	%rd2225, %rd2223, %rd2224;
	add.s64 	%rd2226, %rd2225, %rd13527;
	add.s64 	%rd13547, %rd2226, %rd2094;
	and.b64  	%rd2227, %rd13544, %rd13545;
	or.b64  	%rd2228, %rd13544, %rd13545;
	and.b64  	%rd2229, %rd2228, %rd2131;
	or.b64  	%rd2230, %rd2229, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r932,%dummy}, %rd13544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd13544;
	}
	shf.r.wrap.b32 	%r934, %r933, %r932, 28;
	shf.r.wrap.b32 	%r935, %r932, %r933, 28;
	mov.b64 	%rd2231, {%r935, %r934};
	shf.l.wrap.b32 	%r936, %r932, %r933, 30;
	shf.l.wrap.b32 	%r937, %r933, %r932, 30;
	mov.b64 	%rd2232, {%r937, %r936};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	shf.l.wrap.b32 	%r938, %r932, %r933, 25;
	shf.l.wrap.b32 	%r939, %r933, %r932, 25;
	mov.b64 	%rd2234, {%r939, %r938};
	xor.b64  	%rd2235, %rd2233, %rd2234;
	add.s64 	%rd2236, %rd2235, %rd2230;
	add.s64 	%rd13543, %rd2236, %rd2226;
	add.s64 	%rd2237, %rd13533, %rd13526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd13528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd13528;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 19;
	shf.r.wrap.b32 	%r943, %r940, %r941, 19;
	mov.b64 	%rd2238, {%r943, %r942};
	shf.l.wrap.b32 	%r944, %r940, %r941, 3;
	shf.l.wrap.b32 	%r945, %r941, %r940, 3;
	mov.b64 	%rd2239, {%r945, %r944};
	xor.b64  	%rd2240, %rd2238, %rd2239;
	shr.u64 	%rd2241, %rd13528, 6;
	xor.b64  	%rd2242, %rd2240, %rd2241;
	add.s64 	%rd2243, %rd2237, %rd2242;
	shf.r.wrap.b32 	%r946, %r581, %r580, 1;
	shf.r.wrap.b32 	%r947, %r580, %r581, 1;
	mov.b64 	%rd2244, {%r947, %r946};
	shf.r.wrap.b32 	%r948, %r581, %r580, 8;
	shf.r.wrap.b32 	%r949, %r580, %r581, 8;
	mov.b64 	%rd2245, {%r949, %r948};
	xor.b64  	%rd2246, %rd2244, %rd2245;
	shr.u64 	%rd2247, %rd13541, 7;
	xor.b64  	%rd2248, %rd2246, %rd2247;
	add.s64 	%rd13526, %rd2243, %rd2248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd13547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd13547;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 14;
	shf.r.wrap.b32 	%r953, %r950, %r951, 14;
	mov.b64 	%rd2249, {%r953, %r952};
	shf.r.wrap.b32 	%r954, %r951, %r950, 18;
	shf.r.wrap.b32 	%r955, %r950, %r951, 18;
	mov.b64 	%rd2250, {%r955, %r954};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	shf.l.wrap.b32 	%r956, %r950, %r951, 23;
	shf.l.wrap.b32 	%r957, %r951, %r950, 23;
	mov.b64 	%rd2252, {%r957, %r956};
	xor.b64  	%rd2253, %rd2251, %rd2252;
	xor.b64  	%rd2254, %rd13548, %rd13549;
	and.b64  	%rd2255, %rd13547, %rd2254;
	xor.b64  	%rd2256, %rd2255, %rd13549;
	add.s64 	%rd2257, %rd2256, %rd2120;
	add.s64 	%rd2258, %rd2257, %rd2253;
	ld.const.u64 	%rd2259, [%rd1699+120];
	add.s64 	%rd2260, %rd2258, %rd2259;
	add.s64 	%rd2261, %rd2260, %rd13526;
	add.s64 	%rd13546, %rd2261, %rd2131;
	and.b64  	%rd2262, %rd13543, %rd13544;
	or.b64  	%rd2263, %rd13543, %rd13544;
	and.b64  	%rd2264, %rd2263, %rd13545;
	or.b64  	%rd2265, %rd2264, %rd2262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd13543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd13543;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 28;
	shf.r.wrap.b32 	%r961, %r958, %r959, 28;
	mov.b64 	%rd2266, {%r961, %r960};
	shf.l.wrap.b32 	%r962, %r958, %r959, 30;
	shf.l.wrap.b32 	%r963, %r959, %r958, 30;
	mov.b64 	%rd2267, {%r963, %r962};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	shf.l.wrap.b32 	%r964, %r958, %r959, 25;
	shf.l.wrap.b32 	%r965, %r959, %r958, 25;
	mov.b64 	%rd2269, {%r965, %r964};
	xor.b64  	%rd2270, %rd2268, %rd2269;
	add.s64 	%rd2271, %rd2270, %rd2265;
	add.s64 	%rd13542, %rd2271, %rd2261;
	add.s32 	%r9702, %r9702, 16;
	setp.lt.u32 	%p17, %r9702, 80;
	@%p17 bra 	$L__BB0_25;

	add.s32 	%r9684, %r2, %r9;
	add.s32 	%r966, %r9684, %r2;
	setp.lt.u32 	%p18, %r966, 128;
	add.s64 	%rd13573, %rd13542, 7640891576956012808;
	mov.u64 	%rd13551, 0;
	st.local.u64 	[%rd2+-72], %rd13573;
	add.s64 	%rd13572, %rd13543, -4942790177534073029;
	st.local.u64 	[%rd2+-64], %rd13572;
	add.s64 	%rd13571, %rd13544, 4354685564936845355;
	st.local.u64 	[%rd2+-56], %rd13571;
	add.s64 	%rd13570, %rd13545, -6534734903238641935;
	st.local.u64 	[%rd2+-48], %rd13570;
	add.s64 	%rd13569, %rd13546, 5840696475078001361;
	st.local.u64 	[%rd2+-40], %rd13569;
	add.s64 	%rd13568, %rd13547, -7276294671716946913;
	st.local.u64 	[%rd2+-32], %rd13568;
	add.s64 	%rd13567, %rd13548, 2270897969802886507;
	st.local.u64 	[%rd2+-24], %rd13567;
	add.s64 	%rd13566, %rd13549, 6620516959819538809;
	st.local.u64 	[%rd2+-16], %rd13566;
	st.local.u64 	[%rd2], %rd13551;
	st.local.u64 	[%rd2+8], %rd13551;
	st.local.u64 	[%rd2+16], %rd13551;
	st.local.u64 	[%rd2+24], %rd13551;
	st.local.u64 	[%rd2+32], %rd13551;
	st.local.u64 	[%rd2+40], %rd13551;
	st.local.u64 	[%rd2+48], %rd13551;
	st.local.u64 	[%rd2+56], %rd13551;
	st.local.u64 	[%rd2+64], %rd13551;
	st.local.u64 	[%rd2+72], %rd13551;
	st.local.u64 	[%rd2+80], %rd13551;
	st.local.u64 	[%rd2+88], %rd13551;
	st.local.u64 	[%rd2+96], %rd13551;
	st.local.u64 	[%rd2+104], %rd13551;
	st.local.u64 	[%rd2+112], %rd13551;
	st.local.u64 	[%rd2+120], %rd13551;
	mov.u32 	%r967, 0;
	st.local.u32 	[%rd2+-4], %r967;
	mov.u64 	%rd13565, %rd13551;
	@%p18 bra 	$L__BB0_28;

	mov.u64 	%rd13565, 128;
	st.local.u64 	[%rd2], %rd13565;

$L__BB0_28:
	shl.b32 	%r969, %r966, 3;
	cvt.u64.u32 	%rd2288, %r966;
	shl.b64 	%rd2289, %rd2288, 59;
	shl.b64 	%rd2290, %rd2288, 43;
	and.b64  	%rd2291, %rd2290, 71776119061217280;
	or.b64  	%rd2292, %rd2291, %rd2289;
	cvt.u64.u32 	%rd2293, %r969;
	shl.b64 	%rd2294, %rd2293, 24;
	and.b64  	%rd2295, %rd2294, 280375465082880;
	or.b64  	%rd2296, %rd2292, %rd2295;
	shl.b64 	%rd2297, %rd2293, 8;
	and.b64  	%rd2298, %rd2297, 1095216660480;
	or.b64  	%rd2299, %rd2296, %rd2298;
	st.local.u64 	[%rd2+120], %rd2299;
	mov.u64 	%rd13552, %rd13551;
	mov.u64 	%rd13553, %rd13551;
	mov.u64 	%rd13554, %rd13551;
	mov.u64 	%rd13555, %rd13551;
	mov.u64 	%rd13556, %rd13551;
	mov.u64 	%rd13557, %rd13551;
	mov.u64 	%rd13558, %rd13551;
	mov.u64 	%rd13559, %rd13551;
	mov.u64 	%rd13560, %rd13551;
	mov.u64 	%rd13561, %rd13551;
	mov.u64 	%rd13562, %rd13551;
	mov.u64 	%rd13563, %rd13551;
	mov.u64 	%rd13564, %rd13551;

$L__BB0_30:
	add.s32 	%r9687, %r2, %r9;
	add.s32 	%r9686, %r9687, %r2;
	shl.b32 	%r9685, %r9686, 3;
	cvt.u64.u32 	%rd13574, %r9685;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r976, %temp}, %rd13565;
	}
	mov.u32 	%r977, 291;
	mov.u32 	%r978, 0;
	prmt.b32 	%r979, %r976, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r980}, %rd13565;
	}
	prmt.b32 	%r981, %r980, %r978, %r977;
	mov.b64 	%rd13589, {%r981, %r979};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r982, %temp}, %rd13564;
	}
	prmt.b32 	%r983, %r982, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r984}, %rd13564;
	}
	prmt.b32 	%r985, %r984, %r978, %r977;
	mov.b64 	%rd13588, {%r985, %r983};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r986, %temp}, %rd13563;
	}
	prmt.b32 	%r987, %r986, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r988}, %rd13563;
	}
	prmt.b32 	%r989, %r988, %r978, %r977;
	mov.b64 	%rd13587, {%r989, %r987};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r990, %temp}, %rd13562;
	}
	prmt.b32 	%r991, %r990, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r992}, %rd13562;
	}
	prmt.b32 	%r993, %r992, %r978, %r977;
	mov.b64 	%rd13586, {%r993, %r991};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r994, %temp}, %rd13561;
	}
	prmt.b32 	%r995, %r994, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r996}, %rd13561;
	}
	prmt.b32 	%r997, %r996, %r978, %r977;
	mov.b64 	%rd13585, {%r997, %r995};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r998, %temp}, %rd13560;
	}
	prmt.b32 	%r999, %r998, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1000}, %rd13560;
	}
	prmt.b32 	%r1001, %r1000, %r978, %r977;
	mov.b64 	%rd13584, {%r1001, %r999};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1002, %temp}, %rd13559;
	}
	prmt.b32 	%r1003, %r1002, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1004}, %rd13559;
	}
	prmt.b32 	%r1005, %r1004, %r978, %r977;
	mov.b64 	%rd13583, {%r1005, %r1003};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1006, %temp}, %rd13558;
	}
	prmt.b32 	%r1007, %r1006, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1008}, %rd13558;
	}
	prmt.b32 	%r1009, %r1008, %r978, %r977;
	mov.b64 	%rd13582, {%r1009, %r1007};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1010, %temp}, %rd13557;
	}
	prmt.b32 	%r1011, %r1010, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1012}, %rd13557;
	}
	prmt.b32 	%r1013, %r1012, %r978, %r977;
	mov.b64 	%rd13581, {%r1013, %r1011};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1014, %temp}, %rd13556;
	}
	prmt.b32 	%r1015, %r1014, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1016}, %rd13556;
	}
	prmt.b32 	%r1017, %r1016, %r978, %r977;
	mov.b64 	%rd13580, {%r1017, %r1015};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1018, %temp}, %rd13555;
	}
	prmt.b32 	%r1019, %r1018, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1020}, %rd13555;
	}
	prmt.b32 	%r1021, %r1020, %r978, %r977;
	mov.b64 	%rd13579, {%r1021, %r1019};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1022, %temp}, %rd13554;
	}
	prmt.b32 	%r1023, %r1022, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1024}, %rd13554;
	}
	prmt.b32 	%r1025, %r1024, %r978, %r977;
	mov.b64 	%rd13578, {%r1025, %r1023};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1026, %temp}, %rd13553;
	}
	prmt.b32 	%r1027, %r1026, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1028}, %rd13553;
	}
	prmt.b32 	%r1029, %r1028, %r978, %r977;
	mov.b64 	%rd13577, {%r1029, %r1027};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1030, %temp}, %rd13552;
	}
	prmt.b32 	%r1031, %r1030, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1032}, %rd13552;
	}
	prmt.b32 	%r1033, %r1032, %r978, %r977;
	mov.b64 	%rd13576, {%r1033, %r1031};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1034, %temp}, %rd13551;
	}
	prmt.b32 	%r1035, %r1034, %r978, %r977;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1036}, %rd13551;
	}
	prmt.b32 	%r1037, %r1036, %r978, %r977;
	mov.b64 	%rd13575, {%r1037, %r1035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd13569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd13569;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 18;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 18;
	mov.b64 	%rd2324, {%r1041, %r1040};
	shf.r.wrap.b32 	%r1042, %r1039, %r1038, 14;
	shf.r.wrap.b32 	%r1043, %r1038, %r1039, 14;
	mov.b64 	%rd2325, {%r1043, %r1042};
	xor.b64  	%rd2326, %rd2325, %rd2324;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 23;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 23;
	mov.b64 	%rd2327, {%r1045, %r1044};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	xor.b64  	%rd2329, %rd13568, %rd13567;
	and.b64  	%rd2330, %rd13569, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd13567;
	add.s64 	%rd2332, %rd2331, %rd13566;
	add.s64 	%rd2333, %rd2332, %rd2328;
	add.s64 	%rd2334, %rd2333, %rd13589;
	add.s64 	%rd2335, %rd2334, 4794697086780616226;
	add.s64 	%rd2336, %rd2335, %rd13570;
	or.b64  	%rd2337, %rd13573, %rd13572;
	and.b64  	%rd2338, %rd2337, %rd13571;
	and.b64  	%rd2339, %rd13573, %rd13572;
	or.b64  	%rd2340, %rd2338, %rd2339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd13573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd13573;
	}
	shf.l.wrap.b32 	%r1048, %r1047, %r1046, 30;
	shf.l.wrap.b32 	%r1049, %r1046, %r1047, 30;
	mov.b64 	%rd2341, {%r1049, %r1048};
	shf.r.wrap.b32 	%r1050, %r1046, %r1047, 28;
	shf.r.wrap.b32 	%r1051, %r1047, %r1046, 28;
	mov.b64 	%rd2342, {%r1051, %r1050};
	xor.b64  	%rd2343, %rd2342, %rd2341;
	shf.l.wrap.b32 	%r1052, %r1047, %r1046, 25;
	shf.l.wrap.b32 	%r1053, %r1046, %r1047, 25;
	mov.b64 	%rd2344, {%r1053, %r1052};
	xor.b64  	%rd2345, %rd2343, %rd2344;
	add.s64 	%rd2346, %rd2345, %rd2340;
	add.s64 	%rd2347, %rd2346, %rd2335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd2336;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 14;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 14;
	mov.b64 	%rd2348, {%r1057, %r1056};
	shf.r.wrap.b32 	%r1058, %r1055, %r1054, 18;
	shf.r.wrap.b32 	%r1059, %r1054, %r1055, 18;
	mov.b64 	%rd2349, {%r1059, %r1058};
	xor.b64  	%rd2350, %rd2348, %rd2349;
	shf.l.wrap.b32 	%r1060, %r1054, %r1055, 23;
	shf.l.wrap.b32 	%r1061, %r1055, %r1054, 23;
	mov.b64 	%rd2351, {%r1061, %r1060};
	xor.b64  	%rd2352, %rd2350, %rd2351;
	xor.b64  	%rd2353, %rd13569, %rd13568;
	and.b64  	%rd2354, %rd2336, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd13568;
	add.s64 	%rd2356, %rd2355, %rd13567;
	add.s64 	%rd2357, %rd2356, %rd2352;
	add.s64 	%rd2358, %rd2357, %rd13588;
	add.s64 	%rd2359, %rd2358, 8158064640168781261;
	add.s64 	%rd2360, %rd2359, %rd13571;
	and.b64  	%rd2361, %rd2347, %rd13573;
	or.b64  	%rd2362, %rd2347, %rd13573;
	and.b64  	%rd2363, %rd2362, %rd13572;
	or.b64  	%rd2364, %rd2363, %rd2361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1063}, %rd2347;
	}
	shf.r.wrap.b32 	%r1064, %r1063, %r1062, 28;
	shf.r.wrap.b32 	%r1065, %r1062, %r1063, 28;
	mov.b64 	%rd2365, {%r1065, %r1064};
	shf.l.wrap.b32 	%r1066, %r1062, %r1063, 30;
	shf.l.wrap.b32 	%r1067, %r1063, %r1062, 30;
	mov.b64 	%rd2366, {%r1067, %r1066};
	xor.b64  	%rd2367, %rd2365, %rd2366;
	shf.l.wrap.b32 	%r1068, %r1062, %r1063, 25;
	shf.l.wrap.b32 	%r1069, %r1063, %r1062, 25;
	mov.b64 	%rd2368, {%r1069, %r1068};
	xor.b64  	%rd2369, %rd2367, %rd2368;
	add.s64 	%rd2370, %rd2369, %rd2364;
	add.s64 	%rd2371, %rd2370, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd2360;
	}
	shf.r.wrap.b32 	%r1072, %r1071, %r1070, 14;
	shf.r.wrap.b32 	%r1073, %r1070, %r1071, 14;
	mov.b64 	%rd2372, {%r1073, %r1072};
	shf.r.wrap.b32 	%r1074, %r1071, %r1070, 18;
	shf.r.wrap.b32 	%r1075, %r1070, %r1071, 18;
	mov.b64 	%rd2373, {%r1075, %r1074};
	xor.b64  	%rd2374, %rd2372, %rd2373;
	shf.l.wrap.b32 	%r1076, %r1070, %r1071, 23;
	shf.l.wrap.b32 	%r1077, %r1071, %r1070, 23;
	mov.b64 	%rd2375, {%r1077, %r1076};
	xor.b64  	%rd2376, %rd2374, %rd2375;
	xor.b64  	%rd2377, %rd2336, %rd13569;
	and.b64  	%rd2378, %rd2360, %rd2377;
	xor.b64  	%rd2379, %rd2378, %rd13569;
	add.s64 	%rd2380, %rd2379, %rd13568;
	add.s64 	%rd2381, %rd2380, %rd2376;
	add.s64 	%rd2382, %rd2381, %rd13587;
	add.s64 	%rd2383, %rd2382, -5349999486874862801;
	add.s64 	%rd2384, %rd2383, %rd13572;
	and.b64  	%rd2385, %rd2371, %rd2347;
	or.b64  	%rd2386, %rd2371, %rd2347;
	and.b64  	%rd2387, %rd2386, %rd13573;
	or.b64  	%rd2388, %rd2387, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd2371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1079}, %rd2371;
	}
	shf.r.wrap.b32 	%r1080, %r1079, %r1078, 28;
	shf.r.wrap.b32 	%r1081, %r1078, %r1079, 28;
	mov.b64 	%rd2389, {%r1081, %r1080};
	shf.l.wrap.b32 	%r1082, %r1078, %r1079, 30;
	shf.l.wrap.b32 	%r1083, %r1079, %r1078, 30;
	mov.b64 	%rd2390, {%r1083, %r1082};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	shf.l.wrap.b32 	%r1084, %r1078, %r1079, 25;
	shf.l.wrap.b32 	%r1085, %r1079, %r1078, 25;
	mov.b64 	%rd2392, {%r1085, %r1084};
	xor.b64  	%rd2393, %rd2391, %rd2392;
	add.s64 	%rd2394, %rd2393, %rd2388;
	add.s64 	%rd2395, %rd2394, %rd2383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1086,%dummy}, %rd2384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1087}, %rd2384;
	}
	shf.r.wrap.b32 	%r1088, %r1087, %r1086, 14;
	shf.r.wrap.b32 	%r1089, %r1086, %r1087, 14;
	mov.b64 	%rd2396, {%r1089, %r1088};
	shf.r.wrap.b32 	%r1090, %r1087, %r1086, 18;
	shf.r.wrap.b32 	%r1091, %r1086, %r1087, 18;
	mov.b64 	%rd2397, {%r1091, %r1090};
	xor.b64  	%rd2398, %rd2396, %rd2397;
	shf.l.wrap.b32 	%r1092, %r1086, %r1087, 23;
	shf.l.wrap.b32 	%r1093, %r1087, %r1086, 23;
	mov.b64 	%rd2399, {%r1093, %r1092};
	xor.b64  	%rd2400, %rd2398, %rd2399;
	xor.b64  	%rd2401, %rd2360, %rd2336;
	and.b64  	%rd2402, %rd2384, %rd2401;
	xor.b64  	%rd2403, %rd2402, %rd2336;
	add.s64 	%rd2404, %rd2403, %rd13569;
	add.s64 	%rd2405, %rd2404, %rd2400;
	add.s64 	%rd2406, %rd2405, %rd13586;
	add.s64 	%rd2407, %rd2406, -1606136188198331460;
	add.s64 	%rd2408, %rd2407, %rd13573;
	and.b64  	%rd2409, %rd2395, %rd2371;
	or.b64  	%rd2410, %rd2395, %rd2371;
	and.b64  	%rd2411, %rd2410, %rd2347;
	or.b64  	%rd2412, %rd2411, %rd2409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1094,%dummy}, %rd2395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1095}, %rd2395;
	}
	shf.r.wrap.b32 	%r1096, %r1095, %r1094, 28;
	shf.r.wrap.b32 	%r1097, %r1094, %r1095, 28;
	mov.b64 	%rd2413, {%r1097, %r1096};
	shf.l.wrap.b32 	%r1098, %r1094, %r1095, 30;
	shf.l.wrap.b32 	%r1099, %r1095, %r1094, 30;
	mov.b64 	%rd2414, {%r1099, %r1098};
	xor.b64  	%rd2415, %rd2413, %rd2414;
	shf.l.wrap.b32 	%r1100, %r1094, %r1095, 25;
	shf.l.wrap.b32 	%r1101, %r1095, %r1094, 25;
	mov.b64 	%rd2416, {%r1101, %r1100};
	xor.b64  	%rd2417, %rd2415, %rd2416;
	add.s64 	%rd2418, %rd2417, %rd2412;
	add.s64 	%rd2419, %rd2418, %rd2407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd2408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd2408;
	}
	shf.r.wrap.b32 	%r1104, %r1103, %r1102, 14;
	shf.r.wrap.b32 	%r1105, %r1102, %r1103, 14;
	mov.b64 	%rd2420, {%r1105, %r1104};
	shf.r.wrap.b32 	%r1106, %r1103, %r1102, 18;
	shf.r.wrap.b32 	%r1107, %r1102, %r1103, 18;
	mov.b64 	%rd2421, {%r1107, %r1106};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	shf.l.wrap.b32 	%r1108, %r1102, %r1103, 23;
	shf.l.wrap.b32 	%r1109, %r1103, %r1102, 23;
	mov.b64 	%rd2423, {%r1109, %r1108};
	xor.b64  	%rd2424, %rd2422, %rd2423;
	xor.b64  	%rd2425, %rd2384, %rd2360;
	and.b64  	%rd2426, %rd2408, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2360;
	add.s64 	%rd2428, %rd2427, %rd2336;
	add.s64 	%rd2429, %rd2428, %rd2424;
	add.s64 	%rd2430, %rd2429, %rd13585;
	add.s64 	%rd2431, %rd2430, 4131703408338449720;
	add.s64 	%rd2432, %rd2431, %rd2347;
	and.b64  	%rd2433, %rd2419, %rd2395;
	or.b64  	%rd2434, %rd2419, %rd2395;
	and.b64  	%rd2435, %rd2434, %rd2371;
	or.b64  	%rd2436, %rd2435, %rd2433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd2419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1111}, %rd2419;
	}
	shf.r.wrap.b32 	%r1112, %r1111, %r1110, 28;
	shf.r.wrap.b32 	%r1113, %r1110, %r1111, 28;
	mov.b64 	%rd2437, {%r1113, %r1112};
	shf.l.wrap.b32 	%r1114, %r1110, %r1111, 30;
	shf.l.wrap.b32 	%r1115, %r1111, %r1110, 30;
	mov.b64 	%rd2438, {%r1115, %r1114};
	xor.b64  	%rd2439, %rd2437, %rd2438;
	shf.l.wrap.b32 	%r1116, %r1110, %r1111, 25;
	shf.l.wrap.b32 	%r1117, %r1111, %r1110, 25;
	mov.b64 	%rd2440, {%r1117, %r1116};
	xor.b64  	%rd2441, %rd2439, %rd2440;
	add.s64 	%rd2442, %rd2441, %rd2436;
	add.s64 	%rd2443, %rd2442, %rd2431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd2432;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 14;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 14;
	mov.b64 	%rd2444, {%r1121, %r1120};
	shf.r.wrap.b32 	%r1122, %r1119, %r1118, 18;
	shf.r.wrap.b32 	%r1123, %r1118, %r1119, 18;
	mov.b64 	%rd2445, {%r1123, %r1122};
	xor.b64  	%rd2446, %rd2444, %rd2445;
	shf.l.wrap.b32 	%r1124, %r1118, %r1119, 23;
	shf.l.wrap.b32 	%r1125, %r1119, %r1118, 23;
	mov.b64 	%rd2447, {%r1125, %r1124};
	xor.b64  	%rd2448, %rd2446, %rd2447;
	xor.b64  	%rd2449, %rd2408, %rd2384;
	and.b64  	%rd2450, %rd2432, %rd2449;
	xor.b64  	%rd2451, %rd2450, %rd2384;
	add.s64 	%rd2452, %rd2451, %rd2360;
	add.s64 	%rd2453, %rd2452, %rd2448;
	add.s64 	%rd2454, %rd2453, %rd13584;
	add.s64 	%rd2455, %rd2454, 6480981068601479193;
	add.s64 	%rd2456, %rd2455, %rd2371;
	and.b64  	%rd2457, %rd2443, %rd2419;
	or.b64  	%rd2458, %rd2443, %rd2419;
	and.b64  	%rd2459, %rd2458, %rd2395;
	or.b64  	%rd2460, %rd2459, %rd2457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1127}, %rd2443;
	}
	shf.r.wrap.b32 	%r1128, %r1127, %r1126, 28;
	shf.r.wrap.b32 	%r1129, %r1126, %r1127, 28;
	mov.b64 	%rd2461, {%r1129, %r1128};
	shf.l.wrap.b32 	%r1130, %r1126, %r1127, 30;
	shf.l.wrap.b32 	%r1131, %r1127, %r1126, 30;
	mov.b64 	%rd2462, {%r1131, %r1130};
	xor.b64  	%rd2463, %rd2461, %rd2462;
	shf.l.wrap.b32 	%r1132, %r1126, %r1127, 25;
	shf.l.wrap.b32 	%r1133, %r1127, %r1126, 25;
	mov.b64 	%rd2464, {%r1133, %r1132};
	xor.b64  	%rd2465, %rd2463, %rd2464;
	add.s64 	%rd2466, %rd2465, %rd2460;
	add.s64 	%rd2467, %rd2466, %rd2455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1134,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1135}, %rd2456;
	}
	shf.r.wrap.b32 	%r1136, %r1135, %r1134, 14;
	shf.r.wrap.b32 	%r1137, %r1134, %r1135, 14;
	mov.b64 	%rd2468, {%r1137, %r1136};
	shf.r.wrap.b32 	%r1138, %r1135, %r1134, 18;
	shf.r.wrap.b32 	%r1139, %r1134, %r1135, 18;
	mov.b64 	%rd2469, {%r1139, %r1138};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	shf.l.wrap.b32 	%r1140, %r1134, %r1135, 23;
	shf.l.wrap.b32 	%r1141, %r1135, %r1134, 23;
	mov.b64 	%rd2471, {%r1141, %r1140};
	xor.b64  	%rd2472, %rd2470, %rd2471;
	xor.b64  	%rd2473, %rd2432, %rd2408;
	and.b64  	%rd2474, %rd2456, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2408;
	add.s64 	%rd2476, %rd2475, %rd2384;
	add.s64 	%rd2477, %rd2476, %rd2472;
	add.s64 	%rd2478, %rd2477, %rd13583;
	add.s64 	%rd2479, %rd2478, -7908458776815382629;
	add.s64 	%rd2480, %rd2479, %rd2395;
	and.b64  	%rd2481, %rd2467, %rd2443;
	or.b64  	%rd2482, %rd2467, %rd2443;
	and.b64  	%rd2483, %rd2482, %rd2419;
	or.b64  	%rd2484, %rd2483, %rd2481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1142,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1143}, %rd2467;
	}
	shf.r.wrap.b32 	%r1144, %r1143, %r1142, 28;
	shf.r.wrap.b32 	%r1145, %r1142, %r1143, 28;
	mov.b64 	%rd2485, {%r1145, %r1144};
	shf.l.wrap.b32 	%r1146, %r1142, %r1143, 30;
	shf.l.wrap.b32 	%r1147, %r1143, %r1142, 30;
	mov.b64 	%rd2486, {%r1147, %r1146};
	xor.b64  	%rd2487, %rd2485, %rd2486;
	shf.l.wrap.b32 	%r1148, %r1142, %r1143, 25;
	shf.l.wrap.b32 	%r1149, %r1143, %r1142, 25;
	mov.b64 	%rd2488, {%r1149, %r1148};
	xor.b64  	%rd2489, %rd2487, %rd2488;
	add.s64 	%rd2490, %rd2489, %rd2484;
	add.s64 	%rd2491, %rd2490, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1151}, %rd2480;
	}
	shf.r.wrap.b32 	%r1152, %r1151, %r1150, 14;
	shf.r.wrap.b32 	%r1153, %r1150, %r1151, 14;
	mov.b64 	%rd2492, {%r1153, %r1152};
	shf.r.wrap.b32 	%r1154, %r1151, %r1150, 18;
	shf.r.wrap.b32 	%r1155, %r1150, %r1151, 18;
	mov.b64 	%rd2493, {%r1155, %r1154};
	xor.b64  	%rd2494, %rd2492, %rd2493;
	shf.l.wrap.b32 	%r1156, %r1150, %r1151, 23;
	shf.l.wrap.b32 	%r1157, %r1151, %r1150, 23;
	mov.b64 	%rd2495, {%r1157, %r1156};
	xor.b64  	%rd2496, %rd2494, %rd2495;
	xor.b64  	%rd2497, %rd2456, %rd2432;
	and.b64  	%rd2498, %rd2480, %rd2497;
	xor.b64  	%rd2499, %rd2498, %rd2432;
	add.s64 	%rd2500, %rd2499, %rd2408;
	add.s64 	%rd2501, %rd2500, %rd2496;
	add.s64 	%rd2502, %rd2501, %rd13582;
	add.s64 	%rd2503, %rd2502, -6116909921290321640;
	add.s64 	%rd2504, %rd2503, %rd2419;
	and.b64  	%rd2505, %rd2491, %rd2467;
	or.b64  	%rd2506, %rd2491, %rd2467;
	and.b64  	%rd2507, %rd2506, %rd2443;
	or.b64  	%rd2508, %rd2507, %rd2505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd2491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd2491;
	}
	shf.r.wrap.b32 	%r1160, %r1159, %r1158, 28;
	shf.r.wrap.b32 	%r1161, %r1158, %r1159, 28;
	mov.b64 	%rd2509, {%r1161, %r1160};
	shf.l.wrap.b32 	%r1162, %r1158, %r1159, 30;
	shf.l.wrap.b32 	%r1163, %r1159, %r1158, 30;
	mov.b64 	%rd2510, {%r1163, %r1162};
	xor.b64  	%rd2511, %rd2509, %rd2510;
	shf.l.wrap.b32 	%r1164, %r1158, %r1159, 25;
	shf.l.wrap.b32 	%r1165, %r1159, %r1158, 25;
	mov.b64 	%rd2512, {%r1165, %r1164};
	xor.b64  	%rd2513, %rd2511, %rd2512;
	add.s64 	%rd2514, %rd2513, %rd2508;
	add.s64 	%rd2515, %rd2514, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd2504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1167}, %rd2504;
	}
	shf.r.wrap.b32 	%r1168, %r1167, %r1166, 14;
	shf.r.wrap.b32 	%r1169, %r1166, %r1167, 14;
	mov.b64 	%rd2516, {%r1169, %r1168};
	shf.r.wrap.b32 	%r1170, %r1167, %r1166, 18;
	shf.r.wrap.b32 	%r1171, %r1166, %r1167, 18;
	mov.b64 	%rd2517, {%r1171, %r1170};
	xor.b64  	%rd2518, %rd2516, %rd2517;
	shf.l.wrap.b32 	%r1172, %r1166, %r1167, 23;
	shf.l.wrap.b32 	%r1173, %r1167, %r1166, 23;
	mov.b64 	%rd2519, {%r1173, %r1172};
	xor.b64  	%rd2520, %rd2518, %rd2519;
	xor.b64  	%rd2521, %rd2480, %rd2456;
	and.b64  	%rd2522, %rd2504, %rd2521;
	xor.b64  	%rd2523, %rd2522, %rd2456;
	add.s64 	%rd2524, %rd2523, %rd2432;
	add.s64 	%rd2525, %rd2524, %rd2520;
	add.s64 	%rd2526, %rd2525, %rd13581;
	add.s64 	%rd2527, %rd2526, -2880145864133508542;
	add.s64 	%rd2528, %rd2527, %rd2443;
	and.b64  	%rd2529, %rd2515, %rd2491;
	or.b64  	%rd2530, %rd2515, %rd2491;
	and.b64  	%rd2531, %rd2530, %rd2467;
	or.b64  	%rd2532, %rd2531, %rd2529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1174,%dummy}, %rd2515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1175}, %rd2515;
	}
	shf.r.wrap.b32 	%r1176, %r1175, %r1174, 28;
	shf.r.wrap.b32 	%r1177, %r1174, %r1175, 28;
	mov.b64 	%rd2533, {%r1177, %r1176};
	shf.l.wrap.b32 	%r1178, %r1174, %r1175, 30;
	shf.l.wrap.b32 	%r1179, %r1175, %r1174, 30;
	mov.b64 	%rd2534, {%r1179, %r1178};
	xor.b64  	%rd2535, %rd2533, %rd2534;
	shf.l.wrap.b32 	%r1180, %r1174, %r1175, 25;
	shf.l.wrap.b32 	%r1181, %r1175, %r1174, 25;
	mov.b64 	%rd2536, {%r1181, %r1180};
	xor.b64  	%rd2537, %rd2535, %rd2536;
	add.s64 	%rd2538, %rd2537, %rd2532;
	add.s64 	%rd2539, %rd2538, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1183}, %rd2528;
	}
	shf.r.wrap.b32 	%r1184, %r1183, %r1182, 14;
	shf.r.wrap.b32 	%r1185, %r1182, %r1183, 14;
	mov.b64 	%rd2540, {%r1185, %r1184};
	shf.r.wrap.b32 	%r1186, %r1183, %r1182, 18;
	shf.r.wrap.b32 	%r1187, %r1182, %r1183, 18;
	mov.b64 	%rd2541, {%r1187, %r1186};
	xor.b64  	%rd2542, %rd2540, %rd2541;
	shf.l.wrap.b32 	%r1188, %r1182, %r1183, 23;
	shf.l.wrap.b32 	%r1189, %r1183, %r1182, 23;
	mov.b64 	%rd2543, {%r1189, %r1188};
	xor.b64  	%rd2544, %rd2542, %rd2543;
	xor.b64  	%rd2545, %rd2504, %rd2480;
	and.b64  	%rd2546, %rd2528, %rd2545;
	xor.b64  	%rd2547, %rd2546, %rd2480;
	add.s64 	%rd2548, %rd2547, %rd2456;
	add.s64 	%rd2549, %rd2548, %rd2544;
	add.s64 	%rd2550, %rd2549, %rd13580;
	add.s64 	%rd2551, %rd2550, 1334009975649890238;
	add.s64 	%rd2552, %rd2551, %rd2467;
	and.b64  	%rd2553, %rd2539, %rd2515;
	or.b64  	%rd2554, %rd2539, %rd2515;
	and.b64  	%rd2555, %rd2554, %rd2491;
	or.b64  	%rd2556, %rd2555, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd2539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1191}, %rd2539;
	}
	shf.r.wrap.b32 	%r1192, %r1191, %r1190, 28;
	shf.r.wrap.b32 	%r1193, %r1190, %r1191, 28;
	mov.b64 	%rd2557, {%r1193, %r1192};
	shf.l.wrap.b32 	%r1194, %r1190, %r1191, 30;
	shf.l.wrap.b32 	%r1195, %r1191, %r1190, 30;
	mov.b64 	%rd2558, {%r1195, %r1194};
	xor.b64  	%rd2559, %rd2557, %rd2558;
	shf.l.wrap.b32 	%r1196, %r1190, %r1191, 25;
	shf.l.wrap.b32 	%r1197, %r1191, %r1190, 25;
	mov.b64 	%rd2560, {%r1197, %r1196};
	xor.b64  	%rd2561, %rd2559, %rd2560;
	add.s64 	%rd2562, %rd2561, %rd2556;
	add.s64 	%rd2563, %rd2562, %rd2551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd2552;
	}
	shf.r.wrap.b32 	%r1200, %r1199, %r1198, 14;
	shf.r.wrap.b32 	%r1201, %r1198, %r1199, 14;
	mov.b64 	%rd2564, {%r1201, %r1200};
	shf.r.wrap.b32 	%r1202, %r1199, %r1198, 18;
	shf.r.wrap.b32 	%r1203, %r1198, %r1199, 18;
	mov.b64 	%rd2565, {%r1203, %r1202};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	shf.l.wrap.b32 	%r1204, %r1198, %r1199, 23;
	shf.l.wrap.b32 	%r1205, %r1199, %r1198, 23;
	mov.b64 	%rd2567, {%r1205, %r1204};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd2528, %rd2504;
	and.b64  	%rd2570, %rd2552, %rd2569;
	xor.b64  	%rd2571, %rd2570, %rd2504;
	add.s64 	%rd2572, %rd2571, %rd2480;
	add.s64 	%rd2573, %rd2572, %rd2568;
	add.s64 	%rd2574, %rd2573, %rd13579;
	add.s64 	%rd2575, %rd2574, 2608012711638119052;
	add.s64 	%rd2576, %rd2575, %rd2491;
	and.b64  	%rd2577, %rd2563, %rd2539;
	or.b64  	%rd2578, %rd2563, %rd2539;
	and.b64  	%rd2579, %rd2578, %rd2515;
	or.b64  	%rd2580, %rd2579, %rd2577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd2563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd2563;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 28;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 28;
	mov.b64 	%rd2581, {%r1209, %r1208};
	shf.l.wrap.b32 	%r1210, %r1206, %r1207, 30;
	shf.l.wrap.b32 	%r1211, %r1207, %r1206, 30;
	mov.b64 	%rd2582, {%r1211, %r1210};
	xor.b64  	%rd2583, %rd2581, %rd2582;
	shf.l.wrap.b32 	%r1212, %r1206, %r1207, 25;
	shf.l.wrap.b32 	%r1213, %r1207, %r1206, 25;
	mov.b64 	%rd2584, {%r1213, %r1212};
	xor.b64  	%rd2585, %rd2583, %rd2584;
	add.s64 	%rd2586, %rd2585, %rd2580;
	add.s64 	%rd2587, %rd2586, %rd2575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1214,%dummy}, %rd2576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1215}, %rd2576;
	}
	shf.r.wrap.b32 	%r1216, %r1215, %r1214, 14;
	shf.r.wrap.b32 	%r1217, %r1214, %r1215, 14;
	mov.b64 	%rd2588, {%r1217, %r1216};
	shf.r.wrap.b32 	%r1218, %r1215, %r1214, 18;
	shf.r.wrap.b32 	%r1219, %r1214, %r1215, 18;
	mov.b64 	%rd2589, {%r1219, %r1218};
	xor.b64  	%rd2590, %rd2588, %rd2589;
	shf.l.wrap.b32 	%r1220, %r1214, %r1215, 23;
	shf.l.wrap.b32 	%r1221, %r1215, %r1214, 23;
	mov.b64 	%rd2591, {%r1221, %r1220};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2552, %rd2528;
	and.b64  	%rd2594, %rd2576, %rd2593;
	xor.b64  	%rd2595, %rd2594, %rd2528;
	add.s64 	%rd2596, %rd2595, %rd2504;
	add.s64 	%rd2597, %rd2596, %rd2592;
	add.s64 	%rd2598, %rd2597, %rd13578;
	add.s64 	%rd2599, %rd2598, 6128411473006802146;
	add.s64 	%rd2600, %rd2599, %rd2515;
	and.b64  	%rd2601, %rd2587, %rd2563;
	or.b64  	%rd2602, %rd2587, %rd2563;
	and.b64  	%rd2603, %rd2602, %rd2539;
	or.b64  	%rd2604, %rd2603, %rd2601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd2587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd2587;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 28;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 28;
	mov.b64 	%rd2605, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 30;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 30;
	mov.b64 	%rd2606, {%r1227, %r1226};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	shf.l.wrap.b32 	%r1228, %r1222, %r1223, 25;
	shf.l.wrap.b32 	%r1229, %r1223, %r1222, 25;
	mov.b64 	%rd2608, {%r1229, %r1228};
	xor.b64  	%rd2609, %rd2607, %rd2608;
	add.s64 	%rd2610, %rd2609, %rd2604;
	add.s64 	%rd2611, %rd2610, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd2600;
	}
	shf.r.wrap.b32 	%r1232, %r1231, %r1230, 14;
	shf.r.wrap.b32 	%r1233, %r1230, %r1231, 14;
	mov.b64 	%rd2612, {%r1233, %r1232};
	shf.r.wrap.b32 	%r1234, %r1231, %r1230, 18;
	shf.r.wrap.b32 	%r1235, %r1230, %r1231, 18;
	mov.b64 	%rd2613, {%r1235, %r1234};
	xor.b64  	%rd2614, %rd2612, %rd2613;
	shf.l.wrap.b32 	%r1236, %r1230, %r1231, 23;
	shf.l.wrap.b32 	%r1237, %r1231, %r1230, 23;
	mov.b64 	%rd2615, {%r1237, %r1236};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	xor.b64  	%rd2617, %rd2576, %rd2552;
	and.b64  	%rd2618, %rd2600, %rd2617;
	xor.b64  	%rd2619, %rd2618, %rd2552;
	add.s64 	%rd2620, %rd2619, %rd2528;
	add.s64 	%rd2621, %rd2620, %rd2616;
	add.s64 	%rd2622, %rd2621, %rd13577;
	add.s64 	%rd2623, %rd2622, 8268148722764581231;
	add.s64 	%rd13597, %rd2623, %rd2539;
	and.b64  	%rd2624, %rd2611, %rd2587;
	or.b64  	%rd2625, %rd2611, %rd2587;
	and.b64  	%rd2626, %rd2625, %rd2563;
	or.b64  	%rd2627, %rd2626, %rd2624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd2611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1239}, %rd2611;
	}
	shf.r.wrap.b32 	%r1240, %r1239, %r1238, 28;
	shf.r.wrap.b32 	%r1241, %r1238, %r1239, 28;
	mov.b64 	%rd2628, {%r1241, %r1240};
	shf.l.wrap.b32 	%r1242, %r1238, %r1239, 30;
	shf.l.wrap.b32 	%r1243, %r1239, %r1238, 30;
	mov.b64 	%rd2629, {%r1243, %r1242};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	shf.l.wrap.b32 	%r1244, %r1238, %r1239, 25;
	shf.l.wrap.b32 	%r1245, %r1239, %r1238, 25;
	mov.b64 	%rd2631, {%r1245, %r1244};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	add.s64 	%rd2633, %rd2632, %rd2627;
	add.s64 	%rd13593, %rd2633, %rd2623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd13597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd13597;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 14;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 14;
	mov.b64 	%rd2634, {%r1249, %r1248};
	shf.r.wrap.b32 	%r1250, %r1247, %r1246, 18;
	shf.r.wrap.b32 	%r1251, %r1246, %r1247, 18;
	mov.b64 	%rd2635, {%r1251, %r1250};
	xor.b64  	%rd2636, %rd2634, %rd2635;
	shf.l.wrap.b32 	%r1252, %r1246, %r1247, 23;
	shf.l.wrap.b32 	%r1253, %r1247, %r1246, 23;
	mov.b64 	%rd2637, {%r1253, %r1252};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	xor.b64  	%rd2639, %rd2600, %rd2576;
	and.b64  	%rd2640, %rd13597, %rd2639;
	xor.b64  	%rd2641, %rd2640, %rd2576;
	add.s64 	%rd2642, %rd2641, %rd2552;
	add.s64 	%rd2643, %rd2642, %rd2638;
	add.s64 	%rd2644, %rd2643, %rd13576;
	add.s64 	%rd2645, %rd2644, -9160688886553864527;
	add.s64 	%rd13596, %rd2645, %rd2563;
	and.b64  	%rd2646, %rd13593, %rd2611;
	or.b64  	%rd2647, %rd13593, %rd2611;
	and.b64  	%rd2648, %rd2647, %rd2587;
	or.b64  	%rd2649, %rd2648, %rd2646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd13593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd13593;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 28;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 28;
	mov.b64 	%rd2650, {%r1257, %r1256};
	shf.l.wrap.b32 	%r1258, %r1254, %r1255, 30;
	shf.l.wrap.b32 	%r1259, %r1255, %r1254, 30;
	mov.b64 	%rd2651, {%r1259, %r1258};
	xor.b64  	%rd2652, %rd2650, %rd2651;
	shf.l.wrap.b32 	%r1260, %r1254, %r1255, 25;
	shf.l.wrap.b32 	%r1261, %r1255, %r1254, 25;
	mov.b64 	%rd2653, {%r1261, %r1260};
	xor.b64  	%rd2654, %rd2652, %rd2653;
	add.s64 	%rd2655, %rd2654, %rd2649;
	add.s64 	%rd13592, %rd2655, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd13596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd13596;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 14;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 14;
	mov.b64 	%rd2656, {%r1265, %r1264};
	shf.r.wrap.b32 	%r1266, %r1263, %r1262, 18;
	shf.r.wrap.b32 	%r1267, %r1262, %r1263, 18;
	mov.b64 	%rd2657, {%r1267, %r1266};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	shf.l.wrap.b32 	%r1268, %r1262, %r1263, 23;
	shf.l.wrap.b32 	%r1269, %r1263, %r1262, 23;
	mov.b64 	%rd2659, {%r1269, %r1268};
	xor.b64  	%rd2660, %rd2658, %rd2659;
	xor.b64  	%rd2661, %rd13597, %rd2600;
	and.b64  	%rd2662, %rd13596, %rd2661;
	xor.b64  	%rd2663, %rd2662, %rd2600;
	add.s64 	%rd2664, %rd2663, %rd2576;
	add.s64 	%rd2665, %rd2664, %rd2660;
	add.s64 	%rd2666, %rd2665, %rd13575;
	add.s64 	%rd2667, %rd2666, -7215885187991268811;
	add.s64 	%rd13595, %rd2667, %rd2587;
	and.b64  	%rd2668, %rd13592, %rd13593;
	or.b64  	%rd2669, %rd13592, %rd13593;
	and.b64  	%rd2670, %rd2669, %rd2611;
	or.b64  	%rd2671, %rd2670, %rd2668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd13592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd13592;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 28;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 28;
	mov.b64 	%rd2672, {%r1273, %r1272};
	shf.l.wrap.b32 	%r1274, %r1270, %r1271, 30;
	shf.l.wrap.b32 	%r1275, %r1271, %r1270, 30;
	mov.b64 	%rd2673, {%r1275, %r1274};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 25;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 25;
	mov.b64 	%rd2675, {%r1277, %r1276};
	xor.b64  	%rd2676, %rd2674, %rd2675;
	add.s64 	%rd2677, %rd2676, %rd2671;
	add.s64 	%rd13591, %rd2677, %rd2667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd13595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd13595;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 14;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 14;
	mov.b64 	%rd2678, {%r1281, %r1280};
	shf.r.wrap.b32 	%r1282, %r1279, %r1278, 18;
	shf.r.wrap.b32 	%r1283, %r1278, %r1279, 18;
	mov.b64 	%rd2679, {%r1283, %r1282};
	xor.b64  	%rd2680, %rd2678, %rd2679;
	shf.l.wrap.b32 	%r1284, %r1278, %r1279, 23;
	shf.l.wrap.b32 	%r1285, %r1279, %r1278, 23;
	mov.b64 	%rd2681, {%r1285, %r1284};
	xor.b64  	%rd2682, %rd2680, %rd2681;
	xor.b64  	%rd2683, %rd13596, %rd13597;
	and.b64  	%rd2684, %rd13595, %rd2683;
	xor.b64  	%rd2685, %rd2684, %rd13597;
	add.s64 	%rd2686, %rd2685, %rd2600;
	add.s64 	%rd2687, %rd2686, %rd2682;
	add.s64 	%rd2688, %rd2687, %rd13574;
	add.s64 	%rd2689, %rd2688, -4495734319001033068;
	add.s64 	%rd13594, %rd2689, %rd2611;
	and.b64  	%rd2690, %rd13591, %rd13592;
	or.b64  	%rd2691, %rd13591, %rd13592;
	and.b64  	%rd2692, %rd2691, %rd13593;
	or.b64  	%rd2693, %rd2692, %rd2690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd13591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd13591;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 28;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 28;
	mov.b64 	%rd2694, {%r1289, %r1288};
	shf.l.wrap.b32 	%r1290, %r1286, %r1287, 30;
	shf.l.wrap.b32 	%r1291, %r1287, %r1286, 30;
	mov.b64 	%rd2695, {%r1291, %r1290};
	xor.b64  	%rd2696, %rd2694, %rd2695;
	shf.l.wrap.b32 	%r1292, %r1286, %r1287, 25;
	shf.l.wrap.b32 	%r1293, %r1287, %r1286, 25;
	mov.b64 	%rd2697, {%r1293, %r1292};
	xor.b64  	%rd2698, %rd2696, %rd2697;
	add.s64 	%rd2699, %rd2698, %rd2693;
	add.s64 	%rd13590, %rd2699, %rd2689;
	mov.u32 	%r9703, 16;

$L__BB0_31:
	.pragma "nounroll";
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd13575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd13575;
	}
	shf.l.wrap.b32 	%r1296, %r1295, %r1294, 3;
	shf.l.wrap.b32 	%r1297, %r1294, %r1295, 3;
	mov.b64 	%rd2700, {%r1297, %r1296};
	shf.r.wrap.b32 	%r1298, %r1294, %r1295, 19;
	shf.r.wrap.b32 	%r1299, %r1295, %r1294, 19;
	mov.b64 	%rd2701, {%r1299, %r1298};
	xor.b64  	%rd2702, %rd2701, %rd2700;
	shr.u64 	%rd2703, %rd13575, 6;
	xor.b64  	%rd2704, %rd2702, %rd2703;
	add.s64 	%rd2705, %rd13580, %rd13589;
	add.s64 	%rd2706, %rd2705, %rd2704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd13588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd13588;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 8;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 8;
	mov.b64 	%rd2707, {%r1303, %r1302};
	shf.r.wrap.b32 	%r1304, %r1301, %r1300, 1;
	shf.r.wrap.b32 	%r1305, %r1300, %r1301, 1;
	mov.b64 	%rd2708, {%r1305, %r1304};
	xor.b64  	%rd2709, %rd2708, %rd2707;
	shr.u64 	%rd2710, %rd13588, 7;
	xor.b64  	%rd2711, %rd2709, %rd2710;
	add.s64 	%rd13589, %rd2706, %rd2711;
	mul.wide.u32 	%rd2712, %r9703, 8;
	mov.u64 	%rd2713, k;
	add.s64 	%rd2714, %rd2713, %rd2712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd13594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1307}, %rd13594;
	}
	shf.r.wrap.b32 	%r1308, %r1307, %r1306, 18;
	shf.r.wrap.b32 	%r1309, %r1306, %r1307, 18;
	mov.b64 	%rd2715, {%r1309, %r1308};
	shf.r.wrap.b32 	%r1310, %r1307, %r1306, 14;
	shf.r.wrap.b32 	%r1311, %r1306, %r1307, 14;
	mov.b64 	%rd2716, {%r1311, %r1310};
	xor.b64  	%rd2717, %rd2716, %rd2715;
	shf.l.wrap.b32 	%r1312, %r1306, %r1307, 23;
	shf.l.wrap.b32 	%r1313, %r1307, %r1306, 23;
	mov.b64 	%rd2718, {%r1313, %r1312};
	xor.b64  	%rd2719, %rd2717, %rd2718;
	xor.b64  	%rd2720, %rd13595, %rd13596;
	and.b64  	%rd2721, %rd13594, %rd2720;
	xor.b64  	%rd2722, %rd2721, %rd13596;
	add.s64 	%rd2723, %rd2722, %rd13597;
	add.s64 	%rd2724, %rd2723, %rd2719;
	ld.const.u64 	%rd2725, [%rd2714];
	add.s64 	%rd2726, %rd2724, %rd2725;
	add.s64 	%rd2727, %rd2726, %rd13589;
	add.s64 	%rd2728, %rd2727, %rd13593;
	or.b64  	%rd2729, %rd13590, %rd13591;
	and.b64  	%rd2730, %rd2729, %rd13592;
	and.b64  	%rd2731, %rd13590, %rd13591;
	or.b64  	%rd2732, %rd2730, %rd2731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1314}, %rd13590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1315,%dummy}, %rd13590;
	}
	shf.l.wrap.b32 	%r1316, %r1315, %r1314, 30;
	shf.l.wrap.b32 	%r1317, %r1314, %r1315, 30;
	mov.b64 	%rd2733, {%r1317, %r1316};
	shf.r.wrap.b32 	%r1318, %r1314, %r1315, 28;
	shf.r.wrap.b32 	%r1319, %r1315, %r1314, 28;
	mov.b64 	%rd2734, {%r1319, %r1318};
	xor.b64  	%rd2735, %rd2734, %rd2733;
	shf.l.wrap.b32 	%r1320, %r1315, %r1314, 25;
	shf.l.wrap.b32 	%r1321, %r1314, %r1315, 25;
	mov.b64 	%rd2736, {%r1321, %r1320};
	xor.b64  	%rd2737, %rd2735, %rd2736;
	add.s64 	%rd2738, %rd2737, %rd2732;
	add.s64 	%rd2739, %rd2738, %rd2727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd13574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1323,%dummy}, %rd13574;
	}
	shf.l.wrap.b32 	%r1324, %r1323, %r1322, 3;
	shf.l.wrap.b32 	%r1325, %r1322, %r1323, 3;
	mov.b64 	%rd2740, {%r1325, %r1324};
	shf.r.wrap.b32 	%r1326, %r1322, %r1323, 19;
	shf.r.wrap.b32 	%r1327, %r1323, %r1322, 19;
	mov.b64 	%rd2741, {%r1327, %r1326};
	xor.b64  	%rd2742, %rd2741, %rd2740;
	shr.u64 	%rd2743, %rd13574, 6;
	xor.b64  	%rd2744, %rd2742, %rd2743;
	add.s64 	%rd2745, %rd13579, %rd13588;
	add.s64 	%rd2746, %rd2745, %rd2744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1328,%dummy}, %rd13587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1329}, %rd13587;
	}
	shf.r.wrap.b32 	%r1330, %r1329, %r1328, 8;
	shf.r.wrap.b32 	%r1331, %r1328, %r1329, 8;
	mov.b64 	%rd2747, {%r1331, %r1330};
	shf.r.wrap.b32 	%r1332, %r1329, %r1328, 1;
	shf.r.wrap.b32 	%r1333, %r1328, %r1329, 1;
	mov.b64 	%rd2748, {%r1333, %r1332};
	xor.b64  	%rd2749, %rd2748, %rd2747;
	shr.u64 	%rd2750, %rd13587, 7;
	xor.b64  	%rd2751, %rd2749, %rd2750;
	add.s64 	%rd13588, %rd2746, %rd2751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd2728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd2728;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 14;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 14;
	mov.b64 	%rd2752, {%r1337, %r1336};
	shf.r.wrap.b32 	%r1338, %r1335, %r1334, 18;
	shf.r.wrap.b32 	%r1339, %r1334, %r1335, 18;
	mov.b64 	%rd2753, {%r1339, %r1338};
	xor.b64  	%rd2754, %rd2752, %rd2753;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 23;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 23;
	mov.b64 	%rd2755, {%r1341, %r1340};
	xor.b64  	%rd2756, %rd2754, %rd2755;
	xor.b64  	%rd2757, %rd13594, %rd13595;
	and.b64  	%rd2758, %rd2728, %rd2757;
	xor.b64  	%rd2759, %rd2758, %rd13595;
	add.s64 	%rd2760, %rd2759, %rd13596;
	add.s64 	%rd2761, %rd2760, %rd2756;
	ld.const.u64 	%rd2762, [%rd2714+8];
	add.s64 	%rd2763, %rd2761, %rd2762;
	add.s64 	%rd2764, %rd2763, %rd13588;
	add.s64 	%rd2765, %rd2764, %rd13592;
	and.b64  	%rd2766, %rd2739, %rd13590;
	or.b64  	%rd2767, %rd2739, %rd13590;
	and.b64  	%rd2768, %rd2767, %rd13591;
	or.b64  	%rd2769, %rd2768, %rd2766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd2739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd2739;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 28;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 28;
	mov.b64 	%rd2770, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 30;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 30;
	mov.b64 	%rd2771, {%r1347, %r1346};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 25;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 25;
	mov.b64 	%rd2773, {%r1349, %r1348};
	xor.b64  	%rd2774, %rd2772, %rd2773;
	add.s64 	%rd2775, %rd2774, %rd2769;
	add.s64 	%rd2776, %rd2775, %rd2764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd13589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd13589;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 19;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 19;
	mov.b64 	%rd2777, {%r1353, %r1352};
	shf.l.wrap.b32 	%r1354, %r1350, %r1351, 3;
	shf.l.wrap.b32 	%r1355, %r1351, %r1350, 3;
	mov.b64 	%rd2778, {%r1355, %r1354};
	xor.b64  	%rd2779, %rd2777, %rd2778;
	shr.u64 	%rd2780, %rd13589, 6;
	xor.b64  	%rd2781, %rd2779, %rd2780;
	add.s64 	%rd2782, %rd13578, %rd13587;
	add.s64 	%rd2783, %rd2782, %rd2781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1356,%dummy}, %rd13586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd13586;
	}
	shf.r.wrap.b32 	%r1358, %r1357, %r1356, 8;
	shf.r.wrap.b32 	%r1359, %r1356, %r1357, 8;
	mov.b64 	%rd2784, {%r1359, %r1358};
	shf.r.wrap.b32 	%r1360, %r1357, %r1356, 1;
	shf.r.wrap.b32 	%r1361, %r1356, %r1357, 1;
	mov.b64 	%rd2785, {%r1361, %r1360};
	xor.b64  	%rd2786, %rd2785, %rd2784;
	shr.u64 	%rd2787, %rd13586, 7;
	xor.b64  	%rd2788, %rd2786, %rd2787;
	add.s64 	%rd13587, %rd2783, %rd2788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd2765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1363}, %rd2765;
	}
	shf.r.wrap.b32 	%r1364, %r1363, %r1362, 14;
	shf.r.wrap.b32 	%r1365, %r1362, %r1363, 14;
	mov.b64 	%rd2789, {%r1365, %r1364};
	shf.r.wrap.b32 	%r1366, %r1363, %r1362, 18;
	shf.r.wrap.b32 	%r1367, %r1362, %r1363, 18;
	mov.b64 	%rd2790, {%r1367, %r1366};
	xor.b64  	%rd2791, %rd2789, %rd2790;
	shf.l.wrap.b32 	%r1368, %r1362, %r1363, 23;
	shf.l.wrap.b32 	%r1369, %r1363, %r1362, 23;
	mov.b64 	%rd2792, {%r1369, %r1368};
	xor.b64  	%rd2793, %rd2791, %rd2792;
	xor.b64  	%rd2794, %rd2728, %rd13594;
	and.b64  	%rd2795, %rd2765, %rd2794;
	xor.b64  	%rd2796, %rd2795, %rd13594;
	add.s64 	%rd2797, %rd2796, %rd13595;
	add.s64 	%rd2798, %rd2797, %rd2793;
	ld.const.u64 	%rd2799, [%rd2714+16];
	add.s64 	%rd2800, %rd2798, %rd2799;
	add.s64 	%rd2801, %rd2800, %rd13587;
	add.s64 	%rd2802, %rd2801, %rd13591;
	and.b64  	%rd2803, %rd2776, %rd2739;
	or.b64  	%rd2804, %rd2776, %rd2739;
	and.b64  	%rd2805, %rd2804, %rd13590;
	or.b64  	%rd2806, %rd2805, %rd2803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd2776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd2776;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 28;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 28;
	mov.b64 	%rd2807, {%r1373, %r1372};
	shf.l.wrap.b32 	%r1374, %r1370, %r1371, 30;
	shf.l.wrap.b32 	%r1375, %r1371, %r1370, 30;
	mov.b64 	%rd2808, {%r1375, %r1374};
	xor.b64  	%rd2809, %rd2807, %rd2808;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 25;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 25;
	mov.b64 	%rd2810, {%r1377, %r1376};
	xor.b64  	%rd2811, %rd2809, %rd2810;
	add.s64 	%rd2812, %rd2811, %rd2806;
	add.s64 	%rd2813, %rd2812, %rd2801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd13588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd13588;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 19;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 19;
	mov.b64 	%rd2814, {%r1381, %r1380};
	shf.l.wrap.b32 	%r1382, %r1378, %r1379, 3;
	shf.l.wrap.b32 	%r1383, %r1379, %r1378, 3;
	mov.b64 	%rd2815, {%r1383, %r1382};
	xor.b64  	%rd2816, %rd2814, %rd2815;
	shr.u64 	%rd2817, %rd13588, 6;
	xor.b64  	%rd2818, %rd2816, %rd2817;
	add.s64 	%rd2819, %rd13577, %rd13586;
	add.s64 	%rd2820, %rd2819, %rd2818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1384,%dummy}, %rd13585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd13585;
	}
	shf.r.wrap.b32 	%r1386, %r1385, %r1384, 8;
	shf.r.wrap.b32 	%r1387, %r1384, %r1385, 8;
	mov.b64 	%rd2821, {%r1387, %r1386};
	shf.r.wrap.b32 	%r1388, %r1385, %r1384, 1;
	shf.r.wrap.b32 	%r1389, %r1384, %r1385, 1;
	mov.b64 	%rd2822, {%r1389, %r1388};
	xor.b64  	%rd2823, %rd2822, %rd2821;
	shr.u64 	%rd2824, %rd13585, 7;
	xor.b64  	%rd2825, %rd2823, %rd2824;
	add.s64 	%rd13586, %rd2820, %rd2825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd2802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd2802;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 14;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 14;
	mov.b64 	%rd2826, {%r1393, %r1392};
	shf.r.wrap.b32 	%r1394, %r1391, %r1390, 18;
	shf.r.wrap.b32 	%r1395, %r1390, %r1391, 18;
	mov.b64 	%rd2827, {%r1395, %r1394};
	xor.b64  	%rd2828, %rd2826, %rd2827;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 23;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 23;
	mov.b64 	%rd2829, {%r1397, %r1396};
	xor.b64  	%rd2830, %rd2828, %rd2829;
	xor.b64  	%rd2831, %rd2765, %rd2728;
	and.b64  	%rd2832, %rd2802, %rd2831;
	xor.b64  	%rd2833, %rd2832, %rd2728;
	add.s64 	%rd2834, %rd2833, %rd13594;
	add.s64 	%rd2835, %rd2834, %rd2830;
	ld.const.u64 	%rd2836, [%rd2714+24];
	add.s64 	%rd2837, %rd2835, %rd2836;
	add.s64 	%rd2838, %rd2837, %rd13586;
	add.s64 	%rd2839, %rd2838, %rd13590;
	and.b64  	%rd2840, %rd2813, %rd2776;
	or.b64  	%rd2841, %rd2813, %rd2776;
	and.b64  	%rd2842, %rd2841, %rd2739;
	or.b64  	%rd2843, %rd2842, %rd2840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd2813;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 28;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 28;
	mov.b64 	%rd2844, {%r1401, %r1400};
	shf.l.wrap.b32 	%r1402, %r1398, %r1399, 30;
	shf.l.wrap.b32 	%r1403, %r1399, %r1398, 30;
	mov.b64 	%rd2845, {%r1403, %r1402};
	xor.b64  	%rd2846, %rd2844, %rd2845;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 25;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 25;
	mov.b64 	%rd2847, {%r1405, %r1404};
	xor.b64  	%rd2848, %rd2846, %rd2847;
	add.s64 	%rd2849, %rd2848, %rd2843;
	add.s64 	%rd2850, %rd2849, %rd2838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd13587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd13587;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 19;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 19;
	mov.b64 	%rd2851, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 3;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 3;
	mov.b64 	%rd2852, {%r1411, %r1410};
	xor.b64  	%rd2853, %rd2851, %rd2852;
	shr.u64 	%rd2854, %rd13587, 6;
	xor.b64  	%rd2855, %rd2853, %rd2854;
	add.s64 	%rd2856, %rd13576, %rd13585;
	add.s64 	%rd2857, %rd2856, %rd2855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd13584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd13584;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 8;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 8;
	mov.b64 	%rd2858, {%r1415, %r1414};
	shf.r.wrap.b32 	%r1416, %r1413, %r1412, 1;
	shf.r.wrap.b32 	%r1417, %r1412, %r1413, 1;
	mov.b64 	%rd2859, {%r1417, %r1416};
	xor.b64  	%rd2860, %rd2859, %rd2858;
	shr.u64 	%rd2861, %rd13584, 7;
	xor.b64  	%rd2862, %rd2860, %rd2861;
	add.s64 	%rd13585, %rd2857, %rd2862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd2839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd2839;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 14;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 14;
	mov.b64 	%rd2863, {%r1421, %r1420};
	shf.r.wrap.b32 	%r1422, %r1419, %r1418, 18;
	shf.r.wrap.b32 	%r1423, %r1418, %r1419, 18;
	mov.b64 	%rd2864, {%r1423, %r1422};
	xor.b64  	%rd2865, %rd2863, %rd2864;
	shf.l.wrap.b32 	%r1424, %r1418, %r1419, 23;
	shf.l.wrap.b32 	%r1425, %r1419, %r1418, 23;
	mov.b64 	%rd2866, {%r1425, %r1424};
	xor.b64  	%rd2867, %rd2865, %rd2866;
	xor.b64  	%rd2868, %rd2802, %rd2765;
	and.b64  	%rd2869, %rd2839, %rd2868;
	xor.b64  	%rd2870, %rd2869, %rd2765;
	add.s64 	%rd2871, %rd2870, %rd2728;
	add.s64 	%rd2872, %rd2871, %rd2867;
	ld.const.u64 	%rd2873, [%rd2714+32];
	add.s64 	%rd2874, %rd2872, %rd2873;
	add.s64 	%rd2875, %rd2874, %rd13585;
	add.s64 	%rd2876, %rd2875, %rd2739;
	and.b64  	%rd2877, %rd2850, %rd2813;
	or.b64  	%rd2878, %rd2850, %rd2813;
	and.b64  	%rd2879, %rd2878, %rd2776;
	or.b64  	%rd2880, %rd2879, %rd2877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1427}, %rd2850;
	}
	shf.r.wrap.b32 	%r1428, %r1427, %r1426, 28;
	shf.r.wrap.b32 	%r1429, %r1426, %r1427, 28;
	mov.b64 	%rd2881, {%r1429, %r1428};
	shf.l.wrap.b32 	%r1430, %r1426, %r1427, 30;
	shf.l.wrap.b32 	%r1431, %r1427, %r1426, 30;
	mov.b64 	%rd2882, {%r1431, %r1430};
	xor.b64  	%rd2883, %rd2881, %rd2882;
	shf.l.wrap.b32 	%r1432, %r1426, %r1427, 25;
	shf.l.wrap.b32 	%r1433, %r1427, %r1426, 25;
	mov.b64 	%rd2884, {%r1433, %r1432};
	xor.b64  	%rd2885, %rd2883, %rd2884;
	add.s64 	%rd2886, %rd2885, %rd2880;
	add.s64 	%rd2887, %rd2886, %rd2875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1434,%dummy}, %rd13586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1435}, %rd13586;
	}
	shf.r.wrap.b32 	%r1436, %r1435, %r1434, 19;
	shf.r.wrap.b32 	%r1437, %r1434, %r1435, 19;
	mov.b64 	%rd2888, {%r1437, %r1436};
	shf.l.wrap.b32 	%r1438, %r1434, %r1435, 3;
	shf.l.wrap.b32 	%r1439, %r1435, %r1434, 3;
	mov.b64 	%rd2889, {%r1439, %r1438};
	xor.b64  	%rd2890, %rd2888, %rd2889;
	shr.u64 	%rd2891, %rd13586, 6;
	xor.b64  	%rd2892, %rd2890, %rd2891;
	add.s64 	%rd2893, %rd13575, %rd13584;
	add.s64 	%rd2894, %rd2893, %rd2892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1440,%dummy}, %rd13583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1441}, %rd13583;
	}
	shf.r.wrap.b32 	%r1442, %r1441, %r1440, 8;
	shf.r.wrap.b32 	%r1443, %r1440, %r1441, 8;
	mov.b64 	%rd2895, {%r1443, %r1442};
	shf.r.wrap.b32 	%r1444, %r1441, %r1440, 1;
	shf.r.wrap.b32 	%r1445, %r1440, %r1441, 1;
	mov.b64 	%rd2896, {%r1445, %r1444};
	xor.b64  	%rd2897, %rd2896, %rd2895;
	shr.u64 	%rd2898, %rd13583, 7;
	xor.b64  	%rd2899, %rd2897, %rd2898;
	add.s64 	%rd13584, %rd2894, %rd2899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd2876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd2876;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 14;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 14;
	mov.b64 	%rd2900, {%r1449, %r1448};
	shf.r.wrap.b32 	%r1450, %r1447, %r1446, 18;
	shf.r.wrap.b32 	%r1451, %r1446, %r1447, 18;
	mov.b64 	%rd2901, {%r1451, %r1450};
	xor.b64  	%rd2902, %rd2900, %rd2901;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 23;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 23;
	mov.b64 	%rd2903, {%r1453, %r1452};
	xor.b64  	%rd2904, %rd2902, %rd2903;
	xor.b64  	%rd2905, %rd2839, %rd2802;
	and.b64  	%rd2906, %rd2876, %rd2905;
	xor.b64  	%rd2907, %rd2906, %rd2802;
	add.s64 	%rd2908, %rd2907, %rd2765;
	add.s64 	%rd2909, %rd2908, %rd2904;
	ld.const.u64 	%rd2910, [%rd2714+40];
	add.s64 	%rd2911, %rd2909, %rd2910;
	add.s64 	%rd2912, %rd2911, %rd13584;
	add.s64 	%rd2913, %rd2912, %rd2776;
	and.b64  	%rd2914, %rd2887, %rd2850;
	or.b64  	%rd2915, %rd2887, %rd2850;
	and.b64  	%rd2916, %rd2915, %rd2813;
	or.b64  	%rd2917, %rd2916, %rd2914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd2887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd2887;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 28;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 28;
	mov.b64 	%rd2918, {%r1457, %r1456};
	shf.l.wrap.b32 	%r1458, %r1454, %r1455, 30;
	shf.l.wrap.b32 	%r1459, %r1455, %r1454, 30;
	mov.b64 	%rd2919, {%r1459, %r1458};
	xor.b64  	%rd2920, %rd2918, %rd2919;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 25;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 25;
	mov.b64 	%rd2921, {%r1461, %r1460};
	xor.b64  	%rd2922, %rd2920, %rd2921;
	add.s64 	%rd2923, %rd2922, %rd2917;
	add.s64 	%rd2924, %rd2923, %rd2912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd13585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd13585;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 19;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 19;
	mov.b64 	%rd2925, {%r1465, %r1464};
	shf.l.wrap.b32 	%r1466, %r1462, %r1463, 3;
	shf.l.wrap.b32 	%r1467, %r1463, %r1462, 3;
	mov.b64 	%rd2926, {%r1467, %r1466};
	xor.b64  	%rd2927, %rd2925, %rd2926;
	shr.u64 	%rd2928, %rd13585, 6;
	xor.b64  	%rd2929, %rd2927, %rd2928;
	add.s64 	%rd2930, %rd13574, %rd13583;
	add.s64 	%rd2931, %rd2930, %rd2929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1468,%dummy}, %rd13582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd13582;
	}
	shf.r.wrap.b32 	%r1470, %r1469, %r1468, 8;
	shf.r.wrap.b32 	%r1471, %r1468, %r1469, 8;
	mov.b64 	%rd2932, {%r1471, %r1470};
	shf.r.wrap.b32 	%r1472, %r1469, %r1468, 1;
	shf.r.wrap.b32 	%r1473, %r1468, %r1469, 1;
	mov.b64 	%rd2933, {%r1473, %r1472};
	xor.b64  	%rd2934, %rd2933, %rd2932;
	shr.u64 	%rd2935, %rd13582, 7;
	xor.b64  	%rd2936, %rd2934, %rd2935;
	add.s64 	%rd13583, %rd2931, %rd2936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd2913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd2913;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 14;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 14;
	mov.b64 	%rd2937, {%r1477, %r1476};
	shf.r.wrap.b32 	%r1478, %r1475, %r1474, 18;
	shf.r.wrap.b32 	%r1479, %r1474, %r1475, 18;
	mov.b64 	%rd2938, {%r1479, %r1478};
	xor.b64  	%rd2939, %rd2937, %rd2938;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 23;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 23;
	mov.b64 	%rd2940, {%r1481, %r1480};
	xor.b64  	%rd2941, %rd2939, %rd2940;
	xor.b64  	%rd2942, %rd2876, %rd2839;
	and.b64  	%rd2943, %rd2913, %rd2942;
	xor.b64  	%rd2944, %rd2943, %rd2839;
	add.s64 	%rd2945, %rd2944, %rd2802;
	add.s64 	%rd2946, %rd2945, %rd2941;
	ld.const.u64 	%rd2947, [%rd2714+48];
	add.s64 	%rd2948, %rd2946, %rd2947;
	add.s64 	%rd2949, %rd2948, %rd13583;
	add.s64 	%rd2950, %rd2949, %rd2813;
	and.b64  	%rd2951, %rd2924, %rd2887;
	or.b64  	%rd2952, %rd2924, %rd2887;
	and.b64  	%rd2953, %rd2952, %rd2850;
	or.b64  	%rd2954, %rd2953, %rd2951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd2924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd2924;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 28;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 28;
	mov.b64 	%rd2955, {%r1485, %r1484};
	shf.l.wrap.b32 	%r1486, %r1482, %r1483, 30;
	shf.l.wrap.b32 	%r1487, %r1483, %r1482, 30;
	mov.b64 	%rd2956, {%r1487, %r1486};
	xor.b64  	%rd2957, %rd2955, %rd2956;
	shf.l.wrap.b32 	%r1488, %r1482, %r1483, 25;
	shf.l.wrap.b32 	%r1489, %r1483, %r1482, 25;
	mov.b64 	%rd2958, {%r1489, %r1488};
	xor.b64  	%rd2959, %rd2957, %rd2958;
	add.s64 	%rd2960, %rd2959, %rd2954;
	add.s64 	%rd2961, %rd2960, %rd2949;
	add.s64 	%rd2962, %rd13589, %rd13582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1490,%dummy}, %rd13584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1491}, %rd13584;
	}
	shf.r.wrap.b32 	%r1492, %r1491, %r1490, 19;
	shf.r.wrap.b32 	%r1493, %r1490, %r1491, 19;
	mov.b64 	%rd2963, {%r1493, %r1492};
	shf.l.wrap.b32 	%r1494, %r1490, %r1491, 3;
	shf.l.wrap.b32 	%r1495, %r1491, %r1490, 3;
	mov.b64 	%rd2964, {%r1495, %r1494};
	xor.b64  	%rd2965, %rd2963, %rd2964;
	shr.u64 	%rd2966, %rd13584, 6;
	xor.b64  	%rd2967, %rd2965, %rd2966;
	add.s64 	%rd2968, %rd2962, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1496,%dummy}, %rd13581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd13581;
	}
	shf.r.wrap.b32 	%r1498, %r1497, %r1496, 8;
	shf.r.wrap.b32 	%r1499, %r1496, %r1497, 8;
	mov.b64 	%rd2969, {%r1499, %r1498};
	shf.r.wrap.b32 	%r1500, %r1497, %r1496, 1;
	shf.r.wrap.b32 	%r1501, %r1496, %r1497, 1;
	mov.b64 	%rd2970, {%r1501, %r1500};
	xor.b64  	%rd2971, %rd2970, %rd2969;
	shr.u64 	%rd2972, %rd13581, 7;
	xor.b64  	%rd2973, %rd2971, %rd2972;
	add.s64 	%rd13582, %rd2968, %rd2973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd2950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1503}, %rd2950;
	}
	shf.r.wrap.b32 	%r1504, %r1503, %r1502, 14;
	shf.r.wrap.b32 	%r1505, %r1502, %r1503, 14;
	mov.b64 	%rd2974, {%r1505, %r1504};
	shf.r.wrap.b32 	%r1506, %r1503, %r1502, 18;
	shf.r.wrap.b32 	%r1507, %r1502, %r1503, 18;
	mov.b64 	%rd2975, {%r1507, %r1506};
	xor.b64  	%rd2976, %rd2974, %rd2975;
	shf.l.wrap.b32 	%r1508, %r1502, %r1503, 23;
	shf.l.wrap.b32 	%r1509, %r1503, %r1502, 23;
	mov.b64 	%rd2977, {%r1509, %r1508};
	xor.b64  	%rd2978, %rd2976, %rd2977;
	xor.b64  	%rd2979, %rd2913, %rd2876;
	and.b64  	%rd2980, %rd2950, %rd2979;
	xor.b64  	%rd2981, %rd2980, %rd2876;
	add.s64 	%rd2982, %rd2981, %rd2839;
	add.s64 	%rd2983, %rd2982, %rd2978;
	ld.const.u64 	%rd2984, [%rd2714+56];
	add.s64 	%rd2985, %rd2983, %rd2984;
	add.s64 	%rd2986, %rd2985, %rd13582;
	add.s64 	%rd2987, %rd2986, %rd2850;
	and.b64  	%rd2988, %rd2961, %rd2924;
	or.b64  	%rd2989, %rd2961, %rd2924;
	and.b64  	%rd2990, %rd2989, %rd2887;
	or.b64  	%rd2991, %rd2990, %rd2988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd2961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1511}, %rd2961;
	}
	shf.r.wrap.b32 	%r1512, %r1511, %r1510, 28;
	shf.r.wrap.b32 	%r1513, %r1510, %r1511, 28;
	mov.b64 	%rd2992, {%r1513, %r1512};
	shf.l.wrap.b32 	%r1514, %r1510, %r1511, 30;
	shf.l.wrap.b32 	%r1515, %r1511, %r1510, 30;
	mov.b64 	%rd2993, {%r1515, %r1514};
	xor.b64  	%rd2994, %rd2992, %rd2993;
	shf.l.wrap.b32 	%r1516, %r1510, %r1511, 25;
	shf.l.wrap.b32 	%r1517, %r1511, %r1510, 25;
	mov.b64 	%rd2995, {%r1517, %r1516};
	xor.b64  	%rd2996, %rd2994, %rd2995;
	add.s64 	%rd2997, %rd2996, %rd2991;
	add.s64 	%rd2998, %rd2997, %rd2986;
	add.s64 	%rd2999, %rd13588, %rd13581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd13583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd13583;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 19;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 19;
	mov.b64 	%rd3000, {%r1521, %r1520};
	shf.l.wrap.b32 	%r1522, %r1518, %r1519, 3;
	shf.l.wrap.b32 	%r1523, %r1519, %r1518, 3;
	mov.b64 	%rd3001, {%r1523, %r1522};
	xor.b64  	%rd3002, %rd3000, %rd3001;
	shr.u64 	%rd3003, %rd13583, 6;
	xor.b64  	%rd3004, %rd3002, %rd3003;
	add.s64 	%rd3005, %rd2999, %rd3004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd13580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd13580;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 8;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 8;
	mov.b64 	%rd3006, {%r1527, %r1526};
	shf.r.wrap.b32 	%r1528, %r1525, %r1524, 1;
	shf.r.wrap.b32 	%r1529, %r1524, %r1525, 1;
	mov.b64 	%rd3007, {%r1529, %r1528};
	xor.b64  	%rd3008, %rd3007, %rd3006;
	shr.u64 	%rd3009, %rd13580, 7;
	xor.b64  	%rd3010, %rd3008, %rd3009;
	add.s64 	%rd13581, %rd3005, %rd3010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd2987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1531}, %rd2987;
	}
	shf.r.wrap.b32 	%r1532, %r1531, %r1530, 14;
	shf.r.wrap.b32 	%r1533, %r1530, %r1531, 14;
	mov.b64 	%rd3011, {%r1533, %r1532};
	shf.r.wrap.b32 	%r1534, %r1531, %r1530, 18;
	shf.r.wrap.b32 	%r1535, %r1530, %r1531, 18;
	mov.b64 	%rd3012, {%r1535, %r1534};
	xor.b64  	%rd3013, %rd3011, %rd3012;
	shf.l.wrap.b32 	%r1536, %r1530, %r1531, 23;
	shf.l.wrap.b32 	%r1537, %r1531, %r1530, 23;
	mov.b64 	%rd3014, {%r1537, %r1536};
	xor.b64  	%rd3015, %rd3013, %rd3014;
	xor.b64  	%rd3016, %rd2950, %rd2913;
	and.b64  	%rd3017, %rd2987, %rd3016;
	xor.b64  	%rd3018, %rd3017, %rd2913;
	add.s64 	%rd3019, %rd3018, %rd2876;
	add.s64 	%rd3020, %rd3019, %rd3015;
	ld.const.u64 	%rd3021, [%rd2714+64];
	add.s64 	%rd3022, %rd3020, %rd3021;
	add.s64 	%rd3023, %rd3022, %rd13581;
	add.s64 	%rd3024, %rd3023, %rd2887;
	and.b64  	%rd3025, %rd2998, %rd2961;
	or.b64  	%rd3026, %rd2998, %rd2961;
	and.b64  	%rd3027, %rd3026, %rd2924;
	or.b64  	%rd3028, %rd3027, %rd3025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1538,%dummy}, %rd2998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1539}, %rd2998;
	}
	shf.r.wrap.b32 	%r1540, %r1539, %r1538, 28;
	shf.r.wrap.b32 	%r1541, %r1538, %r1539, 28;
	mov.b64 	%rd3029, {%r1541, %r1540};
	shf.l.wrap.b32 	%r1542, %r1538, %r1539, 30;
	shf.l.wrap.b32 	%r1543, %r1539, %r1538, 30;
	mov.b64 	%rd3030, {%r1543, %r1542};
	xor.b64  	%rd3031, %rd3029, %rd3030;
	shf.l.wrap.b32 	%r1544, %r1538, %r1539, 25;
	shf.l.wrap.b32 	%r1545, %r1539, %r1538, 25;
	mov.b64 	%rd3032, {%r1545, %r1544};
	xor.b64  	%rd3033, %rd3031, %rd3032;
	add.s64 	%rd3034, %rd3033, %rd3028;
	add.s64 	%rd3035, %rd3034, %rd3023;
	add.s64 	%rd3036, %rd13587, %rd13580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd13582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd13582;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 19;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 19;
	mov.b64 	%rd3037, {%r1549, %r1548};
	shf.l.wrap.b32 	%r1550, %r1546, %r1547, 3;
	shf.l.wrap.b32 	%r1551, %r1547, %r1546, 3;
	mov.b64 	%rd3038, {%r1551, %r1550};
	xor.b64  	%rd3039, %rd3037, %rd3038;
	shr.u64 	%rd3040, %rd13582, 6;
	xor.b64  	%rd3041, %rd3039, %rd3040;
	add.s64 	%rd3042, %rd3036, %rd3041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd13579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd13579;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 8;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 8;
	mov.b64 	%rd3043, {%r1555, %r1554};
	shf.r.wrap.b32 	%r1556, %r1553, %r1552, 1;
	shf.r.wrap.b32 	%r1557, %r1552, %r1553, 1;
	mov.b64 	%rd3044, {%r1557, %r1556};
	xor.b64  	%rd3045, %rd3044, %rd3043;
	shr.u64 	%rd3046, %rd13579, 7;
	xor.b64  	%rd3047, %rd3045, %rd3046;
	add.s64 	%rd13580, %rd3042, %rd3047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd3024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd3024;
	}
	shf.r.wrap.b32 	%r1560, %r1559, %r1558, 14;
	shf.r.wrap.b32 	%r1561, %r1558, %r1559, 14;
	mov.b64 	%rd3048, {%r1561, %r1560};
	shf.r.wrap.b32 	%r1562, %r1559, %r1558, 18;
	shf.r.wrap.b32 	%r1563, %r1558, %r1559, 18;
	mov.b64 	%rd3049, {%r1563, %r1562};
	xor.b64  	%rd3050, %rd3048, %rd3049;
	shf.l.wrap.b32 	%r1564, %r1558, %r1559, 23;
	shf.l.wrap.b32 	%r1565, %r1559, %r1558, 23;
	mov.b64 	%rd3051, {%r1565, %r1564};
	xor.b64  	%rd3052, %rd3050, %rd3051;
	xor.b64  	%rd3053, %rd2987, %rd2950;
	and.b64  	%rd3054, %rd3024, %rd3053;
	xor.b64  	%rd3055, %rd3054, %rd2950;
	add.s64 	%rd3056, %rd3055, %rd2913;
	add.s64 	%rd3057, %rd3056, %rd3052;
	ld.const.u64 	%rd3058, [%rd2714+72];
	add.s64 	%rd3059, %rd3057, %rd3058;
	add.s64 	%rd3060, %rd3059, %rd13580;
	add.s64 	%rd3061, %rd3060, %rd2924;
	and.b64  	%rd3062, %rd3035, %rd2998;
	or.b64  	%rd3063, %rd3035, %rd2998;
	and.b64  	%rd3064, %rd3063, %rd2961;
	or.b64  	%rd3065, %rd3064, %rd3062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd3035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd3035;
	}
	shf.r.wrap.b32 	%r1568, %r1567, %r1566, 28;
	shf.r.wrap.b32 	%r1569, %r1566, %r1567, 28;
	mov.b64 	%rd3066, {%r1569, %r1568};
	shf.l.wrap.b32 	%r1570, %r1566, %r1567, 30;
	shf.l.wrap.b32 	%r1571, %r1567, %r1566, 30;
	mov.b64 	%rd3067, {%r1571, %r1570};
	xor.b64  	%rd3068, %rd3066, %rd3067;
	shf.l.wrap.b32 	%r1572, %r1566, %r1567, 25;
	shf.l.wrap.b32 	%r1573, %r1567, %r1566, 25;
	mov.b64 	%rd3069, {%r1573, %r1572};
	xor.b64  	%rd3070, %rd3068, %rd3069;
	add.s64 	%rd3071, %rd3070, %rd3065;
	add.s64 	%rd3072, %rd3071, %rd3060;
	add.s64 	%rd3073, %rd13586, %rd13579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd13581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd13581;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 19;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 19;
	mov.b64 	%rd3074, {%r1577, %r1576};
	shf.l.wrap.b32 	%r1578, %r1574, %r1575, 3;
	shf.l.wrap.b32 	%r1579, %r1575, %r1574, 3;
	mov.b64 	%rd3075, {%r1579, %r1578};
	xor.b64  	%rd3076, %rd3074, %rd3075;
	shr.u64 	%rd3077, %rd13581, 6;
	xor.b64  	%rd3078, %rd3076, %rd3077;
	add.s64 	%rd3079, %rd3073, %rd3078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1580,%dummy}, %rd13578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1581}, %rd13578;
	}
	shf.r.wrap.b32 	%r1582, %r1581, %r1580, 8;
	shf.r.wrap.b32 	%r1583, %r1580, %r1581, 8;
	mov.b64 	%rd3080, {%r1583, %r1582};
	shf.r.wrap.b32 	%r1584, %r1581, %r1580, 1;
	shf.r.wrap.b32 	%r1585, %r1580, %r1581, 1;
	mov.b64 	%rd3081, {%r1585, %r1584};
	xor.b64  	%rd3082, %rd3081, %rd3080;
	shr.u64 	%rd3083, %rd13578, 7;
	xor.b64  	%rd3084, %rd3082, %rd3083;
	add.s64 	%rd13579, %rd3079, %rd3084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd3061;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 14;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 14;
	mov.b64 	%rd3085, {%r1589, %r1588};
	shf.r.wrap.b32 	%r1590, %r1587, %r1586, 18;
	shf.r.wrap.b32 	%r1591, %r1586, %r1587, 18;
	mov.b64 	%rd3086, {%r1591, %r1590};
	xor.b64  	%rd3087, %rd3085, %rd3086;
	shf.l.wrap.b32 	%r1592, %r1586, %r1587, 23;
	shf.l.wrap.b32 	%r1593, %r1587, %r1586, 23;
	mov.b64 	%rd3088, {%r1593, %r1592};
	xor.b64  	%rd3089, %rd3087, %rd3088;
	xor.b64  	%rd3090, %rd3024, %rd2987;
	and.b64  	%rd3091, %rd3061, %rd3090;
	xor.b64  	%rd3092, %rd3091, %rd2987;
	add.s64 	%rd3093, %rd3092, %rd2950;
	add.s64 	%rd3094, %rd3093, %rd3089;
	ld.const.u64 	%rd3095, [%rd2714+80];
	add.s64 	%rd3096, %rd3094, %rd3095;
	add.s64 	%rd3097, %rd3096, %rd13579;
	add.s64 	%rd3098, %rd3097, %rd2961;
	and.b64  	%rd3099, %rd3072, %rd3035;
	or.b64  	%rd3100, %rd3072, %rd3035;
	and.b64  	%rd3101, %rd3100, %rd2998;
	or.b64  	%rd3102, %rd3101, %rd3099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd3072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd3072;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 28;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 28;
	mov.b64 	%rd3103, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 30;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 30;
	mov.b64 	%rd3104, {%r1599, %r1598};
	xor.b64  	%rd3105, %rd3103, %rd3104;
	shf.l.wrap.b32 	%r1600, %r1594, %r1595, 25;
	shf.l.wrap.b32 	%r1601, %r1595, %r1594, 25;
	mov.b64 	%rd3106, {%r1601, %r1600};
	xor.b64  	%rd3107, %rd3105, %rd3106;
	add.s64 	%rd3108, %rd3107, %rd3102;
	add.s64 	%rd3109, %rd3108, %rd3097;
	add.s64 	%rd3110, %rd13585, %rd13578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd13580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd13580;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 19;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 19;
	mov.b64 	%rd3111, {%r1605, %r1604};
	shf.l.wrap.b32 	%r1606, %r1602, %r1603, 3;
	shf.l.wrap.b32 	%r1607, %r1603, %r1602, 3;
	mov.b64 	%rd3112, {%r1607, %r1606};
	xor.b64  	%rd3113, %rd3111, %rd3112;
	shr.u64 	%rd3114, %rd13580, 6;
	xor.b64  	%rd3115, %rd3113, %rd3114;
	add.s64 	%rd3116, %rd3110, %rd3115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1608,%dummy}, %rd13577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd13577;
	}
	shf.r.wrap.b32 	%r1610, %r1609, %r1608, 8;
	shf.r.wrap.b32 	%r1611, %r1608, %r1609, 8;
	mov.b64 	%rd3117, {%r1611, %r1610};
	shf.r.wrap.b32 	%r1612, %r1609, %r1608, 1;
	shf.r.wrap.b32 	%r1613, %r1608, %r1609, 1;
	mov.b64 	%rd3118, {%r1613, %r1612};
	xor.b64  	%rd3119, %rd3118, %rd3117;
	shr.u64 	%rd3120, %rd13577, 7;
	xor.b64  	%rd3121, %rd3119, %rd3120;
	add.s64 	%rd13578, %rd3116, %rd3121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd3098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd3098;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 14;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 14;
	mov.b64 	%rd3122, {%r1617, %r1616};
	shf.r.wrap.b32 	%r1618, %r1615, %r1614, 18;
	shf.r.wrap.b32 	%r1619, %r1614, %r1615, 18;
	mov.b64 	%rd3123, {%r1619, %r1618};
	xor.b64  	%rd3124, %rd3122, %rd3123;
	shf.l.wrap.b32 	%r1620, %r1614, %r1615, 23;
	shf.l.wrap.b32 	%r1621, %r1615, %r1614, 23;
	mov.b64 	%rd3125, {%r1621, %r1620};
	xor.b64  	%rd3126, %rd3124, %rd3125;
	xor.b64  	%rd3127, %rd3061, %rd3024;
	and.b64  	%rd3128, %rd3098, %rd3127;
	xor.b64  	%rd3129, %rd3128, %rd3024;
	add.s64 	%rd3130, %rd3129, %rd2987;
	add.s64 	%rd3131, %rd3130, %rd3126;
	ld.const.u64 	%rd3132, [%rd2714+88];
	add.s64 	%rd3133, %rd3131, %rd3132;
	add.s64 	%rd3134, %rd3133, %rd13578;
	add.s64 	%rd3135, %rd3134, %rd2998;
	and.b64  	%rd3136, %rd3109, %rd3072;
	or.b64  	%rd3137, %rd3109, %rd3072;
	and.b64  	%rd3138, %rd3137, %rd3035;
	or.b64  	%rd3139, %rd3138, %rd3136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1622,%dummy}, %rd3109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1623}, %rd3109;
	}
	shf.r.wrap.b32 	%r1624, %r1623, %r1622, 28;
	shf.r.wrap.b32 	%r1625, %r1622, %r1623, 28;
	mov.b64 	%rd3140, {%r1625, %r1624};
	shf.l.wrap.b32 	%r1626, %r1622, %r1623, 30;
	shf.l.wrap.b32 	%r1627, %r1623, %r1622, 30;
	mov.b64 	%rd3141, {%r1627, %r1626};
	xor.b64  	%rd3142, %rd3140, %rd3141;
	shf.l.wrap.b32 	%r1628, %r1622, %r1623, 25;
	shf.l.wrap.b32 	%r1629, %r1623, %r1622, 25;
	mov.b64 	%rd3143, {%r1629, %r1628};
	xor.b64  	%rd3144, %rd3142, %rd3143;
	add.s64 	%rd3145, %rd3144, %rd3139;
	add.s64 	%rd3146, %rd3145, %rd3134;
	add.s64 	%rd3147, %rd13584, %rd13577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1630,%dummy}, %rd13579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1631}, %rd13579;
	}
	shf.r.wrap.b32 	%r1632, %r1631, %r1630, 19;
	shf.r.wrap.b32 	%r1633, %r1630, %r1631, 19;
	mov.b64 	%rd3148, {%r1633, %r1632};
	shf.l.wrap.b32 	%r1634, %r1630, %r1631, 3;
	shf.l.wrap.b32 	%r1635, %r1631, %r1630, 3;
	mov.b64 	%rd3149, {%r1635, %r1634};
	xor.b64  	%rd3150, %rd3148, %rd3149;
	shr.u64 	%rd3151, %rd13579, 6;
	xor.b64  	%rd3152, %rd3150, %rd3151;
	add.s64 	%rd3153, %rd3147, %rd3152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1636,%dummy}, %rd13576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1637}, %rd13576;
	}
	shf.r.wrap.b32 	%r1638, %r1637, %r1636, 8;
	shf.r.wrap.b32 	%r1639, %r1636, %r1637, 8;
	mov.b64 	%rd3154, {%r1639, %r1638};
	shf.r.wrap.b32 	%r1640, %r1637, %r1636, 1;
	shf.r.wrap.b32 	%r1641, %r1636, %r1637, 1;
	mov.b64 	%rd3155, {%r1641, %r1640};
	xor.b64  	%rd3156, %rd3155, %rd3154;
	shr.u64 	%rd3157, %rd13576, 7;
	xor.b64  	%rd3158, %rd3156, %rd3157;
	add.s64 	%rd13577, %rd3153, %rd3158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1642,%dummy}, %rd3135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1643}, %rd3135;
	}
	shf.r.wrap.b32 	%r1644, %r1643, %r1642, 14;
	shf.r.wrap.b32 	%r1645, %r1642, %r1643, 14;
	mov.b64 	%rd3159, {%r1645, %r1644};
	shf.r.wrap.b32 	%r1646, %r1643, %r1642, 18;
	shf.r.wrap.b32 	%r1647, %r1642, %r1643, 18;
	mov.b64 	%rd3160, {%r1647, %r1646};
	xor.b64  	%rd3161, %rd3159, %rd3160;
	shf.l.wrap.b32 	%r1648, %r1642, %r1643, 23;
	shf.l.wrap.b32 	%r1649, %r1643, %r1642, 23;
	mov.b64 	%rd3162, {%r1649, %r1648};
	xor.b64  	%rd3163, %rd3161, %rd3162;
	xor.b64  	%rd3164, %rd3098, %rd3061;
	and.b64  	%rd3165, %rd3135, %rd3164;
	xor.b64  	%rd3166, %rd3165, %rd3061;
	add.s64 	%rd3167, %rd3166, %rd3024;
	add.s64 	%rd3168, %rd3167, %rd3163;
	ld.const.u64 	%rd3169, [%rd2714+96];
	add.s64 	%rd3170, %rd3168, %rd3169;
	add.s64 	%rd3171, %rd3170, %rd13577;
	add.s64 	%rd13597, %rd3171, %rd3035;
	and.b64  	%rd3172, %rd3146, %rd3109;
	or.b64  	%rd3173, %rd3146, %rd3109;
	and.b64  	%rd3174, %rd3173, %rd3072;
	or.b64  	%rd3175, %rd3174, %rd3172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1650,%dummy}, %rd3146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1651}, %rd3146;
	}
	shf.r.wrap.b32 	%r1652, %r1651, %r1650, 28;
	shf.r.wrap.b32 	%r1653, %r1650, %r1651, 28;
	mov.b64 	%rd3176, {%r1653, %r1652};
	shf.l.wrap.b32 	%r1654, %r1650, %r1651, 30;
	shf.l.wrap.b32 	%r1655, %r1651, %r1650, 30;
	mov.b64 	%rd3177, {%r1655, %r1654};
	xor.b64  	%rd3178, %rd3176, %rd3177;
	shf.l.wrap.b32 	%r1656, %r1650, %r1651, 25;
	shf.l.wrap.b32 	%r1657, %r1651, %r1650, 25;
	mov.b64 	%rd3179, {%r1657, %r1656};
	xor.b64  	%rd3180, %rd3178, %rd3179;
	add.s64 	%rd3181, %rd3180, %rd3175;
	add.s64 	%rd13593, %rd3181, %rd3171;
	add.s64 	%rd3182, %rd13583, %rd13576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1658,%dummy}, %rd13578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1659}, %rd13578;
	}
	shf.r.wrap.b32 	%r1660, %r1659, %r1658, 19;
	shf.r.wrap.b32 	%r1661, %r1658, %r1659, 19;
	mov.b64 	%rd3183, {%r1661, %r1660};
	shf.l.wrap.b32 	%r1662, %r1658, %r1659, 3;
	shf.l.wrap.b32 	%r1663, %r1659, %r1658, 3;
	mov.b64 	%rd3184, {%r1663, %r1662};
	xor.b64  	%rd3185, %rd3183, %rd3184;
	shr.u64 	%rd3186, %rd13578, 6;
	xor.b64  	%rd3187, %rd3185, %rd3186;
	add.s64 	%rd3188, %rd3182, %rd3187;
	shf.r.wrap.b32 	%r1664, %r1294, %r1295, 8;
	shf.r.wrap.b32 	%r1665, %r1295, %r1294, 8;
	mov.b64 	%rd3189, {%r1665, %r1664};
	shf.r.wrap.b32 	%r1666, %r1294, %r1295, 1;
	shf.r.wrap.b32 	%r1667, %r1295, %r1294, 1;
	mov.b64 	%rd3190, {%r1667, %r1666};
	xor.b64  	%rd3191, %rd3190, %rd3189;
	shr.u64 	%rd3192, %rd13575, 7;
	xor.b64  	%rd3193, %rd3191, %rd3192;
	add.s64 	%rd13576, %rd3188, %rd3193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd13597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd13597;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 14;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 14;
	mov.b64 	%rd3194, {%r1671, %r1670};
	shf.r.wrap.b32 	%r1672, %r1669, %r1668, 18;
	shf.r.wrap.b32 	%r1673, %r1668, %r1669, 18;
	mov.b64 	%rd3195, {%r1673, %r1672};
	xor.b64  	%rd3196, %rd3194, %rd3195;
	shf.l.wrap.b32 	%r1674, %r1668, %r1669, 23;
	shf.l.wrap.b32 	%r1675, %r1669, %r1668, 23;
	mov.b64 	%rd3197, {%r1675, %r1674};
	xor.b64  	%rd3198, %rd3196, %rd3197;
	xor.b64  	%rd3199, %rd3135, %rd3098;
	and.b64  	%rd3200, %rd13597, %rd3199;
	xor.b64  	%rd3201, %rd3200, %rd3098;
	add.s64 	%rd3202, %rd3201, %rd3061;
	add.s64 	%rd3203, %rd3202, %rd3198;
	ld.const.u64 	%rd3204, [%rd2714+104];
	add.s64 	%rd3205, %rd3203, %rd3204;
	add.s64 	%rd3206, %rd3205, %rd13576;
	add.s64 	%rd13596, %rd3206, %rd3072;
	and.b64  	%rd3207, %rd13593, %rd3146;
	or.b64  	%rd3208, %rd13593, %rd3146;
	and.b64  	%rd3209, %rd3208, %rd3109;
	or.b64  	%rd3210, %rd3209, %rd3207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1676,%dummy}, %rd13593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1677}, %rd13593;
	}
	shf.r.wrap.b32 	%r1678, %r1677, %r1676, 28;
	shf.r.wrap.b32 	%r1679, %r1676, %r1677, 28;
	mov.b64 	%rd3211, {%r1679, %r1678};
	shf.l.wrap.b32 	%r1680, %r1676, %r1677, 30;
	shf.l.wrap.b32 	%r1681, %r1677, %r1676, 30;
	mov.b64 	%rd3212, {%r1681, %r1680};
	xor.b64  	%rd3213, %rd3211, %rd3212;
	shf.l.wrap.b32 	%r1682, %r1676, %r1677, 25;
	shf.l.wrap.b32 	%r1683, %r1677, %r1676, 25;
	mov.b64 	%rd3214, {%r1683, %r1682};
	xor.b64  	%rd3215, %rd3213, %rd3214;
	add.s64 	%rd3216, %rd3215, %rd3210;
	add.s64 	%rd13592, %rd3216, %rd3206;
	add.s64 	%rd3217, %rd13582, %rd13575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1684,%dummy}, %rd13577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1685}, %rd13577;
	}
	shf.r.wrap.b32 	%r1686, %r1685, %r1684, 19;
	shf.r.wrap.b32 	%r1687, %r1684, %r1685, 19;
	mov.b64 	%rd3218, {%r1687, %r1686};
	shf.l.wrap.b32 	%r1688, %r1684, %r1685, 3;
	shf.l.wrap.b32 	%r1689, %r1685, %r1684, 3;
	mov.b64 	%rd3219, {%r1689, %r1688};
	xor.b64  	%rd3220, %rd3218, %rd3219;
	shr.u64 	%rd3221, %rd13577, 6;
	xor.b64  	%rd3222, %rd3220, %rd3221;
	add.s64 	%rd3223, %rd3217, %rd3222;
	shf.r.wrap.b32 	%r1690, %r1322, %r1323, 8;
	shf.r.wrap.b32 	%r1691, %r1323, %r1322, 8;
	mov.b64 	%rd3224, {%r1691, %r1690};
	shf.r.wrap.b32 	%r1692, %r1322, %r1323, 1;
	shf.r.wrap.b32 	%r1693, %r1323, %r1322, 1;
	mov.b64 	%rd3225, {%r1693, %r1692};
	xor.b64  	%rd3226, %rd3225, %rd3224;
	shr.u64 	%rd3227, %rd13574, 7;
	xor.b64  	%rd3228, %rd3226, %rd3227;
	add.s64 	%rd13575, %rd3223, %rd3228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd13596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd13596;
	}
	shf.r.wrap.b32 	%r1696, %r1695, %r1694, 14;
	shf.r.wrap.b32 	%r1697, %r1694, %r1695, 14;
	mov.b64 	%rd3229, {%r1697, %r1696};
	shf.r.wrap.b32 	%r1698, %r1695, %r1694, 18;
	shf.r.wrap.b32 	%r1699, %r1694, %r1695, 18;
	mov.b64 	%rd3230, {%r1699, %r1698};
	xor.b64  	%rd3231, %rd3229, %rd3230;
	shf.l.wrap.b32 	%r1700, %r1694, %r1695, 23;
	shf.l.wrap.b32 	%r1701, %r1695, %r1694, 23;
	mov.b64 	%rd3232, {%r1701, %r1700};
	xor.b64  	%rd3233, %rd3231, %rd3232;
	xor.b64  	%rd3234, %rd13597, %rd3135;
	and.b64  	%rd3235, %rd13596, %rd3234;
	xor.b64  	%rd3236, %rd3235, %rd3135;
	add.s64 	%rd3237, %rd3236, %rd3098;
	add.s64 	%rd3238, %rd3237, %rd3233;
	ld.const.u64 	%rd3239, [%rd2714+112];
	add.s64 	%rd3240, %rd3238, %rd3239;
	add.s64 	%rd3241, %rd3240, %rd13575;
	add.s64 	%rd13595, %rd3241, %rd3109;
	and.b64  	%rd3242, %rd13592, %rd13593;
	or.b64  	%rd3243, %rd13592, %rd13593;
	and.b64  	%rd3244, %rd3243, %rd3146;
	or.b64  	%rd3245, %rd3244, %rd3242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd13592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1703}, %rd13592;
	}
	shf.r.wrap.b32 	%r1704, %r1703, %r1702, 28;
	shf.r.wrap.b32 	%r1705, %r1702, %r1703, 28;
	mov.b64 	%rd3246, {%r1705, %r1704};
	shf.l.wrap.b32 	%r1706, %r1702, %r1703, 30;
	shf.l.wrap.b32 	%r1707, %r1703, %r1702, 30;
	mov.b64 	%rd3247, {%r1707, %r1706};
	xor.b64  	%rd3248, %rd3246, %rd3247;
	shf.l.wrap.b32 	%r1708, %r1702, %r1703, 25;
	shf.l.wrap.b32 	%r1709, %r1703, %r1702, 25;
	mov.b64 	%rd3249, {%r1709, %r1708};
	xor.b64  	%rd3250, %rd3248, %rd3249;
	add.s64 	%rd3251, %rd3250, %rd3245;
	add.s64 	%rd13591, %rd3251, %rd3241;
	add.s64 	%rd3252, %rd13581, %rd13574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd13576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd13576;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 19;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 19;
	mov.b64 	%rd3253, {%r1713, %r1712};
	shf.l.wrap.b32 	%r1714, %r1710, %r1711, 3;
	shf.l.wrap.b32 	%r1715, %r1711, %r1710, 3;
	mov.b64 	%rd3254, {%r1715, %r1714};
	xor.b64  	%rd3255, %rd3253, %rd3254;
	shr.u64 	%rd3256, %rd13576, 6;
	xor.b64  	%rd3257, %rd3255, %rd3256;
	add.s64 	%rd3258, %rd3252, %rd3257;
	shf.r.wrap.b32 	%r1716, %r1351, %r1350, 1;
	shf.r.wrap.b32 	%r1717, %r1350, %r1351, 1;
	mov.b64 	%rd3259, {%r1717, %r1716};
	shf.r.wrap.b32 	%r1718, %r1351, %r1350, 8;
	shf.r.wrap.b32 	%r1719, %r1350, %r1351, 8;
	mov.b64 	%rd3260, {%r1719, %r1718};
	xor.b64  	%rd3261, %rd3259, %rd3260;
	shr.u64 	%rd3262, %rd13589, 7;
	xor.b64  	%rd3263, %rd3261, %rd3262;
	add.s64 	%rd13574, %rd3258, %rd3263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd13595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd13595;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 14;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 14;
	mov.b64 	%rd3264, {%r1723, %r1722};
	shf.r.wrap.b32 	%r1724, %r1721, %r1720, 18;
	shf.r.wrap.b32 	%r1725, %r1720, %r1721, 18;
	mov.b64 	%rd3265, {%r1725, %r1724};
	xor.b64  	%rd3266, %rd3264, %rd3265;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 23;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 23;
	mov.b64 	%rd3267, {%r1727, %r1726};
	xor.b64  	%rd3268, %rd3266, %rd3267;
	xor.b64  	%rd3269, %rd13596, %rd13597;
	and.b64  	%rd3270, %rd13595, %rd3269;
	xor.b64  	%rd3271, %rd3270, %rd13597;
	add.s64 	%rd3272, %rd3271, %rd3135;
	add.s64 	%rd3273, %rd3272, %rd3268;
	ld.const.u64 	%rd3274, [%rd2714+120];
	add.s64 	%rd3275, %rd3273, %rd3274;
	add.s64 	%rd3276, %rd3275, %rd13574;
	add.s64 	%rd13594, %rd3276, %rd3146;
	and.b64  	%rd3277, %rd13591, %rd13592;
	or.b64  	%rd3278, %rd13591, %rd13592;
	and.b64  	%rd3279, %rd3278, %rd13593;
	or.b64  	%rd3280, %rd3279, %rd3277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd13591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd13591;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 28;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 28;
	mov.b64 	%rd3281, {%r1731, %r1730};
	shf.l.wrap.b32 	%r1732, %r1728, %r1729, 30;
	shf.l.wrap.b32 	%r1733, %r1729, %r1728, 30;
	mov.b64 	%rd3282, {%r1733, %r1732};
	xor.b64  	%rd3283, %rd3281, %rd3282;
	shf.l.wrap.b32 	%r1734, %r1728, %r1729, 25;
	shf.l.wrap.b32 	%r1735, %r1729, %r1728, 25;
	mov.b64 	%rd3284, {%r1735, %r1734};
	xor.b64  	%rd3285, %rd3283, %rd3284;
	add.s64 	%rd3286, %rd3285, %rd3280;
	add.s64 	%rd13590, %rd3286, %rd3276;
	add.s32 	%r9703, %r9703, 16;
	setp.lt.u32 	%p19, %r9703, 80;
	@%p19 bra 	$L__BB0_31;

	mov.u32 	%r9704, 0;
	add.s64 	%rd3287, %rd13573, %rd13590;
	mov.u64 	%rd3288, 0;
	st.local.u64 	[%rd2+-72], %rd3287;
	add.s64 	%rd3289, %rd13572, %rd13591;
	st.local.u64 	[%rd2+-64], %rd3289;
	add.s64 	%rd3290, %rd13571, %rd13592;
	st.local.u64 	[%rd2+-56], %rd3290;
	add.s64 	%rd3291, %rd13570, %rd13593;
	st.local.u64 	[%rd2+-48], %rd3291;
	add.s64 	%rd3292, %rd13569, %rd13594;
	st.local.u64 	[%rd2+-40], %rd3292;
	add.s64 	%rd3293, %rd13568, %rd13595;
	st.local.u64 	[%rd2+-32], %rd3293;
	add.s64 	%rd3294, %rd13567, %rd13596;
	st.local.u64 	[%rd2+-24], %rd3294;
	add.s64 	%rd3295, %rd13566, %rd13597;
	st.local.u64 	[%rd2+-16], %rd3295;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1737, %temp}, %rd3287;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1738}, %rd3287;
	}
	mov.u32 	%r1739, 291;
	prmt.b32 	%r1740, %r1737, %r9704, %r1739;
	prmt.b32 	%r1741, %r1738, %r9704, %r1739;
	mov.b64 	%rd3296, {%r1741, %r1740};
	add.u64 	%rd3297, %SP, 200;
	add.u64 	%rd212, %SPL, 200;
	st.local.u64 	[%rd212], %rd3296;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1742, %temp}, %rd3289;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1743}, %rd3289;
	}
	prmt.b32 	%r1744, %r1742, %r9704, %r1739;
	prmt.b32 	%r1745, %r1743, %r9704, %r1739;
	mov.b64 	%rd3298, {%r1745, %r1744};
	st.local.u64 	[%rd212+8], %rd3298;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1746, %temp}, %rd3290;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1747}, %rd3290;
	}
	prmt.b32 	%r1748, %r1746, %r9704, %r1739;
	prmt.b32 	%r1749, %r1747, %r9704, %r1739;
	mov.b64 	%rd3299, {%r1749, %r1748};
	st.local.u64 	[%rd212+16], %rd3299;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1750, %temp}, %rd3291;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1751}, %rd3291;
	}
	prmt.b32 	%r1752, %r1750, %r9704, %r1739;
	prmt.b32 	%r1753, %r1751, %r9704, %r1739;
	mov.b64 	%rd3300, {%r1753, %r1752};
	st.local.u64 	[%rd212+24], %rd3300;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1754, %temp}, %rd3292;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1755}, %rd3292;
	}
	prmt.b32 	%r1756, %r1754, %r9704, %r1739;
	prmt.b32 	%r1757, %r1755, %r9704, %r1739;
	mov.b64 	%rd3301, {%r1757, %r1756};
	st.local.u64 	[%rd212+32], %rd3301;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1758, %temp}, %rd3293;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1759}, %rd3293;
	}
	prmt.b32 	%r1760, %r1758, %r9704, %r1739;
	prmt.b32 	%r1761, %r1759, %r9704, %r1739;
	mov.b64 	%rd3302, {%r1761, %r1760};
	st.local.u64 	[%rd212+40], %rd3302;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1762, %temp}, %rd3294;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1763}, %rd3294;
	}
	prmt.b32 	%r1764, %r1762, %r9704, %r1739;
	prmt.b32 	%r1765, %r1763, %r9704, %r1739;
	mov.b64 	%rd3303, {%r1765, %r1764};
	st.local.u64 	[%rd212+48], %rd3303;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1766, %temp}, %rd3295;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1767}, %rd3295;
	}
	prmt.b32 	%r1768, %r1766, %r9704, %r1739;
	prmt.b32 	%r1769, %r1767, %r9704, %r1739;
	mov.b64 	%rd3304, {%r1769, %r1768};
	st.local.u64 	[%rd212+56], %rd3304;
	st.local.u64 	[%rd2], %rd3288;
	st.local.u64 	[%rd2+8], %rd3288;
	st.local.u64 	[%rd2+16], %rd3288;
	st.local.u64 	[%rd2+24], %rd3288;
	st.local.u64 	[%rd2+32], %rd3288;
	st.local.u64 	[%rd2+40], %rd3288;
	st.local.u64 	[%rd2+48], %rd3288;
	st.local.u64 	[%rd2+56], %rd3288;
	st.local.u64 	[%rd2+64], %rd3288;
	st.local.u64 	[%rd2+72], %rd3288;
	st.local.u64 	[%rd2+80], %rd3288;
	st.local.u64 	[%rd2+88], %rd3288;
	st.local.u64 	[%rd2+96], %rd3288;
	st.local.u64 	[%rd2+104], %rd3288;
	st.local.u64 	[%rd2+112], %rd3288;
	st.local.u64 	[%rd2+120], %rd3288;
	st.local.u32 	[%rd2+-4], %r9704;
	@%p1 bra 	$L__BB0_37;

	add.s64 	%rd13598, %rd1244, 8;
	mov.u32 	%r9706, %r9704;

$L__BB0_34:
	mul.wide.u32 	%rd3307, %r9706, 8;
	add.s64 	%rd3308, %rd1, %rd3307;
	ld.global.nc.u64 	%rd3309, [%rd13598];
	ld.local.u64 	%rd3310, [%rd3308+72];
	or.b64  	%rd3311, %rd3309, %rd3310;
	st.local.u64 	[%rd3308+72], %rd3311;
	setp.gt.u32 	%p21, %r9706, 14;
	@%p21 bra 	$L__BB0_36;

	add.s32 	%r9706, %r9706, 1;
	mul.wide.u32 	%rd3312, %r9706, 8;
	add.s64 	%rd3313, %rd1, %rd3312;
	mov.u64 	%rd3314, 0;
	st.local.u64 	[%rd3313+72], %rd3314;

$L__BB0_36:
	add.s64 	%rd13598, %rd13598, 8;
	add.s32 	%r9704, %r9704, 8;
	setp.lt.u32 	%p22, %r9704, %r2;
	@%p22 bra 	$L__BB0_34;

$L__BB0_37:
	st.local.u32 	[%rd2+-4], %r2;
	@%p4 bra 	$L__BB0_39;

	shl.b32 	%r9689, %r2, 3;
	cvt.u64.u32 	%rd13519, %r9689;
	and.b64  	%rd13518, %rd13519, 56;
	mov.u64 	%rd13517, clear_mask;
	add.s64 	%rd13516, %rd13517, %rd13518;
	and.b32  	%r1773, %r2, -8;
	cvt.u64.u32 	%rd3315, %r1773;
	add.s64 	%rd3316, %rd1, %rd3315;
	ld.const.u64 	%rd3317, [%rd13516];
	ld.local.u64 	%rd3318, [%rd3316+72];
	and.b64  	%rd3319, %rd3317, %rd3318;
	st.local.u64 	[%rd3316+72], %rd3319;

$L__BB0_39:
	setp.eq.s32 	%p120, %r9, 0;
	@%p120 bra 	$L__BB0_44;

	shl.b32 	%r9665, %r2, 3;
	ld.param.u64 	%rd13495, [kernel_prepare_param_0];
	add.s64 	%rd13599, %rd13495, 16;
	shr.u32 	%r9709, %r2, 3;
	and.b32  	%r1776, %r9665, 56;
	cvt.u64.u32 	%rd217, %r1776;
	neg.s32 	%r1777, %r1776;
	mov.u32 	%r9707, 0;
	and.b32  	%r1778, %r1777, 56;
	cvt.u64.u32 	%rd218, %r1778;

$L__BB0_41:
	mul.wide.u32 	%rd3320, %r9709, 8;
	add.s64 	%rd3321, %rd1, %rd3320;
	ld.const.u64 	%rd220, [%rd13599];
	cvt.u32.u64 	%r1779, %rd217;
	shl.b64 	%rd3322, %rd220, %r1779;
	ld.local.u64 	%rd3323, [%rd3321+72];
	or.b64  	%rd3324, %rd3322, %rd3323;
	st.local.u64 	[%rd3321+72], %rd3324;
	setp.gt.u32 	%p25, %r9709, 14;
	@%p25 bra 	$L__BB0_43;

	cvt.u32.u64 	%r1781, %rd218;
	shr.u64 	%rd3325, %rd220, %r1781;
	selp.b64 	%rd3326, 0, %rd3325, %p4;
	add.s32 	%r9709, %r9709, 1;
	mul.wide.u32 	%rd3327, %r9709, 8;
	add.s64 	%rd3328, %rd1, %rd3327;
	st.local.u64 	[%rd3328+72], %rd3326;

$L__BB0_43:
	add.s64 	%rd13599, %rd13599, 8;
	add.s32 	%r9707, %r9707, 8;
	setp.lt.u32 	%p27, %r9707, %r9;
	@%p27 bra 	$L__BB0_41;

$L__BB0_44:
	add.s32 	%r9666, %r2, %r9;
	st.local.u32 	[%rd2+-4], %r9666;
	@%p9 bra 	$L__BB0_46;

	add.s32 	%r9668, %r2, %r9;
	shl.b32 	%r9667, %r9668, 3;
	cvt.u64.u32 	%rd13498, %r9667;
	and.b64  	%rd13497, %rd13498, 56;
	add.s64 	%rd13496, %rd1255, %rd13497;
	and.b32  	%r1785, %r9668, -8;
	cvt.u64.u32 	%rd3329, %r1785;
	add.s64 	%rd3330, %rd1, %rd3329;
	ld.const.u64 	%rd3331, [%rd13496];
	ld.local.u64 	%rd3332, [%rd3330+72];
	and.b64  	%rd3333, %rd3331, %rd3332;
	st.local.u64 	[%rd3330+72], %rd3333;

$L__BB0_46:
	@%p1 bra 	$L__BB0_53;

	add.s32 	%r9670, %r2, %r9;
	shl.b32 	%r9669, %r9670, 3;
	cvta.to.local.u64 	%rd13600, %rd3297;
	shr.u32 	%r9712, %r9670, 3;
	and.b32  	%r1789, %r9669, 56;
	cvt.u64.u32 	%rd223, %r1789;
	neg.s32 	%r1790, %r1789;
	mov.u32 	%r9710, 0;
	and.b32  	%r1791, %r1790, 56;
	cvt.u64.u32 	%rd224, %r1791;

$L__BB0_48:
	mul.wide.u32 	%rd3335, %r9712, 8;
	add.s64 	%rd3336, %rd1, %rd3335;
	ld.local.u64 	%rd3337, [%rd13600];
	cvt.u32.u64 	%r1792, %rd223;
	shl.b64 	%rd3338, %rd3337, %r1792;
	ld.local.u64 	%rd3339, [%rd3336+72];
	or.b64  	%rd3340, %rd3338, %rd3339;
	st.local.u64 	[%rd3336+72], %rd3340;
	setp.gt.u32 	%p30, %r9712, 14;
	@%p30 bra 	$L__BB0_52;

	mov.u64 	%rd13601, 0;
	@%p9 bra 	$L__BB0_51;

	ld.local.u64 	%rd3342, [%rd13600];
	cvt.u32.u64 	%r1795, %rd224;
	shr.u64 	%rd13601, %rd3342, %r1795;

$L__BB0_51:
	add.s32 	%r9712, %r9712, 1;
	mul.wide.u32 	%rd3343, %r9712, 8;
	add.s64 	%rd3344, %rd1, %rd3343;
	st.local.u64 	[%rd3344+72], %rd13601;

$L__BB0_52:
	add.s64 	%rd13600, %rd13600, 8;
	add.s32 	%r9710, %r9710, 8;
	setp.lt.u32 	%p32, %r9710, %r2;
	@%p32 bra 	$L__BB0_48;

$L__BB0_53:
	add.s32 	%r9692, %r2, %r9;
	add.s32 	%r9691, %r9692, %r2;
	shl.b32 	%r9690, %r9691, 3;
	cvt.u64.u32 	%rd13522, %r9690;
	and.b64  	%rd13521, %rd13522, 56;
	add.s64 	%rd13520, %rd1255, %rd13521;
	add.s32 	%r9673, %r2, %r9;
	add.s32 	%r9672, %r9673, %r2;
	and.b32  	%r9671, %r9672, 7;
	st.local.u32 	[%rd2+-4], %r9672;
	shr.u32 	%r1798, %r9672, 3;
	shl.b32 	%r1799, %r1798, 3;
	cvt.u64.u32 	%rd3345, %r1799;
	add.s64 	%rd3346, %rd1, %rd3345;
	ld.const.u64 	%rd3347, [%rd13520];
	ld.local.u64 	%rd3348, [%rd3346+72];
	and.b64  	%rd3349, %rd3347, %rd3348;
	st.local.u64 	[%rd3346+72], %rd3349;
	setp.ne.s32 	%p33, %r9671, 0;
	selp.u32 	%r1801, 1, 0, %p33;
	add.s32 	%r9713, %r1798, %r1801;
	setp.gt.u32 	%p34, %r9713, 15;
	@%p34 bra 	$L__BB0_55;

$L__BB0_54:
	mul.wide.u32 	%rd3350, %r9713, 8;
	add.s64 	%rd3351, %rd1, %rd3350;
	mov.u64 	%rd3352, 0;
	st.local.u64 	[%rd3351+72], %rd3352;
	add.s32 	%r9713, %r9713, 1;
	setp.lt.u32 	%p35, %r9713, 16;
	@%p35 bra 	$L__BB0_54;

$L__BB0_55:
	add.s32 	%r9675, %r2, %r9;
	add.s32 	%r9715, %r9675, %r2;
	st.local.u32 	[%rd2+-8], %r9715;
	mov.u64 	%rd13668, 7640891576956012808;
	st.local.u64 	[%rd2+-72], %rd13668;
	mov.u64 	%rd13667, -4942790177534073029;
	st.local.u64 	[%rd2+-64], %rd13667;
	mov.u64 	%rd13666, 4354685564936845355;
	st.local.u64 	[%rd2+-56], %rd13666;
	mov.u64 	%rd13665, -6534734903238641935;
	st.local.u64 	[%rd2+-48], %rd13665;
	mov.u64 	%rd13664, 5840696475078001361;
	st.local.u64 	[%rd2+-40], %rd13664;
	mov.u64 	%rd13663, -7276294671716946913;
	st.local.u64 	[%rd2+-32], %rd13663;
	mov.u64 	%rd13662, 2270897969802886507;
	st.local.u64 	[%rd2+-24], %rd13662;
	mov.u64 	%rd13661, 6620516959819538809;
	st.local.u64 	[%rd2+-16], %rd13661;
	mov.u32 	%r9730, %r9715;
	@%p1 bra 	$L__BB0_92;

	add.s32 	%r9676, %r2, %r9;
	add.s64 	%rd229, %rd1244, 8;
	add.s32 	%r9730, %r9676, %r2;
	mov.u64 	%rd13668, 7640891576956012808;
	mov.u64 	%rd13667, -4942790177534073029;
	mov.u64 	%rd13666, 4354685564936845355;
	mov.u64 	%rd13665, -6534734903238641935;
	mov.u64 	%rd13664, 5840696475078001361;
	mov.u64 	%rd13663, -7276294671716946913;
	mov.u64 	%rd13662, 2270897969802886507;
	mov.u64 	%rd13661, 6620516959819538809;
	mov.u32 	%r9715, %r9730;
	mov.u32 	%r9716, %r2;

$L__BB0_57:
	and.b32  	%r1804, %r9716, 1;
	setp.eq.b32 	%p37, %r1804, 1;
	mov.pred 	%p38, 0;
	xor.pred  	%p39, %p37, %p38;
	not.pred 	%p40, %p39;
	@%p40 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_58;

$L__BB0_75:
	add.s32 	%r9715, %r9715, %r2;
	st.local.u32 	[%rd2+-8], %r9715;
	add.s32 	%r2590, %r9730, %r2;
	setp.lt.u32 	%p56, %r2590, 129;
	mov.u32 	%r2591, 128;
	sub.s32 	%r78, %r2591, %r9730;
	selp.b32 	%r79, %r2, %r78, %p56;
	and.b32  	%r80, %r9730, 7;
	setp.eq.s32 	%p57, %r79, 0;
	@%p57 bra 	$L__BB0_80;

	shl.b32 	%r2593, %r80, 3;
	shr.u32 	%r9726, %r9730, 3;
	cvt.u64.u32 	%rd328, %r2593;
	neg.s32 	%r2594, %r2593;
	mov.u32 	%r9724, 0;
	and.b32  	%r2595, %r2594, 56;
	cvt.u64.u32 	%rd329, %r2595;
	mov.u64 	%rd13636, %rd229;

$L__BB0_77:
	mul.wide.u32 	%rd4389, %r9726, 8;
	add.s64 	%rd4390, %rd1, %rd4389;
	ld.global.nc.u64 	%rd331, [%rd13636];
	cvt.u32.u64 	%r2596, %rd328;
	shl.b64 	%rd4391, %rd331, %r2596;
	ld.local.u64 	%rd4392, [%rd4390+72];
	or.b64  	%rd4393, %rd4391, %rd4392;
	st.local.u64 	[%rd4390+72], %rd4393;
	setp.gt.u32 	%p58, %r9726, 14;
	@%p58 bra 	$L__BB0_79;

	setp.eq.s32 	%p59, %r80, 0;
	cvt.u32.u64 	%r2597, %rd329;
	shr.u64 	%rd4394, %rd331, %r2597;
	selp.b64 	%rd4395, 0, %rd4394, %p59;
	add.s32 	%r9726, %r9726, 1;
	mul.wide.u32 	%rd4396, %r9726, 8;
	add.s64 	%rd4397, %rd1, %rd4396;
	st.local.u64 	[%rd4397+72], %rd4395;

$L__BB0_79:
	add.s64 	%rd13636, %rd13636, 8;
	add.s32 	%r9724, %r9724, 8;
	setp.lt.u32 	%p60, %r9724, %r79;
	@%p60 bra 	$L__BB0_77;

$L__BB0_80:
	add.s32 	%r9730, %r9730, %r79;
	st.local.u32 	[%rd2+-4], %r9730;
	and.b32  	%r88, %r9730, 7;
	setp.eq.s32 	%p61, %r88, 0;
	@%p61 bra 	$L__BB0_82;

	and.b32  	%r2598, %r9730, -8;
	cvt.u64.u32 	%rd4398, %r2598;
	add.s64 	%rd4399, %rd1, %rd4398;
	mul.wide.u32 	%rd4400, %r88, 8;
	add.s64 	%rd4402, %rd1255, %rd4400;
	ld.const.u64 	%rd4403, [%rd4402];
	ld.local.u64 	%rd4404, [%rd4399+72];
	and.b64  	%rd4405, %rd4403, %rd4404;
	st.local.u64 	[%rd4399+72], %rd4405;

$L__BB0_82:
	setp.ne.s32 	%p62, %r9730, 128;
	@%p62 bra 	$L__BB0_90;

	ld.local.u64 	%rd4406, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2600, %temp}, %rd4406;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2601}, %rd4406;
	}
	mov.u32 	%r2602, 291;
	mov.u32 	%r2603, 0;
	prmt.b32 	%r2604, %r2600, %r2603, %r2602;
	prmt.b32 	%r2605, %r2601, %r2603, %r2602;
	mov.b64 	%rd13652, {%r2605, %r2604};
	ld.local.u64 	%rd4407, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2606, %temp}, %rd4407;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2607}, %rd4407;
	}
	prmt.b32 	%r2608, %r2606, %r2603, %r2602;
	prmt.b32 	%r2609, %r2607, %r2603, %r2602;
	mov.b64 	%rd13651, {%r2609, %r2608};
	ld.local.u64 	%rd4408, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2610, %temp}, %rd4408;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2611}, %rd4408;
	}
	prmt.b32 	%r2612, %r2610, %r2603, %r2602;
	prmt.b32 	%r2613, %r2611, %r2603, %r2602;
	mov.b64 	%rd13650, {%r2613, %r2612};
	ld.local.u64 	%rd4409, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2614, %temp}, %rd4409;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2615}, %rd4409;
	}
	prmt.b32 	%r2616, %r2614, %r2603, %r2602;
	prmt.b32 	%r2617, %r2615, %r2603, %r2602;
	mov.b64 	%rd13649, {%r2617, %r2616};
	ld.local.u64 	%rd4410, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2618, %temp}, %rd4410;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2619}, %rd4410;
	}
	prmt.b32 	%r2620, %r2618, %r2603, %r2602;
	prmt.b32 	%r2621, %r2619, %r2603, %r2602;
	mov.b64 	%rd13648, {%r2621, %r2620};
	ld.local.u64 	%rd4411, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2622, %temp}, %rd4411;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2623}, %rd4411;
	}
	prmt.b32 	%r2624, %r2622, %r2603, %r2602;
	prmt.b32 	%r2625, %r2623, %r2603, %r2602;
	mov.b64 	%rd13647, {%r2625, %r2624};
	ld.local.u64 	%rd4412, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2626, %temp}, %rd4412;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2627}, %rd4412;
	}
	prmt.b32 	%r2628, %r2626, %r2603, %r2602;
	prmt.b32 	%r2629, %r2627, %r2603, %r2602;
	mov.b64 	%rd13646, {%r2629, %r2628};
	ld.local.u64 	%rd4413, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2630, %temp}, %rd4413;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2631}, %rd4413;
	}
	prmt.b32 	%r2632, %r2630, %r2603, %r2602;
	prmt.b32 	%r2633, %r2631, %r2603, %r2602;
	mov.b64 	%rd13645, {%r2633, %r2632};
	ld.local.u64 	%rd4414, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2634, %temp}, %rd4414;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2635}, %rd4414;
	}
	prmt.b32 	%r2636, %r2634, %r2603, %r2602;
	prmt.b32 	%r2637, %r2635, %r2603, %r2602;
	mov.b64 	%rd13644, {%r2637, %r2636};
	ld.local.u64 	%rd4415, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2638, %temp}, %rd4415;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2639}, %rd4415;
	}
	prmt.b32 	%r2640, %r2638, %r2603, %r2602;
	prmt.b32 	%r2641, %r2639, %r2603, %r2602;
	mov.b64 	%rd13643, {%r2641, %r2640};
	ld.local.u64 	%rd4416, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2642, %temp}, %rd4416;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2643}, %rd4416;
	}
	prmt.b32 	%r2644, %r2642, %r2603, %r2602;
	prmt.b32 	%r2645, %r2643, %r2603, %r2602;
	mov.b64 	%rd13642, {%r2645, %r2644};
	ld.local.u64 	%rd4417, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2646, %temp}, %rd4417;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2647}, %rd4417;
	}
	prmt.b32 	%r2648, %r2646, %r2603, %r2602;
	prmt.b32 	%r2649, %r2647, %r2603, %r2602;
	mov.b64 	%rd13641, {%r2649, %r2648};
	ld.local.u64 	%rd4418, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2650, %temp}, %rd4418;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2651}, %rd4418;
	}
	prmt.b32 	%r2652, %r2650, %r2603, %r2602;
	prmt.b32 	%r2653, %r2651, %r2603, %r2602;
	mov.b64 	%rd13640, {%r2653, %r2652};
	ld.local.u64 	%rd4419, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2654, %temp}, %rd4419;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2655}, %rd4419;
	}
	prmt.b32 	%r2656, %r2654, %r2603, %r2602;
	prmt.b32 	%r2657, %r2655, %r2603, %r2602;
	mov.b64 	%rd13639, {%r2657, %r2656};
	ld.local.u64 	%rd4420, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2658, %temp}, %rd4420;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2659}, %rd4420;
	}
	prmt.b32 	%r2660, %r2658, %r2603, %r2602;
	prmt.b32 	%r2661, %r2659, %r2603, %r2602;
	mov.b64 	%rd13638, {%r2661, %r2660};
	ld.local.u64 	%rd4421, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2662, %temp}, %rd4421;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2663}, %rd4421;
	}
	prmt.b32 	%r2664, %r2662, %r2603, %r2602;
	prmt.b32 	%r2665, %r2663, %r2603, %r2602;
	mov.b64 	%rd13637, {%r2665, %r2664};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2666,%dummy}, %rd13664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2667}, %rd13664;
	}
	shf.r.wrap.b32 	%r2668, %r2667, %r2666, 18;
	shf.r.wrap.b32 	%r2669, %r2666, %r2667, 18;
	mov.b64 	%rd4422, {%r2669, %r2668};
	shf.r.wrap.b32 	%r2670, %r2667, %r2666, 14;
	shf.r.wrap.b32 	%r2671, %r2666, %r2667, 14;
	mov.b64 	%rd4423, {%r2671, %r2670};
	xor.b64  	%rd4424, %rd4423, %rd4422;
	shf.l.wrap.b32 	%r2672, %r2666, %r2667, 23;
	shf.l.wrap.b32 	%r2673, %r2667, %r2666, 23;
	mov.b64 	%rd4425, {%r2673, %r2672};
	xor.b64  	%rd4426, %rd4424, %rd4425;
	xor.b64  	%rd4427, %rd13663, %rd13662;
	and.b64  	%rd4428, %rd13664, %rd4427;
	xor.b64  	%rd4429, %rd4428, %rd13662;
	add.s64 	%rd4430, %rd4429, %rd13661;
	add.s64 	%rd4431, %rd4430, %rd4426;
	add.s64 	%rd4432, %rd4431, %rd13652;
	add.s64 	%rd4433, %rd4432, 4794697086780616226;
	add.s64 	%rd4434, %rd4433, %rd13665;
	or.b64  	%rd4435, %rd13668, %rd13667;
	and.b64  	%rd4436, %rd4435, %rd13666;
	and.b64  	%rd4437, %rd13668, %rd13667;
	or.b64  	%rd4438, %rd4436, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2674}, %rd13668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2675,%dummy}, %rd13668;
	}
	shf.l.wrap.b32 	%r2676, %r2675, %r2674, 30;
	shf.l.wrap.b32 	%r2677, %r2674, %r2675, 30;
	mov.b64 	%rd4439, {%r2677, %r2676};
	shf.r.wrap.b32 	%r2678, %r2674, %r2675, 28;
	shf.r.wrap.b32 	%r2679, %r2675, %r2674, 28;
	mov.b64 	%rd4440, {%r2679, %r2678};
	xor.b64  	%rd4441, %rd4440, %rd4439;
	shf.l.wrap.b32 	%r2680, %r2675, %r2674, 25;
	shf.l.wrap.b32 	%r2681, %r2674, %r2675, 25;
	mov.b64 	%rd4442, {%r2681, %r2680};
	xor.b64  	%rd4443, %rd4441, %rd4442;
	add.s64 	%rd4444, %rd4443, %rd4438;
	add.s64 	%rd4445, %rd4444, %rd4433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2682,%dummy}, %rd4434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2683}, %rd4434;
	}
	shf.r.wrap.b32 	%r2684, %r2683, %r2682, 14;
	shf.r.wrap.b32 	%r2685, %r2682, %r2683, 14;
	mov.b64 	%rd4446, {%r2685, %r2684};
	shf.r.wrap.b32 	%r2686, %r2683, %r2682, 18;
	shf.r.wrap.b32 	%r2687, %r2682, %r2683, 18;
	mov.b64 	%rd4447, {%r2687, %r2686};
	xor.b64  	%rd4448, %rd4446, %rd4447;
	shf.l.wrap.b32 	%r2688, %r2682, %r2683, 23;
	shf.l.wrap.b32 	%r2689, %r2683, %r2682, 23;
	mov.b64 	%rd4449, {%r2689, %r2688};
	xor.b64  	%rd4450, %rd4448, %rd4449;
	xor.b64  	%rd4451, %rd13664, %rd13663;
	and.b64  	%rd4452, %rd4434, %rd4451;
	xor.b64  	%rd4453, %rd4452, %rd13663;
	add.s64 	%rd4454, %rd4453, %rd13662;
	add.s64 	%rd4455, %rd4454, %rd4450;
	add.s64 	%rd4456, %rd4455, %rd13651;
	add.s64 	%rd4457, %rd4456, 8158064640168781261;
	add.s64 	%rd4458, %rd4457, %rd13666;
	and.b64  	%rd4459, %rd4445, %rd13668;
	or.b64  	%rd4460, %rd4445, %rd13668;
	and.b64  	%rd4461, %rd4460, %rd13667;
	or.b64  	%rd4462, %rd4461, %rd4459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2690,%dummy}, %rd4445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2691}, %rd4445;
	}
	shf.r.wrap.b32 	%r2692, %r2691, %r2690, 28;
	shf.r.wrap.b32 	%r2693, %r2690, %r2691, 28;
	mov.b64 	%rd4463, {%r2693, %r2692};
	shf.l.wrap.b32 	%r2694, %r2690, %r2691, 30;
	shf.l.wrap.b32 	%r2695, %r2691, %r2690, 30;
	mov.b64 	%rd4464, {%r2695, %r2694};
	xor.b64  	%rd4465, %rd4463, %rd4464;
	shf.l.wrap.b32 	%r2696, %r2690, %r2691, 25;
	shf.l.wrap.b32 	%r2697, %r2691, %r2690, 25;
	mov.b64 	%rd4466, {%r2697, %r2696};
	xor.b64  	%rd4467, %rd4465, %rd4466;
	add.s64 	%rd4468, %rd4467, %rd4462;
	add.s64 	%rd4469, %rd4468, %rd4457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2698,%dummy}, %rd4458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2699}, %rd4458;
	}
	shf.r.wrap.b32 	%r2700, %r2699, %r2698, 14;
	shf.r.wrap.b32 	%r2701, %r2698, %r2699, 14;
	mov.b64 	%rd4470, {%r2701, %r2700};
	shf.r.wrap.b32 	%r2702, %r2699, %r2698, 18;
	shf.r.wrap.b32 	%r2703, %r2698, %r2699, 18;
	mov.b64 	%rd4471, {%r2703, %r2702};
	xor.b64  	%rd4472, %rd4470, %rd4471;
	shf.l.wrap.b32 	%r2704, %r2698, %r2699, 23;
	shf.l.wrap.b32 	%r2705, %r2699, %r2698, 23;
	mov.b64 	%rd4473, {%r2705, %r2704};
	xor.b64  	%rd4474, %rd4472, %rd4473;
	xor.b64  	%rd4475, %rd4434, %rd13664;
	and.b64  	%rd4476, %rd4458, %rd4475;
	xor.b64  	%rd4477, %rd4476, %rd13664;
	add.s64 	%rd4478, %rd4477, %rd13663;
	add.s64 	%rd4479, %rd4478, %rd4474;
	add.s64 	%rd4480, %rd4479, %rd13650;
	add.s64 	%rd4481, %rd4480, -5349999486874862801;
	add.s64 	%rd4482, %rd4481, %rd13667;
	and.b64  	%rd4483, %rd4469, %rd4445;
	or.b64  	%rd4484, %rd4469, %rd4445;
	and.b64  	%rd4485, %rd4484, %rd13668;
	or.b64  	%rd4486, %rd4485, %rd4483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2706,%dummy}, %rd4469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2707}, %rd4469;
	}
	shf.r.wrap.b32 	%r2708, %r2707, %r2706, 28;
	shf.r.wrap.b32 	%r2709, %r2706, %r2707, 28;
	mov.b64 	%rd4487, {%r2709, %r2708};
	shf.l.wrap.b32 	%r2710, %r2706, %r2707, 30;
	shf.l.wrap.b32 	%r2711, %r2707, %r2706, 30;
	mov.b64 	%rd4488, {%r2711, %r2710};
	xor.b64  	%rd4489, %rd4487, %rd4488;
	shf.l.wrap.b32 	%r2712, %r2706, %r2707, 25;
	shf.l.wrap.b32 	%r2713, %r2707, %r2706, 25;
	mov.b64 	%rd4490, {%r2713, %r2712};
	xor.b64  	%rd4491, %rd4489, %rd4490;
	add.s64 	%rd4492, %rd4491, %rd4486;
	add.s64 	%rd4493, %rd4492, %rd4481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2714,%dummy}, %rd4482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2715}, %rd4482;
	}
	shf.r.wrap.b32 	%r2716, %r2715, %r2714, 14;
	shf.r.wrap.b32 	%r2717, %r2714, %r2715, 14;
	mov.b64 	%rd4494, {%r2717, %r2716};
	shf.r.wrap.b32 	%r2718, %r2715, %r2714, 18;
	shf.r.wrap.b32 	%r2719, %r2714, %r2715, 18;
	mov.b64 	%rd4495, {%r2719, %r2718};
	xor.b64  	%rd4496, %rd4494, %rd4495;
	shf.l.wrap.b32 	%r2720, %r2714, %r2715, 23;
	shf.l.wrap.b32 	%r2721, %r2715, %r2714, 23;
	mov.b64 	%rd4497, {%r2721, %r2720};
	xor.b64  	%rd4498, %rd4496, %rd4497;
	xor.b64  	%rd4499, %rd4458, %rd4434;
	and.b64  	%rd4500, %rd4482, %rd4499;
	xor.b64  	%rd4501, %rd4500, %rd4434;
	add.s64 	%rd4502, %rd4501, %rd13664;
	add.s64 	%rd4503, %rd4502, %rd4498;
	add.s64 	%rd4504, %rd4503, %rd13649;
	add.s64 	%rd4505, %rd4504, -1606136188198331460;
	add.s64 	%rd4506, %rd4505, %rd13668;
	and.b64  	%rd4507, %rd4493, %rd4469;
	or.b64  	%rd4508, %rd4493, %rd4469;
	and.b64  	%rd4509, %rd4508, %rd4445;
	or.b64  	%rd4510, %rd4509, %rd4507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2722,%dummy}, %rd4493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2723}, %rd4493;
	}
	shf.r.wrap.b32 	%r2724, %r2723, %r2722, 28;
	shf.r.wrap.b32 	%r2725, %r2722, %r2723, 28;
	mov.b64 	%rd4511, {%r2725, %r2724};
	shf.l.wrap.b32 	%r2726, %r2722, %r2723, 30;
	shf.l.wrap.b32 	%r2727, %r2723, %r2722, 30;
	mov.b64 	%rd4512, {%r2727, %r2726};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	shf.l.wrap.b32 	%r2728, %r2722, %r2723, 25;
	shf.l.wrap.b32 	%r2729, %r2723, %r2722, 25;
	mov.b64 	%rd4514, {%r2729, %r2728};
	xor.b64  	%rd4515, %rd4513, %rd4514;
	add.s64 	%rd4516, %rd4515, %rd4510;
	add.s64 	%rd4517, %rd4516, %rd4505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2730,%dummy}, %rd4506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2731}, %rd4506;
	}
	shf.r.wrap.b32 	%r2732, %r2731, %r2730, 14;
	shf.r.wrap.b32 	%r2733, %r2730, %r2731, 14;
	mov.b64 	%rd4518, {%r2733, %r2732};
	shf.r.wrap.b32 	%r2734, %r2731, %r2730, 18;
	shf.r.wrap.b32 	%r2735, %r2730, %r2731, 18;
	mov.b64 	%rd4519, {%r2735, %r2734};
	xor.b64  	%rd4520, %rd4518, %rd4519;
	shf.l.wrap.b32 	%r2736, %r2730, %r2731, 23;
	shf.l.wrap.b32 	%r2737, %r2731, %r2730, 23;
	mov.b64 	%rd4521, {%r2737, %r2736};
	xor.b64  	%rd4522, %rd4520, %rd4521;
	xor.b64  	%rd4523, %rd4482, %rd4458;
	and.b64  	%rd4524, %rd4506, %rd4523;
	xor.b64  	%rd4525, %rd4524, %rd4458;
	add.s64 	%rd4526, %rd4525, %rd4434;
	add.s64 	%rd4527, %rd4526, %rd4522;
	add.s64 	%rd4528, %rd4527, %rd13648;
	add.s64 	%rd4529, %rd4528, 4131703408338449720;
	add.s64 	%rd4530, %rd4529, %rd4445;
	and.b64  	%rd4531, %rd4517, %rd4493;
	or.b64  	%rd4532, %rd4517, %rd4493;
	and.b64  	%rd4533, %rd4532, %rd4469;
	or.b64  	%rd4534, %rd4533, %rd4531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2738,%dummy}, %rd4517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2739}, %rd4517;
	}
	shf.r.wrap.b32 	%r2740, %r2739, %r2738, 28;
	shf.r.wrap.b32 	%r2741, %r2738, %r2739, 28;
	mov.b64 	%rd4535, {%r2741, %r2740};
	shf.l.wrap.b32 	%r2742, %r2738, %r2739, 30;
	shf.l.wrap.b32 	%r2743, %r2739, %r2738, 30;
	mov.b64 	%rd4536, {%r2743, %r2742};
	xor.b64  	%rd4537, %rd4535, %rd4536;
	shf.l.wrap.b32 	%r2744, %r2738, %r2739, 25;
	shf.l.wrap.b32 	%r2745, %r2739, %r2738, 25;
	mov.b64 	%rd4538, {%r2745, %r2744};
	xor.b64  	%rd4539, %rd4537, %rd4538;
	add.s64 	%rd4540, %rd4539, %rd4534;
	add.s64 	%rd4541, %rd4540, %rd4529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2746,%dummy}, %rd4530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2747}, %rd4530;
	}
	shf.r.wrap.b32 	%r2748, %r2747, %r2746, 14;
	shf.r.wrap.b32 	%r2749, %r2746, %r2747, 14;
	mov.b64 	%rd4542, {%r2749, %r2748};
	shf.r.wrap.b32 	%r2750, %r2747, %r2746, 18;
	shf.r.wrap.b32 	%r2751, %r2746, %r2747, 18;
	mov.b64 	%rd4543, {%r2751, %r2750};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	shf.l.wrap.b32 	%r2752, %r2746, %r2747, 23;
	shf.l.wrap.b32 	%r2753, %r2747, %r2746, 23;
	mov.b64 	%rd4545, {%r2753, %r2752};
	xor.b64  	%rd4546, %rd4544, %rd4545;
	xor.b64  	%rd4547, %rd4506, %rd4482;
	and.b64  	%rd4548, %rd4530, %rd4547;
	xor.b64  	%rd4549, %rd4548, %rd4482;
	add.s64 	%rd4550, %rd4549, %rd4458;
	add.s64 	%rd4551, %rd4550, %rd4546;
	add.s64 	%rd4552, %rd4551, %rd13647;
	add.s64 	%rd4553, %rd4552, 6480981068601479193;
	add.s64 	%rd4554, %rd4553, %rd4469;
	and.b64  	%rd4555, %rd4541, %rd4517;
	or.b64  	%rd4556, %rd4541, %rd4517;
	and.b64  	%rd4557, %rd4556, %rd4493;
	or.b64  	%rd4558, %rd4557, %rd4555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2754,%dummy}, %rd4541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2755}, %rd4541;
	}
	shf.r.wrap.b32 	%r2756, %r2755, %r2754, 28;
	shf.r.wrap.b32 	%r2757, %r2754, %r2755, 28;
	mov.b64 	%rd4559, {%r2757, %r2756};
	shf.l.wrap.b32 	%r2758, %r2754, %r2755, 30;
	shf.l.wrap.b32 	%r2759, %r2755, %r2754, 30;
	mov.b64 	%rd4560, {%r2759, %r2758};
	xor.b64  	%rd4561, %rd4559, %rd4560;
	shf.l.wrap.b32 	%r2760, %r2754, %r2755, 25;
	shf.l.wrap.b32 	%r2761, %r2755, %r2754, 25;
	mov.b64 	%rd4562, {%r2761, %r2760};
	xor.b64  	%rd4563, %rd4561, %rd4562;
	add.s64 	%rd4564, %rd4563, %rd4558;
	add.s64 	%rd4565, %rd4564, %rd4553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd4554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd4554;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 14;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 14;
	mov.b64 	%rd4566, {%r2765, %r2764};
	shf.r.wrap.b32 	%r2766, %r2763, %r2762, 18;
	shf.r.wrap.b32 	%r2767, %r2762, %r2763, 18;
	mov.b64 	%rd4567, {%r2767, %r2766};
	xor.b64  	%rd4568, %rd4566, %rd4567;
	shf.l.wrap.b32 	%r2768, %r2762, %r2763, 23;
	shf.l.wrap.b32 	%r2769, %r2763, %r2762, 23;
	mov.b64 	%rd4569, {%r2769, %r2768};
	xor.b64  	%rd4570, %rd4568, %rd4569;
	xor.b64  	%rd4571, %rd4530, %rd4506;
	and.b64  	%rd4572, %rd4554, %rd4571;
	xor.b64  	%rd4573, %rd4572, %rd4506;
	add.s64 	%rd4574, %rd4573, %rd4482;
	add.s64 	%rd4575, %rd4574, %rd4570;
	add.s64 	%rd4576, %rd4575, %rd13646;
	add.s64 	%rd4577, %rd4576, -7908458776815382629;
	add.s64 	%rd4578, %rd4577, %rd4493;
	and.b64  	%rd4579, %rd4565, %rd4541;
	or.b64  	%rd4580, %rd4565, %rd4541;
	and.b64  	%rd4581, %rd4580, %rd4517;
	or.b64  	%rd4582, %rd4581, %rd4579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2770,%dummy}, %rd4565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2771}, %rd4565;
	}
	shf.r.wrap.b32 	%r2772, %r2771, %r2770, 28;
	shf.r.wrap.b32 	%r2773, %r2770, %r2771, 28;
	mov.b64 	%rd4583, {%r2773, %r2772};
	shf.l.wrap.b32 	%r2774, %r2770, %r2771, 30;
	shf.l.wrap.b32 	%r2775, %r2771, %r2770, 30;
	mov.b64 	%rd4584, {%r2775, %r2774};
	xor.b64  	%rd4585, %rd4583, %rd4584;
	shf.l.wrap.b32 	%r2776, %r2770, %r2771, 25;
	shf.l.wrap.b32 	%r2777, %r2771, %r2770, 25;
	mov.b64 	%rd4586, {%r2777, %r2776};
	xor.b64  	%rd4587, %rd4585, %rd4586;
	add.s64 	%rd4588, %rd4587, %rd4582;
	add.s64 	%rd4589, %rd4588, %rd4577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2778,%dummy}, %rd4578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2779}, %rd4578;
	}
	shf.r.wrap.b32 	%r2780, %r2779, %r2778, 14;
	shf.r.wrap.b32 	%r2781, %r2778, %r2779, 14;
	mov.b64 	%rd4590, {%r2781, %r2780};
	shf.r.wrap.b32 	%r2782, %r2779, %r2778, 18;
	shf.r.wrap.b32 	%r2783, %r2778, %r2779, 18;
	mov.b64 	%rd4591, {%r2783, %r2782};
	xor.b64  	%rd4592, %rd4590, %rd4591;
	shf.l.wrap.b32 	%r2784, %r2778, %r2779, 23;
	shf.l.wrap.b32 	%r2785, %r2779, %r2778, 23;
	mov.b64 	%rd4593, {%r2785, %r2784};
	xor.b64  	%rd4594, %rd4592, %rd4593;
	xor.b64  	%rd4595, %rd4554, %rd4530;
	and.b64  	%rd4596, %rd4578, %rd4595;
	xor.b64  	%rd4597, %rd4596, %rd4530;
	add.s64 	%rd4598, %rd4597, %rd4506;
	add.s64 	%rd4599, %rd4598, %rd4594;
	add.s64 	%rd4600, %rd4599, %rd13645;
	add.s64 	%rd4601, %rd4600, -6116909921290321640;
	add.s64 	%rd4602, %rd4601, %rd4517;
	and.b64  	%rd4603, %rd4589, %rd4565;
	or.b64  	%rd4604, %rd4589, %rd4565;
	and.b64  	%rd4605, %rd4604, %rd4541;
	or.b64  	%rd4606, %rd4605, %rd4603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2786,%dummy}, %rd4589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2787}, %rd4589;
	}
	shf.r.wrap.b32 	%r2788, %r2787, %r2786, 28;
	shf.r.wrap.b32 	%r2789, %r2786, %r2787, 28;
	mov.b64 	%rd4607, {%r2789, %r2788};
	shf.l.wrap.b32 	%r2790, %r2786, %r2787, 30;
	shf.l.wrap.b32 	%r2791, %r2787, %r2786, 30;
	mov.b64 	%rd4608, {%r2791, %r2790};
	xor.b64  	%rd4609, %rd4607, %rd4608;
	shf.l.wrap.b32 	%r2792, %r2786, %r2787, 25;
	shf.l.wrap.b32 	%r2793, %r2787, %r2786, 25;
	mov.b64 	%rd4610, {%r2793, %r2792};
	xor.b64  	%rd4611, %rd4609, %rd4610;
	add.s64 	%rd4612, %rd4611, %rd4606;
	add.s64 	%rd4613, %rd4612, %rd4601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2794,%dummy}, %rd4602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2795}, %rd4602;
	}
	shf.r.wrap.b32 	%r2796, %r2795, %r2794, 14;
	shf.r.wrap.b32 	%r2797, %r2794, %r2795, 14;
	mov.b64 	%rd4614, {%r2797, %r2796};
	shf.r.wrap.b32 	%r2798, %r2795, %r2794, 18;
	shf.r.wrap.b32 	%r2799, %r2794, %r2795, 18;
	mov.b64 	%rd4615, {%r2799, %r2798};
	xor.b64  	%rd4616, %rd4614, %rd4615;
	shf.l.wrap.b32 	%r2800, %r2794, %r2795, 23;
	shf.l.wrap.b32 	%r2801, %r2795, %r2794, 23;
	mov.b64 	%rd4617, {%r2801, %r2800};
	xor.b64  	%rd4618, %rd4616, %rd4617;
	xor.b64  	%rd4619, %rd4578, %rd4554;
	and.b64  	%rd4620, %rd4602, %rd4619;
	xor.b64  	%rd4621, %rd4620, %rd4554;
	add.s64 	%rd4622, %rd4621, %rd4530;
	add.s64 	%rd4623, %rd4622, %rd4618;
	add.s64 	%rd4624, %rd4623, %rd13644;
	add.s64 	%rd4625, %rd4624, -2880145864133508542;
	add.s64 	%rd4626, %rd4625, %rd4541;
	and.b64  	%rd4627, %rd4613, %rd4589;
	or.b64  	%rd4628, %rd4613, %rd4589;
	and.b64  	%rd4629, %rd4628, %rd4565;
	or.b64  	%rd4630, %rd4629, %rd4627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2802,%dummy}, %rd4613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2803}, %rd4613;
	}
	shf.r.wrap.b32 	%r2804, %r2803, %r2802, 28;
	shf.r.wrap.b32 	%r2805, %r2802, %r2803, 28;
	mov.b64 	%rd4631, {%r2805, %r2804};
	shf.l.wrap.b32 	%r2806, %r2802, %r2803, 30;
	shf.l.wrap.b32 	%r2807, %r2803, %r2802, 30;
	mov.b64 	%rd4632, {%r2807, %r2806};
	xor.b64  	%rd4633, %rd4631, %rd4632;
	shf.l.wrap.b32 	%r2808, %r2802, %r2803, 25;
	shf.l.wrap.b32 	%r2809, %r2803, %r2802, 25;
	mov.b64 	%rd4634, {%r2809, %r2808};
	xor.b64  	%rd4635, %rd4633, %rd4634;
	add.s64 	%rd4636, %rd4635, %rd4630;
	add.s64 	%rd4637, %rd4636, %rd4625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2810,%dummy}, %rd4626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2811}, %rd4626;
	}
	shf.r.wrap.b32 	%r2812, %r2811, %r2810, 14;
	shf.r.wrap.b32 	%r2813, %r2810, %r2811, 14;
	mov.b64 	%rd4638, {%r2813, %r2812};
	shf.r.wrap.b32 	%r2814, %r2811, %r2810, 18;
	shf.r.wrap.b32 	%r2815, %r2810, %r2811, 18;
	mov.b64 	%rd4639, {%r2815, %r2814};
	xor.b64  	%rd4640, %rd4638, %rd4639;
	shf.l.wrap.b32 	%r2816, %r2810, %r2811, 23;
	shf.l.wrap.b32 	%r2817, %r2811, %r2810, 23;
	mov.b64 	%rd4641, {%r2817, %r2816};
	xor.b64  	%rd4642, %rd4640, %rd4641;
	xor.b64  	%rd4643, %rd4602, %rd4578;
	and.b64  	%rd4644, %rd4626, %rd4643;
	xor.b64  	%rd4645, %rd4644, %rd4578;
	add.s64 	%rd4646, %rd4645, %rd4554;
	add.s64 	%rd4647, %rd4646, %rd4642;
	add.s64 	%rd4648, %rd4647, %rd13643;
	add.s64 	%rd4649, %rd4648, 1334009975649890238;
	add.s64 	%rd4650, %rd4649, %rd4565;
	and.b64  	%rd4651, %rd4637, %rd4613;
	or.b64  	%rd4652, %rd4637, %rd4613;
	and.b64  	%rd4653, %rd4652, %rd4589;
	or.b64  	%rd4654, %rd4653, %rd4651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd4637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd4637;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 28;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 28;
	mov.b64 	%rd4655, {%r2821, %r2820};
	shf.l.wrap.b32 	%r2822, %r2818, %r2819, 30;
	shf.l.wrap.b32 	%r2823, %r2819, %r2818, 30;
	mov.b64 	%rd4656, {%r2823, %r2822};
	xor.b64  	%rd4657, %rd4655, %rd4656;
	shf.l.wrap.b32 	%r2824, %r2818, %r2819, 25;
	shf.l.wrap.b32 	%r2825, %r2819, %r2818, 25;
	mov.b64 	%rd4658, {%r2825, %r2824};
	xor.b64  	%rd4659, %rd4657, %rd4658;
	add.s64 	%rd4660, %rd4659, %rd4654;
	add.s64 	%rd4661, %rd4660, %rd4649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2826,%dummy}, %rd4650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2827}, %rd4650;
	}
	shf.r.wrap.b32 	%r2828, %r2827, %r2826, 14;
	shf.r.wrap.b32 	%r2829, %r2826, %r2827, 14;
	mov.b64 	%rd4662, {%r2829, %r2828};
	shf.r.wrap.b32 	%r2830, %r2827, %r2826, 18;
	shf.r.wrap.b32 	%r2831, %r2826, %r2827, 18;
	mov.b64 	%rd4663, {%r2831, %r2830};
	xor.b64  	%rd4664, %rd4662, %rd4663;
	shf.l.wrap.b32 	%r2832, %r2826, %r2827, 23;
	shf.l.wrap.b32 	%r2833, %r2827, %r2826, 23;
	mov.b64 	%rd4665, {%r2833, %r2832};
	xor.b64  	%rd4666, %rd4664, %rd4665;
	xor.b64  	%rd4667, %rd4626, %rd4602;
	and.b64  	%rd4668, %rd4650, %rd4667;
	xor.b64  	%rd4669, %rd4668, %rd4602;
	add.s64 	%rd4670, %rd4669, %rd4578;
	add.s64 	%rd4671, %rd4670, %rd4666;
	add.s64 	%rd4672, %rd4671, %rd13642;
	add.s64 	%rd4673, %rd4672, 2608012711638119052;
	add.s64 	%rd4674, %rd4673, %rd4589;
	and.b64  	%rd4675, %rd4661, %rd4637;
	or.b64  	%rd4676, %rd4661, %rd4637;
	and.b64  	%rd4677, %rd4676, %rd4613;
	or.b64  	%rd4678, %rd4677, %rd4675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2834,%dummy}, %rd4661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2835}, %rd4661;
	}
	shf.r.wrap.b32 	%r2836, %r2835, %r2834, 28;
	shf.r.wrap.b32 	%r2837, %r2834, %r2835, 28;
	mov.b64 	%rd4679, {%r2837, %r2836};
	shf.l.wrap.b32 	%r2838, %r2834, %r2835, 30;
	shf.l.wrap.b32 	%r2839, %r2835, %r2834, 30;
	mov.b64 	%rd4680, {%r2839, %r2838};
	xor.b64  	%rd4681, %rd4679, %rd4680;
	shf.l.wrap.b32 	%r2840, %r2834, %r2835, 25;
	shf.l.wrap.b32 	%r2841, %r2835, %r2834, 25;
	mov.b64 	%rd4682, {%r2841, %r2840};
	xor.b64  	%rd4683, %rd4681, %rd4682;
	add.s64 	%rd4684, %rd4683, %rd4678;
	add.s64 	%rd4685, %rd4684, %rd4673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2842,%dummy}, %rd4674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2843}, %rd4674;
	}
	shf.r.wrap.b32 	%r2844, %r2843, %r2842, 14;
	shf.r.wrap.b32 	%r2845, %r2842, %r2843, 14;
	mov.b64 	%rd4686, {%r2845, %r2844};
	shf.r.wrap.b32 	%r2846, %r2843, %r2842, 18;
	shf.r.wrap.b32 	%r2847, %r2842, %r2843, 18;
	mov.b64 	%rd4687, {%r2847, %r2846};
	xor.b64  	%rd4688, %rd4686, %rd4687;
	shf.l.wrap.b32 	%r2848, %r2842, %r2843, 23;
	shf.l.wrap.b32 	%r2849, %r2843, %r2842, 23;
	mov.b64 	%rd4689, {%r2849, %r2848};
	xor.b64  	%rd4690, %rd4688, %rd4689;
	xor.b64  	%rd4691, %rd4650, %rd4626;
	and.b64  	%rd4692, %rd4674, %rd4691;
	xor.b64  	%rd4693, %rd4692, %rd4626;
	add.s64 	%rd4694, %rd4693, %rd4602;
	add.s64 	%rd4695, %rd4694, %rd4690;
	add.s64 	%rd4696, %rd4695, %rd13641;
	add.s64 	%rd4697, %rd4696, 6128411473006802146;
	add.s64 	%rd4698, %rd4697, %rd4613;
	and.b64  	%rd4699, %rd4685, %rd4661;
	or.b64  	%rd4700, %rd4685, %rd4661;
	and.b64  	%rd4701, %rd4700, %rd4637;
	or.b64  	%rd4702, %rd4701, %rd4699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2850,%dummy}, %rd4685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd4685;
	}
	shf.r.wrap.b32 	%r2852, %r2851, %r2850, 28;
	shf.r.wrap.b32 	%r2853, %r2850, %r2851, 28;
	mov.b64 	%rd4703, {%r2853, %r2852};
	shf.l.wrap.b32 	%r2854, %r2850, %r2851, 30;
	shf.l.wrap.b32 	%r2855, %r2851, %r2850, 30;
	mov.b64 	%rd4704, {%r2855, %r2854};
	xor.b64  	%rd4705, %rd4703, %rd4704;
	shf.l.wrap.b32 	%r2856, %r2850, %r2851, 25;
	shf.l.wrap.b32 	%r2857, %r2851, %r2850, 25;
	mov.b64 	%rd4706, {%r2857, %r2856};
	xor.b64  	%rd4707, %rd4705, %rd4706;
	add.s64 	%rd4708, %rd4707, %rd4702;
	add.s64 	%rd4709, %rd4708, %rd4697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd4698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd4698;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 14;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 14;
	mov.b64 	%rd4710, {%r2861, %r2860};
	shf.r.wrap.b32 	%r2862, %r2859, %r2858, 18;
	shf.r.wrap.b32 	%r2863, %r2858, %r2859, 18;
	mov.b64 	%rd4711, {%r2863, %r2862};
	xor.b64  	%rd4712, %rd4710, %rd4711;
	shf.l.wrap.b32 	%r2864, %r2858, %r2859, 23;
	shf.l.wrap.b32 	%r2865, %r2859, %r2858, 23;
	mov.b64 	%rd4713, {%r2865, %r2864};
	xor.b64  	%rd4714, %rd4712, %rd4713;
	xor.b64  	%rd4715, %rd4674, %rd4650;
	and.b64  	%rd4716, %rd4698, %rd4715;
	xor.b64  	%rd4717, %rd4716, %rd4650;
	add.s64 	%rd4718, %rd4717, %rd4626;
	add.s64 	%rd4719, %rd4718, %rd4714;
	add.s64 	%rd4720, %rd4719, %rd13640;
	add.s64 	%rd4721, %rd4720, 8268148722764581231;
	add.s64 	%rd13660, %rd4721, %rd4637;
	and.b64  	%rd4722, %rd4709, %rd4685;
	or.b64  	%rd4723, %rd4709, %rd4685;
	and.b64  	%rd4724, %rd4723, %rd4661;
	or.b64  	%rd4725, %rd4724, %rd4722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd4709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd4709;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 28;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 28;
	mov.b64 	%rd4726, {%r2869, %r2868};
	shf.l.wrap.b32 	%r2870, %r2866, %r2867, 30;
	shf.l.wrap.b32 	%r2871, %r2867, %r2866, 30;
	mov.b64 	%rd4727, {%r2871, %r2870};
	xor.b64  	%rd4728, %rd4726, %rd4727;
	shf.l.wrap.b32 	%r2872, %r2866, %r2867, 25;
	shf.l.wrap.b32 	%r2873, %r2867, %r2866, 25;
	mov.b64 	%rd4729, {%r2873, %r2872};
	xor.b64  	%rd4730, %rd4728, %rd4729;
	add.s64 	%rd4731, %rd4730, %rd4725;
	add.s64 	%rd13656, %rd4731, %rd4721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd13660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd13660;
	}
	shf.r.wrap.b32 	%r2876, %r2875, %r2874, 14;
	shf.r.wrap.b32 	%r2877, %r2874, %r2875, 14;
	mov.b64 	%rd4732, {%r2877, %r2876};
	shf.r.wrap.b32 	%r2878, %r2875, %r2874, 18;
	shf.r.wrap.b32 	%r2879, %r2874, %r2875, 18;
	mov.b64 	%rd4733, {%r2879, %r2878};
	xor.b64  	%rd4734, %rd4732, %rd4733;
	shf.l.wrap.b32 	%r2880, %r2874, %r2875, 23;
	shf.l.wrap.b32 	%r2881, %r2875, %r2874, 23;
	mov.b64 	%rd4735, {%r2881, %r2880};
	xor.b64  	%rd4736, %rd4734, %rd4735;
	xor.b64  	%rd4737, %rd4698, %rd4674;
	and.b64  	%rd4738, %rd13660, %rd4737;
	xor.b64  	%rd4739, %rd4738, %rd4674;
	add.s64 	%rd4740, %rd4739, %rd4650;
	add.s64 	%rd4741, %rd4740, %rd4736;
	add.s64 	%rd4742, %rd4741, %rd13639;
	add.s64 	%rd4743, %rd4742, -9160688886553864527;
	add.s64 	%rd13659, %rd4743, %rd4661;
	and.b64  	%rd4744, %rd13656, %rd4709;
	or.b64  	%rd4745, %rd13656, %rd4709;
	and.b64  	%rd4746, %rd4745, %rd4685;
	or.b64  	%rd4747, %rd4746, %rd4744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2882,%dummy}, %rd13656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2883}, %rd13656;
	}
	shf.r.wrap.b32 	%r2884, %r2883, %r2882, 28;
	shf.r.wrap.b32 	%r2885, %r2882, %r2883, 28;
	mov.b64 	%rd4748, {%r2885, %r2884};
	shf.l.wrap.b32 	%r2886, %r2882, %r2883, 30;
	shf.l.wrap.b32 	%r2887, %r2883, %r2882, 30;
	mov.b64 	%rd4749, {%r2887, %r2886};
	xor.b64  	%rd4750, %rd4748, %rd4749;
	shf.l.wrap.b32 	%r2888, %r2882, %r2883, 25;
	shf.l.wrap.b32 	%r2889, %r2883, %r2882, 25;
	mov.b64 	%rd4751, {%r2889, %r2888};
	xor.b64  	%rd4752, %rd4750, %rd4751;
	add.s64 	%rd4753, %rd4752, %rd4747;
	add.s64 	%rd13655, %rd4753, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd13659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2891}, %rd13659;
	}
	shf.r.wrap.b32 	%r2892, %r2891, %r2890, 14;
	shf.r.wrap.b32 	%r2893, %r2890, %r2891, 14;
	mov.b64 	%rd4754, {%r2893, %r2892};
	shf.r.wrap.b32 	%r2894, %r2891, %r2890, 18;
	shf.r.wrap.b32 	%r2895, %r2890, %r2891, 18;
	mov.b64 	%rd4755, {%r2895, %r2894};
	xor.b64  	%rd4756, %rd4754, %rd4755;
	shf.l.wrap.b32 	%r2896, %r2890, %r2891, 23;
	shf.l.wrap.b32 	%r2897, %r2891, %r2890, 23;
	mov.b64 	%rd4757, {%r2897, %r2896};
	xor.b64  	%rd4758, %rd4756, %rd4757;
	xor.b64  	%rd4759, %rd13660, %rd4698;
	and.b64  	%rd4760, %rd13659, %rd4759;
	xor.b64  	%rd4761, %rd4760, %rd4698;
	add.s64 	%rd4762, %rd4761, %rd4674;
	add.s64 	%rd4763, %rd4762, %rd4758;
	add.s64 	%rd4764, %rd4763, %rd13638;
	add.s64 	%rd4765, %rd4764, -7215885187991268811;
	add.s64 	%rd13658, %rd4765, %rd4685;
	and.b64  	%rd4766, %rd13655, %rd13656;
	or.b64  	%rd4767, %rd13655, %rd13656;
	and.b64  	%rd4768, %rd4767, %rd4709;
	or.b64  	%rd4769, %rd4768, %rd4766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd13655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd13655;
	}
	shf.r.wrap.b32 	%r2900, %r2899, %r2898, 28;
	shf.r.wrap.b32 	%r2901, %r2898, %r2899, 28;
	mov.b64 	%rd4770, {%r2901, %r2900};
	shf.l.wrap.b32 	%r2902, %r2898, %r2899, 30;
	shf.l.wrap.b32 	%r2903, %r2899, %r2898, 30;
	mov.b64 	%rd4771, {%r2903, %r2902};
	xor.b64  	%rd4772, %rd4770, %rd4771;
	shf.l.wrap.b32 	%r2904, %r2898, %r2899, 25;
	shf.l.wrap.b32 	%r2905, %r2899, %r2898, 25;
	mov.b64 	%rd4773, {%r2905, %r2904};
	xor.b64  	%rd4774, %rd4772, %rd4773;
	add.s64 	%rd4775, %rd4774, %rd4769;
	add.s64 	%rd13654, %rd4775, %rd4765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd13658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2907}, %rd13658;
	}
	shf.r.wrap.b32 	%r2908, %r2907, %r2906, 14;
	shf.r.wrap.b32 	%r2909, %r2906, %r2907, 14;
	mov.b64 	%rd4776, {%r2909, %r2908};
	shf.r.wrap.b32 	%r2910, %r2907, %r2906, 18;
	shf.r.wrap.b32 	%r2911, %r2906, %r2907, 18;
	mov.b64 	%rd4777, {%r2911, %r2910};
	xor.b64  	%rd4778, %rd4776, %rd4777;
	shf.l.wrap.b32 	%r2912, %r2906, %r2907, 23;
	shf.l.wrap.b32 	%r2913, %r2907, %r2906, 23;
	mov.b64 	%rd4779, {%r2913, %r2912};
	xor.b64  	%rd4780, %rd4778, %rd4779;
	xor.b64  	%rd4781, %rd13659, %rd13660;
	and.b64  	%rd4782, %rd13658, %rd4781;
	xor.b64  	%rd4783, %rd4782, %rd13660;
	add.s64 	%rd4784, %rd4783, %rd4698;
	add.s64 	%rd4785, %rd4784, %rd4780;
	add.s64 	%rd4786, %rd4785, %rd13637;
	add.s64 	%rd4787, %rd4786, -4495734319001033068;
	add.s64 	%rd13657, %rd4787, %rd4709;
	and.b64  	%rd4788, %rd13654, %rd13655;
	or.b64  	%rd4789, %rd13654, %rd13655;
	and.b64  	%rd4790, %rd4789, %rd13656;
	or.b64  	%rd4791, %rd4790, %rd4788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2914,%dummy}, %rd13654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2915}, %rd13654;
	}
	shf.r.wrap.b32 	%r2916, %r2915, %r2914, 28;
	shf.r.wrap.b32 	%r2917, %r2914, %r2915, 28;
	mov.b64 	%rd4792, {%r2917, %r2916};
	shf.l.wrap.b32 	%r2918, %r2914, %r2915, 30;
	shf.l.wrap.b32 	%r2919, %r2915, %r2914, 30;
	mov.b64 	%rd4793, {%r2919, %r2918};
	xor.b64  	%rd4794, %rd4792, %rd4793;
	shf.l.wrap.b32 	%r2920, %r2914, %r2915, 25;
	shf.l.wrap.b32 	%r2921, %r2915, %r2914, 25;
	mov.b64 	%rd4795, {%r2921, %r2920};
	xor.b64  	%rd4796, %rd4794, %rd4795;
	add.s64 	%rd4797, %rd4796, %rd4791;
	add.s64 	%rd13653, %rd4797, %rd4787;
	mov.u32 	%r9727, 16;

$L__BB0_84:
	.pragma "nounroll";
	mov.u64 	%rd13515, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2922}, %rd13638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2923,%dummy}, %rd13638;
	}
	shf.l.wrap.b32 	%r2924, %r2923, %r2922, 3;
	shf.l.wrap.b32 	%r2925, %r2922, %r2923, 3;
	mov.b64 	%rd4798, {%r2925, %r2924};
	shf.r.wrap.b32 	%r2926, %r2922, %r2923, 19;
	shf.r.wrap.b32 	%r2927, %r2923, %r2922, 19;
	mov.b64 	%rd4799, {%r2927, %r2926};
	xor.b64  	%rd4800, %rd4799, %rd4798;
	shr.u64 	%rd4801, %rd13638, 6;
	xor.b64  	%rd4802, %rd4800, %rd4801;
	add.s64 	%rd4803, %rd13643, %rd13652;
	add.s64 	%rd4804, %rd4803, %rd4802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd13651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd13651;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 8;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 8;
	mov.b64 	%rd4805, {%r2931, %r2930};
	shf.r.wrap.b32 	%r2932, %r2929, %r2928, 1;
	shf.r.wrap.b32 	%r2933, %r2928, %r2929, 1;
	mov.b64 	%rd4806, {%r2933, %r2932};
	xor.b64  	%rd4807, %rd4806, %rd4805;
	shr.u64 	%rd4808, %rd13651, 7;
	xor.b64  	%rd4809, %rd4807, %rd4808;
	add.s64 	%rd13652, %rd4804, %rd4809;
	mul.wide.u32 	%rd4810, %r9727, 8;
	add.s64 	%rd4812, %rd13515, %rd4810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2934,%dummy}, %rd13657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2935}, %rd13657;
	}
	shf.r.wrap.b32 	%r2936, %r2935, %r2934, 18;
	shf.r.wrap.b32 	%r2937, %r2934, %r2935, 18;
	mov.b64 	%rd4813, {%r2937, %r2936};
	shf.r.wrap.b32 	%r2938, %r2935, %r2934, 14;
	shf.r.wrap.b32 	%r2939, %r2934, %r2935, 14;
	mov.b64 	%rd4814, {%r2939, %r2938};
	xor.b64  	%rd4815, %rd4814, %rd4813;
	shf.l.wrap.b32 	%r2940, %r2934, %r2935, 23;
	shf.l.wrap.b32 	%r2941, %r2935, %r2934, 23;
	mov.b64 	%rd4816, {%r2941, %r2940};
	xor.b64  	%rd4817, %rd4815, %rd4816;
	xor.b64  	%rd4818, %rd13658, %rd13659;
	and.b64  	%rd4819, %rd13657, %rd4818;
	xor.b64  	%rd4820, %rd4819, %rd13659;
	add.s64 	%rd4821, %rd4820, %rd13660;
	add.s64 	%rd4822, %rd4821, %rd4817;
	ld.const.u64 	%rd4823, [%rd4812];
	add.s64 	%rd4824, %rd4822, %rd4823;
	add.s64 	%rd4825, %rd4824, %rd13652;
	add.s64 	%rd4826, %rd4825, %rd13656;
	or.b64  	%rd4827, %rd13653, %rd13654;
	and.b64  	%rd4828, %rd4827, %rd13655;
	and.b64  	%rd4829, %rd13653, %rd13654;
	or.b64  	%rd4830, %rd4828, %rd4829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2942}, %rd13653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2943,%dummy}, %rd13653;
	}
	shf.l.wrap.b32 	%r2944, %r2943, %r2942, 30;
	shf.l.wrap.b32 	%r2945, %r2942, %r2943, 30;
	mov.b64 	%rd4831, {%r2945, %r2944};
	shf.r.wrap.b32 	%r2946, %r2942, %r2943, 28;
	shf.r.wrap.b32 	%r2947, %r2943, %r2942, 28;
	mov.b64 	%rd4832, {%r2947, %r2946};
	xor.b64  	%rd4833, %rd4832, %rd4831;
	shf.l.wrap.b32 	%r2948, %r2943, %r2942, 25;
	shf.l.wrap.b32 	%r2949, %r2942, %r2943, 25;
	mov.b64 	%rd4834, {%r2949, %r2948};
	xor.b64  	%rd4835, %rd4833, %rd4834;
	add.s64 	%rd4836, %rd4835, %rd4830;
	add.s64 	%rd4837, %rd4836, %rd4825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2950}, %rd13637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2951,%dummy}, %rd13637;
	}
	shf.l.wrap.b32 	%r2952, %r2951, %r2950, 3;
	shf.l.wrap.b32 	%r2953, %r2950, %r2951, 3;
	mov.b64 	%rd4838, {%r2953, %r2952};
	shf.r.wrap.b32 	%r2954, %r2950, %r2951, 19;
	shf.r.wrap.b32 	%r2955, %r2951, %r2950, 19;
	mov.b64 	%rd4839, {%r2955, %r2954};
	xor.b64  	%rd4840, %rd4839, %rd4838;
	shr.u64 	%rd4841, %rd13637, 6;
	xor.b64  	%rd4842, %rd4840, %rd4841;
	add.s64 	%rd4843, %rd13642, %rd13651;
	add.s64 	%rd4844, %rd4843, %rd4842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2956,%dummy}, %rd13650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2957}, %rd13650;
	}
	shf.r.wrap.b32 	%r2958, %r2957, %r2956, 8;
	shf.r.wrap.b32 	%r2959, %r2956, %r2957, 8;
	mov.b64 	%rd4845, {%r2959, %r2958};
	shf.r.wrap.b32 	%r2960, %r2957, %r2956, 1;
	shf.r.wrap.b32 	%r2961, %r2956, %r2957, 1;
	mov.b64 	%rd4846, {%r2961, %r2960};
	xor.b64  	%rd4847, %rd4846, %rd4845;
	shr.u64 	%rd4848, %rd13650, 7;
	xor.b64  	%rd4849, %rd4847, %rd4848;
	add.s64 	%rd13651, %rd4844, %rd4849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd4826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd4826;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 14;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 14;
	mov.b64 	%rd4850, {%r2965, %r2964};
	shf.r.wrap.b32 	%r2966, %r2963, %r2962, 18;
	shf.r.wrap.b32 	%r2967, %r2962, %r2963, 18;
	mov.b64 	%rd4851, {%r2967, %r2966};
	xor.b64  	%rd4852, %rd4850, %rd4851;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 23;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 23;
	mov.b64 	%rd4853, {%r2969, %r2968};
	xor.b64  	%rd4854, %rd4852, %rd4853;
	xor.b64  	%rd4855, %rd13657, %rd13658;
	and.b64  	%rd4856, %rd4826, %rd4855;
	xor.b64  	%rd4857, %rd4856, %rd13658;
	add.s64 	%rd4858, %rd4857, %rd13659;
	add.s64 	%rd4859, %rd4858, %rd4854;
	ld.const.u64 	%rd4860, [%rd4812+8];
	add.s64 	%rd4861, %rd4859, %rd4860;
	add.s64 	%rd4862, %rd4861, %rd13651;
	add.s64 	%rd4863, %rd4862, %rd13655;
	and.b64  	%rd4864, %rd4837, %rd13653;
	or.b64  	%rd4865, %rd4837, %rd13653;
	and.b64  	%rd4866, %rd4865, %rd13654;
	or.b64  	%rd4867, %rd4866, %rd4864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd4837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd4837;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 28;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 28;
	mov.b64 	%rd4868, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 30;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 30;
	mov.b64 	%rd4869, {%r2975, %r2974};
	xor.b64  	%rd4870, %rd4868, %rd4869;
	shf.l.wrap.b32 	%r2976, %r2970, %r2971, 25;
	shf.l.wrap.b32 	%r2977, %r2971, %r2970, 25;
	mov.b64 	%rd4871, {%r2977, %r2976};
	xor.b64  	%rd4872, %rd4870, %rd4871;
	add.s64 	%rd4873, %rd4872, %rd4867;
	add.s64 	%rd4874, %rd4873, %rd4862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd13652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd13652;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 19;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 19;
	mov.b64 	%rd4875, {%r2981, %r2980};
	shf.l.wrap.b32 	%r2982, %r2978, %r2979, 3;
	shf.l.wrap.b32 	%r2983, %r2979, %r2978, 3;
	mov.b64 	%rd4876, {%r2983, %r2982};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	shr.u64 	%rd4878, %rd13652, 6;
	xor.b64  	%rd4879, %rd4877, %rd4878;
	add.s64 	%rd4880, %rd13641, %rd13650;
	add.s64 	%rd4881, %rd4880, %rd4879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2984,%dummy}, %rd13649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2985}, %rd13649;
	}
	shf.r.wrap.b32 	%r2986, %r2985, %r2984, 8;
	shf.r.wrap.b32 	%r2987, %r2984, %r2985, 8;
	mov.b64 	%rd4882, {%r2987, %r2986};
	shf.r.wrap.b32 	%r2988, %r2985, %r2984, 1;
	shf.r.wrap.b32 	%r2989, %r2984, %r2985, 1;
	mov.b64 	%rd4883, {%r2989, %r2988};
	xor.b64  	%rd4884, %rd4883, %rd4882;
	shr.u64 	%rd4885, %rd13649, 7;
	xor.b64  	%rd4886, %rd4884, %rd4885;
	add.s64 	%rd13650, %rd4881, %rd4886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd4863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2991}, %rd4863;
	}
	shf.r.wrap.b32 	%r2992, %r2991, %r2990, 14;
	shf.r.wrap.b32 	%r2993, %r2990, %r2991, 14;
	mov.b64 	%rd4887, {%r2993, %r2992};
	shf.r.wrap.b32 	%r2994, %r2991, %r2990, 18;
	shf.r.wrap.b32 	%r2995, %r2990, %r2991, 18;
	mov.b64 	%rd4888, {%r2995, %r2994};
	xor.b64  	%rd4889, %rd4887, %rd4888;
	shf.l.wrap.b32 	%r2996, %r2990, %r2991, 23;
	shf.l.wrap.b32 	%r2997, %r2991, %r2990, 23;
	mov.b64 	%rd4890, {%r2997, %r2996};
	xor.b64  	%rd4891, %rd4889, %rd4890;
	xor.b64  	%rd4892, %rd4826, %rd13657;
	and.b64  	%rd4893, %rd4863, %rd4892;
	xor.b64  	%rd4894, %rd4893, %rd13657;
	add.s64 	%rd4895, %rd4894, %rd13658;
	add.s64 	%rd4896, %rd4895, %rd4891;
	ld.const.u64 	%rd4897, [%rd4812+16];
	add.s64 	%rd4898, %rd4896, %rd4897;
	add.s64 	%rd4899, %rd4898, %rd13650;
	add.s64 	%rd4900, %rd4899, %rd13654;
	and.b64  	%rd4901, %rd4874, %rd4837;
	or.b64  	%rd4902, %rd4874, %rd4837;
	and.b64  	%rd4903, %rd4902, %rd13653;
	or.b64  	%rd4904, %rd4903, %rd4901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2998,%dummy}, %rd4874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2999}, %rd4874;
	}
	shf.r.wrap.b32 	%r3000, %r2999, %r2998, 28;
	shf.r.wrap.b32 	%r3001, %r2998, %r2999, 28;
	mov.b64 	%rd4905, {%r3001, %r3000};
	shf.l.wrap.b32 	%r3002, %r2998, %r2999, 30;
	shf.l.wrap.b32 	%r3003, %r2999, %r2998, 30;
	mov.b64 	%rd4906, {%r3003, %r3002};
	xor.b64  	%rd4907, %rd4905, %rd4906;
	shf.l.wrap.b32 	%r3004, %r2998, %r2999, 25;
	shf.l.wrap.b32 	%r3005, %r2999, %r2998, 25;
	mov.b64 	%rd4908, {%r3005, %r3004};
	xor.b64  	%rd4909, %rd4907, %rd4908;
	add.s64 	%rd4910, %rd4909, %rd4904;
	add.s64 	%rd4911, %rd4910, %rd4899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd13651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3007}, %rd13651;
	}
	shf.r.wrap.b32 	%r3008, %r3007, %r3006, 19;
	shf.r.wrap.b32 	%r3009, %r3006, %r3007, 19;
	mov.b64 	%rd4912, {%r3009, %r3008};
	shf.l.wrap.b32 	%r3010, %r3006, %r3007, 3;
	shf.l.wrap.b32 	%r3011, %r3007, %r3006, 3;
	mov.b64 	%rd4913, {%r3011, %r3010};
	xor.b64  	%rd4914, %rd4912, %rd4913;
	shr.u64 	%rd4915, %rd13651, 6;
	xor.b64  	%rd4916, %rd4914, %rd4915;
	add.s64 	%rd4917, %rd13640, %rd13649;
	add.s64 	%rd4918, %rd4917, %rd4916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3012,%dummy}, %rd13648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3013}, %rd13648;
	}
	shf.r.wrap.b32 	%r3014, %r3013, %r3012, 8;
	shf.r.wrap.b32 	%r3015, %r3012, %r3013, 8;
	mov.b64 	%rd4919, {%r3015, %r3014};
	shf.r.wrap.b32 	%r3016, %r3013, %r3012, 1;
	shf.r.wrap.b32 	%r3017, %r3012, %r3013, 1;
	mov.b64 	%rd4920, {%r3017, %r3016};
	xor.b64  	%rd4921, %rd4920, %rd4919;
	shr.u64 	%rd4922, %rd13648, 7;
	xor.b64  	%rd4923, %rd4921, %rd4922;
	add.s64 	%rd13649, %rd4918, %rd4923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd4900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd4900;
	}
	shf.r.wrap.b32 	%r3020, %r3019, %r3018, 14;
	shf.r.wrap.b32 	%r3021, %r3018, %r3019, 14;
	mov.b64 	%rd4924, {%r3021, %r3020};
	shf.r.wrap.b32 	%r3022, %r3019, %r3018, 18;
	shf.r.wrap.b32 	%r3023, %r3018, %r3019, 18;
	mov.b64 	%rd4925, {%r3023, %r3022};
	xor.b64  	%rd4926, %rd4924, %rd4925;
	shf.l.wrap.b32 	%r3024, %r3018, %r3019, 23;
	shf.l.wrap.b32 	%r3025, %r3019, %r3018, 23;
	mov.b64 	%rd4927, {%r3025, %r3024};
	xor.b64  	%rd4928, %rd4926, %rd4927;
	xor.b64  	%rd4929, %rd4863, %rd4826;
	and.b64  	%rd4930, %rd4900, %rd4929;
	xor.b64  	%rd4931, %rd4930, %rd4826;
	add.s64 	%rd4932, %rd4931, %rd13657;
	add.s64 	%rd4933, %rd4932, %rd4928;
	ld.const.u64 	%rd4934, [%rd4812+24];
	add.s64 	%rd4935, %rd4933, %rd4934;
	add.s64 	%rd4936, %rd4935, %rd13649;
	add.s64 	%rd4937, %rd4936, %rd13653;
	and.b64  	%rd4938, %rd4911, %rd4874;
	or.b64  	%rd4939, %rd4911, %rd4874;
	and.b64  	%rd4940, %rd4939, %rd4837;
	or.b64  	%rd4941, %rd4940, %rd4938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3026,%dummy}, %rd4911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3027}, %rd4911;
	}
	shf.r.wrap.b32 	%r3028, %r3027, %r3026, 28;
	shf.r.wrap.b32 	%r3029, %r3026, %r3027, 28;
	mov.b64 	%rd4942, {%r3029, %r3028};
	shf.l.wrap.b32 	%r3030, %r3026, %r3027, 30;
	shf.l.wrap.b32 	%r3031, %r3027, %r3026, 30;
	mov.b64 	%rd4943, {%r3031, %r3030};
	xor.b64  	%rd4944, %rd4942, %rd4943;
	shf.l.wrap.b32 	%r3032, %r3026, %r3027, 25;
	shf.l.wrap.b32 	%r3033, %r3027, %r3026, 25;
	mov.b64 	%rd4945, {%r3033, %r3032};
	xor.b64  	%rd4946, %rd4944, %rd4945;
	add.s64 	%rd4947, %rd4946, %rd4941;
	add.s64 	%rd4948, %rd4947, %rd4936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3034,%dummy}, %rd13650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3035}, %rd13650;
	}
	shf.r.wrap.b32 	%r3036, %r3035, %r3034, 19;
	shf.r.wrap.b32 	%r3037, %r3034, %r3035, 19;
	mov.b64 	%rd4949, {%r3037, %r3036};
	shf.l.wrap.b32 	%r3038, %r3034, %r3035, 3;
	shf.l.wrap.b32 	%r3039, %r3035, %r3034, 3;
	mov.b64 	%rd4950, {%r3039, %r3038};
	xor.b64  	%rd4951, %rd4949, %rd4950;
	shr.u64 	%rd4952, %rd13650, 6;
	xor.b64  	%rd4953, %rd4951, %rd4952;
	add.s64 	%rd4954, %rd13639, %rd13648;
	add.s64 	%rd4955, %rd4954, %rd4953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3040,%dummy}, %rd13647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3041}, %rd13647;
	}
	shf.r.wrap.b32 	%r3042, %r3041, %r3040, 8;
	shf.r.wrap.b32 	%r3043, %r3040, %r3041, 8;
	mov.b64 	%rd4956, {%r3043, %r3042};
	shf.r.wrap.b32 	%r3044, %r3041, %r3040, 1;
	shf.r.wrap.b32 	%r3045, %r3040, %r3041, 1;
	mov.b64 	%rd4957, {%r3045, %r3044};
	xor.b64  	%rd4958, %rd4957, %rd4956;
	shr.u64 	%rd4959, %rd13647, 7;
	xor.b64  	%rd4960, %rd4958, %rd4959;
	add.s64 	%rd13648, %rd4955, %rd4960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3046,%dummy}, %rd4937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3047}, %rd4937;
	}
	shf.r.wrap.b32 	%r3048, %r3047, %r3046, 14;
	shf.r.wrap.b32 	%r3049, %r3046, %r3047, 14;
	mov.b64 	%rd4961, {%r3049, %r3048};
	shf.r.wrap.b32 	%r3050, %r3047, %r3046, 18;
	shf.r.wrap.b32 	%r3051, %r3046, %r3047, 18;
	mov.b64 	%rd4962, {%r3051, %r3050};
	xor.b64  	%rd4963, %rd4961, %rd4962;
	shf.l.wrap.b32 	%r3052, %r3046, %r3047, 23;
	shf.l.wrap.b32 	%r3053, %r3047, %r3046, 23;
	mov.b64 	%rd4964, {%r3053, %r3052};
	xor.b64  	%rd4965, %rd4963, %rd4964;
	xor.b64  	%rd4966, %rd4900, %rd4863;
	and.b64  	%rd4967, %rd4937, %rd4966;
	xor.b64  	%rd4968, %rd4967, %rd4863;
	add.s64 	%rd4969, %rd4968, %rd4826;
	add.s64 	%rd4970, %rd4969, %rd4965;
	ld.const.u64 	%rd4971, [%rd4812+32];
	add.s64 	%rd4972, %rd4970, %rd4971;
	add.s64 	%rd4973, %rd4972, %rd13648;
	add.s64 	%rd4974, %rd4973, %rd4837;
	and.b64  	%rd4975, %rd4948, %rd4911;
	or.b64  	%rd4976, %rd4948, %rd4911;
	and.b64  	%rd4977, %rd4976, %rd4874;
	or.b64  	%rd4978, %rd4977, %rd4975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3054,%dummy}, %rd4948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3055}, %rd4948;
	}
	shf.r.wrap.b32 	%r3056, %r3055, %r3054, 28;
	shf.r.wrap.b32 	%r3057, %r3054, %r3055, 28;
	mov.b64 	%rd4979, {%r3057, %r3056};
	shf.l.wrap.b32 	%r3058, %r3054, %r3055, 30;
	shf.l.wrap.b32 	%r3059, %r3055, %r3054, 30;
	mov.b64 	%rd4980, {%r3059, %r3058};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	shf.l.wrap.b32 	%r3060, %r3054, %r3055, 25;
	shf.l.wrap.b32 	%r3061, %r3055, %r3054, 25;
	mov.b64 	%rd4982, {%r3061, %r3060};
	xor.b64  	%rd4983, %rd4981, %rd4982;
	add.s64 	%rd4984, %rd4983, %rd4978;
	add.s64 	%rd4985, %rd4984, %rd4973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3062,%dummy}, %rd13649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3063}, %rd13649;
	}
	shf.r.wrap.b32 	%r3064, %r3063, %r3062, 19;
	shf.r.wrap.b32 	%r3065, %r3062, %r3063, 19;
	mov.b64 	%rd4986, {%r3065, %r3064};
	shf.l.wrap.b32 	%r3066, %r3062, %r3063, 3;
	shf.l.wrap.b32 	%r3067, %r3063, %r3062, 3;
	mov.b64 	%rd4987, {%r3067, %r3066};
	xor.b64  	%rd4988, %rd4986, %rd4987;
	shr.u64 	%rd4989, %rd13649, 6;
	xor.b64  	%rd4990, %rd4988, %rd4989;
	add.s64 	%rd4991, %rd13638, %rd13647;
	add.s64 	%rd4992, %rd4991, %rd4990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3068,%dummy}, %rd13646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3069}, %rd13646;
	}
	shf.r.wrap.b32 	%r3070, %r3069, %r3068, 8;
	shf.r.wrap.b32 	%r3071, %r3068, %r3069, 8;
	mov.b64 	%rd4993, {%r3071, %r3070};
	shf.r.wrap.b32 	%r3072, %r3069, %r3068, 1;
	shf.r.wrap.b32 	%r3073, %r3068, %r3069, 1;
	mov.b64 	%rd4994, {%r3073, %r3072};
	xor.b64  	%rd4995, %rd4994, %rd4993;
	shr.u64 	%rd4996, %rd13646, 7;
	xor.b64  	%rd4997, %rd4995, %rd4996;
	add.s64 	%rd13647, %rd4992, %rd4997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd4974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd4974;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 14;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 14;
	mov.b64 	%rd4998, {%r3077, %r3076};
	shf.r.wrap.b32 	%r3078, %r3075, %r3074, 18;
	shf.r.wrap.b32 	%r3079, %r3074, %r3075, 18;
	mov.b64 	%rd4999, {%r3079, %r3078};
	xor.b64  	%rd5000, %rd4998, %rd4999;
	shf.l.wrap.b32 	%r3080, %r3074, %r3075, 23;
	shf.l.wrap.b32 	%r3081, %r3075, %r3074, 23;
	mov.b64 	%rd5001, {%r3081, %r3080};
	xor.b64  	%rd5002, %rd5000, %rd5001;
	xor.b64  	%rd5003, %rd4937, %rd4900;
	and.b64  	%rd5004, %rd4974, %rd5003;
	xor.b64  	%rd5005, %rd5004, %rd4900;
	add.s64 	%rd5006, %rd5005, %rd4863;
	add.s64 	%rd5007, %rd5006, %rd5002;
	ld.const.u64 	%rd5008, [%rd4812+40];
	add.s64 	%rd5009, %rd5007, %rd5008;
	add.s64 	%rd5010, %rd5009, %rd13647;
	add.s64 	%rd5011, %rd5010, %rd4874;
	and.b64  	%rd5012, %rd4985, %rd4948;
	or.b64  	%rd5013, %rd4985, %rd4948;
	and.b64  	%rd5014, %rd5013, %rd4911;
	or.b64  	%rd5015, %rd5014, %rd5012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3082,%dummy}, %rd4985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3083}, %rd4985;
	}
	shf.r.wrap.b32 	%r3084, %r3083, %r3082, 28;
	shf.r.wrap.b32 	%r3085, %r3082, %r3083, 28;
	mov.b64 	%rd5016, {%r3085, %r3084};
	shf.l.wrap.b32 	%r3086, %r3082, %r3083, 30;
	shf.l.wrap.b32 	%r3087, %r3083, %r3082, 30;
	mov.b64 	%rd5017, {%r3087, %r3086};
	xor.b64  	%rd5018, %rd5016, %rd5017;
	shf.l.wrap.b32 	%r3088, %r3082, %r3083, 25;
	shf.l.wrap.b32 	%r3089, %r3083, %r3082, 25;
	mov.b64 	%rd5019, {%r3089, %r3088};
	xor.b64  	%rd5020, %rd5018, %rd5019;
	add.s64 	%rd5021, %rd5020, %rd5015;
	add.s64 	%rd5022, %rd5021, %rd5010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd13648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd13648;
	}
	shf.r.wrap.b32 	%r3092, %r3091, %r3090, 19;
	shf.r.wrap.b32 	%r3093, %r3090, %r3091, 19;
	mov.b64 	%rd5023, {%r3093, %r3092};
	shf.l.wrap.b32 	%r3094, %r3090, %r3091, 3;
	shf.l.wrap.b32 	%r3095, %r3091, %r3090, 3;
	mov.b64 	%rd5024, {%r3095, %r3094};
	xor.b64  	%rd5025, %rd5023, %rd5024;
	shr.u64 	%rd5026, %rd13648, 6;
	xor.b64  	%rd5027, %rd5025, %rd5026;
	add.s64 	%rd5028, %rd13637, %rd13646;
	add.s64 	%rd5029, %rd5028, %rd5027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3096,%dummy}, %rd13645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3097}, %rd13645;
	}
	shf.r.wrap.b32 	%r3098, %r3097, %r3096, 8;
	shf.r.wrap.b32 	%r3099, %r3096, %r3097, 8;
	mov.b64 	%rd5030, {%r3099, %r3098};
	shf.r.wrap.b32 	%r3100, %r3097, %r3096, 1;
	shf.r.wrap.b32 	%r3101, %r3096, %r3097, 1;
	mov.b64 	%rd5031, {%r3101, %r3100};
	xor.b64  	%rd5032, %rd5031, %rd5030;
	shr.u64 	%rd5033, %rd13645, 7;
	xor.b64  	%rd5034, %rd5032, %rd5033;
	add.s64 	%rd13646, %rd5029, %rd5034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3102,%dummy}, %rd5011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3103}, %rd5011;
	}
	shf.r.wrap.b32 	%r3104, %r3103, %r3102, 14;
	shf.r.wrap.b32 	%r3105, %r3102, %r3103, 14;
	mov.b64 	%rd5035, {%r3105, %r3104};
	shf.r.wrap.b32 	%r3106, %r3103, %r3102, 18;
	shf.r.wrap.b32 	%r3107, %r3102, %r3103, 18;
	mov.b64 	%rd5036, {%r3107, %r3106};
	xor.b64  	%rd5037, %rd5035, %rd5036;
	shf.l.wrap.b32 	%r3108, %r3102, %r3103, 23;
	shf.l.wrap.b32 	%r3109, %r3103, %r3102, 23;
	mov.b64 	%rd5038, {%r3109, %r3108};
	xor.b64  	%rd5039, %rd5037, %rd5038;
	xor.b64  	%rd5040, %rd4974, %rd4937;
	and.b64  	%rd5041, %rd5011, %rd5040;
	xor.b64  	%rd5042, %rd5041, %rd4937;
	add.s64 	%rd5043, %rd5042, %rd4900;
	add.s64 	%rd5044, %rd5043, %rd5039;
	ld.const.u64 	%rd5045, [%rd4812+48];
	add.s64 	%rd5046, %rd5044, %rd5045;
	add.s64 	%rd5047, %rd5046, %rd13646;
	add.s64 	%rd5048, %rd5047, %rd4911;
	and.b64  	%rd5049, %rd5022, %rd4985;
	or.b64  	%rd5050, %rd5022, %rd4985;
	and.b64  	%rd5051, %rd5050, %rd4948;
	or.b64  	%rd5052, %rd5051, %rd5049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd5022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd5022;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 28;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 28;
	mov.b64 	%rd5053, {%r3113, %r3112};
	shf.l.wrap.b32 	%r3114, %r3110, %r3111, 30;
	shf.l.wrap.b32 	%r3115, %r3111, %r3110, 30;
	mov.b64 	%rd5054, {%r3115, %r3114};
	xor.b64  	%rd5055, %rd5053, %rd5054;
	shf.l.wrap.b32 	%r3116, %r3110, %r3111, 25;
	shf.l.wrap.b32 	%r3117, %r3111, %r3110, 25;
	mov.b64 	%rd5056, {%r3117, %r3116};
	xor.b64  	%rd5057, %rd5055, %rd5056;
	add.s64 	%rd5058, %rd5057, %rd5052;
	add.s64 	%rd5059, %rd5058, %rd5047;
	add.s64 	%rd5060, %rd13652, %rd13645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3118,%dummy}, %rd13647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3119}, %rd13647;
	}
	shf.r.wrap.b32 	%r3120, %r3119, %r3118, 19;
	shf.r.wrap.b32 	%r3121, %r3118, %r3119, 19;
	mov.b64 	%rd5061, {%r3121, %r3120};
	shf.l.wrap.b32 	%r3122, %r3118, %r3119, 3;
	shf.l.wrap.b32 	%r3123, %r3119, %r3118, 3;
	mov.b64 	%rd5062, {%r3123, %r3122};
	xor.b64  	%rd5063, %rd5061, %rd5062;
	shr.u64 	%rd5064, %rd13647, 6;
	xor.b64  	%rd5065, %rd5063, %rd5064;
	add.s64 	%rd5066, %rd5060, %rd5065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3124,%dummy}, %rd13644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3125}, %rd13644;
	}
	shf.r.wrap.b32 	%r3126, %r3125, %r3124, 8;
	shf.r.wrap.b32 	%r3127, %r3124, %r3125, 8;
	mov.b64 	%rd5067, {%r3127, %r3126};
	shf.r.wrap.b32 	%r3128, %r3125, %r3124, 1;
	shf.r.wrap.b32 	%r3129, %r3124, %r3125, 1;
	mov.b64 	%rd5068, {%r3129, %r3128};
	xor.b64  	%rd5069, %rd5068, %rd5067;
	shr.u64 	%rd5070, %rd13644, 7;
	xor.b64  	%rd5071, %rd5069, %rd5070;
	add.s64 	%rd13645, %rd5066, %rd5071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3130,%dummy}, %rd5048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3131}, %rd5048;
	}
	shf.r.wrap.b32 	%r3132, %r3131, %r3130, 14;
	shf.r.wrap.b32 	%r3133, %r3130, %r3131, 14;
	mov.b64 	%rd5072, {%r3133, %r3132};
	shf.r.wrap.b32 	%r3134, %r3131, %r3130, 18;
	shf.r.wrap.b32 	%r3135, %r3130, %r3131, 18;
	mov.b64 	%rd5073, {%r3135, %r3134};
	xor.b64  	%rd5074, %rd5072, %rd5073;
	shf.l.wrap.b32 	%r3136, %r3130, %r3131, 23;
	shf.l.wrap.b32 	%r3137, %r3131, %r3130, 23;
	mov.b64 	%rd5075, {%r3137, %r3136};
	xor.b64  	%rd5076, %rd5074, %rd5075;
	xor.b64  	%rd5077, %rd5011, %rd4974;
	and.b64  	%rd5078, %rd5048, %rd5077;
	xor.b64  	%rd5079, %rd5078, %rd4974;
	add.s64 	%rd5080, %rd5079, %rd4937;
	add.s64 	%rd5081, %rd5080, %rd5076;
	ld.const.u64 	%rd5082, [%rd4812+56];
	add.s64 	%rd5083, %rd5081, %rd5082;
	add.s64 	%rd5084, %rd5083, %rd13645;
	add.s64 	%rd5085, %rd5084, %rd4948;
	and.b64  	%rd5086, %rd5059, %rd5022;
	or.b64  	%rd5087, %rd5059, %rd5022;
	and.b64  	%rd5088, %rd5087, %rd4985;
	or.b64  	%rd5089, %rd5088, %rd5086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3138,%dummy}, %rd5059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3139}, %rd5059;
	}
	shf.r.wrap.b32 	%r3140, %r3139, %r3138, 28;
	shf.r.wrap.b32 	%r3141, %r3138, %r3139, 28;
	mov.b64 	%rd5090, {%r3141, %r3140};
	shf.l.wrap.b32 	%r3142, %r3138, %r3139, 30;
	shf.l.wrap.b32 	%r3143, %r3139, %r3138, 30;
	mov.b64 	%rd5091, {%r3143, %r3142};
	xor.b64  	%rd5092, %rd5090, %rd5091;
	shf.l.wrap.b32 	%r3144, %r3138, %r3139, 25;
	shf.l.wrap.b32 	%r3145, %r3139, %r3138, 25;
	mov.b64 	%rd5093, {%r3145, %r3144};
	xor.b64  	%rd5094, %rd5092, %rd5093;
	add.s64 	%rd5095, %rd5094, %rd5089;
	add.s64 	%rd5096, %rd5095, %rd5084;
	add.s64 	%rd5097, %rd13651, %rd13644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3146,%dummy}, %rd13646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd13646;
	}
	shf.r.wrap.b32 	%r3148, %r3147, %r3146, 19;
	shf.r.wrap.b32 	%r3149, %r3146, %r3147, 19;
	mov.b64 	%rd5098, {%r3149, %r3148};
	shf.l.wrap.b32 	%r3150, %r3146, %r3147, 3;
	shf.l.wrap.b32 	%r3151, %r3147, %r3146, 3;
	mov.b64 	%rd5099, {%r3151, %r3150};
	xor.b64  	%rd5100, %rd5098, %rd5099;
	shr.u64 	%rd5101, %rd13646, 6;
	xor.b64  	%rd5102, %rd5100, %rd5101;
	add.s64 	%rd5103, %rd5097, %rd5102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3152,%dummy}, %rd13643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd13643;
	}
	shf.r.wrap.b32 	%r3154, %r3153, %r3152, 8;
	shf.r.wrap.b32 	%r3155, %r3152, %r3153, 8;
	mov.b64 	%rd5104, {%r3155, %r3154};
	shf.r.wrap.b32 	%r3156, %r3153, %r3152, 1;
	shf.r.wrap.b32 	%r3157, %r3152, %r3153, 1;
	mov.b64 	%rd5105, {%r3157, %r3156};
	xor.b64  	%rd5106, %rd5105, %rd5104;
	shr.u64 	%rd5107, %rd13643, 7;
	xor.b64  	%rd5108, %rd5106, %rd5107;
	add.s64 	%rd13644, %rd5103, %rd5108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3158,%dummy}, %rd5085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3159}, %rd5085;
	}
	shf.r.wrap.b32 	%r3160, %r3159, %r3158, 14;
	shf.r.wrap.b32 	%r3161, %r3158, %r3159, 14;
	mov.b64 	%rd5109, {%r3161, %r3160};
	shf.r.wrap.b32 	%r3162, %r3159, %r3158, 18;
	shf.r.wrap.b32 	%r3163, %r3158, %r3159, 18;
	mov.b64 	%rd5110, {%r3163, %r3162};
	xor.b64  	%rd5111, %rd5109, %rd5110;
	shf.l.wrap.b32 	%r3164, %r3158, %r3159, 23;
	shf.l.wrap.b32 	%r3165, %r3159, %r3158, 23;
	mov.b64 	%rd5112, {%r3165, %r3164};
	xor.b64  	%rd5113, %rd5111, %rd5112;
	xor.b64  	%rd5114, %rd5048, %rd5011;
	and.b64  	%rd5115, %rd5085, %rd5114;
	xor.b64  	%rd5116, %rd5115, %rd5011;
	add.s64 	%rd5117, %rd5116, %rd4974;
	add.s64 	%rd5118, %rd5117, %rd5113;
	ld.const.u64 	%rd5119, [%rd4812+64];
	add.s64 	%rd5120, %rd5118, %rd5119;
	add.s64 	%rd5121, %rd5120, %rd13644;
	add.s64 	%rd5122, %rd5121, %rd4985;
	and.b64  	%rd5123, %rd5096, %rd5059;
	or.b64  	%rd5124, %rd5096, %rd5059;
	and.b64  	%rd5125, %rd5124, %rd5022;
	or.b64  	%rd5126, %rd5125, %rd5123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3166,%dummy}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3167}, %rd5096;
	}
	shf.r.wrap.b32 	%r3168, %r3167, %r3166, 28;
	shf.r.wrap.b32 	%r3169, %r3166, %r3167, 28;
	mov.b64 	%rd5127, {%r3169, %r3168};
	shf.l.wrap.b32 	%r3170, %r3166, %r3167, 30;
	shf.l.wrap.b32 	%r3171, %r3167, %r3166, 30;
	mov.b64 	%rd5128, {%r3171, %r3170};
	xor.b64  	%rd5129, %rd5127, %rd5128;
	shf.l.wrap.b32 	%r3172, %r3166, %r3167, 25;
	shf.l.wrap.b32 	%r3173, %r3167, %r3166, 25;
	mov.b64 	%rd5130, {%r3173, %r3172};
	xor.b64  	%rd5131, %rd5129, %rd5130;
	add.s64 	%rd5132, %rd5131, %rd5126;
	add.s64 	%rd5133, %rd5132, %rd5121;
	add.s64 	%rd5134, %rd13650, %rd13643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3174,%dummy}, %rd13645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3175}, %rd13645;
	}
	shf.r.wrap.b32 	%r3176, %r3175, %r3174, 19;
	shf.r.wrap.b32 	%r3177, %r3174, %r3175, 19;
	mov.b64 	%rd5135, {%r3177, %r3176};
	shf.l.wrap.b32 	%r3178, %r3174, %r3175, 3;
	shf.l.wrap.b32 	%r3179, %r3175, %r3174, 3;
	mov.b64 	%rd5136, {%r3179, %r3178};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	shr.u64 	%rd5138, %rd13645, 6;
	xor.b64  	%rd5139, %rd5137, %rd5138;
	add.s64 	%rd5140, %rd5134, %rd5139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3180,%dummy}, %rd13642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3181}, %rd13642;
	}
	shf.r.wrap.b32 	%r3182, %r3181, %r3180, 8;
	shf.r.wrap.b32 	%r3183, %r3180, %r3181, 8;
	mov.b64 	%rd5141, {%r3183, %r3182};
	shf.r.wrap.b32 	%r3184, %r3181, %r3180, 1;
	shf.r.wrap.b32 	%r3185, %r3180, %r3181, 1;
	mov.b64 	%rd5142, {%r3185, %r3184};
	xor.b64  	%rd5143, %rd5142, %rd5141;
	shr.u64 	%rd5144, %rd13642, 7;
	xor.b64  	%rd5145, %rd5143, %rd5144;
	add.s64 	%rd13643, %rd5140, %rd5145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3186,%dummy}, %rd5122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3187}, %rd5122;
	}
	shf.r.wrap.b32 	%r3188, %r3187, %r3186, 14;
	shf.r.wrap.b32 	%r3189, %r3186, %r3187, 14;
	mov.b64 	%rd5146, {%r3189, %r3188};
	shf.r.wrap.b32 	%r3190, %r3187, %r3186, 18;
	shf.r.wrap.b32 	%r3191, %r3186, %r3187, 18;
	mov.b64 	%rd5147, {%r3191, %r3190};
	xor.b64  	%rd5148, %rd5146, %rd5147;
	shf.l.wrap.b32 	%r3192, %r3186, %r3187, 23;
	shf.l.wrap.b32 	%r3193, %r3187, %r3186, 23;
	mov.b64 	%rd5149, {%r3193, %r3192};
	xor.b64  	%rd5150, %rd5148, %rd5149;
	xor.b64  	%rd5151, %rd5085, %rd5048;
	and.b64  	%rd5152, %rd5122, %rd5151;
	xor.b64  	%rd5153, %rd5152, %rd5048;
	add.s64 	%rd5154, %rd5153, %rd5011;
	add.s64 	%rd5155, %rd5154, %rd5150;
	ld.const.u64 	%rd5156, [%rd4812+72];
	add.s64 	%rd5157, %rd5155, %rd5156;
	add.s64 	%rd5158, %rd5157, %rd13643;
	add.s64 	%rd5159, %rd5158, %rd5022;
	and.b64  	%rd5160, %rd5133, %rd5096;
	or.b64  	%rd5161, %rd5133, %rd5096;
	and.b64  	%rd5162, %rd5161, %rd5059;
	or.b64  	%rd5163, %rd5162, %rd5160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3194,%dummy}, %rd5133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3195}, %rd5133;
	}
	shf.r.wrap.b32 	%r3196, %r3195, %r3194, 28;
	shf.r.wrap.b32 	%r3197, %r3194, %r3195, 28;
	mov.b64 	%rd5164, {%r3197, %r3196};
	shf.l.wrap.b32 	%r3198, %r3194, %r3195, 30;
	shf.l.wrap.b32 	%r3199, %r3195, %r3194, 30;
	mov.b64 	%rd5165, {%r3199, %r3198};
	xor.b64  	%rd5166, %rd5164, %rd5165;
	shf.l.wrap.b32 	%r3200, %r3194, %r3195, 25;
	shf.l.wrap.b32 	%r3201, %r3195, %r3194, 25;
	mov.b64 	%rd5167, {%r3201, %r3200};
	xor.b64  	%rd5168, %rd5166, %rd5167;
	add.s64 	%rd5169, %rd5168, %rd5163;
	add.s64 	%rd5170, %rd5169, %rd5158;
	add.s64 	%rd5171, %rd13649, %rd13642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3202,%dummy}, %rd13644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3203}, %rd13644;
	}
	shf.r.wrap.b32 	%r3204, %r3203, %r3202, 19;
	shf.r.wrap.b32 	%r3205, %r3202, %r3203, 19;
	mov.b64 	%rd5172, {%r3205, %r3204};
	shf.l.wrap.b32 	%r3206, %r3202, %r3203, 3;
	shf.l.wrap.b32 	%r3207, %r3203, %r3202, 3;
	mov.b64 	%rd5173, {%r3207, %r3206};
	xor.b64  	%rd5174, %rd5172, %rd5173;
	shr.u64 	%rd5175, %rd13644, 6;
	xor.b64  	%rd5176, %rd5174, %rd5175;
	add.s64 	%rd5177, %rd5171, %rd5176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3208,%dummy}, %rd13641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3209}, %rd13641;
	}
	shf.r.wrap.b32 	%r3210, %r3209, %r3208, 8;
	shf.r.wrap.b32 	%r3211, %r3208, %r3209, 8;
	mov.b64 	%rd5178, {%r3211, %r3210};
	shf.r.wrap.b32 	%r3212, %r3209, %r3208, 1;
	shf.r.wrap.b32 	%r3213, %r3208, %r3209, 1;
	mov.b64 	%rd5179, {%r3213, %r3212};
	xor.b64  	%rd5180, %rd5179, %rd5178;
	shr.u64 	%rd5181, %rd13641, 7;
	xor.b64  	%rd5182, %rd5180, %rd5181;
	add.s64 	%rd13642, %rd5177, %rd5182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3214,%dummy}, %rd5159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3215}, %rd5159;
	}
	shf.r.wrap.b32 	%r3216, %r3215, %r3214, 14;
	shf.r.wrap.b32 	%r3217, %r3214, %r3215, 14;
	mov.b64 	%rd5183, {%r3217, %r3216};
	shf.r.wrap.b32 	%r3218, %r3215, %r3214, 18;
	shf.r.wrap.b32 	%r3219, %r3214, %r3215, 18;
	mov.b64 	%rd5184, {%r3219, %r3218};
	xor.b64  	%rd5185, %rd5183, %rd5184;
	shf.l.wrap.b32 	%r3220, %r3214, %r3215, 23;
	shf.l.wrap.b32 	%r3221, %r3215, %r3214, 23;
	mov.b64 	%rd5186, {%r3221, %r3220};
	xor.b64  	%rd5187, %rd5185, %rd5186;
	xor.b64  	%rd5188, %rd5122, %rd5085;
	and.b64  	%rd5189, %rd5159, %rd5188;
	xor.b64  	%rd5190, %rd5189, %rd5085;
	add.s64 	%rd5191, %rd5190, %rd5048;
	add.s64 	%rd5192, %rd5191, %rd5187;
	ld.const.u64 	%rd5193, [%rd4812+80];
	add.s64 	%rd5194, %rd5192, %rd5193;
	add.s64 	%rd5195, %rd5194, %rd13642;
	add.s64 	%rd5196, %rd5195, %rd5059;
	and.b64  	%rd5197, %rd5170, %rd5133;
	or.b64  	%rd5198, %rd5170, %rd5133;
	and.b64  	%rd5199, %rd5198, %rd5096;
	or.b64  	%rd5200, %rd5199, %rd5197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd5170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3223}, %rd5170;
	}
	shf.r.wrap.b32 	%r3224, %r3223, %r3222, 28;
	shf.r.wrap.b32 	%r3225, %r3222, %r3223, 28;
	mov.b64 	%rd5201, {%r3225, %r3224};
	shf.l.wrap.b32 	%r3226, %r3222, %r3223, 30;
	shf.l.wrap.b32 	%r3227, %r3223, %r3222, 30;
	mov.b64 	%rd5202, {%r3227, %r3226};
	xor.b64  	%rd5203, %rd5201, %rd5202;
	shf.l.wrap.b32 	%r3228, %r3222, %r3223, 25;
	shf.l.wrap.b32 	%r3229, %r3223, %r3222, 25;
	mov.b64 	%rd5204, {%r3229, %r3228};
	xor.b64  	%rd5205, %rd5203, %rd5204;
	add.s64 	%rd5206, %rd5205, %rd5200;
	add.s64 	%rd5207, %rd5206, %rd5195;
	add.s64 	%rd5208, %rd13648, %rd13641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3230,%dummy}, %rd13643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3231}, %rd13643;
	}
	shf.r.wrap.b32 	%r3232, %r3231, %r3230, 19;
	shf.r.wrap.b32 	%r3233, %r3230, %r3231, 19;
	mov.b64 	%rd5209, {%r3233, %r3232};
	shf.l.wrap.b32 	%r3234, %r3230, %r3231, 3;
	shf.l.wrap.b32 	%r3235, %r3231, %r3230, 3;
	mov.b64 	%rd5210, {%r3235, %r3234};
	xor.b64  	%rd5211, %rd5209, %rd5210;
	shr.u64 	%rd5212, %rd13643, 6;
	xor.b64  	%rd5213, %rd5211, %rd5212;
	add.s64 	%rd5214, %rd5208, %rd5213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3236,%dummy}, %rd13640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3237}, %rd13640;
	}
	shf.r.wrap.b32 	%r3238, %r3237, %r3236, 8;
	shf.r.wrap.b32 	%r3239, %r3236, %r3237, 8;
	mov.b64 	%rd5215, {%r3239, %r3238};
	shf.r.wrap.b32 	%r3240, %r3237, %r3236, 1;
	shf.r.wrap.b32 	%r3241, %r3236, %r3237, 1;
	mov.b64 	%rd5216, {%r3241, %r3240};
	xor.b64  	%rd5217, %rd5216, %rd5215;
	shr.u64 	%rd5218, %rd13640, 7;
	xor.b64  	%rd5219, %rd5217, %rd5218;
	add.s64 	%rd13641, %rd5214, %rd5219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd5196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3243}, %rd5196;
	}
	shf.r.wrap.b32 	%r3244, %r3243, %r3242, 14;
	shf.r.wrap.b32 	%r3245, %r3242, %r3243, 14;
	mov.b64 	%rd5220, {%r3245, %r3244};
	shf.r.wrap.b32 	%r3246, %r3243, %r3242, 18;
	shf.r.wrap.b32 	%r3247, %r3242, %r3243, 18;
	mov.b64 	%rd5221, {%r3247, %r3246};
	xor.b64  	%rd5222, %rd5220, %rd5221;
	shf.l.wrap.b32 	%r3248, %r3242, %r3243, 23;
	shf.l.wrap.b32 	%r3249, %r3243, %r3242, 23;
	mov.b64 	%rd5223, {%r3249, %r3248};
	xor.b64  	%rd5224, %rd5222, %rd5223;
	xor.b64  	%rd5225, %rd5159, %rd5122;
	and.b64  	%rd5226, %rd5196, %rd5225;
	xor.b64  	%rd5227, %rd5226, %rd5122;
	add.s64 	%rd5228, %rd5227, %rd5085;
	add.s64 	%rd5229, %rd5228, %rd5224;
	ld.const.u64 	%rd5230, [%rd4812+88];
	add.s64 	%rd5231, %rd5229, %rd5230;
	add.s64 	%rd5232, %rd5231, %rd13641;
	add.s64 	%rd5233, %rd5232, %rd5096;
	and.b64  	%rd5234, %rd5207, %rd5170;
	or.b64  	%rd5235, %rd5207, %rd5170;
	and.b64  	%rd5236, %rd5235, %rd5133;
	or.b64  	%rd5237, %rd5236, %rd5234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3250,%dummy}, %rd5207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3251}, %rd5207;
	}
	shf.r.wrap.b32 	%r3252, %r3251, %r3250, 28;
	shf.r.wrap.b32 	%r3253, %r3250, %r3251, 28;
	mov.b64 	%rd5238, {%r3253, %r3252};
	shf.l.wrap.b32 	%r3254, %r3250, %r3251, 30;
	shf.l.wrap.b32 	%r3255, %r3251, %r3250, 30;
	mov.b64 	%rd5239, {%r3255, %r3254};
	xor.b64  	%rd5240, %rd5238, %rd5239;
	shf.l.wrap.b32 	%r3256, %r3250, %r3251, 25;
	shf.l.wrap.b32 	%r3257, %r3251, %r3250, 25;
	mov.b64 	%rd5241, {%r3257, %r3256};
	xor.b64  	%rd5242, %rd5240, %rd5241;
	add.s64 	%rd5243, %rd5242, %rd5237;
	add.s64 	%rd5244, %rd5243, %rd5232;
	add.s64 	%rd5245, %rd13647, %rd13640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3258,%dummy}, %rd13642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd13642;
	}
	shf.r.wrap.b32 	%r3260, %r3259, %r3258, 19;
	shf.r.wrap.b32 	%r3261, %r3258, %r3259, 19;
	mov.b64 	%rd5246, {%r3261, %r3260};
	shf.l.wrap.b32 	%r3262, %r3258, %r3259, 3;
	shf.l.wrap.b32 	%r3263, %r3259, %r3258, 3;
	mov.b64 	%rd5247, {%r3263, %r3262};
	xor.b64  	%rd5248, %rd5246, %rd5247;
	shr.u64 	%rd5249, %rd13642, 6;
	xor.b64  	%rd5250, %rd5248, %rd5249;
	add.s64 	%rd5251, %rd5245, %rd5250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3264,%dummy}, %rd13639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3265}, %rd13639;
	}
	shf.r.wrap.b32 	%r3266, %r3265, %r3264, 8;
	shf.r.wrap.b32 	%r3267, %r3264, %r3265, 8;
	mov.b64 	%rd5252, {%r3267, %r3266};
	shf.r.wrap.b32 	%r3268, %r3265, %r3264, 1;
	shf.r.wrap.b32 	%r3269, %r3264, %r3265, 1;
	mov.b64 	%rd5253, {%r3269, %r3268};
	xor.b64  	%rd5254, %rd5253, %rd5252;
	shr.u64 	%rd5255, %rd13639, 7;
	xor.b64  	%rd5256, %rd5254, %rd5255;
	add.s64 	%rd13640, %rd5251, %rd5256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3270,%dummy}, %rd5233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3271}, %rd5233;
	}
	shf.r.wrap.b32 	%r3272, %r3271, %r3270, 14;
	shf.r.wrap.b32 	%r3273, %r3270, %r3271, 14;
	mov.b64 	%rd5257, {%r3273, %r3272};
	shf.r.wrap.b32 	%r3274, %r3271, %r3270, 18;
	shf.r.wrap.b32 	%r3275, %r3270, %r3271, 18;
	mov.b64 	%rd5258, {%r3275, %r3274};
	xor.b64  	%rd5259, %rd5257, %rd5258;
	shf.l.wrap.b32 	%r3276, %r3270, %r3271, 23;
	shf.l.wrap.b32 	%r3277, %r3271, %r3270, 23;
	mov.b64 	%rd5260, {%r3277, %r3276};
	xor.b64  	%rd5261, %rd5259, %rd5260;
	xor.b64  	%rd5262, %rd5196, %rd5159;
	and.b64  	%rd5263, %rd5233, %rd5262;
	xor.b64  	%rd5264, %rd5263, %rd5159;
	add.s64 	%rd5265, %rd5264, %rd5122;
	add.s64 	%rd5266, %rd5265, %rd5261;
	ld.const.u64 	%rd5267, [%rd4812+96];
	add.s64 	%rd5268, %rd5266, %rd5267;
	add.s64 	%rd5269, %rd5268, %rd13640;
	add.s64 	%rd13660, %rd5269, %rd5133;
	and.b64  	%rd5270, %rd5244, %rd5207;
	or.b64  	%rd5271, %rd5244, %rd5207;
	and.b64  	%rd5272, %rd5271, %rd5170;
	or.b64  	%rd5273, %rd5272, %rd5270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3278,%dummy}, %rd5244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3279}, %rd5244;
	}
	shf.r.wrap.b32 	%r3280, %r3279, %r3278, 28;
	shf.r.wrap.b32 	%r3281, %r3278, %r3279, 28;
	mov.b64 	%rd5274, {%r3281, %r3280};
	shf.l.wrap.b32 	%r3282, %r3278, %r3279, 30;
	shf.l.wrap.b32 	%r3283, %r3279, %r3278, 30;
	mov.b64 	%rd5275, {%r3283, %r3282};
	xor.b64  	%rd5276, %rd5274, %rd5275;
	shf.l.wrap.b32 	%r3284, %r3278, %r3279, 25;
	shf.l.wrap.b32 	%r3285, %r3279, %r3278, 25;
	mov.b64 	%rd5277, {%r3285, %r3284};
	xor.b64  	%rd5278, %rd5276, %rd5277;
	add.s64 	%rd5279, %rd5278, %rd5273;
	add.s64 	%rd13656, %rd5279, %rd5269;
	add.s64 	%rd5280, %rd13646, %rd13639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3286,%dummy}, %rd13641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3287}, %rd13641;
	}
	shf.r.wrap.b32 	%r3288, %r3287, %r3286, 19;
	shf.r.wrap.b32 	%r3289, %r3286, %r3287, 19;
	mov.b64 	%rd5281, {%r3289, %r3288};
	shf.l.wrap.b32 	%r3290, %r3286, %r3287, 3;
	shf.l.wrap.b32 	%r3291, %r3287, %r3286, 3;
	mov.b64 	%rd5282, {%r3291, %r3290};
	xor.b64  	%rd5283, %rd5281, %rd5282;
	shr.u64 	%rd5284, %rd13641, 6;
	xor.b64  	%rd5285, %rd5283, %rd5284;
	add.s64 	%rd5286, %rd5280, %rd5285;
	shf.r.wrap.b32 	%r3292, %r2922, %r2923, 8;
	shf.r.wrap.b32 	%r3293, %r2923, %r2922, 8;
	mov.b64 	%rd5287, {%r3293, %r3292};
	shf.r.wrap.b32 	%r3294, %r2922, %r2923, 1;
	shf.r.wrap.b32 	%r3295, %r2923, %r2922, 1;
	mov.b64 	%rd5288, {%r3295, %r3294};
	xor.b64  	%rd5289, %rd5288, %rd5287;
	shr.u64 	%rd5290, %rd13638, 7;
	xor.b64  	%rd5291, %rd5289, %rd5290;
	add.s64 	%rd13639, %rd5286, %rd5291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3296,%dummy}, %rd13660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3297}, %rd13660;
	}
	shf.r.wrap.b32 	%r3298, %r3297, %r3296, 14;
	shf.r.wrap.b32 	%r3299, %r3296, %r3297, 14;
	mov.b64 	%rd5292, {%r3299, %r3298};
	shf.r.wrap.b32 	%r3300, %r3297, %r3296, 18;
	shf.r.wrap.b32 	%r3301, %r3296, %r3297, 18;
	mov.b64 	%rd5293, {%r3301, %r3300};
	xor.b64  	%rd5294, %rd5292, %rd5293;
	shf.l.wrap.b32 	%r3302, %r3296, %r3297, 23;
	shf.l.wrap.b32 	%r3303, %r3297, %r3296, 23;
	mov.b64 	%rd5295, {%r3303, %r3302};
	xor.b64  	%rd5296, %rd5294, %rd5295;
	xor.b64  	%rd5297, %rd5233, %rd5196;
	and.b64  	%rd5298, %rd13660, %rd5297;
	xor.b64  	%rd5299, %rd5298, %rd5196;
	add.s64 	%rd5300, %rd5299, %rd5159;
	add.s64 	%rd5301, %rd5300, %rd5296;
	ld.const.u64 	%rd5302, [%rd4812+104];
	add.s64 	%rd5303, %rd5301, %rd5302;
	add.s64 	%rd5304, %rd5303, %rd13639;
	add.s64 	%rd13659, %rd5304, %rd5170;
	and.b64  	%rd5305, %rd13656, %rd5244;
	or.b64  	%rd5306, %rd13656, %rd5244;
	and.b64  	%rd5307, %rd5306, %rd5207;
	or.b64  	%rd5308, %rd5307, %rd5305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3304,%dummy}, %rd13656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3305}, %rd13656;
	}
	shf.r.wrap.b32 	%r3306, %r3305, %r3304, 28;
	shf.r.wrap.b32 	%r3307, %r3304, %r3305, 28;
	mov.b64 	%rd5309, {%r3307, %r3306};
	shf.l.wrap.b32 	%r3308, %r3304, %r3305, 30;
	shf.l.wrap.b32 	%r3309, %r3305, %r3304, 30;
	mov.b64 	%rd5310, {%r3309, %r3308};
	xor.b64  	%rd5311, %rd5309, %rd5310;
	shf.l.wrap.b32 	%r3310, %r3304, %r3305, 25;
	shf.l.wrap.b32 	%r3311, %r3305, %r3304, 25;
	mov.b64 	%rd5312, {%r3311, %r3310};
	xor.b64  	%rd5313, %rd5311, %rd5312;
	add.s64 	%rd5314, %rd5313, %rd5308;
	add.s64 	%rd13655, %rd5314, %rd5304;
	add.s64 	%rd5315, %rd13645, %rd13638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3312,%dummy}, %rd13640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3313}, %rd13640;
	}
	shf.r.wrap.b32 	%r3314, %r3313, %r3312, 19;
	shf.r.wrap.b32 	%r3315, %r3312, %r3313, 19;
	mov.b64 	%rd5316, {%r3315, %r3314};
	shf.l.wrap.b32 	%r3316, %r3312, %r3313, 3;
	shf.l.wrap.b32 	%r3317, %r3313, %r3312, 3;
	mov.b64 	%rd5317, {%r3317, %r3316};
	xor.b64  	%rd5318, %rd5316, %rd5317;
	shr.u64 	%rd5319, %rd13640, 6;
	xor.b64  	%rd5320, %rd5318, %rd5319;
	add.s64 	%rd5321, %rd5315, %rd5320;
	shf.r.wrap.b32 	%r3318, %r2950, %r2951, 8;
	shf.r.wrap.b32 	%r3319, %r2951, %r2950, 8;
	mov.b64 	%rd5322, {%r3319, %r3318};
	shf.r.wrap.b32 	%r3320, %r2950, %r2951, 1;
	shf.r.wrap.b32 	%r3321, %r2951, %r2950, 1;
	mov.b64 	%rd5323, {%r3321, %r3320};
	xor.b64  	%rd5324, %rd5323, %rd5322;
	shr.u64 	%rd5325, %rd13637, 7;
	xor.b64  	%rd5326, %rd5324, %rd5325;
	add.s64 	%rd13638, %rd5321, %rd5326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd13659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3323}, %rd13659;
	}
	shf.r.wrap.b32 	%r3324, %r3323, %r3322, 14;
	shf.r.wrap.b32 	%r3325, %r3322, %r3323, 14;
	mov.b64 	%rd5327, {%r3325, %r3324};
	shf.r.wrap.b32 	%r3326, %r3323, %r3322, 18;
	shf.r.wrap.b32 	%r3327, %r3322, %r3323, 18;
	mov.b64 	%rd5328, {%r3327, %r3326};
	xor.b64  	%rd5329, %rd5327, %rd5328;
	shf.l.wrap.b32 	%r3328, %r3322, %r3323, 23;
	shf.l.wrap.b32 	%r3329, %r3323, %r3322, 23;
	mov.b64 	%rd5330, {%r3329, %r3328};
	xor.b64  	%rd5331, %rd5329, %rd5330;
	xor.b64  	%rd5332, %rd13660, %rd5233;
	and.b64  	%rd5333, %rd13659, %rd5332;
	xor.b64  	%rd5334, %rd5333, %rd5233;
	add.s64 	%rd5335, %rd5334, %rd5196;
	add.s64 	%rd5336, %rd5335, %rd5331;
	ld.const.u64 	%rd5337, [%rd4812+112];
	add.s64 	%rd5338, %rd5336, %rd5337;
	add.s64 	%rd5339, %rd5338, %rd13638;
	add.s64 	%rd13658, %rd5339, %rd5207;
	and.b64  	%rd5340, %rd13655, %rd13656;
	or.b64  	%rd5341, %rd13655, %rd13656;
	and.b64  	%rd5342, %rd5341, %rd5244;
	or.b64  	%rd5343, %rd5342, %rd5340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd13655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3331}, %rd13655;
	}
	shf.r.wrap.b32 	%r3332, %r3331, %r3330, 28;
	shf.r.wrap.b32 	%r3333, %r3330, %r3331, 28;
	mov.b64 	%rd5344, {%r3333, %r3332};
	shf.l.wrap.b32 	%r3334, %r3330, %r3331, 30;
	shf.l.wrap.b32 	%r3335, %r3331, %r3330, 30;
	mov.b64 	%rd5345, {%r3335, %r3334};
	xor.b64  	%rd5346, %rd5344, %rd5345;
	shf.l.wrap.b32 	%r3336, %r3330, %r3331, 25;
	shf.l.wrap.b32 	%r3337, %r3331, %r3330, 25;
	mov.b64 	%rd5347, {%r3337, %r3336};
	xor.b64  	%rd5348, %rd5346, %rd5347;
	add.s64 	%rd5349, %rd5348, %rd5343;
	add.s64 	%rd13654, %rd5349, %rd5339;
	add.s64 	%rd5350, %rd13644, %rd13637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd13639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd13639;
	}
	shf.r.wrap.b32 	%r3340, %r3339, %r3338, 19;
	shf.r.wrap.b32 	%r3341, %r3338, %r3339, 19;
	mov.b64 	%rd5351, {%r3341, %r3340};
	shf.l.wrap.b32 	%r3342, %r3338, %r3339, 3;
	shf.l.wrap.b32 	%r3343, %r3339, %r3338, 3;
	mov.b64 	%rd5352, {%r3343, %r3342};
	xor.b64  	%rd5353, %rd5351, %rd5352;
	shr.u64 	%rd5354, %rd13639, 6;
	xor.b64  	%rd5355, %rd5353, %rd5354;
	add.s64 	%rd5356, %rd5350, %rd5355;
	shf.r.wrap.b32 	%r3344, %r2979, %r2978, 1;
	shf.r.wrap.b32 	%r3345, %r2978, %r2979, 1;
	mov.b64 	%rd5357, {%r3345, %r3344};
	shf.r.wrap.b32 	%r3346, %r2979, %r2978, 8;
	shf.r.wrap.b32 	%r3347, %r2978, %r2979, 8;
	mov.b64 	%rd5358, {%r3347, %r3346};
	xor.b64  	%rd5359, %rd5357, %rd5358;
	shr.u64 	%rd5360, %rd13652, 7;
	xor.b64  	%rd5361, %rd5359, %rd5360;
	add.s64 	%rd13637, %rd5356, %rd5361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3348,%dummy}, %rd13658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3349}, %rd13658;
	}
	shf.r.wrap.b32 	%r3350, %r3349, %r3348, 14;
	shf.r.wrap.b32 	%r3351, %r3348, %r3349, 14;
	mov.b64 	%rd5362, {%r3351, %r3350};
	shf.r.wrap.b32 	%r3352, %r3349, %r3348, 18;
	shf.r.wrap.b32 	%r3353, %r3348, %r3349, 18;
	mov.b64 	%rd5363, {%r3353, %r3352};
	xor.b64  	%rd5364, %rd5362, %rd5363;
	shf.l.wrap.b32 	%r3354, %r3348, %r3349, 23;
	shf.l.wrap.b32 	%r3355, %r3349, %r3348, 23;
	mov.b64 	%rd5365, {%r3355, %r3354};
	xor.b64  	%rd5366, %rd5364, %rd5365;
	xor.b64  	%rd5367, %rd13659, %rd13660;
	and.b64  	%rd5368, %rd13658, %rd5367;
	xor.b64  	%rd5369, %rd5368, %rd13660;
	add.s64 	%rd5370, %rd5369, %rd5233;
	add.s64 	%rd5371, %rd5370, %rd5366;
	ld.const.u64 	%rd5372, [%rd4812+120];
	add.s64 	%rd5373, %rd5371, %rd5372;
	add.s64 	%rd5374, %rd5373, %rd13637;
	add.s64 	%rd13657, %rd5374, %rd5244;
	and.b64  	%rd5375, %rd13654, %rd13655;
	or.b64  	%rd5376, %rd13654, %rd13655;
	and.b64  	%rd5377, %rd5376, %rd13656;
	or.b64  	%rd5378, %rd5377, %rd5375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3356,%dummy}, %rd13654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3357}, %rd13654;
	}
	shf.r.wrap.b32 	%r3358, %r3357, %r3356, 28;
	shf.r.wrap.b32 	%r3359, %r3356, %r3357, 28;
	mov.b64 	%rd5379, {%r3359, %r3358};
	shf.l.wrap.b32 	%r3360, %r3356, %r3357, 30;
	shf.l.wrap.b32 	%r3361, %r3357, %r3356, 30;
	mov.b64 	%rd5380, {%r3361, %r3360};
	xor.b64  	%rd5381, %rd5379, %rd5380;
	shf.l.wrap.b32 	%r3362, %r3356, %r3357, 25;
	shf.l.wrap.b32 	%r3363, %r3357, %r3356, 25;
	mov.b64 	%rd5382, {%r3363, %r3362};
	xor.b64  	%rd5383, %rd5381, %rd5382;
	add.s64 	%rd5384, %rd5383, %rd5378;
	add.s64 	%rd13653, %rd5384, %rd5374;
	add.s32 	%r9727, %r9727, 16;
	setp.lt.u32 	%p63, %r9727, 80;
	@%p63 bra 	$L__BB0_84;

	add.s64 	%rd13668, %rd13668, %rd13653;
	add.s64 	%rd13667, %rd13667, %rd13654;
	st.local.u64 	[%rd2+-64], %rd13667;
	add.s64 	%rd13666, %rd13666, %rd13655;
	st.local.u64 	[%rd2+-56], %rd13666;
	add.s64 	%rd13665, %rd13665, %rd13656;
	st.local.u64 	[%rd2+-48], %rd13665;
	add.s64 	%rd13664, %rd13664, %rd13657;
	st.local.u64 	[%rd2+-40], %rd13664;
	add.s64 	%rd13663, %rd13663, %rd13658;
	st.local.u64 	[%rd2+-32], %rd13663;
	add.s64 	%rd13662, %rd13662, %rd13659;
	st.local.u64 	[%rd2+-24], %rd13662;
	add.s64 	%rd13661, %rd13661, %rd13660;
	st.local.u64 	[%rd2+-16], %rd13661;
	sub.s32 	%r9730, %r2, %r78;
	st.local.u32 	[%rd2+-4], %r9730;
	setp.eq.s32 	%p64, %r9730, 0;
	@%p64 bra 	$L__BB0_88;

	cvt.u64.u32 	%rd413, %r78;
	mov.u32 	%r9728, 0;

$L__BB0_87:
	cvt.u64.u32 	%rd5385, %r9728;
	add.s64 	%rd5386, %rd5385, %rd413;
	add.s64 	%rd5387, %rd229, %rd5386;
	ld.global.nc.u8 	%rs2, [%rd5387];
	add.s64 	%rd5388, %rd2, %rd5385;
	st.local.u8 	[%rd5388], %rs2;
	add.s32 	%r9728, %r9728, 1;
	setp.lt.u32 	%p65, %r9728, %r9730;
	@%p65 bra 	$L__BB0_87;

$L__BB0_88:
	and.b32  	%r3365, %r9730, 7;
	shr.u32 	%r3366, %r9730, 3;
	shl.b32 	%r3367, %r3366, 3;
	cvt.u64.u32 	%rd5389, %r3367;
	add.s64 	%rd5390, %rd1, %rd5389;
	shl.b32 	%r3368, %r9730, 3;
	cvt.u64.u32 	%rd5391, %r3368;
	and.b64  	%rd5392, %rd5391, 56;
	add.s64 	%rd5394, %rd1255, %rd5392;
	ld.const.u64 	%rd5395, [%rd5394];
	ld.local.u64 	%rd5396, [%rd5390+72];
	and.b64  	%rd5397, %rd5395, %rd5396;
	st.local.u64 	[%rd5390+72], %rd5397;
	setp.ne.s32 	%p66, %r3365, 0;
	selp.u32 	%r3369, 1, 0, %p66;
	add.s32 	%r9729, %r3366, %r3369;
	setp.gt.u32 	%p67, %r9729, 15;
	@%p67 bra 	$L__BB0_90;

$L__BB0_89:
	mul.wide.u32 	%rd5398, %r9729, 8;
	add.s64 	%rd5399, %rd1, %rd5398;
	mov.u64 	%rd5400, 0;
	st.local.u64 	[%rd5399+72], %rd5400;
	add.s32 	%r9729, %r9729, 1;
	setp.lt.u32 	%p68, %r9729, 16;
	@%p68 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_90;

$L__BB0_58:
	add.s32 	%r9715, %r9715, 64;
	st.local.u32 	[%rd2+-8], %r9715;
	add.s32 	%r1805, %r9730, 64;
	setp.lt.u32 	%p41, %r1805, 129;
	mov.u32 	%r1806, 128;
	sub.s32 	%r56, %r1806, %r9730;
	selp.b32 	%r57, 64, %r56, %p41;
	and.b32  	%r58, %r9730, 7;
	setp.eq.s32 	%p42, %r57, 0;
	@%p42 bra 	$L__BB0_65;

	shl.b32 	%r1808, %r58, 3;
	shr.u32 	%r9719, %r9730, 3;
	cvt.u64.u32 	%rd240, %r1808;
	neg.s32 	%r1809, %r1808;
	mov.u32 	%r9717, 0;
	and.b32  	%r1810, %r1809, 56;
	cvt.u64.u32 	%rd241, %r1810;
	mov.u64 	%rd13610, %rd212;

$L__BB0_60:
	mul.wide.u32 	%rd3372, %r9719, 8;
	add.s64 	%rd3373, %rd1, %rd3372;
	ld.local.u64 	%rd3374, [%rd13610];
	cvt.u32.u64 	%r1811, %rd240;
	shl.b64 	%rd3375, %rd3374, %r1811;
	ld.local.u64 	%rd3376, [%rd3373+72];
	or.b64  	%rd3377, %rd3375, %rd3376;
	st.local.u64 	[%rd3373+72], %rd3377;
	setp.gt.u32 	%p43, %r9719, 14;
	@%p43 bra 	$L__BB0_64;

	setp.eq.s32 	%p44, %r58, 0;
	mov.u64 	%rd13611, 0;
	@%p44 bra 	$L__BB0_63;

	ld.local.u64 	%rd3379, [%rd13610];
	cvt.u32.u64 	%r1812, %rd241;
	shr.u64 	%rd13611, %rd3379, %r1812;

$L__BB0_63:
	add.s32 	%r9719, %r9719, 1;
	mul.wide.u32 	%rd3380, %r9719, 8;
	add.s64 	%rd3381, %rd1, %rd3380;
	st.local.u64 	[%rd3381+72], %rd13611;

$L__BB0_64:
	add.s64 	%rd13610, %rd13610, 8;
	add.s32 	%r9717, %r9717, 8;
	setp.lt.u32 	%p45, %r9717, %r57;
	@%p45 bra 	$L__BB0_60;

$L__BB0_65:
	add.s32 	%r9730, %r9730, %r57;
	st.local.u32 	[%rd2+-4], %r9730;
	and.b32  	%r1813, %r9730, 7;
	shr.u32 	%r1814, %r9730, 3;
	shl.b32 	%r1815, %r1814, 3;
	cvt.u64.u32 	%rd3382, %r1815;
	add.s64 	%rd3383, %rd1, %rd3382;
	shl.b32 	%r1816, %r9730, 3;
	cvt.u64.u32 	%rd3384, %r1816;
	and.b64  	%rd3385, %rd3384, 56;
	add.s64 	%rd3387, %rd1255, %rd3385;
	ld.const.u64 	%rd3388, [%rd3387];
	ld.local.u64 	%rd3389, [%rd3383+72];
	and.b64  	%rd3390, %rd3388, %rd3389;
	st.local.u64 	[%rd3383+72], %rd3390;
	setp.ne.s32 	%p46, %r1813, 0;
	selp.u32 	%r1817, 1, 0, %p46;
	add.s32 	%r9720, %r1814, %r1817;
	setp.gt.u32 	%p47, %r9720, 15;
	@%p47 bra 	$L__BB0_67;

$L__BB0_66:
	mul.wide.u32 	%rd3391, %r9720, 8;
	add.s64 	%rd3392, %rd1, %rd3391;
	mov.u64 	%rd3393, 0;
	st.local.u64 	[%rd3392+72], %rd3393;
	add.s32 	%r9720, %r9720, 1;
	setp.lt.u32 	%p48, %r9720, 16;
	@%p48 bra 	$L__BB0_66;

$L__BB0_67:
	setp.ne.s32 	%p49, %r9730, 128;
	@%p49 bra 	$L__BB0_90;

	ld.local.u64 	%rd3394, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1819, %temp}, %rd3394;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1820}, %rd3394;
	}
	mov.u32 	%r1821, 291;
	mov.u32 	%r1822, 0;
	prmt.b32 	%r1823, %r1819, %r1822, %r1821;
	prmt.b32 	%r1824, %r1820, %r1822, %r1821;
	mov.b64 	%rd13627, {%r1824, %r1823};
	ld.local.u64 	%rd3395, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1825, %temp}, %rd3395;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1826}, %rd3395;
	}
	prmt.b32 	%r1827, %r1825, %r1822, %r1821;
	prmt.b32 	%r1828, %r1826, %r1822, %r1821;
	mov.b64 	%rd13626, {%r1828, %r1827};
	ld.local.u64 	%rd3396, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1829, %temp}, %rd3396;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1830}, %rd3396;
	}
	prmt.b32 	%r1831, %r1829, %r1822, %r1821;
	prmt.b32 	%r1832, %r1830, %r1822, %r1821;
	mov.b64 	%rd13625, {%r1832, %r1831};
	ld.local.u64 	%rd3397, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1833, %temp}, %rd3397;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1834}, %rd3397;
	}
	prmt.b32 	%r1835, %r1833, %r1822, %r1821;
	prmt.b32 	%r1836, %r1834, %r1822, %r1821;
	mov.b64 	%rd13624, {%r1836, %r1835};
	ld.local.u64 	%rd3398, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1837, %temp}, %rd3398;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1838}, %rd3398;
	}
	prmt.b32 	%r1839, %r1837, %r1822, %r1821;
	prmt.b32 	%r1840, %r1838, %r1822, %r1821;
	mov.b64 	%rd13623, {%r1840, %r1839};
	ld.local.u64 	%rd3399, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1841, %temp}, %rd3399;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1842}, %rd3399;
	}
	prmt.b32 	%r1843, %r1841, %r1822, %r1821;
	prmt.b32 	%r1844, %r1842, %r1822, %r1821;
	mov.b64 	%rd13622, {%r1844, %r1843};
	ld.local.u64 	%rd3400, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1845, %temp}, %rd3400;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1846}, %rd3400;
	}
	prmt.b32 	%r1847, %r1845, %r1822, %r1821;
	prmt.b32 	%r1848, %r1846, %r1822, %r1821;
	mov.b64 	%rd13621, {%r1848, %r1847};
	ld.local.u64 	%rd3401, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1849, %temp}, %rd3401;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1850}, %rd3401;
	}
	prmt.b32 	%r1851, %r1849, %r1822, %r1821;
	prmt.b32 	%r1852, %r1850, %r1822, %r1821;
	mov.b64 	%rd13620, {%r1852, %r1851};
	ld.local.u64 	%rd3402, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1853, %temp}, %rd3402;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1854}, %rd3402;
	}
	prmt.b32 	%r1855, %r1853, %r1822, %r1821;
	prmt.b32 	%r1856, %r1854, %r1822, %r1821;
	mov.b64 	%rd13619, {%r1856, %r1855};
	ld.local.u64 	%rd3403, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1857, %temp}, %rd3403;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1858}, %rd3403;
	}
	prmt.b32 	%r1859, %r1857, %r1822, %r1821;
	prmt.b32 	%r1860, %r1858, %r1822, %r1821;
	mov.b64 	%rd13618, {%r1860, %r1859};
	ld.local.u64 	%rd3404, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1861, %temp}, %rd3404;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1862}, %rd3404;
	}
	prmt.b32 	%r1863, %r1861, %r1822, %r1821;
	prmt.b32 	%r1864, %r1862, %r1822, %r1821;
	mov.b64 	%rd13617, {%r1864, %r1863};
	ld.local.u64 	%rd3405, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1865, %temp}, %rd3405;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1866}, %rd3405;
	}
	prmt.b32 	%r1867, %r1865, %r1822, %r1821;
	prmt.b32 	%r1868, %r1866, %r1822, %r1821;
	mov.b64 	%rd13616, {%r1868, %r1867};
	ld.local.u64 	%rd3406, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1869, %temp}, %rd3406;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1870}, %rd3406;
	}
	prmt.b32 	%r1871, %r1869, %r1822, %r1821;
	prmt.b32 	%r1872, %r1870, %r1822, %r1821;
	mov.b64 	%rd13615, {%r1872, %r1871};
	ld.local.u64 	%rd3407, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1873, %temp}, %rd3407;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1874}, %rd3407;
	}
	prmt.b32 	%r1875, %r1873, %r1822, %r1821;
	prmt.b32 	%r1876, %r1874, %r1822, %r1821;
	mov.b64 	%rd13614, {%r1876, %r1875};
	ld.local.u64 	%rd3408, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1877, %temp}, %rd3408;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1878}, %rd3408;
	}
	prmt.b32 	%r1879, %r1877, %r1822, %r1821;
	prmt.b32 	%r1880, %r1878, %r1822, %r1821;
	mov.b64 	%rd13613, {%r1880, %r1879};
	ld.local.u64 	%rd3409, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1881, %temp}, %rd3409;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1882}, %rd3409;
	}
	prmt.b32 	%r1883, %r1881, %r1822, %r1821;
	prmt.b32 	%r1884, %r1882, %r1822, %r1821;
	mov.b64 	%rd13612, {%r1884, %r1883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1885,%dummy}, %rd13664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1886}, %rd13664;
	}
	shf.r.wrap.b32 	%r1887, %r1886, %r1885, 18;
	shf.r.wrap.b32 	%r1888, %r1885, %r1886, 18;
	mov.b64 	%rd3410, {%r1888, %r1887};
	shf.r.wrap.b32 	%r1889, %r1886, %r1885, 14;
	shf.r.wrap.b32 	%r1890, %r1885, %r1886, 14;
	mov.b64 	%rd3411, {%r1890, %r1889};
	xor.b64  	%rd3412, %rd3411, %rd3410;
	shf.l.wrap.b32 	%r1891, %r1885, %r1886, 23;
	shf.l.wrap.b32 	%r1892, %r1886, %r1885, 23;
	mov.b64 	%rd3413, {%r1892, %r1891};
	xor.b64  	%rd3414, %rd3412, %rd3413;
	xor.b64  	%rd3415, %rd13663, %rd13662;
	and.b64  	%rd3416, %rd13664, %rd3415;
	xor.b64  	%rd3417, %rd3416, %rd13662;
	add.s64 	%rd3418, %rd3417, %rd13661;
	add.s64 	%rd3419, %rd3418, %rd3414;
	add.s64 	%rd3420, %rd3419, %rd13627;
	add.s64 	%rd3421, %rd3420, 4794697086780616226;
	add.s64 	%rd3422, %rd3421, %rd13665;
	or.b64  	%rd3423, %rd13668, %rd13667;
	and.b64  	%rd3424, %rd3423, %rd13666;
	and.b64  	%rd3425, %rd13668, %rd13667;
	or.b64  	%rd3426, %rd3424, %rd3425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd13668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd13668;
	}
	shf.l.wrap.b32 	%r1895, %r1894, %r1893, 30;
	shf.l.wrap.b32 	%r1896, %r1893, %r1894, 30;
	mov.b64 	%rd3427, {%r1896, %r1895};
	shf.r.wrap.b32 	%r1897, %r1893, %r1894, 28;
	shf.r.wrap.b32 	%r1898, %r1894, %r1893, 28;
	mov.b64 	%rd3428, {%r1898, %r1897};
	xor.b64  	%rd3429, %rd3428, %rd3427;
	shf.l.wrap.b32 	%r1899, %r1894, %r1893, 25;
	shf.l.wrap.b32 	%r1900, %r1893, %r1894, 25;
	mov.b64 	%rd3430, {%r1900, %r1899};
	xor.b64  	%rd3431, %rd3429, %rd3430;
	add.s64 	%rd3432, %rd3431, %rd3426;
	add.s64 	%rd3433, %rd3432, %rd3421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1901,%dummy}, %rd3422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1902}, %rd3422;
	}
	shf.r.wrap.b32 	%r1903, %r1902, %r1901, 14;
	shf.r.wrap.b32 	%r1904, %r1901, %r1902, 14;
	mov.b64 	%rd3434, {%r1904, %r1903};
	shf.r.wrap.b32 	%r1905, %r1902, %r1901, 18;
	shf.r.wrap.b32 	%r1906, %r1901, %r1902, 18;
	mov.b64 	%rd3435, {%r1906, %r1905};
	xor.b64  	%rd3436, %rd3434, %rd3435;
	shf.l.wrap.b32 	%r1907, %r1901, %r1902, 23;
	shf.l.wrap.b32 	%r1908, %r1902, %r1901, 23;
	mov.b64 	%rd3437, {%r1908, %r1907};
	xor.b64  	%rd3438, %rd3436, %rd3437;
	xor.b64  	%rd3439, %rd13664, %rd13663;
	and.b64  	%rd3440, %rd3422, %rd3439;
	xor.b64  	%rd3441, %rd3440, %rd13663;
	add.s64 	%rd3442, %rd3441, %rd13662;
	add.s64 	%rd3443, %rd3442, %rd3438;
	add.s64 	%rd3444, %rd3443, %rd13626;
	add.s64 	%rd3445, %rd3444, 8158064640168781261;
	add.s64 	%rd3446, %rd3445, %rd13666;
	and.b64  	%rd3447, %rd3433, %rd13668;
	or.b64  	%rd3448, %rd3433, %rd13668;
	and.b64  	%rd3449, %rd3448, %rd13667;
	or.b64  	%rd3450, %rd3449, %rd3447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd3433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd3433;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 28;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 28;
	mov.b64 	%rd3451, {%r1912, %r1911};
	shf.l.wrap.b32 	%r1913, %r1909, %r1910, 30;
	shf.l.wrap.b32 	%r1914, %r1910, %r1909, 30;
	mov.b64 	%rd3452, {%r1914, %r1913};
	xor.b64  	%rd3453, %rd3451, %rd3452;
	shf.l.wrap.b32 	%r1915, %r1909, %r1910, 25;
	shf.l.wrap.b32 	%r1916, %r1910, %r1909, 25;
	mov.b64 	%rd3454, {%r1916, %r1915};
	xor.b64  	%rd3455, %rd3453, %rd3454;
	add.s64 	%rd3456, %rd3455, %rd3450;
	add.s64 	%rd3457, %rd3456, %rd3445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd3446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd3446;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 14;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 14;
	mov.b64 	%rd3458, {%r1920, %r1919};
	shf.r.wrap.b32 	%r1921, %r1918, %r1917, 18;
	shf.r.wrap.b32 	%r1922, %r1917, %r1918, 18;
	mov.b64 	%rd3459, {%r1922, %r1921};
	xor.b64  	%rd3460, %rd3458, %rd3459;
	shf.l.wrap.b32 	%r1923, %r1917, %r1918, 23;
	shf.l.wrap.b32 	%r1924, %r1918, %r1917, 23;
	mov.b64 	%rd3461, {%r1924, %r1923};
	xor.b64  	%rd3462, %rd3460, %rd3461;
	xor.b64  	%rd3463, %rd3422, %rd13664;
	and.b64  	%rd3464, %rd3446, %rd3463;
	xor.b64  	%rd3465, %rd3464, %rd13664;
	add.s64 	%rd3466, %rd3465, %rd13663;
	add.s64 	%rd3467, %rd3466, %rd3462;
	add.s64 	%rd3468, %rd3467, %rd13625;
	add.s64 	%rd3469, %rd3468, -5349999486874862801;
	add.s64 	%rd3470, %rd3469, %rd13667;
	and.b64  	%rd3471, %rd3457, %rd3433;
	or.b64  	%rd3472, %rd3457, %rd3433;
	and.b64  	%rd3473, %rd3472, %rd13668;
	or.b64  	%rd3474, %rd3473, %rd3471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd3457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd3457;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 28;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 28;
	mov.b64 	%rd3475, {%r1928, %r1927};
	shf.l.wrap.b32 	%r1929, %r1925, %r1926, 30;
	shf.l.wrap.b32 	%r1930, %r1926, %r1925, 30;
	mov.b64 	%rd3476, {%r1930, %r1929};
	xor.b64  	%rd3477, %rd3475, %rd3476;
	shf.l.wrap.b32 	%r1931, %r1925, %r1926, 25;
	shf.l.wrap.b32 	%r1932, %r1926, %r1925, 25;
	mov.b64 	%rd3478, {%r1932, %r1931};
	xor.b64  	%rd3479, %rd3477, %rd3478;
	add.s64 	%rd3480, %rd3479, %rd3474;
	add.s64 	%rd3481, %rd3480, %rd3469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1933,%dummy}, %rd3470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1934}, %rd3470;
	}
	shf.r.wrap.b32 	%r1935, %r1934, %r1933, 14;
	shf.r.wrap.b32 	%r1936, %r1933, %r1934, 14;
	mov.b64 	%rd3482, {%r1936, %r1935};
	shf.r.wrap.b32 	%r1937, %r1934, %r1933, 18;
	shf.r.wrap.b32 	%r1938, %r1933, %r1934, 18;
	mov.b64 	%rd3483, {%r1938, %r1937};
	xor.b64  	%rd3484, %rd3482, %rd3483;
	shf.l.wrap.b32 	%r1939, %r1933, %r1934, 23;
	shf.l.wrap.b32 	%r1940, %r1934, %r1933, 23;
	mov.b64 	%rd3485, {%r1940, %r1939};
	xor.b64  	%rd3486, %rd3484, %rd3485;
	xor.b64  	%rd3487, %rd3446, %rd3422;
	and.b64  	%rd3488, %rd3470, %rd3487;
	xor.b64  	%rd3489, %rd3488, %rd3422;
	add.s64 	%rd3490, %rd3489, %rd13664;
	add.s64 	%rd3491, %rd3490, %rd3486;
	add.s64 	%rd3492, %rd3491, %rd13624;
	add.s64 	%rd3493, %rd3492, -1606136188198331460;
	add.s64 	%rd3494, %rd3493, %rd13668;
	and.b64  	%rd3495, %rd3481, %rd3457;
	or.b64  	%rd3496, %rd3481, %rd3457;
	and.b64  	%rd3497, %rd3496, %rd3433;
	or.b64  	%rd3498, %rd3497, %rd3495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd3481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1942}, %rd3481;
	}
	shf.r.wrap.b32 	%r1943, %r1942, %r1941, 28;
	shf.r.wrap.b32 	%r1944, %r1941, %r1942, 28;
	mov.b64 	%rd3499, {%r1944, %r1943};
	shf.l.wrap.b32 	%r1945, %r1941, %r1942, 30;
	shf.l.wrap.b32 	%r1946, %r1942, %r1941, 30;
	mov.b64 	%rd3500, {%r1946, %r1945};
	xor.b64  	%rd3501, %rd3499, %rd3500;
	shf.l.wrap.b32 	%r1947, %r1941, %r1942, 25;
	shf.l.wrap.b32 	%r1948, %r1942, %r1941, 25;
	mov.b64 	%rd3502, {%r1948, %r1947};
	xor.b64  	%rd3503, %rd3501, %rd3502;
	add.s64 	%rd3504, %rd3503, %rd3498;
	add.s64 	%rd3505, %rd3504, %rd3493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1949,%dummy}, %rd3494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1950}, %rd3494;
	}
	shf.r.wrap.b32 	%r1951, %r1950, %r1949, 14;
	shf.r.wrap.b32 	%r1952, %r1949, %r1950, 14;
	mov.b64 	%rd3506, {%r1952, %r1951};
	shf.r.wrap.b32 	%r1953, %r1950, %r1949, 18;
	shf.r.wrap.b32 	%r1954, %r1949, %r1950, 18;
	mov.b64 	%rd3507, {%r1954, %r1953};
	xor.b64  	%rd3508, %rd3506, %rd3507;
	shf.l.wrap.b32 	%r1955, %r1949, %r1950, 23;
	shf.l.wrap.b32 	%r1956, %r1950, %r1949, 23;
	mov.b64 	%rd3509, {%r1956, %r1955};
	xor.b64  	%rd3510, %rd3508, %rd3509;
	xor.b64  	%rd3511, %rd3470, %rd3446;
	and.b64  	%rd3512, %rd3494, %rd3511;
	xor.b64  	%rd3513, %rd3512, %rd3446;
	add.s64 	%rd3514, %rd3513, %rd3422;
	add.s64 	%rd3515, %rd3514, %rd3510;
	add.s64 	%rd3516, %rd3515, %rd13623;
	add.s64 	%rd3517, %rd3516, 4131703408338449720;
	add.s64 	%rd3518, %rd3517, %rd3433;
	and.b64  	%rd3519, %rd3505, %rd3481;
	or.b64  	%rd3520, %rd3505, %rd3481;
	and.b64  	%rd3521, %rd3520, %rd3457;
	or.b64  	%rd3522, %rd3521, %rd3519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1957,%dummy}, %rd3505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1958}, %rd3505;
	}
	shf.r.wrap.b32 	%r1959, %r1958, %r1957, 28;
	shf.r.wrap.b32 	%r1960, %r1957, %r1958, 28;
	mov.b64 	%rd3523, {%r1960, %r1959};
	shf.l.wrap.b32 	%r1961, %r1957, %r1958, 30;
	shf.l.wrap.b32 	%r1962, %r1958, %r1957, 30;
	mov.b64 	%rd3524, {%r1962, %r1961};
	xor.b64  	%rd3525, %rd3523, %rd3524;
	shf.l.wrap.b32 	%r1963, %r1957, %r1958, 25;
	shf.l.wrap.b32 	%r1964, %r1958, %r1957, 25;
	mov.b64 	%rd3526, {%r1964, %r1963};
	xor.b64  	%rd3527, %rd3525, %rd3526;
	add.s64 	%rd3528, %rd3527, %rd3522;
	add.s64 	%rd3529, %rd3528, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1965,%dummy}, %rd3518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1966}, %rd3518;
	}
	shf.r.wrap.b32 	%r1967, %r1966, %r1965, 14;
	shf.r.wrap.b32 	%r1968, %r1965, %r1966, 14;
	mov.b64 	%rd3530, {%r1968, %r1967};
	shf.r.wrap.b32 	%r1969, %r1966, %r1965, 18;
	shf.r.wrap.b32 	%r1970, %r1965, %r1966, 18;
	mov.b64 	%rd3531, {%r1970, %r1969};
	xor.b64  	%rd3532, %rd3530, %rd3531;
	shf.l.wrap.b32 	%r1971, %r1965, %r1966, 23;
	shf.l.wrap.b32 	%r1972, %r1966, %r1965, 23;
	mov.b64 	%rd3533, {%r1972, %r1971};
	xor.b64  	%rd3534, %rd3532, %rd3533;
	xor.b64  	%rd3535, %rd3494, %rd3470;
	and.b64  	%rd3536, %rd3518, %rd3535;
	xor.b64  	%rd3537, %rd3536, %rd3470;
	add.s64 	%rd3538, %rd3537, %rd3446;
	add.s64 	%rd3539, %rd3538, %rd3534;
	add.s64 	%rd3540, %rd3539, %rd13622;
	add.s64 	%rd3541, %rd3540, 6480981068601479193;
	add.s64 	%rd3542, %rd3541, %rd3457;
	and.b64  	%rd3543, %rd3529, %rd3505;
	or.b64  	%rd3544, %rd3529, %rd3505;
	and.b64  	%rd3545, %rd3544, %rd3481;
	or.b64  	%rd3546, %rd3545, %rd3543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1973,%dummy}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1974}, %rd3529;
	}
	shf.r.wrap.b32 	%r1975, %r1974, %r1973, 28;
	shf.r.wrap.b32 	%r1976, %r1973, %r1974, 28;
	mov.b64 	%rd3547, {%r1976, %r1975};
	shf.l.wrap.b32 	%r1977, %r1973, %r1974, 30;
	shf.l.wrap.b32 	%r1978, %r1974, %r1973, 30;
	mov.b64 	%rd3548, {%r1978, %r1977};
	xor.b64  	%rd3549, %rd3547, %rd3548;
	shf.l.wrap.b32 	%r1979, %r1973, %r1974, 25;
	shf.l.wrap.b32 	%r1980, %r1974, %r1973, 25;
	mov.b64 	%rd3550, {%r1980, %r1979};
	xor.b64  	%rd3551, %rd3549, %rd3550;
	add.s64 	%rd3552, %rd3551, %rd3546;
	add.s64 	%rd3553, %rd3552, %rd3541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1981,%dummy}, %rd3542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd3542;
	}
	shf.r.wrap.b32 	%r1983, %r1982, %r1981, 14;
	shf.r.wrap.b32 	%r1984, %r1981, %r1982, 14;
	mov.b64 	%rd3554, {%r1984, %r1983};
	shf.r.wrap.b32 	%r1985, %r1982, %r1981, 18;
	shf.r.wrap.b32 	%r1986, %r1981, %r1982, 18;
	mov.b64 	%rd3555, {%r1986, %r1985};
	xor.b64  	%rd3556, %rd3554, %rd3555;
	shf.l.wrap.b32 	%r1987, %r1981, %r1982, 23;
	shf.l.wrap.b32 	%r1988, %r1982, %r1981, 23;
	mov.b64 	%rd3557, {%r1988, %r1987};
	xor.b64  	%rd3558, %rd3556, %rd3557;
	xor.b64  	%rd3559, %rd3518, %rd3494;
	and.b64  	%rd3560, %rd3542, %rd3559;
	xor.b64  	%rd3561, %rd3560, %rd3494;
	add.s64 	%rd3562, %rd3561, %rd3470;
	add.s64 	%rd3563, %rd3562, %rd3558;
	add.s64 	%rd3564, %rd3563, %rd13621;
	add.s64 	%rd3565, %rd3564, -7908458776815382629;
	add.s64 	%rd3566, %rd3565, %rd3481;
	and.b64  	%rd3567, %rd3553, %rd3529;
	or.b64  	%rd3568, %rd3553, %rd3529;
	and.b64  	%rd3569, %rd3568, %rd3505;
	or.b64  	%rd3570, %rd3569, %rd3567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1989,%dummy}, %rd3553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1990}, %rd3553;
	}
	shf.r.wrap.b32 	%r1991, %r1990, %r1989, 28;
	shf.r.wrap.b32 	%r1992, %r1989, %r1990, 28;
	mov.b64 	%rd3571, {%r1992, %r1991};
	shf.l.wrap.b32 	%r1993, %r1989, %r1990, 30;
	shf.l.wrap.b32 	%r1994, %r1990, %r1989, 30;
	mov.b64 	%rd3572, {%r1994, %r1993};
	xor.b64  	%rd3573, %rd3571, %rd3572;
	shf.l.wrap.b32 	%r1995, %r1989, %r1990, 25;
	shf.l.wrap.b32 	%r1996, %r1990, %r1989, 25;
	mov.b64 	%rd3574, {%r1996, %r1995};
	xor.b64  	%rd3575, %rd3573, %rd3574;
	add.s64 	%rd3576, %rd3575, %rd3570;
	add.s64 	%rd3577, %rd3576, %rd3565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1997,%dummy}, %rd3566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1998}, %rd3566;
	}
	shf.r.wrap.b32 	%r1999, %r1998, %r1997, 14;
	shf.r.wrap.b32 	%r2000, %r1997, %r1998, 14;
	mov.b64 	%rd3578, {%r2000, %r1999};
	shf.r.wrap.b32 	%r2001, %r1998, %r1997, 18;
	shf.r.wrap.b32 	%r2002, %r1997, %r1998, 18;
	mov.b64 	%rd3579, {%r2002, %r2001};
	xor.b64  	%rd3580, %rd3578, %rd3579;
	shf.l.wrap.b32 	%r2003, %r1997, %r1998, 23;
	shf.l.wrap.b32 	%r2004, %r1998, %r1997, 23;
	mov.b64 	%rd3581, {%r2004, %r2003};
	xor.b64  	%rd3582, %rd3580, %rd3581;
	xor.b64  	%rd3583, %rd3542, %rd3518;
	and.b64  	%rd3584, %rd3566, %rd3583;
	xor.b64  	%rd3585, %rd3584, %rd3518;
	add.s64 	%rd3586, %rd3585, %rd3494;
	add.s64 	%rd3587, %rd3586, %rd3582;
	add.s64 	%rd3588, %rd3587, %rd13620;
	add.s64 	%rd3589, %rd3588, -6116909921290321640;
	add.s64 	%rd3590, %rd3589, %rd3505;
	and.b64  	%rd3591, %rd3577, %rd3553;
	or.b64  	%rd3592, %rd3577, %rd3553;
	and.b64  	%rd3593, %rd3592, %rd3529;
	or.b64  	%rd3594, %rd3593, %rd3591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2005,%dummy}, %rd3577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2006}, %rd3577;
	}
	shf.r.wrap.b32 	%r2007, %r2006, %r2005, 28;
	shf.r.wrap.b32 	%r2008, %r2005, %r2006, 28;
	mov.b64 	%rd3595, {%r2008, %r2007};
	shf.l.wrap.b32 	%r2009, %r2005, %r2006, 30;
	shf.l.wrap.b32 	%r2010, %r2006, %r2005, 30;
	mov.b64 	%rd3596, {%r2010, %r2009};
	xor.b64  	%rd3597, %rd3595, %rd3596;
	shf.l.wrap.b32 	%r2011, %r2005, %r2006, 25;
	shf.l.wrap.b32 	%r2012, %r2006, %r2005, 25;
	mov.b64 	%rd3598, {%r2012, %r2011};
	xor.b64  	%rd3599, %rd3597, %rd3598;
	add.s64 	%rd3600, %rd3599, %rd3594;
	add.s64 	%rd3601, %rd3600, %rd3589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd3590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd3590;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 14;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 14;
	mov.b64 	%rd3602, {%r2016, %r2015};
	shf.r.wrap.b32 	%r2017, %r2014, %r2013, 18;
	shf.r.wrap.b32 	%r2018, %r2013, %r2014, 18;
	mov.b64 	%rd3603, {%r2018, %r2017};
	xor.b64  	%rd3604, %rd3602, %rd3603;
	shf.l.wrap.b32 	%r2019, %r2013, %r2014, 23;
	shf.l.wrap.b32 	%r2020, %r2014, %r2013, 23;
	mov.b64 	%rd3605, {%r2020, %r2019};
	xor.b64  	%rd3606, %rd3604, %rd3605;
	xor.b64  	%rd3607, %rd3566, %rd3542;
	and.b64  	%rd3608, %rd3590, %rd3607;
	xor.b64  	%rd3609, %rd3608, %rd3542;
	add.s64 	%rd3610, %rd3609, %rd3518;
	add.s64 	%rd3611, %rd3610, %rd3606;
	add.s64 	%rd3612, %rd3611, %rd13619;
	add.s64 	%rd3613, %rd3612, -2880145864133508542;
	add.s64 	%rd3614, %rd3613, %rd3529;
	and.b64  	%rd3615, %rd3601, %rd3577;
	or.b64  	%rd3616, %rd3601, %rd3577;
	and.b64  	%rd3617, %rd3616, %rd3553;
	or.b64  	%rd3618, %rd3617, %rd3615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2021,%dummy}, %rd3601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2022}, %rd3601;
	}
	shf.r.wrap.b32 	%r2023, %r2022, %r2021, 28;
	shf.r.wrap.b32 	%r2024, %r2021, %r2022, 28;
	mov.b64 	%rd3619, {%r2024, %r2023};
	shf.l.wrap.b32 	%r2025, %r2021, %r2022, 30;
	shf.l.wrap.b32 	%r2026, %r2022, %r2021, 30;
	mov.b64 	%rd3620, {%r2026, %r2025};
	xor.b64  	%rd3621, %rd3619, %rd3620;
	shf.l.wrap.b32 	%r2027, %r2021, %r2022, 25;
	shf.l.wrap.b32 	%r2028, %r2022, %r2021, 25;
	mov.b64 	%rd3622, {%r2028, %r2027};
	xor.b64  	%rd3623, %rd3621, %rd3622;
	add.s64 	%rd3624, %rd3623, %rd3618;
	add.s64 	%rd3625, %rd3624, %rd3613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2029,%dummy}, %rd3614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2030}, %rd3614;
	}
	shf.r.wrap.b32 	%r2031, %r2030, %r2029, 14;
	shf.r.wrap.b32 	%r2032, %r2029, %r2030, 14;
	mov.b64 	%rd3626, {%r2032, %r2031};
	shf.r.wrap.b32 	%r2033, %r2030, %r2029, 18;
	shf.r.wrap.b32 	%r2034, %r2029, %r2030, 18;
	mov.b64 	%rd3627, {%r2034, %r2033};
	xor.b64  	%rd3628, %rd3626, %rd3627;
	shf.l.wrap.b32 	%r2035, %r2029, %r2030, 23;
	shf.l.wrap.b32 	%r2036, %r2030, %r2029, 23;
	mov.b64 	%rd3629, {%r2036, %r2035};
	xor.b64  	%rd3630, %rd3628, %rd3629;
	xor.b64  	%rd3631, %rd3590, %rd3566;
	and.b64  	%rd3632, %rd3614, %rd3631;
	xor.b64  	%rd3633, %rd3632, %rd3566;
	add.s64 	%rd3634, %rd3633, %rd3542;
	add.s64 	%rd3635, %rd3634, %rd3630;
	add.s64 	%rd3636, %rd3635, %rd13618;
	add.s64 	%rd3637, %rd3636, 1334009975649890238;
	add.s64 	%rd3638, %rd3637, %rd3553;
	and.b64  	%rd3639, %rd3625, %rd3601;
	or.b64  	%rd3640, %rd3625, %rd3601;
	and.b64  	%rd3641, %rd3640, %rd3577;
	or.b64  	%rd3642, %rd3641, %rd3639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2037,%dummy}, %rd3625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2038}, %rd3625;
	}
	shf.r.wrap.b32 	%r2039, %r2038, %r2037, 28;
	shf.r.wrap.b32 	%r2040, %r2037, %r2038, 28;
	mov.b64 	%rd3643, {%r2040, %r2039};
	shf.l.wrap.b32 	%r2041, %r2037, %r2038, 30;
	shf.l.wrap.b32 	%r2042, %r2038, %r2037, 30;
	mov.b64 	%rd3644, {%r2042, %r2041};
	xor.b64  	%rd3645, %rd3643, %rd3644;
	shf.l.wrap.b32 	%r2043, %r2037, %r2038, 25;
	shf.l.wrap.b32 	%r2044, %r2038, %r2037, 25;
	mov.b64 	%rd3646, {%r2044, %r2043};
	xor.b64  	%rd3647, %rd3645, %rd3646;
	add.s64 	%rd3648, %rd3647, %rd3642;
	add.s64 	%rd3649, %rd3648, %rd3637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2045,%dummy}, %rd3638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2046}, %rd3638;
	}
	shf.r.wrap.b32 	%r2047, %r2046, %r2045, 14;
	shf.r.wrap.b32 	%r2048, %r2045, %r2046, 14;
	mov.b64 	%rd3650, {%r2048, %r2047};
	shf.r.wrap.b32 	%r2049, %r2046, %r2045, 18;
	shf.r.wrap.b32 	%r2050, %r2045, %r2046, 18;
	mov.b64 	%rd3651, {%r2050, %r2049};
	xor.b64  	%rd3652, %rd3650, %rd3651;
	shf.l.wrap.b32 	%r2051, %r2045, %r2046, 23;
	shf.l.wrap.b32 	%r2052, %r2046, %r2045, 23;
	mov.b64 	%rd3653, {%r2052, %r2051};
	xor.b64  	%rd3654, %rd3652, %rd3653;
	xor.b64  	%rd3655, %rd3614, %rd3590;
	and.b64  	%rd3656, %rd3638, %rd3655;
	xor.b64  	%rd3657, %rd3656, %rd3590;
	add.s64 	%rd3658, %rd3657, %rd3566;
	add.s64 	%rd3659, %rd3658, %rd3654;
	add.s64 	%rd3660, %rd3659, %rd13617;
	add.s64 	%rd3661, %rd3660, 2608012711638119052;
	add.s64 	%rd3662, %rd3661, %rd3577;
	and.b64  	%rd3663, %rd3649, %rd3625;
	or.b64  	%rd3664, %rd3649, %rd3625;
	and.b64  	%rd3665, %rd3664, %rd3601;
	or.b64  	%rd3666, %rd3665, %rd3663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2053,%dummy}, %rd3649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2054}, %rd3649;
	}
	shf.r.wrap.b32 	%r2055, %r2054, %r2053, 28;
	shf.r.wrap.b32 	%r2056, %r2053, %r2054, 28;
	mov.b64 	%rd3667, {%r2056, %r2055};
	shf.l.wrap.b32 	%r2057, %r2053, %r2054, 30;
	shf.l.wrap.b32 	%r2058, %r2054, %r2053, 30;
	mov.b64 	%rd3668, {%r2058, %r2057};
	xor.b64  	%rd3669, %rd3667, %rd3668;
	shf.l.wrap.b32 	%r2059, %r2053, %r2054, 25;
	shf.l.wrap.b32 	%r2060, %r2054, %r2053, 25;
	mov.b64 	%rd3670, {%r2060, %r2059};
	xor.b64  	%rd3671, %rd3669, %rd3670;
	add.s64 	%rd3672, %rd3671, %rd3666;
	add.s64 	%rd3673, %rd3672, %rd3661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2061,%dummy}, %rd3662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2062}, %rd3662;
	}
	shf.r.wrap.b32 	%r2063, %r2062, %r2061, 14;
	shf.r.wrap.b32 	%r2064, %r2061, %r2062, 14;
	mov.b64 	%rd3674, {%r2064, %r2063};
	shf.r.wrap.b32 	%r2065, %r2062, %r2061, 18;
	shf.r.wrap.b32 	%r2066, %r2061, %r2062, 18;
	mov.b64 	%rd3675, {%r2066, %r2065};
	xor.b64  	%rd3676, %rd3674, %rd3675;
	shf.l.wrap.b32 	%r2067, %r2061, %r2062, 23;
	shf.l.wrap.b32 	%r2068, %r2062, %r2061, 23;
	mov.b64 	%rd3677, {%r2068, %r2067};
	xor.b64  	%rd3678, %rd3676, %rd3677;
	xor.b64  	%rd3679, %rd3638, %rd3614;
	and.b64  	%rd3680, %rd3662, %rd3679;
	xor.b64  	%rd3681, %rd3680, %rd3614;
	add.s64 	%rd3682, %rd3681, %rd3590;
	add.s64 	%rd3683, %rd3682, %rd3678;
	add.s64 	%rd3684, %rd3683, %rd13616;
	add.s64 	%rd3685, %rd3684, 6128411473006802146;
	add.s64 	%rd3686, %rd3685, %rd3601;
	and.b64  	%rd3687, %rd3673, %rd3649;
	or.b64  	%rd3688, %rd3673, %rd3649;
	and.b64  	%rd3689, %rd3688, %rd3625;
	or.b64  	%rd3690, %rd3689, %rd3687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2069,%dummy}, %rd3673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2070}, %rd3673;
	}
	shf.r.wrap.b32 	%r2071, %r2070, %r2069, 28;
	shf.r.wrap.b32 	%r2072, %r2069, %r2070, 28;
	mov.b64 	%rd3691, {%r2072, %r2071};
	shf.l.wrap.b32 	%r2073, %r2069, %r2070, 30;
	shf.l.wrap.b32 	%r2074, %r2070, %r2069, 30;
	mov.b64 	%rd3692, {%r2074, %r2073};
	xor.b64  	%rd3693, %rd3691, %rd3692;
	shf.l.wrap.b32 	%r2075, %r2069, %r2070, 25;
	shf.l.wrap.b32 	%r2076, %r2070, %r2069, 25;
	mov.b64 	%rd3694, {%r2076, %r2075};
	xor.b64  	%rd3695, %rd3693, %rd3694;
	add.s64 	%rd3696, %rd3695, %rd3690;
	add.s64 	%rd3697, %rd3696, %rd3685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2077,%dummy}, %rd3686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2078}, %rd3686;
	}
	shf.r.wrap.b32 	%r2079, %r2078, %r2077, 14;
	shf.r.wrap.b32 	%r2080, %r2077, %r2078, 14;
	mov.b64 	%rd3698, {%r2080, %r2079};
	shf.r.wrap.b32 	%r2081, %r2078, %r2077, 18;
	shf.r.wrap.b32 	%r2082, %r2077, %r2078, 18;
	mov.b64 	%rd3699, {%r2082, %r2081};
	xor.b64  	%rd3700, %rd3698, %rd3699;
	shf.l.wrap.b32 	%r2083, %r2077, %r2078, 23;
	shf.l.wrap.b32 	%r2084, %r2078, %r2077, 23;
	mov.b64 	%rd3701, {%r2084, %r2083};
	xor.b64  	%rd3702, %rd3700, %rd3701;
	xor.b64  	%rd3703, %rd3662, %rd3638;
	and.b64  	%rd3704, %rd3686, %rd3703;
	xor.b64  	%rd3705, %rd3704, %rd3638;
	add.s64 	%rd3706, %rd3705, %rd3614;
	add.s64 	%rd3707, %rd3706, %rd3702;
	add.s64 	%rd3708, %rd3707, %rd13615;
	add.s64 	%rd3709, %rd3708, 8268148722764581231;
	add.s64 	%rd13635, %rd3709, %rd3625;
	and.b64  	%rd3710, %rd3697, %rd3673;
	or.b64  	%rd3711, %rd3697, %rd3673;
	and.b64  	%rd3712, %rd3711, %rd3649;
	or.b64  	%rd3713, %rd3712, %rd3710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2085,%dummy}, %rd3697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2086}, %rd3697;
	}
	shf.r.wrap.b32 	%r2087, %r2086, %r2085, 28;
	shf.r.wrap.b32 	%r2088, %r2085, %r2086, 28;
	mov.b64 	%rd3714, {%r2088, %r2087};
	shf.l.wrap.b32 	%r2089, %r2085, %r2086, 30;
	shf.l.wrap.b32 	%r2090, %r2086, %r2085, 30;
	mov.b64 	%rd3715, {%r2090, %r2089};
	xor.b64  	%rd3716, %rd3714, %rd3715;
	shf.l.wrap.b32 	%r2091, %r2085, %r2086, 25;
	shf.l.wrap.b32 	%r2092, %r2086, %r2085, 25;
	mov.b64 	%rd3717, {%r2092, %r2091};
	xor.b64  	%rd3718, %rd3716, %rd3717;
	add.s64 	%rd3719, %rd3718, %rd3713;
	add.s64 	%rd13631, %rd3719, %rd3709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2093,%dummy}, %rd13635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2094}, %rd13635;
	}
	shf.r.wrap.b32 	%r2095, %r2094, %r2093, 14;
	shf.r.wrap.b32 	%r2096, %r2093, %r2094, 14;
	mov.b64 	%rd3720, {%r2096, %r2095};
	shf.r.wrap.b32 	%r2097, %r2094, %r2093, 18;
	shf.r.wrap.b32 	%r2098, %r2093, %r2094, 18;
	mov.b64 	%rd3721, {%r2098, %r2097};
	xor.b64  	%rd3722, %rd3720, %rd3721;
	shf.l.wrap.b32 	%r2099, %r2093, %r2094, 23;
	shf.l.wrap.b32 	%r2100, %r2094, %r2093, 23;
	mov.b64 	%rd3723, {%r2100, %r2099};
	xor.b64  	%rd3724, %rd3722, %rd3723;
	xor.b64  	%rd3725, %rd3686, %rd3662;
	and.b64  	%rd3726, %rd13635, %rd3725;
	xor.b64  	%rd3727, %rd3726, %rd3662;
	add.s64 	%rd3728, %rd3727, %rd3638;
	add.s64 	%rd3729, %rd3728, %rd3724;
	add.s64 	%rd3730, %rd3729, %rd13614;
	add.s64 	%rd3731, %rd3730, -9160688886553864527;
	add.s64 	%rd13634, %rd3731, %rd3649;
	and.b64  	%rd3732, %rd13631, %rd3697;
	or.b64  	%rd3733, %rd13631, %rd3697;
	and.b64  	%rd3734, %rd3733, %rd3673;
	or.b64  	%rd3735, %rd3734, %rd3732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd13631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd13631;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 28;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 28;
	mov.b64 	%rd3736, {%r2104, %r2103};
	shf.l.wrap.b32 	%r2105, %r2101, %r2102, 30;
	shf.l.wrap.b32 	%r2106, %r2102, %r2101, 30;
	mov.b64 	%rd3737, {%r2106, %r2105};
	xor.b64  	%rd3738, %rd3736, %rd3737;
	shf.l.wrap.b32 	%r2107, %r2101, %r2102, 25;
	shf.l.wrap.b32 	%r2108, %r2102, %r2101, 25;
	mov.b64 	%rd3739, {%r2108, %r2107};
	xor.b64  	%rd3740, %rd3738, %rd3739;
	add.s64 	%rd3741, %rd3740, %rd3735;
	add.s64 	%rd13630, %rd3741, %rd3731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2109,%dummy}, %rd13634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2110}, %rd13634;
	}
	shf.r.wrap.b32 	%r2111, %r2110, %r2109, 14;
	shf.r.wrap.b32 	%r2112, %r2109, %r2110, 14;
	mov.b64 	%rd3742, {%r2112, %r2111};
	shf.r.wrap.b32 	%r2113, %r2110, %r2109, 18;
	shf.r.wrap.b32 	%r2114, %r2109, %r2110, 18;
	mov.b64 	%rd3743, {%r2114, %r2113};
	xor.b64  	%rd3744, %rd3742, %rd3743;
	shf.l.wrap.b32 	%r2115, %r2109, %r2110, 23;
	shf.l.wrap.b32 	%r2116, %r2110, %r2109, 23;
	mov.b64 	%rd3745, {%r2116, %r2115};
	xor.b64  	%rd3746, %rd3744, %rd3745;
	xor.b64  	%rd3747, %rd13635, %rd3686;
	and.b64  	%rd3748, %rd13634, %rd3747;
	xor.b64  	%rd3749, %rd3748, %rd3686;
	add.s64 	%rd3750, %rd3749, %rd3662;
	add.s64 	%rd3751, %rd3750, %rd3746;
	add.s64 	%rd3752, %rd3751, %rd13613;
	add.s64 	%rd3753, %rd3752, -7215885187991268811;
	add.s64 	%rd13633, %rd3753, %rd3673;
	and.b64  	%rd3754, %rd13630, %rd13631;
	or.b64  	%rd3755, %rd13630, %rd13631;
	and.b64  	%rd3756, %rd3755, %rd3697;
	or.b64  	%rd3757, %rd3756, %rd3754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2117,%dummy}, %rd13630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2118}, %rd13630;
	}
	shf.r.wrap.b32 	%r2119, %r2118, %r2117, 28;
	shf.r.wrap.b32 	%r2120, %r2117, %r2118, 28;
	mov.b64 	%rd3758, {%r2120, %r2119};
	shf.l.wrap.b32 	%r2121, %r2117, %r2118, 30;
	shf.l.wrap.b32 	%r2122, %r2118, %r2117, 30;
	mov.b64 	%rd3759, {%r2122, %r2121};
	xor.b64  	%rd3760, %rd3758, %rd3759;
	shf.l.wrap.b32 	%r2123, %r2117, %r2118, 25;
	shf.l.wrap.b32 	%r2124, %r2118, %r2117, 25;
	mov.b64 	%rd3761, {%r2124, %r2123};
	xor.b64  	%rd3762, %rd3760, %rd3761;
	add.s64 	%rd3763, %rd3762, %rd3757;
	add.s64 	%rd13629, %rd3763, %rd3753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2125,%dummy}, %rd13633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2126}, %rd13633;
	}
	shf.r.wrap.b32 	%r2127, %r2126, %r2125, 14;
	shf.r.wrap.b32 	%r2128, %r2125, %r2126, 14;
	mov.b64 	%rd3764, {%r2128, %r2127};
	shf.r.wrap.b32 	%r2129, %r2126, %r2125, 18;
	shf.r.wrap.b32 	%r2130, %r2125, %r2126, 18;
	mov.b64 	%rd3765, {%r2130, %r2129};
	xor.b64  	%rd3766, %rd3764, %rd3765;
	shf.l.wrap.b32 	%r2131, %r2125, %r2126, 23;
	shf.l.wrap.b32 	%r2132, %r2126, %r2125, 23;
	mov.b64 	%rd3767, {%r2132, %r2131};
	xor.b64  	%rd3768, %rd3766, %rd3767;
	xor.b64  	%rd3769, %rd13634, %rd13635;
	and.b64  	%rd3770, %rd13633, %rd3769;
	xor.b64  	%rd3771, %rd3770, %rd13635;
	add.s64 	%rd3772, %rd3771, %rd3686;
	add.s64 	%rd3773, %rd3772, %rd3768;
	add.s64 	%rd3774, %rd3773, %rd13612;
	add.s64 	%rd3775, %rd3774, -4495734319001033068;
	add.s64 	%rd13632, %rd3775, %rd3697;
	and.b64  	%rd3776, %rd13629, %rd13630;
	or.b64  	%rd3777, %rd13629, %rd13630;
	and.b64  	%rd3778, %rd3777, %rd13631;
	or.b64  	%rd3779, %rd3778, %rd3776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2133,%dummy}, %rd13629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2134}, %rd13629;
	}
	shf.r.wrap.b32 	%r2135, %r2134, %r2133, 28;
	shf.r.wrap.b32 	%r2136, %r2133, %r2134, 28;
	mov.b64 	%rd3780, {%r2136, %r2135};
	shf.l.wrap.b32 	%r2137, %r2133, %r2134, 30;
	shf.l.wrap.b32 	%r2138, %r2134, %r2133, 30;
	mov.b64 	%rd3781, {%r2138, %r2137};
	xor.b64  	%rd3782, %rd3780, %rd3781;
	shf.l.wrap.b32 	%r2139, %r2133, %r2134, 25;
	shf.l.wrap.b32 	%r2140, %r2134, %r2133, 25;
	mov.b64 	%rd3783, {%r2140, %r2139};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	add.s64 	%rd3785, %rd3784, %rd3779;
	add.s64 	%rd13628, %rd3785, %rd3775;
	mov.u32 	%r9721, 16;

$L__BB0_69:
	.pragma "nounroll";
	mov.u64 	%rd13506, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2141}, %rd13613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2142,%dummy}, %rd13613;
	}
	shf.l.wrap.b32 	%r2143, %r2142, %r2141, 3;
	shf.l.wrap.b32 	%r2144, %r2141, %r2142, 3;
	mov.b64 	%rd3786, {%r2144, %r2143};
	shf.r.wrap.b32 	%r2145, %r2141, %r2142, 19;
	shf.r.wrap.b32 	%r2146, %r2142, %r2141, 19;
	mov.b64 	%rd3787, {%r2146, %r2145};
	xor.b64  	%rd3788, %rd3787, %rd3786;
	shr.u64 	%rd3789, %rd13613, 6;
	xor.b64  	%rd3790, %rd3788, %rd3789;
	add.s64 	%rd3791, %rd13618, %rd13627;
	add.s64 	%rd3792, %rd3791, %rd3790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2147,%dummy}, %rd13626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2148}, %rd13626;
	}
	shf.r.wrap.b32 	%r2149, %r2148, %r2147, 8;
	shf.r.wrap.b32 	%r2150, %r2147, %r2148, 8;
	mov.b64 	%rd3793, {%r2150, %r2149};
	shf.r.wrap.b32 	%r2151, %r2148, %r2147, 1;
	shf.r.wrap.b32 	%r2152, %r2147, %r2148, 1;
	mov.b64 	%rd3794, {%r2152, %r2151};
	xor.b64  	%rd3795, %rd3794, %rd3793;
	shr.u64 	%rd3796, %rd13626, 7;
	xor.b64  	%rd3797, %rd3795, %rd3796;
	add.s64 	%rd13627, %rd3792, %rd3797;
	mul.wide.u32 	%rd3798, %r9721, 8;
	add.s64 	%rd3800, %rd13506, %rd3798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2153,%dummy}, %rd13632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2154}, %rd13632;
	}
	shf.r.wrap.b32 	%r2155, %r2154, %r2153, 18;
	shf.r.wrap.b32 	%r2156, %r2153, %r2154, 18;
	mov.b64 	%rd3801, {%r2156, %r2155};
	shf.r.wrap.b32 	%r2157, %r2154, %r2153, 14;
	shf.r.wrap.b32 	%r2158, %r2153, %r2154, 14;
	mov.b64 	%rd3802, {%r2158, %r2157};
	xor.b64  	%rd3803, %rd3802, %rd3801;
	shf.l.wrap.b32 	%r2159, %r2153, %r2154, 23;
	shf.l.wrap.b32 	%r2160, %r2154, %r2153, 23;
	mov.b64 	%rd3804, {%r2160, %r2159};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	xor.b64  	%rd3806, %rd13633, %rd13634;
	and.b64  	%rd3807, %rd13632, %rd3806;
	xor.b64  	%rd3808, %rd3807, %rd13634;
	add.s64 	%rd3809, %rd3808, %rd13635;
	add.s64 	%rd3810, %rd3809, %rd3805;
	ld.const.u64 	%rd3811, [%rd3800];
	add.s64 	%rd3812, %rd3810, %rd3811;
	add.s64 	%rd3813, %rd3812, %rd13627;
	add.s64 	%rd3814, %rd3813, %rd13631;
	or.b64  	%rd3815, %rd13628, %rd13629;
	and.b64  	%rd3816, %rd3815, %rd13630;
	and.b64  	%rd3817, %rd13628, %rd13629;
	or.b64  	%rd3818, %rd3816, %rd3817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2161}, %rd13628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2162,%dummy}, %rd13628;
	}
	shf.l.wrap.b32 	%r2163, %r2162, %r2161, 30;
	shf.l.wrap.b32 	%r2164, %r2161, %r2162, 30;
	mov.b64 	%rd3819, {%r2164, %r2163};
	shf.r.wrap.b32 	%r2165, %r2161, %r2162, 28;
	shf.r.wrap.b32 	%r2166, %r2162, %r2161, 28;
	mov.b64 	%rd3820, {%r2166, %r2165};
	xor.b64  	%rd3821, %rd3820, %rd3819;
	shf.l.wrap.b32 	%r2167, %r2162, %r2161, 25;
	shf.l.wrap.b32 	%r2168, %r2161, %r2162, 25;
	mov.b64 	%rd3822, {%r2168, %r2167};
	xor.b64  	%rd3823, %rd3821, %rd3822;
	add.s64 	%rd3824, %rd3823, %rd3818;
	add.s64 	%rd3825, %rd3824, %rd3813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2169}, %rd13612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd13612;
	}
	shf.l.wrap.b32 	%r2171, %r2170, %r2169, 3;
	shf.l.wrap.b32 	%r2172, %r2169, %r2170, 3;
	mov.b64 	%rd3826, {%r2172, %r2171};
	shf.r.wrap.b32 	%r2173, %r2169, %r2170, 19;
	shf.r.wrap.b32 	%r2174, %r2170, %r2169, 19;
	mov.b64 	%rd3827, {%r2174, %r2173};
	xor.b64  	%rd3828, %rd3827, %rd3826;
	shr.u64 	%rd3829, %rd13612, 6;
	xor.b64  	%rd3830, %rd3828, %rd3829;
	add.s64 	%rd3831, %rd13617, %rd13626;
	add.s64 	%rd3832, %rd3831, %rd3830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2175,%dummy}, %rd13625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2176}, %rd13625;
	}
	shf.r.wrap.b32 	%r2177, %r2176, %r2175, 8;
	shf.r.wrap.b32 	%r2178, %r2175, %r2176, 8;
	mov.b64 	%rd3833, {%r2178, %r2177};
	shf.r.wrap.b32 	%r2179, %r2176, %r2175, 1;
	shf.r.wrap.b32 	%r2180, %r2175, %r2176, 1;
	mov.b64 	%rd3834, {%r2180, %r2179};
	xor.b64  	%rd3835, %rd3834, %rd3833;
	shr.u64 	%rd3836, %rd13625, 7;
	xor.b64  	%rd3837, %rd3835, %rd3836;
	add.s64 	%rd13626, %rd3832, %rd3837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2181,%dummy}, %rd3814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2182}, %rd3814;
	}
	shf.r.wrap.b32 	%r2183, %r2182, %r2181, 14;
	shf.r.wrap.b32 	%r2184, %r2181, %r2182, 14;
	mov.b64 	%rd3838, {%r2184, %r2183};
	shf.r.wrap.b32 	%r2185, %r2182, %r2181, 18;
	shf.r.wrap.b32 	%r2186, %r2181, %r2182, 18;
	mov.b64 	%rd3839, {%r2186, %r2185};
	xor.b64  	%rd3840, %rd3838, %rd3839;
	shf.l.wrap.b32 	%r2187, %r2181, %r2182, 23;
	shf.l.wrap.b32 	%r2188, %r2182, %r2181, 23;
	mov.b64 	%rd3841, {%r2188, %r2187};
	xor.b64  	%rd3842, %rd3840, %rd3841;
	xor.b64  	%rd3843, %rd13632, %rd13633;
	and.b64  	%rd3844, %rd3814, %rd3843;
	xor.b64  	%rd3845, %rd3844, %rd13633;
	add.s64 	%rd3846, %rd3845, %rd13634;
	add.s64 	%rd3847, %rd3846, %rd3842;
	ld.const.u64 	%rd3848, [%rd3800+8];
	add.s64 	%rd3849, %rd3847, %rd3848;
	add.s64 	%rd3850, %rd3849, %rd13626;
	add.s64 	%rd3851, %rd3850, %rd13630;
	and.b64  	%rd3852, %rd3825, %rd13628;
	or.b64  	%rd3853, %rd3825, %rd13628;
	and.b64  	%rd3854, %rd3853, %rd13629;
	or.b64  	%rd3855, %rd3854, %rd3852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd3825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd3825;
	}
	shf.r.wrap.b32 	%r2191, %r2190, %r2189, 28;
	shf.r.wrap.b32 	%r2192, %r2189, %r2190, 28;
	mov.b64 	%rd3856, {%r2192, %r2191};
	shf.l.wrap.b32 	%r2193, %r2189, %r2190, 30;
	shf.l.wrap.b32 	%r2194, %r2190, %r2189, 30;
	mov.b64 	%rd3857, {%r2194, %r2193};
	xor.b64  	%rd3858, %rd3856, %rd3857;
	shf.l.wrap.b32 	%r2195, %r2189, %r2190, 25;
	shf.l.wrap.b32 	%r2196, %r2190, %r2189, 25;
	mov.b64 	%rd3859, {%r2196, %r2195};
	xor.b64  	%rd3860, %rd3858, %rd3859;
	add.s64 	%rd3861, %rd3860, %rd3855;
	add.s64 	%rd3862, %rd3861, %rd3850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2197,%dummy}, %rd13627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2198}, %rd13627;
	}
	shf.r.wrap.b32 	%r2199, %r2198, %r2197, 19;
	shf.r.wrap.b32 	%r2200, %r2197, %r2198, 19;
	mov.b64 	%rd3863, {%r2200, %r2199};
	shf.l.wrap.b32 	%r2201, %r2197, %r2198, 3;
	shf.l.wrap.b32 	%r2202, %r2198, %r2197, 3;
	mov.b64 	%rd3864, {%r2202, %r2201};
	xor.b64  	%rd3865, %rd3863, %rd3864;
	shr.u64 	%rd3866, %rd13627, 6;
	xor.b64  	%rd3867, %rd3865, %rd3866;
	add.s64 	%rd3868, %rd13616, %rd13625;
	add.s64 	%rd3869, %rd3868, %rd3867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2203,%dummy}, %rd13624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2204}, %rd13624;
	}
	shf.r.wrap.b32 	%r2205, %r2204, %r2203, 8;
	shf.r.wrap.b32 	%r2206, %r2203, %r2204, 8;
	mov.b64 	%rd3870, {%r2206, %r2205};
	shf.r.wrap.b32 	%r2207, %r2204, %r2203, 1;
	shf.r.wrap.b32 	%r2208, %r2203, %r2204, 1;
	mov.b64 	%rd3871, {%r2208, %r2207};
	xor.b64  	%rd3872, %rd3871, %rd3870;
	shr.u64 	%rd3873, %rd13624, 7;
	xor.b64  	%rd3874, %rd3872, %rd3873;
	add.s64 	%rd13625, %rd3869, %rd3874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2209,%dummy}, %rd3851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2210}, %rd3851;
	}
	shf.r.wrap.b32 	%r2211, %r2210, %r2209, 14;
	shf.r.wrap.b32 	%r2212, %r2209, %r2210, 14;
	mov.b64 	%rd3875, {%r2212, %r2211};
	shf.r.wrap.b32 	%r2213, %r2210, %r2209, 18;
	shf.r.wrap.b32 	%r2214, %r2209, %r2210, 18;
	mov.b64 	%rd3876, {%r2214, %r2213};
	xor.b64  	%rd3877, %rd3875, %rd3876;
	shf.l.wrap.b32 	%r2215, %r2209, %r2210, 23;
	shf.l.wrap.b32 	%r2216, %r2210, %r2209, 23;
	mov.b64 	%rd3878, {%r2216, %r2215};
	xor.b64  	%rd3879, %rd3877, %rd3878;
	xor.b64  	%rd3880, %rd3814, %rd13632;
	and.b64  	%rd3881, %rd3851, %rd3880;
	xor.b64  	%rd3882, %rd3881, %rd13632;
	add.s64 	%rd3883, %rd3882, %rd13633;
	add.s64 	%rd3884, %rd3883, %rd3879;
	ld.const.u64 	%rd3885, [%rd3800+16];
	add.s64 	%rd3886, %rd3884, %rd3885;
	add.s64 	%rd3887, %rd3886, %rd13625;
	add.s64 	%rd3888, %rd3887, %rd13629;
	and.b64  	%rd3889, %rd3862, %rd3825;
	or.b64  	%rd3890, %rd3862, %rd3825;
	and.b64  	%rd3891, %rd3890, %rd13628;
	or.b64  	%rd3892, %rd3891, %rd3889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2217,%dummy}, %rd3862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2218}, %rd3862;
	}
	shf.r.wrap.b32 	%r2219, %r2218, %r2217, 28;
	shf.r.wrap.b32 	%r2220, %r2217, %r2218, 28;
	mov.b64 	%rd3893, {%r2220, %r2219};
	shf.l.wrap.b32 	%r2221, %r2217, %r2218, 30;
	shf.l.wrap.b32 	%r2222, %r2218, %r2217, 30;
	mov.b64 	%rd3894, {%r2222, %r2221};
	xor.b64  	%rd3895, %rd3893, %rd3894;
	shf.l.wrap.b32 	%r2223, %r2217, %r2218, 25;
	shf.l.wrap.b32 	%r2224, %r2218, %r2217, 25;
	mov.b64 	%rd3896, {%r2224, %r2223};
	xor.b64  	%rd3897, %rd3895, %rd3896;
	add.s64 	%rd3898, %rd3897, %rd3892;
	add.s64 	%rd3899, %rd3898, %rd3887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2225,%dummy}, %rd13626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2226}, %rd13626;
	}
	shf.r.wrap.b32 	%r2227, %r2226, %r2225, 19;
	shf.r.wrap.b32 	%r2228, %r2225, %r2226, 19;
	mov.b64 	%rd3900, {%r2228, %r2227};
	shf.l.wrap.b32 	%r2229, %r2225, %r2226, 3;
	shf.l.wrap.b32 	%r2230, %r2226, %r2225, 3;
	mov.b64 	%rd3901, {%r2230, %r2229};
	xor.b64  	%rd3902, %rd3900, %rd3901;
	shr.u64 	%rd3903, %rd13626, 6;
	xor.b64  	%rd3904, %rd3902, %rd3903;
	add.s64 	%rd3905, %rd13615, %rd13624;
	add.s64 	%rd3906, %rd3905, %rd3904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2231,%dummy}, %rd13623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2232}, %rd13623;
	}
	shf.r.wrap.b32 	%r2233, %r2232, %r2231, 8;
	shf.r.wrap.b32 	%r2234, %r2231, %r2232, 8;
	mov.b64 	%rd3907, {%r2234, %r2233};
	shf.r.wrap.b32 	%r2235, %r2232, %r2231, 1;
	shf.r.wrap.b32 	%r2236, %r2231, %r2232, 1;
	mov.b64 	%rd3908, {%r2236, %r2235};
	xor.b64  	%rd3909, %rd3908, %rd3907;
	shr.u64 	%rd3910, %rd13623, 7;
	xor.b64  	%rd3911, %rd3909, %rd3910;
	add.s64 	%rd13624, %rd3906, %rd3911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd3888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd3888;
	}
	shf.r.wrap.b32 	%r2239, %r2238, %r2237, 14;
	shf.r.wrap.b32 	%r2240, %r2237, %r2238, 14;
	mov.b64 	%rd3912, {%r2240, %r2239};
	shf.r.wrap.b32 	%r2241, %r2238, %r2237, 18;
	shf.r.wrap.b32 	%r2242, %r2237, %r2238, 18;
	mov.b64 	%rd3913, {%r2242, %r2241};
	xor.b64  	%rd3914, %rd3912, %rd3913;
	shf.l.wrap.b32 	%r2243, %r2237, %r2238, 23;
	shf.l.wrap.b32 	%r2244, %r2238, %r2237, 23;
	mov.b64 	%rd3915, {%r2244, %r2243};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	xor.b64  	%rd3917, %rd3851, %rd3814;
	and.b64  	%rd3918, %rd3888, %rd3917;
	xor.b64  	%rd3919, %rd3918, %rd3814;
	add.s64 	%rd3920, %rd3919, %rd13632;
	add.s64 	%rd3921, %rd3920, %rd3916;
	ld.const.u64 	%rd3922, [%rd3800+24];
	add.s64 	%rd3923, %rd3921, %rd3922;
	add.s64 	%rd3924, %rd3923, %rd13624;
	add.s64 	%rd3925, %rd3924, %rd13628;
	and.b64  	%rd3926, %rd3899, %rd3862;
	or.b64  	%rd3927, %rd3899, %rd3862;
	and.b64  	%rd3928, %rd3927, %rd3825;
	or.b64  	%rd3929, %rd3928, %rd3926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd3899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd3899;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3930, {%r2248, %r2247};
	shf.l.wrap.b32 	%r2249, %r2245, %r2246, 30;
	shf.l.wrap.b32 	%r2250, %r2246, %r2245, 30;
	mov.b64 	%rd3931, {%r2250, %r2249};
	xor.b64  	%rd3932, %rd3930, %rd3931;
	shf.l.wrap.b32 	%r2251, %r2245, %r2246, 25;
	shf.l.wrap.b32 	%r2252, %r2246, %r2245, 25;
	mov.b64 	%rd3933, {%r2252, %r2251};
	xor.b64  	%rd3934, %rd3932, %rd3933;
	add.s64 	%rd3935, %rd3934, %rd3929;
	add.s64 	%rd3936, %rd3935, %rd3924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd13625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd13625;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 19;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 19;
	mov.b64 	%rd3937, {%r2256, %r2255};
	shf.l.wrap.b32 	%r2257, %r2253, %r2254, 3;
	shf.l.wrap.b32 	%r2258, %r2254, %r2253, 3;
	mov.b64 	%rd3938, {%r2258, %r2257};
	xor.b64  	%rd3939, %rd3937, %rd3938;
	shr.u64 	%rd3940, %rd13625, 6;
	xor.b64  	%rd3941, %rd3939, %rd3940;
	add.s64 	%rd3942, %rd13614, %rd13623;
	add.s64 	%rd3943, %rd3942, %rd3941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2259,%dummy}, %rd13622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2260}, %rd13622;
	}
	shf.r.wrap.b32 	%r2261, %r2260, %r2259, 8;
	shf.r.wrap.b32 	%r2262, %r2259, %r2260, 8;
	mov.b64 	%rd3944, {%r2262, %r2261};
	shf.r.wrap.b32 	%r2263, %r2260, %r2259, 1;
	shf.r.wrap.b32 	%r2264, %r2259, %r2260, 1;
	mov.b64 	%rd3945, {%r2264, %r2263};
	xor.b64  	%rd3946, %rd3945, %rd3944;
	shr.u64 	%rd3947, %rd13622, 7;
	xor.b64  	%rd3948, %rd3946, %rd3947;
	add.s64 	%rd13623, %rd3943, %rd3948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2265,%dummy}, %rd3925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2266}, %rd3925;
	}
	shf.r.wrap.b32 	%r2267, %r2266, %r2265, 14;
	shf.r.wrap.b32 	%r2268, %r2265, %r2266, 14;
	mov.b64 	%rd3949, {%r2268, %r2267};
	shf.r.wrap.b32 	%r2269, %r2266, %r2265, 18;
	shf.r.wrap.b32 	%r2270, %r2265, %r2266, 18;
	mov.b64 	%rd3950, {%r2270, %r2269};
	xor.b64  	%rd3951, %rd3949, %rd3950;
	shf.l.wrap.b32 	%r2271, %r2265, %r2266, 23;
	shf.l.wrap.b32 	%r2272, %r2266, %r2265, 23;
	mov.b64 	%rd3952, {%r2272, %r2271};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	xor.b64  	%rd3954, %rd3888, %rd3851;
	and.b64  	%rd3955, %rd3925, %rd3954;
	xor.b64  	%rd3956, %rd3955, %rd3851;
	add.s64 	%rd3957, %rd3956, %rd3814;
	add.s64 	%rd3958, %rd3957, %rd3953;
	ld.const.u64 	%rd3959, [%rd3800+32];
	add.s64 	%rd3960, %rd3958, %rd3959;
	add.s64 	%rd3961, %rd3960, %rd13623;
	add.s64 	%rd3962, %rd3961, %rd3825;
	and.b64  	%rd3963, %rd3936, %rd3899;
	or.b64  	%rd3964, %rd3936, %rd3899;
	and.b64  	%rd3965, %rd3964, %rd3862;
	or.b64  	%rd3966, %rd3965, %rd3963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2273,%dummy}, %rd3936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2274}, %rd3936;
	}
	shf.r.wrap.b32 	%r2275, %r2274, %r2273, 28;
	shf.r.wrap.b32 	%r2276, %r2273, %r2274, 28;
	mov.b64 	%rd3967, {%r2276, %r2275};
	shf.l.wrap.b32 	%r2277, %r2273, %r2274, 30;
	shf.l.wrap.b32 	%r2278, %r2274, %r2273, 30;
	mov.b64 	%rd3968, {%r2278, %r2277};
	xor.b64  	%rd3969, %rd3967, %rd3968;
	shf.l.wrap.b32 	%r2279, %r2273, %r2274, 25;
	shf.l.wrap.b32 	%r2280, %r2274, %r2273, 25;
	mov.b64 	%rd3970, {%r2280, %r2279};
	xor.b64  	%rd3971, %rd3969, %rd3970;
	add.s64 	%rd3972, %rd3971, %rd3966;
	add.s64 	%rd3973, %rd3972, %rd3961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2281,%dummy}, %rd13624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2282}, %rd13624;
	}
	shf.r.wrap.b32 	%r2283, %r2282, %r2281, 19;
	shf.r.wrap.b32 	%r2284, %r2281, %r2282, 19;
	mov.b64 	%rd3974, {%r2284, %r2283};
	shf.l.wrap.b32 	%r2285, %r2281, %r2282, 3;
	shf.l.wrap.b32 	%r2286, %r2282, %r2281, 3;
	mov.b64 	%rd3975, {%r2286, %r2285};
	xor.b64  	%rd3976, %rd3974, %rd3975;
	shr.u64 	%rd3977, %rd13624, 6;
	xor.b64  	%rd3978, %rd3976, %rd3977;
	add.s64 	%rd3979, %rd13613, %rd13622;
	add.s64 	%rd3980, %rd3979, %rd3978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2287,%dummy}, %rd13621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2288}, %rd13621;
	}
	shf.r.wrap.b32 	%r2289, %r2288, %r2287, 8;
	shf.r.wrap.b32 	%r2290, %r2287, %r2288, 8;
	mov.b64 	%rd3981, {%r2290, %r2289};
	shf.r.wrap.b32 	%r2291, %r2288, %r2287, 1;
	shf.r.wrap.b32 	%r2292, %r2287, %r2288, 1;
	mov.b64 	%rd3982, {%r2292, %r2291};
	xor.b64  	%rd3983, %rd3982, %rd3981;
	shr.u64 	%rd3984, %rd13621, 7;
	xor.b64  	%rd3985, %rd3983, %rd3984;
	add.s64 	%rd13622, %rd3980, %rd3985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd3962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd3962;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 14;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 14;
	mov.b64 	%rd3986, {%r2296, %r2295};
	shf.r.wrap.b32 	%r2297, %r2294, %r2293, 18;
	shf.r.wrap.b32 	%r2298, %r2293, %r2294, 18;
	mov.b64 	%rd3987, {%r2298, %r2297};
	xor.b64  	%rd3988, %rd3986, %rd3987;
	shf.l.wrap.b32 	%r2299, %r2293, %r2294, 23;
	shf.l.wrap.b32 	%r2300, %r2294, %r2293, 23;
	mov.b64 	%rd3989, {%r2300, %r2299};
	xor.b64  	%rd3990, %rd3988, %rd3989;
	xor.b64  	%rd3991, %rd3925, %rd3888;
	and.b64  	%rd3992, %rd3962, %rd3991;
	xor.b64  	%rd3993, %rd3992, %rd3888;
	add.s64 	%rd3994, %rd3993, %rd3851;
	add.s64 	%rd3995, %rd3994, %rd3990;
	ld.const.u64 	%rd3996, [%rd3800+40];
	add.s64 	%rd3997, %rd3995, %rd3996;
	add.s64 	%rd3998, %rd3997, %rd13622;
	add.s64 	%rd3999, %rd3998, %rd3862;
	and.b64  	%rd4000, %rd3973, %rd3936;
	or.b64  	%rd4001, %rd3973, %rd3936;
	and.b64  	%rd4002, %rd4001, %rd3899;
	or.b64  	%rd4003, %rd4002, %rd4000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd3973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd3973;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 28;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 28;
	mov.b64 	%rd4004, {%r2304, %r2303};
	shf.l.wrap.b32 	%r2305, %r2301, %r2302, 30;
	shf.l.wrap.b32 	%r2306, %r2302, %r2301, 30;
	mov.b64 	%rd4005, {%r2306, %r2305};
	xor.b64  	%rd4006, %rd4004, %rd4005;
	shf.l.wrap.b32 	%r2307, %r2301, %r2302, 25;
	shf.l.wrap.b32 	%r2308, %r2302, %r2301, 25;
	mov.b64 	%rd4007, {%r2308, %r2307};
	xor.b64  	%rd4008, %rd4006, %rd4007;
	add.s64 	%rd4009, %rd4008, %rd4003;
	add.s64 	%rd4010, %rd4009, %rd3998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2309,%dummy}, %rd13623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2310}, %rd13623;
	}
	shf.r.wrap.b32 	%r2311, %r2310, %r2309, 19;
	shf.r.wrap.b32 	%r2312, %r2309, %r2310, 19;
	mov.b64 	%rd4011, {%r2312, %r2311};
	shf.l.wrap.b32 	%r2313, %r2309, %r2310, 3;
	shf.l.wrap.b32 	%r2314, %r2310, %r2309, 3;
	mov.b64 	%rd4012, {%r2314, %r2313};
	xor.b64  	%rd4013, %rd4011, %rd4012;
	shr.u64 	%rd4014, %rd13623, 6;
	xor.b64  	%rd4015, %rd4013, %rd4014;
	add.s64 	%rd4016, %rd13612, %rd13621;
	add.s64 	%rd4017, %rd4016, %rd4015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2315,%dummy}, %rd13620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2316}, %rd13620;
	}
	shf.r.wrap.b32 	%r2317, %r2316, %r2315, 8;
	shf.r.wrap.b32 	%r2318, %r2315, %r2316, 8;
	mov.b64 	%rd4018, {%r2318, %r2317};
	shf.r.wrap.b32 	%r2319, %r2316, %r2315, 1;
	shf.r.wrap.b32 	%r2320, %r2315, %r2316, 1;
	mov.b64 	%rd4019, {%r2320, %r2319};
	xor.b64  	%rd4020, %rd4019, %rd4018;
	shr.u64 	%rd4021, %rd13620, 7;
	xor.b64  	%rd4022, %rd4020, %rd4021;
	add.s64 	%rd13621, %rd4017, %rd4022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2321,%dummy}, %rd3999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2322}, %rd3999;
	}
	shf.r.wrap.b32 	%r2323, %r2322, %r2321, 14;
	shf.r.wrap.b32 	%r2324, %r2321, %r2322, 14;
	mov.b64 	%rd4023, {%r2324, %r2323};
	shf.r.wrap.b32 	%r2325, %r2322, %r2321, 18;
	shf.r.wrap.b32 	%r2326, %r2321, %r2322, 18;
	mov.b64 	%rd4024, {%r2326, %r2325};
	xor.b64  	%rd4025, %rd4023, %rd4024;
	shf.l.wrap.b32 	%r2327, %r2321, %r2322, 23;
	shf.l.wrap.b32 	%r2328, %r2322, %r2321, 23;
	mov.b64 	%rd4026, {%r2328, %r2327};
	xor.b64  	%rd4027, %rd4025, %rd4026;
	xor.b64  	%rd4028, %rd3962, %rd3925;
	and.b64  	%rd4029, %rd3999, %rd4028;
	xor.b64  	%rd4030, %rd4029, %rd3925;
	add.s64 	%rd4031, %rd4030, %rd3888;
	add.s64 	%rd4032, %rd4031, %rd4027;
	ld.const.u64 	%rd4033, [%rd3800+48];
	add.s64 	%rd4034, %rd4032, %rd4033;
	add.s64 	%rd4035, %rd4034, %rd13621;
	add.s64 	%rd4036, %rd4035, %rd3899;
	and.b64  	%rd4037, %rd4010, %rd3973;
	or.b64  	%rd4038, %rd4010, %rd3973;
	and.b64  	%rd4039, %rd4038, %rd3936;
	or.b64  	%rd4040, %rd4039, %rd4037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2329,%dummy}, %rd4010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2330}, %rd4010;
	}
	shf.r.wrap.b32 	%r2331, %r2330, %r2329, 28;
	shf.r.wrap.b32 	%r2332, %r2329, %r2330, 28;
	mov.b64 	%rd4041, {%r2332, %r2331};
	shf.l.wrap.b32 	%r2333, %r2329, %r2330, 30;
	shf.l.wrap.b32 	%r2334, %r2330, %r2329, 30;
	mov.b64 	%rd4042, {%r2334, %r2333};
	xor.b64  	%rd4043, %rd4041, %rd4042;
	shf.l.wrap.b32 	%r2335, %r2329, %r2330, 25;
	shf.l.wrap.b32 	%r2336, %r2330, %r2329, 25;
	mov.b64 	%rd4044, {%r2336, %r2335};
	xor.b64  	%rd4045, %rd4043, %rd4044;
	add.s64 	%rd4046, %rd4045, %rd4040;
	add.s64 	%rd4047, %rd4046, %rd4035;
	add.s64 	%rd4048, %rd13627, %rd13620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2337,%dummy}, %rd13622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2338}, %rd13622;
	}
	shf.r.wrap.b32 	%r2339, %r2338, %r2337, 19;
	shf.r.wrap.b32 	%r2340, %r2337, %r2338, 19;
	mov.b64 	%rd4049, {%r2340, %r2339};
	shf.l.wrap.b32 	%r2341, %r2337, %r2338, 3;
	shf.l.wrap.b32 	%r2342, %r2338, %r2337, 3;
	mov.b64 	%rd4050, {%r2342, %r2341};
	xor.b64  	%rd4051, %rd4049, %rd4050;
	shr.u64 	%rd4052, %rd13622, 6;
	xor.b64  	%rd4053, %rd4051, %rd4052;
	add.s64 	%rd4054, %rd4048, %rd4053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2343,%dummy}, %rd13619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2344}, %rd13619;
	}
	shf.r.wrap.b32 	%r2345, %r2344, %r2343, 8;
	shf.r.wrap.b32 	%r2346, %r2343, %r2344, 8;
	mov.b64 	%rd4055, {%r2346, %r2345};
	shf.r.wrap.b32 	%r2347, %r2344, %r2343, 1;
	shf.r.wrap.b32 	%r2348, %r2343, %r2344, 1;
	mov.b64 	%rd4056, {%r2348, %r2347};
	xor.b64  	%rd4057, %rd4056, %rd4055;
	shr.u64 	%rd4058, %rd13619, 7;
	xor.b64  	%rd4059, %rd4057, %rd4058;
	add.s64 	%rd13620, %rd4054, %rd4059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2349,%dummy}, %rd4036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2350}, %rd4036;
	}
	shf.r.wrap.b32 	%r2351, %r2350, %r2349, 14;
	shf.r.wrap.b32 	%r2352, %r2349, %r2350, 14;
	mov.b64 	%rd4060, {%r2352, %r2351};
	shf.r.wrap.b32 	%r2353, %r2350, %r2349, 18;
	shf.r.wrap.b32 	%r2354, %r2349, %r2350, 18;
	mov.b64 	%rd4061, {%r2354, %r2353};
	xor.b64  	%rd4062, %rd4060, %rd4061;
	shf.l.wrap.b32 	%r2355, %r2349, %r2350, 23;
	shf.l.wrap.b32 	%r2356, %r2350, %r2349, 23;
	mov.b64 	%rd4063, {%r2356, %r2355};
	xor.b64  	%rd4064, %rd4062, %rd4063;
	xor.b64  	%rd4065, %rd3999, %rd3962;
	and.b64  	%rd4066, %rd4036, %rd4065;
	xor.b64  	%rd4067, %rd4066, %rd3962;
	add.s64 	%rd4068, %rd4067, %rd3925;
	add.s64 	%rd4069, %rd4068, %rd4064;
	ld.const.u64 	%rd4070, [%rd3800+56];
	add.s64 	%rd4071, %rd4069, %rd4070;
	add.s64 	%rd4072, %rd4071, %rd13620;
	add.s64 	%rd4073, %rd4072, %rd3936;
	and.b64  	%rd4074, %rd4047, %rd4010;
	or.b64  	%rd4075, %rd4047, %rd4010;
	and.b64  	%rd4076, %rd4075, %rd3973;
	or.b64  	%rd4077, %rd4076, %rd4074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd4047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd4047;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 28;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 28;
	mov.b64 	%rd4078, {%r2360, %r2359};
	shf.l.wrap.b32 	%r2361, %r2357, %r2358, 30;
	shf.l.wrap.b32 	%r2362, %r2358, %r2357, 30;
	mov.b64 	%rd4079, {%r2362, %r2361};
	xor.b64  	%rd4080, %rd4078, %rd4079;
	shf.l.wrap.b32 	%r2363, %r2357, %r2358, 25;
	shf.l.wrap.b32 	%r2364, %r2358, %r2357, 25;
	mov.b64 	%rd4081, {%r2364, %r2363};
	xor.b64  	%rd4082, %rd4080, %rd4081;
	add.s64 	%rd4083, %rd4082, %rd4077;
	add.s64 	%rd4084, %rd4083, %rd4072;
	add.s64 	%rd4085, %rd13626, %rd13619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2365,%dummy}, %rd13621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2366}, %rd13621;
	}
	shf.r.wrap.b32 	%r2367, %r2366, %r2365, 19;
	shf.r.wrap.b32 	%r2368, %r2365, %r2366, 19;
	mov.b64 	%rd4086, {%r2368, %r2367};
	shf.l.wrap.b32 	%r2369, %r2365, %r2366, 3;
	shf.l.wrap.b32 	%r2370, %r2366, %r2365, 3;
	mov.b64 	%rd4087, {%r2370, %r2369};
	xor.b64  	%rd4088, %rd4086, %rd4087;
	shr.u64 	%rd4089, %rd13621, 6;
	xor.b64  	%rd4090, %rd4088, %rd4089;
	add.s64 	%rd4091, %rd4085, %rd4090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2371,%dummy}, %rd13618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2372}, %rd13618;
	}
	shf.r.wrap.b32 	%r2373, %r2372, %r2371, 8;
	shf.r.wrap.b32 	%r2374, %r2371, %r2372, 8;
	mov.b64 	%rd4092, {%r2374, %r2373};
	shf.r.wrap.b32 	%r2375, %r2372, %r2371, 1;
	shf.r.wrap.b32 	%r2376, %r2371, %r2372, 1;
	mov.b64 	%rd4093, {%r2376, %r2375};
	xor.b64  	%rd4094, %rd4093, %rd4092;
	shr.u64 	%rd4095, %rd13618, 7;
	xor.b64  	%rd4096, %rd4094, %rd4095;
	add.s64 	%rd13619, %rd4091, %rd4096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2377,%dummy}, %rd4073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2378}, %rd4073;
	}
	shf.r.wrap.b32 	%r2379, %r2378, %r2377, 14;
	shf.r.wrap.b32 	%r2380, %r2377, %r2378, 14;
	mov.b64 	%rd4097, {%r2380, %r2379};
	shf.r.wrap.b32 	%r2381, %r2378, %r2377, 18;
	shf.r.wrap.b32 	%r2382, %r2377, %r2378, 18;
	mov.b64 	%rd4098, {%r2382, %r2381};
	xor.b64  	%rd4099, %rd4097, %rd4098;
	shf.l.wrap.b32 	%r2383, %r2377, %r2378, 23;
	shf.l.wrap.b32 	%r2384, %r2378, %r2377, 23;
	mov.b64 	%rd4100, {%r2384, %r2383};
	xor.b64  	%rd4101, %rd4099, %rd4100;
	xor.b64  	%rd4102, %rd4036, %rd3999;
	and.b64  	%rd4103, %rd4073, %rd4102;
	xor.b64  	%rd4104, %rd4103, %rd3999;
	add.s64 	%rd4105, %rd4104, %rd3962;
	add.s64 	%rd4106, %rd4105, %rd4101;
	ld.const.u64 	%rd4107, [%rd3800+64];
	add.s64 	%rd4108, %rd4106, %rd4107;
	add.s64 	%rd4109, %rd4108, %rd13619;
	add.s64 	%rd4110, %rd4109, %rd3973;
	and.b64  	%rd4111, %rd4084, %rd4047;
	or.b64  	%rd4112, %rd4084, %rd4047;
	and.b64  	%rd4113, %rd4112, %rd4010;
	or.b64  	%rd4114, %rd4113, %rd4111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2385,%dummy}, %rd4084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2386}, %rd4084;
	}
	shf.r.wrap.b32 	%r2387, %r2386, %r2385, 28;
	shf.r.wrap.b32 	%r2388, %r2385, %r2386, 28;
	mov.b64 	%rd4115, {%r2388, %r2387};
	shf.l.wrap.b32 	%r2389, %r2385, %r2386, 30;
	shf.l.wrap.b32 	%r2390, %r2386, %r2385, 30;
	mov.b64 	%rd4116, {%r2390, %r2389};
	xor.b64  	%rd4117, %rd4115, %rd4116;
	shf.l.wrap.b32 	%r2391, %r2385, %r2386, 25;
	shf.l.wrap.b32 	%r2392, %r2386, %r2385, 25;
	mov.b64 	%rd4118, {%r2392, %r2391};
	xor.b64  	%rd4119, %rd4117, %rd4118;
	add.s64 	%rd4120, %rd4119, %rd4114;
	add.s64 	%rd4121, %rd4120, %rd4109;
	add.s64 	%rd4122, %rd13625, %rd13618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2393,%dummy}, %rd13620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2394}, %rd13620;
	}
	shf.r.wrap.b32 	%r2395, %r2394, %r2393, 19;
	shf.r.wrap.b32 	%r2396, %r2393, %r2394, 19;
	mov.b64 	%rd4123, {%r2396, %r2395};
	shf.l.wrap.b32 	%r2397, %r2393, %r2394, 3;
	shf.l.wrap.b32 	%r2398, %r2394, %r2393, 3;
	mov.b64 	%rd4124, {%r2398, %r2397};
	xor.b64  	%rd4125, %rd4123, %rd4124;
	shr.u64 	%rd4126, %rd13620, 6;
	xor.b64  	%rd4127, %rd4125, %rd4126;
	add.s64 	%rd4128, %rd4122, %rd4127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2399,%dummy}, %rd13617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2400}, %rd13617;
	}
	shf.r.wrap.b32 	%r2401, %r2400, %r2399, 8;
	shf.r.wrap.b32 	%r2402, %r2399, %r2400, 8;
	mov.b64 	%rd4129, {%r2402, %r2401};
	shf.r.wrap.b32 	%r2403, %r2400, %r2399, 1;
	shf.r.wrap.b32 	%r2404, %r2399, %r2400, 1;
	mov.b64 	%rd4130, {%r2404, %r2403};
	xor.b64  	%rd4131, %rd4130, %rd4129;
	shr.u64 	%rd4132, %rd13617, 7;
	xor.b64  	%rd4133, %rd4131, %rd4132;
	add.s64 	%rd13618, %rd4128, %rd4133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2405,%dummy}, %rd4110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2406}, %rd4110;
	}
	shf.r.wrap.b32 	%r2407, %r2406, %r2405, 14;
	shf.r.wrap.b32 	%r2408, %r2405, %r2406, 14;
	mov.b64 	%rd4134, {%r2408, %r2407};
	shf.r.wrap.b32 	%r2409, %r2406, %r2405, 18;
	shf.r.wrap.b32 	%r2410, %r2405, %r2406, 18;
	mov.b64 	%rd4135, {%r2410, %r2409};
	xor.b64  	%rd4136, %rd4134, %rd4135;
	shf.l.wrap.b32 	%r2411, %r2405, %r2406, 23;
	shf.l.wrap.b32 	%r2412, %r2406, %r2405, 23;
	mov.b64 	%rd4137, {%r2412, %r2411};
	xor.b64  	%rd4138, %rd4136, %rd4137;
	xor.b64  	%rd4139, %rd4073, %rd4036;
	and.b64  	%rd4140, %rd4110, %rd4139;
	xor.b64  	%rd4141, %rd4140, %rd4036;
	add.s64 	%rd4142, %rd4141, %rd3999;
	add.s64 	%rd4143, %rd4142, %rd4138;
	ld.const.u64 	%rd4144, [%rd3800+72];
	add.s64 	%rd4145, %rd4143, %rd4144;
	add.s64 	%rd4146, %rd4145, %rd13618;
	add.s64 	%rd4147, %rd4146, %rd4010;
	and.b64  	%rd4148, %rd4121, %rd4084;
	or.b64  	%rd4149, %rd4121, %rd4084;
	and.b64  	%rd4150, %rd4149, %rd4047;
	or.b64  	%rd4151, %rd4150, %rd4148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2413,%dummy}, %rd4121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2414}, %rd4121;
	}
	shf.r.wrap.b32 	%r2415, %r2414, %r2413, 28;
	shf.r.wrap.b32 	%r2416, %r2413, %r2414, 28;
	mov.b64 	%rd4152, {%r2416, %r2415};
	shf.l.wrap.b32 	%r2417, %r2413, %r2414, 30;
	shf.l.wrap.b32 	%r2418, %r2414, %r2413, 30;
	mov.b64 	%rd4153, {%r2418, %r2417};
	xor.b64  	%rd4154, %rd4152, %rd4153;
	shf.l.wrap.b32 	%r2419, %r2413, %r2414, 25;
	shf.l.wrap.b32 	%r2420, %r2414, %r2413, 25;
	mov.b64 	%rd4155, {%r2420, %r2419};
	xor.b64  	%rd4156, %rd4154, %rd4155;
	add.s64 	%rd4157, %rd4156, %rd4151;
	add.s64 	%rd4158, %rd4157, %rd4146;
	add.s64 	%rd4159, %rd13624, %rd13617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2421,%dummy}, %rd13619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2422}, %rd13619;
	}
	shf.r.wrap.b32 	%r2423, %r2422, %r2421, 19;
	shf.r.wrap.b32 	%r2424, %r2421, %r2422, 19;
	mov.b64 	%rd4160, {%r2424, %r2423};
	shf.l.wrap.b32 	%r2425, %r2421, %r2422, 3;
	shf.l.wrap.b32 	%r2426, %r2422, %r2421, 3;
	mov.b64 	%rd4161, {%r2426, %r2425};
	xor.b64  	%rd4162, %rd4160, %rd4161;
	shr.u64 	%rd4163, %rd13619, 6;
	xor.b64  	%rd4164, %rd4162, %rd4163;
	add.s64 	%rd4165, %rd4159, %rd4164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2427,%dummy}, %rd13616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2428}, %rd13616;
	}
	shf.r.wrap.b32 	%r2429, %r2428, %r2427, 8;
	shf.r.wrap.b32 	%r2430, %r2427, %r2428, 8;
	mov.b64 	%rd4166, {%r2430, %r2429};
	shf.r.wrap.b32 	%r2431, %r2428, %r2427, 1;
	shf.r.wrap.b32 	%r2432, %r2427, %r2428, 1;
	mov.b64 	%rd4167, {%r2432, %r2431};
	xor.b64  	%rd4168, %rd4167, %rd4166;
	shr.u64 	%rd4169, %rd13616, 7;
	xor.b64  	%rd4170, %rd4168, %rd4169;
	add.s64 	%rd13617, %rd4165, %rd4170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2433,%dummy}, %rd4147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2434}, %rd4147;
	}
	shf.r.wrap.b32 	%r2435, %r2434, %r2433, 14;
	shf.r.wrap.b32 	%r2436, %r2433, %r2434, 14;
	mov.b64 	%rd4171, {%r2436, %r2435};
	shf.r.wrap.b32 	%r2437, %r2434, %r2433, 18;
	shf.r.wrap.b32 	%r2438, %r2433, %r2434, 18;
	mov.b64 	%rd4172, {%r2438, %r2437};
	xor.b64  	%rd4173, %rd4171, %rd4172;
	shf.l.wrap.b32 	%r2439, %r2433, %r2434, 23;
	shf.l.wrap.b32 	%r2440, %r2434, %r2433, 23;
	mov.b64 	%rd4174, {%r2440, %r2439};
	xor.b64  	%rd4175, %rd4173, %rd4174;
	xor.b64  	%rd4176, %rd4110, %rd4073;
	and.b64  	%rd4177, %rd4147, %rd4176;
	xor.b64  	%rd4178, %rd4177, %rd4073;
	add.s64 	%rd4179, %rd4178, %rd4036;
	add.s64 	%rd4180, %rd4179, %rd4175;
	ld.const.u64 	%rd4181, [%rd3800+80];
	add.s64 	%rd4182, %rd4180, %rd4181;
	add.s64 	%rd4183, %rd4182, %rd13617;
	add.s64 	%rd4184, %rd4183, %rd4047;
	and.b64  	%rd4185, %rd4158, %rd4121;
	or.b64  	%rd4186, %rd4158, %rd4121;
	and.b64  	%rd4187, %rd4186, %rd4084;
	or.b64  	%rd4188, %rd4187, %rd4185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2441,%dummy}, %rd4158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2442}, %rd4158;
	}
	shf.r.wrap.b32 	%r2443, %r2442, %r2441, 28;
	shf.r.wrap.b32 	%r2444, %r2441, %r2442, 28;
	mov.b64 	%rd4189, {%r2444, %r2443};
	shf.l.wrap.b32 	%r2445, %r2441, %r2442, 30;
	shf.l.wrap.b32 	%r2446, %r2442, %r2441, 30;
	mov.b64 	%rd4190, {%r2446, %r2445};
	xor.b64  	%rd4191, %rd4189, %rd4190;
	shf.l.wrap.b32 	%r2447, %r2441, %r2442, 25;
	shf.l.wrap.b32 	%r2448, %r2442, %r2441, 25;
	mov.b64 	%rd4192, {%r2448, %r2447};
	xor.b64  	%rd4193, %rd4191, %rd4192;
	add.s64 	%rd4194, %rd4193, %rd4188;
	add.s64 	%rd4195, %rd4194, %rd4183;
	add.s64 	%rd4196, %rd13623, %rd13616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2449,%dummy}, %rd13618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2450}, %rd13618;
	}
	shf.r.wrap.b32 	%r2451, %r2450, %r2449, 19;
	shf.r.wrap.b32 	%r2452, %r2449, %r2450, 19;
	mov.b64 	%rd4197, {%r2452, %r2451};
	shf.l.wrap.b32 	%r2453, %r2449, %r2450, 3;
	shf.l.wrap.b32 	%r2454, %r2450, %r2449, 3;
	mov.b64 	%rd4198, {%r2454, %r2453};
	xor.b64  	%rd4199, %rd4197, %rd4198;
	shr.u64 	%rd4200, %rd13618, 6;
	xor.b64  	%rd4201, %rd4199, %rd4200;
	add.s64 	%rd4202, %rd4196, %rd4201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2455,%dummy}, %rd13615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2456}, %rd13615;
	}
	shf.r.wrap.b32 	%r2457, %r2456, %r2455, 8;
	shf.r.wrap.b32 	%r2458, %r2455, %r2456, 8;
	mov.b64 	%rd4203, {%r2458, %r2457};
	shf.r.wrap.b32 	%r2459, %r2456, %r2455, 1;
	shf.r.wrap.b32 	%r2460, %r2455, %r2456, 1;
	mov.b64 	%rd4204, {%r2460, %r2459};
	xor.b64  	%rd4205, %rd4204, %rd4203;
	shr.u64 	%rd4206, %rd13615, 7;
	xor.b64  	%rd4207, %rd4205, %rd4206;
	add.s64 	%rd13616, %rd4202, %rd4207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2461,%dummy}, %rd4184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2462}, %rd4184;
	}
	shf.r.wrap.b32 	%r2463, %r2462, %r2461, 14;
	shf.r.wrap.b32 	%r2464, %r2461, %r2462, 14;
	mov.b64 	%rd4208, {%r2464, %r2463};
	shf.r.wrap.b32 	%r2465, %r2462, %r2461, 18;
	shf.r.wrap.b32 	%r2466, %r2461, %r2462, 18;
	mov.b64 	%rd4209, {%r2466, %r2465};
	xor.b64  	%rd4210, %rd4208, %rd4209;
	shf.l.wrap.b32 	%r2467, %r2461, %r2462, 23;
	shf.l.wrap.b32 	%r2468, %r2462, %r2461, 23;
	mov.b64 	%rd4211, {%r2468, %r2467};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	xor.b64  	%rd4213, %rd4147, %rd4110;
	and.b64  	%rd4214, %rd4184, %rd4213;
	xor.b64  	%rd4215, %rd4214, %rd4110;
	add.s64 	%rd4216, %rd4215, %rd4073;
	add.s64 	%rd4217, %rd4216, %rd4212;
	ld.const.u64 	%rd4218, [%rd3800+88];
	add.s64 	%rd4219, %rd4217, %rd4218;
	add.s64 	%rd4220, %rd4219, %rd13616;
	add.s64 	%rd4221, %rd4220, %rd4084;
	and.b64  	%rd4222, %rd4195, %rd4158;
	or.b64  	%rd4223, %rd4195, %rd4158;
	and.b64  	%rd4224, %rd4223, %rd4121;
	or.b64  	%rd4225, %rd4224, %rd4222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2469,%dummy}, %rd4195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2470}, %rd4195;
	}
	shf.r.wrap.b32 	%r2471, %r2470, %r2469, 28;
	shf.r.wrap.b32 	%r2472, %r2469, %r2470, 28;
	mov.b64 	%rd4226, {%r2472, %r2471};
	shf.l.wrap.b32 	%r2473, %r2469, %r2470, 30;
	shf.l.wrap.b32 	%r2474, %r2470, %r2469, 30;
	mov.b64 	%rd4227, {%r2474, %r2473};
	xor.b64  	%rd4228, %rd4226, %rd4227;
	shf.l.wrap.b32 	%r2475, %r2469, %r2470, 25;
	shf.l.wrap.b32 	%r2476, %r2470, %r2469, 25;
	mov.b64 	%rd4229, {%r2476, %r2475};
	xor.b64  	%rd4230, %rd4228, %rd4229;
	add.s64 	%rd4231, %rd4230, %rd4225;
	add.s64 	%rd4232, %rd4231, %rd4220;
	add.s64 	%rd4233, %rd13622, %rd13615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd13617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2478}, %rd13617;
	}
	shf.r.wrap.b32 	%r2479, %r2478, %r2477, 19;
	shf.r.wrap.b32 	%r2480, %r2477, %r2478, 19;
	mov.b64 	%rd4234, {%r2480, %r2479};
	shf.l.wrap.b32 	%r2481, %r2477, %r2478, 3;
	shf.l.wrap.b32 	%r2482, %r2478, %r2477, 3;
	mov.b64 	%rd4235, {%r2482, %r2481};
	xor.b64  	%rd4236, %rd4234, %rd4235;
	shr.u64 	%rd4237, %rd13617, 6;
	xor.b64  	%rd4238, %rd4236, %rd4237;
	add.s64 	%rd4239, %rd4233, %rd4238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2483,%dummy}, %rd13614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd13614;
	}
	shf.r.wrap.b32 	%r2485, %r2484, %r2483, 8;
	shf.r.wrap.b32 	%r2486, %r2483, %r2484, 8;
	mov.b64 	%rd4240, {%r2486, %r2485};
	shf.r.wrap.b32 	%r2487, %r2484, %r2483, 1;
	shf.r.wrap.b32 	%r2488, %r2483, %r2484, 1;
	mov.b64 	%rd4241, {%r2488, %r2487};
	xor.b64  	%rd4242, %rd4241, %rd4240;
	shr.u64 	%rd4243, %rd13614, 7;
	xor.b64  	%rd4244, %rd4242, %rd4243;
	add.s64 	%rd13615, %rd4239, %rd4244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2489,%dummy}, %rd4221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2490}, %rd4221;
	}
	shf.r.wrap.b32 	%r2491, %r2490, %r2489, 14;
	shf.r.wrap.b32 	%r2492, %r2489, %r2490, 14;
	mov.b64 	%rd4245, {%r2492, %r2491};
	shf.r.wrap.b32 	%r2493, %r2490, %r2489, 18;
	shf.r.wrap.b32 	%r2494, %r2489, %r2490, 18;
	mov.b64 	%rd4246, {%r2494, %r2493};
	xor.b64  	%rd4247, %rd4245, %rd4246;
	shf.l.wrap.b32 	%r2495, %r2489, %r2490, 23;
	shf.l.wrap.b32 	%r2496, %r2490, %r2489, 23;
	mov.b64 	%rd4248, {%r2496, %r2495};
	xor.b64  	%rd4249, %rd4247, %rd4248;
	xor.b64  	%rd4250, %rd4184, %rd4147;
	and.b64  	%rd4251, %rd4221, %rd4250;
	xor.b64  	%rd4252, %rd4251, %rd4147;
	add.s64 	%rd4253, %rd4252, %rd4110;
	add.s64 	%rd4254, %rd4253, %rd4249;
	ld.const.u64 	%rd4255, [%rd3800+96];
	add.s64 	%rd4256, %rd4254, %rd4255;
	add.s64 	%rd4257, %rd4256, %rd13615;
	add.s64 	%rd13635, %rd4257, %rd4121;
	and.b64  	%rd4258, %rd4232, %rd4195;
	or.b64  	%rd4259, %rd4232, %rd4195;
	and.b64  	%rd4260, %rd4259, %rd4158;
	or.b64  	%rd4261, %rd4260, %rd4258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2497,%dummy}, %rd4232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2498}, %rd4232;
	}
	shf.r.wrap.b32 	%r2499, %r2498, %r2497, 28;
	shf.r.wrap.b32 	%r2500, %r2497, %r2498, 28;
	mov.b64 	%rd4262, {%r2500, %r2499};
	shf.l.wrap.b32 	%r2501, %r2497, %r2498, 30;
	shf.l.wrap.b32 	%r2502, %r2498, %r2497, 30;
	mov.b64 	%rd4263, {%r2502, %r2501};
	xor.b64  	%rd4264, %rd4262, %rd4263;
	shf.l.wrap.b32 	%r2503, %r2497, %r2498, 25;
	shf.l.wrap.b32 	%r2504, %r2498, %r2497, 25;
	mov.b64 	%rd4265, {%r2504, %r2503};
	xor.b64  	%rd4266, %rd4264, %rd4265;
	add.s64 	%rd4267, %rd4266, %rd4261;
	add.s64 	%rd13631, %rd4267, %rd4257;
	add.s64 	%rd4268, %rd13621, %rd13614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd13616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2506}, %rd13616;
	}
	shf.r.wrap.b32 	%r2507, %r2506, %r2505, 19;
	shf.r.wrap.b32 	%r2508, %r2505, %r2506, 19;
	mov.b64 	%rd4269, {%r2508, %r2507};
	shf.l.wrap.b32 	%r2509, %r2505, %r2506, 3;
	shf.l.wrap.b32 	%r2510, %r2506, %r2505, 3;
	mov.b64 	%rd4270, {%r2510, %r2509};
	xor.b64  	%rd4271, %rd4269, %rd4270;
	shr.u64 	%rd4272, %rd13616, 6;
	xor.b64  	%rd4273, %rd4271, %rd4272;
	add.s64 	%rd4274, %rd4268, %rd4273;
	shf.r.wrap.b32 	%r2511, %r2141, %r2142, 8;
	shf.r.wrap.b32 	%r2512, %r2142, %r2141, 8;
	mov.b64 	%rd4275, {%r2512, %r2511};
	shf.r.wrap.b32 	%r2513, %r2141, %r2142, 1;
	shf.r.wrap.b32 	%r2514, %r2142, %r2141, 1;
	mov.b64 	%rd4276, {%r2514, %r2513};
	xor.b64  	%rd4277, %rd4276, %rd4275;
	shr.u64 	%rd4278, %rd13613, 7;
	xor.b64  	%rd4279, %rd4277, %rd4278;
	add.s64 	%rd13614, %rd4274, %rd4279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2515,%dummy}, %rd13635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2516}, %rd13635;
	}
	shf.r.wrap.b32 	%r2517, %r2516, %r2515, 14;
	shf.r.wrap.b32 	%r2518, %r2515, %r2516, 14;
	mov.b64 	%rd4280, {%r2518, %r2517};
	shf.r.wrap.b32 	%r2519, %r2516, %r2515, 18;
	shf.r.wrap.b32 	%r2520, %r2515, %r2516, 18;
	mov.b64 	%rd4281, {%r2520, %r2519};
	xor.b64  	%rd4282, %rd4280, %rd4281;
	shf.l.wrap.b32 	%r2521, %r2515, %r2516, 23;
	shf.l.wrap.b32 	%r2522, %r2516, %r2515, 23;
	mov.b64 	%rd4283, {%r2522, %r2521};
	xor.b64  	%rd4284, %rd4282, %rd4283;
	xor.b64  	%rd4285, %rd4221, %rd4184;
	and.b64  	%rd4286, %rd13635, %rd4285;
	xor.b64  	%rd4287, %rd4286, %rd4184;
	add.s64 	%rd4288, %rd4287, %rd4147;
	add.s64 	%rd4289, %rd4288, %rd4284;
	ld.const.u64 	%rd4290, [%rd3800+104];
	add.s64 	%rd4291, %rd4289, %rd4290;
	add.s64 	%rd4292, %rd4291, %rd13614;
	add.s64 	%rd13634, %rd4292, %rd4158;
	and.b64  	%rd4293, %rd13631, %rd4232;
	or.b64  	%rd4294, %rd13631, %rd4232;
	and.b64  	%rd4295, %rd4294, %rd4195;
	or.b64  	%rd4296, %rd4295, %rd4293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2523,%dummy}, %rd13631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2524}, %rd13631;
	}
	shf.r.wrap.b32 	%r2525, %r2524, %r2523, 28;
	shf.r.wrap.b32 	%r2526, %r2523, %r2524, 28;
	mov.b64 	%rd4297, {%r2526, %r2525};
	shf.l.wrap.b32 	%r2527, %r2523, %r2524, 30;
	shf.l.wrap.b32 	%r2528, %r2524, %r2523, 30;
	mov.b64 	%rd4298, {%r2528, %r2527};
	xor.b64  	%rd4299, %rd4297, %rd4298;
	shf.l.wrap.b32 	%r2529, %r2523, %r2524, 25;
	shf.l.wrap.b32 	%r2530, %r2524, %r2523, 25;
	mov.b64 	%rd4300, {%r2530, %r2529};
	xor.b64  	%rd4301, %rd4299, %rd4300;
	add.s64 	%rd4302, %rd4301, %rd4296;
	add.s64 	%rd13630, %rd4302, %rd4292;
	add.s64 	%rd4303, %rd13620, %rd13613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2531,%dummy}, %rd13615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2532}, %rd13615;
	}
	shf.r.wrap.b32 	%r2533, %r2532, %r2531, 19;
	shf.r.wrap.b32 	%r2534, %r2531, %r2532, 19;
	mov.b64 	%rd4304, {%r2534, %r2533};
	shf.l.wrap.b32 	%r2535, %r2531, %r2532, 3;
	shf.l.wrap.b32 	%r2536, %r2532, %r2531, 3;
	mov.b64 	%rd4305, {%r2536, %r2535};
	xor.b64  	%rd4306, %rd4304, %rd4305;
	shr.u64 	%rd4307, %rd13615, 6;
	xor.b64  	%rd4308, %rd4306, %rd4307;
	add.s64 	%rd4309, %rd4303, %rd4308;
	shf.r.wrap.b32 	%r2537, %r2169, %r2170, 8;
	shf.r.wrap.b32 	%r2538, %r2170, %r2169, 8;
	mov.b64 	%rd4310, {%r2538, %r2537};
	shf.r.wrap.b32 	%r2539, %r2169, %r2170, 1;
	shf.r.wrap.b32 	%r2540, %r2170, %r2169, 1;
	mov.b64 	%rd4311, {%r2540, %r2539};
	xor.b64  	%rd4312, %rd4311, %rd4310;
	shr.u64 	%rd4313, %rd13612, 7;
	xor.b64  	%rd4314, %rd4312, %rd4313;
	add.s64 	%rd13613, %rd4309, %rd4314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2541,%dummy}, %rd13634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2542}, %rd13634;
	}
	shf.r.wrap.b32 	%r2543, %r2542, %r2541, 14;
	shf.r.wrap.b32 	%r2544, %r2541, %r2542, 14;
	mov.b64 	%rd4315, {%r2544, %r2543};
	shf.r.wrap.b32 	%r2545, %r2542, %r2541, 18;
	shf.r.wrap.b32 	%r2546, %r2541, %r2542, 18;
	mov.b64 	%rd4316, {%r2546, %r2545};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	shf.l.wrap.b32 	%r2547, %r2541, %r2542, 23;
	shf.l.wrap.b32 	%r2548, %r2542, %r2541, 23;
	mov.b64 	%rd4318, {%r2548, %r2547};
	xor.b64  	%rd4319, %rd4317, %rd4318;
	xor.b64  	%rd4320, %rd13635, %rd4221;
	and.b64  	%rd4321, %rd13634, %rd4320;
	xor.b64  	%rd4322, %rd4321, %rd4221;
	add.s64 	%rd4323, %rd4322, %rd4184;
	add.s64 	%rd4324, %rd4323, %rd4319;
	ld.const.u64 	%rd4325, [%rd3800+112];
	add.s64 	%rd4326, %rd4324, %rd4325;
	add.s64 	%rd4327, %rd4326, %rd13613;
	add.s64 	%rd13633, %rd4327, %rd4195;
	and.b64  	%rd4328, %rd13630, %rd13631;
	or.b64  	%rd4329, %rd13630, %rd13631;
	and.b64  	%rd4330, %rd4329, %rd4232;
	or.b64  	%rd4331, %rd4330, %rd4328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2549,%dummy}, %rd13630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2550}, %rd13630;
	}
	shf.r.wrap.b32 	%r2551, %r2550, %r2549, 28;
	shf.r.wrap.b32 	%r2552, %r2549, %r2550, 28;
	mov.b64 	%rd4332, {%r2552, %r2551};
	shf.l.wrap.b32 	%r2553, %r2549, %r2550, 30;
	shf.l.wrap.b32 	%r2554, %r2550, %r2549, 30;
	mov.b64 	%rd4333, {%r2554, %r2553};
	xor.b64  	%rd4334, %rd4332, %rd4333;
	shf.l.wrap.b32 	%r2555, %r2549, %r2550, 25;
	shf.l.wrap.b32 	%r2556, %r2550, %r2549, 25;
	mov.b64 	%rd4335, {%r2556, %r2555};
	xor.b64  	%rd4336, %rd4334, %rd4335;
	add.s64 	%rd4337, %rd4336, %rd4331;
	add.s64 	%rd13629, %rd4337, %rd4327;
	add.s64 	%rd4338, %rd13619, %rd13612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2557,%dummy}, %rd13614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2558}, %rd13614;
	}
	shf.r.wrap.b32 	%r2559, %r2558, %r2557, 19;
	shf.r.wrap.b32 	%r2560, %r2557, %r2558, 19;
	mov.b64 	%rd4339, {%r2560, %r2559};
	shf.l.wrap.b32 	%r2561, %r2557, %r2558, 3;
	shf.l.wrap.b32 	%r2562, %r2558, %r2557, 3;
	mov.b64 	%rd4340, {%r2562, %r2561};
	xor.b64  	%rd4341, %rd4339, %rd4340;
	shr.u64 	%rd4342, %rd13614, 6;
	xor.b64  	%rd4343, %rd4341, %rd4342;
	add.s64 	%rd4344, %rd4338, %rd4343;
	shf.r.wrap.b32 	%r2563, %r2198, %r2197, 1;
	shf.r.wrap.b32 	%r2564, %r2197, %r2198, 1;
	mov.b64 	%rd4345, {%r2564, %r2563};
	shf.r.wrap.b32 	%r2565, %r2198, %r2197, 8;
	shf.r.wrap.b32 	%r2566, %r2197, %r2198, 8;
	mov.b64 	%rd4346, {%r2566, %r2565};
	xor.b64  	%rd4347, %rd4345, %rd4346;
	shr.u64 	%rd4348, %rd13627, 7;
	xor.b64  	%rd4349, %rd4347, %rd4348;
	add.s64 	%rd13612, %rd4344, %rd4349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2567,%dummy}, %rd13633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2568}, %rd13633;
	}
	shf.r.wrap.b32 	%r2569, %r2568, %r2567, 14;
	shf.r.wrap.b32 	%r2570, %r2567, %r2568, 14;
	mov.b64 	%rd4350, {%r2570, %r2569};
	shf.r.wrap.b32 	%r2571, %r2568, %r2567, 18;
	shf.r.wrap.b32 	%r2572, %r2567, %r2568, 18;
	mov.b64 	%rd4351, {%r2572, %r2571};
	xor.b64  	%rd4352, %rd4350, %rd4351;
	shf.l.wrap.b32 	%r2573, %r2567, %r2568, 23;
	shf.l.wrap.b32 	%r2574, %r2568, %r2567, 23;
	mov.b64 	%rd4353, {%r2574, %r2573};
	xor.b64  	%rd4354, %rd4352, %rd4353;
	xor.b64  	%rd4355, %rd13634, %rd13635;
	and.b64  	%rd4356, %rd13633, %rd4355;
	xor.b64  	%rd4357, %rd4356, %rd13635;
	add.s64 	%rd4358, %rd4357, %rd4221;
	add.s64 	%rd4359, %rd4358, %rd4354;
	ld.const.u64 	%rd4360, [%rd3800+120];
	add.s64 	%rd4361, %rd4359, %rd4360;
	add.s64 	%rd4362, %rd4361, %rd13612;
	add.s64 	%rd13632, %rd4362, %rd4232;
	and.b64  	%rd4363, %rd13629, %rd13630;
	or.b64  	%rd4364, %rd13629, %rd13630;
	and.b64  	%rd4365, %rd4364, %rd13631;
	or.b64  	%rd4366, %rd4365, %rd4363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2575,%dummy}, %rd13629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2576}, %rd13629;
	}
	shf.r.wrap.b32 	%r2577, %r2576, %r2575, 28;
	shf.r.wrap.b32 	%r2578, %r2575, %r2576, 28;
	mov.b64 	%rd4367, {%r2578, %r2577};
	shf.l.wrap.b32 	%r2579, %r2575, %r2576, 30;
	shf.l.wrap.b32 	%r2580, %r2576, %r2575, 30;
	mov.b64 	%rd4368, {%r2580, %r2579};
	xor.b64  	%rd4369, %rd4367, %rd4368;
	shf.l.wrap.b32 	%r2581, %r2575, %r2576, 25;
	shf.l.wrap.b32 	%r2582, %r2576, %r2575, 25;
	mov.b64 	%rd4370, {%r2582, %r2581};
	xor.b64  	%rd4371, %rd4369, %rd4370;
	add.s64 	%rd4372, %rd4371, %rd4366;
	add.s64 	%rd13628, %rd4372, %rd4362;
	add.s32 	%r9721, %r9721, 16;
	setp.lt.u32 	%p50, %r9721, 80;
	@%p50 bra 	$L__BB0_69;

	add.s64 	%rd13668, %rd13668, %rd13628;
	add.s64 	%rd13667, %rd13667, %rd13629;
	st.local.u64 	[%rd2+-64], %rd13667;
	add.s64 	%rd13666, %rd13666, %rd13630;
	st.local.u64 	[%rd2+-56], %rd13666;
	add.s64 	%rd13665, %rd13665, %rd13631;
	st.local.u64 	[%rd2+-48], %rd13665;
	add.s64 	%rd13664, %rd13664, %rd13632;
	st.local.u64 	[%rd2+-40], %rd13664;
	add.s64 	%rd13663, %rd13663, %rd13633;
	st.local.u64 	[%rd2+-32], %rd13663;
	add.s64 	%rd13662, %rd13662, %rd13634;
	st.local.u64 	[%rd2+-24], %rd13662;
	add.s64 	%rd13661, %rd13661, %rd13635;
	st.local.u64 	[%rd2+-16], %rd13661;
	mov.u32 	%r2583, 64;
	sub.s32 	%r9730, %r2583, %r56;
	st.local.u32 	[%rd2+-4], %r9730;
	setp.eq.s32 	%p51, %r9730, 0;
	@%p51 bra 	$L__BB0_73;

	cvt.u64.u32 	%rd326, %r56;
	mov.u32 	%r9722, 0;

$L__BB0_72:
	cvt.u64.u32 	%rd4373, %r9722;
	add.s64 	%rd4374, %rd4373, %rd326;
	add.s64 	%rd4375, %rd212, %rd4374;
	ld.local.u8 	%rs1, [%rd4375];
	add.s64 	%rd4376, %rd2, %rd4373;
	st.local.u8 	[%rd4376], %rs1;
	add.s32 	%r9722, %r9722, 1;
	setp.lt.u32 	%p52, %r9722, %r9730;
	@%p52 bra 	$L__BB0_72;

$L__BB0_73:
	and.b32  	%r2585, %r9730, 7;
	shr.u32 	%r2586, %r9730, 3;
	shl.b32 	%r2587, %r2586, 3;
	cvt.u64.u32 	%rd4377, %r2587;
	add.s64 	%rd4378, %rd1, %rd4377;
	shl.b32 	%r2588, %r9730, 3;
	cvt.u64.u32 	%rd4379, %r2588;
	and.b64  	%rd4380, %rd4379, 56;
	add.s64 	%rd4382, %rd1255, %rd4380;
	ld.const.u64 	%rd4383, [%rd4382];
	ld.local.u64 	%rd4384, [%rd4378+72];
	and.b64  	%rd4385, %rd4383, %rd4384;
	st.local.u64 	[%rd4378+72], %rd4385;
	setp.ne.s32 	%p53, %r2585, 0;
	selp.u32 	%r2589, 1, 0, %p53;
	add.s32 	%r9723, %r2586, %r2589;
	setp.gt.u32 	%p54, %r9723, 15;
	@%p54 bra 	$L__BB0_90;

$L__BB0_74:
	mul.wide.u32 	%rd4386, %r9723, 8;
	add.s64 	%rd4387, %rd1, %rd4386;
	mov.u64 	%rd4388, 0;
	st.local.u64 	[%rd4387+72], %rd4388;
	add.s32 	%r9723, %r9723, 1;
	setp.lt.u32 	%p55, %r9723, 16;
	@%p55 bra 	$L__BB0_74;

$L__BB0_90:
	shr.u32 	%r9716, %r9716, 1;
	setp.ne.s32 	%p69, %r9716, 0;
	@%p69 bra 	$L__BB0_57;

	st.local.u64 	[%rd2+-72], %rd13668;

$L__BB0_92:
	and.b32  	%r3370, %r9730, -8;
	cvt.u64.u32 	%rd5401, %r3370;
	add.s64 	%rd5402, %rd1, %rd5401;
	add.s64 	%rd430, %rd5402, 72;
	setp.lt.u32 	%p70, %r9730, 112;
	@%p70 bra 	$L__BB0_100;
	bra.uni 	$L__BB0_93;

$L__BB0_100:
	shl.b32 	%r4140, %r9730, 3;
	and.b32  	%r4141, %r4140, 56;
	mov.u64 	%rd6414, 128;
	shl.b64 	%rd6415, %rd6414, %r4141;
	ld.local.u64 	%rd6416, [%rd430];
	or.b64  	%rd6417, %rd6416, %rd6415;
	st.local.u64 	[%rd430], %rd6417;
	shl.b32 	%r4142, %r9715, 3;
	cvt.u64.u32 	%rd6418, %r9715;
	shl.b64 	%rd6419, %rd6418, 59;
	shl.b64 	%rd6420, %rd6418, 43;
	and.b64  	%rd6421, %rd6420, 71776119061217280;
	or.b64  	%rd6422, %rd6421, %rd6419;
	cvt.u64.u32 	%rd6423, %r4142;
	shl.b64 	%rd6424, %rd6423, 24;
	and.b64  	%rd6425, %rd6424, 280375465082880;
	or.b64  	%rd6426, %rd6422, %rd6425;
	shl.b64 	%rd6427, %rd6423, 8;
	and.b64  	%rd6428, %rd6427, 1095216660480;
	or.b64  	%rd6429, %rd6426, %rd6428;
	st.local.u64 	[%rd2+120], %rd6429;
	mov.u32 	%r4143, 0;
	st.local.u32 	[%rd2+-4], %r4143;
	ld.local.u64 	%rd13716, [%rd2];
	ld.local.u64 	%rd13715, [%rd2+8];
	ld.local.u64 	%rd13714, [%rd2+16];
	ld.local.u64 	%rd13713, [%rd2+24];
	ld.local.u64 	%rd13712, [%rd2+32];
	ld.local.u64 	%rd13711, [%rd2+40];
	ld.local.u64 	%rd13710, [%rd2+48];
	ld.local.u64 	%rd13709, [%rd2+56];
	ld.local.u64 	%rd13708, [%rd2+64];
	ld.local.u64 	%rd13707, [%rd2+72];
	ld.local.u64 	%rd13706, [%rd2+80];
	ld.local.u64 	%rd13705, [%rd2+88];
	ld.local.u64 	%rd13704, [%rd2+96];
	ld.local.u64 	%rd13703, [%rd2+104];
	ld.local.u64 	%rd13702, [%rd2+112];
	bra.uni 	$L__BB0_101;

$L__BB0_93:
	setp.gt.u32 	%p71, %r9730, 127;
	@%p71 bra 	$L__BB0_95;

	shl.b32 	%r3371, %r9730, 3;
	and.b32  	%r3372, %r3371, 56;
	mov.u64 	%rd5403, 128;
	shl.b64 	%rd5404, %rd5403, %r3372;
	ld.local.u64 	%rd5405, [%rd430];
	or.b64  	%rd5406, %rd5404, %rd5405;
	st.local.u64 	[%rd430], %rd5406;

$L__BB0_95:
	ld.local.u64 	%rd5407, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3374, %temp}, %rd5407;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3375}, %rd5407;
	}
	mov.u32 	%r3376, 291;
	mov.u32 	%r3377, 0;
	prmt.b32 	%r3378, %r3374, %r3377, %r3376;
	prmt.b32 	%r3379, %r3375, %r3377, %r3376;
	mov.b64 	%rd13692, {%r3379, %r3378};
	ld.local.u64 	%rd5408, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3380, %temp}, %rd5408;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3381}, %rd5408;
	}
	prmt.b32 	%r3382, %r3380, %r3377, %r3376;
	prmt.b32 	%r3383, %r3381, %r3377, %r3376;
	mov.b64 	%rd13691, {%r3383, %r3382};
	ld.local.u64 	%rd5409, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3384, %temp}, %rd5409;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3385}, %rd5409;
	}
	prmt.b32 	%r3386, %r3384, %r3377, %r3376;
	prmt.b32 	%r3387, %r3385, %r3377, %r3376;
	mov.b64 	%rd13690, {%r3387, %r3386};
	ld.local.u64 	%rd5410, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3388, %temp}, %rd5410;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3389}, %rd5410;
	}
	prmt.b32 	%r3390, %r3388, %r3377, %r3376;
	prmt.b32 	%r3391, %r3389, %r3377, %r3376;
	mov.b64 	%rd13689, {%r3391, %r3390};
	ld.local.u64 	%rd5411, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3392, %temp}, %rd5411;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3393}, %rd5411;
	}
	prmt.b32 	%r3394, %r3392, %r3377, %r3376;
	prmt.b32 	%r3395, %r3393, %r3377, %r3376;
	mov.b64 	%rd13688, {%r3395, %r3394};
	ld.local.u64 	%rd5412, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3396, %temp}, %rd5412;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3397}, %rd5412;
	}
	prmt.b32 	%r3398, %r3396, %r3377, %r3376;
	prmt.b32 	%r3399, %r3397, %r3377, %r3376;
	mov.b64 	%rd13687, {%r3399, %r3398};
	ld.local.u64 	%rd5413, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3400, %temp}, %rd5413;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3401}, %rd5413;
	}
	prmt.b32 	%r3402, %r3400, %r3377, %r3376;
	prmt.b32 	%r3403, %r3401, %r3377, %r3376;
	mov.b64 	%rd13686, {%r3403, %r3402};
	ld.local.u64 	%rd5414, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3404, %temp}, %rd5414;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3405}, %rd5414;
	}
	prmt.b32 	%r3406, %r3404, %r3377, %r3376;
	prmt.b32 	%r3407, %r3405, %r3377, %r3376;
	mov.b64 	%rd13685, {%r3407, %r3406};
	ld.local.u64 	%rd5415, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3408, %temp}, %rd5415;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3409}, %rd5415;
	}
	prmt.b32 	%r3410, %r3408, %r3377, %r3376;
	prmt.b32 	%r3411, %r3409, %r3377, %r3376;
	mov.b64 	%rd13684, {%r3411, %r3410};
	ld.local.u64 	%rd5416, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3412, %temp}, %rd5416;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3413}, %rd5416;
	}
	prmt.b32 	%r3414, %r3412, %r3377, %r3376;
	prmt.b32 	%r3415, %r3413, %r3377, %r3376;
	mov.b64 	%rd13683, {%r3415, %r3414};
	ld.local.u64 	%rd5417, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3416, %temp}, %rd5417;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3417}, %rd5417;
	}
	prmt.b32 	%r3418, %r3416, %r3377, %r3376;
	prmt.b32 	%r3419, %r3417, %r3377, %r3376;
	mov.b64 	%rd13682, {%r3419, %r3418};
	ld.local.u64 	%rd5418, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3420, %temp}, %rd5418;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3421}, %rd5418;
	}
	prmt.b32 	%r3422, %r3420, %r3377, %r3376;
	prmt.b32 	%r3423, %r3421, %r3377, %r3376;
	mov.b64 	%rd13681, {%r3423, %r3422};
	ld.local.u64 	%rd5419, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3424, %temp}, %rd5419;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3425}, %rd5419;
	}
	prmt.b32 	%r3426, %r3424, %r3377, %r3376;
	prmt.b32 	%r3427, %r3425, %r3377, %r3376;
	mov.b64 	%rd13680, {%r3427, %r3426};
	ld.local.u64 	%rd5420, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3428, %temp}, %rd5420;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3429}, %rd5420;
	}
	prmt.b32 	%r3430, %r3428, %r3377, %r3376;
	prmt.b32 	%r3431, %r3429, %r3377, %r3376;
	mov.b64 	%rd13679, {%r3431, %r3430};
	ld.local.u64 	%rd5421, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3432, %temp}, %rd5421;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3433}, %rd5421;
	}
	prmt.b32 	%r3434, %r3432, %r3377, %r3376;
	prmt.b32 	%r3435, %r3433, %r3377, %r3376;
	mov.b64 	%rd13678, {%r3435, %r3434};
	ld.local.u64 	%rd5422, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3436, %temp}, %rd5422;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3437}, %rd5422;
	}
	prmt.b32 	%r3438, %r3436, %r3377, %r3376;
	prmt.b32 	%r3439, %r3437, %r3377, %r3376;
	mov.b64 	%rd13677, {%r3439, %r3438};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3440,%dummy}, %rd13664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3441}, %rd13664;
	}
	shf.r.wrap.b32 	%r3442, %r3441, %r3440, 18;
	shf.r.wrap.b32 	%r3443, %r3440, %r3441, 18;
	mov.b64 	%rd5423, {%r3443, %r3442};
	shf.r.wrap.b32 	%r3444, %r3441, %r3440, 14;
	shf.r.wrap.b32 	%r3445, %r3440, %r3441, 14;
	mov.b64 	%rd5424, {%r3445, %r3444};
	xor.b64  	%rd5425, %rd5424, %rd5423;
	shf.l.wrap.b32 	%r3446, %r3440, %r3441, 23;
	shf.l.wrap.b32 	%r3447, %r3441, %r3440, 23;
	mov.b64 	%rd5426, {%r3447, %r3446};
	xor.b64  	%rd5427, %rd5425, %rd5426;
	xor.b64  	%rd5428, %rd13663, %rd13662;
	and.b64  	%rd5429, %rd13664, %rd5428;
	xor.b64  	%rd5430, %rd5429, %rd13662;
	add.s64 	%rd5431, %rd5430, %rd13661;
	add.s64 	%rd5432, %rd5431, %rd5427;
	add.s64 	%rd5433, %rd5432, %rd13692;
	add.s64 	%rd5434, %rd5433, 4794697086780616226;
	add.s64 	%rd5435, %rd5434, %rd13665;
	or.b64  	%rd5436, %rd13668, %rd13667;
	and.b64  	%rd5437, %rd5436, %rd13666;
	and.b64  	%rd5438, %rd13668, %rd13667;
	or.b64  	%rd5439, %rd5437, %rd5438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3448}, %rd13668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3449,%dummy}, %rd13668;
	}
	shf.l.wrap.b32 	%r3450, %r3449, %r3448, 30;
	shf.l.wrap.b32 	%r3451, %r3448, %r3449, 30;
	mov.b64 	%rd5440, {%r3451, %r3450};
	shf.r.wrap.b32 	%r3452, %r3448, %r3449, 28;
	shf.r.wrap.b32 	%r3453, %r3449, %r3448, 28;
	mov.b64 	%rd5441, {%r3453, %r3452};
	xor.b64  	%rd5442, %rd5441, %rd5440;
	shf.l.wrap.b32 	%r3454, %r3449, %r3448, 25;
	shf.l.wrap.b32 	%r3455, %r3448, %r3449, 25;
	mov.b64 	%rd5443, {%r3455, %r3454};
	xor.b64  	%rd5444, %rd5442, %rd5443;
	add.s64 	%rd5445, %rd5444, %rd5439;
	add.s64 	%rd5446, %rd5445, %rd5434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd5435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd5435;
	}
	shf.r.wrap.b32 	%r3458, %r3457, %r3456, 14;
	shf.r.wrap.b32 	%r3459, %r3456, %r3457, 14;
	mov.b64 	%rd5447, {%r3459, %r3458};
	shf.r.wrap.b32 	%r3460, %r3457, %r3456, 18;
	shf.r.wrap.b32 	%r3461, %r3456, %r3457, 18;
	mov.b64 	%rd5448, {%r3461, %r3460};
	xor.b64  	%rd5449, %rd5447, %rd5448;
	shf.l.wrap.b32 	%r3462, %r3456, %r3457, 23;
	shf.l.wrap.b32 	%r3463, %r3457, %r3456, 23;
	mov.b64 	%rd5450, {%r3463, %r3462};
	xor.b64  	%rd5451, %rd5449, %rd5450;
	xor.b64  	%rd5452, %rd13664, %rd13663;
	and.b64  	%rd5453, %rd5435, %rd5452;
	xor.b64  	%rd5454, %rd5453, %rd13663;
	add.s64 	%rd5455, %rd5454, %rd13662;
	add.s64 	%rd5456, %rd5455, %rd5451;
	add.s64 	%rd5457, %rd5456, %rd13691;
	add.s64 	%rd5458, %rd5457, 8158064640168781261;
	add.s64 	%rd5459, %rd5458, %rd13666;
	and.b64  	%rd5460, %rd5446, %rd13668;
	or.b64  	%rd5461, %rd5446, %rd13668;
	and.b64  	%rd5462, %rd5461, %rd13667;
	or.b64  	%rd5463, %rd5462, %rd5460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3464,%dummy}, %rd5446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3465}, %rd5446;
	}
	shf.r.wrap.b32 	%r3466, %r3465, %r3464, 28;
	shf.r.wrap.b32 	%r3467, %r3464, %r3465, 28;
	mov.b64 	%rd5464, {%r3467, %r3466};
	shf.l.wrap.b32 	%r3468, %r3464, %r3465, 30;
	shf.l.wrap.b32 	%r3469, %r3465, %r3464, 30;
	mov.b64 	%rd5465, {%r3469, %r3468};
	xor.b64  	%rd5466, %rd5464, %rd5465;
	shf.l.wrap.b32 	%r3470, %r3464, %r3465, 25;
	shf.l.wrap.b32 	%r3471, %r3465, %r3464, 25;
	mov.b64 	%rd5467, {%r3471, %r3470};
	xor.b64  	%rd5468, %rd5466, %rd5467;
	add.s64 	%rd5469, %rd5468, %rd5463;
	add.s64 	%rd5470, %rd5469, %rd5458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3472,%dummy}, %rd5459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3473}, %rd5459;
	}
	shf.r.wrap.b32 	%r3474, %r3473, %r3472, 14;
	shf.r.wrap.b32 	%r3475, %r3472, %r3473, 14;
	mov.b64 	%rd5471, {%r3475, %r3474};
	shf.r.wrap.b32 	%r3476, %r3473, %r3472, 18;
	shf.r.wrap.b32 	%r3477, %r3472, %r3473, 18;
	mov.b64 	%rd5472, {%r3477, %r3476};
	xor.b64  	%rd5473, %rd5471, %rd5472;
	shf.l.wrap.b32 	%r3478, %r3472, %r3473, 23;
	shf.l.wrap.b32 	%r3479, %r3473, %r3472, 23;
	mov.b64 	%rd5474, {%r3479, %r3478};
	xor.b64  	%rd5475, %rd5473, %rd5474;
	xor.b64  	%rd5476, %rd5435, %rd13664;
	and.b64  	%rd5477, %rd5459, %rd5476;
	xor.b64  	%rd5478, %rd5477, %rd13664;
	add.s64 	%rd5479, %rd5478, %rd13663;
	add.s64 	%rd5480, %rd5479, %rd5475;
	add.s64 	%rd5481, %rd5480, %rd13690;
	add.s64 	%rd5482, %rd5481, -5349999486874862801;
	add.s64 	%rd5483, %rd5482, %rd13667;
	and.b64  	%rd5484, %rd5470, %rd5446;
	or.b64  	%rd5485, %rd5470, %rd5446;
	and.b64  	%rd5486, %rd5485, %rd13668;
	or.b64  	%rd5487, %rd5486, %rd5484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3480,%dummy}, %rd5470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3481}, %rd5470;
	}
	shf.r.wrap.b32 	%r3482, %r3481, %r3480, 28;
	shf.r.wrap.b32 	%r3483, %r3480, %r3481, 28;
	mov.b64 	%rd5488, {%r3483, %r3482};
	shf.l.wrap.b32 	%r3484, %r3480, %r3481, 30;
	shf.l.wrap.b32 	%r3485, %r3481, %r3480, 30;
	mov.b64 	%rd5489, {%r3485, %r3484};
	xor.b64  	%rd5490, %rd5488, %rd5489;
	shf.l.wrap.b32 	%r3486, %r3480, %r3481, 25;
	shf.l.wrap.b32 	%r3487, %r3481, %r3480, 25;
	mov.b64 	%rd5491, {%r3487, %r3486};
	xor.b64  	%rd5492, %rd5490, %rd5491;
	add.s64 	%rd5493, %rd5492, %rd5487;
	add.s64 	%rd5494, %rd5493, %rd5482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3488,%dummy}, %rd5483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3489}, %rd5483;
	}
	shf.r.wrap.b32 	%r3490, %r3489, %r3488, 14;
	shf.r.wrap.b32 	%r3491, %r3488, %r3489, 14;
	mov.b64 	%rd5495, {%r3491, %r3490};
	shf.r.wrap.b32 	%r3492, %r3489, %r3488, 18;
	shf.r.wrap.b32 	%r3493, %r3488, %r3489, 18;
	mov.b64 	%rd5496, {%r3493, %r3492};
	xor.b64  	%rd5497, %rd5495, %rd5496;
	shf.l.wrap.b32 	%r3494, %r3488, %r3489, 23;
	shf.l.wrap.b32 	%r3495, %r3489, %r3488, 23;
	mov.b64 	%rd5498, {%r3495, %r3494};
	xor.b64  	%rd5499, %rd5497, %rd5498;
	xor.b64  	%rd5500, %rd5459, %rd5435;
	and.b64  	%rd5501, %rd5483, %rd5500;
	xor.b64  	%rd5502, %rd5501, %rd5435;
	add.s64 	%rd5503, %rd5502, %rd13664;
	add.s64 	%rd5504, %rd5503, %rd5499;
	add.s64 	%rd5505, %rd5504, %rd13689;
	add.s64 	%rd5506, %rd5505, -1606136188198331460;
	add.s64 	%rd5507, %rd5506, %rd13668;
	and.b64  	%rd5508, %rd5494, %rd5470;
	or.b64  	%rd5509, %rd5494, %rd5470;
	and.b64  	%rd5510, %rd5509, %rd5446;
	or.b64  	%rd5511, %rd5510, %rd5508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3496,%dummy}, %rd5494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd5494;
	}
	shf.r.wrap.b32 	%r3498, %r3497, %r3496, 28;
	shf.r.wrap.b32 	%r3499, %r3496, %r3497, 28;
	mov.b64 	%rd5512, {%r3499, %r3498};
	shf.l.wrap.b32 	%r3500, %r3496, %r3497, 30;
	shf.l.wrap.b32 	%r3501, %r3497, %r3496, 30;
	mov.b64 	%rd5513, {%r3501, %r3500};
	xor.b64  	%rd5514, %rd5512, %rd5513;
	shf.l.wrap.b32 	%r3502, %r3496, %r3497, 25;
	shf.l.wrap.b32 	%r3503, %r3497, %r3496, 25;
	mov.b64 	%rd5515, {%r3503, %r3502};
	xor.b64  	%rd5516, %rd5514, %rd5515;
	add.s64 	%rd5517, %rd5516, %rd5511;
	add.s64 	%rd5518, %rd5517, %rd5506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3504,%dummy}, %rd5507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3505}, %rd5507;
	}
	shf.r.wrap.b32 	%r3506, %r3505, %r3504, 14;
	shf.r.wrap.b32 	%r3507, %r3504, %r3505, 14;
	mov.b64 	%rd5519, {%r3507, %r3506};
	shf.r.wrap.b32 	%r3508, %r3505, %r3504, 18;
	shf.r.wrap.b32 	%r3509, %r3504, %r3505, 18;
	mov.b64 	%rd5520, {%r3509, %r3508};
	xor.b64  	%rd5521, %rd5519, %rd5520;
	shf.l.wrap.b32 	%r3510, %r3504, %r3505, 23;
	shf.l.wrap.b32 	%r3511, %r3505, %r3504, 23;
	mov.b64 	%rd5522, {%r3511, %r3510};
	xor.b64  	%rd5523, %rd5521, %rd5522;
	xor.b64  	%rd5524, %rd5483, %rd5459;
	and.b64  	%rd5525, %rd5507, %rd5524;
	xor.b64  	%rd5526, %rd5525, %rd5459;
	add.s64 	%rd5527, %rd5526, %rd5435;
	add.s64 	%rd5528, %rd5527, %rd5523;
	add.s64 	%rd5529, %rd5528, %rd13688;
	add.s64 	%rd5530, %rd5529, 4131703408338449720;
	add.s64 	%rd5531, %rd5530, %rd5446;
	and.b64  	%rd5532, %rd5518, %rd5494;
	or.b64  	%rd5533, %rd5518, %rd5494;
	and.b64  	%rd5534, %rd5533, %rd5470;
	or.b64  	%rd5535, %rd5534, %rd5532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3512,%dummy}, %rd5518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd5518;
	}
	shf.r.wrap.b32 	%r3514, %r3513, %r3512, 28;
	shf.r.wrap.b32 	%r3515, %r3512, %r3513, 28;
	mov.b64 	%rd5536, {%r3515, %r3514};
	shf.l.wrap.b32 	%r3516, %r3512, %r3513, 30;
	shf.l.wrap.b32 	%r3517, %r3513, %r3512, 30;
	mov.b64 	%rd5537, {%r3517, %r3516};
	xor.b64  	%rd5538, %rd5536, %rd5537;
	shf.l.wrap.b32 	%r3518, %r3512, %r3513, 25;
	shf.l.wrap.b32 	%r3519, %r3513, %r3512, 25;
	mov.b64 	%rd5539, {%r3519, %r3518};
	xor.b64  	%rd5540, %rd5538, %rd5539;
	add.s64 	%rd5541, %rd5540, %rd5535;
	add.s64 	%rd5542, %rd5541, %rd5530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3520,%dummy}, %rd5531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3521}, %rd5531;
	}
	shf.r.wrap.b32 	%r3522, %r3521, %r3520, 14;
	shf.r.wrap.b32 	%r3523, %r3520, %r3521, 14;
	mov.b64 	%rd5543, {%r3523, %r3522};
	shf.r.wrap.b32 	%r3524, %r3521, %r3520, 18;
	shf.r.wrap.b32 	%r3525, %r3520, %r3521, 18;
	mov.b64 	%rd5544, {%r3525, %r3524};
	xor.b64  	%rd5545, %rd5543, %rd5544;
	shf.l.wrap.b32 	%r3526, %r3520, %r3521, 23;
	shf.l.wrap.b32 	%r3527, %r3521, %r3520, 23;
	mov.b64 	%rd5546, {%r3527, %r3526};
	xor.b64  	%rd5547, %rd5545, %rd5546;
	xor.b64  	%rd5548, %rd5507, %rd5483;
	and.b64  	%rd5549, %rd5531, %rd5548;
	xor.b64  	%rd5550, %rd5549, %rd5483;
	add.s64 	%rd5551, %rd5550, %rd5459;
	add.s64 	%rd5552, %rd5551, %rd5547;
	add.s64 	%rd5553, %rd5552, %rd13687;
	add.s64 	%rd5554, %rd5553, 6480981068601479193;
	add.s64 	%rd5555, %rd5554, %rd5470;
	and.b64  	%rd5556, %rd5542, %rd5518;
	or.b64  	%rd5557, %rd5542, %rd5518;
	and.b64  	%rd5558, %rd5557, %rd5494;
	or.b64  	%rd5559, %rd5558, %rd5556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3528,%dummy}, %rd5542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3529}, %rd5542;
	}
	shf.r.wrap.b32 	%r3530, %r3529, %r3528, 28;
	shf.r.wrap.b32 	%r3531, %r3528, %r3529, 28;
	mov.b64 	%rd5560, {%r3531, %r3530};
	shf.l.wrap.b32 	%r3532, %r3528, %r3529, 30;
	shf.l.wrap.b32 	%r3533, %r3529, %r3528, 30;
	mov.b64 	%rd5561, {%r3533, %r3532};
	xor.b64  	%rd5562, %rd5560, %rd5561;
	shf.l.wrap.b32 	%r3534, %r3528, %r3529, 25;
	shf.l.wrap.b32 	%r3535, %r3529, %r3528, 25;
	mov.b64 	%rd5563, {%r3535, %r3534};
	xor.b64  	%rd5564, %rd5562, %rd5563;
	add.s64 	%rd5565, %rd5564, %rd5559;
	add.s64 	%rd5566, %rd5565, %rd5554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3536,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3537}, %rd5555;
	}
	shf.r.wrap.b32 	%r3538, %r3537, %r3536, 14;
	shf.r.wrap.b32 	%r3539, %r3536, %r3537, 14;
	mov.b64 	%rd5567, {%r3539, %r3538};
	shf.r.wrap.b32 	%r3540, %r3537, %r3536, 18;
	shf.r.wrap.b32 	%r3541, %r3536, %r3537, 18;
	mov.b64 	%rd5568, {%r3541, %r3540};
	xor.b64  	%rd5569, %rd5567, %rd5568;
	shf.l.wrap.b32 	%r3542, %r3536, %r3537, 23;
	shf.l.wrap.b32 	%r3543, %r3537, %r3536, 23;
	mov.b64 	%rd5570, {%r3543, %r3542};
	xor.b64  	%rd5571, %rd5569, %rd5570;
	xor.b64  	%rd5572, %rd5531, %rd5507;
	and.b64  	%rd5573, %rd5555, %rd5572;
	xor.b64  	%rd5574, %rd5573, %rd5507;
	add.s64 	%rd5575, %rd5574, %rd5483;
	add.s64 	%rd5576, %rd5575, %rd5571;
	add.s64 	%rd5577, %rd5576, %rd13686;
	add.s64 	%rd5578, %rd5577, -7908458776815382629;
	add.s64 	%rd5579, %rd5578, %rd5494;
	and.b64  	%rd5580, %rd5566, %rd5542;
	or.b64  	%rd5581, %rd5566, %rd5542;
	and.b64  	%rd5582, %rd5581, %rd5518;
	or.b64  	%rd5583, %rd5582, %rd5580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3544,%dummy}, %rd5566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3545}, %rd5566;
	}
	shf.r.wrap.b32 	%r3546, %r3545, %r3544, 28;
	shf.r.wrap.b32 	%r3547, %r3544, %r3545, 28;
	mov.b64 	%rd5584, {%r3547, %r3546};
	shf.l.wrap.b32 	%r3548, %r3544, %r3545, 30;
	shf.l.wrap.b32 	%r3549, %r3545, %r3544, 30;
	mov.b64 	%rd5585, {%r3549, %r3548};
	xor.b64  	%rd5586, %rd5584, %rd5585;
	shf.l.wrap.b32 	%r3550, %r3544, %r3545, 25;
	shf.l.wrap.b32 	%r3551, %r3545, %r3544, 25;
	mov.b64 	%rd5587, {%r3551, %r3550};
	xor.b64  	%rd5588, %rd5586, %rd5587;
	add.s64 	%rd5589, %rd5588, %rd5583;
	add.s64 	%rd5590, %rd5589, %rd5578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3552,%dummy}, %rd5579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd5579;
	}
	shf.r.wrap.b32 	%r3554, %r3553, %r3552, 14;
	shf.r.wrap.b32 	%r3555, %r3552, %r3553, 14;
	mov.b64 	%rd5591, {%r3555, %r3554};
	shf.r.wrap.b32 	%r3556, %r3553, %r3552, 18;
	shf.r.wrap.b32 	%r3557, %r3552, %r3553, 18;
	mov.b64 	%rd5592, {%r3557, %r3556};
	xor.b64  	%rd5593, %rd5591, %rd5592;
	shf.l.wrap.b32 	%r3558, %r3552, %r3553, 23;
	shf.l.wrap.b32 	%r3559, %r3553, %r3552, 23;
	mov.b64 	%rd5594, {%r3559, %r3558};
	xor.b64  	%rd5595, %rd5593, %rd5594;
	xor.b64  	%rd5596, %rd5555, %rd5531;
	and.b64  	%rd5597, %rd5579, %rd5596;
	xor.b64  	%rd5598, %rd5597, %rd5531;
	add.s64 	%rd5599, %rd5598, %rd5507;
	add.s64 	%rd5600, %rd5599, %rd5595;
	add.s64 	%rd5601, %rd5600, %rd13685;
	add.s64 	%rd5602, %rd5601, -6116909921290321640;
	add.s64 	%rd5603, %rd5602, %rd5518;
	and.b64  	%rd5604, %rd5590, %rd5566;
	or.b64  	%rd5605, %rd5590, %rd5566;
	and.b64  	%rd5606, %rd5605, %rd5542;
	or.b64  	%rd5607, %rd5606, %rd5604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3560,%dummy}, %rd5590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd5590;
	}
	shf.r.wrap.b32 	%r3562, %r3561, %r3560, 28;
	shf.r.wrap.b32 	%r3563, %r3560, %r3561, 28;
	mov.b64 	%rd5608, {%r3563, %r3562};
	shf.l.wrap.b32 	%r3564, %r3560, %r3561, 30;
	shf.l.wrap.b32 	%r3565, %r3561, %r3560, 30;
	mov.b64 	%rd5609, {%r3565, %r3564};
	xor.b64  	%rd5610, %rd5608, %rd5609;
	shf.l.wrap.b32 	%r3566, %r3560, %r3561, 25;
	shf.l.wrap.b32 	%r3567, %r3561, %r3560, 25;
	mov.b64 	%rd5611, {%r3567, %r3566};
	xor.b64  	%rd5612, %rd5610, %rd5611;
	add.s64 	%rd5613, %rd5612, %rd5607;
	add.s64 	%rd5614, %rd5613, %rd5602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3568,%dummy}, %rd5603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd5603;
	}
	shf.r.wrap.b32 	%r3570, %r3569, %r3568, 14;
	shf.r.wrap.b32 	%r3571, %r3568, %r3569, 14;
	mov.b64 	%rd5615, {%r3571, %r3570};
	shf.r.wrap.b32 	%r3572, %r3569, %r3568, 18;
	shf.r.wrap.b32 	%r3573, %r3568, %r3569, 18;
	mov.b64 	%rd5616, {%r3573, %r3572};
	xor.b64  	%rd5617, %rd5615, %rd5616;
	shf.l.wrap.b32 	%r3574, %r3568, %r3569, 23;
	shf.l.wrap.b32 	%r3575, %r3569, %r3568, 23;
	mov.b64 	%rd5618, {%r3575, %r3574};
	xor.b64  	%rd5619, %rd5617, %rd5618;
	xor.b64  	%rd5620, %rd5579, %rd5555;
	and.b64  	%rd5621, %rd5603, %rd5620;
	xor.b64  	%rd5622, %rd5621, %rd5555;
	add.s64 	%rd5623, %rd5622, %rd5531;
	add.s64 	%rd5624, %rd5623, %rd5619;
	add.s64 	%rd5625, %rd5624, %rd13684;
	add.s64 	%rd5626, %rd5625, -2880145864133508542;
	add.s64 	%rd5627, %rd5626, %rd5542;
	and.b64  	%rd5628, %rd5614, %rd5590;
	or.b64  	%rd5629, %rd5614, %rd5590;
	and.b64  	%rd5630, %rd5629, %rd5566;
	or.b64  	%rd5631, %rd5630, %rd5628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3576,%dummy}, %rd5614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3577}, %rd5614;
	}
	shf.r.wrap.b32 	%r3578, %r3577, %r3576, 28;
	shf.r.wrap.b32 	%r3579, %r3576, %r3577, 28;
	mov.b64 	%rd5632, {%r3579, %r3578};
	shf.l.wrap.b32 	%r3580, %r3576, %r3577, 30;
	shf.l.wrap.b32 	%r3581, %r3577, %r3576, 30;
	mov.b64 	%rd5633, {%r3581, %r3580};
	xor.b64  	%rd5634, %rd5632, %rd5633;
	shf.l.wrap.b32 	%r3582, %r3576, %r3577, 25;
	shf.l.wrap.b32 	%r3583, %r3577, %r3576, 25;
	mov.b64 	%rd5635, {%r3583, %r3582};
	xor.b64  	%rd5636, %rd5634, %rd5635;
	add.s64 	%rd5637, %rd5636, %rd5631;
	add.s64 	%rd5638, %rd5637, %rd5626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3584,%dummy}, %rd5627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3585}, %rd5627;
	}
	shf.r.wrap.b32 	%r3586, %r3585, %r3584, 14;
	shf.r.wrap.b32 	%r3587, %r3584, %r3585, 14;
	mov.b64 	%rd5639, {%r3587, %r3586};
	shf.r.wrap.b32 	%r3588, %r3585, %r3584, 18;
	shf.r.wrap.b32 	%r3589, %r3584, %r3585, 18;
	mov.b64 	%rd5640, {%r3589, %r3588};
	xor.b64  	%rd5641, %rd5639, %rd5640;
	shf.l.wrap.b32 	%r3590, %r3584, %r3585, 23;
	shf.l.wrap.b32 	%r3591, %r3585, %r3584, 23;
	mov.b64 	%rd5642, {%r3591, %r3590};
	xor.b64  	%rd5643, %rd5641, %rd5642;
	xor.b64  	%rd5644, %rd5603, %rd5579;
	and.b64  	%rd5645, %rd5627, %rd5644;
	xor.b64  	%rd5646, %rd5645, %rd5579;
	add.s64 	%rd5647, %rd5646, %rd5555;
	add.s64 	%rd5648, %rd5647, %rd5643;
	add.s64 	%rd5649, %rd5648, %rd13683;
	add.s64 	%rd5650, %rd5649, 1334009975649890238;
	add.s64 	%rd5651, %rd5650, %rd5566;
	and.b64  	%rd5652, %rd5638, %rd5614;
	or.b64  	%rd5653, %rd5638, %rd5614;
	and.b64  	%rd5654, %rd5653, %rd5590;
	or.b64  	%rd5655, %rd5654, %rd5652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3592,%dummy}, %rd5638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3593}, %rd5638;
	}
	shf.r.wrap.b32 	%r3594, %r3593, %r3592, 28;
	shf.r.wrap.b32 	%r3595, %r3592, %r3593, 28;
	mov.b64 	%rd5656, {%r3595, %r3594};
	shf.l.wrap.b32 	%r3596, %r3592, %r3593, 30;
	shf.l.wrap.b32 	%r3597, %r3593, %r3592, 30;
	mov.b64 	%rd5657, {%r3597, %r3596};
	xor.b64  	%rd5658, %rd5656, %rd5657;
	shf.l.wrap.b32 	%r3598, %r3592, %r3593, 25;
	shf.l.wrap.b32 	%r3599, %r3593, %r3592, 25;
	mov.b64 	%rd5659, {%r3599, %r3598};
	xor.b64  	%rd5660, %rd5658, %rd5659;
	add.s64 	%rd5661, %rd5660, %rd5655;
	add.s64 	%rd5662, %rd5661, %rd5650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3600,%dummy}, %rd5651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3601}, %rd5651;
	}
	shf.r.wrap.b32 	%r3602, %r3601, %r3600, 14;
	shf.r.wrap.b32 	%r3603, %r3600, %r3601, 14;
	mov.b64 	%rd5663, {%r3603, %r3602};
	shf.r.wrap.b32 	%r3604, %r3601, %r3600, 18;
	shf.r.wrap.b32 	%r3605, %r3600, %r3601, 18;
	mov.b64 	%rd5664, {%r3605, %r3604};
	xor.b64  	%rd5665, %rd5663, %rd5664;
	shf.l.wrap.b32 	%r3606, %r3600, %r3601, 23;
	shf.l.wrap.b32 	%r3607, %r3601, %r3600, 23;
	mov.b64 	%rd5666, {%r3607, %r3606};
	xor.b64  	%rd5667, %rd5665, %rd5666;
	xor.b64  	%rd5668, %rd5627, %rd5603;
	and.b64  	%rd5669, %rd5651, %rd5668;
	xor.b64  	%rd5670, %rd5669, %rd5603;
	add.s64 	%rd5671, %rd5670, %rd5579;
	add.s64 	%rd5672, %rd5671, %rd5667;
	add.s64 	%rd5673, %rd5672, %rd13682;
	add.s64 	%rd5674, %rd5673, 2608012711638119052;
	add.s64 	%rd5675, %rd5674, %rd5590;
	and.b64  	%rd5676, %rd5662, %rd5638;
	or.b64  	%rd5677, %rd5662, %rd5638;
	and.b64  	%rd5678, %rd5677, %rd5614;
	or.b64  	%rd5679, %rd5678, %rd5676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3608,%dummy}, %rd5662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3609}, %rd5662;
	}
	shf.r.wrap.b32 	%r3610, %r3609, %r3608, 28;
	shf.r.wrap.b32 	%r3611, %r3608, %r3609, 28;
	mov.b64 	%rd5680, {%r3611, %r3610};
	shf.l.wrap.b32 	%r3612, %r3608, %r3609, 30;
	shf.l.wrap.b32 	%r3613, %r3609, %r3608, 30;
	mov.b64 	%rd5681, {%r3613, %r3612};
	xor.b64  	%rd5682, %rd5680, %rd5681;
	shf.l.wrap.b32 	%r3614, %r3608, %r3609, 25;
	shf.l.wrap.b32 	%r3615, %r3609, %r3608, 25;
	mov.b64 	%rd5683, {%r3615, %r3614};
	xor.b64  	%rd5684, %rd5682, %rd5683;
	add.s64 	%rd5685, %rd5684, %rd5679;
	add.s64 	%rd5686, %rd5685, %rd5674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3616,%dummy}, %rd5675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3617}, %rd5675;
	}
	shf.r.wrap.b32 	%r3618, %r3617, %r3616, 14;
	shf.r.wrap.b32 	%r3619, %r3616, %r3617, 14;
	mov.b64 	%rd5687, {%r3619, %r3618};
	shf.r.wrap.b32 	%r3620, %r3617, %r3616, 18;
	shf.r.wrap.b32 	%r3621, %r3616, %r3617, 18;
	mov.b64 	%rd5688, {%r3621, %r3620};
	xor.b64  	%rd5689, %rd5687, %rd5688;
	shf.l.wrap.b32 	%r3622, %r3616, %r3617, 23;
	shf.l.wrap.b32 	%r3623, %r3617, %r3616, 23;
	mov.b64 	%rd5690, {%r3623, %r3622};
	xor.b64  	%rd5691, %rd5689, %rd5690;
	xor.b64  	%rd5692, %rd5651, %rd5627;
	and.b64  	%rd5693, %rd5675, %rd5692;
	xor.b64  	%rd5694, %rd5693, %rd5627;
	add.s64 	%rd5695, %rd5694, %rd5603;
	add.s64 	%rd5696, %rd5695, %rd5691;
	add.s64 	%rd5697, %rd5696, %rd13681;
	add.s64 	%rd5698, %rd5697, 6128411473006802146;
	add.s64 	%rd5699, %rd5698, %rd5614;
	and.b64  	%rd5700, %rd5686, %rd5662;
	or.b64  	%rd5701, %rd5686, %rd5662;
	and.b64  	%rd5702, %rd5701, %rd5638;
	or.b64  	%rd5703, %rd5702, %rd5700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3624,%dummy}, %rd5686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3625}, %rd5686;
	}
	shf.r.wrap.b32 	%r3626, %r3625, %r3624, 28;
	shf.r.wrap.b32 	%r3627, %r3624, %r3625, 28;
	mov.b64 	%rd5704, {%r3627, %r3626};
	shf.l.wrap.b32 	%r3628, %r3624, %r3625, 30;
	shf.l.wrap.b32 	%r3629, %r3625, %r3624, 30;
	mov.b64 	%rd5705, {%r3629, %r3628};
	xor.b64  	%rd5706, %rd5704, %rd5705;
	shf.l.wrap.b32 	%r3630, %r3624, %r3625, 25;
	shf.l.wrap.b32 	%r3631, %r3625, %r3624, 25;
	mov.b64 	%rd5707, {%r3631, %r3630};
	xor.b64  	%rd5708, %rd5706, %rd5707;
	add.s64 	%rd5709, %rd5708, %rd5703;
	add.s64 	%rd5710, %rd5709, %rd5698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3632,%dummy}, %rd5699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3633}, %rd5699;
	}
	shf.r.wrap.b32 	%r3634, %r3633, %r3632, 14;
	shf.r.wrap.b32 	%r3635, %r3632, %r3633, 14;
	mov.b64 	%rd5711, {%r3635, %r3634};
	shf.r.wrap.b32 	%r3636, %r3633, %r3632, 18;
	shf.r.wrap.b32 	%r3637, %r3632, %r3633, 18;
	mov.b64 	%rd5712, {%r3637, %r3636};
	xor.b64  	%rd5713, %rd5711, %rd5712;
	shf.l.wrap.b32 	%r3638, %r3632, %r3633, 23;
	shf.l.wrap.b32 	%r3639, %r3633, %r3632, 23;
	mov.b64 	%rd5714, {%r3639, %r3638};
	xor.b64  	%rd5715, %rd5713, %rd5714;
	xor.b64  	%rd5716, %rd5675, %rd5651;
	and.b64  	%rd5717, %rd5699, %rd5716;
	xor.b64  	%rd5718, %rd5717, %rd5651;
	add.s64 	%rd5719, %rd5718, %rd5627;
	add.s64 	%rd5720, %rd5719, %rd5715;
	add.s64 	%rd5721, %rd5720, %rd13680;
	add.s64 	%rd5722, %rd5721, 8268148722764581231;
	add.s64 	%rd13700, %rd5722, %rd5638;
	and.b64  	%rd5723, %rd5710, %rd5686;
	or.b64  	%rd5724, %rd5710, %rd5686;
	and.b64  	%rd5725, %rd5724, %rd5662;
	or.b64  	%rd5726, %rd5725, %rd5723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3640,%dummy}, %rd5710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3641}, %rd5710;
	}
	shf.r.wrap.b32 	%r3642, %r3641, %r3640, 28;
	shf.r.wrap.b32 	%r3643, %r3640, %r3641, 28;
	mov.b64 	%rd5727, {%r3643, %r3642};
	shf.l.wrap.b32 	%r3644, %r3640, %r3641, 30;
	shf.l.wrap.b32 	%r3645, %r3641, %r3640, 30;
	mov.b64 	%rd5728, {%r3645, %r3644};
	xor.b64  	%rd5729, %rd5727, %rd5728;
	shf.l.wrap.b32 	%r3646, %r3640, %r3641, 25;
	shf.l.wrap.b32 	%r3647, %r3641, %r3640, 25;
	mov.b64 	%rd5730, {%r3647, %r3646};
	xor.b64  	%rd5731, %rd5729, %rd5730;
	add.s64 	%rd5732, %rd5731, %rd5726;
	add.s64 	%rd13696, %rd5732, %rd5722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3648,%dummy}, %rd13700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3649}, %rd13700;
	}
	shf.r.wrap.b32 	%r3650, %r3649, %r3648, 14;
	shf.r.wrap.b32 	%r3651, %r3648, %r3649, 14;
	mov.b64 	%rd5733, {%r3651, %r3650};
	shf.r.wrap.b32 	%r3652, %r3649, %r3648, 18;
	shf.r.wrap.b32 	%r3653, %r3648, %r3649, 18;
	mov.b64 	%rd5734, {%r3653, %r3652};
	xor.b64  	%rd5735, %rd5733, %rd5734;
	shf.l.wrap.b32 	%r3654, %r3648, %r3649, 23;
	shf.l.wrap.b32 	%r3655, %r3649, %r3648, 23;
	mov.b64 	%rd5736, {%r3655, %r3654};
	xor.b64  	%rd5737, %rd5735, %rd5736;
	xor.b64  	%rd5738, %rd5699, %rd5675;
	and.b64  	%rd5739, %rd13700, %rd5738;
	xor.b64  	%rd5740, %rd5739, %rd5675;
	add.s64 	%rd5741, %rd5740, %rd5651;
	add.s64 	%rd5742, %rd5741, %rd5737;
	add.s64 	%rd5743, %rd5742, %rd13679;
	add.s64 	%rd5744, %rd5743, -9160688886553864527;
	add.s64 	%rd13699, %rd5744, %rd5662;
	and.b64  	%rd5745, %rd13696, %rd5710;
	or.b64  	%rd5746, %rd13696, %rd5710;
	and.b64  	%rd5747, %rd5746, %rd5686;
	or.b64  	%rd5748, %rd5747, %rd5745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3656,%dummy}, %rd13696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3657}, %rd13696;
	}
	shf.r.wrap.b32 	%r3658, %r3657, %r3656, 28;
	shf.r.wrap.b32 	%r3659, %r3656, %r3657, 28;
	mov.b64 	%rd5749, {%r3659, %r3658};
	shf.l.wrap.b32 	%r3660, %r3656, %r3657, 30;
	shf.l.wrap.b32 	%r3661, %r3657, %r3656, 30;
	mov.b64 	%rd5750, {%r3661, %r3660};
	xor.b64  	%rd5751, %rd5749, %rd5750;
	shf.l.wrap.b32 	%r3662, %r3656, %r3657, 25;
	shf.l.wrap.b32 	%r3663, %r3657, %r3656, 25;
	mov.b64 	%rd5752, {%r3663, %r3662};
	xor.b64  	%rd5753, %rd5751, %rd5752;
	add.s64 	%rd5754, %rd5753, %rd5748;
	add.s64 	%rd13695, %rd5754, %rd5744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3664,%dummy}, %rd13699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3665}, %rd13699;
	}
	shf.r.wrap.b32 	%r3666, %r3665, %r3664, 14;
	shf.r.wrap.b32 	%r3667, %r3664, %r3665, 14;
	mov.b64 	%rd5755, {%r3667, %r3666};
	shf.r.wrap.b32 	%r3668, %r3665, %r3664, 18;
	shf.r.wrap.b32 	%r3669, %r3664, %r3665, 18;
	mov.b64 	%rd5756, {%r3669, %r3668};
	xor.b64  	%rd5757, %rd5755, %rd5756;
	shf.l.wrap.b32 	%r3670, %r3664, %r3665, 23;
	shf.l.wrap.b32 	%r3671, %r3665, %r3664, 23;
	mov.b64 	%rd5758, {%r3671, %r3670};
	xor.b64  	%rd5759, %rd5757, %rd5758;
	xor.b64  	%rd5760, %rd13700, %rd5699;
	and.b64  	%rd5761, %rd13699, %rd5760;
	xor.b64  	%rd5762, %rd5761, %rd5699;
	add.s64 	%rd5763, %rd5762, %rd5675;
	add.s64 	%rd5764, %rd5763, %rd5759;
	add.s64 	%rd5765, %rd5764, %rd13678;
	add.s64 	%rd5766, %rd5765, -7215885187991268811;
	add.s64 	%rd13698, %rd5766, %rd5686;
	and.b64  	%rd5767, %rd13695, %rd13696;
	or.b64  	%rd5768, %rd13695, %rd13696;
	and.b64  	%rd5769, %rd5768, %rd5710;
	or.b64  	%rd5770, %rd5769, %rd5767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3672,%dummy}, %rd13695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd13695;
	}
	shf.r.wrap.b32 	%r3674, %r3673, %r3672, 28;
	shf.r.wrap.b32 	%r3675, %r3672, %r3673, 28;
	mov.b64 	%rd5771, {%r3675, %r3674};
	shf.l.wrap.b32 	%r3676, %r3672, %r3673, 30;
	shf.l.wrap.b32 	%r3677, %r3673, %r3672, 30;
	mov.b64 	%rd5772, {%r3677, %r3676};
	xor.b64  	%rd5773, %rd5771, %rd5772;
	shf.l.wrap.b32 	%r3678, %r3672, %r3673, 25;
	shf.l.wrap.b32 	%r3679, %r3673, %r3672, 25;
	mov.b64 	%rd5774, {%r3679, %r3678};
	xor.b64  	%rd5775, %rd5773, %rd5774;
	add.s64 	%rd5776, %rd5775, %rd5770;
	add.s64 	%rd13694, %rd5776, %rd5766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3680,%dummy}, %rd13698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3681}, %rd13698;
	}
	shf.r.wrap.b32 	%r3682, %r3681, %r3680, 14;
	shf.r.wrap.b32 	%r3683, %r3680, %r3681, 14;
	mov.b64 	%rd5777, {%r3683, %r3682};
	shf.r.wrap.b32 	%r3684, %r3681, %r3680, 18;
	shf.r.wrap.b32 	%r3685, %r3680, %r3681, 18;
	mov.b64 	%rd5778, {%r3685, %r3684};
	xor.b64  	%rd5779, %rd5777, %rd5778;
	shf.l.wrap.b32 	%r3686, %r3680, %r3681, 23;
	shf.l.wrap.b32 	%r3687, %r3681, %r3680, 23;
	mov.b64 	%rd5780, {%r3687, %r3686};
	xor.b64  	%rd5781, %rd5779, %rd5780;
	xor.b64  	%rd5782, %rd13699, %rd13700;
	and.b64  	%rd5783, %rd13698, %rd5782;
	xor.b64  	%rd5784, %rd5783, %rd13700;
	add.s64 	%rd5785, %rd5784, %rd5699;
	add.s64 	%rd5786, %rd5785, %rd5781;
	add.s64 	%rd5787, %rd5786, %rd13677;
	add.s64 	%rd5788, %rd5787, -4495734319001033068;
	add.s64 	%rd13697, %rd5788, %rd5710;
	and.b64  	%rd5789, %rd13694, %rd13695;
	or.b64  	%rd5790, %rd13694, %rd13695;
	and.b64  	%rd5791, %rd5790, %rd13696;
	or.b64  	%rd5792, %rd5791, %rd5789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3688,%dummy}, %rd13694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3689}, %rd13694;
	}
	shf.r.wrap.b32 	%r3690, %r3689, %r3688, 28;
	shf.r.wrap.b32 	%r3691, %r3688, %r3689, 28;
	mov.b64 	%rd5793, {%r3691, %r3690};
	shf.l.wrap.b32 	%r3692, %r3688, %r3689, 30;
	shf.l.wrap.b32 	%r3693, %r3689, %r3688, 30;
	mov.b64 	%rd5794, {%r3693, %r3692};
	xor.b64  	%rd5795, %rd5793, %rd5794;
	shf.l.wrap.b32 	%r3694, %r3688, %r3689, 25;
	shf.l.wrap.b32 	%r3695, %r3689, %r3688, 25;
	mov.b64 	%rd5796, {%r3695, %r3694};
	xor.b64  	%rd5797, %rd5795, %rd5796;
	add.s64 	%rd5798, %rd5797, %rd5792;
	add.s64 	%rd13693, %rd5798, %rd5788;
	mov.u32 	%r9734, 16;

$L__BB0_96:
	.pragma "nounroll";
	mov.u64 	%rd13507, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3696}, %rd13678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3697,%dummy}, %rd13678;
	}
	shf.l.wrap.b32 	%r3698, %r3697, %r3696, 3;
	shf.l.wrap.b32 	%r3699, %r3696, %r3697, 3;
	mov.b64 	%rd5799, {%r3699, %r3698};
	shf.r.wrap.b32 	%r3700, %r3696, %r3697, 19;
	shf.r.wrap.b32 	%r3701, %r3697, %r3696, 19;
	mov.b64 	%rd5800, {%r3701, %r3700};
	xor.b64  	%rd5801, %rd5800, %rd5799;
	shr.u64 	%rd5802, %rd13678, 6;
	xor.b64  	%rd5803, %rd5801, %rd5802;
	add.s64 	%rd5804, %rd13683, %rd13692;
	add.s64 	%rd5805, %rd5804, %rd5803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3702,%dummy}, %rd13691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3703}, %rd13691;
	}
	shf.r.wrap.b32 	%r3704, %r3703, %r3702, 8;
	shf.r.wrap.b32 	%r3705, %r3702, %r3703, 8;
	mov.b64 	%rd5806, {%r3705, %r3704};
	shf.r.wrap.b32 	%r3706, %r3703, %r3702, 1;
	shf.r.wrap.b32 	%r3707, %r3702, %r3703, 1;
	mov.b64 	%rd5807, {%r3707, %r3706};
	xor.b64  	%rd5808, %rd5807, %rd5806;
	shr.u64 	%rd5809, %rd13691, 7;
	xor.b64  	%rd5810, %rd5808, %rd5809;
	add.s64 	%rd13692, %rd5805, %rd5810;
	mul.wide.u32 	%rd5811, %r9734, 8;
	add.s64 	%rd5813, %rd13507, %rd5811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3708,%dummy}, %rd13697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3709}, %rd13697;
	}
	shf.r.wrap.b32 	%r3710, %r3709, %r3708, 18;
	shf.r.wrap.b32 	%r3711, %r3708, %r3709, 18;
	mov.b64 	%rd5814, {%r3711, %r3710};
	shf.r.wrap.b32 	%r3712, %r3709, %r3708, 14;
	shf.r.wrap.b32 	%r3713, %r3708, %r3709, 14;
	mov.b64 	%rd5815, {%r3713, %r3712};
	xor.b64  	%rd5816, %rd5815, %rd5814;
	shf.l.wrap.b32 	%r3714, %r3708, %r3709, 23;
	shf.l.wrap.b32 	%r3715, %r3709, %r3708, 23;
	mov.b64 	%rd5817, {%r3715, %r3714};
	xor.b64  	%rd5818, %rd5816, %rd5817;
	xor.b64  	%rd5819, %rd13698, %rd13699;
	and.b64  	%rd5820, %rd13697, %rd5819;
	xor.b64  	%rd5821, %rd5820, %rd13699;
	add.s64 	%rd5822, %rd5821, %rd13700;
	add.s64 	%rd5823, %rd5822, %rd5818;
	ld.const.u64 	%rd5824, [%rd5813];
	add.s64 	%rd5825, %rd5823, %rd5824;
	add.s64 	%rd5826, %rd5825, %rd13692;
	add.s64 	%rd5827, %rd5826, %rd13696;
	or.b64  	%rd5828, %rd13693, %rd13694;
	and.b64  	%rd5829, %rd5828, %rd13695;
	and.b64  	%rd5830, %rd13693, %rd13694;
	or.b64  	%rd5831, %rd5829, %rd5830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3716}, %rd13693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3717,%dummy}, %rd13693;
	}
	shf.l.wrap.b32 	%r3718, %r3717, %r3716, 30;
	shf.l.wrap.b32 	%r3719, %r3716, %r3717, 30;
	mov.b64 	%rd5832, {%r3719, %r3718};
	shf.r.wrap.b32 	%r3720, %r3716, %r3717, 28;
	shf.r.wrap.b32 	%r3721, %r3717, %r3716, 28;
	mov.b64 	%rd5833, {%r3721, %r3720};
	xor.b64  	%rd5834, %rd5833, %rd5832;
	shf.l.wrap.b32 	%r3722, %r3717, %r3716, 25;
	shf.l.wrap.b32 	%r3723, %r3716, %r3717, 25;
	mov.b64 	%rd5835, {%r3723, %r3722};
	xor.b64  	%rd5836, %rd5834, %rd5835;
	add.s64 	%rd5837, %rd5836, %rd5831;
	add.s64 	%rd5838, %rd5837, %rd5826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3724}, %rd13677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3725,%dummy}, %rd13677;
	}
	shf.l.wrap.b32 	%r3726, %r3725, %r3724, 3;
	shf.l.wrap.b32 	%r3727, %r3724, %r3725, 3;
	mov.b64 	%rd5839, {%r3727, %r3726};
	shf.r.wrap.b32 	%r3728, %r3724, %r3725, 19;
	shf.r.wrap.b32 	%r3729, %r3725, %r3724, 19;
	mov.b64 	%rd5840, {%r3729, %r3728};
	xor.b64  	%rd5841, %rd5840, %rd5839;
	shr.u64 	%rd5842, %rd13677, 6;
	xor.b64  	%rd5843, %rd5841, %rd5842;
	add.s64 	%rd5844, %rd13682, %rd13691;
	add.s64 	%rd5845, %rd5844, %rd5843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd13690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3731}, %rd13690;
	}
	shf.r.wrap.b32 	%r3732, %r3731, %r3730, 8;
	shf.r.wrap.b32 	%r3733, %r3730, %r3731, 8;
	mov.b64 	%rd5846, {%r3733, %r3732};
	shf.r.wrap.b32 	%r3734, %r3731, %r3730, 1;
	shf.r.wrap.b32 	%r3735, %r3730, %r3731, 1;
	mov.b64 	%rd5847, {%r3735, %r3734};
	xor.b64  	%rd5848, %rd5847, %rd5846;
	shr.u64 	%rd5849, %rd13690, 7;
	xor.b64  	%rd5850, %rd5848, %rd5849;
	add.s64 	%rd13691, %rd5845, %rd5850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3736,%dummy}, %rd5827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3737}, %rd5827;
	}
	shf.r.wrap.b32 	%r3738, %r3737, %r3736, 14;
	shf.r.wrap.b32 	%r3739, %r3736, %r3737, 14;
	mov.b64 	%rd5851, {%r3739, %r3738};
	shf.r.wrap.b32 	%r3740, %r3737, %r3736, 18;
	shf.r.wrap.b32 	%r3741, %r3736, %r3737, 18;
	mov.b64 	%rd5852, {%r3741, %r3740};
	xor.b64  	%rd5853, %rd5851, %rd5852;
	shf.l.wrap.b32 	%r3742, %r3736, %r3737, 23;
	shf.l.wrap.b32 	%r3743, %r3737, %r3736, 23;
	mov.b64 	%rd5854, {%r3743, %r3742};
	xor.b64  	%rd5855, %rd5853, %rd5854;
	xor.b64  	%rd5856, %rd13697, %rd13698;
	and.b64  	%rd5857, %rd5827, %rd5856;
	xor.b64  	%rd5858, %rd5857, %rd13698;
	add.s64 	%rd5859, %rd5858, %rd13699;
	add.s64 	%rd5860, %rd5859, %rd5855;
	ld.const.u64 	%rd5861, [%rd5813+8];
	add.s64 	%rd5862, %rd5860, %rd5861;
	add.s64 	%rd5863, %rd5862, %rd13691;
	add.s64 	%rd5864, %rd5863, %rd13695;
	and.b64  	%rd5865, %rd5838, %rd13693;
	or.b64  	%rd5866, %rd5838, %rd13693;
	and.b64  	%rd5867, %rd5866, %rd13694;
	or.b64  	%rd5868, %rd5867, %rd5865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3744,%dummy}, %rd5838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3745}, %rd5838;
	}
	shf.r.wrap.b32 	%r3746, %r3745, %r3744, 28;
	shf.r.wrap.b32 	%r3747, %r3744, %r3745, 28;
	mov.b64 	%rd5869, {%r3747, %r3746};
	shf.l.wrap.b32 	%r3748, %r3744, %r3745, 30;
	shf.l.wrap.b32 	%r3749, %r3745, %r3744, 30;
	mov.b64 	%rd5870, {%r3749, %r3748};
	xor.b64  	%rd5871, %rd5869, %rd5870;
	shf.l.wrap.b32 	%r3750, %r3744, %r3745, 25;
	shf.l.wrap.b32 	%r3751, %r3745, %r3744, 25;
	mov.b64 	%rd5872, {%r3751, %r3750};
	xor.b64  	%rd5873, %rd5871, %rd5872;
	add.s64 	%rd5874, %rd5873, %rd5868;
	add.s64 	%rd5875, %rd5874, %rd5863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3752,%dummy}, %rd13692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3753}, %rd13692;
	}
	shf.r.wrap.b32 	%r3754, %r3753, %r3752, 19;
	shf.r.wrap.b32 	%r3755, %r3752, %r3753, 19;
	mov.b64 	%rd5876, {%r3755, %r3754};
	shf.l.wrap.b32 	%r3756, %r3752, %r3753, 3;
	shf.l.wrap.b32 	%r3757, %r3753, %r3752, 3;
	mov.b64 	%rd5877, {%r3757, %r3756};
	xor.b64  	%rd5878, %rd5876, %rd5877;
	shr.u64 	%rd5879, %rd13692, 6;
	xor.b64  	%rd5880, %rd5878, %rd5879;
	add.s64 	%rd5881, %rd13681, %rd13690;
	add.s64 	%rd5882, %rd5881, %rd5880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3758,%dummy}, %rd13689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3759}, %rd13689;
	}
	shf.r.wrap.b32 	%r3760, %r3759, %r3758, 8;
	shf.r.wrap.b32 	%r3761, %r3758, %r3759, 8;
	mov.b64 	%rd5883, {%r3761, %r3760};
	shf.r.wrap.b32 	%r3762, %r3759, %r3758, 1;
	shf.r.wrap.b32 	%r3763, %r3758, %r3759, 1;
	mov.b64 	%rd5884, {%r3763, %r3762};
	xor.b64  	%rd5885, %rd5884, %rd5883;
	shr.u64 	%rd5886, %rd13689, 7;
	xor.b64  	%rd5887, %rd5885, %rd5886;
	add.s64 	%rd13690, %rd5882, %rd5887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3764,%dummy}, %rd5864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3765}, %rd5864;
	}
	shf.r.wrap.b32 	%r3766, %r3765, %r3764, 14;
	shf.r.wrap.b32 	%r3767, %r3764, %r3765, 14;
	mov.b64 	%rd5888, {%r3767, %r3766};
	shf.r.wrap.b32 	%r3768, %r3765, %r3764, 18;
	shf.r.wrap.b32 	%r3769, %r3764, %r3765, 18;
	mov.b64 	%rd5889, {%r3769, %r3768};
	xor.b64  	%rd5890, %rd5888, %rd5889;
	shf.l.wrap.b32 	%r3770, %r3764, %r3765, 23;
	shf.l.wrap.b32 	%r3771, %r3765, %r3764, 23;
	mov.b64 	%rd5891, {%r3771, %r3770};
	xor.b64  	%rd5892, %rd5890, %rd5891;
	xor.b64  	%rd5893, %rd5827, %rd13697;
	and.b64  	%rd5894, %rd5864, %rd5893;
	xor.b64  	%rd5895, %rd5894, %rd13697;
	add.s64 	%rd5896, %rd5895, %rd13698;
	add.s64 	%rd5897, %rd5896, %rd5892;
	ld.const.u64 	%rd5898, [%rd5813+16];
	add.s64 	%rd5899, %rd5897, %rd5898;
	add.s64 	%rd5900, %rd5899, %rd13690;
	add.s64 	%rd5901, %rd5900, %rd13694;
	and.b64  	%rd5902, %rd5875, %rd5838;
	or.b64  	%rd5903, %rd5875, %rd5838;
	and.b64  	%rd5904, %rd5903, %rd13693;
	or.b64  	%rd5905, %rd5904, %rd5902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3772,%dummy}, %rd5875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3773}, %rd5875;
	}
	shf.r.wrap.b32 	%r3774, %r3773, %r3772, 28;
	shf.r.wrap.b32 	%r3775, %r3772, %r3773, 28;
	mov.b64 	%rd5906, {%r3775, %r3774};
	shf.l.wrap.b32 	%r3776, %r3772, %r3773, 30;
	shf.l.wrap.b32 	%r3777, %r3773, %r3772, 30;
	mov.b64 	%rd5907, {%r3777, %r3776};
	xor.b64  	%rd5908, %rd5906, %rd5907;
	shf.l.wrap.b32 	%r3778, %r3772, %r3773, 25;
	shf.l.wrap.b32 	%r3779, %r3773, %r3772, 25;
	mov.b64 	%rd5909, {%r3779, %r3778};
	xor.b64  	%rd5910, %rd5908, %rd5909;
	add.s64 	%rd5911, %rd5910, %rd5905;
	add.s64 	%rd5912, %rd5911, %rd5900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3780,%dummy}, %rd13691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3781}, %rd13691;
	}
	shf.r.wrap.b32 	%r3782, %r3781, %r3780, 19;
	shf.r.wrap.b32 	%r3783, %r3780, %r3781, 19;
	mov.b64 	%rd5913, {%r3783, %r3782};
	shf.l.wrap.b32 	%r3784, %r3780, %r3781, 3;
	shf.l.wrap.b32 	%r3785, %r3781, %r3780, 3;
	mov.b64 	%rd5914, {%r3785, %r3784};
	xor.b64  	%rd5915, %rd5913, %rd5914;
	shr.u64 	%rd5916, %rd13691, 6;
	xor.b64  	%rd5917, %rd5915, %rd5916;
	add.s64 	%rd5918, %rd13680, %rd13689;
	add.s64 	%rd5919, %rd5918, %rd5917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd13688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3787}, %rd13688;
	}
	shf.r.wrap.b32 	%r3788, %r3787, %r3786, 8;
	shf.r.wrap.b32 	%r3789, %r3786, %r3787, 8;
	mov.b64 	%rd5920, {%r3789, %r3788};
	shf.r.wrap.b32 	%r3790, %r3787, %r3786, 1;
	shf.r.wrap.b32 	%r3791, %r3786, %r3787, 1;
	mov.b64 	%rd5921, {%r3791, %r3790};
	xor.b64  	%rd5922, %rd5921, %rd5920;
	shr.u64 	%rd5923, %rd13688, 7;
	xor.b64  	%rd5924, %rd5922, %rd5923;
	add.s64 	%rd13689, %rd5919, %rd5924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3792,%dummy}, %rd5901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3793}, %rd5901;
	}
	shf.r.wrap.b32 	%r3794, %r3793, %r3792, 14;
	shf.r.wrap.b32 	%r3795, %r3792, %r3793, 14;
	mov.b64 	%rd5925, {%r3795, %r3794};
	shf.r.wrap.b32 	%r3796, %r3793, %r3792, 18;
	shf.r.wrap.b32 	%r3797, %r3792, %r3793, 18;
	mov.b64 	%rd5926, {%r3797, %r3796};
	xor.b64  	%rd5927, %rd5925, %rd5926;
	shf.l.wrap.b32 	%r3798, %r3792, %r3793, 23;
	shf.l.wrap.b32 	%r3799, %r3793, %r3792, 23;
	mov.b64 	%rd5928, {%r3799, %r3798};
	xor.b64  	%rd5929, %rd5927, %rd5928;
	xor.b64  	%rd5930, %rd5864, %rd5827;
	and.b64  	%rd5931, %rd5901, %rd5930;
	xor.b64  	%rd5932, %rd5931, %rd5827;
	add.s64 	%rd5933, %rd5932, %rd13697;
	add.s64 	%rd5934, %rd5933, %rd5929;
	ld.const.u64 	%rd5935, [%rd5813+24];
	add.s64 	%rd5936, %rd5934, %rd5935;
	add.s64 	%rd5937, %rd5936, %rd13689;
	add.s64 	%rd5938, %rd5937, %rd13693;
	and.b64  	%rd5939, %rd5912, %rd5875;
	or.b64  	%rd5940, %rd5912, %rd5875;
	and.b64  	%rd5941, %rd5940, %rd5838;
	or.b64  	%rd5942, %rd5941, %rd5939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3800,%dummy}, %rd5912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3801}, %rd5912;
	}
	shf.r.wrap.b32 	%r3802, %r3801, %r3800, 28;
	shf.r.wrap.b32 	%r3803, %r3800, %r3801, 28;
	mov.b64 	%rd5943, {%r3803, %r3802};
	shf.l.wrap.b32 	%r3804, %r3800, %r3801, 30;
	shf.l.wrap.b32 	%r3805, %r3801, %r3800, 30;
	mov.b64 	%rd5944, {%r3805, %r3804};
	xor.b64  	%rd5945, %rd5943, %rd5944;
	shf.l.wrap.b32 	%r3806, %r3800, %r3801, 25;
	shf.l.wrap.b32 	%r3807, %r3801, %r3800, 25;
	mov.b64 	%rd5946, {%r3807, %r3806};
	xor.b64  	%rd5947, %rd5945, %rd5946;
	add.s64 	%rd5948, %rd5947, %rd5942;
	add.s64 	%rd5949, %rd5948, %rd5937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3808,%dummy}, %rd13690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3809}, %rd13690;
	}
	shf.r.wrap.b32 	%r3810, %r3809, %r3808, 19;
	shf.r.wrap.b32 	%r3811, %r3808, %r3809, 19;
	mov.b64 	%rd5950, {%r3811, %r3810};
	shf.l.wrap.b32 	%r3812, %r3808, %r3809, 3;
	shf.l.wrap.b32 	%r3813, %r3809, %r3808, 3;
	mov.b64 	%rd5951, {%r3813, %r3812};
	xor.b64  	%rd5952, %rd5950, %rd5951;
	shr.u64 	%rd5953, %rd13690, 6;
	xor.b64  	%rd5954, %rd5952, %rd5953;
	add.s64 	%rd5955, %rd13679, %rd13688;
	add.s64 	%rd5956, %rd5955, %rd5954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3814,%dummy}, %rd13687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3815}, %rd13687;
	}
	shf.r.wrap.b32 	%r3816, %r3815, %r3814, 8;
	shf.r.wrap.b32 	%r3817, %r3814, %r3815, 8;
	mov.b64 	%rd5957, {%r3817, %r3816};
	shf.r.wrap.b32 	%r3818, %r3815, %r3814, 1;
	shf.r.wrap.b32 	%r3819, %r3814, %r3815, 1;
	mov.b64 	%rd5958, {%r3819, %r3818};
	xor.b64  	%rd5959, %rd5958, %rd5957;
	shr.u64 	%rd5960, %rd13687, 7;
	xor.b64  	%rd5961, %rd5959, %rd5960;
	add.s64 	%rd13688, %rd5956, %rd5961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3820,%dummy}, %rd5938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd5938;
	}
	shf.r.wrap.b32 	%r3822, %r3821, %r3820, 14;
	shf.r.wrap.b32 	%r3823, %r3820, %r3821, 14;
	mov.b64 	%rd5962, {%r3823, %r3822};
	shf.r.wrap.b32 	%r3824, %r3821, %r3820, 18;
	shf.r.wrap.b32 	%r3825, %r3820, %r3821, 18;
	mov.b64 	%rd5963, {%r3825, %r3824};
	xor.b64  	%rd5964, %rd5962, %rd5963;
	shf.l.wrap.b32 	%r3826, %r3820, %r3821, 23;
	shf.l.wrap.b32 	%r3827, %r3821, %r3820, 23;
	mov.b64 	%rd5965, {%r3827, %r3826};
	xor.b64  	%rd5966, %rd5964, %rd5965;
	xor.b64  	%rd5967, %rd5901, %rd5864;
	and.b64  	%rd5968, %rd5938, %rd5967;
	xor.b64  	%rd5969, %rd5968, %rd5864;
	add.s64 	%rd5970, %rd5969, %rd5827;
	add.s64 	%rd5971, %rd5970, %rd5966;
	ld.const.u64 	%rd5972, [%rd5813+32];
	add.s64 	%rd5973, %rd5971, %rd5972;
	add.s64 	%rd5974, %rd5973, %rd13688;
	add.s64 	%rd5975, %rd5974, %rd5838;
	and.b64  	%rd5976, %rd5949, %rd5912;
	or.b64  	%rd5977, %rd5949, %rd5912;
	and.b64  	%rd5978, %rd5977, %rd5875;
	or.b64  	%rd5979, %rd5978, %rd5976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3828,%dummy}, %rd5949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3829}, %rd5949;
	}
	shf.r.wrap.b32 	%r3830, %r3829, %r3828, 28;
	shf.r.wrap.b32 	%r3831, %r3828, %r3829, 28;
	mov.b64 	%rd5980, {%r3831, %r3830};
	shf.l.wrap.b32 	%r3832, %r3828, %r3829, 30;
	shf.l.wrap.b32 	%r3833, %r3829, %r3828, 30;
	mov.b64 	%rd5981, {%r3833, %r3832};
	xor.b64  	%rd5982, %rd5980, %rd5981;
	shf.l.wrap.b32 	%r3834, %r3828, %r3829, 25;
	shf.l.wrap.b32 	%r3835, %r3829, %r3828, 25;
	mov.b64 	%rd5983, {%r3835, %r3834};
	xor.b64  	%rd5984, %rd5982, %rd5983;
	add.s64 	%rd5985, %rd5984, %rd5979;
	add.s64 	%rd5986, %rd5985, %rd5974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3836,%dummy}, %rd13689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3837}, %rd13689;
	}
	shf.r.wrap.b32 	%r3838, %r3837, %r3836, 19;
	shf.r.wrap.b32 	%r3839, %r3836, %r3837, 19;
	mov.b64 	%rd5987, {%r3839, %r3838};
	shf.l.wrap.b32 	%r3840, %r3836, %r3837, 3;
	shf.l.wrap.b32 	%r3841, %r3837, %r3836, 3;
	mov.b64 	%rd5988, {%r3841, %r3840};
	xor.b64  	%rd5989, %rd5987, %rd5988;
	shr.u64 	%rd5990, %rd13689, 6;
	xor.b64  	%rd5991, %rd5989, %rd5990;
	add.s64 	%rd5992, %rd13678, %rd13687;
	add.s64 	%rd5993, %rd5992, %rd5991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3842,%dummy}, %rd13686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3843}, %rd13686;
	}
	shf.r.wrap.b32 	%r3844, %r3843, %r3842, 8;
	shf.r.wrap.b32 	%r3845, %r3842, %r3843, 8;
	mov.b64 	%rd5994, {%r3845, %r3844};
	shf.r.wrap.b32 	%r3846, %r3843, %r3842, 1;
	shf.r.wrap.b32 	%r3847, %r3842, %r3843, 1;
	mov.b64 	%rd5995, {%r3847, %r3846};
	xor.b64  	%rd5996, %rd5995, %rd5994;
	shr.u64 	%rd5997, %rd13686, 7;
	xor.b64  	%rd5998, %rd5996, %rd5997;
	add.s64 	%rd13687, %rd5993, %rd5998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3848,%dummy}, %rd5975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3849}, %rd5975;
	}
	shf.r.wrap.b32 	%r3850, %r3849, %r3848, 14;
	shf.r.wrap.b32 	%r3851, %r3848, %r3849, 14;
	mov.b64 	%rd5999, {%r3851, %r3850};
	shf.r.wrap.b32 	%r3852, %r3849, %r3848, 18;
	shf.r.wrap.b32 	%r3853, %r3848, %r3849, 18;
	mov.b64 	%rd6000, {%r3853, %r3852};
	xor.b64  	%rd6001, %rd5999, %rd6000;
	shf.l.wrap.b32 	%r3854, %r3848, %r3849, 23;
	shf.l.wrap.b32 	%r3855, %r3849, %r3848, 23;
	mov.b64 	%rd6002, {%r3855, %r3854};
	xor.b64  	%rd6003, %rd6001, %rd6002;
	xor.b64  	%rd6004, %rd5938, %rd5901;
	and.b64  	%rd6005, %rd5975, %rd6004;
	xor.b64  	%rd6006, %rd6005, %rd5901;
	add.s64 	%rd6007, %rd6006, %rd5864;
	add.s64 	%rd6008, %rd6007, %rd6003;
	ld.const.u64 	%rd6009, [%rd5813+40];
	add.s64 	%rd6010, %rd6008, %rd6009;
	add.s64 	%rd6011, %rd6010, %rd13687;
	add.s64 	%rd6012, %rd6011, %rd5875;
	and.b64  	%rd6013, %rd5986, %rd5949;
	or.b64  	%rd6014, %rd5986, %rd5949;
	and.b64  	%rd6015, %rd6014, %rd5912;
	or.b64  	%rd6016, %rd6015, %rd6013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3856,%dummy}, %rd5986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3857}, %rd5986;
	}
	shf.r.wrap.b32 	%r3858, %r3857, %r3856, 28;
	shf.r.wrap.b32 	%r3859, %r3856, %r3857, 28;
	mov.b64 	%rd6017, {%r3859, %r3858};
	shf.l.wrap.b32 	%r3860, %r3856, %r3857, 30;
	shf.l.wrap.b32 	%r3861, %r3857, %r3856, 30;
	mov.b64 	%rd6018, {%r3861, %r3860};
	xor.b64  	%rd6019, %rd6017, %rd6018;
	shf.l.wrap.b32 	%r3862, %r3856, %r3857, 25;
	shf.l.wrap.b32 	%r3863, %r3857, %r3856, 25;
	mov.b64 	%rd6020, {%r3863, %r3862};
	xor.b64  	%rd6021, %rd6019, %rd6020;
	add.s64 	%rd6022, %rd6021, %rd6016;
	add.s64 	%rd6023, %rd6022, %rd6011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3864,%dummy}, %rd13688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3865}, %rd13688;
	}
	shf.r.wrap.b32 	%r3866, %r3865, %r3864, 19;
	shf.r.wrap.b32 	%r3867, %r3864, %r3865, 19;
	mov.b64 	%rd6024, {%r3867, %r3866};
	shf.l.wrap.b32 	%r3868, %r3864, %r3865, 3;
	shf.l.wrap.b32 	%r3869, %r3865, %r3864, 3;
	mov.b64 	%rd6025, {%r3869, %r3868};
	xor.b64  	%rd6026, %rd6024, %rd6025;
	shr.u64 	%rd6027, %rd13688, 6;
	xor.b64  	%rd6028, %rd6026, %rd6027;
	add.s64 	%rd6029, %rd13677, %rd13686;
	add.s64 	%rd6030, %rd6029, %rd6028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3870,%dummy}, %rd13685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3871}, %rd13685;
	}
	shf.r.wrap.b32 	%r3872, %r3871, %r3870, 8;
	shf.r.wrap.b32 	%r3873, %r3870, %r3871, 8;
	mov.b64 	%rd6031, {%r3873, %r3872};
	shf.r.wrap.b32 	%r3874, %r3871, %r3870, 1;
	shf.r.wrap.b32 	%r3875, %r3870, %r3871, 1;
	mov.b64 	%rd6032, {%r3875, %r3874};
	xor.b64  	%rd6033, %rd6032, %rd6031;
	shr.u64 	%rd6034, %rd13685, 7;
	xor.b64  	%rd6035, %rd6033, %rd6034;
	add.s64 	%rd13686, %rd6030, %rd6035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3876,%dummy}, %rd6012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3877}, %rd6012;
	}
	shf.r.wrap.b32 	%r3878, %r3877, %r3876, 14;
	shf.r.wrap.b32 	%r3879, %r3876, %r3877, 14;
	mov.b64 	%rd6036, {%r3879, %r3878};
	shf.r.wrap.b32 	%r3880, %r3877, %r3876, 18;
	shf.r.wrap.b32 	%r3881, %r3876, %r3877, 18;
	mov.b64 	%rd6037, {%r3881, %r3880};
	xor.b64  	%rd6038, %rd6036, %rd6037;
	shf.l.wrap.b32 	%r3882, %r3876, %r3877, 23;
	shf.l.wrap.b32 	%r3883, %r3877, %r3876, 23;
	mov.b64 	%rd6039, {%r3883, %r3882};
	xor.b64  	%rd6040, %rd6038, %rd6039;
	xor.b64  	%rd6041, %rd5975, %rd5938;
	and.b64  	%rd6042, %rd6012, %rd6041;
	xor.b64  	%rd6043, %rd6042, %rd5938;
	add.s64 	%rd6044, %rd6043, %rd5901;
	add.s64 	%rd6045, %rd6044, %rd6040;
	ld.const.u64 	%rd6046, [%rd5813+48];
	add.s64 	%rd6047, %rd6045, %rd6046;
	add.s64 	%rd6048, %rd6047, %rd13686;
	add.s64 	%rd6049, %rd6048, %rd5912;
	and.b64  	%rd6050, %rd6023, %rd5986;
	or.b64  	%rd6051, %rd6023, %rd5986;
	and.b64  	%rd6052, %rd6051, %rd5949;
	or.b64  	%rd6053, %rd6052, %rd6050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3884,%dummy}, %rd6023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3885}, %rd6023;
	}
	shf.r.wrap.b32 	%r3886, %r3885, %r3884, 28;
	shf.r.wrap.b32 	%r3887, %r3884, %r3885, 28;
	mov.b64 	%rd6054, {%r3887, %r3886};
	shf.l.wrap.b32 	%r3888, %r3884, %r3885, 30;
	shf.l.wrap.b32 	%r3889, %r3885, %r3884, 30;
	mov.b64 	%rd6055, {%r3889, %r3888};
	xor.b64  	%rd6056, %rd6054, %rd6055;
	shf.l.wrap.b32 	%r3890, %r3884, %r3885, 25;
	shf.l.wrap.b32 	%r3891, %r3885, %r3884, 25;
	mov.b64 	%rd6057, {%r3891, %r3890};
	xor.b64  	%rd6058, %rd6056, %rd6057;
	add.s64 	%rd6059, %rd6058, %rd6053;
	add.s64 	%rd6060, %rd6059, %rd6048;
	add.s64 	%rd6061, %rd13692, %rd13685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3892,%dummy}, %rd13687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3893}, %rd13687;
	}
	shf.r.wrap.b32 	%r3894, %r3893, %r3892, 19;
	shf.r.wrap.b32 	%r3895, %r3892, %r3893, 19;
	mov.b64 	%rd6062, {%r3895, %r3894};
	shf.l.wrap.b32 	%r3896, %r3892, %r3893, 3;
	shf.l.wrap.b32 	%r3897, %r3893, %r3892, 3;
	mov.b64 	%rd6063, {%r3897, %r3896};
	xor.b64  	%rd6064, %rd6062, %rd6063;
	shr.u64 	%rd6065, %rd13687, 6;
	xor.b64  	%rd6066, %rd6064, %rd6065;
	add.s64 	%rd6067, %rd6061, %rd6066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3898,%dummy}, %rd13684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3899}, %rd13684;
	}
	shf.r.wrap.b32 	%r3900, %r3899, %r3898, 8;
	shf.r.wrap.b32 	%r3901, %r3898, %r3899, 8;
	mov.b64 	%rd6068, {%r3901, %r3900};
	shf.r.wrap.b32 	%r3902, %r3899, %r3898, 1;
	shf.r.wrap.b32 	%r3903, %r3898, %r3899, 1;
	mov.b64 	%rd6069, {%r3903, %r3902};
	xor.b64  	%rd6070, %rd6069, %rd6068;
	shr.u64 	%rd6071, %rd13684, 7;
	xor.b64  	%rd6072, %rd6070, %rd6071;
	add.s64 	%rd13685, %rd6067, %rd6072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3904,%dummy}, %rd6049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3905}, %rd6049;
	}
	shf.r.wrap.b32 	%r3906, %r3905, %r3904, 14;
	shf.r.wrap.b32 	%r3907, %r3904, %r3905, 14;
	mov.b64 	%rd6073, {%r3907, %r3906};
	shf.r.wrap.b32 	%r3908, %r3905, %r3904, 18;
	shf.r.wrap.b32 	%r3909, %r3904, %r3905, 18;
	mov.b64 	%rd6074, {%r3909, %r3908};
	xor.b64  	%rd6075, %rd6073, %rd6074;
	shf.l.wrap.b32 	%r3910, %r3904, %r3905, 23;
	shf.l.wrap.b32 	%r3911, %r3905, %r3904, 23;
	mov.b64 	%rd6076, {%r3911, %r3910};
	xor.b64  	%rd6077, %rd6075, %rd6076;
	xor.b64  	%rd6078, %rd6012, %rd5975;
	and.b64  	%rd6079, %rd6049, %rd6078;
	xor.b64  	%rd6080, %rd6079, %rd5975;
	add.s64 	%rd6081, %rd6080, %rd5938;
	add.s64 	%rd6082, %rd6081, %rd6077;
	ld.const.u64 	%rd6083, [%rd5813+56];
	add.s64 	%rd6084, %rd6082, %rd6083;
	add.s64 	%rd6085, %rd6084, %rd13685;
	add.s64 	%rd6086, %rd6085, %rd5949;
	and.b64  	%rd6087, %rd6060, %rd6023;
	or.b64  	%rd6088, %rd6060, %rd6023;
	and.b64  	%rd6089, %rd6088, %rd5986;
	or.b64  	%rd6090, %rd6089, %rd6087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3912,%dummy}, %rd6060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3913}, %rd6060;
	}
	shf.r.wrap.b32 	%r3914, %r3913, %r3912, 28;
	shf.r.wrap.b32 	%r3915, %r3912, %r3913, 28;
	mov.b64 	%rd6091, {%r3915, %r3914};
	shf.l.wrap.b32 	%r3916, %r3912, %r3913, 30;
	shf.l.wrap.b32 	%r3917, %r3913, %r3912, 30;
	mov.b64 	%rd6092, {%r3917, %r3916};
	xor.b64  	%rd6093, %rd6091, %rd6092;
	shf.l.wrap.b32 	%r3918, %r3912, %r3913, 25;
	shf.l.wrap.b32 	%r3919, %r3913, %r3912, 25;
	mov.b64 	%rd6094, {%r3919, %r3918};
	xor.b64  	%rd6095, %rd6093, %rd6094;
	add.s64 	%rd6096, %rd6095, %rd6090;
	add.s64 	%rd6097, %rd6096, %rd6085;
	add.s64 	%rd6098, %rd13691, %rd13684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3920,%dummy}, %rd13686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3921}, %rd13686;
	}
	shf.r.wrap.b32 	%r3922, %r3921, %r3920, 19;
	shf.r.wrap.b32 	%r3923, %r3920, %r3921, 19;
	mov.b64 	%rd6099, {%r3923, %r3922};
	shf.l.wrap.b32 	%r3924, %r3920, %r3921, 3;
	shf.l.wrap.b32 	%r3925, %r3921, %r3920, 3;
	mov.b64 	%rd6100, {%r3925, %r3924};
	xor.b64  	%rd6101, %rd6099, %rd6100;
	shr.u64 	%rd6102, %rd13686, 6;
	xor.b64  	%rd6103, %rd6101, %rd6102;
	add.s64 	%rd6104, %rd6098, %rd6103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3926,%dummy}, %rd13683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3927}, %rd13683;
	}
	shf.r.wrap.b32 	%r3928, %r3927, %r3926, 8;
	shf.r.wrap.b32 	%r3929, %r3926, %r3927, 8;
	mov.b64 	%rd6105, {%r3929, %r3928};
	shf.r.wrap.b32 	%r3930, %r3927, %r3926, 1;
	shf.r.wrap.b32 	%r3931, %r3926, %r3927, 1;
	mov.b64 	%rd6106, {%r3931, %r3930};
	xor.b64  	%rd6107, %rd6106, %rd6105;
	shr.u64 	%rd6108, %rd13683, 7;
	xor.b64  	%rd6109, %rd6107, %rd6108;
	add.s64 	%rd13684, %rd6104, %rd6109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3932,%dummy}, %rd6086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3933}, %rd6086;
	}
	shf.r.wrap.b32 	%r3934, %r3933, %r3932, 14;
	shf.r.wrap.b32 	%r3935, %r3932, %r3933, 14;
	mov.b64 	%rd6110, {%r3935, %r3934};
	shf.r.wrap.b32 	%r3936, %r3933, %r3932, 18;
	shf.r.wrap.b32 	%r3937, %r3932, %r3933, 18;
	mov.b64 	%rd6111, {%r3937, %r3936};
	xor.b64  	%rd6112, %rd6110, %rd6111;
	shf.l.wrap.b32 	%r3938, %r3932, %r3933, 23;
	shf.l.wrap.b32 	%r3939, %r3933, %r3932, 23;
	mov.b64 	%rd6113, {%r3939, %r3938};
	xor.b64  	%rd6114, %rd6112, %rd6113;
	xor.b64  	%rd6115, %rd6049, %rd6012;
	and.b64  	%rd6116, %rd6086, %rd6115;
	xor.b64  	%rd6117, %rd6116, %rd6012;
	add.s64 	%rd6118, %rd6117, %rd5975;
	add.s64 	%rd6119, %rd6118, %rd6114;
	ld.const.u64 	%rd6120, [%rd5813+64];
	add.s64 	%rd6121, %rd6119, %rd6120;
	add.s64 	%rd6122, %rd6121, %rd13684;
	add.s64 	%rd6123, %rd6122, %rd5986;
	and.b64  	%rd6124, %rd6097, %rd6060;
	or.b64  	%rd6125, %rd6097, %rd6060;
	and.b64  	%rd6126, %rd6125, %rd6023;
	or.b64  	%rd6127, %rd6126, %rd6124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3940,%dummy}, %rd6097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3941}, %rd6097;
	}
	shf.r.wrap.b32 	%r3942, %r3941, %r3940, 28;
	shf.r.wrap.b32 	%r3943, %r3940, %r3941, 28;
	mov.b64 	%rd6128, {%r3943, %r3942};
	shf.l.wrap.b32 	%r3944, %r3940, %r3941, 30;
	shf.l.wrap.b32 	%r3945, %r3941, %r3940, 30;
	mov.b64 	%rd6129, {%r3945, %r3944};
	xor.b64  	%rd6130, %rd6128, %rd6129;
	shf.l.wrap.b32 	%r3946, %r3940, %r3941, 25;
	shf.l.wrap.b32 	%r3947, %r3941, %r3940, 25;
	mov.b64 	%rd6131, {%r3947, %r3946};
	xor.b64  	%rd6132, %rd6130, %rd6131;
	add.s64 	%rd6133, %rd6132, %rd6127;
	add.s64 	%rd6134, %rd6133, %rd6122;
	add.s64 	%rd6135, %rd13690, %rd13683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3948,%dummy}, %rd13685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3949}, %rd13685;
	}
	shf.r.wrap.b32 	%r3950, %r3949, %r3948, 19;
	shf.r.wrap.b32 	%r3951, %r3948, %r3949, 19;
	mov.b64 	%rd6136, {%r3951, %r3950};
	shf.l.wrap.b32 	%r3952, %r3948, %r3949, 3;
	shf.l.wrap.b32 	%r3953, %r3949, %r3948, 3;
	mov.b64 	%rd6137, {%r3953, %r3952};
	xor.b64  	%rd6138, %rd6136, %rd6137;
	shr.u64 	%rd6139, %rd13685, 6;
	xor.b64  	%rd6140, %rd6138, %rd6139;
	add.s64 	%rd6141, %rd6135, %rd6140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3954,%dummy}, %rd13682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3955}, %rd13682;
	}
	shf.r.wrap.b32 	%r3956, %r3955, %r3954, 8;
	shf.r.wrap.b32 	%r3957, %r3954, %r3955, 8;
	mov.b64 	%rd6142, {%r3957, %r3956};
	shf.r.wrap.b32 	%r3958, %r3955, %r3954, 1;
	shf.r.wrap.b32 	%r3959, %r3954, %r3955, 1;
	mov.b64 	%rd6143, {%r3959, %r3958};
	xor.b64  	%rd6144, %rd6143, %rd6142;
	shr.u64 	%rd6145, %rd13682, 7;
	xor.b64  	%rd6146, %rd6144, %rd6145;
	add.s64 	%rd13683, %rd6141, %rd6146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3960,%dummy}, %rd6123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3961}, %rd6123;
	}
	shf.r.wrap.b32 	%r3962, %r3961, %r3960, 14;
	shf.r.wrap.b32 	%r3963, %r3960, %r3961, 14;
	mov.b64 	%rd6147, {%r3963, %r3962};
	shf.r.wrap.b32 	%r3964, %r3961, %r3960, 18;
	shf.r.wrap.b32 	%r3965, %r3960, %r3961, 18;
	mov.b64 	%rd6148, {%r3965, %r3964};
	xor.b64  	%rd6149, %rd6147, %rd6148;
	shf.l.wrap.b32 	%r3966, %r3960, %r3961, 23;
	shf.l.wrap.b32 	%r3967, %r3961, %r3960, 23;
	mov.b64 	%rd6150, {%r3967, %r3966};
	xor.b64  	%rd6151, %rd6149, %rd6150;
	xor.b64  	%rd6152, %rd6086, %rd6049;
	and.b64  	%rd6153, %rd6123, %rd6152;
	xor.b64  	%rd6154, %rd6153, %rd6049;
	add.s64 	%rd6155, %rd6154, %rd6012;
	add.s64 	%rd6156, %rd6155, %rd6151;
	ld.const.u64 	%rd6157, [%rd5813+72];
	add.s64 	%rd6158, %rd6156, %rd6157;
	add.s64 	%rd6159, %rd6158, %rd13683;
	add.s64 	%rd6160, %rd6159, %rd6023;
	and.b64  	%rd6161, %rd6134, %rd6097;
	or.b64  	%rd6162, %rd6134, %rd6097;
	and.b64  	%rd6163, %rd6162, %rd6060;
	or.b64  	%rd6164, %rd6163, %rd6161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3968,%dummy}, %rd6134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3969}, %rd6134;
	}
	shf.r.wrap.b32 	%r3970, %r3969, %r3968, 28;
	shf.r.wrap.b32 	%r3971, %r3968, %r3969, 28;
	mov.b64 	%rd6165, {%r3971, %r3970};
	shf.l.wrap.b32 	%r3972, %r3968, %r3969, 30;
	shf.l.wrap.b32 	%r3973, %r3969, %r3968, 30;
	mov.b64 	%rd6166, {%r3973, %r3972};
	xor.b64  	%rd6167, %rd6165, %rd6166;
	shf.l.wrap.b32 	%r3974, %r3968, %r3969, 25;
	shf.l.wrap.b32 	%r3975, %r3969, %r3968, 25;
	mov.b64 	%rd6168, {%r3975, %r3974};
	xor.b64  	%rd6169, %rd6167, %rd6168;
	add.s64 	%rd6170, %rd6169, %rd6164;
	add.s64 	%rd6171, %rd6170, %rd6159;
	add.s64 	%rd6172, %rd13689, %rd13682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3976,%dummy}, %rd13684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3977}, %rd13684;
	}
	shf.r.wrap.b32 	%r3978, %r3977, %r3976, 19;
	shf.r.wrap.b32 	%r3979, %r3976, %r3977, 19;
	mov.b64 	%rd6173, {%r3979, %r3978};
	shf.l.wrap.b32 	%r3980, %r3976, %r3977, 3;
	shf.l.wrap.b32 	%r3981, %r3977, %r3976, 3;
	mov.b64 	%rd6174, {%r3981, %r3980};
	xor.b64  	%rd6175, %rd6173, %rd6174;
	shr.u64 	%rd6176, %rd13684, 6;
	xor.b64  	%rd6177, %rd6175, %rd6176;
	add.s64 	%rd6178, %rd6172, %rd6177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3982,%dummy}, %rd13681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3983}, %rd13681;
	}
	shf.r.wrap.b32 	%r3984, %r3983, %r3982, 8;
	shf.r.wrap.b32 	%r3985, %r3982, %r3983, 8;
	mov.b64 	%rd6179, {%r3985, %r3984};
	shf.r.wrap.b32 	%r3986, %r3983, %r3982, 1;
	shf.r.wrap.b32 	%r3987, %r3982, %r3983, 1;
	mov.b64 	%rd6180, {%r3987, %r3986};
	xor.b64  	%rd6181, %rd6180, %rd6179;
	shr.u64 	%rd6182, %rd13681, 7;
	xor.b64  	%rd6183, %rd6181, %rd6182;
	add.s64 	%rd13682, %rd6178, %rd6183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3988,%dummy}, %rd6160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3989}, %rd6160;
	}
	shf.r.wrap.b32 	%r3990, %r3989, %r3988, 14;
	shf.r.wrap.b32 	%r3991, %r3988, %r3989, 14;
	mov.b64 	%rd6184, {%r3991, %r3990};
	shf.r.wrap.b32 	%r3992, %r3989, %r3988, 18;
	shf.r.wrap.b32 	%r3993, %r3988, %r3989, 18;
	mov.b64 	%rd6185, {%r3993, %r3992};
	xor.b64  	%rd6186, %rd6184, %rd6185;
	shf.l.wrap.b32 	%r3994, %r3988, %r3989, 23;
	shf.l.wrap.b32 	%r3995, %r3989, %r3988, 23;
	mov.b64 	%rd6187, {%r3995, %r3994};
	xor.b64  	%rd6188, %rd6186, %rd6187;
	xor.b64  	%rd6189, %rd6123, %rd6086;
	and.b64  	%rd6190, %rd6160, %rd6189;
	xor.b64  	%rd6191, %rd6190, %rd6086;
	add.s64 	%rd6192, %rd6191, %rd6049;
	add.s64 	%rd6193, %rd6192, %rd6188;
	ld.const.u64 	%rd6194, [%rd5813+80];
	add.s64 	%rd6195, %rd6193, %rd6194;
	add.s64 	%rd6196, %rd6195, %rd13682;
	add.s64 	%rd6197, %rd6196, %rd6060;
	and.b64  	%rd6198, %rd6171, %rd6134;
	or.b64  	%rd6199, %rd6171, %rd6134;
	and.b64  	%rd6200, %rd6199, %rd6097;
	or.b64  	%rd6201, %rd6200, %rd6198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3996,%dummy}, %rd6171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3997}, %rd6171;
	}
	shf.r.wrap.b32 	%r3998, %r3997, %r3996, 28;
	shf.r.wrap.b32 	%r3999, %r3996, %r3997, 28;
	mov.b64 	%rd6202, {%r3999, %r3998};
	shf.l.wrap.b32 	%r4000, %r3996, %r3997, 30;
	shf.l.wrap.b32 	%r4001, %r3997, %r3996, 30;
	mov.b64 	%rd6203, {%r4001, %r4000};
	xor.b64  	%rd6204, %rd6202, %rd6203;
	shf.l.wrap.b32 	%r4002, %r3996, %r3997, 25;
	shf.l.wrap.b32 	%r4003, %r3997, %r3996, 25;
	mov.b64 	%rd6205, {%r4003, %r4002};
	xor.b64  	%rd6206, %rd6204, %rd6205;
	add.s64 	%rd6207, %rd6206, %rd6201;
	add.s64 	%rd6208, %rd6207, %rd6196;
	add.s64 	%rd6209, %rd13688, %rd13681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4004,%dummy}, %rd13683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4005}, %rd13683;
	}
	shf.r.wrap.b32 	%r4006, %r4005, %r4004, 19;
	shf.r.wrap.b32 	%r4007, %r4004, %r4005, 19;
	mov.b64 	%rd6210, {%r4007, %r4006};
	shf.l.wrap.b32 	%r4008, %r4004, %r4005, 3;
	shf.l.wrap.b32 	%r4009, %r4005, %r4004, 3;
	mov.b64 	%rd6211, {%r4009, %r4008};
	xor.b64  	%rd6212, %rd6210, %rd6211;
	shr.u64 	%rd6213, %rd13683, 6;
	xor.b64  	%rd6214, %rd6212, %rd6213;
	add.s64 	%rd6215, %rd6209, %rd6214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4010,%dummy}, %rd13680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4011}, %rd13680;
	}
	shf.r.wrap.b32 	%r4012, %r4011, %r4010, 8;
	shf.r.wrap.b32 	%r4013, %r4010, %r4011, 8;
	mov.b64 	%rd6216, {%r4013, %r4012};
	shf.r.wrap.b32 	%r4014, %r4011, %r4010, 1;
	shf.r.wrap.b32 	%r4015, %r4010, %r4011, 1;
	mov.b64 	%rd6217, {%r4015, %r4014};
	xor.b64  	%rd6218, %rd6217, %rd6216;
	shr.u64 	%rd6219, %rd13680, 7;
	xor.b64  	%rd6220, %rd6218, %rd6219;
	add.s64 	%rd13681, %rd6215, %rd6220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4016,%dummy}, %rd6197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4017}, %rd6197;
	}
	shf.r.wrap.b32 	%r4018, %r4017, %r4016, 14;
	shf.r.wrap.b32 	%r4019, %r4016, %r4017, 14;
	mov.b64 	%rd6221, {%r4019, %r4018};
	shf.r.wrap.b32 	%r4020, %r4017, %r4016, 18;
	shf.r.wrap.b32 	%r4021, %r4016, %r4017, 18;
	mov.b64 	%rd6222, {%r4021, %r4020};
	xor.b64  	%rd6223, %rd6221, %rd6222;
	shf.l.wrap.b32 	%r4022, %r4016, %r4017, 23;
	shf.l.wrap.b32 	%r4023, %r4017, %r4016, 23;
	mov.b64 	%rd6224, {%r4023, %r4022};
	xor.b64  	%rd6225, %rd6223, %rd6224;
	xor.b64  	%rd6226, %rd6160, %rd6123;
	and.b64  	%rd6227, %rd6197, %rd6226;
	xor.b64  	%rd6228, %rd6227, %rd6123;
	add.s64 	%rd6229, %rd6228, %rd6086;
	add.s64 	%rd6230, %rd6229, %rd6225;
	ld.const.u64 	%rd6231, [%rd5813+88];
	add.s64 	%rd6232, %rd6230, %rd6231;
	add.s64 	%rd6233, %rd6232, %rd13681;
	add.s64 	%rd6234, %rd6233, %rd6097;
	and.b64  	%rd6235, %rd6208, %rd6171;
	or.b64  	%rd6236, %rd6208, %rd6171;
	and.b64  	%rd6237, %rd6236, %rd6134;
	or.b64  	%rd6238, %rd6237, %rd6235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4024,%dummy}, %rd6208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4025}, %rd6208;
	}
	shf.r.wrap.b32 	%r4026, %r4025, %r4024, 28;
	shf.r.wrap.b32 	%r4027, %r4024, %r4025, 28;
	mov.b64 	%rd6239, {%r4027, %r4026};
	shf.l.wrap.b32 	%r4028, %r4024, %r4025, 30;
	shf.l.wrap.b32 	%r4029, %r4025, %r4024, 30;
	mov.b64 	%rd6240, {%r4029, %r4028};
	xor.b64  	%rd6241, %rd6239, %rd6240;
	shf.l.wrap.b32 	%r4030, %r4024, %r4025, 25;
	shf.l.wrap.b32 	%r4031, %r4025, %r4024, 25;
	mov.b64 	%rd6242, {%r4031, %r4030};
	xor.b64  	%rd6243, %rd6241, %rd6242;
	add.s64 	%rd6244, %rd6243, %rd6238;
	add.s64 	%rd6245, %rd6244, %rd6233;
	add.s64 	%rd6246, %rd13687, %rd13680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4032,%dummy}, %rd13682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4033}, %rd13682;
	}
	shf.r.wrap.b32 	%r4034, %r4033, %r4032, 19;
	shf.r.wrap.b32 	%r4035, %r4032, %r4033, 19;
	mov.b64 	%rd6247, {%r4035, %r4034};
	shf.l.wrap.b32 	%r4036, %r4032, %r4033, 3;
	shf.l.wrap.b32 	%r4037, %r4033, %r4032, 3;
	mov.b64 	%rd6248, {%r4037, %r4036};
	xor.b64  	%rd6249, %rd6247, %rd6248;
	shr.u64 	%rd6250, %rd13682, 6;
	xor.b64  	%rd6251, %rd6249, %rd6250;
	add.s64 	%rd6252, %rd6246, %rd6251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4038,%dummy}, %rd13679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4039}, %rd13679;
	}
	shf.r.wrap.b32 	%r4040, %r4039, %r4038, 8;
	shf.r.wrap.b32 	%r4041, %r4038, %r4039, 8;
	mov.b64 	%rd6253, {%r4041, %r4040};
	shf.r.wrap.b32 	%r4042, %r4039, %r4038, 1;
	shf.r.wrap.b32 	%r4043, %r4038, %r4039, 1;
	mov.b64 	%rd6254, {%r4043, %r4042};
	xor.b64  	%rd6255, %rd6254, %rd6253;
	shr.u64 	%rd6256, %rd13679, 7;
	xor.b64  	%rd6257, %rd6255, %rd6256;
	add.s64 	%rd13680, %rd6252, %rd6257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4044,%dummy}, %rd6234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4045}, %rd6234;
	}
	shf.r.wrap.b32 	%r4046, %r4045, %r4044, 14;
	shf.r.wrap.b32 	%r4047, %r4044, %r4045, 14;
	mov.b64 	%rd6258, {%r4047, %r4046};
	shf.r.wrap.b32 	%r4048, %r4045, %r4044, 18;
	shf.r.wrap.b32 	%r4049, %r4044, %r4045, 18;
	mov.b64 	%rd6259, {%r4049, %r4048};
	xor.b64  	%rd6260, %rd6258, %rd6259;
	shf.l.wrap.b32 	%r4050, %r4044, %r4045, 23;
	shf.l.wrap.b32 	%r4051, %r4045, %r4044, 23;
	mov.b64 	%rd6261, {%r4051, %r4050};
	xor.b64  	%rd6262, %rd6260, %rd6261;
	xor.b64  	%rd6263, %rd6197, %rd6160;
	and.b64  	%rd6264, %rd6234, %rd6263;
	xor.b64  	%rd6265, %rd6264, %rd6160;
	add.s64 	%rd6266, %rd6265, %rd6123;
	add.s64 	%rd6267, %rd6266, %rd6262;
	ld.const.u64 	%rd6268, [%rd5813+96];
	add.s64 	%rd6269, %rd6267, %rd6268;
	add.s64 	%rd6270, %rd6269, %rd13680;
	add.s64 	%rd13700, %rd6270, %rd6134;
	and.b64  	%rd6271, %rd6245, %rd6208;
	or.b64  	%rd6272, %rd6245, %rd6208;
	and.b64  	%rd6273, %rd6272, %rd6171;
	or.b64  	%rd6274, %rd6273, %rd6271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4052,%dummy}, %rd6245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4053}, %rd6245;
	}
	shf.r.wrap.b32 	%r4054, %r4053, %r4052, 28;
	shf.r.wrap.b32 	%r4055, %r4052, %r4053, 28;
	mov.b64 	%rd6275, {%r4055, %r4054};
	shf.l.wrap.b32 	%r4056, %r4052, %r4053, 30;
	shf.l.wrap.b32 	%r4057, %r4053, %r4052, 30;
	mov.b64 	%rd6276, {%r4057, %r4056};
	xor.b64  	%rd6277, %rd6275, %rd6276;
	shf.l.wrap.b32 	%r4058, %r4052, %r4053, 25;
	shf.l.wrap.b32 	%r4059, %r4053, %r4052, 25;
	mov.b64 	%rd6278, {%r4059, %r4058};
	xor.b64  	%rd6279, %rd6277, %rd6278;
	add.s64 	%rd6280, %rd6279, %rd6274;
	add.s64 	%rd13696, %rd6280, %rd6270;
	add.s64 	%rd6281, %rd13686, %rd13679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4060,%dummy}, %rd13681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4061}, %rd13681;
	}
	shf.r.wrap.b32 	%r4062, %r4061, %r4060, 19;
	shf.r.wrap.b32 	%r4063, %r4060, %r4061, 19;
	mov.b64 	%rd6282, {%r4063, %r4062};
	shf.l.wrap.b32 	%r4064, %r4060, %r4061, 3;
	shf.l.wrap.b32 	%r4065, %r4061, %r4060, 3;
	mov.b64 	%rd6283, {%r4065, %r4064};
	xor.b64  	%rd6284, %rd6282, %rd6283;
	shr.u64 	%rd6285, %rd13681, 6;
	xor.b64  	%rd6286, %rd6284, %rd6285;
	add.s64 	%rd6287, %rd6281, %rd6286;
	shf.r.wrap.b32 	%r4066, %r3696, %r3697, 8;
	shf.r.wrap.b32 	%r4067, %r3697, %r3696, 8;
	mov.b64 	%rd6288, {%r4067, %r4066};
	shf.r.wrap.b32 	%r4068, %r3696, %r3697, 1;
	shf.r.wrap.b32 	%r4069, %r3697, %r3696, 1;
	mov.b64 	%rd6289, {%r4069, %r4068};
	xor.b64  	%rd6290, %rd6289, %rd6288;
	shr.u64 	%rd6291, %rd13678, 7;
	xor.b64  	%rd6292, %rd6290, %rd6291;
	add.s64 	%rd13679, %rd6287, %rd6292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4070,%dummy}, %rd13700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4071}, %rd13700;
	}
	shf.r.wrap.b32 	%r4072, %r4071, %r4070, 14;
	shf.r.wrap.b32 	%r4073, %r4070, %r4071, 14;
	mov.b64 	%rd6293, {%r4073, %r4072};
	shf.r.wrap.b32 	%r4074, %r4071, %r4070, 18;
	shf.r.wrap.b32 	%r4075, %r4070, %r4071, 18;
	mov.b64 	%rd6294, {%r4075, %r4074};
	xor.b64  	%rd6295, %rd6293, %rd6294;
	shf.l.wrap.b32 	%r4076, %r4070, %r4071, 23;
	shf.l.wrap.b32 	%r4077, %r4071, %r4070, 23;
	mov.b64 	%rd6296, {%r4077, %r4076};
	xor.b64  	%rd6297, %rd6295, %rd6296;
	xor.b64  	%rd6298, %rd6234, %rd6197;
	and.b64  	%rd6299, %rd13700, %rd6298;
	xor.b64  	%rd6300, %rd6299, %rd6197;
	add.s64 	%rd6301, %rd6300, %rd6160;
	add.s64 	%rd6302, %rd6301, %rd6297;
	ld.const.u64 	%rd6303, [%rd5813+104];
	add.s64 	%rd6304, %rd6302, %rd6303;
	add.s64 	%rd6305, %rd6304, %rd13679;
	add.s64 	%rd13699, %rd6305, %rd6171;
	and.b64  	%rd6306, %rd13696, %rd6245;
	or.b64  	%rd6307, %rd13696, %rd6245;
	and.b64  	%rd6308, %rd6307, %rd6208;
	or.b64  	%rd6309, %rd6308, %rd6306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4078,%dummy}, %rd13696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4079}, %rd13696;
	}
	shf.r.wrap.b32 	%r4080, %r4079, %r4078, 28;
	shf.r.wrap.b32 	%r4081, %r4078, %r4079, 28;
	mov.b64 	%rd6310, {%r4081, %r4080};
	shf.l.wrap.b32 	%r4082, %r4078, %r4079, 30;
	shf.l.wrap.b32 	%r4083, %r4079, %r4078, 30;
	mov.b64 	%rd6311, {%r4083, %r4082};
	xor.b64  	%rd6312, %rd6310, %rd6311;
	shf.l.wrap.b32 	%r4084, %r4078, %r4079, 25;
	shf.l.wrap.b32 	%r4085, %r4079, %r4078, 25;
	mov.b64 	%rd6313, {%r4085, %r4084};
	xor.b64  	%rd6314, %rd6312, %rd6313;
	add.s64 	%rd6315, %rd6314, %rd6309;
	add.s64 	%rd13695, %rd6315, %rd6305;
	add.s64 	%rd6316, %rd13685, %rd13678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4086,%dummy}, %rd13680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4087}, %rd13680;
	}
	shf.r.wrap.b32 	%r4088, %r4087, %r4086, 19;
	shf.r.wrap.b32 	%r4089, %r4086, %r4087, 19;
	mov.b64 	%rd6317, {%r4089, %r4088};
	shf.l.wrap.b32 	%r4090, %r4086, %r4087, 3;
	shf.l.wrap.b32 	%r4091, %r4087, %r4086, 3;
	mov.b64 	%rd6318, {%r4091, %r4090};
	xor.b64  	%rd6319, %rd6317, %rd6318;
	shr.u64 	%rd6320, %rd13680, 6;
	xor.b64  	%rd6321, %rd6319, %rd6320;
	add.s64 	%rd6322, %rd6316, %rd6321;
	shf.r.wrap.b32 	%r4092, %r3724, %r3725, 8;
	shf.r.wrap.b32 	%r4093, %r3725, %r3724, 8;
	mov.b64 	%rd6323, {%r4093, %r4092};
	shf.r.wrap.b32 	%r4094, %r3724, %r3725, 1;
	shf.r.wrap.b32 	%r4095, %r3725, %r3724, 1;
	mov.b64 	%rd6324, {%r4095, %r4094};
	xor.b64  	%rd6325, %rd6324, %rd6323;
	shr.u64 	%rd6326, %rd13677, 7;
	xor.b64  	%rd6327, %rd6325, %rd6326;
	add.s64 	%rd13678, %rd6322, %rd6327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4096,%dummy}, %rd13699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4097}, %rd13699;
	}
	shf.r.wrap.b32 	%r4098, %r4097, %r4096, 14;
	shf.r.wrap.b32 	%r4099, %r4096, %r4097, 14;
	mov.b64 	%rd6328, {%r4099, %r4098};
	shf.r.wrap.b32 	%r4100, %r4097, %r4096, 18;
	shf.r.wrap.b32 	%r4101, %r4096, %r4097, 18;
	mov.b64 	%rd6329, {%r4101, %r4100};
	xor.b64  	%rd6330, %rd6328, %rd6329;
	shf.l.wrap.b32 	%r4102, %r4096, %r4097, 23;
	shf.l.wrap.b32 	%r4103, %r4097, %r4096, 23;
	mov.b64 	%rd6331, {%r4103, %r4102};
	xor.b64  	%rd6332, %rd6330, %rd6331;
	xor.b64  	%rd6333, %rd13700, %rd6234;
	and.b64  	%rd6334, %rd13699, %rd6333;
	xor.b64  	%rd6335, %rd6334, %rd6234;
	add.s64 	%rd6336, %rd6335, %rd6197;
	add.s64 	%rd6337, %rd6336, %rd6332;
	ld.const.u64 	%rd6338, [%rd5813+112];
	add.s64 	%rd6339, %rd6337, %rd6338;
	add.s64 	%rd6340, %rd6339, %rd13678;
	add.s64 	%rd13698, %rd6340, %rd6208;
	and.b64  	%rd6341, %rd13695, %rd13696;
	or.b64  	%rd6342, %rd13695, %rd13696;
	and.b64  	%rd6343, %rd6342, %rd6245;
	or.b64  	%rd6344, %rd6343, %rd6341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4104,%dummy}, %rd13695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4105}, %rd13695;
	}
	shf.r.wrap.b32 	%r4106, %r4105, %r4104, 28;
	shf.r.wrap.b32 	%r4107, %r4104, %r4105, 28;
	mov.b64 	%rd6345, {%r4107, %r4106};
	shf.l.wrap.b32 	%r4108, %r4104, %r4105, 30;
	shf.l.wrap.b32 	%r4109, %r4105, %r4104, 30;
	mov.b64 	%rd6346, {%r4109, %r4108};
	xor.b64  	%rd6347, %rd6345, %rd6346;
	shf.l.wrap.b32 	%r4110, %r4104, %r4105, 25;
	shf.l.wrap.b32 	%r4111, %r4105, %r4104, 25;
	mov.b64 	%rd6348, {%r4111, %r4110};
	xor.b64  	%rd6349, %rd6347, %rd6348;
	add.s64 	%rd6350, %rd6349, %rd6344;
	add.s64 	%rd13694, %rd6350, %rd6340;
	add.s64 	%rd6351, %rd13684, %rd13677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4112,%dummy}, %rd13679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4113}, %rd13679;
	}
	shf.r.wrap.b32 	%r4114, %r4113, %r4112, 19;
	shf.r.wrap.b32 	%r4115, %r4112, %r4113, 19;
	mov.b64 	%rd6352, {%r4115, %r4114};
	shf.l.wrap.b32 	%r4116, %r4112, %r4113, 3;
	shf.l.wrap.b32 	%r4117, %r4113, %r4112, 3;
	mov.b64 	%rd6353, {%r4117, %r4116};
	xor.b64  	%rd6354, %rd6352, %rd6353;
	shr.u64 	%rd6355, %rd13679, 6;
	xor.b64  	%rd6356, %rd6354, %rd6355;
	add.s64 	%rd6357, %rd6351, %rd6356;
	shf.r.wrap.b32 	%r4118, %r3753, %r3752, 1;
	shf.r.wrap.b32 	%r4119, %r3752, %r3753, 1;
	mov.b64 	%rd6358, {%r4119, %r4118};
	shf.r.wrap.b32 	%r4120, %r3753, %r3752, 8;
	shf.r.wrap.b32 	%r4121, %r3752, %r3753, 8;
	mov.b64 	%rd6359, {%r4121, %r4120};
	xor.b64  	%rd6360, %rd6358, %rd6359;
	shr.u64 	%rd6361, %rd13692, 7;
	xor.b64  	%rd6362, %rd6360, %rd6361;
	add.s64 	%rd13677, %rd6357, %rd6362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4122,%dummy}, %rd13698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4123}, %rd13698;
	}
	shf.r.wrap.b32 	%r4124, %r4123, %r4122, 14;
	shf.r.wrap.b32 	%r4125, %r4122, %r4123, 14;
	mov.b64 	%rd6363, {%r4125, %r4124};
	shf.r.wrap.b32 	%r4126, %r4123, %r4122, 18;
	shf.r.wrap.b32 	%r4127, %r4122, %r4123, 18;
	mov.b64 	%rd6364, {%r4127, %r4126};
	xor.b64  	%rd6365, %rd6363, %rd6364;
	shf.l.wrap.b32 	%r4128, %r4122, %r4123, 23;
	shf.l.wrap.b32 	%r4129, %r4123, %r4122, 23;
	mov.b64 	%rd6366, {%r4129, %r4128};
	xor.b64  	%rd6367, %rd6365, %rd6366;
	xor.b64  	%rd6368, %rd13699, %rd13700;
	and.b64  	%rd6369, %rd13698, %rd6368;
	xor.b64  	%rd6370, %rd6369, %rd13700;
	add.s64 	%rd6371, %rd6370, %rd6234;
	add.s64 	%rd6372, %rd6371, %rd6367;
	ld.const.u64 	%rd6373, [%rd5813+120];
	add.s64 	%rd6374, %rd6372, %rd6373;
	add.s64 	%rd6375, %rd6374, %rd13677;
	add.s64 	%rd13697, %rd6375, %rd6245;
	and.b64  	%rd6376, %rd13694, %rd13695;
	or.b64  	%rd6377, %rd13694, %rd13695;
	and.b64  	%rd6378, %rd6377, %rd13696;
	or.b64  	%rd6379, %rd6378, %rd6376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4130,%dummy}, %rd13694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4131}, %rd13694;
	}
	shf.r.wrap.b32 	%r4132, %r4131, %r4130, 28;
	shf.r.wrap.b32 	%r4133, %r4130, %r4131, 28;
	mov.b64 	%rd6380, {%r4133, %r4132};
	shf.l.wrap.b32 	%r4134, %r4130, %r4131, 30;
	shf.l.wrap.b32 	%r4135, %r4131, %r4130, 30;
	mov.b64 	%rd6381, {%r4135, %r4134};
	xor.b64  	%rd6382, %rd6380, %rd6381;
	shf.l.wrap.b32 	%r4136, %r4130, %r4131, 25;
	shf.l.wrap.b32 	%r4137, %r4131, %r4130, 25;
	mov.b64 	%rd6383, {%r4137, %r4136};
	xor.b64  	%rd6384, %rd6382, %rd6383;
	add.s64 	%rd6385, %rd6384, %rd6379;
	add.s64 	%rd13693, %rd6385, %rd6375;
	add.s32 	%r9734, %r9734, 16;
	setp.lt.u32 	%p72, %r9734, 80;
	@%p72 bra 	$L__BB0_96;

	setp.lt.u32 	%p73, %r9730, 128;
	add.s64 	%rd13668, %rd13668, %rd13693;
	mov.u64 	%rd13702, 0;
	st.local.u64 	[%rd2+-72], %rd13668;
	add.s64 	%rd13667, %rd13667, %rd13694;
	st.local.u64 	[%rd2+-64], %rd13667;
	add.s64 	%rd13666, %rd13666, %rd13695;
	st.local.u64 	[%rd2+-56], %rd13666;
	add.s64 	%rd13665, %rd13665, %rd13696;
	st.local.u64 	[%rd2+-48], %rd13665;
	add.s64 	%rd13664, %rd13664, %rd13697;
	st.local.u64 	[%rd2+-40], %rd13664;
	add.s64 	%rd13663, %rd13663, %rd13698;
	st.local.u64 	[%rd2+-32], %rd13663;
	add.s64 	%rd13662, %rd13662, %rd13699;
	st.local.u64 	[%rd2+-24], %rd13662;
	add.s64 	%rd13661, %rd13661, %rd13700;
	st.local.u64 	[%rd2+-16], %rd13661;
	st.local.u64 	[%rd2], %rd13702;
	st.local.u64 	[%rd2+8], %rd13702;
	st.local.u64 	[%rd2+16], %rd13702;
	st.local.u64 	[%rd2+24], %rd13702;
	st.local.u64 	[%rd2+32], %rd13702;
	st.local.u64 	[%rd2+40], %rd13702;
	st.local.u64 	[%rd2+48], %rd13702;
	st.local.u64 	[%rd2+56], %rd13702;
	st.local.u64 	[%rd2+64], %rd13702;
	st.local.u64 	[%rd2+72], %rd13702;
	st.local.u64 	[%rd2+80], %rd13702;
	st.local.u64 	[%rd2+88], %rd13702;
	st.local.u64 	[%rd2+96], %rd13702;
	st.local.u64 	[%rd2+104], %rd13702;
	st.local.u64 	[%rd2+112], %rd13702;
	st.local.u64 	[%rd2+120], %rd13702;
	mov.u32 	%r4138, 0;
	st.local.u32 	[%rd2+-4], %r4138;
	mov.u64 	%rd13716, %rd13702;
	@%p73 bra 	$L__BB0_99;

	mov.u64 	%rd13716, 128;
	st.local.u64 	[%rd2], %rd13716;

$L__BB0_99:
	shl.b32 	%r4139, %r9715, 3;
	cvt.u64.u32 	%rd6402, %r9715;
	shl.b64 	%rd6403, %rd6402, 59;
	shl.b64 	%rd6404, %rd6402, 43;
	and.b64  	%rd6405, %rd6404, 71776119061217280;
	or.b64  	%rd6406, %rd6405, %rd6403;
	cvt.u64.u32 	%rd6407, %r4139;
	shl.b64 	%rd6408, %rd6407, 24;
	and.b64  	%rd6409, %rd6408, 280375465082880;
	or.b64  	%rd6410, %rd6406, %rd6409;
	shl.b64 	%rd6411, %rd6407, 8;
	and.b64  	%rd6412, %rd6411, 1095216660480;
	or.b64  	%rd6413, %rd6410, %rd6412;
	st.local.u64 	[%rd2+120], %rd6413;
	mov.u64 	%rd13703, %rd13702;
	mov.u64 	%rd13704, %rd13702;
	mov.u64 	%rd13705, %rd13702;
	mov.u64 	%rd13706, %rd13702;
	mov.u64 	%rd13707, %rd13702;
	mov.u64 	%rd13708, %rd13702;
	mov.u64 	%rd13709, %rd13702;
	mov.u64 	%rd13710, %rd13702;
	mov.u64 	%rd13711, %rd13702;
	mov.u64 	%rd13712, %rd13702;
	mov.u64 	%rd13713, %rd13702;
	mov.u64 	%rd13714, %rd13702;
	mov.u64 	%rd13715, %rd13702;

$L__BB0_101:
	shl.b32 	%r4145, %r9715, 3;
	cvt.u64.u32 	%rd13725, %r4145;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4146, %temp}, %rd13716;
	}
	mov.u32 	%r4147, 291;
	mov.u32 	%r4148, 0;
	prmt.b32 	%r4149, %r4146, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4150}, %rd13716;
	}
	prmt.b32 	%r4151, %r4150, %r4148, %r4147;
	mov.b64 	%rd13740, {%r4151, %r4149};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4152, %temp}, %rd13715;
	}
	prmt.b32 	%r4153, %r4152, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4154}, %rd13715;
	}
	prmt.b32 	%r4155, %r4154, %r4148, %r4147;
	mov.b64 	%rd13739, {%r4155, %r4153};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4156, %temp}, %rd13714;
	}
	prmt.b32 	%r4157, %r4156, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4158}, %rd13714;
	}
	prmt.b32 	%r4159, %r4158, %r4148, %r4147;
	mov.b64 	%rd13738, {%r4159, %r4157};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4160, %temp}, %rd13713;
	}
	prmt.b32 	%r4161, %r4160, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4162}, %rd13713;
	}
	prmt.b32 	%r4163, %r4162, %r4148, %r4147;
	mov.b64 	%rd13737, {%r4163, %r4161};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4164, %temp}, %rd13712;
	}
	prmt.b32 	%r4165, %r4164, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4166}, %rd13712;
	}
	prmt.b32 	%r4167, %r4166, %r4148, %r4147;
	mov.b64 	%rd13736, {%r4167, %r4165};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4168, %temp}, %rd13711;
	}
	prmt.b32 	%r4169, %r4168, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4170}, %rd13711;
	}
	prmt.b32 	%r4171, %r4170, %r4148, %r4147;
	mov.b64 	%rd13735, {%r4171, %r4169};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4172, %temp}, %rd13710;
	}
	prmt.b32 	%r4173, %r4172, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4174}, %rd13710;
	}
	prmt.b32 	%r4175, %r4174, %r4148, %r4147;
	mov.b64 	%rd13734, {%r4175, %r4173};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4176, %temp}, %rd13709;
	}
	prmt.b32 	%r4177, %r4176, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4178}, %rd13709;
	}
	prmt.b32 	%r4179, %r4178, %r4148, %r4147;
	mov.b64 	%rd13733, {%r4179, %r4177};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4180, %temp}, %rd13708;
	}
	prmt.b32 	%r4181, %r4180, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4182}, %rd13708;
	}
	prmt.b32 	%r4183, %r4182, %r4148, %r4147;
	mov.b64 	%rd13732, {%r4183, %r4181};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4184, %temp}, %rd13707;
	}
	prmt.b32 	%r4185, %r4184, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4186}, %rd13707;
	}
	prmt.b32 	%r4187, %r4186, %r4148, %r4147;
	mov.b64 	%rd13731, {%r4187, %r4185};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4188, %temp}, %rd13706;
	}
	prmt.b32 	%r4189, %r4188, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4190}, %rd13706;
	}
	prmt.b32 	%r4191, %r4190, %r4148, %r4147;
	mov.b64 	%rd13730, {%r4191, %r4189};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4192, %temp}, %rd13705;
	}
	prmt.b32 	%r4193, %r4192, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4194}, %rd13705;
	}
	prmt.b32 	%r4195, %r4194, %r4148, %r4147;
	mov.b64 	%rd13729, {%r4195, %r4193};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4196, %temp}, %rd13704;
	}
	prmt.b32 	%r4197, %r4196, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4198}, %rd13704;
	}
	prmt.b32 	%r4199, %r4198, %r4148, %r4147;
	mov.b64 	%rd13728, {%r4199, %r4197};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4200, %temp}, %rd13703;
	}
	prmt.b32 	%r4201, %r4200, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4202}, %rd13703;
	}
	prmt.b32 	%r4203, %r4202, %r4148, %r4147;
	mov.b64 	%rd13727, {%r4203, %r4201};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4204, %temp}, %rd13702;
	}
	prmt.b32 	%r4205, %r4204, %r4148, %r4147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4206}, %rd13702;
	}
	prmt.b32 	%r4207, %r4206, %r4148, %r4147;
	mov.b64 	%rd13726, {%r4207, %r4205};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4208,%dummy}, %rd13664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4209}, %rd13664;
	}
	shf.r.wrap.b32 	%r4210, %r4209, %r4208, 18;
	shf.r.wrap.b32 	%r4211, %r4208, %r4209, 18;
	mov.b64 	%rd6430, {%r4211, %r4210};
	shf.r.wrap.b32 	%r4212, %r4209, %r4208, 14;
	shf.r.wrap.b32 	%r4213, %r4208, %r4209, 14;
	mov.b64 	%rd6431, {%r4213, %r4212};
	xor.b64  	%rd6432, %rd6431, %rd6430;
	shf.l.wrap.b32 	%r4214, %r4208, %r4209, 23;
	shf.l.wrap.b32 	%r4215, %r4209, %r4208, 23;
	mov.b64 	%rd6433, {%r4215, %r4214};
	xor.b64  	%rd6434, %rd6432, %rd6433;
	xor.b64  	%rd6435, %rd13663, %rd13662;
	and.b64  	%rd6436, %rd13664, %rd6435;
	xor.b64  	%rd6437, %rd6436, %rd13662;
	add.s64 	%rd6438, %rd6437, %rd13661;
	add.s64 	%rd6439, %rd6438, %rd6434;
	add.s64 	%rd6440, %rd6439, %rd13740;
	add.s64 	%rd6441, %rd6440, 4794697086780616226;
	add.s64 	%rd6442, %rd6441, %rd13665;
	or.b64  	%rd6443, %rd13668, %rd13667;
	and.b64  	%rd6444, %rd6443, %rd13666;
	and.b64  	%rd6445, %rd13668, %rd13667;
	or.b64  	%rd6446, %rd6444, %rd6445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4216}, %rd13668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4217,%dummy}, %rd13668;
	}
	shf.l.wrap.b32 	%r4218, %r4217, %r4216, 30;
	shf.l.wrap.b32 	%r4219, %r4216, %r4217, 30;
	mov.b64 	%rd6447, {%r4219, %r4218};
	shf.r.wrap.b32 	%r4220, %r4216, %r4217, 28;
	shf.r.wrap.b32 	%r4221, %r4217, %r4216, 28;
	mov.b64 	%rd6448, {%r4221, %r4220};
	xor.b64  	%rd6449, %rd6448, %rd6447;
	shf.l.wrap.b32 	%r4222, %r4217, %r4216, 25;
	shf.l.wrap.b32 	%r4223, %r4216, %r4217, 25;
	mov.b64 	%rd6450, {%r4223, %r4222};
	xor.b64  	%rd6451, %rd6449, %rd6450;
	add.s64 	%rd6452, %rd6451, %rd6446;
	add.s64 	%rd6453, %rd6452, %rd6441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4224,%dummy}, %rd6442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4225}, %rd6442;
	}
	shf.r.wrap.b32 	%r4226, %r4225, %r4224, 14;
	shf.r.wrap.b32 	%r4227, %r4224, %r4225, 14;
	mov.b64 	%rd6454, {%r4227, %r4226};
	shf.r.wrap.b32 	%r4228, %r4225, %r4224, 18;
	shf.r.wrap.b32 	%r4229, %r4224, %r4225, 18;
	mov.b64 	%rd6455, {%r4229, %r4228};
	xor.b64  	%rd6456, %rd6454, %rd6455;
	shf.l.wrap.b32 	%r4230, %r4224, %r4225, 23;
	shf.l.wrap.b32 	%r4231, %r4225, %r4224, 23;
	mov.b64 	%rd6457, {%r4231, %r4230};
	xor.b64  	%rd6458, %rd6456, %rd6457;
	xor.b64  	%rd6459, %rd13664, %rd13663;
	and.b64  	%rd6460, %rd6442, %rd6459;
	xor.b64  	%rd6461, %rd6460, %rd13663;
	add.s64 	%rd6462, %rd6461, %rd13662;
	add.s64 	%rd6463, %rd6462, %rd6458;
	add.s64 	%rd6464, %rd6463, %rd13739;
	add.s64 	%rd6465, %rd6464, 8158064640168781261;
	add.s64 	%rd6466, %rd6465, %rd13666;
	and.b64  	%rd6467, %rd6453, %rd13668;
	or.b64  	%rd6468, %rd6453, %rd13668;
	and.b64  	%rd6469, %rd6468, %rd13667;
	or.b64  	%rd6470, %rd6469, %rd6467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4232,%dummy}, %rd6453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4233}, %rd6453;
	}
	shf.r.wrap.b32 	%r4234, %r4233, %r4232, 28;
	shf.r.wrap.b32 	%r4235, %r4232, %r4233, 28;
	mov.b64 	%rd6471, {%r4235, %r4234};
	shf.l.wrap.b32 	%r4236, %r4232, %r4233, 30;
	shf.l.wrap.b32 	%r4237, %r4233, %r4232, 30;
	mov.b64 	%rd6472, {%r4237, %r4236};
	xor.b64  	%rd6473, %rd6471, %rd6472;
	shf.l.wrap.b32 	%r4238, %r4232, %r4233, 25;
	shf.l.wrap.b32 	%r4239, %r4233, %r4232, 25;
	mov.b64 	%rd6474, {%r4239, %r4238};
	xor.b64  	%rd6475, %rd6473, %rd6474;
	add.s64 	%rd6476, %rd6475, %rd6470;
	add.s64 	%rd6477, %rd6476, %rd6465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4240,%dummy}, %rd6466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4241}, %rd6466;
	}
	shf.r.wrap.b32 	%r4242, %r4241, %r4240, 14;
	shf.r.wrap.b32 	%r4243, %r4240, %r4241, 14;
	mov.b64 	%rd6478, {%r4243, %r4242};
	shf.r.wrap.b32 	%r4244, %r4241, %r4240, 18;
	shf.r.wrap.b32 	%r4245, %r4240, %r4241, 18;
	mov.b64 	%rd6479, {%r4245, %r4244};
	xor.b64  	%rd6480, %rd6478, %rd6479;
	shf.l.wrap.b32 	%r4246, %r4240, %r4241, 23;
	shf.l.wrap.b32 	%r4247, %r4241, %r4240, 23;
	mov.b64 	%rd6481, {%r4247, %r4246};
	xor.b64  	%rd6482, %rd6480, %rd6481;
	xor.b64  	%rd6483, %rd6442, %rd13664;
	and.b64  	%rd6484, %rd6466, %rd6483;
	xor.b64  	%rd6485, %rd6484, %rd13664;
	add.s64 	%rd6486, %rd6485, %rd13663;
	add.s64 	%rd6487, %rd6486, %rd6482;
	add.s64 	%rd6488, %rd6487, %rd13738;
	add.s64 	%rd6489, %rd6488, -5349999486874862801;
	add.s64 	%rd6490, %rd6489, %rd13667;
	and.b64  	%rd6491, %rd6477, %rd6453;
	or.b64  	%rd6492, %rd6477, %rd6453;
	and.b64  	%rd6493, %rd6492, %rd13668;
	or.b64  	%rd6494, %rd6493, %rd6491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4248,%dummy}, %rd6477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4249}, %rd6477;
	}
	shf.r.wrap.b32 	%r4250, %r4249, %r4248, 28;
	shf.r.wrap.b32 	%r4251, %r4248, %r4249, 28;
	mov.b64 	%rd6495, {%r4251, %r4250};
	shf.l.wrap.b32 	%r4252, %r4248, %r4249, 30;
	shf.l.wrap.b32 	%r4253, %r4249, %r4248, 30;
	mov.b64 	%rd6496, {%r4253, %r4252};
	xor.b64  	%rd6497, %rd6495, %rd6496;
	shf.l.wrap.b32 	%r4254, %r4248, %r4249, 25;
	shf.l.wrap.b32 	%r4255, %r4249, %r4248, 25;
	mov.b64 	%rd6498, {%r4255, %r4254};
	xor.b64  	%rd6499, %rd6497, %rd6498;
	add.s64 	%rd6500, %rd6499, %rd6494;
	add.s64 	%rd6501, %rd6500, %rd6489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4256,%dummy}, %rd6490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4257}, %rd6490;
	}
	shf.r.wrap.b32 	%r4258, %r4257, %r4256, 14;
	shf.r.wrap.b32 	%r4259, %r4256, %r4257, 14;
	mov.b64 	%rd6502, {%r4259, %r4258};
	shf.r.wrap.b32 	%r4260, %r4257, %r4256, 18;
	shf.r.wrap.b32 	%r4261, %r4256, %r4257, 18;
	mov.b64 	%rd6503, {%r4261, %r4260};
	xor.b64  	%rd6504, %rd6502, %rd6503;
	shf.l.wrap.b32 	%r4262, %r4256, %r4257, 23;
	shf.l.wrap.b32 	%r4263, %r4257, %r4256, 23;
	mov.b64 	%rd6505, {%r4263, %r4262};
	xor.b64  	%rd6506, %rd6504, %rd6505;
	xor.b64  	%rd6507, %rd6466, %rd6442;
	and.b64  	%rd6508, %rd6490, %rd6507;
	xor.b64  	%rd6509, %rd6508, %rd6442;
	add.s64 	%rd6510, %rd6509, %rd13664;
	add.s64 	%rd6511, %rd6510, %rd6506;
	add.s64 	%rd6512, %rd6511, %rd13737;
	add.s64 	%rd6513, %rd6512, -1606136188198331460;
	add.s64 	%rd6514, %rd6513, %rd13668;
	and.b64  	%rd6515, %rd6501, %rd6477;
	or.b64  	%rd6516, %rd6501, %rd6477;
	and.b64  	%rd6517, %rd6516, %rd6453;
	or.b64  	%rd6518, %rd6517, %rd6515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4264,%dummy}, %rd6501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4265}, %rd6501;
	}
	shf.r.wrap.b32 	%r4266, %r4265, %r4264, 28;
	shf.r.wrap.b32 	%r4267, %r4264, %r4265, 28;
	mov.b64 	%rd6519, {%r4267, %r4266};
	shf.l.wrap.b32 	%r4268, %r4264, %r4265, 30;
	shf.l.wrap.b32 	%r4269, %r4265, %r4264, 30;
	mov.b64 	%rd6520, {%r4269, %r4268};
	xor.b64  	%rd6521, %rd6519, %rd6520;
	shf.l.wrap.b32 	%r4270, %r4264, %r4265, 25;
	shf.l.wrap.b32 	%r4271, %r4265, %r4264, 25;
	mov.b64 	%rd6522, {%r4271, %r4270};
	xor.b64  	%rd6523, %rd6521, %rd6522;
	add.s64 	%rd6524, %rd6523, %rd6518;
	add.s64 	%rd6525, %rd6524, %rd6513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4272,%dummy}, %rd6514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4273}, %rd6514;
	}
	shf.r.wrap.b32 	%r4274, %r4273, %r4272, 14;
	shf.r.wrap.b32 	%r4275, %r4272, %r4273, 14;
	mov.b64 	%rd6526, {%r4275, %r4274};
	shf.r.wrap.b32 	%r4276, %r4273, %r4272, 18;
	shf.r.wrap.b32 	%r4277, %r4272, %r4273, 18;
	mov.b64 	%rd6527, {%r4277, %r4276};
	xor.b64  	%rd6528, %rd6526, %rd6527;
	shf.l.wrap.b32 	%r4278, %r4272, %r4273, 23;
	shf.l.wrap.b32 	%r4279, %r4273, %r4272, 23;
	mov.b64 	%rd6529, {%r4279, %r4278};
	xor.b64  	%rd6530, %rd6528, %rd6529;
	xor.b64  	%rd6531, %rd6490, %rd6466;
	and.b64  	%rd6532, %rd6514, %rd6531;
	xor.b64  	%rd6533, %rd6532, %rd6466;
	add.s64 	%rd6534, %rd6533, %rd6442;
	add.s64 	%rd6535, %rd6534, %rd6530;
	add.s64 	%rd6536, %rd6535, %rd13736;
	add.s64 	%rd6537, %rd6536, 4131703408338449720;
	add.s64 	%rd6538, %rd6537, %rd6453;
	and.b64  	%rd6539, %rd6525, %rd6501;
	or.b64  	%rd6540, %rd6525, %rd6501;
	and.b64  	%rd6541, %rd6540, %rd6477;
	or.b64  	%rd6542, %rd6541, %rd6539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4280,%dummy}, %rd6525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4281}, %rd6525;
	}
	shf.r.wrap.b32 	%r4282, %r4281, %r4280, 28;
	shf.r.wrap.b32 	%r4283, %r4280, %r4281, 28;
	mov.b64 	%rd6543, {%r4283, %r4282};
	shf.l.wrap.b32 	%r4284, %r4280, %r4281, 30;
	shf.l.wrap.b32 	%r4285, %r4281, %r4280, 30;
	mov.b64 	%rd6544, {%r4285, %r4284};
	xor.b64  	%rd6545, %rd6543, %rd6544;
	shf.l.wrap.b32 	%r4286, %r4280, %r4281, 25;
	shf.l.wrap.b32 	%r4287, %r4281, %r4280, 25;
	mov.b64 	%rd6546, {%r4287, %r4286};
	xor.b64  	%rd6547, %rd6545, %rd6546;
	add.s64 	%rd6548, %rd6547, %rd6542;
	add.s64 	%rd6549, %rd6548, %rd6537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4288,%dummy}, %rd6538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4289}, %rd6538;
	}
	shf.r.wrap.b32 	%r4290, %r4289, %r4288, 14;
	shf.r.wrap.b32 	%r4291, %r4288, %r4289, 14;
	mov.b64 	%rd6550, {%r4291, %r4290};
	shf.r.wrap.b32 	%r4292, %r4289, %r4288, 18;
	shf.r.wrap.b32 	%r4293, %r4288, %r4289, 18;
	mov.b64 	%rd6551, {%r4293, %r4292};
	xor.b64  	%rd6552, %rd6550, %rd6551;
	shf.l.wrap.b32 	%r4294, %r4288, %r4289, 23;
	shf.l.wrap.b32 	%r4295, %r4289, %r4288, 23;
	mov.b64 	%rd6553, {%r4295, %r4294};
	xor.b64  	%rd6554, %rd6552, %rd6553;
	xor.b64  	%rd6555, %rd6514, %rd6490;
	and.b64  	%rd6556, %rd6538, %rd6555;
	xor.b64  	%rd6557, %rd6556, %rd6490;
	add.s64 	%rd6558, %rd6557, %rd6466;
	add.s64 	%rd6559, %rd6558, %rd6554;
	add.s64 	%rd6560, %rd6559, %rd13735;
	add.s64 	%rd6561, %rd6560, 6480981068601479193;
	add.s64 	%rd6562, %rd6561, %rd6477;
	and.b64  	%rd6563, %rd6549, %rd6525;
	or.b64  	%rd6564, %rd6549, %rd6525;
	and.b64  	%rd6565, %rd6564, %rd6501;
	or.b64  	%rd6566, %rd6565, %rd6563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4296,%dummy}, %rd6549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4297}, %rd6549;
	}
	shf.r.wrap.b32 	%r4298, %r4297, %r4296, 28;
	shf.r.wrap.b32 	%r4299, %r4296, %r4297, 28;
	mov.b64 	%rd6567, {%r4299, %r4298};
	shf.l.wrap.b32 	%r4300, %r4296, %r4297, 30;
	shf.l.wrap.b32 	%r4301, %r4297, %r4296, 30;
	mov.b64 	%rd6568, {%r4301, %r4300};
	xor.b64  	%rd6569, %rd6567, %rd6568;
	shf.l.wrap.b32 	%r4302, %r4296, %r4297, 25;
	shf.l.wrap.b32 	%r4303, %r4297, %r4296, 25;
	mov.b64 	%rd6570, {%r4303, %r4302};
	xor.b64  	%rd6571, %rd6569, %rd6570;
	add.s64 	%rd6572, %rd6571, %rd6566;
	add.s64 	%rd6573, %rd6572, %rd6561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4304,%dummy}, %rd6562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4305}, %rd6562;
	}
	shf.r.wrap.b32 	%r4306, %r4305, %r4304, 14;
	shf.r.wrap.b32 	%r4307, %r4304, %r4305, 14;
	mov.b64 	%rd6574, {%r4307, %r4306};
	shf.r.wrap.b32 	%r4308, %r4305, %r4304, 18;
	shf.r.wrap.b32 	%r4309, %r4304, %r4305, 18;
	mov.b64 	%rd6575, {%r4309, %r4308};
	xor.b64  	%rd6576, %rd6574, %rd6575;
	shf.l.wrap.b32 	%r4310, %r4304, %r4305, 23;
	shf.l.wrap.b32 	%r4311, %r4305, %r4304, 23;
	mov.b64 	%rd6577, {%r4311, %r4310};
	xor.b64  	%rd6578, %rd6576, %rd6577;
	xor.b64  	%rd6579, %rd6538, %rd6514;
	and.b64  	%rd6580, %rd6562, %rd6579;
	xor.b64  	%rd6581, %rd6580, %rd6514;
	add.s64 	%rd6582, %rd6581, %rd6490;
	add.s64 	%rd6583, %rd6582, %rd6578;
	add.s64 	%rd6584, %rd6583, %rd13734;
	add.s64 	%rd6585, %rd6584, -7908458776815382629;
	add.s64 	%rd6586, %rd6585, %rd6501;
	and.b64  	%rd6587, %rd6573, %rd6549;
	or.b64  	%rd6588, %rd6573, %rd6549;
	and.b64  	%rd6589, %rd6588, %rd6525;
	or.b64  	%rd6590, %rd6589, %rd6587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4312,%dummy}, %rd6573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4313}, %rd6573;
	}
	shf.r.wrap.b32 	%r4314, %r4313, %r4312, 28;
	shf.r.wrap.b32 	%r4315, %r4312, %r4313, 28;
	mov.b64 	%rd6591, {%r4315, %r4314};
	shf.l.wrap.b32 	%r4316, %r4312, %r4313, 30;
	shf.l.wrap.b32 	%r4317, %r4313, %r4312, 30;
	mov.b64 	%rd6592, {%r4317, %r4316};
	xor.b64  	%rd6593, %rd6591, %rd6592;
	shf.l.wrap.b32 	%r4318, %r4312, %r4313, 25;
	shf.l.wrap.b32 	%r4319, %r4313, %r4312, 25;
	mov.b64 	%rd6594, {%r4319, %r4318};
	xor.b64  	%rd6595, %rd6593, %rd6594;
	add.s64 	%rd6596, %rd6595, %rd6590;
	add.s64 	%rd6597, %rd6596, %rd6585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4320,%dummy}, %rd6586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4321}, %rd6586;
	}
	shf.r.wrap.b32 	%r4322, %r4321, %r4320, 14;
	shf.r.wrap.b32 	%r4323, %r4320, %r4321, 14;
	mov.b64 	%rd6598, {%r4323, %r4322};
	shf.r.wrap.b32 	%r4324, %r4321, %r4320, 18;
	shf.r.wrap.b32 	%r4325, %r4320, %r4321, 18;
	mov.b64 	%rd6599, {%r4325, %r4324};
	xor.b64  	%rd6600, %rd6598, %rd6599;
	shf.l.wrap.b32 	%r4326, %r4320, %r4321, 23;
	shf.l.wrap.b32 	%r4327, %r4321, %r4320, 23;
	mov.b64 	%rd6601, {%r4327, %r4326};
	xor.b64  	%rd6602, %rd6600, %rd6601;
	xor.b64  	%rd6603, %rd6562, %rd6538;
	and.b64  	%rd6604, %rd6586, %rd6603;
	xor.b64  	%rd6605, %rd6604, %rd6538;
	add.s64 	%rd6606, %rd6605, %rd6514;
	add.s64 	%rd6607, %rd6606, %rd6602;
	add.s64 	%rd6608, %rd6607, %rd13733;
	add.s64 	%rd6609, %rd6608, -6116909921290321640;
	add.s64 	%rd6610, %rd6609, %rd6525;
	and.b64  	%rd6611, %rd6597, %rd6573;
	or.b64  	%rd6612, %rd6597, %rd6573;
	and.b64  	%rd6613, %rd6612, %rd6549;
	or.b64  	%rd6614, %rd6613, %rd6611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4328,%dummy}, %rd6597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4329}, %rd6597;
	}
	shf.r.wrap.b32 	%r4330, %r4329, %r4328, 28;
	shf.r.wrap.b32 	%r4331, %r4328, %r4329, 28;
	mov.b64 	%rd6615, {%r4331, %r4330};
	shf.l.wrap.b32 	%r4332, %r4328, %r4329, 30;
	shf.l.wrap.b32 	%r4333, %r4329, %r4328, 30;
	mov.b64 	%rd6616, {%r4333, %r4332};
	xor.b64  	%rd6617, %rd6615, %rd6616;
	shf.l.wrap.b32 	%r4334, %r4328, %r4329, 25;
	shf.l.wrap.b32 	%r4335, %r4329, %r4328, 25;
	mov.b64 	%rd6618, {%r4335, %r4334};
	xor.b64  	%rd6619, %rd6617, %rd6618;
	add.s64 	%rd6620, %rd6619, %rd6614;
	add.s64 	%rd6621, %rd6620, %rd6609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4336,%dummy}, %rd6610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4337}, %rd6610;
	}
	shf.r.wrap.b32 	%r4338, %r4337, %r4336, 14;
	shf.r.wrap.b32 	%r4339, %r4336, %r4337, 14;
	mov.b64 	%rd6622, {%r4339, %r4338};
	shf.r.wrap.b32 	%r4340, %r4337, %r4336, 18;
	shf.r.wrap.b32 	%r4341, %r4336, %r4337, 18;
	mov.b64 	%rd6623, {%r4341, %r4340};
	xor.b64  	%rd6624, %rd6622, %rd6623;
	shf.l.wrap.b32 	%r4342, %r4336, %r4337, 23;
	shf.l.wrap.b32 	%r4343, %r4337, %r4336, 23;
	mov.b64 	%rd6625, {%r4343, %r4342};
	xor.b64  	%rd6626, %rd6624, %rd6625;
	xor.b64  	%rd6627, %rd6586, %rd6562;
	and.b64  	%rd6628, %rd6610, %rd6627;
	xor.b64  	%rd6629, %rd6628, %rd6562;
	add.s64 	%rd6630, %rd6629, %rd6538;
	add.s64 	%rd6631, %rd6630, %rd6626;
	add.s64 	%rd6632, %rd6631, %rd13732;
	add.s64 	%rd6633, %rd6632, -2880145864133508542;
	add.s64 	%rd6634, %rd6633, %rd6549;
	and.b64  	%rd6635, %rd6621, %rd6597;
	or.b64  	%rd6636, %rd6621, %rd6597;
	and.b64  	%rd6637, %rd6636, %rd6573;
	or.b64  	%rd6638, %rd6637, %rd6635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4344,%dummy}, %rd6621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4345}, %rd6621;
	}
	shf.r.wrap.b32 	%r4346, %r4345, %r4344, 28;
	shf.r.wrap.b32 	%r4347, %r4344, %r4345, 28;
	mov.b64 	%rd6639, {%r4347, %r4346};
	shf.l.wrap.b32 	%r4348, %r4344, %r4345, 30;
	shf.l.wrap.b32 	%r4349, %r4345, %r4344, 30;
	mov.b64 	%rd6640, {%r4349, %r4348};
	xor.b64  	%rd6641, %rd6639, %rd6640;
	shf.l.wrap.b32 	%r4350, %r4344, %r4345, 25;
	shf.l.wrap.b32 	%r4351, %r4345, %r4344, 25;
	mov.b64 	%rd6642, {%r4351, %r4350};
	xor.b64  	%rd6643, %rd6641, %rd6642;
	add.s64 	%rd6644, %rd6643, %rd6638;
	add.s64 	%rd6645, %rd6644, %rd6633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4352,%dummy}, %rd6634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4353}, %rd6634;
	}
	shf.r.wrap.b32 	%r4354, %r4353, %r4352, 14;
	shf.r.wrap.b32 	%r4355, %r4352, %r4353, 14;
	mov.b64 	%rd6646, {%r4355, %r4354};
	shf.r.wrap.b32 	%r4356, %r4353, %r4352, 18;
	shf.r.wrap.b32 	%r4357, %r4352, %r4353, 18;
	mov.b64 	%rd6647, {%r4357, %r4356};
	xor.b64  	%rd6648, %rd6646, %rd6647;
	shf.l.wrap.b32 	%r4358, %r4352, %r4353, 23;
	shf.l.wrap.b32 	%r4359, %r4353, %r4352, 23;
	mov.b64 	%rd6649, {%r4359, %r4358};
	xor.b64  	%rd6650, %rd6648, %rd6649;
	xor.b64  	%rd6651, %rd6610, %rd6586;
	and.b64  	%rd6652, %rd6634, %rd6651;
	xor.b64  	%rd6653, %rd6652, %rd6586;
	add.s64 	%rd6654, %rd6653, %rd6562;
	add.s64 	%rd6655, %rd6654, %rd6650;
	add.s64 	%rd6656, %rd6655, %rd13731;
	add.s64 	%rd6657, %rd6656, 1334009975649890238;
	add.s64 	%rd6658, %rd6657, %rd6573;
	and.b64  	%rd6659, %rd6645, %rd6621;
	or.b64  	%rd6660, %rd6645, %rd6621;
	and.b64  	%rd6661, %rd6660, %rd6597;
	or.b64  	%rd6662, %rd6661, %rd6659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4360,%dummy}, %rd6645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4361}, %rd6645;
	}
	shf.r.wrap.b32 	%r4362, %r4361, %r4360, 28;
	shf.r.wrap.b32 	%r4363, %r4360, %r4361, 28;
	mov.b64 	%rd6663, {%r4363, %r4362};
	shf.l.wrap.b32 	%r4364, %r4360, %r4361, 30;
	shf.l.wrap.b32 	%r4365, %r4361, %r4360, 30;
	mov.b64 	%rd6664, {%r4365, %r4364};
	xor.b64  	%rd6665, %rd6663, %rd6664;
	shf.l.wrap.b32 	%r4366, %r4360, %r4361, 25;
	shf.l.wrap.b32 	%r4367, %r4361, %r4360, 25;
	mov.b64 	%rd6666, {%r4367, %r4366};
	xor.b64  	%rd6667, %rd6665, %rd6666;
	add.s64 	%rd6668, %rd6667, %rd6662;
	add.s64 	%rd6669, %rd6668, %rd6657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4368,%dummy}, %rd6658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4369}, %rd6658;
	}
	shf.r.wrap.b32 	%r4370, %r4369, %r4368, 14;
	shf.r.wrap.b32 	%r4371, %r4368, %r4369, 14;
	mov.b64 	%rd6670, {%r4371, %r4370};
	shf.r.wrap.b32 	%r4372, %r4369, %r4368, 18;
	shf.r.wrap.b32 	%r4373, %r4368, %r4369, 18;
	mov.b64 	%rd6671, {%r4373, %r4372};
	xor.b64  	%rd6672, %rd6670, %rd6671;
	shf.l.wrap.b32 	%r4374, %r4368, %r4369, 23;
	shf.l.wrap.b32 	%r4375, %r4369, %r4368, 23;
	mov.b64 	%rd6673, {%r4375, %r4374};
	xor.b64  	%rd6674, %rd6672, %rd6673;
	xor.b64  	%rd6675, %rd6634, %rd6610;
	and.b64  	%rd6676, %rd6658, %rd6675;
	xor.b64  	%rd6677, %rd6676, %rd6610;
	add.s64 	%rd6678, %rd6677, %rd6586;
	add.s64 	%rd6679, %rd6678, %rd6674;
	add.s64 	%rd6680, %rd6679, %rd13730;
	add.s64 	%rd6681, %rd6680, 2608012711638119052;
	add.s64 	%rd6682, %rd6681, %rd6597;
	and.b64  	%rd6683, %rd6669, %rd6645;
	or.b64  	%rd6684, %rd6669, %rd6645;
	and.b64  	%rd6685, %rd6684, %rd6621;
	or.b64  	%rd6686, %rd6685, %rd6683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4376,%dummy}, %rd6669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4377}, %rd6669;
	}
	shf.r.wrap.b32 	%r4378, %r4377, %r4376, 28;
	shf.r.wrap.b32 	%r4379, %r4376, %r4377, 28;
	mov.b64 	%rd6687, {%r4379, %r4378};
	shf.l.wrap.b32 	%r4380, %r4376, %r4377, 30;
	shf.l.wrap.b32 	%r4381, %r4377, %r4376, 30;
	mov.b64 	%rd6688, {%r4381, %r4380};
	xor.b64  	%rd6689, %rd6687, %rd6688;
	shf.l.wrap.b32 	%r4382, %r4376, %r4377, 25;
	shf.l.wrap.b32 	%r4383, %r4377, %r4376, 25;
	mov.b64 	%rd6690, {%r4383, %r4382};
	xor.b64  	%rd6691, %rd6689, %rd6690;
	add.s64 	%rd6692, %rd6691, %rd6686;
	add.s64 	%rd6693, %rd6692, %rd6681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4384,%dummy}, %rd6682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4385}, %rd6682;
	}
	shf.r.wrap.b32 	%r4386, %r4385, %r4384, 14;
	shf.r.wrap.b32 	%r4387, %r4384, %r4385, 14;
	mov.b64 	%rd6694, {%r4387, %r4386};
	shf.r.wrap.b32 	%r4388, %r4385, %r4384, 18;
	shf.r.wrap.b32 	%r4389, %r4384, %r4385, 18;
	mov.b64 	%rd6695, {%r4389, %r4388};
	xor.b64  	%rd6696, %rd6694, %rd6695;
	shf.l.wrap.b32 	%r4390, %r4384, %r4385, 23;
	shf.l.wrap.b32 	%r4391, %r4385, %r4384, 23;
	mov.b64 	%rd6697, {%r4391, %r4390};
	xor.b64  	%rd6698, %rd6696, %rd6697;
	xor.b64  	%rd6699, %rd6658, %rd6634;
	and.b64  	%rd6700, %rd6682, %rd6699;
	xor.b64  	%rd6701, %rd6700, %rd6634;
	add.s64 	%rd6702, %rd6701, %rd6610;
	add.s64 	%rd6703, %rd6702, %rd6698;
	add.s64 	%rd6704, %rd6703, %rd13729;
	add.s64 	%rd6705, %rd6704, 6128411473006802146;
	add.s64 	%rd6706, %rd6705, %rd6621;
	and.b64  	%rd6707, %rd6693, %rd6669;
	or.b64  	%rd6708, %rd6693, %rd6669;
	and.b64  	%rd6709, %rd6708, %rd6645;
	or.b64  	%rd6710, %rd6709, %rd6707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4392,%dummy}, %rd6693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4393}, %rd6693;
	}
	shf.r.wrap.b32 	%r4394, %r4393, %r4392, 28;
	shf.r.wrap.b32 	%r4395, %r4392, %r4393, 28;
	mov.b64 	%rd6711, {%r4395, %r4394};
	shf.l.wrap.b32 	%r4396, %r4392, %r4393, 30;
	shf.l.wrap.b32 	%r4397, %r4393, %r4392, 30;
	mov.b64 	%rd6712, {%r4397, %r4396};
	xor.b64  	%rd6713, %rd6711, %rd6712;
	shf.l.wrap.b32 	%r4398, %r4392, %r4393, 25;
	shf.l.wrap.b32 	%r4399, %r4393, %r4392, 25;
	mov.b64 	%rd6714, {%r4399, %r4398};
	xor.b64  	%rd6715, %rd6713, %rd6714;
	add.s64 	%rd6716, %rd6715, %rd6710;
	add.s64 	%rd6717, %rd6716, %rd6705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4400,%dummy}, %rd6706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4401}, %rd6706;
	}
	shf.r.wrap.b32 	%r4402, %r4401, %r4400, 14;
	shf.r.wrap.b32 	%r4403, %r4400, %r4401, 14;
	mov.b64 	%rd6718, {%r4403, %r4402};
	shf.r.wrap.b32 	%r4404, %r4401, %r4400, 18;
	shf.r.wrap.b32 	%r4405, %r4400, %r4401, 18;
	mov.b64 	%rd6719, {%r4405, %r4404};
	xor.b64  	%rd6720, %rd6718, %rd6719;
	shf.l.wrap.b32 	%r4406, %r4400, %r4401, 23;
	shf.l.wrap.b32 	%r4407, %r4401, %r4400, 23;
	mov.b64 	%rd6721, {%r4407, %r4406};
	xor.b64  	%rd6722, %rd6720, %rd6721;
	xor.b64  	%rd6723, %rd6682, %rd6658;
	and.b64  	%rd6724, %rd6706, %rd6723;
	xor.b64  	%rd6725, %rd6724, %rd6658;
	add.s64 	%rd6726, %rd6725, %rd6634;
	add.s64 	%rd6727, %rd6726, %rd6722;
	add.s64 	%rd6728, %rd6727, %rd13728;
	add.s64 	%rd6729, %rd6728, 8268148722764581231;
	add.s64 	%rd13748, %rd6729, %rd6645;
	and.b64  	%rd6730, %rd6717, %rd6693;
	or.b64  	%rd6731, %rd6717, %rd6693;
	and.b64  	%rd6732, %rd6731, %rd6669;
	or.b64  	%rd6733, %rd6732, %rd6730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4408,%dummy}, %rd6717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4409}, %rd6717;
	}
	shf.r.wrap.b32 	%r4410, %r4409, %r4408, 28;
	shf.r.wrap.b32 	%r4411, %r4408, %r4409, 28;
	mov.b64 	%rd6734, {%r4411, %r4410};
	shf.l.wrap.b32 	%r4412, %r4408, %r4409, 30;
	shf.l.wrap.b32 	%r4413, %r4409, %r4408, 30;
	mov.b64 	%rd6735, {%r4413, %r4412};
	xor.b64  	%rd6736, %rd6734, %rd6735;
	shf.l.wrap.b32 	%r4414, %r4408, %r4409, 25;
	shf.l.wrap.b32 	%r4415, %r4409, %r4408, 25;
	mov.b64 	%rd6737, {%r4415, %r4414};
	xor.b64  	%rd6738, %rd6736, %rd6737;
	add.s64 	%rd6739, %rd6738, %rd6733;
	add.s64 	%rd13744, %rd6739, %rd6729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4416,%dummy}, %rd13748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4417}, %rd13748;
	}
	shf.r.wrap.b32 	%r4418, %r4417, %r4416, 14;
	shf.r.wrap.b32 	%r4419, %r4416, %r4417, 14;
	mov.b64 	%rd6740, {%r4419, %r4418};
	shf.r.wrap.b32 	%r4420, %r4417, %r4416, 18;
	shf.r.wrap.b32 	%r4421, %r4416, %r4417, 18;
	mov.b64 	%rd6741, {%r4421, %r4420};
	xor.b64  	%rd6742, %rd6740, %rd6741;
	shf.l.wrap.b32 	%r4422, %r4416, %r4417, 23;
	shf.l.wrap.b32 	%r4423, %r4417, %r4416, 23;
	mov.b64 	%rd6743, {%r4423, %r4422};
	xor.b64  	%rd6744, %rd6742, %rd6743;
	xor.b64  	%rd6745, %rd6706, %rd6682;
	and.b64  	%rd6746, %rd13748, %rd6745;
	xor.b64  	%rd6747, %rd6746, %rd6682;
	add.s64 	%rd6748, %rd6747, %rd6658;
	add.s64 	%rd6749, %rd6748, %rd6744;
	add.s64 	%rd6750, %rd6749, %rd13727;
	add.s64 	%rd6751, %rd6750, -9160688886553864527;
	add.s64 	%rd13747, %rd6751, %rd6669;
	and.b64  	%rd6752, %rd13744, %rd6717;
	or.b64  	%rd6753, %rd13744, %rd6717;
	and.b64  	%rd6754, %rd6753, %rd6693;
	or.b64  	%rd6755, %rd6754, %rd6752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4424,%dummy}, %rd13744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4425}, %rd13744;
	}
	shf.r.wrap.b32 	%r4426, %r4425, %r4424, 28;
	shf.r.wrap.b32 	%r4427, %r4424, %r4425, 28;
	mov.b64 	%rd6756, {%r4427, %r4426};
	shf.l.wrap.b32 	%r4428, %r4424, %r4425, 30;
	shf.l.wrap.b32 	%r4429, %r4425, %r4424, 30;
	mov.b64 	%rd6757, {%r4429, %r4428};
	xor.b64  	%rd6758, %rd6756, %rd6757;
	shf.l.wrap.b32 	%r4430, %r4424, %r4425, 25;
	shf.l.wrap.b32 	%r4431, %r4425, %r4424, 25;
	mov.b64 	%rd6759, {%r4431, %r4430};
	xor.b64  	%rd6760, %rd6758, %rd6759;
	add.s64 	%rd6761, %rd6760, %rd6755;
	add.s64 	%rd13743, %rd6761, %rd6751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4432,%dummy}, %rd13747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4433}, %rd13747;
	}
	shf.r.wrap.b32 	%r4434, %r4433, %r4432, 14;
	shf.r.wrap.b32 	%r4435, %r4432, %r4433, 14;
	mov.b64 	%rd6762, {%r4435, %r4434};
	shf.r.wrap.b32 	%r4436, %r4433, %r4432, 18;
	shf.r.wrap.b32 	%r4437, %r4432, %r4433, 18;
	mov.b64 	%rd6763, {%r4437, %r4436};
	xor.b64  	%rd6764, %rd6762, %rd6763;
	shf.l.wrap.b32 	%r4438, %r4432, %r4433, 23;
	shf.l.wrap.b32 	%r4439, %r4433, %r4432, 23;
	mov.b64 	%rd6765, {%r4439, %r4438};
	xor.b64  	%rd6766, %rd6764, %rd6765;
	xor.b64  	%rd6767, %rd13748, %rd6706;
	and.b64  	%rd6768, %rd13747, %rd6767;
	xor.b64  	%rd6769, %rd6768, %rd6706;
	add.s64 	%rd6770, %rd6769, %rd6682;
	add.s64 	%rd6771, %rd6770, %rd6766;
	add.s64 	%rd6772, %rd6771, %rd13726;
	add.s64 	%rd6773, %rd6772, -7215885187991268811;
	add.s64 	%rd13746, %rd6773, %rd6693;
	and.b64  	%rd6774, %rd13743, %rd13744;
	or.b64  	%rd6775, %rd13743, %rd13744;
	and.b64  	%rd6776, %rd6775, %rd6717;
	or.b64  	%rd6777, %rd6776, %rd6774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4440,%dummy}, %rd13743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4441}, %rd13743;
	}
	shf.r.wrap.b32 	%r4442, %r4441, %r4440, 28;
	shf.r.wrap.b32 	%r4443, %r4440, %r4441, 28;
	mov.b64 	%rd6778, {%r4443, %r4442};
	shf.l.wrap.b32 	%r4444, %r4440, %r4441, 30;
	shf.l.wrap.b32 	%r4445, %r4441, %r4440, 30;
	mov.b64 	%rd6779, {%r4445, %r4444};
	xor.b64  	%rd6780, %rd6778, %rd6779;
	shf.l.wrap.b32 	%r4446, %r4440, %r4441, 25;
	shf.l.wrap.b32 	%r4447, %r4441, %r4440, 25;
	mov.b64 	%rd6781, {%r4447, %r4446};
	xor.b64  	%rd6782, %rd6780, %rd6781;
	add.s64 	%rd6783, %rd6782, %rd6777;
	add.s64 	%rd13742, %rd6783, %rd6773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4448,%dummy}, %rd13746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4449}, %rd13746;
	}
	shf.r.wrap.b32 	%r4450, %r4449, %r4448, 14;
	shf.r.wrap.b32 	%r4451, %r4448, %r4449, 14;
	mov.b64 	%rd6784, {%r4451, %r4450};
	shf.r.wrap.b32 	%r4452, %r4449, %r4448, 18;
	shf.r.wrap.b32 	%r4453, %r4448, %r4449, 18;
	mov.b64 	%rd6785, {%r4453, %r4452};
	xor.b64  	%rd6786, %rd6784, %rd6785;
	shf.l.wrap.b32 	%r4454, %r4448, %r4449, 23;
	shf.l.wrap.b32 	%r4455, %r4449, %r4448, 23;
	mov.b64 	%rd6787, {%r4455, %r4454};
	xor.b64  	%rd6788, %rd6786, %rd6787;
	xor.b64  	%rd6789, %rd13747, %rd13748;
	and.b64  	%rd6790, %rd13746, %rd6789;
	xor.b64  	%rd6791, %rd6790, %rd13748;
	add.s64 	%rd6792, %rd6791, %rd6706;
	add.s64 	%rd6793, %rd6792, %rd6788;
	add.s64 	%rd6794, %rd6793, %rd13725;
	add.s64 	%rd6795, %rd6794, -4495734319001033068;
	add.s64 	%rd13745, %rd6795, %rd6717;
	and.b64  	%rd6796, %rd13742, %rd13743;
	or.b64  	%rd6797, %rd13742, %rd13743;
	and.b64  	%rd6798, %rd6797, %rd13744;
	or.b64  	%rd6799, %rd6798, %rd6796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4456,%dummy}, %rd13742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4457}, %rd13742;
	}
	shf.r.wrap.b32 	%r4458, %r4457, %r4456, 28;
	shf.r.wrap.b32 	%r4459, %r4456, %r4457, 28;
	mov.b64 	%rd6800, {%r4459, %r4458};
	shf.l.wrap.b32 	%r4460, %r4456, %r4457, 30;
	shf.l.wrap.b32 	%r4461, %r4457, %r4456, 30;
	mov.b64 	%rd6801, {%r4461, %r4460};
	xor.b64  	%rd6802, %rd6800, %rd6801;
	shf.l.wrap.b32 	%r4462, %r4456, %r4457, 25;
	shf.l.wrap.b32 	%r4463, %r4457, %r4456, 25;
	mov.b64 	%rd6803, {%r4463, %r4462};
	xor.b64  	%rd6804, %rd6802, %rd6803;
	add.s64 	%rd6805, %rd6804, %rd6799;
	add.s64 	%rd13741, %rd6805, %rd6795;
	mov.u32 	%r9735, 16;

$L__BB0_102:
	.pragma "nounroll";
	mov.u64 	%rd13508, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4464}, %rd13726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4465,%dummy}, %rd13726;
	}
	shf.l.wrap.b32 	%r4466, %r4465, %r4464, 3;
	shf.l.wrap.b32 	%r4467, %r4464, %r4465, 3;
	mov.b64 	%rd6806, {%r4467, %r4466};
	shf.r.wrap.b32 	%r4468, %r4464, %r4465, 19;
	shf.r.wrap.b32 	%r4469, %r4465, %r4464, 19;
	mov.b64 	%rd6807, {%r4469, %r4468};
	xor.b64  	%rd6808, %rd6807, %rd6806;
	shr.u64 	%rd6809, %rd13726, 6;
	xor.b64  	%rd6810, %rd6808, %rd6809;
	add.s64 	%rd6811, %rd13731, %rd13740;
	add.s64 	%rd6812, %rd6811, %rd6810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4470,%dummy}, %rd13739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4471}, %rd13739;
	}
	shf.r.wrap.b32 	%r4472, %r4471, %r4470, 8;
	shf.r.wrap.b32 	%r4473, %r4470, %r4471, 8;
	mov.b64 	%rd6813, {%r4473, %r4472};
	shf.r.wrap.b32 	%r4474, %r4471, %r4470, 1;
	shf.r.wrap.b32 	%r4475, %r4470, %r4471, 1;
	mov.b64 	%rd6814, {%r4475, %r4474};
	xor.b64  	%rd6815, %rd6814, %rd6813;
	shr.u64 	%rd6816, %rd13739, 7;
	xor.b64  	%rd6817, %rd6815, %rd6816;
	add.s64 	%rd13740, %rd6812, %rd6817;
	mul.wide.u32 	%rd6818, %r9735, 8;
	add.s64 	%rd6820, %rd13508, %rd6818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4476,%dummy}, %rd13745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4477}, %rd13745;
	}
	shf.r.wrap.b32 	%r4478, %r4477, %r4476, 18;
	shf.r.wrap.b32 	%r4479, %r4476, %r4477, 18;
	mov.b64 	%rd6821, {%r4479, %r4478};
	shf.r.wrap.b32 	%r4480, %r4477, %r4476, 14;
	shf.r.wrap.b32 	%r4481, %r4476, %r4477, 14;
	mov.b64 	%rd6822, {%r4481, %r4480};
	xor.b64  	%rd6823, %rd6822, %rd6821;
	shf.l.wrap.b32 	%r4482, %r4476, %r4477, 23;
	shf.l.wrap.b32 	%r4483, %r4477, %r4476, 23;
	mov.b64 	%rd6824, {%r4483, %r4482};
	xor.b64  	%rd6825, %rd6823, %rd6824;
	xor.b64  	%rd6826, %rd13746, %rd13747;
	and.b64  	%rd6827, %rd13745, %rd6826;
	xor.b64  	%rd6828, %rd6827, %rd13747;
	add.s64 	%rd6829, %rd6828, %rd13748;
	add.s64 	%rd6830, %rd6829, %rd6825;
	ld.const.u64 	%rd6831, [%rd6820];
	add.s64 	%rd6832, %rd6830, %rd6831;
	add.s64 	%rd6833, %rd6832, %rd13740;
	add.s64 	%rd6834, %rd6833, %rd13744;
	or.b64  	%rd6835, %rd13741, %rd13742;
	and.b64  	%rd6836, %rd6835, %rd13743;
	and.b64  	%rd6837, %rd13741, %rd13742;
	or.b64  	%rd6838, %rd6836, %rd6837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4484}, %rd13741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4485,%dummy}, %rd13741;
	}
	shf.l.wrap.b32 	%r4486, %r4485, %r4484, 30;
	shf.l.wrap.b32 	%r4487, %r4484, %r4485, 30;
	mov.b64 	%rd6839, {%r4487, %r4486};
	shf.r.wrap.b32 	%r4488, %r4484, %r4485, 28;
	shf.r.wrap.b32 	%r4489, %r4485, %r4484, 28;
	mov.b64 	%rd6840, {%r4489, %r4488};
	xor.b64  	%rd6841, %rd6840, %rd6839;
	shf.l.wrap.b32 	%r4490, %r4485, %r4484, 25;
	shf.l.wrap.b32 	%r4491, %r4484, %r4485, 25;
	mov.b64 	%rd6842, {%r4491, %r4490};
	xor.b64  	%rd6843, %rd6841, %rd6842;
	add.s64 	%rd6844, %rd6843, %rd6838;
	add.s64 	%rd6845, %rd6844, %rd6833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4492}, %rd13725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4493,%dummy}, %rd13725;
	}
	shf.l.wrap.b32 	%r4494, %r4493, %r4492, 3;
	shf.l.wrap.b32 	%r4495, %r4492, %r4493, 3;
	mov.b64 	%rd6846, {%r4495, %r4494};
	shf.r.wrap.b32 	%r4496, %r4492, %r4493, 19;
	shf.r.wrap.b32 	%r4497, %r4493, %r4492, 19;
	mov.b64 	%rd6847, {%r4497, %r4496};
	xor.b64  	%rd6848, %rd6847, %rd6846;
	shr.u64 	%rd6849, %rd13725, 6;
	xor.b64  	%rd6850, %rd6848, %rd6849;
	add.s64 	%rd6851, %rd13730, %rd13739;
	add.s64 	%rd6852, %rd6851, %rd6850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4498,%dummy}, %rd13738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4499}, %rd13738;
	}
	shf.r.wrap.b32 	%r4500, %r4499, %r4498, 8;
	shf.r.wrap.b32 	%r4501, %r4498, %r4499, 8;
	mov.b64 	%rd6853, {%r4501, %r4500};
	shf.r.wrap.b32 	%r4502, %r4499, %r4498, 1;
	shf.r.wrap.b32 	%r4503, %r4498, %r4499, 1;
	mov.b64 	%rd6854, {%r4503, %r4502};
	xor.b64  	%rd6855, %rd6854, %rd6853;
	shr.u64 	%rd6856, %rd13738, 7;
	xor.b64  	%rd6857, %rd6855, %rd6856;
	add.s64 	%rd13739, %rd6852, %rd6857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4504,%dummy}, %rd6834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4505}, %rd6834;
	}
	shf.r.wrap.b32 	%r4506, %r4505, %r4504, 14;
	shf.r.wrap.b32 	%r4507, %r4504, %r4505, 14;
	mov.b64 	%rd6858, {%r4507, %r4506};
	shf.r.wrap.b32 	%r4508, %r4505, %r4504, 18;
	shf.r.wrap.b32 	%r4509, %r4504, %r4505, 18;
	mov.b64 	%rd6859, {%r4509, %r4508};
	xor.b64  	%rd6860, %rd6858, %rd6859;
	shf.l.wrap.b32 	%r4510, %r4504, %r4505, 23;
	shf.l.wrap.b32 	%r4511, %r4505, %r4504, 23;
	mov.b64 	%rd6861, {%r4511, %r4510};
	xor.b64  	%rd6862, %rd6860, %rd6861;
	xor.b64  	%rd6863, %rd13745, %rd13746;
	and.b64  	%rd6864, %rd6834, %rd6863;
	xor.b64  	%rd6865, %rd6864, %rd13746;
	add.s64 	%rd6866, %rd6865, %rd13747;
	add.s64 	%rd6867, %rd6866, %rd6862;
	ld.const.u64 	%rd6868, [%rd6820+8];
	add.s64 	%rd6869, %rd6867, %rd6868;
	add.s64 	%rd6870, %rd6869, %rd13739;
	add.s64 	%rd6871, %rd6870, %rd13743;
	and.b64  	%rd6872, %rd6845, %rd13741;
	or.b64  	%rd6873, %rd6845, %rd13741;
	and.b64  	%rd6874, %rd6873, %rd13742;
	or.b64  	%rd6875, %rd6874, %rd6872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4512,%dummy}, %rd6845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4513}, %rd6845;
	}
	shf.r.wrap.b32 	%r4514, %r4513, %r4512, 28;
	shf.r.wrap.b32 	%r4515, %r4512, %r4513, 28;
	mov.b64 	%rd6876, {%r4515, %r4514};
	shf.l.wrap.b32 	%r4516, %r4512, %r4513, 30;
	shf.l.wrap.b32 	%r4517, %r4513, %r4512, 30;
	mov.b64 	%rd6877, {%r4517, %r4516};
	xor.b64  	%rd6878, %rd6876, %rd6877;
	shf.l.wrap.b32 	%r4518, %r4512, %r4513, 25;
	shf.l.wrap.b32 	%r4519, %r4513, %r4512, 25;
	mov.b64 	%rd6879, {%r4519, %r4518};
	xor.b64  	%rd6880, %rd6878, %rd6879;
	add.s64 	%rd6881, %rd6880, %rd6875;
	add.s64 	%rd6882, %rd6881, %rd6870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4520,%dummy}, %rd13740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4521}, %rd13740;
	}
	shf.r.wrap.b32 	%r4522, %r4521, %r4520, 19;
	shf.r.wrap.b32 	%r4523, %r4520, %r4521, 19;
	mov.b64 	%rd6883, {%r4523, %r4522};
	shf.l.wrap.b32 	%r4524, %r4520, %r4521, 3;
	shf.l.wrap.b32 	%r4525, %r4521, %r4520, 3;
	mov.b64 	%rd6884, {%r4525, %r4524};
	xor.b64  	%rd6885, %rd6883, %rd6884;
	shr.u64 	%rd6886, %rd13740, 6;
	xor.b64  	%rd6887, %rd6885, %rd6886;
	add.s64 	%rd6888, %rd13729, %rd13738;
	add.s64 	%rd6889, %rd6888, %rd6887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4526,%dummy}, %rd13737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4527}, %rd13737;
	}
	shf.r.wrap.b32 	%r4528, %r4527, %r4526, 8;
	shf.r.wrap.b32 	%r4529, %r4526, %r4527, 8;
	mov.b64 	%rd6890, {%r4529, %r4528};
	shf.r.wrap.b32 	%r4530, %r4527, %r4526, 1;
	shf.r.wrap.b32 	%r4531, %r4526, %r4527, 1;
	mov.b64 	%rd6891, {%r4531, %r4530};
	xor.b64  	%rd6892, %rd6891, %rd6890;
	shr.u64 	%rd6893, %rd13737, 7;
	xor.b64  	%rd6894, %rd6892, %rd6893;
	add.s64 	%rd13738, %rd6889, %rd6894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4532,%dummy}, %rd6871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4533}, %rd6871;
	}
	shf.r.wrap.b32 	%r4534, %r4533, %r4532, 14;
	shf.r.wrap.b32 	%r4535, %r4532, %r4533, 14;
	mov.b64 	%rd6895, {%r4535, %r4534};
	shf.r.wrap.b32 	%r4536, %r4533, %r4532, 18;
	shf.r.wrap.b32 	%r4537, %r4532, %r4533, 18;
	mov.b64 	%rd6896, {%r4537, %r4536};
	xor.b64  	%rd6897, %rd6895, %rd6896;
	shf.l.wrap.b32 	%r4538, %r4532, %r4533, 23;
	shf.l.wrap.b32 	%r4539, %r4533, %r4532, 23;
	mov.b64 	%rd6898, {%r4539, %r4538};
	xor.b64  	%rd6899, %rd6897, %rd6898;
	xor.b64  	%rd6900, %rd6834, %rd13745;
	and.b64  	%rd6901, %rd6871, %rd6900;
	xor.b64  	%rd6902, %rd6901, %rd13745;
	add.s64 	%rd6903, %rd6902, %rd13746;
	add.s64 	%rd6904, %rd6903, %rd6899;
	ld.const.u64 	%rd6905, [%rd6820+16];
	add.s64 	%rd6906, %rd6904, %rd6905;
	add.s64 	%rd6907, %rd6906, %rd13738;
	add.s64 	%rd6908, %rd6907, %rd13742;
	and.b64  	%rd6909, %rd6882, %rd6845;
	or.b64  	%rd6910, %rd6882, %rd6845;
	and.b64  	%rd6911, %rd6910, %rd13741;
	or.b64  	%rd6912, %rd6911, %rd6909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4540,%dummy}, %rd6882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4541}, %rd6882;
	}
	shf.r.wrap.b32 	%r4542, %r4541, %r4540, 28;
	shf.r.wrap.b32 	%r4543, %r4540, %r4541, 28;
	mov.b64 	%rd6913, {%r4543, %r4542};
	shf.l.wrap.b32 	%r4544, %r4540, %r4541, 30;
	shf.l.wrap.b32 	%r4545, %r4541, %r4540, 30;
	mov.b64 	%rd6914, {%r4545, %r4544};
	xor.b64  	%rd6915, %rd6913, %rd6914;
	shf.l.wrap.b32 	%r4546, %r4540, %r4541, 25;
	shf.l.wrap.b32 	%r4547, %r4541, %r4540, 25;
	mov.b64 	%rd6916, {%r4547, %r4546};
	xor.b64  	%rd6917, %rd6915, %rd6916;
	add.s64 	%rd6918, %rd6917, %rd6912;
	add.s64 	%rd6919, %rd6918, %rd6907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4548,%dummy}, %rd13739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4549}, %rd13739;
	}
	shf.r.wrap.b32 	%r4550, %r4549, %r4548, 19;
	shf.r.wrap.b32 	%r4551, %r4548, %r4549, 19;
	mov.b64 	%rd6920, {%r4551, %r4550};
	shf.l.wrap.b32 	%r4552, %r4548, %r4549, 3;
	shf.l.wrap.b32 	%r4553, %r4549, %r4548, 3;
	mov.b64 	%rd6921, {%r4553, %r4552};
	xor.b64  	%rd6922, %rd6920, %rd6921;
	shr.u64 	%rd6923, %rd13739, 6;
	xor.b64  	%rd6924, %rd6922, %rd6923;
	add.s64 	%rd6925, %rd13728, %rd13737;
	add.s64 	%rd6926, %rd6925, %rd6924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4554,%dummy}, %rd13736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4555}, %rd13736;
	}
	shf.r.wrap.b32 	%r4556, %r4555, %r4554, 8;
	shf.r.wrap.b32 	%r4557, %r4554, %r4555, 8;
	mov.b64 	%rd6927, {%r4557, %r4556};
	shf.r.wrap.b32 	%r4558, %r4555, %r4554, 1;
	shf.r.wrap.b32 	%r4559, %r4554, %r4555, 1;
	mov.b64 	%rd6928, {%r4559, %r4558};
	xor.b64  	%rd6929, %rd6928, %rd6927;
	shr.u64 	%rd6930, %rd13736, 7;
	xor.b64  	%rd6931, %rd6929, %rd6930;
	add.s64 	%rd13737, %rd6926, %rd6931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4560,%dummy}, %rd6908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4561}, %rd6908;
	}
	shf.r.wrap.b32 	%r4562, %r4561, %r4560, 14;
	shf.r.wrap.b32 	%r4563, %r4560, %r4561, 14;
	mov.b64 	%rd6932, {%r4563, %r4562};
	shf.r.wrap.b32 	%r4564, %r4561, %r4560, 18;
	shf.r.wrap.b32 	%r4565, %r4560, %r4561, 18;
	mov.b64 	%rd6933, {%r4565, %r4564};
	xor.b64  	%rd6934, %rd6932, %rd6933;
	shf.l.wrap.b32 	%r4566, %r4560, %r4561, 23;
	shf.l.wrap.b32 	%r4567, %r4561, %r4560, 23;
	mov.b64 	%rd6935, {%r4567, %r4566};
	xor.b64  	%rd6936, %rd6934, %rd6935;
	xor.b64  	%rd6937, %rd6871, %rd6834;
	and.b64  	%rd6938, %rd6908, %rd6937;
	xor.b64  	%rd6939, %rd6938, %rd6834;
	add.s64 	%rd6940, %rd6939, %rd13745;
	add.s64 	%rd6941, %rd6940, %rd6936;
	ld.const.u64 	%rd6942, [%rd6820+24];
	add.s64 	%rd6943, %rd6941, %rd6942;
	add.s64 	%rd6944, %rd6943, %rd13737;
	add.s64 	%rd6945, %rd6944, %rd13741;
	and.b64  	%rd6946, %rd6919, %rd6882;
	or.b64  	%rd6947, %rd6919, %rd6882;
	and.b64  	%rd6948, %rd6947, %rd6845;
	or.b64  	%rd6949, %rd6948, %rd6946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4568,%dummy}, %rd6919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4569}, %rd6919;
	}
	shf.r.wrap.b32 	%r4570, %r4569, %r4568, 28;
	shf.r.wrap.b32 	%r4571, %r4568, %r4569, 28;
	mov.b64 	%rd6950, {%r4571, %r4570};
	shf.l.wrap.b32 	%r4572, %r4568, %r4569, 30;
	shf.l.wrap.b32 	%r4573, %r4569, %r4568, 30;
	mov.b64 	%rd6951, {%r4573, %r4572};
	xor.b64  	%rd6952, %rd6950, %rd6951;
	shf.l.wrap.b32 	%r4574, %r4568, %r4569, 25;
	shf.l.wrap.b32 	%r4575, %r4569, %r4568, 25;
	mov.b64 	%rd6953, {%r4575, %r4574};
	xor.b64  	%rd6954, %rd6952, %rd6953;
	add.s64 	%rd6955, %rd6954, %rd6949;
	add.s64 	%rd6956, %rd6955, %rd6944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4576,%dummy}, %rd13738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4577}, %rd13738;
	}
	shf.r.wrap.b32 	%r4578, %r4577, %r4576, 19;
	shf.r.wrap.b32 	%r4579, %r4576, %r4577, 19;
	mov.b64 	%rd6957, {%r4579, %r4578};
	shf.l.wrap.b32 	%r4580, %r4576, %r4577, 3;
	shf.l.wrap.b32 	%r4581, %r4577, %r4576, 3;
	mov.b64 	%rd6958, {%r4581, %r4580};
	xor.b64  	%rd6959, %rd6957, %rd6958;
	shr.u64 	%rd6960, %rd13738, 6;
	xor.b64  	%rd6961, %rd6959, %rd6960;
	add.s64 	%rd6962, %rd13727, %rd13736;
	add.s64 	%rd6963, %rd6962, %rd6961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4582,%dummy}, %rd13735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4583}, %rd13735;
	}
	shf.r.wrap.b32 	%r4584, %r4583, %r4582, 8;
	shf.r.wrap.b32 	%r4585, %r4582, %r4583, 8;
	mov.b64 	%rd6964, {%r4585, %r4584};
	shf.r.wrap.b32 	%r4586, %r4583, %r4582, 1;
	shf.r.wrap.b32 	%r4587, %r4582, %r4583, 1;
	mov.b64 	%rd6965, {%r4587, %r4586};
	xor.b64  	%rd6966, %rd6965, %rd6964;
	shr.u64 	%rd6967, %rd13735, 7;
	xor.b64  	%rd6968, %rd6966, %rd6967;
	add.s64 	%rd13736, %rd6963, %rd6968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4588,%dummy}, %rd6945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4589}, %rd6945;
	}
	shf.r.wrap.b32 	%r4590, %r4589, %r4588, 14;
	shf.r.wrap.b32 	%r4591, %r4588, %r4589, 14;
	mov.b64 	%rd6969, {%r4591, %r4590};
	shf.r.wrap.b32 	%r4592, %r4589, %r4588, 18;
	shf.r.wrap.b32 	%r4593, %r4588, %r4589, 18;
	mov.b64 	%rd6970, {%r4593, %r4592};
	xor.b64  	%rd6971, %rd6969, %rd6970;
	shf.l.wrap.b32 	%r4594, %r4588, %r4589, 23;
	shf.l.wrap.b32 	%r4595, %r4589, %r4588, 23;
	mov.b64 	%rd6972, {%r4595, %r4594};
	xor.b64  	%rd6973, %rd6971, %rd6972;
	xor.b64  	%rd6974, %rd6908, %rd6871;
	and.b64  	%rd6975, %rd6945, %rd6974;
	xor.b64  	%rd6976, %rd6975, %rd6871;
	add.s64 	%rd6977, %rd6976, %rd6834;
	add.s64 	%rd6978, %rd6977, %rd6973;
	ld.const.u64 	%rd6979, [%rd6820+32];
	add.s64 	%rd6980, %rd6978, %rd6979;
	add.s64 	%rd6981, %rd6980, %rd13736;
	add.s64 	%rd6982, %rd6981, %rd6845;
	and.b64  	%rd6983, %rd6956, %rd6919;
	or.b64  	%rd6984, %rd6956, %rd6919;
	and.b64  	%rd6985, %rd6984, %rd6882;
	or.b64  	%rd6986, %rd6985, %rd6983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4596,%dummy}, %rd6956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4597}, %rd6956;
	}
	shf.r.wrap.b32 	%r4598, %r4597, %r4596, 28;
	shf.r.wrap.b32 	%r4599, %r4596, %r4597, 28;
	mov.b64 	%rd6987, {%r4599, %r4598};
	shf.l.wrap.b32 	%r4600, %r4596, %r4597, 30;
	shf.l.wrap.b32 	%r4601, %r4597, %r4596, 30;
	mov.b64 	%rd6988, {%r4601, %r4600};
	xor.b64  	%rd6989, %rd6987, %rd6988;
	shf.l.wrap.b32 	%r4602, %r4596, %r4597, 25;
	shf.l.wrap.b32 	%r4603, %r4597, %r4596, 25;
	mov.b64 	%rd6990, {%r4603, %r4602};
	xor.b64  	%rd6991, %rd6989, %rd6990;
	add.s64 	%rd6992, %rd6991, %rd6986;
	add.s64 	%rd6993, %rd6992, %rd6981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4604,%dummy}, %rd13737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4605}, %rd13737;
	}
	shf.r.wrap.b32 	%r4606, %r4605, %r4604, 19;
	shf.r.wrap.b32 	%r4607, %r4604, %r4605, 19;
	mov.b64 	%rd6994, {%r4607, %r4606};
	shf.l.wrap.b32 	%r4608, %r4604, %r4605, 3;
	shf.l.wrap.b32 	%r4609, %r4605, %r4604, 3;
	mov.b64 	%rd6995, {%r4609, %r4608};
	xor.b64  	%rd6996, %rd6994, %rd6995;
	shr.u64 	%rd6997, %rd13737, 6;
	xor.b64  	%rd6998, %rd6996, %rd6997;
	add.s64 	%rd6999, %rd13726, %rd13735;
	add.s64 	%rd7000, %rd6999, %rd6998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4610,%dummy}, %rd13734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4611}, %rd13734;
	}
	shf.r.wrap.b32 	%r4612, %r4611, %r4610, 8;
	shf.r.wrap.b32 	%r4613, %r4610, %r4611, 8;
	mov.b64 	%rd7001, {%r4613, %r4612};
	shf.r.wrap.b32 	%r4614, %r4611, %r4610, 1;
	shf.r.wrap.b32 	%r4615, %r4610, %r4611, 1;
	mov.b64 	%rd7002, {%r4615, %r4614};
	xor.b64  	%rd7003, %rd7002, %rd7001;
	shr.u64 	%rd7004, %rd13734, 7;
	xor.b64  	%rd7005, %rd7003, %rd7004;
	add.s64 	%rd13735, %rd7000, %rd7005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4616,%dummy}, %rd6982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4617}, %rd6982;
	}
	shf.r.wrap.b32 	%r4618, %r4617, %r4616, 14;
	shf.r.wrap.b32 	%r4619, %r4616, %r4617, 14;
	mov.b64 	%rd7006, {%r4619, %r4618};
	shf.r.wrap.b32 	%r4620, %r4617, %r4616, 18;
	shf.r.wrap.b32 	%r4621, %r4616, %r4617, 18;
	mov.b64 	%rd7007, {%r4621, %r4620};
	xor.b64  	%rd7008, %rd7006, %rd7007;
	shf.l.wrap.b32 	%r4622, %r4616, %r4617, 23;
	shf.l.wrap.b32 	%r4623, %r4617, %r4616, 23;
	mov.b64 	%rd7009, {%r4623, %r4622};
	xor.b64  	%rd7010, %rd7008, %rd7009;
	xor.b64  	%rd7011, %rd6945, %rd6908;
	and.b64  	%rd7012, %rd6982, %rd7011;
	xor.b64  	%rd7013, %rd7012, %rd6908;
	add.s64 	%rd7014, %rd7013, %rd6871;
	add.s64 	%rd7015, %rd7014, %rd7010;
	ld.const.u64 	%rd7016, [%rd6820+40];
	add.s64 	%rd7017, %rd7015, %rd7016;
	add.s64 	%rd7018, %rd7017, %rd13735;
	add.s64 	%rd7019, %rd7018, %rd6882;
	and.b64  	%rd7020, %rd6993, %rd6956;
	or.b64  	%rd7021, %rd6993, %rd6956;
	and.b64  	%rd7022, %rd7021, %rd6919;
	or.b64  	%rd7023, %rd7022, %rd7020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4624,%dummy}, %rd6993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4625}, %rd6993;
	}
	shf.r.wrap.b32 	%r4626, %r4625, %r4624, 28;
	shf.r.wrap.b32 	%r4627, %r4624, %r4625, 28;
	mov.b64 	%rd7024, {%r4627, %r4626};
	shf.l.wrap.b32 	%r4628, %r4624, %r4625, 30;
	shf.l.wrap.b32 	%r4629, %r4625, %r4624, 30;
	mov.b64 	%rd7025, {%r4629, %r4628};
	xor.b64  	%rd7026, %rd7024, %rd7025;
	shf.l.wrap.b32 	%r4630, %r4624, %r4625, 25;
	shf.l.wrap.b32 	%r4631, %r4625, %r4624, 25;
	mov.b64 	%rd7027, {%r4631, %r4630};
	xor.b64  	%rd7028, %rd7026, %rd7027;
	add.s64 	%rd7029, %rd7028, %rd7023;
	add.s64 	%rd7030, %rd7029, %rd7018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4632,%dummy}, %rd13736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4633}, %rd13736;
	}
	shf.r.wrap.b32 	%r4634, %r4633, %r4632, 19;
	shf.r.wrap.b32 	%r4635, %r4632, %r4633, 19;
	mov.b64 	%rd7031, {%r4635, %r4634};
	shf.l.wrap.b32 	%r4636, %r4632, %r4633, 3;
	shf.l.wrap.b32 	%r4637, %r4633, %r4632, 3;
	mov.b64 	%rd7032, {%r4637, %r4636};
	xor.b64  	%rd7033, %rd7031, %rd7032;
	shr.u64 	%rd7034, %rd13736, 6;
	xor.b64  	%rd7035, %rd7033, %rd7034;
	add.s64 	%rd7036, %rd13725, %rd13734;
	add.s64 	%rd7037, %rd7036, %rd7035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4638,%dummy}, %rd13733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4639}, %rd13733;
	}
	shf.r.wrap.b32 	%r4640, %r4639, %r4638, 8;
	shf.r.wrap.b32 	%r4641, %r4638, %r4639, 8;
	mov.b64 	%rd7038, {%r4641, %r4640};
	shf.r.wrap.b32 	%r4642, %r4639, %r4638, 1;
	shf.r.wrap.b32 	%r4643, %r4638, %r4639, 1;
	mov.b64 	%rd7039, {%r4643, %r4642};
	xor.b64  	%rd7040, %rd7039, %rd7038;
	shr.u64 	%rd7041, %rd13733, 7;
	xor.b64  	%rd7042, %rd7040, %rd7041;
	add.s64 	%rd13734, %rd7037, %rd7042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4644,%dummy}, %rd7019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4645}, %rd7019;
	}
	shf.r.wrap.b32 	%r4646, %r4645, %r4644, 14;
	shf.r.wrap.b32 	%r4647, %r4644, %r4645, 14;
	mov.b64 	%rd7043, {%r4647, %r4646};
	shf.r.wrap.b32 	%r4648, %r4645, %r4644, 18;
	shf.r.wrap.b32 	%r4649, %r4644, %r4645, 18;
	mov.b64 	%rd7044, {%r4649, %r4648};
	xor.b64  	%rd7045, %rd7043, %rd7044;
	shf.l.wrap.b32 	%r4650, %r4644, %r4645, 23;
	shf.l.wrap.b32 	%r4651, %r4645, %r4644, 23;
	mov.b64 	%rd7046, {%r4651, %r4650};
	xor.b64  	%rd7047, %rd7045, %rd7046;
	xor.b64  	%rd7048, %rd6982, %rd6945;
	and.b64  	%rd7049, %rd7019, %rd7048;
	xor.b64  	%rd7050, %rd7049, %rd6945;
	add.s64 	%rd7051, %rd7050, %rd6908;
	add.s64 	%rd7052, %rd7051, %rd7047;
	ld.const.u64 	%rd7053, [%rd6820+48];
	add.s64 	%rd7054, %rd7052, %rd7053;
	add.s64 	%rd7055, %rd7054, %rd13734;
	add.s64 	%rd7056, %rd7055, %rd6919;
	and.b64  	%rd7057, %rd7030, %rd6993;
	or.b64  	%rd7058, %rd7030, %rd6993;
	and.b64  	%rd7059, %rd7058, %rd6956;
	or.b64  	%rd7060, %rd7059, %rd7057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4652,%dummy}, %rd7030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4653}, %rd7030;
	}
	shf.r.wrap.b32 	%r4654, %r4653, %r4652, 28;
	shf.r.wrap.b32 	%r4655, %r4652, %r4653, 28;
	mov.b64 	%rd7061, {%r4655, %r4654};
	shf.l.wrap.b32 	%r4656, %r4652, %r4653, 30;
	shf.l.wrap.b32 	%r4657, %r4653, %r4652, 30;
	mov.b64 	%rd7062, {%r4657, %r4656};
	xor.b64  	%rd7063, %rd7061, %rd7062;
	shf.l.wrap.b32 	%r4658, %r4652, %r4653, 25;
	shf.l.wrap.b32 	%r4659, %r4653, %r4652, 25;
	mov.b64 	%rd7064, {%r4659, %r4658};
	xor.b64  	%rd7065, %rd7063, %rd7064;
	add.s64 	%rd7066, %rd7065, %rd7060;
	add.s64 	%rd7067, %rd7066, %rd7055;
	add.s64 	%rd7068, %rd13740, %rd13733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4660,%dummy}, %rd13735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4661}, %rd13735;
	}
	shf.r.wrap.b32 	%r4662, %r4661, %r4660, 19;
	shf.r.wrap.b32 	%r4663, %r4660, %r4661, 19;
	mov.b64 	%rd7069, {%r4663, %r4662};
	shf.l.wrap.b32 	%r4664, %r4660, %r4661, 3;
	shf.l.wrap.b32 	%r4665, %r4661, %r4660, 3;
	mov.b64 	%rd7070, {%r4665, %r4664};
	xor.b64  	%rd7071, %rd7069, %rd7070;
	shr.u64 	%rd7072, %rd13735, 6;
	xor.b64  	%rd7073, %rd7071, %rd7072;
	add.s64 	%rd7074, %rd7068, %rd7073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4666,%dummy}, %rd13732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4667}, %rd13732;
	}
	shf.r.wrap.b32 	%r4668, %r4667, %r4666, 8;
	shf.r.wrap.b32 	%r4669, %r4666, %r4667, 8;
	mov.b64 	%rd7075, {%r4669, %r4668};
	shf.r.wrap.b32 	%r4670, %r4667, %r4666, 1;
	shf.r.wrap.b32 	%r4671, %r4666, %r4667, 1;
	mov.b64 	%rd7076, {%r4671, %r4670};
	xor.b64  	%rd7077, %rd7076, %rd7075;
	shr.u64 	%rd7078, %rd13732, 7;
	xor.b64  	%rd7079, %rd7077, %rd7078;
	add.s64 	%rd13733, %rd7074, %rd7079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4672,%dummy}, %rd7056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4673}, %rd7056;
	}
	shf.r.wrap.b32 	%r4674, %r4673, %r4672, 14;
	shf.r.wrap.b32 	%r4675, %r4672, %r4673, 14;
	mov.b64 	%rd7080, {%r4675, %r4674};
	shf.r.wrap.b32 	%r4676, %r4673, %r4672, 18;
	shf.r.wrap.b32 	%r4677, %r4672, %r4673, 18;
	mov.b64 	%rd7081, {%r4677, %r4676};
	xor.b64  	%rd7082, %rd7080, %rd7081;
	shf.l.wrap.b32 	%r4678, %r4672, %r4673, 23;
	shf.l.wrap.b32 	%r4679, %r4673, %r4672, 23;
	mov.b64 	%rd7083, {%r4679, %r4678};
	xor.b64  	%rd7084, %rd7082, %rd7083;
	xor.b64  	%rd7085, %rd7019, %rd6982;
	and.b64  	%rd7086, %rd7056, %rd7085;
	xor.b64  	%rd7087, %rd7086, %rd6982;
	add.s64 	%rd7088, %rd7087, %rd6945;
	add.s64 	%rd7089, %rd7088, %rd7084;
	ld.const.u64 	%rd7090, [%rd6820+56];
	add.s64 	%rd7091, %rd7089, %rd7090;
	add.s64 	%rd7092, %rd7091, %rd13733;
	add.s64 	%rd7093, %rd7092, %rd6956;
	and.b64  	%rd7094, %rd7067, %rd7030;
	or.b64  	%rd7095, %rd7067, %rd7030;
	and.b64  	%rd7096, %rd7095, %rd6993;
	or.b64  	%rd7097, %rd7096, %rd7094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4680,%dummy}, %rd7067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4681}, %rd7067;
	}
	shf.r.wrap.b32 	%r4682, %r4681, %r4680, 28;
	shf.r.wrap.b32 	%r4683, %r4680, %r4681, 28;
	mov.b64 	%rd7098, {%r4683, %r4682};
	shf.l.wrap.b32 	%r4684, %r4680, %r4681, 30;
	shf.l.wrap.b32 	%r4685, %r4681, %r4680, 30;
	mov.b64 	%rd7099, {%r4685, %r4684};
	xor.b64  	%rd7100, %rd7098, %rd7099;
	shf.l.wrap.b32 	%r4686, %r4680, %r4681, 25;
	shf.l.wrap.b32 	%r4687, %r4681, %r4680, 25;
	mov.b64 	%rd7101, {%r4687, %r4686};
	xor.b64  	%rd7102, %rd7100, %rd7101;
	add.s64 	%rd7103, %rd7102, %rd7097;
	add.s64 	%rd7104, %rd7103, %rd7092;
	add.s64 	%rd7105, %rd13739, %rd13732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4688,%dummy}, %rd13734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4689}, %rd13734;
	}
	shf.r.wrap.b32 	%r4690, %r4689, %r4688, 19;
	shf.r.wrap.b32 	%r4691, %r4688, %r4689, 19;
	mov.b64 	%rd7106, {%r4691, %r4690};
	shf.l.wrap.b32 	%r4692, %r4688, %r4689, 3;
	shf.l.wrap.b32 	%r4693, %r4689, %r4688, 3;
	mov.b64 	%rd7107, {%r4693, %r4692};
	xor.b64  	%rd7108, %rd7106, %rd7107;
	shr.u64 	%rd7109, %rd13734, 6;
	xor.b64  	%rd7110, %rd7108, %rd7109;
	add.s64 	%rd7111, %rd7105, %rd7110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4694,%dummy}, %rd13731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4695}, %rd13731;
	}
	shf.r.wrap.b32 	%r4696, %r4695, %r4694, 8;
	shf.r.wrap.b32 	%r4697, %r4694, %r4695, 8;
	mov.b64 	%rd7112, {%r4697, %r4696};
	shf.r.wrap.b32 	%r4698, %r4695, %r4694, 1;
	shf.r.wrap.b32 	%r4699, %r4694, %r4695, 1;
	mov.b64 	%rd7113, {%r4699, %r4698};
	xor.b64  	%rd7114, %rd7113, %rd7112;
	shr.u64 	%rd7115, %rd13731, 7;
	xor.b64  	%rd7116, %rd7114, %rd7115;
	add.s64 	%rd13732, %rd7111, %rd7116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4700,%dummy}, %rd7093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4701}, %rd7093;
	}
	shf.r.wrap.b32 	%r4702, %r4701, %r4700, 14;
	shf.r.wrap.b32 	%r4703, %r4700, %r4701, 14;
	mov.b64 	%rd7117, {%r4703, %r4702};
	shf.r.wrap.b32 	%r4704, %r4701, %r4700, 18;
	shf.r.wrap.b32 	%r4705, %r4700, %r4701, 18;
	mov.b64 	%rd7118, {%r4705, %r4704};
	xor.b64  	%rd7119, %rd7117, %rd7118;
	shf.l.wrap.b32 	%r4706, %r4700, %r4701, 23;
	shf.l.wrap.b32 	%r4707, %r4701, %r4700, 23;
	mov.b64 	%rd7120, {%r4707, %r4706};
	xor.b64  	%rd7121, %rd7119, %rd7120;
	xor.b64  	%rd7122, %rd7056, %rd7019;
	and.b64  	%rd7123, %rd7093, %rd7122;
	xor.b64  	%rd7124, %rd7123, %rd7019;
	add.s64 	%rd7125, %rd7124, %rd6982;
	add.s64 	%rd7126, %rd7125, %rd7121;
	ld.const.u64 	%rd7127, [%rd6820+64];
	add.s64 	%rd7128, %rd7126, %rd7127;
	add.s64 	%rd7129, %rd7128, %rd13732;
	add.s64 	%rd7130, %rd7129, %rd6993;
	and.b64  	%rd7131, %rd7104, %rd7067;
	or.b64  	%rd7132, %rd7104, %rd7067;
	and.b64  	%rd7133, %rd7132, %rd7030;
	or.b64  	%rd7134, %rd7133, %rd7131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4708,%dummy}, %rd7104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4709}, %rd7104;
	}
	shf.r.wrap.b32 	%r4710, %r4709, %r4708, 28;
	shf.r.wrap.b32 	%r4711, %r4708, %r4709, 28;
	mov.b64 	%rd7135, {%r4711, %r4710};
	shf.l.wrap.b32 	%r4712, %r4708, %r4709, 30;
	shf.l.wrap.b32 	%r4713, %r4709, %r4708, 30;
	mov.b64 	%rd7136, {%r4713, %r4712};
	xor.b64  	%rd7137, %rd7135, %rd7136;
	shf.l.wrap.b32 	%r4714, %r4708, %r4709, 25;
	shf.l.wrap.b32 	%r4715, %r4709, %r4708, 25;
	mov.b64 	%rd7138, {%r4715, %r4714};
	xor.b64  	%rd7139, %rd7137, %rd7138;
	add.s64 	%rd7140, %rd7139, %rd7134;
	add.s64 	%rd7141, %rd7140, %rd7129;
	add.s64 	%rd7142, %rd13738, %rd13731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4716,%dummy}, %rd13733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4717}, %rd13733;
	}
	shf.r.wrap.b32 	%r4718, %r4717, %r4716, 19;
	shf.r.wrap.b32 	%r4719, %r4716, %r4717, 19;
	mov.b64 	%rd7143, {%r4719, %r4718};
	shf.l.wrap.b32 	%r4720, %r4716, %r4717, 3;
	shf.l.wrap.b32 	%r4721, %r4717, %r4716, 3;
	mov.b64 	%rd7144, {%r4721, %r4720};
	xor.b64  	%rd7145, %rd7143, %rd7144;
	shr.u64 	%rd7146, %rd13733, 6;
	xor.b64  	%rd7147, %rd7145, %rd7146;
	add.s64 	%rd7148, %rd7142, %rd7147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4722,%dummy}, %rd13730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4723}, %rd13730;
	}
	shf.r.wrap.b32 	%r4724, %r4723, %r4722, 8;
	shf.r.wrap.b32 	%r4725, %r4722, %r4723, 8;
	mov.b64 	%rd7149, {%r4725, %r4724};
	shf.r.wrap.b32 	%r4726, %r4723, %r4722, 1;
	shf.r.wrap.b32 	%r4727, %r4722, %r4723, 1;
	mov.b64 	%rd7150, {%r4727, %r4726};
	xor.b64  	%rd7151, %rd7150, %rd7149;
	shr.u64 	%rd7152, %rd13730, 7;
	xor.b64  	%rd7153, %rd7151, %rd7152;
	add.s64 	%rd13731, %rd7148, %rd7153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4728,%dummy}, %rd7130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4729}, %rd7130;
	}
	shf.r.wrap.b32 	%r4730, %r4729, %r4728, 14;
	shf.r.wrap.b32 	%r4731, %r4728, %r4729, 14;
	mov.b64 	%rd7154, {%r4731, %r4730};
	shf.r.wrap.b32 	%r4732, %r4729, %r4728, 18;
	shf.r.wrap.b32 	%r4733, %r4728, %r4729, 18;
	mov.b64 	%rd7155, {%r4733, %r4732};
	xor.b64  	%rd7156, %rd7154, %rd7155;
	shf.l.wrap.b32 	%r4734, %r4728, %r4729, 23;
	shf.l.wrap.b32 	%r4735, %r4729, %r4728, 23;
	mov.b64 	%rd7157, {%r4735, %r4734};
	xor.b64  	%rd7158, %rd7156, %rd7157;
	xor.b64  	%rd7159, %rd7093, %rd7056;
	and.b64  	%rd7160, %rd7130, %rd7159;
	xor.b64  	%rd7161, %rd7160, %rd7056;
	add.s64 	%rd7162, %rd7161, %rd7019;
	add.s64 	%rd7163, %rd7162, %rd7158;
	ld.const.u64 	%rd7164, [%rd6820+72];
	add.s64 	%rd7165, %rd7163, %rd7164;
	add.s64 	%rd7166, %rd7165, %rd13731;
	add.s64 	%rd7167, %rd7166, %rd7030;
	and.b64  	%rd7168, %rd7141, %rd7104;
	or.b64  	%rd7169, %rd7141, %rd7104;
	and.b64  	%rd7170, %rd7169, %rd7067;
	or.b64  	%rd7171, %rd7170, %rd7168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4736,%dummy}, %rd7141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4737}, %rd7141;
	}
	shf.r.wrap.b32 	%r4738, %r4737, %r4736, 28;
	shf.r.wrap.b32 	%r4739, %r4736, %r4737, 28;
	mov.b64 	%rd7172, {%r4739, %r4738};
	shf.l.wrap.b32 	%r4740, %r4736, %r4737, 30;
	shf.l.wrap.b32 	%r4741, %r4737, %r4736, 30;
	mov.b64 	%rd7173, {%r4741, %r4740};
	xor.b64  	%rd7174, %rd7172, %rd7173;
	shf.l.wrap.b32 	%r4742, %r4736, %r4737, 25;
	shf.l.wrap.b32 	%r4743, %r4737, %r4736, 25;
	mov.b64 	%rd7175, {%r4743, %r4742};
	xor.b64  	%rd7176, %rd7174, %rd7175;
	add.s64 	%rd7177, %rd7176, %rd7171;
	add.s64 	%rd7178, %rd7177, %rd7166;
	add.s64 	%rd7179, %rd13737, %rd13730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4744,%dummy}, %rd13732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4745}, %rd13732;
	}
	shf.r.wrap.b32 	%r4746, %r4745, %r4744, 19;
	shf.r.wrap.b32 	%r4747, %r4744, %r4745, 19;
	mov.b64 	%rd7180, {%r4747, %r4746};
	shf.l.wrap.b32 	%r4748, %r4744, %r4745, 3;
	shf.l.wrap.b32 	%r4749, %r4745, %r4744, 3;
	mov.b64 	%rd7181, {%r4749, %r4748};
	xor.b64  	%rd7182, %rd7180, %rd7181;
	shr.u64 	%rd7183, %rd13732, 6;
	xor.b64  	%rd7184, %rd7182, %rd7183;
	add.s64 	%rd7185, %rd7179, %rd7184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4750,%dummy}, %rd13729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4751}, %rd13729;
	}
	shf.r.wrap.b32 	%r4752, %r4751, %r4750, 8;
	shf.r.wrap.b32 	%r4753, %r4750, %r4751, 8;
	mov.b64 	%rd7186, {%r4753, %r4752};
	shf.r.wrap.b32 	%r4754, %r4751, %r4750, 1;
	shf.r.wrap.b32 	%r4755, %r4750, %r4751, 1;
	mov.b64 	%rd7187, {%r4755, %r4754};
	xor.b64  	%rd7188, %rd7187, %rd7186;
	shr.u64 	%rd7189, %rd13729, 7;
	xor.b64  	%rd7190, %rd7188, %rd7189;
	add.s64 	%rd13730, %rd7185, %rd7190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4756,%dummy}, %rd7167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4757}, %rd7167;
	}
	shf.r.wrap.b32 	%r4758, %r4757, %r4756, 14;
	shf.r.wrap.b32 	%r4759, %r4756, %r4757, 14;
	mov.b64 	%rd7191, {%r4759, %r4758};
	shf.r.wrap.b32 	%r4760, %r4757, %r4756, 18;
	shf.r.wrap.b32 	%r4761, %r4756, %r4757, 18;
	mov.b64 	%rd7192, {%r4761, %r4760};
	xor.b64  	%rd7193, %rd7191, %rd7192;
	shf.l.wrap.b32 	%r4762, %r4756, %r4757, 23;
	shf.l.wrap.b32 	%r4763, %r4757, %r4756, 23;
	mov.b64 	%rd7194, {%r4763, %r4762};
	xor.b64  	%rd7195, %rd7193, %rd7194;
	xor.b64  	%rd7196, %rd7130, %rd7093;
	and.b64  	%rd7197, %rd7167, %rd7196;
	xor.b64  	%rd7198, %rd7197, %rd7093;
	add.s64 	%rd7199, %rd7198, %rd7056;
	add.s64 	%rd7200, %rd7199, %rd7195;
	ld.const.u64 	%rd7201, [%rd6820+80];
	add.s64 	%rd7202, %rd7200, %rd7201;
	add.s64 	%rd7203, %rd7202, %rd13730;
	add.s64 	%rd7204, %rd7203, %rd7067;
	and.b64  	%rd7205, %rd7178, %rd7141;
	or.b64  	%rd7206, %rd7178, %rd7141;
	and.b64  	%rd7207, %rd7206, %rd7104;
	or.b64  	%rd7208, %rd7207, %rd7205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4764,%dummy}, %rd7178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4765}, %rd7178;
	}
	shf.r.wrap.b32 	%r4766, %r4765, %r4764, 28;
	shf.r.wrap.b32 	%r4767, %r4764, %r4765, 28;
	mov.b64 	%rd7209, {%r4767, %r4766};
	shf.l.wrap.b32 	%r4768, %r4764, %r4765, 30;
	shf.l.wrap.b32 	%r4769, %r4765, %r4764, 30;
	mov.b64 	%rd7210, {%r4769, %r4768};
	xor.b64  	%rd7211, %rd7209, %rd7210;
	shf.l.wrap.b32 	%r4770, %r4764, %r4765, 25;
	shf.l.wrap.b32 	%r4771, %r4765, %r4764, 25;
	mov.b64 	%rd7212, {%r4771, %r4770};
	xor.b64  	%rd7213, %rd7211, %rd7212;
	add.s64 	%rd7214, %rd7213, %rd7208;
	add.s64 	%rd7215, %rd7214, %rd7203;
	add.s64 	%rd7216, %rd13736, %rd13729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4772,%dummy}, %rd13731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4773}, %rd13731;
	}
	shf.r.wrap.b32 	%r4774, %r4773, %r4772, 19;
	shf.r.wrap.b32 	%r4775, %r4772, %r4773, 19;
	mov.b64 	%rd7217, {%r4775, %r4774};
	shf.l.wrap.b32 	%r4776, %r4772, %r4773, 3;
	shf.l.wrap.b32 	%r4777, %r4773, %r4772, 3;
	mov.b64 	%rd7218, {%r4777, %r4776};
	xor.b64  	%rd7219, %rd7217, %rd7218;
	shr.u64 	%rd7220, %rd13731, 6;
	xor.b64  	%rd7221, %rd7219, %rd7220;
	add.s64 	%rd7222, %rd7216, %rd7221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4778,%dummy}, %rd13728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4779}, %rd13728;
	}
	shf.r.wrap.b32 	%r4780, %r4779, %r4778, 8;
	shf.r.wrap.b32 	%r4781, %r4778, %r4779, 8;
	mov.b64 	%rd7223, {%r4781, %r4780};
	shf.r.wrap.b32 	%r4782, %r4779, %r4778, 1;
	shf.r.wrap.b32 	%r4783, %r4778, %r4779, 1;
	mov.b64 	%rd7224, {%r4783, %r4782};
	xor.b64  	%rd7225, %rd7224, %rd7223;
	shr.u64 	%rd7226, %rd13728, 7;
	xor.b64  	%rd7227, %rd7225, %rd7226;
	add.s64 	%rd13729, %rd7222, %rd7227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4784,%dummy}, %rd7204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4785}, %rd7204;
	}
	shf.r.wrap.b32 	%r4786, %r4785, %r4784, 14;
	shf.r.wrap.b32 	%r4787, %r4784, %r4785, 14;
	mov.b64 	%rd7228, {%r4787, %r4786};
	shf.r.wrap.b32 	%r4788, %r4785, %r4784, 18;
	shf.r.wrap.b32 	%r4789, %r4784, %r4785, 18;
	mov.b64 	%rd7229, {%r4789, %r4788};
	xor.b64  	%rd7230, %rd7228, %rd7229;
	shf.l.wrap.b32 	%r4790, %r4784, %r4785, 23;
	shf.l.wrap.b32 	%r4791, %r4785, %r4784, 23;
	mov.b64 	%rd7231, {%r4791, %r4790};
	xor.b64  	%rd7232, %rd7230, %rd7231;
	xor.b64  	%rd7233, %rd7167, %rd7130;
	and.b64  	%rd7234, %rd7204, %rd7233;
	xor.b64  	%rd7235, %rd7234, %rd7130;
	add.s64 	%rd7236, %rd7235, %rd7093;
	add.s64 	%rd7237, %rd7236, %rd7232;
	ld.const.u64 	%rd7238, [%rd6820+88];
	add.s64 	%rd7239, %rd7237, %rd7238;
	add.s64 	%rd7240, %rd7239, %rd13729;
	add.s64 	%rd7241, %rd7240, %rd7104;
	and.b64  	%rd7242, %rd7215, %rd7178;
	or.b64  	%rd7243, %rd7215, %rd7178;
	and.b64  	%rd7244, %rd7243, %rd7141;
	or.b64  	%rd7245, %rd7244, %rd7242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4792,%dummy}, %rd7215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4793}, %rd7215;
	}
	shf.r.wrap.b32 	%r4794, %r4793, %r4792, 28;
	shf.r.wrap.b32 	%r4795, %r4792, %r4793, 28;
	mov.b64 	%rd7246, {%r4795, %r4794};
	shf.l.wrap.b32 	%r4796, %r4792, %r4793, 30;
	shf.l.wrap.b32 	%r4797, %r4793, %r4792, 30;
	mov.b64 	%rd7247, {%r4797, %r4796};
	xor.b64  	%rd7248, %rd7246, %rd7247;
	shf.l.wrap.b32 	%r4798, %r4792, %r4793, 25;
	shf.l.wrap.b32 	%r4799, %r4793, %r4792, 25;
	mov.b64 	%rd7249, {%r4799, %r4798};
	xor.b64  	%rd7250, %rd7248, %rd7249;
	add.s64 	%rd7251, %rd7250, %rd7245;
	add.s64 	%rd7252, %rd7251, %rd7240;
	add.s64 	%rd7253, %rd13735, %rd13728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4800,%dummy}, %rd13730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4801}, %rd13730;
	}
	shf.r.wrap.b32 	%r4802, %r4801, %r4800, 19;
	shf.r.wrap.b32 	%r4803, %r4800, %r4801, 19;
	mov.b64 	%rd7254, {%r4803, %r4802};
	shf.l.wrap.b32 	%r4804, %r4800, %r4801, 3;
	shf.l.wrap.b32 	%r4805, %r4801, %r4800, 3;
	mov.b64 	%rd7255, {%r4805, %r4804};
	xor.b64  	%rd7256, %rd7254, %rd7255;
	shr.u64 	%rd7257, %rd13730, 6;
	xor.b64  	%rd7258, %rd7256, %rd7257;
	add.s64 	%rd7259, %rd7253, %rd7258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4806,%dummy}, %rd13727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4807}, %rd13727;
	}
	shf.r.wrap.b32 	%r4808, %r4807, %r4806, 8;
	shf.r.wrap.b32 	%r4809, %r4806, %r4807, 8;
	mov.b64 	%rd7260, {%r4809, %r4808};
	shf.r.wrap.b32 	%r4810, %r4807, %r4806, 1;
	shf.r.wrap.b32 	%r4811, %r4806, %r4807, 1;
	mov.b64 	%rd7261, {%r4811, %r4810};
	xor.b64  	%rd7262, %rd7261, %rd7260;
	shr.u64 	%rd7263, %rd13727, 7;
	xor.b64  	%rd7264, %rd7262, %rd7263;
	add.s64 	%rd13728, %rd7259, %rd7264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4812,%dummy}, %rd7241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4813}, %rd7241;
	}
	shf.r.wrap.b32 	%r4814, %r4813, %r4812, 14;
	shf.r.wrap.b32 	%r4815, %r4812, %r4813, 14;
	mov.b64 	%rd7265, {%r4815, %r4814};
	shf.r.wrap.b32 	%r4816, %r4813, %r4812, 18;
	shf.r.wrap.b32 	%r4817, %r4812, %r4813, 18;
	mov.b64 	%rd7266, {%r4817, %r4816};
	xor.b64  	%rd7267, %rd7265, %rd7266;
	shf.l.wrap.b32 	%r4818, %r4812, %r4813, 23;
	shf.l.wrap.b32 	%r4819, %r4813, %r4812, 23;
	mov.b64 	%rd7268, {%r4819, %r4818};
	xor.b64  	%rd7269, %rd7267, %rd7268;
	xor.b64  	%rd7270, %rd7204, %rd7167;
	and.b64  	%rd7271, %rd7241, %rd7270;
	xor.b64  	%rd7272, %rd7271, %rd7167;
	add.s64 	%rd7273, %rd7272, %rd7130;
	add.s64 	%rd7274, %rd7273, %rd7269;
	ld.const.u64 	%rd7275, [%rd6820+96];
	add.s64 	%rd7276, %rd7274, %rd7275;
	add.s64 	%rd7277, %rd7276, %rd13728;
	add.s64 	%rd13748, %rd7277, %rd7141;
	and.b64  	%rd7278, %rd7252, %rd7215;
	or.b64  	%rd7279, %rd7252, %rd7215;
	and.b64  	%rd7280, %rd7279, %rd7178;
	or.b64  	%rd7281, %rd7280, %rd7278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4820,%dummy}, %rd7252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4821}, %rd7252;
	}
	shf.r.wrap.b32 	%r4822, %r4821, %r4820, 28;
	shf.r.wrap.b32 	%r4823, %r4820, %r4821, 28;
	mov.b64 	%rd7282, {%r4823, %r4822};
	shf.l.wrap.b32 	%r4824, %r4820, %r4821, 30;
	shf.l.wrap.b32 	%r4825, %r4821, %r4820, 30;
	mov.b64 	%rd7283, {%r4825, %r4824};
	xor.b64  	%rd7284, %rd7282, %rd7283;
	shf.l.wrap.b32 	%r4826, %r4820, %r4821, 25;
	shf.l.wrap.b32 	%r4827, %r4821, %r4820, 25;
	mov.b64 	%rd7285, {%r4827, %r4826};
	xor.b64  	%rd7286, %rd7284, %rd7285;
	add.s64 	%rd7287, %rd7286, %rd7281;
	add.s64 	%rd13744, %rd7287, %rd7277;
	add.s64 	%rd7288, %rd13734, %rd13727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4828,%dummy}, %rd13729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4829}, %rd13729;
	}
	shf.r.wrap.b32 	%r4830, %r4829, %r4828, 19;
	shf.r.wrap.b32 	%r4831, %r4828, %r4829, 19;
	mov.b64 	%rd7289, {%r4831, %r4830};
	shf.l.wrap.b32 	%r4832, %r4828, %r4829, 3;
	shf.l.wrap.b32 	%r4833, %r4829, %r4828, 3;
	mov.b64 	%rd7290, {%r4833, %r4832};
	xor.b64  	%rd7291, %rd7289, %rd7290;
	shr.u64 	%rd7292, %rd13729, 6;
	xor.b64  	%rd7293, %rd7291, %rd7292;
	add.s64 	%rd7294, %rd7288, %rd7293;
	shf.r.wrap.b32 	%r4834, %r4464, %r4465, 8;
	shf.r.wrap.b32 	%r4835, %r4465, %r4464, 8;
	mov.b64 	%rd7295, {%r4835, %r4834};
	shf.r.wrap.b32 	%r4836, %r4464, %r4465, 1;
	shf.r.wrap.b32 	%r4837, %r4465, %r4464, 1;
	mov.b64 	%rd7296, {%r4837, %r4836};
	xor.b64  	%rd7297, %rd7296, %rd7295;
	shr.u64 	%rd7298, %rd13726, 7;
	xor.b64  	%rd7299, %rd7297, %rd7298;
	add.s64 	%rd13727, %rd7294, %rd7299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4838,%dummy}, %rd13748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4839}, %rd13748;
	}
	shf.r.wrap.b32 	%r4840, %r4839, %r4838, 14;
	shf.r.wrap.b32 	%r4841, %r4838, %r4839, 14;
	mov.b64 	%rd7300, {%r4841, %r4840};
	shf.r.wrap.b32 	%r4842, %r4839, %r4838, 18;
	shf.r.wrap.b32 	%r4843, %r4838, %r4839, 18;
	mov.b64 	%rd7301, {%r4843, %r4842};
	xor.b64  	%rd7302, %rd7300, %rd7301;
	shf.l.wrap.b32 	%r4844, %r4838, %r4839, 23;
	shf.l.wrap.b32 	%r4845, %r4839, %r4838, 23;
	mov.b64 	%rd7303, {%r4845, %r4844};
	xor.b64  	%rd7304, %rd7302, %rd7303;
	xor.b64  	%rd7305, %rd7241, %rd7204;
	and.b64  	%rd7306, %rd13748, %rd7305;
	xor.b64  	%rd7307, %rd7306, %rd7204;
	add.s64 	%rd7308, %rd7307, %rd7167;
	add.s64 	%rd7309, %rd7308, %rd7304;
	ld.const.u64 	%rd7310, [%rd6820+104];
	add.s64 	%rd7311, %rd7309, %rd7310;
	add.s64 	%rd7312, %rd7311, %rd13727;
	add.s64 	%rd13747, %rd7312, %rd7178;
	and.b64  	%rd7313, %rd13744, %rd7252;
	or.b64  	%rd7314, %rd13744, %rd7252;
	and.b64  	%rd7315, %rd7314, %rd7215;
	or.b64  	%rd7316, %rd7315, %rd7313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4846,%dummy}, %rd13744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4847}, %rd13744;
	}
	shf.r.wrap.b32 	%r4848, %r4847, %r4846, 28;
	shf.r.wrap.b32 	%r4849, %r4846, %r4847, 28;
	mov.b64 	%rd7317, {%r4849, %r4848};
	shf.l.wrap.b32 	%r4850, %r4846, %r4847, 30;
	shf.l.wrap.b32 	%r4851, %r4847, %r4846, 30;
	mov.b64 	%rd7318, {%r4851, %r4850};
	xor.b64  	%rd7319, %rd7317, %rd7318;
	shf.l.wrap.b32 	%r4852, %r4846, %r4847, 25;
	shf.l.wrap.b32 	%r4853, %r4847, %r4846, 25;
	mov.b64 	%rd7320, {%r4853, %r4852};
	xor.b64  	%rd7321, %rd7319, %rd7320;
	add.s64 	%rd7322, %rd7321, %rd7316;
	add.s64 	%rd13743, %rd7322, %rd7312;
	add.s64 	%rd7323, %rd13733, %rd13726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4854,%dummy}, %rd13728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4855}, %rd13728;
	}
	shf.r.wrap.b32 	%r4856, %r4855, %r4854, 19;
	shf.r.wrap.b32 	%r4857, %r4854, %r4855, 19;
	mov.b64 	%rd7324, {%r4857, %r4856};
	shf.l.wrap.b32 	%r4858, %r4854, %r4855, 3;
	shf.l.wrap.b32 	%r4859, %r4855, %r4854, 3;
	mov.b64 	%rd7325, {%r4859, %r4858};
	xor.b64  	%rd7326, %rd7324, %rd7325;
	shr.u64 	%rd7327, %rd13728, 6;
	xor.b64  	%rd7328, %rd7326, %rd7327;
	add.s64 	%rd7329, %rd7323, %rd7328;
	shf.r.wrap.b32 	%r4860, %r4492, %r4493, 8;
	shf.r.wrap.b32 	%r4861, %r4493, %r4492, 8;
	mov.b64 	%rd7330, {%r4861, %r4860};
	shf.r.wrap.b32 	%r4862, %r4492, %r4493, 1;
	shf.r.wrap.b32 	%r4863, %r4493, %r4492, 1;
	mov.b64 	%rd7331, {%r4863, %r4862};
	xor.b64  	%rd7332, %rd7331, %rd7330;
	shr.u64 	%rd7333, %rd13725, 7;
	xor.b64  	%rd7334, %rd7332, %rd7333;
	add.s64 	%rd13726, %rd7329, %rd7334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4864,%dummy}, %rd13747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4865}, %rd13747;
	}
	shf.r.wrap.b32 	%r4866, %r4865, %r4864, 14;
	shf.r.wrap.b32 	%r4867, %r4864, %r4865, 14;
	mov.b64 	%rd7335, {%r4867, %r4866};
	shf.r.wrap.b32 	%r4868, %r4865, %r4864, 18;
	shf.r.wrap.b32 	%r4869, %r4864, %r4865, 18;
	mov.b64 	%rd7336, {%r4869, %r4868};
	xor.b64  	%rd7337, %rd7335, %rd7336;
	shf.l.wrap.b32 	%r4870, %r4864, %r4865, 23;
	shf.l.wrap.b32 	%r4871, %r4865, %r4864, 23;
	mov.b64 	%rd7338, {%r4871, %r4870};
	xor.b64  	%rd7339, %rd7337, %rd7338;
	xor.b64  	%rd7340, %rd13748, %rd7241;
	and.b64  	%rd7341, %rd13747, %rd7340;
	xor.b64  	%rd7342, %rd7341, %rd7241;
	add.s64 	%rd7343, %rd7342, %rd7204;
	add.s64 	%rd7344, %rd7343, %rd7339;
	ld.const.u64 	%rd7345, [%rd6820+112];
	add.s64 	%rd7346, %rd7344, %rd7345;
	add.s64 	%rd7347, %rd7346, %rd13726;
	add.s64 	%rd13746, %rd7347, %rd7215;
	and.b64  	%rd7348, %rd13743, %rd13744;
	or.b64  	%rd7349, %rd13743, %rd13744;
	and.b64  	%rd7350, %rd7349, %rd7252;
	or.b64  	%rd7351, %rd7350, %rd7348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4872,%dummy}, %rd13743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd13743;
	}
	shf.r.wrap.b32 	%r4874, %r4873, %r4872, 28;
	shf.r.wrap.b32 	%r4875, %r4872, %r4873, 28;
	mov.b64 	%rd7352, {%r4875, %r4874};
	shf.l.wrap.b32 	%r4876, %r4872, %r4873, 30;
	shf.l.wrap.b32 	%r4877, %r4873, %r4872, 30;
	mov.b64 	%rd7353, {%r4877, %r4876};
	xor.b64  	%rd7354, %rd7352, %rd7353;
	shf.l.wrap.b32 	%r4878, %r4872, %r4873, 25;
	shf.l.wrap.b32 	%r4879, %r4873, %r4872, 25;
	mov.b64 	%rd7355, {%r4879, %r4878};
	xor.b64  	%rd7356, %rd7354, %rd7355;
	add.s64 	%rd7357, %rd7356, %rd7351;
	add.s64 	%rd13742, %rd7357, %rd7347;
	add.s64 	%rd7358, %rd13732, %rd13725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4880,%dummy}, %rd13727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4881}, %rd13727;
	}
	shf.r.wrap.b32 	%r4882, %r4881, %r4880, 19;
	shf.r.wrap.b32 	%r4883, %r4880, %r4881, 19;
	mov.b64 	%rd7359, {%r4883, %r4882};
	shf.l.wrap.b32 	%r4884, %r4880, %r4881, 3;
	shf.l.wrap.b32 	%r4885, %r4881, %r4880, 3;
	mov.b64 	%rd7360, {%r4885, %r4884};
	xor.b64  	%rd7361, %rd7359, %rd7360;
	shr.u64 	%rd7362, %rd13727, 6;
	xor.b64  	%rd7363, %rd7361, %rd7362;
	add.s64 	%rd7364, %rd7358, %rd7363;
	shf.r.wrap.b32 	%r4886, %r4521, %r4520, 1;
	shf.r.wrap.b32 	%r4887, %r4520, %r4521, 1;
	mov.b64 	%rd7365, {%r4887, %r4886};
	shf.r.wrap.b32 	%r4888, %r4521, %r4520, 8;
	shf.r.wrap.b32 	%r4889, %r4520, %r4521, 8;
	mov.b64 	%rd7366, {%r4889, %r4888};
	xor.b64  	%rd7367, %rd7365, %rd7366;
	shr.u64 	%rd7368, %rd13740, 7;
	xor.b64  	%rd7369, %rd7367, %rd7368;
	add.s64 	%rd13725, %rd7364, %rd7369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4890,%dummy}, %rd13746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4891}, %rd13746;
	}
	shf.r.wrap.b32 	%r4892, %r4891, %r4890, 14;
	shf.r.wrap.b32 	%r4893, %r4890, %r4891, 14;
	mov.b64 	%rd7370, {%r4893, %r4892};
	shf.r.wrap.b32 	%r4894, %r4891, %r4890, 18;
	shf.r.wrap.b32 	%r4895, %r4890, %r4891, 18;
	mov.b64 	%rd7371, {%r4895, %r4894};
	xor.b64  	%rd7372, %rd7370, %rd7371;
	shf.l.wrap.b32 	%r4896, %r4890, %r4891, 23;
	shf.l.wrap.b32 	%r4897, %r4891, %r4890, 23;
	mov.b64 	%rd7373, {%r4897, %r4896};
	xor.b64  	%rd7374, %rd7372, %rd7373;
	xor.b64  	%rd7375, %rd13747, %rd13748;
	and.b64  	%rd7376, %rd13746, %rd7375;
	xor.b64  	%rd7377, %rd7376, %rd13748;
	add.s64 	%rd7378, %rd7377, %rd7241;
	add.s64 	%rd7379, %rd7378, %rd7374;
	ld.const.u64 	%rd7380, [%rd6820+120];
	add.s64 	%rd7381, %rd7379, %rd7380;
	add.s64 	%rd7382, %rd7381, %rd13725;
	add.s64 	%rd13745, %rd7382, %rd7252;
	and.b64  	%rd7383, %rd13742, %rd13743;
	or.b64  	%rd7384, %rd13742, %rd13743;
	and.b64  	%rd7385, %rd7384, %rd13744;
	or.b64  	%rd7386, %rd7385, %rd7383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4898,%dummy}, %rd13742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4899}, %rd13742;
	}
	shf.r.wrap.b32 	%r4900, %r4899, %r4898, 28;
	shf.r.wrap.b32 	%r4901, %r4898, %r4899, 28;
	mov.b64 	%rd7387, {%r4901, %r4900};
	shf.l.wrap.b32 	%r4902, %r4898, %r4899, 30;
	shf.l.wrap.b32 	%r4903, %r4899, %r4898, 30;
	mov.b64 	%rd7388, {%r4903, %r4902};
	xor.b64  	%rd7389, %rd7387, %rd7388;
	shf.l.wrap.b32 	%r4904, %r4898, %r4899, 25;
	shf.l.wrap.b32 	%r4905, %r4899, %r4898, 25;
	mov.b64 	%rd7390, {%r4905, %r4904};
	xor.b64  	%rd7391, %rd7389, %rd7390;
	add.s64 	%rd7392, %rd7391, %rd7386;
	add.s64 	%rd13741, %rd7392, %rd7382;
	add.s32 	%r9735, %r9735, 16;
	setp.lt.u32 	%p74, %r9735, 80;
	@%p74 bra 	$L__BB0_102;

	setp.eq.s32 	%p121, %r2, 0;
	add.s64 	%rd7401, %rd13668, %rd13741;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4908, %temp}, %rd7401;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4909}, %rd7401;
	}
	mov.u32 	%r4910, 291;
	mov.u32 	%r9746, 0;
	prmt.b32 	%r4911, %r4908, %r9746, %r4910;
	prmt.b32 	%r4912, %r4909, %r9746, %r4910;
	mov.b64 	%rd622, {%r4912, %r4911};
	mov.u64 	%rd7402, 0;
	st.local.u64 	[%rd212], %rd622;
	add.s64 	%rd7403, %rd13667, %rd13742;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4913, %temp}, %rd7403;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4914}, %rd7403;
	}
	prmt.b32 	%r4915, %r4913, %r9746, %r4910;
	prmt.b32 	%r4916, %r4914, %r9746, %r4910;
	mov.b64 	%rd623, {%r4916, %r4915};
	st.local.u64 	[%rd212+8], %rd623;
	add.s64 	%rd7404, %rd13666, %rd13743;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4917, %temp}, %rd7404;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4918}, %rd7404;
	}
	prmt.b32 	%r4919, %r4917, %r9746, %r4910;
	prmt.b32 	%r4920, %r4918, %r9746, %r4910;
	mov.b64 	%rd624, {%r4920, %r4919};
	st.local.u64 	[%rd212+16], %rd624;
	add.s64 	%rd7405, %rd13665, %rd13744;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4921, %temp}, %rd7405;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4922}, %rd7405;
	}
	prmt.b32 	%r4923, %r4921, %r9746, %r4910;
	prmt.b32 	%r4924, %r4922, %r9746, %r4910;
	mov.b64 	%rd625, {%r4924, %r4923};
	st.local.u64 	[%rd212+24], %rd625;
	add.s64 	%rd7406, %rd13664, %rd13745;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4925, %temp}, %rd7406;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4926}, %rd7406;
	}
	prmt.b32 	%r4927, %r4925, %r9746, %r4910;
	prmt.b32 	%r4928, %r4926, %r9746, %r4910;
	mov.b64 	%rd626, {%r4928, %r4927};
	st.local.u64 	[%rd212+32], %rd626;
	add.s64 	%rd7407, %rd13663, %rd13746;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4929, %temp}, %rd7407;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4930}, %rd7407;
	}
	prmt.b32 	%r4931, %r4929, %r9746, %r4910;
	prmt.b32 	%r4932, %r4930, %r9746, %r4910;
	mov.b64 	%rd627, {%r4932, %r4931};
	st.local.u64 	[%rd212+40], %rd627;
	add.s64 	%rd7408, %rd13662, %rd13747;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4933, %temp}, %rd7408;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4934}, %rd7408;
	}
	prmt.b32 	%r4935, %r4933, %r9746, %r4910;
	prmt.b32 	%r4936, %r4934, %r9746, %r4910;
	mov.b64 	%rd628, {%r4936, %r4935};
	st.local.u64 	[%rd212+48], %rd628;
	add.s64 	%rd7409, %rd13661, %rd13748;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4937, %temp}, %rd7409;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4938}, %rd7409;
	}
	prmt.b32 	%r4939, %r4937, %r9746, %r4910;
	prmt.b32 	%r4940, %r4938, %r9746, %r4910;
	mov.b64 	%rd629, {%r4940, %r4939};
	st.local.u64 	[%rd212+56], %rd629;
	mov.u64 	%rd13797, 7640891576956012808;
	st.local.u64 	[%rd2+-72], %rd13797;
	mov.u64 	%rd13796, -4942790177534073029;
	st.local.u64 	[%rd2+-64], %rd13796;
	mov.u64 	%rd13795, 4354685564936845355;
	st.local.u64 	[%rd2+-56], %rd13795;
	mov.u64 	%rd13794, -6534734903238641935;
	st.local.u64 	[%rd2+-48], %rd13794;
	mov.u64 	%rd13793, 5840696475078001361;
	st.local.u64 	[%rd2+-40], %rd13793;
	mov.u64 	%rd13792, -7276294671716946913;
	st.local.u64 	[%rd2+-32], %rd13792;
	mov.u64 	%rd13791, 2270897969802886507;
	st.local.u64 	[%rd2+-24], %rd13791;
	mov.u64 	%rd13790, 6620516959819538809;
	st.local.u64 	[%rd2+-16], %rd13790;
	st.local.u64 	[%rd2], %rd7402;
	st.local.u64 	[%rd2+8], %rd7402;
	st.local.u64 	[%rd2+16], %rd7402;
	st.local.u64 	[%rd2+24], %rd7402;
	st.local.u64 	[%rd2+32], %rd7402;
	st.local.u64 	[%rd2+40], %rd7402;
	st.local.u64 	[%rd2+48], %rd7402;
	st.local.u64 	[%rd2+56], %rd7402;
	st.local.u64 	[%rd2+64], %rd7402;
	st.local.u64 	[%rd2+72], %rd7402;
	st.local.u64 	[%rd2+80], %rd7402;
	st.local.u64 	[%rd2+88], %rd7402;
	st.local.u64 	[%rd2+96], %rd7402;
	st.local.u64 	[%rd2+104], %rd7402;
	st.local.u64 	[%rd2+112], %rd7402;
	st.local.u64 	[%rd2+120], %rd7402;
	st.local.v2.u32 	[%rd2+-8], {%r9746, %r9746};
	mov.u32 	%r9736, %r9746;
	@%p121 bra 	$L__BB0_122;

	add.s64 	%rd630, %rd1244, 8;
	mov.u32 	%r9736, 0;
	mov.u64 	%rd13797, 7640891576956012808;
	mov.u64 	%rd13796, -4942790177534073029;
	mov.u64 	%rd13795, 4354685564936845355;
	mov.u64 	%rd13794, -6534734903238641935;
	mov.u64 	%rd13793, 5840696475078001361;
	mov.u64 	%rd13792, -7276294671716946913;
	mov.u64 	%rd13791, 2270897969802886507;
	mov.u64 	%rd13790, 6620516959819538809;
	mov.u32 	%r9737, %r9736;
	mov.u32 	%r9738, %r9736;

$L__BB0_105:
	add.s32 	%r9737, %r9737, %r2;
	st.local.u32 	[%rd2+-8], %r9737;
	add.s32 	%r4944, %r9736, %r2;
	setp.lt.u32 	%p76, %r4944, 129;
	mov.u32 	%r4945, 128;
	sub.s32 	%r110, %r4945, %r9736;
	selp.b32 	%r111, %r2, %r110, %p76;
	and.b32  	%r112, %r9736, 7;
	setp.eq.s32 	%p77, %r111, 0;
	@%p77 bra 	$L__BB0_110;

	shl.b32 	%r4947, %r112, 3;
	shr.u32 	%r9741, %r9736, 3;
	cvt.u64.u32 	%rd641, %r4947;
	neg.s32 	%r4948, %r4947;
	mov.u32 	%r9739, 0;
	and.b32  	%r4949, %r4948, 56;
	cvt.u64.u32 	%rd642, %r4949;
	mov.u64 	%rd13757, %rd630;

$L__BB0_107:
	mul.wide.u32 	%rd7420, %r9741, 8;
	add.s64 	%rd7421, %rd1, %rd7420;
	ld.global.nc.u64 	%rd644, [%rd13757];
	cvt.u32.u64 	%r4950, %rd641;
	shl.b64 	%rd7422, %rd644, %r4950;
	ld.local.u64 	%rd7423, [%rd7421+72];
	or.b64  	%rd7424, %rd7422, %rd7423;
	st.local.u64 	[%rd7421+72], %rd7424;
	setp.gt.u32 	%p78, %r9741, 14;
	@%p78 bra 	$L__BB0_109;

	setp.eq.s32 	%p79, %r112, 0;
	cvt.u32.u64 	%r4951, %rd642;
	shr.u64 	%rd7425, %rd644, %r4951;
	selp.b64 	%rd7426, 0, %rd7425, %p79;
	add.s32 	%r9741, %r9741, 1;
	mul.wide.u32 	%rd7427, %r9741, 8;
	add.s64 	%rd7428, %rd1, %rd7427;
	st.local.u64 	[%rd7428+72], %rd7426;

$L__BB0_109:
	add.s64 	%rd13757, %rd13757, 8;
	add.s32 	%r9739, %r9739, 8;
	setp.lt.u32 	%p80, %r9739, %r111;
	@%p80 bra 	$L__BB0_107;

$L__BB0_110:
	add.s32 	%r9736, %r9736, %r111;
	st.local.u32 	[%rd2+-4], %r9736;
	and.b32  	%r120, %r9736, 7;
	setp.eq.s32 	%p81, %r120, 0;
	@%p81 bra 	$L__BB0_112;

	and.b32  	%r4952, %r9736, -8;
	cvt.u64.u32 	%rd7429, %r4952;
	add.s64 	%rd7430, %rd1, %rd7429;
	mul.wide.u32 	%rd7431, %r120, 8;
	add.s64 	%rd7433, %rd1255, %rd7431;
	ld.const.u64 	%rd7434, [%rd7433];
	ld.local.u64 	%rd7435, [%rd7430+72];
	and.b64  	%rd7436, %rd7434, %rd7435;
	st.local.u64 	[%rd7430+72], %rd7436;

$L__BB0_112:
	setp.ne.s32 	%p82, %r9736, 128;
	@%p82 bra 	$L__BB0_120;

	ld.local.u64 	%rd7437, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4954, %temp}, %rd7437;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4955}, %rd7437;
	}
	mov.u32 	%r4956, 291;
	mov.u32 	%r4957, 0;
	prmt.b32 	%r4958, %r4954, %r4957, %r4956;
	prmt.b32 	%r4959, %r4955, %r4957, %r4956;
	mov.b64 	%rd13773, {%r4959, %r4958};
	ld.local.u64 	%rd7438, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4960, %temp}, %rd7438;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4961}, %rd7438;
	}
	prmt.b32 	%r4962, %r4960, %r4957, %r4956;
	prmt.b32 	%r4963, %r4961, %r4957, %r4956;
	mov.b64 	%rd13772, {%r4963, %r4962};
	ld.local.u64 	%rd7439, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4964, %temp}, %rd7439;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4965}, %rd7439;
	}
	prmt.b32 	%r4966, %r4964, %r4957, %r4956;
	prmt.b32 	%r4967, %r4965, %r4957, %r4956;
	mov.b64 	%rd13771, {%r4967, %r4966};
	ld.local.u64 	%rd7440, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4968, %temp}, %rd7440;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4969}, %rd7440;
	}
	prmt.b32 	%r4970, %r4968, %r4957, %r4956;
	prmt.b32 	%r4971, %r4969, %r4957, %r4956;
	mov.b64 	%rd13770, {%r4971, %r4970};
	ld.local.u64 	%rd7441, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4972, %temp}, %rd7441;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4973}, %rd7441;
	}
	prmt.b32 	%r4974, %r4972, %r4957, %r4956;
	prmt.b32 	%r4975, %r4973, %r4957, %r4956;
	mov.b64 	%rd13769, {%r4975, %r4974};
	ld.local.u64 	%rd7442, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4976, %temp}, %rd7442;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4977}, %rd7442;
	}
	prmt.b32 	%r4978, %r4976, %r4957, %r4956;
	prmt.b32 	%r4979, %r4977, %r4957, %r4956;
	mov.b64 	%rd13768, {%r4979, %r4978};
	ld.local.u64 	%rd7443, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4980, %temp}, %rd7443;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4981}, %rd7443;
	}
	prmt.b32 	%r4982, %r4980, %r4957, %r4956;
	prmt.b32 	%r4983, %r4981, %r4957, %r4956;
	mov.b64 	%rd13767, {%r4983, %r4982};
	ld.local.u64 	%rd7444, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4984, %temp}, %rd7444;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4985}, %rd7444;
	}
	prmt.b32 	%r4986, %r4984, %r4957, %r4956;
	prmt.b32 	%r4987, %r4985, %r4957, %r4956;
	mov.b64 	%rd13766, {%r4987, %r4986};
	ld.local.u64 	%rd7445, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4988, %temp}, %rd7445;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4989}, %rd7445;
	}
	prmt.b32 	%r4990, %r4988, %r4957, %r4956;
	prmt.b32 	%r4991, %r4989, %r4957, %r4956;
	mov.b64 	%rd13765, {%r4991, %r4990};
	ld.local.u64 	%rd7446, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4992, %temp}, %rd7446;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4993}, %rd7446;
	}
	prmt.b32 	%r4994, %r4992, %r4957, %r4956;
	prmt.b32 	%r4995, %r4993, %r4957, %r4956;
	mov.b64 	%rd13764, {%r4995, %r4994};
	ld.local.u64 	%rd7447, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4996, %temp}, %rd7447;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4997}, %rd7447;
	}
	prmt.b32 	%r4998, %r4996, %r4957, %r4956;
	prmt.b32 	%r4999, %r4997, %r4957, %r4956;
	mov.b64 	%rd13763, {%r4999, %r4998};
	ld.local.u64 	%rd7448, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5000, %temp}, %rd7448;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5001}, %rd7448;
	}
	prmt.b32 	%r5002, %r5000, %r4957, %r4956;
	prmt.b32 	%r5003, %r5001, %r4957, %r4956;
	mov.b64 	%rd13762, {%r5003, %r5002};
	ld.local.u64 	%rd7449, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5004, %temp}, %rd7449;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5005}, %rd7449;
	}
	prmt.b32 	%r5006, %r5004, %r4957, %r4956;
	prmt.b32 	%r5007, %r5005, %r4957, %r4956;
	mov.b64 	%rd13761, {%r5007, %r5006};
	ld.local.u64 	%rd7450, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5008, %temp}, %rd7450;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5009}, %rd7450;
	}
	prmt.b32 	%r5010, %r5008, %r4957, %r4956;
	prmt.b32 	%r5011, %r5009, %r4957, %r4956;
	mov.b64 	%rd13760, {%r5011, %r5010};
	ld.local.u64 	%rd7451, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5012, %temp}, %rd7451;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5013}, %rd7451;
	}
	prmt.b32 	%r5014, %r5012, %r4957, %r4956;
	prmt.b32 	%r5015, %r5013, %r4957, %r4956;
	mov.b64 	%rd13759, {%r5015, %r5014};
	ld.local.u64 	%rd7452, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5016, %temp}, %rd7452;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5017}, %rd7452;
	}
	prmt.b32 	%r5018, %r5016, %r4957, %r4956;
	prmt.b32 	%r5019, %r5017, %r4957, %r4956;
	mov.b64 	%rd13758, {%r5019, %r5018};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5020,%dummy}, %rd13793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5021}, %rd13793;
	}
	shf.r.wrap.b32 	%r5022, %r5021, %r5020, 18;
	shf.r.wrap.b32 	%r5023, %r5020, %r5021, 18;
	mov.b64 	%rd7453, {%r5023, %r5022};
	shf.r.wrap.b32 	%r5024, %r5021, %r5020, 14;
	shf.r.wrap.b32 	%r5025, %r5020, %r5021, 14;
	mov.b64 	%rd7454, {%r5025, %r5024};
	xor.b64  	%rd7455, %rd7454, %rd7453;
	shf.l.wrap.b32 	%r5026, %r5020, %r5021, 23;
	shf.l.wrap.b32 	%r5027, %r5021, %r5020, 23;
	mov.b64 	%rd7456, {%r5027, %r5026};
	xor.b64  	%rd7457, %rd7455, %rd7456;
	xor.b64  	%rd7458, %rd13792, %rd13791;
	and.b64  	%rd7459, %rd13793, %rd7458;
	xor.b64  	%rd7460, %rd7459, %rd13791;
	add.s64 	%rd7461, %rd7460, %rd13790;
	add.s64 	%rd7462, %rd7461, %rd7457;
	add.s64 	%rd7463, %rd7462, %rd13773;
	add.s64 	%rd7464, %rd7463, 4794697086780616226;
	add.s64 	%rd7465, %rd7464, %rd13794;
	or.b64  	%rd7466, %rd13797, %rd13796;
	and.b64  	%rd7467, %rd7466, %rd13795;
	and.b64  	%rd7468, %rd13797, %rd13796;
	or.b64  	%rd7469, %rd7467, %rd7468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5028}, %rd13797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5029,%dummy}, %rd13797;
	}
	shf.l.wrap.b32 	%r5030, %r5029, %r5028, 30;
	shf.l.wrap.b32 	%r5031, %r5028, %r5029, 30;
	mov.b64 	%rd7470, {%r5031, %r5030};
	shf.r.wrap.b32 	%r5032, %r5028, %r5029, 28;
	shf.r.wrap.b32 	%r5033, %r5029, %r5028, 28;
	mov.b64 	%rd7471, {%r5033, %r5032};
	xor.b64  	%rd7472, %rd7471, %rd7470;
	shf.l.wrap.b32 	%r5034, %r5029, %r5028, 25;
	shf.l.wrap.b32 	%r5035, %r5028, %r5029, 25;
	mov.b64 	%rd7473, {%r5035, %r5034};
	xor.b64  	%rd7474, %rd7472, %rd7473;
	add.s64 	%rd7475, %rd7474, %rd7469;
	add.s64 	%rd7476, %rd7475, %rd7464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5036,%dummy}, %rd7465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5037}, %rd7465;
	}
	shf.r.wrap.b32 	%r5038, %r5037, %r5036, 14;
	shf.r.wrap.b32 	%r5039, %r5036, %r5037, 14;
	mov.b64 	%rd7477, {%r5039, %r5038};
	shf.r.wrap.b32 	%r5040, %r5037, %r5036, 18;
	shf.r.wrap.b32 	%r5041, %r5036, %r5037, 18;
	mov.b64 	%rd7478, {%r5041, %r5040};
	xor.b64  	%rd7479, %rd7477, %rd7478;
	shf.l.wrap.b32 	%r5042, %r5036, %r5037, 23;
	shf.l.wrap.b32 	%r5043, %r5037, %r5036, 23;
	mov.b64 	%rd7480, {%r5043, %r5042};
	xor.b64  	%rd7481, %rd7479, %rd7480;
	xor.b64  	%rd7482, %rd13793, %rd13792;
	and.b64  	%rd7483, %rd7465, %rd7482;
	xor.b64  	%rd7484, %rd7483, %rd13792;
	add.s64 	%rd7485, %rd7484, %rd13791;
	add.s64 	%rd7486, %rd7485, %rd7481;
	add.s64 	%rd7487, %rd7486, %rd13772;
	add.s64 	%rd7488, %rd7487, 8158064640168781261;
	add.s64 	%rd7489, %rd7488, %rd13795;
	and.b64  	%rd7490, %rd7476, %rd13797;
	or.b64  	%rd7491, %rd7476, %rd13797;
	and.b64  	%rd7492, %rd7491, %rd13796;
	or.b64  	%rd7493, %rd7492, %rd7490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5044,%dummy}, %rd7476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5045}, %rd7476;
	}
	shf.r.wrap.b32 	%r5046, %r5045, %r5044, 28;
	shf.r.wrap.b32 	%r5047, %r5044, %r5045, 28;
	mov.b64 	%rd7494, {%r5047, %r5046};
	shf.l.wrap.b32 	%r5048, %r5044, %r5045, 30;
	shf.l.wrap.b32 	%r5049, %r5045, %r5044, 30;
	mov.b64 	%rd7495, {%r5049, %r5048};
	xor.b64  	%rd7496, %rd7494, %rd7495;
	shf.l.wrap.b32 	%r5050, %r5044, %r5045, 25;
	shf.l.wrap.b32 	%r5051, %r5045, %r5044, 25;
	mov.b64 	%rd7497, {%r5051, %r5050};
	xor.b64  	%rd7498, %rd7496, %rd7497;
	add.s64 	%rd7499, %rd7498, %rd7493;
	add.s64 	%rd7500, %rd7499, %rd7488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5052,%dummy}, %rd7489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5053}, %rd7489;
	}
	shf.r.wrap.b32 	%r5054, %r5053, %r5052, 14;
	shf.r.wrap.b32 	%r5055, %r5052, %r5053, 14;
	mov.b64 	%rd7501, {%r5055, %r5054};
	shf.r.wrap.b32 	%r5056, %r5053, %r5052, 18;
	shf.r.wrap.b32 	%r5057, %r5052, %r5053, 18;
	mov.b64 	%rd7502, {%r5057, %r5056};
	xor.b64  	%rd7503, %rd7501, %rd7502;
	shf.l.wrap.b32 	%r5058, %r5052, %r5053, 23;
	shf.l.wrap.b32 	%r5059, %r5053, %r5052, 23;
	mov.b64 	%rd7504, {%r5059, %r5058};
	xor.b64  	%rd7505, %rd7503, %rd7504;
	xor.b64  	%rd7506, %rd7465, %rd13793;
	and.b64  	%rd7507, %rd7489, %rd7506;
	xor.b64  	%rd7508, %rd7507, %rd13793;
	add.s64 	%rd7509, %rd7508, %rd13792;
	add.s64 	%rd7510, %rd7509, %rd7505;
	add.s64 	%rd7511, %rd7510, %rd13771;
	add.s64 	%rd7512, %rd7511, -5349999486874862801;
	add.s64 	%rd7513, %rd7512, %rd13796;
	and.b64  	%rd7514, %rd7500, %rd7476;
	or.b64  	%rd7515, %rd7500, %rd7476;
	and.b64  	%rd7516, %rd7515, %rd13797;
	or.b64  	%rd7517, %rd7516, %rd7514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5060,%dummy}, %rd7500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5061}, %rd7500;
	}
	shf.r.wrap.b32 	%r5062, %r5061, %r5060, 28;
	shf.r.wrap.b32 	%r5063, %r5060, %r5061, 28;
	mov.b64 	%rd7518, {%r5063, %r5062};
	shf.l.wrap.b32 	%r5064, %r5060, %r5061, 30;
	shf.l.wrap.b32 	%r5065, %r5061, %r5060, 30;
	mov.b64 	%rd7519, {%r5065, %r5064};
	xor.b64  	%rd7520, %rd7518, %rd7519;
	shf.l.wrap.b32 	%r5066, %r5060, %r5061, 25;
	shf.l.wrap.b32 	%r5067, %r5061, %r5060, 25;
	mov.b64 	%rd7521, {%r5067, %r5066};
	xor.b64  	%rd7522, %rd7520, %rd7521;
	add.s64 	%rd7523, %rd7522, %rd7517;
	add.s64 	%rd7524, %rd7523, %rd7512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5068,%dummy}, %rd7513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5069}, %rd7513;
	}
	shf.r.wrap.b32 	%r5070, %r5069, %r5068, 14;
	shf.r.wrap.b32 	%r5071, %r5068, %r5069, 14;
	mov.b64 	%rd7525, {%r5071, %r5070};
	shf.r.wrap.b32 	%r5072, %r5069, %r5068, 18;
	shf.r.wrap.b32 	%r5073, %r5068, %r5069, 18;
	mov.b64 	%rd7526, {%r5073, %r5072};
	xor.b64  	%rd7527, %rd7525, %rd7526;
	shf.l.wrap.b32 	%r5074, %r5068, %r5069, 23;
	shf.l.wrap.b32 	%r5075, %r5069, %r5068, 23;
	mov.b64 	%rd7528, {%r5075, %r5074};
	xor.b64  	%rd7529, %rd7527, %rd7528;
	xor.b64  	%rd7530, %rd7489, %rd7465;
	and.b64  	%rd7531, %rd7513, %rd7530;
	xor.b64  	%rd7532, %rd7531, %rd7465;
	add.s64 	%rd7533, %rd7532, %rd13793;
	add.s64 	%rd7534, %rd7533, %rd7529;
	add.s64 	%rd7535, %rd7534, %rd13770;
	add.s64 	%rd7536, %rd7535, -1606136188198331460;
	add.s64 	%rd7537, %rd7536, %rd13797;
	and.b64  	%rd7538, %rd7524, %rd7500;
	or.b64  	%rd7539, %rd7524, %rd7500;
	and.b64  	%rd7540, %rd7539, %rd7476;
	or.b64  	%rd7541, %rd7540, %rd7538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5076,%dummy}, %rd7524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5077}, %rd7524;
	}
	shf.r.wrap.b32 	%r5078, %r5077, %r5076, 28;
	shf.r.wrap.b32 	%r5079, %r5076, %r5077, 28;
	mov.b64 	%rd7542, {%r5079, %r5078};
	shf.l.wrap.b32 	%r5080, %r5076, %r5077, 30;
	shf.l.wrap.b32 	%r5081, %r5077, %r5076, 30;
	mov.b64 	%rd7543, {%r5081, %r5080};
	xor.b64  	%rd7544, %rd7542, %rd7543;
	shf.l.wrap.b32 	%r5082, %r5076, %r5077, 25;
	shf.l.wrap.b32 	%r5083, %r5077, %r5076, 25;
	mov.b64 	%rd7545, {%r5083, %r5082};
	xor.b64  	%rd7546, %rd7544, %rd7545;
	add.s64 	%rd7547, %rd7546, %rd7541;
	add.s64 	%rd7548, %rd7547, %rd7536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5084,%dummy}, %rd7537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5085}, %rd7537;
	}
	shf.r.wrap.b32 	%r5086, %r5085, %r5084, 14;
	shf.r.wrap.b32 	%r5087, %r5084, %r5085, 14;
	mov.b64 	%rd7549, {%r5087, %r5086};
	shf.r.wrap.b32 	%r5088, %r5085, %r5084, 18;
	shf.r.wrap.b32 	%r5089, %r5084, %r5085, 18;
	mov.b64 	%rd7550, {%r5089, %r5088};
	xor.b64  	%rd7551, %rd7549, %rd7550;
	shf.l.wrap.b32 	%r5090, %r5084, %r5085, 23;
	shf.l.wrap.b32 	%r5091, %r5085, %r5084, 23;
	mov.b64 	%rd7552, {%r5091, %r5090};
	xor.b64  	%rd7553, %rd7551, %rd7552;
	xor.b64  	%rd7554, %rd7513, %rd7489;
	and.b64  	%rd7555, %rd7537, %rd7554;
	xor.b64  	%rd7556, %rd7555, %rd7489;
	add.s64 	%rd7557, %rd7556, %rd7465;
	add.s64 	%rd7558, %rd7557, %rd7553;
	add.s64 	%rd7559, %rd7558, %rd13769;
	add.s64 	%rd7560, %rd7559, 4131703408338449720;
	add.s64 	%rd7561, %rd7560, %rd7476;
	and.b64  	%rd7562, %rd7548, %rd7524;
	or.b64  	%rd7563, %rd7548, %rd7524;
	and.b64  	%rd7564, %rd7563, %rd7500;
	or.b64  	%rd7565, %rd7564, %rd7562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5092,%dummy}, %rd7548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5093}, %rd7548;
	}
	shf.r.wrap.b32 	%r5094, %r5093, %r5092, 28;
	shf.r.wrap.b32 	%r5095, %r5092, %r5093, 28;
	mov.b64 	%rd7566, {%r5095, %r5094};
	shf.l.wrap.b32 	%r5096, %r5092, %r5093, 30;
	shf.l.wrap.b32 	%r5097, %r5093, %r5092, 30;
	mov.b64 	%rd7567, {%r5097, %r5096};
	xor.b64  	%rd7568, %rd7566, %rd7567;
	shf.l.wrap.b32 	%r5098, %r5092, %r5093, 25;
	shf.l.wrap.b32 	%r5099, %r5093, %r5092, 25;
	mov.b64 	%rd7569, {%r5099, %r5098};
	xor.b64  	%rd7570, %rd7568, %rd7569;
	add.s64 	%rd7571, %rd7570, %rd7565;
	add.s64 	%rd7572, %rd7571, %rd7560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5100,%dummy}, %rd7561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5101}, %rd7561;
	}
	shf.r.wrap.b32 	%r5102, %r5101, %r5100, 14;
	shf.r.wrap.b32 	%r5103, %r5100, %r5101, 14;
	mov.b64 	%rd7573, {%r5103, %r5102};
	shf.r.wrap.b32 	%r5104, %r5101, %r5100, 18;
	shf.r.wrap.b32 	%r5105, %r5100, %r5101, 18;
	mov.b64 	%rd7574, {%r5105, %r5104};
	xor.b64  	%rd7575, %rd7573, %rd7574;
	shf.l.wrap.b32 	%r5106, %r5100, %r5101, 23;
	shf.l.wrap.b32 	%r5107, %r5101, %r5100, 23;
	mov.b64 	%rd7576, {%r5107, %r5106};
	xor.b64  	%rd7577, %rd7575, %rd7576;
	xor.b64  	%rd7578, %rd7537, %rd7513;
	and.b64  	%rd7579, %rd7561, %rd7578;
	xor.b64  	%rd7580, %rd7579, %rd7513;
	add.s64 	%rd7581, %rd7580, %rd7489;
	add.s64 	%rd7582, %rd7581, %rd7577;
	add.s64 	%rd7583, %rd7582, %rd13768;
	add.s64 	%rd7584, %rd7583, 6480981068601479193;
	add.s64 	%rd7585, %rd7584, %rd7500;
	and.b64  	%rd7586, %rd7572, %rd7548;
	or.b64  	%rd7587, %rd7572, %rd7548;
	and.b64  	%rd7588, %rd7587, %rd7524;
	or.b64  	%rd7589, %rd7588, %rd7586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5108,%dummy}, %rd7572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5109}, %rd7572;
	}
	shf.r.wrap.b32 	%r5110, %r5109, %r5108, 28;
	shf.r.wrap.b32 	%r5111, %r5108, %r5109, 28;
	mov.b64 	%rd7590, {%r5111, %r5110};
	shf.l.wrap.b32 	%r5112, %r5108, %r5109, 30;
	shf.l.wrap.b32 	%r5113, %r5109, %r5108, 30;
	mov.b64 	%rd7591, {%r5113, %r5112};
	xor.b64  	%rd7592, %rd7590, %rd7591;
	shf.l.wrap.b32 	%r5114, %r5108, %r5109, 25;
	shf.l.wrap.b32 	%r5115, %r5109, %r5108, 25;
	mov.b64 	%rd7593, {%r5115, %r5114};
	xor.b64  	%rd7594, %rd7592, %rd7593;
	add.s64 	%rd7595, %rd7594, %rd7589;
	add.s64 	%rd7596, %rd7595, %rd7584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5116,%dummy}, %rd7585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5117}, %rd7585;
	}
	shf.r.wrap.b32 	%r5118, %r5117, %r5116, 14;
	shf.r.wrap.b32 	%r5119, %r5116, %r5117, 14;
	mov.b64 	%rd7597, {%r5119, %r5118};
	shf.r.wrap.b32 	%r5120, %r5117, %r5116, 18;
	shf.r.wrap.b32 	%r5121, %r5116, %r5117, 18;
	mov.b64 	%rd7598, {%r5121, %r5120};
	xor.b64  	%rd7599, %rd7597, %rd7598;
	shf.l.wrap.b32 	%r5122, %r5116, %r5117, 23;
	shf.l.wrap.b32 	%r5123, %r5117, %r5116, 23;
	mov.b64 	%rd7600, {%r5123, %r5122};
	xor.b64  	%rd7601, %rd7599, %rd7600;
	xor.b64  	%rd7602, %rd7561, %rd7537;
	and.b64  	%rd7603, %rd7585, %rd7602;
	xor.b64  	%rd7604, %rd7603, %rd7537;
	add.s64 	%rd7605, %rd7604, %rd7513;
	add.s64 	%rd7606, %rd7605, %rd7601;
	add.s64 	%rd7607, %rd7606, %rd13767;
	add.s64 	%rd7608, %rd7607, -7908458776815382629;
	add.s64 	%rd7609, %rd7608, %rd7524;
	and.b64  	%rd7610, %rd7596, %rd7572;
	or.b64  	%rd7611, %rd7596, %rd7572;
	and.b64  	%rd7612, %rd7611, %rd7548;
	or.b64  	%rd7613, %rd7612, %rd7610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5124,%dummy}, %rd7596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5125}, %rd7596;
	}
	shf.r.wrap.b32 	%r5126, %r5125, %r5124, 28;
	shf.r.wrap.b32 	%r5127, %r5124, %r5125, 28;
	mov.b64 	%rd7614, {%r5127, %r5126};
	shf.l.wrap.b32 	%r5128, %r5124, %r5125, 30;
	shf.l.wrap.b32 	%r5129, %r5125, %r5124, 30;
	mov.b64 	%rd7615, {%r5129, %r5128};
	xor.b64  	%rd7616, %rd7614, %rd7615;
	shf.l.wrap.b32 	%r5130, %r5124, %r5125, 25;
	shf.l.wrap.b32 	%r5131, %r5125, %r5124, 25;
	mov.b64 	%rd7617, {%r5131, %r5130};
	xor.b64  	%rd7618, %rd7616, %rd7617;
	add.s64 	%rd7619, %rd7618, %rd7613;
	add.s64 	%rd7620, %rd7619, %rd7608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5132,%dummy}, %rd7609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5133}, %rd7609;
	}
	shf.r.wrap.b32 	%r5134, %r5133, %r5132, 14;
	shf.r.wrap.b32 	%r5135, %r5132, %r5133, 14;
	mov.b64 	%rd7621, {%r5135, %r5134};
	shf.r.wrap.b32 	%r5136, %r5133, %r5132, 18;
	shf.r.wrap.b32 	%r5137, %r5132, %r5133, 18;
	mov.b64 	%rd7622, {%r5137, %r5136};
	xor.b64  	%rd7623, %rd7621, %rd7622;
	shf.l.wrap.b32 	%r5138, %r5132, %r5133, 23;
	shf.l.wrap.b32 	%r5139, %r5133, %r5132, 23;
	mov.b64 	%rd7624, {%r5139, %r5138};
	xor.b64  	%rd7625, %rd7623, %rd7624;
	xor.b64  	%rd7626, %rd7585, %rd7561;
	and.b64  	%rd7627, %rd7609, %rd7626;
	xor.b64  	%rd7628, %rd7627, %rd7561;
	add.s64 	%rd7629, %rd7628, %rd7537;
	add.s64 	%rd7630, %rd7629, %rd7625;
	add.s64 	%rd7631, %rd7630, %rd13766;
	add.s64 	%rd7632, %rd7631, -6116909921290321640;
	add.s64 	%rd7633, %rd7632, %rd7548;
	and.b64  	%rd7634, %rd7620, %rd7596;
	or.b64  	%rd7635, %rd7620, %rd7596;
	and.b64  	%rd7636, %rd7635, %rd7572;
	or.b64  	%rd7637, %rd7636, %rd7634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5140,%dummy}, %rd7620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5141}, %rd7620;
	}
	shf.r.wrap.b32 	%r5142, %r5141, %r5140, 28;
	shf.r.wrap.b32 	%r5143, %r5140, %r5141, 28;
	mov.b64 	%rd7638, {%r5143, %r5142};
	shf.l.wrap.b32 	%r5144, %r5140, %r5141, 30;
	shf.l.wrap.b32 	%r5145, %r5141, %r5140, 30;
	mov.b64 	%rd7639, {%r5145, %r5144};
	xor.b64  	%rd7640, %rd7638, %rd7639;
	shf.l.wrap.b32 	%r5146, %r5140, %r5141, 25;
	shf.l.wrap.b32 	%r5147, %r5141, %r5140, 25;
	mov.b64 	%rd7641, {%r5147, %r5146};
	xor.b64  	%rd7642, %rd7640, %rd7641;
	add.s64 	%rd7643, %rd7642, %rd7637;
	add.s64 	%rd7644, %rd7643, %rd7632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5148,%dummy}, %rd7633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5149}, %rd7633;
	}
	shf.r.wrap.b32 	%r5150, %r5149, %r5148, 14;
	shf.r.wrap.b32 	%r5151, %r5148, %r5149, 14;
	mov.b64 	%rd7645, {%r5151, %r5150};
	shf.r.wrap.b32 	%r5152, %r5149, %r5148, 18;
	shf.r.wrap.b32 	%r5153, %r5148, %r5149, 18;
	mov.b64 	%rd7646, {%r5153, %r5152};
	xor.b64  	%rd7647, %rd7645, %rd7646;
	shf.l.wrap.b32 	%r5154, %r5148, %r5149, 23;
	shf.l.wrap.b32 	%r5155, %r5149, %r5148, 23;
	mov.b64 	%rd7648, {%r5155, %r5154};
	xor.b64  	%rd7649, %rd7647, %rd7648;
	xor.b64  	%rd7650, %rd7609, %rd7585;
	and.b64  	%rd7651, %rd7633, %rd7650;
	xor.b64  	%rd7652, %rd7651, %rd7585;
	add.s64 	%rd7653, %rd7652, %rd7561;
	add.s64 	%rd7654, %rd7653, %rd7649;
	add.s64 	%rd7655, %rd7654, %rd13765;
	add.s64 	%rd7656, %rd7655, -2880145864133508542;
	add.s64 	%rd7657, %rd7656, %rd7572;
	and.b64  	%rd7658, %rd7644, %rd7620;
	or.b64  	%rd7659, %rd7644, %rd7620;
	and.b64  	%rd7660, %rd7659, %rd7596;
	or.b64  	%rd7661, %rd7660, %rd7658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5156,%dummy}, %rd7644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5157}, %rd7644;
	}
	shf.r.wrap.b32 	%r5158, %r5157, %r5156, 28;
	shf.r.wrap.b32 	%r5159, %r5156, %r5157, 28;
	mov.b64 	%rd7662, {%r5159, %r5158};
	shf.l.wrap.b32 	%r5160, %r5156, %r5157, 30;
	shf.l.wrap.b32 	%r5161, %r5157, %r5156, 30;
	mov.b64 	%rd7663, {%r5161, %r5160};
	xor.b64  	%rd7664, %rd7662, %rd7663;
	shf.l.wrap.b32 	%r5162, %r5156, %r5157, 25;
	shf.l.wrap.b32 	%r5163, %r5157, %r5156, 25;
	mov.b64 	%rd7665, {%r5163, %r5162};
	xor.b64  	%rd7666, %rd7664, %rd7665;
	add.s64 	%rd7667, %rd7666, %rd7661;
	add.s64 	%rd7668, %rd7667, %rd7656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5164,%dummy}, %rd7657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5165}, %rd7657;
	}
	shf.r.wrap.b32 	%r5166, %r5165, %r5164, 14;
	shf.r.wrap.b32 	%r5167, %r5164, %r5165, 14;
	mov.b64 	%rd7669, {%r5167, %r5166};
	shf.r.wrap.b32 	%r5168, %r5165, %r5164, 18;
	shf.r.wrap.b32 	%r5169, %r5164, %r5165, 18;
	mov.b64 	%rd7670, {%r5169, %r5168};
	xor.b64  	%rd7671, %rd7669, %rd7670;
	shf.l.wrap.b32 	%r5170, %r5164, %r5165, 23;
	shf.l.wrap.b32 	%r5171, %r5165, %r5164, 23;
	mov.b64 	%rd7672, {%r5171, %r5170};
	xor.b64  	%rd7673, %rd7671, %rd7672;
	xor.b64  	%rd7674, %rd7633, %rd7609;
	and.b64  	%rd7675, %rd7657, %rd7674;
	xor.b64  	%rd7676, %rd7675, %rd7609;
	add.s64 	%rd7677, %rd7676, %rd7585;
	add.s64 	%rd7678, %rd7677, %rd7673;
	add.s64 	%rd7679, %rd7678, %rd13764;
	add.s64 	%rd7680, %rd7679, 1334009975649890238;
	add.s64 	%rd7681, %rd7680, %rd7596;
	and.b64  	%rd7682, %rd7668, %rd7644;
	or.b64  	%rd7683, %rd7668, %rd7644;
	and.b64  	%rd7684, %rd7683, %rd7620;
	or.b64  	%rd7685, %rd7684, %rd7682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5172,%dummy}, %rd7668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5173}, %rd7668;
	}
	shf.r.wrap.b32 	%r5174, %r5173, %r5172, 28;
	shf.r.wrap.b32 	%r5175, %r5172, %r5173, 28;
	mov.b64 	%rd7686, {%r5175, %r5174};
	shf.l.wrap.b32 	%r5176, %r5172, %r5173, 30;
	shf.l.wrap.b32 	%r5177, %r5173, %r5172, 30;
	mov.b64 	%rd7687, {%r5177, %r5176};
	xor.b64  	%rd7688, %rd7686, %rd7687;
	shf.l.wrap.b32 	%r5178, %r5172, %r5173, 25;
	shf.l.wrap.b32 	%r5179, %r5173, %r5172, 25;
	mov.b64 	%rd7689, {%r5179, %r5178};
	xor.b64  	%rd7690, %rd7688, %rd7689;
	add.s64 	%rd7691, %rd7690, %rd7685;
	add.s64 	%rd7692, %rd7691, %rd7680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5180,%dummy}, %rd7681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5181}, %rd7681;
	}
	shf.r.wrap.b32 	%r5182, %r5181, %r5180, 14;
	shf.r.wrap.b32 	%r5183, %r5180, %r5181, 14;
	mov.b64 	%rd7693, {%r5183, %r5182};
	shf.r.wrap.b32 	%r5184, %r5181, %r5180, 18;
	shf.r.wrap.b32 	%r5185, %r5180, %r5181, 18;
	mov.b64 	%rd7694, {%r5185, %r5184};
	xor.b64  	%rd7695, %rd7693, %rd7694;
	shf.l.wrap.b32 	%r5186, %r5180, %r5181, 23;
	shf.l.wrap.b32 	%r5187, %r5181, %r5180, 23;
	mov.b64 	%rd7696, {%r5187, %r5186};
	xor.b64  	%rd7697, %rd7695, %rd7696;
	xor.b64  	%rd7698, %rd7657, %rd7633;
	and.b64  	%rd7699, %rd7681, %rd7698;
	xor.b64  	%rd7700, %rd7699, %rd7633;
	add.s64 	%rd7701, %rd7700, %rd7609;
	add.s64 	%rd7702, %rd7701, %rd7697;
	add.s64 	%rd7703, %rd7702, %rd13763;
	add.s64 	%rd7704, %rd7703, 2608012711638119052;
	add.s64 	%rd7705, %rd7704, %rd7620;
	and.b64  	%rd7706, %rd7692, %rd7668;
	or.b64  	%rd7707, %rd7692, %rd7668;
	and.b64  	%rd7708, %rd7707, %rd7644;
	or.b64  	%rd7709, %rd7708, %rd7706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5188,%dummy}, %rd7692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5189}, %rd7692;
	}
	shf.r.wrap.b32 	%r5190, %r5189, %r5188, 28;
	shf.r.wrap.b32 	%r5191, %r5188, %r5189, 28;
	mov.b64 	%rd7710, {%r5191, %r5190};
	shf.l.wrap.b32 	%r5192, %r5188, %r5189, 30;
	shf.l.wrap.b32 	%r5193, %r5189, %r5188, 30;
	mov.b64 	%rd7711, {%r5193, %r5192};
	xor.b64  	%rd7712, %rd7710, %rd7711;
	shf.l.wrap.b32 	%r5194, %r5188, %r5189, 25;
	shf.l.wrap.b32 	%r5195, %r5189, %r5188, 25;
	mov.b64 	%rd7713, {%r5195, %r5194};
	xor.b64  	%rd7714, %rd7712, %rd7713;
	add.s64 	%rd7715, %rd7714, %rd7709;
	add.s64 	%rd7716, %rd7715, %rd7704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5196,%dummy}, %rd7705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5197}, %rd7705;
	}
	shf.r.wrap.b32 	%r5198, %r5197, %r5196, 14;
	shf.r.wrap.b32 	%r5199, %r5196, %r5197, 14;
	mov.b64 	%rd7717, {%r5199, %r5198};
	shf.r.wrap.b32 	%r5200, %r5197, %r5196, 18;
	shf.r.wrap.b32 	%r5201, %r5196, %r5197, 18;
	mov.b64 	%rd7718, {%r5201, %r5200};
	xor.b64  	%rd7719, %rd7717, %rd7718;
	shf.l.wrap.b32 	%r5202, %r5196, %r5197, 23;
	shf.l.wrap.b32 	%r5203, %r5197, %r5196, 23;
	mov.b64 	%rd7720, {%r5203, %r5202};
	xor.b64  	%rd7721, %rd7719, %rd7720;
	xor.b64  	%rd7722, %rd7681, %rd7657;
	and.b64  	%rd7723, %rd7705, %rd7722;
	xor.b64  	%rd7724, %rd7723, %rd7657;
	add.s64 	%rd7725, %rd7724, %rd7633;
	add.s64 	%rd7726, %rd7725, %rd7721;
	add.s64 	%rd7727, %rd7726, %rd13762;
	add.s64 	%rd7728, %rd7727, 6128411473006802146;
	add.s64 	%rd7729, %rd7728, %rd7644;
	and.b64  	%rd7730, %rd7716, %rd7692;
	or.b64  	%rd7731, %rd7716, %rd7692;
	and.b64  	%rd7732, %rd7731, %rd7668;
	or.b64  	%rd7733, %rd7732, %rd7730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5204,%dummy}, %rd7716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5205}, %rd7716;
	}
	shf.r.wrap.b32 	%r5206, %r5205, %r5204, 28;
	shf.r.wrap.b32 	%r5207, %r5204, %r5205, 28;
	mov.b64 	%rd7734, {%r5207, %r5206};
	shf.l.wrap.b32 	%r5208, %r5204, %r5205, 30;
	shf.l.wrap.b32 	%r5209, %r5205, %r5204, 30;
	mov.b64 	%rd7735, {%r5209, %r5208};
	xor.b64  	%rd7736, %rd7734, %rd7735;
	shf.l.wrap.b32 	%r5210, %r5204, %r5205, 25;
	shf.l.wrap.b32 	%r5211, %r5205, %r5204, 25;
	mov.b64 	%rd7737, {%r5211, %r5210};
	xor.b64  	%rd7738, %rd7736, %rd7737;
	add.s64 	%rd7739, %rd7738, %rd7733;
	add.s64 	%rd7740, %rd7739, %rd7728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5212,%dummy}, %rd7729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5213}, %rd7729;
	}
	shf.r.wrap.b32 	%r5214, %r5213, %r5212, 14;
	shf.r.wrap.b32 	%r5215, %r5212, %r5213, 14;
	mov.b64 	%rd7741, {%r5215, %r5214};
	shf.r.wrap.b32 	%r5216, %r5213, %r5212, 18;
	shf.r.wrap.b32 	%r5217, %r5212, %r5213, 18;
	mov.b64 	%rd7742, {%r5217, %r5216};
	xor.b64  	%rd7743, %rd7741, %rd7742;
	shf.l.wrap.b32 	%r5218, %r5212, %r5213, 23;
	shf.l.wrap.b32 	%r5219, %r5213, %r5212, 23;
	mov.b64 	%rd7744, {%r5219, %r5218};
	xor.b64  	%rd7745, %rd7743, %rd7744;
	xor.b64  	%rd7746, %rd7705, %rd7681;
	and.b64  	%rd7747, %rd7729, %rd7746;
	xor.b64  	%rd7748, %rd7747, %rd7681;
	add.s64 	%rd7749, %rd7748, %rd7657;
	add.s64 	%rd7750, %rd7749, %rd7745;
	add.s64 	%rd7751, %rd7750, %rd13761;
	add.s64 	%rd7752, %rd7751, 8268148722764581231;
	add.s64 	%rd13781, %rd7752, %rd7668;
	and.b64  	%rd7753, %rd7740, %rd7716;
	or.b64  	%rd7754, %rd7740, %rd7716;
	and.b64  	%rd7755, %rd7754, %rd7692;
	or.b64  	%rd7756, %rd7755, %rd7753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5220,%dummy}, %rd7740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5221}, %rd7740;
	}
	shf.r.wrap.b32 	%r5222, %r5221, %r5220, 28;
	shf.r.wrap.b32 	%r5223, %r5220, %r5221, 28;
	mov.b64 	%rd7757, {%r5223, %r5222};
	shf.l.wrap.b32 	%r5224, %r5220, %r5221, 30;
	shf.l.wrap.b32 	%r5225, %r5221, %r5220, 30;
	mov.b64 	%rd7758, {%r5225, %r5224};
	xor.b64  	%rd7759, %rd7757, %rd7758;
	shf.l.wrap.b32 	%r5226, %r5220, %r5221, 25;
	shf.l.wrap.b32 	%r5227, %r5221, %r5220, 25;
	mov.b64 	%rd7760, {%r5227, %r5226};
	xor.b64  	%rd7761, %rd7759, %rd7760;
	add.s64 	%rd7762, %rd7761, %rd7756;
	add.s64 	%rd13777, %rd7762, %rd7752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5228,%dummy}, %rd13781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5229}, %rd13781;
	}
	shf.r.wrap.b32 	%r5230, %r5229, %r5228, 14;
	shf.r.wrap.b32 	%r5231, %r5228, %r5229, 14;
	mov.b64 	%rd7763, {%r5231, %r5230};
	shf.r.wrap.b32 	%r5232, %r5229, %r5228, 18;
	shf.r.wrap.b32 	%r5233, %r5228, %r5229, 18;
	mov.b64 	%rd7764, {%r5233, %r5232};
	xor.b64  	%rd7765, %rd7763, %rd7764;
	shf.l.wrap.b32 	%r5234, %r5228, %r5229, 23;
	shf.l.wrap.b32 	%r5235, %r5229, %r5228, 23;
	mov.b64 	%rd7766, {%r5235, %r5234};
	xor.b64  	%rd7767, %rd7765, %rd7766;
	xor.b64  	%rd7768, %rd7729, %rd7705;
	and.b64  	%rd7769, %rd13781, %rd7768;
	xor.b64  	%rd7770, %rd7769, %rd7705;
	add.s64 	%rd7771, %rd7770, %rd7681;
	add.s64 	%rd7772, %rd7771, %rd7767;
	add.s64 	%rd7773, %rd7772, %rd13760;
	add.s64 	%rd7774, %rd7773, -9160688886553864527;
	add.s64 	%rd13780, %rd7774, %rd7692;
	and.b64  	%rd7775, %rd13777, %rd7740;
	or.b64  	%rd7776, %rd13777, %rd7740;
	and.b64  	%rd7777, %rd7776, %rd7716;
	or.b64  	%rd7778, %rd7777, %rd7775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5236,%dummy}, %rd13777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5237}, %rd13777;
	}
	shf.r.wrap.b32 	%r5238, %r5237, %r5236, 28;
	shf.r.wrap.b32 	%r5239, %r5236, %r5237, 28;
	mov.b64 	%rd7779, {%r5239, %r5238};
	shf.l.wrap.b32 	%r5240, %r5236, %r5237, 30;
	shf.l.wrap.b32 	%r5241, %r5237, %r5236, 30;
	mov.b64 	%rd7780, {%r5241, %r5240};
	xor.b64  	%rd7781, %rd7779, %rd7780;
	shf.l.wrap.b32 	%r5242, %r5236, %r5237, 25;
	shf.l.wrap.b32 	%r5243, %r5237, %r5236, 25;
	mov.b64 	%rd7782, {%r5243, %r5242};
	xor.b64  	%rd7783, %rd7781, %rd7782;
	add.s64 	%rd7784, %rd7783, %rd7778;
	add.s64 	%rd13776, %rd7784, %rd7774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5244,%dummy}, %rd13780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5245}, %rd13780;
	}
	shf.r.wrap.b32 	%r5246, %r5245, %r5244, 14;
	shf.r.wrap.b32 	%r5247, %r5244, %r5245, 14;
	mov.b64 	%rd7785, {%r5247, %r5246};
	shf.r.wrap.b32 	%r5248, %r5245, %r5244, 18;
	shf.r.wrap.b32 	%r5249, %r5244, %r5245, 18;
	mov.b64 	%rd7786, {%r5249, %r5248};
	xor.b64  	%rd7787, %rd7785, %rd7786;
	shf.l.wrap.b32 	%r5250, %r5244, %r5245, 23;
	shf.l.wrap.b32 	%r5251, %r5245, %r5244, 23;
	mov.b64 	%rd7788, {%r5251, %r5250};
	xor.b64  	%rd7789, %rd7787, %rd7788;
	xor.b64  	%rd7790, %rd13781, %rd7729;
	and.b64  	%rd7791, %rd13780, %rd7790;
	xor.b64  	%rd7792, %rd7791, %rd7729;
	add.s64 	%rd7793, %rd7792, %rd7705;
	add.s64 	%rd7794, %rd7793, %rd7789;
	add.s64 	%rd7795, %rd7794, %rd13759;
	add.s64 	%rd7796, %rd7795, -7215885187991268811;
	add.s64 	%rd13779, %rd7796, %rd7716;
	and.b64  	%rd7797, %rd13776, %rd13777;
	or.b64  	%rd7798, %rd13776, %rd13777;
	and.b64  	%rd7799, %rd7798, %rd7740;
	or.b64  	%rd7800, %rd7799, %rd7797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5252,%dummy}, %rd13776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5253}, %rd13776;
	}
	shf.r.wrap.b32 	%r5254, %r5253, %r5252, 28;
	shf.r.wrap.b32 	%r5255, %r5252, %r5253, 28;
	mov.b64 	%rd7801, {%r5255, %r5254};
	shf.l.wrap.b32 	%r5256, %r5252, %r5253, 30;
	shf.l.wrap.b32 	%r5257, %r5253, %r5252, 30;
	mov.b64 	%rd7802, {%r5257, %r5256};
	xor.b64  	%rd7803, %rd7801, %rd7802;
	shf.l.wrap.b32 	%r5258, %r5252, %r5253, 25;
	shf.l.wrap.b32 	%r5259, %r5253, %r5252, 25;
	mov.b64 	%rd7804, {%r5259, %r5258};
	xor.b64  	%rd7805, %rd7803, %rd7804;
	add.s64 	%rd7806, %rd7805, %rd7800;
	add.s64 	%rd13775, %rd7806, %rd7796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5260,%dummy}, %rd13779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5261}, %rd13779;
	}
	shf.r.wrap.b32 	%r5262, %r5261, %r5260, 14;
	shf.r.wrap.b32 	%r5263, %r5260, %r5261, 14;
	mov.b64 	%rd7807, {%r5263, %r5262};
	shf.r.wrap.b32 	%r5264, %r5261, %r5260, 18;
	shf.r.wrap.b32 	%r5265, %r5260, %r5261, 18;
	mov.b64 	%rd7808, {%r5265, %r5264};
	xor.b64  	%rd7809, %rd7807, %rd7808;
	shf.l.wrap.b32 	%r5266, %r5260, %r5261, 23;
	shf.l.wrap.b32 	%r5267, %r5261, %r5260, 23;
	mov.b64 	%rd7810, {%r5267, %r5266};
	xor.b64  	%rd7811, %rd7809, %rd7810;
	xor.b64  	%rd7812, %rd13780, %rd13781;
	and.b64  	%rd7813, %rd13779, %rd7812;
	xor.b64  	%rd7814, %rd7813, %rd13781;
	add.s64 	%rd7815, %rd7814, %rd7729;
	add.s64 	%rd7816, %rd7815, %rd7811;
	add.s64 	%rd7817, %rd7816, %rd13758;
	add.s64 	%rd7818, %rd7817, -4495734319001033068;
	add.s64 	%rd13778, %rd7818, %rd7740;
	and.b64  	%rd7819, %rd13775, %rd13776;
	or.b64  	%rd7820, %rd13775, %rd13776;
	and.b64  	%rd7821, %rd7820, %rd13777;
	or.b64  	%rd7822, %rd7821, %rd7819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5268,%dummy}, %rd13775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5269}, %rd13775;
	}
	shf.r.wrap.b32 	%r5270, %r5269, %r5268, 28;
	shf.r.wrap.b32 	%r5271, %r5268, %r5269, 28;
	mov.b64 	%rd7823, {%r5271, %r5270};
	shf.l.wrap.b32 	%r5272, %r5268, %r5269, 30;
	shf.l.wrap.b32 	%r5273, %r5269, %r5268, 30;
	mov.b64 	%rd7824, {%r5273, %r5272};
	xor.b64  	%rd7825, %rd7823, %rd7824;
	shf.l.wrap.b32 	%r5274, %r5268, %r5269, 25;
	shf.l.wrap.b32 	%r5275, %r5269, %r5268, 25;
	mov.b64 	%rd7826, {%r5275, %r5274};
	xor.b64  	%rd7827, %rd7825, %rd7826;
	add.s64 	%rd7828, %rd7827, %rd7822;
	add.s64 	%rd13774, %rd7828, %rd7818;
	mov.u32 	%r9742, 16;

$L__BB0_114:
	.pragma "nounroll";
	mov.u64 	%rd13509, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5276}, %rd13759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5277,%dummy}, %rd13759;
	}
	shf.l.wrap.b32 	%r5278, %r5277, %r5276, 3;
	shf.l.wrap.b32 	%r5279, %r5276, %r5277, 3;
	mov.b64 	%rd7829, {%r5279, %r5278};
	shf.r.wrap.b32 	%r5280, %r5276, %r5277, 19;
	shf.r.wrap.b32 	%r5281, %r5277, %r5276, 19;
	mov.b64 	%rd7830, {%r5281, %r5280};
	xor.b64  	%rd7831, %rd7830, %rd7829;
	shr.u64 	%rd7832, %rd13759, 6;
	xor.b64  	%rd7833, %rd7831, %rd7832;
	add.s64 	%rd7834, %rd13764, %rd13773;
	add.s64 	%rd7835, %rd7834, %rd7833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5282,%dummy}, %rd13772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5283}, %rd13772;
	}
	shf.r.wrap.b32 	%r5284, %r5283, %r5282, 8;
	shf.r.wrap.b32 	%r5285, %r5282, %r5283, 8;
	mov.b64 	%rd7836, {%r5285, %r5284};
	shf.r.wrap.b32 	%r5286, %r5283, %r5282, 1;
	shf.r.wrap.b32 	%r5287, %r5282, %r5283, 1;
	mov.b64 	%rd7837, {%r5287, %r5286};
	xor.b64  	%rd7838, %rd7837, %rd7836;
	shr.u64 	%rd7839, %rd13772, 7;
	xor.b64  	%rd7840, %rd7838, %rd7839;
	add.s64 	%rd13773, %rd7835, %rd7840;
	mul.wide.u32 	%rd7841, %r9742, 8;
	add.s64 	%rd7843, %rd13509, %rd7841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5288,%dummy}, %rd13778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5289}, %rd13778;
	}
	shf.r.wrap.b32 	%r5290, %r5289, %r5288, 18;
	shf.r.wrap.b32 	%r5291, %r5288, %r5289, 18;
	mov.b64 	%rd7844, {%r5291, %r5290};
	shf.r.wrap.b32 	%r5292, %r5289, %r5288, 14;
	shf.r.wrap.b32 	%r5293, %r5288, %r5289, 14;
	mov.b64 	%rd7845, {%r5293, %r5292};
	xor.b64  	%rd7846, %rd7845, %rd7844;
	shf.l.wrap.b32 	%r5294, %r5288, %r5289, 23;
	shf.l.wrap.b32 	%r5295, %r5289, %r5288, 23;
	mov.b64 	%rd7847, {%r5295, %r5294};
	xor.b64  	%rd7848, %rd7846, %rd7847;
	xor.b64  	%rd7849, %rd13779, %rd13780;
	and.b64  	%rd7850, %rd13778, %rd7849;
	xor.b64  	%rd7851, %rd7850, %rd13780;
	add.s64 	%rd7852, %rd7851, %rd13781;
	add.s64 	%rd7853, %rd7852, %rd7848;
	ld.const.u64 	%rd7854, [%rd7843];
	add.s64 	%rd7855, %rd7853, %rd7854;
	add.s64 	%rd7856, %rd7855, %rd13773;
	add.s64 	%rd7857, %rd7856, %rd13777;
	or.b64  	%rd7858, %rd13774, %rd13775;
	and.b64  	%rd7859, %rd7858, %rd13776;
	and.b64  	%rd7860, %rd13774, %rd13775;
	or.b64  	%rd7861, %rd7859, %rd7860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5296}, %rd13774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5297,%dummy}, %rd13774;
	}
	shf.l.wrap.b32 	%r5298, %r5297, %r5296, 30;
	shf.l.wrap.b32 	%r5299, %r5296, %r5297, 30;
	mov.b64 	%rd7862, {%r5299, %r5298};
	shf.r.wrap.b32 	%r5300, %r5296, %r5297, 28;
	shf.r.wrap.b32 	%r5301, %r5297, %r5296, 28;
	mov.b64 	%rd7863, {%r5301, %r5300};
	xor.b64  	%rd7864, %rd7863, %rd7862;
	shf.l.wrap.b32 	%r5302, %r5297, %r5296, 25;
	shf.l.wrap.b32 	%r5303, %r5296, %r5297, 25;
	mov.b64 	%rd7865, {%r5303, %r5302};
	xor.b64  	%rd7866, %rd7864, %rd7865;
	add.s64 	%rd7867, %rd7866, %rd7861;
	add.s64 	%rd7868, %rd7867, %rd7856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5304}, %rd13758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5305,%dummy}, %rd13758;
	}
	shf.l.wrap.b32 	%r5306, %r5305, %r5304, 3;
	shf.l.wrap.b32 	%r5307, %r5304, %r5305, 3;
	mov.b64 	%rd7869, {%r5307, %r5306};
	shf.r.wrap.b32 	%r5308, %r5304, %r5305, 19;
	shf.r.wrap.b32 	%r5309, %r5305, %r5304, 19;
	mov.b64 	%rd7870, {%r5309, %r5308};
	xor.b64  	%rd7871, %rd7870, %rd7869;
	shr.u64 	%rd7872, %rd13758, 6;
	xor.b64  	%rd7873, %rd7871, %rd7872;
	add.s64 	%rd7874, %rd13763, %rd13772;
	add.s64 	%rd7875, %rd7874, %rd7873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5310,%dummy}, %rd13771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5311}, %rd13771;
	}
	shf.r.wrap.b32 	%r5312, %r5311, %r5310, 8;
	shf.r.wrap.b32 	%r5313, %r5310, %r5311, 8;
	mov.b64 	%rd7876, {%r5313, %r5312};
	shf.r.wrap.b32 	%r5314, %r5311, %r5310, 1;
	shf.r.wrap.b32 	%r5315, %r5310, %r5311, 1;
	mov.b64 	%rd7877, {%r5315, %r5314};
	xor.b64  	%rd7878, %rd7877, %rd7876;
	shr.u64 	%rd7879, %rd13771, 7;
	xor.b64  	%rd7880, %rd7878, %rd7879;
	add.s64 	%rd13772, %rd7875, %rd7880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5316,%dummy}, %rd7857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5317}, %rd7857;
	}
	shf.r.wrap.b32 	%r5318, %r5317, %r5316, 14;
	shf.r.wrap.b32 	%r5319, %r5316, %r5317, 14;
	mov.b64 	%rd7881, {%r5319, %r5318};
	shf.r.wrap.b32 	%r5320, %r5317, %r5316, 18;
	shf.r.wrap.b32 	%r5321, %r5316, %r5317, 18;
	mov.b64 	%rd7882, {%r5321, %r5320};
	xor.b64  	%rd7883, %rd7881, %rd7882;
	shf.l.wrap.b32 	%r5322, %r5316, %r5317, 23;
	shf.l.wrap.b32 	%r5323, %r5317, %r5316, 23;
	mov.b64 	%rd7884, {%r5323, %r5322};
	xor.b64  	%rd7885, %rd7883, %rd7884;
	xor.b64  	%rd7886, %rd13778, %rd13779;
	and.b64  	%rd7887, %rd7857, %rd7886;
	xor.b64  	%rd7888, %rd7887, %rd13779;
	add.s64 	%rd7889, %rd7888, %rd13780;
	add.s64 	%rd7890, %rd7889, %rd7885;
	ld.const.u64 	%rd7891, [%rd7843+8];
	add.s64 	%rd7892, %rd7890, %rd7891;
	add.s64 	%rd7893, %rd7892, %rd13772;
	add.s64 	%rd7894, %rd7893, %rd13776;
	and.b64  	%rd7895, %rd7868, %rd13774;
	or.b64  	%rd7896, %rd7868, %rd13774;
	and.b64  	%rd7897, %rd7896, %rd13775;
	or.b64  	%rd7898, %rd7897, %rd7895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5324,%dummy}, %rd7868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5325}, %rd7868;
	}
	shf.r.wrap.b32 	%r5326, %r5325, %r5324, 28;
	shf.r.wrap.b32 	%r5327, %r5324, %r5325, 28;
	mov.b64 	%rd7899, {%r5327, %r5326};
	shf.l.wrap.b32 	%r5328, %r5324, %r5325, 30;
	shf.l.wrap.b32 	%r5329, %r5325, %r5324, 30;
	mov.b64 	%rd7900, {%r5329, %r5328};
	xor.b64  	%rd7901, %rd7899, %rd7900;
	shf.l.wrap.b32 	%r5330, %r5324, %r5325, 25;
	shf.l.wrap.b32 	%r5331, %r5325, %r5324, 25;
	mov.b64 	%rd7902, {%r5331, %r5330};
	xor.b64  	%rd7903, %rd7901, %rd7902;
	add.s64 	%rd7904, %rd7903, %rd7898;
	add.s64 	%rd7905, %rd7904, %rd7893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5332,%dummy}, %rd13773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5333}, %rd13773;
	}
	shf.r.wrap.b32 	%r5334, %r5333, %r5332, 19;
	shf.r.wrap.b32 	%r5335, %r5332, %r5333, 19;
	mov.b64 	%rd7906, {%r5335, %r5334};
	shf.l.wrap.b32 	%r5336, %r5332, %r5333, 3;
	shf.l.wrap.b32 	%r5337, %r5333, %r5332, 3;
	mov.b64 	%rd7907, {%r5337, %r5336};
	xor.b64  	%rd7908, %rd7906, %rd7907;
	shr.u64 	%rd7909, %rd13773, 6;
	xor.b64  	%rd7910, %rd7908, %rd7909;
	add.s64 	%rd7911, %rd13762, %rd13771;
	add.s64 	%rd7912, %rd7911, %rd7910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5338,%dummy}, %rd13770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5339}, %rd13770;
	}
	shf.r.wrap.b32 	%r5340, %r5339, %r5338, 8;
	shf.r.wrap.b32 	%r5341, %r5338, %r5339, 8;
	mov.b64 	%rd7913, {%r5341, %r5340};
	shf.r.wrap.b32 	%r5342, %r5339, %r5338, 1;
	shf.r.wrap.b32 	%r5343, %r5338, %r5339, 1;
	mov.b64 	%rd7914, {%r5343, %r5342};
	xor.b64  	%rd7915, %rd7914, %rd7913;
	shr.u64 	%rd7916, %rd13770, 7;
	xor.b64  	%rd7917, %rd7915, %rd7916;
	add.s64 	%rd13771, %rd7912, %rd7917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5344,%dummy}, %rd7894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5345}, %rd7894;
	}
	shf.r.wrap.b32 	%r5346, %r5345, %r5344, 14;
	shf.r.wrap.b32 	%r5347, %r5344, %r5345, 14;
	mov.b64 	%rd7918, {%r5347, %r5346};
	shf.r.wrap.b32 	%r5348, %r5345, %r5344, 18;
	shf.r.wrap.b32 	%r5349, %r5344, %r5345, 18;
	mov.b64 	%rd7919, {%r5349, %r5348};
	xor.b64  	%rd7920, %rd7918, %rd7919;
	shf.l.wrap.b32 	%r5350, %r5344, %r5345, 23;
	shf.l.wrap.b32 	%r5351, %r5345, %r5344, 23;
	mov.b64 	%rd7921, {%r5351, %r5350};
	xor.b64  	%rd7922, %rd7920, %rd7921;
	xor.b64  	%rd7923, %rd7857, %rd13778;
	and.b64  	%rd7924, %rd7894, %rd7923;
	xor.b64  	%rd7925, %rd7924, %rd13778;
	add.s64 	%rd7926, %rd7925, %rd13779;
	add.s64 	%rd7927, %rd7926, %rd7922;
	ld.const.u64 	%rd7928, [%rd7843+16];
	add.s64 	%rd7929, %rd7927, %rd7928;
	add.s64 	%rd7930, %rd7929, %rd13771;
	add.s64 	%rd7931, %rd7930, %rd13775;
	and.b64  	%rd7932, %rd7905, %rd7868;
	or.b64  	%rd7933, %rd7905, %rd7868;
	and.b64  	%rd7934, %rd7933, %rd13774;
	or.b64  	%rd7935, %rd7934, %rd7932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5352,%dummy}, %rd7905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5353}, %rd7905;
	}
	shf.r.wrap.b32 	%r5354, %r5353, %r5352, 28;
	shf.r.wrap.b32 	%r5355, %r5352, %r5353, 28;
	mov.b64 	%rd7936, {%r5355, %r5354};
	shf.l.wrap.b32 	%r5356, %r5352, %r5353, 30;
	shf.l.wrap.b32 	%r5357, %r5353, %r5352, 30;
	mov.b64 	%rd7937, {%r5357, %r5356};
	xor.b64  	%rd7938, %rd7936, %rd7937;
	shf.l.wrap.b32 	%r5358, %r5352, %r5353, 25;
	shf.l.wrap.b32 	%r5359, %r5353, %r5352, 25;
	mov.b64 	%rd7939, {%r5359, %r5358};
	xor.b64  	%rd7940, %rd7938, %rd7939;
	add.s64 	%rd7941, %rd7940, %rd7935;
	add.s64 	%rd7942, %rd7941, %rd7930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5360,%dummy}, %rd13772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5361}, %rd13772;
	}
	shf.r.wrap.b32 	%r5362, %r5361, %r5360, 19;
	shf.r.wrap.b32 	%r5363, %r5360, %r5361, 19;
	mov.b64 	%rd7943, {%r5363, %r5362};
	shf.l.wrap.b32 	%r5364, %r5360, %r5361, 3;
	shf.l.wrap.b32 	%r5365, %r5361, %r5360, 3;
	mov.b64 	%rd7944, {%r5365, %r5364};
	xor.b64  	%rd7945, %rd7943, %rd7944;
	shr.u64 	%rd7946, %rd13772, 6;
	xor.b64  	%rd7947, %rd7945, %rd7946;
	add.s64 	%rd7948, %rd13761, %rd13770;
	add.s64 	%rd7949, %rd7948, %rd7947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5366,%dummy}, %rd13769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5367}, %rd13769;
	}
	shf.r.wrap.b32 	%r5368, %r5367, %r5366, 8;
	shf.r.wrap.b32 	%r5369, %r5366, %r5367, 8;
	mov.b64 	%rd7950, {%r5369, %r5368};
	shf.r.wrap.b32 	%r5370, %r5367, %r5366, 1;
	shf.r.wrap.b32 	%r5371, %r5366, %r5367, 1;
	mov.b64 	%rd7951, {%r5371, %r5370};
	xor.b64  	%rd7952, %rd7951, %rd7950;
	shr.u64 	%rd7953, %rd13769, 7;
	xor.b64  	%rd7954, %rd7952, %rd7953;
	add.s64 	%rd13770, %rd7949, %rd7954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5372,%dummy}, %rd7931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5373}, %rd7931;
	}
	shf.r.wrap.b32 	%r5374, %r5373, %r5372, 14;
	shf.r.wrap.b32 	%r5375, %r5372, %r5373, 14;
	mov.b64 	%rd7955, {%r5375, %r5374};
	shf.r.wrap.b32 	%r5376, %r5373, %r5372, 18;
	shf.r.wrap.b32 	%r5377, %r5372, %r5373, 18;
	mov.b64 	%rd7956, {%r5377, %r5376};
	xor.b64  	%rd7957, %rd7955, %rd7956;
	shf.l.wrap.b32 	%r5378, %r5372, %r5373, 23;
	shf.l.wrap.b32 	%r5379, %r5373, %r5372, 23;
	mov.b64 	%rd7958, {%r5379, %r5378};
	xor.b64  	%rd7959, %rd7957, %rd7958;
	xor.b64  	%rd7960, %rd7894, %rd7857;
	and.b64  	%rd7961, %rd7931, %rd7960;
	xor.b64  	%rd7962, %rd7961, %rd7857;
	add.s64 	%rd7963, %rd7962, %rd13778;
	add.s64 	%rd7964, %rd7963, %rd7959;
	ld.const.u64 	%rd7965, [%rd7843+24];
	add.s64 	%rd7966, %rd7964, %rd7965;
	add.s64 	%rd7967, %rd7966, %rd13770;
	add.s64 	%rd7968, %rd7967, %rd13774;
	and.b64  	%rd7969, %rd7942, %rd7905;
	or.b64  	%rd7970, %rd7942, %rd7905;
	and.b64  	%rd7971, %rd7970, %rd7868;
	or.b64  	%rd7972, %rd7971, %rd7969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5380,%dummy}, %rd7942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5381}, %rd7942;
	}
	shf.r.wrap.b32 	%r5382, %r5381, %r5380, 28;
	shf.r.wrap.b32 	%r5383, %r5380, %r5381, 28;
	mov.b64 	%rd7973, {%r5383, %r5382};
	shf.l.wrap.b32 	%r5384, %r5380, %r5381, 30;
	shf.l.wrap.b32 	%r5385, %r5381, %r5380, 30;
	mov.b64 	%rd7974, {%r5385, %r5384};
	xor.b64  	%rd7975, %rd7973, %rd7974;
	shf.l.wrap.b32 	%r5386, %r5380, %r5381, 25;
	shf.l.wrap.b32 	%r5387, %r5381, %r5380, 25;
	mov.b64 	%rd7976, {%r5387, %r5386};
	xor.b64  	%rd7977, %rd7975, %rd7976;
	add.s64 	%rd7978, %rd7977, %rd7972;
	add.s64 	%rd7979, %rd7978, %rd7967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5388,%dummy}, %rd13771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5389}, %rd13771;
	}
	shf.r.wrap.b32 	%r5390, %r5389, %r5388, 19;
	shf.r.wrap.b32 	%r5391, %r5388, %r5389, 19;
	mov.b64 	%rd7980, {%r5391, %r5390};
	shf.l.wrap.b32 	%r5392, %r5388, %r5389, 3;
	shf.l.wrap.b32 	%r5393, %r5389, %r5388, 3;
	mov.b64 	%rd7981, {%r5393, %r5392};
	xor.b64  	%rd7982, %rd7980, %rd7981;
	shr.u64 	%rd7983, %rd13771, 6;
	xor.b64  	%rd7984, %rd7982, %rd7983;
	add.s64 	%rd7985, %rd13760, %rd13769;
	add.s64 	%rd7986, %rd7985, %rd7984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5394,%dummy}, %rd13768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5395}, %rd13768;
	}
	shf.r.wrap.b32 	%r5396, %r5395, %r5394, 8;
	shf.r.wrap.b32 	%r5397, %r5394, %r5395, 8;
	mov.b64 	%rd7987, {%r5397, %r5396};
	shf.r.wrap.b32 	%r5398, %r5395, %r5394, 1;
	shf.r.wrap.b32 	%r5399, %r5394, %r5395, 1;
	mov.b64 	%rd7988, {%r5399, %r5398};
	xor.b64  	%rd7989, %rd7988, %rd7987;
	shr.u64 	%rd7990, %rd13768, 7;
	xor.b64  	%rd7991, %rd7989, %rd7990;
	add.s64 	%rd13769, %rd7986, %rd7991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5400,%dummy}, %rd7968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5401}, %rd7968;
	}
	shf.r.wrap.b32 	%r5402, %r5401, %r5400, 14;
	shf.r.wrap.b32 	%r5403, %r5400, %r5401, 14;
	mov.b64 	%rd7992, {%r5403, %r5402};
	shf.r.wrap.b32 	%r5404, %r5401, %r5400, 18;
	shf.r.wrap.b32 	%r5405, %r5400, %r5401, 18;
	mov.b64 	%rd7993, {%r5405, %r5404};
	xor.b64  	%rd7994, %rd7992, %rd7993;
	shf.l.wrap.b32 	%r5406, %r5400, %r5401, 23;
	shf.l.wrap.b32 	%r5407, %r5401, %r5400, 23;
	mov.b64 	%rd7995, {%r5407, %r5406};
	xor.b64  	%rd7996, %rd7994, %rd7995;
	xor.b64  	%rd7997, %rd7931, %rd7894;
	and.b64  	%rd7998, %rd7968, %rd7997;
	xor.b64  	%rd7999, %rd7998, %rd7894;
	add.s64 	%rd8000, %rd7999, %rd7857;
	add.s64 	%rd8001, %rd8000, %rd7996;
	ld.const.u64 	%rd8002, [%rd7843+32];
	add.s64 	%rd8003, %rd8001, %rd8002;
	add.s64 	%rd8004, %rd8003, %rd13769;
	add.s64 	%rd8005, %rd8004, %rd7868;
	and.b64  	%rd8006, %rd7979, %rd7942;
	or.b64  	%rd8007, %rd7979, %rd7942;
	and.b64  	%rd8008, %rd8007, %rd7905;
	or.b64  	%rd8009, %rd8008, %rd8006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5408,%dummy}, %rd7979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5409}, %rd7979;
	}
	shf.r.wrap.b32 	%r5410, %r5409, %r5408, 28;
	shf.r.wrap.b32 	%r5411, %r5408, %r5409, 28;
	mov.b64 	%rd8010, {%r5411, %r5410};
	shf.l.wrap.b32 	%r5412, %r5408, %r5409, 30;
	shf.l.wrap.b32 	%r5413, %r5409, %r5408, 30;
	mov.b64 	%rd8011, {%r5413, %r5412};
	xor.b64  	%rd8012, %rd8010, %rd8011;
	shf.l.wrap.b32 	%r5414, %r5408, %r5409, 25;
	shf.l.wrap.b32 	%r5415, %r5409, %r5408, 25;
	mov.b64 	%rd8013, {%r5415, %r5414};
	xor.b64  	%rd8014, %rd8012, %rd8013;
	add.s64 	%rd8015, %rd8014, %rd8009;
	add.s64 	%rd8016, %rd8015, %rd8004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5416,%dummy}, %rd13770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5417}, %rd13770;
	}
	shf.r.wrap.b32 	%r5418, %r5417, %r5416, 19;
	shf.r.wrap.b32 	%r5419, %r5416, %r5417, 19;
	mov.b64 	%rd8017, {%r5419, %r5418};
	shf.l.wrap.b32 	%r5420, %r5416, %r5417, 3;
	shf.l.wrap.b32 	%r5421, %r5417, %r5416, 3;
	mov.b64 	%rd8018, {%r5421, %r5420};
	xor.b64  	%rd8019, %rd8017, %rd8018;
	shr.u64 	%rd8020, %rd13770, 6;
	xor.b64  	%rd8021, %rd8019, %rd8020;
	add.s64 	%rd8022, %rd13759, %rd13768;
	add.s64 	%rd8023, %rd8022, %rd8021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd13767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5423}, %rd13767;
	}
	shf.r.wrap.b32 	%r5424, %r5423, %r5422, 8;
	shf.r.wrap.b32 	%r5425, %r5422, %r5423, 8;
	mov.b64 	%rd8024, {%r5425, %r5424};
	shf.r.wrap.b32 	%r5426, %r5423, %r5422, 1;
	shf.r.wrap.b32 	%r5427, %r5422, %r5423, 1;
	mov.b64 	%rd8025, {%r5427, %r5426};
	xor.b64  	%rd8026, %rd8025, %rd8024;
	shr.u64 	%rd8027, %rd13767, 7;
	xor.b64  	%rd8028, %rd8026, %rd8027;
	add.s64 	%rd13768, %rd8023, %rd8028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5428,%dummy}, %rd8005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5429}, %rd8005;
	}
	shf.r.wrap.b32 	%r5430, %r5429, %r5428, 14;
	shf.r.wrap.b32 	%r5431, %r5428, %r5429, 14;
	mov.b64 	%rd8029, {%r5431, %r5430};
	shf.r.wrap.b32 	%r5432, %r5429, %r5428, 18;
	shf.r.wrap.b32 	%r5433, %r5428, %r5429, 18;
	mov.b64 	%rd8030, {%r5433, %r5432};
	xor.b64  	%rd8031, %rd8029, %rd8030;
	shf.l.wrap.b32 	%r5434, %r5428, %r5429, 23;
	shf.l.wrap.b32 	%r5435, %r5429, %r5428, 23;
	mov.b64 	%rd8032, {%r5435, %r5434};
	xor.b64  	%rd8033, %rd8031, %rd8032;
	xor.b64  	%rd8034, %rd7968, %rd7931;
	and.b64  	%rd8035, %rd8005, %rd8034;
	xor.b64  	%rd8036, %rd8035, %rd7931;
	add.s64 	%rd8037, %rd8036, %rd7894;
	add.s64 	%rd8038, %rd8037, %rd8033;
	ld.const.u64 	%rd8039, [%rd7843+40];
	add.s64 	%rd8040, %rd8038, %rd8039;
	add.s64 	%rd8041, %rd8040, %rd13768;
	add.s64 	%rd8042, %rd8041, %rd7905;
	and.b64  	%rd8043, %rd8016, %rd7979;
	or.b64  	%rd8044, %rd8016, %rd7979;
	and.b64  	%rd8045, %rd8044, %rd7942;
	or.b64  	%rd8046, %rd8045, %rd8043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5436,%dummy}, %rd8016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5437}, %rd8016;
	}
	shf.r.wrap.b32 	%r5438, %r5437, %r5436, 28;
	shf.r.wrap.b32 	%r5439, %r5436, %r5437, 28;
	mov.b64 	%rd8047, {%r5439, %r5438};
	shf.l.wrap.b32 	%r5440, %r5436, %r5437, 30;
	shf.l.wrap.b32 	%r5441, %r5437, %r5436, 30;
	mov.b64 	%rd8048, {%r5441, %r5440};
	xor.b64  	%rd8049, %rd8047, %rd8048;
	shf.l.wrap.b32 	%r5442, %r5436, %r5437, 25;
	shf.l.wrap.b32 	%r5443, %r5437, %r5436, 25;
	mov.b64 	%rd8050, {%r5443, %r5442};
	xor.b64  	%rd8051, %rd8049, %rd8050;
	add.s64 	%rd8052, %rd8051, %rd8046;
	add.s64 	%rd8053, %rd8052, %rd8041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5444,%dummy}, %rd13769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5445}, %rd13769;
	}
	shf.r.wrap.b32 	%r5446, %r5445, %r5444, 19;
	shf.r.wrap.b32 	%r5447, %r5444, %r5445, 19;
	mov.b64 	%rd8054, {%r5447, %r5446};
	shf.l.wrap.b32 	%r5448, %r5444, %r5445, 3;
	shf.l.wrap.b32 	%r5449, %r5445, %r5444, 3;
	mov.b64 	%rd8055, {%r5449, %r5448};
	xor.b64  	%rd8056, %rd8054, %rd8055;
	shr.u64 	%rd8057, %rd13769, 6;
	xor.b64  	%rd8058, %rd8056, %rd8057;
	add.s64 	%rd8059, %rd13758, %rd13767;
	add.s64 	%rd8060, %rd8059, %rd8058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5450,%dummy}, %rd13766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5451}, %rd13766;
	}
	shf.r.wrap.b32 	%r5452, %r5451, %r5450, 8;
	shf.r.wrap.b32 	%r5453, %r5450, %r5451, 8;
	mov.b64 	%rd8061, {%r5453, %r5452};
	shf.r.wrap.b32 	%r5454, %r5451, %r5450, 1;
	shf.r.wrap.b32 	%r5455, %r5450, %r5451, 1;
	mov.b64 	%rd8062, {%r5455, %r5454};
	xor.b64  	%rd8063, %rd8062, %rd8061;
	shr.u64 	%rd8064, %rd13766, 7;
	xor.b64  	%rd8065, %rd8063, %rd8064;
	add.s64 	%rd13767, %rd8060, %rd8065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5456,%dummy}, %rd8042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5457}, %rd8042;
	}
	shf.r.wrap.b32 	%r5458, %r5457, %r5456, 14;
	shf.r.wrap.b32 	%r5459, %r5456, %r5457, 14;
	mov.b64 	%rd8066, {%r5459, %r5458};
	shf.r.wrap.b32 	%r5460, %r5457, %r5456, 18;
	shf.r.wrap.b32 	%r5461, %r5456, %r5457, 18;
	mov.b64 	%rd8067, {%r5461, %r5460};
	xor.b64  	%rd8068, %rd8066, %rd8067;
	shf.l.wrap.b32 	%r5462, %r5456, %r5457, 23;
	shf.l.wrap.b32 	%r5463, %r5457, %r5456, 23;
	mov.b64 	%rd8069, {%r5463, %r5462};
	xor.b64  	%rd8070, %rd8068, %rd8069;
	xor.b64  	%rd8071, %rd8005, %rd7968;
	and.b64  	%rd8072, %rd8042, %rd8071;
	xor.b64  	%rd8073, %rd8072, %rd7968;
	add.s64 	%rd8074, %rd8073, %rd7931;
	add.s64 	%rd8075, %rd8074, %rd8070;
	ld.const.u64 	%rd8076, [%rd7843+48];
	add.s64 	%rd8077, %rd8075, %rd8076;
	add.s64 	%rd8078, %rd8077, %rd13767;
	add.s64 	%rd8079, %rd8078, %rd7942;
	and.b64  	%rd8080, %rd8053, %rd8016;
	or.b64  	%rd8081, %rd8053, %rd8016;
	and.b64  	%rd8082, %rd8081, %rd7979;
	or.b64  	%rd8083, %rd8082, %rd8080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5464,%dummy}, %rd8053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5465}, %rd8053;
	}
	shf.r.wrap.b32 	%r5466, %r5465, %r5464, 28;
	shf.r.wrap.b32 	%r5467, %r5464, %r5465, 28;
	mov.b64 	%rd8084, {%r5467, %r5466};
	shf.l.wrap.b32 	%r5468, %r5464, %r5465, 30;
	shf.l.wrap.b32 	%r5469, %r5465, %r5464, 30;
	mov.b64 	%rd8085, {%r5469, %r5468};
	xor.b64  	%rd8086, %rd8084, %rd8085;
	shf.l.wrap.b32 	%r5470, %r5464, %r5465, 25;
	shf.l.wrap.b32 	%r5471, %r5465, %r5464, 25;
	mov.b64 	%rd8087, {%r5471, %r5470};
	xor.b64  	%rd8088, %rd8086, %rd8087;
	add.s64 	%rd8089, %rd8088, %rd8083;
	add.s64 	%rd8090, %rd8089, %rd8078;
	add.s64 	%rd8091, %rd13773, %rd13766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5472,%dummy}, %rd13768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5473}, %rd13768;
	}
	shf.r.wrap.b32 	%r5474, %r5473, %r5472, 19;
	shf.r.wrap.b32 	%r5475, %r5472, %r5473, 19;
	mov.b64 	%rd8092, {%r5475, %r5474};
	shf.l.wrap.b32 	%r5476, %r5472, %r5473, 3;
	shf.l.wrap.b32 	%r5477, %r5473, %r5472, 3;
	mov.b64 	%rd8093, {%r5477, %r5476};
	xor.b64  	%rd8094, %rd8092, %rd8093;
	shr.u64 	%rd8095, %rd13768, 6;
	xor.b64  	%rd8096, %rd8094, %rd8095;
	add.s64 	%rd8097, %rd8091, %rd8096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5478,%dummy}, %rd13765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5479}, %rd13765;
	}
	shf.r.wrap.b32 	%r5480, %r5479, %r5478, 8;
	shf.r.wrap.b32 	%r5481, %r5478, %r5479, 8;
	mov.b64 	%rd8098, {%r5481, %r5480};
	shf.r.wrap.b32 	%r5482, %r5479, %r5478, 1;
	shf.r.wrap.b32 	%r5483, %r5478, %r5479, 1;
	mov.b64 	%rd8099, {%r5483, %r5482};
	xor.b64  	%rd8100, %rd8099, %rd8098;
	shr.u64 	%rd8101, %rd13765, 7;
	xor.b64  	%rd8102, %rd8100, %rd8101;
	add.s64 	%rd13766, %rd8097, %rd8102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5484,%dummy}, %rd8079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5485}, %rd8079;
	}
	shf.r.wrap.b32 	%r5486, %r5485, %r5484, 14;
	shf.r.wrap.b32 	%r5487, %r5484, %r5485, 14;
	mov.b64 	%rd8103, {%r5487, %r5486};
	shf.r.wrap.b32 	%r5488, %r5485, %r5484, 18;
	shf.r.wrap.b32 	%r5489, %r5484, %r5485, 18;
	mov.b64 	%rd8104, {%r5489, %r5488};
	xor.b64  	%rd8105, %rd8103, %rd8104;
	shf.l.wrap.b32 	%r5490, %r5484, %r5485, 23;
	shf.l.wrap.b32 	%r5491, %r5485, %r5484, 23;
	mov.b64 	%rd8106, {%r5491, %r5490};
	xor.b64  	%rd8107, %rd8105, %rd8106;
	xor.b64  	%rd8108, %rd8042, %rd8005;
	and.b64  	%rd8109, %rd8079, %rd8108;
	xor.b64  	%rd8110, %rd8109, %rd8005;
	add.s64 	%rd8111, %rd8110, %rd7968;
	add.s64 	%rd8112, %rd8111, %rd8107;
	ld.const.u64 	%rd8113, [%rd7843+56];
	add.s64 	%rd8114, %rd8112, %rd8113;
	add.s64 	%rd8115, %rd8114, %rd13766;
	add.s64 	%rd8116, %rd8115, %rd7979;
	and.b64  	%rd8117, %rd8090, %rd8053;
	or.b64  	%rd8118, %rd8090, %rd8053;
	and.b64  	%rd8119, %rd8118, %rd8016;
	or.b64  	%rd8120, %rd8119, %rd8117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5492,%dummy}, %rd8090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5493}, %rd8090;
	}
	shf.r.wrap.b32 	%r5494, %r5493, %r5492, 28;
	shf.r.wrap.b32 	%r5495, %r5492, %r5493, 28;
	mov.b64 	%rd8121, {%r5495, %r5494};
	shf.l.wrap.b32 	%r5496, %r5492, %r5493, 30;
	shf.l.wrap.b32 	%r5497, %r5493, %r5492, 30;
	mov.b64 	%rd8122, {%r5497, %r5496};
	xor.b64  	%rd8123, %rd8121, %rd8122;
	shf.l.wrap.b32 	%r5498, %r5492, %r5493, 25;
	shf.l.wrap.b32 	%r5499, %r5493, %r5492, 25;
	mov.b64 	%rd8124, {%r5499, %r5498};
	xor.b64  	%rd8125, %rd8123, %rd8124;
	add.s64 	%rd8126, %rd8125, %rd8120;
	add.s64 	%rd8127, %rd8126, %rd8115;
	add.s64 	%rd8128, %rd13772, %rd13765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5500,%dummy}, %rd13767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd13767;
	}
	shf.r.wrap.b32 	%r5502, %r5501, %r5500, 19;
	shf.r.wrap.b32 	%r5503, %r5500, %r5501, 19;
	mov.b64 	%rd8129, {%r5503, %r5502};
	shf.l.wrap.b32 	%r5504, %r5500, %r5501, 3;
	shf.l.wrap.b32 	%r5505, %r5501, %r5500, 3;
	mov.b64 	%rd8130, {%r5505, %r5504};
	xor.b64  	%rd8131, %rd8129, %rd8130;
	shr.u64 	%rd8132, %rd13767, 6;
	xor.b64  	%rd8133, %rd8131, %rd8132;
	add.s64 	%rd8134, %rd8128, %rd8133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5506,%dummy}, %rd13764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5507}, %rd13764;
	}
	shf.r.wrap.b32 	%r5508, %r5507, %r5506, 8;
	shf.r.wrap.b32 	%r5509, %r5506, %r5507, 8;
	mov.b64 	%rd8135, {%r5509, %r5508};
	shf.r.wrap.b32 	%r5510, %r5507, %r5506, 1;
	shf.r.wrap.b32 	%r5511, %r5506, %r5507, 1;
	mov.b64 	%rd8136, {%r5511, %r5510};
	xor.b64  	%rd8137, %rd8136, %rd8135;
	shr.u64 	%rd8138, %rd13764, 7;
	xor.b64  	%rd8139, %rd8137, %rd8138;
	add.s64 	%rd13765, %rd8134, %rd8139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5512,%dummy}, %rd8116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5513}, %rd8116;
	}
	shf.r.wrap.b32 	%r5514, %r5513, %r5512, 14;
	shf.r.wrap.b32 	%r5515, %r5512, %r5513, 14;
	mov.b64 	%rd8140, {%r5515, %r5514};
	shf.r.wrap.b32 	%r5516, %r5513, %r5512, 18;
	shf.r.wrap.b32 	%r5517, %r5512, %r5513, 18;
	mov.b64 	%rd8141, {%r5517, %r5516};
	xor.b64  	%rd8142, %rd8140, %rd8141;
	shf.l.wrap.b32 	%r5518, %r5512, %r5513, 23;
	shf.l.wrap.b32 	%r5519, %r5513, %r5512, 23;
	mov.b64 	%rd8143, {%r5519, %r5518};
	xor.b64  	%rd8144, %rd8142, %rd8143;
	xor.b64  	%rd8145, %rd8079, %rd8042;
	and.b64  	%rd8146, %rd8116, %rd8145;
	xor.b64  	%rd8147, %rd8146, %rd8042;
	add.s64 	%rd8148, %rd8147, %rd8005;
	add.s64 	%rd8149, %rd8148, %rd8144;
	ld.const.u64 	%rd8150, [%rd7843+64];
	add.s64 	%rd8151, %rd8149, %rd8150;
	add.s64 	%rd8152, %rd8151, %rd13765;
	add.s64 	%rd8153, %rd8152, %rd8016;
	and.b64  	%rd8154, %rd8127, %rd8090;
	or.b64  	%rd8155, %rd8127, %rd8090;
	and.b64  	%rd8156, %rd8155, %rd8053;
	or.b64  	%rd8157, %rd8156, %rd8154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5520,%dummy}, %rd8127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5521}, %rd8127;
	}
	shf.r.wrap.b32 	%r5522, %r5521, %r5520, 28;
	shf.r.wrap.b32 	%r5523, %r5520, %r5521, 28;
	mov.b64 	%rd8158, {%r5523, %r5522};
	shf.l.wrap.b32 	%r5524, %r5520, %r5521, 30;
	shf.l.wrap.b32 	%r5525, %r5521, %r5520, 30;
	mov.b64 	%rd8159, {%r5525, %r5524};
	xor.b64  	%rd8160, %rd8158, %rd8159;
	shf.l.wrap.b32 	%r5526, %r5520, %r5521, 25;
	shf.l.wrap.b32 	%r5527, %r5521, %r5520, 25;
	mov.b64 	%rd8161, {%r5527, %r5526};
	xor.b64  	%rd8162, %rd8160, %rd8161;
	add.s64 	%rd8163, %rd8162, %rd8157;
	add.s64 	%rd8164, %rd8163, %rd8152;
	add.s64 	%rd8165, %rd13771, %rd13764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5528,%dummy}, %rd13766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5529}, %rd13766;
	}
	shf.r.wrap.b32 	%r5530, %r5529, %r5528, 19;
	shf.r.wrap.b32 	%r5531, %r5528, %r5529, 19;
	mov.b64 	%rd8166, {%r5531, %r5530};
	shf.l.wrap.b32 	%r5532, %r5528, %r5529, 3;
	shf.l.wrap.b32 	%r5533, %r5529, %r5528, 3;
	mov.b64 	%rd8167, {%r5533, %r5532};
	xor.b64  	%rd8168, %rd8166, %rd8167;
	shr.u64 	%rd8169, %rd13766, 6;
	xor.b64  	%rd8170, %rd8168, %rd8169;
	add.s64 	%rd8171, %rd8165, %rd8170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd13763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5535}, %rd13763;
	}
	shf.r.wrap.b32 	%r5536, %r5535, %r5534, 8;
	shf.r.wrap.b32 	%r5537, %r5534, %r5535, 8;
	mov.b64 	%rd8172, {%r5537, %r5536};
	shf.r.wrap.b32 	%r5538, %r5535, %r5534, 1;
	shf.r.wrap.b32 	%r5539, %r5534, %r5535, 1;
	mov.b64 	%rd8173, {%r5539, %r5538};
	xor.b64  	%rd8174, %rd8173, %rd8172;
	shr.u64 	%rd8175, %rd13763, 7;
	xor.b64  	%rd8176, %rd8174, %rd8175;
	add.s64 	%rd13764, %rd8171, %rd8176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5540,%dummy}, %rd8153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5541}, %rd8153;
	}
	shf.r.wrap.b32 	%r5542, %r5541, %r5540, 14;
	shf.r.wrap.b32 	%r5543, %r5540, %r5541, 14;
	mov.b64 	%rd8177, {%r5543, %r5542};
	shf.r.wrap.b32 	%r5544, %r5541, %r5540, 18;
	shf.r.wrap.b32 	%r5545, %r5540, %r5541, 18;
	mov.b64 	%rd8178, {%r5545, %r5544};
	xor.b64  	%rd8179, %rd8177, %rd8178;
	shf.l.wrap.b32 	%r5546, %r5540, %r5541, 23;
	shf.l.wrap.b32 	%r5547, %r5541, %r5540, 23;
	mov.b64 	%rd8180, {%r5547, %r5546};
	xor.b64  	%rd8181, %rd8179, %rd8180;
	xor.b64  	%rd8182, %rd8116, %rd8079;
	and.b64  	%rd8183, %rd8153, %rd8182;
	xor.b64  	%rd8184, %rd8183, %rd8079;
	add.s64 	%rd8185, %rd8184, %rd8042;
	add.s64 	%rd8186, %rd8185, %rd8181;
	ld.const.u64 	%rd8187, [%rd7843+72];
	add.s64 	%rd8188, %rd8186, %rd8187;
	add.s64 	%rd8189, %rd8188, %rd13764;
	add.s64 	%rd8190, %rd8189, %rd8053;
	and.b64  	%rd8191, %rd8164, %rd8127;
	or.b64  	%rd8192, %rd8164, %rd8127;
	and.b64  	%rd8193, %rd8192, %rd8090;
	or.b64  	%rd8194, %rd8193, %rd8191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5548,%dummy}, %rd8164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5549}, %rd8164;
	}
	shf.r.wrap.b32 	%r5550, %r5549, %r5548, 28;
	shf.r.wrap.b32 	%r5551, %r5548, %r5549, 28;
	mov.b64 	%rd8195, {%r5551, %r5550};
	shf.l.wrap.b32 	%r5552, %r5548, %r5549, 30;
	shf.l.wrap.b32 	%r5553, %r5549, %r5548, 30;
	mov.b64 	%rd8196, {%r5553, %r5552};
	xor.b64  	%rd8197, %rd8195, %rd8196;
	shf.l.wrap.b32 	%r5554, %r5548, %r5549, 25;
	shf.l.wrap.b32 	%r5555, %r5549, %r5548, 25;
	mov.b64 	%rd8198, {%r5555, %r5554};
	xor.b64  	%rd8199, %rd8197, %rd8198;
	add.s64 	%rd8200, %rd8199, %rd8194;
	add.s64 	%rd8201, %rd8200, %rd8189;
	add.s64 	%rd8202, %rd13770, %rd13763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5556,%dummy}, %rd13765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5557}, %rd13765;
	}
	shf.r.wrap.b32 	%r5558, %r5557, %r5556, 19;
	shf.r.wrap.b32 	%r5559, %r5556, %r5557, 19;
	mov.b64 	%rd8203, {%r5559, %r5558};
	shf.l.wrap.b32 	%r5560, %r5556, %r5557, 3;
	shf.l.wrap.b32 	%r5561, %r5557, %r5556, 3;
	mov.b64 	%rd8204, {%r5561, %r5560};
	xor.b64  	%rd8205, %rd8203, %rd8204;
	shr.u64 	%rd8206, %rd13765, 6;
	xor.b64  	%rd8207, %rd8205, %rd8206;
	add.s64 	%rd8208, %rd8202, %rd8207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5562,%dummy}, %rd13762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5563}, %rd13762;
	}
	shf.r.wrap.b32 	%r5564, %r5563, %r5562, 8;
	shf.r.wrap.b32 	%r5565, %r5562, %r5563, 8;
	mov.b64 	%rd8209, {%r5565, %r5564};
	shf.r.wrap.b32 	%r5566, %r5563, %r5562, 1;
	shf.r.wrap.b32 	%r5567, %r5562, %r5563, 1;
	mov.b64 	%rd8210, {%r5567, %r5566};
	xor.b64  	%rd8211, %rd8210, %rd8209;
	shr.u64 	%rd8212, %rd13762, 7;
	xor.b64  	%rd8213, %rd8211, %rd8212;
	add.s64 	%rd13763, %rd8208, %rd8213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5568,%dummy}, %rd8190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd8190;
	}
	shf.r.wrap.b32 	%r5570, %r5569, %r5568, 14;
	shf.r.wrap.b32 	%r5571, %r5568, %r5569, 14;
	mov.b64 	%rd8214, {%r5571, %r5570};
	shf.r.wrap.b32 	%r5572, %r5569, %r5568, 18;
	shf.r.wrap.b32 	%r5573, %r5568, %r5569, 18;
	mov.b64 	%rd8215, {%r5573, %r5572};
	xor.b64  	%rd8216, %rd8214, %rd8215;
	shf.l.wrap.b32 	%r5574, %r5568, %r5569, 23;
	shf.l.wrap.b32 	%r5575, %r5569, %r5568, 23;
	mov.b64 	%rd8217, {%r5575, %r5574};
	xor.b64  	%rd8218, %rd8216, %rd8217;
	xor.b64  	%rd8219, %rd8153, %rd8116;
	and.b64  	%rd8220, %rd8190, %rd8219;
	xor.b64  	%rd8221, %rd8220, %rd8116;
	add.s64 	%rd8222, %rd8221, %rd8079;
	add.s64 	%rd8223, %rd8222, %rd8218;
	ld.const.u64 	%rd8224, [%rd7843+80];
	add.s64 	%rd8225, %rd8223, %rd8224;
	add.s64 	%rd8226, %rd8225, %rd13763;
	add.s64 	%rd8227, %rd8226, %rd8090;
	and.b64  	%rd8228, %rd8201, %rd8164;
	or.b64  	%rd8229, %rd8201, %rd8164;
	and.b64  	%rd8230, %rd8229, %rd8127;
	or.b64  	%rd8231, %rd8230, %rd8228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5576,%dummy}, %rd8201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5577}, %rd8201;
	}
	shf.r.wrap.b32 	%r5578, %r5577, %r5576, 28;
	shf.r.wrap.b32 	%r5579, %r5576, %r5577, 28;
	mov.b64 	%rd8232, {%r5579, %r5578};
	shf.l.wrap.b32 	%r5580, %r5576, %r5577, 30;
	shf.l.wrap.b32 	%r5581, %r5577, %r5576, 30;
	mov.b64 	%rd8233, {%r5581, %r5580};
	xor.b64  	%rd8234, %rd8232, %rd8233;
	shf.l.wrap.b32 	%r5582, %r5576, %r5577, 25;
	shf.l.wrap.b32 	%r5583, %r5577, %r5576, 25;
	mov.b64 	%rd8235, {%r5583, %r5582};
	xor.b64  	%rd8236, %rd8234, %rd8235;
	add.s64 	%rd8237, %rd8236, %rd8231;
	add.s64 	%rd8238, %rd8237, %rd8226;
	add.s64 	%rd8239, %rd13769, %rd13762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5584,%dummy}, %rd13764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd13764;
	}
	shf.r.wrap.b32 	%r5586, %r5585, %r5584, 19;
	shf.r.wrap.b32 	%r5587, %r5584, %r5585, 19;
	mov.b64 	%rd8240, {%r5587, %r5586};
	shf.l.wrap.b32 	%r5588, %r5584, %r5585, 3;
	shf.l.wrap.b32 	%r5589, %r5585, %r5584, 3;
	mov.b64 	%rd8241, {%r5589, %r5588};
	xor.b64  	%rd8242, %rd8240, %rd8241;
	shr.u64 	%rd8243, %rd13764, 6;
	xor.b64  	%rd8244, %rd8242, %rd8243;
	add.s64 	%rd8245, %rd8239, %rd8244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5590,%dummy}, %rd13761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5591}, %rd13761;
	}
	shf.r.wrap.b32 	%r5592, %r5591, %r5590, 8;
	shf.r.wrap.b32 	%r5593, %r5590, %r5591, 8;
	mov.b64 	%rd8246, {%r5593, %r5592};
	shf.r.wrap.b32 	%r5594, %r5591, %r5590, 1;
	shf.r.wrap.b32 	%r5595, %r5590, %r5591, 1;
	mov.b64 	%rd8247, {%r5595, %r5594};
	xor.b64  	%rd8248, %rd8247, %rd8246;
	shr.u64 	%rd8249, %rd13761, 7;
	xor.b64  	%rd8250, %rd8248, %rd8249;
	add.s64 	%rd13762, %rd8245, %rd8250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5596,%dummy}, %rd8227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd8227;
	}
	shf.r.wrap.b32 	%r5598, %r5597, %r5596, 14;
	shf.r.wrap.b32 	%r5599, %r5596, %r5597, 14;
	mov.b64 	%rd8251, {%r5599, %r5598};
	shf.r.wrap.b32 	%r5600, %r5597, %r5596, 18;
	shf.r.wrap.b32 	%r5601, %r5596, %r5597, 18;
	mov.b64 	%rd8252, {%r5601, %r5600};
	xor.b64  	%rd8253, %rd8251, %rd8252;
	shf.l.wrap.b32 	%r5602, %r5596, %r5597, 23;
	shf.l.wrap.b32 	%r5603, %r5597, %r5596, 23;
	mov.b64 	%rd8254, {%r5603, %r5602};
	xor.b64  	%rd8255, %rd8253, %rd8254;
	xor.b64  	%rd8256, %rd8190, %rd8153;
	and.b64  	%rd8257, %rd8227, %rd8256;
	xor.b64  	%rd8258, %rd8257, %rd8153;
	add.s64 	%rd8259, %rd8258, %rd8116;
	add.s64 	%rd8260, %rd8259, %rd8255;
	ld.const.u64 	%rd8261, [%rd7843+88];
	add.s64 	%rd8262, %rd8260, %rd8261;
	add.s64 	%rd8263, %rd8262, %rd13762;
	add.s64 	%rd8264, %rd8263, %rd8127;
	and.b64  	%rd8265, %rd8238, %rd8201;
	or.b64  	%rd8266, %rd8238, %rd8201;
	and.b64  	%rd8267, %rd8266, %rd8164;
	or.b64  	%rd8268, %rd8267, %rd8265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5604,%dummy}, %rd8238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5605}, %rd8238;
	}
	shf.r.wrap.b32 	%r5606, %r5605, %r5604, 28;
	shf.r.wrap.b32 	%r5607, %r5604, %r5605, 28;
	mov.b64 	%rd8269, {%r5607, %r5606};
	shf.l.wrap.b32 	%r5608, %r5604, %r5605, 30;
	shf.l.wrap.b32 	%r5609, %r5605, %r5604, 30;
	mov.b64 	%rd8270, {%r5609, %r5608};
	xor.b64  	%rd8271, %rd8269, %rd8270;
	shf.l.wrap.b32 	%r5610, %r5604, %r5605, 25;
	shf.l.wrap.b32 	%r5611, %r5605, %r5604, 25;
	mov.b64 	%rd8272, {%r5611, %r5610};
	xor.b64  	%rd8273, %rd8271, %rd8272;
	add.s64 	%rd8274, %rd8273, %rd8268;
	add.s64 	%rd8275, %rd8274, %rd8263;
	add.s64 	%rd8276, %rd13768, %rd13761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5612,%dummy}, %rd13763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5613}, %rd13763;
	}
	shf.r.wrap.b32 	%r5614, %r5613, %r5612, 19;
	shf.r.wrap.b32 	%r5615, %r5612, %r5613, 19;
	mov.b64 	%rd8277, {%r5615, %r5614};
	shf.l.wrap.b32 	%r5616, %r5612, %r5613, 3;
	shf.l.wrap.b32 	%r5617, %r5613, %r5612, 3;
	mov.b64 	%rd8278, {%r5617, %r5616};
	xor.b64  	%rd8279, %rd8277, %rd8278;
	shr.u64 	%rd8280, %rd13763, 6;
	xor.b64  	%rd8281, %rd8279, %rd8280;
	add.s64 	%rd8282, %rd8276, %rd8281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5618,%dummy}, %rd13760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5619}, %rd13760;
	}
	shf.r.wrap.b32 	%r5620, %r5619, %r5618, 8;
	shf.r.wrap.b32 	%r5621, %r5618, %r5619, 8;
	mov.b64 	%rd8283, {%r5621, %r5620};
	shf.r.wrap.b32 	%r5622, %r5619, %r5618, 1;
	shf.r.wrap.b32 	%r5623, %r5618, %r5619, 1;
	mov.b64 	%rd8284, {%r5623, %r5622};
	xor.b64  	%rd8285, %rd8284, %rd8283;
	shr.u64 	%rd8286, %rd13760, 7;
	xor.b64  	%rd8287, %rd8285, %rd8286;
	add.s64 	%rd13761, %rd8282, %rd8287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5624,%dummy}, %rd8264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5625}, %rd8264;
	}
	shf.r.wrap.b32 	%r5626, %r5625, %r5624, 14;
	shf.r.wrap.b32 	%r5627, %r5624, %r5625, 14;
	mov.b64 	%rd8288, {%r5627, %r5626};
	shf.r.wrap.b32 	%r5628, %r5625, %r5624, 18;
	shf.r.wrap.b32 	%r5629, %r5624, %r5625, 18;
	mov.b64 	%rd8289, {%r5629, %r5628};
	xor.b64  	%rd8290, %rd8288, %rd8289;
	shf.l.wrap.b32 	%r5630, %r5624, %r5625, 23;
	shf.l.wrap.b32 	%r5631, %r5625, %r5624, 23;
	mov.b64 	%rd8291, {%r5631, %r5630};
	xor.b64  	%rd8292, %rd8290, %rd8291;
	xor.b64  	%rd8293, %rd8227, %rd8190;
	and.b64  	%rd8294, %rd8264, %rd8293;
	xor.b64  	%rd8295, %rd8294, %rd8190;
	add.s64 	%rd8296, %rd8295, %rd8153;
	add.s64 	%rd8297, %rd8296, %rd8292;
	ld.const.u64 	%rd8298, [%rd7843+96];
	add.s64 	%rd8299, %rd8297, %rd8298;
	add.s64 	%rd8300, %rd8299, %rd13761;
	add.s64 	%rd13781, %rd8300, %rd8164;
	and.b64  	%rd8301, %rd8275, %rd8238;
	or.b64  	%rd8302, %rd8275, %rd8238;
	and.b64  	%rd8303, %rd8302, %rd8201;
	or.b64  	%rd8304, %rd8303, %rd8301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5632,%dummy}, %rd8275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5633}, %rd8275;
	}
	shf.r.wrap.b32 	%r5634, %r5633, %r5632, 28;
	shf.r.wrap.b32 	%r5635, %r5632, %r5633, 28;
	mov.b64 	%rd8305, {%r5635, %r5634};
	shf.l.wrap.b32 	%r5636, %r5632, %r5633, 30;
	shf.l.wrap.b32 	%r5637, %r5633, %r5632, 30;
	mov.b64 	%rd8306, {%r5637, %r5636};
	xor.b64  	%rd8307, %rd8305, %rd8306;
	shf.l.wrap.b32 	%r5638, %r5632, %r5633, 25;
	shf.l.wrap.b32 	%r5639, %r5633, %r5632, 25;
	mov.b64 	%rd8308, {%r5639, %r5638};
	xor.b64  	%rd8309, %rd8307, %rd8308;
	add.s64 	%rd8310, %rd8309, %rd8304;
	add.s64 	%rd13777, %rd8310, %rd8300;
	add.s64 	%rd8311, %rd13767, %rd13760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5640,%dummy}, %rd13762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd13762;
	}
	shf.r.wrap.b32 	%r5642, %r5641, %r5640, 19;
	shf.r.wrap.b32 	%r5643, %r5640, %r5641, 19;
	mov.b64 	%rd8312, {%r5643, %r5642};
	shf.l.wrap.b32 	%r5644, %r5640, %r5641, 3;
	shf.l.wrap.b32 	%r5645, %r5641, %r5640, 3;
	mov.b64 	%rd8313, {%r5645, %r5644};
	xor.b64  	%rd8314, %rd8312, %rd8313;
	shr.u64 	%rd8315, %rd13762, 6;
	xor.b64  	%rd8316, %rd8314, %rd8315;
	add.s64 	%rd8317, %rd8311, %rd8316;
	shf.r.wrap.b32 	%r5646, %r5276, %r5277, 8;
	shf.r.wrap.b32 	%r5647, %r5277, %r5276, 8;
	mov.b64 	%rd8318, {%r5647, %r5646};
	shf.r.wrap.b32 	%r5648, %r5276, %r5277, 1;
	shf.r.wrap.b32 	%r5649, %r5277, %r5276, 1;
	mov.b64 	%rd8319, {%r5649, %r5648};
	xor.b64  	%rd8320, %rd8319, %rd8318;
	shr.u64 	%rd8321, %rd13759, 7;
	xor.b64  	%rd8322, %rd8320, %rd8321;
	add.s64 	%rd13760, %rd8317, %rd8322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5650,%dummy}, %rd13781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5651}, %rd13781;
	}
	shf.r.wrap.b32 	%r5652, %r5651, %r5650, 14;
	shf.r.wrap.b32 	%r5653, %r5650, %r5651, 14;
	mov.b64 	%rd8323, {%r5653, %r5652};
	shf.r.wrap.b32 	%r5654, %r5651, %r5650, 18;
	shf.r.wrap.b32 	%r5655, %r5650, %r5651, 18;
	mov.b64 	%rd8324, {%r5655, %r5654};
	xor.b64  	%rd8325, %rd8323, %rd8324;
	shf.l.wrap.b32 	%r5656, %r5650, %r5651, 23;
	shf.l.wrap.b32 	%r5657, %r5651, %r5650, 23;
	mov.b64 	%rd8326, {%r5657, %r5656};
	xor.b64  	%rd8327, %rd8325, %rd8326;
	xor.b64  	%rd8328, %rd8264, %rd8227;
	and.b64  	%rd8329, %rd13781, %rd8328;
	xor.b64  	%rd8330, %rd8329, %rd8227;
	add.s64 	%rd8331, %rd8330, %rd8190;
	add.s64 	%rd8332, %rd8331, %rd8327;
	ld.const.u64 	%rd8333, [%rd7843+104];
	add.s64 	%rd8334, %rd8332, %rd8333;
	add.s64 	%rd8335, %rd8334, %rd13760;
	add.s64 	%rd13780, %rd8335, %rd8201;
	and.b64  	%rd8336, %rd13777, %rd8275;
	or.b64  	%rd8337, %rd13777, %rd8275;
	and.b64  	%rd8338, %rd8337, %rd8238;
	or.b64  	%rd8339, %rd8338, %rd8336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5658,%dummy}, %rd13777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5659}, %rd13777;
	}
	shf.r.wrap.b32 	%r5660, %r5659, %r5658, 28;
	shf.r.wrap.b32 	%r5661, %r5658, %r5659, 28;
	mov.b64 	%rd8340, {%r5661, %r5660};
	shf.l.wrap.b32 	%r5662, %r5658, %r5659, 30;
	shf.l.wrap.b32 	%r5663, %r5659, %r5658, 30;
	mov.b64 	%rd8341, {%r5663, %r5662};
	xor.b64  	%rd8342, %rd8340, %rd8341;
	shf.l.wrap.b32 	%r5664, %r5658, %r5659, 25;
	shf.l.wrap.b32 	%r5665, %r5659, %r5658, 25;
	mov.b64 	%rd8343, {%r5665, %r5664};
	xor.b64  	%rd8344, %rd8342, %rd8343;
	add.s64 	%rd8345, %rd8344, %rd8339;
	add.s64 	%rd13776, %rd8345, %rd8335;
	add.s64 	%rd8346, %rd13766, %rd13759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5666,%dummy}, %rd13761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5667}, %rd13761;
	}
	shf.r.wrap.b32 	%r5668, %r5667, %r5666, 19;
	shf.r.wrap.b32 	%r5669, %r5666, %r5667, 19;
	mov.b64 	%rd8347, {%r5669, %r5668};
	shf.l.wrap.b32 	%r5670, %r5666, %r5667, 3;
	shf.l.wrap.b32 	%r5671, %r5667, %r5666, 3;
	mov.b64 	%rd8348, {%r5671, %r5670};
	xor.b64  	%rd8349, %rd8347, %rd8348;
	shr.u64 	%rd8350, %rd13761, 6;
	xor.b64  	%rd8351, %rd8349, %rd8350;
	add.s64 	%rd8352, %rd8346, %rd8351;
	shf.r.wrap.b32 	%r5672, %r5304, %r5305, 8;
	shf.r.wrap.b32 	%r5673, %r5305, %r5304, 8;
	mov.b64 	%rd8353, {%r5673, %r5672};
	shf.r.wrap.b32 	%r5674, %r5304, %r5305, 1;
	shf.r.wrap.b32 	%r5675, %r5305, %r5304, 1;
	mov.b64 	%rd8354, {%r5675, %r5674};
	xor.b64  	%rd8355, %rd8354, %rd8353;
	shr.u64 	%rd8356, %rd13758, 7;
	xor.b64  	%rd8357, %rd8355, %rd8356;
	add.s64 	%rd13759, %rd8352, %rd8357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5676,%dummy}, %rd13780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5677}, %rd13780;
	}
	shf.r.wrap.b32 	%r5678, %r5677, %r5676, 14;
	shf.r.wrap.b32 	%r5679, %r5676, %r5677, 14;
	mov.b64 	%rd8358, {%r5679, %r5678};
	shf.r.wrap.b32 	%r5680, %r5677, %r5676, 18;
	shf.r.wrap.b32 	%r5681, %r5676, %r5677, 18;
	mov.b64 	%rd8359, {%r5681, %r5680};
	xor.b64  	%rd8360, %rd8358, %rd8359;
	shf.l.wrap.b32 	%r5682, %r5676, %r5677, 23;
	shf.l.wrap.b32 	%r5683, %r5677, %r5676, 23;
	mov.b64 	%rd8361, {%r5683, %r5682};
	xor.b64  	%rd8362, %rd8360, %rd8361;
	xor.b64  	%rd8363, %rd13781, %rd8264;
	and.b64  	%rd8364, %rd13780, %rd8363;
	xor.b64  	%rd8365, %rd8364, %rd8264;
	add.s64 	%rd8366, %rd8365, %rd8227;
	add.s64 	%rd8367, %rd8366, %rd8362;
	ld.const.u64 	%rd8368, [%rd7843+112];
	add.s64 	%rd8369, %rd8367, %rd8368;
	add.s64 	%rd8370, %rd8369, %rd13759;
	add.s64 	%rd13779, %rd8370, %rd8238;
	and.b64  	%rd8371, %rd13776, %rd13777;
	or.b64  	%rd8372, %rd13776, %rd13777;
	and.b64  	%rd8373, %rd8372, %rd8275;
	or.b64  	%rd8374, %rd8373, %rd8371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5684,%dummy}, %rd13776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5685}, %rd13776;
	}
	shf.r.wrap.b32 	%r5686, %r5685, %r5684, 28;
	shf.r.wrap.b32 	%r5687, %r5684, %r5685, 28;
	mov.b64 	%rd8375, {%r5687, %r5686};
	shf.l.wrap.b32 	%r5688, %r5684, %r5685, 30;
	shf.l.wrap.b32 	%r5689, %r5685, %r5684, 30;
	mov.b64 	%rd8376, {%r5689, %r5688};
	xor.b64  	%rd8377, %rd8375, %rd8376;
	shf.l.wrap.b32 	%r5690, %r5684, %r5685, 25;
	shf.l.wrap.b32 	%r5691, %r5685, %r5684, 25;
	mov.b64 	%rd8378, {%r5691, %r5690};
	xor.b64  	%rd8379, %rd8377, %rd8378;
	add.s64 	%rd8380, %rd8379, %rd8374;
	add.s64 	%rd13775, %rd8380, %rd8370;
	add.s64 	%rd8381, %rd13765, %rd13758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5692,%dummy}, %rd13760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5693}, %rd13760;
	}
	shf.r.wrap.b32 	%r5694, %r5693, %r5692, 19;
	shf.r.wrap.b32 	%r5695, %r5692, %r5693, 19;
	mov.b64 	%rd8382, {%r5695, %r5694};
	shf.l.wrap.b32 	%r5696, %r5692, %r5693, 3;
	shf.l.wrap.b32 	%r5697, %r5693, %r5692, 3;
	mov.b64 	%rd8383, {%r5697, %r5696};
	xor.b64  	%rd8384, %rd8382, %rd8383;
	shr.u64 	%rd8385, %rd13760, 6;
	xor.b64  	%rd8386, %rd8384, %rd8385;
	add.s64 	%rd8387, %rd8381, %rd8386;
	shf.r.wrap.b32 	%r5698, %r5333, %r5332, 1;
	shf.r.wrap.b32 	%r5699, %r5332, %r5333, 1;
	mov.b64 	%rd8388, {%r5699, %r5698};
	shf.r.wrap.b32 	%r5700, %r5333, %r5332, 8;
	shf.r.wrap.b32 	%r5701, %r5332, %r5333, 8;
	mov.b64 	%rd8389, {%r5701, %r5700};
	xor.b64  	%rd8390, %rd8388, %rd8389;
	shr.u64 	%rd8391, %rd13773, 7;
	xor.b64  	%rd8392, %rd8390, %rd8391;
	add.s64 	%rd13758, %rd8387, %rd8392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5702,%dummy}, %rd13779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5703}, %rd13779;
	}
	shf.r.wrap.b32 	%r5704, %r5703, %r5702, 14;
	shf.r.wrap.b32 	%r5705, %r5702, %r5703, 14;
	mov.b64 	%rd8393, {%r5705, %r5704};
	shf.r.wrap.b32 	%r5706, %r5703, %r5702, 18;
	shf.r.wrap.b32 	%r5707, %r5702, %r5703, 18;
	mov.b64 	%rd8394, {%r5707, %r5706};
	xor.b64  	%rd8395, %rd8393, %rd8394;
	shf.l.wrap.b32 	%r5708, %r5702, %r5703, 23;
	shf.l.wrap.b32 	%r5709, %r5703, %r5702, 23;
	mov.b64 	%rd8396, {%r5709, %r5708};
	xor.b64  	%rd8397, %rd8395, %rd8396;
	xor.b64  	%rd8398, %rd13780, %rd13781;
	and.b64  	%rd8399, %rd13779, %rd8398;
	xor.b64  	%rd8400, %rd8399, %rd13781;
	add.s64 	%rd8401, %rd8400, %rd8264;
	add.s64 	%rd8402, %rd8401, %rd8397;
	ld.const.u64 	%rd8403, [%rd7843+120];
	add.s64 	%rd8404, %rd8402, %rd8403;
	add.s64 	%rd8405, %rd8404, %rd13758;
	add.s64 	%rd13778, %rd8405, %rd8275;
	and.b64  	%rd8406, %rd13775, %rd13776;
	or.b64  	%rd8407, %rd13775, %rd13776;
	and.b64  	%rd8408, %rd8407, %rd13777;
	or.b64  	%rd8409, %rd8408, %rd8406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5710,%dummy}, %rd13775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5711}, %rd13775;
	}
	shf.r.wrap.b32 	%r5712, %r5711, %r5710, 28;
	shf.r.wrap.b32 	%r5713, %r5710, %r5711, 28;
	mov.b64 	%rd8410, {%r5713, %r5712};
	shf.l.wrap.b32 	%r5714, %r5710, %r5711, 30;
	shf.l.wrap.b32 	%r5715, %r5711, %r5710, 30;
	mov.b64 	%rd8411, {%r5715, %r5714};
	xor.b64  	%rd8412, %rd8410, %rd8411;
	shf.l.wrap.b32 	%r5716, %r5710, %r5711, 25;
	shf.l.wrap.b32 	%r5717, %r5711, %r5710, 25;
	mov.b64 	%rd8413, {%r5717, %r5716};
	xor.b64  	%rd8414, %rd8412, %rd8413;
	add.s64 	%rd8415, %rd8414, %rd8409;
	add.s64 	%rd13774, %rd8415, %rd8405;
	add.s32 	%r9742, %r9742, 16;
	setp.lt.u32 	%p83, %r9742, 80;
	@%p83 bra 	$L__BB0_114;

	add.s64 	%rd13797, %rd13797, %rd13774;
	add.s64 	%rd13796, %rd13796, %rd13775;
	st.local.u64 	[%rd2+-64], %rd13796;
	add.s64 	%rd13795, %rd13795, %rd13776;
	st.local.u64 	[%rd2+-56], %rd13795;
	add.s64 	%rd13794, %rd13794, %rd13777;
	st.local.u64 	[%rd2+-48], %rd13794;
	add.s64 	%rd13793, %rd13793, %rd13778;
	st.local.u64 	[%rd2+-40], %rd13793;
	add.s64 	%rd13792, %rd13792, %rd13779;
	st.local.u64 	[%rd2+-32], %rd13792;
	add.s64 	%rd13791, %rd13791, %rd13780;
	st.local.u64 	[%rd2+-24], %rd13791;
	add.s64 	%rd13790, %rd13790, %rd13781;
	st.local.u64 	[%rd2+-16], %rd13790;
	sub.s32 	%r9736, %r2, %r110;
	st.local.u32 	[%rd2+-4], %r9736;
	setp.eq.s32 	%p84, %r9736, 0;
	@%p84 bra 	$L__BB0_118;

	cvt.u64.u32 	%rd726, %r110;
	mov.u32 	%r9743, 0;

$L__BB0_117:
	cvt.u64.u32 	%rd8416, %r9743;
	add.s64 	%rd8417, %rd8416, %rd726;
	add.s64 	%rd8418, %rd630, %rd8417;
	ld.global.nc.u8 	%rs3, [%rd8418];
	add.s64 	%rd8419, %rd2, %rd8416;
	st.local.u8 	[%rd8419], %rs3;
	add.s32 	%r9743, %r9743, 1;
	setp.lt.u32 	%p85, %r9743, %r9736;
	@%p85 bra 	$L__BB0_117;

$L__BB0_118:
	and.b32  	%r5719, %r9736, 7;
	shr.u32 	%r5720, %r9736, 3;
	shl.b32 	%r5721, %r5720, 3;
	cvt.u64.u32 	%rd8420, %r5721;
	add.s64 	%rd8421, %rd1, %rd8420;
	shl.b32 	%r5722, %r9736, 3;
	cvt.u64.u32 	%rd8422, %r5722;
	and.b64  	%rd8423, %rd8422, 56;
	add.s64 	%rd8425, %rd1255, %rd8423;
	ld.const.u64 	%rd8426, [%rd8425];
	ld.local.u64 	%rd8427, [%rd8421+72];
	and.b64  	%rd8428, %rd8426, %rd8427;
	st.local.u64 	[%rd8421+72], %rd8428;
	setp.ne.s32 	%p86, %r5719, 0;
	selp.u32 	%r5723, 1, 0, %p86;
	add.s32 	%r9744, %r5720, %r5723;
	setp.gt.u32 	%p87, %r9744, 15;
	@%p87 bra 	$L__BB0_120;

$L__BB0_119:
	mul.wide.u32 	%rd8429, %r9744, 8;
	add.s64 	%rd8430, %rd1, %rd8429;
	mov.u64 	%rd8431, 0;
	st.local.u64 	[%rd8430+72], %rd8431;
	add.s32 	%r9744, %r9744, 1;
	setp.lt.u32 	%p88, %r9744, 16;
	@%p88 bra 	$L__BB0_119;

$L__BB0_120:
	add.s32 	%r9738, %r9738, 1;
	setp.lt.u32 	%p89, %r9738, %r2;
	@%p89 bra 	$L__BB0_105;

	st.local.u64 	[%rd2+-72], %rd13797;
	shl.b32 	%r9746, %r9737, 3;

$L__BB0_122:
	and.b32  	%r5724, %r9736, -8;
	cvt.u64.u32 	%rd8432, %r5724;
	add.s64 	%rd8433, %rd1, %rd8432;
	add.s64 	%rd743, %rd8433, 72;
	setp.lt.u32 	%p90, %r9736, 112;
	@%p90 bra 	$L__BB0_130;
	bra.uni 	$L__BB0_123;

$L__BB0_130:
	shl.b32 	%r6493, %r9736, 3;
	and.b32  	%r6494, %r6493, 56;
	mov.u64 	%rd9444, 128;
	shl.b64 	%rd9445, %rd9444, %r6494;
	ld.local.u64 	%rd9446, [%rd743];
	or.b64  	%rd9447, %rd9446, %rd9445;
	st.local.u64 	[%rd743], %rd9447;
	cvt.u64.u32 	%rd9448, %r9746;
	shl.b64 	%rd9449, %rd9448, 56;
	shl.b64 	%rd9450, %rd9448, 40;
	and.b64  	%rd9451, %rd9450, 71776119061217280;
	or.b64  	%rd9452, %rd9451, %rd9449;
	shl.b64 	%rd9453, %rd9448, 24;
	and.b64  	%rd9454, %rd9453, 280375465082880;
	or.b64  	%rd9455, %rd9452, %rd9454;
	shl.b64 	%rd9456, %rd9448, 8;
	and.b64  	%rd9457, %rd9456, 1095216660480;
	or.b64  	%rd9458, %rd9455, %rd9457;
	st.local.u64 	[%rd2+120], %rd9458;
	mov.u32 	%r6495, 0;
	st.local.u32 	[%rd2+-4], %r6495;
	ld.local.u64 	%rd13837, [%rd2];
	ld.local.u64 	%rd13836, [%rd2+8];
	ld.local.u64 	%rd13835, [%rd2+16];
	ld.local.u64 	%rd13834, [%rd2+24];
	ld.local.u64 	%rd13833, [%rd2+32];
	ld.local.u64 	%rd13832, [%rd2+40];
	ld.local.u64 	%rd13831, [%rd2+48];
	ld.local.u64 	%rd13830, [%rd2+56];
	ld.local.u64 	%rd13829, [%rd2+64];
	ld.local.u64 	%rd13828, [%rd2+72];
	ld.local.u64 	%rd13827, [%rd2+80];
	ld.local.u64 	%rd13826, [%rd2+88];
	ld.local.u64 	%rd13825, [%rd2+96];
	ld.local.u64 	%rd13824, [%rd2+104];
	ld.local.u64 	%rd13823, [%rd2+112];
	bra.uni 	$L__BB0_131;

$L__BB0_123:
	setp.gt.u32 	%p91, %r9736, 127;
	@%p91 bra 	$L__BB0_125;

	shl.b32 	%r5725, %r9736, 3;
	and.b32  	%r5726, %r5725, 56;
	mov.u64 	%rd8434, 128;
	shl.b64 	%rd8435, %rd8434, %r5726;
	ld.local.u64 	%rd8436, [%rd743];
	or.b64  	%rd8437, %rd8435, %rd8436;
	st.local.u64 	[%rd743], %rd8437;

$L__BB0_125:
	ld.local.u64 	%rd8438, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5728, %temp}, %rd8438;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5729}, %rd8438;
	}
	mov.u32 	%r5730, 291;
	mov.u32 	%r5731, 0;
	prmt.b32 	%r5732, %r5728, %r5731, %r5730;
	prmt.b32 	%r5733, %r5729, %r5731, %r5730;
	mov.b64 	%rd13813, {%r5733, %r5732};
	ld.local.u64 	%rd8439, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5734, %temp}, %rd8439;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5735}, %rd8439;
	}
	prmt.b32 	%r5736, %r5734, %r5731, %r5730;
	prmt.b32 	%r5737, %r5735, %r5731, %r5730;
	mov.b64 	%rd13812, {%r5737, %r5736};
	ld.local.u64 	%rd8440, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5738, %temp}, %rd8440;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5739}, %rd8440;
	}
	prmt.b32 	%r5740, %r5738, %r5731, %r5730;
	prmt.b32 	%r5741, %r5739, %r5731, %r5730;
	mov.b64 	%rd13811, {%r5741, %r5740};
	ld.local.u64 	%rd8441, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5742, %temp}, %rd8441;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5743}, %rd8441;
	}
	prmt.b32 	%r5744, %r5742, %r5731, %r5730;
	prmt.b32 	%r5745, %r5743, %r5731, %r5730;
	mov.b64 	%rd13810, {%r5745, %r5744};
	ld.local.u64 	%rd8442, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5746, %temp}, %rd8442;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5747}, %rd8442;
	}
	prmt.b32 	%r5748, %r5746, %r5731, %r5730;
	prmt.b32 	%r5749, %r5747, %r5731, %r5730;
	mov.b64 	%rd13809, {%r5749, %r5748};
	ld.local.u64 	%rd8443, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5750, %temp}, %rd8443;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5751}, %rd8443;
	}
	prmt.b32 	%r5752, %r5750, %r5731, %r5730;
	prmt.b32 	%r5753, %r5751, %r5731, %r5730;
	mov.b64 	%rd13808, {%r5753, %r5752};
	ld.local.u64 	%rd8444, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5754, %temp}, %rd8444;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5755}, %rd8444;
	}
	prmt.b32 	%r5756, %r5754, %r5731, %r5730;
	prmt.b32 	%r5757, %r5755, %r5731, %r5730;
	mov.b64 	%rd13807, {%r5757, %r5756};
	ld.local.u64 	%rd8445, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5758, %temp}, %rd8445;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5759}, %rd8445;
	}
	prmt.b32 	%r5760, %r5758, %r5731, %r5730;
	prmt.b32 	%r5761, %r5759, %r5731, %r5730;
	mov.b64 	%rd13806, {%r5761, %r5760};
	ld.local.u64 	%rd8446, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5762, %temp}, %rd8446;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5763}, %rd8446;
	}
	prmt.b32 	%r5764, %r5762, %r5731, %r5730;
	prmt.b32 	%r5765, %r5763, %r5731, %r5730;
	mov.b64 	%rd13805, {%r5765, %r5764};
	ld.local.u64 	%rd8447, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5766, %temp}, %rd8447;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5767}, %rd8447;
	}
	prmt.b32 	%r5768, %r5766, %r5731, %r5730;
	prmt.b32 	%r5769, %r5767, %r5731, %r5730;
	mov.b64 	%rd13804, {%r5769, %r5768};
	ld.local.u64 	%rd8448, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5770, %temp}, %rd8448;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5771}, %rd8448;
	}
	prmt.b32 	%r5772, %r5770, %r5731, %r5730;
	prmt.b32 	%r5773, %r5771, %r5731, %r5730;
	mov.b64 	%rd13803, {%r5773, %r5772};
	ld.local.u64 	%rd8449, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5774, %temp}, %rd8449;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5775}, %rd8449;
	}
	prmt.b32 	%r5776, %r5774, %r5731, %r5730;
	prmt.b32 	%r5777, %r5775, %r5731, %r5730;
	mov.b64 	%rd13802, {%r5777, %r5776};
	ld.local.u64 	%rd8450, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5778, %temp}, %rd8450;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5779}, %rd8450;
	}
	prmt.b32 	%r5780, %r5778, %r5731, %r5730;
	prmt.b32 	%r5781, %r5779, %r5731, %r5730;
	mov.b64 	%rd13801, {%r5781, %r5780};
	ld.local.u64 	%rd8451, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5782, %temp}, %rd8451;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5783}, %rd8451;
	}
	prmt.b32 	%r5784, %r5782, %r5731, %r5730;
	prmt.b32 	%r5785, %r5783, %r5731, %r5730;
	mov.b64 	%rd13800, {%r5785, %r5784};
	ld.local.u64 	%rd8452, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5786, %temp}, %rd8452;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5787}, %rd8452;
	}
	prmt.b32 	%r5788, %r5786, %r5731, %r5730;
	prmt.b32 	%r5789, %r5787, %r5731, %r5730;
	mov.b64 	%rd13799, {%r5789, %r5788};
	ld.local.u64 	%rd8453, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5790, %temp}, %rd8453;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5791}, %rd8453;
	}
	prmt.b32 	%r5792, %r5790, %r5731, %r5730;
	prmt.b32 	%r5793, %r5791, %r5731, %r5730;
	mov.b64 	%rd13798, {%r5793, %r5792};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5794,%dummy}, %rd13793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5795}, %rd13793;
	}
	shf.r.wrap.b32 	%r5796, %r5795, %r5794, 18;
	shf.r.wrap.b32 	%r5797, %r5794, %r5795, 18;
	mov.b64 	%rd8454, {%r5797, %r5796};
	shf.r.wrap.b32 	%r5798, %r5795, %r5794, 14;
	shf.r.wrap.b32 	%r5799, %r5794, %r5795, 14;
	mov.b64 	%rd8455, {%r5799, %r5798};
	xor.b64  	%rd8456, %rd8455, %rd8454;
	shf.l.wrap.b32 	%r5800, %r5794, %r5795, 23;
	shf.l.wrap.b32 	%r5801, %r5795, %r5794, 23;
	mov.b64 	%rd8457, {%r5801, %r5800};
	xor.b64  	%rd8458, %rd8456, %rd8457;
	xor.b64  	%rd8459, %rd13792, %rd13791;
	and.b64  	%rd8460, %rd13793, %rd8459;
	xor.b64  	%rd8461, %rd8460, %rd13791;
	add.s64 	%rd8462, %rd8461, %rd13790;
	add.s64 	%rd8463, %rd8462, %rd8458;
	add.s64 	%rd8464, %rd8463, %rd13813;
	add.s64 	%rd8465, %rd8464, 4794697086780616226;
	add.s64 	%rd8466, %rd8465, %rd13794;
	or.b64  	%rd8467, %rd13797, %rd13796;
	and.b64  	%rd8468, %rd8467, %rd13795;
	and.b64  	%rd8469, %rd13797, %rd13796;
	or.b64  	%rd8470, %rd8468, %rd8469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5802}, %rd13797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5803,%dummy}, %rd13797;
	}
	shf.l.wrap.b32 	%r5804, %r5803, %r5802, 30;
	shf.l.wrap.b32 	%r5805, %r5802, %r5803, 30;
	mov.b64 	%rd8471, {%r5805, %r5804};
	shf.r.wrap.b32 	%r5806, %r5802, %r5803, 28;
	shf.r.wrap.b32 	%r5807, %r5803, %r5802, 28;
	mov.b64 	%rd8472, {%r5807, %r5806};
	xor.b64  	%rd8473, %rd8472, %rd8471;
	shf.l.wrap.b32 	%r5808, %r5803, %r5802, 25;
	shf.l.wrap.b32 	%r5809, %r5802, %r5803, 25;
	mov.b64 	%rd8474, {%r5809, %r5808};
	xor.b64  	%rd8475, %rd8473, %rd8474;
	add.s64 	%rd8476, %rd8475, %rd8470;
	add.s64 	%rd8477, %rd8476, %rd8465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5810,%dummy}, %rd8466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5811}, %rd8466;
	}
	shf.r.wrap.b32 	%r5812, %r5811, %r5810, 14;
	shf.r.wrap.b32 	%r5813, %r5810, %r5811, 14;
	mov.b64 	%rd8478, {%r5813, %r5812};
	shf.r.wrap.b32 	%r5814, %r5811, %r5810, 18;
	shf.r.wrap.b32 	%r5815, %r5810, %r5811, 18;
	mov.b64 	%rd8479, {%r5815, %r5814};
	xor.b64  	%rd8480, %rd8478, %rd8479;
	shf.l.wrap.b32 	%r5816, %r5810, %r5811, 23;
	shf.l.wrap.b32 	%r5817, %r5811, %r5810, 23;
	mov.b64 	%rd8481, {%r5817, %r5816};
	xor.b64  	%rd8482, %rd8480, %rd8481;
	xor.b64  	%rd8483, %rd13793, %rd13792;
	and.b64  	%rd8484, %rd8466, %rd8483;
	xor.b64  	%rd8485, %rd8484, %rd13792;
	add.s64 	%rd8486, %rd8485, %rd13791;
	add.s64 	%rd8487, %rd8486, %rd8482;
	add.s64 	%rd8488, %rd8487, %rd13812;
	add.s64 	%rd8489, %rd8488, 8158064640168781261;
	add.s64 	%rd8490, %rd8489, %rd13795;
	and.b64  	%rd8491, %rd8477, %rd13797;
	or.b64  	%rd8492, %rd8477, %rd13797;
	and.b64  	%rd8493, %rd8492, %rd13796;
	or.b64  	%rd8494, %rd8493, %rd8491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5818,%dummy}, %rd8477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5819}, %rd8477;
	}
	shf.r.wrap.b32 	%r5820, %r5819, %r5818, 28;
	shf.r.wrap.b32 	%r5821, %r5818, %r5819, 28;
	mov.b64 	%rd8495, {%r5821, %r5820};
	shf.l.wrap.b32 	%r5822, %r5818, %r5819, 30;
	shf.l.wrap.b32 	%r5823, %r5819, %r5818, 30;
	mov.b64 	%rd8496, {%r5823, %r5822};
	xor.b64  	%rd8497, %rd8495, %rd8496;
	shf.l.wrap.b32 	%r5824, %r5818, %r5819, 25;
	shf.l.wrap.b32 	%r5825, %r5819, %r5818, 25;
	mov.b64 	%rd8498, {%r5825, %r5824};
	xor.b64  	%rd8499, %rd8497, %rd8498;
	add.s64 	%rd8500, %rd8499, %rd8494;
	add.s64 	%rd8501, %rd8500, %rd8489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5826,%dummy}, %rd8490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5827}, %rd8490;
	}
	shf.r.wrap.b32 	%r5828, %r5827, %r5826, 14;
	shf.r.wrap.b32 	%r5829, %r5826, %r5827, 14;
	mov.b64 	%rd8502, {%r5829, %r5828};
	shf.r.wrap.b32 	%r5830, %r5827, %r5826, 18;
	shf.r.wrap.b32 	%r5831, %r5826, %r5827, 18;
	mov.b64 	%rd8503, {%r5831, %r5830};
	xor.b64  	%rd8504, %rd8502, %rd8503;
	shf.l.wrap.b32 	%r5832, %r5826, %r5827, 23;
	shf.l.wrap.b32 	%r5833, %r5827, %r5826, 23;
	mov.b64 	%rd8505, {%r5833, %r5832};
	xor.b64  	%rd8506, %rd8504, %rd8505;
	xor.b64  	%rd8507, %rd8466, %rd13793;
	and.b64  	%rd8508, %rd8490, %rd8507;
	xor.b64  	%rd8509, %rd8508, %rd13793;
	add.s64 	%rd8510, %rd8509, %rd13792;
	add.s64 	%rd8511, %rd8510, %rd8506;
	add.s64 	%rd8512, %rd8511, %rd13811;
	add.s64 	%rd8513, %rd8512, -5349999486874862801;
	add.s64 	%rd8514, %rd8513, %rd13796;
	and.b64  	%rd8515, %rd8501, %rd8477;
	or.b64  	%rd8516, %rd8501, %rd8477;
	and.b64  	%rd8517, %rd8516, %rd13797;
	or.b64  	%rd8518, %rd8517, %rd8515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd8501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5835}, %rd8501;
	}
	shf.r.wrap.b32 	%r5836, %r5835, %r5834, 28;
	shf.r.wrap.b32 	%r5837, %r5834, %r5835, 28;
	mov.b64 	%rd8519, {%r5837, %r5836};
	shf.l.wrap.b32 	%r5838, %r5834, %r5835, 30;
	shf.l.wrap.b32 	%r5839, %r5835, %r5834, 30;
	mov.b64 	%rd8520, {%r5839, %r5838};
	xor.b64  	%rd8521, %rd8519, %rd8520;
	shf.l.wrap.b32 	%r5840, %r5834, %r5835, 25;
	shf.l.wrap.b32 	%r5841, %r5835, %r5834, 25;
	mov.b64 	%rd8522, {%r5841, %r5840};
	xor.b64  	%rd8523, %rd8521, %rd8522;
	add.s64 	%rd8524, %rd8523, %rd8518;
	add.s64 	%rd8525, %rd8524, %rd8513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5842,%dummy}, %rd8514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5843}, %rd8514;
	}
	shf.r.wrap.b32 	%r5844, %r5843, %r5842, 14;
	shf.r.wrap.b32 	%r5845, %r5842, %r5843, 14;
	mov.b64 	%rd8526, {%r5845, %r5844};
	shf.r.wrap.b32 	%r5846, %r5843, %r5842, 18;
	shf.r.wrap.b32 	%r5847, %r5842, %r5843, 18;
	mov.b64 	%rd8527, {%r5847, %r5846};
	xor.b64  	%rd8528, %rd8526, %rd8527;
	shf.l.wrap.b32 	%r5848, %r5842, %r5843, 23;
	shf.l.wrap.b32 	%r5849, %r5843, %r5842, 23;
	mov.b64 	%rd8529, {%r5849, %r5848};
	xor.b64  	%rd8530, %rd8528, %rd8529;
	xor.b64  	%rd8531, %rd8490, %rd8466;
	and.b64  	%rd8532, %rd8514, %rd8531;
	xor.b64  	%rd8533, %rd8532, %rd8466;
	add.s64 	%rd8534, %rd8533, %rd13793;
	add.s64 	%rd8535, %rd8534, %rd8530;
	add.s64 	%rd8536, %rd8535, %rd13810;
	add.s64 	%rd8537, %rd8536, -1606136188198331460;
	add.s64 	%rd8538, %rd8537, %rd13797;
	and.b64  	%rd8539, %rd8525, %rd8501;
	or.b64  	%rd8540, %rd8525, %rd8501;
	and.b64  	%rd8541, %rd8540, %rd8477;
	or.b64  	%rd8542, %rd8541, %rd8539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5850,%dummy}, %rd8525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5851}, %rd8525;
	}
	shf.r.wrap.b32 	%r5852, %r5851, %r5850, 28;
	shf.r.wrap.b32 	%r5853, %r5850, %r5851, 28;
	mov.b64 	%rd8543, {%r5853, %r5852};
	shf.l.wrap.b32 	%r5854, %r5850, %r5851, 30;
	shf.l.wrap.b32 	%r5855, %r5851, %r5850, 30;
	mov.b64 	%rd8544, {%r5855, %r5854};
	xor.b64  	%rd8545, %rd8543, %rd8544;
	shf.l.wrap.b32 	%r5856, %r5850, %r5851, 25;
	shf.l.wrap.b32 	%r5857, %r5851, %r5850, 25;
	mov.b64 	%rd8546, {%r5857, %r5856};
	xor.b64  	%rd8547, %rd8545, %rd8546;
	add.s64 	%rd8548, %rd8547, %rd8542;
	add.s64 	%rd8549, %rd8548, %rd8537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5858,%dummy}, %rd8538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5859}, %rd8538;
	}
	shf.r.wrap.b32 	%r5860, %r5859, %r5858, 14;
	shf.r.wrap.b32 	%r5861, %r5858, %r5859, 14;
	mov.b64 	%rd8550, {%r5861, %r5860};
	shf.r.wrap.b32 	%r5862, %r5859, %r5858, 18;
	shf.r.wrap.b32 	%r5863, %r5858, %r5859, 18;
	mov.b64 	%rd8551, {%r5863, %r5862};
	xor.b64  	%rd8552, %rd8550, %rd8551;
	shf.l.wrap.b32 	%r5864, %r5858, %r5859, 23;
	shf.l.wrap.b32 	%r5865, %r5859, %r5858, 23;
	mov.b64 	%rd8553, {%r5865, %r5864};
	xor.b64  	%rd8554, %rd8552, %rd8553;
	xor.b64  	%rd8555, %rd8514, %rd8490;
	and.b64  	%rd8556, %rd8538, %rd8555;
	xor.b64  	%rd8557, %rd8556, %rd8490;
	add.s64 	%rd8558, %rd8557, %rd8466;
	add.s64 	%rd8559, %rd8558, %rd8554;
	add.s64 	%rd8560, %rd8559, %rd13809;
	add.s64 	%rd8561, %rd8560, 4131703408338449720;
	add.s64 	%rd8562, %rd8561, %rd8477;
	and.b64  	%rd8563, %rd8549, %rd8525;
	or.b64  	%rd8564, %rd8549, %rd8525;
	and.b64  	%rd8565, %rd8564, %rd8501;
	or.b64  	%rd8566, %rd8565, %rd8563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5866,%dummy}, %rd8549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5867}, %rd8549;
	}
	shf.r.wrap.b32 	%r5868, %r5867, %r5866, 28;
	shf.r.wrap.b32 	%r5869, %r5866, %r5867, 28;
	mov.b64 	%rd8567, {%r5869, %r5868};
	shf.l.wrap.b32 	%r5870, %r5866, %r5867, 30;
	shf.l.wrap.b32 	%r5871, %r5867, %r5866, 30;
	mov.b64 	%rd8568, {%r5871, %r5870};
	xor.b64  	%rd8569, %rd8567, %rd8568;
	shf.l.wrap.b32 	%r5872, %r5866, %r5867, 25;
	shf.l.wrap.b32 	%r5873, %r5867, %r5866, 25;
	mov.b64 	%rd8570, {%r5873, %r5872};
	xor.b64  	%rd8571, %rd8569, %rd8570;
	add.s64 	%rd8572, %rd8571, %rd8566;
	add.s64 	%rd8573, %rd8572, %rd8561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5874,%dummy}, %rd8562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5875}, %rd8562;
	}
	shf.r.wrap.b32 	%r5876, %r5875, %r5874, 14;
	shf.r.wrap.b32 	%r5877, %r5874, %r5875, 14;
	mov.b64 	%rd8574, {%r5877, %r5876};
	shf.r.wrap.b32 	%r5878, %r5875, %r5874, 18;
	shf.r.wrap.b32 	%r5879, %r5874, %r5875, 18;
	mov.b64 	%rd8575, {%r5879, %r5878};
	xor.b64  	%rd8576, %rd8574, %rd8575;
	shf.l.wrap.b32 	%r5880, %r5874, %r5875, 23;
	shf.l.wrap.b32 	%r5881, %r5875, %r5874, 23;
	mov.b64 	%rd8577, {%r5881, %r5880};
	xor.b64  	%rd8578, %rd8576, %rd8577;
	xor.b64  	%rd8579, %rd8538, %rd8514;
	and.b64  	%rd8580, %rd8562, %rd8579;
	xor.b64  	%rd8581, %rd8580, %rd8514;
	add.s64 	%rd8582, %rd8581, %rd8490;
	add.s64 	%rd8583, %rd8582, %rd8578;
	add.s64 	%rd8584, %rd8583, %rd13808;
	add.s64 	%rd8585, %rd8584, 6480981068601479193;
	add.s64 	%rd8586, %rd8585, %rd8501;
	and.b64  	%rd8587, %rd8573, %rd8549;
	or.b64  	%rd8588, %rd8573, %rd8549;
	and.b64  	%rd8589, %rd8588, %rd8525;
	or.b64  	%rd8590, %rd8589, %rd8587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd8573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5883}, %rd8573;
	}
	shf.r.wrap.b32 	%r5884, %r5883, %r5882, 28;
	shf.r.wrap.b32 	%r5885, %r5882, %r5883, 28;
	mov.b64 	%rd8591, {%r5885, %r5884};
	shf.l.wrap.b32 	%r5886, %r5882, %r5883, 30;
	shf.l.wrap.b32 	%r5887, %r5883, %r5882, 30;
	mov.b64 	%rd8592, {%r5887, %r5886};
	xor.b64  	%rd8593, %rd8591, %rd8592;
	shf.l.wrap.b32 	%r5888, %r5882, %r5883, 25;
	shf.l.wrap.b32 	%r5889, %r5883, %r5882, 25;
	mov.b64 	%rd8594, {%r5889, %r5888};
	xor.b64  	%rd8595, %rd8593, %rd8594;
	add.s64 	%rd8596, %rd8595, %rd8590;
	add.s64 	%rd8597, %rd8596, %rd8585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5890,%dummy}, %rd8586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5891}, %rd8586;
	}
	shf.r.wrap.b32 	%r5892, %r5891, %r5890, 14;
	shf.r.wrap.b32 	%r5893, %r5890, %r5891, 14;
	mov.b64 	%rd8598, {%r5893, %r5892};
	shf.r.wrap.b32 	%r5894, %r5891, %r5890, 18;
	shf.r.wrap.b32 	%r5895, %r5890, %r5891, 18;
	mov.b64 	%rd8599, {%r5895, %r5894};
	xor.b64  	%rd8600, %rd8598, %rd8599;
	shf.l.wrap.b32 	%r5896, %r5890, %r5891, 23;
	shf.l.wrap.b32 	%r5897, %r5891, %r5890, 23;
	mov.b64 	%rd8601, {%r5897, %r5896};
	xor.b64  	%rd8602, %rd8600, %rd8601;
	xor.b64  	%rd8603, %rd8562, %rd8538;
	and.b64  	%rd8604, %rd8586, %rd8603;
	xor.b64  	%rd8605, %rd8604, %rd8538;
	add.s64 	%rd8606, %rd8605, %rd8514;
	add.s64 	%rd8607, %rd8606, %rd8602;
	add.s64 	%rd8608, %rd8607, %rd13807;
	add.s64 	%rd8609, %rd8608, -7908458776815382629;
	add.s64 	%rd8610, %rd8609, %rd8525;
	and.b64  	%rd8611, %rd8597, %rd8573;
	or.b64  	%rd8612, %rd8597, %rd8573;
	and.b64  	%rd8613, %rd8612, %rd8549;
	or.b64  	%rd8614, %rd8613, %rd8611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5898,%dummy}, %rd8597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5899}, %rd8597;
	}
	shf.r.wrap.b32 	%r5900, %r5899, %r5898, 28;
	shf.r.wrap.b32 	%r5901, %r5898, %r5899, 28;
	mov.b64 	%rd8615, {%r5901, %r5900};
	shf.l.wrap.b32 	%r5902, %r5898, %r5899, 30;
	shf.l.wrap.b32 	%r5903, %r5899, %r5898, 30;
	mov.b64 	%rd8616, {%r5903, %r5902};
	xor.b64  	%rd8617, %rd8615, %rd8616;
	shf.l.wrap.b32 	%r5904, %r5898, %r5899, 25;
	shf.l.wrap.b32 	%r5905, %r5899, %r5898, 25;
	mov.b64 	%rd8618, {%r5905, %r5904};
	xor.b64  	%rd8619, %rd8617, %rd8618;
	add.s64 	%rd8620, %rd8619, %rd8614;
	add.s64 	%rd8621, %rd8620, %rd8609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5906,%dummy}, %rd8610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5907}, %rd8610;
	}
	shf.r.wrap.b32 	%r5908, %r5907, %r5906, 14;
	shf.r.wrap.b32 	%r5909, %r5906, %r5907, 14;
	mov.b64 	%rd8622, {%r5909, %r5908};
	shf.r.wrap.b32 	%r5910, %r5907, %r5906, 18;
	shf.r.wrap.b32 	%r5911, %r5906, %r5907, 18;
	mov.b64 	%rd8623, {%r5911, %r5910};
	xor.b64  	%rd8624, %rd8622, %rd8623;
	shf.l.wrap.b32 	%r5912, %r5906, %r5907, 23;
	shf.l.wrap.b32 	%r5913, %r5907, %r5906, 23;
	mov.b64 	%rd8625, {%r5913, %r5912};
	xor.b64  	%rd8626, %rd8624, %rd8625;
	xor.b64  	%rd8627, %rd8586, %rd8562;
	and.b64  	%rd8628, %rd8610, %rd8627;
	xor.b64  	%rd8629, %rd8628, %rd8562;
	add.s64 	%rd8630, %rd8629, %rd8538;
	add.s64 	%rd8631, %rd8630, %rd8626;
	add.s64 	%rd8632, %rd8631, %rd13806;
	add.s64 	%rd8633, %rd8632, -6116909921290321640;
	add.s64 	%rd8634, %rd8633, %rd8549;
	and.b64  	%rd8635, %rd8621, %rd8597;
	or.b64  	%rd8636, %rd8621, %rd8597;
	and.b64  	%rd8637, %rd8636, %rd8573;
	or.b64  	%rd8638, %rd8637, %rd8635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5914,%dummy}, %rd8621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5915}, %rd8621;
	}
	shf.r.wrap.b32 	%r5916, %r5915, %r5914, 28;
	shf.r.wrap.b32 	%r5917, %r5914, %r5915, 28;
	mov.b64 	%rd8639, {%r5917, %r5916};
	shf.l.wrap.b32 	%r5918, %r5914, %r5915, 30;
	shf.l.wrap.b32 	%r5919, %r5915, %r5914, 30;
	mov.b64 	%rd8640, {%r5919, %r5918};
	xor.b64  	%rd8641, %rd8639, %rd8640;
	shf.l.wrap.b32 	%r5920, %r5914, %r5915, 25;
	shf.l.wrap.b32 	%r5921, %r5915, %r5914, 25;
	mov.b64 	%rd8642, {%r5921, %r5920};
	xor.b64  	%rd8643, %rd8641, %rd8642;
	add.s64 	%rd8644, %rd8643, %rd8638;
	add.s64 	%rd8645, %rd8644, %rd8633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5922,%dummy}, %rd8634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5923}, %rd8634;
	}
	shf.r.wrap.b32 	%r5924, %r5923, %r5922, 14;
	shf.r.wrap.b32 	%r5925, %r5922, %r5923, 14;
	mov.b64 	%rd8646, {%r5925, %r5924};
	shf.r.wrap.b32 	%r5926, %r5923, %r5922, 18;
	shf.r.wrap.b32 	%r5927, %r5922, %r5923, 18;
	mov.b64 	%rd8647, {%r5927, %r5926};
	xor.b64  	%rd8648, %rd8646, %rd8647;
	shf.l.wrap.b32 	%r5928, %r5922, %r5923, 23;
	shf.l.wrap.b32 	%r5929, %r5923, %r5922, 23;
	mov.b64 	%rd8649, {%r5929, %r5928};
	xor.b64  	%rd8650, %rd8648, %rd8649;
	xor.b64  	%rd8651, %rd8610, %rd8586;
	and.b64  	%rd8652, %rd8634, %rd8651;
	xor.b64  	%rd8653, %rd8652, %rd8586;
	add.s64 	%rd8654, %rd8653, %rd8562;
	add.s64 	%rd8655, %rd8654, %rd8650;
	add.s64 	%rd8656, %rd8655, %rd13805;
	add.s64 	%rd8657, %rd8656, -2880145864133508542;
	add.s64 	%rd8658, %rd8657, %rd8573;
	and.b64  	%rd8659, %rd8645, %rd8621;
	or.b64  	%rd8660, %rd8645, %rd8621;
	and.b64  	%rd8661, %rd8660, %rd8597;
	or.b64  	%rd8662, %rd8661, %rd8659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5930,%dummy}, %rd8645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5931}, %rd8645;
	}
	shf.r.wrap.b32 	%r5932, %r5931, %r5930, 28;
	shf.r.wrap.b32 	%r5933, %r5930, %r5931, 28;
	mov.b64 	%rd8663, {%r5933, %r5932};
	shf.l.wrap.b32 	%r5934, %r5930, %r5931, 30;
	shf.l.wrap.b32 	%r5935, %r5931, %r5930, 30;
	mov.b64 	%rd8664, {%r5935, %r5934};
	xor.b64  	%rd8665, %rd8663, %rd8664;
	shf.l.wrap.b32 	%r5936, %r5930, %r5931, 25;
	shf.l.wrap.b32 	%r5937, %r5931, %r5930, 25;
	mov.b64 	%rd8666, {%r5937, %r5936};
	xor.b64  	%rd8667, %rd8665, %rd8666;
	add.s64 	%rd8668, %rd8667, %rd8662;
	add.s64 	%rd8669, %rd8668, %rd8657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5938,%dummy}, %rd8658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5939}, %rd8658;
	}
	shf.r.wrap.b32 	%r5940, %r5939, %r5938, 14;
	shf.r.wrap.b32 	%r5941, %r5938, %r5939, 14;
	mov.b64 	%rd8670, {%r5941, %r5940};
	shf.r.wrap.b32 	%r5942, %r5939, %r5938, 18;
	shf.r.wrap.b32 	%r5943, %r5938, %r5939, 18;
	mov.b64 	%rd8671, {%r5943, %r5942};
	xor.b64  	%rd8672, %rd8670, %rd8671;
	shf.l.wrap.b32 	%r5944, %r5938, %r5939, 23;
	shf.l.wrap.b32 	%r5945, %r5939, %r5938, 23;
	mov.b64 	%rd8673, {%r5945, %r5944};
	xor.b64  	%rd8674, %rd8672, %rd8673;
	xor.b64  	%rd8675, %rd8634, %rd8610;
	and.b64  	%rd8676, %rd8658, %rd8675;
	xor.b64  	%rd8677, %rd8676, %rd8610;
	add.s64 	%rd8678, %rd8677, %rd8586;
	add.s64 	%rd8679, %rd8678, %rd8674;
	add.s64 	%rd8680, %rd8679, %rd13804;
	add.s64 	%rd8681, %rd8680, 1334009975649890238;
	add.s64 	%rd8682, %rd8681, %rd8597;
	and.b64  	%rd8683, %rd8669, %rd8645;
	or.b64  	%rd8684, %rd8669, %rd8645;
	and.b64  	%rd8685, %rd8684, %rd8621;
	or.b64  	%rd8686, %rd8685, %rd8683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5946,%dummy}, %rd8669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5947}, %rd8669;
	}
	shf.r.wrap.b32 	%r5948, %r5947, %r5946, 28;
	shf.r.wrap.b32 	%r5949, %r5946, %r5947, 28;
	mov.b64 	%rd8687, {%r5949, %r5948};
	shf.l.wrap.b32 	%r5950, %r5946, %r5947, 30;
	shf.l.wrap.b32 	%r5951, %r5947, %r5946, 30;
	mov.b64 	%rd8688, {%r5951, %r5950};
	xor.b64  	%rd8689, %rd8687, %rd8688;
	shf.l.wrap.b32 	%r5952, %r5946, %r5947, 25;
	shf.l.wrap.b32 	%r5953, %r5947, %r5946, 25;
	mov.b64 	%rd8690, {%r5953, %r5952};
	xor.b64  	%rd8691, %rd8689, %rd8690;
	add.s64 	%rd8692, %rd8691, %rd8686;
	add.s64 	%rd8693, %rd8692, %rd8681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5954,%dummy}, %rd8682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5955}, %rd8682;
	}
	shf.r.wrap.b32 	%r5956, %r5955, %r5954, 14;
	shf.r.wrap.b32 	%r5957, %r5954, %r5955, 14;
	mov.b64 	%rd8694, {%r5957, %r5956};
	shf.r.wrap.b32 	%r5958, %r5955, %r5954, 18;
	shf.r.wrap.b32 	%r5959, %r5954, %r5955, 18;
	mov.b64 	%rd8695, {%r5959, %r5958};
	xor.b64  	%rd8696, %rd8694, %rd8695;
	shf.l.wrap.b32 	%r5960, %r5954, %r5955, 23;
	shf.l.wrap.b32 	%r5961, %r5955, %r5954, 23;
	mov.b64 	%rd8697, {%r5961, %r5960};
	xor.b64  	%rd8698, %rd8696, %rd8697;
	xor.b64  	%rd8699, %rd8658, %rd8634;
	and.b64  	%rd8700, %rd8682, %rd8699;
	xor.b64  	%rd8701, %rd8700, %rd8634;
	add.s64 	%rd8702, %rd8701, %rd8610;
	add.s64 	%rd8703, %rd8702, %rd8698;
	add.s64 	%rd8704, %rd8703, %rd13803;
	add.s64 	%rd8705, %rd8704, 2608012711638119052;
	add.s64 	%rd8706, %rd8705, %rd8621;
	and.b64  	%rd8707, %rd8693, %rd8669;
	or.b64  	%rd8708, %rd8693, %rd8669;
	and.b64  	%rd8709, %rd8708, %rd8645;
	or.b64  	%rd8710, %rd8709, %rd8707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd8693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5963}, %rd8693;
	}
	shf.r.wrap.b32 	%r5964, %r5963, %r5962, 28;
	shf.r.wrap.b32 	%r5965, %r5962, %r5963, 28;
	mov.b64 	%rd8711, {%r5965, %r5964};
	shf.l.wrap.b32 	%r5966, %r5962, %r5963, 30;
	shf.l.wrap.b32 	%r5967, %r5963, %r5962, 30;
	mov.b64 	%rd8712, {%r5967, %r5966};
	xor.b64  	%rd8713, %rd8711, %rd8712;
	shf.l.wrap.b32 	%r5968, %r5962, %r5963, 25;
	shf.l.wrap.b32 	%r5969, %r5963, %r5962, 25;
	mov.b64 	%rd8714, {%r5969, %r5968};
	xor.b64  	%rd8715, %rd8713, %rd8714;
	add.s64 	%rd8716, %rd8715, %rd8710;
	add.s64 	%rd8717, %rd8716, %rd8705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5970,%dummy}, %rd8706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5971}, %rd8706;
	}
	shf.r.wrap.b32 	%r5972, %r5971, %r5970, 14;
	shf.r.wrap.b32 	%r5973, %r5970, %r5971, 14;
	mov.b64 	%rd8718, {%r5973, %r5972};
	shf.r.wrap.b32 	%r5974, %r5971, %r5970, 18;
	shf.r.wrap.b32 	%r5975, %r5970, %r5971, 18;
	mov.b64 	%rd8719, {%r5975, %r5974};
	xor.b64  	%rd8720, %rd8718, %rd8719;
	shf.l.wrap.b32 	%r5976, %r5970, %r5971, 23;
	shf.l.wrap.b32 	%r5977, %r5971, %r5970, 23;
	mov.b64 	%rd8721, {%r5977, %r5976};
	xor.b64  	%rd8722, %rd8720, %rd8721;
	xor.b64  	%rd8723, %rd8682, %rd8658;
	and.b64  	%rd8724, %rd8706, %rd8723;
	xor.b64  	%rd8725, %rd8724, %rd8658;
	add.s64 	%rd8726, %rd8725, %rd8634;
	add.s64 	%rd8727, %rd8726, %rd8722;
	add.s64 	%rd8728, %rd8727, %rd13802;
	add.s64 	%rd8729, %rd8728, 6128411473006802146;
	add.s64 	%rd8730, %rd8729, %rd8645;
	and.b64  	%rd8731, %rd8717, %rd8693;
	or.b64  	%rd8732, %rd8717, %rd8693;
	and.b64  	%rd8733, %rd8732, %rd8669;
	or.b64  	%rd8734, %rd8733, %rd8731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5978,%dummy}, %rd8717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5979}, %rd8717;
	}
	shf.r.wrap.b32 	%r5980, %r5979, %r5978, 28;
	shf.r.wrap.b32 	%r5981, %r5978, %r5979, 28;
	mov.b64 	%rd8735, {%r5981, %r5980};
	shf.l.wrap.b32 	%r5982, %r5978, %r5979, 30;
	shf.l.wrap.b32 	%r5983, %r5979, %r5978, 30;
	mov.b64 	%rd8736, {%r5983, %r5982};
	xor.b64  	%rd8737, %rd8735, %rd8736;
	shf.l.wrap.b32 	%r5984, %r5978, %r5979, 25;
	shf.l.wrap.b32 	%r5985, %r5979, %r5978, 25;
	mov.b64 	%rd8738, {%r5985, %r5984};
	xor.b64  	%rd8739, %rd8737, %rd8738;
	add.s64 	%rd8740, %rd8739, %rd8734;
	add.s64 	%rd8741, %rd8740, %rd8729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd8730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd8730;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 14;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 14;
	mov.b64 	%rd8742, {%r5989, %r5988};
	shf.r.wrap.b32 	%r5990, %r5987, %r5986, 18;
	shf.r.wrap.b32 	%r5991, %r5986, %r5987, 18;
	mov.b64 	%rd8743, {%r5991, %r5990};
	xor.b64  	%rd8744, %rd8742, %rd8743;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 23;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 23;
	mov.b64 	%rd8745, {%r5993, %r5992};
	xor.b64  	%rd8746, %rd8744, %rd8745;
	xor.b64  	%rd8747, %rd8706, %rd8682;
	and.b64  	%rd8748, %rd8730, %rd8747;
	xor.b64  	%rd8749, %rd8748, %rd8682;
	add.s64 	%rd8750, %rd8749, %rd8658;
	add.s64 	%rd8751, %rd8750, %rd8746;
	add.s64 	%rd8752, %rd8751, %rd13801;
	add.s64 	%rd8753, %rd8752, 8268148722764581231;
	add.s64 	%rd13821, %rd8753, %rd8669;
	and.b64  	%rd8754, %rd8741, %rd8717;
	or.b64  	%rd8755, %rd8741, %rd8717;
	and.b64  	%rd8756, %rd8755, %rd8693;
	or.b64  	%rd8757, %rd8756, %rd8754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd8741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd8741;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 28;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 28;
	mov.b64 	%rd8758, {%r5997, %r5996};
	shf.l.wrap.b32 	%r5998, %r5994, %r5995, 30;
	shf.l.wrap.b32 	%r5999, %r5995, %r5994, 30;
	mov.b64 	%rd8759, {%r5999, %r5998};
	xor.b64  	%rd8760, %rd8758, %rd8759;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 25;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 25;
	mov.b64 	%rd8761, {%r6001, %r6000};
	xor.b64  	%rd8762, %rd8760, %rd8761;
	add.s64 	%rd8763, %rd8762, %rd8757;
	add.s64 	%rd13817, %rd8763, %rd8753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd13821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd13821;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 14;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 14;
	mov.b64 	%rd8764, {%r6005, %r6004};
	shf.r.wrap.b32 	%r6006, %r6003, %r6002, 18;
	shf.r.wrap.b32 	%r6007, %r6002, %r6003, 18;
	mov.b64 	%rd8765, {%r6007, %r6006};
	xor.b64  	%rd8766, %rd8764, %rd8765;
	shf.l.wrap.b32 	%r6008, %r6002, %r6003, 23;
	shf.l.wrap.b32 	%r6009, %r6003, %r6002, 23;
	mov.b64 	%rd8767, {%r6009, %r6008};
	xor.b64  	%rd8768, %rd8766, %rd8767;
	xor.b64  	%rd8769, %rd8730, %rd8706;
	and.b64  	%rd8770, %rd13821, %rd8769;
	xor.b64  	%rd8771, %rd8770, %rd8706;
	add.s64 	%rd8772, %rd8771, %rd8682;
	add.s64 	%rd8773, %rd8772, %rd8768;
	add.s64 	%rd8774, %rd8773, %rd13800;
	add.s64 	%rd8775, %rd8774, -9160688886553864527;
	add.s64 	%rd13820, %rd8775, %rd8693;
	and.b64  	%rd8776, %rd13817, %rd8741;
	or.b64  	%rd8777, %rd13817, %rd8741;
	and.b64  	%rd8778, %rd8777, %rd8717;
	or.b64  	%rd8779, %rd8778, %rd8776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd13817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6011}, %rd13817;
	}
	shf.r.wrap.b32 	%r6012, %r6011, %r6010, 28;
	shf.r.wrap.b32 	%r6013, %r6010, %r6011, 28;
	mov.b64 	%rd8780, {%r6013, %r6012};
	shf.l.wrap.b32 	%r6014, %r6010, %r6011, 30;
	shf.l.wrap.b32 	%r6015, %r6011, %r6010, 30;
	mov.b64 	%rd8781, {%r6015, %r6014};
	xor.b64  	%rd8782, %rd8780, %rd8781;
	shf.l.wrap.b32 	%r6016, %r6010, %r6011, 25;
	shf.l.wrap.b32 	%r6017, %r6011, %r6010, 25;
	mov.b64 	%rd8783, {%r6017, %r6016};
	xor.b64  	%rd8784, %rd8782, %rd8783;
	add.s64 	%rd8785, %rd8784, %rd8779;
	add.s64 	%rd13816, %rd8785, %rd8775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6018,%dummy}, %rd13820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6019}, %rd13820;
	}
	shf.r.wrap.b32 	%r6020, %r6019, %r6018, 14;
	shf.r.wrap.b32 	%r6021, %r6018, %r6019, 14;
	mov.b64 	%rd8786, {%r6021, %r6020};
	shf.r.wrap.b32 	%r6022, %r6019, %r6018, 18;
	shf.r.wrap.b32 	%r6023, %r6018, %r6019, 18;
	mov.b64 	%rd8787, {%r6023, %r6022};
	xor.b64  	%rd8788, %rd8786, %rd8787;
	shf.l.wrap.b32 	%r6024, %r6018, %r6019, 23;
	shf.l.wrap.b32 	%r6025, %r6019, %r6018, 23;
	mov.b64 	%rd8789, {%r6025, %r6024};
	xor.b64  	%rd8790, %rd8788, %rd8789;
	xor.b64  	%rd8791, %rd13821, %rd8730;
	and.b64  	%rd8792, %rd13820, %rd8791;
	xor.b64  	%rd8793, %rd8792, %rd8730;
	add.s64 	%rd8794, %rd8793, %rd8706;
	add.s64 	%rd8795, %rd8794, %rd8790;
	add.s64 	%rd8796, %rd8795, %rd13799;
	add.s64 	%rd8797, %rd8796, -7215885187991268811;
	add.s64 	%rd13819, %rd8797, %rd8717;
	and.b64  	%rd8798, %rd13816, %rd13817;
	or.b64  	%rd8799, %rd13816, %rd13817;
	and.b64  	%rd8800, %rd8799, %rd8741;
	or.b64  	%rd8801, %rd8800, %rd8798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd13816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6027}, %rd13816;
	}
	shf.r.wrap.b32 	%r6028, %r6027, %r6026, 28;
	shf.r.wrap.b32 	%r6029, %r6026, %r6027, 28;
	mov.b64 	%rd8802, {%r6029, %r6028};
	shf.l.wrap.b32 	%r6030, %r6026, %r6027, 30;
	shf.l.wrap.b32 	%r6031, %r6027, %r6026, 30;
	mov.b64 	%rd8803, {%r6031, %r6030};
	xor.b64  	%rd8804, %rd8802, %rd8803;
	shf.l.wrap.b32 	%r6032, %r6026, %r6027, 25;
	shf.l.wrap.b32 	%r6033, %r6027, %r6026, 25;
	mov.b64 	%rd8805, {%r6033, %r6032};
	xor.b64  	%rd8806, %rd8804, %rd8805;
	add.s64 	%rd8807, %rd8806, %rd8801;
	add.s64 	%rd13815, %rd8807, %rd8797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6034,%dummy}, %rd13819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6035}, %rd13819;
	}
	shf.r.wrap.b32 	%r6036, %r6035, %r6034, 14;
	shf.r.wrap.b32 	%r6037, %r6034, %r6035, 14;
	mov.b64 	%rd8808, {%r6037, %r6036};
	shf.r.wrap.b32 	%r6038, %r6035, %r6034, 18;
	shf.r.wrap.b32 	%r6039, %r6034, %r6035, 18;
	mov.b64 	%rd8809, {%r6039, %r6038};
	xor.b64  	%rd8810, %rd8808, %rd8809;
	shf.l.wrap.b32 	%r6040, %r6034, %r6035, 23;
	shf.l.wrap.b32 	%r6041, %r6035, %r6034, 23;
	mov.b64 	%rd8811, {%r6041, %r6040};
	xor.b64  	%rd8812, %rd8810, %rd8811;
	xor.b64  	%rd8813, %rd13820, %rd13821;
	and.b64  	%rd8814, %rd13819, %rd8813;
	xor.b64  	%rd8815, %rd8814, %rd13821;
	add.s64 	%rd8816, %rd8815, %rd8730;
	add.s64 	%rd8817, %rd8816, %rd8812;
	add.s64 	%rd8818, %rd8817, %rd13798;
	add.s64 	%rd8819, %rd8818, -4495734319001033068;
	add.s64 	%rd13818, %rd8819, %rd8741;
	and.b64  	%rd8820, %rd13815, %rd13816;
	or.b64  	%rd8821, %rd13815, %rd13816;
	and.b64  	%rd8822, %rd8821, %rd13817;
	or.b64  	%rd8823, %rd8822, %rd8820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6042,%dummy}, %rd13815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6043}, %rd13815;
	}
	shf.r.wrap.b32 	%r6044, %r6043, %r6042, 28;
	shf.r.wrap.b32 	%r6045, %r6042, %r6043, 28;
	mov.b64 	%rd8824, {%r6045, %r6044};
	shf.l.wrap.b32 	%r6046, %r6042, %r6043, 30;
	shf.l.wrap.b32 	%r6047, %r6043, %r6042, 30;
	mov.b64 	%rd8825, {%r6047, %r6046};
	xor.b64  	%rd8826, %rd8824, %rd8825;
	shf.l.wrap.b32 	%r6048, %r6042, %r6043, 25;
	shf.l.wrap.b32 	%r6049, %r6043, %r6042, 25;
	mov.b64 	%rd8827, {%r6049, %r6048};
	xor.b64  	%rd8828, %rd8826, %rd8827;
	add.s64 	%rd8829, %rd8828, %rd8823;
	add.s64 	%rd13814, %rd8829, %rd8819;
	mov.u32 	%r9748, 16;

$L__BB0_126:
	.pragma "nounroll";
	mov.u64 	%rd13510, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6050}, %rd13799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6051,%dummy}, %rd13799;
	}
	shf.l.wrap.b32 	%r6052, %r6051, %r6050, 3;
	shf.l.wrap.b32 	%r6053, %r6050, %r6051, 3;
	mov.b64 	%rd8830, {%r6053, %r6052};
	shf.r.wrap.b32 	%r6054, %r6050, %r6051, 19;
	shf.r.wrap.b32 	%r6055, %r6051, %r6050, 19;
	mov.b64 	%rd8831, {%r6055, %r6054};
	xor.b64  	%rd8832, %rd8831, %rd8830;
	shr.u64 	%rd8833, %rd13799, 6;
	xor.b64  	%rd8834, %rd8832, %rd8833;
	add.s64 	%rd8835, %rd13804, %rd13813;
	add.s64 	%rd8836, %rd8835, %rd8834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6056,%dummy}, %rd13812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6057}, %rd13812;
	}
	shf.r.wrap.b32 	%r6058, %r6057, %r6056, 8;
	shf.r.wrap.b32 	%r6059, %r6056, %r6057, 8;
	mov.b64 	%rd8837, {%r6059, %r6058};
	shf.r.wrap.b32 	%r6060, %r6057, %r6056, 1;
	shf.r.wrap.b32 	%r6061, %r6056, %r6057, 1;
	mov.b64 	%rd8838, {%r6061, %r6060};
	xor.b64  	%rd8839, %rd8838, %rd8837;
	shr.u64 	%rd8840, %rd13812, 7;
	xor.b64  	%rd8841, %rd8839, %rd8840;
	add.s64 	%rd13813, %rd8836, %rd8841;
	mul.wide.u32 	%rd8842, %r9748, 8;
	add.s64 	%rd8844, %rd13510, %rd8842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6062,%dummy}, %rd13818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6063}, %rd13818;
	}
	shf.r.wrap.b32 	%r6064, %r6063, %r6062, 18;
	shf.r.wrap.b32 	%r6065, %r6062, %r6063, 18;
	mov.b64 	%rd8845, {%r6065, %r6064};
	shf.r.wrap.b32 	%r6066, %r6063, %r6062, 14;
	shf.r.wrap.b32 	%r6067, %r6062, %r6063, 14;
	mov.b64 	%rd8846, {%r6067, %r6066};
	xor.b64  	%rd8847, %rd8846, %rd8845;
	shf.l.wrap.b32 	%r6068, %r6062, %r6063, 23;
	shf.l.wrap.b32 	%r6069, %r6063, %r6062, 23;
	mov.b64 	%rd8848, {%r6069, %r6068};
	xor.b64  	%rd8849, %rd8847, %rd8848;
	xor.b64  	%rd8850, %rd13819, %rd13820;
	and.b64  	%rd8851, %rd13818, %rd8850;
	xor.b64  	%rd8852, %rd8851, %rd13820;
	add.s64 	%rd8853, %rd8852, %rd13821;
	add.s64 	%rd8854, %rd8853, %rd8849;
	ld.const.u64 	%rd8855, [%rd8844];
	add.s64 	%rd8856, %rd8854, %rd8855;
	add.s64 	%rd8857, %rd8856, %rd13813;
	add.s64 	%rd8858, %rd8857, %rd13817;
	or.b64  	%rd8859, %rd13814, %rd13815;
	and.b64  	%rd8860, %rd8859, %rd13816;
	and.b64  	%rd8861, %rd13814, %rd13815;
	or.b64  	%rd8862, %rd8860, %rd8861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6070}, %rd13814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6071,%dummy}, %rd13814;
	}
	shf.l.wrap.b32 	%r6072, %r6071, %r6070, 30;
	shf.l.wrap.b32 	%r6073, %r6070, %r6071, 30;
	mov.b64 	%rd8863, {%r6073, %r6072};
	shf.r.wrap.b32 	%r6074, %r6070, %r6071, 28;
	shf.r.wrap.b32 	%r6075, %r6071, %r6070, 28;
	mov.b64 	%rd8864, {%r6075, %r6074};
	xor.b64  	%rd8865, %rd8864, %rd8863;
	shf.l.wrap.b32 	%r6076, %r6071, %r6070, 25;
	shf.l.wrap.b32 	%r6077, %r6070, %r6071, 25;
	mov.b64 	%rd8866, {%r6077, %r6076};
	xor.b64  	%rd8867, %rd8865, %rd8866;
	add.s64 	%rd8868, %rd8867, %rd8862;
	add.s64 	%rd8869, %rd8868, %rd8857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6078}, %rd13798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6079,%dummy}, %rd13798;
	}
	shf.l.wrap.b32 	%r6080, %r6079, %r6078, 3;
	shf.l.wrap.b32 	%r6081, %r6078, %r6079, 3;
	mov.b64 	%rd8870, {%r6081, %r6080};
	shf.r.wrap.b32 	%r6082, %r6078, %r6079, 19;
	shf.r.wrap.b32 	%r6083, %r6079, %r6078, 19;
	mov.b64 	%rd8871, {%r6083, %r6082};
	xor.b64  	%rd8872, %rd8871, %rd8870;
	shr.u64 	%rd8873, %rd13798, 6;
	xor.b64  	%rd8874, %rd8872, %rd8873;
	add.s64 	%rd8875, %rd13803, %rd13812;
	add.s64 	%rd8876, %rd8875, %rd8874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6084,%dummy}, %rd13811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6085}, %rd13811;
	}
	shf.r.wrap.b32 	%r6086, %r6085, %r6084, 8;
	shf.r.wrap.b32 	%r6087, %r6084, %r6085, 8;
	mov.b64 	%rd8877, {%r6087, %r6086};
	shf.r.wrap.b32 	%r6088, %r6085, %r6084, 1;
	shf.r.wrap.b32 	%r6089, %r6084, %r6085, 1;
	mov.b64 	%rd8878, {%r6089, %r6088};
	xor.b64  	%rd8879, %rd8878, %rd8877;
	shr.u64 	%rd8880, %rd13811, 7;
	xor.b64  	%rd8881, %rd8879, %rd8880;
	add.s64 	%rd13812, %rd8876, %rd8881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6090,%dummy}, %rd8858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6091}, %rd8858;
	}
	shf.r.wrap.b32 	%r6092, %r6091, %r6090, 14;
	shf.r.wrap.b32 	%r6093, %r6090, %r6091, 14;
	mov.b64 	%rd8882, {%r6093, %r6092};
	shf.r.wrap.b32 	%r6094, %r6091, %r6090, 18;
	shf.r.wrap.b32 	%r6095, %r6090, %r6091, 18;
	mov.b64 	%rd8883, {%r6095, %r6094};
	xor.b64  	%rd8884, %rd8882, %rd8883;
	shf.l.wrap.b32 	%r6096, %r6090, %r6091, 23;
	shf.l.wrap.b32 	%r6097, %r6091, %r6090, 23;
	mov.b64 	%rd8885, {%r6097, %r6096};
	xor.b64  	%rd8886, %rd8884, %rd8885;
	xor.b64  	%rd8887, %rd13818, %rd13819;
	and.b64  	%rd8888, %rd8858, %rd8887;
	xor.b64  	%rd8889, %rd8888, %rd13819;
	add.s64 	%rd8890, %rd8889, %rd13820;
	add.s64 	%rd8891, %rd8890, %rd8886;
	ld.const.u64 	%rd8892, [%rd8844+8];
	add.s64 	%rd8893, %rd8891, %rd8892;
	add.s64 	%rd8894, %rd8893, %rd13812;
	add.s64 	%rd8895, %rd8894, %rd13816;
	and.b64  	%rd8896, %rd8869, %rd13814;
	or.b64  	%rd8897, %rd8869, %rd13814;
	and.b64  	%rd8898, %rd8897, %rd13815;
	or.b64  	%rd8899, %rd8898, %rd8896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6098,%dummy}, %rd8869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6099}, %rd8869;
	}
	shf.r.wrap.b32 	%r6100, %r6099, %r6098, 28;
	shf.r.wrap.b32 	%r6101, %r6098, %r6099, 28;
	mov.b64 	%rd8900, {%r6101, %r6100};
	shf.l.wrap.b32 	%r6102, %r6098, %r6099, 30;
	shf.l.wrap.b32 	%r6103, %r6099, %r6098, 30;
	mov.b64 	%rd8901, {%r6103, %r6102};
	xor.b64  	%rd8902, %rd8900, %rd8901;
	shf.l.wrap.b32 	%r6104, %r6098, %r6099, 25;
	shf.l.wrap.b32 	%r6105, %r6099, %r6098, 25;
	mov.b64 	%rd8903, {%r6105, %r6104};
	xor.b64  	%rd8904, %rd8902, %rd8903;
	add.s64 	%rd8905, %rd8904, %rd8899;
	add.s64 	%rd8906, %rd8905, %rd8894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd13813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6107}, %rd13813;
	}
	shf.r.wrap.b32 	%r6108, %r6107, %r6106, 19;
	shf.r.wrap.b32 	%r6109, %r6106, %r6107, 19;
	mov.b64 	%rd8907, {%r6109, %r6108};
	shf.l.wrap.b32 	%r6110, %r6106, %r6107, 3;
	shf.l.wrap.b32 	%r6111, %r6107, %r6106, 3;
	mov.b64 	%rd8908, {%r6111, %r6110};
	xor.b64  	%rd8909, %rd8907, %rd8908;
	shr.u64 	%rd8910, %rd13813, 6;
	xor.b64  	%rd8911, %rd8909, %rd8910;
	add.s64 	%rd8912, %rd13802, %rd13811;
	add.s64 	%rd8913, %rd8912, %rd8911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6112,%dummy}, %rd13810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6113}, %rd13810;
	}
	shf.r.wrap.b32 	%r6114, %r6113, %r6112, 8;
	shf.r.wrap.b32 	%r6115, %r6112, %r6113, 8;
	mov.b64 	%rd8914, {%r6115, %r6114};
	shf.r.wrap.b32 	%r6116, %r6113, %r6112, 1;
	shf.r.wrap.b32 	%r6117, %r6112, %r6113, 1;
	mov.b64 	%rd8915, {%r6117, %r6116};
	xor.b64  	%rd8916, %rd8915, %rd8914;
	shr.u64 	%rd8917, %rd13810, 7;
	xor.b64  	%rd8918, %rd8916, %rd8917;
	add.s64 	%rd13811, %rd8913, %rd8918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6118,%dummy}, %rd8895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6119}, %rd8895;
	}
	shf.r.wrap.b32 	%r6120, %r6119, %r6118, 14;
	shf.r.wrap.b32 	%r6121, %r6118, %r6119, 14;
	mov.b64 	%rd8919, {%r6121, %r6120};
	shf.r.wrap.b32 	%r6122, %r6119, %r6118, 18;
	shf.r.wrap.b32 	%r6123, %r6118, %r6119, 18;
	mov.b64 	%rd8920, {%r6123, %r6122};
	xor.b64  	%rd8921, %rd8919, %rd8920;
	shf.l.wrap.b32 	%r6124, %r6118, %r6119, 23;
	shf.l.wrap.b32 	%r6125, %r6119, %r6118, 23;
	mov.b64 	%rd8922, {%r6125, %r6124};
	xor.b64  	%rd8923, %rd8921, %rd8922;
	xor.b64  	%rd8924, %rd8858, %rd13818;
	and.b64  	%rd8925, %rd8895, %rd8924;
	xor.b64  	%rd8926, %rd8925, %rd13818;
	add.s64 	%rd8927, %rd8926, %rd13819;
	add.s64 	%rd8928, %rd8927, %rd8923;
	ld.const.u64 	%rd8929, [%rd8844+16];
	add.s64 	%rd8930, %rd8928, %rd8929;
	add.s64 	%rd8931, %rd8930, %rd13811;
	add.s64 	%rd8932, %rd8931, %rd13815;
	and.b64  	%rd8933, %rd8906, %rd8869;
	or.b64  	%rd8934, %rd8906, %rd8869;
	and.b64  	%rd8935, %rd8934, %rd13814;
	or.b64  	%rd8936, %rd8935, %rd8933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6126,%dummy}, %rd8906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6127}, %rd8906;
	}
	shf.r.wrap.b32 	%r6128, %r6127, %r6126, 28;
	shf.r.wrap.b32 	%r6129, %r6126, %r6127, 28;
	mov.b64 	%rd8937, {%r6129, %r6128};
	shf.l.wrap.b32 	%r6130, %r6126, %r6127, 30;
	shf.l.wrap.b32 	%r6131, %r6127, %r6126, 30;
	mov.b64 	%rd8938, {%r6131, %r6130};
	xor.b64  	%rd8939, %rd8937, %rd8938;
	shf.l.wrap.b32 	%r6132, %r6126, %r6127, 25;
	shf.l.wrap.b32 	%r6133, %r6127, %r6126, 25;
	mov.b64 	%rd8940, {%r6133, %r6132};
	xor.b64  	%rd8941, %rd8939, %rd8940;
	add.s64 	%rd8942, %rd8941, %rd8936;
	add.s64 	%rd8943, %rd8942, %rd8931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6134,%dummy}, %rd13812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6135}, %rd13812;
	}
	shf.r.wrap.b32 	%r6136, %r6135, %r6134, 19;
	shf.r.wrap.b32 	%r6137, %r6134, %r6135, 19;
	mov.b64 	%rd8944, {%r6137, %r6136};
	shf.l.wrap.b32 	%r6138, %r6134, %r6135, 3;
	shf.l.wrap.b32 	%r6139, %r6135, %r6134, 3;
	mov.b64 	%rd8945, {%r6139, %r6138};
	xor.b64  	%rd8946, %rd8944, %rd8945;
	shr.u64 	%rd8947, %rd13812, 6;
	xor.b64  	%rd8948, %rd8946, %rd8947;
	add.s64 	%rd8949, %rd13801, %rd13810;
	add.s64 	%rd8950, %rd8949, %rd8948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6140,%dummy}, %rd13809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6141}, %rd13809;
	}
	shf.r.wrap.b32 	%r6142, %r6141, %r6140, 8;
	shf.r.wrap.b32 	%r6143, %r6140, %r6141, 8;
	mov.b64 	%rd8951, {%r6143, %r6142};
	shf.r.wrap.b32 	%r6144, %r6141, %r6140, 1;
	shf.r.wrap.b32 	%r6145, %r6140, %r6141, 1;
	mov.b64 	%rd8952, {%r6145, %r6144};
	xor.b64  	%rd8953, %rd8952, %rd8951;
	shr.u64 	%rd8954, %rd13809, 7;
	xor.b64  	%rd8955, %rd8953, %rd8954;
	add.s64 	%rd13810, %rd8950, %rd8955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd8932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6147}, %rd8932;
	}
	shf.r.wrap.b32 	%r6148, %r6147, %r6146, 14;
	shf.r.wrap.b32 	%r6149, %r6146, %r6147, 14;
	mov.b64 	%rd8956, {%r6149, %r6148};
	shf.r.wrap.b32 	%r6150, %r6147, %r6146, 18;
	shf.r.wrap.b32 	%r6151, %r6146, %r6147, 18;
	mov.b64 	%rd8957, {%r6151, %r6150};
	xor.b64  	%rd8958, %rd8956, %rd8957;
	shf.l.wrap.b32 	%r6152, %r6146, %r6147, 23;
	shf.l.wrap.b32 	%r6153, %r6147, %r6146, 23;
	mov.b64 	%rd8959, {%r6153, %r6152};
	xor.b64  	%rd8960, %rd8958, %rd8959;
	xor.b64  	%rd8961, %rd8895, %rd8858;
	and.b64  	%rd8962, %rd8932, %rd8961;
	xor.b64  	%rd8963, %rd8962, %rd8858;
	add.s64 	%rd8964, %rd8963, %rd13818;
	add.s64 	%rd8965, %rd8964, %rd8960;
	ld.const.u64 	%rd8966, [%rd8844+24];
	add.s64 	%rd8967, %rd8965, %rd8966;
	add.s64 	%rd8968, %rd8967, %rd13810;
	add.s64 	%rd8969, %rd8968, %rd13814;
	and.b64  	%rd8970, %rd8943, %rd8906;
	or.b64  	%rd8971, %rd8943, %rd8906;
	and.b64  	%rd8972, %rd8971, %rd8869;
	or.b64  	%rd8973, %rd8972, %rd8970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd8943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6155}, %rd8943;
	}
	shf.r.wrap.b32 	%r6156, %r6155, %r6154, 28;
	shf.r.wrap.b32 	%r6157, %r6154, %r6155, 28;
	mov.b64 	%rd8974, {%r6157, %r6156};
	shf.l.wrap.b32 	%r6158, %r6154, %r6155, 30;
	shf.l.wrap.b32 	%r6159, %r6155, %r6154, 30;
	mov.b64 	%rd8975, {%r6159, %r6158};
	xor.b64  	%rd8976, %rd8974, %rd8975;
	shf.l.wrap.b32 	%r6160, %r6154, %r6155, 25;
	shf.l.wrap.b32 	%r6161, %r6155, %r6154, 25;
	mov.b64 	%rd8977, {%r6161, %r6160};
	xor.b64  	%rd8978, %rd8976, %rd8977;
	add.s64 	%rd8979, %rd8978, %rd8973;
	add.s64 	%rd8980, %rd8979, %rd8968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd13811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd13811;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 19;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 19;
	mov.b64 	%rd8981, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 3;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 3;
	mov.b64 	%rd8982, {%r6167, %r6166};
	xor.b64  	%rd8983, %rd8981, %rd8982;
	shr.u64 	%rd8984, %rd13811, 6;
	xor.b64  	%rd8985, %rd8983, %rd8984;
	add.s64 	%rd8986, %rd13800, %rd13809;
	add.s64 	%rd8987, %rd8986, %rd8985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6168,%dummy}, %rd13808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd13808;
	}
	shf.r.wrap.b32 	%r6170, %r6169, %r6168, 8;
	shf.r.wrap.b32 	%r6171, %r6168, %r6169, 8;
	mov.b64 	%rd8988, {%r6171, %r6170};
	shf.r.wrap.b32 	%r6172, %r6169, %r6168, 1;
	shf.r.wrap.b32 	%r6173, %r6168, %r6169, 1;
	mov.b64 	%rd8989, {%r6173, %r6172};
	xor.b64  	%rd8990, %rd8989, %rd8988;
	shr.u64 	%rd8991, %rd13808, 7;
	xor.b64  	%rd8992, %rd8990, %rd8991;
	add.s64 	%rd13809, %rd8987, %rd8992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6174,%dummy}, %rd8969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6175}, %rd8969;
	}
	shf.r.wrap.b32 	%r6176, %r6175, %r6174, 14;
	shf.r.wrap.b32 	%r6177, %r6174, %r6175, 14;
	mov.b64 	%rd8993, {%r6177, %r6176};
	shf.r.wrap.b32 	%r6178, %r6175, %r6174, 18;
	shf.r.wrap.b32 	%r6179, %r6174, %r6175, 18;
	mov.b64 	%rd8994, {%r6179, %r6178};
	xor.b64  	%rd8995, %rd8993, %rd8994;
	shf.l.wrap.b32 	%r6180, %r6174, %r6175, 23;
	shf.l.wrap.b32 	%r6181, %r6175, %r6174, 23;
	mov.b64 	%rd8996, {%r6181, %r6180};
	xor.b64  	%rd8997, %rd8995, %rd8996;
	xor.b64  	%rd8998, %rd8932, %rd8895;
	and.b64  	%rd8999, %rd8969, %rd8998;
	xor.b64  	%rd9000, %rd8999, %rd8895;
	add.s64 	%rd9001, %rd9000, %rd8858;
	add.s64 	%rd9002, %rd9001, %rd8997;
	ld.const.u64 	%rd9003, [%rd8844+32];
	add.s64 	%rd9004, %rd9002, %rd9003;
	add.s64 	%rd9005, %rd9004, %rd13809;
	add.s64 	%rd9006, %rd9005, %rd8869;
	and.b64  	%rd9007, %rd8980, %rd8943;
	or.b64  	%rd9008, %rd8980, %rd8943;
	and.b64  	%rd9009, %rd9008, %rd8906;
	or.b64  	%rd9010, %rd9009, %rd9007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6182,%dummy}, %rd8980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6183}, %rd8980;
	}
	shf.r.wrap.b32 	%r6184, %r6183, %r6182, 28;
	shf.r.wrap.b32 	%r6185, %r6182, %r6183, 28;
	mov.b64 	%rd9011, {%r6185, %r6184};
	shf.l.wrap.b32 	%r6186, %r6182, %r6183, 30;
	shf.l.wrap.b32 	%r6187, %r6183, %r6182, 30;
	mov.b64 	%rd9012, {%r6187, %r6186};
	xor.b64  	%rd9013, %rd9011, %rd9012;
	shf.l.wrap.b32 	%r6188, %r6182, %r6183, 25;
	shf.l.wrap.b32 	%r6189, %r6183, %r6182, 25;
	mov.b64 	%rd9014, {%r6189, %r6188};
	xor.b64  	%rd9015, %rd9013, %rd9014;
	add.s64 	%rd9016, %rd9015, %rd9010;
	add.s64 	%rd9017, %rd9016, %rd9005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6190,%dummy}, %rd13810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6191}, %rd13810;
	}
	shf.r.wrap.b32 	%r6192, %r6191, %r6190, 19;
	shf.r.wrap.b32 	%r6193, %r6190, %r6191, 19;
	mov.b64 	%rd9018, {%r6193, %r6192};
	shf.l.wrap.b32 	%r6194, %r6190, %r6191, 3;
	shf.l.wrap.b32 	%r6195, %r6191, %r6190, 3;
	mov.b64 	%rd9019, {%r6195, %r6194};
	xor.b64  	%rd9020, %rd9018, %rd9019;
	shr.u64 	%rd9021, %rd13810, 6;
	xor.b64  	%rd9022, %rd9020, %rd9021;
	add.s64 	%rd9023, %rd13799, %rd13808;
	add.s64 	%rd9024, %rd9023, %rd9022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd13807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd13807;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 8;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 8;
	mov.b64 	%rd9025, {%r6199, %r6198};
	shf.r.wrap.b32 	%r6200, %r6197, %r6196, 1;
	shf.r.wrap.b32 	%r6201, %r6196, %r6197, 1;
	mov.b64 	%rd9026, {%r6201, %r6200};
	xor.b64  	%rd9027, %rd9026, %rd9025;
	shr.u64 	%rd9028, %rd13807, 7;
	xor.b64  	%rd9029, %rd9027, %rd9028;
	add.s64 	%rd13808, %rd9024, %rd9029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6202,%dummy}, %rd9006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6203}, %rd9006;
	}
	shf.r.wrap.b32 	%r6204, %r6203, %r6202, 14;
	shf.r.wrap.b32 	%r6205, %r6202, %r6203, 14;
	mov.b64 	%rd9030, {%r6205, %r6204};
	shf.r.wrap.b32 	%r6206, %r6203, %r6202, 18;
	shf.r.wrap.b32 	%r6207, %r6202, %r6203, 18;
	mov.b64 	%rd9031, {%r6207, %r6206};
	xor.b64  	%rd9032, %rd9030, %rd9031;
	shf.l.wrap.b32 	%r6208, %r6202, %r6203, 23;
	shf.l.wrap.b32 	%r6209, %r6203, %r6202, 23;
	mov.b64 	%rd9033, {%r6209, %r6208};
	xor.b64  	%rd9034, %rd9032, %rd9033;
	xor.b64  	%rd9035, %rd8969, %rd8932;
	and.b64  	%rd9036, %rd9006, %rd9035;
	xor.b64  	%rd9037, %rd9036, %rd8932;
	add.s64 	%rd9038, %rd9037, %rd8895;
	add.s64 	%rd9039, %rd9038, %rd9034;
	ld.const.u64 	%rd9040, [%rd8844+40];
	add.s64 	%rd9041, %rd9039, %rd9040;
	add.s64 	%rd9042, %rd9041, %rd13808;
	add.s64 	%rd9043, %rd9042, %rd8906;
	and.b64  	%rd9044, %rd9017, %rd8980;
	or.b64  	%rd9045, %rd9017, %rd8980;
	and.b64  	%rd9046, %rd9045, %rd8943;
	or.b64  	%rd9047, %rd9046, %rd9044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6210,%dummy}, %rd9017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6211}, %rd9017;
	}
	shf.r.wrap.b32 	%r6212, %r6211, %r6210, 28;
	shf.r.wrap.b32 	%r6213, %r6210, %r6211, 28;
	mov.b64 	%rd9048, {%r6213, %r6212};
	shf.l.wrap.b32 	%r6214, %r6210, %r6211, 30;
	shf.l.wrap.b32 	%r6215, %r6211, %r6210, 30;
	mov.b64 	%rd9049, {%r6215, %r6214};
	xor.b64  	%rd9050, %rd9048, %rd9049;
	shf.l.wrap.b32 	%r6216, %r6210, %r6211, 25;
	shf.l.wrap.b32 	%r6217, %r6211, %r6210, 25;
	mov.b64 	%rd9051, {%r6217, %r6216};
	xor.b64  	%rd9052, %rd9050, %rd9051;
	add.s64 	%rd9053, %rd9052, %rd9047;
	add.s64 	%rd9054, %rd9053, %rd9042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6218,%dummy}, %rd13809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6219}, %rd13809;
	}
	shf.r.wrap.b32 	%r6220, %r6219, %r6218, 19;
	shf.r.wrap.b32 	%r6221, %r6218, %r6219, 19;
	mov.b64 	%rd9055, {%r6221, %r6220};
	shf.l.wrap.b32 	%r6222, %r6218, %r6219, 3;
	shf.l.wrap.b32 	%r6223, %r6219, %r6218, 3;
	mov.b64 	%rd9056, {%r6223, %r6222};
	xor.b64  	%rd9057, %rd9055, %rd9056;
	shr.u64 	%rd9058, %rd13809, 6;
	xor.b64  	%rd9059, %rd9057, %rd9058;
	add.s64 	%rd9060, %rd13798, %rd13807;
	add.s64 	%rd9061, %rd9060, %rd9059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6224,%dummy}, %rd13806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6225}, %rd13806;
	}
	shf.r.wrap.b32 	%r6226, %r6225, %r6224, 8;
	shf.r.wrap.b32 	%r6227, %r6224, %r6225, 8;
	mov.b64 	%rd9062, {%r6227, %r6226};
	shf.r.wrap.b32 	%r6228, %r6225, %r6224, 1;
	shf.r.wrap.b32 	%r6229, %r6224, %r6225, 1;
	mov.b64 	%rd9063, {%r6229, %r6228};
	xor.b64  	%rd9064, %rd9063, %rd9062;
	shr.u64 	%rd9065, %rd13806, 7;
	xor.b64  	%rd9066, %rd9064, %rd9065;
	add.s64 	%rd13807, %rd9061, %rd9066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6230,%dummy}, %rd9043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6231}, %rd9043;
	}
	shf.r.wrap.b32 	%r6232, %r6231, %r6230, 14;
	shf.r.wrap.b32 	%r6233, %r6230, %r6231, 14;
	mov.b64 	%rd9067, {%r6233, %r6232};
	shf.r.wrap.b32 	%r6234, %r6231, %r6230, 18;
	shf.r.wrap.b32 	%r6235, %r6230, %r6231, 18;
	mov.b64 	%rd9068, {%r6235, %r6234};
	xor.b64  	%rd9069, %rd9067, %rd9068;
	shf.l.wrap.b32 	%r6236, %r6230, %r6231, 23;
	shf.l.wrap.b32 	%r6237, %r6231, %r6230, 23;
	mov.b64 	%rd9070, {%r6237, %r6236};
	xor.b64  	%rd9071, %rd9069, %rd9070;
	xor.b64  	%rd9072, %rd9006, %rd8969;
	and.b64  	%rd9073, %rd9043, %rd9072;
	xor.b64  	%rd9074, %rd9073, %rd8969;
	add.s64 	%rd9075, %rd9074, %rd8932;
	add.s64 	%rd9076, %rd9075, %rd9071;
	ld.const.u64 	%rd9077, [%rd8844+48];
	add.s64 	%rd9078, %rd9076, %rd9077;
	add.s64 	%rd9079, %rd9078, %rd13807;
	add.s64 	%rd9080, %rd9079, %rd8943;
	and.b64  	%rd9081, %rd9054, %rd9017;
	or.b64  	%rd9082, %rd9054, %rd9017;
	and.b64  	%rd9083, %rd9082, %rd8980;
	or.b64  	%rd9084, %rd9083, %rd9081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6238,%dummy}, %rd9054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6239}, %rd9054;
	}
	shf.r.wrap.b32 	%r6240, %r6239, %r6238, 28;
	shf.r.wrap.b32 	%r6241, %r6238, %r6239, 28;
	mov.b64 	%rd9085, {%r6241, %r6240};
	shf.l.wrap.b32 	%r6242, %r6238, %r6239, 30;
	shf.l.wrap.b32 	%r6243, %r6239, %r6238, 30;
	mov.b64 	%rd9086, {%r6243, %r6242};
	xor.b64  	%rd9087, %rd9085, %rd9086;
	shf.l.wrap.b32 	%r6244, %r6238, %r6239, 25;
	shf.l.wrap.b32 	%r6245, %r6239, %r6238, 25;
	mov.b64 	%rd9088, {%r6245, %r6244};
	xor.b64  	%rd9089, %rd9087, %rd9088;
	add.s64 	%rd9090, %rd9089, %rd9084;
	add.s64 	%rd9091, %rd9090, %rd9079;
	add.s64 	%rd9092, %rd13813, %rd13806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6246,%dummy}, %rd13808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6247}, %rd13808;
	}
	shf.r.wrap.b32 	%r6248, %r6247, %r6246, 19;
	shf.r.wrap.b32 	%r6249, %r6246, %r6247, 19;
	mov.b64 	%rd9093, {%r6249, %r6248};
	shf.l.wrap.b32 	%r6250, %r6246, %r6247, 3;
	shf.l.wrap.b32 	%r6251, %r6247, %r6246, 3;
	mov.b64 	%rd9094, {%r6251, %r6250};
	xor.b64  	%rd9095, %rd9093, %rd9094;
	shr.u64 	%rd9096, %rd13808, 6;
	xor.b64  	%rd9097, %rd9095, %rd9096;
	add.s64 	%rd9098, %rd9092, %rd9097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6252,%dummy}, %rd13805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6253}, %rd13805;
	}
	shf.r.wrap.b32 	%r6254, %r6253, %r6252, 8;
	shf.r.wrap.b32 	%r6255, %r6252, %r6253, 8;
	mov.b64 	%rd9099, {%r6255, %r6254};
	shf.r.wrap.b32 	%r6256, %r6253, %r6252, 1;
	shf.r.wrap.b32 	%r6257, %r6252, %r6253, 1;
	mov.b64 	%rd9100, {%r6257, %r6256};
	xor.b64  	%rd9101, %rd9100, %rd9099;
	shr.u64 	%rd9102, %rd13805, 7;
	xor.b64  	%rd9103, %rd9101, %rd9102;
	add.s64 	%rd13806, %rd9098, %rd9103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6258,%dummy}, %rd9080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6259}, %rd9080;
	}
	shf.r.wrap.b32 	%r6260, %r6259, %r6258, 14;
	shf.r.wrap.b32 	%r6261, %r6258, %r6259, 14;
	mov.b64 	%rd9104, {%r6261, %r6260};
	shf.r.wrap.b32 	%r6262, %r6259, %r6258, 18;
	shf.r.wrap.b32 	%r6263, %r6258, %r6259, 18;
	mov.b64 	%rd9105, {%r6263, %r6262};
	xor.b64  	%rd9106, %rd9104, %rd9105;
	shf.l.wrap.b32 	%r6264, %r6258, %r6259, 23;
	shf.l.wrap.b32 	%r6265, %r6259, %r6258, 23;
	mov.b64 	%rd9107, {%r6265, %r6264};
	xor.b64  	%rd9108, %rd9106, %rd9107;
	xor.b64  	%rd9109, %rd9043, %rd9006;
	and.b64  	%rd9110, %rd9080, %rd9109;
	xor.b64  	%rd9111, %rd9110, %rd9006;
	add.s64 	%rd9112, %rd9111, %rd8969;
	add.s64 	%rd9113, %rd9112, %rd9108;
	ld.const.u64 	%rd9114, [%rd8844+56];
	add.s64 	%rd9115, %rd9113, %rd9114;
	add.s64 	%rd9116, %rd9115, %rd13806;
	add.s64 	%rd9117, %rd9116, %rd8980;
	and.b64  	%rd9118, %rd9091, %rd9054;
	or.b64  	%rd9119, %rd9091, %rd9054;
	and.b64  	%rd9120, %rd9119, %rd9017;
	or.b64  	%rd9121, %rd9120, %rd9118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6266,%dummy}, %rd9091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6267}, %rd9091;
	}
	shf.r.wrap.b32 	%r6268, %r6267, %r6266, 28;
	shf.r.wrap.b32 	%r6269, %r6266, %r6267, 28;
	mov.b64 	%rd9122, {%r6269, %r6268};
	shf.l.wrap.b32 	%r6270, %r6266, %r6267, 30;
	shf.l.wrap.b32 	%r6271, %r6267, %r6266, 30;
	mov.b64 	%rd9123, {%r6271, %r6270};
	xor.b64  	%rd9124, %rd9122, %rd9123;
	shf.l.wrap.b32 	%r6272, %r6266, %r6267, 25;
	shf.l.wrap.b32 	%r6273, %r6267, %r6266, 25;
	mov.b64 	%rd9125, {%r6273, %r6272};
	xor.b64  	%rd9126, %rd9124, %rd9125;
	add.s64 	%rd9127, %rd9126, %rd9121;
	add.s64 	%rd9128, %rd9127, %rd9116;
	add.s64 	%rd9129, %rd13812, %rd13805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6274,%dummy}, %rd13807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6275}, %rd13807;
	}
	shf.r.wrap.b32 	%r6276, %r6275, %r6274, 19;
	shf.r.wrap.b32 	%r6277, %r6274, %r6275, 19;
	mov.b64 	%rd9130, {%r6277, %r6276};
	shf.l.wrap.b32 	%r6278, %r6274, %r6275, 3;
	shf.l.wrap.b32 	%r6279, %r6275, %r6274, 3;
	mov.b64 	%rd9131, {%r6279, %r6278};
	xor.b64  	%rd9132, %rd9130, %rd9131;
	shr.u64 	%rd9133, %rd13807, 6;
	xor.b64  	%rd9134, %rd9132, %rd9133;
	add.s64 	%rd9135, %rd9129, %rd9134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6280,%dummy}, %rd13804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6281}, %rd13804;
	}
	shf.r.wrap.b32 	%r6282, %r6281, %r6280, 8;
	shf.r.wrap.b32 	%r6283, %r6280, %r6281, 8;
	mov.b64 	%rd9136, {%r6283, %r6282};
	shf.r.wrap.b32 	%r6284, %r6281, %r6280, 1;
	shf.r.wrap.b32 	%r6285, %r6280, %r6281, 1;
	mov.b64 	%rd9137, {%r6285, %r6284};
	xor.b64  	%rd9138, %rd9137, %rd9136;
	shr.u64 	%rd9139, %rd13804, 7;
	xor.b64  	%rd9140, %rd9138, %rd9139;
	add.s64 	%rd13805, %rd9135, %rd9140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6286,%dummy}, %rd9117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6287}, %rd9117;
	}
	shf.r.wrap.b32 	%r6288, %r6287, %r6286, 14;
	shf.r.wrap.b32 	%r6289, %r6286, %r6287, 14;
	mov.b64 	%rd9141, {%r6289, %r6288};
	shf.r.wrap.b32 	%r6290, %r6287, %r6286, 18;
	shf.r.wrap.b32 	%r6291, %r6286, %r6287, 18;
	mov.b64 	%rd9142, {%r6291, %r6290};
	xor.b64  	%rd9143, %rd9141, %rd9142;
	shf.l.wrap.b32 	%r6292, %r6286, %r6287, 23;
	shf.l.wrap.b32 	%r6293, %r6287, %r6286, 23;
	mov.b64 	%rd9144, {%r6293, %r6292};
	xor.b64  	%rd9145, %rd9143, %rd9144;
	xor.b64  	%rd9146, %rd9080, %rd9043;
	and.b64  	%rd9147, %rd9117, %rd9146;
	xor.b64  	%rd9148, %rd9147, %rd9043;
	add.s64 	%rd9149, %rd9148, %rd9006;
	add.s64 	%rd9150, %rd9149, %rd9145;
	ld.const.u64 	%rd9151, [%rd8844+64];
	add.s64 	%rd9152, %rd9150, %rd9151;
	add.s64 	%rd9153, %rd9152, %rd13805;
	add.s64 	%rd9154, %rd9153, %rd9017;
	and.b64  	%rd9155, %rd9128, %rd9091;
	or.b64  	%rd9156, %rd9128, %rd9091;
	and.b64  	%rd9157, %rd9156, %rd9054;
	or.b64  	%rd9158, %rd9157, %rd9155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6294,%dummy}, %rd9128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6295}, %rd9128;
	}
	shf.r.wrap.b32 	%r6296, %r6295, %r6294, 28;
	shf.r.wrap.b32 	%r6297, %r6294, %r6295, 28;
	mov.b64 	%rd9159, {%r6297, %r6296};
	shf.l.wrap.b32 	%r6298, %r6294, %r6295, 30;
	shf.l.wrap.b32 	%r6299, %r6295, %r6294, 30;
	mov.b64 	%rd9160, {%r6299, %r6298};
	xor.b64  	%rd9161, %rd9159, %rd9160;
	shf.l.wrap.b32 	%r6300, %r6294, %r6295, 25;
	shf.l.wrap.b32 	%r6301, %r6295, %r6294, 25;
	mov.b64 	%rd9162, {%r6301, %r6300};
	xor.b64  	%rd9163, %rd9161, %rd9162;
	add.s64 	%rd9164, %rd9163, %rd9158;
	add.s64 	%rd9165, %rd9164, %rd9153;
	add.s64 	%rd9166, %rd13811, %rd13804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6302,%dummy}, %rd13806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6303}, %rd13806;
	}
	shf.r.wrap.b32 	%r6304, %r6303, %r6302, 19;
	shf.r.wrap.b32 	%r6305, %r6302, %r6303, 19;
	mov.b64 	%rd9167, {%r6305, %r6304};
	shf.l.wrap.b32 	%r6306, %r6302, %r6303, 3;
	shf.l.wrap.b32 	%r6307, %r6303, %r6302, 3;
	mov.b64 	%rd9168, {%r6307, %r6306};
	xor.b64  	%rd9169, %rd9167, %rd9168;
	shr.u64 	%rd9170, %rd13806, 6;
	xor.b64  	%rd9171, %rd9169, %rd9170;
	add.s64 	%rd9172, %rd9166, %rd9171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6308,%dummy}, %rd13803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6309}, %rd13803;
	}
	shf.r.wrap.b32 	%r6310, %r6309, %r6308, 8;
	shf.r.wrap.b32 	%r6311, %r6308, %r6309, 8;
	mov.b64 	%rd9173, {%r6311, %r6310};
	shf.r.wrap.b32 	%r6312, %r6309, %r6308, 1;
	shf.r.wrap.b32 	%r6313, %r6308, %r6309, 1;
	mov.b64 	%rd9174, {%r6313, %r6312};
	xor.b64  	%rd9175, %rd9174, %rd9173;
	shr.u64 	%rd9176, %rd13803, 7;
	xor.b64  	%rd9177, %rd9175, %rd9176;
	add.s64 	%rd13804, %rd9172, %rd9177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6314,%dummy}, %rd9154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6315}, %rd9154;
	}
	shf.r.wrap.b32 	%r6316, %r6315, %r6314, 14;
	shf.r.wrap.b32 	%r6317, %r6314, %r6315, 14;
	mov.b64 	%rd9178, {%r6317, %r6316};
	shf.r.wrap.b32 	%r6318, %r6315, %r6314, 18;
	shf.r.wrap.b32 	%r6319, %r6314, %r6315, 18;
	mov.b64 	%rd9179, {%r6319, %r6318};
	xor.b64  	%rd9180, %rd9178, %rd9179;
	shf.l.wrap.b32 	%r6320, %r6314, %r6315, 23;
	shf.l.wrap.b32 	%r6321, %r6315, %r6314, 23;
	mov.b64 	%rd9181, {%r6321, %r6320};
	xor.b64  	%rd9182, %rd9180, %rd9181;
	xor.b64  	%rd9183, %rd9117, %rd9080;
	and.b64  	%rd9184, %rd9154, %rd9183;
	xor.b64  	%rd9185, %rd9184, %rd9080;
	add.s64 	%rd9186, %rd9185, %rd9043;
	add.s64 	%rd9187, %rd9186, %rd9182;
	ld.const.u64 	%rd9188, [%rd8844+72];
	add.s64 	%rd9189, %rd9187, %rd9188;
	add.s64 	%rd9190, %rd9189, %rd13804;
	add.s64 	%rd9191, %rd9190, %rd9054;
	and.b64  	%rd9192, %rd9165, %rd9128;
	or.b64  	%rd9193, %rd9165, %rd9128;
	and.b64  	%rd9194, %rd9193, %rd9091;
	or.b64  	%rd9195, %rd9194, %rd9192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6322,%dummy}, %rd9165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6323}, %rd9165;
	}
	shf.r.wrap.b32 	%r6324, %r6323, %r6322, 28;
	shf.r.wrap.b32 	%r6325, %r6322, %r6323, 28;
	mov.b64 	%rd9196, {%r6325, %r6324};
	shf.l.wrap.b32 	%r6326, %r6322, %r6323, 30;
	shf.l.wrap.b32 	%r6327, %r6323, %r6322, 30;
	mov.b64 	%rd9197, {%r6327, %r6326};
	xor.b64  	%rd9198, %rd9196, %rd9197;
	shf.l.wrap.b32 	%r6328, %r6322, %r6323, 25;
	shf.l.wrap.b32 	%r6329, %r6323, %r6322, 25;
	mov.b64 	%rd9199, {%r6329, %r6328};
	xor.b64  	%rd9200, %rd9198, %rd9199;
	add.s64 	%rd9201, %rd9200, %rd9195;
	add.s64 	%rd9202, %rd9201, %rd9190;
	add.s64 	%rd9203, %rd13810, %rd13803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6330,%dummy}, %rd13805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6331}, %rd13805;
	}
	shf.r.wrap.b32 	%r6332, %r6331, %r6330, 19;
	shf.r.wrap.b32 	%r6333, %r6330, %r6331, 19;
	mov.b64 	%rd9204, {%r6333, %r6332};
	shf.l.wrap.b32 	%r6334, %r6330, %r6331, 3;
	shf.l.wrap.b32 	%r6335, %r6331, %r6330, 3;
	mov.b64 	%rd9205, {%r6335, %r6334};
	xor.b64  	%rd9206, %rd9204, %rd9205;
	shr.u64 	%rd9207, %rd13805, 6;
	xor.b64  	%rd9208, %rd9206, %rd9207;
	add.s64 	%rd9209, %rd9203, %rd9208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6336,%dummy}, %rd13802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd13802;
	}
	shf.r.wrap.b32 	%r6338, %r6337, %r6336, 8;
	shf.r.wrap.b32 	%r6339, %r6336, %r6337, 8;
	mov.b64 	%rd9210, {%r6339, %r6338};
	shf.r.wrap.b32 	%r6340, %r6337, %r6336, 1;
	shf.r.wrap.b32 	%r6341, %r6336, %r6337, 1;
	mov.b64 	%rd9211, {%r6341, %r6340};
	xor.b64  	%rd9212, %rd9211, %rd9210;
	shr.u64 	%rd9213, %rd13802, 7;
	xor.b64  	%rd9214, %rd9212, %rd9213;
	add.s64 	%rd13803, %rd9209, %rd9214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6342,%dummy}, %rd9191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6343}, %rd9191;
	}
	shf.r.wrap.b32 	%r6344, %r6343, %r6342, 14;
	shf.r.wrap.b32 	%r6345, %r6342, %r6343, 14;
	mov.b64 	%rd9215, {%r6345, %r6344};
	shf.r.wrap.b32 	%r6346, %r6343, %r6342, 18;
	shf.r.wrap.b32 	%r6347, %r6342, %r6343, 18;
	mov.b64 	%rd9216, {%r6347, %r6346};
	xor.b64  	%rd9217, %rd9215, %rd9216;
	shf.l.wrap.b32 	%r6348, %r6342, %r6343, 23;
	shf.l.wrap.b32 	%r6349, %r6343, %r6342, 23;
	mov.b64 	%rd9218, {%r6349, %r6348};
	xor.b64  	%rd9219, %rd9217, %rd9218;
	xor.b64  	%rd9220, %rd9154, %rd9117;
	and.b64  	%rd9221, %rd9191, %rd9220;
	xor.b64  	%rd9222, %rd9221, %rd9117;
	add.s64 	%rd9223, %rd9222, %rd9080;
	add.s64 	%rd9224, %rd9223, %rd9219;
	ld.const.u64 	%rd9225, [%rd8844+80];
	add.s64 	%rd9226, %rd9224, %rd9225;
	add.s64 	%rd9227, %rd9226, %rd13803;
	add.s64 	%rd9228, %rd9227, %rd9091;
	and.b64  	%rd9229, %rd9202, %rd9165;
	or.b64  	%rd9230, %rd9202, %rd9165;
	and.b64  	%rd9231, %rd9230, %rd9128;
	or.b64  	%rd9232, %rd9231, %rd9229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6350,%dummy}, %rd9202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6351}, %rd9202;
	}
	shf.r.wrap.b32 	%r6352, %r6351, %r6350, 28;
	shf.r.wrap.b32 	%r6353, %r6350, %r6351, 28;
	mov.b64 	%rd9233, {%r6353, %r6352};
	shf.l.wrap.b32 	%r6354, %r6350, %r6351, 30;
	shf.l.wrap.b32 	%r6355, %r6351, %r6350, 30;
	mov.b64 	%rd9234, {%r6355, %r6354};
	xor.b64  	%rd9235, %rd9233, %rd9234;
	shf.l.wrap.b32 	%r6356, %r6350, %r6351, 25;
	shf.l.wrap.b32 	%r6357, %r6351, %r6350, 25;
	mov.b64 	%rd9236, {%r6357, %r6356};
	xor.b64  	%rd9237, %rd9235, %rd9236;
	add.s64 	%rd9238, %rd9237, %rd9232;
	add.s64 	%rd9239, %rd9238, %rd9227;
	add.s64 	%rd9240, %rd13809, %rd13802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6358,%dummy}, %rd13804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6359}, %rd13804;
	}
	shf.r.wrap.b32 	%r6360, %r6359, %r6358, 19;
	shf.r.wrap.b32 	%r6361, %r6358, %r6359, 19;
	mov.b64 	%rd9241, {%r6361, %r6360};
	shf.l.wrap.b32 	%r6362, %r6358, %r6359, 3;
	shf.l.wrap.b32 	%r6363, %r6359, %r6358, 3;
	mov.b64 	%rd9242, {%r6363, %r6362};
	xor.b64  	%rd9243, %rd9241, %rd9242;
	shr.u64 	%rd9244, %rd13804, 6;
	xor.b64  	%rd9245, %rd9243, %rd9244;
	add.s64 	%rd9246, %rd9240, %rd9245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6364,%dummy}, %rd13801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6365}, %rd13801;
	}
	shf.r.wrap.b32 	%r6366, %r6365, %r6364, 8;
	shf.r.wrap.b32 	%r6367, %r6364, %r6365, 8;
	mov.b64 	%rd9247, {%r6367, %r6366};
	shf.r.wrap.b32 	%r6368, %r6365, %r6364, 1;
	shf.r.wrap.b32 	%r6369, %r6364, %r6365, 1;
	mov.b64 	%rd9248, {%r6369, %r6368};
	xor.b64  	%rd9249, %rd9248, %rd9247;
	shr.u64 	%rd9250, %rd13801, 7;
	xor.b64  	%rd9251, %rd9249, %rd9250;
	add.s64 	%rd13802, %rd9246, %rd9251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd9228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6371}, %rd9228;
	}
	shf.r.wrap.b32 	%r6372, %r6371, %r6370, 14;
	shf.r.wrap.b32 	%r6373, %r6370, %r6371, 14;
	mov.b64 	%rd9252, {%r6373, %r6372};
	shf.r.wrap.b32 	%r6374, %r6371, %r6370, 18;
	shf.r.wrap.b32 	%r6375, %r6370, %r6371, 18;
	mov.b64 	%rd9253, {%r6375, %r6374};
	xor.b64  	%rd9254, %rd9252, %rd9253;
	shf.l.wrap.b32 	%r6376, %r6370, %r6371, 23;
	shf.l.wrap.b32 	%r6377, %r6371, %r6370, 23;
	mov.b64 	%rd9255, {%r6377, %r6376};
	xor.b64  	%rd9256, %rd9254, %rd9255;
	xor.b64  	%rd9257, %rd9191, %rd9154;
	and.b64  	%rd9258, %rd9228, %rd9257;
	xor.b64  	%rd9259, %rd9258, %rd9154;
	add.s64 	%rd9260, %rd9259, %rd9117;
	add.s64 	%rd9261, %rd9260, %rd9256;
	ld.const.u64 	%rd9262, [%rd8844+88];
	add.s64 	%rd9263, %rd9261, %rd9262;
	add.s64 	%rd9264, %rd9263, %rd13802;
	add.s64 	%rd9265, %rd9264, %rd9128;
	and.b64  	%rd9266, %rd9239, %rd9202;
	or.b64  	%rd9267, %rd9239, %rd9202;
	and.b64  	%rd9268, %rd9267, %rd9165;
	or.b64  	%rd9269, %rd9268, %rd9266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd9239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6379}, %rd9239;
	}
	shf.r.wrap.b32 	%r6380, %r6379, %r6378, 28;
	shf.r.wrap.b32 	%r6381, %r6378, %r6379, 28;
	mov.b64 	%rd9270, {%r6381, %r6380};
	shf.l.wrap.b32 	%r6382, %r6378, %r6379, 30;
	shf.l.wrap.b32 	%r6383, %r6379, %r6378, 30;
	mov.b64 	%rd9271, {%r6383, %r6382};
	xor.b64  	%rd9272, %rd9270, %rd9271;
	shf.l.wrap.b32 	%r6384, %r6378, %r6379, 25;
	shf.l.wrap.b32 	%r6385, %r6379, %r6378, 25;
	mov.b64 	%rd9273, {%r6385, %r6384};
	xor.b64  	%rd9274, %rd9272, %rd9273;
	add.s64 	%rd9275, %rd9274, %rd9269;
	add.s64 	%rd9276, %rd9275, %rd9264;
	add.s64 	%rd9277, %rd13808, %rd13801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd13803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6387}, %rd13803;
	}
	shf.r.wrap.b32 	%r6388, %r6387, %r6386, 19;
	shf.r.wrap.b32 	%r6389, %r6386, %r6387, 19;
	mov.b64 	%rd9278, {%r6389, %r6388};
	shf.l.wrap.b32 	%r6390, %r6386, %r6387, 3;
	shf.l.wrap.b32 	%r6391, %r6387, %r6386, 3;
	mov.b64 	%rd9279, {%r6391, %r6390};
	xor.b64  	%rd9280, %rd9278, %rd9279;
	shr.u64 	%rd9281, %rd13803, 6;
	xor.b64  	%rd9282, %rd9280, %rd9281;
	add.s64 	%rd9283, %rd9277, %rd9282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6392,%dummy}, %rd13800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6393}, %rd13800;
	}
	shf.r.wrap.b32 	%r6394, %r6393, %r6392, 8;
	shf.r.wrap.b32 	%r6395, %r6392, %r6393, 8;
	mov.b64 	%rd9284, {%r6395, %r6394};
	shf.r.wrap.b32 	%r6396, %r6393, %r6392, 1;
	shf.r.wrap.b32 	%r6397, %r6392, %r6393, 1;
	mov.b64 	%rd9285, {%r6397, %r6396};
	xor.b64  	%rd9286, %rd9285, %rd9284;
	shr.u64 	%rd9287, %rd13800, 7;
	xor.b64  	%rd9288, %rd9286, %rd9287;
	add.s64 	%rd13801, %rd9283, %rd9288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6398,%dummy}, %rd9265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6399}, %rd9265;
	}
	shf.r.wrap.b32 	%r6400, %r6399, %r6398, 14;
	shf.r.wrap.b32 	%r6401, %r6398, %r6399, 14;
	mov.b64 	%rd9289, {%r6401, %r6400};
	shf.r.wrap.b32 	%r6402, %r6399, %r6398, 18;
	shf.r.wrap.b32 	%r6403, %r6398, %r6399, 18;
	mov.b64 	%rd9290, {%r6403, %r6402};
	xor.b64  	%rd9291, %rd9289, %rd9290;
	shf.l.wrap.b32 	%r6404, %r6398, %r6399, 23;
	shf.l.wrap.b32 	%r6405, %r6399, %r6398, 23;
	mov.b64 	%rd9292, {%r6405, %r6404};
	xor.b64  	%rd9293, %rd9291, %rd9292;
	xor.b64  	%rd9294, %rd9228, %rd9191;
	and.b64  	%rd9295, %rd9265, %rd9294;
	xor.b64  	%rd9296, %rd9295, %rd9191;
	add.s64 	%rd9297, %rd9296, %rd9154;
	add.s64 	%rd9298, %rd9297, %rd9293;
	ld.const.u64 	%rd9299, [%rd8844+96];
	add.s64 	%rd9300, %rd9298, %rd9299;
	add.s64 	%rd9301, %rd9300, %rd13801;
	add.s64 	%rd13821, %rd9301, %rd9165;
	and.b64  	%rd9302, %rd9276, %rd9239;
	or.b64  	%rd9303, %rd9276, %rd9239;
	and.b64  	%rd9304, %rd9303, %rd9202;
	or.b64  	%rd9305, %rd9304, %rd9302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6406,%dummy}, %rd9276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6407}, %rd9276;
	}
	shf.r.wrap.b32 	%r6408, %r6407, %r6406, 28;
	shf.r.wrap.b32 	%r6409, %r6406, %r6407, 28;
	mov.b64 	%rd9306, {%r6409, %r6408};
	shf.l.wrap.b32 	%r6410, %r6406, %r6407, 30;
	shf.l.wrap.b32 	%r6411, %r6407, %r6406, 30;
	mov.b64 	%rd9307, {%r6411, %r6410};
	xor.b64  	%rd9308, %rd9306, %rd9307;
	shf.l.wrap.b32 	%r6412, %r6406, %r6407, 25;
	shf.l.wrap.b32 	%r6413, %r6407, %r6406, 25;
	mov.b64 	%rd9309, {%r6413, %r6412};
	xor.b64  	%rd9310, %rd9308, %rd9309;
	add.s64 	%rd9311, %rd9310, %rd9305;
	add.s64 	%rd13817, %rd9311, %rd9301;
	add.s64 	%rd9312, %rd13807, %rd13800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6414,%dummy}, %rd13802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6415}, %rd13802;
	}
	shf.r.wrap.b32 	%r6416, %r6415, %r6414, 19;
	shf.r.wrap.b32 	%r6417, %r6414, %r6415, 19;
	mov.b64 	%rd9313, {%r6417, %r6416};
	shf.l.wrap.b32 	%r6418, %r6414, %r6415, 3;
	shf.l.wrap.b32 	%r6419, %r6415, %r6414, 3;
	mov.b64 	%rd9314, {%r6419, %r6418};
	xor.b64  	%rd9315, %rd9313, %rd9314;
	shr.u64 	%rd9316, %rd13802, 6;
	xor.b64  	%rd9317, %rd9315, %rd9316;
	add.s64 	%rd9318, %rd9312, %rd9317;
	shf.r.wrap.b32 	%r6420, %r6050, %r6051, 8;
	shf.r.wrap.b32 	%r6421, %r6051, %r6050, 8;
	mov.b64 	%rd9319, {%r6421, %r6420};
	shf.r.wrap.b32 	%r6422, %r6050, %r6051, 1;
	shf.r.wrap.b32 	%r6423, %r6051, %r6050, 1;
	mov.b64 	%rd9320, {%r6423, %r6422};
	xor.b64  	%rd9321, %rd9320, %rd9319;
	shr.u64 	%rd9322, %rd13799, 7;
	xor.b64  	%rd9323, %rd9321, %rd9322;
	add.s64 	%rd13800, %rd9318, %rd9323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6424,%dummy}, %rd13821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6425}, %rd13821;
	}
	shf.r.wrap.b32 	%r6426, %r6425, %r6424, 14;
	shf.r.wrap.b32 	%r6427, %r6424, %r6425, 14;
	mov.b64 	%rd9324, {%r6427, %r6426};
	shf.r.wrap.b32 	%r6428, %r6425, %r6424, 18;
	shf.r.wrap.b32 	%r6429, %r6424, %r6425, 18;
	mov.b64 	%rd9325, {%r6429, %r6428};
	xor.b64  	%rd9326, %rd9324, %rd9325;
	shf.l.wrap.b32 	%r6430, %r6424, %r6425, 23;
	shf.l.wrap.b32 	%r6431, %r6425, %r6424, 23;
	mov.b64 	%rd9327, {%r6431, %r6430};
	xor.b64  	%rd9328, %rd9326, %rd9327;
	xor.b64  	%rd9329, %rd9265, %rd9228;
	and.b64  	%rd9330, %rd13821, %rd9329;
	xor.b64  	%rd9331, %rd9330, %rd9228;
	add.s64 	%rd9332, %rd9331, %rd9191;
	add.s64 	%rd9333, %rd9332, %rd9328;
	ld.const.u64 	%rd9334, [%rd8844+104];
	add.s64 	%rd9335, %rd9333, %rd9334;
	add.s64 	%rd9336, %rd9335, %rd13800;
	add.s64 	%rd13820, %rd9336, %rd9202;
	and.b64  	%rd9337, %rd13817, %rd9276;
	or.b64  	%rd9338, %rd13817, %rd9276;
	and.b64  	%rd9339, %rd9338, %rd9239;
	or.b64  	%rd9340, %rd9339, %rd9337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6432,%dummy}, %rd13817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6433}, %rd13817;
	}
	shf.r.wrap.b32 	%r6434, %r6433, %r6432, 28;
	shf.r.wrap.b32 	%r6435, %r6432, %r6433, 28;
	mov.b64 	%rd9341, {%r6435, %r6434};
	shf.l.wrap.b32 	%r6436, %r6432, %r6433, 30;
	shf.l.wrap.b32 	%r6437, %r6433, %r6432, 30;
	mov.b64 	%rd9342, {%r6437, %r6436};
	xor.b64  	%rd9343, %rd9341, %rd9342;
	shf.l.wrap.b32 	%r6438, %r6432, %r6433, 25;
	shf.l.wrap.b32 	%r6439, %r6433, %r6432, 25;
	mov.b64 	%rd9344, {%r6439, %r6438};
	xor.b64  	%rd9345, %rd9343, %rd9344;
	add.s64 	%rd9346, %rd9345, %rd9340;
	add.s64 	%rd13816, %rd9346, %rd9336;
	add.s64 	%rd9347, %rd13806, %rd13799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6440,%dummy}, %rd13801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6441}, %rd13801;
	}
	shf.r.wrap.b32 	%r6442, %r6441, %r6440, 19;
	shf.r.wrap.b32 	%r6443, %r6440, %r6441, 19;
	mov.b64 	%rd9348, {%r6443, %r6442};
	shf.l.wrap.b32 	%r6444, %r6440, %r6441, 3;
	shf.l.wrap.b32 	%r6445, %r6441, %r6440, 3;
	mov.b64 	%rd9349, {%r6445, %r6444};
	xor.b64  	%rd9350, %rd9348, %rd9349;
	shr.u64 	%rd9351, %rd13801, 6;
	xor.b64  	%rd9352, %rd9350, %rd9351;
	add.s64 	%rd9353, %rd9347, %rd9352;
	shf.r.wrap.b32 	%r6446, %r6078, %r6079, 8;
	shf.r.wrap.b32 	%r6447, %r6079, %r6078, 8;
	mov.b64 	%rd9354, {%r6447, %r6446};
	shf.r.wrap.b32 	%r6448, %r6078, %r6079, 1;
	shf.r.wrap.b32 	%r6449, %r6079, %r6078, 1;
	mov.b64 	%rd9355, {%r6449, %r6448};
	xor.b64  	%rd9356, %rd9355, %rd9354;
	shr.u64 	%rd9357, %rd13798, 7;
	xor.b64  	%rd9358, %rd9356, %rd9357;
	add.s64 	%rd13799, %rd9353, %rd9358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6450,%dummy}, %rd13820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6451}, %rd13820;
	}
	shf.r.wrap.b32 	%r6452, %r6451, %r6450, 14;
	shf.r.wrap.b32 	%r6453, %r6450, %r6451, 14;
	mov.b64 	%rd9359, {%r6453, %r6452};
	shf.r.wrap.b32 	%r6454, %r6451, %r6450, 18;
	shf.r.wrap.b32 	%r6455, %r6450, %r6451, 18;
	mov.b64 	%rd9360, {%r6455, %r6454};
	xor.b64  	%rd9361, %rd9359, %rd9360;
	shf.l.wrap.b32 	%r6456, %r6450, %r6451, 23;
	shf.l.wrap.b32 	%r6457, %r6451, %r6450, 23;
	mov.b64 	%rd9362, {%r6457, %r6456};
	xor.b64  	%rd9363, %rd9361, %rd9362;
	xor.b64  	%rd9364, %rd13821, %rd9265;
	and.b64  	%rd9365, %rd13820, %rd9364;
	xor.b64  	%rd9366, %rd9365, %rd9265;
	add.s64 	%rd9367, %rd9366, %rd9228;
	add.s64 	%rd9368, %rd9367, %rd9363;
	ld.const.u64 	%rd9369, [%rd8844+112];
	add.s64 	%rd9370, %rd9368, %rd9369;
	add.s64 	%rd9371, %rd9370, %rd13799;
	add.s64 	%rd13819, %rd9371, %rd9239;
	and.b64  	%rd9372, %rd13816, %rd13817;
	or.b64  	%rd9373, %rd13816, %rd13817;
	and.b64  	%rd9374, %rd9373, %rd9276;
	or.b64  	%rd9375, %rd9374, %rd9372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd13816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6459}, %rd13816;
	}
	shf.r.wrap.b32 	%r6460, %r6459, %r6458, 28;
	shf.r.wrap.b32 	%r6461, %r6458, %r6459, 28;
	mov.b64 	%rd9376, {%r6461, %r6460};
	shf.l.wrap.b32 	%r6462, %r6458, %r6459, 30;
	shf.l.wrap.b32 	%r6463, %r6459, %r6458, 30;
	mov.b64 	%rd9377, {%r6463, %r6462};
	xor.b64  	%rd9378, %rd9376, %rd9377;
	shf.l.wrap.b32 	%r6464, %r6458, %r6459, 25;
	shf.l.wrap.b32 	%r6465, %r6459, %r6458, 25;
	mov.b64 	%rd9379, {%r6465, %r6464};
	xor.b64  	%rd9380, %rd9378, %rd9379;
	add.s64 	%rd9381, %rd9380, %rd9375;
	add.s64 	%rd13815, %rd9381, %rd9371;
	add.s64 	%rd9382, %rd13805, %rd13798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd13800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6467}, %rd13800;
	}
	shf.r.wrap.b32 	%r6468, %r6467, %r6466, 19;
	shf.r.wrap.b32 	%r6469, %r6466, %r6467, 19;
	mov.b64 	%rd9383, {%r6469, %r6468};
	shf.l.wrap.b32 	%r6470, %r6466, %r6467, 3;
	shf.l.wrap.b32 	%r6471, %r6467, %r6466, 3;
	mov.b64 	%rd9384, {%r6471, %r6470};
	xor.b64  	%rd9385, %rd9383, %rd9384;
	shr.u64 	%rd9386, %rd13800, 6;
	xor.b64  	%rd9387, %rd9385, %rd9386;
	add.s64 	%rd9388, %rd9382, %rd9387;
	shf.r.wrap.b32 	%r6472, %r6107, %r6106, 1;
	shf.r.wrap.b32 	%r6473, %r6106, %r6107, 1;
	mov.b64 	%rd9389, {%r6473, %r6472};
	shf.r.wrap.b32 	%r6474, %r6107, %r6106, 8;
	shf.r.wrap.b32 	%r6475, %r6106, %r6107, 8;
	mov.b64 	%rd9390, {%r6475, %r6474};
	xor.b64  	%rd9391, %rd9389, %rd9390;
	shr.u64 	%rd9392, %rd13813, 7;
	xor.b64  	%rd9393, %rd9391, %rd9392;
	add.s64 	%rd13798, %rd9388, %rd9393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6476,%dummy}, %rd13819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6477}, %rd13819;
	}
	shf.r.wrap.b32 	%r6478, %r6477, %r6476, 14;
	shf.r.wrap.b32 	%r6479, %r6476, %r6477, 14;
	mov.b64 	%rd9394, {%r6479, %r6478};
	shf.r.wrap.b32 	%r6480, %r6477, %r6476, 18;
	shf.r.wrap.b32 	%r6481, %r6476, %r6477, 18;
	mov.b64 	%rd9395, {%r6481, %r6480};
	xor.b64  	%rd9396, %rd9394, %rd9395;
	shf.l.wrap.b32 	%r6482, %r6476, %r6477, 23;
	shf.l.wrap.b32 	%r6483, %r6477, %r6476, 23;
	mov.b64 	%rd9397, {%r6483, %r6482};
	xor.b64  	%rd9398, %rd9396, %rd9397;
	xor.b64  	%rd9399, %rd13820, %rd13821;
	and.b64  	%rd9400, %rd13819, %rd9399;
	xor.b64  	%rd9401, %rd9400, %rd13821;
	add.s64 	%rd9402, %rd9401, %rd9265;
	add.s64 	%rd9403, %rd9402, %rd9398;
	ld.const.u64 	%rd9404, [%rd8844+120];
	add.s64 	%rd9405, %rd9403, %rd9404;
	add.s64 	%rd9406, %rd9405, %rd13798;
	add.s64 	%rd13818, %rd9406, %rd9276;
	and.b64  	%rd9407, %rd13815, %rd13816;
	or.b64  	%rd9408, %rd13815, %rd13816;
	and.b64  	%rd9409, %rd9408, %rd13817;
	or.b64  	%rd9410, %rd9409, %rd9407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6484,%dummy}, %rd13815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6485}, %rd13815;
	}
	shf.r.wrap.b32 	%r6486, %r6485, %r6484, 28;
	shf.r.wrap.b32 	%r6487, %r6484, %r6485, 28;
	mov.b64 	%rd9411, {%r6487, %r6486};
	shf.l.wrap.b32 	%r6488, %r6484, %r6485, 30;
	shf.l.wrap.b32 	%r6489, %r6485, %r6484, 30;
	mov.b64 	%rd9412, {%r6489, %r6488};
	xor.b64  	%rd9413, %rd9411, %rd9412;
	shf.l.wrap.b32 	%r6490, %r6484, %r6485, 25;
	shf.l.wrap.b32 	%r6491, %r6485, %r6484, 25;
	mov.b64 	%rd9414, {%r6491, %r6490};
	xor.b64  	%rd9415, %rd9413, %rd9414;
	add.s64 	%rd9416, %rd9415, %rd9410;
	add.s64 	%rd13814, %rd9416, %rd9406;
	add.s32 	%r9748, %r9748, 16;
	setp.lt.u32 	%p92, %r9748, 80;
	@%p92 bra 	$L__BB0_126;

	setp.lt.u32 	%p93, %r9736, 128;
	add.s64 	%rd13797, %rd13797, %rd13814;
	mov.u64 	%rd13823, 0;
	st.local.u64 	[%rd2+-72], %rd13797;
	add.s64 	%rd13796, %rd13796, %rd13815;
	st.local.u64 	[%rd2+-64], %rd13796;
	add.s64 	%rd13795, %rd13795, %rd13816;
	st.local.u64 	[%rd2+-56], %rd13795;
	add.s64 	%rd13794, %rd13794, %rd13817;
	st.local.u64 	[%rd2+-48], %rd13794;
	add.s64 	%rd13793, %rd13793, %rd13818;
	st.local.u64 	[%rd2+-40], %rd13793;
	add.s64 	%rd13792, %rd13792, %rd13819;
	st.local.u64 	[%rd2+-32], %rd13792;
	add.s64 	%rd13791, %rd13791, %rd13820;
	st.local.u64 	[%rd2+-24], %rd13791;
	add.s64 	%rd13790, %rd13790, %rd13821;
	st.local.u64 	[%rd2+-16], %rd13790;
	st.local.u64 	[%rd2], %rd13823;
	st.local.u64 	[%rd2+8], %rd13823;
	st.local.u64 	[%rd2+16], %rd13823;
	st.local.u64 	[%rd2+24], %rd13823;
	st.local.u64 	[%rd2+32], %rd13823;
	st.local.u64 	[%rd2+40], %rd13823;
	st.local.u64 	[%rd2+48], %rd13823;
	st.local.u64 	[%rd2+56], %rd13823;
	st.local.u64 	[%rd2+64], %rd13823;
	st.local.u64 	[%rd2+72], %rd13823;
	st.local.u64 	[%rd2+80], %rd13823;
	st.local.u64 	[%rd2+88], %rd13823;
	st.local.u64 	[%rd2+96], %rd13823;
	st.local.u64 	[%rd2+104], %rd13823;
	st.local.u64 	[%rd2+112], %rd13823;
	st.local.u64 	[%rd2+120], %rd13823;
	mov.u32 	%r6492, 0;
	st.local.u32 	[%rd2+-4], %r6492;
	mov.u64 	%rd13837, %rd13823;
	@%p93 bra 	$L__BB0_129;

	mov.u64 	%rd13837, 128;
	st.local.u64 	[%rd2], %rd13837;

$L__BB0_129:
	cvt.u64.u32 	%rd9433, %r9746;
	shl.b64 	%rd9434, %rd9433, 56;
	shl.b64 	%rd9435, %rd9433, 40;
	and.b64  	%rd9436, %rd9435, 71776119061217280;
	or.b64  	%rd9437, %rd9436, %rd9434;
	shl.b64 	%rd9438, %rd9433, 24;
	and.b64  	%rd9439, %rd9438, 280375465082880;
	or.b64  	%rd9440, %rd9437, %rd9439;
	shl.b64 	%rd9441, %rd9433, 8;
	and.b64  	%rd9442, %rd9441, 1095216660480;
	or.b64  	%rd9443, %rd9440, %rd9442;
	st.local.u64 	[%rd2+120], %rd9443;
	mov.u64 	%rd13824, %rd13823;
	mov.u64 	%rd13825, %rd13823;
	mov.u64 	%rd13826, %rd13823;
	mov.u64 	%rd13827, %rd13823;
	mov.u64 	%rd13828, %rd13823;
	mov.u64 	%rd13829, %rd13823;
	mov.u64 	%rd13830, %rd13823;
	mov.u64 	%rd13831, %rd13823;
	mov.u64 	%rd13832, %rd13823;
	mov.u64 	%rd13833, %rd13823;
	mov.u64 	%rd13834, %rd13823;
	mov.u64 	%rd13835, %rd13823;
	mov.u64 	%rd13836, %rd13823;

$L__BB0_131:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6497, %temp}, %rd13837;
	}
	mov.u32 	%r6498, 291;
	mov.u32 	%r6499, 0;
	prmt.b32 	%r6500, %r6497, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6501}, %rd13837;
	}
	prmt.b32 	%r6502, %r6501, %r6499, %r6498;
	mov.b64 	%rd13861, {%r6502, %r6500};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6503, %temp}, %rd13836;
	}
	prmt.b32 	%r6504, %r6503, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6505}, %rd13836;
	}
	prmt.b32 	%r6506, %r6505, %r6499, %r6498;
	mov.b64 	%rd13860, {%r6506, %r6504};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6507, %temp}, %rd13835;
	}
	prmt.b32 	%r6508, %r6507, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6509}, %rd13835;
	}
	prmt.b32 	%r6510, %r6509, %r6499, %r6498;
	mov.b64 	%rd13859, {%r6510, %r6508};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6511, %temp}, %rd13834;
	}
	prmt.b32 	%r6512, %r6511, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6513}, %rd13834;
	}
	prmt.b32 	%r6514, %r6513, %r6499, %r6498;
	mov.b64 	%rd13858, {%r6514, %r6512};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6515, %temp}, %rd13833;
	}
	prmt.b32 	%r6516, %r6515, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6517}, %rd13833;
	}
	prmt.b32 	%r6518, %r6517, %r6499, %r6498;
	mov.b64 	%rd13857, {%r6518, %r6516};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6519, %temp}, %rd13832;
	}
	prmt.b32 	%r6520, %r6519, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6521}, %rd13832;
	}
	prmt.b32 	%r6522, %r6521, %r6499, %r6498;
	mov.b64 	%rd13856, {%r6522, %r6520};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6523, %temp}, %rd13831;
	}
	prmt.b32 	%r6524, %r6523, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6525}, %rd13831;
	}
	prmt.b32 	%r6526, %r6525, %r6499, %r6498;
	mov.b64 	%rd13855, {%r6526, %r6524};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6527, %temp}, %rd13830;
	}
	prmt.b32 	%r6528, %r6527, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6529}, %rd13830;
	}
	prmt.b32 	%r6530, %r6529, %r6499, %r6498;
	mov.b64 	%rd13854, {%r6530, %r6528};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6531, %temp}, %rd13829;
	}
	prmt.b32 	%r6532, %r6531, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6533}, %rd13829;
	}
	prmt.b32 	%r6534, %r6533, %r6499, %r6498;
	mov.b64 	%rd13853, {%r6534, %r6532};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6535, %temp}, %rd13828;
	}
	prmt.b32 	%r6536, %r6535, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6537}, %rd13828;
	}
	prmt.b32 	%r6538, %r6537, %r6499, %r6498;
	mov.b64 	%rd13852, {%r6538, %r6536};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6539, %temp}, %rd13827;
	}
	prmt.b32 	%r6540, %r6539, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6541}, %rd13827;
	}
	prmt.b32 	%r6542, %r6541, %r6499, %r6498;
	mov.b64 	%rd13851, {%r6542, %r6540};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6543, %temp}, %rd13826;
	}
	prmt.b32 	%r6544, %r6543, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6545}, %rd13826;
	}
	prmt.b32 	%r6546, %r6545, %r6499, %r6498;
	mov.b64 	%rd13850, {%r6546, %r6544};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6547, %temp}, %rd13825;
	}
	prmt.b32 	%r6548, %r6547, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6549}, %rd13825;
	}
	prmt.b32 	%r6550, %r6549, %r6499, %r6498;
	mov.b64 	%rd13849, {%r6550, %r6548};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6551, %temp}, %rd13824;
	}
	prmt.b32 	%r6552, %r6551, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6553}, %rd13824;
	}
	prmt.b32 	%r6554, %r6553, %r6499, %r6498;
	mov.b64 	%rd13848, {%r6554, %r6552};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6555, %temp}, %rd13823;
	}
	prmt.b32 	%r6556, %r6555, %r6499, %r6498;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6557}, %rd13823;
	}
	prmt.b32 	%r6558, %r6557, %r6499, %r6498;
	mov.b64 	%rd13847, {%r6558, %r6556};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6559,%dummy}, %rd13793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6560}, %rd13793;
	}
	shf.r.wrap.b32 	%r6561, %r6560, %r6559, 18;
	shf.r.wrap.b32 	%r6562, %r6559, %r6560, 18;
	mov.b64 	%rd9459, {%r6562, %r6561};
	shf.r.wrap.b32 	%r6563, %r6560, %r6559, 14;
	shf.r.wrap.b32 	%r6564, %r6559, %r6560, 14;
	mov.b64 	%rd9460, {%r6564, %r6563};
	xor.b64  	%rd9461, %rd9460, %rd9459;
	shf.l.wrap.b32 	%r6565, %r6559, %r6560, 23;
	shf.l.wrap.b32 	%r6566, %r6560, %r6559, 23;
	mov.b64 	%rd9462, {%r6566, %r6565};
	xor.b64  	%rd9463, %rd9461, %rd9462;
	xor.b64  	%rd9464, %rd13792, %rd13791;
	and.b64  	%rd9465, %rd13793, %rd9464;
	xor.b64  	%rd9466, %rd9465, %rd13791;
	add.s64 	%rd9467, %rd9466, %rd13790;
	add.s64 	%rd9468, %rd9467, %rd9463;
	add.s64 	%rd9469, %rd9468, %rd13861;
	add.s64 	%rd9470, %rd9469, 4794697086780616226;
	add.s64 	%rd9471, %rd9470, %rd13794;
	or.b64  	%rd9472, %rd13797, %rd13796;
	and.b64  	%rd9473, %rd9472, %rd13795;
	and.b64  	%rd9474, %rd13797, %rd13796;
	or.b64  	%rd9475, %rd9473, %rd9474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6567}, %rd13797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6568,%dummy}, %rd13797;
	}
	shf.l.wrap.b32 	%r6569, %r6568, %r6567, 30;
	shf.l.wrap.b32 	%r6570, %r6567, %r6568, 30;
	mov.b64 	%rd9476, {%r6570, %r6569};
	shf.r.wrap.b32 	%r6571, %r6567, %r6568, 28;
	shf.r.wrap.b32 	%r6572, %r6568, %r6567, 28;
	mov.b64 	%rd9477, {%r6572, %r6571};
	xor.b64  	%rd9478, %rd9477, %rd9476;
	shf.l.wrap.b32 	%r6573, %r6568, %r6567, 25;
	shf.l.wrap.b32 	%r6574, %r6567, %r6568, 25;
	mov.b64 	%rd9479, {%r6574, %r6573};
	xor.b64  	%rd9480, %rd9478, %rd9479;
	add.s64 	%rd9481, %rd9480, %rd9475;
	add.s64 	%rd9482, %rd9481, %rd9470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6575,%dummy}, %rd9471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6576}, %rd9471;
	}
	shf.r.wrap.b32 	%r6577, %r6576, %r6575, 14;
	shf.r.wrap.b32 	%r6578, %r6575, %r6576, 14;
	mov.b64 	%rd9483, {%r6578, %r6577};
	shf.r.wrap.b32 	%r6579, %r6576, %r6575, 18;
	shf.r.wrap.b32 	%r6580, %r6575, %r6576, 18;
	mov.b64 	%rd9484, {%r6580, %r6579};
	xor.b64  	%rd9485, %rd9483, %rd9484;
	shf.l.wrap.b32 	%r6581, %r6575, %r6576, 23;
	shf.l.wrap.b32 	%r6582, %r6576, %r6575, 23;
	mov.b64 	%rd9486, {%r6582, %r6581};
	xor.b64  	%rd9487, %rd9485, %rd9486;
	xor.b64  	%rd9488, %rd13793, %rd13792;
	and.b64  	%rd9489, %rd9471, %rd9488;
	xor.b64  	%rd9490, %rd9489, %rd13792;
	add.s64 	%rd9491, %rd9490, %rd13791;
	add.s64 	%rd9492, %rd9491, %rd9487;
	add.s64 	%rd9493, %rd9492, %rd13860;
	add.s64 	%rd9494, %rd9493, 8158064640168781261;
	add.s64 	%rd9495, %rd9494, %rd13795;
	and.b64  	%rd9496, %rd9482, %rd13797;
	or.b64  	%rd9497, %rd9482, %rd13797;
	and.b64  	%rd9498, %rd9497, %rd13796;
	or.b64  	%rd9499, %rd9498, %rd9496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6583,%dummy}, %rd9482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6584}, %rd9482;
	}
	shf.r.wrap.b32 	%r6585, %r6584, %r6583, 28;
	shf.r.wrap.b32 	%r6586, %r6583, %r6584, 28;
	mov.b64 	%rd9500, {%r6586, %r6585};
	shf.l.wrap.b32 	%r6587, %r6583, %r6584, 30;
	shf.l.wrap.b32 	%r6588, %r6584, %r6583, 30;
	mov.b64 	%rd9501, {%r6588, %r6587};
	xor.b64  	%rd9502, %rd9500, %rd9501;
	shf.l.wrap.b32 	%r6589, %r6583, %r6584, 25;
	shf.l.wrap.b32 	%r6590, %r6584, %r6583, 25;
	mov.b64 	%rd9503, {%r6590, %r6589};
	xor.b64  	%rd9504, %rd9502, %rd9503;
	add.s64 	%rd9505, %rd9504, %rd9499;
	add.s64 	%rd9506, %rd9505, %rd9494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6591,%dummy}, %rd9495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6592}, %rd9495;
	}
	shf.r.wrap.b32 	%r6593, %r6592, %r6591, 14;
	shf.r.wrap.b32 	%r6594, %r6591, %r6592, 14;
	mov.b64 	%rd9507, {%r6594, %r6593};
	shf.r.wrap.b32 	%r6595, %r6592, %r6591, 18;
	shf.r.wrap.b32 	%r6596, %r6591, %r6592, 18;
	mov.b64 	%rd9508, {%r6596, %r6595};
	xor.b64  	%rd9509, %rd9507, %rd9508;
	shf.l.wrap.b32 	%r6597, %r6591, %r6592, 23;
	shf.l.wrap.b32 	%r6598, %r6592, %r6591, 23;
	mov.b64 	%rd9510, {%r6598, %r6597};
	xor.b64  	%rd9511, %rd9509, %rd9510;
	xor.b64  	%rd9512, %rd9471, %rd13793;
	and.b64  	%rd9513, %rd9495, %rd9512;
	xor.b64  	%rd9514, %rd9513, %rd13793;
	add.s64 	%rd9515, %rd9514, %rd13792;
	add.s64 	%rd9516, %rd9515, %rd9511;
	add.s64 	%rd9517, %rd9516, %rd13859;
	add.s64 	%rd9518, %rd9517, -5349999486874862801;
	add.s64 	%rd9519, %rd9518, %rd13796;
	and.b64  	%rd9520, %rd9506, %rd9482;
	or.b64  	%rd9521, %rd9506, %rd9482;
	and.b64  	%rd9522, %rd9521, %rd13797;
	or.b64  	%rd9523, %rd9522, %rd9520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6599,%dummy}, %rd9506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6600}, %rd9506;
	}
	shf.r.wrap.b32 	%r6601, %r6600, %r6599, 28;
	shf.r.wrap.b32 	%r6602, %r6599, %r6600, 28;
	mov.b64 	%rd9524, {%r6602, %r6601};
	shf.l.wrap.b32 	%r6603, %r6599, %r6600, 30;
	shf.l.wrap.b32 	%r6604, %r6600, %r6599, 30;
	mov.b64 	%rd9525, {%r6604, %r6603};
	xor.b64  	%rd9526, %rd9524, %rd9525;
	shf.l.wrap.b32 	%r6605, %r6599, %r6600, 25;
	shf.l.wrap.b32 	%r6606, %r6600, %r6599, 25;
	mov.b64 	%rd9527, {%r6606, %r6605};
	xor.b64  	%rd9528, %rd9526, %rd9527;
	add.s64 	%rd9529, %rd9528, %rd9523;
	add.s64 	%rd9530, %rd9529, %rd9518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6607,%dummy}, %rd9519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6608}, %rd9519;
	}
	shf.r.wrap.b32 	%r6609, %r6608, %r6607, 14;
	shf.r.wrap.b32 	%r6610, %r6607, %r6608, 14;
	mov.b64 	%rd9531, {%r6610, %r6609};
	shf.r.wrap.b32 	%r6611, %r6608, %r6607, 18;
	shf.r.wrap.b32 	%r6612, %r6607, %r6608, 18;
	mov.b64 	%rd9532, {%r6612, %r6611};
	xor.b64  	%rd9533, %rd9531, %rd9532;
	shf.l.wrap.b32 	%r6613, %r6607, %r6608, 23;
	shf.l.wrap.b32 	%r6614, %r6608, %r6607, 23;
	mov.b64 	%rd9534, {%r6614, %r6613};
	xor.b64  	%rd9535, %rd9533, %rd9534;
	xor.b64  	%rd9536, %rd9495, %rd9471;
	and.b64  	%rd9537, %rd9519, %rd9536;
	xor.b64  	%rd9538, %rd9537, %rd9471;
	add.s64 	%rd9539, %rd9538, %rd13793;
	add.s64 	%rd9540, %rd9539, %rd9535;
	add.s64 	%rd9541, %rd9540, %rd13858;
	add.s64 	%rd9542, %rd9541, -1606136188198331460;
	add.s64 	%rd9543, %rd9542, %rd13797;
	and.b64  	%rd9544, %rd9530, %rd9506;
	or.b64  	%rd9545, %rd9530, %rd9506;
	and.b64  	%rd9546, %rd9545, %rd9482;
	or.b64  	%rd9547, %rd9546, %rd9544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6615,%dummy}, %rd9530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6616}, %rd9530;
	}
	shf.r.wrap.b32 	%r6617, %r6616, %r6615, 28;
	shf.r.wrap.b32 	%r6618, %r6615, %r6616, 28;
	mov.b64 	%rd9548, {%r6618, %r6617};
	shf.l.wrap.b32 	%r6619, %r6615, %r6616, 30;
	shf.l.wrap.b32 	%r6620, %r6616, %r6615, 30;
	mov.b64 	%rd9549, {%r6620, %r6619};
	xor.b64  	%rd9550, %rd9548, %rd9549;
	shf.l.wrap.b32 	%r6621, %r6615, %r6616, 25;
	shf.l.wrap.b32 	%r6622, %r6616, %r6615, 25;
	mov.b64 	%rd9551, {%r6622, %r6621};
	xor.b64  	%rd9552, %rd9550, %rd9551;
	add.s64 	%rd9553, %rd9552, %rd9547;
	add.s64 	%rd9554, %rd9553, %rd9542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6623,%dummy}, %rd9543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6624}, %rd9543;
	}
	shf.r.wrap.b32 	%r6625, %r6624, %r6623, 14;
	shf.r.wrap.b32 	%r6626, %r6623, %r6624, 14;
	mov.b64 	%rd9555, {%r6626, %r6625};
	shf.r.wrap.b32 	%r6627, %r6624, %r6623, 18;
	shf.r.wrap.b32 	%r6628, %r6623, %r6624, 18;
	mov.b64 	%rd9556, {%r6628, %r6627};
	xor.b64  	%rd9557, %rd9555, %rd9556;
	shf.l.wrap.b32 	%r6629, %r6623, %r6624, 23;
	shf.l.wrap.b32 	%r6630, %r6624, %r6623, 23;
	mov.b64 	%rd9558, {%r6630, %r6629};
	xor.b64  	%rd9559, %rd9557, %rd9558;
	xor.b64  	%rd9560, %rd9519, %rd9495;
	and.b64  	%rd9561, %rd9543, %rd9560;
	xor.b64  	%rd9562, %rd9561, %rd9495;
	add.s64 	%rd9563, %rd9562, %rd9471;
	add.s64 	%rd9564, %rd9563, %rd9559;
	add.s64 	%rd9565, %rd9564, %rd13857;
	add.s64 	%rd9566, %rd9565, 4131703408338449720;
	add.s64 	%rd9567, %rd9566, %rd9482;
	and.b64  	%rd9568, %rd9554, %rd9530;
	or.b64  	%rd9569, %rd9554, %rd9530;
	and.b64  	%rd9570, %rd9569, %rd9506;
	or.b64  	%rd9571, %rd9570, %rd9568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6631,%dummy}, %rd9554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6632}, %rd9554;
	}
	shf.r.wrap.b32 	%r6633, %r6632, %r6631, 28;
	shf.r.wrap.b32 	%r6634, %r6631, %r6632, 28;
	mov.b64 	%rd9572, {%r6634, %r6633};
	shf.l.wrap.b32 	%r6635, %r6631, %r6632, 30;
	shf.l.wrap.b32 	%r6636, %r6632, %r6631, 30;
	mov.b64 	%rd9573, {%r6636, %r6635};
	xor.b64  	%rd9574, %rd9572, %rd9573;
	shf.l.wrap.b32 	%r6637, %r6631, %r6632, 25;
	shf.l.wrap.b32 	%r6638, %r6632, %r6631, 25;
	mov.b64 	%rd9575, {%r6638, %r6637};
	xor.b64  	%rd9576, %rd9574, %rd9575;
	add.s64 	%rd9577, %rd9576, %rd9571;
	add.s64 	%rd9578, %rd9577, %rd9566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6639,%dummy}, %rd9567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6640}, %rd9567;
	}
	shf.r.wrap.b32 	%r6641, %r6640, %r6639, 14;
	shf.r.wrap.b32 	%r6642, %r6639, %r6640, 14;
	mov.b64 	%rd9579, {%r6642, %r6641};
	shf.r.wrap.b32 	%r6643, %r6640, %r6639, 18;
	shf.r.wrap.b32 	%r6644, %r6639, %r6640, 18;
	mov.b64 	%rd9580, {%r6644, %r6643};
	xor.b64  	%rd9581, %rd9579, %rd9580;
	shf.l.wrap.b32 	%r6645, %r6639, %r6640, 23;
	shf.l.wrap.b32 	%r6646, %r6640, %r6639, 23;
	mov.b64 	%rd9582, {%r6646, %r6645};
	xor.b64  	%rd9583, %rd9581, %rd9582;
	xor.b64  	%rd9584, %rd9543, %rd9519;
	and.b64  	%rd9585, %rd9567, %rd9584;
	xor.b64  	%rd9586, %rd9585, %rd9519;
	add.s64 	%rd9587, %rd9586, %rd9495;
	add.s64 	%rd9588, %rd9587, %rd9583;
	add.s64 	%rd9589, %rd9588, %rd13856;
	add.s64 	%rd9590, %rd9589, 6480981068601479193;
	add.s64 	%rd9591, %rd9590, %rd9506;
	and.b64  	%rd9592, %rd9578, %rd9554;
	or.b64  	%rd9593, %rd9578, %rd9554;
	and.b64  	%rd9594, %rd9593, %rd9530;
	or.b64  	%rd9595, %rd9594, %rd9592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6647,%dummy}, %rd9578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6648}, %rd9578;
	}
	shf.r.wrap.b32 	%r6649, %r6648, %r6647, 28;
	shf.r.wrap.b32 	%r6650, %r6647, %r6648, 28;
	mov.b64 	%rd9596, {%r6650, %r6649};
	shf.l.wrap.b32 	%r6651, %r6647, %r6648, 30;
	shf.l.wrap.b32 	%r6652, %r6648, %r6647, 30;
	mov.b64 	%rd9597, {%r6652, %r6651};
	xor.b64  	%rd9598, %rd9596, %rd9597;
	shf.l.wrap.b32 	%r6653, %r6647, %r6648, 25;
	shf.l.wrap.b32 	%r6654, %r6648, %r6647, 25;
	mov.b64 	%rd9599, {%r6654, %r6653};
	xor.b64  	%rd9600, %rd9598, %rd9599;
	add.s64 	%rd9601, %rd9600, %rd9595;
	add.s64 	%rd9602, %rd9601, %rd9590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6655,%dummy}, %rd9591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6656}, %rd9591;
	}
	shf.r.wrap.b32 	%r6657, %r6656, %r6655, 14;
	shf.r.wrap.b32 	%r6658, %r6655, %r6656, 14;
	mov.b64 	%rd9603, {%r6658, %r6657};
	shf.r.wrap.b32 	%r6659, %r6656, %r6655, 18;
	shf.r.wrap.b32 	%r6660, %r6655, %r6656, 18;
	mov.b64 	%rd9604, {%r6660, %r6659};
	xor.b64  	%rd9605, %rd9603, %rd9604;
	shf.l.wrap.b32 	%r6661, %r6655, %r6656, 23;
	shf.l.wrap.b32 	%r6662, %r6656, %r6655, 23;
	mov.b64 	%rd9606, {%r6662, %r6661};
	xor.b64  	%rd9607, %rd9605, %rd9606;
	xor.b64  	%rd9608, %rd9567, %rd9543;
	and.b64  	%rd9609, %rd9591, %rd9608;
	xor.b64  	%rd9610, %rd9609, %rd9543;
	add.s64 	%rd9611, %rd9610, %rd9519;
	add.s64 	%rd9612, %rd9611, %rd9607;
	add.s64 	%rd9613, %rd9612, %rd13855;
	add.s64 	%rd9614, %rd9613, -7908458776815382629;
	add.s64 	%rd9615, %rd9614, %rd9530;
	and.b64  	%rd9616, %rd9602, %rd9578;
	or.b64  	%rd9617, %rd9602, %rd9578;
	and.b64  	%rd9618, %rd9617, %rd9554;
	or.b64  	%rd9619, %rd9618, %rd9616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6663,%dummy}, %rd9602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6664}, %rd9602;
	}
	shf.r.wrap.b32 	%r6665, %r6664, %r6663, 28;
	shf.r.wrap.b32 	%r6666, %r6663, %r6664, 28;
	mov.b64 	%rd9620, {%r6666, %r6665};
	shf.l.wrap.b32 	%r6667, %r6663, %r6664, 30;
	shf.l.wrap.b32 	%r6668, %r6664, %r6663, 30;
	mov.b64 	%rd9621, {%r6668, %r6667};
	xor.b64  	%rd9622, %rd9620, %rd9621;
	shf.l.wrap.b32 	%r6669, %r6663, %r6664, 25;
	shf.l.wrap.b32 	%r6670, %r6664, %r6663, 25;
	mov.b64 	%rd9623, {%r6670, %r6669};
	xor.b64  	%rd9624, %rd9622, %rd9623;
	add.s64 	%rd9625, %rd9624, %rd9619;
	add.s64 	%rd9626, %rd9625, %rd9614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6671,%dummy}, %rd9615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6672}, %rd9615;
	}
	shf.r.wrap.b32 	%r6673, %r6672, %r6671, 14;
	shf.r.wrap.b32 	%r6674, %r6671, %r6672, 14;
	mov.b64 	%rd9627, {%r6674, %r6673};
	shf.r.wrap.b32 	%r6675, %r6672, %r6671, 18;
	shf.r.wrap.b32 	%r6676, %r6671, %r6672, 18;
	mov.b64 	%rd9628, {%r6676, %r6675};
	xor.b64  	%rd9629, %rd9627, %rd9628;
	shf.l.wrap.b32 	%r6677, %r6671, %r6672, 23;
	shf.l.wrap.b32 	%r6678, %r6672, %r6671, 23;
	mov.b64 	%rd9630, {%r6678, %r6677};
	xor.b64  	%rd9631, %rd9629, %rd9630;
	xor.b64  	%rd9632, %rd9591, %rd9567;
	and.b64  	%rd9633, %rd9615, %rd9632;
	xor.b64  	%rd9634, %rd9633, %rd9567;
	add.s64 	%rd9635, %rd9634, %rd9543;
	add.s64 	%rd9636, %rd9635, %rd9631;
	add.s64 	%rd9637, %rd9636, %rd13854;
	add.s64 	%rd9638, %rd9637, -6116909921290321640;
	add.s64 	%rd9639, %rd9638, %rd9554;
	and.b64  	%rd9640, %rd9626, %rd9602;
	or.b64  	%rd9641, %rd9626, %rd9602;
	and.b64  	%rd9642, %rd9641, %rd9578;
	or.b64  	%rd9643, %rd9642, %rd9640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6679,%dummy}, %rd9626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6680}, %rd9626;
	}
	shf.r.wrap.b32 	%r6681, %r6680, %r6679, 28;
	shf.r.wrap.b32 	%r6682, %r6679, %r6680, 28;
	mov.b64 	%rd9644, {%r6682, %r6681};
	shf.l.wrap.b32 	%r6683, %r6679, %r6680, 30;
	shf.l.wrap.b32 	%r6684, %r6680, %r6679, 30;
	mov.b64 	%rd9645, {%r6684, %r6683};
	xor.b64  	%rd9646, %rd9644, %rd9645;
	shf.l.wrap.b32 	%r6685, %r6679, %r6680, 25;
	shf.l.wrap.b32 	%r6686, %r6680, %r6679, 25;
	mov.b64 	%rd9647, {%r6686, %r6685};
	xor.b64  	%rd9648, %rd9646, %rd9647;
	add.s64 	%rd9649, %rd9648, %rd9643;
	add.s64 	%rd9650, %rd9649, %rd9638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6687,%dummy}, %rd9639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6688}, %rd9639;
	}
	shf.r.wrap.b32 	%r6689, %r6688, %r6687, 14;
	shf.r.wrap.b32 	%r6690, %r6687, %r6688, 14;
	mov.b64 	%rd9651, {%r6690, %r6689};
	shf.r.wrap.b32 	%r6691, %r6688, %r6687, 18;
	shf.r.wrap.b32 	%r6692, %r6687, %r6688, 18;
	mov.b64 	%rd9652, {%r6692, %r6691};
	xor.b64  	%rd9653, %rd9651, %rd9652;
	shf.l.wrap.b32 	%r6693, %r6687, %r6688, 23;
	shf.l.wrap.b32 	%r6694, %r6688, %r6687, 23;
	mov.b64 	%rd9654, {%r6694, %r6693};
	xor.b64  	%rd9655, %rd9653, %rd9654;
	xor.b64  	%rd9656, %rd9615, %rd9591;
	and.b64  	%rd9657, %rd9639, %rd9656;
	xor.b64  	%rd9658, %rd9657, %rd9591;
	add.s64 	%rd9659, %rd9658, %rd9567;
	add.s64 	%rd9660, %rd9659, %rd9655;
	add.s64 	%rd9661, %rd9660, %rd13853;
	add.s64 	%rd9662, %rd9661, -2880145864133508542;
	add.s64 	%rd9663, %rd9662, %rd9578;
	and.b64  	%rd9664, %rd9650, %rd9626;
	or.b64  	%rd9665, %rd9650, %rd9626;
	and.b64  	%rd9666, %rd9665, %rd9602;
	or.b64  	%rd9667, %rd9666, %rd9664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6695,%dummy}, %rd9650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6696}, %rd9650;
	}
	shf.r.wrap.b32 	%r6697, %r6696, %r6695, 28;
	shf.r.wrap.b32 	%r6698, %r6695, %r6696, 28;
	mov.b64 	%rd9668, {%r6698, %r6697};
	shf.l.wrap.b32 	%r6699, %r6695, %r6696, 30;
	shf.l.wrap.b32 	%r6700, %r6696, %r6695, 30;
	mov.b64 	%rd9669, {%r6700, %r6699};
	xor.b64  	%rd9670, %rd9668, %rd9669;
	shf.l.wrap.b32 	%r6701, %r6695, %r6696, 25;
	shf.l.wrap.b32 	%r6702, %r6696, %r6695, 25;
	mov.b64 	%rd9671, {%r6702, %r6701};
	xor.b64  	%rd9672, %rd9670, %rd9671;
	add.s64 	%rd9673, %rd9672, %rd9667;
	add.s64 	%rd9674, %rd9673, %rd9662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6703,%dummy}, %rd9663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6704}, %rd9663;
	}
	shf.r.wrap.b32 	%r6705, %r6704, %r6703, 14;
	shf.r.wrap.b32 	%r6706, %r6703, %r6704, 14;
	mov.b64 	%rd9675, {%r6706, %r6705};
	shf.r.wrap.b32 	%r6707, %r6704, %r6703, 18;
	shf.r.wrap.b32 	%r6708, %r6703, %r6704, 18;
	mov.b64 	%rd9676, {%r6708, %r6707};
	xor.b64  	%rd9677, %rd9675, %rd9676;
	shf.l.wrap.b32 	%r6709, %r6703, %r6704, 23;
	shf.l.wrap.b32 	%r6710, %r6704, %r6703, 23;
	mov.b64 	%rd9678, {%r6710, %r6709};
	xor.b64  	%rd9679, %rd9677, %rd9678;
	xor.b64  	%rd9680, %rd9639, %rd9615;
	and.b64  	%rd9681, %rd9663, %rd9680;
	xor.b64  	%rd9682, %rd9681, %rd9615;
	add.s64 	%rd9683, %rd9682, %rd9591;
	add.s64 	%rd9684, %rd9683, %rd9679;
	add.s64 	%rd9685, %rd9684, %rd13852;
	add.s64 	%rd9686, %rd9685, 1334009975649890238;
	add.s64 	%rd9687, %rd9686, %rd9602;
	and.b64  	%rd9688, %rd9674, %rd9650;
	or.b64  	%rd9689, %rd9674, %rd9650;
	and.b64  	%rd9690, %rd9689, %rd9626;
	or.b64  	%rd9691, %rd9690, %rd9688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6711,%dummy}, %rd9674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6712}, %rd9674;
	}
	shf.r.wrap.b32 	%r6713, %r6712, %r6711, 28;
	shf.r.wrap.b32 	%r6714, %r6711, %r6712, 28;
	mov.b64 	%rd9692, {%r6714, %r6713};
	shf.l.wrap.b32 	%r6715, %r6711, %r6712, 30;
	shf.l.wrap.b32 	%r6716, %r6712, %r6711, 30;
	mov.b64 	%rd9693, {%r6716, %r6715};
	xor.b64  	%rd9694, %rd9692, %rd9693;
	shf.l.wrap.b32 	%r6717, %r6711, %r6712, 25;
	shf.l.wrap.b32 	%r6718, %r6712, %r6711, 25;
	mov.b64 	%rd9695, {%r6718, %r6717};
	xor.b64  	%rd9696, %rd9694, %rd9695;
	add.s64 	%rd9697, %rd9696, %rd9691;
	add.s64 	%rd9698, %rd9697, %rd9686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6719,%dummy}, %rd9687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6720}, %rd9687;
	}
	shf.r.wrap.b32 	%r6721, %r6720, %r6719, 14;
	shf.r.wrap.b32 	%r6722, %r6719, %r6720, 14;
	mov.b64 	%rd9699, {%r6722, %r6721};
	shf.r.wrap.b32 	%r6723, %r6720, %r6719, 18;
	shf.r.wrap.b32 	%r6724, %r6719, %r6720, 18;
	mov.b64 	%rd9700, {%r6724, %r6723};
	xor.b64  	%rd9701, %rd9699, %rd9700;
	shf.l.wrap.b32 	%r6725, %r6719, %r6720, 23;
	shf.l.wrap.b32 	%r6726, %r6720, %r6719, 23;
	mov.b64 	%rd9702, {%r6726, %r6725};
	xor.b64  	%rd9703, %rd9701, %rd9702;
	xor.b64  	%rd9704, %rd9663, %rd9639;
	and.b64  	%rd9705, %rd9687, %rd9704;
	xor.b64  	%rd9706, %rd9705, %rd9639;
	add.s64 	%rd9707, %rd9706, %rd9615;
	add.s64 	%rd9708, %rd9707, %rd9703;
	add.s64 	%rd9709, %rd9708, %rd13851;
	add.s64 	%rd9710, %rd9709, 2608012711638119052;
	add.s64 	%rd9711, %rd9710, %rd9626;
	and.b64  	%rd9712, %rd9698, %rd9674;
	or.b64  	%rd9713, %rd9698, %rd9674;
	and.b64  	%rd9714, %rd9713, %rd9650;
	or.b64  	%rd9715, %rd9714, %rd9712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6727,%dummy}, %rd9698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6728}, %rd9698;
	}
	shf.r.wrap.b32 	%r6729, %r6728, %r6727, 28;
	shf.r.wrap.b32 	%r6730, %r6727, %r6728, 28;
	mov.b64 	%rd9716, {%r6730, %r6729};
	shf.l.wrap.b32 	%r6731, %r6727, %r6728, 30;
	shf.l.wrap.b32 	%r6732, %r6728, %r6727, 30;
	mov.b64 	%rd9717, {%r6732, %r6731};
	xor.b64  	%rd9718, %rd9716, %rd9717;
	shf.l.wrap.b32 	%r6733, %r6727, %r6728, 25;
	shf.l.wrap.b32 	%r6734, %r6728, %r6727, 25;
	mov.b64 	%rd9719, {%r6734, %r6733};
	xor.b64  	%rd9720, %rd9718, %rd9719;
	add.s64 	%rd9721, %rd9720, %rd9715;
	add.s64 	%rd9722, %rd9721, %rd9710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6735,%dummy}, %rd9711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6736}, %rd9711;
	}
	shf.r.wrap.b32 	%r6737, %r6736, %r6735, 14;
	shf.r.wrap.b32 	%r6738, %r6735, %r6736, 14;
	mov.b64 	%rd9723, {%r6738, %r6737};
	shf.r.wrap.b32 	%r6739, %r6736, %r6735, 18;
	shf.r.wrap.b32 	%r6740, %r6735, %r6736, 18;
	mov.b64 	%rd9724, {%r6740, %r6739};
	xor.b64  	%rd9725, %rd9723, %rd9724;
	shf.l.wrap.b32 	%r6741, %r6735, %r6736, 23;
	shf.l.wrap.b32 	%r6742, %r6736, %r6735, 23;
	mov.b64 	%rd9726, {%r6742, %r6741};
	xor.b64  	%rd9727, %rd9725, %rd9726;
	xor.b64  	%rd9728, %rd9687, %rd9663;
	and.b64  	%rd9729, %rd9711, %rd9728;
	xor.b64  	%rd9730, %rd9729, %rd9663;
	add.s64 	%rd9731, %rd9730, %rd9639;
	add.s64 	%rd9732, %rd9731, %rd9727;
	add.s64 	%rd9733, %rd9732, %rd13850;
	add.s64 	%rd9734, %rd9733, 6128411473006802146;
	add.s64 	%rd9735, %rd9734, %rd9650;
	and.b64  	%rd9736, %rd9722, %rd9698;
	or.b64  	%rd9737, %rd9722, %rd9698;
	and.b64  	%rd9738, %rd9737, %rd9674;
	or.b64  	%rd9739, %rd9738, %rd9736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6743,%dummy}, %rd9722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6744}, %rd9722;
	}
	shf.r.wrap.b32 	%r6745, %r6744, %r6743, 28;
	shf.r.wrap.b32 	%r6746, %r6743, %r6744, 28;
	mov.b64 	%rd9740, {%r6746, %r6745};
	shf.l.wrap.b32 	%r6747, %r6743, %r6744, 30;
	shf.l.wrap.b32 	%r6748, %r6744, %r6743, 30;
	mov.b64 	%rd9741, {%r6748, %r6747};
	xor.b64  	%rd9742, %rd9740, %rd9741;
	shf.l.wrap.b32 	%r6749, %r6743, %r6744, 25;
	shf.l.wrap.b32 	%r6750, %r6744, %r6743, 25;
	mov.b64 	%rd9743, {%r6750, %r6749};
	xor.b64  	%rd9744, %rd9742, %rd9743;
	add.s64 	%rd9745, %rd9744, %rd9739;
	add.s64 	%rd9746, %rd9745, %rd9734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6751,%dummy}, %rd9735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6752}, %rd9735;
	}
	shf.r.wrap.b32 	%r6753, %r6752, %r6751, 14;
	shf.r.wrap.b32 	%r6754, %r6751, %r6752, 14;
	mov.b64 	%rd9747, {%r6754, %r6753};
	shf.r.wrap.b32 	%r6755, %r6752, %r6751, 18;
	shf.r.wrap.b32 	%r6756, %r6751, %r6752, 18;
	mov.b64 	%rd9748, {%r6756, %r6755};
	xor.b64  	%rd9749, %rd9747, %rd9748;
	shf.l.wrap.b32 	%r6757, %r6751, %r6752, 23;
	shf.l.wrap.b32 	%r6758, %r6752, %r6751, 23;
	mov.b64 	%rd9750, {%r6758, %r6757};
	xor.b64  	%rd9751, %rd9749, %rd9750;
	xor.b64  	%rd9752, %rd9711, %rd9687;
	and.b64  	%rd9753, %rd9735, %rd9752;
	xor.b64  	%rd9754, %rd9753, %rd9687;
	add.s64 	%rd9755, %rd9754, %rd9663;
	add.s64 	%rd9756, %rd9755, %rd9751;
	add.s64 	%rd9757, %rd9756, %rd13849;
	add.s64 	%rd9758, %rd9757, 8268148722764581231;
	add.s64 	%rd13869, %rd9758, %rd9674;
	and.b64  	%rd9759, %rd9746, %rd9722;
	or.b64  	%rd9760, %rd9746, %rd9722;
	and.b64  	%rd9761, %rd9760, %rd9698;
	or.b64  	%rd9762, %rd9761, %rd9759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6759,%dummy}, %rd9746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6760}, %rd9746;
	}
	shf.r.wrap.b32 	%r6761, %r6760, %r6759, 28;
	shf.r.wrap.b32 	%r6762, %r6759, %r6760, 28;
	mov.b64 	%rd9763, {%r6762, %r6761};
	shf.l.wrap.b32 	%r6763, %r6759, %r6760, 30;
	shf.l.wrap.b32 	%r6764, %r6760, %r6759, 30;
	mov.b64 	%rd9764, {%r6764, %r6763};
	xor.b64  	%rd9765, %rd9763, %rd9764;
	shf.l.wrap.b32 	%r6765, %r6759, %r6760, 25;
	shf.l.wrap.b32 	%r6766, %r6760, %r6759, 25;
	mov.b64 	%rd9766, {%r6766, %r6765};
	xor.b64  	%rd9767, %rd9765, %rd9766;
	add.s64 	%rd9768, %rd9767, %rd9762;
	add.s64 	%rd13865, %rd9768, %rd9758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6767,%dummy}, %rd13869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6768}, %rd13869;
	}
	shf.r.wrap.b32 	%r6769, %r6768, %r6767, 14;
	shf.r.wrap.b32 	%r6770, %r6767, %r6768, 14;
	mov.b64 	%rd9769, {%r6770, %r6769};
	shf.r.wrap.b32 	%r6771, %r6768, %r6767, 18;
	shf.r.wrap.b32 	%r6772, %r6767, %r6768, 18;
	mov.b64 	%rd9770, {%r6772, %r6771};
	xor.b64  	%rd9771, %rd9769, %rd9770;
	shf.l.wrap.b32 	%r6773, %r6767, %r6768, 23;
	shf.l.wrap.b32 	%r6774, %r6768, %r6767, 23;
	mov.b64 	%rd9772, {%r6774, %r6773};
	xor.b64  	%rd9773, %rd9771, %rd9772;
	xor.b64  	%rd9774, %rd9735, %rd9711;
	and.b64  	%rd9775, %rd13869, %rd9774;
	xor.b64  	%rd9776, %rd9775, %rd9711;
	add.s64 	%rd9777, %rd9776, %rd9687;
	add.s64 	%rd9778, %rd9777, %rd9773;
	add.s64 	%rd9779, %rd9778, %rd13848;
	add.s64 	%rd9780, %rd9779, -9160688886553864527;
	add.s64 	%rd13868, %rd9780, %rd9698;
	and.b64  	%rd9781, %rd13865, %rd9746;
	or.b64  	%rd9782, %rd13865, %rd9746;
	and.b64  	%rd9783, %rd9782, %rd9722;
	or.b64  	%rd9784, %rd9783, %rd9781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6775,%dummy}, %rd13865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6776}, %rd13865;
	}
	shf.r.wrap.b32 	%r6777, %r6776, %r6775, 28;
	shf.r.wrap.b32 	%r6778, %r6775, %r6776, 28;
	mov.b64 	%rd9785, {%r6778, %r6777};
	shf.l.wrap.b32 	%r6779, %r6775, %r6776, 30;
	shf.l.wrap.b32 	%r6780, %r6776, %r6775, 30;
	mov.b64 	%rd9786, {%r6780, %r6779};
	xor.b64  	%rd9787, %rd9785, %rd9786;
	shf.l.wrap.b32 	%r6781, %r6775, %r6776, 25;
	shf.l.wrap.b32 	%r6782, %r6776, %r6775, 25;
	mov.b64 	%rd9788, {%r6782, %r6781};
	xor.b64  	%rd9789, %rd9787, %rd9788;
	add.s64 	%rd9790, %rd9789, %rd9784;
	add.s64 	%rd13864, %rd9790, %rd9780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6783,%dummy}, %rd13868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6784}, %rd13868;
	}
	shf.r.wrap.b32 	%r6785, %r6784, %r6783, 14;
	shf.r.wrap.b32 	%r6786, %r6783, %r6784, 14;
	mov.b64 	%rd9791, {%r6786, %r6785};
	shf.r.wrap.b32 	%r6787, %r6784, %r6783, 18;
	shf.r.wrap.b32 	%r6788, %r6783, %r6784, 18;
	mov.b64 	%rd9792, {%r6788, %r6787};
	xor.b64  	%rd9793, %rd9791, %rd9792;
	shf.l.wrap.b32 	%r6789, %r6783, %r6784, 23;
	shf.l.wrap.b32 	%r6790, %r6784, %r6783, 23;
	mov.b64 	%rd9794, {%r6790, %r6789};
	xor.b64  	%rd9795, %rd9793, %rd9794;
	xor.b64  	%rd9796, %rd13869, %rd9735;
	and.b64  	%rd9797, %rd13868, %rd9796;
	xor.b64  	%rd9798, %rd9797, %rd9735;
	add.s64 	%rd9799, %rd9798, %rd9711;
	add.s64 	%rd9800, %rd9799, %rd9795;
	add.s64 	%rd9801, %rd9800, %rd13847;
	add.s64 	%rd9802, %rd9801, -7215885187991268811;
	add.s64 	%rd13867, %rd9802, %rd9722;
	and.b64  	%rd9803, %rd13864, %rd13865;
	or.b64  	%rd9804, %rd13864, %rd13865;
	and.b64  	%rd9805, %rd9804, %rd9746;
	or.b64  	%rd9806, %rd9805, %rd9803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6791,%dummy}, %rd13864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6792}, %rd13864;
	}
	shf.r.wrap.b32 	%r6793, %r6792, %r6791, 28;
	shf.r.wrap.b32 	%r6794, %r6791, %r6792, 28;
	mov.b64 	%rd9807, {%r6794, %r6793};
	shf.l.wrap.b32 	%r6795, %r6791, %r6792, 30;
	shf.l.wrap.b32 	%r6796, %r6792, %r6791, 30;
	mov.b64 	%rd9808, {%r6796, %r6795};
	xor.b64  	%rd9809, %rd9807, %rd9808;
	shf.l.wrap.b32 	%r6797, %r6791, %r6792, 25;
	shf.l.wrap.b32 	%r6798, %r6792, %r6791, 25;
	mov.b64 	%rd9810, {%r6798, %r6797};
	xor.b64  	%rd9811, %rd9809, %rd9810;
	add.s64 	%rd9812, %rd9811, %rd9806;
	add.s64 	%rd13863, %rd9812, %rd9802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6799,%dummy}, %rd13867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6800}, %rd13867;
	}
	shf.r.wrap.b32 	%r6801, %r6800, %r6799, 14;
	shf.r.wrap.b32 	%r6802, %r6799, %r6800, 14;
	mov.b64 	%rd9813, {%r6802, %r6801};
	shf.r.wrap.b32 	%r6803, %r6800, %r6799, 18;
	shf.r.wrap.b32 	%r6804, %r6799, %r6800, 18;
	mov.b64 	%rd9814, {%r6804, %r6803};
	xor.b64  	%rd9815, %rd9813, %rd9814;
	shf.l.wrap.b32 	%r6805, %r6799, %r6800, 23;
	shf.l.wrap.b32 	%r6806, %r6800, %r6799, 23;
	mov.b64 	%rd9816, {%r6806, %r6805};
	xor.b64  	%rd9817, %rd9815, %rd9816;
	xor.b64  	%rd9818, %rd13868, %rd13869;
	and.b64  	%rd9819, %rd13867, %rd9818;
	xor.b64  	%rd9820, %rd9819, %rd13869;
	add.s64 	%rd9821, %rd9820, %rd9735;
	add.s64 	%rd9822, %rd9821, %rd9817;
	cvt.u64.u32 	%rd13846, %r9746;
	add.s64 	%rd9823, %rd9822, %rd13846;
	add.s64 	%rd9824, %rd9823, -4495734319001033068;
	add.s64 	%rd13866, %rd9824, %rd9746;
	and.b64  	%rd9825, %rd13863, %rd13864;
	or.b64  	%rd9826, %rd13863, %rd13864;
	and.b64  	%rd9827, %rd9826, %rd13865;
	or.b64  	%rd9828, %rd9827, %rd9825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6807,%dummy}, %rd13863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6808}, %rd13863;
	}
	shf.r.wrap.b32 	%r6809, %r6808, %r6807, 28;
	shf.r.wrap.b32 	%r6810, %r6807, %r6808, 28;
	mov.b64 	%rd9829, {%r6810, %r6809};
	shf.l.wrap.b32 	%r6811, %r6807, %r6808, 30;
	shf.l.wrap.b32 	%r6812, %r6808, %r6807, 30;
	mov.b64 	%rd9830, {%r6812, %r6811};
	xor.b64  	%rd9831, %rd9829, %rd9830;
	shf.l.wrap.b32 	%r6813, %r6807, %r6808, 25;
	shf.l.wrap.b32 	%r6814, %r6808, %r6807, 25;
	mov.b64 	%rd9832, {%r6814, %r6813};
	xor.b64  	%rd9833, %rd9831, %rd9832;
	add.s64 	%rd9834, %rd9833, %rd9828;
	add.s64 	%rd13862, %rd9834, %rd9824;
	cvt.u32.u64 	%r136, %rd622;
	mov.u32 	%r9749, 16;

$L__BB0_132:
	.pragma "nounroll";
	mov.u64 	%rd13511, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6815}, %rd13847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6816,%dummy}, %rd13847;
	}
	shf.l.wrap.b32 	%r6817, %r6816, %r6815, 3;
	shf.l.wrap.b32 	%r6818, %r6815, %r6816, 3;
	mov.b64 	%rd9835, {%r6818, %r6817};
	shf.r.wrap.b32 	%r6819, %r6815, %r6816, 19;
	shf.r.wrap.b32 	%r6820, %r6816, %r6815, 19;
	mov.b64 	%rd9836, {%r6820, %r6819};
	xor.b64  	%rd9837, %rd9836, %rd9835;
	shr.u64 	%rd9838, %rd13847, 6;
	xor.b64  	%rd9839, %rd9837, %rd9838;
	add.s64 	%rd9840, %rd13852, %rd13861;
	add.s64 	%rd9841, %rd9840, %rd9839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6821,%dummy}, %rd13860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6822}, %rd13860;
	}
	shf.r.wrap.b32 	%r6823, %r6822, %r6821, 8;
	shf.r.wrap.b32 	%r6824, %r6821, %r6822, 8;
	mov.b64 	%rd9842, {%r6824, %r6823};
	shf.r.wrap.b32 	%r6825, %r6822, %r6821, 1;
	shf.r.wrap.b32 	%r6826, %r6821, %r6822, 1;
	mov.b64 	%rd9843, {%r6826, %r6825};
	xor.b64  	%rd9844, %rd9843, %rd9842;
	shr.u64 	%rd9845, %rd13860, 7;
	xor.b64  	%rd9846, %rd9844, %rd9845;
	add.s64 	%rd13861, %rd9841, %rd9846;
	mul.wide.u32 	%rd9847, %r9749, 8;
	add.s64 	%rd9849, %rd13511, %rd9847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6827,%dummy}, %rd13866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6828}, %rd13866;
	}
	shf.r.wrap.b32 	%r6829, %r6828, %r6827, 18;
	shf.r.wrap.b32 	%r6830, %r6827, %r6828, 18;
	mov.b64 	%rd9850, {%r6830, %r6829};
	shf.r.wrap.b32 	%r6831, %r6828, %r6827, 14;
	shf.r.wrap.b32 	%r6832, %r6827, %r6828, 14;
	mov.b64 	%rd9851, {%r6832, %r6831};
	xor.b64  	%rd9852, %rd9851, %rd9850;
	shf.l.wrap.b32 	%r6833, %r6827, %r6828, 23;
	shf.l.wrap.b32 	%r6834, %r6828, %r6827, 23;
	mov.b64 	%rd9853, {%r6834, %r6833};
	xor.b64  	%rd9854, %rd9852, %rd9853;
	xor.b64  	%rd9855, %rd13867, %rd13868;
	and.b64  	%rd9856, %rd13866, %rd9855;
	xor.b64  	%rd9857, %rd9856, %rd13868;
	add.s64 	%rd9858, %rd9857, %rd13869;
	add.s64 	%rd9859, %rd9858, %rd9854;
	ld.const.u64 	%rd9860, [%rd9849];
	add.s64 	%rd9861, %rd9859, %rd9860;
	add.s64 	%rd9862, %rd9861, %rd13861;
	add.s64 	%rd9863, %rd9862, %rd13865;
	or.b64  	%rd9864, %rd13862, %rd13863;
	and.b64  	%rd9865, %rd9864, %rd13864;
	and.b64  	%rd9866, %rd13862, %rd13863;
	or.b64  	%rd9867, %rd9865, %rd9866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd13862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6836,%dummy}, %rd13862;
	}
	shf.l.wrap.b32 	%r6837, %r6836, %r6835, 30;
	shf.l.wrap.b32 	%r6838, %r6835, %r6836, 30;
	mov.b64 	%rd9868, {%r6838, %r6837};
	shf.r.wrap.b32 	%r6839, %r6835, %r6836, 28;
	shf.r.wrap.b32 	%r6840, %r6836, %r6835, 28;
	mov.b64 	%rd9869, {%r6840, %r6839};
	xor.b64  	%rd9870, %rd9869, %rd9868;
	shf.l.wrap.b32 	%r6841, %r6836, %r6835, 25;
	shf.l.wrap.b32 	%r6842, %r6835, %r6836, 25;
	mov.b64 	%rd9871, {%r6842, %r6841};
	xor.b64  	%rd9872, %rd9870, %rd9871;
	add.s64 	%rd9873, %rd9872, %rd9867;
	add.s64 	%rd9874, %rd9873, %rd9862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd13846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6844,%dummy}, %rd13846;
	}
	shf.l.wrap.b32 	%r6845, %r6844, %r6843, 3;
	shf.l.wrap.b32 	%r6846, %r6843, %r6844, 3;
	mov.b64 	%rd9875, {%r6846, %r6845};
	shf.r.wrap.b32 	%r6847, %r6843, %r6844, 19;
	shf.r.wrap.b32 	%r6848, %r6844, %r6843, 19;
	mov.b64 	%rd9876, {%r6848, %r6847};
	xor.b64  	%rd9877, %rd9876, %rd9875;
	shr.u64 	%rd9878, %rd13846, 6;
	xor.b64  	%rd9879, %rd9877, %rd9878;
	add.s64 	%rd9880, %rd13851, %rd13860;
	add.s64 	%rd9881, %rd9880, %rd9879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6849,%dummy}, %rd13859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6850}, %rd13859;
	}
	shf.r.wrap.b32 	%r6851, %r6850, %r6849, 8;
	shf.r.wrap.b32 	%r6852, %r6849, %r6850, 8;
	mov.b64 	%rd9882, {%r6852, %r6851};
	shf.r.wrap.b32 	%r6853, %r6850, %r6849, 1;
	shf.r.wrap.b32 	%r6854, %r6849, %r6850, 1;
	mov.b64 	%rd9883, {%r6854, %r6853};
	xor.b64  	%rd9884, %rd9883, %rd9882;
	shr.u64 	%rd9885, %rd13859, 7;
	xor.b64  	%rd9886, %rd9884, %rd9885;
	add.s64 	%rd13860, %rd9881, %rd9886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6855,%dummy}, %rd9863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6856}, %rd9863;
	}
	shf.r.wrap.b32 	%r6857, %r6856, %r6855, 14;
	shf.r.wrap.b32 	%r6858, %r6855, %r6856, 14;
	mov.b64 	%rd9887, {%r6858, %r6857};
	shf.r.wrap.b32 	%r6859, %r6856, %r6855, 18;
	shf.r.wrap.b32 	%r6860, %r6855, %r6856, 18;
	mov.b64 	%rd9888, {%r6860, %r6859};
	xor.b64  	%rd9889, %rd9887, %rd9888;
	shf.l.wrap.b32 	%r6861, %r6855, %r6856, 23;
	shf.l.wrap.b32 	%r6862, %r6856, %r6855, 23;
	mov.b64 	%rd9890, {%r6862, %r6861};
	xor.b64  	%rd9891, %rd9889, %rd9890;
	xor.b64  	%rd9892, %rd13866, %rd13867;
	and.b64  	%rd9893, %rd9863, %rd9892;
	xor.b64  	%rd9894, %rd9893, %rd13867;
	add.s64 	%rd9895, %rd9894, %rd13868;
	add.s64 	%rd9896, %rd9895, %rd9891;
	ld.const.u64 	%rd9897, [%rd9849+8];
	add.s64 	%rd9898, %rd9896, %rd9897;
	add.s64 	%rd9899, %rd9898, %rd13860;
	add.s64 	%rd9900, %rd9899, %rd13864;
	and.b64  	%rd9901, %rd9874, %rd13862;
	or.b64  	%rd9902, %rd9874, %rd13862;
	and.b64  	%rd9903, %rd9902, %rd13863;
	or.b64  	%rd9904, %rd9903, %rd9901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6863,%dummy}, %rd9874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6864}, %rd9874;
	}
	shf.r.wrap.b32 	%r6865, %r6864, %r6863, 28;
	shf.r.wrap.b32 	%r6866, %r6863, %r6864, 28;
	mov.b64 	%rd9905, {%r6866, %r6865};
	shf.l.wrap.b32 	%r6867, %r6863, %r6864, 30;
	shf.l.wrap.b32 	%r6868, %r6864, %r6863, 30;
	mov.b64 	%rd9906, {%r6868, %r6867};
	xor.b64  	%rd9907, %rd9905, %rd9906;
	shf.l.wrap.b32 	%r6869, %r6863, %r6864, 25;
	shf.l.wrap.b32 	%r6870, %r6864, %r6863, 25;
	mov.b64 	%rd9908, {%r6870, %r6869};
	xor.b64  	%rd9909, %rd9907, %rd9908;
	add.s64 	%rd9910, %rd9909, %rd9904;
	add.s64 	%rd9911, %rd9910, %rd9899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6871,%dummy}, %rd13861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6872}, %rd13861;
	}
	shf.r.wrap.b32 	%r6873, %r6872, %r6871, 19;
	shf.r.wrap.b32 	%r6874, %r6871, %r6872, 19;
	mov.b64 	%rd9912, {%r6874, %r6873};
	shf.l.wrap.b32 	%r6875, %r6871, %r6872, 3;
	shf.l.wrap.b32 	%r6876, %r6872, %r6871, 3;
	mov.b64 	%rd9913, {%r6876, %r6875};
	xor.b64  	%rd9914, %rd9912, %rd9913;
	shr.u64 	%rd9915, %rd13861, 6;
	xor.b64  	%rd9916, %rd9914, %rd9915;
	add.s64 	%rd9917, %rd13850, %rd13859;
	add.s64 	%rd9918, %rd9917, %rd9916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6877,%dummy}, %rd13858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6878}, %rd13858;
	}
	shf.r.wrap.b32 	%r6879, %r6878, %r6877, 8;
	shf.r.wrap.b32 	%r6880, %r6877, %r6878, 8;
	mov.b64 	%rd9919, {%r6880, %r6879};
	shf.r.wrap.b32 	%r6881, %r6878, %r6877, 1;
	shf.r.wrap.b32 	%r6882, %r6877, %r6878, 1;
	mov.b64 	%rd9920, {%r6882, %r6881};
	xor.b64  	%rd9921, %rd9920, %rd9919;
	shr.u64 	%rd9922, %rd13858, 7;
	xor.b64  	%rd9923, %rd9921, %rd9922;
	add.s64 	%rd13859, %rd9918, %rd9923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6883,%dummy}, %rd9900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6884}, %rd9900;
	}
	shf.r.wrap.b32 	%r6885, %r6884, %r6883, 14;
	shf.r.wrap.b32 	%r6886, %r6883, %r6884, 14;
	mov.b64 	%rd9924, {%r6886, %r6885};
	shf.r.wrap.b32 	%r6887, %r6884, %r6883, 18;
	shf.r.wrap.b32 	%r6888, %r6883, %r6884, 18;
	mov.b64 	%rd9925, {%r6888, %r6887};
	xor.b64  	%rd9926, %rd9924, %rd9925;
	shf.l.wrap.b32 	%r6889, %r6883, %r6884, 23;
	shf.l.wrap.b32 	%r6890, %r6884, %r6883, 23;
	mov.b64 	%rd9927, {%r6890, %r6889};
	xor.b64  	%rd9928, %rd9926, %rd9927;
	xor.b64  	%rd9929, %rd9863, %rd13866;
	and.b64  	%rd9930, %rd9900, %rd9929;
	xor.b64  	%rd9931, %rd9930, %rd13866;
	add.s64 	%rd9932, %rd9931, %rd13867;
	add.s64 	%rd9933, %rd9932, %rd9928;
	ld.const.u64 	%rd9934, [%rd9849+16];
	add.s64 	%rd9935, %rd9933, %rd9934;
	add.s64 	%rd9936, %rd9935, %rd13859;
	add.s64 	%rd9937, %rd9936, %rd13863;
	and.b64  	%rd9938, %rd9911, %rd9874;
	or.b64  	%rd9939, %rd9911, %rd9874;
	and.b64  	%rd9940, %rd9939, %rd13862;
	or.b64  	%rd9941, %rd9940, %rd9938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6891,%dummy}, %rd9911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6892}, %rd9911;
	}
	shf.r.wrap.b32 	%r6893, %r6892, %r6891, 28;
	shf.r.wrap.b32 	%r6894, %r6891, %r6892, 28;
	mov.b64 	%rd9942, {%r6894, %r6893};
	shf.l.wrap.b32 	%r6895, %r6891, %r6892, 30;
	shf.l.wrap.b32 	%r6896, %r6892, %r6891, 30;
	mov.b64 	%rd9943, {%r6896, %r6895};
	xor.b64  	%rd9944, %rd9942, %rd9943;
	shf.l.wrap.b32 	%r6897, %r6891, %r6892, 25;
	shf.l.wrap.b32 	%r6898, %r6892, %r6891, 25;
	mov.b64 	%rd9945, {%r6898, %r6897};
	xor.b64  	%rd9946, %rd9944, %rd9945;
	add.s64 	%rd9947, %rd9946, %rd9941;
	add.s64 	%rd9948, %rd9947, %rd9936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6899,%dummy}, %rd13860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6900}, %rd13860;
	}
	shf.r.wrap.b32 	%r6901, %r6900, %r6899, 19;
	shf.r.wrap.b32 	%r6902, %r6899, %r6900, 19;
	mov.b64 	%rd9949, {%r6902, %r6901};
	shf.l.wrap.b32 	%r6903, %r6899, %r6900, 3;
	shf.l.wrap.b32 	%r6904, %r6900, %r6899, 3;
	mov.b64 	%rd9950, {%r6904, %r6903};
	xor.b64  	%rd9951, %rd9949, %rd9950;
	shr.u64 	%rd9952, %rd13860, 6;
	xor.b64  	%rd9953, %rd9951, %rd9952;
	add.s64 	%rd9954, %rd13849, %rd13858;
	add.s64 	%rd9955, %rd9954, %rd9953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6905,%dummy}, %rd13857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6906}, %rd13857;
	}
	shf.r.wrap.b32 	%r6907, %r6906, %r6905, 8;
	shf.r.wrap.b32 	%r6908, %r6905, %r6906, 8;
	mov.b64 	%rd9956, {%r6908, %r6907};
	shf.r.wrap.b32 	%r6909, %r6906, %r6905, 1;
	shf.r.wrap.b32 	%r6910, %r6905, %r6906, 1;
	mov.b64 	%rd9957, {%r6910, %r6909};
	xor.b64  	%rd9958, %rd9957, %rd9956;
	shr.u64 	%rd9959, %rd13857, 7;
	xor.b64  	%rd9960, %rd9958, %rd9959;
	add.s64 	%rd13858, %rd9955, %rd9960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6911,%dummy}, %rd9937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6912}, %rd9937;
	}
	shf.r.wrap.b32 	%r6913, %r6912, %r6911, 14;
	shf.r.wrap.b32 	%r6914, %r6911, %r6912, 14;
	mov.b64 	%rd9961, {%r6914, %r6913};
	shf.r.wrap.b32 	%r6915, %r6912, %r6911, 18;
	shf.r.wrap.b32 	%r6916, %r6911, %r6912, 18;
	mov.b64 	%rd9962, {%r6916, %r6915};
	xor.b64  	%rd9963, %rd9961, %rd9962;
	shf.l.wrap.b32 	%r6917, %r6911, %r6912, 23;
	shf.l.wrap.b32 	%r6918, %r6912, %r6911, 23;
	mov.b64 	%rd9964, {%r6918, %r6917};
	xor.b64  	%rd9965, %rd9963, %rd9964;
	xor.b64  	%rd9966, %rd9900, %rd9863;
	and.b64  	%rd9967, %rd9937, %rd9966;
	xor.b64  	%rd9968, %rd9967, %rd9863;
	add.s64 	%rd9969, %rd9968, %rd13866;
	add.s64 	%rd9970, %rd9969, %rd9965;
	ld.const.u64 	%rd9971, [%rd9849+24];
	add.s64 	%rd9972, %rd9970, %rd9971;
	add.s64 	%rd9973, %rd9972, %rd13858;
	add.s64 	%rd9974, %rd9973, %rd13862;
	and.b64  	%rd9975, %rd9948, %rd9911;
	or.b64  	%rd9976, %rd9948, %rd9911;
	and.b64  	%rd9977, %rd9976, %rd9874;
	or.b64  	%rd9978, %rd9977, %rd9975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6919,%dummy}, %rd9948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6920}, %rd9948;
	}
	shf.r.wrap.b32 	%r6921, %r6920, %r6919, 28;
	shf.r.wrap.b32 	%r6922, %r6919, %r6920, 28;
	mov.b64 	%rd9979, {%r6922, %r6921};
	shf.l.wrap.b32 	%r6923, %r6919, %r6920, 30;
	shf.l.wrap.b32 	%r6924, %r6920, %r6919, 30;
	mov.b64 	%rd9980, {%r6924, %r6923};
	xor.b64  	%rd9981, %rd9979, %rd9980;
	shf.l.wrap.b32 	%r6925, %r6919, %r6920, 25;
	shf.l.wrap.b32 	%r6926, %r6920, %r6919, 25;
	mov.b64 	%rd9982, {%r6926, %r6925};
	xor.b64  	%rd9983, %rd9981, %rd9982;
	add.s64 	%rd9984, %rd9983, %rd9978;
	add.s64 	%rd9985, %rd9984, %rd9973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6927,%dummy}, %rd13859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6928}, %rd13859;
	}
	shf.r.wrap.b32 	%r6929, %r6928, %r6927, 19;
	shf.r.wrap.b32 	%r6930, %r6927, %r6928, 19;
	mov.b64 	%rd9986, {%r6930, %r6929};
	shf.l.wrap.b32 	%r6931, %r6927, %r6928, 3;
	shf.l.wrap.b32 	%r6932, %r6928, %r6927, 3;
	mov.b64 	%rd9987, {%r6932, %r6931};
	xor.b64  	%rd9988, %rd9986, %rd9987;
	shr.u64 	%rd9989, %rd13859, 6;
	xor.b64  	%rd9990, %rd9988, %rd9989;
	add.s64 	%rd9991, %rd13848, %rd13857;
	add.s64 	%rd9992, %rd9991, %rd9990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6933,%dummy}, %rd13856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6934}, %rd13856;
	}
	shf.r.wrap.b32 	%r6935, %r6934, %r6933, 8;
	shf.r.wrap.b32 	%r6936, %r6933, %r6934, 8;
	mov.b64 	%rd9993, {%r6936, %r6935};
	shf.r.wrap.b32 	%r6937, %r6934, %r6933, 1;
	shf.r.wrap.b32 	%r6938, %r6933, %r6934, 1;
	mov.b64 	%rd9994, {%r6938, %r6937};
	xor.b64  	%rd9995, %rd9994, %rd9993;
	shr.u64 	%rd9996, %rd13856, 7;
	xor.b64  	%rd9997, %rd9995, %rd9996;
	add.s64 	%rd13857, %rd9992, %rd9997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6939,%dummy}, %rd9974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6940}, %rd9974;
	}
	shf.r.wrap.b32 	%r6941, %r6940, %r6939, 14;
	shf.r.wrap.b32 	%r6942, %r6939, %r6940, 14;
	mov.b64 	%rd9998, {%r6942, %r6941};
	shf.r.wrap.b32 	%r6943, %r6940, %r6939, 18;
	shf.r.wrap.b32 	%r6944, %r6939, %r6940, 18;
	mov.b64 	%rd9999, {%r6944, %r6943};
	xor.b64  	%rd10000, %rd9998, %rd9999;
	shf.l.wrap.b32 	%r6945, %r6939, %r6940, 23;
	shf.l.wrap.b32 	%r6946, %r6940, %r6939, 23;
	mov.b64 	%rd10001, {%r6946, %r6945};
	xor.b64  	%rd10002, %rd10000, %rd10001;
	xor.b64  	%rd10003, %rd9937, %rd9900;
	and.b64  	%rd10004, %rd9974, %rd10003;
	xor.b64  	%rd10005, %rd10004, %rd9900;
	add.s64 	%rd10006, %rd10005, %rd9863;
	add.s64 	%rd10007, %rd10006, %rd10002;
	ld.const.u64 	%rd10008, [%rd9849+32];
	add.s64 	%rd10009, %rd10007, %rd10008;
	add.s64 	%rd10010, %rd10009, %rd13857;
	add.s64 	%rd10011, %rd10010, %rd9874;
	and.b64  	%rd10012, %rd9985, %rd9948;
	or.b64  	%rd10013, %rd9985, %rd9948;
	and.b64  	%rd10014, %rd10013, %rd9911;
	or.b64  	%rd10015, %rd10014, %rd10012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6947,%dummy}, %rd9985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6948}, %rd9985;
	}
	shf.r.wrap.b32 	%r6949, %r6948, %r6947, 28;
	shf.r.wrap.b32 	%r6950, %r6947, %r6948, 28;
	mov.b64 	%rd10016, {%r6950, %r6949};
	shf.l.wrap.b32 	%r6951, %r6947, %r6948, 30;
	shf.l.wrap.b32 	%r6952, %r6948, %r6947, 30;
	mov.b64 	%rd10017, {%r6952, %r6951};
	xor.b64  	%rd10018, %rd10016, %rd10017;
	shf.l.wrap.b32 	%r6953, %r6947, %r6948, 25;
	shf.l.wrap.b32 	%r6954, %r6948, %r6947, 25;
	mov.b64 	%rd10019, {%r6954, %r6953};
	xor.b64  	%rd10020, %rd10018, %rd10019;
	add.s64 	%rd10021, %rd10020, %rd10015;
	add.s64 	%rd10022, %rd10021, %rd10010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6955,%dummy}, %rd13858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6956}, %rd13858;
	}
	shf.r.wrap.b32 	%r6957, %r6956, %r6955, 19;
	shf.r.wrap.b32 	%r6958, %r6955, %r6956, 19;
	mov.b64 	%rd10023, {%r6958, %r6957};
	shf.l.wrap.b32 	%r6959, %r6955, %r6956, 3;
	shf.l.wrap.b32 	%r6960, %r6956, %r6955, 3;
	mov.b64 	%rd10024, {%r6960, %r6959};
	xor.b64  	%rd10025, %rd10023, %rd10024;
	shr.u64 	%rd10026, %rd13858, 6;
	xor.b64  	%rd10027, %rd10025, %rd10026;
	add.s64 	%rd10028, %rd13847, %rd13856;
	add.s64 	%rd10029, %rd10028, %rd10027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6961,%dummy}, %rd13855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6962}, %rd13855;
	}
	shf.r.wrap.b32 	%r6963, %r6962, %r6961, 8;
	shf.r.wrap.b32 	%r6964, %r6961, %r6962, 8;
	mov.b64 	%rd10030, {%r6964, %r6963};
	shf.r.wrap.b32 	%r6965, %r6962, %r6961, 1;
	shf.r.wrap.b32 	%r6966, %r6961, %r6962, 1;
	mov.b64 	%rd10031, {%r6966, %r6965};
	xor.b64  	%rd10032, %rd10031, %rd10030;
	shr.u64 	%rd10033, %rd13855, 7;
	xor.b64  	%rd10034, %rd10032, %rd10033;
	add.s64 	%rd13856, %rd10029, %rd10034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6967,%dummy}, %rd10011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6968}, %rd10011;
	}
	shf.r.wrap.b32 	%r6969, %r6968, %r6967, 14;
	shf.r.wrap.b32 	%r6970, %r6967, %r6968, 14;
	mov.b64 	%rd10035, {%r6970, %r6969};
	shf.r.wrap.b32 	%r6971, %r6968, %r6967, 18;
	shf.r.wrap.b32 	%r6972, %r6967, %r6968, 18;
	mov.b64 	%rd10036, {%r6972, %r6971};
	xor.b64  	%rd10037, %rd10035, %rd10036;
	shf.l.wrap.b32 	%r6973, %r6967, %r6968, 23;
	shf.l.wrap.b32 	%r6974, %r6968, %r6967, 23;
	mov.b64 	%rd10038, {%r6974, %r6973};
	xor.b64  	%rd10039, %rd10037, %rd10038;
	xor.b64  	%rd10040, %rd9974, %rd9937;
	and.b64  	%rd10041, %rd10011, %rd10040;
	xor.b64  	%rd10042, %rd10041, %rd9937;
	add.s64 	%rd10043, %rd10042, %rd9900;
	add.s64 	%rd10044, %rd10043, %rd10039;
	ld.const.u64 	%rd10045, [%rd9849+40];
	add.s64 	%rd10046, %rd10044, %rd10045;
	add.s64 	%rd10047, %rd10046, %rd13856;
	add.s64 	%rd10048, %rd10047, %rd9911;
	and.b64  	%rd10049, %rd10022, %rd9985;
	or.b64  	%rd10050, %rd10022, %rd9985;
	and.b64  	%rd10051, %rd10050, %rd9948;
	or.b64  	%rd10052, %rd10051, %rd10049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6975,%dummy}, %rd10022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6976}, %rd10022;
	}
	shf.r.wrap.b32 	%r6977, %r6976, %r6975, 28;
	shf.r.wrap.b32 	%r6978, %r6975, %r6976, 28;
	mov.b64 	%rd10053, {%r6978, %r6977};
	shf.l.wrap.b32 	%r6979, %r6975, %r6976, 30;
	shf.l.wrap.b32 	%r6980, %r6976, %r6975, 30;
	mov.b64 	%rd10054, {%r6980, %r6979};
	xor.b64  	%rd10055, %rd10053, %rd10054;
	shf.l.wrap.b32 	%r6981, %r6975, %r6976, 25;
	shf.l.wrap.b32 	%r6982, %r6976, %r6975, 25;
	mov.b64 	%rd10056, {%r6982, %r6981};
	xor.b64  	%rd10057, %rd10055, %rd10056;
	add.s64 	%rd10058, %rd10057, %rd10052;
	add.s64 	%rd10059, %rd10058, %rd10047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6983,%dummy}, %rd13857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6984}, %rd13857;
	}
	shf.r.wrap.b32 	%r6985, %r6984, %r6983, 19;
	shf.r.wrap.b32 	%r6986, %r6983, %r6984, 19;
	mov.b64 	%rd10060, {%r6986, %r6985};
	shf.l.wrap.b32 	%r6987, %r6983, %r6984, 3;
	shf.l.wrap.b32 	%r6988, %r6984, %r6983, 3;
	mov.b64 	%rd10061, {%r6988, %r6987};
	xor.b64  	%rd10062, %rd10060, %rd10061;
	shr.u64 	%rd10063, %rd13857, 6;
	xor.b64  	%rd10064, %rd10062, %rd10063;
	add.s64 	%rd10065, %rd13846, %rd13855;
	add.s64 	%rd10066, %rd10065, %rd10064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6989,%dummy}, %rd13854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6990}, %rd13854;
	}
	shf.r.wrap.b32 	%r6991, %r6990, %r6989, 8;
	shf.r.wrap.b32 	%r6992, %r6989, %r6990, 8;
	mov.b64 	%rd10067, {%r6992, %r6991};
	shf.r.wrap.b32 	%r6993, %r6990, %r6989, 1;
	shf.r.wrap.b32 	%r6994, %r6989, %r6990, 1;
	mov.b64 	%rd10068, {%r6994, %r6993};
	xor.b64  	%rd10069, %rd10068, %rd10067;
	shr.u64 	%rd10070, %rd13854, 7;
	xor.b64  	%rd10071, %rd10069, %rd10070;
	add.s64 	%rd13855, %rd10066, %rd10071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6995,%dummy}, %rd10048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6996}, %rd10048;
	}
	shf.r.wrap.b32 	%r6997, %r6996, %r6995, 14;
	shf.r.wrap.b32 	%r6998, %r6995, %r6996, 14;
	mov.b64 	%rd10072, {%r6998, %r6997};
	shf.r.wrap.b32 	%r6999, %r6996, %r6995, 18;
	shf.r.wrap.b32 	%r7000, %r6995, %r6996, 18;
	mov.b64 	%rd10073, {%r7000, %r6999};
	xor.b64  	%rd10074, %rd10072, %rd10073;
	shf.l.wrap.b32 	%r7001, %r6995, %r6996, 23;
	shf.l.wrap.b32 	%r7002, %r6996, %r6995, 23;
	mov.b64 	%rd10075, {%r7002, %r7001};
	xor.b64  	%rd10076, %rd10074, %rd10075;
	xor.b64  	%rd10077, %rd10011, %rd9974;
	and.b64  	%rd10078, %rd10048, %rd10077;
	xor.b64  	%rd10079, %rd10078, %rd9974;
	add.s64 	%rd10080, %rd10079, %rd9937;
	add.s64 	%rd10081, %rd10080, %rd10076;
	ld.const.u64 	%rd10082, [%rd9849+48];
	add.s64 	%rd10083, %rd10081, %rd10082;
	add.s64 	%rd10084, %rd10083, %rd13855;
	add.s64 	%rd10085, %rd10084, %rd9948;
	and.b64  	%rd10086, %rd10059, %rd10022;
	or.b64  	%rd10087, %rd10059, %rd10022;
	and.b64  	%rd10088, %rd10087, %rd9985;
	or.b64  	%rd10089, %rd10088, %rd10086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7003,%dummy}, %rd10059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7004}, %rd10059;
	}
	shf.r.wrap.b32 	%r7005, %r7004, %r7003, 28;
	shf.r.wrap.b32 	%r7006, %r7003, %r7004, 28;
	mov.b64 	%rd10090, {%r7006, %r7005};
	shf.l.wrap.b32 	%r7007, %r7003, %r7004, 30;
	shf.l.wrap.b32 	%r7008, %r7004, %r7003, 30;
	mov.b64 	%rd10091, {%r7008, %r7007};
	xor.b64  	%rd10092, %rd10090, %rd10091;
	shf.l.wrap.b32 	%r7009, %r7003, %r7004, 25;
	shf.l.wrap.b32 	%r7010, %r7004, %r7003, 25;
	mov.b64 	%rd10093, {%r7010, %r7009};
	xor.b64  	%rd10094, %rd10092, %rd10093;
	add.s64 	%rd10095, %rd10094, %rd10089;
	add.s64 	%rd10096, %rd10095, %rd10084;
	add.s64 	%rd10097, %rd13861, %rd13854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7011,%dummy}, %rd13856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7012}, %rd13856;
	}
	shf.r.wrap.b32 	%r7013, %r7012, %r7011, 19;
	shf.r.wrap.b32 	%r7014, %r7011, %r7012, 19;
	mov.b64 	%rd10098, {%r7014, %r7013};
	shf.l.wrap.b32 	%r7015, %r7011, %r7012, 3;
	shf.l.wrap.b32 	%r7016, %r7012, %r7011, 3;
	mov.b64 	%rd10099, {%r7016, %r7015};
	xor.b64  	%rd10100, %rd10098, %rd10099;
	shr.u64 	%rd10101, %rd13856, 6;
	xor.b64  	%rd10102, %rd10100, %rd10101;
	add.s64 	%rd10103, %rd10097, %rd10102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7017,%dummy}, %rd13853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7018}, %rd13853;
	}
	shf.r.wrap.b32 	%r7019, %r7018, %r7017, 8;
	shf.r.wrap.b32 	%r7020, %r7017, %r7018, 8;
	mov.b64 	%rd10104, {%r7020, %r7019};
	shf.r.wrap.b32 	%r7021, %r7018, %r7017, 1;
	shf.r.wrap.b32 	%r7022, %r7017, %r7018, 1;
	mov.b64 	%rd10105, {%r7022, %r7021};
	xor.b64  	%rd10106, %rd10105, %rd10104;
	shr.u64 	%rd10107, %rd13853, 7;
	xor.b64  	%rd10108, %rd10106, %rd10107;
	add.s64 	%rd13854, %rd10103, %rd10108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7023,%dummy}, %rd10085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7024}, %rd10085;
	}
	shf.r.wrap.b32 	%r7025, %r7024, %r7023, 14;
	shf.r.wrap.b32 	%r7026, %r7023, %r7024, 14;
	mov.b64 	%rd10109, {%r7026, %r7025};
	shf.r.wrap.b32 	%r7027, %r7024, %r7023, 18;
	shf.r.wrap.b32 	%r7028, %r7023, %r7024, 18;
	mov.b64 	%rd10110, {%r7028, %r7027};
	xor.b64  	%rd10111, %rd10109, %rd10110;
	shf.l.wrap.b32 	%r7029, %r7023, %r7024, 23;
	shf.l.wrap.b32 	%r7030, %r7024, %r7023, 23;
	mov.b64 	%rd10112, {%r7030, %r7029};
	xor.b64  	%rd10113, %rd10111, %rd10112;
	xor.b64  	%rd10114, %rd10048, %rd10011;
	and.b64  	%rd10115, %rd10085, %rd10114;
	xor.b64  	%rd10116, %rd10115, %rd10011;
	add.s64 	%rd10117, %rd10116, %rd9974;
	add.s64 	%rd10118, %rd10117, %rd10113;
	ld.const.u64 	%rd10119, [%rd9849+56];
	add.s64 	%rd10120, %rd10118, %rd10119;
	add.s64 	%rd10121, %rd10120, %rd13854;
	add.s64 	%rd10122, %rd10121, %rd9985;
	and.b64  	%rd10123, %rd10096, %rd10059;
	or.b64  	%rd10124, %rd10096, %rd10059;
	and.b64  	%rd10125, %rd10124, %rd10022;
	or.b64  	%rd10126, %rd10125, %rd10123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7031,%dummy}, %rd10096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7032}, %rd10096;
	}
	shf.r.wrap.b32 	%r7033, %r7032, %r7031, 28;
	shf.r.wrap.b32 	%r7034, %r7031, %r7032, 28;
	mov.b64 	%rd10127, {%r7034, %r7033};
	shf.l.wrap.b32 	%r7035, %r7031, %r7032, 30;
	shf.l.wrap.b32 	%r7036, %r7032, %r7031, 30;
	mov.b64 	%rd10128, {%r7036, %r7035};
	xor.b64  	%rd10129, %rd10127, %rd10128;
	shf.l.wrap.b32 	%r7037, %r7031, %r7032, 25;
	shf.l.wrap.b32 	%r7038, %r7032, %r7031, 25;
	mov.b64 	%rd10130, {%r7038, %r7037};
	xor.b64  	%rd10131, %rd10129, %rd10130;
	add.s64 	%rd10132, %rd10131, %rd10126;
	add.s64 	%rd10133, %rd10132, %rd10121;
	add.s64 	%rd10134, %rd13860, %rd13853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7039,%dummy}, %rd13855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7040}, %rd13855;
	}
	shf.r.wrap.b32 	%r7041, %r7040, %r7039, 19;
	shf.r.wrap.b32 	%r7042, %r7039, %r7040, 19;
	mov.b64 	%rd10135, {%r7042, %r7041};
	shf.l.wrap.b32 	%r7043, %r7039, %r7040, 3;
	shf.l.wrap.b32 	%r7044, %r7040, %r7039, 3;
	mov.b64 	%rd10136, {%r7044, %r7043};
	xor.b64  	%rd10137, %rd10135, %rd10136;
	shr.u64 	%rd10138, %rd13855, 6;
	xor.b64  	%rd10139, %rd10137, %rd10138;
	add.s64 	%rd10140, %rd10134, %rd10139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7045,%dummy}, %rd13852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7046}, %rd13852;
	}
	shf.r.wrap.b32 	%r7047, %r7046, %r7045, 8;
	shf.r.wrap.b32 	%r7048, %r7045, %r7046, 8;
	mov.b64 	%rd10141, {%r7048, %r7047};
	shf.r.wrap.b32 	%r7049, %r7046, %r7045, 1;
	shf.r.wrap.b32 	%r7050, %r7045, %r7046, 1;
	mov.b64 	%rd10142, {%r7050, %r7049};
	xor.b64  	%rd10143, %rd10142, %rd10141;
	shr.u64 	%rd10144, %rd13852, 7;
	xor.b64  	%rd10145, %rd10143, %rd10144;
	add.s64 	%rd13853, %rd10140, %rd10145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7051,%dummy}, %rd10122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7052}, %rd10122;
	}
	shf.r.wrap.b32 	%r7053, %r7052, %r7051, 14;
	shf.r.wrap.b32 	%r7054, %r7051, %r7052, 14;
	mov.b64 	%rd10146, {%r7054, %r7053};
	shf.r.wrap.b32 	%r7055, %r7052, %r7051, 18;
	shf.r.wrap.b32 	%r7056, %r7051, %r7052, 18;
	mov.b64 	%rd10147, {%r7056, %r7055};
	xor.b64  	%rd10148, %rd10146, %rd10147;
	shf.l.wrap.b32 	%r7057, %r7051, %r7052, 23;
	shf.l.wrap.b32 	%r7058, %r7052, %r7051, 23;
	mov.b64 	%rd10149, {%r7058, %r7057};
	xor.b64  	%rd10150, %rd10148, %rd10149;
	xor.b64  	%rd10151, %rd10085, %rd10048;
	and.b64  	%rd10152, %rd10122, %rd10151;
	xor.b64  	%rd10153, %rd10152, %rd10048;
	add.s64 	%rd10154, %rd10153, %rd10011;
	add.s64 	%rd10155, %rd10154, %rd10150;
	ld.const.u64 	%rd10156, [%rd9849+64];
	add.s64 	%rd10157, %rd10155, %rd10156;
	add.s64 	%rd10158, %rd10157, %rd13853;
	add.s64 	%rd10159, %rd10158, %rd10022;
	and.b64  	%rd10160, %rd10133, %rd10096;
	or.b64  	%rd10161, %rd10133, %rd10096;
	and.b64  	%rd10162, %rd10161, %rd10059;
	or.b64  	%rd10163, %rd10162, %rd10160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7059,%dummy}, %rd10133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7060}, %rd10133;
	}
	shf.r.wrap.b32 	%r7061, %r7060, %r7059, 28;
	shf.r.wrap.b32 	%r7062, %r7059, %r7060, 28;
	mov.b64 	%rd10164, {%r7062, %r7061};
	shf.l.wrap.b32 	%r7063, %r7059, %r7060, 30;
	shf.l.wrap.b32 	%r7064, %r7060, %r7059, 30;
	mov.b64 	%rd10165, {%r7064, %r7063};
	xor.b64  	%rd10166, %rd10164, %rd10165;
	shf.l.wrap.b32 	%r7065, %r7059, %r7060, 25;
	shf.l.wrap.b32 	%r7066, %r7060, %r7059, 25;
	mov.b64 	%rd10167, {%r7066, %r7065};
	xor.b64  	%rd10168, %rd10166, %rd10167;
	add.s64 	%rd10169, %rd10168, %rd10163;
	add.s64 	%rd10170, %rd10169, %rd10158;
	add.s64 	%rd10171, %rd13859, %rd13852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7067,%dummy}, %rd13854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7068}, %rd13854;
	}
	shf.r.wrap.b32 	%r7069, %r7068, %r7067, 19;
	shf.r.wrap.b32 	%r7070, %r7067, %r7068, 19;
	mov.b64 	%rd10172, {%r7070, %r7069};
	shf.l.wrap.b32 	%r7071, %r7067, %r7068, 3;
	shf.l.wrap.b32 	%r7072, %r7068, %r7067, 3;
	mov.b64 	%rd10173, {%r7072, %r7071};
	xor.b64  	%rd10174, %rd10172, %rd10173;
	shr.u64 	%rd10175, %rd13854, 6;
	xor.b64  	%rd10176, %rd10174, %rd10175;
	add.s64 	%rd10177, %rd10171, %rd10176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7073,%dummy}, %rd13851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7074}, %rd13851;
	}
	shf.r.wrap.b32 	%r7075, %r7074, %r7073, 8;
	shf.r.wrap.b32 	%r7076, %r7073, %r7074, 8;
	mov.b64 	%rd10178, {%r7076, %r7075};
	shf.r.wrap.b32 	%r7077, %r7074, %r7073, 1;
	shf.r.wrap.b32 	%r7078, %r7073, %r7074, 1;
	mov.b64 	%rd10179, {%r7078, %r7077};
	xor.b64  	%rd10180, %rd10179, %rd10178;
	shr.u64 	%rd10181, %rd13851, 7;
	xor.b64  	%rd10182, %rd10180, %rd10181;
	add.s64 	%rd13852, %rd10177, %rd10182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7079,%dummy}, %rd10159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7080}, %rd10159;
	}
	shf.r.wrap.b32 	%r7081, %r7080, %r7079, 14;
	shf.r.wrap.b32 	%r7082, %r7079, %r7080, 14;
	mov.b64 	%rd10183, {%r7082, %r7081};
	shf.r.wrap.b32 	%r7083, %r7080, %r7079, 18;
	shf.r.wrap.b32 	%r7084, %r7079, %r7080, 18;
	mov.b64 	%rd10184, {%r7084, %r7083};
	xor.b64  	%rd10185, %rd10183, %rd10184;
	shf.l.wrap.b32 	%r7085, %r7079, %r7080, 23;
	shf.l.wrap.b32 	%r7086, %r7080, %r7079, 23;
	mov.b64 	%rd10186, {%r7086, %r7085};
	xor.b64  	%rd10187, %rd10185, %rd10186;
	xor.b64  	%rd10188, %rd10122, %rd10085;
	and.b64  	%rd10189, %rd10159, %rd10188;
	xor.b64  	%rd10190, %rd10189, %rd10085;
	add.s64 	%rd10191, %rd10190, %rd10048;
	add.s64 	%rd10192, %rd10191, %rd10187;
	ld.const.u64 	%rd10193, [%rd9849+72];
	add.s64 	%rd10194, %rd10192, %rd10193;
	add.s64 	%rd10195, %rd10194, %rd13852;
	add.s64 	%rd10196, %rd10195, %rd10059;
	and.b64  	%rd10197, %rd10170, %rd10133;
	or.b64  	%rd10198, %rd10170, %rd10133;
	and.b64  	%rd10199, %rd10198, %rd10096;
	or.b64  	%rd10200, %rd10199, %rd10197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7087,%dummy}, %rd10170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7088}, %rd10170;
	}
	shf.r.wrap.b32 	%r7089, %r7088, %r7087, 28;
	shf.r.wrap.b32 	%r7090, %r7087, %r7088, 28;
	mov.b64 	%rd10201, {%r7090, %r7089};
	shf.l.wrap.b32 	%r7091, %r7087, %r7088, 30;
	shf.l.wrap.b32 	%r7092, %r7088, %r7087, 30;
	mov.b64 	%rd10202, {%r7092, %r7091};
	xor.b64  	%rd10203, %rd10201, %rd10202;
	shf.l.wrap.b32 	%r7093, %r7087, %r7088, 25;
	shf.l.wrap.b32 	%r7094, %r7088, %r7087, 25;
	mov.b64 	%rd10204, {%r7094, %r7093};
	xor.b64  	%rd10205, %rd10203, %rd10204;
	add.s64 	%rd10206, %rd10205, %rd10200;
	add.s64 	%rd10207, %rd10206, %rd10195;
	add.s64 	%rd10208, %rd13858, %rd13851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7095,%dummy}, %rd13853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7096}, %rd13853;
	}
	shf.r.wrap.b32 	%r7097, %r7096, %r7095, 19;
	shf.r.wrap.b32 	%r7098, %r7095, %r7096, 19;
	mov.b64 	%rd10209, {%r7098, %r7097};
	shf.l.wrap.b32 	%r7099, %r7095, %r7096, 3;
	shf.l.wrap.b32 	%r7100, %r7096, %r7095, 3;
	mov.b64 	%rd10210, {%r7100, %r7099};
	xor.b64  	%rd10211, %rd10209, %rd10210;
	shr.u64 	%rd10212, %rd13853, 6;
	xor.b64  	%rd10213, %rd10211, %rd10212;
	add.s64 	%rd10214, %rd10208, %rd10213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7101,%dummy}, %rd13850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7102}, %rd13850;
	}
	shf.r.wrap.b32 	%r7103, %r7102, %r7101, 8;
	shf.r.wrap.b32 	%r7104, %r7101, %r7102, 8;
	mov.b64 	%rd10215, {%r7104, %r7103};
	shf.r.wrap.b32 	%r7105, %r7102, %r7101, 1;
	shf.r.wrap.b32 	%r7106, %r7101, %r7102, 1;
	mov.b64 	%rd10216, {%r7106, %r7105};
	xor.b64  	%rd10217, %rd10216, %rd10215;
	shr.u64 	%rd10218, %rd13850, 7;
	xor.b64  	%rd10219, %rd10217, %rd10218;
	add.s64 	%rd13851, %rd10214, %rd10219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7107,%dummy}, %rd10196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7108}, %rd10196;
	}
	shf.r.wrap.b32 	%r7109, %r7108, %r7107, 14;
	shf.r.wrap.b32 	%r7110, %r7107, %r7108, 14;
	mov.b64 	%rd10220, {%r7110, %r7109};
	shf.r.wrap.b32 	%r7111, %r7108, %r7107, 18;
	shf.r.wrap.b32 	%r7112, %r7107, %r7108, 18;
	mov.b64 	%rd10221, {%r7112, %r7111};
	xor.b64  	%rd10222, %rd10220, %rd10221;
	shf.l.wrap.b32 	%r7113, %r7107, %r7108, 23;
	shf.l.wrap.b32 	%r7114, %r7108, %r7107, 23;
	mov.b64 	%rd10223, {%r7114, %r7113};
	xor.b64  	%rd10224, %rd10222, %rd10223;
	xor.b64  	%rd10225, %rd10159, %rd10122;
	and.b64  	%rd10226, %rd10196, %rd10225;
	xor.b64  	%rd10227, %rd10226, %rd10122;
	add.s64 	%rd10228, %rd10227, %rd10085;
	add.s64 	%rd10229, %rd10228, %rd10224;
	ld.const.u64 	%rd10230, [%rd9849+80];
	add.s64 	%rd10231, %rd10229, %rd10230;
	add.s64 	%rd10232, %rd10231, %rd13851;
	add.s64 	%rd10233, %rd10232, %rd10096;
	and.b64  	%rd10234, %rd10207, %rd10170;
	or.b64  	%rd10235, %rd10207, %rd10170;
	and.b64  	%rd10236, %rd10235, %rd10133;
	or.b64  	%rd10237, %rd10236, %rd10234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7115,%dummy}, %rd10207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7116}, %rd10207;
	}
	shf.r.wrap.b32 	%r7117, %r7116, %r7115, 28;
	shf.r.wrap.b32 	%r7118, %r7115, %r7116, 28;
	mov.b64 	%rd10238, {%r7118, %r7117};
	shf.l.wrap.b32 	%r7119, %r7115, %r7116, 30;
	shf.l.wrap.b32 	%r7120, %r7116, %r7115, 30;
	mov.b64 	%rd10239, {%r7120, %r7119};
	xor.b64  	%rd10240, %rd10238, %rd10239;
	shf.l.wrap.b32 	%r7121, %r7115, %r7116, 25;
	shf.l.wrap.b32 	%r7122, %r7116, %r7115, 25;
	mov.b64 	%rd10241, {%r7122, %r7121};
	xor.b64  	%rd10242, %rd10240, %rd10241;
	add.s64 	%rd10243, %rd10242, %rd10237;
	add.s64 	%rd10244, %rd10243, %rd10232;
	add.s64 	%rd10245, %rd13857, %rd13850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7123,%dummy}, %rd13852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7124}, %rd13852;
	}
	shf.r.wrap.b32 	%r7125, %r7124, %r7123, 19;
	shf.r.wrap.b32 	%r7126, %r7123, %r7124, 19;
	mov.b64 	%rd10246, {%r7126, %r7125};
	shf.l.wrap.b32 	%r7127, %r7123, %r7124, 3;
	shf.l.wrap.b32 	%r7128, %r7124, %r7123, 3;
	mov.b64 	%rd10247, {%r7128, %r7127};
	xor.b64  	%rd10248, %rd10246, %rd10247;
	shr.u64 	%rd10249, %rd13852, 6;
	xor.b64  	%rd10250, %rd10248, %rd10249;
	add.s64 	%rd10251, %rd10245, %rd10250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7129,%dummy}, %rd13849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7130}, %rd13849;
	}
	shf.r.wrap.b32 	%r7131, %r7130, %r7129, 8;
	shf.r.wrap.b32 	%r7132, %r7129, %r7130, 8;
	mov.b64 	%rd10252, {%r7132, %r7131};
	shf.r.wrap.b32 	%r7133, %r7130, %r7129, 1;
	shf.r.wrap.b32 	%r7134, %r7129, %r7130, 1;
	mov.b64 	%rd10253, {%r7134, %r7133};
	xor.b64  	%rd10254, %rd10253, %rd10252;
	shr.u64 	%rd10255, %rd13849, 7;
	xor.b64  	%rd10256, %rd10254, %rd10255;
	add.s64 	%rd13850, %rd10251, %rd10256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7135,%dummy}, %rd10233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7136}, %rd10233;
	}
	shf.r.wrap.b32 	%r7137, %r7136, %r7135, 14;
	shf.r.wrap.b32 	%r7138, %r7135, %r7136, 14;
	mov.b64 	%rd10257, {%r7138, %r7137};
	shf.r.wrap.b32 	%r7139, %r7136, %r7135, 18;
	shf.r.wrap.b32 	%r7140, %r7135, %r7136, 18;
	mov.b64 	%rd10258, {%r7140, %r7139};
	xor.b64  	%rd10259, %rd10257, %rd10258;
	shf.l.wrap.b32 	%r7141, %r7135, %r7136, 23;
	shf.l.wrap.b32 	%r7142, %r7136, %r7135, 23;
	mov.b64 	%rd10260, {%r7142, %r7141};
	xor.b64  	%rd10261, %rd10259, %rd10260;
	xor.b64  	%rd10262, %rd10196, %rd10159;
	and.b64  	%rd10263, %rd10233, %rd10262;
	xor.b64  	%rd10264, %rd10263, %rd10159;
	add.s64 	%rd10265, %rd10264, %rd10122;
	add.s64 	%rd10266, %rd10265, %rd10261;
	ld.const.u64 	%rd10267, [%rd9849+88];
	add.s64 	%rd10268, %rd10266, %rd10267;
	add.s64 	%rd10269, %rd10268, %rd13850;
	add.s64 	%rd10270, %rd10269, %rd10133;
	and.b64  	%rd10271, %rd10244, %rd10207;
	or.b64  	%rd10272, %rd10244, %rd10207;
	and.b64  	%rd10273, %rd10272, %rd10170;
	or.b64  	%rd10274, %rd10273, %rd10271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7143,%dummy}, %rd10244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7144}, %rd10244;
	}
	shf.r.wrap.b32 	%r7145, %r7144, %r7143, 28;
	shf.r.wrap.b32 	%r7146, %r7143, %r7144, 28;
	mov.b64 	%rd10275, {%r7146, %r7145};
	shf.l.wrap.b32 	%r7147, %r7143, %r7144, 30;
	shf.l.wrap.b32 	%r7148, %r7144, %r7143, 30;
	mov.b64 	%rd10276, {%r7148, %r7147};
	xor.b64  	%rd10277, %rd10275, %rd10276;
	shf.l.wrap.b32 	%r7149, %r7143, %r7144, 25;
	shf.l.wrap.b32 	%r7150, %r7144, %r7143, 25;
	mov.b64 	%rd10278, {%r7150, %r7149};
	xor.b64  	%rd10279, %rd10277, %rd10278;
	add.s64 	%rd10280, %rd10279, %rd10274;
	add.s64 	%rd10281, %rd10280, %rd10269;
	add.s64 	%rd10282, %rd13856, %rd13849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7151,%dummy}, %rd13851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7152}, %rd13851;
	}
	shf.r.wrap.b32 	%r7153, %r7152, %r7151, 19;
	shf.r.wrap.b32 	%r7154, %r7151, %r7152, 19;
	mov.b64 	%rd10283, {%r7154, %r7153};
	shf.l.wrap.b32 	%r7155, %r7151, %r7152, 3;
	shf.l.wrap.b32 	%r7156, %r7152, %r7151, 3;
	mov.b64 	%rd10284, {%r7156, %r7155};
	xor.b64  	%rd10285, %rd10283, %rd10284;
	shr.u64 	%rd10286, %rd13851, 6;
	xor.b64  	%rd10287, %rd10285, %rd10286;
	add.s64 	%rd10288, %rd10282, %rd10287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7157,%dummy}, %rd13848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7158}, %rd13848;
	}
	shf.r.wrap.b32 	%r7159, %r7158, %r7157, 8;
	shf.r.wrap.b32 	%r7160, %r7157, %r7158, 8;
	mov.b64 	%rd10289, {%r7160, %r7159};
	shf.r.wrap.b32 	%r7161, %r7158, %r7157, 1;
	shf.r.wrap.b32 	%r7162, %r7157, %r7158, 1;
	mov.b64 	%rd10290, {%r7162, %r7161};
	xor.b64  	%rd10291, %rd10290, %rd10289;
	shr.u64 	%rd10292, %rd13848, 7;
	xor.b64  	%rd10293, %rd10291, %rd10292;
	add.s64 	%rd13849, %rd10288, %rd10293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7163,%dummy}, %rd10270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7164}, %rd10270;
	}
	shf.r.wrap.b32 	%r7165, %r7164, %r7163, 14;
	shf.r.wrap.b32 	%r7166, %r7163, %r7164, 14;
	mov.b64 	%rd10294, {%r7166, %r7165};
	shf.r.wrap.b32 	%r7167, %r7164, %r7163, 18;
	shf.r.wrap.b32 	%r7168, %r7163, %r7164, 18;
	mov.b64 	%rd10295, {%r7168, %r7167};
	xor.b64  	%rd10296, %rd10294, %rd10295;
	shf.l.wrap.b32 	%r7169, %r7163, %r7164, 23;
	shf.l.wrap.b32 	%r7170, %r7164, %r7163, 23;
	mov.b64 	%rd10297, {%r7170, %r7169};
	xor.b64  	%rd10298, %rd10296, %rd10297;
	xor.b64  	%rd10299, %rd10233, %rd10196;
	and.b64  	%rd10300, %rd10270, %rd10299;
	xor.b64  	%rd10301, %rd10300, %rd10196;
	add.s64 	%rd10302, %rd10301, %rd10159;
	add.s64 	%rd10303, %rd10302, %rd10298;
	ld.const.u64 	%rd10304, [%rd9849+96];
	add.s64 	%rd10305, %rd10303, %rd10304;
	add.s64 	%rd10306, %rd10305, %rd13849;
	add.s64 	%rd13869, %rd10306, %rd10170;
	and.b64  	%rd10307, %rd10281, %rd10244;
	or.b64  	%rd10308, %rd10281, %rd10244;
	and.b64  	%rd10309, %rd10308, %rd10207;
	or.b64  	%rd10310, %rd10309, %rd10307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7171,%dummy}, %rd10281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7172}, %rd10281;
	}
	shf.r.wrap.b32 	%r7173, %r7172, %r7171, 28;
	shf.r.wrap.b32 	%r7174, %r7171, %r7172, 28;
	mov.b64 	%rd10311, {%r7174, %r7173};
	shf.l.wrap.b32 	%r7175, %r7171, %r7172, 30;
	shf.l.wrap.b32 	%r7176, %r7172, %r7171, 30;
	mov.b64 	%rd10312, {%r7176, %r7175};
	xor.b64  	%rd10313, %rd10311, %rd10312;
	shf.l.wrap.b32 	%r7177, %r7171, %r7172, 25;
	shf.l.wrap.b32 	%r7178, %r7172, %r7171, 25;
	mov.b64 	%rd10314, {%r7178, %r7177};
	xor.b64  	%rd10315, %rd10313, %rd10314;
	add.s64 	%rd10316, %rd10315, %rd10310;
	add.s64 	%rd13865, %rd10316, %rd10306;
	add.s64 	%rd10317, %rd13855, %rd13848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7179,%dummy}, %rd13850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7180}, %rd13850;
	}
	shf.r.wrap.b32 	%r7181, %r7180, %r7179, 19;
	shf.r.wrap.b32 	%r7182, %r7179, %r7180, 19;
	mov.b64 	%rd10318, {%r7182, %r7181};
	shf.l.wrap.b32 	%r7183, %r7179, %r7180, 3;
	shf.l.wrap.b32 	%r7184, %r7180, %r7179, 3;
	mov.b64 	%rd10319, {%r7184, %r7183};
	xor.b64  	%rd10320, %rd10318, %rd10319;
	shr.u64 	%rd10321, %rd13850, 6;
	xor.b64  	%rd10322, %rd10320, %rd10321;
	add.s64 	%rd10323, %rd10317, %rd10322;
	shf.r.wrap.b32 	%r7185, %r6815, %r6816, 8;
	shf.r.wrap.b32 	%r7186, %r6816, %r6815, 8;
	mov.b64 	%rd10324, {%r7186, %r7185};
	shf.r.wrap.b32 	%r7187, %r6815, %r6816, 1;
	shf.r.wrap.b32 	%r7188, %r6816, %r6815, 1;
	mov.b64 	%rd10325, {%r7188, %r7187};
	xor.b64  	%rd10326, %rd10325, %rd10324;
	shr.u64 	%rd10327, %rd13847, 7;
	xor.b64  	%rd10328, %rd10326, %rd10327;
	add.s64 	%rd13848, %rd10323, %rd10328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7189,%dummy}, %rd13869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7190}, %rd13869;
	}
	shf.r.wrap.b32 	%r7191, %r7190, %r7189, 14;
	shf.r.wrap.b32 	%r7192, %r7189, %r7190, 14;
	mov.b64 	%rd10329, {%r7192, %r7191};
	shf.r.wrap.b32 	%r7193, %r7190, %r7189, 18;
	shf.r.wrap.b32 	%r7194, %r7189, %r7190, 18;
	mov.b64 	%rd10330, {%r7194, %r7193};
	xor.b64  	%rd10331, %rd10329, %rd10330;
	shf.l.wrap.b32 	%r7195, %r7189, %r7190, 23;
	shf.l.wrap.b32 	%r7196, %r7190, %r7189, 23;
	mov.b64 	%rd10332, {%r7196, %r7195};
	xor.b64  	%rd10333, %rd10331, %rd10332;
	xor.b64  	%rd10334, %rd10270, %rd10233;
	and.b64  	%rd10335, %rd13869, %rd10334;
	xor.b64  	%rd10336, %rd10335, %rd10233;
	add.s64 	%rd10337, %rd10336, %rd10196;
	add.s64 	%rd10338, %rd10337, %rd10333;
	ld.const.u64 	%rd10339, [%rd9849+104];
	add.s64 	%rd10340, %rd10338, %rd10339;
	add.s64 	%rd10341, %rd10340, %rd13848;
	add.s64 	%rd13868, %rd10341, %rd10207;
	and.b64  	%rd10342, %rd13865, %rd10281;
	or.b64  	%rd10343, %rd13865, %rd10281;
	and.b64  	%rd10344, %rd10343, %rd10244;
	or.b64  	%rd10345, %rd10344, %rd10342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7197,%dummy}, %rd13865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7198}, %rd13865;
	}
	shf.r.wrap.b32 	%r7199, %r7198, %r7197, 28;
	shf.r.wrap.b32 	%r7200, %r7197, %r7198, 28;
	mov.b64 	%rd10346, {%r7200, %r7199};
	shf.l.wrap.b32 	%r7201, %r7197, %r7198, 30;
	shf.l.wrap.b32 	%r7202, %r7198, %r7197, 30;
	mov.b64 	%rd10347, {%r7202, %r7201};
	xor.b64  	%rd10348, %rd10346, %rd10347;
	shf.l.wrap.b32 	%r7203, %r7197, %r7198, 25;
	shf.l.wrap.b32 	%r7204, %r7198, %r7197, 25;
	mov.b64 	%rd10349, {%r7204, %r7203};
	xor.b64  	%rd10350, %rd10348, %rd10349;
	add.s64 	%rd10351, %rd10350, %rd10345;
	add.s64 	%rd13864, %rd10351, %rd10341;
	add.s64 	%rd10352, %rd13854, %rd13847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7205,%dummy}, %rd13849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7206}, %rd13849;
	}
	shf.r.wrap.b32 	%r7207, %r7206, %r7205, 19;
	shf.r.wrap.b32 	%r7208, %r7205, %r7206, 19;
	mov.b64 	%rd10353, {%r7208, %r7207};
	shf.l.wrap.b32 	%r7209, %r7205, %r7206, 3;
	shf.l.wrap.b32 	%r7210, %r7206, %r7205, 3;
	mov.b64 	%rd10354, {%r7210, %r7209};
	xor.b64  	%rd10355, %rd10353, %rd10354;
	shr.u64 	%rd10356, %rd13849, 6;
	xor.b64  	%rd10357, %rd10355, %rd10356;
	add.s64 	%rd10358, %rd10352, %rd10357;
	shf.r.wrap.b32 	%r7211, %r6843, %r6844, 8;
	shf.r.wrap.b32 	%r7212, %r6844, %r6843, 8;
	mov.b64 	%rd10359, {%r7212, %r7211};
	shf.r.wrap.b32 	%r7213, %r6843, %r6844, 1;
	shf.r.wrap.b32 	%r7214, %r6844, %r6843, 1;
	mov.b64 	%rd10360, {%r7214, %r7213};
	xor.b64  	%rd10361, %rd10360, %rd10359;
	shr.u64 	%rd10362, %rd13846, 7;
	xor.b64  	%rd10363, %rd10361, %rd10362;
	add.s64 	%rd13847, %rd10358, %rd10363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7215,%dummy}, %rd13868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7216}, %rd13868;
	}
	shf.r.wrap.b32 	%r7217, %r7216, %r7215, 14;
	shf.r.wrap.b32 	%r7218, %r7215, %r7216, 14;
	mov.b64 	%rd10364, {%r7218, %r7217};
	shf.r.wrap.b32 	%r7219, %r7216, %r7215, 18;
	shf.r.wrap.b32 	%r7220, %r7215, %r7216, 18;
	mov.b64 	%rd10365, {%r7220, %r7219};
	xor.b64  	%rd10366, %rd10364, %rd10365;
	shf.l.wrap.b32 	%r7221, %r7215, %r7216, 23;
	shf.l.wrap.b32 	%r7222, %r7216, %r7215, 23;
	mov.b64 	%rd10367, {%r7222, %r7221};
	xor.b64  	%rd10368, %rd10366, %rd10367;
	xor.b64  	%rd10369, %rd13869, %rd10270;
	and.b64  	%rd10370, %rd13868, %rd10369;
	xor.b64  	%rd10371, %rd10370, %rd10270;
	add.s64 	%rd10372, %rd10371, %rd10233;
	add.s64 	%rd10373, %rd10372, %rd10368;
	ld.const.u64 	%rd10374, [%rd9849+112];
	add.s64 	%rd10375, %rd10373, %rd10374;
	add.s64 	%rd10376, %rd10375, %rd13847;
	add.s64 	%rd13867, %rd10376, %rd10244;
	and.b64  	%rd10377, %rd13864, %rd13865;
	or.b64  	%rd10378, %rd13864, %rd13865;
	and.b64  	%rd10379, %rd10378, %rd10281;
	or.b64  	%rd10380, %rd10379, %rd10377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7223,%dummy}, %rd13864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7224}, %rd13864;
	}
	shf.r.wrap.b32 	%r7225, %r7224, %r7223, 28;
	shf.r.wrap.b32 	%r7226, %r7223, %r7224, 28;
	mov.b64 	%rd10381, {%r7226, %r7225};
	shf.l.wrap.b32 	%r7227, %r7223, %r7224, 30;
	shf.l.wrap.b32 	%r7228, %r7224, %r7223, 30;
	mov.b64 	%rd10382, {%r7228, %r7227};
	xor.b64  	%rd10383, %rd10381, %rd10382;
	shf.l.wrap.b32 	%r7229, %r7223, %r7224, 25;
	shf.l.wrap.b32 	%r7230, %r7224, %r7223, 25;
	mov.b64 	%rd10384, {%r7230, %r7229};
	xor.b64  	%rd10385, %rd10383, %rd10384;
	add.s64 	%rd10386, %rd10385, %rd10380;
	add.s64 	%rd13863, %rd10386, %rd10376;
	add.s64 	%rd10387, %rd13853, %rd13846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7231,%dummy}, %rd13848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7232}, %rd13848;
	}
	shf.r.wrap.b32 	%r7233, %r7232, %r7231, 19;
	shf.r.wrap.b32 	%r7234, %r7231, %r7232, 19;
	mov.b64 	%rd10388, {%r7234, %r7233};
	shf.l.wrap.b32 	%r7235, %r7231, %r7232, 3;
	shf.l.wrap.b32 	%r7236, %r7232, %r7231, 3;
	mov.b64 	%rd10389, {%r7236, %r7235};
	xor.b64  	%rd10390, %rd10388, %rd10389;
	shr.u64 	%rd10391, %rd13848, 6;
	xor.b64  	%rd10392, %rd10390, %rd10391;
	add.s64 	%rd10393, %rd10387, %rd10392;
	shf.r.wrap.b32 	%r7237, %r6872, %r6871, 1;
	shf.r.wrap.b32 	%r7238, %r6871, %r6872, 1;
	mov.b64 	%rd10394, {%r7238, %r7237};
	shf.r.wrap.b32 	%r7239, %r6872, %r6871, 8;
	shf.r.wrap.b32 	%r7240, %r6871, %r6872, 8;
	mov.b64 	%rd10395, {%r7240, %r7239};
	xor.b64  	%rd10396, %rd10394, %rd10395;
	shr.u64 	%rd10397, %rd13861, 7;
	xor.b64  	%rd10398, %rd10396, %rd10397;
	add.s64 	%rd13846, %rd10393, %rd10398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7241,%dummy}, %rd13867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7242}, %rd13867;
	}
	shf.r.wrap.b32 	%r7243, %r7242, %r7241, 14;
	shf.r.wrap.b32 	%r7244, %r7241, %r7242, 14;
	mov.b64 	%rd10399, {%r7244, %r7243};
	shf.r.wrap.b32 	%r7245, %r7242, %r7241, 18;
	shf.r.wrap.b32 	%r7246, %r7241, %r7242, 18;
	mov.b64 	%rd10400, {%r7246, %r7245};
	xor.b64  	%rd10401, %rd10399, %rd10400;
	shf.l.wrap.b32 	%r7247, %r7241, %r7242, 23;
	shf.l.wrap.b32 	%r7248, %r7242, %r7241, 23;
	mov.b64 	%rd10402, {%r7248, %r7247};
	xor.b64  	%rd10403, %rd10401, %rd10402;
	xor.b64  	%rd10404, %rd13868, %rd13869;
	and.b64  	%rd10405, %rd13867, %rd10404;
	xor.b64  	%rd10406, %rd10405, %rd13869;
	add.s64 	%rd10407, %rd10406, %rd10270;
	add.s64 	%rd10408, %rd10407, %rd10403;
	ld.const.u64 	%rd10409, [%rd9849+120];
	add.s64 	%rd10410, %rd10408, %rd10409;
	add.s64 	%rd10411, %rd10410, %rd13846;
	add.s64 	%rd13866, %rd10411, %rd10281;
	and.b64  	%rd10412, %rd13863, %rd13864;
	or.b64  	%rd10413, %rd13863, %rd13864;
	and.b64  	%rd10414, %rd10413, %rd13865;
	or.b64  	%rd10415, %rd10414, %rd10412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7249,%dummy}, %rd13863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7250}, %rd13863;
	}
	shf.r.wrap.b32 	%r7251, %r7250, %r7249, 28;
	shf.r.wrap.b32 	%r7252, %r7249, %r7250, 28;
	mov.b64 	%rd10416, {%r7252, %r7251};
	shf.l.wrap.b32 	%r7253, %r7249, %r7250, 30;
	shf.l.wrap.b32 	%r7254, %r7250, %r7249, 30;
	mov.b64 	%rd10417, {%r7254, %r7253};
	xor.b64  	%rd10418, %rd10416, %rd10417;
	shf.l.wrap.b32 	%r7255, %r7249, %r7250, 25;
	shf.l.wrap.b32 	%r7256, %r7250, %r7249, 25;
	mov.b64 	%rd10419, {%r7256, %r7255};
	xor.b64  	%rd10420, %rd10418, %rd10419;
	add.s64 	%rd10421, %rd10420, %rd10415;
	add.s64 	%rd13862, %rd10421, %rd10411;
	add.s32 	%r9749, %r9749, 16;
	setp.lt.u32 	%p94, %r9749, 80;
	@%p94 bra 	$L__BB0_132;

	ld.param.u64 	%rd13499, [kernel_prepare_param_0];
	add.s64 	%rd10430, %rd13797, %rd13862;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7260, %temp}, %rd10430;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7261}, %rd10430;
	}
	mov.u32 	%r7262, 291;
	mov.u32 	%r9759, 0;
	prmt.b32 	%r7263, %r7260, %r9759, %r7262;
	prmt.b32 	%r7264, %r7261, %r9759, %r7262;
	mov.b64 	%rd10431, {%r7264, %r7263};
	mov.u64 	%rd10432, 0;
	st.local.u64 	[%rd212+80], %rd10431;
	add.s64 	%rd10433, %rd13796, %rd13863;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7265, %temp}, %rd10433;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7266}, %rd10433;
	}
	prmt.b32 	%r7267, %r7265, %r9759, %r7262;
	prmt.b32 	%r7268, %r7266, %r9759, %r7262;
	mov.b64 	%rd10434, {%r7268, %r7267};
	st.local.u64 	[%rd212+88], %rd10434;
	add.s64 	%rd10435, %rd13795, %rd13864;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7269, %temp}, %rd10435;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7270}, %rd10435;
	}
	prmt.b32 	%r7271, %r7269, %r9759, %r7262;
	prmt.b32 	%r7272, %r7270, %r9759, %r7262;
	mov.b64 	%rd10436, {%r7272, %r7271};
	st.local.u64 	[%rd212+96], %rd10436;
	mov.u64 	%rd13912, 7640891576956012808;
	st.local.u64 	[%rd2+-72], %rd13912;
	mov.u64 	%rd13911, -4942790177534073029;
	st.local.u64 	[%rd2+-64], %rd13911;
	mov.u64 	%rd13910, 4354685564936845355;
	st.local.u64 	[%rd2+-56], %rd13910;
	mov.u64 	%rd13909, -6534734903238641935;
	st.local.u64 	[%rd2+-48], %rd13909;
	mov.u64 	%rd13908, 5840696475078001361;
	st.local.u64 	[%rd2+-40], %rd13908;
	mov.u64 	%rd13907, -7276294671716946913;
	st.local.u64 	[%rd2+-32], %rd13907;
	mov.u64 	%rd13906, 2270897969802886507;
	st.local.u64 	[%rd2+-24], %rd13906;
	mov.u64 	%rd13905, 6620516959819538809;
	st.local.u64 	[%rd2+-16], %rd13905;
	st.local.u64 	[%rd2], %rd10432;
	st.local.u64 	[%rd2+8], %rd10432;
	st.local.u64 	[%rd2+16], %rd10432;
	st.local.u64 	[%rd2+24], %rd10432;
	st.local.u64 	[%rd2+32], %rd10432;
	st.local.u64 	[%rd2+40], %rd10432;
	st.local.u64 	[%rd2+48], %rd10432;
	st.local.u64 	[%rd2+56], %rd10432;
	st.local.u64 	[%rd2+64], %rd10432;
	st.local.u64 	[%rd2+72], %rd10432;
	st.local.u64 	[%rd2+80], %rd10432;
	st.local.u64 	[%rd2+88], %rd10432;
	st.local.u64 	[%rd2+96], %rd10432;
	st.local.u64 	[%rd2+104], %rd10432;
	st.local.u64 	[%rd2+112], %rd10432;
	st.local.u64 	[%rd2+120], %rd10432;
	st.local.v2.u32 	[%rd2+-8], {%r9759, %r9759};
	add.s64 	%rd935, %rd13499, 16;
	and.b32  	%r7273, %r136, 255;
	add.s32 	%r139, %r7273, 16;
	mov.u32 	%r9751, %r9759;
	mov.u32 	%r9752, %r9759;

$L__BB0_134:
	add.s32 	%r9751, %r9751, %r9;
	st.local.u32 	[%rd2+-8], %r9751;
	add.s32 	%r7274, %r9759, %r9;
	setp.lt.u32 	%p95, %r7274, 129;
	mov.u32 	%r7275, 128;
	sub.s32 	%r144, %r7275, %r9759;
	selp.b32 	%r145, %r9, %r144, %p95;
	and.b32  	%r146, %r9759, 7;
	setp.eq.s32 	%p96, %r145, 0;
	@%p96 bra 	$L__BB0_139;

	shl.b32 	%r7277, %r146, 3;
	shr.u32 	%r9755, %r9759, 3;
	cvt.u64.u32 	%rd945, %r7277;
	neg.s32 	%r7278, %r7277;
	mov.u32 	%r9753, 0;
	and.b32  	%r7279, %r7278, 56;
	cvt.u64.u32 	%rd946, %r7279;
	mov.u64 	%rd13878, %rd935;

$L__BB0_136:
	mul.wide.u32 	%rd10437, %r9755, 8;
	add.s64 	%rd10438, %rd1, %rd10437;
	ld.const.u64 	%rd948, [%rd13878];
	cvt.u32.u64 	%r7280, %rd945;
	shl.b64 	%rd10439, %rd948, %r7280;
	ld.local.u64 	%rd10440, [%rd10438+72];
	or.b64  	%rd10441, %rd10439, %rd10440;
	st.local.u64 	[%rd10438+72], %rd10441;
	setp.gt.u32 	%p97, %r9755, 14;
	@%p97 bra 	$L__BB0_138;

	setp.eq.s32 	%p98, %r146, 0;
	cvt.u32.u64 	%r7281, %rd946;
	shr.u64 	%rd10442, %rd948, %r7281;
	selp.b64 	%rd10443, 0, %rd10442, %p98;
	add.s32 	%r9755, %r9755, 1;
	mul.wide.u32 	%rd10444, %r9755, 8;
	add.s64 	%rd10445, %rd1, %rd10444;
	st.local.u64 	[%rd10445+72], %rd10443;

$L__BB0_138:
	add.s64 	%rd13878, %rd13878, 8;
	add.s32 	%r9753, %r9753, 8;
	setp.lt.u32 	%p99, %r9753, %r145;
	@%p99 bra 	$L__BB0_136;

$L__BB0_139:
	add.s32 	%r9759, %r9759, %r145;
	st.local.u32 	[%rd2+-4], %r9759;
	and.b32  	%r154, %r9759, 7;
	setp.eq.s32 	%p100, %r154, 0;
	@%p100 bra 	$L__BB0_141;

	and.b32  	%r7282, %r9759, -8;
	cvt.u64.u32 	%rd10446, %r7282;
	add.s64 	%rd10447, %rd1, %rd10446;
	mul.wide.u32 	%rd10448, %r154, 8;
	add.s64 	%rd10450, %rd1255, %rd10448;
	ld.const.u64 	%rd10451, [%rd10450];
	ld.local.u64 	%rd10452, [%rd10447+72];
	and.b64  	%rd10453, %rd10451, %rd10452;
	st.local.u64 	[%rd10447+72], %rd10453;

$L__BB0_141:
	setp.ne.s32 	%p101, %r9759, 128;
	@%p101 bra 	$L__BB0_149;

	ld.local.u64 	%rd10454, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7284, %temp}, %rd10454;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7285}, %rd10454;
	}
	mov.u32 	%r7286, 291;
	mov.u32 	%r7287, 0;
	prmt.b32 	%r7288, %r7284, %r7287, %r7286;
	prmt.b32 	%r7289, %r7285, %r7287, %r7286;
	mov.b64 	%rd13894, {%r7289, %r7288};
	ld.local.u64 	%rd10455, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7290, %temp}, %rd10455;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7291}, %rd10455;
	}
	prmt.b32 	%r7292, %r7290, %r7287, %r7286;
	prmt.b32 	%r7293, %r7291, %r7287, %r7286;
	mov.b64 	%rd13893, {%r7293, %r7292};
	ld.local.u64 	%rd10456, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7294, %temp}, %rd10456;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7295}, %rd10456;
	}
	prmt.b32 	%r7296, %r7294, %r7287, %r7286;
	prmt.b32 	%r7297, %r7295, %r7287, %r7286;
	mov.b64 	%rd13892, {%r7297, %r7296};
	ld.local.u64 	%rd10457, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7298, %temp}, %rd10457;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7299}, %rd10457;
	}
	prmt.b32 	%r7300, %r7298, %r7287, %r7286;
	prmt.b32 	%r7301, %r7299, %r7287, %r7286;
	mov.b64 	%rd13891, {%r7301, %r7300};
	ld.local.u64 	%rd10458, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7302, %temp}, %rd10458;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7303}, %rd10458;
	}
	prmt.b32 	%r7304, %r7302, %r7287, %r7286;
	prmt.b32 	%r7305, %r7303, %r7287, %r7286;
	mov.b64 	%rd13890, {%r7305, %r7304};
	ld.local.u64 	%rd10459, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7306, %temp}, %rd10459;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7307}, %rd10459;
	}
	prmt.b32 	%r7308, %r7306, %r7287, %r7286;
	prmt.b32 	%r7309, %r7307, %r7287, %r7286;
	mov.b64 	%rd13889, {%r7309, %r7308};
	ld.local.u64 	%rd10460, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7310, %temp}, %rd10460;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7311}, %rd10460;
	}
	prmt.b32 	%r7312, %r7310, %r7287, %r7286;
	prmt.b32 	%r7313, %r7311, %r7287, %r7286;
	mov.b64 	%rd13888, {%r7313, %r7312};
	ld.local.u64 	%rd10461, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7314, %temp}, %rd10461;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7315}, %rd10461;
	}
	prmt.b32 	%r7316, %r7314, %r7287, %r7286;
	prmt.b32 	%r7317, %r7315, %r7287, %r7286;
	mov.b64 	%rd13887, {%r7317, %r7316};
	ld.local.u64 	%rd10462, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7318, %temp}, %rd10462;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7319}, %rd10462;
	}
	prmt.b32 	%r7320, %r7318, %r7287, %r7286;
	prmt.b32 	%r7321, %r7319, %r7287, %r7286;
	mov.b64 	%rd13886, {%r7321, %r7320};
	ld.local.u64 	%rd10463, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7322, %temp}, %rd10463;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7323}, %rd10463;
	}
	prmt.b32 	%r7324, %r7322, %r7287, %r7286;
	prmt.b32 	%r7325, %r7323, %r7287, %r7286;
	mov.b64 	%rd13885, {%r7325, %r7324};
	ld.local.u64 	%rd10464, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7326, %temp}, %rd10464;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7327}, %rd10464;
	}
	prmt.b32 	%r7328, %r7326, %r7287, %r7286;
	prmt.b32 	%r7329, %r7327, %r7287, %r7286;
	mov.b64 	%rd13884, {%r7329, %r7328};
	ld.local.u64 	%rd10465, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7330, %temp}, %rd10465;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7331}, %rd10465;
	}
	prmt.b32 	%r7332, %r7330, %r7287, %r7286;
	prmt.b32 	%r7333, %r7331, %r7287, %r7286;
	mov.b64 	%rd13883, {%r7333, %r7332};
	ld.local.u64 	%rd10466, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7334, %temp}, %rd10466;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7335}, %rd10466;
	}
	prmt.b32 	%r7336, %r7334, %r7287, %r7286;
	prmt.b32 	%r7337, %r7335, %r7287, %r7286;
	mov.b64 	%rd13882, {%r7337, %r7336};
	ld.local.u64 	%rd10467, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7338, %temp}, %rd10467;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7339}, %rd10467;
	}
	prmt.b32 	%r7340, %r7338, %r7287, %r7286;
	prmt.b32 	%r7341, %r7339, %r7287, %r7286;
	mov.b64 	%rd13881, {%r7341, %r7340};
	ld.local.u64 	%rd10468, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7342, %temp}, %rd10468;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7343}, %rd10468;
	}
	prmt.b32 	%r7344, %r7342, %r7287, %r7286;
	prmt.b32 	%r7345, %r7343, %r7287, %r7286;
	mov.b64 	%rd13880, {%r7345, %r7344};
	ld.local.u64 	%rd10469, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7346, %temp}, %rd10469;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7347}, %rd10469;
	}
	prmt.b32 	%r7348, %r7346, %r7287, %r7286;
	prmt.b32 	%r7349, %r7347, %r7287, %r7286;
	mov.b64 	%rd13879, {%r7349, %r7348};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7350,%dummy}, %rd13908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7351}, %rd13908;
	}
	shf.r.wrap.b32 	%r7352, %r7351, %r7350, 18;
	shf.r.wrap.b32 	%r7353, %r7350, %r7351, 18;
	mov.b64 	%rd10470, {%r7353, %r7352};
	shf.r.wrap.b32 	%r7354, %r7351, %r7350, 14;
	shf.r.wrap.b32 	%r7355, %r7350, %r7351, 14;
	mov.b64 	%rd10471, {%r7355, %r7354};
	xor.b64  	%rd10472, %rd10471, %rd10470;
	shf.l.wrap.b32 	%r7356, %r7350, %r7351, 23;
	shf.l.wrap.b32 	%r7357, %r7351, %r7350, 23;
	mov.b64 	%rd10473, {%r7357, %r7356};
	xor.b64  	%rd10474, %rd10472, %rd10473;
	xor.b64  	%rd10475, %rd13907, %rd13906;
	and.b64  	%rd10476, %rd13908, %rd10475;
	xor.b64  	%rd10477, %rd10476, %rd13906;
	add.s64 	%rd10478, %rd10477, %rd13905;
	add.s64 	%rd10479, %rd10478, %rd10474;
	add.s64 	%rd10480, %rd10479, %rd13894;
	add.s64 	%rd10481, %rd10480, 4794697086780616226;
	add.s64 	%rd10482, %rd10481, %rd13909;
	or.b64  	%rd10483, %rd13912, %rd13911;
	and.b64  	%rd10484, %rd10483, %rd13910;
	and.b64  	%rd10485, %rd13912, %rd13911;
	or.b64  	%rd10486, %rd10484, %rd10485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7358}, %rd13912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7359,%dummy}, %rd13912;
	}
	shf.l.wrap.b32 	%r7360, %r7359, %r7358, 30;
	shf.l.wrap.b32 	%r7361, %r7358, %r7359, 30;
	mov.b64 	%rd10487, {%r7361, %r7360};
	shf.r.wrap.b32 	%r7362, %r7358, %r7359, 28;
	shf.r.wrap.b32 	%r7363, %r7359, %r7358, 28;
	mov.b64 	%rd10488, {%r7363, %r7362};
	xor.b64  	%rd10489, %rd10488, %rd10487;
	shf.l.wrap.b32 	%r7364, %r7359, %r7358, 25;
	shf.l.wrap.b32 	%r7365, %r7358, %r7359, 25;
	mov.b64 	%rd10490, {%r7365, %r7364};
	xor.b64  	%rd10491, %rd10489, %rd10490;
	add.s64 	%rd10492, %rd10491, %rd10486;
	add.s64 	%rd10493, %rd10492, %rd10481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7366,%dummy}, %rd10482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7367}, %rd10482;
	}
	shf.r.wrap.b32 	%r7368, %r7367, %r7366, 14;
	shf.r.wrap.b32 	%r7369, %r7366, %r7367, 14;
	mov.b64 	%rd10494, {%r7369, %r7368};
	shf.r.wrap.b32 	%r7370, %r7367, %r7366, 18;
	shf.r.wrap.b32 	%r7371, %r7366, %r7367, 18;
	mov.b64 	%rd10495, {%r7371, %r7370};
	xor.b64  	%rd10496, %rd10494, %rd10495;
	shf.l.wrap.b32 	%r7372, %r7366, %r7367, 23;
	shf.l.wrap.b32 	%r7373, %r7367, %r7366, 23;
	mov.b64 	%rd10497, {%r7373, %r7372};
	xor.b64  	%rd10498, %rd10496, %rd10497;
	xor.b64  	%rd10499, %rd13908, %rd13907;
	and.b64  	%rd10500, %rd10482, %rd10499;
	xor.b64  	%rd10501, %rd10500, %rd13907;
	add.s64 	%rd10502, %rd10501, %rd13906;
	add.s64 	%rd10503, %rd10502, %rd10498;
	add.s64 	%rd10504, %rd10503, %rd13893;
	add.s64 	%rd10505, %rd10504, 8158064640168781261;
	add.s64 	%rd10506, %rd10505, %rd13910;
	and.b64  	%rd10507, %rd10493, %rd13912;
	or.b64  	%rd10508, %rd10493, %rd13912;
	and.b64  	%rd10509, %rd10508, %rd13911;
	or.b64  	%rd10510, %rd10509, %rd10507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7374,%dummy}, %rd10493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7375}, %rd10493;
	}
	shf.r.wrap.b32 	%r7376, %r7375, %r7374, 28;
	shf.r.wrap.b32 	%r7377, %r7374, %r7375, 28;
	mov.b64 	%rd10511, {%r7377, %r7376};
	shf.l.wrap.b32 	%r7378, %r7374, %r7375, 30;
	shf.l.wrap.b32 	%r7379, %r7375, %r7374, 30;
	mov.b64 	%rd10512, {%r7379, %r7378};
	xor.b64  	%rd10513, %rd10511, %rd10512;
	shf.l.wrap.b32 	%r7380, %r7374, %r7375, 25;
	shf.l.wrap.b32 	%r7381, %r7375, %r7374, 25;
	mov.b64 	%rd10514, {%r7381, %r7380};
	xor.b64  	%rd10515, %rd10513, %rd10514;
	add.s64 	%rd10516, %rd10515, %rd10510;
	add.s64 	%rd10517, %rd10516, %rd10505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7382,%dummy}, %rd10506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7383}, %rd10506;
	}
	shf.r.wrap.b32 	%r7384, %r7383, %r7382, 14;
	shf.r.wrap.b32 	%r7385, %r7382, %r7383, 14;
	mov.b64 	%rd10518, {%r7385, %r7384};
	shf.r.wrap.b32 	%r7386, %r7383, %r7382, 18;
	shf.r.wrap.b32 	%r7387, %r7382, %r7383, 18;
	mov.b64 	%rd10519, {%r7387, %r7386};
	xor.b64  	%rd10520, %rd10518, %rd10519;
	shf.l.wrap.b32 	%r7388, %r7382, %r7383, 23;
	shf.l.wrap.b32 	%r7389, %r7383, %r7382, 23;
	mov.b64 	%rd10521, {%r7389, %r7388};
	xor.b64  	%rd10522, %rd10520, %rd10521;
	xor.b64  	%rd10523, %rd10482, %rd13908;
	and.b64  	%rd10524, %rd10506, %rd10523;
	xor.b64  	%rd10525, %rd10524, %rd13908;
	add.s64 	%rd10526, %rd10525, %rd13907;
	add.s64 	%rd10527, %rd10526, %rd10522;
	add.s64 	%rd10528, %rd10527, %rd13892;
	add.s64 	%rd10529, %rd10528, -5349999486874862801;
	add.s64 	%rd10530, %rd10529, %rd13911;
	and.b64  	%rd10531, %rd10517, %rd10493;
	or.b64  	%rd10532, %rd10517, %rd10493;
	and.b64  	%rd10533, %rd10532, %rd13912;
	or.b64  	%rd10534, %rd10533, %rd10531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7390,%dummy}, %rd10517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7391}, %rd10517;
	}
	shf.r.wrap.b32 	%r7392, %r7391, %r7390, 28;
	shf.r.wrap.b32 	%r7393, %r7390, %r7391, 28;
	mov.b64 	%rd10535, {%r7393, %r7392};
	shf.l.wrap.b32 	%r7394, %r7390, %r7391, 30;
	shf.l.wrap.b32 	%r7395, %r7391, %r7390, 30;
	mov.b64 	%rd10536, {%r7395, %r7394};
	xor.b64  	%rd10537, %rd10535, %rd10536;
	shf.l.wrap.b32 	%r7396, %r7390, %r7391, 25;
	shf.l.wrap.b32 	%r7397, %r7391, %r7390, 25;
	mov.b64 	%rd10538, {%r7397, %r7396};
	xor.b64  	%rd10539, %rd10537, %rd10538;
	add.s64 	%rd10540, %rd10539, %rd10534;
	add.s64 	%rd10541, %rd10540, %rd10529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7398,%dummy}, %rd10530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7399}, %rd10530;
	}
	shf.r.wrap.b32 	%r7400, %r7399, %r7398, 14;
	shf.r.wrap.b32 	%r7401, %r7398, %r7399, 14;
	mov.b64 	%rd10542, {%r7401, %r7400};
	shf.r.wrap.b32 	%r7402, %r7399, %r7398, 18;
	shf.r.wrap.b32 	%r7403, %r7398, %r7399, 18;
	mov.b64 	%rd10543, {%r7403, %r7402};
	xor.b64  	%rd10544, %rd10542, %rd10543;
	shf.l.wrap.b32 	%r7404, %r7398, %r7399, 23;
	shf.l.wrap.b32 	%r7405, %r7399, %r7398, 23;
	mov.b64 	%rd10545, {%r7405, %r7404};
	xor.b64  	%rd10546, %rd10544, %rd10545;
	xor.b64  	%rd10547, %rd10506, %rd10482;
	and.b64  	%rd10548, %rd10530, %rd10547;
	xor.b64  	%rd10549, %rd10548, %rd10482;
	add.s64 	%rd10550, %rd10549, %rd13908;
	add.s64 	%rd10551, %rd10550, %rd10546;
	add.s64 	%rd10552, %rd10551, %rd13891;
	add.s64 	%rd10553, %rd10552, -1606136188198331460;
	add.s64 	%rd10554, %rd10553, %rd13912;
	and.b64  	%rd10555, %rd10541, %rd10517;
	or.b64  	%rd10556, %rd10541, %rd10517;
	and.b64  	%rd10557, %rd10556, %rd10493;
	or.b64  	%rd10558, %rd10557, %rd10555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7406,%dummy}, %rd10541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7407}, %rd10541;
	}
	shf.r.wrap.b32 	%r7408, %r7407, %r7406, 28;
	shf.r.wrap.b32 	%r7409, %r7406, %r7407, 28;
	mov.b64 	%rd10559, {%r7409, %r7408};
	shf.l.wrap.b32 	%r7410, %r7406, %r7407, 30;
	shf.l.wrap.b32 	%r7411, %r7407, %r7406, 30;
	mov.b64 	%rd10560, {%r7411, %r7410};
	xor.b64  	%rd10561, %rd10559, %rd10560;
	shf.l.wrap.b32 	%r7412, %r7406, %r7407, 25;
	shf.l.wrap.b32 	%r7413, %r7407, %r7406, 25;
	mov.b64 	%rd10562, {%r7413, %r7412};
	xor.b64  	%rd10563, %rd10561, %rd10562;
	add.s64 	%rd10564, %rd10563, %rd10558;
	add.s64 	%rd10565, %rd10564, %rd10553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7414,%dummy}, %rd10554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7415}, %rd10554;
	}
	shf.r.wrap.b32 	%r7416, %r7415, %r7414, 14;
	shf.r.wrap.b32 	%r7417, %r7414, %r7415, 14;
	mov.b64 	%rd10566, {%r7417, %r7416};
	shf.r.wrap.b32 	%r7418, %r7415, %r7414, 18;
	shf.r.wrap.b32 	%r7419, %r7414, %r7415, 18;
	mov.b64 	%rd10567, {%r7419, %r7418};
	xor.b64  	%rd10568, %rd10566, %rd10567;
	shf.l.wrap.b32 	%r7420, %r7414, %r7415, 23;
	shf.l.wrap.b32 	%r7421, %r7415, %r7414, 23;
	mov.b64 	%rd10569, {%r7421, %r7420};
	xor.b64  	%rd10570, %rd10568, %rd10569;
	xor.b64  	%rd10571, %rd10530, %rd10506;
	and.b64  	%rd10572, %rd10554, %rd10571;
	xor.b64  	%rd10573, %rd10572, %rd10506;
	add.s64 	%rd10574, %rd10573, %rd10482;
	add.s64 	%rd10575, %rd10574, %rd10570;
	add.s64 	%rd10576, %rd10575, %rd13890;
	add.s64 	%rd10577, %rd10576, 4131703408338449720;
	add.s64 	%rd10578, %rd10577, %rd10493;
	and.b64  	%rd10579, %rd10565, %rd10541;
	or.b64  	%rd10580, %rd10565, %rd10541;
	and.b64  	%rd10581, %rd10580, %rd10517;
	or.b64  	%rd10582, %rd10581, %rd10579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7422,%dummy}, %rd10565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7423}, %rd10565;
	}
	shf.r.wrap.b32 	%r7424, %r7423, %r7422, 28;
	shf.r.wrap.b32 	%r7425, %r7422, %r7423, 28;
	mov.b64 	%rd10583, {%r7425, %r7424};
	shf.l.wrap.b32 	%r7426, %r7422, %r7423, 30;
	shf.l.wrap.b32 	%r7427, %r7423, %r7422, 30;
	mov.b64 	%rd10584, {%r7427, %r7426};
	xor.b64  	%rd10585, %rd10583, %rd10584;
	shf.l.wrap.b32 	%r7428, %r7422, %r7423, 25;
	shf.l.wrap.b32 	%r7429, %r7423, %r7422, 25;
	mov.b64 	%rd10586, {%r7429, %r7428};
	xor.b64  	%rd10587, %rd10585, %rd10586;
	add.s64 	%rd10588, %rd10587, %rd10582;
	add.s64 	%rd10589, %rd10588, %rd10577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7430,%dummy}, %rd10578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7431}, %rd10578;
	}
	shf.r.wrap.b32 	%r7432, %r7431, %r7430, 14;
	shf.r.wrap.b32 	%r7433, %r7430, %r7431, 14;
	mov.b64 	%rd10590, {%r7433, %r7432};
	shf.r.wrap.b32 	%r7434, %r7431, %r7430, 18;
	shf.r.wrap.b32 	%r7435, %r7430, %r7431, 18;
	mov.b64 	%rd10591, {%r7435, %r7434};
	xor.b64  	%rd10592, %rd10590, %rd10591;
	shf.l.wrap.b32 	%r7436, %r7430, %r7431, 23;
	shf.l.wrap.b32 	%r7437, %r7431, %r7430, 23;
	mov.b64 	%rd10593, {%r7437, %r7436};
	xor.b64  	%rd10594, %rd10592, %rd10593;
	xor.b64  	%rd10595, %rd10554, %rd10530;
	and.b64  	%rd10596, %rd10578, %rd10595;
	xor.b64  	%rd10597, %rd10596, %rd10530;
	add.s64 	%rd10598, %rd10597, %rd10506;
	add.s64 	%rd10599, %rd10598, %rd10594;
	add.s64 	%rd10600, %rd10599, %rd13889;
	add.s64 	%rd10601, %rd10600, 6480981068601479193;
	add.s64 	%rd10602, %rd10601, %rd10517;
	and.b64  	%rd10603, %rd10589, %rd10565;
	or.b64  	%rd10604, %rd10589, %rd10565;
	and.b64  	%rd10605, %rd10604, %rd10541;
	or.b64  	%rd10606, %rd10605, %rd10603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7438,%dummy}, %rd10589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7439}, %rd10589;
	}
	shf.r.wrap.b32 	%r7440, %r7439, %r7438, 28;
	shf.r.wrap.b32 	%r7441, %r7438, %r7439, 28;
	mov.b64 	%rd10607, {%r7441, %r7440};
	shf.l.wrap.b32 	%r7442, %r7438, %r7439, 30;
	shf.l.wrap.b32 	%r7443, %r7439, %r7438, 30;
	mov.b64 	%rd10608, {%r7443, %r7442};
	xor.b64  	%rd10609, %rd10607, %rd10608;
	shf.l.wrap.b32 	%r7444, %r7438, %r7439, 25;
	shf.l.wrap.b32 	%r7445, %r7439, %r7438, 25;
	mov.b64 	%rd10610, {%r7445, %r7444};
	xor.b64  	%rd10611, %rd10609, %rd10610;
	add.s64 	%rd10612, %rd10611, %rd10606;
	add.s64 	%rd10613, %rd10612, %rd10601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7446,%dummy}, %rd10602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7447}, %rd10602;
	}
	shf.r.wrap.b32 	%r7448, %r7447, %r7446, 14;
	shf.r.wrap.b32 	%r7449, %r7446, %r7447, 14;
	mov.b64 	%rd10614, {%r7449, %r7448};
	shf.r.wrap.b32 	%r7450, %r7447, %r7446, 18;
	shf.r.wrap.b32 	%r7451, %r7446, %r7447, 18;
	mov.b64 	%rd10615, {%r7451, %r7450};
	xor.b64  	%rd10616, %rd10614, %rd10615;
	shf.l.wrap.b32 	%r7452, %r7446, %r7447, 23;
	shf.l.wrap.b32 	%r7453, %r7447, %r7446, 23;
	mov.b64 	%rd10617, {%r7453, %r7452};
	xor.b64  	%rd10618, %rd10616, %rd10617;
	xor.b64  	%rd10619, %rd10578, %rd10554;
	and.b64  	%rd10620, %rd10602, %rd10619;
	xor.b64  	%rd10621, %rd10620, %rd10554;
	add.s64 	%rd10622, %rd10621, %rd10530;
	add.s64 	%rd10623, %rd10622, %rd10618;
	add.s64 	%rd10624, %rd10623, %rd13888;
	add.s64 	%rd10625, %rd10624, -7908458776815382629;
	add.s64 	%rd10626, %rd10625, %rd10541;
	and.b64  	%rd10627, %rd10613, %rd10589;
	or.b64  	%rd10628, %rd10613, %rd10589;
	and.b64  	%rd10629, %rd10628, %rd10565;
	or.b64  	%rd10630, %rd10629, %rd10627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7454,%dummy}, %rd10613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7455}, %rd10613;
	}
	shf.r.wrap.b32 	%r7456, %r7455, %r7454, 28;
	shf.r.wrap.b32 	%r7457, %r7454, %r7455, 28;
	mov.b64 	%rd10631, {%r7457, %r7456};
	shf.l.wrap.b32 	%r7458, %r7454, %r7455, 30;
	shf.l.wrap.b32 	%r7459, %r7455, %r7454, 30;
	mov.b64 	%rd10632, {%r7459, %r7458};
	xor.b64  	%rd10633, %rd10631, %rd10632;
	shf.l.wrap.b32 	%r7460, %r7454, %r7455, 25;
	shf.l.wrap.b32 	%r7461, %r7455, %r7454, 25;
	mov.b64 	%rd10634, {%r7461, %r7460};
	xor.b64  	%rd10635, %rd10633, %rd10634;
	add.s64 	%rd10636, %rd10635, %rd10630;
	add.s64 	%rd10637, %rd10636, %rd10625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7462,%dummy}, %rd10626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7463}, %rd10626;
	}
	shf.r.wrap.b32 	%r7464, %r7463, %r7462, 14;
	shf.r.wrap.b32 	%r7465, %r7462, %r7463, 14;
	mov.b64 	%rd10638, {%r7465, %r7464};
	shf.r.wrap.b32 	%r7466, %r7463, %r7462, 18;
	shf.r.wrap.b32 	%r7467, %r7462, %r7463, 18;
	mov.b64 	%rd10639, {%r7467, %r7466};
	xor.b64  	%rd10640, %rd10638, %rd10639;
	shf.l.wrap.b32 	%r7468, %r7462, %r7463, 23;
	shf.l.wrap.b32 	%r7469, %r7463, %r7462, 23;
	mov.b64 	%rd10641, {%r7469, %r7468};
	xor.b64  	%rd10642, %rd10640, %rd10641;
	xor.b64  	%rd10643, %rd10602, %rd10578;
	and.b64  	%rd10644, %rd10626, %rd10643;
	xor.b64  	%rd10645, %rd10644, %rd10578;
	add.s64 	%rd10646, %rd10645, %rd10554;
	add.s64 	%rd10647, %rd10646, %rd10642;
	add.s64 	%rd10648, %rd10647, %rd13887;
	add.s64 	%rd10649, %rd10648, -6116909921290321640;
	add.s64 	%rd10650, %rd10649, %rd10565;
	and.b64  	%rd10651, %rd10637, %rd10613;
	or.b64  	%rd10652, %rd10637, %rd10613;
	and.b64  	%rd10653, %rd10652, %rd10589;
	or.b64  	%rd10654, %rd10653, %rd10651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7470,%dummy}, %rd10637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7471}, %rd10637;
	}
	shf.r.wrap.b32 	%r7472, %r7471, %r7470, 28;
	shf.r.wrap.b32 	%r7473, %r7470, %r7471, 28;
	mov.b64 	%rd10655, {%r7473, %r7472};
	shf.l.wrap.b32 	%r7474, %r7470, %r7471, 30;
	shf.l.wrap.b32 	%r7475, %r7471, %r7470, 30;
	mov.b64 	%rd10656, {%r7475, %r7474};
	xor.b64  	%rd10657, %rd10655, %rd10656;
	shf.l.wrap.b32 	%r7476, %r7470, %r7471, 25;
	shf.l.wrap.b32 	%r7477, %r7471, %r7470, 25;
	mov.b64 	%rd10658, {%r7477, %r7476};
	xor.b64  	%rd10659, %rd10657, %rd10658;
	add.s64 	%rd10660, %rd10659, %rd10654;
	add.s64 	%rd10661, %rd10660, %rd10649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7478,%dummy}, %rd10650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7479}, %rd10650;
	}
	shf.r.wrap.b32 	%r7480, %r7479, %r7478, 14;
	shf.r.wrap.b32 	%r7481, %r7478, %r7479, 14;
	mov.b64 	%rd10662, {%r7481, %r7480};
	shf.r.wrap.b32 	%r7482, %r7479, %r7478, 18;
	shf.r.wrap.b32 	%r7483, %r7478, %r7479, 18;
	mov.b64 	%rd10663, {%r7483, %r7482};
	xor.b64  	%rd10664, %rd10662, %rd10663;
	shf.l.wrap.b32 	%r7484, %r7478, %r7479, 23;
	shf.l.wrap.b32 	%r7485, %r7479, %r7478, 23;
	mov.b64 	%rd10665, {%r7485, %r7484};
	xor.b64  	%rd10666, %rd10664, %rd10665;
	xor.b64  	%rd10667, %rd10626, %rd10602;
	and.b64  	%rd10668, %rd10650, %rd10667;
	xor.b64  	%rd10669, %rd10668, %rd10602;
	add.s64 	%rd10670, %rd10669, %rd10578;
	add.s64 	%rd10671, %rd10670, %rd10666;
	add.s64 	%rd10672, %rd10671, %rd13886;
	add.s64 	%rd10673, %rd10672, -2880145864133508542;
	add.s64 	%rd10674, %rd10673, %rd10589;
	and.b64  	%rd10675, %rd10661, %rd10637;
	or.b64  	%rd10676, %rd10661, %rd10637;
	and.b64  	%rd10677, %rd10676, %rd10613;
	or.b64  	%rd10678, %rd10677, %rd10675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7486,%dummy}, %rd10661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7487}, %rd10661;
	}
	shf.r.wrap.b32 	%r7488, %r7487, %r7486, 28;
	shf.r.wrap.b32 	%r7489, %r7486, %r7487, 28;
	mov.b64 	%rd10679, {%r7489, %r7488};
	shf.l.wrap.b32 	%r7490, %r7486, %r7487, 30;
	shf.l.wrap.b32 	%r7491, %r7487, %r7486, 30;
	mov.b64 	%rd10680, {%r7491, %r7490};
	xor.b64  	%rd10681, %rd10679, %rd10680;
	shf.l.wrap.b32 	%r7492, %r7486, %r7487, 25;
	shf.l.wrap.b32 	%r7493, %r7487, %r7486, 25;
	mov.b64 	%rd10682, {%r7493, %r7492};
	xor.b64  	%rd10683, %rd10681, %rd10682;
	add.s64 	%rd10684, %rd10683, %rd10678;
	add.s64 	%rd10685, %rd10684, %rd10673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7494,%dummy}, %rd10674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7495}, %rd10674;
	}
	shf.r.wrap.b32 	%r7496, %r7495, %r7494, 14;
	shf.r.wrap.b32 	%r7497, %r7494, %r7495, 14;
	mov.b64 	%rd10686, {%r7497, %r7496};
	shf.r.wrap.b32 	%r7498, %r7495, %r7494, 18;
	shf.r.wrap.b32 	%r7499, %r7494, %r7495, 18;
	mov.b64 	%rd10687, {%r7499, %r7498};
	xor.b64  	%rd10688, %rd10686, %rd10687;
	shf.l.wrap.b32 	%r7500, %r7494, %r7495, 23;
	shf.l.wrap.b32 	%r7501, %r7495, %r7494, 23;
	mov.b64 	%rd10689, {%r7501, %r7500};
	xor.b64  	%rd10690, %rd10688, %rd10689;
	xor.b64  	%rd10691, %rd10650, %rd10626;
	and.b64  	%rd10692, %rd10674, %rd10691;
	xor.b64  	%rd10693, %rd10692, %rd10626;
	add.s64 	%rd10694, %rd10693, %rd10602;
	add.s64 	%rd10695, %rd10694, %rd10690;
	add.s64 	%rd10696, %rd10695, %rd13885;
	add.s64 	%rd10697, %rd10696, 1334009975649890238;
	add.s64 	%rd10698, %rd10697, %rd10613;
	and.b64  	%rd10699, %rd10685, %rd10661;
	or.b64  	%rd10700, %rd10685, %rd10661;
	and.b64  	%rd10701, %rd10700, %rd10637;
	or.b64  	%rd10702, %rd10701, %rd10699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7502,%dummy}, %rd10685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7503}, %rd10685;
	}
	shf.r.wrap.b32 	%r7504, %r7503, %r7502, 28;
	shf.r.wrap.b32 	%r7505, %r7502, %r7503, 28;
	mov.b64 	%rd10703, {%r7505, %r7504};
	shf.l.wrap.b32 	%r7506, %r7502, %r7503, 30;
	shf.l.wrap.b32 	%r7507, %r7503, %r7502, 30;
	mov.b64 	%rd10704, {%r7507, %r7506};
	xor.b64  	%rd10705, %rd10703, %rd10704;
	shf.l.wrap.b32 	%r7508, %r7502, %r7503, 25;
	shf.l.wrap.b32 	%r7509, %r7503, %r7502, 25;
	mov.b64 	%rd10706, {%r7509, %r7508};
	xor.b64  	%rd10707, %rd10705, %rd10706;
	add.s64 	%rd10708, %rd10707, %rd10702;
	add.s64 	%rd10709, %rd10708, %rd10697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7510,%dummy}, %rd10698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7511}, %rd10698;
	}
	shf.r.wrap.b32 	%r7512, %r7511, %r7510, 14;
	shf.r.wrap.b32 	%r7513, %r7510, %r7511, 14;
	mov.b64 	%rd10710, {%r7513, %r7512};
	shf.r.wrap.b32 	%r7514, %r7511, %r7510, 18;
	shf.r.wrap.b32 	%r7515, %r7510, %r7511, 18;
	mov.b64 	%rd10711, {%r7515, %r7514};
	xor.b64  	%rd10712, %rd10710, %rd10711;
	shf.l.wrap.b32 	%r7516, %r7510, %r7511, 23;
	shf.l.wrap.b32 	%r7517, %r7511, %r7510, 23;
	mov.b64 	%rd10713, {%r7517, %r7516};
	xor.b64  	%rd10714, %rd10712, %rd10713;
	xor.b64  	%rd10715, %rd10674, %rd10650;
	and.b64  	%rd10716, %rd10698, %rd10715;
	xor.b64  	%rd10717, %rd10716, %rd10650;
	add.s64 	%rd10718, %rd10717, %rd10626;
	add.s64 	%rd10719, %rd10718, %rd10714;
	add.s64 	%rd10720, %rd10719, %rd13884;
	add.s64 	%rd10721, %rd10720, 2608012711638119052;
	add.s64 	%rd10722, %rd10721, %rd10637;
	and.b64  	%rd10723, %rd10709, %rd10685;
	or.b64  	%rd10724, %rd10709, %rd10685;
	and.b64  	%rd10725, %rd10724, %rd10661;
	or.b64  	%rd10726, %rd10725, %rd10723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7518,%dummy}, %rd10709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7519}, %rd10709;
	}
	shf.r.wrap.b32 	%r7520, %r7519, %r7518, 28;
	shf.r.wrap.b32 	%r7521, %r7518, %r7519, 28;
	mov.b64 	%rd10727, {%r7521, %r7520};
	shf.l.wrap.b32 	%r7522, %r7518, %r7519, 30;
	shf.l.wrap.b32 	%r7523, %r7519, %r7518, 30;
	mov.b64 	%rd10728, {%r7523, %r7522};
	xor.b64  	%rd10729, %rd10727, %rd10728;
	shf.l.wrap.b32 	%r7524, %r7518, %r7519, 25;
	shf.l.wrap.b32 	%r7525, %r7519, %r7518, 25;
	mov.b64 	%rd10730, {%r7525, %r7524};
	xor.b64  	%rd10731, %rd10729, %rd10730;
	add.s64 	%rd10732, %rd10731, %rd10726;
	add.s64 	%rd10733, %rd10732, %rd10721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7526,%dummy}, %rd10722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7527}, %rd10722;
	}
	shf.r.wrap.b32 	%r7528, %r7527, %r7526, 14;
	shf.r.wrap.b32 	%r7529, %r7526, %r7527, 14;
	mov.b64 	%rd10734, {%r7529, %r7528};
	shf.r.wrap.b32 	%r7530, %r7527, %r7526, 18;
	shf.r.wrap.b32 	%r7531, %r7526, %r7527, 18;
	mov.b64 	%rd10735, {%r7531, %r7530};
	xor.b64  	%rd10736, %rd10734, %rd10735;
	shf.l.wrap.b32 	%r7532, %r7526, %r7527, 23;
	shf.l.wrap.b32 	%r7533, %r7527, %r7526, 23;
	mov.b64 	%rd10737, {%r7533, %r7532};
	xor.b64  	%rd10738, %rd10736, %rd10737;
	xor.b64  	%rd10739, %rd10698, %rd10674;
	and.b64  	%rd10740, %rd10722, %rd10739;
	xor.b64  	%rd10741, %rd10740, %rd10674;
	add.s64 	%rd10742, %rd10741, %rd10650;
	add.s64 	%rd10743, %rd10742, %rd10738;
	add.s64 	%rd10744, %rd10743, %rd13883;
	add.s64 	%rd10745, %rd10744, 6128411473006802146;
	add.s64 	%rd10746, %rd10745, %rd10661;
	and.b64  	%rd10747, %rd10733, %rd10709;
	or.b64  	%rd10748, %rd10733, %rd10709;
	and.b64  	%rd10749, %rd10748, %rd10685;
	or.b64  	%rd10750, %rd10749, %rd10747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7534,%dummy}, %rd10733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7535}, %rd10733;
	}
	shf.r.wrap.b32 	%r7536, %r7535, %r7534, 28;
	shf.r.wrap.b32 	%r7537, %r7534, %r7535, 28;
	mov.b64 	%rd10751, {%r7537, %r7536};
	shf.l.wrap.b32 	%r7538, %r7534, %r7535, 30;
	shf.l.wrap.b32 	%r7539, %r7535, %r7534, 30;
	mov.b64 	%rd10752, {%r7539, %r7538};
	xor.b64  	%rd10753, %rd10751, %rd10752;
	shf.l.wrap.b32 	%r7540, %r7534, %r7535, 25;
	shf.l.wrap.b32 	%r7541, %r7535, %r7534, 25;
	mov.b64 	%rd10754, {%r7541, %r7540};
	xor.b64  	%rd10755, %rd10753, %rd10754;
	add.s64 	%rd10756, %rd10755, %rd10750;
	add.s64 	%rd10757, %rd10756, %rd10745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7542,%dummy}, %rd10746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7543}, %rd10746;
	}
	shf.r.wrap.b32 	%r7544, %r7543, %r7542, 14;
	shf.r.wrap.b32 	%r7545, %r7542, %r7543, 14;
	mov.b64 	%rd10758, {%r7545, %r7544};
	shf.r.wrap.b32 	%r7546, %r7543, %r7542, 18;
	shf.r.wrap.b32 	%r7547, %r7542, %r7543, 18;
	mov.b64 	%rd10759, {%r7547, %r7546};
	xor.b64  	%rd10760, %rd10758, %rd10759;
	shf.l.wrap.b32 	%r7548, %r7542, %r7543, 23;
	shf.l.wrap.b32 	%r7549, %r7543, %r7542, 23;
	mov.b64 	%rd10761, {%r7549, %r7548};
	xor.b64  	%rd10762, %rd10760, %rd10761;
	xor.b64  	%rd10763, %rd10722, %rd10698;
	and.b64  	%rd10764, %rd10746, %rd10763;
	xor.b64  	%rd10765, %rd10764, %rd10698;
	add.s64 	%rd10766, %rd10765, %rd10674;
	add.s64 	%rd10767, %rd10766, %rd10762;
	add.s64 	%rd10768, %rd10767, %rd13882;
	add.s64 	%rd10769, %rd10768, 8268148722764581231;
	add.s64 	%rd13902, %rd10769, %rd10685;
	and.b64  	%rd10770, %rd10757, %rd10733;
	or.b64  	%rd10771, %rd10757, %rd10733;
	and.b64  	%rd10772, %rd10771, %rd10709;
	or.b64  	%rd10773, %rd10772, %rd10770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7550,%dummy}, %rd10757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7551}, %rd10757;
	}
	shf.r.wrap.b32 	%r7552, %r7551, %r7550, 28;
	shf.r.wrap.b32 	%r7553, %r7550, %r7551, 28;
	mov.b64 	%rd10774, {%r7553, %r7552};
	shf.l.wrap.b32 	%r7554, %r7550, %r7551, 30;
	shf.l.wrap.b32 	%r7555, %r7551, %r7550, 30;
	mov.b64 	%rd10775, {%r7555, %r7554};
	xor.b64  	%rd10776, %rd10774, %rd10775;
	shf.l.wrap.b32 	%r7556, %r7550, %r7551, 25;
	shf.l.wrap.b32 	%r7557, %r7551, %r7550, 25;
	mov.b64 	%rd10777, {%r7557, %r7556};
	xor.b64  	%rd10778, %rd10776, %rd10777;
	add.s64 	%rd10779, %rd10778, %rd10773;
	add.s64 	%rd13898, %rd10779, %rd10769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7558,%dummy}, %rd13902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7559}, %rd13902;
	}
	shf.r.wrap.b32 	%r7560, %r7559, %r7558, 14;
	shf.r.wrap.b32 	%r7561, %r7558, %r7559, 14;
	mov.b64 	%rd10780, {%r7561, %r7560};
	shf.r.wrap.b32 	%r7562, %r7559, %r7558, 18;
	shf.r.wrap.b32 	%r7563, %r7558, %r7559, 18;
	mov.b64 	%rd10781, {%r7563, %r7562};
	xor.b64  	%rd10782, %rd10780, %rd10781;
	shf.l.wrap.b32 	%r7564, %r7558, %r7559, 23;
	shf.l.wrap.b32 	%r7565, %r7559, %r7558, 23;
	mov.b64 	%rd10783, {%r7565, %r7564};
	xor.b64  	%rd10784, %rd10782, %rd10783;
	xor.b64  	%rd10785, %rd10746, %rd10722;
	and.b64  	%rd10786, %rd13902, %rd10785;
	xor.b64  	%rd10787, %rd10786, %rd10722;
	add.s64 	%rd10788, %rd10787, %rd10698;
	add.s64 	%rd10789, %rd10788, %rd10784;
	add.s64 	%rd10790, %rd10789, %rd13881;
	add.s64 	%rd10791, %rd10790, -9160688886553864527;
	add.s64 	%rd13901, %rd10791, %rd10709;
	and.b64  	%rd10792, %rd13898, %rd10757;
	or.b64  	%rd10793, %rd13898, %rd10757;
	and.b64  	%rd10794, %rd10793, %rd10733;
	or.b64  	%rd10795, %rd10794, %rd10792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7566,%dummy}, %rd13898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7567}, %rd13898;
	}
	shf.r.wrap.b32 	%r7568, %r7567, %r7566, 28;
	shf.r.wrap.b32 	%r7569, %r7566, %r7567, 28;
	mov.b64 	%rd10796, {%r7569, %r7568};
	shf.l.wrap.b32 	%r7570, %r7566, %r7567, 30;
	shf.l.wrap.b32 	%r7571, %r7567, %r7566, 30;
	mov.b64 	%rd10797, {%r7571, %r7570};
	xor.b64  	%rd10798, %rd10796, %rd10797;
	shf.l.wrap.b32 	%r7572, %r7566, %r7567, 25;
	shf.l.wrap.b32 	%r7573, %r7567, %r7566, 25;
	mov.b64 	%rd10799, {%r7573, %r7572};
	xor.b64  	%rd10800, %rd10798, %rd10799;
	add.s64 	%rd10801, %rd10800, %rd10795;
	add.s64 	%rd13897, %rd10801, %rd10791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7574,%dummy}, %rd13901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7575}, %rd13901;
	}
	shf.r.wrap.b32 	%r7576, %r7575, %r7574, 14;
	shf.r.wrap.b32 	%r7577, %r7574, %r7575, 14;
	mov.b64 	%rd10802, {%r7577, %r7576};
	shf.r.wrap.b32 	%r7578, %r7575, %r7574, 18;
	shf.r.wrap.b32 	%r7579, %r7574, %r7575, 18;
	mov.b64 	%rd10803, {%r7579, %r7578};
	xor.b64  	%rd10804, %rd10802, %rd10803;
	shf.l.wrap.b32 	%r7580, %r7574, %r7575, 23;
	shf.l.wrap.b32 	%r7581, %r7575, %r7574, 23;
	mov.b64 	%rd10805, {%r7581, %r7580};
	xor.b64  	%rd10806, %rd10804, %rd10805;
	xor.b64  	%rd10807, %rd13902, %rd10746;
	and.b64  	%rd10808, %rd13901, %rd10807;
	xor.b64  	%rd10809, %rd10808, %rd10746;
	add.s64 	%rd10810, %rd10809, %rd10722;
	add.s64 	%rd10811, %rd10810, %rd10806;
	add.s64 	%rd10812, %rd10811, %rd13880;
	add.s64 	%rd10813, %rd10812, -7215885187991268811;
	add.s64 	%rd13900, %rd10813, %rd10733;
	and.b64  	%rd10814, %rd13897, %rd13898;
	or.b64  	%rd10815, %rd13897, %rd13898;
	and.b64  	%rd10816, %rd10815, %rd10757;
	or.b64  	%rd10817, %rd10816, %rd10814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7582,%dummy}, %rd13897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7583}, %rd13897;
	}
	shf.r.wrap.b32 	%r7584, %r7583, %r7582, 28;
	shf.r.wrap.b32 	%r7585, %r7582, %r7583, 28;
	mov.b64 	%rd10818, {%r7585, %r7584};
	shf.l.wrap.b32 	%r7586, %r7582, %r7583, 30;
	shf.l.wrap.b32 	%r7587, %r7583, %r7582, 30;
	mov.b64 	%rd10819, {%r7587, %r7586};
	xor.b64  	%rd10820, %rd10818, %rd10819;
	shf.l.wrap.b32 	%r7588, %r7582, %r7583, 25;
	shf.l.wrap.b32 	%r7589, %r7583, %r7582, 25;
	mov.b64 	%rd10821, {%r7589, %r7588};
	xor.b64  	%rd10822, %rd10820, %rd10821;
	add.s64 	%rd10823, %rd10822, %rd10817;
	add.s64 	%rd13896, %rd10823, %rd10813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7590,%dummy}, %rd13900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7591}, %rd13900;
	}
	shf.r.wrap.b32 	%r7592, %r7591, %r7590, 14;
	shf.r.wrap.b32 	%r7593, %r7590, %r7591, 14;
	mov.b64 	%rd10824, {%r7593, %r7592};
	shf.r.wrap.b32 	%r7594, %r7591, %r7590, 18;
	shf.r.wrap.b32 	%r7595, %r7590, %r7591, 18;
	mov.b64 	%rd10825, {%r7595, %r7594};
	xor.b64  	%rd10826, %rd10824, %rd10825;
	shf.l.wrap.b32 	%r7596, %r7590, %r7591, 23;
	shf.l.wrap.b32 	%r7597, %r7591, %r7590, 23;
	mov.b64 	%rd10827, {%r7597, %r7596};
	xor.b64  	%rd10828, %rd10826, %rd10827;
	xor.b64  	%rd10829, %rd13901, %rd13902;
	and.b64  	%rd10830, %rd13900, %rd10829;
	xor.b64  	%rd10831, %rd10830, %rd13902;
	add.s64 	%rd10832, %rd10831, %rd10746;
	add.s64 	%rd10833, %rd10832, %rd10828;
	add.s64 	%rd10834, %rd10833, %rd13879;
	add.s64 	%rd10835, %rd10834, -4495734319001033068;
	add.s64 	%rd13899, %rd10835, %rd10757;
	and.b64  	%rd10836, %rd13896, %rd13897;
	or.b64  	%rd10837, %rd13896, %rd13897;
	and.b64  	%rd10838, %rd10837, %rd13898;
	or.b64  	%rd10839, %rd10838, %rd10836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7598,%dummy}, %rd13896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7599}, %rd13896;
	}
	shf.r.wrap.b32 	%r7600, %r7599, %r7598, 28;
	shf.r.wrap.b32 	%r7601, %r7598, %r7599, 28;
	mov.b64 	%rd10840, {%r7601, %r7600};
	shf.l.wrap.b32 	%r7602, %r7598, %r7599, 30;
	shf.l.wrap.b32 	%r7603, %r7599, %r7598, 30;
	mov.b64 	%rd10841, {%r7603, %r7602};
	xor.b64  	%rd10842, %rd10840, %rd10841;
	shf.l.wrap.b32 	%r7604, %r7598, %r7599, 25;
	shf.l.wrap.b32 	%r7605, %r7599, %r7598, 25;
	mov.b64 	%rd10843, {%r7605, %r7604};
	xor.b64  	%rd10844, %rd10842, %rd10843;
	add.s64 	%rd10845, %rd10844, %rd10839;
	add.s64 	%rd13895, %rd10845, %rd10835;
	mov.u32 	%r9756, 16;

$L__BB0_143:
	.pragma "nounroll";
	mov.u64 	%rd13514, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7606}, %rd13880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7607,%dummy}, %rd13880;
	}
	shf.l.wrap.b32 	%r7608, %r7607, %r7606, 3;
	shf.l.wrap.b32 	%r7609, %r7606, %r7607, 3;
	mov.b64 	%rd10846, {%r7609, %r7608};
	shf.r.wrap.b32 	%r7610, %r7606, %r7607, 19;
	shf.r.wrap.b32 	%r7611, %r7607, %r7606, 19;
	mov.b64 	%rd10847, {%r7611, %r7610};
	xor.b64  	%rd10848, %rd10847, %rd10846;
	shr.u64 	%rd10849, %rd13880, 6;
	xor.b64  	%rd10850, %rd10848, %rd10849;
	add.s64 	%rd10851, %rd13885, %rd13894;
	add.s64 	%rd10852, %rd10851, %rd10850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7612,%dummy}, %rd13893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7613}, %rd13893;
	}
	shf.r.wrap.b32 	%r7614, %r7613, %r7612, 8;
	shf.r.wrap.b32 	%r7615, %r7612, %r7613, 8;
	mov.b64 	%rd10853, {%r7615, %r7614};
	shf.r.wrap.b32 	%r7616, %r7613, %r7612, 1;
	shf.r.wrap.b32 	%r7617, %r7612, %r7613, 1;
	mov.b64 	%rd10854, {%r7617, %r7616};
	xor.b64  	%rd10855, %rd10854, %rd10853;
	shr.u64 	%rd10856, %rd13893, 7;
	xor.b64  	%rd10857, %rd10855, %rd10856;
	add.s64 	%rd13894, %rd10852, %rd10857;
	mul.wide.u32 	%rd10858, %r9756, 8;
	add.s64 	%rd10860, %rd13514, %rd10858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7618,%dummy}, %rd13899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7619}, %rd13899;
	}
	shf.r.wrap.b32 	%r7620, %r7619, %r7618, 18;
	shf.r.wrap.b32 	%r7621, %r7618, %r7619, 18;
	mov.b64 	%rd10861, {%r7621, %r7620};
	shf.r.wrap.b32 	%r7622, %r7619, %r7618, 14;
	shf.r.wrap.b32 	%r7623, %r7618, %r7619, 14;
	mov.b64 	%rd10862, {%r7623, %r7622};
	xor.b64  	%rd10863, %rd10862, %rd10861;
	shf.l.wrap.b32 	%r7624, %r7618, %r7619, 23;
	shf.l.wrap.b32 	%r7625, %r7619, %r7618, 23;
	mov.b64 	%rd10864, {%r7625, %r7624};
	xor.b64  	%rd10865, %rd10863, %rd10864;
	xor.b64  	%rd10866, %rd13900, %rd13901;
	and.b64  	%rd10867, %rd13899, %rd10866;
	xor.b64  	%rd10868, %rd10867, %rd13901;
	add.s64 	%rd10869, %rd10868, %rd13902;
	add.s64 	%rd10870, %rd10869, %rd10865;
	ld.const.u64 	%rd10871, [%rd10860];
	add.s64 	%rd10872, %rd10870, %rd10871;
	add.s64 	%rd10873, %rd10872, %rd13894;
	add.s64 	%rd10874, %rd10873, %rd13898;
	or.b64  	%rd10875, %rd13895, %rd13896;
	and.b64  	%rd10876, %rd10875, %rd13897;
	and.b64  	%rd10877, %rd13895, %rd13896;
	or.b64  	%rd10878, %rd10876, %rd10877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7626}, %rd13895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7627,%dummy}, %rd13895;
	}
	shf.l.wrap.b32 	%r7628, %r7627, %r7626, 30;
	shf.l.wrap.b32 	%r7629, %r7626, %r7627, 30;
	mov.b64 	%rd10879, {%r7629, %r7628};
	shf.r.wrap.b32 	%r7630, %r7626, %r7627, 28;
	shf.r.wrap.b32 	%r7631, %r7627, %r7626, 28;
	mov.b64 	%rd10880, {%r7631, %r7630};
	xor.b64  	%rd10881, %rd10880, %rd10879;
	shf.l.wrap.b32 	%r7632, %r7627, %r7626, 25;
	shf.l.wrap.b32 	%r7633, %r7626, %r7627, 25;
	mov.b64 	%rd10882, {%r7633, %r7632};
	xor.b64  	%rd10883, %rd10881, %rd10882;
	add.s64 	%rd10884, %rd10883, %rd10878;
	add.s64 	%rd10885, %rd10884, %rd10873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7634}, %rd13879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7635,%dummy}, %rd13879;
	}
	shf.l.wrap.b32 	%r7636, %r7635, %r7634, 3;
	shf.l.wrap.b32 	%r7637, %r7634, %r7635, 3;
	mov.b64 	%rd10886, {%r7637, %r7636};
	shf.r.wrap.b32 	%r7638, %r7634, %r7635, 19;
	shf.r.wrap.b32 	%r7639, %r7635, %r7634, 19;
	mov.b64 	%rd10887, {%r7639, %r7638};
	xor.b64  	%rd10888, %rd10887, %rd10886;
	shr.u64 	%rd10889, %rd13879, 6;
	xor.b64  	%rd10890, %rd10888, %rd10889;
	add.s64 	%rd10891, %rd13884, %rd13893;
	add.s64 	%rd10892, %rd10891, %rd10890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7640,%dummy}, %rd13892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7641}, %rd13892;
	}
	shf.r.wrap.b32 	%r7642, %r7641, %r7640, 8;
	shf.r.wrap.b32 	%r7643, %r7640, %r7641, 8;
	mov.b64 	%rd10893, {%r7643, %r7642};
	shf.r.wrap.b32 	%r7644, %r7641, %r7640, 1;
	shf.r.wrap.b32 	%r7645, %r7640, %r7641, 1;
	mov.b64 	%rd10894, {%r7645, %r7644};
	xor.b64  	%rd10895, %rd10894, %rd10893;
	shr.u64 	%rd10896, %rd13892, 7;
	xor.b64  	%rd10897, %rd10895, %rd10896;
	add.s64 	%rd13893, %rd10892, %rd10897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7646,%dummy}, %rd10874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7647}, %rd10874;
	}
	shf.r.wrap.b32 	%r7648, %r7647, %r7646, 14;
	shf.r.wrap.b32 	%r7649, %r7646, %r7647, 14;
	mov.b64 	%rd10898, {%r7649, %r7648};
	shf.r.wrap.b32 	%r7650, %r7647, %r7646, 18;
	shf.r.wrap.b32 	%r7651, %r7646, %r7647, 18;
	mov.b64 	%rd10899, {%r7651, %r7650};
	xor.b64  	%rd10900, %rd10898, %rd10899;
	shf.l.wrap.b32 	%r7652, %r7646, %r7647, 23;
	shf.l.wrap.b32 	%r7653, %r7647, %r7646, 23;
	mov.b64 	%rd10901, {%r7653, %r7652};
	xor.b64  	%rd10902, %rd10900, %rd10901;
	xor.b64  	%rd10903, %rd13899, %rd13900;
	and.b64  	%rd10904, %rd10874, %rd10903;
	xor.b64  	%rd10905, %rd10904, %rd13900;
	add.s64 	%rd10906, %rd10905, %rd13901;
	add.s64 	%rd10907, %rd10906, %rd10902;
	ld.const.u64 	%rd10908, [%rd10860+8];
	add.s64 	%rd10909, %rd10907, %rd10908;
	add.s64 	%rd10910, %rd10909, %rd13893;
	add.s64 	%rd10911, %rd10910, %rd13897;
	and.b64  	%rd10912, %rd10885, %rd13895;
	or.b64  	%rd10913, %rd10885, %rd13895;
	and.b64  	%rd10914, %rd10913, %rd13896;
	or.b64  	%rd10915, %rd10914, %rd10912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7654,%dummy}, %rd10885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7655}, %rd10885;
	}
	shf.r.wrap.b32 	%r7656, %r7655, %r7654, 28;
	shf.r.wrap.b32 	%r7657, %r7654, %r7655, 28;
	mov.b64 	%rd10916, {%r7657, %r7656};
	shf.l.wrap.b32 	%r7658, %r7654, %r7655, 30;
	shf.l.wrap.b32 	%r7659, %r7655, %r7654, 30;
	mov.b64 	%rd10917, {%r7659, %r7658};
	xor.b64  	%rd10918, %rd10916, %rd10917;
	shf.l.wrap.b32 	%r7660, %r7654, %r7655, 25;
	shf.l.wrap.b32 	%r7661, %r7655, %r7654, 25;
	mov.b64 	%rd10919, {%r7661, %r7660};
	xor.b64  	%rd10920, %rd10918, %rd10919;
	add.s64 	%rd10921, %rd10920, %rd10915;
	add.s64 	%rd10922, %rd10921, %rd10910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7662,%dummy}, %rd13894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7663}, %rd13894;
	}
	shf.r.wrap.b32 	%r7664, %r7663, %r7662, 19;
	shf.r.wrap.b32 	%r7665, %r7662, %r7663, 19;
	mov.b64 	%rd10923, {%r7665, %r7664};
	shf.l.wrap.b32 	%r7666, %r7662, %r7663, 3;
	shf.l.wrap.b32 	%r7667, %r7663, %r7662, 3;
	mov.b64 	%rd10924, {%r7667, %r7666};
	xor.b64  	%rd10925, %rd10923, %rd10924;
	shr.u64 	%rd10926, %rd13894, 6;
	xor.b64  	%rd10927, %rd10925, %rd10926;
	add.s64 	%rd10928, %rd13883, %rd13892;
	add.s64 	%rd10929, %rd10928, %rd10927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7668,%dummy}, %rd13891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7669}, %rd13891;
	}
	shf.r.wrap.b32 	%r7670, %r7669, %r7668, 8;
	shf.r.wrap.b32 	%r7671, %r7668, %r7669, 8;
	mov.b64 	%rd10930, {%r7671, %r7670};
	shf.r.wrap.b32 	%r7672, %r7669, %r7668, 1;
	shf.r.wrap.b32 	%r7673, %r7668, %r7669, 1;
	mov.b64 	%rd10931, {%r7673, %r7672};
	xor.b64  	%rd10932, %rd10931, %rd10930;
	shr.u64 	%rd10933, %rd13891, 7;
	xor.b64  	%rd10934, %rd10932, %rd10933;
	add.s64 	%rd13892, %rd10929, %rd10934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7674,%dummy}, %rd10911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7675}, %rd10911;
	}
	shf.r.wrap.b32 	%r7676, %r7675, %r7674, 14;
	shf.r.wrap.b32 	%r7677, %r7674, %r7675, 14;
	mov.b64 	%rd10935, {%r7677, %r7676};
	shf.r.wrap.b32 	%r7678, %r7675, %r7674, 18;
	shf.r.wrap.b32 	%r7679, %r7674, %r7675, 18;
	mov.b64 	%rd10936, {%r7679, %r7678};
	xor.b64  	%rd10937, %rd10935, %rd10936;
	shf.l.wrap.b32 	%r7680, %r7674, %r7675, 23;
	shf.l.wrap.b32 	%r7681, %r7675, %r7674, 23;
	mov.b64 	%rd10938, {%r7681, %r7680};
	xor.b64  	%rd10939, %rd10937, %rd10938;
	xor.b64  	%rd10940, %rd10874, %rd13899;
	and.b64  	%rd10941, %rd10911, %rd10940;
	xor.b64  	%rd10942, %rd10941, %rd13899;
	add.s64 	%rd10943, %rd10942, %rd13900;
	add.s64 	%rd10944, %rd10943, %rd10939;
	ld.const.u64 	%rd10945, [%rd10860+16];
	add.s64 	%rd10946, %rd10944, %rd10945;
	add.s64 	%rd10947, %rd10946, %rd13892;
	add.s64 	%rd10948, %rd10947, %rd13896;
	and.b64  	%rd10949, %rd10922, %rd10885;
	or.b64  	%rd10950, %rd10922, %rd10885;
	and.b64  	%rd10951, %rd10950, %rd13895;
	or.b64  	%rd10952, %rd10951, %rd10949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7682,%dummy}, %rd10922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7683}, %rd10922;
	}
	shf.r.wrap.b32 	%r7684, %r7683, %r7682, 28;
	shf.r.wrap.b32 	%r7685, %r7682, %r7683, 28;
	mov.b64 	%rd10953, {%r7685, %r7684};
	shf.l.wrap.b32 	%r7686, %r7682, %r7683, 30;
	shf.l.wrap.b32 	%r7687, %r7683, %r7682, 30;
	mov.b64 	%rd10954, {%r7687, %r7686};
	xor.b64  	%rd10955, %rd10953, %rd10954;
	shf.l.wrap.b32 	%r7688, %r7682, %r7683, 25;
	shf.l.wrap.b32 	%r7689, %r7683, %r7682, 25;
	mov.b64 	%rd10956, {%r7689, %r7688};
	xor.b64  	%rd10957, %rd10955, %rd10956;
	add.s64 	%rd10958, %rd10957, %rd10952;
	add.s64 	%rd10959, %rd10958, %rd10947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7690,%dummy}, %rd13893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7691}, %rd13893;
	}
	shf.r.wrap.b32 	%r7692, %r7691, %r7690, 19;
	shf.r.wrap.b32 	%r7693, %r7690, %r7691, 19;
	mov.b64 	%rd10960, {%r7693, %r7692};
	shf.l.wrap.b32 	%r7694, %r7690, %r7691, 3;
	shf.l.wrap.b32 	%r7695, %r7691, %r7690, 3;
	mov.b64 	%rd10961, {%r7695, %r7694};
	xor.b64  	%rd10962, %rd10960, %rd10961;
	shr.u64 	%rd10963, %rd13893, 6;
	xor.b64  	%rd10964, %rd10962, %rd10963;
	add.s64 	%rd10965, %rd13882, %rd13891;
	add.s64 	%rd10966, %rd10965, %rd10964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7696,%dummy}, %rd13890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7697}, %rd13890;
	}
	shf.r.wrap.b32 	%r7698, %r7697, %r7696, 8;
	shf.r.wrap.b32 	%r7699, %r7696, %r7697, 8;
	mov.b64 	%rd10967, {%r7699, %r7698};
	shf.r.wrap.b32 	%r7700, %r7697, %r7696, 1;
	shf.r.wrap.b32 	%r7701, %r7696, %r7697, 1;
	mov.b64 	%rd10968, {%r7701, %r7700};
	xor.b64  	%rd10969, %rd10968, %rd10967;
	shr.u64 	%rd10970, %rd13890, 7;
	xor.b64  	%rd10971, %rd10969, %rd10970;
	add.s64 	%rd13891, %rd10966, %rd10971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7702,%dummy}, %rd10948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7703}, %rd10948;
	}
	shf.r.wrap.b32 	%r7704, %r7703, %r7702, 14;
	shf.r.wrap.b32 	%r7705, %r7702, %r7703, 14;
	mov.b64 	%rd10972, {%r7705, %r7704};
	shf.r.wrap.b32 	%r7706, %r7703, %r7702, 18;
	shf.r.wrap.b32 	%r7707, %r7702, %r7703, 18;
	mov.b64 	%rd10973, {%r7707, %r7706};
	xor.b64  	%rd10974, %rd10972, %rd10973;
	shf.l.wrap.b32 	%r7708, %r7702, %r7703, 23;
	shf.l.wrap.b32 	%r7709, %r7703, %r7702, 23;
	mov.b64 	%rd10975, {%r7709, %r7708};
	xor.b64  	%rd10976, %rd10974, %rd10975;
	xor.b64  	%rd10977, %rd10911, %rd10874;
	and.b64  	%rd10978, %rd10948, %rd10977;
	xor.b64  	%rd10979, %rd10978, %rd10874;
	add.s64 	%rd10980, %rd10979, %rd13899;
	add.s64 	%rd10981, %rd10980, %rd10976;
	ld.const.u64 	%rd10982, [%rd10860+24];
	add.s64 	%rd10983, %rd10981, %rd10982;
	add.s64 	%rd10984, %rd10983, %rd13891;
	add.s64 	%rd10985, %rd10984, %rd13895;
	and.b64  	%rd10986, %rd10959, %rd10922;
	or.b64  	%rd10987, %rd10959, %rd10922;
	and.b64  	%rd10988, %rd10987, %rd10885;
	or.b64  	%rd10989, %rd10988, %rd10986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7710,%dummy}, %rd10959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7711}, %rd10959;
	}
	shf.r.wrap.b32 	%r7712, %r7711, %r7710, 28;
	shf.r.wrap.b32 	%r7713, %r7710, %r7711, 28;
	mov.b64 	%rd10990, {%r7713, %r7712};
	shf.l.wrap.b32 	%r7714, %r7710, %r7711, 30;
	shf.l.wrap.b32 	%r7715, %r7711, %r7710, 30;
	mov.b64 	%rd10991, {%r7715, %r7714};
	xor.b64  	%rd10992, %rd10990, %rd10991;
	shf.l.wrap.b32 	%r7716, %r7710, %r7711, 25;
	shf.l.wrap.b32 	%r7717, %r7711, %r7710, 25;
	mov.b64 	%rd10993, {%r7717, %r7716};
	xor.b64  	%rd10994, %rd10992, %rd10993;
	add.s64 	%rd10995, %rd10994, %rd10989;
	add.s64 	%rd10996, %rd10995, %rd10984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7718,%dummy}, %rd13892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7719}, %rd13892;
	}
	shf.r.wrap.b32 	%r7720, %r7719, %r7718, 19;
	shf.r.wrap.b32 	%r7721, %r7718, %r7719, 19;
	mov.b64 	%rd10997, {%r7721, %r7720};
	shf.l.wrap.b32 	%r7722, %r7718, %r7719, 3;
	shf.l.wrap.b32 	%r7723, %r7719, %r7718, 3;
	mov.b64 	%rd10998, {%r7723, %r7722};
	xor.b64  	%rd10999, %rd10997, %rd10998;
	shr.u64 	%rd11000, %rd13892, 6;
	xor.b64  	%rd11001, %rd10999, %rd11000;
	add.s64 	%rd11002, %rd13881, %rd13890;
	add.s64 	%rd11003, %rd11002, %rd11001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7724,%dummy}, %rd13889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7725}, %rd13889;
	}
	shf.r.wrap.b32 	%r7726, %r7725, %r7724, 8;
	shf.r.wrap.b32 	%r7727, %r7724, %r7725, 8;
	mov.b64 	%rd11004, {%r7727, %r7726};
	shf.r.wrap.b32 	%r7728, %r7725, %r7724, 1;
	shf.r.wrap.b32 	%r7729, %r7724, %r7725, 1;
	mov.b64 	%rd11005, {%r7729, %r7728};
	xor.b64  	%rd11006, %rd11005, %rd11004;
	shr.u64 	%rd11007, %rd13889, 7;
	xor.b64  	%rd11008, %rd11006, %rd11007;
	add.s64 	%rd13890, %rd11003, %rd11008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7730,%dummy}, %rd10985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7731}, %rd10985;
	}
	shf.r.wrap.b32 	%r7732, %r7731, %r7730, 14;
	shf.r.wrap.b32 	%r7733, %r7730, %r7731, 14;
	mov.b64 	%rd11009, {%r7733, %r7732};
	shf.r.wrap.b32 	%r7734, %r7731, %r7730, 18;
	shf.r.wrap.b32 	%r7735, %r7730, %r7731, 18;
	mov.b64 	%rd11010, {%r7735, %r7734};
	xor.b64  	%rd11011, %rd11009, %rd11010;
	shf.l.wrap.b32 	%r7736, %r7730, %r7731, 23;
	shf.l.wrap.b32 	%r7737, %r7731, %r7730, 23;
	mov.b64 	%rd11012, {%r7737, %r7736};
	xor.b64  	%rd11013, %rd11011, %rd11012;
	xor.b64  	%rd11014, %rd10948, %rd10911;
	and.b64  	%rd11015, %rd10985, %rd11014;
	xor.b64  	%rd11016, %rd11015, %rd10911;
	add.s64 	%rd11017, %rd11016, %rd10874;
	add.s64 	%rd11018, %rd11017, %rd11013;
	ld.const.u64 	%rd11019, [%rd10860+32];
	add.s64 	%rd11020, %rd11018, %rd11019;
	add.s64 	%rd11021, %rd11020, %rd13890;
	add.s64 	%rd11022, %rd11021, %rd10885;
	and.b64  	%rd11023, %rd10996, %rd10959;
	or.b64  	%rd11024, %rd10996, %rd10959;
	and.b64  	%rd11025, %rd11024, %rd10922;
	or.b64  	%rd11026, %rd11025, %rd11023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7738,%dummy}, %rd10996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7739}, %rd10996;
	}
	shf.r.wrap.b32 	%r7740, %r7739, %r7738, 28;
	shf.r.wrap.b32 	%r7741, %r7738, %r7739, 28;
	mov.b64 	%rd11027, {%r7741, %r7740};
	shf.l.wrap.b32 	%r7742, %r7738, %r7739, 30;
	shf.l.wrap.b32 	%r7743, %r7739, %r7738, 30;
	mov.b64 	%rd11028, {%r7743, %r7742};
	xor.b64  	%rd11029, %rd11027, %rd11028;
	shf.l.wrap.b32 	%r7744, %r7738, %r7739, 25;
	shf.l.wrap.b32 	%r7745, %r7739, %r7738, 25;
	mov.b64 	%rd11030, {%r7745, %r7744};
	xor.b64  	%rd11031, %rd11029, %rd11030;
	add.s64 	%rd11032, %rd11031, %rd11026;
	add.s64 	%rd11033, %rd11032, %rd11021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7746,%dummy}, %rd13891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7747}, %rd13891;
	}
	shf.r.wrap.b32 	%r7748, %r7747, %r7746, 19;
	shf.r.wrap.b32 	%r7749, %r7746, %r7747, 19;
	mov.b64 	%rd11034, {%r7749, %r7748};
	shf.l.wrap.b32 	%r7750, %r7746, %r7747, 3;
	shf.l.wrap.b32 	%r7751, %r7747, %r7746, 3;
	mov.b64 	%rd11035, {%r7751, %r7750};
	xor.b64  	%rd11036, %rd11034, %rd11035;
	shr.u64 	%rd11037, %rd13891, 6;
	xor.b64  	%rd11038, %rd11036, %rd11037;
	add.s64 	%rd11039, %rd13880, %rd13889;
	add.s64 	%rd11040, %rd11039, %rd11038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7752,%dummy}, %rd13888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7753}, %rd13888;
	}
	shf.r.wrap.b32 	%r7754, %r7753, %r7752, 8;
	shf.r.wrap.b32 	%r7755, %r7752, %r7753, 8;
	mov.b64 	%rd11041, {%r7755, %r7754};
	shf.r.wrap.b32 	%r7756, %r7753, %r7752, 1;
	shf.r.wrap.b32 	%r7757, %r7752, %r7753, 1;
	mov.b64 	%rd11042, {%r7757, %r7756};
	xor.b64  	%rd11043, %rd11042, %rd11041;
	shr.u64 	%rd11044, %rd13888, 7;
	xor.b64  	%rd11045, %rd11043, %rd11044;
	add.s64 	%rd13889, %rd11040, %rd11045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7758,%dummy}, %rd11022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7759}, %rd11022;
	}
	shf.r.wrap.b32 	%r7760, %r7759, %r7758, 14;
	shf.r.wrap.b32 	%r7761, %r7758, %r7759, 14;
	mov.b64 	%rd11046, {%r7761, %r7760};
	shf.r.wrap.b32 	%r7762, %r7759, %r7758, 18;
	shf.r.wrap.b32 	%r7763, %r7758, %r7759, 18;
	mov.b64 	%rd11047, {%r7763, %r7762};
	xor.b64  	%rd11048, %rd11046, %rd11047;
	shf.l.wrap.b32 	%r7764, %r7758, %r7759, 23;
	shf.l.wrap.b32 	%r7765, %r7759, %r7758, 23;
	mov.b64 	%rd11049, {%r7765, %r7764};
	xor.b64  	%rd11050, %rd11048, %rd11049;
	xor.b64  	%rd11051, %rd10985, %rd10948;
	and.b64  	%rd11052, %rd11022, %rd11051;
	xor.b64  	%rd11053, %rd11052, %rd10948;
	add.s64 	%rd11054, %rd11053, %rd10911;
	add.s64 	%rd11055, %rd11054, %rd11050;
	ld.const.u64 	%rd11056, [%rd10860+40];
	add.s64 	%rd11057, %rd11055, %rd11056;
	add.s64 	%rd11058, %rd11057, %rd13889;
	add.s64 	%rd11059, %rd11058, %rd10922;
	and.b64  	%rd11060, %rd11033, %rd10996;
	or.b64  	%rd11061, %rd11033, %rd10996;
	and.b64  	%rd11062, %rd11061, %rd10959;
	or.b64  	%rd11063, %rd11062, %rd11060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7766,%dummy}, %rd11033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7767}, %rd11033;
	}
	shf.r.wrap.b32 	%r7768, %r7767, %r7766, 28;
	shf.r.wrap.b32 	%r7769, %r7766, %r7767, 28;
	mov.b64 	%rd11064, {%r7769, %r7768};
	shf.l.wrap.b32 	%r7770, %r7766, %r7767, 30;
	shf.l.wrap.b32 	%r7771, %r7767, %r7766, 30;
	mov.b64 	%rd11065, {%r7771, %r7770};
	xor.b64  	%rd11066, %rd11064, %rd11065;
	shf.l.wrap.b32 	%r7772, %r7766, %r7767, 25;
	shf.l.wrap.b32 	%r7773, %r7767, %r7766, 25;
	mov.b64 	%rd11067, {%r7773, %r7772};
	xor.b64  	%rd11068, %rd11066, %rd11067;
	add.s64 	%rd11069, %rd11068, %rd11063;
	add.s64 	%rd11070, %rd11069, %rd11058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7774,%dummy}, %rd13890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7775}, %rd13890;
	}
	shf.r.wrap.b32 	%r7776, %r7775, %r7774, 19;
	shf.r.wrap.b32 	%r7777, %r7774, %r7775, 19;
	mov.b64 	%rd11071, {%r7777, %r7776};
	shf.l.wrap.b32 	%r7778, %r7774, %r7775, 3;
	shf.l.wrap.b32 	%r7779, %r7775, %r7774, 3;
	mov.b64 	%rd11072, {%r7779, %r7778};
	xor.b64  	%rd11073, %rd11071, %rd11072;
	shr.u64 	%rd11074, %rd13890, 6;
	xor.b64  	%rd11075, %rd11073, %rd11074;
	add.s64 	%rd11076, %rd13879, %rd13888;
	add.s64 	%rd11077, %rd11076, %rd11075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7780,%dummy}, %rd13887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7781}, %rd13887;
	}
	shf.r.wrap.b32 	%r7782, %r7781, %r7780, 8;
	shf.r.wrap.b32 	%r7783, %r7780, %r7781, 8;
	mov.b64 	%rd11078, {%r7783, %r7782};
	shf.r.wrap.b32 	%r7784, %r7781, %r7780, 1;
	shf.r.wrap.b32 	%r7785, %r7780, %r7781, 1;
	mov.b64 	%rd11079, {%r7785, %r7784};
	xor.b64  	%rd11080, %rd11079, %rd11078;
	shr.u64 	%rd11081, %rd13887, 7;
	xor.b64  	%rd11082, %rd11080, %rd11081;
	add.s64 	%rd13888, %rd11077, %rd11082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7786,%dummy}, %rd11059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7787}, %rd11059;
	}
	shf.r.wrap.b32 	%r7788, %r7787, %r7786, 14;
	shf.r.wrap.b32 	%r7789, %r7786, %r7787, 14;
	mov.b64 	%rd11083, {%r7789, %r7788};
	shf.r.wrap.b32 	%r7790, %r7787, %r7786, 18;
	shf.r.wrap.b32 	%r7791, %r7786, %r7787, 18;
	mov.b64 	%rd11084, {%r7791, %r7790};
	xor.b64  	%rd11085, %rd11083, %rd11084;
	shf.l.wrap.b32 	%r7792, %r7786, %r7787, 23;
	shf.l.wrap.b32 	%r7793, %r7787, %r7786, 23;
	mov.b64 	%rd11086, {%r7793, %r7792};
	xor.b64  	%rd11087, %rd11085, %rd11086;
	xor.b64  	%rd11088, %rd11022, %rd10985;
	and.b64  	%rd11089, %rd11059, %rd11088;
	xor.b64  	%rd11090, %rd11089, %rd10985;
	add.s64 	%rd11091, %rd11090, %rd10948;
	add.s64 	%rd11092, %rd11091, %rd11087;
	ld.const.u64 	%rd11093, [%rd10860+48];
	add.s64 	%rd11094, %rd11092, %rd11093;
	add.s64 	%rd11095, %rd11094, %rd13888;
	add.s64 	%rd11096, %rd11095, %rd10959;
	and.b64  	%rd11097, %rd11070, %rd11033;
	or.b64  	%rd11098, %rd11070, %rd11033;
	and.b64  	%rd11099, %rd11098, %rd10996;
	or.b64  	%rd11100, %rd11099, %rd11097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7794,%dummy}, %rd11070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7795}, %rd11070;
	}
	shf.r.wrap.b32 	%r7796, %r7795, %r7794, 28;
	shf.r.wrap.b32 	%r7797, %r7794, %r7795, 28;
	mov.b64 	%rd11101, {%r7797, %r7796};
	shf.l.wrap.b32 	%r7798, %r7794, %r7795, 30;
	shf.l.wrap.b32 	%r7799, %r7795, %r7794, 30;
	mov.b64 	%rd11102, {%r7799, %r7798};
	xor.b64  	%rd11103, %rd11101, %rd11102;
	shf.l.wrap.b32 	%r7800, %r7794, %r7795, 25;
	shf.l.wrap.b32 	%r7801, %r7795, %r7794, 25;
	mov.b64 	%rd11104, {%r7801, %r7800};
	xor.b64  	%rd11105, %rd11103, %rd11104;
	add.s64 	%rd11106, %rd11105, %rd11100;
	add.s64 	%rd11107, %rd11106, %rd11095;
	add.s64 	%rd11108, %rd13894, %rd13887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7802,%dummy}, %rd13889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7803}, %rd13889;
	}
	shf.r.wrap.b32 	%r7804, %r7803, %r7802, 19;
	shf.r.wrap.b32 	%r7805, %r7802, %r7803, 19;
	mov.b64 	%rd11109, {%r7805, %r7804};
	shf.l.wrap.b32 	%r7806, %r7802, %r7803, 3;
	shf.l.wrap.b32 	%r7807, %r7803, %r7802, 3;
	mov.b64 	%rd11110, {%r7807, %r7806};
	xor.b64  	%rd11111, %rd11109, %rd11110;
	shr.u64 	%rd11112, %rd13889, 6;
	xor.b64  	%rd11113, %rd11111, %rd11112;
	add.s64 	%rd11114, %rd11108, %rd11113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7808,%dummy}, %rd13886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7809}, %rd13886;
	}
	shf.r.wrap.b32 	%r7810, %r7809, %r7808, 8;
	shf.r.wrap.b32 	%r7811, %r7808, %r7809, 8;
	mov.b64 	%rd11115, {%r7811, %r7810};
	shf.r.wrap.b32 	%r7812, %r7809, %r7808, 1;
	shf.r.wrap.b32 	%r7813, %r7808, %r7809, 1;
	mov.b64 	%rd11116, {%r7813, %r7812};
	xor.b64  	%rd11117, %rd11116, %rd11115;
	shr.u64 	%rd11118, %rd13886, 7;
	xor.b64  	%rd11119, %rd11117, %rd11118;
	add.s64 	%rd13887, %rd11114, %rd11119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7814,%dummy}, %rd11096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7815}, %rd11096;
	}
	shf.r.wrap.b32 	%r7816, %r7815, %r7814, 14;
	shf.r.wrap.b32 	%r7817, %r7814, %r7815, 14;
	mov.b64 	%rd11120, {%r7817, %r7816};
	shf.r.wrap.b32 	%r7818, %r7815, %r7814, 18;
	shf.r.wrap.b32 	%r7819, %r7814, %r7815, 18;
	mov.b64 	%rd11121, {%r7819, %r7818};
	xor.b64  	%rd11122, %rd11120, %rd11121;
	shf.l.wrap.b32 	%r7820, %r7814, %r7815, 23;
	shf.l.wrap.b32 	%r7821, %r7815, %r7814, 23;
	mov.b64 	%rd11123, {%r7821, %r7820};
	xor.b64  	%rd11124, %rd11122, %rd11123;
	xor.b64  	%rd11125, %rd11059, %rd11022;
	and.b64  	%rd11126, %rd11096, %rd11125;
	xor.b64  	%rd11127, %rd11126, %rd11022;
	add.s64 	%rd11128, %rd11127, %rd10985;
	add.s64 	%rd11129, %rd11128, %rd11124;
	ld.const.u64 	%rd11130, [%rd10860+56];
	add.s64 	%rd11131, %rd11129, %rd11130;
	add.s64 	%rd11132, %rd11131, %rd13887;
	add.s64 	%rd11133, %rd11132, %rd10996;
	and.b64  	%rd11134, %rd11107, %rd11070;
	or.b64  	%rd11135, %rd11107, %rd11070;
	and.b64  	%rd11136, %rd11135, %rd11033;
	or.b64  	%rd11137, %rd11136, %rd11134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7822,%dummy}, %rd11107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7823}, %rd11107;
	}
	shf.r.wrap.b32 	%r7824, %r7823, %r7822, 28;
	shf.r.wrap.b32 	%r7825, %r7822, %r7823, 28;
	mov.b64 	%rd11138, {%r7825, %r7824};
	shf.l.wrap.b32 	%r7826, %r7822, %r7823, 30;
	shf.l.wrap.b32 	%r7827, %r7823, %r7822, 30;
	mov.b64 	%rd11139, {%r7827, %r7826};
	xor.b64  	%rd11140, %rd11138, %rd11139;
	shf.l.wrap.b32 	%r7828, %r7822, %r7823, 25;
	shf.l.wrap.b32 	%r7829, %r7823, %r7822, 25;
	mov.b64 	%rd11141, {%r7829, %r7828};
	xor.b64  	%rd11142, %rd11140, %rd11141;
	add.s64 	%rd11143, %rd11142, %rd11137;
	add.s64 	%rd11144, %rd11143, %rd11132;
	add.s64 	%rd11145, %rd13893, %rd13886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7830,%dummy}, %rd13888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7831}, %rd13888;
	}
	shf.r.wrap.b32 	%r7832, %r7831, %r7830, 19;
	shf.r.wrap.b32 	%r7833, %r7830, %r7831, 19;
	mov.b64 	%rd11146, {%r7833, %r7832};
	shf.l.wrap.b32 	%r7834, %r7830, %r7831, 3;
	shf.l.wrap.b32 	%r7835, %r7831, %r7830, 3;
	mov.b64 	%rd11147, {%r7835, %r7834};
	xor.b64  	%rd11148, %rd11146, %rd11147;
	shr.u64 	%rd11149, %rd13888, 6;
	xor.b64  	%rd11150, %rd11148, %rd11149;
	add.s64 	%rd11151, %rd11145, %rd11150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7836,%dummy}, %rd13885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7837}, %rd13885;
	}
	shf.r.wrap.b32 	%r7838, %r7837, %r7836, 8;
	shf.r.wrap.b32 	%r7839, %r7836, %r7837, 8;
	mov.b64 	%rd11152, {%r7839, %r7838};
	shf.r.wrap.b32 	%r7840, %r7837, %r7836, 1;
	shf.r.wrap.b32 	%r7841, %r7836, %r7837, 1;
	mov.b64 	%rd11153, {%r7841, %r7840};
	xor.b64  	%rd11154, %rd11153, %rd11152;
	shr.u64 	%rd11155, %rd13885, 7;
	xor.b64  	%rd11156, %rd11154, %rd11155;
	add.s64 	%rd13886, %rd11151, %rd11156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7842,%dummy}, %rd11133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7843}, %rd11133;
	}
	shf.r.wrap.b32 	%r7844, %r7843, %r7842, 14;
	shf.r.wrap.b32 	%r7845, %r7842, %r7843, 14;
	mov.b64 	%rd11157, {%r7845, %r7844};
	shf.r.wrap.b32 	%r7846, %r7843, %r7842, 18;
	shf.r.wrap.b32 	%r7847, %r7842, %r7843, 18;
	mov.b64 	%rd11158, {%r7847, %r7846};
	xor.b64  	%rd11159, %rd11157, %rd11158;
	shf.l.wrap.b32 	%r7848, %r7842, %r7843, 23;
	shf.l.wrap.b32 	%r7849, %r7843, %r7842, 23;
	mov.b64 	%rd11160, {%r7849, %r7848};
	xor.b64  	%rd11161, %rd11159, %rd11160;
	xor.b64  	%rd11162, %rd11096, %rd11059;
	and.b64  	%rd11163, %rd11133, %rd11162;
	xor.b64  	%rd11164, %rd11163, %rd11059;
	add.s64 	%rd11165, %rd11164, %rd11022;
	add.s64 	%rd11166, %rd11165, %rd11161;
	ld.const.u64 	%rd11167, [%rd10860+64];
	add.s64 	%rd11168, %rd11166, %rd11167;
	add.s64 	%rd11169, %rd11168, %rd13886;
	add.s64 	%rd11170, %rd11169, %rd11033;
	and.b64  	%rd11171, %rd11144, %rd11107;
	or.b64  	%rd11172, %rd11144, %rd11107;
	and.b64  	%rd11173, %rd11172, %rd11070;
	or.b64  	%rd11174, %rd11173, %rd11171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7850,%dummy}, %rd11144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7851}, %rd11144;
	}
	shf.r.wrap.b32 	%r7852, %r7851, %r7850, 28;
	shf.r.wrap.b32 	%r7853, %r7850, %r7851, 28;
	mov.b64 	%rd11175, {%r7853, %r7852};
	shf.l.wrap.b32 	%r7854, %r7850, %r7851, 30;
	shf.l.wrap.b32 	%r7855, %r7851, %r7850, 30;
	mov.b64 	%rd11176, {%r7855, %r7854};
	xor.b64  	%rd11177, %rd11175, %rd11176;
	shf.l.wrap.b32 	%r7856, %r7850, %r7851, 25;
	shf.l.wrap.b32 	%r7857, %r7851, %r7850, 25;
	mov.b64 	%rd11178, {%r7857, %r7856};
	xor.b64  	%rd11179, %rd11177, %rd11178;
	add.s64 	%rd11180, %rd11179, %rd11174;
	add.s64 	%rd11181, %rd11180, %rd11169;
	add.s64 	%rd11182, %rd13892, %rd13885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7858,%dummy}, %rd13887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7859}, %rd13887;
	}
	shf.r.wrap.b32 	%r7860, %r7859, %r7858, 19;
	shf.r.wrap.b32 	%r7861, %r7858, %r7859, 19;
	mov.b64 	%rd11183, {%r7861, %r7860};
	shf.l.wrap.b32 	%r7862, %r7858, %r7859, 3;
	shf.l.wrap.b32 	%r7863, %r7859, %r7858, 3;
	mov.b64 	%rd11184, {%r7863, %r7862};
	xor.b64  	%rd11185, %rd11183, %rd11184;
	shr.u64 	%rd11186, %rd13887, 6;
	xor.b64  	%rd11187, %rd11185, %rd11186;
	add.s64 	%rd11188, %rd11182, %rd11187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7864,%dummy}, %rd13884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7865}, %rd13884;
	}
	shf.r.wrap.b32 	%r7866, %r7865, %r7864, 8;
	shf.r.wrap.b32 	%r7867, %r7864, %r7865, 8;
	mov.b64 	%rd11189, {%r7867, %r7866};
	shf.r.wrap.b32 	%r7868, %r7865, %r7864, 1;
	shf.r.wrap.b32 	%r7869, %r7864, %r7865, 1;
	mov.b64 	%rd11190, {%r7869, %r7868};
	xor.b64  	%rd11191, %rd11190, %rd11189;
	shr.u64 	%rd11192, %rd13884, 7;
	xor.b64  	%rd11193, %rd11191, %rd11192;
	add.s64 	%rd13885, %rd11188, %rd11193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7870,%dummy}, %rd11170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7871}, %rd11170;
	}
	shf.r.wrap.b32 	%r7872, %r7871, %r7870, 14;
	shf.r.wrap.b32 	%r7873, %r7870, %r7871, 14;
	mov.b64 	%rd11194, {%r7873, %r7872};
	shf.r.wrap.b32 	%r7874, %r7871, %r7870, 18;
	shf.r.wrap.b32 	%r7875, %r7870, %r7871, 18;
	mov.b64 	%rd11195, {%r7875, %r7874};
	xor.b64  	%rd11196, %rd11194, %rd11195;
	shf.l.wrap.b32 	%r7876, %r7870, %r7871, 23;
	shf.l.wrap.b32 	%r7877, %r7871, %r7870, 23;
	mov.b64 	%rd11197, {%r7877, %r7876};
	xor.b64  	%rd11198, %rd11196, %rd11197;
	xor.b64  	%rd11199, %rd11133, %rd11096;
	and.b64  	%rd11200, %rd11170, %rd11199;
	xor.b64  	%rd11201, %rd11200, %rd11096;
	add.s64 	%rd11202, %rd11201, %rd11059;
	add.s64 	%rd11203, %rd11202, %rd11198;
	ld.const.u64 	%rd11204, [%rd10860+72];
	add.s64 	%rd11205, %rd11203, %rd11204;
	add.s64 	%rd11206, %rd11205, %rd13885;
	add.s64 	%rd11207, %rd11206, %rd11070;
	and.b64  	%rd11208, %rd11181, %rd11144;
	or.b64  	%rd11209, %rd11181, %rd11144;
	and.b64  	%rd11210, %rd11209, %rd11107;
	or.b64  	%rd11211, %rd11210, %rd11208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7878,%dummy}, %rd11181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7879}, %rd11181;
	}
	shf.r.wrap.b32 	%r7880, %r7879, %r7878, 28;
	shf.r.wrap.b32 	%r7881, %r7878, %r7879, 28;
	mov.b64 	%rd11212, {%r7881, %r7880};
	shf.l.wrap.b32 	%r7882, %r7878, %r7879, 30;
	shf.l.wrap.b32 	%r7883, %r7879, %r7878, 30;
	mov.b64 	%rd11213, {%r7883, %r7882};
	xor.b64  	%rd11214, %rd11212, %rd11213;
	shf.l.wrap.b32 	%r7884, %r7878, %r7879, 25;
	shf.l.wrap.b32 	%r7885, %r7879, %r7878, 25;
	mov.b64 	%rd11215, {%r7885, %r7884};
	xor.b64  	%rd11216, %rd11214, %rd11215;
	add.s64 	%rd11217, %rd11216, %rd11211;
	add.s64 	%rd11218, %rd11217, %rd11206;
	add.s64 	%rd11219, %rd13891, %rd13884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7886,%dummy}, %rd13886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7887}, %rd13886;
	}
	shf.r.wrap.b32 	%r7888, %r7887, %r7886, 19;
	shf.r.wrap.b32 	%r7889, %r7886, %r7887, 19;
	mov.b64 	%rd11220, {%r7889, %r7888};
	shf.l.wrap.b32 	%r7890, %r7886, %r7887, 3;
	shf.l.wrap.b32 	%r7891, %r7887, %r7886, 3;
	mov.b64 	%rd11221, {%r7891, %r7890};
	xor.b64  	%rd11222, %rd11220, %rd11221;
	shr.u64 	%rd11223, %rd13886, 6;
	xor.b64  	%rd11224, %rd11222, %rd11223;
	add.s64 	%rd11225, %rd11219, %rd11224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7892,%dummy}, %rd13883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7893}, %rd13883;
	}
	shf.r.wrap.b32 	%r7894, %r7893, %r7892, 8;
	shf.r.wrap.b32 	%r7895, %r7892, %r7893, 8;
	mov.b64 	%rd11226, {%r7895, %r7894};
	shf.r.wrap.b32 	%r7896, %r7893, %r7892, 1;
	shf.r.wrap.b32 	%r7897, %r7892, %r7893, 1;
	mov.b64 	%rd11227, {%r7897, %r7896};
	xor.b64  	%rd11228, %rd11227, %rd11226;
	shr.u64 	%rd11229, %rd13883, 7;
	xor.b64  	%rd11230, %rd11228, %rd11229;
	add.s64 	%rd13884, %rd11225, %rd11230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7898,%dummy}, %rd11207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7899}, %rd11207;
	}
	shf.r.wrap.b32 	%r7900, %r7899, %r7898, 14;
	shf.r.wrap.b32 	%r7901, %r7898, %r7899, 14;
	mov.b64 	%rd11231, {%r7901, %r7900};
	shf.r.wrap.b32 	%r7902, %r7899, %r7898, 18;
	shf.r.wrap.b32 	%r7903, %r7898, %r7899, 18;
	mov.b64 	%rd11232, {%r7903, %r7902};
	xor.b64  	%rd11233, %rd11231, %rd11232;
	shf.l.wrap.b32 	%r7904, %r7898, %r7899, 23;
	shf.l.wrap.b32 	%r7905, %r7899, %r7898, 23;
	mov.b64 	%rd11234, {%r7905, %r7904};
	xor.b64  	%rd11235, %rd11233, %rd11234;
	xor.b64  	%rd11236, %rd11170, %rd11133;
	and.b64  	%rd11237, %rd11207, %rd11236;
	xor.b64  	%rd11238, %rd11237, %rd11133;
	add.s64 	%rd11239, %rd11238, %rd11096;
	add.s64 	%rd11240, %rd11239, %rd11235;
	ld.const.u64 	%rd11241, [%rd10860+80];
	add.s64 	%rd11242, %rd11240, %rd11241;
	add.s64 	%rd11243, %rd11242, %rd13884;
	add.s64 	%rd11244, %rd11243, %rd11107;
	and.b64  	%rd11245, %rd11218, %rd11181;
	or.b64  	%rd11246, %rd11218, %rd11181;
	and.b64  	%rd11247, %rd11246, %rd11144;
	or.b64  	%rd11248, %rd11247, %rd11245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7906,%dummy}, %rd11218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7907}, %rd11218;
	}
	shf.r.wrap.b32 	%r7908, %r7907, %r7906, 28;
	shf.r.wrap.b32 	%r7909, %r7906, %r7907, 28;
	mov.b64 	%rd11249, {%r7909, %r7908};
	shf.l.wrap.b32 	%r7910, %r7906, %r7907, 30;
	shf.l.wrap.b32 	%r7911, %r7907, %r7906, 30;
	mov.b64 	%rd11250, {%r7911, %r7910};
	xor.b64  	%rd11251, %rd11249, %rd11250;
	shf.l.wrap.b32 	%r7912, %r7906, %r7907, 25;
	shf.l.wrap.b32 	%r7913, %r7907, %r7906, 25;
	mov.b64 	%rd11252, {%r7913, %r7912};
	xor.b64  	%rd11253, %rd11251, %rd11252;
	add.s64 	%rd11254, %rd11253, %rd11248;
	add.s64 	%rd11255, %rd11254, %rd11243;
	add.s64 	%rd11256, %rd13890, %rd13883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7914,%dummy}, %rd13885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7915}, %rd13885;
	}
	shf.r.wrap.b32 	%r7916, %r7915, %r7914, 19;
	shf.r.wrap.b32 	%r7917, %r7914, %r7915, 19;
	mov.b64 	%rd11257, {%r7917, %r7916};
	shf.l.wrap.b32 	%r7918, %r7914, %r7915, 3;
	shf.l.wrap.b32 	%r7919, %r7915, %r7914, 3;
	mov.b64 	%rd11258, {%r7919, %r7918};
	xor.b64  	%rd11259, %rd11257, %rd11258;
	shr.u64 	%rd11260, %rd13885, 6;
	xor.b64  	%rd11261, %rd11259, %rd11260;
	add.s64 	%rd11262, %rd11256, %rd11261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7920,%dummy}, %rd13882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7921}, %rd13882;
	}
	shf.r.wrap.b32 	%r7922, %r7921, %r7920, 8;
	shf.r.wrap.b32 	%r7923, %r7920, %r7921, 8;
	mov.b64 	%rd11263, {%r7923, %r7922};
	shf.r.wrap.b32 	%r7924, %r7921, %r7920, 1;
	shf.r.wrap.b32 	%r7925, %r7920, %r7921, 1;
	mov.b64 	%rd11264, {%r7925, %r7924};
	xor.b64  	%rd11265, %rd11264, %rd11263;
	shr.u64 	%rd11266, %rd13882, 7;
	xor.b64  	%rd11267, %rd11265, %rd11266;
	add.s64 	%rd13883, %rd11262, %rd11267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7926,%dummy}, %rd11244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7927}, %rd11244;
	}
	shf.r.wrap.b32 	%r7928, %r7927, %r7926, 14;
	shf.r.wrap.b32 	%r7929, %r7926, %r7927, 14;
	mov.b64 	%rd11268, {%r7929, %r7928};
	shf.r.wrap.b32 	%r7930, %r7927, %r7926, 18;
	shf.r.wrap.b32 	%r7931, %r7926, %r7927, 18;
	mov.b64 	%rd11269, {%r7931, %r7930};
	xor.b64  	%rd11270, %rd11268, %rd11269;
	shf.l.wrap.b32 	%r7932, %r7926, %r7927, 23;
	shf.l.wrap.b32 	%r7933, %r7927, %r7926, 23;
	mov.b64 	%rd11271, {%r7933, %r7932};
	xor.b64  	%rd11272, %rd11270, %rd11271;
	xor.b64  	%rd11273, %rd11207, %rd11170;
	and.b64  	%rd11274, %rd11244, %rd11273;
	xor.b64  	%rd11275, %rd11274, %rd11170;
	add.s64 	%rd11276, %rd11275, %rd11133;
	add.s64 	%rd11277, %rd11276, %rd11272;
	ld.const.u64 	%rd11278, [%rd10860+88];
	add.s64 	%rd11279, %rd11277, %rd11278;
	add.s64 	%rd11280, %rd11279, %rd13883;
	add.s64 	%rd11281, %rd11280, %rd11144;
	and.b64  	%rd11282, %rd11255, %rd11218;
	or.b64  	%rd11283, %rd11255, %rd11218;
	and.b64  	%rd11284, %rd11283, %rd11181;
	or.b64  	%rd11285, %rd11284, %rd11282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7934,%dummy}, %rd11255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7935}, %rd11255;
	}
	shf.r.wrap.b32 	%r7936, %r7935, %r7934, 28;
	shf.r.wrap.b32 	%r7937, %r7934, %r7935, 28;
	mov.b64 	%rd11286, {%r7937, %r7936};
	shf.l.wrap.b32 	%r7938, %r7934, %r7935, 30;
	shf.l.wrap.b32 	%r7939, %r7935, %r7934, 30;
	mov.b64 	%rd11287, {%r7939, %r7938};
	xor.b64  	%rd11288, %rd11286, %rd11287;
	shf.l.wrap.b32 	%r7940, %r7934, %r7935, 25;
	shf.l.wrap.b32 	%r7941, %r7935, %r7934, 25;
	mov.b64 	%rd11289, {%r7941, %r7940};
	xor.b64  	%rd11290, %rd11288, %rd11289;
	add.s64 	%rd11291, %rd11290, %rd11285;
	add.s64 	%rd11292, %rd11291, %rd11280;
	add.s64 	%rd11293, %rd13889, %rd13882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7942,%dummy}, %rd13884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7943}, %rd13884;
	}
	shf.r.wrap.b32 	%r7944, %r7943, %r7942, 19;
	shf.r.wrap.b32 	%r7945, %r7942, %r7943, 19;
	mov.b64 	%rd11294, {%r7945, %r7944};
	shf.l.wrap.b32 	%r7946, %r7942, %r7943, 3;
	shf.l.wrap.b32 	%r7947, %r7943, %r7942, 3;
	mov.b64 	%rd11295, {%r7947, %r7946};
	xor.b64  	%rd11296, %rd11294, %rd11295;
	shr.u64 	%rd11297, %rd13884, 6;
	xor.b64  	%rd11298, %rd11296, %rd11297;
	add.s64 	%rd11299, %rd11293, %rd11298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7948,%dummy}, %rd13881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7949}, %rd13881;
	}
	shf.r.wrap.b32 	%r7950, %r7949, %r7948, 8;
	shf.r.wrap.b32 	%r7951, %r7948, %r7949, 8;
	mov.b64 	%rd11300, {%r7951, %r7950};
	shf.r.wrap.b32 	%r7952, %r7949, %r7948, 1;
	shf.r.wrap.b32 	%r7953, %r7948, %r7949, 1;
	mov.b64 	%rd11301, {%r7953, %r7952};
	xor.b64  	%rd11302, %rd11301, %rd11300;
	shr.u64 	%rd11303, %rd13881, 7;
	xor.b64  	%rd11304, %rd11302, %rd11303;
	add.s64 	%rd13882, %rd11299, %rd11304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7954,%dummy}, %rd11281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7955}, %rd11281;
	}
	shf.r.wrap.b32 	%r7956, %r7955, %r7954, 14;
	shf.r.wrap.b32 	%r7957, %r7954, %r7955, 14;
	mov.b64 	%rd11305, {%r7957, %r7956};
	shf.r.wrap.b32 	%r7958, %r7955, %r7954, 18;
	shf.r.wrap.b32 	%r7959, %r7954, %r7955, 18;
	mov.b64 	%rd11306, {%r7959, %r7958};
	xor.b64  	%rd11307, %rd11305, %rd11306;
	shf.l.wrap.b32 	%r7960, %r7954, %r7955, 23;
	shf.l.wrap.b32 	%r7961, %r7955, %r7954, 23;
	mov.b64 	%rd11308, {%r7961, %r7960};
	xor.b64  	%rd11309, %rd11307, %rd11308;
	xor.b64  	%rd11310, %rd11244, %rd11207;
	and.b64  	%rd11311, %rd11281, %rd11310;
	xor.b64  	%rd11312, %rd11311, %rd11207;
	add.s64 	%rd11313, %rd11312, %rd11170;
	add.s64 	%rd11314, %rd11313, %rd11309;
	ld.const.u64 	%rd11315, [%rd10860+96];
	add.s64 	%rd11316, %rd11314, %rd11315;
	add.s64 	%rd11317, %rd11316, %rd13882;
	add.s64 	%rd13902, %rd11317, %rd11181;
	and.b64  	%rd11318, %rd11292, %rd11255;
	or.b64  	%rd11319, %rd11292, %rd11255;
	and.b64  	%rd11320, %rd11319, %rd11218;
	or.b64  	%rd11321, %rd11320, %rd11318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7962,%dummy}, %rd11292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7963}, %rd11292;
	}
	shf.r.wrap.b32 	%r7964, %r7963, %r7962, 28;
	shf.r.wrap.b32 	%r7965, %r7962, %r7963, 28;
	mov.b64 	%rd11322, {%r7965, %r7964};
	shf.l.wrap.b32 	%r7966, %r7962, %r7963, 30;
	shf.l.wrap.b32 	%r7967, %r7963, %r7962, 30;
	mov.b64 	%rd11323, {%r7967, %r7966};
	xor.b64  	%rd11324, %rd11322, %rd11323;
	shf.l.wrap.b32 	%r7968, %r7962, %r7963, 25;
	shf.l.wrap.b32 	%r7969, %r7963, %r7962, 25;
	mov.b64 	%rd11325, {%r7969, %r7968};
	xor.b64  	%rd11326, %rd11324, %rd11325;
	add.s64 	%rd11327, %rd11326, %rd11321;
	add.s64 	%rd13898, %rd11327, %rd11317;
	add.s64 	%rd11328, %rd13888, %rd13881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7970,%dummy}, %rd13883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7971}, %rd13883;
	}
	shf.r.wrap.b32 	%r7972, %r7971, %r7970, 19;
	shf.r.wrap.b32 	%r7973, %r7970, %r7971, 19;
	mov.b64 	%rd11329, {%r7973, %r7972};
	shf.l.wrap.b32 	%r7974, %r7970, %r7971, 3;
	shf.l.wrap.b32 	%r7975, %r7971, %r7970, 3;
	mov.b64 	%rd11330, {%r7975, %r7974};
	xor.b64  	%rd11331, %rd11329, %rd11330;
	shr.u64 	%rd11332, %rd13883, 6;
	xor.b64  	%rd11333, %rd11331, %rd11332;
	add.s64 	%rd11334, %rd11328, %rd11333;
	shf.r.wrap.b32 	%r7976, %r7606, %r7607, 8;
	shf.r.wrap.b32 	%r7977, %r7607, %r7606, 8;
	mov.b64 	%rd11335, {%r7977, %r7976};
	shf.r.wrap.b32 	%r7978, %r7606, %r7607, 1;
	shf.r.wrap.b32 	%r7979, %r7607, %r7606, 1;
	mov.b64 	%rd11336, {%r7979, %r7978};
	xor.b64  	%rd11337, %rd11336, %rd11335;
	shr.u64 	%rd11338, %rd13880, 7;
	xor.b64  	%rd11339, %rd11337, %rd11338;
	add.s64 	%rd13881, %rd11334, %rd11339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7980,%dummy}, %rd13902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7981}, %rd13902;
	}
	shf.r.wrap.b32 	%r7982, %r7981, %r7980, 14;
	shf.r.wrap.b32 	%r7983, %r7980, %r7981, 14;
	mov.b64 	%rd11340, {%r7983, %r7982};
	shf.r.wrap.b32 	%r7984, %r7981, %r7980, 18;
	shf.r.wrap.b32 	%r7985, %r7980, %r7981, 18;
	mov.b64 	%rd11341, {%r7985, %r7984};
	xor.b64  	%rd11342, %rd11340, %rd11341;
	shf.l.wrap.b32 	%r7986, %r7980, %r7981, 23;
	shf.l.wrap.b32 	%r7987, %r7981, %r7980, 23;
	mov.b64 	%rd11343, {%r7987, %r7986};
	xor.b64  	%rd11344, %rd11342, %rd11343;
	xor.b64  	%rd11345, %rd11281, %rd11244;
	and.b64  	%rd11346, %rd13902, %rd11345;
	xor.b64  	%rd11347, %rd11346, %rd11244;
	add.s64 	%rd11348, %rd11347, %rd11207;
	add.s64 	%rd11349, %rd11348, %rd11344;
	ld.const.u64 	%rd11350, [%rd10860+104];
	add.s64 	%rd11351, %rd11349, %rd11350;
	add.s64 	%rd11352, %rd11351, %rd13881;
	add.s64 	%rd13901, %rd11352, %rd11218;
	and.b64  	%rd11353, %rd13898, %rd11292;
	or.b64  	%rd11354, %rd13898, %rd11292;
	and.b64  	%rd11355, %rd11354, %rd11255;
	or.b64  	%rd11356, %rd11355, %rd11353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7988,%dummy}, %rd13898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7989}, %rd13898;
	}
	shf.r.wrap.b32 	%r7990, %r7989, %r7988, 28;
	shf.r.wrap.b32 	%r7991, %r7988, %r7989, 28;
	mov.b64 	%rd11357, {%r7991, %r7990};
	shf.l.wrap.b32 	%r7992, %r7988, %r7989, 30;
	shf.l.wrap.b32 	%r7993, %r7989, %r7988, 30;
	mov.b64 	%rd11358, {%r7993, %r7992};
	xor.b64  	%rd11359, %rd11357, %rd11358;
	shf.l.wrap.b32 	%r7994, %r7988, %r7989, 25;
	shf.l.wrap.b32 	%r7995, %r7989, %r7988, 25;
	mov.b64 	%rd11360, {%r7995, %r7994};
	xor.b64  	%rd11361, %rd11359, %rd11360;
	add.s64 	%rd11362, %rd11361, %rd11356;
	add.s64 	%rd13897, %rd11362, %rd11352;
	add.s64 	%rd11363, %rd13887, %rd13880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7996,%dummy}, %rd13882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7997}, %rd13882;
	}
	shf.r.wrap.b32 	%r7998, %r7997, %r7996, 19;
	shf.r.wrap.b32 	%r7999, %r7996, %r7997, 19;
	mov.b64 	%rd11364, {%r7999, %r7998};
	shf.l.wrap.b32 	%r8000, %r7996, %r7997, 3;
	shf.l.wrap.b32 	%r8001, %r7997, %r7996, 3;
	mov.b64 	%rd11365, {%r8001, %r8000};
	xor.b64  	%rd11366, %rd11364, %rd11365;
	shr.u64 	%rd11367, %rd13882, 6;
	xor.b64  	%rd11368, %rd11366, %rd11367;
	add.s64 	%rd11369, %rd11363, %rd11368;
	shf.r.wrap.b32 	%r8002, %r7634, %r7635, 8;
	shf.r.wrap.b32 	%r8003, %r7635, %r7634, 8;
	mov.b64 	%rd11370, {%r8003, %r8002};
	shf.r.wrap.b32 	%r8004, %r7634, %r7635, 1;
	shf.r.wrap.b32 	%r8005, %r7635, %r7634, 1;
	mov.b64 	%rd11371, {%r8005, %r8004};
	xor.b64  	%rd11372, %rd11371, %rd11370;
	shr.u64 	%rd11373, %rd13879, 7;
	xor.b64  	%rd11374, %rd11372, %rd11373;
	add.s64 	%rd13880, %rd11369, %rd11374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8006,%dummy}, %rd13901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8007}, %rd13901;
	}
	shf.r.wrap.b32 	%r8008, %r8007, %r8006, 14;
	shf.r.wrap.b32 	%r8009, %r8006, %r8007, 14;
	mov.b64 	%rd11375, {%r8009, %r8008};
	shf.r.wrap.b32 	%r8010, %r8007, %r8006, 18;
	shf.r.wrap.b32 	%r8011, %r8006, %r8007, 18;
	mov.b64 	%rd11376, {%r8011, %r8010};
	xor.b64  	%rd11377, %rd11375, %rd11376;
	shf.l.wrap.b32 	%r8012, %r8006, %r8007, 23;
	shf.l.wrap.b32 	%r8013, %r8007, %r8006, 23;
	mov.b64 	%rd11378, {%r8013, %r8012};
	xor.b64  	%rd11379, %rd11377, %rd11378;
	xor.b64  	%rd11380, %rd13902, %rd11281;
	and.b64  	%rd11381, %rd13901, %rd11380;
	xor.b64  	%rd11382, %rd11381, %rd11281;
	add.s64 	%rd11383, %rd11382, %rd11244;
	add.s64 	%rd11384, %rd11383, %rd11379;
	ld.const.u64 	%rd11385, [%rd10860+112];
	add.s64 	%rd11386, %rd11384, %rd11385;
	add.s64 	%rd11387, %rd11386, %rd13880;
	add.s64 	%rd13900, %rd11387, %rd11255;
	and.b64  	%rd11388, %rd13897, %rd13898;
	or.b64  	%rd11389, %rd13897, %rd13898;
	and.b64  	%rd11390, %rd11389, %rd11292;
	or.b64  	%rd11391, %rd11390, %rd11388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8014,%dummy}, %rd13897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8015}, %rd13897;
	}
	shf.r.wrap.b32 	%r8016, %r8015, %r8014, 28;
	shf.r.wrap.b32 	%r8017, %r8014, %r8015, 28;
	mov.b64 	%rd11392, {%r8017, %r8016};
	shf.l.wrap.b32 	%r8018, %r8014, %r8015, 30;
	shf.l.wrap.b32 	%r8019, %r8015, %r8014, 30;
	mov.b64 	%rd11393, {%r8019, %r8018};
	xor.b64  	%rd11394, %rd11392, %rd11393;
	shf.l.wrap.b32 	%r8020, %r8014, %r8015, 25;
	shf.l.wrap.b32 	%r8021, %r8015, %r8014, 25;
	mov.b64 	%rd11395, {%r8021, %r8020};
	xor.b64  	%rd11396, %rd11394, %rd11395;
	add.s64 	%rd11397, %rd11396, %rd11391;
	add.s64 	%rd13896, %rd11397, %rd11387;
	add.s64 	%rd11398, %rd13886, %rd13879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8022,%dummy}, %rd13881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8023}, %rd13881;
	}
	shf.r.wrap.b32 	%r8024, %r8023, %r8022, 19;
	shf.r.wrap.b32 	%r8025, %r8022, %r8023, 19;
	mov.b64 	%rd11399, {%r8025, %r8024};
	shf.l.wrap.b32 	%r8026, %r8022, %r8023, 3;
	shf.l.wrap.b32 	%r8027, %r8023, %r8022, 3;
	mov.b64 	%rd11400, {%r8027, %r8026};
	xor.b64  	%rd11401, %rd11399, %rd11400;
	shr.u64 	%rd11402, %rd13881, 6;
	xor.b64  	%rd11403, %rd11401, %rd11402;
	add.s64 	%rd11404, %rd11398, %rd11403;
	shf.r.wrap.b32 	%r8028, %r7663, %r7662, 1;
	shf.r.wrap.b32 	%r8029, %r7662, %r7663, 1;
	mov.b64 	%rd11405, {%r8029, %r8028};
	shf.r.wrap.b32 	%r8030, %r7663, %r7662, 8;
	shf.r.wrap.b32 	%r8031, %r7662, %r7663, 8;
	mov.b64 	%rd11406, {%r8031, %r8030};
	xor.b64  	%rd11407, %rd11405, %rd11406;
	shr.u64 	%rd11408, %rd13894, 7;
	xor.b64  	%rd11409, %rd11407, %rd11408;
	add.s64 	%rd13879, %rd11404, %rd11409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8032,%dummy}, %rd13900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8033}, %rd13900;
	}
	shf.r.wrap.b32 	%r8034, %r8033, %r8032, 14;
	shf.r.wrap.b32 	%r8035, %r8032, %r8033, 14;
	mov.b64 	%rd11410, {%r8035, %r8034};
	shf.r.wrap.b32 	%r8036, %r8033, %r8032, 18;
	shf.r.wrap.b32 	%r8037, %r8032, %r8033, 18;
	mov.b64 	%rd11411, {%r8037, %r8036};
	xor.b64  	%rd11412, %rd11410, %rd11411;
	shf.l.wrap.b32 	%r8038, %r8032, %r8033, 23;
	shf.l.wrap.b32 	%r8039, %r8033, %r8032, 23;
	mov.b64 	%rd11413, {%r8039, %r8038};
	xor.b64  	%rd11414, %rd11412, %rd11413;
	xor.b64  	%rd11415, %rd13901, %rd13902;
	and.b64  	%rd11416, %rd13900, %rd11415;
	xor.b64  	%rd11417, %rd11416, %rd13902;
	add.s64 	%rd11418, %rd11417, %rd11281;
	add.s64 	%rd11419, %rd11418, %rd11414;
	ld.const.u64 	%rd11420, [%rd10860+120];
	add.s64 	%rd11421, %rd11419, %rd11420;
	add.s64 	%rd11422, %rd11421, %rd13879;
	add.s64 	%rd13899, %rd11422, %rd11292;
	and.b64  	%rd11423, %rd13896, %rd13897;
	or.b64  	%rd11424, %rd13896, %rd13897;
	and.b64  	%rd11425, %rd11424, %rd13898;
	or.b64  	%rd11426, %rd11425, %rd11423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8040,%dummy}, %rd13896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8041}, %rd13896;
	}
	shf.r.wrap.b32 	%r8042, %r8041, %r8040, 28;
	shf.r.wrap.b32 	%r8043, %r8040, %r8041, 28;
	mov.b64 	%rd11427, {%r8043, %r8042};
	shf.l.wrap.b32 	%r8044, %r8040, %r8041, 30;
	shf.l.wrap.b32 	%r8045, %r8041, %r8040, 30;
	mov.b64 	%rd11428, {%r8045, %r8044};
	xor.b64  	%rd11429, %rd11427, %rd11428;
	shf.l.wrap.b32 	%r8046, %r8040, %r8041, 25;
	shf.l.wrap.b32 	%r8047, %r8041, %r8040, 25;
	mov.b64 	%rd11430, {%r8047, %r8046};
	xor.b64  	%rd11431, %rd11429, %rd11430;
	add.s64 	%rd11432, %rd11431, %rd11426;
	add.s64 	%rd13895, %rd11432, %rd11422;
	add.s32 	%r9756, %r9756, 16;
	setp.lt.u32 	%p102, %r9756, 80;
	@%p102 bra 	$L__BB0_143;

	add.s64 	%rd13912, %rd13912, %rd13895;
	add.s64 	%rd13911, %rd13911, %rd13896;
	st.local.u64 	[%rd2+-64], %rd13911;
	add.s64 	%rd13910, %rd13910, %rd13897;
	st.local.u64 	[%rd2+-56], %rd13910;
	add.s64 	%rd13909, %rd13909, %rd13898;
	st.local.u64 	[%rd2+-48], %rd13909;
	add.s64 	%rd13908, %rd13908, %rd13899;
	st.local.u64 	[%rd2+-40], %rd13908;
	add.s64 	%rd13907, %rd13907, %rd13900;
	st.local.u64 	[%rd2+-32], %rd13907;
	add.s64 	%rd13906, %rd13906, %rd13901;
	st.local.u64 	[%rd2+-24], %rd13906;
	add.s64 	%rd13905, %rd13905, %rd13902;
	st.local.u64 	[%rd2+-16], %rd13905;
	sub.s32 	%r9759, %r9, %r144;
	st.local.u32 	[%rd2+-4], %r9759;
	setp.eq.s32 	%p103, %r9759, 0;
	@%p103 bra 	$L__BB0_147;

	cvt.u64.u32 	%rd11433, %r144;
	add.s64 	%rd13904, %rd935, %rd11433;
	mov.u32 	%r9757, 0;
	mov.u64 	%rd13903, %rd1;

$L__BB0_146:
	ld.const.u8 	%rs4, [%rd13904];
	st.local.u8 	[%rd13903+72], %rs4;
	add.s64 	%rd13904, %rd13904, 1;
	add.s64 	%rd13903, %rd13903, 1;
	add.s32 	%r9757, %r9757, 1;
	setp.lt.u32 	%p104, %r9757, %r9759;
	@%p104 bra 	$L__BB0_146;

$L__BB0_147:
	and.b32  	%r8049, %r9759, 7;
	shr.u32 	%r8050, %r9759, 3;
	shl.b32 	%r8051, %r8050, 3;
	cvt.u64.u32 	%rd11434, %r8051;
	add.s64 	%rd11435, %rd1, %rd11434;
	shl.b32 	%r8052, %r9759, 3;
	cvt.u64.u32 	%rd11436, %r8052;
	and.b64  	%rd11437, %rd11436, 56;
	add.s64 	%rd11439, %rd1255, %rd11437;
	ld.const.u64 	%rd11440, [%rd11439];
	ld.local.u64 	%rd11441, [%rd11435+72];
	and.b64  	%rd11442, %rd11440, %rd11441;
	st.local.u64 	[%rd11435+72], %rd11442;
	setp.ne.s32 	%p105, %r8049, 0;
	selp.u32 	%r8053, 1, 0, %p105;
	add.s32 	%r9758, %r8050, %r8053;
	setp.gt.u32 	%p106, %r9758, 15;
	@%p106 bra 	$L__BB0_149;

$L__BB0_148:
	mul.wide.u32 	%rd11443, %r9758, 8;
	add.s64 	%rd11444, %rd1, %rd11443;
	mov.u64 	%rd11445, 0;
	st.local.u64 	[%rd11444+72], %rd11445;
	add.s32 	%r9758, %r9758, 1;
	setp.lt.u32 	%p107, %r9758, 16;
	@%p107 bra 	$L__BB0_148;

$L__BB0_149:
	add.s32 	%r9752, %r9752, 1;
	setp.lt.u32 	%p108, %r9752, %r139;
	@%p108 bra 	$L__BB0_134;

	st.local.u64 	[%rd2+-72], %rd13912;
	and.b32  	%r8054, %r9759, -8;
	cvt.u64.u32 	%rd11446, %r8054;
	add.s64 	%rd11447, %rd1, %rd11446;
	add.s64 	%rd1043, %rd11447, 72;
	setp.lt.u32 	%p109, %r9759, 112;
	@%p109 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_151;

$L__BB0_158:
	shl.b32 	%r8824, %r9759, 3;
	and.b32  	%r8825, %r8824, 56;
	mov.u64 	%rd12459, 128;
	shl.b64 	%rd12460, %rd12459, %r8825;
	ld.local.u64 	%rd12461, [%rd1043];
	or.b64  	%rd12462, %rd12461, %rd12460;
	st.local.u64 	[%rd1043], %rd12462;
	shl.b32 	%r8826, %r9751, 3;
	cvt.u64.u32 	%rd12463, %r9751;
	shl.b64 	%rd12464, %rd12463, 59;
	shl.b64 	%rd12465, %rd12463, 43;
	and.b64  	%rd12466, %rd12465, 71776119061217280;
	or.b64  	%rd12467, %rd12466, %rd12464;
	cvt.u64.u32 	%rd12468, %r8826;
	shl.b64 	%rd12469, %rd12468, 24;
	and.b64  	%rd12470, %rd12469, 280375465082880;
	or.b64  	%rd12471, %rd12467, %rd12470;
	shl.b64 	%rd12472, %rd12468, 8;
	and.b64  	%rd12473, %rd12472, 1095216660480;
	or.b64  	%rd12474, %rd12471, %rd12473;
	st.local.u64 	[%rd2+120], %rd12474;
	mov.u32 	%r8827, 0;
	st.local.u32 	[%rd2+-4], %r8827;
	ld.local.u64 	%rd13952, [%rd2];
	ld.local.u64 	%rd13951, [%rd2+8];
	ld.local.u64 	%rd13950, [%rd2+16];
	ld.local.u64 	%rd13949, [%rd2+24];
	ld.local.u64 	%rd13948, [%rd2+32];
	ld.local.u64 	%rd13947, [%rd2+40];
	ld.local.u64 	%rd13946, [%rd2+48];
	ld.local.u64 	%rd13945, [%rd2+56];
	ld.local.u64 	%rd13944, [%rd2+64];
	ld.local.u64 	%rd13943, [%rd2+72];
	ld.local.u64 	%rd13942, [%rd2+80];
	ld.local.u64 	%rd13941, [%rd2+88];
	ld.local.u64 	%rd13940, [%rd2+96];
	ld.local.u64 	%rd13939, [%rd2+104];
	ld.local.u64 	%rd13938, [%rd2+112];
	bra.uni 	$L__BB0_159;

$L__BB0_151:
	setp.gt.u32 	%p110, %r9759, 127;
	@%p110 bra 	$L__BB0_153;

	shl.b32 	%r8055, %r9759, 3;
	and.b32  	%r8056, %r8055, 56;
	mov.u64 	%rd11448, 128;
	shl.b64 	%rd11449, %rd11448, %r8056;
	ld.local.u64 	%rd11450, [%rd1043];
	or.b64  	%rd11451, %rd11449, %rd11450;
	st.local.u64 	[%rd1043], %rd11451;

$L__BB0_153:
	ld.local.u64 	%rd11452, [%rd2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8058, %temp}, %rd11452;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8059}, %rd11452;
	}
	mov.u32 	%r8060, 291;
	mov.u32 	%r8061, 0;
	prmt.b32 	%r8062, %r8058, %r8061, %r8060;
	prmt.b32 	%r8063, %r8059, %r8061, %r8060;
	mov.b64 	%rd13928, {%r8063, %r8062};
	ld.local.u64 	%rd11453, [%rd2+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8064, %temp}, %rd11453;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8065}, %rd11453;
	}
	prmt.b32 	%r8066, %r8064, %r8061, %r8060;
	prmt.b32 	%r8067, %r8065, %r8061, %r8060;
	mov.b64 	%rd13927, {%r8067, %r8066};
	ld.local.u64 	%rd11454, [%rd2+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8068, %temp}, %rd11454;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8069}, %rd11454;
	}
	prmt.b32 	%r8070, %r8068, %r8061, %r8060;
	prmt.b32 	%r8071, %r8069, %r8061, %r8060;
	mov.b64 	%rd13926, {%r8071, %r8070};
	ld.local.u64 	%rd11455, [%rd2+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8072, %temp}, %rd11455;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8073}, %rd11455;
	}
	prmt.b32 	%r8074, %r8072, %r8061, %r8060;
	prmt.b32 	%r8075, %r8073, %r8061, %r8060;
	mov.b64 	%rd13925, {%r8075, %r8074};
	ld.local.u64 	%rd11456, [%rd2+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8076, %temp}, %rd11456;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8077}, %rd11456;
	}
	prmt.b32 	%r8078, %r8076, %r8061, %r8060;
	prmt.b32 	%r8079, %r8077, %r8061, %r8060;
	mov.b64 	%rd13924, {%r8079, %r8078};
	ld.local.u64 	%rd11457, [%rd2+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8080, %temp}, %rd11457;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8081}, %rd11457;
	}
	prmt.b32 	%r8082, %r8080, %r8061, %r8060;
	prmt.b32 	%r8083, %r8081, %r8061, %r8060;
	mov.b64 	%rd13923, {%r8083, %r8082};
	ld.local.u64 	%rd11458, [%rd2+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8084, %temp}, %rd11458;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8085}, %rd11458;
	}
	prmt.b32 	%r8086, %r8084, %r8061, %r8060;
	prmt.b32 	%r8087, %r8085, %r8061, %r8060;
	mov.b64 	%rd13922, {%r8087, %r8086};
	ld.local.u64 	%rd11459, [%rd2+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8088, %temp}, %rd11459;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8089}, %rd11459;
	}
	prmt.b32 	%r8090, %r8088, %r8061, %r8060;
	prmt.b32 	%r8091, %r8089, %r8061, %r8060;
	mov.b64 	%rd13921, {%r8091, %r8090};
	ld.local.u64 	%rd11460, [%rd2+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8092, %temp}, %rd11460;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8093}, %rd11460;
	}
	prmt.b32 	%r8094, %r8092, %r8061, %r8060;
	prmt.b32 	%r8095, %r8093, %r8061, %r8060;
	mov.b64 	%rd13920, {%r8095, %r8094};
	ld.local.u64 	%rd11461, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8096, %temp}, %rd11461;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8097}, %rd11461;
	}
	prmt.b32 	%r8098, %r8096, %r8061, %r8060;
	prmt.b32 	%r8099, %r8097, %r8061, %r8060;
	mov.b64 	%rd13919, {%r8099, %r8098};
	ld.local.u64 	%rd11462, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8100, %temp}, %rd11462;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8101}, %rd11462;
	}
	prmt.b32 	%r8102, %r8100, %r8061, %r8060;
	prmt.b32 	%r8103, %r8101, %r8061, %r8060;
	mov.b64 	%rd13918, {%r8103, %r8102};
	ld.local.u64 	%rd11463, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8104, %temp}, %rd11463;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8105}, %rd11463;
	}
	prmt.b32 	%r8106, %r8104, %r8061, %r8060;
	prmt.b32 	%r8107, %r8105, %r8061, %r8060;
	mov.b64 	%rd13917, {%r8107, %r8106};
	ld.local.u64 	%rd11464, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8108, %temp}, %rd11464;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8109}, %rd11464;
	}
	prmt.b32 	%r8110, %r8108, %r8061, %r8060;
	prmt.b32 	%r8111, %r8109, %r8061, %r8060;
	mov.b64 	%rd13916, {%r8111, %r8110};
	ld.local.u64 	%rd11465, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8112, %temp}, %rd11465;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8113}, %rd11465;
	}
	prmt.b32 	%r8114, %r8112, %r8061, %r8060;
	prmt.b32 	%r8115, %r8113, %r8061, %r8060;
	mov.b64 	%rd13915, {%r8115, %r8114};
	ld.local.u64 	%rd11466, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8116, %temp}, %rd11466;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8117}, %rd11466;
	}
	prmt.b32 	%r8118, %r8116, %r8061, %r8060;
	prmt.b32 	%r8119, %r8117, %r8061, %r8060;
	mov.b64 	%rd13914, {%r8119, %r8118};
	ld.local.u64 	%rd11467, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8120, %temp}, %rd11467;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8121}, %rd11467;
	}
	prmt.b32 	%r8122, %r8120, %r8061, %r8060;
	prmt.b32 	%r8123, %r8121, %r8061, %r8060;
	mov.b64 	%rd13913, {%r8123, %r8122};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8124,%dummy}, %rd13908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8125}, %rd13908;
	}
	shf.r.wrap.b32 	%r8126, %r8125, %r8124, 18;
	shf.r.wrap.b32 	%r8127, %r8124, %r8125, 18;
	mov.b64 	%rd11468, {%r8127, %r8126};
	shf.r.wrap.b32 	%r8128, %r8125, %r8124, 14;
	shf.r.wrap.b32 	%r8129, %r8124, %r8125, 14;
	mov.b64 	%rd11469, {%r8129, %r8128};
	xor.b64  	%rd11470, %rd11469, %rd11468;
	shf.l.wrap.b32 	%r8130, %r8124, %r8125, 23;
	shf.l.wrap.b32 	%r8131, %r8125, %r8124, 23;
	mov.b64 	%rd11471, {%r8131, %r8130};
	xor.b64  	%rd11472, %rd11470, %rd11471;
	xor.b64  	%rd11473, %rd13907, %rd13906;
	and.b64  	%rd11474, %rd13908, %rd11473;
	xor.b64  	%rd11475, %rd11474, %rd13906;
	add.s64 	%rd11476, %rd11475, %rd13905;
	add.s64 	%rd11477, %rd11476, %rd11472;
	add.s64 	%rd11478, %rd11477, %rd13928;
	add.s64 	%rd11479, %rd11478, 4794697086780616226;
	add.s64 	%rd11480, %rd11479, %rd13909;
	or.b64  	%rd11481, %rd13912, %rd13911;
	and.b64  	%rd11482, %rd11481, %rd13910;
	and.b64  	%rd11483, %rd13912, %rd13911;
	or.b64  	%rd11484, %rd11482, %rd11483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8132}, %rd13912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8133,%dummy}, %rd13912;
	}
	shf.l.wrap.b32 	%r8134, %r8133, %r8132, 30;
	shf.l.wrap.b32 	%r8135, %r8132, %r8133, 30;
	mov.b64 	%rd11485, {%r8135, %r8134};
	shf.r.wrap.b32 	%r8136, %r8132, %r8133, 28;
	shf.r.wrap.b32 	%r8137, %r8133, %r8132, 28;
	mov.b64 	%rd11486, {%r8137, %r8136};
	xor.b64  	%rd11487, %rd11486, %rd11485;
	shf.l.wrap.b32 	%r8138, %r8133, %r8132, 25;
	shf.l.wrap.b32 	%r8139, %r8132, %r8133, 25;
	mov.b64 	%rd11488, {%r8139, %r8138};
	xor.b64  	%rd11489, %rd11487, %rd11488;
	add.s64 	%rd11490, %rd11489, %rd11484;
	add.s64 	%rd11491, %rd11490, %rd11479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8140,%dummy}, %rd11480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8141}, %rd11480;
	}
	shf.r.wrap.b32 	%r8142, %r8141, %r8140, 14;
	shf.r.wrap.b32 	%r8143, %r8140, %r8141, 14;
	mov.b64 	%rd11492, {%r8143, %r8142};
	shf.r.wrap.b32 	%r8144, %r8141, %r8140, 18;
	shf.r.wrap.b32 	%r8145, %r8140, %r8141, 18;
	mov.b64 	%rd11493, {%r8145, %r8144};
	xor.b64  	%rd11494, %rd11492, %rd11493;
	shf.l.wrap.b32 	%r8146, %r8140, %r8141, 23;
	shf.l.wrap.b32 	%r8147, %r8141, %r8140, 23;
	mov.b64 	%rd11495, {%r8147, %r8146};
	xor.b64  	%rd11496, %rd11494, %rd11495;
	xor.b64  	%rd11497, %rd13908, %rd13907;
	and.b64  	%rd11498, %rd11480, %rd11497;
	xor.b64  	%rd11499, %rd11498, %rd13907;
	add.s64 	%rd11500, %rd11499, %rd13906;
	add.s64 	%rd11501, %rd11500, %rd11496;
	add.s64 	%rd11502, %rd11501, %rd13927;
	add.s64 	%rd11503, %rd11502, 8158064640168781261;
	add.s64 	%rd11504, %rd11503, %rd13910;
	and.b64  	%rd11505, %rd11491, %rd13912;
	or.b64  	%rd11506, %rd11491, %rd13912;
	and.b64  	%rd11507, %rd11506, %rd13911;
	or.b64  	%rd11508, %rd11507, %rd11505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8148,%dummy}, %rd11491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8149}, %rd11491;
	}
	shf.r.wrap.b32 	%r8150, %r8149, %r8148, 28;
	shf.r.wrap.b32 	%r8151, %r8148, %r8149, 28;
	mov.b64 	%rd11509, {%r8151, %r8150};
	shf.l.wrap.b32 	%r8152, %r8148, %r8149, 30;
	shf.l.wrap.b32 	%r8153, %r8149, %r8148, 30;
	mov.b64 	%rd11510, {%r8153, %r8152};
	xor.b64  	%rd11511, %rd11509, %rd11510;
	shf.l.wrap.b32 	%r8154, %r8148, %r8149, 25;
	shf.l.wrap.b32 	%r8155, %r8149, %r8148, 25;
	mov.b64 	%rd11512, {%r8155, %r8154};
	xor.b64  	%rd11513, %rd11511, %rd11512;
	add.s64 	%rd11514, %rd11513, %rd11508;
	add.s64 	%rd11515, %rd11514, %rd11503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8156,%dummy}, %rd11504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8157}, %rd11504;
	}
	shf.r.wrap.b32 	%r8158, %r8157, %r8156, 14;
	shf.r.wrap.b32 	%r8159, %r8156, %r8157, 14;
	mov.b64 	%rd11516, {%r8159, %r8158};
	shf.r.wrap.b32 	%r8160, %r8157, %r8156, 18;
	shf.r.wrap.b32 	%r8161, %r8156, %r8157, 18;
	mov.b64 	%rd11517, {%r8161, %r8160};
	xor.b64  	%rd11518, %rd11516, %rd11517;
	shf.l.wrap.b32 	%r8162, %r8156, %r8157, 23;
	shf.l.wrap.b32 	%r8163, %r8157, %r8156, 23;
	mov.b64 	%rd11519, {%r8163, %r8162};
	xor.b64  	%rd11520, %rd11518, %rd11519;
	xor.b64  	%rd11521, %rd11480, %rd13908;
	and.b64  	%rd11522, %rd11504, %rd11521;
	xor.b64  	%rd11523, %rd11522, %rd13908;
	add.s64 	%rd11524, %rd11523, %rd13907;
	add.s64 	%rd11525, %rd11524, %rd11520;
	add.s64 	%rd11526, %rd11525, %rd13926;
	add.s64 	%rd11527, %rd11526, -5349999486874862801;
	add.s64 	%rd11528, %rd11527, %rd13911;
	and.b64  	%rd11529, %rd11515, %rd11491;
	or.b64  	%rd11530, %rd11515, %rd11491;
	and.b64  	%rd11531, %rd11530, %rd13912;
	or.b64  	%rd11532, %rd11531, %rd11529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8164,%dummy}, %rd11515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8165}, %rd11515;
	}
	shf.r.wrap.b32 	%r8166, %r8165, %r8164, 28;
	shf.r.wrap.b32 	%r8167, %r8164, %r8165, 28;
	mov.b64 	%rd11533, {%r8167, %r8166};
	shf.l.wrap.b32 	%r8168, %r8164, %r8165, 30;
	shf.l.wrap.b32 	%r8169, %r8165, %r8164, 30;
	mov.b64 	%rd11534, {%r8169, %r8168};
	xor.b64  	%rd11535, %rd11533, %rd11534;
	shf.l.wrap.b32 	%r8170, %r8164, %r8165, 25;
	shf.l.wrap.b32 	%r8171, %r8165, %r8164, 25;
	mov.b64 	%rd11536, {%r8171, %r8170};
	xor.b64  	%rd11537, %rd11535, %rd11536;
	add.s64 	%rd11538, %rd11537, %rd11532;
	add.s64 	%rd11539, %rd11538, %rd11527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8172,%dummy}, %rd11528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8173}, %rd11528;
	}
	shf.r.wrap.b32 	%r8174, %r8173, %r8172, 14;
	shf.r.wrap.b32 	%r8175, %r8172, %r8173, 14;
	mov.b64 	%rd11540, {%r8175, %r8174};
	shf.r.wrap.b32 	%r8176, %r8173, %r8172, 18;
	shf.r.wrap.b32 	%r8177, %r8172, %r8173, 18;
	mov.b64 	%rd11541, {%r8177, %r8176};
	xor.b64  	%rd11542, %rd11540, %rd11541;
	shf.l.wrap.b32 	%r8178, %r8172, %r8173, 23;
	shf.l.wrap.b32 	%r8179, %r8173, %r8172, 23;
	mov.b64 	%rd11543, {%r8179, %r8178};
	xor.b64  	%rd11544, %rd11542, %rd11543;
	xor.b64  	%rd11545, %rd11504, %rd11480;
	and.b64  	%rd11546, %rd11528, %rd11545;
	xor.b64  	%rd11547, %rd11546, %rd11480;
	add.s64 	%rd11548, %rd11547, %rd13908;
	add.s64 	%rd11549, %rd11548, %rd11544;
	add.s64 	%rd11550, %rd11549, %rd13925;
	add.s64 	%rd11551, %rd11550, -1606136188198331460;
	add.s64 	%rd11552, %rd11551, %rd13912;
	and.b64  	%rd11553, %rd11539, %rd11515;
	or.b64  	%rd11554, %rd11539, %rd11515;
	and.b64  	%rd11555, %rd11554, %rd11491;
	or.b64  	%rd11556, %rd11555, %rd11553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8180,%dummy}, %rd11539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8181}, %rd11539;
	}
	shf.r.wrap.b32 	%r8182, %r8181, %r8180, 28;
	shf.r.wrap.b32 	%r8183, %r8180, %r8181, 28;
	mov.b64 	%rd11557, {%r8183, %r8182};
	shf.l.wrap.b32 	%r8184, %r8180, %r8181, 30;
	shf.l.wrap.b32 	%r8185, %r8181, %r8180, 30;
	mov.b64 	%rd11558, {%r8185, %r8184};
	xor.b64  	%rd11559, %rd11557, %rd11558;
	shf.l.wrap.b32 	%r8186, %r8180, %r8181, 25;
	shf.l.wrap.b32 	%r8187, %r8181, %r8180, 25;
	mov.b64 	%rd11560, {%r8187, %r8186};
	xor.b64  	%rd11561, %rd11559, %rd11560;
	add.s64 	%rd11562, %rd11561, %rd11556;
	add.s64 	%rd11563, %rd11562, %rd11551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8188,%dummy}, %rd11552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8189}, %rd11552;
	}
	shf.r.wrap.b32 	%r8190, %r8189, %r8188, 14;
	shf.r.wrap.b32 	%r8191, %r8188, %r8189, 14;
	mov.b64 	%rd11564, {%r8191, %r8190};
	shf.r.wrap.b32 	%r8192, %r8189, %r8188, 18;
	shf.r.wrap.b32 	%r8193, %r8188, %r8189, 18;
	mov.b64 	%rd11565, {%r8193, %r8192};
	xor.b64  	%rd11566, %rd11564, %rd11565;
	shf.l.wrap.b32 	%r8194, %r8188, %r8189, 23;
	shf.l.wrap.b32 	%r8195, %r8189, %r8188, 23;
	mov.b64 	%rd11567, {%r8195, %r8194};
	xor.b64  	%rd11568, %rd11566, %rd11567;
	xor.b64  	%rd11569, %rd11528, %rd11504;
	and.b64  	%rd11570, %rd11552, %rd11569;
	xor.b64  	%rd11571, %rd11570, %rd11504;
	add.s64 	%rd11572, %rd11571, %rd11480;
	add.s64 	%rd11573, %rd11572, %rd11568;
	add.s64 	%rd11574, %rd11573, %rd13924;
	add.s64 	%rd11575, %rd11574, 4131703408338449720;
	add.s64 	%rd11576, %rd11575, %rd11491;
	and.b64  	%rd11577, %rd11563, %rd11539;
	or.b64  	%rd11578, %rd11563, %rd11539;
	and.b64  	%rd11579, %rd11578, %rd11515;
	or.b64  	%rd11580, %rd11579, %rd11577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8196,%dummy}, %rd11563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8197}, %rd11563;
	}
	shf.r.wrap.b32 	%r8198, %r8197, %r8196, 28;
	shf.r.wrap.b32 	%r8199, %r8196, %r8197, 28;
	mov.b64 	%rd11581, {%r8199, %r8198};
	shf.l.wrap.b32 	%r8200, %r8196, %r8197, 30;
	shf.l.wrap.b32 	%r8201, %r8197, %r8196, 30;
	mov.b64 	%rd11582, {%r8201, %r8200};
	xor.b64  	%rd11583, %rd11581, %rd11582;
	shf.l.wrap.b32 	%r8202, %r8196, %r8197, 25;
	shf.l.wrap.b32 	%r8203, %r8197, %r8196, 25;
	mov.b64 	%rd11584, {%r8203, %r8202};
	xor.b64  	%rd11585, %rd11583, %rd11584;
	add.s64 	%rd11586, %rd11585, %rd11580;
	add.s64 	%rd11587, %rd11586, %rd11575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8204,%dummy}, %rd11576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8205}, %rd11576;
	}
	shf.r.wrap.b32 	%r8206, %r8205, %r8204, 14;
	shf.r.wrap.b32 	%r8207, %r8204, %r8205, 14;
	mov.b64 	%rd11588, {%r8207, %r8206};
	shf.r.wrap.b32 	%r8208, %r8205, %r8204, 18;
	shf.r.wrap.b32 	%r8209, %r8204, %r8205, 18;
	mov.b64 	%rd11589, {%r8209, %r8208};
	xor.b64  	%rd11590, %rd11588, %rd11589;
	shf.l.wrap.b32 	%r8210, %r8204, %r8205, 23;
	shf.l.wrap.b32 	%r8211, %r8205, %r8204, 23;
	mov.b64 	%rd11591, {%r8211, %r8210};
	xor.b64  	%rd11592, %rd11590, %rd11591;
	xor.b64  	%rd11593, %rd11552, %rd11528;
	and.b64  	%rd11594, %rd11576, %rd11593;
	xor.b64  	%rd11595, %rd11594, %rd11528;
	add.s64 	%rd11596, %rd11595, %rd11504;
	add.s64 	%rd11597, %rd11596, %rd11592;
	add.s64 	%rd11598, %rd11597, %rd13923;
	add.s64 	%rd11599, %rd11598, 6480981068601479193;
	add.s64 	%rd11600, %rd11599, %rd11515;
	and.b64  	%rd11601, %rd11587, %rd11563;
	or.b64  	%rd11602, %rd11587, %rd11563;
	and.b64  	%rd11603, %rd11602, %rd11539;
	or.b64  	%rd11604, %rd11603, %rd11601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8212,%dummy}, %rd11587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8213}, %rd11587;
	}
	shf.r.wrap.b32 	%r8214, %r8213, %r8212, 28;
	shf.r.wrap.b32 	%r8215, %r8212, %r8213, 28;
	mov.b64 	%rd11605, {%r8215, %r8214};
	shf.l.wrap.b32 	%r8216, %r8212, %r8213, 30;
	shf.l.wrap.b32 	%r8217, %r8213, %r8212, 30;
	mov.b64 	%rd11606, {%r8217, %r8216};
	xor.b64  	%rd11607, %rd11605, %rd11606;
	shf.l.wrap.b32 	%r8218, %r8212, %r8213, 25;
	shf.l.wrap.b32 	%r8219, %r8213, %r8212, 25;
	mov.b64 	%rd11608, {%r8219, %r8218};
	xor.b64  	%rd11609, %rd11607, %rd11608;
	add.s64 	%rd11610, %rd11609, %rd11604;
	add.s64 	%rd11611, %rd11610, %rd11599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8220,%dummy}, %rd11600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8221}, %rd11600;
	}
	shf.r.wrap.b32 	%r8222, %r8221, %r8220, 14;
	shf.r.wrap.b32 	%r8223, %r8220, %r8221, 14;
	mov.b64 	%rd11612, {%r8223, %r8222};
	shf.r.wrap.b32 	%r8224, %r8221, %r8220, 18;
	shf.r.wrap.b32 	%r8225, %r8220, %r8221, 18;
	mov.b64 	%rd11613, {%r8225, %r8224};
	xor.b64  	%rd11614, %rd11612, %rd11613;
	shf.l.wrap.b32 	%r8226, %r8220, %r8221, 23;
	shf.l.wrap.b32 	%r8227, %r8221, %r8220, 23;
	mov.b64 	%rd11615, {%r8227, %r8226};
	xor.b64  	%rd11616, %rd11614, %rd11615;
	xor.b64  	%rd11617, %rd11576, %rd11552;
	and.b64  	%rd11618, %rd11600, %rd11617;
	xor.b64  	%rd11619, %rd11618, %rd11552;
	add.s64 	%rd11620, %rd11619, %rd11528;
	add.s64 	%rd11621, %rd11620, %rd11616;
	add.s64 	%rd11622, %rd11621, %rd13922;
	add.s64 	%rd11623, %rd11622, -7908458776815382629;
	add.s64 	%rd11624, %rd11623, %rd11539;
	and.b64  	%rd11625, %rd11611, %rd11587;
	or.b64  	%rd11626, %rd11611, %rd11587;
	and.b64  	%rd11627, %rd11626, %rd11563;
	or.b64  	%rd11628, %rd11627, %rd11625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8228,%dummy}, %rd11611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8229}, %rd11611;
	}
	shf.r.wrap.b32 	%r8230, %r8229, %r8228, 28;
	shf.r.wrap.b32 	%r8231, %r8228, %r8229, 28;
	mov.b64 	%rd11629, {%r8231, %r8230};
	shf.l.wrap.b32 	%r8232, %r8228, %r8229, 30;
	shf.l.wrap.b32 	%r8233, %r8229, %r8228, 30;
	mov.b64 	%rd11630, {%r8233, %r8232};
	xor.b64  	%rd11631, %rd11629, %rd11630;
	shf.l.wrap.b32 	%r8234, %r8228, %r8229, 25;
	shf.l.wrap.b32 	%r8235, %r8229, %r8228, 25;
	mov.b64 	%rd11632, {%r8235, %r8234};
	xor.b64  	%rd11633, %rd11631, %rd11632;
	add.s64 	%rd11634, %rd11633, %rd11628;
	add.s64 	%rd11635, %rd11634, %rd11623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8236,%dummy}, %rd11624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8237}, %rd11624;
	}
	shf.r.wrap.b32 	%r8238, %r8237, %r8236, 14;
	shf.r.wrap.b32 	%r8239, %r8236, %r8237, 14;
	mov.b64 	%rd11636, {%r8239, %r8238};
	shf.r.wrap.b32 	%r8240, %r8237, %r8236, 18;
	shf.r.wrap.b32 	%r8241, %r8236, %r8237, 18;
	mov.b64 	%rd11637, {%r8241, %r8240};
	xor.b64  	%rd11638, %rd11636, %rd11637;
	shf.l.wrap.b32 	%r8242, %r8236, %r8237, 23;
	shf.l.wrap.b32 	%r8243, %r8237, %r8236, 23;
	mov.b64 	%rd11639, {%r8243, %r8242};
	xor.b64  	%rd11640, %rd11638, %rd11639;
	xor.b64  	%rd11641, %rd11600, %rd11576;
	and.b64  	%rd11642, %rd11624, %rd11641;
	xor.b64  	%rd11643, %rd11642, %rd11576;
	add.s64 	%rd11644, %rd11643, %rd11552;
	add.s64 	%rd11645, %rd11644, %rd11640;
	add.s64 	%rd11646, %rd11645, %rd13921;
	add.s64 	%rd11647, %rd11646, -6116909921290321640;
	add.s64 	%rd11648, %rd11647, %rd11563;
	and.b64  	%rd11649, %rd11635, %rd11611;
	or.b64  	%rd11650, %rd11635, %rd11611;
	and.b64  	%rd11651, %rd11650, %rd11587;
	or.b64  	%rd11652, %rd11651, %rd11649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8244,%dummy}, %rd11635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8245}, %rd11635;
	}
	shf.r.wrap.b32 	%r8246, %r8245, %r8244, 28;
	shf.r.wrap.b32 	%r8247, %r8244, %r8245, 28;
	mov.b64 	%rd11653, {%r8247, %r8246};
	shf.l.wrap.b32 	%r8248, %r8244, %r8245, 30;
	shf.l.wrap.b32 	%r8249, %r8245, %r8244, 30;
	mov.b64 	%rd11654, {%r8249, %r8248};
	xor.b64  	%rd11655, %rd11653, %rd11654;
	shf.l.wrap.b32 	%r8250, %r8244, %r8245, 25;
	shf.l.wrap.b32 	%r8251, %r8245, %r8244, 25;
	mov.b64 	%rd11656, {%r8251, %r8250};
	xor.b64  	%rd11657, %rd11655, %rd11656;
	add.s64 	%rd11658, %rd11657, %rd11652;
	add.s64 	%rd11659, %rd11658, %rd11647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8252,%dummy}, %rd11648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8253}, %rd11648;
	}
	shf.r.wrap.b32 	%r8254, %r8253, %r8252, 14;
	shf.r.wrap.b32 	%r8255, %r8252, %r8253, 14;
	mov.b64 	%rd11660, {%r8255, %r8254};
	shf.r.wrap.b32 	%r8256, %r8253, %r8252, 18;
	shf.r.wrap.b32 	%r8257, %r8252, %r8253, 18;
	mov.b64 	%rd11661, {%r8257, %r8256};
	xor.b64  	%rd11662, %rd11660, %rd11661;
	shf.l.wrap.b32 	%r8258, %r8252, %r8253, 23;
	shf.l.wrap.b32 	%r8259, %r8253, %r8252, 23;
	mov.b64 	%rd11663, {%r8259, %r8258};
	xor.b64  	%rd11664, %rd11662, %rd11663;
	xor.b64  	%rd11665, %rd11624, %rd11600;
	and.b64  	%rd11666, %rd11648, %rd11665;
	xor.b64  	%rd11667, %rd11666, %rd11600;
	add.s64 	%rd11668, %rd11667, %rd11576;
	add.s64 	%rd11669, %rd11668, %rd11664;
	add.s64 	%rd11670, %rd11669, %rd13920;
	add.s64 	%rd11671, %rd11670, -2880145864133508542;
	add.s64 	%rd11672, %rd11671, %rd11587;
	and.b64  	%rd11673, %rd11659, %rd11635;
	or.b64  	%rd11674, %rd11659, %rd11635;
	and.b64  	%rd11675, %rd11674, %rd11611;
	or.b64  	%rd11676, %rd11675, %rd11673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8260,%dummy}, %rd11659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8261}, %rd11659;
	}
	shf.r.wrap.b32 	%r8262, %r8261, %r8260, 28;
	shf.r.wrap.b32 	%r8263, %r8260, %r8261, 28;
	mov.b64 	%rd11677, {%r8263, %r8262};
	shf.l.wrap.b32 	%r8264, %r8260, %r8261, 30;
	shf.l.wrap.b32 	%r8265, %r8261, %r8260, 30;
	mov.b64 	%rd11678, {%r8265, %r8264};
	xor.b64  	%rd11679, %rd11677, %rd11678;
	shf.l.wrap.b32 	%r8266, %r8260, %r8261, 25;
	shf.l.wrap.b32 	%r8267, %r8261, %r8260, 25;
	mov.b64 	%rd11680, {%r8267, %r8266};
	xor.b64  	%rd11681, %rd11679, %rd11680;
	add.s64 	%rd11682, %rd11681, %rd11676;
	add.s64 	%rd11683, %rd11682, %rd11671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8268,%dummy}, %rd11672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8269}, %rd11672;
	}
	shf.r.wrap.b32 	%r8270, %r8269, %r8268, 14;
	shf.r.wrap.b32 	%r8271, %r8268, %r8269, 14;
	mov.b64 	%rd11684, {%r8271, %r8270};
	shf.r.wrap.b32 	%r8272, %r8269, %r8268, 18;
	shf.r.wrap.b32 	%r8273, %r8268, %r8269, 18;
	mov.b64 	%rd11685, {%r8273, %r8272};
	xor.b64  	%rd11686, %rd11684, %rd11685;
	shf.l.wrap.b32 	%r8274, %r8268, %r8269, 23;
	shf.l.wrap.b32 	%r8275, %r8269, %r8268, 23;
	mov.b64 	%rd11687, {%r8275, %r8274};
	xor.b64  	%rd11688, %rd11686, %rd11687;
	xor.b64  	%rd11689, %rd11648, %rd11624;
	and.b64  	%rd11690, %rd11672, %rd11689;
	xor.b64  	%rd11691, %rd11690, %rd11624;
	add.s64 	%rd11692, %rd11691, %rd11600;
	add.s64 	%rd11693, %rd11692, %rd11688;
	add.s64 	%rd11694, %rd11693, %rd13919;
	add.s64 	%rd11695, %rd11694, 1334009975649890238;
	add.s64 	%rd11696, %rd11695, %rd11611;
	and.b64  	%rd11697, %rd11683, %rd11659;
	or.b64  	%rd11698, %rd11683, %rd11659;
	and.b64  	%rd11699, %rd11698, %rd11635;
	or.b64  	%rd11700, %rd11699, %rd11697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8276,%dummy}, %rd11683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8277}, %rd11683;
	}
	shf.r.wrap.b32 	%r8278, %r8277, %r8276, 28;
	shf.r.wrap.b32 	%r8279, %r8276, %r8277, 28;
	mov.b64 	%rd11701, {%r8279, %r8278};
	shf.l.wrap.b32 	%r8280, %r8276, %r8277, 30;
	shf.l.wrap.b32 	%r8281, %r8277, %r8276, 30;
	mov.b64 	%rd11702, {%r8281, %r8280};
	xor.b64  	%rd11703, %rd11701, %rd11702;
	shf.l.wrap.b32 	%r8282, %r8276, %r8277, 25;
	shf.l.wrap.b32 	%r8283, %r8277, %r8276, 25;
	mov.b64 	%rd11704, {%r8283, %r8282};
	xor.b64  	%rd11705, %rd11703, %rd11704;
	add.s64 	%rd11706, %rd11705, %rd11700;
	add.s64 	%rd11707, %rd11706, %rd11695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8284,%dummy}, %rd11696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8285}, %rd11696;
	}
	shf.r.wrap.b32 	%r8286, %r8285, %r8284, 14;
	shf.r.wrap.b32 	%r8287, %r8284, %r8285, 14;
	mov.b64 	%rd11708, {%r8287, %r8286};
	shf.r.wrap.b32 	%r8288, %r8285, %r8284, 18;
	shf.r.wrap.b32 	%r8289, %r8284, %r8285, 18;
	mov.b64 	%rd11709, {%r8289, %r8288};
	xor.b64  	%rd11710, %rd11708, %rd11709;
	shf.l.wrap.b32 	%r8290, %r8284, %r8285, 23;
	shf.l.wrap.b32 	%r8291, %r8285, %r8284, 23;
	mov.b64 	%rd11711, {%r8291, %r8290};
	xor.b64  	%rd11712, %rd11710, %rd11711;
	xor.b64  	%rd11713, %rd11672, %rd11648;
	and.b64  	%rd11714, %rd11696, %rd11713;
	xor.b64  	%rd11715, %rd11714, %rd11648;
	add.s64 	%rd11716, %rd11715, %rd11624;
	add.s64 	%rd11717, %rd11716, %rd11712;
	add.s64 	%rd11718, %rd11717, %rd13918;
	add.s64 	%rd11719, %rd11718, 2608012711638119052;
	add.s64 	%rd11720, %rd11719, %rd11635;
	and.b64  	%rd11721, %rd11707, %rd11683;
	or.b64  	%rd11722, %rd11707, %rd11683;
	and.b64  	%rd11723, %rd11722, %rd11659;
	or.b64  	%rd11724, %rd11723, %rd11721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8292,%dummy}, %rd11707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8293}, %rd11707;
	}
	shf.r.wrap.b32 	%r8294, %r8293, %r8292, 28;
	shf.r.wrap.b32 	%r8295, %r8292, %r8293, 28;
	mov.b64 	%rd11725, {%r8295, %r8294};
	shf.l.wrap.b32 	%r8296, %r8292, %r8293, 30;
	shf.l.wrap.b32 	%r8297, %r8293, %r8292, 30;
	mov.b64 	%rd11726, {%r8297, %r8296};
	xor.b64  	%rd11727, %rd11725, %rd11726;
	shf.l.wrap.b32 	%r8298, %r8292, %r8293, 25;
	shf.l.wrap.b32 	%r8299, %r8293, %r8292, 25;
	mov.b64 	%rd11728, {%r8299, %r8298};
	xor.b64  	%rd11729, %rd11727, %rd11728;
	add.s64 	%rd11730, %rd11729, %rd11724;
	add.s64 	%rd11731, %rd11730, %rd11719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8300,%dummy}, %rd11720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8301}, %rd11720;
	}
	shf.r.wrap.b32 	%r8302, %r8301, %r8300, 14;
	shf.r.wrap.b32 	%r8303, %r8300, %r8301, 14;
	mov.b64 	%rd11732, {%r8303, %r8302};
	shf.r.wrap.b32 	%r8304, %r8301, %r8300, 18;
	shf.r.wrap.b32 	%r8305, %r8300, %r8301, 18;
	mov.b64 	%rd11733, {%r8305, %r8304};
	xor.b64  	%rd11734, %rd11732, %rd11733;
	shf.l.wrap.b32 	%r8306, %r8300, %r8301, 23;
	shf.l.wrap.b32 	%r8307, %r8301, %r8300, 23;
	mov.b64 	%rd11735, {%r8307, %r8306};
	xor.b64  	%rd11736, %rd11734, %rd11735;
	xor.b64  	%rd11737, %rd11696, %rd11672;
	and.b64  	%rd11738, %rd11720, %rd11737;
	xor.b64  	%rd11739, %rd11738, %rd11672;
	add.s64 	%rd11740, %rd11739, %rd11648;
	add.s64 	%rd11741, %rd11740, %rd11736;
	add.s64 	%rd11742, %rd11741, %rd13917;
	add.s64 	%rd11743, %rd11742, 6128411473006802146;
	add.s64 	%rd11744, %rd11743, %rd11659;
	and.b64  	%rd11745, %rd11731, %rd11707;
	or.b64  	%rd11746, %rd11731, %rd11707;
	and.b64  	%rd11747, %rd11746, %rd11683;
	or.b64  	%rd11748, %rd11747, %rd11745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8308,%dummy}, %rd11731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8309}, %rd11731;
	}
	shf.r.wrap.b32 	%r8310, %r8309, %r8308, 28;
	shf.r.wrap.b32 	%r8311, %r8308, %r8309, 28;
	mov.b64 	%rd11749, {%r8311, %r8310};
	shf.l.wrap.b32 	%r8312, %r8308, %r8309, 30;
	shf.l.wrap.b32 	%r8313, %r8309, %r8308, 30;
	mov.b64 	%rd11750, {%r8313, %r8312};
	xor.b64  	%rd11751, %rd11749, %rd11750;
	shf.l.wrap.b32 	%r8314, %r8308, %r8309, 25;
	shf.l.wrap.b32 	%r8315, %r8309, %r8308, 25;
	mov.b64 	%rd11752, {%r8315, %r8314};
	xor.b64  	%rd11753, %rd11751, %rd11752;
	add.s64 	%rd11754, %rd11753, %rd11748;
	add.s64 	%rd11755, %rd11754, %rd11743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8316,%dummy}, %rd11744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8317}, %rd11744;
	}
	shf.r.wrap.b32 	%r8318, %r8317, %r8316, 14;
	shf.r.wrap.b32 	%r8319, %r8316, %r8317, 14;
	mov.b64 	%rd11756, {%r8319, %r8318};
	shf.r.wrap.b32 	%r8320, %r8317, %r8316, 18;
	shf.r.wrap.b32 	%r8321, %r8316, %r8317, 18;
	mov.b64 	%rd11757, {%r8321, %r8320};
	xor.b64  	%rd11758, %rd11756, %rd11757;
	shf.l.wrap.b32 	%r8322, %r8316, %r8317, 23;
	shf.l.wrap.b32 	%r8323, %r8317, %r8316, 23;
	mov.b64 	%rd11759, {%r8323, %r8322};
	xor.b64  	%rd11760, %rd11758, %rd11759;
	xor.b64  	%rd11761, %rd11720, %rd11696;
	and.b64  	%rd11762, %rd11744, %rd11761;
	xor.b64  	%rd11763, %rd11762, %rd11696;
	add.s64 	%rd11764, %rd11763, %rd11672;
	add.s64 	%rd11765, %rd11764, %rd11760;
	add.s64 	%rd11766, %rd11765, %rd13916;
	add.s64 	%rd11767, %rd11766, 8268148722764581231;
	add.s64 	%rd13936, %rd11767, %rd11683;
	and.b64  	%rd11768, %rd11755, %rd11731;
	or.b64  	%rd11769, %rd11755, %rd11731;
	and.b64  	%rd11770, %rd11769, %rd11707;
	or.b64  	%rd11771, %rd11770, %rd11768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8324,%dummy}, %rd11755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8325}, %rd11755;
	}
	shf.r.wrap.b32 	%r8326, %r8325, %r8324, 28;
	shf.r.wrap.b32 	%r8327, %r8324, %r8325, 28;
	mov.b64 	%rd11772, {%r8327, %r8326};
	shf.l.wrap.b32 	%r8328, %r8324, %r8325, 30;
	shf.l.wrap.b32 	%r8329, %r8325, %r8324, 30;
	mov.b64 	%rd11773, {%r8329, %r8328};
	xor.b64  	%rd11774, %rd11772, %rd11773;
	shf.l.wrap.b32 	%r8330, %r8324, %r8325, 25;
	shf.l.wrap.b32 	%r8331, %r8325, %r8324, 25;
	mov.b64 	%rd11775, {%r8331, %r8330};
	xor.b64  	%rd11776, %rd11774, %rd11775;
	add.s64 	%rd11777, %rd11776, %rd11771;
	add.s64 	%rd13932, %rd11777, %rd11767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8332,%dummy}, %rd13936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8333}, %rd13936;
	}
	shf.r.wrap.b32 	%r8334, %r8333, %r8332, 14;
	shf.r.wrap.b32 	%r8335, %r8332, %r8333, 14;
	mov.b64 	%rd11778, {%r8335, %r8334};
	shf.r.wrap.b32 	%r8336, %r8333, %r8332, 18;
	shf.r.wrap.b32 	%r8337, %r8332, %r8333, 18;
	mov.b64 	%rd11779, {%r8337, %r8336};
	xor.b64  	%rd11780, %rd11778, %rd11779;
	shf.l.wrap.b32 	%r8338, %r8332, %r8333, 23;
	shf.l.wrap.b32 	%r8339, %r8333, %r8332, 23;
	mov.b64 	%rd11781, {%r8339, %r8338};
	xor.b64  	%rd11782, %rd11780, %rd11781;
	xor.b64  	%rd11783, %rd11744, %rd11720;
	and.b64  	%rd11784, %rd13936, %rd11783;
	xor.b64  	%rd11785, %rd11784, %rd11720;
	add.s64 	%rd11786, %rd11785, %rd11696;
	add.s64 	%rd11787, %rd11786, %rd11782;
	add.s64 	%rd11788, %rd11787, %rd13915;
	add.s64 	%rd11789, %rd11788, -9160688886553864527;
	add.s64 	%rd13935, %rd11789, %rd11707;
	and.b64  	%rd11790, %rd13932, %rd11755;
	or.b64  	%rd11791, %rd13932, %rd11755;
	and.b64  	%rd11792, %rd11791, %rd11731;
	or.b64  	%rd11793, %rd11792, %rd11790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8340,%dummy}, %rd13932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8341}, %rd13932;
	}
	shf.r.wrap.b32 	%r8342, %r8341, %r8340, 28;
	shf.r.wrap.b32 	%r8343, %r8340, %r8341, 28;
	mov.b64 	%rd11794, {%r8343, %r8342};
	shf.l.wrap.b32 	%r8344, %r8340, %r8341, 30;
	shf.l.wrap.b32 	%r8345, %r8341, %r8340, 30;
	mov.b64 	%rd11795, {%r8345, %r8344};
	xor.b64  	%rd11796, %rd11794, %rd11795;
	shf.l.wrap.b32 	%r8346, %r8340, %r8341, 25;
	shf.l.wrap.b32 	%r8347, %r8341, %r8340, 25;
	mov.b64 	%rd11797, {%r8347, %r8346};
	xor.b64  	%rd11798, %rd11796, %rd11797;
	add.s64 	%rd11799, %rd11798, %rd11793;
	add.s64 	%rd13931, %rd11799, %rd11789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8348,%dummy}, %rd13935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8349}, %rd13935;
	}
	shf.r.wrap.b32 	%r8350, %r8349, %r8348, 14;
	shf.r.wrap.b32 	%r8351, %r8348, %r8349, 14;
	mov.b64 	%rd11800, {%r8351, %r8350};
	shf.r.wrap.b32 	%r8352, %r8349, %r8348, 18;
	shf.r.wrap.b32 	%r8353, %r8348, %r8349, 18;
	mov.b64 	%rd11801, {%r8353, %r8352};
	xor.b64  	%rd11802, %rd11800, %rd11801;
	shf.l.wrap.b32 	%r8354, %r8348, %r8349, 23;
	shf.l.wrap.b32 	%r8355, %r8349, %r8348, 23;
	mov.b64 	%rd11803, {%r8355, %r8354};
	xor.b64  	%rd11804, %rd11802, %rd11803;
	xor.b64  	%rd11805, %rd13936, %rd11744;
	and.b64  	%rd11806, %rd13935, %rd11805;
	xor.b64  	%rd11807, %rd11806, %rd11744;
	add.s64 	%rd11808, %rd11807, %rd11720;
	add.s64 	%rd11809, %rd11808, %rd11804;
	add.s64 	%rd11810, %rd11809, %rd13914;
	add.s64 	%rd11811, %rd11810, -7215885187991268811;
	add.s64 	%rd13934, %rd11811, %rd11731;
	and.b64  	%rd11812, %rd13931, %rd13932;
	or.b64  	%rd11813, %rd13931, %rd13932;
	and.b64  	%rd11814, %rd11813, %rd11755;
	or.b64  	%rd11815, %rd11814, %rd11812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8356,%dummy}, %rd13931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8357}, %rd13931;
	}
	shf.r.wrap.b32 	%r8358, %r8357, %r8356, 28;
	shf.r.wrap.b32 	%r8359, %r8356, %r8357, 28;
	mov.b64 	%rd11816, {%r8359, %r8358};
	shf.l.wrap.b32 	%r8360, %r8356, %r8357, 30;
	shf.l.wrap.b32 	%r8361, %r8357, %r8356, 30;
	mov.b64 	%rd11817, {%r8361, %r8360};
	xor.b64  	%rd11818, %rd11816, %rd11817;
	shf.l.wrap.b32 	%r8362, %r8356, %r8357, 25;
	shf.l.wrap.b32 	%r8363, %r8357, %r8356, 25;
	mov.b64 	%rd11819, {%r8363, %r8362};
	xor.b64  	%rd11820, %rd11818, %rd11819;
	add.s64 	%rd11821, %rd11820, %rd11815;
	add.s64 	%rd13930, %rd11821, %rd11811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8364,%dummy}, %rd13934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8365}, %rd13934;
	}
	shf.r.wrap.b32 	%r8366, %r8365, %r8364, 14;
	shf.r.wrap.b32 	%r8367, %r8364, %r8365, 14;
	mov.b64 	%rd11822, {%r8367, %r8366};
	shf.r.wrap.b32 	%r8368, %r8365, %r8364, 18;
	shf.r.wrap.b32 	%r8369, %r8364, %r8365, 18;
	mov.b64 	%rd11823, {%r8369, %r8368};
	xor.b64  	%rd11824, %rd11822, %rd11823;
	shf.l.wrap.b32 	%r8370, %r8364, %r8365, 23;
	shf.l.wrap.b32 	%r8371, %r8365, %r8364, 23;
	mov.b64 	%rd11825, {%r8371, %r8370};
	xor.b64  	%rd11826, %rd11824, %rd11825;
	xor.b64  	%rd11827, %rd13935, %rd13936;
	and.b64  	%rd11828, %rd13934, %rd11827;
	xor.b64  	%rd11829, %rd11828, %rd13936;
	add.s64 	%rd11830, %rd11829, %rd11744;
	add.s64 	%rd11831, %rd11830, %rd11826;
	add.s64 	%rd11832, %rd11831, %rd13913;
	add.s64 	%rd11833, %rd11832, -4495734319001033068;
	add.s64 	%rd13933, %rd11833, %rd11755;
	and.b64  	%rd11834, %rd13930, %rd13931;
	or.b64  	%rd11835, %rd13930, %rd13931;
	and.b64  	%rd11836, %rd11835, %rd13932;
	or.b64  	%rd11837, %rd11836, %rd11834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8372,%dummy}, %rd13930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8373}, %rd13930;
	}
	shf.r.wrap.b32 	%r8374, %r8373, %r8372, 28;
	shf.r.wrap.b32 	%r8375, %r8372, %r8373, 28;
	mov.b64 	%rd11838, {%r8375, %r8374};
	shf.l.wrap.b32 	%r8376, %r8372, %r8373, 30;
	shf.l.wrap.b32 	%r8377, %r8373, %r8372, 30;
	mov.b64 	%rd11839, {%r8377, %r8376};
	xor.b64  	%rd11840, %rd11838, %rd11839;
	shf.l.wrap.b32 	%r8378, %r8372, %r8373, 25;
	shf.l.wrap.b32 	%r8379, %r8373, %r8372, 25;
	mov.b64 	%rd11841, {%r8379, %r8378};
	xor.b64  	%rd11842, %rd11840, %rd11841;
	add.s64 	%rd11843, %rd11842, %rd11837;
	add.s64 	%rd13929, %rd11843, %rd11833;
	mov.u32 	%r9760, 16;

$L__BB0_154:
	.pragma "nounroll";
	mov.u64 	%rd13512, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8380}, %rd13914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8381,%dummy}, %rd13914;
	}
	shf.l.wrap.b32 	%r8382, %r8381, %r8380, 3;
	shf.l.wrap.b32 	%r8383, %r8380, %r8381, 3;
	mov.b64 	%rd11844, {%r8383, %r8382};
	shf.r.wrap.b32 	%r8384, %r8380, %r8381, 19;
	shf.r.wrap.b32 	%r8385, %r8381, %r8380, 19;
	mov.b64 	%rd11845, {%r8385, %r8384};
	xor.b64  	%rd11846, %rd11845, %rd11844;
	shr.u64 	%rd11847, %rd13914, 6;
	xor.b64  	%rd11848, %rd11846, %rd11847;
	add.s64 	%rd11849, %rd13919, %rd13928;
	add.s64 	%rd11850, %rd11849, %rd11848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8386,%dummy}, %rd13927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8387}, %rd13927;
	}
	shf.r.wrap.b32 	%r8388, %r8387, %r8386, 8;
	shf.r.wrap.b32 	%r8389, %r8386, %r8387, 8;
	mov.b64 	%rd11851, {%r8389, %r8388};
	shf.r.wrap.b32 	%r8390, %r8387, %r8386, 1;
	shf.r.wrap.b32 	%r8391, %r8386, %r8387, 1;
	mov.b64 	%rd11852, {%r8391, %r8390};
	xor.b64  	%rd11853, %rd11852, %rd11851;
	shr.u64 	%rd11854, %rd13927, 7;
	xor.b64  	%rd11855, %rd11853, %rd11854;
	add.s64 	%rd13928, %rd11850, %rd11855;
	mul.wide.u32 	%rd11856, %r9760, 8;
	add.s64 	%rd11858, %rd13512, %rd11856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8392,%dummy}, %rd13933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8393}, %rd13933;
	}
	shf.r.wrap.b32 	%r8394, %r8393, %r8392, 18;
	shf.r.wrap.b32 	%r8395, %r8392, %r8393, 18;
	mov.b64 	%rd11859, {%r8395, %r8394};
	shf.r.wrap.b32 	%r8396, %r8393, %r8392, 14;
	shf.r.wrap.b32 	%r8397, %r8392, %r8393, 14;
	mov.b64 	%rd11860, {%r8397, %r8396};
	xor.b64  	%rd11861, %rd11860, %rd11859;
	shf.l.wrap.b32 	%r8398, %r8392, %r8393, 23;
	shf.l.wrap.b32 	%r8399, %r8393, %r8392, 23;
	mov.b64 	%rd11862, {%r8399, %r8398};
	xor.b64  	%rd11863, %rd11861, %rd11862;
	xor.b64  	%rd11864, %rd13934, %rd13935;
	and.b64  	%rd11865, %rd13933, %rd11864;
	xor.b64  	%rd11866, %rd11865, %rd13935;
	add.s64 	%rd11867, %rd11866, %rd13936;
	add.s64 	%rd11868, %rd11867, %rd11863;
	ld.const.u64 	%rd11869, [%rd11858];
	add.s64 	%rd11870, %rd11868, %rd11869;
	add.s64 	%rd11871, %rd11870, %rd13928;
	add.s64 	%rd11872, %rd11871, %rd13932;
	or.b64  	%rd11873, %rd13929, %rd13930;
	and.b64  	%rd11874, %rd11873, %rd13931;
	and.b64  	%rd11875, %rd13929, %rd13930;
	or.b64  	%rd11876, %rd11874, %rd11875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8400}, %rd13929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8401,%dummy}, %rd13929;
	}
	shf.l.wrap.b32 	%r8402, %r8401, %r8400, 30;
	shf.l.wrap.b32 	%r8403, %r8400, %r8401, 30;
	mov.b64 	%rd11877, {%r8403, %r8402};
	shf.r.wrap.b32 	%r8404, %r8400, %r8401, 28;
	shf.r.wrap.b32 	%r8405, %r8401, %r8400, 28;
	mov.b64 	%rd11878, {%r8405, %r8404};
	xor.b64  	%rd11879, %rd11878, %rd11877;
	shf.l.wrap.b32 	%r8406, %r8401, %r8400, 25;
	shf.l.wrap.b32 	%r8407, %r8400, %r8401, 25;
	mov.b64 	%rd11880, {%r8407, %r8406};
	xor.b64  	%rd11881, %rd11879, %rd11880;
	add.s64 	%rd11882, %rd11881, %rd11876;
	add.s64 	%rd11883, %rd11882, %rd11871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8408}, %rd13913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8409,%dummy}, %rd13913;
	}
	shf.l.wrap.b32 	%r8410, %r8409, %r8408, 3;
	shf.l.wrap.b32 	%r8411, %r8408, %r8409, 3;
	mov.b64 	%rd11884, {%r8411, %r8410};
	shf.r.wrap.b32 	%r8412, %r8408, %r8409, 19;
	shf.r.wrap.b32 	%r8413, %r8409, %r8408, 19;
	mov.b64 	%rd11885, {%r8413, %r8412};
	xor.b64  	%rd11886, %rd11885, %rd11884;
	shr.u64 	%rd11887, %rd13913, 6;
	xor.b64  	%rd11888, %rd11886, %rd11887;
	add.s64 	%rd11889, %rd13918, %rd13927;
	add.s64 	%rd11890, %rd11889, %rd11888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8414,%dummy}, %rd13926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8415}, %rd13926;
	}
	shf.r.wrap.b32 	%r8416, %r8415, %r8414, 8;
	shf.r.wrap.b32 	%r8417, %r8414, %r8415, 8;
	mov.b64 	%rd11891, {%r8417, %r8416};
	shf.r.wrap.b32 	%r8418, %r8415, %r8414, 1;
	shf.r.wrap.b32 	%r8419, %r8414, %r8415, 1;
	mov.b64 	%rd11892, {%r8419, %r8418};
	xor.b64  	%rd11893, %rd11892, %rd11891;
	shr.u64 	%rd11894, %rd13926, 7;
	xor.b64  	%rd11895, %rd11893, %rd11894;
	add.s64 	%rd13927, %rd11890, %rd11895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8420,%dummy}, %rd11872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8421}, %rd11872;
	}
	shf.r.wrap.b32 	%r8422, %r8421, %r8420, 14;
	shf.r.wrap.b32 	%r8423, %r8420, %r8421, 14;
	mov.b64 	%rd11896, {%r8423, %r8422};
	shf.r.wrap.b32 	%r8424, %r8421, %r8420, 18;
	shf.r.wrap.b32 	%r8425, %r8420, %r8421, 18;
	mov.b64 	%rd11897, {%r8425, %r8424};
	xor.b64  	%rd11898, %rd11896, %rd11897;
	shf.l.wrap.b32 	%r8426, %r8420, %r8421, 23;
	shf.l.wrap.b32 	%r8427, %r8421, %r8420, 23;
	mov.b64 	%rd11899, {%r8427, %r8426};
	xor.b64  	%rd11900, %rd11898, %rd11899;
	xor.b64  	%rd11901, %rd13933, %rd13934;
	and.b64  	%rd11902, %rd11872, %rd11901;
	xor.b64  	%rd11903, %rd11902, %rd13934;
	add.s64 	%rd11904, %rd11903, %rd13935;
	add.s64 	%rd11905, %rd11904, %rd11900;
	ld.const.u64 	%rd11906, [%rd11858+8];
	add.s64 	%rd11907, %rd11905, %rd11906;
	add.s64 	%rd11908, %rd11907, %rd13927;
	add.s64 	%rd11909, %rd11908, %rd13931;
	and.b64  	%rd11910, %rd11883, %rd13929;
	or.b64  	%rd11911, %rd11883, %rd13929;
	and.b64  	%rd11912, %rd11911, %rd13930;
	or.b64  	%rd11913, %rd11912, %rd11910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8428,%dummy}, %rd11883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8429}, %rd11883;
	}
	shf.r.wrap.b32 	%r8430, %r8429, %r8428, 28;
	shf.r.wrap.b32 	%r8431, %r8428, %r8429, 28;
	mov.b64 	%rd11914, {%r8431, %r8430};
	shf.l.wrap.b32 	%r8432, %r8428, %r8429, 30;
	shf.l.wrap.b32 	%r8433, %r8429, %r8428, 30;
	mov.b64 	%rd11915, {%r8433, %r8432};
	xor.b64  	%rd11916, %rd11914, %rd11915;
	shf.l.wrap.b32 	%r8434, %r8428, %r8429, 25;
	shf.l.wrap.b32 	%r8435, %r8429, %r8428, 25;
	mov.b64 	%rd11917, {%r8435, %r8434};
	xor.b64  	%rd11918, %rd11916, %rd11917;
	add.s64 	%rd11919, %rd11918, %rd11913;
	add.s64 	%rd11920, %rd11919, %rd11908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8436,%dummy}, %rd13928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8437}, %rd13928;
	}
	shf.r.wrap.b32 	%r8438, %r8437, %r8436, 19;
	shf.r.wrap.b32 	%r8439, %r8436, %r8437, 19;
	mov.b64 	%rd11921, {%r8439, %r8438};
	shf.l.wrap.b32 	%r8440, %r8436, %r8437, 3;
	shf.l.wrap.b32 	%r8441, %r8437, %r8436, 3;
	mov.b64 	%rd11922, {%r8441, %r8440};
	xor.b64  	%rd11923, %rd11921, %rd11922;
	shr.u64 	%rd11924, %rd13928, 6;
	xor.b64  	%rd11925, %rd11923, %rd11924;
	add.s64 	%rd11926, %rd13917, %rd13926;
	add.s64 	%rd11927, %rd11926, %rd11925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8442,%dummy}, %rd13925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8443}, %rd13925;
	}
	shf.r.wrap.b32 	%r8444, %r8443, %r8442, 8;
	shf.r.wrap.b32 	%r8445, %r8442, %r8443, 8;
	mov.b64 	%rd11928, {%r8445, %r8444};
	shf.r.wrap.b32 	%r8446, %r8443, %r8442, 1;
	shf.r.wrap.b32 	%r8447, %r8442, %r8443, 1;
	mov.b64 	%rd11929, {%r8447, %r8446};
	xor.b64  	%rd11930, %rd11929, %rd11928;
	shr.u64 	%rd11931, %rd13925, 7;
	xor.b64  	%rd11932, %rd11930, %rd11931;
	add.s64 	%rd13926, %rd11927, %rd11932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8448,%dummy}, %rd11909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8449}, %rd11909;
	}
	shf.r.wrap.b32 	%r8450, %r8449, %r8448, 14;
	shf.r.wrap.b32 	%r8451, %r8448, %r8449, 14;
	mov.b64 	%rd11933, {%r8451, %r8450};
	shf.r.wrap.b32 	%r8452, %r8449, %r8448, 18;
	shf.r.wrap.b32 	%r8453, %r8448, %r8449, 18;
	mov.b64 	%rd11934, {%r8453, %r8452};
	xor.b64  	%rd11935, %rd11933, %rd11934;
	shf.l.wrap.b32 	%r8454, %r8448, %r8449, 23;
	shf.l.wrap.b32 	%r8455, %r8449, %r8448, 23;
	mov.b64 	%rd11936, {%r8455, %r8454};
	xor.b64  	%rd11937, %rd11935, %rd11936;
	xor.b64  	%rd11938, %rd11872, %rd13933;
	and.b64  	%rd11939, %rd11909, %rd11938;
	xor.b64  	%rd11940, %rd11939, %rd13933;
	add.s64 	%rd11941, %rd11940, %rd13934;
	add.s64 	%rd11942, %rd11941, %rd11937;
	ld.const.u64 	%rd11943, [%rd11858+16];
	add.s64 	%rd11944, %rd11942, %rd11943;
	add.s64 	%rd11945, %rd11944, %rd13926;
	add.s64 	%rd11946, %rd11945, %rd13930;
	and.b64  	%rd11947, %rd11920, %rd11883;
	or.b64  	%rd11948, %rd11920, %rd11883;
	and.b64  	%rd11949, %rd11948, %rd13929;
	or.b64  	%rd11950, %rd11949, %rd11947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8456,%dummy}, %rd11920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8457}, %rd11920;
	}
	shf.r.wrap.b32 	%r8458, %r8457, %r8456, 28;
	shf.r.wrap.b32 	%r8459, %r8456, %r8457, 28;
	mov.b64 	%rd11951, {%r8459, %r8458};
	shf.l.wrap.b32 	%r8460, %r8456, %r8457, 30;
	shf.l.wrap.b32 	%r8461, %r8457, %r8456, 30;
	mov.b64 	%rd11952, {%r8461, %r8460};
	xor.b64  	%rd11953, %rd11951, %rd11952;
	shf.l.wrap.b32 	%r8462, %r8456, %r8457, 25;
	shf.l.wrap.b32 	%r8463, %r8457, %r8456, 25;
	mov.b64 	%rd11954, {%r8463, %r8462};
	xor.b64  	%rd11955, %rd11953, %rd11954;
	add.s64 	%rd11956, %rd11955, %rd11950;
	add.s64 	%rd11957, %rd11956, %rd11945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8464,%dummy}, %rd13927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8465}, %rd13927;
	}
	shf.r.wrap.b32 	%r8466, %r8465, %r8464, 19;
	shf.r.wrap.b32 	%r8467, %r8464, %r8465, 19;
	mov.b64 	%rd11958, {%r8467, %r8466};
	shf.l.wrap.b32 	%r8468, %r8464, %r8465, 3;
	shf.l.wrap.b32 	%r8469, %r8465, %r8464, 3;
	mov.b64 	%rd11959, {%r8469, %r8468};
	xor.b64  	%rd11960, %rd11958, %rd11959;
	shr.u64 	%rd11961, %rd13927, 6;
	xor.b64  	%rd11962, %rd11960, %rd11961;
	add.s64 	%rd11963, %rd13916, %rd13925;
	add.s64 	%rd11964, %rd11963, %rd11962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8470,%dummy}, %rd13924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8471}, %rd13924;
	}
	shf.r.wrap.b32 	%r8472, %r8471, %r8470, 8;
	shf.r.wrap.b32 	%r8473, %r8470, %r8471, 8;
	mov.b64 	%rd11965, {%r8473, %r8472};
	shf.r.wrap.b32 	%r8474, %r8471, %r8470, 1;
	shf.r.wrap.b32 	%r8475, %r8470, %r8471, 1;
	mov.b64 	%rd11966, {%r8475, %r8474};
	xor.b64  	%rd11967, %rd11966, %rd11965;
	shr.u64 	%rd11968, %rd13924, 7;
	xor.b64  	%rd11969, %rd11967, %rd11968;
	add.s64 	%rd13925, %rd11964, %rd11969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8476,%dummy}, %rd11946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8477}, %rd11946;
	}
	shf.r.wrap.b32 	%r8478, %r8477, %r8476, 14;
	shf.r.wrap.b32 	%r8479, %r8476, %r8477, 14;
	mov.b64 	%rd11970, {%r8479, %r8478};
	shf.r.wrap.b32 	%r8480, %r8477, %r8476, 18;
	shf.r.wrap.b32 	%r8481, %r8476, %r8477, 18;
	mov.b64 	%rd11971, {%r8481, %r8480};
	xor.b64  	%rd11972, %rd11970, %rd11971;
	shf.l.wrap.b32 	%r8482, %r8476, %r8477, 23;
	shf.l.wrap.b32 	%r8483, %r8477, %r8476, 23;
	mov.b64 	%rd11973, {%r8483, %r8482};
	xor.b64  	%rd11974, %rd11972, %rd11973;
	xor.b64  	%rd11975, %rd11909, %rd11872;
	and.b64  	%rd11976, %rd11946, %rd11975;
	xor.b64  	%rd11977, %rd11976, %rd11872;
	add.s64 	%rd11978, %rd11977, %rd13933;
	add.s64 	%rd11979, %rd11978, %rd11974;
	ld.const.u64 	%rd11980, [%rd11858+24];
	add.s64 	%rd11981, %rd11979, %rd11980;
	add.s64 	%rd11982, %rd11981, %rd13925;
	add.s64 	%rd11983, %rd11982, %rd13929;
	and.b64  	%rd11984, %rd11957, %rd11920;
	or.b64  	%rd11985, %rd11957, %rd11920;
	and.b64  	%rd11986, %rd11985, %rd11883;
	or.b64  	%rd11987, %rd11986, %rd11984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8484,%dummy}, %rd11957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8485}, %rd11957;
	}
	shf.r.wrap.b32 	%r8486, %r8485, %r8484, 28;
	shf.r.wrap.b32 	%r8487, %r8484, %r8485, 28;
	mov.b64 	%rd11988, {%r8487, %r8486};
	shf.l.wrap.b32 	%r8488, %r8484, %r8485, 30;
	shf.l.wrap.b32 	%r8489, %r8485, %r8484, 30;
	mov.b64 	%rd11989, {%r8489, %r8488};
	xor.b64  	%rd11990, %rd11988, %rd11989;
	shf.l.wrap.b32 	%r8490, %r8484, %r8485, 25;
	shf.l.wrap.b32 	%r8491, %r8485, %r8484, 25;
	mov.b64 	%rd11991, {%r8491, %r8490};
	xor.b64  	%rd11992, %rd11990, %rd11991;
	add.s64 	%rd11993, %rd11992, %rd11987;
	add.s64 	%rd11994, %rd11993, %rd11982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8492,%dummy}, %rd13926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8493}, %rd13926;
	}
	shf.r.wrap.b32 	%r8494, %r8493, %r8492, 19;
	shf.r.wrap.b32 	%r8495, %r8492, %r8493, 19;
	mov.b64 	%rd11995, {%r8495, %r8494};
	shf.l.wrap.b32 	%r8496, %r8492, %r8493, 3;
	shf.l.wrap.b32 	%r8497, %r8493, %r8492, 3;
	mov.b64 	%rd11996, {%r8497, %r8496};
	xor.b64  	%rd11997, %rd11995, %rd11996;
	shr.u64 	%rd11998, %rd13926, 6;
	xor.b64  	%rd11999, %rd11997, %rd11998;
	add.s64 	%rd12000, %rd13915, %rd13924;
	add.s64 	%rd12001, %rd12000, %rd11999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8498,%dummy}, %rd13923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8499}, %rd13923;
	}
	shf.r.wrap.b32 	%r8500, %r8499, %r8498, 8;
	shf.r.wrap.b32 	%r8501, %r8498, %r8499, 8;
	mov.b64 	%rd12002, {%r8501, %r8500};
	shf.r.wrap.b32 	%r8502, %r8499, %r8498, 1;
	shf.r.wrap.b32 	%r8503, %r8498, %r8499, 1;
	mov.b64 	%rd12003, {%r8503, %r8502};
	xor.b64  	%rd12004, %rd12003, %rd12002;
	shr.u64 	%rd12005, %rd13923, 7;
	xor.b64  	%rd12006, %rd12004, %rd12005;
	add.s64 	%rd13924, %rd12001, %rd12006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8504,%dummy}, %rd11983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8505}, %rd11983;
	}
	shf.r.wrap.b32 	%r8506, %r8505, %r8504, 14;
	shf.r.wrap.b32 	%r8507, %r8504, %r8505, 14;
	mov.b64 	%rd12007, {%r8507, %r8506};
	shf.r.wrap.b32 	%r8508, %r8505, %r8504, 18;
	shf.r.wrap.b32 	%r8509, %r8504, %r8505, 18;
	mov.b64 	%rd12008, {%r8509, %r8508};
	xor.b64  	%rd12009, %rd12007, %rd12008;
	shf.l.wrap.b32 	%r8510, %r8504, %r8505, 23;
	shf.l.wrap.b32 	%r8511, %r8505, %r8504, 23;
	mov.b64 	%rd12010, {%r8511, %r8510};
	xor.b64  	%rd12011, %rd12009, %rd12010;
	xor.b64  	%rd12012, %rd11946, %rd11909;
	and.b64  	%rd12013, %rd11983, %rd12012;
	xor.b64  	%rd12014, %rd12013, %rd11909;
	add.s64 	%rd12015, %rd12014, %rd11872;
	add.s64 	%rd12016, %rd12015, %rd12011;
	ld.const.u64 	%rd12017, [%rd11858+32];
	add.s64 	%rd12018, %rd12016, %rd12017;
	add.s64 	%rd12019, %rd12018, %rd13924;
	add.s64 	%rd12020, %rd12019, %rd11883;
	and.b64  	%rd12021, %rd11994, %rd11957;
	or.b64  	%rd12022, %rd11994, %rd11957;
	and.b64  	%rd12023, %rd12022, %rd11920;
	or.b64  	%rd12024, %rd12023, %rd12021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8512,%dummy}, %rd11994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8513}, %rd11994;
	}
	shf.r.wrap.b32 	%r8514, %r8513, %r8512, 28;
	shf.r.wrap.b32 	%r8515, %r8512, %r8513, 28;
	mov.b64 	%rd12025, {%r8515, %r8514};
	shf.l.wrap.b32 	%r8516, %r8512, %r8513, 30;
	shf.l.wrap.b32 	%r8517, %r8513, %r8512, 30;
	mov.b64 	%rd12026, {%r8517, %r8516};
	xor.b64  	%rd12027, %rd12025, %rd12026;
	shf.l.wrap.b32 	%r8518, %r8512, %r8513, 25;
	shf.l.wrap.b32 	%r8519, %r8513, %r8512, 25;
	mov.b64 	%rd12028, {%r8519, %r8518};
	xor.b64  	%rd12029, %rd12027, %rd12028;
	add.s64 	%rd12030, %rd12029, %rd12024;
	add.s64 	%rd12031, %rd12030, %rd12019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8520,%dummy}, %rd13925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8521}, %rd13925;
	}
	shf.r.wrap.b32 	%r8522, %r8521, %r8520, 19;
	shf.r.wrap.b32 	%r8523, %r8520, %r8521, 19;
	mov.b64 	%rd12032, {%r8523, %r8522};
	shf.l.wrap.b32 	%r8524, %r8520, %r8521, 3;
	shf.l.wrap.b32 	%r8525, %r8521, %r8520, 3;
	mov.b64 	%rd12033, {%r8525, %r8524};
	xor.b64  	%rd12034, %rd12032, %rd12033;
	shr.u64 	%rd12035, %rd13925, 6;
	xor.b64  	%rd12036, %rd12034, %rd12035;
	add.s64 	%rd12037, %rd13914, %rd13923;
	add.s64 	%rd12038, %rd12037, %rd12036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8526,%dummy}, %rd13922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8527}, %rd13922;
	}
	shf.r.wrap.b32 	%r8528, %r8527, %r8526, 8;
	shf.r.wrap.b32 	%r8529, %r8526, %r8527, 8;
	mov.b64 	%rd12039, {%r8529, %r8528};
	shf.r.wrap.b32 	%r8530, %r8527, %r8526, 1;
	shf.r.wrap.b32 	%r8531, %r8526, %r8527, 1;
	mov.b64 	%rd12040, {%r8531, %r8530};
	xor.b64  	%rd12041, %rd12040, %rd12039;
	shr.u64 	%rd12042, %rd13922, 7;
	xor.b64  	%rd12043, %rd12041, %rd12042;
	add.s64 	%rd13923, %rd12038, %rd12043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8532,%dummy}, %rd12020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8533}, %rd12020;
	}
	shf.r.wrap.b32 	%r8534, %r8533, %r8532, 14;
	shf.r.wrap.b32 	%r8535, %r8532, %r8533, 14;
	mov.b64 	%rd12044, {%r8535, %r8534};
	shf.r.wrap.b32 	%r8536, %r8533, %r8532, 18;
	shf.r.wrap.b32 	%r8537, %r8532, %r8533, 18;
	mov.b64 	%rd12045, {%r8537, %r8536};
	xor.b64  	%rd12046, %rd12044, %rd12045;
	shf.l.wrap.b32 	%r8538, %r8532, %r8533, 23;
	shf.l.wrap.b32 	%r8539, %r8533, %r8532, 23;
	mov.b64 	%rd12047, {%r8539, %r8538};
	xor.b64  	%rd12048, %rd12046, %rd12047;
	xor.b64  	%rd12049, %rd11983, %rd11946;
	and.b64  	%rd12050, %rd12020, %rd12049;
	xor.b64  	%rd12051, %rd12050, %rd11946;
	add.s64 	%rd12052, %rd12051, %rd11909;
	add.s64 	%rd12053, %rd12052, %rd12048;
	ld.const.u64 	%rd12054, [%rd11858+40];
	add.s64 	%rd12055, %rd12053, %rd12054;
	add.s64 	%rd12056, %rd12055, %rd13923;
	add.s64 	%rd12057, %rd12056, %rd11920;
	and.b64  	%rd12058, %rd12031, %rd11994;
	or.b64  	%rd12059, %rd12031, %rd11994;
	and.b64  	%rd12060, %rd12059, %rd11957;
	or.b64  	%rd12061, %rd12060, %rd12058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8540,%dummy}, %rd12031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8541}, %rd12031;
	}
	shf.r.wrap.b32 	%r8542, %r8541, %r8540, 28;
	shf.r.wrap.b32 	%r8543, %r8540, %r8541, 28;
	mov.b64 	%rd12062, {%r8543, %r8542};
	shf.l.wrap.b32 	%r8544, %r8540, %r8541, 30;
	shf.l.wrap.b32 	%r8545, %r8541, %r8540, 30;
	mov.b64 	%rd12063, {%r8545, %r8544};
	xor.b64  	%rd12064, %rd12062, %rd12063;
	shf.l.wrap.b32 	%r8546, %r8540, %r8541, 25;
	shf.l.wrap.b32 	%r8547, %r8541, %r8540, 25;
	mov.b64 	%rd12065, {%r8547, %r8546};
	xor.b64  	%rd12066, %rd12064, %rd12065;
	add.s64 	%rd12067, %rd12066, %rd12061;
	add.s64 	%rd12068, %rd12067, %rd12056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8548,%dummy}, %rd13924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8549}, %rd13924;
	}
	shf.r.wrap.b32 	%r8550, %r8549, %r8548, 19;
	shf.r.wrap.b32 	%r8551, %r8548, %r8549, 19;
	mov.b64 	%rd12069, {%r8551, %r8550};
	shf.l.wrap.b32 	%r8552, %r8548, %r8549, 3;
	shf.l.wrap.b32 	%r8553, %r8549, %r8548, 3;
	mov.b64 	%rd12070, {%r8553, %r8552};
	xor.b64  	%rd12071, %rd12069, %rd12070;
	shr.u64 	%rd12072, %rd13924, 6;
	xor.b64  	%rd12073, %rd12071, %rd12072;
	add.s64 	%rd12074, %rd13913, %rd13922;
	add.s64 	%rd12075, %rd12074, %rd12073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8554,%dummy}, %rd13921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8555}, %rd13921;
	}
	shf.r.wrap.b32 	%r8556, %r8555, %r8554, 8;
	shf.r.wrap.b32 	%r8557, %r8554, %r8555, 8;
	mov.b64 	%rd12076, {%r8557, %r8556};
	shf.r.wrap.b32 	%r8558, %r8555, %r8554, 1;
	shf.r.wrap.b32 	%r8559, %r8554, %r8555, 1;
	mov.b64 	%rd12077, {%r8559, %r8558};
	xor.b64  	%rd12078, %rd12077, %rd12076;
	shr.u64 	%rd12079, %rd13921, 7;
	xor.b64  	%rd12080, %rd12078, %rd12079;
	add.s64 	%rd13922, %rd12075, %rd12080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8560,%dummy}, %rd12057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8561}, %rd12057;
	}
	shf.r.wrap.b32 	%r8562, %r8561, %r8560, 14;
	shf.r.wrap.b32 	%r8563, %r8560, %r8561, 14;
	mov.b64 	%rd12081, {%r8563, %r8562};
	shf.r.wrap.b32 	%r8564, %r8561, %r8560, 18;
	shf.r.wrap.b32 	%r8565, %r8560, %r8561, 18;
	mov.b64 	%rd12082, {%r8565, %r8564};
	xor.b64  	%rd12083, %rd12081, %rd12082;
	shf.l.wrap.b32 	%r8566, %r8560, %r8561, 23;
	shf.l.wrap.b32 	%r8567, %r8561, %r8560, 23;
	mov.b64 	%rd12084, {%r8567, %r8566};
	xor.b64  	%rd12085, %rd12083, %rd12084;
	xor.b64  	%rd12086, %rd12020, %rd11983;
	and.b64  	%rd12087, %rd12057, %rd12086;
	xor.b64  	%rd12088, %rd12087, %rd11983;
	add.s64 	%rd12089, %rd12088, %rd11946;
	add.s64 	%rd12090, %rd12089, %rd12085;
	ld.const.u64 	%rd12091, [%rd11858+48];
	add.s64 	%rd12092, %rd12090, %rd12091;
	add.s64 	%rd12093, %rd12092, %rd13922;
	add.s64 	%rd12094, %rd12093, %rd11957;
	and.b64  	%rd12095, %rd12068, %rd12031;
	or.b64  	%rd12096, %rd12068, %rd12031;
	and.b64  	%rd12097, %rd12096, %rd11994;
	or.b64  	%rd12098, %rd12097, %rd12095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8568,%dummy}, %rd12068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8569}, %rd12068;
	}
	shf.r.wrap.b32 	%r8570, %r8569, %r8568, 28;
	shf.r.wrap.b32 	%r8571, %r8568, %r8569, 28;
	mov.b64 	%rd12099, {%r8571, %r8570};
	shf.l.wrap.b32 	%r8572, %r8568, %r8569, 30;
	shf.l.wrap.b32 	%r8573, %r8569, %r8568, 30;
	mov.b64 	%rd12100, {%r8573, %r8572};
	xor.b64  	%rd12101, %rd12099, %rd12100;
	shf.l.wrap.b32 	%r8574, %r8568, %r8569, 25;
	shf.l.wrap.b32 	%r8575, %r8569, %r8568, 25;
	mov.b64 	%rd12102, {%r8575, %r8574};
	xor.b64  	%rd12103, %rd12101, %rd12102;
	add.s64 	%rd12104, %rd12103, %rd12098;
	add.s64 	%rd12105, %rd12104, %rd12093;
	add.s64 	%rd12106, %rd13928, %rd13921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8576,%dummy}, %rd13923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8577}, %rd13923;
	}
	shf.r.wrap.b32 	%r8578, %r8577, %r8576, 19;
	shf.r.wrap.b32 	%r8579, %r8576, %r8577, 19;
	mov.b64 	%rd12107, {%r8579, %r8578};
	shf.l.wrap.b32 	%r8580, %r8576, %r8577, 3;
	shf.l.wrap.b32 	%r8581, %r8577, %r8576, 3;
	mov.b64 	%rd12108, {%r8581, %r8580};
	xor.b64  	%rd12109, %rd12107, %rd12108;
	shr.u64 	%rd12110, %rd13923, 6;
	xor.b64  	%rd12111, %rd12109, %rd12110;
	add.s64 	%rd12112, %rd12106, %rd12111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8582,%dummy}, %rd13920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8583}, %rd13920;
	}
	shf.r.wrap.b32 	%r8584, %r8583, %r8582, 8;
	shf.r.wrap.b32 	%r8585, %r8582, %r8583, 8;
	mov.b64 	%rd12113, {%r8585, %r8584};
	shf.r.wrap.b32 	%r8586, %r8583, %r8582, 1;
	shf.r.wrap.b32 	%r8587, %r8582, %r8583, 1;
	mov.b64 	%rd12114, {%r8587, %r8586};
	xor.b64  	%rd12115, %rd12114, %rd12113;
	shr.u64 	%rd12116, %rd13920, 7;
	xor.b64  	%rd12117, %rd12115, %rd12116;
	add.s64 	%rd13921, %rd12112, %rd12117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8588,%dummy}, %rd12094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8589}, %rd12094;
	}
	shf.r.wrap.b32 	%r8590, %r8589, %r8588, 14;
	shf.r.wrap.b32 	%r8591, %r8588, %r8589, 14;
	mov.b64 	%rd12118, {%r8591, %r8590};
	shf.r.wrap.b32 	%r8592, %r8589, %r8588, 18;
	shf.r.wrap.b32 	%r8593, %r8588, %r8589, 18;
	mov.b64 	%rd12119, {%r8593, %r8592};
	xor.b64  	%rd12120, %rd12118, %rd12119;
	shf.l.wrap.b32 	%r8594, %r8588, %r8589, 23;
	shf.l.wrap.b32 	%r8595, %r8589, %r8588, 23;
	mov.b64 	%rd12121, {%r8595, %r8594};
	xor.b64  	%rd12122, %rd12120, %rd12121;
	xor.b64  	%rd12123, %rd12057, %rd12020;
	and.b64  	%rd12124, %rd12094, %rd12123;
	xor.b64  	%rd12125, %rd12124, %rd12020;
	add.s64 	%rd12126, %rd12125, %rd11983;
	add.s64 	%rd12127, %rd12126, %rd12122;
	ld.const.u64 	%rd12128, [%rd11858+56];
	add.s64 	%rd12129, %rd12127, %rd12128;
	add.s64 	%rd12130, %rd12129, %rd13921;
	add.s64 	%rd12131, %rd12130, %rd11994;
	and.b64  	%rd12132, %rd12105, %rd12068;
	or.b64  	%rd12133, %rd12105, %rd12068;
	and.b64  	%rd12134, %rd12133, %rd12031;
	or.b64  	%rd12135, %rd12134, %rd12132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8596,%dummy}, %rd12105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8597}, %rd12105;
	}
	shf.r.wrap.b32 	%r8598, %r8597, %r8596, 28;
	shf.r.wrap.b32 	%r8599, %r8596, %r8597, 28;
	mov.b64 	%rd12136, {%r8599, %r8598};
	shf.l.wrap.b32 	%r8600, %r8596, %r8597, 30;
	shf.l.wrap.b32 	%r8601, %r8597, %r8596, 30;
	mov.b64 	%rd12137, {%r8601, %r8600};
	xor.b64  	%rd12138, %rd12136, %rd12137;
	shf.l.wrap.b32 	%r8602, %r8596, %r8597, 25;
	shf.l.wrap.b32 	%r8603, %r8597, %r8596, 25;
	mov.b64 	%rd12139, {%r8603, %r8602};
	xor.b64  	%rd12140, %rd12138, %rd12139;
	add.s64 	%rd12141, %rd12140, %rd12135;
	add.s64 	%rd12142, %rd12141, %rd12130;
	add.s64 	%rd12143, %rd13927, %rd13920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8604,%dummy}, %rd13922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8605}, %rd13922;
	}
	shf.r.wrap.b32 	%r8606, %r8605, %r8604, 19;
	shf.r.wrap.b32 	%r8607, %r8604, %r8605, 19;
	mov.b64 	%rd12144, {%r8607, %r8606};
	shf.l.wrap.b32 	%r8608, %r8604, %r8605, 3;
	shf.l.wrap.b32 	%r8609, %r8605, %r8604, 3;
	mov.b64 	%rd12145, {%r8609, %r8608};
	xor.b64  	%rd12146, %rd12144, %rd12145;
	shr.u64 	%rd12147, %rd13922, 6;
	xor.b64  	%rd12148, %rd12146, %rd12147;
	add.s64 	%rd12149, %rd12143, %rd12148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8610,%dummy}, %rd13919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8611}, %rd13919;
	}
	shf.r.wrap.b32 	%r8612, %r8611, %r8610, 8;
	shf.r.wrap.b32 	%r8613, %r8610, %r8611, 8;
	mov.b64 	%rd12150, {%r8613, %r8612};
	shf.r.wrap.b32 	%r8614, %r8611, %r8610, 1;
	shf.r.wrap.b32 	%r8615, %r8610, %r8611, 1;
	mov.b64 	%rd12151, {%r8615, %r8614};
	xor.b64  	%rd12152, %rd12151, %rd12150;
	shr.u64 	%rd12153, %rd13919, 7;
	xor.b64  	%rd12154, %rd12152, %rd12153;
	add.s64 	%rd13920, %rd12149, %rd12154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8616,%dummy}, %rd12131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8617}, %rd12131;
	}
	shf.r.wrap.b32 	%r8618, %r8617, %r8616, 14;
	shf.r.wrap.b32 	%r8619, %r8616, %r8617, 14;
	mov.b64 	%rd12155, {%r8619, %r8618};
	shf.r.wrap.b32 	%r8620, %r8617, %r8616, 18;
	shf.r.wrap.b32 	%r8621, %r8616, %r8617, 18;
	mov.b64 	%rd12156, {%r8621, %r8620};
	xor.b64  	%rd12157, %rd12155, %rd12156;
	shf.l.wrap.b32 	%r8622, %r8616, %r8617, 23;
	shf.l.wrap.b32 	%r8623, %r8617, %r8616, 23;
	mov.b64 	%rd12158, {%r8623, %r8622};
	xor.b64  	%rd12159, %rd12157, %rd12158;
	xor.b64  	%rd12160, %rd12094, %rd12057;
	and.b64  	%rd12161, %rd12131, %rd12160;
	xor.b64  	%rd12162, %rd12161, %rd12057;
	add.s64 	%rd12163, %rd12162, %rd12020;
	add.s64 	%rd12164, %rd12163, %rd12159;
	ld.const.u64 	%rd12165, [%rd11858+64];
	add.s64 	%rd12166, %rd12164, %rd12165;
	add.s64 	%rd12167, %rd12166, %rd13920;
	add.s64 	%rd12168, %rd12167, %rd12031;
	and.b64  	%rd12169, %rd12142, %rd12105;
	or.b64  	%rd12170, %rd12142, %rd12105;
	and.b64  	%rd12171, %rd12170, %rd12068;
	or.b64  	%rd12172, %rd12171, %rd12169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8624,%dummy}, %rd12142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8625}, %rd12142;
	}
	shf.r.wrap.b32 	%r8626, %r8625, %r8624, 28;
	shf.r.wrap.b32 	%r8627, %r8624, %r8625, 28;
	mov.b64 	%rd12173, {%r8627, %r8626};
	shf.l.wrap.b32 	%r8628, %r8624, %r8625, 30;
	shf.l.wrap.b32 	%r8629, %r8625, %r8624, 30;
	mov.b64 	%rd12174, {%r8629, %r8628};
	xor.b64  	%rd12175, %rd12173, %rd12174;
	shf.l.wrap.b32 	%r8630, %r8624, %r8625, 25;
	shf.l.wrap.b32 	%r8631, %r8625, %r8624, 25;
	mov.b64 	%rd12176, {%r8631, %r8630};
	xor.b64  	%rd12177, %rd12175, %rd12176;
	add.s64 	%rd12178, %rd12177, %rd12172;
	add.s64 	%rd12179, %rd12178, %rd12167;
	add.s64 	%rd12180, %rd13926, %rd13919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8632,%dummy}, %rd13921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8633}, %rd13921;
	}
	shf.r.wrap.b32 	%r8634, %r8633, %r8632, 19;
	shf.r.wrap.b32 	%r8635, %r8632, %r8633, 19;
	mov.b64 	%rd12181, {%r8635, %r8634};
	shf.l.wrap.b32 	%r8636, %r8632, %r8633, 3;
	shf.l.wrap.b32 	%r8637, %r8633, %r8632, 3;
	mov.b64 	%rd12182, {%r8637, %r8636};
	xor.b64  	%rd12183, %rd12181, %rd12182;
	shr.u64 	%rd12184, %rd13921, 6;
	xor.b64  	%rd12185, %rd12183, %rd12184;
	add.s64 	%rd12186, %rd12180, %rd12185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8638,%dummy}, %rd13918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8639}, %rd13918;
	}
	shf.r.wrap.b32 	%r8640, %r8639, %r8638, 8;
	shf.r.wrap.b32 	%r8641, %r8638, %r8639, 8;
	mov.b64 	%rd12187, {%r8641, %r8640};
	shf.r.wrap.b32 	%r8642, %r8639, %r8638, 1;
	shf.r.wrap.b32 	%r8643, %r8638, %r8639, 1;
	mov.b64 	%rd12188, {%r8643, %r8642};
	xor.b64  	%rd12189, %rd12188, %rd12187;
	shr.u64 	%rd12190, %rd13918, 7;
	xor.b64  	%rd12191, %rd12189, %rd12190;
	add.s64 	%rd13919, %rd12186, %rd12191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8644,%dummy}, %rd12168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8645}, %rd12168;
	}
	shf.r.wrap.b32 	%r8646, %r8645, %r8644, 14;
	shf.r.wrap.b32 	%r8647, %r8644, %r8645, 14;
	mov.b64 	%rd12192, {%r8647, %r8646};
	shf.r.wrap.b32 	%r8648, %r8645, %r8644, 18;
	shf.r.wrap.b32 	%r8649, %r8644, %r8645, 18;
	mov.b64 	%rd12193, {%r8649, %r8648};
	xor.b64  	%rd12194, %rd12192, %rd12193;
	shf.l.wrap.b32 	%r8650, %r8644, %r8645, 23;
	shf.l.wrap.b32 	%r8651, %r8645, %r8644, 23;
	mov.b64 	%rd12195, {%r8651, %r8650};
	xor.b64  	%rd12196, %rd12194, %rd12195;
	xor.b64  	%rd12197, %rd12131, %rd12094;
	and.b64  	%rd12198, %rd12168, %rd12197;
	xor.b64  	%rd12199, %rd12198, %rd12094;
	add.s64 	%rd12200, %rd12199, %rd12057;
	add.s64 	%rd12201, %rd12200, %rd12196;
	ld.const.u64 	%rd12202, [%rd11858+72];
	add.s64 	%rd12203, %rd12201, %rd12202;
	add.s64 	%rd12204, %rd12203, %rd13919;
	add.s64 	%rd12205, %rd12204, %rd12068;
	and.b64  	%rd12206, %rd12179, %rd12142;
	or.b64  	%rd12207, %rd12179, %rd12142;
	and.b64  	%rd12208, %rd12207, %rd12105;
	or.b64  	%rd12209, %rd12208, %rd12206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8652,%dummy}, %rd12179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8653}, %rd12179;
	}
	shf.r.wrap.b32 	%r8654, %r8653, %r8652, 28;
	shf.r.wrap.b32 	%r8655, %r8652, %r8653, 28;
	mov.b64 	%rd12210, {%r8655, %r8654};
	shf.l.wrap.b32 	%r8656, %r8652, %r8653, 30;
	shf.l.wrap.b32 	%r8657, %r8653, %r8652, 30;
	mov.b64 	%rd12211, {%r8657, %r8656};
	xor.b64  	%rd12212, %rd12210, %rd12211;
	shf.l.wrap.b32 	%r8658, %r8652, %r8653, 25;
	shf.l.wrap.b32 	%r8659, %r8653, %r8652, 25;
	mov.b64 	%rd12213, {%r8659, %r8658};
	xor.b64  	%rd12214, %rd12212, %rd12213;
	add.s64 	%rd12215, %rd12214, %rd12209;
	add.s64 	%rd12216, %rd12215, %rd12204;
	add.s64 	%rd12217, %rd13925, %rd13918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8660,%dummy}, %rd13920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8661}, %rd13920;
	}
	shf.r.wrap.b32 	%r8662, %r8661, %r8660, 19;
	shf.r.wrap.b32 	%r8663, %r8660, %r8661, 19;
	mov.b64 	%rd12218, {%r8663, %r8662};
	shf.l.wrap.b32 	%r8664, %r8660, %r8661, 3;
	shf.l.wrap.b32 	%r8665, %r8661, %r8660, 3;
	mov.b64 	%rd12219, {%r8665, %r8664};
	xor.b64  	%rd12220, %rd12218, %rd12219;
	shr.u64 	%rd12221, %rd13920, 6;
	xor.b64  	%rd12222, %rd12220, %rd12221;
	add.s64 	%rd12223, %rd12217, %rd12222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8666,%dummy}, %rd13917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8667}, %rd13917;
	}
	shf.r.wrap.b32 	%r8668, %r8667, %r8666, 8;
	shf.r.wrap.b32 	%r8669, %r8666, %r8667, 8;
	mov.b64 	%rd12224, {%r8669, %r8668};
	shf.r.wrap.b32 	%r8670, %r8667, %r8666, 1;
	shf.r.wrap.b32 	%r8671, %r8666, %r8667, 1;
	mov.b64 	%rd12225, {%r8671, %r8670};
	xor.b64  	%rd12226, %rd12225, %rd12224;
	shr.u64 	%rd12227, %rd13917, 7;
	xor.b64  	%rd12228, %rd12226, %rd12227;
	add.s64 	%rd13918, %rd12223, %rd12228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8672,%dummy}, %rd12205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8673}, %rd12205;
	}
	shf.r.wrap.b32 	%r8674, %r8673, %r8672, 14;
	shf.r.wrap.b32 	%r8675, %r8672, %r8673, 14;
	mov.b64 	%rd12229, {%r8675, %r8674};
	shf.r.wrap.b32 	%r8676, %r8673, %r8672, 18;
	shf.r.wrap.b32 	%r8677, %r8672, %r8673, 18;
	mov.b64 	%rd12230, {%r8677, %r8676};
	xor.b64  	%rd12231, %rd12229, %rd12230;
	shf.l.wrap.b32 	%r8678, %r8672, %r8673, 23;
	shf.l.wrap.b32 	%r8679, %r8673, %r8672, 23;
	mov.b64 	%rd12232, {%r8679, %r8678};
	xor.b64  	%rd12233, %rd12231, %rd12232;
	xor.b64  	%rd12234, %rd12168, %rd12131;
	and.b64  	%rd12235, %rd12205, %rd12234;
	xor.b64  	%rd12236, %rd12235, %rd12131;
	add.s64 	%rd12237, %rd12236, %rd12094;
	add.s64 	%rd12238, %rd12237, %rd12233;
	ld.const.u64 	%rd12239, [%rd11858+80];
	add.s64 	%rd12240, %rd12238, %rd12239;
	add.s64 	%rd12241, %rd12240, %rd13918;
	add.s64 	%rd12242, %rd12241, %rd12105;
	and.b64  	%rd12243, %rd12216, %rd12179;
	or.b64  	%rd12244, %rd12216, %rd12179;
	and.b64  	%rd12245, %rd12244, %rd12142;
	or.b64  	%rd12246, %rd12245, %rd12243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8680,%dummy}, %rd12216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8681}, %rd12216;
	}
	shf.r.wrap.b32 	%r8682, %r8681, %r8680, 28;
	shf.r.wrap.b32 	%r8683, %r8680, %r8681, 28;
	mov.b64 	%rd12247, {%r8683, %r8682};
	shf.l.wrap.b32 	%r8684, %r8680, %r8681, 30;
	shf.l.wrap.b32 	%r8685, %r8681, %r8680, 30;
	mov.b64 	%rd12248, {%r8685, %r8684};
	xor.b64  	%rd12249, %rd12247, %rd12248;
	shf.l.wrap.b32 	%r8686, %r8680, %r8681, 25;
	shf.l.wrap.b32 	%r8687, %r8681, %r8680, 25;
	mov.b64 	%rd12250, {%r8687, %r8686};
	xor.b64  	%rd12251, %rd12249, %rd12250;
	add.s64 	%rd12252, %rd12251, %rd12246;
	add.s64 	%rd12253, %rd12252, %rd12241;
	add.s64 	%rd12254, %rd13924, %rd13917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8688,%dummy}, %rd13919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8689}, %rd13919;
	}
	shf.r.wrap.b32 	%r8690, %r8689, %r8688, 19;
	shf.r.wrap.b32 	%r8691, %r8688, %r8689, 19;
	mov.b64 	%rd12255, {%r8691, %r8690};
	shf.l.wrap.b32 	%r8692, %r8688, %r8689, 3;
	shf.l.wrap.b32 	%r8693, %r8689, %r8688, 3;
	mov.b64 	%rd12256, {%r8693, %r8692};
	xor.b64  	%rd12257, %rd12255, %rd12256;
	shr.u64 	%rd12258, %rd13919, 6;
	xor.b64  	%rd12259, %rd12257, %rd12258;
	add.s64 	%rd12260, %rd12254, %rd12259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8694,%dummy}, %rd13916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8695}, %rd13916;
	}
	shf.r.wrap.b32 	%r8696, %r8695, %r8694, 8;
	shf.r.wrap.b32 	%r8697, %r8694, %r8695, 8;
	mov.b64 	%rd12261, {%r8697, %r8696};
	shf.r.wrap.b32 	%r8698, %r8695, %r8694, 1;
	shf.r.wrap.b32 	%r8699, %r8694, %r8695, 1;
	mov.b64 	%rd12262, {%r8699, %r8698};
	xor.b64  	%rd12263, %rd12262, %rd12261;
	shr.u64 	%rd12264, %rd13916, 7;
	xor.b64  	%rd12265, %rd12263, %rd12264;
	add.s64 	%rd13917, %rd12260, %rd12265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8700,%dummy}, %rd12242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8701}, %rd12242;
	}
	shf.r.wrap.b32 	%r8702, %r8701, %r8700, 14;
	shf.r.wrap.b32 	%r8703, %r8700, %r8701, 14;
	mov.b64 	%rd12266, {%r8703, %r8702};
	shf.r.wrap.b32 	%r8704, %r8701, %r8700, 18;
	shf.r.wrap.b32 	%r8705, %r8700, %r8701, 18;
	mov.b64 	%rd12267, {%r8705, %r8704};
	xor.b64  	%rd12268, %rd12266, %rd12267;
	shf.l.wrap.b32 	%r8706, %r8700, %r8701, 23;
	shf.l.wrap.b32 	%r8707, %r8701, %r8700, 23;
	mov.b64 	%rd12269, {%r8707, %r8706};
	xor.b64  	%rd12270, %rd12268, %rd12269;
	xor.b64  	%rd12271, %rd12205, %rd12168;
	and.b64  	%rd12272, %rd12242, %rd12271;
	xor.b64  	%rd12273, %rd12272, %rd12168;
	add.s64 	%rd12274, %rd12273, %rd12131;
	add.s64 	%rd12275, %rd12274, %rd12270;
	ld.const.u64 	%rd12276, [%rd11858+88];
	add.s64 	%rd12277, %rd12275, %rd12276;
	add.s64 	%rd12278, %rd12277, %rd13917;
	add.s64 	%rd12279, %rd12278, %rd12142;
	and.b64  	%rd12280, %rd12253, %rd12216;
	or.b64  	%rd12281, %rd12253, %rd12216;
	and.b64  	%rd12282, %rd12281, %rd12179;
	or.b64  	%rd12283, %rd12282, %rd12280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8708,%dummy}, %rd12253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8709}, %rd12253;
	}
	shf.r.wrap.b32 	%r8710, %r8709, %r8708, 28;
	shf.r.wrap.b32 	%r8711, %r8708, %r8709, 28;
	mov.b64 	%rd12284, {%r8711, %r8710};
	shf.l.wrap.b32 	%r8712, %r8708, %r8709, 30;
	shf.l.wrap.b32 	%r8713, %r8709, %r8708, 30;
	mov.b64 	%rd12285, {%r8713, %r8712};
	xor.b64  	%rd12286, %rd12284, %rd12285;
	shf.l.wrap.b32 	%r8714, %r8708, %r8709, 25;
	shf.l.wrap.b32 	%r8715, %r8709, %r8708, 25;
	mov.b64 	%rd12287, {%r8715, %r8714};
	xor.b64  	%rd12288, %rd12286, %rd12287;
	add.s64 	%rd12289, %rd12288, %rd12283;
	add.s64 	%rd12290, %rd12289, %rd12278;
	add.s64 	%rd12291, %rd13923, %rd13916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8716,%dummy}, %rd13918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8717}, %rd13918;
	}
	shf.r.wrap.b32 	%r8718, %r8717, %r8716, 19;
	shf.r.wrap.b32 	%r8719, %r8716, %r8717, 19;
	mov.b64 	%rd12292, {%r8719, %r8718};
	shf.l.wrap.b32 	%r8720, %r8716, %r8717, 3;
	shf.l.wrap.b32 	%r8721, %r8717, %r8716, 3;
	mov.b64 	%rd12293, {%r8721, %r8720};
	xor.b64  	%rd12294, %rd12292, %rd12293;
	shr.u64 	%rd12295, %rd13918, 6;
	xor.b64  	%rd12296, %rd12294, %rd12295;
	add.s64 	%rd12297, %rd12291, %rd12296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8722,%dummy}, %rd13915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8723}, %rd13915;
	}
	shf.r.wrap.b32 	%r8724, %r8723, %r8722, 8;
	shf.r.wrap.b32 	%r8725, %r8722, %r8723, 8;
	mov.b64 	%rd12298, {%r8725, %r8724};
	shf.r.wrap.b32 	%r8726, %r8723, %r8722, 1;
	shf.r.wrap.b32 	%r8727, %r8722, %r8723, 1;
	mov.b64 	%rd12299, {%r8727, %r8726};
	xor.b64  	%rd12300, %rd12299, %rd12298;
	shr.u64 	%rd12301, %rd13915, 7;
	xor.b64  	%rd12302, %rd12300, %rd12301;
	add.s64 	%rd13916, %rd12297, %rd12302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8728,%dummy}, %rd12279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8729}, %rd12279;
	}
	shf.r.wrap.b32 	%r8730, %r8729, %r8728, 14;
	shf.r.wrap.b32 	%r8731, %r8728, %r8729, 14;
	mov.b64 	%rd12303, {%r8731, %r8730};
	shf.r.wrap.b32 	%r8732, %r8729, %r8728, 18;
	shf.r.wrap.b32 	%r8733, %r8728, %r8729, 18;
	mov.b64 	%rd12304, {%r8733, %r8732};
	xor.b64  	%rd12305, %rd12303, %rd12304;
	shf.l.wrap.b32 	%r8734, %r8728, %r8729, 23;
	shf.l.wrap.b32 	%r8735, %r8729, %r8728, 23;
	mov.b64 	%rd12306, {%r8735, %r8734};
	xor.b64  	%rd12307, %rd12305, %rd12306;
	xor.b64  	%rd12308, %rd12242, %rd12205;
	and.b64  	%rd12309, %rd12279, %rd12308;
	xor.b64  	%rd12310, %rd12309, %rd12205;
	add.s64 	%rd12311, %rd12310, %rd12168;
	add.s64 	%rd12312, %rd12311, %rd12307;
	ld.const.u64 	%rd12313, [%rd11858+96];
	add.s64 	%rd12314, %rd12312, %rd12313;
	add.s64 	%rd12315, %rd12314, %rd13916;
	add.s64 	%rd13936, %rd12315, %rd12179;
	and.b64  	%rd12316, %rd12290, %rd12253;
	or.b64  	%rd12317, %rd12290, %rd12253;
	and.b64  	%rd12318, %rd12317, %rd12216;
	or.b64  	%rd12319, %rd12318, %rd12316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8736,%dummy}, %rd12290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8737}, %rd12290;
	}
	shf.r.wrap.b32 	%r8738, %r8737, %r8736, 28;
	shf.r.wrap.b32 	%r8739, %r8736, %r8737, 28;
	mov.b64 	%rd12320, {%r8739, %r8738};
	shf.l.wrap.b32 	%r8740, %r8736, %r8737, 30;
	shf.l.wrap.b32 	%r8741, %r8737, %r8736, 30;
	mov.b64 	%rd12321, {%r8741, %r8740};
	xor.b64  	%rd12322, %rd12320, %rd12321;
	shf.l.wrap.b32 	%r8742, %r8736, %r8737, 25;
	shf.l.wrap.b32 	%r8743, %r8737, %r8736, 25;
	mov.b64 	%rd12323, {%r8743, %r8742};
	xor.b64  	%rd12324, %rd12322, %rd12323;
	add.s64 	%rd12325, %rd12324, %rd12319;
	add.s64 	%rd13932, %rd12325, %rd12315;
	add.s64 	%rd12326, %rd13922, %rd13915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8744,%dummy}, %rd13917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8745}, %rd13917;
	}
	shf.r.wrap.b32 	%r8746, %r8745, %r8744, 19;
	shf.r.wrap.b32 	%r8747, %r8744, %r8745, 19;
	mov.b64 	%rd12327, {%r8747, %r8746};
	shf.l.wrap.b32 	%r8748, %r8744, %r8745, 3;
	shf.l.wrap.b32 	%r8749, %r8745, %r8744, 3;
	mov.b64 	%rd12328, {%r8749, %r8748};
	xor.b64  	%rd12329, %rd12327, %rd12328;
	shr.u64 	%rd12330, %rd13917, 6;
	xor.b64  	%rd12331, %rd12329, %rd12330;
	add.s64 	%rd12332, %rd12326, %rd12331;
	shf.r.wrap.b32 	%r8750, %r8380, %r8381, 8;
	shf.r.wrap.b32 	%r8751, %r8381, %r8380, 8;
	mov.b64 	%rd12333, {%r8751, %r8750};
	shf.r.wrap.b32 	%r8752, %r8380, %r8381, 1;
	shf.r.wrap.b32 	%r8753, %r8381, %r8380, 1;
	mov.b64 	%rd12334, {%r8753, %r8752};
	xor.b64  	%rd12335, %rd12334, %rd12333;
	shr.u64 	%rd12336, %rd13914, 7;
	xor.b64  	%rd12337, %rd12335, %rd12336;
	add.s64 	%rd13915, %rd12332, %rd12337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8754,%dummy}, %rd13936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8755}, %rd13936;
	}
	shf.r.wrap.b32 	%r8756, %r8755, %r8754, 14;
	shf.r.wrap.b32 	%r8757, %r8754, %r8755, 14;
	mov.b64 	%rd12338, {%r8757, %r8756};
	shf.r.wrap.b32 	%r8758, %r8755, %r8754, 18;
	shf.r.wrap.b32 	%r8759, %r8754, %r8755, 18;
	mov.b64 	%rd12339, {%r8759, %r8758};
	xor.b64  	%rd12340, %rd12338, %rd12339;
	shf.l.wrap.b32 	%r8760, %r8754, %r8755, 23;
	shf.l.wrap.b32 	%r8761, %r8755, %r8754, 23;
	mov.b64 	%rd12341, {%r8761, %r8760};
	xor.b64  	%rd12342, %rd12340, %rd12341;
	xor.b64  	%rd12343, %rd12279, %rd12242;
	and.b64  	%rd12344, %rd13936, %rd12343;
	xor.b64  	%rd12345, %rd12344, %rd12242;
	add.s64 	%rd12346, %rd12345, %rd12205;
	add.s64 	%rd12347, %rd12346, %rd12342;
	ld.const.u64 	%rd12348, [%rd11858+104];
	add.s64 	%rd12349, %rd12347, %rd12348;
	add.s64 	%rd12350, %rd12349, %rd13915;
	add.s64 	%rd13935, %rd12350, %rd12216;
	and.b64  	%rd12351, %rd13932, %rd12290;
	or.b64  	%rd12352, %rd13932, %rd12290;
	and.b64  	%rd12353, %rd12352, %rd12253;
	or.b64  	%rd12354, %rd12353, %rd12351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8762,%dummy}, %rd13932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8763}, %rd13932;
	}
	shf.r.wrap.b32 	%r8764, %r8763, %r8762, 28;
	shf.r.wrap.b32 	%r8765, %r8762, %r8763, 28;
	mov.b64 	%rd12355, {%r8765, %r8764};
	shf.l.wrap.b32 	%r8766, %r8762, %r8763, 30;
	shf.l.wrap.b32 	%r8767, %r8763, %r8762, 30;
	mov.b64 	%rd12356, {%r8767, %r8766};
	xor.b64  	%rd12357, %rd12355, %rd12356;
	shf.l.wrap.b32 	%r8768, %r8762, %r8763, 25;
	shf.l.wrap.b32 	%r8769, %r8763, %r8762, 25;
	mov.b64 	%rd12358, {%r8769, %r8768};
	xor.b64  	%rd12359, %rd12357, %rd12358;
	add.s64 	%rd12360, %rd12359, %rd12354;
	add.s64 	%rd13931, %rd12360, %rd12350;
	add.s64 	%rd12361, %rd13921, %rd13914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8770,%dummy}, %rd13916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8771}, %rd13916;
	}
	shf.r.wrap.b32 	%r8772, %r8771, %r8770, 19;
	shf.r.wrap.b32 	%r8773, %r8770, %r8771, 19;
	mov.b64 	%rd12362, {%r8773, %r8772};
	shf.l.wrap.b32 	%r8774, %r8770, %r8771, 3;
	shf.l.wrap.b32 	%r8775, %r8771, %r8770, 3;
	mov.b64 	%rd12363, {%r8775, %r8774};
	xor.b64  	%rd12364, %rd12362, %rd12363;
	shr.u64 	%rd12365, %rd13916, 6;
	xor.b64  	%rd12366, %rd12364, %rd12365;
	add.s64 	%rd12367, %rd12361, %rd12366;
	shf.r.wrap.b32 	%r8776, %r8408, %r8409, 8;
	shf.r.wrap.b32 	%r8777, %r8409, %r8408, 8;
	mov.b64 	%rd12368, {%r8777, %r8776};
	shf.r.wrap.b32 	%r8778, %r8408, %r8409, 1;
	shf.r.wrap.b32 	%r8779, %r8409, %r8408, 1;
	mov.b64 	%rd12369, {%r8779, %r8778};
	xor.b64  	%rd12370, %rd12369, %rd12368;
	shr.u64 	%rd12371, %rd13913, 7;
	xor.b64  	%rd12372, %rd12370, %rd12371;
	add.s64 	%rd13914, %rd12367, %rd12372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8780,%dummy}, %rd13935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8781}, %rd13935;
	}
	shf.r.wrap.b32 	%r8782, %r8781, %r8780, 14;
	shf.r.wrap.b32 	%r8783, %r8780, %r8781, 14;
	mov.b64 	%rd12373, {%r8783, %r8782};
	shf.r.wrap.b32 	%r8784, %r8781, %r8780, 18;
	shf.r.wrap.b32 	%r8785, %r8780, %r8781, 18;
	mov.b64 	%rd12374, {%r8785, %r8784};
	xor.b64  	%rd12375, %rd12373, %rd12374;
	shf.l.wrap.b32 	%r8786, %r8780, %r8781, 23;
	shf.l.wrap.b32 	%r8787, %r8781, %r8780, 23;
	mov.b64 	%rd12376, {%r8787, %r8786};
	xor.b64  	%rd12377, %rd12375, %rd12376;
	xor.b64  	%rd12378, %rd13936, %rd12279;
	and.b64  	%rd12379, %rd13935, %rd12378;
	xor.b64  	%rd12380, %rd12379, %rd12279;
	add.s64 	%rd12381, %rd12380, %rd12242;
	add.s64 	%rd12382, %rd12381, %rd12377;
	ld.const.u64 	%rd12383, [%rd11858+112];
	add.s64 	%rd12384, %rd12382, %rd12383;
	add.s64 	%rd12385, %rd12384, %rd13914;
	add.s64 	%rd13934, %rd12385, %rd12253;
	and.b64  	%rd12386, %rd13931, %rd13932;
	or.b64  	%rd12387, %rd13931, %rd13932;
	and.b64  	%rd12388, %rd12387, %rd12290;
	or.b64  	%rd12389, %rd12388, %rd12386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8788,%dummy}, %rd13931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8789}, %rd13931;
	}
	shf.r.wrap.b32 	%r8790, %r8789, %r8788, 28;
	shf.r.wrap.b32 	%r8791, %r8788, %r8789, 28;
	mov.b64 	%rd12390, {%r8791, %r8790};
	shf.l.wrap.b32 	%r8792, %r8788, %r8789, 30;
	shf.l.wrap.b32 	%r8793, %r8789, %r8788, 30;
	mov.b64 	%rd12391, {%r8793, %r8792};
	xor.b64  	%rd12392, %rd12390, %rd12391;
	shf.l.wrap.b32 	%r8794, %r8788, %r8789, 25;
	shf.l.wrap.b32 	%r8795, %r8789, %r8788, 25;
	mov.b64 	%rd12393, {%r8795, %r8794};
	xor.b64  	%rd12394, %rd12392, %rd12393;
	add.s64 	%rd12395, %rd12394, %rd12389;
	add.s64 	%rd13930, %rd12395, %rd12385;
	add.s64 	%rd12396, %rd13920, %rd13913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8796,%dummy}, %rd13915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8797}, %rd13915;
	}
	shf.r.wrap.b32 	%r8798, %r8797, %r8796, 19;
	shf.r.wrap.b32 	%r8799, %r8796, %r8797, 19;
	mov.b64 	%rd12397, {%r8799, %r8798};
	shf.l.wrap.b32 	%r8800, %r8796, %r8797, 3;
	shf.l.wrap.b32 	%r8801, %r8797, %r8796, 3;
	mov.b64 	%rd12398, {%r8801, %r8800};
	xor.b64  	%rd12399, %rd12397, %rd12398;
	shr.u64 	%rd12400, %rd13915, 6;
	xor.b64  	%rd12401, %rd12399, %rd12400;
	add.s64 	%rd12402, %rd12396, %rd12401;
	shf.r.wrap.b32 	%r8802, %r8437, %r8436, 1;
	shf.r.wrap.b32 	%r8803, %r8436, %r8437, 1;
	mov.b64 	%rd12403, {%r8803, %r8802};
	shf.r.wrap.b32 	%r8804, %r8437, %r8436, 8;
	shf.r.wrap.b32 	%r8805, %r8436, %r8437, 8;
	mov.b64 	%rd12404, {%r8805, %r8804};
	xor.b64  	%rd12405, %rd12403, %rd12404;
	shr.u64 	%rd12406, %rd13928, 7;
	xor.b64  	%rd12407, %rd12405, %rd12406;
	add.s64 	%rd13913, %rd12402, %rd12407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8806,%dummy}, %rd13934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8807}, %rd13934;
	}
	shf.r.wrap.b32 	%r8808, %r8807, %r8806, 14;
	shf.r.wrap.b32 	%r8809, %r8806, %r8807, 14;
	mov.b64 	%rd12408, {%r8809, %r8808};
	shf.r.wrap.b32 	%r8810, %r8807, %r8806, 18;
	shf.r.wrap.b32 	%r8811, %r8806, %r8807, 18;
	mov.b64 	%rd12409, {%r8811, %r8810};
	xor.b64  	%rd12410, %rd12408, %rd12409;
	shf.l.wrap.b32 	%r8812, %r8806, %r8807, 23;
	shf.l.wrap.b32 	%r8813, %r8807, %r8806, 23;
	mov.b64 	%rd12411, {%r8813, %r8812};
	xor.b64  	%rd12412, %rd12410, %rd12411;
	xor.b64  	%rd12413, %rd13935, %rd13936;
	and.b64  	%rd12414, %rd13934, %rd12413;
	xor.b64  	%rd12415, %rd12414, %rd13936;
	add.s64 	%rd12416, %rd12415, %rd12279;
	add.s64 	%rd12417, %rd12416, %rd12412;
	ld.const.u64 	%rd12418, [%rd11858+120];
	add.s64 	%rd12419, %rd12417, %rd12418;
	add.s64 	%rd12420, %rd12419, %rd13913;
	add.s64 	%rd13933, %rd12420, %rd12290;
	and.b64  	%rd12421, %rd13930, %rd13931;
	or.b64  	%rd12422, %rd13930, %rd13931;
	and.b64  	%rd12423, %rd12422, %rd13932;
	or.b64  	%rd12424, %rd12423, %rd12421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8814,%dummy}, %rd13930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8815}, %rd13930;
	}
	shf.r.wrap.b32 	%r8816, %r8815, %r8814, 28;
	shf.r.wrap.b32 	%r8817, %r8814, %r8815, 28;
	mov.b64 	%rd12425, {%r8817, %r8816};
	shf.l.wrap.b32 	%r8818, %r8814, %r8815, 30;
	shf.l.wrap.b32 	%r8819, %r8815, %r8814, 30;
	mov.b64 	%rd12426, {%r8819, %r8818};
	xor.b64  	%rd12427, %rd12425, %rd12426;
	shf.l.wrap.b32 	%r8820, %r8814, %r8815, 25;
	shf.l.wrap.b32 	%r8821, %r8815, %r8814, 25;
	mov.b64 	%rd12428, {%r8821, %r8820};
	xor.b64  	%rd12429, %rd12427, %rd12428;
	add.s64 	%rd12430, %rd12429, %rd12424;
	add.s64 	%rd13929, %rd12430, %rd12420;
	add.s32 	%r9760, %r9760, 16;
	setp.lt.u32 	%p111, %r9760, 80;
	@%p111 bra 	$L__BB0_154;

	setp.lt.u32 	%p112, %r9759, 128;
	add.s64 	%rd13912, %rd13912, %rd13929;
	mov.u64 	%rd13938, 0;
	st.local.u64 	[%rd2+-72], %rd13912;
	add.s64 	%rd13911, %rd13911, %rd13930;
	st.local.u64 	[%rd2+-64], %rd13911;
	add.s64 	%rd13910, %rd13910, %rd13931;
	st.local.u64 	[%rd2+-56], %rd13910;
	add.s64 	%rd13909, %rd13909, %rd13932;
	st.local.u64 	[%rd2+-48], %rd13909;
	add.s64 	%rd13908, %rd13908, %rd13933;
	st.local.u64 	[%rd2+-40], %rd13908;
	add.s64 	%rd13907, %rd13907, %rd13934;
	st.local.u64 	[%rd2+-32], %rd13907;
	add.s64 	%rd13906, %rd13906, %rd13935;
	st.local.u64 	[%rd2+-24], %rd13906;
	add.s64 	%rd13905, %rd13905, %rd13936;
	st.local.u64 	[%rd2+-16], %rd13905;
	st.local.u64 	[%rd2], %rd13938;
	st.local.u64 	[%rd2+8], %rd13938;
	st.local.u64 	[%rd2+16], %rd13938;
	st.local.u64 	[%rd2+24], %rd13938;
	st.local.u64 	[%rd2+32], %rd13938;
	st.local.u64 	[%rd2+40], %rd13938;
	st.local.u64 	[%rd2+48], %rd13938;
	st.local.u64 	[%rd2+56], %rd13938;
	st.local.u64 	[%rd2+64], %rd13938;
	st.local.u64 	[%rd2+72], %rd13938;
	st.local.u64 	[%rd2+80], %rd13938;
	st.local.u64 	[%rd2+88], %rd13938;
	st.local.u64 	[%rd2+96], %rd13938;
	st.local.u64 	[%rd2+104], %rd13938;
	st.local.u64 	[%rd2+112], %rd13938;
	st.local.u64 	[%rd2+120], %rd13938;
	mov.u32 	%r8822, 0;
	st.local.u32 	[%rd2+-4], %r8822;
	mov.u64 	%rd13952, %rd13938;
	@%p112 bra 	$L__BB0_157;

	mov.u64 	%rd13952, 128;
	st.local.u64 	[%rd2], %rd13952;

$L__BB0_157:
	shl.b32 	%r8823, %r9751, 3;
	cvt.u64.u32 	%rd12447, %r9751;
	shl.b64 	%rd12448, %rd12447, 59;
	shl.b64 	%rd12449, %rd12447, 43;
	and.b64  	%rd12450, %rd12449, 71776119061217280;
	or.b64  	%rd12451, %rd12450, %rd12448;
	cvt.u64.u32 	%rd12452, %r8823;
	shl.b64 	%rd12453, %rd12452, 24;
	and.b64  	%rd12454, %rd12453, 280375465082880;
	or.b64  	%rd12455, %rd12451, %rd12454;
	shl.b64 	%rd12456, %rd12452, 8;
	and.b64  	%rd12457, %rd12456, 1095216660480;
	or.b64  	%rd12458, %rd12455, %rd12457;
	st.local.u64 	[%rd2+120], %rd12458;
	mov.u64 	%rd13939, %rd13938;
	mov.u64 	%rd13940, %rd13938;
	mov.u64 	%rd13941, %rd13938;
	mov.u64 	%rd13942, %rd13938;
	mov.u64 	%rd13943, %rd13938;
	mov.u64 	%rd13944, %rd13938;
	mov.u64 	%rd13945, %rd13938;
	mov.u64 	%rd13946, %rd13938;
	mov.u64 	%rd13947, %rd13938;
	mov.u64 	%rd13948, %rd13938;
	mov.u64 	%rd13949, %rd13938;
	mov.u64 	%rd13950, %rd13938;
	mov.u64 	%rd13951, %rd13938;

$L__BB0_159:
	shl.b32 	%r8829, %r9751, 3;
	cvt.u64.u32 	%rd13961, %r8829;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8830, %temp}, %rd13952;
	}
	mov.u32 	%r8831, 291;
	mov.u32 	%r8832, 0;
	prmt.b32 	%r8833, %r8830, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8834}, %rd13952;
	}
	prmt.b32 	%r8835, %r8834, %r8832, %r8831;
	mov.b64 	%rd13976, {%r8835, %r8833};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8836, %temp}, %rd13951;
	}
	prmt.b32 	%r8837, %r8836, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8838}, %rd13951;
	}
	prmt.b32 	%r8839, %r8838, %r8832, %r8831;
	mov.b64 	%rd13975, {%r8839, %r8837};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8840, %temp}, %rd13950;
	}
	prmt.b32 	%r8841, %r8840, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8842}, %rd13950;
	}
	prmt.b32 	%r8843, %r8842, %r8832, %r8831;
	mov.b64 	%rd13974, {%r8843, %r8841};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8844, %temp}, %rd13949;
	}
	prmt.b32 	%r8845, %r8844, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8846}, %rd13949;
	}
	prmt.b32 	%r8847, %r8846, %r8832, %r8831;
	mov.b64 	%rd13973, {%r8847, %r8845};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8848, %temp}, %rd13948;
	}
	prmt.b32 	%r8849, %r8848, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8850}, %rd13948;
	}
	prmt.b32 	%r8851, %r8850, %r8832, %r8831;
	mov.b64 	%rd13972, {%r8851, %r8849};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8852, %temp}, %rd13947;
	}
	prmt.b32 	%r8853, %r8852, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8854}, %rd13947;
	}
	prmt.b32 	%r8855, %r8854, %r8832, %r8831;
	mov.b64 	%rd13971, {%r8855, %r8853};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8856, %temp}, %rd13946;
	}
	prmt.b32 	%r8857, %r8856, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8858}, %rd13946;
	}
	prmt.b32 	%r8859, %r8858, %r8832, %r8831;
	mov.b64 	%rd13970, {%r8859, %r8857};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8860, %temp}, %rd13945;
	}
	prmt.b32 	%r8861, %r8860, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8862}, %rd13945;
	}
	prmt.b32 	%r8863, %r8862, %r8832, %r8831;
	mov.b64 	%rd13969, {%r8863, %r8861};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8864, %temp}, %rd13944;
	}
	prmt.b32 	%r8865, %r8864, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8866}, %rd13944;
	}
	prmt.b32 	%r8867, %r8866, %r8832, %r8831;
	mov.b64 	%rd13968, {%r8867, %r8865};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8868, %temp}, %rd13943;
	}
	prmt.b32 	%r8869, %r8868, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8870}, %rd13943;
	}
	prmt.b32 	%r8871, %r8870, %r8832, %r8831;
	mov.b64 	%rd13967, {%r8871, %r8869};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8872, %temp}, %rd13942;
	}
	prmt.b32 	%r8873, %r8872, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8874}, %rd13942;
	}
	prmt.b32 	%r8875, %r8874, %r8832, %r8831;
	mov.b64 	%rd13966, {%r8875, %r8873};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8876, %temp}, %rd13941;
	}
	prmt.b32 	%r8877, %r8876, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8878}, %rd13941;
	}
	prmt.b32 	%r8879, %r8878, %r8832, %r8831;
	mov.b64 	%rd13965, {%r8879, %r8877};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8880, %temp}, %rd13940;
	}
	prmt.b32 	%r8881, %r8880, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8882}, %rd13940;
	}
	prmt.b32 	%r8883, %r8882, %r8832, %r8831;
	mov.b64 	%rd13964, {%r8883, %r8881};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8884, %temp}, %rd13939;
	}
	prmt.b32 	%r8885, %r8884, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8886}, %rd13939;
	}
	prmt.b32 	%r8887, %r8886, %r8832, %r8831;
	mov.b64 	%rd13963, {%r8887, %r8885};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8888, %temp}, %rd13938;
	}
	prmt.b32 	%r8889, %r8888, %r8832, %r8831;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8890}, %rd13938;
	}
	prmt.b32 	%r8891, %r8890, %r8832, %r8831;
	mov.b64 	%rd13962, {%r8891, %r8889};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8892,%dummy}, %rd13908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8893}, %rd13908;
	}
	shf.r.wrap.b32 	%r8894, %r8893, %r8892, 18;
	shf.r.wrap.b32 	%r8895, %r8892, %r8893, 18;
	mov.b64 	%rd12475, {%r8895, %r8894};
	shf.r.wrap.b32 	%r8896, %r8893, %r8892, 14;
	shf.r.wrap.b32 	%r8897, %r8892, %r8893, 14;
	mov.b64 	%rd12476, {%r8897, %r8896};
	xor.b64  	%rd12477, %rd12476, %rd12475;
	shf.l.wrap.b32 	%r8898, %r8892, %r8893, 23;
	shf.l.wrap.b32 	%r8899, %r8893, %r8892, 23;
	mov.b64 	%rd12478, {%r8899, %r8898};
	xor.b64  	%rd12479, %rd12477, %rd12478;
	xor.b64  	%rd12480, %rd13907, %rd13906;
	and.b64  	%rd12481, %rd13908, %rd12480;
	xor.b64  	%rd12482, %rd12481, %rd13906;
	add.s64 	%rd12483, %rd12482, %rd13905;
	add.s64 	%rd12484, %rd12483, %rd12479;
	add.s64 	%rd12485, %rd12484, %rd13976;
	add.s64 	%rd12486, %rd12485, 4794697086780616226;
	add.s64 	%rd12487, %rd12486, %rd13909;
	or.b64  	%rd12488, %rd13912, %rd13911;
	and.b64  	%rd12489, %rd12488, %rd13910;
	and.b64  	%rd12490, %rd13912, %rd13911;
	or.b64  	%rd12491, %rd12489, %rd12490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8900}, %rd13912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8901,%dummy}, %rd13912;
	}
	shf.l.wrap.b32 	%r8902, %r8901, %r8900, 30;
	shf.l.wrap.b32 	%r8903, %r8900, %r8901, 30;
	mov.b64 	%rd12492, {%r8903, %r8902};
	shf.r.wrap.b32 	%r8904, %r8900, %r8901, 28;
	shf.r.wrap.b32 	%r8905, %r8901, %r8900, 28;
	mov.b64 	%rd12493, {%r8905, %r8904};
	xor.b64  	%rd12494, %rd12493, %rd12492;
	shf.l.wrap.b32 	%r8906, %r8901, %r8900, 25;
	shf.l.wrap.b32 	%r8907, %r8900, %r8901, 25;
	mov.b64 	%rd12495, {%r8907, %r8906};
	xor.b64  	%rd12496, %rd12494, %rd12495;
	add.s64 	%rd12497, %rd12496, %rd12491;
	add.s64 	%rd12498, %rd12497, %rd12486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8908,%dummy}, %rd12487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8909}, %rd12487;
	}
	shf.r.wrap.b32 	%r8910, %r8909, %r8908, 14;
	shf.r.wrap.b32 	%r8911, %r8908, %r8909, 14;
	mov.b64 	%rd12499, {%r8911, %r8910};
	shf.r.wrap.b32 	%r8912, %r8909, %r8908, 18;
	shf.r.wrap.b32 	%r8913, %r8908, %r8909, 18;
	mov.b64 	%rd12500, {%r8913, %r8912};
	xor.b64  	%rd12501, %rd12499, %rd12500;
	shf.l.wrap.b32 	%r8914, %r8908, %r8909, 23;
	shf.l.wrap.b32 	%r8915, %r8909, %r8908, 23;
	mov.b64 	%rd12502, {%r8915, %r8914};
	xor.b64  	%rd12503, %rd12501, %rd12502;
	xor.b64  	%rd12504, %rd13908, %rd13907;
	and.b64  	%rd12505, %rd12487, %rd12504;
	xor.b64  	%rd12506, %rd12505, %rd13907;
	add.s64 	%rd12507, %rd12506, %rd13906;
	add.s64 	%rd12508, %rd12507, %rd12503;
	add.s64 	%rd12509, %rd12508, %rd13975;
	add.s64 	%rd12510, %rd12509, 8158064640168781261;
	add.s64 	%rd12511, %rd12510, %rd13910;
	and.b64  	%rd12512, %rd12498, %rd13912;
	or.b64  	%rd12513, %rd12498, %rd13912;
	and.b64  	%rd12514, %rd12513, %rd13911;
	or.b64  	%rd12515, %rd12514, %rd12512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8916,%dummy}, %rd12498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8917}, %rd12498;
	}
	shf.r.wrap.b32 	%r8918, %r8917, %r8916, 28;
	shf.r.wrap.b32 	%r8919, %r8916, %r8917, 28;
	mov.b64 	%rd12516, {%r8919, %r8918};
	shf.l.wrap.b32 	%r8920, %r8916, %r8917, 30;
	shf.l.wrap.b32 	%r8921, %r8917, %r8916, 30;
	mov.b64 	%rd12517, {%r8921, %r8920};
	xor.b64  	%rd12518, %rd12516, %rd12517;
	shf.l.wrap.b32 	%r8922, %r8916, %r8917, 25;
	shf.l.wrap.b32 	%r8923, %r8917, %r8916, 25;
	mov.b64 	%rd12519, {%r8923, %r8922};
	xor.b64  	%rd12520, %rd12518, %rd12519;
	add.s64 	%rd12521, %rd12520, %rd12515;
	add.s64 	%rd12522, %rd12521, %rd12510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8924,%dummy}, %rd12511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8925}, %rd12511;
	}
	shf.r.wrap.b32 	%r8926, %r8925, %r8924, 14;
	shf.r.wrap.b32 	%r8927, %r8924, %r8925, 14;
	mov.b64 	%rd12523, {%r8927, %r8926};
	shf.r.wrap.b32 	%r8928, %r8925, %r8924, 18;
	shf.r.wrap.b32 	%r8929, %r8924, %r8925, 18;
	mov.b64 	%rd12524, {%r8929, %r8928};
	xor.b64  	%rd12525, %rd12523, %rd12524;
	shf.l.wrap.b32 	%r8930, %r8924, %r8925, 23;
	shf.l.wrap.b32 	%r8931, %r8925, %r8924, 23;
	mov.b64 	%rd12526, {%r8931, %r8930};
	xor.b64  	%rd12527, %rd12525, %rd12526;
	xor.b64  	%rd12528, %rd12487, %rd13908;
	and.b64  	%rd12529, %rd12511, %rd12528;
	xor.b64  	%rd12530, %rd12529, %rd13908;
	add.s64 	%rd12531, %rd12530, %rd13907;
	add.s64 	%rd12532, %rd12531, %rd12527;
	add.s64 	%rd12533, %rd12532, %rd13974;
	add.s64 	%rd12534, %rd12533, -5349999486874862801;
	add.s64 	%rd12535, %rd12534, %rd13911;
	and.b64  	%rd12536, %rd12522, %rd12498;
	or.b64  	%rd12537, %rd12522, %rd12498;
	and.b64  	%rd12538, %rd12537, %rd13912;
	or.b64  	%rd12539, %rd12538, %rd12536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8932,%dummy}, %rd12522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8933}, %rd12522;
	}
	shf.r.wrap.b32 	%r8934, %r8933, %r8932, 28;
	shf.r.wrap.b32 	%r8935, %r8932, %r8933, 28;
	mov.b64 	%rd12540, {%r8935, %r8934};
	shf.l.wrap.b32 	%r8936, %r8932, %r8933, 30;
	shf.l.wrap.b32 	%r8937, %r8933, %r8932, 30;
	mov.b64 	%rd12541, {%r8937, %r8936};
	xor.b64  	%rd12542, %rd12540, %rd12541;
	shf.l.wrap.b32 	%r8938, %r8932, %r8933, 25;
	shf.l.wrap.b32 	%r8939, %r8933, %r8932, 25;
	mov.b64 	%rd12543, {%r8939, %r8938};
	xor.b64  	%rd12544, %rd12542, %rd12543;
	add.s64 	%rd12545, %rd12544, %rd12539;
	add.s64 	%rd12546, %rd12545, %rd12534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8940,%dummy}, %rd12535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8941}, %rd12535;
	}
	shf.r.wrap.b32 	%r8942, %r8941, %r8940, 14;
	shf.r.wrap.b32 	%r8943, %r8940, %r8941, 14;
	mov.b64 	%rd12547, {%r8943, %r8942};
	shf.r.wrap.b32 	%r8944, %r8941, %r8940, 18;
	shf.r.wrap.b32 	%r8945, %r8940, %r8941, 18;
	mov.b64 	%rd12548, {%r8945, %r8944};
	xor.b64  	%rd12549, %rd12547, %rd12548;
	shf.l.wrap.b32 	%r8946, %r8940, %r8941, 23;
	shf.l.wrap.b32 	%r8947, %r8941, %r8940, 23;
	mov.b64 	%rd12550, {%r8947, %r8946};
	xor.b64  	%rd12551, %rd12549, %rd12550;
	xor.b64  	%rd12552, %rd12511, %rd12487;
	and.b64  	%rd12553, %rd12535, %rd12552;
	xor.b64  	%rd12554, %rd12553, %rd12487;
	add.s64 	%rd12555, %rd12554, %rd13908;
	add.s64 	%rd12556, %rd12555, %rd12551;
	add.s64 	%rd12557, %rd12556, %rd13973;
	add.s64 	%rd12558, %rd12557, -1606136188198331460;
	add.s64 	%rd12559, %rd12558, %rd13912;
	and.b64  	%rd12560, %rd12546, %rd12522;
	or.b64  	%rd12561, %rd12546, %rd12522;
	and.b64  	%rd12562, %rd12561, %rd12498;
	or.b64  	%rd12563, %rd12562, %rd12560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8948,%dummy}, %rd12546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8949}, %rd12546;
	}
	shf.r.wrap.b32 	%r8950, %r8949, %r8948, 28;
	shf.r.wrap.b32 	%r8951, %r8948, %r8949, 28;
	mov.b64 	%rd12564, {%r8951, %r8950};
	shf.l.wrap.b32 	%r8952, %r8948, %r8949, 30;
	shf.l.wrap.b32 	%r8953, %r8949, %r8948, 30;
	mov.b64 	%rd12565, {%r8953, %r8952};
	xor.b64  	%rd12566, %rd12564, %rd12565;
	shf.l.wrap.b32 	%r8954, %r8948, %r8949, 25;
	shf.l.wrap.b32 	%r8955, %r8949, %r8948, 25;
	mov.b64 	%rd12567, {%r8955, %r8954};
	xor.b64  	%rd12568, %rd12566, %rd12567;
	add.s64 	%rd12569, %rd12568, %rd12563;
	add.s64 	%rd12570, %rd12569, %rd12558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8956,%dummy}, %rd12559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8957}, %rd12559;
	}
	shf.r.wrap.b32 	%r8958, %r8957, %r8956, 14;
	shf.r.wrap.b32 	%r8959, %r8956, %r8957, 14;
	mov.b64 	%rd12571, {%r8959, %r8958};
	shf.r.wrap.b32 	%r8960, %r8957, %r8956, 18;
	shf.r.wrap.b32 	%r8961, %r8956, %r8957, 18;
	mov.b64 	%rd12572, {%r8961, %r8960};
	xor.b64  	%rd12573, %rd12571, %rd12572;
	shf.l.wrap.b32 	%r8962, %r8956, %r8957, 23;
	shf.l.wrap.b32 	%r8963, %r8957, %r8956, 23;
	mov.b64 	%rd12574, {%r8963, %r8962};
	xor.b64  	%rd12575, %rd12573, %rd12574;
	xor.b64  	%rd12576, %rd12535, %rd12511;
	and.b64  	%rd12577, %rd12559, %rd12576;
	xor.b64  	%rd12578, %rd12577, %rd12511;
	add.s64 	%rd12579, %rd12578, %rd12487;
	add.s64 	%rd12580, %rd12579, %rd12575;
	add.s64 	%rd12581, %rd12580, %rd13972;
	add.s64 	%rd12582, %rd12581, 4131703408338449720;
	add.s64 	%rd12583, %rd12582, %rd12498;
	and.b64  	%rd12584, %rd12570, %rd12546;
	or.b64  	%rd12585, %rd12570, %rd12546;
	and.b64  	%rd12586, %rd12585, %rd12522;
	or.b64  	%rd12587, %rd12586, %rd12584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8964,%dummy}, %rd12570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8965}, %rd12570;
	}
	shf.r.wrap.b32 	%r8966, %r8965, %r8964, 28;
	shf.r.wrap.b32 	%r8967, %r8964, %r8965, 28;
	mov.b64 	%rd12588, {%r8967, %r8966};
	shf.l.wrap.b32 	%r8968, %r8964, %r8965, 30;
	shf.l.wrap.b32 	%r8969, %r8965, %r8964, 30;
	mov.b64 	%rd12589, {%r8969, %r8968};
	xor.b64  	%rd12590, %rd12588, %rd12589;
	shf.l.wrap.b32 	%r8970, %r8964, %r8965, 25;
	shf.l.wrap.b32 	%r8971, %r8965, %r8964, 25;
	mov.b64 	%rd12591, {%r8971, %r8970};
	xor.b64  	%rd12592, %rd12590, %rd12591;
	add.s64 	%rd12593, %rd12592, %rd12587;
	add.s64 	%rd12594, %rd12593, %rd12582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8972,%dummy}, %rd12583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8973}, %rd12583;
	}
	shf.r.wrap.b32 	%r8974, %r8973, %r8972, 14;
	shf.r.wrap.b32 	%r8975, %r8972, %r8973, 14;
	mov.b64 	%rd12595, {%r8975, %r8974};
	shf.r.wrap.b32 	%r8976, %r8973, %r8972, 18;
	shf.r.wrap.b32 	%r8977, %r8972, %r8973, 18;
	mov.b64 	%rd12596, {%r8977, %r8976};
	xor.b64  	%rd12597, %rd12595, %rd12596;
	shf.l.wrap.b32 	%r8978, %r8972, %r8973, 23;
	shf.l.wrap.b32 	%r8979, %r8973, %r8972, 23;
	mov.b64 	%rd12598, {%r8979, %r8978};
	xor.b64  	%rd12599, %rd12597, %rd12598;
	xor.b64  	%rd12600, %rd12559, %rd12535;
	and.b64  	%rd12601, %rd12583, %rd12600;
	xor.b64  	%rd12602, %rd12601, %rd12535;
	add.s64 	%rd12603, %rd12602, %rd12511;
	add.s64 	%rd12604, %rd12603, %rd12599;
	add.s64 	%rd12605, %rd12604, %rd13971;
	add.s64 	%rd12606, %rd12605, 6480981068601479193;
	add.s64 	%rd12607, %rd12606, %rd12522;
	and.b64  	%rd12608, %rd12594, %rd12570;
	or.b64  	%rd12609, %rd12594, %rd12570;
	and.b64  	%rd12610, %rd12609, %rd12546;
	or.b64  	%rd12611, %rd12610, %rd12608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8980,%dummy}, %rd12594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8981}, %rd12594;
	}
	shf.r.wrap.b32 	%r8982, %r8981, %r8980, 28;
	shf.r.wrap.b32 	%r8983, %r8980, %r8981, 28;
	mov.b64 	%rd12612, {%r8983, %r8982};
	shf.l.wrap.b32 	%r8984, %r8980, %r8981, 30;
	shf.l.wrap.b32 	%r8985, %r8981, %r8980, 30;
	mov.b64 	%rd12613, {%r8985, %r8984};
	xor.b64  	%rd12614, %rd12612, %rd12613;
	shf.l.wrap.b32 	%r8986, %r8980, %r8981, 25;
	shf.l.wrap.b32 	%r8987, %r8981, %r8980, 25;
	mov.b64 	%rd12615, {%r8987, %r8986};
	xor.b64  	%rd12616, %rd12614, %rd12615;
	add.s64 	%rd12617, %rd12616, %rd12611;
	add.s64 	%rd12618, %rd12617, %rd12606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8988,%dummy}, %rd12607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8989}, %rd12607;
	}
	shf.r.wrap.b32 	%r8990, %r8989, %r8988, 14;
	shf.r.wrap.b32 	%r8991, %r8988, %r8989, 14;
	mov.b64 	%rd12619, {%r8991, %r8990};
	shf.r.wrap.b32 	%r8992, %r8989, %r8988, 18;
	shf.r.wrap.b32 	%r8993, %r8988, %r8989, 18;
	mov.b64 	%rd12620, {%r8993, %r8992};
	xor.b64  	%rd12621, %rd12619, %rd12620;
	shf.l.wrap.b32 	%r8994, %r8988, %r8989, 23;
	shf.l.wrap.b32 	%r8995, %r8989, %r8988, 23;
	mov.b64 	%rd12622, {%r8995, %r8994};
	xor.b64  	%rd12623, %rd12621, %rd12622;
	xor.b64  	%rd12624, %rd12583, %rd12559;
	and.b64  	%rd12625, %rd12607, %rd12624;
	xor.b64  	%rd12626, %rd12625, %rd12559;
	add.s64 	%rd12627, %rd12626, %rd12535;
	add.s64 	%rd12628, %rd12627, %rd12623;
	add.s64 	%rd12629, %rd12628, %rd13970;
	add.s64 	%rd12630, %rd12629, -7908458776815382629;
	add.s64 	%rd12631, %rd12630, %rd12546;
	and.b64  	%rd12632, %rd12618, %rd12594;
	or.b64  	%rd12633, %rd12618, %rd12594;
	and.b64  	%rd12634, %rd12633, %rd12570;
	or.b64  	%rd12635, %rd12634, %rd12632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8996,%dummy}, %rd12618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8997}, %rd12618;
	}
	shf.r.wrap.b32 	%r8998, %r8997, %r8996, 28;
	shf.r.wrap.b32 	%r8999, %r8996, %r8997, 28;
	mov.b64 	%rd12636, {%r8999, %r8998};
	shf.l.wrap.b32 	%r9000, %r8996, %r8997, 30;
	shf.l.wrap.b32 	%r9001, %r8997, %r8996, 30;
	mov.b64 	%rd12637, {%r9001, %r9000};
	xor.b64  	%rd12638, %rd12636, %rd12637;
	shf.l.wrap.b32 	%r9002, %r8996, %r8997, 25;
	shf.l.wrap.b32 	%r9003, %r8997, %r8996, 25;
	mov.b64 	%rd12639, {%r9003, %r9002};
	xor.b64  	%rd12640, %rd12638, %rd12639;
	add.s64 	%rd12641, %rd12640, %rd12635;
	add.s64 	%rd12642, %rd12641, %rd12630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9004,%dummy}, %rd12631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9005}, %rd12631;
	}
	shf.r.wrap.b32 	%r9006, %r9005, %r9004, 14;
	shf.r.wrap.b32 	%r9007, %r9004, %r9005, 14;
	mov.b64 	%rd12643, {%r9007, %r9006};
	shf.r.wrap.b32 	%r9008, %r9005, %r9004, 18;
	shf.r.wrap.b32 	%r9009, %r9004, %r9005, 18;
	mov.b64 	%rd12644, {%r9009, %r9008};
	xor.b64  	%rd12645, %rd12643, %rd12644;
	shf.l.wrap.b32 	%r9010, %r9004, %r9005, 23;
	shf.l.wrap.b32 	%r9011, %r9005, %r9004, 23;
	mov.b64 	%rd12646, {%r9011, %r9010};
	xor.b64  	%rd12647, %rd12645, %rd12646;
	xor.b64  	%rd12648, %rd12607, %rd12583;
	and.b64  	%rd12649, %rd12631, %rd12648;
	xor.b64  	%rd12650, %rd12649, %rd12583;
	add.s64 	%rd12651, %rd12650, %rd12559;
	add.s64 	%rd12652, %rd12651, %rd12647;
	add.s64 	%rd12653, %rd12652, %rd13969;
	add.s64 	%rd12654, %rd12653, -6116909921290321640;
	add.s64 	%rd12655, %rd12654, %rd12570;
	and.b64  	%rd12656, %rd12642, %rd12618;
	or.b64  	%rd12657, %rd12642, %rd12618;
	and.b64  	%rd12658, %rd12657, %rd12594;
	or.b64  	%rd12659, %rd12658, %rd12656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9012,%dummy}, %rd12642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9013}, %rd12642;
	}
	shf.r.wrap.b32 	%r9014, %r9013, %r9012, 28;
	shf.r.wrap.b32 	%r9015, %r9012, %r9013, 28;
	mov.b64 	%rd12660, {%r9015, %r9014};
	shf.l.wrap.b32 	%r9016, %r9012, %r9013, 30;
	shf.l.wrap.b32 	%r9017, %r9013, %r9012, 30;
	mov.b64 	%rd12661, {%r9017, %r9016};
	xor.b64  	%rd12662, %rd12660, %rd12661;
	shf.l.wrap.b32 	%r9018, %r9012, %r9013, 25;
	shf.l.wrap.b32 	%r9019, %r9013, %r9012, 25;
	mov.b64 	%rd12663, {%r9019, %r9018};
	xor.b64  	%rd12664, %rd12662, %rd12663;
	add.s64 	%rd12665, %rd12664, %rd12659;
	add.s64 	%rd12666, %rd12665, %rd12654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9020,%dummy}, %rd12655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9021}, %rd12655;
	}
	shf.r.wrap.b32 	%r9022, %r9021, %r9020, 14;
	shf.r.wrap.b32 	%r9023, %r9020, %r9021, 14;
	mov.b64 	%rd12667, {%r9023, %r9022};
	shf.r.wrap.b32 	%r9024, %r9021, %r9020, 18;
	shf.r.wrap.b32 	%r9025, %r9020, %r9021, 18;
	mov.b64 	%rd12668, {%r9025, %r9024};
	xor.b64  	%rd12669, %rd12667, %rd12668;
	shf.l.wrap.b32 	%r9026, %r9020, %r9021, 23;
	shf.l.wrap.b32 	%r9027, %r9021, %r9020, 23;
	mov.b64 	%rd12670, {%r9027, %r9026};
	xor.b64  	%rd12671, %rd12669, %rd12670;
	xor.b64  	%rd12672, %rd12631, %rd12607;
	and.b64  	%rd12673, %rd12655, %rd12672;
	xor.b64  	%rd12674, %rd12673, %rd12607;
	add.s64 	%rd12675, %rd12674, %rd12583;
	add.s64 	%rd12676, %rd12675, %rd12671;
	add.s64 	%rd12677, %rd12676, %rd13968;
	add.s64 	%rd12678, %rd12677, -2880145864133508542;
	add.s64 	%rd12679, %rd12678, %rd12594;
	and.b64  	%rd12680, %rd12666, %rd12642;
	or.b64  	%rd12681, %rd12666, %rd12642;
	and.b64  	%rd12682, %rd12681, %rd12618;
	or.b64  	%rd12683, %rd12682, %rd12680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9028,%dummy}, %rd12666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9029}, %rd12666;
	}
	shf.r.wrap.b32 	%r9030, %r9029, %r9028, 28;
	shf.r.wrap.b32 	%r9031, %r9028, %r9029, 28;
	mov.b64 	%rd12684, {%r9031, %r9030};
	shf.l.wrap.b32 	%r9032, %r9028, %r9029, 30;
	shf.l.wrap.b32 	%r9033, %r9029, %r9028, 30;
	mov.b64 	%rd12685, {%r9033, %r9032};
	xor.b64  	%rd12686, %rd12684, %rd12685;
	shf.l.wrap.b32 	%r9034, %r9028, %r9029, 25;
	shf.l.wrap.b32 	%r9035, %r9029, %r9028, 25;
	mov.b64 	%rd12687, {%r9035, %r9034};
	xor.b64  	%rd12688, %rd12686, %rd12687;
	add.s64 	%rd12689, %rd12688, %rd12683;
	add.s64 	%rd12690, %rd12689, %rd12678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9036,%dummy}, %rd12679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9037}, %rd12679;
	}
	shf.r.wrap.b32 	%r9038, %r9037, %r9036, 14;
	shf.r.wrap.b32 	%r9039, %r9036, %r9037, 14;
	mov.b64 	%rd12691, {%r9039, %r9038};
	shf.r.wrap.b32 	%r9040, %r9037, %r9036, 18;
	shf.r.wrap.b32 	%r9041, %r9036, %r9037, 18;
	mov.b64 	%rd12692, {%r9041, %r9040};
	xor.b64  	%rd12693, %rd12691, %rd12692;
	shf.l.wrap.b32 	%r9042, %r9036, %r9037, 23;
	shf.l.wrap.b32 	%r9043, %r9037, %r9036, 23;
	mov.b64 	%rd12694, {%r9043, %r9042};
	xor.b64  	%rd12695, %rd12693, %rd12694;
	xor.b64  	%rd12696, %rd12655, %rd12631;
	and.b64  	%rd12697, %rd12679, %rd12696;
	xor.b64  	%rd12698, %rd12697, %rd12631;
	add.s64 	%rd12699, %rd12698, %rd12607;
	add.s64 	%rd12700, %rd12699, %rd12695;
	add.s64 	%rd12701, %rd12700, %rd13967;
	add.s64 	%rd12702, %rd12701, 1334009975649890238;
	add.s64 	%rd12703, %rd12702, %rd12618;
	and.b64  	%rd12704, %rd12690, %rd12666;
	or.b64  	%rd12705, %rd12690, %rd12666;
	and.b64  	%rd12706, %rd12705, %rd12642;
	or.b64  	%rd12707, %rd12706, %rd12704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9044,%dummy}, %rd12690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9045}, %rd12690;
	}
	shf.r.wrap.b32 	%r9046, %r9045, %r9044, 28;
	shf.r.wrap.b32 	%r9047, %r9044, %r9045, 28;
	mov.b64 	%rd12708, {%r9047, %r9046};
	shf.l.wrap.b32 	%r9048, %r9044, %r9045, 30;
	shf.l.wrap.b32 	%r9049, %r9045, %r9044, 30;
	mov.b64 	%rd12709, {%r9049, %r9048};
	xor.b64  	%rd12710, %rd12708, %rd12709;
	shf.l.wrap.b32 	%r9050, %r9044, %r9045, 25;
	shf.l.wrap.b32 	%r9051, %r9045, %r9044, 25;
	mov.b64 	%rd12711, {%r9051, %r9050};
	xor.b64  	%rd12712, %rd12710, %rd12711;
	add.s64 	%rd12713, %rd12712, %rd12707;
	add.s64 	%rd12714, %rd12713, %rd12702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9052,%dummy}, %rd12703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9053}, %rd12703;
	}
	shf.r.wrap.b32 	%r9054, %r9053, %r9052, 14;
	shf.r.wrap.b32 	%r9055, %r9052, %r9053, 14;
	mov.b64 	%rd12715, {%r9055, %r9054};
	shf.r.wrap.b32 	%r9056, %r9053, %r9052, 18;
	shf.r.wrap.b32 	%r9057, %r9052, %r9053, 18;
	mov.b64 	%rd12716, {%r9057, %r9056};
	xor.b64  	%rd12717, %rd12715, %rd12716;
	shf.l.wrap.b32 	%r9058, %r9052, %r9053, 23;
	shf.l.wrap.b32 	%r9059, %r9053, %r9052, 23;
	mov.b64 	%rd12718, {%r9059, %r9058};
	xor.b64  	%rd12719, %rd12717, %rd12718;
	xor.b64  	%rd12720, %rd12679, %rd12655;
	and.b64  	%rd12721, %rd12703, %rd12720;
	xor.b64  	%rd12722, %rd12721, %rd12655;
	add.s64 	%rd12723, %rd12722, %rd12631;
	add.s64 	%rd12724, %rd12723, %rd12719;
	add.s64 	%rd12725, %rd12724, %rd13966;
	add.s64 	%rd12726, %rd12725, 2608012711638119052;
	add.s64 	%rd12727, %rd12726, %rd12642;
	and.b64  	%rd12728, %rd12714, %rd12690;
	or.b64  	%rd12729, %rd12714, %rd12690;
	and.b64  	%rd12730, %rd12729, %rd12666;
	or.b64  	%rd12731, %rd12730, %rd12728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9060,%dummy}, %rd12714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9061}, %rd12714;
	}
	shf.r.wrap.b32 	%r9062, %r9061, %r9060, 28;
	shf.r.wrap.b32 	%r9063, %r9060, %r9061, 28;
	mov.b64 	%rd12732, {%r9063, %r9062};
	shf.l.wrap.b32 	%r9064, %r9060, %r9061, 30;
	shf.l.wrap.b32 	%r9065, %r9061, %r9060, 30;
	mov.b64 	%rd12733, {%r9065, %r9064};
	xor.b64  	%rd12734, %rd12732, %rd12733;
	shf.l.wrap.b32 	%r9066, %r9060, %r9061, 25;
	shf.l.wrap.b32 	%r9067, %r9061, %r9060, 25;
	mov.b64 	%rd12735, {%r9067, %r9066};
	xor.b64  	%rd12736, %rd12734, %rd12735;
	add.s64 	%rd12737, %rd12736, %rd12731;
	add.s64 	%rd12738, %rd12737, %rd12726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9068,%dummy}, %rd12727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9069}, %rd12727;
	}
	shf.r.wrap.b32 	%r9070, %r9069, %r9068, 14;
	shf.r.wrap.b32 	%r9071, %r9068, %r9069, 14;
	mov.b64 	%rd12739, {%r9071, %r9070};
	shf.r.wrap.b32 	%r9072, %r9069, %r9068, 18;
	shf.r.wrap.b32 	%r9073, %r9068, %r9069, 18;
	mov.b64 	%rd12740, {%r9073, %r9072};
	xor.b64  	%rd12741, %rd12739, %rd12740;
	shf.l.wrap.b32 	%r9074, %r9068, %r9069, 23;
	shf.l.wrap.b32 	%r9075, %r9069, %r9068, 23;
	mov.b64 	%rd12742, {%r9075, %r9074};
	xor.b64  	%rd12743, %rd12741, %rd12742;
	xor.b64  	%rd12744, %rd12703, %rd12679;
	and.b64  	%rd12745, %rd12727, %rd12744;
	xor.b64  	%rd12746, %rd12745, %rd12679;
	add.s64 	%rd12747, %rd12746, %rd12655;
	add.s64 	%rd12748, %rd12747, %rd12743;
	add.s64 	%rd12749, %rd12748, %rd13965;
	add.s64 	%rd12750, %rd12749, 6128411473006802146;
	add.s64 	%rd12751, %rd12750, %rd12666;
	and.b64  	%rd12752, %rd12738, %rd12714;
	or.b64  	%rd12753, %rd12738, %rd12714;
	and.b64  	%rd12754, %rd12753, %rd12690;
	or.b64  	%rd12755, %rd12754, %rd12752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9076,%dummy}, %rd12738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9077}, %rd12738;
	}
	shf.r.wrap.b32 	%r9078, %r9077, %r9076, 28;
	shf.r.wrap.b32 	%r9079, %r9076, %r9077, 28;
	mov.b64 	%rd12756, {%r9079, %r9078};
	shf.l.wrap.b32 	%r9080, %r9076, %r9077, 30;
	shf.l.wrap.b32 	%r9081, %r9077, %r9076, 30;
	mov.b64 	%rd12757, {%r9081, %r9080};
	xor.b64  	%rd12758, %rd12756, %rd12757;
	shf.l.wrap.b32 	%r9082, %r9076, %r9077, 25;
	shf.l.wrap.b32 	%r9083, %r9077, %r9076, 25;
	mov.b64 	%rd12759, {%r9083, %r9082};
	xor.b64  	%rd12760, %rd12758, %rd12759;
	add.s64 	%rd12761, %rd12760, %rd12755;
	add.s64 	%rd12762, %rd12761, %rd12750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9084,%dummy}, %rd12751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9085}, %rd12751;
	}
	shf.r.wrap.b32 	%r9086, %r9085, %r9084, 14;
	shf.r.wrap.b32 	%r9087, %r9084, %r9085, 14;
	mov.b64 	%rd12763, {%r9087, %r9086};
	shf.r.wrap.b32 	%r9088, %r9085, %r9084, 18;
	shf.r.wrap.b32 	%r9089, %r9084, %r9085, 18;
	mov.b64 	%rd12764, {%r9089, %r9088};
	xor.b64  	%rd12765, %rd12763, %rd12764;
	shf.l.wrap.b32 	%r9090, %r9084, %r9085, 23;
	shf.l.wrap.b32 	%r9091, %r9085, %r9084, 23;
	mov.b64 	%rd12766, {%r9091, %r9090};
	xor.b64  	%rd12767, %rd12765, %rd12766;
	xor.b64  	%rd12768, %rd12727, %rd12703;
	and.b64  	%rd12769, %rd12751, %rd12768;
	xor.b64  	%rd12770, %rd12769, %rd12703;
	add.s64 	%rd12771, %rd12770, %rd12679;
	add.s64 	%rd12772, %rd12771, %rd12767;
	add.s64 	%rd12773, %rd12772, %rd13964;
	add.s64 	%rd12774, %rd12773, 8268148722764581231;
	add.s64 	%rd13984, %rd12774, %rd12690;
	and.b64  	%rd12775, %rd12762, %rd12738;
	or.b64  	%rd12776, %rd12762, %rd12738;
	and.b64  	%rd12777, %rd12776, %rd12714;
	or.b64  	%rd12778, %rd12777, %rd12775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd12762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9093}, %rd12762;
	}
	shf.r.wrap.b32 	%r9094, %r9093, %r9092, 28;
	shf.r.wrap.b32 	%r9095, %r9092, %r9093, 28;
	mov.b64 	%rd12779, {%r9095, %r9094};
	shf.l.wrap.b32 	%r9096, %r9092, %r9093, 30;
	shf.l.wrap.b32 	%r9097, %r9093, %r9092, 30;
	mov.b64 	%rd12780, {%r9097, %r9096};
	xor.b64  	%rd12781, %rd12779, %rd12780;
	shf.l.wrap.b32 	%r9098, %r9092, %r9093, 25;
	shf.l.wrap.b32 	%r9099, %r9093, %r9092, 25;
	mov.b64 	%rd12782, {%r9099, %r9098};
	xor.b64  	%rd12783, %rd12781, %rd12782;
	add.s64 	%rd12784, %rd12783, %rd12778;
	add.s64 	%rd13980, %rd12784, %rd12774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9100,%dummy}, %rd13984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9101}, %rd13984;
	}
	shf.r.wrap.b32 	%r9102, %r9101, %r9100, 14;
	shf.r.wrap.b32 	%r9103, %r9100, %r9101, 14;
	mov.b64 	%rd12785, {%r9103, %r9102};
	shf.r.wrap.b32 	%r9104, %r9101, %r9100, 18;
	shf.r.wrap.b32 	%r9105, %r9100, %r9101, 18;
	mov.b64 	%rd12786, {%r9105, %r9104};
	xor.b64  	%rd12787, %rd12785, %rd12786;
	shf.l.wrap.b32 	%r9106, %r9100, %r9101, 23;
	shf.l.wrap.b32 	%r9107, %r9101, %r9100, 23;
	mov.b64 	%rd12788, {%r9107, %r9106};
	xor.b64  	%rd12789, %rd12787, %rd12788;
	xor.b64  	%rd12790, %rd12751, %rd12727;
	and.b64  	%rd12791, %rd13984, %rd12790;
	xor.b64  	%rd12792, %rd12791, %rd12727;
	add.s64 	%rd12793, %rd12792, %rd12703;
	add.s64 	%rd12794, %rd12793, %rd12789;
	add.s64 	%rd12795, %rd12794, %rd13963;
	add.s64 	%rd12796, %rd12795, -9160688886553864527;
	add.s64 	%rd13983, %rd12796, %rd12714;
	and.b64  	%rd12797, %rd13980, %rd12762;
	or.b64  	%rd12798, %rd13980, %rd12762;
	and.b64  	%rd12799, %rd12798, %rd12738;
	or.b64  	%rd12800, %rd12799, %rd12797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9108,%dummy}, %rd13980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9109}, %rd13980;
	}
	shf.r.wrap.b32 	%r9110, %r9109, %r9108, 28;
	shf.r.wrap.b32 	%r9111, %r9108, %r9109, 28;
	mov.b64 	%rd12801, {%r9111, %r9110};
	shf.l.wrap.b32 	%r9112, %r9108, %r9109, 30;
	shf.l.wrap.b32 	%r9113, %r9109, %r9108, 30;
	mov.b64 	%rd12802, {%r9113, %r9112};
	xor.b64  	%rd12803, %rd12801, %rd12802;
	shf.l.wrap.b32 	%r9114, %r9108, %r9109, 25;
	shf.l.wrap.b32 	%r9115, %r9109, %r9108, 25;
	mov.b64 	%rd12804, {%r9115, %r9114};
	xor.b64  	%rd12805, %rd12803, %rd12804;
	add.s64 	%rd12806, %rd12805, %rd12800;
	add.s64 	%rd13979, %rd12806, %rd12796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9116,%dummy}, %rd13983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9117}, %rd13983;
	}
	shf.r.wrap.b32 	%r9118, %r9117, %r9116, 14;
	shf.r.wrap.b32 	%r9119, %r9116, %r9117, 14;
	mov.b64 	%rd12807, {%r9119, %r9118};
	shf.r.wrap.b32 	%r9120, %r9117, %r9116, 18;
	shf.r.wrap.b32 	%r9121, %r9116, %r9117, 18;
	mov.b64 	%rd12808, {%r9121, %r9120};
	xor.b64  	%rd12809, %rd12807, %rd12808;
	shf.l.wrap.b32 	%r9122, %r9116, %r9117, 23;
	shf.l.wrap.b32 	%r9123, %r9117, %r9116, 23;
	mov.b64 	%rd12810, {%r9123, %r9122};
	xor.b64  	%rd12811, %rd12809, %rd12810;
	xor.b64  	%rd12812, %rd13984, %rd12751;
	and.b64  	%rd12813, %rd13983, %rd12812;
	xor.b64  	%rd12814, %rd12813, %rd12751;
	add.s64 	%rd12815, %rd12814, %rd12727;
	add.s64 	%rd12816, %rd12815, %rd12811;
	add.s64 	%rd12817, %rd12816, %rd13962;
	add.s64 	%rd12818, %rd12817, -7215885187991268811;
	add.s64 	%rd13982, %rd12818, %rd12738;
	and.b64  	%rd12819, %rd13979, %rd13980;
	or.b64  	%rd12820, %rd13979, %rd13980;
	and.b64  	%rd12821, %rd12820, %rd12762;
	or.b64  	%rd12822, %rd12821, %rd12819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9124,%dummy}, %rd13979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9125}, %rd13979;
	}
	shf.r.wrap.b32 	%r9126, %r9125, %r9124, 28;
	shf.r.wrap.b32 	%r9127, %r9124, %r9125, 28;
	mov.b64 	%rd12823, {%r9127, %r9126};
	shf.l.wrap.b32 	%r9128, %r9124, %r9125, 30;
	shf.l.wrap.b32 	%r9129, %r9125, %r9124, 30;
	mov.b64 	%rd12824, {%r9129, %r9128};
	xor.b64  	%rd12825, %rd12823, %rd12824;
	shf.l.wrap.b32 	%r9130, %r9124, %r9125, 25;
	shf.l.wrap.b32 	%r9131, %r9125, %r9124, 25;
	mov.b64 	%rd12826, {%r9131, %r9130};
	xor.b64  	%rd12827, %rd12825, %rd12826;
	add.s64 	%rd12828, %rd12827, %rd12822;
	add.s64 	%rd13978, %rd12828, %rd12818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9132,%dummy}, %rd13982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9133}, %rd13982;
	}
	shf.r.wrap.b32 	%r9134, %r9133, %r9132, 14;
	shf.r.wrap.b32 	%r9135, %r9132, %r9133, 14;
	mov.b64 	%rd12829, {%r9135, %r9134};
	shf.r.wrap.b32 	%r9136, %r9133, %r9132, 18;
	shf.r.wrap.b32 	%r9137, %r9132, %r9133, 18;
	mov.b64 	%rd12830, {%r9137, %r9136};
	xor.b64  	%rd12831, %rd12829, %rd12830;
	shf.l.wrap.b32 	%r9138, %r9132, %r9133, 23;
	shf.l.wrap.b32 	%r9139, %r9133, %r9132, 23;
	mov.b64 	%rd12832, {%r9139, %r9138};
	xor.b64  	%rd12833, %rd12831, %rd12832;
	xor.b64  	%rd12834, %rd13983, %rd13984;
	and.b64  	%rd12835, %rd13982, %rd12834;
	xor.b64  	%rd12836, %rd12835, %rd13984;
	add.s64 	%rd12837, %rd12836, %rd12751;
	add.s64 	%rd12838, %rd12837, %rd12833;
	add.s64 	%rd12839, %rd12838, %rd13961;
	add.s64 	%rd12840, %rd12839, -4495734319001033068;
	add.s64 	%rd13981, %rd12840, %rd12762;
	and.b64  	%rd12841, %rd13978, %rd13979;
	or.b64  	%rd12842, %rd13978, %rd13979;
	and.b64  	%rd12843, %rd12842, %rd13980;
	or.b64  	%rd12844, %rd12843, %rd12841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9140,%dummy}, %rd13978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9141}, %rd13978;
	}
	shf.r.wrap.b32 	%r9142, %r9141, %r9140, 28;
	shf.r.wrap.b32 	%r9143, %r9140, %r9141, 28;
	mov.b64 	%rd12845, {%r9143, %r9142};
	shf.l.wrap.b32 	%r9144, %r9140, %r9141, 30;
	shf.l.wrap.b32 	%r9145, %r9141, %r9140, 30;
	mov.b64 	%rd12846, {%r9145, %r9144};
	xor.b64  	%rd12847, %rd12845, %rd12846;
	shf.l.wrap.b32 	%r9146, %r9140, %r9141, 25;
	shf.l.wrap.b32 	%r9147, %r9141, %r9140, 25;
	mov.b64 	%rd12848, {%r9147, %r9146};
	xor.b64  	%rd12849, %rd12847, %rd12848;
	add.s64 	%rd12850, %rd12849, %rd12844;
	add.s64 	%rd13977, %rd12850, %rd12840;
	mov.u32 	%r9761, 16;

$L__BB0_160:
	.pragma "nounroll";
	mov.u64 	%rd13513, k;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9148}, %rd13962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9149,%dummy}, %rd13962;
	}
	shf.l.wrap.b32 	%r9150, %r9149, %r9148, 3;
	shf.l.wrap.b32 	%r9151, %r9148, %r9149, 3;
	mov.b64 	%rd12851, {%r9151, %r9150};
	shf.r.wrap.b32 	%r9152, %r9148, %r9149, 19;
	shf.r.wrap.b32 	%r9153, %r9149, %r9148, 19;
	mov.b64 	%rd12852, {%r9153, %r9152};
	xor.b64  	%rd12853, %rd12852, %rd12851;
	shr.u64 	%rd12854, %rd13962, 6;
	xor.b64  	%rd12855, %rd12853, %rd12854;
	add.s64 	%rd12856, %rd13967, %rd13976;
	add.s64 	%rd12857, %rd12856, %rd12855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9154,%dummy}, %rd13975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9155}, %rd13975;
	}
	shf.r.wrap.b32 	%r9156, %r9155, %r9154, 8;
	shf.r.wrap.b32 	%r9157, %r9154, %r9155, 8;
	mov.b64 	%rd12858, {%r9157, %r9156};
	shf.r.wrap.b32 	%r9158, %r9155, %r9154, 1;
	shf.r.wrap.b32 	%r9159, %r9154, %r9155, 1;
	mov.b64 	%rd12859, {%r9159, %r9158};
	xor.b64  	%rd12860, %rd12859, %rd12858;
	shr.u64 	%rd12861, %rd13975, 7;
	xor.b64  	%rd12862, %rd12860, %rd12861;
	add.s64 	%rd13976, %rd12857, %rd12862;
	mul.wide.u32 	%rd12863, %r9761, 8;
	add.s64 	%rd12865, %rd13513, %rd12863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9160,%dummy}, %rd13981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9161}, %rd13981;
	}
	shf.r.wrap.b32 	%r9162, %r9161, %r9160, 18;
	shf.r.wrap.b32 	%r9163, %r9160, %r9161, 18;
	mov.b64 	%rd12866, {%r9163, %r9162};
	shf.r.wrap.b32 	%r9164, %r9161, %r9160, 14;
	shf.r.wrap.b32 	%r9165, %r9160, %r9161, 14;
	mov.b64 	%rd12867, {%r9165, %r9164};
	xor.b64  	%rd12868, %rd12867, %rd12866;
	shf.l.wrap.b32 	%r9166, %r9160, %r9161, 23;
	shf.l.wrap.b32 	%r9167, %r9161, %r9160, 23;
	mov.b64 	%rd12869, {%r9167, %r9166};
	xor.b64  	%rd12870, %rd12868, %rd12869;
	xor.b64  	%rd12871, %rd13982, %rd13983;
	and.b64  	%rd12872, %rd13981, %rd12871;
	xor.b64  	%rd12873, %rd12872, %rd13983;
	add.s64 	%rd12874, %rd12873, %rd13984;
	add.s64 	%rd12875, %rd12874, %rd12870;
	ld.const.u64 	%rd12876, [%rd12865];
	add.s64 	%rd12877, %rd12875, %rd12876;
	add.s64 	%rd12878, %rd12877, %rd13976;
	add.s64 	%rd12879, %rd12878, %rd13980;
	or.b64  	%rd12880, %rd13977, %rd13978;
	and.b64  	%rd12881, %rd12880, %rd13979;
	and.b64  	%rd12882, %rd13977, %rd13978;
	or.b64  	%rd12883, %rd12881, %rd12882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9168}, %rd13977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9169,%dummy}, %rd13977;
	}
	shf.l.wrap.b32 	%r9170, %r9169, %r9168, 30;
	shf.l.wrap.b32 	%r9171, %r9168, %r9169, 30;
	mov.b64 	%rd12884, {%r9171, %r9170};
	shf.r.wrap.b32 	%r9172, %r9168, %r9169, 28;
	shf.r.wrap.b32 	%r9173, %r9169, %r9168, 28;
	mov.b64 	%rd12885, {%r9173, %r9172};
	xor.b64  	%rd12886, %rd12885, %rd12884;
	shf.l.wrap.b32 	%r9174, %r9169, %r9168, 25;
	shf.l.wrap.b32 	%r9175, %r9168, %r9169, 25;
	mov.b64 	%rd12887, {%r9175, %r9174};
	xor.b64  	%rd12888, %rd12886, %rd12887;
	add.s64 	%rd12889, %rd12888, %rd12883;
	add.s64 	%rd12890, %rd12889, %rd12878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9176}, %rd13961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9177,%dummy}, %rd13961;
	}
	shf.l.wrap.b32 	%r9178, %r9177, %r9176, 3;
	shf.l.wrap.b32 	%r9179, %r9176, %r9177, 3;
	mov.b64 	%rd12891, {%r9179, %r9178};
	shf.r.wrap.b32 	%r9180, %r9176, %r9177, 19;
	shf.r.wrap.b32 	%r9181, %r9177, %r9176, 19;
	mov.b64 	%rd12892, {%r9181, %r9180};
	xor.b64  	%rd12893, %rd12892, %rd12891;
	shr.u64 	%rd12894, %rd13961, 6;
	xor.b64  	%rd12895, %rd12893, %rd12894;
	add.s64 	%rd12896, %rd13966, %rd13975;
	add.s64 	%rd12897, %rd12896, %rd12895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9182,%dummy}, %rd13974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9183}, %rd13974;
	}
	shf.r.wrap.b32 	%r9184, %r9183, %r9182, 8;
	shf.r.wrap.b32 	%r9185, %r9182, %r9183, 8;
	mov.b64 	%rd12898, {%r9185, %r9184};
	shf.r.wrap.b32 	%r9186, %r9183, %r9182, 1;
	shf.r.wrap.b32 	%r9187, %r9182, %r9183, 1;
	mov.b64 	%rd12899, {%r9187, %r9186};
	xor.b64  	%rd12900, %rd12899, %rd12898;
	shr.u64 	%rd12901, %rd13974, 7;
	xor.b64  	%rd12902, %rd12900, %rd12901;
	add.s64 	%rd13975, %rd12897, %rd12902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9188,%dummy}, %rd12879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9189}, %rd12879;
	}
	shf.r.wrap.b32 	%r9190, %r9189, %r9188, 14;
	shf.r.wrap.b32 	%r9191, %r9188, %r9189, 14;
	mov.b64 	%rd12903, {%r9191, %r9190};
	shf.r.wrap.b32 	%r9192, %r9189, %r9188, 18;
	shf.r.wrap.b32 	%r9193, %r9188, %r9189, 18;
	mov.b64 	%rd12904, {%r9193, %r9192};
	xor.b64  	%rd12905, %rd12903, %rd12904;
	shf.l.wrap.b32 	%r9194, %r9188, %r9189, 23;
	shf.l.wrap.b32 	%r9195, %r9189, %r9188, 23;
	mov.b64 	%rd12906, {%r9195, %r9194};
	xor.b64  	%rd12907, %rd12905, %rd12906;
	xor.b64  	%rd12908, %rd13981, %rd13982;
	and.b64  	%rd12909, %rd12879, %rd12908;
	xor.b64  	%rd12910, %rd12909, %rd13982;
	add.s64 	%rd12911, %rd12910, %rd13983;
	add.s64 	%rd12912, %rd12911, %rd12907;
	ld.const.u64 	%rd12913, [%rd12865+8];
	add.s64 	%rd12914, %rd12912, %rd12913;
	add.s64 	%rd12915, %rd12914, %rd13975;
	add.s64 	%rd12916, %rd12915, %rd13979;
	and.b64  	%rd12917, %rd12890, %rd13977;
	or.b64  	%rd12918, %rd12890, %rd13977;
	and.b64  	%rd12919, %rd12918, %rd13978;
	or.b64  	%rd12920, %rd12919, %rd12917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9196,%dummy}, %rd12890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9197}, %rd12890;
	}
	shf.r.wrap.b32 	%r9198, %r9197, %r9196, 28;
	shf.r.wrap.b32 	%r9199, %r9196, %r9197, 28;
	mov.b64 	%rd12921, {%r9199, %r9198};
	shf.l.wrap.b32 	%r9200, %r9196, %r9197, 30;
	shf.l.wrap.b32 	%r9201, %r9197, %r9196, 30;
	mov.b64 	%rd12922, {%r9201, %r9200};
	xor.b64  	%rd12923, %rd12921, %rd12922;
	shf.l.wrap.b32 	%r9202, %r9196, %r9197, 25;
	shf.l.wrap.b32 	%r9203, %r9197, %r9196, 25;
	mov.b64 	%rd12924, {%r9203, %r9202};
	xor.b64  	%rd12925, %rd12923, %rd12924;
	add.s64 	%rd12926, %rd12925, %rd12920;
	add.s64 	%rd12927, %rd12926, %rd12915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9204,%dummy}, %rd13976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9205}, %rd13976;
	}
	shf.r.wrap.b32 	%r9206, %r9205, %r9204, 19;
	shf.r.wrap.b32 	%r9207, %r9204, %r9205, 19;
	mov.b64 	%rd12928, {%r9207, %r9206};
	shf.l.wrap.b32 	%r9208, %r9204, %r9205, 3;
	shf.l.wrap.b32 	%r9209, %r9205, %r9204, 3;
	mov.b64 	%rd12929, {%r9209, %r9208};
	xor.b64  	%rd12930, %rd12928, %rd12929;
	shr.u64 	%rd12931, %rd13976, 6;
	xor.b64  	%rd12932, %rd12930, %rd12931;
	add.s64 	%rd12933, %rd13965, %rd13974;
	add.s64 	%rd12934, %rd12933, %rd12932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9210,%dummy}, %rd13973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9211}, %rd13973;
	}
	shf.r.wrap.b32 	%r9212, %r9211, %r9210, 8;
	shf.r.wrap.b32 	%r9213, %r9210, %r9211, 8;
	mov.b64 	%rd12935, {%r9213, %r9212};
	shf.r.wrap.b32 	%r9214, %r9211, %r9210, 1;
	shf.r.wrap.b32 	%r9215, %r9210, %r9211, 1;
	mov.b64 	%rd12936, {%r9215, %r9214};
	xor.b64  	%rd12937, %rd12936, %rd12935;
	shr.u64 	%rd12938, %rd13973, 7;
	xor.b64  	%rd12939, %rd12937, %rd12938;
	add.s64 	%rd13974, %rd12934, %rd12939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9216,%dummy}, %rd12916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9217}, %rd12916;
	}
	shf.r.wrap.b32 	%r9218, %r9217, %r9216, 14;
	shf.r.wrap.b32 	%r9219, %r9216, %r9217, 14;
	mov.b64 	%rd12940, {%r9219, %r9218};
	shf.r.wrap.b32 	%r9220, %r9217, %r9216, 18;
	shf.r.wrap.b32 	%r9221, %r9216, %r9217, 18;
	mov.b64 	%rd12941, {%r9221, %r9220};
	xor.b64  	%rd12942, %rd12940, %rd12941;
	shf.l.wrap.b32 	%r9222, %r9216, %r9217, 23;
	shf.l.wrap.b32 	%r9223, %r9217, %r9216, 23;
	mov.b64 	%rd12943, {%r9223, %r9222};
	xor.b64  	%rd12944, %rd12942, %rd12943;
	xor.b64  	%rd12945, %rd12879, %rd13981;
	and.b64  	%rd12946, %rd12916, %rd12945;
	xor.b64  	%rd12947, %rd12946, %rd13981;
	add.s64 	%rd12948, %rd12947, %rd13982;
	add.s64 	%rd12949, %rd12948, %rd12944;
	ld.const.u64 	%rd12950, [%rd12865+16];
	add.s64 	%rd12951, %rd12949, %rd12950;
	add.s64 	%rd12952, %rd12951, %rd13974;
	add.s64 	%rd12953, %rd12952, %rd13978;
	and.b64  	%rd12954, %rd12927, %rd12890;
	or.b64  	%rd12955, %rd12927, %rd12890;
	and.b64  	%rd12956, %rd12955, %rd13977;
	or.b64  	%rd12957, %rd12956, %rd12954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9224,%dummy}, %rd12927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9225}, %rd12927;
	}
	shf.r.wrap.b32 	%r9226, %r9225, %r9224, 28;
	shf.r.wrap.b32 	%r9227, %r9224, %r9225, 28;
	mov.b64 	%rd12958, {%r9227, %r9226};
	shf.l.wrap.b32 	%r9228, %r9224, %r9225, 30;
	shf.l.wrap.b32 	%r9229, %r9225, %r9224, 30;
	mov.b64 	%rd12959, {%r9229, %r9228};
	xor.b64  	%rd12960, %rd12958, %rd12959;
	shf.l.wrap.b32 	%r9230, %r9224, %r9225, 25;
	shf.l.wrap.b32 	%r9231, %r9225, %r9224, 25;
	mov.b64 	%rd12961, {%r9231, %r9230};
	xor.b64  	%rd12962, %rd12960, %rd12961;
	add.s64 	%rd12963, %rd12962, %rd12957;
	add.s64 	%rd12964, %rd12963, %rd12952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9232,%dummy}, %rd13975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9233}, %rd13975;
	}
	shf.r.wrap.b32 	%r9234, %r9233, %r9232, 19;
	shf.r.wrap.b32 	%r9235, %r9232, %r9233, 19;
	mov.b64 	%rd12965, {%r9235, %r9234};
	shf.l.wrap.b32 	%r9236, %r9232, %r9233, 3;
	shf.l.wrap.b32 	%r9237, %r9233, %r9232, 3;
	mov.b64 	%rd12966, {%r9237, %r9236};
	xor.b64  	%rd12967, %rd12965, %rd12966;
	shr.u64 	%rd12968, %rd13975, 6;
	xor.b64  	%rd12969, %rd12967, %rd12968;
	add.s64 	%rd12970, %rd13964, %rd13973;
	add.s64 	%rd12971, %rd12970, %rd12969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9238,%dummy}, %rd13972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9239}, %rd13972;
	}
	shf.r.wrap.b32 	%r9240, %r9239, %r9238, 8;
	shf.r.wrap.b32 	%r9241, %r9238, %r9239, 8;
	mov.b64 	%rd12972, {%r9241, %r9240};
	shf.r.wrap.b32 	%r9242, %r9239, %r9238, 1;
	shf.r.wrap.b32 	%r9243, %r9238, %r9239, 1;
	mov.b64 	%rd12973, {%r9243, %r9242};
	xor.b64  	%rd12974, %rd12973, %rd12972;
	shr.u64 	%rd12975, %rd13972, 7;
	xor.b64  	%rd12976, %rd12974, %rd12975;
	add.s64 	%rd13973, %rd12971, %rd12976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9244,%dummy}, %rd12953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9245}, %rd12953;
	}
	shf.r.wrap.b32 	%r9246, %r9245, %r9244, 14;
	shf.r.wrap.b32 	%r9247, %r9244, %r9245, 14;
	mov.b64 	%rd12977, {%r9247, %r9246};
	shf.r.wrap.b32 	%r9248, %r9245, %r9244, 18;
	shf.r.wrap.b32 	%r9249, %r9244, %r9245, 18;
	mov.b64 	%rd12978, {%r9249, %r9248};
	xor.b64  	%rd12979, %rd12977, %rd12978;
	shf.l.wrap.b32 	%r9250, %r9244, %r9245, 23;
	shf.l.wrap.b32 	%r9251, %r9245, %r9244, 23;
	mov.b64 	%rd12980, {%r9251, %r9250};
	xor.b64  	%rd12981, %rd12979, %rd12980;
	xor.b64  	%rd12982, %rd12916, %rd12879;
	and.b64  	%rd12983, %rd12953, %rd12982;
	xor.b64  	%rd12984, %rd12983, %rd12879;
	add.s64 	%rd12985, %rd12984, %rd13981;
	add.s64 	%rd12986, %rd12985, %rd12981;
	ld.const.u64 	%rd12987, [%rd12865+24];
	add.s64 	%rd12988, %rd12986, %rd12987;
	add.s64 	%rd12989, %rd12988, %rd13973;
	add.s64 	%rd12990, %rd12989, %rd13977;
	and.b64  	%rd12991, %rd12964, %rd12927;
	or.b64  	%rd12992, %rd12964, %rd12927;
	and.b64  	%rd12993, %rd12992, %rd12890;
	or.b64  	%rd12994, %rd12993, %rd12991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9252,%dummy}, %rd12964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9253}, %rd12964;
	}
	shf.r.wrap.b32 	%r9254, %r9253, %r9252, 28;
	shf.r.wrap.b32 	%r9255, %r9252, %r9253, 28;
	mov.b64 	%rd12995, {%r9255, %r9254};
	shf.l.wrap.b32 	%r9256, %r9252, %r9253, 30;
	shf.l.wrap.b32 	%r9257, %r9253, %r9252, 30;
	mov.b64 	%rd12996, {%r9257, %r9256};
	xor.b64  	%rd12997, %rd12995, %rd12996;
	shf.l.wrap.b32 	%r9258, %r9252, %r9253, 25;
	shf.l.wrap.b32 	%r9259, %r9253, %r9252, 25;
	mov.b64 	%rd12998, {%r9259, %r9258};
	xor.b64  	%rd12999, %rd12997, %rd12998;
	add.s64 	%rd13000, %rd12999, %rd12994;
	add.s64 	%rd13001, %rd13000, %rd12989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9260,%dummy}, %rd13974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9261}, %rd13974;
	}
	shf.r.wrap.b32 	%r9262, %r9261, %r9260, 19;
	shf.r.wrap.b32 	%r9263, %r9260, %r9261, 19;
	mov.b64 	%rd13002, {%r9263, %r9262};
	shf.l.wrap.b32 	%r9264, %r9260, %r9261, 3;
	shf.l.wrap.b32 	%r9265, %r9261, %r9260, 3;
	mov.b64 	%rd13003, {%r9265, %r9264};
	xor.b64  	%rd13004, %rd13002, %rd13003;
	shr.u64 	%rd13005, %rd13974, 6;
	xor.b64  	%rd13006, %rd13004, %rd13005;
	add.s64 	%rd13007, %rd13963, %rd13972;
	add.s64 	%rd13008, %rd13007, %rd13006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9266,%dummy}, %rd13971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9267}, %rd13971;
	}
	shf.r.wrap.b32 	%r9268, %r9267, %r9266, 8;
	shf.r.wrap.b32 	%r9269, %r9266, %r9267, 8;
	mov.b64 	%rd13009, {%r9269, %r9268};
	shf.r.wrap.b32 	%r9270, %r9267, %r9266, 1;
	shf.r.wrap.b32 	%r9271, %r9266, %r9267, 1;
	mov.b64 	%rd13010, {%r9271, %r9270};
	xor.b64  	%rd13011, %rd13010, %rd13009;
	shr.u64 	%rd13012, %rd13971, 7;
	xor.b64  	%rd13013, %rd13011, %rd13012;
	add.s64 	%rd13972, %rd13008, %rd13013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9272,%dummy}, %rd12990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9273}, %rd12990;
	}
	shf.r.wrap.b32 	%r9274, %r9273, %r9272, 14;
	shf.r.wrap.b32 	%r9275, %r9272, %r9273, 14;
	mov.b64 	%rd13014, {%r9275, %r9274};
	shf.r.wrap.b32 	%r9276, %r9273, %r9272, 18;
	shf.r.wrap.b32 	%r9277, %r9272, %r9273, 18;
	mov.b64 	%rd13015, {%r9277, %r9276};
	xor.b64  	%rd13016, %rd13014, %rd13015;
	shf.l.wrap.b32 	%r9278, %r9272, %r9273, 23;
	shf.l.wrap.b32 	%r9279, %r9273, %r9272, 23;
	mov.b64 	%rd13017, {%r9279, %r9278};
	xor.b64  	%rd13018, %rd13016, %rd13017;
	xor.b64  	%rd13019, %rd12953, %rd12916;
	and.b64  	%rd13020, %rd12990, %rd13019;
	xor.b64  	%rd13021, %rd13020, %rd12916;
	add.s64 	%rd13022, %rd13021, %rd12879;
	add.s64 	%rd13023, %rd13022, %rd13018;
	ld.const.u64 	%rd13024, [%rd12865+32];
	add.s64 	%rd13025, %rd13023, %rd13024;
	add.s64 	%rd13026, %rd13025, %rd13972;
	add.s64 	%rd13027, %rd13026, %rd12890;
	and.b64  	%rd13028, %rd13001, %rd12964;
	or.b64  	%rd13029, %rd13001, %rd12964;
	and.b64  	%rd13030, %rd13029, %rd12927;
	or.b64  	%rd13031, %rd13030, %rd13028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9280,%dummy}, %rd13001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9281}, %rd13001;
	}
	shf.r.wrap.b32 	%r9282, %r9281, %r9280, 28;
	shf.r.wrap.b32 	%r9283, %r9280, %r9281, 28;
	mov.b64 	%rd13032, {%r9283, %r9282};
	shf.l.wrap.b32 	%r9284, %r9280, %r9281, 30;
	shf.l.wrap.b32 	%r9285, %r9281, %r9280, 30;
	mov.b64 	%rd13033, {%r9285, %r9284};
	xor.b64  	%rd13034, %rd13032, %rd13033;
	shf.l.wrap.b32 	%r9286, %r9280, %r9281, 25;
	shf.l.wrap.b32 	%r9287, %r9281, %r9280, 25;
	mov.b64 	%rd13035, {%r9287, %r9286};
	xor.b64  	%rd13036, %rd13034, %rd13035;
	add.s64 	%rd13037, %rd13036, %rd13031;
	add.s64 	%rd13038, %rd13037, %rd13026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9288,%dummy}, %rd13973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9289}, %rd13973;
	}
	shf.r.wrap.b32 	%r9290, %r9289, %r9288, 19;
	shf.r.wrap.b32 	%r9291, %r9288, %r9289, 19;
	mov.b64 	%rd13039, {%r9291, %r9290};
	shf.l.wrap.b32 	%r9292, %r9288, %r9289, 3;
	shf.l.wrap.b32 	%r9293, %r9289, %r9288, 3;
	mov.b64 	%rd13040, {%r9293, %r9292};
	xor.b64  	%rd13041, %rd13039, %rd13040;
	shr.u64 	%rd13042, %rd13973, 6;
	xor.b64  	%rd13043, %rd13041, %rd13042;
	add.s64 	%rd13044, %rd13962, %rd13971;
	add.s64 	%rd13045, %rd13044, %rd13043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9294,%dummy}, %rd13970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9295}, %rd13970;
	}
	shf.r.wrap.b32 	%r9296, %r9295, %r9294, 8;
	shf.r.wrap.b32 	%r9297, %r9294, %r9295, 8;
	mov.b64 	%rd13046, {%r9297, %r9296};
	shf.r.wrap.b32 	%r9298, %r9295, %r9294, 1;
	shf.r.wrap.b32 	%r9299, %r9294, %r9295, 1;
	mov.b64 	%rd13047, {%r9299, %r9298};
	xor.b64  	%rd13048, %rd13047, %rd13046;
	shr.u64 	%rd13049, %rd13970, 7;
	xor.b64  	%rd13050, %rd13048, %rd13049;
	add.s64 	%rd13971, %rd13045, %rd13050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9300,%dummy}, %rd13027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9301}, %rd13027;
	}
	shf.r.wrap.b32 	%r9302, %r9301, %r9300, 14;
	shf.r.wrap.b32 	%r9303, %r9300, %r9301, 14;
	mov.b64 	%rd13051, {%r9303, %r9302};
	shf.r.wrap.b32 	%r9304, %r9301, %r9300, 18;
	shf.r.wrap.b32 	%r9305, %r9300, %r9301, 18;
	mov.b64 	%rd13052, {%r9305, %r9304};
	xor.b64  	%rd13053, %rd13051, %rd13052;
	shf.l.wrap.b32 	%r9306, %r9300, %r9301, 23;
	shf.l.wrap.b32 	%r9307, %r9301, %r9300, 23;
	mov.b64 	%rd13054, {%r9307, %r9306};
	xor.b64  	%rd13055, %rd13053, %rd13054;
	xor.b64  	%rd13056, %rd12990, %rd12953;
	and.b64  	%rd13057, %rd13027, %rd13056;
	xor.b64  	%rd13058, %rd13057, %rd12953;
	add.s64 	%rd13059, %rd13058, %rd12916;
	add.s64 	%rd13060, %rd13059, %rd13055;
	ld.const.u64 	%rd13061, [%rd12865+40];
	add.s64 	%rd13062, %rd13060, %rd13061;
	add.s64 	%rd13063, %rd13062, %rd13971;
	add.s64 	%rd13064, %rd13063, %rd12927;
	and.b64  	%rd13065, %rd13038, %rd13001;
	or.b64  	%rd13066, %rd13038, %rd13001;
	and.b64  	%rd13067, %rd13066, %rd12964;
	or.b64  	%rd13068, %rd13067, %rd13065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9308,%dummy}, %rd13038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9309}, %rd13038;
	}
	shf.r.wrap.b32 	%r9310, %r9309, %r9308, 28;
	shf.r.wrap.b32 	%r9311, %r9308, %r9309, 28;
	mov.b64 	%rd13069, {%r9311, %r9310};
	shf.l.wrap.b32 	%r9312, %r9308, %r9309, 30;
	shf.l.wrap.b32 	%r9313, %r9309, %r9308, 30;
	mov.b64 	%rd13070, {%r9313, %r9312};
	xor.b64  	%rd13071, %rd13069, %rd13070;
	shf.l.wrap.b32 	%r9314, %r9308, %r9309, 25;
	shf.l.wrap.b32 	%r9315, %r9309, %r9308, 25;
	mov.b64 	%rd13072, {%r9315, %r9314};
	xor.b64  	%rd13073, %rd13071, %rd13072;
	add.s64 	%rd13074, %rd13073, %rd13068;
	add.s64 	%rd13075, %rd13074, %rd13063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9316,%dummy}, %rd13972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9317}, %rd13972;
	}
	shf.r.wrap.b32 	%r9318, %r9317, %r9316, 19;
	shf.r.wrap.b32 	%r9319, %r9316, %r9317, 19;
	mov.b64 	%rd13076, {%r9319, %r9318};
	shf.l.wrap.b32 	%r9320, %r9316, %r9317, 3;
	shf.l.wrap.b32 	%r9321, %r9317, %r9316, 3;
	mov.b64 	%rd13077, {%r9321, %r9320};
	xor.b64  	%rd13078, %rd13076, %rd13077;
	shr.u64 	%rd13079, %rd13972, 6;
	xor.b64  	%rd13080, %rd13078, %rd13079;
	add.s64 	%rd13081, %rd13961, %rd13970;
	add.s64 	%rd13082, %rd13081, %rd13080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9322,%dummy}, %rd13969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9323}, %rd13969;
	}
	shf.r.wrap.b32 	%r9324, %r9323, %r9322, 8;
	shf.r.wrap.b32 	%r9325, %r9322, %r9323, 8;
	mov.b64 	%rd13083, {%r9325, %r9324};
	shf.r.wrap.b32 	%r9326, %r9323, %r9322, 1;
	shf.r.wrap.b32 	%r9327, %r9322, %r9323, 1;
	mov.b64 	%rd13084, {%r9327, %r9326};
	xor.b64  	%rd13085, %rd13084, %rd13083;
	shr.u64 	%rd13086, %rd13969, 7;
	xor.b64  	%rd13087, %rd13085, %rd13086;
	add.s64 	%rd13970, %rd13082, %rd13087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9328,%dummy}, %rd13064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9329}, %rd13064;
	}
	shf.r.wrap.b32 	%r9330, %r9329, %r9328, 14;
	shf.r.wrap.b32 	%r9331, %r9328, %r9329, 14;
	mov.b64 	%rd13088, {%r9331, %r9330};
	shf.r.wrap.b32 	%r9332, %r9329, %r9328, 18;
	shf.r.wrap.b32 	%r9333, %r9328, %r9329, 18;
	mov.b64 	%rd13089, {%r9333, %r9332};
	xor.b64  	%rd13090, %rd13088, %rd13089;
	shf.l.wrap.b32 	%r9334, %r9328, %r9329, 23;
	shf.l.wrap.b32 	%r9335, %r9329, %r9328, 23;
	mov.b64 	%rd13091, {%r9335, %r9334};
	xor.b64  	%rd13092, %rd13090, %rd13091;
	xor.b64  	%rd13093, %rd13027, %rd12990;
	and.b64  	%rd13094, %rd13064, %rd13093;
	xor.b64  	%rd13095, %rd13094, %rd12990;
	add.s64 	%rd13096, %rd13095, %rd12953;
	add.s64 	%rd13097, %rd13096, %rd13092;
	ld.const.u64 	%rd13098, [%rd12865+48];
	add.s64 	%rd13099, %rd13097, %rd13098;
	add.s64 	%rd13100, %rd13099, %rd13970;
	add.s64 	%rd13101, %rd13100, %rd12964;
	and.b64  	%rd13102, %rd13075, %rd13038;
	or.b64  	%rd13103, %rd13075, %rd13038;
	and.b64  	%rd13104, %rd13103, %rd13001;
	or.b64  	%rd13105, %rd13104, %rd13102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9336,%dummy}, %rd13075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9337}, %rd13075;
	}
	shf.r.wrap.b32 	%r9338, %r9337, %r9336, 28;
	shf.r.wrap.b32 	%r9339, %r9336, %r9337, 28;
	mov.b64 	%rd13106, {%r9339, %r9338};
	shf.l.wrap.b32 	%r9340, %r9336, %r9337, 30;
	shf.l.wrap.b32 	%r9341, %r9337, %r9336, 30;
	mov.b64 	%rd13107, {%r9341, %r9340};
	xor.b64  	%rd13108, %rd13106, %rd13107;
	shf.l.wrap.b32 	%r9342, %r9336, %r9337, 25;
	shf.l.wrap.b32 	%r9343, %r9337, %r9336, 25;
	mov.b64 	%rd13109, {%r9343, %r9342};
	xor.b64  	%rd13110, %rd13108, %rd13109;
	add.s64 	%rd13111, %rd13110, %rd13105;
	add.s64 	%rd13112, %rd13111, %rd13100;
	add.s64 	%rd13113, %rd13976, %rd13969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9344,%dummy}, %rd13971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9345}, %rd13971;
	}
	shf.r.wrap.b32 	%r9346, %r9345, %r9344, 19;
	shf.r.wrap.b32 	%r9347, %r9344, %r9345, 19;
	mov.b64 	%rd13114, {%r9347, %r9346};
	shf.l.wrap.b32 	%r9348, %r9344, %r9345, 3;
	shf.l.wrap.b32 	%r9349, %r9345, %r9344, 3;
	mov.b64 	%rd13115, {%r9349, %r9348};
	xor.b64  	%rd13116, %rd13114, %rd13115;
	shr.u64 	%rd13117, %rd13971, 6;
	xor.b64  	%rd13118, %rd13116, %rd13117;
	add.s64 	%rd13119, %rd13113, %rd13118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9350,%dummy}, %rd13968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9351}, %rd13968;
	}
	shf.r.wrap.b32 	%r9352, %r9351, %r9350, 8;
	shf.r.wrap.b32 	%r9353, %r9350, %r9351, 8;
	mov.b64 	%rd13120, {%r9353, %r9352};
	shf.r.wrap.b32 	%r9354, %r9351, %r9350, 1;
	shf.r.wrap.b32 	%r9355, %r9350, %r9351, 1;
	mov.b64 	%rd13121, {%r9355, %r9354};
	xor.b64  	%rd13122, %rd13121, %rd13120;
	shr.u64 	%rd13123, %rd13968, 7;
	xor.b64  	%rd13124, %rd13122, %rd13123;
	add.s64 	%rd13969, %rd13119, %rd13124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9356,%dummy}, %rd13101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9357}, %rd13101;
	}
	shf.r.wrap.b32 	%r9358, %r9357, %r9356, 14;
	shf.r.wrap.b32 	%r9359, %r9356, %r9357, 14;
	mov.b64 	%rd13125, {%r9359, %r9358};
	shf.r.wrap.b32 	%r9360, %r9357, %r9356, 18;
	shf.r.wrap.b32 	%r9361, %r9356, %r9357, 18;
	mov.b64 	%rd13126, {%r9361, %r9360};
	xor.b64  	%rd13127, %rd13125, %rd13126;
	shf.l.wrap.b32 	%r9362, %r9356, %r9357, 23;
	shf.l.wrap.b32 	%r9363, %r9357, %r9356, 23;
	mov.b64 	%rd13128, {%r9363, %r9362};
	xor.b64  	%rd13129, %rd13127, %rd13128;
	xor.b64  	%rd13130, %rd13064, %rd13027;
	and.b64  	%rd13131, %rd13101, %rd13130;
	xor.b64  	%rd13132, %rd13131, %rd13027;
	add.s64 	%rd13133, %rd13132, %rd12990;
	add.s64 	%rd13134, %rd13133, %rd13129;
	ld.const.u64 	%rd13135, [%rd12865+56];
	add.s64 	%rd13136, %rd13134, %rd13135;
	add.s64 	%rd13137, %rd13136, %rd13969;
	add.s64 	%rd13138, %rd13137, %rd13001;
	and.b64  	%rd13139, %rd13112, %rd13075;
	or.b64  	%rd13140, %rd13112, %rd13075;
	and.b64  	%rd13141, %rd13140, %rd13038;
	or.b64  	%rd13142, %rd13141, %rd13139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9364,%dummy}, %rd13112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9365}, %rd13112;
	}
	shf.r.wrap.b32 	%r9366, %r9365, %r9364, 28;
	shf.r.wrap.b32 	%r9367, %r9364, %r9365, 28;
	mov.b64 	%rd13143, {%r9367, %r9366};
	shf.l.wrap.b32 	%r9368, %r9364, %r9365, 30;
	shf.l.wrap.b32 	%r9369, %r9365, %r9364, 30;
	mov.b64 	%rd13144, {%r9369, %r9368};
	xor.b64  	%rd13145, %rd13143, %rd13144;
	shf.l.wrap.b32 	%r9370, %r9364, %r9365, 25;
	shf.l.wrap.b32 	%r9371, %r9365, %r9364, 25;
	mov.b64 	%rd13146, {%r9371, %r9370};
	xor.b64  	%rd13147, %rd13145, %rd13146;
	add.s64 	%rd13148, %rd13147, %rd13142;
	add.s64 	%rd13149, %rd13148, %rd13137;
	add.s64 	%rd13150, %rd13975, %rd13968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9372,%dummy}, %rd13970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9373}, %rd13970;
	}
	shf.r.wrap.b32 	%r9374, %r9373, %r9372, 19;
	shf.r.wrap.b32 	%r9375, %r9372, %r9373, 19;
	mov.b64 	%rd13151, {%r9375, %r9374};
	shf.l.wrap.b32 	%r9376, %r9372, %r9373, 3;
	shf.l.wrap.b32 	%r9377, %r9373, %r9372, 3;
	mov.b64 	%rd13152, {%r9377, %r9376};
	xor.b64  	%rd13153, %rd13151, %rd13152;
	shr.u64 	%rd13154, %rd13970, 6;
	xor.b64  	%rd13155, %rd13153, %rd13154;
	add.s64 	%rd13156, %rd13150, %rd13155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9378,%dummy}, %rd13967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9379}, %rd13967;
	}
	shf.r.wrap.b32 	%r9380, %r9379, %r9378, 8;
	shf.r.wrap.b32 	%r9381, %r9378, %r9379, 8;
	mov.b64 	%rd13157, {%r9381, %r9380};
	shf.r.wrap.b32 	%r9382, %r9379, %r9378, 1;
	shf.r.wrap.b32 	%r9383, %r9378, %r9379, 1;
	mov.b64 	%rd13158, {%r9383, %r9382};
	xor.b64  	%rd13159, %rd13158, %rd13157;
	shr.u64 	%rd13160, %rd13967, 7;
	xor.b64  	%rd13161, %rd13159, %rd13160;
	add.s64 	%rd13968, %rd13156, %rd13161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9384,%dummy}, %rd13138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9385}, %rd13138;
	}
	shf.r.wrap.b32 	%r9386, %r9385, %r9384, 14;
	shf.r.wrap.b32 	%r9387, %r9384, %r9385, 14;
	mov.b64 	%rd13162, {%r9387, %r9386};
	shf.r.wrap.b32 	%r9388, %r9385, %r9384, 18;
	shf.r.wrap.b32 	%r9389, %r9384, %r9385, 18;
	mov.b64 	%rd13163, {%r9389, %r9388};
	xor.b64  	%rd13164, %rd13162, %rd13163;
	shf.l.wrap.b32 	%r9390, %r9384, %r9385, 23;
	shf.l.wrap.b32 	%r9391, %r9385, %r9384, 23;
	mov.b64 	%rd13165, {%r9391, %r9390};
	xor.b64  	%rd13166, %rd13164, %rd13165;
	xor.b64  	%rd13167, %rd13101, %rd13064;
	and.b64  	%rd13168, %rd13138, %rd13167;
	xor.b64  	%rd13169, %rd13168, %rd13064;
	add.s64 	%rd13170, %rd13169, %rd13027;
	add.s64 	%rd13171, %rd13170, %rd13166;
	ld.const.u64 	%rd13172, [%rd12865+64];
	add.s64 	%rd13173, %rd13171, %rd13172;
	add.s64 	%rd13174, %rd13173, %rd13968;
	add.s64 	%rd13175, %rd13174, %rd13038;
	and.b64  	%rd13176, %rd13149, %rd13112;
	or.b64  	%rd13177, %rd13149, %rd13112;
	and.b64  	%rd13178, %rd13177, %rd13075;
	or.b64  	%rd13179, %rd13178, %rd13176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9392,%dummy}, %rd13149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9393}, %rd13149;
	}
	shf.r.wrap.b32 	%r9394, %r9393, %r9392, 28;
	shf.r.wrap.b32 	%r9395, %r9392, %r9393, 28;
	mov.b64 	%rd13180, {%r9395, %r9394};
	shf.l.wrap.b32 	%r9396, %r9392, %r9393, 30;
	shf.l.wrap.b32 	%r9397, %r9393, %r9392, 30;
	mov.b64 	%rd13181, {%r9397, %r9396};
	xor.b64  	%rd13182, %rd13180, %rd13181;
	shf.l.wrap.b32 	%r9398, %r9392, %r9393, 25;
	shf.l.wrap.b32 	%r9399, %r9393, %r9392, 25;
	mov.b64 	%rd13183, {%r9399, %r9398};
	xor.b64  	%rd13184, %rd13182, %rd13183;
	add.s64 	%rd13185, %rd13184, %rd13179;
	add.s64 	%rd13186, %rd13185, %rd13174;
	add.s64 	%rd13187, %rd13974, %rd13967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9400,%dummy}, %rd13969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9401}, %rd13969;
	}
	shf.r.wrap.b32 	%r9402, %r9401, %r9400, 19;
	shf.r.wrap.b32 	%r9403, %r9400, %r9401, 19;
	mov.b64 	%rd13188, {%r9403, %r9402};
	shf.l.wrap.b32 	%r9404, %r9400, %r9401, 3;
	shf.l.wrap.b32 	%r9405, %r9401, %r9400, 3;
	mov.b64 	%rd13189, {%r9405, %r9404};
	xor.b64  	%rd13190, %rd13188, %rd13189;
	shr.u64 	%rd13191, %rd13969, 6;
	xor.b64  	%rd13192, %rd13190, %rd13191;
	add.s64 	%rd13193, %rd13187, %rd13192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9406,%dummy}, %rd13966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9407}, %rd13966;
	}
	shf.r.wrap.b32 	%r9408, %r9407, %r9406, 8;
	shf.r.wrap.b32 	%r9409, %r9406, %r9407, 8;
	mov.b64 	%rd13194, {%r9409, %r9408};
	shf.r.wrap.b32 	%r9410, %r9407, %r9406, 1;
	shf.r.wrap.b32 	%r9411, %r9406, %r9407, 1;
	mov.b64 	%rd13195, {%r9411, %r9410};
	xor.b64  	%rd13196, %rd13195, %rd13194;
	shr.u64 	%rd13197, %rd13966, 7;
	xor.b64  	%rd13198, %rd13196, %rd13197;
	add.s64 	%rd13967, %rd13193, %rd13198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9412,%dummy}, %rd13175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9413}, %rd13175;
	}
	shf.r.wrap.b32 	%r9414, %r9413, %r9412, 14;
	shf.r.wrap.b32 	%r9415, %r9412, %r9413, 14;
	mov.b64 	%rd13199, {%r9415, %r9414};
	shf.r.wrap.b32 	%r9416, %r9413, %r9412, 18;
	shf.r.wrap.b32 	%r9417, %r9412, %r9413, 18;
	mov.b64 	%rd13200, {%r9417, %r9416};
	xor.b64  	%rd13201, %rd13199, %rd13200;
	shf.l.wrap.b32 	%r9418, %r9412, %r9413, 23;
	shf.l.wrap.b32 	%r9419, %r9413, %r9412, 23;
	mov.b64 	%rd13202, {%r9419, %r9418};
	xor.b64  	%rd13203, %rd13201, %rd13202;
	xor.b64  	%rd13204, %rd13138, %rd13101;
	and.b64  	%rd13205, %rd13175, %rd13204;
	xor.b64  	%rd13206, %rd13205, %rd13101;
	add.s64 	%rd13207, %rd13206, %rd13064;
	add.s64 	%rd13208, %rd13207, %rd13203;
	ld.const.u64 	%rd13209, [%rd12865+72];
	add.s64 	%rd13210, %rd13208, %rd13209;
	add.s64 	%rd13211, %rd13210, %rd13967;
	add.s64 	%rd13212, %rd13211, %rd13075;
	and.b64  	%rd13213, %rd13186, %rd13149;
	or.b64  	%rd13214, %rd13186, %rd13149;
	and.b64  	%rd13215, %rd13214, %rd13112;
	or.b64  	%rd13216, %rd13215, %rd13213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9420,%dummy}, %rd13186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9421}, %rd13186;
	}
	shf.r.wrap.b32 	%r9422, %r9421, %r9420, 28;
	shf.r.wrap.b32 	%r9423, %r9420, %r9421, 28;
	mov.b64 	%rd13217, {%r9423, %r9422};
	shf.l.wrap.b32 	%r9424, %r9420, %r9421, 30;
	shf.l.wrap.b32 	%r9425, %r9421, %r9420, 30;
	mov.b64 	%rd13218, {%r9425, %r9424};
	xor.b64  	%rd13219, %rd13217, %rd13218;
	shf.l.wrap.b32 	%r9426, %r9420, %r9421, 25;
	shf.l.wrap.b32 	%r9427, %r9421, %r9420, 25;
	mov.b64 	%rd13220, {%r9427, %r9426};
	xor.b64  	%rd13221, %rd13219, %rd13220;
	add.s64 	%rd13222, %rd13221, %rd13216;
	add.s64 	%rd13223, %rd13222, %rd13211;
	add.s64 	%rd13224, %rd13973, %rd13966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9428,%dummy}, %rd13968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9429}, %rd13968;
	}
	shf.r.wrap.b32 	%r9430, %r9429, %r9428, 19;
	shf.r.wrap.b32 	%r9431, %r9428, %r9429, 19;
	mov.b64 	%rd13225, {%r9431, %r9430};
	shf.l.wrap.b32 	%r9432, %r9428, %r9429, 3;
	shf.l.wrap.b32 	%r9433, %r9429, %r9428, 3;
	mov.b64 	%rd13226, {%r9433, %r9432};
	xor.b64  	%rd13227, %rd13225, %rd13226;
	shr.u64 	%rd13228, %rd13968, 6;
	xor.b64  	%rd13229, %rd13227, %rd13228;
	add.s64 	%rd13230, %rd13224, %rd13229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9434,%dummy}, %rd13965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9435}, %rd13965;
	}
	shf.r.wrap.b32 	%r9436, %r9435, %r9434, 8;
	shf.r.wrap.b32 	%r9437, %r9434, %r9435, 8;
	mov.b64 	%rd13231, {%r9437, %r9436};
	shf.r.wrap.b32 	%r9438, %r9435, %r9434, 1;
	shf.r.wrap.b32 	%r9439, %r9434, %r9435, 1;
	mov.b64 	%rd13232, {%r9439, %r9438};
	xor.b64  	%rd13233, %rd13232, %rd13231;
	shr.u64 	%rd13234, %rd13965, 7;
	xor.b64  	%rd13235, %rd13233, %rd13234;
	add.s64 	%rd13966, %rd13230, %rd13235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9440,%dummy}, %rd13212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9441}, %rd13212;
	}
	shf.r.wrap.b32 	%r9442, %r9441, %r9440, 14;
	shf.r.wrap.b32 	%r9443, %r9440, %r9441, 14;
	mov.b64 	%rd13236, {%r9443, %r9442};
	shf.r.wrap.b32 	%r9444, %r9441, %r9440, 18;
	shf.r.wrap.b32 	%r9445, %r9440, %r9441, 18;
	mov.b64 	%rd13237, {%r9445, %r9444};
	xor.b64  	%rd13238, %rd13236, %rd13237;
	shf.l.wrap.b32 	%r9446, %r9440, %r9441, 23;
	shf.l.wrap.b32 	%r9447, %r9441, %r9440, 23;
	mov.b64 	%rd13239, {%r9447, %r9446};
	xor.b64  	%rd13240, %rd13238, %rd13239;
	xor.b64  	%rd13241, %rd13175, %rd13138;
	and.b64  	%rd13242, %rd13212, %rd13241;
	xor.b64  	%rd13243, %rd13242, %rd13138;
	add.s64 	%rd13244, %rd13243, %rd13101;
	add.s64 	%rd13245, %rd13244, %rd13240;
	ld.const.u64 	%rd13246, [%rd12865+80];
	add.s64 	%rd13247, %rd13245, %rd13246;
	add.s64 	%rd13248, %rd13247, %rd13966;
	add.s64 	%rd13249, %rd13248, %rd13112;
	and.b64  	%rd13250, %rd13223, %rd13186;
	or.b64  	%rd13251, %rd13223, %rd13186;
	and.b64  	%rd13252, %rd13251, %rd13149;
	or.b64  	%rd13253, %rd13252, %rd13250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9448,%dummy}, %rd13223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9449}, %rd13223;
	}
	shf.r.wrap.b32 	%r9450, %r9449, %r9448, 28;
	shf.r.wrap.b32 	%r9451, %r9448, %r9449, 28;
	mov.b64 	%rd13254, {%r9451, %r9450};
	shf.l.wrap.b32 	%r9452, %r9448, %r9449, 30;
	shf.l.wrap.b32 	%r9453, %r9449, %r9448, 30;
	mov.b64 	%rd13255, {%r9453, %r9452};
	xor.b64  	%rd13256, %rd13254, %rd13255;
	shf.l.wrap.b32 	%r9454, %r9448, %r9449, 25;
	shf.l.wrap.b32 	%r9455, %r9449, %r9448, 25;
	mov.b64 	%rd13257, {%r9455, %r9454};
	xor.b64  	%rd13258, %rd13256, %rd13257;
	add.s64 	%rd13259, %rd13258, %rd13253;
	add.s64 	%rd13260, %rd13259, %rd13248;
	add.s64 	%rd13261, %rd13972, %rd13965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9456,%dummy}, %rd13967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9457}, %rd13967;
	}
	shf.r.wrap.b32 	%r9458, %r9457, %r9456, 19;
	shf.r.wrap.b32 	%r9459, %r9456, %r9457, 19;
	mov.b64 	%rd13262, {%r9459, %r9458};
	shf.l.wrap.b32 	%r9460, %r9456, %r9457, 3;
	shf.l.wrap.b32 	%r9461, %r9457, %r9456, 3;
	mov.b64 	%rd13263, {%r9461, %r9460};
	xor.b64  	%rd13264, %rd13262, %rd13263;
	shr.u64 	%rd13265, %rd13967, 6;
	xor.b64  	%rd13266, %rd13264, %rd13265;
	add.s64 	%rd13267, %rd13261, %rd13266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9462,%dummy}, %rd13964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9463}, %rd13964;
	}
	shf.r.wrap.b32 	%r9464, %r9463, %r9462, 8;
	shf.r.wrap.b32 	%r9465, %r9462, %r9463, 8;
	mov.b64 	%rd13268, {%r9465, %r9464};
	shf.r.wrap.b32 	%r9466, %r9463, %r9462, 1;
	shf.r.wrap.b32 	%r9467, %r9462, %r9463, 1;
	mov.b64 	%rd13269, {%r9467, %r9466};
	xor.b64  	%rd13270, %rd13269, %rd13268;
	shr.u64 	%rd13271, %rd13964, 7;
	xor.b64  	%rd13272, %rd13270, %rd13271;
	add.s64 	%rd13965, %rd13267, %rd13272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9468,%dummy}, %rd13249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9469}, %rd13249;
	}
	shf.r.wrap.b32 	%r9470, %r9469, %r9468, 14;
	shf.r.wrap.b32 	%r9471, %r9468, %r9469, 14;
	mov.b64 	%rd13273, {%r9471, %r9470};
	shf.r.wrap.b32 	%r9472, %r9469, %r9468, 18;
	shf.r.wrap.b32 	%r9473, %r9468, %r9469, 18;
	mov.b64 	%rd13274, {%r9473, %r9472};
	xor.b64  	%rd13275, %rd13273, %rd13274;
	shf.l.wrap.b32 	%r9474, %r9468, %r9469, 23;
	shf.l.wrap.b32 	%r9475, %r9469, %r9468, 23;
	mov.b64 	%rd13276, {%r9475, %r9474};
	xor.b64  	%rd13277, %rd13275, %rd13276;
	xor.b64  	%rd13278, %rd13212, %rd13175;
	and.b64  	%rd13279, %rd13249, %rd13278;
	xor.b64  	%rd13280, %rd13279, %rd13175;
	add.s64 	%rd13281, %rd13280, %rd13138;
	add.s64 	%rd13282, %rd13281, %rd13277;
	ld.const.u64 	%rd13283, [%rd12865+88];
	add.s64 	%rd13284, %rd13282, %rd13283;
	add.s64 	%rd13285, %rd13284, %rd13965;
	add.s64 	%rd13286, %rd13285, %rd13149;
	and.b64  	%rd13287, %rd13260, %rd13223;
	or.b64  	%rd13288, %rd13260, %rd13223;
	and.b64  	%rd13289, %rd13288, %rd13186;
	or.b64  	%rd13290, %rd13289, %rd13287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9476,%dummy}, %rd13260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9477}, %rd13260;
	}
	shf.r.wrap.b32 	%r9478, %r9477, %r9476, 28;
	shf.r.wrap.b32 	%r9479, %r9476, %r9477, 28;
	mov.b64 	%rd13291, {%r9479, %r9478};
	shf.l.wrap.b32 	%r9480, %r9476, %r9477, 30;
	shf.l.wrap.b32 	%r9481, %r9477, %r9476, 30;
	mov.b64 	%rd13292, {%r9481, %r9480};
	xor.b64  	%rd13293, %rd13291, %rd13292;
	shf.l.wrap.b32 	%r9482, %r9476, %r9477, 25;
	shf.l.wrap.b32 	%r9483, %r9477, %r9476, 25;
	mov.b64 	%rd13294, {%r9483, %r9482};
	xor.b64  	%rd13295, %rd13293, %rd13294;
	add.s64 	%rd13296, %rd13295, %rd13290;
	add.s64 	%rd13297, %rd13296, %rd13285;
	add.s64 	%rd13298, %rd13971, %rd13964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9484,%dummy}, %rd13966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9485}, %rd13966;
	}
	shf.r.wrap.b32 	%r9486, %r9485, %r9484, 19;
	shf.r.wrap.b32 	%r9487, %r9484, %r9485, 19;
	mov.b64 	%rd13299, {%r9487, %r9486};
	shf.l.wrap.b32 	%r9488, %r9484, %r9485, 3;
	shf.l.wrap.b32 	%r9489, %r9485, %r9484, 3;
	mov.b64 	%rd13300, {%r9489, %r9488};
	xor.b64  	%rd13301, %rd13299, %rd13300;
	shr.u64 	%rd13302, %rd13966, 6;
	xor.b64  	%rd13303, %rd13301, %rd13302;
	add.s64 	%rd13304, %rd13298, %rd13303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9490,%dummy}, %rd13963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9491}, %rd13963;
	}
	shf.r.wrap.b32 	%r9492, %r9491, %r9490, 8;
	shf.r.wrap.b32 	%r9493, %r9490, %r9491, 8;
	mov.b64 	%rd13305, {%r9493, %r9492};
	shf.r.wrap.b32 	%r9494, %r9491, %r9490, 1;
	shf.r.wrap.b32 	%r9495, %r9490, %r9491, 1;
	mov.b64 	%rd13306, {%r9495, %r9494};
	xor.b64  	%rd13307, %rd13306, %rd13305;
	shr.u64 	%rd13308, %rd13963, 7;
	xor.b64  	%rd13309, %rd13307, %rd13308;
	add.s64 	%rd13964, %rd13304, %rd13309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9496,%dummy}, %rd13286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9497}, %rd13286;
	}
	shf.r.wrap.b32 	%r9498, %r9497, %r9496, 14;
	shf.r.wrap.b32 	%r9499, %r9496, %r9497, 14;
	mov.b64 	%rd13310, {%r9499, %r9498};
	shf.r.wrap.b32 	%r9500, %r9497, %r9496, 18;
	shf.r.wrap.b32 	%r9501, %r9496, %r9497, 18;
	mov.b64 	%rd13311, {%r9501, %r9500};
	xor.b64  	%rd13312, %rd13310, %rd13311;
	shf.l.wrap.b32 	%r9502, %r9496, %r9497, 23;
	shf.l.wrap.b32 	%r9503, %r9497, %r9496, 23;
	mov.b64 	%rd13313, {%r9503, %r9502};
	xor.b64  	%rd13314, %rd13312, %rd13313;
	xor.b64  	%rd13315, %rd13249, %rd13212;
	and.b64  	%rd13316, %rd13286, %rd13315;
	xor.b64  	%rd13317, %rd13316, %rd13212;
	add.s64 	%rd13318, %rd13317, %rd13175;
	add.s64 	%rd13319, %rd13318, %rd13314;
	ld.const.u64 	%rd13320, [%rd12865+96];
	add.s64 	%rd13321, %rd13319, %rd13320;
	add.s64 	%rd13322, %rd13321, %rd13964;
	add.s64 	%rd13984, %rd13322, %rd13186;
	and.b64  	%rd13323, %rd13297, %rd13260;
	or.b64  	%rd13324, %rd13297, %rd13260;
	and.b64  	%rd13325, %rd13324, %rd13223;
	or.b64  	%rd13326, %rd13325, %rd13323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9504,%dummy}, %rd13297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9505}, %rd13297;
	}
	shf.r.wrap.b32 	%r9506, %r9505, %r9504, 28;
	shf.r.wrap.b32 	%r9507, %r9504, %r9505, 28;
	mov.b64 	%rd13327, {%r9507, %r9506};
	shf.l.wrap.b32 	%r9508, %r9504, %r9505, 30;
	shf.l.wrap.b32 	%r9509, %r9505, %r9504, 30;
	mov.b64 	%rd13328, {%r9509, %r9508};
	xor.b64  	%rd13329, %rd13327, %rd13328;
	shf.l.wrap.b32 	%r9510, %r9504, %r9505, 25;
	shf.l.wrap.b32 	%r9511, %r9505, %r9504, 25;
	mov.b64 	%rd13330, {%r9511, %r9510};
	xor.b64  	%rd13331, %rd13329, %rd13330;
	add.s64 	%rd13332, %rd13331, %rd13326;
	add.s64 	%rd13980, %rd13332, %rd13322;
	add.s64 	%rd13333, %rd13970, %rd13963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9512,%dummy}, %rd13965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9513}, %rd13965;
	}
	shf.r.wrap.b32 	%r9514, %r9513, %r9512, 19;
	shf.r.wrap.b32 	%r9515, %r9512, %r9513, 19;
	mov.b64 	%rd13334, {%r9515, %r9514};
	shf.l.wrap.b32 	%r9516, %r9512, %r9513, 3;
	shf.l.wrap.b32 	%r9517, %r9513, %r9512, 3;
	mov.b64 	%rd13335, {%r9517, %r9516};
	xor.b64  	%rd13336, %rd13334, %rd13335;
	shr.u64 	%rd13337, %rd13965, 6;
	xor.b64  	%rd13338, %rd13336, %rd13337;
	add.s64 	%rd13339, %rd13333, %rd13338;
	shf.r.wrap.b32 	%r9518, %r9148, %r9149, 8;
	shf.r.wrap.b32 	%r9519, %r9149, %r9148, 8;
	mov.b64 	%rd13340, {%r9519, %r9518};
	shf.r.wrap.b32 	%r9520, %r9148, %r9149, 1;
	shf.r.wrap.b32 	%r9521, %r9149, %r9148, 1;
	mov.b64 	%rd13341, {%r9521, %r9520};
	xor.b64  	%rd13342, %rd13341, %rd13340;
	shr.u64 	%rd13343, %rd13962, 7;
	xor.b64  	%rd13344, %rd13342, %rd13343;
	add.s64 	%rd13963, %rd13339, %rd13344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9522,%dummy}, %rd13984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9523}, %rd13984;
	}
	shf.r.wrap.b32 	%r9524, %r9523, %r9522, 14;
	shf.r.wrap.b32 	%r9525, %r9522, %r9523, 14;
	mov.b64 	%rd13345, {%r9525, %r9524};
	shf.r.wrap.b32 	%r9526, %r9523, %r9522, 18;
	shf.r.wrap.b32 	%r9527, %r9522, %r9523, 18;
	mov.b64 	%rd13346, {%r9527, %r9526};
	xor.b64  	%rd13347, %rd13345, %rd13346;
	shf.l.wrap.b32 	%r9528, %r9522, %r9523, 23;
	shf.l.wrap.b32 	%r9529, %r9523, %r9522, 23;
	mov.b64 	%rd13348, {%r9529, %r9528};
	xor.b64  	%rd13349, %rd13347, %rd13348;
	xor.b64  	%rd13350, %rd13286, %rd13249;
	and.b64  	%rd13351, %rd13984, %rd13350;
	xor.b64  	%rd13352, %rd13351, %rd13249;
	add.s64 	%rd13353, %rd13352, %rd13212;
	add.s64 	%rd13354, %rd13353, %rd13349;
	ld.const.u64 	%rd13355, [%rd12865+104];
	add.s64 	%rd13356, %rd13354, %rd13355;
	add.s64 	%rd13357, %rd13356, %rd13963;
	add.s64 	%rd13983, %rd13357, %rd13223;
	and.b64  	%rd13358, %rd13980, %rd13297;
	or.b64  	%rd13359, %rd13980, %rd13297;
	and.b64  	%rd13360, %rd13359, %rd13260;
	or.b64  	%rd13361, %rd13360, %rd13358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9530,%dummy}, %rd13980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9531}, %rd13980;
	}
	shf.r.wrap.b32 	%r9532, %r9531, %r9530, 28;
	shf.r.wrap.b32 	%r9533, %r9530, %r9531, 28;
	mov.b64 	%rd13362, {%r9533, %r9532};
	shf.l.wrap.b32 	%r9534, %r9530, %r9531, 30;
	shf.l.wrap.b32 	%r9535, %r9531, %r9530, 30;
	mov.b64 	%rd13363, {%r9535, %r9534};
	xor.b64  	%rd13364, %rd13362, %rd13363;
	shf.l.wrap.b32 	%r9536, %r9530, %r9531, 25;
	shf.l.wrap.b32 	%r9537, %r9531, %r9530, 25;
	mov.b64 	%rd13365, {%r9537, %r9536};
	xor.b64  	%rd13366, %rd13364, %rd13365;
	add.s64 	%rd13367, %rd13366, %rd13361;
	add.s64 	%rd13979, %rd13367, %rd13357;
	add.s64 	%rd13368, %rd13969, %rd13962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9538,%dummy}, %rd13964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9539}, %rd13964;
	}
	shf.r.wrap.b32 	%r9540, %r9539, %r9538, 19;
	shf.r.wrap.b32 	%r9541, %r9538, %r9539, 19;
	mov.b64 	%rd13369, {%r9541, %r9540};
	shf.l.wrap.b32 	%r9542, %r9538, %r9539, 3;
	shf.l.wrap.b32 	%r9543, %r9539, %r9538, 3;
	mov.b64 	%rd13370, {%r9543, %r9542};
	xor.b64  	%rd13371, %rd13369, %rd13370;
	shr.u64 	%rd13372, %rd13964, 6;
	xor.b64  	%rd13373, %rd13371, %rd13372;
	add.s64 	%rd13374, %rd13368, %rd13373;
	shf.r.wrap.b32 	%r9544, %r9176, %r9177, 8;
	shf.r.wrap.b32 	%r9545, %r9177, %r9176, 8;
	mov.b64 	%rd13375, {%r9545, %r9544};
	shf.r.wrap.b32 	%r9546, %r9176, %r9177, 1;
	shf.r.wrap.b32 	%r9547, %r9177, %r9176, 1;
	mov.b64 	%rd13376, {%r9547, %r9546};
	xor.b64  	%rd13377, %rd13376, %rd13375;
	shr.u64 	%rd13378, %rd13961, 7;
	xor.b64  	%rd13379, %rd13377, %rd13378;
	add.s64 	%rd13962, %rd13374, %rd13379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9548,%dummy}, %rd13983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9549}, %rd13983;
	}
	shf.r.wrap.b32 	%r9550, %r9549, %r9548, 14;
	shf.r.wrap.b32 	%r9551, %r9548, %r9549, 14;
	mov.b64 	%rd13380, {%r9551, %r9550};
	shf.r.wrap.b32 	%r9552, %r9549, %r9548, 18;
	shf.r.wrap.b32 	%r9553, %r9548, %r9549, 18;
	mov.b64 	%rd13381, {%r9553, %r9552};
	xor.b64  	%rd13382, %rd13380, %rd13381;
	shf.l.wrap.b32 	%r9554, %r9548, %r9549, 23;
	shf.l.wrap.b32 	%r9555, %r9549, %r9548, 23;
	mov.b64 	%rd13383, {%r9555, %r9554};
	xor.b64  	%rd13384, %rd13382, %rd13383;
	xor.b64  	%rd13385, %rd13984, %rd13286;
	and.b64  	%rd13386, %rd13983, %rd13385;
	xor.b64  	%rd13387, %rd13386, %rd13286;
	add.s64 	%rd13388, %rd13387, %rd13249;
	add.s64 	%rd13389, %rd13388, %rd13384;
	ld.const.u64 	%rd13390, [%rd12865+112];
	add.s64 	%rd13391, %rd13389, %rd13390;
	add.s64 	%rd13392, %rd13391, %rd13962;
	add.s64 	%rd13982, %rd13392, %rd13260;
	and.b64  	%rd13393, %rd13979, %rd13980;
	or.b64  	%rd13394, %rd13979, %rd13980;
	and.b64  	%rd13395, %rd13394, %rd13297;
	or.b64  	%rd13396, %rd13395, %rd13393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9556,%dummy}, %rd13979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9557}, %rd13979;
	}
	shf.r.wrap.b32 	%r9558, %r9557, %r9556, 28;
	shf.r.wrap.b32 	%r9559, %r9556, %r9557, 28;
	mov.b64 	%rd13397, {%r9559, %r9558};
	shf.l.wrap.b32 	%r9560, %r9556, %r9557, 30;
	shf.l.wrap.b32 	%r9561, %r9557, %r9556, 30;
	mov.b64 	%rd13398, {%r9561, %r9560};
	xor.b64  	%rd13399, %rd13397, %rd13398;
	shf.l.wrap.b32 	%r9562, %r9556, %r9557, 25;
	shf.l.wrap.b32 	%r9563, %r9557, %r9556, 25;
	mov.b64 	%rd13400, {%r9563, %r9562};
	xor.b64  	%rd13401, %rd13399, %rd13400;
	add.s64 	%rd13402, %rd13401, %rd13396;
	add.s64 	%rd13978, %rd13402, %rd13392;
	add.s64 	%rd13403, %rd13968, %rd13961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9564,%dummy}, %rd13963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9565}, %rd13963;
	}
	shf.r.wrap.b32 	%r9566, %r9565, %r9564, 19;
	shf.r.wrap.b32 	%r9567, %r9564, %r9565, 19;
	mov.b64 	%rd13404, {%r9567, %r9566};
	shf.l.wrap.b32 	%r9568, %r9564, %r9565, 3;
	shf.l.wrap.b32 	%r9569, %r9565, %r9564, 3;
	mov.b64 	%rd13405, {%r9569, %r9568};
	xor.b64  	%rd13406, %rd13404, %rd13405;
	shr.u64 	%rd13407, %rd13963, 6;
	xor.b64  	%rd13408, %rd13406, %rd13407;
	add.s64 	%rd13409, %rd13403, %rd13408;
	shf.r.wrap.b32 	%r9570, %r9205, %r9204, 1;
	shf.r.wrap.b32 	%r9571, %r9204, %r9205, 1;
	mov.b64 	%rd13410, {%r9571, %r9570};
	shf.r.wrap.b32 	%r9572, %r9205, %r9204, 8;
	shf.r.wrap.b32 	%r9573, %r9204, %r9205, 8;
	mov.b64 	%rd13411, {%r9573, %r9572};
	xor.b64  	%rd13412, %rd13410, %rd13411;
	shr.u64 	%rd13413, %rd13976, 7;
	xor.b64  	%rd13414, %rd13412, %rd13413;
	add.s64 	%rd13961, %rd13409, %rd13414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9574,%dummy}, %rd13982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9575}, %rd13982;
	}
	shf.r.wrap.b32 	%r9576, %r9575, %r9574, 14;
	shf.r.wrap.b32 	%r9577, %r9574, %r9575, 14;
	mov.b64 	%rd13415, {%r9577, %r9576};
	shf.r.wrap.b32 	%r9578, %r9575, %r9574, 18;
	shf.r.wrap.b32 	%r9579, %r9574, %r9575, 18;
	mov.b64 	%rd13416, {%r9579, %r9578};
	xor.b64  	%rd13417, %rd13415, %rd13416;
	shf.l.wrap.b32 	%r9580, %r9574, %r9575, 23;
	shf.l.wrap.b32 	%r9581, %r9575, %r9574, 23;
	mov.b64 	%rd13418, {%r9581, %r9580};
	xor.b64  	%rd13419, %rd13417, %rd13418;
	xor.b64  	%rd13420, %rd13983, %rd13984;
	and.b64  	%rd13421, %rd13982, %rd13420;
	xor.b64  	%rd13422, %rd13421, %rd13984;
	add.s64 	%rd13423, %rd13422, %rd13286;
	add.s64 	%rd13424, %rd13423, %rd13419;
	ld.const.u64 	%rd13425, [%rd12865+120];
	add.s64 	%rd13426, %rd13424, %rd13425;
	add.s64 	%rd13427, %rd13426, %rd13961;
	add.s64 	%rd13981, %rd13427, %rd13297;
	and.b64  	%rd13428, %rd13978, %rd13979;
	or.b64  	%rd13429, %rd13978, %rd13979;
	and.b64  	%rd13430, %rd13429, %rd13980;
	or.b64  	%rd13431, %rd13430, %rd13428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9582,%dummy}, %rd13978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9583}, %rd13978;
	}
	shf.r.wrap.b32 	%r9584, %r9583, %r9582, 28;
	shf.r.wrap.b32 	%r9585, %r9582, %r9583, 28;
	mov.b64 	%rd13432, {%r9585, %r9584};
	shf.l.wrap.b32 	%r9586, %r9582, %r9583, 30;
	shf.l.wrap.b32 	%r9587, %r9583, %r9582, 30;
	mov.b64 	%rd13433, {%r9587, %r9586};
	xor.b64  	%rd13434, %rd13432, %rd13433;
	shf.l.wrap.b32 	%r9588, %r9582, %r9583, 25;
	shf.l.wrap.b32 	%r9589, %r9583, %r9582, 25;
	mov.b64 	%rd13435, {%r9589, %r9588};
	xor.b64  	%rd13436, %rd13434, %rd13435;
	add.s64 	%rd13437, %rd13436, %rd13431;
	add.s64 	%rd13977, %rd13437, %rd13427;
	add.s32 	%r9761, %r9761, 16;
	setp.ne.s32 	%p113, %r9761, 80;
	@%p113 bra 	$L__BB0_160;

	shl.b32 	%r9688, %r2, 3;
	cvt.u64.u32 	%rd13505, %r9688;
	and.b64  	%rd13504, %rd13505, 56;
	mov.u64 	%rd13503, clear_mask;
	add.s64 	%rd13502, %rd13503, %rd13504;
	and.b32  	%r9677, %r2, 7;
	add.s64 	%rd13438, %rd13912, %rd13977;
	st.local.u64 	[%rd2+-72], %rd13438;
	add.s64 	%rd13439, %rd13911, %rd13978;
	st.local.u64 	[%rd2+-64], %rd13439;
	add.s64 	%rd13440, %rd13910, %rd13979;
	st.local.u64 	[%rd2+-56], %rd13440;
	add.s64 	%rd13441, %rd13909, %rd13980;
	st.local.u64 	[%rd2+-48], %rd13441;
	add.s64 	%rd13442, %rd13908, %rd13981;
	st.local.u64 	[%rd2+-40], %rd13442;
	add.s64 	%rd13443, %rd13907, %rd13982;
	st.local.u64 	[%rd2+-32], %rd13443;
	add.s64 	%rd13444, %rd13906, %rd13983;
	st.local.u64 	[%rd2+-24], %rd13444;
	add.s64 	%rd13445, %rd13905, %rd13984;
	st.local.u64 	[%rd2+-16], %rd13445;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9590, %temp}, %rd13438;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9591}, %rd13438;
	}
	mov.u32 	%r9592, 291;
	mov.u32 	%r9593, 0;
	prmt.b32 	%r9594, %r9590, %r9593, %r9592;
	prmt.b32 	%r9595, %r9591, %r9593, %r9592;
	mov.b64 	%rd13446, {%r9595, %r9594};
	st.local.u64 	[%rd212+64], %rd13446;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9596, %temp}, %rd13439;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9597}, %rd13439;
	}
	prmt.b32 	%r9598, %r9596, %r9593, %r9592;
	prmt.b32 	%r9599, %r9597, %r9593, %r9592;
	mov.b64 	%rd13447, {%r9599, %r9598};
	st.local.u64 	[%rd212+72], %rd13447;
	shr.u32 	%r9600, %r2, 3;
	shl.b32 	%r9601, %r9600, 3;
	cvt.u64.u32 	%rd13450, %r9601;
	add.s64 	%rd13451, %rd212, %rd13450;
	ld.const.u64 	%rd13452, [%rd13502];
	ld.local.u64 	%rd13453, [%rd13451+80];
	and.b64  	%rd13454, %rd13452, %rd13453;
	st.local.u64 	[%rd13451+80], %rd13454;
	setp.ne.s32 	%p114, %r9677, 0;
	selp.u32 	%r9603, 1, 0, %p114;
	add.s32 	%r9762, %r9600, %r9603;
	setp.gt.u32 	%p115, %r9762, 2;
	@%p115 bra 	$L__BB0_164;

	mul.wide.u32 	%rd13457, %r9762, 8;
	add.s64 	%rd13458, %rd212, %rd13457;
	add.s64 	%rd13985, %rd13458, 80;

$L__BB0_163:
	mov.u64 	%rd13459, 0;
	st.local.u64 	[%rd13985], %rd13459;
	add.s64 	%rd13985, %rd13985, 8;
	add.s32 	%r9762, %r9762, 1;
	setp.lt.u32 	%p116, %r9762, 3;
	@%p116 bra 	$L__BB0_163;

$L__BB0_164:
	and.b32  	%r9604, %r9, 7;
	shr.u32 	%r9605, %r9, 3;
	shl.b32 	%r9606, %r9605, 3;
	cvt.u64.u32 	%rd13462, %r9606;
	add.s64 	%rd13463, %rd212, %rd13462;
	shl.b32 	%r9607, %r9, 3;
	cvt.u64.u32 	%rd13464, %r9607;
	and.b64  	%rd13465, %rd13464, 56;
	add.s64 	%rd13467, %rd1255, %rd13465;
	ld.const.u64 	%rd13468, [%rd13467];
	ld.local.u64 	%rd13469, [%rd13463+64];
	and.b64  	%rd13470, %rd13468, %rd13469;
	st.local.u64 	[%rd13463+64], %rd13470;
	setp.ne.s32 	%p117, %r9604, 0;
	selp.u32 	%r9608, 1, 0, %p117;
	add.s32 	%r9763, %r9605, %r9608;
	setp.gt.u32 	%p118, %r9763, 1;
	@%p118 bra 	$L__BB0_166;

$L__BB0_165:
	mul.wide.u32 	%rd13471, %r9763, 8;
	add.s64 	%rd13472, %rd212, %rd13471;
	mov.u64 	%rd13473, 0;
	st.local.u64 	[%rd13472+64], %rd13473;
	add.s32 	%r9610, %r9763, 1;
	mov.u32 	%r9763, 1;
	setp.lt.u32 	%p119, %r9610, 2;
	@%p119 bra 	$L__BB0_165;

$L__BB0_166:
	mov.b32 	%r9683, %envreg3;
	mov.u32 	%r9682, %tid.x;
	add.s32 	%r9681, %r9682, %r9683;
	mov.u32 	%r9680, %ctaid.x;
	mov.u32 	%r9679, %ntid.x;
	mad.lo.s32 	%r9678, %r9679, %r9680, %r9681;
	ld.param.u64 	%rd13500, [kernel_prepare_param_2];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9611, %temp}, %rd622;
	}
	mov.u32 	%r9612, 291;
	mov.u32 	%r9613, 0;
	prmt.b32 	%r9614, %r9611, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9615}, %rd622;
	}
	prmt.b32 	%r9616, %r9615, %r9613, %r9612;
	mov.b64 	%rd13474, {%r9616, %r9614};
	mul.wide.s32 	%rd13475, %r9678, 104;
	add.s64 	%rd13476, %rd13500, %rd13475;
	st.global.u64 	[%rd13476], %rd13474;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9617, %temp}, %rd623;
	}
	prmt.b32 	%r9618, %r9617, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9619}, %rd623;
	}
	prmt.b32 	%r9620, %r9619, %r9613, %r9612;
	mov.b64 	%rd13477, {%r9620, %r9618};
	st.global.u64 	[%rd13476+8], %rd13477;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9621, %temp}, %rd624;
	}
	prmt.b32 	%r9622, %r9621, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9623}, %rd624;
	}
	prmt.b32 	%r9624, %r9623, %r9613, %r9612;
	mov.b64 	%rd13478, {%r9624, %r9622};
	st.global.u64 	[%rd13476+16], %rd13478;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9625, %temp}, %rd625;
	}
	prmt.b32 	%r9626, %r9625, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9627}, %rd625;
	}
	prmt.b32 	%r9628, %r9627, %r9613, %r9612;
	mov.b64 	%rd13479, {%r9628, %r9626};
	st.global.u64 	[%rd13476+24], %rd13479;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9629, %temp}, %rd626;
	}
	prmt.b32 	%r9630, %r9629, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9631}, %rd626;
	}
	prmt.b32 	%r9632, %r9631, %r9613, %r9612;
	mov.b64 	%rd13480, {%r9632, %r9630};
	st.global.u64 	[%rd13476+32], %rd13480;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9633, %temp}, %rd627;
	}
	prmt.b32 	%r9634, %r9633, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9635}, %rd627;
	}
	prmt.b32 	%r9636, %r9635, %r9613, %r9612;
	mov.b64 	%rd13481, {%r9636, %r9634};
	st.global.u64 	[%rd13476+40], %rd13481;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9637, %temp}, %rd628;
	}
	prmt.b32 	%r9638, %r9637, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9639}, %rd628;
	}
	prmt.b32 	%r9640, %r9639, %r9613, %r9612;
	mov.b64 	%rd13482, {%r9640, %r9638};
	st.global.u64 	[%rd13476+48], %rd13482;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9641, %temp}, %rd629;
	}
	prmt.b32 	%r9642, %r9641, %r9613, %r9612;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9643}, %rd629;
	}
	prmt.b32 	%r9644, %r9643, %r9613, %r9612;
	mov.b64 	%rd13483, {%r9644, %r9642};
	st.global.u64 	[%rd13476+56], %rd13483;
	ld.local.u64 	%rd13484, [%rd212+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9645, %temp}, %rd13484;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9646}, %rd13484;
	}
	prmt.b32 	%r9647, %r9645, %r9613, %r9612;
	prmt.b32 	%r9648, %r9646, %r9613, %r9612;
	mov.b64 	%rd13485, {%r9648, %r9647};
	st.global.u64 	[%rd13476+64], %rd13485;
	ld.local.u64 	%rd13486, [%rd212+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9649, %temp}, %rd13486;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9650}, %rd13486;
	}
	prmt.b32 	%r9651, %r9649, %r9613, %r9612;
	prmt.b32 	%r9652, %r9650, %r9613, %r9612;
	mov.b64 	%rd13487, {%r9652, %r9651};
	st.global.u64 	[%rd13476+72], %rd13487;
	ld.local.u64 	%rd13488, [%rd212+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9653, %temp}, %rd13488;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9654}, %rd13488;
	}
	prmt.b32 	%r9655, %r9653, %r9613, %r9612;
	prmt.b32 	%r9656, %r9654, %r9613, %r9612;
	mov.b64 	%rd13489, {%r9656, %r9655};
	st.global.u64 	[%rd13476+80], %rd13489;
	ld.local.u64 	%rd13490, [%rd212+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9657, %temp}, %rd13490;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9658}, %rd13490;
	}
	prmt.b32 	%r9659, %r9657, %r9613, %r9612;
	prmt.b32 	%r9660, %r9658, %r9613, %r9612;
	mov.b64 	%rd13491, {%r9660, %r9659};
	st.global.u64 	[%rd13476+88], %rd13491;
	ld.local.u64 	%rd13492, [%rd212+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9661, %temp}, %rd13492;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9662}, %rd13492;
	}
	prmt.b32 	%r9663, %r9661, %r9613, %r9612;
	prmt.b32 	%r9664, %r9662, %r9613, %r9612;
	mov.b64 	%rd13493, {%r9664, %r9663};
	st.global.u64 	[%rd13476+96], %rd13493;
	ret;

}
	// .globl	kernel_preprocess
.entry kernel_preprocess(
	.param .u64 .ptr .const .align 8 kernel_preprocess_param_0,
	.param .u64 .ptr .global .align 8 kernel_preprocess_param_1,
	.param .u64 .ptr .global .align 8 kernel_preprocess_param_2,
	.param .u64 .ptr .global .align 8 kernel_preprocess_param_3
)
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<117>;
	.reg .b64 	%rd<190>;


	ld.param.u64 	%rd30, [kernel_preprocess_param_1];
	ld.param.u64 	%rd31, [kernel_preprocess_param_2];
	ld.param.u64 	%rd27, [kernel_preprocess_param_3];
	mov.b32 	%r24, %envreg3;
	mov.u32 	%r25, %ctaid.x;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	add.s32 	%r28, %r27, %r24;
	mad.lo.s32 	%r29, %r26, %r25, %r28;
	cvt.s64.s32 	%rd1, %r29;
	mul.wide.s32 	%rd32, %r29, 104;
	add.s64 	%rd33, %rd31, %rd32;
	ld.global.nc.u64 	%rd2, [%rd33+64];
	ld.global.nc.u64 	%rd3, [%rd33+72];
	ld.global.nc.u64 	%rd4, [%rd33+80];
	ld.global.nc.u64 	%rd5, [%rd33+88];
	ld.global.nc.u64 	%rd6, [%rd33+96];
	mov.b32 	%r30, %envreg6;
	mul.lo.s32 	%r31, %r30, %r26;
	cvt.s64.s32 	%rd7, %r31;
	mul.wide.s32 	%rd34, %r29, 32;
	add.s64 	%rd8, %rd30, %rd34;
	mul.wide.s32 	%rd35, %r31, 64;
	mul.wide.s32 	%rd9, %r29, 8;
	add.s64 	%rd10, %rd35, %rd9;
	mul.wide.s32 	%rd11, %r31, 72;
	mul.wide.s32 	%rd12, %r31, 8;
	mov.u64 	%rd189, 0;
	mov.u64 	%rd188, generator_index;
	mov.u32 	%r112, 1;
	mov.u64 	%rd187, %rd27;

$L__BB1_1:
	mov.u64 	%rd186, 0;
	add.s64 	%rd16, %rd187, %rd9;
	st.global.u64 	[%rd16], %rd186;
	add.s64 	%rd17, %rd16, %rd12;
	st.global.u64 	[%rd17], %rd186;
	add.s64 	%rd18, %rd17, %rd12;
	st.global.u64 	[%rd18], %rd186;
	add.s64 	%rd37, %rd18, %rd12;
	st.global.u64 	[%rd37], %rd186;
	add.s64 	%rd38, %rd37, %rd12;
	st.global.u64 	[%rd38], %rd186;
	add.s64 	%rd39, %rd38, %rd12;
	st.global.u64 	[%rd39], %rd186;
	add.s64 	%rd40, %rd39, %rd12;
	st.global.u64 	[%rd40], %rd186;
	add.s64 	%rd41, %rd40, %rd12;
	st.global.u64 	[%rd41], %rd186;
	and.b64  	%rd19, %rd189, 2147483644;
	setp.ne.s64 	%p1, %rd19, 4;
	mov.u32 	%r114, 0;
	@%p1 bra 	$L__BB1_3;

	st.global.u64 	[%rd16], %rd4;
	st.global.u64 	[%rd17], %rd5;
	st.global.u64 	[%rd18], %rd6;
	ld.global.nc.u32 	%r114, [%rd8];

$L__BB1_3:
	ld.const.u32 	%r110, [%rd188];
	mul.wide.u32 	%rd42, %r110, -1431655765;
	shr.u64 	%rd43, %rd42, 33;
	cvt.u32.u64 	%r33, %rd43;
	mul.lo.s32 	%r34, %r33, 3;
	sub.s32 	%r35, %r110, %r34;
	setp.eq.s32 	%p2, %r35, 0;
	@%p2 bra 	$L__BB1_9;

	and.b32  	%r5, %r114, 7;
	shl.b32 	%r36, %r114, 3;
	and.b32  	%r37, %r36, 56;
	shr.u32 	%r6, %r114, 3;
	add.s32 	%r38, %r112, %r6;
	add.s32 	%r39, %r38, -1;
	cvt.u64.u32 	%rd44, %r39;
	mul.lo.s64 	%rd45, %rd44, %rd7;
	add.s64 	%rd46, %rd45, %rd1;
	shl.b64 	%rd47, %rd46, 3;
	and.b64  	%rd48, %rd47, 34359738360;
	add.s64 	%rd49, %rd27, %rd48;
	cvt.u64.u32 	%rd20, %r37;
	shr.u64 	%rd50, %rd2, %r37;
	ld.global.u64 	%rd51, [%rd49];
	or.b64  	%rd52, %rd50, %rd51;
	st.global.u64 	[%rd49], %rd52;
	setp.gt.u32 	%p3, %r114, 55;
	@%p3 bra 	$L__BB1_6;

	cvt.u32.u64 	%r40, %rd20;
	cvt.u64.u32 	%rd53, %r38;
	mul.lo.s64 	%rd54, %rd53, %rd7;
	add.s64 	%rd55, %rd54, %rd1;
	neg.s32 	%r42, %r40;
	and.b32  	%r43, %r42, 56;
	shl.b64 	%rd56, %rd2, %r43;
	setp.eq.s32 	%p4, %r5, 0;
	selp.b64 	%rd57, 0, %rd56, %p4;
	shl.b64 	%rd58, %rd55, 3;
	and.b64  	%rd59, %rd58, 34359738360;
	add.s64 	%rd60, %rd27, %rd59;
	st.global.u64 	[%rd60], %rd57;

$L__BB1_6:
	add.s32 	%r44, %r114, 8;
	shr.u32 	%r7, %r44, 3;
	add.s32 	%r45, %r112, %r7;
	add.s32 	%r46, %r45, -1;
	cvt.u64.u32 	%rd61, %r46;
	mul.lo.s64 	%rd62, %rd61, %rd7;
	add.s64 	%rd63, %rd62, %rd1;
	shl.b64 	%rd64, %rd63, 3;
	and.b64  	%rd65, %rd64, 34359738360;
	add.s64 	%rd66, %rd27, %rd65;
	cvt.u32.u64 	%r47, %rd20;
	shr.u64 	%rd67, %rd3, %r47;
	ld.global.u64 	%rd68, [%rd66];
	or.b64  	%rd69, %rd67, %rd68;
	st.global.u64 	[%rd66], %rd69;
	setp.gt.u32 	%p5, %r44, 55;
	@%p5 bra 	$L__BB1_8;

	cvt.u64.u32 	%rd70, %r45;
	mul.lo.s64 	%rd71, %rd70, %rd7;
	add.s64 	%rd72, %rd71, %rd1;
	neg.s32 	%r50, %r47;
	and.b32  	%r51, %r50, 56;
	shl.b64 	%rd73, %rd3, %r51;
	setp.eq.s32 	%p6, %r5, 0;
	selp.b64 	%rd74, 0, %rd73, %p6;
	shl.b64 	%rd75, %rd72, 3;
	and.b64  	%rd76, %rd75, 34359738360;
	add.s64 	%rd77, %rd27, %rd76;
	st.global.u64 	[%rd77], %rd74;

$L__BB1_8:
	ld.param.u64 	%rd184, [kernel_preprocess_param_0];
	ld.const.u32 	%r52, [%rd184+4];
	add.s32 	%r114, %r52, %r114;

$L__BB1_9:
	ld.const.u32 	%r111, [%rd188];
	mul.wide.u32 	%rd78, %r111, 613566757;
	shr.u64 	%rd79, %rd78, 32;
	cvt.u32.u64 	%r53, %rd79;
	sub.s32 	%r54, %r111, %r53;
	shr.u32 	%r55, %r54, 1;
	add.s32 	%r56, %r55, %r53;
	shr.u32 	%r57, %r56, 2;
	mul.lo.s32 	%r58, %r57, 7;
	sub.s32 	%r59, %r111, %r58;
	setp.eq.s32 	%p7, %r59, 0;
	@%p7 bra 	$L__BB1_17;

	and.b32  	%r10, %r114, 7;
	shl.b32 	%r60, %r114, 3;
	and.b32  	%r61, %r60, 56;
	shr.u32 	%r11, %r114, 3;
	add.s32 	%r62, %r112, %r11;
	add.s32 	%r63, %r62, -1;
	cvt.u64.u32 	%rd80, %r63;
	mul.lo.s64 	%rd81, %rd80, %rd7;
	add.s64 	%rd82, %rd81, %rd1;
	shl.b64 	%rd83, %rd82, 3;
	and.b64  	%rd84, %rd83, 34359738360;
	add.s64 	%rd85, %rd27, %rd84;
	cvt.u64.u32 	%rd21, %r61;
	shr.u64 	%rd86, %rd4, %r61;
	ld.global.u64 	%rd87, [%rd85];
	or.b64  	%rd88, %rd86, %rd87;
	st.global.u64 	[%rd85], %rd88;
	setp.gt.u32 	%p8, %r114, 55;
	@%p8 bra 	$L__BB1_12;

	cvt.u32.u64 	%r64, %rd21;
	cvt.u64.u32 	%rd89, %r62;
	mul.lo.s64 	%rd90, %rd89, %rd7;
	add.s64 	%rd91, %rd90, %rd1;
	neg.s32 	%r66, %r64;
	and.b32  	%r67, %r66, 56;
	shl.b64 	%rd92, %rd4, %r67;
	setp.eq.s32 	%p9, %r10, 0;
	selp.b64 	%rd93, 0, %rd92, %p9;
	shl.b64 	%rd94, %rd91, 3;
	and.b64  	%rd95, %rd94, 34359738360;
	add.s64 	%rd96, %rd27, %rd95;
	st.global.u64 	[%rd96], %rd93;

$L__BB1_12:
	add.s32 	%r68, %r114, 8;
	shr.u32 	%r12, %r68, 3;
	add.s32 	%r69, %r112, %r12;
	add.s32 	%r70, %r69, -1;
	cvt.u64.u32 	%rd97, %r70;
	mul.lo.s64 	%rd98, %rd97, %rd7;
	add.s64 	%rd99, %rd98, %rd1;
	shl.b64 	%rd100, %rd99, 3;
	and.b64  	%rd101, %rd100, 34359738360;
	add.s64 	%rd102, %rd27, %rd101;
	cvt.u32.u64 	%r71, %rd21;
	shr.u64 	%rd103, %rd5, %r71;
	ld.global.u64 	%rd104, [%rd102];
	or.b64  	%rd105, %rd103, %rd104;
	st.global.u64 	[%rd102], %rd105;
	setp.gt.u32 	%p10, %r68, 55;
	@%p10 bra 	$L__BB1_14;

	cvt.u64.u32 	%rd106, %r69;
	mul.lo.s64 	%rd107, %rd106, %rd7;
	add.s64 	%rd108, %rd107, %rd1;
	neg.s32 	%r74, %r71;
	and.b32  	%r75, %r74, 56;
	shl.b64 	%rd109, %rd5, %r75;
	setp.eq.s32 	%p11, %r10, 0;
	selp.b64 	%rd110, 0, %rd109, %p11;
	shl.b64 	%rd111, %rd108, 3;
	and.b64  	%rd112, %rd111, 34359738360;
	add.s64 	%rd113, %rd27, %rd112;
	st.global.u64 	[%rd113], %rd110;

$L__BB1_14:
	add.s32 	%r76, %r114, 16;
	shr.u32 	%r13, %r76, 3;
	add.s32 	%r77, %r112, %r13;
	add.s32 	%r78, %r77, -1;
	cvt.u64.u32 	%rd114, %r78;
	mul.lo.s64 	%rd115, %rd114, %rd7;
	add.s64 	%rd116, %rd115, %rd1;
	shl.b64 	%rd117, %rd116, 3;
	and.b64  	%rd118, %rd117, 34359738360;
	add.s64 	%rd119, %rd27, %rd118;
	shr.u64 	%rd120, %rd6, %r71;
	ld.global.u64 	%rd121, [%rd119];
	or.b64  	%rd122, %rd120, %rd121;
	st.global.u64 	[%rd119], %rd122;
	setp.gt.u32 	%p12, %r76, 55;
	@%p12 bra 	$L__BB1_16;

	cvt.u64.u32 	%rd123, %r77;
	mul.lo.s64 	%rd124, %rd123, %rd7;
	add.s64 	%rd125, %rd124, %rd1;
	neg.s32 	%r82, %r71;
	and.b32  	%r83, %r82, 56;
	shl.b64 	%rd126, %rd6, %r83;
	setp.eq.s32 	%p13, %r10, 0;
	selp.b64 	%rd127, 0, %rd126, %p13;
	shl.b64 	%rd128, %rd125, 3;
	and.b64  	%rd129, %rd128, 34359738360;
	add.s64 	%rd130, %rd27, %rd129;
	st.global.u64 	[%rd130], %rd127;

$L__BB1_16:
	ld.global.nc.u32 	%r84, [%rd8];
	add.s32 	%r114, %r84, %r114;

$L__BB1_17:
	and.b64  	%rd185, %rd189, 2147483644;
	setp.eq.s64 	%p14, %rd185, 4;
	@%p14 bra 	$L__BB1_25;

	and.b32  	%r16, %r114, 7;
	shl.b32 	%r85, %r114, 3;
	and.b32  	%r86, %r85, 56;
	shr.u32 	%r17, %r114, 3;
	add.s32 	%r87, %r112, %r17;
	add.s32 	%r88, %r87, -1;
	cvt.u64.u32 	%rd131, %r88;
	mul.lo.s64 	%rd132, %rd131, %rd7;
	add.s64 	%rd133, %rd132, %rd1;
	shl.b64 	%rd134, %rd133, 3;
	and.b64  	%rd135, %rd134, 34359738360;
	add.s64 	%rd136, %rd27, %rd135;
	cvt.u64.u32 	%rd22, %r86;
	shr.u64 	%rd137, %rd4, %r86;
	ld.global.u64 	%rd138, [%rd136];
	or.b64  	%rd139, %rd137, %rd138;
	st.global.u64 	[%rd136], %rd139;
	setp.gt.u32 	%p15, %r114, 55;
	@%p15 bra 	$L__BB1_20;

	cvt.u32.u64 	%r89, %rd22;
	cvt.u64.u32 	%rd140, %r87;
	mul.lo.s64 	%rd141, %rd140, %rd7;
	add.s64 	%rd142, %rd141, %rd1;
	neg.s32 	%r91, %r89;
	and.b32  	%r92, %r91, 56;
	shl.b64 	%rd143, %rd4, %r92;
	setp.eq.s32 	%p16, %r16, 0;
	selp.b64 	%rd144, 0, %rd143, %p16;
	shl.b64 	%rd145, %rd142, 3;
	and.b64  	%rd146, %rd145, 34359738360;
	add.s64 	%rd147, %rd27, %rd146;
	st.global.u64 	[%rd147], %rd144;

$L__BB1_20:
	add.s32 	%r93, %r114, 8;
	shr.u32 	%r18, %r93, 3;
	add.s32 	%r94, %r112, %r18;
	add.s32 	%r95, %r94, -1;
	cvt.u64.u32 	%rd148, %r95;
	mul.lo.s64 	%rd149, %rd148, %rd7;
	add.s64 	%rd150, %rd149, %rd1;
	shl.b64 	%rd151, %rd150, 3;
	and.b64  	%rd152, %rd151, 34359738360;
	add.s64 	%rd153, %rd27, %rd152;
	cvt.u32.u64 	%r96, %rd22;
	shr.u64 	%rd154, %rd5, %r96;
	ld.global.u64 	%rd155, [%rd153];
	or.b64  	%rd156, %rd154, %rd155;
	st.global.u64 	[%rd153], %rd156;
	setp.gt.u32 	%p17, %r93, 55;
	@%p17 bra 	$L__BB1_22;

	cvt.u64.u32 	%rd157, %r94;
	mul.lo.s64 	%rd158, %rd157, %rd7;
	add.s64 	%rd159, %rd158, %rd1;
	neg.s32 	%r99, %r96;
	and.b32  	%r100, %r99, 56;
	shl.b64 	%rd160, %rd5, %r100;
	setp.eq.s32 	%p18, %r16, 0;
	selp.b64 	%rd161, 0, %rd160, %p18;
	shl.b64 	%rd162, %rd159, 3;
	and.b64  	%rd163, %rd162, 34359738360;
	add.s64 	%rd164, %rd27, %rd163;
	st.global.u64 	[%rd164], %rd161;

$L__BB1_22:
	add.s32 	%r101, %r114, 16;
	shr.u32 	%r19, %r101, 3;
	add.s32 	%r102, %r112, %r19;
	add.s32 	%r103, %r102, -1;
	cvt.u64.u32 	%rd165, %r103;
	mul.lo.s64 	%rd166, %rd165, %rd7;
	add.s64 	%rd167, %rd166, %rd1;
	shl.b64 	%rd168, %rd167, 3;
	and.b64  	%rd169, %rd168, 34359738360;
	add.s64 	%rd170, %rd27, %rd169;
	shr.u64 	%rd171, %rd6, %r96;
	ld.global.u64 	%rd172, [%rd170];
	or.b64  	%rd173, %rd171, %rd172;
	st.global.u64 	[%rd170], %rd173;
	setp.gt.u32 	%p19, %r101, 55;
	@%p19 bra 	$L__BB1_24;

	cvt.u64.u32 	%rd174, %r102;
	mul.lo.s64 	%rd175, %rd174, %rd7;
	add.s64 	%rd176, %rd175, %rd1;
	neg.s32 	%r107, %r96;
	and.b32  	%r108, %r107, 56;
	shl.b64 	%rd177, %rd6, %r108;
	setp.eq.s32 	%p20, %r16, 0;
	selp.b64 	%rd178, 0, %rd177, %p20;
	shl.b64 	%rd179, %rd176, 3;
	and.b64  	%rd180, %rd179, 34359738360;
	add.s64 	%rd181, %rd27, %rd180;
	st.global.u64 	[%rd181], %rd178;

$L__BB1_24:
	ld.global.nc.u32 	%r109, [%rd8];
	add.s32 	%r114, %r109, %r114;

$L__BB1_25:
	add.s64 	%rd182, %rd187, %rd10;
	cvt.u64.u32 	%rd183, %r114;
	st.global.u64 	[%rd182], %rd183;
	add.s64 	%rd189, %rd189, 1;
	add.s64 	%rd188, %rd188, 4;
	add.s64 	%rd187, %rd187, %rd11;
	add.s32 	%r112, %r112, 9;
	setp.ne.s32 	%p21, %r112, 73;
	@%p21 bra 	$L__BB1_1;

	ret;

}
	// .globl	kernel_crypt_full
.entry kernel_crypt_full(
	.param .u64 .ptr .const .align 8 kernel_crypt_full_param_0,
	.param .u64 .ptr .global .align 8 kernel_crypt_full_param_1,
	.param .u64 .ptr .global .align 8 kernel_crypt_full_param_2,
	.param .u64 .ptr .global .align 8 kernel_crypt_full_param_3
)
{
	.local .align 16 .b8 	__local_depot2[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b32 	%r<1450>;
	.reg .b64 	%rd<2354>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u64 	%rd218, [kernel_crypt_full_param_2];
	ld.param.u64 	%rd217, [kernel_crypt_full_param_3];
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mov.b32 	%r19, %envreg3;
	add.s32 	%r20, %r18, %r19;
	mad.lo.s32 	%r21, %r17, %r16, %r20;
	cvt.s64.s32 	%rd1, %r21;
	mul.wide.s32 	%rd219, %r21, 104;
	add.s64 	%rd2, %rd218, %rd219;
	ld.global.u64 	%rd2280, [%rd2];
	ld.global.u64 	%rd2279, [%rd2+8];
	ld.global.u64 	%rd2278, [%rd2+16];
	ld.global.u64 	%rd2277, [%rd2+24];
	ld.global.u64 	%rd2276, [%rd2+32];
	ld.global.u64 	%rd2275, [%rd2+40];
	ld.global.u64 	%rd2274, [%rd2+48];
	ld.global.u64 	%rd2273, [%rd2+56];
	add.u64 	%rd11, %SPL, 0;
	mov.b32 	%r22, %envreg6;
	mul.lo.s32 	%r23, %r22, %r17;
	cvt.s64.s32 	%rd12, %r23;
	mov.u64 	%rd221, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r24,%dummy}, %rd221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25}, %rd221;
	}
	shf.r.wrap.b32 	%r26, %r25, %r24, 18;
	shf.r.wrap.b32 	%r27, %r24, %r25, 18;
	mov.b64 	%rd222, {%r27, %r26};
	shf.r.wrap.b32 	%r28, %r25, %r24, 14;
	shf.r.wrap.b32 	%r29, %r24, %r25, 14;
	mov.b64 	%rd223, {%r29, %r28};
	xor.b64  	%rd224, %rd223, %rd222;
	shf.l.wrap.b32 	%r30, %r24, %r25, 23;
	shf.l.wrap.b32 	%r31, %r25, %r24, 23;
	mov.b64 	%rd225, {%r31, %r30};
	xor.b64  	%rd13, %rd224, %rd225;
	add.s64 	%rd14, %rd13, -4760086834832339754;
	mov.u64 	%rd226, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r32}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r33,%dummy}, %rd226;
	}
	shf.l.wrap.b32 	%r34, %r33, %r32, 30;
	shf.l.wrap.b32 	%r35, %r32, %r33, 30;
	mov.b64 	%rd227, {%r35, %r34};
	shf.r.wrap.b32 	%r36, %r32, %r33, 28;
	shf.r.wrap.b32 	%r37, %r33, %r32, 28;
	mov.b64 	%rd228, {%r37, %r36};
	xor.b64  	%rd229, %rd228, %rd227;
	shf.l.wrap.b32 	%r38, %r33, %r32, 25;
	shf.l.wrap.b32 	%r39, %r32, %r33, 25;
	mov.b64 	%rd230, {%r39, %r38};
	xor.b64  	%rd15, %rd229, %rd230;
	add.s64 	%rd16, %rd15, 4210837510808201515;
	mul.wide.s32 	%rd17, %r23, 8;
	mov.u32 	%r1445, 0;
	mov.u32 	%r1446, %r1445;

$L__BB2_1:
	.pragma "nounroll";
	and.b32  	%r40, %r1445, 1;
	setp.eq.b32 	%p1, %r40, 1;
	mov.pred 	%p2, 0;
	xor.pred  	%p3, %p1, %p2;
	not.pred 	%p4, %p3;
	mul.wide.u32 	%rd231, %r1446, 4;
	mov.u64 	%rd232, loop_index;
	add.s64 	%rd27, %rd232, %rd231;
	@%p4 bra 	$L__BB2_4;
	bra.uni 	$L__BB2_2;

$L__BB2_4:
	st.local.v2.u64 	[%rd11], {%rd2280, %rd2279};
	st.local.v2.u64 	[%rd11+16], {%rd2278, %rd2277};
	st.local.v2.u64 	[%rd11+32], {%rd2276, %rd2275};
	st.local.v2.u64 	[%rd11+48], {%rd2274, %rd2273};
	ld.const.u32 	%r51, [%rd27];
	mul.lo.s32 	%r52, %r51, 9;
	cvt.s64.s32 	%rd290, %r52;
	mul.lo.s64 	%rd291, %rd290, %rd12;
	add.s64 	%rd292, %rd291, %rd1;
	shl.b64 	%rd293, %rd292, 3;
	add.s64 	%rd294, %rd217, %rd293;
	add.s64 	%rd295, %rd294, %rd17;
	ld.global.nc.u64 	%rd296, [%rd294];
	ld.global.nc.u64 	%rd297, [%rd295];
	st.local.v2.u64 	[%rd11+64], {%rd296, %rd297};
	add.s64 	%rd298, %rd295, %rd17;
	add.s64 	%rd299, %rd298, %rd17;
	ld.global.nc.u64 	%rd300, [%rd299];
	ld.global.nc.u64 	%rd301, [%rd298];
	st.local.v2.u64 	[%rd11+80], {%rd301, %rd300};
	add.s64 	%rd302, %rd299, %rd17;
	add.s64 	%rd303, %rd302, %rd17;
	ld.global.nc.u64 	%rd304, [%rd303];
	ld.global.nc.u64 	%rd305, [%rd302];
	st.local.v2.u64 	[%rd11+96], {%rd305, %rd304};
	add.s64 	%rd306, %rd303, %rd17;
	add.s64 	%rd307, %rd306, %rd17;
	ld.global.nc.u64 	%rd308, [%rd307];
	ld.global.nc.u64 	%rd309, [%rd306];
	st.local.v2.u64 	[%rd11+112], {%rd309, %rd308};
	add.s64 	%rd310, %rd307, %rd17;
	ld.global.nc.u64 	%rd311, [%rd310];
	cvt.u32.u64 	%r1447, %rd311;
	bra.uni 	$L__BB2_5;

$L__BB2_2:
	mov.u64 	%rd233, 0;
	st.local.v2.u64 	[%rd11+64], {%rd233, %rd233};
	st.local.v2.u64 	[%rd11+80], {%rd233, %rd233};
	st.local.v2.u64 	[%rd11+96], {%rd233, %rd233};
	st.local.v2.u64 	[%rd11+112], {%rd233, %rd233};
	ld.const.u32 	%r41, [%rd27];
	mul.lo.s32 	%r42, %r41, 9;
	cvt.s64.s32 	%rd234, %r42;
	mul.lo.s64 	%rd235, %rd234, %rd12;
	add.s64 	%rd236, %rd235, %rd1;
	shl.b64 	%rd237, %rd236, 3;
	add.s64 	%rd238, %rd217, %rd237;
	add.s64 	%rd239, %rd238, %rd17;
	ld.global.nc.u64 	%rd240, [%rd238];
	ld.global.nc.u64 	%rd241, [%rd239];
	st.local.v2.u64 	[%rd11], {%rd240, %rd241};
	add.s64 	%rd242, %rd239, %rd17;
	add.s64 	%rd243, %rd242, %rd17;
	ld.global.nc.u64 	%rd244, [%rd243];
	ld.global.nc.u64 	%rd245, [%rd242];
	st.local.v2.u64 	[%rd11+16], {%rd245, %rd244};
	add.s64 	%rd246, %rd243, %rd17;
	add.s64 	%rd247, %rd246, %rd17;
	ld.global.nc.u64 	%rd248, [%rd247];
	ld.global.nc.u64 	%rd249, [%rd246];
	st.local.v2.u64 	[%rd11+32], {%rd249, %rd248};
	add.s64 	%rd250, %rd247, %rd17;
	add.s64 	%rd251, %rd250, %rd17;
	ld.global.nc.u64 	%rd252, [%rd251];
	ld.global.nc.u64 	%rd253, [%rd250];
	st.local.v2.u64 	[%rd11+48], {%rd253, %rd252};
	add.s64 	%rd254, %rd251, %rd17;
	ld.global.nc.u64 	%rd255, [%rd254];
	cvt.u32.u64 	%r1447, %rd255;
	and.b32  	%r4, %r1447, 7;
	shl.b32 	%r43, %r1447, 3;
	and.b32  	%r44, %r43, 56;
	shr.u32 	%r45, %r1447, 3;
	shl.b32 	%r46, %r45, 3;
	cvt.u64.u32 	%rd256, %r46;
	add.s64 	%rd28, %rd11, %rd256;
	shr.u64 	%rd257, %rd2280, %r44;
	ld.local.u64 	%rd258, [%rd28];
	or.b64  	%rd259, %rd257, %rd258;
	st.local.u64 	[%rd28], %rd259;
	setp.eq.s32 	%p5, %r4, 0;
	neg.s32 	%r47, %r44;
	and.b32  	%r48, %r47, 56;
	cvt.u64.u32 	%rd29, %r48;
	shl.b64 	%rd260, %rd2280, %r48;
	selp.b64 	%rd261, 0, %rd260, %p5;
	shr.u64 	%rd262, %rd2279, %r44;
	or.b64  	%rd263, %rd261, %rd262;
	st.local.u64 	[%rd28+8], %rd263;
	shl.b64 	%rd264, %rd2279, %r48;
	selp.b64 	%rd265, 0, %rd264, %p5;
	shr.u64 	%rd266, %rd2278, %r44;
	or.b64  	%rd267, %rd266, %rd265;
	st.local.u64 	[%rd28+16], %rd267;
	shl.b64 	%rd268, %rd2278, %r48;
	selp.b64 	%rd269, 0, %rd268, %p5;
	shr.u64 	%rd270, %rd2277, %r44;
	or.b64  	%rd271, %rd270, %rd269;
	st.local.u64 	[%rd28+24], %rd271;
	shl.b64 	%rd272, %rd2277, %r48;
	selp.b64 	%rd273, 0, %rd272, %p5;
	shr.u64 	%rd274, %rd2276, %r44;
	or.b64  	%rd275, %rd274, %rd273;
	st.local.u64 	[%rd28+32], %rd275;
	shl.b64 	%rd276, %rd2276, %r48;
	selp.b64 	%rd277, 0, %rd276, %p5;
	shr.u64 	%rd278, %rd2275, %r44;
	or.b64  	%rd279, %rd278, %rd277;
	st.local.u64 	[%rd28+40], %rd279;
	shl.b64 	%rd280, %rd2275, %r48;
	selp.b64 	%rd281, 0, %rd280, %p5;
	shr.u64 	%rd282, %rd2274, %r44;
	or.b64  	%rd283, %rd282, %rd281;
	st.local.u64 	[%rd28+48], %rd283;
	shl.b64 	%rd284, %rd2274, %r48;
	selp.b64 	%rd285, 0, %rd284, %p5;
	add.s32 	%r49, %r45, 7;
	shr.u64 	%rd286, %rd2273, %r44;
	or.b64  	%rd287, %rd286, %rd285;
	st.local.u64 	[%rd28+56], %rd287;
	setp.gt.u32 	%p6, %r49, 14;
	@%p6 bra 	$L__BB2_5;

	cvt.u32.u64 	%r50, %rd29;
	shl.b64 	%rd288, %rd2273, %r50;
	selp.b64 	%rd289, 0, %rd288, %p5;
	st.local.u64 	[%rd28+64], %rd289;

$L__BB2_5:
	add.s32 	%r7, %r1447, 64;
	shl.b32 	%r53, %r7, 3;
	and.b32  	%r54, %r53, 56;
	and.b32  	%r55, %r7, -8;
	cvt.u64.u32 	%rd312, %r55;
	add.s64 	%rd313, %rd11, %rd312;
	mov.u64 	%rd314, -9223372036854775808;
	shr.u64 	%rd315, %rd314, %r54;
	ld.local.u64 	%rd316, [%rd313];
	or.b64  	%rd317, %rd316, %rd315;
	st.local.u64 	[%rd313], %rd317;
	setp.lt.u32 	%p8, %r7, 112;
	@%p8 bra 	$L__BB2_9;
	bra.uni 	$L__BB2_6;

$L__BB2_9:
	mul.wide.u32 	%rd1302, %r7, 8;
	st.local.u64 	[%rd11+120], %rd1302;
	ld.local.v2.u64 	{%rd2345, %rd2344}, [%rd11];
	ld.local.v2.u64 	{%rd2343, %rd2342}, [%rd11+16];
	ld.local.v2.u64 	{%rd2341, %rd2340}, [%rd11+32];
	ld.local.v2.u64 	{%rd2339, %rd2338}, [%rd11+48];
	ld.local.v2.u64 	{%rd2337, %rd2336}, [%rd11+64];
	ld.local.v2.u64 	{%rd2335, %rd2334}, [%rd11+80];
	ld.local.v2.u64 	{%rd2333, %rd2332}, [%rd11+96];
	ld.local.u64 	%rd2331, [%rd11+112];
	mov.u64 	%rd2329, 7640891576956012808;
	mov.u64 	%rd2328, -4942790177534073029;
	mov.u64 	%rd2327, 4354685564936845355;
	mov.u64 	%rd2326, -6534734903238641935;
	mov.u64 	%rd2325, 5840696475078001361;
	mov.u64 	%rd2324, -7276294671716946913;
	mov.u64 	%rd2323, 2270897969802886507;
	mov.u64 	%rd2322, 6620516959819538809;
	mov.u64 	%rd2305, %rd15;
	mov.u64 	%rd2306, %rd13;
	bra.uni 	$L__BB2_10;

$L__BB2_6:
	ld.local.v2.u64 	{%rd2296, %rd2295}, [%rd11];
	ld.local.v2.u64 	{%rd2294, %rd2293}, [%rd11+16];
	ld.local.v2.u64 	{%rd2292, %rd2291}, [%rd11+32];
	ld.local.v2.u64 	{%rd2290, %rd2289}, [%rd11+48];
	ld.local.v2.u64 	{%rd2288, %rd2287}, [%rd11+64];
	ld.local.v2.u64 	{%rd2286, %rd2285}, [%rd11+80];
	ld.local.v2.u64 	{%rd2284, %rd2283}, [%rd11+96];
	ld.local.v2.u64 	{%rd2282, %rd2281}, [%rd11+112];
	add.s64 	%rd334, %rd14, %rd2296;
	add.s64 	%rd335, %rd334, -6534734903238641935;
	add.s64 	%rd336, %rd16, %rd334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd335;
	}
	shf.r.wrap.b32 	%r59, %r58, %r57, 14;
	shf.r.wrap.b32 	%r60, %r57, %r58, 14;
	mov.b64 	%rd337, {%r60, %r59};
	shf.r.wrap.b32 	%r61, %r58, %r57, 18;
	shf.r.wrap.b32 	%r62, %r57, %r58, 18;
	mov.b64 	%rd338, {%r62, %r61};
	xor.b64  	%rd339, %rd337, %rd338;
	shf.l.wrap.b32 	%r63, %r57, %r58, 23;
	shf.l.wrap.b32 	%r64, %r58, %r57, 23;
	mov.b64 	%rd340, {%r64, %r63};
	xor.b64  	%rd341, %rd339, %rd340;
	and.b64  	%rd342, %rd335, -3887949035690463538;
	xor.b64  	%rd343, %rd342, -7276294671716946913;
	add.s64 	%rd344, %rd343, %rd341;
	add.s64 	%rd345, %rd344, %rd2295;
	and.b64  	%rd346, %rd336, -3355664534840381901;
	or.b64  	%rd347, %rd346, 3026882967131160840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd336;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 28;
	shf.r.wrap.b32 	%r68, %r65, %r66, 28;
	mov.b64 	%rd348, {%r68, %r67};
	shf.l.wrap.b32 	%r69, %r65, %r66, 30;
	shf.l.wrap.b32 	%r70, %r66, %r65, 30;
	mov.b64 	%rd349, {%r70, %r69};
	xor.b64  	%rd350, %rd348, %rd349;
	shf.l.wrap.b32 	%r71, %r65, %r66, 25;
	shf.l.wrap.b32 	%r72, %r66, %r65, 25;
	mov.b64 	%rd351, {%r72, %r71};
	xor.b64  	%rd352, %rd350, %rd351;
	add.s64 	%rd353, %rd352, %rd347;
	add.s64 	%rd354, %rd353, %rd345;
	add.s64 	%rd355, %rd345, -3663095898801038493;
	add.s64 	%rd356, %rd354, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r73,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r74}, %rd355;
	}
	shf.r.wrap.b32 	%r75, %r74, %r73, 14;
	shf.r.wrap.b32 	%r76, %r73, %r74, 14;
	mov.b64 	%rd357, {%r76, %r75};
	shf.r.wrap.b32 	%r77, %r74, %r73, 18;
	shf.r.wrap.b32 	%r78, %r73, %r74, 18;
	mov.b64 	%rd358, {%r78, %r77};
	xor.b64  	%rd359, %rd357, %rd358;
	shf.l.wrap.b32 	%r79, %r73, %r74, 23;
	shf.l.wrap.b32 	%r80, %r74, %r73, 23;
	mov.b64 	%rd360, {%r80, %r79};
	xor.b64  	%rd361, %rd359, %rd360;
	xor.b64  	%rd362, %rd335, 5840696475078001361;
	and.b64  	%rd363, %rd355, %rd362;
	xor.b64  	%rd364, %rd363, 5840696475078001361;
	add.s64 	%rd365, %rd364, %rd361;
	add.s64 	%rd366, %rd365, %rd2294;
	and.b64  	%rd367, %rd356, %rd336;
	or.b64  	%rd368, %rd356, %rd336;
	and.b64  	%rd369, %rd368, 7640891576956012808;
	or.b64  	%rd370, %rd369, %rd367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd356;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 28;
	shf.r.wrap.b32 	%r84, %r81, %r82, 28;
	mov.b64 	%rd371, {%r84, %r83};
	shf.l.wrap.b32 	%r85, %r81, %r82, 30;
	shf.l.wrap.b32 	%r86, %r82, %r81, 30;
	mov.b64 	%rd372, {%r86, %r85};
	xor.b64  	%rd373, %rd371, %rd372;
	shf.l.wrap.b32 	%r87, %r81, %r82, 25;
	shf.l.wrap.b32 	%r88, %r82, %r81, 25;
	mov.b64 	%rd374, {%r88, %r87};
	xor.b64  	%rd375, %rd373, %rd374;
	add.s64 	%rd376, %rd375, %rd370;
	add.s64 	%rd377, %rd376, %rd366;
	add.s64 	%rd378, %rd366, 877659737583668873;
	add.s64 	%rd379, %rd377, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r89,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd378;
	}
	shf.r.wrap.b32 	%r91, %r90, %r89, 14;
	shf.r.wrap.b32 	%r92, %r89, %r90, 14;
	mov.b64 	%rd380, {%r92, %r91};
	shf.r.wrap.b32 	%r93, %r90, %r89, 18;
	shf.r.wrap.b32 	%r94, %r89, %r90, 18;
	mov.b64 	%rd381, {%r94, %r93};
	xor.b64  	%rd382, %rd380, %rd381;
	shf.l.wrap.b32 	%r95, %r89, %r90, 23;
	shf.l.wrap.b32 	%r96, %r90, %r89, 23;
	mov.b64 	%rd383, {%r96, %r95};
	xor.b64  	%rd384, %rd382, %rd383;
	xor.b64  	%rd385, %rd355, %rd335;
	and.b64  	%rd386, %rd378, %rd385;
	xor.b64  	%rd387, %rd386, %rd335;
	add.s64 	%rd388, %rd387, %rd384;
	add.s64 	%rd389, %rd388, %rd2293;
	and.b64  	%rd390, %rd379, %rd356;
	or.b64  	%rd391, %rd379, %rd356;
	and.b64  	%rd392, %rd391, %rd336;
	or.b64  	%rd393, %rd392, %rd390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd379;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 28;
	shf.r.wrap.b32 	%r100, %r97, %r98, 28;
	mov.b64 	%rd394, {%r100, %r99};
	shf.l.wrap.b32 	%r101, %r97, %r98, 30;
	shf.l.wrap.b32 	%r102, %r98, %r97, 30;
	mov.b64 	%rd395, {%r102, %r101};
	xor.b64  	%rd396, %rd394, %rd395;
	shf.l.wrap.b32 	%r103, %r97, %r98, 25;
	shf.l.wrap.b32 	%r104, %r98, %r97, 25;
	mov.b64 	%rd397, {%r104, %r103};
	xor.b64  	%rd398, %rd396, %rd397;
	add.s64 	%rd399, %rd398, %rd393;
	add.s64 	%rd400, %rd399, %rd389;
	add.s64 	%rd401, %rd389, -6571292209873868907;
	add.s64 	%rd402, %rd400, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd401;
	}
	shf.r.wrap.b32 	%r107, %r106, %r105, 14;
	shf.r.wrap.b32 	%r108, %r105, %r106, 14;
	mov.b64 	%rd403, {%r108, %r107};
	shf.r.wrap.b32 	%r109, %r106, %r105, 18;
	shf.r.wrap.b32 	%r110, %r105, %r106, 18;
	mov.b64 	%rd404, {%r110, %r109};
	xor.b64  	%rd405, %rd403, %rd404;
	shf.l.wrap.b32 	%r111, %r105, %r106, 23;
	shf.l.wrap.b32 	%r112, %r106, %r105, 23;
	mov.b64 	%rd406, {%r112, %r111};
	xor.b64  	%rd407, %rd405, %rd406;
	xor.b64  	%rd408, %rd378, %rd355;
	and.b64  	%rd409, %rd401, %rd408;
	xor.b64  	%rd410, %rd409, %rd355;
	add.s64 	%rd411, %rd410, %rd335;
	add.s64 	%rd412, %rd411, %rd407;
	add.s64 	%rd413, %rd412, %rd2292;
	add.s64 	%rd414, %rd413, 4131703408338449720;
	add.s64 	%rd415, %rd414, %rd336;
	and.b64  	%rd416, %rd402, %rd379;
	or.b64  	%rd417, %rd402, %rd379;
	and.b64  	%rd418, %rd417, %rd356;
	or.b64  	%rd419, %rd418, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd402;
	}
	shf.r.wrap.b32 	%r115, %r114, %r113, 28;
	shf.r.wrap.b32 	%r116, %r113, %r114, 28;
	mov.b64 	%rd420, {%r116, %r115};
	shf.l.wrap.b32 	%r117, %r113, %r114, 30;
	shf.l.wrap.b32 	%r118, %r114, %r113, 30;
	mov.b64 	%rd421, {%r118, %r117};
	xor.b64  	%rd422, %rd420, %rd421;
	shf.l.wrap.b32 	%r119, %r113, %r114, 25;
	shf.l.wrap.b32 	%r120, %r114, %r113, 25;
	mov.b64 	%rd423, {%r120, %r119};
	xor.b64  	%rd424, %rd422, %rd423;
	add.s64 	%rd425, %rd424, %rd419;
	add.s64 	%rd426, %rd425, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r122}, %rd415;
	}
	shf.r.wrap.b32 	%r123, %r122, %r121, 14;
	shf.r.wrap.b32 	%r124, %r121, %r122, 14;
	mov.b64 	%rd427, {%r124, %r123};
	shf.r.wrap.b32 	%r125, %r122, %r121, 18;
	shf.r.wrap.b32 	%r126, %r121, %r122, 18;
	mov.b64 	%rd428, {%r126, %r125};
	xor.b64  	%rd429, %rd427, %rd428;
	shf.l.wrap.b32 	%r127, %r121, %r122, 23;
	shf.l.wrap.b32 	%r128, %r122, %r121, 23;
	mov.b64 	%rd430, {%r128, %r127};
	xor.b64  	%rd431, %rd429, %rd430;
	xor.b64  	%rd432, %rd401, %rd378;
	and.b64  	%rd433, %rd415, %rd432;
	xor.b64  	%rd434, %rd433, %rd378;
	add.s64 	%rd435, %rd434, %rd355;
	add.s64 	%rd436, %rd435, %rd431;
	add.s64 	%rd437, %rd436, %rd2291;
	add.s64 	%rd438, %rd437, 6480981068601479193;
	add.s64 	%rd439, %rd438, %rd356;
	and.b64  	%rd440, %rd426, %rd402;
	or.b64  	%rd441, %rd426, %rd402;
	and.b64  	%rd442, %rd441, %rd379;
	or.b64  	%rd443, %rd442, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd426;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 28;
	shf.r.wrap.b32 	%r132, %r129, %r130, 28;
	mov.b64 	%rd444, {%r132, %r131};
	shf.l.wrap.b32 	%r133, %r129, %r130, 30;
	shf.l.wrap.b32 	%r134, %r130, %r129, 30;
	mov.b64 	%rd445, {%r134, %r133};
	xor.b64  	%rd446, %rd444, %rd445;
	shf.l.wrap.b32 	%r135, %r129, %r130, 25;
	shf.l.wrap.b32 	%r136, %r130, %r129, 25;
	mov.b64 	%rd447, {%r136, %r135};
	xor.b64  	%rd448, %rd446, %rd447;
	add.s64 	%rd449, %rd448, %rd443;
	add.s64 	%rd450, %rd449, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r138}, %rd439;
	}
	shf.r.wrap.b32 	%r139, %r138, %r137, 14;
	shf.r.wrap.b32 	%r140, %r137, %r138, 14;
	mov.b64 	%rd451, {%r140, %r139};
	shf.r.wrap.b32 	%r141, %r138, %r137, 18;
	shf.r.wrap.b32 	%r142, %r137, %r138, 18;
	mov.b64 	%rd452, {%r142, %r141};
	xor.b64  	%rd453, %rd451, %rd452;
	shf.l.wrap.b32 	%r143, %r137, %r138, 23;
	shf.l.wrap.b32 	%r144, %r138, %r137, 23;
	mov.b64 	%rd454, {%r144, %r143};
	xor.b64  	%rd455, %rd453, %rd454;
	xor.b64  	%rd456, %rd415, %rd401;
	and.b64  	%rd457, %rd439, %rd456;
	xor.b64  	%rd458, %rd457, %rd401;
	add.s64 	%rd459, %rd458, %rd378;
	add.s64 	%rd460, %rd459, %rd455;
	add.s64 	%rd461, %rd460, %rd2290;
	add.s64 	%rd462, %rd461, -7908458776815382629;
	add.s64 	%rd463, %rd462, %rd379;
	and.b64  	%rd464, %rd450, %rd426;
	or.b64  	%rd465, %rd450, %rd426;
	and.b64  	%rd466, %rd465, %rd402;
	or.b64  	%rd467, %rd466, %rd464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd450;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 28;
	shf.r.wrap.b32 	%r148, %r145, %r146, 28;
	mov.b64 	%rd468, {%r148, %r147};
	shf.l.wrap.b32 	%r149, %r145, %r146, 30;
	shf.l.wrap.b32 	%r150, %r146, %r145, 30;
	mov.b64 	%rd469, {%r150, %r149};
	xor.b64  	%rd470, %rd468, %rd469;
	shf.l.wrap.b32 	%r151, %r145, %r146, 25;
	shf.l.wrap.b32 	%r152, %r146, %r145, 25;
	mov.b64 	%rd471, {%r152, %r151};
	xor.b64  	%rd472, %rd470, %rd471;
	add.s64 	%rd473, %rd472, %rd467;
	add.s64 	%rd474, %rd473, %rd462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd463;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 14;
	shf.r.wrap.b32 	%r156, %r153, %r154, 14;
	mov.b64 	%rd475, {%r156, %r155};
	shf.r.wrap.b32 	%r157, %r154, %r153, 18;
	shf.r.wrap.b32 	%r158, %r153, %r154, 18;
	mov.b64 	%rd476, {%r158, %r157};
	xor.b64  	%rd477, %rd475, %rd476;
	shf.l.wrap.b32 	%r159, %r153, %r154, 23;
	shf.l.wrap.b32 	%r160, %r154, %r153, 23;
	mov.b64 	%rd478, {%r160, %r159};
	xor.b64  	%rd479, %rd477, %rd478;
	xor.b64  	%rd480, %rd439, %rd415;
	and.b64  	%rd481, %rd463, %rd480;
	xor.b64  	%rd482, %rd481, %rd415;
	add.s64 	%rd483, %rd482, %rd401;
	add.s64 	%rd484, %rd483, %rd479;
	add.s64 	%rd485, %rd484, %rd2289;
	add.s64 	%rd486, %rd485, -6116909921290321640;
	add.s64 	%rd487, %rd486, %rd402;
	and.b64  	%rd488, %rd474, %rd450;
	or.b64  	%rd489, %rd474, %rd450;
	and.b64  	%rd490, %rd489, %rd426;
	or.b64  	%rd491, %rd490, %rd488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd474;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 28;
	shf.r.wrap.b32 	%r164, %r161, %r162, 28;
	mov.b64 	%rd492, {%r164, %r163};
	shf.l.wrap.b32 	%r165, %r161, %r162, 30;
	shf.l.wrap.b32 	%r166, %r162, %r161, 30;
	mov.b64 	%rd493, {%r166, %r165};
	xor.b64  	%rd494, %rd492, %rd493;
	shf.l.wrap.b32 	%r167, %r161, %r162, 25;
	shf.l.wrap.b32 	%r168, %r162, %r161, 25;
	mov.b64 	%rd495, {%r168, %r167};
	xor.b64  	%rd496, %rd494, %rd495;
	add.s64 	%rd497, %rd496, %rd491;
	add.s64 	%rd498, %rd497, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd487;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 14;
	shf.r.wrap.b32 	%r172, %r169, %r170, 14;
	mov.b64 	%rd499, {%r172, %r171};
	shf.r.wrap.b32 	%r173, %r170, %r169, 18;
	shf.r.wrap.b32 	%r174, %r169, %r170, 18;
	mov.b64 	%rd500, {%r174, %r173};
	xor.b64  	%rd501, %rd499, %rd500;
	shf.l.wrap.b32 	%r175, %r169, %r170, 23;
	shf.l.wrap.b32 	%r176, %r170, %r169, 23;
	mov.b64 	%rd502, {%r176, %r175};
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd463, %rd439;
	and.b64  	%rd505, %rd487, %rd504;
	xor.b64  	%rd506, %rd505, %rd439;
	add.s64 	%rd507, %rd506, %rd415;
	add.s64 	%rd508, %rd507, %rd503;
	add.s64 	%rd509, %rd508, %rd2288;
	add.s64 	%rd510, %rd509, -2880145864133508542;
	add.s64 	%rd511, %rd510, %rd426;
	and.b64  	%rd512, %rd498, %rd474;
	or.b64  	%rd513, %rd498, %rd474;
	and.b64  	%rd514, %rd513, %rd450;
	or.b64  	%rd515, %rd514, %rd512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd498;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 28;
	shf.r.wrap.b32 	%r180, %r177, %r178, 28;
	mov.b64 	%rd516, {%r180, %r179};
	shf.l.wrap.b32 	%r181, %r177, %r178, 30;
	shf.l.wrap.b32 	%r182, %r178, %r177, 30;
	mov.b64 	%rd517, {%r182, %r181};
	xor.b64  	%rd518, %rd516, %rd517;
	shf.l.wrap.b32 	%r183, %r177, %r178, 25;
	shf.l.wrap.b32 	%r184, %r178, %r177, 25;
	mov.b64 	%rd519, {%r184, %r183};
	xor.b64  	%rd520, %rd518, %rd519;
	add.s64 	%rd521, %rd520, %rd515;
	add.s64 	%rd522, %rd521, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd511;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 14;
	shf.r.wrap.b32 	%r188, %r185, %r186, 14;
	mov.b64 	%rd523, {%r188, %r187};
	shf.r.wrap.b32 	%r189, %r186, %r185, 18;
	shf.r.wrap.b32 	%r190, %r185, %r186, 18;
	mov.b64 	%rd524, {%r190, %r189};
	xor.b64  	%rd525, %rd523, %rd524;
	shf.l.wrap.b32 	%r191, %r185, %r186, 23;
	shf.l.wrap.b32 	%r192, %r186, %r185, 23;
	mov.b64 	%rd526, {%r192, %r191};
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd487, %rd463;
	and.b64  	%rd529, %rd511, %rd528;
	xor.b64  	%rd530, %rd529, %rd463;
	add.s64 	%rd531, %rd530, %rd439;
	add.s64 	%rd532, %rd531, %rd527;
	add.s64 	%rd533, %rd532, %rd2287;
	add.s64 	%rd534, %rd533, 1334009975649890238;
	add.s64 	%rd535, %rd534, %rd450;
	and.b64  	%rd536, %rd522, %rd498;
	or.b64  	%rd537, %rd522, %rd498;
	and.b64  	%rd538, %rd537, %rd474;
	or.b64  	%rd539, %rd538, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd522;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 28;
	shf.r.wrap.b32 	%r196, %r193, %r194, 28;
	mov.b64 	%rd540, {%r196, %r195};
	shf.l.wrap.b32 	%r197, %r193, %r194, 30;
	shf.l.wrap.b32 	%r198, %r194, %r193, 30;
	mov.b64 	%rd541, {%r198, %r197};
	xor.b64  	%rd542, %rd540, %rd541;
	shf.l.wrap.b32 	%r199, %r193, %r194, 25;
	shf.l.wrap.b32 	%r200, %r194, %r193, 25;
	mov.b64 	%rd543, {%r200, %r199};
	xor.b64  	%rd544, %rd542, %rd543;
	add.s64 	%rd545, %rd544, %rd539;
	add.s64 	%rd546, %rd545, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd535;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 14;
	shf.r.wrap.b32 	%r204, %r201, %r202, 14;
	mov.b64 	%rd547, {%r204, %r203};
	shf.r.wrap.b32 	%r205, %r202, %r201, 18;
	shf.r.wrap.b32 	%r206, %r201, %r202, 18;
	mov.b64 	%rd548, {%r206, %r205};
	xor.b64  	%rd549, %rd547, %rd548;
	shf.l.wrap.b32 	%r207, %r201, %r202, 23;
	shf.l.wrap.b32 	%r208, %r202, %r201, 23;
	mov.b64 	%rd550, {%r208, %r207};
	xor.b64  	%rd551, %rd549, %rd550;
	xor.b64  	%rd552, %rd511, %rd487;
	and.b64  	%rd553, %rd535, %rd552;
	xor.b64  	%rd554, %rd553, %rd487;
	add.s64 	%rd555, %rd554, %rd463;
	add.s64 	%rd556, %rd555, %rd551;
	add.s64 	%rd557, %rd556, %rd2286;
	add.s64 	%rd558, %rd557, 2608012711638119052;
	add.s64 	%rd559, %rd558, %rd474;
	and.b64  	%rd560, %rd546, %rd522;
	or.b64  	%rd561, %rd546, %rd522;
	and.b64  	%rd562, %rd561, %rd498;
	or.b64  	%rd563, %rd562, %rd560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd546;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 28;
	shf.r.wrap.b32 	%r212, %r209, %r210, 28;
	mov.b64 	%rd564, {%r212, %r211};
	shf.l.wrap.b32 	%r213, %r209, %r210, 30;
	shf.l.wrap.b32 	%r214, %r210, %r209, 30;
	mov.b64 	%rd565, {%r214, %r213};
	xor.b64  	%rd566, %rd564, %rd565;
	shf.l.wrap.b32 	%r215, %r209, %r210, 25;
	shf.l.wrap.b32 	%r216, %r210, %r209, 25;
	mov.b64 	%rd567, {%r216, %r215};
	xor.b64  	%rd568, %rd566, %rd567;
	add.s64 	%rd569, %rd568, %rd563;
	add.s64 	%rd570, %rd569, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd559;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 14;
	shf.r.wrap.b32 	%r220, %r217, %r218, 14;
	mov.b64 	%rd571, {%r220, %r219};
	shf.r.wrap.b32 	%r221, %r218, %r217, 18;
	shf.r.wrap.b32 	%r222, %r217, %r218, 18;
	mov.b64 	%rd572, {%r222, %r221};
	xor.b64  	%rd573, %rd571, %rd572;
	shf.l.wrap.b32 	%r223, %r217, %r218, 23;
	shf.l.wrap.b32 	%r224, %r218, %r217, 23;
	mov.b64 	%rd574, {%r224, %r223};
	xor.b64  	%rd575, %rd573, %rd574;
	xor.b64  	%rd576, %rd535, %rd511;
	and.b64  	%rd577, %rd559, %rd576;
	xor.b64  	%rd578, %rd577, %rd511;
	add.s64 	%rd579, %rd578, %rd487;
	add.s64 	%rd580, %rd579, %rd575;
	add.s64 	%rd581, %rd580, %rd2285;
	add.s64 	%rd582, %rd581, 6128411473006802146;
	add.s64 	%rd583, %rd582, %rd498;
	and.b64  	%rd584, %rd570, %rd546;
	or.b64  	%rd585, %rd570, %rd546;
	and.b64  	%rd586, %rd585, %rd522;
	or.b64  	%rd587, %rd586, %rd584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd570;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 28;
	shf.r.wrap.b32 	%r228, %r225, %r226, 28;
	mov.b64 	%rd588, {%r228, %r227};
	shf.l.wrap.b32 	%r229, %r225, %r226, 30;
	shf.l.wrap.b32 	%r230, %r226, %r225, 30;
	mov.b64 	%rd589, {%r230, %r229};
	xor.b64  	%rd590, %rd588, %rd589;
	shf.l.wrap.b32 	%r231, %r225, %r226, 25;
	shf.l.wrap.b32 	%r232, %r226, %r225, 25;
	mov.b64 	%rd591, {%r232, %r231};
	xor.b64  	%rd592, %rd590, %rd591;
	add.s64 	%rd593, %rd592, %rd587;
	add.s64 	%rd594, %rd593, %rd582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd583;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 14;
	shf.r.wrap.b32 	%r236, %r233, %r234, 14;
	mov.b64 	%rd595, {%r236, %r235};
	shf.r.wrap.b32 	%r237, %r234, %r233, 18;
	shf.r.wrap.b32 	%r238, %r233, %r234, 18;
	mov.b64 	%rd596, {%r238, %r237};
	xor.b64  	%rd597, %rd595, %rd596;
	shf.l.wrap.b32 	%r239, %r233, %r234, 23;
	shf.l.wrap.b32 	%r240, %r234, %r233, 23;
	mov.b64 	%rd598, {%r240, %r239};
	xor.b64  	%rd599, %rd597, %rd598;
	xor.b64  	%rd600, %rd559, %rd535;
	and.b64  	%rd601, %rd583, %rd600;
	xor.b64  	%rd602, %rd601, %rd535;
	add.s64 	%rd603, %rd602, %rd511;
	add.s64 	%rd604, %rd603, %rd599;
	add.s64 	%rd605, %rd604, %rd2284;
	add.s64 	%rd606, %rd605, 8268148722764581231;
	add.s64 	%rd2304, %rd606, %rd522;
	and.b64  	%rd607, %rd594, %rd570;
	or.b64  	%rd608, %rd594, %rd570;
	and.b64  	%rd609, %rd608, %rd546;
	or.b64  	%rd610, %rd609, %rd607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd594;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 28;
	shf.r.wrap.b32 	%r244, %r241, %r242, 28;
	mov.b64 	%rd611, {%r244, %r243};
	shf.l.wrap.b32 	%r245, %r241, %r242, 30;
	shf.l.wrap.b32 	%r246, %r242, %r241, 30;
	mov.b64 	%rd612, {%r246, %r245};
	xor.b64  	%rd613, %rd611, %rd612;
	shf.l.wrap.b32 	%r247, %r241, %r242, 25;
	shf.l.wrap.b32 	%r248, %r242, %r241, 25;
	mov.b64 	%rd614, {%r248, %r247};
	xor.b64  	%rd615, %rd613, %rd614;
	add.s64 	%rd616, %rd615, %rd610;
	add.s64 	%rd2300, %rd616, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd2304;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 14;
	shf.r.wrap.b32 	%r252, %r249, %r250, 14;
	mov.b64 	%rd617, {%r252, %r251};
	shf.r.wrap.b32 	%r253, %r250, %r249, 18;
	shf.r.wrap.b32 	%r254, %r249, %r250, 18;
	mov.b64 	%rd618, {%r254, %r253};
	xor.b64  	%rd619, %rd617, %rd618;
	shf.l.wrap.b32 	%r255, %r249, %r250, 23;
	shf.l.wrap.b32 	%r256, %r250, %r249, 23;
	mov.b64 	%rd620, {%r256, %r255};
	xor.b64  	%rd621, %rd619, %rd620;
	xor.b64  	%rd622, %rd583, %rd559;
	and.b64  	%rd623, %rd2304, %rd622;
	xor.b64  	%rd624, %rd623, %rd559;
	add.s64 	%rd625, %rd624, %rd535;
	add.s64 	%rd626, %rd625, %rd621;
	add.s64 	%rd627, %rd626, %rd2283;
	add.s64 	%rd628, %rd627, -9160688886553864527;
	add.s64 	%rd2303, %rd628, %rd546;
	and.b64  	%rd629, %rd2300, %rd594;
	or.b64  	%rd630, %rd2300, %rd594;
	and.b64  	%rd631, %rd630, %rd570;
	or.b64  	%rd632, %rd631, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd2300;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 28;
	shf.r.wrap.b32 	%r260, %r257, %r258, 28;
	mov.b64 	%rd633, {%r260, %r259};
	shf.l.wrap.b32 	%r261, %r257, %r258, 30;
	shf.l.wrap.b32 	%r262, %r258, %r257, 30;
	mov.b64 	%rd634, {%r262, %r261};
	xor.b64  	%rd635, %rd633, %rd634;
	shf.l.wrap.b32 	%r263, %r257, %r258, 25;
	shf.l.wrap.b32 	%r264, %r258, %r257, 25;
	mov.b64 	%rd636, {%r264, %r263};
	xor.b64  	%rd637, %rd635, %rd636;
	add.s64 	%rd638, %rd637, %rd632;
	add.s64 	%rd2299, %rd638, %rd628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd2303;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 14;
	shf.r.wrap.b32 	%r268, %r265, %r266, 14;
	mov.b64 	%rd639, {%r268, %r267};
	shf.r.wrap.b32 	%r269, %r266, %r265, 18;
	shf.r.wrap.b32 	%r270, %r265, %r266, 18;
	mov.b64 	%rd640, {%r270, %r269};
	xor.b64  	%rd641, %rd639, %rd640;
	shf.l.wrap.b32 	%r271, %r265, %r266, 23;
	shf.l.wrap.b32 	%r272, %r266, %r265, 23;
	mov.b64 	%rd642, {%r272, %r271};
	xor.b64  	%rd643, %rd641, %rd642;
	xor.b64  	%rd644, %rd2304, %rd583;
	and.b64  	%rd645, %rd2303, %rd644;
	xor.b64  	%rd646, %rd645, %rd583;
	add.s64 	%rd647, %rd646, %rd559;
	add.s64 	%rd648, %rd647, %rd643;
	add.s64 	%rd649, %rd648, %rd2282;
	add.s64 	%rd650, %rd649, -7215885187991268811;
	add.s64 	%rd2302, %rd650, %rd570;
	and.b64  	%rd651, %rd2299, %rd2300;
	or.b64  	%rd652, %rd2299, %rd2300;
	and.b64  	%rd653, %rd652, %rd594;
	or.b64  	%rd654, %rd653, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd2299;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 28;
	shf.r.wrap.b32 	%r276, %r273, %r274, 28;
	mov.b64 	%rd655, {%r276, %r275};
	shf.l.wrap.b32 	%r277, %r273, %r274, 30;
	shf.l.wrap.b32 	%r278, %r274, %r273, 30;
	mov.b64 	%rd656, {%r278, %r277};
	xor.b64  	%rd657, %rd655, %rd656;
	shf.l.wrap.b32 	%r279, %r273, %r274, 25;
	shf.l.wrap.b32 	%r280, %r274, %r273, 25;
	mov.b64 	%rd658, {%r280, %r279};
	xor.b64  	%rd659, %rd657, %rd658;
	add.s64 	%rd660, %rd659, %rd654;
	add.s64 	%rd2298, %rd660, %rd650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd2302;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 14;
	shf.r.wrap.b32 	%r284, %r281, %r282, 14;
	mov.b64 	%rd661, {%r284, %r283};
	shf.r.wrap.b32 	%r285, %r282, %r281, 18;
	shf.r.wrap.b32 	%r286, %r281, %r282, 18;
	mov.b64 	%rd662, {%r286, %r285};
	xor.b64  	%rd663, %rd661, %rd662;
	shf.l.wrap.b32 	%r287, %r281, %r282, 23;
	shf.l.wrap.b32 	%r288, %r282, %r281, 23;
	mov.b64 	%rd664, {%r288, %r287};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd2303, %rd2304;
	and.b64  	%rd667, %rd2302, %rd666;
	xor.b64  	%rd668, %rd667, %rd2304;
	add.s64 	%rd669, %rd668, %rd583;
	add.s64 	%rd670, %rd669, %rd665;
	add.s64 	%rd671, %rd670, %rd2281;
	add.s64 	%rd672, %rd671, -4495734319001033068;
	add.s64 	%rd2301, %rd672, %rd594;
	and.b64  	%rd673, %rd2298, %rd2299;
	or.b64  	%rd674, %rd2298, %rd2299;
	and.b64  	%rd675, %rd674, %rd2300;
	or.b64  	%rd676, %rd675, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd2298;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 28;
	shf.r.wrap.b32 	%r292, %r289, %r290, 28;
	mov.b64 	%rd677, {%r292, %r291};
	shf.l.wrap.b32 	%r293, %r289, %r290, 30;
	shf.l.wrap.b32 	%r294, %r290, %r289, 30;
	mov.b64 	%rd678, {%r294, %r293};
	xor.b64  	%rd679, %rd677, %rd678;
	shf.l.wrap.b32 	%r295, %r289, %r290, 25;
	shf.l.wrap.b32 	%r296, %r290, %r289, 25;
	mov.b64 	%rd680, {%r296, %r295};
	xor.b64  	%rd681, %rd679, %rd680;
	add.s64 	%rd682, %rd681, %rd676;
	add.s64 	%rd2297, %rd682, %rd672;
	mov.u32 	%r1448, 16;

$L__BB2_7:
	.pragma "nounroll";
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r297}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r298,%dummy}, %rd2282;
	}
	shf.l.wrap.b32 	%r299, %r298, %r297, 3;
	shf.l.wrap.b32 	%r300, %r297, %r298, 3;
	mov.b64 	%rd683, {%r300, %r299};
	shf.r.wrap.b32 	%r301, %r297, %r298, 19;
	shf.r.wrap.b32 	%r302, %r298, %r297, 19;
	mov.b64 	%rd684, {%r302, %r301};
	xor.b64  	%rd685, %rd684, %rd683;
	shr.u64 	%rd686, %rd2282, 6;
	xor.b64  	%rd687, %rd685, %rd686;
	add.s64 	%rd688, %rd2287, %rd2296;
	add.s64 	%rd689, %rd688, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r303,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd2295;
	}
	shf.r.wrap.b32 	%r305, %r304, %r303, 8;
	shf.r.wrap.b32 	%r306, %r303, %r304, 8;
	mov.b64 	%rd690, {%r306, %r305};
	shf.r.wrap.b32 	%r307, %r304, %r303, 1;
	shf.r.wrap.b32 	%r308, %r303, %r304, 1;
	mov.b64 	%rd691, {%r308, %r307};
	xor.b64  	%rd692, %rd691, %rd690;
	shr.u64 	%rd693, %rd2295, 7;
	xor.b64  	%rd694, %rd692, %rd693;
	add.s64 	%rd2296, %rd689, %rd694;
	mul.wide.u32 	%rd695, %r1448, 8;
	mov.u64 	%rd696, k;
	add.s64 	%rd697, %rd696, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r309,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r310}, %rd2301;
	}
	shf.r.wrap.b32 	%r311, %r310, %r309, 18;
	shf.r.wrap.b32 	%r312, %r309, %r310, 18;
	mov.b64 	%rd698, {%r312, %r311};
	shf.r.wrap.b32 	%r313, %r310, %r309, 14;
	shf.r.wrap.b32 	%r314, %r309, %r310, 14;
	mov.b64 	%rd699, {%r314, %r313};
	xor.b64  	%rd700, %rd699, %rd698;
	shf.l.wrap.b32 	%r315, %r309, %r310, 23;
	shf.l.wrap.b32 	%r316, %r310, %r309, 23;
	mov.b64 	%rd701, {%r316, %r315};
	xor.b64  	%rd702, %rd700, %rd701;
	xor.b64  	%rd703, %rd2302, %rd2303;
	and.b64  	%rd704, %rd2301, %rd703;
	xor.b64  	%rd705, %rd704, %rd2303;
	add.s64 	%rd706, %rd705, %rd2304;
	add.s64 	%rd707, %rd706, %rd702;
	ld.const.u64 	%rd708, [%rd697];
	add.s64 	%rd709, %rd707, %rd708;
	add.s64 	%rd710, %rd709, %rd2296;
	add.s64 	%rd711, %rd710, %rd2300;
	or.b64  	%rd712, %rd2297, %rd2298;
	and.b64  	%rd713, %rd712, %rd2299;
	and.b64  	%rd714, %rd2297, %rd2298;
	or.b64  	%rd715, %rd713, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd2297;
	}
	shf.l.wrap.b32 	%r319, %r318, %r317, 30;
	shf.l.wrap.b32 	%r320, %r317, %r318, 30;
	mov.b64 	%rd716, {%r320, %r319};
	shf.r.wrap.b32 	%r321, %r317, %r318, 28;
	shf.r.wrap.b32 	%r322, %r318, %r317, 28;
	mov.b64 	%rd717, {%r322, %r321};
	xor.b64  	%rd718, %rd717, %rd716;
	shf.l.wrap.b32 	%r323, %r318, %r317, 25;
	shf.l.wrap.b32 	%r324, %r317, %r318, 25;
	mov.b64 	%rd719, {%r324, %r323};
	xor.b64  	%rd720, %rd718, %rd719;
	add.s64 	%rd721, %rd720, %rd715;
	add.s64 	%rd722, %rd721, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r326,%dummy}, %rd2281;
	}
	shf.l.wrap.b32 	%r327, %r326, %r325, 3;
	shf.l.wrap.b32 	%r328, %r325, %r326, 3;
	mov.b64 	%rd723, {%r328, %r327};
	shf.r.wrap.b32 	%r329, %r325, %r326, 19;
	shf.r.wrap.b32 	%r330, %r326, %r325, 19;
	mov.b64 	%rd724, {%r330, %r329};
	xor.b64  	%rd725, %rd724, %rd723;
	shr.u64 	%rd726, %rd2281, 6;
	xor.b64  	%rd727, %rd725, %rd726;
	add.s64 	%rd728, %rd2286, %rd2295;
	add.s64 	%rd729, %rd728, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd2294;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 8;
	shf.r.wrap.b32 	%r334, %r331, %r332, 8;
	mov.b64 	%rd730, {%r334, %r333};
	shf.r.wrap.b32 	%r335, %r332, %r331, 1;
	shf.r.wrap.b32 	%r336, %r331, %r332, 1;
	mov.b64 	%rd731, {%r336, %r335};
	xor.b64  	%rd732, %rd731, %rd730;
	shr.u64 	%rd733, %rd2294, 7;
	xor.b64  	%rd734, %rd732, %rd733;
	add.s64 	%rd2295, %rd729, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd711;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 14;
	shf.r.wrap.b32 	%r340, %r337, %r338, 14;
	mov.b64 	%rd735, {%r340, %r339};
	shf.r.wrap.b32 	%r341, %r338, %r337, 18;
	shf.r.wrap.b32 	%r342, %r337, %r338, 18;
	mov.b64 	%rd736, {%r342, %r341};
	xor.b64  	%rd737, %rd735, %rd736;
	shf.l.wrap.b32 	%r343, %r337, %r338, 23;
	shf.l.wrap.b32 	%r344, %r338, %r337, 23;
	mov.b64 	%rd738, {%r344, %r343};
	xor.b64  	%rd739, %rd737, %rd738;
	xor.b64  	%rd740, %rd2301, %rd2302;
	and.b64  	%rd741, %rd711, %rd740;
	xor.b64  	%rd742, %rd741, %rd2302;
	add.s64 	%rd743, %rd742, %rd2303;
	add.s64 	%rd744, %rd743, %rd739;
	ld.const.u64 	%rd745, [%rd697+8];
	add.s64 	%rd746, %rd744, %rd745;
	add.s64 	%rd747, %rd746, %rd2295;
	add.s64 	%rd748, %rd747, %rd2299;
	and.b64  	%rd749, %rd722, %rd2297;
	or.b64  	%rd750, %rd722, %rd2297;
	and.b64  	%rd751, %rd750, %rd2298;
	or.b64  	%rd752, %rd751, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r346}, %rd722;
	}
	shf.r.wrap.b32 	%r347, %r346, %r345, 28;
	shf.r.wrap.b32 	%r348, %r345, %r346, 28;
	mov.b64 	%rd753, {%r348, %r347};
	shf.l.wrap.b32 	%r349, %r345, %r346, 30;
	shf.l.wrap.b32 	%r350, %r346, %r345, 30;
	mov.b64 	%rd754, {%r350, %r349};
	xor.b64  	%rd755, %rd753, %rd754;
	shf.l.wrap.b32 	%r351, %r345, %r346, 25;
	shf.l.wrap.b32 	%r352, %r346, %r345, 25;
	mov.b64 	%rd756, {%r352, %r351};
	xor.b64  	%rd757, %rd755, %rd756;
	add.s64 	%rd758, %rd757, %rd752;
	add.s64 	%rd759, %rd758, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd2296;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 19;
	shf.r.wrap.b32 	%r356, %r353, %r354, 19;
	mov.b64 	%rd760, {%r356, %r355};
	shf.l.wrap.b32 	%r357, %r353, %r354, 3;
	shf.l.wrap.b32 	%r358, %r354, %r353, 3;
	mov.b64 	%rd761, {%r358, %r357};
	xor.b64  	%rd762, %rd760, %rd761;
	shr.u64 	%rd763, %rd2296, 6;
	xor.b64  	%rd764, %rd762, %rd763;
	add.s64 	%rd765, %rd2285, %rd2294;
	add.s64 	%rd766, %rd765, %rd764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd2293;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 8;
	shf.r.wrap.b32 	%r362, %r359, %r360, 8;
	mov.b64 	%rd767, {%r362, %r361};
	shf.r.wrap.b32 	%r363, %r360, %r359, 1;
	shf.r.wrap.b32 	%r364, %r359, %r360, 1;
	mov.b64 	%rd768, {%r364, %r363};
	xor.b64  	%rd769, %rd768, %rd767;
	shr.u64 	%rd770, %rd2293, 7;
	xor.b64  	%rd771, %rd769, %rd770;
	add.s64 	%rd2294, %rd766, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd748;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 14;
	shf.r.wrap.b32 	%r368, %r365, %r366, 14;
	mov.b64 	%rd772, {%r368, %r367};
	shf.r.wrap.b32 	%r369, %r366, %r365, 18;
	shf.r.wrap.b32 	%r370, %r365, %r366, 18;
	mov.b64 	%rd773, {%r370, %r369};
	xor.b64  	%rd774, %rd772, %rd773;
	shf.l.wrap.b32 	%r371, %r365, %r366, 23;
	shf.l.wrap.b32 	%r372, %r366, %r365, 23;
	mov.b64 	%rd775, {%r372, %r371};
	xor.b64  	%rd776, %rd774, %rd775;
	xor.b64  	%rd777, %rd711, %rd2301;
	and.b64  	%rd778, %rd748, %rd777;
	xor.b64  	%rd779, %rd778, %rd2301;
	add.s64 	%rd780, %rd779, %rd2302;
	add.s64 	%rd781, %rd780, %rd776;
	ld.const.u64 	%rd782, [%rd697+16];
	add.s64 	%rd783, %rd781, %rd782;
	add.s64 	%rd784, %rd783, %rd2294;
	add.s64 	%rd785, %rd784, %rd2298;
	and.b64  	%rd786, %rd759, %rd722;
	or.b64  	%rd787, %rd759, %rd722;
	and.b64  	%rd788, %rd787, %rd2297;
	or.b64  	%rd789, %rd788, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd759;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 28;
	shf.r.wrap.b32 	%r376, %r373, %r374, 28;
	mov.b64 	%rd790, {%r376, %r375};
	shf.l.wrap.b32 	%r377, %r373, %r374, 30;
	shf.l.wrap.b32 	%r378, %r374, %r373, 30;
	mov.b64 	%rd791, {%r378, %r377};
	xor.b64  	%rd792, %rd790, %rd791;
	shf.l.wrap.b32 	%r379, %r373, %r374, 25;
	shf.l.wrap.b32 	%r380, %r374, %r373, 25;
	mov.b64 	%rd793, {%r380, %r379};
	xor.b64  	%rd794, %rd792, %rd793;
	add.s64 	%rd795, %rd794, %rd789;
	add.s64 	%rd796, %rd795, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r382}, %rd2295;
	}
	shf.r.wrap.b32 	%r383, %r382, %r381, 19;
	shf.r.wrap.b32 	%r384, %r381, %r382, 19;
	mov.b64 	%rd797, {%r384, %r383};
	shf.l.wrap.b32 	%r385, %r381, %r382, 3;
	shf.l.wrap.b32 	%r386, %r382, %r381, 3;
	mov.b64 	%rd798, {%r386, %r385};
	xor.b64  	%rd799, %rd797, %rd798;
	shr.u64 	%rd800, %rd2295, 6;
	xor.b64  	%rd801, %rd799, %rd800;
	add.s64 	%rd802, %rd2284, %rd2293;
	add.s64 	%rd803, %rd802, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd2292;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 8;
	shf.r.wrap.b32 	%r390, %r387, %r388, 8;
	mov.b64 	%rd804, {%r390, %r389};
	shf.r.wrap.b32 	%r391, %r388, %r387, 1;
	shf.r.wrap.b32 	%r392, %r387, %r388, 1;
	mov.b64 	%rd805, {%r392, %r391};
	xor.b64  	%rd806, %rd805, %rd804;
	shr.u64 	%rd807, %rd2292, 7;
	xor.b64  	%rd808, %rd806, %rd807;
	add.s64 	%rd2293, %rd803, %rd808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd785;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 14;
	shf.r.wrap.b32 	%r396, %r393, %r394, 14;
	mov.b64 	%rd809, {%r396, %r395};
	shf.r.wrap.b32 	%r397, %r394, %r393, 18;
	shf.r.wrap.b32 	%r398, %r393, %r394, 18;
	mov.b64 	%rd810, {%r398, %r397};
	xor.b64  	%rd811, %rd809, %rd810;
	shf.l.wrap.b32 	%r399, %r393, %r394, 23;
	shf.l.wrap.b32 	%r400, %r394, %r393, 23;
	mov.b64 	%rd812, {%r400, %r399};
	xor.b64  	%rd813, %rd811, %rd812;
	xor.b64  	%rd814, %rd748, %rd711;
	and.b64  	%rd815, %rd785, %rd814;
	xor.b64  	%rd816, %rd815, %rd711;
	add.s64 	%rd817, %rd816, %rd2301;
	add.s64 	%rd818, %rd817, %rd813;
	ld.const.u64 	%rd819, [%rd697+24];
	add.s64 	%rd820, %rd818, %rd819;
	add.s64 	%rd821, %rd820, %rd2293;
	add.s64 	%rd822, %rd821, %rd2297;
	and.b64  	%rd823, %rd796, %rd759;
	or.b64  	%rd824, %rd796, %rd759;
	and.b64  	%rd825, %rd824, %rd722;
	or.b64  	%rd826, %rd825, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd796;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 28;
	shf.r.wrap.b32 	%r404, %r401, %r402, 28;
	mov.b64 	%rd827, {%r404, %r403};
	shf.l.wrap.b32 	%r405, %r401, %r402, 30;
	shf.l.wrap.b32 	%r406, %r402, %r401, 30;
	mov.b64 	%rd828, {%r406, %r405};
	xor.b64  	%rd829, %rd827, %rd828;
	shf.l.wrap.b32 	%r407, %r401, %r402, 25;
	shf.l.wrap.b32 	%r408, %r402, %r401, 25;
	mov.b64 	%rd830, {%r408, %r407};
	xor.b64  	%rd831, %rd829, %rd830;
	add.s64 	%rd832, %rd831, %rd826;
	add.s64 	%rd833, %rd832, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd2294;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 19;
	shf.r.wrap.b32 	%r412, %r409, %r410, 19;
	mov.b64 	%rd834, {%r412, %r411};
	shf.l.wrap.b32 	%r413, %r409, %r410, 3;
	shf.l.wrap.b32 	%r414, %r410, %r409, 3;
	mov.b64 	%rd835, {%r414, %r413};
	xor.b64  	%rd836, %rd834, %rd835;
	shr.u64 	%rd837, %rd2294, 6;
	xor.b64  	%rd838, %rd836, %rd837;
	add.s64 	%rd839, %rd2283, %rd2292;
	add.s64 	%rd840, %rd839, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd2291;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 8;
	shf.r.wrap.b32 	%r418, %r415, %r416, 8;
	mov.b64 	%rd841, {%r418, %r417};
	shf.r.wrap.b32 	%r419, %r416, %r415, 1;
	shf.r.wrap.b32 	%r420, %r415, %r416, 1;
	mov.b64 	%rd842, {%r420, %r419};
	xor.b64  	%rd843, %rd842, %rd841;
	shr.u64 	%rd844, %rd2291, 7;
	xor.b64  	%rd845, %rd843, %rd844;
	add.s64 	%rd2292, %rd840, %rd845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd822;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 14;
	shf.r.wrap.b32 	%r424, %r421, %r422, 14;
	mov.b64 	%rd846, {%r424, %r423};
	shf.r.wrap.b32 	%r425, %r422, %r421, 18;
	shf.r.wrap.b32 	%r426, %r421, %r422, 18;
	mov.b64 	%rd847, {%r426, %r425};
	xor.b64  	%rd848, %rd846, %rd847;
	shf.l.wrap.b32 	%r427, %r421, %r422, 23;
	shf.l.wrap.b32 	%r428, %r422, %r421, 23;
	mov.b64 	%rd849, {%r428, %r427};
	xor.b64  	%rd850, %rd848, %rd849;
	xor.b64  	%rd851, %rd785, %rd748;
	and.b64  	%rd852, %rd822, %rd851;
	xor.b64  	%rd853, %rd852, %rd748;
	add.s64 	%rd854, %rd853, %rd711;
	add.s64 	%rd855, %rd854, %rd850;
	ld.const.u64 	%rd856, [%rd697+32];
	add.s64 	%rd857, %rd855, %rd856;
	add.s64 	%rd858, %rd857, %rd2292;
	add.s64 	%rd859, %rd858, %rd722;
	and.b64  	%rd860, %rd833, %rd796;
	or.b64  	%rd861, %rd833, %rd796;
	and.b64  	%rd862, %rd861, %rd759;
	or.b64  	%rd863, %rd862, %rd860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r429,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r430}, %rd833;
	}
	shf.r.wrap.b32 	%r431, %r430, %r429, 28;
	shf.r.wrap.b32 	%r432, %r429, %r430, 28;
	mov.b64 	%rd864, {%r432, %r431};
	shf.l.wrap.b32 	%r433, %r429, %r430, 30;
	shf.l.wrap.b32 	%r434, %r430, %r429, 30;
	mov.b64 	%rd865, {%r434, %r433};
	xor.b64  	%rd866, %rd864, %rd865;
	shf.l.wrap.b32 	%r435, %r429, %r430, 25;
	shf.l.wrap.b32 	%r436, %r430, %r429, 25;
	mov.b64 	%rd867, {%r436, %r435};
	xor.b64  	%rd868, %rd866, %rd867;
	add.s64 	%rd869, %rd868, %rd863;
	add.s64 	%rd870, %rd869, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r438}, %rd2293;
	}
	shf.r.wrap.b32 	%r439, %r438, %r437, 19;
	shf.r.wrap.b32 	%r440, %r437, %r438, 19;
	mov.b64 	%rd871, {%r440, %r439};
	shf.l.wrap.b32 	%r441, %r437, %r438, 3;
	shf.l.wrap.b32 	%r442, %r438, %r437, 3;
	mov.b64 	%rd872, {%r442, %r441};
	xor.b64  	%rd873, %rd871, %rd872;
	shr.u64 	%rd874, %rd2293, 6;
	xor.b64  	%rd875, %rd873, %rd874;
	add.s64 	%rd876, %rd2282, %rd2291;
	add.s64 	%rd877, %rd876, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd2290;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 8;
	shf.r.wrap.b32 	%r446, %r443, %r444, 8;
	mov.b64 	%rd878, {%r446, %r445};
	shf.r.wrap.b32 	%r447, %r444, %r443, 1;
	shf.r.wrap.b32 	%r448, %r443, %r444, 1;
	mov.b64 	%rd879, {%r448, %r447};
	xor.b64  	%rd880, %rd879, %rd878;
	shr.u64 	%rd881, %rd2290, 7;
	xor.b64  	%rd882, %rd880, %rd881;
	add.s64 	%rd2291, %rd877, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd859;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 14;
	shf.r.wrap.b32 	%r452, %r449, %r450, 14;
	mov.b64 	%rd883, {%r452, %r451};
	shf.r.wrap.b32 	%r453, %r450, %r449, 18;
	shf.r.wrap.b32 	%r454, %r449, %r450, 18;
	mov.b64 	%rd884, {%r454, %r453};
	xor.b64  	%rd885, %rd883, %rd884;
	shf.l.wrap.b32 	%r455, %r449, %r450, 23;
	shf.l.wrap.b32 	%r456, %r450, %r449, 23;
	mov.b64 	%rd886, {%r456, %r455};
	xor.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd822, %rd785;
	and.b64  	%rd889, %rd859, %rd888;
	xor.b64  	%rd890, %rd889, %rd785;
	add.s64 	%rd891, %rd890, %rd748;
	add.s64 	%rd892, %rd891, %rd887;
	ld.const.u64 	%rd893, [%rd697+40];
	add.s64 	%rd894, %rd892, %rd893;
	add.s64 	%rd895, %rd894, %rd2291;
	add.s64 	%rd896, %rd895, %rd759;
	and.b64  	%rd897, %rd870, %rd833;
	or.b64  	%rd898, %rd870, %rd833;
	and.b64  	%rd899, %rd898, %rd796;
	or.b64  	%rd900, %rd899, %rd897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd870;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 28;
	shf.r.wrap.b32 	%r460, %r457, %r458, 28;
	mov.b64 	%rd901, {%r460, %r459};
	shf.l.wrap.b32 	%r461, %r457, %r458, 30;
	shf.l.wrap.b32 	%r462, %r458, %r457, 30;
	mov.b64 	%rd902, {%r462, %r461};
	xor.b64  	%rd903, %rd901, %rd902;
	shf.l.wrap.b32 	%r463, %r457, %r458, 25;
	shf.l.wrap.b32 	%r464, %r458, %r457, 25;
	mov.b64 	%rd904, {%r464, %r463};
	xor.b64  	%rd905, %rd903, %rd904;
	add.s64 	%rd906, %rd905, %rd900;
	add.s64 	%rd907, %rd906, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd2292;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 19;
	shf.r.wrap.b32 	%r468, %r465, %r466, 19;
	mov.b64 	%rd908, {%r468, %r467};
	shf.l.wrap.b32 	%r469, %r465, %r466, 3;
	shf.l.wrap.b32 	%r470, %r466, %r465, 3;
	mov.b64 	%rd909, {%r470, %r469};
	xor.b64  	%rd910, %rd908, %rd909;
	shr.u64 	%rd911, %rd2292, 6;
	xor.b64  	%rd912, %rd910, %rd911;
	add.s64 	%rd913, %rd2281, %rd2290;
	add.s64 	%rd914, %rd913, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd2289;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 8;
	shf.r.wrap.b32 	%r474, %r471, %r472, 8;
	mov.b64 	%rd915, {%r474, %r473};
	shf.r.wrap.b32 	%r475, %r472, %r471, 1;
	shf.r.wrap.b32 	%r476, %r471, %r472, 1;
	mov.b64 	%rd916, {%r476, %r475};
	xor.b64  	%rd917, %rd916, %rd915;
	shr.u64 	%rd918, %rd2289, 7;
	xor.b64  	%rd919, %rd917, %rd918;
	add.s64 	%rd2290, %rd914, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd896;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 14;
	shf.r.wrap.b32 	%r480, %r477, %r478, 14;
	mov.b64 	%rd920, {%r480, %r479};
	shf.r.wrap.b32 	%r481, %r478, %r477, 18;
	shf.r.wrap.b32 	%r482, %r477, %r478, 18;
	mov.b64 	%rd921, {%r482, %r481};
	xor.b64  	%rd922, %rd920, %rd921;
	shf.l.wrap.b32 	%r483, %r477, %r478, 23;
	shf.l.wrap.b32 	%r484, %r478, %r477, 23;
	mov.b64 	%rd923, {%r484, %r483};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd859, %rd822;
	and.b64  	%rd926, %rd896, %rd925;
	xor.b64  	%rd927, %rd926, %rd822;
	add.s64 	%rd928, %rd927, %rd785;
	add.s64 	%rd929, %rd928, %rd924;
	ld.const.u64 	%rd930, [%rd697+48];
	add.s64 	%rd931, %rd929, %rd930;
	add.s64 	%rd932, %rd931, %rd2290;
	add.s64 	%rd933, %rd932, %rd796;
	and.b64  	%rd934, %rd907, %rd870;
	or.b64  	%rd935, %rd907, %rd870;
	and.b64  	%rd936, %rd935, %rd833;
	or.b64  	%rd937, %rd936, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd907;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 28;
	shf.r.wrap.b32 	%r488, %r485, %r486, 28;
	mov.b64 	%rd938, {%r488, %r487};
	shf.l.wrap.b32 	%r489, %r485, %r486, 30;
	shf.l.wrap.b32 	%r490, %r486, %r485, 30;
	mov.b64 	%rd939, {%r490, %r489};
	xor.b64  	%rd940, %rd938, %rd939;
	shf.l.wrap.b32 	%r491, %r485, %r486, 25;
	shf.l.wrap.b32 	%r492, %r486, %r485, 25;
	mov.b64 	%rd941, {%r492, %r491};
	xor.b64  	%rd942, %rd940, %rd941;
	add.s64 	%rd943, %rd942, %rd937;
	add.s64 	%rd944, %rd943, %rd932;
	add.s64 	%rd945, %rd2296, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r493,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r494}, %rd2291;
	}
	shf.r.wrap.b32 	%r495, %r494, %r493, 19;
	shf.r.wrap.b32 	%r496, %r493, %r494, 19;
	mov.b64 	%rd946, {%r496, %r495};
	shf.l.wrap.b32 	%r497, %r493, %r494, 3;
	shf.l.wrap.b32 	%r498, %r494, %r493, 3;
	mov.b64 	%rd947, {%r498, %r497};
	xor.b64  	%rd948, %rd946, %rd947;
	shr.u64 	%rd949, %rd2291, 6;
	xor.b64  	%rd950, %rd948, %rd949;
	add.s64 	%rd951, %rd945, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd2288;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 8;
	shf.r.wrap.b32 	%r502, %r499, %r500, 8;
	mov.b64 	%rd952, {%r502, %r501};
	shf.r.wrap.b32 	%r503, %r500, %r499, 1;
	shf.r.wrap.b32 	%r504, %r499, %r500, 1;
	mov.b64 	%rd953, {%r504, %r503};
	xor.b64  	%rd954, %rd953, %rd952;
	shr.u64 	%rd955, %rd2288, 7;
	xor.b64  	%rd956, %rd954, %rd955;
	add.s64 	%rd2289, %rd951, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd933;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd957, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd958, {%r510, %r509};
	xor.b64  	%rd959, %rd957, %rd958;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd960, {%r512, %r511};
	xor.b64  	%rd961, %rd959, %rd960;
	xor.b64  	%rd962, %rd896, %rd859;
	and.b64  	%rd963, %rd933, %rd962;
	xor.b64  	%rd964, %rd963, %rd859;
	add.s64 	%rd965, %rd964, %rd822;
	add.s64 	%rd966, %rd965, %rd961;
	ld.const.u64 	%rd967, [%rd697+56];
	add.s64 	%rd968, %rd966, %rd967;
	add.s64 	%rd969, %rd968, %rd2289;
	add.s64 	%rd970, %rd969, %rd833;
	and.b64  	%rd971, %rd944, %rd907;
	or.b64  	%rd972, %rd944, %rd907;
	and.b64  	%rd973, %rd972, %rd870;
	or.b64  	%rd974, %rd973, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd944;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd975, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd976, {%r518, %r517};
	xor.b64  	%rd977, %rd975, %rd976;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd978, {%r520, %r519};
	xor.b64  	%rd979, %rd977, %rd978;
	add.s64 	%rd980, %rd979, %rd974;
	add.s64 	%rd981, %rd980, %rd969;
	add.s64 	%rd982, %rd2295, %rd2288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd2290;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 19;
	shf.r.wrap.b32 	%r524, %r521, %r522, 19;
	mov.b64 	%rd983, {%r524, %r523};
	shf.l.wrap.b32 	%r525, %r521, %r522, 3;
	shf.l.wrap.b32 	%r526, %r522, %r521, 3;
	mov.b64 	%rd984, {%r526, %r525};
	xor.b64  	%rd985, %rd983, %rd984;
	shr.u64 	%rd986, %rd2290, 6;
	xor.b64  	%rd987, %rd985, %rd986;
	add.s64 	%rd988, %rd982, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd2287;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 8;
	shf.r.wrap.b32 	%r530, %r527, %r528, 8;
	mov.b64 	%rd989, {%r530, %r529};
	shf.r.wrap.b32 	%r531, %r528, %r527, 1;
	shf.r.wrap.b32 	%r532, %r527, %r528, 1;
	mov.b64 	%rd990, {%r532, %r531};
	xor.b64  	%rd991, %rd990, %rd989;
	shr.u64 	%rd992, %rd2287, 7;
	xor.b64  	%rd993, %rd991, %rd992;
	add.s64 	%rd2288, %rd988, %rd993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd970;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 14;
	shf.r.wrap.b32 	%r536, %r533, %r534, 14;
	mov.b64 	%rd994, {%r536, %r535};
	shf.r.wrap.b32 	%r537, %r534, %r533, 18;
	shf.r.wrap.b32 	%r538, %r533, %r534, 18;
	mov.b64 	%rd995, {%r538, %r537};
	xor.b64  	%rd996, %rd994, %rd995;
	shf.l.wrap.b32 	%r539, %r533, %r534, 23;
	shf.l.wrap.b32 	%r540, %r534, %r533, 23;
	mov.b64 	%rd997, {%r540, %r539};
	xor.b64  	%rd998, %rd996, %rd997;
	xor.b64  	%rd999, %rd933, %rd896;
	and.b64  	%rd1000, %rd970, %rd999;
	xor.b64  	%rd1001, %rd1000, %rd896;
	add.s64 	%rd1002, %rd1001, %rd859;
	add.s64 	%rd1003, %rd1002, %rd998;
	ld.const.u64 	%rd1004, [%rd697+64];
	add.s64 	%rd1005, %rd1003, %rd1004;
	add.s64 	%rd1006, %rd1005, %rd2288;
	add.s64 	%rd1007, %rd1006, %rd870;
	and.b64  	%rd1008, %rd981, %rd944;
	or.b64  	%rd1009, %rd981, %rd944;
	and.b64  	%rd1010, %rd1009, %rd907;
	or.b64  	%rd1011, %rd1010, %rd1008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd981;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 28;
	shf.r.wrap.b32 	%r544, %r541, %r542, 28;
	mov.b64 	%rd1012, {%r544, %r543};
	shf.l.wrap.b32 	%r545, %r541, %r542, 30;
	shf.l.wrap.b32 	%r546, %r542, %r541, 30;
	mov.b64 	%rd1013, {%r546, %r545};
	xor.b64  	%rd1014, %rd1012, %rd1013;
	shf.l.wrap.b32 	%r547, %r541, %r542, 25;
	shf.l.wrap.b32 	%r548, %r542, %r541, 25;
	mov.b64 	%rd1015, {%r548, %r547};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	add.s64 	%rd1017, %rd1016, %rd1011;
	add.s64 	%rd1018, %rd1017, %rd1006;
	add.s64 	%rd1019, %rd2294, %rd2287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r549,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r550}, %rd2289;
	}
	shf.r.wrap.b32 	%r551, %r550, %r549, 19;
	shf.r.wrap.b32 	%r552, %r549, %r550, 19;
	mov.b64 	%rd1020, {%r552, %r551};
	shf.l.wrap.b32 	%r553, %r549, %r550, 3;
	shf.l.wrap.b32 	%r554, %r550, %r549, 3;
	mov.b64 	%rd1021, {%r554, %r553};
	xor.b64  	%rd1022, %rd1020, %rd1021;
	shr.u64 	%rd1023, %rd2289, 6;
	xor.b64  	%rd1024, %rd1022, %rd1023;
	add.s64 	%rd1025, %rd1019, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd2286;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 8;
	shf.r.wrap.b32 	%r558, %r555, %r556, 8;
	mov.b64 	%rd1026, {%r558, %r557};
	shf.r.wrap.b32 	%r559, %r556, %r555, 1;
	shf.r.wrap.b32 	%r560, %r555, %r556, 1;
	mov.b64 	%rd1027, {%r560, %r559};
	xor.b64  	%rd1028, %rd1027, %rd1026;
	shr.u64 	%rd1029, %rd2286, 7;
	xor.b64  	%rd1030, %rd1028, %rd1029;
	add.s64 	%rd2287, %rd1025, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd1007;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 14;
	shf.r.wrap.b32 	%r564, %r561, %r562, 14;
	mov.b64 	%rd1031, {%r564, %r563};
	shf.r.wrap.b32 	%r565, %r562, %r561, 18;
	shf.r.wrap.b32 	%r566, %r561, %r562, 18;
	mov.b64 	%rd1032, {%r566, %r565};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	shf.l.wrap.b32 	%r567, %r561, %r562, 23;
	shf.l.wrap.b32 	%r568, %r562, %r561, 23;
	mov.b64 	%rd1034, {%r568, %r567};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	xor.b64  	%rd1036, %rd970, %rd933;
	and.b64  	%rd1037, %rd1007, %rd1036;
	xor.b64  	%rd1038, %rd1037, %rd933;
	add.s64 	%rd1039, %rd1038, %rd896;
	add.s64 	%rd1040, %rd1039, %rd1035;
	ld.const.u64 	%rd1041, [%rd697+72];
	add.s64 	%rd1042, %rd1040, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd2287;
	add.s64 	%rd1044, %rd1043, %rd907;
	and.b64  	%rd1045, %rd1018, %rd981;
	or.b64  	%rd1046, %rd1018, %rd981;
	and.b64  	%rd1047, %rd1046, %rd944;
	or.b64  	%rd1048, %rd1047, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd1018;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 28;
	shf.r.wrap.b32 	%r572, %r569, %r570, 28;
	mov.b64 	%rd1049, {%r572, %r571};
	shf.l.wrap.b32 	%r573, %r569, %r570, 30;
	shf.l.wrap.b32 	%r574, %r570, %r569, 30;
	mov.b64 	%rd1050, {%r574, %r573};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	shf.l.wrap.b32 	%r575, %r569, %r570, 25;
	shf.l.wrap.b32 	%r576, %r570, %r569, 25;
	mov.b64 	%rd1052, {%r576, %r575};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	add.s64 	%rd1054, %rd1053, %rd1048;
	add.s64 	%rd1055, %rd1054, %rd1043;
	add.s64 	%rd1056, %rd2293, %rd2286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd2288;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 19;
	shf.r.wrap.b32 	%r580, %r577, %r578, 19;
	mov.b64 	%rd1057, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 3;
	shf.l.wrap.b32 	%r582, %r578, %r577, 3;
	mov.b64 	%rd1058, {%r582, %r581};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	shr.u64 	%rd1060, %rd2288, 6;
	xor.b64  	%rd1061, %rd1059, %rd1060;
	add.s64 	%rd1062, %rd1056, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd2285;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 8;
	shf.r.wrap.b32 	%r586, %r583, %r584, 8;
	mov.b64 	%rd1063, {%r586, %r585};
	shf.r.wrap.b32 	%r587, %r584, %r583, 1;
	shf.r.wrap.b32 	%r588, %r583, %r584, 1;
	mov.b64 	%rd1064, {%r588, %r587};
	xor.b64  	%rd1065, %rd1064, %rd1063;
	shr.u64 	%rd1066, %rd2285, 7;
	xor.b64  	%rd1067, %rd1065, %rd1066;
	add.s64 	%rd2286, %rd1062, %rd1067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd1044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd1044;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 14;
	shf.r.wrap.b32 	%r592, %r589, %r590, 14;
	mov.b64 	%rd1068, {%r592, %r591};
	shf.r.wrap.b32 	%r593, %r590, %r589, 18;
	shf.r.wrap.b32 	%r594, %r589, %r590, 18;
	mov.b64 	%rd1069, {%r594, %r593};
	xor.b64  	%rd1070, %rd1068, %rd1069;
	shf.l.wrap.b32 	%r595, %r589, %r590, 23;
	shf.l.wrap.b32 	%r596, %r590, %r589, 23;
	mov.b64 	%rd1071, {%r596, %r595};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	xor.b64  	%rd1073, %rd1007, %rd970;
	and.b64  	%rd1074, %rd1044, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd970;
	add.s64 	%rd1076, %rd1075, %rd933;
	add.s64 	%rd1077, %rd1076, %rd1072;
	ld.const.u64 	%rd1078, [%rd697+80];
	add.s64 	%rd1079, %rd1077, %rd1078;
	add.s64 	%rd1080, %rd1079, %rd2286;
	add.s64 	%rd1081, %rd1080, %rd944;
	and.b64  	%rd1082, %rd1055, %rd1018;
	or.b64  	%rd1083, %rd1055, %rd1018;
	and.b64  	%rd1084, %rd1083, %rd981;
	or.b64  	%rd1085, %rd1084, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd1055;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 28;
	shf.r.wrap.b32 	%r600, %r597, %r598, 28;
	mov.b64 	%rd1086, {%r600, %r599};
	shf.l.wrap.b32 	%r601, %r597, %r598, 30;
	shf.l.wrap.b32 	%r602, %r598, %r597, 30;
	mov.b64 	%rd1087, {%r602, %r601};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	shf.l.wrap.b32 	%r603, %r597, %r598, 25;
	shf.l.wrap.b32 	%r604, %r598, %r597, 25;
	mov.b64 	%rd1089, {%r604, %r603};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	add.s64 	%rd1091, %rd1090, %rd1085;
	add.s64 	%rd1092, %rd1091, %rd1080;
	add.s64 	%rd1093, %rd2292, %rd2285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r606}, %rd2287;
	}
	shf.r.wrap.b32 	%r607, %r606, %r605, 19;
	shf.r.wrap.b32 	%r608, %r605, %r606, 19;
	mov.b64 	%rd1094, {%r608, %r607};
	shf.l.wrap.b32 	%r609, %r605, %r606, 3;
	shf.l.wrap.b32 	%r610, %r606, %r605, 3;
	mov.b64 	%rd1095, {%r610, %r609};
	xor.b64  	%rd1096, %rd1094, %rd1095;
	shr.u64 	%rd1097, %rd2287, 6;
	xor.b64  	%rd1098, %rd1096, %rd1097;
	add.s64 	%rd1099, %rd1093, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd2284;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 8;
	shf.r.wrap.b32 	%r614, %r611, %r612, 8;
	mov.b64 	%rd1100, {%r614, %r613};
	shf.r.wrap.b32 	%r615, %r612, %r611, 1;
	shf.r.wrap.b32 	%r616, %r611, %r612, 1;
	mov.b64 	%rd1101, {%r616, %r615};
	xor.b64  	%rd1102, %rd1101, %rd1100;
	shr.u64 	%rd1103, %rd2284, 7;
	xor.b64  	%rd1104, %rd1102, %rd1103;
	add.s64 	%rd2285, %rd1099, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd1081;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 14;
	shf.r.wrap.b32 	%r620, %r617, %r618, 14;
	mov.b64 	%rd1105, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 18;
	shf.r.wrap.b32 	%r622, %r617, %r618, 18;
	mov.b64 	%rd1106, {%r622, %r621};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	shf.l.wrap.b32 	%r623, %r617, %r618, 23;
	shf.l.wrap.b32 	%r624, %r618, %r617, 23;
	mov.b64 	%rd1108, {%r624, %r623};
	xor.b64  	%rd1109, %rd1107, %rd1108;
	xor.b64  	%rd1110, %rd1044, %rd1007;
	and.b64  	%rd1111, %rd1081, %rd1110;
	xor.b64  	%rd1112, %rd1111, %rd1007;
	add.s64 	%rd1113, %rd1112, %rd970;
	add.s64 	%rd1114, %rd1113, %rd1109;
	ld.const.u64 	%rd1115, [%rd697+88];
	add.s64 	%rd1116, %rd1114, %rd1115;
	add.s64 	%rd1117, %rd1116, %rd2285;
	add.s64 	%rd1118, %rd1117, %rd981;
	and.b64  	%rd1119, %rd1092, %rd1055;
	or.b64  	%rd1120, %rd1092, %rd1055;
	and.b64  	%rd1121, %rd1120, %rd1018;
	or.b64  	%rd1122, %rd1121, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd1092;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 28;
	shf.r.wrap.b32 	%r628, %r625, %r626, 28;
	mov.b64 	%rd1123, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 30;
	shf.l.wrap.b32 	%r630, %r626, %r625, 30;
	mov.b64 	%rd1124, {%r630, %r629};
	xor.b64  	%rd1125, %rd1123, %rd1124;
	shf.l.wrap.b32 	%r631, %r625, %r626, 25;
	shf.l.wrap.b32 	%r632, %r626, %r625, 25;
	mov.b64 	%rd1126, {%r632, %r631};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	add.s64 	%rd1128, %rd1127, %rd1122;
	add.s64 	%rd1129, %rd1128, %rd1117;
	add.s64 	%rd1130, %rd2291, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd2286;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 19;
	shf.r.wrap.b32 	%r636, %r633, %r634, 19;
	mov.b64 	%rd1131, {%r636, %r635};
	shf.l.wrap.b32 	%r637, %r633, %r634, 3;
	shf.l.wrap.b32 	%r638, %r634, %r633, 3;
	mov.b64 	%rd1132, {%r638, %r637};
	xor.b64  	%rd1133, %rd1131, %rd1132;
	shr.u64 	%rd1134, %rd2286, 6;
	xor.b64  	%rd1135, %rd1133, %rd1134;
	add.s64 	%rd1136, %rd1130, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd2283;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 8;
	shf.r.wrap.b32 	%r642, %r639, %r640, 8;
	mov.b64 	%rd1137, {%r642, %r641};
	shf.r.wrap.b32 	%r643, %r640, %r639, 1;
	shf.r.wrap.b32 	%r644, %r639, %r640, 1;
	mov.b64 	%rd1138, {%r644, %r643};
	xor.b64  	%rd1139, %rd1138, %rd1137;
	shr.u64 	%rd1140, %rd2283, 7;
	xor.b64  	%rd1141, %rd1139, %rd1140;
	add.s64 	%rd2284, %rd1136, %rd1141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1118;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 14;
	shf.r.wrap.b32 	%r648, %r645, %r646, 14;
	mov.b64 	%rd1142, {%r648, %r647};
	shf.r.wrap.b32 	%r649, %r646, %r645, 18;
	shf.r.wrap.b32 	%r650, %r645, %r646, 18;
	mov.b64 	%rd1143, {%r650, %r649};
	xor.b64  	%rd1144, %rd1142, %rd1143;
	shf.l.wrap.b32 	%r651, %r645, %r646, 23;
	shf.l.wrap.b32 	%r652, %r646, %r645, 23;
	mov.b64 	%rd1145, {%r652, %r651};
	xor.b64  	%rd1146, %rd1144, %rd1145;
	xor.b64  	%rd1147, %rd1081, %rd1044;
	and.b64  	%rd1148, %rd1118, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1044;
	add.s64 	%rd1150, %rd1149, %rd1007;
	add.s64 	%rd1151, %rd1150, %rd1146;
	ld.const.u64 	%rd1152, [%rd697+96];
	add.s64 	%rd1153, %rd1151, %rd1152;
	add.s64 	%rd1154, %rd1153, %rd2284;
	add.s64 	%rd2304, %rd1154, %rd1018;
	and.b64  	%rd1155, %rd1129, %rd1092;
	or.b64  	%rd1156, %rd1129, %rd1092;
	and.b64  	%rd1157, %rd1156, %rd1055;
	or.b64  	%rd1158, %rd1157, %rd1155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd1129;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 28;
	shf.r.wrap.b32 	%r656, %r653, %r654, 28;
	mov.b64 	%rd1159, {%r656, %r655};
	shf.l.wrap.b32 	%r657, %r653, %r654, 30;
	shf.l.wrap.b32 	%r658, %r654, %r653, 30;
	mov.b64 	%rd1160, {%r658, %r657};
	xor.b64  	%rd1161, %rd1159, %rd1160;
	shf.l.wrap.b32 	%r659, %r653, %r654, 25;
	shf.l.wrap.b32 	%r660, %r654, %r653, 25;
	mov.b64 	%rd1162, {%r660, %r659};
	xor.b64  	%rd1163, %rd1161, %rd1162;
	add.s64 	%rd1164, %rd1163, %rd1158;
	add.s64 	%rd2300, %rd1164, %rd1154;
	add.s64 	%rd1165, %rd2290, %rd2283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd2285;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 19;
	shf.r.wrap.b32 	%r664, %r661, %r662, 19;
	mov.b64 	%rd1166, {%r664, %r663};
	shf.l.wrap.b32 	%r665, %r661, %r662, 3;
	shf.l.wrap.b32 	%r666, %r662, %r661, 3;
	mov.b64 	%rd1167, {%r666, %r665};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	shr.u64 	%rd1169, %rd2285, 6;
	xor.b64  	%rd1170, %rd1168, %rd1169;
	add.s64 	%rd1171, %rd1165, %rd1170;
	shf.r.wrap.b32 	%r667, %r297, %r298, 8;
	shf.r.wrap.b32 	%r668, %r298, %r297, 8;
	mov.b64 	%rd1172, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r297, %r298, 1;
	shf.r.wrap.b32 	%r670, %r298, %r297, 1;
	mov.b64 	%rd1173, {%r670, %r669};
	xor.b64  	%rd1174, %rd1173, %rd1172;
	shr.u64 	%rd1175, %rd2282, 7;
	xor.b64  	%rd1176, %rd1174, %rd1175;
	add.s64 	%rd2283, %rd1171, %rd1176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd2304;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 14;
	shf.r.wrap.b32 	%r674, %r671, %r672, 14;
	mov.b64 	%rd1177, {%r674, %r673};
	shf.r.wrap.b32 	%r675, %r672, %r671, 18;
	shf.r.wrap.b32 	%r676, %r671, %r672, 18;
	mov.b64 	%rd1178, {%r676, %r675};
	xor.b64  	%rd1179, %rd1177, %rd1178;
	shf.l.wrap.b32 	%r677, %r671, %r672, 23;
	shf.l.wrap.b32 	%r678, %r672, %r671, 23;
	mov.b64 	%rd1180, {%r678, %r677};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	xor.b64  	%rd1182, %rd1118, %rd1081;
	and.b64  	%rd1183, %rd2304, %rd1182;
	xor.b64  	%rd1184, %rd1183, %rd1081;
	add.s64 	%rd1185, %rd1184, %rd1044;
	add.s64 	%rd1186, %rd1185, %rd1181;
	ld.const.u64 	%rd1187, [%rd697+104];
	add.s64 	%rd1188, %rd1186, %rd1187;
	add.s64 	%rd1189, %rd1188, %rd2283;
	add.s64 	%rd2303, %rd1189, %rd1055;
	and.b64  	%rd1190, %rd2300, %rd1129;
	or.b64  	%rd1191, %rd2300, %rd1129;
	and.b64  	%rd1192, %rd1191, %rd1092;
	or.b64  	%rd1193, %rd1192, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd2300;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 28;
	shf.r.wrap.b32 	%r682, %r679, %r680, 28;
	mov.b64 	%rd1194, {%r682, %r681};
	shf.l.wrap.b32 	%r683, %r679, %r680, 30;
	shf.l.wrap.b32 	%r684, %r680, %r679, 30;
	mov.b64 	%rd1195, {%r684, %r683};
	xor.b64  	%rd1196, %rd1194, %rd1195;
	shf.l.wrap.b32 	%r685, %r679, %r680, 25;
	shf.l.wrap.b32 	%r686, %r680, %r679, 25;
	mov.b64 	%rd1197, {%r686, %r685};
	xor.b64  	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1198, %rd1193;
	add.s64 	%rd2299, %rd1199, %rd1189;
	add.s64 	%rd1200, %rd2289, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd2284;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 19;
	shf.r.wrap.b32 	%r690, %r687, %r688, 19;
	mov.b64 	%rd1201, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 3;
	shf.l.wrap.b32 	%r692, %r688, %r687, 3;
	mov.b64 	%rd1202, {%r692, %r691};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	shr.u64 	%rd1204, %rd2284, 6;
	xor.b64  	%rd1205, %rd1203, %rd1204;
	add.s64 	%rd1206, %rd1200, %rd1205;
	shf.r.wrap.b32 	%r693, %r325, %r326, 8;
	shf.r.wrap.b32 	%r694, %r326, %r325, 8;
	mov.b64 	%rd1207, {%r694, %r693};
	shf.r.wrap.b32 	%r695, %r325, %r326, 1;
	shf.r.wrap.b32 	%r696, %r326, %r325, 1;
	mov.b64 	%rd1208, {%r696, %r695};
	xor.b64  	%rd1209, %rd1208, %rd1207;
	shr.u64 	%rd1210, %rd2281, 7;
	xor.b64  	%rd1211, %rd1209, %rd1210;
	add.s64 	%rd2282, %rd1206, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd2303;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 14;
	shf.r.wrap.b32 	%r700, %r697, %r698, 14;
	mov.b64 	%rd1212, {%r700, %r699};
	shf.r.wrap.b32 	%r701, %r698, %r697, 18;
	shf.r.wrap.b32 	%r702, %r697, %r698, 18;
	mov.b64 	%rd1213, {%r702, %r701};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	shf.l.wrap.b32 	%r703, %r697, %r698, 23;
	shf.l.wrap.b32 	%r704, %r698, %r697, 23;
	mov.b64 	%rd1215, {%r704, %r703};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	xor.b64  	%rd1217, %rd2304, %rd1118;
	and.b64  	%rd1218, %rd2303, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1118;
	add.s64 	%rd1220, %rd1219, %rd1081;
	add.s64 	%rd1221, %rd1220, %rd1216;
	ld.const.u64 	%rd1222, [%rd697+112];
	add.s64 	%rd1223, %rd1221, %rd1222;
	add.s64 	%rd1224, %rd1223, %rd2282;
	add.s64 	%rd2302, %rd1224, %rd1092;
	and.b64  	%rd1225, %rd2299, %rd2300;
	or.b64  	%rd1226, %rd2299, %rd2300;
	and.b64  	%rd1227, %rd1226, %rd1129;
	or.b64  	%rd1228, %rd1227, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd2299;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 28;
	shf.r.wrap.b32 	%r708, %r705, %r706, 28;
	mov.b64 	%rd1229, {%r708, %r707};
	shf.l.wrap.b32 	%r709, %r705, %r706, 30;
	shf.l.wrap.b32 	%r710, %r706, %r705, 30;
	mov.b64 	%rd1230, {%r710, %r709};
	xor.b64  	%rd1231, %rd1229, %rd1230;
	shf.l.wrap.b32 	%r711, %r705, %r706, 25;
	shf.l.wrap.b32 	%r712, %r706, %r705, 25;
	mov.b64 	%rd1232, {%r712, %r711};
	xor.b64  	%rd1233, %rd1231, %rd1232;
	add.s64 	%rd1234, %rd1233, %rd1228;
	add.s64 	%rd2298, %rd1234, %rd1224;
	add.s64 	%rd1235, %rd2288, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd2283;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 19;
	shf.r.wrap.b32 	%r716, %r713, %r714, 19;
	mov.b64 	%rd1236, {%r716, %r715};
	shf.l.wrap.b32 	%r717, %r713, %r714, 3;
	shf.l.wrap.b32 	%r718, %r714, %r713, 3;
	mov.b64 	%rd1237, {%r718, %r717};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	shr.u64 	%rd1239, %rd2283, 6;
	xor.b64  	%rd1240, %rd1238, %rd1239;
	add.s64 	%rd1241, %rd1235, %rd1240;
	shf.r.wrap.b32 	%r719, %r354, %r353, 1;
	shf.r.wrap.b32 	%r720, %r353, %r354, 1;
	mov.b64 	%rd1242, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r354, %r353, 8;
	shf.r.wrap.b32 	%r722, %r353, %r354, 8;
	mov.b64 	%rd1243, {%r722, %r721};
	xor.b64  	%rd1244, %rd1242, %rd1243;
	shr.u64 	%rd1245, %rd2296, 7;
	xor.b64  	%rd1246, %rd1244, %rd1245;
	add.s64 	%rd2281, %rd1241, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd2302;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 14;
	shf.r.wrap.b32 	%r726, %r723, %r724, 14;
	mov.b64 	%rd1247, {%r726, %r725};
	shf.r.wrap.b32 	%r727, %r724, %r723, 18;
	shf.r.wrap.b32 	%r728, %r723, %r724, 18;
	mov.b64 	%rd1248, {%r728, %r727};
	xor.b64  	%rd1249, %rd1247, %rd1248;
	shf.l.wrap.b32 	%r729, %r723, %r724, 23;
	shf.l.wrap.b32 	%r730, %r724, %r723, 23;
	mov.b64 	%rd1250, {%r730, %r729};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	xor.b64  	%rd1252, %rd2303, %rd2304;
	and.b64  	%rd1253, %rd2302, %rd1252;
	xor.b64  	%rd1254, %rd1253, %rd2304;
	add.s64 	%rd1255, %rd1254, %rd1118;
	add.s64 	%rd1256, %rd1255, %rd1251;
	ld.const.u64 	%rd1257, [%rd697+120];
	add.s64 	%rd1258, %rd1256, %rd1257;
	add.s64 	%rd1259, %rd1258, %rd2281;
	add.s64 	%rd2301, %rd1259, %rd1129;
	and.b64  	%rd1260, %rd2298, %rd2299;
	or.b64  	%rd1261, %rd2298, %rd2299;
	and.b64  	%rd1262, %rd1261, %rd2300;
	or.b64  	%rd1263, %rd1262, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd2298;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 28;
	shf.r.wrap.b32 	%r734, %r731, %r732, 28;
	mov.b64 	%rd1264, {%r734, %r733};
	shf.l.wrap.b32 	%r735, %r731, %r732, 30;
	shf.l.wrap.b32 	%r736, %r732, %r731, 30;
	mov.b64 	%rd1265, {%r736, %r735};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	shf.l.wrap.b32 	%r737, %r731, %r732, 25;
	shf.l.wrap.b32 	%r738, %r732, %r731, 25;
	mov.b64 	%rd1267, {%r738, %r737};
	xor.b64  	%rd1268, %rd1266, %rd1267;
	add.s64 	%rd1269, %rd1268, %rd1263;
	add.s64 	%rd2297, %rd1269, %rd1259;
	add.s32 	%r1448, %r1448, 16;
	setp.ne.s32 	%p9, %r1448, 80;
	@%p9 bra 	$L__BB2_7;

	add.s64 	%rd2323, %rd2303, 2270897969802886507;
	add.s64 	%rd2327, %rd2299, 4354685564936845355;
	mov.u64 	%rd2331, 0;
	st.local.v2.u64 	[%rd11], {%rd2331, %rd2331};
	st.local.v2.u64 	[%rd11+16], {%rd2331, %rd2331};
	st.local.v2.u64 	[%rd11+32], {%rd2331, %rd2331};
	st.local.v2.u64 	[%rd11+48], {%rd2331, %rd2331};
	st.local.v2.u64 	[%rd11+64], {%rd2331, %rd2331};
	st.local.v2.u64 	[%rd11+80], {%rd2331, %rd2331};
	st.local.v2.u64 	[%rd11+96], {%rd2331, %rd2331};
	add.s64 	%rd2328, %rd2298, -4942790177534073029;
	add.s64 	%rd2326, %rd2300, -6534734903238641935;
	add.s64 	%rd2324, %rd2302, -7276294671716946913;
	add.s64 	%rd2322, %rd2304, 6620516959819538809;
	mul.wide.u32 	%rd1285, %r7, 8;
	st.local.v2.u64 	[%rd11+112], {%rd2331, %rd1285};
	add.s64 	%rd2325, %rd2301, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd2325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd2325;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 14;
	shf.r.wrap.b32 	%r742, %r739, %r740, 14;
	mov.b64 	%rd1286, {%r742, %r741};
	shf.r.wrap.b32 	%r743, %r740, %r739, 18;
	shf.r.wrap.b32 	%r744, %r739, %r740, 18;
	mov.b64 	%rd1287, {%r744, %r743};
	xor.b64  	%rd1288, %rd1286, %rd1287;
	shf.l.wrap.b32 	%r745, %r739, %r740, 23;
	shf.l.wrap.b32 	%r746, %r740, %r739, 23;
	mov.b64 	%rd1289, {%r746, %r745};
	xor.b64  	%rd2306, %rd1288, %rd1289;
	add.s64 	%rd2329, %rd2297, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd2329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd2329;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 28;
	shf.r.wrap.b32 	%r750, %r747, %r748, 28;
	mov.b64 	%rd1290, {%r750, %r749};
	shf.l.wrap.b32 	%r751, %r747, %r748, 30;
	shf.l.wrap.b32 	%r752, %r748, %r747, 30;
	mov.b64 	%rd1291, {%r752, %r751};
	xor.b64  	%rd1292, %rd1290, %rd1291;
	shf.l.wrap.b32 	%r753, %r747, %r748, 25;
	shf.l.wrap.b32 	%r754, %r748, %r747, 25;
	mov.b64 	%rd1293, {%r754, %r753};
	xor.b64  	%rd2305, %rd1292, %rd1293;
	mov.u64 	%rd2332, %rd2331;
	mov.u64 	%rd2333, %rd2331;
	mov.u64 	%rd2334, %rd2331;
	mov.u64 	%rd2335, %rd2331;
	mov.u64 	%rd2336, %rd2331;
	mov.u64 	%rd2337, %rd2331;
	mov.u64 	%rd2338, %rd2331;
	mov.u64 	%rd2339, %rd2331;
	mov.u64 	%rd2340, %rd2331;
	mov.u64 	%rd2341, %rd2331;
	mov.u64 	%rd2342, %rd2331;
	mov.u64 	%rd2343, %rd2331;
	mov.u64 	%rd2344, %rd2331;
	mov.u64 	%rd2345, %rd2331;

$L__BB2_10:
	mul.wide.u32 	%rd2330, %r7, 8;
	xor.b64  	%rd1317, %rd2324, %rd2323;
	and.b64  	%rd1318, %rd2325, %rd1317;
	xor.b64  	%rd1319, %rd1318, %rd2323;
	add.s64 	%rd1320, %rd1319, %rd2322;
	add.s64 	%rd1321, %rd1320, %rd2306;
	add.s64 	%rd1322, %rd1321, %rd2345;
	add.s64 	%rd1323, %rd1322, 4794697086780616226;
	add.s64 	%rd1324, %rd1323, %rd2326;
	or.b64  	%rd1325, %rd2329, %rd2328;
	and.b64  	%rd1326, %rd1325, %rd2327;
	and.b64  	%rd1327, %rd2329, %rd2328;
	or.b64  	%rd1328, %rd1326, %rd1327;
	add.s64 	%rd1329, %rd2305, %rd1328;
	add.s64 	%rd1330, %rd1329, %rd1323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r757}, %rd1324;
	}
	shf.r.wrap.b32 	%r758, %r757, %r756, 14;
	shf.r.wrap.b32 	%r759, %r756, %r757, 14;
	mov.b64 	%rd1331, {%r759, %r758};
	shf.r.wrap.b32 	%r760, %r757, %r756, 18;
	shf.r.wrap.b32 	%r761, %r756, %r757, 18;
	mov.b64 	%rd1332, {%r761, %r760};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	shf.l.wrap.b32 	%r762, %r756, %r757, 23;
	shf.l.wrap.b32 	%r763, %r757, %r756, 23;
	mov.b64 	%rd1334, {%r763, %r762};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	xor.b64  	%rd1336, %rd2325, %rd2324;
	and.b64  	%rd1337, %rd1324, %rd1336;
	xor.b64  	%rd1338, %rd1337, %rd2324;
	add.s64 	%rd1339, %rd1338, %rd2323;
	add.s64 	%rd1340, %rd1339, %rd1335;
	add.s64 	%rd1341, %rd1340, %rd2344;
	add.s64 	%rd1342, %rd1341, 8158064640168781261;
	add.s64 	%rd1343, %rd1342, %rd2327;
	and.b64  	%rd1344, %rd1330, %rd2329;
	or.b64  	%rd1345, %rd1330, %rd2329;
	and.b64  	%rd1346, %rd1345, %rd2328;
	or.b64  	%rd1347, %rd1346, %rd1344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd1330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1330;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 28;
	shf.r.wrap.b32 	%r767, %r764, %r765, 28;
	mov.b64 	%rd1348, {%r767, %r766};
	shf.l.wrap.b32 	%r768, %r764, %r765, 30;
	shf.l.wrap.b32 	%r769, %r765, %r764, 30;
	mov.b64 	%rd1349, {%r769, %r768};
	xor.b64  	%rd1350, %rd1348, %rd1349;
	shf.l.wrap.b32 	%r770, %r764, %r765, 25;
	shf.l.wrap.b32 	%r771, %r765, %r764, 25;
	mov.b64 	%rd1351, {%r771, %r770};
	xor.b64  	%rd1352, %rd1350, %rd1351;
	add.s64 	%rd1353, %rd1352, %rd1347;
	add.s64 	%rd1354, %rd1353, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1343;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 14;
	shf.r.wrap.b32 	%r775, %r772, %r773, 14;
	mov.b64 	%rd1355, {%r775, %r774};
	shf.r.wrap.b32 	%r776, %r773, %r772, 18;
	shf.r.wrap.b32 	%r777, %r772, %r773, 18;
	mov.b64 	%rd1356, {%r777, %r776};
	xor.b64  	%rd1357, %rd1355, %rd1356;
	shf.l.wrap.b32 	%r778, %r772, %r773, 23;
	shf.l.wrap.b32 	%r779, %r773, %r772, 23;
	mov.b64 	%rd1358, {%r779, %r778};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1324, %rd2325;
	and.b64  	%rd1361, %rd1343, %rd1360;
	xor.b64  	%rd1362, %rd1361, %rd2325;
	add.s64 	%rd1363, %rd1362, %rd2324;
	add.s64 	%rd1364, %rd1363, %rd1359;
	add.s64 	%rd1365, %rd1364, %rd2343;
	add.s64 	%rd1366, %rd1365, -5349999486874862801;
	add.s64 	%rd1367, %rd1366, %rd2328;
	and.b64  	%rd1368, %rd1354, %rd1330;
	or.b64  	%rd1369, %rd1354, %rd1330;
	and.b64  	%rd1370, %rd1369, %rd2329;
	or.b64  	%rd1371, %rd1370, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1354;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 28;
	shf.r.wrap.b32 	%r783, %r780, %r781, 28;
	mov.b64 	%rd1372, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 30;
	shf.l.wrap.b32 	%r785, %r781, %r780, 30;
	mov.b64 	%rd1373, {%r785, %r784};
	xor.b64  	%rd1374, %rd1372, %rd1373;
	shf.l.wrap.b32 	%r786, %r780, %r781, 25;
	shf.l.wrap.b32 	%r787, %r781, %r780, 25;
	mov.b64 	%rd1375, {%r787, %r786};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	add.s64 	%rd1377, %rd1376, %rd1371;
	add.s64 	%rd1378, %rd1377, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r788,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r789}, %rd1367;
	}
	shf.r.wrap.b32 	%r790, %r789, %r788, 14;
	shf.r.wrap.b32 	%r791, %r788, %r789, 14;
	mov.b64 	%rd1379, {%r791, %r790};
	shf.r.wrap.b32 	%r792, %r789, %r788, 18;
	shf.r.wrap.b32 	%r793, %r788, %r789, 18;
	mov.b64 	%rd1380, {%r793, %r792};
	xor.b64  	%rd1381, %rd1379, %rd1380;
	shf.l.wrap.b32 	%r794, %r788, %r789, 23;
	shf.l.wrap.b32 	%r795, %r789, %r788, 23;
	mov.b64 	%rd1382, {%r795, %r794};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd1343, %rd1324;
	and.b64  	%rd1385, %rd1367, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd1324;
	add.s64 	%rd1387, %rd1386, %rd2325;
	add.s64 	%rd1388, %rd1387, %rd1383;
	add.s64 	%rd1389, %rd1388, %rd2342;
	add.s64 	%rd1390, %rd1389, -1606136188198331460;
	add.s64 	%rd1391, %rd1390, %rd2329;
	and.b64  	%rd1392, %rd1378, %rd1354;
	or.b64  	%rd1393, %rd1378, %rd1354;
	and.b64  	%rd1394, %rd1393, %rd1330;
	or.b64  	%rd1395, %rd1394, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd1378;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 28;
	shf.r.wrap.b32 	%r799, %r796, %r797, 28;
	mov.b64 	%rd1396, {%r799, %r798};
	shf.l.wrap.b32 	%r800, %r796, %r797, 30;
	shf.l.wrap.b32 	%r801, %r797, %r796, 30;
	mov.b64 	%rd1397, {%r801, %r800};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	shf.l.wrap.b32 	%r802, %r796, %r797, 25;
	shf.l.wrap.b32 	%r803, %r797, %r796, 25;
	mov.b64 	%rd1399, {%r803, %r802};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	add.s64 	%rd1401, %rd1400, %rd1395;
	add.s64 	%rd1402, %rd1401, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd1391;
	}
	shf.r.wrap.b32 	%r806, %r805, %r804, 14;
	shf.r.wrap.b32 	%r807, %r804, %r805, 14;
	mov.b64 	%rd1403, {%r807, %r806};
	shf.r.wrap.b32 	%r808, %r805, %r804, 18;
	shf.r.wrap.b32 	%r809, %r804, %r805, 18;
	mov.b64 	%rd1404, {%r809, %r808};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	shf.l.wrap.b32 	%r810, %r804, %r805, 23;
	shf.l.wrap.b32 	%r811, %r805, %r804, 23;
	mov.b64 	%rd1406, {%r811, %r810};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	xor.b64  	%rd1408, %rd1367, %rd1343;
	and.b64  	%rd1409, %rd1391, %rd1408;
	xor.b64  	%rd1410, %rd1409, %rd1343;
	add.s64 	%rd1411, %rd1410, %rd1324;
	add.s64 	%rd1412, %rd1411, %rd1407;
	add.s64 	%rd1413, %rd1412, %rd2341;
	add.s64 	%rd1414, %rd1413, 4131703408338449720;
	add.s64 	%rd1415, %rd1414, %rd1330;
	and.b64  	%rd1416, %rd1402, %rd1378;
	or.b64  	%rd1417, %rd1402, %rd1378;
	and.b64  	%rd1418, %rd1417, %rd1354;
	or.b64  	%rd1419, %rd1418, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd1402;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 28;
	shf.r.wrap.b32 	%r815, %r812, %r813, 28;
	mov.b64 	%rd1420, {%r815, %r814};
	shf.l.wrap.b32 	%r816, %r812, %r813, 30;
	shf.l.wrap.b32 	%r817, %r813, %r812, 30;
	mov.b64 	%rd1421, {%r817, %r816};
	xor.b64  	%rd1422, %rd1420, %rd1421;
	shf.l.wrap.b32 	%r818, %r812, %r813, 25;
	shf.l.wrap.b32 	%r819, %r813, %r812, 25;
	mov.b64 	%rd1423, {%r819, %r818};
	xor.b64  	%rd1424, %rd1422, %rd1423;
	add.s64 	%rd1425, %rd1424, %rd1419;
	add.s64 	%rd1426, %rd1425, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd1415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd1415;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 14;
	shf.r.wrap.b32 	%r823, %r820, %r821, 14;
	mov.b64 	%rd1427, {%r823, %r822};
	shf.r.wrap.b32 	%r824, %r821, %r820, 18;
	shf.r.wrap.b32 	%r825, %r820, %r821, 18;
	mov.b64 	%rd1428, {%r825, %r824};
	xor.b64  	%rd1429, %rd1427, %rd1428;
	shf.l.wrap.b32 	%r826, %r820, %r821, 23;
	shf.l.wrap.b32 	%r827, %r821, %r820, 23;
	mov.b64 	%rd1430, {%r827, %r826};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	xor.b64  	%rd1432, %rd1391, %rd1367;
	and.b64  	%rd1433, %rd1415, %rd1432;
	xor.b64  	%rd1434, %rd1433, %rd1367;
	add.s64 	%rd1435, %rd1434, %rd1343;
	add.s64 	%rd1436, %rd1435, %rd1431;
	add.s64 	%rd1437, %rd1436, %rd2340;
	add.s64 	%rd1438, %rd1437, 6480981068601479193;
	add.s64 	%rd1439, %rd1438, %rd1354;
	and.b64  	%rd1440, %rd1426, %rd1402;
	or.b64  	%rd1441, %rd1426, %rd1402;
	and.b64  	%rd1442, %rd1441, %rd1378;
	or.b64  	%rd1443, %rd1442, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r828,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd1426;
	}
	shf.r.wrap.b32 	%r830, %r829, %r828, 28;
	shf.r.wrap.b32 	%r831, %r828, %r829, 28;
	mov.b64 	%rd1444, {%r831, %r830};
	shf.l.wrap.b32 	%r832, %r828, %r829, 30;
	shf.l.wrap.b32 	%r833, %r829, %r828, 30;
	mov.b64 	%rd1445, {%r833, %r832};
	xor.b64  	%rd1446, %rd1444, %rd1445;
	shf.l.wrap.b32 	%r834, %r828, %r829, 25;
	shf.l.wrap.b32 	%r835, %r829, %r828, 25;
	mov.b64 	%rd1447, {%r835, %r834};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	add.s64 	%rd1449, %rd1448, %rd1443;
	add.s64 	%rd1450, %rd1449, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r836,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r837}, %rd1439;
	}
	shf.r.wrap.b32 	%r838, %r837, %r836, 14;
	shf.r.wrap.b32 	%r839, %r836, %r837, 14;
	mov.b64 	%rd1451, {%r839, %r838};
	shf.r.wrap.b32 	%r840, %r837, %r836, 18;
	shf.r.wrap.b32 	%r841, %r836, %r837, 18;
	mov.b64 	%rd1452, {%r841, %r840};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	shf.l.wrap.b32 	%r842, %r836, %r837, 23;
	shf.l.wrap.b32 	%r843, %r837, %r836, 23;
	mov.b64 	%rd1454, {%r843, %r842};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	xor.b64  	%rd1456, %rd1415, %rd1391;
	and.b64  	%rd1457, %rd1439, %rd1456;
	xor.b64  	%rd1458, %rd1457, %rd1391;
	add.s64 	%rd1459, %rd1458, %rd1367;
	add.s64 	%rd1460, %rd1459, %rd1455;
	add.s64 	%rd1461, %rd1460, %rd2339;
	add.s64 	%rd1462, %rd1461, -7908458776815382629;
	add.s64 	%rd1463, %rd1462, %rd1378;
	and.b64  	%rd1464, %rd1450, %rd1426;
	or.b64  	%rd1465, %rd1450, %rd1426;
	and.b64  	%rd1466, %rd1465, %rd1402;
	or.b64  	%rd1467, %rd1466, %rd1464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r844,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd1450;
	}
	shf.r.wrap.b32 	%r846, %r845, %r844, 28;
	shf.r.wrap.b32 	%r847, %r844, %r845, 28;
	mov.b64 	%rd1468, {%r847, %r846};
	shf.l.wrap.b32 	%r848, %r844, %r845, 30;
	shf.l.wrap.b32 	%r849, %r845, %r844, 30;
	mov.b64 	%rd1469, {%r849, %r848};
	xor.b64  	%rd1470, %rd1468, %rd1469;
	shf.l.wrap.b32 	%r850, %r844, %r845, 25;
	shf.l.wrap.b32 	%r851, %r845, %r844, 25;
	mov.b64 	%rd1471, {%r851, %r850};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	add.s64 	%rd1473, %rd1472, %rd1467;
	add.s64 	%rd1474, %rd1473, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd1463;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 14;
	shf.r.wrap.b32 	%r855, %r852, %r853, 14;
	mov.b64 	%rd1475, {%r855, %r854};
	shf.r.wrap.b32 	%r856, %r853, %r852, 18;
	shf.r.wrap.b32 	%r857, %r852, %r853, 18;
	mov.b64 	%rd1476, {%r857, %r856};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	shf.l.wrap.b32 	%r858, %r852, %r853, 23;
	shf.l.wrap.b32 	%r859, %r853, %r852, 23;
	mov.b64 	%rd1478, {%r859, %r858};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	xor.b64  	%rd1480, %rd1439, %rd1415;
	and.b64  	%rd1481, %rd1463, %rd1480;
	xor.b64  	%rd1482, %rd1481, %rd1415;
	add.s64 	%rd1483, %rd1482, %rd1391;
	add.s64 	%rd1484, %rd1483, %rd1479;
	add.s64 	%rd1485, %rd1484, %rd2338;
	add.s64 	%rd1486, %rd1485, -6116909921290321640;
	add.s64 	%rd1487, %rd1486, %rd1402;
	and.b64  	%rd1488, %rd1474, %rd1450;
	or.b64  	%rd1489, %rd1474, %rd1450;
	and.b64  	%rd1490, %rd1489, %rd1426;
	or.b64  	%rd1491, %rd1490, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd1474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd1474;
	}
	shf.r.wrap.b32 	%r862, %r861, %r860, 28;
	shf.r.wrap.b32 	%r863, %r860, %r861, 28;
	mov.b64 	%rd1492, {%r863, %r862};
	shf.l.wrap.b32 	%r864, %r860, %r861, 30;
	shf.l.wrap.b32 	%r865, %r861, %r860, 30;
	mov.b64 	%rd1493, {%r865, %r864};
	xor.b64  	%rd1494, %rd1492, %rd1493;
	shf.l.wrap.b32 	%r866, %r860, %r861, 25;
	shf.l.wrap.b32 	%r867, %r861, %r860, 25;
	mov.b64 	%rd1495, {%r867, %r866};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	add.s64 	%rd1497, %rd1496, %rd1491;
	add.s64 	%rd1498, %rd1497, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd1487;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 14;
	shf.r.wrap.b32 	%r871, %r868, %r869, 14;
	mov.b64 	%rd1499, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r869, %r868, 18;
	shf.r.wrap.b32 	%r873, %r868, %r869, 18;
	mov.b64 	%rd1500, {%r873, %r872};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	shf.l.wrap.b32 	%r874, %r868, %r869, 23;
	shf.l.wrap.b32 	%r875, %r869, %r868, 23;
	mov.b64 	%rd1502, {%r875, %r874};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	xor.b64  	%rd1504, %rd1463, %rd1439;
	and.b64  	%rd1505, %rd1487, %rd1504;
	xor.b64  	%rd1506, %rd1505, %rd1439;
	add.s64 	%rd1507, %rd1506, %rd1415;
	add.s64 	%rd1508, %rd1507, %rd1503;
	add.s64 	%rd1509, %rd1508, %rd2337;
	add.s64 	%rd1510, %rd1509, -2880145864133508542;
	add.s64 	%rd1511, %rd1510, %rd1426;
	and.b64  	%rd1512, %rd1498, %rd1474;
	or.b64  	%rd1513, %rd1498, %rd1474;
	and.b64  	%rd1514, %rd1513, %rd1450;
	or.b64  	%rd1515, %rd1514, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd1498;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 28;
	shf.r.wrap.b32 	%r879, %r876, %r877, 28;
	mov.b64 	%rd1516, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 30;
	shf.l.wrap.b32 	%r881, %r877, %r876, 30;
	mov.b64 	%rd1517, {%r881, %r880};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	shf.l.wrap.b32 	%r882, %r876, %r877, 25;
	shf.l.wrap.b32 	%r883, %r877, %r876, 25;
	mov.b64 	%rd1519, {%r883, %r882};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	add.s64 	%rd1521, %rd1520, %rd1515;
	add.s64 	%rd1522, %rd1521, %rd1510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1511;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 14;
	shf.r.wrap.b32 	%r887, %r884, %r885, 14;
	mov.b64 	%rd1523, {%r887, %r886};
	shf.r.wrap.b32 	%r888, %r885, %r884, 18;
	shf.r.wrap.b32 	%r889, %r884, %r885, 18;
	mov.b64 	%rd1524, {%r889, %r888};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	shf.l.wrap.b32 	%r890, %r884, %r885, 23;
	shf.l.wrap.b32 	%r891, %r885, %r884, 23;
	mov.b64 	%rd1526, {%r891, %r890};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd1487, %rd1463;
	and.b64  	%rd1529, %rd1511, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1463;
	add.s64 	%rd1531, %rd1530, %rd1439;
	add.s64 	%rd1532, %rd1531, %rd1527;
	add.s64 	%rd1533, %rd1532, %rd2336;
	add.s64 	%rd1534, %rd1533, 1334009975649890238;
	add.s64 	%rd1535, %rd1534, %rd1450;
	and.b64  	%rd1536, %rd1522, %rd1498;
	or.b64  	%rd1537, %rd1522, %rd1498;
	and.b64  	%rd1538, %rd1537, %rd1474;
	or.b64  	%rd1539, %rd1538, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r892,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd1522;
	}
	shf.r.wrap.b32 	%r894, %r893, %r892, 28;
	shf.r.wrap.b32 	%r895, %r892, %r893, 28;
	mov.b64 	%rd1540, {%r895, %r894};
	shf.l.wrap.b32 	%r896, %r892, %r893, 30;
	shf.l.wrap.b32 	%r897, %r893, %r892, 30;
	mov.b64 	%rd1541, {%r897, %r896};
	xor.b64  	%rd1542, %rd1540, %rd1541;
	shf.l.wrap.b32 	%r898, %r892, %r893, 25;
	shf.l.wrap.b32 	%r899, %r893, %r892, 25;
	mov.b64 	%rd1543, {%r899, %r898};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	add.s64 	%rd1545, %rd1544, %rd1539;
	add.s64 	%rd1546, %rd1545, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r900,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd1535;
	}
	shf.r.wrap.b32 	%r902, %r901, %r900, 14;
	shf.r.wrap.b32 	%r903, %r900, %r901, 14;
	mov.b64 	%rd1547, {%r903, %r902};
	shf.r.wrap.b32 	%r904, %r901, %r900, 18;
	shf.r.wrap.b32 	%r905, %r900, %r901, 18;
	mov.b64 	%rd1548, {%r905, %r904};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	shf.l.wrap.b32 	%r906, %r900, %r901, 23;
	shf.l.wrap.b32 	%r907, %r901, %r900, 23;
	mov.b64 	%rd1550, {%r907, %r906};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1511, %rd1487;
	and.b64  	%rd1553, %rd1535, %rd1552;
	xor.b64  	%rd1554, %rd1553, %rd1487;
	add.s64 	%rd1555, %rd1554, %rd1463;
	add.s64 	%rd1556, %rd1555, %rd1551;
	add.s64 	%rd1557, %rd1556, %rd2335;
	add.s64 	%rd1558, %rd1557, 2608012711638119052;
	add.s64 	%rd1559, %rd1558, %rd1474;
	and.b64  	%rd1560, %rd1546, %rd1522;
	or.b64  	%rd1561, %rd1546, %rd1522;
	and.b64  	%rd1562, %rd1561, %rd1498;
	or.b64  	%rd1563, %rd1562, %rd1560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd1546;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 28;
	shf.r.wrap.b32 	%r911, %r908, %r909, 28;
	mov.b64 	%rd1564, {%r911, %r910};
	shf.l.wrap.b32 	%r912, %r908, %r909, 30;
	shf.l.wrap.b32 	%r913, %r909, %r908, 30;
	mov.b64 	%rd1565, {%r913, %r912};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	shf.l.wrap.b32 	%r914, %r908, %r909, 25;
	shf.l.wrap.b32 	%r915, %r909, %r908, 25;
	mov.b64 	%rd1567, {%r915, %r914};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	add.s64 	%rd1569, %rd1568, %rd1563;
	add.s64 	%rd1570, %rd1569, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1559;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 14;
	shf.r.wrap.b32 	%r919, %r916, %r917, 14;
	mov.b64 	%rd1571, {%r919, %r918};
	shf.r.wrap.b32 	%r920, %r917, %r916, 18;
	shf.r.wrap.b32 	%r921, %r916, %r917, 18;
	mov.b64 	%rd1572, {%r921, %r920};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	shf.l.wrap.b32 	%r922, %r916, %r917, 23;
	shf.l.wrap.b32 	%r923, %r917, %r916, 23;
	mov.b64 	%rd1574, {%r923, %r922};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	xor.b64  	%rd1576, %rd1535, %rd1511;
	and.b64  	%rd1577, %rd1559, %rd1576;
	xor.b64  	%rd1578, %rd1577, %rd1511;
	add.s64 	%rd1579, %rd1578, %rd1487;
	add.s64 	%rd1580, %rd1579, %rd1575;
	add.s64 	%rd1581, %rd1580, %rd2334;
	add.s64 	%rd1582, %rd1581, 6128411473006802146;
	add.s64 	%rd1583, %rd1582, %rd1498;
	and.b64  	%rd1584, %rd1570, %rd1546;
	or.b64  	%rd1585, %rd1570, %rd1546;
	and.b64  	%rd1586, %rd1585, %rd1522;
	or.b64  	%rd1587, %rd1586, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1570;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 28;
	shf.r.wrap.b32 	%r927, %r924, %r925, 28;
	mov.b64 	%rd1588, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 30;
	shf.l.wrap.b32 	%r929, %r925, %r924, 30;
	mov.b64 	%rd1589, {%r929, %r928};
	xor.b64  	%rd1590, %rd1588, %rd1589;
	shf.l.wrap.b32 	%r930, %r924, %r925, 25;
	shf.l.wrap.b32 	%r931, %r925, %r924, 25;
	mov.b64 	%rd1591, {%r931, %r930};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	add.s64 	%rd1593, %rd1592, %rd1587;
	add.s64 	%rd1594, %rd1593, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r932,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd1583;
	}
	shf.r.wrap.b32 	%r934, %r933, %r932, 14;
	shf.r.wrap.b32 	%r935, %r932, %r933, 14;
	mov.b64 	%rd1595, {%r935, %r934};
	shf.r.wrap.b32 	%r936, %r933, %r932, 18;
	shf.r.wrap.b32 	%r937, %r932, %r933, 18;
	mov.b64 	%rd1596, {%r937, %r936};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	shf.l.wrap.b32 	%r938, %r932, %r933, 23;
	shf.l.wrap.b32 	%r939, %r933, %r932, 23;
	mov.b64 	%rd1598, {%r939, %r938};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1559, %rd1535;
	and.b64  	%rd1601, %rd1583, %rd1600;
	xor.b64  	%rd1602, %rd1601, %rd1535;
	add.s64 	%rd1603, %rd1602, %rd1511;
	add.s64 	%rd1604, %rd1603, %rd1599;
	add.s64 	%rd1605, %rd1604, %rd2333;
	add.s64 	%rd1606, %rd1605, 8268148722764581231;
	add.s64 	%rd2353, %rd1606, %rd1522;
	and.b64  	%rd1607, %rd1594, %rd1570;
	or.b64  	%rd1608, %rd1594, %rd1570;
	and.b64  	%rd1609, %rd1608, %rd1546;
	or.b64  	%rd1610, %rd1609, %rd1607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd1594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd1594;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 28;
	shf.r.wrap.b32 	%r943, %r940, %r941, 28;
	mov.b64 	%rd1611, {%r943, %r942};
	shf.l.wrap.b32 	%r944, %r940, %r941, 30;
	shf.l.wrap.b32 	%r945, %r941, %r940, 30;
	mov.b64 	%rd1612, {%r945, %r944};
	xor.b64  	%rd1613, %rd1611, %rd1612;
	shf.l.wrap.b32 	%r946, %r940, %r941, 25;
	shf.l.wrap.b32 	%r947, %r941, %r940, 25;
	mov.b64 	%rd1614, {%r947, %r946};
	xor.b64  	%rd1615, %rd1613, %rd1614;
	add.s64 	%rd1616, %rd1615, %rd1610;
	add.s64 	%rd2349, %rd1616, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r948,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r949}, %rd2353;
	}
	shf.r.wrap.b32 	%r950, %r949, %r948, 14;
	shf.r.wrap.b32 	%r951, %r948, %r949, 14;
	mov.b64 	%rd1617, {%r951, %r950};
	shf.r.wrap.b32 	%r952, %r949, %r948, 18;
	shf.r.wrap.b32 	%r953, %r948, %r949, 18;
	mov.b64 	%rd1618, {%r953, %r952};
	xor.b64  	%rd1619, %rd1617, %rd1618;
	shf.l.wrap.b32 	%r954, %r948, %r949, 23;
	shf.l.wrap.b32 	%r955, %r949, %r948, 23;
	mov.b64 	%rd1620, {%r955, %r954};
	xor.b64  	%rd1621, %rd1619, %rd1620;
	xor.b64  	%rd1622, %rd1583, %rd1559;
	and.b64  	%rd1623, %rd2353, %rd1622;
	xor.b64  	%rd1624, %rd1623, %rd1559;
	add.s64 	%rd1625, %rd1624, %rd1535;
	add.s64 	%rd1626, %rd1625, %rd1621;
	add.s64 	%rd1627, %rd1626, %rd2332;
	add.s64 	%rd1628, %rd1627, -9160688886553864527;
	add.s64 	%rd2352, %rd1628, %rd1546;
	and.b64  	%rd1629, %rd2349, %rd1594;
	or.b64  	%rd1630, %rd2349, %rd1594;
	and.b64  	%rd1631, %rd1630, %rd1570;
	or.b64  	%rd1632, %rd1631, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r956,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd2349;
	}
	shf.r.wrap.b32 	%r958, %r957, %r956, 28;
	shf.r.wrap.b32 	%r959, %r956, %r957, 28;
	mov.b64 	%rd1633, {%r959, %r958};
	shf.l.wrap.b32 	%r960, %r956, %r957, 30;
	shf.l.wrap.b32 	%r961, %r957, %r956, 30;
	mov.b64 	%rd1634, {%r961, %r960};
	xor.b64  	%rd1635, %rd1633, %rd1634;
	shf.l.wrap.b32 	%r962, %r956, %r957, 25;
	shf.l.wrap.b32 	%r963, %r957, %r956, 25;
	mov.b64 	%rd1636, {%r963, %r962};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	add.s64 	%rd1638, %rd1637, %rd1632;
	add.s64 	%rd2348, %rd1638, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd2352;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 14;
	shf.r.wrap.b32 	%r967, %r964, %r965, 14;
	mov.b64 	%rd1639, {%r967, %r966};
	shf.r.wrap.b32 	%r968, %r965, %r964, 18;
	shf.r.wrap.b32 	%r969, %r964, %r965, 18;
	mov.b64 	%rd1640, {%r969, %r968};
	xor.b64  	%rd1641, %rd1639, %rd1640;
	shf.l.wrap.b32 	%r970, %r964, %r965, 23;
	shf.l.wrap.b32 	%r971, %r965, %r964, 23;
	mov.b64 	%rd1642, {%r971, %r970};
	xor.b64  	%rd1643, %rd1641, %rd1642;
	xor.b64  	%rd1644, %rd2353, %rd1583;
	and.b64  	%rd1645, %rd2352, %rd1644;
	xor.b64  	%rd1646, %rd1645, %rd1583;
	add.s64 	%rd1647, %rd1646, %rd1559;
	add.s64 	%rd1648, %rd1647, %rd1643;
	add.s64 	%rd1649, %rd1648, %rd2331;
	add.s64 	%rd1650, %rd1649, -7215885187991268811;
	add.s64 	%rd2351, %rd1650, %rd1570;
	and.b64  	%rd1651, %rd2348, %rd2349;
	or.b64  	%rd1652, %rd2348, %rd2349;
	and.b64  	%rd1653, %rd1652, %rd1594;
	or.b64  	%rd1654, %rd1653, %rd1651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd2348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd2348;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 28;
	shf.r.wrap.b32 	%r975, %r972, %r973, 28;
	mov.b64 	%rd1655, {%r975, %r974};
	shf.l.wrap.b32 	%r976, %r972, %r973, 30;
	shf.l.wrap.b32 	%r977, %r973, %r972, 30;
	mov.b64 	%rd1656, {%r977, %r976};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	shf.l.wrap.b32 	%r978, %r972, %r973, 25;
	shf.l.wrap.b32 	%r979, %r973, %r972, 25;
	mov.b64 	%rd1658, {%r979, %r978};
	xor.b64  	%rd1659, %rd1657, %rd1658;
	add.s64 	%rd1660, %rd1659, %rd1654;
	add.s64 	%rd2347, %rd1660, %rd1650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd2351;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 14;
	shf.r.wrap.b32 	%r983, %r980, %r981, 14;
	mov.b64 	%rd1661, {%r983, %r982};
	shf.r.wrap.b32 	%r984, %r981, %r980, 18;
	shf.r.wrap.b32 	%r985, %r980, %r981, 18;
	mov.b64 	%rd1662, {%r985, %r984};
	xor.b64  	%rd1663, %rd1661, %rd1662;
	shf.l.wrap.b32 	%r986, %r980, %r981, 23;
	shf.l.wrap.b32 	%r987, %r981, %r980, 23;
	mov.b64 	%rd1664, {%r987, %r986};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	xor.b64  	%rd1666, %rd2352, %rd2353;
	and.b64  	%rd1667, %rd2351, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd2353;
	add.s64 	%rd1669, %rd1668, %rd1583;
	add.s64 	%rd1670, %rd1669, %rd1665;
	add.s64 	%rd1671, %rd1670, %rd2330;
	add.s64 	%rd1672, %rd1671, -4495734319001033068;
	add.s64 	%rd2350, %rd1672, %rd1594;
	and.b64  	%rd1673, %rd2347, %rd2348;
	or.b64  	%rd1674, %rd2347, %rd2348;
	and.b64  	%rd1675, %rd1674, %rd2349;
	or.b64  	%rd1676, %rd1675, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd2347;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 28;
	shf.r.wrap.b32 	%r991, %r988, %r989, 28;
	mov.b64 	%rd1677, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 30;
	shf.l.wrap.b32 	%r993, %r989, %r988, 30;
	mov.b64 	%rd1678, {%r993, %r992};
	xor.b64  	%rd1679, %rd1677, %rd1678;
	shf.l.wrap.b32 	%r994, %r988, %r989, 25;
	shf.l.wrap.b32 	%r995, %r989, %r988, 25;
	mov.b64 	%rd1680, {%r995, %r994};
	xor.b64  	%rd1681, %rd1679, %rd1680;
	add.s64 	%rd1682, %rd1681, %rd1676;
	add.s64 	%rd2346, %rd1682, %rd1672;
	mov.u32 	%r1449, 16;

$L__BB2_11:
	.pragma "nounroll";
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r996}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd2331;
	}
	shf.l.wrap.b32 	%r998, %r997, %r996, 3;
	shf.l.wrap.b32 	%r999, %r996, %r997, 3;
	mov.b64 	%rd1683, {%r999, %r998};
	shf.r.wrap.b32 	%r1000, %r996, %r997, 19;
	shf.r.wrap.b32 	%r1001, %r997, %r996, 19;
	mov.b64 	%rd1684, {%r1001, %r1000};
	xor.b64  	%rd1685, %rd1684, %rd1683;
	shr.u64 	%rd1686, %rd2331, 6;
	xor.b64  	%rd1687, %rd1685, %rd1686;
	add.s64 	%rd1688, %rd2336, %rd2345;
	add.s64 	%rd1689, %rd1688, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1003}, %rd2344;
	}
	shf.r.wrap.b32 	%r1004, %r1003, %r1002, 8;
	shf.r.wrap.b32 	%r1005, %r1002, %r1003, 8;
	mov.b64 	%rd1690, {%r1005, %r1004};
	shf.r.wrap.b32 	%r1006, %r1003, %r1002, 1;
	shf.r.wrap.b32 	%r1007, %r1002, %r1003, 1;
	mov.b64 	%rd1691, {%r1007, %r1006};
	xor.b64  	%rd1692, %rd1691, %rd1690;
	shr.u64 	%rd1693, %rd2344, 7;
	xor.b64  	%rd1694, %rd1692, %rd1693;
	add.s64 	%rd2345, %rd1689, %rd1694;
	mul.wide.u32 	%rd1695, %r1449, 8;
	mov.u64 	%rd1696, k;
	add.s64 	%rd1697, %rd1696, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1008,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd2350;
	}
	shf.r.wrap.b32 	%r1010, %r1009, %r1008, 18;
	shf.r.wrap.b32 	%r1011, %r1008, %r1009, 18;
	mov.b64 	%rd1698, {%r1011, %r1010};
	shf.r.wrap.b32 	%r1012, %r1009, %r1008, 14;
	shf.r.wrap.b32 	%r1013, %r1008, %r1009, 14;
	mov.b64 	%rd1699, {%r1013, %r1012};
	xor.b64  	%rd1700, %rd1699, %rd1698;
	shf.l.wrap.b32 	%r1014, %r1008, %r1009, 23;
	shf.l.wrap.b32 	%r1015, %r1009, %r1008, 23;
	mov.b64 	%rd1701, {%r1015, %r1014};
	xor.b64  	%rd1702, %rd1700, %rd1701;
	xor.b64  	%rd1703, %rd2351, %rd2352;
	and.b64  	%rd1704, %rd2350, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd2352;
	add.s64 	%rd1706, %rd1705, %rd2353;
	add.s64 	%rd1707, %rd1706, %rd1702;
	ld.const.u64 	%rd1708, [%rd1697];
	add.s64 	%rd1709, %rd1707, %rd1708;
	add.s64 	%rd1710, %rd1709, %rd2345;
	add.s64 	%rd1711, %rd1710, %rd2349;
	or.b64  	%rd1712, %rd2346, %rd2347;
	and.b64  	%rd1713, %rd1712, %rd2348;
	and.b64  	%rd1714, %rd2346, %rd2347;
	or.b64  	%rd1715, %rd1713, %rd1714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd2346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd2346;
	}
	shf.l.wrap.b32 	%r1018, %r1017, %r1016, 30;
	shf.l.wrap.b32 	%r1019, %r1016, %r1017, 30;
	mov.b64 	%rd1716, {%r1019, %r1018};
	shf.r.wrap.b32 	%r1020, %r1016, %r1017, 28;
	shf.r.wrap.b32 	%r1021, %r1017, %r1016, 28;
	mov.b64 	%rd1717, {%r1021, %r1020};
	xor.b64  	%rd1718, %rd1717, %rd1716;
	shf.l.wrap.b32 	%r1022, %r1017, %r1016, 25;
	shf.l.wrap.b32 	%r1023, %r1016, %r1017, 25;
	mov.b64 	%rd1719, {%r1023, %r1022};
	xor.b64  	%rd1720, %rd1718, %rd1719;
	add.s64 	%rd1721, %rd1720, %rd1715;
	add.s64 	%rd1722, %rd1721, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd2330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd2330;
	}
	shf.l.wrap.b32 	%r1026, %r1025, %r1024, 3;
	shf.l.wrap.b32 	%r1027, %r1024, %r1025, 3;
	mov.b64 	%rd1723, {%r1027, %r1026};
	shf.r.wrap.b32 	%r1028, %r1024, %r1025, 19;
	shf.r.wrap.b32 	%r1029, %r1025, %r1024, 19;
	mov.b64 	%rd1724, {%r1029, %r1028};
	xor.b64  	%rd1725, %rd1724, %rd1723;
	shr.u64 	%rd1726, %rd2330, 6;
	xor.b64  	%rd1727, %rd1725, %rd1726;
	add.s64 	%rd1728, %rd2335, %rd2344;
	add.s64 	%rd1729, %rd1728, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1030,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd2343;
	}
	shf.r.wrap.b32 	%r1032, %r1031, %r1030, 8;
	shf.r.wrap.b32 	%r1033, %r1030, %r1031, 8;
	mov.b64 	%rd1730, {%r1033, %r1032};
	shf.r.wrap.b32 	%r1034, %r1031, %r1030, 1;
	shf.r.wrap.b32 	%r1035, %r1030, %r1031, 1;
	mov.b64 	%rd1731, {%r1035, %r1034};
	xor.b64  	%rd1732, %rd1731, %rd1730;
	shr.u64 	%rd1733, %rd2343, 7;
	xor.b64  	%rd1734, %rd1732, %rd1733;
	add.s64 	%rd2344, %rd1729, %rd1734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1036,%dummy}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd1711;
	}
	shf.r.wrap.b32 	%r1038, %r1037, %r1036, 14;
	shf.r.wrap.b32 	%r1039, %r1036, %r1037, 14;
	mov.b64 	%rd1735, {%r1039, %r1038};
	shf.r.wrap.b32 	%r1040, %r1037, %r1036, 18;
	shf.r.wrap.b32 	%r1041, %r1036, %r1037, 18;
	mov.b64 	%rd1736, {%r1041, %r1040};
	xor.b64  	%rd1737, %rd1735, %rd1736;
	shf.l.wrap.b32 	%r1042, %r1036, %r1037, 23;
	shf.l.wrap.b32 	%r1043, %r1037, %r1036, 23;
	mov.b64 	%rd1738, {%r1043, %r1042};
	xor.b64  	%rd1739, %rd1737, %rd1738;
	xor.b64  	%rd1740, %rd2350, %rd2351;
	and.b64  	%rd1741, %rd1711, %rd1740;
	xor.b64  	%rd1742, %rd1741, %rd2351;
	add.s64 	%rd1743, %rd1742, %rd2352;
	add.s64 	%rd1744, %rd1743, %rd1739;
	ld.const.u64 	%rd1745, [%rd1697+8];
	add.s64 	%rd1746, %rd1744, %rd1745;
	add.s64 	%rd1747, %rd1746, %rd2344;
	add.s64 	%rd1748, %rd1747, %rd2348;
	and.b64  	%rd1749, %rd1722, %rd2346;
	or.b64  	%rd1750, %rd1722, %rd2346;
	and.b64  	%rd1751, %rd1750, %rd2347;
	or.b64  	%rd1752, %rd1751, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1044,%dummy}, %rd1722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd1722;
	}
	shf.r.wrap.b32 	%r1046, %r1045, %r1044, 28;
	shf.r.wrap.b32 	%r1047, %r1044, %r1045, 28;
	mov.b64 	%rd1753, {%r1047, %r1046};
	shf.l.wrap.b32 	%r1048, %r1044, %r1045, 30;
	shf.l.wrap.b32 	%r1049, %r1045, %r1044, 30;
	mov.b64 	%rd1754, {%r1049, %r1048};
	xor.b64  	%rd1755, %rd1753, %rd1754;
	shf.l.wrap.b32 	%r1050, %r1044, %r1045, 25;
	shf.l.wrap.b32 	%r1051, %r1045, %r1044, 25;
	mov.b64 	%rd1756, {%r1051, %r1050};
	xor.b64  	%rd1757, %rd1755, %rd1756;
	add.s64 	%rd1758, %rd1757, %rd1752;
	add.s64 	%rd1759, %rd1758, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd2345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd2345;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 19;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 19;
	mov.b64 	%rd1760, {%r1055, %r1054};
	shf.l.wrap.b32 	%r1056, %r1052, %r1053, 3;
	shf.l.wrap.b32 	%r1057, %r1053, %r1052, 3;
	mov.b64 	%rd1761, {%r1057, %r1056};
	xor.b64  	%rd1762, %rd1760, %rd1761;
	shr.u64 	%rd1763, %rd2345, 6;
	xor.b64  	%rd1764, %rd1762, %rd1763;
	add.s64 	%rd1765, %rd2334, %rd2343;
	add.s64 	%rd1766, %rd1765, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd2342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd2342;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 8;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 8;
	mov.b64 	%rd1767, {%r1061, %r1060};
	shf.r.wrap.b32 	%r1062, %r1059, %r1058, 1;
	shf.r.wrap.b32 	%r1063, %r1058, %r1059, 1;
	mov.b64 	%rd1768, {%r1063, %r1062};
	xor.b64  	%rd1769, %rd1768, %rd1767;
	shr.u64 	%rd1770, %rd2342, 7;
	xor.b64  	%rd1771, %rd1769, %rd1770;
	add.s64 	%rd2343, %rd1766, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd1748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd1748;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 14;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 14;
	mov.b64 	%rd1772, {%r1067, %r1066};
	shf.r.wrap.b32 	%r1068, %r1065, %r1064, 18;
	shf.r.wrap.b32 	%r1069, %r1064, %r1065, 18;
	mov.b64 	%rd1773, {%r1069, %r1068};
	xor.b64  	%rd1774, %rd1772, %rd1773;
	shf.l.wrap.b32 	%r1070, %r1064, %r1065, 23;
	shf.l.wrap.b32 	%r1071, %r1065, %r1064, 23;
	mov.b64 	%rd1775, {%r1071, %r1070};
	xor.b64  	%rd1776, %rd1774, %rd1775;
	xor.b64  	%rd1777, %rd1711, %rd2350;
	and.b64  	%rd1778, %rd1748, %rd1777;
	xor.b64  	%rd1779, %rd1778, %rd2350;
	add.s64 	%rd1780, %rd1779, %rd2351;
	add.s64 	%rd1781, %rd1780, %rd1776;
	ld.const.u64 	%rd1782, [%rd1697+16];
	add.s64 	%rd1783, %rd1781, %rd1782;
	add.s64 	%rd1784, %rd1783, %rd2343;
	add.s64 	%rd1785, %rd1784, %rd2347;
	and.b64  	%rd1786, %rd1759, %rd1722;
	or.b64  	%rd1787, %rd1759, %rd1722;
	and.b64  	%rd1788, %rd1787, %rd2346;
	or.b64  	%rd1789, %rd1788, %rd1786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1759;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 28;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 28;
	mov.b64 	%rd1790, {%r1075, %r1074};
	shf.l.wrap.b32 	%r1076, %r1072, %r1073, 30;
	shf.l.wrap.b32 	%r1077, %r1073, %r1072, 30;
	mov.b64 	%rd1791, {%r1077, %r1076};
	xor.b64  	%rd1792, %rd1790, %rd1791;
	shf.l.wrap.b32 	%r1078, %r1072, %r1073, 25;
	shf.l.wrap.b32 	%r1079, %r1073, %r1072, 25;
	mov.b64 	%rd1793, {%r1079, %r1078};
	xor.b64  	%rd1794, %rd1792, %rd1793;
	add.s64 	%rd1795, %rd1794, %rd1789;
	add.s64 	%rd1796, %rd1795, %rd1784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd2344;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 19;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 19;
	mov.b64 	%rd1797, {%r1083, %r1082};
	shf.l.wrap.b32 	%r1084, %r1080, %r1081, 3;
	shf.l.wrap.b32 	%r1085, %r1081, %r1080, 3;
	mov.b64 	%rd1798, {%r1085, %r1084};
	xor.b64  	%rd1799, %rd1797, %rd1798;
	shr.u64 	%rd1800, %rd2344, 6;
	xor.b64  	%rd1801, %rd1799, %rd1800;
	add.s64 	%rd1802, %rd2333, %rd2342;
	add.s64 	%rd1803, %rd1802, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1086,%dummy}, %rd2341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1087}, %rd2341;
	}
	shf.r.wrap.b32 	%r1088, %r1087, %r1086, 8;
	shf.r.wrap.b32 	%r1089, %r1086, %r1087, 8;
	mov.b64 	%rd1804, {%r1089, %r1088};
	shf.r.wrap.b32 	%r1090, %r1087, %r1086, 1;
	shf.r.wrap.b32 	%r1091, %r1086, %r1087, 1;
	mov.b64 	%rd1805, {%r1091, %r1090};
	xor.b64  	%rd1806, %rd1805, %rd1804;
	shr.u64 	%rd1807, %rd2341, 7;
	xor.b64  	%rd1808, %rd1806, %rd1807;
	add.s64 	%rd2342, %rd1803, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd1785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1785;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 14;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 14;
	mov.b64 	%rd1809, {%r1095, %r1094};
	shf.r.wrap.b32 	%r1096, %r1093, %r1092, 18;
	shf.r.wrap.b32 	%r1097, %r1092, %r1093, 18;
	mov.b64 	%rd1810, {%r1097, %r1096};
	xor.b64  	%rd1811, %rd1809, %rd1810;
	shf.l.wrap.b32 	%r1098, %r1092, %r1093, 23;
	shf.l.wrap.b32 	%r1099, %r1093, %r1092, 23;
	mov.b64 	%rd1812, {%r1099, %r1098};
	xor.b64  	%rd1813, %rd1811, %rd1812;
	xor.b64  	%rd1814, %rd1748, %rd1711;
	and.b64  	%rd1815, %rd1785, %rd1814;
	xor.b64  	%rd1816, %rd1815, %rd1711;
	add.s64 	%rd1817, %rd1816, %rd2350;
	add.s64 	%rd1818, %rd1817, %rd1813;
	ld.const.u64 	%rd1819, [%rd1697+24];
	add.s64 	%rd1820, %rd1818, %rd1819;
	add.s64 	%rd1821, %rd1820, %rd2342;
	add.s64 	%rd1822, %rd1821, %rd2346;
	and.b64  	%rd1823, %rd1796, %rd1759;
	or.b64  	%rd1824, %rd1796, %rd1759;
	and.b64  	%rd1825, %rd1824, %rd1722;
	or.b64  	%rd1826, %rd1825, %rd1823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd1796;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 28;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 28;
	mov.b64 	%rd1827, {%r1103, %r1102};
	shf.l.wrap.b32 	%r1104, %r1100, %r1101, 30;
	shf.l.wrap.b32 	%r1105, %r1101, %r1100, 30;
	mov.b64 	%rd1828, {%r1105, %r1104};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	shf.l.wrap.b32 	%r1106, %r1100, %r1101, 25;
	shf.l.wrap.b32 	%r1107, %r1101, %r1100, 25;
	mov.b64 	%rd1830, {%r1107, %r1106};
	xor.b64  	%rd1831, %rd1829, %rd1830;
	add.s64 	%rd1832, %rd1831, %rd1826;
	add.s64 	%rd1833, %rd1832, %rd1821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1108,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1109}, %rd2343;
	}
	shf.r.wrap.b32 	%r1110, %r1109, %r1108, 19;
	shf.r.wrap.b32 	%r1111, %r1108, %r1109, 19;
	mov.b64 	%rd1834, {%r1111, %r1110};
	shf.l.wrap.b32 	%r1112, %r1108, %r1109, 3;
	shf.l.wrap.b32 	%r1113, %r1109, %r1108, 3;
	mov.b64 	%rd1835, {%r1113, %r1112};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	shr.u64 	%rd1837, %rd2343, 6;
	xor.b64  	%rd1838, %rd1836, %rd1837;
	add.s64 	%rd1839, %rd2332, %rd2341;
	add.s64 	%rd1840, %rd1839, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd2340;
	}
	shf.r.wrap.b32 	%r1116, %r1115, %r1114, 8;
	shf.r.wrap.b32 	%r1117, %r1114, %r1115, 8;
	mov.b64 	%rd1841, {%r1117, %r1116};
	shf.r.wrap.b32 	%r1118, %r1115, %r1114, 1;
	shf.r.wrap.b32 	%r1119, %r1114, %r1115, 1;
	mov.b64 	%rd1842, {%r1119, %r1118};
	xor.b64  	%rd1843, %rd1842, %rd1841;
	shr.u64 	%rd1844, %rd2340, 7;
	xor.b64  	%rd1845, %rd1843, %rd1844;
	add.s64 	%rd2341, %rd1840, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1120,%dummy}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd1822;
	}
	shf.r.wrap.b32 	%r1122, %r1121, %r1120, 14;
	shf.r.wrap.b32 	%r1123, %r1120, %r1121, 14;
	mov.b64 	%rd1846, {%r1123, %r1122};
	shf.r.wrap.b32 	%r1124, %r1121, %r1120, 18;
	shf.r.wrap.b32 	%r1125, %r1120, %r1121, 18;
	mov.b64 	%rd1847, {%r1125, %r1124};
	xor.b64  	%rd1848, %rd1846, %rd1847;
	shf.l.wrap.b32 	%r1126, %r1120, %r1121, 23;
	shf.l.wrap.b32 	%r1127, %r1121, %r1120, 23;
	mov.b64 	%rd1849, {%r1127, %r1126};
	xor.b64  	%rd1850, %rd1848, %rd1849;
	xor.b64  	%rd1851, %rd1785, %rd1748;
	and.b64  	%rd1852, %rd1822, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1748;
	add.s64 	%rd1854, %rd1853, %rd1711;
	add.s64 	%rd1855, %rd1854, %rd1850;
	ld.const.u64 	%rd1856, [%rd1697+32];
	add.s64 	%rd1857, %rd1855, %rd1856;
	add.s64 	%rd1858, %rd1857, %rd2341;
	add.s64 	%rd1859, %rd1858, %rd1722;
	and.b64  	%rd1860, %rd1833, %rd1796;
	or.b64  	%rd1861, %rd1833, %rd1796;
	and.b64  	%rd1862, %rd1861, %rd1759;
	or.b64  	%rd1863, %rd1862, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1833;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 28;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 28;
	mov.b64 	%rd1864, {%r1131, %r1130};
	shf.l.wrap.b32 	%r1132, %r1128, %r1129, 30;
	shf.l.wrap.b32 	%r1133, %r1129, %r1128, 30;
	mov.b64 	%rd1865, {%r1133, %r1132};
	xor.b64  	%rd1866, %rd1864, %rd1865;
	shf.l.wrap.b32 	%r1134, %r1128, %r1129, 25;
	shf.l.wrap.b32 	%r1135, %r1129, %r1128, 25;
	mov.b64 	%rd1867, {%r1135, %r1134};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	add.s64 	%rd1869, %rd1868, %rd1863;
	add.s64 	%rd1870, %rd1869, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd2342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd2342;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 19;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 19;
	mov.b64 	%rd1871, {%r1139, %r1138};
	shf.l.wrap.b32 	%r1140, %r1136, %r1137, 3;
	shf.l.wrap.b32 	%r1141, %r1137, %r1136, 3;
	mov.b64 	%rd1872, {%r1141, %r1140};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	shr.u64 	%rd1874, %rd2342, 6;
	xor.b64  	%rd1875, %rd1873, %rd1874;
	add.s64 	%rd1876, %rd2331, %rd2340;
	add.s64 	%rd1877, %rd1876, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1142,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1143}, %rd2339;
	}
	shf.r.wrap.b32 	%r1144, %r1143, %r1142, 8;
	shf.r.wrap.b32 	%r1145, %r1142, %r1143, 8;
	mov.b64 	%rd1878, {%r1145, %r1144};
	shf.r.wrap.b32 	%r1146, %r1143, %r1142, 1;
	shf.r.wrap.b32 	%r1147, %r1142, %r1143, 1;
	mov.b64 	%rd1879, {%r1147, %r1146};
	xor.b64  	%rd1880, %rd1879, %rd1878;
	shr.u64 	%rd1881, %rd2339, 7;
	xor.b64  	%rd1882, %rd1880, %rd1881;
	add.s64 	%rd2340, %rd1877, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd1859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1859;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 14;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 14;
	mov.b64 	%rd1883, {%r1151, %r1150};
	shf.r.wrap.b32 	%r1152, %r1149, %r1148, 18;
	shf.r.wrap.b32 	%r1153, %r1148, %r1149, 18;
	mov.b64 	%rd1884, {%r1153, %r1152};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	shf.l.wrap.b32 	%r1154, %r1148, %r1149, 23;
	shf.l.wrap.b32 	%r1155, %r1149, %r1148, 23;
	mov.b64 	%rd1886, {%r1155, %r1154};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	xor.b64  	%rd1888, %rd1822, %rd1785;
	and.b64  	%rd1889, %rd1859, %rd1888;
	xor.b64  	%rd1890, %rd1889, %rd1785;
	add.s64 	%rd1891, %rd1890, %rd1748;
	add.s64 	%rd1892, %rd1891, %rd1887;
	ld.const.u64 	%rd1893, [%rd1697+40];
	add.s64 	%rd1894, %rd1892, %rd1893;
	add.s64 	%rd1895, %rd1894, %rd2340;
	add.s64 	%rd1896, %rd1895, %rd1759;
	and.b64  	%rd1897, %rd1870, %rd1833;
	or.b64  	%rd1898, %rd1870, %rd1833;
	and.b64  	%rd1899, %rd1898, %rd1796;
	or.b64  	%rd1900, %rd1899, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1156,%dummy}, %rd1870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1157}, %rd1870;
	}
	shf.r.wrap.b32 	%r1158, %r1157, %r1156, 28;
	shf.r.wrap.b32 	%r1159, %r1156, %r1157, 28;
	mov.b64 	%rd1901, {%r1159, %r1158};
	shf.l.wrap.b32 	%r1160, %r1156, %r1157, 30;
	shf.l.wrap.b32 	%r1161, %r1157, %r1156, 30;
	mov.b64 	%rd1902, {%r1161, %r1160};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	shf.l.wrap.b32 	%r1162, %r1156, %r1157, 25;
	shf.l.wrap.b32 	%r1163, %r1157, %r1156, 25;
	mov.b64 	%rd1904, {%r1163, %r1162};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	add.s64 	%rd1906, %rd1905, %rd1900;
	add.s64 	%rd1907, %rd1906, %rd1895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1164,%dummy}, %rd2341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1165}, %rd2341;
	}
	shf.r.wrap.b32 	%r1166, %r1165, %r1164, 19;
	shf.r.wrap.b32 	%r1167, %r1164, %r1165, 19;
	mov.b64 	%rd1908, {%r1167, %r1166};
	shf.l.wrap.b32 	%r1168, %r1164, %r1165, 3;
	shf.l.wrap.b32 	%r1169, %r1165, %r1164, 3;
	mov.b64 	%rd1909, {%r1169, %r1168};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	shr.u64 	%rd1911, %rd2341, 6;
	xor.b64  	%rd1912, %rd1910, %rd1911;
	add.s64 	%rd1913, %rd2330, %rd2339;
	add.s64 	%rd1914, %rd1913, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd2338;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 8;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 8;
	mov.b64 	%rd1915, {%r1173, %r1172};
	shf.r.wrap.b32 	%r1174, %r1171, %r1170, 1;
	shf.r.wrap.b32 	%r1175, %r1170, %r1171, 1;
	mov.b64 	%rd1916, {%r1175, %r1174};
	xor.b64  	%rd1917, %rd1916, %rd1915;
	shr.u64 	%rd1918, %rd2338, 7;
	xor.b64  	%rd1919, %rd1917, %rd1918;
	add.s64 	%rd2339, %rd1914, %rd1919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd1896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1896;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 14;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 14;
	mov.b64 	%rd1920, {%r1179, %r1178};
	shf.r.wrap.b32 	%r1180, %r1177, %r1176, 18;
	shf.r.wrap.b32 	%r1181, %r1176, %r1177, 18;
	mov.b64 	%rd1921, {%r1181, %r1180};
	xor.b64  	%rd1922, %rd1920, %rd1921;
	shf.l.wrap.b32 	%r1182, %r1176, %r1177, 23;
	shf.l.wrap.b32 	%r1183, %r1177, %r1176, 23;
	mov.b64 	%rd1923, {%r1183, %r1182};
	xor.b64  	%rd1924, %rd1922, %rd1923;
	xor.b64  	%rd1925, %rd1859, %rd1822;
	and.b64  	%rd1926, %rd1896, %rd1925;
	xor.b64  	%rd1927, %rd1926, %rd1822;
	add.s64 	%rd1928, %rd1927, %rd1785;
	add.s64 	%rd1929, %rd1928, %rd1924;
	ld.const.u64 	%rd1930, [%rd1697+48];
	add.s64 	%rd1931, %rd1929, %rd1930;
	add.s64 	%rd1932, %rd1931, %rd2339;
	add.s64 	%rd1933, %rd1932, %rd1796;
	and.b64  	%rd1934, %rd1907, %rd1870;
	or.b64  	%rd1935, %rd1907, %rd1870;
	and.b64  	%rd1936, %rd1935, %rd1833;
	or.b64  	%rd1937, %rd1936, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1184,%dummy}, %rd1907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1185}, %rd1907;
	}
	shf.r.wrap.b32 	%r1186, %r1185, %r1184, 28;
	shf.r.wrap.b32 	%r1187, %r1184, %r1185, 28;
	mov.b64 	%rd1938, {%r1187, %r1186};
	shf.l.wrap.b32 	%r1188, %r1184, %r1185, 30;
	shf.l.wrap.b32 	%r1189, %r1185, %r1184, 30;
	mov.b64 	%rd1939, {%r1189, %r1188};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	shf.l.wrap.b32 	%r1190, %r1184, %r1185, 25;
	shf.l.wrap.b32 	%r1191, %r1185, %r1184, 25;
	mov.b64 	%rd1941, {%r1191, %r1190};
	xor.b64  	%rd1942, %rd1940, %rd1941;
	add.s64 	%rd1943, %rd1942, %rd1937;
	add.s64 	%rd1944, %rd1943, %rd1932;
	add.s64 	%rd1945, %rd2345, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1192,%dummy}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd2340;
	}
	shf.r.wrap.b32 	%r1194, %r1193, %r1192, 19;
	shf.r.wrap.b32 	%r1195, %r1192, %r1193, 19;
	mov.b64 	%rd1946, {%r1195, %r1194};
	shf.l.wrap.b32 	%r1196, %r1192, %r1193, 3;
	shf.l.wrap.b32 	%r1197, %r1193, %r1192, 3;
	mov.b64 	%rd1947, {%r1197, %r1196};
	xor.b64  	%rd1948, %rd1946, %rd1947;
	shr.u64 	%rd1949, %rd2340, 6;
	xor.b64  	%rd1950, %rd1948, %rd1949;
	add.s64 	%rd1951, %rd1945, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd2337;
	}
	shf.r.wrap.b32 	%r1200, %r1199, %r1198, 8;
	shf.r.wrap.b32 	%r1201, %r1198, %r1199, 8;
	mov.b64 	%rd1952, {%r1201, %r1200};
	shf.r.wrap.b32 	%r1202, %r1199, %r1198, 1;
	shf.r.wrap.b32 	%r1203, %r1198, %r1199, 1;
	mov.b64 	%rd1953, {%r1203, %r1202};
	xor.b64  	%rd1954, %rd1953, %rd1952;
	shr.u64 	%rd1955, %rd2337, 7;
	xor.b64  	%rd1956, %rd1954, %rd1955;
	add.s64 	%rd2338, %rd1951, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd1933;
	}
	shf.r.wrap.b32 	%r1206, %r1205, %r1204, 14;
	shf.r.wrap.b32 	%r1207, %r1204, %r1205, 14;
	mov.b64 	%rd1957, {%r1207, %r1206};
	shf.r.wrap.b32 	%r1208, %r1205, %r1204, 18;
	shf.r.wrap.b32 	%r1209, %r1204, %r1205, 18;
	mov.b64 	%rd1958, {%r1209, %r1208};
	xor.b64  	%rd1959, %rd1957, %rd1958;
	shf.l.wrap.b32 	%r1210, %r1204, %r1205, 23;
	shf.l.wrap.b32 	%r1211, %r1205, %r1204, 23;
	mov.b64 	%rd1960, {%r1211, %r1210};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	xor.b64  	%rd1962, %rd1896, %rd1859;
	and.b64  	%rd1963, %rd1933, %rd1962;
	xor.b64  	%rd1964, %rd1963, %rd1859;
	add.s64 	%rd1965, %rd1964, %rd1822;
	add.s64 	%rd1966, %rd1965, %rd1961;
	ld.const.u64 	%rd1967, [%rd1697+56];
	add.s64 	%rd1968, %rd1966, %rd1967;
	add.s64 	%rd1969, %rd1968, %rd2338;
	add.s64 	%rd1970, %rd1969, %rd1833;
	and.b64  	%rd1971, %rd1944, %rd1907;
	or.b64  	%rd1972, %rd1944, %rd1907;
	and.b64  	%rd1973, %rd1972, %rd1870;
	or.b64  	%rd1974, %rd1973, %rd1971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1212,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1213}, %rd1944;
	}
	shf.r.wrap.b32 	%r1214, %r1213, %r1212, 28;
	shf.r.wrap.b32 	%r1215, %r1212, %r1213, 28;
	mov.b64 	%rd1975, {%r1215, %r1214};
	shf.l.wrap.b32 	%r1216, %r1212, %r1213, 30;
	shf.l.wrap.b32 	%r1217, %r1213, %r1212, 30;
	mov.b64 	%rd1976, {%r1217, %r1216};
	xor.b64  	%rd1977, %rd1975, %rd1976;
	shf.l.wrap.b32 	%r1218, %r1212, %r1213, 25;
	shf.l.wrap.b32 	%r1219, %r1213, %r1212, 25;
	mov.b64 	%rd1978, {%r1219, %r1218};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	add.s64 	%rd1980, %rd1979, %rd1974;
	add.s64 	%rd1981, %rd1980, %rd1969;
	add.s64 	%rd1982, %rd2344, %rd2337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1220,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1221}, %rd2339;
	}
	shf.r.wrap.b32 	%r1222, %r1221, %r1220, 19;
	shf.r.wrap.b32 	%r1223, %r1220, %r1221, 19;
	mov.b64 	%rd1983, {%r1223, %r1222};
	shf.l.wrap.b32 	%r1224, %r1220, %r1221, 3;
	shf.l.wrap.b32 	%r1225, %r1221, %r1220, 3;
	mov.b64 	%rd1984, {%r1225, %r1224};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	shr.u64 	%rd1986, %rd2339, 6;
	xor.b64  	%rd1987, %rd1985, %rd1986;
	add.s64 	%rd1988, %rd1982, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1226,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1227}, %rd2336;
	}
	shf.r.wrap.b32 	%r1228, %r1227, %r1226, 8;
	shf.r.wrap.b32 	%r1229, %r1226, %r1227, 8;
	mov.b64 	%rd1989, {%r1229, %r1228};
	shf.r.wrap.b32 	%r1230, %r1227, %r1226, 1;
	shf.r.wrap.b32 	%r1231, %r1226, %r1227, 1;
	mov.b64 	%rd1990, {%r1231, %r1230};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	shr.u64 	%rd1992, %rd2336, 7;
	xor.b64  	%rd1993, %rd1991, %rd1992;
	add.s64 	%rd2337, %rd1988, %rd1993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1970;
	}
	shf.r.wrap.b32 	%r1234, %r1233, %r1232, 14;
	shf.r.wrap.b32 	%r1235, %r1232, %r1233, 14;
	mov.b64 	%rd1994, {%r1235, %r1234};
	shf.r.wrap.b32 	%r1236, %r1233, %r1232, 18;
	shf.r.wrap.b32 	%r1237, %r1232, %r1233, 18;
	mov.b64 	%rd1995, {%r1237, %r1236};
	xor.b64  	%rd1996, %rd1994, %rd1995;
	shf.l.wrap.b32 	%r1238, %r1232, %r1233, 23;
	shf.l.wrap.b32 	%r1239, %r1233, %r1232, 23;
	mov.b64 	%rd1997, {%r1239, %r1238};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	xor.b64  	%rd1999, %rd1933, %rd1896;
	and.b64  	%rd2000, %rd1970, %rd1999;
	xor.b64  	%rd2001, %rd2000, %rd1896;
	add.s64 	%rd2002, %rd2001, %rd1859;
	add.s64 	%rd2003, %rd2002, %rd1998;
	ld.const.u64 	%rd2004, [%rd1697+64];
	add.s64 	%rd2005, %rd2003, %rd2004;
	add.s64 	%rd2006, %rd2005, %rd2337;
	add.s64 	%rd2007, %rd2006, %rd1870;
	and.b64  	%rd2008, %rd1981, %rd1944;
	or.b64  	%rd2009, %rd1981, %rd1944;
	and.b64  	%rd2010, %rd2009, %rd1907;
	or.b64  	%rd2011, %rd2010, %rd2008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1981;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 28;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 28;
	mov.b64 	%rd2012, {%r1243, %r1242};
	shf.l.wrap.b32 	%r1244, %r1240, %r1241, 30;
	shf.l.wrap.b32 	%r1245, %r1241, %r1240, 30;
	mov.b64 	%rd2013, {%r1245, %r1244};
	xor.b64  	%rd2014, %rd2012, %rd2013;
	shf.l.wrap.b32 	%r1246, %r1240, %r1241, 25;
	shf.l.wrap.b32 	%r1247, %r1241, %r1240, 25;
	mov.b64 	%rd2015, {%r1247, %r1246};
	xor.b64  	%rd2016, %rd2014, %rd2015;
	add.s64 	%rd2017, %rd2016, %rd2011;
	add.s64 	%rd2018, %rd2017, %rd2006;
	add.s64 	%rd2019, %rd2343, %rd2336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd2338;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 19;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 19;
	mov.b64 	%rd2020, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 3;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 3;
	mov.b64 	%rd2021, {%r1253, %r1252};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	shr.u64 	%rd2023, %rd2338, 6;
	xor.b64  	%rd2024, %rd2022, %rd2023;
	add.s64 	%rd2025, %rd2019, %rd2024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd2335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd2335;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 8;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 8;
	mov.b64 	%rd2026, {%r1257, %r1256};
	shf.r.wrap.b32 	%r1258, %r1255, %r1254, 1;
	shf.r.wrap.b32 	%r1259, %r1254, %r1255, 1;
	mov.b64 	%rd2027, {%r1259, %r1258};
	xor.b64  	%rd2028, %rd2027, %rd2026;
	shr.u64 	%rd2029, %rd2335, 7;
	xor.b64  	%rd2030, %rd2028, %rd2029;
	add.s64 	%rd2336, %rd2025, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1260,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1261}, %rd2007;
	}
	shf.r.wrap.b32 	%r1262, %r1261, %r1260, 14;
	shf.r.wrap.b32 	%r1263, %r1260, %r1261, 14;
	mov.b64 	%rd2031, {%r1263, %r1262};
	shf.r.wrap.b32 	%r1264, %r1261, %r1260, 18;
	shf.r.wrap.b32 	%r1265, %r1260, %r1261, 18;
	mov.b64 	%rd2032, {%r1265, %r1264};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	shf.l.wrap.b32 	%r1266, %r1260, %r1261, 23;
	shf.l.wrap.b32 	%r1267, %r1261, %r1260, 23;
	mov.b64 	%rd2034, {%r1267, %r1266};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	xor.b64  	%rd2036, %rd1970, %rd1933;
	and.b64  	%rd2037, %rd2007, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1933;
	add.s64 	%rd2039, %rd2038, %rd1896;
	add.s64 	%rd2040, %rd2039, %rd2035;
	ld.const.u64 	%rd2041, [%rd1697+72];
	add.s64 	%rd2042, %rd2040, %rd2041;
	add.s64 	%rd2043, %rd2042, %rd2336;
	add.s64 	%rd2044, %rd2043, %rd1907;
	and.b64  	%rd2045, %rd2018, %rd1981;
	or.b64  	%rd2046, %rd2018, %rd1981;
	and.b64  	%rd2047, %rd2046, %rd1944;
	or.b64  	%rd2048, %rd2047, %rd2045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1268,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd2018;
	}
	shf.r.wrap.b32 	%r1270, %r1269, %r1268, 28;
	shf.r.wrap.b32 	%r1271, %r1268, %r1269, 28;
	mov.b64 	%rd2049, {%r1271, %r1270};
	shf.l.wrap.b32 	%r1272, %r1268, %r1269, 30;
	shf.l.wrap.b32 	%r1273, %r1269, %r1268, 30;
	mov.b64 	%rd2050, {%r1273, %r1272};
	xor.b64  	%rd2051, %rd2049, %rd2050;
	shf.l.wrap.b32 	%r1274, %r1268, %r1269, 25;
	shf.l.wrap.b32 	%r1275, %r1269, %r1268, 25;
	mov.b64 	%rd2052, {%r1275, %r1274};
	xor.b64  	%rd2053, %rd2051, %rd2052;
	add.s64 	%rd2054, %rd2053, %rd2048;
	add.s64 	%rd2055, %rd2054, %rd2043;
	add.s64 	%rd2056, %rd2342, %rd2335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1276,%dummy}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd2337;
	}
	shf.r.wrap.b32 	%r1278, %r1277, %r1276, 19;
	shf.r.wrap.b32 	%r1279, %r1276, %r1277, 19;
	mov.b64 	%rd2057, {%r1279, %r1278};
	shf.l.wrap.b32 	%r1280, %r1276, %r1277, 3;
	shf.l.wrap.b32 	%r1281, %r1277, %r1276, 3;
	mov.b64 	%rd2058, {%r1281, %r1280};
	xor.b64  	%rd2059, %rd2057, %rd2058;
	shr.u64 	%rd2060, %rd2337, 6;
	xor.b64  	%rd2061, %rd2059, %rd2060;
	add.s64 	%rd2062, %rd2056, %rd2061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd2334;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 8;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 8;
	mov.b64 	%rd2063, {%r1285, %r1284};
	shf.r.wrap.b32 	%r1286, %r1283, %r1282, 1;
	shf.r.wrap.b32 	%r1287, %r1282, %r1283, 1;
	mov.b64 	%rd2064, {%r1287, %r1286};
	xor.b64  	%rd2065, %rd2064, %rd2063;
	shr.u64 	%rd2066, %rd2334, 7;
	xor.b64  	%rd2067, %rd2065, %rd2066;
	add.s64 	%rd2335, %rd2062, %rd2067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1288,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1289}, %rd2044;
	}
	shf.r.wrap.b32 	%r1290, %r1289, %r1288, 14;
	shf.r.wrap.b32 	%r1291, %r1288, %r1289, 14;
	mov.b64 	%rd2068, {%r1291, %r1290};
	shf.r.wrap.b32 	%r1292, %r1289, %r1288, 18;
	shf.r.wrap.b32 	%r1293, %r1288, %r1289, 18;
	mov.b64 	%rd2069, {%r1293, %r1292};
	xor.b64  	%rd2070, %rd2068, %rd2069;
	shf.l.wrap.b32 	%r1294, %r1288, %r1289, 23;
	shf.l.wrap.b32 	%r1295, %r1289, %r1288, 23;
	mov.b64 	%rd2071, {%r1295, %r1294};
	xor.b64  	%rd2072, %rd2070, %rd2071;
	xor.b64  	%rd2073, %rd2007, %rd1970;
	and.b64  	%rd2074, %rd2044, %rd2073;
	xor.b64  	%rd2075, %rd2074, %rd1970;
	add.s64 	%rd2076, %rd2075, %rd1933;
	add.s64 	%rd2077, %rd2076, %rd2072;
	ld.const.u64 	%rd2078, [%rd1697+80];
	add.s64 	%rd2079, %rd2077, %rd2078;
	add.s64 	%rd2080, %rd2079, %rd2335;
	add.s64 	%rd2081, %rd2080, %rd1944;
	and.b64  	%rd2082, %rd2055, %rd2018;
	or.b64  	%rd2083, %rd2055, %rd2018;
	and.b64  	%rd2084, %rd2083, %rd1981;
	or.b64  	%rd2085, %rd2084, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1296,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1297}, %rd2055;
	}
	shf.r.wrap.b32 	%r1298, %r1297, %r1296, 28;
	shf.r.wrap.b32 	%r1299, %r1296, %r1297, 28;
	mov.b64 	%rd2086, {%r1299, %r1298};
	shf.l.wrap.b32 	%r1300, %r1296, %r1297, 30;
	shf.l.wrap.b32 	%r1301, %r1297, %r1296, 30;
	mov.b64 	%rd2087, {%r1301, %r1300};
	xor.b64  	%rd2088, %rd2086, %rd2087;
	shf.l.wrap.b32 	%r1302, %r1296, %r1297, 25;
	shf.l.wrap.b32 	%r1303, %r1297, %r1296, 25;
	mov.b64 	%rd2089, {%r1303, %r1302};
	xor.b64  	%rd2090, %rd2088, %rd2089;
	add.s64 	%rd2091, %rd2090, %rd2085;
	add.s64 	%rd2092, %rd2091, %rd2080;
	add.s64 	%rd2093, %rd2341, %rd2334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1304,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd2336;
	}
	shf.r.wrap.b32 	%r1306, %r1305, %r1304, 19;
	shf.r.wrap.b32 	%r1307, %r1304, %r1305, 19;
	mov.b64 	%rd2094, {%r1307, %r1306};
	shf.l.wrap.b32 	%r1308, %r1304, %r1305, 3;
	shf.l.wrap.b32 	%r1309, %r1305, %r1304, 3;
	mov.b64 	%rd2095, {%r1309, %r1308};
	xor.b64  	%rd2096, %rd2094, %rd2095;
	shr.u64 	%rd2097, %rd2336, 6;
	xor.b64  	%rd2098, %rd2096, %rd2097;
	add.s64 	%rd2099, %rd2093, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd2333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd2333;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 8;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 8;
	mov.b64 	%rd2100, {%r1313, %r1312};
	shf.r.wrap.b32 	%r1314, %r1311, %r1310, 1;
	shf.r.wrap.b32 	%r1315, %r1310, %r1311, 1;
	mov.b64 	%rd2101, {%r1315, %r1314};
	xor.b64  	%rd2102, %rd2101, %rd2100;
	shr.u64 	%rd2103, %rd2333, 7;
	xor.b64  	%rd2104, %rd2102, %rd2103;
	add.s64 	%rd2334, %rd2099, %rd2104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1316,%dummy}, %rd2081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1317}, %rd2081;
	}
	shf.r.wrap.b32 	%r1318, %r1317, %r1316, 14;
	shf.r.wrap.b32 	%r1319, %r1316, %r1317, 14;
	mov.b64 	%rd2105, {%r1319, %r1318};
	shf.r.wrap.b32 	%r1320, %r1317, %r1316, 18;
	shf.r.wrap.b32 	%r1321, %r1316, %r1317, 18;
	mov.b64 	%rd2106, {%r1321, %r1320};
	xor.b64  	%rd2107, %rd2105, %rd2106;
	shf.l.wrap.b32 	%r1322, %r1316, %r1317, 23;
	shf.l.wrap.b32 	%r1323, %r1317, %r1316, 23;
	mov.b64 	%rd2108, {%r1323, %r1322};
	xor.b64  	%rd2109, %rd2107, %rd2108;
	xor.b64  	%rd2110, %rd2044, %rd2007;
	and.b64  	%rd2111, %rd2081, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2007;
	add.s64 	%rd2113, %rd2112, %rd1970;
	add.s64 	%rd2114, %rd2113, %rd2109;
	ld.const.u64 	%rd2115, [%rd1697+88];
	add.s64 	%rd2116, %rd2114, %rd2115;
	add.s64 	%rd2117, %rd2116, %rd2334;
	add.s64 	%rd2118, %rd2117, %rd1981;
	and.b64  	%rd2119, %rd2092, %rd2055;
	or.b64  	%rd2120, %rd2092, %rd2055;
	and.b64  	%rd2121, %rd2120, %rd2018;
	or.b64  	%rd2122, %rd2121, %rd2119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd2092;
	}
	shf.r.wrap.b32 	%r1326, %r1325, %r1324, 28;
	shf.r.wrap.b32 	%r1327, %r1324, %r1325, 28;
	mov.b64 	%rd2123, {%r1327, %r1326};
	shf.l.wrap.b32 	%r1328, %r1324, %r1325, 30;
	shf.l.wrap.b32 	%r1329, %r1325, %r1324, 30;
	mov.b64 	%rd2124, {%r1329, %r1328};
	xor.b64  	%rd2125, %rd2123, %rd2124;
	shf.l.wrap.b32 	%r1330, %r1324, %r1325, 25;
	shf.l.wrap.b32 	%r1331, %r1325, %r1324, 25;
	mov.b64 	%rd2126, {%r1331, %r1330};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	add.s64 	%rd2128, %rd2127, %rd2122;
	add.s64 	%rd2129, %rd2128, %rd2117;
	add.s64 	%rd2130, %rd2340, %rd2333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd2335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1333}, %rd2335;
	}
	shf.r.wrap.b32 	%r1334, %r1333, %r1332, 19;
	shf.r.wrap.b32 	%r1335, %r1332, %r1333, 19;
	mov.b64 	%rd2131, {%r1335, %r1334};
	shf.l.wrap.b32 	%r1336, %r1332, %r1333, 3;
	shf.l.wrap.b32 	%r1337, %r1333, %r1332, 3;
	mov.b64 	%rd2132, {%r1337, %r1336};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	shr.u64 	%rd2134, %rd2335, 6;
	xor.b64  	%rd2135, %rd2133, %rd2134;
	add.s64 	%rd2136, %rd2130, %rd2135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1338,%dummy}, %rd2332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1339}, %rd2332;
	}
	shf.r.wrap.b32 	%r1340, %r1339, %r1338, 8;
	shf.r.wrap.b32 	%r1341, %r1338, %r1339, 8;
	mov.b64 	%rd2137, {%r1341, %r1340};
	shf.r.wrap.b32 	%r1342, %r1339, %r1338, 1;
	shf.r.wrap.b32 	%r1343, %r1338, %r1339, 1;
	mov.b64 	%rd2138, {%r1343, %r1342};
	xor.b64  	%rd2139, %rd2138, %rd2137;
	shr.u64 	%rd2140, %rd2332, 7;
	xor.b64  	%rd2141, %rd2139, %rd2140;
	add.s64 	%rd2333, %rd2136, %rd2141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1344,%dummy}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1345}, %rd2118;
	}
	shf.r.wrap.b32 	%r1346, %r1345, %r1344, 14;
	shf.r.wrap.b32 	%r1347, %r1344, %r1345, 14;
	mov.b64 	%rd2142, {%r1347, %r1346};
	shf.r.wrap.b32 	%r1348, %r1345, %r1344, 18;
	shf.r.wrap.b32 	%r1349, %r1344, %r1345, 18;
	mov.b64 	%rd2143, {%r1349, %r1348};
	xor.b64  	%rd2144, %rd2142, %rd2143;
	shf.l.wrap.b32 	%r1350, %r1344, %r1345, 23;
	shf.l.wrap.b32 	%r1351, %r1345, %r1344, 23;
	mov.b64 	%rd2145, {%r1351, %r1350};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	xor.b64  	%rd2147, %rd2081, %rd2044;
	and.b64  	%rd2148, %rd2118, %rd2147;
	xor.b64  	%rd2149, %rd2148, %rd2044;
	add.s64 	%rd2150, %rd2149, %rd2007;
	add.s64 	%rd2151, %rd2150, %rd2146;
	ld.const.u64 	%rd2152, [%rd1697+96];
	add.s64 	%rd2153, %rd2151, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2333;
	add.s64 	%rd2353, %rd2154, %rd2018;
	and.b64  	%rd2155, %rd2129, %rd2092;
	or.b64  	%rd2156, %rd2129, %rd2092;
	and.b64  	%rd2157, %rd2156, %rd2055;
	or.b64  	%rd2158, %rd2157, %rd2155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd2129;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 28;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 28;
	mov.b64 	%rd2159, {%r1355, %r1354};
	shf.l.wrap.b32 	%r1356, %r1352, %r1353, 30;
	shf.l.wrap.b32 	%r1357, %r1353, %r1352, 30;
	mov.b64 	%rd2160, {%r1357, %r1356};
	xor.b64  	%rd2161, %rd2159, %rd2160;
	shf.l.wrap.b32 	%r1358, %r1352, %r1353, 25;
	shf.l.wrap.b32 	%r1359, %r1353, %r1352, 25;
	mov.b64 	%rd2162, {%r1359, %r1358};
	xor.b64  	%rd2163, %rd2161, %rd2162;
	add.s64 	%rd2164, %rd2163, %rd2158;
	add.s64 	%rd2349, %rd2164, %rd2154;
	add.s64 	%rd2165, %rd2339, %rd2332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1360,%dummy}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd2334;
	}
	shf.r.wrap.b32 	%r1362, %r1361, %r1360, 19;
	shf.r.wrap.b32 	%r1363, %r1360, %r1361, 19;
	mov.b64 	%rd2166, {%r1363, %r1362};
	shf.l.wrap.b32 	%r1364, %r1360, %r1361, 3;
	shf.l.wrap.b32 	%r1365, %r1361, %r1360, 3;
	mov.b64 	%rd2167, {%r1365, %r1364};
	xor.b64  	%rd2168, %rd2166, %rd2167;
	shr.u64 	%rd2169, %rd2334, 6;
	xor.b64  	%rd2170, %rd2168, %rd2169;
	add.s64 	%rd2171, %rd2165, %rd2170;
	shf.r.wrap.b32 	%r1366, %r996, %r997, 8;
	shf.r.wrap.b32 	%r1367, %r997, %r996, 8;
	mov.b64 	%rd2172, {%r1367, %r1366};
	shf.r.wrap.b32 	%r1368, %r996, %r997, 1;
	shf.r.wrap.b32 	%r1369, %r997, %r996, 1;
	mov.b64 	%rd2173, {%r1369, %r1368};
	xor.b64  	%rd2174, %rd2173, %rd2172;
	shr.u64 	%rd2175, %rd2331, 7;
	xor.b64  	%rd2176, %rd2174, %rd2175;
	add.s64 	%rd2332, %rd2171, %rd2176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd2353;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 14;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 14;
	mov.b64 	%rd2177, {%r1373, %r1372};
	shf.r.wrap.b32 	%r1374, %r1371, %r1370, 18;
	shf.r.wrap.b32 	%r1375, %r1370, %r1371, 18;
	mov.b64 	%rd2178, {%r1375, %r1374};
	xor.b64  	%rd2179, %rd2177, %rd2178;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 23;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 23;
	mov.b64 	%rd2180, {%r1377, %r1376};
	xor.b64  	%rd2181, %rd2179, %rd2180;
	xor.b64  	%rd2182, %rd2118, %rd2081;
	and.b64  	%rd2183, %rd2353, %rd2182;
	xor.b64  	%rd2184, %rd2183, %rd2081;
	add.s64 	%rd2185, %rd2184, %rd2044;
	add.s64 	%rd2186, %rd2185, %rd2181;
	ld.const.u64 	%rd2187, [%rd1697+104];
	add.s64 	%rd2188, %rd2186, %rd2187;
	add.s64 	%rd2189, %rd2188, %rd2332;
	add.s64 	%rd2352, %rd2189, %rd2055;
	and.b64  	%rd2190, %rd2349, %rd2129;
	or.b64  	%rd2191, %rd2349, %rd2129;
	and.b64  	%rd2192, %rd2191, %rd2092;
	or.b64  	%rd2193, %rd2192, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd2349;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 28;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 28;
	mov.b64 	%rd2194, {%r1381, %r1380};
	shf.l.wrap.b32 	%r1382, %r1378, %r1379, 30;
	shf.l.wrap.b32 	%r1383, %r1379, %r1378, 30;
	mov.b64 	%rd2195, {%r1383, %r1382};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	shf.l.wrap.b32 	%r1384, %r1378, %r1379, 25;
	shf.l.wrap.b32 	%r1385, %r1379, %r1378, 25;
	mov.b64 	%rd2197, {%r1385, %r1384};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	add.s64 	%rd2199, %rd2198, %rd2193;
	add.s64 	%rd2348, %rd2199, %rd2189;
	add.s64 	%rd2200, %rd2338, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd2333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1387}, %rd2333;
	}
	shf.r.wrap.b32 	%r1388, %r1387, %r1386, 19;
	shf.r.wrap.b32 	%r1389, %r1386, %r1387, 19;
	mov.b64 	%rd2201, {%r1389, %r1388};
	shf.l.wrap.b32 	%r1390, %r1386, %r1387, 3;
	shf.l.wrap.b32 	%r1391, %r1387, %r1386, 3;
	mov.b64 	%rd2202, {%r1391, %r1390};
	xor.b64  	%rd2203, %rd2201, %rd2202;
	shr.u64 	%rd2204, %rd2333, 6;
	xor.b64  	%rd2205, %rd2203, %rd2204;
	add.s64 	%rd2206, %rd2200, %rd2205;
	shf.r.wrap.b32 	%r1392, %r1024, %r1025, 8;
	shf.r.wrap.b32 	%r1393, %r1025, %r1024, 8;
	mov.b64 	%rd2207, {%r1393, %r1392};
	shf.r.wrap.b32 	%r1394, %r1024, %r1025, 1;
	shf.r.wrap.b32 	%r1395, %r1025, %r1024, 1;
	mov.b64 	%rd2208, {%r1395, %r1394};
	xor.b64  	%rd2209, %rd2208, %rd2207;
	shr.u64 	%rd2210, %rd2330, 7;
	xor.b64  	%rd2211, %rd2209, %rd2210;
	add.s64 	%rd2331, %rd2206, %rd2211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd2352;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 14;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 14;
	mov.b64 	%rd2212, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1397, %r1396, 18;
	shf.r.wrap.b32 	%r1401, %r1396, %r1397, 18;
	mov.b64 	%rd2213, {%r1401, %r1400};
	xor.b64  	%rd2214, %rd2212, %rd2213;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 23;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 23;
	mov.b64 	%rd2215, {%r1403, %r1402};
	xor.b64  	%rd2216, %rd2214, %rd2215;
	xor.b64  	%rd2217, %rd2353, %rd2118;
	and.b64  	%rd2218, %rd2352, %rd2217;
	xor.b64  	%rd2219, %rd2218, %rd2118;
	add.s64 	%rd2220, %rd2219, %rd2081;
	add.s64 	%rd2221, %rd2220, %rd2216;
	ld.const.u64 	%rd2222, [%rd1697+112];
	add.s64 	%rd2223, %rd2221, %rd2222;
	add.s64 	%rd2224, %rd2223, %rd2331;
	add.s64 	%rd2351, %rd2224, %rd2092;
	and.b64  	%rd2225, %rd2348, %rd2349;
	or.b64  	%rd2226, %rd2348, %rd2349;
	and.b64  	%rd2227, %rd2226, %rd2129;
	or.b64  	%rd2228, %rd2227, %rd2225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd2348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd2348;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 28;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 28;
	mov.b64 	%rd2229, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 30;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 30;
	mov.b64 	%rd2230, {%r1409, %r1408};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	shf.l.wrap.b32 	%r1410, %r1404, %r1405, 25;
	shf.l.wrap.b32 	%r1411, %r1405, %r1404, 25;
	mov.b64 	%rd2232, {%r1411, %r1410};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	add.s64 	%rd2234, %rd2233, %rd2228;
	add.s64 	%rd2347, %rd2234, %rd2224;
	add.s64 	%rd2235, %rd2337, %rd2330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd2332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd2332;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 19;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 19;
	mov.b64 	%rd2236, {%r1415, %r1414};
	shf.l.wrap.b32 	%r1416, %r1412, %r1413, 3;
	shf.l.wrap.b32 	%r1417, %r1413, %r1412, 3;
	mov.b64 	%rd2237, {%r1417, %r1416};
	xor.b64  	%rd2238, %rd2236, %rd2237;
	shr.u64 	%rd2239, %rd2332, 6;
	xor.b64  	%rd2240, %rd2238, %rd2239;
	add.s64 	%rd2241, %rd2235, %rd2240;
	shf.r.wrap.b32 	%r1418, %r1053, %r1052, 1;
	shf.r.wrap.b32 	%r1419, %r1052, %r1053, 1;
	mov.b64 	%rd2242, {%r1419, %r1418};
	shf.r.wrap.b32 	%r1420, %r1053, %r1052, 8;
	shf.r.wrap.b32 	%r1421, %r1052, %r1053, 8;
	mov.b64 	%rd2243, {%r1421, %r1420};
	xor.b64  	%rd2244, %rd2242, %rd2243;
	shr.u64 	%rd2245, %rd2345, 7;
	xor.b64  	%rd2246, %rd2244, %rd2245;
	add.s64 	%rd2330, %rd2241, %rd2246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd2351;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 14;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 14;
	mov.b64 	%rd2247, {%r1425, %r1424};
	shf.r.wrap.b32 	%r1426, %r1423, %r1422, 18;
	shf.r.wrap.b32 	%r1427, %r1422, %r1423, 18;
	mov.b64 	%rd2248, {%r1427, %r1426};
	xor.b64  	%rd2249, %rd2247, %rd2248;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 23;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 23;
	mov.b64 	%rd2250, {%r1429, %r1428};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	xor.b64  	%rd2252, %rd2352, %rd2353;
	and.b64  	%rd2253, %rd2351, %rd2252;
	xor.b64  	%rd2254, %rd2253, %rd2353;
	add.s64 	%rd2255, %rd2254, %rd2118;
	add.s64 	%rd2256, %rd2255, %rd2251;
	ld.const.u64 	%rd2257, [%rd1697+120];
	add.s64 	%rd2258, %rd2256, %rd2257;
	add.s64 	%rd2259, %rd2258, %rd2330;
	add.s64 	%rd2350, %rd2259, %rd2129;
	and.b64  	%rd2260, %rd2347, %rd2348;
	or.b64  	%rd2261, %rd2347, %rd2348;
	and.b64  	%rd2262, %rd2261, %rd2349;
	or.b64  	%rd2263, %rd2262, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd2347;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 28;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 28;
	mov.b64 	%rd2264, {%r1433, %r1432};
	shf.l.wrap.b32 	%r1434, %r1430, %r1431, 30;
	shf.l.wrap.b32 	%r1435, %r1431, %r1430, 30;
	mov.b64 	%rd2265, {%r1435, %r1434};
	xor.b64  	%rd2266, %rd2264, %rd2265;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 25;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 25;
	mov.b64 	%rd2267, {%r1437, %r1436};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	add.s64 	%rd2269, %rd2268, %rd2263;
	add.s64 	%rd2346, %rd2269, %rd2259;
	add.s32 	%r1449, %r1449, 16;
	setp.lt.u32 	%p10, %r1449, 80;
	@%p10 bra 	$L__BB2_11;

	add.s64 	%rd2280, %rd2329, %rd2346;
	add.s64 	%rd2279, %rd2328, %rd2347;
	add.s64 	%rd2278, %rd2327, %rd2348;
	add.s64 	%rd2277, %rd2326, %rd2349;
	add.s64 	%rd2276, %rd2325, %rd2350;
	add.s64 	%rd2275, %rd2324, %rd2351;
	add.s64 	%rd2274, %rd2323, %rd2352;
	add.s64 	%rd2273, %rd2322, %rd2353;
	add.s32 	%r1438, %r1446, 1;
	setp.eq.s32 	%p11, %r1438, 42;
	selp.b32 	%r1446, 0, %r1438, %p11;
	add.s32 	%r1445, %r1445, 1;
	setp.lt.u32 	%p12, %r1445, 84;
	@%p12 bra 	$L__BB2_1;

	mov.b32 	%r1444, %envreg3;
	mov.u32 	%r1443, %tid.x;
	add.s32 	%r1442, %r1443, %r1444;
	mov.u32 	%r1441, %ctaid.x;
	mov.u32 	%r1440, %ntid.x;
	mad.lo.s32 	%r1439, %r1440, %r1441, %r1442;
	mul.wide.s32 	%rd2272, %r1439, 104;
	ld.param.u64 	%rd2271, [kernel_crypt_full_param_2];
	add.s64 	%rd2270, %rd2271, %rd2272;
	st.global.u64 	[%rd2270], %rd2280;
	st.global.u64 	[%rd2270+8], %rd2279;
	st.global.u64 	[%rd2270+16], %rd2278;
	st.global.u64 	[%rd2270+24], %rd2277;
	st.global.u64 	[%rd2270+32], %rd2276;
	st.global.u64 	[%rd2270+40], %rd2275;
	st.global.u64 	[%rd2270+48], %rd2274;
	st.global.u64 	[%rd2270+56], %rd2273;
	ret;

}
	// .globl	kernel_crypt_fast
.entry kernel_crypt_fast(
	.param .u64 .ptr .const .align 8 kernel_crypt_fast_param_0,
	.param .u64 .ptr .global .align 8 kernel_crypt_fast_param_1,
	.param .u64 .ptr .global .align 8 kernel_crypt_fast_param_2,
	.param .u64 .ptr .global .align 8 kernel_crypt_fast_param_3
)
{
	.local .align 16 .b8 	__local_depot3[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .b32 	%r<748>;
	.reg .b64 	%rd<1197>;


	mov.u64 	%SPL, __local_depot3;
	ld.param.u64 	%rd111, [kernel_crypt_fast_param_2];
	ld.param.u64 	%rd110, [kernel_crypt_fast_param_3];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mov.b32 	%r16, %envreg3;
	add.s32 	%r17, %r15, %r16;
	mad.lo.s32 	%r18, %r14, %r13, %r17;
	cvt.s64.s32 	%rd1, %r18;
	mul.wide.s32 	%rd112, %r18, 104;
	add.s64 	%rd2, %rd111, %rd112;
	ld.global.u64 	%rd1171, [%rd2];
	ld.global.u64 	%rd1170, [%rd2+8];
	ld.global.u64 	%rd1169, [%rd2+16];
	ld.global.u64 	%rd1168, [%rd2+24];
	ld.global.u64 	%rd1167, [%rd2+32];
	ld.global.u64 	%rd1166, [%rd2+40];
	ld.global.u64 	%rd1165, [%rd2+48];
	ld.global.u64 	%rd1164, [%rd2+56];
	add.u64 	%rd11, %SPL, 0;
	mov.b32 	%r19, %envreg6;
	mul.lo.s32 	%r20, %r19, %r14;
	cvt.s64.s32 	%rd12, %r20;
	mov.u64 	%rd114, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r21,%dummy}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r22}, %rd114;
	}
	shf.r.wrap.b32 	%r23, %r22, %r21, 18;
	shf.r.wrap.b32 	%r24, %r21, %r22, 18;
	mov.b64 	%rd115, {%r24, %r23};
	shf.r.wrap.b32 	%r25, %r22, %r21, 14;
	shf.r.wrap.b32 	%r26, %r21, %r22, 14;
	mov.b64 	%rd116, {%r26, %r25};
	xor.b64  	%rd117, %rd116, %rd115;
	shf.l.wrap.b32 	%r27, %r21, %r22, 23;
	shf.l.wrap.b32 	%r28, %r22, %r21, 23;
	mov.b64 	%rd118, {%r28, %r27};
	xor.b64  	%rd119, %rd117, %rd118;
	add.s64 	%rd13, %rd119, -4760086834832339754;
	mov.u64 	%rd120, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r30,%dummy}, %rd120;
	}
	shf.l.wrap.b32 	%r31, %r30, %r29, 30;
	shf.l.wrap.b32 	%r32, %r29, %r30, 30;
	mov.b64 	%rd121, {%r32, %r31};
	shf.r.wrap.b32 	%r33, %r29, %r30, 28;
	shf.r.wrap.b32 	%r34, %r30, %r29, 28;
	mov.b64 	%rd122, {%r34, %r33};
	xor.b64  	%rd123, %rd122, %rd121;
	shf.l.wrap.b32 	%r35, %r30, %r29, 25;
	shf.l.wrap.b32 	%r36, %r29, %r30, 25;
	mov.b64 	%rd124, {%r36, %r35};
	xor.b64  	%rd125, %rd123, %rd124;
	add.s64 	%rd14, %rd125, 4210837510808201515;
	mul.wide.s32 	%rd15, %r20, 8;
	mov.u32 	%r744, 0;
	mov.u32 	%r745, %r744;

$L__BB3_1:
	.pragma "nounroll";
	and.b32  	%r37, %r744, 1;
	setp.eq.b32 	%p1, %r37, 1;
	mov.pred 	%p2, 0;
	xor.pred  	%p3, %p1, %p2;
	not.pred 	%p4, %p3;
	mul.wide.u32 	%rd126, %r745, 4;
	mov.u64 	%rd127, loop_index;
	add.s64 	%rd25, %rd127, %rd126;
	@%p4 bra 	$L__BB3_4;
	bra.uni 	$L__BB3_2;

$L__BB3_4:
	st.local.v2.u64 	[%rd11], {%rd1171, %rd1170};
	st.local.v2.u64 	[%rd11+16], {%rd1169, %rd1168};
	st.local.v2.u64 	[%rd11+32], {%rd1167, %rd1166};
	st.local.v2.u64 	[%rd11+48], {%rd1165, %rd1164};
	ld.const.u32 	%r48, [%rd25];
	mul.lo.s32 	%r49, %r48, 9;
	cvt.s64.s32 	%rd185, %r49;
	mul.lo.s64 	%rd186, %rd185, %rd12;
	add.s64 	%rd187, %rd186, %rd1;
	shl.b64 	%rd188, %rd187, 3;
	add.s64 	%rd189, %rd110, %rd188;
	add.s64 	%rd190, %rd189, %rd15;
	ld.global.nc.u64 	%rd191, [%rd189];
	ld.global.nc.u64 	%rd192, [%rd190];
	st.local.v2.u64 	[%rd11+64], {%rd191, %rd192};
	add.s64 	%rd193, %rd190, %rd15;
	add.s64 	%rd194, %rd193, %rd15;
	ld.global.nc.u64 	%rd195, [%rd194];
	ld.global.nc.u64 	%rd196, [%rd193];
	st.local.v2.u64 	[%rd11+80], {%rd196, %rd195};
	add.s64 	%rd197, %rd194, %rd15;
	add.s64 	%rd198, %rd197, %rd15;
	ld.global.nc.u64 	%rd199, [%rd198];
	ld.global.nc.u64 	%rd200, [%rd197];
	st.local.v2.u64 	[%rd11+96], {%rd200, %rd199};
	add.s64 	%rd201, %rd198, %rd15;
	add.s64 	%rd202, %rd201, %rd15;
	ld.global.nc.u64 	%rd203, [%rd202];
	ld.global.nc.u64 	%rd204, [%rd201];
	st.local.v2.u64 	[%rd11+112], {%rd204, %rd203};
	add.s64 	%rd205, %rd202, %rd15;
	ld.global.nc.u64 	%rd206, [%rd205];
	cvt.u32.u64 	%r746, %rd206;
	bra.uni 	$L__BB3_5;

$L__BB3_2:
	mov.u64 	%rd128, 0;
	st.local.v2.u64 	[%rd11+64], {%rd128, %rd128};
	st.local.v2.u64 	[%rd11+80], {%rd128, %rd128};
	st.local.v2.u64 	[%rd11+96], {%rd128, %rd128};
	st.local.v2.u64 	[%rd11+112], {%rd128, %rd128};
	ld.const.u32 	%r38, [%rd25];
	mul.lo.s32 	%r39, %r38, 9;
	cvt.s64.s32 	%rd129, %r39;
	mul.lo.s64 	%rd130, %rd129, %rd12;
	add.s64 	%rd131, %rd130, %rd1;
	shl.b64 	%rd132, %rd131, 3;
	add.s64 	%rd133, %rd110, %rd132;
	add.s64 	%rd134, %rd133, %rd15;
	ld.global.nc.u64 	%rd135, [%rd133];
	ld.global.nc.u64 	%rd136, [%rd134];
	st.local.v2.u64 	[%rd11], {%rd135, %rd136};
	add.s64 	%rd137, %rd134, %rd15;
	add.s64 	%rd138, %rd137, %rd15;
	ld.global.nc.u64 	%rd139, [%rd138];
	ld.global.nc.u64 	%rd140, [%rd137];
	st.local.v2.u64 	[%rd11+16], {%rd140, %rd139};
	add.s64 	%rd141, %rd138, %rd15;
	add.s64 	%rd142, %rd141, %rd15;
	ld.global.nc.u64 	%rd143, [%rd142];
	ld.global.nc.u64 	%rd144, [%rd141];
	st.local.v2.u64 	[%rd11+32], {%rd144, %rd143};
	add.s64 	%rd145, %rd142, %rd15;
	add.s64 	%rd146, %rd145, %rd15;
	ld.global.nc.u64 	%rd147, [%rd146];
	ld.global.nc.u64 	%rd148, [%rd145];
	st.local.v2.u64 	[%rd11+48], {%rd148, %rd147};
	add.s64 	%rd149, %rd146, %rd15;
	ld.global.nc.u64 	%rd150, [%rd149];
	cvt.u32.u64 	%r746, %rd150;
	and.b32  	%r4, %r746, 7;
	shl.b32 	%r40, %r746, 3;
	and.b32  	%r41, %r40, 56;
	shr.u32 	%r42, %r746, 3;
	shl.b32 	%r43, %r42, 3;
	cvt.u64.u32 	%rd151, %r43;
	add.s64 	%rd26, %rd11, %rd151;
	shr.u64 	%rd152, %rd1171, %r41;
	ld.local.u64 	%rd153, [%rd26];
	or.b64  	%rd154, %rd152, %rd153;
	st.local.u64 	[%rd26], %rd154;
	setp.eq.s32 	%p5, %r4, 0;
	neg.s32 	%r44, %r41;
	and.b32  	%r45, %r44, 56;
	cvt.u64.u32 	%rd27, %r45;
	shl.b64 	%rd155, %rd1171, %r45;
	selp.b64 	%rd156, 0, %rd155, %p5;
	shr.u64 	%rd157, %rd1170, %r41;
	or.b64  	%rd158, %rd156, %rd157;
	st.local.u64 	[%rd26+8], %rd158;
	shl.b64 	%rd159, %rd1170, %r45;
	selp.b64 	%rd160, 0, %rd159, %p5;
	shr.u64 	%rd161, %rd1169, %r41;
	or.b64  	%rd162, %rd161, %rd160;
	st.local.u64 	[%rd26+16], %rd162;
	shl.b64 	%rd163, %rd1169, %r45;
	selp.b64 	%rd164, 0, %rd163, %p5;
	shr.u64 	%rd165, %rd1168, %r41;
	or.b64  	%rd166, %rd165, %rd164;
	st.local.u64 	[%rd26+24], %rd166;
	shl.b64 	%rd167, %rd1168, %r45;
	selp.b64 	%rd168, 0, %rd167, %p5;
	shr.u64 	%rd169, %rd1167, %r41;
	or.b64  	%rd170, %rd169, %rd168;
	st.local.u64 	[%rd26+32], %rd170;
	shl.b64 	%rd171, %rd1167, %r45;
	selp.b64 	%rd172, 0, %rd171, %p5;
	shr.u64 	%rd173, %rd1166, %r41;
	or.b64  	%rd174, %rd173, %rd172;
	st.local.u64 	[%rd26+40], %rd174;
	shl.b64 	%rd175, %rd1166, %r45;
	selp.b64 	%rd176, 0, %rd175, %p5;
	shr.u64 	%rd177, %rd1165, %r41;
	or.b64  	%rd178, %rd177, %rd176;
	st.local.u64 	[%rd26+48], %rd178;
	shl.b64 	%rd179, %rd1165, %r45;
	selp.b64 	%rd180, 0, %rd179, %p5;
	add.s32 	%r46, %r42, 7;
	shr.u64 	%rd181, %rd1164, %r41;
	or.b64  	%rd182, %rd181, %rd180;
	st.local.u64 	[%rd26+56], %rd182;
	setp.gt.u32 	%p6, %r46, 14;
	@%p6 bra 	$L__BB3_5;

	cvt.u32.u64 	%r47, %rd27;
	shl.b64 	%rd183, %rd1164, %r47;
	selp.b64 	%rd184, 0, %rd183, %p5;
	st.local.u64 	[%rd26+64], %rd184;

$L__BB3_5:
	add.s32 	%r51, %r746, 64;
	shl.b32 	%r52, %r51, 3;
	and.b32  	%r53, %r52, 56;
	and.b32  	%r54, %r51, -8;
	cvt.u64.u32 	%rd208, %r54;
	add.s64 	%rd209, %rd11, %rd208;
	mov.u64 	%rd210, -9223372036854775808;
	shr.u64 	%rd211, %rd210, %r53;
	ld.local.u64 	%rd212, [%rd209];
	or.b64  	%rd213, %rd212, %rd211;
	st.local.u64 	[%rd209], %rd213;
	mul.wide.u32 	%rd1173, %r51, 8;
	st.local.u64 	[%rd11+120], %rd1173;
	ld.local.v2.u64 	{%rd1188, %rd1187}, [%rd11];
	mov.u32 	%r747, 0;
	ld.local.v2.u64 	{%rd1186, %rd1185}, [%rd11+16];
	ld.local.v2.u64 	{%rd1184, %rd1183}, [%rd11+32];
	ld.local.v2.u64 	{%rd1182, %rd1181}, [%rd11+48];
	ld.local.v2.u64 	{%rd1180, %rd1179}, [%rd11+64];
	ld.local.v2.u64 	{%rd1178, %rd1177}, [%rd11+80];
	ld.local.v2.u64 	{%rd1176, %rd1175}, [%rd11+96];
	add.s64 	%rd228, %rd13, %rd1188;
	add.s64 	%rd229, %rd228, -6534734903238641935;
	add.s64 	%rd230, %rd14, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r55,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r56}, %rd229;
	}
	shf.r.wrap.b32 	%r57, %r56, %r55, 14;
	shf.r.wrap.b32 	%r58, %r55, %r56, 14;
	mov.b64 	%rd231, {%r58, %r57};
	shf.r.wrap.b32 	%r59, %r56, %r55, 18;
	shf.r.wrap.b32 	%r60, %r55, %r56, 18;
	mov.b64 	%rd232, {%r60, %r59};
	xor.b64  	%rd233, %rd231, %rd232;
	shf.l.wrap.b32 	%r61, %r55, %r56, 23;
	shf.l.wrap.b32 	%r62, %r56, %r55, 23;
	mov.b64 	%rd234, {%r62, %r61};
	xor.b64  	%rd235, %rd233, %rd234;
	and.b64  	%rd236, %rd229, -3887949035690463538;
	xor.b64  	%rd237, %rd236, -7276294671716946913;
	add.s64 	%rd238, %rd237, %rd235;
	add.s64 	%rd239, %rd238, %rd1187;
	and.b64  	%rd240, %rd230, -3355664534840381901;
	or.b64  	%rd241, %rd240, 3026882967131160840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd230;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 28;
	shf.r.wrap.b32 	%r66, %r63, %r64, 28;
	mov.b64 	%rd242, {%r66, %r65};
	shf.l.wrap.b32 	%r67, %r63, %r64, 30;
	shf.l.wrap.b32 	%r68, %r64, %r63, 30;
	mov.b64 	%rd243, {%r68, %r67};
	xor.b64  	%rd244, %rd242, %rd243;
	shf.l.wrap.b32 	%r69, %r63, %r64, 25;
	shf.l.wrap.b32 	%r70, %r64, %r63, 25;
	mov.b64 	%rd245, {%r70, %r69};
	xor.b64  	%rd246, %rd244, %rd245;
	add.s64 	%rd247, %rd246, %rd241;
	add.s64 	%rd248, %rd247, %rd239;
	add.s64 	%rd249, %rd239, -3663095898801038493;
	add.s64 	%rd250, %rd248, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r72}, %rd249;
	}
	shf.r.wrap.b32 	%r73, %r72, %r71, 14;
	shf.r.wrap.b32 	%r74, %r71, %r72, 14;
	mov.b64 	%rd251, {%r74, %r73};
	shf.r.wrap.b32 	%r75, %r72, %r71, 18;
	shf.r.wrap.b32 	%r76, %r71, %r72, 18;
	mov.b64 	%rd252, {%r76, %r75};
	xor.b64  	%rd253, %rd251, %rd252;
	shf.l.wrap.b32 	%r77, %r71, %r72, 23;
	shf.l.wrap.b32 	%r78, %r72, %r71, 23;
	mov.b64 	%rd254, {%r78, %r77};
	xor.b64  	%rd255, %rd253, %rd254;
	xor.b64  	%rd256, %rd229, 5840696475078001361;
	and.b64  	%rd257, %rd249, %rd256;
	xor.b64  	%rd258, %rd257, 5840696475078001361;
	add.s64 	%rd259, %rd258, %rd255;
	add.s64 	%rd260, %rd259, %rd1186;
	and.b64  	%rd261, %rd250, %rd230;
	or.b64  	%rd262, %rd250, %rd230;
	and.b64  	%rd263, %rd262, 7640891576956012808;
	or.b64  	%rd264, %rd263, %rd261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r79,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r80}, %rd250;
	}
	shf.r.wrap.b32 	%r81, %r80, %r79, 28;
	shf.r.wrap.b32 	%r82, %r79, %r80, 28;
	mov.b64 	%rd265, {%r82, %r81};
	shf.l.wrap.b32 	%r83, %r79, %r80, 30;
	shf.l.wrap.b32 	%r84, %r80, %r79, 30;
	mov.b64 	%rd266, {%r84, %r83};
	xor.b64  	%rd267, %rd265, %rd266;
	shf.l.wrap.b32 	%r85, %r79, %r80, 25;
	shf.l.wrap.b32 	%r86, %r80, %r79, 25;
	mov.b64 	%rd268, {%r86, %r85};
	xor.b64  	%rd269, %rd267, %rd268;
	add.s64 	%rd270, %rd269, %rd264;
	add.s64 	%rd271, %rd270, %rd260;
	add.s64 	%rd272, %rd260, 877659737583668873;
	add.s64 	%rd273, %rd271, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd272;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 14;
	shf.r.wrap.b32 	%r90, %r87, %r88, 14;
	mov.b64 	%rd274, {%r90, %r89};
	shf.r.wrap.b32 	%r91, %r88, %r87, 18;
	shf.r.wrap.b32 	%r92, %r87, %r88, 18;
	mov.b64 	%rd275, {%r92, %r91};
	xor.b64  	%rd276, %rd274, %rd275;
	shf.l.wrap.b32 	%r93, %r87, %r88, 23;
	shf.l.wrap.b32 	%r94, %r88, %r87, 23;
	mov.b64 	%rd277, {%r94, %r93};
	xor.b64  	%rd278, %rd276, %rd277;
	xor.b64  	%rd279, %rd249, %rd229;
	and.b64  	%rd280, %rd272, %rd279;
	xor.b64  	%rd281, %rd280, %rd229;
	add.s64 	%rd282, %rd281, %rd278;
	add.s64 	%rd283, %rd282, %rd1185;
	and.b64  	%rd284, %rd273, %rd250;
	or.b64  	%rd285, %rd273, %rd250;
	and.b64  	%rd286, %rd285, %rd230;
	or.b64  	%rd287, %rd286, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd273;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 28;
	shf.r.wrap.b32 	%r98, %r95, %r96, 28;
	mov.b64 	%rd288, {%r98, %r97};
	shf.l.wrap.b32 	%r99, %r95, %r96, 30;
	shf.l.wrap.b32 	%r100, %r96, %r95, 30;
	mov.b64 	%rd289, {%r100, %r99};
	xor.b64  	%rd290, %rd288, %rd289;
	shf.l.wrap.b32 	%r101, %r95, %r96, 25;
	shf.l.wrap.b32 	%r102, %r96, %r95, 25;
	mov.b64 	%rd291, {%r102, %r101};
	xor.b64  	%rd292, %rd290, %rd291;
	add.s64 	%rd293, %rd292, %rd287;
	add.s64 	%rd294, %rd293, %rd283;
	add.s64 	%rd295, %rd283, -6571292209873868907;
	add.s64 	%rd296, %rd294, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r103,%dummy}, %rd295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd295;
	}
	shf.r.wrap.b32 	%r105, %r104, %r103, 14;
	shf.r.wrap.b32 	%r106, %r103, %r104, 14;
	mov.b64 	%rd297, {%r106, %r105};
	shf.r.wrap.b32 	%r107, %r104, %r103, 18;
	shf.r.wrap.b32 	%r108, %r103, %r104, 18;
	mov.b64 	%rd298, {%r108, %r107};
	xor.b64  	%rd299, %rd297, %rd298;
	shf.l.wrap.b32 	%r109, %r103, %r104, 23;
	shf.l.wrap.b32 	%r110, %r104, %r103, 23;
	mov.b64 	%rd300, {%r110, %r109};
	xor.b64  	%rd301, %rd299, %rd300;
	xor.b64  	%rd302, %rd272, %rd249;
	and.b64  	%rd303, %rd295, %rd302;
	xor.b64  	%rd304, %rd303, %rd249;
	add.s64 	%rd305, %rd304, %rd229;
	add.s64 	%rd306, %rd305, %rd301;
	add.s64 	%rd307, %rd306, %rd1184;
	add.s64 	%rd308, %rd307, 4131703408338449720;
	add.s64 	%rd309, %rd308, %rd230;
	and.b64  	%rd310, %rd296, %rd273;
	or.b64  	%rd311, %rd296, %rd273;
	and.b64  	%rd312, %rd311, %rd250;
	or.b64  	%rd313, %rd312, %rd310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd296;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 28;
	shf.r.wrap.b32 	%r114, %r111, %r112, 28;
	mov.b64 	%rd314, {%r114, %r113};
	shf.l.wrap.b32 	%r115, %r111, %r112, 30;
	shf.l.wrap.b32 	%r116, %r112, %r111, 30;
	mov.b64 	%rd315, {%r116, %r115};
	xor.b64  	%rd316, %rd314, %rd315;
	shf.l.wrap.b32 	%r117, %r111, %r112, 25;
	shf.l.wrap.b32 	%r118, %r112, %r111, 25;
	mov.b64 	%rd317, {%r118, %r117};
	xor.b64  	%rd318, %rd316, %rd317;
	add.s64 	%rd319, %rd318, %rd313;
	add.s64 	%rd320, %rd319, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd309;
	}
	shf.r.wrap.b32 	%r121, %r120, %r119, 14;
	shf.r.wrap.b32 	%r122, %r119, %r120, 14;
	mov.b64 	%rd321, {%r122, %r121};
	shf.r.wrap.b32 	%r123, %r120, %r119, 18;
	shf.r.wrap.b32 	%r124, %r119, %r120, 18;
	mov.b64 	%rd322, {%r124, %r123};
	xor.b64  	%rd323, %rd321, %rd322;
	shf.l.wrap.b32 	%r125, %r119, %r120, 23;
	shf.l.wrap.b32 	%r126, %r120, %r119, 23;
	mov.b64 	%rd324, {%r126, %r125};
	xor.b64  	%rd325, %rd323, %rd324;
	xor.b64  	%rd326, %rd295, %rd272;
	and.b64  	%rd327, %rd309, %rd326;
	xor.b64  	%rd328, %rd327, %rd272;
	add.s64 	%rd329, %rd328, %rd249;
	add.s64 	%rd330, %rd329, %rd325;
	add.s64 	%rd331, %rd330, %rd1183;
	add.s64 	%rd332, %rd331, 6480981068601479193;
	add.s64 	%rd333, %rd332, %rd250;
	and.b64  	%rd334, %rd320, %rd296;
	or.b64  	%rd335, %rd320, %rd296;
	and.b64  	%rd336, %rd335, %rd273;
	or.b64  	%rd337, %rd336, %rd334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd320;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 28;
	shf.r.wrap.b32 	%r130, %r127, %r128, 28;
	mov.b64 	%rd338, {%r130, %r129};
	shf.l.wrap.b32 	%r131, %r127, %r128, 30;
	shf.l.wrap.b32 	%r132, %r128, %r127, 30;
	mov.b64 	%rd339, {%r132, %r131};
	xor.b64  	%rd340, %rd338, %rd339;
	shf.l.wrap.b32 	%r133, %r127, %r128, 25;
	shf.l.wrap.b32 	%r134, %r128, %r127, 25;
	mov.b64 	%rd341, {%r134, %r133};
	xor.b64  	%rd342, %rd340, %rd341;
	add.s64 	%rd343, %rd342, %rd337;
	add.s64 	%rd344, %rd343, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd333;
	}
	shf.r.wrap.b32 	%r137, %r136, %r135, 14;
	shf.r.wrap.b32 	%r138, %r135, %r136, 14;
	mov.b64 	%rd345, {%r138, %r137};
	shf.r.wrap.b32 	%r139, %r136, %r135, 18;
	shf.r.wrap.b32 	%r140, %r135, %r136, 18;
	mov.b64 	%rd346, {%r140, %r139};
	xor.b64  	%rd347, %rd345, %rd346;
	shf.l.wrap.b32 	%r141, %r135, %r136, 23;
	shf.l.wrap.b32 	%r142, %r136, %r135, 23;
	mov.b64 	%rd348, {%r142, %r141};
	xor.b64  	%rd349, %rd347, %rd348;
	xor.b64  	%rd350, %rd309, %rd295;
	and.b64  	%rd351, %rd333, %rd350;
	xor.b64  	%rd352, %rd351, %rd295;
	add.s64 	%rd353, %rd352, %rd272;
	add.s64 	%rd354, %rd353, %rd349;
	add.s64 	%rd355, %rd354, %rd1182;
	add.s64 	%rd356, %rd355, -7908458776815382629;
	add.s64 	%rd357, %rd356, %rd273;
	and.b64  	%rd358, %rd344, %rd320;
	or.b64  	%rd359, %rd344, %rd320;
	and.b64  	%rd360, %rd359, %rd296;
	or.b64  	%rd361, %rd360, %rd358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd344;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 28;
	shf.r.wrap.b32 	%r146, %r143, %r144, 28;
	mov.b64 	%rd362, {%r146, %r145};
	shf.l.wrap.b32 	%r147, %r143, %r144, 30;
	shf.l.wrap.b32 	%r148, %r144, %r143, 30;
	mov.b64 	%rd363, {%r148, %r147};
	xor.b64  	%rd364, %rd362, %rd363;
	shf.l.wrap.b32 	%r149, %r143, %r144, 25;
	shf.l.wrap.b32 	%r150, %r144, %r143, 25;
	mov.b64 	%rd365, {%r150, %r149};
	xor.b64  	%rd366, %rd364, %rd365;
	add.s64 	%rd367, %rd366, %rd361;
	add.s64 	%rd368, %rd367, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r151,%dummy}, %rd357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd357;
	}
	shf.r.wrap.b32 	%r153, %r152, %r151, 14;
	shf.r.wrap.b32 	%r154, %r151, %r152, 14;
	mov.b64 	%rd369, {%r154, %r153};
	shf.r.wrap.b32 	%r155, %r152, %r151, 18;
	shf.r.wrap.b32 	%r156, %r151, %r152, 18;
	mov.b64 	%rd370, {%r156, %r155};
	xor.b64  	%rd371, %rd369, %rd370;
	shf.l.wrap.b32 	%r157, %r151, %r152, 23;
	shf.l.wrap.b32 	%r158, %r152, %r151, 23;
	mov.b64 	%rd372, {%r158, %r157};
	xor.b64  	%rd373, %rd371, %rd372;
	xor.b64  	%rd374, %rd333, %rd309;
	and.b64  	%rd375, %rd357, %rd374;
	xor.b64  	%rd376, %rd375, %rd309;
	add.s64 	%rd377, %rd376, %rd295;
	add.s64 	%rd378, %rd377, %rd373;
	add.s64 	%rd379, %rd378, %rd1181;
	add.s64 	%rd380, %rd379, -6116909921290321640;
	add.s64 	%rd381, %rd380, %rd296;
	and.b64  	%rd382, %rd368, %rd344;
	or.b64  	%rd383, %rd368, %rd344;
	and.b64  	%rd384, %rd383, %rd320;
	or.b64  	%rd385, %rd384, %rd382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd368;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 28;
	shf.r.wrap.b32 	%r162, %r159, %r160, 28;
	mov.b64 	%rd386, {%r162, %r161};
	shf.l.wrap.b32 	%r163, %r159, %r160, 30;
	shf.l.wrap.b32 	%r164, %r160, %r159, 30;
	mov.b64 	%rd387, {%r164, %r163};
	xor.b64  	%rd388, %rd386, %rd387;
	shf.l.wrap.b32 	%r165, %r159, %r160, 25;
	shf.l.wrap.b32 	%r166, %r160, %r159, 25;
	mov.b64 	%rd389, {%r166, %r165};
	xor.b64  	%rd390, %rd388, %rd389;
	add.s64 	%rd391, %rd390, %rd385;
	add.s64 	%rd392, %rd391, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd381;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 14;
	shf.r.wrap.b32 	%r170, %r167, %r168, 14;
	mov.b64 	%rd393, {%r170, %r169};
	shf.r.wrap.b32 	%r171, %r168, %r167, 18;
	shf.r.wrap.b32 	%r172, %r167, %r168, 18;
	mov.b64 	%rd394, {%r172, %r171};
	xor.b64  	%rd395, %rd393, %rd394;
	shf.l.wrap.b32 	%r173, %r167, %r168, 23;
	shf.l.wrap.b32 	%r174, %r168, %r167, 23;
	mov.b64 	%rd396, {%r174, %r173};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd357, %rd333;
	and.b64  	%rd399, %rd381, %rd398;
	xor.b64  	%rd400, %rd399, %rd333;
	add.s64 	%rd401, %rd400, %rd309;
	add.s64 	%rd402, %rd401, %rd397;
	add.s64 	%rd403, %rd402, %rd1180;
	add.s64 	%rd404, %rd403, -2880145864133508542;
	add.s64 	%rd405, %rd404, %rd320;
	and.b64  	%rd406, %rd392, %rd368;
	or.b64  	%rd407, %rd392, %rd368;
	and.b64  	%rd408, %rd407, %rd344;
	or.b64  	%rd409, %rd408, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd392;
	}
	shf.r.wrap.b32 	%r177, %r176, %r175, 28;
	shf.r.wrap.b32 	%r178, %r175, %r176, 28;
	mov.b64 	%rd410, {%r178, %r177};
	shf.l.wrap.b32 	%r179, %r175, %r176, 30;
	shf.l.wrap.b32 	%r180, %r176, %r175, 30;
	mov.b64 	%rd411, {%r180, %r179};
	xor.b64  	%rd412, %rd410, %rd411;
	shf.l.wrap.b32 	%r181, %r175, %r176, 25;
	shf.l.wrap.b32 	%r182, %r176, %r175, 25;
	mov.b64 	%rd413, {%r182, %r181};
	xor.b64  	%rd414, %rd412, %rd413;
	add.s64 	%rd415, %rd414, %rd409;
	add.s64 	%rd416, %rd415, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd405;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 14;
	shf.r.wrap.b32 	%r186, %r183, %r184, 14;
	mov.b64 	%rd417, {%r186, %r185};
	shf.r.wrap.b32 	%r187, %r184, %r183, 18;
	shf.r.wrap.b32 	%r188, %r183, %r184, 18;
	mov.b64 	%rd418, {%r188, %r187};
	xor.b64  	%rd419, %rd417, %rd418;
	shf.l.wrap.b32 	%r189, %r183, %r184, 23;
	shf.l.wrap.b32 	%r190, %r184, %r183, 23;
	mov.b64 	%rd420, {%r190, %r189};
	xor.b64  	%rd421, %rd419, %rd420;
	xor.b64  	%rd422, %rd381, %rd357;
	and.b64  	%rd423, %rd405, %rd422;
	xor.b64  	%rd424, %rd423, %rd357;
	add.s64 	%rd425, %rd424, %rd333;
	add.s64 	%rd426, %rd425, %rd421;
	add.s64 	%rd427, %rd426, %rd1179;
	add.s64 	%rd428, %rd427, 1334009975649890238;
	add.s64 	%rd429, %rd428, %rd344;
	and.b64  	%rd430, %rd416, %rd392;
	or.b64  	%rd431, %rd416, %rd392;
	and.b64  	%rd432, %rd431, %rd368;
	or.b64  	%rd433, %rd432, %rd430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd416;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 28;
	shf.r.wrap.b32 	%r194, %r191, %r192, 28;
	mov.b64 	%rd434, {%r194, %r193};
	shf.l.wrap.b32 	%r195, %r191, %r192, 30;
	shf.l.wrap.b32 	%r196, %r192, %r191, 30;
	mov.b64 	%rd435, {%r196, %r195};
	xor.b64  	%rd436, %rd434, %rd435;
	shf.l.wrap.b32 	%r197, %r191, %r192, 25;
	shf.l.wrap.b32 	%r198, %r192, %r191, 25;
	mov.b64 	%rd437, {%r198, %r197};
	xor.b64  	%rd438, %rd436, %rd437;
	add.s64 	%rd439, %rd438, %rd433;
	add.s64 	%rd440, %rd439, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd429;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 14;
	shf.r.wrap.b32 	%r202, %r199, %r200, 14;
	mov.b64 	%rd441, {%r202, %r201};
	shf.r.wrap.b32 	%r203, %r200, %r199, 18;
	shf.r.wrap.b32 	%r204, %r199, %r200, 18;
	mov.b64 	%rd442, {%r204, %r203};
	xor.b64  	%rd443, %rd441, %rd442;
	shf.l.wrap.b32 	%r205, %r199, %r200, 23;
	shf.l.wrap.b32 	%r206, %r200, %r199, 23;
	mov.b64 	%rd444, {%r206, %r205};
	xor.b64  	%rd445, %rd443, %rd444;
	xor.b64  	%rd446, %rd405, %rd381;
	and.b64  	%rd447, %rd429, %rd446;
	xor.b64  	%rd448, %rd447, %rd381;
	add.s64 	%rd449, %rd448, %rd357;
	add.s64 	%rd450, %rd449, %rd445;
	add.s64 	%rd451, %rd450, %rd1178;
	add.s64 	%rd452, %rd451, 2608012711638119052;
	add.s64 	%rd453, %rd452, %rd368;
	and.b64  	%rd454, %rd440, %rd416;
	or.b64  	%rd455, %rd440, %rd416;
	and.b64  	%rd456, %rd455, %rd392;
	or.b64  	%rd457, %rd456, %rd454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r208}, %rd440;
	}
	shf.r.wrap.b32 	%r209, %r208, %r207, 28;
	shf.r.wrap.b32 	%r210, %r207, %r208, 28;
	mov.b64 	%rd458, {%r210, %r209};
	shf.l.wrap.b32 	%r211, %r207, %r208, 30;
	shf.l.wrap.b32 	%r212, %r208, %r207, 30;
	mov.b64 	%rd459, {%r212, %r211};
	xor.b64  	%rd460, %rd458, %rd459;
	shf.l.wrap.b32 	%r213, %r207, %r208, 25;
	shf.l.wrap.b32 	%r214, %r208, %r207, 25;
	mov.b64 	%rd461, {%r214, %r213};
	xor.b64  	%rd462, %rd460, %rd461;
	add.s64 	%rd463, %rd462, %rd457;
	add.s64 	%rd464, %rd463, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd453;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 14;
	shf.r.wrap.b32 	%r218, %r215, %r216, 14;
	mov.b64 	%rd465, {%r218, %r217};
	shf.r.wrap.b32 	%r219, %r216, %r215, 18;
	shf.r.wrap.b32 	%r220, %r215, %r216, 18;
	mov.b64 	%rd466, {%r220, %r219};
	xor.b64  	%rd467, %rd465, %rd466;
	shf.l.wrap.b32 	%r221, %r215, %r216, 23;
	shf.l.wrap.b32 	%r222, %r216, %r215, 23;
	mov.b64 	%rd468, {%r222, %r221};
	xor.b64  	%rd469, %rd467, %rd468;
	xor.b64  	%rd470, %rd429, %rd405;
	and.b64  	%rd471, %rd453, %rd470;
	xor.b64  	%rd472, %rd471, %rd405;
	add.s64 	%rd473, %rd472, %rd381;
	add.s64 	%rd474, %rd473, %rd469;
	add.s64 	%rd475, %rd474, %rd1177;
	add.s64 	%rd476, %rd475, 6128411473006802146;
	add.s64 	%rd477, %rd476, %rd392;
	and.b64  	%rd478, %rd464, %rd440;
	or.b64  	%rd479, %rd464, %rd440;
	and.b64  	%rd480, %rd479, %rd416;
	or.b64  	%rd481, %rd480, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd464;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 28;
	shf.r.wrap.b32 	%r226, %r223, %r224, 28;
	mov.b64 	%rd482, {%r226, %r225};
	shf.l.wrap.b32 	%r227, %r223, %r224, 30;
	shf.l.wrap.b32 	%r228, %r224, %r223, 30;
	mov.b64 	%rd483, {%r228, %r227};
	xor.b64  	%rd484, %rd482, %rd483;
	shf.l.wrap.b32 	%r229, %r223, %r224, 25;
	shf.l.wrap.b32 	%r230, %r224, %r223, 25;
	mov.b64 	%rd485, {%r230, %r229};
	xor.b64  	%rd486, %rd484, %rd485;
	add.s64 	%rd487, %rd486, %rd481;
	add.s64 	%rd488, %rd487, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r231,%dummy}, %rd477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd477;
	}
	shf.r.wrap.b32 	%r233, %r232, %r231, 14;
	shf.r.wrap.b32 	%r234, %r231, %r232, 14;
	mov.b64 	%rd489, {%r234, %r233};
	shf.r.wrap.b32 	%r235, %r232, %r231, 18;
	shf.r.wrap.b32 	%r236, %r231, %r232, 18;
	mov.b64 	%rd490, {%r236, %r235};
	xor.b64  	%rd491, %rd489, %rd490;
	shf.l.wrap.b32 	%r237, %r231, %r232, 23;
	shf.l.wrap.b32 	%r238, %r232, %r231, 23;
	mov.b64 	%rd492, {%r238, %r237};
	xor.b64  	%rd493, %rd491, %rd492;
	xor.b64  	%rd494, %rd453, %rd429;
	and.b64  	%rd495, %rd477, %rd494;
	xor.b64  	%rd496, %rd495, %rd429;
	add.s64 	%rd497, %rd496, %rd405;
	add.s64 	%rd498, %rd497, %rd493;
	add.s64 	%rd499, %rd498, %rd1176;
	add.s64 	%rd500, %rd499, 8268148722764581231;
	add.s64 	%rd1196, %rd500, %rd416;
	and.b64  	%rd501, %rd488, %rd464;
	or.b64  	%rd502, %rd488, %rd464;
	and.b64  	%rd503, %rd502, %rd440;
	or.b64  	%rd504, %rd503, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd488;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 28;
	shf.r.wrap.b32 	%r242, %r239, %r240, 28;
	mov.b64 	%rd505, {%r242, %r241};
	shf.l.wrap.b32 	%r243, %r239, %r240, 30;
	shf.l.wrap.b32 	%r244, %r240, %r239, 30;
	mov.b64 	%rd506, {%r244, %r243};
	xor.b64  	%rd507, %rd505, %rd506;
	shf.l.wrap.b32 	%r245, %r239, %r240, 25;
	shf.l.wrap.b32 	%r246, %r240, %r239, 25;
	mov.b64 	%rd508, {%r246, %r245};
	xor.b64  	%rd509, %rd507, %rd508;
	add.s64 	%rd510, %rd509, %rd504;
	add.s64 	%rd1192, %rd510, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd1196;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 14;
	shf.r.wrap.b32 	%r250, %r247, %r248, 14;
	mov.b64 	%rd511, {%r250, %r249};
	shf.r.wrap.b32 	%r251, %r248, %r247, 18;
	shf.r.wrap.b32 	%r252, %r247, %r248, 18;
	mov.b64 	%rd512, {%r252, %r251};
	xor.b64  	%rd513, %rd511, %rd512;
	shf.l.wrap.b32 	%r253, %r247, %r248, 23;
	shf.l.wrap.b32 	%r254, %r248, %r247, 23;
	mov.b64 	%rd514, {%r254, %r253};
	xor.b64  	%rd515, %rd513, %rd514;
	xor.b64  	%rd516, %rd477, %rd453;
	and.b64  	%rd517, %rd1196, %rd516;
	xor.b64  	%rd518, %rd517, %rd453;
	add.s64 	%rd519, %rd518, %rd429;
	add.s64 	%rd520, %rd519, %rd515;
	add.s64 	%rd521, %rd520, %rd1175;
	add.s64 	%rd522, %rd521, -9160688886553864527;
	add.s64 	%rd1195, %rd522, %rd440;
	and.b64  	%rd523, %rd1192, %rd488;
	or.b64  	%rd524, %rd1192, %rd488;
	and.b64  	%rd525, %rd524, %rd464;
	or.b64  	%rd526, %rd525, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd1192;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 28;
	shf.r.wrap.b32 	%r258, %r255, %r256, 28;
	mov.b64 	%rd527, {%r258, %r257};
	shf.l.wrap.b32 	%r259, %r255, %r256, 30;
	shf.l.wrap.b32 	%r260, %r256, %r255, 30;
	mov.b64 	%rd528, {%r260, %r259};
	xor.b64  	%rd529, %rd527, %rd528;
	shf.l.wrap.b32 	%r261, %r255, %r256, 25;
	shf.l.wrap.b32 	%r262, %r256, %r255, 25;
	mov.b64 	%rd530, {%r262, %r261};
	xor.b64  	%rd531, %rd529, %rd530;
	add.s64 	%rd532, %rd531, %rd526;
	add.s64 	%rd1191, %rd532, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r263,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd1195;
	}
	shf.r.wrap.b32 	%r265, %r264, %r263, 14;
	shf.r.wrap.b32 	%r266, %r263, %r264, 14;
	mov.b64 	%rd533, {%r266, %r265};
	shf.r.wrap.b32 	%r267, %r264, %r263, 18;
	shf.r.wrap.b32 	%r268, %r263, %r264, 18;
	mov.b64 	%rd534, {%r268, %r267};
	xor.b64  	%rd535, %rd533, %rd534;
	shf.l.wrap.b32 	%r269, %r263, %r264, 23;
	shf.l.wrap.b32 	%r270, %r264, %r263, 23;
	mov.b64 	%rd536, {%r270, %r269};
	xor.b64  	%rd537, %rd535, %rd536;
	xor.b64  	%rd538, %rd1196, %rd477;
	and.b64  	%rd539, %rd1195, %rd538;
	xor.b64  	%rd540, %rd539, %rd477;
	add.s64 	%rd541, %rd540, %rd453;
	add.s64 	%rd542, %rd541, %rd537;
	ld.local.u64 	%rd1174, [%rd11+112];
	add.s64 	%rd543, %rd542, %rd1174;
	add.s64 	%rd544, %rd543, -7215885187991268811;
	add.s64 	%rd1194, %rd544, %rd464;
	and.b64  	%rd545, %rd1191, %rd1192;
	or.b64  	%rd546, %rd1191, %rd1192;
	and.b64  	%rd547, %rd546, %rd488;
	or.b64  	%rd548, %rd547, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd1191;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 28;
	shf.r.wrap.b32 	%r274, %r271, %r272, 28;
	mov.b64 	%rd549, {%r274, %r273};
	shf.l.wrap.b32 	%r275, %r271, %r272, 30;
	shf.l.wrap.b32 	%r276, %r272, %r271, 30;
	mov.b64 	%rd550, {%r276, %r275};
	xor.b64  	%rd551, %rd549, %rd550;
	shf.l.wrap.b32 	%r277, %r271, %r272, 25;
	shf.l.wrap.b32 	%r278, %r272, %r271, 25;
	mov.b64 	%rd552, {%r278, %r277};
	xor.b64  	%rd553, %rd551, %rd552;
	add.s64 	%rd554, %rd553, %rd548;
	add.s64 	%rd1190, %rd554, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r279,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd1194;
	}
	shf.r.wrap.b32 	%r281, %r280, %r279, 14;
	shf.r.wrap.b32 	%r282, %r279, %r280, 14;
	mov.b64 	%rd555, {%r282, %r281};
	shf.r.wrap.b32 	%r283, %r280, %r279, 18;
	shf.r.wrap.b32 	%r284, %r279, %r280, 18;
	mov.b64 	%rd556, {%r284, %r283};
	xor.b64  	%rd557, %rd555, %rd556;
	shf.l.wrap.b32 	%r285, %r279, %r280, 23;
	shf.l.wrap.b32 	%r286, %r280, %r279, 23;
	mov.b64 	%rd558, {%r286, %r285};
	xor.b64  	%rd559, %rd557, %rd558;
	xor.b64  	%rd560, %rd1195, %rd1196;
	and.b64  	%rd561, %rd1194, %rd560;
	xor.b64  	%rd562, %rd561, %rd1196;
	add.s64 	%rd563, %rd562, %rd477;
	add.s64 	%rd564, %rd563, %rd559;
	add.s64 	%rd565, %rd564, %rd1173;
	add.s64 	%rd566, %rd565, -4495734319001033068;
	add.s64 	%rd1193, %rd566, %rd488;
	and.b64  	%rd567, %rd1190, %rd1191;
	or.b64  	%rd568, %rd1190, %rd1191;
	and.b64  	%rd569, %rd568, %rd1192;
	or.b64  	%rd570, %rd569, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r287,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd1190;
	}
	shf.r.wrap.b32 	%r289, %r288, %r287, 28;
	shf.r.wrap.b32 	%r290, %r287, %r288, 28;
	mov.b64 	%rd571, {%r290, %r289};
	shf.l.wrap.b32 	%r291, %r287, %r288, 30;
	shf.l.wrap.b32 	%r292, %r288, %r287, 30;
	mov.b64 	%rd572, {%r292, %r291};
	xor.b64  	%rd573, %rd571, %rd572;
	shf.l.wrap.b32 	%r293, %r287, %r288, 25;
	shf.l.wrap.b32 	%r294, %r288, %r287, 25;
	mov.b64 	%rd574, {%r294, %r293};
	xor.b64  	%rd575, %rd573, %rd574;
	add.s64 	%rd576, %rd575, %rd570;
	add.s64 	%rd1189, %rd576, %rd566;
	mov.u64 	%rd1172, k;

$L__BB3_6:
	.pragma "nounroll";
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r295}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r296,%dummy}, %rd1174;
	}
	shf.l.wrap.b32 	%r297, %r296, %r295, 3;
	shf.l.wrap.b32 	%r298, %r295, %r296, 3;
	mov.b64 	%rd577, {%r298, %r297};
	shf.r.wrap.b32 	%r299, %r295, %r296, 19;
	shf.r.wrap.b32 	%r300, %r296, %r295, 19;
	mov.b64 	%rd578, {%r300, %r299};
	xor.b64  	%rd579, %rd578, %rd577;
	shr.u64 	%rd580, %rd1174, 6;
	xor.b64  	%rd581, %rd579, %rd580;
	add.s64 	%rd582, %rd1179, %rd1188;
	add.s64 	%rd583, %rd582, %rd581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd1187;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 8;
	shf.r.wrap.b32 	%r304, %r301, %r302, 8;
	mov.b64 	%rd584, {%r304, %r303};
	shf.r.wrap.b32 	%r305, %r302, %r301, 1;
	shf.r.wrap.b32 	%r306, %r301, %r302, 1;
	mov.b64 	%rd585, {%r306, %r305};
	xor.b64  	%rd586, %rd585, %rd584;
	shr.u64 	%rd587, %rd1187, 7;
	xor.b64  	%rd588, %rd586, %rd587;
	add.s64 	%rd1188, %rd583, %rd588;
	add.s64 	%rd101, %rd1172, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd1193;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 18;
	shf.r.wrap.b32 	%r310, %r307, %r308, 18;
	mov.b64 	%rd589, {%r310, %r309};
	shf.r.wrap.b32 	%r311, %r308, %r307, 14;
	shf.r.wrap.b32 	%r312, %r307, %r308, 14;
	mov.b64 	%rd590, {%r312, %r311};
	xor.b64  	%rd591, %rd590, %rd589;
	shf.l.wrap.b32 	%r313, %r307, %r308, 23;
	shf.l.wrap.b32 	%r314, %r308, %r307, 23;
	mov.b64 	%rd592, {%r314, %r313};
	xor.b64  	%rd593, %rd591, %rd592;
	xor.b64  	%rd594, %rd1194, %rd1195;
	and.b64  	%rd595, %rd1193, %rd594;
	xor.b64  	%rd596, %rd595, %rd1195;
	add.s64 	%rd597, %rd596, %rd1196;
	add.s64 	%rd598, %rd597, %rd593;
	ld.const.u64 	%rd599, [%rd1172+128];
	add.s64 	%rd600, %rd598, %rd599;
	add.s64 	%rd601, %rd600, %rd1188;
	add.s64 	%rd602, %rd601, %rd1192;
	or.b64  	%rd603, %rd1189, %rd1190;
	and.b64  	%rd604, %rd603, %rd1191;
	and.b64  	%rd605, %rd1189, %rd1190;
	or.b64  	%rd606, %rd604, %rd605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r315}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r316,%dummy}, %rd1189;
	}
	shf.l.wrap.b32 	%r317, %r316, %r315, 30;
	shf.l.wrap.b32 	%r318, %r315, %r316, 30;
	mov.b64 	%rd607, {%r318, %r317};
	shf.r.wrap.b32 	%r319, %r315, %r316, 28;
	shf.r.wrap.b32 	%r320, %r316, %r315, 28;
	mov.b64 	%rd608, {%r320, %r319};
	xor.b64  	%rd609, %rd608, %rd607;
	shf.l.wrap.b32 	%r321, %r316, %r315, 25;
	shf.l.wrap.b32 	%r322, %r315, %r316, 25;
	mov.b64 	%rd610, {%r322, %r321};
	xor.b64  	%rd611, %rd609, %rd610;
	add.s64 	%rd612, %rd611, %rd606;
	add.s64 	%rd613, %rd612, %rd601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd1173;
	}
	shf.l.wrap.b32 	%r325, %r324, %r323, 3;
	shf.l.wrap.b32 	%r326, %r323, %r324, 3;
	mov.b64 	%rd614, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r323, %r324, 19;
	shf.r.wrap.b32 	%r328, %r324, %r323, 19;
	mov.b64 	%rd615, {%r328, %r327};
	xor.b64  	%rd616, %rd615, %rd614;
	shr.u64 	%rd617, %rd1173, 6;
	xor.b64  	%rd618, %rd616, %rd617;
	add.s64 	%rd619, %rd1178, %rd1187;
	add.s64 	%rd620, %rd619, %rd618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd1186;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 8;
	shf.r.wrap.b32 	%r332, %r329, %r330, 8;
	mov.b64 	%rd621, {%r332, %r331};
	shf.r.wrap.b32 	%r333, %r330, %r329, 1;
	shf.r.wrap.b32 	%r334, %r329, %r330, 1;
	mov.b64 	%rd622, {%r334, %r333};
	xor.b64  	%rd623, %rd622, %rd621;
	shr.u64 	%rd624, %rd1186, 7;
	xor.b64  	%rd625, %rd623, %rd624;
	add.s64 	%rd1187, %rd620, %rd625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd602;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 14;
	shf.r.wrap.b32 	%r338, %r335, %r336, 14;
	mov.b64 	%rd626, {%r338, %r337};
	shf.r.wrap.b32 	%r339, %r336, %r335, 18;
	shf.r.wrap.b32 	%r340, %r335, %r336, 18;
	mov.b64 	%rd627, {%r340, %r339};
	xor.b64  	%rd628, %rd626, %rd627;
	shf.l.wrap.b32 	%r341, %r335, %r336, 23;
	shf.l.wrap.b32 	%r342, %r336, %r335, 23;
	mov.b64 	%rd629, {%r342, %r341};
	xor.b64  	%rd630, %rd628, %rd629;
	xor.b64  	%rd631, %rd1193, %rd1194;
	and.b64  	%rd632, %rd602, %rd631;
	xor.b64  	%rd633, %rd632, %rd1194;
	add.s64 	%rd634, %rd633, %rd1195;
	add.s64 	%rd635, %rd634, %rd630;
	ld.const.u64 	%rd636, [%rd1172+136];
	add.s64 	%rd637, %rd635, %rd636;
	add.s64 	%rd638, %rd637, %rd1187;
	add.s64 	%rd639, %rd638, %rd1191;
	and.b64  	%rd640, %rd613, %rd1189;
	or.b64  	%rd641, %rd613, %rd1189;
	and.b64  	%rd642, %rd641, %rd1190;
	or.b64  	%rd643, %rd642, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd613;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 28;
	shf.r.wrap.b32 	%r346, %r343, %r344, 28;
	mov.b64 	%rd644, {%r346, %r345};
	shf.l.wrap.b32 	%r347, %r343, %r344, 30;
	shf.l.wrap.b32 	%r348, %r344, %r343, 30;
	mov.b64 	%rd645, {%r348, %r347};
	xor.b64  	%rd646, %rd644, %rd645;
	shf.l.wrap.b32 	%r349, %r343, %r344, 25;
	shf.l.wrap.b32 	%r350, %r344, %r343, 25;
	mov.b64 	%rd647, {%r350, %r349};
	xor.b64  	%rd648, %rd646, %rd647;
	add.s64 	%rd649, %rd648, %rd643;
	add.s64 	%rd650, %rd649, %rd638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd1188;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 19;
	shf.r.wrap.b32 	%r354, %r351, %r352, 19;
	mov.b64 	%rd651, {%r354, %r353};
	shf.l.wrap.b32 	%r355, %r351, %r352, 3;
	shf.l.wrap.b32 	%r356, %r352, %r351, 3;
	mov.b64 	%rd652, {%r356, %r355};
	xor.b64  	%rd653, %rd651, %rd652;
	shr.u64 	%rd654, %rd1188, 6;
	xor.b64  	%rd655, %rd653, %rd654;
	add.s64 	%rd656, %rd1177, %rd1186;
	add.s64 	%rd657, %rd656, %rd655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd1185;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 8;
	shf.r.wrap.b32 	%r360, %r357, %r358, 8;
	mov.b64 	%rd658, {%r360, %r359};
	shf.r.wrap.b32 	%r361, %r358, %r357, 1;
	shf.r.wrap.b32 	%r362, %r357, %r358, 1;
	mov.b64 	%rd659, {%r362, %r361};
	xor.b64  	%rd660, %rd659, %rd658;
	shr.u64 	%rd661, %rd1185, 7;
	xor.b64  	%rd662, %rd660, %rd661;
	add.s64 	%rd1186, %rd657, %rd662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd639;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 14;
	shf.r.wrap.b32 	%r366, %r363, %r364, 14;
	mov.b64 	%rd663, {%r366, %r365};
	shf.r.wrap.b32 	%r367, %r364, %r363, 18;
	shf.r.wrap.b32 	%r368, %r363, %r364, 18;
	mov.b64 	%rd664, {%r368, %r367};
	xor.b64  	%rd665, %rd663, %rd664;
	shf.l.wrap.b32 	%r369, %r363, %r364, 23;
	shf.l.wrap.b32 	%r370, %r364, %r363, 23;
	mov.b64 	%rd666, {%r370, %r369};
	xor.b64  	%rd667, %rd665, %rd666;
	xor.b64  	%rd668, %rd602, %rd1193;
	and.b64  	%rd669, %rd639, %rd668;
	xor.b64  	%rd670, %rd669, %rd1193;
	add.s64 	%rd671, %rd670, %rd1194;
	add.s64 	%rd672, %rd671, %rd667;
	ld.const.u64 	%rd673, [%rd1172+144];
	add.s64 	%rd674, %rd672, %rd673;
	add.s64 	%rd675, %rd674, %rd1186;
	add.s64 	%rd676, %rd675, %rd1190;
	and.b64  	%rd677, %rd650, %rd613;
	or.b64  	%rd678, %rd650, %rd613;
	and.b64  	%rd679, %rd678, %rd1189;
	or.b64  	%rd680, %rd679, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd650;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 28;
	shf.r.wrap.b32 	%r374, %r371, %r372, 28;
	mov.b64 	%rd681, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 30;
	shf.l.wrap.b32 	%r376, %r372, %r371, 30;
	mov.b64 	%rd682, {%r376, %r375};
	xor.b64  	%rd683, %rd681, %rd682;
	shf.l.wrap.b32 	%r377, %r371, %r372, 25;
	shf.l.wrap.b32 	%r378, %r372, %r371, 25;
	mov.b64 	%rd684, {%r378, %r377};
	xor.b64  	%rd685, %rd683, %rd684;
	add.s64 	%rd686, %rd685, %rd680;
	add.s64 	%rd687, %rd686, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd1187;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd688, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd689, {%r384, %r383};
	xor.b64  	%rd690, %rd688, %rd689;
	shr.u64 	%rd691, %rd1187, 6;
	xor.b64  	%rd692, %rd690, %rd691;
	add.s64 	%rd693, %rd1176, %rd1185;
	add.s64 	%rd694, %rd693, %rd692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd1184;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 8;
	shf.r.wrap.b32 	%r388, %r385, %r386, 8;
	mov.b64 	%rd695, {%r388, %r387};
	shf.r.wrap.b32 	%r389, %r386, %r385, 1;
	shf.r.wrap.b32 	%r390, %r385, %r386, 1;
	mov.b64 	%rd696, {%r390, %r389};
	xor.b64  	%rd697, %rd696, %rd695;
	shr.u64 	%rd698, %rd1184, 7;
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd1185, %rd694, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd676;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 14;
	shf.r.wrap.b32 	%r394, %r391, %r392, 14;
	mov.b64 	%rd700, {%r394, %r393};
	shf.r.wrap.b32 	%r395, %r392, %r391, 18;
	shf.r.wrap.b32 	%r396, %r391, %r392, 18;
	mov.b64 	%rd701, {%r396, %r395};
	xor.b64  	%rd702, %rd700, %rd701;
	shf.l.wrap.b32 	%r397, %r391, %r392, 23;
	shf.l.wrap.b32 	%r398, %r392, %r391, 23;
	mov.b64 	%rd703, {%r398, %r397};
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd639, %rd602;
	and.b64  	%rd706, %rd676, %rd705;
	xor.b64  	%rd707, %rd706, %rd602;
	add.s64 	%rd708, %rd707, %rd1193;
	add.s64 	%rd709, %rd708, %rd704;
	ld.const.u64 	%rd710, [%rd1172+152];
	add.s64 	%rd711, %rd709, %rd710;
	add.s64 	%rd712, %rd711, %rd1185;
	add.s64 	%rd713, %rd712, %rd1189;
	and.b64  	%rd714, %rd687, %rd650;
	or.b64  	%rd715, %rd687, %rd650;
	and.b64  	%rd716, %rd715, %rd613;
	or.b64  	%rd717, %rd716, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd687;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 28;
	shf.r.wrap.b32 	%r402, %r399, %r400, 28;
	mov.b64 	%rd718, {%r402, %r401};
	shf.l.wrap.b32 	%r403, %r399, %r400, 30;
	shf.l.wrap.b32 	%r404, %r400, %r399, 30;
	mov.b64 	%rd719, {%r404, %r403};
	xor.b64  	%rd720, %rd718, %rd719;
	shf.l.wrap.b32 	%r405, %r399, %r400, 25;
	shf.l.wrap.b32 	%r406, %r400, %r399, 25;
	mov.b64 	%rd721, {%r406, %r405};
	xor.b64  	%rd722, %rd720, %rd721;
	add.s64 	%rd723, %rd722, %rd717;
	add.s64 	%rd724, %rd723, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd1186;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 19;
	shf.r.wrap.b32 	%r410, %r407, %r408, 19;
	mov.b64 	%rd725, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 3;
	shf.l.wrap.b32 	%r412, %r408, %r407, 3;
	mov.b64 	%rd726, {%r412, %r411};
	xor.b64  	%rd727, %rd725, %rd726;
	shr.u64 	%rd728, %rd1186, 6;
	xor.b64  	%rd729, %rd727, %rd728;
	add.s64 	%rd730, %rd1175, %rd1184;
	add.s64 	%rd731, %rd730, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd1183;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 8;
	shf.r.wrap.b32 	%r416, %r413, %r414, 8;
	mov.b64 	%rd732, {%r416, %r415};
	shf.r.wrap.b32 	%r417, %r414, %r413, 1;
	shf.r.wrap.b32 	%r418, %r413, %r414, 1;
	mov.b64 	%rd733, {%r418, %r417};
	xor.b64  	%rd734, %rd733, %rd732;
	shr.u64 	%rd735, %rd1183, 7;
	xor.b64  	%rd736, %rd734, %rd735;
	add.s64 	%rd1184, %rd731, %rd736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd713;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 14;
	shf.r.wrap.b32 	%r422, %r419, %r420, 14;
	mov.b64 	%rd737, {%r422, %r421};
	shf.r.wrap.b32 	%r423, %r420, %r419, 18;
	shf.r.wrap.b32 	%r424, %r419, %r420, 18;
	mov.b64 	%rd738, {%r424, %r423};
	xor.b64  	%rd739, %rd737, %rd738;
	shf.l.wrap.b32 	%r425, %r419, %r420, 23;
	shf.l.wrap.b32 	%r426, %r420, %r419, 23;
	mov.b64 	%rd740, {%r426, %r425};
	xor.b64  	%rd741, %rd739, %rd740;
	xor.b64  	%rd742, %rd676, %rd639;
	and.b64  	%rd743, %rd713, %rd742;
	xor.b64  	%rd744, %rd743, %rd639;
	add.s64 	%rd745, %rd744, %rd602;
	add.s64 	%rd746, %rd745, %rd741;
	ld.const.u64 	%rd747, [%rd1172+160];
	add.s64 	%rd748, %rd746, %rd747;
	add.s64 	%rd749, %rd748, %rd1184;
	add.s64 	%rd750, %rd749, %rd613;
	and.b64  	%rd751, %rd724, %rd687;
	or.b64  	%rd752, %rd724, %rd687;
	and.b64  	%rd753, %rd752, %rd650;
	or.b64  	%rd754, %rd753, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd724;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 28;
	shf.r.wrap.b32 	%r430, %r427, %r428, 28;
	mov.b64 	%rd755, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 30;
	shf.l.wrap.b32 	%r432, %r428, %r427, 30;
	mov.b64 	%rd756, {%r432, %r431};
	xor.b64  	%rd757, %rd755, %rd756;
	shf.l.wrap.b32 	%r433, %r427, %r428, 25;
	shf.l.wrap.b32 	%r434, %r428, %r427, 25;
	mov.b64 	%rd758, {%r434, %r433};
	xor.b64  	%rd759, %rd757, %rd758;
	add.s64 	%rd760, %rd759, %rd754;
	add.s64 	%rd761, %rd760, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd1185;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 19;
	shf.r.wrap.b32 	%r438, %r435, %r436, 19;
	mov.b64 	%rd762, {%r438, %r437};
	shf.l.wrap.b32 	%r439, %r435, %r436, 3;
	shf.l.wrap.b32 	%r440, %r436, %r435, 3;
	mov.b64 	%rd763, {%r440, %r439};
	xor.b64  	%rd764, %rd762, %rd763;
	shr.u64 	%rd765, %rd1185, 6;
	xor.b64  	%rd766, %rd764, %rd765;
	add.s64 	%rd767, %rd1174, %rd1183;
	add.s64 	%rd768, %rd767, %rd766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd1182;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 8;
	shf.r.wrap.b32 	%r444, %r441, %r442, 8;
	mov.b64 	%rd769, {%r444, %r443};
	shf.r.wrap.b32 	%r445, %r442, %r441, 1;
	shf.r.wrap.b32 	%r446, %r441, %r442, 1;
	mov.b64 	%rd770, {%r446, %r445};
	xor.b64  	%rd771, %rd770, %rd769;
	shr.u64 	%rd772, %rd1182, 7;
	xor.b64  	%rd773, %rd771, %rd772;
	add.s64 	%rd1183, %rd768, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd750;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 14;
	shf.r.wrap.b32 	%r450, %r447, %r448, 14;
	mov.b64 	%rd774, {%r450, %r449};
	shf.r.wrap.b32 	%r451, %r448, %r447, 18;
	shf.r.wrap.b32 	%r452, %r447, %r448, 18;
	mov.b64 	%rd775, {%r452, %r451};
	xor.b64  	%rd776, %rd774, %rd775;
	shf.l.wrap.b32 	%r453, %r447, %r448, 23;
	shf.l.wrap.b32 	%r454, %r448, %r447, 23;
	mov.b64 	%rd777, {%r454, %r453};
	xor.b64  	%rd778, %rd776, %rd777;
	xor.b64  	%rd779, %rd713, %rd676;
	and.b64  	%rd780, %rd750, %rd779;
	xor.b64  	%rd781, %rd780, %rd676;
	add.s64 	%rd782, %rd781, %rd639;
	add.s64 	%rd783, %rd782, %rd778;
	ld.const.u64 	%rd784, [%rd1172+168];
	add.s64 	%rd785, %rd783, %rd784;
	add.s64 	%rd786, %rd785, %rd1183;
	add.s64 	%rd787, %rd786, %rd650;
	and.b64  	%rd788, %rd761, %rd724;
	or.b64  	%rd789, %rd761, %rd724;
	and.b64  	%rd790, %rd789, %rd687;
	or.b64  	%rd791, %rd790, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd761;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 28;
	shf.r.wrap.b32 	%r458, %r455, %r456, 28;
	mov.b64 	%rd792, {%r458, %r457};
	shf.l.wrap.b32 	%r459, %r455, %r456, 30;
	shf.l.wrap.b32 	%r460, %r456, %r455, 30;
	mov.b64 	%rd793, {%r460, %r459};
	xor.b64  	%rd794, %rd792, %rd793;
	shf.l.wrap.b32 	%r461, %r455, %r456, 25;
	shf.l.wrap.b32 	%r462, %r456, %r455, 25;
	mov.b64 	%rd795, {%r462, %r461};
	xor.b64  	%rd796, %rd794, %rd795;
	add.s64 	%rd797, %rd796, %rd791;
	add.s64 	%rd798, %rd797, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd1184;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 19;
	shf.r.wrap.b32 	%r466, %r463, %r464, 19;
	mov.b64 	%rd799, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 3;
	shf.l.wrap.b32 	%r468, %r464, %r463, 3;
	mov.b64 	%rd800, {%r468, %r467};
	xor.b64  	%rd801, %rd799, %rd800;
	shr.u64 	%rd802, %rd1184, 6;
	xor.b64  	%rd803, %rd801, %rd802;
	add.s64 	%rd804, %rd1173, %rd1182;
	add.s64 	%rd805, %rd804, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd1181;
	}
	shf.r.wrap.b32 	%r471, %r470, %r469, 8;
	shf.r.wrap.b32 	%r472, %r469, %r470, 8;
	mov.b64 	%rd806, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r470, %r469, 1;
	shf.r.wrap.b32 	%r474, %r469, %r470, 1;
	mov.b64 	%rd807, {%r474, %r473};
	xor.b64  	%rd808, %rd807, %rd806;
	shr.u64 	%rd809, %rd1181, 7;
	xor.b64  	%rd810, %rd808, %rd809;
	add.s64 	%rd1182, %rd805, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd787;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 14;
	shf.r.wrap.b32 	%r478, %r475, %r476, 14;
	mov.b64 	%rd811, {%r478, %r477};
	shf.r.wrap.b32 	%r479, %r476, %r475, 18;
	shf.r.wrap.b32 	%r480, %r475, %r476, 18;
	mov.b64 	%rd812, {%r480, %r479};
	xor.b64  	%rd813, %rd811, %rd812;
	shf.l.wrap.b32 	%r481, %r475, %r476, 23;
	shf.l.wrap.b32 	%r482, %r476, %r475, 23;
	mov.b64 	%rd814, {%r482, %r481};
	xor.b64  	%rd815, %rd813, %rd814;
	xor.b64  	%rd816, %rd750, %rd713;
	and.b64  	%rd817, %rd787, %rd816;
	xor.b64  	%rd818, %rd817, %rd713;
	add.s64 	%rd819, %rd818, %rd676;
	add.s64 	%rd820, %rd819, %rd815;
	ld.const.u64 	%rd821, [%rd1172+176];
	add.s64 	%rd822, %rd820, %rd821;
	add.s64 	%rd823, %rd822, %rd1182;
	add.s64 	%rd824, %rd823, %rd687;
	and.b64  	%rd825, %rd798, %rd761;
	or.b64  	%rd826, %rd798, %rd761;
	and.b64  	%rd827, %rd826, %rd724;
	or.b64  	%rd828, %rd827, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd798;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 28;
	shf.r.wrap.b32 	%r486, %r483, %r484, 28;
	mov.b64 	%rd829, {%r486, %r485};
	shf.l.wrap.b32 	%r487, %r483, %r484, 30;
	shf.l.wrap.b32 	%r488, %r484, %r483, 30;
	mov.b64 	%rd830, {%r488, %r487};
	xor.b64  	%rd831, %rd829, %rd830;
	shf.l.wrap.b32 	%r489, %r483, %r484, 25;
	shf.l.wrap.b32 	%r490, %r484, %r483, 25;
	mov.b64 	%rd832, {%r490, %r489};
	xor.b64  	%rd833, %rd831, %rd832;
	add.s64 	%rd834, %rd833, %rd828;
	add.s64 	%rd835, %rd834, %rd823;
	add.s64 	%rd836, %rd1188, %rd1181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd1183;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 19;
	shf.r.wrap.b32 	%r494, %r491, %r492, 19;
	mov.b64 	%rd837, {%r494, %r493};
	shf.l.wrap.b32 	%r495, %r491, %r492, 3;
	shf.l.wrap.b32 	%r496, %r492, %r491, 3;
	mov.b64 	%rd838, {%r496, %r495};
	xor.b64  	%rd839, %rd837, %rd838;
	shr.u64 	%rd840, %rd1183, 6;
	xor.b64  	%rd841, %rd839, %rd840;
	add.s64 	%rd842, %rd836, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd1180;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 8;
	shf.r.wrap.b32 	%r500, %r497, %r498, 8;
	mov.b64 	%rd843, {%r500, %r499};
	shf.r.wrap.b32 	%r501, %r498, %r497, 1;
	shf.r.wrap.b32 	%r502, %r497, %r498, 1;
	mov.b64 	%rd844, {%r502, %r501};
	xor.b64  	%rd845, %rd844, %rd843;
	shr.u64 	%rd846, %rd1180, 7;
	xor.b64  	%rd847, %rd845, %rd846;
	add.s64 	%rd1181, %rd842, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd824;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 14;
	shf.r.wrap.b32 	%r506, %r503, %r504, 14;
	mov.b64 	%rd848, {%r506, %r505};
	shf.r.wrap.b32 	%r507, %r504, %r503, 18;
	shf.r.wrap.b32 	%r508, %r503, %r504, 18;
	mov.b64 	%rd849, {%r508, %r507};
	xor.b64  	%rd850, %rd848, %rd849;
	shf.l.wrap.b32 	%r509, %r503, %r504, 23;
	shf.l.wrap.b32 	%r510, %r504, %r503, 23;
	mov.b64 	%rd851, {%r510, %r509};
	xor.b64  	%rd852, %rd850, %rd851;
	xor.b64  	%rd853, %rd787, %rd750;
	and.b64  	%rd854, %rd824, %rd853;
	xor.b64  	%rd855, %rd854, %rd750;
	add.s64 	%rd856, %rd855, %rd713;
	add.s64 	%rd857, %rd856, %rd852;
	ld.const.u64 	%rd858, [%rd1172+184];
	add.s64 	%rd859, %rd857, %rd858;
	add.s64 	%rd860, %rd859, %rd1181;
	add.s64 	%rd861, %rd860, %rd724;
	and.b64  	%rd862, %rd835, %rd798;
	or.b64  	%rd863, %rd835, %rd798;
	and.b64  	%rd864, %rd863, %rd761;
	or.b64  	%rd865, %rd864, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd835;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 28;
	shf.r.wrap.b32 	%r514, %r511, %r512, 28;
	mov.b64 	%rd866, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 30;
	shf.l.wrap.b32 	%r516, %r512, %r511, 30;
	mov.b64 	%rd867, {%r516, %r515};
	xor.b64  	%rd868, %rd866, %rd867;
	shf.l.wrap.b32 	%r517, %r511, %r512, 25;
	shf.l.wrap.b32 	%r518, %r512, %r511, 25;
	mov.b64 	%rd869, {%r518, %r517};
	xor.b64  	%rd870, %rd868, %rd869;
	add.s64 	%rd871, %rd870, %rd865;
	add.s64 	%rd872, %rd871, %rd860;
	add.s64 	%rd873, %rd1187, %rd1180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd1182;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 19;
	shf.r.wrap.b32 	%r522, %r519, %r520, 19;
	mov.b64 	%rd874, {%r522, %r521};
	shf.l.wrap.b32 	%r523, %r519, %r520, 3;
	shf.l.wrap.b32 	%r524, %r520, %r519, 3;
	mov.b64 	%rd875, {%r524, %r523};
	xor.b64  	%rd876, %rd874, %rd875;
	shr.u64 	%rd877, %rd1182, 6;
	xor.b64  	%rd878, %rd876, %rd877;
	add.s64 	%rd879, %rd873, %rd878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd1179;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 8;
	shf.r.wrap.b32 	%r528, %r525, %r526, 8;
	mov.b64 	%rd880, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 1;
	shf.r.wrap.b32 	%r530, %r525, %r526, 1;
	mov.b64 	%rd881, {%r530, %r529};
	xor.b64  	%rd882, %rd881, %rd880;
	shr.u64 	%rd883, %rd1179, 7;
	xor.b64  	%rd884, %rd882, %rd883;
	add.s64 	%rd1180, %rd879, %rd884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd861;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 14;
	shf.r.wrap.b32 	%r534, %r531, %r532, 14;
	mov.b64 	%rd885, {%r534, %r533};
	shf.r.wrap.b32 	%r535, %r532, %r531, 18;
	shf.r.wrap.b32 	%r536, %r531, %r532, 18;
	mov.b64 	%rd886, {%r536, %r535};
	xor.b64  	%rd887, %rd885, %rd886;
	shf.l.wrap.b32 	%r537, %r531, %r532, 23;
	shf.l.wrap.b32 	%r538, %r532, %r531, 23;
	mov.b64 	%rd888, {%r538, %r537};
	xor.b64  	%rd889, %rd887, %rd888;
	xor.b64  	%rd890, %rd824, %rd787;
	and.b64  	%rd891, %rd861, %rd890;
	xor.b64  	%rd892, %rd891, %rd787;
	add.s64 	%rd893, %rd892, %rd750;
	add.s64 	%rd894, %rd893, %rd889;
	ld.const.u64 	%rd895, [%rd1172+192];
	add.s64 	%rd896, %rd894, %rd895;
	add.s64 	%rd897, %rd896, %rd1180;
	add.s64 	%rd898, %rd897, %rd761;
	and.b64  	%rd899, %rd872, %rd835;
	or.b64  	%rd900, %rd872, %rd835;
	and.b64  	%rd901, %rd900, %rd798;
	or.b64  	%rd902, %rd901, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd872;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 28;
	shf.r.wrap.b32 	%r542, %r539, %r540, 28;
	mov.b64 	%rd903, {%r542, %r541};
	shf.l.wrap.b32 	%r543, %r539, %r540, 30;
	shf.l.wrap.b32 	%r544, %r540, %r539, 30;
	mov.b64 	%rd904, {%r544, %r543};
	xor.b64  	%rd905, %rd903, %rd904;
	shf.l.wrap.b32 	%r545, %r539, %r540, 25;
	shf.l.wrap.b32 	%r546, %r540, %r539, 25;
	mov.b64 	%rd906, {%r546, %r545};
	xor.b64  	%rd907, %rd905, %rd906;
	add.s64 	%rd908, %rd907, %rd902;
	add.s64 	%rd909, %rd908, %rd897;
	add.s64 	%rd910, %rd1186, %rd1179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd1181;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 19;
	shf.r.wrap.b32 	%r550, %r547, %r548, 19;
	mov.b64 	%rd911, {%r550, %r549};
	shf.l.wrap.b32 	%r551, %r547, %r548, 3;
	shf.l.wrap.b32 	%r552, %r548, %r547, 3;
	mov.b64 	%rd912, {%r552, %r551};
	xor.b64  	%rd913, %rd911, %rd912;
	shr.u64 	%rd914, %rd1181, 6;
	xor.b64  	%rd915, %rd913, %rd914;
	add.s64 	%rd916, %rd910, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd1178;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 8;
	shf.r.wrap.b32 	%r556, %r553, %r554, 8;
	mov.b64 	%rd917, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 1;
	shf.r.wrap.b32 	%r558, %r553, %r554, 1;
	mov.b64 	%rd918, {%r558, %r557};
	xor.b64  	%rd919, %rd918, %rd917;
	shr.u64 	%rd920, %rd1178, 7;
	xor.b64  	%rd921, %rd919, %rd920;
	add.s64 	%rd1179, %rd916, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd898;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 14;
	shf.r.wrap.b32 	%r562, %r559, %r560, 14;
	mov.b64 	%rd922, {%r562, %r561};
	shf.r.wrap.b32 	%r563, %r560, %r559, 18;
	shf.r.wrap.b32 	%r564, %r559, %r560, 18;
	mov.b64 	%rd923, {%r564, %r563};
	xor.b64  	%rd924, %rd922, %rd923;
	shf.l.wrap.b32 	%r565, %r559, %r560, 23;
	shf.l.wrap.b32 	%r566, %r560, %r559, 23;
	mov.b64 	%rd925, {%r566, %r565};
	xor.b64  	%rd926, %rd924, %rd925;
	xor.b64  	%rd927, %rd861, %rd824;
	and.b64  	%rd928, %rd898, %rd927;
	xor.b64  	%rd929, %rd928, %rd824;
	add.s64 	%rd930, %rd929, %rd787;
	add.s64 	%rd931, %rd930, %rd926;
	ld.const.u64 	%rd932, [%rd1172+200];
	add.s64 	%rd933, %rd931, %rd932;
	add.s64 	%rd934, %rd933, %rd1179;
	add.s64 	%rd935, %rd934, %rd798;
	and.b64  	%rd936, %rd909, %rd872;
	or.b64  	%rd937, %rd909, %rd872;
	and.b64  	%rd938, %rd937, %rd835;
	or.b64  	%rd939, %rd938, %rd936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd909;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 28;
	shf.r.wrap.b32 	%r570, %r567, %r568, 28;
	mov.b64 	%rd940, {%r570, %r569};
	shf.l.wrap.b32 	%r571, %r567, %r568, 30;
	shf.l.wrap.b32 	%r572, %r568, %r567, 30;
	mov.b64 	%rd941, {%r572, %r571};
	xor.b64  	%rd942, %rd940, %rd941;
	shf.l.wrap.b32 	%r573, %r567, %r568, 25;
	shf.l.wrap.b32 	%r574, %r568, %r567, 25;
	mov.b64 	%rd943, {%r574, %r573};
	xor.b64  	%rd944, %rd942, %rd943;
	add.s64 	%rd945, %rd944, %rd939;
	add.s64 	%rd946, %rd945, %rd934;
	add.s64 	%rd947, %rd1185, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd1180;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 19;
	shf.r.wrap.b32 	%r578, %r575, %r576, 19;
	mov.b64 	%rd948, {%r578, %r577};
	shf.l.wrap.b32 	%r579, %r575, %r576, 3;
	shf.l.wrap.b32 	%r580, %r576, %r575, 3;
	mov.b64 	%rd949, {%r580, %r579};
	xor.b64  	%rd950, %rd948, %rd949;
	shr.u64 	%rd951, %rd1180, 6;
	xor.b64  	%rd952, %rd950, %rd951;
	add.s64 	%rd953, %rd947, %rd952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd1177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd1177;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 8;
	shf.r.wrap.b32 	%r584, %r581, %r582, 8;
	mov.b64 	%rd954, {%r584, %r583};
	shf.r.wrap.b32 	%r585, %r582, %r581, 1;
	shf.r.wrap.b32 	%r586, %r581, %r582, 1;
	mov.b64 	%rd955, {%r586, %r585};
	xor.b64  	%rd956, %rd955, %rd954;
	shr.u64 	%rd957, %rd1177, 7;
	xor.b64  	%rd958, %rd956, %rd957;
	add.s64 	%rd1178, %rd953, %rd958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd935;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 14;
	shf.r.wrap.b32 	%r590, %r587, %r588, 14;
	mov.b64 	%rd959, {%r590, %r589};
	shf.r.wrap.b32 	%r591, %r588, %r587, 18;
	shf.r.wrap.b32 	%r592, %r587, %r588, 18;
	mov.b64 	%rd960, {%r592, %r591};
	xor.b64  	%rd961, %rd959, %rd960;
	shf.l.wrap.b32 	%r593, %r587, %r588, 23;
	shf.l.wrap.b32 	%r594, %r588, %r587, 23;
	mov.b64 	%rd962, {%r594, %r593};
	xor.b64  	%rd963, %rd961, %rd962;
	xor.b64  	%rd964, %rd898, %rd861;
	and.b64  	%rd965, %rd935, %rd964;
	xor.b64  	%rd966, %rd965, %rd861;
	add.s64 	%rd967, %rd966, %rd824;
	add.s64 	%rd968, %rd967, %rd963;
	ld.const.u64 	%rd969, [%rd1172+208];
	add.s64 	%rd970, %rd968, %rd969;
	add.s64 	%rd971, %rd970, %rd1178;
	add.s64 	%rd972, %rd971, %rd835;
	and.b64  	%rd973, %rd946, %rd909;
	or.b64  	%rd974, %rd946, %rd909;
	and.b64  	%rd975, %rd974, %rd872;
	or.b64  	%rd976, %rd975, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd946;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 28;
	shf.r.wrap.b32 	%r598, %r595, %r596, 28;
	mov.b64 	%rd977, {%r598, %r597};
	shf.l.wrap.b32 	%r599, %r595, %r596, 30;
	shf.l.wrap.b32 	%r600, %r596, %r595, 30;
	mov.b64 	%rd978, {%r600, %r599};
	xor.b64  	%rd979, %rd977, %rd978;
	shf.l.wrap.b32 	%r601, %r595, %r596, 25;
	shf.l.wrap.b32 	%r602, %r596, %r595, 25;
	mov.b64 	%rd980, {%r602, %r601};
	xor.b64  	%rd981, %rd979, %rd980;
	add.s64 	%rd982, %rd981, %rd976;
	add.s64 	%rd983, %rd982, %rd971;
	add.s64 	%rd984, %rd1184, %rd1177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd1179;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 19;
	shf.r.wrap.b32 	%r606, %r603, %r604, 19;
	mov.b64 	%rd985, {%r606, %r605};
	shf.l.wrap.b32 	%r607, %r603, %r604, 3;
	shf.l.wrap.b32 	%r608, %r604, %r603, 3;
	mov.b64 	%rd986, {%r608, %r607};
	xor.b64  	%rd987, %rd985, %rd986;
	shr.u64 	%rd988, %rd1179, 6;
	xor.b64  	%rd989, %rd987, %rd988;
	add.s64 	%rd990, %rd984, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd1176;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 8;
	shf.r.wrap.b32 	%r612, %r609, %r610, 8;
	mov.b64 	%rd991, {%r612, %r611};
	shf.r.wrap.b32 	%r613, %r610, %r609, 1;
	shf.r.wrap.b32 	%r614, %r609, %r610, 1;
	mov.b64 	%rd992, {%r614, %r613};
	xor.b64  	%rd993, %rd992, %rd991;
	shr.u64 	%rd994, %rd1176, 7;
	xor.b64  	%rd995, %rd993, %rd994;
	add.s64 	%rd1177, %rd990, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd972;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 14;
	shf.r.wrap.b32 	%r618, %r615, %r616, 14;
	mov.b64 	%rd996, {%r618, %r617};
	shf.r.wrap.b32 	%r619, %r616, %r615, 18;
	shf.r.wrap.b32 	%r620, %r615, %r616, 18;
	mov.b64 	%rd997, {%r620, %r619};
	xor.b64  	%rd998, %rd996, %rd997;
	shf.l.wrap.b32 	%r621, %r615, %r616, 23;
	shf.l.wrap.b32 	%r622, %r616, %r615, 23;
	mov.b64 	%rd999, {%r622, %r621};
	xor.b64  	%rd1000, %rd998, %rd999;
	xor.b64  	%rd1001, %rd935, %rd898;
	and.b64  	%rd1002, %rd972, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd898;
	add.s64 	%rd1004, %rd1003, %rd861;
	add.s64 	%rd1005, %rd1004, %rd1000;
	ld.const.u64 	%rd1006, [%rd1172+216];
	add.s64 	%rd1007, %rd1005, %rd1006;
	add.s64 	%rd1008, %rd1007, %rd1177;
	add.s64 	%rd1009, %rd1008, %rd872;
	and.b64  	%rd1010, %rd983, %rd946;
	or.b64  	%rd1011, %rd983, %rd946;
	and.b64  	%rd1012, %rd1011, %rd909;
	or.b64  	%rd1013, %rd1012, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd983;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 28;
	shf.r.wrap.b32 	%r626, %r623, %r624, 28;
	mov.b64 	%rd1014, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 30;
	shf.l.wrap.b32 	%r628, %r624, %r623, 30;
	mov.b64 	%rd1015, {%r628, %r627};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	shf.l.wrap.b32 	%r629, %r623, %r624, 25;
	shf.l.wrap.b32 	%r630, %r624, %r623, 25;
	mov.b64 	%rd1017, {%r630, %r629};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	add.s64 	%rd1019, %rd1018, %rd1013;
	add.s64 	%rd1020, %rd1019, %rd1008;
	add.s64 	%rd1021, %rd1183, %rd1176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd1178;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 19;
	shf.r.wrap.b32 	%r634, %r631, %r632, 19;
	mov.b64 	%rd1022, {%r634, %r633};
	shf.l.wrap.b32 	%r635, %r631, %r632, 3;
	shf.l.wrap.b32 	%r636, %r632, %r631, 3;
	mov.b64 	%rd1023, {%r636, %r635};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	shr.u64 	%rd1025, %rd1178, 6;
	xor.b64  	%rd1026, %rd1024, %rd1025;
	add.s64 	%rd1027, %rd1021, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd1175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd1175;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 8;
	shf.r.wrap.b32 	%r640, %r637, %r638, 8;
	mov.b64 	%rd1028, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 1;
	shf.r.wrap.b32 	%r642, %r637, %r638, 1;
	mov.b64 	%rd1029, {%r642, %r641};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	shr.u64 	%rd1031, %rd1175, 7;
	xor.b64  	%rd1032, %rd1030, %rd1031;
	add.s64 	%rd1176, %rd1027, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd1009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd1009;
	}
	shf.r.wrap.b32 	%r645, %r644, %r643, 14;
	shf.r.wrap.b32 	%r646, %r643, %r644, 14;
	mov.b64 	%rd1033, {%r646, %r645};
	shf.r.wrap.b32 	%r647, %r644, %r643, 18;
	shf.r.wrap.b32 	%r648, %r643, %r644, 18;
	mov.b64 	%rd1034, {%r648, %r647};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	shf.l.wrap.b32 	%r649, %r643, %r644, 23;
	shf.l.wrap.b32 	%r650, %r644, %r643, 23;
	mov.b64 	%rd1036, {%r650, %r649};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	xor.b64  	%rd1038, %rd972, %rd935;
	and.b64  	%rd1039, %rd1009, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd935;
	add.s64 	%rd1041, %rd1040, %rd898;
	add.s64 	%rd1042, %rd1041, %rd1037;
	ld.const.u64 	%rd1043, [%rd1172+224];
	add.s64 	%rd1044, %rd1042, %rd1043;
	add.s64 	%rd1045, %rd1044, %rd1176;
	add.s64 	%rd1196, %rd1045, %rd909;
	and.b64  	%rd1046, %rd1020, %rd983;
	or.b64  	%rd1047, %rd1020, %rd983;
	and.b64  	%rd1048, %rd1047, %rd946;
	or.b64  	%rd1049, %rd1048, %rd1046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd1020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd1020;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 28;
	shf.r.wrap.b32 	%r654, %r651, %r652, 28;
	mov.b64 	%rd1050, {%r654, %r653};
	shf.l.wrap.b32 	%r655, %r651, %r652, 30;
	shf.l.wrap.b32 	%r656, %r652, %r651, 30;
	mov.b64 	%rd1051, {%r656, %r655};
	xor.b64  	%rd1052, %rd1050, %rd1051;
	shf.l.wrap.b32 	%r657, %r651, %r652, 25;
	shf.l.wrap.b32 	%r658, %r652, %r651, 25;
	mov.b64 	%rd1053, {%r658, %r657};
	xor.b64  	%rd1054, %rd1052, %rd1053;
	add.s64 	%rd1055, %rd1054, %rd1049;
	add.s64 	%rd1192, %rd1055, %rd1045;
	add.s64 	%rd1056, %rd1182, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd1177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd1177;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 19;
	shf.r.wrap.b32 	%r662, %r659, %r660, 19;
	mov.b64 	%rd1057, {%r662, %r661};
	shf.l.wrap.b32 	%r663, %r659, %r660, 3;
	shf.l.wrap.b32 	%r664, %r660, %r659, 3;
	mov.b64 	%rd1058, {%r664, %r663};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	shr.u64 	%rd1060, %rd1177, 6;
	xor.b64  	%rd1061, %rd1059, %rd1060;
	add.s64 	%rd1062, %rd1056, %rd1061;
	shf.r.wrap.b32 	%r665, %r295, %r296, 8;
	shf.r.wrap.b32 	%r666, %r296, %r295, 8;
	mov.b64 	%rd1063, {%r666, %r665};
	shf.r.wrap.b32 	%r667, %r295, %r296, 1;
	shf.r.wrap.b32 	%r668, %r296, %r295, 1;
	mov.b64 	%rd1064, {%r668, %r667};
	xor.b64  	%rd1065, %rd1064, %rd1063;
	shr.u64 	%rd1066, %rd1174, 7;
	xor.b64  	%rd1067, %rd1065, %rd1066;
	add.s64 	%rd1175, %rd1062, %rd1067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1196;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 14;
	shf.r.wrap.b32 	%r672, %r669, %r670, 14;
	mov.b64 	%rd1068, {%r672, %r671};
	shf.r.wrap.b32 	%r673, %r670, %r669, 18;
	shf.r.wrap.b32 	%r674, %r669, %r670, 18;
	mov.b64 	%rd1069, {%r674, %r673};
	xor.b64  	%rd1070, %rd1068, %rd1069;
	shf.l.wrap.b32 	%r675, %r669, %r670, 23;
	shf.l.wrap.b32 	%r676, %r670, %r669, 23;
	mov.b64 	%rd1071, {%r676, %r675};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	xor.b64  	%rd1073, %rd1009, %rd972;
	and.b64  	%rd1074, %rd1196, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd972;
	add.s64 	%rd1076, %rd1075, %rd935;
	add.s64 	%rd1077, %rd1076, %rd1072;
	ld.const.u64 	%rd1078, [%rd1172+232];
	add.s64 	%rd1079, %rd1077, %rd1078;
	add.s64 	%rd1080, %rd1079, %rd1175;
	add.s64 	%rd1195, %rd1080, %rd946;
	and.b64  	%rd1081, %rd1192, %rd1020;
	or.b64  	%rd1082, %rd1192, %rd1020;
	and.b64  	%rd1083, %rd1082, %rd983;
	or.b64  	%rd1084, %rd1083, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1192;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 28;
	shf.r.wrap.b32 	%r680, %r677, %r678, 28;
	mov.b64 	%rd1085, {%r680, %r679};
	shf.l.wrap.b32 	%r681, %r677, %r678, 30;
	shf.l.wrap.b32 	%r682, %r678, %r677, 30;
	mov.b64 	%rd1086, {%r682, %r681};
	xor.b64  	%rd1087, %rd1085, %rd1086;
	shf.l.wrap.b32 	%r683, %r677, %r678, 25;
	shf.l.wrap.b32 	%r684, %r678, %r677, 25;
	mov.b64 	%rd1088, {%r684, %r683};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	add.s64 	%rd1090, %rd1089, %rd1084;
	add.s64 	%rd1191, %rd1090, %rd1080;
	add.s64 	%rd1091, %rd1181, %rd1174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd1176;
	}
	shf.r.wrap.b32 	%r687, %r686, %r685, 19;
	shf.r.wrap.b32 	%r688, %r685, %r686, 19;
	mov.b64 	%rd1092, {%r688, %r687};
	shf.l.wrap.b32 	%r689, %r685, %r686, 3;
	shf.l.wrap.b32 	%r690, %r686, %r685, 3;
	mov.b64 	%rd1093, {%r690, %r689};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	shr.u64 	%rd1095, %rd1176, 6;
	xor.b64  	%rd1096, %rd1094, %rd1095;
	add.s64 	%rd1097, %rd1091, %rd1096;
	shf.r.wrap.b32 	%r691, %r323, %r324, 8;
	shf.r.wrap.b32 	%r692, %r324, %r323, 8;
	mov.b64 	%rd1098, {%r692, %r691};
	shf.r.wrap.b32 	%r693, %r323, %r324, 1;
	shf.r.wrap.b32 	%r694, %r324, %r323, 1;
	mov.b64 	%rd1099, {%r694, %r693};
	xor.b64  	%rd1100, %rd1099, %rd1098;
	shr.u64 	%rd1101, %rd1173, 7;
	xor.b64  	%rd1102, %rd1100, %rd1101;
	add.s64 	%rd1174, %rd1097, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd1195;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 14;
	shf.r.wrap.b32 	%r698, %r695, %r696, 14;
	mov.b64 	%rd1103, {%r698, %r697};
	shf.r.wrap.b32 	%r699, %r696, %r695, 18;
	shf.r.wrap.b32 	%r700, %r695, %r696, 18;
	mov.b64 	%rd1104, {%r700, %r699};
	xor.b64  	%rd1105, %rd1103, %rd1104;
	shf.l.wrap.b32 	%r701, %r695, %r696, 23;
	shf.l.wrap.b32 	%r702, %r696, %r695, 23;
	mov.b64 	%rd1106, {%r702, %r701};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	xor.b64  	%rd1108, %rd1196, %rd1009;
	and.b64  	%rd1109, %rd1195, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1009;
	add.s64 	%rd1111, %rd1110, %rd972;
	add.s64 	%rd1112, %rd1111, %rd1107;
	ld.const.u64 	%rd1113, [%rd1172+240];
	add.s64 	%rd1114, %rd1112, %rd1113;
	add.s64 	%rd1115, %rd1114, %rd1174;
	add.s64 	%rd1194, %rd1115, %rd983;
	and.b64  	%rd1116, %rd1191, %rd1192;
	or.b64  	%rd1117, %rd1191, %rd1192;
	and.b64  	%rd1118, %rd1117, %rd1020;
	or.b64  	%rd1119, %rd1118, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd1191;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 28;
	shf.r.wrap.b32 	%r706, %r703, %r704, 28;
	mov.b64 	%rd1120, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 30;
	shf.l.wrap.b32 	%r708, %r704, %r703, 30;
	mov.b64 	%rd1121, {%r708, %r707};
	xor.b64  	%rd1122, %rd1120, %rd1121;
	shf.l.wrap.b32 	%r709, %r703, %r704, 25;
	shf.l.wrap.b32 	%r710, %r704, %r703, 25;
	mov.b64 	%rd1123, {%r710, %r709};
	xor.b64  	%rd1124, %rd1122, %rd1123;
	add.s64 	%rd1125, %rd1124, %rd1119;
	add.s64 	%rd1190, %rd1125, %rd1115;
	add.s64 	%rd1126, %rd1180, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd1175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r712}, %rd1175;
	}
	shf.r.wrap.b32 	%r713, %r712, %r711, 19;
	shf.r.wrap.b32 	%r714, %r711, %r712, 19;
	mov.b64 	%rd1127, {%r714, %r713};
	shf.l.wrap.b32 	%r715, %r711, %r712, 3;
	shf.l.wrap.b32 	%r716, %r712, %r711, 3;
	mov.b64 	%rd1128, {%r716, %r715};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	shr.u64 	%rd1130, %rd1175, 6;
	xor.b64  	%rd1131, %rd1129, %rd1130;
	add.s64 	%rd1132, %rd1126, %rd1131;
	shf.r.wrap.b32 	%r717, %r352, %r351, 1;
	shf.r.wrap.b32 	%r718, %r351, %r352, 1;
	mov.b64 	%rd1133, {%r718, %r717};
	shf.r.wrap.b32 	%r719, %r352, %r351, 8;
	shf.r.wrap.b32 	%r720, %r351, %r352, 8;
	mov.b64 	%rd1134, {%r720, %r719};
	xor.b64  	%rd1135, %rd1133, %rd1134;
	shr.u64 	%rd1136, %rd1188, 7;
	xor.b64  	%rd1137, %rd1135, %rd1136;
	add.s64 	%rd1173, %rd1132, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1194;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 14;
	shf.r.wrap.b32 	%r724, %r721, %r722, 14;
	mov.b64 	%rd1138, {%r724, %r723};
	shf.r.wrap.b32 	%r725, %r722, %r721, 18;
	shf.r.wrap.b32 	%r726, %r721, %r722, 18;
	mov.b64 	%rd1139, {%r726, %r725};
	xor.b64  	%rd1140, %rd1138, %rd1139;
	shf.l.wrap.b32 	%r727, %r721, %r722, 23;
	shf.l.wrap.b32 	%r728, %r722, %r721, 23;
	mov.b64 	%rd1141, {%r728, %r727};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1195, %rd1196;
	and.b64  	%rd1144, %rd1194, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1196;
	add.s64 	%rd1146, %rd1145, %rd1009;
	add.s64 	%rd1147, %rd1146, %rd1142;
	ld.const.u64 	%rd1148, [%rd1172+248];
	add.s64 	%rd1149, %rd1147, %rd1148;
	add.s64 	%rd1150, %rd1149, %rd1173;
	add.s64 	%rd1193, %rd1150, %rd1020;
	and.b64  	%rd1151, %rd1190, %rd1191;
	or.b64  	%rd1152, %rd1190, %rd1191;
	and.b64  	%rd1153, %rd1152, %rd1192;
	or.b64  	%rd1154, %rd1153, %rd1151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1190;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 28;
	shf.r.wrap.b32 	%r732, %r729, %r730, 28;
	mov.b64 	%rd1155, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 30;
	shf.l.wrap.b32 	%r734, %r730, %r729, 30;
	mov.b64 	%rd1156, {%r734, %r733};
	xor.b64  	%rd1157, %rd1155, %rd1156;
	shf.l.wrap.b32 	%r735, %r729, %r730, 25;
	shf.l.wrap.b32 	%r736, %r730, %r729, 25;
	mov.b64 	%rd1158, {%r736, %r735};
	xor.b64  	%rd1159, %rd1157, %rd1158;
	add.s64 	%rd1160, %rd1159, %rd1154;
	add.s64 	%rd1189, %rd1160, %rd1150;
	add.s32 	%r747, %r747, 16;
	setp.ne.s32 	%p8, %r747, 64;
	mov.u64 	%rd1172, %rd101;
	@%p8 bra 	$L__BB3_6;

	add.s64 	%rd1171, %rd1189, 7640891576956012808;
	add.s64 	%rd1170, %rd1190, -4942790177534073029;
	add.s64 	%rd1169, %rd1191, 4354685564936845355;
	add.s64 	%rd1168, %rd1192, -6534734903238641935;
	add.s64 	%rd1167, %rd1193, 5840696475078001361;
	add.s64 	%rd1166, %rd1194, -7276294671716946913;
	add.s64 	%rd1165, %rd1195, 2270897969802886507;
	add.s64 	%rd1164, %rd1196, 6620516959819538809;
	add.s32 	%r737, %r745, 1;
	setp.eq.s32 	%p9, %r737, 42;
	selp.b32 	%r745, 0, %r737, %p9;
	add.s32 	%r744, %r744, 1;
	setp.lt.u32 	%p10, %r744, 84;
	@%p10 bra 	$L__BB3_1;

	mov.b32 	%r743, %envreg3;
	mov.u32 	%r742, %tid.x;
	add.s32 	%r741, %r742, %r743;
	mov.u32 	%r740, %ctaid.x;
	mov.u32 	%r739, %ntid.x;
	mad.lo.s32 	%r738, %r739, %r740, %r741;
	mul.wide.s32 	%rd1163, %r738, 104;
	ld.param.u64 	%rd1162, [kernel_crypt_fast_param_2];
	add.s64 	%rd1161, %rd1162, %rd1163;
	st.global.u64 	[%rd1161], %rd1171;
	st.global.u64 	[%rd1161+8], %rd1170;
	st.global.u64 	[%rd1161+16], %rd1169;
	st.global.u64 	[%rd1161+24], %rd1168;
	st.global.u64 	[%rd1161+32], %rd1167;
	st.global.u64 	[%rd1161+40], %rd1166;
	st.global.u64 	[%rd1161+48], %rd1165;
	st.global.u64 	[%rd1161+56], %rd1164;
	ret;

}
	// .globl	kernel_final
.entry kernel_final(
	.param .u64 .ptr .const .align 8 kernel_final_param_0,
	.param .u64 .ptr .global .align 8 kernel_final_param_1,
	.param .u64 .ptr .global .align 8 kernel_final_param_2,
	.param .u64 .ptr .global .align 8 kernel_final_param_3
)
{
	.local .align 16 .b8 	__local_depot4[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b32 	%r<1486>;
	.reg .b64 	%rd<2383>;


	mov.u64 	%SPL, __local_depot4;
	ld.param.u64 	%rd227, [kernel_final_param_0];
	ld.param.u64 	%rd228, [kernel_final_param_2];
	ld.param.u64 	%rd226, [kernel_final_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mov.b32 	%r18, %envreg3;
	add.s32 	%r19, %r17, %r18;
	mad.lo.s32 	%r20, %r1, %r16, %r19;
	cvt.s64.s32 	%rd2, %r20;
	ld.const.u32 	%r21, [%rd227+8];
	min.u32 	%r2, %r21, 84;
	mul.wide.s32 	%rd230, %r20, 104;
	add.s64 	%rd3, %rd228, %rd230;
	ld.global.u64 	%rd2301, [%rd3];
	ld.global.u64 	%rd2300, [%rd3+8];
	ld.global.u64 	%rd2299, [%rd3+16];
	ld.global.u64 	%rd2298, [%rd3+24];
	ld.global.u64 	%rd2297, [%rd3+32];
	ld.global.u64 	%rd2296, [%rd3+40];
	ld.global.u64 	%rd2295, [%rd3+48];
	ld.global.u64 	%rd2294, [%rd3+56];
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	$L__BB4_14;

	mov.b32 	%r24, %envreg6;
	mul.lo.s32 	%r25, %r24, %r1;
	cvt.s64.s32 	%rd12, %r25;
	mov.u64 	%rd231, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27}, %rd231;
	}
	shf.r.wrap.b32 	%r28, %r27, %r26, 18;
	shf.r.wrap.b32 	%r29, %r26, %r27, 18;
	mov.b64 	%rd232, {%r29, %r28};
	shf.r.wrap.b32 	%r30, %r27, %r26, 14;
	shf.r.wrap.b32 	%r31, %r26, %r27, 14;
	mov.b64 	%rd233, {%r31, %r30};
	xor.b64  	%rd234, %rd233, %rd232;
	shf.l.wrap.b32 	%r32, %r26, %r27, 23;
	shf.l.wrap.b32 	%r33, %r27, %r26, 23;
	mov.b64 	%rd235, {%r33, %r32};
	xor.b64  	%rd13, %rd234, %rd235;
	add.s64 	%rd14, %rd13, -4760086834832339754;
	mov.u64 	%rd236, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r34}, %rd236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35,%dummy}, %rd236;
	}
	shf.l.wrap.b32 	%r36, %r35, %r34, 30;
	shf.l.wrap.b32 	%r37, %r34, %r35, 30;
	mov.b64 	%rd237, {%r37, %r36};
	shf.r.wrap.b32 	%r38, %r34, %r35, 28;
	shf.r.wrap.b32 	%r39, %r35, %r34, 28;
	mov.b64 	%rd238, {%r39, %r38};
	xor.b64  	%rd239, %rd238, %rd237;
	shf.l.wrap.b32 	%r40, %r35, %r34, 25;
	shf.l.wrap.b32 	%r41, %r34, %r35, 25;
	mov.b64 	%rd240, {%r41, %r40};
	xor.b64  	%rd15, %rd239, %rd240;
	add.s64 	%rd16, %rd15, 4210837510808201515;
	mul.wide.s32 	%rd17, %r25, 8;
	mov.u32 	%r1481, 0;
	mov.u32 	%r1482, %r1481;

$L__BB4_2:
	and.b32  	%r42, %r1481, 1;
	setp.eq.b32 	%p2, %r42, 1;
	mov.pred 	%p3, 0;
	xor.pred  	%p4, %p2, %p3;
	not.pred 	%p5, %p4;
	mul.wide.u32 	%rd241, %r1482, 4;
	mov.u64 	%rd242, loop_index;
	add.s64 	%rd27, %rd242, %rd241;
	@%p5 bra 	$L__BB4_5;
	bra.uni 	$L__BB4_3;

$L__BB4_5:
	st.local.v2.u64 	[%rd1], {%rd2301, %rd2300};
	st.local.v2.u64 	[%rd1+16], {%rd2299, %rd2298};
	st.local.v2.u64 	[%rd1+32], {%rd2297, %rd2296};
	st.local.v2.u64 	[%rd1+48], {%rd2295, %rd2294};
	ld.const.u32 	%r53, [%rd27];
	mul.lo.s32 	%r54, %r53, 9;
	cvt.s64.s32 	%rd300, %r54;
	mul.lo.s64 	%rd301, %rd300, %rd12;
	add.s64 	%rd302, %rd301, %rd2;
	shl.b64 	%rd303, %rd302, 3;
	add.s64 	%rd304, %rd226, %rd303;
	add.s64 	%rd305, %rd304, %rd17;
	ld.global.nc.u64 	%rd306, [%rd304];
	ld.global.nc.u64 	%rd307, [%rd305];
	st.local.v2.u64 	[%rd1+64], {%rd306, %rd307};
	add.s64 	%rd308, %rd305, %rd17;
	add.s64 	%rd309, %rd308, %rd17;
	ld.global.nc.u64 	%rd310, [%rd309];
	ld.global.nc.u64 	%rd311, [%rd308];
	st.local.v2.u64 	[%rd1+80], {%rd311, %rd310};
	add.s64 	%rd312, %rd309, %rd17;
	add.s64 	%rd313, %rd312, %rd17;
	ld.global.nc.u64 	%rd314, [%rd313];
	ld.global.nc.u64 	%rd315, [%rd312];
	st.local.v2.u64 	[%rd1+96], {%rd315, %rd314};
	add.s64 	%rd316, %rd313, %rd17;
	add.s64 	%rd317, %rd316, %rd17;
	ld.global.nc.u64 	%rd318, [%rd317];
	ld.global.nc.u64 	%rd319, [%rd316];
	st.local.v2.u64 	[%rd1+112], {%rd319, %rd318};
	add.s64 	%rd320, %rd317, %rd17;
	ld.global.nc.u64 	%rd321, [%rd320];
	cvt.u32.u64 	%r1483, %rd321;
	bra.uni 	$L__BB4_6;

$L__BB4_3:
	mov.u64 	%rd243, 0;
	st.local.v2.u64 	[%rd1+64], {%rd243, %rd243};
	st.local.v2.u64 	[%rd1+80], {%rd243, %rd243};
	st.local.v2.u64 	[%rd1+96], {%rd243, %rd243};
	st.local.v2.u64 	[%rd1+112], {%rd243, %rd243};
	ld.const.u32 	%r43, [%rd27];
	mul.lo.s32 	%r44, %r43, 9;
	cvt.s64.s32 	%rd244, %r44;
	mul.lo.s64 	%rd245, %rd244, %rd12;
	add.s64 	%rd246, %rd245, %rd2;
	shl.b64 	%rd247, %rd246, 3;
	add.s64 	%rd248, %rd226, %rd247;
	add.s64 	%rd249, %rd248, %rd17;
	ld.global.nc.u64 	%rd250, [%rd248];
	ld.global.nc.u64 	%rd251, [%rd249];
	st.local.v2.u64 	[%rd1], {%rd250, %rd251};
	add.s64 	%rd252, %rd249, %rd17;
	add.s64 	%rd253, %rd252, %rd17;
	ld.global.nc.u64 	%rd254, [%rd253];
	ld.global.nc.u64 	%rd255, [%rd252];
	st.local.v2.u64 	[%rd1+16], {%rd255, %rd254};
	add.s64 	%rd256, %rd253, %rd17;
	add.s64 	%rd257, %rd256, %rd17;
	ld.global.nc.u64 	%rd258, [%rd257];
	ld.global.nc.u64 	%rd259, [%rd256];
	st.local.v2.u64 	[%rd1+32], {%rd259, %rd258};
	add.s64 	%rd260, %rd257, %rd17;
	add.s64 	%rd261, %rd260, %rd17;
	ld.global.nc.u64 	%rd262, [%rd261];
	ld.global.nc.u64 	%rd263, [%rd260];
	st.local.v2.u64 	[%rd1+48], {%rd263, %rd262};
	add.s64 	%rd264, %rd261, %rd17;
	ld.global.nc.u64 	%rd265, [%rd264];
	cvt.u32.u64 	%r1483, %rd265;
	and.b32  	%r6, %r1483, 7;
	shl.b32 	%r45, %r1483, 3;
	and.b32  	%r46, %r45, 56;
	shr.u32 	%r47, %r1483, 3;
	shl.b32 	%r48, %r47, 3;
	cvt.u64.u32 	%rd266, %r48;
	add.s64 	%rd28, %rd1, %rd266;
	shr.u64 	%rd267, %rd2301, %r46;
	ld.local.u64 	%rd268, [%rd28];
	or.b64  	%rd269, %rd267, %rd268;
	st.local.u64 	[%rd28], %rd269;
	setp.eq.s32 	%p6, %r6, 0;
	neg.s32 	%r49, %r46;
	and.b32  	%r50, %r49, 56;
	cvt.u64.u32 	%rd29, %r50;
	shl.b64 	%rd270, %rd2301, %r50;
	selp.b64 	%rd271, 0, %rd270, %p6;
	shr.u64 	%rd272, %rd2300, %r46;
	or.b64  	%rd273, %rd271, %rd272;
	st.local.u64 	[%rd28+8], %rd273;
	shl.b64 	%rd274, %rd2300, %r50;
	selp.b64 	%rd275, 0, %rd274, %p6;
	shr.u64 	%rd276, %rd2299, %r46;
	or.b64  	%rd277, %rd276, %rd275;
	st.local.u64 	[%rd28+16], %rd277;
	shl.b64 	%rd278, %rd2299, %r50;
	selp.b64 	%rd279, 0, %rd278, %p6;
	shr.u64 	%rd280, %rd2298, %r46;
	or.b64  	%rd281, %rd280, %rd279;
	st.local.u64 	[%rd28+24], %rd281;
	shl.b64 	%rd282, %rd2298, %r50;
	selp.b64 	%rd283, 0, %rd282, %p6;
	shr.u64 	%rd284, %rd2297, %r46;
	or.b64  	%rd285, %rd284, %rd283;
	st.local.u64 	[%rd28+32], %rd285;
	shl.b64 	%rd286, %rd2297, %r50;
	selp.b64 	%rd287, 0, %rd286, %p6;
	shr.u64 	%rd288, %rd2296, %r46;
	or.b64  	%rd289, %rd288, %rd287;
	st.local.u64 	[%rd28+40], %rd289;
	shl.b64 	%rd290, %rd2296, %r50;
	selp.b64 	%rd291, 0, %rd290, %p6;
	shr.u64 	%rd292, %rd2295, %r46;
	or.b64  	%rd293, %rd292, %rd291;
	st.local.u64 	[%rd28+48], %rd293;
	shl.b64 	%rd294, %rd2295, %r50;
	selp.b64 	%rd295, 0, %rd294, %p6;
	add.s32 	%r51, %r47, 7;
	shr.u64 	%rd296, %rd2294, %r46;
	or.b64  	%rd297, %rd296, %rd295;
	st.local.u64 	[%rd28+56], %rd297;
	setp.gt.u32 	%p7, %r51, 14;
	@%p7 bra 	$L__BB4_6;

	cvt.u32.u64 	%r52, %rd29;
	shl.b64 	%rd298, %rd2294, %r52;
	selp.b64 	%rd299, 0, %rd298, %p6;
	st.local.u64 	[%rd28+64], %rd299;

$L__BB4_6:
	add.s32 	%r9, %r1483, 64;
	shl.b32 	%r55, %r9, 3;
	and.b32  	%r56, %r55, 56;
	and.b32  	%r57, %r9, -8;
	cvt.u64.u32 	%rd322, %r57;
	add.s64 	%rd323, %rd1, %rd322;
	mov.u64 	%rd324, -9223372036854775808;
	shr.u64 	%rd325, %rd324, %r56;
	ld.local.u64 	%rd326, [%rd323];
	or.b64  	%rd327, %rd326, %rd325;
	st.local.u64 	[%rd323], %rd327;
	setp.lt.u32 	%p9, %r9, 112;
	@%p9 bra 	$L__BB4_10;
	bra.uni 	$L__BB4_7;

$L__BB4_10:
	mul.wide.u32 	%rd1312, %r9, 8;
	st.local.u64 	[%rd1+120], %rd1312;
	ld.local.v2.u64 	{%rd2366, %rd2365}, [%rd1];
	ld.local.v2.u64 	{%rd2364, %rd2363}, [%rd1+16];
	ld.local.v2.u64 	{%rd2362, %rd2361}, [%rd1+32];
	ld.local.v2.u64 	{%rd2360, %rd2359}, [%rd1+48];
	ld.local.v2.u64 	{%rd2358, %rd2357}, [%rd1+64];
	ld.local.v2.u64 	{%rd2356, %rd2355}, [%rd1+80];
	ld.local.v2.u64 	{%rd2354, %rd2353}, [%rd1+96];
	ld.local.u64 	%rd2352, [%rd1+112];
	mov.u64 	%rd2350, 7640891576956012808;
	mov.u64 	%rd2349, -4942790177534073029;
	mov.u64 	%rd2348, 4354685564936845355;
	mov.u64 	%rd2347, -6534734903238641935;
	mov.u64 	%rd2346, 5840696475078001361;
	mov.u64 	%rd2345, -7276294671716946913;
	mov.u64 	%rd2344, 2270897969802886507;
	mov.u64 	%rd2343, 6620516959819538809;
	mov.u64 	%rd2326, %rd15;
	mov.u64 	%rd2327, %rd13;
	bra.uni 	$L__BB4_11;

$L__BB4_7:
	ld.local.v2.u64 	{%rd2317, %rd2316}, [%rd1];
	ld.local.v2.u64 	{%rd2315, %rd2314}, [%rd1+16];
	ld.local.v2.u64 	{%rd2313, %rd2312}, [%rd1+32];
	ld.local.v2.u64 	{%rd2311, %rd2310}, [%rd1+48];
	ld.local.v2.u64 	{%rd2309, %rd2308}, [%rd1+64];
	ld.local.v2.u64 	{%rd2307, %rd2306}, [%rd1+80];
	ld.local.v2.u64 	{%rd2305, %rd2304}, [%rd1+96];
	ld.local.v2.u64 	{%rd2303, %rd2302}, [%rd1+112];
	add.s64 	%rd344, %rd14, %rd2317;
	add.s64 	%rd345, %rd344, -6534734903238641935;
	add.s64 	%rd346, %rd16, %rd344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r59,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r60}, %rd345;
	}
	shf.r.wrap.b32 	%r61, %r60, %r59, 14;
	shf.r.wrap.b32 	%r62, %r59, %r60, 14;
	mov.b64 	%rd347, {%r62, %r61};
	shf.r.wrap.b32 	%r63, %r60, %r59, 18;
	shf.r.wrap.b32 	%r64, %r59, %r60, 18;
	mov.b64 	%rd348, {%r64, %r63};
	xor.b64  	%rd349, %rd347, %rd348;
	shf.l.wrap.b32 	%r65, %r59, %r60, 23;
	shf.l.wrap.b32 	%r66, %r60, %r59, 23;
	mov.b64 	%rd350, {%r66, %r65};
	xor.b64  	%rd351, %rd349, %rd350;
	and.b64  	%rd352, %rd345, -3887949035690463538;
	xor.b64  	%rd353, %rd352, -7276294671716946913;
	add.s64 	%rd354, %rd353, %rd351;
	add.s64 	%rd355, %rd354, %rd2316;
	and.b64  	%rd356, %rd346, -3355664534840381901;
	or.b64  	%rd357, %rd356, 3026882967131160840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r67,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r68}, %rd346;
	}
	shf.r.wrap.b32 	%r69, %r68, %r67, 28;
	shf.r.wrap.b32 	%r70, %r67, %r68, 28;
	mov.b64 	%rd358, {%r70, %r69};
	shf.l.wrap.b32 	%r71, %r67, %r68, 30;
	shf.l.wrap.b32 	%r72, %r68, %r67, 30;
	mov.b64 	%rd359, {%r72, %r71};
	xor.b64  	%rd360, %rd358, %rd359;
	shf.l.wrap.b32 	%r73, %r67, %r68, 25;
	shf.l.wrap.b32 	%r74, %r68, %r67, 25;
	mov.b64 	%rd361, {%r74, %r73};
	xor.b64  	%rd362, %rd360, %rd361;
	add.s64 	%rd363, %rd362, %rd357;
	add.s64 	%rd364, %rd363, %rd355;
	add.s64 	%rd365, %rd355, -3663095898801038493;
	add.s64 	%rd366, %rd364, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r75,%dummy}, %rd365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r76}, %rd365;
	}
	shf.r.wrap.b32 	%r77, %r76, %r75, 14;
	shf.r.wrap.b32 	%r78, %r75, %r76, 14;
	mov.b64 	%rd367, {%r78, %r77};
	shf.r.wrap.b32 	%r79, %r76, %r75, 18;
	shf.r.wrap.b32 	%r80, %r75, %r76, 18;
	mov.b64 	%rd368, {%r80, %r79};
	xor.b64  	%rd369, %rd367, %rd368;
	shf.l.wrap.b32 	%r81, %r75, %r76, 23;
	shf.l.wrap.b32 	%r82, %r76, %r75, 23;
	mov.b64 	%rd370, {%r82, %r81};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd345, 5840696475078001361;
	and.b64  	%rd373, %rd365, %rd372;
	xor.b64  	%rd374, %rd373, 5840696475078001361;
	add.s64 	%rd375, %rd374, %rd371;
	add.s64 	%rd376, %rd375, %rd2315;
	and.b64  	%rd377, %rd366, %rd346;
	or.b64  	%rd378, %rd366, %rd346;
	and.b64  	%rd379, %rd378, 7640891576956012808;
	or.b64  	%rd380, %rd379, %rd377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r83,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r84}, %rd366;
	}
	shf.r.wrap.b32 	%r85, %r84, %r83, 28;
	shf.r.wrap.b32 	%r86, %r83, %r84, 28;
	mov.b64 	%rd381, {%r86, %r85};
	shf.l.wrap.b32 	%r87, %r83, %r84, 30;
	shf.l.wrap.b32 	%r88, %r84, %r83, 30;
	mov.b64 	%rd382, {%r88, %r87};
	xor.b64  	%rd383, %rd381, %rd382;
	shf.l.wrap.b32 	%r89, %r83, %r84, 25;
	shf.l.wrap.b32 	%r90, %r84, %r83, 25;
	mov.b64 	%rd384, {%r90, %r89};
	xor.b64  	%rd385, %rd383, %rd384;
	add.s64 	%rd386, %rd385, %rd380;
	add.s64 	%rd387, %rd386, %rd376;
	add.s64 	%rd388, %rd376, 877659737583668873;
	add.s64 	%rd389, %rd387, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r91,%dummy}, %rd388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r92}, %rd388;
	}
	shf.r.wrap.b32 	%r93, %r92, %r91, 14;
	shf.r.wrap.b32 	%r94, %r91, %r92, 14;
	mov.b64 	%rd390, {%r94, %r93};
	shf.r.wrap.b32 	%r95, %r92, %r91, 18;
	shf.r.wrap.b32 	%r96, %r91, %r92, 18;
	mov.b64 	%rd391, {%r96, %r95};
	xor.b64  	%rd392, %rd390, %rd391;
	shf.l.wrap.b32 	%r97, %r91, %r92, 23;
	shf.l.wrap.b32 	%r98, %r92, %r91, 23;
	mov.b64 	%rd393, {%r98, %r97};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd365, %rd345;
	and.b64  	%rd396, %rd388, %rd395;
	xor.b64  	%rd397, %rd396, %rd345;
	add.s64 	%rd398, %rd397, %rd394;
	add.s64 	%rd399, %rd398, %rd2314;
	and.b64  	%rd400, %rd389, %rd366;
	or.b64  	%rd401, %rd389, %rd366;
	and.b64  	%rd402, %rd401, %rd346;
	or.b64  	%rd403, %rd402, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd389;
	}
	shf.r.wrap.b32 	%r101, %r100, %r99, 28;
	shf.r.wrap.b32 	%r102, %r99, %r100, 28;
	mov.b64 	%rd404, {%r102, %r101};
	shf.l.wrap.b32 	%r103, %r99, %r100, 30;
	shf.l.wrap.b32 	%r104, %r100, %r99, 30;
	mov.b64 	%rd405, {%r104, %r103};
	xor.b64  	%rd406, %rd404, %rd405;
	shf.l.wrap.b32 	%r105, %r99, %r100, 25;
	shf.l.wrap.b32 	%r106, %r100, %r99, 25;
	mov.b64 	%rd407, {%r106, %r105};
	xor.b64  	%rd408, %rd406, %rd407;
	add.s64 	%rd409, %rd408, %rd403;
	add.s64 	%rd410, %rd409, %rd399;
	add.s64 	%rd411, %rd399, -6571292209873868907;
	add.s64 	%rd412, %rd410, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r107,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r108}, %rd411;
	}
	shf.r.wrap.b32 	%r109, %r108, %r107, 14;
	shf.r.wrap.b32 	%r110, %r107, %r108, 14;
	mov.b64 	%rd413, {%r110, %r109};
	shf.r.wrap.b32 	%r111, %r108, %r107, 18;
	shf.r.wrap.b32 	%r112, %r107, %r108, 18;
	mov.b64 	%rd414, {%r112, %r111};
	xor.b64  	%rd415, %rd413, %rd414;
	shf.l.wrap.b32 	%r113, %r107, %r108, 23;
	shf.l.wrap.b32 	%r114, %r108, %r107, 23;
	mov.b64 	%rd416, {%r114, %r113};
	xor.b64  	%rd417, %rd415, %rd416;
	xor.b64  	%rd418, %rd388, %rd365;
	and.b64  	%rd419, %rd411, %rd418;
	xor.b64  	%rd420, %rd419, %rd365;
	add.s64 	%rd421, %rd420, %rd345;
	add.s64 	%rd422, %rd421, %rd417;
	add.s64 	%rd423, %rd422, %rd2313;
	add.s64 	%rd424, %rd423, 4131703408338449720;
	add.s64 	%rd425, %rd424, %rd346;
	and.b64  	%rd426, %rd412, %rd389;
	or.b64  	%rd427, %rd412, %rd389;
	and.b64  	%rd428, %rd427, %rd366;
	or.b64  	%rd429, %rd428, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r115,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r116}, %rd412;
	}
	shf.r.wrap.b32 	%r117, %r116, %r115, 28;
	shf.r.wrap.b32 	%r118, %r115, %r116, 28;
	mov.b64 	%rd430, {%r118, %r117};
	shf.l.wrap.b32 	%r119, %r115, %r116, 30;
	shf.l.wrap.b32 	%r120, %r116, %r115, 30;
	mov.b64 	%rd431, {%r120, %r119};
	xor.b64  	%rd432, %rd430, %rd431;
	shf.l.wrap.b32 	%r121, %r115, %r116, 25;
	shf.l.wrap.b32 	%r122, %r116, %r115, 25;
	mov.b64 	%rd433, {%r122, %r121};
	xor.b64  	%rd434, %rd432, %rd433;
	add.s64 	%rd435, %rd434, %rd429;
	add.s64 	%rd436, %rd435, %rd424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd425;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 14;
	shf.r.wrap.b32 	%r126, %r123, %r124, 14;
	mov.b64 	%rd437, {%r126, %r125};
	shf.r.wrap.b32 	%r127, %r124, %r123, 18;
	shf.r.wrap.b32 	%r128, %r123, %r124, 18;
	mov.b64 	%rd438, {%r128, %r127};
	xor.b64  	%rd439, %rd437, %rd438;
	shf.l.wrap.b32 	%r129, %r123, %r124, 23;
	shf.l.wrap.b32 	%r130, %r124, %r123, 23;
	mov.b64 	%rd440, {%r130, %r129};
	xor.b64  	%rd441, %rd439, %rd440;
	xor.b64  	%rd442, %rd411, %rd388;
	and.b64  	%rd443, %rd425, %rd442;
	xor.b64  	%rd444, %rd443, %rd388;
	add.s64 	%rd445, %rd444, %rd365;
	add.s64 	%rd446, %rd445, %rd441;
	add.s64 	%rd447, %rd446, %rd2312;
	add.s64 	%rd448, %rd447, 6480981068601479193;
	add.s64 	%rd449, %rd448, %rd366;
	and.b64  	%rd450, %rd436, %rd412;
	or.b64  	%rd451, %rd436, %rd412;
	and.b64  	%rd452, %rd451, %rd389;
	or.b64  	%rd453, %rd452, %rd450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd436;
	}
	shf.r.wrap.b32 	%r133, %r132, %r131, 28;
	shf.r.wrap.b32 	%r134, %r131, %r132, 28;
	mov.b64 	%rd454, {%r134, %r133};
	shf.l.wrap.b32 	%r135, %r131, %r132, 30;
	shf.l.wrap.b32 	%r136, %r132, %r131, 30;
	mov.b64 	%rd455, {%r136, %r135};
	xor.b64  	%rd456, %rd454, %rd455;
	shf.l.wrap.b32 	%r137, %r131, %r132, 25;
	shf.l.wrap.b32 	%r138, %r132, %r131, 25;
	mov.b64 	%rd457, {%r138, %r137};
	xor.b64  	%rd458, %rd456, %rd457;
	add.s64 	%rd459, %rd458, %rd453;
	add.s64 	%rd460, %rd459, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd449;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 14;
	shf.r.wrap.b32 	%r142, %r139, %r140, 14;
	mov.b64 	%rd461, {%r142, %r141};
	shf.r.wrap.b32 	%r143, %r140, %r139, 18;
	shf.r.wrap.b32 	%r144, %r139, %r140, 18;
	mov.b64 	%rd462, {%r144, %r143};
	xor.b64  	%rd463, %rd461, %rd462;
	shf.l.wrap.b32 	%r145, %r139, %r140, 23;
	shf.l.wrap.b32 	%r146, %r140, %r139, 23;
	mov.b64 	%rd464, {%r146, %r145};
	xor.b64  	%rd465, %rd463, %rd464;
	xor.b64  	%rd466, %rd425, %rd411;
	and.b64  	%rd467, %rd449, %rd466;
	xor.b64  	%rd468, %rd467, %rd411;
	add.s64 	%rd469, %rd468, %rd388;
	add.s64 	%rd470, %rd469, %rd465;
	add.s64 	%rd471, %rd470, %rd2311;
	add.s64 	%rd472, %rd471, -7908458776815382629;
	add.s64 	%rd473, %rd472, %rd389;
	and.b64  	%rd474, %rd460, %rd436;
	or.b64  	%rd475, %rd460, %rd436;
	and.b64  	%rd476, %rd475, %rd412;
	or.b64  	%rd477, %rd476, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd460;
	}
	shf.r.wrap.b32 	%r149, %r148, %r147, 28;
	shf.r.wrap.b32 	%r150, %r147, %r148, 28;
	mov.b64 	%rd478, {%r150, %r149};
	shf.l.wrap.b32 	%r151, %r147, %r148, 30;
	shf.l.wrap.b32 	%r152, %r148, %r147, 30;
	mov.b64 	%rd479, {%r152, %r151};
	xor.b64  	%rd480, %rd478, %rd479;
	shf.l.wrap.b32 	%r153, %r147, %r148, 25;
	shf.l.wrap.b32 	%r154, %r148, %r147, 25;
	mov.b64 	%rd481, {%r154, %r153};
	xor.b64  	%rd482, %rd480, %rd481;
	add.s64 	%rd483, %rd482, %rd477;
	add.s64 	%rd484, %rd483, %rd472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd473;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 14;
	shf.r.wrap.b32 	%r158, %r155, %r156, 14;
	mov.b64 	%rd485, {%r158, %r157};
	shf.r.wrap.b32 	%r159, %r156, %r155, 18;
	shf.r.wrap.b32 	%r160, %r155, %r156, 18;
	mov.b64 	%rd486, {%r160, %r159};
	xor.b64  	%rd487, %rd485, %rd486;
	shf.l.wrap.b32 	%r161, %r155, %r156, 23;
	shf.l.wrap.b32 	%r162, %r156, %r155, 23;
	mov.b64 	%rd488, {%r162, %r161};
	xor.b64  	%rd489, %rd487, %rd488;
	xor.b64  	%rd490, %rd449, %rd425;
	and.b64  	%rd491, %rd473, %rd490;
	xor.b64  	%rd492, %rd491, %rd425;
	add.s64 	%rd493, %rd492, %rd411;
	add.s64 	%rd494, %rd493, %rd489;
	add.s64 	%rd495, %rd494, %rd2310;
	add.s64 	%rd496, %rd495, -6116909921290321640;
	add.s64 	%rd497, %rd496, %rd412;
	and.b64  	%rd498, %rd484, %rd460;
	or.b64  	%rd499, %rd484, %rd460;
	and.b64  	%rd500, %rd499, %rd436;
	or.b64  	%rd501, %rd500, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd484;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 28;
	shf.r.wrap.b32 	%r166, %r163, %r164, 28;
	mov.b64 	%rd502, {%r166, %r165};
	shf.l.wrap.b32 	%r167, %r163, %r164, 30;
	shf.l.wrap.b32 	%r168, %r164, %r163, 30;
	mov.b64 	%rd503, {%r168, %r167};
	xor.b64  	%rd504, %rd502, %rd503;
	shf.l.wrap.b32 	%r169, %r163, %r164, 25;
	shf.l.wrap.b32 	%r170, %r164, %r163, 25;
	mov.b64 	%rd505, {%r170, %r169};
	xor.b64  	%rd506, %rd504, %rd505;
	add.s64 	%rd507, %rd506, %rd501;
	add.s64 	%rd508, %rd507, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r171,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r172}, %rd497;
	}
	shf.r.wrap.b32 	%r173, %r172, %r171, 14;
	shf.r.wrap.b32 	%r174, %r171, %r172, 14;
	mov.b64 	%rd509, {%r174, %r173};
	shf.r.wrap.b32 	%r175, %r172, %r171, 18;
	shf.r.wrap.b32 	%r176, %r171, %r172, 18;
	mov.b64 	%rd510, {%r176, %r175};
	xor.b64  	%rd511, %rd509, %rd510;
	shf.l.wrap.b32 	%r177, %r171, %r172, 23;
	shf.l.wrap.b32 	%r178, %r172, %r171, 23;
	mov.b64 	%rd512, {%r178, %r177};
	xor.b64  	%rd513, %rd511, %rd512;
	xor.b64  	%rd514, %rd473, %rd449;
	and.b64  	%rd515, %rd497, %rd514;
	xor.b64  	%rd516, %rd515, %rd449;
	add.s64 	%rd517, %rd516, %rd425;
	add.s64 	%rd518, %rd517, %rd513;
	add.s64 	%rd519, %rd518, %rd2309;
	add.s64 	%rd520, %rd519, -2880145864133508542;
	add.s64 	%rd521, %rd520, %rd436;
	and.b64  	%rd522, %rd508, %rd484;
	or.b64  	%rd523, %rd508, %rd484;
	and.b64  	%rd524, %rd523, %rd460;
	or.b64  	%rd525, %rd524, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r179,%dummy}, %rd508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd508;
	}
	shf.r.wrap.b32 	%r181, %r180, %r179, 28;
	shf.r.wrap.b32 	%r182, %r179, %r180, 28;
	mov.b64 	%rd526, {%r182, %r181};
	shf.l.wrap.b32 	%r183, %r179, %r180, 30;
	shf.l.wrap.b32 	%r184, %r180, %r179, 30;
	mov.b64 	%rd527, {%r184, %r183};
	xor.b64  	%rd528, %rd526, %rd527;
	shf.l.wrap.b32 	%r185, %r179, %r180, 25;
	shf.l.wrap.b32 	%r186, %r180, %r179, 25;
	mov.b64 	%rd529, {%r186, %r185};
	xor.b64  	%rd530, %rd528, %rd529;
	add.s64 	%rd531, %rd530, %rd525;
	add.s64 	%rd532, %rd531, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd521;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 14;
	shf.r.wrap.b32 	%r190, %r187, %r188, 14;
	mov.b64 	%rd533, {%r190, %r189};
	shf.r.wrap.b32 	%r191, %r188, %r187, 18;
	shf.r.wrap.b32 	%r192, %r187, %r188, 18;
	mov.b64 	%rd534, {%r192, %r191};
	xor.b64  	%rd535, %rd533, %rd534;
	shf.l.wrap.b32 	%r193, %r187, %r188, 23;
	shf.l.wrap.b32 	%r194, %r188, %r187, 23;
	mov.b64 	%rd536, {%r194, %r193};
	xor.b64  	%rd537, %rd535, %rd536;
	xor.b64  	%rd538, %rd497, %rd473;
	and.b64  	%rd539, %rd521, %rd538;
	xor.b64  	%rd540, %rd539, %rd473;
	add.s64 	%rd541, %rd540, %rd449;
	add.s64 	%rd542, %rd541, %rd537;
	add.s64 	%rd543, %rd542, %rd2308;
	add.s64 	%rd544, %rd543, 1334009975649890238;
	add.s64 	%rd545, %rd544, %rd460;
	and.b64  	%rd546, %rd532, %rd508;
	or.b64  	%rd547, %rd532, %rd508;
	and.b64  	%rd548, %rd547, %rd484;
	or.b64  	%rd549, %rd548, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd532;
	}
	shf.r.wrap.b32 	%r197, %r196, %r195, 28;
	shf.r.wrap.b32 	%r198, %r195, %r196, 28;
	mov.b64 	%rd550, {%r198, %r197};
	shf.l.wrap.b32 	%r199, %r195, %r196, 30;
	shf.l.wrap.b32 	%r200, %r196, %r195, 30;
	mov.b64 	%rd551, {%r200, %r199};
	xor.b64  	%rd552, %rd550, %rd551;
	shf.l.wrap.b32 	%r201, %r195, %r196, 25;
	shf.l.wrap.b32 	%r202, %r196, %r195, 25;
	mov.b64 	%rd553, {%r202, %r201};
	xor.b64  	%rd554, %rd552, %rd553;
	add.s64 	%rd555, %rd554, %rd549;
	add.s64 	%rd556, %rd555, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd545;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 14;
	shf.r.wrap.b32 	%r206, %r203, %r204, 14;
	mov.b64 	%rd557, {%r206, %r205};
	shf.r.wrap.b32 	%r207, %r204, %r203, 18;
	shf.r.wrap.b32 	%r208, %r203, %r204, 18;
	mov.b64 	%rd558, {%r208, %r207};
	xor.b64  	%rd559, %rd557, %rd558;
	shf.l.wrap.b32 	%r209, %r203, %r204, 23;
	shf.l.wrap.b32 	%r210, %r204, %r203, 23;
	mov.b64 	%rd560, {%r210, %r209};
	xor.b64  	%rd561, %rd559, %rd560;
	xor.b64  	%rd562, %rd521, %rd497;
	and.b64  	%rd563, %rd545, %rd562;
	xor.b64  	%rd564, %rd563, %rd497;
	add.s64 	%rd565, %rd564, %rd473;
	add.s64 	%rd566, %rd565, %rd561;
	add.s64 	%rd567, %rd566, %rd2307;
	add.s64 	%rd568, %rd567, 2608012711638119052;
	add.s64 	%rd569, %rd568, %rd484;
	and.b64  	%rd570, %rd556, %rd532;
	or.b64  	%rd571, %rd556, %rd532;
	and.b64  	%rd572, %rd571, %rd508;
	or.b64  	%rd573, %rd572, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd556;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 28;
	shf.r.wrap.b32 	%r214, %r211, %r212, 28;
	mov.b64 	%rd574, {%r214, %r213};
	shf.l.wrap.b32 	%r215, %r211, %r212, 30;
	shf.l.wrap.b32 	%r216, %r212, %r211, 30;
	mov.b64 	%rd575, {%r216, %r215};
	xor.b64  	%rd576, %rd574, %rd575;
	shf.l.wrap.b32 	%r217, %r211, %r212, 25;
	shf.l.wrap.b32 	%r218, %r212, %r211, 25;
	mov.b64 	%rd577, {%r218, %r217};
	xor.b64  	%rd578, %rd576, %rd577;
	add.s64 	%rd579, %rd578, %rd573;
	add.s64 	%rd580, %rd579, %rd568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd569;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 14;
	shf.r.wrap.b32 	%r222, %r219, %r220, 14;
	mov.b64 	%rd581, {%r222, %r221};
	shf.r.wrap.b32 	%r223, %r220, %r219, 18;
	shf.r.wrap.b32 	%r224, %r219, %r220, 18;
	mov.b64 	%rd582, {%r224, %r223};
	xor.b64  	%rd583, %rd581, %rd582;
	shf.l.wrap.b32 	%r225, %r219, %r220, 23;
	shf.l.wrap.b32 	%r226, %r220, %r219, 23;
	mov.b64 	%rd584, {%r226, %r225};
	xor.b64  	%rd585, %rd583, %rd584;
	xor.b64  	%rd586, %rd545, %rd521;
	and.b64  	%rd587, %rd569, %rd586;
	xor.b64  	%rd588, %rd587, %rd521;
	add.s64 	%rd589, %rd588, %rd497;
	add.s64 	%rd590, %rd589, %rd585;
	add.s64 	%rd591, %rd590, %rd2306;
	add.s64 	%rd592, %rd591, 6128411473006802146;
	add.s64 	%rd593, %rd592, %rd508;
	and.b64  	%rd594, %rd580, %rd556;
	or.b64  	%rd595, %rd580, %rd556;
	and.b64  	%rd596, %rd595, %rd532;
	or.b64  	%rd597, %rd596, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd580;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 28;
	shf.r.wrap.b32 	%r230, %r227, %r228, 28;
	mov.b64 	%rd598, {%r230, %r229};
	shf.l.wrap.b32 	%r231, %r227, %r228, 30;
	shf.l.wrap.b32 	%r232, %r228, %r227, 30;
	mov.b64 	%rd599, {%r232, %r231};
	xor.b64  	%rd600, %rd598, %rd599;
	shf.l.wrap.b32 	%r233, %r227, %r228, 25;
	shf.l.wrap.b32 	%r234, %r228, %r227, 25;
	mov.b64 	%rd601, {%r234, %r233};
	xor.b64  	%rd602, %rd600, %rd601;
	add.s64 	%rd603, %rd602, %rd597;
	add.s64 	%rd604, %rd603, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd593;
	}
	shf.r.wrap.b32 	%r237, %r236, %r235, 14;
	shf.r.wrap.b32 	%r238, %r235, %r236, 14;
	mov.b64 	%rd605, {%r238, %r237};
	shf.r.wrap.b32 	%r239, %r236, %r235, 18;
	shf.r.wrap.b32 	%r240, %r235, %r236, 18;
	mov.b64 	%rd606, {%r240, %r239};
	xor.b64  	%rd607, %rd605, %rd606;
	shf.l.wrap.b32 	%r241, %r235, %r236, 23;
	shf.l.wrap.b32 	%r242, %r236, %r235, 23;
	mov.b64 	%rd608, {%r242, %r241};
	xor.b64  	%rd609, %rd607, %rd608;
	xor.b64  	%rd610, %rd569, %rd545;
	and.b64  	%rd611, %rd593, %rd610;
	xor.b64  	%rd612, %rd611, %rd545;
	add.s64 	%rd613, %rd612, %rd521;
	add.s64 	%rd614, %rd613, %rd609;
	add.s64 	%rd615, %rd614, %rd2305;
	add.s64 	%rd616, %rd615, 8268148722764581231;
	add.s64 	%rd2325, %rd616, %rd532;
	and.b64  	%rd617, %rd604, %rd580;
	or.b64  	%rd618, %rd604, %rd580;
	and.b64  	%rd619, %rd618, %rd556;
	or.b64  	%rd620, %rd619, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd604;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 28;
	shf.r.wrap.b32 	%r246, %r243, %r244, 28;
	mov.b64 	%rd621, {%r246, %r245};
	shf.l.wrap.b32 	%r247, %r243, %r244, 30;
	shf.l.wrap.b32 	%r248, %r244, %r243, 30;
	mov.b64 	%rd622, {%r248, %r247};
	xor.b64  	%rd623, %rd621, %rd622;
	shf.l.wrap.b32 	%r249, %r243, %r244, 25;
	shf.l.wrap.b32 	%r250, %r244, %r243, 25;
	mov.b64 	%rd624, {%r250, %r249};
	xor.b64  	%rd625, %rd623, %rd624;
	add.s64 	%rd626, %rd625, %rd620;
	add.s64 	%rd2321, %rd626, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd2325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd2325;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 14;
	shf.r.wrap.b32 	%r254, %r251, %r252, 14;
	mov.b64 	%rd627, {%r254, %r253};
	shf.r.wrap.b32 	%r255, %r252, %r251, 18;
	shf.r.wrap.b32 	%r256, %r251, %r252, 18;
	mov.b64 	%rd628, {%r256, %r255};
	xor.b64  	%rd629, %rd627, %rd628;
	shf.l.wrap.b32 	%r257, %r251, %r252, 23;
	shf.l.wrap.b32 	%r258, %r252, %r251, 23;
	mov.b64 	%rd630, {%r258, %r257};
	xor.b64  	%rd631, %rd629, %rd630;
	xor.b64  	%rd632, %rd593, %rd569;
	and.b64  	%rd633, %rd2325, %rd632;
	xor.b64  	%rd634, %rd633, %rd569;
	add.s64 	%rd635, %rd634, %rd545;
	add.s64 	%rd636, %rd635, %rd631;
	add.s64 	%rd637, %rd636, %rd2304;
	add.s64 	%rd638, %rd637, -9160688886553864527;
	add.s64 	%rd2324, %rd638, %rd556;
	and.b64  	%rd639, %rd2321, %rd604;
	or.b64  	%rd640, %rd2321, %rd604;
	and.b64  	%rd641, %rd640, %rd580;
	or.b64  	%rd642, %rd641, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd2321;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 28;
	shf.r.wrap.b32 	%r262, %r259, %r260, 28;
	mov.b64 	%rd643, {%r262, %r261};
	shf.l.wrap.b32 	%r263, %r259, %r260, 30;
	shf.l.wrap.b32 	%r264, %r260, %r259, 30;
	mov.b64 	%rd644, {%r264, %r263};
	xor.b64  	%rd645, %rd643, %rd644;
	shf.l.wrap.b32 	%r265, %r259, %r260, 25;
	shf.l.wrap.b32 	%r266, %r260, %r259, 25;
	mov.b64 	%rd646, {%r266, %r265};
	xor.b64  	%rd647, %rd645, %rd646;
	add.s64 	%rd648, %rd647, %rd642;
	add.s64 	%rd2320, %rd648, %rd638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd2324;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 14;
	shf.r.wrap.b32 	%r270, %r267, %r268, 14;
	mov.b64 	%rd649, {%r270, %r269};
	shf.r.wrap.b32 	%r271, %r268, %r267, 18;
	shf.r.wrap.b32 	%r272, %r267, %r268, 18;
	mov.b64 	%rd650, {%r272, %r271};
	xor.b64  	%rd651, %rd649, %rd650;
	shf.l.wrap.b32 	%r273, %r267, %r268, 23;
	shf.l.wrap.b32 	%r274, %r268, %r267, 23;
	mov.b64 	%rd652, {%r274, %r273};
	xor.b64  	%rd653, %rd651, %rd652;
	xor.b64  	%rd654, %rd2325, %rd593;
	and.b64  	%rd655, %rd2324, %rd654;
	xor.b64  	%rd656, %rd655, %rd593;
	add.s64 	%rd657, %rd656, %rd569;
	add.s64 	%rd658, %rd657, %rd653;
	add.s64 	%rd659, %rd658, %rd2303;
	add.s64 	%rd660, %rd659, -7215885187991268811;
	add.s64 	%rd2323, %rd660, %rd580;
	and.b64  	%rd661, %rd2320, %rd2321;
	or.b64  	%rd662, %rd2320, %rd2321;
	and.b64  	%rd663, %rd662, %rd604;
	or.b64  	%rd664, %rd663, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd2320;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 28;
	shf.r.wrap.b32 	%r278, %r275, %r276, 28;
	mov.b64 	%rd665, {%r278, %r277};
	shf.l.wrap.b32 	%r279, %r275, %r276, 30;
	shf.l.wrap.b32 	%r280, %r276, %r275, 30;
	mov.b64 	%rd666, {%r280, %r279};
	xor.b64  	%rd667, %rd665, %rd666;
	shf.l.wrap.b32 	%r281, %r275, %r276, 25;
	shf.l.wrap.b32 	%r282, %r276, %r275, 25;
	mov.b64 	%rd668, {%r282, %r281};
	xor.b64  	%rd669, %rd667, %rd668;
	add.s64 	%rd670, %rd669, %rd664;
	add.s64 	%rd2319, %rd670, %rd660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd2323;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 14;
	shf.r.wrap.b32 	%r286, %r283, %r284, 14;
	mov.b64 	%rd671, {%r286, %r285};
	shf.r.wrap.b32 	%r287, %r284, %r283, 18;
	shf.r.wrap.b32 	%r288, %r283, %r284, 18;
	mov.b64 	%rd672, {%r288, %r287};
	xor.b64  	%rd673, %rd671, %rd672;
	shf.l.wrap.b32 	%r289, %r283, %r284, 23;
	shf.l.wrap.b32 	%r290, %r284, %r283, 23;
	mov.b64 	%rd674, {%r290, %r289};
	xor.b64  	%rd675, %rd673, %rd674;
	xor.b64  	%rd676, %rd2324, %rd2325;
	and.b64  	%rd677, %rd2323, %rd676;
	xor.b64  	%rd678, %rd677, %rd2325;
	add.s64 	%rd679, %rd678, %rd593;
	add.s64 	%rd680, %rd679, %rd675;
	add.s64 	%rd681, %rd680, %rd2302;
	add.s64 	%rd682, %rd681, -4495734319001033068;
	add.s64 	%rd2322, %rd682, %rd604;
	and.b64  	%rd683, %rd2319, %rd2320;
	or.b64  	%rd684, %rd2319, %rd2320;
	and.b64  	%rd685, %rd684, %rd2321;
	or.b64  	%rd686, %rd685, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r291,%dummy}, %rd2319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd2319;
	}
	shf.r.wrap.b32 	%r293, %r292, %r291, 28;
	shf.r.wrap.b32 	%r294, %r291, %r292, 28;
	mov.b64 	%rd687, {%r294, %r293};
	shf.l.wrap.b32 	%r295, %r291, %r292, 30;
	shf.l.wrap.b32 	%r296, %r292, %r291, 30;
	mov.b64 	%rd688, {%r296, %r295};
	xor.b64  	%rd689, %rd687, %rd688;
	shf.l.wrap.b32 	%r297, %r291, %r292, 25;
	shf.l.wrap.b32 	%r298, %r292, %r291, 25;
	mov.b64 	%rd690, {%r298, %r297};
	xor.b64  	%rd691, %rd689, %rd690;
	add.s64 	%rd692, %rd691, %rd686;
	add.s64 	%rd2318, %rd692, %rd682;
	mov.u32 	%r1484, 16;

$L__BB4_8:
	.pragma "nounroll";
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r299}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd2303;
	}
	shf.l.wrap.b32 	%r301, %r300, %r299, 3;
	shf.l.wrap.b32 	%r302, %r299, %r300, 3;
	mov.b64 	%rd693, {%r302, %r301};
	shf.r.wrap.b32 	%r303, %r299, %r300, 19;
	shf.r.wrap.b32 	%r304, %r300, %r299, 19;
	mov.b64 	%rd694, {%r304, %r303};
	xor.b64  	%rd695, %rd694, %rd693;
	shr.u64 	%rd696, %rd2303, 6;
	xor.b64  	%rd697, %rd695, %rd696;
	add.s64 	%rd698, %rd2308, %rd2317;
	add.s64 	%rd699, %rd698, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd2316;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 8;
	shf.r.wrap.b32 	%r308, %r305, %r306, 8;
	mov.b64 	%rd700, {%r308, %r307};
	shf.r.wrap.b32 	%r309, %r306, %r305, 1;
	shf.r.wrap.b32 	%r310, %r305, %r306, 1;
	mov.b64 	%rd701, {%r310, %r309};
	xor.b64  	%rd702, %rd701, %rd700;
	shr.u64 	%rd703, %rd2316, 7;
	xor.b64  	%rd704, %rd702, %rd703;
	add.s64 	%rd2317, %rd699, %rd704;
	mul.wide.u32 	%rd705, %r1484, 8;
	mov.u64 	%rd706, k;
	add.s64 	%rd707, %rd706, %rd705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd2322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd2322;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 18;
	shf.r.wrap.b32 	%r314, %r311, %r312, 18;
	mov.b64 	%rd708, {%r314, %r313};
	shf.r.wrap.b32 	%r315, %r312, %r311, 14;
	shf.r.wrap.b32 	%r316, %r311, %r312, 14;
	mov.b64 	%rd709, {%r316, %r315};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.l.wrap.b32 	%r317, %r311, %r312, 23;
	shf.l.wrap.b32 	%r318, %r312, %r311, 23;
	mov.b64 	%rd711, {%r318, %r317};
	xor.b64  	%rd712, %rd710, %rd711;
	xor.b64  	%rd713, %rd2323, %rd2324;
	and.b64  	%rd714, %rd2322, %rd713;
	xor.b64  	%rd715, %rd714, %rd2324;
	add.s64 	%rd716, %rd715, %rd2325;
	add.s64 	%rd717, %rd716, %rd712;
	ld.const.u64 	%rd718, [%rd707];
	add.s64 	%rd719, %rd717, %rd718;
	add.s64 	%rd720, %rd719, %rd2317;
	add.s64 	%rd721, %rd720, %rd2321;
	or.b64  	%rd722, %rd2318, %rd2319;
	and.b64  	%rd723, %rd722, %rd2320;
	and.b64  	%rd724, %rd2318, %rd2319;
	or.b64  	%rd725, %rd723, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r320,%dummy}, %rd2318;
	}
	shf.l.wrap.b32 	%r321, %r320, %r319, 30;
	shf.l.wrap.b32 	%r322, %r319, %r320, 30;
	mov.b64 	%rd726, {%r322, %r321};
	shf.r.wrap.b32 	%r323, %r319, %r320, 28;
	shf.r.wrap.b32 	%r324, %r320, %r319, 28;
	mov.b64 	%rd727, {%r324, %r323};
	xor.b64  	%rd728, %rd727, %rd726;
	shf.l.wrap.b32 	%r325, %r320, %r319, 25;
	shf.l.wrap.b32 	%r326, %r319, %r320, 25;
	mov.b64 	%rd729, {%r326, %r325};
	xor.b64  	%rd730, %rd728, %rd729;
	add.s64 	%rd731, %rd730, %rd725;
	add.s64 	%rd732, %rd731, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r327}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r328,%dummy}, %rd2302;
	}
	shf.l.wrap.b32 	%r329, %r328, %r327, 3;
	shf.l.wrap.b32 	%r330, %r327, %r328, 3;
	mov.b64 	%rd733, {%r330, %r329};
	shf.r.wrap.b32 	%r331, %r327, %r328, 19;
	shf.r.wrap.b32 	%r332, %r328, %r327, 19;
	mov.b64 	%rd734, {%r332, %r331};
	xor.b64  	%rd735, %rd734, %rd733;
	shr.u64 	%rd736, %rd2302, 6;
	xor.b64  	%rd737, %rd735, %rd736;
	add.s64 	%rd738, %rd2307, %rd2316;
	add.s64 	%rd739, %rd738, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd2315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r334}, %rd2315;
	}
	shf.r.wrap.b32 	%r335, %r334, %r333, 8;
	shf.r.wrap.b32 	%r336, %r333, %r334, 8;
	mov.b64 	%rd740, {%r336, %r335};
	shf.r.wrap.b32 	%r337, %r334, %r333, 1;
	shf.r.wrap.b32 	%r338, %r333, %r334, 1;
	mov.b64 	%rd741, {%r338, %r337};
	xor.b64  	%rd742, %rd741, %rd740;
	shr.u64 	%rd743, %rd2315, 7;
	xor.b64  	%rd744, %rd742, %rd743;
	add.s64 	%rd2316, %rd739, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd721;
	}
	shf.r.wrap.b32 	%r341, %r340, %r339, 14;
	shf.r.wrap.b32 	%r342, %r339, %r340, 14;
	mov.b64 	%rd745, {%r342, %r341};
	shf.r.wrap.b32 	%r343, %r340, %r339, 18;
	shf.r.wrap.b32 	%r344, %r339, %r340, 18;
	mov.b64 	%rd746, {%r344, %r343};
	xor.b64  	%rd747, %rd745, %rd746;
	shf.l.wrap.b32 	%r345, %r339, %r340, 23;
	shf.l.wrap.b32 	%r346, %r340, %r339, 23;
	mov.b64 	%rd748, {%r346, %r345};
	xor.b64  	%rd749, %rd747, %rd748;
	xor.b64  	%rd750, %rd2322, %rd2323;
	and.b64  	%rd751, %rd721, %rd750;
	xor.b64  	%rd752, %rd751, %rd2323;
	add.s64 	%rd753, %rd752, %rd2324;
	add.s64 	%rd754, %rd753, %rd749;
	ld.const.u64 	%rd755, [%rd707+8];
	add.s64 	%rd756, %rd754, %rd755;
	add.s64 	%rd757, %rd756, %rd2316;
	add.s64 	%rd758, %rd757, %rd2320;
	and.b64  	%rd759, %rd732, %rd2318;
	or.b64  	%rd760, %rd732, %rd2318;
	and.b64  	%rd761, %rd760, %rd2319;
	or.b64  	%rd762, %rd761, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd732;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 28;
	shf.r.wrap.b32 	%r350, %r347, %r348, 28;
	mov.b64 	%rd763, {%r350, %r349};
	shf.l.wrap.b32 	%r351, %r347, %r348, 30;
	shf.l.wrap.b32 	%r352, %r348, %r347, 30;
	mov.b64 	%rd764, {%r352, %r351};
	xor.b64  	%rd765, %rd763, %rd764;
	shf.l.wrap.b32 	%r353, %r347, %r348, 25;
	shf.l.wrap.b32 	%r354, %r348, %r347, 25;
	mov.b64 	%rd766, {%r354, %r353};
	xor.b64  	%rd767, %rd765, %rd766;
	add.s64 	%rd768, %rd767, %rd762;
	add.s64 	%rd769, %rd768, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd2317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd2317;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 19;
	shf.r.wrap.b32 	%r358, %r355, %r356, 19;
	mov.b64 	%rd770, {%r358, %r357};
	shf.l.wrap.b32 	%r359, %r355, %r356, 3;
	shf.l.wrap.b32 	%r360, %r356, %r355, 3;
	mov.b64 	%rd771, {%r360, %r359};
	xor.b64  	%rd772, %rd770, %rd771;
	shr.u64 	%rd773, %rd2317, 6;
	xor.b64  	%rd774, %rd772, %rd773;
	add.s64 	%rd775, %rd2306, %rd2315;
	add.s64 	%rd776, %rd775, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd2314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd2314;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 8;
	shf.r.wrap.b32 	%r364, %r361, %r362, 8;
	mov.b64 	%rd777, {%r364, %r363};
	shf.r.wrap.b32 	%r365, %r362, %r361, 1;
	shf.r.wrap.b32 	%r366, %r361, %r362, 1;
	mov.b64 	%rd778, {%r366, %r365};
	xor.b64  	%rd779, %rd778, %rd777;
	shr.u64 	%rd780, %rd2314, 7;
	xor.b64  	%rd781, %rd779, %rd780;
	add.s64 	%rd2315, %rd776, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd758;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 14;
	shf.r.wrap.b32 	%r370, %r367, %r368, 14;
	mov.b64 	%rd782, {%r370, %r369};
	shf.r.wrap.b32 	%r371, %r368, %r367, 18;
	shf.r.wrap.b32 	%r372, %r367, %r368, 18;
	mov.b64 	%rd783, {%r372, %r371};
	xor.b64  	%rd784, %rd782, %rd783;
	shf.l.wrap.b32 	%r373, %r367, %r368, 23;
	shf.l.wrap.b32 	%r374, %r368, %r367, 23;
	mov.b64 	%rd785, {%r374, %r373};
	xor.b64  	%rd786, %rd784, %rd785;
	xor.b64  	%rd787, %rd721, %rd2322;
	and.b64  	%rd788, %rd758, %rd787;
	xor.b64  	%rd789, %rd788, %rd2322;
	add.s64 	%rd790, %rd789, %rd2323;
	add.s64 	%rd791, %rd790, %rd786;
	ld.const.u64 	%rd792, [%rd707+16];
	add.s64 	%rd793, %rd791, %rd792;
	add.s64 	%rd794, %rd793, %rd2315;
	add.s64 	%rd795, %rd794, %rd2319;
	and.b64  	%rd796, %rd769, %rd732;
	or.b64  	%rd797, %rd769, %rd732;
	and.b64  	%rd798, %rd797, %rd2318;
	or.b64  	%rd799, %rd798, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r375,%dummy}, %rd769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd769;
	}
	shf.r.wrap.b32 	%r377, %r376, %r375, 28;
	shf.r.wrap.b32 	%r378, %r375, %r376, 28;
	mov.b64 	%rd800, {%r378, %r377};
	shf.l.wrap.b32 	%r379, %r375, %r376, 30;
	shf.l.wrap.b32 	%r380, %r376, %r375, 30;
	mov.b64 	%rd801, {%r380, %r379};
	xor.b64  	%rd802, %rd800, %rd801;
	shf.l.wrap.b32 	%r381, %r375, %r376, 25;
	shf.l.wrap.b32 	%r382, %r376, %r375, 25;
	mov.b64 	%rd803, {%r382, %r381};
	xor.b64  	%rd804, %rd802, %rd803;
	add.s64 	%rd805, %rd804, %rd799;
	add.s64 	%rd806, %rd805, %rd794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd2316;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 19;
	shf.r.wrap.b32 	%r386, %r383, %r384, 19;
	mov.b64 	%rd807, {%r386, %r385};
	shf.l.wrap.b32 	%r387, %r383, %r384, 3;
	shf.l.wrap.b32 	%r388, %r384, %r383, 3;
	mov.b64 	%rd808, {%r388, %r387};
	xor.b64  	%rd809, %rd807, %rd808;
	shr.u64 	%rd810, %rd2316, 6;
	xor.b64  	%rd811, %rd809, %rd810;
	add.s64 	%rd812, %rd2305, %rd2314;
	add.s64 	%rd813, %rd812, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd2313;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 8;
	shf.r.wrap.b32 	%r392, %r389, %r390, 8;
	mov.b64 	%rd814, {%r392, %r391};
	shf.r.wrap.b32 	%r393, %r390, %r389, 1;
	shf.r.wrap.b32 	%r394, %r389, %r390, 1;
	mov.b64 	%rd815, {%r394, %r393};
	xor.b64  	%rd816, %rd815, %rd814;
	shr.u64 	%rd817, %rd2313, 7;
	xor.b64  	%rd818, %rd816, %rd817;
	add.s64 	%rd2314, %rd813, %rd818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd795;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 14;
	shf.r.wrap.b32 	%r398, %r395, %r396, 14;
	mov.b64 	%rd819, {%r398, %r397};
	shf.r.wrap.b32 	%r399, %r396, %r395, 18;
	shf.r.wrap.b32 	%r400, %r395, %r396, 18;
	mov.b64 	%rd820, {%r400, %r399};
	xor.b64  	%rd821, %rd819, %rd820;
	shf.l.wrap.b32 	%r401, %r395, %r396, 23;
	shf.l.wrap.b32 	%r402, %r396, %r395, 23;
	mov.b64 	%rd822, {%r402, %r401};
	xor.b64  	%rd823, %rd821, %rd822;
	xor.b64  	%rd824, %rd758, %rd721;
	and.b64  	%rd825, %rd795, %rd824;
	xor.b64  	%rd826, %rd825, %rd721;
	add.s64 	%rd827, %rd826, %rd2322;
	add.s64 	%rd828, %rd827, %rd823;
	ld.const.u64 	%rd829, [%rd707+24];
	add.s64 	%rd830, %rd828, %rd829;
	add.s64 	%rd831, %rd830, %rd2314;
	add.s64 	%rd832, %rd831, %rd2318;
	and.b64  	%rd833, %rd806, %rd769;
	or.b64  	%rd834, %rd806, %rd769;
	and.b64  	%rd835, %rd834, %rd732;
	or.b64  	%rd836, %rd835, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd806;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 28;
	shf.r.wrap.b32 	%r406, %r403, %r404, 28;
	mov.b64 	%rd837, {%r406, %r405};
	shf.l.wrap.b32 	%r407, %r403, %r404, 30;
	shf.l.wrap.b32 	%r408, %r404, %r403, 30;
	mov.b64 	%rd838, {%r408, %r407};
	xor.b64  	%rd839, %rd837, %rd838;
	shf.l.wrap.b32 	%r409, %r403, %r404, 25;
	shf.l.wrap.b32 	%r410, %r404, %r403, 25;
	mov.b64 	%rd840, {%r410, %r409};
	xor.b64  	%rd841, %rd839, %rd840;
	add.s64 	%rd842, %rd841, %rd836;
	add.s64 	%rd843, %rd842, %rd831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd2315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd2315;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 19;
	shf.r.wrap.b32 	%r414, %r411, %r412, 19;
	mov.b64 	%rd844, {%r414, %r413};
	shf.l.wrap.b32 	%r415, %r411, %r412, 3;
	shf.l.wrap.b32 	%r416, %r412, %r411, 3;
	mov.b64 	%rd845, {%r416, %r415};
	xor.b64  	%rd846, %rd844, %rd845;
	shr.u64 	%rd847, %rd2315, 6;
	xor.b64  	%rd848, %rd846, %rd847;
	add.s64 	%rd849, %rd2304, %rd2313;
	add.s64 	%rd850, %rd849, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd2312;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 8;
	shf.r.wrap.b32 	%r420, %r417, %r418, 8;
	mov.b64 	%rd851, {%r420, %r419};
	shf.r.wrap.b32 	%r421, %r418, %r417, 1;
	shf.r.wrap.b32 	%r422, %r417, %r418, 1;
	mov.b64 	%rd852, {%r422, %r421};
	xor.b64  	%rd853, %rd852, %rd851;
	shr.u64 	%rd854, %rd2312, 7;
	xor.b64  	%rd855, %rd853, %rd854;
	add.s64 	%rd2313, %rd850, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd832;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 14;
	shf.r.wrap.b32 	%r426, %r423, %r424, 14;
	mov.b64 	%rd856, {%r426, %r425};
	shf.r.wrap.b32 	%r427, %r424, %r423, 18;
	shf.r.wrap.b32 	%r428, %r423, %r424, 18;
	mov.b64 	%rd857, {%r428, %r427};
	xor.b64  	%rd858, %rd856, %rd857;
	shf.l.wrap.b32 	%r429, %r423, %r424, 23;
	shf.l.wrap.b32 	%r430, %r424, %r423, 23;
	mov.b64 	%rd859, {%r430, %r429};
	xor.b64  	%rd860, %rd858, %rd859;
	xor.b64  	%rd861, %rd795, %rd758;
	and.b64  	%rd862, %rd832, %rd861;
	xor.b64  	%rd863, %rd862, %rd758;
	add.s64 	%rd864, %rd863, %rd721;
	add.s64 	%rd865, %rd864, %rd860;
	ld.const.u64 	%rd866, [%rd707+32];
	add.s64 	%rd867, %rd865, %rd866;
	add.s64 	%rd868, %rd867, %rd2313;
	add.s64 	%rd869, %rd868, %rd732;
	and.b64  	%rd870, %rd843, %rd806;
	or.b64  	%rd871, %rd843, %rd806;
	and.b64  	%rd872, %rd871, %rd769;
	or.b64  	%rd873, %rd872, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd843;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 28;
	shf.r.wrap.b32 	%r434, %r431, %r432, 28;
	mov.b64 	%rd874, {%r434, %r433};
	shf.l.wrap.b32 	%r435, %r431, %r432, 30;
	shf.l.wrap.b32 	%r436, %r432, %r431, 30;
	mov.b64 	%rd875, {%r436, %r435};
	xor.b64  	%rd876, %rd874, %rd875;
	shf.l.wrap.b32 	%r437, %r431, %r432, 25;
	shf.l.wrap.b32 	%r438, %r432, %r431, 25;
	mov.b64 	%rd877, {%r438, %r437};
	xor.b64  	%rd878, %rd876, %rd877;
	add.s64 	%rd879, %rd878, %rd873;
	add.s64 	%rd880, %rd879, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd2314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd2314;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 19;
	shf.r.wrap.b32 	%r442, %r439, %r440, 19;
	mov.b64 	%rd881, {%r442, %r441};
	shf.l.wrap.b32 	%r443, %r439, %r440, 3;
	shf.l.wrap.b32 	%r444, %r440, %r439, 3;
	mov.b64 	%rd882, {%r444, %r443};
	xor.b64  	%rd883, %rd881, %rd882;
	shr.u64 	%rd884, %rd2314, 6;
	xor.b64  	%rd885, %rd883, %rd884;
	add.s64 	%rd886, %rd2303, %rd2312;
	add.s64 	%rd887, %rd886, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd2311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd2311;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 8;
	shf.r.wrap.b32 	%r448, %r445, %r446, 8;
	mov.b64 	%rd888, {%r448, %r447};
	shf.r.wrap.b32 	%r449, %r446, %r445, 1;
	shf.r.wrap.b32 	%r450, %r445, %r446, 1;
	mov.b64 	%rd889, {%r450, %r449};
	xor.b64  	%rd890, %rd889, %rd888;
	shr.u64 	%rd891, %rd2311, 7;
	xor.b64  	%rd892, %rd890, %rd891;
	add.s64 	%rd2312, %rd887, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd869;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 14;
	shf.r.wrap.b32 	%r454, %r451, %r452, 14;
	mov.b64 	%rd893, {%r454, %r453};
	shf.r.wrap.b32 	%r455, %r452, %r451, 18;
	shf.r.wrap.b32 	%r456, %r451, %r452, 18;
	mov.b64 	%rd894, {%r456, %r455};
	xor.b64  	%rd895, %rd893, %rd894;
	shf.l.wrap.b32 	%r457, %r451, %r452, 23;
	shf.l.wrap.b32 	%r458, %r452, %r451, 23;
	mov.b64 	%rd896, {%r458, %r457};
	xor.b64  	%rd897, %rd895, %rd896;
	xor.b64  	%rd898, %rd832, %rd795;
	and.b64  	%rd899, %rd869, %rd898;
	xor.b64  	%rd900, %rd899, %rd795;
	add.s64 	%rd901, %rd900, %rd758;
	add.s64 	%rd902, %rd901, %rd897;
	ld.const.u64 	%rd903, [%rd707+40];
	add.s64 	%rd904, %rd902, %rd903;
	add.s64 	%rd905, %rd904, %rd2312;
	add.s64 	%rd906, %rd905, %rd769;
	and.b64  	%rd907, %rd880, %rd843;
	or.b64  	%rd908, %rd880, %rd843;
	and.b64  	%rd909, %rd908, %rd806;
	or.b64  	%rd910, %rd909, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd880;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 28;
	shf.r.wrap.b32 	%r462, %r459, %r460, 28;
	mov.b64 	%rd911, {%r462, %r461};
	shf.l.wrap.b32 	%r463, %r459, %r460, 30;
	shf.l.wrap.b32 	%r464, %r460, %r459, 30;
	mov.b64 	%rd912, {%r464, %r463};
	xor.b64  	%rd913, %rd911, %rd912;
	shf.l.wrap.b32 	%r465, %r459, %r460, 25;
	shf.l.wrap.b32 	%r466, %r460, %r459, 25;
	mov.b64 	%rd914, {%r466, %r465};
	xor.b64  	%rd915, %rd913, %rd914;
	add.s64 	%rd916, %rd915, %rd910;
	add.s64 	%rd917, %rd916, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd2313;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 19;
	shf.r.wrap.b32 	%r470, %r467, %r468, 19;
	mov.b64 	%rd918, {%r470, %r469};
	shf.l.wrap.b32 	%r471, %r467, %r468, 3;
	shf.l.wrap.b32 	%r472, %r468, %r467, 3;
	mov.b64 	%rd919, {%r472, %r471};
	xor.b64  	%rd920, %rd918, %rd919;
	shr.u64 	%rd921, %rd2313, 6;
	xor.b64  	%rd922, %rd920, %rd921;
	add.s64 	%rd923, %rd2302, %rd2311;
	add.s64 	%rd924, %rd923, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd2310;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 8;
	shf.r.wrap.b32 	%r476, %r473, %r474, 8;
	mov.b64 	%rd925, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r474, %r473, 1;
	shf.r.wrap.b32 	%r478, %r473, %r474, 1;
	mov.b64 	%rd926, {%r478, %r477};
	xor.b64  	%rd927, %rd926, %rd925;
	shr.u64 	%rd928, %rd2310, 7;
	xor.b64  	%rd929, %rd927, %rd928;
	add.s64 	%rd2311, %rd924, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd906;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 14;
	shf.r.wrap.b32 	%r482, %r479, %r480, 14;
	mov.b64 	%rd930, {%r482, %r481};
	shf.r.wrap.b32 	%r483, %r480, %r479, 18;
	shf.r.wrap.b32 	%r484, %r479, %r480, 18;
	mov.b64 	%rd931, {%r484, %r483};
	xor.b64  	%rd932, %rd930, %rd931;
	shf.l.wrap.b32 	%r485, %r479, %r480, 23;
	shf.l.wrap.b32 	%r486, %r480, %r479, 23;
	mov.b64 	%rd933, {%r486, %r485};
	xor.b64  	%rd934, %rd932, %rd933;
	xor.b64  	%rd935, %rd869, %rd832;
	and.b64  	%rd936, %rd906, %rd935;
	xor.b64  	%rd937, %rd936, %rd832;
	add.s64 	%rd938, %rd937, %rd795;
	add.s64 	%rd939, %rd938, %rd934;
	ld.const.u64 	%rd940, [%rd707+48];
	add.s64 	%rd941, %rd939, %rd940;
	add.s64 	%rd942, %rd941, %rd2311;
	add.s64 	%rd943, %rd942, %rd806;
	and.b64  	%rd944, %rd917, %rd880;
	or.b64  	%rd945, %rd917, %rd880;
	and.b64  	%rd946, %rd945, %rd843;
	or.b64  	%rd947, %rd946, %rd944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd917;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 28;
	shf.r.wrap.b32 	%r490, %r487, %r488, 28;
	mov.b64 	%rd948, {%r490, %r489};
	shf.l.wrap.b32 	%r491, %r487, %r488, 30;
	shf.l.wrap.b32 	%r492, %r488, %r487, 30;
	mov.b64 	%rd949, {%r492, %r491};
	xor.b64  	%rd950, %rd948, %rd949;
	shf.l.wrap.b32 	%r493, %r487, %r488, 25;
	shf.l.wrap.b32 	%r494, %r488, %r487, 25;
	mov.b64 	%rd951, {%r494, %r493};
	xor.b64  	%rd952, %rd950, %rd951;
	add.s64 	%rd953, %rd952, %rd947;
	add.s64 	%rd954, %rd953, %rd942;
	add.s64 	%rd955, %rd2317, %rd2310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd2312;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 19;
	shf.r.wrap.b32 	%r498, %r495, %r496, 19;
	mov.b64 	%rd956, {%r498, %r497};
	shf.l.wrap.b32 	%r499, %r495, %r496, 3;
	shf.l.wrap.b32 	%r500, %r496, %r495, 3;
	mov.b64 	%rd957, {%r500, %r499};
	xor.b64  	%rd958, %rd956, %rd957;
	shr.u64 	%rd959, %rd2312, 6;
	xor.b64  	%rd960, %rd958, %rd959;
	add.s64 	%rd961, %rd955, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r501,%dummy}, %rd2309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r502}, %rd2309;
	}
	shf.r.wrap.b32 	%r503, %r502, %r501, 8;
	shf.r.wrap.b32 	%r504, %r501, %r502, 8;
	mov.b64 	%rd962, {%r504, %r503};
	shf.r.wrap.b32 	%r505, %r502, %r501, 1;
	shf.r.wrap.b32 	%r506, %r501, %r502, 1;
	mov.b64 	%rd963, {%r506, %r505};
	xor.b64  	%rd964, %rd963, %rd962;
	shr.u64 	%rd965, %rd2309, 7;
	xor.b64  	%rd966, %rd964, %rd965;
	add.s64 	%rd2310, %rd961, %rd966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd943;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 14;
	shf.r.wrap.b32 	%r510, %r507, %r508, 14;
	mov.b64 	%rd967, {%r510, %r509};
	shf.r.wrap.b32 	%r511, %r508, %r507, 18;
	shf.r.wrap.b32 	%r512, %r507, %r508, 18;
	mov.b64 	%rd968, {%r512, %r511};
	xor.b64  	%rd969, %rd967, %rd968;
	shf.l.wrap.b32 	%r513, %r507, %r508, 23;
	shf.l.wrap.b32 	%r514, %r508, %r507, 23;
	mov.b64 	%rd970, {%r514, %r513};
	xor.b64  	%rd971, %rd969, %rd970;
	xor.b64  	%rd972, %rd906, %rd869;
	and.b64  	%rd973, %rd943, %rd972;
	xor.b64  	%rd974, %rd973, %rd869;
	add.s64 	%rd975, %rd974, %rd832;
	add.s64 	%rd976, %rd975, %rd971;
	ld.const.u64 	%rd977, [%rd707+56];
	add.s64 	%rd978, %rd976, %rd977;
	add.s64 	%rd979, %rd978, %rd2310;
	add.s64 	%rd980, %rd979, %rd843;
	and.b64  	%rd981, %rd954, %rd917;
	or.b64  	%rd982, %rd954, %rd917;
	and.b64  	%rd983, %rd982, %rd880;
	or.b64  	%rd984, %rd983, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd954;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 28;
	shf.r.wrap.b32 	%r518, %r515, %r516, 28;
	mov.b64 	%rd985, {%r518, %r517};
	shf.l.wrap.b32 	%r519, %r515, %r516, 30;
	shf.l.wrap.b32 	%r520, %r516, %r515, 30;
	mov.b64 	%rd986, {%r520, %r519};
	xor.b64  	%rd987, %rd985, %rd986;
	shf.l.wrap.b32 	%r521, %r515, %r516, 25;
	shf.l.wrap.b32 	%r522, %r516, %r515, 25;
	mov.b64 	%rd988, {%r522, %r521};
	xor.b64  	%rd989, %rd987, %rd988;
	add.s64 	%rd990, %rd989, %rd984;
	add.s64 	%rd991, %rd990, %rd979;
	add.s64 	%rd992, %rd2316, %rd2309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd2311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd2311;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 19;
	shf.r.wrap.b32 	%r526, %r523, %r524, 19;
	mov.b64 	%rd993, {%r526, %r525};
	shf.l.wrap.b32 	%r527, %r523, %r524, 3;
	shf.l.wrap.b32 	%r528, %r524, %r523, 3;
	mov.b64 	%rd994, {%r528, %r527};
	xor.b64  	%rd995, %rd993, %rd994;
	shr.u64 	%rd996, %rd2311, 6;
	xor.b64  	%rd997, %rd995, %rd996;
	add.s64 	%rd998, %rd992, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd2308;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 8;
	shf.r.wrap.b32 	%r532, %r529, %r530, 8;
	mov.b64 	%rd999, {%r532, %r531};
	shf.r.wrap.b32 	%r533, %r530, %r529, 1;
	shf.r.wrap.b32 	%r534, %r529, %r530, 1;
	mov.b64 	%rd1000, {%r534, %r533};
	xor.b64  	%rd1001, %rd1000, %rd999;
	shr.u64 	%rd1002, %rd2308, 7;
	xor.b64  	%rd1003, %rd1001, %rd1002;
	add.s64 	%rd2309, %rd998, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd980;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 14;
	shf.r.wrap.b32 	%r538, %r535, %r536, 14;
	mov.b64 	%rd1004, {%r538, %r537};
	shf.r.wrap.b32 	%r539, %r536, %r535, 18;
	shf.r.wrap.b32 	%r540, %r535, %r536, 18;
	mov.b64 	%rd1005, {%r540, %r539};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	shf.l.wrap.b32 	%r541, %r535, %r536, 23;
	shf.l.wrap.b32 	%r542, %r536, %r535, 23;
	mov.b64 	%rd1007, {%r542, %r541};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	xor.b64  	%rd1009, %rd943, %rd906;
	and.b64  	%rd1010, %rd980, %rd1009;
	xor.b64  	%rd1011, %rd1010, %rd906;
	add.s64 	%rd1012, %rd1011, %rd869;
	add.s64 	%rd1013, %rd1012, %rd1008;
	ld.const.u64 	%rd1014, [%rd707+64];
	add.s64 	%rd1015, %rd1013, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd2309;
	add.s64 	%rd1017, %rd1016, %rd880;
	and.b64  	%rd1018, %rd991, %rd954;
	or.b64  	%rd1019, %rd991, %rd954;
	and.b64  	%rd1020, %rd1019, %rd917;
	or.b64  	%rd1021, %rd1020, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd991;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 28;
	shf.r.wrap.b32 	%r546, %r543, %r544, 28;
	mov.b64 	%rd1022, {%r546, %r545};
	shf.l.wrap.b32 	%r547, %r543, %r544, 30;
	shf.l.wrap.b32 	%r548, %r544, %r543, 30;
	mov.b64 	%rd1023, {%r548, %r547};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	shf.l.wrap.b32 	%r549, %r543, %r544, 25;
	shf.l.wrap.b32 	%r550, %r544, %r543, 25;
	mov.b64 	%rd1025, {%r550, %r549};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	add.s64 	%rd1027, %rd1026, %rd1021;
	add.s64 	%rd1028, %rd1027, %rd1016;
	add.s64 	%rd1029, %rd2315, %rd2308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd2310;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 19;
	shf.r.wrap.b32 	%r554, %r551, %r552, 19;
	mov.b64 	%rd1030, {%r554, %r553};
	shf.l.wrap.b32 	%r555, %r551, %r552, 3;
	shf.l.wrap.b32 	%r556, %r552, %r551, 3;
	mov.b64 	%rd1031, {%r556, %r555};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	shr.u64 	%rd1033, %rd2310, 6;
	xor.b64  	%rd1034, %rd1032, %rd1033;
	add.s64 	%rd1035, %rd1029, %rd1034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r557,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r558}, %rd2307;
	}
	shf.r.wrap.b32 	%r559, %r558, %r557, 8;
	shf.r.wrap.b32 	%r560, %r557, %r558, 8;
	mov.b64 	%rd1036, {%r560, %r559};
	shf.r.wrap.b32 	%r561, %r558, %r557, 1;
	shf.r.wrap.b32 	%r562, %r557, %r558, 1;
	mov.b64 	%rd1037, {%r562, %r561};
	xor.b64  	%rd1038, %rd1037, %rd1036;
	shr.u64 	%rd1039, %rd2307, 7;
	xor.b64  	%rd1040, %rd1038, %rd1039;
	add.s64 	%rd2308, %rd1035, %rd1040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd1017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd1017;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 14;
	shf.r.wrap.b32 	%r566, %r563, %r564, 14;
	mov.b64 	%rd1041, {%r566, %r565};
	shf.r.wrap.b32 	%r567, %r564, %r563, 18;
	shf.r.wrap.b32 	%r568, %r563, %r564, 18;
	mov.b64 	%rd1042, {%r568, %r567};
	xor.b64  	%rd1043, %rd1041, %rd1042;
	shf.l.wrap.b32 	%r569, %r563, %r564, 23;
	shf.l.wrap.b32 	%r570, %r564, %r563, 23;
	mov.b64 	%rd1044, {%r570, %r569};
	xor.b64  	%rd1045, %rd1043, %rd1044;
	xor.b64  	%rd1046, %rd980, %rd943;
	and.b64  	%rd1047, %rd1017, %rd1046;
	xor.b64  	%rd1048, %rd1047, %rd943;
	add.s64 	%rd1049, %rd1048, %rd906;
	add.s64 	%rd1050, %rd1049, %rd1045;
	ld.const.u64 	%rd1051, [%rd707+72];
	add.s64 	%rd1052, %rd1050, %rd1051;
	add.s64 	%rd1053, %rd1052, %rd2308;
	add.s64 	%rd1054, %rd1053, %rd917;
	and.b64  	%rd1055, %rd1028, %rd991;
	or.b64  	%rd1056, %rd1028, %rd991;
	and.b64  	%rd1057, %rd1056, %rd954;
	or.b64  	%rd1058, %rd1057, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd1028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd1028;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 28;
	shf.r.wrap.b32 	%r574, %r571, %r572, 28;
	mov.b64 	%rd1059, {%r574, %r573};
	shf.l.wrap.b32 	%r575, %r571, %r572, 30;
	shf.l.wrap.b32 	%r576, %r572, %r571, 30;
	mov.b64 	%rd1060, {%r576, %r575};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	shf.l.wrap.b32 	%r577, %r571, %r572, 25;
	shf.l.wrap.b32 	%r578, %r572, %r571, 25;
	mov.b64 	%rd1062, {%r578, %r577};
	xor.b64  	%rd1063, %rd1061, %rd1062;
	add.s64 	%rd1064, %rd1063, %rd1058;
	add.s64 	%rd1065, %rd1064, %rd1053;
	add.s64 	%rd1066, %rd2314, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd2309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd2309;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 19;
	shf.r.wrap.b32 	%r582, %r579, %r580, 19;
	mov.b64 	%rd1067, {%r582, %r581};
	shf.l.wrap.b32 	%r583, %r579, %r580, 3;
	shf.l.wrap.b32 	%r584, %r580, %r579, 3;
	mov.b64 	%rd1068, {%r584, %r583};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	shr.u64 	%rd1070, %rd2309, 6;
	xor.b64  	%rd1071, %rd1069, %rd1070;
	add.s64 	%rd1072, %rd1066, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd2306;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 8;
	shf.r.wrap.b32 	%r588, %r585, %r586, 8;
	mov.b64 	%rd1073, {%r588, %r587};
	shf.r.wrap.b32 	%r589, %r586, %r585, 1;
	shf.r.wrap.b32 	%r590, %r585, %r586, 1;
	mov.b64 	%rd1074, {%r590, %r589};
	xor.b64  	%rd1075, %rd1074, %rd1073;
	shr.u64 	%rd1076, %rd2306, 7;
	xor.b64  	%rd1077, %rd1075, %rd1076;
	add.s64 	%rd2307, %rd1072, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd1054;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 14;
	shf.r.wrap.b32 	%r594, %r591, %r592, 14;
	mov.b64 	%rd1078, {%r594, %r593};
	shf.r.wrap.b32 	%r595, %r592, %r591, 18;
	shf.r.wrap.b32 	%r596, %r591, %r592, 18;
	mov.b64 	%rd1079, {%r596, %r595};
	xor.b64  	%rd1080, %rd1078, %rd1079;
	shf.l.wrap.b32 	%r597, %r591, %r592, 23;
	shf.l.wrap.b32 	%r598, %r592, %r591, 23;
	mov.b64 	%rd1081, {%r598, %r597};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	xor.b64  	%rd1083, %rd1017, %rd980;
	and.b64  	%rd1084, %rd1054, %rd1083;
	xor.b64  	%rd1085, %rd1084, %rd980;
	add.s64 	%rd1086, %rd1085, %rd943;
	add.s64 	%rd1087, %rd1086, %rd1082;
	ld.const.u64 	%rd1088, [%rd707+80];
	add.s64 	%rd1089, %rd1087, %rd1088;
	add.s64 	%rd1090, %rd1089, %rd2307;
	add.s64 	%rd1091, %rd1090, %rd954;
	and.b64  	%rd1092, %rd1065, %rd1028;
	or.b64  	%rd1093, %rd1065, %rd1028;
	and.b64  	%rd1094, %rd1093, %rd991;
	or.b64  	%rd1095, %rd1094, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd1065;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 28;
	shf.r.wrap.b32 	%r602, %r599, %r600, 28;
	mov.b64 	%rd1096, {%r602, %r601};
	shf.l.wrap.b32 	%r603, %r599, %r600, 30;
	shf.l.wrap.b32 	%r604, %r600, %r599, 30;
	mov.b64 	%rd1097, {%r604, %r603};
	xor.b64  	%rd1098, %rd1096, %rd1097;
	shf.l.wrap.b32 	%r605, %r599, %r600, 25;
	shf.l.wrap.b32 	%r606, %r600, %r599, 25;
	mov.b64 	%rd1099, {%r606, %r605};
	xor.b64  	%rd1100, %rd1098, %rd1099;
	add.s64 	%rd1101, %rd1100, %rd1095;
	add.s64 	%rd1102, %rd1101, %rd1090;
	add.s64 	%rd1103, %rd2313, %rd2306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd2308;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 19;
	shf.r.wrap.b32 	%r610, %r607, %r608, 19;
	mov.b64 	%rd1104, {%r610, %r609};
	shf.l.wrap.b32 	%r611, %r607, %r608, 3;
	shf.l.wrap.b32 	%r612, %r608, %r607, 3;
	mov.b64 	%rd1105, {%r612, %r611};
	xor.b64  	%rd1106, %rd1104, %rd1105;
	shr.u64 	%rd1107, %rd2308, 6;
	xor.b64  	%rd1108, %rd1106, %rd1107;
	add.s64 	%rd1109, %rd1103, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r614}, %rd2305;
	}
	shf.r.wrap.b32 	%r615, %r614, %r613, 8;
	shf.r.wrap.b32 	%r616, %r613, %r614, 8;
	mov.b64 	%rd1110, {%r616, %r615};
	shf.r.wrap.b32 	%r617, %r614, %r613, 1;
	shf.r.wrap.b32 	%r618, %r613, %r614, 1;
	mov.b64 	%rd1111, {%r618, %r617};
	xor.b64  	%rd1112, %rd1111, %rd1110;
	shr.u64 	%rd1113, %rd2305, 7;
	xor.b64  	%rd1114, %rd1112, %rd1113;
	add.s64 	%rd2306, %rd1109, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd1091;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 14;
	shf.r.wrap.b32 	%r622, %r619, %r620, 14;
	mov.b64 	%rd1115, {%r622, %r621};
	shf.r.wrap.b32 	%r623, %r620, %r619, 18;
	shf.r.wrap.b32 	%r624, %r619, %r620, 18;
	mov.b64 	%rd1116, {%r624, %r623};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	shf.l.wrap.b32 	%r625, %r619, %r620, 23;
	shf.l.wrap.b32 	%r626, %r620, %r619, 23;
	mov.b64 	%rd1118, {%r626, %r625};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	xor.b64  	%rd1120, %rd1054, %rd1017;
	and.b64  	%rd1121, %rd1091, %rd1120;
	xor.b64  	%rd1122, %rd1121, %rd1017;
	add.s64 	%rd1123, %rd1122, %rd980;
	add.s64 	%rd1124, %rd1123, %rd1119;
	ld.const.u64 	%rd1125, [%rd707+88];
	add.s64 	%rd1126, %rd1124, %rd1125;
	add.s64 	%rd1127, %rd1126, %rd2306;
	add.s64 	%rd1128, %rd1127, %rd991;
	and.b64  	%rd1129, %rd1102, %rd1065;
	or.b64  	%rd1130, %rd1102, %rd1065;
	and.b64  	%rd1131, %rd1130, %rd1028;
	or.b64  	%rd1132, %rd1131, %rd1129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd1102;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 28;
	shf.r.wrap.b32 	%r630, %r627, %r628, 28;
	mov.b64 	%rd1133, {%r630, %r629};
	shf.l.wrap.b32 	%r631, %r627, %r628, 30;
	shf.l.wrap.b32 	%r632, %r628, %r627, 30;
	mov.b64 	%rd1134, {%r632, %r631};
	xor.b64  	%rd1135, %rd1133, %rd1134;
	shf.l.wrap.b32 	%r633, %r627, %r628, 25;
	shf.l.wrap.b32 	%r634, %r628, %r627, 25;
	mov.b64 	%rd1136, {%r634, %r633};
	xor.b64  	%rd1137, %rd1135, %rd1136;
	add.s64 	%rd1138, %rd1137, %rd1132;
	add.s64 	%rd1139, %rd1138, %rd1127;
	add.s64 	%rd1140, %rd2312, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd2307;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 19;
	shf.r.wrap.b32 	%r638, %r635, %r636, 19;
	mov.b64 	%rd1141, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 3;
	shf.l.wrap.b32 	%r640, %r636, %r635, 3;
	mov.b64 	%rd1142, {%r640, %r639};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	shr.u64 	%rd1144, %rd2307, 6;
	xor.b64  	%rd1145, %rd1143, %rd1144;
	add.s64 	%rd1146, %rd1140, %rd1145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd2304;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 8;
	shf.r.wrap.b32 	%r644, %r641, %r642, 8;
	mov.b64 	%rd1147, {%r644, %r643};
	shf.r.wrap.b32 	%r645, %r642, %r641, 1;
	shf.r.wrap.b32 	%r646, %r641, %r642, 1;
	mov.b64 	%rd1148, {%r646, %r645};
	xor.b64  	%rd1149, %rd1148, %rd1147;
	shr.u64 	%rd1150, %rd2304, 7;
	xor.b64  	%rd1151, %rd1149, %rd1150;
	add.s64 	%rd2305, %rd1146, %rd1151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd1128;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 14;
	shf.r.wrap.b32 	%r650, %r647, %r648, 14;
	mov.b64 	%rd1152, {%r650, %r649};
	shf.r.wrap.b32 	%r651, %r648, %r647, 18;
	shf.r.wrap.b32 	%r652, %r647, %r648, 18;
	mov.b64 	%rd1153, {%r652, %r651};
	xor.b64  	%rd1154, %rd1152, %rd1153;
	shf.l.wrap.b32 	%r653, %r647, %r648, 23;
	shf.l.wrap.b32 	%r654, %r648, %r647, 23;
	mov.b64 	%rd1155, {%r654, %r653};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	xor.b64  	%rd1157, %rd1091, %rd1054;
	and.b64  	%rd1158, %rd1128, %rd1157;
	xor.b64  	%rd1159, %rd1158, %rd1054;
	add.s64 	%rd1160, %rd1159, %rd1017;
	add.s64 	%rd1161, %rd1160, %rd1156;
	ld.const.u64 	%rd1162, [%rd707+96];
	add.s64 	%rd1163, %rd1161, %rd1162;
	add.s64 	%rd1164, %rd1163, %rd2305;
	add.s64 	%rd2325, %rd1164, %rd1028;
	and.b64  	%rd1165, %rd1139, %rd1102;
	or.b64  	%rd1166, %rd1139, %rd1102;
	and.b64  	%rd1167, %rd1166, %rd1065;
	or.b64  	%rd1168, %rd1167, %rd1165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd1139;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 28;
	shf.r.wrap.b32 	%r658, %r655, %r656, 28;
	mov.b64 	%rd1169, {%r658, %r657};
	shf.l.wrap.b32 	%r659, %r655, %r656, 30;
	shf.l.wrap.b32 	%r660, %r656, %r655, 30;
	mov.b64 	%rd1170, {%r660, %r659};
	xor.b64  	%rd1171, %rd1169, %rd1170;
	shf.l.wrap.b32 	%r661, %r655, %r656, 25;
	shf.l.wrap.b32 	%r662, %r656, %r655, 25;
	mov.b64 	%rd1172, {%r662, %r661};
	xor.b64  	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1168;
	add.s64 	%rd2321, %rd1174, %rd1164;
	add.s64 	%rd1175, %rd2311, %rd2304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd2306;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 19;
	shf.r.wrap.b32 	%r666, %r663, %r664, 19;
	mov.b64 	%rd1176, {%r666, %r665};
	shf.l.wrap.b32 	%r667, %r663, %r664, 3;
	shf.l.wrap.b32 	%r668, %r664, %r663, 3;
	mov.b64 	%rd1177, {%r668, %r667};
	xor.b64  	%rd1178, %rd1176, %rd1177;
	shr.u64 	%rd1179, %rd2306, 6;
	xor.b64  	%rd1180, %rd1178, %rd1179;
	add.s64 	%rd1181, %rd1175, %rd1180;
	shf.r.wrap.b32 	%r669, %r299, %r300, 8;
	shf.r.wrap.b32 	%r670, %r300, %r299, 8;
	mov.b64 	%rd1182, {%r670, %r669};
	shf.r.wrap.b32 	%r671, %r299, %r300, 1;
	shf.r.wrap.b32 	%r672, %r300, %r299, 1;
	mov.b64 	%rd1183, {%r672, %r671};
	xor.b64  	%rd1184, %rd1183, %rd1182;
	shr.u64 	%rd1185, %rd2303, 7;
	xor.b64  	%rd1186, %rd1184, %rd1185;
	add.s64 	%rd2304, %rd1181, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd2325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd2325;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 14;
	shf.r.wrap.b32 	%r676, %r673, %r674, 14;
	mov.b64 	%rd1187, {%r676, %r675};
	shf.r.wrap.b32 	%r677, %r674, %r673, 18;
	shf.r.wrap.b32 	%r678, %r673, %r674, 18;
	mov.b64 	%rd1188, {%r678, %r677};
	xor.b64  	%rd1189, %rd1187, %rd1188;
	shf.l.wrap.b32 	%r679, %r673, %r674, 23;
	shf.l.wrap.b32 	%r680, %r674, %r673, 23;
	mov.b64 	%rd1190, {%r680, %r679};
	xor.b64  	%rd1191, %rd1189, %rd1190;
	xor.b64  	%rd1192, %rd1128, %rd1091;
	and.b64  	%rd1193, %rd2325, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1091;
	add.s64 	%rd1195, %rd1194, %rd1054;
	add.s64 	%rd1196, %rd1195, %rd1191;
	ld.const.u64 	%rd1197, [%rd707+104];
	add.s64 	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1198, %rd2304;
	add.s64 	%rd2324, %rd1199, %rd1065;
	and.b64  	%rd1200, %rd2321, %rd1139;
	or.b64  	%rd1201, %rd2321, %rd1139;
	and.b64  	%rd1202, %rd1201, %rd1102;
	or.b64  	%rd1203, %rd1202, %rd1200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd2321;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 28;
	shf.r.wrap.b32 	%r684, %r681, %r682, 28;
	mov.b64 	%rd1204, {%r684, %r683};
	shf.l.wrap.b32 	%r685, %r681, %r682, 30;
	shf.l.wrap.b32 	%r686, %r682, %r681, 30;
	mov.b64 	%rd1205, {%r686, %r685};
	xor.b64  	%rd1206, %rd1204, %rd1205;
	shf.l.wrap.b32 	%r687, %r681, %r682, 25;
	shf.l.wrap.b32 	%r688, %r682, %r681, 25;
	mov.b64 	%rd1207, {%r688, %r687};
	xor.b64  	%rd1208, %rd1206, %rd1207;
	add.s64 	%rd1209, %rd1208, %rd1203;
	add.s64 	%rd2320, %rd1209, %rd1199;
	add.s64 	%rd1210, %rd2310, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd2305;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 19;
	shf.r.wrap.b32 	%r692, %r689, %r690, 19;
	mov.b64 	%rd1211, {%r692, %r691};
	shf.l.wrap.b32 	%r693, %r689, %r690, 3;
	shf.l.wrap.b32 	%r694, %r690, %r689, 3;
	mov.b64 	%rd1212, {%r694, %r693};
	xor.b64  	%rd1213, %rd1211, %rd1212;
	shr.u64 	%rd1214, %rd2305, 6;
	xor.b64  	%rd1215, %rd1213, %rd1214;
	add.s64 	%rd1216, %rd1210, %rd1215;
	shf.r.wrap.b32 	%r695, %r327, %r328, 8;
	shf.r.wrap.b32 	%r696, %r328, %r327, 8;
	mov.b64 	%rd1217, {%r696, %r695};
	shf.r.wrap.b32 	%r697, %r327, %r328, 1;
	shf.r.wrap.b32 	%r698, %r328, %r327, 1;
	mov.b64 	%rd1218, {%r698, %r697};
	xor.b64  	%rd1219, %rd1218, %rd1217;
	shr.u64 	%rd1220, %rd2302, 7;
	xor.b64  	%rd1221, %rd1219, %rd1220;
	add.s64 	%rd2303, %rd1216, %rd1221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd2324;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 14;
	shf.r.wrap.b32 	%r702, %r699, %r700, 14;
	mov.b64 	%rd1222, {%r702, %r701};
	shf.r.wrap.b32 	%r703, %r700, %r699, 18;
	shf.r.wrap.b32 	%r704, %r699, %r700, 18;
	mov.b64 	%rd1223, {%r704, %r703};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	shf.l.wrap.b32 	%r705, %r699, %r700, 23;
	shf.l.wrap.b32 	%r706, %r700, %r699, 23;
	mov.b64 	%rd1225, {%r706, %r705};
	xor.b64  	%rd1226, %rd1224, %rd1225;
	xor.b64  	%rd1227, %rd2325, %rd1128;
	and.b64  	%rd1228, %rd2324, %rd1227;
	xor.b64  	%rd1229, %rd1228, %rd1128;
	add.s64 	%rd1230, %rd1229, %rd1091;
	add.s64 	%rd1231, %rd1230, %rd1226;
	ld.const.u64 	%rd1232, [%rd707+112];
	add.s64 	%rd1233, %rd1231, %rd1232;
	add.s64 	%rd1234, %rd1233, %rd2303;
	add.s64 	%rd2323, %rd1234, %rd1102;
	and.b64  	%rd1235, %rd2320, %rd2321;
	or.b64  	%rd1236, %rd2320, %rd2321;
	and.b64  	%rd1237, %rd1236, %rd1139;
	or.b64  	%rd1238, %rd1237, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd2320;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 28;
	shf.r.wrap.b32 	%r710, %r707, %r708, 28;
	mov.b64 	%rd1239, {%r710, %r709};
	shf.l.wrap.b32 	%r711, %r707, %r708, 30;
	shf.l.wrap.b32 	%r712, %r708, %r707, 30;
	mov.b64 	%rd1240, {%r712, %r711};
	xor.b64  	%rd1241, %rd1239, %rd1240;
	shf.l.wrap.b32 	%r713, %r707, %r708, 25;
	shf.l.wrap.b32 	%r714, %r708, %r707, 25;
	mov.b64 	%rd1242, {%r714, %r713};
	xor.b64  	%rd1243, %rd1241, %rd1242;
	add.s64 	%rd1244, %rd1243, %rd1238;
	add.s64 	%rd2319, %rd1244, %rd1234;
	add.s64 	%rd1245, %rd2309, %rd2302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd2304;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 19;
	shf.r.wrap.b32 	%r718, %r715, %r716, 19;
	mov.b64 	%rd1246, {%r718, %r717};
	shf.l.wrap.b32 	%r719, %r715, %r716, 3;
	shf.l.wrap.b32 	%r720, %r716, %r715, 3;
	mov.b64 	%rd1247, {%r720, %r719};
	xor.b64  	%rd1248, %rd1246, %rd1247;
	shr.u64 	%rd1249, %rd2304, 6;
	xor.b64  	%rd1250, %rd1248, %rd1249;
	add.s64 	%rd1251, %rd1245, %rd1250;
	shf.r.wrap.b32 	%r721, %r356, %r355, 1;
	shf.r.wrap.b32 	%r722, %r355, %r356, 1;
	mov.b64 	%rd1252, {%r722, %r721};
	shf.r.wrap.b32 	%r723, %r356, %r355, 8;
	shf.r.wrap.b32 	%r724, %r355, %r356, 8;
	mov.b64 	%rd1253, {%r724, %r723};
	xor.b64  	%rd1254, %rd1252, %rd1253;
	shr.u64 	%rd1255, %rd2317, 7;
	xor.b64  	%rd1256, %rd1254, %rd1255;
	add.s64 	%rd2302, %rd1251, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r725,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r726}, %rd2323;
	}
	shf.r.wrap.b32 	%r727, %r726, %r725, 14;
	shf.r.wrap.b32 	%r728, %r725, %r726, 14;
	mov.b64 	%rd1257, {%r728, %r727};
	shf.r.wrap.b32 	%r729, %r726, %r725, 18;
	shf.r.wrap.b32 	%r730, %r725, %r726, 18;
	mov.b64 	%rd1258, {%r730, %r729};
	xor.b64  	%rd1259, %rd1257, %rd1258;
	shf.l.wrap.b32 	%r731, %r725, %r726, 23;
	shf.l.wrap.b32 	%r732, %r726, %r725, 23;
	mov.b64 	%rd1260, {%r732, %r731};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	xor.b64  	%rd1262, %rd2324, %rd2325;
	and.b64  	%rd1263, %rd2323, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd2325;
	add.s64 	%rd1265, %rd1264, %rd1128;
	add.s64 	%rd1266, %rd1265, %rd1261;
	ld.const.u64 	%rd1267, [%rd707+120];
	add.s64 	%rd1268, %rd1266, %rd1267;
	add.s64 	%rd1269, %rd1268, %rd2302;
	add.s64 	%rd2322, %rd1269, %rd1139;
	and.b64  	%rd1270, %rd2319, %rd2320;
	or.b64  	%rd1271, %rd2319, %rd2320;
	and.b64  	%rd1272, %rd1271, %rd2321;
	or.b64  	%rd1273, %rd1272, %rd1270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r733,%dummy}, %rd2319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd2319;
	}
	shf.r.wrap.b32 	%r735, %r734, %r733, 28;
	shf.r.wrap.b32 	%r736, %r733, %r734, 28;
	mov.b64 	%rd1274, {%r736, %r735};
	shf.l.wrap.b32 	%r737, %r733, %r734, 30;
	shf.l.wrap.b32 	%r738, %r734, %r733, 30;
	mov.b64 	%rd1275, {%r738, %r737};
	xor.b64  	%rd1276, %rd1274, %rd1275;
	shf.l.wrap.b32 	%r739, %r733, %r734, 25;
	shf.l.wrap.b32 	%r740, %r734, %r733, 25;
	mov.b64 	%rd1277, {%r740, %r739};
	xor.b64  	%rd1278, %rd1276, %rd1277;
	add.s64 	%rd1279, %rd1278, %rd1273;
	add.s64 	%rd2318, %rd1279, %rd1269;
	add.s32 	%r1484, %r1484, 16;
	setp.ne.s32 	%p10, %r1484, 80;
	@%p10 bra 	$L__BB4_8;

	add.s64 	%rd2344, %rd2324, 2270897969802886507;
	add.s64 	%rd2348, %rd2320, 4354685564936845355;
	mov.u64 	%rd2352, 0;
	st.local.v2.u64 	[%rd1], {%rd2352, %rd2352};
	st.local.v2.u64 	[%rd1+16], {%rd2352, %rd2352};
	st.local.v2.u64 	[%rd1+32], {%rd2352, %rd2352};
	st.local.v2.u64 	[%rd1+48], {%rd2352, %rd2352};
	st.local.v2.u64 	[%rd1+64], {%rd2352, %rd2352};
	st.local.v2.u64 	[%rd1+80], {%rd2352, %rd2352};
	st.local.v2.u64 	[%rd1+96], {%rd2352, %rd2352};
	add.s64 	%rd2349, %rd2319, -4942790177534073029;
	add.s64 	%rd2347, %rd2321, -6534734903238641935;
	add.s64 	%rd2345, %rd2323, -7276294671716946913;
	add.s64 	%rd2343, %rd2325, 6620516959819538809;
	mul.wide.u32 	%rd1295, %r9, 8;
	st.local.v2.u64 	[%rd1+112], {%rd2352, %rd1295};
	add.s64 	%rd2346, %rd2322, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd2346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd2346;
	}
	shf.r.wrap.b32 	%r743, %r742, %r741, 14;
	shf.r.wrap.b32 	%r744, %r741, %r742, 14;
	mov.b64 	%rd1296, {%r744, %r743};
	shf.r.wrap.b32 	%r745, %r742, %r741, 18;
	shf.r.wrap.b32 	%r746, %r741, %r742, 18;
	mov.b64 	%rd1297, {%r746, %r745};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shf.l.wrap.b32 	%r747, %r741, %r742, 23;
	shf.l.wrap.b32 	%r748, %r742, %r741, 23;
	mov.b64 	%rd1299, {%r748, %r747};
	xor.b64  	%rd2327, %rd1298, %rd1299;
	add.s64 	%rd2350, %rd2318, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd2350;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 28;
	shf.r.wrap.b32 	%r752, %r749, %r750, 28;
	mov.b64 	%rd1300, {%r752, %r751};
	shf.l.wrap.b32 	%r753, %r749, %r750, 30;
	shf.l.wrap.b32 	%r754, %r750, %r749, 30;
	mov.b64 	%rd1301, {%r754, %r753};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	shf.l.wrap.b32 	%r755, %r749, %r750, 25;
	shf.l.wrap.b32 	%r756, %r750, %r749, 25;
	mov.b64 	%rd1303, {%r756, %r755};
	xor.b64  	%rd2326, %rd1302, %rd1303;
	mov.u64 	%rd2353, %rd2352;
	mov.u64 	%rd2354, %rd2352;
	mov.u64 	%rd2355, %rd2352;
	mov.u64 	%rd2356, %rd2352;
	mov.u64 	%rd2357, %rd2352;
	mov.u64 	%rd2358, %rd2352;
	mov.u64 	%rd2359, %rd2352;
	mov.u64 	%rd2360, %rd2352;
	mov.u64 	%rd2361, %rd2352;
	mov.u64 	%rd2362, %rd2352;
	mov.u64 	%rd2363, %rd2352;
	mov.u64 	%rd2364, %rd2352;
	mov.u64 	%rd2365, %rd2352;
	mov.u64 	%rd2366, %rd2352;

$L__BB4_11:
	mul.wide.u32 	%rd2351, %r9, 8;
	xor.b64  	%rd1327, %rd2345, %rd2344;
	and.b64  	%rd1328, %rd2346, %rd1327;
	xor.b64  	%rd1329, %rd1328, %rd2344;
	add.s64 	%rd1330, %rd1329, %rd2343;
	add.s64 	%rd1331, %rd1330, %rd2327;
	add.s64 	%rd1332, %rd1331, %rd2366;
	add.s64 	%rd1333, %rd1332, 4794697086780616226;
	add.s64 	%rd1334, %rd1333, %rd2347;
	or.b64  	%rd1335, %rd2350, %rd2349;
	and.b64  	%rd1336, %rd1335, %rd2348;
	and.b64  	%rd1337, %rd2350, %rd2349;
	or.b64  	%rd1338, %rd1336, %rd1337;
	add.s64 	%rd1339, %rd2326, %rd1338;
	add.s64 	%rd1340, %rd1339, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r758,%dummy}, %rd1334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r759}, %rd1334;
	}
	shf.r.wrap.b32 	%r760, %r759, %r758, 14;
	shf.r.wrap.b32 	%r761, %r758, %r759, 14;
	mov.b64 	%rd1341, {%r761, %r760};
	shf.r.wrap.b32 	%r762, %r759, %r758, 18;
	shf.r.wrap.b32 	%r763, %r758, %r759, 18;
	mov.b64 	%rd1342, {%r763, %r762};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	shf.l.wrap.b32 	%r764, %r758, %r759, 23;
	shf.l.wrap.b32 	%r765, %r759, %r758, 23;
	mov.b64 	%rd1344, {%r765, %r764};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	xor.b64  	%rd1346, %rd2346, %rd2345;
	and.b64  	%rd1347, %rd1334, %rd1346;
	xor.b64  	%rd1348, %rd1347, %rd2345;
	add.s64 	%rd1349, %rd1348, %rd2344;
	add.s64 	%rd1350, %rd1349, %rd1345;
	add.s64 	%rd1351, %rd1350, %rd2365;
	add.s64 	%rd1352, %rd1351, 8158064640168781261;
	add.s64 	%rd1353, %rd1352, %rd2348;
	and.b64  	%rd1354, %rd1340, %rd2350;
	or.b64  	%rd1355, %rd1340, %rd2350;
	and.b64  	%rd1356, %rd1355, %rd2349;
	or.b64  	%rd1357, %rd1356, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r766,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r767}, %rd1340;
	}
	shf.r.wrap.b32 	%r768, %r767, %r766, 28;
	shf.r.wrap.b32 	%r769, %r766, %r767, 28;
	mov.b64 	%rd1358, {%r769, %r768};
	shf.l.wrap.b32 	%r770, %r766, %r767, 30;
	shf.l.wrap.b32 	%r771, %r767, %r766, 30;
	mov.b64 	%rd1359, {%r771, %r770};
	xor.b64  	%rd1360, %rd1358, %rd1359;
	shf.l.wrap.b32 	%r772, %r766, %r767, 25;
	shf.l.wrap.b32 	%r773, %r767, %r766, 25;
	mov.b64 	%rd1361, {%r773, %r772};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	add.s64 	%rd1363, %rd1362, %rd1357;
	add.s64 	%rd1364, %rd1363, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd1353;
	}
	shf.r.wrap.b32 	%r776, %r775, %r774, 14;
	shf.r.wrap.b32 	%r777, %r774, %r775, 14;
	mov.b64 	%rd1365, {%r777, %r776};
	shf.r.wrap.b32 	%r778, %r775, %r774, 18;
	shf.r.wrap.b32 	%r779, %r774, %r775, 18;
	mov.b64 	%rd1366, {%r779, %r778};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	shf.l.wrap.b32 	%r780, %r774, %r775, 23;
	shf.l.wrap.b32 	%r781, %r775, %r774, 23;
	mov.b64 	%rd1368, {%r781, %r780};
	xor.b64  	%rd1369, %rd1367, %rd1368;
	xor.b64  	%rd1370, %rd1334, %rd2346;
	and.b64  	%rd1371, %rd1353, %rd1370;
	xor.b64  	%rd1372, %rd1371, %rd2346;
	add.s64 	%rd1373, %rd1372, %rd2345;
	add.s64 	%rd1374, %rd1373, %rd1369;
	add.s64 	%rd1375, %rd1374, %rd2364;
	add.s64 	%rd1376, %rd1375, -5349999486874862801;
	add.s64 	%rd1377, %rd1376, %rd2349;
	and.b64  	%rd1378, %rd1364, %rd1340;
	or.b64  	%rd1379, %rd1364, %rd1340;
	and.b64  	%rd1380, %rd1379, %rd2350;
	or.b64  	%rd1381, %rd1380, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r783}, %rd1364;
	}
	shf.r.wrap.b32 	%r784, %r783, %r782, 28;
	shf.r.wrap.b32 	%r785, %r782, %r783, 28;
	mov.b64 	%rd1382, {%r785, %r784};
	shf.l.wrap.b32 	%r786, %r782, %r783, 30;
	shf.l.wrap.b32 	%r787, %r783, %r782, 30;
	mov.b64 	%rd1383, {%r787, %r786};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	shf.l.wrap.b32 	%r788, %r782, %r783, 25;
	shf.l.wrap.b32 	%r789, %r783, %r782, 25;
	mov.b64 	%rd1385, {%r789, %r788};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	add.s64 	%rd1387, %rd1386, %rd1381;
	add.s64 	%rd1388, %rd1387, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd1377;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 14;
	shf.r.wrap.b32 	%r793, %r790, %r791, 14;
	mov.b64 	%rd1389, {%r793, %r792};
	shf.r.wrap.b32 	%r794, %r791, %r790, 18;
	shf.r.wrap.b32 	%r795, %r790, %r791, 18;
	mov.b64 	%rd1390, {%r795, %r794};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	shf.l.wrap.b32 	%r796, %r790, %r791, 23;
	shf.l.wrap.b32 	%r797, %r791, %r790, 23;
	mov.b64 	%rd1392, {%r797, %r796};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1353, %rd1334;
	and.b64  	%rd1395, %rd1377, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1334;
	add.s64 	%rd1397, %rd1396, %rd2346;
	add.s64 	%rd1398, %rd1397, %rd1393;
	add.s64 	%rd1399, %rd1398, %rd2363;
	add.s64 	%rd1400, %rd1399, -1606136188198331460;
	add.s64 	%rd1401, %rd1400, %rd2350;
	and.b64  	%rd1402, %rd1388, %rd1364;
	or.b64  	%rd1403, %rd1388, %rd1364;
	and.b64  	%rd1404, %rd1403, %rd1340;
	or.b64  	%rd1405, %rd1404, %rd1402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r798,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r799}, %rd1388;
	}
	shf.r.wrap.b32 	%r800, %r799, %r798, 28;
	shf.r.wrap.b32 	%r801, %r798, %r799, 28;
	mov.b64 	%rd1406, {%r801, %r800};
	shf.l.wrap.b32 	%r802, %r798, %r799, 30;
	shf.l.wrap.b32 	%r803, %r799, %r798, 30;
	mov.b64 	%rd1407, {%r803, %r802};
	xor.b64  	%rd1408, %rd1406, %rd1407;
	shf.l.wrap.b32 	%r804, %r798, %r799, 25;
	shf.l.wrap.b32 	%r805, %r799, %r798, 25;
	mov.b64 	%rd1409, {%r805, %r804};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	add.s64 	%rd1411, %rd1410, %rd1405;
	add.s64 	%rd1412, %rd1411, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd1401;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 14;
	shf.r.wrap.b32 	%r809, %r806, %r807, 14;
	mov.b64 	%rd1413, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r807, %r806, 18;
	shf.r.wrap.b32 	%r811, %r806, %r807, 18;
	mov.b64 	%rd1414, {%r811, %r810};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	shf.l.wrap.b32 	%r812, %r806, %r807, 23;
	shf.l.wrap.b32 	%r813, %r807, %r806, 23;
	mov.b64 	%rd1416, {%r813, %r812};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	xor.b64  	%rd1418, %rd1377, %rd1353;
	and.b64  	%rd1419, %rd1401, %rd1418;
	xor.b64  	%rd1420, %rd1419, %rd1353;
	add.s64 	%rd1421, %rd1420, %rd1334;
	add.s64 	%rd1422, %rd1421, %rd1417;
	add.s64 	%rd1423, %rd1422, %rd2362;
	add.s64 	%rd1424, %rd1423, 4131703408338449720;
	add.s64 	%rd1425, %rd1424, %rd1340;
	and.b64  	%rd1426, %rd1412, %rd1388;
	or.b64  	%rd1427, %rd1412, %rd1388;
	and.b64  	%rd1428, %rd1427, %rd1364;
	or.b64  	%rd1429, %rd1428, %rd1426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd1412;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 28;
	shf.r.wrap.b32 	%r817, %r814, %r815, 28;
	mov.b64 	%rd1430, {%r817, %r816};
	shf.l.wrap.b32 	%r818, %r814, %r815, 30;
	shf.l.wrap.b32 	%r819, %r815, %r814, 30;
	mov.b64 	%rd1431, {%r819, %r818};
	xor.b64  	%rd1432, %rd1430, %rd1431;
	shf.l.wrap.b32 	%r820, %r814, %r815, 25;
	shf.l.wrap.b32 	%r821, %r815, %r814, 25;
	mov.b64 	%rd1433, {%r821, %r820};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	add.s64 	%rd1435, %rd1434, %rd1429;
	add.s64 	%rd1436, %rd1435, %rd1424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd1425;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 14;
	shf.r.wrap.b32 	%r825, %r822, %r823, 14;
	mov.b64 	%rd1437, {%r825, %r824};
	shf.r.wrap.b32 	%r826, %r823, %r822, 18;
	shf.r.wrap.b32 	%r827, %r822, %r823, 18;
	mov.b64 	%rd1438, {%r827, %r826};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	shf.l.wrap.b32 	%r828, %r822, %r823, 23;
	shf.l.wrap.b32 	%r829, %r823, %r822, 23;
	mov.b64 	%rd1440, {%r829, %r828};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	xor.b64  	%rd1442, %rd1401, %rd1377;
	and.b64  	%rd1443, %rd1425, %rd1442;
	xor.b64  	%rd1444, %rd1443, %rd1377;
	add.s64 	%rd1445, %rd1444, %rd1353;
	add.s64 	%rd1446, %rd1445, %rd1441;
	add.s64 	%rd1447, %rd1446, %rd2361;
	add.s64 	%rd1448, %rd1447, 6480981068601479193;
	add.s64 	%rd1449, %rd1448, %rd1364;
	and.b64  	%rd1450, %rd1436, %rd1412;
	or.b64  	%rd1451, %rd1436, %rd1412;
	and.b64  	%rd1452, %rd1451, %rd1388;
	or.b64  	%rd1453, %rd1452, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd1436;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 28;
	shf.r.wrap.b32 	%r833, %r830, %r831, 28;
	mov.b64 	%rd1454, {%r833, %r832};
	shf.l.wrap.b32 	%r834, %r830, %r831, 30;
	shf.l.wrap.b32 	%r835, %r831, %r830, 30;
	mov.b64 	%rd1455, {%r835, %r834};
	xor.b64  	%rd1456, %rd1454, %rd1455;
	shf.l.wrap.b32 	%r836, %r830, %r831, 25;
	shf.l.wrap.b32 	%r837, %r831, %r830, 25;
	mov.b64 	%rd1457, {%r837, %r836};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	add.s64 	%rd1459, %rd1458, %rd1453;
	add.s64 	%rd1460, %rd1459, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd1449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd1449;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 14;
	shf.r.wrap.b32 	%r841, %r838, %r839, 14;
	mov.b64 	%rd1461, {%r841, %r840};
	shf.r.wrap.b32 	%r842, %r839, %r838, 18;
	shf.r.wrap.b32 	%r843, %r838, %r839, 18;
	mov.b64 	%rd1462, {%r843, %r842};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	shf.l.wrap.b32 	%r844, %r838, %r839, 23;
	shf.l.wrap.b32 	%r845, %r839, %r838, 23;
	mov.b64 	%rd1464, {%r845, %r844};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	xor.b64  	%rd1466, %rd1425, %rd1401;
	and.b64  	%rd1467, %rd1449, %rd1466;
	xor.b64  	%rd1468, %rd1467, %rd1401;
	add.s64 	%rd1469, %rd1468, %rd1377;
	add.s64 	%rd1470, %rd1469, %rd1465;
	add.s64 	%rd1471, %rd1470, %rd2360;
	add.s64 	%rd1472, %rd1471, -7908458776815382629;
	add.s64 	%rd1473, %rd1472, %rd1388;
	and.b64  	%rd1474, %rd1460, %rd1436;
	or.b64  	%rd1475, %rd1460, %rd1436;
	and.b64  	%rd1476, %rd1475, %rd1412;
	or.b64  	%rd1477, %rd1476, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd1460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd1460;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 28;
	shf.r.wrap.b32 	%r849, %r846, %r847, 28;
	mov.b64 	%rd1478, {%r849, %r848};
	shf.l.wrap.b32 	%r850, %r846, %r847, 30;
	shf.l.wrap.b32 	%r851, %r847, %r846, 30;
	mov.b64 	%rd1479, {%r851, %r850};
	xor.b64  	%rd1480, %rd1478, %rd1479;
	shf.l.wrap.b32 	%r852, %r846, %r847, 25;
	shf.l.wrap.b32 	%r853, %r847, %r846, 25;
	mov.b64 	%rd1481, {%r853, %r852};
	xor.b64  	%rd1482, %rd1480, %rd1481;
	add.s64 	%rd1483, %rd1482, %rd1477;
	add.s64 	%rd1484, %rd1483, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r854,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r855}, %rd1473;
	}
	shf.r.wrap.b32 	%r856, %r855, %r854, 14;
	shf.r.wrap.b32 	%r857, %r854, %r855, 14;
	mov.b64 	%rd1485, {%r857, %r856};
	shf.r.wrap.b32 	%r858, %r855, %r854, 18;
	shf.r.wrap.b32 	%r859, %r854, %r855, 18;
	mov.b64 	%rd1486, {%r859, %r858};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	shf.l.wrap.b32 	%r860, %r854, %r855, 23;
	shf.l.wrap.b32 	%r861, %r855, %r854, 23;
	mov.b64 	%rd1488, {%r861, %r860};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	xor.b64  	%rd1490, %rd1449, %rd1425;
	and.b64  	%rd1491, %rd1473, %rd1490;
	xor.b64  	%rd1492, %rd1491, %rd1425;
	add.s64 	%rd1493, %rd1492, %rd1401;
	add.s64 	%rd1494, %rd1493, %rd1489;
	add.s64 	%rd1495, %rd1494, %rd2359;
	add.s64 	%rd1496, %rd1495, -6116909921290321640;
	add.s64 	%rd1497, %rd1496, %rd1412;
	and.b64  	%rd1498, %rd1484, %rd1460;
	or.b64  	%rd1499, %rd1484, %rd1460;
	and.b64  	%rd1500, %rd1499, %rd1436;
	or.b64  	%rd1501, %rd1500, %rd1498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd1484;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 28;
	shf.r.wrap.b32 	%r865, %r862, %r863, 28;
	mov.b64 	%rd1502, {%r865, %r864};
	shf.l.wrap.b32 	%r866, %r862, %r863, 30;
	shf.l.wrap.b32 	%r867, %r863, %r862, 30;
	mov.b64 	%rd1503, {%r867, %r866};
	xor.b64  	%rd1504, %rd1502, %rd1503;
	shf.l.wrap.b32 	%r868, %r862, %r863, 25;
	shf.l.wrap.b32 	%r869, %r863, %r862, 25;
	mov.b64 	%rd1505, {%r869, %r868};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	add.s64 	%rd1507, %rd1506, %rd1501;
	add.s64 	%rd1508, %rd1507, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd1497;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 14;
	shf.r.wrap.b32 	%r873, %r870, %r871, 14;
	mov.b64 	%rd1509, {%r873, %r872};
	shf.r.wrap.b32 	%r874, %r871, %r870, 18;
	shf.r.wrap.b32 	%r875, %r870, %r871, 18;
	mov.b64 	%rd1510, {%r875, %r874};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	shf.l.wrap.b32 	%r876, %r870, %r871, 23;
	shf.l.wrap.b32 	%r877, %r871, %r870, 23;
	mov.b64 	%rd1512, {%r877, %r876};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	xor.b64  	%rd1514, %rd1473, %rd1449;
	and.b64  	%rd1515, %rd1497, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1449;
	add.s64 	%rd1517, %rd1516, %rd1425;
	add.s64 	%rd1518, %rd1517, %rd1513;
	add.s64 	%rd1519, %rd1518, %rd2358;
	add.s64 	%rd1520, %rd1519, -2880145864133508542;
	add.s64 	%rd1521, %rd1520, %rd1436;
	and.b64  	%rd1522, %rd1508, %rd1484;
	or.b64  	%rd1523, %rd1508, %rd1484;
	and.b64  	%rd1524, %rd1523, %rd1460;
	or.b64  	%rd1525, %rd1524, %rd1522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd1508;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 28;
	shf.r.wrap.b32 	%r881, %r878, %r879, 28;
	mov.b64 	%rd1526, {%r881, %r880};
	shf.l.wrap.b32 	%r882, %r878, %r879, 30;
	shf.l.wrap.b32 	%r883, %r879, %r878, 30;
	mov.b64 	%rd1527, {%r883, %r882};
	xor.b64  	%rd1528, %rd1526, %rd1527;
	shf.l.wrap.b32 	%r884, %r878, %r879, 25;
	shf.l.wrap.b32 	%r885, %r879, %r878, 25;
	mov.b64 	%rd1529, {%r885, %r884};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	add.s64 	%rd1531, %rd1530, %rd1525;
	add.s64 	%rd1532, %rd1531, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd1521;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 14;
	shf.r.wrap.b32 	%r889, %r886, %r887, 14;
	mov.b64 	%rd1533, {%r889, %r888};
	shf.r.wrap.b32 	%r890, %r887, %r886, 18;
	shf.r.wrap.b32 	%r891, %r886, %r887, 18;
	mov.b64 	%rd1534, {%r891, %r890};
	xor.b64  	%rd1535, %rd1533, %rd1534;
	shf.l.wrap.b32 	%r892, %r886, %r887, 23;
	shf.l.wrap.b32 	%r893, %r887, %r886, 23;
	mov.b64 	%rd1536, {%r893, %r892};
	xor.b64  	%rd1537, %rd1535, %rd1536;
	xor.b64  	%rd1538, %rd1497, %rd1473;
	and.b64  	%rd1539, %rd1521, %rd1538;
	xor.b64  	%rd1540, %rd1539, %rd1473;
	add.s64 	%rd1541, %rd1540, %rd1449;
	add.s64 	%rd1542, %rd1541, %rd1537;
	add.s64 	%rd1543, %rd1542, %rd2357;
	add.s64 	%rd1544, %rd1543, 1334009975649890238;
	add.s64 	%rd1545, %rd1544, %rd1460;
	and.b64  	%rd1546, %rd1532, %rd1508;
	or.b64  	%rd1547, %rd1532, %rd1508;
	and.b64  	%rd1548, %rd1547, %rd1484;
	or.b64  	%rd1549, %rd1548, %rd1546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd1532;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 28;
	shf.r.wrap.b32 	%r897, %r894, %r895, 28;
	mov.b64 	%rd1550, {%r897, %r896};
	shf.l.wrap.b32 	%r898, %r894, %r895, 30;
	shf.l.wrap.b32 	%r899, %r895, %r894, 30;
	mov.b64 	%rd1551, {%r899, %r898};
	xor.b64  	%rd1552, %rd1550, %rd1551;
	shf.l.wrap.b32 	%r900, %r894, %r895, 25;
	shf.l.wrap.b32 	%r901, %r895, %r894, 25;
	mov.b64 	%rd1553, {%r901, %r900};
	xor.b64  	%rd1554, %rd1552, %rd1553;
	add.s64 	%rd1555, %rd1554, %rd1549;
	add.s64 	%rd1556, %rd1555, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1545;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 14;
	shf.r.wrap.b32 	%r905, %r902, %r903, 14;
	mov.b64 	%rd1557, {%r905, %r904};
	shf.r.wrap.b32 	%r906, %r903, %r902, 18;
	shf.r.wrap.b32 	%r907, %r902, %r903, 18;
	mov.b64 	%rd1558, {%r907, %r906};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	shf.l.wrap.b32 	%r908, %r902, %r903, 23;
	shf.l.wrap.b32 	%r909, %r903, %r902, 23;
	mov.b64 	%rd1560, {%r909, %r908};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	xor.b64  	%rd1562, %rd1521, %rd1497;
	and.b64  	%rd1563, %rd1545, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1497;
	add.s64 	%rd1565, %rd1564, %rd1473;
	add.s64 	%rd1566, %rd1565, %rd1561;
	add.s64 	%rd1567, %rd1566, %rd2356;
	add.s64 	%rd1568, %rd1567, 2608012711638119052;
	add.s64 	%rd1569, %rd1568, %rd1484;
	and.b64  	%rd1570, %rd1556, %rd1532;
	or.b64  	%rd1571, %rd1556, %rd1532;
	and.b64  	%rd1572, %rd1571, %rd1508;
	or.b64  	%rd1573, %rd1572, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd1556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd1556;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 28;
	shf.r.wrap.b32 	%r913, %r910, %r911, 28;
	mov.b64 	%rd1574, {%r913, %r912};
	shf.l.wrap.b32 	%r914, %r910, %r911, 30;
	shf.l.wrap.b32 	%r915, %r911, %r910, 30;
	mov.b64 	%rd1575, {%r915, %r914};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	shf.l.wrap.b32 	%r916, %r910, %r911, 25;
	shf.l.wrap.b32 	%r917, %r911, %r910, 25;
	mov.b64 	%rd1577, {%r917, %r916};
	xor.b64  	%rd1578, %rd1576, %rd1577;
	add.s64 	%rd1579, %rd1578, %rd1573;
	add.s64 	%rd1580, %rd1579, %rd1568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd1569;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 14;
	shf.r.wrap.b32 	%r921, %r918, %r919, 14;
	mov.b64 	%rd1581, {%r921, %r920};
	shf.r.wrap.b32 	%r922, %r919, %r918, 18;
	shf.r.wrap.b32 	%r923, %r918, %r919, 18;
	mov.b64 	%rd1582, {%r923, %r922};
	xor.b64  	%rd1583, %rd1581, %rd1582;
	shf.l.wrap.b32 	%r924, %r918, %r919, 23;
	shf.l.wrap.b32 	%r925, %r919, %r918, 23;
	mov.b64 	%rd1584, {%r925, %r924};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	xor.b64  	%rd1586, %rd1545, %rd1521;
	and.b64  	%rd1587, %rd1569, %rd1586;
	xor.b64  	%rd1588, %rd1587, %rd1521;
	add.s64 	%rd1589, %rd1588, %rd1497;
	add.s64 	%rd1590, %rd1589, %rd1585;
	add.s64 	%rd1591, %rd1590, %rd2355;
	add.s64 	%rd1592, %rd1591, 6128411473006802146;
	add.s64 	%rd1593, %rd1592, %rd1508;
	and.b64  	%rd1594, %rd1580, %rd1556;
	or.b64  	%rd1595, %rd1580, %rd1556;
	and.b64  	%rd1596, %rd1595, %rd1532;
	or.b64  	%rd1597, %rd1596, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd1580;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 28;
	shf.r.wrap.b32 	%r929, %r926, %r927, 28;
	mov.b64 	%rd1598, {%r929, %r928};
	shf.l.wrap.b32 	%r930, %r926, %r927, 30;
	shf.l.wrap.b32 	%r931, %r927, %r926, 30;
	mov.b64 	%rd1599, {%r931, %r930};
	xor.b64  	%rd1600, %rd1598, %rd1599;
	shf.l.wrap.b32 	%r932, %r926, %r927, 25;
	shf.l.wrap.b32 	%r933, %r927, %r926, 25;
	mov.b64 	%rd1601, {%r933, %r932};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	add.s64 	%rd1603, %rd1602, %rd1597;
	add.s64 	%rd1604, %rd1603, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd1593;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 14;
	shf.r.wrap.b32 	%r937, %r934, %r935, 14;
	mov.b64 	%rd1605, {%r937, %r936};
	shf.r.wrap.b32 	%r938, %r935, %r934, 18;
	shf.r.wrap.b32 	%r939, %r934, %r935, 18;
	mov.b64 	%rd1606, {%r939, %r938};
	xor.b64  	%rd1607, %rd1605, %rd1606;
	shf.l.wrap.b32 	%r940, %r934, %r935, 23;
	shf.l.wrap.b32 	%r941, %r935, %r934, 23;
	mov.b64 	%rd1608, {%r941, %r940};
	xor.b64  	%rd1609, %rd1607, %rd1608;
	xor.b64  	%rd1610, %rd1569, %rd1545;
	and.b64  	%rd1611, %rd1593, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1545;
	add.s64 	%rd1613, %rd1612, %rd1521;
	add.s64 	%rd1614, %rd1613, %rd1609;
	add.s64 	%rd1615, %rd1614, %rd2354;
	add.s64 	%rd1616, %rd1615, 8268148722764581231;
	add.s64 	%rd2374, %rd1616, %rd1532;
	and.b64  	%rd1617, %rd1604, %rd1580;
	or.b64  	%rd1618, %rd1604, %rd1580;
	and.b64  	%rd1619, %rd1618, %rd1556;
	or.b64  	%rd1620, %rd1619, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1604;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 28;
	shf.r.wrap.b32 	%r945, %r942, %r943, 28;
	mov.b64 	%rd1621, {%r945, %r944};
	shf.l.wrap.b32 	%r946, %r942, %r943, 30;
	shf.l.wrap.b32 	%r947, %r943, %r942, 30;
	mov.b64 	%rd1622, {%r947, %r946};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	shf.l.wrap.b32 	%r948, %r942, %r943, 25;
	shf.l.wrap.b32 	%r949, %r943, %r942, 25;
	mov.b64 	%rd1624, {%r949, %r948};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	add.s64 	%rd1626, %rd1625, %rd1620;
	add.s64 	%rd2370, %rd1626, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd2374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd2374;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 14;
	shf.r.wrap.b32 	%r953, %r950, %r951, 14;
	mov.b64 	%rd1627, {%r953, %r952};
	shf.r.wrap.b32 	%r954, %r951, %r950, 18;
	shf.r.wrap.b32 	%r955, %r950, %r951, 18;
	mov.b64 	%rd1628, {%r955, %r954};
	xor.b64  	%rd1629, %rd1627, %rd1628;
	shf.l.wrap.b32 	%r956, %r950, %r951, 23;
	shf.l.wrap.b32 	%r957, %r951, %r950, 23;
	mov.b64 	%rd1630, {%r957, %r956};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	xor.b64  	%rd1632, %rd1593, %rd1569;
	and.b64  	%rd1633, %rd2374, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1569;
	add.s64 	%rd1635, %rd1634, %rd1545;
	add.s64 	%rd1636, %rd1635, %rd1631;
	add.s64 	%rd1637, %rd1636, %rd2353;
	add.s64 	%rd1638, %rd1637, -9160688886553864527;
	add.s64 	%rd2373, %rd1638, %rd1556;
	and.b64  	%rd1639, %rd2370, %rd1604;
	or.b64  	%rd1640, %rd2370, %rd1604;
	and.b64  	%rd1641, %rd1640, %rd1580;
	or.b64  	%rd1642, %rd1641, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd2370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd2370;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 28;
	shf.r.wrap.b32 	%r961, %r958, %r959, 28;
	mov.b64 	%rd1643, {%r961, %r960};
	shf.l.wrap.b32 	%r962, %r958, %r959, 30;
	shf.l.wrap.b32 	%r963, %r959, %r958, 30;
	mov.b64 	%rd1644, {%r963, %r962};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	shf.l.wrap.b32 	%r964, %r958, %r959, 25;
	shf.l.wrap.b32 	%r965, %r959, %r958, 25;
	mov.b64 	%rd1646, {%r965, %r964};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	add.s64 	%rd1648, %rd1647, %rd1642;
	add.s64 	%rd2369, %rd1648, %rd1638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd2373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r967}, %rd2373;
	}
	shf.r.wrap.b32 	%r968, %r967, %r966, 14;
	shf.r.wrap.b32 	%r969, %r966, %r967, 14;
	mov.b64 	%rd1649, {%r969, %r968};
	shf.r.wrap.b32 	%r970, %r967, %r966, 18;
	shf.r.wrap.b32 	%r971, %r966, %r967, 18;
	mov.b64 	%rd1650, {%r971, %r970};
	xor.b64  	%rd1651, %rd1649, %rd1650;
	shf.l.wrap.b32 	%r972, %r966, %r967, 23;
	shf.l.wrap.b32 	%r973, %r967, %r966, 23;
	mov.b64 	%rd1652, {%r973, %r972};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd2374, %rd1593;
	and.b64  	%rd1655, %rd2373, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1593;
	add.s64 	%rd1657, %rd1656, %rd1569;
	add.s64 	%rd1658, %rd1657, %rd1653;
	add.s64 	%rd1659, %rd1658, %rd2352;
	add.s64 	%rd1660, %rd1659, -7215885187991268811;
	add.s64 	%rd2372, %rd1660, %rd1580;
	and.b64  	%rd1661, %rd2369, %rd2370;
	or.b64  	%rd1662, %rd2369, %rd2370;
	and.b64  	%rd1663, %rd1662, %rd1604;
	or.b64  	%rd1664, %rd1663, %rd1661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd2369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd2369;
	}
	shf.r.wrap.b32 	%r976, %r975, %r974, 28;
	shf.r.wrap.b32 	%r977, %r974, %r975, 28;
	mov.b64 	%rd1665, {%r977, %r976};
	shf.l.wrap.b32 	%r978, %r974, %r975, 30;
	shf.l.wrap.b32 	%r979, %r975, %r974, 30;
	mov.b64 	%rd1666, {%r979, %r978};
	xor.b64  	%rd1667, %rd1665, %rd1666;
	shf.l.wrap.b32 	%r980, %r974, %r975, 25;
	shf.l.wrap.b32 	%r981, %r975, %r974, 25;
	mov.b64 	%rd1668, {%r981, %r980};
	xor.b64  	%rd1669, %rd1667, %rd1668;
	add.s64 	%rd1670, %rd1669, %rd1664;
	add.s64 	%rd2368, %rd1670, %rd1660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r982,%dummy}, %rd2372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd2372;
	}
	shf.r.wrap.b32 	%r984, %r983, %r982, 14;
	shf.r.wrap.b32 	%r985, %r982, %r983, 14;
	mov.b64 	%rd1671, {%r985, %r984};
	shf.r.wrap.b32 	%r986, %r983, %r982, 18;
	shf.r.wrap.b32 	%r987, %r982, %r983, 18;
	mov.b64 	%rd1672, {%r987, %r986};
	xor.b64  	%rd1673, %rd1671, %rd1672;
	shf.l.wrap.b32 	%r988, %r982, %r983, 23;
	shf.l.wrap.b32 	%r989, %r983, %r982, 23;
	mov.b64 	%rd1674, {%r989, %r988};
	xor.b64  	%rd1675, %rd1673, %rd1674;
	xor.b64  	%rd1676, %rd2373, %rd2374;
	and.b64  	%rd1677, %rd2372, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd2374;
	add.s64 	%rd1679, %rd1678, %rd1593;
	add.s64 	%rd1680, %rd1679, %rd1675;
	add.s64 	%rd1681, %rd1680, %rd2351;
	add.s64 	%rd1682, %rd1681, -4495734319001033068;
	add.s64 	%rd2371, %rd1682, %rd1604;
	and.b64  	%rd1683, %rd2368, %rd2369;
	or.b64  	%rd1684, %rd2368, %rd2369;
	and.b64  	%rd1685, %rd1684, %rd2370;
	or.b64  	%rd1686, %rd1685, %rd1683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r991}, %rd2368;
	}
	shf.r.wrap.b32 	%r992, %r991, %r990, 28;
	shf.r.wrap.b32 	%r993, %r990, %r991, 28;
	mov.b64 	%rd1687, {%r993, %r992};
	shf.l.wrap.b32 	%r994, %r990, %r991, 30;
	shf.l.wrap.b32 	%r995, %r991, %r990, 30;
	mov.b64 	%rd1688, {%r995, %r994};
	xor.b64  	%rd1689, %rd1687, %rd1688;
	shf.l.wrap.b32 	%r996, %r990, %r991, 25;
	shf.l.wrap.b32 	%r997, %r991, %r990, 25;
	mov.b64 	%rd1690, {%r997, %r996};
	xor.b64  	%rd1691, %rd1689, %rd1690;
	add.s64 	%rd1692, %rd1691, %rd1686;
	add.s64 	%rd2367, %rd1692, %rd1682;
	mov.u32 	%r1485, 16;

$L__BB4_12:
	.pragma "nounroll";
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd2352;
	}
	shf.l.wrap.b32 	%r1000, %r999, %r998, 3;
	shf.l.wrap.b32 	%r1001, %r998, %r999, 3;
	mov.b64 	%rd1693, {%r1001, %r1000};
	shf.r.wrap.b32 	%r1002, %r998, %r999, 19;
	shf.r.wrap.b32 	%r1003, %r999, %r998, 19;
	mov.b64 	%rd1694, {%r1003, %r1002};
	xor.b64  	%rd1695, %rd1694, %rd1693;
	shr.u64 	%rd1696, %rd2352, 6;
	xor.b64  	%rd1697, %rd1695, %rd1696;
	add.s64 	%rd1698, %rd2357, %rd2366;
	add.s64 	%rd1699, %rd1698, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd2365;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 8;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 8;
	mov.b64 	%rd1700, {%r1007, %r1006};
	shf.r.wrap.b32 	%r1008, %r1005, %r1004, 1;
	shf.r.wrap.b32 	%r1009, %r1004, %r1005, 1;
	mov.b64 	%rd1701, {%r1009, %r1008};
	xor.b64  	%rd1702, %rd1701, %rd1700;
	shr.u64 	%rd1703, %rd2365, 7;
	xor.b64  	%rd1704, %rd1702, %rd1703;
	add.s64 	%rd2366, %rd1699, %rd1704;
	mul.wide.u32 	%rd1705, %r1485, 8;
	mov.u64 	%rd1706, k;
	add.s64 	%rd1707, %rd1706, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd2371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd2371;
	}
	shf.r.wrap.b32 	%r1012, %r1011, %r1010, 18;
	shf.r.wrap.b32 	%r1013, %r1010, %r1011, 18;
	mov.b64 	%rd1708, {%r1013, %r1012};
	shf.r.wrap.b32 	%r1014, %r1011, %r1010, 14;
	shf.r.wrap.b32 	%r1015, %r1010, %r1011, 14;
	mov.b64 	%rd1709, {%r1015, %r1014};
	xor.b64  	%rd1710, %rd1709, %rd1708;
	shf.l.wrap.b32 	%r1016, %r1010, %r1011, 23;
	shf.l.wrap.b32 	%r1017, %r1011, %r1010, 23;
	mov.b64 	%rd1711, {%r1017, %r1016};
	xor.b64  	%rd1712, %rd1710, %rd1711;
	xor.b64  	%rd1713, %rd2372, %rd2373;
	and.b64  	%rd1714, %rd2371, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd2373;
	add.s64 	%rd1716, %rd1715, %rd2374;
	add.s64 	%rd1717, %rd1716, %rd1712;
	ld.const.u64 	%rd1718, [%rd1707];
	add.s64 	%rd1719, %rd1717, %rd1718;
	add.s64 	%rd1720, %rd1719, %rd2366;
	add.s64 	%rd1721, %rd1720, %rd2370;
	or.b64  	%rd1722, %rd2367, %rd2368;
	and.b64  	%rd1723, %rd1722, %rd2369;
	and.b64  	%rd1724, %rd2367, %rd2368;
	or.b64  	%rd1725, %rd1723, %rd1724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd2367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1019,%dummy}, %rd2367;
	}
	shf.l.wrap.b32 	%r1020, %r1019, %r1018, 30;
	shf.l.wrap.b32 	%r1021, %r1018, %r1019, 30;
	mov.b64 	%rd1726, {%r1021, %r1020};
	shf.r.wrap.b32 	%r1022, %r1018, %r1019, 28;
	shf.r.wrap.b32 	%r1023, %r1019, %r1018, 28;
	mov.b64 	%rd1727, {%r1023, %r1022};
	xor.b64  	%rd1728, %rd1727, %rd1726;
	shf.l.wrap.b32 	%r1024, %r1019, %r1018, 25;
	shf.l.wrap.b32 	%r1025, %r1018, %r1019, 25;
	mov.b64 	%rd1729, {%r1025, %r1024};
	xor.b64  	%rd1730, %rd1728, %rd1729;
	add.s64 	%rd1731, %rd1730, %rd1725;
	add.s64 	%rd1732, %rd1731, %rd1720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd2351;
	}
	shf.l.wrap.b32 	%r1028, %r1027, %r1026, 3;
	shf.l.wrap.b32 	%r1029, %r1026, %r1027, 3;
	mov.b64 	%rd1733, {%r1029, %r1028};
	shf.r.wrap.b32 	%r1030, %r1026, %r1027, 19;
	shf.r.wrap.b32 	%r1031, %r1027, %r1026, 19;
	mov.b64 	%rd1734, {%r1031, %r1030};
	xor.b64  	%rd1735, %rd1734, %rd1733;
	shr.u64 	%rd1736, %rd2351, 6;
	xor.b64  	%rd1737, %rd1735, %rd1736;
	add.s64 	%rd1738, %rd2356, %rd2365;
	add.s64 	%rd1739, %rd1738, %rd1737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd2364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd2364;
	}
	shf.r.wrap.b32 	%r1034, %r1033, %r1032, 8;
	shf.r.wrap.b32 	%r1035, %r1032, %r1033, 8;
	mov.b64 	%rd1740, {%r1035, %r1034};
	shf.r.wrap.b32 	%r1036, %r1033, %r1032, 1;
	shf.r.wrap.b32 	%r1037, %r1032, %r1033, 1;
	mov.b64 	%rd1741, {%r1037, %r1036};
	xor.b64  	%rd1742, %rd1741, %rd1740;
	shr.u64 	%rd1743, %rd2364, 7;
	xor.b64  	%rd1744, %rd1742, %rd1743;
	add.s64 	%rd2365, %rd1739, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd1721;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 14;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 14;
	mov.b64 	%rd1745, {%r1041, %r1040};
	shf.r.wrap.b32 	%r1042, %r1039, %r1038, 18;
	shf.r.wrap.b32 	%r1043, %r1038, %r1039, 18;
	mov.b64 	%rd1746, {%r1043, %r1042};
	xor.b64  	%rd1747, %rd1745, %rd1746;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 23;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 23;
	mov.b64 	%rd1748, {%r1045, %r1044};
	xor.b64  	%rd1749, %rd1747, %rd1748;
	xor.b64  	%rd1750, %rd2371, %rd2372;
	and.b64  	%rd1751, %rd1721, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd2372;
	add.s64 	%rd1753, %rd1752, %rd2373;
	add.s64 	%rd1754, %rd1753, %rd1749;
	ld.const.u64 	%rd1755, [%rd1707+8];
	add.s64 	%rd1756, %rd1754, %rd1755;
	add.s64 	%rd1757, %rd1756, %rd2365;
	add.s64 	%rd1758, %rd1757, %rd2369;
	and.b64  	%rd1759, %rd1732, %rd2367;
	or.b64  	%rd1760, %rd1732, %rd2367;
	and.b64  	%rd1761, %rd1760, %rd2368;
	or.b64  	%rd1762, %rd1761, %rd1759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd1732;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 28;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 28;
	mov.b64 	%rd1763, {%r1049, %r1048};
	shf.l.wrap.b32 	%r1050, %r1046, %r1047, 30;
	shf.l.wrap.b32 	%r1051, %r1047, %r1046, 30;
	mov.b64 	%rd1764, {%r1051, %r1050};
	xor.b64  	%rd1765, %rd1763, %rd1764;
	shf.l.wrap.b32 	%r1052, %r1046, %r1047, 25;
	shf.l.wrap.b32 	%r1053, %r1047, %r1046, 25;
	mov.b64 	%rd1766, {%r1053, %r1052};
	xor.b64  	%rd1767, %rd1765, %rd1766;
	add.s64 	%rd1768, %rd1767, %rd1762;
	add.s64 	%rd1769, %rd1768, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd2366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd2366;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 19;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 19;
	mov.b64 	%rd1770, {%r1057, %r1056};
	shf.l.wrap.b32 	%r1058, %r1054, %r1055, 3;
	shf.l.wrap.b32 	%r1059, %r1055, %r1054, 3;
	mov.b64 	%rd1771, {%r1059, %r1058};
	xor.b64  	%rd1772, %rd1770, %rd1771;
	shr.u64 	%rd1773, %rd2366, 6;
	xor.b64  	%rd1774, %rd1772, %rd1773;
	add.s64 	%rd1775, %rd2355, %rd2364;
	add.s64 	%rd1776, %rd1775, %rd1774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd2363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd2363;
	}
	shf.r.wrap.b32 	%r1062, %r1061, %r1060, 8;
	shf.r.wrap.b32 	%r1063, %r1060, %r1061, 8;
	mov.b64 	%rd1777, {%r1063, %r1062};
	shf.r.wrap.b32 	%r1064, %r1061, %r1060, 1;
	shf.r.wrap.b32 	%r1065, %r1060, %r1061, 1;
	mov.b64 	%rd1778, {%r1065, %r1064};
	xor.b64  	%rd1779, %rd1778, %rd1777;
	shr.u64 	%rd1780, %rd2363, 7;
	xor.b64  	%rd1781, %rd1779, %rd1780;
	add.s64 	%rd2364, %rd1776, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd1758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd1758;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 14;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 14;
	mov.b64 	%rd1782, {%r1069, %r1068};
	shf.r.wrap.b32 	%r1070, %r1067, %r1066, 18;
	shf.r.wrap.b32 	%r1071, %r1066, %r1067, 18;
	mov.b64 	%rd1783, {%r1071, %r1070};
	xor.b64  	%rd1784, %rd1782, %rd1783;
	shf.l.wrap.b32 	%r1072, %r1066, %r1067, 23;
	shf.l.wrap.b32 	%r1073, %r1067, %r1066, 23;
	mov.b64 	%rd1785, {%r1073, %r1072};
	xor.b64  	%rd1786, %rd1784, %rd1785;
	xor.b64  	%rd1787, %rd1721, %rd2371;
	and.b64  	%rd1788, %rd1758, %rd1787;
	xor.b64  	%rd1789, %rd1788, %rd2371;
	add.s64 	%rd1790, %rd1789, %rd2372;
	add.s64 	%rd1791, %rd1790, %rd1786;
	ld.const.u64 	%rd1792, [%rd1707+16];
	add.s64 	%rd1793, %rd1791, %rd1792;
	add.s64 	%rd1794, %rd1793, %rd2364;
	add.s64 	%rd1795, %rd1794, %rd2368;
	and.b64  	%rd1796, %rd1769, %rd1732;
	or.b64  	%rd1797, %rd1769, %rd1732;
	and.b64  	%rd1798, %rd1797, %rd2367;
	or.b64  	%rd1799, %rd1798, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1074,%dummy}, %rd1769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1075}, %rd1769;
	}
	shf.r.wrap.b32 	%r1076, %r1075, %r1074, 28;
	shf.r.wrap.b32 	%r1077, %r1074, %r1075, 28;
	mov.b64 	%rd1800, {%r1077, %r1076};
	shf.l.wrap.b32 	%r1078, %r1074, %r1075, 30;
	shf.l.wrap.b32 	%r1079, %r1075, %r1074, 30;
	mov.b64 	%rd1801, {%r1079, %r1078};
	xor.b64  	%rd1802, %rd1800, %rd1801;
	shf.l.wrap.b32 	%r1080, %r1074, %r1075, 25;
	shf.l.wrap.b32 	%r1081, %r1075, %r1074, 25;
	mov.b64 	%rd1803, {%r1081, %r1080};
	xor.b64  	%rd1804, %rd1802, %rd1803;
	add.s64 	%rd1805, %rd1804, %rd1799;
	add.s64 	%rd1806, %rd1805, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd2365;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 19;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 19;
	mov.b64 	%rd1807, {%r1085, %r1084};
	shf.l.wrap.b32 	%r1086, %r1082, %r1083, 3;
	shf.l.wrap.b32 	%r1087, %r1083, %r1082, 3;
	mov.b64 	%rd1808, {%r1087, %r1086};
	xor.b64  	%rd1809, %rd1807, %rd1808;
	shr.u64 	%rd1810, %rd2365, 6;
	xor.b64  	%rd1811, %rd1809, %rd1810;
	add.s64 	%rd1812, %rd2354, %rd2363;
	add.s64 	%rd1813, %rd1812, %rd1811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1088,%dummy}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd2362;
	}
	shf.r.wrap.b32 	%r1090, %r1089, %r1088, 8;
	shf.r.wrap.b32 	%r1091, %r1088, %r1089, 8;
	mov.b64 	%rd1814, {%r1091, %r1090};
	shf.r.wrap.b32 	%r1092, %r1089, %r1088, 1;
	shf.r.wrap.b32 	%r1093, %r1088, %r1089, 1;
	mov.b64 	%rd1815, {%r1093, %r1092};
	xor.b64  	%rd1816, %rd1815, %rd1814;
	shr.u64 	%rd1817, %rd2362, 7;
	xor.b64  	%rd1818, %rd1816, %rd1817;
	add.s64 	%rd2363, %rd1813, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1094,%dummy}, %rd1795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1095}, %rd1795;
	}
	shf.r.wrap.b32 	%r1096, %r1095, %r1094, 14;
	shf.r.wrap.b32 	%r1097, %r1094, %r1095, 14;
	mov.b64 	%rd1819, {%r1097, %r1096};
	shf.r.wrap.b32 	%r1098, %r1095, %r1094, 18;
	shf.r.wrap.b32 	%r1099, %r1094, %r1095, 18;
	mov.b64 	%rd1820, {%r1099, %r1098};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	shf.l.wrap.b32 	%r1100, %r1094, %r1095, 23;
	shf.l.wrap.b32 	%r1101, %r1095, %r1094, 23;
	mov.b64 	%rd1822, {%r1101, %r1100};
	xor.b64  	%rd1823, %rd1821, %rd1822;
	xor.b64  	%rd1824, %rd1758, %rd1721;
	and.b64  	%rd1825, %rd1795, %rd1824;
	xor.b64  	%rd1826, %rd1825, %rd1721;
	add.s64 	%rd1827, %rd1826, %rd2371;
	add.s64 	%rd1828, %rd1827, %rd1823;
	ld.const.u64 	%rd1829, [%rd1707+24];
	add.s64 	%rd1830, %rd1828, %rd1829;
	add.s64 	%rd1831, %rd1830, %rd2363;
	add.s64 	%rd1832, %rd1831, %rd2367;
	and.b64  	%rd1833, %rd1806, %rd1769;
	or.b64  	%rd1834, %rd1806, %rd1769;
	and.b64  	%rd1835, %rd1834, %rd1732;
	or.b64  	%rd1836, %rd1835, %rd1833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd1806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd1806;
	}
	shf.r.wrap.b32 	%r1104, %r1103, %r1102, 28;
	shf.r.wrap.b32 	%r1105, %r1102, %r1103, 28;
	mov.b64 	%rd1837, {%r1105, %r1104};
	shf.l.wrap.b32 	%r1106, %r1102, %r1103, 30;
	shf.l.wrap.b32 	%r1107, %r1103, %r1102, 30;
	mov.b64 	%rd1838, {%r1107, %r1106};
	xor.b64  	%rd1839, %rd1837, %rd1838;
	shf.l.wrap.b32 	%r1108, %r1102, %r1103, 25;
	shf.l.wrap.b32 	%r1109, %r1103, %r1102, 25;
	mov.b64 	%rd1840, {%r1109, %r1108};
	xor.b64  	%rd1841, %rd1839, %rd1840;
	add.s64 	%rd1842, %rd1841, %rd1836;
	add.s64 	%rd1843, %rd1842, %rd1831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd2364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1111}, %rd2364;
	}
	shf.r.wrap.b32 	%r1112, %r1111, %r1110, 19;
	shf.r.wrap.b32 	%r1113, %r1110, %r1111, 19;
	mov.b64 	%rd1844, {%r1113, %r1112};
	shf.l.wrap.b32 	%r1114, %r1110, %r1111, 3;
	shf.l.wrap.b32 	%r1115, %r1111, %r1110, 3;
	mov.b64 	%rd1845, {%r1115, %r1114};
	xor.b64  	%rd1846, %rd1844, %rd1845;
	shr.u64 	%rd1847, %rd2364, 6;
	xor.b64  	%rd1848, %rd1846, %rd1847;
	add.s64 	%rd1849, %rd2353, %rd2362;
	add.s64 	%rd1850, %rd1849, %rd1848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd2361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd2361;
	}
	shf.r.wrap.b32 	%r1118, %r1117, %r1116, 8;
	shf.r.wrap.b32 	%r1119, %r1116, %r1117, 8;
	mov.b64 	%rd1851, {%r1119, %r1118};
	shf.r.wrap.b32 	%r1120, %r1117, %r1116, 1;
	shf.r.wrap.b32 	%r1121, %r1116, %r1117, 1;
	mov.b64 	%rd1852, {%r1121, %r1120};
	xor.b64  	%rd1853, %rd1852, %rd1851;
	shr.u64 	%rd1854, %rd2361, 7;
	xor.b64  	%rd1855, %rd1853, %rd1854;
	add.s64 	%rd2362, %rd1850, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1123}, %rd1832;
	}
	shf.r.wrap.b32 	%r1124, %r1123, %r1122, 14;
	shf.r.wrap.b32 	%r1125, %r1122, %r1123, 14;
	mov.b64 	%rd1856, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r1123, %r1122, 18;
	shf.r.wrap.b32 	%r1127, %r1122, %r1123, 18;
	mov.b64 	%rd1857, {%r1127, %r1126};
	xor.b64  	%rd1858, %rd1856, %rd1857;
	shf.l.wrap.b32 	%r1128, %r1122, %r1123, 23;
	shf.l.wrap.b32 	%r1129, %r1123, %r1122, 23;
	mov.b64 	%rd1859, {%r1129, %r1128};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1795, %rd1758;
	and.b64  	%rd1862, %rd1832, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1758;
	add.s64 	%rd1864, %rd1863, %rd1721;
	add.s64 	%rd1865, %rd1864, %rd1860;
	ld.const.u64 	%rd1866, [%rd1707+32];
	add.s64 	%rd1867, %rd1865, %rd1866;
	add.s64 	%rd1868, %rd1867, %rd2362;
	add.s64 	%rd1869, %rd1868, %rd1732;
	and.b64  	%rd1870, %rd1843, %rd1806;
	or.b64  	%rd1871, %rd1843, %rd1806;
	and.b64  	%rd1872, %rd1871, %rd1769;
	or.b64  	%rd1873, %rd1872, %rd1870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd1843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd1843;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 28;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 28;
	mov.b64 	%rd1874, {%r1133, %r1132};
	shf.l.wrap.b32 	%r1134, %r1130, %r1131, 30;
	shf.l.wrap.b32 	%r1135, %r1131, %r1130, 30;
	mov.b64 	%rd1875, {%r1135, %r1134};
	xor.b64  	%rd1876, %rd1874, %rd1875;
	shf.l.wrap.b32 	%r1136, %r1130, %r1131, 25;
	shf.l.wrap.b32 	%r1137, %r1131, %r1130, 25;
	mov.b64 	%rd1877, {%r1137, %r1136};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	add.s64 	%rd1879, %rd1878, %rd1873;
	add.s64 	%rd1880, %rd1879, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd2363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd2363;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 19;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 19;
	mov.b64 	%rd1881, {%r1141, %r1140};
	shf.l.wrap.b32 	%r1142, %r1138, %r1139, 3;
	shf.l.wrap.b32 	%r1143, %r1139, %r1138, 3;
	mov.b64 	%rd1882, {%r1143, %r1142};
	xor.b64  	%rd1883, %rd1881, %rd1882;
	shr.u64 	%rd1884, %rd2363, 6;
	xor.b64  	%rd1885, %rd1883, %rd1884;
	add.s64 	%rd1886, %rd2352, %rd2361;
	add.s64 	%rd1887, %rd1886, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1144,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd2360;
	}
	shf.r.wrap.b32 	%r1146, %r1145, %r1144, 8;
	shf.r.wrap.b32 	%r1147, %r1144, %r1145, 8;
	mov.b64 	%rd1888, {%r1147, %r1146};
	shf.r.wrap.b32 	%r1148, %r1145, %r1144, 1;
	shf.r.wrap.b32 	%r1149, %r1144, %r1145, 1;
	mov.b64 	%rd1889, {%r1149, %r1148};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shr.u64 	%rd1891, %rd2360, 7;
	xor.b64  	%rd1892, %rd1890, %rd1891;
	add.s64 	%rd2361, %rd1887, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1151}, %rd1869;
	}
	shf.r.wrap.b32 	%r1152, %r1151, %r1150, 14;
	shf.r.wrap.b32 	%r1153, %r1150, %r1151, 14;
	mov.b64 	%rd1893, {%r1153, %r1152};
	shf.r.wrap.b32 	%r1154, %r1151, %r1150, 18;
	shf.r.wrap.b32 	%r1155, %r1150, %r1151, 18;
	mov.b64 	%rd1894, {%r1155, %r1154};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	shf.l.wrap.b32 	%r1156, %r1150, %r1151, 23;
	shf.l.wrap.b32 	%r1157, %r1151, %r1150, 23;
	mov.b64 	%rd1896, {%r1157, %r1156};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1832, %rd1795;
	and.b64  	%rd1899, %rd1869, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd1795;
	add.s64 	%rd1901, %rd1900, %rd1758;
	add.s64 	%rd1902, %rd1901, %rd1897;
	ld.const.u64 	%rd1903, [%rd1707+40];
	add.s64 	%rd1904, %rd1902, %rd1903;
	add.s64 	%rd1905, %rd1904, %rd2361;
	add.s64 	%rd1906, %rd1905, %rd1769;
	and.b64  	%rd1907, %rd1880, %rd1843;
	or.b64  	%rd1908, %rd1880, %rd1843;
	and.b64  	%rd1909, %rd1908, %rd1806;
	or.b64  	%rd1910, %rd1909, %rd1907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd1880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd1880;
	}
	shf.r.wrap.b32 	%r1160, %r1159, %r1158, 28;
	shf.r.wrap.b32 	%r1161, %r1158, %r1159, 28;
	mov.b64 	%rd1911, {%r1161, %r1160};
	shf.l.wrap.b32 	%r1162, %r1158, %r1159, 30;
	shf.l.wrap.b32 	%r1163, %r1159, %r1158, 30;
	mov.b64 	%rd1912, {%r1163, %r1162};
	xor.b64  	%rd1913, %rd1911, %rd1912;
	shf.l.wrap.b32 	%r1164, %r1158, %r1159, 25;
	shf.l.wrap.b32 	%r1165, %r1159, %r1158, 25;
	mov.b64 	%rd1914, {%r1165, %r1164};
	xor.b64  	%rd1915, %rd1913, %rd1914;
	add.s64 	%rd1916, %rd1915, %rd1910;
	add.s64 	%rd1917, %rd1916, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1167}, %rd2362;
	}
	shf.r.wrap.b32 	%r1168, %r1167, %r1166, 19;
	shf.r.wrap.b32 	%r1169, %r1166, %r1167, 19;
	mov.b64 	%rd1918, {%r1169, %r1168};
	shf.l.wrap.b32 	%r1170, %r1166, %r1167, 3;
	shf.l.wrap.b32 	%r1171, %r1167, %r1166, 3;
	mov.b64 	%rd1919, {%r1171, %r1170};
	xor.b64  	%rd1920, %rd1918, %rd1919;
	shr.u64 	%rd1921, %rd2362, 6;
	xor.b64  	%rd1922, %rd1920, %rd1921;
	add.s64 	%rd1923, %rd2351, %rd2360;
	add.s64 	%rd1924, %rd1923, %rd1922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1172,%dummy}, %rd2359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1173}, %rd2359;
	}
	shf.r.wrap.b32 	%r1174, %r1173, %r1172, 8;
	shf.r.wrap.b32 	%r1175, %r1172, %r1173, 8;
	mov.b64 	%rd1925, {%r1175, %r1174};
	shf.r.wrap.b32 	%r1176, %r1173, %r1172, 1;
	shf.r.wrap.b32 	%r1177, %r1172, %r1173, 1;
	mov.b64 	%rd1926, {%r1177, %r1176};
	xor.b64  	%rd1927, %rd1926, %rd1925;
	shr.u64 	%rd1928, %rd2359, 7;
	xor.b64  	%rd1929, %rd1927, %rd1928;
	add.s64 	%rd2360, %rd1924, %rd1929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd1906;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 14;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 14;
	mov.b64 	%rd1930, {%r1181, %r1180};
	shf.r.wrap.b32 	%r1182, %r1179, %r1178, 18;
	shf.r.wrap.b32 	%r1183, %r1178, %r1179, 18;
	mov.b64 	%rd1931, {%r1183, %r1182};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	shf.l.wrap.b32 	%r1184, %r1178, %r1179, 23;
	shf.l.wrap.b32 	%r1185, %r1179, %r1178, 23;
	mov.b64 	%rd1933, {%r1185, %r1184};
	xor.b64  	%rd1934, %rd1932, %rd1933;
	xor.b64  	%rd1935, %rd1869, %rd1832;
	and.b64  	%rd1936, %rd1906, %rd1935;
	xor.b64  	%rd1937, %rd1936, %rd1832;
	add.s64 	%rd1938, %rd1937, %rd1795;
	add.s64 	%rd1939, %rd1938, %rd1934;
	ld.const.u64 	%rd1940, [%rd1707+48];
	add.s64 	%rd1941, %rd1939, %rd1940;
	add.s64 	%rd1942, %rd1941, %rd2360;
	add.s64 	%rd1943, %rd1942, %rd1806;
	and.b64  	%rd1944, %rd1917, %rd1880;
	or.b64  	%rd1945, %rd1917, %rd1880;
	and.b64  	%rd1946, %rd1945, %rd1843;
	or.b64  	%rd1947, %rd1946, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd1917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd1917;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 28;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 28;
	mov.b64 	%rd1948, {%r1189, %r1188};
	shf.l.wrap.b32 	%r1190, %r1186, %r1187, 30;
	shf.l.wrap.b32 	%r1191, %r1187, %r1186, 30;
	mov.b64 	%rd1949, {%r1191, %r1190};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	shf.l.wrap.b32 	%r1192, %r1186, %r1187, 25;
	shf.l.wrap.b32 	%r1193, %r1187, %r1186, 25;
	mov.b64 	%rd1951, {%r1193, %r1192};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	add.s64 	%rd1953, %rd1952, %rd1947;
	add.s64 	%rd1954, %rd1953, %rd1942;
	add.s64 	%rd1955, %rd2366, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd2361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd2361;
	}
	shf.r.wrap.b32 	%r1196, %r1195, %r1194, 19;
	shf.r.wrap.b32 	%r1197, %r1194, %r1195, 19;
	mov.b64 	%rd1956, {%r1197, %r1196};
	shf.l.wrap.b32 	%r1198, %r1194, %r1195, 3;
	shf.l.wrap.b32 	%r1199, %r1195, %r1194, 3;
	mov.b64 	%rd1957, {%r1199, %r1198};
	xor.b64  	%rd1958, %rd1956, %rd1957;
	shr.u64 	%rd1959, %rd2361, 6;
	xor.b64  	%rd1960, %rd1958, %rd1959;
	add.s64 	%rd1961, %rd1955, %rd1960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1200,%dummy}, %rd2358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1201}, %rd2358;
	}
	shf.r.wrap.b32 	%r1202, %r1201, %r1200, 8;
	shf.r.wrap.b32 	%r1203, %r1200, %r1201, 8;
	mov.b64 	%rd1962, {%r1203, %r1202};
	shf.r.wrap.b32 	%r1204, %r1201, %r1200, 1;
	shf.r.wrap.b32 	%r1205, %r1200, %r1201, 1;
	mov.b64 	%rd1963, {%r1205, %r1204};
	xor.b64  	%rd1964, %rd1963, %rd1962;
	shr.u64 	%rd1965, %rd2358, 7;
	xor.b64  	%rd1966, %rd1964, %rd1965;
	add.s64 	%rd2359, %rd1961, %rd1966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd1943;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 14;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 14;
	mov.b64 	%rd1967, {%r1209, %r1208};
	shf.r.wrap.b32 	%r1210, %r1207, %r1206, 18;
	shf.r.wrap.b32 	%r1211, %r1206, %r1207, 18;
	mov.b64 	%rd1968, {%r1211, %r1210};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	shf.l.wrap.b32 	%r1212, %r1206, %r1207, 23;
	shf.l.wrap.b32 	%r1213, %r1207, %r1206, 23;
	mov.b64 	%rd1970, {%r1213, %r1212};
	xor.b64  	%rd1971, %rd1969, %rd1970;
	xor.b64  	%rd1972, %rd1906, %rd1869;
	and.b64  	%rd1973, %rd1943, %rd1972;
	xor.b64  	%rd1974, %rd1973, %rd1869;
	add.s64 	%rd1975, %rd1974, %rd1832;
	add.s64 	%rd1976, %rd1975, %rd1971;
	ld.const.u64 	%rd1977, [%rd1707+56];
	add.s64 	%rd1978, %rd1976, %rd1977;
	add.s64 	%rd1979, %rd1978, %rd2359;
	add.s64 	%rd1980, %rd1979, %rd1843;
	and.b64  	%rd1981, %rd1954, %rd1917;
	or.b64  	%rd1982, %rd1954, %rd1917;
	and.b64  	%rd1983, %rd1982, %rd1880;
	or.b64  	%rd1984, %rd1983, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1214,%dummy}, %rd1954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1215}, %rd1954;
	}
	shf.r.wrap.b32 	%r1216, %r1215, %r1214, 28;
	shf.r.wrap.b32 	%r1217, %r1214, %r1215, 28;
	mov.b64 	%rd1985, {%r1217, %r1216};
	shf.l.wrap.b32 	%r1218, %r1214, %r1215, 30;
	shf.l.wrap.b32 	%r1219, %r1215, %r1214, 30;
	mov.b64 	%rd1986, {%r1219, %r1218};
	xor.b64  	%rd1987, %rd1985, %rd1986;
	shf.l.wrap.b32 	%r1220, %r1214, %r1215, 25;
	shf.l.wrap.b32 	%r1221, %r1215, %r1214, 25;
	mov.b64 	%rd1988, {%r1221, %r1220};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	add.s64 	%rd1990, %rd1989, %rd1984;
	add.s64 	%rd1991, %rd1990, %rd1979;
	add.s64 	%rd1992, %rd2365, %rd2358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd2360;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 19;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 19;
	mov.b64 	%rd1993, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 3;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 3;
	mov.b64 	%rd1994, {%r1227, %r1226};
	xor.b64  	%rd1995, %rd1993, %rd1994;
	shr.u64 	%rd1996, %rd2360, 6;
	xor.b64  	%rd1997, %rd1995, %rd1996;
	add.s64 	%rd1998, %rd1992, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd2357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd2357;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 8;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 8;
	mov.b64 	%rd1999, {%r1231, %r1230};
	shf.r.wrap.b32 	%r1232, %r1229, %r1228, 1;
	shf.r.wrap.b32 	%r1233, %r1228, %r1229, 1;
	mov.b64 	%rd2000, {%r1233, %r1232};
	xor.b64  	%rd2001, %rd2000, %rd1999;
	shr.u64 	%rd2002, %rd2357, 7;
	xor.b64  	%rd2003, %rd2001, %rd2002;
	add.s64 	%rd2358, %rd1998, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1234,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1235}, %rd1980;
	}
	shf.r.wrap.b32 	%r1236, %r1235, %r1234, 14;
	shf.r.wrap.b32 	%r1237, %r1234, %r1235, 14;
	mov.b64 	%rd2004, {%r1237, %r1236};
	shf.r.wrap.b32 	%r1238, %r1235, %r1234, 18;
	shf.r.wrap.b32 	%r1239, %r1234, %r1235, 18;
	mov.b64 	%rd2005, {%r1239, %r1238};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	shf.l.wrap.b32 	%r1240, %r1234, %r1235, 23;
	shf.l.wrap.b32 	%r1241, %r1235, %r1234, 23;
	mov.b64 	%rd2007, {%r1241, %r1240};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	xor.b64  	%rd2009, %rd1943, %rd1906;
	and.b64  	%rd2010, %rd1980, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd1906;
	add.s64 	%rd2012, %rd2011, %rd1869;
	add.s64 	%rd2013, %rd2012, %rd2008;
	ld.const.u64 	%rd2014, [%rd1707+64];
	add.s64 	%rd2015, %rd2013, %rd2014;
	add.s64 	%rd2016, %rd2015, %rd2358;
	add.s64 	%rd2017, %rd2016, %rd1880;
	and.b64  	%rd2018, %rd1991, %rd1954;
	or.b64  	%rd2019, %rd1991, %rd1954;
	and.b64  	%rd2020, %rd2019, %rd1917;
	or.b64  	%rd2021, %rd2020, %rd2018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd1991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd1991;
	}
	shf.r.wrap.b32 	%r1244, %r1243, %r1242, 28;
	shf.r.wrap.b32 	%r1245, %r1242, %r1243, 28;
	mov.b64 	%rd2022, {%r1245, %r1244};
	shf.l.wrap.b32 	%r1246, %r1242, %r1243, 30;
	shf.l.wrap.b32 	%r1247, %r1243, %r1242, 30;
	mov.b64 	%rd2023, {%r1247, %r1246};
	xor.b64  	%rd2024, %rd2022, %rd2023;
	shf.l.wrap.b32 	%r1248, %r1242, %r1243, 25;
	shf.l.wrap.b32 	%r1249, %r1243, %r1242, 25;
	mov.b64 	%rd2025, {%r1249, %r1248};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	add.s64 	%rd2027, %rd2026, %rd2021;
	add.s64 	%rd2028, %rd2027, %rd2016;
	add.s64 	%rd2029, %rd2364, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd2359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1251}, %rd2359;
	}
	shf.r.wrap.b32 	%r1252, %r1251, %r1250, 19;
	shf.r.wrap.b32 	%r1253, %r1250, %r1251, 19;
	mov.b64 	%rd2030, {%r1253, %r1252};
	shf.l.wrap.b32 	%r1254, %r1250, %r1251, 3;
	shf.l.wrap.b32 	%r1255, %r1251, %r1250, 3;
	mov.b64 	%rd2031, {%r1255, %r1254};
	xor.b64  	%rd2032, %rd2030, %rd2031;
	shr.u64 	%rd2033, %rd2359, 6;
	xor.b64  	%rd2034, %rd2032, %rd2033;
	add.s64 	%rd2035, %rd2029, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1256,%dummy}, %rd2356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1257}, %rd2356;
	}
	shf.r.wrap.b32 	%r1258, %r1257, %r1256, 8;
	shf.r.wrap.b32 	%r1259, %r1256, %r1257, 8;
	mov.b64 	%rd2036, {%r1259, %r1258};
	shf.r.wrap.b32 	%r1260, %r1257, %r1256, 1;
	shf.r.wrap.b32 	%r1261, %r1256, %r1257, 1;
	mov.b64 	%rd2037, {%r1261, %r1260};
	xor.b64  	%rd2038, %rd2037, %rd2036;
	shr.u64 	%rd2039, %rd2356, 7;
	xor.b64  	%rd2040, %rd2038, %rd2039;
	add.s64 	%rd2357, %rd2035, %rd2040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd2017;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 14;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 14;
	mov.b64 	%rd2041, {%r1265, %r1264};
	shf.r.wrap.b32 	%r1266, %r1263, %r1262, 18;
	shf.r.wrap.b32 	%r1267, %r1262, %r1263, 18;
	mov.b64 	%rd2042, {%r1267, %r1266};
	xor.b64  	%rd2043, %rd2041, %rd2042;
	shf.l.wrap.b32 	%r1268, %r1262, %r1263, 23;
	shf.l.wrap.b32 	%r1269, %r1263, %r1262, 23;
	mov.b64 	%rd2044, {%r1269, %r1268};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	xor.b64  	%rd2046, %rd1980, %rd1943;
	and.b64  	%rd2047, %rd2017, %rd2046;
	xor.b64  	%rd2048, %rd2047, %rd1943;
	add.s64 	%rd2049, %rd2048, %rd1906;
	add.s64 	%rd2050, %rd2049, %rd2045;
	ld.const.u64 	%rd2051, [%rd1707+72];
	add.s64 	%rd2052, %rd2050, %rd2051;
	add.s64 	%rd2053, %rd2052, %rd2357;
	add.s64 	%rd2054, %rd2053, %rd1917;
	and.b64  	%rd2055, %rd2028, %rd1991;
	or.b64  	%rd2056, %rd2028, %rd1991;
	and.b64  	%rd2057, %rd2056, %rd1954;
	or.b64  	%rd2058, %rd2057, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd2028;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 28;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 28;
	mov.b64 	%rd2059, {%r1273, %r1272};
	shf.l.wrap.b32 	%r1274, %r1270, %r1271, 30;
	shf.l.wrap.b32 	%r1275, %r1271, %r1270, 30;
	mov.b64 	%rd2060, {%r1275, %r1274};
	xor.b64  	%rd2061, %rd2059, %rd2060;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 25;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 25;
	mov.b64 	%rd2062, {%r1277, %r1276};
	xor.b64  	%rd2063, %rd2061, %rd2062;
	add.s64 	%rd2064, %rd2063, %rd2058;
	add.s64 	%rd2065, %rd2064, %rd2053;
	add.s64 	%rd2066, %rd2363, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd2358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd2358;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 19;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 19;
	mov.b64 	%rd2067, {%r1281, %r1280};
	shf.l.wrap.b32 	%r1282, %r1278, %r1279, 3;
	shf.l.wrap.b32 	%r1283, %r1279, %r1278, 3;
	mov.b64 	%rd2068, {%r1283, %r1282};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	shr.u64 	%rd2070, %rd2358, 6;
	xor.b64  	%rd2071, %rd2069, %rd2070;
	add.s64 	%rd2072, %rd2066, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd2355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd2355;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 8;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 8;
	mov.b64 	%rd2073, {%r1287, %r1286};
	shf.r.wrap.b32 	%r1288, %r1285, %r1284, 1;
	shf.r.wrap.b32 	%r1289, %r1284, %r1285, 1;
	mov.b64 	%rd2074, {%r1289, %r1288};
	xor.b64  	%rd2075, %rd2074, %rd2073;
	shr.u64 	%rd2076, %rd2355, 7;
	xor.b64  	%rd2077, %rd2075, %rd2076;
	add.s64 	%rd2356, %rd2072, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1290,%dummy}, %rd2054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1291}, %rd2054;
	}
	shf.r.wrap.b32 	%r1292, %r1291, %r1290, 14;
	shf.r.wrap.b32 	%r1293, %r1290, %r1291, 14;
	mov.b64 	%rd2078, {%r1293, %r1292};
	shf.r.wrap.b32 	%r1294, %r1291, %r1290, 18;
	shf.r.wrap.b32 	%r1295, %r1290, %r1291, 18;
	mov.b64 	%rd2079, {%r1295, %r1294};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	shf.l.wrap.b32 	%r1296, %r1290, %r1291, 23;
	shf.l.wrap.b32 	%r1297, %r1291, %r1290, 23;
	mov.b64 	%rd2081, {%r1297, %r1296};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	xor.b64  	%rd2083, %rd2017, %rd1980;
	and.b64  	%rd2084, %rd2054, %rd2083;
	xor.b64  	%rd2085, %rd2084, %rd1980;
	add.s64 	%rd2086, %rd2085, %rd1943;
	add.s64 	%rd2087, %rd2086, %rd2082;
	ld.const.u64 	%rd2088, [%rd1707+80];
	add.s64 	%rd2089, %rd2087, %rd2088;
	add.s64 	%rd2090, %rd2089, %rd2356;
	add.s64 	%rd2091, %rd2090, %rd1954;
	and.b64  	%rd2092, %rd2065, %rd2028;
	or.b64  	%rd2093, %rd2065, %rd2028;
	and.b64  	%rd2094, %rd2093, %rd1991;
	or.b64  	%rd2095, %rd2094, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1298,%dummy}, %rd2065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1299}, %rd2065;
	}
	shf.r.wrap.b32 	%r1300, %r1299, %r1298, 28;
	shf.r.wrap.b32 	%r1301, %r1298, %r1299, 28;
	mov.b64 	%rd2096, {%r1301, %r1300};
	shf.l.wrap.b32 	%r1302, %r1298, %r1299, 30;
	shf.l.wrap.b32 	%r1303, %r1299, %r1298, 30;
	mov.b64 	%rd2097, {%r1303, %r1302};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	shf.l.wrap.b32 	%r1304, %r1298, %r1299, 25;
	shf.l.wrap.b32 	%r1305, %r1299, %r1298, 25;
	mov.b64 	%rd2099, {%r1305, %r1304};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	add.s64 	%rd2101, %rd2100, %rd2095;
	add.s64 	%rd2102, %rd2101, %rd2090;
	add.s64 	%rd2103, %rd2362, %rd2355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd2357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1307}, %rd2357;
	}
	shf.r.wrap.b32 	%r1308, %r1307, %r1306, 19;
	shf.r.wrap.b32 	%r1309, %r1306, %r1307, 19;
	mov.b64 	%rd2104, {%r1309, %r1308};
	shf.l.wrap.b32 	%r1310, %r1306, %r1307, 3;
	shf.l.wrap.b32 	%r1311, %r1307, %r1306, 3;
	mov.b64 	%rd2105, {%r1311, %r1310};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	shr.u64 	%rd2107, %rd2357, 6;
	xor.b64  	%rd2108, %rd2106, %rd2107;
	add.s64 	%rd2109, %rd2103, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1312,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd2354;
	}
	shf.r.wrap.b32 	%r1314, %r1313, %r1312, 8;
	shf.r.wrap.b32 	%r1315, %r1312, %r1313, 8;
	mov.b64 	%rd2110, {%r1315, %r1314};
	shf.r.wrap.b32 	%r1316, %r1313, %r1312, 1;
	shf.r.wrap.b32 	%r1317, %r1312, %r1313, 1;
	mov.b64 	%rd2111, {%r1317, %r1316};
	xor.b64  	%rd2112, %rd2111, %rd2110;
	shr.u64 	%rd2113, %rd2354, 7;
	xor.b64  	%rd2114, %rd2112, %rd2113;
	add.s64 	%rd2355, %rd2109, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd2091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd2091;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 14;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 14;
	mov.b64 	%rd2115, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r1319, %r1318, 18;
	shf.r.wrap.b32 	%r1323, %r1318, %r1319, 18;
	mov.b64 	%rd2116, {%r1323, %r1322};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 23;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 23;
	mov.b64 	%rd2118, {%r1325, %r1324};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2054, %rd2017;
	and.b64  	%rd2121, %rd2091, %rd2120;
	xor.b64  	%rd2122, %rd2121, %rd2017;
	add.s64 	%rd2123, %rd2122, %rd1980;
	add.s64 	%rd2124, %rd2123, %rd2119;
	ld.const.u64 	%rd2125, [%rd1707+88];
	add.s64 	%rd2126, %rd2124, %rd2125;
	add.s64 	%rd2127, %rd2126, %rd2355;
	add.s64 	%rd2128, %rd2127, %rd1991;
	and.b64  	%rd2129, %rd2102, %rd2065;
	or.b64  	%rd2130, %rd2102, %rd2065;
	and.b64  	%rd2131, %rd2130, %rd2028;
	or.b64  	%rd2132, %rd2131, %rd2129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd2102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd2102;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 28;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 28;
	mov.b64 	%rd2133, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 30;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 30;
	mov.b64 	%rd2134, {%r1331, %r1330};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 25;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 25;
	mov.b64 	%rd2136, {%r1333, %r1332};
	xor.b64  	%rd2137, %rd2135, %rd2136;
	add.s64 	%rd2138, %rd2137, %rd2132;
	add.s64 	%rd2139, %rd2138, %rd2127;
	add.s64 	%rd2140, %rd2361, %rd2354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd2356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd2356;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 19;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 19;
	mov.b64 	%rd2141, {%r1337, %r1336};
	shf.l.wrap.b32 	%r1338, %r1334, %r1335, 3;
	shf.l.wrap.b32 	%r1339, %r1335, %r1334, 3;
	mov.b64 	%rd2142, {%r1339, %r1338};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	shr.u64 	%rd2144, %rd2356, 6;
	xor.b64  	%rd2145, %rd2143, %rd2144;
	add.s64 	%rd2146, %rd2140, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1340,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd2353;
	}
	shf.r.wrap.b32 	%r1342, %r1341, %r1340, 8;
	shf.r.wrap.b32 	%r1343, %r1340, %r1341, 8;
	mov.b64 	%rd2147, {%r1343, %r1342};
	shf.r.wrap.b32 	%r1344, %r1341, %r1340, 1;
	shf.r.wrap.b32 	%r1345, %r1340, %r1341, 1;
	mov.b64 	%rd2148, {%r1345, %r1344};
	xor.b64  	%rd2149, %rd2148, %rd2147;
	shr.u64 	%rd2150, %rd2353, 7;
	xor.b64  	%rd2151, %rd2149, %rd2150;
	add.s64 	%rd2354, %rd2146, %rd2151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1346,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1347}, %rd2128;
	}
	shf.r.wrap.b32 	%r1348, %r1347, %r1346, 14;
	shf.r.wrap.b32 	%r1349, %r1346, %r1347, 14;
	mov.b64 	%rd2152, {%r1349, %r1348};
	shf.r.wrap.b32 	%r1350, %r1347, %r1346, 18;
	shf.r.wrap.b32 	%r1351, %r1346, %r1347, 18;
	mov.b64 	%rd2153, {%r1351, %r1350};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	shf.l.wrap.b32 	%r1352, %r1346, %r1347, 23;
	shf.l.wrap.b32 	%r1353, %r1347, %r1346, 23;
	mov.b64 	%rd2155, {%r1353, %r1352};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	xor.b64  	%rd2157, %rd2091, %rd2054;
	and.b64  	%rd2158, %rd2128, %rd2157;
	xor.b64  	%rd2159, %rd2158, %rd2054;
	add.s64 	%rd2160, %rd2159, %rd2017;
	add.s64 	%rd2161, %rd2160, %rd2156;
	ld.const.u64 	%rd2162, [%rd1707+96];
	add.s64 	%rd2163, %rd2161, %rd2162;
	add.s64 	%rd2164, %rd2163, %rd2354;
	add.s64 	%rd2374, %rd2164, %rd2028;
	and.b64  	%rd2165, %rd2139, %rd2102;
	or.b64  	%rd2166, %rd2139, %rd2102;
	and.b64  	%rd2167, %rd2166, %rd2065;
	or.b64  	%rd2168, %rd2167, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1354,%dummy}, %rd2139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1355}, %rd2139;
	}
	shf.r.wrap.b32 	%r1356, %r1355, %r1354, 28;
	shf.r.wrap.b32 	%r1357, %r1354, %r1355, 28;
	mov.b64 	%rd2169, {%r1357, %r1356};
	shf.l.wrap.b32 	%r1358, %r1354, %r1355, 30;
	shf.l.wrap.b32 	%r1359, %r1355, %r1354, 30;
	mov.b64 	%rd2170, {%r1359, %r1358};
	xor.b64  	%rd2171, %rd2169, %rd2170;
	shf.l.wrap.b32 	%r1360, %r1354, %r1355, 25;
	shf.l.wrap.b32 	%r1361, %r1355, %r1354, 25;
	mov.b64 	%rd2172, {%r1361, %r1360};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	add.s64 	%rd2174, %rd2173, %rd2168;
	add.s64 	%rd2370, %rd2174, %rd2164;
	add.s64 	%rd2175, %rd2360, %rd2353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd2355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1363}, %rd2355;
	}
	shf.r.wrap.b32 	%r1364, %r1363, %r1362, 19;
	shf.r.wrap.b32 	%r1365, %r1362, %r1363, 19;
	mov.b64 	%rd2176, {%r1365, %r1364};
	shf.l.wrap.b32 	%r1366, %r1362, %r1363, 3;
	shf.l.wrap.b32 	%r1367, %r1363, %r1362, 3;
	mov.b64 	%rd2177, {%r1367, %r1366};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	shr.u64 	%rd2179, %rd2355, 6;
	xor.b64  	%rd2180, %rd2178, %rd2179;
	add.s64 	%rd2181, %rd2175, %rd2180;
	shf.r.wrap.b32 	%r1368, %r998, %r999, 8;
	shf.r.wrap.b32 	%r1369, %r999, %r998, 8;
	mov.b64 	%rd2182, {%r1369, %r1368};
	shf.r.wrap.b32 	%r1370, %r998, %r999, 1;
	shf.r.wrap.b32 	%r1371, %r999, %r998, 1;
	mov.b64 	%rd2183, {%r1371, %r1370};
	xor.b64  	%rd2184, %rd2183, %rd2182;
	shr.u64 	%rd2185, %rd2352, 7;
	xor.b64  	%rd2186, %rd2184, %rd2185;
	add.s64 	%rd2353, %rd2181, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1372,%dummy}, %rd2374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1373}, %rd2374;
	}
	shf.r.wrap.b32 	%r1374, %r1373, %r1372, 14;
	shf.r.wrap.b32 	%r1375, %r1372, %r1373, 14;
	mov.b64 	%rd2187, {%r1375, %r1374};
	shf.r.wrap.b32 	%r1376, %r1373, %r1372, 18;
	shf.r.wrap.b32 	%r1377, %r1372, %r1373, 18;
	mov.b64 	%rd2188, {%r1377, %r1376};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	shf.l.wrap.b32 	%r1378, %r1372, %r1373, 23;
	shf.l.wrap.b32 	%r1379, %r1373, %r1372, 23;
	mov.b64 	%rd2190, {%r1379, %r1378};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	xor.b64  	%rd2192, %rd2128, %rd2091;
	and.b64  	%rd2193, %rd2374, %rd2192;
	xor.b64  	%rd2194, %rd2193, %rd2091;
	add.s64 	%rd2195, %rd2194, %rd2054;
	add.s64 	%rd2196, %rd2195, %rd2191;
	ld.const.u64 	%rd2197, [%rd1707+104];
	add.s64 	%rd2198, %rd2196, %rd2197;
	add.s64 	%rd2199, %rd2198, %rd2353;
	add.s64 	%rd2373, %rd2199, %rd2065;
	and.b64  	%rd2200, %rd2370, %rd2139;
	or.b64  	%rd2201, %rd2370, %rd2139;
	and.b64  	%rd2202, %rd2201, %rd2102;
	or.b64  	%rd2203, %rd2202, %rd2200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1380,%dummy}, %rd2370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1381}, %rd2370;
	}
	shf.r.wrap.b32 	%r1382, %r1381, %r1380, 28;
	shf.r.wrap.b32 	%r1383, %r1380, %r1381, 28;
	mov.b64 	%rd2204, {%r1383, %r1382};
	shf.l.wrap.b32 	%r1384, %r1380, %r1381, 30;
	shf.l.wrap.b32 	%r1385, %r1381, %r1380, 30;
	mov.b64 	%rd2205, {%r1385, %r1384};
	xor.b64  	%rd2206, %rd2204, %rd2205;
	shf.l.wrap.b32 	%r1386, %r1380, %r1381, 25;
	shf.l.wrap.b32 	%r1387, %r1381, %r1380, 25;
	mov.b64 	%rd2207, {%r1387, %r1386};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	add.s64 	%rd2209, %rd2208, %rd2203;
	add.s64 	%rd2369, %rd2209, %rd2199;
	add.s64 	%rd2210, %rd2359, %rd2352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd2354;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 19;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 19;
	mov.b64 	%rd2211, {%r1391, %r1390};
	shf.l.wrap.b32 	%r1392, %r1388, %r1389, 3;
	shf.l.wrap.b32 	%r1393, %r1389, %r1388, 3;
	mov.b64 	%rd2212, {%r1393, %r1392};
	xor.b64  	%rd2213, %rd2211, %rd2212;
	shr.u64 	%rd2214, %rd2354, 6;
	xor.b64  	%rd2215, %rd2213, %rd2214;
	add.s64 	%rd2216, %rd2210, %rd2215;
	shf.r.wrap.b32 	%r1394, %r1026, %r1027, 8;
	shf.r.wrap.b32 	%r1395, %r1027, %r1026, 8;
	mov.b64 	%rd2217, {%r1395, %r1394};
	shf.r.wrap.b32 	%r1396, %r1026, %r1027, 1;
	shf.r.wrap.b32 	%r1397, %r1027, %r1026, 1;
	mov.b64 	%rd2218, {%r1397, %r1396};
	xor.b64  	%rd2219, %rd2218, %rd2217;
	shr.u64 	%rd2220, %rd2351, 7;
	xor.b64  	%rd2221, %rd2219, %rd2220;
	add.s64 	%rd2352, %rd2216, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd2373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd2373;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 14;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 14;
	mov.b64 	%rd2222, {%r1401, %r1400};
	shf.r.wrap.b32 	%r1402, %r1399, %r1398, 18;
	shf.r.wrap.b32 	%r1403, %r1398, %r1399, 18;
	mov.b64 	%rd2223, {%r1403, %r1402};
	xor.b64  	%rd2224, %rd2222, %rd2223;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 23;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 23;
	mov.b64 	%rd2225, {%r1405, %r1404};
	xor.b64  	%rd2226, %rd2224, %rd2225;
	xor.b64  	%rd2227, %rd2374, %rd2128;
	and.b64  	%rd2228, %rd2373, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2128;
	add.s64 	%rd2230, %rd2229, %rd2091;
	add.s64 	%rd2231, %rd2230, %rd2226;
	ld.const.u64 	%rd2232, [%rd1707+112];
	add.s64 	%rd2233, %rd2231, %rd2232;
	add.s64 	%rd2234, %rd2233, %rd2352;
	add.s64 	%rd2372, %rd2234, %rd2102;
	and.b64  	%rd2235, %rd2369, %rd2370;
	or.b64  	%rd2236, %rd2369, %rd2370;
	and.b64  	%rd2237, %rd2236, %rd2139;
	or.b64  	%rd2238, %rd2237, %rd2235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd2369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd2369;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 28;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 28;
	mov.b64 	%rd2239, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 30;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 30;
	mov.b64 	%rd2240, {%r1411, %r1410};
	xor.b64  	%rd2241, %rd2239, %rd2240;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 25;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 25;
	mov.b64 	%rd2242, {%r1413, %r1412};
	xor.b64  	%rd2243, %rd2241, %rd2242;
	add.s64 	%rd2244, %rd2243, %rd2238;
	add.s64 	%rd2368, %rd2244, %rd2234;
	add.s64 	%rd2245, %rd2358, %rd2351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd2353;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 19;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 19;
	mov.b64 	%rd2246, {%r1417, %r1416};
	shf.l.wrap.b32 	%r1418, %r1414, %r1415, 3;
	shf.l.wrap.b32 	%r1419, %r1415, %r1414, 3;
	mov.b64 	%rd2247, {%r1419, %r1418};
	xor.b64  	%rd2248, %rd2246, %rd2247;
	shr.u64 	%rd2249, %rd2353, 6;
	xor.b64  	%rd2250, %rd2248, %rd2249;
	add.s64 	%rd2251, %rd2245, %rd2250;
	shf.r.wrap.b32 	%r1420, %r1055, %r1054, 1;
	shf.r.wrap.b32 	%r1421, %r1054, %r1055, 1;
	mov.b64 	%rd2252, {%r1421, %r1420};
	shf.r.wrap.b32 	%r1422, %r1055, %r1054, 8;
	shf.r.wrap.b32 	%r1423, %r1054, %r1055, 8;
	mov.b64 	%rd2253, {%r1423, %r1422};
	xor.b64  	%rd2254, %rd2252, %rd2253;
	shr.u64 	%rd2255, %rd2366, 7;
	xor.b64  	%rd2256, %rd2254, %rd2255;
	add.s64 	%rd2351, %rd2251, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1424,%dummy}, %rd2372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1425}, %rd2372;
	}
	shf.r.wrap.b32 	%r1426, %r1425, %r1424, 14;
	shf.r.wrap.b32 	%r1427, %r1424, %r1425, 14;
	mov.b64 	%rd2257, {%r1427, %r1426};
	shf.r.wrap.b32 	%r1428, %r1425, %r1424, 18;
	shf.r.wrap.b32 	%r1429, %r1424, %r1425, 18;
	mov.b64 	%rd2258, {%r1429, %r1428};
	xor.b64  	%rd2259, %rd2257, %rd2258;
	shf.l.wrap.b32 	%r1430, %r1424, %r1425, 23;
	shf.l.wrap.b32 	%r1431, %r1425, %r1424, 23;
	mov.b64 	%rd2260, {%r1431, %r1430};
	xor.b64  	%rd2261, %rd2259, %rd2260;
	xor.b64  	%rd2262, %rd2373, %rd2374;
	and.b64  	%rd2263, %rd2372, %rd2262;
	xor.b64  	%rd2264, %rd2263, %rd2374;
	add.s64 	%rd2265, %rd2264, %rd2128;
	add.s64 	%rd2266, %rd2265, %rd2261;
	ld.const.u64 	%rd2267, [%rd1707+120];
	add.s64 	%rd2268, %rd2266, %rd2267;
	add.s64 	%rd2269, %rd2268, %rd2351;
	add.s64 	%rd2371, %rd2269, %rd2139;
	and.b64  	%rd2270, %rd2368, %rd2369;
	or.b64  	%rd2271, %rd2368, %rd2369;
	and.b64  	%rd2272, %rd2271, %rd2370;
	or.b64  	%rd2273, %rd2272, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1432,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1433}, %rd2368;
	}
	shf.r.wrap.b32 	%r1434, %r1433, %r1432, 28;
	shf.r.wrap.b32 	%r1435, %r1432, %r1433, 28;
	mov.b64 	%rd2274, {%r1435, %r1434};
	shf.l.wrap.b32 	%r1436, %r1432, %r1433, 30;
	shf.l.wrap.b32 	%r1437, %r1433, %r1432, 30;
	mov.b64 	%rd2275, {%r1437, %r1436};
	xor.b64  	%rd2276, %rd2274, %rd2275;
	shf.l.wrap.b32 	%r1438, %r1432, %r1433, 25;
	shf.l.wrap.b32 	%r1439, %r1433, %r1432, 25;
	mov.b64 	%rd2277, {%r1439, %r1438};
	xor.b64  	%rd2278, %rd2276, %rd2277;
	add.s64 	%rd2279, %rd2278, %rd2273;
	add.s64 	%rd2367, %rd2279, %rd2269;
	add.s32 	%r1485, %r1485, 16;
	setp.lt.u32 	%p11, %r1485, 80;
	@%p11 bra 	$L__BB4_12;

	add.s64 	%rd2301, %rd2350, %rd2367;
	add.s64 	%rd2300, %rd2349, %rd2368;
	add.s64 	%rd2299, %rd2348, %rd2369;
	add.s64 	%rd2298, %rd2347, %rd2370;
	add.s64 	%rd2297, %rd2346, %rd2371;
	add.s64 	%rd2296, %rd2345, %rd2372;
	add.s64 	%rd2295, %rd2344, %rd2373;
	add.s64 	%rd2294, %rd2343, %rd2374;
	add.s32 	%r1440, %r1482, 1;
	setp.eq.s32 	%p12, %r1440, 42;
	selp.b32 	%r1482, 0, %r1440, %p12;
	add.s32 	%r1481, %r1481, 1;
	setp.lt.u32 	%p13, %r1481, %r2;
	@%p13 bra 	$L__BB4_2;

$L__BB4_14:
	mov.b32 	%r1480, %envreg3;
	mov.u32 	%r1479, %tid.x;
	add.s32 	%r1478, %r1479, %r1480;
	mov.u32 	%r1477, %ctaid.x;
	mov.u32 	%r1476, %ntid.x;
	mad.lo.s32 	%r1475, %r1476, %r1477, %r1478;
	mul.wide.s32 	%rd2293, %r1475, 104;
	ld.param.u64 	%rd2292, [kernel_final_param_2];
	add.s64 	%rd2291, %rd2292, %rd2293;
	ld.param.u64 	%rd2290, [kernel_final_param_1];
	st.global.u64 	[%rd2291], %rd2301;
	st.global.u64 	[%rd2291+8], %rd2300;
	st.global.u64 	[%rd2291+16], %rd2299;
	st.global.u64 	[%rd2291+24], %rd2298;
	st.global.u64 	[%rd2291+32], %rd2297;
	st.global.u64 	[%rd2291+40], %rd2296;
	st.global.u64 	[%rd2291+48], %rd2295;
	st.global.u64 	[%rd2291+56], %rd2294;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1441, %temp}, %rd2301;
	}
	mov.u32 	%r1442, 291;
	mov.u32 	%r1443, 0;
	prmt.b32 	%r1444, %r1441, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1445}, %rd2301;
	}
	prmt.b32 	%r1446, %r1445, %r1443, %r1442;
	mov.b64 	%rd2280, {%r1446, %r1444};
	shl.b64 	%rd2281, %rd2, 6;
	add.s64 	%rd2282, %rd2290, %rd2281;
	st.global.u64 	[%rd2282], %rd2280;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1447, %temp}, %rd2300;
	}
	prmt.b32 	%r1448, %r1447, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1449}, %rd2300;
	}
	prmt.b32 	%r1450, %r1449, %r1443, %r1442;
	mov.b64 	%rd2283, {%r1450, %r1448};
	st.global.u64 	[%rd2282+8], %rd2283;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1451, %temp}, %rd2299;
	}
	prmt.b32 	%r1452, %r1451, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1453}, %rd2299;
	}
	prmt.b32 	%r1454, %r1453, %r1443, %r1442;
	mov.b64 	%rd2284, {%r1454, %r1452};
	st.global.u64 	[%rd2282+16], %rd2284;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1455, %temp}, %rd2298;
	}
	prmt.b32 	%r1456, %r1455, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1457}, %rd2298;
	}
	prmt.b32 	%r1458, %r1457, %r1443, %r1442;
	mov.b64 	%rd2285, {%r1458, %r1456};
	st.global.u64 	[%rd2282+24], %rd2285;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1459, %temp}, %rd2297;
	}
	prmt.b32 	%r1460, %r1459, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1461}, %rd2297;
	}
	prmt.b32 	%r1462, %r1461, %r1443, %r1442;
	mov.b64 	%rd2286, {%r1462, %r1460};
	st.global.u64 	[%rd2282+32], %rd2286;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1463, %temp}, %rd2296;
	}
	prmt.b32 	%r1464, %r1463, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1465}, %rd2296;
	}
	prmt.b32 	%r1466, %r1465, %r1443, %r1442;
	mov.b64 	%rd2287, {%r1466, %r1464};
	st.global.u64 	[%rd2282+40], %rd2287;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1467, %temp}, %rd2295;
	}
	prmt.b32 	%r1468, %r1467, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1469}, %rd2295;
	}
	prmt.b32 	%r1470, %r1469, %r1443, %r1442;
	mov.b64 	%rd2288, {%r1470, %r1468};
	st.global.u64 	[%rd2282+48], %rd2288;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1471, %temp}, %rd2294;
	}
	prmt.b32 	%r1472, %r1471, %r1443, %r1442;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1473}, %rd2294;
	}
	prmt.b32 	%r1474, %r1473, %r1443, %r1442;
	mov.b64 	%rd2289, {%r1474, %r1472};
	st.global.u64 	[%rd2282+56], %rd2289;
	ret;

}

  