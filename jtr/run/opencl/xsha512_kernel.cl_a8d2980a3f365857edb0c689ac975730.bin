//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	kernel_xsha512
.const .align 4 .b8 h[32] = {103, 230, 9, 106, 133, 174, 103, 187, 114, 243, 110, 60, 58, 245, 79, 165, 127, 82, 14, 81, 140, 104, 5, 155, 171, 217, 131, 31, 25, 205, 224, 91};
.const .align 4 .b8 k[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry kernel_xsha512(
	.param .u64 .ptr .global .align 1 kernel_xsha512_param_0,
	.param .u64 .ptr .global .align 8 kernel_xsha512_param_1,
	.param .u64 .ptr .const .align 4 kernel_xsha512_param_2
)
{
	.local .align 8 .b8 	__local_depot0[136];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<15>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<1993>;
	.reg .b64 	%rd<2722>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd14, [kernel_xsha512_param_0];
	ld.param.u64 	%rd15, [kernel_xsha512_param_1];
	ld.param.u64 	%rd16, [kernel_xsha512_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %ntid.x;
	mov.u32 	%r31, %tid.x;
	mov.b32 	%r32, %envreg3;
	add.s32 	%r33, %r31, %r32;
	mad.lo.s32 	%r34, %r30, %r29, %r33;
	cvt.u64.u32 	%rd2, %r34;
	mul.wide.u32 	%rd18, %r34, 22;
	add.s64 	%rd19, %rd14, %rd18;
	ld.global.u8 	%rs1, [%rd19];
	ld.const.u32 	%r35, [%rd16];
	st.local.u32 	[%rd1], %r35;
	cvt.u32.u16 	%r1, %rs1;
	setp.eq.s16 	%p1, %rs1, 0;
	@%p1 bra 	$L__BB0_7;

	add.s32 	%r37, %r1, -1;
	and.b32  	%r1987, %r1, 3;
	setp.lt.u32 	%p2, %r37, 3;
	mov.u32 	%r1985, 0;
	@%p2 bra 	$L__BB0_4;

	sub.s32 	%r1984, %r1, %r1987;
	mov.u32 	%r1985, 0;
	mul.lo.s64 	%rd21, %rd2, 22;
	add.s64 	%rd22, %rd14, %rd21;

$L__BB0_3:
	cvt.u64.u32 	%rd20, %r1985;
	add.s64 	%rd23, %rd22, %rd20;
	add.s32 	%r1985, %r1985, 4;
	cvt.u64.u32 	%rd24, %r1985;
	add.s64 	%rd25, %rd1, %rd24;
	ld.global.u8 	%rs2, [%rd23+4];
	ld.global.u8 	%rs3, [%rd23+3];
	ld.global.u8 	%rs4, [%rd23+2];
	ld.global.u8 	%rs5, [%rd23+1];
	st.local.v4.u8 	[%rd25], {%rs5, %rs4, %rs3, %rs2};
	add.s32 	%r1984, %r1984, -4;
	setp.ne.s32 	%p3, %r1984, 0;
	@%p3 bra 	$L__BB0_3;

$L__BB0_4:
	setp.eq.s32 	%p4, %r1987, 0;
	@%p4 bra 	$L__BB0_7;

	add.s32 	%r1986, %r1985, 4;
	cvt.u64.u32 	%rd26, %r1985;
	mul.lo.s64 	%rd27, %rd2, 22;
	add.s64 	%rd28, %rd14, %rd27;
	add.s64 	%rd29, %rd28, %rd26;
	add.s64 	%rd2718, %rd29, 1;

$L__BB0_6:
	.pragma "nounroll";
	ld.global.u8 	%rs6, [%rd2718];
	cvt.u64.u32 	%rd30, %r1986;
	add.s64 	%rd31, %rd1, %rd30;
	st.local.u8 	[%rd31], %rs6;
	add.s32 	%r1986, %r1986, 1;
	add.s64 	%rd2718, %rd2718, 1;
	add.s32 	%r1987, %r1987, -1;
	setp.eq.s32 	%p5, %r1987, 0;
	@%p5 bra 	$L__BB0_7;
	bra.uni 	$L__BB0_6;

$L__BB0_7:
	add.s32 	%r39, %r1, 4;
	st.local.u32 	[%rd1+128], %r39;
	cvt.u64.u32 	%rd32, %r39;
	add.s64 	%rd7, %rd1, %rd32;
	mov.u16 	%rs7, 128;
	st.local.u8 	[%rd7], %rs7;
	add.s32 	%r1988, %r1, 5;
	add.s16 	%rs8, %rs1, 1;
	and.b16  	%rs9, %rs8, 3;
	setp.eq.s16 	%p6, %rs9, 0;
	@%p6 bra 	$L__BB0_12;

	mov.u16 	%rs10, 0;
	st.local.u8 	[%rd7+1], %rs10;
	add.s32 	%r1988, %r1, 6;
	add.s16 	%rs11, %rs1, 2;
	and.b16  	%rs12, %rs11, 3;
	setp.eq.s16 	%p7, %rs12, 0;
	@%p7 bra 	$L__BB0_12;

	st.local.u8 	[%rd7+2], %rs10;
	add.s32 	%r1988, %r1, 7;
	add.s16 	%rs14, %rs1, -1;
	and.b16  	%rs15, %rs14, 3;
	setp.eq.s16 	%p8, %rs15, 0;
	@%p8 bra 	$L__BB0_12;

	mov.u16 	%rs16, 0;
	st.local.u8 	[%rd7+3], %rs16;
	add.s32 	%r1988, %r1, 8;
	and.b16  	%rs17, %rs1, 3;
	setp.eq.s16 	%p9, %rs17, 0;
	@%p9 bra 	$L__BB0_12;

	st.local.u8 	[%rd7+4], %rs16;
	add.s32 	%r1988, %r1, 9;

$L__BB0_12:
	setp.gt.u32 	%p10, %r1988, 127;
	@%p10 bra 	$L__BB0_18;

	and.b32  	%r40, %r1988, 508;
	cvt.u64.u32 	%rd33, %r40;
	add.s64 	%rd2721, %rd1, %rd33;
	mov.u32 	%r41, 127;
	sub.s32 	%r20, %r41, %r1988;
	shr.u32 	%r42, %r20, 2;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r1990, %r43, 3;
	setp.eq.s32 	%p11, %r1990, 0;
	@%p11 bra 	$L__BB0_16;

	mov.u64 	%rd2719, %rd2721;

$L__BB0_15:
	.pragma "nounroll";
	add.s64 	%rd2721, %rd2719, 4;
	mov.u32 	%r44, 0;
	st.local.u32 	[%rd2719], %r44;
	add.s32 	%r1988, %r1988, 4;
	add.s32 	%r1990, %r1990, -1;
	setp.ne.s32 	%p12, %r1990, 0;
	mov.u64 	%rd2719, %rd2721;
	@%p12 bra 	$L__BB0_15;

$L__BB0_16:
	setp.lt.u32 	%p13, %r20, 12;
	@%p13 bra 	$L__BB0_18;

$L__BB0_17:
	mov.u32 	%r45, 0;
	st.local.u32 	[%rd2721], %r45;
	st.local.u32 	[%rd2721+4], %r45;
	st.local.u32 	[%rd2721+8], %r45;
	st.local.u32 	[%rd2721+12], %r45;
	add.s32 	%r1988, %r1988, 16;
	setp.lt.u32 	%p14, %r1988, 128;
	add.s64 	%rd2721, %rd2721, 16;
	@%p14 bra 	$L__BB0_17;

$L__BB0_18:
	ld.local.u32 	%r46, [%rd1+128];
	cvt.u64.u32 	%rd34, %r46;
	shl.b64 	%rd35, %rd34, 59;
	shl.b64 	%rd36, %rd34, 43;
	and.b64  	%rd37, %rd36, 71776119061217280;
	or.b64  	%rd38, %rd37, %rd35;
	mul.wide.u32 	%rd39, %r46, 134217728;
	and.b64  	%rd40, %rd39, 280375465082880;
	or.b64  	%rd41, %rd38, %rd40;
	mul.wide.u32 	%rd42, %r46, 2048;
	and.b64  	%rd43, %rd42, 1095216660480;
	or.b64  	%rd44, %rd41, %rd43;
	shr.u32 	%r47, %r46, 5;
	and.b32  	%r48, %r47, 117440512;
	cvt.u64.u32 	%rd45, %r48;
	or.b64  	%rd46, %rd44, %rd45;
	st.local.u64 	[%rd1+120], %rd46;
	ld.local.u64 	%rd47, [%rd1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %rd47;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %rd47;
	}
	mov.u32 	%r51, 291;
	mov.u32 	%r52, 0;
	prmt.b32 	%r53, %r49, %r52, %r51;
	prmt.b32 	%r54, %r50, %r52, %r51;
	mov.b64 	%rd48, {%r54, %r53};
	ld.local.u64 	%rd49, [%rd1+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r55, %temp}, %rd49;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r56}, %rd49;
	}
	prmt.b32 	%r57, %r55, %r52, %r51;
	prmt.b32 	%r58, %r56, %r52, %r51;
	mov.b64 	%rd50, {%r58, %r57};
	ld.local.u64 	%rd51, [%rd1+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r59, %temp}, %rd51;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r60}, %rd51;
	}
	prmt.b32 	%r61, %r59, %r52, %r51;
	prmt.b32 	%r62, %r60, %r52, %r51;
	mov.b64 	%rd52, {%r62, %r61};
	ld.local.u64 	%rd53, [%rd1+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r63, %temp}, %rd53;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r64}, %rd53;
	}
	prmt.b32 	%r65, %r63, %r52, %r51;
	prmt.b32 	%r66, %r64, %r52, %r51;
	mov.b64 	%rd54, {%r66, %r65};
	ld.local.u64 	%rd55, [%rd1+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r67, %temp}, %rd55;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r68}, %rd55;
	}
	prmt.b32 	%r69, %r67, %r52, %r51;
	prmt.b32 	%r70, %r68, %r52, %r51;
	mov.b64 	%rd56, {%r70, %r69};
	ld.local.u64 	%rd57, [%rd1+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r71, %temp}, %rd57;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r72}, %rd57;
	}
	prmt.b32 	%r73, %r71, %r52, %r51;
	prmt.b32 	%r74, %r72, %r52, %r51;
	mov.b64 	%rd58, {%r74, %r73};
	ld.local.u64 	%rd59, [%rd1+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r75, %temp}, %rd59;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r76}, %rd59;
	}
	prmt.b32 	%r77, %r75, %r52, %r51;
	prmt.b32 	%r78, %r76, %r52, %r51;
	mov.b64 	%rd60, {%r78, %r77};
	ld.local.u64 	%rd61, [%rd1+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r79, %temp}, %rd61;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r80}, %rd61;
	}
	prmt.b32 	%r81, %r79, %r52, %r51;
	prmt.b32 	%r82, %r80, %r52, %r51;
	mov.b64 	%rd62, {%r82, %r81};
	ld.local.u64 	%rd63, [%rd1+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r83, %temp}, %rd63;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r84}, %rd63;
	}
	prmt.b32 	%r85, %r83, %r52, %r51;
	prmt.b32 	%r86, %r84, %r52, %r51;
	mov.b64 	%rd64, {%r86, %r85};
	ld.local.u64 	%rd65, [%rd1+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r87, %temp}, %rd65;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r88}, %rd65;
	}
	prmt.b32 	%r89, %r87, %r52, %r51;
	prmt.b32 	%r90, %r88, %r52, %r51;
	mov.b64 	%rd66, {%r90, %r89};
	ld.local.u64 	%rd67, [%rd1+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r91, %temp}, %rd67;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r92}, %rd67;
	}
	prmt.b32 	%r93, %r91, %r52, %r51;
	prmt.b32 	%r94, %r92, %r52, %r51;
	mov.b64 	%rd68, {%r94, %r93};
	ld.local.u64 	%rd69, [%rd1+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r95, %temp}, %rd69;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r96}, %rd69;
	}
	prmt.b32 	%r97, %r95, %r52, %r51;
	prmt.b32 	%r98, %r96, %r52, %r51;
	mov.b64 	%rd70, {%r98, %r97};
	ld.local.u64 	%rd71, [%rd1+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r99, %temp}, %rd71;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r100}, %rd71;
	}
	prmt.b32 	%r101, %r99, %r52, %r51;
	prmt.b32 	%r102, %r100, %r52, %r51;
	mov.b64 	%rd72, {%r102, %r101};
	ld.local.u64 	%rd73, [%rd1+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r103, %temp}, %rd73;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r104}, %rd73;
	}
	prmt.b32 	%r105, %r103, %r52, %r51;
	prmt.b32 	%r106, %r104, %r52, %r51;
	mov.b64 	%rd74, {%r106, %r105};
	ld.local.u64 	%rd75, [%rd1+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r107, %temp}, %rd75;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r108}, %rd75;
	}
	prmt.b32 	%r109, %r107, %r52, %r51;
	prmt.b32 	%r110, %r108, %r52, %r51;
	mov.b64 	%rd76, {%r110, %r109};
	cvt.u64.u32 	%rd77, %r47;
	shl.b64 	%rd78, %rd77, 8;
	and.b64  	%rd79, %rd78, 30064771072;
	mul.wide.u32 	%rd80, %r46, 8;
	and.b64  	%rd81, %rd80, 4278190080;
	or.b64  	%rd82, %rd79, %rd81;
	and.b64  	%rd83, %rd80, 16711680;
	or.b64  	%rd84, %rd82, %rd83;
	and.b64  	%rd85, %rd80, 65280;
	or.b64  	%rd86, %rd84, %rd85;
	and.b64  	%rd87, %rd80, 248;
	or.b64  	%rd88, %rd86, %rd87;
	mov.u64 	%rd89, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd89;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd89;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 18;
	shf.r.wrap.b32 	%r114, %r111, %r112, 18;
	mov.b64 	%rd90, {%r114, %r113};
	shf.r.wrap.b32 	%r115, %r112, %r111, 14;
	shf.r.wrap.b32 	%r116, %r111, %r112, 14;
	mov.b64 	%rd91, {%r116, %r115};
	xor.b64  	%rd92, %rd91, %rd90;
	shf.l.wrap.b32 	%r117, %r111, %r112, 23;
	shf.l.wrap.b32 	%r118, %r112, %r111, 23;
	mov.b64 	%rd93, {%r118, %r117};
	xor.b64  	%rd94, %rd92, %rd93;
	add.s64 	%rd95, %rd94, %rd48;
	mov.u64 	%rd96, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r119}, %rd96;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r120,%dummy}, %rd96;
	}
	shf.l.wrap.b32 	%r121, %r120, %r119, 30;
	shf.l.wrap.b32 	%r122, %r119, %r120, 30;
	mov.b64 	%rd97, {%r122, %r121};
	shf.r.wrap.b32 	%r123, %r119, %r120, 28;
	shf.r.wrap.b32 	%r124, %r120, %r119, 28;
	mov.b64 	%rd98, {%r124, %r123};
	xor.b64  	%rd99, %rd98, %rd97;
	shf.l.wrap.b32 	%r125, %r120, %r119, 25;
	shf.l.wrap.b32 	%r126, %r119, %r120, 25;
	mov.b64 	%rd100, {%r126, %r125};
	xor.b64  	%rd101, %rd99, %rd100;
	add.s64 	%rd102, %rd101, %rd95;
	add.s64 	%rd103, %rd95, 7151922335638569927;
	add.s64 	%rd104, %rd102, -549249324024138239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd103;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 14;
	shf.r.wrap.b32 	%r130, %r127, %r128, 14;
	mov.b64 	%rd105, {%r130, %r129};
	shf.r.wrap.b32 	%r131, %r128, %r127, 18;
	shf.r.wrap.b32 	%r132, %r127, %r128, 18;
	mov.b64 	%rd106, {%r132, %r131};
	xor.b64  	%rd107, %rd105, %rd106;
	shf.l.wrap.b32 	%r133, %r127, %r128, 23;
	shf.l.wrap.b32 	%r134, %r128, %r127, 23;
	mov.b64 	%rd108, {%r134, %r133};
	xor.b64  	%rd109, %rd107, %rd108;
	and.b64  	%rd110, %rd103, -3887949035690463538;
	xor.b64  	%rd111, %rd110, -7276294671716946913;
	add.s64 	%rd112, %rd109, %rd111;
	add.s64 	%rd113, %rd112, %rd50;
	and.b64  	%rd114, %rd104, -3355664534840381901;
	or.b64  	%rd115, %rd114, 3026882967131160840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd104;
	}
	shf.r.wrap.b32 	%r137, %r136, %r135, 28;
	shf.r.wrap.b32 	%r138, %r135, %r136, 28;
	mov.b64 	%rd116, {%r138, %r137};
	shf.l.wrap.b32 	%r139, %r135, %r136, 30;
	shf.l.wrap.b32 	%r140, %r136, %r135, 30;
	mov.b64 	%rd117, {%r140, %r139};
	xor.b64  	%rd118, %rd116, %rd117;
	shf.l.wrap.b32 	%r141, %r135, %r136, 25;
	shf.l.wrap.b32 	%r142, %r136, %r135, 25;
	mov.b64 	%rd119, {%r142, %r141};
	xor.b64  	%rd120, %rd118, %rd119;
	add.s64 	%rd121, %rd115, %rd120;
	add.s64 	%rd122, %rd121, %rd113;
	add.s64 	%rd123, %rd113, -3663095898801038493;
	add.s64 	%rd124, %rd122, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd123;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 14;
	shf.r.wrap.b32 	%r146, %r143, %r144, 14;
	mov.b64 	%rd125, {%r146, %r145};
	shf.r.wrap.b32 	%r147, %r144, %r143, 18;
	shf.r.wrap.b32 	%r148, %r143, %r144, 18;
	mov.b64 	%rd126, {%r148, %r147};
	xor.b64  	%rd127, %rd125, %rd126;
	shf.l.wrap.b32 	%r149, %r143, %r144, 23;
	shf.l.wrap.b32 	%r150, %r144, %r143, 23;
	mov.b64 	%rd128, {%r150, %r149};
	xor.b64  	%rd129, %rd127, %rd128;
	xor.b64  	%rd130, %rd103, 5840696475078001361;
	and.b64  	%rd131, %rd130, %rd123;
	xor.b64  	%rd132, %rd131, 5840696475078001361;
	add.s64 	%rd133, %rd129, %rd132;
	add.s64 	%rd134, %rd133, %rd52;
	and.b64  	%rd135, %rd124, %rd104;
	or.b64  	%rd136, %rd124, %rd104;
	and.b64  	%rd137, %rd136, 7640891576956012808;
	or.b64  	%rd138, %rd137, %rd135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r151,%dummy}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd124;
	}
	shf.r.wrap.b32 	%r153, %r152, %r151, 28;
	shf.r.wrap.b32 	%r154, %r151, %r152, 28;
	mov.b64 	%rd139, {%r154, %r153};
	shf.l.wrap.b32 	%r155, %r151, %r152, 30;
	shf.l.wrap.b32 	%r156, %r152, %r151, 30;
	mov.b64 	%rd140, {%r156, %r155};
	xor.b64  	%rd141, %rd139, %rd140;
	shf.l.wrap.b32 	%r157, %r151, %r152, 25;
	shf.l.wrap.b32 	%r158, %r152, %r151, 25;
	mov.b64 	%rd142, {%r158, %r157};
	xor.b64  	%rd143, %rd141, %rd142;
	add.s64 	%rd144, %rd138, %rd143;
	add.s64 	%rd145, %rd144, %rd134;
	add.s64 	%rd146, %rd134, 877659737583668873;
	add.s64 	%rd147, %rd145, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd146;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 14;
	shf.r.wrap.b32 	%r162, %r159, %r160, 14;
	mov.b64 	%rd148, {%r162, %r161};
	shf.r.wrap.b32 	%r163, %r160, %r159, 18;
	shf.r.wrap.b32 	%r164, %r159, %r160, 18;
	mov.b64 	%rd149, {%r164, %r163};
	xor.b64  	%rd150, %rd148, %rd149;
	shf.l.wrap.b32 	%r165, %r159, %r160, 23;
	shf.l.wrap.b32 	%r166, %r160, %r159, 23;
	mov.b64 	%rd151, {%r166, %r165};
	xor.b64  	%rd152, %rd150, %rd151;
	xor.b64  	%rd153, %rd103, %rd123;
	and.b64  	%rd154, %rd153, %rd146;
	xor.b64  	%rd155, %rd154, %rd103;
	add.s64 	%rd156, %rd152, %rd155;
	add.s64 	%rd157, %rd156, %rd54;
	and.b64  	%rd158, %rd147, %rd124;
	or.b64  	%rd159, %rd147, %rd124;
	and.b64  	%rd160, %rd159, %rd104;
	or.b64  	%rd161, %rd160, %rd158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd147;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 28;
	shf.r.wrap.b32 	%r170, %r167, %r168, 28;
	mov.b64 	%rd162, {%r170, %r169};
	shf.l.wrap.b32 	%r171, %r167, %r168, 30;
	shf.l.wrap.b32 	%r172, %r168, %r167, 30;
	mov.b64 	%rd163, {%r172, %r171};
	xor.b64  	%rd164, %rd162, %rd163;
	shf.l.wrap.b32 	%r173, %r167, %r168, 25;
	shf.l.wrap.b32 	%r174, %r168, %r167, 25;
	mov.b64 	%rd165, {%r174, %r173};
	xor.b64  	%rd166, %rd164, %rd165;
	add.s64 	%rd167, %rd161, %rd166;
	add.s64 	%rd168, %rd167, %rd157;
	add.s64 	%rd169, %rd157, -6571292209873868907;
	add.s64 	%rd170, %rd168, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd169;
	}
	shf.r.wrap.b32 	%r177, %r176, %r175, 14;
	shf.r.wrap.b32 	%r178, %r175, %r176, 14;
	mov.b64 	%rd171, {%r178, %r177};
	shf.r.wrap.b32 	%r179, %r176, %r175, 18;
	shf.r.wrap.b32 	%r180, %r175, %r176, 18;
	mov.b64 	%rd172, {%r180, %r179};
	xor.b64  	%rd173, %rd171, %rd172;
	shf.l.wrap.b32 	%r181, %r175, %r176, 23;
	shf.l.wrap.b32 	%r182, %r176, %r175, 23;
	mov.b64 	%rd174, {%r182, %r181};
	xor.b64  	%rd175, %rd173, %rd174;
	xor.b64  	%rd176, %rd123, %rd146;
	and.b64  	%rd177, %rd176, %rd169;
	xor.b64  	%rd178, %rd177, %rd123;
	add.s64 	%rd179, %rd175, %rd103;
	add.s64 	%rd180, %rd179, %rd178;
	add.s64 	%rd181, %rd180, %rd56;
	add.s64 	%rd182, %rd181, 4131703408338449720;
	and.b64  	%rd183, %rd170, %rd147;
	or.b64  	%rd184, %rd170, %rd147;
	and.b64  	%rd185, %rd184, %rd124;
	or.b64  	%rd186, %rd185, %rd183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd170;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 28;
	shf.r.wrap.b32 	%r186, %r183, %r184, 28;
	mov.b64 	%rd187, {%r186, %r185};
	shf.l.wrap.b32 	%r187, %r183, %r184, 30;
	shf.l.wrap.b32 	%r188, %r184, %r183, 30;
	mov.b64 	%rd188, {%r188, %r187};
	xor.b64  	%rd189, %rd187, %rd188;
	shf.l.wrap.b32 	%r189, %r183, %r184, 25;
	shf.l.wrap.b32 	%r190, %r184, %r183, 25;
	mov.b64 	%rd190, {%r190, %r189};
	xor.b64  	%rd191, %rd189, %rd190;
	add.s64 	%rd192, %rd186, %rd191;
	add.s64 	%rd193, %rd182, %rd104;
	add.s64 	%rd194, %rd192, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd193;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 14;
	shf.r.wrap.b32 	%r194, %r191, %r192, 14;
	mov.b64 	%rd195, {%r194, %r193};
	shf.r.wrap.b32 	%r195, %r192, %r191, 18;
	shf.r.wrap.b32 	%r196, %r191, %r192, 18;
	mov.b64 	%rd196, {%r196, %r195};
	xor.b64  	%rd197, %rd195, %rd196;
	shf.l.wrap.b32 	%r197, %r191, %r192, 23;
	shf.l.wrap.b32 	%r198, %r192, %r191, 23;
	mov.b64 	%rd198, {%r198, %r197};
	xor.b64  	%rd199, %rd197, %rd198;
	xor.b64  	%rd200, %rd146, %rd169;
	and.b64  	%rd201, %rd200, %rd193;
	xor.b64  	%rd202, %rd201, %rd146;
	add.s64 	%rd203, %rd199, %rd123;
	add.s64 	%rd204, %rd203, %rd202;
	add.s64 	%rd205, %rd204, %rd58;
	add.s64 	%rd206, %rd205, 6480981068601479193;
	and.b64  	%rd207, %rd194, %rd170;
	or.b64  	%rd208, %rd194, %rd170;
	and.b64  	%rd209, %rd208, %rd147;
	or.b64  	%rd210, %rd209, %rd207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd194;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 28;
	shf.r.wrap.b32 	%r202, %r199, %r200, 28;
	mov.b64 	%rd211, {%r202, %r201};
	shf.l.wrap.b32 	%r203, %r199, %r200, 30;
	shf.l.wrap.b32 	%r204, %r200, %r199, 30;
	mov.b64 	%rd212, {%r204, %r203};
	xor.b64  	%rd213, %rd211, %rd212;
	shf.l.wrap.b32 	%r205, %r199, %r200, 25;
	shf.l.wrap.b32 	%r206, %r200, %r199, 25;
	mov.b64 	%rd214, {%r206, %r205};
	xor.b64  	%rd215, %rd213, %rd214;
	add.s64 	%rd216, %rd210, %rd215;
	add.s64 	%rd217, %rd206, %rd124;
	add.s64 	%rd218, %rd216, %rd206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r208}, %rd217;
	}
	shf.r.wrap.b32 	%r209, %r208, %r207, 14;
	shf.r.wrap.b32 	%r210, %r207, %r208, 14;
	mov.b64 	%rd219, {%r210, %r209};
	shf.r.wrap.b32 	%r211, %r208, %r207, 18;
	shf.r.wrap.b32 	%r212, %r207, %r208, 18;
	mov.b64 	%rd220, {%r212, %r211};
	xor.b64  	%rd221, %rd219, %rd220;
	shf.l.wrap.b32 	%r213, %r207, %r208, 23;
	shf.l.wrap.b32 	%r214, %r208, %r207, 23;
	mov.b64 	%rd222, {%r214, %r213};
	xor.b64  	%rd223, %rd221, %rd222;
	xor.b64  	%rd224, %rd169, %rd193;
	and.b64  	%rd225, %rd224, %rd217;
	xor.b64  	%rd226, %rd225, %rd169;
	add.s64 	%rd227, %rd223, %rd146;
	add.s64 	%rd228, %rd227, %rd226;
	add.s64 	%rd229, %rd228, %rd60;
	add.s64 	%rd230, %rd229, -7908458776815382629;
	and.b64  	%rd231, %rd218, %rd194;
	or.b64  	%rd232, %rd218, %rd194;
	and.b64  	%rd233, %rd232, %rd170;
	or.b64  	%rd234, %rd233, %rd231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd218;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 28;
	shf.r.wrap.b32 	%r218, %r215, %r216, 28;
	mov.b64 	%rd235, {%r218, %r217};
	shf.l.wrap.b32 	%r219, %r215, %r216, 30;
	shf.l.wrap.b32 	%r220, %r216, %r215, 30;
	mov.b64 	%rd236, {%r220, %r219};
	xor.b64  	%rd237, %rd235, %rd236;
	shf.l.wrap.b32 	%r221, %r215, %r216, 25;
	shf.l.wrap.b32 	%r222, %r216, %r215, 25;
	mov.b64 	%rd238, {%r222, %r221};
	xor.b64  	%rd239, %rd237, %rd238;
	add.s64 	%rd240, %rd234, %rd239;
	add.s64 	%rd241, %rd230, %rd147;
	add.s64 	%rd242, %rd240, %rd230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd241;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 14;
	shf.r.wrap.b32 	%r226, %r223, %r224, 14;
	mov.b64 	%rd243, {%r226, %r225};
	shf.r.wrap.b32 	%r227, %r224, %r223, 18;
	shf.r.wrap.b32 	%r228, %r223, %r224, 18;
	mov.b64 	%rd244, {%r228, %r227};
	xor.b64  	%rd245, %rd243, %rd244;
	shf.l.wrap.b32 	%r229, %r223, %r224, 23;
	shf.l.wrap.b32 	%r230, %r224, %r223, 23;
	mov.b64 	%rd246, {%r230, %r229};
	xor.b64  	%rd247, %rd245, %rd246;
	xor.b64  	%rd248, %rd193, %rd217;
	and.b64  	%rd249, %rd248, %rd241;
	xor.b64  	%rd250, %rd249, %rd193;
	add.s64 	%rd251, %rd247, %rd169;
	add.s64 	%rd252, %rd251, %rd250;
	add.s64 	%rd253, %rd252, %rd62;
	add.s64 	%rd254, %rd253, -6116909921290321640;
	and.b64  	%rd255, %rd242, %rd218;
	or.b64  	%rd256, %rd242, %rd218;
	and.b64  	%rd257, %rd256, %rd194;
	or.b64  	%rd258, %rd257, %rd255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r231,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd242;
	}
	shf.r.wrap.b32 	%r233, %r232, %r231, 28;
	shf.r.wrap.b32 	%r234, %r231, %r232, 28;
	mov.b64 	%rd259, {%r234, %r233};
	shf.l.wrap.b32 	%r235, %r231, %r232, 30;
	shf.l.wrap.b32 	%r236, %r232, %r231, 30;
	mov.b64 	%rd260, {%r236, %r235};
	xor.b64  	%rd261, %rd259, %rd260;
	shf.l.wrap.b32 	%r237, %r231, %r232, 25;
	shf.l.wrap.b32 	%r238, %r232, %r231, 25;
	mov.b64 	%rd262, {%r238, %r237};
	xor.b64  	%rd263, %rd261, %rd262;
	add.s64 	%rd264, %rd258, %rd263;
	add.s64 	%rd265, %rd254, %rd170;
	add.s64 	%rd266, %rd264, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd265;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 14;
	shf.r.wrap.b32 	%r242, %r239, %r240, 14;
	mov.b64 	%rd267, {%r242, %r241};
	shf.r.wrap.b32 	%r243, %r240, %r239, 18;
	shf.r.wrap.b32 	%r244, %r239, %r240, 18;
	mov.b64 	%rd268, {%r244, %r243};
	xor.b64  	%rd269, %rd267, %rd268;
	shf.l.wrap.b32 	%r245, %r239, %r240, 23;
	shf.l.wrap.b32 	%r246, %r240, %r239, 23;
	mov.b64 	%rd270, {%r246, %r245};
	xor.b64  	%rd271, %rd269, %rd270;
	xor.b64  	%rd272, %rd217, %rd241;
	and.b64  	%rd273, %rd272, %rd265;
	xor.b64  	%rd274, %rd273, %rd217;
	add.s64 	%rd275, %rd271, %rd193;
	add.s64 	%rd276, %rd275, %rd274;
	add.s64 	%rd277, %rd276, %rd64;
	add.s64 	%rd278, %rd277, -2880145864133508542;
	and.b64  	%rd279, %rd266, %rd242;
	or.b64  	%rd280, %rd266, %rd242;
	and.b64  	%rd281, %rd280, %rd218;
	or.b64  	%rd282, %rd281, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd266;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 28;
	shf.r.wrap.b32 	%r250, %r247, %r248, 28;
	mov.b64 	%rd283, {%r250, %r249};
	shf.l.wrap.b32 	%r251, %r247, %r248, 30;
	shf.l.wrap.b32 	%r252, %r248, %r247, 30;
	mov.b64 	%rd284, {%r252, %r251};
	xor.b64  	%rd285, %rd283, %rd284;
	shf.l.wrap.b32 	%r253, %r247, %r248, 25;
	shf.l.wrap.b32 	%r254, %r248, %r247, 25;
	mov.b64 	%rd286, {%r254, %r253};
	xor.b64  	%rd287, %rd285, %rd286;
	add.s64 	%rd288, %rd282, %rd287;
	add.s64 	%rd289, %rd278, %rd194;
	add.s64 	%rd290, %rd288, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd289;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 14;
	shf.r.wrap.b32 	%r258, %r255, %r256, 14;
	mov.b64 	%rd291, {%r258, %r257};
	shf.r.wrap.b32 	%r259, %r256, %r255, 18;
	shf.r.wrap.b32 	%r260, %r255, %r256, 18;
	mov.b64 	%rd292, {%r260, %r259};
	xor.b64  	%rd293, %rd291, %rd292;
	shf.l.wrap.b32 	%r261, %r255, %r256, 23;
	shf.l.wrap.b32 	%r262, %r256, %r255, 23;
	mov.b64 	%rd294, {%r262, %r261};
	xor.b64  	%rd295, %rd293, %rd294;
	xor.b64  	%rd296, %rd241, %rd265;
	and.b64  	%rd297, %rd296, %rd289;
	xor.b64  	%rd298, %rd297, %rd241;
	add.s64 	%rd299, %rd295, %rd217;
	add.s64 	%rd300, %rd299, %rd298;
	add.s64 	%rd301, %rd300, %rd66;
	add.s64 	%rd302, %rd301, 1334009975649890238;
	and.b64  	%rd303, %rd290, %rd266;
	or.b64  	%rd304, %rd290, %rd266;
	and.b64  	%rd305, %rd304, %rd242;
	or.b64  	%rd306, %rd305, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r263,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd290;
	}
	shf.r.wrap.b32 	%r265, %r264, %r263, 28;
	shf.r.wrap.b32 	%r266, %r263, %r264, 28;
	mov.b64 	%rd307, {%r266, %r265};
	shf.l.wrap.b32 	%r267, %r263, %r264, 30;
	shf.l.wrap.b32 	%r268, %r264, %r263, 30;
	mov.b64 	%rd308, {%r268, %r267};
	xor.b64  	%rd309, %rd307, %rd308;
	shf.l.wrap.b32 	%r269, %r263, %r264, 25;
	shf.l.wrap.b32 	%r270, %r264, %r263, 25;
	mov.b64 	%rd310, {%r270, %r269};
	xor.b64  	%rd311, %rd309, %rd310;
	add.s64 	%rd312, %rd306, %rd311;
	add.s64 	%rd313, %rd302, %rd218;
	add.s64 	%rd314, %rd312, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd313;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 14;
	shf.r.wrap.b32 	%r274, %r271, %r272, 14;
	mov.b64 	%rd315, {%r274, %r273};
	shf.r.wrap.b32 	%r275, %r272, %r271, 18;
	shf.r.wrap.b32 	%r276, %r271, %r272, 18;
	mov.b64 	%rd316, {%r276, %r275};
	xor.b64  	%rd317, %rd315, %rd316;
	shf.l.wrap.b32 	%r277, %r271, %r272, 23;
	shf.l.wrap.b32 	%r278, %r272, %r271, 23;
	mov.b64 	%rd318, {%r278, %r277};
	xor.b64  	%rd319, %rd317, %rd318;
	xor.b64  	%rd320, %rd265, %rd289;
	and.b64  	%rd321, %rd320, %rd313;
	xor.b64  	%rd322, %rd321, %rd265;
	add.s64 	%rd323, %rd319, %rd241;
	add.s64 	%rd324, %rd323, %rd322;
	add.s64 	%rd325, %rd324, %rd68;
	add.s64 	%rd326, %rd325, 2608012711638119052;
	and.b64  	%rd327, %rd314, %rd290;
	or.b64  	%rd328, %rd314, %rd290;
	and.b64  	%rd329, %rd328, %rd266;
	or.b64  	%rd330, %rd329, %rd327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r279,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd314;
	}
	shf.r.wrap.b32 	%r281, %r280, %r279, 28;
	shf.r.wrap.b32 	%r282, %r279, %r280, 28;
	mov.b64 	%rd331, {%r282, %r281};
	shf.l.wrap.b32 	%r283, %r279, %r280, 30;
	shf.l.wrap.b32 	%r284, %r280, %r279, 30;
	mov.b64 	%rd332, {%r284, %r283};
	xor.b64  	%rd333, %rd331, %rd332;
	shf.l.wrap.b32 	%r285, %r279, %r280, 25;
	shf.l.wrap.b32 	%r286, %r280, %r279, 25;
	mov.b64 	%rd334, {%r286, %r285};
	xor.b64  	%rd335, %rd333, %rd334;
	add.s64 	%rd336, %rd330, %rd335;
	add.s64 	%rd337, %rd326, %rd242;
	add.s64 	%rd338, %rd336, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r287,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd337;
	}
	shf.r.wrap.b32 	%r289, %r288, %r287, 14;
	shf.r.wrap.b32 	%r290, %r287, %r288, 14;
	mov.b64 	%rd339, {%r290, %r289};
	shf.r.wrap.b32 	%r291, %r288, %r287, 18;
	shf.r.wrap.b32 	%r292, %r287, %r288, 18;
	mov.b64 	%rd340, {%r292, %r291};
	xor.b64  	%rd341, %rd339, %rd340;
	shf.l.wrap.b32 	%r293, %r287, %r288, 23;
	shf.l.wrap.b32 	%r294, %r288, %r287, 23;
	mov.b64 	%rd342, {%r294, %r293};
	xor.b64  	%rd343, %rd341, %rd342;
	xor.b64  	%rd344, %rd289, %rd313;
	and.b64  	%rd345, %rd344, %rd337;
	xor.b64  	%rd346, %rd345, %rd289;
	add.s64 	%rd347, %rd343, %rd265;
	add.s64 	%rd348, %rd347, %rd346;
	add.s64 	%rd349, %rd348, %rd70;
	add.s64 	%rd350, %rd349, 6128411473006802146;
	and.b64  	%rd351, %rd338, %rd314;
	or.b64  	%rd352, %rd338, %rd314;
	and.b64  	%rd353, %rd352, %rd290;
	or.b64  	%rd354, %rd353, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd338;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 28;
	shf.r.wrap.b32 	%r298, %r295, %r296, 28;
	mov.b64 	%rd355, {%r298, %r297};
	shf.l.wrap.b32 	%r299, %r295, %r296, 30;
	shf.l.wrap.b32 	%r300, %r296, %r295, 30;
	mov.b64 	%rd356, {%r300, %r299};
	xor.b64  	%rd357, %rd355, %rd356;
	shf.l.wrap.b32 	%r301, %r295, %r296, 25;
	shf.l.wrap.b32 	%r302, %r296, %r295, 25;
	mov.b64 	%rd358, {%r302, %r301};
	xor.b64  	%rd359, %rd357, %rd358;
	add.s64 	%rd360, %rd354, %rd359;
	add.s64 	%rd361, %rd350, %rd266;
	add.s64 	%rd362, %rd360, %rd350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r303,%dummy}, %rd361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd361;
	}
	shf.r.wrap.b32 	%r305, %r304, %r303, 14;
	shf.r.wrap.b32 	%r306, %r303, %r304, 14;
	mov.b64 	%rd363, {%r306, %r305};
	shf.r.wrap.b32 	%r307, %r304, %r303, 18;
	shf.r.wrap.b32 	%r308, %r303, %r304, 18;
	mov.b64 	%rd364, {%r308, %r307};
	xor.b64  	%rd365, %rd363, %rd364;
	shf.l.wrap.b32 	%r309, %r303, %r304, 23;
	shf.l.wrap.b32 	%r310, %r304, %r303, 23;
	mov.b64 	%rd366, {%r310, %r309};
	xor.b64  	%rd367, %rd365, %rd366;
	xor.b64  	%rd368, %rd313, %rd337;
	and.b64  	%rd369, %rd368, %rd361;
	xor.b64  	%rd370, %rd369, %rd313;
	add.s64 	%rd371, %rd367, %rd289;
	add.s64 	%rd372, %rd371, %rd370;
	add.s64 	%rd373, %rd372, %rd72;
	add.s64 	%rd374, %rd373, 8268148722764581231;
	and.b64  	%rd375, %rd362, %rd338;
	or.b64  	%rd376, %rd362, %rd338;
	and.b64  	%rd377, %rd376, %rd314;
	or.b64  	%rd378, %rd377, %rd375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd362;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 28;
	shf.r.wrap.b32 	%r314, %r311, %r312, 28;
	mov.b64 	%rd379, {%r314, %r313};
	shf.l.wrap.b32 	%r315, %r311, %r312, 30;
	shf.l.wrap.b32 	%r316, %r312, %r311, 30;
	mov.b64 	%rd380, {%r316, %r315};
	xor.b64  	%rd381, %rd379, %rd380;
	shf.l.wrap.b32 	%r317, %r311, %r312, 25;
	shf.l.wrap.b32 	%r318, %r312, %r311, 25;
	mov.b64 	%rd382, {%r318, %r317};
	xor.b64  	%rd383, %rd381, %rd382;
	add.s64 	%rd384, %rd378, %rd383;
	add.s64 	%rd385, %rd374, %rd290;
	add.s64 	%rd386, %rd384, %rd374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd385;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 14;
	shf.r.wrap.b32 	%r322, %r319, %r320, 14;
	mov.b64 	%rd387, {%r322, %r321};
	shf.r.wrap.b32 	%r323, %r320, %r319, 18;
	shf.r.wrap.b32 	%r324, %r319, %r320, 18;
	mov.b64 	%rd388, {%r324, %r323};
	xor.b64  	%rd389, %rd387, %rd388;
	shf.l.wrap.b32 	%r325, %r319, %r320, 23;
	shf.l.wrap.b32 	%r326, %r320, %r319, 23;
	mov.b64 	%rd390, {%r326, %r325};
	xor.b64  	%rd391, %rd389, %rd390;
	xor.b64  	%rd392, %rd337, %rd361;
	and.b64  	%rd393, %rd392, %rd385;
	xor.b64  	%rd394, %rd393, %rd337;
	add.s64 	%rd395, %rd391, %rd313;
	add.s64 	%rd396, %rd395, %rd394;
	add.s64 	%rd397, %rd396, %rd74;
	add.s64 	%rd398, %rd397, -9160688886553864527;
	and.b64  	%rd399, %rd386, %rd362;
	or.b64  	%rd400, %rd386, %rd362;
	and.b64  	%rd401, %rd400, %rd338;
	or.b64  	%rd402, %rd401, %rd399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r327,%dummy}, %rd386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r328}, %rd386;
	}
	shf.r.wrap.b32 	%r329, %r328, %r327, 28;
	shf.r.wrap.b32 	%r330, %r327, %r328, 28;
	mov.b64 	%rd403, {%r330, %r329};
	shf.l.wrap.b32 	%r331, %r327, %r328, 30;
	shf.l.wrap.b32 	%r332, %r328, %r327, 30;
	mov.b64 	%rd404, {%r332, %r331};
	xor.b64  	%rd405, %rd403, %rd404;
	shf.l.wrap.b32 	%r333, %r327, %r328, 25;
	shf.l.wrap.b32 	%r334, %r328, %r327, 25;
	mov.b64 	%rd406, {%r334, %r333};
	xor.b64  	%rd407, %rd405, %rd406;
	add.s64 	%rd408, %rd402, %rd407;
	add.s64 	%rd409, %rd398, %rd314;
	add.s64 	%rd410, %rd408, %rd398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd409;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 14;
	shf.r.wrap.b32 	%r338, %r335, %r336, 14;
	mov.b64 	%rd411, {%r338, %r337};
	shf.r.wrap.b32 	%r339, %r336, %r335, 18;
	shf.r.wrap.b32 	%r340, %r335, %r336, 18;
	mov.b64 	%rd412, {%r340, %r339};
	xor.b64  	%rd413, %rd411, %rd412;
	shf.l.wrap.b32 	%r341, %r335, %r336, 23;
	shf.l.wrap.b32 	%r342, %r336, %r335, 23;
	mov.b64 	%rd414, {%r342, %r341};
	xor.b64  	%rd415, %rd413, %rd414;
	xor.b64  	%rd416, %rd361, %rd385;
	and.b64  	%rd417, %rd416, %rd409;
	xor.b64  	%rd418, %rd417, %rd361;
	add.s64 	%rd419, %rd415, %rd337;
	add.s64 	%rd420, %rd419, %rd418;
	add.s64 	%rd421, %rd420, %rd76;
	add.s64 	%rd422, %rd421, -7215885187991268811;
	and.b64  	%rd423, %rd410, %rd386;
	or.b64  	%rd424, %rd410, %rd386;
	and.b64  	%rd425, %rd424, %rd362;
	or.b64  	%rd426, %rd425, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd410;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 28;
	shf.r.wrap.b32 	%r346, %r343, %r344, 28;
	mov.b64 	%rd427, {%r346, %r345};
	shf.l.wrap.b32 	%r347, %r343, %r344, 30;
	shf.l.wrap.b32 	%r348, %r344, %r343, 30;
	mov.b64 	%rd428, {%r348, %r347};
	xor.b64  	%rd429, %rd427, %rd428;
	shf.l.wrap.b32 	%r349, %r343, %r344, 25;
	shf.l.wrap.b32 	%r350, %r344, %r343, 25;
	mov.b64 	%rd430, {%r350, %r349};
	xor.b64  	%rd431, %rd429, %rd430;
	add.s64 	%rd432, %rd426, %rd431;
	add.s64 	%rd433, %rd422, %rd338;
	add.s64 	%rd434, %rd432, %rd422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd433;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 14;
	shf.r.wrap.b32 	%r354, %r351, %r352, 14;
	mov.b64 	%rd435, {%r354, %r353};
	shf.r.wrap.b32 	%r355, %r352, %r351, 18;
	shf.r.wrap.b32 	%r356, %r351, %r352, 18;
	mov.b64 	%rd436, {%r356, %r355};
	xor.b64  	%rd437, %rd435, %rd436;
	shf.l.wrap.b32 	%r357, %r351, %r352, 23;
	shf.l.wrap.b32 	%r358, %r352, %r351, 23;
	mov.b64 	%rd438, {%r358, %r357};
	xor.b64  	%rd439, %rd437, %rd438;
	xor.b64  	%rd440, %rd385, %rd409;
	and.b64  	%rd441, %rd440, %rd433;
	xor.b64  	%rd442, %rd441, %rd385;
	add.s64 	%rd443, %rd439, %rd361;
	add.s64 	%rd444, %rd443, %rd442;
	add.s64 	%rd445, %rd444, %rd88;
	add.s64 	%rd446, %rd445, -4495734319001033068;
	and.b64  	%rd447, %rd434, %rd410;
	or.b64  	%rd448, %rd434, %rd410;
	and.b64  	%rd449, %rd448, %rd386;
	or.b64  	%rd450, %rd449, %rd447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd434;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 28;
	shf.r.wrap.b32 	%r362, %r359, %r360, 28;
	mov.b64 	%rd451, {%r362, %r361};
	shf.l.wrap.b32 	%r363, %r359, %r360, 30;
	shf.l.wrap.b32 	%r364, %r360, %r359, 30;
	mov.b64 	%rd452, {%r364, %r363};
	xor.b64  	%rd453, %rd451, %rd452;
	shf.l.wrap.b32 	%r365, %r359, %r360, 25;
	shf.l.wrap.b32 	%r366, %r360, %r359, 25;
	mov.b64 	%rd454, {%r366, %r365};
	xor.b64  	%rd455, %rd453, %rd454;
	add.s64 	%rd456, %rd450, %rd455;
	add.s64 	%rd457, %rd446, %rd362;
	add.s64 	%rd458, %rd456, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd76;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd76;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 19;
	shf.r.wrap.b32 	%r370, %r367, %r368, 19;
	mov.b64 	%rd459, {%r370, %r369};
	shf.l.wrap.b32 	%r371, %r367, %r368, 3;
	shf.l.wrap.b32 	%r372, %r368, %r367, 3;
	mov.b64 	%rd460, {%r372, %r371};
	xor.b64  	%rd461, %rd459, %rd460;
	shr.u64 	%rd462, %rd76, 6;
	xor.b64  	%rd463, %rd461, %rd462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd50;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd50;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 1;
	shf.r.wrap.b32 	%r376, %r373, %r374, 1;
	mov.b64 	%rd464, {%r376, %r375};
	shf.r.wrap.b32 	%r377, %r374, %r373, 8;
	shf.r.wrap.b32 	%r378, %r373, %r374, 8;
	mov.b64 	%rd465, {%r378, %r377};
	xor.b64  	%rd466, %rd464, %rd465;
	shr.u64 	%rd467, %rd50, 7;
	xor.b64  	%rd468, %rd466, %rd467;
	add.s64 	%rd469, %rd463, %rd48;
	add.s64 	%rd470, %rd469, %rd66;
	add.s64 	%rd471, %rd470, %rd468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd457;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 14;
	shf.r.wrap.b32 	%r382, %r379, %r380, 14;
	mov.b64 	%rd472, {%r382, %r381};
	shf.r.wrap.b32 	%r383, %r380, %r379, 18;
	shf.r.wrap.b32 	%r384, %r379, %r380, 18;
	mov.b64 	%rd473, {%r384, %r383};
	xor.b64  	%rd474, %rd472, %rd473;
	shf.l.wrap.b32 	%r385, %r379, %r380, 23;
	shf.l.wrap.b32 	%r386, %r380, %r379, 23;
	mov.b64 	%rd475, {%r386, %r385};
	xor.b64  	%rd476, %rd474, %rd475;
	xor.b64  	%rd477, %rd409, %rd433;
	and.b64  	%rd478, %rd477, %rd457;
	xor.b64  	%rd479, %rd478, %rd409;
	add.s64 	%rd480, %rd476, %rd385;
	add.s64 	%rd481, %rd480, %rd479;
	add.s64 	%rd482, %rd481, %rd471;
	add.s64 	%rd483, %rd482, -1973867731355612462;
	and.b64  	%rd484, %rd458, %rd434;
	or.b64  	%rd485, %rd458, %rd434;
	and.b64  	%rd486, %rd485, %rd410;
	or.b64  	%rd487, %rd486, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd458;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 28;
	shf.r.wrap.b32 	%r390, %r387, %r388, 28;
	mov.b64 	%rd488, {%r390, %r389};
	shf.l.wrap.b32 	%r391, %r387, %r388, 30;
	shf.l.wrap.b32 	%r392, %r388, %r387, 30;
	mov.b64 	%rd489, {%r392, %r391};
	xor.b64  	%rd490, %rd488, %rd489;
	shf.l.wrap.b32 	%r393, %r387, %r388, 25;
	shf.l.wrap.b32 	%r394, %r388, %r387, 25;
	mov.b64 	%rd491, {%r394, %r393};
	xor.b64  	%rd492, %rd490, %rd491;
	add.s64 	%rd493, %rd487, %rd492;
	add.s64 	%rd494, %rd483, %rd386;
	add.s64 	%rd495, %rd493, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd88;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd88;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 19;
	shf.r.wrap.b32 	%r398, %r395, %r396, 19;
	mov.b64 	%rd496, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 3;
	shf.l.wrap.b32 	%r400, %r396, %r395, 3;
	mov.b64 	%rd497, {%r400, %r399};
	xor.b64  	%rd498, %rd496, %rd497;
	shr.u64 	%rd499, %rd88, 6;
	xor.b64  	%rd500, %rd498, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd52;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd52;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 1;
	shf.r.wrap.b32 	%r404, %r401, %r402, 1;
	mov.b64 	%rd501, {%r404, %r403};
	shf.r.wrap.b32 	%r405, %r402, %r401, 8;
	shf.r.wrap.b32 	%r406, %r401, %r402, 8;
	mov.b64 	%rd502, {%r406, %r405};
	xor.b64  	%rd503, %rd501, %rd502;
	shr.u64 	%rd504, %rd52, 7;
	xor.b64  	%rd505, %rd503, %rd504;
	add.s64 	%rd506, %rd500, %rd50;
	add.s64 	%rd507, %rd506, %rd68;
	add.s64 	%rd508, %rd507, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd494;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 14;
	shf.r.wrap.b32 	%r410, %r407, %r408, 14;
	mov.b64 	%rd509, {%r410, %r409};
	shf.r.wrap.b32 	%r411, %r408, %r407, 18;
	shf.r.wrap.b32 	%r412, %r407, %r408, 18;
	mov.b64 	%rd510, {%r412, %r411};
	xor.b64  	%rd511, %rd509, %rd510;
	shf.l.wrap.b32 	%r413, %r407, %r408, 23;
	shf.l.wrap.b32 	%r414, %r408, %r407, 23;
	mov.b64 	%rd512, {%r414, %r413};
	xor.b64  	%rd513, %rd511, %rd512;
	xor.b64  	%rd514, %rd433, %rd457;
	and.b64  	%rd515, %rd514, %rd494;
	xor.b64  	%rd516, %rd515, %rd433;
	add.s64 	%rd517, %rd513, %rd409;
	add.s64 	%rd518, %rd517, %rd516;
	add.s64 	%rd519, %rd518, %rd508;
	add.s64 	%rd520, %rd519, -1171420211273849373;
	and.b64  	%rd521, %rd495, %rd458;
	or.b64  	%rd522, %rd495, %rd458;
	and.b64  	%rd523, %rd522, %rd434;
	or.b64  	%rd524, %rd523, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd495;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 28;
	shf.r.wrap.b32 	%r418, %r415, %r416, 28;
	mov.b64 	%rd525, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 30;
	shf.l.wrap.b32 	%r420, %r416, %r415, 30;
	mov.b64 	%rd526, {%r420, %r419};
	xor.b64  	%rd527, %rd525, %rd526;
	shf.l.wrap.b32 	%r421, %r415, %r416, 25;
	shf.l.wrap.b32 	%r422, %r416, %r415, 25;
	mov.b64 	%rd528, {%r422, %r421};
	xor.b64  	%rd529, %rd527, %rd528;
	add.s64 	%rd530, %rd524, %rd529;
	add.s64 	%rd531, %rd520, %rd410;
	add.s64 	%rd532, %rd530, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd471;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 19;
	shf.r.wrap.b32 	%r426, %r423, %r424, 19;
	mov.b64 	%rd533, {%r426, %r425};
	shf.l.wrap.b32 	%r427, %r423, %r424, 3;
	shf.l.wrap.b32 	%r428, %r424, %r423, 3;
	mov.b64 	%rd534, {%r428, %r427};
	xor.b64  	%rd535, %rd533, %rd534;
	shr.u64 	%rd536, %rd471, 6;
	xor.b64  	%rd537, %rd535, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r429,%dummy}, %rd54;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r430}, %rd54;
	}
	shf.r.wrap.b32 	%r431, %r430, %r429, 1;
	shf.r.wrap.b32 	%r432, %r429, %r430, 1;
	mov.b64 	%rd538, {%r432, %r431};
	shf.r.wrap.b32 	%r433, %r430, %r429, 8;
	shf.r.wrap.b32 	%r434, %r429, %r430, 8;
	mov.b64 	%rd539, {%r434, %r433};
	xor.b64  	%rd540, %rd538, %rd539;
	shr.u64 	%rd541, %rd54, 7;
	xor.b64  	%rd542, %rd540, %rd541;
	add.s64 	%rd543, %rd537, %rd52;
	add.s64 	%rd544, %rd543, %rd70;
	add.s64 	%rd545, %rd544, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd531;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 14;
	shf.r.wrap.b32 	%r438, %r435, %r436, 14;
	mov.b64 	%rd546, {%r438, %r437};
	shf.r.wrap.b32 	%r439, %r436, %r435, 18;
	shf.r.wrap.b32 	%r440, %r435, %r436, 18;
	mov.b64 	%rd547, {%r440, %r439};
	xor.b64  	%rd548, %rd546, %rd547;
	shf.l.wrap.b32 	%r441, %r435, %r436, 23;
	shf.l.wrap.b32 	%r442, %r436, %r435, 23;
	mov.b64 	%rd549, {%r442, %r441};
	xor.b64  	%rd550, %rd548, %rd549;
	xor.b64  	%rd551, %rd457, %rd494;
	and.b64  	%rd552, %rd551, %rd531;
	xor.b64  	%rd553, %rd552, %rd457;
	add.s64 	%rd554, %rd550, %rd433;
	add.s64 	%rd555, %rd554, %rd553;
	add.s64 	%rd556, %rd555, %rd545;
	add.s64 	%rd557, %rd556, 1135362057144423861;
	and.b64  	%rd558, %rd532, %rd495;
	or.b64  	%rd559, %rd532, %rd495;
	and.b64  	%rd560, %rd559, %rd458;
	or.b64  	%rd561, %rd560, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd532;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 28;
	shf.r.wrap.b32 	%r446, %r443, %r444, 28;
	mov.b64 	%rd562, {%r446, %r445};
	shf.l.wrap.b32 	%r447, %r443, %r444, 30;
	shf.l.wrap.b32 	%r448, %r444, %r443, 30;
	mov.b64 	%rd563, {%r448, %r447};
	xor.b64  	%rd564, %rd562, %rd563;
	shf.l.wrap.b32 	%r449, %r443, %r444, 25;
	shf.l.wrap.b32 	%r450, %r444, %r443, 25;
	mov.b64 	%rd565, {%r450, %r449};
	xor.b64  	%rd566, %rd564, %rd565;
	add.s64 	%rd567, %rd561, %rd566;
	add.s64 	%rd568, %rd557, %rd434;
	add.s64 	%rd569, %rd567, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd508;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 19;
	shf.r.wrap.b32 	%r454, %r451, %r452, 19;
	mov.b64 	%rd570, {%r454, %r453};
	shf.l.wrap.b32 	%r455, %r451, %r452, 3;
	shf.l.wrap.b32 	%r456, %r452, %r451, 3;
	mov.b64 	%rd571, {%r456, %r455};
	xor.b64  	%rd572, %rd570, %rd571;
	shr.u64 	%rd573, %rd508, 6;
	xor.b64  	%rd574, %rd572, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd56;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd56;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 1;
	shf.r.wrap.b32 	%r460, %r457, %r458, 1;
	mov.b64 	%rd575, {%r460, %r459};
	shf.r.wrap.b32 	%r461, %r458, %r457, 8;
	shf.r.wrap.b32 	%r462, %r457, %r458, 8;
	mov.b64 	%rd576, {%r462, %r461};
	xor.b64  	%rd577, %rd575, %rd576;
	shr.u64 	%rd578, %rd56, 7;
	xor.b64  	%rd579, %rd577, %rd578;
	add.s64 	%rd580, %rd574, %rd54;
	add.s64 	%rd581, %rd580, %rd72;
	add.s64 	%rd582, %rd581, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd568;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 14;
	shf.r.wrap.b32 	%r466, %r463, %r464, 14;
	mov.b64 	%rd583, {%r466, %r465};
	shf.r.wrap.b32 	%r467, %r464, %r463, 18;
	shf.r.wrap.b32 	%r468, %r463, %r464, 18;
	mov.b64 	%rd584, {%r468, %r467};
	xor.b64  	%rd585, %rd583, %rd584;
	shf.l.wrap.b32 	%r469, %r463, %r464, 23;
	shf.l.wrap.b32 	%r470, %r464, %r463, 23;
	mov.b64 	%rd586, {%r470, %r469};
	xor.b64  	%rd587, %rd585, %rd586;
	xor.b64  	%rd588, %rd494, %rd531;
	and.b64  	%rd589, %rd588, %rd568;
	xor.b64  	%rd590, %rd589, %rd494;
	add.s64 	%rd591, %rd587, %rd457;
	add.s64 	%rd592, %rd591, %rd590;
	add.s64 	%rd593, %rd592, %rd582;
	add.s64 	%rd594, %rd593, 2597628984639134821;
	and.b64  	%rd595, %rd569, %rd532;
	or.b64  	%rd596, %rd569, %rd532;
	and.b64  	%rd597, %rd596, %rd495;
	or.b64  	%rd598, %rd597, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd569;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 28;
	shf.r.wrap.b32 	%r474, %r471, %r472, 28;
	mov.b64 	%rd599, {%r474, %r473};
	shf.l.wrap.b32 	%r475, %r471, %r472, 30;
	shf.l.wrap.b32 	%r476, %r472, %r471, 30;
	mov.b64 	%rd600, {%r476, %r475};
	xor.b64  	%rd601, %rd599, %rd600;
	shf.l.wrap.b32 	%r477, %r471, %r472, 25;
	shf.l.wrap.b32 	%r478, %r472, %r471, 25;
	mov.b64 	%rd602, {%r478, %r477};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd598, %rd603;
	add.s64 	%rd605, %rd594, %rd458;
	add.s64 	%rd606, %rd604, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd545;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 19;
	shf.r.wrap.b32 	%r482, %r479, %r480, 19;
	mov.b64 	%rd607, {%r482, %r481};
	shf.l.wrap.b32 	%r483, %r479, %r480, 3;
	shf.l.wrap.b32 	%r484, %r480, %r479, 3;
	mov.b64 	%rd608, {%r484, %r483};
	xor.b64  	%rd609, %rd607, %rd608;
	shr.u64 	%rd610, %rd545, 6;
	xor.b64  	%rd611, %rd609, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd58;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 1;
	shf.r.wrap.b32 	%r488, %r485, %r486, 1;
	mov.b64 	%rd612, {%r488, %r487};
	shf.r.wrap.b32 	%r489, %r486, %r485, 8;
	shf.r.wrap.b32 	%r490, %r485, %r486, 8;
	mov.b64 	%rd613, {%r490, %r489};
	xor.b64  	%rd614, %rd612, %rd613;
	shr.u64 	%rd615, %rd58, 7;
	xor.b64  	%rd616, %rd614, %rd615;
	add.s64 	%rd617, %rd611, %rd56;
	add.s64 	%rd618, %rd617, %rd74;
	add.s64 	%rd619, %rd618, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd605;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 14;
	shf.r.wrap.b32 	%r494, %r491, %r492, 14;
	mov.b64 	%rd620, {%r494, %r493};
	shf.r.wrap.b32 	%r495, %r492, %r491, 18;
	shf.r.wrap.b32 	%r496, %r491, %r492, 18;
	mov.b64 	%rd621, {%r496, %r495};
	xor.b64  	%rd622, %rd620, %rd621;
	shf.l.wrap.b32 	%r497, %r491, %r492, 23;
	shf.l.wrap.b32 	%r498, %r492, %r491, 23;
	mov.b64 	%rd623, {%r498, %r497};
	xor.b64  	%rd624, %rd622, %rd623;
	xor.b64  	%rd625, %rd531, %rd568;
	and.b64  	%rd626, %rd625, %rd605;
	xor.b64  	%rd627, %rd626, %rd531;
	add.s64 	%rd628, %rd624, %rd494;
	add.s64 	%rd629, %rd628, %rd627;
	add.s64 	%rd630, %rd629, %rd619;
	add.s64 	%rd631, %rd630, 3308224258029322869;
	and.b64  	%rd632, %rd606, %rd569;
	or.b64  	%rd633, %rd606, %rd569;
	and.b64  	%rd634, %rd633, %rd532;
	or.b64  	%rd635, %rd634, %rd632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd606;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 28;
	shf.r.wrap.b32 	%r502, %r499, %r500, 28;
	mov.b64 	%rd636, {%r502, %r501};
	shf.l.wrap.b32 	%r503, %r499, %r500, 30;
	shf.l.wrap.b32 	%r504, %r500, %r499, 30;
	mov.b64 	%rd637, {%r504, %r503};
	xor.b64  	%rd638, %rd636, %rd637;
	shf.l.wrap.b32 	%r505, %r499, %r500, 25;
	shf.l.wrap.b32 	%r506, %r500, %r499, 25;
	mov.b64 	%rd639, {%r506, %r505};
	xor.b64  	%rd640, %rd638, %rd639;
	add.s64 	%rd641, %rd635, %rd640;
	add.s64 	%rd642, %rd631, %rd495;
	add.s64 	%rd643, %rd641, %rd631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd582;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 19;
	shf.r.wrap.b32 	%r510, %r507, %r508, 19;
	mov.b64 	%rd644, {%r510, %r509};
	shf.l.wrap.b32 	%r511, %r507, %r508, 3;
	shf.l.wrap.b32 	%r512, %r508, %r507, 3;
	mov.b64 	%rd645, {%r512, %r511};
	xor.b64  	%rd646, %rd644, %rd645;
	shr.u64 	%rd647, %rd582, 6;
	xor.b64  	%rd648, %rd646, %rd647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd60;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd60;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 1;
	shf.r.wrap.b32 	%r516, %r513, %r514, 1;
	mov.b64 	%rd649, {%r516, %r515};
	shf.r.wrap.b32 	%r517, %r514, %r513, 8;
	shf.r.wrap.b32 	%r518, %r513, %r514, 8;
	mov.b64 	%rd650, {%r518, %r517};
	xor.b64  	%rd651, %rd649, %rd650;
	shr.u64 	%rd652, %rd60, 7;
	xor.b64  	%rd653, %rd651, %rd652;
	add.s64 	%rd654, %rd648, %rd58;
	add.s64 	%rd655, %rd654, %rd76;
	add.s64 	%rd656, %rd655, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd642;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 14;
	shf.r.wrap.b32 	%r522, %r519, %r520, 14;
	mov.b64 	%rd657, {%r522, %r521};
	shf.r.wrap.b32 	%r523, %r520, %r519, 18;
	shf.r.wrap.b32 	%r524, %r519, %r520, 18;
	mov.b64 	%rd658, {%r524, %r523};
	xor.b64  	%rd659, %rd657, %rd658;
	shf.l.wrap.b32 	%r525, %r519, %r520, 23;
	shf.l.wrap.b32 	%r526, %r520, %r519, 23;
	mov.b64 	%rd660, {%r526, %r525};
	xor.b64  	%rd661, %rd659, %rd660;
	xor.b64  	%rd662, %rd568, %rd605;
	and.b64  	%rd663, %rd662, %rd642;
	xor.b64  	%rd664, %rd663, %rd568;
	add.s64 	%rd665, %rd661, %rd531;
	add.s64 	%rd666, %rd665, %rd664;
	add.s64 	%rd667, %rd666, %rd656;
	add.s64 	%rd668, %rd667, 5365058923640841347;
	and.b64  	%rd669, %rd643, %rd606;
	or.b64  	%rd670, %rd643, %rd606;
	and.b64  	%rd671, %rd670, %rd569;
	or.b64  	%rd672, %rd671, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd643;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 28;
	shf.r.wrap.b32 	%r530, %r527, %r528, 28;
	mov.b64 	%rd673, {%r530, %r529};
	shf.l.wrap.b32 	%r531, %r527, %r528, 30;
	shf.l.wrap.b32 	%r532, %r528, %r527, 30;
	mov.b64 	%rd674, {%r532, %r531};
	xor.b64  	%rd675, %rd673, %rd674;
	shf.l.wrap.b32 	%r533, %r527, %r528, 25;
	shf.l.wrap.b32 	%r534, %r528, %r527, 25;
	mov.b64 	%rd676, {%r534, %r533};
	xor.b64  	%rd677, %rd675, %rd676;
	add.s64 	%rd678, %rd672, %rd677;
	add.s64 	%rd679, %rd668, %rd532;
	add.s64 	%rd680, %rd678, %rd668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd619;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 19;
	shf.r.wrap.b32 	%r538, %r535, %r536, 19;
	mov.b64 	%rd681, {%r538, %r537};
	shf.l.wrap.b32 	%r539, %r535, %r536, 3;
	shf.l.wrap.b32 	%r540, %r536, %r535, 3;
	mov.b64 	%rd682, {%r540, %r539};
	xor.b64  	%rd683, %rd681, %rd682;
	shr.u64 	%rd684, %rd619, 6;
	xor.b64  	%rd685, %rd683, %rd684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd62;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd62;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 1;
	shf.r.wrap.b32 	%r544, %r541, %r542, 1;
	mov.b64 	%rd686, {%r544, %r543};
	shf.r.wrap.b32 	%r545, %r542, %r541, 8;
	shf.r.wrap.b32 	%r546, %r541, %r542, 8;
	mov.b64 	%rd687, {%r546, %r545};
	xor.b64  	%rd688, %rd686, %rd687;
	shr.u64 	%rd689, %rd62, 7;
	xor.b64  	%rd690, %rd688, %rd689;
	add.s64 	%rd691, %rd685, %rd60;
	add.s64 	%rd692, %rd691, %rd88;
	add.s64 	%rd693, %rd692, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd679;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 14;
	shf.r.wrap.b32 	%r550, %r547, %r548, 14;
	mov.b64 	%rd694, {%r550, %r549};
	shf.r.wrap.b32 	%r551, %r548, %r547, 18;
	shf.r.wrap.b32 	%r552, %r547, %r548, 18;
	mov.b64 	%rd695, {%r552, %r551};
	xor.b64  	%rd696, %rd694, %rd695;
	shf.l.wrap.b32 	%r553, %r547, %r548, 23;
	shf.l.wrap.b32 	%r554, %r548, %r547, 23;
	mov.b64 	%rd697, {%r554, %r553};
	xor.b64  	%rd698, %rd696, %rd697;
	xor.b64  	%rd699, %rd605, %rd642;
	and.b64  	%rd700, %rd699, %rd679;
	xor.b64  	%rd701, %rd700, %rd605;
	add.s64 	%rd702, %rd698, %rd568;
	add.s64 	%rd703, %rd702, %rd701;
	add.s64 	%rd704, %rd703, %rd693;
	add.s64 	%rd705, %rd704, 6679025012923562964;
	and.b64  	%rd706, %rd680, %rd643;
	or.b64  	%rd707, %rd680, %rd643;
	and.b64  	%rd708, %rd707, %rd606;
	or.b64  	%rd709, %rd708, %rd706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd680;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 28;
	shf.r.wrap.b32 	%r558, %r555, %r556, 28;
	mov.b64 	%rd710, {%r558, %r557};
	shf.l.wrap.b32 	%r559, %r555, %r556, 30;
	shf.l.wrap.b32 	%r560, %r556, %r555, 30;
	mov.b64 	%rd711, {%r560, %r559};
	xor.b64  	%rd712, %rd710, %rd711;
	shf.l.wrap.b32 	%r561, %r555, %r556, 25;
	shf.l.wrap.b32 	%r562, %r556, %r555, 25;
	mov.b64 	%rd713, {%r562, %r561};
	xor.b64  	%rd714, %rd712, %rd713;
	add.s64 	%rd715, %rd709, %rd714;
	add.s64 	%rd716, %rd705, %rd569;
	add.s64 	%rd717, %rd715, %rd705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd656;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 19;
	shf.r.wrap.b32 	%r566, %r563, %r564, 19;
	mov.b64 	%rd718, {%r566, %r565};
	shf.l.wrap.b32 	%r567, %r563, %r564, 3;
	shf.l.wrap.b32 	%r568, %r564, %r563, 3;
	mov.b64 	%rd719, {%r568, %r567};
	xor.b64  	%rd720, %rd718, %rd719;
	shr.u64 	%rd721, %rd656, 6;
	xor.b64  	%rd722, %rd720, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd64;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd64;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 1;
	shf.r.wrap.b32 	%r572, %r569, %r570, 1;
	mov.b64 	%rd723, {%r572, %r571};
	shf.r.wrap.b32 	%r573, %r570, %r569, 8;
	shf.r.wrap.b32 	%r574, %r569, %r570, 8;
	mov.b64 	%rd724, {%r574, %r573};
	xor.b64  	%rd725, %rd723, %rd724;
	shr.u64 	%rd726, %rd64, 7;
	xor.b64  	%rd727, %rd725, %rd726;
	add.s64 	%rd728, %rd722, %rd62;
	add.s64 	%rd729, %rd728, %rd471;
	add.s64 	%rd730, %rd729, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd716;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 14;
	shf.r.wrap.b32 	%r578, %r575, %r576, 14;
	mov.b64 	%rd731, {%r578, %r577};
	shf.r.wrap.b32 	%r579, %r576, %r575, 18;
	shf.r.wrap.b32 	%r580, %r575, %r576, 18;
	mov.b64 	%rd732, {%r580, %r579};
	xor.b64  	%rd733, %rd731, %rd732;
	shf.l.wrap.b32 	%r581, %r575, %r576, 23;
	shf.l.wrap.b32 	%r582, %r576, %r575, 23;
	mov.b64 	%rd734, {%r582, %r581};
	xor.b64  	%rd735, %rd733, %rd734;
	xor.b64  	%rd736, %rd642, %rd679;
	and.b64  	%rd737, %rd736, %rd716;
	xor.b64  	%rd738, %rd737, %rd642;
	add.s64 	%rd739, %rd735, %rd605;
	add.s64 	%rd740, %rd739, %rd738;
	add.s64 	%rd741, %rd740, %rd730;
	add.s64 	%rd742, %rd741, 8573033837759648693;
	and.b64  	%rd743, %rd717, %rd680;
	or.b64  	%rd744, %rd717, %rd680;
	and.b64  	%rd745, %rd744, %rd643;
	or.b64  	%rd746, %rd745, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd717;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 28;
	shf.r.wrap.b32 	%r586, %r583, %r584, 28;
	mov.b64 	%rd747, {%r586, %r585};
	shf.l.wrap.b32 	%r587, %r583, %r584, 30;
	shf.l.wrap.b32 	%r588, %r584, %r583, 30;
	mov.b64 	%rd748, {%r588, %r587};
	xor.b64  	%rd749, %rd747, %rd748;
	shf.l.wrap.b32 	%r589, %r583, %r584, 25;
	shf.l.wrap.b32 	%r590, %r584, %r583, 25;
	mov.b64 	%rd750, {%r590, %r589};
	xor.b64  	%rd751, %rd749, %rd750;
	add.s64 	%rd752, %rd746, %rd751;
	add.s64 	%rd753, %rd742, %rd606;
	add.s64 	%rd754, %rd752, %rd742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd693;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 19;
	shf.r.wrap.b32 	%r594, %r591, %r592, 19;
	mov.b64 	%rd755, {%r594, %r593};
	shf.l.wrap.b32 	%r595, %r591, %r592, 3;
	shf.l.wrap.b32 	%r596, %r592, %r591, 3;
	mov.b64 	%rd756, {%r596, %r595};
	xor.b64  	%rd757, %rd755, %rd756;
	shr.u64 	%rd758, %rd693, 6;
	xor.b64  	%rd759, %rd757, %rd758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd66;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd66;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 1;
	shf.r.wrap.b32 	%r600, %r597, %r598, 1;
	mov.b64 	%rd760, {%r600, %r599};
	shf.r.wrap.b32 	%r601, %r598, %r597, 8;
	shf.r.wrap.b32 	%r602, %r597, %r598, 8;
	mov.b64 	%rd761, {%r602, %r601};
	xor.b64  	%rd762, %rd760, %rd761;
	shr.u64 	%rd763, %rd66, 7;
	xor.b64  	%rd764, %rd762, %rd763;
	add.s64 	%rd765, %rd759, %rd64;
	add.s64 	%rd766, %rd765, %rd508;
	add.s64 	%rd767, %rd766, %rd764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd753;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 14;
	shf.r.wrap.b32 	%r606, %r603, %r604, 14;
	mov.b64 	%rd768, {%r606, %r605};
	shf.r.wrap.b32 	%r607, %r604, %r603, 18;
	shf.r.wrap.b32 	%r608, %r603, %r604, 18;
	mov.b64 	%rd769, {%r608, %r607};
	xor.b64  	%rd770, %rd768, %rd769;
	shf.l.wrap.b32 	%r609, %r603, %r604, 23;
	shf.l.wrap.b32 	%r610, %r604, %r603, 23;
	mov.b64 	%rd771, {%r610, %r609};
	xor.b64  	%rd772, %rd770, %rd771;
	xor.b64  	%rd773, %rd679, %rd716;
	and.b64  	%rd774, %rd773, %rd753;
	xor.b64  	%rd775, %rd774, %rd679;
	add.s64 	%rd776, %rd772, %rd642;
	add.s64 	%rd777, %rd776, %rd775;
	add.s64 	%rd778, %rd777, %rd767;
	add.s64 	%rd779, %rd778, -7476448914759557205;
	and.b64  	%rd780, %rd754, %rd717;
	or.b64  	%rd781, %rd754, %rd717;
	and.b64  	%rd782, %rd781, %rd680;
	or.b64  	%rd783, %rd782, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd754;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 28;
	shf.r.wrap.b32 	%r614, %r611, %r612, 28;
	mov.b64 	%rd784, {%r614, %r613};
	shf.l.wrap.b32 	%r615, %r611, %r612, 30;
	shf.l.wrap.b32 	%r616, %r612, %r611, 30;
	mov.b64 	%rd785, {%r616, %r615};
	xor.b64  	%rd786, %rd784, %rd785;
	shf.l.wrap.b32 	%r617, %r611, %r612, 25;
	shf.l.wrap.b32 	%r618, %r612, %r611, 25;
	mov.b64 	%rd787, {%r618, %r617};
	xor.b64  	%rd788, %rd786, %rd787;
	add.s64 	%rd789, %rd783, %rd788;
	add.s64 	%rd790, %rd779, %rd643;
	add.s64 	%rd791, %rd789, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd730;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 19;
	shf.r.wrap.b32 	%r622, %r619, %r620, 19;
	mov.b64 	%rd792, {%r622, %r621};
	shf.l.wrap.b32 	%r623, %r619, %r620, 3;
	shf.l.wrap.b32 	%r624, %r620, %r619, 3;
	mov.b64 	%rd793, {%r624, %r623};
	xor.b64  	%rd794, %rd792, %rd793;
	shr.u64 	%rd795, %rd730, 6;
	xor.b64  	%rd796, %rd794, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd68;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd68;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 1;
	shf.r.wrap.b32 	%r628, %r625, %r626, 1;
	mov.b64 	%rd797, {%r628, %r627};
	shf.r.wrap.b32 	%r629, %r626, %r625, 8;
	shf.r.wrap.b32 	%r630, %r625, %r626, 8;
	mov.b64 	%rd798, {%r630, %r629};
	xor.b64  	%rd799, %rd797, %rd798;
	shr.u64 	%rd800, %rd68, 7;
	xor.b64  	%rd801, %rd799, %rd800;
	add.s64 	%rd802, %rd796, %rd66;
	add.s64 	%rd803, %rd802, %rd545;
	add.s64 	%rd804, %rd803, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd790;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 14;
	shf.r.wrap.b32 	%r634, %r631, %r632, 14;
	mov.b64 	%rd805, {%r634, %r633};
	shf.r.wrap.b32 	%r635, %r632, %r631, 18;
	shf.r.wrap.b32 	%r636, %r631, %r632, 18;
	mov.b64 	%rd806, {%r636, %r635};
	xor.b64  	%rd807, %rd805, %rd806;
	shf.l.wrap.b32 	%r637, %r631, %r632, 23;
	shf.l.wrap.b32 	%r638, %r632, %r631, 23;
	mov.b64 	%rd808, {%r638, %r637};
	xor.b64  	%rd809, %rd807, %rd808;
	xor.b64  	%rd810, %rd716, %rd753;
	and.b64  	%rd811, %rd810, %rd790;
	xor.b64  	%rd812, %rd811, %rd716;
	add.s64 	%rd813, %rd809, %rd679;
	add.s64 	%rd814, %rd813, %rd812;
	add.s64 	%rd815, %rd814, %rd804;
	add.s64 	%rd816, %rd815, -6327057829258317296;
	and.b64  	%rd817, %rd791, %rd754;
	or.b64  	%rd818, %rd791, %rd754;
	and.b64  	%rd819, %rd818, %rd717;
	or.b64  	%rd820, %rd819, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd791;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 28;
	shf.r.wrap.b32 	%r642, %r639, %r640, 28;
	mov.b64 	%rd821, {%r642, %r641};
	shf.l.wrap.b32 	%r643, %r639, %r640, 30;
	shf.l.wrap.b32 	%r644, %r640, %r639, 30;
	mov.b64 	%rd822, {%r644, %r643};
	xor.b64  	%rd823, %rd821, %rd822;
	shf.l.wrap.b32 	%r645, %r639, %r640, 25;
	shf.l.wrap.b32 	%r646, %r640, %r639, 25;
	mov.b64 	%rd824, {%r646, %r645};
	xor.b64  	%rd825, %rd823, %rd824;
	add.s64 	%rd826, %rd820, %rd825;
	add.s64 	%rd827, %rd816, %rd680;
	add.s64 	%rd828, %rd826, %rd816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd767;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 19;
	shf.r.wrap.b32 	%r650, %r647, %r648, 19;
	mov.b64 	%rd829, {%r650, %r649};
	shf.l.wrap.b32 	%r651, %r647, %r648, 3;
	shf.l.wrap.b32 	%r652, %r648, %r647, 3;
	mov.b64 	%rd830, {%r652, %r651};
	xor.b64  	%rd831, %rd829, %rd830;
	shr.u64 	%rd832, %rd767, 6;
	xor.b64  	%rd833, %rd831, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd70;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd70;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 1;
	shf.r.wrap.b32 	%r656, %r653, %r654, 1;
	mov.b64 	%rd834, {%r656, %r655};
	shf.r.wrap.b32 	%r657, %r654, %r653, 8;
	shf.r.wrap.b32 	%r658, %r653, %r654, 8;
	mov.b64 	%rd835, {%r658, %r657};
	xor.b64  	%rd836, %rd834, %rd835;
	shr.u64 	%rd837, %rd70, 7;
	xor.b64  	%rd838, %rd836, %rd837;
	add.s64 	%rd839, %rd833, %rd68;
	add.s64 	%rd840, %rd839, %rd582;
	add.s64 	%rd841, %rd840, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd827;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 14;
	shf.r.wrap.b32 	%r662, %r659, %r660, 14;
	mov.b64 	%rd842, {%r662, %r661};
	shf.r.wrap.b32 	%r663, %r660, %r659, 18;
	shf.r.wrap.b32 	%r664, %r659, %r660, 18;
	mov.b64 	%rd843, {%r664, %r663};
	xor.b64  	%rd844, %rd842, %rd843;
	shf.l.wrap.b32 	%r665, %r659, %r660, 23;
	shf.l.wrap.b32 	%r666, %r660, %r659, 23;
	mov.b64 	%rd845, {%r666, %r665};
	xor.b64  	%rd846, %rd844, %rd845;
	xor.b64  	%rd847, %rd753, %rd790;
	and.b64  	%rd848, %rd847, %rd827;
	xor.b64  	%rd849, %rd848, %rd753;
	add.s64 	%rd850, %rd846, %rd716;
	add.s64 	%rd851, %rd850, %rd849;
	add.s64 	%rd852, %rd851, %rd841;
	add.s64 	%rd853, %rd852, -5763719355590565569;
	and.b64  	%rd854, %rd828, %rd791;
	or.b64  	%rd855, %rd828, %rd791;
	and.b64  	%rd856, %rd855, %rd754;
	or.b64  	%rd857, %rd856, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd828;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 28;
	shf.r.wrap.b32 	%r670, %r667, %r668, 28;
	mov.b64 	%rd858, {%r670, %r669};
	shf.l.wrap.b32 	%r671, %r667, %r668, 30;
	shf.l.wrap.b32 	%r672, %r668, %r667, 30;
	mov.b64 	%rd859, {%r672, %r671};
	xor.b64  	%rd860, %rd858, %rd859;
	shf.l.wrap.b32 	%r673, %r667, %r668, 25;
	shf.l.wrap.b32 	%r674, %r668, %r667, 25;
	mov.b64 	%rd861, {%r674, %r673};
	xor.b64  	%rd862, %rd860, %rd861;
	add.s64 	%rd863, %rd857, %rd862;
	add.s64 	%rd864, %rd853, %rd717;
	add.s64 	%rd865, %rd863, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r675,%dummy}, %rd804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd804;
	}
	shf.r.wrap.b32 	%r677, %r676, %r675, 19;
	shf.r.wrap.b32 	%r678, %r675, %r676, 19;
	mov.b64 	%rd866, {%r678, %r677};
	shf.l.wrap.b32 	%r679, %r675, %r676, 3;
	shf.l.wrap.b32 	%r680, %r676, %r675, 3;
	mov.b64 	%rd867, {%r680, %r679};
	xor.b64  	%rd868, %rd866, %rd867;
	shr.u64 	%rd869, %rd804, 6;
	xor.b64  	%rd870, %rd868, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd72;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd72;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 1;
	shf.r.wrap.b32 	%r684, %r681, %r682, 1;
	mov.b64 	%rd871, {%r684, %r683};
	shf.r.wrap.b32 	%r685, %r682, %r681, 8;
	shf.r.wrap.b32 	%r686, %r681, %r682, 8;
	mov.b64 	%rd872, {%r686, %r685};
	xor.b64  	%rd873, %rd871, %rd872;
	shr.u64 	%rd874, %rd72, 7;
	xor.b64  	%rd875, %rd873, %rd874;
	add.s64 	%rd876, %rd870, %rd70;
	add.s64 	%rd877, %rd876, %rd619;
	add.s64 	%rd878, %rd877, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd864;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 14;
	shf.r.wrap.b32 	%r690, %r687, %r688, 14;
	mov.b64 	%rd879, {%r690, %r689};
	shf.r.wrap.b32 	%r691, %r688, %r687, 18;
	shf.r.wrap.b32 	%r692, %r687, %r688, 18;
	mov.b64 	%rd880, {%r692, %r691};
	xor.b64  	%rd881, %rd879, %rd880;
	shf.l.wrap.b32 	%r693, %r687, %r688, 23;
	shf.l.wrap.b32 	%r694, %r688, %r687, 23;
	mov.b64 	%rd882, {%r694, %r693};
	xor.b64  	%rd883, %rd881, %rd882;
	xor.b64  	%rd884, %rd790, %rd827;
	and.b64  	%rd885, %rd884, %rd864;
	xor.b64  	%rd886, %rd885, %rd790;
	add.s64 	%rd887, %rd883, %rd753;
	add.s64 	%rd888, %rd887, %rd886;
	add.s64 	%rd889, %rd888, %rd878;
	add.s64 	%rd890, %rd889, -4658551843659510044;
	and.b64  	%rd891, %rd865, %rd828;
	or.b64  	%rd892, %rd865, %rd828;
	and.b64  	%rd893, %rd892, %rd791;
	or.b64  	%rd894, %rd893, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd865;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 28;
	shf.r.wrap.b32 	%r698, %r695, %r696, 28;
	mov.b64 	%rd895, {%r698, %r697};
	shf.l.wrap.b32 	%r699, %r695, %r696, 30;
	shf.l.wrap.b32 	%r700, %r696, %r695, 30;
	mov.b64 	%rd896, {%r700, %r699};
	xor.b64  	%rd897, %rd895, %rd896;
	shf.l.wrap.b32 	%r701, %r695, %r696, 25;
	shf.l.wrap.b32 	%r702, %r696, %r695, 25;
	mov.b64 	%rd898, {%r702, %r701};
	xor.b64  	%rd899, %rd897, %rd898;
	add.s64 	%rd900, %rd894, %rd899;
	add.s64 	%rd901, %rd890, %rd754;
	add.s64 	%rd902, %rd900, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd841;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 19;
	shf.r.wrap.b32 	%r706, %r703, %r704, 19;
	mov.b64 	%rd903, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 3;
	shf.l.wrap.b32 	%r708, %r704, %r703, 3;
	mov.b64 	%rd904, {%r708, %r707};
	xor.b64  	%rd905, %rd903, %rd904;
	shr.u64 	%rd906, %rd841, 6;
	xor.b64  	%rd907, %rd905, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd74;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd74;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 1;
	shf.r.wrap.b32 	%r712, %r709, %r710, 1;
	mov.b64 	%rd908, {%r712, %r711};
	shf.r.wrap.b32 	%r713, %r710, %r709, 8;
	shf.r.wrap.b32 	%r714, %r709, %r710, 8;
	mov.b64 	%rd909, {%r714, %r713};
	xor.b64  	%rd910, %rd908, %rd909;
	shr.u64 	%rd911, %rd74, 7;
	xor.b64  	%rd912, %rd910, %rd911;
	add.s64 	%rd913, %rd907, %rd72;
	add.s64 	%rd914, %rd913, %rd656;
	add.s64 	%rd915, %rd914, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd901;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 14;
	shf.r.wrap.b32 	%r718, %r715, %r716, 14;
	mov.b64 	%rd916, {%r718, %r717};
	shf.r.wrap.b32 	%r719, %r716, %r715, 18;
	shf.r.wrap.b32 	%r720, %r715, %r716, 18;
	mov.b64 	%rd917, {%r720, %r719};
	xor.b64  	%rd918, %rd916, %rd917;
	shf.l.wrap.b32 	%r721, %r715, %r716, 23;
	shf.l.wrap.b32 	%r722, %r716, %r715, 23;
	mov.b64 	%rd919, {%r722, %r721};
	xor.b64  	%rd920, %rd918, %rd919;
	xor.b64  	%rd921, %rd827, %rd864;
	and.b64  	%rd922, %rd921, %rd901;
	xor.b64  	%rd923, %rd922, %rd827;
	add.s64 	%rd924, %rd920, %rd790;
	add.s64 	%rd925, %rd924, %rd923;
	add.s64 	%rd926, %rd925, %rd915;
	add.s64 	%rd927, %rd926, -4116276920077217854;
	and.b64  	%rd928, %rd902, %rd865;
	or.b64  	%rd929, %rd902, %rd865;
	and.b64  	%rd930, %rd929, %rd828;
	or.b64  	%rd931, %rd930, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd902;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 28;
	shf.r.wrap.b32 	%r726, %r723, %r724, 28;
	mov.b64 	%rd932, {%r726, %r725};
	shf.l.wrap.b32 	%r727, %r723, %r724, 30;
	shf.l.wrap.b32 	%r728, %r724, %r723, 30;
	mov.b64 	%rd933, {%r728, %r727};
	xor.b64  	%rd934, %rd932, %rd933;
	shf.l.wrap.b32 	%r729, %r723, %r724, 25;
	shf.l.wrap.b32 	%r730, %r724, %r723, 25;
	mov.b64 	%rd935, {%r730, %r729};
	xor.b64  	%rd936, %rd934, %rd935;
	add.s64 	%rd937, %rd931, %rd936;
	add.s64 	%rd938, %rd927, %rd791;
	add.s64 	%rd939, %rd937, %rd927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd878;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 19;
	shf.r.wrap.b32 	%r734, %r731, %r732, 19;
	mov.b64 	%rd940, {%r734, %r733};
	shf.l.wrap.b32 	%r735, %r731, %r732, 3;
	shf.l.wrap.b32 	%r736, %r732, %r731, 3;
	mov.b64 	%rd941, {%r736, %r735};
	xor.b64  	%rd942, %rd940, %rd941;
	shr.u64 	%rd943, %rd878, 6;
	xor.b64  	%rd944, %rd942, %rd943;
	shf.r.wrap.b32 	%r737, %r368, %r367, 1;
	shf.r.wrap.b32 	%r738, %r367, %r368, 1;
	mov.b64 	%rd945, {%r738, %r737};
	shf.r.wrap.b32 	%r739, %r368, %r367, 8;
	shf.r.wrap.b32 	%r740, %r367, %r368, 8;
	mov.b64 	%rd946, {%r740, %r739};
	xor.b64  	%rd947, %rd945, %rd946;
	shr.u64 	%rd948, %rd76, 7;
	xor.b64  	%rd949, %rd947, %rd948;
	add.s64 	%rd950, %rd944, %rd74;
	add.s64 	%rd951, %rd950, %rd693;
	add.s64 	%rd952, %rd951, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd938;
	}
	shf.r.wrap.b32 	%r743, %r742, %r741, 14;
	shf.r.wrap.b32 	%r744, %r741, %r742, 14;
	mov.b64 	%rd953, {%r744, %r743};
	shf.r.wrap.b32 	%r745, %r742, %r741, 18;
	shf.r.wrap.b32 	%r746, %r741, %r742, 18;
	mov.b64 	%rd954, {%r746, %r745};
	xor.b64  	%rd955, %rd953, %rd954;
	shf.l.wrap.b32 	%r747, %r741, %r742, 23;
	shf.l.wrap.b32 	%r748, %r742, %r741, 23;
	mov.b64 	%rd956, {%r748, %r747};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd864, %rd901;
	and.b64  	%rd959, %rd958, %rd938;
	xor.b64  	%rd960, %rd959, %rd864;
	add.s64 	%rd961, %rd957, %rd827;
	add.s64 	%rd962, %rd961, %rd960;
	add.s64 	%rd963, %rd962, %rd952;
	add.s64 	%rd964, %rd963, -3051310485924567259;
	and.b64  	%rd965, %rd939, %rd902;
	or.b64  	%rd966, %rd939, %rd902;
	and.b64  	%rd967, %rd966, %rd865;
	or.b64  	%rd968, %rd967, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd939;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 28;
	shf.r.wrap.b32 	%r752, %r749, %r750, 28;
	mov.b64 	%rd969, {%r752, %r751};
	shf.l.wrap.b32 	%r753, %r749, %r750, 30;
	shf.l.wrap.b32 	%r754, %r750, %r749, 30;
	mov.b64 	%rd970, {%r754, %r753};
	xor.b64  	%rd971, %rd969, %rd970;
	shf.l.wrap.b32 	%r755, %r749, %r750, 25;
	shf.l.wrap.b32 	%r756, %r750, %r749, 25;
	mov.b64 	%rd972, {%r756, %r755};
	xor.b64  	%rd973, %rd971, %rd972;
	add.s64 	%rd974, %rd968, %rd973;
	add.s64 	%rd975, %rd964, %rd828;
	add.s64 	%rd976, %rd974, %rd964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd915;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 19;
	shf.r.wrap.b32 	%r760, %r757, %r758, 19;
	mov.b64 	%rd977, {%r760, %r759};
	shf.l.wrap.b32 	%r761, %r757, %r758, 3;
	shf.l.wrap.b32 	%r762, %r758, %r757, 3;
	mov.b64 	%rd978, {%r762, %r761};
	xor.b64  	%rd979, %rd977, %rd978;
	shr.u64 	%rd980, %rd915, 6;
	xor.b64  	%rd981, %rd979, %rd980;
	shf.r.wrap.b32 	%r763, %r396, %r395, 1;
	shf.r.wrap.b32 	%r764, %r395, %r396, 1;
	mov.b64 	%rd982, {%r764, %r763};
	shf.r.wrap.b32 	%r765, %r396, %r395, 8;
	shf.r.wrap.b32 	%r766, %r395, %r396, 8;
	mov.b64 	%rd983, {%r766, %r765};
	xor.b64  	%rd984, %rd982, %rd983;
	shr.u64 	%rd985, %rd88, 7;
	xor.b64  	%rd986, %rd984, %rd985;
	add.s64 	%rd987, %rd981, %rd76;
	add.s64 	%rd988, %rd987, %rd730;
	add.s64 	%rd989, %rd988, %rd986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r767,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd975;
	}
	shf.r.wrap.b32 	%r769, %r768, %r767, 14;
	shf.r.wrap.b32 	%r770, %r767, %r768, 14;
	mov.b64 	%rd990, {%r770, %r769};
	shf.r.wrap.b32 	%r771, %r768, %r767, 18;
	shf.r.wrap.b32 	%r772, %r767, %r768, 18;
	mov.b64 	%rd991, {%r772, %r771};
	xor.b64  	%rd992, %rd990, %rd991;
	shf.l.wrap.b32 	%r773, %r767, %r768, 23;
	shf.l.wrap.b32 	%r774, %r768, %r767, 23;
	mov.b64 	%rd993, {%r774, %r773};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd901, %rd938;
	and.b64  	%rd996, %rd995, %rd975;
	xor.b64  	%rd997, %rd996, %rd901;
	add.s64 	%rd998, %rd994, %rd864;
	add.s64 	%rd999, %rd998, %rd997;
	add.s64 	%rd1000, %rd999, %rd989;
	add.s64 	%rd1001, %rd1000, 489312712824947311;
	and.b64  	%rd1002, %rd976, %rd939;
	or.b64  	%rd1003, %rd976, %rd939;
	and.b64  	%rd1004, %rd1003, %rd902;
	or.b64  	%rd1005, %rd1004, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r775,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r776}, %rd976;
	}
	shf.r.wrap.b32 	%r777, %r776, %r775, 28;
	shf.r.wrap.b32 	%r778, %r775, %r776, 28;
	mov.b64 	%rd1006, {%r778, %r777};
	shf.l.wrap.b32 	%r779, %r775, %r776, 30;
	shf.l.wrap.b32 	%r780, %r776, %r775, 30;
	mov.b64 	%rd1007, {%r780, %r779};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	shf.l.wrap.b32 	%r781, %r775, %r776, 25;
	shf.l.wrap.b32 	%r782, %r776, %r775, 25;
	mov.b64 	%rd1009, {%r782, %r781};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	add.s64 	%rd1011, %rd1005, %rd1010;
	add.s64 	%rd1012, %rd1001, %rd865;
	add.s64 	%rd1013, %rd1011, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd952;
	}
	shf.r.wrap.b32 	%r785, %r784, %r783, 19;
	shf.r.wrap.b32 	%r786, %r783, %r784, 19;
	mov.b64 	%rd1014, {%r786, %r785};
	shf.l.wrap.b32 	%r787, %r783, %r784, 3;
	shf.l.wrap.b32 	%r788, %r784, %r783, 3;
	mov.b64 	%rd1015, {%r788, %r787};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	shr.u64 	%rd1017, %rd952, 6;
	xor.b64  	%rd1018, %rd1016, %rd1017;
	shf.r.wrap.b32 	%r789, %r424, %r423, 1;
	shf.r.wrap.b32 	%r790, %r423, %r424, 1;
	mov.b64 	%rd1019, {%r790, %r789};
	shf.r.wrap.b32 	%r791, %r424, %r423, 8;
	shf.r.wrap.b32 	%r792, %r423, %r424, 8;
	mov.b64 	%rd1020, {%r792, %r791};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	shr.u64 	%rd1022, %rd471, 7;
	xor.b64  	%rd1023, %rd1021, %rd1022;
	add.s64 	%rd1024, %rd1018, %rd88;
	add.s64 	%rd1025, %rd1024, %rd767;
	add.s64 	%rd1026, %rd1025, %rd1023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd1012;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 14;
	shf.r.wrap.b32 	%r796, %r793, %r794, 14;
	mov.b64 	%rd1027, {%r796, %r795};
	shf.r.wrap.b32 	%r797, %r794, %r793, 18;
	shf.r.wrap.b32 	%r798, %r793, %r794, 18;
	mov.b64 	%rd1028, {%r798, %r797};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	shf.l.wrap.b32 	%r799, %r793, %r794, 23;
	shf.l.wrap.b32 	%r800, %r794, %r793, 23;
	mov.b64 	%rd1030, {%r800, %r799};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd938, %rd975;
	and.b64  	%rd1033, %rd1032, %rd1012;
	xor.b64  	%rd1034, %rd1033, %rd938;
	add.s64 	%rd1035, %rd1031, %rd901;
	add.s64 	%rd1036, %rd1035, %rd1034;
	add.s64 	%rd1037, %rd1036, %rd1026;
	add.s64 	%rd1038, %rd1037, 1452737877330783856;
	and.b64  	%rd1039, %rd1013, %rd976;
	or.b64  	%rd1040, %rd1013, %rd976;
	and.b64  	%rd1041, %rd1040, %rd939;
	or.b64  	%rd1042, %rd1041, %rd1039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r802}, %rd1013;
	}
	shf.r.wrap.b32 	%r803, %r802, %r801, 28;
	shf.r.wrap.b32 	%r804, %r801, %r802, 28;
	mov.b64 	%rd1043, {%r804, %r803};
	shf.l.wrap.b32 	%r805, %r801, %r802, 30;
	shf.l.wrap.b32 	%r806, %r802, %r801, 30;
	mov.b64 	%rd1044, {%r806, %r805};
	xor.b64  	%rd1045, %rd1043, %rd1044;
	shf.l.wrap.b32 	%r807, %r801, %r802, 25;
	shf.l.wrap.b32 	%r808, %r802, %r801, 25;
	mov.b64 	%rd1046, {%r808, %r807};
	xor.b64  	%rd1047, %rd1045, %rd1046;
	add.s64 	%rd1048, %rd1042, %rd1047;
	add.s64 	%rd1049, %rd1038, %rd902;
	add.s64 	%rd1050, %rd1048, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r810}, %rd989;
	}
	shf.r.wrap.b32 	%r811, %r810, %r809, 19;
	shf.r.wrap.b32 	%r812, %r809, %r810, 19;
	mov.b64 	%rd1051, {%r812, %r811};
	shf.l.wrap.b32 	%r813, %r809, %r810, 3;
	shf.l.wrap.b32 	%r814, %r810, %r809, 3;
	mov.b64 	%rd1052, {%r814, %r813};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	shr.u64 	%rd1054, %rd989, 6;
	xor.b64  	%rd1055, %rd1053, %rd1054;
	shf.r.wrap.b32 	%r815, %r452, %r451, 1;
	shf.r.wrap.b32 	%r816, %r451, %r452, 1;
	mov.b64 	%rd1056, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r452, %r451, 8;
	shf.r.wrap.b32 	%r818, %r451, %r452, 8;
	mov.b64 	%rd1057, {%r818, %r817};
	xor.b64  	%rd1058, %rd1056, %rd1057;
	shr.u64 	%rd1059, %rd508, 7;
	xor.b64  	%rd1060, %rd1058, %rd1059;
	add.s64 	%rd1061, %rd1055, %rd471;
	add.s64 	%rd1062, %rd1061, %rd804;
	add.s64 	%rd1063, %rd1062, %rd1060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd1049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd1049;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 14;
	shf.r.wrap.b32 	%r822, %r819, %r820, 14;
	mov.b64 	%rd1064, {%r822, %r821};
	shf.r.wrap.b32 	%r823, %r820, %r819, 18;
	shf.r.wrap.b32 	%r824, %r819, %r820, 18;
	mov.b64 	%rd1065, {%r824, %r823};
	xor.b64  	%rd1066, %rd1064, %rd1065;
	shf.l.wrap.b32 	%r825, %r819, %r820, 23;
	shf.l.wrap.b32 	%r826, %r820, %r819, 23;
	mov.b64 	%rd1067, {%r826, %r825};
	xor.b64  	%rd1068, %rd1066, %rd1067;
	xor.b64  	%rd1069, %rd975, %rd1012;
	and.b64  	%rd1070, %rd1069, %rd1049;
	xor.b64  	%rd1071, %rd1070, %rd975;
	add.s64 	%rd1072, %rd1068, %rd938;
	add.s64 	%rd1073, %rd1072, %rd1071;
	add.s64 	%rd1074, %rd1073, %rd1063;
	add.s64 	%rd1075, %rd1074, 2861767655752347644;
	and.b64  	%rd1076, %rd1050, %rd1013;
	or.b64  	%rd1077, %rd1050, %rd1013;
	and.b64  	%rd1078, %rd1077, %rd976;
	or.b64  	%rd1079, %rd1078, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd1050;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 28;
	shf.r.wrap.b32 	%r830, %r827, %r828, 28;
	mov.b64 	%rd1080, {%r830, %r829};
	shf.l.wrap.b32 	%r831, %r827, %r828, 30;
	shf.l.wrap.b32 	%r832, %r828, %r827, 30;
	mov.b64 	%rd1081, {%r832, %r831};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	shf.l.wrap.b32 	%r833, %r827, %r828, 25;
	shf.l.wrap.b32 	%r834, %r828, %r827, 25;
	mov.b64 	%rd1083, {%r834, %r833};
	xor.b64  	%rd1084, %rd1082, %rd1083;
	add.s64 	%rd1085, %rd1079, %rd1084;
	add.s64 	%rd1086, %rd1075, %rd939;
	add.s64 	%rd1087, %rd1085, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1026;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 19;
	shf.r.wrap.b32 	%r838, %r835, %r836, 19;
	mov.b64 	%rd1088, {%r838, %r837};
	shf.l.wrap.b32 	%r839, %r835, %r836, 3;
	shf.l.wrap.b32 	%r840, %r836, %r835, 3;
	mov.b64 	%rd1089, {%r840, %r839};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	shr.u64 	%rd1091, %rd1026, 6;
	xor.b64  	%rd1092, %rd1090, %rd1091;
	shf.r.wrap.b32 	%r841, %r480, %r479, 1;
	shf.r.wrap.b32 	%r842, %r479, %r480, 1;
	mov.b64 	%rd1093, {%r842, %r841};
	shf.r.wrap.b32 	%r843, %r480, %r479, 8;
	shf.r.wrap.b32 	%r844, %r479, %r480, 8;
	mov.b64 	%rd1094, {%r844, %r843};
	xor.b64  	%rd1095, %rd1093, %rd1094;
	shr.u64 	%rd1096, %rd545, 7;
	xor.b64  	%rd1097, %rd1095, %rd1096;
	add.s64 	%rd1098, %rd1092, %rd508;
	add.s64 	%rd1099, %rd1098, %rd841;
	add.s64 	%rd1100, %rd1099, %rd1097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd1086;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 14;
	shf.r.wrap.b32 	%r848, %r845, %r846, 14;
	mov.b64 	%rd1101, {%r848, %r847};
	shf.r.wrap.b32 	%r849, %r846, %r845, 18;
	shf.r.wrap.b32 	%r850, %r845, %r846, 18;
	mov.b64 	%rd1102, {%r850, %r849};
	xor.b64  	%rd1103, %rd1101, %rd1102;
	shf.l.wrap.b32 	%r851, %r845, %r846, 23;
	shf.l.wrap.b32 	%r852, %r846, %r845, 23;
	mov.b64 	%rd1104, {%r852, %r851};
	xor.b64  	%rd1105, %rd1103, %rd1104;
	xor.b64  	%rd1106, %rd1012, %rd1049;
	and.b64  	%rd1107, %rd1106, %rd1086;
	xor.b64  	%rd1108, %rd1107, %rd1012;
	add.s64 	%rd1109, %rd1105, %rd975;
	add.s64 	%rd1110, %rd1109, %rd1108;
	add.s64 	%rd1111, %rd1110, %rd1100;
	add.s64 	%rd1112, %rd1111, 3322285676063803686;
	and.b64  	%rd1113, %rd1087, %rd1050;
	or.b64  	%rd1114, %rd1087, %rd1050;
	and.b64  	%rd1115, %rd1114, %rd1013;
	or.b64  	%rd1116, %rd1115, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1087;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 28;
	shf.r.wrap.b32 	%r856, %r853, %r854, 28;
	mov.b64 	%rd1117, {%r856, %r855};
	shf.l.wrap.b32 	%r857, %r853, %r854, 30;
	shf.l.wrap.b32 	%r858, %r854, %r853, 30;
	mov.b64 	%rd1118, {%r858, %r857};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	shf.l.wrap.b32 	%r859, %r853, %r854, 25;
	shf.l.wrap.b32 	%r860, %r854, %r853, 25;
	mov.b64 	%rd1120, {%r860, %r859};
	xor.b64  	%rd1121, %rd1119, %rd1120;
	add.s64 	%rd1122, %rd1116, %rd1121;
	add.s64 	%rd1123, %rd1112, %rd976;
	add.s64 	%rd1124, %rd1122, %rd1112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1063;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 19;
	shf.r.wrap.b32 	%r864, %r861, %r862, 19;
	mov.b64 	%rd1125, {%r864, %r863};
	shf.l.wrap.b32 	%r865, %r861, %r862, 3;
	shf.l.wrap.b32 	%r866, %r862, %r861, 3;
	mov.b64 	%rd1126, {%r866, %r865};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	shr.u64 	%rd1128, %rd1063, 6;
	xor.b64  	%rd1129, %rd1127, %rd1128;
	shf.r.wrap.b32 	%r867, %r508, %r507, 1;
	shf.r.wrap.b32 	%r868, %r507, %r508, 1;
	mov.b64 	%rd1130, {%r868, %r867};
	shf.r.wrap.b32 	%r869, %r508, %r507, 8;
	shf.r.wrap.b32 	%r870, %r507, %r508, 8;
	mov.b64 	%rd1131, {%r870, %r869};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	shr.u64 	%rd1133, %rd582, 7;
	xor.b64  	%rd1134, %rd1132, %rd1133;
	add.s64 	%rd1135, %rd1129, %rd545;
	add.s64 	%rd1136, %rd1135, %rd878;
	add.s64 	%rd1137, %rd1136, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd1123;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 14;
	shf.r.wrap.b32 	%r874, %r871, %r872, 14;
	mov.b64 	%rd1138, {%r874, %r873};
	shf.r.wrap.b32 	%r875, %r872, %r871, 18;
	shf.r.wrap.b32 	%r876, %r871, %r872, 18;
	mov.b64 	%rd1139, {%r876, %r875};
	xor.b64  	%rd1140, %rd1138, %rd1139;
	shf.l.wrap.b32 	%r877, %r871, %r872, 23;
	shf.l.wrap.b32 	%r878, %r872, %r871, 23;
	mov.b64 	%rd1141, {%r878, %r877};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1049, %rd1086;
	and.b64  	%rd1144, %rd1143, %rd1123;
	xor.b64  	%rd1145, %rd1144, %rd1049;
	add.s64 	%rd1146, %rd1142, %rd1012;
	add.s64 	%rd1147, %rd1146, %rd1145;
	add.s64 	%rd1148, %rd1147, %rd1137;
	add.s64 	%rd1149, %rd1148, 5560940570517711597;
	and.b64  	%rd1150, %rd1124, %rd1087;
	or.b64  	%rd1151, %rd1124, %rd1087;
	and.b64  	%rd1152, %rd1151, %rd1050;
	or.b64  	%rd1153, %rd1152, %rd1150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1124;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 28;
	shf.r.wrap.b32 	%r882, %r879, %r880, 28;
	mov.b64 	%rd1154, {%r882, %r881};
	shf.l.wrap.b32 	%r883, %r879, %r880, 30;
	shf.l.wrap.b32 	%r884, %r880, %r879, 30;
	mov.b64 	%rd1155, {%r884, %r883};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	shf.l.wrap.b32 	%r885, %r879, %r880, 25;
	shf.l.wrap.b32 	%r886, %r880, %r879, 25;
	mov.b64 	%rd1157, {%r886, %r885};
	xor.b64  	%rd1158, %rd1156, %rd1157;
	add.s64 	%rd1159, %rd1153, %rd1158;
	add.s64 	%rd1160, %rd1149, %rd1013;
	add.s64 	%rd1161, %rd1159, %rd1149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1100;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 19;
	shf.r.wrap.b32 	%r890, %r887, %r888, 19;
	mov.b64 	%rd1162, {%r890, %r889};
	shf.l.wrap.b32 	%r891, %r887, %r888, 3;
	shf.l.wrap.b32 	%r892, %r888, %r887, 3;
	mov.b64 	%rd1163, {%r892, %r891};
	xor.b64  	%rd1164, %rd1162, %rd1163;
	shr.u64 	%rd1165, %rd1100, 6;
	xor.b64  	%rd1166, %rd1164, %rd1165;
	shf.r.wrap.b32 	%r893, %r536, %r535, 1;
	shf.r.wrap.b32 	%r894, %r535, %r536, 1;
	mov.b64 	%rd1167, {%r894, %r893};
	shf.r.wrap.b32 	%r895, %r536, %r535, 8;
	shf.r.wrap.b32 	%r896, %r535, %r536, 8;
	mov.b64 	%rd1168, {%r896, %r895};
	xor.b64  	%rd1169, %rd1167, %rd1168;
	shr.u64 	%rd1170, %rd619, 7;
	xor.b64  	%rd1171, %rd1169, %rd1170;
	add.s64 	%rd1172, %rd1166, %rd582;
	add.s64 	%rd1173, %rd1172, %rd915;
	add.s64 	%rd1174, %rd1173, %rd1171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r897,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r898}, %rd1160;
	}
	shf.r.wrap.b32 	%r899, %r898, %r897, 14;
	shf.r.wrap.b32 	%r900, %r897, %r898, 14;
	mov.b64 	%rd1175, {%r900, %r899};
	shf.r.wrap.b32 	%r901, %r898, %r897, 18;
	shf.r.wrap.b32 	%r902, %r897, %r898, 18;
	mov.b64 	%rd1176, {%r902, %r901};
	xor.b64  	%rd1177, %rd1175, %rd1176;
	shf.l.wrap.b32 	%r903, %r897, %r898, 23;
	shf.l.wrap.b32 	%r904, %r898, %r897, 23;
	mov.b64 	%rd1178, {%r904, %r903};
	xor.b64  	%rd1179, %rd1177, %rd1178;
	xor.b64  	%rd1180, %rd1086, %rd1123;
	and.b64  	%rd1181, %rd1180, %rd1160;
	xor.b64  	%rd1182, %rd1181, %rd1086;
	add.s64 	%rd1183, %rd1179, %rd1049;
	add.s64 	%rd1184, %rd1183, %rd1182;
	add.s64 	%rd1185, %rd1184, %rd1174;
	add.s64 	%rd1186, %rd1185, 5996557281743188959;
	and.b64  	%rd1187, %rd1161, %rd1124;
	or.b64  	%rd1188, %rd1161, %rd1124;
	and.b64  	%rd1189, %rd1188, %rd1087;
	or.b64  	%rd1190, %rd1189, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r905,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r906}, %rd1161;
	}
	shf.r.wrap.b32 	%r907, %r906, %r905, 28;
	shf.r.wrap.b32 	%r908, %r905, %r906, 28;
	mov.b64 	%rd1191, {%r908, %r907};
	shf.l.wrap.b32 	%r909, %r905, %r906, 30;
	shf.l.wrap.b32 	%r910, %r906, %r905, 30;
	mov.b64 	%rd1192, {%r910, %r909};
	xor.b64  	%rd1193, %rd1191, %rd1192;
	shf.l.wrap.b32 	%r911, %r905, %r906, 25;
	shf.l.wrap.b32 	%r912, %r906, %r905, 25;
	mov.b64 	%rd1194, {%r912, %r911};
	xor.b64  	%rd1195, %rd1193, %rd1194;
	add.s64 	%rd1196, %rd1190, %rd1195;
	add.s64 	%rd1197, %rd1186, %rd1050;
	add.s64 	%rd1198, %rd1196, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1137;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 19;
	shf.r.wrap.b32 	%r916, %r913, %r914, 19;
	mov.b64 	%rd1199, {%r916, %r915};
	shf.l.wrap.b32 	%r917, %r913, %r914, 3;
	shf.l.wrap.b32 	%r918, %r914, %r913, 3;
	mov.b64 	%rd1200, {%r918, %r917};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	shr.u64 	%rd1202, %rd1137, 6;
	xor.b64  	%rd1203, %rd1201, %rd1202;
	shf.r.wrap.b32 	%r919, %r564, %r563, 1;
	shf.r.wrap.b32 	%r920, %r563, %r564, 1;
	mov.b64 	%rd1204, {%r920, %r919};
	shf.r.wrap.b32 	%r921, %r564, %r563, 8;
	shf.r.wrap.b32 	%r922, %r563, %r564, 8;
	mov.b64 	%rd1205, {%r922, %r921};
	xor.b64  	%rd1206, %rd1204, %rd1205;
	shr.u64 	%rd1207, %rd656, 7;
	xor.b64  	%rd1208, %rd1206, %rd1207;
	add.s64 	%rd1209, %rd1203, %rd619;
	add.s64 	%rd1210, %rd1209, %rd952;
	add.s64 	%rd1211, %rd1210, %rd1208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r923,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r924}, %rd1197;
	}
	shf.r.wrap.b32 	%r925, %r924, %r923, 14;
	shf.r.wrap.b32 	%r926, %r923, %r924, 14;
	mov.b64 	%rd1212, {%r926, %r925};
	shf.r.wrap.b32 	%r927, %r924, %r923, 18;
	shf.r.wrap.b32 	%r928, %r923, %r924, 18;
	mov.b64 	%rd1213, {%r928, %r927};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	shf.l.wrap.b32 	%r929, %r923, %r924, 23;
	shf.l.wrap.b32 	%r930, %r924, %r923, 23;
	mov.b64 	%rd1215, {%r930, %r929};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	xor.b64  	%rd1217, %rd1123, %rd1160;
	and.b64  	%rd1218, %rd1217, %rd1197;
	xor.b64  	%rd1219, %rd1218, %rd1123;
	add.s64 	%rd1220, %rd1216, %rd1086;
	add.s64 	%rd1221, %rd1220, %rd1219;
	add.s64 	%rd1222, %rd1221, %rd1211;
	add.s64 	%rd1223, %rd1222, 7280758554555802590;
	and.b64  	%rd1224, %rd1198, %rd1161;
	or.b64  	%rd1225, %rd1198, %rd1161;
	and.b64  	%rd1226, %rd1225, %rd1124;
	or.b64  	%rd1227, %rd1226, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r931,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd1198;
	}
	shf.r.wrap.b32 	%r933, %r932, %r931, 28;
	shf.r.wrap.b32 	%r934, %r931, %r932, 28;
	mov.b64 	%rd1228, {%r934, %r933};
	shf.l.wrap.b32 	%r935, %r931, %r932, 30;
	shf.l.wrap.b32 	%r936, %r932, %r931, 30;
	mov.b64 	%rd1229, {%r936, %r935};
	xor.b64  	%rd1230, %rd1228, %rd1229;
	shf.l.wrap.b32 	%r937, %r931, %r932, 25;
	shf.l.wrap.b32 	%r938, %r932, %r931, 25;
	mov.b64 	%rd1231, {%r938, %r937};
	xor.b64  	%rd1232, %rd1230, %rd1231;
	add.s64 	%rd1233, %rd1227, %rd1232;
	add.s64 	%rd1234, %rd1223, %rd1087;
	add.s64 	%rd1235, %rd1233, %rd1223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd1174;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 19;
	shf.r.wrap.b32 	%r942, %r939, %r940, 19;
	mov.b64 	%rd1236, {%r942, %r941};
	shf.l.wrap.b32 	%r943, %r939, %r940, 3;
	shf.l.wrap.b32 	%r944, %r940, %r939, 3;
	mov.b64 	%rd1237, {%r944, %r943};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	shr.u64 	%rd1239, %rd1174, 6;
	xor.b64  	%rd1240, %rd1238, %rd1239;
	shf.r.wrap.b32 	%r945, %r592, %r591, 1;
	shf.r.wrap.b32 	%r946, %r591, %r592, 1;
	mov.b64 	%rd1241, {%r946, %r945};
	shf.r.wrap.b32 	%r947, %r592, %r591, 8;
	shf.r.wrap.b32 	%r948, %r591, %r592, 8;
	mov.b64 	%rd1242, {%r948, %r947};
	xor.b64  	%rd1243, %rd1241, %rd1242;
	shr.u64 	%rd1244, %rd693, 7;
	xor.b64  	%rd1245, %rd1243, %rd1244;
	add.s64 	%rd1246, %rd1240, %rd656;
	add.s64 	%rd1247, %rd1246, %rd989;
	add.s64 	%rd1248, %rd1247, %rd1245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd1234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd1234;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 14;
	shf.r.wrap.b32 	%r952, %r949, %r950, 14;
	mov.b64 	%rd1249, {%r952, %r951};
	shf.r.wrap.b32 	%r953, %r950, %r949, 18;
	shf.r.wrap.b32 	%r954, %r949, %r950, 18;
	mov.b64 	%rd1250, {%r954, %r953};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	shf.l.wrap.b32 	%r955, %r949, %r950, 23;
	shf.l.wrap.b32 	%r956, %r950, %r949, 23;
	mov.b64 	%rd1252, {%r956, %r955};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	xor.b64  	%rd1254, %rd1160, %rd1197;
	and.b64  	%rd1255, %rd1254, %rd1234;
	xor.b64  	%rd1256, %rd1255, %rd1160;
	add.s64 	%rd1257, %rd1253, %rd1123;
	add.s64 	%rd1258, %rd1257, %rd1256;
	add.s64 	%rd1259, %rd1258, %rd1248;
	add.s64 	%rd1260, %rd1259, 8532644243296465576;
	and.b64  	%rd1261, %rd1235, %rd1198;
	or.b64  	%rd1262, %rd1235, %rd1198;
	and.b64  	%rd1263, %rd1262, %rd1161;
	or.b64  	%rd1264, %rd1263, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1235;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 28;
	shf.r.wrap.b32 	%r960, %r957, %r958, 28;
	mov.b64 	%rd1265, {%r960, %r959};
	shf.l.wrap.b32 	%r961, %r957, %r958, 30;
	shf.l.wrap.b32 	%r962, %r958, %r957, 30;
	mov.b64 	%rd1266, {%r962, %r961};
	xor.b64  	%rd1267, %rd1265, %rd1266;
	shf.l.wrap.b32 	%r963, %r957, %r958, 25;
	shf.l.wrap.b32 	%r964, %r958, %r957, 25;
	mov.b64 	%rd1268, {%r964, %r963};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	add.s64 	%rd1270, %rd1264, %rd1269;
	add.s64 	%rd1271, %rd1260, %rd1124;
	add.s64 	%rd1272, %rd1270, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1211;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 19;
	shf.r.wrap.b32 	%r968, %r965, %r966, 19;
	mov.b64 	%rd1273, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 3;
	shf.l.wrap.b32 	%r970, %r966, %r965, 3;
	mov.b64 	%rd1274, {%r970, %r969};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	shr.u64 	%rd1276, %rd1211, 6;
	xor.b64  	%rd1277, %rd1275, %rd1276;
	shf.r.wrap.b32 	%r971, %r620, %r619, 1;
	shf.r.wrap.b32 	%r972, %r619, %r620, 1;
	mov.b64 	%rd1278, {%r972, %r971};
	shf.r.wrap.b32 	%r973, %r620, %r619, 8;
	shf.r.wrap.b32 	%r974, %r619, %r620, 8;
	mov.b64 	%rd1279, {%r974, %r973};
	xor.b64  	%rd1280, %rd1278, %rd1279;
	shr.u64 	%rd1281, %rd730, 7;
	xor.b64  	%rd1282, %rd1280, %rd1281;
	add.s64 	%rd1283, %rd1277, %rd693;
	add.s64 	%rd1284, %rd1283, %rd1026;
	add.s64 	%rd1285, %rd1284, %rd1282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1271;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 14;
	shf.r.wrap.b32 	%r978, %r975, %r976, 14;
	mov.b64 	%rd1286, {%r978, %r977};
	shf.r.wrap.b32 	%r979, %r976, %r975, 18;
	shf.r.wrap.b32 	%r980, %r975, %r976, 18;
	mov.b64 	%rd1287, {%r980, %r979};
	xor.b64  	%rd1288, %rd1286, %rd1287;
	shf.l.wrap.b32 	%r981, %r975, %r976, 23;
	shf.l.wrap.b32 	%r982, %r976, %r975, 23;
	mov.b64 	%rd1289, {%r982, %r981};
	xor.b64  	%rd1290, %rd1288, %rd1289;
	xor.b64  	%rd1291, %rd1197, %rd1234;
	and.b64  	%rd1292, %rd1291, %rd1271;
	xor.b64  	%rd1293, %rd1292, %rd1197;
	add.s64 	%rd1294, %rd1290, %rd1160;
	add.s64 	%rd1295, %rd1294, %rd1293;
	add.s64 	%rd1296, %rd1295, %rd1285;
	add.s64 	%rd1297, %rd1296, -9096487096722542874;
	and.b64  	%rd1298, %rd1272, %rd1235;
	or.b64  	%rd1299, %rd1272, %rd1235;
	and.b64  	%rd1300, %rd1299, %rd1198;
	or.b64  	%rd1301, %rd1300, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1272;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 28;
	shf.r.wrap.b32 	%r986, %r983, %r984, 28;
	mov.b64 	%rd1302, {%r986, %r985};
	shf.l.wrap.b32 	%r987, %r983, %r984, 30;
	shf.l.wrap.b32 	%r988, %r984, %r983, 30;
	mov.b64 	%rd1303, {%r988, %r987};
	xor.b64  	%rd1304, %rd1302, %rd1303;
	shf.l.wrap.b32 	%r989, %r983, %r984, 25;
	shf.l.wrap.b32 	%r990, %r984, %r983, 25;
	mov.b64 	%rd1305, {%r990, %r989};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	add.s64 	%rd1307, %rd1301, %rd1306;
	add.s64 	%rd1308, %rd1297, %rd1161;
	add.s64 	%rd1309, %rd1307, %rd1297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1248;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 19;
	shf.r.wrap.b32 	%r994, %r991, %r992, 19;
	mov.b64 	%rd1310, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 3;
	shf.l.wrap.b32 	%r996, %r992, %r991, 3;
	mov.b64 	%rd1311, {%r996, %r995};
	xor.b64  	%rd1312, %rd1310, %rd1311;
	shr.u64 	%rd1313, %rd1248, 6;
	xor.b64  	%rd1314, %rd1312, %rd1313;
	shf.r.wrap.b32 	%r997, %r648, %r647, 1;
	shf.r.wrap.b32 	%r998, %r647, %r648, 1;
	mov.b64 	%rd1315, {%r998, %r997};
	shf.r.wrap.b32 	%r999, %r648, %r647, 8;
	shf.r.wrap.b32 	%r1000, %r647, %r648, 8;
	mov.b64 	%rd1316, {%r1000, %r999};
	xor.b64  	%rd1317, %rd1315, %rd1316;
	shr.u64 	%rd1318, %rd767, 7;
	xor.b64  	%rd1319, %rd1317, %rd1318;
	add.s64 	%rd1320, %rd1314, %rd730;
	add.s64 	%rd1321, %rd1320, %rd1063;
	add.s64 	%rd1322, %rd1321, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1001,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1002}, %rd1308;
	}
	shf.r.wrap.b32 	%r1003, %r1002, %r1001, 14;
	shf.r.wrap.b32 	%r1004, %r1001, %r1002, 14;
	mov.b64 	%rd1323, {%r1004, %r1003};
	shf.r.wrap.b32 	%r1005, %r1002, %r1001, 18;
	shf.r.wrap.b32 	%r1006, %r1001, %r1002, 18;
	mov.b64 	%rd1324, {%r1006, %r1005};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	shf.l.wrap.b32 	%r1007, %r1001, %r1002, 23;
	shf.l.wrap.b32 	%r1008, %r1002, %r1001, 23;
	mov.b64 	%rd1326, {%r1008, %r1007};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1234, %rd1271;
	and.b64  	%rd1329, %rd1328, %rd1308;
	xor.b64  	%rd1330, %rd1329, %rd1234;
	add.s64 	%rd1331, %rd1327, %rd1197;
	add.s64 	%rd1332, %rd1331, %rd1330;
	add.s64 	%rd1333, %rd1332, %rd1322;
	add.s64 	%rd1334, %rd1333, -7894198246740708037;
	and.b64  	%rd1335, %rd1309, %rd1272;
	or.b64  	%rd1336, %rd1309, %rd1272;
	and.b64  	%rd1337, %rd1336, %rd1235;
	or.b64  	%rd1338, %rd1337, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd1309;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 28;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 28;
	mov.b64 	%rd1339, {%r1012, %r1011};
	shf.l.wrap.b32 	%r1013, %r1009, %r1010, 30;
	shf.l.wrap.b32 	%r1014, %r1010, %r1009, 30;
	mov.b64 	%rd1340, {%r1014, %r1013};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	shf.l.wrap.b32 	%r1015, %r1009, %r1010, 25;
	shf.l.wrap.b32 	%r1016, %r1010, %r1009, 25;
	mov.b64 	%rd1342, {%r1016, %r1015};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	add.s64 	%rd1344, %rd1338, %rd1343;
	add.s64 	%rd1345, %rd1334, %rd1198;
	add.s64 	%rd1346, %rd1344, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd1285;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 19;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 19;
	mov.b64 	%rd1347, {%r1020, %r1019};
	shf.l.wrap.b32 	%r1021, %r1017, %r1018, 3;
	shf.l.wrap.b32 	%r1022, %r1018, %r1017, 3;
	mov.b64 	%rd1348, {%r1022, %r1021};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	shr.u64 	%rd1350, %rd1285, 6;
	xor.b64  	%rd1351, %rd1349, %rd1350;
	shf.r.wrap.b32 	%r1023, %r676, %r675, 1;
	shf.r.wrap.b32 	%r1024, %r675, %r676, 1;
	mov.b64 	%rd1352, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r676, %r675, 8;
	shf.r.wrap.b32 	%r1026, %r675, %r676, 8;
	mov.b64 	%rd1353, {%r1026, %r1025};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	shr.u64 	%rd1355, %rd804, 7;
	xor.b64  	%rd1356, %rd1354, %rd1355;
	add.s64 	%rd1357, %rd1351, %rd767;
	add.s64 	%rd1358, %rd1357, %rd1100;
	add.s64 	%rd1359, %rd1358, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd1345;
	}
	shf.r.wrap.b32 	%r1029, %r1028, %r1027, 14;
	shf.r.wrap.b32 	%r1030, %r1027, %r1028, 14;
	mov.b64 	%rd1360, {%r1030, %r1029};
	shf.r.wrap.b32 	%r1031, %r1028, %r1027, 18;
	shf.r.wrap.b32 	%r1032, %r1027, %r1028, 18;
	mov.b64 	%rd1361, {%r1032, %r1031};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	shf.l.wrap.b32 	%r1033, %r1027, %r1028, 23;
	shf.l.wrap.b32 	%r1034, %r1028, %r1027, 23;
	mov.b64 	%rd1363, {%r1034, %r1033};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	xor.b64  	%rd1365, %rd1271, %rd1308;
	and.b64  	%rd1366, %rd1365, %rd1345;
	xor.b64  	%rd1367, %rd1366, %rd1271;
	add.s64 	%rd1368, %rd1364, %rd1234;
	add.s64 	%rd1369, %rd1368, %rd1367;
	add.s64 	%rd1370, %rd1369, %rd1359;
	add.s64 	%rd1371, %rd1370, -6719396339535248540;
	and.b64  	%rd1372, %rd1346, %rd1309;
	or.b64  	%rd1373, %rd1346, %rd1309;
	and.b64  	%rd1374, %rd1373, %rd1272;
	or.b64  	%rd1375, %rd1374, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd1346;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 28;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 28;
	mov.b64 	%rd1376, {%r1038, %r1037};
	shf.l.wrap.b32 	%r1039, %r1035, %r1036, 30;
	shf.l.wrap.b32 	%r1040, %r1036, %r1035, 30;
	mov.b64 	%rd1377, {%r1040, %r1039};
	xor.b64  	%rd1378, %rd1376, %rd1377;
	shf.l.wrap.b32 	%r1041, %r1035, %r1036, 25;
	shf.l.wrap.b32 	%r1042, %r1036, %r1035, 25;
	mov.b64 	%rd1379, {%r1042, %r1041};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	add.s64 	%rd1381, %rd1375, %rd1380;
	add.s64 	%rd1382, %rd1371, %rd1235;
	add.s64 	%rd1383, %rd1381, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd1322;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 19;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 19;
	mov.b64 	%rd1384, {%r1046, %r1045};
	shf.l.wrap.b32 	%r1047, %r1043, %r1044, 3;
	shf.l.wrap.b32 	%r1048, %r1044, %r1043, 3;
	mov.b64 	%rd1385, {%r1048, %r1047};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	shr.u64 	%rd1387, %rd1322, 6;
	xor.b64  	%rd1388, %rd1386, %rd1387;
	shf.r.wrap.b32 	%r1049, %r704, %r703, 1;
	shf.r.wrap.b32 	%r1050, %r703, %r704, 1;
	mov.b64 	%rd1389, {%r1050, %r1049};
	shf.r.wrap.b32 	%r1051, %r704, %r703, 8;
	shf.r.wrap.b32 	%r1052, %r703, %r704, 8;
	mov.b64 	%rd1390, {%r1052, %r1051};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	shr.u64 	%rd1392, %rd841, 7;
	xor.b64  	%rd1393, %rd1391, %rd1392;
	add.s64 	%rd1394, %rd1388, %rd804;
	add.s64 	%rd1395, %rd1394, %rd1137;
	add.s64 	%rd1396, %rd1395, %rd1393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1382;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 14;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 14;
	mov.b64 	%rd1397, {%r1056, %r1055};
	shf.r.wrap.b32 	%r1057, %r1054, %r1053, 18;
	shf.r.wrap.b32 	%r1058, %r1053, %r1054, 18;
	mov.b64 	%rd1398, {%r1058, %r1057};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	shf.l.wrap.b32 	%r1059, %r1053, %r1054, 23;
	shf.l.wrap.b32 	%r1060, %r1054, %r1053, 23;
	mov.b64 	%rd1400, {%r1060, %r1059};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd1308, %rd1345;
	and.b64  	%rd1403, %rd1402, %rd1382;
	xor.b64  	%rd1404, %rd1403, %rd1308;
	add.s64 	%rd1405, %rd1401, %rd1271;
	add.s64 	%rd1406, %rd1405, %rd1404;
	add.s64 	%rd1407, %rd1406, %rd1396;
	add.s64 	%rd1408, %rd1407, -6333637450476146687;
	and.b64  	%rd1409, %rd1383, %rd1346;
	or.b64  	%rd1410, %rd1383, %rd1346;
	and.b64  	%rd1411, %rd1410, %rd1309;
	or.b64  	%rd1412, %rd1411, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd1383;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 28;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 28;
	mov.b64 	%rd1413, {%r1064, %r1063};
	shf.l.wrap.b32 	%r1065, %r1061, %r1062, 30;
	shf.l.wrap.b32 	%r1066, %r1062, %r1061, 30;
	mov.b64 	%rd1414, {%r1066, %r1065};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 25;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 25;
	mov.b64 	%rd1416, {%r1068, %r1067};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	add.s64 	%rd1418, %rd1412, %rd1417;
	add.s64 	%rd1419, %rd1408, %rd1272;
	add.s64 	%rd1420, %rd1418, %rd1408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1359;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 19;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 19;
	mov.b64 	%rd1421, {%r1072, %r1071};
	shf.l.wrap.b32 	%r1073, %r1069, %r1070, 3;
	shf.l.wrap.b32 	%r1074, %r1070, %r1069, 3;
	mov.b64 	%rd1422, {%r1074, %r1073};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	shr.u64 	%rd1424, %rd1359, 6;
	xor.b64  	%rd1425, %rd1423, %rd1424;
	shf.r.wrap.b32 	%r1075, %r732, %r731, 1;
	shf.r.wrap.b32 	%r1076, %r731, %r732, 1;
	mov.b64 	%rd1426, {%r1076, %r1075};
	shf.r.wrap.b32 	%r1077, %r732, %r731, 8;
	shf.r.wrap.b32 	%r1078, %r731, %r732, 8;
	mov.b64 	%rd1427, {%r1078, %r1077};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	shr.u64 	%rd1429, %rd878, 7;
	xor.b64  	%rd1430, %rd1428, %rd1429;
	add.s64 	%rd1431, %rd1425, %rd841;
	add.s64 	%rd1432, %rd1431, %rd1174;
	add.s64 	%rd1433, %rd1432, %rd1430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1419;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 14;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 14;
	mov.b64 	%rd1434, {%r1082, %r1081};
	shf.r.wrap.b32 	%r1083, %r1080, %r1079, 18;
	shf.r.wrap.b32 	%r1084, %r1079, %r1080, 18;
	mov.b64 	%rd1435, {%r1084, %r1083};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	shf.l.wrap.b32 	%r1085, %r1079, %r1080, 23;
	shf.l.wrap.b32 	%r1086, %r1080, %r1079, 23;
	mov.b64 	%rd1437, {%r1086, %r1085};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	xor.b64  	%rd1439, %rd1345, %rd1382;
	and.b64  	%rd1440, %rd1439, %rd1419;
	xor.b64  	%rd1441, %rd1440, %rd1345;
	add.s64 	%rd1442, %rd1438, %rd1308;
	add.s64 	%rd1443, %rd1442, %rd1441;
	add.s64 	%rd1444, %rd1443, %rd1433;
	add.s64 	%rd1445, %rd1444, -4446306890439682159;
	and.b64  	%rd1446, %rd1420, %rd1383;
	or.b64  	%rd1447, %rd1420, %rd1383;
	and.b64  	%rd1448, %rd1447, %rd1346;
	or.b64  	%rd1449, %rd1448, %rd1446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1420;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 28;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 28;
	mov.b64 	%rd1450, {%r1090, %r1089};
	shf.l.wrap.b32 	%r1091, %r1087, %r1088, 30;
	shf.l.wrap.b32 	%r1092, %r1088, %r1087, 30;
	mov.b64 	%rd1451, {%r1092, %r1091};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	shf.l.wrap.b32 	%r1093, %r1087, %r1088, 25;
	shf.l.wrap.b32 	%r1094, %r1088, %r1087, 25;
	mov.b64 	%rd1453, {%r1094, %r1093};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	add.s64 	%rd1455, %rd1449, %rd1454;
	add.s64 	%rd1456, %rd1445, %rd1309;
	add.s64 	%rd1457, %rd1455, %rd1445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1396;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 19;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 19;
	mov.b64 	%rd1458, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 3;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 3;
	mov.b64 	%rd1459, {%r1100, %r1099};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	shr.u64 	%rd1461, %rd1396, 6;
	xor.b64  	%rd1462, %rd1460, %rd1461;
	shf.r.wrap.b32 	%r1101, %r758, %r757, 1;
	shf.r.wrap.b32 	%r1102, %r757, %r758, 1;
	mov.b64 	%rd1463, {%r1102, %r1101};
	shf.r.wrap.b32 	%r1103, %r758, %r757, 8;
	shf.r.wrap.b32 	%r1104, %r757, %r758, 8;
	mov.b64 	%rd1464, {%r1104, %r1103};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	shr.u64 	%rd1466, %rd915, 7;
	xor.b64  	%rd1467, %rd1465, %rd1466;
	add.s64 	%rd1468, %rd1462, %rd878;
	add.s64 	%rd1469, %rd1468, %rd1211;
	add.s64 	%rd1470, %rd1469, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1456;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 14;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 14;
	mov.b64 	%rd1471, {%r1108, %r1107};
	shf.r.wrap.b32 	%r1109, %r1106, %r1105, 18;
	shf.r.wrap.b32 	%r1110, %r1105, %r1106, 18;
	mov.b64 	%rd1472, {%r1110, %r1109};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	shf.l.wrap.b32 	%r1111, %r1105, %r1106, 23;
	shf.l.wrap.b32 	%r1112, %r1106, %r1105, 23;
	mov.b64 	%rd1474, {%r1112, %r1111};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	xor.b64  	%rd1476, %rd1382, %rd1419;
	and.b64  	%rd1477, %rd1476, %rd1456;
	xor.b64  	%rd1478, %rd1477, %rd1382;
	add.s64 	%rd1479, %rd1475, %rd1345;
	add.s64 	%rd1480, %rd1479, %rd1478;
	add.s64 	%rd1481, %rd1480, %rd1470;
	add.s64 	%rd1482, %rd1481, -4076793802049405392;
	and.b64  	%rd1483, %rd1457, %rd1420;
	or.b64  	%rd1484, %rd1457, %rd1420;
	and.b64  	%rd1485, %rd1484, %rd1383;
	or.b64  	%rd1486, %rd1485, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd1457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd1457;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 28;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 28;
	mov.b64 	%rd1487, {%r1116, %r1115};
	shf.l.wrap.b32 	%r1117, %r1113, %r1114, 30;
	shf.l.wrap.b32 	%r1118, %r1114, %r1113, 30;
	mov.b64 	%rd1488, {%r1118, %r1117};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	shf.l.wrap.b32 	%r1119, %r1113, %r1114, 25;
	shf.l.wrap.b32 	%r1120, %r1114, %r1113, 25;
	mov.b64 	%rd1490, {%r1120, %r1119};
	xor.b64  	%rd1491, %rd1489, %rd1490;
	add.s64 	%rd1492, %rd1486, %rd1491;
	add.s64 	%rd1493, %rd1482, %rd1346;
	add.s64 	%rd1494, %rd1492, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd1433;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 19;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 19;
	mov.b64 	%rd1495, {%r1124, %r1123};
	shf.l.wrap.b32 	%r1125, %r1121, %r1122, 3;
	shf.l.wrap.b32 	%r1126, %r1122, %r1121, 3;
	mov.b64 	%rd1496, {%r1126, %r1125};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	shr.u64 	%rd1498, %rd1433, 6;
	xor.b64  	%rd1499, %rd1497, %rd1498;
	shf.r.wrap.b32 	%r1127, %r784, %r783, 1;
	shf.r.wrap.b32 	%r1128, %r783, %r784, 1;
	mov.b64 	%rd1500, {%r1128, %r1127};
	shf.r.wrap.b32 	%r1129, %r784, %r783, 8;
	shf.r.wrap.b32 	%r1130, %r783, %r784, 8;
	mov.b64 	%rd1501, {%r1130, %r1129};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	shr.u64 	%rd1503, %rd952, 7;
	xor.b64  	%rd1504, %rd1502, %rd1503;
	add.s64 	%rd1505, %rd1499, %rd915;
	add.s64 	%rd1506, %rd1505, %rd1248;
	add.s64 	%rd1507, %rd1506, %rd1504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd1493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd1493;
	}
	shf.r.wrap.b32 	%r1133, %r1132, %r1131, 14;
	shf.r.wrap.b32 	%r1134, %r1131, %r1132, 14;
	mov.b64 	%rd1508, {%r1134, %r1133};
	shf.r.wrap.b32 	%r1135, %r1132, %r1131, 18;
	shf.r.wrap.b32 	%r1136, %r1131, %r1132, 18;
	mov.b64 	%rd1509, {%r1136, %r1135};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	shf.l.wrap.b32 	%r1137, %r1131, %r1132, 23;
	shf.l.wrap.b32 	%r1138, %r1132, %r1131, 23;
	mov.b64 	%rd1511, {%r1138, %r1137};
	xor.b64  	%rd1512, %rd1510, %rd1511;
	xor.b64  	%rd1513, %rd1419, %rd1456;
	and.b64  	%rd1514, %rd1513, %rd1493;
	xor.b64  	%rd1515, %rd1514, %rd1419;
	add.s64 	%rd1516, %rd1512, %rd1382;
	add.s64 	%rd1517, %rd1516, %rd1515;
	add.s64 	%rd1518, %rd1517, %rd1507;
	add.s64 	%rd1519, %rd1518, -3345356375505022440;
	and.b64  	%rd1520, %rd1494, %rd1457;
	or.b64  	%rd1521, %rd1494, %rd1457;
	and.b64  	%rd1522, %rd1521, %rd1420;
	or.b64  	%rd1523, %rd1522, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd1494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1494;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 28;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 28;
	mov.b64 	%rd1524, {%r1142, %r1141};
	shf.l.wrap.b32 	%r1143, %r1139, %r1140, 30;
	shf.l.wrap.b32 	%r1144, %r1140, %r1139, 30;
	mov.b64 	%rd1525, {%r1144, %r1143};
	xor.b64  	%rd1526, %rd1524, %rd1525;
	shf.l.wrap.b32 	%r1145, %r1139, %r1140, 25;
	shf.l.wrap.b32 	%r1146, %r1140, %r1139, 25;
	mov.b64 	%rd1527, {%r1146, %r1145};
	xor.b64  	%rd1528, %rd1526, %rd1527;
	add.s64 	%rd1529, %rd1523, %rd1528;
	add.s64 	%rd1530, %rd1519, %rd1383;
	add.s64 	%rd1531, %rd1529, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd1470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd1470;
	}
	shf.r.wrap.b32 	%r1149, %r1148, %r1147, 19;
	shf.r.wrap.b32 	%r1150, %r1147, %r1148, 19;
	mov.b64 	%rd1532, {%r1150, %r1149};
	shf.l.wrap.b32 	%r1151, %r1147, %r1148, 3;
	shf.l.wrap.b32 	%r1152, %r1148, %r1147, 3;
	mov.b64 	%rd1533, {%r1152, %r1151};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	shr.u64 	%rd1535, %rd1470, 6;
	xor.b64  	%rd1536, %rd1534, %rd1535;
	shf.r.wrap.b32 	%r1153, %r810, %r809, 1;
	shf.r.wrap.b32 	%r1154, %r809, %r810, 1;
	mov.b64 	%rd1537, {%r1154, %r1153};
	shf.r.wrap.b32 	%r1155, %r810, %r809, 8;
	shf.r.wrap.b32 	%r1156, %r809, %r810, 8;
	mov.b64 	%rd1538, {%r1156, %r1155};
	xor.b64  	%rd1539, %rd1537, %rd1538;
	shr.u64 	%rd1540, %rd989, 7;
	xor.b64  	%rd1541, %rd1539, %rd1540;
	add.s64 	%rd1542, %rd1536, %rd952;
	add.s64 	%rd1543, %rd1542, %rd1285;
	add.s64 	%rd1544, %rd1543, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd1530;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 14;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 14;
	mov.b64 	%rd1545, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r1158, %r1157, 18;
	shf.r.wrap.b32 	%r1162, %r1157, %r1158, 18;
	mov.b64 	%rd1546, {%r1162, %r1161};
	xor.b64  	%rd1547, %rd1545, %rd1546;
	shf.l.wrap.b32 	%r1163, %r1157, %r1158, 23;
	shf.l.wrap.b32 	%r1164, %r1158, %r1157, 23;
	mov.b64 	%rd1548, {%r1164, %r1163};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	xor.b64  	%rd1550, %rd1456, %rd1493;
	and.b64  	%rd1551, %rd1550, %rd1530;
	xor.b64  	%rd1552, %rd1551, %rd1456;
	add.s64 	%rd1553, %rd1549, %rd1419;
	add.s64 	%rd1554, %rd1553, %rd1552;
	add.s64 	%rd1555, %rd1554, %rd1544;
	add.s64 	%rd1556, %rd1555, -2983346525034927856;
	and.b64  	%rd1557, %rd1531, %rd1494;
	or.b64  	%rd1558, %rd1531, %rd1494;
	and.b64  	%rd1559, %rd1558, %rd1457;
	or.b64  	%rd1560, %rd1559, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1531;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 28;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 28;
	mov.b64 	%rd1561, {%r1168, %r1167};
	shf.l.wrap.b32 	%r1169, %r1165, %r1166, 30;
	shf.l.wrap.b32 	%r1170, %r1166, %r1165, 30;
	mov.b64 	%rd1562, {%r1170, %r1169};
	xor.b64  	%rd1563, %rd1561, %rd1562;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 25;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 25;
	mov.b64 	%rd1564, {%r1172, %r1171};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	add.s64 	%rd1566, %rd1560, %rd1565;
	add.s64 	%rd1567, %rd1556, %rd1420;
	add.s64 	%rd1568, %rd1566, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1507;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 19;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 19;
	mov.b64 	%rd1569, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 3;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 3;
	mov.b64 	%rd1570, {%r1178, %r1177};
	xor.b64  	%rd1571, %rd1569, %rd1570;
	shr.u64 	%rd1572, %rd1507, 6;
	xor.b64  	%rd1573, %rd1571, %rd1572;
	shf.r.wrap.b32 	%r1179, %r836, %r835, 1;
	shf.r.wrap.b32 	%r1180, %r835, %r836, 1;
	mov.b64 	%rd1574, {%r1180, %r1179};
	shf.r.wrap.b32 	%r1181, %r836, %r835, 8;
	shf.r.wrap.b32 	%r1182, %r835, %r836, 8;
	mov.b64 	%rd1575, {%r1182, %r1181};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	shr.u64 	%rd1577, %rd1026, 7;
	xor.b64  	%rd1578, %rd1576, %rd1577;
	add.s64 	%rd1579, %rd1573, %rd989;
	add.s64 	%rd1580, %rd1579, %rd1322;
	add.s64 	%rd1581, %rd1580, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1183,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1184}, %rd1567;
	}
	shf.r.wrap.b32 	%r1185, %r1184, %r1183, 14;
	shf.r.wrap.b32 	%r1186, %r1183, %r1184, 14;
	mov.b64 	%rd1582, {%r1186, %r1185};
	shf.r.wrap.b32 	%r1187, %r1184, %r1183, 18;
	shf.r.wrap.b32 	%r1188, %r1183, %r1184, 18;
	mov.b64 	%rd1583, {%r1188, %r1187};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	shf.l.wrap.b32 	%r1189, %r1183, %r1184, 23;
	shf.l.wrap.b32 	%r1190, %r1184, %r1183, 23;
	mov.b64 	%rd1585, {%r1190, %r1189};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1493, %rd1530;
	and.b64  	%rd1588, %rd1587, %rd1567;
	xor.b64  	%rd1589, %rd1588, %rd1493;
	add.s64 	%rd1590, %rd1586, %rd1456;
	add.s64 	%rd1591, %rd1590, %rd1589;
	add.s64 	%rd1592, %rd1591, %rd1581;
	add.s64 	%rd1593, %rd1592, -860691631967231958;
	and.b64  	%rd1594, %rd1568, %rd1531;
	or.b64  	%rd1595, %rd1568, %rd1531;
	and.b64  	%rd1596, %rd1595, %rd1494;
	or.b64  	%rd1597, %rd1596, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1568;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 28;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 28;
	mov.b64 	%rd1598, {%r1194, %r1193};
	shf.l.wrap.b32 	%r1195, %r1191, %r1192, 30;
	shf.l.wrap.b32 	%r1196, %r1192, %r1191, 30;
	mov.b64 	%rd1599, {%r1196, %r1195};
	xor.b64  	%rd1600, %rd1598, %rd1599;
	shf.l.wrap.b32 	%r1197, %r1191, %r1192, 25;
	shf.l.wrap.b32 	%r1198, %r1192, %r1191, 25;
	mov.b64 	%rd1601, {%r1198, %r1197};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	add.s64 	%rd1603, %rd1597, %rd1602;
	add.s64 	%rd1604, %rd1593, %rd1457;
	add.s64 	%rd1605, %rd1603, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1544;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 19;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 19;
	mov.b64 	%rd1606, {%r1202, %r1201};
	shf.l.wrap.b32 	%r1203, %r1199, %r1200, 3;
	shf.l.wrap.b32 	%r1204, %r1200, %r1199, 3;
	mov.b64 	%rd1607, {%r1204, %r1203};
	xor.b64  	%rd1608, %rd1606, %rd1607;
	shr.u64 	%rd1609, %rd1544, 6;
	xor.b64  	%rd1610, %rd1608, %rd1609;
	shf.r.wrap.b32 	%r1205, %r862, %r861, 1;
	shf.r.wrap.b32 	%r1206, %r861, %r862, 1;
	mov.b64 	%rd1611, {%r1206, %r1205};
	shf.r.wrap.b32 	%r1207, %r862, %r861, 8;
	shf.r.wrap.b32 	%r1208, %r861, %r862, 8;
	mov.b64 	%rd1612, {%r1208, %r1207};
	xor.b64  	%rd1613, %rd1611, %rd1612;
	shr.u64 	%rd1614, %rd1063, 7;
	xor.b64  	%rd1615, %rd1613, %rd1614;
	add.s64 	%rd1616, %rd1610, %rd1026;
	add.s64 	%rd1617, %rd1616, %rd1359;
	add.s64 	%rd1618, %rd1617, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1210}, %rd1604;
	}
	shf.r.wrap.b32 	%r1211, %r1210, %r1209, 14;
	shf.r.wrap.b32 	%r1212, %r1209, %r1210, 14;
	mov.b64 	%rd1619, {%r1212, %r1211};
	shf.r.wrap.b32 	%r1213, %r1210, %r1209, 18;
	shf.r.wrap.b32 	%r1214, %r1209, %r1210, 18;
	mov.b64 	%rd1620, {%r1214, %r1213};
	xor.b64  	%rd1621, %rd1619, %rd1620;
	shf.l.wrap.b32 	%r1215, %r1209, %r1210, 23;
	shf.l.wrap.b32 	%r1216, %r1210, %r1209, 23;
	mov.b64 	%rd1622, {%r1216, %r1215};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	xor.b64  	%rd1624, %rd1530, %rd1567;
	and.b64  	%rd1625, %rd1624, %rd1604;
	xor.b64  	%rd1626, %rd1625, %rd1530;
	add.s64 	%rd1627, %rd1623, %rd1493;
	add.s64 	%rd1628, %rd1627, %rd1626;
	add.s64 	%rd1629, %rd1628, %rd1618;
	add.s64 	%rd1630, %rd1629, 1182934255886127544;
	and.b64  	%rd1631, %rd1605, %rd1568;
	or.b64  	%rd1632, %rd1605, %rd1568;
	and.b64  	%rd1633, %rd1632, %rd1531;
	or.b64  	%rd1634, %rd1633, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd1605;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 28;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 28;
	mov.b64 	%rd1635, {%r1220, %r1219};
	shf.l.wrap.b32 	%r1221, %r1217, %r1218, 30;
	shf.l.wrap.b32 	%r1222, %r1218, %r1217, 30;
	mov.b64 	%rd1636, {%r1222, %r1221};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	shf.l.wrap.b32 	%r1223, %r1217, %r1218, 25;
	shf.l.wrap.b32 	%r1224, %r1218, %r1217, 25;
	mov.b64 	%rd1638, {%r1224, %r1223};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	add.s64 	%rd1640, %rd1634, %rd1639;
	add.s64 	%rd1641, %rd1630, %rd1494;
	add.s64 	%rd1642, %rd1640, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1581;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 19;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 19;
	mov.b64 	%rd1643, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 3;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 3;
	mov.b64 	%rd1644, {%r1230, %r1229};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	shr.u64 	%rd1646, %rd1581, 6;
	xor.b64  	%rd1647, %rd1645, %rd1646;
	shf.r.wrap.b32 	%r1231, %r888, %r887, 1;
	shf.r.wrap.b32 	%r1232, %r887, %r888, 1;
	mov.b64 	%rd1648, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r888, %r887, 8;
	shf.r.wrap.b32 	%r1234, %r887, %r888, 8;
	mov.b64 	%rd1649, {%r1234, %r1233};
	xor.b64  	%rd1650, %rd1648, %rd1649;
	shr.u64 	%rd1651, %rd1100, 7;
	xor.b64  	%rd1652, %rd1650, %rd1651;
	add.s64 	%rd1653, %rd1647, %rd1063;
	add.s64 	%rd1654, %rd1653, %rd1396;
	add.s64 	%rd1655, %rd1654, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1235,%dummy}, %rd1641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd1641;
	}
	shf.r.wrap.b32 	%r1237, %r1236, %r1235, 14;
	shf.r.wrap.b32 	%r1238, %r1235, %r1236, 14;
	mov.b64 	%rd1656, {%r1238, %r1237};
	shf.r.wrap.b32 	%r1239, %r1236, %r1235, 18;
	shf.r.wrap.b32 	%r1240, %r1235, %r1236, 18;
	mov.b64 	%rd1657, {%r1240, %r1239};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	shf.l.wrap.b32 	%r1241, %r1235, %r1236, 23;
	shf.l.wrap.b32 	%r1242, %r1236, %r1235, 23;
	mov.b64 	%rd1659, {%r1242, %r1241};
	xor.b64  	%rd1660, %rd1658, %rd1659;
	xor.b64  	%rd1661, %rd1567, %rd1604;
	and.b64  	%rd1662, %rd1661, %rd1641;
	xor.b64  	%rd1663, %rd1662, %rd1567;
	add.s64 	%rd1664, %rd1660, %rd1530;
	add.s64 	%rd1665, %rd1664, %rd1663;
	add.s64 	%rd1666, %rd1665, %rd1655;
	add.s64 	%rd1667, %rd1666, 1847814050463011016;
	and.b64  	%rd1668, %rd1642, %rd1605;
	or.b64  	%rd1669, %rd1642, %rd1605;
	and.b64  	%rd1670, %rd1669, %rd1568;
	or.b64  	%rd1671, %rd1670, %rd1668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1243,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd1642;
	}
	shf.r.wrap.b32 	%r1245, %r1244, %r1243, 28;
	shf.r.wrap.b32 	%r1246, %r1243, %r1244, 28;
	mov.b64 	%rd1672, {%r1246, %r1245};
	shf.l.wrap.b32 	%r1247, %r1243, %r1244, 30;
	shf.l.wrap.b32 	%r1248, %r1244, %r1243, 30;
	mov.b64 	%rd1673, {%r1248, %r1247};
	xor.b64  	%rd1674, %rd1672, %rd1673;
	shf.l.wrap.b32 	%r1249, %r1243, %r1244, 25;
	shf.l.wrap.b32 	%r1250, %r1244, %r1243, 25;
	mov.b64 	%rd1675, {%r1250, %r1249};
	xor.b64  	%rd1676, %rd1674, %rd1675;
	add.s64 	%rd1677, %rd1671, %rd1676;
	add.s64 	%rd1678, %rd1667, %rd1531;
	add.s64 	%rd1679, %rd1677, %rd1667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1251,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1252}, %rd1618;
	}
	shf.r.wrap.b32 	%r1253, %r1252, %r1251, 19;
	shf.r.wrap.b32 	%r1254, %r1251, %r1252, 19;
	mov.b64 	%rd1680, {%r1254, %r1253};
	shf.l.wrap.b32 	%r1255, %r1251, %r1252, 3;
	shf.l.wrap.b32 	%r1256, %r1252, %r1251, 3;
	mov.b64 	%rd1681, {%r1256, %r1255};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	shr.u64 	%rd1683, %rd1618, 6;
	xor.b64  	%rd1684, %rd1682, %rd1683;
	shf.r.wrap.b32 	%r1257, %r914, %r913, 1;
	shf.r.wrap.b32 	%r1258, %r913, %r914, 1;
	mov.b64 	%rd1685, {%r1258, %r1257};
	shf.r.wrap.b32 	%r1259, %r914, %r913, 8;
	shf.r.wrap.b32 	%r1260, %r913, %r914, 8;
	mov.b64 	%rd1686, {%r1260, %r1259};
	xor.b64  	%rd1687, %rd1685, %rd1686;
	shr.u64 	%rd1688, %rd1137, 7;
	xor.b64  	%rd1689, %rd1687, %rd1688;
	add.s64 	%rd1690, %rd1684, %rd1100;
	add.s64 	%rd1691, %rd1690, %rd1433;
	add.s64 	%rd1692, %rd1691, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1678;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 14;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 14;
	mov.b64 	%rd1693, {%r1264, %r1263};
	shf.r.wrap.b32 	%r1265, %r1262, %r1261, 18;
	shf.r.wrap.b32 	%r1266, %r1261, %r1262, 18;
	mov.b64 	%rd1694, {%r1266, %r1265};
	xor.b64  	%rd1695, %rd1693, %rd1694;
	shf.l.wrap.b32 	%r1267, %r1261, %r1262, 23;
	shf.l.wrap.b32 	%r1268, %r1262, %r1261, 23;
	mov.b64 	%rd1696, {%r1268, %r1267};
	xor.b64  	%rd1697, %rd1695, %rd1696;
	xor.b64  	%rd1698, %rd1604, %rd1641;
	and.b64  	%rd1699, %rd1698, %rd1678;
	xor.b64  	%rd1700, %rd1699, %rd1604;
	add.s64 	%rd1701, %rd1697, %rd1567;
	add.s64 	%rd1702, %rd1701, %rd1700;
	add.s64 	%rd1703, %rd1702, %rd1692;
	add.s64 	%rd1704, %rd1703, 2177327727835720531;
	and.b64  	%rd1705, %rd1679, %rd1642;
	or.b64  	%rd1706, %rd1679, %rd1642;
	and.b64  	%rd1707, %rd1706, %rd1605;
	or.b64  	%rd1708, %rd1707, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1679;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 28;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 28;
	mov.b64 	%rd1709, {%r1272, %r1271};
	shf.l.wrap.b32 	%r1273, %r1269, %r1270, 30;
	shf.l.wrap.b32 	%r1274, %r1270, %r1269, 30;
	mov.b64 	%rd1710, {%r1274, %r1273};
	xor.b64  	%rd1711, %rd1709, %rd1710;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 25;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 25;
	mov.b64 	%rd1712, {%r1276, %r1275};
	xor.b64  	%rd1713, %rd1711, %rd1712;
	add.s64 	%rd1714, %rd1708, %rd1713;
	add.s64 	%rd1715, %rd1704, %rd1568;
	add.s64 	%rd1716, %rd1714, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1655;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 19;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 19;
	mov.b64 	%rd1717, {%r1280, %r1279};
	shf.l.wrap.b32 	%r1281, %r1277, %r1278, 3;
	shf.l.wrap.b32 	%r1282, %r1278, %r1277, 3;
	mov.b64 	%rd1718, {%r1282, %r1281};
	xor.b64  	%rd1719, %rd1717, %rd1718;
	shr.u64 	%rd1720, %rd1655, 6;
	xor.b64  	%rd1721, %rd1719, %rd1720;
	shf.r.wrap.b32 	%r1283, %r940, %r939, 1;
	shf.r.wrap.b32 	%r1284, %r939, %r940, 1;
	mov.b64 	%rd1722, {%r1284, %r1283};
	shf.r.wrap.b32 	%r1285, %r940, %r939, 8;
	shf.r.wrap.b32 	%r1286, %r939, %r940, 8;
	mov.b64 	%rd1723, {%r1286, %r1285};
	xor.b64  	%rd1724, %rd1722, %rd1723;
	shr.u64 	%rd1725, %rd1174, 7;
	xor.b64  	%rd1726, %rd1724, %rd1725;
	add.s64 	%rd1727, %rd1721, %rd1137;
	add.s64 	%rd1728, %rd1727, %rd1470;
	add.s64 	%rd1729, %rd1728, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1715;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 14;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 14;
	mov.b64 	%rd1730, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r1288, %r1287, 18;
	shf.r.wrap.b32 	%r1292, %r1287, %r1288, 18;
	mov.b64 	%rd1731, {%r1292, %r1291};
	xor.b64  	%rd1732, %rd1730, %rd1731;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 23;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 23;
	mov.b64 	%rd1733, {%r1294, %r1293};
	xor.b64  	%rd1734, %rd1732, %rd1733;
	xor.b64  	%rd1735, %rd1641, %rd1678;
	and.b64  	%rd1736, %rd1735, %rd1715;
	xor.b64  	%rd1737, %rd1736, %rd1641;
	add.s64 	%rd1738, %rd1734, %rd1604;
	add.s64 	%rd1739, %rd1738, %rd1737;
	add.s64 	%rd1740, %rd1739, %rd1729;
	add.s64 	%rd1741, %rd1740, 2830643537854262169;
	and.b64  	%rd1742, %rd1716, %rd1679;
	or.b64  	%rd1743, %rd1716, %rd1679;
	and.b64  	%rd1744, %rd1743, %rd1642;
	or.b64  	%rd1745, %rd1744, %rd1742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1716;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 28;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 28;
	mov.b64 	%rd1746, {%r1298, %r1297};
	shf.l.wrap.b32 	%r1299, %r1295, %r1296, 30;
	shf.l.wrap.b32 	%r1300, %r1296, %r1295, 30;
	mov.b64 	%rd1747, {%r1300, %r1299};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 25;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 25;
	mov.b64 	%rd1749, {%r1302, %r1301};
	xor.b64  	%rd1750, %rd1748, %rd1749;
	add.s64 	%rd1751, %rd1745, %rd1750;
	add.s64 	%rd1752, %rd1741, %rd1605;
	add.s64 	%rd1753, %rd1751, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1692;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 19;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 19;
	mov.b64 	%rd1754, {%r1306, %r1305};
	shf.l.wrap.b32 	%r1307, %r1303, %r1304, 3;
	shf.l.wrap.b32 	%r1308, %r1304, %r1303, 3;
	mov.b64 	%rd1755, {%r1308, %r1307};
	xor.b64  	%rd1756, %rd1754, %rd1755;
	shr.u64 	%rd1757, %rd1692, 6;
	xor.b64  	%rd1758, %rd1756, %rd1757;
	shf.r.wrap.b32 	%r1309, %r966, %r965, 1;
	shf.r.wrap.b32 	%r1310, %r965, %r966, 1;
	mov.b64 	%rd1759, {%r1310, %r1309};
	shf.r.wrap.b32 	%r1311, %r966, %r965, 8;
	shf.r.wrap.b32 	%r1312, %r965, %r966, 8;
	mov.b64 	%rd1760, {%r1312, %r1311};
	xor.b64  	%rd1761, %rd1759, %rd1760;
	shr.u64 	%rd1762, %rd1211, 7;
	xor.b64  	%rd1763, %rd1761, %rd1762;
	add.s64 	%rd1764, %rd1758, %rd1174;
	add.s64 	%rd1765, %rd1764, %rd1507;
	add.s64 	%rd1766, %rd1765, %rd1763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1313,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1314}, %rd1752;
	}
	shf.r.wrap.b32 	%r1315, %r1314, %r1313, 14;
	shf.r.wrap.b32 	%r1316, %r1313, %r1314, 14;
	mov.b64 	%rd1767, {%r1316, %r1315};
	shf.r.wrap.b32 	%r1317, %r1314, %r1313, 18;
	shf.r.wrap.b32 	%r1318, %r1313, %r1314, 18;
	mov.b64 	%rd1768, {%r1318, %r1317};
	xor.b64  	%rd1769, %rd1767, %rd1768;
	shf.l.wrap.b32 	%r1319, %r1313, %r1314, 23;
	shf.l.wrap.b32 	%r1320, %r1314, %r1313, 23;
	mov.b64 	%rd1770, {%r1320, %r1319};
	xor.b64  	%rd1771, %rd1769, %rd1770;
	xor.b64  	%rd1772, %rd1678, %rd1715;
	and.b64  	%rd1773, %rd1772, %rd1752;
	xor.b64  	%rd1774, %rd1773, %rd1678;
	add.s64 	%rd1775, %rd1771, %rd1641;
	add.s64 	%rd1776, %rd1775, %rd1774;
	add.s64 	%rd1777, %rd1776, %rd1766;
	add.s64 	%rd1778, %rd1777, 3796741975233480872;
	and.b64  	%rd1779, %rd1753, %rd1716;
	or.b64  	%rd1780, %rd1753, %rd1716;
	and.b64  	%rd1781, %rd1780, %rd1679;
	or.b64  	%rd1782, %rd1781, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1321,%dummy}, %rd1753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd1753;
	}
	shf.r.wrap.b32 	%r1323, %r1322, %r1321, 28;
	shf.r.wrap.b32 	%r1324, %r1321, %r1322, 28;
	mov.b64 	%rd1783, {%r1324, %r1323};
	shf.l.wrap.b32 	%r1325, %r1321, %r1322, 30;
	shf.l.wrap.b32 	%r1326, %r1322, %r1321, 30;
	mov.b64 	%rd1784, {%r1326, %r1325};
	xor.b64  	%rd1785, %rd1783, %rd1784;
	shf.l.wrap.b32 	%r1327, %r1321, %r1322, 25;
	shf.l.wrap.b32 	%r1328, %r1322, %r1321, 25;
	mov.b64 	%rd1786, {%r1328, %r1327};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	add.s64 	%rd1788, %rd1782, %rd1787;
	add.s64 	%rd1789, %rd1778, %rd1642;
	add.s64 	%rd1790, %rd1788, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd1729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd1729;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 19;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 19;
	mov.b64 	%rd1791, {%r1332, %r1331};
	shf.l.wrap.b32 	%r1333, %r1329, %r1330, 3;
	shf.l.wrap.b32 	%r1334, %r1330, %r1329, 3;
	mov.b64 	%rd1792, {%r1334, %r1333};
	xor.b64  	%rd1793, %rd1791, %rd1792;
	shr.u64 	%rd1794, %rd1729, 6;
	xor.b64  	%rd1795, %rd1793, %rd1794;
	shf.r.wrap.b32 	%r1335, %r992, %r991, 1;
	shf.r.wrap.b32 	%r1336, %r991, %r992, 1;
	mov.b64 	%rd1796, {%r1336, %r1335};
	shf.r.wrap.b32 	%r1337, %r992, %r991, 8;
	shf.r.wrap.b32 	%r1338, %r991, %r992, 8;
	mov.b64 	%rd1797, {%r1338, %r1337};
	xor.b64  	%rd1798, %rd1796, %rd1797;
	shr.u64 	%rd1799, %rd1248, 7;
	xor.b64  	%rd1800, %rd1798, %rd1799;
	add.s64 	%rd1801, %rd1795, %rd1211;
	add.s64 	%rd1802, %rd1801, %rd1544;
	add.s64 	%rd1803, %rd1802, %rd1800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1339,%dummy}, %rd1789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1340}, %rd1789;
	}
	shf.r.wrap.b32 	%r1341, %r1340, %r1339, 14;
	shf.r.wrap.b32 	%r1342, %r1339, %r1340, 14;
	mov.b64 	%rd1804, {%r1342, %r1341};
	shf.r.wrap.b32 	%r1343, %r1340, %r1339, 18;
	shf.r.wrap.b32 	%r1344, %r1339, %r1340, 18;
	mov.b64 	%rd1805, {%r1344, %r1343};
	xor.b64  	%rd1806, %rd1804, %rd1805;
	shf.l.wrap.b32 	%r1345, %r1339, %r1340, 23;
	shf.l.wrap.b32 	%r1346, %r1340, %r1339, 23;
	mov.b64 	%rd1807, {%r1346, %r1345};
	xor.b64  	%rd1808, %rd1806, %rd1807;
	xor.b64  	%rd1809, %rd1715, %rd1752;
	and.b64  	%rd1810, %rd1809, %rd1789;
	xor.b64  	%rd1811, %rd1810, %rd1715;
	add.s64 	%rd1812, %rd1808, %rd1678;
	add.s64 	%rd1813, %rd1812, %rd1811;
	add.s64 	%rd1814, %rd1813, %rd1803;
	add.s64 	%rd1815, %rd1814, 4115178125766777443;
	and.b64  	%rd1816, %rd1790, %rd1753;
	or.b64  	%rd1817, %rd1790, %rd1753;
	and.b64  	%rd1818, %rd1817, %rd1716;
	or.b64  	%rd1819, %rd1818, %rd1816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1347,%dummy}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1348}, %rd1790;
	}
	shf.r.wrap.b32 	%r1349, %r1348, %r1347, 28;
	shf.r.wrap.b32 	%r1350, %r1347, %r1348, 28;
	mov.b64 	%rd1820, {%r1350, %r1349};
	shf.l.wrap.b32 	%r1351, %r1347, %r1348, 30;
	shf.l.wrap.b32 	%r1352, %r1348, %r1347, 30;
	mov.b64 	%rd1821, {%r1352, %r1351};
	xor.b64  	%rd1822, %rd1820, %rd1821;
	shf.l.wrap.b32 	%r1353, %r1347, %r1348, 25;
	shf.l.wrap.b32 	%r1354, %r1348, %r1347, 25;
	mov.b64 	%rd1823, {%r1354, %r1353};
	xor.b64  	%rd1824, %rd1822, %rd1823;
	add.s64 	%rd1825, %rd1819, %rd1824;
	add.s64 	%rd1826, %rd1815, %rd1679;
	add.s64 	%rd1827, %rd1825, %rd1815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1355,%dummy}, %rd1766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1356}, %rd1766;
	}
	shf.r.wrap.b32 	%r1357, %r1356, %r1355, 19;
	shf.r.wrap.b32 	%r1358, %r1355, %r1356, 19;
	mov.b64 	%rd1828, {%r1358, %r1357};
	shf.l.wrap.b32 	%r1359, %r1355, %r1356, 3;
	shf.l.wrap.b32 	%r1360, %r1356, %r1355, 3;
	mov.b64 	%rd1829, {%r1360, %r1359};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	shr.u64 	%rd1831, %rd1766, 6;
	xor.b64  	%rd1832, %rd1830, %rd1831;
	shf.r.wrap.b32 	%r1361, %r1018, %r1017, 1;
	shf.r.wrap.b32 	%r1362, %r1017, %r1018, 1;
	mov.b64 	%rd1833, {%r1362, %r1361};
	shf.r.wrap.b32 	%r1363, %r1018, %r1017, 8;
	shf.r.wrap.b32 	%r1364, %r1017, %r1018, 8;
	mov.b64 	%rd1834, {%r1364, %r1363};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	shr.u64 	%rd1836, %rd1285, 7;
	xor.b64  	%rd1837, %rd1835, %rd1836;
	add.s64 	%rd1838, %rd1832, %rd1248;
	add.s64 	%rd1839, %rd1838, %rd1581;
	add.s64 	%rd1840, %rd1839, %rd1837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd1826;
	}
	shf.r.wrap.b32 	%r1367, %r1366, %r1365, 14;
	shf.r.wrap.b32 	%r1368, %r1365, %r1366, 14;
	mov.b64 	%rd1841, {%r1368, %r1367};
	shf.r.wrap.b32 	%r1369, %r1366, %r1365, 18;
	shf.r.wrap.b32 	%r1370, %r1365, %r1366, 18;
	mov.b64 	%rd1842, {%r1370, %r1369};
	xor.b64  	%rd1843, %rd1841, %rd1842;
	shf.l.wrap.b32 	%r1371, %r1365, %r1366, 23;
	shf.l.wrap.b32 	%r1372, %r1366, %r1365, 23;
	mov.b64 	%rd1844, {%r1372, %r1371};
	xor.b64  	%rd1845, %rd1843, %rd1844;
	xor.b64  	%rd1846, %rd1752, %rd1789;
	and.b64  	%rd1847, %rd1846, %rd1826;
	xor.b64  	%rd1848, %rd1847, %rd1752;
	add.s64 	%rd1849, %rd1845, %rd1715;
	add.s64 	%rd1850, %rd1849, %rd1848;
	add.s64 	%rd1851, %rd1850, %rd1840;
	add.s64 	%rd1852, %rd1851, 5681478168544905931;
	and.b64  	%rd1853, %rd1827, %rd1790;
	or.b64  	%rd1854, %rd1827, %rd1790;
	and.b64  	%rd1855, %rd1854, %rd1753;
	or.b64  	%rd1856, %rd1855, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1827;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 28;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 28;
	mov.b64 	%rd1857, {%r1376, %r1375};
	shf.l.wrap.b32 	%r1377, %r1373, %r1374, 30;
	shf.l.wrap.b32 	%r1378, %r1374, %r1373, 30;
	mov.b64 	%rd1858, {%r1378, %r1377};
	xor.b64  	%rd1859, %rd1857, %rd1858;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 25;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 25;
	mov.b64 	%rd1860, {%r1380, %r1379};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	add.s64 	%rd1862, %rd1856, %rd1861;
	add.s64 	%rd1863, %rd1852, %rd1716;
	add.s64 	%rd1864, %rd1862, %rd1852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd1803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd1803;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 19;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 19;
	mov.b64 	%rd1865, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 3;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 3;
	mov.b64 	%rd1866, {%r1386, %r1385};
	xor.b64  	%rd1867, %rd1865, %rd1866;
	shr.u64 	%rd1868, %rd1803, 6;
	xor.b64  	%rd1869, %rd1867, %rd1868;
	shf.r.wrap.b32 	%r1387, %r1044, %r1043, 1;
	shf.r.wrap.b32 	%r1388, %r1043, %r1044, 1;
	mov.b64 	%rd1870, {%r1388, %r1387};
	shf.r.wrap.b32 	%r1389, %r1044, %r1043, 8;
	shf.r.wrap.b32 	%r1390, %r1043, %r1044, 8;
	mov.b64 	%rd1871, {%r1390, %r1389};
	xor.b64  	%rd1872, %rd1870, %rd1871;
	shr.u64 	%rd1873, %rd1322, 7;
	xor.b64  	%rd1874, %rd1872, %rd1873;
	add.s64 	%rd1875, %rd1869, %rd1285;
	add.s64 	%rd1876, %rd1875, %rd1618;
	add.s64 	%rd1877, %rd1876, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd1863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd1863;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 14;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 14;
	mov.b64 	%rd1878, {%r1394, %r1393};
	shf.r.wrap.b32 	%r1395, %r1392, %r1391, 18;
	shf.r.wrap.b32 	%r1396, %r1391, %r1392, 18;
	mov.b64 	%rd1879, {%r1396, %r1395};
	xor.b64  	%rd1880, %rd1878, %rd1879;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 23;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 23;
	mov.b64 	%rd1881, {%r1398, %r1397};
	xor.b64  	%rd1882, %rd1880, %rd1881;
	xor.b64  	%rd1883, %rd1789, %rd1826;
	and.b64  	%rd1884, %rd1883, %rd1863;
	xor.b64  	%rd1885, %rd1884, %rd1789;
	add.s64 	%rd1886, %rd1882, %rd1752;
	add.s64 	%rd1887, %rd1886, %rd1885;
	add.s64 	%rd1888, %rd1887, %rd1877;
	add.s64 	%rd1889, %rd1888, 6601373596472566643;
	and.b64  	%rd1890, %rd1864, %rd1827;
	or.b64  	%rd1891, %rd1864, %rd1827;
	and.b64  	%rd1892, %rd1891, %rd1790;
	or.b64  	%rd1893, %rd1892, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd1864;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 28;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 28;
	mov.b64 	%rd1894, {%r1402, %r1401};
	shf.l.wrap.b32 	%r1403, %r1399, %r1400, 30;
	shf.l.wrap.b32 	%r1404, %r1400, %r1399, 30;
	mov.b64 	%rd1895, {%r1404, %r1403};
	xor.b64  	%rd1896, %rd1894, %rd1895;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 25;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 25;
	mov.b64 	%rd1897, {%r1406, %r1405};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	add.s64 	%rd1899, %rd1893, %rd1898;
	add.s64 	%rd1900, %rd1889, %rd1753;
	add.s64 	%rd1901, %rd1899, %rd1889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd1840;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 19;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 19;
	mov.b64 	%rd1902, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 3;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 3;
	mov.b64 	%rd1903, {%r1412, %r1411};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	shr.u64 	%rd1905, %rd1840, 6;
	xor.b64  	%rd1906, %rd1904, %rd1905;
	shf.r.wrap.b32 	%r1413, %r1070, %r1069, 1;
	shf.r.wrap.b32 	%r1414, %r1069, %r1070, 1;
	mov.b64 	%rd1907, {%r1414, %r1413};
	shf.r.wrap.b32 	%r1415, %r1070, %r1069, 8;
	shf.r.wrap.b32 	%r1416, %r1069, %r1070, 8;
	mov.b64 	%rd1908, {%r1416, %r1415};
	xor.b64  	%rd1909, %rd1907, %rd1908;
	shr.u64 	%rd1910, %rd1359, 7;
	xor.b64  	%rd1911, %rd1909, %rd1910;
	add.s64 	%rd1912, %rd1906, %rd1322;
	add.s64 	%rd1913, %rd1912, %rd1655;
	add.s64 	%rd1914, %rd1913, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1417,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1418}, %rd1900;
	}
	shf.r.wrap.b32 	%r1419, %r1418, %r1417, 14;
	shf.r.wrap.b32 	%r1420, %r1417, %r1418, 14;
	mov.b64 	%rd1915, {%r1420, %r1419};
	shf.r.wrap.b32 	%r1421, %r1418, %r1417, 18;
	shf.r.wrap.b32 	%r1422, %r1417, %r1418, 18;
	mov.b64 	%rd1916, {%r1422, %r1421};
	xor.b64  	%rd1917, %rd1915, %rd1916;
	shf.l.wrap.b32 	%r1423, %r1417, %r1418, 23;
	shf.l.wrap.b32 	%r1424, %r1418, %r1417, 23;
	mov.b64 	%rd1918, {%r1424, %r1423};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	xor.b64  	%rd1920, %rd1826, %rd1863;
	and.b64  	%rd1921, %rd1920, %rd1900;
	xor.b64  	%rd1922, %rd1921, %rd1826;
	add.s64 	%rd1923, %rd1919, %rd1789;
	add.s64 	%rd1924, %rd1923, %rd1922;
	add.s64 	%rd1925, %rd1924, %rd1914;
	add.s64 	%rd1926, %rd1925, 7507060721942968483;
	and.b64  	%rd1927, %rd1901, %rd1864;
	or.b64  	%rd1928, %rd1901, %rd1864;
	and.b64  	%rd1929, %rd1928, %rd1827;
	or.b64  	%rd1930, %rd1929, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd1901;
	}
	shf.r.wrap.b32 	%r1427, %r1426, %r1425, 28;
	shf.r.wrap.b32 	%r1428, %r1425, %r1426, 28;
	mov.b64 	%rd1931, {%r1428, %r1427};
	shf.l.wrap.b32 	%r1429, %r1425, %r1426, 30;
	shf.l.wrap.b32 	%r1430, %r1426, %r1425, 30;
	mov.b64 	%rd1932, {%r1430, %r1429};
	xor.b64  	%rd1933, %rd1931, %rd1932;
	shf.l.wrap.b32 	%r1431, %r1425, %r1426, 25;
	shf.l.wrap.b32 	%r1432, %r1426, %r1425, 25;
	mov.b64 	%rd1934, {%r1432, %r1431};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	add.s64 	%rd1936, %rd1930, %rd1935;
	add.s64 	%rd1937, %rd1926, %rd1790;
	add.s64 	%rd1938, %rd1936, %rd1926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd1877;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 19;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 19;
	mov.b64 	%rd1939, {%r1436, %r1435};
	shf.l.wrap.b32 	%r1437, %r1433, %r1434, 3;
	shf.l.wrap.b32 	%r1438, %r1434, %r1433, 3;
	mov.b64 	%rd1940, {%r1438, %r1437};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	shr.u64 	%rd1942, %rd1877, 6;
	xor.b64  	%rd1943, %rd1941, %rd1942;
	shf.r.wrap.b32 	%r1439, %r1096, %r1095, 1;
	shf.r.wrap.b32 	%r1440, %r1095, %r1096, 1;
	mov.b64 	%rd1944, {%r1440, %r1439};
	shf.r.wrap.b32 	%r1441, %r1096, %r1095, 8;
	shf.r.wrap.b32 	%r1442, %r1095, %r1096, 8;
	mov.b64 	%rd1945, {%r1442, %r1441};
	xor.b64  	%rd1946, %rd1944, %rd1945;
	shr.u64 	%rd1947, %rd1396, 7;
	xor.b64  	%rd1948, %rd1946, %rd1947;
	add.s64 	%rd1949, %rd1943, %rd1359;
	add.s64 	%rd1950, %rd1949, %rd1692;
	add.s64 	%rd1951, %rd1950, %rd1948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1443,%dummy}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1444}, %rd1937;
	}
	shf.r.wrap.b32 	%r1445, %r1444, %r1443, 14;
	shf.r.wrap.b32 	%r1446, %r1443, %r1444, 14;
	mov.b64 	%rd1952, {%r1446, %r1445};
	shf.r.wrap.b32 	%r1447, %r1444, %r1443, 18;
	shf.r.wrap.b32 	%r1448, %r1443, %r1444, 18;
	mov.b64 	%rd1953, {%r1448, %r1447};
	xor.b64  	%rd1954, %rd1952, %rd1953;
	shf.l.wrap.b32 	%r1449, %r1443, %r1444, 23;
	shf.l.wrap.b32 	%r1450, %r1444, %r1443, 23;
	mov.b64 	%rd1955, {%r1450, %r1449};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1863, %rd1900;
	and.b64  	%rd1958, %rd1957, %rd1937;
	xor.b64  	%rd1959, %rd1958, %rd1863;
	add.s64 	%rd1960, %rd1956, %rd1826;
	add.s64 	%rd1961, %rd1960, %rd1959;
	add.s64 	%rd1962, %rd1961, %rd1951;
	add.s64 	%rd1963, %rd1962, 8399075790359081724;
	and.b64  	%rd1964, %rd1938, %rd1901;
	or.b64  	%rd1965, %rd1938, %rd1901;
	and.b64  	%rd1966, %rd1965, %rd1864;
	or.b64  	%rd1967, %rd1966, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1451,%dummy}, %rd1938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1452}, %rd1938;
	}
	shf.r.wrap.b32 	%r1453, %r1452, %r1451, 28;
	shf.r.wrap.b32 	%r1454, %r1451, %r1452, 28;
	mov.b64 	%rd1968, {%r1454, %r1453};
	shf.l.wrap.b32 	%r1455, %r1451, %r1452, 30;
	shf.l.wrap.b32 	%r1456, %r1452, %r1451, 30;
	mov.b64 	%rd1969, {%r1456, %r1455};
	xor.b64  	%rd1970, %rd1968, %rd1969;
	shf.l.wrap.b32 	%r1457, %r1451, %r1452, 25;
	shf.l.wrap.b32 	%r1458, %r1452, %r1451, 25;
	mov.b64 	%rd1971, {%r1458, %r1457};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	add.s64 	%rd1973, %rd1967, %rd1972;
	add.s64 	%rd1974, %rd1963, %rd1827;
	add.s64 	%rd1975, %rd1973, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1459,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1460}, %rd1914;
	}
	shf.r.wrap.b32 	%r1461, %r1460, %r1459, 19;
	shf.r.wrap.b32 	%r1462, %r1459, %r1460, 19;
	mov.b64 	%rd1976, {%r1462, %r1461};
	shf.l.wrap.b32 	%r1463, %r1459, %r1460, 3;
	shf.l.wrap.b32 	%r1464, %r1460, %r1459, 3;
	mov.b64 	%rd1977, {%r1464, %r1463};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	shr.u64 	%rd1979, %rd1914, 6;
	xor.b64  	%rd1980, %rd1978, %rd1979;
	shf.r.wrap.b32 	%r1465, %r1122, %r1121, 1;
	shf.r.wrap.b32 	%r1466, %r1121, %r1122, 1;
	mov.b64 	%rd1981, {%r1466, %r1465};
	shf.r.wrap.b32 	%r1467, %r1122, %r1121, 8;
	shf.r.wrap.b32 	%r1468, %r1121, %r1122, 8;
	mov.b64 	%rd1982, {%r1468, %r1467};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	shr.u64 	%rd1984, %rd1433, 7;
	xor.b64  	%rd1985, %rd1983, %rd1984;
	add.s64 	%rd1986, %rd1980, %rd1396;
	add.s64 	%rd1987, %rd1986, %rd1729;
	add.s64 	%rd1988, %rd1987, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd1974;
	}
	shf.r.wrap.b32 	%r1471, %r1470, %r1469, 14;
	shf.r.wrap.b32 	%r1472, %r1469, %r1470, 14;
	mov.b64 	%rd1989, {%r1472, %r1471};
	shf.r.wrap.b32 	%r1473, %r1470, %r1469, 18;
	shf.r.wrap.b32 	%r1474, %r1469, %r1470, 18;
	mov.b64 	%rd1990, {%r1474, %r1473};
	xor.b64  	%rd1991, %rd1989, %rd1990;
	shf.l.wrap.b32 	%r1475, %r1469, %r1470, 23;
	shf.l.wrap.b32 	%r1476, %r1470, %r1469, 23;
	mov.b64 	%rd1992, {%r1476, %r1475};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	xor.b64  	%rd1994, %rd1900, %rd1937;
	and.b64  	%rd1995, %rd1994, %rd1974;
	xor.b64  	%rd1996, %rd1995, %rd1900;
	add.s64 	%rd1997, %rd1993, %rd1863;
	add.s64 	%rd1998, %rd1997, %rd1996;
	add.s64 	%rd1999, %rd1998, %rd1988;
	add.s64 	%rd2000, %rd1999, 8693463985226723168;
	and.b64  	%rd2001, %rd1975, %rd1938;
	or.b64  	%rd2002, %rd1975, %rd1938;
	and.b64  	%rd2003, %rd2002, %rd1901;
	or.b64  	%rd2004, %rd2003, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd1975;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 28;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 28;
	mov.b64 	%rd2005, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 30;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 30;
	mov.b64 	%rd2006, {%r1482, %r1481};
	xor.b64  	%rd2007, %rd2005, %rd2006;
	shf.l.wrap.b32 	%r1483, %r1477, %r1478, 25;
	shf.l.wrap.b32 	%r1484, %r1478, %r1477, 25;
	mov.b64 	%rd2008, {%r1484, %r1483};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	add.s64 	%rd2010, %rd2004, %rd2009;
	add.s64 	%rd2011, %rd2000, %rd1864;
	add.s64 	%rd2012, %rd2010, %rd2000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd1951;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 19;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 19;
	mov.b64 	%rd2013, {%r1488, %r1487};
	shf.l.wrap.b32 	%r1489, %r1485, %r1486, 3;
	shf.l.wrap.b32 	%r1490, %r1486, %r1485, 3;
	mov.b64 	%rd2014, {%r1490, %r1489};
	xor.b64  	%rd2015, %rd2013, %rd2014;
	shr.u64 	%rd2016, %rd1951, 6;
	xor.b64  	%rd2017, %rd2015, %rd2016;
	shf.r.wrap.b32 	%r1491, %r1148, %r1147, 1;
	shf.r.wrap.b32 	%r1492, %r1147, %r1148, 1;
	mov.b64 	%rd2018, {%r1492, %r1491};
	shf.r.wrap.b32 	%r1493, %r1148, %r1147, 8;
	shf.r.wrap.b32 	%r1494, %r1147, %r1148, 8;
	mov.b64 	%rd2019, {%r1494, %r1493};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	shr.u64 	%rd2021, %rd1470, 7;
	xor.b64  	%rd2022, %rd2020, %rd2021;
	add.s64 	%rd2023, %rd2017, %rd1433;
	add.s64 	%rd2024, %rd2023, %rd1766;
	add.s64 	%rd2025, %rd2024, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd2011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd2011;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 14;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 14;
	mov.b64 	%rd2026, {%r1498, %r1497};
	shf.r.wrap.b32 	%r1499, %r1496, %r1495, 18;
	shf.r.wrap.b32 	%r1500, %r1495, %r1496, 18;
	mov.b64 	%rd2027, {%r1500, %r1499};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	shf.l.wrap.b32 	%r1501, %r1495, %r1496, 23;
	shf.l.wrap.b32 	%r1502, %r1496, %r1495, 23;
	mov.b64 	%rd2029, {%r1502, %r1501};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	xor.b64  	%rd2031, %rd1937, %rd1974;
	and.b64  	%rd2032, %rd2031, %rd2011;
	xor.b64  	%rd2033, %rd2032, %rd1937;
	add.s64 	%rd2034, %rd2030, %rd1900;
	add.s64 	%rd2035, %rd2034, %rd2033;
	add.s64 	%rd2036, %rd2035, %rd2025;
	add.s64 	%rd2037, %rd2036, -8878714635349349518;
	and.b64  	%rd2038, %rd2012, %rd1975;
	or.b64  	%rd2039, %rd2012, %rd1975;
	and.b64  	%rd2040, %rd2039, %rd1938;
	or.b64  	%rd2041, %rd2040, %rd2038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd2012;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 28;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 28;
	mov.b64 	%rd2042, {%r1506, %r1505};
	shf.l.wrap.b32 	%r1507, %r1503, %r1504, 30;
	shf.l.wrap.b32 	%r1508, %r1504, %r1503, 30;
	mov.b64 	%rd2043, {%r1508, %r1507};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 25;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 25;
	mov.b64 	%rd2045, {%r1510, %r1509};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	add.s64 	%rd2047, %rd2041, %rd2046;
	add.s64 	%rd2048, %rd2037, %rd1901;
	add.s64 	%rd2049, %rd2047, %rd2037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd1988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd1988;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 19;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 19;
	mov.b64 	%rd2050, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 3;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 3;
	mov.b64 	%rd2051, {%r1516, %r1515};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	shr.u64 	%rd2053, %rd1988, 6;
	xor.b64  	%rd2054, %rd2052, %rd2053;
	shf.r.wrap.b32 	%r1517, %r1174, %r1173, 1;
	shf.r.wrap.b32 	%r1518, %r1173, %r1174, 1;
	mov.b64 	%rd2055, {%r1518, %r1517};
	shf.r.wrap.b32 	%r1519, %r1174, %r1173, 8;
	shf.r.wrap.b32 	%r1520, %r1173, %r1174, 8;
	mov.b64 	%rd2056, {%r1520, %r1519};
	xor.b64  	%rd2057, %rd2055, %rd2056;
	shr.u64 	%rd2058, %rd1507, 7;
	xor.b64  	%rd2059, %rd2057, %rd2058;
	add.s64 	%rd2060, %rd2054, %rd1470;
	add.s64 	%rd2061, %rd2060, %rd1803;
	add.s64 	%rd2062, %rd2061, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd2048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd2048;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 14;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 14;
	mov.b64 	%rd2063, {%r1524, %r1523};
	shf.r.wrap.b32 	%r1525, %r1522, %r1521, 18;
	shf.r.wrap.b32 	%r1526, %r1521, %r1522, 18;
	mov.b64 	%rd2064, {%r1526, %r1525};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	shf.l.wrap.b32 	%r1527, %r1521, %r1522, 23;
	shf.l.wrap.b32 	%r1528, %r1522, %r1521, 23;
	mov.b64 	%rd2066, {%r1528, %r1527};
	xor.b64  	%rd2067, %rd2065, %rd2066;
	xor.b64  	%rd2068, %rd1974, %rd2011;
	and.b64  	%rd2069, %rd2068, %rd2048;
	xor.b64  	%rd2070, %rd2069, %rd1974;
	add.s64 	%rd2071, %rd2067, %rd1937;
	add.s64 	%rd2072, %rd2071, %rd2070;
	add.s64 	%rd2073, %rd2072, %rd2062;
	add.s64 	%rd2074, %rd2073, -8302665154208450068;
	and.b64  	%rd2075, %rd2049, %rd2012;
	or.b64  	%rd2076, %rd2049, %rd2012;
	and.b64  	%rd2077, %rd2076, %rd1975;
	or.b64  	%rd2078, %rd2077, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd2049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1530}, %rd2049;
	}
	shf.r.wrap.b32 	%r1531, %r1530, %r1529, 28;
	shf.r.wrap.b32 	%r1532, %r1529, %r1530, 28;
	mov.b64 	%rd2079, {%r1532, %r1531};
	shf.l.wrap.b32 	%r1533, %r1529, %r1530, 30;
	shf.l.wrap.b32 	%r1534, %r1530, %r1529, 30;
	mov.b64 	%rd2080, {%r1534, %r1533};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	shf.l.wrap.b32 	%r1535, %r1529, %r1530, 25;
	shf.l.wrap.b32 	%r1536, %r1530, %r1529, 25;
	mov.b64 	%rd2082, {%r1536, %r1535};
	xor.b64  	%rd2083, %rd2081, %rd2082;
	add.s64 	%rd2084, %rd2078, %rd2083;
	add.s64 	%rd2085, %rd2074, %rd1938;
	add.s64 	%rd2086, %rd2084, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd2025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd2025;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 19;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 19;
	mov.b64 	%rd2087, {%r1540, %r1539};
	shf.l.wrap.b32 	%r1541, %r1537, %r1538, 3;
	shf.l.wrap.b32 	%r1542, %r1538, %r1537, 3;
	mov.b64 	%rd2088, {%r1542, %r1541};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	shr.u64 	%rd2090, %rd2025, 6;
	xor.b64  	%rd2091, %rd2089, %rd2090;
	shf.r.wrap.b32 	%r1543, %r1200, %r1199, 1;
	shf.r.wrap.b32 	%r1544, %r1199, %r1200, 1;
	mov.b64 	%rd2092, {%r1544, %r1543};
	shf.r.wrap.b32 	%r1545, %r1200, %r1199, 8;
	shf.r.wrap.b32 	%r1546, %r1199, %r1200, 8;
	mov.b64 	%rd2093, {%r1546, %r1545};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	shr.u64 	%rd2095, %rd1544, 7;
	xor.b64  	%rd2096, %rd2094, %rd2095;
	add.s64 	%rd2097, %rd2091, %rd1507;
	add.s64 	%rd2098, %rd2097, %rd1840;
	add.s64 	%rd2099, %rd2098, %rd2096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1547,%dummy}, %rd2085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1548}, %rd2085;
	}
	shf.r.wrap.b32 	%r1549, %r1548, %r1547, 14;
	shf.r.wrap.b32 	%r1550, %r1547, %r1548, 14;
	mov.b64 	%rd2100, {%r1550, %r1549};
	shf.r.wrap.b32 	%r1551, %r1548, %r1547, 18;
	shf.r.wrap.b32 	%r1552, %r1547, %r1548, 18;
	mov.b64 	%rd2101, {%r1552, %r1551};
	xor.b64  	%rd2102, %rd2100, %rd2101;
	shf.l.wrap.b32 	%r1553, %r1547, %r1548, 23;
	shf.l.wrap.b32 	%r1554, %r1548, %r1547, 23;
	mov.b64 	%rd2103, {%r1554, %r1553};
	xor.b64  	%rd2104, %rd2102, %rd2103;
	xor.b64  	%rd2105, %rd2011, %rd2048;
	and.b64  	%rd2106, %rd2105, %rd2085;
	xor.b64  	%rd2107, %rd2106, %rd2011;
	add.s64 	%rd2108, %rd2104, %rd1974;
	add.s64 	%rd2109, %rd2108, %rd2107;
	add.s64 	%rd2110, %rd2109, %rd2099;
	add.s64 	%rd2111, %rd2110, -8016688836872298968;
	and.b64  	%rd2112, %rd2086, %rd2049;
	or.b64  	%rd2113, %rd2086, %rd2049;
	and.b64  	%rd2114, %rd2113, %rd2012;
	or.b64  	%rd2115, %rd2114, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd2086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd2086;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 28;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 28;
	mov.b64 	%rd2116, {%r1558, %r1557};
	shf.l.wrap.b32 	%r1559, %r1555, %r1556, 30;
	shf.l.wrap.b32 	%r1560, %r1556, %r1555, 30;
	mov.b64 	%rd2117, {%r1560, %r1559};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	shf.l.wrap.b32 	%r1561, %r1555, %r1556, 25;
	shf.l.wrap.b32 	%r1562, %r1556, %r1555, 25;
	mov.b64 	%rd2119, {%r1562, %r1561};
	xor.b64  	%rd2120, %rd2118, %rd2119;
	add.s64 	%rd2121, %rd2115, %rd2120;
	add.s64 	%rd2122, %rd2111, %rd1975;
	add.s64 	%rd2123, %rd2121, %rd2111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd2062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd2062;
	}
	shf.r.wrap.b32 	%r1565, %r1564, %r1563, 19;
	shf.r.wrap.b32 	%r1566, %r1563, %r1564, 19;
	mov.b64 	%rd2124, {%r1566, %r1565};
	shf.l.wrap.b32 	%r1567, %r1563, %r1564, 3;
	shf.l.wrap.b32 	%r1568, %r1564, %r1563, 3;
	mov.b64 	%rd2125, {%r1568, %r1567};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	shr.u64 	%rd2127, %rd2062, 6;
	xor.b64  	%rd2128, %rd2126, %rd2127;
	shf.r.wrap.b32 	%r1569, %r1226, %r1225, 1;
	shf.r.wrap.b32 	%r1570, %r1225, %r1226, 1;
	mov.b64 	%rd2129, {%r1570, %r1569};
	shf.r.wrap.b32 	%r1571, %r1226, %r1225, 8;
	shf.r.wrap.b32 	%r1572, %r1225, %r1226, 8;
	mov.b64 	%rd2130, {%r1572, %r1571};
	xor.b64  	%rd2131, %rd2129, %rd2130;
	shr.u64 	%rd2132, %rd1581, 7;
	xor.b64  	%rd2133, %rd2131, %rd2132;
	add.s64 	%rd2134, %rd2128, %rd1544;
	add.s64 	%rd2135, %rd2134, %rd1877;
	add.s64 	%rd2136, %rd2135, %rd2133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd2122;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 14;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 14;
	mov.b64 	%rd2137, {%r1576, %r1575};
	shf.r.wrap.b32 	%r1577, %r1574, %r1573, 18;
	shf.r.wrap.b32 	%r1578, %r1573, %r1574, 18;
	mov.b64 	%rd2138, {%r1578, %r1577};
	xor.b64  	%rd2139, %rd2137, %rd2138;
	shf.l.wrap.b32 	%r1579, %r1573, %r1574, 23;
	shf.l.wrap.b32 	%r1580, %r1574, %r1573, 23;
	mov.b64 	%rd2140, {%r1580, %r1579};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	xor.b64  	%rd2142, %rd2048, %rd2085;
	and.b64  	%rd2143, %rd2142, %rd2122;
	xor.b64  	%rd2144, %rd2143, %rd2048;
	add.s64 	%rd2145, %rd2141, %rd2011;
	add.s64 	%rd2146, %rd2145, %rd2144;
	add.s64 	%rd2147, %rd2146, %rd2136;
	add.s64 	%rd2148, %rd2147, -6606660893046293015;
	and.b64  	%rd2149, %rd2123, %rd2086;
	or.b64  	%rd2150, %rd2123, %rd2086;
	and.b64  	%rd2151, %rd2150, %rd2049;
	or.b64  	%rd2152, %rd2151, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd2123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd2123;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 28;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 28;
	mov.b64 	%rd2153, {%r1584, %r1583};
	shf.l.wrap.b32 	%r1585, %r1581, %r1582, 30;
	shf.l.wrap.b32 	%r1586, %r1582, %r1581, 30;
	mov.b64 	%rd2154, {%r1586, %r1585};
	xor.b64  	%rd2155, %rd2153, %rd2154;
	shf.l.wrap.b32 	%r1587, %r1581, %r1582, 25;
	shf.l.wrap.b32 	%r1588, %r1582, %r1581, 25;
	mov.b64 	%rd2156, {%r1588, %r1587};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	add.s64 	%rd2158, %rd2152, %rd2157;
	add.s64 	%rd2159, %rd2148, %rd2012;
	add.s64 	%rd2160, %rd2158, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd2099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd2099;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 19;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 19;
	mov.b64 	%rd2161, {%r1592, %r1591};
	shf.l.wrap.b32 	%r1593, %r1589, %r1590, 3;
	shf.l.wrap.b32 	%r1594, %r1590, %r1589, 3;
	mov.b64 	%rd2162, {%r1594, %r1593};
	xor.b64  	%rd2163, %rd2161, %rd2162;
	shr.u64 	%rd2164, %rd2099, 6;
	xor.b64  	%rd2165, %rd2163, %rd2164;
	shf.r.wrap.b32 	%r1595, %r1252, %r1251, 1;
	shf.r.wrap.b32 	%r1596, %r1251, %r1252, 1;
	mov.b64 	%rd2166, {%r1596, %r1595};
	shf.r.wrap.b32 	%r1597, %r1252, %r1251, 8;
	shf.r.wrap.b32 	%r1598, %r1251, %r1252, 8;
	mov.b64 	%rd2167, {%r1598, %r1597};
	xor.b64  	%rd2168, %rd2166, %rd2167;
	shr.u64 	%rd2169, %rd1618, 7;
	xor.b64  	%rd2170, %rd2168, %rd2169;
	add.s64 	%rd2171, %rd2165, %rd1581;
	add.s64 	%rd2172, %rd2171, %rd1914;
	add.s64 	%rd2173, %rd2172, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1600}, %rd2159;
	}
	shf.r.wrap.b32 	%r1601, %r1600, %r1599, 14;
	shf.r.wrap.b32 	%r1602, %r1599, %r1600, 14;
	mov.b64 	%rd2174, {%r1602, %r1601};
	shf.r.wrap.b32 	%r1603, %r1600, %r1599, 18;
	shf.r.wrap.b32 	%r1604, %r1599, %r1600, 18;
	mov.b64 	%rd2175, {%r1604, %r1603};
	xor.b64  	%rd2176, %rd2174, %rd2175;
	shf.l.wrap.b32 	%r1605, %r1599, %r1600, 23;
	shf.l.wrap.b32 	%r1606, %r1600, %r1599, 23;
	mov.b64 	%rd2177, {%r1606, %r1605};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	xor.b64  	%rd2179, %rd2085, %rd2122;
	and.b64  	%rd2180, %rd2179, %rd2159;
	xor.b64  	%rd2181, %rd2180, %rd2085;
	add.s64 	%rd2182, %rd2178, %rd2048;
	add.s64 	%rd2183, %rd2182, %rd2181;
	add.s64 	%rd2184, %rd2183, %rd2173;
	add.s64 	%rd2185, %rd2184, -4685533653050689259;
	and.b64  	%rd2186, %rd2160, %rd2123;
	or.b64  	%rd2187, %rd2160, %rd2123;
	and.b64  	%rd2188, %rd2187, %rd2086;
	or.b64  	%rd2189, %rd2188, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd2160;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 28;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 28;
	mov.b64 	%rd2190, {%r1610, %r1609};
	shf.l.wrap.b32 	%r1611, %r1607, %r1608, 30;
	shf.l.wrap.b32 	%r1612, %r1608, %r1607, 30;
	mov.b64 	%rd2191, {%r1612, %r1611};
	xor.b64  	%rd2192, %rd2190, %rd2191;
	shf.l.wrap.b32 	%r1613, %r1607, %r1608, 25;
	shf.l.wrap.b32 	%r1614, %r1608, %r1607, 25;
	mov.b64 	%rd2193, {%r1614, %r1613};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	add.s64 	%rd2195, %rd2189, %rd2194;
	add.s64 	%rd2196, %rd2185, %rd2049;
	add.s64 	%rd2197, %rd2195, %rd2185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd2136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd2136;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 19;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 19;
	mov.b64 	%rd2198, {%r1618, %r1617};
	shf.l.wrap.b32 	%r1619, %r1615, %r1616, 3;
	shf.l.wrap.b32 	%r1620, %r1616, %r1615, 3;
	mov.b64 	%rd2199, {%r1620, %r1619};
	xor.b64  	%rd2200, %rd2198, %rd2199;
	shr.u64 	%rd2201, %rd2136, 6;
	xor.b64  	%rd2202, %rd2200, %rd2201;
	shf.r.wrap.b32 	%r1621, %r1278, %r1277, 1;
	shf.r.wrap.b32 	%r1622, %r1277, %r1278, 1;
	mov.b64 	%rd2203, {%r1622, %r1621};
	shf.r.wrap.b32 	%r1623, %r1278, %r1277, 8;
	shf.r.wrap.b32 	%r1624, %r1277, %r1278, 8;
	mov.b64 	%rd2204, {%r1624, %r1623};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	shr.u64 	%rd2206, %rd1655, 7;
	xor.b64  	%rd2207, %rd2205, %rd2206;
	add.s64 	%rd2208, %rd2202, %rd1618;
	add.s64 	%rd2209, %rd2208, %rd1951;
	add.s64 	%rd2210, %rd2209, %rd2207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1625,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1626}, %rd2196;
	}
	shf.r.wrap.b32 	%r1627, %r1626, %r1625, 14;
	shf.r.wrap.b32 	%r1628, %r1625, %r1626, 14;
	mov.b64 	%rd2211, {%r1628, %r1627};
	shf.r.wrap.b32 	%r1629, %r1626, %r1625, 18;
	shf.r.wrap.b32 	%r1630, %r1625, %r1626, 18;
	mov.b64 	%rd2212, {%r1630, %r1629};
	xor.b64  	%rd2213, %rd2211, %rd2212;
	shf.l.wrap.b32 	%r1631, %r1625, %r1626, 23;
	shf.l.wrap.b32 	%r1632, %r1626, %r1625, 23;
	mov.b64 	%rd2214, {%r1632, %r1631};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	xor.b64  	%rd2216, %rd2122, %rd2159;
	and.b64  	%rd2217, %rd2216, %rd2196;
	xor.b64  	%rd2218, %rd2217, %rd2122;
	add.s64 	%rd2219, %rd2215, %rd2085;
	add.s64 	%rd2220, %rd2219, %rd2218;
	add.s64 	%rd2221, %rd2220, %rd2210;
	add.s64 	%rd2222, %rd2221, -4147400797238176981;
	and.b64  	%rd2223, %rd2197, %rd2160;
	or.b64  	%rd2224, %rd2197, %rd2160;
	and.b64  	%rd2225, %rd2224, %rd2123;
	or.b64  	%rd2226, %rd2225, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1633,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1634}, %rd2197;
	}
	shf.r.wrap.b32 	%r1635, %r1634, %r1633, 28;
	shf.r.wrap.b32 	%r1636, %r1633, %r1634, 28;
	mov.b64 	%rd2227, {%r1636, %r1635};
	shf.l.wrap.b32 	%r1637, %r1633, %r1634, 30;
	shf.l.wrap.b32 	%r1638, %r1634, %r1633, 30;
	mov.b64 	%rd2228, {%r1638, %r1637};
	xor.b64  	%rd2229, %rd2227, %rd2228;
	shf.l.wrap.b32 	%r1639, %r1633, %r1634, 25;
	shf.l.wrap.b32 	%r1640, %r1634, %r1633, 25;
	mov.b64 	%rd2230, {%r1640, %r1639};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	add.s64 	%rd2232, %rd2226, %rd2231;
	add.s64 	%rd2233, %rd2222, %rd2086;
	add.s64 	%rd2234, %rd2232, %rd2222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1641,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd2173;
	}
	shf.r.wrap.b32 	%r1643, %r1642, %r1641, 19;
	shf.r.wrap.b32 	%r1644, %r1641, %r1642, 19;
	mov.b64 	%rd2235, {%r1644, %r1643};
	shf.l.wrap.b32 	%r1645, %r1641, %r1642, 3;
	shf.l.wrap.b32 	%r1646, %r1642, %r1641, 3;
	mov.b64 	%rd2236, {%r1646, %r1645};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	shr.u64 	%rd2238, %rd2173, 6;
	xor.b64  	%rd2239, %rd2237, %rd2238;
	shf.r.wrap.b32 	%r1647, %r1304, %r1303, 1;
	shf.r.wrap.b32 	%r1648, %r1303, %r1304, 1;
	mov.b64 	%rd2240, {%r1648, %r1647};
	shf.r.wrap.b32 	%r1649, %r1304, %r1303, 8;
	shf.r.wrap.b32 	%r1650, %r1303, %r1304, 8;
	mov.b64 	%rd2241, {%r1650, %r1649};
	xor.b64  	%rd2242, %rd2240, %rd2241;
	shr.u64 	%rd2243, %rd1692, 7;
	xor.b64  	%rd2244, %rd2242, %rd2243;
	add.s64 	%rd2245, %rd2239, %rd1655;
	add.s64 	%rd2246, %rd2245, %rd1988;
	add.s64 	%rd2247, %rd2246, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1651,%dummy}, %rd2233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1652}, %rd2233;
	}
	shf.r.wrap.b32 	%r1653, %r1652, %r1651, 14;
	shf.r.wrap.b32 	%r1654, %r1651, %r1652, 14;
	mov.b64 	%rd2248, {%r1654, %r1653};
	shf.r.wrap.b32 	%r1655, %r1652, %r1651, 18;
	shf.r.wrap.b32 	%r1656, %r1651, %r1652, 18;
	mov.b64 	%rd2249, {%r1656, %r1655};
	xor.b64  	%rd2250, %rd2248, %rd2249;
	shf.l.wrap.b32 	%r1657, %r1651, %r1652, 23;
	shf.l.wrap.b32 	%r1658, %r1652, %r1651, 23;
	mov.b64 	%rd2251, {%r1658, %r1657};
	xor.b64  	%rd2252, %rd2250, %rd2251;
	xor.b64  	%rd2253, %rd2159, %rd2196;
	and.b64  	%rd2254, %rd2253, %rd2233;
	xor.b64  	%rd2255, %rd2254, %rd2159;
	add.s64 	%rd2256, %rd2252, %rd2122;
	add.s64 	%rd2257, %rd2256, %rd2255;
	add.s64 	%rd2258, %rd2257, %rd2247;
	add.s64 	%rd2259, %rd2258, -3880063495543823972;
	and.b64  	%rd2260, %rd2234, %rd2197;
	or.b64  	%rd2261, %rd2234, %rd2197;
	and.b64  	%rd2262, %rd2261, %rd2160;
	or.b64  	%rd2263, %rd2262, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd2234;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 28;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 28;
	mov.b64 	%rd2264, {%r1662, %r1661};
	shf.l.wrap.b32 	%r1663, %r1659, %r1660, 30;
	shf.l.wrap.b32 	%r1664, %r1660, %r1659, 30;
	mov.b64 	%rd2265, {%r1664, %r1663};
	xor.b64  	%rd2266, %rd2264, %rd2265;
	shf.l.wrap.b32 	%r1665, %r1659, %r1660, 25;
	shf.l.wrap.b32 	%r1666, %r1660, %r1659, 25;
	mov.b64 	%rd2267, {%r1666, %r1665};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	add.s64 	%rd2269, %rd2263, %rd2268;
	add.s64 	%rd2270, %rd2259, %rd2123;
	add.s64 	%rd2271, %rd2269, %rd2259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1668}, %rd2210;
	}
	shf.r.wrap.b32 	%r1669, %r1668, %r1667, 19;
	shf.r.wrap.b32 	%r1670, %r1667, %r1668, 19;
	mov.b64 	%rd2272, {%r1670, %r1669};
	shf.l.wrap.b32 	%r1671, %r1667, %r1668, 3;
	shf.l.wrap.b32 	%r1672, %r1668, %r1667, 3;
	mov.b64 	%rd2273, {%r1672, %r1671};
	xor.b64  	%rd2274, %rd2272, %rd2273;
	shr.u64 	%rd2275, %rd2210, 6;
	xor.b64  	%rd2276, %rd2274, %rd2275;
	shf.r.wrap.b32 	%r1673, %r1330, %r1329, 1;
	shf.r.wrap.b32 	%r1674, %r1329, %r1330, 1;
	mov.b64 	%rd2277, {%r1674, %r1673};
	shf.r.wrap.b32 	%r1675, %r1330, %r1329, 8;
	shf.r.wrap.b32 	%r1676, %r1329, %r1330, 8;
	mov.b64 	%rd2278, {%r1676, %r1675};
	xor.b64  	%rd2279, %rd2277, %rd2278;
	shr.u64 	%rd2280, %rd1729, 7;
	xor.b64  	%rd2281, %rd2279, %rd2280;
	add.s64 	%rd2282, %rd2276, %rd1692;
	add.s64 	%rd2283, %rd2282, %rd2025;
	add.s64 	%rd2284, %rd2283, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1677,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1678}, %rd2270;
	}
	shf.r.wrap.b32 	%r1679, %r1678, %r1677, 14;
	shf.r.wrap.b32 	%r1680, %r1677, %r1678, 14;
	mov.b64 	%rd2285, {%r1680, %r1679};
	shf.r.wrap.b32 	%r1681, %r1678, %r1677, 18;
	shf.r.wrap.b32 	%r1682, %r1677, %r1678, 18;
	mov.b64 	%rd2286, {%r1682, %r1681};
	xor.b64  	%rd2287, %rd2285, %rd2286;
	shf.l.wrap.b32 	%r1683, %r1677, %r1678, 23;
	shf.l.wrap.b32 	%r1684, %r1678, %r1677, 23;
	mov.b64 	%rd2288, {%r1684, %r1683};
	xor.b64  	%rd2289, %rd2287, %rd2288;
	xor.b64  	%rd2290, %rd2196, %rd2233;
	and.b64  	%rd2291, %rd2290, %rd2270;
	xor.b64  	%rd2292, %rd2291, %rd2196;
	add.s64 	%rd2293, %rd2289, %rd2159;
	add.s64 	%rd2294, %rd2293, %rd2292;
	add.s64 	%rd2295, %rd2294, %rd2284;
	add.s64 	%rd2296, %rd2295, -3348786107499101689;
	and.b64  	%rd2297, %rd2271, %rd2234;
	or.b64  	%rd2298, %rd2271, %rd2234;
	and.b64  	%rd2299, %rd2298, %rd2197;
	or.b64  	%rd2300, %rd2299, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd2271;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 28;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 28;
	mov.b64 	%rd2301, {%r1688, %r1687};
	shf.l.wrap.b32 	%r1689, %r1685, %r1686, 30;
	shf.l.wrap.b32 	%r1690, %r1686, %r1685, 30;
	mov.b64 	%rd2302, {%r1690, %r1689};
	xor.b64  	%rd2303, %rd2301, %rd2302;
	shf.l.wrap.b32 	%r1691, %r1685, %r1686, 25;
	shf.l.wrap.b32 	%r1692, %r1686, %r1685, 25;
	mov.b64 	%rd2304, {%r1692, %r1691};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	add.s64 	%rd2306, %rd2300, %rd2305;
	add.s64 	%rd2307, %rd2296, %rd2160;
	add.s64 	%rd2308, %rd2306, %rd2296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2247;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 19;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 19;
	mov.b64 	%rd2309, {%r1696, %r1695};
	shf.l.wrap.b32 	%r1697, %r1693, %r1694, 3;
	shf.l.wrap.b32 	%r1698, %r1694, %r1693, 3;
	mov.b64 	%rd2310, {%r1698, %r1697};
	xor.b64  	%rd2311, %rd2309, %rd2310;
	shr.u64 	%rd2312, %rd2247, 6;
	xor.b64  	%rd2313, %rd2311, %rd2312;
	shf.r.wrap.b32 	%r1699, %r1356, %r1355, 1;
	shf.r.wrap.b32 	%r1700, %r1355, %r1356, 1;
	mov.b64 	%rd2314, {%r1700, %r1699};
	shf.r.wrap.b32 	%r1701, %r1356, %r1355, 8;
	shf.r.wrap.b32 	%r1702, %r1355, %r1356, 8;
	mov.b64 	%rd2315, {%r1702, %r1701};
	xor.b64  	%rd2316, %rd2314, %rd2315;
	shr.u64 	%rd2317, %rd1766, 7;
	xor.b64  	%rd2318, %rd2316, %rd2317;
	add.s64 	%rd2319, %rd2313, %rd1729;
	add.s64 	%rd2320, %rd2319, %rd2062;
	add.s64 	%rd2321, %rd2320, %rd2318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2307;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 14;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 14;
	mov.b64 	%rd2322, {%r1706, %r1705};
	shf.r.wrap.b32 	%r1707, %r1704, %r1703, 18;
	shf.r.wrap.b32 	%r1708, %r1703, %r1704, 18;
	mov.b64 	%rd2323, {%r1708, %r1707};
	xor.b64  	%rd2324, %rd2322, %rd2323;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 23;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 23;
	mov.b64 	%rd2325, {%r1710, %r1709};
	xor.b64  	%rd2326, %rd2324, %rd2325;
	xor.b64  	%rd2327, %rd2233, %rd2270;
	and.b64  	%rd2328, %rd2327, %rd2307;
	xor.b64  	%rd2329, %rd2328, %rd2233;
	add.s64 	%rd2330, %rd2326, %rd2196;
	add.s64 	%rd2331, %rd2330, %rd2329;
	add.s64 	%rd2332, %rd2331, %rd2321;
	add.s64 	%rd2333, %rd2332, -1523767162380948706;
	and.b64  	%rd2334, %rd2308, %rd2271;
	or.b64  	%rd2335, %rd2308, %rd2271;
	and.b64  	%rd2336, %rd2335, %rd2234;
	or.b64  	%rd2337, %rd2336, %rd2334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2308;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 28;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 28;
	mov.b64 	%rd2338, {%r1714, %r1713};
	shf.l.wrap.b32 	%r1715, %r1711, %r1712, 30;
	shf.l.wrap.b32 	%r1716, %r1712, %r1711, 30;
	mov.b64 	%rd2339, {%r1716, %r1715};
	xor.b64  	%rd2340, %rd2338, %rd2339;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 25;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 25;
	mov.b64 	%rd2341, {%r1718, %r1717};
	xor.b64  	%rd2342, %rd2340, %rd2341;
	add.s64 	%rd2343, %rd2337, %rd2342;
	add.s64 	%rd2344, %rd2333, %rd2197;
	add.s64 	%rd2345, %rd2343, %rd2333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2284;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 19;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 19;
	mov.b64 	%rd2346, {%r1722, %r1721};
	shf.l.wrap.b32 	%r1723, %r1719, %r1720, 3;
	shf.l.wrap.b32 	%r1724, %r1720, %r1719, 3;
	mov.b64 	%rd2347, {%r1724, %r1723};
	xor.b64  	%rd2348, %rd2346, %rd2347;
	shr.u64 	%rd2349, %rd2284, 6;
	xor.b64  	%rd2350, %rd2348, %rd2349;
	shf.r.wrap.b32 	%r1725, %r1382, %r1381, 1;
	shf.r.wrap.b32 	%r1726, %r1381, %r1382, 1;
	mov.b64 	%rd2351, {%r1726, %r1725};
	shf.r.wrap.b32 	%r1727, %r1382, %r1381, 8;
	shf.r.wrap.b32 	%r1728, %r1381, %r1382, 8;
	mov.b64 	%rd2352, {%r1728, %r1727};
	xor.b64  	%rd2353, %rd2351, %rd2352;
	shr.u64 	%rd2354, %rd1803, 7;
	xor.b64  	%rd2355, %rd2353, %rd2354;
	add.s64 	%rd2356, %rd2350, %rd1766;
	add.s64 	%rd2357, %rd2356, %rd2099;
	add.s64 	%rd2358, %rd2357, %rd2355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1729,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1730}, %rd2344;
	}
	shf.r.wrap.b32 	%r1731, %r1730, %r1729, 14;
	shf.r.wrap.b32 	%r1732, %r1729, %r1730, 14;
	mov.b64 	%rd2359, {%r1732, %r1731};
	shf.r.wrap.b32 	%r1733, %r1730, %r1729, 18;
	shf.r.wrap.b32 	%r1734, %r1729, %r1730, 18;
	mov.b64 	%rd2360, {%r1734, %r1733};
	xor.b64  	%rd2361, %rd2359, %rd2360;
	shf.l.wrap.b32 	%r1735, %r1729, %r1730, 23;
	shf.l.wrap.b32 	%r1736, %r1730, %r1729, 23;
	mov.b64 	%rd2362, {%r1736, %r1735};
	xor.b64  	%rd2363, %rd2361, %rd2362;
	xor.b64  	%rd2364, %rd2270, %rd2307;
	and.b64  	%rd2365, %rd2364, %rd2344;
	xor.b64  	%rd2366, %rd2365, %rd2270;
	add.s64 	%rd2367, %rd2363, %rd2233;
	add.s64 	%rd2368, %rd2367, %rd2366;
	add.s64 	%rd2369, %rd2368, %rd2358;
	add.s64 	%rd2370, %rd2369, -757361751448694408;
	and.b64  	%rd2371, %rd2345, %rd2308;
	or.b64  	%rd2372, %rd2345, %rd2308;
	and.b64  	%rd2373, %rd2372, %rd2271;
	or.b64  	%rd2374, %rd2373, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd2345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd2345;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 28;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 28;
	mov.b64 	%rd2375, {%r1740, %r1739};
	shf.l.wrap.b32 	%r1741, %r1737, %r1738, 30;
	shf.l.wrap.b32 	%r1742, %r1738, %r1737, 30;
	mov.b64 	%rd2376, {%r1742, %r1741};
	xor.b64  	%rd2377, %rd2375, %rd2376;
	shf.l.wrap.b32 	%r1743, %r1737, %r1738, 25;
	shf.l.wrap.b32 	%r1744, %r1738, %r1737, 25;
	mov.b64 	%rd2378, {%r1744, %r1743};
	xor.b64  	%rd2379, %rd2377, %rd2378;
	add.s64 	%rd2380, %rd2374, %rd2379;
	add.s64 	%rd2381, %rd2370, %rd2234;
	add.s64 	%rd2382, %rd2380, %rd2370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd2321;
	}
	shf.r.wrap.b32 	%r1747, %r1746, %r1745, 19;
	shf.r.wrap.b32 	%r1748, %r1745, %r1746, 19;
	mov.b64 	%rd2383, {%r1748, %r1747};
	shf.l.wrap.b32 	%r1749, %r1745, %r1746, 3;
	shf.l.wrap.b32 	%r1750, %r1746, %r1745, 3;
	mov.b64 	%rd2384, {%r1750, %r1749};
	xor.b64  	%rd2385, %rd2383, %rd2384;
	shr.u64 	%rd2386, %rd2321, 6;
	xor.b64  	%rd2387, %rd2385, %rd2386;
	shf.r.wrap.b32 	%r1751, %r1408, %r1407, 1;
	shf.r.wrap.b32 	%r1752, %r1407, %r1408, 1;
	mov.b64 	%rd2388, {%r1752, %r1751};
	shf.r.wrap.b32 	%r1753, %r1408, %r1407, 8;
	shf.r.wrap.b32 	%r1754, %r1407, %r1408, 8;
	mov.b64 	%rd2389, {%r1754, %r1753};
	xor.b64  	%rd2390, %rd2388, %rd2389;
	shr.u64 	%rd2391, %rd1840, 7;
	xor.b64  	%rd2392, %rd2390, %rd2391;
	add.s64 	%rd2393, %rd2387, %rd1803;
	add.s64 	%rd2394, %rd2393, %rd2136;
	add.s64 	%rd2395, %rd2394, %rd2392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1755,%dummy}, %rd2381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1756}, %rd2381;
	}
	shf.r.wrap.b32 	%r1757, %r1756, %r1755, 14;
	shf.r.wrap.b32 	%r1758, %r1755, %r1756, 14;
	mov.b64 	%rd2396, {%r1758, %r1757};
	shf.r.wrap.b32 	%r1759, %r1756, %r1755, 18;
	shf.r.wrap.b32 	%r1760, %r1755, %r1756, 18;
	mov.b64 	%rd2397, {%r1760, %r1759};
	xor.b64  	%rd2398, %rd2396, %rd2397;
	shf.l.wrap.b32 	%r1761, %r1755, %r1756, 23;
	shf.l.wrap.b32 	%r1762, %r1756, %r1755, 23;
	mov.b64 	%rd2399, {%r1762, %r1761};
	xor.b64  	%rd2400, %rd2398, %rd2399;
	xor.b64  	%rd2401, %rd2307, %rd2344;
	and.b64  	%rd2402, %rd2401, %rd2381;
	xor.b64  	%rd2403, %rd2402, %rd2307;
	add.s64 	%rd2404, %rd2400, %rd2270;
	add.s64 	%rd2405, %rd2404, %rd2403;
	add.s64 	%rd2406, %rd2405, %rd2395;
	add.s64 	%rd2407, %rd2406, 500013540394364858;
	and.b64  	%rd2408, %rd2382, %rd2345;
	or.b64  	%rd2409, %rd2382, %rd2345;
	and.b64  	%rd2410, %rd2409, %rd2308;
	or.b64  	%rd2411, %rd2410, %rd2408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd2382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd2382;
	}
	shf.r.wrap.b32 	%r1765, %r1764, %r1763, 28;
	shf.r.wrap.b32 	%r1766, %r1763, %r1764, 28;
	mov.b64 	%rd2412, {%r1766, %r1765};
	shf.l.wrap.b32 	%r1767, %r1763, %r1764, 30;
	shf.l.wrap.b32 	%r1768, %r1764, %r1763, 30;
	mov.b64 	%rd2413, {%r1768, %r1767};
	xor.b64  	%rd2414, %rd2412, %rd2413;
	shf.l.wrap.b32 	%r1769, %r1763, %r1764, 25;
	shf.l.wrap.b32 	%r1770, %r1764, %r1763, 25;
	mov.b64 	%rd2415, {%r1770, %r1769};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	add.s64 	%rd2417, %rd2411, %rd2416;
	add.s64 	%rd2418, %rd2407, %rd2271;
	add.s64 	%rd2419, %rd2417, %rd2407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd2358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd2358;
	}
	shf.r.wrap.b32 	%r1773, %r1772, %r1771, 19;
	shf.r.wrap.b32 	%r1774, %r1771, %r1772, 19;
	mov.b64 	%rd2420, {%r1774, %r1773};
	shf.l.wrap.b32 	%r1775, %r1771, %r1772, 3;
	shf.l.wrap.b32 	%r1776, %r1772, %r1771, 3;
	mov.b64 	%rd2421, {%r1776, %r1775};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	shr.u64 	%rd2423, %rd2358, 6;
	xor.b64  	%rd2424, %rd2422, %rd2423;
	shf.r.wrap.b32 	%r1777, %r1434, %r1433, 1;
	shf.r.wrap.b32 	%r1778, %r1433, %r1434, 1;
	mov.b64 	%rd2425, {%r1778, %r1777};
	shf.r.wrap.b32 	%r1779, %r1434, %r1433, 8;
	shf.r.wrap.b32 	%r1780, %r1433, %r1434, 8;
	mov.b64 	%rd2426, {%r1780, %r1779};
	xor.b64  	%rd2427, %rd2425, %rd2426;
	shr.u64 	%rd2428, %rd1877, 7;
	xor.b64  	%rd2429, %rd2427, %rd2428;
	add.s64 	%rd2430, %rd2424, %rd1840;
	add.s64 	%rd2431, %rd2430, %rd2173;
	add.s64 	%rd2432, %rd2431, %rd2429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1781,%dummy}, %rd2418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1782}, %rd2418;
	}
	shf.r.wrap.b32 	%r1783, %r1782, %r1781, 14;
	shf.r.wrap.b32 	%r1784, %r1781, %r1782, 14;
	mov.b64 	%rd2433, {%r1784, %r1783};
	shf.r.wrap.b32 	%r1785, %r1782, %r1781, 18;
	shf.r.wrap.b32 	%r1786, %r1781, %r1782, 18;
	mov.b64 	%rd2434, {%r1786, %r1785};
	xor.b64  	%rd2435, %rd2433, %rd2434;
	shf.l.wrap.b32 	%r1787, %r1781, %r1782, 23;
	shf.l.wrap.b32 	%r1788, %r1782, %r1781, 23;
	mov.b64 	%rd2436, {%r1788, %r1787};
	xor.b64  	%rd2437, %rd2435, %rd2436;
	xor.b64  	%rd2438, %rd2344, %rd2381;
	and.b64  	%rd2439, %rd2438, %rd2418;
	xor.b64  	%rd2440, %rd2439, %rd2344;
	add.s64 	%rd2441, %rd2437, %rd2307;
	add.s64 	%rd2442, %rd2441, %rd2440;
	add.s64 	%rd2443, %rd2442, %rd2432;
	add.s64 	%rd2444, %rd2443, 748580250866718886;
	and.b64  	%rd2445, %rd2419, %rd2382;
	or.b64  	%rd2446, %rd2419, %rd2382;
	and.b64  	%rd2447, %rd2446, %rd2345;
	or.b64  	%rd2448, %rd2447, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1789,%dummy}, %rd2419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1790}, %rd2419;
	}
	shf.r.wrap.b32 	%r1791, %r1790, %r1789, 28;
	shf.r.wrap.b32 	%r1792, %r1789, %r1790, 28;
	mov.b64 	%rd2449, {%r1792, %r1791};
	shf.l.wrap.b32 	%r1793, %r1789, %r1790, 30;
	shf.l.wrap.b32 	%r1794, %r1790, %r1789, 30;
	mov.b64 	%rd2450, {%r1794, %r1793};
	xor.b64  	%rd2451, %rd2449, %rd2450;
	shf.l.wrap.b32 	%r1795, %r1789, %r1790, 25;
	shf.l.wrap.b32 	%r1796, %r1790, %r1789, 25;
	mov.b64 	%rd2452, {%r1796, %r1795};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	add.s64 	%rd2454, %rd2448, %rd2453;
	add.s64 	%rd2455, %rd2444, %rd2308;
	add.s64 	%rd2456, %rd2454, %rd2444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd2395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd2395;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 19;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 19;
	mov.b64 	%rd2457, {%r1800, %r1799};
	shf.l.wrap.b32 	%r1801, %r1797, %r1798, 3;
	shf.l.wrap.b32 	%r1802, %r1798, %r1797, 3;
	mov.b64 	%rd2458, {%r1802, %r1801};
	xor.b64  	%rd2459, %rd2457, %rd2458;
	shr.u64 	%rd2460, %rd2395, 6;
	xor.b64  	%rd2461, %rd2459, %rd2460;
	shf.r.wrap.b32 	%r1803, %r1460, %r1459, 1;
	shf.r.wrap.b32 	%r1804, %r1459, %r1460, 1;
	mov.b64 	%rd2462, {%r1804, %r1803};
	shf.r.wrap.b32 	%r1805, %r1460, %r1459, 8;
	shf.r.wrap.b32 	%r1806, %r1459, %r1460, 8;
	mov.b64 	%rd2463, {%r1806, %r1805};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	shr.u64 	%rd2465, %rd1914, 7;
	xor.b64  	%rd2466, %rd2464, %rd2465;
	add.s64 	%rd2467, %rd2461, %rd1877;
	add.s64 	%rd2468, %rd2467, %rd2210;
	add.s64 	%rd2469, %rd2468, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2455;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 14;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 14;
	mov.b64 	%rd2470, {%r1810, %r1809};
	shf.r.wrap.b32 	%r1811, %r1808, %r1807, 18;
	shf.r.wrap.b32 	%r1812, %r1807, %r1808, 18;
	mov.b64 	%rd2471, {%r1812, %r1811};
	xor.b64  	%rd2472, %rd2470, %rd2471;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 23;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 23;
	mov.b64 	%rd2473, {%r1814, %r1813};
	xor.b64  	%rd2474, %rd2472, %rd2473;
	xor.b64  	%rd2475, %rd2381, %rd2418;
	and.b64  	%rd2476, %rd2475, %rd2455;
	xor.b64  	%rd2477, %rd2476, %rd2381;
	add.s64 	%rd2478, %rd2474, %rd2344;
	add.s64 	%rd2479, %rd2478, %rd2477;
	add.s64 	%rd2480, %rd2479, %rd2469;
	add.s64 	%rd2481, %rd2480, 1242879168328830382;
	and.b64  	%rd2482, %rd2456, %rd2419;
	or.b64  	%rd2483, %rd2456, %rd2419;
	and.b64  	%rd2484, %rd2483, %rd2382;
	or.b64  	%rd2485, %rd2484, %rd2482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2456;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 28;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 28;
	mov.b64 	%rd2486, {%r1818, %r1817};
	shf.l.wrap.b32 	%r1819, %r1815, %r1816, 30;
	shf.l.wrap.b32 	%r1820, %r1816, %r1815, 30;
	mov.b64 	%rd2487, {%r1820, %r1819};
	xor.b64  	%rd2488, %rd2486, %rd2487;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 25;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 25;
	mov.b64 	%rd2489, {%r1822, %r1821};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	add.s64 	%rd2491, %rd2485, %rd2490;
	add.s64 	%rd2492, %rd2481, %rd2345;
	add.s64 	%rd2493, %rd2491, %rd2481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2432;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 19;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 19;
	mov.b64 	%rd2494, {%r1826, %r1825};
	shf.l.wrap.b32 	%r1827, %r1823, %r1824, 3;
	shf.l.wrap.b32 	%r1828, %r1824, %r1823, 3;
	mov.b64 	%rd2495, {%r1828, %r1827};
	xor.b64  	%rd2496, %rd2494, %rd2495;
	shr.u64 	%rd2497, %rd2432, 6;
	xor.b64  	%rd2498, %rd2496, %rd2497;
	shf.r.wrap.b32 	%r1829, %r1486, %r1485, 1;
	shf.r.wrap.b32 	%r1830, %r1485, %r1486, 1;
	mov.b64 	%rd2499, {%r1830, %r1829};
	shf.r.wrap.b32 	%r1831, %r1486, %r1485, 8;
	shf.r.wrap.b32 	%r1832, %r1485, %r1486, 8;
	mov.b64 	%rd2500, {%r1832, %r1831};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	shr.u64 	%rd2502, %rd1951, 7;
	xor.b64  	%rd2503, %rd2501, %rd2502;
	add.s64 	%rd2504, %rd2498, %rd1914;
	add.s64 	%rd2505, %rd2504, %rd2247;
	add.s64 	%rd2506, %rd2505, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1833,%dummy}, %rd2492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1834}, %rd2492;
	}
	shf.r.wrap.b32 	%r1835, %r1834, %r1833, 14;
	shf.r.wrap.b32 	%r1836, %r1833, %r1834, 14;
	mov.b64 	%rd2507, {%r1836, %r1835};
	shf.r.wrap.b32 	%r1837, %r1834, %r1833, 18;
	shf.r.wrap.b32 	%r1838, %r1833, %r1834, 18;
	mov.b64 	%rd2508, {%r1838, %r1837};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	shf.l.wrap.b32 	%r1839, %r1833, %r1834, 23;
	shf.l.wrap.b32 	%r1840, %r1834, %r1833, 23;
	mov.b64 	%rd2510, {%r1840, %r1839};
	xor.b64  	%rd2511, %rd2509, %rd2510;
	xor.b64  	%rd2512, %rd2418, %rd2455;
	and.b64  	%rd2513, %rd2512, %rd2492;
	xor.b64  	%rd2514, %rd2513, %rd2418;
	add.s64 	%rd2515, %rd2511, %rd2381;
	add.s64 	%rd2516, %rd2515, %rd2514;
	add.s64 	%rd2517, %rd2516, %rd2506;
	add.s64 	%rd2518, %rd2517, 1977374033974150939;
	and.b64  	%rd2519, %rd2493, %rd2456;
	or.b64  	%rd2520, %rd2493, %rd2456;
	and.b64  	%rd2521, %rd2520, %rd2419;
	or.b64  	%rd2522, %rd2521, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd2493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd2493;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 28;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 28;
	mov.b64 	%rd2523, {%r1844, %r1843};
	shf.l.wrap.b32 	%r1845, %r1841, %r1842, 30;
	shf.l.wrap.b32 	%r1846, %r1842, %r1841, 30;
	mov.b64 	%rd2524, {%r1846, %r1845};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	shf.l.wrap.b32 	%r1847, %r1841, %r1842, 25;
	shf.l.wrap.b32 	%r1848, %r1842, %r1841, 25;
	mov.b64 	%rd2526, {%r1848, %r1847};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	add.s64 	%rd2528, %rd2522, %rd2527;
	add.s64 	%rd2529, %rd2518, %rd2382;
	add.s64 	%rd2530, %rd2528, %rd2518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd2469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd2469;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 19;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 19;
	mov.b64 	%rd2531, {%r1852, %r1851};
	shf.l.wrap.b32 	%r1853, %r1849, %r1850, 3;
	shf.l.wrap.b32 	%r1854, %r1850, %r1849, 3;
	mov.b64 	%rd2532, {%r1854, %r1853};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	shr.u64 	%rd2534, %rd2469, 6;
	xor.b64  	%rd2535, %rd2533, %rd2534;
	shf.r.wrap.b32 	%r1855, %r1512, %r1511, 1;
	shf.r.wrap.b32 	%r1856, %r1511, %r1512, 1;
	mov.b64 	%rd2536, {%r1856, %r1855};
	shf.r.wrap.b32 	%r1857, %r1512, %r1511, 8;
	shf.r.wrap.b32 	%r1858, %r1511, %r1512, 8;
	mov.b64 	%rd2537, {%r1858, %r1857};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	shr.u64 	%rd2539, %rd1988, 7;
	xor.b64  	%rd2540, %rd2538, %rd2539;
	add.s64 	%rd2541, %rd2535, %rd1951;
	add.s64 	%rd2542, %rd2541, %rd2284;
	add.s64 	%rd2543, %rd2542, %rd2540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1859,%dummy}, %rd2529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1860}, %rd2529;
	}
	shf.r.wrap.b32 	%r1861, %r1860, %r1859, 14;
	shf.r.wrap.b32 	%r1862, %r1859, %r1860, 14;
	mov.b64 	%rd2544, {%r1862, %r1861};
	shf.r.wrap.b32 	%r1863, %r1860, %r1859, 18;
	shf.r.wrap.b32 	%r1864, %r1859, %r1860, 18;
	mov.b64 	%rd2545, {%r1864, %r1863};
	xor.b64  	%rd2546, %rd2544, %rd2545;
	shf.l.wrap.b32 	%r1865, %r1859, %r1860, 23;
	shf.l.wrap.b32 	%r1866, %r1860, %r1859, 23;
	mov.b64 	%rd2547, {%r1866, %r1865};
	xor.b64  	%rd2548, %rd2546, %rd2547;
	xor.b64  	%rd2549, %rd2455, %rd2492;
	and.b64  	%rd2550, %rd2549, %rd2529;
	xor.b64  	%rd2551, %rd2550, %rd2455;
	add.s64 	%rd2552, %rd2548, %rd2418;
	add.s64 	%rd2553, %rd2552, %rd2551;
	add.s64 	%rd2554, %rd2553, %rd2543;
	add.s64 	%rd2555, %rd2554, 2944078676154940804;
	and.b64  	%rd2556, %rd2530, %rd2493;
	or.b64  	%rd2557, %rd2530, %rd2493;
	and.b64  	%rd2558, %rd2557, %rd2456;
	or.b64  	%rd2559, %rd2558, %rd2556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1867,%dummy}, %rd2530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1868}, %rd2530;
	}
	shf.r.wrap.b32 	%r1869, %r1868, %r1867, 28;
	shf.r.wrap.b32 	%r1870, %r1867, %r1868, 28;
	mov.b64 	%rd2560, {%r1870, %r1869};
	shf.l.wrap.b32 	%r1871, %r1867, %r1868, 30;
	shf.l.wrap.b32 	%r1872, %r1868, %r1867, 30;
	mov.b64 	%rd2561, {%r1872, %r1871};
	xor.b64  	%rd2562, %rd2560, %rd2561;
	shf.l.wrap.b32 	%r1873, %r1867, %r1868, 25;
	shf.l.wrap.b32 	%r1874, %r1868, %r1867, 25;
	mov.b64 	%rd2563, {%r1874, %r1873};
	xor.b64  	%rd2564, %rd2562, %rd2563;
	add.s64 	%rd2565, %rd2559, %rd2564;
	add.s64 	%rd2566, %rd2555, %rd2419;
	add.s64 	%rd2567, %rd2565, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1875,%dummy}, %rd2506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1876}, %rd2506;
	}
	shf.r.wrap.b32 	%r1877, %r1876, %r1875, 19;
	shf.r.wrap.b32 	%r1878, %r1875, %r1876, 19;
	mov.b64 	%rd2568, {%r1878, %r1877};
	shf.l.wrap.b32 	%r1879, %r1875, %r1876, 3;
	shf.l.wrap.b32 	%r1880, %r1876, %r1875, 3;
	mov.b64 	%rd2569, {%r1880, %r1879};
	xor.b64  	%rd2570, %rd2568, %rd2569;
	shr.u64 	%rd2571, %rd2506, 6;
	xor.b64  	%rd2572, %rd2570, %rd2571;
	shf.r.wrap.b32 	%r1881, %r1538, %r1537, 1;
	shf.r.wrap.b32 	%r1882, %r1537, %r1538, 1;
	mov.b64 	%rd2573, {%r1882, %r1881};
	shf.r.wrap.b32 	%r1883, %r1538, %r1537, 8;
	shf.r.wrap.b32 	%r1884, %r1537, %r1538, 8;
	mov.b64 	%rd2574, {%r1884, %r1883};
	xor.b64  	%rd2575, %rd2573, %rd2574;
	shr.u64 	%rd2576, %rd2025, 7;
	xor.b64  	%rd2577, %rd2575, %rd2576;
	add.s64 	%rd2578, %rd2572, %rd1988;
	add.s64 	%rd2579, %rd2578, %rd2321;
	add.s64 	%rd2580, %rd2579, %rd2577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1885,%dummy}, %rd2566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1886}, %rd2566;
	}
	shf.r.wrap.b32 	%r1887, %r1886, %r1885, 14;
	shf.r.wrap.b32 	%r1888, %r1885, %r1886, 14;
	mov.b64 	%rd2581, {%r1888, %r1887};
	shf.r.wrap.b32 	%r1889, %r1886, %r1885, 18;
	shf.r.wrap.b32 	%r1890, %r1885, %r1886, 18;
	mov.b64 	%rd2582, {%r1890, %r1889};
	xor.b64  	%rd2583, %rd2581, %rd2582;
	shf.l.wrap.b32 	%r1891, %r1885, %r1886, 23;
	shf.l.wrap.b32 	%r1892, %r1886, %r1885, 23;
	mov.b64 	%rd2584, {%r1892, %r1891};
	xor.b64  	%rd2585, %rd2583, %rd2584;
	xor.b64  	%rd2586, %rd2492, %rd2529;
	and.b64  	%rd2587, %rd2586, %rd2566;
	xor.b64  	%rd2588, %rd2587, %rd2492;
	add.s64 	%rd2589, %rd2585, %rd2455;
	add.s64 	%rd2590, %rd2589, %rd2588;
	add.s64 	%rd2591, %rd2590, %rd2580;
	add.s64 	%rd2592, %rd2591, 3659926193048069267;
	and.b64  	%rd2593, %rd2567, %rd2530;
	or.b64  	%rd2594, %rd2567, %rd2530;
	and.b64  	%rd2595, %rd2594, %rd2493;
	or.b64  	%rd2596, %rd2595, %rd2593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1893,%dummy}, %rd2567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1894}, %rd2567;
	}
	shf.r.wrap.b32 	%r1895, %r1894, %r1893, 28;
	shf.r.wrap.b32 	%r1896, %r1893, %r1894, 28;
	mov.b64 	%rd2597, {%r1896, %r1895};
	shf.l.wrap.b32 	%r1897, %r1893, %r1894, 30;
	shf.l.wrap.b32 	%r1898, %r1894, %r1893, 30;
	mov.b64 	%rd2598, {%r1898, %r1897};
	xor.b64  	%rd2599, %rd2597, %rd2598;
	shf.l.wrap.b32 	%r1899, %r1893, %r1894, 25;
	shf.l.wrap.b32 	%r1900, %r1894, %r1893, 25;
	mov.b64 	%rd2600, {%r1900, %r1899};
	xor.b64  	%rd2601, %rd2599, %rd2600;
	add.s64 	%rd2602, %rd2596, %rd2601;
	add.s64 	%rd2603, %rd2592, %rd2456;
	add.s64 	%rd2604, %rd2602, %rd2592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1901,%dummy}, %rd2543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1902}, %rd2543;
	}
	shf.r.wrap.b32 	%r1903, %r1902, %r1901, 19;
	shf.r.wrap.b32 	%r1904, %r1901, %r1902, 19;
	mov.b64 	%rd2605, {%r1904, %r1903};
	shf.l.wrap.b32 	%r1905, %r1901, %r1902, 3;
	shf.l.wrap.b32 	%r1906, %r1902, %r1901, 3;
	mov.b64 	%rd2606, {%r1906, %r1905};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	shr.u64 	%rd2608, %rd2543, 6;
	xor.b64  	%rd2609, %rd2607, %rd2608;
	shf.r.wrap.b32 	%r1907, %r1564, %r1563, 1;
	shf.r.wrap.b32 	%r1908, %r1563, %r1564, 1;
	mov.b64 	%rd2610, {%r1908, %r1907};
	shf.r.wrap.b32 	%r1909, %r1564, %r1563, 8;
	shf.r.wrap.b32 	%r1910, %r1563, %r1564, 8;
	mov.b64 	%rd2611, {%r1910, %r1909};
	xor.b64  	%rd2612, %rd2610, %rd2611;
	shr.u64 	%rd2613, %rd2062, 7;
	xor.b64  	%rd2614, %rd2612, %rd2613;
	add.s64 	%rd2615, %rd2609, %rd2025;
	add.s64 	%rd2616, %rd2615, %rd2358;
	add.s64 	%rd2617, %rd2616, %rd2614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1911,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1912}, %rd2603;
	}
	shf.r.wrap.b32 	%r1913, %r1912, %r1911, 14;
	shf.r.wrap.b32 	%r1914, %r1911, %r1912, 14;
	mov.b64 	%rd2618, {%r1914, %r1913};
	shf.r.wrap.b32 	%r1915, %r1912, %r1911, 18;
	shf.r.wrap.b32 	%r1916, %r1911, %r1912, 18;
	mov.b64 	%rd2619, {%r1916, %r1915};
	xor.b64  	%rd2620, %rd2618, %rd2619;
	shf.l.wrap.b32 	%r1917, %r1911, %r1912, 23;
	shf.l.wrap.b32 	%r1918, %r1912, %r1911, 23;
	mov.b64 	%rd2621, {%r1918, %r1917};
	xor.b64  	%rd2622, %rd2620, %rd2621;
	xor.b64  	%rd2623, %rd2529, %rd2566;
	and.b64  	%rd2624, %rd2623, %rd2603;
	xor.b64  	%rd2625, %rd2624, %rd2529;
	add.s64 	%rd2626, %rd2622, %rd2492;
	add.s64 	%rd2627, %rd2626, %rd2625;
	add.s64 	%rd2628, %rd2627, %rd2617;
	add.s64 	%rd2629, %rd2628, 4368137639120453308;
	and.b64  	%rd2630, %rd2604, %rd2567;
	or.b64  	%rd2631, %rd2604, %rd2567;
	and.b64  	%rd2632, %rd2631, %rd2530;
	or.b64  	%rd2633, %rd2632, %rd2630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd2604;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 28;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 28;
	mov.b64 	%rd2634, {%r1922, %r1921};
	shf.l.wrap.b32 	%r1923, %r1919, %r1920, 30;
	shf.l.wrap.b32 	%r1924, %r1920, %r1919, 30;
	mov.b64 	%rd2635, {%r1924, %r1923};
	xor.b64  	%rd2636, %rd2634, %rd2635;
	shf.l.wrap.b32 	%r1925, %r1919, %r1920, 25;
	shf.l.wrap.b32 	%r1926, %r1920, %r1919, 25;
	mov.b64 	%rd2637, {%r1926, %r1925};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	add.s64 	%rd2639, %rd2633, %rd2638;
	add.s64 	%rd2640, %rd2629, %rd2493;
	add.s64 	%rd2641, %rd2639, %rd2629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1927,%dummy}, %rd2580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1928}, %rd2580;
	}
	shf.r.wrap.b32 	%r1929, %r1928, %r1927, 19;
	shf.r.wrap.b32 	%r1930, %r1927, %r1928, 19;
	mov.b64 	%rd2642, {%r1930, %r1929};
	shf.l.wrap.b32 	%r1931, %r1927, %r1928, 3;
	shf.l.wrap.b32 	%r1932, %r1928, %r1927, 3;
	mov.b64 	%rd2643, {%r1932, %r1931};
	xor.b64  	%rd2644, %rd2642, %rd2643;
	shr.u64 	%rd2645, %rd2580, 6;
	xor.b64  	%rd2646, %rd2644, %rd2645;
	shf.r.wrap.b32 	%r1933, %r1590, %r1589, 1;
	shf.r.wrap.b32 	%r1934, %r1589, %r1590, 1;
	mov.b64 	%rd2647, {%r1934, %r1933};
	shf.r.wrap.b32 	%r1935, %r1590, %r1589, 8;
	shf.r.wrap.b32 	%r1936, %r1589, %r1590, 8;
	mov.b64 	%rd2648, {%r1936, %r1935};
	xor.b64  	%rd2649, %rd2647, %rd2648;
	shr.u64 	%rd2650, %rd2099, 7;
	xor.b64  	%rd2651, %rd2649, %rd2650;
	add.s64 	%rd2652, %rd2646, %rd2062;
	add.s64 	%rd2653, %rd2652, %rd2395;
	add.s64 	%rd2654, %rd2653, %rd2651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1937,%dummy}, %rd2640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1938}, %rd2640;
	}
	shf.r.wrap.b32 	%r1939, %r1938, %r1937, 14;
	shf.r.wrap.b32 	%r1940, %r1937, %r1938, 14;
	mov.b64 	%rd2655, {%r1940, %r1939};
	shf.r.wrap.b32 	%r1941, %r1938, %r1937, 18;
	shf.r.wrap.b32 	%r1942, %r1937, %r1938, 18;
	mov.b64 	%rd2656, {%r1942, %r1941};
	xor.b64  	%rd2657, %rd2655, %rd2656;
	shf.l.wrap.b32 	%r1943, %r1937, %r1938, 23;
	shf.l.wrap.b32 	%r1944, %r1938, %r1937, 23;
	mov.b64 	%rd2658, {%r1944, %r1943};
	xor.b64  	%rd2659, %rd2657, %rd2658;
	xor.b64  	%rd2660, %rd2566, %rd2603;
	and.b64  	%rd2661, %rd2660, %rd2640;
	xor.b64  	%rd2662, %rd2661, %rd2566;
	add.s64 	%rd2663, %rd2659, %rd2529;
	add.s64 	%rd2664, %rd2663, %rd2662;
	add.s64 	%rd2665, %rd2664, %rd2654;
	add.s64 	%rd2666, %rd2665, 4836135668995329356;
	and.b64  	%rd2667, %rd2641, %rd2604;
	or.b64  	%rd2668, %rd2641, %rd2604;
	and.b64  	%rd2669, %rd2668, %rd2567;
	or.b64  	%rd2670, %rd2669, %rd2667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1945,%dummy}, %rd2641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1946}, %rd2641;
	}
	shf.r.wrap.b32 	%r1947, %r1946, %r1945, 28;
	shf.r.wrap.b32 	%r1948, %r1945, %r1946, 28;
	mov.b64 	%rd2671, {%r1948, %r1947};
	shf.l.wrap.b32 	%r1949, %r1945, %r1946, 30;
	shf.l.wrap.b32 	%r1950, %r1946, %r1945, 30;
	mov.b64 	%rd2672, {%r1950, %r1949};
	xor.b64  	%rd2673, %rd2671, %rd2672;
	shf.l.wrap.b32 	%r1951, %r1945, %r1946, 25;
	shf.l.wrap.b32 	%r1952, %r1946, %r1945, 25;
	mov.b64 	%rd2674, {%r1952, %r1951};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	add.s64 	%rd2676, %rd2670, %rd2675;
	add.s64 	%rd2677, %rd2666, %rd2530;
	add.s64 	%rd2678, %rd2676, %rd2666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1954}, %rd2617;
	}
	shf.r.wrap.b32 	%r1955, %r1954, %r1953, 19;
	shf.r.wrap.b32 	%r1956, %r1953, %r1954, 19;
	mov.b64 	%rd2679, {%r1956, %r1955};
	shf.l.wrap.b32 	%r1957, %r1953, %r1954, 3;
	shf.l.wrap.b32 	%r1958, %r1954, %r1953, 3;
	mov.b64 	%rd2680, {%r1958, %r1957};
	xor.b64  	%rd2681, %rd2679, %rd2680;
	shr.u64 	%rd2682, %rd2617, 6;
	xor.b64  	%rd2683, %rd2681, %rd2682;
	shf.r.wrap.b32 	%r1959, %r1616, %r1615, 1;
	shf.r.wrap.b32 	%r1960, %r1615, %r1616, 1;
	mov.b64 	%rd2684, {%r1960, %r1959};
	shf.r.wrap.b32 	%r1961, %r1616, %r1615, 8;
	shf.r.wrap.b32 	%r1962, %r1615, %r1616, 8;
	mov.b64 	%rd2685, {%r1962, %r1961};
	xor.b64  	%rd2686, %rd2684, %rd2685;
	shr.u64 	%rd2687, %rd2136, 7;
	xor.b64  	%rd2688, %rd2686, %rd2687;
	add.s64 	%rd2689, %rd2683, %rd2099;
	add.s64 	%rd2690, %rd2689, %rd2432;
	add.s64 	%rd2691, %rd2690, %rd2688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1963,%dummy}, %rd2677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1964}, %rd2677;
	}
	shf.r.wrap.b32 	%r1965, %r1964, %r1963, 14;
	shf.r.wrap.b32 	%r1966, %r1963, %r1964, 14;
	mov.b64 	%rd2692, {%r1966, %r1965};
	shf.r.wrap.b32 	%r1967, %r1964, %r1963, 18;
	shf.r.wrap.b32 	%r1968, %r1963, %r1964, 18;
	mov.b64 	%rd2693, {%r1968, %r1967};
	xor.b64  	%rd2694, %rd2692, %rd2693;
	shf.l.wrap.b32 	%r1969, %r1963, %r1964, 23;
	shf.l.wrap.b32 	%r1970, %r1964, %r1963, 23;
	mov.b64 	%rd2695, {%r1970, %r1969};
	xor.b64  	%rd2696, %rd2694, %rd2695;
	xor.b64  	%rd2697, %rd2603, %rd2640;
	and.b64  	%rd2698, %rd2697, %rd2677;
	xor.b64  	%rd2699, %rd2698, %rd2603;
	add.s64 	%rd2700, %rd2696, %rd2566;
	add.s64 	%rd2701, %rd2700, %rd2699;
	add.s64 	%rd2702, %rd2701, %rd2691;
	and.b64  	%rd2703, %rd2678, %rd2641;
	or.b64  	%rd2704, %rd2678, %rd2641;
	and.b64  	%rd2705, %rd2704, %rd2604;
	or.b64  	%rd2706, %rd2705, %rd2703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd2678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd2678;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 28;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 28;
	mov.b64 	%rd2707, {%r1974, %r1973};
	shf.l.wrap.b32 	%r1975, %r1971, %r1972, 30;
	shf.l.wrap.b32 	%r1976, %r1972, %r1971, 30;
	mov.b64 	%rd2708, {%r1976, %r1975};
	xor.b64  	%rd2709, %rd2707, %rd2708;
	shf.l.wrap.b32 	%r1977, %r1971, %r1972, 25;
	shf.l.wrap.b32 	%r1978, %r1972, %r1971, 25;
	mov.b64 	%rd2710, {%r1978, %r1977};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	add.s64 	%rd2712, %rd2706, %rd2711;
	add.s64 	%rd2713, %rd2712, %rd2702;
	add.s64 	%rd2714, %rd2713, 5532061633213252278;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1979, %temp}, %rd2714;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1980}, %rd2714;
	}
	prmt.b32 	%r1981, %r1979, %r52, %r51;
	prmt.b32 	%r1982, %r1980, %r52, %r51;
	mov.b64 	%rd2715, {%r1982, %r1981};
	shl.b64 	%rd2716, %rd2, 3;
	add.s64 	%rd2717, %rd15, %rd2716;
	st.global.u64 	[%rd2717], %rd2715;
	ret;

}
	// .globl	kernel_cmp
.entry kernel_cmp(
	.param .u64 .ptr .const .align 8 kernel_cmp_param_0,
	.param .u64 .ptr .global .align 8 kernel_cmp_param_1,
	.param .u64 .ptr .global .align 4 kernel_cmp_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [kernel_cmp_param_0];
	ld.param.u64 	%rd2, [kernel_cmp_param_1];
	ld.param.u64 	%rd3, [kernel_cmp_param_2];
	mov.b32 	%r2, %envreg3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	add.s32 	%r6, %r5, %r2;
	mad.lo.s32 	%r1, %r4, %r3, %r6;
	setp.ne.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB1_2;

	mov.u32 	%r7, 0;
	st.global.u32 	[%rd3], %r7;

$L__BB1_2:
	bar.sync 	0;
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd2, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	ld.const.u64 	%rd7, [%rd1];
	setp.ne.s64 	%p2, %rd7, %rd6;
	@%p2 bra 	$L__BB1_4;

	mov.u32 	%r8, 1;
	st.global.u32 	[%rd3], %r8;

$L__BB1_4:
	ret;

}

  