//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	GenerateSHA1pwhash
.const .align 4 .b8 h[32] = {103, 230, 9, 106, 133, 174, 103, 187, 114, 243, 110, 60, 58, 245, 79, 165, 127, 82, 14, 81, 140, 104, 5, 155, 171, 217, 131, 31, 25, 205, 224, 91};
.const .align 4 .b8 k[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 4 .b8 InputBlockKeyInt[8] = {118, 210, 167, 254, 121, 158, 75, 59};
.const .align 4 .b8 ValueBlockKeyInt[8] = {109, 15, 170, 215, 78, 52, 97, 48};
.const .align 8 .u64 InputBlockKeyLong = -96877461722390919;
.const .align 8 .u64 ValueBlockKeyLong = -2906493647876705202;
.const .align 1 .b8 aes_keysched_base_$_Rcon[10] = {1, 2, 4, 8, 16, 32, 64, 128, 27, 54};

.entry GenerateSHA1pwhash(
	.param .u64 .ptr .global .align 4 GenerateSHA1pwhash_param_0,
	.param .u64 .ptr .global .align 4 GenerateSHA1pwhash_param_1,
	.param .u64 .ptr .const .align 8 GenerateSHA1pwhash_param_2,
	.param .u64 .ptr .global .align 8 GenerateSHA1pwhash_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2015>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd3, [GenerateSHA1pwhash_param_0];
	ld.param.u64 	%rd5, [GenerateSHA1pwhash_param_1];
	ld.param.u64 	%rd6, [GenerateSHA1pwhash_param_2];
	mov.b32 	%r340, %envreg3;
	mov.u32 	%r341, %ctaid.x;
	mov.u32 	%r342, %ntid.x;
	mov.u32 	%r343, %tid.x;
	add.s32 	%r344, %r343, %r340;
	mad.lo.s32 	%r345, %r342, %r341, %r344;
	ld.const.v2.u32 	{%r346, %r347}, [%rd6];
	shf.l.wrap.b32 	%r350, %r346, %r346, 16;
	shl.b32 	%r351, %r350, 8;
	and.b32  	%r352, %r351, -16711936;
	shr.u32 	%r353, %r350, 8;
	and.b32  	%r354, %r353, 16711935;
	or.b32  	%r355, %r352, %r354;
	shf.l.wrap.b32 	%r356, %r347, %r347, 16;
	shl.b32 	%r357, %r356, 8;
	and.b32  	%r358, %r357, -16711936;
	shr.u32 	%r359, %r356, 8;
	and.b32  	%r360, %r359, 16711935;
	or.b32  	%r361, %r358, %r360;
	ld.const.u32 	%r362, [%rd6+8];
	shf.l.wrap.b32 	%r363, %r362, %r362, 16;
	shl.b32 	%r364, %r363, 8;
	and.b32  	%r365, %r364, -16711936;
	shr.u32 	%r366, %r363, 8;
	and.b32  	%r367, %r366, 16711935;
	or.b32  	%r368, %r365, %r367;
	ld.const.u32 	%r369, [%rd6+12];
	shf.l.wrap.b32 	%r370, %r369, %r369, 16;
	shl.b32 	%r371, %r370, 8;
	and.b32  	%r372, %r371, -16711936;
	shr.u32 	%r373, %r370, 8;
	and.b32  	%r374, %r373, 16711935;
	or.b32  	%r375, %r372, %r374;
	cvt.u64.u32 	%rd1, %r345;
	mul.lo.s32 	%r1, %r345, 24;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.u32 	%r376, [%rd8];
	shf.l.wrap.b32 	%r377, %r376, %r376, 16;
	shl.b32 	%r378, %r377, 8;
	and.b32  	%r379, %r378, -16711936;
	shr.u32 	%r380, %r377, 8;
	and.b32  	%r381, %r380, 16711935;
	or.b32  	%r382, %r379, %r381;
	ld.global.u32 	%r383, [%rd8+4];
	shf.l.wrap.b32 	%r384, %r383, %r383, 16;
	shl.b32 	%r385, %r384, 8;
	and.b32  	%r386, %r385, -16711936;
	shr.u32 	%r387, %r384, 8;
	and.b32  	%r388, %r387, 16711935;
	or.b32  	%r389, %r386, %r388;
	ld.global.u32 	%r390, [%rd8+8];
	shf.l.wrap.b32 	%r391, %r390, %r390, 16;
	shl.b32 	%r392, %r391, 8;
	and.b32  	%r393, %r392, -16711936;
	shr.u32 	%r394, %r391, 8;
	and.b32  	%r395, %r394, 16711935;
	or.b32  	%r396, %r393, %r395;
	ld.global.u32 	%r397, [%rd8+12];
	shf.l.wrap.b32 	%r398, %r397, %r397, 16;
	shl.b32 	%r399, %r398, 8;
	and.b32  	%r400, %r399, -16711936;
	shr.u32 	%r401, %r398, 8;
	and.b32  	%r402, %r401, 16711935;
	or.b32  	%r403, %r400, %r402;
	ld.global.u32 	%r404, [%rd8+16];
	shf.l.wrap.b32 	%r405, %r404, %r404, 16;
	shl.b32 	%r406, %r405, 8;
	and.b32  	%r407, %r406, -16711936;
	shr.u32 	%r408, %r405, 8;
	and.b32  	%r409, %r408, 16711935;
	or.b32  	%r410, %r407, %r409;
	ld.global.u32 	%r411, [%rd8+20];
	shf.l.wrap.b32 	%r412, %r411, %r411, 16;
	shl.b32 	%r413, %r412, 8;
	and.b32  	%r414, %r413, -16711936;
	shr.u32 	%r415, %r412, 8;
	and.b32  	%r416, %r415, 16711935;
	or.b32  	%r417, %r414, %r416;
	ld.global.u32 	%r418, [%rd8+24];
	shf.l.wrap.b32 	%r419, %r418, %r418, 16;
	shl.b32 	%r420, %r419, 8;
	and.b32  	%r421, %r420, -16711936;
	shr.u32 	%r422, %r419, 8;
	and.b32  	%r423, %r422, 16711935;
	or.b32  	%r424, %r421, %r423;
	ld.global.u32 	%r425, [%rd8+28];
	shf.l.wrap.b32 	%r426, %r425, %r425, 16;
	shl.b32 	%r427, %r426, 8;
	and.b32  	%r428, %r427, -16711936;
	shr.u32 	%r429, %r426, 8;
	and.b32  	%r430, %r429, 16711935;
	or.b32  	%r431, %r428, %r430;
	add.s32 	%r432, %r1, 8;
	mul.wide.u32 	%rd9, %r432, 4;
	add.s64 	%rd2, %rd3, %rd9;
	ld.global.u32 	%r433, [%rd2];
	shf.l.wrap.b32 	%r434, %r433, %r433, 16;
	shl.b32 	%r435, %r434, 8;
	and.b32  	%r436, %r435, -16711936;
	shr.u32 	%r437, %r434, 8;
	and.b32  	%r438, %r437, 16711935;
	or.b32  	%r439, %r436, %r438;
	ld.global.u32 	%r440, [%rd2+4];
	shf.l.wrap.b32 	%r441, %r440, %r440, 16;
	shl.b32 	%r442, %r441, 8;
	and.b32  	%r443, %r442, -16711936;
	shr.u32 	%r444, %r441, 8;
	and.b32  	%r445, %r444, 16711935;
	or.b32  	%r446, %r443, %r445;
	ld.global.u32 	%r447, [%rd2+8];
	shf.l.wrap.b32 	%r448, %r447, %r447, 16;
	shl.b32 	%r449, %r448, 8;
	and.b32  	%r450, %r449, -16711936;
	shr.u32 	%r451, %r448, 8;
	and.b32  	%r452, %r451, 16711935;
	or.b32  	%r453, %r450, %r452;
	ld.global.u32 	%r454, [%rd2+12];
	shf.l.wrap.b32 	%r455, %r454, %r454, 16;
	shl.b32 	%r456, %r455, 8;
	and.b32  	%r457, %r456, -16711936;
	shr.u32 	%r458, %r455, 8;
	and.b32  	%r459, %r458, 16711935;
	or.b32  	%r460, %r457, %r459;
	mul.wide.u32 	%rd10, %r345, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.u32 	%r461, [%rd11];
	shl.b32 	%r462, %r461, 3;
	add.s32 	%r2, %r462, 128;
	setp.lt.u32 	%p1, %r461, 40;
	selp.b32 	%r463, %r2, %r460, %p1;
	selp.b32 	%r464, 0, %r453, %p1;
	mov.u32 	%r25, 1732584193;
	shf.l.wrap.b32 	%r465, %r25, %r25, 5;
	mov.u32 	%r21, -271733879;
	mov.u32 	%r27, -1732584194;
	mov.u32 	%r23, 271733878;
	// begin inline asm
	lop3.b32 %r20, %r21, %r27, %r23, 202;
	// end inline asm
	add.s32 	%r466, %r465, %r20;
	add.s32 	%r467, %r466, %r355;
	add.s32 	%r29, %r467, 508910473;
	shf.l.wrap.b32 	%r468, %r29, %r29, 5;
	shf.l.wrap.b32 	%r31, %r21, %r21, 30;
	// begin inline asm
	lop3.b32 %r24, %r25, %r31, %r27, 202;
	// end inline asm
	add.s32 	%r469, %r24, %r361;
	add.s32 	%r470, %r469, %r468;
	add.s32 	%r33, %r470, 1790234127;
	shf.l.wrap.b32 	%r471, %r33, %r33, 5;
	shf.l.wrap.b32 	%r35, %r25, %r25, 30;
	// begin inline asm
	lop3.b32 %r28, %r29, %r35, %r31, 202;
	// end inline asm
	add.s32 	%r472, %r28, %r368;
	add.s32 	%r473, %r472, %r471;
	add.s32 	%r37, %r473, -214083945;
	shf.l.wrap.b32 	%r39, %r29, %r29, 30;
	shf.l.wrap.b32 	%r474, %r37, %r37, 5;
	// begin inline asm
	lop3.b32 %r32, %r33, %r39, %r35, 202;
	// end inline asm
	add.s32 	%r475, %r31, %r32;
	add.s32 	%r476, %r475, %r375;
	add.s32 	%r477, %r476, %r474;
	add.s32 	%r41, %r477, 1518500249;
	shf.l.wrap.b32 	%r43, %r33, %r33, 30;
	shf.l.wrap.b32 	%r478, %r41, %r41, 5;
	// begin inline asm
	lop3.b32 %r36, %r37, %r43, %r39, 202;
	// end inline asm
	add.s32 	%r479, %r35, %r36;
	add.s32 	%r480, %r479, %r382;
	add.s32 	%r481, %r480, %r478;
	add.s32 	%r45, %r481, 1518500249;
	shf.l.wrap.b32 	%r47, %r37, %r37, 30;
	shf.l.wrap.b32 	%r482, %r45, %r45, 5;
	// begin inline asm
	lop3.b32 %r40, %r41, %r47, %r43, 202;
	// end inline asm
	add.s32 	%r483, %r39, %r40;
	add.s32 	%r484, %r483, %r389;
	add.s32 	%r485, %r484, %r482;
	add.s32 	%r49, %r485, 1518500249;
	shf.l.wrap.b32 	%r51, %r41, %r41, 30;
	shf.l.wrap.b32 	%r486, %r49, %r49, 5;
	// begin inline asm
	lop3.b32 %r44, %r45, %r51, %r47, 202;
	// end inline asm
	add.s32 	%r487, %r43, %r44;
	add.s32 	%r488, %r487, %r396;
	add.s32 	%r489, %r488, %r486;
	add.s32 	%r53, %r489, 1518500249;
	shf.l.wrap.b32 	%r55, %r45, %r45, 30;
	shf.l.wrap.b32 	%r490, %r53, %r53, 5;
	// begin inline asm
	lop3.b32 %r48, %r49, %r55, %r51, 202;
	// end inline asm
	add.s32 	%r491, %r48, %r403;
	add.s32 	%r492, %r491, %r47;
	add.s32 	%r493, %r492, %r490;
	add.s32 	%r57, %r493, 1518500249;
	shf.l.wrap.b32 	%r59, %r49, %r49, 30;
	shf.l.wrap.b32 	%r494, %r57, %r57, 5;
	// begin inline asm
	lop3.b32 %r52, %r53, %r59, %r55, 202;
	// end inline asm
	add.s32 	%r495, %r52, %r410;
	add.s32 	%r496, %r495, %r51;
	add.s32 	%r497, %r496, %r494;
	add.s32 	%r61, %r497, 1518500249;
	shf.l.wrap.b32 	%r63, %r53, %r53, 30;
	shf.l.wrap.b32 	%r498, %r61, %r61, 5;
	// begin inline asm
	lop3.b32 %r56, %r57, %r63, %r59, 202;
	// end inline asm
	add.s32 	%r499, %r56, %r417;
	add.s32 	%r500, %r499, %r55;
	add.s32 	%r501, %r500, %r498;
	add.s32 	%r65, %r501, 1518500249;
	shf.l.wrap.b32 	%r67, %r57, %r57, 30;
	shf.l.wrap.b32 	%r502, %r65, %r65, 5;
	// begin inline asm
	lop3.b32 %r60, %r61, %r67, %r63, 202;
	// end inline asm
	add.s32 	%r503, %r60, %r424;
	add.s32 	%r504, %r503, %r59;
	add.s32 	%r505, %r504, %r502;
	add.s32 	%r69, %r505, 1518500249;
	shf.l.wrap.b32 	%r71, %r61, %r61, 30;
	shf.l.wrap.b32 	%r506, %r69, %r69, 5;
	// begin inline asm
	lop3.b32 %r64, %r65, %r71, %r67, 202;
	// end inline asm
	add.s32 	%r507, %r64, %r431;
	add.s32 	%r508, %r507, %r63;
	add.s32 	%r509, %r508, %r506;
	add.s32 	%r73, %r509, 1518500249;
	shf.l.wrap.b32 	%r75, %r65, %r65, 30;
	shf.l.wrap.b32 	%r510, %r73, %r73, 5;
	// begin inline asm
	lop3.b32 %r68, %r69, %r75, %r71, 202;
	// end inline asm
	add.s32 	%r511, %r68, %r439;
	add.s32 	%r512, %r511, %r67;
	add.s32 	%r513, %r512, %r510;
	add.s32 	%r77, %r513, 1518500249;
	shf.l.wrap.b32 	%r79, %r69, %r69, 30;
	shf.l.wrap.b32 	%r514, %r77, %r77, 5;
	// begin inline asm
	lop3.b32 %r72, %r73, %r79, %r75, 202;
	// end inline asm
	add.s32 	%r515, %r72, %r446;
	add.s32 	%r516, %r515, %r71;
	add.s32 	%r517, %r516, %r514;
	add.s32 	%r81, %r517, 1518500249;
	shf.l.wrap.b32 	%r83, %r73, %r73, 30;
	shf.l.wrap.b32 	%r518, %r81, %r81, 5;
	// begin inline asm
	lop3.b32 %r76, %r77, %r83, %r79, 202;
	// end inline asm
	add.s32 	%r519, %r76, %r464;
	add.s32 	%r520, %r519, %r75;
	add.s32 	%r521, %r520, %r518;
	add.s32 	%r85, %r521, 1518500249;
	shf.l.wrap.b32 	%r87, %r77, %r77, 30;
	shf.l.wrap.b32 	%r522, %r85, %r85, 5;
	// begin inline asm
	lop3.b32 %r80, %r81, %r87, %r83, 202;
	// end inline asm
	add.s32 	%r523, %r80, %r463;
	add.s32 	%r524, %r523, %r79;
	add.s32 	%r525, %r524, %r522;
	add.s32 	%r89, %r525, 1518500249;
	shf.l.wrap.b32 	%r91, %r81, %r81, 30;
	shf.l.wrap.b32 	%r526, %r89, %r89, 5;
	// begin inline asm
	lop3.b32 %r84, %r85, %r91, %r87, 202;
	// end inline asm
	xor.b32  	%r527, %r410, %r446;
	xor.b32  	%r528, %r527, %r368;
	xor.b32  	%r529, %r528, %r355;
	shf.l.wrap.b32 	%r530, %r529, %r529, 1;
	add.s32 	%r531, %r84, %r530;
	add.s32 	%r532, %r531, %r83;
	add.s32 	%r533, %r532, %r526;
	add.s32 	%r93, %r533, 1518500249;
	shf.l.wrap.b32 	%r95, %r85, %r85, 30;
	shf.l.wrap.b32 	%r534, %r93, %r93, 5;
	// begin inline asm
	lop3.b32 %r88, %r89, %r95, %r91, 202;
	// end inline asm
	xor.b32  	%r535, %r417, %r464;
	xor.b32  	%r536, %r535, %r375;
	xor.b32  	%r537, %r536, %r361;
	shf.l.wrap.b32 	%r538, %r537, %r537, 1;
	add.s32 	%r539, %r88, %r538;
	add.s32 	%r540, %r539, %r87;
	add.s32 	%r541, %r540, %r534;
	add.s32 	%r97, %r541, 1518500249;
	shf.l.wrap.b32 	%r99, %r89, %r89, 30;
	shf.l.wrap.b32 	%r542, %r97, %r97, 5;
	// begin inline asm
	lop3.b32 %r92, %r93, %r99, %r95, 202;
	// end inline asm
	xor.b32  	%r543, %r424, %r463;
	xor.b32  	%r544, %r543, %r382;
	xor.b32  	%r545, %r544, %r368;
	shf.l.wrap.b32 	%r546, %r545, %r545, 1;
	add.s32 	%r547, %r92, %r546;
	add.s32 	%r548, %r547, %r91;
	add.s32 	%r549, %r548, %r542;
	add.s32 	%r101, %r549, 1518500249;
	shf.l.wrap.b32 	%r103, %r93, %r93, 30;
	shf.l.wrap.b32 	%r550, %r101, %r101, 5;
	// begin inline asm
	lop3.b32 %r96, %r97, %r103, %r99, 202;
	// end inline asm
	xor.b32  	%r551, %r431, %r530;
	xor.b32  	%r552, %r551, %r389;
	xor.b32  	%r553, %r552, %r375;
	shf.l.wrap.b32 	%r554, %r553, %r553, 1;
	add.s32 	%r555, %r96, %r554;
	add.s32 	%r556, %r555, %r95;
	add.s32 	%r557, %r556, %r550;
	add.s32 	%r105, %r557, 1518500249;
	shf.l.wrap.b32 	%r107, %r97, %r97, 30;
	shf.l.wrap.b32 	%r558, %r105, %r105, 5;
	// begin inline asm
	lop3.b32 %r100, %r101, %r107, %r103, 150;
	// end inline asm
	xor.b32  	%r559, %r439, %r538;
	xor.b32  	%r560, %r559, %r396;
	xor.b32  	%r561, %r560, %r382;
	shf.l.wrap.b32 	%r562, %r561, %r561, 1;
	add.s32 	%r563, %r100, %r562;
	add.s32 	%r564, %r563, %r99;
	add.s32 	%r565, %r564, %r558;
	add.s32 	%r109, %r565, 1859775393;
	shf.l.wrap.b32 	%r111, %r101, %r101, 30;
	shf.l.wrap.b32 	%r566, %r109, %r109, 5;
	// begin inline asm
	lop3.b32 %r104, %r105, %r111, %r107, 150;
	// end inline asm
	xor.b32  	%r567, %r446, %r546;
	xor.b32  	%r568, %r567, %r403;
	xor.b32  	%r569, %r568, %r389;
	shf.l.wrap.b32 	%r570, %r569, %r569, 1;
	add.s32 	%r571, %r104, %r570;
	add.s32 	%r572, %r571, %r103;
	add.s32 	%r573, %r572, %r566;
	add.s32 	%r113, %r573, 1859775393;
	shf.l.wrap.b32 	%r115, %r105, %r105, 30;
	shf.l.wrap.b32 	%r574, %r113, %r113, 5;
	// begin inline asm
	lop3.b32 %r108, %r109, %r115, %r111, 150;
	// end inline asm
	xor.b32  	%r575, %r464, %r554;
	xor.b32  	%r576, %r575, %r410;
	xor.b32  	%r577, %r576, %r396;
	shf.l.wrap.b32 	%r578, %r577, %r577, 1;
	add.s32 	%r579, %r108, %r578;
	add.s32 	%r580, %r579, %r107;
	add.s32 	%r581, %r580, %r574;
	add.s32 	%r117, %r581, 1859775393;
	shf.l.wrap.b32 	%r119, %r109, %r109, 30;
	shf.l.wrap.b32 	%r582, %r117, %r117, 5;
	// begin inline asm
	lop3.b32 %r112, %r113, %r119, %r115, 150;
	// end inline asm
	xor.b32  	%r583, %r463, %r562;
	xor.b32  	%r584, %r583, %r417;
	xor.b32  	%r585, %r584, %r403;
	shf.l.wrap.b32 	%r586, %r585, %r585, 1;
	add.s32 	%r587, %r112, %r586;
	add.s32 	%r588, %r587, %r111;
	add.s32 	%r589, %r588, %r582;
	add.s32 	%r121, %r589, 1859775393;
	shf.l.wrap.b32 	%r123, %r113, %r113, 30;
	shf.l.wrap.b32 	%r590, %r121, %r121, 5;
	// begin inline asm
	lop3.b32 %r116, %r117, %r123, %r119, 150;
	// end inline asm
	xor.b32  	%r591, %r570, %r530;
	xor.b32  	%r592, %r591, %r424;
	xor.b32  	%r593, %r592, %r410;
	shf.l.wrap.b32 	%r594, %r593, %r593, 1;
	add.s32 	%r595, %r116, %r594;
	add.s32 	%r596, %r595, %r115;
	add.s32 	%r597, %r596, %r590;
	add.s32 	%r125, %r597, 1859775393;
	shf.l.wrap.b32 	%r127, %r117, %r117, 30;
	shf.l.wrap.b32 	%r598, %r125, %r125, 5;
	// begin inline asm
	lop3.b32 %r120, %r121, %r127, %r123, 150;
	// end inline asm
	xor.b32  	%r599, %r578, %r538;
	xor.b32  	%r600, %r599, %r431;
	xor.b32  	%r601, %r600, %r417;
	shf.l.wrap.b32 	%r602, %r601, %r601, 1;
	add.s32 	%r603, %r120, %r602;
	add.s32 	%r604, %r603, %r119;
	add.s32 	%r605, %r604, %r598;
	add.s32 	%r129, %r605, 1859775393;
	shf.l.wrap.b32 	%r131, %r121, %r121, 30;
	shf.l.wrap.b32 	%r606, %r129, %r129, 5;
	// begin inline asm
	lop3.b32 %r124, %r125, %r131, %r127, 150;
	// end inline asm
	xor.b32  	%r607, %r586, %r546;
	xor.b32  	%r608, %r607, %r439;
	xor.b32  	%r609, %r608, %r424;
	shf.l.wrap.b32 	%r610, %r609, %r609, 1;
	add.s32 	%r611, %r124, %r610;
	add.s32 	%r612, %r611, %r123;
	add.s32 	%r613, %r612, %r606;
	add.s32 	%r133, %r613, 1859775393;
	shf.l.wrap.b32 	%r135, %r125, %r125, 30;
	shf.l.wrap.b32 	%r614, %r133, %r133, 5;
	// begin inline asm
	lop3.b32 %r128, %r129, %r135, %r131, 150;
	// end inline asm
	xor.b32  	%r615, %r594, %r554;
	xor.b32  	%r616, %r615, %r446;
	xor.b32  	%r617, %r616, %r431;
	shf.l.wrap.b32 	%r618, %r617, %r617, 1;
	add.s32 	%r619, %r128, %r618;
	add.s32 	%r620, %r619, %r127;
	add.s32 	%r621, %r620, %r614;
	add.s32 	%r137, %r621, 1859775393;
	shf.l.wrap.b32 	%r139, %r129, %r129, 30;
	shf.l.wrap.b32 	%r622, %r137, %r137, 5;
	// begin inline asm
	lop3.b32 %r132, %r133, %r139, %r135, 150;
	// end inline asm
	xor.b32  	%r623, %r602, %r562;
	xor.b32  	%r624, %r623, %r464;
	xor.b32  	%r625, %r624, %r439;
	shf.l.wrap.b32 	%r626, %r625, %r625, 1;
	add.s32 	%r627, %r132, %r626;
	add.s32 	%r628, %r627, %r131;
	add.s32 	%r629, %r628, %r622;
	add.s32 	%r141, %r629, 1859775393;
	shf.l.wrap.b32 	%r143, %r133, %r133, 30;
	shf.l.wrap.b32 	%r630, %r141, %r141, 5;
	// begin inline asm
	lop3.b32 %r136, %r137, %r143, %r139, 150;
	// end inline asm
	xor.b32  	%r631, %r610, %r570;
	xor.b32  	%r632, %r631, %r463;
	xor.b32  	%r633, %r632, %r446;
	shf.l.wrap.b32 	%r634, %r633, %r633, 1;
	add.s32 	%r635, %r136, %r634;
	add.s32 	%r636, %r635, %r135;
	add.s32 	%r637, %r636, %r630;
	add.s32 	%r145, %r637, 1859775393;
	shf.l.wrap.b32 	%r147, %r137, %r137, 30;
	shf.l.wrap.b32 	%r638, %r145, %r145, 5;
	// begin inline asm
	lop3.b32 %r140, %r141, %r147, %r143, 150;
	// end inline asm
	xor.b32  	%r639, %r578, %r530;
	xor.b32  	%r640, %r639, %r618;
	xor.b32  	%r641, %r640, %r464;
	shf.l.wrap.b32 	%r642, %r641, %r641, 1;
	add.s32 	%r643, %r140, %r642;
	add.s32 	%r644, %r643, %r139;
	add.s32 	%r645, %r644, %r638;
	add.s32 	%r149, %r645, 1859775393;
	shf.l.wrap.b32 	%r151, %r141, %r141, 30;
	shf.l.wrap.b32 	%r646, %r149, %r149, 5;
	// begin inline asm
	lop3.b32 %r144, %r145, %r151, %r147, 150;
	// end inline asm
	xor.b32  	%r647, %r586, %r538;
	xor.b32  	%r648, %r647, %r626;
	xor.b32  	%r649, %r648, %r463;
	shf.l.wrap.b32 	%r650, %r649, %r649, 1;
	add.s32 	%r651, %r144, %r650;
	add.s32 	%r652, %r651, %r143;
	add.s32 	%r653, %r652, %r646;
	add.s32 	%r153, %r653, 1859775393;
	shf.l.wrap.b32 	%r155, %r145, %r145, 30;
	shf.l.wrap.b32 	%r654, %r153, %r153, 5;
	// begin inline asm
	lop3.b32 %r148, %r149, %r155, %r151, 150;
	// end inline asm
	xor.b32  	%r655, %r546, %r530;
	xor.b32  	%r656, %r655, %r594;
	xor.b32  	%r657, %r656, %r634;
	shf.l.wrap.b32 	%r658, %r657, %r657, 1;
	add.s32 	%r659, %r148, %r658;
	add.s32 	%r660, %r659, %r147;
	add.s32 	%r661, %r660, %r654;
	add.s32 	%r157, %r661, 1859775393;
	shf.l.wrap.b32 	%r159, %r149, %r149, 30;
	shf.l.wrap.b32 	%r662, %r157, %r157, 5;
	// begin inline asm
	lop3.b32 %r152, %r153, %r159, %r155, 150;
	// end inline asm
	xor.b32  	%r663, %r554, %r538;
	xor.b32  	%r664, %r663, %r602;
	xor.b32  	%r665, %r664, %r642;
	shf.l.wrap.b32 	%r666, %r665, %r665, 1;
	add.s32 	%r667, %r152, %r666;
	add.s32 	%r668, %r667, %r151;
	add.s32 	%r669, %r668, %r662;
	add.s32 	%r161, %r669, 1859775393;
	shf.l.wrap.b32 	%r163, %r153, %r153, 30;
	shf.l.wrap.b32 	%r670, %r161, %r161, 5;
	// begin inline asm
	lop3.b32 %r156, %r157, %r163, %r159, 150;
	// end inline asm
	xor.b32  	%r671, %r562, %r546;
	xor.b32  	%r672, %r671, %r610;
	xor.b32  	%r673, %r672, %r650;
	shf.l.wrap.b32 	%r674, %r673, %r673, 1;
	add.s32 	%r675, %r156, %r674;
	add.s32 	%r676, %r675, %r155;
	add.s32 	%r677, %r676, %r670;
	add.s32 	%r165, %r677, 1859775393;
	shf.l.wrap.b32 	%r167, %r157, %r157, 30;
	shf.l.wrap.b32 	%r678, %r165, %r165, 5;
	// begin inline asm
	lop3.b32 %r160, %r161, %r167, %r163, 150;
	// end inline asm
	xor.b32  	%r679, %r570, %r554;
	xor.b32  	%r680, %r679, %r618;
	xor.b32  	%r681, %r680, %r658;
	shf.l.wrap.b32 	%r682, %r681, %r681, 1;
	add.s32 	%r683, %r160, %r682;
	add.s32 	%r684, %r683, %r159;
	add.s32 	%r685, %r684, %r678;
	add.s32 	%r169, %r685, 1859775393;
	shf.l.wrap.b32 	%r171, %r161, %r161, 30;
	shf.l.wrap.b32 	%r686, %r169, %r169, 5;
	// begin inline asm
	lop3.b32 %r164, %r165, %r171, %r167, 150;
	// end inline asm
	xor.b32  	%r687, %r578, %r562;
	xor.b32  	%r688, %r687, %r626;
	xor.b32  	%r689, %r688, %r666;
	shf.l.wrap.b32 	%r690, %r689, %r689, 1;
	add.s32 	%r691, %r164, %r690;
	add.s32 	%r692, %r691, %r163;
	add.s32 	%r693, %r692, %r686;
	add.s32 	%r173, %r693, 1859775393;
	shf.l.wrap.b32 	%r175, %r165, %r165, 30;
	shf.l.wrap.b32 	%r694, %r173, %r173, 5;
	// begin inline asm
	lop3.b32 %r168, %r169, %r175, %r171, 150;
	// end inline asm
	xor.b32  	%r695, %r586, %r570;
	xor.b32  	%r696, %r695, %r634;
	xor.b32  	%r697, %r696, %r674;
	shf.l.wrap.b32 	%r698, %r697, %r697, 1;
	add.s32 	%r699, %r168, %r698;
	add.s32 	%r700, %r699, %r167;
	add.s32 	%r701, %r700, %r694;
	add.s32 	%r177, %r701, 1859775393;
	shf.l.wrap.b32 	%r179, %r169, %r169, 30;
	shf.l.wrap.b32 	%r702, %r177, %r177, 5;
	// begin inline asm
	lop3.b32 %r172, %r173, %r179, %r175, 150;
	// end inline asm
	xor.b32  	%r703, %r594, %r578;
	xor.b32  	%r704, %r703, %r642;
	xor.b32  	%r705, %r704, %r682;
	shf.l.wrap.b32 	%r706, %r705, %r705, 1;
	add.s32 	%r707, %r172, %r706;
	add.s32 	%r708, %r707, %r171;
	add.s32 	%r709, %r708, %r702;
	add.s32 	%r181, %r709, 1859775393;
	shf.l.wrap.b32 	%r183, %r173, %r173, 30;
	shf.l.wrap.b32 	%r710, %r181, %r181, 5;
	// begin inline asm
	lop3.b32 %r176, %r177, %r183, %r179, 150;
	// end inline asm
	xor.b32  	%r711, %r602, %r586;
	xor.b32  	%r712, %r711, %r650;
	xor.b32  	%r713, %r712, %r690;
	shf.l.wrap.b32 	%r714, %r713, %r713, 1;
	add.s32 	%r715, %r176, %r714;
	add.s32 	%r716, %r715, %r175;
	add.s32 	%r717, %r716, %r710;
	add.s32 	%r185, %r717, 1859775393;
	shf.l.wrap.b32 	%r187, %r177, %r177, 30;
	shf.l.wrap.b32 	%r718, %r185, %r185, 5;
	// begin inline asm
	lop3.b32 %r180, %r181, %r187, %r183, 232;
	// end inline asm
	xor.b32  	%r719, %r610, %r594;
	xor.b32  	%r720, %r719, %r658;
	xor.b32  	%r721, %r720, %r698;
	shf.l.wrap.b32 	%r722, %r721, %r721, 1;
	add.s32 	%r723, %r180, %r722;
	add.s32 	%r724, %r723, %r179;
	add.s32 	%r725, %r724, %r718;
	add.s32 	%r189, %r725, -1894007588;
	shf.l.wrap.b32 	%r191, %r181, %r181, 30;
	shf.l.wrap.b32 	%r726, %r189, %r189, 5;
	// begin inline asm
	lop3.b32 %r184, %r185, %r191, %r187, 232;
	// end inline asm
	xor.b32  	%r727, %r618, %r602;
	xor.b32  	%r728, %r727, %r666;
	xor.b32  	%r729, %r728, %r706;
	shf.l.wrap.b32 	%r730, %r729, %r729, 1;
	add.s32 	%r731, %r184, %r730;
	add.s32 	%r732, %r731, %r183;
	add.s32 	%r733, %r732, %r726;
	add.s32 	%r193, %r733, -1894007588;
	shf.l.wrap.b32 	%r195, %r185, %r185, 30;
	shf.l.wrap.b32 	%r734, %r193, %r193, 5;
	// begin inline asm
	lop3.b32 %r188, %r189, %r195, %r191, 232;
	// end inline asm
	xor.b32  	%r735, %r626, %r610;
	xor.b32  	%r736, %r735, %r674;
	xor.b32  	%r737, %r736, %r714;
	shf.l.wrap.b32 	%r738, %r737, %r737, 1;
	add.s32 	%r739, %r188, %r738;
	add.s32 	%r740, %r739, %r187;
	add.s32 	%r741, %r740, %r734;
	add.s32 	%r197, %r741, -1894007588;
	shf.l.wrap.b32 	%r199, %r189, %r189, 30;
	shf.l.wrap.b32 	%r742, %r197, %r197, 5;
	// begin inline asm
	lop3.b32 %r192, %r193, %r199, %r195, 232;
	// end inline asm
	xor.b32  	%r743, %r634, %r618;
	xor.b32  	%r744, %r743, %r682;
	xor.b32  	%r745, %r744, %r722;
	shf.l.wrap.b32 	%r746, %r745, %r745, 1;
	add.s32 	%r747, %r192, %r746;
	add.s32 	%r748, %r747, %r191;
	add.s32 	%r749, %r748, %r742;
	add.s32 	%r201, %r749, -1894007588;
	shf.l.wrap.b32 	%r203, %r193, %r193, 30;
	shf.l.wrap.b32 	%r750, %r201, %r201, 5;
	// begin inline asm
	lop3.b32 %r196, %r197, %r203, %r199, 232;
	// end inline asm
	xor.b32  	%r751, %r642, %r626;
	xor.b32  	%r752, %r751, %r690;
	xor.b32  	%r753, %r752, %r730;
	shf.l.wrap.b32 	%r754, %r753, %r753, 1;
	add.s32 	%r755, %r196, %r754;
	add.s32 	%r756, %r755, %r195;
	add.s32 	%r757, %r756, %r750;
	add.s32 	%r205, %r757, -1894007588;
	shf.l.wrap.b32 	%r207, %r197, %r197, 30;
	shf.l.wrap.b32 	%r758, %r205, %r205, 5;
	// begin inline asm
	lop3.b32 %r200, %r201, %r207, %r203, 232;
	// end inline asm
	xor.b32  	%r759, %r650, %r634;
	xor.b32  	%r760, %r759, %r698;
	xor.b32  	%r761, %r760, %r738;
	shf.l.wrap.b32 	%r762, %r761, %r761, 1;
	add.s32 	%r763, %r200, %r762;
	add.s32 	%r764, %r763, %r199;
	add.s32 	%r765, %r764, %r758;
	add.s32 	%r209, %r765, -1894007588;
	shf.l.wrap.b32 	%r211, %r201, %r201, 30;
	shf.l.wrap.b32 	%r766, %r209, %r209, 5;
	// begin inline asm
	lop3.b32 %r204, %r205, %r211, %r207, 232;
	// end inline asm
	xor.b32  	%r767, %r658, %r642;
	xor.b32  	%r768, %r767, %r706;
	xor.b32  	%r769, %r768, %r746;
	shf.l.wrap.b32 	%r770, %r769, %r769, 1;
	add.s32 	%r771, %r204, %r770;
	add.s32 	%r772, %r771, %r203;
	add.s32 	%r773, %r772, %r766;
	add.s32 	%r213, %r773, -1894007588;
	shf.l.wrap.b32 	%r215, %r205, %r205, 30;
	shf.l.wrap.b32 	%r774, %r213, %r213, 5;
	// begin inline asm
	lop3.b32 %r208, %r209, %r215, %r211, 232;
	// end inline asm
	xor.b32  	%r775, %r666, %r650;
	xor.b32  	%r776, %r775, %r714;
	xor.b32  	%r777, %r776, %r754;
	shf.l.wrap.b32 	%r778, %r777, %r777, 1;
	add.s32 	%r779, %r208, %r778;
	add.s32 	%r780, %r779, %r207;
	add.s32 	%r781, %r780, %r774;
	add.s32 	%r217, %r781, -1894007588;
	shf.l.wrap.b32 	%r219, %r209, %r209, 30;
	shf.l.wrap.b32 	%r782, %r217, %r217, 5;
	// begin inline asm
	lop3.b32 %r212, %r213, %r219, %r215, 232;
	// end inline asm
	xor.b32  	%r783, %r674, %r658;
	xor.b32  	%r784, %r783, %r722;
	xor.b32  	%r785, %r784, %r762;
	shf.l.wrap.b32 	%r786, %r785, %r785, 1;
	add.s32 	%r787, %r212, %r786;
	add.s32 	%r788, %r787, %r211;
	add.s32 	%r789, %r788, %r782;
	add.s32 	%r221, %r789, -1894007588;
	shf.l.wrap.b32 	%r223, %r213, %r213, 30;
	shf.l.wrap.b32 	%r790, %r221, %r221, 5;
	// begin inline asm
	lop3.b32 %r216, %r217, %r223, %r219, 232;
	// end inline asm
	xor.b32  	%r791, %r682, %r666;
	xor.b32  	%r792, %r791, %r730;
	xor.b32  	%r793, %r792, %r770;
	shf.l.wrap.b32 	%r794, %r793, %r793, 1;
	add.s32 	%r795, %r216, %r794;
	add.s32 	%r796, %r795, %r215;
	add.s32 	%r797, %r796, %r790;
	add.s32 	%r225, %r797, -1894007588;
	shf.l.wrap.b32 	%r227, %r217, %r217, 30;
	shf.l.wrap.b32 	%r798, %r225, %r225, 5;
	// begin inline asm
	lop3.b32 %r220, %r221, %r227, %r223, 232;
	// end inline asm
	xor.b32  	%r799, %r690, %r674;
	xor.b32  	%r800, %r799, %r738;
	xor.b32  	%r801, %r800, %r778;
	shf.l.wrap.b32 	%r802, %r801, %r801, 1;
	add.s32 	%r803, %r220, %r802;
	add.s32 	%r804, %r803, %r219;
	add.s32 	%r805, %r804, %r798;
	add.s32 	%r229, %r805, -1894007588;
	shf.l.wrap.b32 	%r231, %r221, %r221, 30;
	shf.l.wrap.b32 	%r806, %r229, %r229, 5;
	// begin inline asm
	lop3.b32 %r224, %r225, %r231, %r227, 232;
	// end inline asm
	xor.b32  	%r807, %r698, %r682;
	xor.b32  	%r808, %r807, %r746;
	xor.b32  	%r809, %r808, %r786;
	shf.l.wrap.b32 	%r810, %r809, %r809, 1;
	add.s32 	%r811, %r224, %r810;
	add.s32 	%r812, %r811, %r223;
	add.s32 	%r813, %r812, %r806;
	add.s32 	%r233, %r813, -1894007588;
	shf.l.wrap.b32 	%r235, %r225, %r225, 30;
	shf.l.wrap.b32 	%r814, %r233, %r233, 5;
	// begin inline asm
	lop3.b32 %r228, %r229, %r235, %r231, 232;
	// end inline asm
	xor.b32  	%r815, %r706, %r690;
	xor.b32  	%r816, %r815, %r754;
	xor.b32  	%r817, %r816, %r794;
	shf.l.wrap.b32 	%r818, %r817, %r817, 1;
	add.s32 	%r819, %r228, %r818;
	add.s32 	%r820, %r819, %r227;
	add.s32 	%r821, %r820, %r814;
	add.s32 	%r237, %r821, -1894007588;
	shf.l.wrap.b32 	%r239, %r229, %r229, 30;
	shf.l.wrap.b32 	%r822, %r237, %r237, 5;
	// begin inline asm
	lop3.b32 %r232, %r233, %r239, %r235, 232;
	// end inline asm
	xor.b32  	%r823, %r714, %r698;
	xor.b32  	%r824, %r823, %r762;
	xor.b32  	%r825, %r824, %r802;
	shf.l.wrap.b32 	%r826, %r825, %r825, 1;
	add.s32 	%r827, %r232, %r826;
	add.s32 	%r828, %r827, %r231;
	add.s32 	%r829, %r828, %r822;
	add.s32 	%r241, %r829, -1894007588;
	shf.l.wrap.b32 	%r243, %r233, %r233, 30;
	shf.l.wrap.b32 	%r830, %r241, %r241, 5;
	// begin inline asm
	lop3.b32 %r236, %r237, %r243, %r239, 232;
	// end inline asm
	xor.b32  	%r831, %r722, %r706;
	xor.b32  	%r832, %r831, %r770;
	xor.b32  	%r833, %r832, %r810;
	shf.l.wrap.b32 	%r834, %r833, %r833, 1;
	add.s32 	%r835, %r236, %r834;
	add.s32 	%r836, %r835, %r235;
	add.s32 	%r837, %r836, %r830;
	add.s32 	%r245, %r837, -1894007588;
	shf.l.wrap.b32 	%r247, %r237, %r237, 30;
	shf.l.wrap.b32 	%r838, %r245, %r245, 5;
	// begin inline asm
	lop3.b32 %r240, %r241, %r247, %r243, 232;
	// end inline asm
	xor.b32  	%r839, %r730, %r714;
	xor.b32  	%r840, %r839, %r778;
	xor.b32  	%r841, %r840, %r818;
	shf.l.wrap.b32 	%r842, %r841, %r841, 1;
	add.s32 	%r843, %r240, %r842;
	add.s32 	%r844, %r843, %r239;
	add.s32 	%r845, %r844, %r838;
	add.s32 	%r249, %r845, -1894007588;
	shf.l.wrap.b32 	%r251, %r241, %r241, 30;
	shf.l.wrap.b32 	%r846, %r249, %r249, 5;
	// begin inline asm
	lop3.b32 %r244, %r245, %r251, %r247, 232;
	// end inline asm
	xor.b32  	%r847, %r738, %r722;
	xor.b32  	%r848, %r847, %r786;
	xor.b32  	%r849, %r848, %r826;
	shf.l.wrap.b32 	%r850, %r849, %r849, 1;
	add.s32 	%r851, %r244, %r850;
	add.s32 	%r852, %r851, %r243;
	add.s32 	%r853, %r852, %r846;
	add.s32 	%r253, %r853, -1894007588;
	shf.l.wrap.b32 	%r255, %r245, %r245, 30;
	shf.l.wrap.b32 	%r854, %r253, %r253, 5;
	// begin inline asm
	lop3.b32 %r248, %r249, %r255, %r251, 232;
	// end inline asm
	xor.b32  	%r855, %r746, %r730;
	xor.b32  	%r856, %r855, %r794;
	xor.b32  	%r857, %r856, %r834;
	shf.l.wrap.b32 	%r858, %r857, %r857, 1;
	add.s32 	%r859, %r248, %r858;
	add.s32 	%r860, %r859, %r247;
	add.s32 	%r861, %r860, %r854;
	add.s32 	%r257, %r861, -1894007588;
	shf.l.wrap.b32 	%r259, %r249, %r249, 30;
	shf.l.wrap.b32 	%r862, %r257, %r257, 5;
	// begin inline asm
	lop3.b32 %r252, %r253, %r259, %r255, 232;
	// end inline asm
	xor.b32  	%r863, %r754, %r738;
	xor.b32  	%r864, %r863, %r802;
	xor.b32  	%r865, %r864, %r842;
	shf.l.wrap.b32 	%r866, %r865, %r865, 1;
	add.s32 	%r867, %r252, %r866;
	add.s32 	%r868, %r867, %r251;
	add.s32 	%r869, %r868, %r862;
	add.s32 	%r261, %r869, -1894007588;
	shf.l.wrap.b32 	%r263, %r253, %r253, 30;
	shf.l.wrap.b32 	%r870, %r261, %r261, 5;
	// begin inline asm
	lop3.b32 %r256, %r257, %r263, %r259, 232;
	// end inline asm
	xor.b32  	%r871, %r762, %r746;
	xor.b32  	%r872, %r871, %r810;
	xor.b32  	%r873, %r872, %r850;
	shf.l.wrap.b32 	%r874, %r873, %r873, 1;
	add.s32 	%r875, %r256, %r874;
	add.s32 	%r876, %r875, %r255;
	add.s32 	%r877, %r876, %r870;
	add.s32 	%r265, %r877, -1894007588;
	shf.l.wrap.b32 	%r267, %r257, %r257, 30;
	shf.l.wrap.b32 	%r878, %r265, %r265, 5;
	// begin inline asm
	lop3.b32 %r260, %r261, %r267, %r263, 150;
	// end inline asm
	xor.b32  	%r879, %r770, %r754;
	xor.b32  	%r880, %r879, %r818;
	xor.b32  	%r881, %r880, %r858;
	shf.l.wrap.b32 	%r882, %r881, %r881, 1;
	add.s32 	%r883, %r260, %r882;
	add.s32 	%r884, %r883, %r259;
	add.s32 	%r885, %r884, %r878;
	add.s32 	%r269, %r885, -899497514;
	shf.l.wrap.b32 	%r271, %r261, %r261, 30;
	shf.l.wrap.b32 	%r886, %r269, %r269, 5;
	// begin inline asm
	lop3.b32 %r264, %r265, %r271, %r267, 150;
	// end inline asm
	xor.b32  	%r887, %r778, %r762;
	xor.b32  	%r888, %r887, %r826;
	xor.b32  	%r889, %r888, %r866;
	shf.l.wrap.b32 	%r890, %r889, %r889, 1;
	add.s32 	%r891, %r264, %r890;
	add.s32 	%r892, %r891, %r263;
	add.s32 	%r893, %r892, %r886;
	add.s32 	%r273, %r893, -899497514;
	shf.l.wrap.b32 	%r275, %r265, %r265, 30;
	shf.l.wrap.b32 	%r894, %r273, %r273, 5;
	// begin inline asm
	lop3.b32 %r268, %r269, %r275, %r271, 150;
	// end inline asm
	xor.b32  	%r895, %r786, %r770;
	xor.b32  	%r896, %r895, %r834;
	xor.b32  	%r897, %r896, %r874;
	shf.l.wrap.b32 	%r898, %r897, %r897, 1;
	add.s32 	%r899, %r268, %r898;
	add.s32 	%r900, %r899, %r267;
	add.s32 	%r901, %r900, %r894;
	add.s32 	%r277, %r901, -899497514;
	shf.l.wrap.b32 	%r279, %r269, %r269, 30;
	shf.l.wrap.b32 	%r902, %r277, %r277, 5;
	// begin inline asm
	lop3.b32 %r272, %r273, %r279, %r275, 150;
	// end inline asm
	xor.b32  	%r903, %r794, %r778;
	xor.b32  	%r904, %r903, %r842;
	xor.b32  	%r905, %r904, %r882;
	shf.l.wrap.b32 	%r906, %r905, %r905, 1;
	add.s32 	%r907, %r272, %r906;
	add.s32 	%r908, %r907, %r271;
	add.s32 	%r909, %r908, %r902;
	add.s32 	%r281, %r909, -899497514;
	shf.l.wrap.b32 	%r283, %r273, %r273, 30;
	shf.l.wrap.b32 	%r910, %r281, %r281, 5;
	// begin inline asm
	lop3.b32 %r276, %r277, %r283, %r279, 150;
	// end inline asm
	xor.b32  	%r911, %r802, %r786;
	xor.b32  	%r912, %r911, %r850;
	xor.b32  	%r913, %r912, %r890;
	shf.l.wrap.b32 	%r914, %r913, %r913, 1;
	add.s32 	%r915, %r276, %r914;
	add.s32 	%r916, %r915, %r275;
	add.s32 	%r917, %r916, %r910;
	add.s32 	%r285, %r917, -899497514;
	shf.l.wrap.b32 	%r287, %r277, %r277, 30;
	shf.l.wrap.b32 	%r918, %r285, %r285, 5;
	// begin inline asm
	lop3.b32 %r280, %r281, %r287, %r283, 150;
	// end inline asm
	xor.b32  	%r919, %r810, %r794;
	xor.b32  	%r920, %r919, %r858;
	xor.b32  	%r921, %r920, %r898;
	shf.l.wrap.b32 	%r922, %r921, %r921, 1;
	add.s32 	%r923, %r280, %r922;
	add.s32 	%r924, %r923, %r279;
	add.s32 	%r925, %r924, %r918;
	add.s32 	%r289, %r925, -899497514;
	shf.l.wrap.b32 	%r291, %r281, %r281, 30;
	shf.l.wrap.b32 	%r926, %r289, %r289, 5;
	// begin inline asm
	lop3.b32 %r284, %r285, %r291, %r287, 150;
	// end inline asm
	xor.b32  	%r927, %r818, %r802;
	xor.b32  	%r928, %r927, %r866;
	xor.b32  	%r929, %r928, %r906;
	shf.l.wrap.b32 	%r930, %r929, %r929, 1;
	add.s32 	%r931, %r284, %r930;
	add.s32 	%r932, %r931, %r283;
	add.s32 	%r933, %r932, %r926;
	add.s32 	%r293, %r933, -899497514;
	shf.l.wrap.b32 	%r295, %r285, %r285, 30;
	shf.l.wrap.b32 	%r934, %r293, %r293, 5;
	// begin inline asm
	lop3.b32 %r288, %r289, %r295, %r291, 150;
	// end inline asm
	xor.b32  	%r935, %r826, %r810;
	xor.b32  	%r936, %r935, %r874;
	xor.b32  	%r937, %r936, %r914;
	shf.l.wrap.b32 	%r938, %r937, %r937, 1;
	add.s32 	%r939, %r288, %r938;
	add.s32 	%r940, %r939, %r287;
	add.s32 	%r941, %r940, %r934;
	add.s32 	%r297, %r941, -899497514;
	shf.l.wrap.b32 	%r299, %r289, %r289, 30;
	shf.l.wrap.b32 	%r942, %r297, %r297, 5;
	// begin inline asm
	lop3.b32 %r292, %r293, %r299, %r295, 150;
	// end inline asm
	xor.b32  	%r943, %r834, %r818;
	xor.b32  	%r944, %r943, %r882;
	xor.b32  	%r945, %r944, %r922;
	shf.l.wrap.b32 	%r946, %r945, %r945, 1;
	add.s32 	%r947, %r292, %r946;
	add.s32 	%r948, %r947, %r291;
	add.s32 	%r949, %r948, %r942;
	add.s32 	%r301, %r949, -899497514;
	shf.l.wrap.b32 	%r303, %r293, %r293, 30;
	shf.l.wrap.b32 	%r950, %r301, %r301, 5;
	// begin inline asm
	lop3.b32 %r296, %r297, %r303, %r299, 150;
	// end inline asm
	xor.b32  	%r951, %r842, %r826;
	xor.b32  	%r952, %r951, %r890;
	xor.b32  	%r953, %r952, %r930;
	shf.l.wrap.b32 	%r954, %r953, %r953, 1;
	add.s32 	%r955, %r296, %r954;
	add.s32 	%r956, %r955, %r295;
	add.s32 	%r957, %r956, %r950;
	add.s32 	%r305, %r957, -899497514;
	shf.l.wrap.b32 	%r307, %r297, %r297, 30;
	shf.l.wrap.b32 	%r958, %r305, %r305, 5;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 150;
	// end inline asm
	xor.b32  	%r959, %r850, %r834;
	xor.b32  	%r960, %r959, %r898;
	xor.b32  	%r961, %r960, %r938;
	shf.l.wrap.b32 	%r962, %r961, %r961, 1;
	add.s32 	%r963, %r300, %r962;
	add.s32 	%r964, %r963, %r299;
	add.s32 	%r965, %r964, %r958;
	add.s32 	%r309, %r965, -899497514;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	shf.l.wrap.b32 	%r966, %r309, %r309, 5;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 150;
	// end inline asm
	xor.b32  	%r967, %r858, %r842;
	xor.b32  	%r968, %r967, %r906;
	xor.b32  	%r969, %r968, %r946;
	shf.l.wrap.b32 	%r970, %r969, %r969, 1;
	add.s32 	%r971, %r304, %r970;
	add.s32 	%r972, %r971, %r303;
	add.s32 	%r973, %r972, %r966;
	add.s32 	%r313, %r973, -899497514;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	shf.l.wrap.b32 	%r974, %r313, %r313, 5;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 150;
	// end inline asm
	xor.b32  	%r975, %r866, %r850;
	xor.b32  	%r976, %r975, %r914;
	xor.b32  	%r977, %r976, %r954;
	shf.l.wrap.b32 	%r978, %r977, %r977, 1;
	add.s32 	%r979, %r308, %r978;
	add.s32 	%r980, %r979, %r307;
	add.s32 	%r981, %r980, %r974;
	add.s32 	%r317, %r981, -899497514;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r982, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 150;
	// end inline asm
	xor.b32  	%r983, %r874, %r858;
	xor.b32  	%r984, %r983, %r922;
	xor.b32  	%r985, %r984, %r962;
	shf.l.wrap.b32 	%r986, %r985, %r985, 1;
	add.s32 	%r987, %r312, %r986;
	add.s32 	%r988, %r987, %r311;
	add.s32 	%r989, %r988, %r982;
	add.s32 	%r321, %r989, -899497514;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r990, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 150;
	// end inline asm
	xor.b32  	%r991, %r882, %r866;
	xor.b32  	%r992, %r991, %r930;
	xor.b32  	%r993, %r992, %r970;
	shf.l.wrap.b32 	%r994, %r993, %r993, 1;
	add.s32 	%r995, %r316, %r994;
	add.s32 	%r996, %r995, %r315;
	add.s32 	%r997, %r996, %r990;
	add.s32 	%r325, %r997, -899497514;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r998, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 150;
	// end inline asm
	xor.b32  	%r999, %r890, %r874;
	xor.b32  	%r1000, %r999, %r938;
	xor.b32  	%r1001, %r1000, %r978;
	shf.l.wrap.b32 	%r1002, %r1001, %r1001, 1;
	add.s32 	%r1003, %r320, %r1002;
	add.s32 	%r1004, %r1003, %r319;
	add.s32 	%r1005, %r1004, %r998;
	add.s32 	%r329, %r1005, -899497514;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r1006, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 150;
	// end inline asm
	xor.b32  	%r1007, %r898, %r882;
	xor.b32  	%r1008, %r1007, %r946;
	xor.b32  	%r1009, %r1008, %r986;
	shf.l.wrap.b32 	%r1010, %r1009, %r1009, 1;
	add.s32 	%r1011, %r324, %r1010;
	add.s32 	%r1012, %r1011, %r323;
	add.s32 	%r1013, %r1012, %r1006;
	add.s32 	%r333, %r1013, -899497514;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r1014, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 150;
	// end inline asm
	xor.b32  	%r1015, %r906, %r890;
	xor.b32  	%r1016, %r1015, %r954;
	xor.b32  	%r1017, %r1016, %r994;
	shf.l.wrap.b32 	%r1018, %r1017, %r1017, 1;
	add.s32 	%r1019, %r328, %r1018;
	add.s32 	%r1020, %r1019, %r327;
	add.s32 	%r1021, %r1020, %r1014;
	add.s32 	%r337, %r1021, -899497514;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r1022, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 150;
	// end inline asm
	xor.b32  	%r1023, %r914, %r898;
	xor.b32  	%r1024, %r1023, %r962;
	xor.b32  	%r1025, %r1024, %r1002;
	shf.l.wrap.b32 	%r1026, %r1025, %r1025, 1;
	add.s32 	%r1027, %r332, %r1026;
	add.s32 	%r1028, %r1027, %r331;
	add.s32 	%r1029, %r1028, %r1022;
	add.s32 	%r1030, %r1029, -899497514;
	shf.l.wrap.b32 	%r338, %r333, %r333, 30;
	shf.l.wrap.b32 	%r1031, %r1030, %r1030, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r338, %r339, 150;
	// end inline asm
	xor.b32  	%r1032, %r922, %r906;
	xor.b32  	%r1033, %r1032, %r970;
	xor.b32  	%r1034, %r1033, %r1010;
	shf.l.wrap.b32 	%r1035, %r1034, %r1034, 1;
	shf.l.wrap.b32 	%r4, %r337, %r337, 30;
	add.s32 	%r1036, %r336, %r1035;
	add.s32 	%r1037, %r1036, %r335;
	add.s32 	%r1038, %r1037, %r1031;
	add.s32 	%r2014, %r1038, 833086679;
	add.s32 	%r2013, %r1029, -1171231393;
	add.s32 	%r2012, %r4, -1732584194;
	add.s32 	%r2011, %r338, 271733878;
	add.s32 	%r2010, %r339, -1009589776;
	@%p1 bra 	$L__BB0_2;

	ld.global.u32 	%r1359, [%rd2+16];
	shf.l.wrap.b32 	%r1360, %r1359, %r1359, 16;
	shl.b32 	%r1361, %r1360, 8;
	and.b32  	%r1362, %r1361, -16711936;
	shr.u32 	%r1363, %r1360, 8;
	and.b32  	%r1364, %r1363, 16711935;
	or.b32  	%r1365, %r1362, %r1364;
	ld.global.u32 	%r1366, [%rd2+20];
	shf.l.wrap.b32 	%r1367, %r1366, %r1366, 16;
	shl.b32 	%r1368, %r1367, 8;
	and.b32  	%r1369, %r1368, -16711936;
	shr.u32 	%r1370, %r1367, 8;
	and.b32  	%r1371, %r1370, 16711935;
	or.b32  	%r1372, %r1369, %r1371;
	ld.global.u32 	%r1373, [%rd2+24];
	shf.l.wrap.b32 	%r1374, %r1373, %r1373, 16;
	shl.b32 	%r1375, %r1374, 8;
	and.b32  	%r1376, %r1375, -16711936;
	shr.u32 	%r1377, %r1374, 8;
	and.b32  	%r1378, %r1377, 16711935;
	or.b32  	%r1379, %r1376, %r1378;
	ld.global.u32 	%r1380, [%rd2+28];
	shf.l.wrap.b32 	%r1381, %r1380, %r1380, 16;
	shl.b32 	%r1382, %r1381, 8;
	and.b32  	%r1383, %r1382, -16711936;
	shr.u32 	%r1384, %r1381, 8;
	and.b32  	%r1385, %r1384, 16711935;
	or.b32  	%r1386, %r1383, %r1385;
	add.s32 	%r1387, %r1, 16;
	mul.wide.u32 	%rd12, %r1387, 4;
	add.s64 	%rd13, %rd3, %rd12;
	ld.global.u32 	%r1388, [%rd13];
	shf.l.wrap.b32 	%r1389, %r1388, %r1388, 16;
	shl.b32 	%r1390, %r1389, 8;
	and.b32  	%r1391, %r1390, -16711936;
	shr.u32 	%r1392, %r1389, 8;
	and.b32  	%r1393, %r1392, 16711935;
	or.b32  	%r1394, %r1391, %r1393;
	ld.global.u32 	%r1395, [%rd13+4];
	shf.l.wrap.b32 	%r1396, %r1395, %r1395, 16;
	shl.b32 	%r1397, %r1396, 8;
	and.b32  	%r1398, %r1397, -16711936;
	shr.u32 	%r1399, %r1396, 8;
	and.b32  	%r1400, %r1399, 16711935;
	or.b32  	%r1401, %r1398, %r1400;
	ld.global.u32 	%r1402, [%rd13+8];
	shf.l.wrap.b32 	%r1403, %r1402, %r1402, 16;
	shl.b32 	%r1404, %r1403, 8;
	and.b32  	%r1405, %r1404, -16711936;
	shr.u32 	%r1406, %r1403, 8;
	and.b32  	%r1407, %r1406, 16711935;
	or.b32  	%r1408, %r1405, %r1407;
	ld.global.u32 	%r1409, [%rd13+12];
	shf.l.wrap.b32 	%r1410, %r1409, %r1409, 16;
	shl.b32 	%r1411, %r1410, 8;
	and.b32  	%r1412, %r1411, -16711936;
	shr.u32 	%r1413, %r1410, 8;
	and.b32  	%r1414, %r1413, 16711935;
	or.b32  	%r1415, %r1412, %r1414;
	ld.global.u32 	%r1416, [%rd13+16];
	shf.l.wrap.b32 	%r1417, %r1416, %r1416, 16;
	shl.b32 	%r1418, %r1417, 8;
	and.b32  	%r1419, %r1418, -16711936;
	shr.u32 	%r1420, %r1417, 8;
	and.b32  	%r1421, %r1420, 16711935;
	or.b32  	%r1422, %r1419, %r1421;
	ld.global.u32 	%r1423, [%rd13+20];
	shf.l.wrap.b32 	%r1424, %r1423, %r1423, 16;
	shl.b32 	%r1425, %r1424, 8;
	and.b32  	%r1426, %r1425, -16711936;
	shr.u32 	%r1427, %r1424, 8;
	and.b32  	%r1428, %r1427, 16711935;
	or.b32  	%r1429, %r1426, %r1428;
	ld.global.u32 	%r1430, [%rd13+24];
	shf.l.wrap.b32 	%r1431, %r1430, %r1430, 16;
	shl.b32 	%r1432, %r1431, 8;
	and.b32  	%r1433, %r1432, -16711936;
	shr.u32 	%r1434, %r1431, 8;
	and.b32  	%r1435, %r1434, 16711935;
	or.b32  	%r1436, %r1433, %r1435;
	ld.global.u32 	%r1437, [%rd13+28];
	shf.l.wrap.b32 	%r1438, %r1437, %r1437, 16;
	shl.b32 	%r1439, %r1438, 8;
	and.b32  	%r1440, %r1439, -16711936;
	shr.u32 	%r1441, %r1438, 8;
	and.b32  	%r1442, %r1441, 16711935;
	or.b32  	%r1443, %r1440, %r1442;
	shf.l.wrap.b32 	%r1444, %r2014, %r2014, 5;
	add.s32 	%r1445, %r1444, %r2010;
	// begin inline asm
	lop3.b32 %r1039, %r2013, %r2012, %r2011, 202;
	// end inline asm
	add.s32 	%r1446, %r1445, %r1039;
	add.s32 	%r1447, %r1446, %r1365;
	add.s32 	%r1048, %r1447, 1518500249;
	shf.l.wrap.b32 	%r1448, %r1048, %r1048, 5;
	shf.l.wrap.b32 	%r1050, %r2013, %r2013, 30;
	// begin inline asm
	lop3.b32 %r1043, %r2014, %r1050, %r2012, 202;
	// end inline asm
	add.s32 	%r1449, %r338, %r1043;
	add.s32 	%r1450, %r1449, %r1372;
	add.s32 	%r1451, %r1450, %r1448;
	add.s32 	%r1052, %r1451, 1790234127;
	shf.l.wrap.b32 	%r1452, %r1052, %r1052, 5;
	shf.l.wrap.b32 	%r1054, %r2014, %r2014, 30;
	// begin inline asm
	lop3.b32 %r1047, %r1048, %r1054, %r1050, 202;
	// end inline asm
	add.s32 	%r1453, %r4, %r1047;
	add.s32 	%r1454, %r1453, %r1379;
	add.s32 	%r1455, %r1454, %r1452;
	add.s32 	%r1056, %r1455, -214083945;
	shf.l.wrap.b32 	%r1058, %r1048, %r1048, 30;
	shf.l.wrap.b32 	%r1456, %r1056, %r1056, 5;
	// begin inline asm
	lop3.b32 %r1051, %r1052, %r1058, %r1054, 202;
	// end inline asm
	add.s32 	%r1457, %r1050, %r1051;
	add.s32 	%r1458, %r1457, %r1386;
	add.s32 	%r1459, %r1458, %r1456;
	add.s32 	%r1060, %r1459, 1518500249;
	shf.l.wrap.b32 	%r1062, %r1052, %r1052, 30;
	shf.l.wrap.b32 	%r1460, %r1060, %r1060, 5;
	// begin inline asm
	lop3.b32 %r1055, %r1056, %r1062, %r1058, 202;
	// end inline asm
	add.s32 	%r1461, %r1054, %r1055;
	add.s32 	%r1462, %r1461, %r1394;
	add.s32 	%r1463, %r1462, %r1460;
	add.s32 	%r1064, %r1463, 1518500249;
	shf.l.wrap.b32 	%r1066, %r1056, %r1056, 30;
	shf.l.wrap.b32 	%r1464, %r1064, %r1064, 5;
	// begin inline asm
	lop3.b32 %r1059, %r1060, %r1066, %r1062, 202;
	// end inline asm
	add.s32 	%r1465, %r1058, %r1059;
	add.s32 	%r1466, %r1465, %r1401;
	add.s32 	%r1467, %r1466, %r1464;
	add.s32 	%r1068, %r1467, 1518500249;
	shf.l.wrap.b32 	%r1070, %r1060, %r1060, 30;
	shf.l.wrap.b32 	%r1468, %r1068, %r1068, 5;
	// begin inline asm
	lop3.b32 %r1063, %r1064, %r1070, %r1066, 202;
	// end inline asm
	add.s32 	%r1469, %r1062, %r1063;
	add.s32 	%r1470, %r1469, %r1408;
	add.s32 	%r1471, %r1470, %r1468;
	add.s32 	%r1072, %r1471, 1518500249;
	shf.l.wrap.b32 	%r1074, %r1064, %r1064, 30;
	shf.l.wrap.b32 	%r1472, %r1072, %r1072, 5;
	// begin inline asm
	lop3.b32 %r1067, %r1068, %r1074, %r1070, 202;
	// end inline asm
	add.s32 	%r1473, %r1067, %r1415;
	add.s32 	%r1474, %r1473, %r1066;
	add.s32 	%r1475, %r1474, %r1472;
	add.s32 	%r1076, %r1475, 1518500249;
	shf.l.wrap.b32 	%r1078, %r1068, %r1068, 30;
	shf.l.wrap.b32 	%r1476, %r1076, %r1076, 5;
	// begin inline asm
	lop3.b32 %r1071, %r1072, %r1078, %r1074, 202;
	// end inline asm
	add.s32 	%r1477, %r1071, %r1422;
	add.s32 	%r1478, %r1477, %r1070;
	add.s32 	%r1479, %r1478, %r1476;
	add.s32 	%r1080, %r1479, 1518500249;
	shf.l.wrap.b32 	%r1082, %r1072, %r1072, 30;
	shf.l.wrap.b32 	%r1480, %r1080, %r1080, 5;
	// begin inline asm
	lop3.b32 %r1075, %r1076, %r1082, %r1078, 202;
	// end inline asm
	add.s32 	%r1481, %r1075, %r1429;
	add.s32 	%r1482, %r1481, %r1074;
	add.s32 	%r1483, %r1482, %r1480;
	add.s32 	%r1084, %r1483, 1518500249;
	shf.l.wrap.b32 	%r1086, %r1076, %r1076, 30;
	shf.l.wrap.b32 	%r1484, %r1084, %r1084, 5;
	// begin inline asm
	lop3.b32 %r1079, %r1080, %r1086, %r1082, 202;
	// end inline asm
	add.s32 	%r1485, %r1079, %r1436;
	add.s32 	%r1486, %r1485, %r1078;
	add.s32 	%r1487, %r1486, %r1484;
	add.s32 	%r1088, %r1487, 1518500249;
	shf.l.wrap.b32 	%r1090, %r1080, %r1080, 30;
	shf.l.wrap.b32 	%r1488, %r1088, %r1088, 5;
	// begin inline asm
	lop3.b32 %r1083, %r1084, %r1090, %r1086, 202;
	// end inline asm
	add.s32 	%r1489, %r1083, %r1443;
	add.s32 	%r1490, %r1489, %r1082;
	add.s32 	%r1491, %r1490, %r1488;
	add.s32 	%r1092, %r1491, 1518500249;
	shf.l.wrap.b32 	%r1094, %r1084, %r1084, 30;
	shf.l.wrap.b32 	%r1492, %r1092, %r1092, 5;
	// begin inline asm
	lop3.b32 %r1087, %r1088, %r1094, %r1090, 202;
	// end inline asm
	add.s32 	%r1493, %r1087, %r1086;
	add.s32 	%r1494, %r1493, %r1492;
	add.s32 	%r1096, %r1494, 1518500249;
	shf.l.wrap.b32 	%r1098, %r1088, %r1088, 30;
	shf.l.wrap.b32 	%r1495, %r1096, %r1096, 5;
	// begin inline asm
	lop3.b32 %r1091, %r1092, %r1098, %r1094, 202;
	// end inline asm
	add.s32 	%r1496, %r1091, %r1090;
	add.s32 	%r1497, %r1496, %r1495;
	add.s32 	%r1100, %r1497, 1518500249;
	shf.l.wrap.b32 	%r1102, %r1092, %r1092, 30;
	shf.l.wrap.b32 	%r1498, %r1100, %r1100, 5;
	// begin inline asm
	lop3.b32 %r1095, %r1096, %r1102, %r1098, 202;
	// end inline asm
	add.s32 	%r1499, %r1095, %r1094;
	add.s32 	%r1500, %r1499, %r1498;
	add.s32 	%r1104, %r1500, 1518500249;
	shf.l.wrap.b32 	%r1106, %r1096, %r1096, 30;
	shf.l.wrap.b32 	%r1501, %r1104, %r1104, 5;
	// begin inline asm
	lop3.b32 %r1099, %r1100, %r1106, %r1102, 202;
	// end inline asm
	add.s32 	%r1502, %r1099, %r2;
	add.s32 	%r1503, %r1502, %r1098;
	add.s32 	%r1504, %r1503, %r1501;
	add.s32 	%r1108, %r1504, 1518500249;
	shf.l.wrap.b32 	%r1110, %r1100, %r1100, 30;
	shf.l.wrap.b32 	%r1505, %r1108, %r1108, 5;
	// begin inline asm
	lop3.b32 %r1103, %r1104, %r1110, %r1106, 202;
	// end inline asm
	xor.b32  	%r1506, %r1422, %r1379;
	xor.b32  	%r1507, %r1506, %r1365;
	shf.l.wrap.b32 	%r1508, %r1507, %r1507, 1;
	add.s32 	%r1509, %r1103, %r1508;
	add.s32 	%r1510, %r1509, %r1102;
	add.s32 	%r1511, %r1510, %r1505;
	add.s32 	%r1112, %r1511, 1518500249;
	shf.l.wrap.b32 	%r1114, %r1104, %r1104, 30;
	shf.l.wrap.b32 	%r1512, %r1112, %r1112, 5;
	// begin inline asm
	lop3.b32 %r1107, %r1108, %r1114, %r1110, 202;
	// end inline asm
	xor.b32  	%r1513, %r1429, %r1386;
	xor.b32  	%r1514, %r1513, %r1372;
	shf.l.wrap.b32 	%r1515, %r1514, %r1514, 1;
	add.s32 	%r1516, %r1107, %r1515;
	add.s32 	%r1517, %r1516, %r1106;
	add.s32 	%r1518, %r1517, %r1512;
	add.s32 	%r1116, %r1518, 1518500249;
	shf.l.wrap.b32 	%r1118, %r1108, %r1108, 30;
	shf.l.wrap.b32 	%r1519, %r1116, %r1116, 5;
	// begin inline asm
	lop3.b32 %r1111, %r1112, %r1118, %r1114, 202;
	// end inline asm
	xor.b32  	%r1520, %r1436, %r2;
	xor.b32  	%r1521, %r1520, %r1394;
	xor.b32  	%r1522, %r1521, %r1379;
	shf.l.wrap.b32 	%r1523, %r1522, %r1522, 1;
	add.s32 	%r1524, %r1111, %r1523;
	add.s32 	%r1525, %r1524, %r1110;
	add.s32 	%r1526, %r1525, %r1519;
	add.s32 	%r1120, %r1526, 1518500249;
	shf.l.wrap.b32 	%r1122, %r1112, %r1112, 30;
	shf.l.wrap.b32 	%r1527, %r1120, %r1120, 5;
	// begin inline asm
	lop3.b32 %r1115, %r1116, %r1122, %r1118, 202;
	// end inline asm
	xor.b32  	%r1528, %r1443, %r1508;
	xor.b32  	%r1529, %r1528, %r1401;
	xor.b32  	%r1530, %r1529, %r1386;
	shf.l.wrap.b32 	%r1531, %r1530, %r1530, 1;
	add.s32 	%r1532, %r1115, %r1531;
	add.s32 	%r1533, %r1532, %r1114;
	add.s32 	%r1534, %r1533, %r1527;
	add.s32 	%r1124, %r1534, 1518500249;
	shf.l.wrap.b32 	%r1126, %r1116, %r1116, 30;
	shf.l.wrap.b32 	%r1535, %r1124, %r1124, 5;
	// begin inline asm
	lop3.b32 %r1119, %r1120, %r1126, %r1122, 150;
	// end inline asm
	xor.b32  	%r1536, %r1515, %r1408;
	xor.b32  	%r1537, %r1536, %r1394;
	shf.l.wrap.b32 	%r1538, %r1537, %r1537, 1;
	add.s32 	%r1539, %r1119, %r1538;
	add.s32 	%r1540, %r1539, %r1118;
	add.s32 	%r1541, %r1540, %r1535;
	add.s32 	%r1128, %r1541, 1859775393;
	shf.l.wrap.b32 	%r1130, %r1120, %r1120, 30;
	shf.l.wrap.b32 	%r1542, %r1128, %r1128, 5;
	// begin inline asm
	lop3.b32 %r1123, %r1124, %r1130, %r1126, 150;
	// end inline asm
	xor.b32  	%r1543, %r1523, %r1415;
	xor.b32  	%r1544, %r1543, %r1401;
	shf.l.wrap.b32 	%r1545, %r1544, %r1544, 1;
	add.s32 	%r1546, %r1123, %r1545;
	add.s32 	%r1547, %r1546, %r1122;
	add.s32 	%r1548, %r1547, %r1542;
	add.s32 	%r1132, %r1548, 1859775393;
	shf.l.wrap.b32 	%r1134, %r1124, %r1124, 30;
	shf.l.wrap.b32 	%r1549, %r1132, %r1132, 5;
	// begin inline asm
	lop3.b32 %r1127, %r1128, %r1134, %r1130, 150;
	// end inline asm
	xor.b32  	%r1550, %r1531, %r1422;
	xor.b32  	%r1551, %r1550, %r1408;
	shf.l.wrap.b32 	%r1552, %r1551, %r1551, 1;
	add.s32 	%r1553, %r1127, %r1552;
	add.s32 	%r1554, %r1553, %r1126;
	add.s32 	%r1555, %r1554, %r1549;
	add.s32 	%r1136, %r1555, 1859775393;
	shf.l.wrap.b32 	%r1138, %r1128, %r1128, 30;
	shf.l.wrap.b32 	%r1556, %r1136, %r1136, 5;
	// begin inline asm
	lop3.b32 %r1131, %r1132, %r1138, %r1134, 150;
	// end inline asm
	xor.b32  	%r1557, %r2, %r1538;
	xor.b32  	%r1558, %r1557, %r1429;
	xor.b32  	%r1559, %r1558, %r1415;
	shf.l.wrap.b32 	%r1560, %r1559, %r1559, 1;
	add.s32 	%r1561, %r1131, %r1560;
	add.s32 	%r1562, %r1561, %r1130;
	add.s32 	%r1563, %r1562, %r1556;
	add.s32 	%r1140, %r1563, 1859775393;
	shf.l.wrap.b32 	%r1142, %r1132, %r1132, 30;
	shf.l.wrap.b32 	%r1564, %r1140, %r1140, 5;
	// begin inline asm
	lop3.b32 %r1135, %r1136, %r1142, %r1138, 150;
	// end inline asm
	xor.b32  	%r1565, %r1545, %r1508;
	xor.b32  	%r1566, %r1565, %r1436;
	xor.b32  	%r1567, %r1566, %r1422;
	shf.l.wrap.b32 	%r1568, %r1567, %r1567, 1;
	add.s32 	%r1569, %r1135, %r1568;
	add.s32 	%r1570, %r1569, %r1134;
	add.s32 	%r1571, %r1570, %r1564;
	add.s32 	%r1144, %r1571, 1859775393;
	shf.l.wrap.b32 	%r1146, %r1136, %r1136, 30;
	shf.l.wrap.b32 	%r1572, %r1144, %r1144, 5;
	// begin inline asm
	lop3.b32 %r1139, %r1140, %r1146, %r1142, 150;
	// end inline asm
	xor.b32  	%r1573, %r1552, %r1515;
	xor.b32  	%r1574, %r1573, %r1443;
	xor.b32  	%r1575, %r1574, %r1429;
	shf.l.wrap.b32 	%r1576, %r1575, %r1575, 1;
	add.s32 	%r1577, %r1139, %r1576;
	add.s32 	%r1578, %r1577, %r1138;
	add.s32 	%r1579, %r1578, %r1572;
	add.s32 	%r1148, %r1579, 1859775393;
	shf.l.wrap.b32 	%r1150, %r1140, %r1140, 30;
	shf.l.wrap.b32 	%r1580, %r1148, %r1148, 5;
	// begin inline asm
	lop3.b32 %r1143, %r1144, %r1150, %r1146, 150;
	// end inline asm
	xor.b32  	%r1581, %r1560, %r1523;
	xor.b32  	%r1582, %r1581, %r1436;
	shf.l.wrap.b32 	%r1583, %r1582, %r1582, 1;
	add.s32 	%r1584, %r1143, %r1583;
	add.s32 	%r1585, %r1584, %r1142;
	add.s32 	%r1586, %r1585, %r1580;
	add.s32 	%r1152, %r1586, 1859775393;
	shf.l.wrap.b32 	%r1154, %r1144, %r1144, 30;
	shf.l.wrap.b32 	%r1587, %r1152, %r1152, 5;
	// begin inline asm
	lop3.b32 %r1147, %r1148, %r1154, %r1150, 150;
	// end inline asm
	xor.b32  	%r1588, %r1568, %r1531;
	xor.b32  	%r1589, %r1588, %r1443;
	shf.l.wrap.b32 	%r1590, %r1589, %r1589, 1;
	add.s32 	%r1591, %r1147, %r1590;
	add.s32 	%r1592, %r1591, %r1146;
	add.s32 	%r1593, %r1592, %r1587;
	add.s32 	%r1156, %r1593, 1859775393;
	shf.l.wrap.b32 	%r1158, %r1148, %r1148, 30;
	shf.l.wrap.b32 	%r1594, %r1156, %r1156, 5;
	// begin inline asm
	lop3.b32 %r1151, %r1152, %r1158, %r1154, 150;
	// end inline asm
	xor.b32  	%r1595, %r1576, %r1538;
	shf.l.wrap.b32 	%r1596, %r1595, %r1595, 1;
	add.s32 	%r1597, %r1151, %r1596;
	add.s32 	%r1598, %r1597, %r1150;
	add.s32 	%r1599, %r1598, %r1594;
	add.s32 	%r1160, %r1599, 1859775393;
	shf.l.wrap.b32 	%r1162, %r1152, %r1152, 30;
	shf.l.wrap.b32 	%r1600, %r1160, %r1160, 5;
	// begin inline asm
	lop3.b32 %r1155, %r1156, %r1162, %r1158, 150;
	// end inline asm
	xor.b32  	%r1601, %r1583, %r1545;
	xor.b32  	%r1602, %r1601, %r2;
	shf.l.wrap.b32 	%r1603, %r1602, %r1602, 1;
	add.s32 	%r1604, %r1155, %r1603;
	add.s32 	%r1605, %r1604, %r1154;
	add.s32 	%r1606, %r1605, %r1600;
	add.s32 	%r1164, %r1606, 1859775393;
	shf.l.wrap.b32 	%r1166, %r1156, %r1156, 30;
	shf.l.wrap.b32 	%r1607, %r1164, %r1164, 5;
	// begin inline asm
	lop3.b32 %r1159, %r1160, %r1166, %r1162, 150;
	// end inline asm
	xor.b32  	%r1608, %r1552, %r1508;
	xor.b32  	%r1609, %r1608, %r1590;
	shf.l.wrap.b32 	%r1610, %r1609, %r1609, 1;
	add.s32 	%r1611, %r1159, %r1610;
	add.s32 	%r1612, %r1611, %r1158;
	add.s32 	%r1613, %r1612, %r1607;
	add.s32 	%r1168, %r1613, 1859775393;
	shf.l.wrap.b32 	%r1170, %r1160, %r1160, 30;
	shf.l.wrap.b32 	%r1614, %r1168, %r1168, 5;
	// begin inline asm
	lop3.b32 %r1163, %r1164, %r1170, %r1166, 150;
	// end inline asm
	xor.b32  	%r1615, %r1560, %r1515;
	xor.b32  	%r1616, %r1615, %r1596;
	xor.b32  	%r1617, %r1616, %r2;
	shf.l.wrap.b32 	%r1618, %r1617, %r1617, 1;
	add.s32 	%r1619, %r1163, %r1618;
	add.s32 	%r1620, %r1619, %r1162;
	add.s32 	%r1621, %r1620, %r1614;
	add.s32 	%r1172, %r1621, 1859775393;
	shf.l.wrap.b32 	%r1174, %r1164, %r1164, 30;
	shf.l.wrap.b32 	%r1622, %r1172, %r1172, 5;
	// begin inline asm
	lop3.b32 %r1167, %r1168, %r1174, %r1170, 150;
	// end inline asm
	xor.b32  	%r1623, %r1523, %r1508;
	xor.b32  	%r1624, %r1623, %r1568;
	xor.b32  	%r1625, %r1624, %r1603;
	shf.l.wrap.b32 	%r1626, %r1625, %r1625, 1;
	add.s32 	%r1627, %r1167, %r1626;
	add.s32 	%r1628, %r1627, %r1166;
	add.s32 	%r1629, %r1628, %r1622;
	add.s32 	%r1176, %r1629, 1859775393;
	shf.l.wrap.b32 	%r1178, %r1168, %r1168, 30;
	shf.l.wrap.b32 	%r1630, %r1176, %r1176, 5;
	// begin inline asm
	lop3.b32 %r1171, %r1172, %r1178, %r1174, 150;
	// end inline asm
	xor.b32  	%r1631, %r1531, %r1515;
	xor.b32  	%r1632, %r1631, %r1576;
	xor.b32  	%r1633, %r1632, %r1610;
	shf.l.wrap.b32 	%r1634, %r1633, %r1633, 1;
	add.s32 	%r1635, %r1171, %r1634;
	add.s32 	%r1636, %r1635, %r1170;
	add.s32 	%r1637, %r1636, %r1630;
	add.s32 	%r1180, %r1637, 1859775393;
	shf.l.wrap.b32 	%r1182, %r1172, %r1172, 30;
	shf.l.wrap.b32 	%r1638, %r1180, %r1180, 5;
	// begin inline asm
	lop3.b32 %r1175, %r1176, %r1182, %r1178, 150;
	// end inline asm
	xor.b32  	%r1639, %r1538, %r1523;
	xor.b32  	%r1640, %r1639, %r1583;
	xor.b32  	%r1641, %r1640, %r1618;
	shf.l.wrap.b32 	%r1642, %r1641, %r1641, 1;
	add.s32 	%r1643, %r1175, %r1642;
	add.s32 	%r1644, %r1643, %r1174;
	add.s32 	%r1645, %r1644, %r1638;
	add.s32 	%r1184, %r1645, 1859775393;
	shf.l.wrap.b32 	%r1186, %r1176, %r1176, 30;
	shf.l.wrap.b32 	%r1646, %r1184, %r1184, 5;
	// begin inline asm
	lop3.b32 %r1179, %r1180, %r1186, %r1182, 150;
	// end inline asm
	xor.b32  	%r1647, %r1545, %r1531;
	xor.b32  	%r1648, %r1647, %r1590;
	xor.b32  	%r1649, %r1648, %r1626;
	shf.l.wrap.b32 	%r1650, %r1649, %r1649, 1;
	add.s32 	%r1651, %r1179, %r1650;
	add.s32 	%r1652, %r1651, %r1178;
	add.s32 	%r1653, %r1652, %r1646;
	add.s32 	%r1188, %r1653, 1859775393;
	shf.l.wrap.b32 	%r1190, %r1180, %r1180, 30;
	shf.l.wrap.b32 	%r1654, %r1188, %r1188, 5;
	// begin inline asm
	lop3.b32 %r1183, %r1184, %r1190, %r1186, 150;
	// end inline asm
	xor.b32  	%r1655, %r1552, %r1538;
	xor.b32  	%r1656, %r1655, %r1596;
	xor.b32  	%r1657, %r1656, %r1634;
	shf.l.wrap.b32 	%r1658, %r1657, %r1657, 1;
	add.s32 	%r1659, %r1183, %r1658;
	add.s32 	%r1660, %r1659, %r1182;
	add.s32 	%r1661, %r1660, %r1654;
	add.s32 	%r1192, %r1661, 1859775393;
	shf.l.wrap.b32 	%r1194, %r1184, %r1184, 30;
	shf.l.wrap.b32 	%r1662, %r1192, %r1192, 5;
	// begin inline asm
	lop3.b32 %r1187, %r1188, %r1194, %r1190, 150;
	// end inline asm
	xor.b32  	%r1663, %r1560, %r1545;
	xor.b32  	%r1664, %r1663, %r1603;
	xor.b32  	%r1665, %r1664, %r1642;
	shf.l.wrap.b32 	%r1666, %r1665, %r1665, 1;
	add.s32 	%r1667, %r1187, %r1666;
	add.s32 	%r1668, %r1667, %r1186;
	add.s32 	%r1669, %r1668, %r1662;
	add.s32 	%r1196, %r1669, 1859775393;
	shf.l.wrap.b32 	%r1198, %r1188, %r1188, 30;
	shf.l.wrap.b32 	%r1670, %r1196, %r1196, 5;
	// begin inline asm
	lop3.b32 %r1191, %r1192, %r1198, %r1194, 150;
	// end inline asm
	xor.b32  	%r1671, %r1568, %r1552;
	xor.b32  	%r1672, %r1671, %r1610;
	xor.b32  	%r1673, %r1672, %r1650;
	shf.l.wrap.b32 	%r1674, %r1673, %r1673, 1;
	add.s32 	%r1675, %r1191, %r1674;
	add.s32 	%r1676, %r1675, %r1190;
	add.s32 	%r1677, %r1676, %r1670;
	add.s32 	%r1200, %r1677, 1859775393;
	shf.l.wrap.b32 	%r1202, %r1192, %r1192, 30;
	shf.l.wrap.b32 	%r1678, %r1200, %r1200, 5;
	// begin inline asm
	lop3.b32 %r1195, %r1196, %r1202, %r1198, 150;
	// end inline asm
	xor.b32  	%r1679, %r1576, %r1560;
	xor.b32  	%r1680, %r1679, %r1618;
	xor.b32  	%r1681, %r1680, %r1658;
	shf.l.wrap.b32 	%r1682, %r1681, %r1681, 1;
	add.s32 	%r1683, %r1195, %r1682;
	add.s32 	%r1684, %r1683, %r1194;
	add.s32 	%r1685, %r1684, %r1678;
	add.s32 	%r1204, %r1685, 1859775393;
	shf.l.wrap.b32 	%r1206, %r1196, %r1196, 30;
	shf.l.wrap.b32 	%r1686, %r1204, %r1204, 5;
	// begin inline asm
	lop3.b32 %r1199, %r1200, %r1206, %r1202, 232;
	// end inline asm
	xor.b32  	%r1687, %r1583, %r1568;
	xor.b32  	%r1688, %r1687, %r1626;
	xor.b32  	%r1689, %r1688, %r1666;
	shf.l.wrap.b32 	%r1690, %r1689, %r1689, 1;
	add.s32 	%r1691, %r1199, %r1690;
	add.s32 	%r1692, %r1691, %r1198;
	add.s32 	%r1693, %r1692, %r1686;
	add.s32 	%r1208, %r1693, -1894007588;
	shf.l.wrap.b32 	%r1210, %r1200, %r1200, 30;
	shf.l.wrap.b32 	%r1694, %r1208, %r1208, 5;
	// begin inline asm
	lop3.b32 %r1203, %r1204, %r1210, %r1206, 232;
	// end inline asm
	xor.b32  	%r1695, %r1590, %r1576;
	xor.b32  	%r1696, %r1695, %r1634;
	xor.b32  	%r1697, %r1696, %r1674;
	shf.l.wrap.b32 	%r1698, %r1697, %r1697, 1;
	add.s32 	%r1699, %r1203, %r1698;
	add.s32 	%r1700, %r1699, %r1202;
	add.s32 	%r1701, %r1700, %r1694;
	add.s32 	%r1212, %r1701, -1894007588;
	shf.l.wrap.b32 	%r1214, %r1204, %r1204, 30;
	shf.l.wrap.b32 	%r1702, %r1212, %r1212, 5;
	// begin inline asm
	lop3.b32 %r1207, %r1208, %r1214, %r1210, 232;
	// end inline asm
	xor.b32  	%r1703, %r1596, %r1583;
	xor.b32  	%r1704, %r1703, %r1642;
	xor.b32  	%r1705, %r1704, %r1682;
	shf.l.wrap.b32 	%r1706, %r1705, %r1705, 1;
	add.s32 	%r1707, %r1207, %r1706;
	add.s32 	%r1708, %r1707, %r1206;
	add.s32 	%r1709, %r1708, %r1702;
	add.s32 	%r1216, %r1709, -1894007588;
	shf.l.wrap.b32 	%r1218, %r1208, %r1208, 30;
	shf.l.wrap.b32 	%r1710, %r1216, %r1216, 5;
	// begin inline asm
	lop3.b32 %r1211, %r1212, %r1218, %r1214, 232;
	// end inline asm
	xor.b32  	%r1711, %r1603, %r1590;
	xor.b32  	%r1712, %r1711, %r1650;
	xor.b32  	%r1713, %r1712, %r1690;
	shf.l.wrap.b32 	%r1714, %r1713, %r1713, 1;
	add.s32 	%r1715, %r1211, %r1714;
	add.s32 	%r1716, %r1715, %r1210;
	add.s32 	%r1717, %r1716, %r1710;
	add.s32 	%r1220, %r1717, -1894007588;
	shf.l.wrap.b32 	%r1222, %r1212, %r1212, 30;
	shf.l.wrap.b32 	%r1718, %r1220, %r1220, 5;
	// begin inline asm
	lop3.b32 %r1215, %r1216, %r1222, %r1218, 232;
	// end inline asm
	xor.b32  	%r1719, %r1610, %r1596;
	xor.b32  	%r1720, %r1719, %r1658;
	xor.b32  	%r1721, %r1720, %r1698;
	shf.l.wrap.b32 	%r1722, %r1721, %r1721, 1;
	add.s32 	%r1723, %r1215, %r1722;
	add.s32 	%r1724, %r1723, %r1214;
	add.s32 	%r1725, %r1724, %r1718;
	add.s32 	%r1224, %r1725, -1894007588;
	shf.l.wrap.b32 	%r1226, %r1216, %r1216, 30;
	shf.l.wrap.b32 	%r1726, %r1224, %r1224, 5;
	// begin inline asm
	lop3.b32 %r1219, %r1220, %r1226, %r1222, 232;
	// end inline asm
	xor.b32  	%r1727, %r1618, %r1603;
	xor.b32  	%r1728, %r1727, %r1666;
	xor.b32  	%r1729, %r1728, %r1706;
	shf.l.wrap.b32 	%r1730, %r1729, %r1729, 1;
	add.s32 	%r1731, %r1219, %r1730;
	add.s32 	%r1732, %r1731, %r1218;
	add.s32 	%r1733, %r1732, %r1726;
	add.s32 	%r1228, %r1733, -1894007588;
	shf.l.wrap.b32 	%r1230, %r1220, %r1220, 30;
	shf.l.wrap.b32 	%r1734, %r1228, %r1228, 5;
	// begin inline asm
	lop3.b32 %r1223, %r1224, %r1230, %r1226, 232;
	// end inline asm
	xor.b32  	%r1735, %r1626, %r1610;
	xor.b32  	%r1736, %r1735, %r1674;
	xor.b32  	%r1737, %r1736, %r1714;
	shf.l.wrap.b32 	%r1738, %r1737, %r1737, 1;
	add.s32 	%r1739, %r1223, %r1738;
	add.s32 	%r1740, %r1739, %r1222;
	add.s32 	%r1741, %r1740, %r1734;
	add.s32 	%r1232, %r1741, -1894007588;
	shf.l.wrap.b32 	%r1234, %r1224, %r1224, 30;
	shf.l.wrap.b32 	%r1742, %r1232, %r1232, 5;
	// begin inline asm
	lop3.b32 %r1227, %r1228, %r1234, %r1230, 232;
	// end inline asm
	xor.b32  	%r1743, %r1634, %r1618;
	xor.b32  	%r1744, %r1743, %r1682;
	xor.b32  	%r1745, %r1744, %r1722;
	shf.l.wrap.b32 	%r1746, %r1745, %r1745, 1;
	add.s32 	%r1747, %r1227, %r1746;
	add.s32 	%r1748, %r1747, %r1226;
	add.s32 	%r1749, %r1748, %r1742;
	add.s32 	%r1236, %r1749, -1894007588;
	shf.l.wrap.b32 	%r1238, %r1228, %r1228, 30;
	shf.l.wrap.b32 	%r1750, %r1236, %r1236, 5;
	// begin inline asm
	lop3.b32 %r1231, %r1232, %r1238, %r1234, 232;
	// end inline asm
	xor.b32  	%r1751, %r1642, %r1626;
	xor.b32  	%r1752, %r1751, %r1690;
	xor.b32  	%r1753, %r1752, %r1730;
	shf.l.wrap.b32 	%r1754, %r1753, %r1753, 1;
	add.s32 	%r1755, %r1231, %r1754;
	add.s32 	%r1756, %r1755, %r1230;
	add.s32 	%r1757, %r1756, %r1750;
	add.s32 	%r1240, %r1757, -1894007588;
	shf.l.wrap.b32 	%r1242, %r1232, %r1232, 30;
	shf.l.wrap.b32 	%r1758, %r1240, %r1240, 5;
	// begin inline asm
	lop3.b32 %r1235, %r1236, %r1242, %r1238, 232;
	// end inline asm
	xor.b32  	%r1759, %r1650, %r1634;
	xor.b32  	%r1760, %r1759, %r1698;
	xor.b32  	%r1761, %r1760, %r1738;
	shf.l.wrap.b32 	%r1762, %r1761, %r1761, 1;
	add.s32 	%r1763, %r1235, %r1762;
	add.s32 	%r1764, %r1763, %r1234;
	add.s32 	%r1765, %r1764, %r1758;
	add.s32 	%r1244, %r1765, -1894007588;
	shf.l.wrap.b32 	%r1246, %r1236, %r1236, 30;
	shf.l.wrap.b32 	%r1766, %r1244, %r1244, 5;
	// begin inline asm
	lop3.b32 %r1239, %r1240, %r1246, %r1242, 232;
	// end inline asm
	xor.b32  	%r1767, %r1658, %r1642;
	xor.b32  	%r1768, %r1767, %r1706;
	xor.b32  	%r1769, %r1768, %r1746;
	shf.l.wrap.b32 	%r1770, %r1769, %r1769, 1;
	add.s32 	%r1771, %r1239, %r1770;
	add.s32 	%r1772, %r1771, %r1238;
	add.s32 	%r1773, %r1772, %r1766;
	add.s32 	%r1248, %r1773, -1894007588;
	shf.l.wrap.b32 	%r1250, %r1240, %r1240, 30;
	shf.l.wrap.b32 	%r1774, %r1248, %r1248, 5;
	// begin inline asm
	lop3.b32 %r1243, %r1244, %r1250, %r1246, 232;
	// end inline asm
	xor.b32  	%r1775, %r1666, %r1650;
	xor.b32  	%r1776, %r1775, %r1714;
	xor.b32  	%r1777, %r1776, %r1754;
	shf.l.wrap.b32 	%r1778, %r1777, %r1777, 1;
	add.s32 	%r1779, %r1243, %r1778;
	add.s32 	%r1780, %r1779, %r1242;
	add.s32 	%r1781, %r1780, %r1774;
	add.s32 	%r1252, %r1781, -1894007588;
	shf.l.wrap.b32 	%r1254, %r1244, %r1244, 30;
	shf.l.wrap.b32 	%r1782, %r1252, %r1252, 5;
	// begin inline asm
	lop3.b32 %r1247, %r1248, %r1254, %r1250, 232;
	// end inline asm
	xor.b32  	%r1783, %r1674, %r1658;
	xor.b32  	%r1784, %r1783, %r1722;
	xor.b32  	%r1785, %r1784, %r1762;
	shf.l.wrap.b32 	%r1786, %r1785, %r1785, 1;
	add.s32 	%r1787, %r1247, %r1786;
	add.s32 	%r1788, %r1787, %r1246;
	add.s32 	%r1789, %r1788, %r1782;
	add.s32 	%r1256, %r1789, -1894007588;
	shf.l.wrap.b32 	%r1258, %r1248, %r1248, 30;
	shf.l.wrap.b32 	%r1790, %r1256, %r1256, 5;
	// begin inline asm
	lop3.b32 %r1251, %r1252, %r1258, %r1254, 232;
	// end inline asm
	xor.b32  	%r1791, %r1682, %r1666;
	xor.b32  	%r1792, %r1791, %r1730;
	xor.b32  	%r1793, %r1792, %r1770;
	shf.l.wrap.b32 	%r1794, %r1793, %r1793, 1;
	add.s32 	%r1795, %r1251, %r1794;
	add.s32 	%r1796, %r1795, %r1250;
	add.s32 	%r1797, %r1796, %r1790;
	add.s32 	%r1260, %r1797, -1894007588;
	shf.l.wrap.b32 	%r1262, %r1252, %r1252, 30;
	shf.l.wrap.b32 	%r1798, %r1260, %r1260, 5;
	// begin inline asm
	lop3.b32 %r1255, %r1256, %r1262, %r1258, 232;
	// end inline asm
	xor.b32  	%r1799, %r1690, %r1674;
	xor.b32  	%r1800, %r1799, %r1738;
	xor.b32  	%r1801, %r1800, %r1778;
	shf.l.wrap.b32 	%r1802, %r1801, %r1801, 1;
	add.s32 	%r1803, %r1255, %r1802;
	add.s32 	%r1804, %r1803, %r1254;
	add.s32 	%r1805, %r1804, %r1798;
	add.s32 	%r1264, %r1805, -1894007588;
	shf.l.wrap.b32 	%r1266, %r1256, %r1256, 30;
	shf.l.wrap.b32 	%r1806, %r1264, %r1264, 5;
	// begin inline asm
	lop3.b32 %r1259, %r1260, %r1266, %r1262, 232;
	// end inline asm
	xor.b32  	%r1807, %r1698, %r1682;
	xor.b32  	%r1808, %r1807, %r1746;
	xor.b32  	%r1809, %r1808, %r1786;
	shf.l.wrap.b32 	%r1810, %r1809, %r1809, 1;
	add.s32 	%r1811, %r1259, %r1810;
	add.s32 	%r1812, %r1811, %r1258;
	add.s32 	%r1813, %r1812, %r1806;
	add.s32 	%r1268, %r1813, -1894007588;
	shf.l.wrap.b32 	%r1270, %r1260, %r1260, 30;
	shf.l.wrap.b32 	%r1814, %r1268, %r1268, 5;
	// begin inline asm
	lop3.b32 %r1263, %r1264, %r1270, %r1266, 232;
	// end inline asm
	xor.b32  	%r1815, %r1706, %r1690;
	xor.b32  	%r1816, %r1815, %r1754;
	xor.b32  	%r1817, %r1816, %r1794;
	shf.l.wrap.b32 	%r1818, %r1817, %r1817, 1;
	add.s32 	%r1819, %r1263, %r1818;
	add.s32 	%r1820, %r1819, %r1262;
	add.s32 	%r1821, %r1820, %r1814;
	add.s32 	%r1272, %r1821, -1894007588;
	shf.l.wrap.b32 	%r1274, %r1264, %r1264, 30;
	shf.l.wrap.b32 	%r1822, %r1272, %r1272, 5;
	// begin inline asm
	lop3.b32 %r1267, %r1268, %r1274, %r1270, 232;
	// end inline asm
	xor.b32  	%r1823, %r1714, %r1698;
	xor.b32  	%r1824, %r1823, %r1762;
	xor.b32  	%r1825, %r1824, %r1802;
	shf.l.wrap.b32 	%r1826, %r1825, %r1825, 1;
	add.s32 	%r1827, %r1267, %r1826;
	add.s32 	%r1828, %r1827, %r1266;
	add.s32 	%r1829, %r1828, %r1822;
	add.s32 	%r1276, %r1829, -1894007588;
	shf.l.wrap.b32 	%r1278, %r1268, %r1268, 30;
	shf.l.wrap.b32 	%r1830, %r1276, %r1276, 5;
	// begin inline asm
	lop3.b32 %r1271, %r1272, %r1278, %r1274, 232;
	// end inline asm
	xor.b32  	%r1831, %r1722, %r1706;
	xor.b32  	%r1832, %r1831, %r1770;
	xor.b32  	%r1833, %r1832, %r1810;
	shf.l.wrap.b32 	%r1834, %r1833, %r1833, 1;
	add.s32 	%r1835, %r1271, %r1834;
	add.s32 	%r1836, %r1835, %r1270;
	add.s32 	%r1837, %r1836, %r1830;
	add.s32 	%r1280, %r1837, -1894007588;
	shf.l.wrap.b32 	%r1282, %r1272, %r1272, 30;
	shf.l.wrap.b32 	%r1838, %r1280, %r1280, 5;
	// begin inline asm
	lop3.b32 %r1275, %r1276, %r1282, %r1278, 232;
	// end inline asm
	xor.b32  	%r1839, %r1730, %r1714;
	xor.b32  	%r1840, %r1839, %r1778;
	xor.b32  	%r1841, %r1840, %r1818;
	shf.l.wrap.b32 	%r1842, %r1841, %r1841, 1;
	add.s32 	%r1843, %r1275, %r1842;
	add.s32 	%r1844, %r1843, %r1274;
	add.s32 	%r1845, %r1844, %r1838;
	add.s32 	%r1284, %r1845, -1894007588;
	shf.l.wrap.b32 	%r1286, %r1276, %r1276, 30;
	shf.l.wrap.b32 	%r1846, %r1284, %r1284, 5;
	// begin inline asm
	lop3.b32 %r1279, %r1280, %r1286, %r1282, 150;
	// end inline asm
	xor.b32  	%r1847, %r1738, %r1722;
	xor.b32  	%r1848, %r1847, %r1786;
	xor.b32  	%r1849, %r1848, %r1826;
	shf.l.wrap.b32 	%r1850, %r1849, %r1849, 1;
	add.s32 	%r1851, %r1279, %r1850;
	add.s32 	%r1852, %r1851, %r1278;
	add.s32 	%r1853, %r1852, %r1846;
	add.s32 	%r1288, %r1853, -899497514;
	shf.l.wrap.b32 	%r1290, %r1280, %r1280, 30;
	shf.l.wrap.b32 	%r1854, %r1288, %r1288, 5;
	// begin inline asm
	lop3.b32 %r1283, %r1284, %r1290, %r1286, 150;
	// end inline asm
	xor.b32  	%r1855, %r1746, %r1730;
	xor.b32  	%r1856, %r1855, %r1794;
	xor.b32  	%r1857, %r1856, %r1834;
	shf.l.wrap.b32 	%r1858, %r1857, %r1857, 1;
	add.s32 	%r1859, %r1283, %r1858;
	add.s32 	%r1860, %r1859, %r1282;
	add.s32 	%r1861, %r1860, %r1854;
	add.s32 	%r1292, %r1861, -899497514;
	shf.l.wrap.b32 	%r1294, %r1284, %r1284, 30;
	shf.l.wrap.b32 	%r1862, %r1292, %r1292, 5;
	// begin inline asm
	lop3.b32 %r1287, %r1288, %r1294, %r1290, 150;
	// end inline asm
	xor.b32  	%r1863, %r1754, %r1738;
	xor.b32  	%r1864, %r1863, %r1802;
	xor.b32  	%r1865, %r1864, %r1842;
	shf.l.wrap.b32 	%r1866, %r1865, %r1865, 1;
	add.s32 	%r1867, %r1287, %r1866;
	add.s32 	%r1868, %r1867, %r1286;
	add.s32 	%r1869, %r1868, %r1862;
	add.s32 	%r1296, %r1869, -899497514;
	shf.l.wrap.b32 	%r1298, %r1288, %r1288, 30;
	shf.l.wrap.b32 	%r1870, %r1296, %r1296, 5;
	// begin inline asm
	lop3.b32 %r1291, %r1292, %r1298, %r1294, 150;
	// end inline asm
	xor.b32  	%r1871, %r1762, %r1746;
	xor.b32  	%r1872, %r1871, %r1810;
	xor.b32  	%r1873, %r1872, %r1850;
	shf.l.wrap.b32 	%r1874, %r1873, %r1873, 1;
	add.s32 	%r1875, %r1291, %r1874;
	add.s32 	%r1876, %r1875, %r1290;
	add.s32 	%r1877, %r1876, %r1870;
	add.s32 	%r1300, %r1877, -899497514;
	shf.l.wrap.b32 	%r1302, %r1292, %r1292, 30;
	shf.l.wrap.b32 	%r1878, %r1300, %r1300, 5;
	// begin inline asm
	lop3.b32 %r1295, %r1296, %r1302, %r1298, 150;
	// end inline asm
	xor.b32  	%r1879, %r1770, %r1754;
	xor.b32  	%r1880, %r1879, %r1818;
	xor.b32  	%r1881, %r1880, %r1858;
	shf.l.wrap.b32 	%r1882, %r1881, %r1881, 1;
	add.s32 	%r1883, %r1295, %r1882;
	add.s32 	%r1884, %r1883, %r1294;
	add.s32 	%r1885, %r1884, %r1878;
	add.s32 	%r1304, %r1885, -899497514;
	shf.l.wrap.b32 	%r1306, %r1296, %r1296, 30;
	shf.l.wrap.b32 	%r1886, %r1304, %r1304, 5;
	// begin inline asm
	lop3.b32 %r1299, %r1300, %r1306, %r1302, 150;
	// end inline asm
	xor.b32  	%r1887, %r1778, %r1762;
	xor.b32  	%r1888, %r1887, %r1826;
	xor.b32  	%r1889, %r1888, %r1866;
	shf.l.wrap.b32 	%r1890, %r1889, %r1889, 1;
	add.s32 	%r1891, %r1299, %r1890;
	add.s32 	%r1892, %r1891, %r1298;
	add.s32 	%r1893, %r1892, %r1886;
	add.s32 	%r1308, %r1893, -899497514;
	shf.l.wrap.b32 	%r1310, %r1300, %r1300, 30;
	shf.l.wrap.b32 	%r1894, %r1308, %r1308, 5;
	// begin inline asm
	lop3.b32 %r1303, %r1304, %r1310, %r1306, 150;
	// end inline asm
	xor.b32  	%r1895, %r1786, %r1770;
	xor.b32  	%r1896, %r1895, %r1834;
	xor.b32  	%r1897, %r1896, %r1874;
	shf.l.wrap.b32 	%r1898, %r1897, %r1897, 1;
	add.s32 	%r1899, %r1303, %r1898;
	add.s32 	%r1900, %r1899, %r1302;
	add.s32 	%r1901, %r1900, %r1894;
	add.s32 	%r1312, %r1901, -899497514;
	shf.l.wrap.b32 	%r1314, %r1304, %r1304, 30;
	shf.l.wrap.b32 	%r1902, %r1312, %r1312, 5;
	// begin inline asm
	lop3.b32 %r1307, %r1308, %r1314, %r1310, 150;
	// end inline asm
	xor.b32  	%r1903, %r1794, %r1778;
	xor.b32  	%r1904, %r1903, %r1842;
	xor.b32  	%r1905, %r1904, %r1882;
	shf.l.wrap.b32 	%r1906, %r1905, %r1905, 1;
	add.s32 	%r1907, %r1307, %r1906;
	add.s32 	%r1908, %r1907, %r1306;
	add.s32 	%r1909, %r1908, %r1902;
	add.s32 	%r1316, %r1909, -899497514;
	shf.l.wrap.b32 	%r1318, %r1308, %r1308, 30;
	shf.l.wrap.b32 	%r1910, %r1316, %r1316, 5;
	// begin inline asm
	lop3.b32 %r1311, %r1312, %r1318, %r1314, 150;
	// end inline asm
	xor.b32  	%r1911, %r1802, %r1786;
	xor.b32  	%r1912, %r1911, %r1850;
	xor.b32  	%r1913, %r1912, %r1890;
	shf.l.wrap.b32 	%r1914, %r1913, %r1913, 1;
	add.s32 	%r1915, %r1311, %r1914;
	add.s32 	%r1916, %r1915, %r1310;
	add.s32 	%r1917, %r1916, %r1910;
	add.s32 	%r1320, %r1917, -899497514;
	shf.l.wrap.b32 	%r1322, %r1312, %r1312, 30;
	shf.l.wrap.b32 	%r1918, %r1320, %r1320, 5;
	// begin inline asm
	lop3.b32 %r1315, %r1316, %r1322, %r1318, 150;
	// end inline asm
	xor.b32  	%r1919, %r1810, %r1794;
	xor.b32  	%r1920, %r1919, %r1858;
	xor.b32  	%r1921, %r1920, %r1898;
	shf.l.wrap.b32 	%r1922, %r1921, %r1921, 1;
	add.s32 	%r1923, %r1315, %r1922;
	add.s32 	%r1924, %r1923, %r1314;
	add.s32 	%r1925, %r1924, %r1918;
	add.s32 	%r1324, %r1925, -899497514;
	shf.l.wrap.b32 	%r1326, %r1316, %r1316, 30;
	shf.l.wrap.b32 	%r1926, %r1324, %r1324, 5;
	// begin inline asm
	lop3.b32 %r1319, %r1320, %r1326, %r1322, 150;
	// end inline asm
	xor.b32  	%r1927, %r1818, %r1802;
	xor.b32  	%r1928, %r1927, %r1866;
	xor.b32  	%r1929, %r1928, %r1906;
	shf.l.wrap.b32 	%r1930, %r1929, %r1929, 1;
	add.s32 	%r1931, %r1319, %r1930;
	add.s32 	%r1932, %r1931, %r1318;
	add.s32 	%r1933, %r1932, %r1926;
	add.s32 	%r1328, %r1933, -899497514;
	shf.l.wrap.b32 	%r1330, %r1320, %r1320, 30;
	shf.l.wrap.b32 	%r1934, %r1328, %r1328, 5;
	// begin inline asm
	lop3.b32 %r1323, %r1324, %r1330, %r1326, 150;
	// end inline asm
	xor.b32  	%r1935, %r1826, %r1810;
	xor.b32  	%r1936, %r1935, %r1874;
	xor.b32  	%r1937, %r1936, %r1914;
	shf.l.wrap.b32 	%r1938, %r1937, %r1937, 1;
	add.s32 	%r1939, %r1323, %r1938;
	add.s32 	%r1940, %r1939, %r1322;
	add.s32 	%r1941, %r1940, %r1934;
	add.s32 	%r1332, %r1941, -899497514;
	shf.l.wrap.b32 	%r1334, %r1324, %r1324, 30;
	shf.l.wrap.b32 	%r1942, %r1332, %r1332, 5;
	// begin inline asm
	lop3.b32 %r1327, %r1328, %r1334, %r1330, 150;
	// end inline asm
	xor.b32  	%r1943, %r1834, %r1818;
	xor.b32  	%r1944, %r1943, %r1882;
	xor.b32  	%r1945, %r1944, %r1922;
	shf.l.wrap.b32 	%r1946, %r1945, %r1945, 1;
	add.s32 	%r1947, %r1327, %r1946;
	add.s32 	%r1948, %r1947, %r1326;
	add.s32 	%r1949, %r1948, %r1942;
	add.s32 	%r1336, %r1949, -899497514;
	shf.l.wrap.b32 	%r1338, %r1328, %r1328, 30;
	shf.l.wrap.b32 	%r1950, %r1336, %r1336, 5;
	// begin inline asm
	lop3.b32 %r1331, %r1332, %r1338, %r1334, 150;
	// end inline asm
	xor.b32  	%r1951, %r1842, %r1826;
	xor.b32  	%r1952, %r1951, %r1890;
	xor.b32  	%r1953, %r1952, %r1930;
	shf.l.wrap.b32 	%r1954, %r1953, %r1953, 1;
	add.s32 	%r1955, %r1331, %r1954;
	add.s32 	%r1956, %r1955, %r1330;
	add.s32 	%r1957, %r1956, %r1950;
	add.s32 	%r1340, %r1957, -899497514;
	shf.l.wrap.b32 	%r1342, %r1332, %r1332, 30;
	shf.l.wrap.b32 	%r1958, %r1340, %r1340, 5;
	// begin inline asm
	lop3.b32 %r1335, %r1336, %r1342, %r1338, 150;
	// end inline asm
	xor.b32  	%r1959, %r1850, %r1834;
	xor.b32  	%r1960, %r1959, %r1898;
	xor.b32  	%r1961, %r1960, %r1938;
	shf.l.wrap.b32 	%r1962, %r1961, %r1961, 1;
	add.s32 	%r1963, %r1335, %r1962;
	add.s32 	%r1964, %r1963, %r1334;
	add.s32 	%r1965, %r1964, %r1958;
	add.s32 	%r1344, %r1965, -899497514;
	shf.l.wrap.b32 	%r1346, %r1336, %r1336, 30;
	shf.l.wrap.b32 	%r1966, %r1344, %r1344, 5;
	// begin inline asm
	lop3.b32 %r1339, %r1340, %r1346, %r1342, 150;
	// end inline asm
	xor.b32  	%r1967, %r1858, %r1842;
	xor.b32  	%r1968, %r1967, %r1906;
	xor.b32  	%r1969, %r1968, %r1946;
	shf.l.wrap.b32 	%r1970, %r1969, %r1969, 1;
	add.s32 	%r1971, %r1339, %r1970;
	add.s32 	%r1972, %r1971, %r1338;
	add.s32 	%r1973, %r1972, %r1966;
	add.s32 	%r1348, %r1973, -899497514;
	shf.l.wrap.b32 	%r1350, %r1340, %r1340, 30;
	shf.l.wrap.b32 	%r1974, %r1348, %r1348, 5;
	// begin inline asm
	lop3.b32 %r1343, %r1344, %r1350, %r1346, 150;
	// end inline asm
	xor.b32  	%r1975, %r1866, %r1850;
	xor.b32  	%r1976, %r1975, %r1914;
	xor.b32  	%r1977, %r1976, %r1954;
	shf.l.wrap.b32 	%r1978, %r1977, %r1977, 1;
	add.s32 	%r1979, %r1343, %r1978;
	add.s32 	%r1980, %r1979, %r1342;
	add.s32 	%r1981, %r1980, %r1974;
	add.s32 	%r1352, %r1981, -899497514;
	shf.l.wrap.b32 	%r1354, %r1344, %r1344, 30;
	shf.l.wrap.b32 	%r1982, %r1352, %r1352, 5;
	// begin inline asm
	lop3.b32 %r1347, %r1348, %r1354, %r1350, 150;
	// end inline asm
	xor.b32  	%r1983, %r1874, %r1858;
	xor.b32  	%r1984, %r1983, %r1922;
	xor.b32  	%r1985, %r1984, %r1962;
	shf.l.wrap.b32 	%r1986, %r1985, %r1985, 1;
	add.s32 	%r1987, %r1347, %r1986;
	add.s32 	%r1988, %r1987, %r1346;
	add.s32 	%r1989, %r1988, %r1982;
	add.s32 	%r1356, %r1989, -899497514;
	shf.l.wrap.b32 	%r1358, %r1348, %r1348, 30;
	shf.l.wrap.b32 	%r1990, %r1356, %r1356, 5;
	// begin inline asm
	lop3.b32 %r1351, %r1352, %r1358, %r1354, 150;
	// end inline asm
	xor.b32  	%r1991, %r1882, %r1866;
	xor.b32  	%r1992, %r1991, %r1930;
	xor.b32  	%r1993, %r1992, %r1970;
	shf.l.wrap.b32 	%r1994, %r1993, %r1993, 1;
	add.s32 	%r1995, %r1351, %r1994;
	add.s32 	%r1996, %r1995, %r1350;
	add.s32 	%r1997, %r1996, %r1990;
	add.s32 	%r1998, %r1997, -899497514;
	shf.l.wrap.b32 	%r1357, %r1352, %r1352, 30;
	shf.l.wrap.b32 	%r1999, %r1998, %r1998, 5;
	// begin inline asm
	lop3.b32 %r1355, %r1356, %r1357, %r1358, 150;
	// end inline asm
	xor.b32  	%r2000, %r1890, %r1874;
	xor.b32  	%r2001, %r2000, %r1938;
	xor.b32  	%r2002, %r2001, %r1978;
	shf.l.wrap.b32 	%r2003, %r2002, %r2002, 1;
	shf.l.wrap.b32 	%r2004, %r1356, %r1356, 30;
	add.s32 	%r2005, %r2014, %r1355;
	add.s32 	%r2006, %r2005, %r2003;
	add.s32 	%r2007, %r2006, %r1354;
	add.s32 	%r2008, %r2007, %r1999;
	add.s32 	%r2014, %r2008, -899497514;
	add.s32 	%r2013, %r1998, %r2013;
	add.s32 	%r2012, %r2004, %r2012;
	add.s32 	%r2011, %r1357, %r2011;
	add.s32 	%r2010, %r1358, %r2010;

$L__BB0_2:
	ld.param.u64 	%rd16, [GenerateSHA1pwhash_param_3];
	mov.u32 	%r2009, 0;
	mul.lo.s64 	%rd14, %rd1, 72;
	add.s64 	%rd15, %rd16, %rd14;
	st.global.v2.u32 	[%rd15+8], {%r2014, %r2013};
	st.global.v2.u32 	[%rd15+16], {%r2012, %r2011};
	st.global.u32 	[%rd15+24], %r2010;
	st.global.u32 	[%rd15], %r2009;
	ret;

}
	// .globl	HashLoop0710
.entry HashLoop0710(
	.param .u64 .ptr .global .align 8 HashLoop0710_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<910>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd2, [HashLoop0710_param_0];
	mov.b32 	%r34, %envreg3;
	mov.u32 	%r35, %ctaid.x;
	mov.u32 	%r36, %ntid.x;
	mov.u32 	%r37, %tid.x;
	add.s32 	%r38, %r37, %r34;
	mad.lo.s32 	%r39, %r36, %r35, %r38;
	mul.wide.u32 	%rd3, %r39, 72;
	add.s64 	%rd1, %rd2, %rd3;
	ld.global.u32 	%r1, [%rd1];
	ld.global.v2.u32 	{%r904, %r905}, [%rd1+8];
	mov.u32 	%r909, 0;
	ld.global.u32 	%r906, [%rd1+16];
	.pragma "used_bytes_mask 240";
	ld.global.v2.u32 	{%r42, %r907}, [%rd1+16];
	ld.global.u32 	%r908, [%rd1+24];
	mov.u32 	%r30, 1732584193;
	shf.l.wrap.b32 	%r44, %r30, %r30, 5;
	mov.u32 	%r26, -271733879;
	mov.u32 	%r32, -1732584194;
	mov.u32 	%r28, 271733878;
	// begin inline asm
	lop3.b32 %r25, %r26, %r32, %r28, 202;
	// end inline asm
	add.s32 	%r45, %r44, %r25;
	add.s32 	%r7, %r45, 508910473;
	shf.l.wrap.b32 	%r31, %r26, %r26, 30;
	// begin inline asm
	lop3.b32 %r29, %r30, %r31, %r32, 202;
	// end inline asm
	add.s32 	%r9, %r29, 1790234127;
	add.s32 	%r10, %r31, 1518500249;
	shf.l.wrap.b32 	%r11, %r30, %r30, 30;
	add.s32 	%r12, %r11, 1518500249;

$L__BB1_1:
	add.s32 	%r358, %r909, %r1;
	shf.l.wrap.b32 	%r359, %r358, %r358, 16;
	shl.b32 	%r360, %r359, 8;
	and.b32  	%r361, %r360, -16711936;
	shr.u32 	%r362, %r359, 8;
	and.b32  	%r363, %r362, 16711935;
	or.b32  	%r364, %r361, %r363;
	add.s32 	%r47, %r7, %r364;
	shf.l.wrap.b32 	%r365, %r47, %r47, 5;
	add.s32 	%r366, %r9, %r904;
	add.s32 	%r51, %r366, %r365;
	shf.l.wrap.b32 	%r367, %r51, %r51, 5;
	// begin inline asm
	lop3.b32 %r46, %r47, %r11, %r31, 202;
	// end inline asm
	add.s32 	%r368, %r46, %r905;
	add.s32 	%r369, %r368, %r367;
	add.s32 	%r55, %r369, -214083945;
	shf.l.wrap.b32 	%r57, %r47, %r47, 30;
	shf.l.wrap.b32 	%r370, %r55, %r55, 5;
	// begin inline asm
	lop3.b32 %r50, %r51, %r57, %r11, 202;
	// end inline asm
	add.s32 	%r371, %r10, %r50;
	add.s32 	%r372, %r371, %r906;
	add.s32 	%r59, %r372, %r370;
	shf.l.wrap.b32 	%r61, %r51, %r51, 30;
	shf.l.wrap.b32 	%r373, %r59, %r59, 5;
	// begin inline asm
	lop3.b32 %r54, %r55, %r61, %r57, 202;
	// end inline asm
	add.s32 	%r374, %r12, %r54;
	add.s32 	%r375, %r374, %r907;
	add.s32 	%r63, %r375, %r373;
	shf.l.wrap.b32 	%r65, %r55, %r55, 30;
	shf.l.wrap.b32 	%r376, %r63, %r63, 5;
	// begin inline asm
	lop3.b32 %r58, %r59, %r65, %r61, 202;
	// end inline asm
	add.s32 	%r377, %r57, %r58;
	add.s32 	%r378, %r377, %r908;
	add.s32 	%r379, %r378, %r376;
	add.s32 	%r67, %r379, 1518500249;
	shf.l.wrap.b32 	%r69, %r59, %r59, 30;
	shf.l.wrap.b32 	%r380, %r67, %r67, 5;
	// begin inline asm
	lop3.b32 %r62, %r63, %r69, %r65, 202;
	// end inline asm
	add.s32 	%r381, %r61, %r62;
	add.s32 	%r382, %r381, 1518500249;
	xor.b32  	%r383, %r382, -2147483648;
	add.s32 	%r71, %r383, %r380;
	shf.l.wrap.b32 	%r73, %r63, %r63, 30;
	shf.l.wrap.b32 	%r384, %r71, %r71, 5;
	// begin inline asm
	lop3.b32 %r66, %r67, %r73, %r69, 202;
	// end inline asm
	add.s32 	%r385, %r66, %r65;
	add.s32 	%r386, %r385, %r384;
	add.s32 	%r75, %r386, 1518500249;
	shf.l.wrap.b32 	%r77, %r67, %r67, 30;
	shf.l.wrap.b32 	%r387, %r75, %r75, 5;
	// begin inline asm
	lop3.b32 %r70, %r71, %r77, %r73, 202;
	// end inline asm
	add.s32 	%r388, %r70, %r69;
	add.s32 	%r389, %r388, %r387;
	add.s32 	%r79, %r389, 1518500249;
	shf.l.wrap.b32 	%r81, %r71, %r71, 30;
	shf.l.wrap.b32 	%r390, %r79, %r79, 5;
	// begin inline asm
	lop3.b32 %r74, %r75, %r81, %r77, 202;
	// end inline asm
	add.s32 	%r391, %r74, %r73;
	add.s32 	%r392, %r391, %r390;
	add.s32 	%r83, %r392, 1518500249;
	shf.l.wrap.b32 	%r85, %r75, %r75, 30;
	shf.l.wrap.b32 	%r393, %r83, %r83, 5;
	// begin inline asm
	lop3.b32 %r78, %r79, %r85, %r81, 202;
	// end inline asm
	add.s32 	%r394, %r78, %r77;
	add.s32 	%r395, %r394, %r393;
	add.s32 	%r87, %r395, 1518500249;
	shf.l.wrap.b32 	%r89, %r79, %r79, 30;
	shf.l.wrap.b32 	%r396, %r87, %r87, 5;
	// begin inline asm
	lop3.b32 %r82, %r83, %r89, %r85, 202;
	// end inline asm
	add.s32 	%r397, %r82, %r81;
	add.s32 	%r398, %r397, %r396;
	add.s32 	%r91, %r398, 1518500249;
	shf.l.wrap.b32 	%r93, %r83, %r83, 30;
	shf.l.wrap.b32 	%r399, %r91, %r91, 5;
	// begin inline asm
	lop3.b32 %r86, %r87, %r93, %r89, 202;
	// end inline asm
	add.s32 	%r400, %r86, %r85;
	add.s32 	%r401, %r400, %r399;
	add.s32 	%r95, %r401, 1518500249;
	shf.l.wrap.b32 	%r97, %r87, %r87, 30;
	shf.l.wrap.b32 	%r402, %r95, %r95, 5;
	// begin inline asm
	lop3.b32 %r90, %r91, %r97, %r93, 202;
	// end inline asm
	add.s32 	%r403, %r90, %r89;
	add.s32 	%r404, %r403, %r402;
	add.s32 	%r99, %r404, 1518500249;
	shf.l.wrap.b32 	%r101, %r91, %r91, 30;
	shf.l.wrap.b32 	%r405, %r99, %r99, 5;
	// begin inline asm
	lop3.b32 %r94, %r95, %r101, %r97, 202;
	// end inline asm
	add.s32 	%r406, %r94, %r93;
	add.s32 	%r407, %r406, %r405;
	add.s32 	%r103, %r407, 1518500249;
	shf.l.wrap.b32 	%r105, %r95, %r95, 30;
	shf.l.wrap.b32 	%r408, %r103, %r103, 5;
	// begin inline asm
	lop3.b32 %r98, %r99, %r105, %r101, 202;
	// end inline asm
	add.s32 	%r409, %r98, %r97;
	add.s32 	%r410, %r409, %r408;
	add.s32 	%r107, %r410, 1518500441;
	shf.l.wrap.b32 	%r109, %r99, %r99, 30;
	shf.l.wrap.b32 	%r411, %r107, %r107, 5;
	// begin inline asm
	lop3.b32 %r102, %r103, %r109, %r105, 202;
	// end inline asm
	xor.b32  	%r412, %r364, %r905;
	shf.l.wrap.b32 	%r413, %r412, %r412, 1;
	add.s32 	%r414, %r102, %r413;
	add.s32 	%r415, %r414, %r101;
	add.s32 	%r416, %r415, %r411;
	add.s32 	%r111, %r416, 1518500249;
	shf.l.wrap.b32 	%r113, %r103, %r103, 30;
	shf.l.wrap.b32 	%r417, %r111, %r111, 5;
	// begin inline asm
	lop3.b32 %r106, %r107, %r113, %r109, 202;
	// end inline asm
	xor.b32  	%r418, %r904, %r906;
	shf.l.wrap.b32 	%r419, %r418, %r418, 1;
	add.s32 	%r420, %r106, %r419;
	add.s32 	%r421, %r420, %r105;
	add.s32 	%r422, %r421, %r417;
	add.s32 	%r115, %r422, 1518500249;
	shf.l.wrap.b32 	%r117, %r107, %r107, 30;
	shf.l.wrap.b32 	%r423, %r115, %r115, 5;
	// begin inline asm
	lop3.b32 %r110, %r111, %r117, %r113, 202;
	// end inline asm
	xor.b32  	%r424, %r907, %r905;
	xor.b32  	%r425, %r424, 192;
	shf.l.wrap.b32 	%r426, %r425, %r425, 1;
	add.s32 	%r427, %r110, %r426;
	add.s32 	%r428, %r427, %r109;
	add.s32 	%r429, %r428, %r423;
	add.s32 	%r119, %r429, 1518500249;
	shf.l.wrap.b32 	%r121, %r111, %r111, 30;
	shf.l.wrap.b32 	%r430, %r119, %r119, 5;
	// begin inline asm
	lop3.b32 %r114, %r115, %r121, %r117, 202;
	// end inline asm
	xor.b32  	%r431, %r908, %r413;
	xor.b32  	%r432, %r431, %r906;
	shf.l.wrap.b32 	%r433, %r432, %r432, 1;
	add.s32 	%r434, %r114, %r433;
	add.s32 	%r435, %r434, %r113;
	add.s32 	%r436, %r435, %r430;
	add.s32 	%r123, %r436, 1518500249;
	shf.l.wrap.b32 	%r125, %r115, %r115, 30;
	shf.l.wrap.b32 	%r437, %r123, %r123, 5;
	// begin inline asm
	lop3.b32 %r118, %r119, %r125, %r121, 150;
	// end inline asm
	xor.b32  	%r438, %r419, %r907;
	xor.b32  	%r439, %r438, -2147483648;
	shf.l.wrap.b32 	%r440, %r439, %r439, 1;
	add.s32 	%r441, %r118, %r440;
	add.s32 	%r442, %r441, %r117;
	add.s32 	%r443, %r442, %r437;
	add.s32 	%r127, %r443, 1859775393;
	shf.l.wrap.b32 	%r129, %r119, %r119, 30;
	shf.l.wrap.b32 	%r444, %r127, %r127, 5;
	// begin inline asm
	lop3.b32 %r122, %r123, %r129, %r125, 150;
	// end inline asm
	xor.b32  	%r445, %r908, %r426;
	shf.l.wrap.b32 	%r446, %r445, %r445, 1;
	add.s32 	%r447, %r122, %r446;
	add.s32 	%r448, %r447, %r121;
	add.s32 	%r449, %r448, %r444;
	add.s32 	%r131, %r449, 1859775393;
	shf.l.wrap.b32 	%r133, %r123, %r123, 30;
	shf.l.wrap.b32 	%r450, %r131, %r131, 5;
	// begin inline asm
	lop3.b32 %r126, %r127, %r133, %r129, 150;
	// end inline asm
	xor.b32  	%r451, %r433, -2147483648;
	shf.l.wrap.b32 	%r452, %r451, %r451, 1;
	add.s32 	%r453, %r126, %r452;
	add.s32 	%r454, %r453, %r125;
	add.s32 	%r455, %r454, %r450;
	add.s32 	%r135, %r455, 1859775393;
	shf.l.wrap.b32 	%r137, %r127, %r127, 30;
	shf.l.wrap.b32 	%r456, %r135, %r135, 5;
	// begin inline asm
	lop3.b32 %r130, %r131, %r137, %r133, 150;
	// end inline asm
	xor.b32  	%r457, %r440, 192;
	shf.l.wrap.b32 	%r458, %r457, %r457, 1;
	add.s32 	%r459, %r130, %r458;
	add.s32 	%r460, %r459, %r129;
	add.s32 	%r461, %r460, %r456;
	add.s32 	%r139, %r461, 1859775393;
	shf.l.wrap.b32 	%r141, %r131, %r131, 30;
	shf.l.wrap.b32 	%r462, %r139, %r139, 5;
	// begin inline asm
	lop3.b32 %r134, %r135, %r141, %r137, 150;
	// end inline asm
	xor.b32  	%r463, %r413, %r446;
	shf.l.wrap.b32 	%r464, %r463, %r463, 1;
	add.s32 	%r465, %r134, %r464;
	add.s32 	%r466, %r465, %r133;
	add.s32 	%r467, %r466, %r462;
	add.s32 	%r143, %r467, 1859775393;
	shf.l.wrap.b32 	%r145, %r135, %r135, 30;
	shf.l.wrap.b32 	%r468, %r143, %r143, 5;
	// begin inline asm
	lop3.b32 %r138, %r139, %r145, %r141, 150;
	// end inline asm
	xor.b32  	%r469, %r419, %r452;
	shf.l.wrap.b32 	%r470, %r469, %r469, 1;
	add.s32 	%r471, %r138, %r470;
	add.s32 	%r472, %r471, %r137;
	add.s32 	%r473, %r472, %r468;
	add.s32 	%r147, %r473, 1859775393;
	shf.l.wrap.b32 	%r149, %r139, %r139, 30;
	shf.l.wrap.b32 	%r474, %r147, %r147, 5;
	// begin inline asm
	lop3.b32 %r142, %r143, %r149, %r145, 150;
	// end inline asm
	xor.b32  	%r475, %r426, %r458;
	shf.l.wrap.b32 	%r476, %r475, %r475, 1;
	add.s32 	%r477, %r142, %r476;
	add.s32 	%r478, %r477, %r141;
	add.s32 	%r479, %r478, %r474;
	add.s32 	%r151, %r479, 1859775393;
	shf.l.wrap.b32 	%r153, %r143, %r143, 30;
	shf.l.wrap.b32 	%r480, %r151, %r151, 5;
	// begin inline asm
	lop3.b32 %r146, %r147, %r153, %r149, 150;
	// end inline asm
	xor.b32  	%r481, %r433, %r464;
	shf.l.wrap.b32 	%r482, %r481, %r481, 1;
	add.s32 	%r483, %r146, %r482;
	add.s32 	%r484, %r483, %r145;
	add.s32 	%r485, %r484, %r480;
	add.s32 	%r155, %r485, 1859775393;
	shf.l.wrap.b32 	%r157, %r147, %r147, 30;
	shf.l.wrap.b32 	%r486, %r155, %r155, 5;
	// begin inline asm
	lop3.b32 %r150, %r151, %r157, %r153, 150;
	// end inline asm
	xor.b32  	%r487, %r440, %r470;
	shf.l.wrap.b32 	%r488, %r487, %r487, 1;
	add.s32 	%r489, %r150, %r488;
	add.s32 	%r490, %r489, %r149;
	add.s32 	%r491, %r490, %r486;
	add.s32 	%r159, %r491, 1859775393;
	shf.l.wrap.b32 	%r161, %r151, %r151, 30;
	shf.l.wrap.b32 	%r492, %r159, %r159, 5;
	// begin inline asm
	lop3.b32 %r154, %r155, %r161, %r157, 150;
	// end inline asm
	xor.b32  	%r493, %r446, %r476;
	xor.b32  	%r494, %r493, 192;
	shf.l.wrap.b32 	%r495, %r494, %r494, 1;
	add.s32 	%r496, %r154, %r495;
	add.s32 	%r497, %r496, %r153;
	add.s32 	%r498, %r497, %r492;
	add.s32 	%r163, %r498, 1859775393;
	shf.l.wrap.b32 	%r165, %r155, %r155, 30;
	shf.l.wrap.b32 	%r499, %r163, %r163, 5;
	// begin inline asm
	lop3.b32 %r158, %r159, %r165, %r161, 150;
	// end inline asm
	xor.b32  	%r500, %r452, %r482;
	xor.b32  	%r501, %r500, %r413;
	shf.l.wrap.b32 	%r502, %r501, %r501, 1;
	add.s32 	%r503, %r158, %r502;
	add.s32 	%r504, %r503, %r157;
	add.s32 	%r505, %r504, %r499;
	add.s32 	%r167, %r505, 1859775393;
	shf.l.wrap.b32 	%r169, %r159, %r159, 30;
	shf.l.wrap.b32 	%r506, %r167, %r167, 5;
	// begin inline asm
	lop3.b32 %r162, %r163, %r169, %r165, 150;
	// end inline asm
	xor.b32  	%r507, %r458, %r488;
	xor.b32  	%r508, %r507, %r419;
	xor.b32  	%r509, %r508, 192;
	shf.l.wrap.b32 	%r510, %r509, %r509, 1;
	add.s32 	%r511, %r162, %r510;
	add.s32 	%r512, %r511, %r161;
	add.s32 	%r513, %r512, %r506;
	add.s32 	%r171, %r513, 1859775393;
	shf.l.wrap.b32 	%r173, %r163, %r163, 30;
	shf.l.wrap.b32 	%r514, %r171, %r171, 5;
	// begin inline asm
	lop3.b32 %r166, %r167, %r173, %r169, 150;
	// end inline asm
	xor.b32  	%r515, %r464, %r495;
	xor.b32  	%r516, %r515, %r426;
	xor.b32  	%r517, %r516, %r413;
	shf.l.wrap.b32 	%r518, %r517, %r517, 1;
	add.s32 	%r519, %r166, %r518;
	add.s32 	%r520, %r519, %r165;
	add.s32 	%r521, %r520, %r514;
	add.s32 	%r175, %r521, 1859775393;
	shf.l.wrap.b32 	%r177, %r167, %r167, 30;
	shf.l.wrap.b32 	%r522, %r175, %r175, 5;
	// begin inline asm
	lop3.b32 %r170, %r171, %r177, %r173, 150;
	// end inline asm
	xor.b32  	%r523, %r470, %r502;
	xor.b32  	%r524, %r523, %r433;
	xor.b32  	%r525, %r524, %r419;
	shf.l.wrap.b32 	%r526, %r525, %r525, 1;
	add.s32 	%r527, %r170, %r526;
	add.s32 	%r528, %r527, %r169;
	add.s32 	%r529, %r528, %r522;
	add.s32 	%r179, %r529, 1859775393;
	shf.l.wrap.b32 	%r181, %r171, %r171, 30;
	shf.l.wrap.b32 	%r530, %r179, %r179, 5;
	// begin inline asm
	lop3.b32 %r174, %r175, %r181, %r177, 150;
	// end inline asm
	xor.b32  	%r531, %r476, %r510;
	xor.b32  	%r532, %r531, %r440;
	xor.b32  	%r533, %r532, %r426;
	shf.l.wrap.b32 	%r534, %r533, %r533, 1;
	add.s32 	%r535, %r174, %r534;
	add.s32 	%r536, %r535, %r173;
	add.s32 	%r537, %r536, %r530;
	add.s32 	%r183, %r537, 1859775393;
	shf.l.wrap.b32 	%r185, %r175, %r175, 30;
	shf.l.wrap.b32 	%r538, %r183, %r183, 5;
	// begin inline asm
	lop3.b32 %r178, %r179, %r185, %r181, 150;
	// end inline asm
	xor.b32  	%r539, %r482, %r518;
	xor.b32  	%r540, %r539, %r446;
	xor.b32  	%r541, %r540, %r433;
	shf.l.wrap.b32 	%r542, %r541, %r541, 1;
	add.s32 	%r543, %r178, %r542;
	add.s32 	%r544, %r543, %r177;
	add.s32 	%r545, %r544, %r538;
	add.s32 	%r187, %r545, 1859775393;
	shf.l.wrap.b32 	%r189, %r179, %r179, 30;
	shf.l.wrap.b32 	%r546, %r187, %r187, 5;
	// begin inline asm
	lop3.b32 %r182, %r183, %r189, %r185, 150;
	// end inline asm
	xor.b32  	%r547, %r488, %r526;
	xor.b32  	%r548, %r547, %r452;
	xor.b32  	%r549, %r548, %r440;
	shf.l.wrap.b32 	%r550, %r549, %r549, 1;
	add.s32 	%r551, %r182, %r550;
	add.s32 	%r552, %r551, %r181;
	add.s32 	%r553, %r552, %r546;
	add.s32 	%r191, %r553, 1859775393;
	shf.l.wrap.b32 	%r193, %r183, %r183, 30;
	shf.l.wrap.b32 	%r554, %r191, %r191, 5;
	// begin inline asm
	lop3.b32 %r186, %r187, %r193, %r189, 150;
	// end inline asm
	xor.b32  	%r555, %r495, %r534;
	xor.b32  	%r556, %r555, %r458;
	xor.b32  	%r557, %r556, %r446;
	shf.l.wrap.b32 	%r558, %r557, %r557, 1;
	add.s32 	%r559, %r186, %r558;
	add.s32 	%r560, %r559, %r185;
	add.s32 	%r561, %r560, %r554;
	add.s32 	%r195, %r561, 1859775393;
	shf.l.wrap.b32 	%r197, %r187, %r187, 30;
	shf.l.wrap.b32 	%r562, %r195, %r195, 5;
	// begin inline asm
	lop3.b32 %r190, %r191, %r197, %r193, 150;
	// end inline asm
	xor.b32  	%r563, %r502, %r542;
	xor.b32  	%r564, %r563, %r464;
	xor.b32  	%r565, %r564, %r452;
	shf.l.wrap.b32 	%r566, %r565, %r565, 1;
	add.s32 	%r567, %r190, %r566;
	add.s32 	%r568, %r567, %r189;
	add.s32 	%r569, %r568, %r562;
	add.s32 	%r199, %r569, 1859775393;
	shf.l.wrap.b32 	%r201, %r191, %r191, 30;
	shf.l.wrap.b32 	%r570, %r199, %r199, 5;
	// begin inline asm
	lop3.b32 %r194, %r195, %r201, %r197, 150;
	// end inline asm
	xor.b32  	%r571, %r510, %r550;
	xor.b32  	%r572, %r571, %r470;
	xor.b32  	%r573, %r572, %r458;
	shf.l.wrap.b32 	%r574, %r573, %r573, 1;
	add.s32 	%r575, %r194, %r574;
	add.s32 	%r576, %r575, %r193;
	add.s32 	%r577, %r576, %r570;
	add.s32 	%r203, %r577, 1859775393;
	shf.l.wrap.b32 	%r205, %r195, %r195, 30;
	shf.l.wrap.b32 	%r578, %r203, %r203, 5;
	// begin inline asm
	lop3.b32 %r198, %r199, %r205, %r201, 232;
	// end inline asm
	xor.b32  	%r579, %r518, %r558;
	xor.b32  	%r580, %r579, %r476;
	xor.b32  	%r581, %r580, %r464;
	shf.l.wrap.b32 	%r582, %r581, %r581, 1;
	add.s32 	%r583, %r198, %r582;
	add.s32 	%r584, %r583, %r197;
	add.s32 	%r585, %r584, %r578;
	add.s32 	%r207, %r585, -1894007588;
	shf.l.wrap.b32 	%r209, %r199, %r199, 30;
	shf.l.wrap.b32 	%r586, %r207, %r207, 5;
	// begin inline asm
	lop3.b32 %r202, %r203, %r209, %r205, 232;
	// end inline asm
	xor.b32  	%r587, %r526, %r566;
	xor.b32  	%r588, %r587, %r482;
	xor.b32  	%r589, %r588, %r470;
	shf.l.wrap.b32 	%r590, %r589, %r589, 1;
	add.s32 	%r591, %r202, %r590;
	add.s32 	%r592, %r591, %r201;
	add.s32 	%r593, %r592, %r586;
	add.s32 	%r211, %r593, -1894007588;
	shf.l.wrap.b32 	%r213, %r203, %r203, 30;
	shf.l.wrap.b32 	%r594, %r211, %r211, 5;
	// begin inline asm
	lop3.b32 %r206, %r207, %r213, %r209, 232;
	// end inline asm
	xor.b32  	%r595, %r534, %r574;
	xor.b32  	%r596, %r595, %r488;
	xor.b32  	%r597, %r596, %r476;
	shf.l.wrap.b32 	%r598, %r597, %r597, 1;
	add.s32 	%r599, %r206, %r598;
	add.s32 	%r600, %r599, %r205;
	add.s32 	%r601, %r600, %r594;
	add.s32 	%r215, %r601, -1894007588;
	shf.l.wrap.b32 	%r217, %r207, %r207, 30;
	shf.l.wrap.b32 	%r602, %r215, %r215, 5;
	// begin inline asm
	lop3.b32 %r210, %r211, %r217, %r213, 232;
	// end inline asm
	xor.b32  	%r603, %r542, %r582;
	xor.b32  	%r604, %r603, %r495;
	xor.b32  	%r605, %r604, %r482;
	shf.l.wrap.b32 	%r606, %r605, %r605, 1;
	add.s32 	%r607, %r210, %r606;
	add.s32 	%r608, %r607, %r209;
	add.s32 	%r609, %r608, %r602;
	add.s32 	%r219, %r609, -1894007588;
	shf.l.wrap.b32 	%r221, %r211, %r211, 30;
	shf.l.wrap.b32 	%r610, %r219, %r219, 5;
	// begin inline asm
	lop3.b32 %r214, %r215, %r221, %r217, 232;
	// end inline asm
	xor.b32  	%r611, %r550, %r590;
	xor.b32  	%r612, %r611, %r502;
	xor.b32  	%r613, %r612, %r488;
	shf.l.wrap.b32 	%r614, %r613, %r613, 1;
	add.s32 	%r615, %r214, %r614;
	add.s32 	%r616, %r615, %r213;
	add.s32 	%r617, %r616, %r610;
	add.s32 	%r223, %r617, -1894007588;
	shf.l.wrap.b32 	%r225, %r215, %r215, 30;
	shf.l.wrap.b32 	%r618, %r223, %r223, 5;
	// begin inline asm
	lop3.b32 %r218, %r219, %r225, %r221, 232;
	// end inline asm
	xor.b32  	%r619, %r558, %r598;
	xor.b32  	%r620, %r619, %r510;
	xor.b32  	%r621, %r620, %r495;
	shf.l.wrap.b32 	%r622, %r621, %r621, 1;
	add.s32 	%r623, %r218, %r622;
	add.s32 	%r624, %r623, %r217;
	add.s32 	%r625, %r624, %r618;
	add.s32 	%r227, %r625, -1894007588;
	shf.l.wrap.b32 	%r229, %r219, %r219, 30;
	shf.l.wrap.b32 	%r626, %r227, %r227, 5;
	// begin inline asm
	lop3.b32 %r222, %r223, %r229, %r225, 232;
	// end inline asm
	xor.b32  	%r627, %r566, %r606;
	xor.b32  	%r628, %r627, %r518;
	xor.b32  	%r629, %r628, %r502;
	shf.l.wrap.b32 	%r630, %r629, %r629, 1;
	add.s32 	%r631, %r222, %r630;
	add.s32 	%r632, %r631, %r221;
	add.s32 	%r633, %r632, %r626;
	add.s32 	%r231, %r633, -1894007588;
	shf.l.wrap.b32 	%r233, %r223, %r223, 30;
	shf.l.wrap.b32 	%r634, %r231, %r231, 5;
	// begin inline asm
	lop3.b32 %r226, %r227, %r233, %r229, 232;
	// end inline asm
	xor.b32  	%r635, %r574, %r614;
	xor.b32  	%r636, %r635, %r526;
	xor.b32  	%r637, %r636, %r510;
	shf.l.wrap.b32 	%r638, %r637, %r637, 1;
	add.s32 	%r639, %r226, %r638;
	add.s32 	%r640, %r639, %r225;
	add.s32 	%r641, %r640, %r634;
	add.s32 	%r235, %r641, -1894007588;
	shf.l.wrap.b32 	%r237, %r227, %r227, 30;
	shf.l.wrap.b32 	%r642, %r235, %r235, 5;
	// begin inline asm
	lop3.b32 %r230, %r231, %r237, %r233, 232;
	// end inline asm
	xor.b32  	%r643, %r582, %r622;
	xor.b32  	%r644, %r643, %r534;
	xor.b32  	%r645, %r644, %r518;
	shf.l.wrap.b32 	%r646, %r645, %r645, 1;
	add.s32 	%r647, %r230, %r646;
	add.s32 	%r648, %r647, %r229;
	add.s32 	%r649, %r648, %r642;
	add.s32 	%r239, %r649, -1894007588;
	shf.l.wrap.b32 	%r241, %r231, %r231, 30;
	shf.l.wrap.b32 	%r650, %r239, %r239, 5;
	// begin inline asm
	lop3.b32 %r234, %r235, %r241, %r237, 232;
	// end inline asm
	xor.b32  	%r651, %r590, %r630;
	xor.b32  	%r652, %r651, %r542;
	xor.b32  	%r653, %r652, %r526;
	shf.l.wrap.b32 	%r654, %r653, %r653, 1;
	add.s32 	%r655, %r234, %r654;
	add.s32 	%r656, %r655, %r233;
	add.s32 	%r657, %r656, %r650;
	add.s32 	%r243, %r657, -1894007588;
	shf.l.wrap.b32 	%r245, %r235, %r235, 30;
	shf.l.wrap.b32 	%r658, %r243, %r243, 5;
	// begin inline asm
	lop3.b32 %r238, %r239, %r245, %r241, 232;
	// end inline asm
	xor.b32  	%r659, %r598, %r638;
	xor.b32  	%r660, %r659, %r550;
	xor.b32  	%r661, %r660, %r534;
	shf.l.wrap.b32 	%r662, %r661, %r661, 1;
	add.s32 	%r663, %r238, %r662;
	add.s32 	%r664, %r663, %r237;
	add.s32 	%r665, %r664, %r658;
	add.s32 	%r247, %r665, -1894007588;
	shf.l.wrap.b32 	%r249, %r239, %r239, 30;
	shf.l.wrap.b32 	%r666, %r247, %r247, 5;
	// begin inline asm
	lop3.b32 %r242, %r243, %r249, %r245, 232;
	// end inline asm
	xor.b32  	%r667, %r606, %r646;
	xor.b32  	%r668, %r667, %r558;
	xor.b32  	%r669, %r668, %r542;
	shf.l.wrap.b32 	%r670, %r669, %r669, 1;
	add.s32 	%r671, %r242, %r670;
	add.s32 	%r672, %r671, %r241;
	add.s32 	%r673, %r672, %r666;
	add.s32 	%r251, %r673, -1894007588;
	shf.l.wrap.b32 	%r253, %r243, %r243, 30;
	shf.l.wrap.b32 	%r674, %r251, %r251, 5;
	// begin inline asm
	lop3.b32 %r246, %r247, %r253, %r249, 232;
	// end inline asm
	xor.b32  	%r675, %r614, %r654;
	xor.b32  	%r676, %r675, %r566;
	xor.b32  	%r677, %r676, %r550;
	shf.l.wrap.b32 	%r678, %r677, %r677, 1;
	add.s32 	%r679, %r246, %r678;
	add.s32 	%r680, %r679, %r245;
	add.s32 	%r681, %r680, %r674;
	add.s32 	%r255, %r681, -1894007588;
	shf.l.wrap.b32 	%r257, %r247, %r247, 30;
	shf.l.wrap.b32 	%r682, %r255, %r255, 5;
	// begin inline asm
	lop3.b32 %r250, %r251, %r257, %r253, 232;
	// end inline asm
	xor.b32  	%r683, %r622, %r662;
	xor.b32  	%r684, %r683, %r574;
	xor.b32  	%r685, %r684, %r558;
	shf.l.wrap.b32 	%r686, %r685, %r685, 1;
	add.s32 	%r687, %r250, %r686;
	add.s32 	%r688, %r687, %r249;
	add.s32 	%r689, %r688, %r682;
	add.s32 	%r259, %r689, -1894007588;
	shf.l.wrap.b32 	%r261, %r251, %r251, 30;
	shf.l.wrap.b32 	%r690, %r259, %r259, 5;
	// begin inline asm
	lop3.b32 %r254, %r255, %r261, %r257, 232;
	// end inline asm
	xor.b32  	%r691, %r630, %r670;
	xor.b32  	%r692, %r691, %r582;
	xor.b32  	%r693, %r692, %r566;
	shf.l.wrap.b32 	%r694, %r693, %r693, 1;
	add.s32 	%r695, %r254, %r694;
	add.s32 	%r696, %r695, %r253;
	add.s32 	%r697, %r696, %r690;
	add.s32 	%r263, %r697, -1894007588;
	shf.l.wrap.b32 	%r265, %r255, %r255, 30;
	shf.l.wrap.b32 	%r698, %r263, %r263, 5;
	// begin inline asm
	lop3.b32 %r258, %r259, %r265, %r261, 232;
	// end inline asm
	xor.b32  	%r699, %r638, %r678;
	xor.b32  	%r700, %r699, %r590;
	xor.b32  	%r701, %r700, %r574;
	shf.l.wrap.b32 	%r702, %r701, %r701, 1;
	add.s32 	%r703, %r258, %r702;
	add.s32 	%r704, %r703, %r257;
	add.s32 	%r705, %r704, %r698;
	add.s32 	%r267, %r705, -1894007588;
	shf.l.wrap.b32 	%r269, %r259, %r259, 30;
	shf.l.wrap.b32 	%r706, %r267, %r267, 5;
	// begin inline asm
	lop3.b32 %r262, %r263, %r269, %r265, 232;
	// end inline asm
	xor.b32  	%r707, %r646, %r686;
	xor.b32  	%r708, %r707, %r598;
	xor.b32  	%r709, %r708, %r582;
	shf.l.wrap.b32 	%r710, %r709, %r709, 1;
	add.s32 	%r711, %r262, %r710;
	add.s32 	%r712, %r711, %r261;
	add.s32 	%r713, %r712, %r706;
	add.s32 	%r271, %r713, -1894007588;
	shf.l.wrap.b32 	%r273, %r263, %r263, 30;
	shf.l.wrap.b32 	%r714, %r271, %r271, 5;
	// begin inline asm
	lop3.b32 %r266, %r267, %r273, %r269, 232;
	// end inline asm
	xor.b32  	%r715, %r654, %r694;
	xor.b32  	%r716, %r715, %r606;
	xor.b32  	%r717, %r716, %r590;
	shf.l.wrap.b32 	%r718, %r717, %r717, 1;
	add.s32 	%r719, %r266, %r718;
	add.s32 	%r720, %r719, %r265;
	add.s32 	%r721, %r720, %r714;
	add.s32 	%r275, %r721, -1894007588;
	shf.l.wrap.b32 	%r277, %r267, %r267, 30;
	shf.l.wrap.b32 	%r722, %r275, %r275, 5;
	// begin inline asm
	lop3.b32 %r270, %r271, %r277, %r273, 232;
	// end inline asm
	xor.b32  	%r723, %r662, %r702;
	xor.b32  	%r724, %r723, %r614;
	xor.b32  	%r725, %r724, %r598;
	shf.l.wrap.b32 	%r726, %r725, %r725, 1;
	add.s32 	%r727, %r270, %r726;
	add.s32 	%r728, %r727, %r269;
	add.s32 	%r729, %r728, %r722;
	add.s32 	%r279, %r729, -1894007588;
	shf.l.wrap.b32 	%r281, %r271, %r271, 30;
	shf.l.wrap.b32 	%r730, %r279, %r279, 5;
	// begin inline asm
	lop3.b32 %r274, %r275, %r281, %r277, 232;
	// end inline asm
	xor.b32  	%r731, %r670, %r710;
	xor.b32  	%r732, %r731, %r622;
	xor.b32  	%r733, %r732, %r606;
	shf.l.wrap.b32 	%r734, %r733, %r733, 1;
	add.s32 	%r735, %r274, %r734;
	add.s32 	%r736, %r735, %r273;
	add.s32 	%r737, %r736, %r730;
	add.s32 	%r283, %r737, -1894007588;
	shf.l.wrap.b32 	%r285, %r275, %r275, 30;
	shf.l.wrap.b32 	%r738, %r283, %r283, 5;
	// begin inline asm
	lop3.b32 %r278, %r279, %r285, %r281, 150;
	// end inline asm
	xor.b32  	%r739, %r678, %r718;
	xor.b32  	%r740, %r739, %r630;
	xor.b32  	%r741, %r740, %r614;
	shf.l.wrap.b32 	%r742, %r741, %r741, 1;
	add.s32 	%r743, %r278, %r742;
	add.s32 	%r744, %r743, %r277;
	add.s32 	%r745, %r744, %r738;
	add.s32 	%r287, %r745, -899497514;
	shf.l.wrap.b32 	%r289, %r279, %r279, 30;
	shf.l.wrap.b32 	%r746, %r287, %r287, 5;
	// begin inline asm
	lop3.b32 %r282, %r283, %r289, %r285, 150;
	// end inline asm
	xor.b32  	%r747, %r686, %r726;
	xor.b32  	%r748, %r747, %r638;
	xor.b32  	%r749, %r748, %r622;
	shf.l.wrap.b32 	%r750, %r749, %r749, 1;
	add.s32 	%r751, %r282, %r750;
	add.s32 	%r752, %r751, %r281;
	add.s32 	%r753, %r752, %r746;
	add.s32 	%r291, %r753, -899497514;
	shf.l.wrap.b32 	%r293, %r283, %r283, 30;
	shf.l.wrap.b32 	%r754, %r291, %r291, 5;
	// begin inline asm
	lop3.b32 %r286, %r287, %r293, %r289, 150;
	// end inline asm
	xor.b32  	%r755, %r694, %r734;
	xor.b32  	%r756, %r755, %r646;
	xor.b32  	%r757, %r756, %r630;
	shf.l.wrap.b32 	%r758, %r757, %r757, 1;
	add.s32 	%r759, %r286, %r758;
	add.s32 	%r760, %r759, %r285;
	add.s32 	%r761, %r760, %r754;
	add.s32 	%r295, %r761, -899497514;
	shf.l.wrap.b32 	%r297, %r287, %r287, 30;
	shf.l.wrap.b32 	%r762, %r295, %r295, 5;
	// begin inline asm
	lop3.b32 %r290, %r291, %r297, %r293, 150;
	// end inline asm
	xor.b32  	%r763, %r702, %r742;
	xor.b32  	%r764, %r763, %r654;
	xor.b32  	%r765, %r764, %r638;
	shf.l.wrap.b32 	%r766, %r765, %r765, 1;
	add.s32 	%r767, %r290, %r766;
	add.s32 	%r768, %r767, %r289;
	add.s32 	%r769, %r768, %r762;
	add.s32 	%r299, %r769, -899497514;
	shf.l.wrap.b32 	%r301, %r291, %r291, 30;
	shf.l.wrap.b32 	%r770, %r299, %r299, 5;
	// begin inline asm
	lop3.b32 %r294, %r295, %r301, %r297, 150;
	// end inline asm
	xor.b32  	%r771, %r710, %r750;
	xor.b32  	%r772, %r771, %r662;
	xor.b32  	%r773, %r772, %r646;
	shf.l.wrap.b32 	%r774, %r773, %r773, 1;
	add.s32 	%r775, %r294, %r293;
	add.s32 	%r776, %r775, %r774;
	add.s32 	%r777, %r776, %r770;
	add.s32 	%r303, %r777, -899497514;
	shf.l.wrap.b32 	%r305, %r295, %r295, 30;
	shf.l.wrap.b32 	%r778, %r303, %r303, 5;
	// begin inline asm
	lop3.b32 %r298, %r299, %r305, %r301, 150;
	// end inline asm
	xor.b32  	%r779, %r718, %r758;
	xor.b32  	%r780, %r779, %r670;
	xor.b32  	%r781, %r780, %r654;
	shf.l.wrap.b32 	%r782, %r781, %r781, 1;
	add.s32 	%r783, %r298, %r297;
	add.s32 	%r784, %r783, %r782;
	add.s32 	%r785, %r784, %r778;
	add.s32 	%r307, %r785, -899497514;
	shf.l.wrap.b32 	%r309, %r299, %r299, 30;
	shf.l.wrap.b32 	%r786, %r307, %r307, 5;
	// begin inline asm
	lop3.b32 %r302, %r303, %r309, %r305, 150;
	// end inline asm
	xor.b32  	%r787, %r726, %r766;
	xor.b32  	%r788, %r787, %r678;
	xor.b32  	%r789, %r788, %r662;
	shf.l.wrap.b32 	%r790, %r789, %r789, 1;
	add.s32 	%r791, %r302, %r301;
	add.s32 	%r792, %r791, %r790;
	add.s32 	%r793, %r792, %r786;
	add.s32 	%r311, %r793, -899497514;
	shf.l.wrap.b32 	%r313, %r303, %r303, 30;
	shf.l.wrap.b32 	%r794, %r311, %r311, 5;
	// begin inline asm
	lop3.b32 %r306, %r307, %r313, %r309, 150;
	// end inline asm
	xor.b32  	%r795, %r734, %r774;
	xor.b32  	%r796, %r795, %r686;
	xor.b32  	%r797, %r796, %r670;
	shf.l.wrap.b32 	%r798, %r797, %r797, 1;
	add.s32 	%r799, %r306, %r305;
	add.s32 	%r800, %r799, %r798;
	add.s32 	%r801, %r800, %r794;
	add.s32 	%r315, %r801, -899497514;
	shf.l.wrap.b32 	%r317, %r307, %r307, 30;
	shf.l.wrap.b32 	%r802, %r315, %r315, 5;
	// begin inline asm
	lop3.b32 %r310, %r311, %r317, %r313, 150;
	// end inline asm
	xor.b32  	%r803, %r742, %r782;
	xor.b32  	%r804, %r803, %r694;
	xor.b32  	%r805, %r804, %r678;
	shf.l.wrap.b32 	%r806, %r805, %r805, 1;
	add.s32 	%r807, %r310, %r309;
	add.s32 	%r808, %r807, %r806;
	add.s32 	%r809, %r808, %r802;
	add.s32 	%r319, %r809, -899497514;
	shf.l.wrap.b32 	%r321, %r311, %r311, 30;
	shf.l.wrap.b32 	%r810, %r319, %r319, 5;
	// begin inline asm
	lop3.b32 %r314, %r315, %r321, %r317, 150;
	// end inline asm
	xor.b32  	%r811, %r750, %r790;
	xor.b32  	%r812, %r811, %r702;
	xor.b32  	%r813, %r812, %r686;
	shf.l.wrap.b32 	%r814, %r813, %r813, 1;
	add.s32 	%r815, %r314, %r313;
	add.s32 	%r816, %r815, %r814;
	add.s32 	%r817, %r816, %r810;
	add.s32 	%r323, %r817, -899497514;
	shf.l.wrap.b32 	%r325, %r315, %r315, 30;
	shf.l.wrap.b32 	%r818, %r323, %r323, 5;
	// begin inline asm
	lop3.b32 %r318, %r319, %r325, %r321, 150;
	// end inline asm
	xor.b32  	%r819, %r758, %r798;
	xor.b32  	%r820, %r819, %r710;
	xor.b32  	%r821, %r820, %r694;
	shf.l.wrap.b32 	%r822, %r821, %r821, 1;
	add.s32 	%r823, %r317, %r318;
	add.s32 	%r824, %r823, %r822;
	add.s32 	%r825, %r824, %r818;
	add.s32 	%r327, %r825, -899497514;
	shf.l.wrap.b32 	%r329, %r319, %r319, 30;
	shf.l.wrap.b32 	%r826, %r327, %r327, 5;
	// begin inline asm
	lop3.b32 %r322, %r323, %r329, %r325, 150;
	// end inline asm
	xor.b32  	%r827, %r766, %r806;
	xor.b32  	%r828, %r827, %r718;
	xor.b32  	%r829, %r828, %r702;
	shf.l.wrap.b32 	%r830, %r829, %r829, 1;
	add.s32 	%r831, %r321, %r322;
	add.s32 	%r832, %r831, %r830;
	add.s32 	%r833, %r832, %r826;
	add.s32 	%r331, %r833, -899497514;
	shf.l.wrap.b32 	%r333, %r323, %r323, 30;
	shf.l.wrap.b32 	%r834, %r331, %r331, 5;
	// begin inline asm
	lop3.b32 %r326, %r327, %r333, %r329, 150;
	// end inline asm
	xor.b32  	%r835, %r774, %r814;
	xor.b32  	%r836, %r835, %r726;
	xor.b32  	%r837, %r836, %r710;
	shf.l.wrap.b32 	%r838, %r837, %r837, 1;
	add.s32 	%r839, %r325, %r326;
	add.s32 	%r840, %r839, %r838;
	add.s32 	%r841, %r840, %r834;
	add.s32 	%r335, %r841, -899497514;
	shf.l.wrap.b32 	%r337, %r327, %r327, 30;
	shf.l.wrap.b32 	%r842, %r335, %r335, 5;
	// begin inline asm
	lop3.b32 %r330, %r331, %r337, %r333, 150;
	// end inline asm
	xor.b32  	%r843, %r782, %r822;
	xor.b32  	%r844, %r843, %r734;
	xor.b32  	%r845, %r844, %r718;
	shf.l.wrap.b32 	%r846, %r845, %r845, 1;
	add.s32 	%r847, %r329, %r330;
	add.s32 	%r848, %r847, %r846;
	add.s32 	%r849, %r848, %r842;
	add.s32 	%r339, %r849, -899497514;
	shf.l.wrap.b32 	%r341, %r331, %r331, 30;
	shf.l.wrap.b32 	%r850, %r339, %r339, 5;
	// begin inline asm
	lop3.b32 %r334, %r335, %r341, %r337, 150;
	// end inline asm
	xor.b32  	%r851, %r790, %r830;
	xor.b32  	%r852, %r851, %r742;
	xor.b32  	%r853, %r852, %r726;
	shf.l.wrap.b32 	%r854, %r853, %r853, 1;
	add.s32 	%r855, %r333, %r334;
	add.s32 	%r856, %r855, %r854;
	add.s32 	%r857, %r856, %r850;
	add.s32 	%r343, %r857, -899497514;
	shf.l.wrap.b32 	%r345, %r335, %r335, 30;
	shf.l.wrap.b32 	%r858, %r343, %r343, 5;
	// begin inline asm
	lop3.b32 %r338, %r339, %r345, %r341, 150;
	// end inline asm
	xor.b32  	%r859, %r798, %r838;
	xor.b32  	%r860, %r859, %r750;
	xor.b32  	%r861, %r860, %r734;
	shf.l.wrap.b32 	%r862, %r861, %r861, 1;
	add.s32 	%r863, %r337, %r338;
	add.s32 	%r864, %r863, %r862;
	add.s32 	%r865, %r864, %r858;
	add.s32 	%r347, %r865, -899497514;
	shf.l.wrap.b32 	%r349, %r339, %r339, 30;
	shf.l.wrap.b32 	%r866, %r347, %r347, 5;
	// begin inline asm
	lop3.b32 %r342, %r343, %r349, %r345, 150;
	// end inline asm
	xor.b32  	%r867, %r806, %r846;
	xor.b32  	%r868, %r867, %r758;
	xor.b32  	%r869, %r868, %r742;
	shf.l.wrap.b32 	%r870, %r869, %r869, 1;
	add.s32 	%r871, %r341, %r342;
	add.s32 	%r872, %r871, %r870;
	add.s32 	%r873, %r872, %r866;
	add.s32 	%r351, %r873, -899497514;
	shf.l.wrap.b32 	%r353, %r343, %r343, 30;
	shf.l.wrap.b32 	%r874, %r351, %r351, 5;
	// begin inline asm
	lop3.b32 %r346, %r347, %r353, %r349, 150;
	// end inline asm
	xor.b32  	%r875, %r814, %r854;
	xor.b32  	%r876, %r875, %r766;
	xor.b32  	%r877, %r876, %r750;
	shf.l.wrap.b32 	%r878, %r877, %r877, 1;
	add.s32 	%r879, %r345, %r346;
	add.s32 	%r880, %r879, %r878;
	add.s32 	%r881, %r880, %r874;
	add.s32 	%r355, %r881, -899497514;
	shf.l.wrap.b32 	%r357, %r347, %r347, 30;
	shf.l.wrap.b32 	%r882, %r355, %r355, 5;
	// begin inline asm
	lop3.b32 %r350, %r351, %r357, %r353, 150;
	// end inline asm
	xor.b32  	%r883, %r822, %r862;
	xor.b32  	%r884, %r883, %r774;
	xor.b32  	%r885, %r884, %r758;
	shf.l.wrap.b32 	%r886, %r885, %r885, 1;
	add.s32 	%r887, %r349, %r350;
	add.s32 	%r888, %r887, %r886;
	add.s32 	%r889, %r888, %r882;
	add.s32 	%r890, %r889, -899497514;
	shf.l.wrap.b32 	%r356, %r351, %r351, 30;
	shf.l.wrap.b32 	%r891, %r890, %r890, 5;
	// begin inline asm
	lop3.b32 %r354, %r355, %r356, %r357, 150;
	// end inline asm
	xor.b32  	%r892, %r830, %r870;
	xor.b32  	%r893, %r892, %r782;
	xor.b32  	%r894, %r893, %r766;
	shf.l.wrap.b32 	%r895, %r894, %r894, 1;
	shf.l.wrap.b32 	%r896, %r355, %r355, 30;
	add.s32 	%r897, %r353, %r354;
	add.s32 	%r898, %r897, %r895;
	add.s32 	%r899, %r898, %r891;
	add.s32 	%r904, %r899, 833086679;
	add.s32 	%r905, %r889, -1171231393;
	add.s32 	%r906, %r896, -1732584194;
	add.s32 	%r907, %r356, 271733878;
	add.s32 	%r908, %r357, -1009589776;
	add.s32 	%r909, %r909, 1;
	setp.ne.s32 	%p1, %r909, 2500;
	@%p1 bra 	$L__BB1_1;

	add.s32 	%r901, %r899, 833086679;
	st.global.v2.u32 	[%rd1+8], {%r901, %r905};
	add.s32 	%r902, %r896, -1732584194;
	st.global.v2.u32 	[%rd1+16], {%r902, %r907};
	add.s32 	%r903, %r357, -1009589776;
	st.global.u32 	[%rd1+24], %r903;
	add.s32 	%r900, %r1, 2500;
	st.global.u32 	[%rd1], %r900;
	ret;

}
	// .globl	Final2007
.entry Final2007(
	.param .u64 .ptr .global .align 8 Final2007_param_0,
	.param .u64 .ptr .global .align 4 Final2007_param_1,
	.param .u64 .ptr .const .align 8 Final2007_param_2,
	.param .u64 .ptr .const .align 1 Final2007_param_3
)
{
	.local .align 16 .b8 	__local_depot2[1008];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<35>;
	.reg .b32 	%r<8935>;
	.reg .b64 	%rd<57>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u64 	%rd21, [Final2007_param_0];
	ld.param.u64 	%rd22, [Final2007_param_2];
	mov.u32 	%r1168, %ctaid.x;
	mov.u32 	%r1169, %ntid.x;
	mov.u32 	%r1170, %tid.x;
	mov.b32 	%r1171, %envreg3;
	add.s32 	%r1172, %r1170, %r1171;
	mad.lo.s32 	%r1173, %r1169, %r1168, %r1172;
	cvt.u64.u32 	%rd1, %r1173;
	mul.wide.u32 	%rd23, %r1173, 72;
	add.s64 	%rd24, %rd21, %rd23;
	ld.global.v2.u32 	{%r1174, %r1175}, [%rd24+8];
	mov.u32 	%r1177, 0;
	.pragma "used_bytes_mask 240";
	ld.global.v2.u32 	{%r1179, %r1180}, [%rd24+16];
	add.u64 	%rd2, %SPL, 0;
	add.u64 	%rd3, %SPL, 240;
	add.u64 	%rd4, %SPL, 280;
	mov.u32 	%r221, 1732584193;
	shf.l.wrap.b32 	%r1182, %r221, %r221, 5;
	mov.u32 	%r217, -271733879;
	mov.u32 	%r223, -1732584194;
	mov.u32 	%r219, 271733878;
	// begin inline asm
	lop3.b32 %r216, %r217, %r223, %r219, 202;
	// end inline asm
	add.s32 	%r1183, %r1182, %r216;
	add.s32 	%r1184, %r1174, %r1183;
	add.s32 	%r225, %r1184, 508910473;
	shf.l.wrap.b32 	%r1185, %r225, %r225, 5;
	shf.l.wrap.b32 	%r539, %r217, %r217, 30;
	// begin inline asm
	lop3.b32 %r220, %r221, %r539, %r223, 202;
	// end inline asm
	add.s32 	%r2, %r220, 1790234127;
	add.s32 	%r1186, %r2, %r1175;
	add.s32 	%r229, %r1186, %r1185;
	shf.l.wrap.b32 	%r1187, %r229, %r229, 5;
	shf.l.wrap.b32 	%r543, %r221, %r221, 30;
	// begin inline asm
	lop3.b32 %r224, %r225, %r543, %r539, 202;
	// end inline asm
	ld.global.u32 	%r1188, [%rd24+16];
	add.s32 	%r1189, %r224, %r1188;
	add.s32 	%r1190, %r1189, %r1187;
	add.s32 	%r233, %r1190, -214083945;
	shf.l.wrap.b32 	%r235, %r225, %r225, 30;
	shf.l.wrap.b32 	%r1191, %r233, %r233, 5;
	// begin inline asm
	lop3.b32 %r228, %r229, %r235, %r543, 202;
	// end inline asm
	add.s32 	%r1192, %r539, 1518500249;
	add.s32 	%r1193, %r1192, %r228;
	add.s32 	%r1194, %r1193, %r1180;
	add.s32 	%r237, %r1194, %r1191;
	shf.l.wrap.b32 	%r239, %r229, %r229, 30;
	shf.l.wrap.b32 	%r1195, %r237, %r237, 5;
	// begin inline asm
	lop3.b32 %r232, %r233, %r239, %r235, 202;
	// end inline asm
	add.s32 	%r1196, %r543, 1518500249;
	add.s32 	%r1197, %r1196, %r232;
	ld.global.u32 	%r1198, [%rd24+24];
	add.s32 	%r1199, %r1197, %r1198;
	add.s32 	%r241, %r1199, %r1195;
	shf.l.wrap.b32 	%r243, %r233, %r233, 30;
	shf.l.wrap.b32 	%r1200, %r241, %r241, 5;
	// begin inline asm
	lop3.b32 %r236, %r237, %r243, %r239, 202;
	// end inline asm
	add.s32 	%r1201, %r235, %r236;
	add.s32 	%r1202, %r1201, %r1200;
	add.s32 	%r245, %r1202, 1518500249;
	shf.l.wrap.b32 	%r247, %r237, %r237, 30;
	shf.l.wrap.b32 	%r1203, %r245, %r245, 5;
	// begin inline asm
	lop3.b32 %r240, %r241, %r247, %r243, 202;
	// end inline asm
	add.s32 	%r1204, %r239, %r240;
	add.s32 	%r1205, %r1204, 1518500249;
	xor.b32  	%r1206, %r1205, -2147483648;
	mov.u32 	%r1207, -2147483648;
	add.s32 	%r249, %r1206, %r1203;
	shf.l.wrap.b32 	%r251, %r241, %r241, 30;
	shf.l.wrap.b32 	%r1208, %r249, %r249, 5;
	// begin inline asm
	lop3.b32 %r244, %r245, %r251, %r247, 202;
	// end inline asm
	add.s32 	%r1209, %r244, %r243;
	add.s32 	%r1210, %r1209, %r1208;
	add.s32 	%r253, %r1210, 1518500249;
	shf.l.wrap.b32 	%r255, %r245, %r245, 30;
	shf.l.wrap.b32 	%r1211, %r253, %r253, 5;
	// begin inline asm
	lop3.b32 %r248, %r249, %r255, %r251, 202;
	// end inline asm
	add.s32 	%r1212, %r248, %r247;
	add.s32 	%r1213, %r1212, %r1211;
	add.s32 	%r257, %r1213, 1518500249;
	shf.l.wrap.b32 	%r259, %r249, %r249, 30;
	shf.l.wrap.b32 	%r1214, %r257, %r257, 5;
	// begin inline asm
	lop3.b32 %r252, %r253, %r259, %r255, 202;
	// end inline asm
	add.s32 	%r1215, %r252, %r251;
	add.s32 	%r1216, %r1215, %r1214;
	add.s32 	%r261, %r1216, 1518500249;
	shf.l.wrap.b32 	%r263, %r253, %r253, 30;
	shf.l.wrap.b32 	%r1217, %r261, %r261, 5;
	// begin inline asm
	lop3.b32 %r256, %r257, %r263, %r259, 202;
	// end inline asm
	add.s32 	%r1218, %r256, %r255;
	add.s32 	%r1219, %r1218, %r1217;
	add.s32 	%r265, %r1219, 1518500249;
	shf.l.wrap.b32 	%r267, %r257, %r257, 30;
	shf.l.wrap.b32 	%r1220, %r265, %r265, 5;
	// begin inline asm
	lop3.b32 %r260, %r261, %r267, %r263, 202;
	// end inline asm
	add.s32 	%r1221, %r260, %r259;
	add.s32 	%r1222, %r1221, %r1220;
	add.s32 	%r269, %r1222, 1518500249;
	shf.l.wrap.b32 	%r271, %r261, %r261, 30;
	shf.l.wrap.b32 	%r1223, %r269, %r269, 5;
	// begin inline asm
	lop3.b32 %r264, %r265, %r271, %r267, 202;
	// end inline asm
	add.s32 	%r1224, %r264, %r263;
	add.s32 	%r1225, %r1224, %r1223;
	add.s32 	%r273, %r1225, 1518500249;
	shf.l.wrap.b32 	%r275, %r265, %r265, 30;
	shf.l.wrap.b32 	%r1226, %r273, %r273, 5;
	// begin inline asm
	lop3.b32 %r268, %r269, %r275, %r271, 202;
	// end inline asm
	add.s32 	%r1227, %r268, %r267;
	add.s32 	%r1228, %r1227, %r1226;
	add.s32 	%r277, %r1228, 1518500249;
	shf.l.wrap.b32 	%r279, %r269, %r269, 30;
	shf.l.wrap.b32 	%r1229, %r277, %r277, 5;
	// begin inline asm
	lop3.b32 %r272, %r273, %r279, %r275, 202;
	// end inline asm
	add.s32 	%r1230, %r272, %r271;
	add.s32 	%r1231, %r1230, %r1229;
	add.s32 	%r281, %r1231, 1518500249;
	shf.l.wrap.b32 	%r283, %r273, %r273, 30;
	shf.l.wrap.b32 	%r1232, %r281, %r281, 5;
	// begin inline asm
	lop3.b32 %r276, %r277, %r283, %r279, 202;
	// end inline asm
	add.s32 	%r1233, %r276, %r275;
	add.s32 	%r1234, %r1233, %r1232;
	add.s32 	%r285, %r1234, 1518500441;
	shf.l.wrap.b32 	%r287, %r277, %r277, 30;
	shf.l.wrap.b32 	%r1235, %r285, %r285, 5;
	// begin inline asm
	lop3.b32 %r280, %r281, %r287, %r283, 202;
	// end inline asm
	xor.b32  	%r1236, %r1174, %r1188;
	shf.l.wrap.b32 	%r1237, %r1236, %r1236, 1;
	add.s32 	%r1238, %r280, %r1237;
	add.s32 	%r1239, %r1238, %r279;
	add.s32 	%r1240, %r1239, %r1235;
	add.s32 	%r289, %r1240, 1518500249;
	shf.l.wrap.b32 	%r291, %r281, %r281, 30;
	shf.l.wrap.b32 	%r1241, %r289, %r289, 5;
	// begin inline asm
	lop3.b32 %r284, %r285, %r291, %r287, 202;
	// end inline asm
	xor.b32  	%r1242, %r1175, %r1180;
	shf.l.wrap.b32 	%r1243, %r1242, %r1242, 1;
	add.s32 	%r1244, %r284, %r1243;
	add.s32 	%r1245, %r1244, %r283;
	add.s32 	%r1246, %r1245, %r1241;
	add.s32 	%r293, %r1246, 1518500249;
	shf.l.wrap.b32 	%r295, %r285, %r285, 30;
	shf.l.wrap.b32 	%r1247, %r293, %r293, 5;
	// begin inline asm
	lop3.b32 %r288, %r289, %r295, %r291, 202;
	// end inline asm
	xor.b32  	%r1248, %r1198, %r1188;
	xor.b32  	%r1249, %r1248, 192;
	shf.l.wrap.b32 	%r1250, %r1249, %r1249, 1;
	add.s32 	%r1251, %r288, %r1250;
	add.s32 	%r1252, %r1251, %r287;
	add.s32 	%r1253, %r1252, %r1247;
	add.s32 	%r297, %r1253, 1518500249;
	shf.l.wrap.b32 	%r299, %r289, %r289, 30;
	shf.l.wrap.b32 	%r1254, %r297, %r297, 5;
	// begin inline asm
	lop3.b32 %r292, %r293, %r299, %r295, 202;
	// end inline asm
	xor.b32  	%r1255, %r1237, %r1180;
	shf.l.wrap.b32 	%r1256, %r1255, %r1255, 1;
	add.s32 	%r1257, %r292, %r1256;
	add.s32 	%r1258, %r1257, %r291;
	add.s32 	%r1259, %r1258, %r1254;
	add.s32 	%r301, %r1259, 1518500249;
	shf.l.wrap.b32 	%r303, %r293, %r293, 30;
	shf.l.wrap.b32 	%r1260, %r301, %r301, 5;
	// begin inline asm
	lop3.b32 %r296, %r297, %r303, %r299, 150;
	// end inline asm
	xor.b32  	%r1261, %r1243, %r1198;
	xor.b32  	%r1262, %r1261, -2147483648;
	shf.l.wrap.b32 	%r1263, %r1262, %r1262, 1;
	add.s32 	%r1264, %r296, %r1263;
	add.s32 	%r1265, %r1264, %r295;
	add.s32 	%r1266, %r1265, %r1260;
	add.s32 	%r305, %r1266, 1859775393;
	shf.l.wrap.b32 	%r307, %r297, %r297, 30;
	shf.l.wrap.b32 	%r1267, %r305, %r305, 5;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 150;
	// end inline asm
	shf.l.wrap.b32 	%r1268, %r1250, %r1250, 1;
	add.s32 	%r1269, %r300, %r1268;
	add.s32 	%r1270, %r1269, %r299;
	add.s32 	%r1271, %r1270, %r1267;
	add.s32 	%r309, %r1271, 1859775393;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	shf.l.wrap.b32 	%r1272, %r309, %r309, 5;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 150;
	// end inline asm
	xor.b32  	%r1273, %r1256, -2147483648;
	shf.l.wrap.b32 	%r1274, %r1273, %r1273, 1;
	add.s32 	%r1275, %r304, %r1274;
	add.s32 	%r1276, %r1275, %r303;
	add.s32 	%r1277, %r1276, %r1272;
	add.s32 	%r313, %r1277, 1859775393;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	shf.l.wrap.b32 	%r1278, %r313, %r313, 5;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 150;
	// end inline asm
	xor.b32  	%r1279, %r1263, 192;
	shf.l.wrap.b32 	%r1280, %r1279, %r1279, 1;
	add.s32 	%r1281, %r308, %r1280;
	add.s32 	%r1282, %r1281, %r307;
	add.s32 	%r1283, %r1282, %r1278;
	add.s32 	%r317, %r1283, 1859775393;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r1284, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 150;
	// end inline asm
	xor.b32  	%r1285, %r1237, %r1268;
	shf.l.wrap.b32 	%r1286, %r1285, %r1285, 1;
	add.s32 	%r1287, %r312, %r1286;
	add.s32 	%r1288, %r1287, %r311;
	add.s32 	%r1289, %r1288, %r1284;
	add.s32 	%r321, %r1289, 1859775393;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r1290, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 150;
	// end inline asm
	xor.b32  	%r1291, %r1243, %r1274;
	shf.l.wrap.b32 	%r1292, %r1291, %r1291, 1;
	add.s32 	%r1293, %r316, %r1292;
	add.s32 	%r1294, %r1293, %r315;
	add.s32 	%r1295, %r1294, %r1290;
	add.s32 	%r325, %r1295, 1859775393;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r1296, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 150;
	// end inline asm
	xor.b32  	%r1297, %r1250, %r1280;
	shf.l.wrap.b32 	%r1298, %r1297, %r1297, 1;
	add.s32 	%r1299, %r320, %r1298;
	add.s32 	%r1300, %r1299, %r319;
	add.s32 	%r1301, %r1300, %r1296;
	add.s32 	%r329, %r1301, 1859775393;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r1302, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 150;
	// end inline asm
	xor.b32  	%r1303, %r1256, %r1286;
	shf.l.wrap.b32 	%r1304, %r1303, %r1303, 1;
	add.s32 	%r1305, %r324, %r1304;
	add.s32 	%r1306, %r1305, %r323;
	add.s32 	%r1307, %r1306, %r1302;
	add.s32 	%r333, %r1307, 1859775393;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r1308, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 150;
	// end inline asm
	xor.b32  	%r1309, %r1263, %r1292;
	shf.l.wrap.b32 	%r1310, %r1309, %r1309, 1;
	add.s32 	%r1311, %r328, %r1310;
	add.s32 	%r1312, %r1311, %r327;
	add.s32 	%r1313, %r1312, %r1308;
	add.s32 	%r337, %r1313, 1859775393;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r1314, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 150;
	// end inline asm
	xor.b32  	%r1315, %r1268, %r1298;
	xor.b32  	%r1316, %r1315, 192;
	shf.l.wrap.b32 	%r1317, %r1316, %r1316, 1;
	add.s32 	%r1318, %r332, %r1317;
	add.s32 	%r1319, %r1318, %r331;
	add.s32 	%r1320, %r1319, %r1314;
	add.s32 	%r341, %r1320, 1859775393;
	shf.l.wrap.b32 	%r343, %r333, %r333, 30;
	shf.l.wrap.b32 	%r1321, %r341, %r341, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r343, %r339, 150;
	// end inline asm
	xor.b32  	%r1322, %r1274, %r1304;
	xor.b32  	%r1323, %r1322, %r1237;
	shf.l.wrap.b32 	%r1324, %r1323, %r1323, 1;
	add.s32 	%r1325, %r336, %r1324;
	add.s32 	%r1326, %r1325, %r335;
	add.s32 	%r1327, %r1326, %r1321;
	add.s32 	%r345, %r1327, 1859775393;
	shf.l.wrap.b32 	%r347, %r337, %r337, 30;
	shf.l.wrap.b32 	%r1328, %r345, %r345, 5;
	// begin inline asm
	lop3.b32 %r340, %r341, %r347, %r343, 150;
	// end inline asm
	xor.b32  	%r1329, %r1280, %r1310;
	xor.b32  	%r1330, %r1329, %r1243;
	xor.b32  	%r1331, %r1330, 192;
	shf.l.wrap.b32 	%r1332, %r1331, %r1331, 1;
	add.s32 	%r1333, %r340, %r1332;
	add.s32 	%r1334, %r1333, %r339;
	add.s32 	%r1335, %r1334, %r1328;
	add.s32 	%r349, %r1335, 1859775393;
	shf.l.wrap.b32 	%r351, %r341, %r341, 30;
	shf.l.wrap.b32 	%r1336, %r349, %r349, 5;
	// begin inline asm
	lop3.b32 %r344, %r345, %r351, %r347, 150;
	// end inline asm
	xor.b32  	%r1337, %r1286, %r1317;
	xor.b32  	%r1338, %r1337, %r1250;
	xor.b32  	%r1339, %r1338, %r1237;
	shf.l.wrap.b32 	%r1340, %r1339, %r1339, 1;
	add.s32 	%r1341, %r344, %r1340;
	add.s32 	%r1342, %r1341, %r343;
	add.s32 	%r1343, %r1342, %r1336;
	add.s32 	%r353, %r1343, 1859775393;
	shf.l.wrap.b32 	%r355, %r345, %r345, 30;
	shf.l.wrap.b32 	%r1344, %r353, %r353, 5;
	// begin inline asm
	lop3.b32 %r348, %r349, %r355, %r351, 150;
	// end inline asm
	xor.b32  	%r1345, %r1292, %r1324;
	xor.b32  	%r1346, %r1345, %r1256;
	xor.b32  	%r1347, %r1346, %r1243;
	shf.l.wrap.b32 	%r1348, %r1347, %r1347, 1;
	add.s32 	%r1349, %r348, %r1348;
	add.s32 	%r1350, %r1349, %r347;
	add.s32 	%r1351, %r1350, %r1344;
	add.s32 	%r357, %r1351, 1859775393;
	shf.l.wrap.b32 	%r359, %r349, %r349, 30;
	shf.l.wrap.b32 	%r1352, %r357, %r357, 5;
	// begin inline asm
	lop3.b32 %r352, %r353, %r359, %r355, 150;
	// end inline asm
	xor.b32  	%r1353, %r1298, %r1332;
	xor.b32  	%r1354, %r1353, %r1263;
	xor.b32  	%r1355, %r1354, %r1250;
	shf.l.wrap.b32 	%r1356, %r1355, %r1355, 1;
	add.s32 	%r1357, %r352, %r1356;
	add.s32 	%r1358, %r1357, %r351;
	add.s32 	%r1359, %r1358, %r1352;
	add.s32 	%r361, %r1359, 1859775393;
	shf.l.wrap.b32 	%r363, %r353, %r353, 30;
	shf.l.wrap.b32 	%r1360, %r361, %r361, 5;
	// begin inline asm
	lop3.b32 %r356, %r357, %r363, %r359, 150;
	// end inline asm
	xor.b32  	%r1361, %r1304, %r1340;
	xor.b32  	%r1362, %r1361, %r1268;
	xor.b32  	%r1363, %r1362, %r1256;
	shf.l.wrap.b32 	%r1364, %r1363, %r1363, 1;
	add.s32 	%r1365, %r356, %r1364;
	add.s32 	%r1366, %r1365, %r355;
	add.s32 	%r1367, %r1366, %r1360;
	add.s32 	%r365, %r1367, 1859775393;
	shf.l.wrap.b32 	%r367, %r357, %r357, 30;
	shf.l.wrap.b32 	%r1368, %r365, %r365, 5;
	// begin inline asm
	lop3.b32 %r360, %r361, %r367, %r363, 150;
	// end inline asm
	xor.b32  	%r1369, %r1310, %r1348;
	xor.b32  	%r1370, %r1369, %r1274;
	xor.b32  	%r1371, %r1370, %r1263;
	shf.l.wrap.b32 	%r1372, %r1371, %r1371, 1;
	add.s32 	%r1373, %r360, %r1372;
	add.s32 	%r1374, %r1373, %r359;
	add.s32 	%r1375, %r1374, %r1368;
	add.s32 	%r369, %r1375, 1859775393;
	shf.l.wrap.b32 	%r371, %r361, %r361, 30;
	shf.l.wrap.b32 	%r1376, %r369, %r369, 5;
	// begin inline asm
	lop3.b32 %r364, %r365, %r371, %r367, 150;
	// end inline asm
	xor.b32  	%r1377, %r1317, %r1356;
	xor.b32  	%r1378, %r1377, %r1280;
	xor.b32  	%r1379, %r1378, %r1268;
	shf.l.wrap.b32 	%r1380, %r1379, %r1379, 1;
	add.s32 	%r1381, %r364, %r1380;
	add.s32 	%r1382, %r1381, %r363;
	add.s32 	%r1383, %r1382, %r1376;
	add.s32 	%r373, %r1383, 1859775393;
	shf.l.wrap.b32 	%r375, %r365, %r365, 30;
	shf.l.wrap.b32 	%r1384, %r373, %r373, 5;
	// begin inline asm
	lop3.b32 %r368, %r369, %r375, %r371, 150;
	// end inline asm
	xor.b32  	%r1385, %r1324, %r1364;
	xor.b32  	%r1386, %r1385, %r1286;
	xor.b32  	%r1387, %r1386, %r1274;
	shf.l.wrap.b32 	%r1388, %r1387, %r1387, 1;
	add.s32 	%r1389, %r368, %r1388;
	add.s32 	%r1390, %r1389, %r367;
	add.s32 	%r1391, %r1390, %r1384;
	add.s32 	%r377, %r1391, 1859775393;
	shf.l.wrap.b32 	%r379, %r369, %r369, 30;
	shf.l.wrap.b32 	%r1392, %r377, %r377, 5;
	// begin inline asm
	lop3.b32 %r372, %r373, %r379, %r375, 150;
	// end inline asm
	xor.b32  	%r1393, %r1332, %r1372;
	xor.b32  	%r1394, %r1393, %r1292;
	xor.b32  	%r1395, %r1394, %r1280;
	shf.l.wrap.b32 	%r1396, %r1395, %r1395, 1;
	add.s32 	%r1397, %r372, %r1396;
	add.s32 	%r1398, %r1397, %r371;
	add.s32 	%r1399, %r1398, %r1392;
	add.s32 	%r381, %r1399, 1859775393;
	shf.l.wrap.b32 	%r383, %r373, %r373, 30;
	shf.l.wrap.b32 	%r1400, %r381, %r381, 5;
	// begin inline asm
	lop3.b32 %r376, %r377, %r383, %r379, 232;
	// end inline asm
	xor.b32  	%r1401, %r1340, %r1380;
	xor.b32  	%r1402, %r1401, %r1298;
	xor.b32  	%r1403, %r1402, %r1286;
	shf.l.wrap.b32 	%r1404, %r1403, %r1403, 1;
	add.s32 	%r1405, %r376, %r1404;
	add.s32 	%r1406, %r1405, %r375;
	add.s32 	%r1407, %r1406, %r1400;
	add.s32 	%r385, %r1407, -1894007588;
	shf.l.wrap.b32 	%r387, %r377, %r377, 30;
	shf.l.wrap.b32 	%r1408, %r385, %r385, 5;
	// begin inline asm
	lop3.b32 %r380, %r381, %r387, %r383, 232;
	// end inline asm
	xor.b32  	%r1409, %r1348, %r1388;
	xor.b32  	%r1410, %r1409, %r1304;
	xor.b32  	%r1411, %r1410, %r1292;
	shf.l.wrap.b32 	%r1412, %r1411, %r1411, 1;
	add.s32 	%r1413, %r380, %r1412;
	add.s32 	%r1414, %r1413, %r379;
	add.s32 	%r1415, %r1414, %r1408;
	add.s32 	%r389, %r1415, -1894007588;
	shf.l.wrap.b32 	%r391, %r381, %r381, 30;
	shf.l.wrap.b32 	%r1416, %r389, %r389, 5;
	// begin inline asm
	lop3.b32 %r384, %r385, %r391, %r387, 232;
	// end inline asm
	xor.b32  	%r1417, %r1356, %r1396;
	xor.b32  	%r1418, %r1417, %r1310;
	xor.b32  	%r1419, %r1418, %r1298;
	shf.l.wrap.b32 	%r1420, %r1419, %r1419, 1;
	add.s32 	%r1421, %r384, %r1420;
	add.s32 	%r1422, %r1421, %r383;
	add.s32 	%r1423, %r1422, %r1416;
	add.s32 	%r393, %r1423, -1894007588;
	shf.l.wrap.b32 	%r395, %r385, %r385, 30;
	shf.l.wrap.b32 	%r1424, %r393, %r393, 5;
	// begin inline asm
	lop3.b32 %r388, %r389, %r395, %r391, 232;
	// end inline asm
	xor.b32  	%r1425, %r1364, %r1404;
	xor.b32  	%r1426, %r1425, %r1317;
	xor.b32  	%r1427, %r1426, %r1304;
	shf.l.wrap.b32 	%r1428, %r1427, %r1427, 1;
	add.s32 	%r1429, %r388, %r1428;
	add.s32 	%r1430, %r1429, %r387;
	add.s32 	%r1431, %r1430, %r1424;
	add.s32 	%r397, %r1431, -1894007588;
	shf.l.wrap.b32 	%r399, %r389, %r389, 30;
	shf.l.wrap.b32 	%r1432, %r397, %r397, 5;
	// begin inline asm
	lop3.b32 %r392, %r393, %r399, %r395, 232;
	// end inline asm
	xor.b32  	%r1433, %r1372, %r1412;
	xor.b32  	%r1434, %r1433, %r1324;
	xor.b32  	%r1435, %r1434, %r1310;
	shf.l.wrap.b32 	%r1436, %r1435, %r1435, 1;
	add.s32 	%r1437, %r392, %r1436;
	add.s32 	%r1438, %r1437, %r391;
	add.s32 	%r1439, %r1438, %r1432;
	add.s32 	%r401, %r1439, -1894007588;
	shf.l.wrap.b32 	%r403, %r393, %r393, 30;
	shf.l.wrap.b32 	%r1440, %r401, %r401, 5;
	// begin inline asm
	lop3.b32 %r396, %r397, %r403, %r399, 232;
	// end inline asm
	xor.b32  	%r1441, %r1380, %r1420;
	xor.b32  	%r1442, %r1441, %r1332;
	xor.b32  	%r1443, %r1442, %r1317;
	shf.l.wrap.b32 	%r1444, %r1443, %r1443, 1;
	add.s32 	%r1445, %r396, %r1444;
	add.s32 	%r1446, %r1445, %r395;
	add.s32 	%r1447, %r1446, %r1440;
	add.s32 	%r405, %r1447, -1894007588;
	shf.l.wrap.b32 	%r407, %r397, %r397, 30;
	shf.l.wrap.b32 	%r1448, %r405, %r405, 5;
	// begin inline asm
	lop3.b32 %r400, %r401, %r407, %r403, 232;
	// end inline asm
	xor.b32  	%r1449, %r1388, %r1428;
	xor.b32  	%r1450, %r1449, %r1340;
	xor.b32  	%r1451, %r1450, %r1324;
	shf.l.wrap.b32 	%r1452, %r1451, %r1451, 1;
	add.s32 	%r1453, %r400, %r1452;
	add.s32 	%r1454, %r1453, %r399;
	add.s32 	%r1455, %r1454, %r1448;
	add.s32 	%r409, %r1455, -1894007588;
	shf.l.wrap.b32 	%r411, %r401, %r401, 30;
	shf.l.wrap.b32 	%r1456, %r409, %r409, 5;
	// begin inline asm
	lop3.b32 %r404, %r405, %r411, %r407, 232;
	// end inline asm
	xor.b32  	%r1457, %r1396, %r1436;
	xor.b32  	%r1458, %r1457, %r1348;
	xor.b32  	%r1459, %r1458, %r1332;
	shf.l.wrap.b32 	%r1460, %r1459, %r1459, 1;
	add.s32 	%r1461, %r404, %r1460;
	add.s32 	%r1462, %r1461, %r403;
	add.s32 	%r1463, %r1462, %r1456;
	add.s32 	%r413, %r1463, -1894007588;
	shf.l.wrap.b32 	%r415, %r405, %r405, 30;
	shf.l.wrap.b32 	%r1464, %r413, %r413, 5;
	// begin inline asm
	lop3.b32 %r408, %r409, %r415, %r411, 232;
	// end inline asm
	xor.b32  	%r1465, %r1404, %r1444;
	xor.b32  	%r1466, %r1465, %r1356;
	xor.b32  	%r1467, %r1466, %r1340;
	shf.l.wrap.b32 	%r1468, %r1467, %r1467, 1;
	add.s32 	%r1469, %r408, %r1468;
	add.s32 	%r1470, %r1469, %r407;
	add.s32 	%r1471, %r1470, %r1464;
	add.s32 	%r417, %r1471, -1894007588;
	shf.l.wrap.b32 	%r419, %r409, %r409, 30;
	shf.l.wrap.b32 	%r1472, %r417, %r417, 5;
	// begin inline asm
	lop3.b32 %r412, %r413, %r419, %r415, 232;
	// end inline asm
	xor.b32  	%r1473, %r1412, %r1452;
	xor.b32  	%r1474, %r1473, %r1364;
	xor.b32  	%r1475, %r1474, %r1348;
	shf.l.wrap.b32 	%r1476, %r1475, %r1475, 1;
	add.s32 	%r1477, %r412, %r1476;
	add.s32 	%r1478, %r1477, %r411;
	add.s32 	%r1479, %r1478, %r1472;
	add.s32 	%r421, %r1479, -1894007588;
	shf.l.wrap.b32 	%r423, %r413, %r413, 30;
	shf.l.wrap.b32 	%r1480, %r421, %r421, 5;
	// begin inline asm
	lop3.b32 %r416, %r417, %r423, %r419, 232;
	// end inline asm
	xor.b32  	%r1481, %r1420, %r1460;
	xor.b32  	%r1482, %r1481, %r1372;
	xor.b32  	%r1483, %r1482, %r1356;
	shf.l.wrap.b32 	%r1484, %r1483, %r1483, 1;
	add.s32 	%r1485, %r416, %r1484;
	add.s32 	%r1486, %r1485, %r415;
	add.s32 	%r1487, %r1486, %r1480;
	add.s32 	%r425, %r1487, -1894007588;
	shf.l.wrap.b32 	%r427, %r417, %r417, 30;
	shf.l.wrap.b32 	%r1488, %r425, %r425, 5;
	// begin inline asm
	lop3.b32 %r420, %r421, %r427, %r423, 232;
	// end inline asm
	xor.b32  	%r1489, %r1428, %r1468;
	xor.b32  	%r1490, %r1489, %r1380;
	xor.b32  	%r1491, %r1490, %r1364;
	shf.l.wrap.b32 	%r1492, %r1491, %r1491, 1;
	add.s32 	%r1493, %r420, %r1492;
	add.s32 	%r1494, %r1493, %r419;
	add.s32 	%r1495, %r1494, %r1488;
	add.s32 	%r429, %r1495, -1894007588;
	shf.l.wrap.b32 	%r431, %r421, %r421, 30;
	shf.l.wrap.b32 	%r1496, %r429, %r429, 5;
	// begin inline asm
	lop3.b32 %r424, %r425, %r431, %r427, 232;
	// end inline asm
	xor.b32  	%r1497, %r1436, %r1476;
	xor.b32  	%r1498, %r1497, %r1388;
	xor.b32  	%r1499, %r1498, %r1372;
	shf.l.wrap.b32 	%r1500, %r1499, %r1499, 1;
	add.s32 	%r1501, %r424, %r1500;
	add.s32 	%r1502, %r1501, %r423;
	add.s32 	%r1503, %r1502, %r1496;
	add.s32 	%r433, %r1503, -1894007588;
	shf.l.wrap.b32 	%r435, %r425, %r425, 30;
	shf.l.wrap.b32 	%r1504, %r433, %r433, 5;
	// begin inline asm
	lop3.b32 %r428, %r429, %r435, %r431, 232;
	// end inline asm
	xor.b32  	%r1505, %r1444, %r1484;
	xor.b32  	%r1506, %r1505, %r1396;
	xor.b32  	%r1507, %r1506, %r1380;
	shf.l.wrap.b32 	%r1508, %r1507, %r1507, 1;
	add.s32 	%r1509, %r428, %r1508;
	add.s32 	%r1510, %r1509, %r427;
	add.s32 	%r1511, %r1510, %r1504;
	add.s32 	%r437, %r1511, -1894007588;
	shf.l.wrap.b32 	%r439, %r429, %r429, 30;
	shf.l.wrap.b32 	%r1512, %r437, %r437, 5;
	// begin inline asm
	lop3.b32 %r432, %r433, %r439, %r435, 232;
	// end inline asm
	xor.b32  	%r1513, %r1452, %r1492;
	xor.b32  	%r1514, %r1513, %r1404;
	xor.b32  	%r1515, %r1514, %r1388;
	shf.l.wrap.b32 	%r1516, %r1515, %r1515, 1;
	add.s32 	%r1517, %r432, %r1516;
	add.s32 	%r1518, %r1517, %r431;
	add.s32 	%r1519, %r1518, %r1512;
	add.s32 	%r441, %r1519, -1894007588;
	shf.l.wrap.b32 	%r443, %r433, %r433, 30;
	shf.l.wrap.b32 	%r1520, %r441, %r441, 5;
	// begin inline asm
	lop3.b32 %r436, %r437, %r443, %r439, 232;
	// end inline asm
	xor.b32  	%r1521, %r1460, %r1500;
	xor.b32  	%r1522, %r1521, %r1412;
	xor.b32  	%r1523, %r1522, %r1396;
	shf.l.wrap.b32 	%r1524, %r1523, %r1523, 1;
	add.s32 	%r1525, %r436, %r1524;
	add.s32 	%r1526, %r1525, %r435;
	add.s32 	%r1527, %r1526, %r1520;
	add.s32 	%r445, %r1527, -1894007588;
	shf.l.wrap.b32 	%r447, %r437, %r437, 30;
	shf.l.wrap.b32 	%r1528, %r445, %r445, 5;
	// begin inline asm
	lop3.b32 %r440, %r441, %r447, %r443, 232;
	// end inline asm
	xor.b32  	%r1529, %r1468, %r1508;
	xor.b32  	%r1530, %r1529, %r1420;
	xor.b32  	%r1531, %r1530, %r1404;
	shf.l.wrap.b32 	%r1532, %r1531, %r1531, 1;
	add.s32 	%r1533, %r440, %r1532;
	add.s32 	%r1534, %r1533, %r439;
	add.s32 	%r1535, %r1534, %r1528;
	add.s32 	%r449, %r1535, -1894007588;
	shf.l.wrap.b32 	%r451, %r441, %r441, 30;
	shf.l.wrap.b32 	%r1536, %r449, %r449, 5;
	// begin inline asm
	lop3.b32 %r444, %r445, %r451, %r447, 232;
	// end inline asm
	xor.b32  	%r1537, %r1476, %r1516;
	xor.b32  	%r1538, %r1537, %r1428;
	xor.b32  	%r1539, %r1538, %r1412;
	shf.l.wrap.b32 	%r1540, %r1539, %r1539, 1;
	add.s32 	%r1541, %r444, %r1540;
	add.s32 	%r1542, %r1541, %r443;
	add.s32 	%r1543, %r1542, %r1536;
	add.s32 	%r453, %r1543, -1894007588;
	shf.l.wrap.b32 	%r455, %r445, %r445, 30;
	shf.l.wrap.b32 	%r1544, %r453, %r453, 5;
	// begin inline asm
	lop3.b32 %r448, %r449, %r455, %r451, 232;
	// end inline asm
	xor.b32  	%r1545, %r1484, %r1524;
	xor.b32  	%r1546, %r1545, %r1436;
	xor.b32  	%r1547, %r1546, %r1420;
	shf.l.wrap.b32 	%r1548, %r1547, %r1547, 1;
	add.s32 	%r1549, %r448, %r1548;
	add.s32 	%r1550, %r1549, %r447;
	add.s32 	%r1551, %r1550, %r1544;
	add.s32 	%r457, %r1551, -1894007588;
	shf.l.wrap.b32 	%r459, %r449, %r449, 30;
	shf.l.wrap.b32 	%r1552, %r457, %r457, 5;
	// begin inline asm
	lop3.b32 %r452, %r453, %r459, %r455, 232;
	// end inline asm
	xor.b32  	%r1553, %r1492, %r1532;
	xor.b32  	%r1554, %r1553, %r1444;
	xor.b32  	%r1555, %r1554, %r1428;
	shf.l.wrap.b32 	%r1556, %r1555, %r1555, 1;
	add.s32 	%r1557, %r452, %r1556;
	add.s32 	%r1558, %r1557, %r451;
	add.s32 	%r1559, %r1558, %r1552;
	add.s32 	%r461, %r1559, -1894007588;
	shf.l.wrap.b32 	%r463, %r453, %r453, 30;
	shf.l.wrap.b32 	%r1560, %r461, %r461, 5;
	// begin inline asm
	lop3.b32 %r456, %r457, %r463, %r459, 150;
	// end inline asm
	xor.b32  	%r1561, %r1500, %r1540;
	xor.b32  	%r1562, %r1561, %r1452;
	xor.b32  	%r1563, %r1562, %r1436;
	shf.l.wrap.b32 	%r1564, %r1563, %r1563, 1;
	add.s32 	%r1565, %r456, %r1564;
	add.s32 	%r1566, %r1565, %r455;
	add.s32 	%r1567, %r1566, %r1560;
	add.s32 	%r465, %r1567, -899497514;
	shf.l.wrap.b32 	%r467, %r457, %r457, 30;
	shf.l.wrap.b32 	%r1568, %r465, %r465, 5;
	// begin inline asm
	lop3.b32 %r460, %r461, %r467, %r463, 150;
	// end inline asm
	xor.b32  	%r1569, %r1508, %r1548;
	xor.b32  	%r1570, %r1569, %r1460;
	xor.b32  	%r1571, %r1570, %r1444;
	shf.l.wrap.b32 	%r1572, %r1571, %r1571, 1;
	add.s32 	%r1573, %r460, %r1572;
	add.s32 	%r1574, %r1573, %r459;
	add.s32 	%r1575, %r1574, %r1568;
	add.s32 	%r469, %r1575, -899497514;
	shf.l.wrap.b32 	%r471, %r461, %r461, 30;
	shf.l.wrap.b32 	%r1576, %r469, %r469, 5;
	// begin inline asm
	lop3.b32 %r464, %r465, %r471, %r467, 150;
	// end inline asm
	xor.b32  	%r1577, %r1516, %r1556;
	xor.b32  	%r1578, %r1577, %r1468;
	xor.b32  	%r1579, %r1578, %r1452;
	shf.l.wrap.b32 	%r1580, %r1579, %r1579, 1;
	add.s32 	%r1581, %r464, %r1580;
	add.s32 	%r1582, %r1581, %r463;
	add.s32 	%r1583, %r1582, %r1576;
	add.s32 	%r473, %r1583, -899497514;
	shf.l.wrap.b32 	%r475, %r465, %r465, 30;
	shf.l.wrap.b32 	%r1584, %r473, %r473, 5;
	// begin inline asm
	lop3.b32 %r468, %r469, %r475, %r471, 150;
	// end inline asm
	xor.b32  	%r1585, %r1524, %r1564;
	xor.b32  	%r1586, %r1585, %r1476;
	xor.b32  	%r1587, %r1586, %r1460;
	shf.l.wrap.b32 	%r1588, %r1587, %r1587, 1;
	add.s32 	%r1589, %r468, %r467;
	add.s32 	%r1590, %r1589, %r1588;
	add.s32 	%r1591, %r1590, %r1584;
	add.s32 	%r477, %r1591, -899497514;
	shf.l.wrap.b32 	%r479, %r469, %r469, 30;
	shf.l.wrap.b32 	%r1592, %r477, %r477, 5;
	// begin inline asm
	lop3.b32 %r472, %r473, %r479, %r475, 150;
	// end inline asm
	xor.b32  	%r1593, %r1532, %r1572;
	xor.b32  	%r1594, %r1593, %r1484;
	xor.b32  	%r1595, %r1594, %r1468;
	shf.l.wrap.b32 	%r1596, %r1595, %r1595, 1;
	add.s32 	%r1597, %r472, %r471;
	add.s32 	%r1598, %r1597, %r1596;
	add.s32 	%r1599, %r1598, %r1592;
	add.s32 	%r481, %r1599, -899497514;
	shf.l.wrap.b32 	%r483, %r473, %r473, 30;
	shf.l.wrap.b32 	%r1600, %r481, %r481, 5;
	// begin inline asm
	lop3.b32 %r476, %r477, %r483, %r479, 150;
	// end inline asm
	xor.b32  	%r1601, %r1540, %r1580;
	xor.b32  	%r1602, %r1601, %r1492;
	xor.b32  	%r1603, %r1602, %r1476;
	shf.l.wrap.b32 	%r1604, %r1603, %r1603, 1;
	add.s32 	%r1605, %r476, %r475;
	add.s32 	%r1606, %r1605, %r1604;
	add.s32 	%r1607, %r1606, %r1600;
	add.s32 	%r485, %r1607, -899497514;
	shf.l.wrap.b32 	%r487, %r477, %r477, 30;
	shf.l.wrap.b32 	%r1608, %r485, %r485, 5;
	// begin inline asm
	lop3.b32 %r480, %r481, %r487, %r483, 150;
	// end inline asm
	xor.b32  	%r1609, %r1548, %r1588;
	xor.b32  	%r1610, %r1609, %r1500;
	xor.b32  	%r1611, %r1610, %r1484;
	shf.l.wrap.b32 	%r1612, %r1611, %r1611, 1;
	add.s32 	%r1613, %r480, %r479;
	add.s32 	%r1614, %r1613, %r1612;
	add.s32 	%r1615, %r1614, %r1608;
	add.s32 	%r489, %r1615, -899497514;
	shf.l.wrap.b32 	%r491, %r481, %r481, 30;
	shf.l.wrap.b32 	%r1616, %r489, %r489, 5;
	// begin inline asm
	lop3.b32 %r484, %r485, %r491, %r487, 150;
	// end inline asm
	xor.b32  	%r1617, %r1556, %r1596;
	xor.b32  	%r1618, %r1617, %r1508;
	xor.b32  	%r1619, %r1618, %r1492;
	shf.l.wrap.b32 	%r1620, %r1619, %r1619, 1;
	add.s32 	%r1621, %r484, %r483;
	add.s32 	%r1622, %r1621, %r1620;
	add.s32 	%r1623, %r1622, %r1616;
	add.s32 	%r493, %r1623, -899497514;
	shf.l.wrap.b32 	%r495, %r485, %r485, 30;
	shf.l.wrap.b32 	%r1624, %r493, %r493, 5;
	// begin inline asm
	lop3.b32 %r488, %r489, %r495, %r491, 150;
	// end inline asm
	xor.b32  	%r1625, %r1564, %r1604;
	xor.b32  	%r1626, %r1625, %r1516;
	xor.b32  	%r1627, %r1626, %r1500;
	shf.l.wrap.b32 	%r1628, %r1627, %r1627, 1;
	add.s32 	%r1629, %r488, %r487;
	add.s32 	%r1630, %r1629, %r1628;
	add.s32 	%r1631, %r1630, %r1624;
	add.s32 	%r497, %r1631, -899497514;
	shf.l.wrap.b32 	%r499, %r489, %r489, 30;
	shf.l.wrap.b32 	%r1632, %r497, %r497, 5;
	// begin inline asm
	lop3.b32 %r492, %r493, %r499, %r495, 150;
	// end inline asm
	xor.b32  	%r1633, %r1572, %r1612;
	xor.b32  	%r1634, %r1633, %r1524;
	xor.b32  	%r1635, %r1634, %r1508;
	shf.l.wrap.b32 	%r1636, %r1635, %r1635, 1;
	add.s32 	%r1637, %r491, %r492;
	add.s32 	%r1638, %r1637, %r1636;
	add.s32 	%r1639, %r1638, %r1632;
	add.s32 	%r501, %r1639, -899497514;
	shf.l.wrap.b32 	%r503, %r493, %r493, 30;
	shf.l.wrap.b32 	%r1640, %r501, %r501, 5;
	// begin inline asm
	lop3.b32 %r496, %r497, %r503, %r499, 150;
	// end inline asm
	xor.b32  	%r1641, %r1580, %r1620;
	xor.b32  	%r1642, %r1641, %r1532;
	xor.b32  	%r1643, %r1642, %r1516;
	shf.l.wrap.b32 	%r1644, %r1643, %r1643, 1;
	add.s32 	%r1645, %r495, %r496;
	add.s32 	%r1646, %r1645, %r1644;
	add.s32 	%r1647, %r1646, %r1640;
	add.s32 	%r505, %r1647, -899497514;
	shf.l.wrap.b32 	%r507, %r497, %r497, 30;
	shf.l.wrap.b32 	%r1648, %r505, %r505, 5;
	// begin inline asm
	lop3.b32 %r500, %r501, %r507, %r503, 150;
	// end inline asm
	xor.b32  	%r1649, %r1588, %r1628;
	xor.b32  	%r1650, %r1649, %r1540;
	xor.b32  	%r1651, %r1650, %r1524;
	shf.l.wrap.b32 	%r1652, %r1651, %r1651, 1;
	add.s32 	%r1653, %r499, %r500;
	add.s32 	%r1654, %r1653, %r1652;
	add.s32 	%r1655, %r1654, %r1648;
	add.s32 	%r509, %r1655, -899497514;
	shf.l.wrap.b32 	%r511, %r501, %r501, 30;
	shf.l.wrap.b32 	%r1656, %r509, %r509, 5;
	// begin inline asm
	lop3.b32 %r504, %r505, %r511, %r507, 150;
	// end inline asm
	xor.b32  	%r1657, %r1596, %r1636;
	xor.b32  	%r1658, %r1657, %r1548;
	xor.b32  	%r1659, %r1658, %r1532;
	shf.l.wrap.b32 	%r1660, %r1659, %r1659, 1;
	add.s32 	%r1661, %r503, %r504;
	add.s32 	%r1662, %r1661, %r1660;
	add.s32 	%r1663, %r1662, %r1656;
	add.s32 	%r513, %r1663, -899497514;
	shf.l.wrap.b32 	%r515, %r505, %r505, 30;
	shf.l.wrap.b32 	%r1664, %r513, %r513, 5;
	// begin inline asm
	lop3.b32 %r508, %r509, %r515, %r511, 150;
	// end inline asm
	xor.b32  	%r1665, %r1604, %r1644;
	xor.b32  	%r1666, %r1665, %r1556;
	xor.b32  	%r1667, %r1666, %r1540;
	shf.l.wrap.b32 	%r1668, %r1667, %r1667, 1;
	add.s32 	%r1669, %r507, %r508;
	add.s32 	%r1670, %r1669, %r1668;
	add.s32 	%r1671, %r1670, %r1664;
	add.s32 	%r517, %r1671, -899497514;
	shf.l.wrap.b32 	%r519, %r509, %r509, 30;
	shf.l.wrap.b32 	%r1672, %r517, %r517, 5;
	// begin inline asm
	lop3.b32 %r512, %r513, %r519, %r515, 150;
	// end inline asm
	xor.b32  	%r1673, %r1612, %r1652;
	xor.b32  	%r1674, %r1673, %r1564;
	xor.b32  	%r1675, %r1674, %r1548;
	shf.l.wrap.b32 	%r1676, %r1675, %r1675, 1;
	add.s32 	%r1677, %r511, %r512;
	add.s32 	%r1678, %r1677, %r1676;
	add.s32 	%r1679, %r1678, %r1672;
	add.s32 	%r521, %r1679, -899497514;
	shf.l.wrap.b32 	%r523, %r513, %r513, 30;
	shf.l.wrap.b32 	%r1680, %r521, %r521, 5;
	// begin inline asm
	lop3.b32 %r516, %r517, %r523, %r519, 150;
	// end inline asm
	xor.b32  	%r1681, %r1620, %r1660;
	xor.b32  	%r1682, %r1681, %r1572;
	xor.b32  	%r1683, %r1682, %r1556;
	shf.l.wrap.b32 	%r1684, %r1683, %r1683, 1;
	add.s32 	%r1685, %r515, %r516;
	add.s32 	%r1686, %r1685, %r1684;
	add.s32 	%r1687, %r1686, %r1680;
	add.s32 	%r525, %r1687, -899497514;
	shf.l.wrap.b32 	%r527, %r517, %r517, 30;
	shf.l.wrap.b32 	%r1688, %r525, %r525, 5;
	// begin inline asm
	lop3.b32 %r520, %r521, %r527, %r523, 150;
	// end inline asm
	xor.b32  	%r1689, %r1628, %r1668;
	xor.b32  	%r1690, %r1689, %r1580;
	xor.b32  	%r1691, %r1690, %r1564;
	shf.l.wrap.b32 	%r1692, %r1691, %r1691, 1;
	add.s32 	%r1693, %r519, %r520;
	add.s32 	%r1694, %r1693, %r1692;
	add.s32 	%r1695, %r1694, %r1688;
	add.s32 	%r529, %r1695, -899497514;
	shf.l.wrap.b32 	%r531, %r521, %r521, 30;
	shf.l.wrap.b32 	%r1696, %r529, %r529, 5;
	// begin inline asm
	lop3.b32 %r524, %r525, %r531, %r527, 150;
	// end inline asm
	xor.b32  	%r1697, %r1636, %r1676;
	xor.b32  	%r1698, %r1697, %r1588;
	xor.b32  	%r1699, %r1698, %r1572;
	shf.l.wrap.b32 	%r1700, %r1699, %r1699, 1;
	add.s32 	%r1701, %r523, %r524;
	add.s32 	%r1702, %r1701, %r1700;
	add.s32 	%r1703, %r1702, %r1696;
	add.s32 	%r533, %r1703, -899497514;
	shf.l.wrap.b32 	%r535, %r525, %r525, 30;
	shf.l.wrap.b32 	%r1704, %r533, %r533, 5;
	// begin inline asm
	lop3.b32 %r528, %r529, %r535, %r531, 150;
	// end inline asm
	xor.b32  	%r1705, %r1644, %r1684;
	xor.b32  	%r1706, %r1705, %r1596;
	xor.b32  	%r1707, %r1706, %r1580;
	shf.l.wrap.b32 	%r1708, %r1707, %r1707, 1;
	add.s32 	%r1709, %r527, %r528;
	add.s32 	%r1710, %r1709, %r1708;
	add.s32 	%r1711, %r1710, %r1704;
	add.s32 	%r1712, %r1711, -899497514;
	shf.l.wrap.b32 	%r534, %r529, %r529, 30;
	shf.l.wrap.b32 	%r1713, %r1712, %r1712, 5;
	// begin inline asm
	lop3.b32 %r532, %r533, %r534, %r535, 150;
	// end inline asm
	xor.b32  	%r1714, %r1652, %r1692;
	xor.b32  	%r1715, %r1714, %r1604;
	xor.b32  	%r1716, %r1715, %r1588;
	shf.l.wrap.b32 	%r1717, %r1716, %r1716, 1;
	shf.l.wrap.b32 	%r1718, %r533, %r533, 30;
	add.s32 	%r1719, %r531, %r532;
	add.s32 	%r1720, %r1719, %r1717;
	add.s32 	%r1721, %r1720, %r1713;
	add.s32 	%r4, %r1721, 833086679;
	add.s32 	%r5, %r1711, -1171231393;
	add.s32 	%r6, %r1718, -1732584194;
	add.s32 	%r7, %r534, 271733878;
	add.s32 	%r8, %r535, -1009589776;
	xor.b32  	%r1722, %r4, 909522486;
	xor.b32  	%r1723, %r5, 909522486;
	xor.b32  	%r1724, %r6, 909522486;
	xor.b32  	%r1725, %r7, 909522486;
	xor.b32  	%r1726, %r8, 909522486;
	add.s32 	%r9, %r1183, 508910473;
	add.s32 	%r537, %r9, %r1722;
	shf.l.wrap.b32 	%r1727, %r537, %r537, 5;
	add.s32 	%r1728, %r2, %r1723;
	add.s32 	%r541, %r1728, %r1727;
	shf.l.wrap.b32 	%r1729, %r541, %r541, 5;
	// begin inline asm
	lop3.b32 %r536, %r537, %r543, %r539, 202;
	// end inline asm
	add.s32 	%r1730, %r536, %r1724;
	add.s32 	%r1731, %r1730, %r1729;
	add.s32 	%r545, %r1731, -214083945;
	shf.l.wrap.b32 	%r547, %r537, %r537, 30;
	shf.l.wrap.b32 	%r1732, %r545, %r545, 5;
	// begin inline asm
	lop3.b32 %r540, %r541, %r547, %r543, 202;
	// end inline asm
	add.s32 	%r1733, %r1192, %r540;
	add.s32 	%r1734, %r1733, %r1725;
	add.s32 	%r549, %r1734, %r1732;
	shf.l.wrap.b32 	%r551, %r541, %r541, 30;
	shf.l.wrap.b32 	%r1735, %r549, %r549, 5;
	// begin inline asm
	lop3.b32 %r544, %r545, %r551, %r547, 202;
	// end inline asm
	add.s32 	%r1736, %r1196, %r544;
	add.s32 	%r1737, %r1736, %r1726;
	add.s32 	%r553, %r1737, %r1735;
	shf.l.wrap.b32 	%r555, %r545, %r545, 30;
	shf.l.wrap.b32 	%r1738, %r553, %r553, 5;
	// begin inline asm
	lop3.b32 %r548, %r549, %r555, %r551, 202;
	// end inline asm
	add.s32 	%r1739, %r547, %r548;
	add.s32 	%r1740, %r1739, %r1738;
	add.s32 	%r557, %r1740, -1866944561;
	shf.l.wrap.b32 	%r559, %r549, %r549, 30;
	shf.l.wrap.b32 	%r1741, %r557, %r557, 5;
	// begin inline asm
	lop3.b32 %r552, %r553, %r559, %r555, 202;
	// end inline asm
	add.s32 	%r1742, %r551, %r552;
	add.s32 	%r1743, %r1742, %r1741;
	add.s32 	%r561, %r1743, -1866944561;
	shf.l.wrap.b32 	%r563, %r553, %r553, 30;
	shf.l.wrap.b32 	%r1744, %r561, %r561, 5;
	// begin inline asm
	lop3.b32 %r556, %r557, %r563, %r559, 202;
	// end inline asm
	add.s32 	%r1745, %r556, %r555;
	add.s32 	%r1746, %r1745, %r1744;
	add.s32 	%r565, %r1746, -1866944561;
	shf.l.wrap.b32 	%r567, %r557, %r557, 30;
	shf.l.wrap.b32 	%r1747, %r565, %r565, 5;
	// begin inline asm
	lop3.b32 %r560, %r561, %r567, %r563, 202;
	// end inline asm
	add.s32 	%r1748, %r560, %r559;
	add.s32 	%r1749, %r1748, %r1747;
	add.s32 	%r569, %r1749, -1866944561;
	shf.l.wrap.b32 	%r571, %r561, %r561, 30;
	shf.l.wrap.b32 	%r1750, %r569, %r569, 5;
	// begin inline asm
	lop3.b32 %r564, %r565, %r571, %r567, 202;
	// end inline asm
	add.s32 	%r1751, %r564, %r563;
	add.s32 	%r1752, %r1751, %r1750;
	add.s32 	%r573, %r1752, -1866944561;
	shf.l.wrap.b32 	%r575, %r565, %r565, 30;
	shf.l.wrap.b32 	%r1753, %r573, %r573, 5;
	// begin inline asm
	lop3.b32 %r568, %r569, %r575, %r571, 202;
	// end inline asm
	add.s32 	%r1754, %r568, %r567;
	add.s32 	%r1755, %r1754, %r1753;
	add.s32 	%r577, %r1755, -1866944561;
	shf.l.wrap.b32 	%r579, %r569, %r569, 30;
	shf.l.wrap.b32 	%r1756, %r577, %r577, 5;
	// begin inline asm
	lop3.b32 %r572, %r573, %r579, %r575, 202;
	// end inline asm
	add.s32 	%r1757, %r572, %r571;
	add.s32 	%r1758, %r1757, %r1756;
	add.s32 	%r581, %r1758, -1866944561;
	shf.l.wrap.b32 	%r583, %r573, %r573, 30;
	shf.l.wrap.b32 	%r1759, %r581, %r581, 5;
	// begin inline asm
	lop3.b32 %r576, %r577, %r583, %r579, 202;
	// end inline asm
	add.s32 	%r1760, %r576, %r575;
	add.s32 	%r1761, %r1760, %r1759;
	add.s32 	%r585, %r1761, -1866944561;
	shf.l.wrap.b32 	%r587, %r577, %r577, 30;
	shf.l.wrap.b32 	%r1762, %r585, %r585, 5;
	// begin inline asm
	lop3.b32 %r580, %r581, %r587, %r583, 202;
	// end inline asm
	add.s32 	%r1763, %r580, %r579;
	add.s32 	%r1764, %r1763, %r1762;
	add.s32 	%r589, %r1764, -1866944561;
	shf.l.wrap.b32 	%r591, %r581, %r581, 30;
	shf.l.wrap.b32 	%r1765, %r589, %r589, 5;
	// begin inline asm
	lop3.b32 %r584, %r585, %r591, %r587, 202;
	// end inline asm
	add.s32 	%r1766, %r584, %r583;
	add.s32 	%r1767, %r1766, %r1765;
	add.s32 	%r593, %r1767, -1866944561;
	shf.l.wrap.b32 	%r595, %r585, %r585, 30;
	shf.l.wrap.b32 	%r1768, %r593, %r593, 5;
	// begin inline asm
	lop3.b32 %r588, %r589, %r595, %r591, 202;
	// end inline asm
	add.s32 	%r1769, %r588, %r587;
	add.s32 	%r1770, %r1769, %r1768;
	add.s32 	%r597, %r1770, -1866944561;
	shf.l.wrap.b32 	%r599, %r589, %r589, 30;
	shf.l.wrap.b32 	%r1771, %r597, %r597, 5;
	// begin inline asm
	lop3.b32 %r592, %r593, %r599, %r595, 202;
	// end inline asm
	xor.b32  	%r1772, %r6, %r4;
	shf.l.wrap.b32 	%r10, %r1772, %r1772, 1;
	add.s32 	%r1773, %r592, %r10;
	add.s32 	%r1774, %r1773, %r591;
	add.s32 	%r1775, %r1774, %r1771;
	add.s32 	%r601, %r1775, 1518500249;
	shf.l.wrap.b32 	%r603, %r593, %r593, 30;
	shf.l.wrap.b32 	%r1776, %r601, %r601, 5;
	// begin inline asm
	lop3.b32 %r596, %r597, %r603, %r599, 202;
	// end inline asm
	xor.b32  	%r1777, %r7, %r5;
	shf.l.wrap.b32 	%r11, %r1777, %r1777, 1;
	add.s32 	%r1778, %r596, %r11;
	add.s32 	%r1779, %r1778, %r595;
	add.s32 	%r1780, %r1779, %r1776;
	add.s32 	%r605, %r1780, 1518500249;
	shf.l.wrap.b32 	%r607, %r597, %r597, 30;
	shf.l.wrap.b32 	%r1781, %r605, %r605, 5;
	// begin inline asm
	lop3.b32 %r600, %r601, %r607, %r603, 202;
	// end inline asm
	xor.b32  	%r1782, %r8, %r6;
	shf.l.wrap.b32 	%r12, %r1782, %r1782, 1;
	add.s32 	%r1783, %r600, %r12;
	add.s32 	%r1784, %r1783, %r599;
	add.s32 	%r1785, %r1784, %r1781;
	add.s32 	%r609, %r1785, 1518500249;
	shf.l.wrap.b32 	%r611, %r601, %r601, 30;
	shf.l.wrap.b32 	%r1786, %r609, %r609, 5;
	// begin inline asm
	lop3.b32 %r604, %r605, %r611, %r607, 202;
	// end inline asm
	xor.b32  	%r1787, %r10, %r1725;
	shf.l.wrap.b32 	%r1788, %r1787, %r1787, 1;
	add.s32 	%r1789, %r604, %r1788;
	add.s32 	%r1790, %r1789, %r603;
	add.s32 	%r1791, %r1790, %r1786;
	add.s32 	%r613, %r1791, 1518500249;
	shf.l.wrap.b32 	%r615, %r605, %r605, 30;
	shf.l.wrap.b32 	%r1792, %r613, %r613, 5;
	// begin inline asm
	lop3.b32 %r608, %r609, %r615, %r611, 150;
	// end inline asm
	xor.b32  	%r1793, %r11, %r1726;
	shf.l.wrap.b32 	%r1794, %r1793, %r1793, 1;
	add.s32 	%r1795, %r608, %r1794;
	add.s32 	%r1796, %r1795, %r607;
	add.s32 	%r1797, %r1796, %r1792;
	add.s32 	%r617, %r1797, 1859775393;
	shf.l.wrap.b32 	%r619, %r609, %r609, 30;
	shf.l.wrap.b32 	%r1798, %r617, %r617, 5;
	// begin inline asm
	lop3.b32 %r612, %r613, %r619, %r615, 150;
	// end inline asm
	xor.b32  	%r1799, %r12, 909522486;
	shf.l.wrap.b32 	%r1800, %r1799, %r1799, 1;
	add.s32 	%r1801, %r612, %r1800;
	add.s32 	%r1802, %r1801, %r611;
	add.s32 	%r1803, %r1802, %r1798;
	add.s32 	%r621, %r1803, 1859775393;
	shf.l.wrap.b32 	%r623, %r613, %r613, 30;
	shf.l.wrap.b32 	%r1804, %r621, %r621, 5;
	// begin inline asm
	lop3.b32 %r616, %r617, %r623, %r619, 150;
	// end inline asm
	xor.b32  	%r1805, %r1788, 909522486;
	shf.l.wrap.b32 	%r1806, %r1805, %r1805, 1;
	add.s32 	%r1807, %r616, %r1806;
	add.s32 	%r1808, %r1807, %r615;
	add.s32 	%r1809, %r1808, %r1804;
	add.s32 	%r625, %r1809, 1859775393;
	shf.l.wrap.b32 	%r627, %r617, %r617, 30;
	shf.l.wrap.b32 	%r1810, %r625, %r625, 5;
	// begin inline asm
	lop3.b32 %r620, %r621, %r627, %r623, 150;
	// end inline asm
	xor.b32  	%r1811, %r1794, 909522486;
	shf.l.wrap.b32 	%r1812, %r1811, %r1811, 1;
	add.s32 	%r1813, %r620, %r1812;
	add.s32 	%r1814, %r1813, %r619;
	add.s32 	%r1815, %r1814, %r1810;
	add.s32 	%r629, %r1815, 1859775393;
	shf.l.wrap.b32 	%r631, %r621, %r621, 30;
	shf.l.wrap.b32 	%r1816, %r629, %r629, 5;
	// begin inline asm
	lop3.b32 %r624, %r625, %r631, %r627, 150;
	// end inline asm
	xor.b32  	%r1817, %r1800, %r10;
	shf.l.wrap.b32 	%r1818, %r1817, %r1817, 1;
	add.s32 	%r1819, %r624, %r1818;
	add.s32 	%r1820, %r1819, %r623;
	add.s32 	%r1821, %r1820, %r1816;
	add.s32 	%r633, %r1821, 1859775393;
	shf.l.wrap.b32 	%r635, %r625, %r625, 30;
	shf.l.wrap.b32 	%r1822, %r633, %r633, 5;
	// begin inline asm
	lop3.b32 %r628, %r629, %r635, %r631, 150;
	// end inline asm
	xor.b32  	%r1823, %r1806, %r11;
	shf.l.wrap.b32 	%r1824, %r1823, %r1823, 1;
	add.s32 	%r1825, %r628, %r1824;
	add.s32 	%r1826, %r1825, %r627;
	add.s32 	%r1827, %r1826, %r1822;
	add.s32 	%r637, %r1827, 1859775393;
	shf.l.wrap.b32 	%r639, %r629, %r629, 30;
	shf.l.wrap.b32 	%r1828, %r637, %r637, 5;
	// begin inline asm
	lop3.b32 %r632, %r633, %r639, %r635, 150;
	// end inline asm
	xor.b32  	%r1829, %r1812, %r12;
	shf.l.wrap.b32 	%r1830, %r1829, %r1829, 1;
	add.s32 	%r1831, %r632, %r1830;
	add.s32 	%r1832, %r1831, %r631;
	add.s32 	%r1833, %r1832, %r1828;
	add.s32 	%r641, %r1833, 1859775393;
	shf.l.wrap.b32 	%r643, %r633, %r633, 30;
	shf.l.wrap.b32 	%r1834, %r641, %r641, 5;
	// begin inline asm
	lop3.b32 %r636, %r637, %r643, %r639, 150;
	// end inline asm
	xor.b32  	%r1835, %r1818, %r1788;
	shf.l.wrap.b32 	%r1836, %r1835, %r1835, 1;
	add.s32 	%r1837, %r636, %r1836;
	add.s32 	%r1838, %r1837, %r635;
	add.s32 	%r1839, %r1838, %r1834;
	add.s32 	%r645, %r1839, 1859775393;
	shf.l.wrap.b32 	%r647, %r637, %r637, 30;
	shf.l.wrap.b32 	%r1840, %r645, %r645, 5;
	// begin inline asm
	lop3.b32 %r640, %r641, %r647, %r643, 150;
	// end inline asm
	xor.b32  	%r1841, %r1824, %r1794;
	shf.l.wrap.b32 	%r1842, %r1841, %r1841, 1;
	add.s32 	%r1843, %r640, %r1842;
	add.s32 	%r1844, %r1843, %r639;
	add.s32 	%r1845, %r1844, %r1840;
	add.s32 	%r649, %r1845, 1859775393;
	shf.l.wrap.b32 	%r651, %r641, %r641, 30;
	shf.l.wrap.b32 	%r1846, %r649, %r649, 5;
	// begin inline asm
	lop3.b32 %r644, %r645, %r651, %r647, 150;
	// end inline asm
	xor.b32  	%r1847, %r1830, %r1800;
	shf.l.wrap.b32 	%r1848, %r1847, %r1847, 1;
	add.s32 	%r1849, %r644, %r1848;
	add.s32 	%r1850, %r1849, %r643;
	add.s32 	%r1851, %r1850, %r1846;
	add.s32 	%r653, %r1851, 1859775393;
	shf.l.wrap.b32 	%r655, %r645, %r645, 30;
	shf.l.wrap.b32 	%r1852, %r653, %r653, 5;
	// begin inline asm
	lop3.b32 %r648, %r649, %r655, %r651, 150;
	// end inline asm
	xor.b32  	%r1853, %r1806, %r10;
	xor.b32  	%r1854, %r1853, %r1836;
	xor.b32  	%r1855, %r1854, 909522486;
	shf.l.wrap.b32 	%r1856, %r1855, %r1855, 1;
	add.s32 	%r1857, %r648, %r1856;
	add.s32 	%r1858, %r1857, %r647;
	add.s32 	%r1859, %r1858, %r1852;
	add.s32 	%r657, %r1859, 1859775393;
	shf.l.wrap.b32 	%r659, %r649, %r649, 30;
	shf.l.wrap.b32 	%r1860, %r657, %r657, 5;
	// begin inline asm
	lop3.b32 %r652, %r653, %r659, %r655, 150;
	// end inline asm
	xor.b32  	%r1861, %r1812, %r11;
	xor.b32  	%r1862, %r1861, %r1842;
	xor.b32  	%r1863, %r1862, 909522486;
	shf.l.wrap.b32 	%r1864, %r1863, %r1863, 1;
	add.s32 	%r1865, %r652, %r1864;
	add.s32 	%r1866, %r1865, %r651;
	add.s32 	%r1867, %r1866, %r1860;
	add.s32 	%r661, %r1867, 1859775393;
	shf.l.wrap.b32 	%r663, %r653, %r653, 30;
	shf.l.wrap.b32 	%r1868, %r661, %r661, 5;
	// begin inline asm
	lop3.b32 %r656, %r657, %r663, %r659, 150;
	// end inline asm
	xor.b32  	%r13, %r12, %r10;
	xor.b32  	%r1869, %r13, %r1818;
	xor.b32  	%r1870, %r1869, %r1848;
	shf.l.wrap.b32 	%r1871, %r1870, %r1870, 1;
	add.s32 	%r1872, %r656, %r1871;
	add.s32 	%r1873, %r1872, %r655;
	add.s32 	%r1874, %r1873, %r1868;
	add.s32 	%r665, %r1874, 1859775393;
	shf.l.wrap.b32 	%r667, %r657, %r657, 30;
	shf.l.wrap.b32 	%r1875, %r665, %r665, 5;
	// begin inline asm
	lop3.b32 %r660, %r661, %r667, %r663, 150;
	// end inline asm
	xor.b32  	%r1876, %r1788, %r11;
	xor.b32  	%r1877, %r1876, %r1824;
	xor.b32  	%r1878, %r1877, %r1856;
	shf.l.wrap.b32 	%r1879, %r1878, %r1878, 1;
	add.s32 	%r1880, %r660, %r1879;
	add.s32 	%r1881, %r1880, %r659;
	add.s32 	%r1882, %r1881, %r1875;
	add.s32 	%r669, %r1882, 1859775393;
	shf.l.wrap.b32 	%r671, %r661, %r661, 30;
	shf.l.wrap.b32 	%r1883, %r669, %r669, 5;
	// begin inline asm
	lop3.b32 %r664, %r665, %r671, %r667, 150;
	// end inline asm
	xor.b32  	%r1884, %r1794, %r12;
	xor.b32  	%r1885, %r1884, %r1830;
	xor.b32  	%r1886, %r1885, %r1864;
	shf.l.wrap.b32 	%r1887, %r1886, %r1886, 1;
	add.s32 	%r1888, %r664, %r1887;
	add.s32 	%r1889, %r1888, %r663;
	add.s32 	%r1890, %r1889, %r1883;
	add.s32 	%r673, %r1890, 1859775393;
	shf.l.wrap.b32 	%r675, %r665, %r665, 30;
	shf.l.wrap.b32 	%r1891, %r673, %r673, 5;
	// begin inline asm
	lop3.b32 %r668, %r669, %r675, %r671, 150;
	// end inline asm
	xor.b32  	%r1892, %r1800, %r1788;
	xor.b32  	%r1893, %r1892, %r1836;
	xor.b32  	%r1894, %r1893, %r1871;
	shf.l.wrap.b32 	%r1895, %r1894, %r1894, 1;
	add.s32 	%r1896, %r668, %r1895;
	add.s32 	%r1897, %r1896, %r667;
	add.s32 	%r1898, %r1897, %r1891;
	add.s32 	%r677, %r1898, 1859775393;
	shf.l.wrap.b32 	%r679, %r669, %r669, 30;
	shf.l.wrap.b32 	%r1899, %r677, %r677, 5;
	// begin inline asm
	lop3.b32 %r672, %r673, %r679, %r675, 150;
	// end inline asm
	xor.b32  	%r1900, %r1806, %r1794;
	xor.b32  	%r1901, %r1900, %r1842;
	xor.b32  	%r1902, %r1901, %r1879;
	shf.l.wrap.b32 	%r1903, %r1902, %r1902, 1;
	add.s32 	%r1904, %r672, %r1903;
	add.s32 	%r1905, %r1904, %r671;
	add.s32 	%r1906, %r1905, %r1899;
	add.s32 	%r681, %r1906, 1859775393;
	shf.l.wrap.b32 	%r683, %r673, %r673, 30;
	shf.l.wrap.b32 	%r1907, %r681, %r681, 5;
	// begin inline asm
	lop3.b32 %r676, %r677, %r683, %r679, 150;
	// end inline asm
	xor.b32  	%r1908, %r1812, %r1800;
	xor.b32  	%r1909, %r1908, %r1848;
	xor.b32  	%r1910, %r1909, %r1887;
	shf.l.wrap.b32 	%r1911, %r1910, %r1910, 1;
	add.s32 	%r1912, %r676, %r1911;
	add.s32 	%r1913, %r1912, %r675;
	add.s32 	%r1914, %r1913, %r1907;
	add.s32 	%r685, %r1914, 1859775393;
	shf.l.wrap.b32 	%r687, %r677, %r677, 30;
	shf.l.wrap.b32 	%r1915, %r685, %r685, 5;
	// begin inline asm
	lop3.b32 %r680, %r681, %r687, %r683, 150;
	// end inline asm
	xor.b32  	%r1916, %r1818, %r1806;
	xor.b32  	%r1917, %r1916, %r1856;
	xor.b32  	%r1918, %r1917, %r1895;
	shf.l.wrap.b32 	%r1919, %r1918, %r1918, 1;
	add.s32 	%r1920, %r680, %r1919;
	add.s32 	%r1921, %r1920, %r679;
	add.s32 	%r1922, %r1921, %r1915;
	add.s32 	%r689, %r1922, 1859775393;
	shf.l.wrap.b32 	%r691, %r681, %r681, 30;
	shf.l.wrap.b32 	%r1923, %r689, %r689, 5;
	// begin inline asm
	lop3.b32 %r684, %r685, %r691, %r687, 150;
	// end inline asm
	xor.b32  	%r1924, %r1824, %r1812;
	xor.b32  	%r1925, %r1924, %r1864;
	xor.b32  	%r1926, %r1925, %r1903;
	shf.l.wrap.b32 	%r1927, %r1926, %r1926, 1;
	add.s32 	%r1928, %r684, %r1927;
	add.s32 	%r1929, %r1928, %r683;
	add.s32 	%r1930, %r1929, %r1923;
	add.s32 	%r693, %r1930, 1859775393;
	shf.l.wrap.b32 	%r695, %r685, %r685, 30;
	shf.l.wrap.b32 	%r1931, %r693, %r693, 5;
	// begin inline asm
	lop3.b32 %r688, %r689, %r695, %r691, 232;
	// end inline asm
	xor.b32  	%r1932, %r1830, %r1818;
	xor.b32  	%r1933, %r1932, %r1871;
	xor.b32  	%r1934, %r1933, %r1911;
	shf.l.wrap.b32 	%r1935, %r1934, %r1934, 1;
	add.s32 	%r1936, %r688, %r1935;
	add.s32 	%r1937, %r1936, %r687;
	add.s32 	%r1938, %r1937, %r1931;
	add.s32 	%r697, %r1938, -1894007588;
	shf.l.wrap.b32 	%r699, %r689, %r689, 30;
	shf.l.wrap.b32 	%r1939, %r697, %r697, 5;
	// begin inline asm
	lop3.b32 %r692, %r693, %r699, %r695, 232;
	// end inline asm
	xor.b32  	%r1940, %r1836, %r1824;
	xor.b32  	%r1941, %r1940, %r1879;
	xor.b32  	%r1942, %r1941, %r1919;
	shf.l.wrap.b32 	%r1943, %r1942, %r1942, 1;
	add.s32 	%r1944, %r692, %r1943;
	add.s32 	%r1945, %r1944, %r691;
	add.s32 	%r1946, %r1945, %r1939;
	add.s32 	%r701, %r1946, -1894007588;
	shf.l.wrap.b32 	%r703, %r693, %r693, 30;
	shf.l.wrap.b32 	%r1947, %r701, %r701, 5;
	// begin inline asm
	lop3.b32 %r696, %r697, %r703, %r699, 232;
	// end inline asm
	xor.b32  	%r1948, %r1842, %r1830;
	xor.b32  	%r1949, %r1948, %r1887;
	xor.b32  	%r1950, %r1949, %r1927;
	shf.l.wrap.b32 	%r1951, %r1950, %r1950, 1;
	add.s32 	%r1952, %r696, %r1951;
	add.s32 	%r1953, %r1952, %r695;
	add.s32 	%r1954, %r1953, %r1947;
	add.s32 	%r705, %r1954, -1894007588;
	shf.l.wrap.b32 	%r707, %r697, %r697, 30;
	shf.l.wrap.b32 	%r1955, %r705, %r705, 5;
	// begin inline asm
	lop3.b32 %r700, %r701, %r707, %r703, 232;
	// end inline asm
	xor.b32  	%r1956, %r1848, %r1836;
	xor.b32  	%r1957, %r1956, %r1895;
	xor.b32  	%r1958, %r1957, %r1935;
	shf.l.wrap.b32 	%r1959, %r1958, %r1958, 1;
	add.s32 	%r1960, %r700, %r1959;
	add.s32 	%r1961, %r1960, %r699;
	add.s32 	%r1962, %r1961, %r1955;
	add.s32 	%r709, %r1962, -1894007588;
	shf.l.wrap.b32 	%r711, %r701, %r701, 30;
	shf.l.wrap.b32 	%r1963, %r709, %r709, 5;
	// begin inline asm
	lop3.b32 %r704, %r705, %r711, %r707, 232;
	// end inline asm
	xor.b32  	%r1964, %r1856, %r1842;
	xor.b32  	%r1965, %r1964, %r1903;
	xor.b32  	%r1966, %r1965, %r1943;
	shf.l.wrap.b32 	%r1967, %r1966, %r1966, 1;
	add.s32 	%r1968, %r704, %r1967;
	add.s32 	%r1969, %r1968, %r703;
	add.s32 	%r1970, %r1969, %r1963;
	add.s32 	%r713, %r1970, -1894007588;
	shf.l.wrap.b32 	%r715, %r705, %r705, 30;
	shf.l.wrap.b32 	%r1971, %r713, %r713, 5;
	// begin inline asm
	lop3.b32 %r708, %r709, %r715, %r711, 232;
	// end inline asm
	xor.b32  	%r1972, %r1864, %r1848;
	xor.b32  	%r1973, %r1972, %r1911;
	xor.b32  	%r1974, %r1973, %r1951;
	shf.l.wrap.b32 	%r1975, %r1974, %r1974, 1;
	add.s32 	%r1976, %r708, %r1975;
	add.s32 	%r1977, %r1976, %r707;
	add.s32 	%r1978, %r1977, %r1971;
	add.s32 	%r717, %r1978, -1894007588;
	shf.l.wrap.b32 	%r719, %r709, %r709, 30;
	shf.l.wrap.b32 	%r1979, %r717, %r717, 5;
	// begin inline asm
	lop3.b32 %r712, %r713, %r719, %r715, 232;
	// end inline asm
	xor.b32  	%r1980, %r1871, %r1856;
	xor.b32  	%r1981, %r1980, %r1919;
	xor.b32  	%r1982, %r1981, %r1959;
	shf.l.wrap.b32 	%r1983, %r1982, %r1982, 1;
	add.s32 	%r1984, %r712, %r1983;
	add.s32 	%r1985, %r1984, %r711;
	add.s32 	%r1986, %r1985, %r1979;
	add.s32 	%r721, %r1986, -1894007588;
	shf.l.wrap.b32 	%r723, %r713, %r713, 30;
	shf.l.wrap.b32 	%r1987, %r721, %r721, 5;
	// begin inline asm
	lop3.b32 %r716, %r717, %r723, %r719, 232;
	// end inline asm
	xor.b32  	%r1988, %r1879, %r1864;
	xor.b32  	%r1989, %r1988, %r1927;
	xor.b32  	%r1990, %r1989, %r1967;
	shf.l.wrap.b32 	%r1991, %r1990, %r1990, 1;
	add.s32 	%r1992, %r716, %r1991;
	add.s32 	%r1993, %r1992, %r715;
	add.s32 	%r1994, %r1993, %r1987;
	add.s32 	%r725, %r1994, -1894007588;
	shf.l.wrap.b32 	%r727, %r717, %r717, 30;
	shf.l.wrap.b32 	%r1995, %r725, %r725, 5;
	// begin inline asm
	lop3.b32 %r720, %r721, %r727, %r723, 232;
	// end inline asm
	xor.b32  	%r1996, %r1887, %r1871;
	xor.b32  	%r1997, %r1996, %r1935;
	xor.b32  	%r1998, %r1997, %r1975;
	shf.l.wrap.b32 	%r1999, %r1998, %r1998, 1;
	add.s32 	%r2000, %r720, %r1999;
	add.s32 	%r2001, %r2000, %r719;
	add.s32 	%r2002, %r2001, %r1995;
	add.s32 	%r729, %r2002, -1894007588;
	shf.l.wrap.b32 	%r731, %r721, %r721, 30;
	shf.l.wrap.b32 	%r2003, %r729, %r729, 5;
	// begin inline asm
	lop3.b32 %r724, %r725, %r731, %r727, 232;
	// end inline asm
	xor.b32  	%r2004, %r1895, %r1879;
	xor.b32  	%r2005, %r2004, %r1943;
	xor.b32  	%r2006, %r2005, %r1983;
	shf.l.wrap.b32 	%r2007, %r2006, %r2006, 1;
	add.s32 	%r2008, %r724, %r2007;
	add.s32 	%r2009, %r2008, %r723;
	add.s32 	%r2010, %r2009, %r2003;
	add.s32 	%r733, %r2010, -1894007588;
	shf.l.wrap.b32 	%r735, %r725, %r725, 30;
	shf.l.wrap.b32 	%r2011, %r733, %r733, 5;
	// begin inline asm
	lop3.b32 %r728, %r729, %r735, %r731, 232;
	// end inline asm
	xor.b32  	%r2012, %r1903, %r1887;
	xor.b32  	%r2013, %r2012, %r1951;
	xor.b32  	%r2014, %r2013, %r1991;
	shf.l.wrap.b32 	%r2015, %r2014, %r2014, 1;
	add.s32 	%r2016, %r728, %r2015;
	add.s32 	%r2017, %r2016, %r727;
	add.s32 	%r2018, %r2017, %r2011;
	add.s32 	%r737, %r2018, -1894007588;
	shf.l.wrap.b32 	%r739, %r729, %r729, 30;
	shf.l.wrap.b32 	%r2019, %r737, %r737, 5;
	// begin inline asm
	lop3.b32 %r732, %r733, %r739, %r735, 232;
	// end inline asm
	xor.b32  	%r2020, %r1911, %r1895;
	xor.b32  	%r2021, %r2020, %r1959;
	xor.b32  	%r2022, %r2021, %r1999;
	shf.l.wrap.b32 	%r2023, %r2022, %r2022, 1;
	add.s32 	%r2024, %r732, %r2023;
	add.s32 	%r2025, %r2024, %r731;
	add.s32 	%r2026, %r2025, %r2019;
	add.s32 	%r741, %r2026, -1894007588;
	shf.l.wrap.b32 	%r743, %r733, %r733, 30;
	shf.l.wrap.b32 	%r2027, %r741, %r741, 5;
	// begin inline asm
	lop3.b32 %r736, %r737, %r743, %r739, 232;
	// end inline asm
	xor.b32  	%r2028, %r1919, %r1903;
	xor.b32  	%r2029, %r2028, %r1967;
	xor.b32  	%r2030, %r2029, %r2007;
	shf.l.wrap.b32 	%r2031, %r2030, %r2030, 1;
	add.s32 	%r2032, %r736, %r2031;
	add.s32 	%r2033, %r2032, %r735;
	add.s32 	%r2034, %r2033, %r2027;
	add.s32 	%r745, %r2034, -1894007588;
	shf.l.wrap.b32 	%r747, %r737, %r737, 30;
	shf.l.wrap.b32 	%r2035, %r745, %r745, 5;
	// begin inline asm
	lop3.b32 %r740, %r741, %r747, %r743, 232;
	// end inline asm
	xor.b32  	%r2036, %r1927, %r1911;
	xor.b32  	%r2037, %r2036, %r1975;
	xor.b32  	%r2038, %r2037, %r2015;
	shf.l.wrap.b32 	%r2039, %r2038, %r2038, 1;
	add.s32 	%r2040, %r740, %r2039;
	add.s32 	%r2041, %r2040, %r739;
	add.s32 	%r2042, %r2041, %r2035;
	add.s32 	%r749, %r2042, -1894007588;
	shf.l.wrap.b32 	%r751, %r741, %r741, 30;
	shf.l.wrap.b32 	%r2043, %r749, %r749, 5;
	// begin inline asm
	lop3.b32 %r744, %r745, %r751, %r747, 232;
	// end inline asm
	xor.b32  	%r2044, %r1935, %r1919;
	xor.b32  	%r2045, %r2044, %r1983;
	xor.b32  	%r2046, %r2045, %r2023;
	shf.l.wrap.b32 	%r2047, %r2046, %r2046, 1;
	add.s32 	%r2048, %r744, %r2047;
	add.s32 	%r2049, %r2048, %r743;
	add.s32 	%r2050, %r2049, %r2043;
	add.s32 	%r753, %r2050, -1894007588;
	shf.l.wrap.b32 	%r755, %r745, %r745, 30;
	shf.l.wrap.b32 	%r2051, %r753, %r753, 5;
	// begin inline asm
	lop3.b32 %r748, %r749, %r755, %r751, 232;
	// end inline asm
	xor.b32  	%r2052, %r1943, %r1927;
	xor.b32  	%r2053, %r2052, %r1991;
	xor.b32  	%r2054, %r2053, %r2031;
	shf.l.wrap.b32 	%r2055, %r2054, %r2054, 1;
	add.s32 	%r2056, %r748, %r2055;
	add.s32 	%r2057, %r2056, %r747;
	add.s32 	%r2058, %r2057, %r2051;
	add.s32 	%r757, %r2058, -1894007588;
	shf.l.wrap.b32 	%r759, %r749, %r749, 30;
	shf.l.wrap.b32 	%r2059, %r757, %r757, 5;
	// begin inline asm
	lop3.b32 %r752, %r753, %r759, %r755, 232;
	// end inline asm
	xor.b32  	%r2060, %r1951, %r1935;
	xor.b32  	%r2061, %r2060, %r1999;
	xor.b32  	%r2062, %r2061, %r2039;
	shf.l.wrap.b32 	%r2063, %r2062, %r2062, 1;
	add.s32 	%r2064, %r752, %r2063;
	add.s32 	%r2065, %r2064, %r751;
	add.s32 	%r2066, %r2065, %r2059;
	add.s32 	%r761, %r2066, -1894007588;
	shf.l.wrap.b32 	%r763, %r753, %r753, 30;
	shf.l.wrap.b32 	%r2067, %r761, %r761, 5;
	// begin inline asm
	lop3.b32 %r756, %r757, %r763, %r759, 232;
	// end inline asm
	xor.b32  	%r2068, %r1959, %r1943;
	xor.b32  	%r2069, %r2068, %r2007;
	xor.b32  	%r2070, %r2069, %r2047;
	shf.l.wrap.b32 	%r2071, %r2070, %r2070, 1;
	add.s32 	%r2072, %r756, %r2071;
	add.s32 	%r2073, %r2072, %r755;
	add.s32 	%r2074, %r2073, %r2067;
	add.s32 	%r765, %r2074, -1894007588;
	shf.l.wrap.b32 	%r767, %r757, %r757, 30;
	shf.l.wrap.b32 	%r2075, %r765, %r765, 5;
	// begin inline asm
	lop3.b32 %r760, %r761, %r767, %r763, 232;
	// end inline asm
	xor.b32  	%r2076, %r1967, %r1951;
	xor.b32  	%r2077, %r2076, %r2015;
	xor.b32  	%r2078, %r2077, %r2055;
	shf.l.wrap.b32 	%r2079, %r2078, %r2078, 1;
	add.s32 	%r2080, %r760, %r2079;
	add.s32 	%r2081, %r2080, %r759;
	add.s32 	%r2082, %r2081, %r2075;
	add.s32 	%r769, %r2082, -1894007588;
	shf.l.wrap.b32 	%r771, %r761, %r761, 30;
	shf.l.wrap.b32 	%r2083, %r769, %r769, 5;
	// begin inline asm
	lop3.b32 %r764, %r765, %r771, %r767, 232;
	// end inline asm
	xor.b32  	%r2084, %r1975, %r1959;
	xor.b32  	%r2085, %r2084, %r2023;
	xor.b32  	%r2086, %r2085, %r2063;
	shf.l.wrap.b32 	%r2087, %r2086, %r2086, 1;
	add.s32 	%r2088, %r764, %r2087;
	add.s32 	%r2089, %r2088, %r763;
	add.s32 	%r2090, %r2089, %r2083;
	add.s32 	%r773, %r2090, -1894007588;
	shf.l.wrap.b32 	%r775, %r765, %r765, 30;
	shf.l.wrap.b32 	%r2091, %r773, %r773, 5;
	// begin inline asm
	lop3.b32 %r768, %r769, %r775, %r771, 150;
	// end inline asm
	xor.b32  	%r2092, %r1983, %r1967;
	xor.b32  	%r2093, %r2092, %r2031;
	xor.b32  	%r2094, %r2093, %r2071;
	shf.l.wrap.b32 	%r2095, %r2094, %r2094, 1;
	add.s32 	%r2096, %r768, %r2095;
	add.s32 	%r2097, %r2096, %r767;
	add.s32 	%r2098, %r2097, %r2091;
	add.s32 	%r777, %r2098, -899497514;
	shf.l.wrap.b32 	%r779, %r769, %r769, 30;
	shf.l.wrap.b32 	%r2099, %r777, %r777, 5;
	// begin inline asm
	lop3.b32 %r772, %r773, %r779, %r775, 150;
	// end inline asm
	xor.b32  	%r2100, %r1991, %r1975;
	xor.b32  	%r2101, %r2100, %r2039;
	xor.b32  	%r2102, %r2101, %r2079;
	shf.l.wrap.b32 	%r2103, %r2102, %r2102, 1;
	add.s32 	%r2104, %r772, %r2103;
	add.s32 	%r2105, %r2104, %r771;
	add.s32 	%r2106, %r2105, %r2099;
	add.s32 	%r781, %r2106, -899497514;
	shf.l.wrap.b32 	%r783, %r773, %r773, 30;
	shf.l.wrap.b32 	%r2107, %r781, %r781, 5;
	// begin inline asm
	lop3.b32 %r776, %r777, %r783, %r779, 150;
	// end inline asm
	xor.b32  	%r2108, %r1999, %r1983;
	xor.b32  	%r2109, %r2108, %r2047;
	xor.b32  	%r2110, %r2109, %r2087;
	shf.l.wrap.b32 	%r2111, %r2110, %r2110, 1;
	add.s32 	%r2112, %r776, %r2111;
	add.s32 	%r2113, %r2112, %r775;
	add.s32 	%r2114, %r2113, %r2107;
	add.s32 	%r785, %r2114, -899497514;
	shf.l.wrap.b32 	%r787, %r777, %r777, 30;
	shf.l.wrap.b32 	%r2115, %r785, %r785, 5;
	// begin inline asm
	lop3.b32 %r780, %r781, %r787, %r783, 150;
	// end inline asm
	xor.b32  	%r2116, %r2007, %r1991;
	xor.b32  	%r2117, %r2116, %r2055;
	xor.b32  	%r2118, %r2117, %r2095;
	shf.l.wrap.b32 	%r2119, %r2118, %r2118, 1;
	add.s32 	%r2120, %r780, %r2119;
	add.s32 	%r2121, %r2120, %r779;
	add.s32 	%r2122, %r2121, %r2115;
	add.s32 	%r789, %r2122, -899497514;
	shf.l.wrap.b32 	%r791, %r781, %r781, 30;
	shf.l.wrap.b32 	%r2123, %r789, %r789, 5;
	// begin inline asm
	lop3.b32 %r784, %r785, %r791, %r787, 150;
	// end inline asm
	xor.b32  	%r2124, %r2015, %r1999;
	xor.b32  	%r2125, %r2124, %r2063;
	xor.b32  	%r2126, %r2125, %r2103;
	shf.l.wrap.b32 	%r2127, %r2126, %r2126, 1;
	add.s32 	%r2128, %r784, %r2127;
	add.s32 	%r2129, %r2128, %r783;
	add.s32 	%r2130, %r2129, %r2123;
	add.s32 	%r793, %r2130, -899497514;
	shf.l.wrap.b32 	%r795, %r785, %r785, 30;
	shf.l.wrap.b32 	%r2131, %r793, %r793, 5;
	// begin inline asm
	lop3.b32 %r788, %r789, %r795, %r791, 150;
	// end inline asm
	xor.b32  	%r2132, %r2023, %r2007;
	xor.b32  	%r2133, %r2132, %r2071;
	xor.b32  	%r2134, %r2133, %r2111;
	shf.l.wrap.b32 	%r2135, %r2134, %r2134, 1;
	add.s32 	%r2136, %r788, %r2135;
	add.s32 	%r2137, %r2136, %r787;
	add.s32 	%r2138, %r2137, %r2131;
	add.s32 	%r797, %r2138, -899497514;
	shf.l.wrap.b32 	%r799, %r789, %r789, 30;
	shf.l.wrap.b32 	%r2139, %r797, %r797, 5;
	// begin inline asm
	lop3.b32 %r792, %r793, %r799, %r795, 150;
	// end inline asm
	xor.b32  	%r2140, %r2031, %r2015;
	xor.b32  	%r2141, %r2140, %r2079;
	xor.b32  	%r2142, %r2141, %r2119;
	shf.l.wrap.b32 	%r2143, %r2142, %r2142, 1;
	add.s32 	%r2144, %r792, %r2143;
	add.s32 	%r2145, %r2144, %r791;
	add.s32 	%r2146, %r2145, %r2139;
	add.s32 	%r801, %r2146, -899497514;
	shf.l.wrap.b32 	%r803, %r793, %r793, 30;
	shf.l.wrap.b32 	%r2147, %r801, %r801, 5;
	// begin inline asm
	lop3.b32 %r796, %r797, %r803, %r799, 150;
	// end inline asm
	xor.b32  	%r2148, %r2039, %r2023;
	xor.b32  	%r2149, %r2148, %r2087;
	xor.b32  	%r2150, %r2149, %r2127;
	shf.l.wrap.b32 	%r2151, %r2150, %r2150, 1;
	add.s32 	%r2152, %r796, %r2151;
	add.s32 	%r2153, %r2152, %r795;
	add.s32 	%r2154, %r2153, %r2147;
	add.s32 	%r805, %r2154, -899497514;
	shf.l.wrap.b32 	%r807, %r797, %r797, 30;
	shf.l.wrap.b32 	%r2155, %r805, %r805, 5;
	// begin inline asm
	lop3.b32 %r800, %r801, %r807, %r803, 150;
	// end inline asm
	xor.b32  	%r2156, %r2047, %r2031;
	xor.b32  	%r2157, %r2156, %r2095;
	xor.b32  	%r2158, %r2157, %r2135;
	shf.l.wrap.b32 	%r2159, %r2158, %r2158, 1;
	add.s32 	%r2160, %r800, %r2159;
	add.s32 	%r2161, %r2160, %r799;
	add.s32 	%r2162, %r2161, %r2155;
	add.s32 	%r809, %r2162, -899497514;
	shf.l.wrap.b32 	%r811, %r801, %r801, 30;
	shf.l.wrap.b32 	%r2163, %r809, %r809, 5;
	// begin inline asm
	lop3.b32 %r804, %r805, %r811, %r807, 150;
	// end inline asm
	xor.b32  	%r2164, %r2055, %r2039;
	xor.b32  	%r2165, %r2164, %r2103;
	xor.b32  	%r2166, %r2165, %r2143;
	shf.l.wrap.b32 	%r2167, %r2166, %r2166, 1;
	add.s32 	%r2168, %r804, %r2167;
	add.s32 	%r2169, %r2168, %r803;
	add.s32 	%r2170, %r2169, %r2163;
	add.s32 	%r813, %r2170, -899497514;
	shf.l.wrap.b32 	%r815, %r805, %r805, 30;
	shf.l.wrap.b32 	%r2171, %r813, %r813, 5;
	// begin inline asm
	lop3.b32 %r808, %r809, %r815, %r811, 150;
	// end inline asm
	xor.b32  	%r2172, %r2063, %r2047;
	xor.b32  	%r2173, %r2172, %r2111;
	xor.b32  	%r2174, %r2173, %r2151;
	shf.l.wrap.b32 	%r2175, %r2174, %r2174, 1;
	add.s32 	%r2176, %r808, %r2175;
	add.s32 	%r2177, %r2176, %r807;
	add.s32 	%r2178, %r2177, %r2171;
	add.s32 	%r817, %r2178, -899497514;
	shf.l.wrap.b32 	%r819, %r809, %r809, 30;
	shf.l.wrap.b32 	%r2179, %r817, %r817, 5;
	// begin inline asm
	lop3.b32 %r812, %r813, %r819, %r815, 150;
	// end inline asm
	xor.b32  	%r2180, %r2071, %r2055;
	xor.b32  	%r2181, %r2180, %r2119;
	xor.b32  	%r2182, %r2181, %r2159;
	shf.l.wrap.b32 	%r2183, %r2182, %r2182, 1;
	add.s32 	%r2184, %r812, %r2183;
	add.s32 	%r2185, %r2184, %r811;
	add.s32 	%r2186, %r2185, %r2179;
	add.s32 	%r821, %r2186, -899497514;
	shf.l.wrap.b32 	%r823, %r813, %r813, 30;
	shf.l.wrap.b32 	%r2187, %r821, %r821, 5;
	// begin inline asm
	lop3.b32 %r816, %r817, %r823, %r819, 150;
	// end inline asm
	xor.b32  	%r2188, %r2079, %r2063;
	xor.b32  	%r2189, %r2188, %r2127;
	xor.b32  	%r2190, %r2189, %r2167;
	shf.l.wrap.b32 	%r2191, %r2190, %r2190, 1;
	add.s32 	%r2192, %r816, %r2191;
	add.s32 	%r2193, %r2192, %r815;
	add.s32 	%r2194, %r2193, %r2187;
	add.s32 	%r825, %r2194, -899497514;
	shf.l.wrap.b32 	%r827, %r817, %r817, 30;
	shf.l.wrap.b32 	%r2195, %r825, %r825, 5;
	// begin inline asm
	lop3.b32 %r820, %r821, %r827, %r823, 150;
	// end inline asm
	xor.b32  	%r2196, %r2087, %r2071;
	xor.b32  	%r2197, %r2196, %r2135;
	xor.b32  	%r2198, %r2197, %r2175;
	shf.l.wrap.b32 	%r2199, %r2198, %r2198, 1;
	add.s32 	%r2200, %r820, %r2199;
	add.s32 	%r2201, %r2200, %r819;
	add.s32 	%r2202, %r2201, %r2195;
	add.s32 	%r829, %r2202, -899497514;
	shf.l.wrap.b32 	%r831, %r821, %r821, 30;
	shf.l.wrap.b32 	%r2203, %r829, %r829, 5;
	// begin inline asm
	lop3.b32 %r824, %r825, %r831, %r827, 150;
	// end inline asm
	xor.b32  	%r2204, %r2095, %r2079;
	xor.b32  	%r2205, %r2204, %r2143;
	xor.b32  	%r2206, %r2205, %r2183;
	shf.l.wrap.b32 	%r2207, %r2206, %r2206, 1;
	add.s32 	%r2208, %r824, %r2207;
	add.s32 	%r2209, %r2208, %r823;
	add.s32 	%r2210, %r2209, %r2203;
	add.s32 	%r833, %r2210, -899497514;
	shf.l.wrap.b32 	%r835, %r825, %r825, 30;
	shf.l.wrap.b32 	%r2211, %r833, %r833, 5;
	// begin inline asm
	lop3.b32 %r828, %r829, %r835, %r831, 150;
	// end inline asm
	xor.b32  	%r2212, %r2103, %r2087;
	xor.b32  	%r2213, %r2212, %r2151;
	xor.b32  	%r2214, %r2213, %r2191;
	shf.l.wrap.b32 	%r2215, %r2214, %r2214, 1;
	add.s32 	%r2216, %r828, %r2215;
	add.s32 	%r2217, %r2216, %r827;
	add.s32 	%r2218, %r2217, %r2211;
	add.s32 	%r837, %r2218, -899497514;
	shf.l.wrap.b32 	%r839, %r829, %r829, 30;
	shf.l.wrap.b32 	%r2219, %r837, %r837, 5;
	// begin inline asm
	lop3.b32 %r832, %r833, %r839, %r835, 150;
	// end inline asm
	xor.b32  	%r2220, %r2111, %r2095;
	xor.b32  	%r2221, %r2220, %r2159;
	xor.b32  	%r2222, %r2221, %r2199;
	shf.l.wrap.b32 	%r2223, %r2222, %r2222, 1;
	add.s32 	%r2224, %r832, %r2223;
	add.s32 	%r2225, %r2224, %r831;
	add.s32 	%r2226, %r2225, %r2219;
	add.s32 	%r841, %r2226, -899497514;
	shf.l.wrap.b32 	%r843, %r833, %r833, 30;
	shf.l.wrap.b32 	%r2227, %r841, %r841, 5;
	// begin inline asm
	lop3.b32 %r836, %r837, %r843, %r839, 150;
	// end inline asm
	xor.b32  	%r2228, %r2119, %r2103;
	xor.b32  	%r2229, %r2228, %r2167;
	xor.b32  	%r2230, %r2229, %r2207;
	shf.l.wrap.b32 	%r2231, %r2230, %r2230, 1;
	add.s32 	%r2232, %r836, %r2231;
	add.s32 	%r2233, %r2232, %r835;
	add.s32 	%r2234, %r2233, %r2227;
	add.s32 	%r845, %r2234, -899497514;
	shf.l.wrap.b32 	%r847, %r837, %r837, 30;
	shf.l.wrap.b32 	%r2235, %r845, %r845, 5;
	// begin inline asm
	lop3.b32 %r840, %r841, %r847, %r843, 150;
	// end inline asm
	xor.b32  	%r2236, %r2127, %r2111;
	xor.b32  	%r2237, %r2236, %r2175;
	xor.b32  	%r2238, %r2237, %r2215;
	shf.l.wrap.b32 	%r2239, %r2238, %r2238, 1;
	add.s32 	%r2240, %r840, %r2239;
	add.s32 	%r2241, %r2240, %r839;
	add.s32 	%r2242, %r2241, %r2235;
	add.s32 	%r2243, %r2242, -899497514;
	shf.l.wrap.b32 	%r846, %r841, %r841, 30;
	shf.l.wrap.b32 	%r2244, %r2243, %r2243, 5;
	// begin inline asm
	lop3.b32 %r844, %r845, %r846, %r847, 150;
	// end inline asm
	xor.b32  	%r2245, %r2135, %r2119;
	xor.b32  	%r2246, %r2245, %r2183;
	xor.b32  	%r2247, %r2246, %r2223;
	shf.l.wrap.b32 	%r2248, %r2247, %r2247, 1;
	shf.l.wrap.b32 	%r2249, %r845, %r845, 30;
	add.s32 	%r2250, %r844, %r2248;
	add.s32 	%r2251, %r2250, %r843;
	add.s32 	%r2252, %r2251, %r2244;
	add.s32 	%r853, %r2252, 833086679;
	add.s32 	%r849, %r2242, -1171231393;
	add.s32 	%r855, %r2249, -1732584194;
	add.s32 	%r851, %r846, 271733878;
	add.s32 	%r2253, %r847, -1009589776;
	shf.l.wrap.b32 	%r2254, %r853, %r853, 5;
	// begin inline asm
	lop3.b32 %r848, %r849, %r855, %r851, 202;
	// end inline asm
	add.s32 	%r2255, %r2254, %r2253;
	add.s32 	%r2256, %r2255, %r848;
	add.s32 	%r2257, %r2256, 1518500249;
	xor.b32  	%r857, %r2257, -2147483648;
	shf.l.wrap.b32 	%r859, %r849, %r849, 30;
	shf.l.wrap.b32 	%r2258, %r857, %r857, 5;
	// begin inline asm
	lop3.b32 %r852, %r853, %r859, %r855, 202;
	// end inline asm
	add.s32 	%r2259, %r846, %r852;
	add.s32 	%r2260, %r2259, %r2258;
	add.s32 	%r861, %r2260, 1790234127;
	shf.l.wrap.b32 	%r863, %r853, %r853, 30;
	shf.l.wrap.b32 	%r2261, %r861, %r861, 5;
	// begin inline asm
	lop3.b32 %r856, %r857, %r863, %r859, 202;
	// end inline asm
	add.s32 	%r2262, %r2249, %r856;
	add.s32 	%r2263, %r2262, %r2261;
	add.s32 	%r865, %r2263, -214083945;
	shf.l.wrap.b32 	%r867, %r857, %r857, 30;
	shf.l.wrap.b32 	%r2264, %r865, %r865, 5;
	// begin inline asm
	lop3.b32 %r860, %r861, %r867, %r863, 202;
	// end inline asm
	add.s32 	%r2265, %r859, %r860;
	add.s32 	%r2266, %r2265, %r2264;
	add.s32 	%r869, %r2266, 1518500249;
	shf.l.wrap.b32 	%r871, %r861, %r861, 30;
	shf.l.wrap.b32 	%r2267, %r869, %r869, 5;
	// begin inline asm
	lop3.b32 %r864, %r865, %r871, %r867, 202;
	// end inline asm
	add.s32 	%r2268, %r863, %r864;
	add.s32 	%r2269, %r2268, %r2267;
	add.s32 	%r873, %r2269, 1518500249;
	shf.l.wrap.b32 	%r875, %r865, %r865, 30;
	shf.l.wrap.b32 	%r2270, %r873, %r873, 5;
	// begin inline asm
	lop3.b32 %r868, %r869, %r875, %r871, 202;
	// end inline asm
	add.s32 	%r2271, %r867, %r868;
	add.s32 	%r2272, %r2271, %r2270;
	add.s32 	%r877, %r2272, 1518500249;
	shf.l.wrap.b32 	%r879, %r869, %r869, 30;
	shf.l.wrap.b32 	%r2273, %r877, %r877, 5;
	// begin inline asm
	lop3.b32 %r872, %r873, %r879, %r875, 202;
	// end inline asm
	add.s32 	%r2274, %r871, %r872;
	add.s32 	%r2275, %r2274, %r2273;
	add.s32 	%r881, %r2275, 1518500249;
	shf.l.wrap.b32 	%r883, %r873, %r873, 30;
	shf.l.wrap.b32 	%r2276, %r881, %r881, 5;
	// begin inline asm
	lop3.b32 %r876, %r877, %r883, %r879, 202;
	// end inline asm
	add.s32 	%r2277, %r876, %r875;
	add.s32 	%r2278, %r2277, %r2276;
	add.s32 	%r885, %r2278, 1518500249;
	shf.l.wrap.b32 	%r887, %r877, %r877, 30;
	shf.l.wrap.b32 	%r2279, %r885, %r885, 5;
	// begin inline asm
	lop3.b32 %r880, %r881, %r887, %r883, 202;
	// end inline asm
	add.s32 	%r2280, %r880, %r879;
	add.s32 	%r2281, %r2280, %r2279;
	add.s32 	%r889, %r2281, 1518500249;
	shf.l.wrap.b32 	%r891, %r881, %r881, 30;
	shf.l.wrap.b32 	%r2282, %r889, %r889, 5;
	// begin inline asm
	lop3.b32 %r884, %r885, %r891, %r887, 202;
	// end inline asm
	add.s32 	%r2283, %r884, %r883;
	add.s32 	%r2284, %r2283, %r2282;
	add.s32 	%r893, %r2284, 1518500249;
	shf.l.wrap.b32 	%r895, %r885, %r885, 30;
	shf.l.wrap.b32 	%r2285, %r893, %r893, 5;
	// begin inline asm
	lop3.b32 %r888, %r889, %r895, %r891, 202;
	// end inline asm
	add.s32 	%r2286, %r888, %r887;
	add.s32 	%r2287, %r2286, %r2285;
	add.s32 	%r897, %r2287, 1518500249;
	shf.l.wrap.b32 	%r899, %r889, %r889, 30;
	shf.l.wrap.b32 	%r2288, %r897, %r897, 5;
	// begin inline asm
	lop3.b32 %r892, %r893, %r899, %r895, 202;
	// end inline asm
	add.s32 	%r2289, %r892, %r891;
	add.s32 	%r2290, %r2289, %r2288;
	add.s32 	%r901, %r2290, 1518500249;
	shf.l.wrap.b32 	%r903, %r893, %r893, 30;
	shf.l.wrap.b32 	%r2291, %r901, %r901, 5;
	// begin inline asm
	lop3.b32 %r896, %r897, %r903, %r899, 202;
	// end inline asm
	add.s32 	%r2292, %r896, %r895;
	add.s32 	%r2293, %r2292, %r2291;
	add.s32 	%r905, %r2293, 1518500249;
	shf.l.wrap.b32 	%r907, %r897, %r897, 30;
	shf.l.wrap.b32 	%r2294, %r905, %r905, 5;
	// begin inline asm
	lop3.b32 %r900, %r901, %r907, %r903, 202;
	// end inline asm
	add.s32 	%r2295, %r900, %r899;
	add.s32 	%r2296, %r2295, %r2294;
	add.s32 	%r909, %r2296, 1518500249;
	shf.l.wrap.b32 	%r911, %r901, %r901, 30;
	shf.l.wrap.b32 	%r2297, %r909, %r909, 5;
	// begin inline asm
	lop3.b32 %r904, %r905, %r911, %r907, 202;
	// end inline asm
	add.s32 	%r2298, %r904, %r903;
	add.s32 	%r2299, %r2298, %r2297;
	add.s32 	%r913, %r2299, 1518500249;
	shf.l.wrap.b32 	%r915, %r905, %r905, 30;
	shf.l.wrap.b32 	%r2300, %r913, %r913, 5;
	// begin inline asm
	lop3.b32 %r908, %r909, %r915, %r911, 202;
	// end inline asm
	add.s32 	%r2301, %r908, %r907;
	add.s32 	%r2302, %r2301, %r2300;
	add.s32 	%r917, %r2302, 1518500761;
	shf.l.wrap.b32 	%r919, %r909, %r909, 30;
	shf.l.wrap.b32 	%r2303, %r917, %r917, 5;
	// begin inline asm
	lop3.b32 %r912, %r913, %r919, %r915, 202;
	// end inline asm
	shf.l.wrap.b32 	%r14, %r1207, %r1207, 1;
	add.s32 	%r2304, %r912, %r14;
	add.s32 	%r2305, %r2304, %r911;
	add.s32 	%r2306, %r2305, %r2303;
	add.s32 	%r921, %r2306, 1518500249;
	shf.l.wrap.b32 	%r923, %r913, %r913, 30;
	shf.l.wrap.b32 	%r2307, %r921, %r921, 5;
	// begin inline asm
	lop3.b32 %r916, %r917, %r923, %r919, 202;
	// end inline asm
	shf.l.wrap.b32 	%r15, %r1177, %r1177, 1;
	add.s32 	%r2308, %r916, %r15;
	add.s32 	%r2309, %r2308, %r915;
	add.s32 	%r2310, %r2309, %r2307;
	add.s32 	%r925, %r2310, 1518500249;
	shf.l.wrap.b32 	%r927, %r917, %r917, 30;
	shf.l.wrap.b32 	%r2311, %r925, %r925, 5;
	// begin inline asm
	lop3.b32 %r920, %r921, %r927, %r923, 202;
	// end inline asm
	mov.u32 	%r2312, 512;
	shf.l.wrap.b32 	%r16, %r2312, %r2312, 1;
	add.s32 	%r2313, %r920, %r16;
	add.s32 	%r2314, %r2313, %r919;
	add.s32 	%r2315, %r2314, %r2311;
	add.s32 	%r929, %r2315, 1518500249;
	shf.l.wrap.b32 	%r931, %r921, %r921, 30;
	shf.l.wrap.b32 	%r2316, %r929, %r929, 5;
	// begin inline asm
	lop3.b32 %r924, %r925, %r931, %r927, 202;
	// end inline asm
	shf.l.wrap.b32 	%r17, %r14, %r14, 1;
	add.s32 	%r2317, %r924, %r17;
	add.s32 	%r2318, %r2317, %r923;
	add.s32 	%r2319, %r2318, %r2316;
	add.s32 	%r933, %r2319, 1518500249;
	shf.l.wrap.b32 	%r935, %r925, %r925, 30;
	shf.l.wrap.b32 	%r2320, %r933, %r933, 5;
	// begin inline asm
	lop3.b32 %r928, %r929, %r935, %r931, 150;
	// end inline asm
	shf.l.wrap.b32 	%r18, %r15, %r15, 1;
	add.s32 	%r2321, %r928, %r18;
	add.s32 	%r2322, %r2321, %r927;
	add.s32 	%r2323, %r2322, %r2320;
	add.s32 	%r937, %r2323, 1859775393;
	shf.l.wrap.b32 	%r939, %r929, %r929, 30;
	shf.l.wrap.b32 	%r2324, %r937, %r937, 5;
	// begin inline asm
	lop3.b32 %r932, %r933, %r939, %r935, 150;
	// end inline asm
	shf.l.wrap.b32 	%r19, %r16, %r16, 1;
	add.s32 	%r2325, %r932, %r19;
	add.s32 	%r2326, %r2325, %r931;
	add.s32 	%r2327, %r2326, %r2324;
	add.s32 	%r941, %r2327, 1859775393;
	shf.l.wrap.b32 	%r943, %r933, %r933, 30;
	shf.l.wrap.b32 	%r2328, %r941, %r941, 5;
	// begin inline asm
	lop3.b32 %r936, %r937, %r943, %r939, 150;
	// end inline asm
	shf.l.wrap.b32 	%r20, %r17, %r17, 1;
	add.s32 	%r2329, %r936, %r20;
	add.s32 	%r2330, %r2329, %r935;
	add.s32 	%r2331, %r2330, %r2328;
	add.s32 	%r945, %r2331, 1859775393;
	shf.l.wrap.b32 	%r947, %r937, %r937, 30;
	shf.l.wrap.b32 	%r2332, %r945, %r945, 5;
	// begin inline asm
	lop3.b32 %r940, %r941, %r947, %r943, 150;
	// end inline asm
	xor.b32  	%r2333, %r18, 512;
	shf.l.wrap.b32 	%r21, %r2333, %r2333, 1;
	add.s32 	%r2334, %r940, %r21;
	add.s32 	%r2335, %r2334, %r939;
	add.s32 	%r2336, %r2335, %r2332;
	add.s32 	%r949, %r2336, 1859775393;
	shf.l.wrap.b32 	%r951, %r941, %r941, 30;
	shf.l.wrap.b32 	%r2337, %r949, %r949, 5;
	// begin inline asm
	lop3.b32 %r944, %r945, %r951, %r947, 150;
	// end inline asm
	xor.b32  	%r2338, %r14, %r19;
	shf.l.wrap.b32 	%r22, %r2338, %r2338, 1;
	add.s32 	%r2339, %r944, %r22;
	add.s32 	%r2340, %r2339, %r943;
	add.s32 	%r2341, %r2340, %r2337;
	add.s32 	%r953, %r2341, 1859775393;
	shf.l.wrap.b32 	%r955, %r945, %r945, 30;
	shf.l.wrap.b32 	%r2342, %r953, %r953, 5;
	// begin inline asm
	lop3.b32 %r948, %r949, %r955, %r951, 150;
	// end inline asm
	xor.b32  	%r2343, %r15, %r20;
	shf.l.wrap.b32 	%r23, %r2343, %r2343, 1;
	add.s32 	%r2344, %r948, %r23;
	add.s32 	%r2345, %r2344, %r947;
	add.s32 	%r2346, %r2345, %r2342;
	add.s32 	%r957, %r2346, 1859775393;
	shf.l.wrap.b32 	%r959, %r949, %r949, 30;
	shf.l.wrap.b32 	%r2347, %r957, %r957, 5;
	// begin inline asm
	lop3.b32 %r952, %r953, %r959, %r955, 150;
	// end inline asm
	xor.b32  	%r2348, %r16, %r21;
	shf.l.wrap.b32 	%r24, %r2348, %r2348, 1;
	add.s32 	%r2349, %r952, %r24;
	add.s32 	%r2350, %r2349, %r951;
	add.s32 	%r2351, %r2350, %r2347;
	add.s32 	%r961, %r2351, 1859775393;
	shf.l.wrap.b32 	%r963, %r953, %r953, 30;
	shf.l.wrap.b32 	%r2352, %r961, %r961, 5;
	// begin inline asm
	lop3.b32 %r956, %r957, %r963, %r959, 150;
	// end inline asm
	xor.b32  	%r2353, %r17, %r22;
	shf.l.wrap.b32 	%r25, %r2353, %r2353, 1;
	add.s32 	%r2354, %r956, %r25;
	add.s32 	%r2355, %r2354, %r955;
	add.s32 	%r2356, %r2355, %r2352;
	add.s32 	%r965, %r2356, 1859775393;
	shf.l.wrap.b32 	%r967, %r957, %r957, 30;
	shf.l.wrap.b32 	%r2357, %r965, %r965, 5;
	// begin inline asm
	lop3.b32 %r960, %r961, %r967, %r963, 150;
	// end inline asm
	xor.b32  	%r2358, %r18, %r23;
	shf.l.wrap.b32 	%r26, %r2358, %r2358, 1;
	add.s32 	%r2359, %r960, %r26;
	add.s32 	%r2360, %r2359, %r959;
	add.s32 	%r2361, %r2360, %r2357;
	add.s32 	%r969, %r2361, 1859775393;
	shf.l.wrap.b32 	%r971, %r961, %r961, 30;
	shf.l.wrap.b32 	%r2362, %r969, %r969, 5;
	// begin inline asm
	lop3.b32 %r964, %r965, %r971, %r967, 150;
	// end inline asm
	xor.b32  	%r2363, %r19, %r24;
	xor.b32  	%r2364, %r2363, 512;
	shf.l.wrap.b32 	%r27, %r2364, %r2364, 1;
	add.s32 	%r2365, %r964, %r27;
	add.s32 	%r2366, %r2365, %r963;
	add.s32 	%r2367, %r2366, %r2362;
	add.s32 	%r973, %r2367, 1859775393;
	shf.l.wrap.b32 	%r975, %r965, %r965, 30;
	shf.l.wrap.b32 	%r2368, %r973, %r973, 5;
	// begin inline asm
	lop3.b32 %r968, %r969, %r975, %r971, 150;
	// end inline asm
	xor.b32  	%r2369, %r20, %r25;
	xor.b32  	%r2370, %r2369, %r14;
	shf.l.wrap.b32 	%r28, %r2370, %r2370, 1;
	add.s32 	%r2371, %r968, %r28;
	add.s32 	%r2372, %r2371, %r967;
	add.s32 	%r2373, %r2372, %r2368;
	add.s32 	%r977, %r2373, 1859775393;
	shf.l.wrap.b32 	%r979, %r969, %r969, 30;
	shf.l.wrap.b32 	%r2374, %r977, %r977, 5;
	// begin inline asm
	lop3.b32 %r972, %r973, %r979, %r975, 150;
	// end inline asm
	xor.b32  	%r2375, %r21, %r26;
	xor.b32  	%r2376, %r2375, %r15;
	xor.b32  	%r2377, %r2376, 512;
	shf.l.wrap.b32 	%r29, %r2377, %r2377, 1;
	add.s32 	%r2378, %r972, %r29;
	add.s32 	%r2379, %r2378, %r971;
	add.s32 	%r2380, %r2379, %r2374;
	add.s32 	%r981, %r2380, 1859775393;
	shf.l.wrap.b32 	%r983, %r973, %r973, 30;
	shf.l.wrap.b32 	%r2381, %r981, %r981, 5;
	// begin inline asm
	lop3.b32 %r976, %r977, %r983, %r979, 150;
	// end inline asm
	xor.b32  	%r2382, %r22, %r27;
	xor.b32  	%r2383, %r2382, %r16;
	xor.b32  	%r2384, %r2383, %r14;
	shf.l.wrap.b32 	%r30, %r2384, %r2384, 1;
	add.s32 	%r2385, %r976, %r30;
	add.s32 	%r2386, %r2385, %r975;
	add.s32 	%r2387, %r2386, %r2381;
	add.s32 	%r985, %r2387, 1859775393;
	shf.l.wrap.b32 	%r987, %r977, %r977, 30;
	shf.l.wrap.b32 	%r2388, %r985, %r985, 5;
	// begin inline asm
	lop3.b32 %r980, %r981, %r987, %r983, 150;
	// end inline asm
	xor.b32  	%r2389, %r23, %r28;
	xor.b32  	%r2390, %r2389, %r17;
	xor.b32  	%r2391, %r2390, %r15;
	shf.l.wrap.b32 	%r31, %r2391, %r2391, 1;
	add.s32 	%r2392, %r980, %r31;
	add.s32 	%r2393, %r2392, %r979;
	add.s32 	%r2394, %r2393, %r2388;
	add.s32 	%r989, %r2394, 1859775393;
	shf.l.wrap.b32 	%r991, %r981, %r981, 30;
	shf.l.wrap.b32 	%r2395, %r989, %r989, 5;
	// begin inline asm
	lop3.b32 %r984, %r985, %r991, %r987, 150;
	// end inline asm
	xor.b32  	%r2396, %r24, %r29;
	xor.b32  	%r2397, %r2396, %r18;
	xor.b32  	%r2398, %r2397, %r16;
	shf.l.wrap.b32 	%r32, %r2398, %r2398, 1;
	add.s32 	%r2399, %r984, %r32;
	add.s32 	%r2400, %r2399, %r983;
	add.s32 	%r2401, %r2400, %r2395;
	add.s32 	%r993, %r2401, 1859775393;
	shf.l.wrap.b32 	%r995, %r985, %r985, 30;
	shf.l.wrap.b32 	%r2402, %r993, %r993, 5;
	// begin inline asm
	lop3.b32 %r988, %r989, %r995, %r991, 150;
	// end inline asm
	xor.b32  	%r2403, %r25, %r30;
	xor.b32  	%r2404, %r2403, %r19;
	xor.b32  	%r2405, %r2404, %r17;
	shf.l.wrap.b32 	%r33, %r2405, %r2405, 1;
	add.s32 	%r2406, %r988, %r33;
	add.s32 	%r2407, %r2406, %r987;
	add.s32 	%r2408, %r2407, %r2402;
	add.s32 	%r997, %r2408, 1859775393;
	shf.l.wrap.b32 	%r999, %r989, %r989, 30;
	shf.l.wrap.b32 	%r2409, %r997, %r997, 5;
	// begin inline asm
	lop3.b32 %r992, %r993, %r999, %r995, 150;
	// end inline asm
	xor.b32  	%r2410, %r26, %r31;
	xor.b32  	%r2411, %r2410, %r20;
	xor.b32  	%r2412, %r2411, %r18;
	shf.l.wrap.b32 	%r34, %r2412, %r2412, 1;
	add.s32 	%r2413, %r992, %r34;
	add.s32 	%r2414, %r2413, %r991;
	add.s32 	%r2415, %r2414, %r2409;
	add.s32 	%r1001, %r2415, 1859775393;
	shf.l.wrap.b32 	%r1003, %r993, %r993, 30;
	shf.l.wrap.b32 	%r2416, %r1001, %r1001, 5;
	// begin inline asm
	lop3.b32 %r996, %r997, %r1003, %r999, 150;
	// end inline asm
	xor.b32  	%r2417, %r27, %r32;
	xor.b32  	%r2418, %r2417, %r21;
	xor.b32  	%r2419, %r2418, %r19;
	shf.l.wrap.b32 	%r35, %r2419, %r2419, 1;
	add.s32 	%r2420, %r996, %r35;
	add.s32 	%r2421, %r2420, %r995;
	add.s32 	%r2422, %r2421, %r2416;
	add.s32 	%r1005, %r2422, 1859775393;
	shf.l.wrap.b32 	%r1007, %r997, %r997, 30;
	shf.l.wrap.b32 	%r2423, %r1005, %r1005, 5;
	// begin inline asm
	lop3.b32 %r1000, %r1001, %r1007, %r1003, 150;
	// end inline asm
	xor.b32  	%r2424, %r28, %r33;
	xor.b32  	%r2425, %r2424, %r22;
	xor.b32  	%r2426, %r2425, %r20;
	shf.l.wrap.b32 	%r36, %r2426, %r2426, 1;
	add.s32 	%r2427, %r1000, %r36;
	add.s32 	%r2428, %r2427, %r999;
	add.s32 	%r2429, %r2428, %r2423;
	add.s32 	%r1009, %r2429, 1859775393;
	shf.l.wrap.b32 	%r1011, %r1001, %r1001, 30;
	shf.l.wrap.b32 	%r2430, %r1009, %r1009, 5;
	// begin inline asm
	lop3.b32 %r1004, %r1005, %r1011, %r1007, 150;
	// end inline asm
	xor.b32  	%r2431, %r29, %r34;
	xor.b32  	%r2432, %r2431, %r23;
	xor.b32  	%r2433, %r2432, %r21;
	shf.l.wrap.b32 	%r37, %r2433, %r2433, 1;
	add.s32 	%r2434, %r1004, %r37;
	add.s32 	%r2435, %r2434, %r1003;
	add.s32 	%r2436, %r2435, %r2430;
	add.s32 	%r1013, %r2436, 1859775393;
	shf.l.wrap.b32 	%r1015, %r1005, %r1005, 30;
	shf.l.wrap.b32 	%r2437, %r1013, %r1013, 5;
	// begin inline asm
	lop3.b32 %r1008, %r1009, %r1015, %r1011, 232;
	// end inline asm
	xor.b32  	%r2438, %r30, %r35;
	xor.b32  	%r2439, %r2438, %r24;
	xor.b32  	%r2440, %r2439, %r22;
	shf.l.wrap.b32 	%r38, %r2440, %r2440, 1;
	add.s32 	%r2441, %r1008, %r38;
	add.s32 	%r2442, %r2441, %r1007;
	add.s32 	%r2443, %r2442, %r2437;
	add.s32 	%r1017, %r2443, -1894007588;
	shf.l.wrap.b32 	%r1019, %r1009, %r1009, 30;
	shf.l.wrap.b32 	%r2444, %r1017, %r1017, 5;
	// begin inline asm
	lop3.b32 %r1012, %r1013, %r1019, %r1015, 232;
	// end inline asm
	xor.b32  	%r2445, %r31, %r36;
	xor.b32  	%r2446, %r2445, %r25;
	xor.b32  	%r2447, %r2446, %r23;
	shf.l.wrap.b32 	%r39, %r2447, %r2447, 1;
	add.s32 	%r2448, %r1012, %r39;
	add.s32 	%r2449, %r2448, %r1011;
	add.s32 	%r2450, %r2449, %r2444;
	add.s32 	%r1021, %r2450, -1894007588;
	shf.l.wrap.b32 	%r1023, %r1013, %r1013, 30;
	shf.l.wrap.b32 	%r2451, %r1021, %r1021, 5;
	// begin inline asm
	lop3.b32 %r1016, %r1017, %r1023, %r1019, 232;
	// end inline asm
	xor.b32  	%r2452, %r32, %r37;
	xor.b32  	%r2453, %r2452, %r26;
	xor.b32  	%r2454, %r2453, %r24;
	shf.l.wrap.b32 	%r40, %r2454, %r2454, 1;
	add.s32 	%r2455, %r1016, %r40;
	add.s32 	%r2456, %r2455, %r1015;
	add.s32 	%r2457, %r2456, %r2451;
	add.s32 	%r1025, %r2457, -1894007588;
	shf.l.wrap.b32 	%r1027, %r1017, %r1017, 30;
	shf.l.wrap.b32 	%r2458, %r1025, %r1025, 5;
	// begin inline asm
	lop3.b32 %r1020, %r1021, %r1027, %r1023, 232;
	// end inline asm
	xor.b32  	%r2459, %r33, %r38;
	xor.b32  	%r2460, %r2459, %r27;
	xor.b32  	%r2461, %r2460, %r25;
	shf.l.wrap.b32 	%r41, %r2461, %r2461, 1;
	add.s32 	%r2462, %r1020, %r41;
	add.s32 	%r2463, %r2462, %r1019;
	add.s32 	%r2464, %r2463, %r2458;
	add.s32 	%r1029, %r2464, -1894007588;
	shf.l.wrap.b32 	%r1031, %r1021, %r1021, 30;
	shf.l.wrap.b32 	%r2465, %r1029, %r1029, 5;
	// begin inline asm
	lop3.b32 %r1024, %r1025, %r1031, %r1027, 232;
	// end inline asm
	xor.b32  	%r2466, %r34, %r39;
	xor.b32  	%r2467, %r2466, %r28;
	xor.b32  	%r2468, %r2467, %r26;
	shf.l.wrap.b32 	%r42, %r2468, %r2468, 1;
	add.s32 	%r2469, %r1024, %r42;
	add.s32 	%r2470, %r2469, %r1023;
	add.s32 	%r2471, %r2470, %r2465;
	add.s32 	%r1033, %r2471, -1894007588;
	shf.l.wrap.b32 	%r1035, %r1025, %r1025, 30;
	shf.l.wrap.b32 	%r2472, %r1033, %r1033, 5;
	// begin inline asm
	lop3.b32 %r1028, %r1029, %r1035, %r1031, 232;
	// end inline asm
	xor.b32  	%r2473, %r35, %r40;
	xor.b32  	%r2474, %r2473, %r29;
	xor.b32  	%r2475, %r2474, %r27;
	shf.l.wrap.b32 	%r43, %r2475, %r2475, 1;
	add.s32 	%r2476, %r1028, %r43;
	add.s32 	%r2477, %r2476, %r1027;
	add.s32 	%r2478, %r2477, %r2472;
	add.s32 	%r1037, %r2478, -1894007588;
	shf.l.wrap.b32 	%r1039, %r1029, %r1029, 30;
	shf.l.wrap.b32 	%r2479, %r1037, %r1037, 5;
	// begin inline asm
	lop3.b32 %r1032, %r1033, %r1039, %r1035, 232;
	// end inline asm
	xor.b32  	%r2480, %r36, %r41;
	xor.b32  	%r2481, %r2480, %r30;
	xor.b32  	%r2482, %r2481, %r28;
	shf.l.wrap.b32 	%r44, %r2482, %r2482, 1;
	add.s32 	%r2483, %r1032, %r44;
	add.s32 	%r2484, %r2483, %r1031;
	add.s32 	%r2485, %r2484, %r2479;
	add.s32 	%r1041, %r2485, -1894007588;
	shf.l.wrap.b32 	%r1043, %r1033, %r1033, 30;
	shf.l.wrap.b32 	%r2486, %r1041, %r1041, 5;
	// begin inline asm
	lop3.b32 %r1036, %r1037, %r1043, %r1039, 232;
	// end inline asm
	xor.b32  	%r2487, %r37, %r42;
	xor.b32  	%r2488, %r2487, %r31;
	xor.b32  	%r2489, %r2488, %r29;
	shf.l.wrap.b32 	%r45, %r2489, %r2489, 1;
	add.s32 	%r2490, %r1036, %r45;
	add.s32 	%r2491, %r2490, %r1035;
	add.s32 	%r2492, %r2491, %r2486;
	add.s32 	%r1045, %r2492, -1894007588;
	shf.l.wrap.b32 	%r1047, %r1037, %r1037, 30;
	shf.l.wrap.b32 	%r2493, %r1045, %r1045, 5;
	// begin inline asm
	lop3.b32 %r1040, %r1041, %r1047, %r1043, 232;
	// end inline asm
	xor.b32  	%r2494, %r38, %r43;
	xor.b32  	%r2495, %r2494, %r32;
	xor.b32  	%r2496, %r2495, %r30;
	shf.l.wrap.b32 	%r46, %r2496, %r2496, 1;
	add.s32 	%r2497, %r1040, %r46;
	add.s32 	%r2498, %r2497, %r1039;
	add.s32 	%r2499, %r2498, %r2493;
	add.s32 	%r1049, %r2499, -1894007588;
	shf.l.wrap.b32 	%r1051, %r1041, %r1041, 30;
	shf.l.wrap.b32 	%r2500, %r1049, %r1049, 5;
	// begin inline asm
	lop3.b32 %r1044, %r1045, %r1051, %r1047, 232;
	// end inline asm
	xor.b32  	%r2501, %r39, %r44;
	xor.b32  	%r2502, %r2501, %r33;
	xor.b32  	%r2503, %r2502, %r31;
	shf.l.wrap.b32 	%r47, %r2503, %r2503, 1;
	add.s32 	%r2504, %r1044, %r47;
	add.s32 	%r2505, %r2504, %r1043;
	add.s32 	%r2506, %r2505, %r2500;
	add.s32 	%r1053, %r2506, -1894007588;
	shf.l.wrap.b32 	%r1055, %r1045, %r1045, 30;
	shf.l.wrap.b32 	%r2507, %r1053, %r1053, 5;
	// begin inline asm
	lop3.b32 %r1048, %r1049, %r1055, %r1051, 232;
	// end inline asm
	xor.b32  	%r2508, %r40, %r45;
	xor.b32  	%r2509, %r2508, %r34;
	xor.b32  	%r2510, %r2509, %r32;
	shf.l.wrap.b32 	%r48, %r2510, %r2510, 1;
	add.s32 	%r2511, %r1048, %r48;
	add.s32 	%r2512, %r2511, %r1047;
	add.s32 	%r2513, %r2512, %r2507;
	add.s32 	%r1057, %r2513, -1894007588;
	shf.l.wrap.b32 	%r1059, %r1049, %r1049, 30;
	shf.l.wrap.b32 	%r2514, %r1057, %r1057, 5;
	// begin inline asm
	lop3.b32 %r1052, %r1053, %r1059, %r1055, 232;
	// end inline asm
	xor.b32  	%r2515, %r41, %r46;
	xor.b32  	%r2516, %r2515, %r35;
	xor.b32  	%r2517, %r2516, %r33;
	shf.l.wrap.b32 	%r49, %r2517, %r2517, 1;
	add.s32 	%r2518, %r1052, %r49;
	add.s32 	%r2519, %r2518, %r1051;
	add.s32 	%r2520, %r2519, %r2514;
	add.s32 	%r1061, %r2520, -1894007588;
	shf.l.wrap.b32 	%r1063, %r1053, %r1053, 30;
	shf.l.wrap.b32 	%r2521, %r1061, %r1061, 5;
	// begin inline asm
	lop3.b32 %r1056, %r1057, %r1063, %r1059, 232;
	// end inline asm
	xor.b32  	%r2522, %r42, %r47;
	xor.b32  	%r2523, %r2522, %r36;
	xor.b32  	%r2524, %r2523, %r34;
	shf.l.wrap.b32 	%r50, %r2524, %r2524, 1;
	add.s32 	%r2525, %r1056, %r50;
	add.s32 	%r2526, %r2525, %r1055;
	add.s32 	%r2527, %r2526, %r2521;
	add.s32 	%r1065, %r2527, -1894007588;
	shf.l.wrap.b32 	%r1067, %r1057, %r1057, 30;
	shf.l.wrap.b32 	%r2528, %r1065, %r1065, 5;
	// begin inline asm
	lop3.b32 %r1060, %r1061, %r1067, %r1063, 232;
	// end inline asm
	xor.b32  	%r2529, %r43, %r48;
	xor.b32  	%r2530, %r2529, %r37;
	xor.b32  	%r2531, %r2530, %r35;
	shf.l.wrap.b32 	%r51, %r2531, %r2531, 1;
	add.s32 	%r2532, %r1060, %r51;
	add.s32 	%r2533, %r2532, %r1059;
	add.s32 	%r2534, %r2533, %r2528;
	add.s32 	%r1069, %r2534, -1894007588;
	shf.l.wrap.b32 	%r1071, %r1061, %r1061, 30;
	shf.l.wrap.b32 	%r2535, %r1069, %r1069, 5;
	// begin inline asm
	lop3.b32 %r1064, %r1065, %r1071, %r1067, 232;
	// end inline asm
	xor.b32  	%r2536, %r44, %r49;
	xor.b32  	%r2537, %r2536, %r38;
	xor.b32  	%r2538, %r2537, %r36;
	shf.l.wrap.b32 	%r52, %r2538, %r2538, 1;
	add.s32 	%r2539, %r1064, %r52;
	add.s32 	%r2540, %r2539, %r1063;
	add.s32 	%r2541, %r2540, %r2535;
	add.s32 	%r1073, %r2541, -1894007588;
	shf.l.wrap.b32 	%r1075, %r1065, %r1065, 30;
	shf.l.wrap.b32 	%r2542, %r1073, %r1073, 5;
	// begin inline asm
	lop3.b32 %r1068, %r1069, %r1075, %r1071, 232;
	// end inline asm
	xor.b32  	%r2543, %r45, %r50;
	xor.b32  	%r2544, %r2543, %r39;
	xor.b32  	%r2545, %r2544, %r37;
	shf.l.wrap.b32 	%r53, %r2545, %r2545, 1;
	add.s32 	%r2546, %r1068, %r53;
	add.s32 	%r2547, %r2546, %r1067;
	add.s32 	%r2548, %r2547, %r2542;
	add.s32 	%r1077, %r2548, -1894007588;
	shf.l.wrap.b32 	%r1079, %r1069, %r1069, 30;
	shf.l.wrap.b32 	%r2549, %r1077, %r1077, 5;
	// begin inline asm
	lop3.b32 %r1072, %r1073, %r1079, %r1075, 232;
	// end inline asm
	xor.b32  	%r2550, %r46, %r51;
	xor.b32  	%r2551, %r2550, %r40;
	xor.b32  	%r2552, %r2551, %r38;
	shf.l.wrap.b32 	%r54, %r2552, %r2552, 1;
	add.s32 	%r2553, %r1072, %r54;
	add.s32 	%r2554, %r2553, %r1071;
	add.s32 	%r2555, %r2554, %r2549;
	add.s32 	%r1081, %r2555, -1894007588;
	shf.l.wrap.b32 	%r1083, %r1073, %r1073, 30;
	shf.l.wrap.b32 	%r2556, %r1081, %r1081, 5;
	// begin inline asm
	lop3.b32 %r1076, %r1077, %r1083, %r1079, 232;
	// end inline asm
	xor.b32  	%r2557, %r47, %r52;
	xor.b32  	%r2558, %r2557, %r41;
	xor.b32  	%r2559, %r2558, %r39;
	shf.l.wrap.b32 	%r55, %r2559, %r2559, 1;
	add.s32 	%r2560, %r1076, %r55;
	add.s32 	%r2561, %r2560, %r1075;
	add.s32 	%r2562, %r2561, %r2556;
	add.s32 	%r1085, %r2562, -1894007588;
	shf.l.wrap.b32 	%r1087, %r1077, %r1077, 30;
	shf.l.wrap.b32 	%r2563, %r1085, %r1085, 5;
	// begin inline asm
	lop3.b32 %r1080, %r1081, %r1087, %r1083, 232;
	// end inline asm
	xor.b32  	%r2564, %r48, %r53;
	xor.b32  	%r2565, %r2564, %r42;
	xor.b32  	%r2566, %r2565, %r40;
	shf.l.wrap.b32 	%r56, %r2566, %r2566, 1;
	add.s32 	%r2567, %r1080, %r56;
	add.s32 	%r2568, %r2567, %r1079;
	add.s32 	%r2569, %r2568, %r2563;
	add.s32 	%r1089, %r2569, -1894007588;
	shf.l.wrap.b32 	%r1091, %r1081, %r1081, 30;
	shf.l.wrap.b32 	%r2570, %r1089, %r1089, 5;
	// begin inline asm
	lop3.b32 %r1084, %r1085, %r1091, %r1087, 232;
	// end inline asm
	xor.b32  	%r2571, %r49, %r54;
	xor.b32  	%r2572, %r2571, %r43;
	xor.b32  	%r2573, %r2572, %r41;
	shf.l.wrap.b32 	%r57, %r2573, %r2573, 1;
	add.s32 	%r2574, %r1084, %r57;
	add.s32 	%r2575, %r2574, %r1083;
	add.s32 	%r2576, %r2575, %r2570;
	add.s32 	%r1093, %r2576, -1894007588;
	shf.l.wrap.b32 	%r1095, %r1085, %r1085, 30;
	shf.l.wrap.b32 	%r2577, %r1093, %r1093, 5;
	// begin inline asm
	lop3.b32 %r1088, %r1089, %r1095, %r1091, 150;
	// end inline asm
	xor.b32  	%r2578, %r50, %r55;
	xor.b32  	%r2579, %r2578, %r44;
	xor.b32  	%r2580, %r2579, %r42;
	shf.l.wrap.b32 	%r58, %r2580, %r2580, 1;
	add.s32 	%r2581, %r1088, %r58;
	add.s32 	%r2582, %r2581, %r1087;
	add.s32 	%r2583, %r2582, %r2577;
	add.s32 	%r1097, %r2583, -899497514;
	shf.l.wrap.b32 	%r1099, %r1089, %r1089, 30;
	shf.l.wrap.b32 	%r2584, %r1097, %r1097, 5;
	// begin inline asm
	lop3.b32 %r1092, %r1093, %r1099, %r1095, 150;
	// end inline asm
	xor.b32  	%r2585, %r51, %r56;
	xor.b32  	%r2586, %r2585, %r45;
	xor.b32  	%r2587, %r2586, %r43;
	shf.l.wrap.b32 	%r59, %r2587, %r2587, 1;
	add.s32 	%r2588, %r1092, %r59;
	add.s32 	%r2589, %r2588, %r1091;
	add.s32 	%r2590, %r2589, %r2584;
	add.s32 	%r1101, %r2590, -899497514;
	shf.l.wrap.b32 	%r1103, %r1093, %r1093, 30;
	shf.l.wrap.b32 	%r2591, %r1101, %r1101, 5;
	// begin inline asm
	lop3.b32 %r1096, %r1097, %r1103, %r1099, 150;
	// end inline asm
	xor.b32  	%r2592, %r52, %r57;
	xor.b32  	%r2593, %r2592, %r46;
	xor.b32  	%r2594, %r2593, %r44;
	shf.l.wrap.b32 	%r60, %r2594, %r2594, 1;
	add.s32 	%r2595, %r1096, %r60;
	add.s32 	%r2596, %r2595, %r1095;
	add.s32 	%r2597, %r2596, %r2591;
	add.s32 	%r1105, %r2597, -899497514;
	shf.l.wrap.b32 	%r1107, %r1097, %r1097, 30;
	shf.l.wrap.b32 	%r2598, %r1105, %r1105, 5;
	// begin inline asm
	lop3.b32 %r1100, %r1101, %r1107, %r1103, 150;
	// end inline asm
	xor.b32  	%r2599, %r53, %r58;
	xor.b32  	%r2600, %r2599, %r47;
	xor.b32  	%r2601, %r2600, %r45;
	shf.l.wrap.b32 	%r61, %r2601, %r2601, 1;
	add.s32 	%r2602, %r1100, %r61;
	add.s32 	%r2603, %r2602, %r1099;
	add.s32 	%r2604, %r2603, %r2598;
	add.s32 	%r1109, %r2604, -899497514;
	shf.l.wrap.b32 	%r1111, %r1101, %r1101, 30;
	shf.l.wrap.b32 	%r2605, %r1109, %r1109, 5;
	// begin inline asm
	lop3.b32 %r1104, %r1105, %r1111, %r1107, 150;
	// end inline asm
	xor.b32  	%r2606, %r54, %r59;
	xor.b32  	%r2607, %r2606, %r48;
	xor.b32  	%r2608, %r2607, %r46;
	shf.l.wrap.b32 	%r62, %r2608, %r2608, 1;
	add.s32 	%r2609, %r1104, %r62;
	add.s32 	%r2610, %r2609, %r1103;
	add.s32 	%r2611, %r2610, %r2605;
	add.s32 	%r1113, %r2611, -899497514;
	shf.l.wrap.b32 	%r1115, %r1105, %r1105, 30;
	shf.l.wrap.b32 	%r2612, %r1113, %r1113, 5;
	// begin inline asm
	lop3.b32 %r1108, %r1109, %r1115, %r1111, 150;
	// end inline asm
	xor.b32  	%r2613, %r55, %r60;
	xor.b32  	%r2614, %r2613, %r49;
	xor.b32  	%r2615, %r2614, %r47;
	shf.l.wrap.b32 	%r63, %r2615, %r2615, 1;
	add.s32 	%r2616, %r1108, %r63;
	add.s32 	%r2617, %r2616, %r1107;
	add.s32 	%r2618, %r2617, %r2612;
	add.s32 	%r1117, %r2618, -899497514;
	shf.l.wrap.b32 	%r1119, %r1109, %r1109, 30;
	shf.l.wrap.b32 	%r2619, %r1117, %r1117, 5;
	// begin inline asm
	lop3.b32 %r1112, %r1113, %r1119, %r1115, 150;
	// end inline asm
	xor.b32  	%r2620, %r56, %r61;
	xor.b32  	%r2621, %r2620, %r50;
	xor.b32  	%r2622, %r2621, %r48;
	shf.l.wrap.b32 	%r64, %r2622, %r2622, 1;
	add.s32 	%r2623, %r1112, %r1111;
	add.s32 	%r2624, %r2623, %r64;
	add.s32 	%r2625, %r2624, %r2619;
	add.s32 	%r1121, %r2625, -899497514;
	shf.l.wrap.b32 	%r1123, %r1113, %r1113, 30;
	shf.l.wrap.b32 	%r2626, %r1121, %r1121, 5;
	// begin inline asm
	lop3.b32 %r1116, %r1117, %r1123, %r1119, 150;
	// end inline asm
	xor.b32  	%r2627, %r57, %r62;
	xor.b32  	%r2628, %r2627, %r51;
	xor.b32  	%r2629, %r2628, %r49;
	shf.l.wrap.b32 	%r65, %r2629, %r2629, 1;
	add.s32 	%r2630, %r1116, %r1115;
	add.s32 	%r2631, %r2630, %r65;
	add.s32 	%r2632, %r2631, %r2626;
	add.s32 	%r1125, %r2632, -899497514;
	shf.l.wrap.b32 	%r1127, %r1117, %r1117, 30;
	shf.l.wrap.b32 	%r2633, %r1125, %r1125, 5;
	// begin inline asm
	lop3.b32 %r1120, %r1121, %r1127, %r1123, 150;
	// end inline asm
	xor.b32  	%r2634, %r58, %r63;
	xor.b32  	%r2635, %r2634, %r52;
	xor.b32  	%r2636, %r2635, %r50;
	shf.l.wrap.b32 	%r66, %r2636, %r2636, 1;
	add.s32 	%r2637, %r1120, %r1119;
	add.s32 	%r2638, %r2637, %r66;
	add.s32 	%r2639, %r2638, %r2633;
	add.s32 	%r1129, %r2639, -899497514;
	shf.l.wrap.b32 	%r1131, %r1121, %r1121, 30;
	shf.l.wrap.b32 	%r2640, %r1129, %r1129, 5;
	// begin inline asm
	lop3.b32 %r1124, %r1125, %r1131, %r1127, 150;
	// end inline asm
	xor.b32  	%r2641, %r59, %r64;
	xor.b32  	%r2642, %r2641, %r53;
	xor.b32  	%r2643, %r2642, %r51;
	shf.l.wrap.b32 	%r67, %r2643, %r2643, 1;
	add.s32 	%r2644, %r1124, %r1123;
	add.s32 	%r2645, %r2644, %r67;
	add.s32 	%r2646, %r2645, %r2640;
	add.s32 	%r1133, %r2646, -899497514;
	shf.l.wrap.b32 	%r1135, %r1125, %r1125, 30;
	shf.l.wrap.b32 	%r2647, %r1133, %r1133, 5;
	// begin inline asm
	lop3.b32 %r1128, %r1129, %r1135, %r1131, 150;
	// end inline asm
	xor.b32  	%r2648, %r60, %r65;
	xor.b32  	%r2649, %r2648, %r54;
	xor.b32  	%r2650, %r2649, %r52;
	shf.l.wrap.b32 	%r68, %r2650, %r2650, 1;
	add.s32 	%r2651, %r1128, %r1127;
	add.s32 	%r2652, %r2651, %r68;
	add.s32 	%r2653, %r2652, %r2647;
	add.s32 	%r1137, %r2653, -899497514;
	shf.l.wrap.b32 	%r1139, %r1129, %r1129, 30;
	shf.l.wrap.b32 	%r2654, %r1137, %r1137, 5;
	// begin inline asm
	lop3.b32 %r1132, %r1133, %r1139, %r1135, 150;
	// end inline asm
	xor.b32  	%r2655, %r61, %r66;
	xor.b32  	%r2656, %r2655, %r55;
	xor.b32  	%r2657, %r2656, %r53;
	shf.l.wrap.b32 	%r69, %r2657, %r2657, 1;
	add.s32 	%r2658, %r1132, %r1131;
	add.s32 	%r2659, %r2658, %r69;
	add.s32 	%r2660, %r2659, %r2654;
	add.s32 	%r1141, %r2660, -899497514;
	shf.l.wrap.b32 	%r1143, %r1133, %r1133, 30;
	shf.l.wrap.b32 	%r2661, %r1141, %r1141, 5;
	// begin inline asm
	lop3.b32 %r1136, %r1137, %r1143, %r1139, 150;
	// end inline asm
	xor.b32  	%r2662, %r62, %r67;
	xor.b32  	%r2663, %r2662, %r56;
	xor.b32  	%r2664, %r2663, %r54;
	shf.l.wrap.b32 	%r70, %r2664, %r2664, 1;
	add.s32 	%r2665, %r1135, %r1136;
	add.s32 	%r2666, %r2665, %r70;
	add.s32 	%r2667, %r2666, %r2661;
	add.s32 	%r1145, %r2667, -899497514;
	shf.l.wrap.b32 	%r1147, %r1137, %r1137, 30;
	shf.l.wrap.b32 	%r2668, %r1145, %r1145, 5;
	// begin inline asm
	lop3.b32 %r1140, %r1141, %r1147, %r1143, 150;
	// end inline asm
	xor.b32  	%r2669, %r63, %r68;
	xor.b32  	%r2670, %r2669, %r57;
	xor.b32  	%r2671, %r2670, %r55;
	shf.l.wrap.b32 	%r71, %r2671, %r2671, 1;
	add.s32 	%r2672, %r1139, %r1140;
	add.s32 	%r2673, %r2672, %r71;
	add.s32 	%r2674, %r2673, %r2668;
	add.s32 	%r1149, %r2674, -899497514;
	shf.l.wrap.b32 	%r1151, %r1141, %r1141, 30;
	shf.l.wrap.b32 	%r2675, %r1149, %r1149, 5;
	// begin inline asm
	lop3.b32 %r1144, %r1145, %r1151, %r1147, 150;
	// end inline asm
	xor.b32  	%r2676, %r64, %r69;
	xor.b32  	%r2677, %r2676, %r58;
	xor.b32  	%r2678, %r2677, %r56;
	shf.l.wrap.b32 	%r72, %r2678, %r2678, 1;
	add.s32 	%r2679, %r1143, %r1144;
	add.s32 	%r2680, %r2679, %r72;
	add.s32 	%r2681, %r2680, %r2675;
	add.s32 	%r1153, %r2681, -899497514;
	shf.l.wrap.b32 	%r1155, %r1145, %r1145, 30;
	shf.l.wrap.b32 	%r2682, %r1153, %r1153, 5;
	// begin inline asm
	lop3.b32 %r1148, %r1149, %r1155, %r1151, 150;
	// end inline asm
	xor.b32  	%r2683, %r65, %r70;
	xor.b32  	%r2684, %r2683, %r59;
	xor.b32  	%r2685, %r2684, %r57;
	shf.l.wrap.b32 	%r73, %r2685, %r2685, 1;
	add.s32 	%r2686, %r1147, %r1148;
	add.s32 	%r2687, %r2686, %r73;
	add.s32 	%r2688, %r2687, %r2682;
	add.s32 	%r1157, %r2688, -899497514;
	shf.l.wrap.b32 	%r1159, %r1149, %r1149, 30;
	shf.l.wrap.b32 	%r2689, %r1157, %r1157, 5;
	// begin inline asm
	lop3.b32 %r1152, %r1153, %r1159, %r1155, 150;
	// end inline asm
	xor.b32  	%r2690, %r66, %r71;
	xor.b32  	%r2691, %r2690, %r60;
	xor.b32  	%r2692, %r2691, %r58;
	shf.l.wrap.b32 	%r74, %r2692, %r2692, 1;
	add.s32 	%r2693, %r1151, %r1152;
	add.s32 	%r2694, %r2693, %r74;
	add.s32 	%r2695, %r2694, %r2689;
	add.s32 	%r1161, %r2695, -899497514;
	shf.l.wrap.b32 	%r1163, %r1153, %r1153, 30;
	shf.l.wrap.b32 	%r2696, %r1161, %r1161, 5;
	// begin inline asm
	lop3.b32 %r1156, %r1157, %r1163, %r1159, 150;
	// end inline asm
	xor.b32  	%r2697, %r67, %r72;
	xor.b32  	%r2698, %r2697, %r61;
	xor.b32  	%r2699, %r2698, %r59;
	shf.l.wrap.b32 	%r75, %r2699, %r2699, 1;
	add.s32 	%r2700, %r1155, %r1156;
	add.s32 	%r2701, %r2700, %r75;
	add.s32 	%r2702, %r2701, %r2696;
	add.s32 	%r1165, %r2702, -899497514;
	shf.l.wrap.b32 	%r1167, %r1157, %r1157, 30;
	shf.l.wrap.b32 	%r2703, %r1165, %r1165, 5;
	// begin inline asm
	lop3.b32 %r1160, %r1161, %r1167, %r1163, 150;
	// end inline asm
	xor.b32  	%r2704, %r68, %r73;
	xor.b32  	%r2705, %r2704, %r62;
	xor.b32  	%r2706, %r2705, %r60;
	shf.l.wrap.b32 	%r76, %r2706, %r2706, 1;
	add.s32 	%r2707, %r1159, %r1160;
	add.s32 	%r2708, %r2707, %r76;
	add.s32 	%r2709, %r2708, %r2703;
	add.s32 	%r2710, %r2709, -899497514;
	shf.l.wrap.b32 	%r1166, %r1161, %r1161, 30;
	shf.l.wrap.b32 	%r2711, %r2710, %r2710, 5;
	// begin inline asm
	lop3.b32 %r1164, %r1165, %r1166, %r1167, 150;
	// end inline asm
	xor.b32  	%r2712, %r69, %r74;
	xor.b32  	%r2713, %r2712, %r63;
	xor.b32  	%r2714, %r2713, %r61;
	shf.l.wrap.b32 	%r77, %r2714, %r2714, 1;
	shf.l.wrap.b32 	%r2715, %r1165, %r1165, 30;
	add.s32 	%r2716, %r853, %r1163;
	add.s32 	%r2717, %r2716, %r1164;
	add.s32 	%r2718, %r2717, %r77;
	add.s32 	%r2719, %r2718, %r2711;
	add.s32 	%r2720, %r2719, -899497514;
	add.s32 	%r2721, %r2710, %r849;
	add.s32 	%r2722, %r2715, %r855;
	add.s32 	%r2723, %r1166, %r851;
	add.s32 	%r2724, %r1167, %r2253;
	shf.l.wrap.b32 	%r2725, %r2720, %r2720, 16;
	shl.b32 	%r2726, %r2725, 8;
	and.b32  	%r2727, %r2726, -16711936;
	shr.u32 	%r2728, %r2725, 8;
	and.b32  	%r2729, %r2728, 16711935;
	or.b32  	%r2730, %r2727, %r2729;
	st.local.u32 	[%rd3], %r2730;
	shf.l.wrap.b32 	%r2731, %r2721, %r2721, 16;
	shl.b32 	%r2732, %r2731, 8;
	and.b32  	%r2733, %r2732, -16711936;
	shr.u32 	%r2734, %r2731, 8;
	and.b32  	%r2735, %r2734, 16711935;
	or.b32  	%r2736, %r2733, %r2735;
	st.local.u32 	[%rd3+4], %r2736;
	shf.l.wrap.b32 	%r2737, %r2722, %r2722, 16;
	shl.b32 	%r2738, %r2737, 8;
	and.b32  	%r2739, %r2738, -16711936;
	shr.u32 	%r2740, %r2737, 8;
	and.b32  	%r2741, %r2740, 16711935;
	or.b32  	%r2742, %r2739, %r2741;
	st.local.u32 	[%rd3+8], %r2742;
	shf.l.wrap.b32 	%r2743, %r2723, %r2723, 16;
	shl.b32 	%r2744, %r2743, 8;
	and.b32  	%r2745, %r2744, -16711936;
	shr.u32 	%r2746, %r2743, 8;
	and.b32  	%r2747, %r2746, 16711935;
	or.b32  	%r2748, %r2745, %r2747;
	st.local.u32 	[%rd3+12], %r2748;
	shf.l.wrap.b32 	%r2749, %r2724, %r2724, 16;
	shl.b32 	%r2750, %r2749, 8;
	and.b32  	%r2751, %r2750, -16711936;
	shr.u32 	%r2752, %r2749, 8;
	and.b32  	%r2753, %r2752, 16711935;
	or.b32  	%r2754, %r2751, %r2753;
	st.local.u32 	[%rd3+16], %r2754;
	ld.const.u32 	%r2755, [%rd22+24];
	cvt.u64.u32 	%rd5, %r2755;
	shr.u32 	%r78, %r2755, 3;
	ld.const.u32 	%r2756, [%rd22+20];
	setp.ge.u32 	%p1, %r2756, %r78;
	@%p1 bra 	$L__BB2_2;

	mov.u32 	%r8883, -271733879;
	shf.l.wrap.b32 	%r8882, %r8883, %r8883, 30;
	mov.u32 	%r8881, 1732584193;
	shf.l.wrap.b32 	%r8880, %r8881, %r8881, 30;
	xor.b32  	%r3389, %r4, 1549556828;
	add.s32 	%r2758, %r9, %r3389;
	shf.l.wrap.b32 	%r3390, %r2758, %r2758, 5;
	xor.b32  	%r3391, %r5, 1549556828;
	add.s32 	%r3392, %r2, %r3391;
	add.s32 	%r2762, %r3392, %r3390;
	shf.l.wrap.b32 	%r3393, %r2762, %r2762, 5;
	// begin inline asm
	lop3.b32 %r2757, %r2758, %r8880, %r8882, 202;
	// end inline asm
	xor.b32  	%r3394, %r6, 1549556828;
	add.s32 	%r3395, %r2757, %r3394;
	add.s32 	%r3396, %r3395, %r3393;
	add.s32 	%r2766, %r3396, -214083945;
	shf.l.wrap.b32 	%r2768, %r2758, %r2758, 30;
	shf.l.wrap.b32 	%r3397, %r2766, %r2766, 5;
	// begin inline asm
	lop3.b32 %r2761, %r2762, %r2768, %r8880, 202;
	// end inline asm
	add.s32 	%r3398, %r8882, %r2761;
	xor.b32  	%r3399, %r7, 1549556828;
	add.s32 	%r3400, %r3398, %r3399;
	add.s32 	%r3401, %r3400, %r3397;
	add.s32 	%r2770, %r3401, 1518500249;
	shf.l.wrap.b32 	%r2772, %r2762, %r2762, 30;
	shf.l.wrap.b32 	%r3402, %r2770, %r2770, 5;
	// begin inline asm
	lop3.b32 %r2765, %r2766, %r2772, %r2768, 202;
	// end inline asm
	add.s32 	%r3403, %r8880, %r2765;
	xor.b32  	%r3404, %r8, 1549556828;
	add.s32 	%r3405, %r3403, %r3404;
	add.s32 	%r3406, %r3405, %r3402;
	add.s32 	%r2774, %r3406, 1518500249;
	shf.l.wrap.b32 	%r2776, %r2766, %r2766, 30;
	shf.l.wrap.b32 	%r3407, %r2774, %r2774, 5;
	// begin inline asm
	lop3.b32 %r2769, %r2770, %r2776, %r2772, 202;
	// end inline asm
	add.s32 	%r3408, %r2768, %r2769;
	add.s32 	%r3409, %r3408, %r3407;
	add.s32 	%r2778, %r3409, -1226910219;
	shf.l.wrap.b32 	%r2780, %r2770, %r2770, 30;
	shf.l.wrap.b32 	%r3410, %r2778, %r2778, 5;
	// begin inline asm
	lop3.b32 %r2773, %r2774, %r2780, %r2776, 202;
	// end inline asm
	add.s32 	%r3411, %r2772, %r2773;
	add.s32 	%r3412, %r3411, %r3410;
	add.s32 	%r2782, %r3412, -1226910219;
	shf.l.wrap.b32 	%r2784, %r2774, %r2774, 30;
	shf.l.wrap.b32 	%r3413, %r2782, %r2782, 5;
	// begin inline asm
	lop3.b32 %r2777, %r2778, %r2784, %r2780, 202;
	// end inline asm
	add.s32 	%r3414, %r2777, %r2776;
	add.s32 	%r3415, %r3414, %r3413;
	add.s32 	%r2786, %r3415, -1226910219;
	shf.l.wrap.b32 	%r2788, %r2778, %r2778, 30;
	shf.l.wrap.b32 	%r3416, %r2786, %r2786, 5;
	// begin inline asm
	lop3.b32 %r2781, %r2782, %r2788, %r2784, 202;
	// end inline asm
	add.s32 	%r3417, %r2781, %r2780;
	add.s32 	%r3418, %r3417, %r3416;
	add.s32 	%r2790, %r3418, -1226910219;
	shf.l.wrap.b32 	%r2792, %r2782, %r2782, 30;
	shf.l.wrap.b32 	%r3419, %r2790, %r2790, 5;
	// begin inline asm
	lop3.b32 %r2785, %r2786, %r2792, %r2788, 202;
	// end inline asm
	add.s32 	%r3420, %r2785, %r2784;
	add.s32 	%r3421, %r3420, %r3419;
	add.s32 	%r2794, %r3421, -1226910219;
	shf.l.wrap.b32 	%r2796, %r2786, %r2786, 30;
	shf.l.wrap.b32 	%r3422, %r2794, %r2794, 5;
	// begin inline asm
	lop3.b32 %r2789, %r2790, %r2796, %r2792, 202;
	// end inline asm
	add.s32 	%r3423, %r2789, %r2788;
	add.s32 	%r3424, %r3423, %r3422;
	add.s32 	%r2798, %r3424, -1226910219;
	shf.l.wrap.b32 	%r2800, %r2790, %r2790, 30;
	shf.l.wrap.b32 	%r3425, %r2798, %r2798, 5;
	// begin inline asm
	lop3.b32 %r2793, %r2794, %r2800, %r2796, 202;
	// end inline asm
	add.s32 	%r3426, %r2793, %r2792;
	add.s32 	%r3427, %r3426, %r3425;
	add.s32 	%r2802, %r3427, -1226910219;
	shf.l.wrap.b32 	%r2804, %r2794, %r2794, 30;
	shf.l.wrap.b32 	%r3428, %r2802, %r2802, 5;
	// begin inline asm
	lop3.b32 %r2797, %r2798, %r2804, %r2800, 202;
	// end inline asm
	add.s32 	%r3429, %r2797, %r2796;
	add.s32 	%r3430, %r3429, %r3428;
	add.s32 	%r2806, %r3430, -1226910219;
	shf.l.wrap.b32 	%r2808, %r2798, %r2798, 30;
	shf.l.wrap.b32 	%r3431, %r2806, %r2806, 5;
	// begin inline asm
	lop3.b32 %r2801, %r2802, %r2808, %r2804, 202;
	// end inline asm
	add.s32 	%r3432, %r2801, %r2800;
	add.s32 	%r3433, %r3432, %r3431;
	add.s32 	%r2810, %r3433, -1226910219;
	shf.l.wrap.b32 	%r2812, %r2802, %r2802, 30;
	shf.l.wrap.b32 	%r3434, %r2810, %r2810, 5;
	// begin inline asm
	lop3.b32 %r2805, %r2806, %r2812, %r2808, 202;
	// end inline asm
	add.s32 	%r3435, %r2805, %r2804;
	add.s32 	%r3436, %r3435, %r3434;
	add.s32 	%r2814, %r3436, -1226910219;
	shf.l.wrap.b32 	%r2816, %r2806, %r2806, 30;
	shf.l.wrap.b32 	%r3437, %r2814, %r2814, 5;
	// begin inline asm
	lop3.b32 %r2809, %r2810, %r2816, %r2812, 202;
	// end inline asm
	add.s32 	%r3438, %r2809, %r2808;
	add.s32 	%r3439, %r3438, %r3437;
	add.s32 	%r2818, %r3439, -1226910219;
	shf.l.wrap.b32 	%r2820, %r2810, %r2810, 30;
	shf.l.wrap.b32 	%r3440, %r2818, %r2818, 5;
	// begin inline asm
	lop3.b32 %r2813, %r2814, %r2820, %r2816, 202;
	// end inline asm
	add.s32 	%r3441, %r2813, %r10;
	add.s32 	%r3442, %r3441, %r2812;
	add.s32 	%r3443, %r3442, %r3440;
	add.s32 	%r2822, %r3443, 1518500249;
	shf.l.wrap.b32 	%r2824, %r2814, %r2814, 30;
	shf.l.wrap.b32 	%r3444, %r2822, %r2822, 5;
	// begin inline asm
	lop3.b32 %r2817, %r2818, %r2824, %r2820, 202;
	// end inline asm
	add.s32 	%r3445, %r2817, %r11;
	add.s32 	%r3446, %r3445, %r2816;
	add.s32 	%r3447, %r3446, %r3444;
	add.s32 	%r2826, %r3447, 1518500249;
	shf.l.wrap.b32 	%r2828, %r2818, %r2818, 30;
	shf.l.wrap.b32 	%r3448, %r2826, %r2826, 5;
	// begin inline asm
	lop3.b32 %r2821, %r2822, %r2828, %r2824, 202;
	// end inline asm
	add.s32 	%r3449, %r2821, %r12;
	add.s32 	%r3450, %r3449, %r2820;
	add.s32 	%r3451, %r3450, %r3448;
	add.s32 	%r2830, %r3451, 1518500249;
	shf.l.wrap.b32 	%r2832, %r2822, %r2822, 30;
	shf.l.wrap.b32 	%r3452, %r2830, %r2830, 5;
	// begin inline asm
	lop3.b32 %r2825, %r2826, %r2832, %r2828, 202;
	// end inline asm
	xor.b32  	%r3453, %r10, %r3399;
	shf.l.wrap.b32 	%r3454, %r3453, %r3453, 1;
	add.s32 	%r3455, %r2825, %r3454;
	add.s32 	%r3456, %r3455, %r2824;
	add.s32 	%r3457, %r3456, %r3452;
	add.s32 	%r2834, %r3457, 1518500249;
	shf.l.wrap.b32 	%r2836, %r2826, %r2826, 30;
	shf.l.wrap.b32 	%r3458, %r2834, %r2834, 5;
	// begin inline asm
	lop3.b32 %r2829, %r2830, %r2836, %r2832, 150;
	// end inline asm
	xor.b32  	%r3459, %r11, %r3404;
	shf.l.wrap.b32 	%r3460, %r3459, %r3459, 1;
	add.s32 	%r3461, %r2829, %r3460;
	add.s32 	%r3462, %r3461, %r2828;
	add.s32 	%r3463, %r3462, %r3458;
	add.s32 	%r2838, %r3463, 1859775393;
	shf.l.wrap.b32 	%r2840, %r2830, %r2830, 30;
	shf.l.wrap.b32 	%r3464, %r2838, %r2838, 5;
	// begin inline asm
	lop3.b32 %r2833, %r2834, %r2840, %r2836, 150;
	// end inline asm
	xor.b32  	%r3465, %r12, 1549556828;
	shf.l.wrap.b32 	%r3466, %r3465, %r3465, 1;
	add.s32 	%r3467, %r2833, %r3466;
	add.s32 	%r3468, %r3467, %r2832;
	add.s32 	%r3469, %r3468, %r3464;
	add.s32 	%r2842, %r3469, 1859775393;
	shf.l.wrap.b32 	%r2844, %r2834, %r2834, 30;
	shf.l.wrap.b32 	%r3470, %r2842, %r2842, 5;
	// begin inline asm
	lop3.b32 %r2837, %r2838, %r2844, %r2840, 150;
	// end inline asm
	xor.b32  	%r3471, %r3454, 1549556828;
	shf.l.wrap.b32 	%r3472, %r3471, %r3471, 1;
	add.s32 	%r3473, %r2837, %r3472;
	add.s32 	%r3474, %r3473, %r2836;
	add.s32 	%r3475, %r3474, %r3470;
	add.s32 	%r2846, %r3475, 1859775393;
	shf.l.wrap.b32 	%r2848, %r2838, %r2838, 30;
	shf.l.wrap.b32 	%r3476, %r2846, %r2846, 5;
	// begin inline asm
	lop3.b32 %r2841, %r2842, %r2848, %r2844, 150;
	// end inline asm
	xor.b32  	%r3477, %r3460, 1549556828;
	shf.l.wrap.b32 	%r3478, %r3477, %r3477, 1;
	add.s32 	%r3479, %r2841, %r3478;
	add.s32 	%r3480, %r3479, %r2840;
	add.s32 	%r3481, %r3480, %r3476;
	add.s32 	%r2850, %r3481, 1859775393;
	shf.l.wrap.b32 	%r2852, %r2842, %r2842, 30;
	shf.l.wrap.b32 	%r3482, %r2850, %r2850, 5;
	// begin inline asm
	lop3.b32 %r2845, %r2846, %r2852, %r2848, 150;
	// end inline asm
	xor.b32  	%r3483, %r3466, %r10;
	shf.l.wrap.b32 	%r3484, %r3483, %r3483, 1;
	add.s32 	%r3485, %r2845, %r3484;
	add.s32 	%r3486, %r3485, %r2844;
	add.s32 	%r3487, %r3486, %r3482;
	add.s32 	%r2854, %r3487, 1859775393;
	shf.l.wrap.b32 	%r2856, %r2846, %r2846, 30;
	shf.l.wrap.b32 	%r3488, %r2854, %r2854, 5;
	// begin inline asm
	lop3.b32 %r2849, %r2850, %r2856, %r2852, 150;
	// end inline asm
	xor.b32  	%r3489, %r3472, %r11;
	shf.l.wrap.b32 	%r3490, %r3489, %r3489, 1;
	add.s32 	%r3491, %r2849, %r3490;
	add.s32 	%r3492, %r3491, %r2848;
	add.s32 	%r3493, %r3492, %r3488;
	add.s32 	%r2858, %r3493, 1859775393;
	shf.l.wrap.b32 	%r2860, %r2850, %r2850, 30;
	shf.l.wrap.b32 	%r3494, %r2858, %r2858, 5;
	// begin inline asm
	lop3.b32 %r2853, %r2854, %r2860, %r2856, 150;
	// end inline asm
	xor.b32  	%r3495, %r3478, %r12;
	shf.l.wrap.b32 	%r3496, %r3495, %r3495, 1;
	add.s32 	%r3497, %r2853, %r3496;
	add.s32 	%r3498, %r3497, %r2852;
	add.s32 	%r3499, %r3498, %r3494;
	add.s32 	%r2862, %r3499, 1859775393;
	shf.l.wrap.b32 	%r2864, %r2854, %r2854, 30;
	shf.l.wrap.b32 	%r3500, %r2862, %r2862, 5;
	// begin inline asm
	lop3.b32 %r2857, %r2858, %r2864, %r2860, 150;
	// end inline asm
	xor.b32  	%r3501, %r3484, %r3454;
	shf.l.wrap.b32 	%r3502, %r3501, %r3501, 1;
	add.s32 	%r3503, %r2857, %r3502;
	add.s32 	%r3504, %r3503, %r2856;
	add.s32 	%r3505, %r3504, %r3500;
	add.s32 	%r2866, %r3505, 1859775393;
	shf.l.wrap.b32 	%r2868, %r2858, %r2858, 30;
	shf.l.wrap.b32 	%r3506, %r2866, %r2866, 5;
	// begin inline asm
	lop3.b32 %r2861, %r2862, %r2868, %r2864, 150;
	// end inline asm
	xor.b32  	%r3507, %r3490, %r3460;
	shf.l.wrap.b32 	%r3508, %r3507, %r3507, 1;
	add.s32 	%r3509, %r2861, %r3508;
	add.s32 	%r3510, %r3509, %r2860;
	add.s32 	%r3511, %r3510, %r3506;
	add.s32 	%r2870, %r3511, 1859775393;
	shf.l.wrap.b32 	%r2872, %r2862, %r2862, 30;
	shf.l.wrap.b32 	%r3512, %r2870, %r2870, 5;
	// begin inline asm
	lop3.b32 %r2865, %r2866, %r2872, %r2868, 150;
	// end inline asm
	xor.b32  	%r3513, %r3496, %r3466;
	shf.l.wrap.b32 	%r3514, %r3513, %r3513, 1;
	add.s32 	%r3515, %r2865, %r3514;
	add.s32 	%r3516, %r3515, %r2864;
	add.s32 	%r3517, %r3516, %r3512;
	add.s32 	%r2874, %r3517, 1859775393;
	shf.l.wrap.b32 	%r2876, %r2866, %r2866, 30;
	shf.l.wrap.b32 	%r3518, %r2874, %r2874, 5;
	// begin inline asm
	lop3.b32 %r2869, %r2870, %r2876, %r2872, 150;
	// end inline asm
	xor.b32  	%r3519, %r3472, %r10;
	xor.b32  	%r3520, %r3519, %r3502;
	xor.b32  	%r3521, %r3520, 1549556828;
	shf.l.wrap.b32 	%r3522, %r3521, %r3521, 1;
	add.s32 	%r3523, %r2869, %r3522;
	add.s32 	%r3524, %r3523, %r2868;
	add.s32 	%r3525, %r3524, %r3518;
	add.s32 	%r2878, %r3525, 1859775393;
	shf.l.wrap.b32 	%r2880, %r2870, %r2870, 30;
	shf.l.wrap.b32 	%r3526, %r2878, %r2878, 5;
	// begin inline asm
	lop3.b32 %r2873, %r2874, %r2880, %r2876, 150;
	// end inline asm
	xor.b32  	%r3527, %r3478, %r11;
	xor.b32  	%r3528, %r3527, %r3508;
	xor.b32  	%r3529, %r3528, 1549556828;
	shf.l.wrap.b32 	%r3530, %r3529, %r3529, 1;
	add.s32 	%r3531, %r2873, %r3530;
	add.s32 	%r3532, %r3531, %r2872;
	add.s32 	%r3533, %r3532, %r3526;
	add.s32 	%r2882, %r3533, 1859775393;
	shf.l.wrap.b32 	%r2884, %r2874, %r2874, 30;
	shf.l.wrap.b32 	%r3534, %r2882, %r2882, 5;
	// begin inline asm
	lop3.b32 %r2877, %r2878, %r2884, %r2880, 150;
	// end inline asm
	xor.b32  	%r3535, %r13, %r3484;
	xor.b32  	%r3536, %r3535, %r3514;
	shf.l.wrap.b32 	%r3537, %r3536, %r3536, 1;
	add.s32 	%r3538, %r2877, %r3537;
	add.s32 	%r3539, %r3538, %r2876;
	add.s32 	%r3540, %r3539, %r3534;
	add.s32 	%r2886, %r3540, 1859775393;
	shf.l.wrap.b32 	%r2888, %r2878, %r2878, 30;
	shf.l.wrap.b32 	%r3541, %r2886, %r2886, 5;
	// begin inline asm
	lop3.b32 %r2881, %r2882, %r2888, %r2884, 150;
	// end inline asm
	xor.b32  	%r3542, %r3454, %r11;
	xor.b32  	%r3543, %r3542, %r3490;
	xor.b32  	%r3544, %r3543, %r3522;
	shf.l.wrap.b32 	%r3545, %r3544, %r3544, 1;
	add.s32 	%r3546, %r2881, %r3545;
	add.s32 	%r3547, %r3546, %r2880;
	add.s32 	%r3548, %r3547, %r3541;
	add.s32 	%r2890, %r3548, 1859775393;
	shf.l.wrap.b32 	%r2892, %r2882, %r2882, 30;
	shf.l.wrap.b32 	%r3549, %r2890, %r2890, 5;
	// begin inline asm
	lop3.b32 %r2885, %r2886, %r2892, %r2888, 150;
	// end inline asm
	xor.b32  	%r3550, %r3460, %r12;
	xor.b32  	%r3551, %r3550, %r3496;
	xor.b32  	%r3552, %r3551, %r3530;
	shf.l.wrap.b32 	%r3553, %r3552, %r3552, 1;
	add.s32 	%r3554, %r2885, %r3553;
	add.s32 	%r3555, %r3554, %r2884;
	add.s32 	%r3556, %r3555, %r3549;
	add.s32 	%r2894, %r3556, 1859775393;
	shf.l.wrap.b32 	%r2896, %r2886, %r2886, 30;
	shf.l.wrap.b32 	%r3557, %r2894, %r2894, 5;
	// begin inline asm
	lop3.b32 %r2889, %r2890, %r2896, %r2892, 150;
	// end inline asm
	xor.b32  	%r3558, %r3466, %r3454;
	xor.b32  	%r3559, %r3558, %r3502;
	xor.b32  	%r3560, %r3559, %r3537;
	shf.l.wrap.b32 	%r3561, %r3560, %r3560, 1;
	add.s32 	%r3562, %r2889, %r3561;
	add.s32 	%r3563, %r3562, %r2888;
	add.s32 	%r3564, %r3563, %r3557;
	add.s32 	%r2898, %r3564, 1859775393;
	shf.l.wrap.b32 	%r2900, %r2890, %r2890, 30;
	shf.l.wrap.b32 	%r3565, %r2898, %r2898, 5;
	// begin inline asm
	lop3.b32 %r2893, %r2894, %r2900, %r2896, 150;
	// end inline asm
	xor.b32  	%r3566, %r3472, %r3460;
	xor.b32  	%r3567, %r3566, %r3508;
	xor.b32  	%r3568, %r3567, %r3545;
	shf.l.wrap.b32 	%r3569, %r3568, %r3568, 1;
	add.s32 	%r3570, %r2893, %r3569;
	add.s32 	%r3571, %r3570, %r2892;
	add.s32 	%r3572, %r3571, %r3565;
	add.s32 	%r2902, %r3572, 1859775393;
	shf.l.wrap.b32 	%r2904, %r2894, %r2894, 30;
	shf.l.wrap.b32 	%r3573, %r2902, %r2902, 5;
	// begin inline asm
	lop3.b32 %r2897, %r2898, %r2904, %r2900, 150;
	// end inline asm
	xor.b32  	%r3574, %r3478, %r3466;
	xor.b32  	%r3575, %r3574, %r3514;
	xor.b32  	%r3576, %r3575, %r3553;
	shf.l.wrap.b32 	%r3577, %r3576, %r3576, 1;
	add.s32 	%r3578, %r2897, %r3577;
	add.s32 	%r3579, %r3578, %r2896;
	add.s32 	%r3580, %r3579, %r3573;
	add.s32 	%r2906, %r3580, 1859775393;
	shf.l.wrap.b32 	%r2908, %r2898, %r2898, 30;
	shf.l.wrap.b32 	%r3581, %r2906, %r2906, 5;
	// begin inline asm
	lop3.b32 %r2901, %r2902, %r2908, %r2904, 150;
	// end inline asm
	xor.b32  	%r3582, %r3484, %r3472;
	xor.b32  	%r3583, %r3582, %r3522;
	xor.b32  	%r3584, %r3583, %r3561;
	shf.l.wrap.b32 	%r3585, %r3584, %r3584, 1;
	add.s32 	%r3586, %r2901, %r3585;
	add.s32 	%r3587, %r3586, %r2900;
	add.s32 	%r3588, %r3587, %r3581;
	add.s32 	%r2910, %r3588, 1859775393;
	shf.l.wrap.b32 	%r2912, %r2902, %r2902, 30;
	shf.l.wrap.b32 	%r3589, %r2910, %r2910, 5;
	// begin inline asm
	lop3.b32 %r2905, %r2906, %r2912, %r2908, 150;
	// end inline asm
	xor.b32  	%r3590, %r3490, %r3478;
	xor.b32  	%r3591, %r3590, %r3530;
	xor.b32  	%r3592, %r3591, %r3569;
	shf.l.wrap.b32 	%r3593, %r3592, %r3592, 1;
	add.s32 	%r3594, %r2905, %r3593;
	add.s32 	%r3595, %r3594, %r2904;
	add.s32 	%r3596, %r3595, %r3589;
	add.s32 	%r2914, %r3596, 1859775393;
	shf.l.wrap.b32 	%r2916, %r2906, %r2906, 30;
	shf.l.wrap.b32 	%r3597, %r2914, %r2914, 5;
	// begin inline asm
	lop3.b32 %r2909, %r2910, %r2916, %r2912, 232;
	// end inline asm
	xor.b32  	%r3598, %r3496, %r3484;
	xor.b32  	%r3599, %r3598, %r3537;
	xor.b32  	%r3600, %r3599, %r3577;
	shf.l.wrap.b32 	%r3601, %r3600, %r3600, 1;
	add.s32 	%r3602, %r2909, %r3601;
	add.s32 	%r3603, %r3602, %r2908;
	add.s32 	%r3604, %r3603, %r3597;
	add.s32 	%r2918, %r3604, -1894007588;
	shf.l.wrap.b32 	%r2920, %r2910, %r2910, 30;
	shf.l.wrap.b32 	%r3605, %r2918, %r2918, 5;
	// begin inline asm
	lop3.b32 %r2913, %r2914, %r2920, %r2916, 232;
	// end inline asm
	xor.b32  	%r3606, %r3502, %r3490;
	xor.b32  	%r3607, %r3606, %r3545;
	xor.b32  	%r3608, %r3607, %r3585;
	shf.l.wrap.b32 	%r3609, %r3608, %r3608, 1;
	add.s32 	%r3610, %r2913, %r3609;
	add.s32 	%r3611, %r3610, %r2912;
	add.s32 	%r3612, %r3611, %r3605;
	add.s32 	%r2922, %r3612, -1894007588;
	shf.l.wrap.b32 	%r2924, %r2914, %r2914, 30;
	shf.l.wrap.b32 	%r3613, %r2922, %r2922, 5;
	// begin inline asm
	lop3.b32 %r2917, %r2918, %r2924, %r2920, 232;
	// end inline asm
	xor.b32  	%r3614, %r3508, %r3496;
	xor.b32  	%r3615, %r3614, %r3553;
	xor.b32  	%r3616, %r3615, %r3593;
	shf.l.wrap.b32 	%r3617, %r3616, %r3616, 1;
	add.s32 	%r3618, %r2917, %r3617;
	add.s32 	%r3619, %r3618, %r2916;
	add.s32 	%r3620, %r3619, %r3613;
	add.s32 	%r2926, %r3620, -1894007588;
	shf.l.wrap.b32 	%r2928, %r2918, %r2918, 30;
	shf.l.wrap.b32 	%r3621, %r2926, %r2926, 5;
	// begin inline asm
	lop3.b32 %r2921, %r2922, %r2928, %r2924, 232;
	// end inline asm
	xor.b32  	%r3622, %r3514, %r3502;
	xor.b32  	%r3623, %r3622, %r3561;
	xor.b32  	%r3624, %r3623, %r3601;
	shf.l.wrap.b32 	%r3625, %r3624, %r3624, 1;
	add.s32 	%r3626, %r2921, %r3625;
	add.s32 	%r3627, %r3626, %r2920;
	add.s32 	%r3628, %r3627, %r3621;
	add.s32 	%r2930, %r3628, -1894007588;
	shf.l.wrap.b32 	%r2932, %r2922, %r2922, 30;
	shf.l.wrap.b32 	%r3629, %r2930, %r2930, 5;
	// begin inline asm
	lop3.b32 %r2925, %r2926, %r2932, %r2928, 232;
	// end inline asm
	xor.b32  	%r3630, %r3522, %r3508;
	xor.b32  	%r3631, %r3630, %r3569;
	xor.b32  	%r3632, %r3631, %r3609;
	shf.l.wrap.b32 	%r3633, %r3632, %r3632, 1;
	add.s32 	%r3634, %r2925, %r3633;
	add.s32 	%r3635, %r3634, %r2924;
	add.s32 	%r3636, %r3635, %r3629;
	add.s32 	%r2934, %r3636, -1894007588;
	shf.l.wrap.b32 	%r2936, %r2926, %r2926, 30;
	shf.l.wrap.b32 	%r3637, %r2934, %r2934, 5;
	// begin inline asm
	lop3.b32 %r2929, %r2930, %r2936, %r2932, 232;
	// end inline asm
	xor.b32  	%r3638, %r3530, %r3514;
	xor.b32  	%r3639, %r3638, %r3577;
	xor.b32  	%r3640, %r3639, %r3617;
	shf.l.wrap.b32 	%r3641, %r3640, %r3640, 1;
	add.s32 	%r3642, %r2929, %r3641;
	add.s32 	%r3643, %r3642, %r2928;
	add.s32 	%r3644, %r3643, %r3637;
	add.s32 	%r2938, %r3644, -1894007588;
	shf.l.wrap.b32 	%r2940, %r2930, %r2930, 30;
	shf.l.wrap.b32 	%r3645, %r2938, %r2938, 5;
	// begin inline asm
	lop3.b32 %r2933, %r2934, %r2940, %r2936, 232;
	// end inline asm
	xor.b32  	%r3646, %r3537, %r3522;
	xor.b32  	%r3647, %r3646, %r3585;
	xor.b32  	%r3648, %r3647, %r3625;
	shf.l.wrap.b32 	%r3649, %r3648, %r3648, 1;
	add.s32 	%r3650, %r2933, %r3649;
	add.s32 	%r3651, %r3650, %r2932;
	add.s32 	%r3652, %r3651, %r3645;
	add.s32 	%r2942, %r3652, -1894007588;
	shf.l.wrap.b32 	%r2944, %r2934, %r2934, 30;
	shf.l.wrap.b32 	%r3653, %r2942, %r2942, 5;
	// begin inline asm
	lop3.b32 %r2937, %r2938, %r2944, %r2940, 232;
	// end inline asm
	xor.b32  	%r3654, %r3545, %r3530;
	xor.b32  	%r3655, %r3654, %r3593;
	xor.b32  	%r3656, %r3655, %r3633;
	shf.l.wrap.b32 	%r3657, %r3656, %r3656, 1;
	add.s32 	%r3658, %r2937, %r3657;
	add.s32 	%r3659, %r3658, %r2936;
	add.s32 	%r3660, %r3659, %r3653;
	add.s32 	%r2946, %r3660, -1894007588;
	shf.l.wrap.b32 	%r2948, %r2938, %r2938, 30;
	shf.l.wrap.b32 	%r3661, %r2946, %r2946, 5;
	// begin inline asm
	lop3.b32 %r2941, %r2942, %r2948, %r2944, 232;
	// end inline asm
	xor.b32  	%r3662, %r3553, %r3537;
	xor.b32  	%r3663, %r3662, %r3601;
	xor.b32  	%r3664, %r3663, %r3641;
	shf.l.wrap.b32 	%r3665, %r3664, %r3664, 1;
	add.s32 	%r3666, %r2941, %r3665;
	add.s32 	%r3667, %r3666, %r2940;
	add.s32 	%r3668, %r3667, %r3661;
	add.s32 	%r2950, %r3668, -1894007588;
	shf.l.wrap.b32 	%r2952, %r2942, %r2942, 30;
	shf.l.wrap.b32 	%r3669, %r2950, %r2950, 5;
	// begin inline asm
	lop3.b32 %r2945, %r2946, %r2952, %r2948, 232;
	// end inline asm
	xor.b32  	%r3670, %r3561, %r3545;
	xor.b32  	%r3671, %r3670, %r3609;
	xor.b32  	%r3672, %r3671, %r3649;
	shf.l.wrap.b32 	%r3673, %r3672, %r3672, 1;
	add.s32 	%r3674, %r2945, %r3673;
	add.s32 	%r3675, %r3674, %r2944;
	add.s32 	%r3676, %r3675, %r3669;
	add.s32 	%r2954, %r3676, -1894007588;
	shf.l.wrap.b32 	%r2956, %r2946, %r2946, 30;
	shf.l.wrap.b32 	%r3677, %r2954, %r2954, 5;
	// begin inline asm
	lop3.b32 %r2949, %r2950, %r2956, %r2952, 232;
	// end inline asm
	xor.b32  	%r3678, %r3569, %r3553;
	xor.b32  	%r3679, %r3678, %r3617;
	xor.b32  	%r3680, %r3679, %r3657;
	shf.l.wrap.b32 	%r3681, %r3680, %r3680, 1;
	add.s32 	%r3682, %r2949, %r3681;
	add.s32 	%r3683, %r3682, %r2948;
	add.s32 	%r3684, %r3683, %r3677;
	add.s32 	%r2958, %r3684, -1894007588;
	shf.l.wrap.b32 	%r2960, %r2950, %r2950, 30;
	shf.l.wrap.b32 	%r3685, %r2958, %r2958, 5;
	// begin inline asm
	lop3.b32 %r2953, %r2954, %r2960, %r2956, 232;
	// end inline asm
	xor.b32  	%r3686, %r3577, %r3561;
	xor.b32  	%r3687, %r3686, %r3625;
	xor.b32  	%r3688, %r3687, %r3665;
	shf.l.wrap.b32 	%r3689, %r3688, %r3688, 1;
	add.s32 	%r3690, %r2953, %r3689;
	add.s32 	%r3691, %r3690, %r2952;
	add.s32 	%r3692, %r3691, %r3685;
	add.s32 	%r2962, %r3692, -1894007588;
	shf.l.wrap.b32 	%r2964, %r2954, %r2954, 30;
	shf.l.wrap.b32 	%r3693, %r2962, %r2962, 5;
	// begin inline asm
	lop3.b32 %r2957, %r2958, %r2964, %r2960, 232;
	// end inline asm
	xor.b32  	%r3694, %r3585, %r3569;
	xor.b32  	%r3695, %r3694, %r3633;
	xor.b32  	%r3696, %r3695, %r3673;
	shf.l.wrap.b32 	%r3697, %r3696, %r3696, 1;
	add.s32 	%r3698, %r2957, %r3697;
	add.s32 	%r3699, %r3698, %r2956;
	add.s32 	%r3700, %r3699, %r3693;
	add.s32 	%r2966, %r3700, -1894007588;
	shf.l.wrap.b32 	%r2968, %r2958, %r2958, 30;
	shf.l.wrap.b32 	%r3701, %r2966, %r2966, 5;
	// begin inline asm
	lop3.b32 %r2961, %r2962, %r2968, %r2964, 232;
	// end inline asm
	xor.b32  	%r3702, %r3593, %r3577;
	xor.b32  	%r3703, %r3702, %r3641;
	xor.b32  	%r3704, %r3703, %r3681;
	shf.l.wrap.b32 	%r3705, %r3704, %r3704, 1;
	add.s32 	%r3706, %r2961, %r3705;
	add.s32 	%r3707, %r3706, %r2960;
	add.s32 	%r3708, %r3707, %r3701;
	add.s32 	%r2970, %r3708, -1894007588;
	shf.l.wrap.b32 	%r2972, %r2962, %r2962, 30;
	shf.l.wrap.b32 	%r3709, %r2970, %r2970, 5;
	// begin inline asm
	lop3.b32 %r2965, %r2966, %r2972, %r2968, 232;
	// end inline asm
	xor.b32  	%r3710, %r3601, %r3585;
	xor.b32  	%r3711, %r3710, %r3649;
	xor.b32  	%r3712, %r3711, %r3689;
	shf.l.wrap.b32 	%r3713, %r3712, %r3712, 1;
	add.s32 	%r3714, %r2965, %r3713;
	add.s32 	%r3715, %r3714, %r2964;
	add.s32 	%r3716, %r3715, %r3709;
	add.s32 	%r2974, %r3716, -1894007588;
	shf.l.wrap.b32 	%r2976, %r2966, %r2966, 30;
	shf.l.wrap.b32 	%r3717, %r2974, %r2974, 5;
	// begin inline asm
	lop3.b32 %r2969, %r2970, %r2976, %r2972, 232;
	// end inline asm
	xor.b32  	%r3718, %r3609, %r3593;
	xor.b32  	%r3719, %r3718, %r3657;
	xor.b32  	%r3720, %r3719, %r3697;
	shf.l.wrap.b32 	%r3721, %r3720, %r3720, 1;
	add.s32 	%r3722, %r2969, %r3721;
	add.s32 	%r3723, %r3722, %r2968;
	add.s32 	%r3724, %r3723, %r3717;
	add.s32 	%r2978, %r3724, -1894007588;
	shf.l.wrap.b32 	%r2980, %r2970, %r2970, 30;
	shf.l.wrap.b32 	%r3725, %r2978, %r2978, 5;
	// begin inline asm
	lop3.b32 %r2973, %r2974, %r2980, %r2976, 232;
	// end inline asm
	xor.b32  	%r3726, %r3617, %r3601;
	xor.b32  	%r3727, %r3726, %r3665;
	xor.b32  	%r3728, %r3727, %r3705;
	shf.l.wrap.b32 	%r3729, %r3728, %r3728, 1;
	add.s32 	%r3730, %r2973, %r3729;
	add.s32 	%r3731, %r3730, %r2972;
	add.s32 	%r3732, %r3731, %r3725;
	add.s32 	%r2982, %r3732, -1894007588;
	shf.l.wrap.b32 	%r2984, %r2974, %r2974, 30;
	shf.l.wrap.b32 	%r3733, %r2982, %r2982, 5;
	// begin inline asm
	lop3.b32 %r2977, %r2978, %r2984, %r2980, 232;
	// end inline asm
	xor.b32  	%r3734, %r3625, %r3609;
	xor.b32  	%r3735, %r3734, %r3673;
	xor.b32  	%r3736, %r3735, %r3713;
	shf.l.wrap.b32 	%r3737, %r3736, %r3736, 1;
	add.s32 	%r3738, %r2977, %r3737;
	add.s32 	%r3739, %r3738, %r2976;
	add.s32 	%r3740, %r3739, %r3733;
	add.s32 	%r2986, %r3740, -1894007588;
	shf.l.wrap.b32 	%r2988, %r2978, %r2978, 30;
	shf.l.wrap.b32 	%r3741, %r2986, %r2986, 5;
	// begin inline asm
	lop3.b32 %r2981, %r2982, %r2988, %r2984, 232;
	// end inline asm
	xor.b32  	%r3742, %r3633, %r3617;
	xor.b32  	%r3743, %r3742, %r3681;
	xor.b32  	%r3744, %r3743, %r3721;
	shf.l.wrap.b32 	%r3745, %r3744, %r3744, 1;
	add.s32 	%r3746, %r2981, %r3745;
	add.s32 	%r3747, %r3746, %r2980;
	add.s32 	%r3748, %r3747, %r3741;
	add.s32 	%r2990, %r3748, -1894007588;
	shf.l.wrap.b32 	%r2992, %r2982, %r2982, 30;
	shf.l.wrap.b32 	%r3749, %r2990, %r2990, 5;
	// begin inline asm
	lop3.b32 %r2985, %r2986, %r2992, %r2988, 232;
	// end inline asm
	xor.b32  	%r3750, %r3641, %r3625;
	xor.b32  	%r3751, %r3750, %r3689;
	xor.b32  	%r3752, %r3751, %r3729;
	shf.l.wrap.b32 	%r3753, %r3752, %r3752, 1;
	add.s32 	%r3754, %r2985, %r3753;
	add.s32 	%r3755, %r3754, %r2984;
	add.s32 	%r3756, %r3755, %r3749;
	add.s32 	%r2994, %r3756, -1894007588;
	shf.l.wrap.b32 	%r2996, %r2986, %r2986, 30;
	shf.l.wrap.b32 	%r3757, %r2994, %r2994, 5;
	// begin inline asm
	lop3.b32 %r2989, %r2990, %r2996, %r2992, 150;
	// end inline asm
	xor.b32  	%r3758, %r3649, %r3633;
	xor.b32  	%r3759, %r3758, %r3697;
	xor.b32  	%r3760, %r3759, %r3737;
	shf.l.wrap.b32 	%r3761, %r3760, %r3760, 1;
	add.s32 	%r3762, %r2989, %r3761;
	add.s32 	%r3763, %r3762, %r2988;
	add.s32 	%r3764, %r3763, %r3757;
	add.s32 	%r2998, %r3764, -899497514;
	shf.l.wrap.b32 	%r3000, %r2990, %r2990, 30;
	shf.l.wrap.b32 	%r3765, %r2998, %r2998, 5;
	// begin inline asm
	lop3.b32 %r2993, %r2994, %r3000, %r2996, 150;
	// end inline asm
	xor.b32  	%r3766, %r3657, %r3641;
	xor.b32  	%r3767, %r3766, %r3705;
	xor.b32  	%r3768, %r3767, %r3745;
	shf.l.wrap.b32 	%r3769, %r3768, %r3768, 1;
	add.s32 	%r3770, %r2993, %r3769;
	add.s32 	%r3771, %r3770, %r2992;
	add.s32 	%r3772, %r3771, %r3765;
	add.s32 	%r3002, %r3772, -899497514;
	shf.l.wrap.b32 	%r3004, %r2994, %r2994, 30;
	shf.l.wrap.b32 	%r3773, %r3002, %r3002, 5;
	// begin inline asm
	lop3.b32 %r2997, %r2998, %r3004, %r3000, 150;
	// end inline asm
	xor.b32  	%r3774, %r3665, %r3649;
	xor.b32  	%r3775, %r3774, %r3713;
	xor.b32  	%r3776, %r3775, %r3753;
	shf.l.wrap.b32 	%r3777, %r3776, %r3776, 1;
	add.s32 	%r3778, %r2997, %r3777;
	add.s32 	%r3779, %r3778, %r2996;
	add.s32 	%r3780, %r3779, %r3773;
	add.s32 	%r3006, %r3780, -899497514;
	shf.l.wrap.b32 	%r3008, %r2998, %r2998, 30;
	shf.l.wrap.b32 	%r3781, %r3006, %r3006, 5;
	// begin inline asm
	lop3.b32 %r3001, %r3002, %r3008, %r3004, 150;
	// end inline asm
	xor.b32  	%r3782, %r3673, %r3657;
	xor.b32  	%r3783, %r3782, %r3721;
	xor.b32  	%r3784, %r3783, %r3761;
	shf.l.wrap.b32 	%r3785, %r3784, %r3784, 1;
	add.s32 	%r3786, %r3001, %r3785;
	add.s32 	%r3787, %r3786, %r3000;
	add.s32 	%r3788, %r3787, %r3781;
	add.s32 	%r3010, %r3788, -899497514;
	shf.l.wrap.b32 	%r3012, %r3002, %r3002, 30;
	shf.l.wrap.b32 	%r3789, %r3010, %r3010, 5;
	// begin inline asm
	lop3.b32 %r3005, %r3006, %r3012, %r3008, 150;
	// end inline asm
	xor.b32  	%r3790, %r3681, %r3665;
	xor.b32  	%r3791, %r3790, %r3729;
	xor.b32  	%r3792, %r3791, %r3769;
	shf.l.wrap.b32 	%r3793, %r3792, %r3792, 1;
	add.s32 	%r3794, %r3005, %r3793;
	add.s32 	%r3795, %r3794, %r3004;
	add.s32 	%r3796, %r3795, %r3789;
	add.s32 	%r3014, %r3796, -899497514;
	shf.l.wrap.b32 	%r3016, %r3006, %r3006, 30;
	shf.l.wrap.b32 	%r3797, %r3014, %r3014, 5;
	// begin inline asm
	lop3.b32 %r3009, %r3010, %r3016, %r3012, 150;
	// end inline asm
	xor.b32  	%r3798, %r3689, %r3673;
	xor.b32  	%r3799, %r3798, %r3737;
	xor.b32  	%r3800, %r3799, %r3777;
	shf.l.wrap.b32 	%r3801, %r3800, %r3800, 1;
	add.s32 	%r3802, %r3009, %r3801;
	add.s32 	%r3803, %r3802, %r3008;
	add.s32 	%r3804, %r3803, %r3797;
	add.s32 	%r3018, %r3804, -899497514;
	shf.l.wrap.b32 	%r3020, %r3010, %r3010, 30;
	shf.l.wrap.b32 	%r3805, %r3018, %r3018, 5;
	// begin inline asm
	lop3.b32 %r3013, %r3014, %r3020, %r3016, 150;
	// end inline asm
	xor.b32  	%r3806, %r3697, %r3681;
	xor.b32  	%r3807, %r3806, %r3745;
	xor.b32  	%r3808, %r3807, %r3785;
	shf.l.wrap.b32 	%r3809, %r3808, %r3808, 1;
	add.s32 	%r3810, %r3013, %r3809;
	add.s32 	%r3811, %r3810, %r3012;
	add.s32 	%r3812, %r3811, %r3805;
	add.s32 	%r3022, %r3812, -899497514;
	shf.l.wrap.b32 	%r3024, %r3014, %r3014, 30;
	shf.l.wrap.b32 	%r3813, %r3022, %r3022, 5;
	// begin inline asm
	lop3.b32 %r3017, %r3018, %r3024, %r3020, 150;
	// end inline asm
	xor.b32  	%r3814, %r3705, %r3689;
	xor.b32  	%r3815, %r3814, %r3753;
	xor.b32  	%r3816, %r3815, %r3793;
	shf.l.wrap.b32 	%r3817, %r3816, %r3816, 1;
	add.s32 	%r3818, %r3017, %r3817;
	add.s32 	%r3819, %r3818, %r3016;
	add.s32 	%r3820, %r3819, %r3813;
	add.s32 	%r3026, %r3820, -899497514;
	shf.l.wrap.b32 	%r3028, %r3018, %r3018, 30;
	shf.l.wrap.b32 	%r3821, %r3026, %r3026, 5;
	// begin inline asm
	lop3.b32 %r3021, %r3022, %r3028, %r3024, 150;
	// end inline asm
	xor.b32  	%r3822, %r3713, %r3697;
	xor.b32  	%r3823, %r3822, %r3761;
	xor.b32  	%r3824, %r3823, %r3801;
	shf.l.wrap.b32 	%r3825, %r3824, %r3824, 1;
	add.s32 	%r3826, %r3021, %r3825;
	add.s32 	%r3827, %r3826, %r3020;
	add.s32 	%r3828, %r3827, %r3821;
	add.s32 	%r3030, %r3828, -899497514;
	shf.l.wrap.b32 	%r3032, %r3022, %r3022, 30;
	shf.l.wrap.b32 	%r3829, %r3030, %r3030, 5;
	// begin inline asm
	lop3.b32 %r3025, %r3026, %r3032, %r3028, 150;
	// end inline asm
	xor.b32  	%r3830, %r3721, %r3705;
	xor.b32  	%r3831, %r3830, %r3769;
	xor.b32  	%r3832, %r3831, %r3809;
	shf.l.wrap.b32 	%r3833, %r3832, %r3832, 1;
	add.s32 	%r3834, %r3025, %r3833;
	add.s32 	%r3835, %r3834, %r3024;
	add.s32 	%r3836, %r3835, %r3829;
	add.s32 	%r3034, %r3836, -899497514;
	shf.l.wrap.b32 	%r3036, %r3026, %r3026, 30;
	shf.l.wrap.b32 	%r3837, %r3034, %r3034, 5;
	// begin inline asm
	lop3.b32 %r3029, %r3030, %r3036, %r3032, 150;
	// end inline asm
	xor.b32  	%r3838, %r3729, %r3713;
	xor.b32  	%r3839, %r3838, %r3777;
	xor.b32  	%r3840, %r3839, %r3817;
	shf.l.wrap.b32 	%r3841, %r3840, %r3840, 1;
	add.s32 	%r3842, %r3029, %r3841;
	add.s32 	%r3843, %r3842, %r3028;
	add.s32 	%r3844, %r3843, %r3837;
	add.s32 	%r3038, %r3844, -899497514;
	shf.l.wrap.b32 	%r3040, %r3030, %r3030, 30;
	shf.l.wrap.b32 	%r3845, %r3038, %r3038, 5;
	// begin inline asm
	lop3.b32 %r3033, %r3034, %r3040, %r3036, 150;
	// end inline asm
	xor.b32  	%r3846, %r3737, %r3721;
	xor.b32  	%r3847, %r3846, %r3785;
	xor.b32  	%r3848, %r3847, %r3825;
	shf.l.wrap.b32 	%r3849, %r3848, %r3848, 1;
	add.s32 	%r3850, %r3033, %r3849;
	add.s32 	%r3851, %r3850, %r3032;
	add.s32 	%r3852, %r3851, %r3845;
	add.s32 	%r3042, %r3852, -899497514;
	shf.l.wrap.b32 	%r3044, %r3034, %r3034, 30;
	shf.l.wrap.b32 	%r3853, %r3042, %r3042, 5;
	// begin inline asm
	lop3.b32 %r3037, %r3038, %r3044, %r3040, 150;
	// end inline asm
	xor.b32  	%r3854, %r3745, %r3729;
	xor.b32  	%r3855, %r3854, %r3793;
	xor.b32  	%r3856, %r3855, %r3833;
	shf.l.wrap.b32 	%r3857, %r3856, %r3856, 1;
	add.s32 	%r3858, %r3037, %r3857;
	add.s32 	%r3859, %r3858, %r3036;
	add.s32 	%r3860, %r3859, %r3853;
	add.s32 	%r3046, %r3860, -899497514;
	shf.l.wrap.b32 	%r3048, %r3038, %r3038, 30;
	shf.l.wrap.b32 	%r3861, %r3046, %r3046, 5;
	// begin inline asm
	lop3.b32 %r3041, %r3042, %r3048, %r3044, 150;
	// end inline asm
	xor.b32  	%r3862, %r3753, %r3737;
	xor.b32  	%r3863, %r3862, %r3801;
	xor.b32  	%r3864, %r3863, %r3841;
	shf.l.wrap.b32 	%r3865, %r3864, %r3864, 1;
	add.s32 	%r3866, %r3041, %r3865;
	add.s32 	%r3867, %r3866, %r3040;
	add.s32 	%r3868, %r3867, %r3861;
	add.s32 	%r3050, %r3868, -899497514;
	shf.l.wrap.b32 	%r3052, %r3042, %r3042, 30;
	shf.l.wrap.b32 	%r3869, %r3050, %r3050, 5;
	// begin inline asm
	lop3.b32 %r3045, %r3046, %r3052, %r3048, 150;
	// end inline asm
	xor.b32  	%r3870, %r3761, %r3745;
	xor.b32  	%r3871, %r3870, %r3809;
	xor.b32  	%r3872, %r3871, %r3849;
	shf.l.wrap.b32 	%r3873, %r3872, %r3872, 1;
	add.s32 	%r3874, %r3045, %r3873;
	add.s32 	%r3875, %r3874, %r3044;
	add.s32 	%r3876, %r3875, %r3869;
	add.s32 	%r3054, %r3876, -899497514;
	shf.l.wrap.b32 	%r3056, %r3046, %r3046, 30;
	shf.l.wrap.b32 	%r3877, %r3054, %r3054, 5;
	// begin inline asm
	lop3.b32 %r3049, %r3050, %r3056, %r3052, 150;
	// end inline asm
	xor.b32  	%r3878, %r3769, %r3753;
	xor.b32  	%r3879, %r3878, %r3817;
	xor.b32  	%r3880, %r3879, %r3857;
	shf.l.wrap.b32 	%r3881, %r3880, %r3880, 1;
	add.s32 	%r3882, %r3049, %r3881;
	add.s32 	%r3883, %r3882, %r3048;
	add.s32 	%r3884, %r3883, %r3877;
	add.s32 	%r3058, %r3884, -899497514;
	shf.l.wrap.b32 	%r3060, %r3050, %r3050, 30;
	shf.l.wrap.b32 	%r3885, %r3058, %r3058, 5;
	// begin inline asm
	lop3.b32 %r3053, %r3054, %r3060, %r3056, 150;
	// end inline asm
	xor.b32  	%r3886, %r3777, %r3761;
	xor.b32  	%r3887, %r3886, %r3825;
	xor.b32  	%r3888, %r3887, %r3865;
	shf.l.wrap.b32 	%r3889, %r3888, %r3888, 1;
	add.s32 	%r3890, %r3053, %r3889;
	add.s32 	%r3891, %r3890, %r3052;
	add.s32 	%r3892, %r3891, %r3885;
	add.s32 	%r3062, %r3892, -899497514;
	shf.l.wrap.b32 	%r3064, %r3054, %r3054, 30;
	shf.l.wrap.b32 	%r3893, %r3062, %r3062, 5;
	// begin inline asm
	lop3.b32 %r3057, %r3058, %r3064, %r3060, 150;
	// end inline asm
	xor.b32  	%r3894, %r3785, %r3769;
	xor.b32  	%r3895, %r3894, %r3833;
	xor.b32  	%r3896, %r3895, %r3873;
	shf.l.wrap.b32 	%r3897, %r3896, %r3896, 1;
	add.s32 	%r3898, %r3057, %r3897;
	add.s32 	%r3899, %r3898, %r3056;
	add.s32 	%r3900, %r3899, %r3893;
	add.s32 	%r3066, %r3900, -899497514;
	shf.l.wrap.b32 	%r3068, %r3058, %r3058, 30;
	shf.l.wrap.b32 	%r3901, %r3066, %r3066, 5;
	// begin inline asm
	lop3.b32 %r3061, %r3062, %r3068, %r3064, 150;
	// end inline asm
	xor.b32  	%r3902, %r3793, %r3777;
	xor.b32  	%r3903, %r3902, %r3841;
	xor.b32  	%r3904, %r3903, %r3881;
	shf.l.wrap.b32 	%r3905, %r3904, %r3904, 1;
	add.s32 	%r3906, %r3061, %r3905;
	add.s32 	%r3907, %r3906, %r3060;
	add.s32 	%r3908, %r3907, %r3901;
	add.s32 	%r3909, %r3908, -899497514;
	shf.l.wrap.b32 	%r3067, %r3062, %r3062, 30;
	shf.l.wrap.b32 	%r3910, %r3909, %r3909, 5;
	// begin inline asm
	lop3.b32 %r3065, %r3066, %r3067, %r3068, 150;
	// end inline asm
	xor.b32  	%r3911, %r3801, %r3785;
	xor.b32  	%r3912, %r3911, %r3849;
	xor.b32  	%r3913, %r3912, %r3889;
	shf.l.wrap.b32 	%r3914, %r3913, %r3913, 1;
	shf.l.wrap.b32 	%r3915, %r3066, %r3066, 30;
	add.s32 	%r3916, %r3065, %r3914;
	add.s32 	%r3917, %r3916, %r3064;
	add.s32 	%r3918, %r3917, %r3910;
	add.s32 	%r3074, %r3918, 833086679;
	add.s32 	%r3070, %r3908, -1171231393;
	add.s32 	%r3076, %r3915, -1732584194;
	add.s32 	%r3072, %r3067, 271733878;
	add.s32 	%r3919, %r3068, -1009589776;
	shf.l.wrap.b32 	%r3920, %r3074, %r3074, 5;
	// begin inline asm
	lop3.b32 %r3069, %r3070, %r3076, %r3072, 202;
	// end inline asm
	add.s32 	%r3921, %r3920, %r3919;
	add.s32 	%r3922, %r3921, %r3069;
	add.s32 	%r3923, %r3922, 1518500249;
	xor.b32  	%r3078, %r3923, -2147483648;
	shf.l.wrap.b32 	%r3080, %r3070, %r3070, 30;
	shf.l.wrap.b32 	%r3924, %r3078, %r3078, 5;
	// begin inline asm
	lop3.b32 %r3073, %r3074, %r3080, %r3076, 202;
	// end inline asm
	add.s32 	%r3925, %r3067, %r3073;
	add.s32 	%r3926, %r3925, %r3924;
	add.s32 	%r3082, %r3926, 1790234127;
	shf.l.wrap.b32 	%r3084, %r3074, %r3074, 30;
	shf.l.wrap.b32 	%r3927, %r3082, %r3082, 5;
	// begin inline asm
	lop3.b32 %r3077, %r3078, %r3084, %r3080, 202;
	// end inline asm
	add.s32 	%r3928, %r3915, %r3077;
	add.s32 	%r3929, %r3928, %r3927;
	add.s32 	%r3086, %r3929, -214083945;
	shf.l.wrap.b32 	%r3088, %r3078, %r3078, 30;
	shf.l.wrap.b32 	%r3930, %r3086, %r3086, 5;
	// begin inline asm
	lop3.b32 %r3081, %r3082, %r3088, %r3084, 202;
	// end inline asm
	add.s32 	%r3931, %r3080, %r3081;
	add.s32 	%r3932, %r3931, %r3930;
	add.s32 	%r3090, %r3932, 1518500249;
	shf.l.wrap.b32 	%r3092, %r3082, %r3082, 30;
	shf.l.wrap.b32 	%r3933, %r3090, %r3090, 5;
	// begin inline asm
	lop3.b32 %r3085, %r3086, %r3092, %r3088, 202;
	// end inline asm
	add.s32 	%r3934, %r3084, %r3085;
	add.s32 	%r3935, %r3934, %r3933;
	add.s32 	%r3094, %r3935, 1518500249;
	shf.l.wrap.b32 	%r3096, %r3086, %r3086, 30;
	shf.l.wrap.b32 	%r3936, %r3094, %r3094, 5;
	// begin inline asm
	lop3.b32 %r3089, %r3090, %r3096, %r3092, 202;
	// end inline asm
	add.s32 	%r3937, %r3088, %r3089;
	add.s32 	%r3938, %r3937, %r3936;
	add.s32 	%r3098, %r3938, 1518500249;
	shf.l.wrap.b32 	%r3100, %r3090, %r3090, 30;
	shf.l.wrap.b32 	%r3939, %r3098, %r3098, 5;
	// begin inline asm
	lop3.b32 %r3093, %r3094, %r3100, %r3096, 202;
	// end inline asm
	add.s32 	%r3940, %r3092, %r3093;
	add.s32 	%r3941, %r3940, %r3939;
	add.s32 	%r3102, %r3941, 1518500249;
	shf.l.wrap.b32 	%r3104, %r3094, %r3094, 30;
	shf.l.wrap.b32 	%r3942, %r3102, %r3102, 5;
	// begin inline asm
	lop3.b32 %r3097, %r3098, %r3104, %r3100, 202;
	// end inline asm
	add.s32 	%r3943, %r3097, %r3096;
	add.s32 	%r3944, %r3943, %r3942;
	add.s32 	%r3106, %r3944, 1518500249;
	shf.l.wrap.b32 	%r3108, %r3098, %r3098, 30;
	shf.l.wrap.b32 	%r3945, %r3106, %r3106, 5;
	// begin inline asm
	lop3.b32 %r3101, %r3102, %r3108, %r3104, 202;
	// end inline asm
	add.s32 	%r3946, %r3101, %r3100;
	add.s32 	%r3947, %r3946, %r3945;
	add.s32 	%r3110, %r3947, 1518500249;
	shf.l.wrap.b32 	%r3112, %r3102, %r3102, 30;
	shf.l.wrap.b32 	%r3948, %r3110, %r3110, 5;
	// begin inline asm
	lop3.b32 %r3105, %r3106, %r3112, %r3108, 202;
	// end inline asm
	add.s32 	%r3949, %r3105, %r3104;
	add.s32 	%r3950, %r3949, %r3948;
	add.s32 	%r3114, %r3950, 1518500249;
	shf.l.wrap.b32 	%r3116, %r3106, %r3106, 30;
	shf.l.wrap.b32 	%r3951, %r3114, %r3114, 5;
	// begin inline asm
	lop3.b32 %r3109, %r3110, %r3116, %r3112, 202;
	// end inline asm
	add.s32 	%r3952, %r3109, %r3108;
	add.s32 	%r3953, %r3952, %r3951;
	add.s32 	%r3118, %r3953, 1518500249;
	shf.l.wrap.b32 	%r3120, %r3110, %r3110, 30;
	shf.l.wrap.b32 	%r3954, %r3118, %r3118, 5;
	// begin inline asm
	lop3.b32 %r3113, %r3114, %r3120, %r3116, 202;
	// end inline asm
	add.s32 	%r3955, %r3113, %r3112;
	add.s32 	%r3956, %r3955, %r3954;
	add.s32 	%r3122, %r3956, 1518500249;
	shf.l.wrap.b32 	%r3124, %r3114, %r3114, 30;
	shf.l.wrap.b32 	%r3957, %r3122, %r3122, 5;
	// begin inline asm
	lop3.b32 %r3117, %r3118, %r3124, %r3120, 202;
	// end inline asm
	add.s32 	%r3958, %r3117, %r3116;
	add.s32 	%r3959, %r3958, %r3957;
	add.s32 	%r3126, %r3959, 1518500249;
	shf.l.wrap.b32 	%r3128, %r3118, %r3118, 30;
	shf.l.wrap.b32 	%r3960, %r3126, %r3126, 5;
	// begin inline asm
	lop3.b32 %r3121, %r3122, %r3128, %r3124, 202;
	// end inline asm
	add.s32 	%r3961, %r3121, %r3120;
	add.s32 	%r3962, %r3961, %r3960;
	add.s32 	%r3130, %r3962, 1518500249;
	shf.l.wrap.b32 	%r3132, %r3122, %r3122, 30;
	shf.l.wrap.b32 	%r3963, %r3130, %r3130, 5;
	// begin inline asm
	lop3.b32 %r3125, %r3126, %r3132, %r3128, 202;
	// end inline asm
	add.s32 	%r3964, %r3125, %r3124;
	add.s32 	%r3965, %r3964, %r3963;
	add.s32 	%r3134, %r3965, 1518500249;
	shf.l.wrap.b32 	%r3136, %r3126, %r3126, 30;
	shf.l.wrap.b32 	%r3966, %r3134, %r3134, 5;
	// begin inline asm
	lop3.b32 %r3129, %r3130, %r3136, %r3132, 202;
	// end inline asm
	add.s32 	%r3967, %r3129, %r3128;
	add.s32 	%r3968, %r3967, %r3966;
	add.s32 	%r3138, %r3968, 1518500761;
	shf.l.wrap.b32 	%r3140, %r3130, %r3130, 30;
	shf.l.wrap.b32 	%r3969, %r3138, %r3138, 5;
	// begin inline asm
	lop3.b32 %r3133, %r3134, %r3140, %r3136, 202;
	// end inline asm
	add.s32 	%r3970, %r3133, %r14;
	add.s32 	%r3971, %r3970, %r3132;
	add.s32 	%r3972, %r3971, %r3969;
	add.s32 	%r3142, %r3972, 1518500249;
	shf.l.wrap.b32 	%r3144, %r3134, %r3134, 30;
	shf.l.wrap.b32 	%r3973, %r3142, %r3142, 5;
	// begin inline asm
	lop3.b32 %r3137, %r3138, %r3144, %r3140, 202;
	// end inline asm
	add.s32 	%r3974, %r3137, %r15;
	add.s32 	%r3975, %r3974, %r3136;
	add.s32 	%r3976, %r3975, %r3973;
	add.s32 	%r3146, %r3976, 1518500249;
	shf.l.wrap.b32 	%r3148, %r3138, %r3138, 30;
	shf.l.wrap.b32 	%r3977, %r3146, %r3146, 5;
	// begin inline asm
	lop3.b32 %r3141, %r3142, %r3148, %r3144, 202;
	// end inline asm
	add.s32 	%r3978, %r3141, %r16;
	add.s32 	%r3979, %r3978, %r3140;
	add.s32 	%r3980, %r3979, %r3977;
	add.s32 	%r3150, %r3980, 1518500249;
	shf.l.wrap.b32 	%r3152, %r3142, %r3142, 30;
	shf.l.wrap.b32 	%r3981, %r3150, %r3150, 5;
	// begin inline asm
	lop3.b32 %r3145, %r3146, %r3152, %r3148, 202;
	// end inline asm
	add.s32 	%r3982, %r3145, %r17;
	add.s32 	%r3983, %r3982, %r3144;
	add.s32 	%r3984, %r3983, %r3981;
	add.s32 	%r3154, %r3984, 1518500249;
	shf.l.wrap.b32 	%r3156, %r3146, %r3146, 30;
	shf.l.wrap.b32 	%r3985, %r3154, %r3154, 5;
	// begin inline asm
	lop3.b32 %r3149, %r3150, %r3156, %r3152, 150;
	// end inline asm
	add.s32 	%r3986, %r3149, %r18;
	add.s32 	%r3987, %r3986, %r3148;
	add.s32 	%r3988, %r3987, %r3985;
	add.s32 	%r3158, %r3988, 1859775393;
	shf.l.wrap.b32 	%r3160, %r3150, %r3150, 30;
	shf.l.wrap.b32 	%r3989, %r3158, %r3158, 5;
	// begin inline asm
	lop3.b32 %r3153, %r3154, %r3160, %r3156, 150;
	// end inline asm
	add.s32 	%r3990, %r3153, %r19;
	add.s32 	%r3991, %r3990, %r3152;
	add.s32 	%r3992, %r3991, %r3989;
	add.s32 	%r3162, %r3992, 1859775393;
	shf.l.wrap.b32 	%r3164, %r3154, %r3154, 30;
	shf.l.wrap.b32 	%r3993, %r3162, %r3162, 5;
	// begin inline asm
	lop3.b32 %r3157, %r3158, %r3164, %r3160, 150;
	// end inline asm
	add.s32 	%r3994, %r3157, %r20;
	add.s32 	%r3995, %r3994, %r3156;
	add.s32 	%r3996, %r3995, %r3993;
	add.s32 	%r3166, %r3996, 1859775393;
	shf.l.wrap.b32 	%r3168, %r3158, %r3158, 30;
	shf.l.wrap.b32 	%r3997, %r3166, %r3166, 5;
	// begin inline asm
	lop3.b32 %r3161, %r3162, %r3168, %r3164, 150;
	// end inline asm
	add.s32 	%r3998, %r3161, %r21;
	add.s32 	%r3999, %r3998, %r3160;
	add.s32 	%r4000, %r3999, %r3997;
	add.s32 	%r3170, %r4000, 1859775393;
	shf.l.wrap.b32 	%r3172, %r3162, %r3162, 30;
	shf.l.wrap.b32 	%r4001, %r3170, %r3170, 5;
	// begin inline asm
	lop3.b32 %r3165, %r3166, %r3172, %r3168, 150;
	// end inline asm
	add.s32 	%r4002, %r3165, %r22;
	add.s32 	%r4003, %r4002, %r3164;
	add.s32 	%r4004, %r4003, %r4001;
	add.s32 	%r3174, %r4004, 1859775393;
	shf.l.wrap.b32 	%r3176, %r3166, %r3166, 30;
	shf.l.wrap.b32 	%r4005, %r3174, %r3174, 5;
	// begin inline asm
	lop3.b32 %r3169, %r3170, %r3176, %r3172, 150;
	// end inline asm
	add.s32 	%r4006, %r3169, %r23;
	add.s32 	%r4007, %r4006, %r3168;
	add.s32 	%r4008, %r4007, %r4005;
	add.s32 	%r3178, %r4008, 1859775393;
	shf.l.wrap.b32 	%r3180, %r3170, %r3170, 30;
	shf.l.wrap.b32 	%r4009, %r3178, %r3178, 5;
	// begin inline asm
	lop3.b32 %r3173, %r3174, %r3180, %r3176, 150;
	// end inline asm
	add.s32 	%r4010, %r3173, %r24;
	add.s32 	%r4011, %r4010, %r3172;
	add.s32 	%r4012, %r4011, %r4009;
	add.s32 	%r3182, %r4012, 1859775393;
	shf.l.wrap.b32 	%r3184, %r3174, %r3174, 30;
	shf.l.wrap.b32 	%r4013, %r3182, %r3182, 5;
	// begin inline asm
	lop3.b32 %r3177, %r3178, %r3184, %r3180, 150;
	// end inline asm
	add.s32 	%r4014, %r3177, %r25;
	add.s32 	%r4015, %r4014, %r3176;
	add.s32 	%r4016, %r4015, %r4013;
	add.s32 	%r3186, %r4016, 1859775393;
	shf.l.wrap.b32 	%r3188, %r3178, %r3178, 30;
	shf.l.wrap.b32 	%r4017, %r3186, %r3186, 5;
	// begin inline asm
	lop3.b32 %r3181, %r3182, %r3188, %r3184, 150;
	// end inline asm
	add.s32 	%r4018, %r3181, %r26;
	add.s32 	%r4019, %r4018, %r3180;
	add.s32 	%r4020, %r4019, %r4017;
	add.s32 	%r3190, %r4020, 1859775393;
	shf.l.wrap.b32 	%r3192, %r3182, %r3182, 30;
	shf.l.wrap.b32 	%r4021, %r3190, %r3190, 5;
	// begin inline asm
	lop3.b32 %r3185, %r3186, %r3192, %r3188, 150;
	// end inline asm
	add.s32 	%r4022, %r3185, %r27;
	add.s32 	%r4023, %r4022, %r3184;
	add.s32 	%r4024, %r4023, %r4021;
	add.s32 	%r3194, %r4024, 1859775393;
	shf.l.wrap.b32 	%r3196, %r3186, %r3186, 30;
	shf.l.wrap.b32 	%r4025, %r3194, %r3194, 5;
	// begin inline asm
	lop3.b32 %r3189, %r3190, %r3196, %r3192, 150;
	// end inline asm
	add.s32 	%r4026, %r3189, %r28;
	add.s32 	%r4027, %r4026, %r3188;
	add.s32 	%r4028, %r4027, %r4025;
	add.s32 	%r3198, %r4028, 1859775393;
	shf.l.wrap.b32 	%r3200, %r3190, %r3190, 30;
	shf.l.wrap.b32 	%r4029, %r3198, %r3198, 5;
	// begin inline asm
	lop3.b32 %r3193, %r3194, %r3200, %r3196, 150;
	// end inline asm
	add.s32 	%r4030, %r3193, %r29;
	add.s32 	%r4031, %r4030, %r3192;
	add.s32 	%r4032, %r4031, %r4029;
	add.s32 	%r3202, %r4032, 1859775393;
	shf.l.wrap.b32 	%r3204, %r3194, %r3194, 30;
	shf.l.wrap.b32 	%r4033, %r3202, %r3202, 5;
	// begin inline asm
	lop3.b32 %r3197, %r3198, %r3204, %r3200, 150;
	// end inline asm
	add.s32 	%r4034, %r3197, %r30;
	add.s32 	%r4035, %r4034, %r3196;
	add.s32 	%r4036, %r4035, %r4033;
	add.s32 	%r3206, %r4036, 1859775393;
	shf.l.wrap.b32 	%r3208, %r3198, %r3198, 30;
	shf.l.wrap.b32 	%r4037, %r3206, %r3206, 5;
	// begin inline asm
	lop3.b32 %r3201, %r3202, %r3208, %r3204, 150;
	// end inline asm
	add.s32 	%r4038, %r3201, %r31;
	add.s32 	%r4039, %r4038, %r3200;
	add.s32 	%r4040, %r4039, %r4037;
	add.s32 	%r3210, %r4040, 1859775393;
	shf.l.wrap.b32 	%r3212, %r3202, %r3202, 30;
	shf.l.wrap.b32 	%r4041, %r3210, %r3210, 5;
	// begin inline asm
	lop3.b32 %r3205, %r3206, %r3212, %r3208, 150;
	// end inline asm
	add.s32 	%r4042, %r3205, %r32;
	add.s32 	%r4043, %r4042, %r3204;
	add.s32 	%r4044, %r4043, %r4041;
	add.s32 	%r3214, %r4044, 1859775393;
	shf.l.wrap.b32 	%r3216, %r3206, %r3206, 30;
	shf.l.wrap.b32 	%r4045, %r3214, %r3214, 5;
	// begin inline asm
	lop3.b32 %r3209, %r3210, %r3216, %r3212, 150;
	// end inline asm
	add.s32 	%r4046, %r3209, %r33;
	add.s32 	%r4047, %r4046, %r3208;
	add.s32 	%r4048, %r4047, %r4045;
	add.s32 	%r3218, %r4048, 1859775393;
	shf.l.wrap.b32 	%r3220, %r3210, %r3210, 30;
	shf.l.wrap.b32 	%r4049, %r3218, %r3218, 5;
	// begin inline asm
	lop3.b32 %r3213, %r3214, %r3220, %r3216, 150;
	// end inline asm
	add.s32 	%r4050, %r3213, %r34;
	add.s32 	%r4051, %r4050, %r3212;
	add.s32 	%r4052, %r4051, %r4049;
	add.s32 	%r3222, %r4052, 1859775393;
	shf.l.wrap.b32 	%r3224, %r3214, %r3214, 30;
	shf.l.wrap.b32 	%r4053, %r3222, %r3222, 5;
	// begin inline asm
	lop3.b32 %r3217, %r3218, %r3224, %r3220, 150;
	// end inline asm
	add.s32 	%r4054, %r3217, %r35;
	add.s32 	%r4055, %r4054, %r3216;
	add.s32 	%r4056, %r4055, %r4053;
	add.s32 	%r3226, %r4056, 1859775393;
	shf.l.wrap.b32 	%r3228, %r3218, %r3218, 30;
	shf.l.wrap.b32 	%r4057, %r3226, %r3226, 5;
	// begin inline asm
	lop3.b32 %r3221, %r3222, %r3228, %r3224, 150;
	// end inline asm
	add.s32 	%r4058, %r3221, %r36;
	add.s32 	%r4059, %r4058, %r3220;
	add.s32 	%r4060, %r4059, %r4057;
	add.s32 	%r3230, %r4060, 1859775393;
	shf.l.wrap.b32 	%r3232, %r3222, %r3222, 30;
	shf.l.wrap.b32 	%r4061, %r3230, %r3230, 5;
	// begin inline asm
	lop3.b32 %r3225, %r3226, %r3232, %r3228, 150;
	// end inline asm
	add.s32 	%r4062, %r3225, %r37;
	add.s32 	%r4063, %r4062, %r3224;
	add.s32 	%r4064, %r4063, %r4061;
	add.s32 	%r3234, %r4064, 1859775393;
	shf.l.wrap.b32 	%r3236, %r3226, %r3226, 30;
	shf.l.wrap.b32 	%r4065, %r3234, %r3234, 5;
	// begin inline asm
	lop3.b32 %r3229, %r3230, %r3236, %r3232, 232;
	// end inline asm
	add.s32 	%r4066, %r3229, %r38;
	add.s32 	%r4067, %r4066, %r3228;
	add.s32 	%r4068, %r4067, %r4065;
	add.s32 	%r3238, %r4068, -1894007588;
	shf.l.wrap.b32 	%r3240, %r3230, %r3230, 30;
	shf.l.wrap.b32 	%r4069, %r3238, %r3238, 5;
	// begin inline asm
	lop3.b32 %r3233, %r3234, %r3240, %r3236, 232;
	// end inline asm
	add.s32 	%r4070, %r3233, %r39;
	add.s32 	%r4071, %r4070, %r3232;
	add.s32 	%r4072, %r4071, %r4069;
	add.s32 	%r3242, %r4072, -1894007588;
	shf.l.wrap.b32 	%r3244, %r3234, %r3234, 30;
	shf.l.wrap.b32 	%r4073, %r3242, %r3242, 5;
	// begin inline asm
	lop3.b32 %r3237, %r3238, %r3244, %r3240, 232;
	// end inline asm
	add.s32 	%r4074, %r3237, %r40;
	add.s32 	%r4075, %r4074, %r3236;
	add.s32 	%r4076, %r4075, %r4073;
	add.s32 	%r3246, %r4076, -1894007588;
	shf.l.wrap.b32 	%r3248, %r3238, %r3238, 30;
	shf.l.wrap.b32 	%r4077, %r3246, %r3246, 5;
	// begin inline asm
	lop3.b32 %r3241, %r3242, %r3248, %r3244, 232;
	// end inline asm
	add.s32 	%r4078, %r3241, %r41;
	add.s32 	%r4079, %r4078, %r3240;
	add.s32 	%r4080, %r4079, %r4077;
	add.s32 	%r3250, %r4080, -1894007588;
	shf.l.wrap.b32 	%r3252, %r3242, %r3242, 30;
	shf.l.wrap.b32 	%r4081, %r3250, %r3250, 5;
	// begin inline asm
	lop3.b32 %r3245, %r3246, %r3252, %r3248, 232;
	// end inline asm
	add.s32 	%r4082, %r3245, %r42;
	add.s32 	%r4083, %r4082, %r3244;
	add.s32 	%r4084, %r4083, %r4081;
	add.s32 	%r3254, %r4084, -1894007588;
	shf.l.wrap.b32 	%r3256, %r3246, %r3246, 30;
	shf.l.wrap.b32 	%r4085, %r3254, %r3254, 5;
	// begin inline asm
	lop3.b32 %r3249, %r3250, %r3256, %r3252, 232;
	// end inline asm
	add.s32 	%r4086, %r3249, %r43;
	add.s32 	%r4087, %r4086, %r3248;
	add.s32 	%r4088, %r4087, %r4085;
	add.s32 	%r3258, %r4088, -1894007588;
	shf.l.wrap.b32 	%r3260, %r3250, %r3250, 30;
	shf.l.wrap.b32 	%r4089, %r3258, %r3258, 5;
	// begin inline asm
	lop3.b32 %r3253, %r3254, %r3260, %r3256, 232;
	// end inline asm
	add.s32 	%r4090, %r3253, %r44;
	add.s32 	%r4091, %r4090, %r3252;
	add.s32 	%r4092, %r4091, %r4089;
	add.s32 	%r3262, %r4092, -1894007588;
	shf.l.wrap.b32 	%r3264, %r3254, %r3254, 30;
	shf.l.wrap.b32 	%r4093, %r3262, %r3262, 5;
	// begin inline asm
	lop3.b32 %r3257, %r3258, %r3264, %r3260, 232;
	// end inline asm
	add.s32 	%r4094, %r3257, %r45;
	add.s32 	%r4095, %r4094, %r3256;
	add.s32 	%r4096, %r4095, %r4093;
	add.s32 	%r3266, %r4096, -1894007588;
	shf.l.wrap.b32 	%r3268, %r3258, %r3258, 30;
	shf.l.wrap.b32 	%r4097, %r3266, %r3266, 5;
	// begin inline asm
	lop3.b32 %r3261, %r3262, %r3268, %r3264, 232;
	// end inline asm
	add.s32 	%r4098, %r3261, %r46;
	add.s32 	%r4099, %r4098, %r3260;
	add.s32 	%r4100, %r4099, %r4097;
	add.s32 	%r3270, %r4100, -1894007588;
	shf.l.wrap.b32 	%r3272, %r3262, %r3262, 30;
	shf.l.wrap.b32 	%r4101, %r3270, %r3270, 5;
	// begin inline asm
	lop3.b32 %r3265, %r3266, %r3272, %r3268, 232;
	// end inline asm
	add.s32 	%r4102, %r3265, %r47;
	add.s32 	%r4103, %r4102, %r3264;
	add.s32 	%r4104, %r4103, %r4101;
	add.s32 	%r3274, %r4104, -1894007588;
	shf.l.wrap.b32 	%r3276, %r3266, %r3266, 30;
	shf.l.wrap.b32 	%r4105, %r3274, %r3274, 5;
	// begin inline asm
	lop3.b32 %r3269, %r3270, %r3276, %r3272, 232;
	// end inline asm
	add.s32 	%r4106, %r3269, %r48;
	add.s32 	%r4107, %r4106, %r3268;
	add.s32 	%r4108, %r4107, %r4105;
	add.s32 	%r3278, %r4108, -1894007588;
	shf.l.wrap.b32 	%r3280, %r3270, %r3270, 30;
	shf.l.wrap.b32 	%r4109, %r3278, %r3278, 5;
	// begin inline asm
	lop3.b32 %r3273, %r3274, %r3280, %r3276, 232;
	// end inline asm
	add.s32 	%r4110, %r3273, %r49;
	add.s32 	%r4111, %r4110, %r3272;
	add.s32 	%r4112, %r4111, %r4109;
	add.s32 	%r3282, %r4112, -1894007588;
	shf.l.wrap.b32 	%r3284, %r3274, %r3274, 30;
	shf.l.wrap.b32 	%r4113, %r3282, %r3282, 5;
	// begin inline asm
	lop3.b32 %r3277, %r3278, %r3284, %r3280, 232;
	// end inline asm
	add.s32 	%r4114, %r3277, %r50;
	add.s32 	%r4115, %r4114, %r3276;
	add.s32 	%r4116, %r4115, %r4113;
	add.s32 	%r3286, %r4116, -1894007588;
	shf.l.wrap.b32 	%r3288, %r3278, %r3278, 30;
	shf.l.wrap.b32 	%r4117, %r3286, %r3286, 5;
	// begin inline asm
	lop3.b32 %r3281, %r3282, %r3288, %r3284, 232;
	// end inline asm
	add.s32 	%r4118, %r3281, %r51;
	add.s32 	%r4119, %r4118, %r3280;
	add.s32 	%r4120, %r4119, %r4117;
	add.s32 	%r3290, %r4120, -1894007588;
	shf.l.wrap.b32 	%r3292, %r3282, %r3282, 30;
	shf.l.wrap.b32 	%r4121, %r3290, %r3290, 5;
	// begin inline asm
	lop3.b32 %r3285, %r3286, %r3292, %r3288, 232;
	// end inline asm
	add.s32 	%r4122, %r3285, %r52;
	add.s32 	%r4123, %r4122, %r3284;
	add.s32 	%r4124, %r4123, %r4121;
	add.s32 	%r3294, %r4124, -1894007588;
	shf.l.wrap.b32 	%r3296, %r3286, %r3286, 30;
	shf.l.wrap.b32 	%r4125, %r3294, %r3294, 5;
	// begin inline asm
	lop3.b32 %r3289, %r3290, %r3296, %r3292, 232;
	// end inline asm
	add.s32 	%r4126, %r3289, %r53;
	add.s32 	%r4127, %r4126, %r3288;
	add.s32 	%r4128, %r4127, %r4125;
	add.s32 	%r3298, %r4128, -1894007588;
	shf.l.wrap.b32 	%r3300, %r3290, %r3290, 30;
	shf.l.wrap.b32 	%r4129, %r3298, %r3298, 5;
	// begin inline asm
	lop3.b32 %r3293, %r3294, %r3300, %r3296, 232;
	// end inline asm
	add.s32 	%r4130, %r3293, %r54;
	add.s32 	%r4131, %r4130, %r3292;
	add.s32 	%r4132, %r4131, %r4129;
	add.s32 	%r3302, %r4132, -1894007588;
	shf.l.wrap.b32 	%r3304, %r3294, %r3294, 30;
	shf.l.wrap.b32 	%r4133, %r3302, %r3302, 5;
	// begin inline asm
	lop3.b32 %r3297, %r3298, %r3304, %r3300, 232;
	// end inline asm
	add.s32 	%r4134, %r3297, %r55;
	add.s32 	%r4135, %r4134, %r3296;
	add.s32 	%r4136, %r4135, %r4133;
	add.s32 	%r3306, %r4136, -1894007588;
	shf.l.wrap.b32 	%r3308, %r3298, %r3298, 30;
	shf.l.wrap.b32 	%r4137, %r3306, %r3306, 5;
	// begin inline asm
	lop3.b32 %r3301, %r3302, %r3308, %r3304, 232;
	// end inline asm
	add.s32 	%r4138, %r3301, %r56;
	add.s32 	%r4139, %r4138, %r3300;
	add.s32 	%r4140, %r4139, %r4137;
	add.s32 	%r3310, %r4140, -1894007588;
	shf.l.wrap.b32 	%r3312, %r3302, %r3302, 30;
	shf.l.wrap.b32 	%r4141, %r3310, %r3310, 5;
	// begin inline asm
	lop3.b32 %r3305, %r3306, %r3312, %r3308, 232;
	// end inline asm
	add.s32 	%r4142, %r3305, %r57;
	add.s32 	%r4143, %r4142, %r3304;
	add.s32 	%r4144, %r4143, %r4141;
	add.s32 	%r3314, %r4144, -1894007588;
	shf.l.wrap.b32 	%r3316, %r3306, %r3306, 30;
	shf.l.wrap.b32 	%r4145, %r3314, %r3314, 5;
	// begin inline asm
	lop3.b32 %r3309, %r3310, %r3316, %r3312, 150;
	// end inline asm
	add.s32 	%r4146, %r3309, %r58;
	add.s32 	%r4147, %r4146, %r3308;
	add.s32 	%r4148, %r4147, %r4145;
	add.s32 	%r3318, %r4148, -899497514;
	shf.l.wrap.b32 	%r3320, %r3310, %r3310, 30;
	shf.l.wrap.b32 	%r4149, %r3318, %r3318, 5;
	// begin inline asm
	lop3.b32 %r3313, %r3314, %r3320, %r3316, 150;
	// end inline asm
	add.s32 	%r4150, %r3313, %r59;
	add.s32 	%r4151, %r4150, %r3312;
	add.s32 	%r4152, %r4151, %r4149;
	add.s32 	%r3322, %r4152, -899497514;
	shf.l.wrap.b32 	%r3324, %r3314, %r3314, 30;
	shf.l.wrap.b32 	%r4153, %r3322, %r3322, 5;
	// begin inline asm
	lop3.b32 %r3317, %r3318, %r3324, %r3320, 150;
	// end inline asm
	add.s32 	%r4154, %r3317, %r60;
	add.s32 	%r4155, %r4154, %r3316;
	add.s32 	%r4156, %r4155, %r4153;
	add.s32 	%r3326, %r4156, -899497514;
	shf.l.wrap.b32 	%r3328, %r3318, %r3318, 30;
	shf.l.wrap.b32 	%r4157, %r3326, %r3326, 5;
	// begin inline asm
	lop3.b32 %r3321, %r3322, %r3328, %r3324, 150;
	// end inline asm
	add.s32 	%r4158, %r3321, %r61;
	add.s32 	%r4159, %r4158, %r3320;
	add.s32 	%r4160, %r4159, %r4157;
	add.s32 	%r3330, %r4160, -899497514;
	shf.l.wrap.b32 	%r3332, %r3322, %r3322, 30;
	shf.l.wrap.b32 	%r4161, %r3330, %r3330, 5;
	// begin inline asm
	lop3.b32 %r3325, %r3326, %r3332, %r3328, 150;
	// end inline asm
	add.s32 	%r4162, %r3325, %r62;
	add.s32 	%r4163, %r4162, %r3324;
	add.s32 	%r4164, %r4163, %r4161;
	add.s32 	%r3334, %r4164, -899497514;
	shf.l.wrap.b32 	%r3336, %r3326, %r3326, 30;
	shf.l.wrap.b32 	%r4165, %r3334, %r3334, 5;
	// begin inline asm
	lop3.b32 %r3329, %r3330, %r3336, %r3332, 150;
	// end inline asm
	add.s32 	%r4166, %r3329, %r63;
	add.s32 	%r4167, %r4166, %r3328;
	add.s32 	%r4168, %r4167, %r4165;
	add.s32 	%r3338, %r4168, -899497514;
	shf.l.wrap.b32 	%r3340, %r3330, %r3330, 30;
	shf.l.wrap.b32 	%r4169, %r3338, %r3338, 5;
	// begin inline asm
	lop3.b32 %r3333, %r3334, %r3340, %r3336, 150;
	// end inline asm
	add.s32 	%r4170, %r3333, %r3332;
	add.s32 	%r4171, %r4170, %r64;
	add.s32 	%r4172, %r4171, %r4169;
	add.s32 	%r3342, %r4172, -899497514;
	shf.l.wrap.b32 	%r3344, %r3334, %r3334, 30;
	shf.l.wrap.b32 	%r4173, %r3342, %r3342, 5;
	// begin inline asm
	lop3.b32 %r3337, %r3338, %r3344, %r3340, 150;
	// end inline asm
	add.s32 	%r4174, %r3337, %r3336;
	add.s32 	%r4175, %r4174, %r65;
	add.s32 	%r4176, %r4175, %r4173;
	add.s32 	%r3346, %r4176, -899497514;
	shf.l.wrap.b32 	%r3348, %r3338, %r3338, 30;
	shf.l.wrap.b32 	%r4177, %r3346, %r3346, 5;
	// begin inline asm
	lop3.b32 %r3341, %r3342, %r3348, %r3344, 150;
	// end inline asm
	add.s32 	%r4178, %r3341, %r3340;
	add.s32 	%r4179, %r4178, %r66;
	add.s32 	%r4180, %r4179, %r4177;
	add.s32 	%r3350, %r4180, -899497514;
	shf.l.wrap.b32 	%r3352, %r3342, %r3342, 30;
	shf.l.wrap.b32 	%r4181, %r3350, %r3350, 5;
	// begin inline asm
	lop3.b32 %r3345, %r3346, %r3352, %r3348, 150;
	// end inline asm
	add.s32 	%r4182, %r3345, %r3344;
	add.s32 	%r4183, %r4182, %r67;
	add.s32 	%r4184, %r4183, %r4181;
	add.s32 	%r3354, %r4184, -899497514;
	shf.l.wrap.b32 	%r3356, %r3346, %r3346, 30;
	shf.l.wrap.b32 	%r4185, %r3354, %r3354, 5;
	// begin inline asm
	lop3.b32 %r3349, %r3350, %r3356, %r3352, 150;
	// end inline asm
	add.s32 	%r4186, %r3349, %r3348;
	add.s32 	%r4187, %r4186, %r68;
	add.s32 	%r4188, %r4187, %r4185;
	add.s32 	%r3358, %r4188, -899497514;
	shf.l.wrap.b32 	%r3360, %r3350, %r3350, 30;
	shf.l.wrap.b32 	%r4189, %r3358, %r3358, 5;
	// begin inline asm
	lop3.b32 %r3353, %r3354, %r3360, %r3356, 150;
	// end inline asm
	add.s32 	%r4190, %r3353, %r3352;
	add.s32 	%r4191, %r4190, %r69;
	add.s32 	%r4192, %r4191, %r4189;
	add.s32 	%r3362, %r4192, -899497514;
	shf.l.wrap.b32 	%r3364, %r3354, %r3354, 30;
	shf.l.wrap.b32 	%r4193, %r3362, %r3362, 5;
	// begin inline asm
	lop3.b32 %r3357, %r3358, %r3364, %r3360, 150;
	// end inline asm
	add.s32 	%r4194, %r3356, %r3357;
	add.s32 	%r4195, %r4194, %r70;
	add.s32 	%r4196, %r4195, %r4193;
	add.s32 	%r3366, %r4196, -899497514;
	shf.l.wrap.b32 	%r3368, %r3358, %r3358, 30;
	shf.l.wrap.b32 	%r4197, %r3366, %r3366, 5;
	// begin inline asm
	lop3.b32 %r3361, %r3362, %r3368, %r3364, 150;
	// end inline asm
	add.s32 	%r4198, %r3360, %r3361;
	add.s32 	%r4199, %r4198, %r71;
	add.s32 	%r4200, %r4199, %r4197;
	add.s32 	%r3370, %r4200, -899497514;
	shf.l.wrap.b32 	%r3372, %r3362, %r3362, 30;
	shf.l.wrap.b32 	%r4201, %r3370, %r3370, 5;
	// begin inline asm
	lop3.b32 %r3365, %r3366, %r3372, %r3368, 150;
	// end inline asm
	add.s32 	%r4202, %r3364, %r3365;
	add.s32 	%r4203, %r4202, %r72;
	add.s32 	%r4204, %r4203, %r4201;
	add.s32 	%r3374, %r4204, -899497514;
	shf.l.wrap.b32 	%r3376, %r3366, %r3366, 30;
	shf.l.wrap.b32 	%r4205, %r3374, %r3374, 5;
	// begin inline asm
	lop3.b32 %r3369, %r3370, %r3376, %r3372, 150;
	// end inline asm
	add.s32 	%r4206, %r3368, %r3369;
	add.s32 	%r4207, %r4206, %r73;
	add.s32 	%r4208, %r4207, %r4205;
	add.s32 	%r3378, %r4208, -899497514;
	shf.l.wrap.b32 	%r3380, %r3370, %r3370, 30;
	shf.l.wrap.b32 	%r4209, %r3378, %r3378, 5;
	// begin inline asm
	lop3.b32 %r3373, %r3374, %r3380, %r3376, 150;
	// end inline asm
	add.s32 	%r4210, %r3372, %r3373;
	add.s32 	%r4211, %r4210, %r74;
	add.s32 	%r4212, %r4211, %r4209;
	add.s32 	%r3382, %r4212, -899497514;
	shf.l.wrap.b32 	%r3384, %r3374, %r3374, 30;
	shf.l.wrap.b32 	%r4213, %r3382, %r3382, 5;
	// begin inline asm
	lop3.b32 %r3377, %r3378, %r3384, %r3380, 150;
	// end inline asm
	add.s32 	%r4214, %r3376, %r3377;
	add.s32 	%r4215, %r4214, %r75;
	add.s32 	%r4216, %r4215, %r4213;
	add.s32 	%r3386, %r4216, -899497514;
	shf.l.wrap.b32 	%r3388, %r3378, %r3378, 30;
	shf.l.wrap.b32 	%r4217, %r3386, %r3386, 5;
	// begin inline asm
	lop3.b32 %r3381, %r3382, %r3388, %r3384, 150;
	// end inline asm
	add.s32 	%r4218, %r3380, %r3381;
	add.s32 	%r4219, %r4218, %r76;
	add.s32 	%r4220, %r4219, %r4217;
	add.s32 	%r4221, %r4220, -899497514;
	shf.l.wrap.b32 	%r3387, %r3382, %r3382, 30;
	shf.l.wrap.b32 	%r4222, %r4221, %r4221, 5;
	// begin inline asm
	lop3.b32 %r3385, %r3386, %r3387, %r3388, 150;
	// end inline asm
	shf.l.wrap.b32 	%r4223, %r3386, %r3386, 30;
	add.s32 	%r4224, %r3074, %r3384;
	add.s32 	%r4225, %r4224, %r3385;
	add.s32 	%r4226, %r4225, %r77;
	add.s32 	%r4227, %r4226, %r4222;
	add.s32 	%r4228, %r4227, -899497514;
	add.s32 	%r4229, %r4221, %r3070;
	add.s32 	%r4230, %r4223, %r3076;
	add.s32 	%r4231, %r3387, %r3072;
	add.s32 	%r4232, %r3388, %r3919;
	shf.l.wrap.b32 	%r4233, %r4228, %r4228, 16;
	shl.b32 	%r4234, %r4233, 8;
	and.b32  	%r4235, %r4234, -16711936;
	shr.u32 	%r4236, %r4233, 8;
	and.b32  	%r4237, %r4236, 16711935;
	or.b32  	%r4238, %r4235, %r4237;
	st.local.u32 	[%rd3+20], %r4238;
	shf.l.wrap.b32 	%r4239, %r4229, %r4229, 16;
	shl.b32 	%r4240, %r4239, 8;
	and.b32  	%r4241, %r4240, -16711936;
	shr.u32 	%r4242, %r4239, 8;
	and.b32  	%r4243, %r4242, 16711935;
	or.b32  	%r4244, %r4241, %r4243;
	st.local.u32 	[%rd3+24], %r4244;
	shf.l.wrap.b32 	%r4245, %r4230, %r4230, 16;
	shl.b32 	%r4246, %r4245, 8;
	and.b32  	%r4247, %r4246, -16711936;
	shr.u32 	%r4248, %r4245, 8;
	and.b32  	%r4249, %r4248, 16711935;
	or.b32  	%r4250, %r4247, %r4249;
	st.local.u32 	[%rd3+28], %r4250;
	shf.l.wrap.b32 	%r4251, %r4231, %r4231, 16;
	shl.b32 	%r4252, %r4251, 8;
	and.b32  	%r4253, %r4252, -16711936;
	shr.u32 	%r4254, %r4251, 8;
	and.b32  	%r4255, %r4254, 16711935;
	or.b32  	%r4256, %r4253, %r4255;
	st.local.u32 	[%rd3+32], %r4256;
	shf.l.wrap.b32 	%r4257, %r4232, %r4232, 16;
	shl.b32 	%r4258, %r4257, 8;
	and.b32  	%r4259, %r4258, -16711936;
	shr.u32 	%r4260, %r4257, 8;
	and.b32  	%r4261, %r4260, 16711935;
	or.b32  	%r4262, %r4259, %r4261;
	st.local.u32 	[%rd3+36], %r4262;

$L__BB2_2:
	mov.u32 	%r8884, 10;
	setp.eq.s32 	%p2, %r78, 16;
	@%p2 bra 	$L__BB2_7;

	setp.eq.s32 	%p3, %r78, 24;
	@%p3 bra 	$L__BB2_6;

	mov.u32 	%r8884, 0;
	setp.ne.s32 	%p4, %r78, 32;
	@%p4 bra 	$L__BB2_21;

	mov.u32 	%r8884, 14;
	bra.uni 	$L__BB2_7;

$L__BB2_6:
	mov.u32 	%r8884, 12;

$L__BB2_7:
	cvt.u32.u64 	%r4267, %rd5;
	shr.u32 	%r80, %r4267, 5;
	shl.b32 	%r4268, %r8884, 2;
	add.s32 	%r81, %r4268, 4;
	setp.eq.s32 	%p5, %r80, 0;
	@%p5 bra 	$L__BB2_14;

	add.s32 	%r4270, %r80, -1;
	and.b32  	%r8889, %r80, 3;
	setp.lt.u32 	%p6, %r4270, 3;
	mov.u32 	%r8887, 0;
	@%p6 bra 	$L__BB2_11;

	sub.s32 	%r8886, %r80, %r8889;
	mov.u32 	%r8887, 0;

$L__BB2_10:
	shl.b32 	%r4272, %r8887, 2;
	cvt.s64.s32 	%rd28, %r4272;
	add.s64 	%rd29, %rd3, %rd28;
	ld.local.u8 	%r4273, [%rd29];
	ld.local.u8 	%r4274, [%rd29+1];
	prmt.b32 	%r4275, %r4274, %r4273, 30212;
	ld.local.u8 	%r4276, [%rd29+2];
	prmt.b32 	%r4277, %r4276, %r4275, 28756;
	ld.local.u8 	%r4278, [%rd29+3];
	mul.wide.s32 	%rd30, %r8887, 4;
	add.s64 	%rd31, %rd2, %rd30;
	prmt.b32 	%r4279, %r4278, %r4277, 1620;
	ld.local.u32 	%r4280, [%rd29+12];
	ld.local.u32 	%r4281, [%rd29+8];
	ld.local.u32 	%r4282, [%rd29+4];
	st.local.v4.u32 	[%rd31], {%r4279, %r4282, %r4281, %r4280};
	add.s32 	%r8887, %r8887, 4;
	add.s32 	%r8886, %r8886, -4;
	setp.ne.s32 	%p7, %r8886, 0;
	@%p7 bra 	$L__BB2_10;

$L__BB2_11:
	setp.eq.s32 	%p8, %r8889, 0;
	@%p8 bra 	$L__BB2_14;

	mul.wide.s32 	%rd32, %r8887, 4;
	add.s64 	%rd53, %rd2, %rd32;
	shl.b32 	%r8888, %r8887, 2;

$L__BB2_13:
	.pragma "nounroll";
	cvt.s64.s32 	%rd33, %r8888;
	add.s64 	%rd34, %rd3, %rd33;
	ld.local.u32 	%r4283, [%rd34];
	st.local.u32 	[%rd53], %r4283;
	add.s64 	%rd53, %rd53, 4;
	add.s32 	%r8888, %r8888, 4;
	add.s32 	%r8889, %r8889, -1;
	setp.ne.s32 	%p9, %r8889, 0;
	@%p9 bra 	$L__BB2_13;

$L__BB2_14:
	setp.ge.u32 	%p10, %r80, %r81;
	@%p10 bra 	$L__BB2_21;

	mul.wide.u32 	%rd35, %r80, 4;
	add.s64 	%rd36, %rd2, %rd35;
	ld.local.u32 	%r8894, [%rd36+-4];
	shr.u64 	%rd37, %rd5, 3;
	and.b64  	%rd9, %rd37, 536870908;
	mov.u32 	%r8891, 0;
	mov.u64 	%rd54, %rd2;
	mov.u32 	%r8892, %r80;
	mov.u32 	%r8893, %r8891;

$L__BB2_16:
	setp.eq.s32 	%p11, %r8893, 0;
	@%p11 bra 	$L__BB2_19;

	setp.lt.u32 	%p12, %r4267, 224;
	setp.ne.s32 	%p13, %r8893, 4;
	or.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB2_20;

	and.b32  	%r4287, %r8894, 1431655765;
	shl.b32 	%r4288, %r8894, 1;
	and.b32  	%r4289, %r4288, -1431655766;
	or.b32  	%r4290, %r4289, %r4287;
	and.b32  	%r4291, %r8894, -1431655766;
	shr.u32 	%r4292, %r4291, 1;
	or.b32  	%r4293, %r4292, %r4291;
	and.b32  	%r4294, %r4290, 858993459;
	shl.b32 	%r4295, %r4290, 2;
	and.b32  	%r4296, %r4295, -858993460;
	or.b32  	%r4297, %r4296, %r4294;
	and.b32  	%r4298, %r4290, -858993460;
	shr.u32 	%r4299, %r4298, 2;
	or.b32  	%r4300, %r4299, %r4298;
	and.b32  	%r4301, %r4293, 858993459;
	shl.b32 	%r4302, %r4293, 2;
	and.b32  	%r4303, %r4302, -858993460;
	or.b32  	%r4304, %r4303, %r4301;
	and.b32  	%r4305, %r4293, -858993460;
	shr.u32 	%r4306, %r4305, 2;
	or.b32  	%r4307, %r4306, %r4305;
	and.b32  	%r4308, %r4297, 252645135;
	shl.b32 	%r4309, %r4297, 4;
	and.b32  	%r4310, %r4309, -252645136;
	or.b32  	%r4311, %r4310, %r4308;
	and.b32  	%r4312, %r4297, -252645136;
	shr.u32 	%r4313, %r4312, 4;
	or.b32  	%r4314, %r4313, %r4312;
	and.b32  	%r4315, %r4304, 252645135;
	shl.b32 	%r4316, %r4304, 4;
	and.b32  	%r4317, %r4316, -252645136;
	or.b32  	%r4318, %r4317, %r4315;
	and.b32  	%r4319, %r4304, -252645136;
	shr.u32 	%r4320, %r4319, 4;
	or.b32  	%r4321, %r4320, %r4319;
	and.b32  	%r4322, %r4300, 252645135;
	shl.b32 	%r4323, %r4300, 4;
	and.b32  	%r4324, %r4323, -252645136;
	or.b32  	%r4325, %r4324, %r4322;
	and.b32  	%r4326, %r4300, -252645136;
	shr.u32 	%r4327, %r4326, 4;
	or.b32  	%r4328, %r4327, %r4326;
	and.b32  	%r4329, %r4307, 252645135;
	shl.b32 	%r4330, %r4307, 4;
	and.b32  	%r4331, %r4330, -252645136;
	or.b32  	%r4332, %r4331, %r4329;
	and.b32  	%r4333, %r4307, -252645136;
	shr.u32 	%r4334, %r4333, 4;
	or.b32  	%r4335, %r4334, %r4333;
	xor.b32  	%r4336, %r4325, %r4314;
	xor.b32  	%r4337, %r4318, %r4335;
	xor.b32  	%r4338, %r4314, %r4335;
	xor.b32  	%r4339, %r4325, %r4335;
	xor.b32  	%r4340, %r4321, %r4328;
	xor.b32  	%r4341, %r4311, %r4340;
	xor.b32  	%r4342, %r4341, %r4314;
	xor.b32  	%r4343, %r4337, %r4336;
	xor.b32  	%r4344, %r4341, %r4335;
	xor.b32  	%r4345, %r4341, %r4318;
	xor.b32  	%r4346, %r4345, %r4339;
	xor.b32  	%r4347, %r4343, %r4332;
	xor.b32  	%r4348, %r4347, %r4325;
	xor.b32  	%r4349, %r4347, %r4328;
	xor.b32  	%r4350, %r4348, %r4311;
	xor.b32  	%r4351, %r4348, %r4340;
	xor.b32  	%r4352, %r4349, %r4338;
	xor.b32  	%r4353, %r4352, %r4311;
	xor.b32  	%r4354, %r4351, %r4352;
	xor.b32  	%r4355, %r4352, %r4340;
	and.b32  	%r4356, %r4348, %r4343;
	and.b32  	%r4357, %r4350, %r4346;
	and.b32  	%r4358, %r4342, %r4311;
	and.b32  	%r4359, %r4355, %r4337;
	and.b32  	%r4360, %r4345, %r4341;
	and.b32  	%r4361, %r4353, %r4344;
	and.b32  	%r4362, %r4352, %r4338;
	and.b32  	%r4363, %r4354, %r4336;
	xor.b32  	%r4364, %r4363, %r4362;
	and.b32  	%r4365, %r4351, %r4339;
	xor.b32  	%r4366, %r4365, %r4362;
	xor.b32  	%r4367, %r4356, %r4349;
	xor.b32  	%r4368, %r4367, %r4357;
	xor.b32  	%r4369, %r4368, %r4364;
	xor.b32  	%r4370, %r4358, %r4339;
	xor.b32  	%r4371, %r4370, %r4351;
	xor.b32  	%r4372, %r4371, %r4356;
	xor.b32  	%r4373, %r4372, %r4366;
	xor.b32  	%r4374, %r4360, %r4337;
	xor.b32  	%r4375, %r4374, %r4355;
	xor.b32  	%r4376, %r4375, %r4359;
	xor.b32  	%r4377, %r4376, %r4364;
	xor.b32  	%r4378, %r4355, %r4335;
	xor.b32  	%r4379, %r4378, %r4359;
	xor.b32  	%r4380, %r4379, %r4361;
	xor.b32  	%r4381, %r4380, %r4366;
	xor.b32  	%r4382, %r4369, %r4373;
	and.b32  	%r4383, %r4369, %r4377;
	xor.b32  	%r4384, %r4383, %r4381;
	and.b32  	%r4385, %r4384, %r4382;
	xor.b32  	%r4386, %r4385, %r4373;
	xor.b32  	%r4387, %r4377, %r4381;
	xor.b32  	%r4388, %r4383, %r4373;
	and.b32  	%r4389, %r4388, %r4387;
	xor.b32  	%r4390, %r4389, %r4381;
	xor.b32  	%r4391, %r4390, %r4377;
	xor.b32  	%r4392, %r4389, %r4383;
	and.b32  	%r4393, %r4392, %r4381;
	xor.b32  	%r4394, %r4391, %r4393;
	xor.b32  	%r4395, %r4393, %r4384;
	and.b32  	%r4396, %r4395, %r4386;
	xor.b32  	%r4397, %r4396, %r4382;
	xor.b32  	%r4398, %r4397, %r4394;
	xor.b32  	%r4399, %r4386, %r4390;
	xor.b32  	%r4400, %r4397, %r4386;
	xor.b32  	%r4401, %r4393, %r4377;
	xor.b32  	%r4402, %r4398, %r4399;
	and.b32  	%r4403, %r4401, %r4348;
	and.b32  	%r4404, %r4394, %r4350;
	and.b32  	%r4405, %r4390, %r4311;
	and.b32  	%r4406, %r4400, %r4355;
	and.b32  	%r4407, %r4397, %r4341;
	and.b32  	%r4408, %r4386, %r4353;
	and.b32  	%r4409, %r4399, %r4352;
	and.b32  	%r4410, %r4402, %r4354;
	and.b32  	%r4411, %r4398, %r4351;
	and.b32  	%r4412, %r4401, %r4343;
	and.b32  	%r4413, %r4394, %r4346;
	and.b32  	%r4414, %r4390, %r4342;
	and.b32  	%r4415, %r4400, %r4337;
	and.b32  	%r4416, %r4397, %r4345;
	and.b32  	%r4417, %r4386, %r4344;
	and.b32  	%r4418, %r4399, %r4338;
	and.b32  	%r4419, %r4402, %r4336;
	and.b32  	%r4420, %r4398, %r4339;
	xor.b32  	%r4421, %r4419, %r4418;
	xor.b32  	%r4422, %r4413, %r4414;
	xor.b32  	%r4423, %r4416, %r4408;
	xor.b32  	%r4424, %r4412, %r4413;
	xor.b32  	%r4425, %r4415, %r4405;
	xor.b32  	%r4426, %r4405, %r4408;
	xor.b32  	%r4427, %r4410, %r4411;
	xor.b32  	%r4428, %r4406, %r4403;
	xor.b32  	%r4429, %r4425, %r4428;
	xor.b32  	%r4430, %r4421, %r4407;
	xor.b32  	%r4431, %r4406, %r4409;
	xor.b32  	%r4432, %r4431, %r4410;
	xor.b32  	%r4433, %r4429, %r4417;
	xor.b32  	%r4434, %r4427, %r4430;
	xor.b32  	%r4435, %r4424, %r4430;
	xor.b32  	%r4436, %r4432, %r4407;
	xor.b32  	%r4437, %r4433, %r4434;
	xor.b32  	%r4438, %r4435, %r4404;
	xor.b32  	%r4439, %r4435, %r4432;
	xor.b32  	%r4440, %r4423, 16843009;
	xor.b32  	%r4441, %r4415, %r4440;
	xor.b32  	%r4442, %r4441, %r4434;
	xor.b32  	%r4443, %r4429, %r4440;
	xor.b32  	%r4444, %r4443, %r4421;
	xor.b32  	%r4445, %r4438, %r4428;
	xor.b32  	%r4446, %r4426, %r4438;
	xor.b32  	%r4447, %r4422, %r4437;
	xor.b32  	%r4448, %r4445, %r4436;
	not.b32 	%r4449, %r4448;
	xor.b32  	%r4450, %r4419, %r4420;
	xor.b32  	%r4451, %r4450, %r4436;
	xor.b32  	%r4452, %r4451, %r4437;
	and.b32  	%r4453, %r4444, 16843009;
	shl.b32 	%r4454, %r4442, 1;
	and.b32  	%r4455, %r4454, 33686018;
	or.b32  	%r4456, %r4455, %r4453;
	and.b32  	%r4457, %r4447, 16843009;
	shl.b32 	%r4458, %r4446, 1;
	and.b32  	%r4459, %r4458, 33686018;
	or.b32  	%r4460, %r4459, %r4457;
	and.b32  	%r4461, %r4445, 16843009;
	shl.b32 	%r4462, %r4452, 1;
	not.b32 	%r4463, %r4462;
	and.b32  	%r4464, %r4463, 33686018;
	or.b32  	%r4465, %r4464, %r4461;
	and.b32  	%r4466, %r4449, 16843009;
	shl.b32 	%r4467, %r4439, 1;
	and.b32  	%r4468, %r4467, 33686018;
	or.b32  	%r4469, %r4468, %r4466;
	shl.b32 	%r4470, %r4460, 2;
	or.b32  	%r4471, %r4470, %r4456;
	shl.b32 	%r4472, %r4469, 2;
	or.b32  	%r4473, %r4472, %r4465;
	shl.b32 	%r4474, %r4473, 4;
	or.b32  	%r8894, %r4474, %r4471;
	bra.uni 	$L__BB2_20;

$L__BB2_19:
	shf.l.wrap.b32 	%r4475, %r8894, %r8894, 24;
	and.b32  	%r4476, %r4475, 1431655765;
	shl.b32 	%r4477, %r4475, 1;
	and.b32  	%r4478, %r4477, -1431655766;
	or.b32  	%r4479, %r4478, %r4476;
	and.b32  	%r4480, %r4475, -1431655766;
	shr.u32 	%r4481, %r4480, 1;
	or.b32  	%r4482, %r4481, %r4480;
	and.b32  	%r4483, %r4479, 858993459;
	shl.b32 	%r4484, %r4479, 2;
	and.b32  	%r4485, %r4484, -858993460;
	or.b32  	%r4486, %r4485, %r4483;
	and.b32  	%r4487, %r4479, -858993460;
	shr.u32 	%r4488, %r4487, 2;
	or.b32  	%r4489, %r4488, %r4487;
	and.b32  	%r4490, %r4482, 858993459;
	shl.b32 	%r4491, %r4482, 2;
	and.b32  	%r4492, %r4491, -858993460;
	or.b32  	%r4493, %r4492, %r4490;
	and.b32  	%r4494, %r4482, -858993460;
	shr.u32 	%r4495, %r4494, 2;
	or.b32  	%r4496, %r4495, %r4494;
	and.b32  	%r4497, %r4486, 252645135;
	shl.b32 	%r4498, %r4486, 4;
	and.b32  	%r4499, %r4498, -252645136;
	or.b32  	%r4500, %r4499, %r4497;
	and.b32  	%r4501, %r4486, -252645136;
	shr.u32 	%r4502, %r4501, 4;
	or.b32  	%r4503, %r4502, %r4501;
	and.b32  	%r4504, %r4493, 252645135;
	shl.b32 	%r4505, %r4493, 4;
	and.b32  	%r4506, %r4505, -252645136;
	or.b32  	%r4507, %r4506, %r4504;
	and.b32  	%r4508, %r4493, -252645136;
	shr.u32 	%r4509, %r4508, 4;
	or.b32  	%r4510, %r4509, %r4508;
	and.b32  	%r4511, %r4489, 252645135;
	shl.b32 	%r4512, %r4489, 4;
	and.b32  	%r4513, %r4512, -252645136;
	or.b32  	%r4514, %r4513, %r4511;
	and.b32  	%r4515, %r4489, -252645136;
	shr.u32 	%r4516, %r4515, 4;
	or.b32  	%r4517, %r4516, %r4515;
	and.b32  	%r4518, %r4496, 252645135;
	shl.b32 	%r4519, %r4496, 4;
	and.b32  	%r4520, %r4519, -252645136;
	or.b32  	%r4521, %r4520, %r4518;
	and.b32  	%r4522, %r4496, -252645136;
	shr.u32 	%r4523, %r4522, 4;
	or.b32  	%r4524, %r4523, %r4522;
	xor.b32  	%r4525, %r4514, %r4503;
	xor.b32  	%r4526, %r4507, %r4524;
	xor.b32  	%r4527, %r4503, %r4524;
	xor.b32  	%r4528, %r4514, %r4524;
	xor.b32  	%r4529, %r4510, %r4517;
	xor.b32  	%r4530, %r4500, %r4529;
	xor.b32  	%r4531, %r4530, %r4503;
	xor.b32  	%r4532, %r4526, %r4525;
	xor.b32  	%r4533, %r4530, %r4524;
	xor.b32  	%r4534, %r4530, %r4507;
	xor.b32  	%r4535, %r4534, %r4528;
	xor.b32  	%r4536, %r4532, %r4521;
	xor.b32  	%r4537, %r4536, %r4514;
	xor.b32  	%r4538, %r4536, %r4517;
	xor.b32  	%r4539, %r4537, %r4500;
	xor.b32  	%r4540, %r4537, %r4529;
	xor.b32  	%r4541, %r4538, %r4527;
	xor.b32  	%r4542, %r4541, %r4500;
	xor.b32  	%r4543, %r4540, %r4541;
	xor.b32  	%r4544, %r4541, %r4529;
	and.b32  	%r4545, %r4537, %r4532;
	and.b32  	%r4546, %r4539, %r4535;
	and.b32  	%r4547, %r4531, %r4500;
	and.b32  	%r4548, %r4544, %r4526;
	and.b32  	%r4549, %r4534, %r4530;
	and.b32  	%r4550, %r4542, %r4533;
	and.b32  	%r4551, %r4541, %r4527;
	and.b32  	%r4552, %r4543, %r4525;
	xor.b32  	%r4553, %r4552, %r4551;
	and.b32  	%r4554, %r4540, %r4528;
	xor.b32  	%r4555, %r4554, %r4551;
	xor.b32  	%r4556, %r4545, %r4538;
	xor.b32  	%r4557, %r4556, %r4546;
	xor.b32  	%r4558, %r4557, %r4553;
	xor.b32  	%r4559, %r4547, %r4528;
	xor.b32  	%r4560, %r4559, %r4540;
	xor.b32  	%r4561, %r4560, %r4545;
	xor.b32  	%r4562, %r4561, %r4555;
	xor.b32  	%r4563, %r4549, %r4526;
	xor.b32  	%r4564, %r4563, %r4544;
	xor.b32  	%r4565, %r4564, %r4548;
	xor.b32  	%r4566, %r4565, %r4553;
	xor.b32  	%r4567, %r4544, %r4524;
	xor.b32  	%r4568, %r4567, %r4548;
	xor.b32  	%r4569, %r4568, %r4550;
	xor.b32  	%r4570, %r4569, %r4555;
	xor.b32  	%r4571, %r4558, %r4562;
	and.b32  	%r4572, %r4558, %r4566;
	xor.b32  	%r4573, %r4572, %r4570;
	and.b32  	%r4574, %r4573, %r4571;
	xor.b32  	%r4575, %r4574, %r4562;
	xor.b32  	%r4576, %r4566, %r4570;
	xor.b32  	%r4577, %r4572, %r4562;
	and.b32  	%r4578, %r4577, %r4576;
	xor.b32  	%r4579, %r4578, %r4570;
	xor.b32  	%r4580, %r4579, %r4566;
	xor.b32  	%r4581, %r4578, %r4572;
	and.b32  	%r4582, %r4581, %r4570;
	xor.b32  	%r4583, %r4580, %r4582;
	xor.b32  	%r4584, %r4582, %r4573;
	and.b32  	%r4585, %r4584, %r4575;
	xor.b32  	%r4586, %r4585, %r4571;
	xor.b32  	%r4587, %r4586, %r4583;
	xor.b32  	%r4588, %r4575, %r4579;
	xor.b32  	%r4589, %r4586, %r4575;
	xor.b32  	%r4590, %r4582, %r4566;
	xor.b32  	%r4591, %r4587, %r4588;
	and.b32  	%r4592, %r4590, %r4537;
	and.b32  	%r4593, %r4583, %r4539;
	and.b32  	%r4594, %r4579, %r4500;
	and.b32  	%r4595, %r4589, %r4544;
	and.b32  	%r4596, %r4586, %r4530;
	and.b32  	%r4597, %r4575, %r4542;
	and.b32  	%r4598, %r4588, %r4541;
	and.b32  	%r4599, %r4591, %r4543;
	and.b32  	%r4600, %r4587, %r4540;
	and.b32  	%r4601, %r4590, %r4532;
	and.b32  	%r4602, %r4583, %r4535;
	and.b32  	%r4603, %r4579, %r4531;
	and.b32  	%r4604, %r4589, %r4526;
	and.b32  	%r4605, %r4586, %r4534;
	and.b32  	%r4606, %r4575, %r4533;
	and.b32  	%r4607, %r4588, %r4527;
	and.b32  	%r4608, %r4591, %r4525;
	and.b32  	%r4609, %r4587, %r4528;
	xor.b32  	%r4610, %r4608, %r4607;
	xor.b32  	%r4611, %r4602, %r4603;
	xor.b32  	%r4612, %r4605, %r4597;
	xor.b32  	%r4613, %r4601, %r4602;
	xor.b32  	%r4614, %r4604, %r4594;
	xor.b32  	%r4615, %r4594, %r4597;
	xor.b32  	%r4616, %r4599, %r4600;
	xor.b32  	%r4617, %r4595, %r4592;
	xor.b32  	%r4618, %r4614, %r4617;
	xor.b32  	%r4619, %r4610, %r4596;
	xor.b32  	%r4620, %r4595, %r4598;
	xor.b32  	%r4621, %r4620, %r4599;
	xor.b32  	%r4622, %r4618, %r4606;
	xor.b32  	%r4623, %r4616, %r4619;
	xor.b32  	%r4624, %r4613, %r4619;
	xor.b32  	%r4625, %r4621, %r4596;
	xor.b32  	%r4626, %r4622, %r4623;
	xor.b32  	%r4627, %r4624, %r4593;
	xor.b32  	%r4628, %r4624, %r4621;
	xor.b32  	%r4629, %r4612, 16843009;
	xor.b32  	%r4630, %r4604, %r4629;
	xor.b32  	%r4631, %r4630, %r4623;
	xor.b32  	%r4632, %r4618, %r4629;
	xor.b32  	%r4633, %r4632, %r4610;
	xor.b32  	%r4634, %r4627, %r4617;
	xor.b32  	%r4635, %r4615, %r4627;
	xor.b32  	%r4636, %r4611, %r4626;
	xor.b32  	%r4637, %r4634, %r4625;
	not.b32 	%r4638, %r4637;
	xor.b32  	%r4639, %r4608, %r4609;
	xor.b32  	%r4640, %r4639, %r4625;
	xor.b32  	%r4641, %r4640, %r4626;
	and.b32  	%r4642, %r4633, 16843009;
	shl.b32 	%r4643, %r4631, 1;
	and.b32  	%r4644, %r4643, 33686018;
	or.b32  	%r4645, %r4644, %r4642;
	and.b32  	%r4646, %r4636, 16843009;
	shl.b32 	%r4647, %r4635, 1;
	and.b32  	%r4648, %r4647, 33686018;
	or.b32  	%r4649, %r4648, %r4646;
	and.b32  	%r4650, %r4634, 16843009;
	shl.b32 	%r4651, %r4641, 1;
	not.b32 	%r4652, %r4651;
	and.b32  	%r4653, %r4652, 33686018;
	or.b32  	%r4654, %r4653, %r4650;
	and.b32  	%r4655, %r4638, 16843009;
	shl.b32 	%r4656, %r4628, 1;
	and.b32  	%r4657, %r4656, 33686018;
	or.b32  	%r4658, %r4657, %r4655;
	shl.b32 	%r4659, %r4649, 2;
	or.b32  	%r4660, %r4659, %r4645;
	shl.b32 	%r4661, %r4658, 2;
	or.b32  	%r4662, %r4661, %r4654;
	shl.b32 	%r4663, %r4662, 4;
	or.b32  	%r4664, %r4663, %r4660;
	cvt.s64.s32 	%rd38, %r8891;
	mov.u64 	%rd39, aes_keysched_base_$_Rcon;
	add.s64 	%rd40, %rd39, %rd38;
	ld.const.u8 	%r4665, [%rd40];
	xor.b32  	%r8894, %r4664, %r4665;

$L__BB2_20:
	ld.local.u32 	%r4666, [%rd54];
	xor.b32  	%r8894, %r4666, %r8894;
	add.s64 	%rd41, %rd54, %rd9;
	st.local.u32 	[%rd41], %r8894;
	add.s32 	%r4667, %r8893, 1;
	setp.eq.s32 	%p15, %r4667, %r80;
	selp.b32 	%r8893, 0, %r4667, %p15;
	selp.u32 	%r4668, 1, 0, %p15;
	add.s32 	%r8891, %r8891, %r4668;
	add.s64 	%rd54, %rd54, 4;
	add.s32 	%r8892, %r8892, 1;
	setp.lt.u32 	%p16, %r8892, %r81;
	@%p16 bra 	$L__BB2_16;

$L__BB2_21:
	ld.local.v4.u32 	{%r4669, %r4670, %r4671, %r4672}, [%rd2];
	and.b32  	%r4677, %r4669, 1431655765;
	shl.b32 	%r4678, %r4669, 1;
	and.b32  	%r4679, %r4678, -1431655766;
	or.b32  	%r4680, %r4679, %r4677;
	and.b32  	%r4681, %r4669, -1431655766;
	shr.u32 	%r4682, %r4681, 1;
	or.b32  	%r4683, %r4682, %r4681;
	and.b32  	%r4684, %r4670, 1431655765;
	shl.b32 	%r4685, %r4670, 1;
	and.b32  	%r4686, %r4685, -1431655766;
	or.b32  	%r4687, %r4686, %r4684;
	and.b32  	%r4688, %r4670, -1431655766;
	shr.u32 	%r4689, %r4688, 1;
	or.b32  	%r4690, %r4689, %r4688;
	and.b32  	%r4691, %r4671, 1431655765;
	shl.b32 	%r4692, %r4671, 1;
	and.b32  	%r4693, %r4692, -1431655766;
	or.b32  	%r4694, %r4693, %r4691;
	and.b32  	%r4695, %r4671, -1431655766;
	shr.u32 	%r4696, %r4695, 1;
	or.b32  	%r4697, %r4696, %r4695;
	and.b32  	%r4698, %r4672, 1431655765;
	shl.b32 	%r4699, %r4672, 1;
	and.b32  	%r4700, %r4699, -1431655766;
	or.b32  	%r4701, %r4700, %r4698;
	and.b32  	%r4702, %r4672, -1431655766;
	shr.u32 	%r4703, %r4702, 1;
	or.b32  	%r4704, %r4703, %r4702;
	and.b32  	%r4705, %r4680, 858993459;
	shl.b32 	%r4706, %r4687, 2;
	and.b32  	%r4707, %r4706, -858993460;
	or.b32  	%r4708, %r4707, %r4705;
	and.b32  	%r4709, %r4680, -858993460;
	shr.u32 	%r4710, %r4709, 2;
	and.b32  	%r4711, %r4687, -858993460;
	or.b32  	%r4712, %r4710, %r4711;
	and.b32  	%r4713, %r4683, 858993459;
	shl.b32 	%r4714, %r4690, 2;
	and.b32  	%r4715, %r4714, -858993460;
	or.b32  	%r4716, %r4715, %r4713;
	and.b32  	%r4717, %r4683, -858993460;
	shr.u32 	%r4718, %r4717, 2;
	and.b32  	%r4719, %r4690, -858993460;
	or.b32  	%r4720, %r4718, %r4719;
	and.b32  	%r4721, %r4694, 858993459;
	shl.b32 	%r4722, %r4701, 2;
	and.b32  	%r4723, %r4722, -858993460;
	or.b32  	%r4724, %r4723, %r4721;
	and.b32  	%r4725, %r4694, -858993460;
	shr.u32 	%r4726, %r4725, 2;
	and.b32  	%r4727, %r4701, -858993460;
	or.b32  	%r4728, %r4726, %r4727;
	and.b32  	%r4729, %r4697, 858993459;
	shl.b32 	%r4730, %r4704, 2;
	and.b32  	%r4731, %r4730, -858993460;
	or.b32  	%r4732, %r4731, %r4729;
	and.b32  	%r4733, %r4697, -858993460;
	shr.u32 	%r4734, %r4733, 2;
	and.b32  	%r4735, %r4704, -858993460;
	or.b32  	%r4736, %r4734, %r4735;
	and.b32  	%r4737, %r4708, 84215045;
	shl.b32 	%r4738, %r4724, 4;
	and.b32  	%r4739, %r4738, 1347440720;
	and.b32  	%r4740, %r4708, 1347440720;
	and.b32  	%r4741, %r4724, 1347440720;
	and.b32  	%r4742, %r4716, 168430090;
	shl.b32 	%r4743, %r4732, 4;
	and.b32  	%r4744, %r4743, -1600085856;
	and.b32  	%r4745, %r4716, -1600085856;
	and.b32  	%r4746, %r4732, -1600085856;
	and.b32  	%r4747, %r4712, 84215045;
	shl.b32 	%r4748, %r4728, 4;
	and.b32  	%r4749, %r4748, 1347440720;
	and.b32  	%r4750, %r4712, 1347440720;
	and.b32  	%r4751, %r4728, 1347440720;
	and.b32  	%r4752, %r4720, 168430090;
	shl.b32 	%r4753, %r4736, 4;
	and.b32  	%r4754, %r4753, -1600085856;
	and.b32  	%r4755, %r4720, -1600085856;
	and.b32  	%r4756, %r4736, -1600085856;
	or.b32  	%r4757, %r4742, %r4737;
	or.b32  	%r4758, %r4757, %r4739;
	or.b32  	%r4759, %r4758, %r4744;
	st.local.u32 	[%rd4], %r4759;
	or.b32  	%r4760, %r4752, %r4747;
	or.b32  	%r4761, %r4760, %r4749;
	or.b32  	%r4762, %r4761, %r4754;
	st.local.u32 	[%rd4+4], %r4762;
	or.b32  	%r4763, %r4745, %r4740;
	shr.u32 	%r4764, %r4763, 4;
	or.b32  	%r4765, %r4764, %r4741;
	or.b32  	%r4766, %r4765, %r4746;
	st.local.u32 	[%rd4+8], %r4766;
	or.b32  	%r4767, %r4755, %r4750;
	shr.u32 	%r4768, %r4767, 4;
	or.b32  	%r4769, %r4768, %r4751;
	or.b32  	%r4770, %r4769, %r4756;
	st.local.u32 	[%rd4+12], %r4770;
	setp.eq.s32 	%p17, %r8884, 0;
	@%p17 bra 	$L__BB2_29;

	ld.local.v4.u32 	{%r4771, %r4772, %r4773, %r4774}, [%rd2+16];
	and.b32  	%r4779, %r4771, 1431655765;
	shl.b32 	%r4780, %r4771, 1;
	and.b32  	%r4781, %r4780, -1431655766;
	or.b32  	%r4782, %r4781, %r4779;
	and.b32  	%r4783, %r4771, -1431655766;
	shr.u32 	%r4784, %r4783, 1;
	or.b32  	%r4785, %r4784, %r4783;
	and.b32  	%r4786, %r4772, 1431655765;
	shl.b32 	%r4787, %r4772, 1;
	and.b32  	%r4788, %r4787, -1431655766;
	or.b32  	%r4789, %r4788, %r4786;
	and.b32  	%r4790, %r4772, -1431655766;
	shr.u32 	%r4791, %r4790, 1;
	or.b32  	%r4792, %r4791, %r4790;
	and.b32  	%r4793, %r4773, 1431655765;
	shl.b32 	%r4794, %r4773, 1;
	and.b32  	%r4795, %r4794, -1431655766;
	or.b32  	%r4796, %r4795, %r4793;
	and.b32  	%r4797, %r4773, -1431655766;
	shr.u32 	%r4798, %r4797, 1;
	or.b32  	%r4799, %r4798, %r4797;
	and.b32  	%r4800, %r4774, 1431655765;
	shl.b32 	%r4801, %r4774, 1;
	and.b32  	%r4802, %r4801, -1431655766;
	or.b32  	%r4803, %r4802, %r4800;
	and.b32  	%r4804, %r4774, -1431655766;
	shr.u32 	%r4805, %r4804, 1;
	or.b32  	%r4806, %r4805, %r4804;
	and.b32  	%r4807, %r4782, 858993459;
	shl.b32 	%r4808, %r4789, 2;
	and.b32  	%r4809, %r4808, -858993460;
	or.b32  	%r4810, %r4809, %r4807;
	and.b32  	%r4811, %r4782, -858993460;
	shr.u32 	%r4812, %r4811, 2;
	and.b32  	%r4813, %r4789, -858993460;
	or.b32  	%r4814, %r4812, %r4813;
	and.b32  	%r4815, %r4785, 858993459;
	shl.b32 	%r4816, %r4792, 2;
	and.b32  	%r4817, %r4816, -858993460;
	or.b32  	%r4818, %r4817, %r4815;
	and.b32  	%r4819, %r4785, -858993460;
	shr.u32 	%r4820, %r4819, 2;
	and.b32  	%r4821, %r4792, -858993460;
	or.b32  	%r4822, %r4820, %r4821;
	and.b32  	%r4823, %r4796, 858993459;
	shl.b32 	%r4824, %r4803, 2;
	and.b32  	%r4825, %r4824, -858993460;
	or.b32  	%r4826, %r4825, %r4823;
	and.b32  	%r4827, %r4796, -858993460;
	shr.u32 	%r4828, %r4827, 2;
	and.b32  	%r4829, %r4803, -858993460;
	or.b32  	%r4830, %r4828, %r4829;
	and.b32  	%r4831, %r4799, 858993459;
	shl.b32 	%r4832, %r4806, 2;
	and.b32  	%r4833, %r4832, -858993460;
	or.b32  	%r4834, %r4833, %r4831;
	and.b32  	%r4835, %r4799, -858993460;
	shr.u32 	%r4836, %r4835, 2;
	and.b32  	%r4837, %r4806, -858993460;
	or.b32  	%r4838, %r4836, %r4837;
	and.b32  	%r4839, %r4810, 84215045;
	shl.b32 	%r4840, %r4826, 4;
	and.b32  	%r4841, %r4840, 1347440720;
	and.b32  	%r4842, %r4810, 1347440720;
	and.b32  	%r4843, %r4826, 1347440720;
	and.b32  	%r4844, %r4818, 168430090;
	shl.b32 	%r4845, %r4834, 4;
	and.b32  	%r4846, %r4845, -1600085856;
	and.b32  	%r4847, %r4818, -1600085856;
	and.b32  	%r4848, %r4834, -1600085856;
	and.b32  	%r4849, %r4814, 84215045;
	shl.b32 	%r4850, %r4830, 4;
	and.b32  	%r4851, %r4850, 1347440720;
	and.b32  	%r4852, %r4814, 1347440720;
	and.b32  	%r4853, %r4830, 1347440720;
	and.b32  	%r4854, %r4822, 168430090;
	shl.b32 	%r4855, %r4838, 4;
	and.b32  	%r4856, %r4855, -1600085856;
	and.b32  	%r4857, %r4822, -1600085856;
	and.b32  	%r4858, %r4838, -1600085856;
	or.b32  	%r4859, %r4844, %r4839;
	or.b32  	%r4860, %r4859, %r4841;
	or.b32  	%r4861, %r4860, %r4846;
	st.local.u32 	[%rd4+16], %r4861;
	or.b32  	%r4862, %r4854, %r4849;
	or.b32  	%r4863, %r4862, %r4851;
	or.b32  	%r4864, %r4863, %r4856;
	st.local.u32 	[%rd4+20], %r4864;
	or.b32  	%r4865, %r4847, %r4842;
	shr.u32 	%r4866, %r4865, 4;
	or.b32  	%r4867, %r4866, %r4843;
	or.b32  	%r4868, %r4867, %r4848;
	st.local.u32 	[%rd4+24], %r4868;
	or.b32  	%r4869, %r4857, %r4852;
	shr.u32 	%r4870, %r4869, 4;
	or.b32  	%r4871, %r4870, %r4853;
	or.b32  	%r4872, %r4871, %r4858;
	st.local.u32 	[%rd4+28], %r4872;
	ld.local.v4.u32 	{%r4873, %r4874, %r4875, %r4876}, [%rd2+32];
	and.b32  	%r4881, %r4873, 1431655765;
	shl.b32 	%r4882, %r4873, 1;
	and.b32  	%r4883, %r4882, -1431655766;
	or.b32  	%r4884, %r4883, %r4881;
	and.b32  	%r4885, %r4873, -1431655766;
	shr.u32 	%r4886, %r4885, 1;
	or.b32  	%r4887, %r4886, %r4885;
	and.b32  	%r4888, %r4874, 1431655765;
	shl.b32 	%r4889, %r4874, 1;
	and.b32  	%r4890, %r4889, -1431655766;
	or.b32  	%r4891, %r4890, %r4888;
	and.b32  	%r4892, %r4874, -1431655766;
	shr.u32 	%r4893, %r4892, 1;
	or.b32  	%r4894, %r4893, %r4892;
	and.b32  	%r4895, %r4875, 1431655765;
	shl.b32 	%r4896, %r4875, 1;
	and.b32  	%r4897, %r4896, -1431655766;
	or.b32  	%r4898, %r4897, %r4895;
	and.b32  	%r4899, %r4875, -1431655766;
	shr.u32 	%r4900, %r4899, 1;
	or.b32  	%r4901, %r4900, %r4899;
	and.b32  	%r4902, %r4876, 1431655765;
	shl.b32 	%r4903, %r4876, 1;
	and.b32  	%r4904, %r4903, -1431655766;
	or.b32  	%r4905, %r4904, %r4902;
	and.b32  	%r4906, %r4876, -1431655766;
	shr.u32 	%r4907, %r4906, 1;
	or.b32  	%r4908, %r4907, %r4906;
	and.b32  	%r4909, %r4884, 858993459;
	shl.b32 	%r4910, %r4891, 2;
	and.b32  	%r4911, %r4910, -858993460;
	or.b32  	%r4912, %r4911, %r4909;
	and.b32  	%r4913, %r4884, -858993460;
	shr.u32 	%r4914, %r4913, 2;
	and.b32  	%r4915, %r4891, -858993460;
	or.b32  	%r4916, %r4914, %r4915;
	and.b32  	%r4917, %r4887, 858993459;
	shl.b32 	%r4918, %r4894, 2;
	and.b32  	%r4919, %r4918, -858993460;
	or.b32  	%r4920, %r4919, %r4917;
	and.b32  	%r4921, %r4887, -858993460;
	shr.u32 	%r4922, %r4921, 2;
	and.b32  	%r4923, %r4894, -858993460;
	or.b32  	%r4924, %r4922, %r4923;
	and.b32  	%r4925, %r4898, 858993459;
	shl.b32 	%r4926, %r4905, 2;
	and.b32  	%r4927, %r4926, -858993460;
	or.b32  	%r4928, %r4927, %r4925;
	and.b32  	%r4929, %r4898, -858993460;
	shr.u32 	%r4930, %r4929, 2;
	and.b32  	%r4931, %r4905, -858993460;
	or.b32  	%r4932, %r4930, %r4931;
	and.b32  	%r4933, %r4901, 858993459;
	shl.b32 	%r4934, %r4908, 2;
	and.b32  	%r4935, %r4934, -858993460;
	or.b32  	%r4936, %r4935, %r4933;
	and.b32  	%r4937, %r4901, -858993460;
	shr.u32 	%r4938, %r4937, 2;
	and.b32  	%r4939, %r4908, -858993460;
	or.b32  	%r4940, %r4938, %r4939;
	and.b32  	%r4941, %r4912, 84215045;
	shl.b32 	%r4942, %r4928, 4;
	and.b32  	%r4943, %r4942, 1347440720;
	and.b32  	%r4944, %r4912, 1347440720;
	and.b32  	%r4945, %r4928, 1347440720;
	and.b32  	%r4946, %r4920, 168430090;
	shl.b32 	%r4947, %r4936, 4;
	and.b32  	%r4948, %r4947, -1600085856;
	and.b32  	%r4949, %r4920, -1600085856;
	and.b32  	%r4950, %r4936, -1600085856;
	and.b32  	%r4951, %r4916, 84215045;
	shl.b32 	%r4952, %r4932, 4;
	and.b32  	%r4953, %r4952, 1347440720;
	and.b32  	%r4954, %r4916, 1347440720;
	and.b32  	%r4955, %r4932, 1347440720;
	and.b32  	%r4956, %r4924, 168430090;
	shl.b32 	%r4957, %r4940, 4;
	and.b32  	%r4958, %r4957, -1600085856;
	and.b32  	%r4959, %r4924, -1600085856;
	and.b32  	%r4960, %r4940, -1600085856;
	or.b32  	%r4961, %r4946, %r4941;
	or.b32  	%r4962, %r4961, %r4943;
	or.b32  	%r4963, %r4962, %r4948;
	st.local.u32 	[%rd4+32], %r4963;
	or.b32  	%r4964, %r4956, %r4951;
	or.b32  	%r4965, %r4964, %r4953;
	or.b32  	%r4966, %r4965, %r4958;
	st.local.u32 	[%rd4+36], %r4966;
	or.b32  	%r4967, %r4949, %r4944;
	shr.u32 	%r4968, %r4967, 4;
	or.b32  	%r4969, %r4968, %r4945;
	or.b32  	%r4970, %r4969, %r4950;
	st.local.u32 	[%rd4+40], %r4970;
	or.b32  	%r4971, %r4959, %r4954;
	shr.u32 	%r4972, %r4971, 4;
	or.b32  	%r4973, %r4972, %r4955;
	or.b32  	%r4974, %r4973, %r4960;
	st.local.u32 	[%rd4+44], %r4974;
	setp.lt.u32 	%p18, %r8884, 3;
	@%p18 bra 	$L__BB2_29;

	ld.local.v4.u32 	{%r4975, %r4976, %r4977, %r4978}, [%rd2+48];
	and.b32  	%r4983, %r4975, 1431655765;
	shl.b32 	%r4984, %r4975, 1;
	and.b32  	%r4985, %r4984, -1431655766;
	or.b32  	%r4986, %r4985, %r4983;
	and.b32  	%r4987, %r4975, -1431655766;
	shr.u32 	%r4988, %r4987, 1;
	or.b32  	%r4989, %r4988, %r4987;
	and.b32  	%r4990, %r4976, 1431655765;
	shl.b32 	%r4991, %r4976, 1;
	and.b32  	%r4992, %r4991, -1431655766;
	or.b32  	%r4993, %r4992, %r4990;
	and.b32  	%r4994, %r4976, -1431655766;
	shr.u32 	%r4995, %r4994, 1;
	or.b32  	%r4996, %r4995, %r4994;
	and.b32  	%r4997, %r4977, 1431655765;
	shl.b32 	%r4998, %r4977, 1;
	and.b32  	%r4999, %r4998, -1431655766;
	or.b32  	%r5000, %r4999, %r4997;
	and.b32  	%r5001, %r4977, -1431655766;
	shr.u32 	%r5002, %r5001, 1;
	or.b32  	%r5003, %r5002, %r5001;
	and.b32  	%r5004, %r4978, 1431655765;
	shl.b32 	%r5005, %r4978, 1;
	and.b32  	%r5006, %r5005, -1431655766;
	or.b32  	%r5007, %r5006, %r5004;
	and.b32  	%r5008, %r4978, -1431655766;
	shr.u32 	%r5009, %r5008, 1;
	or.b32  	%r5010, %r5009, %r5008;
	and.b32  	%r5011, %r4986, 858993459;
	shl.b32 	%r5012, %r4993, 2;
	and.b32  	%r5013, %r5012, -858993460;
	or.b32  	%r5014, %r5013, %r5011;
	and.b32  	%r5015, %r4986, -858993460;
	shr.u32 	%r5016, %r5015, 2;
	and.b32  	%r5017, %r4993, -858993460;
	or.b32  	%r5018, %r5016, %r5017;
	and.b32  	%r5019, %r4989, 858993459;
	shl.b32 	%r5020, %r4996, 2;
	and.b32  	%r5021, %r5020, -858993460;
	or.b32  	%r5022, %r5021, %r5019;
	and.b32  	%r5023, %r4989, -858993460;
	shr.u32 	%r5024, %r5023, 2;
	and.b32  	%r5025, %r4996, -858993460;
	or.b32  	%r5026, %r5024, %r5025;
	and.b32  	%r5027, %r5000, 858993459;
	shl.b32 	%r5028, %r5007, 2;
	and.b32  	%r5029, %r5028, -858993460;
	or.b32  	%r5030, %r5029, %r5027;
	and.b32  	%r5031, %r5000, -858993460;
	shr.u32 	%r5032, %r5031, 2;
	and.b32  	%r5033, %r5007, -858993460;
	or.b32  	%r5034, %r5032, %r5033;
	and.b32  	%r5035, %r5003, 858993459;
	shl.b32 	%r5036, %r5010, 2;
	and.b32  	%r5037, %r5036, -858993460;
	or.b32  	%r5038, %r5037, %r5035;
	and.b32  	%r5039, %r5003, -858993460;
	shr.u32 	%r5040, %r5039, 2;
	and.b32  	%r5041, %r5010, -858993460;
	or.b32  	%r5042, %r5040, %r5041;
	and.b32  	%r5043, %r5014, 84215045;
	shl.b32 	%r5044, %r5030, 4;
	and.b32  	%r5045, %r5044, 1347440720;
	and.b32  	%r5046, %r5014, 1347440720;
	and.b32  	%r5047, %r5030, 1347440720;
	and.b32  	%r5048, %r5022, 168430090;
	shl.b32 	%r5049, %r5038, 4;
	and.b32  	%r5050, %r5049, -1600085856;
	and.b32  	%r5051, %r5022, -1600085856;
	and.b32  	%r5052, %r5038, -1600085856;
	and.b32  	%r5053, %r5018, 84215045;
	shl.b32 	%r5054, %r5034, 4;
	and.b32  	%r5055, %r5054, 1347440720;
	and.b32  	%r5056, %r5018, 1347440720;
	and.b32  	%r5057, %r5034, 1347440720;
	and.b32  	%r5058, %r5026, 168430090;
	shl.b32 	%r5059, %r5042, 4;
	and.b32  	%r5060, %r5059, -1600085856;
	and.b32  	%r5061, %r5026, -1600085856;
	and.b32  	%r5062, %r5042, -1600085856;
	or.b32  	%r5063, %r5048, %r5043;
	or.b32  	%r5064, %r5063, %r5045;
	or.b32  	%r5065, %r5064, %r5050;
	st.local.u32 	[%rd4+48], %r5065;
	or.b32  	%r5066, %r5058, %r5053;
	or.b32  	%r5067, %r5066, %r5055;
	or.b32  	%r5068, %r5067, %r5060;
	st.local.u32 	[%rd4+52], %r5068;
	or.b32  	%r5069, %r5051, %r5046;
	shr.u32 	%r5070, %r5069, 4;
	or.b32  	%r5071, %r5070, %r5047;
	or.b32  	%r5072, %r5071, %r5052;
	st.local.u32 	[%rd4+56], %r5072;
	or.b32  	%r5073, %r5061, %r5056;
	shr.u32 	%r5074, %r5073, 4;
	or.b32  	%r5075, %r5074, %r5057;
	or.b32  	%r5076, %r5075, %r5062;
	st.local.u32 	[%rd4+60], %r5076;
	ld.local.v4.u32 	{%r5077, %r5078, %r5079, %r5080}, [%rd2+64];
	and.b32  	%r5085, %r5077, 1431655765;
	shl.b32 	%r5086, %r5077, 1;
	and.b32  	%r5087, %r5086, -1431655766;
	or.b32  	%r5088, %r5087, %r5085;
	and.b32  	%r5089, %r5077, -1431655766;
	shr.u32 	%r5090, %r5089, 1;
	or.b32  	%r5091, %r5090, %r5089;
	and.b32  	%r5092, %r5078, 1431655765;
	shl.b32 	%r5093, %r5078, 1;
	and.b32  	%r5094, %r5093, -1431655766;
	or.b32  	%r5095, %r5094, %r5092;
	and.b32  	%r5096, %r5078, -1431655766;
	shr.u32 	%r5097, %r5096, 1;
	or.b32  	%r5098, %r5097, %r5096;
	and.b32  	%r5099, %r5079, 1431655765;
	shl.b32 	%r5100, %r5079, 1;
	and.b32  	%r5101, %r5100, -1431655766;
	or.b32  	%r5102, %r5101, %r5099;
	and.b32  	%r5103, %r5079, -1431655766;
	shr.u32 	%r5104, %r5103, 1;
	or.b32  	%r5105, %r5104, %r5103;
	and.b32  	%r5106, %r5080, 1431655765;
	shl.b32 	%r5107, %r5080, 1;
	and.b32  	%r5108, %r5107, -1431655766;
	or.b32  	%r5109, %r5108, %r5106;
	and.b32  	%r5110, %r5080, -1431655766;
	shr.u32 	%r5111, %r5110, 1;
	or.b32  	%r5112, %r5111, %r5110;
	and.b32  	%r5113, %r5088, 858993459;
	shl.b32 	%r5114, %r5095, 2;
	and.b32  	%r5115, %r5114, -858993460;
	or.b32  	%r5116, %r5115, %r5113;
	and.b32  	%r5117, %r5088, -858993460;
	shr.u32 	%r5118, %r5117, 2;
	and.b32  	%r5119, %r5095, -858993460;
	or.b32  	%r5120, %r5118, %r5119;
	and.b32  	%r5121, %r5091, 858993459;
	shl.b32 	%r5122, %r5098, 2;
	and.b32  	%r5123, %r5122, -858993460;
	or.b32  	%r5124, %r5123, %r5121;
	and.b32  	%r5125, %r5091, -858993460;
	shr.u32 	%r5126, %r5125, 2;
	and.b32  	%r5127, %r5098, -858993460;
	or.b32  	%r5128, %r5126, %r5127;
	and.b32  	%r5129, %r5102, 858993459;
	shl.b32 	%r5130, %r5109, 2;
	and.b32  	%r5131, %r5130, -858993460;
	or.b32  	%r5132, %r5131, %r5129;
	and.b32  	%r5133, %r5102, -858993460;
	shr.u32 	%r5134, %r5133, 2;
	and.b32  	%r5135, %r5109, -858993460;
	or.b32  	%r5136, %r5134, %r5135;
	and.b32  	%r5137, %r5105, 858993459;
	shl.b32 	%r5138, %r5112, 2;
	and.b32  	%r5139, %r5138, -858993460;
	or.b32  	%r5140, %r5139, %r5137;
	and.b32  	%r5141, %r5105, -858993460;
	shr.u32 	%r5142, %r5141, 2;
	and.b32  	%r5143, %r5112, -858993460;
	or.b32  	%r5144, %r5142, %r5143;
	and.b32  	%r5145, %r5116, 84215045;
	shl.b32 	%r5146, %r5132, 4;
	and.b32  	%r5147, %r5146, 1347440720;
	and.b32  	%r5148, %r5116, 1347440720;
	and.b32  	%r5149, %r5132, 1347440720;
	and.b32  	%r5150, %r5124, 168430090;
	shl.b32 	%r5151, %r5140, 4;
	and.b32  	%r5152, %r5151, -1600085856;
	and.b32  	%r5153, %r5124, -1600085856;
	and.b32  	%r5154, %r5140, -1600085856;
	and.b32  	%r5155, %r5120, 84215045;
	shl.b32 	%r5156, %r5136, 4;
	and.b32  	%r5157, %r5156, 1347440720;
	and.b32  	%r5158, %r5120, 1347440720;
	and.b32  	%r5159, %r5136, 1347440720;
	and.b32  	%r5160, %r5128, 168430090;
	shl.b32 	%r5161, %r5144, 4;
	and.b32  	%r5162, %r5161, -1600085856;
	and.b32  	%r5163, %r5128, -1600085856;
	and.b32  	%r5164, %r5144, -1600085856;
	or.b32  	%r5165, %r5150, %r5145;
	or.b32  	%r5166, %r5165, %r5147;
	or.b32  	%r5167, %r5166, %r5152;
	st.local.u32 	[%rd4+64], %r5167;
	or.b32  	%r5168, %r5160, %r5155;
	or.b32  	%r5169, %r5168, %r5157;
	or.b32  	%r5170, %r5169, %r5162;
	st.local.u32 	[%rd4+68], %r5170;
	or.b32  	%r5171, %r5153, %r5148;
	shr.u32 	%r5172, %r5171, 4;
	or.b32  	%r5173, %r5172, %r5149;
	or.b32  	%r5174, %r5173, %r5154;
	st.local.u32 	[%rd4+72], %r5174;
	or.b32  	%r5175, %r5163, %r5158;
	shr.u32 	%r5176, %r5175, 4;
	or.b32  	%r5177, %r5176, %r5159;
	or.b32  	%r5178, %r5177, %r5164;
	st.local.u32 	[%rd4+76], %r5178;
	setp.lt.u32 	%p19, %r8884, 5;
	@%p19 bra 	$L__BB2_29;

	ld.local.v4.u32 	{%r5179, %r5180, %r5181, %r5182}, [%rd2+80];
	and.b32  	%r5187, %r5179, 1431655765;
	shl.b32 	%r5188, %r5179, 1;
	and.b32  	%r5189, %r5188, -1431655766;
	or.b32  	%r5190, %r5189, %r5187;
	and.b32  	%r5191, %r5179, -1431655766;
	shr.u32 	%r5192, %r5191, 1;
	or.b32  	%r5193, %r5192, %r5191;
	and.b32  	%r5194, %r5180, 1431655765;
	shl.b32 	%r5195, %r5180, 1;
	and.b32  	%r5196, %r5195, -1431655766;
	or.b32  	%r5197, %r5196, %r5194;
	and.b32  	%r5198, %r5180, -1431655766;
	shr.u32 	%r5199, %r5198, 1;
	or.b32  	%r5200, %r5199, %r5198;
	and.b32  	%r5201, %r5181, 1431655765;
	shl.b32 	%r5202, %r5181, 1;
	and.b32  	%r5203, %r5202, -1431655766;
	or.b32  	%r5204, %r5203, %r5201;
	and.b32  	%r5205, %r5181, -1431655766;
	shr.u32 	%r5206, %r5205, 1;
	or.b32  	%r5207, %r5206, %r5205;
	and.b32  	%r5208, %r5182, 1431655765;
	shl.b32 	%r5209, %r5182, 1;
	and.b32  	%r5210, %r5209, -1431655766;
	or.b32  	%r5211, %r5210, %r5208;
	and.b32  	%r5212, %r5182, -1431655766;
	shr.u32 	%r5213, %r5212, 1;
	or.b32  	%r5214, %r5213, %r5212;
	and.b32  	%r5215, %r5190, 858993459;
	shl.b32 	%r5216, %r5197, 2;
	and.b32  	%r5217, %r5216, -858993460;
	or.b32  	%r5218, %r5217, %r5215;
	and.b32  	%r5219, %r5190, -858993460;
	shr.u32 	%r5220, %r5219, 2;
	and.b32  	%r5221, %r5197, -858993460;
	or.b32  	%r5222, %r5220, %r5221;
	and.b32  	%r5223, %r5193, 858993459;
	shl.b32 	%r5224, %r5200, 2;
	and.b32  	%r5225, %r5224, -858993460;
	or.b32  	%r5226, %r5225, %r5223;
	and.b32  	%r5227, %r5193, -858993460;
	shr.u32 	%r5228, %r5227, 2;
	and.b32  	%r5229, %r5200, -858993460;
	or.b32  	%r5230, %r5228, %r5229;
	and.b32  	%r5231, %r5204, 858993459;
	shl.b32 	%r5232, %r5211, 2;
	and.b32  	%r5233, %r5232, -858993460;
	or.b32  	%r5234, %r5233, %r5231;
	and.b32  	%r5235, %r5204, -858993460;
	shr.u32 	%r5236, %r5235, 2;
	and.b32  	%r5237, %r5211, -858993460;
	or.b32  	%r5238, %r5236, %r5237;
	and.b32  	%r5239, %r5207, 858993459;
	shl.b32 	%r5240, %r5214, 2;
	and.b32  	%r5241, %r5240, -858993460;
	or.b32  	%r5242, %r5241, %r5239;
	and.b32  	%r5243, %r5207, -858993460;
	shr.u32 	%r5244, %r5243, 2;
	and.b32  	%r5245, %r5214, -858993460;
	or.b32  	%r5246, %r5244, %r5245;
	and.b32  	%r5247, %r5218, 84215045;
	shl.b32 	%r5248, %r5234, 4;
	and.b32  	%r5249, %r5248, 1347440720;
	and.b32  	%r5250, %r5218, 1347440720;
	and.b32  	%r5251, %r5234, 1347440720;
	and.b32  	%r5252, %r5226, 168430090;
	shl.b32 	%r5253, %r5242, 4;
	and.b32  	%r5254, %r5253, -1600085856;
	and.b32  	%r5255, %r5226, -1600085856;
	and.b32  	%r5256, %r5242, -1600085856;
	and.b32  	%r5257, %r5222, 84215045;
	shl.b32 	%r5258, %r5238, 4;
	and.b32  	%r5259, %r5258, 1347440720;
	and.b32  	%r5260, %r5222, 1347440720;
	and.b32  	%r5261, %r5238, 1347440720;
	and.b32  	%r5262, %r5230, 168430090;
	shl.b32 	%r5263, %r5246, 4;
	and.b32  	%r5264, %r5263, -1600085856;
	and.b32  	%r5265, %r5230, -1600085856;
	and.b32  	%r5266, %r5246, -1600085856;
	or.b32  	%r5267, %r5252, %r5247;
	or.b32  	%r5268, %r5267, %r5249;
	or.b32  	%r5269, %r5268, %r5254;
	st.local.u32 	[%rd4+80], %r5269;
	or.b32  	%r5270, %r5262, %r5257;
	or.b32  	%r5271, %r5270, %r5259;
	or.b32  	%r5272, %r5271, %r5264;
	st.local.u32 	[%rd4+84], %r5272;
	or.b32  	%r5273, %r5255, %r5250;
	shr.u32 	%r5274, %r5273, 4;
	or.b32  	%r5275, %r5274, %r5251;
	or.b32  	%r5276, %r5275, %r5256;
	st.local.u32 	[%rd4+88], %r5276;
	or.b32  	%r5277, %r5265, %r5260;
	shr.u32 	%r5278, %r5277, 4;
	or.b32  	%r5279, %r5278, %r5261;
	or.b32  	%r5280, %r5279, %r5266;
	st.local.u32 	[%rd4+92], %r5280;
	ld.local.v4.u32 	{%r5281, %r5282, %r5283, %r5284}, [%rd2+96];
	and.b32  	%r5289, %r5281, 1431655765;
	shl.b32 	%r5290, %r5281, 1;
	and.b32  	%r5291, %r5290, -1431655766;
	or.b32  	%r5292, %r5291, %r5289;
	and.b32  	%r5293, %r5281, -1431655766;
	shr.u32 	%r5294, %r5293, 1;
	or.b32  	%r5295, %r5294, %r5293;
	and.b32  	%r5296, %r5282, 1431655765;
	shl.b32 	%r5297, %r5282, 1;
	and.b32  	%r5298, %r5297, -1431655766;
	or.b32  	%r5299, %r5298, %r5296;
	and.b32  	%r5300, %r5282, -1431655766;
	shr.u32 	%r5301, %r5300, 1;
	or.b32  	%r5302, %r5301, %r5300;
	and.b32  	%r5303, %r5283, 1431655765;
	shl.b32 	%r5304, %r5283, 1;
	and.b32  	%r5305, %r5304, -1431655766;
	or.b32  	%r5306, %r5305, %r5303;
	and.b32  	%r5307, %r5283, -1431655766;
	shr.u32 	%r5308, %r5307, 1;
	or.b32  	%r5309, %r5308, %r5307;
	and.b32  	%r5310, %r5284, 1431655765;
	shl.b32 	%r5311, %r5284, 1;
	and.b32  	%r5312, %r5311, -1431655766;
	or.b32  	%r5313, %r5312, %r5310;
	and.b32  	%r5314, %r5284, -1431655766;
	shr.u32 	%r5315, %r5314, 1;
	or.b32  	%r5316, %r5315, %r5314;
	and.b32  	%r5317, %r5292, 858993459;
	shl.b32 	%r5318, %r5299, 2;
	and.b32  	%r5319, %r5318, -858993460;
	or.b32  	%r5320, %r5319, %r5317;
	and.b32  	%r5321, %r5292, -858993460;
	shr.u32 	%r5322, %r5321, 2;
	and.b32  	%r5323, %r5299, -858993460;
	or.b32  	%r5324, %r5322, %r5323;
	and.b32  	%r5325, %r5295, 858993459;
	shl.b32 	%r5326, %r5302, 2;
	and.b32  	%r5327, %r5326, -858993460;
	or.b32  	%r5328, %r5327, %r5325;
	and.b32  	%r5329, %r5295, -858993460;
	shr.u32 	%r5330, %r5329, 2;
	and.b32  	%r5331, %r5302, -858993460;
	or.b32  	%r5332, %r5330, %r5331;
	and.b32  	%r5333, %r5306, 858993459;
	shl.b32 	%r5334, %r5313, 2;
	and.b32  	%r5335, %r5334, -858993460;
	or.b32  	%r5336, %r5335, %r5333;
	and.b32  	%r5337, %r5306, -858993460;
	shr.u32 	%r5338, %r5337, 2;
	and.b32  	%r5339, %r5313, -858993460;
	or.b32  	%r5340, %r5338, %r5339;
	and.b32  	%r5341, %r5309, 858993459;
	shl.b32 	%r5342, %r5316, 2;
	and.b32  	%r5343, %r5342, -858993460;
	or.b32  	%r5344, %r5343, %r5341;
	and.b32  	%r5345, %r5309, -858993460;
	shr.u32 	%r5346, %r5345, 2;
	and.b32  	%r5347, %r5316, -858993460;
	or.b32  	%r5348, %r5346, %r5347;
	and.b32  	%r5349, %r5320, 84215045;
	shl.b32 	%r5350, %r5336, 4;
	and.b32  	%r5351, %r5350, 1347440720;
	and.b32  	%r5352, %r5320, 1347440720;
	and.b32  	%r5353, %r5336, 1347440720;
	and.b32  	%r5354, %r5328, 168430090;
	shl.b32 	%r5355, %r5344, 4;
	and.b32  	%r5356, %r5355, -1600085856;
	and.b32  	%r5357, %r5328, -1600085856;
	and.b32  	%r5358, %r5344, -1600085856;
	and.b32  	%r5359, %r5324, 84215045;
	shl.b32 	%r5360, %r5340, 4;
	and.b32  	%r5361, %r5360, 1347440720;
	and.b32  	%r5362, %r5324, 1347440720;
	and.b32  	%r5363, %r5340, 1347440720;
	and.b32  	%r5364, %r5332, 168430090;
	shl.b32 	%r5365, %r5348, 4;
	and.b32  	%r5366, %r5365, -1600085856;
	and.b32  	%r5367, %r5332, -1600085856;
	and.b32  	%r5368, %r5348, -1600085856;
	or.b32  	%r5369, %r5354, %r5349;
	or.b32  	%r5370, %r5369, %r5351;
	or.b32  	%r5371, %r5370, %r5356;
	st.local.u32 	[%rd4+96], %r5371;
	or.b32  	%r5372, %r5364, %r5359;
	or.b32  	%r5373, %r5372, %r5361;
	or.b32  	%r5374, %r5373, %r5366;
	st.local.u32 	[%rd4+100], %r5374;
	or.b32  	%r5375, %r5357, %r5352;
	shr.u32 	%r5376, %r5375, 4;
	or.b32  	%r5377, %r5376, %r5353;
	or.b32  	%r5378, %r5377, %r5358;
	st.local.u32 	[%rd4+104], %r5378;
	or.b32  	%r5379, %r5367, %r5362;
	shr.u32 	%r5380, %r5379, 4;
	or.b32  	%r5381, %r5380, %r5363;
	or.b32  	%r5382, %r5381, %r5368;
	st.local.u32 	[%rd4+108], %r5382;
	setp.lt.u32 	%p20, %r8884, 7;
	@%p20 bra 	$L__BB2_29;

	ld.local.v4.u32 	{%r5383, %r5384, %r5385, %r5386}, [%rd2+112];
	and.b32  	%r5391, %r5383, 1431655765;
	shl.b32 	%r5392, %r5383, 1;
	and.b32  	%r5393, %r5392, -1431655766;
	or.b32  	%r5394, %r5393, %r5391;
	and.b32  	%r5395, %r5383, -1431655766;
	shr.u32 	%r5396, %r5395, 1;
	or.b32  	%r5397, %r5396, %r5395;
	and.b32  	%r5398, %r5384, 1431655765;
	shl.b32 	%r5399, %r5384, 1;
	and.b32  	%r5400, %r5399, -1431655766;
	or.b32  	%r5401, %r5400, %r5398;
	and.b32  	%r5402, %r5384, -1431655766;
	shr.u32 	%r5403, %r5402, 1;
	or.b32  	%r5404, %r5403, %r5402;
	and.b32  	%r5405, %r5385, 1431655765;
	shl.b32 	%r5406, %r5385, 1;
	and.b32  	%r5407, %r5406, -1431655766;
	or.b32  	%r5408, %r5407, %r5405;
	and.b32  	%r5409, %r5385, -1431655766;
	shr.u32 	%r5410, %r5409, 1;
	or.b32  	%r5411, %r5410, %r5409;
	and.b32  	%r5412, %r5386, 1431655765;
	shl.b32 	%r5413, %r5386, 1;
	and.b32  	%r5414, %r5413, -1431655766;
	or.b32  	%r5415, %r5414, %r5412;
	and.b32  	%r5416, %r5386, -1431655766;
	shr.u32 	%r5417, %r5416, 1;
	or.b32  	%r5418, %r5417, %r5416;
	and.b32  	%r5419, %r5394, 858993459;
	shl.b32 	%r5420, %r5401, 2;
	and.b32  	%r5421, %r5420, -858993460;
	or.b32  	%r5422, %r5421, %r5419;
	and.b32  	%r5423, %r5394, -858993460;
	shr.u32 	%r5424, %r5423, 2;
	and.b32  	%r5425, %r5401, -858993460;
	or.b32  	%r5426, %r5424, %r5425;
	and.b32  	%r5427, %r5397, 858993459;
	shl.b32 	%r5428, %r5404, 2;
	and.b32  	%r5429, %r5428, -858993460;
	or.b32  	%r5430, %r5429, %r5427;
	and.b32  	%r5431, %r5397, -858993460;
	shr.u32 	%r5432, %r5431, 2;
	and.b32  	%r5433, %r5404, -858993460;
	or.b32  	%r5434, %r5432, %r5433;
	and.b32  	%r5435, %r5408, 858993459;
	shl.b32 	%r5436, %r5415, 2;
	and.b32  	%r5437, %r5436, -858993460;
	or.b32  	%r5438, %r5437, %r5435;
	and.b32  	%r5439, %r5408, -858993460;
	shr.u32 	%r5440, %r5439, 2;
	and.b32  	%r5441, %r5415, -858993460;
	or.b32  	%r5442, %r5440, %r5441;
	and.b32  	%r5443, %r5411, 858993459;
	shl.b32 	%r5444, %r5418, 2;
	and.b32  	%r5445, %r5444, -858993460;
	or.b32  	%r5446, %r5445, %r5443;
	and.b32  	%r5447, %r5411, -858993460;
	shr.u32 	%r5448, %r5447, 2;
	and.b32  	%r5449, %r5418, -858993460;
	or.b32  	%r5450, %r5448, %r5449;
	and.b32  	%r5451, %r5422, 84215045;
	shl.b32 	%r5452, %r5438, 4;
	and.b32  	%r5453, %r5452, 1347440720;
	and.b32  	%r5454, %r5422, 1347440720;
	and.b32  	%r5455, %r5438, 1347440720;
	and.b32  	%r5456, %r5430, 168430090;
	shl.b32 	%r5457, %r5446, 4;
	and.b32  	%r5458, %r5457, -1600085856;
	and.b32  	%r5459, %r5430, -1600085856;
	and.b32  	%r5460, %r5446, -1600085856;
	and.b32  	%r5461, %r5426, 84215045;
	shl.b32 	%r5462, %r5442, 4;
	and.b32  	%r5463, %r5462, 1347440720;
	and.b32  	%r5464, %r5426, 1347440720;
	and.b32  	%r5465, %r5442, 1347440720;
	and.b32  	%r5466, %r5434, 168430090;
	shl.b32 	%r5467, %r5450, 4;
	and.b32  	%r5468, %r5467, -1600085856;
	and.b32  	%r5469, %r5434, -1600085856;
	and.b32  	%r5470, %r5450, -1600085856;
	or.b32  	%r5471, %r5456, %r5451;
	or.b32  	%r5472, %r5471, %r5453;
	or.b32  	%r5473, %r5472, %r5458;
	st.local.u32 	[%rd4+112], %r5473;
	or.b32  	%r5474, %r5466, %r5461;
	or.b32  	%r5475, %r5474, %r5463;
	or.b32  	%r5476, %r5475, %r5468;
	st.local.u32 	[%rd4+116], %r5476;
	or.b32  	%r5477, %r5459, %r5454;
	shr.u32 	%r5478, %r5477, 4;
	or.b32  	%r5479, %r5478, %r5455;
	or.b32  	%r5480, %r5479, %r5460;
	st.local.u32 	[%rd4+120], %r5480;
	or.b32  	%r5481, %r5469, %r5464;
	shr.u32 	%r5482, %r5481, 4;
	or.b32  	%r5483, %r5482, %r5465;
	or.b32  	%r5484, %r5483, %r5470;
	st.local.u32 	[%rd4+124], %r5484;
	ld.local.v4.u32 	{%r5485, %r5486, %r5487, %r5488}, [%rd2+128];
	and.b32  	%r5493, %r5485, 1431655765;
	shl.b32 	%r5494, %r5485, 1;
	and.b32  	%r5495, %r5494, -1431655766;
	or.b32  	%r5496, %r5495, %r5493;
	and.b32  	%r5497, %r5485, -1431655766;
	shr.u32 	%r5498, %r5497, 1;
	or.b32  	%r5499, %r5498, %r5497;
	and.b32  	%r5500, %r5486, 1431655765;
	shl.b32 	%r5501, %r5486, 1;
	and.b32  	%r5502, %r5501, -1431655766;
	or.b32  	%r5503, %r5502, %r5500;
	and.b32  	%r5504, %r5486, -1431655766;
	shr.u32 	%r5505, %r5504, 1;
	or.b32  	%r5506, %r5505, %r5504;
	and.b32  	%r5507, %r5487, 1431655765;
	shl.b32 	%r5508, %r5487, 1;
	and.b32  	%r5509, %r5508, -1431655766;
	or.b32  	%r5510, %r5509, %r5507;
	and.b32  	%r5511, %r5487, -1431655766;
	shr.u32 	%r5512, %r5511, 1;
	or.b32  	%r5513, %r5512, %r5511;
	and.b32  	%r5514, %r5488, 1431655765;
	shl.b32 	%r5515, %r5488, 1;
	and.b32  	%r5516, %r5515, -1431655766;
	or.b32  	%r5517, %r5516, %r5514;
	and.b32  	%r5518, %r5488, -1431655766;
	shr.u32 	%r5519, %r5518, 1;
	or.b32  	%r5520, %r5519, %r5518;
	and.b32  	%r5521, %r5496, 858993459;
	shl.b32 	%r5522, %r5503, 2;
	and.b32  	%r5523, %r5522, -858993460;
	or.b32  	%r5524, %r5523, %r5521;
	and.b32  	%r5525, %r5496, -858993460;
	shr.u32 	%r5526, %r5525, 2;
	and.b32  	%r5527, %r5503, -858993460;
	or.b32  	%r5528, %r5526, %r5527;
	and.b32  	%r5529, %r5499, 858993459;
	shl.b32 	%r5530, %r5506, 2;
	and.b32  	%r5531, %r5530, -858993460;
	or.b32  	%r5532, %r5531, %r5529;
	and.b32  	%r5533, %r5499, -858993460;
	shr.u32 	%r5534, %r5533, 2;
	and.b32  	%r5535, %r5506, -858993460;
	or.b32  	%r5536, %r5534, %r5535;
	and.b32  	%r5537, %r5510, 858993459;
	shl.b32 	%r5538, %r5517, 2;
	and.b32  	%r5539, %r5538, -858993460;
	or.b32  	%r5540, %r5539, %r5537;
	and.b32  	%r5541, %r5510, -858993460;
	shr.u32 	%r5542, %r5541, 2;
	and.b32  	%r5543, %r5517, -858993460;
	or.b32  	%r5544, %r5542, %r5543;
	and.b32  	%r5545, %r5513, 858993459;
	shl.b32 	%r5546, %r5520, 2;
	and.b32  	%r5547, %r5546, -858993460;
	or.b32  	%r5548, %r5547, %r5545;
	and.b32  	%r5549, %r5513, -858993460;
	shr.u32 	%r5550, %r5549, 2;
	and.b32  	%r5551, %r5520, -858993460;
	or.b32  	%r5552, %r5550, %r5551;
	and.b32  	%r5553, %r5524, 84215045;
	shl.b32 	%r5554, %r5540, 4;
	and.b32  	%r5555, %r5554, 1347440720;
	and.b32  	%r5556, %r5524, 1347440720;
	and.b32  	%r5557, %r5540, 1347440720;
	and.b32  	%r5558, %r5532, 168430090;
	shl.b32 	%r5559, %r5548, 4;
	and.b32  	%r5560, %r5559, -1600085856;
	and.b32  	%r5561, %r5532, -1600085856;
	and.b32  	%r5562, %r5548, -1600085856;
	and.b32  	%r5563, %r5528, 84215045;
	shl.b32 	%r5564, %r5544, 4;
	and.b32  	%r5565, %r5564, 1347440720;
	and.b32  	%r5566, %r5528, 1347440720;
	and.b32  	%r5567, %r5544, 1347440720;
	and.b32  	%r5568, %r5536, 168430090;
	shl.b32 	%r5569, %r5552, 4;
	and.b32  	%r5570, %r5569, -1600085856;
	and.b32  	%r5571, %r5536, -1600085856;
	and.b32  	%r5572, %r5552, -1600085856;
	or.b32  	%r5573, %r5558, %r5553;
	or.b32  	%r5574, %r5573, %r5555;
	or.b32  	%r5575, %r5574, %r5560;
	st.local.u32 	[%rd4+128], %r5575;
	or.b32  	%r5576, %r5568, %r5563;
	or.b32  	%r5577, %r5576, %r5565;
	or.b32  	%r5578, %r5577, %r5570;
	st.local.u32 	[%rd4+132], %r5578;
	or.b32  	%r5579, %r5561, %r5556;
	shr.u32 	%r5580, %r5579, 4;
	or.b32  	%r5581, %r5580, %r5557;
	or.b32  	%r5582, %r5581, %r5562;
	st.local.u32 	[%rd4+136], %r5582;
	or.b32  	%r5583, %r5571, %r5566;
	shr.u32 	%r5584, %r5583, 4;
	or.b32  	%r5585, %r5584, %r5567;
	or.b32  	%r5586, %r5585, %r5572;
	st.local.u32 	[%rd4+140], %r5586;
	setp.lt.u32 	%p21, %r8884, 9;
	@%p21 bra 	$L__BB2_29;

	ld.local.v4.u32 	{%r5587, %r5588, %r5589, %r5590}, [%rd2+144];
	and.b32  	%r5595, %r5587, 1431655765;
	shl.b32 	%r5596, %r5587, 1;
	and.b32  	%r5597, %r5596, -1431655766;
	or.b32  	%r5598, %r5597, %r5595;
	and.b32  	%r5599, %r5587, -1431655766;
	shr.u32 	%r5600, %r5599, 1;
	or.b32  	%r5601, %r5600, %r5599;
	and.b32  	%r5602, %r5588, 1431655765;
	shl.b32 	%r5603, %r5588, 1;
	and.b32  	%r5604, %r5603, -1431655766;
	or.b32  	%r5605, %r5604, %r5602;
	and.b32  	%r5606, %r5588, -1431655766;
	shr.u32 	%r5607, %r5606, 1;
	or.b32  	%r5608, %r5607, %r5606;
	and.b32  	%r5609, %r5589, 1431655765;
	shl.b32 	%r5610, %r5589, 1;
	and.b32  	%r5611, %r5610, -1431655766;
	or.b32  	%r5612, %r5611, %r5609;
	and.b32  	%r5613, %r5589, -1431655766;
	shr.u32 	%r5614, %r5613, 1;
	or.b32  	%r5615, %r5614, %r5613;
	and.b32  	%r5616, %r5590, 1431655765;
	shl.b32 	%r5617, %r5590, 1;
	and.b32  	%r5618, %r5617, -1431655766;
	or.b32  	%r5619, %r5618, %r5616;
	and.b32  	%r5620, %r5590, -1431655766;
	shr.u32 	%r5621, %r5620, 1;
	or.b32  	%r5622, %r5621, %r5620;
	and.b32  	%r5623, %r5598, 858993459;
	shl.b32 	%r5624, %r5605, 2;
	and.b32  	%r5625, %r5624, -858993460;
	or.b32  	%r5626, %r5625, %r5623;
	and.b32  	%r5627, %r5598, -858993460;
	shr.u32 	%r5628, %r5627, 2;
	and.b32  	%r5629, %r5605, -858993460;
	or.b32  	%r5630, %r5628, %r5629;
	and.b32  	%r5631, %r5601, 858993459;
	shl.b32 	%r5632, %r5608, 2;
	and.b32  	%r5633, %r5632, -858993460;
	or.b32  	%r5634, %r5633, %r5631;
	and.b32  	%r5635, %r5601, -858993460;
	shr.u32 	%r5636, %r5635, 2;
	and.b32  	%r5637, %r5608, -858993460;
	or.b32  	%r5638, %r5636, %r5637;
	and.b32  	%r5639, %r5612, 858993459;
	shl.b32 	%r5640, %r5619, 2;
	and.b32  	%r5641, %r5640, -858993460;
	or.b32  	%r5642, %r5641, %r5639;
	and.b32  	%r5643, %r5612, -858993460;
	shr.u32 	%r5644, %r5643, 2;
	and.b32  	%r5645, %r5619, -858993460;
	or.b32  	%r5646, %r5644, %r5645;
	and.b32  	%r5647, %r5615, 858993459;
	shl.b32 	%r5648, %r5622, 2;
	and.b32  	%r5649, %r5648, -858993460;
	or.b32  	%r5650, %r5649, %r5647;
	and.b32  	%r5651, %r5615, -858993460;
	shr.u32 	%r5652, %r5651, 2;
	and.b32  	%r5653, %r5622, -858993460;
	or.b32  	%r5654, %r5652, %r5653;
	and.b32  	%r5655, %r5626, 84215045;
	shl.b32 	%r5656, %r5642, 4;
	and.b32  	%r5657, %r5656, 1347440720;
	and.b32  	%r5658, %r5626, 1347440720;
	and.b32  	%r5659, %r5642, 1347440720;
	and.b32  	%r5660, %r5634, 168430090;
	shl.b32 	%r5661, %r5650, 4;
	and.b32  	%r5662, %r5661, -1600085856;
	and.b32  	%r5663, %r5634, -1600085856;
	and.b32  	%r5664, %r5650, -1600085856;
	and.b32  	%r5665, %r5630, 84215045;
	shl.b32 	%r5666, %r5646, 4;
	and.b32  	%r5667, %r5666, 1347440720;
	and.b32  	%r5668, %r5630, 1347440720;
	and.b32  	%r5669, %r5646, 1347440720;
	and.b32  	%r5670, %r5638, 168430090;
	shl.b32 	%r5671, %r5654, 4;
	and.b32  	%r5672, %r5671, -1600085856;
	and.b32  	%r5673, %r5638, -1600085856;
	and.b32  	%r5674, %r5654, -1600085856;
	or.b32  	%r5675, %r5660, %r5655;
	or.b32  	%r5676, %r5675, %r5657;
	or.b32  	%r5677, %r5676, %r5662;
	st.local.u32 	[%rd4+144], %r5677;
	or.b32  	%r5678, %r5670, %r5665;
	or.b32  	%r5679, %r5678, %r5667;
	or.b32  	%r5680, %r5679, %r5672;
	st.local.u32 	[%rd4+148], %r5680;
	or.b32  	%r5681, %r5663, %r5658;
	shr.u32 	%r5682, %r5681, 4;
	or.b32  	%r5683, %r5682, %r5659;
	or.b32  	%r5684, %r5683, %r5664;
	st.local.u32 	[%rd4+152], %r5684;
	or.b32  	%r5685, %r5673, %r5668;
	shr.u32 	%r5686, %r5685, 4;
	or.b32  	%r5687, %r5686, %r5669;
	or.b32  	%r5688, %r5687, %r5674;
	st.local.u32 	[%rd4+156], %r5688;
	ld.local.v4.u32 	{%r5689, %r5690, %r5691, %r5692}, [%rd2+160];
	and.b32  	%r5697, %r5689, 1431655765;
	shl.b32 	%r5698, %r5689, 1;
	and.b32  	%r5699, %r5698, -1431655766;
	or.b32  	%r5700, %r5699, %r5697;
	and.b32  	%r5701, %r5689, -1431655766;
	shr.u32 	%r5702, %r5701, 1;
	or.b32  	%r5703, %r5702, %r5701;
	and.b32  	%r5704, %r5690, 1431655765;
	shl.b32 	%r5705, %r5690, 1;
	and.b32  	%r5706, %r5705, -1431655766;
	or.b32  	%r5707, %r5706, %r5704;
	and.b32  	%r5708, %r5690, -1431655766;
	shr.u32 	%r5709, %r5708, 1;
	or.b32  	%r5710, %r5709, %r5708;
	and.b32  	%r5711, %r5691, 1431655765;
	shl.b32 	%r5712, %r5691, 1;
	and.b32  	%r5713, %r5712, -1431655766;
	or.b32  	%r5714, %r5713, %r5711;
	and.b32  	%r5715, %r5691, -1431655766;
	shr.u32 	%r5716, %r5715, 1;
	or.b32  	%r5717, %r5716, %r5715;
	and.b32  	%r5718, %r5692, 1431655765;
	shl.b32 	%r5719, %r5692, 1;
	and.b32  	%r5720, %r5719, -1431655766;
	or.b32  	%r5721, %r5720, %r5718;
	and.b32  	%r5722, %r5692, -1431655766;
	shr.u32 	%r5723, %r5722, 1;
	or.b32  	%r5724, %r5723, %r5722;
	and.b32  	%r5725, %r5700, 858993459;
	shl.b32 	%r5726, %r5707, 2;
	and.b32  	%r5727, %r5726, -858993460;
	or.b32  	%r5728, %r5727, %r5725;
	and.b32  	%r5729, %r5700, -858993460;
	shr.u32 	%r5730, %r5729, 2;
	and.b32  	%r5731, %r5707, -858993460;
	or.b32  	%r5732, %r5730, %r5731;
	and.b32  	%r5733, %r5703, 858993459;
	shl.b32 	%r5734, %r5710, 2;
	and.b32  	%r5735, %r5734, -858993460;
	or.b32  	%r5736, %r5735, %r5733;
	and.b32  	%r5737, %r5703, -858993460;
	shr.u32 	%r5738, %r5737, 2;
	and.b32  	%r5739, %r5710, -858993460;
	or.b32  	%r5740, %r5738, %r5739;
	and.b32  	%r5741, %r5714, 858993459;
	shl.b32 	%r5742, %r5721, 2;
	and.b32  	%r5743, %r5742, -858993460;
	or.b32  	%r5744, %r5743, %r5741;
	and.b32  	%r5745, %r5714, -858993460;
	shr.u32 	%r5746, %r5745, 2;
	and.b32  	%r5747, %r5721, -858993460;
	or.b32  	%r5748, %r5746, %r5747;
	and.b32  	%r5749, %r5717, 858993459;
	shl.b32 	%r5750, %r5724, 2;
	and.b32  	%r5751, %r5750, -858993460;
	or.b32  	%r5752, %r5751, %r5749;
	and.b32  	%r5753, %r5717, -858993460;
	shr.u32 	%r5754, %r5753, 2;
	and.b32  	%r5755, %r5724, -858993460;
	or.b32  	%r5756, %r5754, %r5755;
	and.b32  	%r5757, %r5728, 84215045;
	shl.b32 	%r5758, %r5744, 4;
	and.b32  	%r5759, %r5758, 1347440720;
	and.b32  	%r5760, %r5728, 1347440720;
	and.b32  	%r5761, %r5744, 1347440720;
	and.b32  	%r5762, %r5736, 168430090;
	shl.b32 	%r5763, %r5752, 4;
	and.b32  	%r5764, %r5763, -1600085856;
	and.b32  	%r5765, %r5736, -1600085856;
	and.b32  	%r5766, %r5752, -1600085856;
	and.b32  	%r5767, %r5732, 84215045;
	shl.b32 	%r5768, %r5748, 4;
	and.b32  	%r5769, %r5768, 1347440720;
	and.b32  	%r5770, %r5732, 1347440720;
	and.b32  	%r5771, %r5748, 1347440720;
	and.b32  	%r5772, %r5740, 168430090;
	shl.b32 	%r5773, %r5756, 4;
	and.b32  	%r5774, %r5773, -1600085856;
	and.b32  	%r5775, %r5740, -1600085856;
	and.b32  	%r5776, %r5756, -1600085856;
	or.b32  	%r5777, %r5762, %r5757;
	or.b32  	%r5778, %r5777, %r5759;
	or.b32  	%r5779, %r5778, %r5764;
	st.local.u32 	[%rd4+160], %r5779;
	or.b32  	%r5780, %r5772, %r5767;
	or.b32  	%r5781, %r5780, %r5769;
	or.b32  	%r5782, %r5781, %r5774;
	st.local.u32 	[%rd4+164], %r5782;
	or.b32  	%r5783, %r5765, %r5760;
	shr.u32 	%r5784, %r5783, 4;
	or.b32  	%r5785, %r5784, %r5761;
	or.b32  	%r5786, %r5785, %r5766;
	st.local.u32 	[%rd4+168], %r5786;
	or.b32  	%r5787, %r5775, %r5770;
	shr.u32 	%r5788, %r5787, 4;
	or.b32  	%r5789, %r5788, %r5771;
	or.b32  	%r5790, %r5789, %r5776;
	st.local.u32 	[%rd4+172], %r5790;
	setp.lt.u32 	%p22, %r8884, 11;
	@%p22 bra 	$L__BB2_29;

	ld.local.v4.u32 	{%r5791, %r5792, %r5793, %r5794}, [%rd2+176];
	and.b32  	%r5799, %r5791, 1431655765;
	shl.b32 	%r5800, %r5791, 1;
	and.b32  	%r5801, %r5800, -1431655766;
	or.b32  	%r5802, %r5801, %r5799;
	and.b32  	%r5803, %r5791, -1431655766;
	shr.u32 	%r5804, %r5803, 1;
	or.b32  	%r5805, %r5804, %r5803;
	and.b32  	%r5806, %r5792, 1431655765;
	shl.b32 	%r5807, %r5792, 1;
	and.b32  	%r5808, %r5807, -1431655766;
	or.b32  	%r5809, %r5808, %r5806;
	and.b32  	%r5810, %r5792, -1431655766;
	shr.u32 	%r5811, %r5810, 1;
	or.b32  	%r5812, %r5811, %r5810;
	and.b32  	%r5813, %r5793, 1431655765;
	shl.b32 	%r5814, %r5793, 1;
	and.b32  	%r5815, %r5814, -1431655766;
	or.b32  	%r5816, %r5815, %r5813;
	and.b32  	%r5817, %r5793, -1431655766;
	shr.u32 	%r5818, %r5817, 1;
	or.b32  	%r5819, %r5818, %r5817;
	and.b32  	%r5820, %r5794, 1431655765;
	shl.b32 	%r5821, %r5794, 1;
	and.b32  	%r5822, %r5821, -1431655766;
	or.b32  	%r5823, %r5822, %r5820;
	and.b32  	%r5824, %r5794, -1431655766;
	shr.u32 	%r5825, %r5824, 1;
	or.b32  	%r5826, %r5825, %r5824;
	and.b32  	%r5827, %r5802, 858993459;
	shl.b32 	%r5828, %r5809, 2;
	and.b32  	%r5829, %r5828, -858993460;
	or.b32  	%r5830, %r5829, %r5827;
	and.b32  	%r5831, %r5802, -858993460;
	shr.u32 	%r5832, %r5831, 2;
	and.b32  	%r5833, %r5809, -858993460;
	or.b32  	%r5834, %r5832, %r5833;
	and.b32  	%r5835, %r5805, 858993459;
	shl.b32 	%r5836, %r5812, 2;
	and.b32  	%r5837, %r5836, -858993460;
	or.b32  	%r5838, %r5837, %r5835;
	and.b32  	%r5839, %r5805, -858993460;
	shr.u32 	%r5840, %r5839, 2;
	and.b32  	%r5841, %r5812, -858993460;
	or.b32  	%r5842, %r5840, %r5841;
	and.b32  	%r5843, %r5816, 858993459;
	shl.b32 	%r5844, %r5823, 2;
	and.b32  	%r5845, %r5844, -858993460;
	or.b32  	%r5846, %r5845, %r5843;
	and.b32  	%r5847, %r5816, -858993460;
	shr.u32 	%r5848, %r5847, 2;
	and.b32  	%r5849, %r5823, -858993460;
	or.b32  	%r5850, %r5848, %r5849;
	and.b32  	%r5851, %r5819, 858993459;
	shl.b32 	%r5852, %r5826, 2;
	and.b32  	%r5853, %r5852, -858993460;
	or.b32  	%r5854, %r5853, %r5851;
	and.b32  	%r5855, %r5819, -858993460;
	shr.u32 	%r5856, %r5855, 2;
	and.b32  	%r5857, %r5826, -858993460;
	or.b32  	%r5858, %r5856, %r5857;
	and.b32  	%r5859, %r5830, 84215045;
	shl.b32 	%r5860, %r5846, 4;
	and.b32  	%r5861, %r5860, 1347440720;
	and.b32  	%r5862, %r5830, 1347440720;
	and.b32  	%r5863, %r5846, 1347440720;
	and.b32  	%r5864, %r5838, 168430090;
	shl.b32 	%r5865, %r5854, 4;
	and.b32  	%r5866, %r5865, -1600085856;
	and.b32  	%r5867, %r5838, -1600085856;
	and.b32  	%r5868, %r5854, -1600085856;
	and.b32  	%r5869, %r5834, 84215045;
	shl.b32 	%r5870, %r5850, 4;
	and.b32  	%r5871, %r5870, 1347440720;
	and.b32  	%r5872, %r5834, 1347440720;
	and.b32  	%r5873, %r5850, 1347440720;
	and.b32  	%r5874, %r5842, 168430090;
	shl.b32 	%r5875, %r5858, 4;
	and.b32  	%r5876, %r5875, -1600085856;
	and.b32  	%r5877, %r5842, -1600085856;
	and.b32  	%r5878, %r5858, -1600085856;
	or.b32  	%r5879, %r5864, %r5859;
	or.b32  	%r5880, %r5879, %r5861;
	or.b32  	%r5881, %r5880, %r5866;
	st.local.u32 	[%rd4+176], %r5881;
	or.b32  	%r5882, %r5874, %r5869;
	or.b32  	%r5883, %r5882, %r5871;
	or.b32  	%r5884, %r5883, %r5876;
	st.local.u32 	[%rd4+180], %r5884;
	or.b32  	%r5885, %r5867, %r5862;
	shr.u32 	%r5886, %r5885, 4;
	or.b32  	%r5887, %r5886, %r5863;
	or.b32  	%r5888, %r5887, %r5868;
	st.local.u32 	[%rd4+184], %r5888;
	or.b32  	%r5889, %r5877, %r5872;
	shr.u32 	%r5890, %r5889, 4;
	or.b32  	%r5891, %r5890, %r5873;
	or.b32  	%r5892, %r5891, %r5878;
	st.local.u32 	[%rd4+188], %r5892;
	ld.local.v4.u32 	{%r5893, %r5894, %r5895, %r5896}, [%rd2+192];
	and.b32  	%r5901, %r5893, 1431655765;
	shl.b32 	%r5902, %r5893, 1;
	and.b32  	%r5903, %r5902, -1431655766;
	or.b32  	%r5904, %r5903, %r5901;
	and.b32  	%r5905, %r5893, -1431655766;
	shr.u32 	%r5906, %r5905, 1;
	or.b32  	%r5907, %r5906, %r5905;
	and.b32  	%r5908, %r5894, 1431655765;
	shl.b32 	%r5909, %r5894, 1;
	and.b32  	%r5910, %r5909, -1431655766;
	or.b32  	%r5911, %r5910, %r5908;
	and.b32  	%r5912, %r5894, -1431655766;
	shr.u32 	%r5913, %r5912, 1;
	or.b32  	%r5914, %r5913, %r5912;
	and.b32  	%r5915, %r5895, 1431655765;
	shl.b32 	%r5916, %r5895, 1;
	and.b32  	%r5917, %r5916, -1431655766;
	or.b32  	%r5918, %r5917, %r5915;
	and.b32  	%r5919, %r5895, -1431655766;
	shr.u32 	%r5920, %r5919, 1;
	or.b32  	%r5921, %r5920, %r5919;
	and.b32  	%r5922, %r5896, 1431655765;
	shl.b32 	%r5923, %r5896, 1;
	and.b32  	%r5924, %r5923, -1431655766;
	or.b32  	%r5925, %r5924, %r5922;
	and.b32  	%r5926, %r5896, -1431655766;
	shr.u32 	%r5927, %r5926, 1;
	or.b32  	%r5928, %r5927, %r5926;
	and.b32  	%r5929, %r5904, 858993459;
	shl.b32 	%r5930, %r5911, 2;
	and.b32  	%r5931, %r5930, -858993460;
	or.b32  	%r5932, %r5931, %r5929;
	and.b32  	%r5933, %r5904, -858993460;
	shr.u32 	%r5934, %r5933, 2;
	and.b32  	%r5935, %r5911, -858993460;
	or.b32  	%r5936, %r5934, %r5935;
	and.b32  	%r5937, %r5907, 858993459;
	shl.b32 	%r5938, %r5914, 2;
	and.b32  	%r5939, %r5938, -858993460;
	or.b32  	%r5940, %r5939, %r5937;
	and.b32  	%r5941, %r5907, -858993460;
	shr.u32 	%r5942, %r5941, 2;
	and.b32  	%r5943, %r5914, -858993460;
	or.b32  	%r5944, %r5942, %r5943;
	and.b32  	%r5945, %r5918, 858993459;
	shl.b32 	%r5946, %r5925, 2;
	and.b32  	%r5947, %r5946, -858993460;
	or.b32  	%r5948, %r5947, %r5945;
	and.b32  	%r5949, %r5918, -858993460;
	shr.u32 	%r5950, %r5949, 2;
	and.b32  	%r5951, %r5925, -858993460;
	or.b32  	%r5952, %r5950, %r5951;
	and.b32  	%r5953, %r5921, 858993459;
	shl.b32 	%r5954, %r5928, 2;
	and.b32  	%r5955, %r5954, -858993460;
	or.b32  	%r5956, %r5955, %r5953;
	and.b32  	%r5957, %r5921, -858993460;
	shr.u32 	%r5958, %r5957, 2;
	and.b32  	%r5959, %r5928, -858993460;
	or.b32  	%r5960, %r5958, %r5959;
	and.b32  	%r5961, %r5932, 84215045;
	shl.b32 	%r5962, %r5948, 4;
	and.b32  	%r5963, %r5962, 1347440720;
	and.b32  	%r5964, %r5932, 1347440720;
	and.b32  	%r5965, %r5948, 1347440720;
	and.b32  	%r5966, %r5940, 168430090;
	shl.b32 	%r5967, %r5956, 4;
	and.b32  	%r5968, %r5967, -1600085856;
	and.b32  	%r5969, %r5940, -1600085856;
	and.b32  	%r5970, %r5956, -1600085856;
	and.b32  	%r5971, %r5936, 84215045;
	shl.b32 	%r5972, %r5952, 4;
	and.b32  	%r5973, %r5972, 1347440720;
	and.b32  	%r5974, %r5936, 1347440720;
	and.b32  	%r5975, %r5952, 1347440720;
	and.b32  	%r5976, %r5944, 168430090;
	shl.b32 	%r5977, %r5960, 4;
	and.b32  	%r5978, %r5977, -1600085856;
	and.b32  	%r5979, %r5944, -1600085856;
	and.b32  	%r5980, %r5960, -1600085856;
	or.b32  	%r5981, %r5966, %r5961;
	or.b32  	%r5982, %r5981, %r5963;
	or.b32  	%r5983, %r5982, %r5968;
	st.local.u32 	[%rd4+192], %r5983;
	or.b32  	%r5984, %r5976, %r5971;
	or.b32  	%r5985, %r5984, %r5973;
	or.b32  	%r5986, %r5985, %r5978;
	st.local.u32 	[%rd4+196], %r5986;
	or.b32  	%r5987, %r5969, %r5964;
	shr.u32 	%r5988, %r5987, 4;
	or.b32  	%r5989, %r5988, %r5965;
	or.b32  	%r5990, %r5989, %r5970;
	st.local.u32 	[%rd4+200], %r5990;
	or.b32  	%r5991, %r5979, %r5974;
	shr.u32 	%r5992, %r5991, 4;
	or.b32  	%r5993, %r5992, %r5975;
	or.b32  	%r5994, %r5993, %r5980;
	st.local.u32 	[%rd4+204], %r5994;
	setp.lt.u32 	%p23, %r8884, 13;
	@%p23 bra 	$L__BB2_29;

	ld.local.v4.u32 	{%r5995, %r5996, %r5997, %r5998}, [%rd2+208];
	and.b32  	%r6003, %r5995, 1431655765;
	shl.b32 	%r6004, %r5995, 1;
	and.b32  	%r6005, %r6004, -1431655766;
	or.b32  	%r6006, %r6005, %r6003;
	and.b32  	%r6007, %r5995, -1431655766;
	shr.u32 	%r6008, %r6007, 1;
	or.b32  	%r6009, %r6008, %r6007;
	and.b32  	%r6010, %r5996, 1431655765;
	shl.b32 	%r6011, %r5996, 1;
	and.b32  	%r6012, %r6011, -1431655766;
	or.b32  	%r6013, %r6012, %r6010;
	and.b32  	%r6014, %r5996, -1431655766;
	shr.u32 	%r6015, %r6014, 1;
	or.b32  	%r6016, %r6015, %r6014;
	and.b32  	%r6017, %r5997, 1431655765;
	shl.b32 	%r6018, %r5997, 1;
	and.b32  	%r6019, %r6018, -1431655766;
	or.b32  	%r6020, %r6019, %r6017;
	and.b32  	%r6021, %r5997, -1431655766;
	shr.u32 	%r6022, %r6021, 1;
	or.b32  	%r6023, %r6022, %r6021;
	and.b32  	%r6024, %r5998, 1431655765;
	shl.b32 	%r6025, %r5998, 1;
	and.b32  	%r6026, %r6025, -1431655766;
	or.b32  	%r6027, %r6026, %r6024;
	and.b32  	%r6028, %r5998, -1431655766;
	shr.u32 	%r6029, %r6028, 1;
	or.b32  	%r6030, %r6029, %r6028;
	and.b32  	%r6031, %r6006, 858993459;
	shl.b32 	%r6032, %r6013, 2;
	and.b32  	%r6033, %r6032, -858993460;
	or.b32  	%r6034, %r6033, %r6031;
	and.b32  	%r6035, %r6006, -858993460;
	shr.u32 	%r6036, %r6035, 2;
	and.b32  	%r6037, %r6013, -858993460;
	or.b32  	%r6038, %r6036, %r6037;
	and.b32  	%r6039, %r6009, 858993459;
	shl.b32 	%r6040, %r6016, 2;
	and.b32  	%r6041, %r6040, -858993460;
	or.b32  	%r6042, %r6041, %r6039;
	and.b32  	%r6043, %r6009, -858993460;
	shr.u32 	%r6044, %r6043, 2;
	and.b32  	%r6045, %r6016, -858993460;
	or.b32  	%r6046, %r6044, %r6045;
	and.b32  	%r6047, %r6020, 858993459;
	shl.b32 	%r6048, %r6027, 2;
	and.b32  	%r6049, %r6048, -858993460;
	or.b32  	%r6050, %r6049, %r6047;
	and.b32  	%r6051, %r6020, -858993460;
	shr.u32 	%r6052, %r6051, 2;
	and.b32  	%r6053, %r6027, -858993460;
	or.b32  	%r6054, %r6052, %r6053;
	and.b32  	%r6055, %r6023, 858993459;
	shl.b32 	%r6056, %r6030, 2;
	and.b32  	%r6057, %r6056, -858993460;
	or.b32  	%r6058, %r6057, %r6055;
	and.b32  	%r6059, %r6023, -858993460;
	shr.u32 	%r6060, %r6059, 2;
	and.b32  	%r6061, %r6030, -858993460;
	or.b32  	%r6062, %r6060, %r6061;
	and.b32  	%r6063, %r6034, 84215045;
	shl.b32 	%r6064, %r6050, 4;
	and.b32  	%r6065, %r6064, 1347440720;
	and.b32  	%r6066, %r6034, 1347440720;
	and.b32  	%r6067, %r6050, 1347440720;
	and.b32  	%r6068, %r6042, 168430090;
	shl.b32 	%r6069, %r6058, 4;
	and.b32  	%r6070, %r6069, -1600085856;
	and.b32  	%r6071, %r6042, -1600085856;
	and.b32  	%r6072, %r6058, -1600085856;
	and.b32  	%r6073, %r6038, 84215045;
	shl.b32 	%r6074, %r6054, 4;
	and.b32  	%r6075, %r6074, 1347440720;
	and.b32  	%r6076, %r6038, 1347440720;
	and.b32  	%r6077, %r6054, 1347440720;
	and.b32  	%r6078, %r6046, 168430090;
	shl.b32 	%r6079, %r6062, 4;
	and.b32  	%r6080, %r6079, -1600085856;
	and.b32  	%r6081, %r6046, -1600085856;
	and.b32  	%r6082, %r6062, -1600085856;
	or.b32  	%r6083, %r6068, %r6063;
	or.b32  	%r6084, %r6083, %r6065;
	or.b32  	%r6085, %r6084, %r6070;
	st.local.u32 	[%rd4+208], %r6085;
	or.b32  	%r6086, %r6078, %r6073;
	or.b32  	%r6087, %r6086, %r6075;
	or.b32  	%r6088, %r6087, %r6080;
	st.local.u32 	[%rd4+212], %r6088;
	or.b32  	%r6089, %r6071, %r6066;
	shr.u32 	%r6090, %r6089, 4;
	or.b32  	%r6091, %r6090, %r6067;
	or.b32  	%r6092, %r6091, %r6072;
	st.local.u32 	[%rd4+216], %r6092;
	or.b32  	%r6093, %r6081, %r6076;
	shr.u32 	%r6094, %r6093, 4;
	or.b32  	%r6095, %r6094, %r6077;
	or.b32  	%r6096, %r6095, %r6082;
	st.local.u32 	[%rd4+220], %r6096;
	ld.local.v4.u32 	{%r6097, %r6098, %r6099, %r6100}, [%rd2+224];
	and.b32  	%r6105, %r6097, 1431655765;
	shl.b32 	%r6106, %r6097, 1;
	and.b32  	%r6107, %r6106, -1431655766;
	or.b32  	%r6108, %r6107, %r6105;
	and.b32  	%r6109, %r6097, -1431655766;
	shr.u32 	%r6110, %r6109, 1;
	or.b32  	%r6111, %r6110, %r6109;
	and.b32  	%r6112, %r6098, 1431655765;
	shl.b32 	%r6113, %r6098, 1;
	and.b32  	%r6114, %r6113, -1431655766;
	or.b32  	%r6115, %r6114, %r6112;
	and.b32  	%r6116, %r6098, -1431655766;
	shr.u32 	%r6117, %r6116, 1;
	or.b32  	%r6118, %r6117, %r6116;
	and.b32  	%r6119, %r6099, 1431655765;
	shl.b32 	%r6120, %r6099, 1;
	and.b32  	%r6121, %r6120, -1431655766;
	or.b32  	%r6122, %r6121, %r6119;
	and.b32  	%r6123, %r6099, -1431655766;
	shr.u32 	%r6124, %r6123, 1;
	or.b32  	%r6125, %r6124, %r6123;
	and.b32  	%r6126, %r6100, 1431655765;
	shl.b32 	%r6127, %r6100, 1;
	and.b32  	%r6128, %r6127, -1431655766;
	or.b32  	%r6129, %r6128, %r6126;
	and.b32  	%r6130, %r6100, -1431655766;
	shr.u32 	%r6131, %r6130, 1;
	or.b32  	%r6132, %r6131, %r6130;
	and.b32  	%r6133, %r6108, 858993459;
	shl.b32 	%r6134, %r6115, 2;
	and.b32  	%r6135, %r6134, -858993460;
	or.b32  	%r6136, %r6135, %r6133;
	and.b32  	%r6137, %r6108, -858993460;
	shr.u32 	%r6138, %r6137, 2;
	and.b32  	%r6139, %r6115, -858993460;
	or.b32  	%r6140, %r6138, %r6139;
	and.b32  	%r6141, %r6111, 858993459;
	shl.b32 	%r6142, %r6118, 2;
	and.b32  	%r6143, %r6142, -858993460;
	or.b32  	%r6144, %r6143, %r6141;
	and.b32  	%r6145, %r6111, -858993460;
	shr.u32 	%r6146, %r6145, 2;
	and.b32  	%r6147, %r6118, -858993460;
	or.b32  	%r6148, %r6146, %r6147;
	and.b32  	%r6149, %r6122, 858993459;
	shl.b32 	%r6150, %r6129, 2;
	and.b32  	%r6151, %r6150, -858993460;
	or.b32  	%r6152, %r6151, %r6149;
	and.b32  	%r6153, %r6122, -858993460;
	shr.u32 	%r6154, %r6153, 2;
	and.b32  	%r6155, %r6129, -858993460;
	or.b32  	%r6156, %r6154, %r6155;
	and.b32  	%r6157, %r6125, 858993459;
	shl.b32 	%r6158, %r6132, 2;
	and.b32  	%r6159, %r6158, -858993460;
	or.b32  	%r6160, %r6159, %r6157;
	and.b32  	%r6161, %r6125, -858993460;
	shr.u32 	%r6162, %r6161, 2;
	and.b32  	%r6163, %r6132, -858993460;
	or.b32  	%r6164, %r6162, %r6163;
	and.b32  	%r6165, %r6136, 84215045;
	shl.b32 	%r6166, %r6152, 4;
	and.b32  	%r6167, %r6166, 1347440720;
	and.b32  	%r6168, %r6136, 1347440720;
	and.b32  	%r6169, %r6152, 1347440720;
	and.b32  	%r6170, %r6144, 168430090;
	shl.b32 	%r6171, %r6160, 4;
	and.b32  	%r6172, %r6171, -1600085856;
	and.b32  	%r6173, %r6144, -1600085856;
	and.b32  	%r6174, %r6160, -1600085856;
	and.b32  	%r6175, %r6140, 84215045;
	shl.b32 	%r6176, %r6156, 4;
	and.b32  	%r6177, %r6176, 1347440720;
	and.b32  	%r6178, %r6140, 1347440720;
	and.b32  	%r6179, %r6156, 1347440720;
	and.b32  	%r6180, %r6148, 168430090;
	shl.b32 	%r6181, %r6164, 4;
	and.b32  	%r6182, %r6181, -1600085856;
	and.b32  	%r6183, %r6148, -1600085856;
	and.b32  	%r6184, %r6164, -1600085856;
	or.b32  	%r6185, %r6170, %r6165;
	or.b32  	%r6186, %r6185, %r6167;
	or.b32  	%r6187, %r6186, %r6172;
	st.local.u32 	[%rd4+224], %r6187;
	or.b32  	%r6188, %r6180, %r6175;
	or.b32  	%r6189, %r6188, %r6177;
	or.b32  	%r6190, %r6189, %r6182;
	st.local.u32 	[%rd4+228], %r6190;
	or.b32  	%r6191, %r6173, %r6168;
	shr.u32 	%r6192, %r6191, 4;
	or.b32  	%r6193, %r6192, %r6169;
	or.b32  	%r6194, %r6193, %r6174;
	st.local.u32 	[%rd4+232], %r6194;
	or.b32  	%r6195, %r6183, %r6178;
	shr.u32 	%r6196, %r6195, 4;
	or.b32  	%r6197, %r6196, %r6179;
	or.b32  	%r6198, %r6197, %r6184;
	st.local.u32 	[%rd4+236], %r6198;

$L__BB2_29:
	mov.u32 	%r8897, 0;
	st.local.u32 	[%rd4+720], %r8884;
	@%p17 bra 	$L__BB2_34;

	shl.b32 	%r6200, %r8884, 2;
	add.s32 	%r107, %r6200, 4;
	setp.eq.s32 	%p25, %r107, 0;
	mov.u32 	%r8897, %r8884;
	@%p25 bra 	$L__BB2_34;

	mov.u32 	%r8896, 0;
	mov.u64 	%rd55, %rd4;
	mov.u64 	%rd56, %rd4;

$L__BB2_32:
	ld.local.u32 	%r6202, [%rd56];
	and.b32  	%r6203, %r6202, 1431655765;
	shl.b32 	%r6204, %r6202, 1;
	and.b32  	%r6205, %r6204, -1431655766;
	or.b32  	%r6206, %r6205, %r6203;
	st.local.u32 	[%rd55+240], %r6206;
	and.b32  	%r6207, %r6202, -1431655766;
	shr.u32 	%r6208, %r6207, 1;
	or.b32  	%r6209, %r6208, %r6207;
	st.local.u32 	[%rd55+244], %r6209;
	ld.local.u32 	%r6210, [%rd56+4];
	and.b32  	%r6211, %r6210, 1431655765;
	shl.b32 	%r6212, %r6210, 1;
	and.b32  	%r6213, %r6212, -1431655766;
	or.b32  	%r6214, %r6213, %r6211;
	st.local.u32 	[%rd55+248], %r6214;
	and.b32  	%r6215, %r6210, -1431655766;
	shr.u32 	%r6216, %r6215, 1;
	or.b32  	%r6217, %r6216, %r6215;
	st.local.u32 	[%rd55+252], %r6217;
	ld.local.u32 	%r6218, [%rd56+8];
	and.b32  	%r6219, %r6218, 1431655765;
	shl.b32 	%r6220, %r6218, 1;
	and.b32  	%r6221, %r6220, -1431655766;
	or.b32  	%r6222, %r6221, %r6219;
	st.local.u32 	[%rd55+256], %r6222;
	and.b32  	%r6223, %r6218, -1431655766;
	shr.u32 	%r6224, %r6223, 1;
	or.b32  	%r6225, %r6224, %r6223;
	st.local.u32 	[%rd55+260], %r6225;
	ld.local.u32 	%r6226, [%rd56+12];
	and.b32  	%r6227, %r6226, 1431655765;
	shl.b32 	%r6228, %r6226, 1;
	and.b32  	%r6229, %r6228, -1431655766;
	or.b32  	%r6230, %r6229, %r6227;
	st.local.u32 	[%rd55+264], %r6230;
	and.b32  	%r6231, %r6226, -1431655766;
	shr.u32 	%r6232, %r6231, 1;
	or.b32  	%r6233, %r6232, %r6231;
	st.local.u32 	[%rd55+268], %r6233;
	add.s64 	%rd56, %rd56, 16;
	add.s64 	%rd55, %rd55, 32;
	add.s32 	%r8896, %r8896, 4;
	setp.lt.u32 	%p26, %r8896, %r107;
	@%p26 bra 	$L__BB2_32;

	ld.local.u32 	%r8897, [%rd4+720];

$L__BB2_34:
	ld.param.u64 	%rd50, [Final2007_param_3];
	ld.const.u8 	%r6234, [%rd50];
	ld.const.u8 	%r6235, [%rd50+1];
	prmt.b32 	%r6236, %r6235, %r6234, 30212;
	ld.const.u8 	%r6237, [%rd50+2];
	prmt.b32 	%r6238, %r6237, %r6236, 28756;
	ld.const.u8 	%r6239, [%rd50+3];
	prmt.b32 	%r6240, %r6239, %r6238, 1620;
	ld.const.u8 	%r6241, [%rd50+4];
	ld.const.u8 	%r6242, [%rd50+5];
	prmt.b32 	%r6243, %r6242, %r6241, 30212;
	ld.const.u8 	%r6244, [%rd50+6];
	prmt.b32 	%r6245, %r6244, %r6243, 28756;
	ld.const.u8 	%r6246, [%rd50+7];
	prmt.b32 	%r6247, %r6246, %r6245, 1620;
	ld.const.u8 	%r6248, [%rd50+8];
	ld.const.u8 	%r6249, [%rd50+9];
	prmt.b32 	%r6250, %r6249, %r6248, 30212;
	ld.const.u8 	%r6251, [%rd50+10];
	prmt.b32 	%r6252, %r6251, %r6250, 28756;
	ld.const.u8 	%r6253, [%rd50+11];
	prmt.b32 	%r6254, %r6253, %r6252, 1620;
	ld.const.u8 	%r6255, [%rd50+12];
	ld.const.u8 	%r6256, [%rd50+13];
	prmt.b32 	%r6257, %r6256, %r6255, 30212;
	ld.const.u8 	%r6258, [%rd50+14];
	prmt.b32 	%r6259, %r6258, %r6257, 28756;
	ld.const.u8 	%r6260, [%rd50+15];
	prmt.b32 	%r6261, %r6260, %r6259, 1620;
	and.b32  	%r6262, %r6240, -1431655766;
	shr.u32 	%r6263, %r6262, 3;
	shr.u32 	%r6264, %r6262, 1;
	and.b32  	%r6265, %r6247, -2004318072;
	and.b32  	%r6266, %r6254, -1431655766;
	shr.u32 	%r6267, %r6266, 3;
	shr.u32 	%r6268, %r6266, 1;
	and.b32  	%r6269, %r6261, -2004318072;
	and.b32  	%r6270, %r6240, 286331153;
	shl.b32 	%r6271, %r6247, 2;
	and.b32  	%r6272, %r6271, 1145324612;
	or.b32  	%r6273, %r6272, %r6270;
	and.b32  	%r6274, %r6240, 1145324612;
	shr.u32 	%r6275, %r6274, 2;
	and.b32  	%r6276, %r6247, 1145324612;
	or.b32  	%r6277, %r6275, %r6276;
	and.b32  	%r6278, %r6264, 286331153;
	shl.b32 	%r6279, %r6247, 1;
	and.b32  	%r6280, %r6279, 1145324612;
	or.b32  	%r6281, %r6280, %r6278;
	and.b32  	%r6282, %r6263, 286331153;
	shr.u32 	%r6283, %r6265, 1;
	or.b32  	%r6284, %r6282, %r6283;
	and.b32  	%r6285, %r6254, 286331153;
	shl.b32 	%r6286, %r6261, 2;
	and.b32  	%r6287, %r6286, 1145324612;
	or.b32  	%r6288, %r6287, %r6285;
	and.b32  	%r6289, %r6254, 1145324612;
	shr.u32 	%r6290, %r6289, 2;
	and.b32  	%r6291, %r6261, 1145324612;
	or.b32  	%r6292, %r6290, %r6291;
	and.b32  	%r6293, %r6268, 286331153;
	shl.b32 	%r6294, %r6261, 1;
	and.b32  	%r6295, %r6294, 1145324612;
	or.b32  	%r6296, %r6295, %r6293;
	and.b32  	%r6297, %r6267, 286331153;
	shr.u32 	%r6298, %r6269, 1;
	or.b32  	%r6299, %r6297, %r6298;
	and.b32  	%r6300, %r6273, 84215045;
	shl.b32 	%r6301, %r6288, 4;
	and.b32  	%r6302, %r6301, 1347440720;
	or.b32  	%r6303, %r6302, %r6300;
	and.b32  	%r6304, %r6273, 1347440720;
	shr.u32 	%r6305, %r6304, 4;
	and.b32  	%r6306, %r6288, 1347440720;
	or.b32  	%r6307, %r6305, %r6306;
	and.b32  	%r6308, %r6281, 84215045;
	shl.b32 	%r6309, %r6296, 4;
	and.b32  	%r6310, %r6309, 1347440720;
	or.b32  	%r6311, %r6310, %r6308;
	and.b32  	%r6312, %r6281, 1347440720;
	shr.u32 	%r6313, %r6312, 4;
	and.b32  	%r6314, %r6296, 1347440720;
	or.b32  	%r6315, %r6313, %r6314;
	and.b32  	%r6316, %r6277, 84215045;
	shl.b32 	%r6317, %r6292, 4;
	and.b32  	%r6318, %r6317, 1347440720;
	or.b32  	%r6319, %r6318, %r6316;
	and.b32  	%r6320, %r6277, 1347440720;
	shr.u32 	%r6321, %r6320, 4;
	and.b32  	%r6322, %r6292, 1347440720;
	or.b32  	%r6323, %r6321, %r6322;
	and.b32  	%r6324, %r6284, 84215045;
	shl.b32 	%r6325, %r6299, 4;
	and.b32  	%r6326, %r6325, 1347440720;
	or.b32  	%r6327, %r6326, %r6324;
	and.b32  	%r6328, %r6284, 1347440720;
	shr.u32 	%r6329, %r6328, 4;
	and.b32  	%r6330, %r6299, 1347440720;
	or.b32  	%r6331, %r6329, %r6330;
	shl.b32 	%r112, %r8897, 3;
	mul.wide.u32 	%rd42, %r112, 4;
	add.s64 	%rd43, %rd4, %rd42;
	ld.local.u32 	%r113, [%rd43+240];
	xor.b32  	%r8915, %r6303, %r113;
	ld.local.u32 	%r115, [%rd43+244];
	xor.b32  	%r8914, %r6311, %r115;
	ld.local.u32 	%r117, [%rd43+248];
	xor.b32  	%r8913, %r6319, %r117;
	ld.local.u32 	%r119, [%rd43+252];
	xor.b32  	%r8912, %r6327, %r119;
	ld.local.u32 	%r121, [%rd43+256];
	xor.b32  	%r8911, %r6307, %r121;
	ld.local.u32 	%r123, [%rd43+260];
	xor.b32  	%r8910, %r6315, %r123;
	ld.local.u32 	%r125, [%rd43+264];
	xor.b32  	%r8909, %r6323, %r125;
	ld.local.u32 	%r127, [%rd43+268];
	xor.b32  	%r8908, %r6331, %r127;
	setp.eq.s32 	%p27, %r8897, 1;
	@%p27 bra 	$L__BB2_37;

	add.s32 	%r8898, %r112, -8;
	mov.u32 	%r8899, %r8897;

$L__BB2_36:
	shl.b32 	%r6332, %r8915, 2;
	and.b32  	%r6333, %r6332, 64512;
	and.b32  	%r6334, %r8915, 255;
	or.b32  	%r6335, %r6333, %r6334;
	and.b32  	%r6336, %r8915, 49152;
	shr.u32 	%r6337, %r6336, 6;
	or.b32  	%r6338, %r6335, %r6337;
	shl.b32 	%r6339, %r8915, 4;
	and.b32  	%r6340, %r6339, 15728640;
	or.b32  	%r6341, %r6338, %r6340;
	and.b32  	%r6342, %r8915, 15728640;
	shr.u32 	%r6343, %r6342, 4;
	or.b32  	%r6344, %r6341, %r6343;
	shl.b32 	%r6345, %r8915, 6;
	and.b32  	%r6346, %r6345, -1073741824;
	or.b32  	%r6347, %r6344, %r6346;
	and.b32  	%r6348, %r8915, -67108864;
	shr.u32 	%r6349, %r6348, 2;
	or.b32  	%r6350, %r6347, %r6349;
	shl.b32 	%r6351, %r8914, 2;
	and.b32  	%r6352, %r6351, 64512;
	and.b32  	%r6353, %r8914, 255;
	or.b32  	%r6354, %r6352, %r6353;
	and.b32  	%r6355, %r8914, 49152;
	shr.u32 	%r6356, %r6355, 6;
	or.b32  	%r6357, %r6354, %r6356;
	shl.b32 	%r6358, %r8914, 4;
	and.b32  	%r6359, %r6358, 15728640;
	or.b32  	%r6360, %r6357, %r6359;
	and.b32  	%r6361, %r8914, 15728640;
	shr.u32 	%r6362, %r6361, 4;
	or.b32  	%r6363, %r6360, %r6362;
	shl.b32 	%r6364, %r8914, 6;
	and.b32  	%r6365, %r6364, -1073741824;
	or.b32  	%r6366, %r6363, %r6365;
	and.b32  	%r6367, %r8914, -67108864;
	shr.u32 	%r6368, %r6367, 2;
	or.b32  	%r6369, %r6366, %r6368;
	shl.b32 	%r6370, %r8913, 2;
	and.b32  	%r6371, %r6370, 64512;
	and.b32  	%r6372, %r8913, 255;
	or.b32  	%r6373, %r6371, %r6372;
	and.b32  	%r6374, %r8913, 49152;
	shr.u32 	%r6375, %r6374, 6;
	or.b32  	%r6376, %r6373, %r6375;
	shl.b32 	%r6377, %r8913, 4;
	and.b32  	%r6378, %r6377, 15728640;
	or.b32  	%r6379, %r6376, %r6378;
	and.b32  	%r6380, %r8913, 15728640;
	shr.u32 	%r6381, %r6380, 4;
	or.b32  	%r6382, %r6379, %r6381;
	shl.b32 	%r6383, %r8913, 6;
	and.b32  	%r6384, %r6383, -1073741824;
	or.b32  	%r6385, %r6382, %r6384;
	and.b32  	%r6386, %r8913, -67108864;
	shr.u32 	%r6387, %r6386, 2;
	or.b32  	%r6388, %r6385, %r6387;
	shl.b32 	%r6389, %r8912, 2;
	and.b32  	%r6390, %r6389, 64512;
	and.b32  	%r6391, %r8912, 255;
	or.b32  	%r6392, %r6390, %r6391;
	and.b32  	%r6393, %r8912, 49152;
	shr.u32 	%r6394, %r6393, 6;
	or.b32  	%r6395, %r6392, %r6394;
	shl.b32 	%r6396, %r8912, 4;
	and.b32  	%r6397, %r6396, 15728640;
	or.b32  	%r6398, %r6395, %r6397;
	and.b32  	%r6399, %r8912, 15728640;
	shr.u32 	%r6400, %r6399, 4;
	or.b32  	%r6401, %r6398, %r6400;
	shl.b32 	%r6402, %r8912, 6;
	and.b32  	%r6403, %r6402, -1073741824;
	or.b32  	%r6404, %r6401, %r6403;
	and.b32  	%r6405, %r8912, -67108864;
	shr.u32 	%r6406, %r6405, 2;
	or.b32  	%r6407, %r6404, %r6406;
	shl.b32 	%r6408, %r8911, 2;
	and.b32  	%r6409, %r6408, 64512;
	and.b32  	%r6410, %r8911, 255;
	or.b32  	%r6411, %r6409, %r6410;
	and.b32  	%r6412, %r8911, 49152;
	shr.u32 	%r6413, %r6412, 6;
	or.b32  	%r6414, %r6411, %r6413;
	shl.b32 	%r6415, %r8911, 4;
	and.b32  	%r6416, %r6415, 15728640;
	or.b32  	%r6417, %r6414, %r6416;
	and.b32  	%r6418, %r8911, 15728640;
	shr.u32 	%r6419, %r6418, 4;
	or.b32  	%r6420, %r6417, %r6419;
	shl.b32 	%r6421, %r8911, 6;
	and.b32  	%r6422, %r6421, -1073741824;
	or.b32  	%r6423, %r6420, %r6422;
	and.b32  	%r6424, %r8911, -67108864;
	shr.u32 	%r6425, %r6424, 2;
	or.b32  	%r6426, %r6423, %r6425;
	shl.b32 	%r6427, %r8910, 2;
	and.b32  	%r6428, %r6427, 64512;
	and.b32  	%r6429, %r8910, 255;
	or.b32  	%r6430, %r6428, %r6429;
	and.b32  	%r6431, %r8910, 49152;
	shr.u32 	%r6432, %r6431, 6;
	or.b32  	%r6433, %r6430, %r6432;
	shl.b32 	%r6434, %r8910, 4;
	and.b32  	%r6435, %r6434, 15728640;
	or.b32  	%r6436, %r6433, %r6435;
	and.b32  	%r6437, %r8910, 15728640;
	shr.u32 	%r6438, %r6437, 4;
	or.b32  	%r6439, %r6436, %r6438;
	shl.b32 	%r6440, %r8910, 6;
	and.b32  	%r6441, %r6440, -1073741824;
	or.b32  	%r6442, %r6439, %r6441;
	and.b32  	%r6443, %r8910, -67108864;
	shr.u32 	%r6444, %r6443, 2;
	or.b32  	%r6445, %r6442, %r6444;
	shl.b32 	%r6446, %r8909, 2;
	and.b32  	%r6447, %r6446, 64512;
	and.b32  	%r6448, %r8909, 255;
	or.b32  	%r6449, %r6447, %r6448;
	and.b32  	%r6450, %r8909, 49152;
	shr.u32 	%r6451, %r6450, 6;
	or.b32  	%r6452, %r6449, %r6451;
	shl.b32 	%r6453, %r8909, 4;
	and.b32  	%r6454, %r6453, 15728640;
	or.b32  	%r6455, %r6452, %r6454;
	and.b32  	%r6456, %r8909, 15728640;
	shr.u32 	%r6457, %r6456, 4;
	or.b32  	%r6458, %r6455, %r6457;
	shl.b32 	%r6459, %r8909, 6;
	and.b32  	%r6460, %r6459, -1073741824;
	or.b32  	%r6461, %r6458, %r6460;
	and.b32  	%r6462, %r8909, -67108864;
	shr.u32 	%r6463, %r6462, 2;
	or.b32  	%r6464, %r6461, %r6463;
	shl.b32 	%r6465, %r8908, 2;
	and.b32  	%r6466, %r6465, 64512;
	and.b32  	%r6467, %r8908, 255;
	or.b32  	%r6468, %r6466, %r6467;
	and.b32  	%r6469, %r8908, 49152;
	shr.u32 	%r6470, %r6469, 6;
	or.b32  	%r6471, %r6468, %r6470;
	shl.b32 	%r6472, %r8908, 4;
	and.b32  	%r6473, %r6472, 15728640;
	or.b32  	%r6474, %r6471, %r6473;
	and.b32  	%r6475, %r8908, 15728640;
	shr.u32 	%r6476, %r6475, 4;
	or.b32  	%r6477, %r6474, %r6476;
	shl.b32 	%r6478, %r8908, 6;
	and.b32  	%r6479, %r6478, -1073741824;
	or.b32  	%r6480, %r6477, %r6479;
	and.b32  	%r6481, %r8908, -67108864;
	shr.u32 	%r6482, %r6481, 2;
	or.b32  	%r6483, %r6480, %r6482;
	xor.b32  	%r6484, %r6407, %r6350;
	xor.b32  	%r6485, %r6426, %r6369;
	not.b32 	%r6486, %r6445;
	not.b32 	%r6487, %r6464;
	not.b32 	%r6488, %r6485;
	xor.b32  	%r6489, %r6488, %r6487;
	not.b32 	%r6490, %r6484;
	xor.b32  	%r6491, %r6490, %r6486;
	xor.b32  	%r6492, %r6426, %r6388;
	xor.b32  	%r6493, %r6492, %r6483;
	xor.b32  	%r6494, %r6407, %r6369;
	xor.b32  	%r6495, %r6494, %r6464;
	xor.b32  	%r6496, %r6388, %r6350;
	xor.b32  	%r6497, %r6496, %r6445;
	xor.b32  	%r6498, %r6488, %r6483;
	xor.b32  	%r6499, %r6490, %r6487;
	xor.b32  	%r6500, %r6388, %r6486;
	xor.b32  	%r6501, %r6500, %r6483;
	xor.b32  	%r6502, %r6498, %r6495;
	xor.b32  	%r6503, %r6490, %r6488;
	xor.b32  	%r6504, %r6495, %r6489;
	xor.b32  	%r6505, %r6483, %r6487;
	xor.b32  	%r6506, %r6493, %r6491;
	xor.b32  	%r6507, %r6501, %r6506;
	xor.b32  	%r6508, %r6507, %r6495;
	xor.b32  	%r6509, %r6503, %r6502;
	xor.b32  	%r6510, %r6507, %r6489;
	xor.b32  	%r6511, %r6507, %r6499;
	xor.b32  	%r6512, %r6511, %r6505;
	xor.b32  	%r6513, %r6509, %r6497;
	xor.b32  	%r6514, %r6513, %r6498;
	xor.b32  	%r6515, %r6513, %r6491;
	xor.b32  	%r6516, %r6514, %r6501;
	xor.b32  	%r6517, %r6514, %r6506;
	xor.b32  	%r6518, %r6515, %r6504;
	xor.b32  	%r6519, %r6518, %r6501;
	xor.b32  	%r6520, %r6517, %r6518;
	xor.b32  	%r6521, %r6518, %r6506;
	and.b32  	%r6522, %r6514, %r6509;
	and.b32  	%r6523, %r6516, %r6512;
	and.b32  	%r6524, %r6508, %r6501;
	and.b32  	%r6525, %r6521, %r6503;
	and.b32  	%r6526, %r6511, %r6507;
	and.b32  	%r6527, %r6519, %r6510;
	and.b32  	%r6528, %r6518, %r6504;
	and.b32  	%r6529, %r6520, %r6502;
	xor.b32  	%r6530, %r6529, %r6528;
	and.b32  	%r6531, %r6517, %r6505;
	xor.b32  	%r6532, %r6531, %r6528;
	xor.b32  	%r6533, %r6522, %r6515;
	xor.b32  	%r6534, %r6533, %r6523;
	xor.b32  	%r6535, %r6534, %r6530;
	xor.b32  	%r6536, %r6524, %r6505;
	xor.b32  	%r6537, %r6536, %r6517;
	xor.b32  	%r6538, %r6537, %r6522;
	xor.b32  	%r6539, %r6538, %r6532;
	xor.b32  	%r6540, %r6526, %r6503;
	xor.b32  	%r6541, %r6540, %r6521;
	xor.b32  	%r6542, %r6541, %r6525;
	xor.b32  	%r6543, %r6542, %r6530;
	xor.b32  	%r6544, %r6521, %r6489;
	xor.b32  	%r6545, %r6544, %r6525;
	xor.b32  	%r6546, %r6545, %r6527;
	xor.b32  	%r6547, %r6546, %r6532;
	xor.b32  	%r6548, %r6535, %r6539;
	and.b32  	%r6549, %r6535, %r6543;
	xor.b32  	%r6550, %r6549, %r6547;
	and.b32  	%r6551, %r6550, %r6548;
	xor.b32  	%r6552, %r6551, %r6539;
	xor.b32  	%r6553, %r6543, %r6547;
	xor.b32  	%r6554, %r6549, %r6539;
	and.b32  	%r6555, %r6554, %r6553;
	xor.b32  	%r6556, %r6555, %r6547;
	xor.b32  	%r6557, %r6556, %r6543;
	xor.b32  	%r6558, %r6555, %r6549;
	and.b32  	%r6559, %r6558, %r6547;
	xor.b32  	%r6560, %r6557, %r6559;
	xor.b32  	%r6561, %r6559, %r6550;
	and.b32  	%r6562, %r6561, %r6552;
	xor.b32  	%r6563, %r6562, %r6548;
	xor.b32  	%r6564, %r6563, %r6560;
	xor.b32  	%r6565, %r6552, %r6556;
	xor.b32  	%r6566, %r6563, %r6552;
	xor.b32  	%r6567, %r6559, %r6543;
	xor.b32  	%r6568, %r6564, %r6565;
	and.b32  	%r6569, %r6567, %r6514;
	and.b32  	%r6570, %r6560, %r6516;
	and.b32  	%r6571, %r6556, %r6501;
	and.b32  	%r6572, %r6566, %r6521;
	and.b32  	%r6573, %r6563, %r6507;
	and.b32  	%r6574, %r6552, %r6519;
	and.b32  	%r6575, %r6565, %r6518;
	and.b32  	%r6576, %r6568, %r6520;
	and.b32  	%r6577, %r6564, %r6517;
	and.b32  	%r6578, %r6567, %r6509;
	and.b32  	%r6579, %r6560, %r6512;
	and.b32  	%r6580, %r6556, %r6508;
	and.b32  	%r6581, %r6566, %r6503;
	and.b32  	%r6582, %r6563, %r6511;
	and.b32  	%r6583, %r6552, %r6510;
	and.b32  	%r6584, %r6565, %r6504;
	and.b32  	%r6585, %r6568, %r6502;
	and.b32  	%r6586, %r6564, %r6505;
	xor.b32  	%r6587, %r6585, %r6584;
	xor.b32  	%r6588, %r6579, %r6580;
	xor.b32  	%r6589, %r6582, %r6574;
	xor.b32  	%r6590, %r6578, %r6579;
	xor.b32  	%r6591, %r6581, %r6571;
	xor.b32  	%r6592, %r6571, %r6574;
	xor.b32  	%r6593, %r6576, %r6577;
	xor.b32  	%r6594, %r6572, %r6569;
	xor.b32  	%r6595, %r6581, %r6589;
	xor.b32  	%r6596, %r6591, %r6594;
	xor.b32  	%r6597, %r6587, %r6573;
	xor.b32  	%r6598, %r6572, %r6575;
	xor.b32  	%r6599, %r6598, %r6576;
	xor.b32  	%r6600, %r6587, %r6596;
	xor.b32  	%r6601, %r6596, %r6583;
	xor.b32  	%r6602, %r6593, %r6597;
	xor.b32  	%r6603, %r6590, %r6597;
	xor.b32  	%r6604, %r6599, %r6573;
	xor.b32  	%r6605, %r6601, %r6602;
	xor.b32  	%r6606, %r6603, %r6570;
	xor.b32  	%r6607, %r6603, %r6599;
	xor.b32  	%r6608, %r6606, %r6594;
	xor.b32  	%r6609, %r6602, %r6595;
	xor.b32  	%r6610, %r6608, %r6604;
	xor.b32  	%r6611, %r6609, %r6610;
	xor.b32  	%r6612, %r6588, %r6605;
	xor.b32  	%r6613, %r6585, %r6586;
	xor.b32  	%r6614, %r6613, %r6604;
	xor.b32  	%r6615, %r6600, %r6589;
	xor.b32  	%r6616, %r6614, %r6605;
	xor.b32  	%r6617, %r6615, %r6616;
	xor.b32  	%r6618, %r6617, %r6612;
	xor.b32  	%r6619, %r6592, %r6606;
	xor.b32  	%r6620, %r6611, %r6619;
	xor.b32  	%r6621, %r6604, %r6609;
	xor.b32  	%r6622, %r6617, %r6619;
	xor.b32  	%r6623, %r6607, %r6608;
	xor.b32  	%r6624, %r6623, %r6612;
	xor.b32  	%r6625, %r6623, %r6609;
	xor.b32  	%r6626, %r6615, %r6610;
	xor.b32  	%r6627, %r6626, %r6619;
	xor.b32  	%r6628, %r6607, %r6616;
	xor.b32  	%r6629, %r6628, %r6612;
	mul.wide.u32 	%rd44, %r8898, 4;
	add.s64 	%rd45, %rd4, %rd44;
	ld.local.u32 	%r6630, [%rd45+240];
	xor.b32  	%r6631, %r6629, %r6630;
	ld.local.u32 	%r6632, [%rd45+244];
	xor.b32  	%r6633, %r6627, %r6632;
	ld.local.u32 	%r6634, [%rd45+248];
	xor.b32  	%r6635, %r6625, %r6634;
	ld.local.u32 	%r6636, [%rd45+252];
	xor.b32  	%r6637, %r6618, %r6636;
	ld.local.u32 	%r6638, [%rd45+256];
	xor.b32  	%r6639, %r6620, %r6638;
	ld.local.u32 	%r6640, [%rd45+260];
	xor.b32  	%r6641, %r6624, %r6640;
	ld.local.u32 	%r6642, [%rd45+264];
	xor.b32  	%r6643, %r6622, %r6642;
	ld.local.u32 	%r6644, [%rd45+268];
	xor.b32  	%r6645, %r6621, %r6644;
	shf.l.wrap.b32 	%r6646, %r6631, %r6631, 24;
	shf.l.wrap.b32 	%r6647, %r6633, %r6633, 24;
	shf.l.wrap.b32 	%r6648, %r6635, %r6635, 24;
	shf.l.wrap.b32 	%r6649, %r6637, %r6637, 24;
	shf.l.wrap.b32 	%r6650, %r6639, %r6639, 24;
	shf.l.wrap.b32 	%r6651, %r6641, %r6641, 24;
	shf.l.wrap.b32 	%r6652, %r6643, %r6643, 24;
	shf.l.wrap.b32 	%r6653, %r6645, %r6645, 24;
	xor.b32  	%r6654, %r6641, %r6631;
	xor.b32  	%r6655, %r6643, %r6646;
	xor.b32  	%r6656, %r6655, %r6654;
	xor.b32  	%r6657, %r6656, %r6651;
	shf.l.wrap.b32 	%r6658, %r6657, %r6657, 16;
	xor.b32  	%r6659, %r6641, %r6646;
	xor.b32  	%r6660, %r6659, %r6643;
	xor.b32  	%r6661, %r6660, %r6645;
	xor.b32  	%r6662, %r6661, %r6651;
	xor.b32  	%r6663, %r6662, %r6653;
	xor.b32  	%r8915, %r6663, %r6658;
	xor.b32  	%r6664, %r6647, %r6633;
	xor.b32  	%r6665, %r6664, %r6641;
	xor.b32  	%r6666, %r6665, %r6645;
	xor.b32  	%r6667, %r6666, %r6651;
	xor.b32  	%r6668, %r6667, %r6652;
	shf.l.wrap.b32 	%r6669, %r6668, %r6668, 16;
	xor.b32  	%r6670, %r6647, %r6646;
	xor.b32  	%r6671, %r6670, %r6654;
	xor.b32  	%r6672, %r6671, %r6651;
	xor.b32  	%r6673, %r6672, %r6652;
	xor.b32  	%r6674, %r6673, %r6653;
	xor.b32  	%r8914, %r6674, %r6669;
	xor.b32  	%r6675, %r6633, %r6631;
	xor.b32  	%r6676, %r6635, %r6631;
	xor.b32  	%r6677, %r6676, %r6648;
	xor.b32  	%r6678, %r6677, %r6643;
	xor.b32  	%r6679, %r6678, %r6652;
	xor.b32  	%r6680, %r6679, %r6653;
	shf.l.wrap.b32 	%r6681, %r6680, %r6680, 16;
	xor.b32  	%r6682, %r6647, %r6675;
	xor.b32  	%r6683, %r6682, %r6648;
	xor.b32  	%r6684, %r6683, %r6643;
	xor.b32  	%r6685, %r6684, %r6652;
	xor.b32  	%r6686, %r6685, %r6653;
	xor.b32  	%r8913, %r6686, %r6681;
	xor.b32  	%r6687, %r6675, %r6635;
	xor.b32  	%r6688, %r6646, %r6675;
	xor.b32  	%r6689, %r6688, %r6637;
	xor.b32  	%r6690, %r6689, %r6641;
	xor.b32  	%r6691, %r6690, %r6649;
	xor.b32  	%r6692, %r6691, %r6643;
	xor.b32  	%r6693, %r6692, %r6645;
	xor.b32  	%r6694, %r6693, %r6651;
	xor.b32  	%r6695, %r6694, %r6653;
	shf.l.wrap.b32 	%r6696, %r6695, %r6695, 16;
	xor.b32  	%r6697, %r6687, %r6646;
	xor.b32  	%r6698, %r6697, %r6648;
	xor.b32  	%r6699, %r6698, %r6641;
	xor.b32  	%r6700, %r6699, %r6649;
	xor.b32  	%r6701, %r6700, %r6643;
	xor.b32  	%r6702, %r6701, %r6651;
	xor.b32  	%r8912, %r6702, %r6696;
	xor.b32  	%r6703, %r6635, %r6633;
	xor.b32  	%r6704, %r6703, %r6637;
	xor.b32  	%r6705, %r6647, %r6703;
	xor.b32  	%r6706, %r6705, %r6639;
	xor.b32  	%r6707, %r6706, %r6641;
	xor.b32  	%r6708, %r6707, %r6650;
	xor.b32  	%r6709, %r6708, %r6645;
	xor.b32  	%r6710, %r6709, %r6651;
	xor.b32  	%r6711, %r6710, %r6652;
	shf.l.wrap.b32 	%r6712, %r6711, %r6711, 16;
	xor.b32  	%r6713, %r6704, %r6647;
	xor.b32  	%r6714, %r6713, %r6641;
	xor.b32  	%r6715, %r6714, %r6649;
	xor.b32  	%r6716, %r6715, %r6650;
	xor.b32  	%r6717, %r6716, %r6651;
	xor.b32  	%r6718, %r6717, %r6652;
	xor.b32  	%r6719, %r6718, %r6653;
	xor.b32  	%r8911, %r6719, %r6712;
	xor.b32  	%r6720, %r6637, %r6635;
	xor.b32  	%r6721, %r6720, %r6639;
	xor.b32  	%r6722, %r6648, %r6720;
	xor.b32  	%r6723, %r6722, %r6641;
	xor.b32  	%r6724, %r6723, %r6643;
	xor.b32  	%r6725, %r6724, %r6651;
	xor.b32  	%r6726, %r6725, %r6652;
	xor.b32  	%r6727, %r6726, %r6653;
	shf.l.wrap.b32 	%r6728, %r6727, %r6727, 16;
	xor.b32  	%r6729, %r6721, %r6648;
	xor.b32  	%r6730, %r6729, %r6643;
	xor.b32  	%r6731, %r6730, %r6650;
	xor.b32  	%r6732, %r6731, %r6651;
	xor.b32  	%r6733, %r6732, %r6652;
	xor.b32  	%r6734, %r6733, %r6653;
	xor.b32  	%r8910, %r6734, %r6728;
	xor.b32  	%r6735, %r6639, %r6637;
	xor.b32  	%r6736, %r6735, %r6641;
	xor.b32  	%r6737, %r6649, %r6735;
	xor.b32  	%r6738, %r6737, %r6643;
	xor.b32  	%r6739, %r6738, %r6645;
	xor.b32  	%r6740, %r6739, %r6652;
	xor.b32  	%r6741, %r6740, %r6653;
	shf.l.wrap.b32 	%r6742, %r6741, %r6741, 16;
	xor.b32  	%r6743, %r6736, %r6649;
	xor.b32  	%r6744, %r6743, %r6645;
	xor.b32  	%r6745, %r6744, %r6651;
	xor.b32  	%r6746, %r6745, %r6652;
	xor.b32  	%r6747, %r6746, %r6653;
	xor.b32  	%r8909, %r6747, %r6742;
	xor.b32  	%r6748, %r6641, %r6639;
	xor.b32  	%r6749, %r6748, %r6643;
	xor.b32  	%r6750, %r6749, %r6650;
	xor.b32  	%r6751, %r6750, %r6652;
	xor.b32  	%r6752, %r6751, %r6653;
	xor.b32  	%r6753, %r6650, %r6748;
	xor.b32  	%r6754, %r6753, %r6645;
	xor.b32  	%r6755, %r6754, %r6653;
	shf.l.wrap.b32 	%r6756, %r6755, %r6755, 16;
	xor.b32  	%r8908, %r6752, %r6756;
	add.s32 	%r8898, %r8898, -8;
	add.s32 	%r8899, %r8899, -1;
	setp.ne.s32 	%p28, %r8899, 1;
	@%p28 bra 	$L__BB2_36;

$L__BB2_37:
	ld.param.u64 	%rd51, [Final2007_param_3];
	shl.b32 	%r6757, %r8915, 2;
	and.b32  	%r6758, %r6757, 64512;
	and.b32  	%r6759, %r8915, 255;
	or.b32  	%r6760, %r6758, %r6759;
	and.b32  	%r6761, %r8915, 49152;
	shr.u32 	%r6762, %r6761, 6;
	or.b32  	%r6763, %r6760, %r6762;
	shl.b32 	%r6764, %r8915, 4;
	and.b32  	%r6765, %r6764, 15728640;
	or.b32  	%r6766, %r6763, %r6765;
	and.b32  	%r6767, %r8915, 15728640;
	shr.u32 	%r6768, %r6767, 4;
	or.b32  	%r6769, %r6766, %r6768;
	shl.b32 	%r6770, %r8915, 6;
	and.b32  	%r6771, %r6770, -1073741824;
	or.b32  	%r6772, %r6769, %r6771;
	and.b32  	%r6773, %r8915, -67108864;
	shr.u32 	%r6774, %r6773, 2;
	or.b32  	%r6775, %r6772, %r6774;
	shl.b32 	%r6776, %r8914, 2;
	and.b32  	%r6777, %r6776, 64512;
	and.b32  	%r6778, %r8914, 255;
	or.b32  	%r6779, %r6777, %r6778;
	and.b32  	%r6780, %r8914, 49152;
	shr.u32 	%r6781, %r6780, 6;
	or.b32  	%r6782, %r6779, %r6781;
	shl.b32 	%r6783, %r8914, 4;
	and.b32  	%r6784, %r6783, 15728640;
	or.b32  	%r6785, %r6782, %r6784;
	and.b32  	%r6786, %r8914, 15728640;
	shr.u32 	%r6787, %r6786, 4;
	or.b32  	%r6788, %r6785, %r6787;
	shl.b32 	%r6789, %r8914, 6;
	and.b32  	%r6790, %r6789, -1073741824;
	or.b32  	%r6791, %r6788, %r6790;
	and.b32  	%r6792, %r8914, -67108864;
	shr.u32 	%r6793, %r6792, 2;
	or.b32  	%r6794, %r6791, %r6793;
	shl.b32 	%r6795, %r8913, 2;
	and.b32  	%r6796, %r6795, 64512;
	and.b32  	%r6797, %r8913, 255;
	or.b32  	%r6798, %r6796, %r6797;
	and.b32  	%r6799, %r8913, 49152;
	shr.u32 	%r6800, %r6799, 6;
	or.b32  	%r6801, %r6798, %r6800;
	shl.b32 	%r6802, %r8913, 4;
	and.b32  	%r6803, %r6802, 15728640;
	or.b32  	%r6804, %r6801, %r6803;
	and.b32  	%r6805, %r8913, 15728640;
	shr.u32 	%r6806, %r6805, 4;
	or.b32  	%r6807, %r6804, %r6806;
	shl.b32 	%r6808, %r8913, 6;
	and.b32  	%r6809, %r6808, -1073741824;
	or.b32  	%r6810, %r6807, %r6809;
	and.b32  	%r6811, %r8913, -67108864;
	shr.u32 	%r6812, %r6811, 2;
	or.b32  	%r6813, %r6810, %r6812;
	shl.b32 	%r6814, %r8912, 2;
	and.b32  	%r6815, %r6814, 64512;
	and.b32  	%r6816, %r8912, 255;
	or.b32  	%r6817, %r6815, %r6816;
	and.b32  	%r6818, %r8912, 49152;
	shr.u32 	%r6819, %r6818, 6;
	or.b32  	%r6820, %r6817, %r6819;
	shl.b32 	%r6821, %r8912, 4;
	and.b32  	%r6822, %r6821, 15728640;
	or.b32  	%r6823, %r6820, %r6822;
	and.b32  	%r6824, %r8912, 15728640;
	shr.u32 	%r6825, %r6824, 4;
	or.b32  	%r6826, %r6823, %r6825;
	shl.b32 	%r6827, %r8912, 6;
	and.b32  	%r6828, %r6827, -1073741824;
	or.b32  	%r6829, %r6826, %r6828;
	and.b32  	%r6830, %r8912, -67108864;
	shr.u32 	%r6831, %r6830, 2;
	or.b32  	%r6832, %r6829, %r6831;
	shl.b32 	%r6833, %r8911, 2;
	and.b32  	%r6834, %r6833, 64512;
	and.b32  	%r6835, %r8911, 255;
	or.b32  	%r6836, %r6834, %r6835;
	and.b32  	%r6837, %r8911, 49152;
	shr.u32 	%r6838, %r6837, 6;
	or.b32  	%r6839, %r6836, %r6838;
	shl.b32 	%r6840, %r8911, 4;
	and.b32  	%r6841, %r6840, 15728640;
	or.b32  	%r6842, %r6839, %r6841;
	and.b32  	%r6843, %r8911, 15728640;
	shr.u32 	%r6844, %r6843, 4;
	or.b32  	%r6845, %r6842, %r6844;
	shl.b32 	%r6846, %r8911, 6;
	and.b32  	%r6847, %r6846, -1073741824;
	or.b32  	%r6848, %r6845, %r6847;
	and.b32  	%r6849, %r8911, -67108864;
	shr.u32 	%r6850, %r6849, 2;
	or.b32  	%r6851, %r6848, %r6850;
	shl.b32 	%r6852, %r8910, 2;
	and.b32  	%r6853, %r6852, 64512;
	and.b32  	%r6854, %r8910, 255;
	or.b32  	%r6855, %r6853, %r6854;
	and.b32  	%r6856, %r8910, 49152;
	shr.u32 	%r6857, %r6856, 6;
	or.b32  	%r6858, %r6855, %r6857;
	shl.b32 	%r6859, %r8910, 4;
	and.b32  	%r6860, %r6859, 15728640;
	or.b32  	%r6861, %r6858, %r6860;
	and.b32  	%r6862, %r8910, 15728640;
	shr.u32 	%r6863, %r6862, 4;
	or.b32  	%r6864, %r6861, %r6863;
	shl.b32 	%r6865, %r8910, 6;
	and.b32  	%r6866, %r6865, -1073741824;
	or.b32  	%r6867, %r6864, %r6866;
	and.b32  	%r6868, %r8910, -67108864;
	shr.u32 	%r6869, %r6868, 2;
	or.b32  	%r6870, %r6867, %r6869;
	shl.b32 	%r6871, %r8909, 2;
	and.b32  	%r6872, %r6871, 64512;
	and.b32  	%r6873, %r8909, 255;
	or.b32  	%r6874, %r6872, %r6873;
	and.b32  	%r6875, %r8909, 49152;
	shr.u32 	%r6876, %r6875, 6;
	or.b32  	%r6877, %r6874, %r6876;
	shl.b32 	%r6878, %r8909, 4;
	and.b32  	%r6879, %r6878, 15728640;
	or.b32  	%r6880, %r6877, %r6879;
	and.b32  	%r6881, %r8909, 15728640;
	shr.u32 	%r6882, %r6881, 4;
	or.b32  	%r6883, %r6880, %r6882;
	shl.b32 	%r6884, %r8909, 6;
	and.b32  	%r6885, %r6884, -1073741824;
	or.b32  	%r6886, %r6883, %r6885;
	and.b32  	%r6887, %r8909, -67108864;
	shr.u32 	%r6888, %r6887, 2;
	or.b32  	%r6889, %r6886, %r6888;
	shl.b32 	%r6890, %r8908, 2;
	and.b32  	%r6891, %r6890, 64512;
	and.b32  	%r6892, %r8908, 255;
	or.b32  	%r6893, %r6891, %r6892;
	and.b32  	%r6894, %r8908, 49152;
	shr.u32 	%r6895, %r6894, 6;
	or.b32  	%r6896, %r6893, %r6895;
	shl.b32 	%r6897, %r8908, 4;
	and.b32  	%r6898, %r6897, 15728640;
	or.b32  	%r6899, %r6896, %r6898;
	and.b32  	%r6900, %r8908, 15728640;
	shr.u32 	%r6901, %r6900, 4;
	or.b32  	%r6902, %r6899, %r6901;
	shl.b32 	%r6903, %r8908, 6;
	and.b32  	%r6904, %r6903, -1073741824;
	or.b32  	%r6905, %r6902, %r6904;
	and.b32  	%r6906, %r8908, -67108864;
	shr.u32 	%r6907, %r6906, 2;
	or.b32  	%r6908, %r6905, %r6907;
	xor.b32  	%r6909, %r6832, %r6775;
	xor.b32  	%r6910, %r6851, %r6794;
	not.b32 	%r6911, %r6870;
	not.b32 	%r6912, %r6889;
	not.b32 	%r6913, %r6910;
	xor.b32  	%r6914, %r6913, %r6912;
	not.b32 	%r6915, %r6909;
	xor.b32  	%r6916, %r6915, %r6911;
	xor.b32  	%r6917, %r6851, %r6813;
	xor.b32  	%r6918, %r6917, %r6908;
	xor.b32  	%r6919, %r6832, %r6794;
	xor.b32  	%r6920, %r6919, %r6889;
	xor.b32  	%r6921, %r6813, %r6775;
	xor.b32  	%r6922, %r6921, %r6870;
	xor.b32  	%r6923, %r6913, %r6908;
	xor.b32  	%r6924, %r6915, %r6912;
	xor.b32  	%r6925, %r6813, %r6911;
	xor.b32  	%r6926, %r6925, %r6908;
	xor.b32  	%r6927, %r6923, %r6920;
	xor.b32  	%r6928, %r6915, %r6913;
	xor.b32  	%r6929, %r6920, %r6914;
	xor.b32  	%r6930, %r6908, %r6912;
	xor.b32  	%r6931, %r6918, %r6916;
	xor.b32  	%r6932, %r6926, %r6931;
	xor.b32  	%r6933, %r6932, %r6920;
	xor.b32  	%r6934, %r6928, %r6927;
	xor.b32  	%r6935, %r6932, %r6914;
	xor.b32  	%r6936, %r6932, %r6924;
	xor.b32  	%r6937, %r6936, %r6930;
	xor.b32  	%r6938, %r6934, %r6922;
	xor.b32  	%r6939, %r6938, %r6923;
	xor.b32  	%r6940, %r6938, %r6916;
	xor.b32  	%r6941, %r6939, %r6926;
	xor.b32  	%r6942, %r6939, %r6931;
	xor.b32  	%r6943, %r6940, %r6929;
	xor.b32  	%r6944, %r6943, %r6926;
	xor.b32  	%r6945, %r6942, %r6943;
	xor.b32  	%r6946, %r6943, %r6931;
	and.b32  	%r6947, %r6939, %r6934;
	and.b32  	%r6948, %r6941, %r6937;
	and.b32  	%r6949, %r6933, %r6926;
	and.b32  	%r6950, %r6946, %r6928;
	and.b32  	%r6951, %r6936, %r6932;
	and.b32  	%r6952, %r6944, %r6935;
	and.b32  	%r6953, %r6943, %r6929;
	and.b32  	%r6954, %r6945, %r6927;
	xor.b32  	%r6955, %r6954, %r6953;
	and.b32  	%r6956, %r6942, %r6930;
	xor.b32  	%r6957, %r6956, %r6953;
	xor.b32  	%r6958, %r6947, %r6940;
	xor.b32  	%r6959, %r6958, %r6948;
	xor.b32  	%r6960, %r6959, %r6955;
	xor.b32  	%r6961, %r6949, %r6930;
	xor.b32  	%r6962, %r6961, %r6942;
	xor.b32  	%r6963, %r6962, %r6947;
	xor.b32  	%r6964, %r6963, %r6957;
	xor.b32  	%r6965, %r6951, %r6928;
	xor.b32  	%r6966, %r6965, %r6946;
	xor.b32  	%r6967, %r6966, %r6950;
	xor.b32  	%r6968, %r6967, %r6955;
	xor.b32  	%r6969, %r6946, %r6914;
	xor.b32  	%r6970, %r6969, %r6950;
	xor.b32  	%r6971, %r6970, %r6952;
	xor.b32  	%r6972, %r6971, %r6957;
	xor.b32  	%r6973, %r6960, %r6964;
	and.b32  	%r6974, %r6960, %r6968;
	xor.b32  	%r6975, %r6974, %r6972;
	and.b32  	%r6976, %r6975, %r6973;
	xor.b32  	%r6977, %r6976, %r6964;
	xor.b32  	%r6978, %r6968, %r6972;
	xor.b32  	%r6979, %r6974, %r6964;
	and.b32  	%r6980, %r6979, %r6978;
	xor.b32  	%r6981, %r6980, %r6972;
	xor.b32  	%r6982, %r6981, %r6968;
	xor.b32  	%r6983, %r6980, %r6974;
	and.b32  	%r6984, %r6983, %r6972;
	xor.b32  	%r6985, %r6982, %r6984;
	xor.b32  	%r6986, %r6984, %r6975;
	and.b32  	%r6987, %r6986, %r6977;
	xor.b32  	%r6988, %r6987, %r6973;
	xor.b32  	%r6989, %r6988, %r6985;
	xor.b32  	%r6990, %r6977, %r6981;
	xor.b32  	%r6991, %r6988, %r6977;
	xor.b32  	%r6992, %r6984, %r6968;
	xor.b32  	%r6993, %r6989, %r6990;
	and.b32  	%r6994, %r6992, %r6939;
	and.b32  	%r6995, %r6985, %r6941;
	and.b32  	%r6996, %r6981, %r6926;
	and.b32  	%r6997, %r6991, %r6946;
	and.b32  	%r6998, %r6988, %r6932;
	and.b32  	%r6999, %r6977, %r6944;
	and.b32  	%r7000, %r6990, %r6943;
	and.b32  	%r7001, %r6993, %r6945;
	and.b32  	%r7002, %r6989, %r6942;
	and.b32  	%r7003, %r6992, %r6934;
	and.b32  	%r7004, %r6985, %r6937;
	and.b32  	%r7005, %r6981, %r6933;
	and.b32  	%r7006, %r6991, %r6928;
	and.b32  	%r7007, %r6988, %r6936;
	and.b32  	%r7008, %r6977, %r6935;
	and.b32  	%r7009, %r6990, %r6929;
	and.b32  	%r7010, %r6993, %r6927;
	and.b32  	%r7011, %r6989, %r6930;
	xor.b32  	%r7012, %r7010, %r7009;
	xor.b32  	%r7013, %r7004, %r7005;
	xor.b32  	%r7014, %r7007, %r6999;
	xor.b32  	%r7015, %r7003, %r7004;
	xor.b32  	%r7016, %r7006, %r6996;
	xor.b32  	%r7017, %r6996, %r6999;
	xor.b32  	%r7018, %r7001, %r7002;
	xor.b32  	%r7019, %r6997, %r6994;
	xor.b32  	%r7020, %r7006, %r7014;
	xor.b32  	%r7021, %r7016, %r7019;
	xor.b32  	%r7022, %r7012, %r6998;
	xor.b32  	%r7023, %r6997, %r7000;
	xor.b32  	%r7024, %r7023, %r7001;
	xor.b32  	%r7025, %r7012, %r7021;
	xor.b32  	%r7026, %r7021, %r7008;
	xor.b32  	%r7027, %r7018, %r7022;
	xor.b32  	%r7028, %r7015, %r7022;
	xor.b32  	%r7029, %r7024, %r6998;
	xor.b32  	%r7030, %r7026, %r7027;
	xor.b32  	%r7031, %r7028, %r6995;
	xor.b32  	%r7032, %r7028, %r7024;
	xor.b32  	%r7033, %r7031, %r7019;
	xor.b32  	%r7034, %r7027, %r7020;
	xor.b32  	%r7035, %r7033, %r7029;
	xor.b32  	%r7036, %r7034, %r7035;
	xor.b32  	%r7037, %r7013, %r7030;
	xor.b32  	%r7038, %r7010, %r7011;
	xor.b32  	%r7039, %r7038, %r7029;
	xor.b32  	%r7040, %r7025, %r7014;
	xor.b32  	%r7041, %r7039, %r7030;
	xor.b32  	%r7042, %r7040, %r7041;
	xor.b32  	%r7043, %r7042, %r7037;
	xor.b32  	%r7044, %r7017, %r7031;
	xor.b32  	%r7045, %r7036, %r7044;
	xor.b32  	%r7046, %r7029, %r7034;
	xor.b32  	%r7047, %r7042, %r7044;
	xor.b32  	%r7048, %r7032, %r7033;
	xor.b32  	%r7049, %r7048, %r7037;
	ld.local.u32 	%r161, [%rd4+252];
	xor.b32  	%r7050, %r7043, %r161;
	xor.b32  	%r7051, %r7048, %r7034;
	xor.b32  	%r7052, %r7040, %r7035;
	xor.b32  	%r7053, %r7052, %r7044;
	xor.b32  	%r7054, %r7032, %r7041;
	xor.b32  	%r7055, %r7054, %r7037;
	ld.local.u32 	%r158, [%rd4+240];
	xor.b32  	%r7056, %r7055, %r158;
	ld.local.u32 	%r159, [%rd4+244];
	xor.b32  	%r7057, %r7053, %r159;
	ld.local.u32 	%r160, [%rd4+248];
	xor.b32  	%r7058, %r7051, %r160;
	ld.local.u32 	%r162, [%rd4+256];
	xor.b32  	%r7059, %r7045, %r162;
	ld.local.u32 	%r163, [%rd4+260];
	xor.b32  	%r7060, %r7049, %r163;
	ld.local.u32 	%r164, [%rd4+264];
	xor.b32  	%r7061, %r7047, %r164;
	ld.local.u32 	%r165, [%rd4+268];
	xor.b32  	%r7062, %r7046, %r165;
	and.b32  	%r7063, %r7056, 1431655765;
	shl.b32 	%r7064, %r7057, 1;
	and.b32  	%r7065, %r7064, -1431655766;
	or.b32  	%r166, %r7065, %r7063;
	and.b32  	%r7066, %r7058, 1431655765;
	shl.b32 	%r7067, %r7050, 1;
	and.b32  	%r7068, %r7067, -1431655766;
	or.b32  	%r167, %r7068, %r7066;
	and.b32  	%r7069, %r7059, 1431655765;
	shl.b32 	%r7070, %r7060, 1;
	and.b32  	%r7071, %r7070, -1431655766;
	or.b32  	%r168, %r7071, %r7069;
	and.b32  	%r7072, %r7061, 1431655765;
	shl.b32 	%r7073, %r7062, 1;
	and.b32  	%r7074, %r7073, -1431655766;
	or.b32  	%r169, %r7074, %r7072;
	ld.const.u8 	%r7075, [%rd51+16];
	ld.const.u8 	%r7076, [%rd51+17];
	prmt.b32 	%r7077, %r7076, %r7075, 30212;
	ld.const.u8 	%r7078, [%rd51+18];
	prmt.b32 	%r7079, %r7078, %r7077, 28756;
	ld.const.u8 	%r7080, [%rd51+19];
	prmt.b32 	%r7081, %r7080, %r7079, 1620;
	ld.const.u8 	%r7082, [%rd51+20];
	ld.const.u8 	%r7083, [%rd51+21];
	prmt.b32 	%r7084, %r7083, %r7082, 30212;
	ld.const.u8 	%r7085, [%rd51+22];
	prmt.b32 	%r7086, %r7085, %r7084, 28756;
	ld.const.u8 	%r7087, [%rd51+23];
	prmt.b32 	%r7088, %r7087, %r7086, 1620;
	ld.const.u8 	%r7089, [%rd51+24];
	ld.const.u8 	%r7090, [%rd51+25];
	prmt.b32 	%r7091, %r7090, %r7089, 30212;
	ld.const.u8 	%r7092, [%rd51+26];
	prmt.b32 	%r7093, %r7092, %r7091, 28756;
	ld.const.u8 	%r7094, [%rd51+27];
	prmt.b32 	%r7095, %r7094, %r7093, 1620;
	ld.const.u8 	%r7096, [%rd51+28];
	ld.const.u8 	%r7097, [%rd51+29];
	prmt.b32 	%r7098, %r7097, %r7096, 30212;
	ld.const.u8 	%r7099, [%rd51+30];
	prmt.b32 	%r7100, %r7099, %r7098, 28756;
	ld.const.u8 	%r7101, [%rd51+31];
	prmt.b32 	%r7102, %r7101, %r7100, 1620;
	and.b32  	%r7103, %r7081, -1431655766;
	shr.u32 	%r7104, %r7103, 3;
	shr.u32 	%r7105, %r7103, 1;
	and.b32  	%r7106, %r7088, -2004318072;
	and.b32  	%r7107, %r7095, -1431655766;
	shr.u32 	%r7108, %r7107, 3;
	shr.u32 	%r7109, %r7107, 1;
	and.b32  	%r7110, %r7102, -2004318072;
	and.b32  	%r7111, %r7081, 286331153;
	shl.b32 	%r7112, %r7088, 2;
	and.b32  	%r7113, %r7112, 1145324612;
	or.b32  	%r7114, %r7113, %r7111;
	and.b32  	%r7115, %r7081, 1145324612;
	shr.u32 	%r7116, %r7115, 2;
	and.b32  	%r7117, %r7088, 1145324612;
	or.b32  	%r7118, %r7116, %r7117;
	and.b32  	%r7119, %r7105, 286331153;
	shl.b32 	%r7120, %r7088, 1;
	and.b32  	%r7121, %r7120, 1145324612;
	or.b32  	%r7122, %r7121, %r7119;
	and.b32  	%r7123, %r7104, 286331153;
	shr.u32 	%r7124, %r7106, 1;
	or.b32  	%r7125, %r7123, %r7124;
	and.b32  	%r7126, %r7095, 286331153;
	shl.b32 	%r7127, %r7102, 2;
	and.b32  	%r7128, %r7127, 1145324612;
	or.b32  	%r7129, %r7128, %r7126;
	and.b32  	%r7130, %r7095, 1145324612;
	shr.u32 	%r7131, %r7130, 2;
	and.b32  	%r7132, %r7102, 1145324612;
	or.b32  	%r7133, %r7131, %r7132;
	and.b32  	%r7134, %r7109, 286331153;
	shl.b32 	%r7135, %r7102, 1;
	and.b32  	%r7136, %r7135, 1145324612;
	or.b32  	%r7137, %r7136, %r7134;
	and.b32  	%r7138, %r7108, 286331153;
	shr.u32 	%r7139, %r7110, 1;
	or.b32  	%r7140, %r7138, %r7139;
	and.b32  	%r7141, %r7114, 84215045;
	shl.b32 	%r7142, %r7129, 4;
	and.b32  	%r7143, %r7142, 1347440720;
	or.b32  	%r7144, %r7143, %r7141;
	and.b32  	%r7145, %r7114, 1347440720;
	shr.u32 	%r7146, %r7145, 4;
	and.b32  	%r7147, %r7129, 1347440720;
	or.b32  	%r7148, %r7146, %r7147;
	and.b32  	%r7149, %r7122, 84215045;
	shl.b32 	%r7150, %r7137, 4;
	and.b32  	%r7151, %r7150, 1347440720;
	or.b32  	%r7152, %r7151, %r7149;
	and.b32  	%r7153, %r7122, 1347440720;
	shr.u32 	%r7154, %r7153, 4;
	and.b32  	%r7155, %r7137, 1347440720;
	or.b32  	%r7156, %r7154, %r7155;
	and.b32  	%r7157, %r7118, 84215045;
	shl.b32 	%r7158, %r7133, 4;
	and.b32  	%r7159, %r7158, 1347440720;
	or.b32  	%r7160, %r7159, %r7157;
	and.b32  	%r7161, %r7118, 1347440720;
	shr.u32 	%r7162, %r7161, 4;
	and.b32  	%r7163, %r7133, 1347440720;
	or.b32  	%r7164, %r7162, %r7163;
	and.b32  	%r7165, %r7125, 84215045;
	shl.b32 	%r7166, %r7140, 4;
	and.b32  	%r7167, %r7166, 1347440720;
	or.b32  	%r7168, %r7167, %r7165;
	and.b32  	%r7169, %r7125, 1347440720;
	shr.u32 	%r7170, %r7169, 4;
	and.b32  	%r7171, %r7140, 1347440720;
	or.b32  	%r7172, %r7170, %r7171;
	xor.b32  	%r8933, %r7144, %r113;
	xor.b32  	%r8932, %r7152, %r115;
	xor.b32  	%r8931, %r7160, %r117;
	xor.b32  	%r8930, %r7168, %r119;
	xor.b32  	%r8929, %r7148, %r121;
	xor.b32  	%r8928, %r7156, %r123;
	xor.b32  	%r8927, %r7164, %r125;
	xor.b32  	%r8926, %r7172, %r127;
	@%p27 bra 	$L__BB2_40;

	add.s32 	%r8916, %r112, -8;

$L__BB2_39:
	shl.b32 	%r7173, %r8933, 2;
	and.b32  	%r7174, %r7173, 64512;
	and.b32  	%r7175, %r8933, 255;
	or.b32  	%r7176, %r7174, %r7175;
	and.b32  	%r7177, %r8933, 49152;
	shr.u32 	%r7178, %r7177, 6;
	or.b32  	%r7179, %r7176, %r7178;
	shl.b32 	%r7180, %r8933, 4;
	and.b32  	%r7181, %r7180, 15728640;
	or.b32  	%r7182, %r7179, %r7181;
	and.b32  	%r7183, %r8933, 15728640;
	shr.u32 	%r7184, %r7183, 4;
	or.b32  	%r7185, %r7182, %r7184;
	shl.b32 	%r7186, %r8933, 6;
	and.b32  	%r7187, %r7186, -1073741824;
	or.b32  	%r7188, %r7185, %r7187;
	and.b32  	%r7189, %r8933, -67108864;
	shr.u32 	%r7190, %r7189, 2;
	or.b32  	%r7191, %r7188, %r7190;
	shl.b32 	%r7192, %r8932, 2;
	and.b32  	%r7193, %r7192, 64512;
	and.b32  	%r7194, %r8932, 255;
	or.b32  	%r7195, %r7193, %r7194;
	and.b32  	%r7196, %r8932, 49152;
	shr.u32 	%r7197, %r7196, 6;
	or.b32  	%r7198, %r7195, %r7197;
	shl.b32 	%r7199, %r8932, 4;
	and.b32  	%r7200, %r7199, 15728640;
	or.b32  	%r7201, %r7198, %r7200;
	and.b32  	%r7202, %r8932, 15728640;
	shr.u32 	%r7203, %r7202, 4;
	or.b32  	%r7204, %r7201, %r7203;
	shl.b32 	%r7205, %r8932, 6;
	and.b32  	%r7206, %r7205, -1073741824;
	or.b32  	%r7207, %r7204, %r7206;
	and.b32  	%r7208, %r8932, -67108864;
	shr.u32 	%r7209, %r7208, 2;
	or.b32  	%r7210, %r7207, %r7209;
	shl.b32 	%r7211, %r8931, 2;
	and.b32  	%r7212, %r7211, 64512;
	and.b32  	%r7213, %r8931, 255;
	or.b32  	%r7214, %r7212, %r7213;
	and.b32  	%r7215, %r8931, 49152;
	shr.u32 	%r7216, %r7215, 6;
	or.b32  	%r7217, %r7214, %r7216;
	shl.b32 	%r7218, %r8931, 4;
	and.b32  	%r7219, %r7218, 15728640;
	or.b32  	%r7220, %r7217, %r7219;
	and.b32  	%r7221, %r8931, 15728640;
	shr.u32 	%r7222, %r7221, 4;
	or.b32  	%r7223, %r7220, %r7222;
	shl.b32 	%r7224, %r8931, 6;
	and.b32  	%r7225, %r7224, -1073741824;
	or.b32  	%r7226, %r7223, %r7225;
	and.b32  	%r7227, %r8931, -67108864;
	shr.u32 	%r7228, %r7227, 2;
	or.b32  	%r7229, %r7226, %r7228;
	shl.b32 	%r7230, %r8930, 2;
	and.b32  	%r7231, %r7230, 64512;
	and.b32  	%r7232, %r8930, 255;
	or.b32  	%r7233, %r7231, %r7232;
	and.b32  	%r7234, %r8930, 49152;
	shr.u32 	%r7235, %r7234, 6;
	or.b32  	%r7236, %r7233, %r7235;
	shl.b32 	%r7237, %r8930, 4;
	and.b32  	%r7238, %r7237, 15728640;
	or.b32  	%r7239, %r7236, %r7238;
	and.b32  	%r7240, %r8930, 15728640;
	shr.u32 	%r7241, %r7240, 4;
	or.b32  	%r7242, %r7239, %r7241;
	shl.b32 	%r7243, %r8930, 6;
	and.b32  	%r7244, %r7243, -1073741824;
	or.b32  	%r7245, %r7242, %r7244;
	and.b32  	%r7246, %r8930, -67108864;
	shr.u32 	%r7247, %r7246, 2;
	or.b32  	%r7248, %r7245, %r7247;
	shl.b32 	%r7249, %r8929, 2;
	and.b32  	%r7250, %r7249, 64512;
	and.b32  	%r7251, %r8929, 255;
	or.b32  	%r7252, %r7250, %r7251;
	and.b32  	%r7253, %r8929, 49152;
	shr.u32 	%r7254, %r7253, 6;
	or.b32  	%r7255, %r7252, %r7254;
	shl.b32 	%r7256, %r8929, 4;
	and.b32  	%r7257, %r7256, 15728640;
	or.b32  	%r7258, %r7255, %r7257;
	and.b32  	%r7259, %r8929, 15728640;
	shr.u32 	%r7260, %r7259, 4;
	or.b32  	%r7261, %r7258, %r7260;
	shl.b32 	%r7262, %r8929, 6;
	and.b32  	%r7263, %r7262, -1073741824;
	or.b32  	%r7264, %r7261, %r7263;
	and.b32  	%r7265, %r8929, -67108864;
	shr.u32 	%r7266, %r7265, 2;
	or.b32  	%r7267, %r7264, %r7266;
	shl.b32 	%r7268, %r8928, 2;
	and.b32  	%r7269, %r7268, 64512;
	and.b32  	%r7270, %r8928, 255;
	or.b32  	%r7271, %r7269, %r7270;
	and.b32  	%r7272, %r8928, 49152;
	shr.u32 	%r7273, %r7272, 6;
	or.b32  	%r7274, %r7271, %r7273;
	shl.b32 	%r7275, %r8928, 4;
	and.b32  	%r7276, %r7275, 15728640;
	or.b32  	%r7277, %r7274, %r7276;
	and.b32  	%r7278, %r8928, 15728640;
	shr.u32 	%r7279, %r7278, 4;
	or.b32  	%r7280, %r7277, %r7279;
	shl.b32 	%r7281, %r8928, 6;
	and.b32  	%r7282, %r7281, -1073741824;
	or.b32  	%r7283, %r7280, %r7282;
	and.b32  	%r7284, %r8928, -67108864;
	shr.u32 	%r7285, %r7284, 2;
	or.b32  	%r7286, %r7283, %r7285;
	shl.b32 	%r7287, %r8927, 2;
	and.b32  	%r7288, %r7287, 64512;
	and.b32  	%r7289, %r8927, 255;
	or.b32  	%r7290, %r7288, %r7289;
	and.b32  	%r7291, %r8927, 49152;
	shr.u32 	%r7292, %r7291, 6;
	or.b32  	%r7293, %r7290, %r7292;
	shl.b32 	%r7294, %r8927, 4;
	and.b32  	%r7295, %r7294, 15728640;
	or.b32  	%r7296, %r7293, %r7295;
	and.b32  	%r7297, %r8927, 15728640;
	shr.u32 	%r7298, %r7297, 4;
	or.b32  	%r7299, %r7296, %r7298;
	shl.b32 	%r7300, %r8927, 6;
	and.b32  	%r7301, %r7300, -1073741824;
	or.b32  	%r7302, %r7299, %r7301;
	and.b32  	%r7303, %r8927, -67108864;
	shr.u32 	%r7304, %r7303, 2;
	or.b32  	%r7305, %r7302, %r7304;
	shl.b32 	%r7306, %r8926, 2;
	and.b32  	%r7307, %r7306, 64512;
	and.b32  	%r7308, %r8926, 255;
	or.b32  	%r7309, %r7307, %r7308;
	and.b32  	%r7310, %r8926, 49152;
	shr.u32 	%r7311, %r7310, 6;
	or.b32  	%r7312, %r7309, %r7311;
	shl.b32 	%r7313, %r8926, 4;
	and.b32  	%r7314, %r7313, 15728640;
	or.b32  	%r7315, %r7312, %r7314;
	and.b32  	%r7316, %r8926, 15728640;
	shr.u32 	%r7317, %r7316, 4;
	or.b32  	%r7318, %r7315, %r7317;
	shl.b32 	%r7319, %r8926, 6;
	and.b32  	%r7320, %r7319, -1073741824;
	or.b32  	%r7321, %r7318, %r7320;
	and.b32  	%r7322, %r8926, -67108864;
	shr.u32 	%r7323, %r7322, 2;
	or.b32  	%r7324, %r7321, %r7323;
	xor.b32  	%r7325, %r7248, %r7191;
	xor.b32  	%r7326, %r7267, %r7210;
	not.b32 	%r7327, %r7286;
	not.b32 	%r7328, %r7305;
	not.b32 	%r7329, %r7326;
	xor.b32  	%r7330, %r7329, %r7328;
	not.b32 	%r7331, %r7325;
	xor.b32  	%r7332, %r7331, %r7327;
	xor.b32  	%r7333, %r7267, %r7229;
	xor.b32  	%r7334, %r7333, %r7324;
	xor.b32  	%r7335, %r7248, %r7210;
	xor.b32  	%r7336, %r7335, %r7305;
	xor.b32  	%r7337, %r7229, %r7191;
	xor.b32  	%r7338, %r7337, %r7286;
	xor.b32  	%r7339, %r7329, %r7324;
	xor.b32  	%r7340, %r7331, %r7328;
	xor.b32  	%r7341, %r7229, %r7327;
	xor.b32  	%r7342, %r7341, %r7324;
	xor.b32  	%r7343, %r7339, %r7336;
	xor.b32  	%r7344, %r7331, %r7329;
	xor.b32  	%r7345, %r7336, %r7330;
	xor.b32  	%r7346, %r7324, %r7328;
	xor.b32  	%r7347, %r7334, %r7332;
	xor.b32  	%r7348, %r7342, %r7347;
	xor.b32  	%r7349, %r7348, %r7336;
	xor.b32  	%r7350, %r7344, %r7343;
	xor.b32  	%r7351, %r7348, %r7330;
	xor.b32  	%r7352, %r7348, %r7340;
	xor.b32  	%r7353, %r7352, %r7346;
	xor.b32  	%r7354, %r7350, %r7338;
	xor.b32  	%r7355, %r7354, %r7339;
	xor.b32  	%r7356, %r7354, %r7332;
	xor.b32  	%r7357, %r7355, %r7342;
	xor.b32  	%r7358, %r7355, %r7347;
	xor.b32  	%r7359, %r7356, %r7345;
	xor.b32  	%r7360, %r7359, %r7342;
	xor.b32  	%r7361, %r7358, %r7359;
	xor.b32  	%r7362, %r7359, %r7347;
	and.b32  	%r7363, %r7355, %r7350;
	and.b32  	%r7364, %r7357, %r7353;
	and.b32  	%r7365, %r7349, %r7342;
	and.b32  	%r7366, %r7362, %r7344;
	and.b32  	%r7367, %r7352, %r7348;
	and.b32  	%r7368, %r7360, %r7351;
	and.b32  	%r7369, %r7359, %r7345;
	and.b32  	%r7370, %r7361, %r7343;
	xor.b32  	%r7371, %r7370, %r7369;
	and.b32  	%r7372, %r7358, %r7346;
	xor.b32  	%r7373, %r7372, %r7369;
	xor.b32  	%r7374, %r7363, %r7356;
	xor.b32  	%r7375, %r7374, %r7364;
	xor.b32  	%r7376, %r7375, %r7371;
	xor.b32  	%r7377, %r7365, %r7346;
	xor.b32  	%r7378, %r7377, %r7358;
	xor.b32  	%r7379, %r7378, %r7363;
	xor.b32  	%r7380, %r7379, %r7373;
	xor.b32  	%r7381, %r7367, %r7344;
	xor.b32  	%r7382, %r7381, %r7362;
	xor.b32  	%r7383, %r7382, %r7366;
	xor.b32  	%r7384, %r7383, %r7371;
	xor.b32  	%r7385, %r7362, %r7330;
	xor.b32  	%r7386, %r7385, %r7366;
	xor.b32  	%r7387, %r7386, %r7368;
	xor.b32  	%r7388, %r7387, %r7373;
	xor.b32  	%r7389, %r7376, %r7380;
	and.b32  	%r7390, %r7376, %r7384;
	xor.b32  	%r7391, %r7390, %r7388;
	and.b32  	%r7392, %r7391, %r7389;
	xor.b32  	%r7393, %r7392, %r7380;
	xor.b32  	%r7394, %r7384, %r7388;
	xor.b32  	%r7395, %r7390, %r7380;
	and.b32  	%r7396, %r7395, %r7394;
	xor.b32  	%r7397, %r7396, %r7388;
	xor.b32  	%r7398, %r7397, %r7384;
	xor.b32  	%r7399, %r7396, %r7390;
	and.b32  	%r7400, %r7399, %r7388;
	xor.b32  	%r7401, %r7398, %r7400;
	xor.b32  	%r7402, %r7400, %r7391;
	and.b32  	%r7403, %r7402, %r7393;
	xor.b32  	%r7404, %r7403, %r7389;
	xor.b32  	%r7405, %r7404, %r7401;
	xor.b32  	%r7406, %r7393, %r7397;
	xor.b32  	%r7407, %r7404, %r7393;
	xor.b32  	%r7408, %r7400, %r7384;
	xor.b32  	%r7409, %r7405, %r7406;
	and.b32  	%r7410, %r7408, %r7355;
	and.b32  	%r7411, %r7401, %r7357;
	and.b32  	%r7412, %r7397, %r7342;
	and.b32  	%r7413, %r7407, %r7362;
	and.b32  	%r7414, %r7404, %r7348;
	and.b32  	%r7415, %r7393, %r7360;
	and.b32  	%r7416, %r7406, %r7359;
	and.b32  	%r7417, %r7409, %r7361;
	and.b32  	%r7418, %r7405, %r7358;
	and.b32  	%r7419, %r7408, %r7350;
	and.b32  	%r7420, %r7401, %r7353;
	and.b32  	%r7421, %r7397, %r7349;
	and.b32  	%r7422, %r7407, %r7344;
	and.b32  	%r7423, %r7404, %r7352;
	and.b32  	%r7424, %r7393, %r7351;
	and.b32  	%r7425, %r7406, %r7345;
	and.b32  	%r7426, %r7409, %r7343;
	and.b32  	%r7427, %r7405, %r7346;
	xor.b32  	%r7428, %r7426, %r7425;
	xor.b32  	%r7429, %r7420, %r7421;
	xor.b32  	%r7430, %r7423, %r7415;
	xor.b32  	%r7431, %r7419, %r7420;
	xor.b32  	%r7432, %r7422, %r7412;
	xor.b32  	%r7433, %r7412, %r7415;
	xor.b32  	%r7434, %r7417, %r7418;
	xor.b32  	%r7435, %r7413, %r7410;
	xor.b32  	%r7436, %r7422, %r7430;
	xor.b32  	%r7437, %r7432, %r7435;
	xor.b32  	%r7438, %r7428, %r7414;
	xor.b32  	%r7439, %r7413, %r7416;
	xor.b32  	%r7440, %r7439, %r7417;
	xor.b32  	%r7441, %r7428, %r7437;
	xor.b32  	%r7442, %r7437, %r7424;
	xor.b32  	%r7443, %r7434, %r7438;
	xor.b32  	%r7444, %r7431, %r7438;
	xor.b32  	%r7445, %r7440, %r7414;
	xor.b32  	%r7446, %r7442, %r7443;
	xor.b32  	%r7447, %r7444, %r7411;
	xor.b32  	%r7448, %r7444, %r7440;
	xor.b32  	%r7449, %r7447, %r7435;
	xor.b32  	%r7450, %r7443, %r7436;
	xor.b32  	%r7451, %r7449, %r7445;
	xor.b32  	%r7452, %r7450, %r7451;
	xor.b32  	%r7453, %r7429, %r7446;
	xor.b32  	%r7454, %r7426, %r7427;
	xor.b32  	%r7455, %r7454, %r7445;
	xor.b32  	%r7456, %r7441, %r7430;
	xor.b32  	%r7457, %r7455, %r7446;
	xor.b32  	%r7458, %r7456, %r7457;
	xor.b32  	%r7459, %r7458, %r7453;
	xor.b32  	%r7460, %r7433, %r7447;
	xor.b32  	%r7461, %r7452, %r7460;
	xor.b32  	%r7462, %r7445, %r7450;
	xor.b32  	%r7463, %r7458, %r7460;
	xor.b32  	%r7464, %r7448, %r7449;
	xor.b32  	%r7465, %r7464, %r7453;
	xor.b32  	%r7466, %r7464, %r7450;
	xor.b32  	%r7467, %r7456, %r7451;
	xor.b32  	%r7468, %r7467, %r7460;
	xor.b32  	%r7469, %r7448, %r7457;
	xor.b32  	%r7470, %r7469, %r7453;
	mul.wide.u32 	%rd46, %r8916, 4;
	add.s64 	%rd47, %rd4, %rd46;
	ld.local.u32 	%r7471, [%rd47+240];
	xor.b32  	%r7472, %r7470, %r7471;
	ld.local.u32 	%r7473, [%rd47+244];
	xor.b32  	%r7474, %r7468, %r7473;
	ld.local.u32 	%r7475, [%rd47+248];
	xor.b32  	%r7476, %r7466, %r7475;
	ld.local.u32 	%r7477, [%rd47+252];
	xor.b32  	%r7478, %r7459, %r7477;
	ld.local.u32 	%r7479, [%rd47+256];
	xor.b32  	%r7480, %r7461, %r7479;
	ld.local.u32 	%r7481, [%rd47+260];
	xor.b32  	%r7482, %r7465, %r7481;
	ld.local.u32 	%r7483, [%rd47+264];
	xor.b32  	%r7484, %r7463, %r7483;
	ld.local.u32 	%r7485, [%rd47+268];
	xor.b32  	%r7486, %r7462, %r7485;
	shf.l.wrap.b32 	%r7487, %r7472, %r7472, 24;
	shf.l.wrap.b32 	%r7488, %r7474, %r7474, 24;
	shf.l.wrap.b32 	%r7489, %r7476, %r7476, 24;
	shf.l.wrap.b32 	%r7490, %r7478, %r7478, 24;
	shf.l.wrap.b32 	%r7491, %r7480, %r7480, 24;
	shf.l.wrap.b32 	%r7492, %r7482, %r7482, 24;
	shf.l.wrap.b32 	%r7493, %r7484, %r7484, 24;
	shf.l.wrap.b32 	%r7494, %r7486, %r7486, 24;
	xor.b32  	%r7495, %r7482, %r7472;
	xor.b32  	%r7496, %r7484, %r7487;
	xor.b32  	%r7497, %r7496, %r7495;
	xor.b32  	%r7498, %r7497, %r7492;
	shf.l.wrap.b32 	%r7499, %r7498, %r7498, 16;
	xor.b32  	%r7500, %r7482, %r7487;
	xor.b32  	%r7501, %r7500, %r7484;
	xor.b32  	%r7502, %r7501, %r7486;
	xor.b32  	%r7503, %r7502, %r7492;
	xor.b32  	%r7504, %r7503, %r7494;
	xor.b32  	%r8933, %r7504, %r7499;
	xor.b32  	%r7505, %r7488, %r7474;
	xor.b32  	%r7506, %r7505, %r7482;
	xor.b32  	%r7507, %r7506, %r7486;
	xor.b32  	%r7508, %r7507, %r7492;
	xor.b32  	%r7509, %r7508, %r7493;
	shf.l.wrap.b32 	%r7510, %r7509, %r7509, 16;
	xor.b32  	%r7511, %r7488, %r7487;
	xor.b32  	%r7512, %r7511, %r7495;
	xor.b32  	%r7513, %r7512, %r7492;
	xor.b32  	%r7514, %r7513, %r7493;
	xor.b32  	%r7515, %r7514, %r7494;
	xor.b32  	%r8932, %r7515, %r7510;
	xor.b32  	%r7516, %r7474, %r7472;
	xor.b32  	%r7517, %r7476, %r7472;
	xor.b32  	%r7518, %r7517, %r7489;
	xor.b32  	%r7519, %r7518, %r7484;
	xor.b32  	%r7520, %r7519, %r7493;
	xor.b32  	%r7521, %r7520, %r7494;
	shf.l.wrap.b32 	%r7522, %r7521, %r7521, 16;
	xor.b32  	%r7523, %r7488, %r7516;
	xor.b32  	%r7524, %r7523, %r7489;
	xor.b32  	%r7525, %r7524, %r7484;
	xor.b32  	%r7526, %r7525, %r7493;
	xor.b32  	%r7527, %r7526, %r7494;
	xor.b32  	%r8931, %r7527, %r7522;
	xor.b32  	%r7528, %r7516, %r7476;
	xor.b32  	%r7529, %r7487, %r7516;
	xor.b32  	%r7530, %r7529, %r7478;
	xor.b32  	%r7531, %r7530, %r7482;
	xor.b32  	%r7532, %r7531, %r7490;
	xor.b32  	%r7533, %r7532, %r7484;
	xor.b32  	%r7534, %r7533, %r7486;
	xor.b32  	%r7535, %r7534, %r7492;
	xor.b32  	%r7536, %r7535, %r7494;
	shf.l.wrap.b32 	%r7537, %r7536, %r7536, 16;
	xor.b32  	%r7538, %r7528, %r7487;
	xor.b32  	%r7539, %r7538, %r7489;
	xor.b32  	%r7540, %r7539, %r7482;
	xor.b32  	%r7541, %r7540, %r7490;
	xor.b32  	%r7542, %r7541, %r7484;
	xor.b32  	%r7543, %r7542, %r7492;
	xor.b32  	%r8930, %r7543, %r7537;
	xor.b32  	%r7544, %r7476, %r7474;
	xor.b32  	%r7545, %r7544, %r7478;
	xor.b32  	%r7546, %r7488, %r7544;
	xor.b32  	%r7547, %r7546, %r7480;
	xor.b32  	%r7548, %r7547, %r7482;
	xor.b32  	%r7549, %r7548, %r7491;
	xor.b32  	%r7550, %r7549, %r7486;
	xor.b32  	%r7551, %r7550, %r7492;
	xor.b32  	%r7552, %r7551, %r7493;
	shf.l.wrap.b32 	%r7553, %r7552, %r7552, 16;
	xor.b32  	%r7554, %r7545, %r7488;
	xor.b32  	%r7555, %r7554, %r7482;
	xor.b32  	%r7556, %r7555, %r7490;
	xor.b32  	%r7557, %r7556, %r7491;
	xor.b32  	%r7558, %r7557, %r7492;
	xor.b32  	%r7559, %r7558, %r7493;
	xor.b32  	%r7560, %r7559, %r7494;
	xor.b32  	%r8929, %r7560, %r7553;
	xor.b32  	%r7561, %r7478, %r7476;
	xor.b32  	%r7562, %r7561, %r7480;
	xor.b32  	%r7563, %r7489, %r7561;
	xor.b32  	%r7564, %r7563, %r7482;
	xor.b32  	%r7565, %r7564, %r7484;
	xor.b32  	%r7566, %r7565, %r7492;
	xor.b32  	%r7567, %r7566, %r7493;
	xor.b32  	%r7568, %r7567, %r7494;
	shf.l.wrap.b32 	%r7569, %r7568, %r7568, 16;
	xor.b32  	%r7570, %r7562, %r7489;
	xor.b32  	%r7571, %r7570, %r7484;
	xor.b32  	%r7572, %r7571, %r7491;
	xor.b32  	%r7573, %r7572, %r7492;
	xor.b32  	%r7574, %r7573, %r7493;
	xor.b32  	%r7575, %r7574, %r7494;
	xor.b32  	%r8928, %r7575, %r7569;
	xor.b32  	%r7576, %r7480, %r7478;
	xor.b32  	%r7577, %r7576, %r7482;
	xor.b32  	%r7578, %r7490, %r7576;
	xor.b32  	%r7579, %r7578, %r7484;
	xor.b32  	%r7580, %r7579, %r7486;
	xor.b32  	%r7581, %r7580, %r7493;
	xor.b32  	%r7582, %r7581, %r7494;
	shf.l.wrap.b32 	%r7583, %r7582, %r7582, 16;
	xor.b32  	%r7584, %r7577, %r7490;
	xor.b32  	%r7585, %r7584, %r7486;
	xor.b32  	%r7586, %r7585, %r7492;
	xor.b32  	%r7587, %r7586, %r7493;
	xor.b32  	%r7588, %r7587, %r7494;
	xor.b32  	%r8927, %r7588, %r7583;
	xor.b32  	%r7589, %r7482, %r7480;
	xor.b32  	%r7590, %r7589, %r7484;
	xor.b32  	%r7591, %r7590, %r7491;
	xor.b32  	%r7592, %r7591, %r7493;
	xor.b32  	%r7593, %r7592, %r7494;
	xor.b32  	%r7594, %r7491, %r7589;
	xor.b32  	%r7595, %r7594, %r7486;
	xor.b32  	%r7596, %r7595, %r7494;
	shf.l.wrap.b32 	%r7597, %r7596, %r7596, 16;
	xor.b32  	%r8926, %r7593, %r7597;
	add.s32 	%r8916, %r8916, -8;
	add.s32 	%r8897, %r8897, -1;
	setp.ne.s32 	%p30, %r8897, 1;
	@%p30 bra 	$L__BB2_39;

$L__BB2_40:
	mov.u32 	%r8879, -271733879;
	shf.l.wrap.b32 	%r8878, %r8879, %r8879, 30;
	mov.u32 	%r8877, 1732584193;
	shf.l.wrap.b32 	%r8876, %r8877, %r8877, 30;
	shl.b32 	%r7911, %r167, 2;
	and.b32  	%r7912, %r7911, -858993460;
	and.b32  	%r7913, %r166, 858993459;
	or.b32  	%r7914, %r7912, %r7913;
	and.b32  	%r7915, %r167, -858993460;
	and.b32  	%r7916, %r166, -858993460;
	shr.u32 	%r7917, %r7916, 2;
	or.b32  	%r7918, %r7917, %r7915;
	shl.b32 	%r7919, %r169, 2;
	and.b32  	%r7920, %r7919, -858993460;
	and.b32  	%r7921, %r168, 858993459;
	or.b32  	%r7922, %r7920, %r7921;
	and.b32  	%r7923, %r169, -858993460;
	and.b32  	%r7924, %r168, -858993460;
	shr.u32 	%r7925, %r7924, 2;
	or.b32  	%r7926, %r7925, %r7923;
	shl.b32 	%r7927, %r8933, 2;
	and.b32  	%r7928, %r7927, 64512;
	and.b32  	%r7929, %r8933, 255;
	or.b32  	%r7930, %r7928, %r7929;
	and.b32  	%r7931, %r8933, 49152;
	shr.u32 	%r7932, %r7931, 6;
	or.b32  	%r7933, %r7930, %r7932;
	shl.b32 	%r7934, %r8933, 4;
	and.b32  	%r7935, %r7934, 15728640;
	or.b32  	%r7936, %r7933, %r7935;
	and.b32  	%r7937, %r8933, 15728640;
	shr.u32 	%r7938, %r7937, 4;
	or.b32  	%r7939, %r7936, %r7938;
	shl.b32 	%r7940, %r8933, 6;
	and.b32  	%r7941, %r7940, -1073741824;
	or.b32  	%r7942, %r7939, %r7941;
	and.b32  	%r7943, %r8933, -67108864;
	shr.u32 	%r7944, %r7943, 2;
	or.b32  	%r7945, %r7942, %r7944;
	shl.b32 	%r7946, %r8932, 2;
	and.b32  	%r7947, %r7946, 64512;
	and.b32  	%r7948, %r8932, 255;
	or.b32  	%r7949, %r7947, %r7948;
	and.b32  	%r7950, %r8932, 49152;
	shr.u32 	%r7951, %r7950, 6;
	or.b32  	%r7952, %r7949, %r7951;
	shl.b32 	%r7953, %r8932, 4;
	and.b32  	%r7954, %r7953, 15728640;
	or.b32  	%r7955, %r7952, %r7954;
	and.b32  	%r7956, %r8932, 15728640;
	shr.u32 	%r7957, %r7956, 4;
	or.b32  	%r7958, %r7955, %r7957;
	shl.b32 	%r7959, %r8932, 6;
	and.b32  	%r7960, %r7959, -1073741824;
	or.b32  	%r7961, %r7958, %r7960;
	and.b32  	%r7962, %r8932, -67108864;
	shr.u32 	%r7963, %r7962, 2;
	or.b32  	%r7964, %r7961, %r7963;
	shl.b32 	%r7965, %r8931, 2;
	and.b32  	%r7966, %r7965, 64512;
	and.b32  	%r7967, %r8931, 255;
	or.b32  	%r7968, %r7966, %r7967;
	and.b32  	%r7969, %r8931, 49152;
	shr.u32 	%r7970, %r7969, 6;
	or.b32  	%r7971, %r7968, %r7970;
	shl.b32 	%r7972, %r8931, 4;
	and.b32  	%r7973, %r7972, 15728640;
	or.b32  	%r7974, %r7971, %r7973;
	and.b32  	%r7975, %r8931, 15728640;
	shr.u32 	%r7976, %r7975, 4;
	or.b32  	%r7977, %r7974, %r7976;
	shl.b32 	%r7978, %r8931, 6;
	and.b32  	%r7979, %r7978, -1073741824;
	or.b32  	%r7980, %r7977, %r7979;
	and.b32  	%r7981, %r8931, -67108864;
	shr.u32 	%r7982, %r7981, 2;
	or.b32  	%r7983, %r7980, %r7982;
	shl.b32 	%r7984, %r8930, 2;
	and.b32  	%r7985, %r7984, 64512;
	and.b32  	%r7986, %r8930, 255;
	or.b32  	%r7987, %r7985, %r7986;
	and.b32  	%r7988, %r8930, 49152;
	shr.u32 	%r7989, %r7988, 6;
	or.b32  	%r7990, %r7987, %r7989;
	shl.b32 	%r7991, %r8930, 4;
	and.b32  	%r7992, %r7991, 15728640;
	or.b32  	%r7993, %r7990, %r7992;
	and.b32  	%r7994, %r8930, 15728640;
	shr.u32 	%r7995, %r7994, 4;
	or.b32  	%r7996, %r7993, %r7995;
	shl.b32 	%r7997, %r8930, 6;
	and.b32  	%r7998, %r7997, -1073741824;
	or.b32  	%r7999, %r7996, %r7998;
	and.b32  	%r8000, %r8930, -67108864;
	shr.u32 	%r8001, %r8000, 2;
	or.b32  	%r8002, %r7999, %r8001;
	shl.b32 	%r8003, %r8929, 2;
	and.b32  	%r8004, %r8003, 64512;
	and.b32  	%r8005, %r8929, 255;
	or.b32  	%r8006, %r8004, %r8005;
	and.b32  	%r8007, %r8929, 49152;
	shr.u32 	%r8008, %r8007, 6;
	or.b32  	%r8009, %r8006, %r8008;
	shl.b32 	%r8010, %r8929, 4;
	and.b32  	%r8011, %r8010, 15728640;
	or.b32  	%r8012, %r8009, %r8011;
	and.b32  	%r8013, %r8929, 15728640;
	shr.u32 	%r8014, %r8013, 4;
	or.b32  	%r8015, %r8012, %r8014;
	shl.b32 	%r8016, %r8929, 6;
	and.b32  	%r8017, %r8016, -1073741824;
	or.b32  	%r8018, %r8015, %r8017;
	and.b32  	%r8019, %r8929, -67108864;
	shr.u32 	%r8020, %r8019, 2;
	or.b32  	%r8021, %r8018, %r8020;
	shl.b32 	%r8022, %r8928, 2;
	and.b32  	%r8023, %r8022, 64512;
	and.b32  	%r8024, %r8928, 255;
	or.b32  	%r8025, %r8023, %r8024;
	and.b32  	%r8026, %r8928, 49152;
	shr.u32 	%r8027, %r8026, 6;
	or.b32  	%r8028, %r8025, %r8027;
	shl.b32 	%r8029, %r8928, 4;
	and.b32  	%r8030, %r8029, 15728640;
	or.b32  	%r8031, %r8028, %r8030;
	and.b32  	%r8032, %r8928, 15728640;
	shr.u32 	%r8033, %r8032, 4;
	or.b32  	%r8034, %r8031, %r8033;
	shl.b32 	%r8035, %r8928, 6;
	and.b32  	%r8036, %r8035, -1073741824;
	or.b32  	%r8037, %r8034, %r8036;
	and.b32  	%r8038, %r8928, -67108864;
	shr.u32 	%r8039, %r8038, 2;
	or.b32  	%r8040, %r8037, %r8039;
	shl.b32 	%r8041, %r8927, 2;
	and.b32  	%r8042, %r8041, 64512;
	and.b32  	%r8043, %r8927, 255;
	or.b32  	%r8044, %r8042, %r8043;
	and.b32  	%r8045, %r8927, 49152;
	shr.u32 	%r8046, %r8045, 6;
	or.b32  	%r8047, %r8044, %r8046;
	shl.b32 	%r8048, %r8927, 4;
	and.b32  	%r8049, %r8048, 15728640;
	or.b32  	%r8050, %r8047, %r8049;
	and.b32  	%r8051, %r8927, 15728640;
	shr.u32 	%r8052, %r8051, 4;
	or.b32  	%r8053, %r8050, %r8052;
	shl.b32 	%r8054, %r8927, 6;
	and.b32  	%r8055, %r8054, -1073741824;
	or.b32  	%r8056, %r8053, %r8055;
	and.b32  	%r8057, %r8927, -67108864;
	shr.u32 	%r8058, %r8057, 2;
	or.b32  	%r8059, %r8056, %r8058;
	shl.b32 	%r8060, %r8926, 2;
	and.b32  	%r8061, %r8060, 64512;
	and.b32  	%r8062, %r8926, 255;
	or.b32  	%r8063, %r8061, %r8062;
	and.b32  	%r8064, %r8926, 49152;
	shr.u32 	%r8065, %r8064, 6;
	or.b32  	%r8066, %r8063, %r8065;
	shl.b32 	%r8067, %r8926, 4;
	and.b32  	%r8068, %r8067, 15728640;
	or.b32  	%r8069, %r8066, %r8068;
	and.b32  	%r8070, %r8926, 15728640;
	shr.u32 	%r8071, %r8070, 4;
	or.b32  	%r8072, %r8069, %r8071;
	shl.b32 	%r8073, %r8926, 6;
	and.b32  	%r8074, %r8073, -1073741824;
	or.b32  	%r8075, %r8072, %r8074;
	and.b32  	%r8076, %r8926, -67108864;
	shr.u32 	%r8077, %r8076, 2;
	or.b32  	%r8078, %r8075, %r8077;
	xor.b32  	%r8079, %r8002, %r7945;
	xor.b32  	%r8080, %r8021, %r7964;
	not.b32 	%r8081, %r8040;
	not.b32 	%r8082, %r8059;
	not.b32 	%r8083, %r8080;
	xor.b32  	%r8084, %r8083, %r8082;
	not.b32 	%r8085, %r8079;
	xor.b32  	%r8086, %r8085, %r8081;
	xor.b32  	%r8087, %r8021, %r7983;
	xor.b32  	%r8088, %r8087, %r8078;
	xor.b32  	%r8089, %r8002, %r7964;
	xor.b32  	%r8090, %r8089, %r8059;
	xor.b32  	%r8091, %r7983, %r7945;
	xor.b32  	%r8092, %r8091, %r8040;
	xor.b32  	%r8093, %r8083, %r8078;
	xor.b32  	%r8094, %r8085, %r8082;
	xor.b32  	%r8095, %r7983, %r8081;
	xor.b32  	%r8096, %r8095, %r8078;
	xor.b32  	%r8097, %r8093, %r8090;
	xor.b32  	%r8098, %r8085, %r8083;
	xor.b32  	%r8099, %r8090, %r8084;
	xor.b32  	%r8100, %r8078, %r8082;
	xor.b32  	%r8101, %r8088, %r8086;
	xor.b32  	%r8102, %r8096, %r8101;
	xor.b32  	%r8103, %r8102, %r8090;
	xor.b32  	%r8104, %r8098, %r8097;
	xor.b32  	%r8105, %r8102, %r8084;
	xor.b32  	%r8106, %r8102, %r8094;
	xor.b32  	%r8107, %r8106, %r8100;
	xor.b32  	%r8108, %r8104, %r8092;
	xor.b32  	%r8109, %r8108, %r8093;
	xor.b32  	%r8110, %r8108, %r8086;
	xor.b32  	%r8111, %r8109, %r8096;
	xor.b32  	%r8112, %r8109, %r8101;
	xor.b32  	%r8113, %r8110, %r8099;
	xor.b32  	%r8114, %r8113, %r8096;
	xor.b32  	%r8115, %r8112, %r8113;
	xor.b32  	%r8116, %r8113, %r8101;
	and.b32  	%r8117, %r8109, %r8104;
	and.b32  	%r8118, %r8111, %r8107;
	and.b32  	%r8119, %r8103, %r8096;
	and.b32  	%r8120, %r8116, %r8098;
	and.b32  	%r8121, %r8106, %r8102;
	and.b32  	%r8122, %r8114, %r8105;
	and.b32  	%r8123, %r8113, %r8099;
	and.b32  	%r8124, %r8115, %r8097;
	xor.b32  	%r8125, %r8124, %r8123;
	and.b32  	%r8126, %r8112, %r8100;
	xor.b32  	%r8127, %r8126, %r8123;
	xor.b32  	%r8128, %r8117, %r8110;
	xor.b32  	%r8129, %r8128, %r8118;
	xor.b32  	%r8130, %r8129, %r8125;
	xor.b32  	%r8131, %r8119, %r8100;
	xor.b32  	%r8132, %r8131, %r8112;
	xor.b32  	%r8133, %r8132, %r8117;
	xor.b32  	%r8134, %r8133, %r8127;
	xor.b32  	%r8135, %r8121, %r8098;
	xor.b32  	%r8136, %r8135, %r8116;
	xor.b32  	%r8137, %r8136, %r8120;
	xor.b32  	%r8138, %r8137, %r8125;
	xor.b32  	%r8139, %r8116, %r8084;
	xor.b32  	%r8140, %r8139, %r8120;
	xor.b32  	%r8141, %r8140, %r8122;
	xor.b32  	%r8142, %r8141, %r8127;
	xor.b32  	%r8143, %r8130, %r8134;
	and.b32  	%r8144, %r8130, %r8138;
	xor.b32  	%r8145, %r8144, %r8142;
	and.b32  	%r8146, %r8145, %r8143;
	xor.b32  	%r8147, %r8146, %r8134;
	xor.b32  	%r8148, %r8138, %r8142;
	xor.b32  	%r8149, %r8144, %r8134;
	and.b32  	%r8150, %r8149, %r8148;
	xor.b32  	%r8151, %r8150, %r8142;
	xor.b32  	%r8152, %r8151, %r8138;
	xor.b32  	%r8153, %r8150, %r8144;
	and.b32  	%r8154, %r8153, %r8142;
	xor.b32  	%r8155, %r8152, %r8154;
	xor.b32  	%r8156, %r8154, %r8145;
	and.b32  	%r8157, %r8156, %r8147;
	xor.b32  	%r8158, %r8157, %r8143;
	xor.b32  	%r8159, %r8158, %r8155;
	xor.b32  	%r8160, %r8147, %r8151;
	xor.b32  	%r8161, %r8158, %r8147;
	xor.b32  	%r8162, %r8154, %r8138;
	xor.b32  	%r8163, %r8159, %r8160;
	and.b32  	%r8164, %r8162, %r8109;
	and.b32  	%r8165, %r8155, %r8111;
	and.b32  	%r8166, %r8151, %r8096;
	and.b32  	%r8167, %r8161, %r8116;
	and.b32  	%r8168, %r8158, %r8102;
	and.b32  	%r8169, %r8147, %r8114;
	and.b32  	%r8170, %r8160, %r8113;
	and.b32  	%r8171, %r8163, %r8115;
	and.b32  	%r8172, %r8159, %r8112;
	and.b32  	%r8173, %r8162, %r8104;
	and.b32  	%r8174, %r8155, %r8107;
	and.b32  	%r8175, %r8151, %r8103;
	and.b32  	%r8176, %r8161, %r8098;
	and.b32  	%r8177, %r8158, %r8106;
	and.b32  	%r8178, %r8147, %r8105;
	and.b32  	%r8179, %r8160, %r8099;
	and.b32  	%r8180, %r8163, %r8097;
	and.b32  	%r8181, %r8159, %r8100;
	xor.b32  	%r8182, %r8180, %r8179;
	xor.b32  	%r8183, %r8174, %r8175;
	xor.b32  	%r8184, %r8177, %r8169;
	xor.b32  	%r8185, %r8173, %r8174;
	xor.b32  	%r8186, %r8176, %r8166;
	xor.b32  	%r8187, %r8166, %r8169;
	xor.b32  	%r8188, %r8171, %r8172;
	xor.b32  	%r8189, %r8167, %r8164;
	xor.b32  	%r8190, %r8176, %r8184;
	xor.b32  	%r8191, %r8186, %r8189;
	xor.b32  	%r8192, %r8182, %r8168;
	xor.b32  	%r8193, %r8167, %r8170;
	xor.b32  	%r8194, %r8193, %r8171;
	xor.b32  	%r8195, %r8182, %r8191;
	xor.b32  	%r8196, %r8191, %r8178;
	xor.b32  	%r8197, %r8188, %r8192;
	xor.b32  	%r8198, %r8185, %r8192;
	xor.b32  	%r8199, %r8194, %r8168;
	xor.b32  	%r8200, %r8196, %r8197;
	xor.b32  	%r8201, %r8198, %r8165;
	xor.b32  	%r8202, %r8198, %r8194;
	xor.b32  	%r8203, %r8201, %r8189;
	xor.b32  	%r8204, %r8197, %r8190;
	xor.b32  	%r8205, %r8203, %r8199;
	xor.b32  	%r8206, %r8204, %r8205;
	xor.b32  	%r8207, %r8183, %r8200;
	xor.b32  	%r8208, %r8180, %r8181;
	xor.b32  	%r8209, %r8208, %r8199;
	xor.b32  	%r8210, %r8195, %r8184;
	xor.b32  	%r8211, %r8209, %r8200;
	xor.b32  	%r8212, %r8210, %r8211;
	xor.b32  	%r8213, %r8212, %r8207;
	xor.b32  	%r8214, %r8187, %r8201;
	xor.b32  	%r8215, %r8206, %r8214;
	xor.b32  	%r8216, %r8199, %r8204;
	xor.b32  	%r8217, %r8212, %r8214;
	xor.b32  	%r8218, %r8202, %r8203;
	xor.b32  	%r8219, %r8218, %r8207;
	xor.b32  	%r8220, %r8213, %r161;
	xor.b32  	%r8221, %r8218, %r8204;
	xor.b32  	%r8222, %r8210, %r8205;
	xor.b32  	%r8223, %r8222, %r8214;
	xor.b32  	%r8224, %r8202, %r8211;
	xor.b32  	%r8225, %r8224, %r8207;
	xor.b32  	%r8226, %r8225, %r158;
	xor.b32  	%r8227, %r8223, %r159;
	xor.b32  	%r8228, %r8221, %r160;
	xor.b32  	%r8229, %r8215, %r162;
	xor.b32  	%r8230, %r8219, %r163;
	xor.b32  	%r8231, %r8217, %r164;
	xor.b32  	%r8232, %r8216, %r165;
	and.b32  	%r8233, %r8226, 1431655765;
	shl.b32 	%r8234, %r8227, 1;
	and.b32  	%r8235, %r8234, -1431655766;
	or.b32  	%r8236, %r8235, %r8233;
	and.b32  	%r8237, %r8228, 1431655765;
	shl.b32 	%r8238, %r8220, 1;
	and.b32  	%r8239, %r8238, -1431655766;
	or.b32  	%r8240, %r8239, %r8237;
	and.b32  	%r8241, %r8229, 1431655765;
	shl.b32 	%r8242, %r8230, 1;
	and.b32  	%r8243, %r8242, -1431655766;
	or.b32  	%r8244, %r8243, %r8241;
	and.b32  	%r8245, %r8231, 1431655765;
	shl.b32 	%r8246, %r8232, 1;
	and.b32  	%r8247, %r8246, -1431655766;
	or.b32  	%r8248, %r8247, %r8245;
	and.b32  	%r8249, %r8236, 858993459;
	shl.b32 	%r8250, %r8240, 2;
	and.b32  	%r8251, %r8250, -858993460;
	or.b32  	%r8252, %r8251, %r8249;
	and.b32  	%r8253, %r8236, -858993460;
	shr.u32 	%r8254, %r8253, 2;
	and.b32  	%r8255, %r8240, -858993460;
	or.b32  	%r207, %r8254, %r8255;
	and.b32  	%r8256, %r8244, 858993459;
	shl.b32 	%r8257, %r8248, 2;
	and.b32  	%r8258, %r8257, -858993460;
	or.b32  	%r8259, %r8258, %r8256;
	and.b32  	%r8260, %r8244, -858993460;
	shr.u32 	%r8261, %r8260, 2;
	and.b32  	%r8262, %r8248, -858993460;
	or.b32  	%r208, %r8261, %r8262;
	and.b32  	%r8263, %r8252, 252645135;
	shl.b32 	%r8264, %r8259, 4;
	and.b32  	%r8265, %r8264, -252645136;
	or.b32  	%r8266, %r8265, %r8263;
	and.b32  	%r8267, %r8252, -252645136;
	shr.u32 	%r8268, %r8267, 4;
	and.b32  	%r8269, %r8259, -252645136;
	or.b32  	%r209, %r8268, %r8269;
	shl.b32 	%r8270, %r7922, 4;
	and.b32  	%r8271, %r8270, -252645136;
	and.b32  	%r8272, %r7914, 252645135;
	or.b32  	%r8273, %r8271, %r8272;
	shf.l.wrap.b32 	%r8274, %r8273, %r8273, 16;
	shl.b32 	%r8275, %r8274, 8;
	and.b32  	%r8276, %r8275, -16711936;
	shr.u32 	%r8277, %r8274, 8;
	and.b32  	%r8278, %r8277, 16711935;
	or.b32  	%r8279, %r8276, %r8278;
	shl.b32 	%r8280, %r7926, 4;
	and.b32  	%r8281, %r8280, -252645136;
	and.b32  	%r8282, %r7918, 252645135;
	or.b32  	%r8283, %r8281, %r8282;
	shf.l.wrap.b32 	%r8284, %r8283, %r8283, 16;
	shl.b32 	%r8285, %r8284, 8;
	and.b32  	%r8286, %r8285, -16711936;
	shr.u32 	%r8287, %r8284, 8;
	and.b32  	%r8288, %r8287, 16711935;
	or.b32  	%r8289, %r8286, %r8288;
	and.b32  	%r8290, %r7922, -252645136;
	and.b32  	%r8291, %r7914, -252645136;
	shr.u32 	%r8292, %r8291, 4;
	or.b32  	%r8293, %r8292, %r8290;
	shf.l.wrap.b32 	%r8294, %r8293, %r8293, 16;
	shl.b32 	%r8295, %r8294, 8;
	and.b32  	%r8296, %r8295, -16711936;
	shr.u32 	%r8297, %r8294, 8;
	and.b32  	%r8298, %r8297, 16711935;
	or.b32  	%r8299, %r8296, %r8298;
	and.b32  	%r8300, %r7926, -252645136;
	and.b32  	%r8301, %r7918, -252645136;
	shr.u32 	%r8302, %r8301, 4;
	or.b32  	%r8303, %r8302, %r8300;
	shf.l.wrap.b32 	%r8304, %r8303, %r8303, 16;
	shl.b32 	%r8305, %r8304, 8;
	and.b32  	%r8306, %r8305, -16711936;
	shr.u32 	%r8307, %r8304, 8;
	and.b32  	%r8308, %r8307, 16711935;
	or.b32  	%r8309, %r8306, %r8308;
	add.s32 	%r7599, %r9, %r8279;
	shf.l.wrap.b32 	%r8310, %r7599, %r7599, 5;
	add.s32 	%r8311, %r2, %r8289;
	add.s32 	%r7603, %r8311, %r8310;
	shf.l.wrap.b32 	%r8312, %r7603, %r7603, 5;
	// begin inline asm
	lop3.b32 %r7598, %r7599, %r8876, %r8878, 202;
	// end inline asm
	add.s32 	%r8313, %r7598, %r8299;
	add.s32 	%r8314, %r8313, %r8312;
	add.s32 	%r7607, %r8314, -214083945;
	shf.l.wrap.b32 	%r7609, %r7599, %r7599, 30;
	shf.l.wrap.b32 	%r8315, %r7607, %r7607, 5;
	// begin inline asm
	lop3.b32 %r7602, %r7603, %r7609, %r8876, 202;
	// end inline asm
	add.s32 	%r8316, %r8878, %r7602;
	add.s32 	%r8317, %r8316, %r8309;
	add.s32 	%r8318, %r8317, %r8315;
	add.s32 	%r7611, %r8318, 1518500249;
	shf.l.wrap.b32 	%r7613, %r7603, %r7603, 30;
	shf.l.wrap.b32 	%r8319, %r7611, %r7611, 5;
	// begin inline asm
	lop3.b32 %r7606, %r7607, %r7613, %r7609, 202;
	// end inline asm
	add.s32 	%r8320, %r8876, %r7606;
	add.s32 	%r8321, %r8320, 1518500249;
	xor.b32  	%r8322, %r8321, -2147483648;
	add.s32 	%r7615, %r8322, %r8319;
	shf.l.wrap.b32 	%r7617, %r7607, %r7607, 30;
	shf.l.wrap.b32 	%r8323, %r7615, %r7615, 5;
	// begin inline asm
	lop3.b32 %r7610, %r7611, %r7617, %r7613, 202;
	// end inline asm
	add.s32 	%r8324, %r7609, %r7610;
	add.s32 	%r8325, %r8324, %r8323;
	add.s32 	%r7619, %r8325, 1518500249;
	shf.l.wrap.b32 	%r7621, %r7611, %r7611, 30;
	shf.l.wrap.b32 	%r8326, %r7619, %r7619, 5;
	// begin inline asm
	lop3.b32 %r7614, %r7615, %r7621, %r7617, 202;
	// end inline asm
	add.s32 	%r8327, %r7613, %r7614;
	add.s32 	%r8328, %r8327, %r8326;
	add.s32 	%r7623, %r8328, 1518500249;
	shf.l.wrap.b32 	%r7625, %r7615, %r7615, 30;
	shf.l.wrap.b32 	%r8329, %r7623, %r7623, 5;
	// begin inline asm
	lop3.b32 %r7618, %r7619, %r7625, %r7621, 202;
	// end inline asm
	add.s32 	%r8330, %r7618, %r7617;
	add.s32 	%r8331, %r8330, %r8329;
	add.s32 	%r7627, %r8331, 1518500249;
	shf.l.wrap.b32 	%r7629, %r7619, %r7619, 30;
	shf.l.wrap.b32 	%r8332, %r7627, %r7627, 5;
	// begin inline asm
	lop3.b32 %r7622, %r7623, %r7629, %r7625, 202;
	// end inline asm
	add.s32 	%r8333, %r7622, %r7621;
	add.s32 	%r8334, %r8333, %r8332;
	add.s32 	%r7631, %r8334, 1518500249;
	shf.l.wrap.b32 	%r7633, %r7623, %r7623, 30;
	shf.l.wrap.b32 	%r8335, %r7631, %r7631, 5;
	// begin inline asm
	lop3.b32 %r7626, %r7627, %r7633, %r7629, 202;
	// end inline asm
	add.s32 	%r8336, %r7626, %r7625;
	add.s32 	%r8337, %r8336, %r8335;
	add.s32 	%r7635, %r8337, 1518500249;
	shf.l.wrap.b32 	%r7637, %r7627, %r7627, 30;
	shf.l.wrap.b32 	%r8338, %r7635, %r7635, 5;
	// begin inline asm
	lop3.b32 %r7630, %r7631, %r7637, %r7633, 202;
	// end inline asm
	add.s32 	%r8339, %r7630, %r7629;
	add.s32 	%r8340, %r8339, %r8338;
	add.s32 	%r7639, %r8340, 1518500249;
	shf.l.wrap.b32 	%r7641, %r7631, %r7631, 30;
	shf.l.wrap.b32 	%r8341, %r7639, %r7639, 5;
	// begin inline asm
	lop3.b32 %r7634, %r7635, %r7641, %r7637, 202;
	// end inline asm
	add.s32 	%r8342, %r7634, %r7633;
	add.s32 	%r8343, %r8342, %r8341;
	add.s32 	%r7643, %r8343, 1518500249;
	shf.l.wrap.b32 	%r7645, %r7635, %r7635, 30;
	shf.l.wrap.b32 	%r8344, %r7643, %r7643, 5;
	// begin inline asm
	lop3.b32 %r7638, %r7639, %r7645, %r7641, 202;
	// end inline asm
	add.s32 	%r8345, %r7638, %r7637;
	add.s32 	%r8346, %r8345, %r8344;
	add.s32 	%r7647, %r8346, 1518500249;
	shf.l.wrap.b32 	%r7649, %r7639, %r7639, 30;
	shf.l.wrap.b32 	%r8347, %r7647, %r7647, 5;
	// begin inline asm
	lop3.b32 %r7642, %r7643, %r7649, %r7645, 202;
	// end inline asm
	add.s32 	%r8348, %r7642, %r7641;
	add.s32 	%r8349, %r8348, %r8347;
	add.s32 	%r7651, %r8349, 1518500249;
	shf.l.wrap.b32 	%r7653, %r7643, %r7643, 30;
	shf.l.wrap.b32 	%r8350, %r7651, %r7651, 5;
	// begin inline asm
	lop3.b32 %r7646, %r7647, %r7653, %r7649, 202;
	// end inline asm
	add.s32 	%r8351, %r7646, %r7645;
	add.s32 	%r8352, %r8351, %r8350;
	add.s32 	%r7655, %r8352, 1518500249;
	shf.l.wrap.b32 	%r7657, %r7647, %r7647, 30;
	shf.l.wrap.b32 	%r8353, %r7655, %r7655, 5;
	// begin inline asm
	lop3.b32 %r7650, %r7651, %r7657, %r7653, 202;
	// end inline asm
	add.s32 	%r8354, %r7650, %r7649;
	add.s32 	%r8355, %r8354, %r8353;
	add.s32 	%r7659, %r8355, 1518500377;
	shf.l.wrap.b32 	%r7661, %r7651, %r7651, 30;
	shf.l.wrap.b32 	%r8356, %r7659, %r7659, 5;
	// begin inline asm
	lop3.b32 %r7654, %r7655, %r7661, %r7657, 202;
	// end inline asm
	xor.b32  	%r8357, %r8279, %r8299;
	shf.l.wrap.b32 	%r8358, %r8357, %r8357, 1;
	add.s32 	%r8359, %r7654, %r8358;
	add.s32 	%r8360, %r8359, %r7653;
	add.s32 	%r8361, %r8360, %r8356;
	add.s32 	%r7663, %r8361, 1518500249;
	shf.l.wrap.b32 	%r7665, %r7655, %r7655, 30;
	shf.l.wrap.b32 	%r8362, %r7663, %r7663, 5;
	// begin inline asm
	lop3.b32 %r7658, %r7659, %r7665, %r7661, 202;
	// end inline asm
	xor.b32  	%r8363, %r8289, %r8309;
	shf.l.wrap.b32 	%r8364, %r8363, %r8363, 1;
	add.s32 	%r8365, %r7658, %r8364;
	add.s32 	%r8366, %r8365, %r7657;
	add.s32 	%r8367, %r8366, %r8362;
	add.s32 	%r7667, %r8367, 1518500249;
	shf.l.wrap.b32 	%r7669, %r7659, %r7659, 30;
	shf.l.wrap.b32 	%r8368, %r7667, %r7667, 5;
	// begin inline asm
	lop3.b32 %r7662, %r7663, %r7669, %r7665, 202;
	// end inline asm
	xor.b32  	%r8369, %r8299, -2147483520;
	shf.l.wrap.b32 	%r8370, %r8369, %r8369, 1;
	add.s32 	%r8371, %r7662, %r8370;
	add.s32 	%r8372, %r8371, %r7661;
	add.s32 	%r8373, %r8372, %r8368;
	add.s32 	%r7671, %r8373, 1518500249;
	shf.l.wrap.b32 	%r7673, %r7663, %r7663, 30;
	shf.l.wrap.b32 	%r8374, %r7671, %r7671, 5;
	// begin inline asm
	lop3.b32 %r7666, %r7667, %r7673, %r7669, 202;
	// end inline asm
	xor.b32  	%r8375, %r8358, %r8309;
	shf.l.wrap.b32 	%r8376, %r8375, %r8375, 1;
	add.s32 	%r8377, %r7666, %r8376;
	add.s32 	%r8378, %r8377, %r7665;
	add.s32 	%r8379, %r8378, %r8374;
	add.s32 	%r7675, %r8379, 1518500249;
	shf.l.wrap.b32 	%r7677, %r7667, %r7667, 30;
	shf.l.wrap.b32 	%r8380, %r7675, %r7675, 5;
	// begin inline asm
	lop3.b32 %r7670, %r7671, %r7677, %r7673, 150;
	// end inline asm
	xor.b32  	%r8381, %r8364, -2147483648;
	shf.l.wrap.b32 	%r8382, %r8381, %r8381, 1;
	add.s32 	%r8383, %r7670, %r8382;
	add.s32 	%r8384, %r8383, %r7669;
	add.s32 	%r8385, %r8384, %r8380;
	add.s32 	%r7679, %r8385, 1859775393;
	shf.l.wrap.b32 	%r7681, %r7671, %r7671, 30;
	shf.l.wrap.b32 	%r8386, %r7679, %r7679, 5;
	// begin inline asm
	lop3.b32 %r7674, %r7675, %r7681, %r7677, 150;
	// end inline asm
	shf.l.wrap.b32 	%r8387, %r8370, %r8370, 1;
	add.s32 	%r8388, %r7674, %r8387;
	add.s32 	%r8389, %r8388, %r7673;
	add.s32 	%r8390, %r8389, %r8386;
	add.s32 	%r7683, %r8390, 1859775393;
	shf.l.wrap.b32 	%r7685, %r7675, %r7675, 30;
	shf.l.wrap.b32 	%r8391, %r7683, %r7683, 5;
	// begin inline asm
	lop3.b32 %r7678, %r7679, %r7685, %r7681, 150;
	// end inline asm
	shf.l.wrap.b32 	%r8392, %r8376, %r8376, 1;
	add.s32 	%r8393, %r7678, %r8392;
	add.s32 	%r8394, %r8393, %r7677;
	add.s32 	%r8395, %r8394, %r8391;
	add.s32 	%r7687, %r8395, 1859775393;
	shf.l.wrap.b32 	%r7689, %r7679, %r7679, 30;
	shf.l.wrap.b32 	%r8396, %r7687, %r7687, 5;
	// begin inline asm
	lop3.b32 %r7682, %r7683, %r7689, %r7685, 150;
	// end inline asm
	xor.b32  	%r8397, %r8382, 128;
	shf.l.wrap.b32 	%r8398, %r8397, %r8397, 1;
	add.s32 	%r8399, %r7682, %r8398;
	add.s32 	%r8400, %r8399, %r7681;
	add.s32 	%r8401, %r8400, %r8396;
	add.s32 	%r7691, %r8401, 1859775393;
	shf.l.wrap.b32 	%r7693, %r7683, %r7683, 30;
	shf.l.wrap.b32 	%r8402, %r7691, %r7691, 5;
	// begin inline asm
	lop3.b32 %r7686, %r7687, %r7693, %r7689, 150;
	// end inline asm
	xor.b32  	%r8403, %r8358, %r8387;
	shf.l.wrap.b32 	%r8404, %r8403, %r8403, 1;
	add.s32 	%r8405, %r7686, %r8404;
	add.s32 	%r8406, %r8405, %r7685;
	add.s32 	%r8407, %r8406, %r8402;
	add.s32 	%r7695, %r8407, 1859775393;
	shf.l.wrap.b32 	%r7697, %r7687, %r7687, 30;
	shf.l.wrap.b32 	%r8408, %r7695, %r7695, 5;
	// begin inline asm
	lop3.b32 %r7690, %r7691, %r7697, %r7693, 150;
	// end inline asm
	xor.b32  	%r8409, %r8364, %r8392;
	shf.l.wrap.b32 	%r8410, %r8409, %r8409, 1;
	add.s32 	%r8411, %r7690, %r8410;
	add.s32 	%r8412, %r8411, %r7689;
	add.s32 	%r8413, %r8412, %r8408;
	add.s32 	%r7699, %r8413, 1859775393;
	shf.l.wrap.b32 	%r7701, %r7691, %r7691, 30;
	shf.l.wrap.b32 	%r8414, %r7699, %r7699, 5;
	// begin inline asm
	lop3.b32 %r7694, %r7695, %r7701, %r7697, 150;
	// end inline asm
	xor.b32  	%r8415, %r8370, %r8398;
	shf.l.wrap.b32 	%r8416, %r8415, %r8415, 1;
	add.s32 	%r8417, %r7694, %r8416;
	add.s32 	%r8418, %r8417, %r7693;
	add.s32 	%r8419, %r8418, %r8414;
	add.s32 	%r7703, %r8419, 1859775393;
	shf.l.wrap.b32 	%r7705, %r7695, %r7695, 30;
	shf.l.wrap.b32 	%r8420, %r7703, %r7703, 5;
	// begin inline asm
	lop3.b32 %r7698, %r7699, %r7705, %r7701, 150;
	// end inline asm
	xor.b32  	%r8421, %r8376, %r8404;
	shf.l.wrap.b32 	%r8422, %r8421, %r8421, 1;
	add.s32 	%r8423, %r7698, %r8422;
	add.s32 	%r8424, %r8423, %r7697;
	add.s32 	%r8425, %r8424, %r8420;
	add.s32 	%r7707, %r8425, 1859775393;
	shf.l.wrap.b32 	%r7709, %r7699, %r7699, 30;
	shf.l.wrap.b32 	%r8426, %r7707, %r7707, 5;
	// begin inline asm
	lop3.b32 %r7702, %r7703, %r7709, %r7705, 150;
	// end inline asm
	xor.b32  	%r8427, %r8382, %r8410;
	shf.l.wrap.b32 	%r8428, %r8427, %r8427, 1;
	add.s32 	%r8429, %r7702, %r8428;
	add.s32 	%r8430, %r8429, %r7701;
	add.s32 	%r8431, %r8430, %r8426;
	add.s32 	%r7711, %r8431, 1859775393;
	shf.l.wrap.b32 	%r7713, %r7703, %r7703, 30;
	shf.l.wrap.b32 	%r8432, %r7711, %r7711, 5;
	// begin inline asm
	lop3.b32 %r7706, %r7707, %r7713, %r7709, 150;
	// end inline asm
	xor.b32  	%r8433, %r8387, %r8416;
	xor.b32  	%r8434, %r8433, 128;
	shf.l.wrap.b32 	%r8435, %r8434, %r8434, 1;
	add.s32 	%r8436, %r7706, %r8435;
	add.s32 	%r8437, %r8436, %r7705;
	add.s32 	%r8438, %r8437, %r8432;
	add.s32 	%r7715, %r8438, 1859775393;
	shf.l.wrap.b32 	%r7717, %r7707, %r7707, 30;
	shf.l.wrap.b32 	%r8439, %r7715, %r7715, 5;
	// begin inline asm
	lop3.b32 %r7710, %r7711, %r7717, %r7713, 150;
	// end inline asm
	xor.b32  	%r8440, %r8392, %r8422;
	xor.b32  	%r8441, %r8440, %r8358;
	shf.l.wrap.b32 	%r8442, %r8441, %r8441, 1;
	add.s32 	%r8443, %r7710, %r8442;
	add.s32 	%r8444, %r8443, %r7709;
	add.s32 	%r8445, %r8444, %r8439;
	add.s32 	%r7719, %r8445, 1859775393;
	shf.l.wrap.b32 	%r7721, %r7711, %r7711, 30;
	shf.l.wrap.b32 	%r8446, %r7719, %r7719, 5;
	// begin inline asm
	lop3.b32 %r7714, %r7715, %r7721, %r7717, 150;
	// end inline asm
	xor.b32  	%r8447, %r8398, %r8428;
	xor.b32  	%r8448, %r8447, %r8364;
	xor.b32  	%r8449, %r8448, 128;
	shf.l.wrap.b32 	%r8450, %r8449, %r8449, 1;
	add.s32 	%r8451, %r7714, %r8450;
	add.s32 	%r8452, %r8451, %r7713;
	add.s32 	%r8453, %r8452, %r8446;
	add.s32 	%r7723, %r8453, 1859775393;
	shf.l.wrap.b32 	%r7725, %r7715, %r7715, 30;
	shf.l.wrap.b32 	%r8454, %r7723, %r7723, 5;
	// begin inline asm
	lop3.b32 %r7718, %r7719, %r7725, %r7721, 150;
	// end inline asm
	xor.b32  	%r8455, %r8404, %r8435;
	xor.b32  	%r8456, %r8455, %r8370;
	xor.b32  	%r8457, %r8456, %r8358;
	shf.l.wrap.b32 	%r8458, %r8457, %r8457, 1;
	add.s32 	%r8459, %r7718, %r8458;
	add.s32 	%r8460, %r8459, %r7717;
	add.s32 	%r8461, %r8460, %r8454;
	add.s32 	%r7727, %r8461, 1859775393;
	shf.l.wrap.b32 	%r7729, %r7719, %r7719, 30;
	shf.l.wrap.b32 	%r8462, %r7727, %r7727, 5;
	// begin inline asm
	lop3.b32 %r7722, %r7723, %r7729, %r7725, 150;
	// end inline asm
	xor.b32  	%r8463, %r8410, %r8442;
	xor.b32  	%r8464, %r8463, %r8376;
	xor.b32  	%r8465, %r8464, %r8364;
	shf.l.wrap.b32 	%r8466, %r8465, %r8465, 1;
	add.s32 	%r8467, %r7722, %r8466;
	add.s32 	%r8468, %r8467, %r7721;
	add.s32 	%r8469, %r8468, %r8462;
	add.s32 	%r7731, %r8469, 1859775393;
	shf.l.wrap.b32 	%r7733, %r7723, %r7723, 30;
	shf.l.wrap.b32 	%r8470, %r7731, %r7731, 5;
	// begin inline asm
	lop3.b32 %r7726, %r7727, %r7733, %r7729, 150;
	// end inline asm
	xor.b32  	%r8471, %r8416, %r8450;
	xor.b32  	%r8472, %r8471, %r8382;
	xor.b32  	%r8473, %r8472, %r8370;
	shf.l.wrap.b32 	%r8474, %r8473, %r8473, 1;
	add.s32 	%r8475, %r7726, %r8474;
	add.s32 	%r8476, %r8475, %r7725;
	add.s32 	%r8477, %r8476, %r8470;
	add.s32 	%r7735, %r8477, 1859775393;
	shf.l.wrap.b32 	%r7737, %r7727, %r7727, 30;
	shf.l.wrap.b32 	%r8478, %r7735, %r7735, 5;
	// begin inline asm
	lop3.b32 %r7730, %r7731, %r7737, %r7733, 150;
	// end inline asm
	xor.b32  	%r8479, %r8422, %r8458;
	xor.b32  	%r8480, %r8479, %r8387;
	xor.b32  	%r8481, %r8480, %r8376;
	shf.l.wrap.b32 	%r8482, %r8481, %r8481, 1;
	add.s32 	%r8483, %r7730, %r8482;
	add.s32 	%r8484, %r8483, %r7729;
	add.s32 	%r8485, %r8484, %r8478;
	add.s32 	%r7739, %r8485, 1859775393;
	shf.l.wrap.b32 	%r7741, %r7731, %r7731, 30;
	shf.l.wrap.b32 	%r8486, %r7739, %r7739, 5;
	// begin inline asm
	lop3.b32 %r7734, %r7735, %r7741, %r7737, 150;
	// end inline asm
	xor.b32  	%r8487, %r8428, %r8466;
	xor.b32  	%r8488, %r8487, %r8392;
	xor.b32  	%r8489, %r8488, %r8382;
	shf.l.wrap.b32 	%r8490, %r8489, %r8489, 1;
	add.s32 	%r8491, %r7734, %r8490;
	add.s32 	%r8492, %r8491, %r7733;
	add.s32 	%r8493, %r8492, %r8486;
	add.s32 	%r7743, %r8493, 1859775393;
	shf.l.wrap.b32 	%r7745, %r7735, %r7735, 30;
	shf.l.wrap.b32 	%r8494, %r7743, %r7743, 5;
	// begin inline asm
	lop3.b32 %r7738, %r7739, %r7745, %r7741, 150;
	// end inline asm
	xor.b32  	%r8495, %r8435, %r8474;
	xor.b32  	%r8496, %r8495, %r8398;
	xor.b32  	%r8497, %r8496, %r8387;
	shf.l.wrap.b32 	%r8498, %r8497, %r8497, 1;
	add.s32 	%r8499, %r7738, %r8498;
	add.s32 	%r8500, %r8499, %r7737;
	add.s32 	%r8501, %r8500, %r8494;
	add.s32 	%r7747, %r8501, 1859775393;
	shf.l.wrap.b32 	%r7749, %r7739, %r7739, 30;
	shf.l.wrap.b32 	%r8502, %r7747, %r7747, 5;
	// begin inline asm
	lop3.b32 %r7742, %r7743, %r7749, %r7745, 150;
	// end inline asm
	xor.b32  	%r8503, %r8442, %r8482;
	xor.b32  	%r8504, %r8503, %r8404;
	xor.b32  	%r8505, %r8504, %r8392;
	shf.l.wrap.b32 	%r8506, %r8505, %r8505, 1;
	add.s32 	%r8507, %r7742, %r8506;
	add.s32 	%r8508, %r8507, %r7741;
	add.s32 	%r8509, %r8508, %r8502;
	add.s32 	%r7751, %r8509, 1859775393;
	shf.l.wrap.b32 	%r7753, %r7743, %r7743, 30;
	shf.l.wrap.b32 	%r8510, %r7751, %r7751, 5;
	// begin inline asm
	lop3.b32 %r7746, %r7747, %r7753, %r7749, 150;
	// end inline asm
	xor.b32  	%r8511, %r8450, %r8490;
	xor.b32  	%r8512, %r8511, %r8410;
	xor.b32  	%r8513, %r8512, %r8398;
	shf.l.wrap.b32 	%r8514, %r8513, %r8513, 1;
	add.s32 	%r8515, %r7746, %r8514;
	add.s32 	%r8516, %r8515, %r7745;
	add.s32 	%r8517, %r8516, %r8510;
	add.s32 	%r7755, %r8517, 1859775393;
	shf.l.wrap.b32 	%r7757, %r7747, %r7747, 30;
	shf.l.wrap.b32 	%r8518, %r7755, %r7755, 5;
	// begin inline asm
	lop3.b32 %r7750, %r7751, %r7757, %r7753, 232;
	// end inline asm
	xor.b32  	%r8519, %r8458, %r8498;
	xor.b32  	%r8520, %r8519, %r8416;
	xor.b32  	%r8521, %r8520, %r8404;
	shf.l.wrap.b32 	%r8522, %r8521, %r8521, 1;
	add.s32 	%r8523, %r7750, %r8522;
	add.s32 	%r8524, %r8523, %r7749;
	add.s32 	%r8525, %r8524, %r8518;
	add.s32 	%r7759, %r8525, -1894007588;
	shf.l.wrap.b32 	%r7761, %r7751, %r7751, 30;
	shf.l.wrap.b32 	%r8526, %r7759, %r7759, 5;
	// begin inline asm
	lop3.b32 %r7754, %r7755, %r7761, %r7757, 232;
	// end inline asm
	xor.b32  	%r8527, %r8466, %r8506;
	xor.b32  	%r8528, %r8527, %r8422;
	xor.b32  	%r8529, %r8528, %r8410;
	shf.l.wrap.b32 	%r8530, %r8529, %r8529, 1;
	add.s32 	%r8531, %r7754, %r8530;
	add.s32 	%r8532, %r8531, %r7753;
	add.s32 	%r8533, %r8532, %r8526;
	add.s32 	%r7763, %r8533, -1894007588;
	shf.l.wrap.b32 	%r7765, %r7755, %r7755, 30;
	shf.l.wrap.b32 	%r8534, %r7763, %r7763, 5;
	// begin inline asm
	lop3.b32 %r7758, %r7759, %r7765, %r7761, 232;
	// end inline asm
	xor.b32  	%r8535, %r8474, %r8514;
	xor.b32  	%r8536, %r8535, %r8428;
	xor.b32  	%r8537, %r8536, %r8416;
	shf.l.wrap.b32 	%r8538, %r8537, %r8537, 1;
	add.s32 	%r8539, %r7758, %r8538;
	add.s32 	%r8540, %r8539, %r7757;
	add.s32 	%r8541, %r8540, %r8534;
	add.s32 	%r7767, %r8541, -1894007588;
	shf.l.wrap.b32 	%r7769, %r7759, %r7759, 30;
	shf.l.wrap.b32 	%r8542, %r7767, %r7767, 5;
	// begin inline asm
	lop3.b32 %r7762, %r7763, %r7769, %r7765, 232;
	// end inline asm
	xor.b32  	%r8543, %r8482, %r8522;
	xor.b32  	%r8544, %r8543, %r8435;
	xor.b32  	%r8545, %r8544, %r8422;
	shf.l.wrap.b32 	%r8546, %r8545, %r8545, 1;
	add.s32 	%r8547, %r7762, %r8546;
	add.s32 	%r8548, %r8547, %r7761;
	add.s32 	%r8549, %r8548, %r8542;
	add.s32 	%r7771, %r8549, -1894007588;
	shf.l.wrap.b32 	%r7773, %r7763, %r7763, 30;
	shf.l.wrap.b32 	%r8550, %r7771, %r7771, 5;
	// begin inline asm
	lop3.b32 %r7766, %r7767, %r7773, %r7769, 232;
	// end inline asm
	xor.b32  	%r8551, %r8490, %r8530;
	xor.b32  	%r8552, %r8551, %r8442;
	xor.b32  	%r8553, %r8552, %r8428;
	shf.l.wrap.b32 	%r8554, %r8553, %r8553, 1;
	add.s32 	%r8555, %r7766, %r8554;
	add.s32 	%r8556, %r8555, %r7765;
	add.s32 	%r8557, %r8556, %r8550;
	add.s32 	%r7775, %r8557, -1894007588;
	shf.l.wrap.b32 	%r7777, %r7767, %r7767, 30;
	shf.l.wrap.b32 	%r8558, %r7775, %r7775, 5;
	// begin inline asm
	lop3.b32 %r7770, %r7771, %r7777, %r7773, 232;
	// end inline asm
	xor.b32  	%r8559, %r8498, %r8538;
	xor.b32  	%r8560, %r8559, %r8450;
	xor.b32  	%r8561, %r8560, %r8435;
	shf.l.wrap.b32 	%r8562, %r8561, %r8561, 1;
	add.s32 	%r8563, %r7770, %r8562;
	add.s32 	%r8564, %r8563, %r7769;
	add.s32 	%r8565, %r8564, %r8558;
	add.s32 	%r7779, %r8565, -1894007588;
	shf.l.wrap.b32 	%r7781, %r7771, %r7771, 30;
	shf.l.wrap.b32 	%r8566, %r7779, %r7779, 5;
	// begin inline asm
	lop3.b32 %r7774, %r7775, %r7781, %r7777, 232;
	// end inline asm
	xor.b32  	%r8567, %r8506, %r8546;
	xor.b32  	%r8568, %r8567, %r8458;
	xor.b32  	%r8569, %r8568, %r8442;
	shf.l.wrap.b32 	%r8570, %r8569, %r8569, 1;
	add.s32 	%r8571, %r7774, %r8570;
	add.s32 	%r8572, %r8571, %r7773;
	add.s32 	%r8573, %r8572, %r8566;
	add.s32 	%r7783, %r8573, -1894007588;
	shf.l.wrap.b32 	%r7785, %r7775, %r7775, 30;
	shf.l.wrap.b32 	%r8574, %r7783, %r7783, 5;
	// begin inline asm
	lop3.b32 %r7778, %r7779, %r7785, %r7781, 232;
	// end inline asm
	xor.b32  	%r8575, %r8514, %r8554;
	xor.b32  	%r8576, %r8575, %r8466;
	xor.b32  	%r8577, %r8576, %r8450;
	shf.l.wrap.b32 	%r8578, %r8577, %r8577, 1;
	add.s32 	%r8579, %r7778, %r8578;
	add.s32 	%r8580, %r8579, %r7777;
	add.s32 	%r8581, %r8580, %r8574;
	add.s32 	%r7787, %r8581, -1894007588;
	shf.l.wrap.b32 	%r7789, %r7779, %r7779, 30;
	shf.l.wrap.b32 	%r8582, %r7787, %r7787, 5;
	// begin inline asm
	lop3.b32 %r7782, %r7783, %r7789, %r7785, 232;
	// end inline asm
	xor.b32  	%r8583, %r8522, %r8562;
	xor.b32  	%r8584, %r8583, %r8474;
	xor.b32  	%r8585, %r8584, %r8458;
	shf.l.wrap.b32 	%r8586, %r8585, %r8585, 1;
	add.s32 	%r8587, %r7782, %r8586;
	add.s32 	%r8588, %r8587, %r7781;
	add.s32 	%r8589, %r8588, %r8582;
	add.s32 	%r7791, %r8589, -1894007588;
	shf.l.wrap.b32 	%r7793, %r7783, %r7783, 30;
	shf.l.wrap.b32 	%r8590, %r7791, %r7791, 5;
	// begin inline asm
	lop3.b32 %r7786, %r7787, %r7793, %r7789, 232;
	// end inline asm
	xor.b32  	%r8591, %r8530, %r8570;
	xor.b32  	%r8592, %r8591, %r8482;
	xor.b32  	%r8593, %r8592, %r8466;
	shf.l.wrap.b32 	%r8594, %r8593, %r8593, 1;
	add.s32 	%r8595, %r7786, %r8594;
	add.s32 	%r8596, %r8595, %r7785;
	add.s32 	%r8597, %r8596, %r8590;
	add.s32 	%r7795, %r8597, -1894007588;
	shf.l.wrap.b32 	%r7797, %r7787, %r7787, 30;
	shf.l.wrap.b32 	%r8598, %r7795, %r7795, 5;
	// begin inline asm
	lop3.b32 %r7790, %r7791, %r7797, %r7793, 232;
	// end inline asm
	xor.b32  	%r8599, %r8538, %r8578;
	xor.b32  	%r8600, %r8599, %r8490;
	xor.b32  	%r8601, %r8600, %r8474;
	shf.l.wrap.b32 	%r8602, %r8601, %r8601, 1;
	add.s32 	%r8603, %r7790, %r8602;
	add.s32 	%r8604, %r8603, %r7789;
	add.s32 	%r8605, %r8604, %r8598;
	add.s32 	%r7799, %r8605, -1894007588;
	shf.l.wrap.b32 	%r7801, %r7791, %r7791, 30;
	shf.l.wrap.b32 	%r8606, %r7799, %r7799, 5;
	// begin inline asm
	lop3.b32 %r7794, %r7795, %r7801, %r7797, 232;
	// end inline asm
	xor.b32  	%r8607, %r8546, %r8586;
	xor.b32  	%r8608, %r8607, %r8498;
	xor.b32  	%r8609, %r8608, %r8482;
	shf.l.wrap.b32 	%r8610, %r8609, %r8609, 1;
	add.s32 	%r8611, %r7794, %r8610;
	add.s32 	%r8612, %r8611, %r7793;
	add.s32 	%r8613, %r8612, %r8606;
	add.s32 	%r7803, %r8613, -1894007588;
	shf.l.wrap.b32 	%r7805, %r7795, %r7795, 30;
	shf.l.wrap.b32 	%r8614, %r7803, %r7803, 5;
	// begin inline asm
	lop3.b32 %r7798, %r7799, %r7805, %r7801, 232;
	// end inline asm
	xor.b32  	%r8615, %r8554, %r8594;
	xor.b32  	%r8616, %r8615, %r8506;
	xor.b32  	%r8617, %r8616, %r8490;
	shf.l.wrap.b32 	%r8618, %r8617, %r8617, 1;
	add.s32 	%r8619, %r7798, %r8618;
	add.s32 	%r8620, %r8619, %r7797;
	add.s32 	%r8621, %r8620, %r8614;
	add.s32 	%r7807, %r8621, -1894007588;
	shf.l.wrap.b32 	%r7809, %r7799, %r7799, 30;
	shf.l.wrap.b32 	%r8622, %r7807, %r7807, 5;
	// begin inline asm
	lop3.b32 %r7802, %r7803, %r7809, %r7805, 232;
	// end inline asm
	xor.b32  	%r8623, %r8562, %r8602;
	xor.b32  	%r8624, %r8623, %r8514;
	xor.b32  	%r8625, %r8624, %r8498;
	shf.l.wrap.b32 	%r8626, %r8625, %r8625, 1;
	add.s32 	%r8627, %r7802, %r8626;
	add.s32 	%r8628, %r8627, %r7801;
	add.s32 	%r8629, %r8628, %r8622;
	add.s32 	%r7811, %r8629, -1894007588;
	shf.l.wrap.b32 	%r7813, %r7803, %r7803, 30;
	shf.l.wrap.b32 	%r8630, %r7811, %r7811, 5;
	// begin inline asm
	lop3.b32 %r7806, %r7807, %r7813, %r7809, 232;
	// end inline asm
	xor.b32  	%r8631, %r8570, %r8610;
	xor.b32  	%r8632, %r8631, %r8522;
	xor.b32  	%r8633, %r8632, %r8506;
	shf.l.wrap.b32 	%r8634, %r8633, %r8633, 1;
	add.s32 	%r8635, %r7806, %r8634;
	add.s32 	%r8636, %r8635, %r7805;
	add.s32 	%r8637, %r8636, %r8630;
	add.s32 	%r7815, %r8637, -1894007588;
	shf.l.wrap.b32 	%r7817, %r7807, %r7807, 30;
	shf.l.wrap.b32 	%r8638, %r7815, %r7815, 5;
	// begin inline asm
	lop3.b32 %r7810, %r7811, %r7817, %r7813, 232;
	// end inline asm
	xor.b32  	%r8639, %r8578, %r8618;
	xor.b32  	%r8640, %r8639, %r8530;
	xor.b32  	%r8641, %r8640, %r8514;
	shf.l.wrap.b32 	%r8642, %r8641, %r8641, 1;
	add.s32 	%r8643, %r7810, %r8642;
	add.s32 	%r8644, %r8643, %r7809;
	add.s32 	%r8645, %r8644, %r8638;
	add.s32 	%r7819, %r8645, -1894007588;
	shf.l.wrap.b32 	%r7821, %r7811, %r7811, 30;
	shf.l.wrap.b32 	%r8646, %r7819, %r7819, 5;
	// begin inline asm
	lop3.b32 %r7814, %r7815, %r7821, %r7817, 232;
	// end inline asm
	xor.b32  	%r8647, %r8586, %r8626;
	xor.b32  	%r8648, %r8647, %r8538;
	xor.b32  	%r8649, %r8648, %r8522;
	shf.l.wrap.b32 	%r8650, %r8649, %r8649, 1;
	add.s32 	%r8651, %r7814, %r8650;
	add.s32 	%r8652, %r8651, %r7813;
	add.s32 	%r8653, %r8652, %r8646;
	add.s32 	%r7823, %r8653, -1894007588;
	shf.l.wrap.b32 	%r7825, %r7815, %r7815, 30;
	shf.l.wrap.b32 	%r8654, %r7823, %r7823, 5;
	// begin inline asm
	lop3.b32 %r7818, %r7819, %r7825, %r7821, 232;
	// end inline asm
	xor.b32  	%r8655, %r8594, %r8634;
	xor.b32  	%r8656, %r8655, %r8546;
	xor.b32  	%r8657, %r8656, %r8530;
	shf.l.wrap.b32 	%r8658, %r8657, %r8657, 1;
	add.s32 	%r8659, %r7818, %r8658;
	add.s32 	%r8660, %r8659, %r7817;
	add.s32 	%r8661, %r8660, %r8654;
	add.s32 	%r7827, %r8661, -1894007588;
	shf.l.wrap.b32 	%r7829, %r7819, %r7819, 30;
	shf.l.wrap.b32 	%r8662, %r7827, %r7827, 5;
	// begin inline asm
	lop3.b32 %r7822, %r7823, %r7829, %r7825, 232;
	// end inline asm
	xor.b32  	%r8663, %r8602, %r8642;
	xor.b32  	%r8664, %r8663, %r8554;
	xor.b32  	%r8665, %r8664, %r8538;
	shf.l.wrap.b32 	%r8666, %r8665, %r8665, 1;
	add.s32 	%r8667, %r7822, %r8666;
	add.s32 	%r8668, %r8667, %r7821;
	add.s32 	%r8669, %r8668, %r8662;
	add.s32 	%r7831, %r8669, -1894007588;
	shf.l.wrap.b32 	%r7833, %r7823, %r7823, 30;
	shf.l.wrap.b32 	%r8670, %r7831, %r7831, 5;
	// begin inline asm
	lop3.b32 %r7826, %r7827, %r7833, %r7829, 232;
	// end inline asm
	xor.b32  	%r8671, %r8610, %r8650;
	xor.b32  	%r8672, %r8671, %r8562;
	xor.b32  	%r8673, %r8672, %r8546;
	shf.l.wrap.b32 	%r8674, %r8673, %r8673, 1;
	add.s32 	%r8675, %r7826, %r8674;
	add.s32 	%r8676, %r8675, %r7825;
	add.s32 	%r8677, %r8676, %r8670;
	add.s32 	%r7835, %r8677, -1894007588;
	shf.l.wrap.b32 	%r7837, %r7827, %r7827, 30;
	shf.l.wrap.b32 	%r8678, %r7835, %r7835, 5;
	// begin inline asm
	lop3.b32 %r7830, %r7831, %r7837, %r7833, 150;
	// end inline asm
	xor.b32  	%r8679, %r8618, %r8658;
	xor.b32  	%r8680, %r8679, %r8570;
	xor.b32  	%r8681, %r8680, %r8554;
	shf.l.wrap.b32 	%r8682, %r8681, %r8681, 1;
	add.s32 	%r8683, %r7830, %r8682;
	add.s32 	%r8684, %r8683, %r7829;
	add.s32 	%r8685, %r8684, %r8678;
	add.s32 	%r7839, %r8685, -899497514;
	shf.l.wrap.b32 	%r7841, %r7831, %r7831, 30;
	shf.l.wrap.b32 	%r8686, %r7839, %r7839, 5;
	// begin inline asm
	lop3.b32 %r7834, %r7835, %r7841, %r7837, 150;
	// end inline asm
	xor.b32  	%r8687, %r8626, %r8666;
	xor.b32  	%r8688, %r8687, %r8578;
	xor.b32  	%r8689, %r8688, %r8562;
	shf.l.wrap.b32 	%r8690, %r8689, %r8689, 1;
	add.s32 	%r8691, %r7834, %r8690;
	add.s32 	%r8692, %r8691, %r7833;
	add.s32 	%r8693, %r8692, %r8686;
	add.s32 	%r7843, %r8693, -899497514;
	shf.l.wrap.b32 	%r7845, %r7835, %r7835, 30;
	shf.l.wrap.b32 	%r8694, %r7843, %r7843, 5;
	// begin inline asm
	lop3.b32 %r7838, %r7839, %r7845, %r7841, 150;
	// end inline asm
	xor.b32  	%r8695, %r8634, %r8674;
	xor.b32  	%r8696, %r8695, %r8586;
	xor.b32  	%r8697, %r8696, %r8570;
	shf.l.wrap.b32 	%r8698, %r8697, %r8697, 1;
	add.s32 	%r8699, %r7838, %r8698;
	add.s32 	%r8700, %r8699, %r7837;
	add.s32 	%r8701, %r8700, %r8694;
	add.s32 	%r7847, %r8701, -899497514;
	shf.l.wrap.b32 	%r7849, %r7839, %r7839, 30;
	shf.l.wrap.b32 	%r8702, %r7847, %r7847, 5;
	// begin inline asm
	lop3.b32 %r7842, %r7843, %r7849, %r7845, 150;
	// end inline asm
	xor.b32  	%r8703, %r8642, %r8682;
	xor.b32  	%r8704, %r8703, %r8594;
	xor.b32  	%r8705, %r8704, %r8578;
	shf.l.wrap.b32 	%r8706, %r8705, %r8705, 1;
	add.s32 	%r8707, %r7842, %r8706;
	add.s32 	%r8708, %r8707, %r7841;
	add.s32 	%r8709, %r8708, %r8702;
	add.s32 	%r7851, %r8709, -899497514;
	shf.l.wrap.b32 	%r7853, %r7843, %r7843, 30;
	shf.l.wrap.b32 	%r8710, %r7851, %r7851, 5;
	// begin inline asm
	lop3.b32 %r7846, %r7847, %r7853, %r7849, 150;
	// end inline asm
	xor.b32  	%r8711, %r8650, %r8690;
	xor.b32  	%r8712, %r8711, %r8602;
	xor.b32  	%r8713, %r8712, %r8586;
	shf.l.wrap.b32 	%r8714, %r8713, %r8713, 1;
	add.s32 	%r8715, %r7846, %r8714;
	add.s32 	%r8716, %r8715, %r7845;
	add.s32 	%r8717, %r8716, %r8710;
	add.s32 	%r7855, %r8717, -899497514;
	shf.l.wrap.b32 	%r7857, %r7847, %r7847, 30;
	shf.l.wrap.b32 	%r8718, %r7855, %r7855, 5;
	// begin inline asm
	lop3.b32 %r7850, %r7851, %r7857, %r7853, 150;
	// end inline asm
	xor.b32  	%r8719, %r8658, %r8698;
	xor.b32  	%r8720, %r8719, %r8610;
	xor.b32  	%r8721, %r8720, %r8594;
	shf.l.wrap.b32 	%r8722, %r8721, %r8721, 1;
	add.s32 	%r8723, %r7850, %r7849;
	add.s32 	%r8724, %r8723, %r8722;
	add.s32 	%r8725, %r8724, %r8718;
	add.s32 	%r7859, %r8725, -899497514;
	shf.l.wrap.b32 	%r7861, %r7851, %r7851, 30;
	shf.l.wrap.b32 	%r8726, %r7859, %r7859, 5;
	// begin inline asm
	lop3.b32 %r7854, %r7855, %r7861, %r7857, 150;
	// end inline asm
	xor.b32  	%r8727, %r8666, %r8706;
	xor.b32  	%r8728, %r8727, %r8618;
	xor.b32  	%r8729, %r8728, %r8602;
	shf.l.wrap.b32 	%r8730, %r8729, %r8729, 1;
	add.s32 	%r8731, %r7854, %r7853;
	add.s32 	%r8732, %r8731, %r8730;
	add.s32 	%r8733, %r8732, %r8726;
	add.s32 	%r7863, %r8733, -899497514;
	shf.l.wrap.b32 	%r7865, %r7855, %r7855, 30;
	shf.l.wrap.b32 	%r8734, %r7863, %r7863, 5;
	// begin inline asm
	lop3.b32 %r7858, %r7859, %r7865, %r7861, 150;
	// end inline asm
	xor.b32  	%r8735, %r8674, %r8714;
	xor.b32  	%r8736, %r8735, %r8626;
	xor.b32  	%r8737, %r8736, %r8610;
	shf.l.wrap.b32 	%r8738, %r8737, %r8737, 1;
	add.s32 	%r8739, %r7858, %r7857;
	add.s32 	%r8740, %r8739, %r8738;
	add.s32 	%r8741, %r8740, %r8734;
	add.s32 	%r7867, %r8741, -899497514;
	shf.l.wrap.b32 	%r7869, %r7859, %r7859, 30;
	shf.l.wrap.b32 	%r8742, %r7867, %r7867, 5;
	// begin inline asm
	lop3.b32 %r7862, %r7863, %r7869, %r7865, 150;
	// end inline asm
	xor.b32  	%r8743, %r8682, %r8722;
	xor.b32  	%r8744, %r8743, %r8634;
	xor.b32  	%r8745, %r8744, %r8618;
	shf.l.wrap.b32 	%r8746, %r8745, %r8745, 1;
	add.s32 	%r8747, %r7862, %r7861;
	add.s32 	%r8748, %r8747, %r8746;
	add.s32 	%r8749, %r8748, %r8742;
	add.s32 	%r7871, %r8749, -899497514;
	shf.l.wrap.b32 	%r7873, %r7863, %r7863, 30;
	shf.l.wrap.b32 	%r8750, %r7871, %r7871, 5;
	// begin inline asm
	lop3.b32 %r7866, %r7867, %r7873, %r7869, 150;
	// end inline asm
	xor.b32  	%r8751, %r8690, %r8730;
	xor.b32  	%r8752, %r8751, %r8642;
	xor.b32  	%r8753, %r8752, %r8626;
	shf.l.wrap.b32 	%r8754, %r8753, %r8753, 1;
	add.s32 	%r8755, %r7866, %r7865;
	add.s32 	%r8756, %r8755, %r8754;
	add.s32 	%r8757, %r8756, %r8750;
	add.s32 	%r7875, %r8757, -899497514;
	shf.l.wrap.b32 	%r7877, %r7867, %r7867, 30;
	shf.l.wrap.b32 	%r8758, %r7875, %r7875, 5;
	// begin inline asm
	lop3.b32 %r7870, %r7871, %r7877, %r7873, 150;
	// end inline asm
	xor.b32  	%r8759, %r8698, %r8738;
	xor.b32  	%r8760, %r8759, %r8650;
	xor.b32  	%r8761, %r8760, %r8634;
	shf.l.wrap.b32 	%r8762, %r8761, %r8761, 1;
	add.s32 	%r8763, %r7870, %r7869;
	add.s32 	%r8764, %r8763, %r8762;
	add.s32 	%r8765, %r8764, %r8758;
	add.s32 	%r7879, %r8765, -899497514;
	shf.l.wrap.b32 	%r7881, %r7871, %r7871, 30;
	shf.l.wrap.b32 	%r8766, %r7879, %r7879, 5;
	// begin inline asm
	lop3.b32 %r7874, %r7875, %r7881, %r7877, 150;
	// end inline asm
	xor.b32  	%r8767, %r8706, %r8746;
	xor.b32  	%r8768, %r8767, %r8658;
	xor.b32  	%r8769, %r8768, %r8642;
	shf.l.wrap.b32 	%r8770, %r8769, %r8769, 1;
	add.s32 	%r8771, %r7873, %r7874;
	add.s32 	%r8772, %r8771, %r8770;
	add.s32 	%r8773, %r8772, %r8766;
	add.s32 	%r7883, %r8773, -899497514;
	shf.l.wrap.b32 	%r7885, %r7875, %r7875, 30;
	shf.l.wrap.b32 	%r8774, %r7883, %r7883, 5;
	// begin inline asm
	lop3.b32 %r7878, %r7879, %r7885, %r7881, 150;
	// end inline asm
	xor.b32  	%r8775, %r8714, %r8754;
	xor.b32  	%r8776, %r8775, %r8666;
	xor.b32  	%r8777, %r8776, %r8650;
	shf.l.wrap.b32 	%r8778, %r8777, %r8777, 1;
	add.s32 	%r8779, %r7877, %r7878;
	add.s32 	%r8780, %r8779, %r8778;
	add.s32 	%r8781, %r8780, %r8774;
	add.s32 	%r7887, %r8781, -899497514;
	shf.l.wrap.b32 	%r7889, %r7879, %r7879, 30;
	shf.l.wrap.b32 	%r8782, %r7887, %r7887, 5;
	// begin inline asm
	lop3.b32 %r7882, %r7883, %r7889, %r7885, 150;
	// end inline asm
	xor.b32  	%r8783, %r8722, %r8762;
	xor.b32  	%r8784, %r8783, %r8674;
	xor.b32  	%r8785, %r8784, %r8658;
	shf.l.wrap.b32 	%r8786, %r8785, %r8785, 1;
	add.s32 	%r8787, %r7881, %r7882;
	add.s32 	%r8788, %r8787, %r8786;
	add.s32 	%r8789, %r8788, %r8782;
	add.s32 	%r7891, %r8789, -899497514;
	shf.l.wrap.b32 	%r7893, %r7883, %r7883, 30;
	shf.l.wrap.b32 	%r8790, %r7891, %r7891, 5;
	// begin inline asm
	lop3.b32 %r7886, %r7887, %r7893, %r7889, 150;
	// end inline asm
	xor.b32  	%r8791, %r8730, %r8770;
	xor.b32  	%r8792, %r8791, %r8682;
	xor.b32  	%r8793, %r8792, %r8666;
	shf.l.wrap.b32 	%r8794, %r8793, %r8793, 1;
	add.s32 	%r8795, %r7885, %r7886;
	add.s32 	%r8796, %r8795, %r8794;
	add.s32 	%r8797, %r8796, %r8790;
	add.s32 	%r7895, %r8797, -899497514;
	shf.l.wrap.b32 	%r7897, %r7887, %r7887, 30;
	shf.l.wrap.b32 	%r8798, %r7895, %r7895, 5;
	// begin inline asm
	lop3.b32 %r7890, %r7891, %r7897, %r7893, 150;
	// end inline asm
	xor.b32  	%r8799, %r8738, %r8778;
	xor.b32  	%r8800, %r8799, %r8690;
	xor.b32  	%r8801, %r8800, %r8674;
	shf.l.wrap.b32 	%r8802, %r8801, %r8801, 1;
	add.s32 	%r8803, %r7889, %r7890;
	add.s32 	%r8804, %r8803, %r8802;
	add.s32 	%r8805, %r8804, %r8798;
	add.s32 	%r7899, %r8805, -899497514;
	shf.l.wrap.b32 	%r7901, %r7891, %r7891, 30;
	shf.l.wrap.b32 	%r8806, %r7899, %r7899, 5;
	// begin inline asm
	lop3.b32 %r7894, %r7895, %r7901, %r7897, 150;
	// end inline asm
	xor.b32  	%r8807, %r8746, %r8786;
	xor.b32  	%r8808, %r8807, %r8698;
	xor.b32  	%r8809, %r8808, %r8682;
	shf.l.wrap.b32 	%r8810, %r8809, %r8809, 1;
	add.s32 	%r8811, %r7893, %r7894;
	add.s32 	%r8812, %r8811, %r8810;
	add.s32 	%r8813, %r8812, %r8806;
	add.s32 	%r7903, %r8813, -899497514;
	shf.l.wrap.b32 	%r7905, %r7895, %r7895, 30;
	shf.l.wrap.b32 	%r8814, %r7903, %r7903, 5;
	// begin inline asm
	lop3.b32 %r7898, %r7899, %r7905, %r7901, 150;
	// end inline asm
	xor.b32  	%r8815, %r8754, %r8794;
	xor.b32  	%r8816, %r8815, %r8706;
	xor.b32  	%r8817, %r8816, %r8690;
	shf.l.wrap.b32 	%r8818, %r8817, %r8817, 1;
	add.s32 	%r8819, %r7897, %r7898;
	add.s32 	%r8820, %r8819, %r8818;
	add.s32 	%r8821, %r8820, %r8814;
	add.s32 	%r7907, %r8821, -899497514;
	shf.l.wrap.b32 	%r7909, %r7899, %r7899, 30;
	shf.l.wrap.b32 	%r8822, %r7907, %r7907, 5;
	// begin inline asm
	lop3.b32 %r7902, %r7903, %r7909, %r7905, 150;
	// end inline asm
	xor.b32  	%r8823, %r8762, %r8802;
	xor.b32  	%r8824, %r8823, %r8714;
	xor.b32  	%r8825, %r8824, %r8698;
	shf.l.wrap.b32 	%r8826, %r8825, %r8825, 1;
	add.s32 	%r8827, %r7901, %r7902;
	add.s32 	%r8828, %r8827, %r8826;
	add.s32 	%r8829, %r8828, %r8822;
	add.s32 	%r210, %r8829, -899497514;
	shf.l.wrap.b32 	%r7908, %r7903, %r7903, 30;
	shf.l.wrap.b32 	%r8830, %r210, %r210, 5;
	// begin inline asm
	lop3.b32 %r7906, %r7907, %r7908, %r7909, 150;
	// end inline asm
	xor.b32  	%r8831, %r8770, %r8810;
	xor.b32  	%r8832, %r8831, %r8722;
	xor.b32  	%r8833, %r8832, %r8706;
	shf.l.wrap.b32 	%r8834, %r8833, %r8833, 1;
	shf.l.wrap.b32 	%r212, %r7907, %r7907, 30;
	add.s32 	%r8835, %r7905, %r7906;
	add.s32 	%r8836, %r8835, %r8834;
	add.s32 	%r8837, %r8836, %r8830;
	add.s32 	%r8838, %r8837, 833086679;
	shf.l.wrap.b32 	%r8839, %r8838, %r8838, 16;
	shl.b32 	%r8840, %r8839, 8;
	and.b32  	%r8841, %r8840, -16711936;
	shr.u32 	%r8842, %r8839, 8;
	and.b32  	%r8843, %r8842, 16711935;
	or.b32  	%r8844, %r8841, %r8843;
	setp.ne.s32 	%p31, %r8266, %r8844;
	mov.u32 	%r8934, 0;
	@%p31 bra 	$L__BB2_44;

	add.s32 	%r8846, %r210, -271733879;
	shf.l.wrap.b32 	%r8847, %r8846, %r8846, 16;
	shl.b32 	%r8848, %r8847, 8;
	and.b32  	%r8849, %r8848, -16711936;
	shr.u32 	%r8850, %r8847, 8;
	and.b32  	%r8851, %r8850, 16711935;
	or.b32  	%r8852, %r8849, %r8851;
	shl.b32 	%r8853, %r208, 4;
	and.b32  	%r8854, %r8853, -252645136;
	and.b32  	%r8855, %r207, 252645135;
	or.b32  	%r8856, %r8854, %r8855;
	setp.ne.s32 	%p32, %r8856, %r8852;
	and.b32  	%r8857, %r208, -252645136;
	and.b32  	%r8858, %r207, -252645136;
	shr.u32 	%r8859, %r8858, 4;
	or.b32  	%r213, %r8859, %r8857;
	@%p32 bra 	$L__BB2_44;

	add.s32 	%r8861, %r212, -1732584194;
	shf.l.wrap.b32 	%r8862, %r8861, %r8861, 16;
	shl.b32 	%r8863, %r8862, 8;
	and.b32  	%r8864, %r8863, -16711936;
	shr.u32 	%r8865, %r8862, 8;
	and.b32  	%r8866, %r8865, 16711935;
	or.b32  	%r8867, %r8864, %r8866;
	setp.ne.s32 	%p33, %r209, %r8867;
	@%p33 bra 	$L__BB2_44;

	add.s32 	%r8868, %r7908, 271733878;
	shf.l.wrap.b32 	%r8869, %r8868, %r8868, 16;
	shl.b32 	%r8870, %r8869, 8;
	and.b32  	%r8871, %r8870, -16711936;
	shr.u32 	%r8872, %r8869, 8;
	and.b32  	%r8873, %r8872, 16711935;
	or.b32  	%r8874, %r8871, %r8873;
	setp.eq.s32 	%p34, %r213, %r8874;
	selp.u32 	%r8934, 1, 0, %p34;

$L__BB2_44:
	ld.param.u64 	%rd52, [Final2007_param_1];
	shl.b64 	%rd48, %rd1, 2;
	add.s64 	%rd49, %rd52, %rd48;
	st.global.u32 	[%rd49], %r8934;
	ret;

}
	// .globl	Generate2010key
.entry Generate2010key(
	.param .u64 .ptr .global .align 8 Generate2010key_param_0,
	.param .u64 .ptr .global .align 4 Generate2010key_param_1,
	.param .u64 .ptr .const .align 8 Generate2010key_param_2,
	.param .u64 .ptr .const .align 1 Generate2010key_param_3
)
{
	.local .align 16 .b8 	__local_depot3[1056];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<116>;
	.reg .b16 	%rs<149>;
	.reg .b32 	%r<9643>;
	.reg .b64 	%rd<114>;


	mov.u64 	%SPL, __local_depot3;
	ld.param.u64 	%rd47, [Generate2010key_param_0];
	ld.param.u64 	%rd48, [Generate2010key_param_2];
	add.u64 	%rd1, %SPL, 728;
	mov.u32 	%r196, %ctaid.x;
	mov.u32 	%r197, %ntid.x;
	mov.u32 	%r198, %tid.x;
	mov.b32 	%r199, %envreg3;
	add.s32 	%r200, %r198, %r199;
	mad.lo.s32 	%r201, %r197, %r196, %r200;
	cvt.u64.u32 	%rd2, %r201;
	mul.wide.u32 	%rd50, %r201, 72;
	add.s64 	%rd51, %rd47, %rd50;
	ld.global.u32 	%r1, [%rd51];
	ld.const.u32 	%r202, [%rd48+32];
	ld.global.v2.u32 	{%r9571, %r9570}, [%rd51+8];
	st.local.u32 	[%rd1+20], %r9571;
	ld.global.u32 	%r9569, [%rd51+16];
	st.local.v2.u32 	[%rd1+24], {%r9570, %r9569};
	.pragma "used_bytes_mask 240";
	ld.global.v2.u32 	{%r205, %r9568}, [%rd51+16];
	ld.global.u32 	%r9567, [%rd51+24];
	st.local.v2.u32 	[%rd1+32], {%r9568, %r9567};
	add.u64 	%rd4, %SPL, 0;
	add.u64 	%rd5, %SPL, 800;
	add.u64 	%rd6, %SPL, 1040;
	add.u64 	%rd7, %SPL, 768;
	mul.wide.u32 	%rd56, %r202, -776530087;
	shr.u64 	%rd57, %rd56, 43;
	cvt.u32.u64 	%r207, %rd57;
	mul.lo.s32 	%r208, %r207, 2500;
	sub.s32 	%r7, %r202, %r208;
	setp.eq.s32 	%p2, %r7, 0;
	@%p2 bra 	$L__BB3_4;

	mov.u32 	%r214, 1732584193;
	shf.l.wrap.b32 	%r218, %r214, %r214, 5;
	mov.u32 	%r210, -271733879;
	mov.u32 	%r216, -1732584194;
	mov.u32 	%r212, 271733878;
	// begin inline asm
	lop3.b32 %r209, %r210, %r216, %r212, 202;
	// end inline asm
	add.s32 	%r219, %r218, %r209;
	add.s32 	%r8, %r219, 508910473;
	shf.l.wrap.b32 	%r215, %r210, %r210, 30;
	// begin inline asm
	lop3.b32 %r213, %r214, %r215, %r216, 202;
	// end inline asm
	add.s32 	%r10, %r213, 1790234127;
	add.s32 	%r11, %r215, 1518500249;
	shf.l.wrap.b32 	%r12, %r214, %r214, 30;
	add.s32 	%r13, %r12, 1518500249;
	mov.u32 	%r9572, 0;

$L__BB3_2:
	add.s32 	%r532, %r9572, %r1;
	shf.l.wrap.b32 	%r533, %r532, %r532, 16;
	shl.b32 	%r534, %r533, 8;
	and.b32  	%r535, %r534, -16711936;
	shr.u32 	%r536, %r533, 8;
	and.b32  	%r537, %r536, 16711935;
	or.b32  	%r538, %r535, %r537;
	add.s32 	%r221, %r8, %r538;
	shf.l.wrap.b32 	%r539, %r221, %r221, 5;
	add.s32 	%r540, %r10, %r9571;
	add.s32 	%r225, %r540, %r539;
	shf.l.wrap.b32 	%r541, %r225, %r225, 5;
	// begin inline asm
	lop3.b32 %r220, %r221, %r12, %r215, 202;
	// end inline asm
	add.s32 	%r542, %r220, %r9570;
	add.s32 	%r543, %r542, %r541;
	add.s32 	%r229, %r543, -214083945;
	shf.l.wrap.b32 	%r231, %r221, %r221, 30;
	shf.l.wrap.b32 	%r544, %r229, %r229, 5;
	// begin inline asm
	lop3.b32 %r224, %r225, %r231, %r12, 202;
	// end inline asm
	add.s32 	%r545, %r11, %r224;
	add.s32 	%r546, %r545, %r9569;
	add.s32 	%r233, %r546, %r544;
	shf.l.wrap.b32 	%r235, %r225, %r225, 30;
	shf.l.wrap.b32 	%r547, %r233, %r233, 5;
	// begin inline asm
	lop3.b32 %r228, %r229, %r235, %r231, 202;
	// end inline asm
	add.s32 	%r548, %r13, %r228;
	add.s32 	%r549, %r548, %r9568;
	add.s32 	%r237, %r549, %r547;
	shf.l.wrap.b32 	%r239, %r229, %r229, 30;
	shf.l.wrap.b32 	%r550, %r237, %r237, 5;
	// begin inline asm
	lop3.b32 %r232, %r233, %r239, %r235, 202;
	// end inline asm
	add.s32 	%r551, %r231, %r232;
	add.s32 	%r552, %r551, %r9567;
	add.s32 	%r553, %r552, %r550;
	add.s32 	%r241, %r553, 1518500249;
	shf.l.wrap.b32 	%r243, %r233, %r233, 30;
	shf.l.wrap.b32 	%r554, %r241, %r241, 5;
	// begin inline asm
	lop3.b32 %r236, %r237, %r243, %r239, 202;
	// end inline asm
	add.s32 	%r555, %r235, %r236;
	add.s32 	%r556, %r555, 1518500249;
	xor.b32  	%r557, %r556, -2147483648;
	add.s32 	%r245, %r557, %r554;
	shf.l.wrap.b32 	%r247, %r237, %r237, 30;
	shf.l.wrap.b32 	%r558, %r245, %r245, 5;
	// begin inline asm
	lop3.b32 %r240, %r241, %r247, %r243, 202;
	// end inline asm
	add.s32 	%r559, %r240, %r239;
	add.s32 	%r560, %r559, %r558;
	add.s32 	%r249, %r560, 1518500249;
	shf.l.wrap.b32 	%r251, %r241, %r241, 30;
	shf.l.wrap.b32 	%r561, %r249, %r249, 5;
	// begin inline asm
	lop3.b32 %r244, %r245, %r251, %r247, 202;
	// end inline asm
	add.s32 	%r562, %r244, %r243;
	add.s32 	%r563, %r562, %r561;
	add.s32 	%r253, %r563, 1518500249;
	shf.l.wrap.b32 	%r255, %r245, %r245, 30;
	shf.l.wrap.b32 	%r564, %r253, %r253, 5;
	// begin inline asm
	lop3.b32 %r248, %r249, %r255, %r251, 202;
	// end inline asm
	add.s32 	%r565, %r248, %r247;
	add.s32 	%r566, %r565, %r564;
	add.s32 	%r257, %r566, 1518500249;
	shf.l.wrap.b32 	%r259, %r249, %r249, 30;
	shf.l.wrap.b32 	%r567, %r257, %r257, 5;
	// begin inline asm
	lop3.b32 %r252, %r253, %r259, %r255, 202;
	// end inline asm
	add.s32 	%r568, %r252, %r251;
	add.s32 	%r569, %r568, %r567;
	add.s32 	%r261, %r569, 1518500249;
	shf.l.wrap.b32 	%r263, %r253, %r253, 30;
	shf.l.wrap.b32 	%r570, %r261, %r261, 5;
	// begin inline asm
	lop3.b32 %r256, %r257, %r263, %r259, 202;
	// end inline asm
	add.s32 	%r571, %r256, %r255;
	add.s32 	%r572, %r571, %r570;
	add.s32 	%r265, %r572, 1518500249;
	shf.l.wrap.b32 	%r267, %r257, %r257, 30;
	shf.l.wrap.b32 	%r573, %r265, %r265, 5;
	// begin inline asm
	lop3.b32 %r260, %r261, %r267, %r263, 202;
	// end inline asm
	add.s32 	%r574, %r260, %r259;
	add.s32 	%r575, %r574, %r573;
	add.s32 	%r269, %r575, 1518500249;
	shf.l.wrap.b32 	%r271, %r261, %r261, 30;
	shf.l.wrap.b32 	%r576, %r269, %r269, 5;
	// begin inline asm
	lop3.b32 %r264, %r265, %r271, %r267, 202;
	// end inline asm
	add.s32 	%r577, %r264, %r263;
	add.s32 	%r578, %r577, %r576;
	add.s32 	%r273, %r578, 1518500249;
	shf.l.wrap.b32 	%r275, %r265, %r265, 30;
	shf.l.wrap.b32 	%r579, %r273, %r273, 5;
	// begin inline asm
	lop3.b32 %r268, %r269, %r275, %r271, 202;
	// end inline asm
	add.s32 	%r580, %r268, %r267;
	add.s32 	%r581, %r580, %r579;
	add.s32 	%r277, %r581, 1518500249;
	shf.l.wrap.b32 	%r279, %r269, %r269, 30;
	shf.l.wrap.b32 	%r582, %r277, %r277, 5;
	// begin inline asm
	lop3.b32 %r272, %r273, %r279, %r275, 202;
	// end inline asm
	add.s32 	%r583, %r272, %r271;
	add.s32 	%r584, %r583, %r582;
	add.s32 	%r281, %r584, 1518500441;
	shf.l.wrap.b32 	%r283, %r273, %r273, 30;
	shf.l.wrap.b32 	%r585, %r281, %r281, 5;
	// begin inline asm
	lop3.b32 %r276, %r277, %r283, %r279, 202;
	// end inline asm
	xor.b32  	%r586, %r538, %r9570;
	shf.l.wrap.b32 	%r587, %r586, %r586, 1;
	add.s32 	%r588, %r276, %r587;
	add.s32 	%r589, %r588, %r275;
	add.s32 	%r590, %r589, %r585;
	add.s32 	%r285, %r590, 1518500249;
	shf.l.wrap.b32 	%r287, %r277, %r277, 30;
	shf.l.wrap.b32 	%r591, %r285, %r285, 5;
	// begin inline asm
	lop3.b32 %r280, %r281, %r287, %r283, 202;
	// end inline asm
	xor.b32  	%r592, %r9571, %r9569;
	shf.l.wrap.b32 	%r593, %r592, %r592, 1;
	add.s32 	%r594, %r280, %r593;
	add.s32 	%r595, %r594, %r279;
	add.s32 	%r596, %r595, %r591;
	add.s32 	%r289, %r596, 1518500249;
	shf.l.wrap.b32 	%r291, %r281, %r281, 30;
	shf.l.wrap.b32 	%r597, %r289, %r289, 5;
	// begin inline asm
	lop3.b32 %r284, %r285, %r291, %r287, 202;
	// end inline asm
	xor.b32  	%r598, %r9568, %r9570;
	xor.b32  	%r599, %r598, 192;
	shf.l.wrap.b32 	%r600, %r599, %r599, 1;
	add.s32 	%r601, %r284, %r600;
	add.s32 	%r602, %r601, %r283;
	add.s32 	%r603, %r602, %r597;
	add.s32 	%r293, %r603, 1518500249;
	shf.l.wrap.b32 	%r295, %r285, %r285, 30;
	shf.l.wrap.b32 	%r604, %r293, %r293, 5;
	// begin inline asm
	lop3.b32 %r288, %r289, %r295, %r291, 202;
	// end inline asm
	xor.b32  	%r605, %r9567, %r587;
	xor.b32  	%r606, %r605, %r9569;
	shf.l.wrap.b32 	%r607, %r606, %r606, 1;
	add.s32 	%r608, %r288, %r607;
	add.s32 	%r609, %r608, %r287;
	add.s32 	%r610, %r609, %r604;
	add.s32 	%r297, %r610, 1518500249;
	shf.l.wrap.b32 	%r299, %r289, %r289, 30;
	shf.l.wrap.b32 	%r611, %r297, %r297, 5;
	// begin inline asm
	lop3.b32 %r292, %r293, %r299, %r295, 150;
	// end inline asm
	xor.b32  	%r612, %r593, %r9568;
	xor.b32  	%r613, %r612, -2147483648;
	shf.l.wrap.b32 	%r614, %r613, %r613, 1;
	add.s32 	%r615, %r292, %r614;
	add.s32 	%r616, %r615, %r291;
	add.s32 	%r617, %r616, %r611;
	add.s32 	%r301, %r617, 1859775393;
	shf.l.wrap.b32 	%r303, %r293, %r293, 30;
	shf.l.wrap.b32 	%r618, %r301, %r301, 5;
	// begin inline asm
	lop3.b32 %r296, %r297, %r303, %r299, 150;
	// end inline asm
	xor.b32  	%r619, %r9567, %r600;
	shf.l.wrap.b32 	%r620, %r619, %r619, 1;
	add.s32 	%r621, %r296, %r620;
	add.s32 	%r622, %r621, %r295;
	add.s32 	%r623, %r622, %r618;
	add.s32 	%r305, %r623, 1859775393;
	shf.l.wrap.b32 	%r307, %r297, %r297, 30;
	shf.l.wrap.b32 	%r624, %r305, %r305, 5;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 150;
	// end inline asm
	xor.b32  	%r625, %r607, -2147483648;
	shf.l.wrap.b32 	%r626, %r625, %r625, 1;
	add.s32 	%r627, %r300, %r626;
	add.s32 	%r628, %r627, %r299;
	add.s32 	%r629, %r628, %r624;
	add.s32 	%r309, %r629, 1859775393;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	shf.l.wrap.b32 	%r630, %r309, %r309, 5;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 150;
	// end inline asm
	xor.b32  	%r631, %r614, 192;
	shf.l.wrap.b32 	%r632, %r631, %r631, 1;
	add.s32 	%r633, %r304, %r632;
	add.s32 	%r634, %r633, %r303;
	add.s32 	%r635, %r634, %r630;
	add.s32 	%r313, %r635, 1859775393;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	shf.l.wrap.b32 	%r636, %r313, %r313, 5;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 150;
	// end inline asm
	xor.b32  	%r637, %r587, %r620;
	shf.l.wrap.b32 	%r638, %r637, %r637, 1;
	add.s32 	%r639, %r308, %r638;
	add.s32 	%r640, %r639, %r307;
	add.s32 	%r641, %r640, %r636;
	add.s32 	%r317, %r641, 1859775393;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r642, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 150;
	// end inline asm
	xor.b32  	%r643, %r593, %r626;
	shf.l.wrap.b32 	%r644, %r643, %r643, 1;
	add.s32 	%r645, %r312, %r644;
	add.s32 	%r646, %r645, %r311;
	add.s32 	%r647, %r646, %r642;
	add.s32 	%r321, %r647, 1859775393;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r648, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 150;
	// end inline asm
	xor.b32  	%r649, %r600, %r632;
	shf.l.wrap.b32 	%r650, %r649, %r649, 1;
	add.s32 	%r651, %r316, %r650;
	add.s32 	%r652, %r651, %r315;
	add.s32 	%r653, %r652, %r648;
	add.s32 	%r325, %r653, 1859775393;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r654, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 150;
	// end inline asm
	xor.b32  	%r655, %r607, %r638;
	shf.l.wrap.b32 	%r656, %r655, %r655, 1;
	add.s32 	%r657, %r320, %r656;
	add.s32 	%r658, %r657, %r319;
	add.s32 	%r659, %r658, %r654;
	add.s32 	%r329, %r659, 1859775393;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r660, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 150;
	// end inline asm
	xor.b32  	%r661, %r614, %r644;
	shf.l.wrap.b32 	%r662, %r661, %r661, 1;
	add.s32 	%r663, %r324, %r662;
	add.s32 	%r664, %r663, %r323;
	add.s32 	%r665, %r664, %r660;
	add.s32 	%r333, %r665, 1859775393;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r666, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 150;
	// end inline asm
	xor.b32  	%r667, %r620, %r650;
	xor.b32  	%r668, %r667, 192;
	shf.l.wrap.b32 	%r669, %r668, %r668, 1;
	add.s32 	%r670, %r328, %r669;
	add.s32 	%r671, %r670, %r327;
	add.s32 	%r672, %r671, %r666;
	add.s32 	%r337, %r672, 1859775393;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r673, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 150;
	// end inline asm
	xor.b32  	%r674, %r626, %r656;
	xor.b32  	%r675, %r674, %r587;
	shf.l.wrap.b32 	%r676, %r675, %r675, 1;
	add.s32 	%r677, %r332, %r676;
	add.s32 	%r678, %r677, %r331;
	add.s32 	%r679, %r678, %r673;
	add.s32 	%r341, %r679, 1859775393;
	shf.l.wrap.b32 	%r343, %r333, %r333, 30;
	shf.l.wrap.b32 	%r680, %r341, %r341, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r343, %r339, 150;
	// end inline asm
	xor.b32  	%r681, %r632, %r662;
	xor.b32  	%r682, %r681, %r593;
	xor.b32  	%r683, %r682, 192;
	shf.l.wrap.b32 	%r684, %r683, %r683, 1;
	add.s32 	%r685, %r336, %r684;
	add.s32 	%r686, %r685, %r335;
	add.s32 	%r687, %r686, %r680;
	add.s32 	%r345, %r687, 1859775393;
	shf.l.wrap.b32 	%r347, %r337, %r337, 30;
	shf.l.wrap.b32 	%r688, %r345, %r345, 5;
	// begin inline asm
	lop3.b32 %r340, %r341, %r347, %r343, 150;
	// end inline asm
	xor.b32  	%r689, %r638, %r669;
	xor.b32  	%r690, %r689, %r600;
	xor.b32  	%r691, %r690, %r587;
	shf.l.wrap.b32 	%r692, %r691, %r691, 1;
	add.s32 	%r693, %r340, %r692;
	add.s32 	%r694, %r693, %r339;
	add.s32 	%r695, %r694, %r688;
	add.s32 	%r349, %r695, 1859775393;
	shf.l.wrap.b32 	%r351, %r341, %r341, 30;
	shf.l.wrap.b32 	%r696, %r349, %r349, 5;
	// begin inline asm
	lop3.b32 %r344, %r345, %r351, %r347, 150;
	// end inline asm
	xor.b32  	%r697, %r644, %r676;
	xor.b32  	%r698, %r697, %r607;
	xor.b32  	%r699, %r698, %r593;
	shf.l.wrap.b32 	%r700, %r699, %r699, 1;
	add.s32 	%r701, %r344, %r700;
	add.s32 	%r702, %r701, %r343;
	add.s32 	%r703, %r702, %r696;
	add.s32 	%r353, %r703, 1859775393;
	shf.l.wrap.b32 	%r355, %r345, %r345, 30;
	shf.l.wrap.b32 	%r704, %r353, %r353, 5;
	// begin inline asm
	lop3.b32 %r348, %r349, %r355, %r351, 150;
	// end inline asm
	xor.b32  	%r705, %r650, %r684;
	xor.b32  	%r706, %r705, %r614;
	xor.b32  	%r707, %r706, %r600;
	shf.l.wrap.b32 	%r708, %r707, %r707, 1;
	add.s32 	%r709, %r348, %r708;
	add.s32 	%r710, %r709, %r347;
	add.s32 	%r711, %r710, %r704;
	add.s32 	%r357, %r711, 1859775393;
	shf.l.wrap.b32 	%r359, %r349, %r349, 30;
	shf.l.wrap.b32 	%r712, %r357, %r357, 5;
	// begin inline asm
	lop3.b32 %r352, %r353, %r359, %r355, 150;
	// end inline asm
	xor.b32  	%r713, %r656, %r692;
	xor.b32  	%r714, %r713, %r620;
	xor.b32  	%r715, %r714, %r607;
	shf.l.wrap.b32 	%r716, %r715, %r715, 1;
	add.s32 	%r717, %r352, %r716;
	add.s32 	%r718, %r717, %r351;
	add.s32 	%r719, %r718, %r712;
	add.s32 	%r361, %r719, 1859775393;
	shf.l.wrap.b32 	%r363, %r353, %r353, 30;
	shf.l.wrap.b32 	%r720, %r361, %r361, 5;
	// begin inline asm
	lop3.b32 %r356, %r357, %r363, %r359, 150;
	// end inline asm
	xor.b32  	%r721, %r662, %r700;
	xor.b32  	%r722, %r721, %r626;
	xor.b32  	%r723, %r722, %r614;
	shf.l.wrap.b32 	%r724, %r723, %r723, 1;
	add.s32 	%r725, %r356, %r724;
	add.s32 	%r726, %r725, %r355;
	add.s32 	%r727, %r726, %r720;
	add.s32 	%r365, %r727, 1859775393;
	shf.l.wrap.b32 	%r367, %r357, %r357, 30;
	shf.l.wrap.b32 	%r728, %r365, %r365, 5;
	// begin inline asm
	lop3.b32 %r360, %r361, %r367, %r363, 150;
	// end inline asm
	xor.b32  	%r729, %r669, %r708;
	xor.b32  	%r730, %r729, %r632;
	xor.b32  	%r731, %r730, %r620;
	shf.l.wrap.b32 	%r732, %r731, %r731, 1;
	add.s32 	%r733, %r360, %r732;
	add.s32 	%r734, %r733, %r359;
	add.s32 	%r735, %r734, %r728;
	add.s32 	%r369, %r735, 1859775393;
	shf.l.wrap.b32 	%r371, %r361, %r361, 30;
	shf.l.wrap.b32 	%r736, %r369, %r369, 5;
	// begin inline asm
	lop3.b32 %r364, %r365, %r371, %r367, 150;
	// end inline asm
	xor.b32  	%r737, %r676, %r716;
	xor.b32  	%r738, %r737, %r638;
	xor.b32  	%r739, %r738, %r626;
	shf.l.wrap.b32 	%r740, %r739, %r739, 1;
	add.s32 	%r741, %r364, %r740;
	add.s32 	%r742, %r741, %r363;
	add.s32 	%r743, %r742, %r736;
	add.s32 	%r373, %r743, 1859775393;
	shf.l.wrap.b32 	%r375, %r365, %r365, 30;
	shf.l.wrap.b32 	%r744, %r373, %r373, 5;
	// begin inline asm
	lop3.b32 %r368, %r369, %r375, %r371, 150;
	// end inline asm
	xor.b32  	%r745, %r684, %r724;
	xor.b32  	%r746, %r745, %r644;
	xor.b32  	%r747, %r746, %r632;
	shf.l.wrap.b32 	%r748, %r747, %r747, 1;
	add.s32 	%r749, %r368, %r748;
	add.s32 	%r750, %r749, %r367;
	add.s32 	%r751, %r750, %r744;
	add.s32 	%r377, %r751, 1859775393;
	shf.l.wrap.b32 	%r379, %r369, %r369, 30;
	shf.l.wrap.b32 	%r752, %r377, %r377, 5;
	// begin inline asm
	lop3.b32 %r372, %r373, %r379, %r375, 232;
	// end inline asm
	xor.b32  	%r753, %r692, %r732;
	xor.b32  	%r754, %r753, %r650;
	xor.b32  	%r755, %r754, %r638;
	shf.l.wrap.b32 	%r756, %r755, %r755, 1;
	add.s32 	%r757, %r372, %r756;
	add.s32 	%r758, %r757, %r371;
	add.s32 	%r759, %r758, %r752;
	add.s32 	%r381, %r759, -1894007588;
	shf.l.wrap.b32 	%r383, %r373, %r373, 30;
	shf.l.wrap.b32 	%r760, %r381, %r381, 5;
	// begin inline asm
	lop3.b32 %r376, %r377, %r383, %r379, 232;
	// end inline asm
	xor.b32  	%r761, %r700, %r740;
	xor.b32  	%r762, %r761, %r656;
	xor.b32  	%r763, %r762, %r644;
	shf.l.wrap.b32 	%r764, %r763, %r763, 1;
	add.s32 	%r765, %r376, %r764;
	add.s32 	%r766, %r765, %r375;
	add.s32 	%r767, %r766, %r760;
	add.s32 	%r385, %r767, -1894007588;
	shf.l.wrap.b32 	%r387, %r377, %r377, 30;
	shf.l.wrap.b32 	%r768, %r385, %r385, 5;
	// begin inline asm
	lop3.b32 %r380, %r381, %r387, %r383, 232;
	// end inline asm
	xor.b32  	%r769, %r708, %r748;
	xor.b32  	%r770, %r769, %r662;
	xor.b32  	%r771, %r770, %r650;
	shf.l.wrap.b32 	%r772, %r771, %r771, 1;
	add.s32 	%r773, %r380, %r772;
	add.s32 	%r774, %r773, %r379;
	add.s32 	%r775, %r774, %r768;
	add.s32 	%r389, %r775, -1894007588;
	shf.l.wrap.b32 	%r391, %r381, %r381, 30;
	shf.l.wrap.b32 	%r776, %r389, %r389, 5;
	// begin inline asm
	lop3.b32 %r384, %r385, %r391, %r387, 232;
	// end inline asm
	xor.b32  	%r777, %r716, %r756;
	xor.b32  	%r778, %r777, %r669;
	xor.b32  	%r779, %r778, %r656;
	shf.l.wrap.b32 	%r780, %r779, %r779, 1;
	add.s32 	%r781, %r384, %r780;
	add.s32 	%r782, %r781, %r383;
	add.s32 	%r783, %r782, %r776;
	add.s32 	%r393, %r783, -1894007588;
	shf.l.wrap.b32 	%r395, %r385, %r385, 30;
	shf.l.wrap.b32 	%r784, %r393, %r393, 5;
	// begin inline asm
	lop3.b32 %r388, %r389, %r395, %r391, 232;
	// end inline asm
	xor.b32  	%r785, %r724, %r764;
	xor.b32  	%r786, %r785, %r676;
	xor.b32  	%r787, %r786, %r662;
	shf.l.wrap.b32 	%r788, %r787, %r787, 1;
	add.s32 	%r789, %r388, %r788;
	add.s32 	%r790, %r789, %r387;
	add.s32 	%r791, %r790, %r784;
	add.s32 	%r397, %r791, -1894007588;
	shf.l.wrap.b32 	%r399, %r389, %r389, 30;
	shf.l.wrap.b32 	%r792, %r397, %r397, 5;
	// begin inline asm
	lop3.b32 %r392, %r393, %r399, %r395, 232;
	// end inline asm
	xor.b32  	%r793, %r732, %r772;
	xor.b32  	%r794, %r793, %r684;
	xor.b32  	%r795, %r794, %r669;
	shf.l.wrap.b32 	%r796, %r795, %r795, 1;
	add.s32 	%r797, %r392, %r796;
	add.s32 	%r798, %r797, %r391;
	add.s32 	%r799, %r798, %r792;
	add.s32 	%r401, %r799, -1894007588;
	shf.l.wrap.b32 	%r403, %r393, %r393, 30;
	shf.l.wrap.b32 	%r800, %r401, %r401, 5;
	// begin inline asm
	lop3.b32 %r396, %r397, %r403, %r399, 232;
	// end inline asm
	xor.b32  	%r801, %r740, %r780;
	xor.b32  	%r802, %r801, %r692;
	xor.b32  	%r803, %r802, %r676;
	shf.l.wrap.b32 	%r804, %r803, %r803, 1;
	add.s32 	%r805, %r396, %r804;
	add.s32 	%r806, %r805, %r395;
	add.s32 	%r807, %r806, %r800;
	add.s32 	%r405, %r807, -1894007588;
	shf.l.wrap.b32 	%r407, %r397, %r397, 30;
	shf.l.wrap.b32 	%r808, %r405, %r405, 5;
	// begin inline asm
	lop3.b32 %r400, %r401, %r407, %r403, 232;
	// end inline asm
	xor.b32  	%r809, %r748, %r788;
	xor.b32  	%r810, %r809, %r700;
	xor.b32  	%r811, %r810, %r684;
	shf.l.wrap.b32 	%r812, %r811, %r811, 1;
	add.s32 	%r813, %r400, %r812;
	add.s32 	%r814, %r813, %r399;
	add.s32 	%r815, %r814, %r808;
	add.s32 	%r409, %r815, -1894007588;
	shf.l.wrap.b32 	%r411, %r401, %r401, 30;
	shf.l.wrap.b32 	%r816, %r409, %r409, 5;
	// begin inline asm
	lop3.b32 %r404, %r405, %r411, %r407, 232;
	// end inline asm
	xor.b32  	%r817, %r756, %r796;
	xor.b32  	%r818, %r817, %r708;
	xor.b32  	%r819, %r818, %r692;
	shf.l.wrap.b32 	%r820, %r819, %r819, 1;
	add.s32 	%r821, %r404, %r820;
	add.s32 	%r822, %r821, %r403;
	add.s32 	%r823, %r822, %r816;
	add.s32 	%r413, %r823, -1894007588;
	shf.l.wrap.b32 	%r415, %r405, %r405, 30;
	shf.l.wrap.b32 	%r824, %r413, %r413, 5;
	// begin inline asm
	lop3.b32 %r408, %r409, %r415, %r411, 232;
	// end inline asm
	xor.b32  	%r825, %r764, %r804;
	xor.b32  	%r826, %r825, %r716;
	xor.b32  	%r827, %r826, %r700;
	shf.l.wrap.b32 	%r828, %r827, %r827, 1;
	add.s32 	%r829, %r408, %r828;
	add.s32 	%r830, %r829, %r407;
	add.s32 	%r831, %r830, %r824;
	add.s32 	%r417, %r831, -1894007588;
	shf.l.wrap.b32 	%r419, %r409, %r409, 30;
	shf.l.wrap.b32 	%r832, %r417, %r417, 5;
	// begin inline asm
	lop3.b32 %r412, %r413, %r419, %r415, 232;
	// end inline asm
	xor.b32  	%r833, %r772, %r812;
	xor.b32  	%r834, %r833, %r724;
	xor.b32  	%r835, %r834, %r708;
	shf.l.wrap.b32 	%r836, %r835, %r835, 1;
	add.s32 	%r837, %r412, %r836;
	add.s32 	%r838, %r837, %r411;
	add.s32 	%r839, %r838, %r832;
	add.s32 	%r421, %r839, -1894007588;
	shf.l.wrap.b32 	%r423, %r413, %r413, 30;
	shf.l.wrap.b32 	%r840, %r421, %r421, 5;
	// begin inline asm
	lop3.b32 %r416, %r417, %r423, %r419, 232;
	// end inline asm
	xor.b32  	%r841, %r780, %r820;
	xor.b32  	%r842, %r841, %r732;
	xor.b32  	%r843, %r842, %r716;
	shf.l.wrap.b32 	%r844, %r843, %r843, 1;
	add.s32 	%r845, %r416, %r844;
	add.s32 	%r846, %r845, %r415;
	add.s32 	%r847, %r846, %r840;
	add.s32 	%r425, %r847, -1894007588;
	shf.l.wrap.b32 	%r427, %r417, %r417, 30;
	shf.l.wrap.b32 	%r848, %r425, %r425, 5;
	// begin inline asm
	lop3.b32 %r420, %r421, %r427, %r423, 232;
	// end inline asm
	xor.b32  	%r849, %r788, %r828;
	xor.b32  	%r850, %r849, %r740;
	xor.b32  	%r851, %r850, %r724;
	shf.l.wrap.b32 	%r852, %r851, %r851, 1;
	add.s32 	%r853, %r420, %r852;
	add.s32 	%r854, %r853, %r419;
	add.s32 	%r855, %r854, %r848;
	add.s32 	%r429, %r855, -1894007588;
	shf.l.wrap.b32 	%r431, %r421, %r421, 30;
	shf.l.wrap.b32 	%r856, %r429, %r429, 5;
	// begin inline asm
	lop3.b32 %r424, %r425, %r431, %r427, 232;
	// end inline asm
	xor.b32  	%r857, %r796, %r836;
	xor.b32  	%r858, %r857, %r748;
	xor.b32  	%r859, %r858, %r732;
	shf.l.wrap.b32 	%r860, %r859, %r859, 1;
	add.s32 	%r861, %r424, %r860;
	add.s32 	%r862, %r861, %r423;
	add.s32 	%r863, %r862, %r856;
	add.s32 	%r433, %r863, -1894007588;
	shf.l.wrap.b32 	%r435, %r425, %r425, 30;
	shf.l.wrap.b32 	%r864, %r433, %r433, 5;
	// begin inline asm
	lop3.b32 %r428, %r429, %r435, %r431, 232;
	// end inline asm
	xor.b32  	%r865, %r804, %r844;
	xor.b32  	%r866, %r865, %r756;
	xor.b32  	%r867, %r866, %r740;
	shf.l.wrap.b32 	%r868, %r867, %r867, 1;
	add.s32 	%r869, %r428, %r868;
	add.s32 	%r870, %r869, %r427;
	add.s32 	%r871, %r870, %r864;
	add.s32 	%r437, %r871, -1894007588;
	shf.l.wrap.b32 	%r439, %r429, %r429, 30;
	shf.l.wrap.b32 	%r872, %r437, %r437, 5;
	// begin inline asm
	lop3.b32 %r432, %r433, %r439, %r435, 232;
	// end inline asm
	xor.b32  	%r873, %r812, %r852;
	xor.b32  	%r874, %r873, %r764;
	xor.b32  	%r875, %r874, %r748;
	shf.l.wrap.b32 	%r876, %r875, %r875, 1;
	add.s32 	%r877, %r432, %r876;
	add.s32 	%r878, %r877, %r431;
	add.s32 	%r879, %r878, %r872;
	add.s32 	%r441, %r879, -1894007588;
	shf.l.wrap.b32 	%r443, %r433, %r433, 30;
	shf.l.wrap.b32 	%r880, %r441, %r441, 5;
	// begin inline asm
	lop3.b32 %r436, %r437, %r443, %r439, 232;
	// end inline asm
	xor.b32  	%r881, %r820, %r860;
	xor.b32  	%r882, %r881, %r772;
	xor.b32  	%r883, %r882, %r756;
	shf.l.wrap.b32 	%r884, %r883, %r883, 1;
	add.s32 	%r885, %r436, %r884;
	add.s32 	%r886, %r885, %r435;
	add.s32 	%r887, %r886, %r880;
	add.s32 	%r445, %r887, -1894007588;
	shf.l.wrap.b32 	%r447, %r437, %r437, 30;
	shf.l.wrap.b32 	%r888, %r445, %r445, 5;
	// begin inline asm
	lop3.b32 %r440, %r441, %r447, %r443, 232;
	// end inline asm
	xor.b32  	%r889, %r828, %r868;
	xor.b32  	%r890, %r889, %r780;
	xor.b32  	%r891, %r890, %r764;
	shf.l.wrap.b32 	%r892, %r891, %r891, 1;
	add.s32 	%r893, %r440, %r892;
	add.s32 	%r894, %r893, %r439;
	add.s32 	%r895, %r894, %r888;
	add.s32 	%r449, %r895, -1894007588;
	shf.l.wrap.b32 	%r451, %r441, %r441, 30;
	shf.l.wrap.b32 	%r896, %r449, %r449, 5;
	// begin inline asm
	lop3.b32 %r444, %r445, %r451, %r447, 232;
	// end inline asm
	xor.b32  	%r897, %r836, %r876;
	xor.b32  	%r898, %r897, %r788;
	xor.b32  	%r899, %r898, %r772;
	shf.l.wrap.b32 	%r900, %r899, %r899, 1;
	add.s32 	%r901, %r444, %r900;
	add.s32 	%r902, %r901, %r443;
	add.s32 	%r903, %r902, %r896;
	add.s32 	%r453, %r903, -1894007588;
	shf.l.wrap.b32 	%r455, %r445, %r445, 30;
	shf.l.wrap.b32 	%r904, %r453, %r453, 5;
	// begin inline asm
	lop3.b32 %r448, %r449, %r455, %r451, 232;
	// end inline asm
	xor.b32  	%r905, %r844, %r884;
	xor.b32  	%r906, %r905, %r796;
	xor.b32  	%r907, %r906, %r780;
	shf.l.wrap.b32 	%r908, %r907, %r907, 1;
	add.s32 	%r909, %r448, %r908;
	add.s32 	%r910, %r909, %r447;
	add.s32 	%r911, %r910, %r904;
	add.s32 	%r457, %r911, -1894007588;
	shf.l.wrap.b32 	%r459, %r449, %r449, 30;
	shf.l.wrap.b32 	%r912, %r457, %r457, 5;
	// begin inline asm
	lop3.b32 %r452, %r453, %r459, %r455, 150;
	// end inline asm
	xor.b32  	%r913, %r852, %r892;
	xor.b32  	%r914, %r913, %r804;
	xor.b32  	%r915, %r914, %r788;
	shf.l.wrap.b32 	%r916, %r915, %r915, 1;
	add.s32 	%r917, %r452, %r916;
	add.s32 	%r918, %r917, %r451;
	add.s32 	%r919, %r918, %r912;
	add.s32 	%r461, %r919, -899497514;
	shf.l.wrap.b32 	%r463, %r453, %r453, 30;
	shf.l.wrap.b32 	%r920, %r461, %r461, 5;
	// begin inline asm
	lop3.b32 %r456, %r457, %r463, %r459, 150;
	// end inline asm
	xor.b32  	%r921, %r860, %r900;
	xor.b32  	%r922, %r921, %r812;
	xor.b32  	%r923, %r922, %r796;
	shf.l.wrap.b32 	%r924, %r923, %r923, 1;
	add.s32 	%r925, %r456, %r924;
	add.s32 	%r926, %r925, %r455;
	add.s32 	%r927, %r926, %r920;
	add.s32 	%r465, %r927, -899497514;
	shf.l.wrap.b32 	%r467, %r457, %r457, 30;
	shf.l.wrap.b32 	%r928, %r465, %r465, 5;
	// begin inline asm
	lop3.b32 %r460, %r461, %r467, %r463, 150;
	// end inline asm
	xor.b32  	%r929, %r868, %r908;
	xor.b32  	%r930, %r929, %r820;
	xor.b32  	%r931, %r930, %r804;
	shf.l.wrap.b32 	%r932, %r931, %r931, 1;
	add.s32 	%r933, %r460, %r932;
	add.s32 	%r934, %r933, %r459;
	add.s32 	%r935, %r934, %r928;
	add.s32 	%r469, %r935, -899497514;
	shf.l.wrap.b32 	%r471, %r461, %r461, 30;
	shf.l.wrap.b32 	%r936, %r469, %r469, 5;
	// begin inline asm
	lop3.b32 %r464, %r465, %r471, %r467, 150;
	// end inline asm
	xor.b32  	%r937, %r876, %r916;
	xor.b32  	%r938, %r937, %r828;
	xor.b32  	%r939, %r938, %r812;
	shf.l.wrap.b32 	%r940, %r939, %r939, 1;
	add.s32 	%r941, %r464, %r940;
	add.s32 	%r942, %r941, %r463;
	add.s32 	%r943, %r942, %r936;
	add.s32 	%r473, %r943, -899497514;
	shf.l.wrap.b32 	%r475, %r465, %r465, 30;
	shf.l.wrap.b32 	%r944, %r473, %r473, 5;
	// begin inline asm
	lop3.b32 %r468, %r469, %r475, %r471, 150;
	// end inline asm
	xor.b32  	%r945, %r884, %r924;
	xor.b32  	%r946, %r945, %r836;
	xor.b32  	%r947, %r946, %r820;
	shf.l.wrap.b32 	%r948, %r947, %r947, 1;
	add.s32 	%r949, %r468, %r467;
	add.s32 	%r950, %r949, %r948;
	add.s32 	%r951, %r950, %r944;
	add.s32 	%r477, %r951, -899497514;
	shf.l.wrap.b32 	%r479, %r469, %r469, 30;
	shf.l.wrap.b32 	%r952, %r477, %r477, 5;
	// begin inline asm
	lop3.b32 %r472, %r473, %r479, %r475, 150;
	// end inline asm
	xor.b32  	%r953, %r892, %r932;
	xor.b32  	%r954, %r953, %r844;
	xor.b32  	%r955, %r954, %r828;
	shf.l.wrap.b32 	%r956, %r955, %r955, 1;
	add.s32 	%r957, %r472, %r471;
	add.s32 	%r958, %r957, %r956;
	add.s32 	%r959, %r958, %r952;
	add.s32 	%r481, %r959, -899497514;
	shf.l.wrap.b32 	%r483, %r473, %r473, 30;
	shf.l.wrap.b32 	%r960, %r481, %r481, 5;
	// begin inline asm
	lop3.b32 %r476, %r477, %r483, %r479, 150;
	// end inline asm
	xor.b32  	%r961, %r900, %r940;
	xor.b32  	%r962, %r961, %r852;
	xor.b32  	%r963, %r962, %r836;
	shf.l.wrap.b32 	%r964, %r963, %r963, 1;
	add.s32 	%r965, %r476, %r475;
	add.s32 	%r966, %r965, %r964;
	add.s32 	%r967, %r966, %r960;
	add.s32 	%r485, %r967, -899497514;
	shf.l.wrap.b32 	%r487, %r477, %r477, 30;
	shf.l.wrap.b32 	%r968, %r485, %r485, 5;
	// begin inline asm
	lop3.b32 %r480, %r481, %r487, %r483, 150;
	// end inline asm
	xor.b32  	%r969, %r908, %r948;
	xor.b32  	%r970, %r969, %r860;
	xor.b32  	%r971, %r970, %r844;
	shf.l.wrap.b32 	%r972, %r971, %r971, 1;
	add.s32 	%r973, %r480, %r479;
	add.s32 	%r974, %r973, %r972;
	add.s32 	%r975, %r974, %r968;
	add.s32 	%r489, %r975, -899497514;
	shf.l.wrap.b32 	%r491, %r481, %r481, 30;
	shf.l.wrap.b32 	%r976, %r489, %r489, 5;
	// begin inline asm
	lop3.b32 %r484, %r485, %r491, %r487, 150;
	// end inline asm
	xor.b32  	%r977, %r916, %r956;
	xor.b32  	%r978, %r977, %r868;
	xor.b32  	%r979, %r978, %r852;
	shf.l.wrap.b32 	%r980, %r979, %r979, 1;
	add.s32 	%r981, %r484, %r483;
	add.s32 	%r982, %r981, %r980;
	add.s32 	%r983, %r982, %r976;
	add.s32 	%r493, %r983, -899497514;
	shf.l.wrap.b32 	%r495, %r485, %r485, 30;
	shf.l.wrap.b32 	%r984, %r493, %r493, 5;
	// begin inline asm
	lop3.b32 %r488, %r489, %r495, %r491, 150;
	// end inline asm
	xor.b32  	%r985, %r924, %r964;
	xor.b32  	%r986, %r985, %r876;
	xor.b32  	%r987, %r986, %r860;
	shf.l.wrap.b32 	%r988, %r987, %r987, 1;
	add.s32 	%r989, %r488, %r487;
	add.s32 	%r990, %r989, %r988;
	add.s32 	%r991, %r990, %r984;
	add.s32 	%r497, %r991, -899497514;
	shf.l.wrap.b32 	%r499, %r489, %r489, 30;
	shf.l.wrap.b32 	%r992, %r497, %r497, 5;
	// begin inline asm
	lop3.b32 %r492, %r493, %r499, %r495, 150;
	// end inline asm
	xor.b32  	%r993, %r932, %r972;
	xor.b32  	%r994, %r993, %r884;
	xor.b32  	%r995, %r994, %r868;
	shf.l.wrap.b32 	%r996, %r995, %r995, 1;
	add.s32 	%r997, %r491, %r492;
	add.s32 	%r998, %r997, %r996;
	add.s32 	%r999, %r998, %r992;
	add.s32 	%r501, %r999, -899497514;
	shf.l.wrap.b32 	%r503, %r493, %r493, 30;
	shf.l.wrap.b32 	%r1000, %r501, %r501, 5;
	// begin inline asm
	lop3.b32 %r496, %r497, %r503, %r499, 150;
	// end inline asm
	xor.b32  	%r1001, %r940, %r980;
	xor.b32  	%r1002, %r1001, %r892;
	xor.b32  	%r1003, %r1002, %r876;
	shf.l.wrap.b32 	%r1004, %r1003, %r1003, 1;
	add.s32 	%r1005, %r495, %r496;
	add.s32 	%r1006, %r1005, %r1004;
	add.s32 	%r1007, %r1006, %r1000;
	add.s32 	%r505, %r1007, -899497514;
	shf.l.wrap.b32 	%r507, %r497, %r497, 30;
	shf.l.wrap.b32 	%r1008, %r505, %r505, 5;
	// begin inline asm
	lop3.b32 %r500, %r501, %r507, %r503, 150;
	// end inline asm
	xor.b32  	%r1009, %r948, %r988;
	xor.b32  	%r1010, %r1009, %r900;
	xor.b32  	%r1011, %r1010, %r884;
	shf.l.wrap.b32 	%r1012, %r1011, %r1011, 1;
	add.s32 	%r1013, %r499, %r500;
	add.s32 	%r1014, %r1013, %r1012;
	add.s32 	%r1015, %r1014, %r1008;
	add.s32 	%r509, %r1015, -899497514;
	shf.l.wrap.b32 	%r511, %r501, %r501, 30;
	shf.l.wrap.b32 	%r1016, %r509, %r509, 5;
	// begin inline asm
	lop3.b32 %r504, %r505, %r511, %r507, 150;
	// end inline asm
	xor.b32  	%r1017, %r956, %r996;
	xor.b32  	%r1018, %r1017, %r908;
	xor.b32  	%r1019, %r1018, %r892;
	shf.l.wrap.b32 	%r1020, %r1019, %r1019, 1;
	add.s32 	%r1021, %r503, %r504;
	add.s32 	%r1022, %r1021, %r1020;
	add.s32 	%r1023, %r1022, %r1016;
	add.s32 	%r513, %r1023, -899497514;
	shf.l.wrap.b32 	%r515, %r505, %r505, 30;
	shf.l.wrap.b32 	%r1024, %r513, %r513, 5;
	// begin inline asm
	lop3.b32 %r508, %r509, %r515, %r511, 150;
	// end inline asm
	xor.b32  	%r1025, %r964, %r1004;
	xor.b32  	%r1026, %r1025, %r916;
	xor.b32  	%r1027, %r1026, %r900;
	shf.l.wrap.b32 	%r1028, %r1027, %r1027, 1;
	add.s32 	%r1029, %r507, %r508;
	add.s32 	%r1030, %r1029, %r1028;
	add.s32 	%r1031, %r1030, %r1024;
	add.s32 	%r517, %r1031, -899497514;
	shf.l.wrap.b32 	%r519, %r509, %r509, 30;
	shf.l.wrap.b32 	%r1032, %r517, %r517, 5;
	// begin inline asm
	lop3.b32 %r512, %r513, %r519, %r515, 150;
	// end inline asm
	xor.b32  	%r1033, %r972, %r1012;
	xor.b32  	%r1034, %r1033, %r924;
	xor.b32  	%r1035, %r1034, %r908;
	shf.l.wrap.b32 	%r1036, %r1035, %r1035, 1;
	add.s32 	%r1037, %r511, %r512;
	add.s32 	%r1038, %r1037, %r1036;
	add.s32 	%r1039, %r1038, %r1032;
	add.s32 	%r521, %r1039, -899497514;
	shf.l.wrap.b32 	%r523, %r513, %r513, 30;
	shf.l.wrap.b32 	%r1040, %r521, %r521, 5;
	// begin inline asm
	lop3.b32 %r516, %r517, %r523, %r519, 150;
	// end inline asm
	xor.b32  	%r1041, %r980, %r1020;
	xor.b32  	%r1042, %r1041, %r932;
	xor.b32  	%r1043, %r1042, %r916;
	shf.l.wrap.b32 	%r1044, %r1043, %r1043, 1;
	add.s32 	%r1045, %r515, %r516;
	add.s32 	%r1046, %r1045, %r1044;
	add.s32 	%r1047, %r1046, %r1040;
	add.s32 	%r525, %r1047, -899497514;
	shf.l.wrap.b32 	%r527, %r517, %r517, 30;
	shf.l.wrap.b32 	%r1048, %r525, %r525, 5;
	// begin inline asm
	lop3.b32 %r520, %r521, %r527, %r523, 150;
	// end inline asm
	xor.b32  	%r1049, %r988, %r1028;
	xor.b32  	%r1050, %r1049, %r940;
	xor.b32  	%r1051, %r1050, %r924;
	shf.l.wrap.b32 	%r1052, %r1051, %r1051, 1;
	add.s32 	%r1053, %r519, %r520;
	add.s32 	%r1054, %r1053, %r1052;
	add.s32 	%r1055, %r1054, %r1048;
	add.s32 	%r529, %r1055, -899497514;
	shf.l.wrap.b32 	%r531, %r521, %r521, 30;
	shf.l.wrap.b32 	%r1056, %r529, %r529, 5;
	// begin inline asm
	lop3.b32 %r524, %r525, %r531, %r527, 150;
	// end inline asm
	xor.b32  	%r1057, %r996, %r1036;
	xor.b32  	%r1058, %r1057, %r948;
	xor.b32  	%r1059, %r1058, %r932;
	shf.l.wrap.b32 	%r1060, %r1059, %r1059, 1;
	add.s32 	%r1061, %r523, %r524;
	add.s32 	%r1062, %r1061, %r1060;
	add.s32 	%r1063, %r1062, %r1056;
	add.s32 	%r1064, %r1063, -899497514;
	shf.l.wrap.b32 	%r530, %r525, %r525, 30;
	shf.l.wrap.b32 	%r1065, %r1064, %r1064, 5;
	// begin inline asm
	lop3.b32 %r528, %r529, %r530, %r531, 150;
	// end inline asm
	xor.b32  	%r1066, %r1004, %r1044;
	xor.b32  	%r1067, %r1066, %r956;
	xor.b32  	%r1068, %r1067, %r940;
	shf.l.wrap.b32 	%r1069, %r1068, %r1068, 1;
	shf.l.wrap.b32 	%r1070, %r529, %r529, 30;
	add.s32 	%r1071, %r527, %r528;
	add.s32 	%r1072, %r1071, %r1069;
	add.s32 	%r1073, %r1072, %r1065;
	add.s32 	%r9571, %r1073, 833086679;
	add.s32 	%r9570, %r1063, -1171231393;
	add.s32 	%r9569, %r1070, -1732584194;
	add.s32 	%r9568, %r530, 271733878;
	add.s32 	%r9567, %r531, -1009589776;
	add.s32 	%r9572, %r9572, 1;
	setp.lt.u32 	%p3, %r9572, %r7;
	@%p3 bra 	$L__BB3_2;

	add.s32 	%r9571, %r1073, 833086679;
	add.s32 	%r9570, %r1063, -1171231393;
	add.s32 	%r9568, %r530, 271733878;
	add.s32 	%r9550, %r1073, 833086679;
	st.local.u32 	[%rd1+20], %r9550;
	add.s32 	%r9551, %r1063, -1171231393;
	st.local.v2.u32 	[%rd1+24], {%r9551, %r9569};
	add.s32 	%r9552, %r530, 271733878;
	st.local.v2.u32 	[%rd1+32], {%r9552, %r9567};

$L__BB3_4:
	ld.param.u64 	%rd101, [Generate2010key_param_2];
	add.s64 	%rd100, %rd101, 32;
	mov.u32 	%r1075, -271733879;
	shf.l.wrap.b32 	%r1397, %r1075, %r1075, 30;
	add.s32 	%r31, %r1397, 1518500249;
	mov.u32 	%r1079, 1732584193;
	shf.l.wrap.b32 	%r1401, %r1079, %r1079, 30;
	add.s32 	%r32, %r1401, 1518500249;
	shf.l.wrap.b32 	%r1708, %r1079, %r1079, 5;
	mov.u32 	%r1081, -1732584194;
	mov.u32 	%r1077, 271733878;
	// begin inline asm
	lop3.b32 %r1074, %r1075, %r1081, %r1077, 202;
	// end inline asm
	add.s32 	%r1709, %r1708, %r1074;
	add.s32 	%r1710, %r9571, %r1709;
	add.s32 	%r1083, %r1710, 508910473;
	shf.l.wrap.b32 	%r1711, %r1083, %r1083, 5;
	// begin inline asm
	lop3.b32 %r1078, %r1079, %r1397, %r1081, 202;
	// end inline asm
	add.s32 	%r34, %r1078, 1790234127;
	add.s32 	%r1712, %r34, %r9570;
	add.s32 	%r1087, %r1712, %r1711;
	shf.l.wrap.b32 	%r1713, %r1087, %r1087, 5;
	// begin inline asm
	lop3.b32 %r1082, %r1083, %r1401, %r1397, 202;
	// end inline asm
	add.s32 	%r1714, %r1082, %r9569;
	add.s32 	%r1715, %r1714, %r1713;
	add.s32 	%r1091, %r1715, -214083945;
	shf.l.wrap.b32 	%r1093, %r1083, %r1083, 30;
	shf.l.wrap.b32 	%r1716, %r1091, %r1091, 5;
	// begin inline asm
	lop3.b32 %r1086, %r1087, %r1093, %r1401, 202;
	// end inline asm
	add.s32 	%r1717, %r31, %r1086;
	add.s32 	%r1718, %r1717, %r9568;
	add.s32 	%r1095, %r1718, %r1716;
	shf.l.wrap.b32 	%r1097, %r1087, %r1087, 30;
	shf.l.wrap.b32 	%r1719, %r1095, %r1095, 5;
	// begin inline asm
	lop3.b32 %r1090, %r1091, %r1097, %r1093, 202;
	// end inline asm
	add.s32 	%r1720, %r32, %r1090;
	add.s32 	%r1721, %r1720, %r9567;
	add.s32 	%r1099, %r1721, %r1719;
	shf.l.wrap.b32 	%r1101, %r1091, %r1091, 30;
	shf.l.wrap.b32 	%r1722, %r1099, %r1099, 5;
	// begin inline asm
	lop3.b32 %r1094, %r1095, %r1101, %r1097, 202;
	// end inline asm
	add.s32 	%r1723, %r1093, %r1094;
	add.s32 	%r1724, %r1723, %r1722;
	add.s32 	%r1103, %r1724, 1495944207;
	shf.l.wrap.b32 	%r1105, %r1095, %r1095, 30;
	shf.l.wrap.b32 	%r1725, %r1103, %r1103, 5;
	// begin inline asm
	lop3.b32 %r1098, %r1099, %r1105, %r1101, 202;
	// end inline asm
	add.s32 	%r1726, %r1097, %r1098;
	add.s32 	%r1727, %r1726, %r1725;
	add.s32 	%r1107, %r1727, -1781655534;
	shf.l.wrap.b32 	%r1109, %r1099, %r1099, 30;
	shf.l.wrap.b32 	%r1728, %r1107, %r1107, 5;
	// begin inline asm
	lop3.b32 %r1102, %r1103, %r1109, %r1105, 202;
	// end inline asm
	add.s32 	%r1729, %r1102, %r1101;
	add.s32 	%r1730, %r1729, 1518500249;
	xor.b32  	%r1731, %r1730, -2147483648;
	add.s32 	%r1111, %r1731, %r1728;
	shf.l.wrap.b32 	%r1113, %r1103, %r1103, 30;
	shf.l.wrap.b32 	%r1732, %r1111, %r1111, 5;
	// begin inline asm
	lop3.b32 %r1106, %r1107, %r1113, %r1109, 202;
	// end inline asm
	add.s32 	%r1733, %r1106, %r1105;
	add.s32 	%r1734, %r1733, %r1732;
	add.s32 	%r1115, %r1734, 1518500249;
	shf.l.wrap.b32 	%r1117, %r1107, %r1107, 30;
	shf.l.wrap.b32 	%r1735, %r1115, %r1115, 5;
	// begin inline asm
	lop3.b32 %r1110, %r1111, %r1117, %r1113, 202;
	// end inline asm
	add.s32 	%r1736, %r1110, %r1109;
	add.s32 	%r1737, %r1736, %r1735;
	add.s32 	%r1119, %r1737, 1518500249;
	shf.l.wrap.b32 	%r1121, %r1111, %r1111, 30;
	shf.l.wrap.b32 	%r1738, %r1119, %r1119, 5;
	// begin inline asm
	lop3.b32 %r1114, %r1115, %r1121, %r1117, 202;
	// end inline asm
	add.s32 	%r1739, %r1114, %r1113;
	add.s32 	%r1740, %r1739, %r1738;
	add.s32 	%r1123, %r1740, 1518500249;
	shf.l.wrap.b32 	%r1125, %r1115, %r1115, 30;
	shf.l.wrap.b32 	%r1741, %r1123, %r1123, 5;
	// begin inline asm
	lop3.b32 %r1118, %r1119, %r1125, %r1121, 202;
	// end inline asm
	add.s32 	%r1742, %r1118, %r1117;
	add.s32 	%r1743, %r1742, %r1741;
	add.s32 	%r1127, %r1743, 1518500249;
	shf.l.wrap.b32 	%r1129, %r1119, %r1119, 30;
	shf.l.wrap.b32 	%r1744, %r1127, %r1127, 5;
	// begin inline asm
	lop3.b32 %r1122, %r1123, %r1129, %r1125, 202;
	// end inline asm
	add.s32 	%r1745, %r1122, %r1121;
	add.s32 	%r1746, %r1745, %r1744;
	add.s32 	%r1131, %r1746, 1518500249;
	shf.l.wrap.b32 	%r1133, %r1123, %r1123, 30;
	shf.l.wrap.b32 	%r1747, %r1131, %r1131, 5;
	// begin inline asm
	lop3.b32 %r1126, %r1127, %r1133, %r1129, 202;
	// end inline asm
	add.s32 	%r1748, %r1126, %r1125;
	add.s32 	%r1749, %r1748, %r1747;
	add.s32 	%r1135, %r1749, 1518500249;
	shf.l.wrap.b32 	%r1137, %r1127, %r1127, 30;
	shf.l.wrap.b32 	%r1750, %r1135, %r1135, 5;
	// begin inline asm
	lop3.b32 %r1130, %r1131, %r1137, %r1133, 202;
	// end inline asm
	add.s32 	%r1751, %r1130, %r1129;
	add.s32 	%r1752, %r1751, %r1750;
	add.s32 	%r1139, %r1752, 1518500249;
	shf.l.wrap.b32 	%r1141, %r1131, %r1131, 30;
	shf.l.wrap.b32 	%r1753, %r1139, %r1139, 5;
	// begin inline asm
	lop3.b32 %r1134, %r1135, %r1141, %r1137, 202;
	// end inline asm
	add.s32 	%r1754, %r1134, %r1133;
	add.s32 	%r1755, %r1754, %r1753;
	add.s32 	%r1143, %r1755, 1518500473;
	shf.l.wrap.b32 	%r1145, %r1135, %r1135, 30;
	shf.l.wrap.b32 	%r1756, %r1143, %r1143, 5;
	// begin inline asm
	lop3.b32 %r1138, %r1139, %r1145, %r1141, 202;
	// end inline asm
	xor.b32  	%r1757, %r9569, %r9571;
	shf.l.wrap.b32 	%r1758, %r1757, %r1757, 1;
	add.s32 	%r1759, %r1138, %r1758;
	add.s32 	%r1760, %r1759, %r1137;
	add.s32 	%r1761, %r1760, %r1756;
	add.s32 	%r1147, %r1761, 1518500249;
	shf.l.wrap.b32 	%r1149, %r1139, %r1139, 30;
	shf.l.wrap.b32 	%r1762, %r1147, %r1147, 5;
	// begin inline asm
	lop3.b32 %r1142, %r1143, %r1149, %r1145, 202;
	// end inline asm
	xor.b32  	%r1763, %r9568, %r9570;
	shf.l.wrap.b32 	%r1764, %r1763, %r1763, 1;
	add.s32 	%r1765, %r1142, %r1764;
	add.s32 	%r1766, %r1765, %r1141;
	add.s32 	%r1767, %r1766, %r1762;
	add.s32 	%r1151, %r1767, 1518500249;
	shf.l.wrap.b32 	%r1153, %r1143, %r1143, 30;
	shf.l.wrap.b32 	%r1768, %r1151, %r1151, 5;
	// begin inline asm
	lop3.b32 %r1146, %r1147, %r1153, %r1149, 202;
	// end inline asm
	xor.b32  	%r1769, %r9567, %r9569;
	xor.b32  	%r1770, %r1769, 224;
	shf.l.wrap.b32 	%r1771, %r1770, %r1770, 1;
	add.s32 	%r1772, %r1146, %r1771;
	add.s32 	%r1773, %r1772, %r1145;
	add.s32 	%r1774, %r1773, %r1768;
	add.s32 	%r1155, %r1774, 1518500249;
	shf.l.wrap.b32 	%r1157, %r1147, %r1147, 30;
	shf.l.wrap.b32 	%r1775, %r1155, %r1155, 5;
	// begin inline asm
	lop3.b32 %r1150, %r1151, %r1157, %r1153, 202;
	// end inline asm
	xor.b32  	%r1776, %r1758, %r9568;
	xor.b32  	%r1777, %r1776, -22556042;
	shf.l.wrap.b32 	%r1778, %r1777, %r1777, 1;
	add.s32 	%r1779, %r1150, %r1778;
	add.s32 	%r1780, %r1779, %r1149;
	add.s32 	%r1781, %r1780, %r1775;
	add.s32 	%r1159, %r1781, 1518500249;
	shf.l.wrap.b32 	%r1161, %r1151, %r1151, 30;
	shf.l.wrap.b32 	%r1782, %r1159, %r1159, 5;
	// begin inline asm
	lop3.b32 %r1154, %r1155, %r1161, %r1157, 150;
	// end inline asm
	xor.b32  	%r1783, %r1764, %r9567;
	xor.b32  	%r1784, %r1783, 994811513;
	shf.l.wrap.b32 	%r1785, %r1784, %r1784, 1;
	add.s32 	%r1786, %r1154, %r1785;
	add.s32 	%r1787, %r1786, %r1153;
	add.s32 	%r1788, %r1787, %r1782;
	add.s32 	%r1163, %r1788, 1859775393;
	shf.l.wrap.b32 	%r1165, %r1155, %r1155, 30;
	shf.l.wrap.b32 	%r1789, %r1163, %r1163, 5;
	// begin inline asm
	lop3.b32 %r1158, %r1159, %r1165, %r1161, 150;
	// end inline asm
	xor.b32  	%r1790, %r1771, 2124927606;
	shf.l.wrap.b32 	%r1791, %r1790, %r1790, 1;
	add.s32 	%r1792, %r1158, %r1791;
	add.s32 	%r1793, %r1792, %r1157;
	add.s32 	%r1794, %r1793, %r1789;
	add.s32 	%r1167, %r1794, 1859775393;
	shf.l.wrap.b32 	%r1169, %r1159, %r1159, 30;
	shf.l.wrap.b32 	%r1795, %r1167, %r1167, 5;
	// begin inline asm
	lop3.b32 %r1162, %r1163, %r1169, %r1165, 150;
	// end inline asm
	xor.b32  	%r1796, %r1778, 994811513;
	shf.l.wrap.b32 	%r1797, %r1796, %r1796, 1;
	add.s32 	%r1798, %r1162, %r1797;
	add.s32 	%r1799, %r1798, %r1161;
	add.s32 	%r1800, %r1799, %r1795;
	add.s32 	%r1171, %r1800, 1859775393;
	shf.l.wrap.b32 	%r1173, %r1163, %r1163, 30;
	shf.l.wrap.b32 	%r1801, %r1171, %r1171, 5;
	// begin inline asm
	lop3.b32 %r1166, %r1167, %r1173, %r1169, 150;
	// end inline asm
	xor.b32  	%r1802, %r1785, -2147483424;
	shf.l.wrap.b32 	%r1803, %r1802, %r1802, 1;
	add.s32 	%r1804, %r1166, %r1803;
	add.s32 	%r1805, %r1804, %r1165;
	add.s32 	%r1806, %r1805, %r1801;
	add.s32 	%r1175, %r1806, 1859775393;
	shf.l.wrap.b32 	%r1177, %r1167, %r1167, 30;
	shf.l.wrap.b32 	%r1807, %r1175, %r1175, 5;
	// begin inline asm
	lop3.b32 %r1170, %r1171, %r1177, %r1173, 150;
	// end inline asm
	xor.b32  	%r1808, %r1791, %r1758;
	shf.l.wrap.b32 	%r1809, %r1808, %r1808, 1;
	add.s32 	%r1810, %r1170, %r1809;
	add.s32 	%r1811, %r1810, %r1169;
	add.s32 	%r1812, %r1811, %r1807;
	add.s32 	%r1179, %r1812, 1859775393;
	shf.l.wrap.b32 	%r1181, %r1171, %r1171, 30;
	shf.l.wrap.b32 	%r1813, %r1179, %r1179, 5;
	// begin inline asm
	lop3.b32 %r1174, %r1175, %r1181, %r1177, 150;
	// end inline asm
	xor.b32  	%r1814, %r1797, %r1764;
	shf.l.wrap.b32 	%r1815, %r1814, %r1814, 1;
	add.s32 	%r1816, %r1174, %r1815;
	add.s32 	%r1817, %r1816, %r1173;
	add.s32 	%r1818, %r1817, %r1813;
	add.s32 	%r1183, %r1818, 1859775393;
	shf.l.wrap.b32 	%r1185, %r1175, %r1175, 30;
	shf.l.wrap.b32 	%r1819, %r1183, %r1183, 5;
	// begin inline asm
	lop3.b32 %r1178, %r1179, %r1185, %r1181, 150;
	// end inline asm
	xor.b32  	%r1820, %r1803, %r1771;
	shf.l.wrap.b32 	%r1821, %r1820, %r1820, 1;
	add.s32 	%r1822, %r1178, %r1821;
	add.s32 	%r1823, %r1822, %r1177;
	add.s32 	%r1824, %r1823, %r1819;
	add.s32 	%r1187, %r1824, 1859775393;
	shf.l.wrap.b32 	%r1189, %r1179, %r1179, 30;
	shf.l.wrap.b32 	%r1825, %r1187, %r1187, 5;
	// begin inline asm
	lop3.b32 %r1182, %r1183, %r1189, %r1185, 150;
	// end inline asm
	xor.b32  	%r1826, %r1809, %r1778;
	shf.l.wrap.b32 	%r1827, %r1826, %r1826, 1;
	add.s32 	%r1828, %r1182, %r1827;
	add.s32 	%r1829, %r1828, %r1181;
	add.s32 	%r1830, %r1829, %r1825;
	add.s32 	%r1191, %r1830, 1859775393;
	shf.l.wrap.b32 	%r1193, %r1183, %r1183, 30;
	shf.l.wrap.b32 	%r1831, %r1191, %r1191, 5;
	// begin inline asm
	lop3.b32 %r1186, %r1187, %r1193, %r1189, 150;
	// end inline asm
	xor.b32  	%r1832, %r1815, %r1785;
	shf.l.wrap.b32 	%r1833, %r1832, %r1832, 1;
	add.s32 	%r1834, %r1186, %r1833;
	add.s32 	%r1835, %r1834, %r1185;
	add.s32 	%r1836, %r1835, %r1831;
	add.s32 	%r1195, %r1836, 1859775393;
	shf.l.wrap.b32 	%r1197, %r1187, %r1187, 30;
	shf.l.wrap.b32 	%r1837, %r1195, %r1195, 5;
	// begin inline asm
	lop3.b32 %r1190, %r1191, %r1197, %r1193, 150;
	// end inline asm
	xor.b32  	%r1838, %r1821, %r1791;
	xor.b32  	%r1839, %r1838, 224;
	shf.l.wrap.b32 	%r1840, %r1839, %r1839, 1;
	add.s32 	%r1841, %r1190, %r1840;
	add.s32 	%r1842, %r1841, %r1189;
	add.s32 	%r1843, %r1842, %r1837;
	add.s32 	%r1199, %r1843, 1859775393;
	shf.l.wrap.b32 	%r1201, %r1191, %r1191, 30;
	shf.l.wrap.b32 	%r1844, %r1199, %r1199, 5;
	// begin inline asm
	lop3.b32 %r1194, %r1195, %r1201, %r1197, 150;
	// end inline asm
	xor.b32  	%r1845, %r1797, %r1758;
	xor.b32  	%r1846, %r1845, %r1827;
	shf.l.wrap.b32 	%r1847, %r1846, %r1846, 1;
	add.s32 	%r1848, %r1194, %r1847;
	add.s32 	%r1849, %r1848, %r1193;
	add.s32 	%r1850, %r1849, %r1844;
	add.s32 	%r1203, %r1850, 1859775393;
	shf.l.wrap.b32 	%r1205, %r1195, %r1195, 30;
	shf.l.wrap.b32 	%r1851, %r1203, %r1203, 5;
	// begin inline asm
	lop3.b32 %r1198, %r1199, %r1205, %r1201, 150;
	// end inline asm
	xor.b32  	%r1852, %r1803, %r1764;
	xor.b32  	%r1853, %r1852, %r1833;
	xor.b32  	%r1854, %r1853, 224;
	shf.l.wrap.b32 	%r1855, %r1854, %r1854, 1;
	add.s32 	%r1856, %r1198, %r1855;
	add.s32 	%r1857, %r1856, %r1197;
	add.s32 	%r1858, %r1857, %r1851;
	add.s32 	%r1207, %r1858, 1859775393;
	shf.l.wrap.b32 	%r1209, %r1199, %r1199, 30;
	shf.l.wrap.b32 	%r1859, %r1207, %r1207, 5;
	// begin inline asm
	lop3.b32 %r1202, %r1203, %r1209, %r1205, 150;
	// end inline asm
	xor.b32  	%r1860, %r1771, %r1758;
	xor.b32  	%r1861, %r1860, %r1809;
	xor.b32  	%r1862, %r1861, %r1840;
	shf.l.wrap.b32 	%r1863, %r1862, %r1862, 1;
	add.s32 	%r1864, %r1202, %r1863;
	add.s32 	%r1865, %r1864, %r1201;
	add.s32 	%r1866, %r1865, %r1859;
	add.s32 	%r1211, %r1866, 1859775393;
	shf.l.wrap.b32 	%r1213, %r1203, %r1203, 30;
	shf.l.wrap.b32 	%r1867, %r1211, %r1211, 5;
	// begin inline asm
	lop3.b32 %r1206, %r1207, %r1213, %r1209, 150;
	// end inline asm
	xor.b32  	%r1868, %r1778, %r1764;
	xor.b32  	%r1869, %r1868, %r1815;
	xor.b32  	%r1870, %r1869, %r1847;
	shf.l.wrap.b32 	%r1871, %r1870, %r1870, 1;
	add.s32 	%r1872, %r1206, %r1871;
	add.s32 	%r1873, %r1872, %r1205;
	add.s32 	%r1874, %r1873, %r1867;
	add.s32 	%r1215, %r1874, 1859775393;
	shf.l.wrap.b32 	%r1217, %r1207, %r1207, 30;
	shf.l.wrap.b32 	%r1875, %r1215, %r1215, 5;
	// begin inline asm
	lop3.b32 %r1210, %r1211, %r1217, %r1213, 150;
	// end inline asm
	xor.b32  	%r1876, %r1785, %r1771;
	xor.b32  	%r1877, %r1876, %r1821;
	xor.b32  	%r1878, %r1877, %r1855;
	shf.l.wrap.b32 	%r1879, %r1878, %r1878, 1;
	add.s32 	%r1880, %r1210, %r1879;
	add.s32 	%r1881, %r1880, %r1209;
	add.s32 	%r1882, %r1881, %r1875;
	add.s32 	%r1219, %r1882, 1859775393;
	shf.l.wrap.b32 	%r1221, %r1211, %r1211, 30;
	shf.l.wrap.b32 	%r1883, %r1219, %r1219, 5;
	// begin inline asm
	lop3.b32 %r1214, %r1215, %r1221, %r1217, 150;
	// end inline asm
	xor.b32  	%r1884, %r1791, %r1778;
	xor.b32  	%r1885, %r1884, %r1827;
	xor.b32  	%r1886, %r1885, %r1863;
	shf.l.wrap.b32 	%r1887, %r1886, %r1886, 1;
	add.s32 	%r1888, %r1214, %r1887;
	add.s32 	%r1889, %r1888, %r1213;
	add.s32 	%r1890, %r1889, %r1883;
	add.s32 	%r1223, %r1890, 1859775393;
	shf.l.wrap.b32 	%r1225, %r1215, %r1215, 30;
	shf.l.wrap.b32 	%r1891, %r1223, %r1223, 5;
	// begin inline asm
	lop3.b32 %r1218, %r1219, %r1225, %r1221, 150;
	// end inline asm
	xor.b32  	%r1892, %r1797, %r1785;
	xor.b32  	%r1893, %r1892, %r1833;
	xor.b32  	%r1894, %r1893, %r1871;
	shf.l.wrap.b32 	%r1895, %r1894, %r1894, 1;
	add.s32 	%r1896, %r1218, %r1895;
	add.s32 	%r1897, %r1896, %r1217;
	add.s32 	%r1898, %r1897, %r1891;
	add.s32 	%r1227, %r1898, 1859775393;
	shf.l.wrap.b32 	%r1229, %r1219, %r1219, 30;
	shf.l.wrap.b32 	%r1899, %r1227, %r1227, 5;
	// begin inline asm
	lop3.b32 %r1222, %r1223, %r1229, %r1225, 150;
	// end inline asm
	xor.b32  	%r1900, %r1803, %r1791;
	xor.b32  	%r1901, %r1900, %r1840;
	xor.b32  	%r1902, %r1901, %r1879;
	shf.l.wrap.b32 	%r1903, %r1902, %r1902, 1;
	add.s32 	%r1904, %r1222, %r1903;
	add.s32 	%r1905, %r1904, %r1221;
	add.s32 	%r1906, %r1905, %r1899;
	add.s32 	%r1231, %r1906, 1859775393;
	shf.l.wrap.b32 	%r1233, %r1223, %r1223, 30;
	shf.l.wrap.b32 	%r1907, %r1231, %r1231, 5;
	// begin inline asm
	lop3.b32 %r1226, %r1227, %r1233, %r1229, 150;
	// end inline asm
	xor.b32  	%r1908, %r1809, %r1797;
	xor.b32  	%r1909, %r1908, %r1847;
	xor.b32  	%r1910, %r1909, %r1887;
	shf.l.wrap.b32 	%r1911, %r1910, %r1910, 1;
	add.s32 	%r1912, %r1226, %r1911;
	add.s32 	%r1913, %r1912, %r1225;
	add.s32 	%r1914, %r1913, %r1907;
	add.s32 	%r1235, %r1914, 1859775393;
	shf.l.wrap.b32 	%r1237, %r1227, %r1227, 30;
	shf.l.wrap.b32 	%r1915, %r1235, %r1235, 5;
	// begin inline asm
	lop3.b32 %r1230, %r1231, %r1237, %r1233, 150;
	// end inline asm
	xor.b32  	%r1916, %r1815, %r1803;
	xor.b32  	%r1917, %r1916, %r1855;
	xor.b32  	%r1918, %r1917, %r1895;
	shf.l.wrap.b32 	%r1919, %r1918, %r1918, 1;
	add.s32 	%r1920, %r1230, %r1919;
	add.s32 	%r1921, %r1920, %r1229;
	add.s32 	%r1922, %r1921, %r1915;
	add.s32 	%r1239, %r1922, 1859775393;
	shf.l.wrap.b32 	%r1241, %r1231, %r1231, 30;
	shf.l.wrap.b32 	%r1923, %r1239, %r1239, 5;
	// begin inline asm
	lop3.b32 %r1234, %r1235, %r1241, %r1237, 232;
	// end inline asm
	xor.b32  	%r1924, %r1821, %r1809;
	xor.b32  	%r1925, %r1924, %r1863;
	xor.b32  	%r1926, %r1925, %r1903;
	shf.l.wrap.b32 	%r1927, %r1926, %r1926, 1;
	add.s32 	%r1928, %r1234, %r1927;
	add.s32 	%r1929, %r1928, %r1233;
	add.s32 	%r1930, %r1929, %r1923;
	add.s32 	%r1243, %r1930, -1894007588;
	shf.l.wrap.b32 	%r1245, %r1235, %r1235, 30;
	shf.l.wrap.b32 	%r1931, %r1243, %r1243, 5;
	// begin inline asm
	lop3.b32 %r1238, %r1239, %r1245, %r1241, 232;
	// end inline asm
	xor.b32  	%r1932, %r1827, %r1815;
	xor.b32  	%r1933, %r1932, %r1871;
	xor.b32  	%r1934, %r1933, %r1911;
	shf.l.wrap.b32 	%r1935, %r1934, %r1934, 1;
	add.s32 	%r1936, %r1238, %r1935;
	add.s32 	%r1937, %r1936, %r1237;
	add.s32 	%r1938, %r1937, %r1931;
	add.s32 	%r1247, %r1938, -1894007588;
	shf.l.wrap.b32 	%r1249, %r1239, %r1239, 30;
	shf.l.wrap.b32 	%r1939, %r1247, %r1247, 5;
	// begin inline asm
	lop3.b32 %r1242, %r1243, %r1249, %r1245, 232;
	// end inline asm
	xor.b32  	%r1940, %r1833, %r1821;
	xor.b32  	%r1941, %r1940, %r1879;
	xor.b32  	%r1942, %r1941, %r1919;
	shf.l.wrap.b32 	%r1943, %r1942, %r1942, 1;
	add.s32 	%r1944, %r1242, %r1943;
	add.s32 	%r1945, %r1944, %r1241;
	add.s32 	%r1946, %r1945, %r1939;
	add.s32 	%r1251, %r1946, -1894007588;
	shf.l.wrap.b32 	%r1253, %r1243, %r1243, 30;
	shf.l.wrap.b32 	%r1947, %r1251, %r1251, 5;
	// begin inline asm
	lop3.b32 %r1246, %r1247, %r1253, %r1249, 232;
	// end inline asm
	xor.b32  	%r1948, %r1840, %r1827;
	xor.b32  	%r1949, %r1948, %r1887;
	xor.b32  	%r1950, %r1949, %r1927;
	shf.l.wrap.b32 	%r1951, %r1950, %r1950, 1;
	add.s32 	%r1952, %r1246, %r1951;
	add.s32 	%r1953, %r1952, %r1245;
	add.s32 	%r1954, %r1953, %r1947;
	add.s32 	%r1255, %r1954, -1894007588;
	shf.l.wrap.b32 	%r1257, %r1247, %r1247, 30;
	shf.l.wrap.b32 	%r1955, %r1255, %r1255, 5;
	// begin inline asm
	lop3.b32 %r1250, %r1251, %r1257, %r1253, 232;
	// end inline asm
	xor.b32  	%r1956, %r1847, %r1833;
	xor.b32  	%r1957, %r1956, %r1895;
	xor.b32  	%r1958, %r1957, %r1935;
	shf.l.wrap.b32 	%r1959, %r1958, %r1958, 1;
	add.s32 	%r1960, %r1250, %r1959;
	add.s32 	%r1961, %r1960, %r1249;
	add.s32 	%r1962, %r1961, %r1955;
	add.s32 	%r1259, %r1962, -1894007588;
	shf.l.wrap.b32 	%r1261, %r1251, %r1251, 30;
	shf.l.wrap.b32 	%r1963, %r1259, %r1259, 5;
	// begin inline asm
	lop3.b32 %r1254, %r1255, %r1261, %r1257, 232;
	// end inline asm
	xor.b32  	%r1964, %r1855, %r1840;
	xor.b32  	%r1965, %r1964, %r1903;
	xor.b32  	%r1966, %r1965, %r1943;
	shf.l.wrap.b32 	%r1967, %r1966, %r1966, 1;
	add.s32 	%r1968, %r1254, %r1967;
	add.s32 	%r1969, %r1968, %r1253;
	add.s32 	%r1970, %r1969, %r1963;
	add.s32 	%r1263, %r1970, -1894007588;
	shf.l.wrap.b32 	%r1265, %r1255, %r1255, 30;
	shf.l.wrap.b32 	%r1971, %r1263, %r1263, 5;
	// begin inline asm
	lop3.b32 %r1258, %r1259, %r1265, %r1261, 232;
	// end inline asm
	xor.b32  	%r1972, %r1863, %r1847;
	xor.b32  	%r1973, %r1972, %r1911;
	xor.b32  	%r1974, %r1973, %r1951;
	shf.l.wrap.b32 	%r1975, %r1974, %r1974, 1;
	add.s32 	%r1976, %r1258, %r1975;
	add.s32 	%r1977, %r1976, %r1257;
	add.s32 	%r1978, %r1977, %r1971;
	add.s32 	%r1267, %r1978, -1894007588;
	shf.l.wrap.b32 	%r1269, %r1259, %r1259, 30;
	shf.l.wrap.b32 	%r1979, %r1267, %r1267, 5;
	// begin inline asm
	lop3.b32 %r1262, %r1263, %r1269, %r1265, 232;
	// end inline asm
	xor.b32  	%r1980, %r1871, %r1855;
	xor.b32  	%r1981, %r1980, %r1919;
	xor.b32  	%r1982, %r1981, %r1959;
	shf.l.wrap.b32 	%r1983, %r1982, %r1982, 1;
	add.s32 	%r1984, %r1262, %r1983;
	add.s32 	%r1985, %r1984, %r1261;
	add.s32 	%r1986, %r1985, %r1979;
	add.s32 	%r1271, %r1986, -1894007588;
	shf.l.wrap.b32 	%r1273, %r1263, %r1263, 30;
	shf.l.wrap.b32 	%r1987, %r1271, %r1271, 5;
	// begin inline asm
	lop3.b32 %r1266, %r1267, %r1273, %r1269, 232;
	// end inline asm
	xor.b32  	%r1988, %r1879, %r1863;
	xor.b32  	%r1989, %r1988, %r1927;
	xor.b32  	%r1990, %r1989, %r1967;
	shf.l.wrap.b32 	%r1991, %r1990, %r1990, 1;
	add.s32 	%r1992, %r1266, %r1991;
	add.s32 	%r1993, %r1992, %r1265;
	add.s32 	%r1994, %r1993, %r1987;
	add.s32 	%r1275, %r1994, -1894007588;
	shf.l.wrap.b32 	%r1277, %r1267, %r1267, 30;
	shf.l.wrap.b32 	%r1995, %r1275, %r1275, 5;
	// begin inline asm
	lop3.b32 %r1270, %r1271, %r1277, %r1273, 232;
	// end inline asm
	xor.b32  	%r1996, %r1887, %r1871;
	xor.b32  	%r1997, %r1996, %r1935;
	xor.b32  	%r1998, %r1997, %r1975;
	shf.l.wrap.b32 	%r1999, %r1998, %r1998, 1;
	add.s32 	%r2000, %r1270, %r1999;
	add.s32 	%r2001, %r2000, %r1269;
	add.s32 	%r2002, %r2001, %r1995;
	add.s32 	%r1279, %r2002, -1894007588;
	shf.l.wrap.b32 	%r1281, %r1271, %r1271, 30;
	shf.l.wrap.b32 	%r2003, %r1279, %r1279, 5;
	// begin inline asm
	lop3.b32 %r1274, %r1275, %r1281, %r1277, 232;
	// end inline asm
	xor.b32  	%r2004, %r1895, %r1879;
	xor.b32  	%r2005, %r2004, %r1943;
	xor.b32  	%r2006, %r2005, %r1983;
	shf.l.wrap.b32 	%r2007, %r2006, %r2006, 1;
	add.s32 	%r2008, %r1274, %r2007;
	add.s32 	%r2009, %r2008, %r1273;
	add.s32 	%r2010, %r2009, %r2003;
	add.s32 	%r1283, %r2010, -1894007588;
	shf.l.wrap.b32 	%r1285, %r1275, %r1275, 30;
	shf.l.wrap.b32 	%r2011, %r1283, %r1283, 5;
	// begin inline asm
	lop3.b32 %r1278, %r1279, %r1285, %r1281, 232;
	// end inline asm
	xor.b32  	%r2012, %r1903, %r1887;
	xor.b32  	%r2013, %r2012, %r1951;
	xor.b32  	%r2014, %r2013, %r1991;
	shf.l.wrap.b32 	%r2015, %r2014, %r2014, 1;
	add.s32 	%r2016, %r1278, %r2015;
	add.s32 	%r2017, %r2016, %r1277;
	add.s32 	%r2018, %r2017, %r2011;
	add.s32 	%r1287, %r2018, -1894007588;
	shf.l.wrap.b32 	%r1289, %r1279, %r1279, 30;
	shf.l.wrap.b32 	%r2019, %r1287, %r1287, 5;
	// begin inline asm
	lop3.b32 %r1282, %r1283, %r1289, %r1285, 232;
	// end inline asm
	xor.b32  	%r2020, %r1911, %r1895;
	xor.b32  	%r2021, %r2020, %r1959;
	xor.b32  	%r2022, %r2021, %r1999;
	shf.l.wrap.b32 	%r2023, %r2022, %r2022, 1;
	add.s32 	%r2024, %r1282, %r2023;
	add.s32 	%r2025, %r2024, %r1281;
	add.s32 	%r2026, %r2025, %r2019;
	add.s32 	%r1291, %r2026, -1894007588;
	shf.l.wrap.b32 	%r1293, %r1283, %r1283, 30;
	shf.l.wrap.b32 	%r2027, %r1291, %r1291, 5;
	// begin inline asm
	lop3.b32 %r1286, %r1287, %r1293, %r1289, 232;
	// end inline asm
	xor.b32  	%r2028, %r1919, %r1903;
	xor.b32  	%r2029, %r2028, %r1967;
	xor.b32  	%r2030, %r2029, %r2007;
	shf.l.wrap.b32 	%r2031, %r2030, %r2030, 1;
	add.s32 	%r2032, %r1286, %r2031;
	add.s32 	%r2033, %r2032, %r1285;
	add.s32 	%r2034, %r2033, %r2027;
	add.s32 	%r1295, %r2034, -1894007588;
	shf.l.wrap.b32 	%r1297, %r1287, %r1287, 30;
	shf.l.wrap.b32 	%r2035, %r1295, %r1295, 5;
	// begin inline asm
	lop3.b32 %r1290, %r1291, %r1297, %r1293, 232;
	// end inline asm
	xor.b32  	%r2036, %r1927, %r1911;
	xor.b32  	%r2037, %r2036, %r1975;
	xor.b32  	%r2038, %r2037, %r2015;
	shf.l.wrap.b32 	%r2039, %r2038, %r2038, 1;
	add.s32 	%r2040, %r1290, %r2039;
	add.s32 	%r2041, %r2040, %r1289;
	add.s32 	%r2042, %r2041, %r2035;
	add.s32 	%r1299, %r2042, -1894007588;
	shf.l.wrap.b32 	%r1301, %r1291, %r1291, 30;
	shf.l.wrap.b32 	%r2043, %r1299, %r1299, 5;
	// begin inline asm
	lop3.b32 %r1294, %r1295, %r1301, %r1297, 232;
	// end inline asm
	xor.b32  	%r2044, %r1935, %r1919;
	xor.b32  	%r2045, %r2044, %r1983;
	xor.b32  	%r2046, %r2045, %r2023;
	shf.l.wrap.b32 	%r2047, %r2046, %r2046, 1;
	add.s32 	%r2048, %r1294, %r2047;
	add.s32 	%r2049, %r2048, %r1293;
	add.s32 	%r2050, %r2049, %r2043;
	add.s32 	%r1303, %r2050, -1894007588;
	shf.l.wrap.b32 	%r1305, %r1295, %r1295, 30;
	shf.l.wrap.b32 	%r2051, %r1303, %r1303, 5;
	// begin inline asm
	lop3.b32 %r1298, %r1299, %r1305, %r1301, 232;
	// end inline asm
	xor.b32  	%r2052, %r1943, %r1927;
	xor.b32  	%r2053, %r2052, %r1991;
	xor.b32  	%r2054, %r2053, %r2031;
	shf.l.wrap.b32 	%r2055, %r2054, %r2054, 1;
	add.s32 	%r2056, %r1298, %r2055;
	add.s32 	%r2057, %r2056, %r1297;
	add.s32 	%r2058, %r2057, %r2051;
	add.s32 	%r1307, %r2058, -1894007588;
	shf.l.wrap.b32 	%r1309, %r1299, %r1299, 30;
	shf.l.wrap.b32 	%r2059, %r1307, %r1307, 5;
	// begin inline asm
	lop3.b32 %r1302, %r1303, %r1309, %r1305, 232;
	// end inline asm
	xor.b32  	%r2060, %r1951, %r1935;
	xor.b32  	%r2061, %r2060, %r1999;
	xor.b32  	%r2062, %r2061, %r2039;
	shf.l.wrap.b32 	%r2063, %r2062, %r2062, 1;
	add.s32 	%r2064, %r1302, %r2063;
	add.s32 	%r2065, %r2064, %r1301;
	add.s32 	%r2066, %r2065, %r2059;
	add.s32 	%r1311, %r2066, -1894007588;
	shf.l.wrap.b32 	%r1313, %r1303, %r1303, 30;
	shf.l.wrap.b32 	%r2067, %r1311, %r1311, 5;
	// begin inline asm
	lop3.b32 %r1306, %r1307, %r1313, %r1309, 232;
	// end inline asm
	xor.b32  	%r2068, %r1959, %r1943;
	xor.b32  	%r2069, %r2068, %r2007;
	xor.b32  	%r2070, %r2069, %r2047;
	shf.l.wrap.b32 	%r2071, %r2070, %r2070, 1;
	add.s32 	%r2072, %r1306, %r2071;
	add.s32 	%r2073, %r2072, %r1305;
	add.s32 	%r2074, %r2073, %r2067;
	add.s32 	%r1315, %r2074, -1894007588;
	shf.l.wrap.b32 	%r1317, %r1307, %r1307, 30;
	shf.l.wrap.b32 	%r2075, %r1315, %r1315, 5;
	// begin inline asm
	lop3.b32 %r1310, %r1311, %r1317, %r1313, 232;
	// end inline asm
	xor.b32  	%r2076, %r1967, %r1951;
	xor.b32  	%r2077, %r2076, %r2015;
	xor.b32  	%r2078, %r2077, %r2055;
	shf.l.wrap.b32 	%r2079, %r2078, %r2078, 1;
	add.s32 	%r2080, %r1310, %r2079;
	add.s32 	%r2081, %r2080, %r1309;
	add.s32 	%r2082, %r2081, %r2075;
	add.s32 	%r1319, %r2082, -1894007588;
	shf.l.wrap.b32 	%r1321, %r1311, %r1311, 30;
	shf.l.wrap.b32 	%r2083, %r1319, %r1319, 5;
	// begin inline asm
	lop3.b32 %r1314, %r1315, %r1321, %r1317, 150;
	// end inline asm
	xor.b32  	%r2084, %r1975, %r1959;
	xor.b32  	%r2085, %r2084, %r2023;
	xor.b32  	%r2086, %r2085, %r2063;
	shf.l.wrap.b32 	%r2087, %r2086, %r2086, 1;
	add.s32 	%r2088, %r1314, %r2087;
	add.s32 	%r2089, %r2088, %r1313;
	add.s32 	%r2090, %r2089, %r2083;
	add.s32 	%r1323, %r2090, -899497514;
	shf.l.wrap.b32 	%r1325, %r1315, %r1315, 30;
	shf.l.wrap.b32 	%r2091, %r1323, %r1323, 5;
	// begin inline asm
	lop3.b32 %r1318, %r1319, %r1325, %r1321, 150;
	// end inline asm
	xor.b32  	%r2092, %r1983, %r1967;
	xor.b32  	%r2093, %r2092, %r2031;
	xor.b32  	%r2094, %r2093, %r2071;
	shf.l.wrap.b32 	%r2095, %r2094, %r2094, 1;
	add.s32 	%r2096, %r1318, %r2095;
	add.s32 	%r2097, %r2096, %r1317;
	add.s32 	%r2098, %r2097, %r2091;
	add.s32 	%r1327, %r2098, -899497514;
	shf.l.wrap.b32 	%r1329, %r1319, %r1319, 30;
	shf.l.wrap.b32 	%r2099, %r1327, %r1327, 5;
	// begin inline asm
	lop3.b32 %r1322, %r1323, %r1329, %r1325, 150;
	// end inline asm
	xor.b32  	%r2100, %r1991, %r1975;
	xor.b32  	%r2101, %r2100, %r2039;
	xor.b32  	%r2102, %r2101, %r2079;
	shf.l.wrap.b32 	%r2103, %r2102, %r2102, 1;
	add.s32 	%r2104, %r1322, %r2103;
	add.s32 	%r2105, %r2104, %r1321;
	add.s32 	%r2106, %r2105, %r2099;
	add.s32 	%r1331, %r2106, -899497514;
	shf.l.wrap.b32 	%r1333, %r1323, %r1323, 30;
	shf.l.wrap.b32 	%r2107, %r1331, %r1331, 5;
	// begin inline asm
	lop3.b32 %r1326, %r1327, %r1333, %r1329, 150;
	// end inline asm
	xor.b32  	%r2108, %r1999, %r1983;
	xor.b32  	%r2109, %r2108, %r2047;
	xor.b32  	%r2110, %r2109, %r2087;
	shf.l.wrap.b32 	%r2111, %r2110, %r2110, 1;
	add.s32 	%r2112, %r1326, %r2111;
	add.s32 	%r2113, %r2112, %r1325;
	add.s32 	%r2114, %r2113, %r2107;
	add.s32 	%r1335, %r2114, -899497514;
	shf.l.wrap.b32 	%r1337, %r1327, %r1327, 30;
	shf.l.wrap.b32 	%r2115, %r1335, %r1335, 5;
	// begin inline asm
	lop3.b32 %r1330, %r1331, %r1337, %r1333, 150;
	// end inline asm
	xor.b32  	%r2116, %r2007, %r1991;
	xor.b32  	%r2117, %r2116, %r2055;
	xor.b32  	%r2118, %r2117, %r2095;
	shf.l.wrap.b32 	%r2119, %r2118, %r2118, 1;
	add.s32 	%r2120, %r1330, %r2119;
	add.s32 	%r2121, %r2120, %r1329;
	add.s32 	%r2122, %r2121, %r2115;
	add.s32 	%r1339, %r2122, -899497514;
	shf.l.wrap.b32 	%r1341, %r1331, %r1331, 30;
	shf.l.wrap.b32 	%r2123, %r1339, %r1339, 5;
	// begin inline asm
	lop3.b32 %r1334, %r1335, %r1341, %r1337, 150;
	// end inline asm
	xor.b32  	%r2124, %r2015, %r1999;
	xor.b32  	%r2125, %r2124, %r2063;
	xor.b32  	%r2126, %r2125, %r2103;
	shf.l.wrap.b32 	%r2127, %r2126, %r2126, 1;
	add.s32 	%r2128, %r1334, %r2127;
	add.s32 	%r2129, %r2128, %r1333;
	add.s32 	%r2130, %r2129, %r2123;
	add.s32 	%r1343, %r2130, -899497514;
	shf.l.wrap.b32 	%r1345, %r1335, %r1335, 30;
	shf.l.wrap.b32 	%r2131, %r1343, %r1343, 5;
	// begin inline asm
	lop3.b32 %r1338, %r1339, %r1345, %r1341, 150;
	// end inline asm
	xor.b32  	%r2132, %r2023, %r2007;
	xor.b32  	%r2133, %r2132, %r2071;
	xor.b32  	%r2134, %r2133, %r2111;
	shf.l.wrap.b32 	%r2135, %r2134, %r2134, 1;
	add.s32 	%r2136, %r1338, %r2135;
	add.s32 	%r2137, %r2136, %r1337;
	add.s32 	%r2138, %r2137, %r2131;
	add.s32 	%r1347, %r2138, -899497514;
	shf.l.wrap.b32 	%r1349, %r1339, %r1339, 30;
	shf.l.wrap.b32 	%r2139, %r1347, %r1347, 5;
	// begin inline asm
	lop3.b32 %r1342, %r1343, %r1349, %r1345, 150;
	// end inline asm
	xor.b32  	%r2140, %r2031, %r2015;
	xor.b32  	%r2141, %r2140, %r2079;
	xor.b32  	%r2142, %r2141, %r2119;
	shf.l.wrap.b32 	%r2143, %r2142, %r2142, 1;
	add.s32 	%r2144, %r1342, %r2143;
	add.s32 	%r2145, %r2144, %r1341;
	add.s32 	%r2146, %r2145, %r2139;
	add.s32 	%r1351, %r2146, -899497514;
	shf.l.wrap.b32 	%r1353, %r1343, %r1343, 30;
	shf.l.wrap.b32 	%r2147, %r1351, %r1351, 5;
	// begin inline asm
	lop3.b32 %r1346, %r1347, %r1353, %r1349, 150;
	// end inline asm
	xor.b32  	%r2148, %r2039, %r2023;
	xor.b32  	%r2149, %r2148, %r2087;
	xor.b32  	%r2150, %r2149, %r2127;
	shf.l.wrap.b32 	%r2151, %r2150, %r2150, 1;
	add.s32 	%r2152, %r1346, %r2151;
	add.s32 	%r2153, %r2152, %r1345;
	add.s32 	%r2154, %r2153, %r2147;
	add.s32 	%r1355, %r2154, -899497514;
	shf.l.wrap.b32 	%r1357, %r1347, %r1347, 30;
	shf.l.wrap.b32 	%r2155, %r1355, %r1355, 5;
	// begin inline asm
	lop3.b32 %r1350, %r1351, %r1357, %r1353, 150;
	// end inline asm
	xor.b32  	%r2156, %r2047, %r2031;
	xor.b32  	%r2157, %r2156, %r2095;
	xor.b32  	%r2158, %r2157, %r2135;
	shf.l.wrap.b32 	%r2159, %r2158, %r2158, 1;
	add.s32 	%r2160, %r1350, %r2159;
	add.s32 	%r2161, %r2160, %r1349;
	add.s32 	%r2162, %r2161, %r2155;
	add.s32 	%r1359, %r2162, -899497514;
	shf.l.wrap.b32 	%r1361, %r1351, %r1351, 30;
	shf.l.wrap.b32 	%r2163, %r1359, %r1359, 5;
	// begin inline asm
	lop3.b32 %r1354, %r1355, %r1361, %r1357, 150;
	// end inline asm
	xor.b32  	%r2164, %r2055, %r2039;
	xor.b32  	%r2165, %r2164, %r2103;
	xor.b32  	%r2166, %r2165, %r2143;
	shf.l.wrap.b32 	%r2167, %r2166, %r2166, 1;
	add.s32 	%r2168, %r1354, %r2167;
	add.s32 	%r2169, %r2168, %r1353;
	add.s32 	%r2170, %r2169, %r2163;
	add.s32 	%r1363, %r2170, -899497514;
	shf.l.wrap.b32 	%r1365, %r1355, %r1355, 30;
	shf.l.wrap.b32 	%r2171, %r1363, %r1363, 5;
	// begin inline asm
	lop3.b32 %r1358, %r1359, %r1365, %r1361, 150;
	// end inline asm
	xor.b32  	%r2172, %r2063, %r2047;
	xor.b32  	%r2173, %r2172, %r2111;
	xor.b32  	%r2174, %r2173, %r2151;
	shf.l.wrap.b32 	%r2175, %r2174, %r2174, 1;
	add.s32 	%r2176, %r1358, %r2175;
	add.s32 	%r2177, %r2176, %r1357;
	add.s32 	%r2178, %r2177, %r2171;
	add.s32 	%r1367, %r2178, -899497514;
	shf.l.wrap.b32 	%r1369, %r1359, %r1359, 30;
	shf.l.wrap.b32 	%r2179, %r1367, %r1367, 5;
	// begin inline asm
	lop3.b32 %r1362, %r1363, %r1369, %r1365, 150;
	// end inline asm
	xor.b32  	%r2180, %r2071, %r2055;
	xor.b32  	%r2181, %r2180, %r2119;
	xor.b32  	%r2182, %r2181, %r2159;
	shf.l.wrap.b32 	%r2183, %r2182, %r2182, 1;
	add.s32 	%r2184, %r1362, %r2183;
	add.s32 	%r2185, %r2184, %r1361;
	add.s32 	%r2186, %r2185, %r2179;
	add.s32 	%r1371, %r2186, -899497514;
	shf.l.wrap.b32 	%r1373, %r1363, %r1363, 30;
	shf.l.wrap.b32 	%r2187, %r1371, %r1371, 5;
	// begin inline asm
	lop3.b32 %r1366, %r1367, %r1373, %r1369, 150;
	// end inline asm
	xor.b32  	%r2188, %r2079, %r2063;
	xor.b32  	%r2189, %r2188, %r2127;
	xor.b32  	%r2190, %r2189, %r2167;
	shf.l.wrap.b32 	%r2191, %r2190, %r2190, 1;
	add.s32 	%r2192, %r1366, %r2191;
	add.s32 	%r2193, %r2192, %r1365;
	add.s32 	%r2194, %r2193, %r2187;
	add.s32 	%r1375, %r2194, -899497514;
	shf.l.wrap.b32 	%r1377, %r1367, %r1367, 30;
	shf.l.wrap.b32 	%r2195, %r1375, %r1375, 5;
	// begin inline asm
	lop3.b32 %r1370, %r1371, %r1377, %r1373, 150;
	// end inline asm
	xor.b32  	%r2196, %r2087, %r2071;
	xor.b32  	%r2197, %r2196, %r2135;
	xor.b32  	%r2198, %r2197, %r2175;
	shf.l.wrap.b32 	%r2199, %r2198, %r2198, 1;
	add.s32 	%r2200, %r1370, %r2199;
	add.s32 	%r2201, %r2200, %r1369;
	add.s32 	%r2202, %r2201, %r2195;
	add.s32 	%r1379, %r2202, -899497514;
	shf.l.wrap.b32 	%r1381, %r1371, %r1371, 30;
	shf.l.wrap.b32 	%r2203, %r1379, %r1379, 5;
	// begin inline asm
	lop3.b32 %r1374, %r1375, %r1381, %r1377, 150;
	// end inline asm
	xor.b32  	%r2204, %r2095, %r2079;
	xor.b32  	%r2205, %r2204, %r2143;
	xor.b32  	%r2206, %r2205, %r2183;
	shf.l.wrap.b32 	%r2207, %r2206, %r2206, 1;
	add.s32 	%r2208, %r1374, %r2207;
	add.s32 	%r2209, %r2208, %r1373;
	add.s32 	%r2210, %r2209, %r2203;
	add.s32 	%r1383, %r2210, -899497514;
	shf.l.wrap.b32 	%r1385, %r1375, %r1375, 30;
	shf.l.wrap.b32 	%r2211, %r1383, %r1383, 5;
	// begin inline asm
	lop3.b32 %r1378, %r1379, %r1385, %r1381, 150;
	// end inline asm
	xor.b32  	%r2212, %r2103, %r2087;
	xor.b32  	%r2213, %r2212, %r2151;
	xor.b32  	%r2214, %r2213, %r2191;
	shf.l.wrap.b32 	%r2215, %r2214, %r2214, 1;
	add.s32 	%r2216, %r1378, %r2215;
	add.s32 	%r2217, %r2216, %r1377;
	add.s32 	%r2218, %r2217, %r2211;
	add.s32 	%r1387, %r2218, -899497514;
	shf.l.wrap.b32 	%r1389, %r1379, %r1379, 30;
	shf.l.wrap.b32 	%r2219, %r1387, %r1387, 5;
	// begin inline asm
	lop3.b32 %r1382, %r1383, %r1389, %r1385, 150;
	// end inline asm
	xor.b32  	%r2220, %r2111, %r2095;
	xor.b32  	%r2221, %r2220, %r2159;
	xor.b32  	%r2222, %r2221, %r2199;
	shf.l.wrap.b32 	%r2223, %r2222, %r2222, 1;
	add.s32 	%r2224, %r1382, %r2223;
	add.s32 	%r2225, %r2224, %r1381;
	add.s32 	%r2226, %r2225, %r2219;
	add.s32 	%r1391, %r2226, -899497514;
	shf.l.wrap.b32 	%r1393, %r1383, %r1383, 30;
	shf.l.wrap.b32 	%r2227, %r1391, %r1391, 5;
	// begin inline asm
	lop3.b32 %r1386, %r1387, %r1393, %r1389, 150;
	// end inline asm
	xor.b32  	%r2228, %r2119, %r2103;
	xor.b32  	%r2229, %r2228, %r2167;
	xor.b32  	%r2230, %r2229, %r2207;
	shf.l.wrap.b32 	%r2231, %r2230, %r2230, 1;
	add.s32 	%r2232, %r1386, %r2231;
	add.s32 	%r2233, %r2232, %r1385;
	add.s32 	%r2234, %r2233, %r2227;
	add.s32 	%r2235, %r2234, -899497514;
	shf.l.wrap.b32 	%r1392, %r1387, %r1387, 30;
	shf.l.wrap.b32 	%r2236, %r2235, %r2235, 5;
	// begin inline asm
	lop3.b32 %r1390, %r1391, %r1392, %r1393, 150;
	// end inline asm
	xor.b32  	%r2237, %r2127, %r2111;
	xor.b32  	%r2238, %r2237, %r2175;
	xor.b32  	%r2239, %r2238, %r2215;
	shf.l.wrap.b32 	%r2240, %r2239, %r2239, 1;
	shf.l.wrap.b32 	%r2241, %r1391, %r1391, 30;
	add.s32 	%r2242, %r1390, %r2240;
	add.s32 	%r2243, %r2242, %r1389;
	add.s32 	%r2244, %r2243, %r2236;
	add.s32 	%r2245, %r2244, 833086679;
	add.s32 	%r2246, %r2234, -1171231393;
	add.s32 	%r2247, %r2241, -1732584194;
	add.s32 	%r2248, %r1392, 271733878;
	shf.l.wrap.b32 	%r2249, %r2245, %r2245, 16;
	shl.b32 	%r2250, %r2249, 8;
	and.b32  	%r2251, %r2250, -16711936;
	shr.u32 	%r2252, %r2249, 8;
	and.b32  	%r2253, %r2252, 16711935;
	shf.l.wrap.b32 	%r2254, %r2246, %r2246, 16;
	shl.b32 	%r2255, %r2254, 8;
	and.b32  	%r2256, %r2255, -16711936;
	shr.u32 	%r2257, %r2254, 8;
	and.b32  	%r2258, %r2257, 16711935;
	or.b32  	%r2259, %r2251, %r2253;
	or.b32  	%r2260, %r2256, %r2258;
	st.local.v2.u32 	[%rd1], {%r2259, %r2260};
	shf.l.wrap.b32 	%r2261, %r2247, %r2247, 16;
	shl.b32 	%r2262, %r2261, 8;
	and.b32  	%r2263, %r2262, -16711936;
	shr.u32 	%r2264, %r2261, 8;
	and.b32  	%r2265, %r2264, 16711935;
	shf.l.wrap.b32 	%r2266, %r2248, %r2248, 16;
	shl.b32 	%r2267, %r2266, 8;
	and.b32  	%r2268, %r2267, -16711936;
	shr.u32 	%r2269, %r2266, 8;
	and.b32  	%r2270, %r2269, 16711935;
	or.b32  	%r2271, %r2268, %r2270;
	or.b32  	%r2272, %r2263, %r2265;
	st.local.v2.u32 	[%rd1+8], {%r2272, %r2271};
	add.s32 	%r36, %r1709, 508910473;
	add.s32 	%r1395, %r36, %r9571;
	shf.l.wrap.b32 	%r2273, %r1395, %r1395, 5;
	add.s32 	%r1399, %r1712, %r2273;
	shf.l.wrap.b32 	%r2274, %r1399, %r1399, 5;
	// begin inline asm
	lop3.b32 %r1394, %r1395, %r1401, %r1397, 202;
	// end inline asm
	add.s32 	%r2275, %r1394, %r9569;
	add.s32 	%r2276, %r2275, %r2274;
	add.s32 	%r1403, %r2276, -214083945;
	shf.l.wrap.b32 	%r1405, %r1395, %r1395, 30;
	shf.l.wrap.b32 	%r2277, %r1403, %r1403, 5;
	// begin inline asm
	lop3.b32 %r1398, %r1399, %r1405, %r1401, 202;
	// end inline asm
	add.s32 	%r2278, %r31, %r1398;
	add.s32 	%r2279, %r2278, %r9568;
	add.s32 	%r1407, %r2279, %r2277;
	shf.l.wrap.b32 	%r1409, %r1399, %r1399, 30;
	shf.l.wrap.b32 	%r2280, %r1407, %r1407, 5;
	// begin inline asm
	lop3.b32 %r1402, %r1403, %r1409, %r1405, 202;
	// end inline asm
	add.s32 	%r2281, %r32, %r1402;
	add.s32 	%r2282, %r2281, %r9567;
	add.s32 	%r1411, %r2282, %r2280;
	shf.l.wrap.b32 	%r1413, %r1403, %r1403, 30;
	shf.l.wrap.b32 	%r2283, %r1411, %r1411, 5;
	// begin inline asm
	lop3.b32 %r1406, %r1407, %r1413, %r1409, 202;
	// end inline asm
	add.s32 	%r2284, %r1405, %r1406;
	add.s32 	%r2285, %r2284, %r2283;
	add.s32 	%r1415, %r2285, 841779462;
	shf.l.wrap.b32 	%r1417, %r1407, %r1407, 30;
	shf.l.wrap.b32 	%r2286, %r1415, %r1415, 5;
	// begin inline asm
	lop3.b32 %r1410, %r1411, %r1417, %r1413, 202;
	// end inline asm
	add.s32 	%r2287, %r1409, %r1410;
	add.s32 	%r2288, %r2287, %r2286;
	add.s32 	%r1419, %r2288, -1964790297;
	shf.l.wrap.b32 	%r1421, %r1411, %r1411, 30;
	shf.l.wrap.b32 	%r2289, %r1419, %r1419, 5;
	// begin inline asm
	lop3.b32 %r1414, %r1415, %r1421, %r1417, 202;
	// end inline asm
	add.s32 	%r2290, %r1414, %r1413;
	add.s32 	%r2291, %r2290, 1518500249;
	xor.b32  	%r2292, %r2291, -2147483648;
	add.s32 	%r1423, %r2292, %r2289;
	shf.l.wrap.b32 	%r1425, %r1415, %r1415, 30;
	shf.l.wrap.b32 	%r2293, %r1423, %r1423, 5;
	// begin inline asm
	lop3.b32 %r1418, %r1419, %r1425, %r1421, 202;
	// end inline asm
	add.s32 	%r2294, %r1418, %r1417;
	add.s32 	%r2295, %r2294, %r2293;
	add.s32 	%r1427, %r2295, 1518500249;
	shf.l.wrap.b32 	%r1429, %r1419, %r1419, 30;
	shf.l.wrap.b32 	%r2296, %r1427, %r1427, 5;
	// begin inline asm
	lop3.b32 %r1422, %r1423, %r1429, %r1425, 202;
	// end inline asm
	add.s32 	%r2297, %r1422, %r1421;
	add.s32 	%r2298, %r2297, %r2296;
	add.s32 	%r1431, %r2298, 1518500249;
	shf.l.wrap.b32 	%r1433, %r1423, %r1423, 30;
	shf.l.wrap.b32 	%r2299, %r1431, %r1431, 5;
	// begin inline asm
	lop3.b32 %r1426, %r1427, %r1433, %r1429, 202;
	// end inline asm
	add.s32 	%r2300, %r1426, %r1425;
	add.s32 	%r2301, %r2300, %r2299;
	add.s32 	%r1435, %r2301, 1518500249;
	shf.l.wrap.b32 	%r1437, %r1427, %r1427, 30;
	shf.l.wrap.b32 	%r2302, %r1435, %r1435, 5;
	// begin inline asm
	lop3.b32 %r1430, %r1431, %r1437, %r1433, 202;
	// end inline asm
	add.s32 	%r2303, %r1430, %r1429;
	add.s32 	%r2304, %r2303, %r2302;
	add.s32 	%r1439, %r2304, 1518500249;
	shf.l.wrap.b32 	%r1441, %r1431, %r1431, 30;
	shf.l.wrap.b32 	%r2305, %r1439, %r1439, 5;
	// begin inline asm
	lop3.b32 %r1434, %r1435, %r1441, %r1437, 202;
	// end inline asm
	add.s32 	%r2306, %r1434, %r1433;
	add.s32 	%r2307, %r2306, %r2305;
	add.s32 	%r1443, %r2307, 1518500249;
	shf.l.wrap.b32 	%r1445, %r1435, %r1435, 30;
	shf.l.wrap.b32 	%r2308, %r1443, %r1443, 5;
	// begin inline asm
	lop3.b32 %r1438, %r1439, %r1445, %r1441, 202;
	// end inline asm
	add.s32 	%r2309, %r1438, %r1437;
	add.s32 	%r2310, %r2309, %r2308;
	add.s32 	%r1447, %r2310, 1518500249;
	shf.l.wrap.b32 	%r1449, %r1439, %r1439, 30;
	shf.l.wrap.b32 	%r2311, %r1447, %r1447, 5;
	// begin inline asm
	lop3.b32 %r1442, %r1443, %r1449, %r1445, 202;
	// end inline asm
	add.s32 	%r2312, %r1442, %r1441;
	add.s32 	%r2313, %r2312, %r2311;
	add.s32 	%r1451, %r2313, 1518500249;
	shf.l.wrap.b32 	%r1453, %r1443, %r1443, 30;
	shf.l.wrap.b32 	%r2314, %r1451, %r1451, 5;
	// begin inline asm
	lop3.b32 %r1446, %r1447, %r1453, %r1449, 202;
	// end inline asm
	add.s32 	%r2315, %r1446, %r1445;
	add.s32 	%r2316, %r2315, %r2314;
	add.s32 	%r1455, %r2316, 1518500473;
	shf.l.wrap.b32 	%r1457, %r1447, %r1447, 30;
	shf.l.wrap.b32 	%r2317, %r1455, %r1455, 5;
	// begin inline asm
	lop3.b32 %r1450, %r1451, %r1457, %r1453, 202;
	// end inline asm
	add.s32 	%r2318, %r1450, %r1758;
	add.s32 	%r2319, %r2318, %r1449;
	add.s32 	%r2320, %r2319, %r2317;
	add.s32 	%r1459, %r2320, 1518500249;
	shf.l.wrap.b32 	%r1461, %r1451, %r1451, 30;
	shf.l.wrap.b32 	%r2321, %r1459, %r1459, 5;
	// begin inline asm
	lop3.b32 %r1454, %r1455, %r1461, %r1457, 202;
	// end inline asm
	add.s32 	%r2322, %r1454, %r1764;
	add.s32 	%r2323, %r2322, %r1453;
	add.s32 	%r2324, %r2323, %r2321;
	add.s32 	%r1463, %r2324, 1518500249;
	shf.l.wrap.b32 	%r1465, %r1455, %r1455, 30;
	shf.l.wrap.b32 	%r2325, %r1463, %r1463, 5;
	// begin inline asm
	lop3.b32 %r1458, %r1459, %r1465, %r1461, 202;
	// end inline asm
	add.s32 	%r2326, %r1458, %r1771;
	add.s32 	%r2327, %r2326, %r1457;
	add.s32 	%r2328, %r2327, %r2325;
	add.s32 	%r1467, %r2328, 1518500249;
	shf.l.wrap.b32 	%r1469, %r1459, %r1459, 30;
	shf.l.wrap.b32 	%r2329, %r1467, %r1467, 5;
	// begin inline asm
	lop3.b32 %r1462, %r1463, %r1469, %r1465, 202;
	// end inline asm
	xor.b32  	%r2330, %r1776, -676720787;
	shf.l.wrap.b32 	%r2331, %r2330, %r2330, 1;
	add.s32 	%r2332, %r1462, %r2331;
	add.s32 	%r2333, %r2332, %r1461;
	add.s32 	%r2334, %r2333, %r2329;
	add.s32 	%r1471, %r2334, 1518500249;
	shf.l.wrap.b32 	%r1473, %r1463, %r1463, 30;
	shf.l.wrap.b32 	%r2335, %r1471, %r1471, 5;
	// begin inline asm
	lop3.b32 %r1466, %r1467, %r1473, %r1469, 150;
	// end inline asm
	xor.b32  	%r2336, %r1783, 811676750;
	shf.l.wrap.b32 	%r2337, %r2336, %r2336, 1;
	add.s32 	%r2338, %r1466, %r2337;
	add.s32 	%r2339, %r2338, %r1465;
	add.s32 	%r2340, %r2339, %r2335;
	add.s32 	%r1475, %r2340, 1859775393;
	shf.l.wrap.b32 	%r1477, %r1467, %r1467, 30;
	shf.l.wrap.b32 	%r2341, %r1475, %r1475, 5;
	// begin inline asm
	lop3.b32 %r1470, %r1471, %r1477, %r1473, 150;
	// end inline asm
	xor.b32  	%r2342, %r1771, 1470762861;
	shf.l.wrap.b32 	%r2343, %r2342, %r2342, 1;
	add.s32 	%r2344, %r1470, %r2343;
	add.s32 	%r2345, %r2344, %r1469;
	add.s32 	%r2346, %r2345, %r2341;
	add.s32 	%r1479, %r2346, 1859775393;
	shf.l.wrap.b32 	%r1481, %r1471, %r1471, 30;
	shf.l.wrap.b32 	%r2347, %r1479, %r1479, 5;
	// begin inline asm
	lop3.b32 %r1474, %r1475, %r1481, %r1477, 150;
	// end inline asm
	xor.b32  	%r2348, %r2331, 811676750;
	shf.l.wrap.b32 	%r2349, %r2348, %r2348, 1;
	add.s32 	%r2350, %r1474, %r2349;
	add.s32 	%r2351, %r2350, %r1473;
	add.s32 	%r2352, %r2351, %r2347;
	add.s32 	%r1483, %r2352, 1859775393;
	shf.l.wrap.b32 	%r1485, %r1475, %r1475, 30;
	shf.l.wrap.b32 	%r2353, %r1483, %r1483, 5;
	// begin inline asm
	lop3.b32 %r1478, %r1479, %r1485, %r1481, 150;
	// end inline asm
	xor.b32  	%r2354, %r2337, -2147483424;
	shf.l.wrap.b32 	%r2355, %r2354, %r2354, 1;
	add.s32 	%r2356, %r1478, %r2355;
	add.s32 	%r2357, %r2356, %r1477;
	add.s32 	%r2358, %r2357, %r2353;
	add.s32 	%r1487, %r2358, 1859775393;
	shf.l.wrap.b32 	%r1489, %r1479, %r1479, 30;
	shf.l.wrap.b32 	%r2359, %r1487, %r1487, 5;
	// begin inline asm
	lop3.b32 %r1482, %r1483, %r1489, %r1485, 150;
	// end inline asm
	xor.b32  	%r2360, %r2343, %r1758;
	shf.l.wrap.b32 	%r2361, %r2360, %r2360, 1;
	add.s32 	%r2362, %r1482, %r2361;
	add.s32 	%r2363, %r2362, %r1481;
	add.s32 	%r2364, %r2363, %r2359;
	add.s32 	%r1491, %r2364, 1859775393;
	shf.l.wrap.b32 	%r1493, %r1483, %r1483, 30;
	shf.l.wrap.b32 	%r2365, %r1491, %r1491, 5;
	// begin inline asm
	lop3.b32 %r1486, %r1487, %r1493, %r1489, 150;
	// end inline asm
	xor.b32  	%r2366, %r2349, %r1764;
	shf.l.wrap.b32 	%r2367, %r2366, %r2366, 1;
	add.s32 	%r2368, %r1486, %r2367;
	add.s32 	%r2369, %r2368, %r1485;
	add.s32 	%r2370, %r2369, %r2365;
	add.s32 	%r1495, %r2370, 1859775393;
	shf.l.wrap.b32 	%r1497, %r1487, %r1487, 30;
	shf.l.wrap.b32 	%r2371, %r1495, %r1495, 5;
	// begin inline asm
	lop3.b32 %r1490, %r1491, %r1497, %r1493, 150;
	// end inline asm
	xor.b32  	%r2372, %r2355, %r1771;
	shf.l.wrap.b32 	%r2373, %r2372, %r2372, 1;
	add.s32 	%r2374, %r1490, %r2373;
	add.s32 	%r2375, %r2374, %r1489;
	add.s32 	%r2376, %r2375, %r2371;
	add.s32 	%r1499, %r2376, 1859775393;
	shf.l.wrap.b32 	%r1501, %r1491, %r1491, 30;
	shf.l.wrap.b32 	%r2377, %r1499, %r1499, 5;
	// begin inline asm
	lop3.b32 %r1494, %r1495, %r1501, %r1497, 150;
	// end inline asm
	xor.b32  	%r2378, %r2361, %r2331;
	shf.l.wrap.b32 	%r2379, %r2378, %r2378, 1;
	add.s32 	%r2380, %r1494, %r2379;
	add.s32 	%r2381, %r2380, %r1493;
	add.s32 	%r2382, %r2381, %r2377;
	add.s32 	%r1503, %r2382, 1859775393;
	shf.l.wrap.b32 	%r1505, %r1495, %r1495, 30;
	shf.l.wrap.b32 	%r2383, %r1503, %r1503, 5;
	// begin inline asm
	lop3.b32 %r1498, %r1499, %r1505, %r1501, 150;
	// end inline asm
	xor.b32  	%r2384, %r2367, %r2337;
	shf.l.wrap.b32 	%r2385, %r2384, %r2384, 1;
	add.s32 	%r2386, %r1498, %r2385;
	add.s32 	%r2387, %r2386, %r1497;
	add.s32 	%r2388, %r2387, %r2383;
	add.s32 	%r1507, %r2388, 1859775393;
	shf.l.wrap.b32 	%r1509, %r1499, %r1499, 30;
	shf.l.wrap.b32 	%r2389, %r1507, %r1507, 5;
	// begin inline asm
	lop3.b32 %r1502, %r1503, %r1509, %r1505, 150;
	// end inline asm
	xor.b32  	%r2390, %r2373, %r2343;
	xor.b32  	%r2391, %r2390, 224;
	shf.l.wrap.b32 	%r2392, %r2391, %r2391, 1;
	add.s32 	%r2393, %r1502, %r2392;
	add.s32 	%r2394, %r2393, %r1501;
	add.s32 	%r2395, %r2394, %r2389;
	add.s32 	%r1511, %r2395, 1859775393;
	shf.l.wrap.b32 	%r1513, %r1503, %r1503, 30;
	shf.l.wrap.b32 	%r2396, %r1511, %r1511, 5;
	// begin inline asm
	lop3.b32 %r1506, %r1507, %r1513, %r1509, 150;
	// end inline asm
	xor.b32  	%r2397, %r2349, %r1758;
	xor.b32  	%r2398, %r2397, %r2379;
	shf.l.wrap.b32 	%r2399, %r2398, %r2398, 1;
	add.s32 	%r2400, %r1506, %r2399;
	add.s32 	%r2401, %r2400, %r1505;
	add.s32 	%r2402, %r2401, %r2396;
	add.s32 	%r1515, %r2402, 1859775393;
	shf.l.wrap.b32 	%r1517, %r1507, %r1507, 30;
	shf.l.wrap.b32 	%r2403, %r1515, %r1515, 5;
	// begin inline asm
	lop3.b32 %r1510, %r1511, %r1517, %r1513, 150;
	// end inline asm
	xor.b32  	%r2404, %r2355, %r1764;
	xor.b32  	%r2405, %r2404, %r2385;
	xor.b32  	%r2406, %r2405, 224;
	shf.l.wrap.b32 	%r2407, %r2406, %r2406, 1;
	add.s32 	%r2408, %r1510, %r2407;
	add.s32 	%r2409, %r2408, %r1509;
	add.s32 	%r2410, %r2409, %r2403;
	add.s32 	%r1519, %r2410, 1859775393;
	shf.l.wrap.b32 	%r1521, %r1511, %r1511, 30;
	shf.l.wrap.b32 	%r2411, %r1519, %r1519, 5;
	// begin inline asm
	lop3.b32 %r1514, %r1515, %r1521, %r1517, 150;
	// end inline asm
	xor.b32  	%r2412, %r1860, %r2361;
	xor.b32  	%r2413, %r2412, %r2392;
	shf.l.wrap.b32 	%r2414, %r2413, %r2413, 1;
	add.s32 	%r2415, %r1514, %r2414;
	add.s32 	%r2416, %r2415, %r1513;
	add.s32 	%r2417, %r2416, %r2411;
	add.s32 	%r1523, %r2417, 1859775393;
	shf.l.wrap.b32 	%r1525, %r1515, %r1515, 30;
	shf.l.wrap.b32 	%r2418, %r1523, %r1523, 5;
	// begin inline asm
	lop3.b32 %r1518, %r1519, %r1525, %r1521, 150;
	// end inline asm
	xor.b32  	%r2419, %r2331, %r1764;
	xor.b32  	%r2420, %r2419, %r2367;
	xor.b32  	%r2421, %r2420, %r2399;
	shf.l.wrap.b32 	%r2422, %r2421, %r2421, 1;
	add.s32 	%r2423, %r1518, %r2422;
	add.s32 	%r2424, %r2423, %r1517;
	add.s32 	%r2425, %r2424, %r2418;
	add.s32 	%r1527, %r2425, 1859775393;
	shf.l.wrap.b32 	%r1529, %r1519, %r1519, 30;
	shf.l.wrap.b32 	%r2426, %r1527, %r1527, 5;
	// begin inline asm
	lop3.b32 %r1522, %r1523, %r1529, %r1525, 150;
	// end inline asm
	xor.b32  	%r2427, %r2337, %r1771;
	xor.b32  	%r2428, %r2427, %r2373;
	xor.b32  	%r2429, %r2428, %r2407;
	shf.l.wrap.b32 	%r2430, %r2429, %r2429, 1;
	add.s32 	%r2431, %r1522, %r2430;
	add.s32 	%r2432, %r2431, %r1521;
	add.s32 	%r2433, %r2432, %r2426;
	add.s32 	%r1531, %r2433, 1859775393;
	shf.l.wrap.b32 	%r1533, %r1523, %r1523, 30;
	shf.l.wrap.b32 	%r2434, %r1531, %r1531, 5;
	// begin inline asm
	lop3.b32 %r1526, %r1527, %r1533, %r1529, 150;
	// end inline asm
	xor.b32  	%r2435, %r2343, %r2331;
	xor.b32  	%r2436, %r2435, %r2379;
	xor.b32  	%r2437, %r2436, %r2414;
	shf.l.wrap.b32 	%r2438, %r2437, %r2437, 1;
	add.s32 	%r2439, %r1526, %r2438;
	add.s32 	%r2440, %r2439, %r1525;
	add.s32 	%r2441, %r2440, %r2434;
	add.s32 	%r1535, %r2441, 1859775393;
	shf.l.wrap.b32 	%r1537, %r1527, %r1527, 30;
	shf.l.wrap.b32 	%r2442, %r1535, %r1535, 5;
	// begin inline asm
	lop3.b32 %r1530, %r1531, %r1537, %r1533, 150;
	// end inline asm
	xor.b32  	%r2443, %r2349, %r2337;
	xor.b32  	%r2444, %r2443, %r2385;
	xor.b32  	%r2445, %r2444, %r2422;
	shf.l.wrap.b32 	%r2446, %r2445, %r2445, 1;
	add.s32 	%r2447, %r1530, %r2446;
	add.s32 	%r2448, %r2447, %r1529;
	add.s32 	%r2449, %r2448, %r2442;
	add.s32 	%r1539, %r2449, 1859775393;
	shf.l.wrap.b32 	%r1541, %r1531, %r1531, 30;
	shf.l.wrap.b32 	%r2450, %r1539, %r1539, 5;
	// begin inline asm
	lop3.b32 %r1534, %r1535, %r1541, %r1537, 150;
	// end inline asm
	xor.b32  	%r2451, %r2355, %r2343;
	xor.b32  	%r2452, %r2451, %r2392;
	xor.b32  	%r2453, %r2452, %r2430;
	shf.l.wrap.b32 	%r2454, %r2453, %r2453, 1;
	add.s32 	%r2455, %r1534, %r2454;
	add.s32 	%r2456, %r2455, %r1533;
	add.s32 	%r2457, %r2456, %r2450;
	add.s32 	%r1543, %r2457, 1859775393;
	shf.l.wrap.b32 	%r1545, %r1535, %r1535, 30;
	shf.l.wrap.b32 	%r2458, %r1543, %r1543, 5;
	// begin inline asm
	lop3.b32 %r1538, %r1539, %r1545, %r1541, 150;
	// end inline asm
	xor.b32  	%r2459, %r2361, %r2349;
	xor.b32  	%r2460, %r2459, %r2399;
	xor.b32  	%r2461, %r2460, %r2438;
	shf.l.wrap.b32 	%r2462, %r2461, %r2461, 1;
	add.s32 	%r2463, %r1538, %r2462;
	add.s32 	%r2464, %r2463, %r1537;
	add.s32 	%r2465, %r2464, %r2458;
	add.s32 	%r1547, %r2465, 1859775393;
	shf.l.wrap.b32 	%r1549, %r1539, %r1539, 30;
	shf.l.wrap.b32 	%r2466, %r1547, %r1547, 5;
	// begin inline asm
	lop3.b32 %r1542, %r1543, %r1549, %r1545, 150;
	// end inline asm
	xor.b32  	%r2467, %r2367, %r2355;
	xor.b32  	%r2468, %r2467, %r2407;
	xor.b32  	%r2469, %r2468, %r2446;
	shf.l.wrap.b32 	%r2470, %r2469, %r2469, 1;
	add.s32 	%r2471, %r1542, %r2470;
	add.s32 	%r2472, %r2471, %r1541;
	add.s32 	%r2473, %r2472, %r2466;
	add.s32 	%r1551, %r2473, 1859775393;
	shf.l.wrap.b32 	%r1553, %r1543, %r1543, 30;
	shf.l.wrap.b32 	%r2474, %r1551, %r1551, 5;
	// begin inline asm
	lop3.b32 %r1546, %r1547, %r1553, %r1549, 232;
	// end inline asm
	xor.b32  	%r2475, %r2373, %r2361;
	xor.b32  	%r2476, %r2475, %r2414;
	xor.b32  	%r2477, %r2476, %r2454;
	shf.l.wrap.b32 	%r2478, %r2477, %r2477, 1;
	add.s32 	%r2479, %r1546, %r2478;
	add.s32 	%r2480, %r2479, %r1545;
	add.s32 	%r2481, %r2480, %r2474;
	add.s32 	%r1555, %r2481, -1894007588;
	shf.l.wrap.b32 	%r1557, %r1547, %r1547, 30;
	shf.l.wrap.b32 	%r2482, %r1555, %r1555, 5;
	// begin inline asm
	lop3.b32 %r1550, %r1551, %r1557, %r1553, 232;
	// end inline asm
	xor.b32  	%r2483, %r2379, %r2367;
	xor.b32  	%r2484, %r2483, %r2422;
	xor.b32  	%r2485, %r2484, %r2462;
	shf.l.wrap.b32 	%r2486, %r2485, %r2485, 1;
	add.s32 	%r2487, %r1550, %r2486;
	add.s32 	%r2488, %r2487, %r1549;
	add.s32 	%r2489, %r2488, %r2482;
	add.s32 	%r1559, %r2489, -1894007588;
	shf.l.wrap.b32 	%r1561, %r1551, %r1551, 30;
	shf.l.wrap.b32 	%r2490, %r1559, %r1559, 5;
	// begin inline asm
	lop3.b32 %r1554, %r1555, %r1561, %r1557, 232;
	// end inline asm
	xor.b32  	%r2491, %r2385, %r2373;
	xor.b32  	%r2492, %r2491, %r2430;
	xor.b32  	%r2493, %r2492, %r2470;
	shf.l.wrap.b32 	%r2494, %r2493, %r2493, 1;
	add.s32 	%r2495, %r1554, %r2494;
	add.s32 	%r2496, %r2495, %r1553;
	add.s32 	%r2497, %r2496, %r2490;
	add.s32 	%r1563, %r2497, -1894007588;
	shf.l.wrap.b32 	%r1565, %r1555, %r1555, 30;
	shf.l.wrap.b32 	%r2498, %r1563, %r1563, 5;
	// begin inline asm
	lop3.b32 %r1558, %r1559, %r1565, %r1561, 232;
	// end inline asm
	xor.b32  	%r2499, %r2392, %r2379;
	xor.b32  	%r2500, %r2499, %r2438;
	xor.b32  	%r2501, %r2500, %r2478;
	shf.l.wrap.b32 	%r2502, %r2501, %r2501, 1;
	add.s32 	%r2503, %r1558, %r2502;
	add.s32 	%r2504, %r2503, %r1557;
	add.s32 	%r2505, %r2504, %r2498;
	add.s32 	%r1567, %r2505, -1894007588;
	shf.l.wrap.b32 	%r1569, %r1559, %r1559, 30;
	shf.l.wrap.b32 	%r2506, %r1567, %r1567, 5;
	// begin inline asm
	lop3.b32 %r1562, %r1563, %r1569, %r1565, 232;
	// end inline asm
	xor.b32  	%r2507, %r2399, %r2385;
	xor.b32  	%r2508, %r2507, %r2446;
	xor.b32  	%r2509, %r2508, %r2486;
	shf.l.wrap.b32 	%r2510, %r2509, %r2509, 1;
	add.s32 	%r2511, %r1562, %r2510;
	add.s32 	%r2512, %r2511, %r1561;
	add.s32 	%r2513, %r2512, %r2506;
	add.s32 	%r1571, %r2513, -1894007588;
	shf.l.wrap.b32 	%r1573, %r1563, %r1563, 30;
	shf.l.wrap.b32 	%r2514, %r1571, %r1571, 5;
	// begin inline asm
	lop3.b32 %r1566, %r1567, %r1573, %r1569, 232;
	// end inline asm
	xor.b32  	%r2515, %r2407, %r2392;
	xor.b32  	%r2516, %r2515, %r2454;
	xor.b32  	%r2517, %r2516, %r2494;
	shf.l.wrap.b32 	%r2518, %r2517, %r2517, 1;
	add.s32 	%r2519, %r1566, %r2518;
	add.s32 	%r2520, %r2519, %r1565;
	add.s32 	%r2521, %r2520, %r2514;
	add.s32 	%r1575, %r2521, -1894007588;
	shf.l.wrap.b32 	%r1577, %r1567, %r1567, 30;
	shf.l.wrap.b32 	%r2522, %r1575, %r1575, 5;
	// begin inline asm
	lop3.b32 %r1570, %r1571, %r1577, %r1573, 232;
	// end inline asm
	xor.b32  	%r2523, %r2414, %r2399;
	xor.b32  	%r2524, %r2523, %r2462;
	xor.b32  	%r2525, %r2524, %r2502;
	shf.l.wrap.b32 	%r2526, %r2525, %r2525, 1;
	add.s32 	%r2527, %r1570, %r2526;
	add.s32 	%r2528, %r2527, %r1569;
	add.s32 	%r2529, %r2528, %r2522;
	add.s32 	%r1579, %r2529, -1894007588;
	shf.l.wrap.b32 	%r1581, %r1571, %r1571, 30;
	shf.l.wrap.b32 	%r2530, %r1579, %r1579, 5;
	// begin inline asm
	lop3.b32 %r1574, %r1575, %r1581, %r1577, 232;
	// end inline asm
	xor.b32  	%r2531, %r2422, %r2407;
	xor.b32  	%r2532, %r2531, %r2470;
	xor.b32  	%r2533, %r2532, %r2510;
	shf.l.wrap.b32 	%r2534, %r2533, %r2533, 1;
	add.s32 	%r2535, %r1574, %r2534;
	add.s32 	%r2536, %r2535, %r1573;
	add.s32 	%r2537, %r2536, %r2530;
	add.s32 	%r1583, %r2537, -1894007588;
	shf.l.wrap.b32 	%r1585, %r1575, %r1575, 30;
	shf.l.wrap.b32 	%r2538, %r1583, %r1583, 5;
	// begin inline asm
	lop3.b32 %r1578, %r1579, %r1585, %r1581, 232;
	// end inline asm
	xor.b32  	%r2539, %r2430, %r2414;
	xor.b32  	%r2540, %r2539, %r2478;
	xor.b32  	%r2541, %r2540, %r2518;
	shf.l.wrap.b32 	%r2542, %r2541, %r2541, 1;
	add.s32 	%r2543, %r1578, %r2542;
	add.s32 	%r2544, %r2543, %r1577;
	add.s32 	%r2545, %r2544, %r2538;
	add.s32 	%r1587, %r2545, -1894007588;
	shf.l.wrap.b32 	%r1589, %r1579, %r1579, 30;
	shf.l.wrap.b32 	%r2546, %r1587, %r1587, 5;
	// begin inline asm
	lop3.b32 %r1582, %r1583, %r1589, %r1585, 232;
	// end inline asm
	xor.b32  	%r2547, %r2438, %r2422;
	xor.b32  	%r2548, %r2547, %r2486;
	xor.b32  	%r2549, %r2548, %r2526;
	shf.l.wrap.b32 	%r2550, %r2549, %r2549, 1;
	add.s32 	%r2551, %r1582, %r2550;
	add.s32 	%r2552, %r2551, %r1581;
	add.s32 	%r2553, %r2552, %r2546;
	add.s32 	%r1591, %r2553, -1894007588;
	shf.l.wrap.b32 	%r1593, %r1583, %r1583, 30;
	shf.l.wrap.b32 	%r2554, %r1591, %r1591, 5;
	// begin inline asm
	lop3.b32 %r1586, %r1587, %r1593, %r1589, 232;
	// end inline asm
	xor.b32  	%r2555, %r2446, %r2430;
	xor.b32  	%r2556, %r2555, %r2494;
	xor.b32  	%r2557, %r2556, %r2534;
	shf.l.wrap.b32 	%r2558, %r2557, %r2557, 1;
	add.s32 	%r2559, %r1586, %r2558;
	add.s32 	%r2560, %r2559, %r1585;
	add.s32 	%r2561, %r2560, %r2554;
	add.s32 	%r1595, %r2561, -1894007588;
	shf.l.wrap.b32 	%r1597, %r1587, %r1587, 30;
	shf.l.wrap.b32 	%r2562, %r1595, %r1595, 5;
	// begin inline asm
	lop3.b32 %r1590, %r1591, %r1597, %r1593, 232;
	// end inline asm
	xor.b32  	%r2563, %r2454, %r2438;
	xor.b32  	%r2564, %r2563, %r2502;
	xor.b32  	%r2565, %r2564, %r2542;
	shf.l.wrap.b32 	%r2566, %r2565, %r2565, 1;
	add.s32 	%r2567, %r1590, %r2566;
	add.s32 	%r2568, %r2567, %r1589;
	add.s32 	%r2569, %r2568, %r2562;
	add.s32 	%r1599, %r2569, -1894007588;
	shf.l.wrap.b32 	%r1601, %r1591, %r1591, 30;
	shf.l.wrap.b32 	%r2570, %r1599, %r1599, 5;
	// begin inline asm
	lop3.b32 %r1594, %r1595, %r1601, %r1597, 232;
	// end inline asm
	xor.b32  	%r2571, %r2462, %r2446;
	xor.b32  	%r2572, %r2571, %r2510;
	xor.b32  	%r2573, %r2572, %r2550;
	shf.l.wrap.b32 	%r2574, %r2573, %r2573, 1;
	add.s32 	%r2575, %r1594, %r2574;
	add.s32 	%r2576, %r2575, %r1593;
	add.s32 	%r2577, %r2576, %r2570;
	add.s32 	%r1603, %r2577, -1894007588;
	shf.l.wrap.b32 	%r1605, %r1595, %r1595, 30;
	shf.l.wrap.b32 	%r2578, %r1603, %r1603, 5;
	// begin inline asm
	lop3.b32 %r1598, %r1599, %r1605, %r1601, 232;
	// end inline asm
	xor.b32  	%r2579, %r2470, %r2454;
	xor.b32  	%r2580, %r2579, %r2518;
	xor.b32  	%r2581, %r2580, %r2558;
	shf.l.wrap.b32 	%r2582, %r2581, %r2581, 1;
	add.s32 	%r2583, %r1598, %r2582;
	add.s32 	%r2584, %r2583, %r1597;
	add.s32 	%r2585, %r2584, %r2578;
	add.s32 	%r1607, %r2585, -1894007588;
	shf.l.wrap.b32 	%r1609, %r1599, %r1599, 30;
	shf.l.wrap.b32 	%r2586, %r1607, %r1607, 5;
	// begin inline asm
	lop3.b32 %r1602, %r1603, %r1609, %r1605, 232;
	// end inline asm
	xor.b32  	%r2587, %r2478, %r2462;
	xor.b32  	%r2588, %r2587, %r2526;
	xor.b32  	%r2589, %r2588, %r2566;
	shf.l.wrap.b32 	%r2590, %r2589, %r2589, 1;
	add.s32 	%r2591, %r1602, %r2590;
	add.s32 	%r2592, %r2591, %r1601;
	add.s32 	%r2593, %r2592, %r2586;
	add.s32 	%r1611, %r2593, -1894007588;
	shf.l.wrap.b32 	%r1613, %r1603, %r1603, 30;
	shf.l.wrap.b32 	%r2594, %r1611, %r1611, 5;
	// begin inline asm
	lop3.b32 %r1606, %r1607, %r1613, %r1609, 232;
	// end inline asm
	xor.b32  	%r2595, %r2486, %r2470;
	xor.b32  	%r2596, %r2595, %r2534;
	xor.b32  	%r2597, %r2596, %r2574;
	shf.l.wrap.b32 	%r2598, %r2597, %r2597, 1;
	add.s32 	%r2599, %r1606, %r2598;
	add.s32 	%r2600, %r2599, %r1605;
	add.s32 	%r2601, %r2600, %r2594;
	add.s32 	%r1615, %r2601, -1894007588;
	shf.l.wrap.b32 	%r1617, %r1607, %r1607, 30;
	shf.l.wrap.b32 	%r2602, %r1615, %r1615, 5;
	// begin inline asm
	lop3.b32 %r1610, %r1611, %r1617, %r1613, 232;
	// end inline asm
	xor.b32  	%r2603, %r2494, %r2478;
	xor.b32  	%r2604, %r2603, %r2542;
	xor.b32  	%r2605, %r2604, %r2582;
	shf.l.wrap.b32 	%r2606, %r2605, %r2605, 1;
	add.s32 	%r2607, %r1610, %r2606;
	add.s32 	%r2608, %r2607, %r1609;
	add.s32 	%r2609, %r2608, %r2602;
	add.s32 	%r1619, %r2609, -1894007588;
	shf.l.wrap.b32 	%r1621, %r1611, %r1611, 30;
	shf.l.wrap.b32 	%r2610, %r1619, %r1619, 5;
	// begin inline asm
	lop3.b32 %r1614, %r1615, %r1621, %r1617, 232;
	// end inline asm
	xor.b32  	%r2611, %r2502, %r2486;
	xor.b32  	%r2612, %r2611, %r2550;
	xor.b32  	%r2613, %r2612, %r2590;
	shf.l.wrap.b32 	%r2614, %r2613, %r2613, 1;
	add.s32 	%r2615, %r1614, %r2614;
	add.s32 	%r2616, %r2615, %r1613;
	add.s32 	%r2617, %r2616, %r2610;
	add.s32 	%r1623, %r2617, -1894007588;
	shf.l.wrap.b32 	%r1625, %r1615, %r1615, 30;
	shf.l.wrap.b32 	%r2618, %r1623, %r1623, 5;
	// begin inline asm
	lop3.b32 %r1618, %r1619, %r1625, %r1621, 232;
	// end inline asm
	xor.b32  	%r2619, %r2510, %r2494;
	xor.b32  	%r2620, %r2619, %r2558;
	xor.b32  	%r2621, %r2620, %r2598;
	shf.l.wrap.b32 	%r2622, %r2621, %r2621, 1;
	add.s32 	%r2623, %r1618, %r2622;
	add.s32 	%r2624, %r2623, %r1617;
	add.s32 	%r2625, %r2624, %r2618;
	add.s32 	%r1627, %r2625, -1894007588;
	shf.l.wrap.b32 	%r1629, %r1619, %r1619, 30;
	shf.l.wrap.b32 	%r2626, %r1627, %r1627, 5;
	// begin inline asm
	lop3.b32 %r1622, %r1623, %r1629, %r1625, 232;
	// end inline asm
	xor.b32  	%r2627, %r2518, %r2502;
	xor.b32  	%r2628, %r2627, %r2566;
	xor.b32  	%r2629, %r2628, %r2606;
	shf.l.wrap.b32 	%r2630, %r2629, %r2629, 1;
	add.s32 	%r2631, %r1622, %r2630;
	add.s32 	%r2632, %r2631, %r1621;
	add.s32 	%r2633, %r2632, %r2626;
	add.s32 	%r1631, %r2633, -1894007588;
	shf.l.wrap.b32 	%r1633, %r1623, %r1623, 30;
	shf.l.wrap.b32 	%r2634, %r1631, %r1631, 5;
	// begin inline asm
	lop3.b32 %r1626, %r1627, %r1633, %r1629, 150;
	// end inline asm
	xor.b32  	%r2635, %r2526, %r2510;
	xor.b32  	%r2636, %r2635, %r2574;
	xor.b32  	%r2637, %r2636, %r2614;
	shf.l.wrap.b32 	%r2638, %r2637, %r2637, 1;
	add.s32 	%r2639, %r1626, %r2638;
	add.s32 	%r2640, %r2639, %r1625;
	add.s32 	%r2641, %r2640, %r2634;
	add.s32 	%r1635, %r2641, -899497514;
	shf.l.wrap.b32 	%r1637, %r1627, %r1627, 30;
	shf.l.wrap.b32 	%r2642, %r1635, %r1635, 5;
	// begin inline asm
	lop3.b32 %r1630, %r1631, %r1637, %r1633, 150;
	// end inline asm
	xor.b32  	%r2643, %r2534, %r2518;
	xor.b32  	%r2644, %r2643, %r2582;
	xor.b32  	%r2645, %r2644, %r2622;
	shf.l.wrap.b32 	%r2646, %r2645, %r2645, 1;
	add.s32 	%r2647, %r1630, %r2646;
	add.s32 	%r2648, %r2647, %r1629;
	add.s32 	%r2649, %r2648, %r2642;
	add.s32 	%r1639, %r2649, -899497514;
	shf.l.wrap.b32 	%r1641, %r1631, %r1631, 30;
	shf.l.wrap.b32 	%r2650, %r1639, %r1639, 5;
	// begin inline asm
	lop3.b32 %r1634, %r1635, %r1641, %r1637, 150;
	// end inline asm
	xor.b32  	%r2651, %r2542, %r2526;
	xor.b32  	%r2652, %r2651, %r2590;
	xor.b32  	%r2653, %r2652, %r2630;
	shf.l.wrap.b32 	%r2654, %r2653, %r2653, 1;
	add.s32 	%r2655, %r1634, %r2654;
	add.s32 	%r2656, %r2655, %r1633;
	add.s32 	%r2657, %r2656, %r2650;
	add.s32 	%r1643, %r2657, -899497514;
	shf.l.wrap.b32 	%r1645, %r1635, %r1635, 30;
	shf.l.wrap.b32 	%r2658, %r1643, %r1643, 5;
	// begin inline asm
	lop3.b32 %r1638, %r1639, %r1645, %r1641, 150;
	// end inline asm
	xor.b32  	%r2659, %r2550, %r2534;
	xor.b32  	%r2660, %r2659, %r2598;
	xor.b32  	%r2661, %r2660, %r2638;
	shf.l.wrap.b32 	%r2662, %r2661, %r2661, 1;
	add.s32 	%r2663, %r1638, %r2662;
	add.s32 	%r2664, %r2663, %r1637;
	add.s32 	%r2665, %r2664, %r2658;
	add.s32 	%r1647, %r2665, -899497514;
	shf.l.wrap.b32 	%r1649, %r1639, %r1639, 30;
	shf.l.wrap.b32 	%r2666, %r1647, %r1647, 5;
	// begin inline asm
	lop3.b32 %r1642, %r1643, %r1649, %r1645, 150;
	// end inline asm
	xor.b32  	%r2667, %r2558, %r2542;
	xor.b32  	%r2668, %r2667, %r2606;
	xor.b32  	%r2669, %r2668, %r2646;
	shf.l.wrap.b32 	%r2670, %r2669, %r2669, 1;
	add.s32 	%r2671, %r1642, %r2670;
	add.s32 	%r2672, %r2671, %r1641;
	add.s32 	%r2673, %r2672, %r2666;
	add.s32 	%r1651, %r2673, -899497514;
	shf.l.wrap.b32 	%r1653, %r1643, %r1643, 30;
	shf.l.wrap.b32 	%r2674, %r1651, %r1651, 5;
	// begin inline asm
	lop3.b32 %r1646, %r1647, %r1653, %r1649, 150;
	// end inline asm
	xor.b32  	%r2675, %r2566, %r2550;
	xor.b32  	%r2676, %r2675, %r2614;
	xor.b32  	%r2677, %r2676, %r2654;
	shf.l.wrap.b32 	%r2678, %r2677, %r2677, 1;
	add.s32 	%r2679, %r1646, %r2678;
	add.s32 	%r2680, %r2679, %r1645;
	add.s32 	%r2681, %r2680, %r2674;
	add.s32 	%r1655, %r2681, -899497514;
	shf.l.wrap.b32 	%r1657, %r1647, %r1647, 30;
	shf.l.wrap.b32 	%r2682, %r1655, %r1655, 5;
	// begin inline asm
	lop3.b32 %r1650, %r1651, %r1657, %r1653, 150;
	// end inline asm
	xor.b32  	%r2683, %r2574, %r2558;
	xor.b32  	%r2684, %r2683, %r2622;
	xor.b32  	%r2685, %r2684, %r2662;
	shf.l.wrap.b32 	%r2686, %r2685, %r2685, 1;
	add.s32 	%r2687, %r1650, %r2686;
	add.s32 	%r2688, %r2687, %r1649;
	add.s32 	%r2689, %r2688, %r2682;
	add.s32 	%r1659, %r2689, -899497514;
	shf.l.wrap.b32 	%r1661, %r1651, %r1651, 30;
	shf.l.wrap.b32 	%r2690, %r1659, %r1659, 5;
	// begin inline asm
	lop3.b32 %r1654, %r1655, %r1661, %r1657, 150;
	// end inline asm
	xor.b32  	%r2691, %r2582, %r2566;
	xor.b32  	%r2692, %r2691, %r2630;
	xor.b32  	%r2693, %r2692, %r2670;
	shf.l.wrap.b32 	%r2694, %r2693, %r2693, 1;
	add.s32 	%r2695, %r1654, %r2694;
	add.s32 	%r2696, %r2695, %r1653;
	add.s32 	%r2697, %r2696, %r2690;
	add.s32 	%r1663, %r2697, -899497514;
	shf.l.wrap.b32 	%r1665, %r1655, %r1655, 30;
	shf.l.wrap.b32 	%r2698, %r1663, %r1663, 5;
	// begin inline asm
	lop3.b32 %r1658, %r1659, %r1665, %r1661, 150;
	// end inline asm
	xor.b32  	%r2699, %r2590, %r2574;
	xor.b32  	%r2700, %r2699, %r2638;
	xor.b32  	%r2701, %r2700, %r2678;
	shf.l.wrap.b32 	%r2702, %r2701, %r2701, 1;
	add.s32 	%r2703, %r1658, %r2702;
	add.s32 	%r2704, %r2703, %r1657;
	add.s32 	%r2705, %r2704, %r2698;
	add.s32 	%r1667, %r2705, -899497514;
	shf.l.wrap.b32 	%r1669, %r1659, %r1659, 30;
	shf.l.wrap.b32 	%r2706, %r1667, %r1667, 5;
	// begin inline asm
	lop3.b32 %r1662, %r1663, %r1669, %r1665, 150;
	// end inline asm
	xor.b32  	%r2707, %r2598, %r2582;
	xor.b32  	%r2708, %r2707, %r2646;
	xor.b32  	%r2709, %r2708, %r2686;
	shf.l.wrap.b32 	%r2710, %r2709, %r2709, 1;
	add.s32 	%r2711, %r1662, %r2710;
	add.s32 	%r2712, %r2711, %r1661;
	add.s32 	%r2713, %r2712, %r2706;
	add.s32 	%r1671, %r2713, -899497514;
	shf.l.wrap.b32 	%r1673, %r1663, %r1663, 30;
	shf.l.wrap.b32 	%r2714, %r1671, %r1671, 5;
	// begin inline asm
	lop3.b32 %r1666, %r1667, %r1673, %r1669, 150;
	// end inline asm
	xor.b32  	%r2715, %r2606, %r2590;
	xor.b32  	%r2716, %r2715, %r2654;
	xor.b32  	%r2717, %r2716, %r2694;
	shf.l.wrap.b32 	%r2718, %r2717, %r2717, 1;
	add.s32 	%r2719, %r1666, %r2718;
	add.s32 	%r2720, %r2719, %r1665;
	add.s32 	%r2721, %r2720, %r2714;
	add.s32 	%r1675, %r2721, -899497514;
	shf.l.wrap.b32 	%r1677, %r1667, %r1667, 30;
	shf.l.wrap.b32 	%r2722, %r1675, %r1675, 5;
	// begin inline asm
	lop3.b32 %r1670, %r1671, %r1677, %r1673, 150;
	// end inline asm
	xor.b32  	%r2723, %r2614, %r2598;
	xor.b32  	%r2724, %r2723, %r2662;
	xor.b32  	%r2725, %r2724, %r2702;
	shf.l.wrap.b32 	%r2726, %r2725, %r2725, 1;
	add.s32 	%r2727, %r1670, %r2726;
	add.s32 	%r2728, %r2727, %r1669;
	add.s32 	%r2729, %r2728, %r2722;
	add.s32 	%r1679, %r2729, -899497514;
	shf.l.wrap.b32 	%r1681, %r1671, %r1671, 30;
	shf.l.wrap.b32 	%r2730, %r1679, %r1679, 5;
	// begin inline asm
	lop3.b32 %r1674, %r1675, %r1681, %r1677, 150;
	// end inline asm
	xor.b32  	%r2731, %r2622, %r2606;
	xor.b32  	%r2732, %r2731, %r2670;
	xor.b32  	%r2733, %r2732, %r2710;
	shf.l.wrap.b32 	%r2734, %r2733, %r2733, 1;
	add.s32 	%r2735, %r1674, %r2734;
	add.s32 	%r2736, %r2735, %r1673;
	add.s32 	%r2737, %r2736, %r2730;
	add.s32 	%r1683, %r2737, -899497514;
	shf.l.wrap.b32 	%r1685, %r1675, %r1675, 30;
	shf.l.wrap.b32 	%r2738, %r1683, %r1683, 5;
	// begin inline asm
	lop3.b32 %r1678, %r1679, %r1685, %r1681, 150;
	// end inline asm
	xor.b32  	%r2739, %r2630, %r2614;
	xor.b32  	%r2740, %r2739, %r2678;
	xor.b32  	%r2741, %r2740, %r2718;
	shf.l.wrap.b32 	%r2742, %r2741, %r2741, 1;
	add.s32 	%r2743, %r1678, %r2742;
	add.s32 	%r2744, %r2743, %r1677;
	add.s32 	%r2745, %r2744, %r2738;
	add.s32 	%r1687, %r2745, -899497514;
	shf.l.wrap.b32 	%r1689, %r1679, %r1679, 30;
	shf.l.wrap.b32 	%r2746, %r1687, %r1687, 5;
	// begin inline asm
	lop3.b32 %r1682, %r1683, %r1689, %r1685, 150;
	// end inline asm
	xor.b32  	%r2747, %r2638, %r2622;
	xor.b32  	%r2748, %r2747, %r2686;
	xor.b32  	%r2749, %r2748, %r2726;
	shf.l.wrap.b32 	%r2750, %r2749, %r2749, 1;
	add.s32 	%r2751, %r1682, %r2750;
	add.s32 	%r2752, %r2751, %r1681;
	add.s32 	%r2753, %r2752, %r2746;
	add.s32 	%r1691, %r2753, -899497514;
	shf.l.wrap.b32 	%r1693, %r1683, %r1683, 30;
	shf.l.wrap.b32 	%r2754, %r1691, %r1691, 5;
	// begin inline asm
	lop3.b32 %r1686, %r1687, %r1693, %r1689, 150;
	// end inline asm
	xor.b32  	%r2755, %r2646, %r2630;
	xor.b32  	%r2756, %r2755, %r2694;
	xor.b32  	%r2757, %r2756, %r2734;
	shf.l.wrap.b32 	%r2758, %r2757, %r2757, 1;
	add.s32 	%r2759, %r1686, %r2758;
	add.s32 	%r2760, %r2759, %r1685;
	add.s32 	%r2761, %r2760, %r2754;
	add.s32 	%r1695, %r2761, -899497514;
	shf.l.wrap.b32 	%r1697, %r1687, %r1687, 30;
	shf.l.wrap.b32 	%r2762, %r1695, %r1695, 5;
	// begin inline asm
	lop3.b32 %r1690, %r1691, %r1697, %r1693, 150;
	// end inline asm
	xor.b32  	%r2763, %r2654, %r2638;
	xor.b32  	%r2764, %r2763, %r2702;
	xor.b32  	%r2765, %r2764, %r2742;
	shf.l.wrap.b32 	%r2766, %r2765, %r2765, 1;
	add.s32 	%r2767, %r1690, %r2766;
	add.s32 	%r2768, %r2767, %r1689;
	add.s32 	%r2769, %r2768, %r2762;
	add.s32 	%r1699, %r2769, -899497514;
	shf.l.wrap.b32 	%r1701, %r1691, %r1691, 30;
	shf.l.wrap.b32 	%r2770, %r1699, %r1699, 5;
	// begin inline asm
	lop3.b32 %r1694, %r1695, %r1701, %r1697, 150;
	// end inline asm
	xor.b32  	%r2771, %r2662, %r2646;
	xor.b32  	%r2772, %r2771, %r2710;
	xor.b32  	%r2773, %r2772, %r2750;
	shf.l.wrap.b32 	%r2774, %r2773, %r2773, 1;
	add.s32 	%r2775, %r1694, %r2774;
	add.s32 	%r2776, %r2775, %r1693;
	add.s32 	%r2777, %r2776, %r2770;
	add.s32 	%r1703, %r2777, -899497514;
	shf.l.wrap.b32 	%r1705, %r1695, %r1695, 30;
	shf.l.wrap.b32 	%r2778, %r1703, %r1703, 5;
	// begin inline asm
	lop3.b32 %r1698, %r1699, %r1705, %r1701, 150;
	// end inline asm
	xor.b32  	%r2779, %r2670, %r2654;
	xor.b32  	%r2780, %r2779, %r2718;
	xor.b32  	%r2781, %r2780, %r2758;
	shf.l.wrap.b32 	%r2782, %r2781, %r2781, 1;
	add.s32 	%r2783, %r1698, %r2782;
	add.s32 	%r2784, %r2783, %r1697;
	add.s32 	%r2785, %r2784, %r2778;
	add.s32 	%r2786, %r2785, -899497514;
	shf.l.wrap.b32 	%r1704, %r1699, %r1699, 30;
	shf.l.wrap.b32 	%r2787, %r2786, %r2786, 5;
	// begin inline asm
	lop3.b32 %r1702, %r1703, %r1704, %r1705, 150;
	// end inline asm
	xor.b32  	%r2788, %r2678, %r2662;
	xor.b32  	%r2789, %r2788, %r2726;
	xor.b32  	%r2790, %r2789, %r2766;
	shf.l.wrap.b32 	%r2791, %r2790, %r2790, 1;
	shf.l.wrap.b32 	%r2792, %r1703, %r1703, 30;
	add.s32 	%r2793, %r1702, %r2791;
	add.s32 	%r2794, %r2793, %r1701;
	add.s32 	%r2795, %r2794, %r2787;
	add.s32 	%r2796, %r2795, 833086679;
	add.s32 	%r2797, %r2785, -1171231393;
	add.s32 	%r2798, %r2792, -1732584194;
	add.s32 	%r2799, %r1704, 271733878;
	shf.l.wrap.b32 	%r2800, %r2796, %r2796, 16;
	shl.b32 	%r2801, %r2800, 8;
	and.b32  	%r2802, %r2801, -16711936;
	shr.u32 	%r2803, %r2800, 8;
	and.b32  	%r2804, %r2803, 16711935;
	or.b32  	%r2805, %r2802, %r2804;
	add.s32 	%r2806, %r1393, -1009589776;
	st.local.v2.u32 	[%rd1+16], {%r2806, %r2805};
	shf.l.wrap.b32 	%r2807, %r2797, %r2797, 16;
	shl.b32 	%r2808, %r2807, 8;
	and.b32  	%r2809, %r2808, -16711936;
	shr.u32 	%r2810, %r2807, 8;
	and.b32  	%r2811, %r2810, 16711935;
	shf.l.wrap.b32 	%r2812, %r2798, %r2798, 16;
	shl.b32 	%r2813, %r2812, 8;
	and.b32  	%r2814, %r2813, -16711936;
	shr.u32 	%r2815, %r2812, 8;
	and.b32  	%r2816, %r2815, 16711935;
	or.b32  	%r2817, %r2809, %r2811;
	or.b32  	%r2818, %r2814, %r2816;
	st.local.v2.u32 	[%rd1+24], {%r2817, %r2818};
	shf.l.wrap.b32 	%r2819, %r2799, %r2799, 16;
	shl.b32 	%r2820, %r2819, 8;
	and.b32  	%r2821, %r2820, -16711936;
	shr.u32 	%r2822, %r2819, 8;
	and.b32  	%r2823, %r2822, 16711935;
	or.b32  	%r2824, %r2821, %r2823;
	add.s32 	%r2825, %r1705, -1009589776;
	st.local.v2.u32 	[%rd1+32], {%r2824, %r2825};
	ld.const.v4.u16 	{%rs33, %rs34, %rs35, %rs36}, [%rd100+-32];
	ld.const.u8 	%rs9, [%rd100+-24];
	ld.const.u8 	%rs10, [%rd100+-23];
	ld.const.u8 	%rs11, [%rd100+-22];
	ld.const.u8 	%rs12, [%rd100+-21];
	cvt.u32.u16 	%r2826, %rs9;
	cvt.u32.u16 	%r2827, %rs10;
	prmt.b32 	%r2828, %r2827, %r2826, 30212;
	cvt.u32.u16 	%r2829, %rs11;
	cvt.u32.u16 	%r2830, %rs12;
	prmt.b32 	%r2831, %r2830, %r2829, 30212;
	ld.const.u8 	%rs13, [%rd100+-20];
	ld.const.u8 	%rs14, [%rd100+-19];
	ld.const.u8 	%rs15, [%rd100+-18];
	ld.const.u8 	%rs16, [%rd100+-17];
	cvt.u32.u16 	%r2832, %rs13;
	cvt.u32.u16 	%r2833, %rs14;
	prmt.b32 	%r2834, %r2833, %r2832, 30212;
	cvt.u32.u16 	%r2835, %rs15;
	cvt.u32.u16 	%r2836, %rs16;
	prmt.b32 	%r2837, %r2836, %r2835, 30212;
	prmt.b32 	%r40, %r2837, %r2834, 4180;
	prmt.b32 	%r39, %r2831, %r2828, 4180;
	mov.b32 	%r38, {%rs35, %rs36};
	mov.b32 	%r37, {%rs33, %rs34};
	st.local.v4.u32 	[%rd6], {%r37, %r38, %r39, %r40};
	ld.const.u32 	%r2838, [%rd100+-8];
	cvt.u64.u32 	%rd9, %r2838;
	shr.u32 	%r41, %r2838, 3;
	shr.u32 	%r42, %r2838, 5;
	mul.wide.u32 	%rd58, %r42, 4;
	add.s64 	%rd59, %rd5, %rd58;
	add.s64 	%rd10, %rd59, -4;
	mov.u32 	%r9578, 10;
	setp.eq.s32 	%p4, %r41, 16;
	@%p4 bra 	$L__BB3_9;

	setp.eq.s32 	%p5, %r41, 24;
	@%p5 bra 	$L__BB3_8;

	mov.u32 	%r9578, 0;
	setp.ne.s32 	%p6, %r41, 32;
	@%p6 bra 	$L__BB3_23;

	mov.u32 	%r9578, 14;
	bra.uni 	$L__BB3_9;

$L__BB3_8:
	mov.u32 	%r9578, 12;

$L__BB3_9:
	cvt.u32.u64 	%r2841, %rd9;
	shr.u32 	%r44, %r2841, 5;
	shl.b32 	%r2842, %r9578, 2;
	add.s32 	%r45, %r2842, 4;
	setp.eq.s32 	%p7, %r44, 0;
	@%p7 bra 	$L__BB3_16;

	add.s32 	%r2844, %r44, -1;
	and.b32  	%r9583, %r44, 3;
	setp.lt.u32 	%p8, %r2844, 3;
	mov.u32 	%r9581, 0;
	@%p8 bra 	$L__BB3_13;

	sub.s32 	%r9580, %r44, %r9583;
	mov.u32 	%r9581, 0;

$L__BB3_12:
	shl.b32 	%r2846, %r9581, 2;
	cvt.s64.s32 	%rd60, %r2846;
	add.s64 	%rd61, %rd1, %rd60;
	ld.local.u8 	%r2847, [%rd61];
	ld.local.u8 	%r2848, [%rd61+1];
	prmt.b32 	%r2849, %r2848, %r2847, 30212;
	ld.local.u8 	%r2850, [%rd61+2];
	prmt.b32 	%r2851, %r2850, %r2849, 28756;
	ld.local.u8 	%r2852, [%rd61+3];
	mul.wide.s32 	%rd62, %r9581, 4;
	add.s64 	%rd63, %rd5, %rd62;
	prmt.b32 	%r2853, %r2852, %r2851, 1620;
	ld.local.u32 	%r2854, [%rd61+12];
	ld.local.u32 	%r2855, [%rd61+8];
	ld.local.u32 	%r2856, [%rd61+4];
	st.local.v4.u32 	[%rd63], {%r2853, %r2856, %r2855, %r2854};
	add.s32 	%r9581, %r9581, 4;
	add.s32 	%r9580, %r9580, -4;
	setp.ne.s32 	%p9, %r9580, 0;
	@%p9 bra 	$L__BB3_12;

$L__BB3_13:
	setp.eq.s32 	%p10, %r9583, 0;
	@%p10 bra 	$L__BB3_16;

	mul.wide.s32 	%rd64, %r9581, 4;
	add.s64 	%rd102, %rd5, %rd64;
	shl.b32 	%r9582, %r9581, 2;

$L__BB3_15:
	.pragma "nounroll";
	cvt.s64.s32 	%rd65, %r9582;
	add.s64 	%rd66, %rd1, %rd65;
	ld.local.u32 	%r2857, [%rd66];
	st.local.u32 	[%rd102], %r2857;
	add.s64 	%rd102, %rd102, 4;
	add.s32 	%r9582, %r9582, 4;
	add.s32 	%r9583, %r9583, -1;
	setp.ne.s32 	%p11, %r9583, 0;
	@%p11 bra 	$L__BB3_15;

$L__BB3_16:
	setp.ge.u32 	%p12, %r44, %r45;
	@%p12 bra 	$L__BB3_23;

	ld.local.u32 	%r9588, [%rd10];
	shr.u64 	%rd67, %rd9, 3;
	and.b64  	%rd14, %rd67, 536870908;
	mov.u32 	%r9585, 0;
	mov.u64 	%rd103, %rd5;
	mov.u32 	%r9586, %r44;
	mov.u32 	%r9587, %r9585;

$L__BB3_18:
	setp.eq.s32 	%p13, %r9587, 0;
	@%p13 bra 	$L__BB3_21;

	setp.lt.u32 	%p14, %r2841, 224;
	setp.ne.s32 	%p15, %r9587, 4;
	or.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB3_22;

	and.b32  	%r2861, %r9588, 1431655765;
	shl.b32 	%r2862, %r9588, 1;
	and.b32  	%r2863, %r2862, -1431655766;
	or.b32  	%r2864, %r2863, %r2861;
	and.b32  	%r2865, %r9588, -1431655766;
	shr.u32 	%r2866, %r2865, 1;
	or.b32  	%r2867, %r2866, %r2865;
	and.b32  	%r2868, %r2864, 858993459;
	shl.b32 	%r2869, %r2864, 2;
	and.b32  	%r2870, %r2869, -858993460;
	or.b32  	%r2871, %r2870, %r2868;
	and.b32  	%r2872, %r2864, -858993460;
	shr.u32 	%r2873, %r2872, 2;
	or.b32  	%r2874, %r2873, %r2872;
	and.b32  	%r2875, %r2867, 858993459;
	shl.b32 	%r2876, %r2867, 2;
	and.b32  	%r2877, %r2876, -858993460;
	or.b32  	%r2878, %r2877, %r2875;
	and.b32  	%r2879, %r2867, -858993460;
	shr.u32 	%r2880, %r2879, 2;
	or.b32  	%r2881, %r2880, %r2879;
	and.b32  	%r2882, %r2871, 252645135;
	shl.b32 	%r2883, %r2871, 4;
	and.b32  	%r2884, %r2883, -252645136;
	or.b32  	%r2885, %r2884, %r2882;
	and.b32  	%r2886, %r2871, -252645136;
	shr.u32 	%r2887, %r2886, 4;
	or.b32  	%r2888, %r2887, %r2886;
	and.b32  	%r2889, %r2878, 252645135;
	shl.b32 	%r2890, %r2878, 4;
	and.b32  	%r2891, %r2890, -252645136;
	or.b32  	%r2892, %r2891, %r2889;
	and.b32  	%r2893, %r2878, -252645136;
	shr.u32 	%r2894, %r2893, 4;
	or.b32  	%r2895, %r2894, %r2893;
	and.b32  	%r2896, %r2874, 252645135;
	shl.b32 	%r2897, %r2874, 4;
	and.b32  	%r2898, %r2897, -252645136;
	or.b32  	%r2899, %r2898, %r2896;
	and.b32  	%r2900, %r2874, -252645136;
	shr.u32 	%r2901, %r2900, 4;
	or.b32  	%r2902, %r2901, %r2900;
	and.b32  	%r2903, %r2881, 252645135;
	shl.b32 	%r2904, %r2881, 4;
	and.b32  	%r2905, %r2904, -252645136;
	or.b32  	%r2906, %r2905, %r2903;
	and.b32  	%r2907, %r2881, -252645136;
	shr.u32 	%r2908, %r2907, 4;
	or.b32  	%r2909, %r2908, %r2907;
	xor.b32  	%r2910, %r2899, %r2888;
	xor.b32  	%r2911, %r2892, %r2909;
	xor.b32  	%r2912, %r2888, %r2909;
	xor.b32  	%r2913, %r2899, %r2909;
	xor.b32  	%r2914, %r2895, %r2902;
	xor.b32  	%r2915, %r2885, %r2914;
	xor.b32  	%r2916, %r2915, %r2888;
	xor.b32  	%r2917, %r2911, %r2910;
	xor.b32  	%r2918, %r2915, %r2909;
	xor.b32  	%r2919, %r2915, %r2892;
	xor.b32  	%r2920, %r2919, %r2913;
	xor.b32  	%r2921, %r2917, %r2906;
	xor.b32  	%r2922, %r2921, %r2899;
	xor.b32  	%r2923, %r2921, %r2902;
	xor.b32  	%r2924, %r2922, %r2885;
	xor.b32  	%r2925, %r2922, %r2914;
	xor.b32  	%r2926, %r2923, %r2912;
	xor.b32  	%r2927, %r2926, %r2885;
	xor.b32  	%r2928, %r2925, %r2926;
	xor.b32  	%r2929, %r2926, %r2914;
	and.b32  	%r2930, %r2922, %r2917;
	and.b32  	%r2931, %r2924, %r2920;
	and.b32  	%r2932, %r2916, %r2885;
	and.b32  	%r2933, %r2929, %r2911;
	and.b32  	%r2934, %r2919, %r2915;
	and.b32  	%r2935, %r2927, %r2918;
	and.b32  	%r2936, %r2926, %r2912;
	and.b32  	%r2937, %r2928, %r2910;
	xor.b32  	%r2938, %r2937, %r2936;
	and.b32  	%r2939, %r2925, %r2913;
	xor.b32  	%r2940, %r2939, %r2936;
	xor.b32  	%r2941, %r2930, %r2923;
	xor.b32  	%r2942, %r2941, %r2931;
	xor.b32  	%r2943, %r2942, %r2938;
	xor.b32  	%r2944, %r2932, %r2913;
	xor.b32  	%r2945, %r2944, %r2925;
	xor.b32  	%r2946, %r2945, %r2930;
	xor.b32  	%r2947, %r2946, %r2940;
	xor.b32  	%r2948, %r2934, %r2911;
	xor.b32  	%r2949, %r2948, %r2929;
	xor.b32  	%r2950, %r2949, %r2933;
	xor.b32  	%r2951, %r2950, %r2938;
	xor.b32  	%r2952, %r2929, %r2909;
	xor.b32  	%r2953, %r2952, %r2933;
	xor.b32  	%r2954, %r2953, %r2935;
	xor.b32  	%r2955, %r2954, %r2940;
	xor.b32  	%r2956, %r2943, %r2947;
	and.b32  	%r2957, %r2943, %r2951;
	xor.b32  	%r2958, %r2957, %r2955;
	and.b32  	%r2959, %r2958, %r2956;
	xor.b32  	%r2960, %r2959, %r2947;
	xor.b32  	%r2961, %r2951, %r2955;
	xor.b32  	%r2962, %r2957, %r2947;
	and.b32  	%r2963, %r2962, %r2961;
	xor.b32  	%r2964, %r2963, %r2955;
	xor.b32  	%r2965, %r2964, %r2951;
	xor.b32  	%r2966, %r2963, %r2957;
	and.b32  	%r2967, %r2966, %r2955;
	xor.b32  	%r2968, %r2965, %r2967;
	xor.b32  	%r2969, %r2967, %r2958;
	and.b32  	%r2970, %r2969, %r2960;
	xor.b32  	%r2971, %r2970, %r2956;
	xor.b32  	%r2972, %r2971, %r2968;
	xor.b32  	%r2973, %r2960, %r2964;
	xor.b32  	%r2974, %r2971, %r2960;
	xor.b32  	%r2975, %r2967, %r2951;
	xor.b32  	%r2976, %r2972, %r2973;
	and.b32  	%r2977, %r2975, %r2922;
	and.b32  	%r2978, %r2968, %r2924;
	and.b32  	%r2979, %r2964, %r2885;
	and.b32  	%r2980, %r2974, %r2929;
	and.b32  	%r2981, %r2971, %r2915;
	and.b32  	%r2982, %r2960, %r2927;
	and.b32  	%r2983, %r2973, %r2926;
	and.b32  	%r2984, %r2976, %r2928;
	and.b32  	%r2985, %r2972, %r2925;
	and.b32  	%r2986, %r2975, %r2917;
	and.b32  	%r2987, %r2968, %r2920;
	and.b32  	%r2988, %r2964, %r2916;
	and.b32  	%r2989, %r2974, %r2911;
	and.b32  	%r2990, %r2971, %r2919;
	and.b32  	%r2991, %r2960, %r2918;
	and.b32  	%r2992, %r2973, %r2912;
	and.b32  	%r2993, %r2976, %r2910;
	and.b32  	%r2994, %r2972, %r2913;
	xor.b32  	%r2995, %r2993, %r2992;
	xor.b32  	%r2996, %r2987, %r2988;
	xor.b32  	%r2997, %r2990, %r2982;
	xor.b32  	%r2998, %r2986, %r2987;
	xor.b32  	%r2999, %r2989, %r2979;
	xor.b32  	%r3000, %r2979, %r2982;
	xor.b32  	%r3001, %r2984, %r2985;
	xor.b32  	%r3002, %r2980, %r2977;
	xor.b32  	%r3003, %r2999, %r3002;
	xor.b32  	%r3004, %r2995, %r2981;
	xor.b32  	%r3005, %r2980, %r2983;
	xor.b32  	%r3006, %r3005, %r2984;
	xor.b32  	%r3007, %r3003, %r2991;
	xor.b32  	%r3008, %r3001, %r3004;
	xor.b32  	%r3009, %r2998, %r3004;
	xor.b32  	%r3010, %r3006, %r2981;
	xor.b32  	%r3011, %r3007, %r3008;
	xor.b32  	%r3012, %r3009, %r2978;
	xor.b32  	%r3013, %r3009, %r3006;
	xor.b32  	%r3014, %r2997, 16843009;
	xor.b32  	%r3015, %r2989, %r3014;
	xor.b32  	%r3016, %r3015, %r3008;
	xor.b32  	%r3017, %r3003, %r3014;
	xor.b32  	%r3018, %r3017, %r2995;
	xor.b32  	%r3019, %r3012, %r3002;
	xor.b32  	%r3020, %r3000, %r3012;
	xor.b32  	%r3021, %r2996, %r3011;
	xor.b32  	%r3022, %r3019, %r3010;
	not.b32 	%r3023, %r3022;
	xor.b32  	%r3024, %r2993, %r2994;
	xor.b32  	%r3025, %r3024, %r3010;
	xor.b32  	%r3026, %r3025, %r3011;
	and.b32  	%r3027, %r3018, 16843009;
	shl.b32 	%r3028, %r3016, 1;
	and.b32  	%r3029, %r3028, 33686018;
	or.b32  	%r3030, %r3029, %r3027;
	and.b32  	%r3031, %r3021, 16843009;
	shl.b32 	%r3032, %r3020, 1;
	and.b32  	%r3033, %r3032, 33686018;
	or.b32  	%r3034, %r3033, %r3031;
	and.b32  	%r3035, %r3019, 16843009;
	shl.b32 	%r3036, %r3026, 1;
	not.b32 	%r3037, %r3036;
	and.b32  	%r3038, %r3037, 33686018;
	or.b32  	%r3039, %r3038, %r3035;
	and.b32  	%r3040, %r3023, 16843009;
	shl.b32 	%r3041, %r3013, 1;
	and.b32  	%r3042, %r3041, 33686018;
	or.b32  	%r3043, %r3042, %r3040;
	shl.b32 	%r3044, %r3034, 2;
	or.b32  	%r3045, %r3044, %r3030;
	shl.b32 	%r3046, %r3043, 2;
	or.b32  	%r3047, %r3046, %r3039;
	shl.b32 	%r3048, %r3047, 4;
	or.b32  	%r9588, %r3048, %r3045;
	bra.uni 	$L__BB3_22;

$L__BB3_21:
	shf.l.wrap.b32 	%r3049, %r9588, %r9588, 24;
	and.b32  	%r3050, %r3049, 1431655765;
	shl.b32 	%r3051, %r3049, 1;
	and.b32  	%r3052, %r3051, -1431655766;
	or.b32  	%r3053, %r3052, %r3050;
	and.b32  	%r3054, %r3049, -1431655766;
	shr.u32 	%r3055, %r3054, 1;
	or.b32  	%r3056, %r3055, %r3054;
	and.b32  	%r3057, %r3053, 858993459;
	shl.b32 	%r3058, %r3053, 2;
	and.b32  	%r3059, %r3058, -858993460;
	or.b32  	%r3060, %r3059, %r3057;
	and.b32  	%r3061, %r3053, -858993460;
	shr.u32 	%r3062, %r3061, 2;
	or.b32  	%r3063, %r3062, %r3061;
	and.b32  	%r3064, %r3056, 858993459;
	shl.b32 	%r3065, %r3056, 2;
	and.b32  	%r3066, %r3065, -858993460;
	or.b32  	%r3067, %r3066, %r3064;
	and.b32  	%r3068, %r3056, -858993460;
	shr.u32 	%r3069, %r3068, 2;
	or.b32  	%r3070, %r3069, %r3068;
	and.b32  	%r3071, %r3060, 252645135;
	shl.b32 	%r3072, %r3060, 4;
	and.b32  	%r3073, %r3072, -252645136;
	or.b32  	%r3074, %r3073, %r3071;
	and.b32  	%r3075, %r3060, -252645136;
	shr.u32 	%r3076, %r3075, 4;
	or.b32  	%r3077, %r3076, %r3075;
	and.b32  	%r3078, %r3067, 252645135;
	shl.b32 	%r3079, %r3067, 4;
	and.b32  	%r3080, %r3079, -252645136;
	or.b32  	%r3081, %r3080, %r3078;
	and.b32  	%r3082, %r3067, -252645136;
	shr.u32 	%r3083, %r3082, 4;
	or.b32  	%r3084, %r3083, %r3082;
	and.b32  	%r3085, %r3063, 252645135;
	shl.b32 	%r3086, %r3063, 4;
	and.b32  	%r3087, %r3086, -252645136;
	or.b32  	%r3088, %r3087, %r3085;
	and.b32  	%r3089, %r3063, -252645136;
	shr.u32 	%r3090, %r3089, 4;
	or.b32  	%r3091, %r3090, %r3089;
	and.b32  	%r3092, %r3070, 252645135;
	shl.b32 	%r3093, %r3070, 4;
	and.b32  	%r3094, %r3093, -252645136;
	or.b32  	%r3095, %r3094, %r3092;
	and.b32  	%r3096, %r3070, -252645136;
	shr.u32 	%r3097, %r3096, 4;
	or.b32  	%r3098, %r3097, %r3096;
	xor.b32  	%r3099, %r3088, %r3077;
	xor.b32  	%r3100, %r3081, %r3098;
	xor.b32  	%r3101, %r3077, %r3098;
	xor.b32  	%r3102, %r3088, %r3098;
	xor.b32  	%r3103, %r3084, %r3091;
	xor.b32  	%r3104, %r3074, %r3103;
	xor.b32  	%r3105, %r3104, %r3077;
	xor.b32  	%r3106, %r3100, %r3099;
	xor.b32  	%r3107, %r3104, %r3098;
	xor.b32  	%r3108, %r3104, %r3081;
	xor.b32  	%r3109, %r3108, %r3102;
	xor.b32  	%r3110, %r3106, %r3095;
	xor.b32  	%r3111, %r3110, %r3088;
	xor.b32  	%r3112, %r3110, %r3091;
	xor.b32  	%r3113, %r3111, %r3074;
	xor.b32  	%r3114, %r3111, %r3103;
	xor.b32  	%r3115, %r3112, %r3101;
	xor.b32  	%r3116, %r3115, %r3074;
	xor.b32  	%r3117, %r3114, %r3115;
	xor.b32  	%r3118, %r3115, %r3103;
	and.b32  	%r3119, %r3111, %r3106;
	and.b32  	%r3120, %r3113, %r3109;
	and.b32  	%r3121, %r3105, %r3074;
	and.b32  	%r3122, %r3118, %r3100;
	and.b32  	%r3123, %r3108, %r3104;
	and.b32  	%r3124, %r3116, %r3107;
	and.b32  	%r3125, %r3115, %r3101;
	and.b32  	%r3126, %r3117, %r3099;
	xor.b32  	%r3127, %r3126, %r3125;
	and.b32  	%r3128, %r3114, %r3102;
	xor.b32  	%r3129, %r3128, %r3125;
	xor.b32  	%r3130, %r3119, %r3112;
	xor.b32  	%r3131, %r3130, %r3120;
	xor.b32  	%r3132, %r3131, %r3127;
	xor.b32  	%r3133, %r3121, %r3102;
	xor.b32  	%r3134, %r3133, %r3114;
	xor.b32  	%r3135, %r3134, %r3119;
	xor.b32  	%r3136, %r3135, %r3129;
	xor.b32  	%r3137, %r3123, %r3100;
	xor.b32  	%r3138, %r3137, %r3118;
	xor.b32  	%r3139, %r3138, %r3122;
	xor.b32  	%r3140, %r3139, %r3127;
	xor.b32  	%r3141, %r3118, %r3098;
	xor.b32  	%r3142, %r3141, %r3122;
	xor.b32  	%r3143, %r3142, %r3124;
	xor.b32  	%r3144, %r3143, %r3129;
	xor.b32  	%r3145, %r3132, %r3136;
	and.b32  	%r3146, %r3132, %r3140;
	xor.b32  	%r3147, %r3146, %r3144;
	and.b32  	%r3148, %r3147, %r3145;
	xor.b32  	%r3149, %r3148, %r3136;
	xor.b32  	%r3150, %r3140, %r3144;
	xor.b32  	%r3151, %r3146, %r3136;
	and.b32  	%r3152, %r3151, %r3150;
	xor.b32  	%r3153, %r3152, %r3144;
	xor.b32  	%r3154, %r3153, %r3140;
	xor.b32  	%r3155, %r3152, %r3146;
	and.b32  	%r3156, %r3155, %r3144;
	xor.b32  	%r3157, %r3154, %r3156;
	xor.b32  	%r3158, %r3156, %r3147;
	and.b32  	%r3159, %r3158, %r3149;
	xor.b32  	%r3160, %r3159, %r3145;
	xor.b32  	%r3161, %r3160, %r3157;
	xor.b32  	%r3162, %r3149, %r3153;
	xor.b32  	%r3163, %r3160, %r3149;
	xor.b32  	%r3164, %r3156, %r3140;
	xor.b32  	%r3165, %r3161, %r3162;
	and.b32  	%r3166, %r3164, %r3111;
	and.b32  	%r3167, %r3157, %r3113;
	and.b32  	%r3168, %r3153, %r3074;
	and.b32  	%r3169, %r3163, %r3118;
	and.b32  	%r3170, %r3160, %r3104;
	and.b32  	%r3171, %r3149, %r3116;
	and.b32  	%r3172, %r3162, %r3115;
	and.b32  	%r3173, %r3165, %r3117;
	and.b32  	%r3174, %r3161, %r3114;
	and.b32  	%r3175, %r3164, %r3106;
	and.b32  	%r3176, %r3157, %r3109;
	and.b32  	%r3177, %r3153, %r3105;
	and.b32  	%r3178, %r3163, %r3100;
	and.b32  	%r3179, %r3160, %r3108;
	and.b32  	%r3180, %r3149, %r3107;
	and.b32  	%r3181, %r3162, %r3101;
	and.b32  	%r3182, %r3165, %r3099;
	and.b32  	%r3183, %r3161, %r3102;
	xor.b32  	%r3184, %r3182, %r3181;
	xor.b32  	%r3185, %r3176, %r3177;
	xor.b32  	%r3186, %r3179, %r3171;
	xor.b32  	%r3187, %r3175, %r3176;
	xor.b32  	%r3188, %r3178, %r3168;
	xor.b32  	%r3189, %r3168, %r3171;
	xor.b32  	%r3190, %r3173, %r3174;
	xor.b32  	%r3191, %r3169, %r3166;
	xor.b32  	%r3192, %r3188, %r3191;
	xor.b32  	%r3193, %r3184, %r3170;
	xor.b32  	%r3194, %r3169, %r3172;
	xor.b32  	%r3195, %r3194, %r3173;
	xor.b32  	%r3196, %r3192, %r3180;
	xor.b32  	%r3197, %r3190, %r3193;
	xor.b32  	%r3198, %r3187, %r3193;
	xor.b32  	%r3199, %r3195, %r3170;
	xor.b32  	%r3200, %r3196, %r3197;
	xor.b32  	%r3201, %r3198, %r3167;
	xor.b32  	%r3202, %r3198, %r3195;
	xor.b32  	%r3203, %r3186, 16843009;
	xor.b32  	%r3204, %r3178, %r3203;
	xor.b32  	%r3205, %r3204, %r3197;
	xor.b32  	%r3206, %r3192, %r3203;
	xor.b32  	%r3207, %r3206, %r3184;
	xor.b32  	%r3208, %r3201, %r3191;
	xor.b32  	%r3209, %r3189, %r3201;
	xor.b32  	%r3210, %r3185, %r3200;
	xor.b32  	%r3211, %r3208, %r3199;
	not.b32 	%r3212, %r3211;
	xor.b32  	%r3213, %r3182, %r3183;
	xor.b32  	%r3214, %r3213, %r3199;
	xor.b32  	%r3215, %r3214, %r3200;
	and.b32  	%r3216, %r3207, 16843009;
	shl.b32 	%r3217, %r3205, 1;
	and.b32  	%r3218, %r3217, 33686018;
	or.b32  	%r3219, %r3218, %r3216;
	and.b32  	%r3220, %r3210, 16843009;
	shl.b32 	%r3221, %r3209, 1;
	and.b32  	%r3222, %r3221, 33686018;
	or.b32  	%r3223, %r3222, %r3220;
	and.b32  	%r3224, %r3208, 16843009;
	shl.b32 	%r3225, %r3215, 1;
	not.b32 	%r3226, %r3225;
	and.b32  	%r3227, %r3226, 33686018;
	or.b32  	%r3228, %r3227, %r3224;
	and.b32  	%r3229, %r3212, 16843009;
	shl.b32 	%r3230, %r3202, 1;
	and.b32  	%r3231, %r3230, 33686018;
	or.b32  	%r3232, %r3231, %r3229;
	shl.b32 	%r3233, %r3223, 2;
	or.b32  	%r3234, %r3233, %r3219;
	shl.b32 	%r3235, %r3232, 2;
	or.b32  	%r3236, %r3235, %r3228;
	shl.b32 	%r3237, %r3236, 4;
	or.b32  	%r3238, %r3237, %r3234;
	cvt.s64.s32 	%rd68, %r9585;
	mov.u64 	%rd69, aes_keysched_base_$_Rcon;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u8 	%r3239, [%rd70];
	xor.b32  	%r9588, %r3238, %r3239;

$L__BB3_22:
	ld.local.u32 	%r3240, [%rd103];
	xor.b32  	%r9588, %r3240, %r9588;
	add.s64 	%rd71, %rd103, %rd14;
	st.local.u32 	[%rd71], %r9588;
	add.s32 	%r3241, %r9587, 1;
	setp.eq.s32 	%p17, %r3241, %r44;
	selp.b32 	%r9587, 0, %r3241, %p17;
	selp.u32 	%r3242, 1, 0, %p17;
	add.s32 	%r9585, %r9585, %r3242;
	add.s64 	%rd103, %rd103, 4;
	add.s32 	%r9586, %r9586, 1;
	setp.lt.u32 	%p18, %r9586, %r45;
	@%p18 bra 	$L__BB3_18;

$L__BB3_23:
	ld.local.v4.u32 	{%r3243, %r3244, %r3245, %r3246}, [%rd5];
	and.b32  	%r3251, %r3243, 1431655765;
	shl.b32 	%r3252, %r3243, 1;
	and.b32  	%r3253, %r3252, -1431655766;
	or.b32  	%r3254, %r3253, %r3251;
	and.b32  	%r3255, %r3243, -1431655766;
	shr.u32 	%r3256, %r3255, 1;
	or.b32  	%r3257, %r3256, %r3255;
	and.b32  	%r3258, %r3244, 1431655765;
	shl.b32 	%r3259, %r3244, 1;
	and.b32  	%r3260, %r3259, -1431655766;
	or.b32  	%r3261, %r3260, %r3258;
	and.b32  	%r3262, %r3244, -1431655766;
	shr.u32 	%r3263, %r3262, 1;
	or.b32  	%r3264, %r3263, %r3262;
	and.b32  	%r3265, %r3245, 1431655765;
	shl.b32 	%r3266, %r3245, 1;
	and.b32  	%r3267, %r3266, -1431655766;
	or.b32  	%r3268, %r3267, %r3265;
	and.b32  	%r3269, %r3245, -1431655766;
	shr.u32 	%r3270, %r3269, 1;
	or.b32  	%r3271, %r3270, %r3269;
	and.b32  	%r3272, %r3246, 1431655765;
	shl.b32 	%r3273, %r3246, 1;
	and.b32  	%r3274, %r3273, -1431655766;
	or.b32  	%r3275, %r3274, %r3272;
	and.b32  	%r3276, %r3246, -1431655766;
	shr.u32 	%r3277, %r3276, 1;
	or.b32  	%r3278, %r3277, %r3276;
	and.b32  	%r3279, %r3254, 858993459;
	shl.b32 	%r3280, %r3261, 2;
	and.b32  	%r3281, %r3280, -858993460;
	or.b32  	%r3282, %r3281, %r3279;
	and.b32  	%r3283, %r3254, -858993460;
	shr.u32 	%r3284, %r3283, 2;
	and.b32  	%r3285, %r3261, -858993460;
	or.b32  	%r3286, %r3284, %r3285;
	and.b32  	%r3287, %r3257, 858993459;
	shl.b32 	%r3288, %r3264, 2;
	and.b32  	%r3289, %r3288, -858993460;
	or.b32  	%r3290, %r3289, %r3287;
	and.b32  	%r3291, %r3257, -858993460;
	shr.u32 	%r3292, %r3291, 2;
	and.b32  	%r3293, %r3264, -858993460;
	or.b32  	%r3294, %r3292, %r3293;
	and.b32  	%r3295, %r3268, 858993459;
	shl.b32 	%r3296, %r3275, 2;
	and.b32  	%r3297, %r3296, -858993460;
	or.b32  	%r3298, %r3297, %r3295;
	and.b32  	%r3299, %r3268, -858993460;
	shr.u32 	%r3300, %r3299, 2;
	and.b32  	%r3301, %r3275, -858993460;
	or.b32  	%r3302, %r3300, %r3301;
	and.b32  	%r3303, %r3271, 858993459;
	shl.b32 	%r3304, %r3278, 2;
	and.b32  	%r3305, %r3304, -858993460;
	or.b32  	%r3306, %r3305, %r3303;
	and.b32  	%r3307, %r3271, -858993460;
	shr.u32 	%r3308, %r3307, 2;
	and.b32  	%r3309, %r3278, -858993460;
	or.b32  	%r3310, %r3308, %r3309;
	and.b32  	%r3311, %r3282, 84215045;
	shl.b32 	%r3312, %r3298, 4;
	and.b32  	%r3313, %r3312, 1347440720;
	and.b32  	%r3314, %r3282, 1347440720;
	and.b32  	%r3315, %r3298, 1347440720;
	and.b32  	%r3316, %r3290, 168430090;
	shl.b32 	%r3317, %r3306, 4;
	and.b32  	%r3318, %r3317, -1600085856;
	and.b32  	%r3319, %r3290, -1600085856;
	and.b32  	%r3320, %r3306, -1600085856;
	and.b32  	%r3321, %r3286, 84215045;
	shl.b32 	%r3322, %r3302, 4;
	and.b32  	%r3323, %r3322, 1347440720;
	and.b32  	%r3324, %r3286, 1347440720;
	and.b32  	%r3325, %r3302, 1347440720;
	and.b32  	%r3326, %r3294, 168430090;
	shl.b32 	%r3327, %r3310, 4;
	and.b32  	%r3328, %r3327, -1600085856;
	and.b32  	%r3329, %r3294, -1600085856;
	and.b32  	%r3330, %r3310, -1600085856;
	or.b32  	%r3331, %r3316, %r3311;
	or.b32  	%r3332, %r3331, %r3313;
	or.b32  	%r3333, %r3332, %r3318;
	st.local.u32 	[%rd4], %r3333;
	or.b32  	%r3334, %r3326, %r3321;
	or.b32  	%r3335, %r3334, %r3323;
	or.b32  	%r3336, %r3335, %r3328;
	st.local.u32 	[%rd4+4], %r3336;
	or.b32  	%r3337, %r3319, %r3314;
	shr.u32 	%r3338, %r3337, 4;
	or.b32  	%r3339, %r3338, %r3315;
	or.b32  	%r3340, %r3339, %r3320;
	st.local.u32 	[%rd4+8], %r3340;
	or.b32  	%r3341, %r3329, %r3324;
	shr.u32 	%r3342, %r3341, 4;
	or.b32  	%r3343, %r3342, %r3325;
	or.b32  	%r3344, %r3343, %r3330;
	st.local.u32 	[%rd4+12], %r3344;
	setp.eq.s32 	%p19, %r9578, 0;
	@%p19 bra 	$L__BB3_31;

	ld.local.v4.u32 	{%r3345, %r3346, %r3347, %r3348}, [%rd5+16];
	and.b32  	%r3353, %r3345, 1431655765;
	shl.b32 	%r3354, %r3345, 1;
	and.b32  	%r3355, %r3354, -1431655766;
	or.b32  	%r3356, %r3355, %r3353;
	and.b32  	%r3357, %r3345, -1431655766;
	shr.u32 	%r3358, %r3357, 1;
	or.b32  	%r3359, %r3358, %r3357;
	and.b32  	%r3360, %r3346, 1431655765;
	shl.b32 	%r3361, %r3346, 1;
	and.b32  	%r3362, %r3361, -1431655766;
	or.b32  	%r3363, %r3362, %r3360;
	and.b32  	%r3364, %r3346, -1431655766;
	shr.u32 	%r3365, %r3364, 1;
	or.b32  	%r3366, %r3365, %r3364;
	and.b32  	%r3367, %r3347, 1431655765;
	shl.b32 	%r3368, %r3347, 1;
	and.b32  	%r3369, %r3368, -1431655766;
	or.b32  	%r3370, %r3369, %r3367;
	and.b32  	%r3371, %r3347, -1431655766;
	shr.u32 	%r3372, %r3371, 1;
	or.b32  	%r3373, %r3372, %r3371;
	and.b32  	%r3374, %r3348, 1431655765;
	shl.b32 	%r3375, %r3348, 1;
	and.b32  	%r3376, %r3375, -1431655766;
	or.b32  	%r3377, %r3376, %r3374;
	and.b32  	%r3378, %r3348, -1431655766;
	shr.u32 	%r3379, %r3378, 1;
	or.b32  	%r3380, %r3379, %r3378;
	and.b32  	%r3381, %r3356, 858993459;
	shl.b32 	%r3382, %r3363, 2;
	and.b32  	%r3383, %r3382, -858993460;
	or.b32  	%r3384, %r3383, %r3381;
	and.b32  	%r3385, %r3356, -858993460;
	shr.u32 	%r3386, %r3385, 2;
	and.b32  	%r3387, %r3363, -858993460;
	or.b32  	%r3388, %r3386, %r3387;
	and.b32  	%r3389, %r3359, 858993459;
	shl.b32 	%r3390, %r3366, 2;
	and.b32  	%r3391, %r3390, -858993460;
	or.b32  	%r3392, %r3391, %r3389;
	and.b32  	%r3393, %r3359, -858993460;
	shr.u32 	%r3394, %r3393, 2;
	and.b32  	%r3395, %r3366, -858993460;
	or.b32  	%r3396, %r3394, %r3395;
	and.b32  	%r3397, %r3370, 858993459;
	shl.b32 	%r3398, %r3377, 2;
	and.b32  	%r3399, %r3398, -858993460;
	or.b32  	%r3400, %r3399, %r3397;
	and.b32  	%r3401, %r3370, -858993460;
	shr.u32 	%r3402, %r3401, 2;
	and.b32  	%r3403, %r3377, -858993460;
	or.b32  	%r3404, %r3402, %r3403;
	and.b32  	%r3405, %r3373, 858993459;
	shl.b32 	%r3406, %r3380, 2;
	and.b32  	%r3407, %r3406, -858993460;
	or.b32  	%r3408, %r3407, %r3405;
	and.b32  	%r3409, %r3373, -858993460;
	shr.u32 	%r3410, %r3409, 2;
	and.b32  	%r3411, %r3380, -858993460;
	or.b32  	%r3412, %r3410, %r3411;
	and.b32  	%r3413, %r3384, 84215045;
	shl.b32 	%r3414, %r3400, 4;
	and.b32  	%r3415, %r3414, 1347440720;
	and.b32  	%r3416, %r3384, 1347440720;
	and.b32  	%r3417, %r3400, 1347440720;
	and.b32  	%r3418, %r3392, 168430090;
	shl.b32 	%r3419, %r3408, 4;
	and.b32  	%r3420, %r3419, -1600085856;
	and.b32  	%r3421, %r3392, -1600085856;
	and.b32  	%r3422, %r3408, -1600085856;
	and.b32  	%r3423, %r3388, 84215045;
	shl.b32 	%r3424, %r3404, 4;
	and.b32  	%r3425, %r3424, 1347440720;
	and.b32  	%r3426, %r3388, 1347440720;
	and.b32  	%r3427, %r3404, 1347440720;
	and.b32  	%r3428, %r3396, 168430090;
	shl.b32 	%r3429, %r3412, 4;
	and.b32  	%r3430, %r3429, -1600085856;
	and.b32  	%r3431, %r3396, -1600085856;
	and.b32  	%r3432, %r3412, -1600085856;
	or.b32  	%r3433, %r3418, %r3413;
	or.b32  	%r3434, %r3433, %r3415;
	or.b32  	%r3435, %r3434, %r3420;
	st.local.u32 	[%rd4+16], %r3435;
	or.b32  	%r3436, %r3428, %r3423;
	or.b32  	%r3437, %r3436, %r3425;
	or.b32  	%r3438, %r3437, %r3430;
	st.local.u32 	[%rd4+20], %r3438;
	or.b32  	%r3439, %r3421, %r3416;
	shr.u32 	%r3440, %r3439, 4;
	or.b32  	%r3441, %r3440, %r3417;
	or.b32  	%r3442, %r3441, %r3422;
	st.local.u32 	[%rd4+24], %r3442;
	or.b32  	%r3443, %r3431, %r3426;
	shr.u32 	%r3444, %r3443, 4;
	or.b32  	%r3445, %r3444, %r3427;
	or.b32  	%r3446, %r3445, %r3432;
	st.local.u32 	[%rd4+28], %r3446;
	ld.local.v4.u32 	{%r3447, %r3448, %r3449, %r3450}, [%rd5+32];
	and.b32  	%r3455, %r3447, 1431655765;
	shl.b32 	%r3456, %r3447, 1;
	and.b32  	%r3457, %r3456, -1431655766;
	or.b32  	%r3458, %r3457, %r3455;
	and.b32  	%r3459, %r3447, -1431655766;
	shr.u32 	%r3460, %r3459, 1;
	or.b32  	%r3461, %r3460, %r3459;
	and.b32  	%r3462, %r3448, 1431655765;
	shl.b32 	%r3463, %r3448, 1;
	and.b32  	%r3464, %r3463, -1431655766;
	or.b32  	%r3465, %r3464, %r3462;
	and.b32  	%r3466, %r3448, -1431655766;
	shr.u32 	%r3467, %r3466, 1;
	or.b32  	%r3468, %r3467, %r3466;
	and.b32  	%r3469, %r3449, 1431655765;
	shl.b32 	%r3470, %r3449, 1;
	and.b32  	%r3471, %r3470, -1431655766;
	or.b32  	%r3472, %r3471, %r3469;
	and.b32  	%r3473, %r3449, -1431655766;
	shr.u32 	%r3474, %r3473, 1;
	or.b32  	%r3475, %r3474, %r3473;
	and.b32  	%r3476, %r3450, 1431655765;
	shl.b32 	%r3477, %r3450, 1;
	and.b32  	%r3478, %r3477, -1431655766;
	or.b32  	%r3479, %r3478, %r3476;
	and.b32  	%r3480, %r3450, -1431655766;
	shr.u32 	%r3481, %r3480, 1;
	or.b32  	%r3482, %r3481, %r3480;
	and.b32  	%r3483, %r3458, 858993459;
	shl.b32 	%r3484, %r3465, 2;
	and.b32  	%r3485, %r3484, -858993460;
	or.b32  	%r3486, %r3485, %r3483;
	and.b32  	%r3487, %r3458, -858993460;
	shr.u32 	%r3488, %r3487, 2;
	and.b32  	%r3489, %r3465, -858993460;
	or.b32  	%r3490, %r3488, %r3489;
	and.b32  	%r3491, %r3461, 858993459;
	shl.b32 	%r3492, %r3468, 2;
	and.b32  	%r3493, %r3492, -858993460;
	or.b32  	%r3494, %r3493, %r3491;
	and.b32  	%r3495, %r3461, -858993460;
	shr.u32 	%r3496, %r3495, 2;
	and.b32  	%r3497, %r3468, -858993460;
	or.b32  	%r3498, %r3496, %r3497;
	and.b32  	%r3499, %r3472, 858993459;
	shl.b32 	%r3500, %r3479, 2;
	and.b32  	%r3501, %r3500, -858993460;
	or.b32  	%r3502, %r3501, %r3499;
	and.b32  	%r3503, %r3472, -858993460;
	shr.u32 	%r3504, %r3503, 2;
	and.b32  	%r3505, %r3479, -858993460;
	or.b32  	%r3506, %r3504, %r3505;
	and.b32  	%r3507, %r3475, 858993459;
	shl.b32 	%r3508, %r3482, 2;
	and.b32  	%r3509, %r3508, -858993460;
	or.b32  	%r3510, %r3509, %r3507;
	and.b32  	%r3511, %r3475, -858993460;
	shr.u32 	%r3512, %r3511, 2;
	and.b32  	%r3513, %r3482, -858993460;
	or.b32  	%r3514, %r3512, %r3513;
	and.b32  	%r3515, %r3486, 84215045;
	shl.b32 	%r3516, %r3502, 4;
	and.b32  	%r3517, %r3516, 1347440720;
	and.b32  	%r3518, %r3486, 1347440720;
	and.b32  	%r3519, %r3502, 1347440720;
	and.b32  	%r3520, %r3494, 168430090;
	shl.b32 	%r3521, %r3510, 4;
	and.b32  	%r3522, %r3521, -1600085856;
	and.b32  	%r3523, %r3494, -1600085856;
	and.b32  	%r3524, %r3510, -1600085856;
	and.b32  	%r3525, %r3490, 84215045;
	shl.b32 	%r3526, %r3506, 4;
	and.b32  	%r3527, %r3526, 1347440720;
	and.b32  	%r3528, %r3490, 1347440720;
	and.b32  	%r3529, %r3506, 1347440720;
	and.b32  	%r3530, %r3498, 168430090;
	shl.b32 	%r3531, %r3514, 4;
	and.b32  	%r3532, %r3531, -1600085856;
	and.b32  	%r3533, %r3498, -1600085856;
	and.b32  	%r3534, %r3514, -1600085856;
	or.b32  	%r3535, %r3520, %r3515;
	or.b32  	%r3536, %r3535, %r3517;
	or.b32  	%r3537, %r3536, %r3522;
	st.local.u32 	[%rd4+32], %r3537;
	or.b32  	%r3538, %r3530, %r3525;
	or.b32  	%r3539, %r3538, %r3527;
	or.b32  	%r3540, %r3539, %r3532;
	st.local.u32 	[%rd4+36], %r3540;
	or.b32  	%r3541, %r3523, %r3518;
	shr.u32 	%r3542, %r3541, 4;
	or.b32  	%r3543, %r3542, %r3519;
	or.b32  	%r3544, %r3543, %r3524;
	st.local.u32 	[%rd4+40], %r3544;
	or.b32  	%r3545, %r3533, %r3528;
	shr.u32 	%r3546, %r3545, 4;
	or.b32  	%r3547, %r3546, %r3529;
	or.b32  	%r3548, %r3547, %r3534;
	st.local.u32 	[%rd4+44], %r3548;
	setp.lt.u32 	%p20, %r9578, 3;
	@%p20 bra 	$L__BB3_31;

	ld.local.v4.u32 	{%r3549, %r3550, %r3551, %r3552}, [%rd5+48];
	and.b32  	%r3557, %r3549, 1431655765;
	shl.b32 	%r3558, %r3549, 1;
	and.b32  	%r3559, %r3558, -1431655766;
	or.b32  	%r3560, %r3559, %r3557;
	and.b32  	%r3561, %r3549, -1431655766;
	shr.u32 	%r3562, %r3561, 1;
	or.b32  	%r3563, %r3562, %r3561;
	and.b32  	%r3564, %r3550, 1431655765;
	shl.b32 	%r3565, %r3550, 1;
	and.b32  	%r3566, %r3565, -1431655766;
	or.b32  	%r3567, %r3566, %r3564;
	and.b32  	%r3568, %r3550, -1431655766;
	shr.u32 	%r3569, %r3568, 1;
	or.b32  	%r3570, %r3569, %r3568;
	and.b32  	%r3571, %r3551, 1431655765;
	shl.b32 	%r3572, %r3551, 1;
	and.b32  	%r3573, %r3572, -1431655766;
	or.b32  	%r3574, %r3573, %r3571;
	and.b32  	%r3575, %r3551, -1431655766;
	shr.u32 	%r3576, %r3575, 1;
	or.b32  	%r3577, %r3576, %r3575;
	and.b32  	%r3578, %r3552, 1431655765;
	shl.b32 	%r3579, %r3552, 1;
	and.b32  	%r3580, %r3579, -1431655766;
	or.b32  	%r3581, %r3580, %r3578;
	and.b32  	%r3582, %r3552, -1431655766;
	shr.u32 	%r3583, %r3582, 1;
	or.b32  	%r3584, %r3583, %r3582;
	and.b32  	%r3585, %r3560, 858993459;
	shl.b32 	%r3586, %r3567, 2;
	and.b32  	%r3587, %r3586, -858993460;
	or.b32  	%r3588, %r3587, %r3585;
	and.b32  	%r3589, %r3560, -858993460;
	shr.u32 	%r3590, %r3589, 2;
	and.b32  	%r3591, %r3567, -858993460;
	or.b32  	%r3592, %r3590, %r3591;
	and.b32  	%r3593, %r3563, 858993459;
	shl.b32 	%r3594, %r3570, 2;
	and.b32  	%r3595, %r3594, -858993460;
	or.b32  	%r3596, %r3595, %r3593;
	and.b32  	%r3597, %r3563, -858993460;
	shr.u32 	%r3598, %r3597, 2;
	and.b32  	%r3599, %r3570, -858993460;
	or.b32  	%r3600, %r3598, %r3599;
	and.b32  	%r3601, %r3574, 858993459;
	shl.b32 	%r3602, %r3581, 2;
	and.b32  	%r3603, %r3602, -858993460;
	or.b32  	%r3604, %r3603, %r3601;
	and.b32  	%r3605, %r3574, -858993460;
	shr.u32 	%r3606, %r3605, 2;
	and.b32  	%r3607, %r3581, -858993460;
	or.b32  	%r3608, %r3606, %r3607;
	and.b32  	%r3609, %r3577, 858993459;
	shl.b32 	%r3610, %r3584, 2;
	and.b32  	%r3611, %r3610, -858993460;
	or.b32  	%r3612, %r3611, %r3609;
	and.b32  	%r3613, %r3577, -858993460;
	shr.u32 	%r3614, %r3613, 2;
	and.b32  	%r3615, %r3584, -858993460;
	or.b32  	%r3616, %r3614, %r3615;
	and.b32  	%r3617, %r3588, 84215045;
	shl.b32 	%r3618, %r3604, 4;
	and.b32  	%r3619, %r3618, 1347440720;
	and.b32  	%r3620, %r3588, 1347440720;
	and.b32  	%r3621, %r3604, 1347440720;
	and.b32  	%r3622, %r3596, 168430090;
	shl.b32 	%r3623, %r3612, 4;
	and.b32  	%r3624, %r3623, -1600085856;
	and.b32  	%r3625, %r3596, -1600085856;
	and.b32  	%r3626, %r3612, -1600085856;
	and.b32  	%r3627, %r3592, 84215045;
	shl.b32 	%r3628, %r3608, 4;
	and.b32  	%r3629, %r3628, 1347440720;
	and.b32  	%r3630, %r3592, 1347440720;
	and.b32  	%r3631, %r3608, 1347440720;
	and.b32  	%r3632, %r3600, 168430090;
	shl.b32 	%r3633, %r3616, 4;
	and.b32  	%r3634, %r3633, -1600085856;
	and.b32  	%r3635, %r3600, -1600085856;
	and.b32  	%r3636, %r3616, -1600085856;
	or.b32  	%r3637, %r3622, %r3617;
	or.b32  	%r3638, %r3637, %r3619;
	or.b32  	%r3639, %r3638, %r3624;
	st.local.u32 	[%rd4+48], %r3639;
	or.b32  	%r3640, %r3632, %r3627;
	or.b32  	%r3641, %r3640, %r3629;
	or.b32  	%r3642, %r3641, %r3634;
	st.local.u32 	[%rd4+52], %r3642;
	or.b32  	%r3643, %r3625, %r3620;
	shr.u32 	%r3644, %r3643, 4;
	or.b32  	%r3645, %r3644, %r3621;
	or.b32  	%r3646, %r3645, %r3626;
	st.local.u32 	[%rd4+56], %r3646;
	or.b32  	%r3647, %r3635, %r3630;
	shr.u32 	%r3648, %r3647, 4;
	or.b32  	%r3649, %r3648, %r3631;
	or.b32  	%r3650, %r3649, %r3636;
	st.local.u32 	[%rd4+60], %r3650;
	ld.local.v4.u32 	{%r3651, %r3652, %r3653, %r3654}, [%rd5+64];
	and.b32  	%r3659, %r3651, 1431655765;
	shl.b32 	%r3660, %r3651, 1;
	and.b32  	%r3661, %r3660, -1431655766;
	or.b32  	%r3662, %r3661, %r3659;
	and.b32  	%r3663, %r3651, -1431655766;
	shr.u32 	%r3664, %r3663, 1;
	or.b32  	%r3665, %r3664, %r3663;
	and.b32  	%r3666, %r3652, 1431655765;
	shl.b32 	%r3667, %r3652, 1;
	and.b32  	%r3668, %r3667, -1431655766;
	or.b32  	%r3669, %r3668, %r3666;
	and.b32  	%r3670, %r3652, -1431655766;
	shr.u32 	%r3671, %r3670, 1;
	or.b32  	%r3672, %r3671, %r3670;
	and.b32  	%r3673, %r3653, 1431655765;
	shl.b32 	%r3674, %r3653, 1;
	and.b32  	%r3675, %r3674, -1431655766;
	or.b32  	%r3676, %r3675, %r3673;
	and.b32  	%r3677, %r3653, -1431655766;
	shr.u32 	%r3678, %r3677, 1;
	or.b32  	%r3679, %r3678, %r3677;
	and.b32  	%r3680, %r3654, 1431655765;
	shl.b32 	%r3681, %r3654, 1;
	and.b32  	%r3682, %r3681, -1431655766;
	or.b32  	%r3683, %r3682, %r3680;
	and.b32  	%r3684, %r3654, -1431655766;
	shr.u32 	%r3685, %r3684, 1;
	or.b32  	%r3686, %r3685, %r3684;
	and.b32  	%r3687, %r3662, 858993459;
	shl.b32 	%r3688, %r3669, 2;
	and.b32  	%r3689, %r3688, -858993460;
	or.b32  	%r3690, %r3689, %r3687;
	and.b32  	%r3691, %r3662, -858993460;
	shr.u32 	%r3692, %r3691, 2;
	and.b32  	%r3693, %r3669, -858993460;
	or.b32  	%r3694, %r3692, %r3693;
	and.b32  	%r3695, %r3665, 858993459;
	shl.b32 	%r3696, %r3672, 2;
	and.b32  	%r3697, %r3696, -858993460;
	or.b32  	%r3698, %r3697, %r3695;
	and.b32  	%r3699, %r3665, -858993460;
	shr.u32 	%r3700, %r3699, 2;
	and.b32  	%r3701, %r3672, -858993460;
	or.b32  	%r3702, %r3700, %r3701;
	and.b32  	%r3703, %r3676, 858993459;
	shl.b32 	%r3704, %r3683, 2;
	and.b32  	%r3705, %r3704, -858993460;
	or.b32  	%r3706, %r3705, %r3703;
	and.b32  	%r3707, %r3676, -858993460;
	shr.u32 	%r3708, %r3707, 2;
	and.b32  	%r3709, %r3683, -858993460;
	or.b32  	%r3710, %r3708, %r3709;
	and.b32  	%r3711, %r3679, 858993459;
	shl.b32 	%r3712, %r3686, 2;
	and.b32  	%r3713, %r3712, -858993460;
	or.b32  	%r3714, %r3713, %r3711;
	and.b32  	%r3715, %r3679, -858993460;
	shr.u32 	%r3716, %r3715, 2;
	and.b32  	%r3717, %r3686, -858993460;
	or.b32  	%r3718, %r3716, %r3717;
	and.b32  	%r3719, %r3690, 84215045;
	shl.b32 	%r3720, %r3706, 4;
	and.b32  	%r3721, %r3720, 1347440720;
	and.b32  	%r3722, %r3690, 1347440720;
	and.b32  	%r3723, %r3706, 1347440720;
	and.b32  	%r3724, %r3698, 168430090;
	shl.b32 	%r3725, %r3714, 4;
	and.b32  	%r3726, %r3725, -1600085856;
	and.b32  	%r3727, %r3698, -1600085856;
	and.b32  	%r3728, %r3714, -1600085856;
	and.b32  	%r3729, %r3694, 84215045;
	shl.b32 	%r3730, %r3710, 4;
	and.b32  	%r3731, %r3730, 1347440720;
	and.b32  	%r3732, %r3694, 1347440720;
	and.b32  	%r3733, %r3710, 1347440720;
	and.b32  	%r3734, %r3702, 168430090;
	shl.b32 	%r3735, %r3718, 4;
	and.b32  	%r3736, %r3735, -1600085856;
	and.b32  	%r3737, %r3702, -1600085856;
	and.b32  	%r3738, %r3718, -1600085856;
	or.b32  	%r3739, %r3724, %r3719;
	or.b32  	%r3740, %r3739, %r3721;
	or.b32  	%r3741, %r3740, %r3726;
	st.local.u32 	[%rd4+64], %r3741;
	or.b32  	%r3742, %r3734, %r3729;
	or.b32  	%r3743, %r3742, %r3731;
	or.b32  	%r3744, %r3743, %r3736;
	st.local.u32 	[%rd4+68], %r3744;
	or.b32  	%r3745, %r3727, %r3722;
	shr.u32 	%r3746, %r3745, 4;
	or.b32  	%r3747, %r3746, %r3723;
	or.b32  	%r3748, %r3747, %r3728;
	st.local.u32 	[%rd4+72], %r3748;
	or.b32  	%r3749, %r3737, %r3732;
	shr.u32 	%r3750, %r3749, 4;
	or.b32  	%r3751, %r3750, %r3733;
	or.b32  	%r3752, %r3751, %r3738;
	st.local.u32 	[%rd4+76], %r3752;
	setp.lt.u32 	%p21, %r9578, 5;
	@%p21 bra 	$L__BB3_31;

	ld.local.v4.u32 	{%r3753, %r3754, %r3755, %r3756}, [%rd5+80];
	and.b32  	%r3761, %r3753, 1431655765;
	shl.b32 	%r3762, %r3753, 1;
	and.b32  	%r3763, %r3762, -1431655766;
	or.b32  	%r3764, %r3763, %r3761;
	and.b32  	%r3765, %r3753, -1431655766;
	shr.u32 	%r3766, %r3765, 1;
	or.b32  	%r3767, %r3766, %r3765;
	and.b32  	%r3768, %r3754, 1431655765;
	shl.b32 	%r3769, %r3754, 1;
	and.b32  	%r3770, %r3769, -1431655766;
	or.b32  	%r3771, %r3770, %r3768;
	and.b32  	%r3772, %r3754, -1431655766;
	shr.u32 	%r3773, %r3772, 1;
	or.b32  	%r3774, %r3773, %r3772;
	and.b32  	%r3775, %r3755, 1431655765;
	shl.b32 	%r3776, %r3755, 1;
	and.b32  	%r3777, %r3776, -1431655766;
	or.b32  	%r3778, %r3777, %r3775;
	and.b32  	%r3779, %r3755, -1431655766;
	shr.u32 	%r3780, %r3779, 1;
	or.b32  	%r3781, %r3780, %r3779;
	and.b32  	%r3782, %r3756, 1431655765;
	shl.b32 	%r3783, %r3756, 1;
	and.b32  	%r3784, %r3783, -1431655766;
	or.b32  	%r3785, %r3784, %r3782;
	and.b32  	%r3786, %r3756, -1431655766;
	shr.u32 	%r3787, %r3786, 1;
	or.b32  	%r3788, %r3787, %r3786;
	and.b32  	%r3789, %r3764, 858993459;
	shl.b32 	%r3790, %r3771, 2;
	and.b32  	%r3791, %r3790, -858993460;
	or.b32  	%r3792, %r3791, %r3789;
	and.b32  	%r3793, %r3764, -858993460;
	shr.u32 	%r3794, %r3793, 2;
	and.b32  	%r3795, %r3771, -858993460;
	or.b32  	%r3796, %r3794, %r3795;
	and.b32  	%r3797, %r3767, 858993459;
	shl.b32 	%r3798, %r3774, 2;
	and.b32  	%r3799, %r3798, -858993460;
	or.b32  	%r3800, %r3799, %r3797;
	and.b32  	%r3801, %r3767, -858993460;
	shr.u32 	%r3802, %r3801, 2;
	and.b32  	%r3803, %r3774, -858993460;
	or.b32  	%r3804, %r3802, %r3803;
	and.b32  	%r3805, %r3778, 858993459;
	shl.b32 	%r3806, %r3785, 2;
	and.b32  	%r3807, %r3806, -858993460;
	or.b32  	%r3808, %r3807, %r3805;
	and.b32  	%r3809, %r3778, -858993460;
	shr.u32 	%r3810, %r3809, 2;
	and.b32  	%r3811, %r3785, -858993460;
	or.b32  	%r3812, %r3810, %r3811;
	and.b32  	%r3813, %r3781, 858993459;
	shl.b32 	%r3814, %r3788, 2;
	and.b32  	%r3815, %r3814, -858993460;
	or.b32  	%r3816, %r3815, %r3813;
	and.b32  	%r3817, %r3781, -858993460;
	shr.u32 	%r3818, %r3817, 2;
	and.b32  	%r3819, %r3788, -858993460;
	or.b32  	%r3820, %r3818, %r3819;
	and.b32  	%r3821, %r3792, 84215045;
	shl.b32 	%r3822, %r3808, 4;
	and.b32  	%r3823, %r3822, 1347440720;
	and.b32  	%r3824, %r3792, 1347440720;
	and.b32  	%r3825, %r3808, 1347440720;
	and.b32  	%r3826, %r3800, 168430090;
	shl.b32 	%r3827, %r3816, 4;
	and.b32  	%r3828, %r3827, -1600085856;
	and.b32  	%r3829, %r3800, -1600085856;
	and.b32  	%r3830, %r3816, -1600085856;
	and.b32  	%r3831, %r3796, 84215045;
	shl.b32 	%r3832, %r3812, 4;
	and.b32  	%r3833, %r3832, 1347440720;
	and.b32  	%r3834, %r3796, 1347440720;
	and.b32  	%r3835, %r3812, 1347440720;
	and.b32  	%r3836, %r3804, 168430090;
	shl.b32 	%r3837, %r3820, 4;
	and.b32  	%r3838, %r3837, -1600085856;
	and.b32  	%r3839, %r3804, -1600085856;
	and.b32  	%r3840, %r3820, -1600085856;
	or.b32  	%r3841, %r3826, %r3821;
	or.b32  	%r3842, %r3841, %r3823;
	or.b32  	%r3843, %r3842, %r3828;
	st.local.u32 	[%rd4+80], %r3843;
	or.b32  	%r3844, %r3836, %r3831;
	or.b32  	%r3845, %r3844, %r3833;
	or.b32  	%r3846, %r3845, %r3838;
	st.local.u32 	[%rd4+84], %r3846;
	or.b32  	%r3847, %r3829, %r3824;
	shr.u32 	%r3848, %r3847, 4;
	or.b32  	%r3849, %r3848, %r3825;
	or.b32  	%r3850, %r3849, %r3830;
	st.local.u32 	[%rd4+88], %r3850;
	or.b32  	%r3851, %r3839, %r3834;
	shr.u32 	%r3852, %r3851, 4;
	or.b32  	%r3853, %r3852, %r3835;
	or.b32  	%r3854, %r3853, %r3840;
	st.local.u32 	[%rd4+92], %r3854;
	ld.local.v4.u32 	{%r3855, %r3856, %r3857, %r3858}, [%rd5+96];
	and.b32  	%r3863, %r3855, 1431655765;
	shl.b32 	%r3864, %r3855, 1;
	and.b32  	%r3865, %r3864, -1431655766;
	or.b32  	%r3866, %r3865, %r3863;
	and.b32  	%r3867, %r3855, -1431655766;
	shr.u32 	%r3868, %r3867, 1;
	or.b32  	%r3869, %r3868, %r3867;
	and.b32  	%r3870, %r3856, 1431655765;
	shl.b32 	%r3871, %r3856, 1;
	and.b32  	%r3872, %r3871, -1431655766;
	or.b32  	%r3873, %r3872, %r3870;
	and.b32  	%r3874, %r3856, -1431655766;
	shr.u32 	%r3875, %r3874, 1;
	or.b32  	%r3876, %r3875, %r3874;
	and.b32  	%r3877, %r3857, 1431655765;
	shl.b32 	%r3878, %r3857, 1;
	and.b32  	%r3879, %r3878, -1431655766;
	or.b32  	%r3880, %r3879, %r3877;
	and.b32  	%r3881, %r3857, -1431655766;
	shr.u32 	%r3882, %r3881, 1;
	or.b32  	%r3883, %r3882, %r3881;
	and.b32  	%r3884, %r3858, 1431655765;
	shl.b32 	%r3885, %r3858, 1;
	and.b32  	%r3886, %r3885, -1431655766;
	or.b32  	%r3887, %r3886, %r3884;
	and.b32  	%r3888, %r3858, -1431655766;
	shr.u32 	%r3889, %r3888, 1;
	or.b32  	%r3890, %r3889, %r3888;
	and.b32  	%r3891, %r3866, 858993459;
	shl.b32 	%r3892, %r3873, 2;
	and.b32  	%r3893, %r3892, -858993460;
	or.b32  	%r3894, %r3893, %r3891;
	and.b32  	%r3895, %r3866, -858993460;
	shr.u32 	%r3896, %r3895, 2;
	and.b32  	%r3897, %r3873, -858993460;
	or.b32  	%r3898, %r3896, %r3897;
	and.b32  	%r3899, %r3869, 858993459;
	shl.b32 	%r3900, %r3876, 2;
	and.b32  	%r3901, %r3900, -858993460;
	or.b32  	%r3902, %r3901, %r3899;
	and.b32  	%r3903, %r3869, -858993460;
	shr.u32 	%r3904, %r3903, 2;
	and.b32  	%r3905, %r3876, -858993460;
	or.b32  	%r3906, %r3904, %r3905;
	and.b32  	%r3907, %r3880, 858993459;
	shl.b32 	%r3908, %r3887, 2;
	and.b32  	%r3909, %r3908, -858993460;
	or.b32  	%r3910, %r3909, %r3907;
	and.b32  	%r3911, %r3880, -858993460;
	shr.u32 	%r3912, %r3911, 2;
	and.b32  	%r3913, %r3887, -858993460;
	or.b32  	%r3914, %r3912, %r3913;
	and.b32  	%r3915, %r3883, 858993459;
	shl.b32 	%r3916, %r3890, 2;
	and.b32  	%r3917, %r3916, -858993460;
	or.b32  	%r3918, %r3917, %r3915;
	and.b32  	%r3919, %r3883, -858993460;
	shr.u32 	%r3920, %r3919, 2;
	and.b32  	%r3921, %r3890, -858993460;
	or.b32  	%r3922, %r3920, %r3921;
	and.b32  	%r3923, %r3894, 84215045;
	shl.b32 	%r3924, %r3910, 4;
	and.b32  	%r3925, %r3924, 1347440720;
	and.b32  	%r3926, %r3894, 1347440720;
	and.b32  	%r3927, %r3910, 1347440720;
	and.b32  	%r3928, %r3902, 168430090;
	shl.b32 	%r3929, %r3918, 4;
	and.b32  	%r3930, %r3929, -1600085856;
	and.b32  	%r3931, %r3902, -1600085856;
	and.b32  	%r3932, %r3918, -1600085856;
	and.b32  	%r3933, %r3898, 84215045;
	shl.b32 	%r3934, %r3914, 4;
	and.b32  	%r3935, %r3934, 1347440720;
	and.b32  	%r3936, %r3898, 1347440720;
	and.b32  	%r3937, %r3914, 1347440720;
	and.b32  	%r3938, %r3906, 168430090;
	shl.b32 	%r3939, %r3922, 4;
	and.b32  	%r3940, %r3939, -1600085856;
	and.b32  	%r3941, %r3906, -1600085856;
	and.b32  	%r3942, %r3922, -1600085856;
	or.b32  	%r3943, %r3928, %r3923;
	or.b32  	%r3944, %r3943, %r3925;
	or.b32  	%r3945, %r3944, %r3930;
	st.local.u32 	[%rd4+96], %r3945;
	or.b32  	%r3946, %r3938, %r3933;
	or.b32  	%r3947, %r3946, %r3935;
	or.b32  	%r3948, %r3947, %r3940;
	st.local.u32 	[%rd4+100], %r3948;
	or.b32  	%r3949, %r3931, %r3926;
	shr.u32 	%r3950, %r3949, 4;
	or.b32  	%r3951, %r3950, %r3927;
	or.b32  	%r3952, %r3951, %r3932;
	st.local.u32 	[%rd4+104], %r3952;
	or.b32  	%r3953, %r3941, %r3936;
	shr.u32 	%r3954, %r3953, 4;
	or.b32  	%r3955, %r3954, %r3937;
	or.b32  	%r3956, %r3955, %r3942;
	st.local.u32 	[%rd4+108], %r3956;
	setp.lt.u32 	%p22, %r9578, 7;
	@%p22 bra 	$L__BB3_31;

	ld.local.v4.u32 	{%r3957, %r3958, %r3959, %r3960}, [%rd5+112];
	and.b32  	%r3965, %r3957, 1431655765;
	shl.b32 	%r3966, %r3957, 1;
	and.b32  	%r3967, %r3966, -1431655766;
	or.b32  	%r3968, %r3967, %r3965;
	and.b32  	%r3969, %r3957, -1431655766;
	shr.u32 	%r3970, %r3969, 1;
	or.b32  	%r3971, %r3970, %r3969;
	and.b32  	%r3972, %r3958, 1431655765;
	shl.b32 	%r3973, %r3958, 1;
	and.b32  	%r3974, %r3973, -1431655766;
	or.b32  	%r3975, %r3974, %r3972;
	and.b32  	%r3976, %r3958, -1431655766;
	shr.u32 	%r3977, %r3976, 1;
	or.b32  	%r3978, %r3977, %r3976;
	and.b32  	%r3979, %r3959, 1431655765;
	shl.b32 	%r3980, %r3959, 1;
	and.b32  	%r3981, %r3980, -1431655766;
	or.b32  	%r3982, %r3981, %r3979;
	and.b32  	%r3983, %r3959, -1431655766;
	shr.u32 	%r3984, %r3983, 1;
	or.b32  	%r3985, %r3984, %r3983;
	and.b32  	%r3986, %r3960, 1431655765;
	shl.b32 	%r3987, %r3960, 1;
	and.b32  	%r3988, %r3987, -1431655766;
	or.b32  	%r3989, %r3988, %r3986;
	and.b32  	%r3990, %r3960, -1431655766;
	shr.u32 	%r3991, %r3990, 1;
	or.b32  	%r3992, %r3991, %r3990;
	and.b32  	%r3993, %r3968, 858993459;
	shl.b32 	%r3994, %r3975, 2;
	and.b32  	%r3995, %r3994, -858993460;
	or.b32  	%r3996, %r3995, %r3993;
	and.b32  	%r3997, %r3968, -858993460;
	shr.u32 	%r3998, %r3997, 2;
	and.b32  	%r3999, %r3975, -858993460;
	or.b32  	%r4000, %r3998, %r3999;
	and.b32  	%r4001, %r3971, 858993459;
	shl.b32 	%r4002, %r3978, 2;
	and.b32  	%r4003, %r4002, -858993460;
	or.b32  	%r4004, %r4003, %r4001;
	and.b32  	%r4005, %r3971, -858993460;
	shr.u32 	%r4006, %r4005, 2;
	and.b32  	%r4007, %r3978, -858993460;
	or.b32  	%r4008, %r4006, %r4007;
	and.b32  	%r4009, %r3982, 858993459;
	shl.b32 	%r4010, %r3989, 2;
	and.b32  	%r4011, %r4010, -858993460;
	or.b32  	%r4012, %r4011, %r4009;
	and.b32  	%r4013, %r3982, -858993460;
	shr.u32 	%r4014, %r4013, 2;
	and.b32  	%r4015, %r3989, -858993460;
	or.b32  	%r4016, %r4014, %r4015;
	and.b32  	%r4017, %r3985, 858993459;
	shl.b32 	%r4018, %r3992, 2;
	and.b32  	%r4019, %r4018, -858993460;
	or.b32  	%r4020, %r4019, %r4017;
	and.b32  	%r4021, %r3985, -858993460;
	shr.u32 	%r4022, %r4021, 2;
	and.b32  	%r4023, %r3992, -858993460;
	or.b32  	%r4024, %r4022, %r4023;
	and.b32  	%r4025, %r3996, 84215045;
	shl.b32 	%r4026, %r4012, 4;
	and.b32  	%r4027, %r4026, 1347440720;
	and.b32  	%r4028, %r3996, 1347440720;
	and.b32  	%r4029, %r4012, 1347440720;
	and.b32  	%r4030, %r4004, 168430090;
	shl.b32 	%r4031, %r4020, 4;
	and.b32  	%r4032, %r4031, -1600085856;
	and.b32  	%r4033, %r4004, -1600085856;
	and.b32  	%r4034, %r4020, -1600085856;
	and.b32  	%r4035, %r4000, 84215045;
	shl.b32 	%r4036, %r4016, 4;
	and.b32  	%r4037, %r4036, 1347440720;
	and.b32  	%r4038, %r4000, 1347440720;
	and.b32  	%r4039, %r4016, 1347440720;
	and.b32  	%r4040, %r4008, 168430090;
	shl.b32 	%r4041, %r4024, 4;
	and.b32  	%r4042, %r4041, -1600085856;
	and.b32  	%r4043, %r4008, -1600085856;
	and.b32  	%r4044, %r4024, -1600085856;
	or.b32  	%r4045, %r4030, %r4025;
	or.b32  	%r4046, %r4045, %r4027;
	or.b32  	%r4047, %r4046, %r4032;
	st.local.u32 	[%rd4+112], %r4047;
	or.b32  	%r4048, %r4040, %r4035;
	or.b32  	%r4049, %r4048, %r4037;
	or.b32  	%r4050, %r4049, %r4042;
	st.local.u32 	[%rd4+116], %r4050;
	or.b32  	%r4051, %r4033, %r4028;
	shr.u32 	%r4052, %r4051, 4;
	or.b32  	%r4053, %r4052, %r4029;
	or.b32  	%r4054, %r4053, %r4034;
	st.local.u32 	[%rd4+120], %r4054;
	or.b32  	%r4055, %r4043, %r4038;
	shr.u32 	%r4056, %r4055, 4;
	or.b32  	%r4057, %r4056, %r4039;
	or.b32  	%r4058, %r4057, %r4044;
	st.local.u32 	[%rd4+124], %r4058;
	ld.local.v4.u32 	{%r4059, %r4060, %r4061, %r4062}, [%rd5+128];
	and.b32  	%r4067, %r4059, 1431655765;
	shl.b32 	%r4068, %r4059, 1;
	and.b32  	%r4069, %r4068, -1431655766;
	or.b32  	%r4070, %r4069, %r4067;
	and.b32  	%r4071, %r4059, -1431655766;
	shr.u32 	%r4072, %r4071, 1;
	or.b32  	%r4073, %r4072, %r4071;
	and.b32  	%r4074, %r4060, 1431655765;
	shl.b32 	%r4075, %r4060, 1;
	and.b32  	%r4076, %r4075, -1431655766;
	or.b32  	%r4077, %r4076, %r4074;
	and.b32  	%r4078, %r4060, -1431655766;
	shr.u32 	%r4079, %r4078, 1;
	or.b32  	%r4080, %r4079, %r4078;
	and.b32  	%r4081, %r4061, 1431655765;
	shl.b32 	%r4082, %r4061, 1;
	and.b32  	%r4083, %r4082, -1431655766;
	or.b32  	%r4084, %r4083, %r4081;
	and.b32  	%r4085, %r4061, -1431655766;
	shr.u32 	%r4086, %r4085, 1;
	or.b32  	%r4087, %r4086, %r4085;
	and.b32  	%r4088, %r4062, 1431655765;
	shl.b32 	%r4089, %r4062, 1;
	and.b32  	%r4090, %r4089, -1431655766;
	or.b32  	%r4091, %r4090, %r4088;
	and.b32  	%r4092, %r4062, -1431655766;
	shr.u32 	%r4093, %r4092, 1;
	or.b32  	%r4094, %r4093, %r4092;
	and.b32  	%r4095, %r4070, 858993459;
	shl.b32 	%r4096, %r4077, 2;
	and.b32  	%r4097, %r4096, -858993460;
	or.b32  	%r4098, %r4097, %r4095;
	and.b32  	%r4099, %r4070, -858993460;
	shr.u32 	%r4100, %r4099, 2;
	and.b32  	%r4101, %r4077, -858993460;
	or.b32  	%r4102, %r4100, %r4101;
	and.b32  	%r4103, %r4073, 858993459;
	shl.b32 	%r4104, %r4080, 2;
	and.b32  	%r4105, %r4104, -858993460;
	or.b32  	%r4106, %r4105, %r4103;
	and.b32  	%r4107, %r4073, -858993460;
	shr.u32 	%r4108, %r4107, 2;
	and.b32  	%r4109, %r4080, -858993460;
	or.b32  	%r4110, %r4108, %r4109;
	and.b32  	%r4111, %r4084, 858993459;
	shl.b32 	%r4112, %r4091, 2;
	and.b32  	%r4113, %r4112, -858993460;
	or.b32  	%r4114, %r4113, %r4111;
	and.b32  	%r4115, %r4084, -858993460;
	shr.u32 	%r4116, %r4115, 2;
	and.b32  	%r4117, %r4091, -858993460;
	or.b32  	%r4118, %r4116, %r4117;
	and.b32  	%r4119, %r4087, 858993459;
	shl.b32 	%r4120, %r4094, 2;
	and.b32  	%r4121, %r4120, -858993460;
	or.b32  	%r4122, %r4121, %r4119;
	and.b32  	%r4123, %r4087, -858993460;
	shr.u32 	%r4124, %r4123, 2;
	and.b32  	%r4125, %r4094, -858993460;
	or.b32  	%r4126, %r4124, %r4125;
	and.b32  	%r4127, %r4098, 84215045;
	shl.b32 	%r4128, %r4114, 4;
	and.b32  	%r4129, %r4128, 1347440720;
	and.b32  	%r4130, %r4098, 1347440720;
	and.b32  	%r4131, %r4114, 1347440720;
	and.b32  	%r4132, %r4106, 168430090;
	shl.b32 	%r4133, %r4122, 4;
	and.b32  	%r4134, %r4133, -1600085856;
	and.b32  	%r4135, %r4106, -1600085856;
	and.b32  	%r4136, %r4122, -1600085856;
	and.b32  	%r4137, %r4102, 84215045;
	shl.b32 	%r4138, %r4118, 4;
	and.b32  	%r4139, %r4138, 1347440720;
	and.b32  	%r4140, %r4102, 1347440720;
	and.b32  	%r4141, %r4118, 1347440720;
	and.b32  	%r4142, %r4110, 168430090;
	shl.b32 	%r4143, %r4126, 4;
	and.b32  	%r4144, %r4143, -1600085856;
	and.b32  	%r4145, %r4110, -1600085856;
	and.b32  	%r4146, %r4126, -1600085856;
	or.b32  	%r4147, %r4132, %r4127;
	or.b32  	%r4148, %r4147, %r4129;
	or.b32  	%r4149, %r4148, %r4134;
	st.local.u32 	[%rd4+128], %r4149;
	or.b32  	%r4150, %r4142, %r4137;
	or.b32  	%r4151, %r4150, %r4139;
	or.b32  	%r4152, %r4151, %r4144;
	st.local.u32 	[%rd4+132], %r4152;
	or.b32  	%r4153, %r4135, %r4130;
	shr.u32 	%r4154, %r4153, 4;
	or.b32  	%r4155, %r4154, %r4131;
	or.b32  	%r4156, %r4155, %r4136;
	st.local.u32 	[%rd4+136], %r4156;
	or.b32  	%r4157, %r4145, %r4140;
	shr.u32 	%r4158, %r4157, 4;
	or.b32  	%r4159, %r4158, %r4141;
	or.b32  	%r4160, %r4159, %r4146;
	st.local.u32 	[%rd4+140], %r4160;
	setp.lt.u32 	%p23, %r9578, 9;
	@%p23 bra 	$L__BB3_31;

	ld.local.v4.u32 	{%r4161, %r4162, %r4163, %r4164}, [%rd5+144];
	and.b32  	%r4169, %r4161, 1431655765;
	shl.b32 	%r4170, %r4161, 1;
	and.b32  	%r4171, %r4170, -1431655766;
	or.b32  	%r4172, %r4171, %r4169;
	and.b32  	%r4173, %r4161, -1431655766;
	shr.u32 	%r4174, %r4173, 1;
	or.b32  	%r4175, %r4174, %r4173;
	and.b32  	%r4176, %r4162, 1431655765;
	shl.b32 	%r4177, %r4162, 1;
	and.b32  	%r4178, %r4177, -1431655766;
	or.b32  	%r4179, %r4178, %r4176;
	and.b32  	%r4180, %r4162, -1431655766;
	shr.u32 	%r4181, %r4180, 1;
	or.b32  	%r4182, %r4181, %r4180;
	and.b32  	%r4183, %r4163, 1431655765;
	shl.b32 	%r4184, %r4163, 1;
	and.b32  	%r4185, %r4184, -1431655766;
	or.b32  	%r4186, %r4185, %r4183;
	and.b32  	%r4187, %r4163, -1431655766;
	shr.u32 	%r4188, %r4187, 1;
	or.b32  	%r4189, %r4188, %r4187;
	and.b32  	%r4190, %r4164, 1431655765;
	shl.b32 	%r4191, %r4164, 1;
	and.b32  	%r4192, %r4191, -1431655766;
	or.b32  	%r4193, %r4192, %r4190;
	and.b32  	%r4194, %r4164, -1431655766;
	shr.u32 	%r4195, %r4194, 1;
	or.b32  	%r4196, %r4195, %r4194;
	and.b32  	%r4197, %r4172, 858993459;
	shl.b32 	%r4198, %r4179, 2;
	and.b32  	%r4199, %r4198, -858993460;
	or.b32  	%r4200, %r4199, %r4197;
	and.b32  	%r4201, %r4172, -858993460;
	shr.u32 	%r4202, %r4201, 2;
	and.b32  	%r4203, %r4179, -858993460;
	or.b32  	%r4204, %r4202, %r4203;
	and.b32  	%r4205, %r4175, 858993459;
	shl.b32 	%r4206, %r4182, 2;
	and.b32  	%r4207, %r4206, -858993460;
	or.b32  	%r4208, %r4207, %r4205;
	and.b32  	%r4209, %r4175, -858993460;
	shr.u32 	%r4210, %r4209, 2;
	and.b32  	%r4211, %r4182, -858993460;
	or.b32  	%r4212, %r4210, %r4211;
	and.b32  	%r4213, %r4186, 858993459;
	shl.b32 	%r4214, %r4193, 2;
	and.b32  	%r4215, %r4214, -858993460;
	or.b32  	%r4216, %r4215, %r4213;
	and.b32  	%r4217, %r4186, -858993460;
	shr.u32 	%r4218, %r4217, 2;
	and.b32  	%r4219, %r4193, -858993460;
	or.b32  	%r4220, %r4218, %r4219;
	and.b32  	%r4221, %r4189, 858993459;
	shl.b32 	%r4222, %r4196, 2;
	and.b32  	%r4223, %r4222, -858993460;
	or.b32  	%r4224, %r4223, %r4221;
	and.b32  	%r4225, %r4189, -858993460;
	shr.u32 	%r4226, %r4225, 2;
	and.b32  	%r4227, %r4196, -858993460;
	or.b32  	%r4228, %r4226, %r4227;
	and.b32  	%r4229, %r4200, 84215045;
	shl.b32 	%r4230, %r4216, 4;
	and.b32  	%r4231, %r4230, 1347440720;
	and.b32  	%r4232, %r4200, 1347440720;
	and.b32  	%r4233, %r4216, 1347440720;
	and.b32  	%r4234, %r4208, 168430090;
	shl.b32 	%r4235, %r4224, 4;
	and.b32  	%r4236, %r4235, -1600085856;
	and.b32  	%r4237, %r4208, -1600085856;
	and.b32  	%r4238, %r4224, -1600085856;
	and.b32  	%r4239, %r4204, 84215045;
	shl.b32 	%r4240, %r4220, 4;
	and.b32  	%r4241, %r4240, 1347440720;
	and.b32  	%r4242, %r4204, 1347440720;
	and.b32  	%r4243, %r4220, 1347440720;
	and.b32  	%r4244, %r4212, 168430090;
	shl.b32 	%r4245, %r4228, 4;
	and.b32  	%r4246, %r4245, -1600085856;
	and.b32  	%r4247, %r4212, -1600085856;
	and.b32  	%r4248, %r4228, -1600085856;
	or.b32  	%r4249, %r4234, %r4229;
	or.b32  	%r4250, %r4249, %r4231;
	or.b32  	%r4251, %r4250, %r4236;
	st.local.u32 	[%rd4+144], %r4251;
	or.b32  	%r4252, %r4244, %r4239;
	or.b32  	%r4253, %r4252, %r4241;
	or.b32  	%r4254, %r4253, %r4246;
	st.local.u32 	[%rd4+148], %r4254;
	or.b32  	%r4255, %r4237, %r4232;
	shr.u32 	%r4256, %r4255, 4;
	or.b32  	%r4257, %r4256, %r4233;
	or.b32  	%r4258, %r4257, %r4238;
	st.local.u32 	[%rd4+152], %r4258;
	or.b32  	%r4259, %r4247, %r4242;
	shr.u32 	%r4260, %r4259, 4;
	or.b32  	%r4261, %r4260, %r4243;
	or.b32  	%r4262, %r4261, %r4248;
	st.local.u32 	[%rd4+156], %r4262;
	ld.local.v4.u32 	{%r4263, %r4264, %r4265, %r4266}, [%rd5+160];
	and.b32  	%r4271, %r4263, 1431655765;
	shl.b32 	%r4272, %r4263, 1;
	and.b32  	%r4273, %r4272, -1431655766;
	or.b32  	%r4274, %r4273, %r4271;
	and.b32  	%r4275, %r4263, -1431655766;
	shr.u32 	%r4276, %r4275, 1;
	or.b32  	%r4277, %r4276, %r4275;
	and.b32  	%r4278, %r4264, 1431655765;
	shl.b32 	%r4279, %r4264, 1;
	and.b32  	%r4280, %r4279, -1431655766;
	or.b32  	%r4281, %r4280, %r4278;
	and.b32  	%r4282, %r4264, -1431655766;
	shr.u32 	%r4283, %r4282, 1;
	or.b32  	%r4284, %r4283, %r4282;
	and.b32  	%r4285, %r4265, 1431655765;
	shl.b32 	%r4286, %r4265, 1;
	and.b32  	%r4287, %r4286, -1431655766;
	or.b32  	%r4288, %r4287, %r4285;
	and.b32  	%r4289, %r4265, -1431655766;
	shr.u32 	%r4290, %r4289, 1;
	or.b32  	%r4291, %r4290, %r4289;
	and.b32  	%r4292, %r4266, 1431655765;
	shl.b32 	%r4293, %r4266, 1;
	and.b32  	%r4294, %r4293, -1431655766;
	or.b32  	%r4295, %r4294, %r4292;
	and.b32  	%r4296, %r4266, -1431655766;
	shr.u32 	%r4297, %r4296, 1;
	or.b32  	%r4298, %r4297, %r4296;
	and.b32  	%r4299, %r4274, 858993459;
	shl.b32 	%r4300, %r4281, 2;
	and.b32  	%r4301, %r4300, -858993460;
	or.b32  	%r4302, %r4301, %r4299;
	and.b32  	%r4303, %r4274, -858993460;
	shr.u32 	%r4304, %r4303, 2;
	and.b32  	%r4305, %r4281, -858993460;
	or.b32  	%r4306, %r4304, %r4305;
	and.b32  	%r4307, %r4277, 858993459;
	shl.b32 	%r4308, %r4284, 2;
	and.b32  	%r4309, %r4308, -858993460;
	or.b32  	%r4310, %r4309, %r4307;
	and.b32  	%r4311, %r4277, -858993460;
	shr.u32 	%r4312, %r4311, 2;
	and.b32  	%r4313, %r4284, -858993460;
	or.b32  	%r4314, %r4312, %r4313;
	and.b32  	%r4315, %r4288, 858993459;
	shl.b32 	%r4316, %r4295, 2;
	and.b32  	%r4317, %r4316, -858993460;
	or.b32  	%r4318, %r4317, %r4315;
	and.b32  	%r4319, %r4288, -858993460;
	shr.u32 	%r4320, %r4319, 2;
	and.b32  	%r4321, %r4295, -858993460;
	or.b32  	%r4322, %r4320, %r4321;
	and.b32  	%r4323, %r4291, 858993459;
	shl.b32 	%r4324, %r4298, 2;
	and.b32  	%r4325, %r4324, -858993460;
	or.b32  	%r4326, %r4325, %r4323;
	and.b32  	%r4327, %r4291, -858993460;
	shr.u32 	%r4328, %r4327, 2;
	and.b32  	%r4329, %r4298, -858993460;
	or.b32  	%r4330, %r4328, %r4329;
	and.b32  	%r4331, %r4302, 84215045;
	shl.b32 	%r4332, %r4318, 4;
	and.b32  	%r4333, %r4332, 1347440720;
	and.b32  	%r4334, %r4302, 1347440720;
	and.b32  	%r4335, %r4318, 1347440720;
	and.b32  	%r4336, %r4310, 168430090;
	shl.b32 	%r4337, %r4326, 4;
	and.b32  	%r4338, %r4337, -1600085856;
	and.b32  	%r4339, %r4310, -1600085856;
	and.b32  	%r4340, %r4326, -1600085856;
	and.b32  	%r4341, %r4306, 84215045;
	shl.b32 	%r4342, %r4322, 4;
	and.b32  	%r4343, %r4342, 1347440720;
	and.b32  	%r4344, %r4306, 1347440720;
	and.b32  	%r4345, %r4322, 1347440720;
	and.b32  	%r4346, %r4314, 168430090;
	shl.b32 	%r4347, %r4330, 4;
	and.b32  	%r4348, %r4347, -1600085856;
	and.b32  	%r4349, %r4314, -1600085856;
	and.b32  	%r4350, %r4330, -1600085856;
	or.b32  	%r4351, %r4336, %r4331;
	or.b32  	%r4352, %r4351, %r4333;
	or.b32  	%r4353, %r4352, %r4338;
	st.local.u32 	[%rd4+160], %r4353;
	or.b32  	%r4354, %r4346, %r4341;
	or.b32  	%r4355, %r4354, %r4343;
	or.b32  	%r4356, %r4355, %r4348;
	st.local.u32 	[%rd4+164], %r4356;
	or.b32  	%r4357, %r4339, %r4334;
	shr.u32 	%r4358, %r4357, 4;
	or.b32  	%r4359, %r4358, %r4335;
	or.b32  	%r4360, %r4359, %r4340;
	st.local.u32 	[%rd4+168], %r4360;
	or.b32  	%r4361, %r4349, %r4344;
	shr.u32 	%r4362, %r4361, 4;
	or.b32  	%r4363, %r4362, %r4345;
	or.b32  	%r4364, %r4363, %r4350;
	st.local.u32 	[%rd4+172], %r4364;
	setp.lt.u32 	%p24, %r9578, 11;
	@%p24 bra 	$L__BB3_31;

	ld.local.v4.u32 	{%r4365, %r4366, %r4367, %r4368}, [%rd5+176];
	and.b32  	%r4373, %r4365, 1431655765;
	shl.b32 	%r4374, %r4365, 1;
	and.b32  	%r4375, %r4374, -1431655766;
	or.b32  	%r4376, %r4375, %r4373;
	and.b32  	%r4377, %r4365, -1431655766;
	shr.u32 	%r4378, %r4377, 1;
	or.b32  	%r4379, %r4378, %r4377;
	and.b32  	%r4380, %r4366, 1431655765;
	shl.b32 	%r4381, %r4366, 1;
	and.b32  	%r4382, %r4381, -1431655766;
	or.b32  	%r4383, %r4382, %r4380;
	and.b32  	%r4384, %r4366, -1431655766;
	shr.u32 	%r4385, %r4384, 1;
	or.b32  	%r4386, %r4385, %r4384;
	and.b32  	%r4387, %r4367, 1431655765;
	shl.b32 	%r4388, %r4367, 1;
	and.b32  	%r4389, %r4388, -1431655766;
	or.b32  	%r4390, %r4389, %r4387;
	and.b32  	%r4391, %r4367, -1431655766;
	shr.u32 	%r4392, %r4391, 1;
	or.b32  	%r4393, %r4392, %r4391;
	and.b32  	%r4394, %r4368, 1431655765;
	shl.b32 	%r4395, %r4368, 1;
	and.b32  	%r4396, %r4395, -1431655766;
	or.b32  	%r4397, %r4396, %r4394;
	and.b32  	%r4398, %r4368, -1431655766;
	shr.u32 	%r4399, %r4398, 1;
	or.b32  	%r4400, %r4399, %r4398;
	and.b32  	%r4401, %r4376, 858993459;
	shl.b32 	%r4402, %r4383, 2;
	and.b32  	%r4403, %r4402, -858993460;
	or.b32  	%r4404, %r4403, %r4401;
	and.b32  	%r4405, %r4376, -858993460;
	shr.u32 	%r4406, %r4405, 2;
	and.b32  	%r4407, %r4383, -858993460;
	or.b32  	%r4408, %r4406, %r4407;
	and.b32  	%r4409, %r4379, 858993459;
	shl.b32 	%r4410, %r4386, 2;
	and.b32  	%r4411, %r4410, -858993460;
	or.b32  	%r4412, %r4411, %r4409;
	and.b32  	%r4413, %r4379, -858993460;
	shr.u32 	%r4414, %r4413, 2;
	and.b32  	%r4415, %r4386, -858993460;
	or.b32  	%r4416, %r4414, %r4415;
	and.b32  	%r4417, %r4390, 858993459;
	shl.b32 	%r4418, %r4397, 2;
	and.b32  	%r4419, %r4418, -858993460;
	or.b32  	%r4420, %r4419, %r4417;
	and.b32  	%r4421, %r4390, -858993460;
	shr.u32 	%r4422, %r4421, 2;
	and.b32  	%r4423, %r4397, -858993460;
	or.b32  	%r4424, %r4422, %r4423;
	and.b32  	%r4425, %r4393, 858993459;
	shl.b32 	%r4426, %r4400, 2;
	and.b32  	%r4427, %r4426, -858993460;
	or.b32  	%r4428, %r4427, %r4425;
	and.b32  	%r4429, %r4393, -858993460;
	shr.u32 	%r4430, %r4429, 2;
	and.b32  	%r4431, %r4400, -858993460;
	or.b32  	%r4432, %r4430, %r4431;
	and.b32  	%r4433, %r4404, 84215045;
	shl.b32 	%r4434, %r4420, 4;
	and.b32  	%r4435, %r4434, 1347440720;
	and.b32  	%r4436, %r4404, 1347440720;
	and.b32  	%r4437, %r4420, 1347440720;
	and.b32  	%r4438, %r4412, 168430090;
	shl.b32 	%r4439, %r4428, 4;
	and.b32  	%r4440, %r4439, -1600085856;
	and.b32  	%r4441, %r4412, -1600085856;
	and.b32  	%r4442, %r4428, -1600085856;
	and.b32  	%r4443, %r4408, 84215045;
	shl.b32 	%r4444, %r4424, 4;
	and.b32  	%r4445, %r4444, 1347440720;
	and.b32  	%r4446, %r4408, 1347440720;
	and.b32  	%r4447, %r4424, 1347440720;
	and.b32  	%r4448, %r4416, 168430090;
	shl.b32 	%r4449, %r4432, 4;
	and.b32  	%r4450, %r4449, -1600085856;
	and.b32  	%r4451, %r4416, -1600085856;
	and.b32  	%r4452, %r4432, -1600085856;
	or.b32  	%r4453, %r4438, %r4433;
	or.b32  	%r4454, %r4453, %r4435;
	or.b32  	%r4455, %r4454, %r4440;
	st.local.u32 	[%rd4+176], %r4455;
	or.b32  	%r4456, %r4448, %r4443;
	or.b32  	%r4457, %r4456, %r4445;
	or.b32  	%r4458, %r4457, %r4450;
	st.local.u32 	[%rd4+180], %r4458;
	or.b32  	%r4459, %r4441, %r4436;
	shr.u32 	%r4460, %r4459, 4;
	or.b32  	%r4461, %r4460, %r4437;
	or.b32  	%r4462, %r4461, %r4442;
	st.local.u32 	[%rd4+184], %r4462;
	or.b32  	%r4463, %r4451, %r4446;
	shr.u32 	%r4464, %r4463, 4;
	or.b32  	%r4465, %r4464, %r4447;
	or.b32  	%r4466, %r4465, %r4452;
	st.local.u32 	[%rd4+188], %r4466;
	ld.local.v4.u32 	{%r4467, %r4468, %r4469, %r4470}, [%rd5+192];
	and.b32  	%r4475, %r4467, 1431655765;
	shl.b32 	%r4476, %r4467, 1;
	and.b32  	%r4477, %r4476, -1431655766;
	or.b32  	%r4478, %r4477, %r4475;
	and.b32  	%r4479, %r4467, -1431655766;
	shr.u32 	%r4480, %r4479, 1;
	or.b32  	%r4481, %r4480, %r4479;
	and.b32  	%r4482, %r4468, 1431655765;
	shl.b32 	%r4483, %r4468, 1;
	and.b32  	%r4484, %r4483, -1431655766;
	or.b32  	%r4485, %r4484, %r4482;
	and.b32  	%r4486, %r4468, -1431655766;
	shr.u32 	%r4487, %r4486, 1;
	or.b32  	%r4488, %r4487, %r4486;
	and.b32  	%r4489, %r4469, 1431655765;
	shl.b32 	%r4490, %r4469, 1;
	and.b32  	%r4491, %r4490, -1431655766;
	or.b32  	%r4492, %r4491, %r4489;
	and.b32  	%r4493, %r4469, -1431655766;
	shr.u32 	%r4494, %r4493, 1;
	or.b32  	%r4495, %r4494, %r4493;
	and.b32  	%r4496, %r4470, 1431655765;
	shl.b32 	%r4497, %r4470, 1;
	and.b32  	%r4498, %r4497, -1431655766;
	or.b32  	%r4499, %r4498, %r4496;
	and.b32  	%r4500, %r4470, -1431655766;
	shr.u32 	%r4501, %r4500, 1;
	or.b32  	%r4502, %r4501, %r4500;
	and.b32  	%r4503, %r4478, 858993459;
	shl.b32 	%r4504, %r4485, 2;
	and.b32  	%r4505, %r4504, -858993460;
	or.b32  	%r4506, %r4505, %r4503;
	and.b32  	%r4507, %r4478, -858993460;
	shr.u32 	%r4508, %r4507, 2;
	and.b32  	%r4509, %r4485, -858993460;
	or.b32  	%r4510, %r4508, %r4509;
	and.b32  	%r4511, %r4481, 858993459;
	shl.b32 	%r4512, %r4488, 2;
	and.b32  	%r4513, %r4512, -858993460;
	or.b32  	%r4514, %r4513, %r4511;
	and.b32  	%r4515, %r4481, -858993460;
	shr.u32 	%r4516, %r4515, 2;
	and.b32  	%r4517, %r4488, -858993460;
	or.b32  	%r4518, %r4516, %r4517;
	and.b32  	%r4519, %r4492, 858993459;
	shl.b32 	%r4520, %r4499, 2;
	and.b32  	%r4521, %r4520, -858993460;
	or.b32  	%r4522, %r4521, %r4519;
	and.b32  	%r4523, %r4492, -858993460;
	shr.u32 	%r4524, %r4523, 2;
	and.b32  	%r4525, %r4499, -858993460;
	or.b32  	%r4526, %r4524, %r4525;
	and.b32  	%r4527, %r4495, 858993459;
	shl.b32 	%r4528, %r4502, 2;
	and.b32  	%r4529, %r4528, -858993460;
	or.b32  	%r4530, %r4529, %r4527;
	and.b32  	%r4531, %r4495, -858993460;
	shr.u32 	%r4532, %r4531, 2;
	and.b32  	%r4533, %r4502, -858993460;
	or.b32  	%r4534, %r4532, %r4533;
	and.b32  	%r4535, %r4506, 84215045;
	shl.b32 	%r4536, %r4522, 4;
	and.b32  	%r4537, %r4536, 1347440720;
	and.b32  	%r4538, %r4506, 1347440720;
	and.b32  	%r4539, %r4522, 1347440720;
	and.b32  	%r4540, %r4514, 168430090;
	shl.b32 	%r4541, %r4530, 4;
	and.b32  	%r4542, %r4541, -1600085856;
	and.b32  	%r4543, %r4514, -1600085856;
	and.b32  	%r4544, %r4530, -1600085856;
	and.b32  	%r4545, %r4510, 84215045;
	shl.b32 	%r4546, %r4526, 4;
	and.b32  	%r4547, %r4546, 1347440720;
	and.b32  	%r4548, %r4510, 1347440720;
	and.b32  	%r4549, %r4526, 1347440720;
	and.b32  	%r4550, %r4518, 168430090;
	shl.b32 	%r4551, %r4534, 4;
	and.b32  	%r4552, %r4551, -1600085856;
	and.b32  	%r4553, %r4518, -1600085856;
	and.b32  	%r4554, %r4534, -1600085856;
	or.b32  	%r4555, %r4540, %r4535;
	or.b32  	%r4556, %r4555, %r4537;
	or.b32  	%r4557, %r4556, %r4542;
	st.local.u32 	[%rd4+192], %r4557;
	or.b32  	%r4558, %r4550, %r4545;
	or.b32  	%r4559, %r4558, %r4547;
	or.b32  	%r4560, %r4559, %r4552;
	st.local.u32 	[%rd4+196], %r4560;
	or.b32  	%r4561, %r4543, %r4538;
	shr.u32 	%r4562, %r4561, 4;
	or.b32  	%r4563, %r4562, %r4539;
	or.b32  	%r4564, %r4563, %r4544;
	st.local.u32 	[%rd4+200], %r4564;
	or.b32  	%r4565, %r4553, %r4548;
	shr.u32 	%r4566, %r4565, 4;
	or.b32  	%r4567, %r4566, %r4549;
	or.b32  	%r4568, %r4567, %r4554;
	st.local.u32 	[%rd4+204], %r4568;
	setp.lt.u32 	%p25, %r9578, 13;
	@%p25 bra 	$L__BB3_31;

	ld.local.v4.u32 	{%r4569, %r4570, %r4571, %r4572}, [%rd5+208];
	and.b32  	%r4577, %r4569, 1431655765;
	shl.b32 	%r4578, %r4569, 1;
	and.b32  	%r4579, %r4578, -1431655766;
	or.b32  	%r4580, %r4579, %r4577;
	and.b32  	%r4581, %r4569, -1431655766;
	shr.u32 	%r4582, %r4581, 1;
	or.b32  	%r4583, %r4582, %r4581;
	and.b32  	%r4584, %r4570, 1431655765;
	shl.b32 	%r4585, %r4570, 1;
	and.b32  	%r4586, %r4585, -1431655766;
	or.b32  	%r4587, %r4586, %r4584;
	and.b32  	%r4588, %r4570, -1431655766;
	shr.u32 	%r4589, %r4588, 1;
	or.b32  	%r4590, %r4589, %r4588;
	and.b32  	%r4591, %r4571, 1431655765;
	shl.b32 	%r4592, %r4571, 1;
	and.b32  	%r4593, %r4592, -1431655766;
	or.b32  	%r4594, %r4593, %r4591;
	and.b32  	%r4595, %r4571, -1431655766;
	shr.u32 	%r4596, %r4595, 1;
	or.b32  	%r4597, %r4596, %r4595;
	and.b32  	%r4598, %r4572, 1431655765;
	shl.b32 	%r4599, %r4572, 1;
	and.b32  	%r4600, %r4599, -1431655766;
	or.b32  	%r4601, %r4600, %r4598;
	and.b32  	%r4602, %r4572, -1431655766;
	shr.u32 	%r4603, %r4602, 1;
	or.b32  	%r4604, %r4603, %r4602;
	and.b32  	%r4605, %r4580, 858993459;
	shl.b32 	%r4606, %r4587, 2;
	and.b32  	%r4607, %r4606, -858993460;
	or.b32  	%r4608, %r4607, %r4605;
	and.b32  	%r4609, %r4580, -858993460;
	shr.u32 	%r4610, %r4609, 2;
	and.b32  	%r4611, %r4587, -858993460;
	or.b32  	%r4612, %r4610, %r4611;
	and.b32  	%r4613, %r4583, 858993459;
	shl.b32 	%r4614, %r4590, 2;
	and.b32  	%r4615, %r4614, -858993460;
	or.b32  	%r4616, %r4615, %r4613;
	and.b32  	%r4617, %r4583, -858993460;
	shr.u32 	%r4618, %r4617, 2;
	and.b32  	%r4619, %r4590, -858993460;
	or.b32  	%r4620, %r4618, %r4619;
	and.b32  	%r4621, %r4594, 858993459;
	shl.b32 	%r4622, %r4601, 2;
	and.b32  	%r4623, %r4622, -858993460;
	or.b32  	%r4624, %r4623, %r4621;
	and.b32  	%r4625, %r4594, -858993460;
	shr.u32 	%r4626, %r4625, 2;
	and.b32  	%r4627, %r4601, -858993460;
	or.b32  	%r4628, %r4626, %r4627;
	and.b32  	%r4629, %r4597, 858993459;
	shl.b32 	%r4630, %r4604, 2;
	and.b32  	%r4631, %r4630, -858993460;
	or.b32  	%r4632, %r4631, %r4629;
	and.b32  	%r4633, %r4597, -858993460;
	shr.u32 	%r4634, %r4633, 2;
	and.b32  	%r4635, %r4604, -858993460;
	or.b32  	%r4636, %r4634, %r4635;
	and.b32  	%r4637, %r4608, 84215045;
	shl.b32 	%r4638, %r4624, 4;
	and.b32  	%r4639, %r4638, 1347440720;
	and.b32  	%r4640, %r4608, 1347440720;
	and.b32  	%r4641, %r4624, 1347440720;
	and.b32  	%r4642, %r4616, 168430090;
	shl.b32 	%r4643, %r4632, 4;
	and.b32  	%r4644, %r4643, -1600085856;
	and.b32  	%r4645, %r4616, -1600085856;
	and.b32  	%r4646, %r4632, -1600085856;
	and.b32  	%r4647, %r4612, 84215045;
	shl.b32 	%r4648, %r4628, 4;
	and.b32  	%r4649, %r4648, 1347440720;
	and.b32  	%r4650, %r4612, 1347440720;
	and.b32  	%r4651, %r4628, 1347440720;
	and.b32  	%r4652, %r4620, 168430090;
	shl.b32 	%r4653, %r4636, 4;
	and.b32  	%r4654, %r4653, -1600085856;
	and.b32  	%r4655, %r4620, -1600085856;
	and.b32  	%r4656, %r4636, -1600085856;
	or.b32  	%r4657, %r4642, %r4637;
	or.b32  	%r4658, %r4657, %r4639;
	or.b32  	%r4659, %r4658, %r4644;
	st.local.u32 	[%rd4+208], %r4659;
	or.b32  	%r4660, %r4652, %r4647;
	or.b32  	%r4661, %r4660, %r4649;
	or.b32  	%r4662, %r4661, %r4654;
	st.local.u32 	[%rd4+212], %r4662;
	or.b32  	%r4663, %r4645, %r4640;
	shr.u32 	%r4664, %r4663, 4;
	or.b32  	%r4665, %r4664, %r4641;
	or.b32  	%r4666, %r4665, %r4646;
	st.local.u32 	[%rd4+216], %r4666;
	or.b32  	%r4667, %r4655, %r4650;
	shr.u32 	%r4668, %r4667, 4;
	or.b32  	%r4669, %r4668, %r4651;
	or.b32  	%r4670, %r4669, %r4656;
	st.local.u32 	[%rd4+220], %r4670;
	ld.local.v4.u32 	{%r4671, %r4672, %r4673, %r4674}, [%rd5+224];
	and.b32  	%r4679, %r4671, 1431655765;
	shl.b32 	%r4680, %r4671, 1;
	and.b32  	%r4681, %r4680, -1431655766;
	or.b32  	%r4682, %r4681, %r4679;
	and.b32  	%r4683, %r4671, -1431655766;
	shr.u32 	%r4684, %r4683, 1;
	or.b32  	%r4685, %r4684, %r4683;
	and.b32  	%r4686, %r4672, 1431655765;
	shl.b32 	%r4687, %r4672, 1;
	and.b32  	%r4688, %r4687, -1431655766;
	or.b32  	%r4689, %r4688, %r4686;
	and.b32  	%r4690, %r4672, -1431655766;
	shr.u32 	%r4691, %r4690, 1;
	or.b32  	%r4692, %r4691, %r4690;
	and.b32  	%r4693, %r4673, 1431655765;
	shl.b32 	%r4694, %r4673, 1;
	and.b32  	%r4695, %r4694, -1431655766;
	or.b32  	%r4696, %r4695, %r4693;
	and.b32  	%r4697, %r4673, -1431655766;
	shr.u32 	%r4698, %r4697, 1;
	or.b32  	%r4699, %r4698, %r4697;
	and.b32  	%r4700, %r4674, 1431655765;
	shl.b32 	%r4701, %r4674, 1;
	and.b32  	%r4702, %r4701, -1431655766;
	or.b32  	%r4703, %r4702, %r4700;
	and.b32  	%r4704, %r4674, -1431655766;
	shr.u32 	%r4705, %r4704, 1;
	or.b32  	%r4706, %r4705, %r4704;
	and.b32  	%r4707, %r4682, 858993459;
	shl.b32 	%r4708, %r4689, 2;
	and.b32  	%r4709, %r4708, -858993460;
	or.b32  	%r4710, %r4709, %r4707;
	and.b32  	%r4711, %r4682, -858993460;
	shr.u32 	%r4712, %r4711, 2;
	and.b32  	%r4713, %r4689, -858993460;
	or.b32  	%r4714, %r4712, %r4713;
	and.b32  	%r4715, %r4685, 858993459;
	shl.b32 	%r4716, %r4692, 2;
	and.b32  	%r4717, %r4716, -858993460;
	or.b32  	%r4718, %r4717, %r4715;
	and.b32  	%r4719, %r4685, -858993460;
	shr.u32 	%r4720, %r4719, 2;
	and.b32  	%r4721, %r4692, -858993460;
	or.b32  	%r4722, %r4720, %r4721;
	and.b32  	%r4723, %r4696, 858993459;
	shl.b32 	%r4724, %r4703, 2;
	and.b32  	%r4725, %r4724, -858993460;
	or.b32  	%r4726, %r4725, %r4723;
	and.b32  	%r4727, %r4696, -858993460;
	shr.u32 	%r4728, %r4727, 2;
	and.b32  	%r4729, %r4703, -858993460;
	or.b32  	%r4730, %r4728, %r4729;
	and.b32  	%r4731, %r4699, 858993459;
	shl.b32 	%r4732, %r4706, 2;
	and.b32  	%r4733, %r4732, -858993460;
	or.b32  	%r4734, %r4733, %r4731;
	and.b32  	%r4735, %r4699, -858993460;
	shr.u32 	%r4736, %r4735, 2;
	and.b32  	%r4737, %r4706, -858993460;
	or.b32  	%r4738, %r4736, %r4737;
	and.b32  	%r4739, %r4710, 84215045;
	shl.b32 	%r4740, %r4726, 4;
	and.b32  	%r4741, %r4740, 1347440720;
	and.b32  	%r4742, %r4710, 1347440720;
	and.b32  	%r4743, %r4726, 1347440720;
	and.b32  	%r4744, %r4718, 168430090;
	shl.b32 	%r4745, %r4734, 4;
	and.b32  	%r4746, %r4745, -1600085856;
	and.b32  	%r4747, %r4718, -1600085856;
	and.b32  	%r4748, %r4734, -1600085856;
	and.b32  	%r4749, %r4714, 84215045;
	shl.b32 	%r4750, %r4730, 4;
	and.b32  	%r4751, %r4750, 1347440720;
	and.b32  	%r4752, %r4714, 1347440720;
	and.b32  	%r4753, %r4730, 1347440720;
	and.b32  	%r4754, %r4722, 168430090;
	shl.b32 	%r4755, %r4738, 4;
	and.b32  	%r4756, %r4755, -1600085856;
	and.b32  	%r4757, %r4722, -1600085856;
	and.b32  	%r4758, %r4738, -1600085856;
	or.b32  	%r4759, %r4744, %r4739;
	or.b32  	%r4760, %r4759, %r4741;
	or.b32  	%r4761, %r4760, %r4746;
	st.local.u32 	[%rd4+224], %r4761;
	or.b32  	%r4762, %r4754, %r4749;
	or.b32  	%r4763, %r4762, %r4751;
	or.b32  	%r4764, %r4763, %r4756;
	st.local.u32 	[%rd4+228], %r4764;
	or.b32  	%r4765, %r4747, %r4742;
	shr.u32 	%r4766, %r4765, 4;
	or.b32  	%r4767, %r4766, %r4743;
	or.b32  	%r4768, %r4767, %r4748;
	st.local.u32 	[%rd4+232], %r4768;
	or.b32  	%r4769, %r4757, %r4752;
	shr.u32 	%r4770, %r4769, 4;
	or.b32  	%r4771, %r4770, %r4753;
	or.b32  	%r4772, %r4771, %r4758;
	st.local.u32 	[%rd4+236], %r4772;

$L__BB3_31:
	mov.u32 	%r9591, 0;
	st.local.u32 	[%rd4+720], %r9578;
	@%p19 bra 	$L__BB3_36;

	shl.b32 	%r4774, %r9578, 2;
	add.s32 	%r71, %r4774, 4;
	setp.eq.s32 	%p27, %r71, 0;
	mov.u32 	%r9591, %r9578;
	@%p27 bra 	$L__BB3_36;

	mov.u32 	%r9590, 0;
	mov.u64 	%rd104, %rd4;
	mov.u64 	%rd105, %rd4;

$L__BB3_34:
	ld.local.u32 	%r4776, [%rd105];
	and.b32  	%r4777, %r4776, 1431655765;
	shl.b32 	%r4778, %r4776, 1;
	and.b32  	%r4779, %r4778, -1431655766;
	or.b32  	%r4780, %r4779, %r4777;
	st.local.u32 	[%rd104+240], %r4780;
	and.b32  	%r4781, %r4776, -1431655766;
	shr.u32 	%r4782, %r4781, 1;
	or.b32  	%r4783, %r4782, %r4781;
	st.local.u32 	[%rd104+244], %r4783;
	ld.local.u32 	%r4784, [%rd105+4];
	and.b32  	%r4785, %r4784, 1431655765;
	shl.b32 	%r4786, %r4784, 1;
	and.b32  	%r4787, %r4786, -1431655766;
	or.b32  	%r4788, %r4787, %r4785;
	st.local.u32 	[%rd104+248], %r4788;
	and.b32  	%r4789, %r4784, -1431655766;
	shr.u32 	%r4790, %r4789, 1;
	or.b32  	%r4791, %r4790, %r4789;
	st.local.u32 	[%rd104+252], %r4791;
	ld.local.u32 	%r4792, [%rd105+8];
	and.b32  	%r4793, %r4792, 1431655765;
	shl.b32 	%r4794, %r4792, 1;
	and.b32  	%r4795, %r4794, -1431655766;
	or.b32  	%r4796, %r4795, %r4793;
	st.local.u32 	[%rd104+256], %r4796;
	and.b32  	%r4797, %r4792, -1431655766;
	shr.u32 	%r4798, %r4797, 1;
	or.b32  	%r4799, %r4798, %r4797;
	st.local.u32 	[%rd104+260], %r4799;
	ld.local.u32 	%r4800, [%rd105+12];
	and.b32  	%r4801, %r4800, 1431655765;
	shl.b32 	%r4802, %r4800, 1;
	and.b32  	%r4803, %r4802, -1431655766;
	or.b32  	%r4804, %r4803, %r4801;
	st.local.u32 	[%rd104+264], %r4804;
	and.b32  	%r4805, %r4800, -1431655766;
	shr.u32 	%r4806, %r4805, 1;
	or.b32  	%r4807, %r4806, %r4805;
	st.local.u32 	[%rd104+268], %r4807;
	add.s64 	%rd105, %rd105, 16;
	add.s64 	%rd104, %rd104, 32;
	add.s32 	%r9590, %r9590, 4;
	setp.lt.u32 	%p28, %r9590, %r71;
	@%p28 bra 	$L__BB3_34;

	ld.local.u32 	%r9591, [%rd4+720];

$L__BB3_36:
	ld.param.u64 	%rd95, [Generate2010key_param_3];
	ld.const.u8 	%r4808, [%rd95];
	ld.const.u8 	%r4809, [%rd95+1];
	prmt.b32 	%r4810, %r4809, %r4808, 30212;
	ld.const.u8 	%r4811, [%rd95+2];
	prmt.b32 	%r4812, %r4811, %r4810, 28756;
	ld.const.u8 	%r4813, [%rd95+3];
	prmt.b32 	%r4814, %r4813, %r4812, 1620;
	ld.const.u8 	%r4815, [%rd95+4];
	ld.const.u8 	%r4816, [%rd95+5];
	prmt.b32 	%r4817, %r4816, %r4815, 30212;
	ld.const.u8 	%r4818, [%rd95+6];
	prmt.b32 	%r4819, %r4818, %r4817, 28756;
	ld.const.u8 	%r4820, [%rd95+7];
	prmt.b32 	%r4821, %r4820, %r4819, 1620;
	ld.const.u8 	%r4822, [%rd95+8];
	ld.const.u8 	%r4823, [%rd95+9];
	prmt.b32 	%r4824, %r4823, %r4822, 30212;
	ld.const.u8 	%r4825, [%rd95+10];
	prmt.b32 	%r4826, %r4825, %r4824, 28756;
	ld.const.u8 	%r4827, [%rd95+11];
	prmt.b32 	%r4828, %r4827, %r4826, 1620;
	ld.const.u8 	%r4829, [%rd95+12];
	ld.const.u8 	%r4830, [%rd95+13];
	prmt.b32 	%r4831, %r4830, %r4829, 30212;
	ld.const.u8 	%r4832, [%rd95+14];
	prmt.b32 	%r4833, %r4832, %r4831, 28756;
	ld.const.u8 	%r4834, [%rd95+15];
	prmt.b32 	%r4835, %r4834, %r4833, 1620;
	and.b32  	%r4836, %r4814, -1431655766;
	shr.u32 	%r4837, %r4836, 3;
	shr.u32 	%r4838, %r4836, 1;
	and.b32  	%r4839, %r4821, -2004318072;
	and.b32  	%r4840, %r4828, -1431655766;
	shr.u32 	%r4841, %r4840, 3;
	shr.u32 	%r4842, %r4840, 1;
	and.b32  	%r4843, %r4835, -2004318072;
	and.b32  	%r4844, %r4814, 286331153;
	shl.b32 	%r4845, %r4821, 2;
	and.b32  	%r4846, %r4845, 1145324612;
	or.b32  	%r4847, %r4846, %r4844;
	and.b32  	%r4848, %r4814, 1145324612;
	shr.u32 	%r4849, %r4848, 2;
	and.b32  	%r4850, %r4821, 1145324612;
	or.b32  	%r4851, %r4849, %r4850;
	and.b32  	%r4852, %r4838, 286331153;
	shl.b32 	%r4853, %r4821, 1;
	and.b32  	%r4854, %r4853, 1145324612;
	or.b32  	%r4855, %r4854, %r4852;
	and.b32  	%r4856, %r4837, 286331153;
	shr.u32 	%r4857, %r4839, 1;
	or.b32  	%r4858, %r4856, %r4857;
	and.b32  	%r4859, %r4828, 286331153;
	shl.b32 	%r4860, %r4835, 2;
	and.b32  	%r4861, %r4860, 1145324612;
	or.b32  	%r4862, %r4861, %r4859;
	and.b32  	%r4863, %r4828, 1145324612;
	shr.u32 	%r4864, %r4863, 2;
	and.b32  	%r4865, %r4835, 1145324612;
	or.b32  	%r4866, %r4864, %r4865;
	and.b32  	%r4867, %r4842, 286331153;
	shl.b32 	%r4868, %r4835, 1;
	and.b32  	%r4869, %r4868, 1145324612;
	or.b32  	%r4870, %r4869, %r4867;
	and.b32  	%r4871, %r4841, 286331153;
	shr.u32 	%r4872, %r4843, 1;
	or.b32  	%r4873, %r4871, %r4872;
	and.b32  	%r4874, %r4847, 84215045;
	shl.b32 	%r4875, %r4862, 4;
	and.b32  	%r4876, %r4875, 1347440720;
	or.b32  	%r4877, %r4876, %r4874;
	and.b32  	%r4878, %r4847, 1347440720;
	shr.u32 	%r4879, %r4878, 4;
	and.b32  	%r4880, %r4862, 1347440720;
	or.b32  	%r4881, %r4879, %r4880;
	and.b32  	%r4882, %r4855, 84215045;
	shl.b32 	%r4883, %r4870, 4;
	and.b32  	%r4884, %r4883, 1347440720;
	or.b32  	%r4885, %r4884, %r4882;
	and.b32  	%r4886, %r4855, 1347440720;
	shr.u32 	%r4887, %r4886, 4;
	and.b32  	%r4888, %r4870, 1347440720;
	or.b32  	%r4889, %r4887, %r4888;
	and.b32  	%r4890, %r4851, 84215045;
	shl.b32 	%r4891, %r4866, 4;
	and.b32  	%r4892, %r4891, 1347440720;
	or.b32  	%r4893, %r4892, %r4890;
	and.b32  	%r4894, %r4851, 1347440720;
	shr.u32 	%r4895, %r4894, 4;
	and.b32  	%r4896, %r4866, 1347440720;
	or.b32  	%r4897, %r4895, %r4896;
	and.b32  	%r4898, %r4858, 84215045;
	shl.b32 	%r4899, %r4873, 4;
	and.b32  	%r4900, %r4899, 1347440720;
	or.b32  	%r4901, %r4900, %r4898;
	and.b32  	%r4902, %r4858, 1347440720;
	shr.u32 	%r4903, %r4902, 4;
	and.b32  	%r4904, %r4873, 1347440720;
	or.b32  	%r4905, %r4903, %r4904;
	shl.b32 	%r4906, %r9591, 3;
	mul.wide.u32 	%rd72, %r4906, 4;
	add.s64 	%rd73, %rd4, %rd72;
	ld.local.u32 	%r4907, [%rd73+240];
	xor.b32  	%r9608, %r4877, %r4907;
	ld.local.u32 	%r4908, [%rd73+244];
	xor.b32  	%r9607, %r4885, %r4908;
	ld.local.u32 	%r4909, [%rd73+248];
	xor.b32  	%r9606, %r4893, %r4909;
	ld.local.u32 	%r4910, [%rd73+252];
	xor.b32  	%r9605, %r4901, %r4910;
	ld.local.u32 	%r4911, [%rd73+256];
	xor.b32  	%r9604, %r4881, %r4911;
	ld.local.u32 	%r4912, [%rd73+260];
	xor.b32  	%r9603, %r4889, %r4912;
	ld.local.u32 	%r4913, [%rd73+264];
	xor.b32  	%r9602, %r4897, %r4913;
	ld.local.u32 	%r4914, [%rd73+268];
	xor.b32  	%r9601, %r4905, %r4914;
	add.s32 	%r9600, %r9591, -1;
	setp.eq.s32 	%p29, %r9600, 0;
	@%p29 bra 	$L__BB3_38;

$L__BB3_37:
	shl.b32 	%r4915, %r9608, 2;
	and.b32  	%r4916, %r4915, 64512;
	and.b32  	%r4917, %r9608, 255;
	or.b32  	%r4918, %r4916, %r4917;
	and.b32  	%r4919, %r9608, 49152;
	shr.u32 	%r4920, %r4919, 6;
	or.b32  	%r4921, %r4918, %r4920;
	shl.b32 	%r4922, %r9608, 4;
	and.b32  	%r4923, %r4922, 15728640;
	or.b32  	%r4924, %r4921, %r4923;
	and.b32  	%r4925, %r9608, 15728640;
	shr.u32 	%r4926, %r4925, 4;
	or.b32  	%r4927, %r4924, %r4926;
	shl.b32 	%r4928, %r9608, 6;
	and.b32  	%r4929, %r4928, -1073741824;
	or.b32  	%r4930, %r4927, %r4929;
	and.b32  	%r4931, %r9608, -67108864;
	shr.u32 	%r4932, %r4931, 2;
	or.b32  	%r4933, %r4930, %r4932;
	shl.b32 	%r4934, %r9607, 2;
	and.b32  	%r4935, %r4934, 64512;
	and.b32  	%r4936, %r9607, 255;
	or.b32  	%r4937, %r4935, %r4936;
	and.b32  	%r4938, %r9607, 49152;
	shr.u32 	%r4939, %r4938, 6;
	or.b32  	%r4940, %r4937, %r4939;
	shl.b32 	%r4941, %r9607, 4;
	and.b32  	%r4942, %r4941, 15728640;
	or.b32  	%r4943, %r4940, %r4942;
	and.b32  	%r4944, %r9607, 15728640;
	shr.u32 	%r4945, %r4944, 4;
	or.b32  	%r4946, %r4943, %r4945;
	shl.b32 	%r4947, %r9607, 6;
	and.b32  	%r4948, %r4947, -1073741824;
	or.b32  	%r4949, %r4946, %r4948;
	and.b32  	%r4950, %r9607, -67108864;
	shr.u32 	%r4951, %r4950, 2;
	or.b32  	%r4952, %r4949, %r4951;
	shl.b32 	%r4953, %r9606, 2;
	and.b32  	%r4954, %r4953, 64512;
	and.b32  	%r4955, %r9606, 255;
	or.b32  	%r4956, %r4954, %r4955;
	and.b32  	%r4957, %r9606, 49152;
	shr.u32 	%r4958, %r4957, 6;
	or.b32  	%r4959, %r4956, %r4958;
	shl.b32 	%r4960, %r9606, 4;
	and.b32  	%r4961, %r4960, 15728640;
	or.b32  	%r4962, %r4959, %r4961;
	and.b32  	%r4963, %r9606, 15728640;
	shr.u32 	%r4964, %r4963, 4;
	or.b32  	%r4965, %r4962, %r4964;
	shl.b32 	%r4966, %r9606, 6;
	and.b32  	%r4967, %r4966, -1073741824;
	or.b32  	%r4968, %r4965, %r4967;
	and.b32  	%r4969, %r9606, -67108864;
	shr.u32 	%r4970, %r4969, 2;
	or.b32  	%r4971, %r4968, %r4970;
	shl.b32 	%r4972, %r9605, 2;
	and.b32  	%r4973, %r4972, 64512;
	and.b32  	%r4974, %r9605, 255;
	or.b32  	%r4975, %r4973, %r4974;
	and.b32  	%r4976, %r9605, 49152;
	shr.u32 	%r4977, %r4976, 6;
	or.b32  	%r4978, %r4975, %r4977;
	shl.b32 	%r4979, %r9605, 4;
	and.b32  	%r4980, %r4979, 15728640;
	or.b32  	%r4981, %r4978, %r4980;
	and.b32  	%r4982, %r9605, 15728640;
	shr.u32 	%r4983, %r4982, 4;
	or.b32  	%r4984, %r4981, %r4983;
	shl.b32 	%r4985, %r9605, 6;
	and.b32  	%r4986, %r4985, -1073741824;
	or.b32  	%r4987, %r4984, %r4986;
	and.b32  	%r4988, %r9605, -67108864;
	shr.u32 	%r4989, %r4988, 2;
	or.b32  	%r4990, %r4987, %r4989;
	shl.b32 	%r4991, %r9604, 2;
	and.b32  	%r4992, %r4991, 64512;
	and.b32  	%r4993, %r9604, 255;
	or.b32  	%r4994, %r4992, %r4993;
	and.b32  	%r4995, %r9604, 49152;
	shr.u32 	%r4996, %r4995, 6;
	or.b32  	%r4997, %r4994, %r4996;
	shl.b32 	%r4998, %r9604, 4;
	and.b32  	%r4999, %r4998, 15728640;
	or.b32  	%r5000, %r4997, %r4999;
	and.b32  	%r5001, %r9604, 15728640;
	shr.u32 	%r5002, %r5001, 4;
	or.b32  	%r5003, %r5000, %r5002;
	shl.b32 	%r5004, %r9604, 6;
	and.b32  	%r5005, %r5004, -1073741824;
	or.b32  	%r5006, %r5003, %r5005;
	and.b32  	%r5007, %r9604, -67108864;
	shr.u32 	%r5008, %r5007, 2;
	or.b32  	%r5009, %r5006, %r5008;
	shl.b32 	%r5010, %r9603, 2;
	and.b32  	%r5011, %r5010, 64512;
	and.b32  	%r5012, %r9603, 255;
	or.b32  	%r5013, %r5011, %r5012;
	and.b32  	%r5014, %r9603, 49152;
	shr.u32 	%r5015, %r5014, 6;
	or.b32  	%r5016, %r5013, %r5015;
	shl.b32 	%r5017, %r9603, 4;
	and.b32  	%r5018, %r5017, 15728640;
	or.b32  	%r5019, %r5016, %r5018;
	and.b32  	%r5020, %r9603, 15728640;
	shr.u32 	%r5021, %r5020, 4;
	or.b32  	%r5022, %r5019, %r5021;
	shl.b32 	%r5023, %r9603, 6;
	and.b32  	%r5024, %r5023, -1073741824;
	or.b32  	%r5025, %r5022, %r5024;
	and.b32  	%r5026, %r9603, -67108864;
	shr.u32 	%r5027, %r5026, 2;
	or.b32  	%r5028, %r5025, %r5027;
	shl.b32 	%r5029, %r9602, 2;
	and.b32  	%r5030, %r5029, 64512;
	and.b32  	%r5031, %r9602, 255;
	or.b32  	%r5032, %r5030, %r5031;
	and.b32  	%r5033, %r9602, 49152;
	shr.u32 	%r5034, %r5033, 6;
	or.b32  	%r5035, %r5032, %r5034;
	shl.b32 	%r5036, %r9602, 4;
	and.b32  	%r5037, %r5036, 15728640;
	or.b32  	%r5038, %r5035, %r5037;
	and.b32  	%r5039, %r9602, 15728640;
	shr.u32 	%r5040, %r5039, 4;
	or.b32  	%r5041, %r5038, %r5040;
	shl.b32 	%r5042, %r9602, 6;
	and.b32  	%r5043, %r5042, -1073741824;
	or.b32  	%r5044, %r5041, %r5043;
	and.b32  	%r5045, %r9602, -67108864;
	shr.u32 	%r5046, %r5045, 2;
	or.b32  	%r5047, %r5044, %r5046;
	shl.b32 	%r5048, %r9601, 2;
	and.b32  	%r5049, %r5048, 64512;
	and.b32  	%r5050, %r9601, 255;
	or.b32  	%r5051, %r5049, %r5050;
	and.b32  	%r5052, %r9601, 49152;
	shr.u32 	%r5053, %r5052, 6;
	or.b32  	%r5054, %r5051, %r5053;
	shl.b32 	%r5055, %r9601, 4;
	and.b32  	%r5056, %r5055, 15728640;
	or.b32  	%r5057, %r5054, %r5056;
	and.b32  	%r5058, %r9601, 15728640;
	shr.u32 	%r5059, %r5058, 4;
	or.b32  	%r5060, %r5057, %r5059;
	shl.b32 	%r5061, %r9601, 6;
	and.b32  	%r5062, %r5061, -1073741824;
	or.b32  	%r5063, %r5060, %r5062;
	and.b32  	%r5064, %r9601, -67108864;
	shr.u32 	%r5065, %r5064, 2;
	or.b32  	%r5066, %r5063, %r5065;
	xor.b32  	%r5067, %r4990, %r4933;
	xor.b32  	%r5068, %r5009, %r4952;
	not.b32 	%r5069, %r5028;
	not.b32 	%r5070, %r5047;
	not.b32 	%r5071, %r5068;
	xor.b32  	%r5072, %r5071, %r5070;
	not.b32 	%r5073, %r5067;
	xor.b32  	%r5074, %r5073, %r5069;
	xor.b32  	%r5075, %r5009, %r4971;
	xor.b32  	%r5076, %r5075, %r5066;
	xor.b32  	%r5077, %r4990, %r4952;
	xor.b32  	%r5078, %r5077, %r5047;
	xor.b32  	%r5079, %r4971, %r4933;
	xor.b32  	%r5080, %r5079, %r5028;
	xor.b32  	%r5081, %r5071, %r5066;
	xor.b32  	%r5082, %r5073, %r5070;
	xor.b32  	%r5083, %r4971, %r5069;
	xor.b32  	%r5084, %r5083, %r5066;
	xor.b32  	%r5085, %r5081, %r5078;
	xor.b32  	%r5086, %r5073, %r5071;
	xor.b32  	%r5087, %r5078, %r5072;
	xor.b32  	%r5088, %r5066, %r5070;
	xor.b32  	%r5089, %r5076, %r5074;
	xor.b32  	%r5090, %r5084, %r5089;
	xor.b32  	%r5091, %r5090, %r5078;
	xor.b32  	%r5092, %r5086, %r5085;
	xor.b32  	%r5093, %r5090, %r5072;
	xor.b32  	%r5094, %r5090, %r5082;
	xor.b32  	%r5095, %r5094, %r5088;
	xor.b32  	%r5096, %r5092, %r5080;
	xor.b32  	%r5097, %r5096, %r5081;
	xor.b32  	%r5098, %r5096, %r5074;
	xor.b32  	%r5099, %r5097, %r5084;
	xor.b32  	%r5100, %r5097, %r5089;
	xor.b32  	%r5101, %r5098, %r5087;
	xor.b32  	%r5102, %r5101, %r5084;
	xor.b32  	%r5103, %r5100, %r5101;
	xor.b32  	%r5104, %r5101, %r5089;
	and.b32  	%r5105, %r5097, %r5092;
	and.b32  	%r5106, %r5099, %r5095;
	and.b32  	%r5107, %r5091, %r5084;
	and.b32  	%r5108, %r5104, %r5086;
	and.b32  	%r5109, %r5094, %r5090;
	and.b32  	%r5110, %r5102, %r5093;
	and.b32  	%r5111, %r5101, %r5087;
	and.b32  	%r5112, %r5103, %r5085;
	xor.b32  	%r5113, %r5112, %r5111;
	and.b32  	%r5114, %r5100, %r5088;
	xor.b32  	%r5115, %r5114, %r5111;
	xor.b32  	%r5116, %r5105, %r5098;
	xor.b32  	%r5117, %r5116, %r5106;
	xor.b32  	%r5118, %r5117, %r5113;
	xor.b32  	%r5119, %r5107, %r5088;
	xor.b32  	%r5120, %r5119, %r5100;
	xor.b32  	%r5121, %r5120, %r5105;
	xor.b32  	%r5122, %r5121, %r5115;
	xor.b32  	%r5123, %r5109, %r5086;
	xor.b32  	%r5124, %r5123, %r5104;
	xor.b32  	%r5125, %r5124, %r5108;
	xor.b32  	%r5126, %r5125, %r5113;
	xor.b32  	%r5127, %r5104, %r5072;
	xor.b32  	%r5128, %r5127, %r5108;
	xor.b32  	%r5129, %r5128, %r5110;
	xor.b32  	%r5130, %r5129, %r5115;
	xor.b32  	%r5131, %r5118, %r5122;
	and.b32  	%r5132, %r5118, %r5126;
	xor.b32  	%r5133, %r5132, %r5130;
	and.b32  	%r5134, %r5133, %r5131;
	xor.b32  	%r5135, %r5134, %r5122;
	xor.b32  	%r5136, %r5126, %r5130;
	xor.b32  	%r5137, %r5132, %r5122;
	and.b32  	%r5138, %r5137, %r5136;
	xor.b32  	%r5139, %r5138, %r5130;
	xor.b32  	%r5140, %r5139, %r5126;
	xor.b32  	%r5141, %r5138, %r5132;
	and.b32  	%r5142, %r5141, %r5130;
	xor.b32  	%r5143, %r5140, %r5142;
	xor.b32  	%r5144, %r5142, %r5133;
	and.b32  	%r5145, %r5144, %r5135;
	xor.b32  	%r5146, %r5145, %r5131;
	xor.b32  	%r5147, %r5146, %r5143;
	xor.b32  	%r5148, %r5135, %r5139;
	xor.b32  	%r5149, %r5146, %r5135;
	xor.b32  	%r5150, %r5142, %r5126;
	xor.b32  	%r5151, %r5147, %r5148;
	and.b32  	%r5152, %r5150, %r5097;
	and.b32  	%r5153, %r5143, %r5099;
	and.b32  	%r5154, %r5139, %r5084;
	and.b32  	%r5155, %r5149, %r5104;
	and.b32  	%r5156, %r5146, %r5090;
	and.b32  	%r5157, %r5135, %r5102;
	and.b32  	%r5158, %r5148, %r5101;
	and.b32  	%r5159, %r5151, %r5103;
	and.b32  	%r5160, %r5147, %r5100;
	and.b32  	%r5161, %r5150, %r5092;
	and.b32  	%r5162, %r5143, %r5095;
	and.b32  	%r5163, %r5139, %r5091;
	and.b32  	%r5164, %r5149, %r5086;
	and.b32  	%r5165, %r5146, %r5094;
	and.b32  	%r5166, %r5135, %r5093;
	and.b32  	%r5167, %r5148, %r5087;
	and.b32  	%r5168, %r5151, %r5085;
	and.b32  	%r5169, %r5147, %r5088;
	xor.b32  	%r5170, %r5168, %r5167;
	xor.b32  	%r5171, %r5162, %r5163;
	xor.b32  	%r5172, %r5165, %r5157;
	xor.b32  	%r5173, %r5161, %r5162;
	xor.b32  	%r5174, %r5164, %r5154;
	xor.b32  	%r5175, %r5154, %r5157;
	xor.b32  	%r5176, %r5159, %r5160;
	xor.b32  	%r5177, %r5155, %r5152;
	xor.b32  	%r5178, %r5164, %r5172;
	xor.b32  	%r5179, %r5174, %r5177;
	xor.b32  	%r5180, %r5170, %r5156;
	xor.b32  	%r5181, %r5155, %r5158;
	xor.b32  	%r5182, %r5181, %r5159;
	xor.b32  	%r5183, %r5170, %r5179;
	xor.b32  	%r5184, %r5179, %r5166;
	xor.b32  	%r5185, %r5176, %r5180;
	xor.b32  	%r5186, %r5173, %r5180;
	xor.b32  	%r5187, %r5182, %r5156;
	xor.b32  	%r5188, %r5184, %r5185;
	xor.b32  	%r5189, %r5186, %r5153;
	xor.b32  	%r5190, %r5186, %r5182;
	xor.b32  	%r5191, %r5189, %r5177;
	xor.b32  	%r5192, %r5185, %r5178;
	xor.b32  	%r5193, %r5191, %r5187;
	xor.b32  	%r5194, %r5192, %r5193;
	xor.b32  	%r5195, %r5171, %r5188;
	xor.b32  	%r5196, %r5168, %r5169;
	xor.b32  	%r5197, %r5196, %r5187;
	xor.b32  	%r5198, %r5183, %r5172;
	xor.b32  	%r5199, %r5197, %r5188;
	xor.b32  	%r5200, %r5198, %r5199;
	xor.b32  	%r5201, %r5200, %r5195;
	xor.b32  	%r5202, %r5175, %r5189;
	xor.b32  	%r5203, %r5194, %r5202;
	xor.b32  	%r5204, %r5187, %r5192;
	xor.b32  	%r5205, %r5200, %r5202;
	xor.b32  	%r5206, %r5190, %r5191;
	xor.b32  	%r5207, %r5206, %r5195;
	xor.b32  	%r5208, %r5206, %r5192;
	xor.b32  	%r5209, %r5198, %r5193;
	xor.b32  	%r5210, %r5209, %r5202;
	xor.b32  	%r5211, %r5190, %r5199;
	xor.b32  	%r5212, %r5211, %r5195;
	shl.b32 	%r5213, %r9600, 3;
	mul.wide.u32 	%rd74, %r5213, 4;
	add.s64 	%rd75, %rd4, %rd74;
	ld.local.u32 	%r5214, [%rd75+240];
	xor.b32  	%r5215, %r5212, %r5214;
	ld.local.u32 	%r5216, [%rd75+244];
	xor.b32  	%r5217, %r5210, %r5216;
	ld.local.u32 	%r5218, [%rd75+248];
	xor.b32  	%r5219, %r5208, %r5218;
	ld.local.u32 	%r5220, [%rd75+252];
	xor.b32  	%r5221, %r5201, %r5220;
	ld.local.u32 	%r5222, [%rd75+256];
	xor.b32  	%r5223, %r5203, %r5222;
	ld.local.u32 	%r5224, [%rd75+260];
	xor.b32  	%r5225, %r5207, %r5224;
	ld.local.u32 	%r5226, [%rd75+264];
	xor.b32  	%r5227, %r5205, %r5226;
	ld.local.u32 	%r5228, [%rd75+268];
	xor.b32  	%r5229, %r5204, %r5228;
	shf.l.wrap.b32 	%r5230, %r5215, %r5215, 24;
	shf.l.wrap.b32 	%r5231, %r5217, %r5217, 24;
	shf.l.wrap.b32 	%r5232, %r5219, %r5219, 24;
	shf.l.wrap.b32 	%r5233, %r5221, %r5221, 24;
	shf.l.wrap.b32 	%r5234, %r5223, %r5223, 24;
	shf.l.wrap.b32 	%r5235, %r5225, %r5225, 24;
	shf.l.wrap.b32 	%r5236, %r5227, %r5227, 24;
	shf.l.wrap.b32 	%r5237, %r5229, %r5229, 24;
	xor.b32  	%r5238, %r5225, %r5215;
	xor.b32  	%r5239, %r5227, %r5230;
	xor.b32  	%r5240, %r5239, %r5238;
	xor.b32  	%r5241, %r5240, %r5235;
	shf.l.wrap.b32 	%r5242, %r5241, %r5241, 16;
	xor.b32  	%r5243, %r5225, %r5230;
	xor.b32  	%r5244, %r5243, %r5227;
	xor.b32  	%r5245, %r5244, %r5229;
	xor.b32  	%r5246, %r5245, %r5235;
	xor.b32  	%r5247, %r5246, %r5237;
	xor.b32  	%r9608, %r5247, %r5242;
	xor.b32  	%r5248, %r5231, %r5217;
	xor.b32  	%r5249, %r5248, %r5225;
	xor.b32  	%r5250, %r5249, %r5229;
	xor.b32  	%r5251, %r5250, %r5235;
	xor.b32  	%r5252, %r5251, %r5236;
	shf.l.wrap.b32 	%r5253, %r5252, %r5252, 16;
	xor.b32  	%r5254, %r5231, %r5230;
	xor.b32  	%r5255, %r5254, %r5238;
	xor.b32  	%r5256, %r5255, %r5235;
	xor.b32  	%r5257, %r5256, %r5236;
	xor.b32  	%r5258, %r5257, %r5237;
	xor.b32  	%r9607, %r5258, %r5253;
	xor.b32  	%r5259, %r5217, %r5215;
	xor.b32  	%r5260, %r5219, %r5215;
	xor.b32  	%r5261, %r5260, %r5232;
	xor.b32  	%r5262, %r5261, %r5227;
	xor.b32  	%r5263, %r5262, %r5236;
	xor.b32  	%r5264, %r5263, %r5237;
	shf.l.wrap.b32 	%r5265, %r5264, %r5264, 16;
	xor.b32  	%r5266, %r5231, %r5259;
	xor.b32  	%r5267, %r5266, %r5232;
	xor.b32  	%r5268, %r5267, %r5227;
	xor.b32  	%r5269, %r5268, %r5236;
	xor.b32  	%r5270, %r5269, %r5237;
	xor.b32  	%r9606, %r5270, %r5265;
	xor.b32  	%r5271, %r5259, %r5219;
	xor.b32  	%r5272, %r5230, %r5259;
	xor.b32  	%r5273, %r5272, %r5221;
	xor.b32  	%r5274, %r5273, %r5225;
	xor.b32  	%r5275, %r5274, %r5233;
	xor.b32  	%r5276, %r5275, %r5227;
	xor.b32  	%r5277, %r5276, %r5229;
	xor.b32  	%r5278, %r5277, %r5235;
	xor.b32  	%r5279, %r5278, %r5237;
	shf.l.wrap.b32 	%r5280, %r5279, %r5279, 16;
	xor.b32  	%r5281, %r5271, %r5230;
	xor.b32  	%r5282, %r5281, %r5232;
	xor.b32  	%r5283, %r5282, %r5225;
	xor.b32  	%r5284, %r5283, %r5233;
	xor.b32  	%r5285, %r5284, %r5227;
	xor.b32  	%r5286, %r5285, %r5235;
	xor.b32  	%r9605, %r5286, %r5280;
	xor.b32  	%r5287, %r5219, %r5217;
	xor.b32  	%r5288, %r5287, %r5221;
	xor.b32  	%r5289, %r5231, %r5287;
	xor.b32  	%r5290, %r5289, %r5223;
	xor.b32  	%r5291, %r5290, %r5225;
	xor.b32  	%r5292, %r5291, %r5234;
	xor.b32  	%r5293, %r5292, %r5229;
	xor.b32  	%r5294, %r5293, %r5235;
	xor.b32  	%r5295, %r5294, %r5236;
	shf.l.wrap.b32 	%r5296, %r5295, %r5295, 16;
	xor.b32  	%r5297, %r5288, %r5231;
	xor.b32  	%r5298, %r5297, %r5225;
	xor.b32  	%r5299, %r5298, %r5233;
	xor.b32  	%r5300, %r5299, %r5234;
	xor.b32  	%r5301, %r5300, %r5235;
	xor.b32  	%r5302, %r5301, %r5236;
	xor.b32  	%r5303, %r5302, %r5237;
	xor.b32  	%r9604, %r5303, %r5296;
	xor.b32  	%r5304, %r5221, %r5219;
	xor.b32  	%r5305, %r5304, %r5223;
	xor.b32  	%r5306, %r5232, %r5304;
	xor.b32  	%r5307, %r5306, %r5225;
	xor.b32  	%r5308, %r5307, %r5227;
	xor.b32  	%r5309, %r5308, %r5235;
	xor.b32  	%r5310, %r5309, %r5236;
	xor.b32  	%r5311, %r5310, %r5237;
	shf.l.wrap.b32 	%r5312, %r5311, %r5311, 16;
	xor.b32  	%r5313, %r5305, %r5232;
	xor.b32  	%r5314, %r5313, %r5227;
	xor.b32  	%r5315, %r5314, %r5234;
	xor.b32  	%r5316, %r5315, %r5235;
	xor.b32  	%r5317, %r5316, %r5236;
	xor.b32  	%r5318, %r5317, %r5237;
	xor.b32  	%r9603, %r5318, %r5312;
	xor.b32  	%r5319, %r5223, %r5221;
	xor.b32  	%r5320, %r5319, %r5225;
	xor.b32  	%r5321, %r5233, %r5319;
	xor.b32  	%r5322, %r5321, %r5227;
	xor.b32  	%r5323, %r5322, %r5229;
	xor.b32  	%r5324, %r5323, %r5236;
	xor.b32  	%r5325, %r5324, %r5237;
	shf.l.wrap.b32 	%r5326, %r5325, %r5325, 16;
	xor.b32  	%r5327, %r5320, %r5233;
	xor.b32  	%r5328, %r5327, %r5229;
	xor.b32  	%r5329, %r5328, %r5235;
	xor.b32  	%r5330, %r5329, %r5236;
	xor.b32  	%r5331, %r5330, %r5237;
	xor.b32  	%r9602, %r5331, %r5326;
	xor.b32  	%r5332, %r5225, %r5223;
	xor.b32  	%r5333, %r5332, %r5227;
	xor.b32  	%r5334, %r5333, %r5234;
	xor.b32  	%r5335, %r5334, %r5236;
	xor.b32  	%r5336, %r5335, %r5237;
	xor.b32  	%r5337, %r5234, %r5332;
	xor.b32  	%r5338, %r5337, %r5229;
	xor.b32  	%r5339, %r5338, %r5237;
	shf.l.wrap.b32 	%r5340, %r5339, %r5339, 16;
	xor.b32  	%r9601, %r5336, %r5340;
	add.s32 	%r9600, %r9600, -1;
	setp.ne.s32 	%p30, %r9600, 0;
	@%p30 bra 	$L__BB3_37;

$L__BB3_38:
	ld.param.u64 	%rd98, [Generate2010key_param_2];
	add.s64 	%rd97, %rd98, 32;
	ld.const.u32 	%r9557, [%rd97+-8];
	shr.u32 	%r9556, %r9557, 3;
	setp.eq.s32 	%p114, %r9556, 16;
	mov.b32 	%r9555, {%rs35, %rs36};
	mov.b32 	%r9554, {%rs33, %rs34};
	ld.const.u8 	%rs148, [%rd97+-17];
	ld.const.u8 	%rs147, [%rd97+-18];
	ld.const.u8 	%rs146, [%rd97+-19];
	ld.const.u8 	%rs145, [%rd97+-20];
	ld.const.u8 	%rs144, [%rd97+-21];
	ld.const.u8 	%rs143, [%rd97+-22];
	ld.const.u8 	%rs142, [%rd97+-23];
	ld.const.u8 	%rs141, [%rd97+-24];
	shr.u16 	%rs140, %rs36, 8;
	shr.u16 	%rs139, %rs35, 8;
	shr.u16 	%rs138, %rs34, 8;
	shr.u16 	%rs137, %rs33, 8;
	ld.param.u64 	%rd96, [Generate2010key_param_3];
	shl.b32 	%r5343, %r9608, 2;
	and.b32  	%r5344, %r5343, 64512;
	and.b32  	%r5345, %r9608, 255;
	or.b32  	%r5346, %r5344, %r5345;
	and.b32  	%r5347, %r9608, 49152;
	shr.u32 	%r5348, %r5347, 6;
	or.b32  	%r5349, %r5346, %r5348;
	shl.b32 	%r5350, %r9608, 4;
	and.b32  	%r5351, %r5350, 15728640;
	or.b32  	%r5352, %r5349, %r5351;
	and.b32  	%r5353, %r9608, 15728640;
	shr.u32 	%r5354, %r5353, 4;
	or.b32  	%r5355, %r5352, %r5354;
	shl.b32 	%r5356, %r9608, 6;
	and.b32  	%r5357, %r5356, -1073741824;
	or.b32  	%r5358, %r5355, %r5357;
	and.b32  	%r5359, %r9608, -67108864;
	shr.u32 	%r5360, %r5359, 2;
	or.b32  	%r5361, %r5358, %r5360;
	shl.b32 	%r5362, %r9607, 2;
	and.b32  	%r5363, %r5362, 64512;
	and.b32  	%r5364, %r9607, 255;
	or.b32  	%r5365, %r5363, %r5364;
	and.b32  	%r5366, %r9607, 49152;
	shr.u32 	%r5367, %r5366, 6;
	or.b32  	%r5368, %r5365, %r5367;
	shl.b32 	%r5369, %r9607, 4;
	and.b32  	%r5370, %r5369, 15728640;
	or.b32  	%r5371, %r5368, %r5370;
	and.b32  	%r5372, %r9607, 15728640;
	shr.u32 	%r5373, %r5372, 4;
	or.b32  	%r5374, %r5371, %r5373;
	shl.b32 	%r5375, %r9607, 6;
	and.b32  	%r5376, %r5375, -1073741824;
	or.b32  	%r5377, %r5374, %r5376;
	and.b32  	%r5378, %r9607, -67108864;
	shr.u32 	%r5379, %r5378, 2;
	or.b32  	%r5380, %r5377, %r5379;
	shl.b32 	%r5381, %r9606, 2;
	and.b32  	%r5382, %r5381, 64512;
	and.b32  	%r5383, %r9606, 255;
	or.b32  	%r5384, %r5382, %r5383;
	and.b32  	%r5385, %r9606, 49152;
	shr.u32 	%r5386, %r5385, 6;
	or.b32  	%r5387, %r5384, %r5386;
	shl.b32 	%r5388, %r9606, 4;
	and.b32  	%r5389, %r5388, 15728640;
	or.b32  	%r5390, %r5387, %r5389;
	and.b32  	%r5391, %r9606, 15728640;
	shr.u32 	%r5392, %r5391, 4;
	or.b32  	%r5393, %r5390, %r5392;
	shl.b32 	%r5394, %r9606, 6;
	and.b32  	%r5395, %r5394, -1073741824;
	or.b32  	%r5396, %r5393, %r5395;
	and.b32  	%r5397, %r9606, -67108864;
	shr.u32 	%r5398, %r5397, 2;
	or.b32  	%r5399, %r5396, %r5398;
	shl.b32 	%r5400, %r9605, 2;
	and.b32  	%r5401, %r5400, 64512;
	and.b32  	%r5402, %r9605, 255;
	or.b32  	%r5403, %r5401, %r5402;
	and.b32  	%r5404, %r9605, 49152;
	shr.u32 	%r5405, %r5404, 6;
	or.b32  	%r5406, %r5403, %r5405;
	shl.b32 	%r5407, %r9605, 4;
	and.b32  	%r5408, %r5407, 15728640;
	or.b32  	%r5409, %r5406, %r5408;
	and.b32  	%r5410, %r9605, 15728640;
	shr.u32 	%r5411, %r5410, 4;
	or.b32  	%r5412, %r5409, %r5411;
	shl.b32 	%r5413, %r9605, 6;
	and.b32  	%r5414, %r5413, -1073741824;
	or.b32  	%r5415, %r5412, %r5414;
	and.b32  	%r5416, %r9605, -67108864;
	shr.u32 	%r5417, %r5416, 2;
	or.b32  	%r5418, %r5415, %r5417;
	shl.b32 	%r5419, %r9604, 2;
	and.b32  	%r5420, %r5419, 64512;
	and.b32  	%r5421, %r9604, 255;
	or.b32  	%r5422, %r5420, %r5421;
	and.b32  	%r5423, %r9604, 49152;
	shr.u32 	%r5424, %r5423, 6;
	or.b32  	%r5425, %r5422, %r5424;
	shl.b32 	%r5426, %r9604, 4;
	and.b32  	%r5427, %r5426, 15728640;
	or.b32  	%r5428, %r5425, %r5427;
	and.b32  	%r5429, %r9604, 15728640;
	shr.u32 	%r5430, %r5429, 4;
	or.b32  	%r5431, %r5428, %r5430;
	shl.b32 	%r5432, %r9604, 6;
	and.b32  	%r5433, %r5432, -1073741824;
	or.b32  	%r5434, %r5431, %r5433;
	and.b32  	%r5435, %r9604, -67108864;
	shr.u32 	%r5436, %r5435, 2;
	or.b32  	%r5437, %r5434, %r5436;
	shl.b32 	%r5438, %r9603, 2;
	and.b32  	%r5439, %r5438, 64512;
	and.b32  	%r5440, %r9603, 255;
	or.b32  	%r5441, %r5439, %r5440;
	and.b32  	%r5442, %r9603, 49152;
	shr.u32 	%r5443, %r5442, 6;
	or.b32  	%r5444, %r5441, %r5443;
	shl.b32 	%r5445, %r9603, 4;
	and.b32  	%r5446, %r5445, 15728640;
	or.b32  	%r5447, %r5444, %r5446;
	and.b32  	%r5448, %r9603, 15728640;
	shr.u32 	%r5449, %r5448, 4;
	or.b32  	%r5450, %r5447, %r5449;
	shl.b32 	%r5451, %r9603, 6;
	and.b32  	%r5452, %r5451, -1073741824;
	or.b32  	%r5453, %r5450, %r5452;
	and.b32  	%r5454, %r9603, -67108864;
	shr.u32 	%r5455, %r5454, 2;
	or.b32  	%r5456, %r5453, %r5455;
	shl.b32 	%r5457, %r9602, 2;
	and.b32  	%r5458, %r5457, 64512;
	and.b32  	%r5459, %r9602, 255;
	or.b32  	%r5460, %r5458, %r5459;
	and.b32  	%r5461, %r9602, 49152;
	shr.u32 	%r5462, %r5461, 6;
	or.b32  	%r5463, %r5460, %r5462;
	shl.b32 	%r5464, %r9602, 4;
	and.b32  	%r5465, %r5464, 15728640;
	or.b32  	%r5466, %r5463, %r5465;
	and.b32  	%r5467, %r9602, 15728640;
	shr.u32 	%r5468, %r5467, 4;
	or.b32  	%r5469, %r5466, %r5468;
	shl.b32 	%r5470, %r9602, 6;
	and.b32  	%r5471, %r5470, -1073741824;
	or.b32  	%r5472, %r5469, %r5471;
	and.b32  	%r5473, %r9602, -67108864;
	shr.u32 	%r5474, %r5473, 2;
	or.b32  	%r5475, %r5472, %r5474;
	shl.b32 	%r5476, %r9601, 2;
	and.b32  	%r5477, %r5476, 64512;
	and.b32  	%r5478, %r9601, 255;
	or.b32  	%r5479, %r5477, %r5478;
	and.b32  	%r5480, %r9601, 49152;
	shr.u32 	%r5481, %r5480, 6;
	or.b32  	%r5482, %r5479, %r5481;
	shl.b32 	%r5483, %r9601, 4;
	and.b32  	%r5484, %r5483, 15728640;
	or.b32  	%r5485, %r5482, %r5484;
	and.b32  	%r5486, %r9601, 15728640;
	shr.u32 	%r5487, %r5486, 4;
	or.b32  	%r5488, %r5485, %r5487;
	shl.b32 	%r5489, %r9601, 6;
	and.b32  	%r5490, %r5489, -1073741824;
	or.b32  	%r5491, %r5488, %r5490;
	and.b32  	%r5492, %r9601, -67108864;
	shr.u32 	%r5493, %r5492, 2;
	or.b32  	%r5494, %r5491, %r5493;
	xor.b32  	%r5495, %r5418, %r5361;
	xor.b32  	%r5496, %r5437, %r5380;
	not.b32 	%r5497, %r5456;
	not.b32 	%r5498, %r5475;
	not.b32 	%r5499, %r5496;
	xor.b32  	%r5500, %r5499, %r5498;
	not.b32 	%r5501, %r5495;
	xor.b32  	%r5502, %r5501, %r5497;
	xor.b32  	%r5503, %r5437, %r5399;
	xor.b32  	%r5504, %r5503, %r5494;
	xor.b32  	%r5505, %r5418, %r5380;
	xor.b32  	%r5506, %r5505, %r5475;
	xor.b32  	%r5507, %r5399, %r5361;
	xor.b32  	%r5508, %r5507, %r5456;
	xor.b32  	%r5509, %r5499, %r5494;
	xor.b32  	%r5510, %r5501, %r5498;
	xor.b32  	%r5511, %r5399, %r5497;
	xor.b32  	%r5512, %r5511, %r5494;
	xor.b32  	%r5513, %r5509, %r5506;
	xor.b32  	%r5514, %r5501, %r5499;
	xor.b32  	%r5515, %r5506, %r5500;
	xor.b32  	%r5516, %r5494, %r5498;
	xor.b32  	%r5517, %r5504, %r5502;
	xor.b32  	%r5518, %r5512, %r5517;
	xor.b32  	%r5519, %r5518, %r5506;
	xor.b32  	%r5520, %r5514, %r5513;
	xor.b32  	%r5521, %r5518, %r5500;
	xor.b32  	%r5522, %r5518, %r5510;
	xor.b32  	%r5523, %r5522, %r5516;
	xor.b32  	%r5524, %r5520, %r5508;
	xor.b32  	%r5525, %r5524, %r5509;
	xor.b32  	%r5526, %r5524, %r5502;
	xor.b32  	%r5527, %r5525, %r5512;
	xor.b32  	%r5528, %r5525, %r5517;
	xor.b32  	%r5529, %r5526, %r5515;
	xor.b32  	%r5530, %r5529, %r5512;
	xor.b32  	%r5531, %r5528, %r5529;
	xor.b32  	%r5532, %r5529, %r5517;
	and.b32  	%r5533, %r5525, %r5520;
	and.b32  	%r5534, %r5527, %r5523;
	and.b32  	%r5535, %r5519, %r5512;
	and.b32  	%r5536, %r5532, %r5514;
	and.b32  	%r5537, %r5522, %r5518;
	and.b32  	%r5538, %r5530, %r5521;
	and.b32  	%r5539, %r5529, %r5515;
	and.b32  	%r5540, %r5531, %r5513;
	xor.b32  	%r5541, %r5540, %r5539;
	and.b32  	%r5542, %r5528, %r5516;
	xor.b32  	%r5543, %r5542, %r5539;
	xor.b32  	%r5544, %r5533, %r5526;
	xor.b32  	%r5545, %r5544, %r5534;
	xor.b32  	%r5546, %r5545, %r5541;
	xor.b32  	%r5547, %r5535, %r5516;
	xor.b32  	%r5548, %r5547, %r5528;
	xor.b32  	%r5549, %r5548, %r5533;
	xor.b32  	%r5550, %r5549, %r5543;
	xor.b32  	%r5551, %r5537, %r5514;
	xor.b32  	%r5552, %r5551, %r5532;
	xor.b32  	%r5553, %r5552, %r5536;
	xor.b32  	%r5554, %r5553, %r5541;
	xor.b32  	%r5555, %r5532, %r5500;
	xor.b32  	%r5556, %r5555, %r5536;
	xor.b32  	%r5557, %r5556, %r5538;
	xor.b32  	%r5558, %r5557, %r5543;
	xor.b32  	%r5559, %r5546, %r5550;
	and.b32  	%r5560, %r5546, %r5554;
	xor.b32  	%r5561, %r5560, %r5558;
	and.b32  	%r5562, %r5561, %r5559;
	xor.b32  	%r5563, %r5562, %r5550;
	xor.b32  	%r5564, %r5554, %r5558;
	xor.b32  	%r5565, %r5560, %r5550;
	and.b32  	%r5566, %r5565, %r5564;
	xor.b32  	%r5567, %r5566, %r5558;
	xor.b32  	%r5568, %r5567, %r5554;
	xor.b32  	%r5569, %r5566, %r5560;
	and.b32  	%r5570, %r5569, %r5558;
	xor.b32  	%r5571, %r5568, %r5570;
	xor.b32  	%r5572, %r5570, %r5561;
	and.b32  	%r5573, %r5572, %r5563;
	xor.b32  	%r5574, %r5573, %r5559;
	xor.b32  	%r5575, %r5574, %r5571;
	xor.b32  	%r5576, %r5563, %r5567;
	xor.b32  	%r5577, %r5574, %r5563;
	xor.b32  	%r5578, %r5570, %r5554;
	xor.b32  	%r5579, %r5575, %r5576;
	and.b32  	%r5580, %r5578, %r5525;
	and.b32  	%r5581, %r5571, %r5527;
	and.b32  	%r5582, %r5567, %r5512;
	and.b32  	%r5583, %r5577, %r5532;
	and.b32  	%r5584, %r5574, %r5518;
	and.b32  	%r5585, %r5563, %r5530;
	and.b32  	%r5586, %r5576, %r5529;
	and.b32  	%r5587, %r5579, %r5531;
	and.b32  	%r5588, %r5575, %r5528;
	and.b32  	%r5589, %r5578, %r5520;
	and.b32  	%r5590, %r5571, %r5523;
	and.b32  	%r5591, %r5567, %r5519;
	and.b32  	%r5592, %r5577, %r5514;
	and.b32  	%r5593, %r5574, %r5522;
	and.b32  	%r5594, %r5563, %r5521;
	and.b32  	%r5595, %r5576, %r5515;
	and.b32  	%r5596, %r5579, %r5513;
	and.b32  	%r5597, %r5575, %r5516;
	xor.b32  	%r5598, %r5596, %r5595;
	xor.b32  	%r5599, %r5590, %r5591;
	xor.b32  	%r5600, %r5593, %r5585;
	xor.b32  	%r5601, %r5589, %r5590;
	xor.b32  	%r5602, %r5592, %r5582;
	xor.b32  	%r5603, %r5582, %r5585;
	xor.b32  	%r5604, %r5587, %r5588;
	xor.b32  	%r5605, %r5583, %r5580;
	xor.b32  	%r5606, %r5592, %r5600;
	xor.b32  	%r5607, %r5602, %r5605;
	xor.b32  	%r5608, %r5598, %r5584;
	xor.b32  	%r5609, %r5583, %r5586;
	xor.b32  	%r5610, %r5609, %r5587;
	xor.b32  	%r5611, %r5598, %r5607;
	xor.b32  	%r5612, %r5607, %r5594;
	xor.b32  	%r5613, %r5604, %r5608;
	xor.b32  	%r5614, %r5601, %r5608;
	xor.b32  	%r5615, %r5610, %r5584;
	xor.b32  	%r5616, %r5612, %r5613;
	xor.b32  	%r5617, %r5614, %r5581;
	xor.b32  	%r5618, %r5614, %r5610;
	xor.b32  	%r5619, %r5617, %r5605;
	xor.b32  	%r5620, %r5613, %r5606;
	xor.b32  	%r5621, %r5619, %r5615;
	xor.b32  	%r5622, %r5620, %r5621;
	xor.b32  	%r5623, %r5599, %r5616;
	xor.b32  	%r5624, %r5596, %r5597;
	xor.b32  	%r5625, %r5624, %r5615;
	xor.b32  	%r5626, %r5611, %r5600;
	xor.b32  	%r5627, %r5625, %r5616;
	xor.b32  	%r5628, %r5626, %r5627;
	xor.b32  	%r5629, %r5628, %r5623;
	xor.b32  	%r5630, %r5603, %r5617;
	xor.b32  	%r5631, %r5622, %r5630;
	xor.b32  	%r5632, %r5615, %r5620;
	xor.b32  	%r5633, %r5628, %r5630;
	xor.b32  	%r5634, %r5618, %r5619;
	xor.b32  	%r5635, %r5634, %r5623;
	ld.local.u32 	%r5636, [%rd4+252];
	xor.b32  	%r5637, %r5629, %r5636;
	xor.b32  	%r5638, %r5634, %r5620;
	xor.b32  	%r5639, %r5626, %r5621;
	xor.b32  	%r5640, %r5639, %r5630;
	xor.b32  	%r5641, %r5618, %r5627;
	xor.b32  	%r5642, %r5641, %r5623;
	ld.local.u32 	%r5643, [%rd4+240];
	xor.b32  	%r5644, %r5642, %r5643;
	ld.local.u32 	%r5645, [%rd4+244];
	xor.b32  	%r5646, %r5640, %r5645;
	ld.local.u32 	%r5647, [%rd4+248];
	xor.b32  	%r5648, %r5638, %r5647;
	ld.local.u32 	%r5649, [%rd4+256];
	xor.b32  	%r5650, %r5631, %r5649;
	ld.local.u32 	%r5651, [%rd4+260];
	xor.b32  	%r5652, %r5635, %r5651;
	ld.local.u32 	%r5653, [%rd4+264];
	xor.b32  	%r5654, %r5633, %r5653;
	ld.local.u32 	%r5655, [%rd4+268];
	xor.b32  	%r5656, %r5632, %r5655;
	and.b32  	%r5657, %r5644, 1431655765;
	shl.b32 	%r5658, %r5646, 1;
	and.b32  	%r5659, %r5658, -1431655766;
	or.b32  	%r5660, %r5659, %r5657;
	and.b32  	%r5661, %r5648, 1431655765;
	shl.b32 	%r5662, %r5637, 1;
	and.b32  	%r5663, %r5662, -1431655766;
	or.b32  	%r5664, %r5663, %r5661;
	and.b32  	%r5665, %r5650, 1431655765;
	shl.b32 	%r5666, %r5652, 1;
	and.b32  	%r5667, %r5666, -1431655766;
	or.b32  	%r5668, %r5667, %r5665;
	and.b32  	%r5669, %r5654, 1431655765;
	shl.b32 	%r5670, %r5656, 1;
	and.b32  	%r5671, %r5670, -1431655766;
	or.b32  	%r5672, %r5671, %r5669;
	and.b32  	%r5673, %r5660, 858993459;
	shl.b32 	%r5674, %r5664, 2;
	and.b32  	%r5675, %r5674, -858993460;
	or.b32  	%r5676, %r5675, %r5673;
	and.b32  	%r5677, %r5660, -858993460;
	shr.u32 	%r5678, %r5677, 2;
	and.b32  	%r5679, %r5664, -858993460;
	or.b32  	%r5680, %r5678, %r5679;
	and.b32  	%r5681, %r5668, 858993459;
	shl.b32 	%r5682, %r5672, 2;
	and.b32  	%r5683, %r5682, -858993460;
	or.b32  	%r5684, %r5683, %r5681;
	and.b32  	%r5685, %r5668, -858993460;
	shr.u32 	%r5686, %r5685, 2;
	and.b32  	%r5687, %r5672, -858993460;
	or.b32  	%r5688, %r5686, %r5687;
	and.b32  	%r5689, %r5676, 252645135;
	shl.b32 	%r5690, %r5684, 4;
	and.b32  	%r5691, %r5690, -252645136;
	or.b32  	%r5692, %r5691, %r5689;
	and.b32  	%r5693, %r5676, -252645136;
	shr.u32 	%r5694, %r5693, 4;
	and.b32  	%r5695, %r5684, -252645136;
	or.b32  	%r5696, %r5694, %r5695;
	and.b32  	%r5697, %r5680, 252645135;
	shl.b32 	%r5698, %r5688, 4;
	and.b32  	%r5699, %r5698, -252645136;
	or.b32  	%r5700, %r5699, %r5697;
	and.b32  	%r5701, %r5680, -252645136;
	shr.u32 	%r5702, %r5701, 4;
	and.b32  	%r5703, %r5688, -252645136;
	or.b32  	%r5704, %r5702, %r5703;
	cvt.u16.u32 	%rs37, %r5692;
	shr.u32 	%r5705, %r5692, 8;
	cvt.u16.u32 	%rs38, %r5705;
	shr.u32 	%r5706, %r5692, 16;
	cvt.u16.u32 	%rs39, %r5706;
	shr.u32 	%r5707, %r5692, 24;
	cvt.u16.u32 	%rs40, %r5707;
	cvt.u16.u32 	%rs41, %r5700;
	shr.u32 	%r5708, %r5700, 8;
	cvt.u16.u32 	%rs42, %r5708;
	shr.u32 	%r5709, %r5700, 16;
	cvt.u16.u32 	%rs43, %r5709;
	shr.u32 	%r5710, %r5700, 24;
	cvt.u16.u32 	%rs44, %r5710;
	cvt.u16.u32 	%rs45, %r5696;
	shr.u32 	%r5711, %r5696, 8;
	cvt.u16.u32 	%rs46, %r5711;
	shr.u32 	%r5712, %r5696, 16;
	cvt.u16.u32 	%rs47, %r5712;
	shr.u32 	%r5713, %r5696, 24;
	cvt.u16.u32 	%rs48, %r5713;
	cvt.u16.u32 	%rs49, %r5704;
	shr.u32 	%r5714, %r5704, 8;
	cvt.u16.u32 	%rs50, %r5714;
	shr.u32 	%r5715, %r5704, 16;
	cvt.u16.u32 	%rs51, %r5715;
	shr.u32 	%r5716, %r5704, 24;
	cvt.u16.u32 	%rs52, %r5716;
	mov.u32 	%r5341, 0;
	xor.b16  	%rs53, %rs33, %rs37;
	cvt.u32.u16 	%r5717, %rs53;
	and.b32  	%r5718, %r5717, 255;
	xor.b16  	%rs54, %rs137, %rs38;
	cvt.u32.u16 	%r5719, %rs54;
	prmt.b32 	%r5720, %r5719, %r5718, 30212;
	xor.b16  	%rs55, %rs34, %rs39;
	cvt.u32.u16 	%r5721, %rs55;
	prmt.b32 	%r5722, %r5721, %r5720, 28756;
	xor.b16  	%rs56, %rs138, %rs40;
	cvt.u32.u16 	%r5723, %rs56;
	prmt.b32 	%r111, %r5723, %r5722, 1620;
	xor.b16  	%rs57, %rs35, %rs41;
	cvt.u32.u16 	%r5724, %rs57;
	and.b32  	%r5725, %r5724, 255;
	xor.b16  	%rs58, %rs139, %rs42;
	cvt.u32.u16 	%r5726, %rs58;
	prmt.b32 	%r5727, %r5726, %r5725, 30212;
	xor.b16  	%rs59, %rs36, %rs43;
	cvt.u32.u16 	%r5728, %rs59;
	prmt.b32 	%r5729, %r5728, %r5727, 28756;
	xor.b16  	%rs60, %rs140, %rs44;
	cvt.u32.u16 	%r5730, %rs60;
	prmt.b32 	%r112, %r5730, %r5729, 1620;
	xor.b16  	%rs61, %rs141, %rs45;
	cvt.u32.u16 	%r5731, %rs61;
	and.b32  	%r5732, %r5731, 255;
	xor.b16  	%rs62, %rs142, %rs46;
	cvt.u32.u16 	%r5733, %rs62;
	prmt.b32 	%r5734, %r5733, %r5732, 30212;
	xor.b16  	%rs63, %rs143, %rs47;
	cvt.u32.u16 	%r5735, %rs63;
	prmt.b32 	%r5736, %r5735, %r5734, 28756;
	xor.b16  	%rs64, %rs144, %rs48;
	cvt.u32.u16 	%r5737, %rs64;
	prmt.b32 	%r113, %r5737, %r5736, 1620;
	xor.b16  	%rs65, %rs145, %rs49;
	cvt.u32.u16 	%r5738, %rs65;
	and.b32  	%r5739, %r5738, 255;
	xor.b16  	%rs66, %rs146, %rs50;
	cvt.u32.u16 	%r5740, %rs66;
	prmt.b32 	%r5741, %r5740, %r5739, 30212;
	xor.b16  	%rs67, %rs147, %rs51;
	cvt.u32.u16 	%r5742, %rs67;
	prmt.b32 	%r5743, %r5742, %r5741, 28756;
	xor.b16  	%rs68, %rs148, %rs52;
	cvt.u32.u16 	%r5744, %rs68;
	prmt.b32 	%r114, %r5744, %r5743, 1620;
	add.s64 	%rd112, %rd96, 16;
	st.local.v4.u32 	[%rd6], {%r9554, %r9555, %r39, %r40};
	mov.u32 	%r9609, 10;
	@%p114 bra 	$L__BB3_43;

	setp.eq.s32 	%p32, %r41, 24;
	@%p32 bra 	$L__BB3_42;

	setp.ne.s32 	%p33, %r41, 32;
	mov.u32 	%r9609, %r5341;
	@%p33 bra 	$L__BB3_57;

	mov.u32 	%r9609, 14;
	bra.uni 	$L__BB3_43;

$L__BB3_42:
	mov.u32 	%r9609, 12;

$L__BB3_43:
	shl.b32 	%r5747, %r9609, 2;
	add.s32 	%r116, %r5747, 4;
	setp.eq.s32 	%p34, %r42, 0;
	@%p34 bra 	$L__BB3_50;

	add.s64 	%rd24, %rd1, 20;
	add.s32 	%r5749, %r42, -1;
	and.b32  	%r9614, %r42, 3;
	setp.lt.u32 	%p35, %r5749, 3;
	mov.u32 	%r9612, 0;
	@%p35 bra 	$L__BB3_47;

	sub.s32 	%r9611, %r42, %r9614;
	mov.u32 	%r9612, 0;

$L__BB3_46:
	shl.b32 	%r5751, %r9612, 2;
	cvt.s64.s32 	%rd76, %r5751;
	add.s64 	%rd77, %rd24, %rd76;
	ld.local.u8 	%r5752, [%rd77];
	ld.local.u8 	%r5753, [%rd77+1];
	prmt.b32 	%r5754, %r5753, %r5752, 30212;
	ld.local.u8 	%r5755, [%rd77+2];
	prmt.b32 	%r5756, %r5755, %r5754, 28756;
	ld.local.u8 	%r5757, [%rd77+3];
	mul.wide.s32 	%rd78, %r9612, 4;
	add.s64 	%rd79, %rd5, %rd78;
	prmt.b32 	%r5758, %r5757, %r5756, 1620;
	ld.local.u32 	%r5759, [%rd77+12];
	ld.local.u32 	%r5760, [%rd77+8];
	ld.local.u32 	%r5761, [%rd77+4];
	st.local.v4.u32 	[%rd79], {%r5758, %r5761, %r5760, %r5759};
	add.s32 	%r9612, %r9612, 4;
	add.s32 	%r9611, %r9611, -4;
	setp.ne.s32 	%p36, %r9611, 0;
	@%p36 bra 	$L__BB3_46;

$L__BB3_47:
	setp.eq.s32 	%p37, %r9614, 0;
	@%p37 bra 	$L__BB3_50;

	mul.wide.s32 	%rd80, %r9612, 4;
	add.s64 	%rd106, %rd5, %rd80;
	shl.b32 	%r9613, %r9612, 2;

$L__BB3_49:
	.pragma "nounroll";
	cvt.s64.s32 	%rd81, %r9613;
	add.s64 	%rd82, %rd24, %rd81;
	ld.local.u32 	%r5762, [%rd82];
	st.local.u32 	[%rd106], %r5762;
	add.s64 	%rd106, %rd106, 4;
	add.s32 	%r9613, %r9613, 4;
	add.s32 	%r9614, %r9614, -1;
	setp.ne.s32 	%p38, %r9614, 0;
	@%p38 bra 	$L__BB3_49;

$L__BB3_50:
	setp.ge.u32 	%p39, %r42, %r116;
	@%p39 bra 	$L__BB3_57;

	ld.local.u32 	%r9619, [%rd10];
	shr.u64 	%rd83, %rd9, 3;
	and.b64  	%rd28, %rd83, 536870908;
	mov.u32 	%r9616, 0;
	mov.u64 	%rd107, %rd5;
	mov.u32 	%r9617, %r42;
	mov.u32 	%r9618, %r9616;

$L__BB3_52:
	setp.eq.s32 	%p40, %r9618, 0;
	@%p40 bra 	$L__BB3_55;

	cvt.u32.u64 	%r5765, %rd9;
	setp.lt.u32 	%p41, %r5765, 224;
	setp.ne.s32 	%p42, %r9618, 4;
	or.pred  	%p43, %p41, %p42;
	@%p43 bra 	$L__BB3_56;

	and.b32  	%r5766, %r9619, 1431655765;
	shl.b32 	%r5767, %r9619, 1;
	and.b32  	%r5768, %r5767, -1431655766;
	or.b32  	%r5769, %r5768, %r5766;
	and.b32  	%r5770, %r9619, -1431655766;
	shr.u32 	%r5771, %r5770, 1;
	or.b32  	%r5772, %r5771, %r5770;
	and.b32  	%r5773, %r5769, 858993459;
	shl.b32 	%r5774, %r5769, 2;
	and.b32  	%r5775, %r5774, -858993460;
	or.b32  	%r5776, %r5775, %r5773;
	and.b32  	%r5777, %r5769, -858993460;
	shr.u32 	%r5778, %r5777, 2;
	or.b32  	%r5779, %r5778, %r5777;
	and.b32  	%r5780, %r5772, 858993459;
	shl.b32 	%r5781, %r5772, 2;
	and.b32  	%r5782, %r5781, -858993460;
	or.b32  	%r5783, %r5782, %r5780;
	and.b32  	%r5784, %r5772, -858993460;
	shr.u32 	%r5785, %r5784, 2;
	or.b32  	%r5786, %r5785, %r5784;
	and.b32  	%r5787, %r5776, 252645135;
	shl.b32 	%r5788, %r5776, 4;
	and.b32  	%r5789, %r5788, -252645136;
	or.b32  	%r5790, %r5789, %r5787;
	and.b32  	%r5791, %r5776, -252645136;
	shr.u32 	%r5792, %r5791, 4;
	or.b32  	%r5793, %r5792, %r5791;
	and.b32  	%r5794, %r5783, 252645135;
	shl.b32 	%r5795, %r5783, 4;
	and.b32  	%r5796, %r5795, -252645136;
	or.b32  	%r5797, %r5796, %r5794;
	and.b32  	%r5798, %r5783, -252645136;
	shr.u32 	%r5799, %r5798, 4;
	or.b32  	%r5800, %r5799, %r5798;
	and.b32  	%r5801, %r5779, 252645135;
	shl.b32 	%r5802, %r5779, 4;
	and.b32  	%r5803, %r5802, -252645136;
	or.b32  	%r5804, %r5803, %r5801;
	and.b32  	%r5805, %r5779, -252645136;
	shr.u32 	%r5806, %r5805, 4;
	or.b32  	%r5807, %r5806, %r5805;
	and.b32  	%r5808, %r5786, 252645135;
	shl.b32 	%r5809, %r5786, 4;
	and.b32  	%r5810, %r5809, -252645136;
	or.b32  	%r5811, %r5810, %r5808;
	and.b32  	%r5812, %r5786, -252645136;
	shr.u32 	%r5813, %r5812, 4;
	or.b32  	%r5814, %r5813, %r5812;
	xor.b32  	%r5815, %r5804, %r5793;
	xor.b32  	%r5816, %r5797, %r5814;
	xor.b32  	%r5817, %r5793, %r5814;
	xor.b32  	%r5818, %r5804, %r5814;
	xor.b32  	%r5819, %r5800, %r5807;
	xor.b32  	%r5820, %r5790, %r5819;
	xor.b32  	%r5821, %r5820, %r5793;
	xor.b32  	%r5822, %r5816, %r5815;
	xor.b32  	%r5823, %r5820, %r5814;
	xor.b32  	%r5824, %r5820, %r5797;
	xor.b32  	%r5825, %r5824, %r5818;
	xor.b32  	%r5826, %r5822, %r5811;
	xor.b32  	%r5827, %r5826, %r5804;
	xor.b32  	%r5828, %r5826, %r5807;
	xor.b32  	%r5829, %r5827, %r5790;
	xor.b32  	%r5830, %r5827, %r5819;
	xor.b32  	%r5831, %r5828, %r5817;
	xor.b32  	%r5832, %r5831, %r5790;
	xor.b32  	%r5833, %r5830, %r5831;
	xor.b32  	%r5834, %r5831, %r5819;
	and.b32  	%r5835, %r5827, %r5822;
	and.b32  	%r5836, %r5829, %r5825;
	and.b32  	%r5837, %r5821, %r5790;
	and.b32  	%r5838, %r5834, %r5816;
	and.b32  	%r5839, %r5824, %r5820;
	and.b32  	%r5840, %r5832, %r5823;
	and.b32  	%r5841, %r5831, %r5817;
	and.b32  	%r5842, %r5833, %r5815;
	xor.b32  	%r5843, %r5842, %r5841;
	and.b32  	%r5844, %r5830, %r5818;
	xor.b32  	%r5845, %r5844, %r5841;
	xor.b32  	%r5846, %r5835, %r5828;
	xor.b32  	%r5847, %r5846, %r5836;
	xor.b32  	%r5848, %r5847, %r5843;
	xor.b32  	%r5849, %r5837, %r5818;
	xor.b32  	%r5850, %r5849, %r5830;
	xor.b32  	%r5851, %r5850, %r5835;
	xor.b32  	%r5852, %r5851, %r5845;
	xor.b32  	%r5853, %r5839, %r5816;
	xor.b32  	%r5854, %r5853, %r5834;
	xor.b32  	%r5855, %r5854, %r5838;
	xor.b32  	%r5856, %r5855, %r5843;
	xor.b32  	%r5857, %r5834, %r5814;
	xor.b32  	%r5858, %r5857, %r5838;
	xor.b32  	%r5859, %r5858, %r5840;
	xor.b32  	%r5860, %r5859, %r5845;
	xor.b32  	%r5861, %r5848, %r5852;
	and.b32  	%r5862, %r5848, %r5856;
	xor.b32  	%r5863, %r5862, %r5860;
	and.b32  	%r5864, %r5863, %r5861;
	xor.b32  	%r5865, %r5864, %r5852;
	xor.b32  	%r5866, %r5856, %r5860;
	xor.b32  	%r5867, %r5862, %r5852;
	and.b32  	%r5868, %r5867, %r5866;
	xor.b32  	%r5869, %r5868, %r5860;
	xor.b32  	%r5870, %r5869, %r5856;
	xor.b32  	%r5871, %r5868, %r5862;
	and.b32  	%r5872, %r5871, %r5860;
	xor.b32  	%r5873, %r5870, %r5872;
	xor.b32  	%r5874, %r5872, %r5863;
	and.b32  	%r5875, %r5874, %r5865;
	xor.b32  	%r5876, %r5875, %r5861;
	xor.b32  	%r5877, %r5876, %r5873;
	xor.b32  	%r5878, %r5865, %r5869;
	xor.b32  	%r5879, %r5876, %r5865;
	xor.b32  	%r5880, %r5872, %r5856;
	xor.b32  	%r5881, %r5877, %r5878;
	and.b32  	%r5882, %r5880, %r5827;
	and.b32  	%r5883, %r5873, %r5829;
	and.b32  	%r5884, %r5869, %r5790;
	and.b32  	%r5885, %r5879, %r5834;
	and.b32  	%r5886, %r5876, %r5820;
	and.b32  	%r5887, %r5865, %r5832;
	and.b32  	%r5888, %r5878, %r5831;
	and.b32  	%r5889, %r5881, %r5833;
	and.b32  	%r5890, %r5877, %r5830;
	and.b32  	%r5891, %r5880, %r5822;
	and.b32  	%r5892, %r5873, %r5825;
	and.b32  	%r5893, %r5869, %r5821;
	and.b32  	%r5894, %r5879, %r5816;
	and.b32  	%r5895, %r5876, %r5824;
	and.b32  	%r5896, %r5865, %r5823;
	and.b32  	%r5897, %r5878, %r5817;
	and.b32  	%r5898, %r5881, %r5815;
	and.b32  	%r5899, %r5877, %r5818;
	xor.b32  	%r5900, %r5898, %r5897;
	xor.b32  	%r5901, %r5892, %r5893;
	xor.b32  	%r5902, %r5895, %r5887;
	xor.b32  	%r5903, %r5891, %r5892;
	xor.b32  	%r5904, %r5894, %r5884;
	xor.b32  	%r5905, %r5884, %r5887;
	xor.b32  	%r5906, %r5889, %r5890;
	xor.b32  	%r5907, %r5885, %r5882;
	xor.b32  	%r5908, %r5904, %r5907;
	xor.b32  	%r5909, %r5900, %r5886;
	xor.b32  	%r5910, %r5885, %r5888;
	xor.b32  	%r5911, %r5910, %r5889;
	xor.b32  	%r5912, %r5908, %r5896;
	xor.b32  	%r5913, %r5906, %r5909;
	xor.b32  	%r5914, %r5903, %r5909;
	xor.b32  	%r5915, %r5911, %r5886;
	xor.b32  	%r5916, %r5912, %r5913;
	xor.b32  	%r5917, %r5914, %r5883;
	xor.b32  	%r5918, %r5914, %r5911;
	xor.b32  	%r5919, %r5902, 16843009;
	xor.b32  	%r5920, %r5894, %r5919;
	xor.b32  	%r5921, %r5920, %r5913;
	xor.b32  	%r5922, %r5908, %r5919;
	xor.b32  	%r5923, %r5922, %r5900;
	xor.b32  	%r5924, %r5917, %r5907;
	xor.b32  	%r5925, %r5905, %r5917;
	xor.b32  	%r5926, %r5901, %r5916;
	xor.b32  	%r5927, %r5924, %r5915;
	not.b32 	%r5928, %r5927;
	xor.b32  	%r5929, %r5898, %r5899;
	xor.b32  	%r5930, %r5929, %r5915;
	xor.b32  	%r5931, %r5930, %r5916;
	and.b32  	%r5932, %r5923, 16843009;
	shl.b32 	%r5933, %r5921, 1;
	and.b32  	%r5934, %r5933, 33686018;
	or.b32  	%r5935, %r5934, %r5932;
	and.b32  	%r5936, %r5926, 16843009;
	shl.b32 	%r5937, %r5925, 1;
	and.b32  	%r5938, %r5937, 33686018;
	or.b32  	%r5939, %r5938, %r5936;
	and.b32  	%r5940, %r5924, 16843009;
	shl.b32 	%r5941, %r5931, 1;
	not.b32 	%r5942, %r5941;
	and.b32  	%r5943, %r5942, 33686018;
	or.b32  	%r5944, %r5943, %r5940;
	and.b32  	%r5945, %r5928, 16843009;
	shl.b32 	%r5946, %r5918, 1;
	and.b32  	%r5947, %r5946, 33686018;
	or.b32  	%r5948, %r5947, %r5945;
	shl.b32 	%r5949, %r5939, 2;
	or.b32  	%r5950, %r5949, %r5935;
	shl.b32 	%r5951, %r5948, 2;
	or.b32  	%r5952, %r5951, %r5944;
	shl.b32 	%r5953, %r5952, 4;
	or.b32  	%r9619, %r5953, %r5950;
	bra.uni 	$L__BB3_56;

$L__BB3_55:
	shf.l.wrap.b32 	%r5954, %r9619, %r9619, 24;
	and.b32  	%r5955, %r5954, 1431655765;
	shl.b32 	%r5956, %r5954, 1;
	and.b32  	%r5957, %r5956, -1431655766;
	or.b32  	%r5958, %r5957, %r5955;
	and.b32  	%r5959, %r5954, -1431655766;
	shr.u32 	%r5960, %r5959, 1;
	or.b32  	%r5961, %r5960, %r5959;
	and.b32  	%r5962, %r5958, 858993459;
	shl.b32 	%r5963, %r5958, 2;
	and.b32  	%r5964, %r5963, -858993460;
	or.b32  	%r5965, %r5964, %r5962;
	and.b32  	%r5966, %r5958, -858993460;
	shr.u32 	%r5967, %r5966, 2;
	or.b32  	%r5968, %r5967, %r5966;
	and.b32  	%r5969, %r5961, 858993459;
	shl.b32 	%r5970, %r5961, 2;
	and.b32  	%r5971, %r5970, -858993460;
	or.b32  	%r5972, %r5971, %r5969;
	and.b32  	%r5973, %r5961, -858993460;
	shr.u32 	%r5974, %r5973, 2;
	or.b32  	%r5975, %r5974, %r5973;
	and.b32  	%r5976, %r5965, 252645135;
	shl.b32 	%r5977, %r5965, 4;
	and.b32  	%r5978, %r5977, -252645136;
	or.b32  	%r5979, %r5978, %r5976;
	and.b32  	%r5980, %r5965, -252645136;
	shr.u32 	%r5981, %r5980, 4;
	or.b32  	%r5982, %r5981, %r5980;
	and.b32  	%r5983, %r5972, 252645135;
	shl.b32 	%r5984, %r5972, 4;
	and.b32  	%r5985, %r5984, -252645136;
	or.b32  	%r5986, %r5985, %r5983;
	and.b32  	%r5987, %r5972, -252645136;
	shr.u32 	%r5988, %r5987, 4;
	or.b32  	%r5989, %r5988, %r5987;
	and.b32  	%r5990, %r5968, 252645135;
	shl.b32 	%r5991, %r5968, 4;
	and.b32  	%r5992, %r5991, -252645136;
	or.b32  	%r5993, %r5992, %r5990;
	and.b32  	%r5994, %r5968, -252645136;
	shr.u32 	%r5995, %r5994, 4;
	or.b32  	%r5996, %r5995, %r5994;
	and.b32  	%r5997, %r5975, 252645135;
	shl.b32 	%r5998, %r5975, 4;
	and.b32  	%r5999, %r5998, -252645136;
	or.b32  	%r6000, %r5999, %r5997;
	and.b32  	%r6001, %r5975, -252645136;
	shr.u32 	%r6002, %r6001, 4;
	or.b32  	%r6003, %r6002, %r6001;
	xor.b32  	%r6004, %r5993, %r5982;
	xor.b32  	%r6005, %r5986, %r6003;
	xor.b32  	%r6006, %r5982, %r6003;
	xor.b32  	%r6007, %r5993, %r6003;
	xor.b32  	%r6008, %r5989, %r5996;
	xor.b32  	%r6009, %r5979, %r6008;
	xor.b32  	%r6010, %r6009, %r5982;
	xor.b32  	%r6011, %r6005, %r6004;
	xor.b32  	%r6012, %r6009, %r6003;
	xor.b32  	%r6013, %r6009, %r5986;
	xor.b32  	%r6014, %r6013, %r6007;
	xor.b32  	%r6015, %r6011, %r6000;
	xor.b32  	%r6016, %r6015, %r5993;
	xor.b32  	%r6017, %r6015, %r5996;
	xor.b32  	%r6018, %r6016, %r5979;
	xor.b32  	%r6019, %r6016, %r6008;
	xor.b32  	%r6020, %r6017, %r6006;
	xor.b32  	%r6021, %r6020, %r5979;
	xor.b32  	%r6022, %r6019, %r6020;
	xor.b32  	%r6023, %r6020, %r6008;
	and.b32  	%r6024, %r6016, %r6011;
	and.b32  	%r6025, %r6018, %r6014;
	and.b32  	%r6026, %r6010, %r5979;
	and.b32  	%r6027, %r6023, %r6005;
	and.b32  	%r6028, %r6013, %r6009;
	and.b32  	%r6029, %r6021, %r6012;
	and.b32  	%r6030, %r6020, %r6006;
	and.b32  	%r6031, %r6022, %r6004;
	xor.b32  	%r6032, %r6031, %r6030;
	and.b32  	%r6033, %r6019, %r6007;
	xor.b32  	%r6034, %r6033, %r6030;
	xor.b32  	%r6035, %r6024, %r6017;
	xor.b32  	%r6036, %r6035, %r6025;
	xor.b32  	%r6037, %r6036, %r6032;
	xor.b32  	%r6038, %r6026, %r6007;
	xor.b32  	%r6039, %r6038, %r6019;
	xor.b32  	%r6040, %r6039, %r6024;
	xor.b32  	%r6041, %r6040, %r6034;
	xor.b32  	%r6042, %r6028, %r6005;
	xor.b32  	%r6043, %r6042, %r6023;
	xor.b32  	%r6044, %r6043, %r6027;
	xor.b32  	%r6045, %r6044, %r6032;
	xor.b32  	%r6046, %r6023, %r6003;
	xor.b32  	%r6047, %r6046, %r6027;
	xor.b32  	%r6048, %r6047, %r6029;
	xor.b32  	%r6049, %r6048, %r6034;
	xor.b32  	%r6050, %r6037, %r6041;
	and.b32  	%r6051, %r6037, %r6045;
	xor.b32  	%r6052, %r6051, %r6049;
	and.b32  	%r6053, %r6052, %r6050;
	xor.b32  	%r6054, %r6053, %r6041;
	xor.b32  	%r6055, %r6045, %r6049;
	xor.b32  	%r6056, %r6051, %r6041;
	and.b32  	%r6057, %r6056, %r6055;
	xor.b32  	%r6058, %r6057, %r6049;
	xor.b32  	%r6059, %r6058, %r6045;
	xor.b32  	%r6060, %r6057, %r6051;
	and.b32  	%r6061, %r6060, %r6049;
	xor.b32  	%r6062, %r6059, %r6061;
	xor.b32  	%r6063, %r6061, %r6052;
	and.b32  	%r6064, %r6063, %r6054;
	xor.b32  	%r6065, %r6064, %r6050;
	xor.b32  	%r6066, %r6065, %r6062;
	xor.b32  	%r6067, %r6054, %r6058;
	xor.b32  	%r6068, %r6065, %r6054;
	xor.b32  	%r6069, %r6061, %r6045;
	xor.b32  	%r6070, %r6066, %r6067;
	and.b32  	%r6071, %r6069, %r6016;
	and.b32  	%r6072, %r6062, %r6018;
	and.b32  	%r6073, %r6058, %r5979;
	and.b32  	%r6074, %r6068, %r6023;
	and.b32  	%r6075, %r6065, %r6009;
	and.b32  	%r6076, %r6054, %r6021;
	and.b32  	%r6077, %r6067, %r6020;
	and.b32  	%r6078, %r6070, %r6022;
	and.b32  	%r6079, %r6066, %r6019;
	and.b32  	%r6080, %r6069, %r6011;
	and.b32  	%r6081, %r6062, %r6014;
	and.b32  	%r6082, %r6058, %r6010;
	and.b32  	%r6083, %r6068, %r6005;
	and.b32  	%r6084, %r6065, %r6013;
	and.b32  	%r6085, %r6054, %r6012;
	and.b32  	%r6086, %r6067, %r6006;
	and.b32  	%r6087, %r6070, %r6004;
	and.b32  	%r6088, %r6066, %r6007;
	xor.b32  	%r6089, %r6087, %r6086;
	xor.b32  	%r6090, %r6081, %r6082;
	xor.b32  	%r6091, %r6084, %r6076;
	xor.b32  	%r6092, %r6080, %r6081;
	xor.b32  	%r6093, %r6083, %r6073;
	xor.b32  	%r6094, %r6073, %r6076;
	xor.b32  	%r6095, %r6078, %r6079;
	xor.b32  	%r6096, %r6074, %r6071;
	xor.b32  	%r6097, %r6093, %r6096;
	xor.b32  	%r6098, %r6089, %r6075;
	xor.b32  	%r6099, %r6074, %r6077;
	xor.b32  	%r6100, %r6099, %r6078;
	xor.b32  	%r6101, %r6097, %r6085;
	xor.b32  	%r6102, %r6095, %r6098;
	xor.b32  	%r6103, %r6092, %r6098;
	xor.b32  	%r6104, %r6100, %r6075;
	xor.b32  	%r6105, %r6101, %r6102;
	xor.b32  	%r6106, %r6103, %r6072;
	xor.b32  	%r6107, %r6103, %r6100;
	xor.b32  	%r6108, %r6091, 16843009;
	xor.b32  	%r6109, %r6083, %r6108;
	xor.b32  	%r6110, %r6109, %r6102;
	xor.b32  	%r6111, %r6097, %r6108;
	xor.b32  	%r6112, %r6111, %r6089;
	xor.b32  	%r6113, %r6106, %r6096;
	xor.b32  	%r6114, %r6094, %r6106;
	xor.b32  	%r6115, %r6090, %r6105;
	xor.b32  	%r6116, %r6113, %r6104;
	not.b32 	%r6117, %r6116;
	xor.b32  	%r6118, %r6087, %r6088;
	xor.b32  	%r6119, %r6118, %r6104;
	xor.b32  	%r6120, %r6119, %r6105;
	and.b32  	%r6121, %r6112, 16843009;
	shl.b32 	%r6122, %r6110, 1;
	and.b32  	%r6123, %r6122, 33686018;
	or.b32  	%r6124, %r6123, %r6121;
	and.b32  	%r6125, %r6115, 16843009;
	shl.b32 	%r6126, %r6114, 1;
	and.b32  	%r6127, %r6126, 33686018;
	or.b32  	%r6128, %r6127, %r6125;
	and.b32  	%r6129, %r6113, 16843009;
	shl.b32 	%r6130, %r6120, 1;
	not.b32 	%r6131, %r6130;
	and.b32  	%r6132, %r6131, 33686018;
	or.b32  	%r6133, %r6132, %r6129;
	and.b32  	%r6134, %r6117, 16843009;
	shl.b32 	%r6135, %r6107, 1;
	and.b32  	%r6136, %r6135, 33686018;
	or.b32  	%r6137, %r6136, %r6134;
	shl.b32 	%r6138, %r6128, 2;
	or.b32  	%r6139, %r6138, %r6124;
	shl.b32 	%r6140, %r6137, 2;
	or.b32  	%r6141, %r6140, %r6133;
	shl.b32 	%r6142, %r6141, 4;
	or.b32  	%r6143, %r6142, %r6139;
	cvt.s64.s32 	%rd84, %r9616;
	mov.u64 	%rd85, aes_keysched_base_$_Rcon;
	add.s64 	%rd86, %rd85, %rd84;
	ld.const.u8 	%r6144, [%rd86];
	xor.b32  	%r9619, %r6143, %r6144;

$L__BB3_56:
	ld.local.u32 	%r6145, [%rd107];
	xor.b32  	%r9619, %r6145, %r9619;
	add.s64 	%rd87, %rd107, %rd28;
	st.local.u32 	[%rd87], %r9619;
	add.s32 	%r6146, %r9618, 1;
	setp.eq.s32 	%p44, %r6146, %r42;
	selp.b32 	%r9618, 0, %r6146, %p44;
	selp.u32 	%r6147, 1, 0, %p44;
	add.s32 	%r9616, %r9616, %r6147;
	add.s64 	%rd107, %rd107, 4;
	add.s32 	%r9617, %r9617, 1;
	setp.lt.u32 	%p45, %r9617, %r116;
	@%p45 bra 	$L__BB3_52;

$L__BB3_57:
	ld.local.v4.u32 	{%r6148, %r6149, %r6150, %r6151}, [%rd5];
	and.b32  	%r6156, %r6148, 1431655765;
	shl.b32 	%r6157, %r6148, 1;
	and.b32  	%r6158, %r6157, -1431655766;
	or.b32  	%r6159, %r6158, %r6156;
	and.b32  	%r6160, %r6148, -1431655766;
	shr.u32 	%r6161, %r6160, 1;
	or.b32  	%r6162, %r6161, %r6160;
	and.b32  	%r6163, %r6149, 1431655765;
	shl.b32 	%r6164, %r6149, 1;
	and.b32  	%r6165, %r6164, -1431655766;
	or.b32  	%r6166, %r6165, %r6163;
	and.b32  	%r6167, %r6149, -1431655766;
	shr.u32 	%r6168, %r6167, 1;
	or.b32  	%r6169, %r6168, %r6167;
	and.b32  	%r6170, %r6150, 1431655765;
	shl.b32 	%r6171, %r6150, 1;
	and.b32  	%r6172, %r6171, -1431655766;
	or.b32  	%r6173, %r6172, %r6170;
	and.b32  	%r6174, %r6150, -1431655766;
	shr.u32 	%r6175, %r6174, 1;
	or.b32  	%r6176, %r6175, %r6174;
	and.b32  	%r6177, %r6151, 1431655765;
	shl.b32 	%r6178, %r6151, 1;
	and.b32  	%r6179, %r6178, -1431655766;
	or.b32  	%r6180, %r6179, %r6177;
	and.b32  	%r6181, %r6151, -1431655766;
	shr.u32 	%r6182, %r6181, 1;
	or.b32  	%r6183, %r6182, %r6181;
	and.b32  	%r6184, %r6159, 858993459;
	shl.b32 	%r6185, %r6166, 2;
	and.b32  	%r6186, %r6185, -858993460;
	or.b32  	%r6187, %r6186, %r6184;
	and.b32  	%r6188, %r6159, -858993460;
	shr.u32 	%r6189, %r6188, 2;
	and.b32  	%r6190, %r6166, -858993460;
	or.b32  	%r6191, %r6189, %r6190;
	and.b32  	%r6192, %r6162, 858993459;
	shl.b32 	%r6193, %r6169, 2;
	and.b32  	%r6194, %r6193, -858993460;
	or.b32  	%r6195, %r6194, %r6192;
	and.b32  	%r6196, %r6162, -858993460;
	shr.u32 	%r6197, %r6196, 2;
	and.b32  	%r6198, %r6169, -858993460;
	or.b32  	%r6199, %r6197, %r6198;
	and.b32  	%r6200, %r6173, 858993459;
	shl.b32 	%r6201, %r6180, 2;
	and.b32  	%r6202, %r6201, -858993460;
	or.b32  	%r6203, %r6202, %r6200;
	and.b32  	%r6204, %r6173, -858993460;
	shr.u32 	%r6205, %r6204, 2;
	and.b32  	%r6206, %r6180, -858993460;
	or.b32  	%r6207, %r6205, %r6206;
	and.b32  	%r6208, %r6176, 858993459;
	shl.b32 	%r6209, %r6183, 2;
	and.b32  	%r6210, %r6209, -858993460;
	or.b32  	%r6211, %r6210, %r6208;
	and.b32  	%r6212, %r6176, -858993460;
	shr.u32 	%r6213, %r6212, 2;
	and.b32  	%r6214, %r6183, -858993460;
	or.b32  	%r6215, %r6213, %r6214;
	and.b32  	%r6216, %r6187, 84215045;
	shl.b32 	%r6217, %r6203, 4;
	and.b32  	%r6218, %r6217, 1347440720;
	and.b32  	%r6219, %r6187, 1347440720;
	and.b32  	%r6220, %r6203, 1347440720;
	and.b32  	%r6221, %r6195, 168430090;
	shl.b32 	%r6222, %r6211, 4;
	and.b32  	%r6223, %r6222, -1600085856;
	and.b32  	%r6224, %r6195, -1600085856;
	and.b32  	%r6225, %r6211, -1600085856;
	and.b32  	%r6226, %r6191, 84215045;
	shl.b32 	%r6227, %r6207, 4;
	and.b32  	%r6228, %r6227, 1347440720;
	and.b32  	%r6229, %r6191, 1347440720;
	and.b32  	%r6230, %r6207, 1347440720;
	and.b32  	%r6231, %r6199, 168430090;
	shl.b32 	%r6232, %r6215, 4;
	and.b32  	%r6233, %r6232, -1600085856;
	and.b32  	%r6234, %r6199, -1600085856;
	and.b32  	%r6235, %r6215, -1600085856;
	or.b32  	%r6236, %r6221, %r6216;
	or.b32  	%r6237, %r6236, %r6218;
	or.b32  	%r6238, %r6237, %r6223;
	st.local.u32 	[%rd4], %r6238;
	or.b32  	%r6239, %r6231, %r6226;
	or.b32  	%r6240, %r6239, %r6228;
	or.b32  	%r6241, %r6240, %r6233;
	st.local.u32 	[%rd4+4], %r6241;
	or.b32  	%r6242, %r6224, %r6219;
	shr.u32 	%r6243, %r6242, 4;
	or.b32  	%r6244, %r6243, %r6220;
	or.b32  	%r6245, %r6244, %r6225;
	st.local.u32 	[%rd4+8], %r6245;
	or.b32  	%r6246, %r6234, %r6229;
	shr.u32 	%r6247, %r6246, 4;
	or.b32  	%r6248, %r6247, %r6230;
	or.b32  	%r6249, %r6248, %r6235;
	st.local.u32 	[%rd4+12], %r6249;
	setp.eq.s32 	%p46, %r9609, 0;
	@%p46 bra 	$L__BB3_65;

	ld.local.v4.u32 	{%r6250, %r6251, %r6252, %r6253}, [%rd5+16];
	and.b32  	%r6258, %r6250, 1431655765;
	shl.b32 	%r6259, %r6250, 1;
	and.b32  	%r6260, %r6259, -1431655766;
	or.b32  	%r6261, %r6260, %r6258;
	and.b32  	%r6262, %r6250, -1431655766;
	shr.u32 	%r6263, %r6262, 1;
	or.b32  	%r6264, %r6263, %r6262;
	and.b32  	%r6265, %r6251, 1431655765;
	shl.b32 	%r6266, %r6251, 1;
	and.b32  	%r6267, %r6266, -1431655766;
	or.b32  	%r6268, %r6267, %r6265;
	and.b32  	%r6269, %r6251, -1431655766;
	shr.u32 	%r6270, %r6269, 1;
	or.b32  	%r6271, %r6270, %r6269;
	and.b32  	%r6272, %r6252, 1431655765;
	shl.b32 	%r6273, %r6252, 1;
	and.b32  	%r6274, %r6273, -1431655766;
	or.b32  	%r6275, %r6274, %r6272;
	and.b32  	%r6276, %r6252, -1431655766;
	shr.u32 	%r6277, %r6276, 1;
	or.b32  	%r6278, %r6277, %r6276;
	and.b32  	%r6279, %r6253, 1431655765;
	shl.b32 	%r6280, %r6253, 1;
	and.b32  	%r6281, %r6280, -1431655766;
	or.b32  	%r6282, %r6281, %r6279;
	and.b32  	%r6283, %r6253, -1431655766;
	shr.u32 	%r6284, %r6283, 1;
	or.b32  	%r6285, %r6284, %r6283;
	and.b32  	%r6286, %r6261, 858993459;
	shl.b32 	%r6287, %r6268, 2;
	and.b32  	%r6288, %r6287, -858993460;
	or.b32  	%r6289, %r6288, %r6286;
	and.b32  	%r6290, %r6261, -858993460;
	shr.u32 	%r6291, %r6290, 2;
	and.b32  	%r6292, %r6268, -858993460;
	or.b32  	%r6293, %r6291, %r6292;
	and.b32  	%r6294, %r6264, 858993459;
	shl.b32 	%r6295, %r6271, 2;
	and.b32  	%r6296, %r6295, -858993460;
	or.b32  	%r6297, %r6296, %r6294;
	and.b32  	%r6298, %r6264, -858993460;
	shr.u32 	%r6299, %r6298, 2;
	and.b32  	%r6300, %r6271, -858993460;
	or.b32  	%r6301, %r6299, %r6300;
	and.b32  	%r6302, %r6275, 858993459;
	shl.b32 	%r6303, %r6282, 2;
	and.b32  	%r6304, %r6303, -858993460;
	or.b32  	%r6305, %r6304, %r6302;
	and.b32  	%r6306, %r6275, -858993460;
	shr.u32 	%r6307, %r6306, 2;
	and.b32  	%r6308, %r6282, -858993460;
	or.b32  	%r6309, %r6307, %r6308;
	and.b32  	%r6310, %r6278, 858993459;
	shl.b32 	%r6311, %r6285, 2;
	and.b32  	%r6312, %r6311, -858993460;
	or.b32  	%r6313, %r6312, %r6310;
	and.b32  	%r6314, %r6278, -858993460;
	shr.u32 	%r6315, %r6314, 2;
	and.b32  	%r6316, %r6285, -858993460;
	or.b32  	%r6317, %r6315, %r6316;
	and.b32  	%r6318, %r6289, 84215045;
	shl.b32 	%r6319, %r6305, 4;
	and.b32  	%r6320, %r6319, 1347440720;
	and.b32  	%r6321, %r6289, 1347440720;
	and.b32  	%r6322, %r6305, 1347440720;
	and.b32  	%r6323, %r6297, 168430090;
	shl.b32 	%r6324, %r6313, 4;
	and.b32  	%r6325, %r6324, -1600085856;
	and.b32  	%r6326, %r6297, -1600085856;
	and.b32  	%r6327, %r6313, -1600085856;
	and.b32  	%r6328, %r6293, 84215045;
	shl.b32 	%r6329, %r6309, 4;
	and.b32  	%r6330, %r6329, 1347440720;
	and.b32  	%r6331, %r6293, 1347440720;
	and.b32  	%r6332, %r6309, 1347440720;
	and.b32  	%r6333, %r6301, 168430090;
	shl.b32 	%r6334, %r6317, 4;
	and.b32  	%r6335, %r6334, -1600085856;
	and.b32  	%r6336, %r6301, -1600085856;
	and.b32  	%r6337, %r6317, -1600085856;
	or.b32  	%r6338, %r6323, %r6318;
	or.b32  	%r6339, %r6338, %r6320;
	or.b32  	%r6340, %r6339, %r6325;
	st.local.u32 	[%rd4+16], %r6340;
	or.b32  	%r6341, %r6333, %r6328;
	or.b32  	%r6342, %r6341, %r6330;
	or.b32  	%r6343, %r6342, %r6335;
	st.local.u32 	[%rd4+20], %r6343;
	or.b32  	%r6344, %r6326, %r6321;
	shr.u32 	%r6345, %r6344, 4;
	or.b32  	%r6346, %r6345, %r6322;
	or.b32  	%r6347, %r6346, %r6327;
	st.local.u32 	[%rd4+24], %r6347;
	or.b32  	%r6348, %r6336, %r6331;
	shr.u32 	%r6349, %r6348, 4;
	or.b32  	%r6350, %r6349, %r6332;
	or.b32  	%r6351, %r6350, %r6337;
	st.local.u32 	[%rd4+28], %r6351;
	ld.local.v4.u32 	{%r6352, %r6353, %r6354, %r6355}, [%rd5+32];
	and.b32  	%r6360, %r6352, 1431655765;
	shl.b32 	%r6361, %r6352, 1;
	and.b32  	%r6362, %r6361, -1431655766;
	or.b32  	%r6363, %r6362, %r6360;
	and.b32  	%r6364, %r6352, -1431655766;
	shr.u32 	%r6365, %r6364, 1;
	or.b32  	%r6366, %r6365, %r6364;
	and.b32  	%r6367, %r6353, 1431655765;
	shl.b32 	%r6368, %r6353, 1;
	and.b32  	%r6369, %r6368, -1431655766;
	or.b32  	%r6370, %r6369, %r6367;
	and.b32  	%r6371, %r6353, -1431655766;
	shr.u32 	%r6372, %r6371, 1;
	or.b32  	%r6373, %r6372, %r6371;
	and.b32  	%r6374, %r6354, 1431655765;
	shl.b32 	%r6375, %r6354, 1;
	and.b32  	%r6376, %r6375, -1431655766;
	or.b32  	%r6377, %r6376, %r6374;
	and.b32  	%r6378, %r6354, -1431655766;
	shr.u32 	%r6379, %r6378, 1;
	or.b32  	%r6380, %r6379, %r6378;
	and.b32  	%r6381, %r6355, 1431655765;
	shl.b32 	%r6382, %r6355, 1;
	and.b32  	%r6383, %r6382, -1431655766;
	or.b32  	%r6384, %r6383, %r6381;
	and.b32  	%r6385, %r6355, -1431655766;
	shr.u32 	%r6386, %r6385, 1;
	or.b32  	%r6387, %r6386, %r6385;
	and.b32  	%r6388, %r6363, 858993459;
	shl.b32 	%r6389, %r6370, 2;
	and.b32  	%r6390, %r6389, -858993460;
	or.b32  	%r6391, %r6390, %r6388;
	and.b32  	%r6392, %r6363, -858993460;
	shr.u32 	%r6393, %r6392, 2;
	and.b32  	%r6394, %r6370, -858993460;
	or.b32  	%r6395, %r6393, %r6394;
	and.b32  	%r6396, %r6366, 858993459;
	shl.b32 	%r6397, %r6373, 2;
	and.b32  	%r6398, %r6397, -858993460;
	or.b32  	%r6399, %r6398, %r6396;
	and.b32  	%r6400, %r6366, -858993460;
	shr.u32 	%r6401, %r6400, 2;
	and.b32  	%r6402, %r6373, -858993460;
	or.b32  	%r6403, %r6401, %r6402;
	and.b32  	%r6404, %r6377, 858993459;
	shl.b32 	%r6405, %r6384, 2;
	and.b32  	%r6406, %r6405, -858993460;
	or.b32  	%r6407, %r6406, %r6404;
	and.b32  	%r6408, %r6377, -858993460;
	shr.u32 	%r6409, %r6408, 2;
	and.b32  	%r6410, %r6384, -858993460;
	or.b32  	%r6411, %r6409, %r6410;
	and.b32  	%r6412, %r6380, 858993459;
	shl.b32 	%r6413, %r6387, 2;
	and.b32  	%r6414, %r6413, -858993460;
	or.b32  	%r6415, %r6414, %r6412;
	and.b32  	%r6416, %r6380, -858993460;
	shr.u32 	%r6417, %r6416, 2;
	and.b32  	%r6418, %r6387, -858993460;
	or.b32  	%r6419, %r6417, %r6418;
	and.b32  	%r6420, %r6391, 84215045;
	shl.b32 	%r6421, %r6407, 4;
	and.b32  	%r6422, %r6421, 1347440720;
	and.b32  	%r6423, %r6391, 1347440720;
	and.b32  	%r6424, %r6407, 1347440720;
	and.b32  	%r6425, %r6399, 168430090;
	shl.b32 	%r6426, %r6415, 4;
	and.b32  	%r6427, %r6426, -1600085856;
	and.b32  	%r6428, %r6399, -1600085856;
	and.b32  	%r6429, %r6415, -1600085856;
	and.b32  	%r6430, %r6395, 84215045;
	shl.b32 	%r6431, %r6411, 4;
	and.b32  	%r6432, %r6431, 1347440720;
	and.b32  	%r6433, %r6395, 1347440720;
	and.b32  	%r6434, %r6411, 1347440720;
	and.b32  	%r6435, %r6403, 168430090;
	shl.b32 	%r6436, %r6419, 4;
	and.b32  	%r6437, %r6436, -1600085856;
	and.b32  	%r6438, %r6403, -1600085856;
	and.b32  	%r6439, %r6419, -1600085856;
	or.b32  	%r6440, %r6425, %r6420;
	or.b32  	%r6441, %r6440, %r6422;
	or.b32  	%r6442, %r6441, %r6427;
	st.local.u32 	[%rd4+32], %r6442;
	or.b32  	%r6443, %r6435, %r6430;
	or.b32  	%r6444, %r6443, %r6432;
	or.b32  	%r6445, %r6444, %r6437;
	st.local.u32 	[%rd4+36], %r6445;
	or.b32  	%r6446, %r6428, %r6423;
	shr.u32 	%r6447, %r6446, 4;
	or.b32  	%r6448, %r6447, %r6424;
	or.b32  	%r6449, %r6448, %r6429;
	st.local.u32 	[%rd4+40], %r6449;
	or.b32  	%r6450, %r6438, %r6433;
	shr.u32 	%r6451, %r6450, 4;
	or.b32  	%r6452, %r6451, %r6434;
	or.b32  	%r6453, %r6452, %r6439;
	st.local.u32 	[%rd4+44], %r6453;
	setp.lt.u32 	%p47, %r9609, 3;
	@%p47 bra 	$L__BB3_65;

	ld.local.v4.u32 	{%r6454, %r6455, %r6456, %r6457}, [%rd5+48];
	and.b32  	%r6462, %r6454, 1431655765;
	shl.b32 	%r6463, %r6454, 1;
	and.b32  	%r6464, %r6463, -1431655766;
	or.b32  	%r6465, %r6464, %r6462;
	and.b32  	%r6466, %r6454, -1431655766;
	shr.u32 	%r6467, %r6466, 1;
	or.b32  	%r6468, %r6467, %r6466;
	and.b32  	%r6469, %r6455, 1431655765;
	shl.b32 	%r6470, %r6455, 1;
	and.b32  	%r6471, %r6470, -1431655766;
	or.b32  	%r6472, %r6471, %r6469;
	and.b32  	%r6473, %r6455, -1431655766;
	shr.u32 	%r6474, %r6473, 1;
	or.b32  	%r6475, %r6474, %r6473;
	and.b32  	%r6476, %r6456, 1431655765;
	shl.b32 	%r6477, %r6456, 1;
	and.b32  	%r6478, %r6477, -1431655766;
	or.b32  	%r6479, %r6478, %r6476;
	and.b32  	%r6480, %r6456, -1431655766;
	shr.u32 	%r6481, %r6480, 1;
	or.b32  	%r6482, %r6481, %r6480;
	and.b32  	%r6483, %r6457, 1431655765;
	shl.b32 	%r6484, %r6457, 1;
	and.b32  	%r6485, %r6484, -1431655766;
	or.b32  	%r6486, %r6485, %r6483;
	and.b32  	%r6487, %r6457, -1431655766;
	shr.u32 	%r6488, %r6487, 1;
	or.b32  	%r6489, %r6488, %r6487;
	and.b32  	%r6490, %r6465, 858993459;
	shl.b32 	%r6491, %r6472, 2;
	and.b32  	%r6492, %r6491, -858993460;
	or.b32  	%r6493, %r6492, %r6490;
	and.b32  	%r6494, %r6465, -858993460;
	shr.u32 	%r6495, %r6494, 2;
	and.b32  	%r6496, %r6472, -858993460;
	or.b32  	%r6497, %r6495, %r6496;
	and.b32  	%r6498, %r6468, 858993459;
	shl.b32 	%r6499, %r6475, 2;
	and.b32  	%r6500, %r6499, -858993460;
	or.b32  	%r6501, %r6500, %r6498;
	and.b32  	%r6502, %r6468, -858993460;
	shr.u32 	%r6503, %r6502, 2;
	and.b32  	%r6504, %r6475, -858993460;
	or.b32  	%r6505, %r6503, %r6504;
	and.b32  	%r6506, %r6479, 858993459;
	shl.b32 	%r6507, %r6486, 2;
	and.b32  	%r6508, %r6507, -858993460;
	or.b32  	%r6509, %r6508, %r6506;
	and.b32  	%r6510, %r6479, -858993460;
	shr.u32 	%r6511, %r6510, 2;
	and.b32  	%r6512, %r6486, -858993460;
	or.b32  	%r6513, %r6511, %r6512;
	and.b32  	%r6514, %r6482, 858993459;
	shl.b32 	%r6515, %r6489, 2;
	and.b32  	%r6516, %r6515, -858993460;
	or.b32  	%r6517, %r6516, %r6514;
	and.b32  	%r6518, %r6482, -858993460;
	shr.u32 	%r6519, %r6518, 2;
	and.b32  	%r6520, %r6489, -858993460;
	or.b32  	%r6521, %r6519, %r6520;
	and.b32  	%r6522, %r6493, 84215045;
	shl.b32 	%r6523, %r6509, 4;
	and.b32  	%r6524, %r6523, 1347440720;
	and.b32  	%r6525, %r6493, 1347440720;
	and.b32  	%r6526, %r6509, 1347440720;
	and.b32  	%r6527, %r6501, 168430090;
	shl.b32 	%r6528, %r6517, 4;
	and.b32  	%r6529, %r6528, -1600085856;
	and.b32  	%r6530, %r6501, -1600085856;
	and.b32  	%r6531, %r6517, -1600085856;
	and.b32  	%r6532, %r6497, 84215045;
	shl.b32 	%r6533, %r6513, 4;
	and.b32  	%r6534, %r6533, 1347440720;
	and.b32  	%r6535, %r6497, 1347440720;
	and.b32  	%r6536, %r6513, 1347440720;
	and.b32  	%r6537, %r6505, 168430090;
	shl.b32 	%r6538, %r6521, 4;
	and.b32  	%r6539, %r6538, -1600085856;
	and.b32  	%r6540, %r6505, -1600085856;
	and.b32  	%r6541, %r6521, -1600085856;
	or.b32  	%r6542, %r6527, %r6522;
	or.b32  	%r6543, %r6542, %r6524;
	or.b32  	%r6544, %r6543, %r6529;
	st.local.u32 	[%rd4+48], %r6544;
	or.b32  	%r6545, %r6537, %r6532;
	or.b32  	%r6546, %r6545, %r6534;
	or.b32  	%r6547, %r6546, %r6539;
	st.local.u32 	[%rd4+52], %r6547;
	or.b32  	%r6548, %r6530, %r6525;
	shr.u32 	%r6549, %r6548, 4;
	or.b32  	%r6550, %r6549, %r6526;
	or.b32  	%r6551, %r6550, %r6531;
	st.local.u32 	[%rd4+56], %r6551;
	or.b32  	%r6552, %r6540, %r6535;
	shr.u32 	%r6553, %r6552, 4;
	or.b32  	%r6554, %r6553, %r6536;
	or.b32  	%r6555, %r6554, %r6541;
	st.local.u32 	[%rd4+60], %r6555;
	ld.local.v4.u32 	{%r6556, %r6557, %r6558, %r6559}, [%rd5+64];
	and.b32  	%r6564, %r6556, 1431655765;
	shl.b32 	%r6565, %r6556, 1;
	and.b32  	%r6566, %r6565, -1431655766;
	or.b32  	%r6567, %r6566, %r6564;
	and.b32  	%r6568, %r6556, -1431655766;
	shr.u32 	%r6569, %r6568, 1;
	or.b32  	%r6570, %r6569, %r6568;
	and.b32  	%r6571, %r6557, 1431655765;
	shl.b32 	%r6572, %r6557, 1;
	and.b32  	%r6573, %r6572, -1431655766;
	or.b32  	%r6574, %r6573, %r6571;
	and.b32  	%r6575, %r6557, -1431655766;
	shr.u32 	%r6576, %r6575, 1;
	or.b32  	%r6577, %r6576, %r6575;
	and.b32  	%r6578, %r6558, 1431655765;
	shl.b32 	%r6579, %r6558, 1;
	and.b32  	%r6580, %r6579, -1431655766;
	or.b32  	%r6581, %r6580, %r6578;
	and.b32  	%r6582, %r6558, -1431655766;
	shr.u32 	%r6583, %r6582, 1;
	or.b32  	%r6584, %r6583, %r6582;
	and.b32  	%r6585, %r6559, 1431655765;
	shl.b32 	%r6586, %r6559, 1;
	and.b32  	%r6587, %r6586, -1431655766;
	or.b32  	%r6588, %r6587, %r6585;
	and.b32  	%r6589, %r6559, -1431655766;
	shr.u32 	%r6590, %r6589, 1;
	or.b32  	%r6591, %r6590, %r6589;
	and.b32  	%r6592, %r6567, 858993459;
	shl.b32 	%r6593, %r6574, 2;
	and.b32  	%r6594, %r6593, -858993460;
	or.b32  	%r6595, %r6594, %r6592;
	and.b32  	%r6596, %r6567, -858993460;
	shr.u32 	%r6597, %r6596, 2;
	and.b32  	%r6598, %r6574, -858993460;
	or.b32  	%r6599, %r6597, %r6598;
	and.b32  	%r6600, %r6570, 858993459;
	shl.b32 	%r6601, %r6577, 2;
	and.b32  	%r6602, %r6601, -858993460;
	or.b32  	%r6603, %r6602, %r6600;
	and.b32  	%r6604, %r6570, -858993460;
	shr.u32 	%r6605, %r6604, 2;
	and.b32  	%r6606, %r6577, -858993460;
	or.b32  	%r6607, %r6605, %r6606;
	and.b32  	%r6608, %r6581, 858993459;
	shl.b32 	%r6609, %r6588, 2;
	and.b32  	%r6610, %r6609, -858993460;
	or.b32  	%r6611, %r6610, %r6608;
	and.b32  	%r6612, %r6581, -858993460;
	shr.u32 	%r6613, %r6612, 2;
	and.b32  	%r6614, %r6588, -858993460;
	or.b32  	%r6615, %r6613, %r6614;
	and.b32  	%r6616, %r6584, 858993459;
	shl.b32 	%r6617, %r6591, 2;
	and.b32  	%r6618, %r6617, -858993460;
	or.b32  	%r6619, %r6618, %r6616;
	and.b32  	%r6620, %r6584, -858993460;
	shr.u32 	%r6621, %r6620, 2;
	and.b32  	%r6622, %r6591, -858993460;
	or.b32  	%r6623, %r6621, %r6622;
	and.b32  	%r6624, %r6595, 84215045;
	shl.b32 	%r6625, %r6611, 4;
	and.b32  	%r6626, %r6625, 1347440720;
	and.b32  	%r6627, %r6595, 1347440720;
	and.b32  	%r6628, %r6611, 1347440720;
	and.b32  	%r6629, %r6603, 168430090;
	shl.b32 	%r6630, %r6619, 4;
	and.b32  	%r6631, %r6630, -1600085856;
	and.b32  	%r6632, %r6603, -1600085856;
	and.b32  	%r6633, %r6619, -1600085856;
	and.b32  	%r6634, %r6599, 84215045;
	shl.b32 	%r6635, %r6615, 4;
	and.b32  	%r6636, %r6635, 1347440720;
	and.b32  	%r6637, %r6599, 1347440720;
	and.b32  	%r6638, %r6615, 1347440720;
	and.b32  	%r6639, %r6607, 168430090;
	shl.b32 	%r6640, %r6623, 4;
	and.b32  	%r6641, %r6640, -1600085856;
	and.b32  	%r6642, %r6607, -1600085856;
	and.b32  	%r6643, %r6623, -1600085856;
	or.b32  	%r6644, %r6629, %r6624;
	or.b32  	%r6645, %r6644, %r6626;
	or.b32  	%r6646, %r6645, %r6631;
	st.local.u32 	[%rd4+64], %r6646;
	or.b32  	%r6647, %r6639, %r6634;
	or.b32  	%r6648, %r6647, %r6636;
	or.b32  	%r6649, %r6648, %r6641;
	st.local.u32 	[%rd4+68], %r6649;
	or.b32  	%r6650, %r6632, %r6627;
	shr.u32 	%r6651, %r6650, 4;
	or.b32  	%r6652, %r6651, %r6628;
	or.b32  	%r6653, %r6652, %r6633;
	st.local.u32 	[%rd4+72], %r6653;
	or.b32  	%r6654, %r6642, %r6637;
	shr.u32 	%r6655, %r6654, 4;
	or.b32  	%r6656, %r6655, %r6638;
	or.b32  	%r6657, %r6656, %r6643;
	st.local.u32 	[%rd4+76], %r6657;
	setp.lt.u32 	%p48, %r9609, 5;
	@%p48 bra 	$L__BB3_65;

	ld.local.v4.u32 	{%r6658, %r6659, %r6660, %r6661}, [%rd5+80];
	and.b32  	%r6666, %r6658, 1431655765;
	shl.b32 	%r6667, %r6658, 1;
	and.b32  	%r6668, %r6667, -1431655766;
	or.b32  	%r6669, %r6668, %r6666;
	and.b32  	%r6670, %r6658, -1431655766;
	shr.u32 	%r6671, %r6670, 1;
	or.b32  	%r6672, %r6671, %r6670;
	and.b32  	%r6673, %r6659, 1431655765;
	shl.b32 	%r6674, %r6659, 1;
	and.b32  	%r6675, %r6674, -1431655766;
	or.b32  	%r6676, %r6675, %r6673;
	and.b32  	%r6677, %r6659, -1431655766;
	shr.u32 	%r6678, %r6677, 1;
	or.b32  	%r6679, %r6678, %r6677;
	and.b32  	%r6680, %r6660, 1431655765;
	shl.b32 	%r6681, %r6660, 1;
	and.b32  	%r6682, %r6681, -1431655766;
	or.b32  	%r6683, %r6682, %r6680;
	and.b32  	%r6684, %r6660, -1431655766;
	shr.u32 	%r6685, %r6684, 1;
	or.b32  	%r6686, %r6685, %r6684;
	and.b32  	%r6687, %r6661, 1431655765;
	shl.b32 	%r6688, %r6661, 1;
	and.b32  	%r6689, %r6688, -1431655766;
	or.b32  	%r6690, %r6689, %r6687;
	and.b32  	%r6691, %r6661, -1431655766;
	shr.u32 	%r6692, %r6691, 1;
	or.b32  	%r6693, %r6692, %r6691;
	and.b32  	%r6694, %r6669, 858993459;
	shl.b32 	%r6695, %r6676, 2;
	and.b32  	%r6696, %r6695, -858993460;
	or.b32  	%r6697, %r6696, %r6694;
	and.b32  	%r6698, %r6669, -858993460;
	shr.u32 	%r6699, %r6698, 2;
	and.b32  	%r6700, %r6676, -858993460;
	or.b32  	%r6701, %r6699, %r6700;
	and.b32  	%r6702, %r6672, 858993459;
	shl.b32 	%r6703, %r6679, 2;
	and.b32  	%r6704, %r6703, -858993460;
	or.b32  	%r6705, %r6704, %r6702;
	and.b32  	%r6706, %r6672, -858993460;
	shr.u32 	%r6707, %r6706, 2;
	and.b32  	%r6708, %r6679, -858993460;
	or.b32  	%r6709, %r6707, %r6708;
	and.b32  	%r6710, %r6683, 858993459;
	shl.b32 	%r6711, %r6690, 2;
	and.b32  	%r6712, %r6711, -858993460;
	or.b32  	%r6713, %r6712, %r6710;
	and.b32  	%r6714, %r6683, -858993460;
	shr.u32 	%r6715, %r6714, 2;
	and.b32  	%r6716, %r6690, -858993460;
	or.b32  	%r6717, %r6715, %r6716;
	and.b32  	%r6718, %r6686, 858993459;
	shl.b32 	%r6719, %r6693, 2;
	and.b32  	%r6720, %r6719, -858993460;
	or.b32  	%r6721, %r6720, %r6718;
	and.b32  	%r6722, %r6686, -858993460;
	shr.u32 	%r6723, %r6722, 2;
	and.b32  	%r6724, %r6693, -858993460;
	or.b32  	%r6725, %r6723, %r6724;
	and.b32  	%r6726, %r6697, 84215045;
	shl.b32 	%r6727, %r6713, 4;
	and.b32  	%r6728, %r6727, 1347440720;
	and.b32  	%r6729, %r6697, 1347440720;
	and.b32  	%r6730, %r6713, 1347440720;
	and.b32  	%r6731, %r6705, 168430090;
	shl.b32 	%r6732, %r6721, 4;
	and.b32  	%r6733, %r6732, -1600085856;
	and.b32  	%r6734, %r6705, -1600085856;
	and.b32  	%r6735, %r6721, -1600085856;
	and.b32  	%r6736, %r6701, 84215045;
	shl.b32 	%r6737, %r6717, 4;
	and.b32  	%r6738, %r6737, 1347440720;
	and.b32  	%r6739, %r6701, 1347440720;
	and.b32  	%r6740, %r6717, 1347440720;
	and.b32  	%r6741, %r6709, 168430090;
	shl.b32 	%r6742, %r6725, 4;
	and.b32  	%r6743, %r6742, -1600085856;
	and.b32  	%r6744, %r6709, -1600085856;
	and.b32  	%r6745, %r6725, -1600085856;
	or.b32  	%r6746, %r6731, %r6726;
	or.b32  	%r6747, %r6746, %r6728;
	or.b32  	%r6748, %r6747, %r6733;
	st.local.u32 	[%rd4+80], %r6748;
	or.b32  	%r6749, %r6741, %r6736;
	or.b32  	%r6750, %r6749, %r6738;
	or.b32  	%r6751, %r6750, %r6743;
	st.local.u32 	[%rd4+84], %r6751;
	or.b32  	%r6752, %r6734, %r6729;
	shr.u32 	%r6753, %r6752, 4;
	or.b32  	%r6754, %r6753, %r6730;
	or.b32  	%r6755, %r6754, %r6735;
	st.local.u32 	[%rd4+88], %r6755;
	or.b32  	%r6756, %r6744, %r6739;
	shr.u32 	%r6757, %r6756, 4;
	or.b32  	%r6758, %r6757, %r6740;
	or.b32  	%r6759, %r6758, %r6745;
	st.local.u32 	[%rd4+92], %r6759;
	ld.local.v4.u32 	{%r6760, %r6761, %r6762, %r6763}, [%rd5+96];
	and.b32  	%r6768, %r6760, 1431655765;
	shl.b32 	%r6769, %r6760, 1;
	and.b32  	%r6770, %r6769, -1431655766;
	or.b32  	%r6771, %r6770, %r6768;
	and.b32  	%r6772, %r6760, -1431655766;
	shr.u32 	%r6773, %r6772, 1;
	or.b32  	%r6774, %r6773, %r6772;
	and.b32  	%r6775, %r6761, 1431655765;
	shl.b32 	%r6776, %r6761, 1;
	and.b32  	%r6777, %r6776, -1431655766;
	or.b32  	%r6778, %r6777, %r6775;
	and.b32  	%r6779, %r6761, -1431655766;
	shr.u32 	%r6780, %r6779, 1;
	or.b32  	%r6781, %r6780, %r6779;
	and.b32  	%r6782, %r6762, 1431655765;
	shl.b32 	%r6783, %r6762, 1;
	and.b32  	%r6784, %r6783, -1431655766;
	or.b32  	%r6785, %r6784, %r6782;
	and.b32  	%r6786, %r6762, -1431655766;
	shr.u32 	%r6787, %r6786, 1;
	or.b32  	%r6788, %r6787, %r6786;
	and.b32  	%r6789, %r6763, 1431655765;
	shl.b32 	%r6790, %r6763, 1;
	and.b32  	%r6791, %r6790, -1431655766;
	or.b32  	%r6792, %r6791, %r6789;
	and.b32  	%r6793, %r6763, -1431655766;
	shr.u32 	%r6794, %r6793, 1;
	or.b32  	%r6795, %r6794, %r6793;
	and.b32  	%r6796, %r6771, 858993459;
	shl.b32 	%r6797, %r6778, 2;
	and.b32  	%r6798, %r6797, -858993460;
	or.b32  	%r6799, %r6798, %r6796;
	and.b32  	%r6800, %r6771, -858993460;
	shr.u32 	%r6801, %r6800, 2;
	and.b32  	%r6802, %r6778, -858993460;
	or.b32  	%r6803, %r6801, %r6802;
	and.b32  	%r6804, %r6774, 858993459;
	shl.b32 	%r6805, %r6781, 2;
	and.b32  	%r6806, %r6805, -858993460;
	or.b32  	%r6807, %r6806, %r6804;
	and.b32  	%r6808, %r6774, -858993460;
	shr.u32 	%r6809, %r6808, 2;
	and.b32  	%r6810, %r6781, -858993460;
	or.b32  	%r6811, %r6809, %r6810;
	and.b32  	%r6812, %r6785, 858993459;
	shl.b32 	%r6813, %r6792, 2;
	and.b32  	%r6814, %r6813, -858993460;
	or.b32  	%r6815, %r6814, %r6812;
	and.b32  	%r6816, %r6785, -858993460;
	shr.u32 	%r6817, %r6816, 2;
	and.b32  	%r6818, %r6792, -858993460;
	or.b32  	%r6819, %r6817, %r6818;
	and.b32  	%r6820, %r6788, 858993459;
	shl.b32 	%r6821, %r6795, 2;
	and.b32  	%r6822, %r6821, -858993460;
	or.b32  	%r6823, %r6822, %r6820;
	and.b32  	%r6824, %r6788, -858993460;
	shr.u32 	%r6825, %r6824, 2;
	and.b32  	%r6826, %r6795, -858993460;
	or.b32  	%r6827, %r6825, %r6826;
	and.b32  	%r6828, %r6799, 84215045;
	shl.b32 	%r6829, %r6815, 4;
	and.b32  	%r6830, %r6829, 1347440720;
	and.b32  	%r6831, %r6799, 1347440720;
	and.b32  	%r6832, %r6815, 1347440720;
	and.b32  	%r6833, %r6807, 168430090;
	shl.b32 	%r6834, %r6823, 4;
	and.b32  	%r6835, %r6834, -1600085856;
	and.b32  	%r6836, %r6807, -1600085856;
	and.b32  	%r6837, %r6823, -1600085856;
	and.b32  	%r6838, %r6803, 84215045;
	shl.b32 	%r6839, %r6819, 4;
	and.b32  	%r6840, %r6839, 1347440720;
	and.b32  	%r6841, %r6803, 1347440720;
	and.b32  	%r6842, %r6819, 1347440720;
	and.b32  	%r6843, %r6811, 168430090;
	shl.b32 	%r6844, %r6827, 4;
	and.b32  	%r6845, %r6844, -1600085856;
	and.b32  	%r6846, %r6811, -1600085856;
	and.b32  	%r6847, %r6827, -1600085856;
	or.b32  	%r6848, %r6833, %r6828;
	or.b32  	%r6849, %r6848, %r6830;
	or.b32  	%r6850, %r6849, %r6835;
	st.local.u32 	[%rd4+96], %r6850;
	or.b32  	%r6851, %r6843, %r6838;
	or.b32  	%r6852, %r6851, %r6840;
	or.b32  	%r6853, %r6852, %r6845;
	st.local.u32 	[%rd4+100], %r6853;
	or.b32  	%r6854, %r6836, %r6831;
	shr.u32 	%r6855, %r6854, 4;
	or.b32  	%r6856, %r6855, %r6832;
	or.b32  	%r6857, %r6856, %r6837;
	st.local.u32 	[%rd4+104], %r6857;
	or.b32  	%r6858, %r6846, %r6841;
	shr.u32 	%r6859, %r6858, 4;
	or.b32  	%r6860, %r6859, %r6842;
	or.b32  	%r6861, %r6860, %r6847;
	st.local.u32 	[%rd4+108], %r6861;
	setp.lt.u32 	%p49, %r9609, 7;
	@%p49 bra 	$L__BB3_65;

	ld.local.v4.u32 	{%r6862, %r6863, %r6864, %r6865}, [%rd5+112];
	and.b32  	%r6870, %r6862, 1431655765;
	shl.b32 	%r6871, %r6862, 1;
	and.b32  	%r6872, %r6871, -1431655766;
	or.b32  	%r6873, %r6872, %r6870;
	and.b32  	%r6874, %r6862, -1431655766;
	shr.u32 	%r6875, %r6874, 1;
	or.b32  	%r6876, %r6875, %r6874;
	and.b32  	%r6877, %r6863, 1431655765;
	shl.b32 	%r6878, %r6863, 1;
	and.b32  	%r6879, %r6878, -1431655766;
	or.b32  	%r6880, %r6879, %r6877;
	and.b32  	%r6881, %r6863, -1431655766;
	shr.u32 	%r6882, %r6881, 1;
	or.b32  	%r6883, %r6882, %r6881;
	and.b32  	%r6884, %r6864, 1431655765;
	shl.b32 	%r6885, %r6864, 1;
	and.b32  	%r6886, %r6885, -1431655766;
	or.b32  	%r6887, %r6886, %r6884;
	and.b32  	%r6888, %r6864, -1431655766;
	shr.u32 	%r6889, %r6888, 1;
	or.b32  	%r6890, %r6889, %r6888;
	and.b32  	%r6891, %r6865, 1431655765;
	shl.b32 	%r6892, %r6865, 1;
	and.b32  	%r6893, %r6892, -1431655766;
	or.b32  	%r6894, %r6893, %r6891;
	and.b32  	%r6895, %r6865, -1431655766;
	shr.u32 	%r6896, %r6895, 1;
	or.b32  	%r6897, %r6896, %r6895;
	and.b32  	%r6898, %r6873, 858993459;
	shl.b32 	%r6899, %r6880, 2;
	and.b32  	%r6900, %r6899, -858993460;
	or.b32  	%r6901, %r6900, %r6898;
	and.b32  	%r6902, %r6873, -858993460;
	shr.u32 	%r6903, %r6902, 2;
	and.b32  	%r6904, %r6880, -858993460;
	or.b32  	%r6905, %r6903, %r6904;
	and.b32  	%r6906, %r6876, 858993459;
	shl.b32 	%r6907, %r6883, 2;
	and.b32  	%r6908, %r6907, -858993460;
	or.b32  	%r6909, %r6908, %r6906;
	and.b32  	%r6910, %r6876, -858993460;
	shr.u32 	%r6911, %r6910, 2;
	and.b32  	%r6912, %r6883, -858993460;
	or.b32  	%r6913, %r6911, %r6912;
	and.b32  	%r6914, %r6887, 858993459;
	shl.b32 	%r6915, %r6894, 2;
	and.b32  	%r6916, %r6915, -858993460;
	or.b32  	%r6917, %r6916, %r6914;
	and.b32  	%r6918, %r6887, -858993460;
	shr.u32 	%r6919, %r6918, 2;
	and.b32  	%r6920, %r6894, -858993460;
	or.b32  	%r6921, %r6919, %r6920;
	and.b32  	%r6922, %r6890, 858993459;
	shl.b32 	%r6923, %r6897, 2;
	and.b32  	%r6924, %r6923, -858993460;
	or.b32  	%r6925, %r6924, %r6922;
	and.b32  	%r6926, %r6890, -858993460;
	shr.u32 	%r6927, %r6926, 2;
	and.b32  	%r6928, %r6897, -858993460;
	or.b32  	%r6929, %r6927, %r6928;
	and.b32  	%r6930, %r6901, 84215045;
	shl.b32 	%r6931, %r6917, 4;
	and.b32  	%r6932, %r6931, 1347440720;
	and.b32  	%r6933, %r6901, 1347440720;
	and.b32  	%r6934, %r6917, 1347440720;
	and.b32  	%r6935, %r6909, 168430090;
	shl.b32 	%r6936, %r6925, 4;
	and.b32  	%r6937, %r6936, -1600085856;
	and.b32  	%r6938, %r6909, -1600085856;
	and.b32  	%r6939, %r6925, -1600085856;
	and.b32  	%r6940, %r6905, 84215045;
	shl.b32 	%r6941, %r6921, 4;
	and.b32  	%r6942, %r6941, 1347440720;
	and.b32  	%r6943, %r6905, 1347440720;
	and.b32  	%r6944, %r6921, 1347440720;
	and.b32  	%r6945, %r6913, 168430090;
	shl.b32 	%r6946, %r6929, 4;
	and.b32  	%r6947, %r6946, -1600085856;
	and.b32  	%r6948, %r6913, -1600085856;
	and.b32  	%r6949, %r6929, -1600085856;
	or.b32  	%r6950, %r6935, %r6930;
	or.b32  	%r6951, %r6950, %r6932;
	or.b32  	%r6952, %r6951, %r6937;
	st.local.u32 	[%rd4+112], %r6952;
	or.b32  	%r6953, %r6945, %r6940;
	or.b32  	%r6954, %r6953, %r6942;
	or.b32  	%r6955, %r6954, %r6947;
	st.local.u32 	[%rd4+116], %r6955;
	or.b32  	%r6956, %r6938, %r6933;
	shr.u32 	%r6957, %r6956, 4;
	or.b32  	%r6958, %r6957, %r6934;
	or.b32  	%r6959, %r6958, %r6939;
	st.local.u32 	[%rd4+120], %r6959;
	or.b32  	%r6960, %r6948, %r6943;
	shr.u32 	%r6961, %r6960, 4;
	or.b32  	%r6962, %r6961, %r6944;
	or.b32  	%r6963, %r6962, %r6949;
	st.local.u32 	[%rd4+124], %r6963;
	ld.local.v4.u32 	{%r6964, %r6965, %r6966, %r6967}, [%rd5+128];
	and.b32  	%r6972, %r6964, 1431655765;
	shl.b32 	%r6973, %r6964, 1;
	and.b32  	%r6974, %r6973, -1431655766;
	or.b32  	%r6975, %r6974, %r6972;
	and.b32  	%r6976, %r6964, -1431655766;
	shr.u32 	%r6977, %r6976, 1;
	or.b32  	%r6978, %r6977, %r6976;
	and.b32  	%r6979, %r6965, 1431655765;
	shl.b32 	%r6980, %r6965, 1;
	and.b32  	%r6981, %r6980, -1431655766;
	or.b32  	%r6982, %r6981, %r6979;
	and.b32  	%r6983, %r6965, -1431655766;
	shr.u32 	%r6984, %r6983, 1;
	or.b32  	%r6985, %r6984, %r6983;
	and.b32  	%r6986, %r6966, 1431655765;
	shl.b32 	%r6987, %r6966, 1;
	and.b32  	%r6988, %r6987, -1431655766;
	or.b32  	%r6989, %r6988, %r6986;
	and.b32  	%r6990, %r6966, -1431655766;
	shr.u32 	%r6991, %r6990, 1;
	or.b32  	%r6992, %r6991, %r6990;
	and.b32  	%r6993, %r6967, 1431655765;
	shl.b32 	%r6994, %r6967, 1;
	and.b32  	%r6995, %r6994, -1431655766;
	or.b32  	%r6996, %r6995, %r6993;
	and.b32  	%r6997, %r6967, -1431655766;
	shr.u32 	%r6998, %r6997, 1;
	or.b32  	%r6999, %r6998, %r6997;
	and.b32  	%r7000, %r6975, 858993459;
	shl.b32 	%r7001, %r6982, 2;
	and.b32  	%r7002, %r7001, -858993460;
	or.b32  	%r7003, %r7002, %r7000;
	and.b32  	%r7004, %r6975, -858993460;
	shr.u32 	%r7005, %r7004, 2;
	and.b32  	%r7006, %r6982, -858993460;
	or.b32  	%r7007, %r7005, %r7006;
	and.b32  	%r7008, %r6978, 858993459;
	shl.b32 	%r7009, %r6985, 2;
	and.b32  	%r7010, %r7009, -858993460;
	or.b32  	%r7011, %r7010, %r7008;
	and.b32  	%r7012, %r6978, -858993460;
	shr.u32 	%r7013, %r7012, 2;
	and.b32  	%r7014, %r6985, -858993460;
	or.b32  	%r7015, %r7013, %r7014;
	and.b32  	%r7016, %r6989, 858993459;
	shl.b32 	%r7017, %r6996, 2;
	and.b32  	%r7018, %r7017, -858993460;
	or.b32  	%r7019, %r7018, %r7016;
	and.b32  	%r7020, %r6989, -858993460;
	shr.u32 	%r7021, %r7020, 2;
	and.b32  	%r7022, %r6996, -858993460;
	or.b32  	%r7023, %r7021, %r7022;
	and.b32  	%r7024, %r6992, 858993459;
	shl.b32 	%r7025, %r6999, 2;
	and.b32  	%r7026, %r7025, -858993460;
	or.b32  	%r7027, %r7026, %r7024;
	and.b32  	%r7028, %r6992, -858993460;
	shr.u32 	%r7029, %r7028, 2;
	and.b32  	%r7030, %r6999, -858993460;
	or.b32  	%r7031, %r7029, %r7030;
	and.b32  	%r7032, %r7003, 84215045;
	shl.b32 	%r7033, %r7019, 4;
	and.b32  	%r7034, %r7033, 1347440720;
	and.b32  	%r7035, %r7003, 1347440720;
	and.b32  	%r7036, %r7019, 1347440720;
	and.b32  	%r7037, %r7011, 168430090;
	shl.b32 	%r7038, %r7027, 4;
	and.b32  	%r7039, %r7038, -1600085856;
	and.b32  	%r7040, %r7011, -1600085856;
	and.b32  	%r7041, %r7027, -1600085856;
	and.b32  	%r7042, %r7007, 84215045;
	shl.b32 	%r7043, %r7023, 4;
	and.b32  	%r7044, %r7043, 1347440720;
	and.b32  	%r7045, %r7007, 1347440720;
	and.b32  	%r7046, %r7023, 1347440720;
	and.b32  	%r7047, %r7015, 168430090;
	shl.b32 	%r7048, %r7031, 4;
	and.b32  	%r7049, %r7048, -1600085856;
	and.b32  	%r7050, %r7015, -1600085856;
	and.b32  	%r7051, %r7031, -1600085856;
	or.b32  	%r7052, %r7037, %r7032;
	or.b32  	%r7053, %r7052, %r7034;
	or.b32  	%r7054, %r7053, %r7039;
	st.local.u32 	[%rd4+128], %r7054;
	or.b32  	%r7055, %r7047, %r7042;
	or.b32  	%r7056, %r7055, %r7044;
	or.b32  	%r7057, %r7056, %r7049;
	st.local.u32 	[%rd4+132], %r7057;
	or.b32  	%r7058, %r7040, %r7035;
	shr.u32 	%r7059, %r7058, 4;
	or.b32  	%r7060, %r7059, %r7036;
	or.b32  	%r7061, %r7060, %r7041;
	st.local.u32 	[%rd4+136], %r7061;
	or.b32  	%r7062, %r7050, %r7045;
	shr.u32 	%r7063, %r7062, 4;
	or.b32  	%r7064, %r7063, %r7046;
	or.b32  	%r7065, %r7064, %r7051;
	st.local.u32 	[%rd4+140], %r7065;
	setp.lt.u32 	%p50, %r9609, 9;
	@%p50 bra 	$L__BB3_65;

	ld.local.v4.u32 	{%r7066, %r7067, %r7068, %r7069}, [%rd5+144];
	and.b32  	%r7074, %r7066, 1431655765;
	shl.b32 	%r7075, %r7066, 1;
	and.b32  	%r7076, %r7075, -1431655766;
	or.b32  	%r7077, %r7076, %r7074;
	and.b32  	%r7078, %r7066, -1431655766;
	shr.u32 	%r7079, %r7078, 1;
	or.b32  	%r7080, %r7079, %r7078;
	and.b32  	%r7081, %r7067, 1431655765;
	shl.b32 	%r7082, %r7067, 1;
	and.b32  	%r7083, %r7082, -1431655766;
	or.b32  	%r7084, %r7083, %r7081;
	and.b32  	%r7085, %r7067, -1431655766;
	shr.u32 	%r7086, %r7085, 1;
	or.b32  	%r7087, %r7086, %r7085;
	and.b32  	%r7088, %r7068, 1431655765;
	shl.b32 	%r7089, %r7068, 1;
	and.b32  	%r7090, %r7089, -1431655766;
	or.b32  	%r7091, %r7090, %r7088;
	and.b32  	%r7092, %r7068, -1431655766;
	shr.u32 	%r7093, %r7092, 1;
	or.b32  	%r7094, %r7093, %r7092;
	and.b32  	%r7095, %r7069, 1431655765;
	shl.b32 	%r7096, %r7069, 1;
	and.b32  	%r7097, %r7096, -1431655766;
	or.b32  	%r7098, %r7097, %r7095;
	and.b32  	%r7099, %r7069, -1431655766;
	shr.u32 	%r7100, %r7099, 1;
	or.b32  	%r7101, %r7100, %r7099;
	and.b32  	%r7102, %r7077, 858993459;
	shl.b32 	%r7103, %r7084, 2;
	and.b32  	%r7104, %r7103, -858993460;
	or.b32  	%r7105, %r7104, %r7102;
	and.b32  	%r7106, %r7077, -858993460;
	shr.u32 	%r7107, %r7106, 2;
	and.b32  	%r7108, %r7084, -858993460;
	or.b32  	%r7109, %r7107, %r7108;
	and.b32  	%r7110, %r7080, 858993459;
	shl.b32 	%r7111, %r7087, 2;
	and.b32  	%r7112, %r7111, -858993460;
	or.b32  	%r7113, %r7112, %r7110;
	and.b32  	%r7114, %r7080, -858993460;
	shr.u32 	%r7115, %r7114, 2;
	and.b32  	%r7116, %r7087, -858993460;
	or.b32  	%r7117, %r7115, %r7116;
	and.b32  	%r7118, %r7091, 858993459;
	shl.b32 	%r7119, %r7098, 2;
	and.b32  	%r7120, %r7119, -858993460;
	or.b32  	%r7121, %r7120, %r7118;
	and.b32  	%r7122, %r7091, -858993460;
	shr.u32 	%r7123, %r7122, 2;
	and.b32  	%r7124, %r7098, -858993460;
	or.b32  	%r7125, %r7123, %r7124;
	and.b32  	%r7126, %r7094, 858993459;
	shl.b32 	%r7127, %r7101, 2;
	and.b32  	%r7128, %r7127, -858993460;
	or.b32  	%r7129, %r7128, %r7126;
	and.b32  	%r7130, %r7094, -858993460;
	shr.u32 	%r7131, %r7130, 2;
	and.b32  	%r7132, %r7101, -858993460;
	or.b32  	%r7133, %r7131, %r7132;
	and.b32  	%r7134, %r7105, 84215045;
	shl.b32 	%r7135, %r7121, 4;
	and.b32  	%r7136, %r7135, 1347440720;
	and.b32  	%r7137, %r7105, 1347440720;
	and.b32  	%r7138, %r7121, 1347440720;
	and.b32  	%r7139, %r7113, 168430090;
	shl.b32 	%r7140, %r7129, 4;
	and.b32  	%r7141, %r7140, -1600085856;
	and.b32  	%r7142, %r7113, -1600085856;
	and.b32  	%r7143, %r7129, -1600085856;
	and.b32  	%r7144, %r7109, 84215045;
	shl.b32 	%r7145, %r7125, 4;
	and.b32  	%r7146, %r7145, 1347440720;
	and.b32  	%r7147, %r7109, 1347440720;
	and.b32  	%r7148, %r7125, 1347440720;
	and.b32  	%r7149, %r7117, 168430090;
	shl.b32 	%r7150, %r7133, 4;
	and.b32  	%r7151, %r7150, -1600085856;
	and.b32  	%r7152, %r7117, -1600085856;
	and.b32  	%r7153, %r7133, -1600085856;
	or.b32  	%r7154, %r7139, %r7134;
	or.b32  	%r7155, %r7154, %r7136;
	or.b32  	%r7156, %r7155, %r7141;
	st.local.u32 	[%rd4+144], %r7156;
	or.b32  	%r7157, %r7149, %r7144;
	or.b32  	%r7158, %r7157, %r7146;
	or.b32  	%r7159, %r7158, %r7151;
	st.local.u32 	[%rd4+148], %r7159;
	or.b32  	%r7160, %r7142, %r7137;
	shr.u32 	%r7161, %r7160, 4;
	or.b32  	%r7162, %r7161, %r7138;
	or.b32  	%r7163, %r7162, %r7143;
	st.local.u32 	[%rd4+152], %r7163;
	or.b32  	%r7164, %r7152, %r7147;
	shr.u32 	%r7165, %r7164, 4;
	or.b32  	%r7166, %r7165, %r7148;
	or.b32  	%r7167, %r7166, %r7153;
	st.local.u32 	[%rd4+156], %r7167;
	ld.local.v4.u32 	{%r7168, %r7169, %r7170, %r7171}, [%rd5+160];
	and.b32  	%r7176, %r7168, 1431655765;
	shl.b32 	%r7177, %r7168, 1;
	and.b32  	%r7178, %r7177, -1431655766;
	or.b32  	%r7179, %r7178, %r7176;
	and.b32  	%r7180, %r7168, -1431655766;
	shr.u32 	%r7181, %r7180, 1;
	or.b32  	%r7182, %r7181, %r7180;
	and.b32  	%r7183, %r7169, 1431655765;
	shl.b32 	%r7184, %r7169, 1;
	and.b32  	%r7185, %r7184, -1431655766;
	or.b32  	%r7186, %r7185, %r7183;
	and.b32  	%r7187, %r7169, -1431655766;
	shr.u32 	%r7188, %r7187, 1;
	or.b32  	%r7189, %r7188, %r7187;
	and.b32  	%r7190, %r7170, 1431655765;
	shl.b32 	%r7191, %r7170, 1;
	and.b32  	%r7192, %r7191, -1431655766;
	or.b32  	%r7193, %r7192, %r7190;
	and.b32  	%r7194, %r7170, -1431655766;
	shr.u32 	%r7195, %r7194, 1;
	or.b32  	%r7196, %r7195, %r7194;
	and.b32  	%r7197, %r7171, 1431655765;
	shl.b32 	%r7198, %r7171, 1;
	and.b32  	%r7199, %r7198, -1431655766;
	or.b32  	%r7200, %r7199, %r7197;
	and.b32  	%r7201, %r7171, -1431655766;
	shr.u32 	%r7202, %r7201, 1;
	or.b32  	%r7203, %r7202, %r7201;
	and.b32  	%r7204, %r7179, 858993459;
	shl.b32 	%r7205, %r7186, 2;
	and.b32  	%r7206, %r7205, -858993460;
	or.b32  	%r7207, %r7206, %r7204;
	and.b32  	%r7208, %r7179, -858993460;
	shr.u32 	%r7209, %r7208, 2;
	and.b32  	%r7210, %r7186, -858993460;
	or.b32  	%r7211, %r7209, %r7210;
	and.b32  	%r7212, %r7182, 858993459;
	shl.b32 	%r7213, %r7189, 2;
	and.b32  	%r7214, %r7213, -858993460;
	or.b32  	%r7215, %r7214, %r7212;
	and.b32  	%r7216, %r7182, -858993460;
	shr.u32 	%r7217, %r7216, 2;
	and.b32  	%r7218, %r7189, -858993460;
	or.b32  	%r7219, %r7217, %r7218;
	and.b32  	%r7220, %r7193, 858993459;
	shl.b32 	%r7221, %r7200, 2;
	and.b32  	%r7222, %r7221, -858993460;
	or.b32  	%r7223, %r7222, %r7220;
	and.b32  	%r7224, %r7193, -858993460;
	shr.u32 	%r7225, %r7224, 2;
	and.b32  	%r7226, %r7200, -858993460;
	or.b32  	%r7227, %r7225, %r7226;
	and.b32  	%r7228, %r7196, 858993459;
	shl.b32 	%r7229, %r7203, 2;
	and.b32  	%r7230, %r7229, -858993460;
	or.b32  	%r7231, %r7230, %r7228;
	and.b32  	%r7232, %r7196, -858993460;
	shr.u32 	%r7233, %r7232, 2;
	and.b32  	%r7234, %r7203, -858993460;
	or.b32  	%r7235, %r7233, %r7234;
	and.b32  	%r7236, %r7207, 84215045;
	shl.b32 	%r7237, %r7223, 4;
	and.b32  	%r7238, %r7237, 1347440720;
	and.b32  	%r7239, %r7207, 1347440720;
	and.b32  	%r7240, %r7223, 1347440720;
	and.b32  	%r7241, %r7215, 168430090;
	shl.b32 	%r7242, %r7231, 4;
	and.b32  	%r7243, %r7242, -1600085856;
	and.b32  	%r7244, %r7215, -1600085856;
	and.b32  	%r7245, %r7231, -1600085856;
	and.b32  	%r7246, %r7211, 84215045;
	shl.b32 	%r7247, %r7227, 4;
	and.b32  	%r7248, %r7247, 1347440720;
	and.b32  	%r7249, %r7211, 1347440720;
	and.b32  	%r7250, %r7227, 1347440720;
	and.b32  	%r7251, %r7219, 168430090;
	shl.b32 	%r7252, %r7235, 4;
	and.b32  	%r7253, %r7252, -1600085856;
	and.b32  	%r7254, %r7219, -1600085856;
	and.b32  	%r7255, %r7235, -1600085856;
	or.b32  	%r7256, %r7241, %r7236;
	or.b32  	%r7257, %r7256, %r7238;
	or.b32  	%r7258, %r7257, %r7243;
	st.local.u32 	[%rd4+160], %r7258;
	or.b32  	%r7259, %r7251, %r7246;
	or.b32  	%r7260, %r7259, %r7248;
	or.b32  	%r7261, %r7260, %r7253;
	st.local.u32 	[%rd4+164], %r7261;
	or.b32  	%r7262, %r7244, %r7239;
	shr.u32 	%r7263, %r7262, 4;
	or.b32  	%r7264, %r7263, %r7240;
	or.b32  	%r7265, %r7264, %r7245;
	st.local.u32 	[%rd4+168], %r7265;
	or.b32  	%r7266, %r7254, %r7249;
	shr.u32 	%r7267, %r7266, 4;
	or.b32  	%r7268, %r7267, %r7250;
	or.b32  	%r7269, %r7268, %r7255;
	st.local.u32 	[%rd4+172], %r7269;
	setp.lt.u32 	%p51, %r9609, 11;
	@%p51 bra 	$L__BB3_65;

	ld.local.v4.u32 	{%r7270, %r7271, %r7272, %r7273}, [%rd5+176];
	and.b32  	%r7278, %r7270, 1431655765;
	shl.b32 	%r7279, %r7270, 1;
	and.b32  	%r7280, %r7279, -1431655766;
	or.b32  	%r7281, %r7280, %r7278;
	and.b32  	%r7282, %r7270, -1431655766;
	shr.u32 	%r7283, %r7282, 1;
	or.b32  	%r7284, %r7283, %r7282;
	and.b32  	%r7285, %r7271, 1431655765;
	shl.b32 	%r7286, %r7271, 1;
	and.b32  	%r7287, %r7286, -1431655766;
	or.b32  	%r7288, %r7287, %r7285;
	and.b32  	%r7289, %r7271, -1431655766;
	shr.u32 	%r7290, %r7289, 1;
	or.b32  	%r7291, %r7290, %r7289;
	and.b32  	%r7292, %r7272, 1431655765;
	shl.b32 	%r7293, %r7272, 1;
	and.b32  	%r7294, %r7293, -1431655766;
	or.b32  	%r7295, %r7294, %r7292;
	and.b32  	%r7296, %r7272, -1431655766;
	shr.u32 	%r7297, %r7296, 1;
	or.b32  	%r7298, %r7297, %r7296;
	and.b32  	%r7299, %r7273, 1431655765;
	shl.b32 	%r7300, %r7273, 1;
	and.b32  	%r7301, %r7300, -1431655766;
	or.b32  	%r7302, %r7301, %r7299;
	and.b32  	%r7303, %r7273, -1431655766;
	shr.u32 	%r7304, %r7303, 1;
	or.b32  	%r7305, %r7304, %r7303;
	and.b32  	%r7306, %r7281, 858993459;
	shl.b32 	%r7307, %r7288, 2;
	and.b32  	%r7308, %r7307, -858993460;
	or.b32  	%r7309, %r7308, %r7306;
	and.b32  	%r7310, %r7281, -858993460;
	shr.u32 	%r7311, %r7310, 2;
	and.b32  	%r7312, %r7288, -858993460;
	or.b32  	%r7313, %r7311, %r7312;
	and.b32  	%r7314, %r7284, 858993459;
	shl.b32 	%r7315, %r7291, 2;
	and.b32  	%r7316, %r7315, -858993460;
	or.b32  	%r7317, %r7316, %r7314;
	and.b32  	%r7318, %r7284, -858993460;
	shr.u32 	%r7319, %r7318, 2;
	and.b32  	%r7320, %r7291, -858993460;
	or.b32  	%r7321, %r7319, %r7320;
	and.b32  	%r7322, %r7295, 858993459;
	shl.b32 	%r7323, %r7302, 2;
	and.b32  	%r7324, %r7323, -858993460;
	or.b32  	%r7325, %r7324, %r7322;
	and.b32  	%r7326, %r7295, -858993460;
	shr.u32 	%r7327, %r7326, 2;
	and.b32  	%r7328, %r7302, -858993460;
	or.b32  	%r7329, %r7327, %r7328;
	and.b32  	%r7330, %r7298, 858993459;
	shl.b32 	%r7331, %r7305, 2;
	and.b32  	%r7332, %r7331, -858993460;
	or.b32  	%r7333, %r7332, %r7330;
	and.b32  	%r7334, %r7298, -858993460;
	shr.u32 	%r7335, %r7334, 2;
	and.b32  	%r7336, %r7305, -858993460;
	or.b32  	%r7337, %r7335, %r7336;
	and.b32  	%r7338, %r7309, 84215045;
	shl.b32 	%r7339, %r7325, 4;
	and.b32  	%r7340, %r7339, 1347440720;
	and.b32  	%r7341, %r7309, 1347440720;
	and.b32  	%r7342, %r7325, 1347440720;
	and.b32  	%r7343, %r7317, 168430090;
	shl.b32 	%r7344, %r7333, 4;
	and.b32  	%r7345, %r7344, -1600085856;
	and.b32  	%r7346, %r7317, -1600085856;
	and.b32  	%r7347, %r7333, -1600085856;
	and.b32  	%r7348, %r7313, 84215045;
	shl.b32 	%r7349, %r7329, 4;
	and.b32  	%r7350, %r7349, 1347440720;
	and.b32  	%r7351, %r7313, 1347440720;
	and.b32  	%r7352, %r7329, 1347440720;
	and.b32  	%r7353, %r7321, 168430090;
	shl.b32 	%r7354, %r7337, 4;
	and.b32  	%r7355, %r7354, -1600085856;
	and.b32  	%r7356, %r7321, -1600085856;
	and.b32  	%r7357, %r7337, -1600085856;
	or.b32  	%r7358, %r7343, %r7338;
	or.b32  	%r7359, %r7358, %r7340;
	or.b32  	%r7360, %r7359, %r7345;
	st.local.u32 	[%rd4+176], %r7360;
	or.b32  	%r7361, %r7353, %r7348;
	or.b32  	%r7362, %r7361, %r7350;
	or.b32  	%r7363, %r7362, %r7355;
	st.local.u32 	[%rd4+180], %r7363;
	or.b32  	%r7364, %r7346, %r7341;
	shr.u32 	%r7365, %r7364, 4;
	or.b32  	%r7366, %r7365, %r7342;
	or.b32  	%r7367, %r7366, %r7347;
	st.local.u32 	[%rd4+184], %r7367;
	or.b32  	%r7368, %r7356, %r7351;
	shr.u32 	%r7369, %r7368, 4;
	or.b32  	%r7370, %r7369, %r7352;
	or.b32  	%r7371, %r7370, %r7357;
	st.local.u32 	[%rd4+188], %r7371;
	ld.local.v4.u32 	{%r7372, %r7373, %r7374, %r7375}, [%rd5+192];
	and.b32  	%r7380, %r7372, 1431655765;
	shl.b32 	%r7381, %r7372, 1;
	and.b32  	%r7382, %r7381, -1431655766;
	or.b32  	%r7383, %r7382, %r7380;
	and.b32  	%r7384, %r7372, -1431655766;
	shr.u32 	%r7385, %r7384, 1;
	or.b32  	%r7386, %r7385, %r7384;
	and.b32  	%r7387, %r7373, 1431655765;
	shl.b32 	%r7388, %r7373, 1;
	and.b32  	%r7389, %r7388, -1431655766;
	or.b32  	%r7390, %r7389, %r7387;
	and.b32  	%r7391, %r7373, -1431655766;
	shr.u32 	%r7392, %r7391, 1;
	or.b32  	%r7393, %r7392, %r7391;
	and.b32  	%r7394, %r7374, 1431655765;
	shl.b32 	%r7395, %r7374, 1;
	and.b32  	%r7396, %r7395, -1431655766;
	or.b32  	%r7397, %r7396, %r7394;
	and.b32  	%r7398, %r7374, -1431655766;
	shr.u32 	%r7399, %r7398, 1;
	or.b32  	%r7400, %r7399, %r7398;
	and.b32  	%r7401, %r7375, 1431655765;
	shl.b32 	%r7402, %r7375, 1;
	and.b32  	%r7403, %r7402, -1431655766;
	or.b32  	%r7404, %r7403, %r7401;
	and.b32  	%r7405, %r7375, -1431655766;
	shr.u32 	%r7406, %r7405, 1;
	or.b32  	%r7407, %r7406, %r7405;
	and.b32  	%r7408, %r7383, 858993459;
	shl.b32 	%r7409, %r7390, 2;
	and.b32  	%r7410, %r7409, -858993460;
	or.b32  	%r7411, %r7410, %r7408;
	and.b32  	%r7412, %r7383, -858993460;
	shr.u32 	%r7413, %r7412, 2;
	and.b32  	%r7414, %r7390, -858993460;
	or.b32  	%r7415, %r7413, %r7414;
	and.b32  	%r7416, %r7386, 858993459;
	shl.b32 	%r7417, %r7393, 2;
	and.b32  	%r7418, %r7417, -858993460;
	or.b32  	%r7419, %r7418, %r7416;
	and.b32  	%r7420, %r7386, -858993460;
	shr.u32 	%r7421, %r7420, 2;
	and.b32  	%r7422, %r7393, -858993460;
	or.b32  	%r7423, %r7421, %r7422;
	and.b32  	%r7424, %r7397, 858993459;
	shl.b32 	%r7425, %r7404, 2;
	and.b32  	%r7426, %r7425, -858993460;
	or.b32  	%r7427, %r7426, %r7424;
	and.b32  	%r7428, %r7397, -858993460;
	shr.u32 	%r7429, %r7428, 2;
	and.b32  	%r7430, %r7404, -858993460;
	or.b32  	%r7431, %r7429, %r7430;
	and.b32  	%r7432, %r7400, 858993459;
	shl.b32 	%r7433, %r7407, 2;
	and.b32  	%r7434, %r7433, -858993460;
	or.b32  	%r7435, %r7434, %r7432;
	and.b32  	%r7436, %r7400, -858993460;
	shr.u32 	%r7437, %r7436, 2;
	and.b32  	%r7438, %r7407, -858993460;
	or.b32  	%r7439, %r7437, %r7438;
	and.b32  	%r7440, %r7411, 84215045;
	shl.b32 	%r7441, %r7427, 4;
	and.b32  	%r7442, %r7441, 1347440720;
	and.b32  	%r7443, %r7411, 1347440720;
	and.b32  	%r7444, %r7427, 1347440720;
	and.b32  	%r7445, %r7419, 168430090;
	shl.b32 	%r7446, %r7435, 4;
	and.b32  	%r7447, %r7446, -1600085856;
	and.b32  	%r7448, %r7419, -1600085856;
	and.b32  	%r7449, %r7435, -1600085856;
	and.b32  	%r7450, %r7415, 84215045;
	shl.b32 	%r7451, %r7431, 4;
	and.b32  	%r7452, %r7451, 1347440720;
	and.b32  	%r7453, %r7415, 1347440720;
	and.b32  	%r7454, %r7431, 1347440720;
	and.b32  	%r7455, %r7423, 168430090;
	shl.b32 	%r7456, %r7439, 4;
	and.b32  	%r7457, %r7456, -1600085856;
	and.b32  	%r7458, %r7423, -1600085856;
	and.b32  	%r7459, %r7439, -1600085856;
	or.b32  	%r7460, %r7445, %r7440;
	or.b32  	%r7461, %r7460, %r7442;
	or.b32  	%r7462, %r7461, %r7447;
	st.local.u32 	[%rd4+192], %r7462;
	or.b32  	%r7463, %r7455, %r7450;
	or.b32  	%r7464, %r7463, %r7452;
	or.b32  	%r7465, %r7464, %r7457;
	st.local.u32 	[%rd4+196], %r7465;
	or.b32  	%r7466, %r7448, %r7443;
	shr.u32 	%r7467, %r7466, 4;
	or.b32  	%r7468, %r7467, %r7444;
	or.b32  	%r7469, %r7468, %r7449;
	st.local.u32 	[%rd4+200], %r7469;
	or.b32  	%r7470, %r7458, %r7453;
	shr.u32 	%r7471, %r7470, 4;
	or.b32  	%r7472, %r7471, %r7454;
	or.b32  	%r7473, %r7472, %r7459;
	st.local.u32 	[%rd4+204], %r7473;
	setp.lt.u32 	%p52, %r9609, 13;
	@%p52 bra 	$L__BB3_65;

	ld.local.v4.u32 	{%r7474, %r7475, %r7476, %r7477}, [%rd5+208];
	and.b32  	%r7482, %r7474, 1431655765;
	shl.b32 	%r7483, %r7474, 1;
	and.b32  	%r7484, %r7483, -1431655766;
	or.b32  	%r7485, %r7484, %r7482;
	and.b32  	%r7486, %r7474, -1431655766;
	shr.u32 	%r7487, %r7486, 1;
	or.b32  	%r7488, %r7487, %r7486;
	and.b32  	%r7489, %r7475, 1431655765;
	shl.b32 	%r7490, %r7475, 1;
	and.b32  	%r7491, %r7490, -1431655766;
	or.b32  	%r7492, %r7491, %r7489;
	and.b32  	%r7493, %r7475, -1431655766;
	shr.u32 	%r7494, %r7493, 1;
	or.b32  	%r7495, %r7494, %r7493;
	and.b32  	%r7496, %r7476, 1431655765;
	shl.b32 	%r7497, %r7476, 1;
	and.b32  	%r7498, %r7497, -1431655766;
	or.b32  	%r7499, %r7498, %r7496;
	and.b32  	%r7500, %r7476, -1431655766;
	shr.u32 	%r7501, %r7500, 1;
	or.b32  	%r7502, %r7501, %r7500;
	and.b32  	%r7503, %r7477, 1431655765;
	shl.b32 	%r7504, %r7477, 1;
	and.b32  	%r7505, %r7504, -1431655766;
	or.b32  	%r7506, %r7505, %r7503;
	and.b32  	%r7507, %r7477, -1431655766;
	shr.u32 	%r7508, %r7507, 1;
	or.b32  	%r7509, %r7508, %r7507;
	and.b32  	%r7510, %r7485, 858993459;
	shl.b32 	%r7511, %r7492, 2;
	and.b32  	%r7512, %r7511, -858993460;
	or.b32  	%r7513, %r7512, %r7510;
	and.b32  	%r7514, %r7485, -858993460;
	shr.u32 	%r7515, %r7514, 2;
	and.b32  	%r7516, %r7492, -858993460;
	or.b32  	%r7517, %r7515, %r7516;
	and.b32  	%r7518, %r7488, 858993459;
	shl.b32 	%r7519, %r7495, 2;
	and.b32  	%r7520, %r7519, -858993460;
	or.b32  	%r7521, %r7520, %r7518;
	and.b32  	%r7522, %r7488, -858993460;
	shr.u32 	%r7523, %r7522, 2;
	and.b32  	%r7524, %r7495, -858993460;
	or.b32  	%r7525, %r7523, %r7524;
	and.b32  	%r7526, %r7499, 858993459;
	shl.b32 	%r7527, %r7506, 2;
	and.b32  	%r7528, %r7527, -858993460;
	or.b32  	%r7529, %r7528, %r7526;
	and.b32  	%r7530, %r7499, -858993460;
	shr.u32 	%r7531, %r7530, 2;
	and.b32  	%r7532, %r7506, -858993460;
	or.b32  	%r7533, %r7531, %r7532;
	and.b32  	%r7534, %r7502, 858993459;
	shl.b32 	%r7535, %r7509, 2;
	and.b32  	%r7536, %r7535, -858993460;
	or.b32  	%r7537, %r7536, %r7534;
	and.b32  	%r7538, %r7502, -858993460;
	shr.u32 	%r7539, %r7538, 2;
	and.b32  	%r7540, %r7509, -858993460;
	or.b32  	%r7541, %r7539, %r7540;
	and.b32  	%r7542, %r7513, 84215045;
	shl.b32 	%r7543, %r7529, 4;
	and.b32  	%r7544, %r7543, 1347440720;
	and.b32  	%r7545, %r7513, 1347440720;
	and.b32  	%r7546, %r7529, 1347440720;
	and.b32  	%r7547, %r7521, 168430090;
	shl.b32 	%r7548, %r7537, 4;
	and.b32  	%r7549, %r7548, -1600085856;
	and.b32  	%r7550, %r7521, -1600085856;
	and.b32  	%r7551, %r7537, -1600085856;
	and.b32  	%r7552, %r7517, 84215045;
	shl.b32 	%r7553, %r7533, 4;
	and.b32  	%r7554, %r7553, 1347440720;
	and.b32  	%r7555, %r7517, 1347440720;
	and.b32  	%r7556, %r7533, 1347440720;
	and.b32  	%r7557, %r7525, 168430090;
	shl.b32 	%r7558, %r7541, 4;
	and.b32  	%r7559, %r7558, -1600085856;
	and.b32  	%r7560, %r7525, -1600085856;
	and.b32  	%r7561, %r7541, -1600085856;
	or.b32  	%r7562, %r7547, %r7542;
	or.b32  	%r7563, %r7562, %r7544;
	or.b32  	%r7564, %r7563, %r7549;
	st.local.u32 	[%rd4+208], %r7564;
	or.b32  	%r7565, %r7557, %r7552;
	or.b32  	%r7566, %r7565, %r7554;
	or.b32  	%r7567, %r7566, %r7559;
	st.local.u32 	[%rd4+212], %r7567;
	or.b32  	%r7568, %r7550, %r7545;
	shr.u32 	%r7569, %r7568, 4;
	or.b32  	%r7570, %r7569, %r7546;
	or.b32  	%r7571, %r7570, %r7551;
	st.local.u32 	[%rd4+216], %r7571;
	or.b32  	%r7572, %r7560, %r7555;
	shr.u32 	%r7573, %r7572, 4;
	or.b32  	%r7574, %r7573, %r7556;
	or.b32  	%r7575, %r7574, %r7561;
	st.local.u32 	[%rd4+220], %r7575;
	ld.local.v4.u32 	{%r7576, %r7577, %r7578, %r7579}, [%rd5+224];
	and.b32  	%r7584, %r7576, 1431655765;
	shl.b32 	%r7585, %r7576, 1;
	and.b32  	%r7586, %r7585, -1431655766;
	or.b32  	%r7587, %r7586, %r7584;
	and.b32  	%r7588, %r7576, -1431655766;
	shr.u32 	%r7589, %r7588, 1;
	or.b32  	%r7590, %r7589, %r7588;
	and.b32  	%r7591, %r7577, 1431655765;
	shl.b32 	%r7592, %r7577, 1;
	and.b32  	%r7593, %r7592, -1431655766;
	or.b32  	%r7594, %r7593, %r7591;
	and.b32  	%r7595, %r7577, -1431655766;
	shr.u32 	%r7596, %r7595, 1;
	or.b32  	%r7597, %r7596, %r7595;
	and.b32  	%r7598, %r7578, 1431655765;
	shl.b32 	%r7599, %r7578, 1;
	and.b32  	%r7600, %r7599, -1431655766;
	or.b32  	%r7601, %r7600, %r7598;
	and.b32  	%r7602, %r7578, -1431655766;
	shr.u32 	%r7603, %r7602, 1;
	or.b32  	%r7604, %r7603, %r7602;
	and.b32  	%r7605, %r7579, 1431655765;
	shl.b32 	%r7606, %r7579, 1;
	and.b32  	%r7607, %r7606, -1431655766;
	or.b32  	%r7608, %r7607, %r7605;
	and.b32  	%r7609, %r7579, -1431655766;
	shr.u32 	%r7610, %r7609, 1;
	or.b32  	%r7611, %r7610, %r7609;
	and.b32  	%r7612, %r7587, 858993459;
	shl.b32 	%r7613, %r7594, 2;
	and.b32  	%r7614, %r7613, -858993460;
	or.b32  	%r7615, %r7614, %r7612;
	and.b32  	%r7616, %r7587, -858993460;
	shr.u32 	%r7617, %r7616, 2;
	and.b32  	%r7618, %r7594, -858993460;
	or.b32  	%r7619, %r7617, %r7618;
	and.b32  	%r7620, %r7590, 858993459;
	shl.b32 	%r7621, %r7597, 2;
	and.b32  	%r7622, %r7621, -858993460;
	or.b32  	%r7623, %r7622, %r7620;
	and.b32  	%r7624, %r7590, -858993460;
	shr.u32 	%r7625, %r7624, 2;
	and.b32  	%r7626, %r7597, -858993460;
	or.b32  	%r7627, %r7625, %r7626;
	and.b32  	%r7628, %r7601, 858993459;
	shl.b32 	%r7629, %r7608, 2;
	and.b32  	%r7630, %r7629, -858993460;
	or.b32  	%r7631, %r7630, %r7628;
	and.b32  	%r7632, %r7601, -858993460;
	shr.u32 	%r7633, %r7632, 2;
	and.b32  	%r7634, %r7608, -858993460;
	or.b32  	%r7635, %r7633, %r7634;
	and.b32  	%r7636, %r7604, 858993459;
	shl.b32 	%r7637, %r7611, 2;
	and.b32  	%r7638, %r7637, -858993460;
	or.b32  	%r7639, %r7638, %r7636;
	and.b32  	%r7640, %r7604, -858993460;
	shr.u32 	%r7641, %r7640, 2;
	and.b32  	%r7642, %r7611, -858993460;
	or.b32  	%r7643, %r7641, %r7642;
	and.b32  	%r7644, %r7615, 84215045;
	shl.b32 	%r7645, %r7631, 4;
	and.b32  	%r7646, %r7645, 1347440720;
	and.b32  	%r7647, %r7615, 1347440720;
	and.b32  	%r7648, %r7631, 1347440720;
	and.b32  	%r7649, %r7623, 168430090;
	shl.b32 	%r7650, %r7639, 4;
	and.b32  	%r7651, %r7650, -1600085856;
	and.b32  	%r7652, %r7623, -1600085856;
	and.b32  	%r7653, %r7639, -1600085856;
	and.b32  	%r7654, %r7619, 84215045;
	shl.b32 	%r7655, %r7635, 4;
	and.b32  	%r7656, %r7655, 1347440720;
	and.b32  	%r7657, %r7619, 1347440720;
	and.b32  	%r7658, %r7635, 1347440720;
	and.b32  	%r7659, %r7627, 168430090;
	shl.b32 	%r7660, %r7643, 4;
	and.b32  	%r7661, %r7660, -1600085856;
	and.b32  	%r7662, %r7627, -1600085856;
	and.b32  	%r7663, %r7643, -1600085856;
	or.b32  	%r7664, %r7649, %r7644;
	or.b32  	%r7665, %r7664, %r7646;
	or.b32  	%r7666, %r7665, %r7651;
	st.local.u32 	[%rd4+224], %r7666;
	or.b32  	%r7667, %r7659, %r7654;
	or.b32  	%r7668, %r7667, %r7656;
	or.b32  	%r7669, %r7668, %r7661;
	st.local.u32 	[%rd4+228], %r7669;
	or.b32  	%r7670, %r7652, %r7647;
	shr.u32 	%r7671, %r7670, 4;
	or.b32  	%r7672, %r7671, %r7648;
	or.b32  	%r7673, %r7672, %r7653;
	st.local.u32 	[%rd4+232], %r7673;
	or.b32  	%r7674, %r7662, %r7657;
	shr.u32 	%r7675, %r7674, 4;
	or.b32  	%r7676, %r7675, %r7658;
	or.b32  	%r7677, %r7676, %r7663;
	st.local.u32 	[%rd4+236], %r7677;

$L__BB3_65:
	st.local.u32 	[%rd4+720], %r9609;
	@%p46 bra 	$L__BB3_69;

	shl.b32 	%r7678, %r9609, 2;
	add.s32 	%r142, %r7678, 4;
	setp.eq.s32 	%p54, %r142, 0;
	@%p54 bra 	$L__BB3_69;

	mov.u32 	%r9621, 0;
	mov.u64 	%rd108, %rd4;
	mov.u64 	%rd109, %rd4;

$L__BB3_68:
	ld.local.u32 	%r7680, [%rd109];
	and.b32  	%r7681, %r7680, 1431655765;
	shl.b32 	%r7682, %r7680, 1;
	and.b32  	%r7683, %r7682, -1431655766;
	or.b32  	%r7684, %r7683, %r7681;
	st.local.u32 	[%rd108+240], %r7684;
	and.b32  	%r7685, %r7680, -1431655766;
	shr.u32 	%r7686, %r7685, 1;
	or.b32  	%r7687, %r7686, %r7685;
	st.local.u32 	[%rd108+244], %r7687;
	ld.local.u32 	%r7688, [%rd109+4];
	and.b32  	%r7689, %r7688, 1431655765;
	shl.b32 	%r7690, %r7688, 1;
	and.b32  	%r7691, %r7690, -1431655766;
	or.b32  	%r7692, %r7691, %r7689;
	st.local.u32 	[%rd108+248], %r7692;
	and.b32  	%r7693, %r7688, -1431655766;
	shr.u32 	%r7694, %r7693, 1;
	or.b32  	%r7695, %r7694, %r7693;
	st.local.u32 	[%rd108+252], %r7695;
	ld.local.u32 	%r7696, [%rd109+8];
	and.b32  	%r7697, %r7696, 1431655765;
	shl.b32 	%r7698, %r7696, 1;
	and.b32  	%r7699, %r7698, -1431655766;
	or.b32  	%r7700, %r7699, %r7697;
	st.local.u32 	[%rd108+256], %r7700;
	and.b32  	%r7701, %r7696, -1431655766;
	shr.u32 	%r7702, %r7701, 1;
	or.b32  	%r7703, %r7702, %r7701;
	st.local.u32 	[%rd108+260], %r7703;
	ld.local.u32 	%r7704, [%rd109+12];
	and.b32  	%r7705, %r7704, 1431655765;
	shl.b32 	%r7706, %r7704, 1;
	and.b32  	%r7707, %r7706, -1431655766;
	or.b32  	%r7708, %r7707, %r7705;
	st.local.u32 	[%rd108+264], %r7708;
	and.b32  	%r7709, %r7704, -1431655766;
	shr.u32 	%r7710, %r7709, 1;
	or.b32  	%r7711, %r7710, %r7709;
	st.local.u32 	[%rd108+268], %r7711;
	add.s64 	%rd109, %rd109, 16;
	add.s64 	%rd108, %rd108, 32;
	add.s32 	%r9621, %r9621, 4;
	setp.lt.u32 	%p55, %r9621, %r142;
	@%p55 bra 	$L__BB3_68;

$L__BB3_69:
	mov.u32 	%r9641, 32;
	mov.u64 	%rd113, %rd7;

$L__BB3_70:
	setp.eq.s32 	%p56, %r9641, 0;
	@%p56 bra 	$L__BB3_109;

	ld.const.u8 	%rs17, [%rd112];
	cvt.u32.u16 	%r7713, %rs17;
	and.b32  	%r7714, %r7713, 255;
	ld.const.u8 	%rs18, [%rd112+1];
	cvt.u32.u16 	%r7715, %rs18;
	prmt.b32 	%r7716, %r7715, %r7714, 30212;
	ld.const.u8 	%rs19, [%rd112+2];
	cvt.u32.u16 	%r7717, %rs19;
	prmt.b32 	%r7718, %r7717, %r7716, 28756;
	ld.const.u8 	%rs20, [%rd112+3];
	cvt.u32.u16 	%r7719, %rs20;
	prmt.b32 	%r7720, %r7719, %r7718, 1620;
	ld.const.u8 	%rs21, [%rd112+4];
	cvt.u32.u16 	%r7721, %rs21;
	and.b32  	%r7722, %r7721, 255;
	ld.const.u8 	%rs22, [%rd112+5];
	cvt.u32.u16 	%r7723, %rs22;
	prmt.b32 	%r7724, %r7723, %r7722, 30212;
	ld.const.u8 	%rs23, [%rd112+6];
	cvt.u32.u16 	%r7725, %rs23;
	prmt.b32 	%r7726, %r7725, %r7724, 28756;
	ld.const.u8 	%rs24, [%rd112+7];
	cvt.u32.u16 	%r7727, %rs24;
	prmt.b32 	%r7728, %r7727, %r7726, 1620;
	ld.const.u8 	%rs25, [%rd112+8];
	cvt.u32.u16 	%r7729, %rs25;
	and.b32  	%r7730, %r7729, 255;
	ld.const.u8 	%rs26, [%rd112+9];
	cvt.u32.u16 	%r7731, %rs26;
	prmt.b32 	%r7732, %r7731, %r7730, 30212;
	ld.const.u8 	%rs27, [%rd112+10];
	cvt.u32.u16 	%r7733, %rs27;
	prmt.b32 	%r7734, %r7733, %r7732, 28756;
	ld.const.u8 	%rs28, [%rd112+11];
	cvt.u32.u16 	%r7735, %rs28;
	prmt.b32 	%r7736, %r7735, %r7734, 1620;
	ld.const.u8 	%rs29, [%rd112+12];
	cvt.u32.u16 	%r7737, %rs29;
	and.b32  	%r7738, %r7737, 255;
	ld.const.u8 	%rs30, [%rd112+13];
	cvt.u32.u16 	%r7739, %rs30;
	prmt.b32 	%r7740, %r7739, %r7738, 30212;
	ld.const.u8 	%rs31, [%rd112+14];
	cvt.u32.u16 	%r7741, %rs31;
	prmt.b32 	%r7742, %r7741, %r7740, 28756;
	ld.const.u8 	%rs32, [%rd112+15];
	cvt.u32.u16 	%r7743, %rs32;
	prmt.b32 	%r7744, %r7743, %r7742, 1620;
	and.b32  	%r7745, %r7720, -1431655766;
	shr.u32 	%r7746, %r7745, 3;
	shr.u32 	%r7747, %r7745, 1;
	and.b32  	%r7748, %r7728, -2004318072;
	and.b32  	%r7749, %r7736, -1431655766;
	shr.u32 	%r7750, %r7749, 3;
	shr.u32 	%r7751, %r7749, 1;
	and.b32  	%r7752, %r7744, -2004318072;
	and.b32  	%r7753, %r7720, 286331153;
	shl.b32 	%r7754, %r7728, 2;
	and.b32  	%r7755, %r7754, 1145324612;
	or.b32  	%r7756, %r7755, %r7753;
	and.b32  	%r7757, %r7720, 1145324612;
	shr.u32 	%r7758, %r7757, 2;
	and.b32  	%r7759, %r7728, 1145324612;
	or.b32  	%r7760, %r7758, %r7759;
	and.b32  	%r7761, %r7747, 286331153;
	shl.b32 	%r7762, %r7728, 1;
	and.b32  	%r7763, %r7762, 1145324612;
	or.b32  	%r7764, %r7763, %r7761;
	and.b32  	%r7765, %r7746, 286331153;
	shr.u32 	%r7766, %r7748, 1;
	or.b32  	%r7767, %r7765, %r7766;
	and.b32  	%r7768, %r7736, 286331153;
	shl.b32 	%r7769, %r7744, 2;
	and.b32  	%r7770, %r7769, 1145324612;
	or.b32  	%r7771, %r7770, %r7768;
	and.b32  	%r7772, %r7736, 1145324612;
	shr.u32 	%r7773, %r7772, 2;
	and.b32  	%r7774, %r7744, 1145324612;
	or.b32  	%r7775, %r7773, %r7774;
	and.b32  	%r7776, %r7751, 286331153;
	shl.b32 	%r7777, %r7744, 1;
	and.b32  	%r7778, %r7777, 1145324612;
	or.b32  	%r7779, %r7778, %r7776;
	and.b32  	%r7780, %r7750, 286331153;
	shr.u32 	%r7781, %r7752, 1;
	or.b32  	%r7782, %r7780, %r7781;
	and.b32  	%r7783, %r7756, 84215045;
	shl.b32 	%r7784, %r7771, 4;
	and.b32  	%r7785, %r7784, 1347440720;
	or.b32  	%r7786, %r7785, %r7783;
	and.b32  	%r7787, %r7756, 1347440720;
	shr.u32 	%r7788, %r7787, 4;
	and.b32  	%r7789, %r7771, 1347440720;
	or.b32  	%r7790, %r7788, %r7789;
	and.b32  	%r7791, %r7764, 84215045;
	shl.b32 	%r7792, %r7779, 4;
	and.b32  	%r7793, %r7792, 1347440720;
	or.b32  	%r7794, %r7793, %r7791;
	and.b32  	%r7795, %r7764, 1347440720;
	shr.u32 	%r7796, %r7795, 4;
	and.b32  	%r7797, %r7779, 1347440720;
	or.b32  	%r7798, %r7796, %r7797;
	and.b32  	%r7799, %r7760, 84215045;
	shl.b32 	%r7800, %r7775, 4;
	and.b32  	%r7801, %r7800, 1347440720;
	or.b32  	%r7802, %r7801, %r7799;
	and.b32  	%r7803, %r7760, 1347440720;
	shr.u32 	%r7804, %r7803, 4;
	and.b32  	%r7805, %r7775, 1347440720;
	or.b32  	%r7806, %r7804, %r7805;
	and.b32  	%r7807, %r7767, 84215045;
	shl.b32 	%r7808, %r7782, 4;
	and.b32  	%r7809, %r7808, 1347440720;
	or.b32  	%r7810, %r7809, %r7807;
	and.b32  	%r7811, %r7767, 1347440720;
	shr.u32 	%r7812, %r7811, 4;
	and.b32  	%r7813, %r7782, 1347440720;
	or.b32  	%r7814, %r7812, %r7813;
	ld.local.u32 	%r7815, [%rd4+720];
	shl.b32 	%r7816, %r7815, 3;
	mul.wide.u32 	%rd88, %r7816, 4;
	add.s64 	%rd89, %rd4, %rd88;
	ld.local.u32 	%r7817, [%rd89+240];
	xor.b32  	%r9639, %r7786, %r7817;
	ld.local.u32 	%r7818, [%rd89+244];
	xor.b32  	%r9638, %r7794, %r7818;
	ld.local.u32 	%r7819, [%rd89+248];
	xor.b32  	%r9637, %r7802, %r7819;
	ld.local.u32 	%r7820, [%rd89+252];
	xor.b32  	%r9636, %r7810, %r7820;
	ld.local.u32 	%r7821, [%rd89+256];
	xor.b32  	%r9635, %r7790, %r7821;
	ld.local.u32 	%r7822, [%rd89+260];
	xor.b32  	%r9634, %r7798, %r7822;
	ld.local.u32 	%r7823, [%rd89+264];
	xor.b32  	%r9633, %r7806, %r7823;
	ld.local.u32 	%r7824, [%rd89+268];
	xor.b32  	%r9632, %r7814, %r7824;
	add.s32 	%r9631, %r7815, -1;
	setp.eq.s32 	%p57, %r9631, 0;
	@%p57 bra 	$L__BB3_73;

$L__BB3_72:
	shl.b32 	%r7825, %r9639, 2;
	and.b32  	%r7826, %r7825, 64512;
	and.b32  	%r7827, %r9639, 255;
	or.b32  	%r7828, %r7826, %r7827;
	and.b32  	%r7829, %r9639, 49152;
	shr.u32 	%r7830, %r7829, 6;
	or.b32  	%r7831, %r7828, %r7830;
	shl.b32 	%r7832, %r9639, 4;
	and.b32  	%r7833, %r7832, 15728640;
	or.b32  	%r7834, %r7831, %r7833;
	and.b32  	%r7835, %r9639, 15728640;
	shr.u32 	%r7836, %r7835, 4;
	or.b32  	%r7837, %r7834, %r7836;
	shl.b32 	%r7838, %r9639, 6;
	and.b32  	%r7839, %r7838, -1073741824;
	or.b32  	%r7840, %r7837, %r7839;
	and.b32  	%r7841, %r9639, -67108864;
	shr.u32 	%r7842, %r7841, 2;
	or.b32  	%r7843, %r7840, %r7842;
	shl.b32 	%r7844, %r9638, 2;
	and.b32  	%r7845, %r7844, 64512;
	and.b32  	%r7846, %r9638, 255;
	or.b32  	%r7847, %r7845, %r7846;
	and.b32  	%r7848, %r9638, 49152;
	shr.u32 	%r7849, %r7848, 6;
	or.b32  	%r7850, %r7847, %r7849;
	shl.b32 	%r7851, %r9638, 4;
	and.b32  	%r7852, %r7851, 15728640;
	or.b32  	%r7853, %r7850, %r7852;
	and.b32  	%r7854, %r9638, 15728640;
	shr.u32 	%r7855, %r7854, 4;
	or.b32  	%r7856, %r7853, %r7855;
	shl.b32 	%r7857, %r9638, 6;
	and.b32  	%r7858, %r7857, -1073741824;
	or.b32  	%r7859, %r7856, %r7858;
	and.b32  	%r7860, %r9638, -67108864;
	shr.u32 	%r7861, %r7860, 2;
	or.b32  	%r7862, %r7859, %r7861;
	shl.b32 	%r7863, %r9637, 2;
	and.b32  	%r7864, %r7863, 64512;
	and.b32  	%r7865, %r9637, 255;
	or.b32  	%r7866, %r7864, %r7865;
	and.b32  	%r7867, %r9637, 49152;
	shr.u32 	%r7868, %r7867, 6;
	or.b32  	%r7869, %r7866, %r7868;
	shl.b32 	%r7870, %r9637, 4;
	and.b32  	%r7871, %r7870, 15728640;
	or.b32  	%r7872, %r7869, %r7871;
	and.b32  	%r7873, %r9637, 15728640;
	shr.u32 	%r7874, %r7873, 4;
	or.b32  	%r7875, %r7872, %r7874;
	shl.b32 	%r7876, %r9637, 6;
	and.b32  	%r7877, %r7876, -1073741824;
	or.b32  	%r7878, %r7875, %r7877;
	and.b32  	%r7879, %r9637, -67108864;
	shr.u32 	%r7880, %r7879, 2;
	or.b32  	%r7881, %r7878, %r7880;
	shl.b32 	%r7882, %r9636, 2;
	and.b32  	%r7883, %r7882, 64512;
	and.b32  	%r7884, %r9636, 255;
	or.b32  	%r7885, %r7883, %r7884;
	and.b32  	%r7886, %r9636, 49152;
	shr.u32 	%r7887, %r7886, 6;
	or.b32  	%r7888, %r7885, %r7887;
	shl.b32 	%r7889, %r9636, 4;
	and.b32  	%r7890, %r7889, 15728640;
	or.b32  	%r7891, %r7888, %r7890;
	and.b32  	%r7892, %r9636, 15728640;
	shr.u32 	%r7893, %r7892, 4;
	or.b32  	%r7894, %r7891, %r7893;
	shl.b32 	%r7895, %r9636, 6;
	and.b32  	%r7896, %r7895, -1073741824;
	or.b32  	%r7897, %r7894, %r7896;
	and.b32  	%r7898, %r9636, -67108864;
	shr.u32 	%r7899, %r7898, 2;
	or.b32  	%r7900, %r7897, %r7899;
	shl.b32 	%r7901, %r9635, 2;
	and.b32  	%r7902, %r7901, 64512;
	and.b32  	%r7903, %r9635, 255;
	or.b32  	%r7904, %r7902, %r7903;
	and.b32  	%r7905, %r9635, 49152;
	shr.u32 	%r7906, %r7905, 6;
	or.b32  	%r7907, %r7904, %r7906;
	shl.b32 	%r7908, %r9635, 4;
	and.b32  	%r7909, %r7908, 15728640;
	or.b32  	%r7910, %r7907, %r7909;
	and.b32  	%r7911, %r9635, 15728640;
	shr.u32 	%r7912, %r7911, 4;
	or.b32  	%r7913, %r7910, %r7912;
	shl.b32 	%r7914, %r9635, 6;
	and.b32  	%r7915, %r7914, -1073741824;
	or.b32  	%r7916, %r7913, %r7915;
	and.b32  	%r7917, %r9635, -67108864;
	shr.u32 	%r7918, %r7917, 2;
	or.b32  	%r7919, %r7916, %r7918;
	shl.b32 	%r7920, %r9634, 2;
	and.b32  	%r7921, %r7920, 64512;
	and.b32  	%r7922, %r9634, 255;
	or.b32  	%r7923, %r7921, %r7922;
	and.b32  	%r7924, %r9634, 49152;
	shr.u32 	%r7925, %r7924, 6;
	or.b32  	%r7926, %r7923, %r7925;
	shl.b32 	%r7927, %r9634, 4;
	and.b32  	%r7928, %r7927, 15728640;
	or.b32  	%r7929, %r7926, %r7928;
	and.b32  	%r7930, %r9634, 15728640;
	shr.u32 	%r7931, %r7930, 4;
	or.b32  	%r7932, %r7929, %r7931;
	shl.b32 	%r7933, %r9634, 6;
	and.b32  	%r7934, %r7933, -1073741824;
	or.b32  	%r7935, %r7932, %r7934;
	and.b32  	%r7936, %r9634, -67108864;
	shr.u32 	%r7937, %r7936, 2;
	or.b32  	%r7938, %r7935, %r7937;
	shl.b32 	%r7939, %r9633, 2;
	and.b32  	%r7940, %r7939, 64512;
	and.b32  	%r7941, %r9633, 255;
	or.b32  	%r7942, %r7940, %r7941;
	and.b32  	%r7943, %r9633, 49152;
	shr.u32 	%r7944, %r7943, 6;
	or.b32  	%r7945, %r7942, %r7944;
	shl.b32 	%r7946, %r9633, 4;
	and.b32  	%r7947, %r7946, 15728640;
	or.b32  	%r7948, %r7945, %r7947;
	and.b32  	%r7949, %r9633, 15728640;
	shr.u32 	%r7950, %r7949, 4;
	or.b32  	%r7951, %r7948, %r7950;
	shl.b32 	%r7952, %r9633, 6;
	and.b32  	%r7953, %r7952, -1073741824;
	or.b32  	%r7954, %r7951, %r7953;
	and.b32  	%r7955, %r9633, -67108864;
	shr.u32 	%r7956, %r7955, 2;
	or.b32  	%r7957, %r7954, %r7956;
	shl.b32 	%r7958, %r9632, 2;
	and.b32  	%r7959, %r7958, 64512;
	and.b32  	%r7960, %r9632, 255;
	or.b32  	%r7961, %r7959, %r7960;
	and.b32  	%r7962, %r9632, 49152;
	shr.u32 	%r7963, %r7962, 6;
	or.b32  	%r7964, %r7961, %r7963;
	shl.b32 	%r7965, %r9632, 4;
	and.b32  	%r7966, %r7965, 15728640;
	or.b32  	%r7967, %r7964, %r7966;
	and.b32  	%r7968, %r9632, 15728640;
	shr.u32 	%r7969, %r7968, 4;
	or.b32  	%r7970, %r7967, %r7969;
	shl.b32 	%r7971, %r9632, 6;
	and.b32  	%r7972, %r7971, -1073741824;
	or.b32  	%r7973, %r7970, %r7972;
	and.b32  	%r7974, %r9632, -67108864;
	shr.u32 	%r7975, %r7974, 2;
	or.b32  	%r7976, %r7973, %r7975;
	xor.b32  	%r7977, %r7900, %r7843;
	xor.b32  	%r7978, %r7919, %r7862;
	not.b32 	%r7979, %r7938;
	not.b32 	%r7980, %r7957;
	not.b32 	%r7981, %r7978;
	xor.b32  	%r7982, %r7981, %r7980;
	not.b32 	%r7983, %r7977;
	xor.b32  	%r7984, %r7983, %r7979;
	xor.b32  	%r7985, %r7919, %r7881;
	xor.b32  	%r7986, %r7985, %r7976;
	xor.b32  	%r7987, %r7900, %r7862;
	xor.b32  	%r7988, %r7987, %r7957;
	xor.b32  	%r7989, %r7881, %r7843;
	xor.b32  	%r7990, %r7989, %r7938;
	xor.b32  	%r7991, %r7981, %r7976;
	xor.b32  	%r7992, %r7983, %r7980;
	xor.b32  	%r7993, %r7881, %r7979;
	xor.b32  	%r7994, %r7993, %r7976;
	xor.b32  	%r7995, %r7991, %r7988;
	xor.b32  	%r7996, %r7983, %r7981;
	xor.b32  	%r7997, %r7988, %r7982;
	xor.b32  	%r7998, %r7976, %r7980;
	xor.b32  	%r7999, %r7986, %r7984;
	xor.b32  	%r8000, %r7994, %r7999;
	xor.b32  	%r8001, %r8000, %r7988;
	xor.b32  	%r8002, %r7996, %r7995;
	xor.b32  	%r8003, %r8000, %r7982;
	xor.b32  	%r8004, %r8000, %r7992;
	xor.b32  	%r8005, %r8004, %r7998;
	xor.b32  	%r8006, %r8002, %r7990;
	xor.b32  	%r8007, %r8006, %r7991;
	xor.b32  	%r8008, %r8006, %r7984;
	xor.b32  	%r8009, %r8007, %r7994;
	xor.b32  	%r8010, %r8007, %r7999;
	xor.b32  	%r8011, %r8008, %r7997;
	xor.b32  	%r8012, %r8011, %r7994;
	xor.b32  	%r8013, %r8010, %r8011;
	xor.b32  	%r8014, %r8011, %r7999;
	and.b32  	%r8015, %r8007, %r8002;
	and.b32  	%r8016, %r8009, %r8005;
	and.b32  	%r8017, %r8001, %r7994;
	and.b32  	%r8018, %r8014, %r7996;
	and.b32  	%r8019, %r8004, %r8000;
	and.b32  	%r8020, %r8012, %r8003;
	and.b32  	%r8021, %r8011, %r7997;
	and.b32  	%r8022, %r8013, %r7995;
	xor.b32  	%r8023, %r8022, %r8021;
	and.b32  	%r8024, %r8010, %r7998;
	xor.b32  	%r8025, %r8024, %r8021;
	xor.b32  	%r8026, %r8015, %r8008;
	xor.b32  	%r8027, %r8026, %r8016;
	xor.b32  	%r8028, %r8027, %r8023;
	xor.b32  	%r8029, %r8017, %r7998;
	xor.b32  	%r8030, %r8029, %r8010;
	xor.b32  	%r8031, %r8030, %r8015;
	xor.b32  	%r8032, %r8031, %r8025;
	xor.b32  	%r8033, %r8019, %r7996;
	xor.b32  	%r8034, %r8033, %r8014;
	xor.b32  	%r8035, %r8034, %r8018;
	xor.b32  	%r8036, %r8035, %r8023;
	xor.b32  	%r8037, %r8014, %r7982;
	xor.b32  	%r8038, %r8037, %r8018;
	xor.b32  	%r8039, %r8038, %r8020;
	xor.b32  	%r8040, %r8039, %r8025;
	xor.b32  	%r8041, %r8028, %r8032;
	and.b32  	%r8042, %r8028, %r8036;
	xor.b32  	%r8043, %r8042, %r8040;
	and.b32  	%r8044, %r8043, %r8041;
	xor.b32  	%r8045, %r8044, %r8032;
	xor.b32  	%r8046, %r8036, %r8040;
	xor.b32  	%r8047, %r8042, %r8032;
	and.b32  	%r8048, %r8047, %r8046;
	xor.b32  	%r8049, %r8048, %r8040;
	xor.b32  	%r8050, %r8049, %r8036;
	xor.b32  	%r8051, %r8048, %r8042;
	and.b32  	%r8052, %r8051, %r8040;
	xor.b32  	%r8053, %r8050, %r8052;
	xor.b32  	%r8054, %r8052, %r8043;
	and.b32  	%r8055, %r8054, %r8045;
	xor.b32  	%r8056, %r8055, %r8041;
	xor.b32  	%r8057, %r8056, %r8053;
	xor.b32  	%r8058, %r8045, %r8049;
	xor.b32  	%r8059, %r8056, %r8045;
	xor.b32  	%r8060, %r8052, %r8036;
	xor.b32  	%r8061, %r8057, %r8058;
	and.b32  	%r8062, %r8060, %r8007;
	and.b32  	%r8063, %r8053, %r8009;
	and.b32  	%r8064, %r8049, %r7994;
	and.b32  	%r8065, %r8059, %r8014;
	and.b32  	%r8066, %r8056, %r8000;
	and.b32  	%r8067, %r8045, %r8012;
	and.b32  	%r8068, %r8058, %r8011;
	and.b32  	%r8069, %r8061, %r8013;
	and.b32  	%r8070, %r8057, %r8010;
	and.b32  	%r8071, %r8060, %r8002;
	and.b32  	%r8072, %r8053, %r8005;
	and.b32  	%r8073, %r8049, %r8001;
	and.b32  	%r8074, %r8059, %r7996;
	and.b32  	%r8075, %r8056, %r8004;
	and.b32  	%r8076, %r8045, %r8003;
	and.b32  	%r8077, %r8058, %r7997;
	and.b32  	%r8078, %r8061, %r7995;
	and.b32  	%r8079, %r8057, %r7998;
	xor.b32  	%r8080, %r8078, %r8077;
	xor.b32  	%r8081, %r8072, %r8073;
	xor.b32  	%r8082, %r8075, %r8067;
	xor.b32  	%r8083, %r8071, %r8072;
	xor.b32  	%r8084, %r8074, %r8064;
	xor.b32  	%r8085, %r8064, %r8067;
	xor.b32  	%r8086, %r8069, %r8070;
	xor.b32  	%r8087, %r8065, %r8062;
	xor.b32  	%r8088, %r8074, %r8082;
	xor.b32  	%r8089, %r8084, %r8087;
	xor.b32  	%r8090, %r8080, %r8066;
	xor.b32  	%r8091, %r8065, %r8068;
	xor.b32  	%r8092, %r8091, %r8069;
	xor.b32  	%r8093, %r8080, %r8089;
	xor.b32  	%r8094, %r8089, %r8076;
	xor.b32  	%r8095, %r8086, %r8090;
	xor.b32  	%r8096, %r8083, %r8090;
	xor.b32  	%r8097, %r8092, %r8066;
	xor.b32  	%r8098, %r8094, %r8095;
	xor.b32  	%r8099, %r8096, %r8063;
	xor.b32  	%r8100, %r8096, %r8092;
	xor.b32  	%r8101, %r8099, %r8087;
	xor.b32  	%r8102, %r8095, %r8088;
	xor.b32  	%r8103, %r8101, %r8097;
	xor.b32  	%r8104, %r8102, %r8103;
	xor.b32  	%r8105, %r8081, %r8098;
	xor.b32  	%r8106, %r8078, %r8079;
	xor.b32  	%r8107, %r8106, %r8097;
	xor.b32  	%r8108, %r8093, %r8082;
	xor.b32  	%r8109, %r8107, %r8098;
	xor.b32  	%r8110, %r8108, %r8109;
	xor.b32  	%r8111, %r8110, %r8105;
	xor.b32  	%r8112, %r8085, %r8099;
	xor.b32  	%r8113, %r8104, %r8112;
	xor.b32  	%r8114, %r8097, %r8102;
	xor.b32  	%r8115, %r8110, %r8112;
	xor.b32  	%r8116, %r8100, %r8101;
	xor.b32  	%r8117, %r8116, %r8105;
	xor.b32  	%r8118, %r8116, %r8102;
	xor.b32  	%r8119, %r8108, %r8103;
	xor.b32  	%r8120, %r8119, %r8112;
	xor.b32  	%r8121, %r8100, %r8109;
	xor.b32  	%r8122, %r8121, %r8105;
	shl.b32 	%r8123, %r9631, 3;
	mul.wide.u32 	%rd90, %r8123, 4;
	add.s64 	%rd91, %rd4, %rd90;
	ld.local.u32 	%r8124, [%rd91+240];
	xor.b32  	%r8125, %r8122, %r8124;
	ld.local.u32 	%r8126, [%rd91+244];
	xor.b32  	%r8127, %r8120, %r8126;
	ld.local.u32 	%r8128, [%rd91+248];
	xor.b32  	%r8129, %r8118, %r8128;
	ld.local.u32 	%r8130, [%rd91+252];
	xor.b32  	%r8131, %r8111, %r8130;
	ld.local.u32 	%r8132, [%rd91+256];
	xor.b32  	%r8133, %r8113, %r8132;
	ld.local.u32 	%r8134, [%rd91+260];
	xor.b32  	%r8135, %r8117, %r8134;
	ld.local.u32 	%r8136, [%rd91+264];
	xor.b32  	%r8137, %r8115, %r8136;
	ld.local.u32 	%r8138, [%rd91+268];
	xor.b32  	%r8139, %r8114, %r8138;
	shf.l.wrap.b32 	%r8140, %r8125, %r8125, 24;
	shf.l.wrap.b32 	%r8141, %r8127, %r8127, 24;
	shf.l.wrap.b32 	%r8142, %r8129, %r8129, 24;
	shf.l.wrap.b32 	%r8143, %r8131, %r8131, 24;
	shf.l.wrap.b32 	%r8144, %r8133, %r8133, 24;
	shf.l.wrap.b32 	%r8145, %r8135, %r8135, 24;
	shf.l.wrap.b32 	%r8146, %r8137, %r8137, 24;
	shf.l.wrap.b32 	%r8147, %r8139, %r8139, 24;
	xor.b32  	%r8148, %r8135, %r8125;
	xor.b32  	%r8149, %r8137, %r8140;
	xor.b32  	%r8150, %r8149, %r8148;
	xor.b32  	%r8151, %r8150, %r8145;
	shf.l.wrap.b32 	%r8152, %r8151, %r8151, 16;
	xor.b32  	%r8153, %r8135, %r8140;
	xor.b32  	%r8154, %r8153, %r8137;
	xor.b32  	%r8155, %r8154, %r8139;
	xor.b32  	%r8156, %r8155, %r8145;
	xor.b32  	%r8157, %r8156, %r8147;
	xor.b32  	%r9639, %r8157, %r8152;
	xor.b32  	%r8158, %r8141, %r8127;
	xor.b32  	%r8159, %r8158, %r8135;
	xor.b32  	%r8160, %r8159, %r8139;
	xor.b32  	%r8161, %r8160, %r8145;
	xor.b32  	%r8162, %r8161, %r8146;
	shf.l.wrap.b32 	%r8163, %r8162, %r8162, 16;
	xor.b32  	%r8164, %r8141, %r8140;
	xor.b32  	%r8165, %r8164, %r8148;
	xor.b32  	%r8166, %r8165, %r8145;
	xor.b32  	%r8167, %r8166, %r8146;
	xor.b32  	%r8168, %r8167, %r8147;
	xor.b32  	%r9638, %r8168, %r8163;
	xor.b32  	%r8169, %r8127, %r8125;
	xor.b32  	%r8170, %r8129, %r8125;
	xor.b32  	%r8171, %r8170, %r8142;
	xor.b32  	%r8172, %r8171, %r8137;
	xor.b32  	%r8173, %r8172, %r8146;
	xor.b32  	%r8174, %r8173, %r8147;
	shf.l.wrap.b32 	%r8175, %r8174, %r8174, 16;
	xor.b32  	%r8176, %r8141, %r8169;
	xor.b32  	%r8177, %r8176, %r8142;
	xor.b32  	%r8178, %r8177, %r8137;
	xor.b32  	%r8179, %r8178, %r8146;
	xor.b32  	%r8180, %r8179, %r8147;
	xor.b32  	%r9637, %r8180, %r8175;
	xor.b32  	%r8181, %r8169, %r8129;
	xor.b32  	%r8182, %r8140, %r8169;
	xor.b32  	%r8183, %r8182, %r8131;
	xor.b32  	%r8184, %r8183, %r8135;
	xor.b32  	%r8185, %r8184, %r8143;
	xor.b32  	%r8186, %r8185, %r8137;
	xor.b32  	%r8187, %r8186, %r8139;
	xor.b32  	%r8188, %r8187, %r8145;
	xor.b32  	%r8189, %r8188, %r8147;
	shf.l.wrap.b32 	%r8190, %r8189, %r8189, 16;
	xor.b32  	%r8191, %r8181, %r8140;
	xor.b32  	%r8192, %r8191, %r8142;
	xor.b32  	%r8193, %r8192, %r8135;
	xor.b32  	%r8194, %r8193, %r8143;
	xor.b32  	%r8195, %r8194, %r8137;
	xor.b32  	%r8196, %r8195, %r8145;
	xor.b32  	%r9636, %r8196, %r8190;
	xor.b32  	%r8197, %r8129, %r8127;
	xor.b32  	%r8198, %r8197, %r8131;
	xor.b32  	%r8199, %r8141, %r8197;
	xor.b32  	%r8200, %r8199, %r8133;
	xor.b32  	%r8201, %r8200, %r8135;
	xor.b32  	%r8202, %r8201, %r8144;
	xor.b32  	%r8203, %r8202, %r8139;
	xor.b32  	%r8204, %r8203, %r8145;
	xor.b32  	%r8205, %r8204, %r8146;
	shf.l.wrap.b32 	%r8206, %r8205, %r8205, 16;
	xor.b32  	%r8207, %r8198, %r8141;
	xor.b32  	%r8208, %r8207, %r8135;
	xor.b32  	%r8209, %r8208, %r8143;
	xor.b32  	%r8210, %r8209, %r8144;
	xor.b32  	%r8211, %r8210, %r8145;
	xor.b32  	%r8212, %r8211, %r8146;
	xor.b32  	%r8213, %r8212, %r8147;
	xor.b32  	%r9635, %r8213, %r8206;
	xor.b32  	%r8214, %r8131, %r8129;
	xor.b32  	%r8215, %r8214, %r8133;
	xor.b32  	%r8216, %r8142, %r8214;
	xor.b32  	%r8217, %r8216, %r8135;
	xor.b32  	%r8218, %r8217, %r8137;
	xor.b32  	%r8219, %r8218, %r8145;
	xor.b32  	%r8220, %r8219, %r8146;
	xor.b32  	%r8221, %r8220, %r8147;
	shf.l.wrap.b32 	%r8222, %r8221, %r8221, 16;
	xor.b32  	%r8223, %r8215, %r8142;
	xor.b32  	%r8224, %r8223, %r8137;
	xor.b32  	%r8225, %r8224, %r8144;
	xor.b32  	%r8226, %r8225, %r8145;
	xor.b32  	%r8227, %r8226, %r8146;
	xor.b32  	%r8228, %r8227, %r8147;
	xor.b32  	%r9634, %r8228, %r8222;
	xor.b32  	%r8229, %r8133, %r8131;
	xor.b32  	%r8230, %r8229, %r8135;
	xor.b32  	%r8231, %r8143, %r8229;
	xor.b32  	%r8232, %r8231, %r8137;
	xor.b32  	%r8233, %r8232, %r8139;
	xor.b32  	%r8234, %r8233, %r8146;
	xor.b32  	%r8235, %r8234, %r8147;
	shf.l.wrap.b32 	%r8236, %r8235, %r8235, 16;
	xor.b32  	%r8237, %r8230, %r8143;
	xor.b32  	%r8238, %r8237, %r8139;
	xor.b32  	%r8239, %r8238, %r8145;
	xor.b32  	%r8240, %r8239, %r8146;
	xor.b32  	%r8241, %r8240, %r8147;
	xor.b32  	%r9633, %r8241, %r8236;
	xor.b32  	%r8242, %r8135, %r8133;
	xor.b32  	%r8243, %r8242, %r8137;
	xor.b32  	%r8244, %r8243, %r8144;
	xor.b32  	%r8245, %r8244, %r8146;
	xor.b32  	%r8246, %r8245, %r8147;
	xor.b32  	%r8247, %r8144, %r8242;
	xor.b32  	%r8248, %r8247, %r8139;
	xor.b32  	%r8249, %r8248, %r8147;
	shf.l.wrap.b32 	%r8250, %r8249, %r8249, 16;
	xor.b32  	%r9632, %r8246, %r8250;
	add.s32 	%r9631, %r9631, -1;
	setp.ne.s32 	%p58, %r9631, 0;
	@%p58 bra 	$L__BB3_72;

$L__BB3_73:
	shl.b32 	%r8252, %r9639, 2;
	and.b32  	%r8253, %r8252, 64512;
	and.b32  	%r8254, %r9639, 255;
	or.b32  	%r8255, %r8253, %r8254;
	and.b32  	%r8256, %r9639, 49152;
	shr.u32 	%r8257, %r8256, 6;
	or.b32  	%r8258, %r8255, %r8257;
	shl.b32 	%r8259, %r9639, 4;
	and.b32  	%r8260, %r8259, 15728640;
	or.b32  	%r8261, %r8258, %r8260;
	and.b32  	%r8262, %r9639, 15728640;
	shr.u32 	%r8263, %r8262, 4;
	or.b32  	%r8264, %r8261, %r8263;
	shl.b32 	%r8265, %r9639, 6;
	and.b32  	%r8266, %r8265, -1073741824;
	or.b32  	%r8267, %r8264, %r8266;
	and.b32  	%r8268, %r9639, -67108864;
	shr.u32 	%r8269, %r8268, 2;
	or.b32  	%r8270, %r8267, %r8269;
	shl.b32 	%r8271, %r9638, 2;
	and.b32  	%r8272, %r8271, 64512;
	and.b32  	%r8273, %r9638, 255;
	or.b32  	%r8274, %r8272, %r8273;
	and.b32  	%r8275, %r9638, 49152;
	shr.u32 	%r8276, %r8275, 6;
	or.b32  	%r8277, %r8274, %r8276;
	shl.b32 	%r8278, %r9638, 4;
	and.b32  	%r8279, %r8278, 15728640;
	or.b32  	%r8280, %r8277, %r8279;
	and.b32  	%r8281, %r9638, 15728640;
	shr.u32 	%r8282, %r8281, 4;
	or.b32  	%r8283, %r8280, %r8282;
	shl.b32 	%r8284, %r9638, 6;
	and.b32  	%r8285, %r8284, -1073741824;
	or.b32  	%r8286, %r8283, %r8285;
	and.b32  	%r8287, %r9638, -67108864;
	shr.u32 	%r8288, %r8287, 2;
	or.b32  	%r8289, %r8286, %r8288;
	shl.b32 	%r8290, %r9637, 2;
	and.b32  	%r8291, %r8290, 64512;
	and.b32  	%r8292, %r9637, 255;
	or.b32  	%r8293, %r8291, %r8292;
	and.b32  	%r8294, %r9637, 49152;
	shr.u32 	%r8295, %r8294, 6;
	or.b32  	%r8296, %r8293, %r8295;
	shl.b32 	%r8297, %r9637, 4;
	and.b32  	%r8298, %r8297, 15728640;
	or.b32  	%r8299, %r8296, %r8298;
	and.b32  	%r8300, %r9637, 15728640;
	shr.u32 	%r8301, %r8300, 4;
	or.b32  	%r8302, %r8299, %r8301;
	shl.b32 	%r8303, %r9637, 6;
	and.b32  	%r8304, %r8303, -1073741824;
	or.b32  	%r8305, %r8302, %r8304;
	and.b32  	%r8306, %r9637, -67108864;
	shr.u32 	%r8307, %r8306, 2;
	or.b32  	%r8308, %r8305, %r8307;
	shl.b32 	%r8309, %r9636, 2;
	and.b32  	%r8310, %r8309, 64512;
	and.b32  	%r8311, %r9636, 255;
	or.b32  	%r8312, %r8310, %r8311;
	and.b32  	%r8313, %r9636, 49152;
	shr.u32 	%r8314, %r8313, 6;
	or.b32  	%r8315, %r8312, %r8314;
	shl.b32 	%r8316, %r9636, 4;
	and.b32  	%r8317, %r8316, 15728640;
	or.b32  	%r8318, %r8315, %r8317;
	and.b32  	%r8319, %r9636, 15728640;
	shr.u32 	%r8320, %r8319, 4;
	or.b32  	%r8321, %r8318, %r8320;
	shl.b32 	%r8322, %r9636, 6;
	and.b32  	%r8323, %r8322, -1073741824;
	or.b32  	%r8324, %r8321, %r8323;
	and.b32  	%r8325, %r9636, -67108864;
	shr.u32 	%r8326, %r8325, 2;
	or.b32  	%r8327, %r8324, %r8326;
	shl.b32 	%r8328, %r9635, 2;
	and.b32  	%r8329, %r8328, 64512;
	and.b32  	%r8330, %r9635, 255;
	or.b32  	%r8331, %r8329, %r8330;
	and.b32  	%r8332, %r9635, 49152;
	shr.u32 	%r8333, %r8332, 6;
	or.b32  	%r8334, %r8331, %r8333;
	shl.b32 	%r8335, %r9635, 4;
	and.b32  	%r8336, %r8335, 15728640;
	or.b32  	%r8337, %r8334, %r8336;
	and.b32  	%r8338, %r9635, 15728640;
	shr.u32 	%r8339, %r8338, 4;
	or.b32  	%r8340, %r8337, %r8339;
	shl.b32 	%r8341, %r9635, 6;
	and.b32  	%r8342, %r8341, -1073741824;
	or.b32  	%r8343, %r8340, %r8342;
	and.b32  	%r8344, %r9635, -67108864;
	shr.u32 	%r8345, %r8344, 2;
	or.b32  	%r8346, %r8343, %r8345;
	shl.b32 	%r8347, %r9634, 2;
	and.b32  	%r8348, %r8347, 64512;
	and.b32  	%r8349, %r9634, 255;
	or.b32  	%r8350, %r8348, %r8349;
	and.b32  	%r8351, %r9634, 49152;
	shr.u32 	%r8352, %r8351, 6;
	or.b32  	%r8353, %r8350, %r8352;
	shl.b32 	%r8354, %r9634, 4;
	and.b32  	%r8355, %r8354, 15728640;
	or.b32  	%r8356, %r8353, %r8355;
	and.b32  	%r8357, %r9634, 15728640;
	shr.u32 	%r8358, %r8357, 4;
	or.b32  	%r8359, %r8356, %r8358;
	shl.b32 	%r8360, %r9634, 6;
	and.b32  	%r8361, %r8360, -1073741824;
	or.b32  	%r8362, %r8359, %r8361;
	and.b32  	%r8363, %r9634, -67108864;
	shr.u32 	%r8364, %r8363, 2;
	or.b32  	%r8365, %r8362, %r8364;
	shl.b32 	%r8366, %r9633, 2;
	and.b32  	%r8367, %r8366, 64512;
	and.b32  	%r8368, %r9633, 255;
	or.b32  	%r8369, %r8367, %r8368;
	and.b32  	%r8370, %r9633, 49152;
	shr.u32 	%r8371, %r8370, 6;
	or.b32  	%r8372, %r8369, %r8371;
	shl.b32 	%r8373, %r9633, 4;
	and.b32  	%r8374, %r8373, 15728640;
	or.b32  	%r8375, %r8372, %r8374;
	and.b32  	%r8376, %r9633, 15728640;
	shr.u32 	%r8377, %r8376, 4;
	or.b32  	%r8378, %r8375, %r8377;
	shl.b32 	%r8379, %r9633, 6;
	and.b32  	%r8380, %r8379, -1073741824;
	or.b32  	%r8381, %r8378, %r8380;
	and.b32  	%r8382, %r9633, -67108864;
	shr.u32 	%r8383, %r8382, 2;
	or.b32  	%r8384, %r8381, %r8383;
	shl.b32 	%r8385, %r9632, 2;
	and.b32  	%r8386, %r8385, 64512;
	and.b32  	%r8387, %r9632, 255;
	or.b32  	%r8388, %r8386, %r8387;
	and.b32  	%r8389, %r9632, 49152;
	shr.u32 	%r8390, %r8389, 6;
	or.b32  	%r8391, %r8388, %r8390;
	shl.b32 	%r8392, %r9632, 4;
	and.b32  	%r8393, %r8392, 15728640;
	or.b32  	%r8394, %r8391, %r8393;
	and.b32  	%r8395, %r9632, 15728640;
	shr.u32 	%r8396, %r8395, 4;
	or.b32  	%r8397, %r8394, %r8396;
	shl.b32 	%r8398, %r9632, 6;
	and.b32  	%r8399, %r8398, -1073741824;
	or.b32  	%r8400, %r8397, %r8399;
	and.b32  	%r8401, %r9632, -67108864;
	shr.u32 	%r8402, %r8401, 2;
	or.b32  	%r8403, %r8400, %r8402;
	xor.b32  	%r8404, %r8327, %r8270;
	xor.b32  	%r8405, %r8346, %r8289;
	not.b32 	%r8406, %r8365;
	not.b32 	%r8407, %r8384;
	not.b32 	%r8408, %r8405;
	xor.b32  	%r8409, %r8408, %r8407;
	not.b32 	%r8410, %r8404;
	xor.b32  	%r8411, %r8410, %r8406;
	xor.b32  	%r8412, %r8346, %r8308;
	xor.b32  	%r8413, %r8412, %r8403;
	xor.b32  	%r8414, %r8327, %r8289;
	xor.b32  	%r8415, %r8414, %r8384;
	xor.b32  	%r8416, %r8308, %r8270;
	xor.b32  	%r8417, %r8416, %r8365;
	xor.b32  	%r8418, %r8408, %r8403;
	xor.b32  	%r8419, %r8410, %r8407;
	xor.b32  	%r8420, %r8308, %r8406;
	xor.b32  	%r8421, %r8420, %r8403;
	xor.b32  	%r8422, %r8418, %r8415;
	xor.b32  	%r8423, %r8410, %r8408;
	xor.b32  	%r8424, %r8415, %r8409;
	xor.b32  	%r8425, %r8403, %r8407;
	xor.b32  	%r8426, %r8413, %r8411;
	xor.b32  	%r8427, %r8421, %r8426;
	xor.b32  	%r8428, %r8427, %r8415;
	xor.b32  	%r8429, %r8423, %r8422;
	xor.b32  	%r8430, %r8427, %r8409;
	xor.b32  	%r8431, %r8427, %r8419;
	xor.b32  	%r8432, %r8431, %r8425;
	xor.b32  	%r8433, %r8429, %r8417;
	xor.b32  	%r8434, %r8433, %r8418;
	xor.b32  	%r8435, %r8433, %r8411;
	xor.b32  	%r8436, %r8434, %r8421;
	xor.b32  	%r8437, %r8434, %r8426;
	xor.b32  	%r8438, %r8435, %r8424;
	xor.b32  	%r8439, %r8438, %r8421;
	xor.b32  	%r8440, %r8437, %r8438;
	xor.b32  	%r8441, %r8438, %r8426;
	and.b32  	%r8442, %r8434, %r8429;
	and.b32  	%r8443, %r8436, %r8432;
	and.b32  	%r8444, %r8428, %r8421;
	and.b32  	%r8445, %r8441, %r8423;
	and.b32  	%r8446, %r8431, %r8427;
	and.b32  	%r8447, %r8439, %r8430;
	and.b32  	%r8448, %r8438, %r8424;
	and.b32  	%r8449, %r8440, %r8422;
	xor.b32  	%r8450, %r8449, %r8448;
	and.b32  	%r8451, %r8437, %r8425;
	xor.b32  	%r8452, %r8451, %r8448;
	xor.b32  	%r8453, %r8442, %r8435;
	xor.b32  	%r8454, %r8453, %r8443;
	xor.b32  	%r8455, %r8454, %r8450;
	xor.b32  	%r8456, %r8444, %r8425;
	xor.b32  	%r8457, %r8456, %r8437;
	xor.b32  	%r8458, %r8457, %r8442;
	xor.b32  	%r8459, %r8458, %r8452;
	xor.b32  	%r8460, %r8446, %r8423;
	xor.b32  	%r8461, %r8460, %r8441;
	xor.b32  	%r8462, %r8461, %r8445;
	xor.b32  	%r8463, %r8462, %r8450;
	xor.b32  	%r8464, %r8441, %r8409;
	xor.b32  	%r8465, %r8464, %r8445;
	xor.b32  	%r8466, %r8465, %r8447;
	xor.b32  	%r8467, %r8466, %r8452;
	xor.b32  	%r8468, %r8455, %r8459;
	and.b32  	%r8469, %r8455, %r8463;
	xor.b32  	%r8470, %r8469, %r8467;
	and.b32  	%r8471, %r8470, %r8468;
	xor.b32  	%r8472, %r8471, %r8459;
	xor.b32  	%r8473, %r8463, %r8467;
	xor.b32  	%r8474, %r8469, %r8459;
	and.b32  	%r8475, %r8474, %r8473;
	xor.b32  	%r8476, %r8475, %r8467;
	xor.b32  	%r8477, %r8476, %r8463;
	xor.b32  	%r8478, %r8475, %r8469;
	and.b32  	%r8479, %r8478, %r8467;
	xor.b32  	%r8480, %r8477, %r8479;
	xor.b32  	%r8481, %r8479, %r8470;
	and.b32  	%r8482, %r8481, %r8472;
	xor.b32  	%r8483, %r8482, %r8468;
	xor.b32  	%r8484, %r8483, %r8480;
	xor.b32  	%r8485, %r8472, %r8476;
	xor.b32  	%r8486, %r8483, %r8472;
	xor.b32  	%r8487, %r8479, %r8463;
	xor.b32  	%r8488, %r8484, %r8485;
	and.b32  	%r8489, %r8487, %r8434;
	and.b32  	%r8490, %r8480, %r8436;
	and.b32  	%r8491, %r8476, %r8421;
	and.b32  	%r8492, %r8486, %r8441;
	and.b32  	%r8493, %r8483, %r8427;
	and.b32  	%r8494, %r8472, %r8439;
	and.b32  	%r8495, %r8485, %r8438;
	and.b32  	%r8496, %r8488, %r8440;
	and.b32  	%r8497, %r8484, %r8437;
	and.b32  	%r8498, %r8487, %r8429;
	and.b32  	%r8499, %r8480, %r8432;
	and.b32  	%r8500, %r8476, %r8428;
	and.b32  	%r8501, %r8486, %r8423;
	and.b32  	%r8502, %r8483, %r8431;
	and.b32  	%r8503, %r8472, %r8430;
	and.b32  	%r8504, %r8485, %r8424;
	and.b32  	%r8505, %r8488, %r8422;
	and.b32  	%r8506, %r8484, %r8425;
	xor.b32  	%r8507, %r8505, %r8504;
	xor.b32  	%r8508, %r8499, %r8500;
	xor.b32  	%r8509, %r8502, %r8494;
	xor.b32  	%r8510, %r8498, %r8499;
	xor.b32  	%r8511, %r8501, %r8491;
	xor.b32  	%r8512, %r8491, %r8494;
	xor.b32  	%r8513, %r8496, %r8497;
	xor.b32  	%r8514, %r8492, %r8489;
	xor.b32  	%r8515, %r8501, %r8509;
	xor.b32  	%r8516, %r8511, %r8514;
	xor.b32  	%r8517, %r8507, %r8493;
	xor.b32  	%r8518, %r8492, %r8495;
	xor.b32  	%r8519, %r8518, %r8496;
	xor.b32  	%r8520, %r8507, %r8516;
	xor.b32  	%r8521, %r8516, %r8503;
	xor.b32  	%r8522, %r8513, %r8517;
	xor.b32  	%r8523, %r8510, %r8517;
	xor.b32  	%r8524, %r8519, %r8493;
	xor.b32  	%r8525, %r8521, %r8522;
	xor.b32  	%r8526, %r8523, %r8490;
	xor.b32  	%r8527, %r8523, %r8519;
	xor.b32  	%r8528, %r8526, %r8514;
	xor.b32  	%r8529, %r8522, %r8515;
	xor.b32  	%r8530, %r8528, %r8524;
	xor.b32  	%r8531, %r8529, %r8530;
	xor.b32  	%r8532, %r8508, %r8525;
	xor.b32  	%r8533, %r8505, %r8506;
	xor.b32  	%r8534, %r8533, %r8524;
	xor.b32  	%r8535, %r8520, %r8509;
	xor.b32  	%r8536, %r8534, %r8525;
	xor.b32  	%r8537, %r8535, %r8536;
	xor.b32  	%r8538, %r8537, %r8532;
	xor.b32  	%r8539, %r8512, %r8526;
	xor.b32  	%r8540, %r8531, %r8539;
	xor.b32  	%r8541, %r8524, %r8529;
	xor.b32  	%r8542, %r8537, %r8539;
	xor.b32  	%r8543, %r8527, %r8528;
	xor.b32  	%r8544, %r8543, %r8532;
	ld.local.u32 	%r8545, [%rd4+252];
	xor.b32  	%r8546, %r8538, %r8545;
	xor.b32  	%r8547, %r8543, %r8529;
	xor.b32  	%r8548, %r8535, %r8530;
	xor.b32  	%r8549, %r8548, %r8539;
	xor.b32  	%r8550, %r8527, %r8536;
	xor.b32  	%r8551, %r8550, %r8532;
	ld.local.u32 	%r8552, [%rd4+240];
	xor.b32  	%r8553, %r8551, %r8552;
	ld.local.u32 	%r8554, [%rd4+244];
	xor.b32  	%r8555, %r8549, %r8554;
	ld.local.u32 	%r8556, [%rd4+248];
	xor.b32  	%r8557, %r8547, %r8556;
	ld.local.u32 	%r8558, [%rd4+256];
	xor.b32  	%r8559, %r8540, %r8558;
	ld.local.u32 	%r8560, [%rd4+260];
	xor.b32  	%r8561, %r8544, %r8560;
	ld.local.u32 	%r8562, [%rd4+264];
	xor.b32  	%r8563, %r8542, %r8562;
	ld.local.u32 	%r8564, [%rd4+268];
	xor.b32  	%r8565, %r8541, %r8564;
	and.b32  	%r8566, %r8553, 1431655765;
	shl.b32 	%r8567, %r8555, 1;
	and.b32  	%r8568, %r8567, -1431655766;
	mov.u32 	%r9640, 1;
	or.b32  	%r8569, %r8568, %r8566;
	and.b32  	%r8570, %r8557, 1431655765;
	shl.b32 	%r8571, %r8546, 1;
	and.b32  	%r8572, %r8571, -1431655766;
	or.b32  	%r8573, %r8572, %r8570;
	and.b32  	%r8574, %r8559, 1431655765;
	shl.b32 	%r8575, %r8561, 1;
	and.b32  	%r8576, %r8575, -1431655766;
	or.b32  	%r8577, %r8576, %r8574;
	and.b32  	%r8578, %r8563, 1431655765;
	shl.b32 	%r8579, %r8565, 1;
	and.b32  	%r8580, %r8579, -1431655766;
	or.b32  	%r8581, %r8580, %r8578;
	and.b32  	%r8582, %r8569, 858993459;
	shl.b32 	%r8583, %r8573, 2;
	and.b32  	%r8584, %r8583, -858993460;
	or.b32  	%r8585, %r8584, %r8582;
	and.b32  	%r8586, %r8569, -858993460;
	shr.u32 	%r8587, %r8586, 2;
	and.b32  	%r8588, %r8573, -858993460;
	or.b32  	%r181, %r8587, %r8588;
	and.b32  	%r8589, %r8577, 858993459;
	shl.b32 	%r8590, %r8581, 2;
	and.b32  	%r8591, %r8590, -858993460;
	or.b32  	%r8592, %r8591, %r8589;
	and.b32  	%r8593, %r8577, -858993460;
	shr.u32 	%r8594, %r8593, 2;
	and.b32  	%r8595, %r8581, -858993460;
	or.b32  	%r182, %r8594, %r8595;
	and.b32  	%r8596, %r8585, 252645135;
	shl.b32 	%r8597, %r8592, 4;
	and.b32  	%r8598, %r8597, -252645136;
	or.b32  	%r183, %r8598, %r8596;
	and.b32  	%r8599, %r8585, -252645136;
	shr.u32 	%r8600, %r8599, 4;
	and.b32  	%r8601, %r8592, -252645136;
	or.b32  	%r184, %r8600, %r8601;
	cvt.u16.u32 	%rs69, %r183;
	ld.local.u8 	%rs70, [%rd6];
	xor.b16  	%rs71, %rs70, %rs69;
	st.local.u8 	[%rd113], %rs71;
	st.local.u8 	[%rd6], %rs17;
	setp.eq.s32 	%p59, %r9641, 1;
	@%p59 bra 	$L__BB3_89;

	shl.b32 	%r8603, %r182, 4;
	and.b32  	%r8604, %r8603, -252645136;
	and.b32  	%r8605, %r181, 252645135;
	or.b32  	%r185, %r8604, %r8605;
	and.b32  	%r8606, %r182, -252645136;
	and.b32  	%r8607, %r181, -252645136;
	shr.u32 	%r8608, %r8607, 4;
	or.b32  	%r186, %r8608, %r8606;
	shr.u16 	%rs73, %rs69, 8;
	ld.local.u8 	%rs74, [%rd6+1];
	xor.b16  	%rs75, %rs74, %rs73;
	st.local.u8 	[%rd113+1], %rs75;
	st.local.u8 	[%rd6+1], %rs18;
	setp.eq.s32 	%p60, %r9641, 2;
	mov.u32 	%r9640, 2;
	@%p60 bra 	$L__BB3_89;

	ld.local.u8 	%rs76, [%rd6+2];
	shr.u32 	%r8610, %r183, 16;
	cvt.u16.u32 	%rs77, %r8610;
	xor.b16  	%rs78, %rs76, %rs77;
	st.local.u8 	[%rd113+2], %rs78;
	st.local.u8 	[%rd6+2], %rs19;
	setp.lt.u32 	%p61, %r9641, 4;
	mov.u32 	%r9640, 3;
	@%p61 bra 	$L__BB3_89;

	ld.local.u8 	%rs79, [%rd6+3];
	shr.u32 	%r8612, %r183, 24;
	cvt.u16.u32 	%rs80, %r8612;
	xor.b16  	%rs81, %rs79, %rs80;
	st.local.u8 	[%rd113+3], %rs81;
	st.local.u8 	[%rd6+3], %rs20;
	setp.eq.s32 	%p62, %r9641, 4;
	mov.u32 	%r9640, 4;
	@%p62 bra 	$L__BB3_89;

	ld.local.u8 	%rs82, [%rd6+4];
	cvt.u16.u32 	%rs83, %r185;
	xor.b16  	%rs84, %rs82, %rs83;
	st.local.u8 	[%rd113+4], %rs84;
	st.local.u8 	[%rd6+4], %rs21;
	setp.lt.u32 	%p63, %r9641, 6;
	mov.u32 	%r9640, 5;
	@%p63 bra 	$L__BB3_89;

	ld.local.u8 	%rs85, [%rd6+5];
	shr.u16 	%rs87, %rs83, 8;
	xor.b16  	%rs88, %rs85, %rs87;
	st.local.u8 	[%rd113+5], %rs88;
	st.local.u8 	[%rd6+5], %rs22;
	setp.eq.s32 	%p64, %r9641, 6;
	mov.u32 	%r9640, 6;
	@%p64 bra 	$L__BB3_89;

	ld.local.u8 	%rs89, [%rd6+6];
	shr.u32 	%r8616, %r185, 16;
	cvt.u16.u32 	%rs90, %r8616;
	xor.b16  	%rs91, %rs89, %rs90;
	st.local.u8 	[%rd113+6], %rs91;
	st.local.u8 	[%rd6+6], %rs23;
	setp.lt.u32 	%p65, %r9641, 8;
	mov.u32 	%r9640, 7;
	@%p65 bra 	$L__BB3_89;

	ld.local.u8 	%rs92, [%rd6+7];
	shr.u32 	%r8618, %r185, 24;
	cvt.u16.u32 	%rs93, %r8618;
	xor.b16  	%rs94, %rs92, %rs93;
	st.local.u8 	[%rd113+7], %rs94;
	st.local.u8 	[%rd6+7], %rs24;
	setp.eq.s32 	%p66, %r9641, 8;
	mov.u32 	%r9640, 8;
	@%p66 bra 	$L__BB3_89;

	ld.local.u8 	%rs95, [%rd6+8];
	cvt.u16.u32 	%rs96, %r184;
	xor.b16  	%rs97, %rs95, %rs96;
	st.local.u8 	[%rd113+8], %rs97;
	st.local.u8 	[%rd6+8], %rs25;
	setp.lt.u32 	%p67, %r9641, 10;
	mov.u32 	%r9640, 9;
	@%p67 bra 	$L__BB3_89;

	ld.local.u8 	%rs98, [%rd6+9];
	shr.u16 	%rs100, %rs96, 8;
	xor.b16  	%rs101, %rs98, %rs100;
	st.local.u8 	[%rd113+9], %rs101;
	st.local.u8 	[%rd6+9], %rs26;
	setp.eq.s32 	%p68, %r9641, 10;
	mov.u32 	%r9640, 10;
	@%p68 bra 	$L__BB3_89;

	ld.local.u8 	%rs102, [%rd6+10];
	shr.u32 	%r8622, %r184, 16;
	cvt.u16.u32 	%rs103, %r8622;
	xor.b16  	%rs104, %rs102, %rs103;
	st.local.u8 	[%rd113+10], %rs104;
	st.local.u8 	[%rd6+10], %rs27;
	setp.lt.u32 	%p69, %r9641, 12;
	mov.u32 	%r9640, 11;
	@%p69 bra 	$L__BB3_89;

	ld.local.u8 	%rs105, [%rd6+11];
	shr.u32 	%r8624, %r184, 24;
	cvt.u16.u32 	%rs106, %r8624;
	xor.b16  	%rs107, %rs105, %rs106;
	st.local.u8 	[%rd113+11], %rs107;
	st.local.u8 	[%rd6+11], %rs28;
	setp.eq.s32 	%p70, %r9641, 12;
	mov.u32 	%r9640, 12;
	@%p70 bra 	$L__BB3_89;

	ld.local.u8 	%rs108, [%rd6+12];
	cvt.u16.u32 	%rs109, %r186;
	xor.b16  	%rs110, %rs108, %rs109;
	st.local.u8 	[%rd113+12], %rs110;
	st.local.u8 	[%rd6+12], %rs29;
	setp.lt.u32 	%p71, %r9641, 14;
	mov.u32 	%r9640, 13;
	@%p71 bra 	$L__BB3_89;

	ld.local.u8 	%rs111, [%rd6+13];
	shr.u16 	%rs113, %rs109, 8;
	xor.b16  	%rs114, %rs111, %rs113;
	st.local.u8 	[%rd113+13], %rs114;
	st.local.u8 	[%rd6+13], %rs30;
	setp.eq.s32 	%p72, %r9641, 14;
	mov.u32 	%r9640, 14;
	@%p72 bra 	$L__BB3_89;

	ld.local.u8 	%rs115, [%rd6+14];
	shr.u32 	%r8628, %r186, 16;
	cvt.u16.u32 	%rs116, %r8628;
	xor.b16  	%rs117, %rs115, %rs116;
	st.local.u8 	[%rd113+14], %rs117;
	st.local.u8 	[%rd6+14], %rs31;
	setp.lt.u32 	%p73, %r9641, 16;
	mov.u32 	%r9640, 15;
	@%p73 bra 	$L__BB3_89;

	ld.local.u8 	%rs118, [%rd6+15];
	shr.u32 	%r8630, %r186, 24;
	cvt.u16.u32 	%rs119, %r8630;
	xor.b16  	%rs120, %rs118, %rs119;
	st.local.u8 	[%rd113+15], %rs120;
	st.local.u8 	[%rd6+15], %rs32;
	mov.u32 	%r9640, 16;

$L__BB3_89:
	setp.lt.u32 	%p74, %r9641, 17;
	@%p74 bra 	$L__BB3_91;
	bra.uni 	$L__BB3_90;

$L__BB3_91:
	setp.gt.u32 	%p77, %r9640, 15;
	mov.pred 	%p115, 0;
	@%p77 bra 	$L__BB3_108;

	cvt.u64.u32 	%rd92, %r9640;
	add.s64 	%rd40, %rd112, %rd92;
	ld.const.u8 	%rs121, [%rd40];
	add.s64 	%rd41, %rd6, %rd92;
	st.local.u8 	[%rd41], %rs121;
	add.s32 	%r8631, %r9640, 1;
	setp.gt.u32 	%p79, %r8631, 15;
	@%p79 bra 	$L__BB3_108;

	ld.const.u8 	%rs122, [%rd40+1];
	st.local.u8 	[%rd41+1], %rs122;
	add.s32 	%r8632, %r9640, 2;
	setp.gt.u32 	%p81, %r8632, 15;
	@%p81 bra 	$L__BB3_108;

	ld.const.u8 	%rs123, [%rd40+2];
	st.local.u8 	[%rd41+2], %rs123;
	add.s32 	%r8633, %r9640, 3;
	setp.gt.u32 	%p83, %r8633, 15;
	@%p83 bra 	$L__BB3_108;

	ld.const.u8 	%rs124, [%rd40+3];
	st.local.u8 	[%rd41+3], %rs124;
	add.s32 	%r8634, %r9640, 4;
	setp.gt.u32 	%p85, %r8634, 15;
	@%p85 bra 	$L__BB3_108;

	ld.const.u8 	%rs125, [%rd40+4];
	st.local.u8 	[%rd41+4], %rs125;
	add.s32 	%r8635, %r9640, 5;
	setp.gt.u32 	%p87, %r8635, 15;
	@%p87 bra 	$L__BB3_108;

	ld.const.u8 	%rs126, [%rd40+5];
	st.local.u8 	[%rd41+5], %rs126;
	add.s32 	%r8636, %r9640, 6;
	setp.gt.u32 	%p89, %r8636, 15;
	@%p89 bra 	$L__BB3_108;

	ld.const.u8 	%rs127, [%rd40+6];
	st.local.u8 	[%rd41+6], %rs127;
	add.s32 	%r8637, %r9640, 7;
	setp.gt.u32 	%p91, %r8637, 15;
	@%p91 bra 	$L__BB3_108;

	ld.const.u8 	%rs128, [%rd40+7];
	st.local.u8 	[%rd41+7], %rs128;
	add.s32 	%r8638, %r9640, 8;
	setp.gt.u32 	%p93, %r8638, 15;
	@%p93 bra 	$L__BB3_108;

	ld.const.u8 	%rs129, [%rd40+8];
	st.local.u8 	[%rd41+8], %rs129;
	add.s32 	%r8639, %r9640, 9;
	setp.gt.u32 	%p95, %r8639, 15;
	@%p95 bra 	$L__BB3_108;

	ld.const.u8 	%rs130, [%rd40+9];
	st.local.u8 	[%rd41+9], %rs130;
	add.s32 	%r8640, %r9640, 10;
	setp.gt.u32 	%p97, %r8640, 15;
	@%p97 bra 	$L__BB3_108;

	ld.const.u8 	%rs131, [%rd40+10];
	st.local.u8 	[%rd41+10], %rs131;
	add.s32 	%r8641, %r9640, 11;
	setp.gt.u32 	%p99, %r8641, 15;
	@%p99 bra 	$L__BB3_108;

	ld.const.u8 	%rs132, [%rd40+11];
	st.local.u8 	[%rd41+11], %rs132;
	add.s32 	%r8642, %r9640, 12;
	setp.gt.u32 	%p101, %r8642, 15;
	@%p101 bra 	$L__BB3_108;

	ld.const.u8 	%rs133, [%rd40+12];
	st.local.u8 	[%rd41+12], %rs133;
	add.s32 	%r8643, %r9640, 13;
	setp.gt.u32 	%p103, %r8643, 15;
	@%p103 bra 	$L__BB3_108;

	ld.const.u8 	%rs134, [%rd40+13];
	st.local.u8 	[%rd41+13], %rs134;
	add.s32 	%r8644, %r9640, 14;
	setp.gt.u32 	%p105, %r8644, 15;
	@%p105 bra 	$L__BB3_108;

	ld.const.u8 	%rs135, [%rd40+14];
	st.local.u8 	[%rd41+14], %rs135;
	add.s32 	%r8645, %r9640, 15;
	setp.gt.u32 	%p107, %r8645, 15;
	@%p107 bra 	$L__BB3_108;

	ld.const.u8 	%rs136, [%rd40+15];
	st.local.u8 	[%rd41+15], %rs136;
	bra.uni 	$L__BB3_108;

$L__BB3_90:
	add.s32 	%r9641, %r9641, -16;
	add.s64 	%rd112, %rd112, 16;
	add.s64 	%rd113, %rd113, 16;
	mov.pred 	%p115, -1;

$L__BB3_108:
	@%p115 bra 	$L__BB3_70;

$L__BB3_109:
	mov.u32 	%r9563, 1732584193;
	shf.l.wrap.b32 	%r9562, %r9563, %r9563, 30;
	mov.u32 	%r9561, -271733879;
	shf.l.wrap.b32 	%r9560, %r9561, %r9561, 30;
	add.s32 	%r9559, %r9562, 1518500249;
	add.s32 	%r9558, %r9560, 1518500249;
	shf.l.wrap.b32 	%r8959, %r111, %r111, 16;
	shl.b32 	%r8960, %r8959, 8;
	and.b32  	%r8961, %r8960, -16711936;
	shr.u32 	%r8962, %r8959, 8;
	and.b32  	%r8963, %r8962, 16711935;
	or.b32  	%r8964, %r8961, %r8963;
	shf.l.wrap.b32 	%r8965, %r112, %r112, 16;
	shl.b32 	%r8966, %r8965, 8;
	and.b32  	%r8967, %r8966, -16711936;
	shr.u32 	%r8968, %r8965, 8;
	and.b32  	%r8969, %r8968, 16711935;
	or.b32  	%r8970, %r8967, %r8969;
	shf.l.wrap.b32 	%r8971, %r113, %r113, 16;
	shl.b32 	%r8972, %r8971, 8;
	and.b32  	%r8973, %r8972, -16711936;
	shr.u32 	%r8974, %r8971, 8;
	and.b32  	%r8975, %r8974, 16711935;
	or.b32  	%r8976, %r8973, %r8975;
	shf.l.wrap.b32 	%r8977, %r114, %r114, 16;
	shl.b32 	%r8978, %r8977, 8;
	and.b32  	%r8979, %r8978, -16711936;
	shr.u32 	%r8980, %r8977, 8;
	and.b32  	%r8981, %r8980, 16711935;
	or.b32  	%r8982, %r8979, %r8981;
	add.s32 	%r8647, %r36, %r8964;
	shf.l.wrap.b32 	%r8983, %r8647, %r8647, 5;
	add.s32 	%r8984, %r34, %r8970;
	add.s32 	%r8651, %r8984, %r8983;
	shf.l.wrap.b32 	%r8985, %r8651, %r8651, 5;
	// begin inline asm
	lop3.b32 %r8646, %r8647, %r9562, %r9560, 202;
	// end inline asm
	add.s32 	%r8986, %r8646, %r8976;
	add.s32 	%r8987, %r8986, %r8985;
	add.s32 	%r8655, %r8987, -214083945;
	shf.l.wrap.b32 	%r8657, %r8647, %r8647, 30;
	shf.l.wrap.b32 	%r8988, %r8655, %r8655, 5;
	// begin inline asm
	lop3.b32 %r8650, %r8651, %r8657, %r9562, 202;
	// end inline asm
	add.s32 	%r8989, %r9558, %r8650;
	add.s32 	%r8990, %r8989, %r8982;
	add.s32 	%r8659, %r8990, %r8988;
	shf.l.wrap.b32 	%r8661, %r8651, %r8651, 30;
	shf.l.wrap.b32 	%r8991, %r8659, %r8659, 5;
	// begin inline asm
	lop3.b32 %r8654, %r8655, %r8661, %r8657, 202;
	// end inline asm
	add.s32 	%r8992, %r9559, %r8654;
	xor.b32  	%r8993, %r8992, -2147483648;
	add.s32 	%r8663, %r8993, %r8991;
	shf.l.wrap.b32 	%r8665, %r8655, %r8655, 30;
	shf.l.wrap.b32 	%r8994, %r8663, %r8663, 5;
	// begin inline asm
	lop3.b32 %r8658, %r8659, %r8665, %r8661, 202;
	// end inline asm
	add.s32 	%r8995, %r8657, %r8658;
	add.s32 	%r8996, %r8995, %r8994;
	add.s32 	%r8667, %r8996, 1518500249;
	shf.l.wrap.b32 	%r8669, %r8659, %r8659, 30;
	shf.l.wrap.b32 	%r8997, %r8667, %r8667, 5;
	// begin inline asm
	lop3.b32 %r8662, %r8663, %r8669, %r8665, 202;
	// end inline asm
	add.s32 	%r8998, %r8661, %r8662;
	add.s32 	%r8999, %r8998, %r8997;
	add.s32 	%r8671, %r8999, 1518500249;
	shf.l.wrap.b32 	%r8673, %r8663, %r8663, 30;
	shf.l.wrap.b32 	%r9000, %r8671, %r8671, 5;
	// begin inline asm
	lop3.b32 %r8666, %r8667, %r8673, %r8669, 202;
	// end inline asm
	add.s32 	%r9001, %r8666, %r8665;
	add.s32 	%r9002, %r9001, %r9000;
	add.s32 	%r8675, %r9002, 1518500249;
	shf.l.wrap.b32 	%r8677, %r8667, %r8667, 30;
	shf.l.wrap.b32 	%r9003, %r8675, %r8675, 5;
	// begin inline asm
	lop3.b32 %r8670, %r8671, %r8677, %r8673, 202;
	// end inline asm
	add.s32 	%r9004, %r8670, %r8669;
	add.s32 	%r9005, %r9004, %r9003;
	add.s32 	%r8679, %r9005, 1518500249;
	shf.l.wrap.b32 	%r8681, %r8671, %r8671, 30;
	shf.l.wrap.b32 	%r9006, %r8679, %r8679, 5;
	// begin inline asm
	lop3.b32 %r8674, %r8675, %r8681, %r8677, 202;
	// end inline asm
	add.s32 	%r9007, %r8674, %r8673;
	add.s32 	%r9008, %r9007, %r9006;
	add.s32 	%r8683, %r9008, 1518500249;
	shf.l.wrap.b32 	%r8685, %r8675, %r8675, 30;
	shf.l.wrap.b32 	%r9009, %r8683, %r8683, 5;
	// begin inline asm
	lop3.b32 %r8678, %r8679, %r8685, %r8681, 202;
	// end inline asm
	add.s32 	%r9010, %r8678, %r8677;
	add.s32 	%r9011, %r9010, %r9009;
	add.s32 	%r8687, %r9011, 1518500249;
	shf.l.wrap.b32 	%r8689, %r8679, %r8679, 30;
	shf.l.wrap.b32 	%r9012, %r8687, %r8687, 5;
	// begin inline asm
	lop3.b32 %r8682, %r8683, %r8689, %r8685, 202;
	// end inline asm
	add.s32 	%r9013, %r8682, %r8681;
	add.s32 	%r9014, %r9013, %r9012;
	add.s32 	%r8691, %r9014, 1518500249;
	shf.l.wrap.b32 	%r8693, %r8683, %r8683, 30;
	shf.l.wrap.b32 	%r9015, %r8691, %r8691, 5;
	// begin inline asm
	lop3.b32 %r8686, %r8687, %r8693, %r8689, 202;
	// end inline asm
	add.s32 	%r9016, %r8686, %r8685;
	add.s32 	%r9017, %r9016, %r9015;
	add.s32 	%r8695, %r9017, 1518500249;
	shf.l.wrap.b32 	%r8697, %r8687, %r8687, 30;
	shf.l.wrap.b32 	%r9018, %r8695, %r8695, 5;
	// begin inline asm
	lop3.b32 %r8690, %r8691, %r8697, %r8693, 202;
	// end inline asm
	add.s32 	%r9019, %r8690, %r8689;
	add.s32 	%r9020, %r9019, %r9018;
	add.s32 	%r8699, %r9020, 1518500249;
	shf.l.wrap.b32 	%r8701, %r8691, %r8691, 30;
	shf.l.wrap.b32 	%r9021, %r8699, %r8699, 5;
	// begin inline asm
	lop3.b32 %r8694, %r8695, %r8701, %r8697, 202;
	// end inline asm
	add.s32 	%r9022, %r8694, %r8693;
	add.s32 	%r9023, %r9022, %r9021;
	add.s32 	%r8703, %r9023, 1518500249;
	shf.l.wrap.b32 	%r8705, %r8695, %r8695, 30;
	shf.l.wrap.b32 	%r9024, %r8703, %r8703, 5;
	// begin inline asm
	lop3.b32 %r8698, %r8699, %r8705, %r8701, 202;
	// end inline asm
	add.s32 	%r9025, %r8698, %r8697;
	add.s32 	%r9026, %r9025, %r9024;
	add.s32 	%r8707, %r9026, 1518500377;
	shf.l.wrap.b32 	%r8709, %r8699, %r8699, 30;
	shf.l.wrap.b32 	%r9027, %r8707, %r8707, 5;
	// begin inline asm
	lop3.b32 %r8702, %r8703, %r8709, %r8705, 202;
	// end inline asm
	xor.b32  	%r9028, %r8976, %r8964;
	shf.l.wrap.b32 	%r9029, %r9028, %r9028, 1;
	add.s32 	%r9030, %r8702, %r9029;
	add.s32 	%r9031, %r9030, %r8701;
	add.s32 	%r9032, %r9031, %r9027;
	add.s32 	%r8711, %r9032, 1518500249;
	shf.l.wrap.b32 	%r8713, %r8703, %r8703, 30;
	shf.l.wrap.b32 	%r9033, %r8711, %r8711, 5;
	// begin inline asm
	lop3.b32 %r8706, %r8707, %r8713, %r8709, 202;
	// end inline asm
	xor.b32  	%r9034, %r8982, %r8970;
	shf.l.wrap.b32 	%r9035, %r9034, %r9034, 1;
	add.s32 	%r9036, %r8706, %r9035;
	add.s32 	%r9037, %r9036, %r8705;
	add.s32 	%r9038, %r9037, %r9033;
	add.s32 	%r8715, %r9038, 1518500249;
	shf.l.wrap.b32 	%r8717, %r8707, %r8707, 30;
	shf.l.wrap.b32 	%r9039, %r8715, %r8715, 5;
	// begin inline asm
	lop3.b32 %r8710, %r8711, %r8717, %r8713, 202;
	// end inline asm
	xor.b32  	%r9040, %r8976, -2147483520;
	shf.l.wrap.b32 	%r9041, %r9040, %r9040, 1;
	add.s32 	%r9042, %r8710, %r9041;
	add.s32 	%r9043, %r9042, %r8709;
	add.s32 	%r9044, %r9043, %r9039;
	add.s32 	%r8719, %r9044, 1518500249;
	shf.l.wrap.b32 	%r8721, %r8711, %r8711, 30;
	shf.l.wrap.b32 	%r9045, %r8719, %r8719, 5;
	// begin inline asm
	lop3.b32 %r8714, %r8715, %r8721, %r8717, 202;
	// end inline asm
	xor.b32  	%r9046, %r9029, %r8982;
	shf.l.wrap.b32 	%r9047, %r9046, %r9046, 1;
	add.s32 	%r9048, %r8714, %r9047;
	add.s32 	%r9049, %r9048, %r8713;
	add.s32 	%r9050, %r9049, %r9045;
	add.s32 	%r8723, %r9050, 1518500249;
	shf.l.wrap.b32 	%r8725, %r8715, %r8715, 30;
	shf.l.wrap.b32 	%r9051, %r8723, %r8723, 5;
	// begin inline asm
	lop3.b32 %r8718, %r8719, %r8725, %r8721, 150;
	// end inline asm
	xor.b32  	%r9052, %r9035, -2147483648;
	shf.l.wrap.b32 	%r9053, %r9052, %r9052, 1;
	add.s32 	%r9054, %r8718, %r9053;
	add.s32 	%r9055, %r9054, %r8717;
	add.s32 	%r9056, %r9055, %r9051;
	add.s32 	%r8727, %r9056, 1859775393;
	shf.l.wrap.b32 	%r8729, %r8719, %r8719, 30;
	shf.l.wrap.b32 	%r9057, %r8727, %r8727, 5;
	// begin inline asm
	lop3.b32 %r8722, %r8723, %r8729, %r8725, 150;
	// end inline asm
	shf.l.wrap.b32 	%r9058, %r9041, %r9041, 1;
	add.s32 	%r9059, %r8722, %r9058;
	add.s32 	%r9060, %r9059, %r8721;
	add.s32 	%r9061, %r9060, %r9057;
	add.s32 	%r8731, %r9061, 1859775393;
	shf.l.wrap.b32 	%r8733, %r8723, %r8723, 30;
	shf.l.wrap.b32 	%r9062, %r8731, %r8731, 5;
	// begin inline asm
	lop3.b32 %r8726, %r8727, %r8733, %r8729, 150;
	// end inline asm
	shf.l.wrap.b32 	%r9063, %r9047, %r9047, 1;
	add.s32 	%r9064, %r8726, %r9063;
	add.s32 	%r9065, %r9064, %r8725;
	add.s32 	%r9066, %r9065, %r9062;
	add.s32 	%r8735, %r9066, 1859775393;
	shf.l.wrap.b32 	%r8737, %r8727, %r8727, 30;
	shf.l.wrap.b32 	%r9067, %r8735, %r8735, 5;
	// begin inline asm
	lop3.b32 %r8730, %r8731, %r8737, %r8733, 150;
	// end inline asm
	xor.b32  	%r9068, %r9053, 128;
	shf.l.wrap.b32 	%r9069, %r9068, %r9068, 1;
	add.s32 	%r9070, %r8730, %r9069;
	add.s32 	%r9071, %r9070, %r8729;
	add.s32 	%r9072, %r9071, %r9067;
	add.s32 	%r8739, %r9072, 1859775393;
	shf.l.wrap.b32 	%r8741, %r8731, %r8731, 30;
	shf.l.wrap.b32 	%r9073, %r8739, %r8739, 5;
	// begin inline asm
	lop3.b32 %r8734, %r8735, %r8741, %r8737, 150;
	// end inline asm
	xor.b32  	%r9074, %r9058, %r9029;
	shf.l.wrap.b32 	%r9075, %r9074, %r9074, 1;
	add.s32 	%r9076, %r8734, %r9075;
	add.s32 	%r9077, %r9076, %r8733;
	add.s32 	%r9078, %r9077, %r9073;
	add.s32 	%r8743, %r9078, 1859775393;
	shf.l.wrap.b32 	%r8745, %r8735, %r8735, 30;
	shf.l.wrap.b32 	%r9079, %r8743, %r8743, 5;
	// begin inline asm
	lop3.b32 %r8738, %r8739, %r8745, %r8741, 150;
	// end inline asm
	xor.b32  	%r9080, %r9063, %r9035;
	shf.l.wrap.b32 	%r9081, %r9080, %r9080, 1;
	add.s32 	%r9082, %r8738, %r9081;
	add.s32 	%r9083, %r9082, %r8737;
	add.s32 	%r9084, %r9083, %r9079;
	add.s32 	%r8747, %r9084, 1859775393;
	shf.l.wrap.b32 	%r8749, %r8739, %r8739, 30;
	shf.l.wrap.b32 	%r9085, %r8747, %r8747, 5;
	// begin inline asm
	lop3.b32 %r8742, %r8743, %r8749, %r8745, 150;
	// end inline asm
	xor.b32  	%r9086, %r9069, %r9041;
	shf.l.wrap.b32 	%r9087, %r9086, %r9086, 1;
	add.s32 	%r9088, %r8742, %r9087;
	add.s32 	%r9089, %r9088, %r8741;
	add.s32 	%r9090, %r9089, %r9085;
	add.s32 	%r8751, %r9090, 1859775393;
	shf.l.wrap.b32 	%r8753, %r8743, %r8743, 30;
	shf.l.wrap.b32 	%r9091, %r8751, %r8751, 5;
	// begin inline asm
	lop3.b32 %r8746, %r8747, %r8753, %r8749, 150;
	// end inline asm
	xor.b32  	%r9092, %r9075, %r9047;
	shf.l.wrap.b32 	%r9093, %r9092, %r9092, 1;
	add.s32 	%r9094, %r8746, %r9093;
	add.s32 	%r9095, %r9094, %r8745;
	add.s32 	%r9096, %r9095, %r9091;
	add.s32 	%r8755, %r9096, 1859775393;
	shf.l.wrap.b32 	%r8757, %r8747, %r8747, 30;
	shf.l.wrap.b32 	%r9097, %r8755, %r8755, 5;
	// begin inline asm
	lop3.b32 %r8750, %r8751, %r8757, %r8753, 150;
	// end inline asm
	xor.b32  	%r9098, %r9081, %r9053;
	shf.l.wrap.b32 	%r9099, %r9098, %r9098, 1;
	add.s32 	%r9100, %r8750, %r9099;
	add.s32 	%r9101, %r9100, %r8749;
	add.s32 	%r9102, %r9101, %r9097;
	add.s32 	%r8759, %r9102, 1859775393;
	shf.l.wrap.b32 	%r8761, %r8751, %r8751, 30;
	shf.l.wrap.b32 	%r9103, %r8759, %r8759, 5;
	// begin inline asm
	lop3.b32 %r8754, %r8755, %r8761, %r8757, 150;
	// end inline asm
	xor.b32  	%r9104, %r9087, %r9058;
	xor.b32  	%r9105, %r9104, 128;
	shf.l.wrap.b32 	%r9106, %r9105, %r9105, 1;
	add.s32 	%r9107, %r8754, %r9106;
	add.s32 	%r9108, %r9107, %r8753;
	add.s32 	%r9109, %r9108, %r9103;
	add.s32 	%r8763, %r9109, 1859775393;
	shf.l.wrap.b32 	%r8765, %r8755, %r8755, 30;
	shf.l.wrap.b32 	%r9110, %r8763, %r8763, 5;
	// begin inline asm
	lop3.b32 %r8758, %r8759, %r8765, %r8761, 150;
	// end inline asm
	xor.b32  	%r9111, %r9063, %r9029;
	xor.b32  	%r9112, %r9111, %r9093;
	shf.l.wrap.b32 	%r9113, %r9112, %r9112, 1;
	add.s32 	%r9114, %r8758, %r9113;
	add.s32 	%r9115, %r9114, %r8757;
	add.s32 	%r9116, %r9115, %r9110;
	add.s32 	%r8767, %r9116, 1859775393;
	shf.l.wrap.b32 	%r8769, %r8759, %r8759, 30;
	shf.l.wrap.b32 	%r9117, %r8767, %r8767, 5;
	// begin inline asm
	lop3.b32 %r8762, %r8763, %r8769, %r8765, 150;
	// end inline asm
	xor.b32  	%r9118, %r9069, %r9035;
	xor.b32  	%r9119, %r9118, %r9099;
	xor.b32  	%r9120, %r9119, 128;
	shf.l.wrap.b32 	%r9121, %r9120, %r9120, 1;
	add.s32 	%r9122, %r8762, %r9121;
	add.s32 	%r9123, %r9122, %r8761;
	add.s32 	%r9124, %r9123, %r9117;
	add.s32 	%r8771, %r9124, 1859775393;
	shf.l.wrap.b32 	%r8773, %r8763, %r8763, 30;
	shf.l.wrap.b32 	%r9125, %r8771, %r8771, 5;
	// begin inline asm
	lop3.b32 %r8766, %r8767, %r8773, %r8769, 150;
	// end inline asm
	xor.b32  	%r9126, %r9041, %r9029;
	xor.b32  	%r9127, %r9126, %r9075;
	xor.b32  	%r9128, %r9127, %r9106;
	shf.l.wrap.b32 	%r9129, %r9128, %r9128, 1;
	add.s32 	%r9130, %r8766, %r9129;
	add.s32 	%r9131, %r9130, %r8765;
	add.s32 	%r9132, %r9131, %r9125;
	add.s32 	%r8775, %r9132, 1859775393;
	shf.l.wrap.b32 	%r8777, %r8767, %r8767, 30;
	shf.l.wrap.b32 	%r9133, %r8775, %r8775, 5;
	// begin inline asm
	lop3.b32 %r8770, %r8771, %r8777, %r8773, 150;
	// end inline asm
	xor.b32  	%r9134, %r9047, %r9035;
	xor.b32  	%r9135, %r9134, %r9081;
	xor.b32  	%r9136, %r9135, %r9113;
	shf.l.wrap.b32 	%r9137, %r9136, %r9136, 1;
	add.s32 	%r9138, %r8770, %r9137;
	add.s32 	%r9139, %r9138, %r8769;
	add.s32 	%r9140, %r9139, %r9133;
	add.s32 	%r8779, %r9140, 1859775393;
	shf.l.wrap.b32 	%r8781, %r8771, %r8771, 30;
	shf.l.wrap.b32 	%r9141, %r8779, %r8779, 5;
	// begin inline asm
	lop3.b32 %r8774, %r8775, %r8781, %r8777, 150;
	// end inline asm
	xor.b32  	%r9142, %r9053, %r9041;
	xor.b32  	%r9143, %r9142, %r9087;
	xor.b32  	%r9144, %r9143, %r9121;
	shf.l.wrap.b32 	%r9145, %r9144, %r9144, 1;
	add.s32 	%r9146, %r8774, %r9145;
	add.s32 	%r9147, %r9146, %r8773;
	add.s32 	%r9148, %r9147, %r9141;
	add.s32 	%r8783, %r9148, 1859775393;
	shf.l.wrap.b32 	%r8785, %r8775, %r8775, 30;
	shf.l.wrap.b32 	%r9149, %r8783, %r8783, 5;
	// begin inline asm
	lop3.b32 %r8778, %r8779, %r8785, %r8781, 150;
	// end inline asm
	xor.b32  	%r9150, %r9058, %r9047;
	xor.b32  	%r9151, %r9150, %r9093;
	xor.b32  	%r9152, %r9151, %r9129;
	shf.l.wrap.b32 	%r9153, %r9152, %r9152, 1;
	add.s32 	%r9154, %r8778, %r9153;
	add.s32 	%r9155, %r9154, %r8777;
	add.s32 	%r9156, %r9155, %r9149;
	add.s32 	%r8787, %r9156, 1859775393;
	shf.l.wrap.b32 	%r8789, %r8779, %r8779, 30;
	shf.l.wrap.b32 	%r9157, %r8787, %r8787, 5;
	// begin inline asm
	lop3.b32 %r8782, %r8783, %r8789, %r8785, 150;
	// end inline asm
	xor.b32  	%r9158, %r9063, %r9053;
	xor.b32  	%r9159, %r9158, %r9099;
	xor.b32  	%r9160, %r9159, %r9137;
	shf.l.wrap.b32 	%r9161, %r9160, %r9160, 1;
	add.s32 	%r9162, %r8782, %r9161;
	add.s32 	%r9163, %r9162, %r8781;
	add.s32 	%r9164, %r9163, %r9157;
	add.s32 	%r8791, %r9164, 1859775393;
	shf.l.wrap.b32 	%r8793, %r8783, %r8783, 30;
	shf.l.wrap.b32 	%r9165, %r8791, %r8791, 5;
	// begin inline asm
	lop3.b32 %r8786, %r8787, %r8793, %r8789, 150;
	// end inline asm
	xor.b32  	%r9166, %r9069, %r9058;
	xor.b32  	%r9167, %r9166, %r9106;
	xor.b32  	%r9168, %r9167, %r9145;
	shf.l.wrap.b32 	%r9169, %r9168, %r9168, 1;
	add.s32 	%r9170, %r8786, %r9169;
	add.s32 	%r9171, %r9170, %r8785;
	add.s32 	%r9172, %r9171, %r9165;
	add.s32 	%r8795, %r9172, 1859775393;
	shf.l.wrap.b32 	%r8797, %r8787, %r8787, 30;
	shf.l.wrap.b32 	%r9173, %r8795, %r8795, 5;
	// begin inline asm
	lop3.b32 %r8790, %r8791, %r8797, %r8793, 150;
	// end inline asm
	xor.b32  	%r9174, %r9075, %r9063;
	xor.b32  	%r9175, %r9174, %r9113;
	xor.b32  	%r9176, %r9175, %r9153;
	shf.l.wrap.b32 	%r9177, %r9176, %r9176, 1;
	add.s32 	%r9178, %r8790, %r9177;
	add.s32 	%r9179, %r9178, %r8789;
	add.s32 	%r9180, %r9179, %r9173;
	add.s32 	%r8799, %r9180, 1859775393;
	shf.l.wrap.b32 	%r8801, %r8791, %r8791, 30;
	shf.l.wrap.b32 	%r9181, %r8799, %r8799, 5;
	// begin inline asm
	lop3.b32 %r8794, %r8795, %r8801, %r8797, 150;
	// end inline asm
	xor.b32  	%r9182, %r9081, %r9069;
	xor.b32  	%r9183, %r9182, %r9121;
	xor.b32  	%r9184, %r9183, %r9161;
	shf.l.wrap.b32 	%r9185, %r9184, %r9184, 1;
	add.s32 	%r9186, %r8794, %r9185;
	add.s32 	%r9187, %r9186, %r8793;
	add.s32 	%r9188, %r9187, %r9181;
	add.s32 	%r8803, %r9188, 1859775393;
	shf.l.wrap.b32 	%r8805, %r8795, %r8795, 30;
	shf.l.wrap.b32 	%r9189, %r8803, %r8803, 5;
	// begin inline asm
	lop3.b32 %r8798, %r8799, %r8805, %r8801, 232;
	// end inline asm
	xor.b32  	%r9190, %r9087, %r9075;
	xor.b32  	%r9191, %r9190, %r9129;
	xor.b32  	%r9192, %r9191, %r9169;
	shf.l.wrap.b32 	%r9193, %r9192, %r9192, 1;
	add.s32 	%r9194, %r8798, %r9193;
	add.s32 	%r9195, %r9194, %r8797;
	add.s32 	%r9196, %r9195, %r9189;
	add.s32 	%r8807, %r9196, -1894007588;
	shf.l.wrap.b32 	%r8809, %r8799, %r8799, 30;
	shf.l.wrap.b32 	%r9197, %r8807, %r8807, 5;
	// begin inline asm
	lop3.b32 %r8802, %r8803, %r8809, %r8805, 232;
	// end inline asm
	xor.b32  	%r9198, %r9093, %r9081;
	xor.b32  	%r9199, %r9198, %r9137;
	xor.b32  	%r9200, %r9199, %r9177;
	shf.l.wrap.b32 	%r9201, %r9200, %r9200, 1;
	add.s32 	%r9202, %r8802, %r9201;
	add.s32 	%r9203, %r9202, %r8801;
	add.s32 	%r9204, %r9203, %r9197;
	add.s32 	%r8811, %r9204, -1894007588;
	shf.l.wrap.b32 	%r8813, %r8803, %r8803, 30;
	shf.l.wrap.b32 	%r9205, %r8811, %r8811, 5;
	// begin inline asm
	lop3.b32 %r8806, %r8807, %r8813, %r8809, 232;
	// end inline asm
	xor.b32  	%r9206, %r9099, %r9087;
	xor.b32  	%r9207, %r9206, %r9145;
	xor.b32  	%r9208, %r9207, %r9185;
	shf.l.wrap.b32 	%r9209, %r9208, %r9208, 1;
	add.s32 	%r9210, %r8806, %r9209;
	add.s32 	%r9211, %r9210, %r8805;
	add.s32 	%r9212, %r9211, %r9205;
	add.s32 	%r8815, %r9212, -1894007588;
	shf.l.wrap.b32 	%r8817, %r8807, %r8807, 30;
	shf.l.wrap.b32 	%r9213, %r8815, %r8815, 5;
	// begin inline asm
	lop3.b32 %r8810, %r8811, %r8817, %r8813, 232;
	// end inline asm
	xor.b32  	%r9214, %r9106, %r9093;
	xor.b32  	%r9215, %r9214, %r9153;
	xor.b32  	%r9216, %r9215, %r9193;
	shf.l.wrap.b32 	%r9217, %r9216, %r9216, 1;
	add.s32 	%r9218, %r8810, %r9217;
	add.s32 	%r9219, %r9218, %r8809;
	add.s32 	%r9220, %r9219, %r9213;
	add.s32 	%r8819, %r9220, -1894007588;
	shf.l.wrap.b32 	%r8821, %r8811, %r8811, 30;
	shf.l.wrap.b32 	%r9221, %r8819, %r8819, 5;
	// begin inline asm
	lop3.b32 %r8814, %r8815, %r8821, %r8817, 232;
	// end inline asm
	xor.b32  	%r9222, %r9113, %r9099;
	xor.b32  	%r9223, %r9222, %r9161;
	xor.b32  	%r9224, %r9223, %r9201;
	shf.l.wrap.b32 	%r9225, %r9224, %r9224, 1;
	add.s32 	%r9226, %r8814, %r9225;
	add.s32 	%r9227, %r9226, %r8813;
	add.s32 	%r9228, %r9227, %r9221;
	add.s32 	%r8823, %r9228, -1894007588;
	shf.l.wrap.b32 	%r8825, %r8815, %r8815, 30;
	shf.l.wrap.b32 	%r9229, %r8823, %r8823, 5;
	// begin inline asm
	lop3.b32 %r8818, %r8819, %r8825, %r8821, 232;
	// end inline asm
	xor.b32  	%r9230, %r9121, %r9106;
	xor.b32  	%r9231, %r9230, %r9169;
	xor.b32  	%r9232, %r9231, %r9209;
	shf.l.wrap.b32 	%r9233, %r9232, %r9232, 1;
	add.s32 	%r9234, %r8818, %r9233;
	add.s32 	%r9235, %r9234, %r8817;
	add.s32 	%r9236, %r9235, %r9229;
	add.s32 	%r8827, %r9236, -1894007588;
	shf.l.wrap.b32 	%r8829, %r8819, %r8819, 30;
	shf.l.wrap.b32 	%r9237, %r8827, %r8827, 5;
	// begin inline asm
	lop3.b32 %r8822, %r8823, %r8829, %r8825, 232;
	// end inline asm
	xor.b32  	%r9238, %r9129, %r9113;
	xor.b32  	%r9239, %r9238, %r9177;
	xor.b32  	%r9240, %r9239, %r9217;
	shf.l.wrap.b32 	%r9241, %r9240, %r9240, 1;
	add.s32 	%r9242, %r8822, %r9241;
	add.s32 	%r9243, %r9242, %r8821;
	add.s32 	%r9244, %r9243, %r9237;
	add.s32 	%r8831, %r9244, -1894007588;
	shf.l.wrap.b32 	%r8833, %r8823, %r8823, 30;
	shf.l.wrap.b32 	%r9245, %r8831, %r8831, 5;
	// begin inline asm
	lop3.b32 %r8826, %r8827, %r8833, %r8829, 232;
	// end inline asm
	xor.b32  	%r9246, %r9137, %r9121;
	xor.b32  	%r9247, %r9246, %r9185;
	xor.b32  	%r9248, %r9247, %r9225;
	shf.l.wrap.b32 	%r9249, %r9248, %r9248, 1;
	add.s32 	%r9250, %r8826, %r9249;
	add.s32 	%r9251, %r9250, %r8825;
	add.s32 	%r9252, %r9251, %r9245;
	add.s32 	%r8835, %r9252, -1894007588;
	shf.l.wrap.b32 	%r8837, %r8827, %r8827, 30;
	shf.l.wrap.b32 	%r9253, %r8835, %r8835, 5;
	// begin inline asm
	lop3.b32 %r8830, %r8831, %r8837, %r8833, 232;
	// end inline asm
	xor.b32  	%r9254, %r9145, %r9129;
	xor.b32  	%r9255, %r9254, %r9193;
	xor.b32  	%r9256, %r9255, %r9233;
	shf.l.wrap.b32 	%r9257, %r9256, %r9256, 1;
	add.s32 	%r9258, %r8830, %r9257;
	add.s32 	%r9259, %r9258, %r8829;
	add.s32 	%r9260, %r9259, %r9253;
	add.s32 	%r8839, %r9260, -1894007588;
	shf.l.wrap.b32 	%r8841, %r8831, %r8831, 30;
	shf.l.wrap.b32 	%r9261, %r8839, %r8839, 5;
	// begin inline asm
	lop3.b32 %r8834, %r8835, %r8841, %r8837, 232;
	// end inline asm
	xor.b32  	%r9262, %r9153, %r9137;
	xor.b32  	%r9263, %r9262, %r9201;
	xor.b32  	%r9264, %r9263, %r9241;
	shf.l.wrap.b32 	%r9265, %r9264, %r9264, 1;
	add.s32 	%r9266, %r8834, %r9265;
	add.s32 	%r9267, %r9266, %r8833;
	add.s32 	%r9268, %r9267, %r9261;
	add.s32 	%r8843, %r9268, -1894007588;
	shf.l.wrap.b32 	%r8845, %r8835, %r8835, 30;
	shf.l.wrap.b32 	%r9269, %r8843, %r8843, 5;
	// begin inline asm
	lop3.b32 %r8838, %r8839, %r8845, %r8841, 232;
	// end inline asm
	xor.b32  	%r9270, %r9161, %r9145;
	xor.b32  	%r9271, %r9270, %r9209;
	xor.b32  	%r9272, %r9271, %r9249;
	shf.l.wrap.b32 	%r9273, %r9272, %r9272, 1;
	add.s32 	%r9274, %r8838, %r9273;
	add.s32 	%r9275, %r9274, %r8837;
	add.s32 	%r9276, %r9275, %r9269;
	add.s32 	%r8847, %r9276, -1894007588;
	shf.l.wrap.b32 	%r8849, %r8839, %r8839, 30;
	shf.l.wrap.b32 	%r9277, %r8847, %r8847, 5;
	// begin inline asm
	lop3.b32 %r8842, %r8843, %r8849, %r8845, 232;
	// end inline asm
	xor.b32  	%r9278, %r9169, %r9153;
	xor.b32  	%r9279, %r9278, %r9217;
	xor.b32  	%r9280, %r9279, %r9257;
	shf.l.wrap.b32 	%r9281, %r9280, %r9280, 1;
	add.s32 	%r9282, %r8842, %r9281;
	add.s32 	%r9283, %r9282, %r8841;
	add.s32 	%r9284, %r9283, %r9277;
	add.s32 	%r8851, %r9284, -1894007588;
	shf.l.wrap.b32 	%r8853, %r8843, %r8843, 30;
	shf.l.wrap.b32 	%r9285, %r8851, %r8851, 5;
	// begin inline asm
	lop3.b32 %r8846, %r8847, %r8853, %r8849, 232;
	// end inline asm
	xor.b32  	%r9286, %r9177, %r9161;
	xor.b32  	%r9287, %r9286, %r9225;
	xor.b32  	%r9288, %r9287, %r9265;
	shf.l.wrap.b32 	%r9289, %r9288, %r9288, 1;
	add.s32 	%r9290, %r8846, %r9289;
	add.s32 	%r9291, %r9290, %r8845;
	add.s32 	%r9292, %r9291, %r9285;
	add.s32 	%r8855, %r9292, -1894007588;
	shf.l.wrap.b32 	%r8857, %r8847, %r8847, 30;
	shf.l.wrap.b32 	%r9293, %r8855, %r8855, 5;
	// begin inline asm
	lop3.b32 %r8850, %r8851, %r8857, %r8853, 232;
	// end inline asm
	xor.b32  	%r9294, %r9185, %r9169;
	xor.b32  	%r9295, %r9294, %r9233;
	xor.b32  	%r9296, %r9295, %r9273;
	shf.l.wrap.b32 	%r9297, %r9296, %r9296, 1;
	add.s32 	%r9298, %r8850, %r9297;
	add.s32 	%r9299, %r9298, %r8849;
	add.s32 	%r9300, %r9299, %r9293;
	add.s32 	%r8859, %r9300, -1894007588;
	shf.l.wrap.b32 	%r8861, %r8851, %r8851, 30;
	shf.l.wrap.b32 	%r9301, %r8859, %r8859, 5;
	// begin inline asm
	lop3.b32 %r8854, %r8855, %r8861, %r8857, 232;
	// end inline asm
	xor.b32  	%r9302, %r9193, %r9177;
	xor.b32  	%r9303, %r9302, %r9241;
	xor.b32  	%r9304, %r9303, %r9281;
	shf.l.wrap.b32 	%r9305, %r9304, %r9304, 1;
	add.s32 	%r9306, %r8854, %r9305;
	add.s32 	%r9307, %r9306, %r8853;
	add.s32 	%r9308, %r9307, %r9301;
	add.s32 	%r8863, %r9308, -1894007588;
	shf.l.wrap.b32 	%r8865, %r8855, %r8855, 30;
	shf.l.wrap.b32 	%r9309, %r8863, %r8863, 5;
	// begin inline asm
	lop3.b32 %r8858, %r8859, %r8865, %r8861, 232;
	// end inline asm
	xor.b32  	%r9310, %r9201, %r9185;
	xor.b32  	%r9311, %r9310, %r9249;
	xor.b32  	%r9312, %r9311, %r9289;
	shf.l.wrap.b32 	%r9313, %r9312, %r9312, 1;
	add.s32 	%r9314, %r8858, %r9313;
	add.s32 	%r9315, %r9314, %r8857;
	add.s32 	%r9316, %r9315, %r9309;
	add.s32 	%r8867, %r9316, -1894007588;
	shf.l.wrap.b32 	%r8869, %r8859, %r8859, 30;
	shf.l.wrap.b32 	%r9317, %r8867, %r8867, 5;
	// begin inline asm
	lop3.b32 %r8862, %r8863, %r8869, %r8865, 232;
	// end inline asm
	xor.b32  	%r9318, %r9209, %r9193;
	xor.b32  	%r9319, %r9318, %r9257;
	xor.b32  	%r9320, %r9319, %r9297;
	shf.l.wrap.b32 	%r9321, %r9320, %r9320, 1;
	add.s32 	%r9322, %r8862, %r9321;
	add.s32 	%r9323, %r9322, %r8861;
	add.s32 	%r9324, %r9323, %r9317;
	add.s32 	%r8871, %r9324, -1894007588;
	shf.l.wrap.b32 	%r8873, %r8863, %r8863, 30;
	shf.l.wrap.b32 	%r9325, %r8871, %r8871, 5;
	// begin inline asm
	lop3.b32 %r8866, %r8867, %r8873, %r8869, 232;
	// end inline asm
	xor.b32  	%r9326, %r9217, %r9201;
	xor.b32  	%r9327, %r9326, %r9265;
	xor.b32  	%r9328, %r9327, %r9305;
	shf.l.wrap.b32 	%r9329, %r9328, %r9328, 1;
	add.s32 	%r9330, %r8866, %r9329;
	add.s32 	%r9331, %r9330, %r8865;
	add.s32 	%r9332, %r9331, %r9325;
	add.s32 	%r8875, %r9332, -1894007588;
	shf.l.wrap.b32 	%r8877, %r8867, %r8867, 30;
	shf.l.wrap.b32 	%r9333, %r8875, %r8875, 5;
	// begin inline asm
	lop3.b32 %r8870, %r8871, %r8877, %r8873, 232;
	// end inline asm
	xor.b32  	%r9334, %r9225, %r9209;
	xor.b32  	%r9335, %r9334, %r9273;
	xor.b32  	%r9336, %r9335, %r9313;
	shf.l.wrap.b32 	%r9337, %r9336, %r9336, 1;
	add.s32 	%r9338, %r8870, %r9337;
	add.s32 	%r9339, %r9338, %r8869;
	add.s32 	%r9340, %r9339, %r9333;
	add.s32 	%r8879, %r9340, -1894007588;
	shf.l.wrap.b32 	%r8881, %r8871, %r8871, 30;
	shf.l.wrap.b32 	%r9341, %r8879, %r8879, 5;
	// begin inline asm
	lop3.b32 %r8874, %r8875, %r8881, %r8877, 232;
	// end inline asm
	xor.b32  	%r9342, %r9233, %r9217;
	xor.b32  	%r9343, %r9342, %r9281;
	xor.b32  	%r9344, %r9343, %r9321;
	shf.l.wrap.b32 	%r9345, %r9344, %r9344, 1;
	add.s32 	%r9346, %r8874, %r9345;
	add.s32 	%r9347, %r9346, %r8873;
	add.s32 	%r9348, %r9347, %r9341;
	add.s32 	%r8883, %r9348, -1894007588;
	shf.l.wrap.b32 	%r8885, %r8875, %r8875, 30;
	shf.l.wrap.b32 	%r9349, %r8883, %r8883, 5;
	// begin inline asm
	lop3.b32 %r8878, %r8879, %r8885, %r8881, 150;
	// end inline asm
	xor.b32  	%r9350, %r9241, %r9225;
	xor.b32  	%r9351, %r9350, %r9289;
	xor.b32  	%r9352, %r9351, %r9329;
	shf.l.wrap.b32 	%r9353, %r9352, %r9352, 1;
	add.s32 	%r9354, %r8878, %r9353;
	add.s32 	%r9355, %r9354, %r8877;
	add.s32 	%r9356, %r9355, %r9349;
	add.s32 	%r8887, %r9356, -899497514;
	shf.l.wrap.b32 	%r8889, %r8879, %r8879, 30;
	shf.l.wrap.b32 	%r9357, %r8887, %r8887, 5;
	// begin inline asm
	lop3.b32 %r8882, %r8883, %r8889, %r8885, 150;
	// end inline asm
	xor.b32  	%r9358, %r9249, %r9233;
	xor.b32  	%r9359, %r9358, %r9297;
	xor.b32  	%r9360, %r9359, %r9337;
	shf.l.wrap.b32 	%r9361, %r9360, %r9360, 1;
	add.s32 	%r9362, %r8882, %r9361;
	add.s32 	%r9363, %r9362, %r8881;
	add.s32 	%r9364, %r9363, %r9357;
	add.s32 	%r8891, %r9364, -899497514;
	shf.l.wrap.b32 	%r8893, %r8883, %r8883, 30;
	shf.l.wrap.b32 	%r9365, %r8891, %r8891, 5;
	// begin inline asm
	lop3.b32 %r8886, %r8887, %r8893, %r8889, 150;
	// end inline asm
	xor.b32  	%r9366, %r9257, %r9241;
	xor.b32  	%r9367, %r9366, %r9305;
	xor.b32  	%r9368, %r9367, %r9345;
	shf.l.wrap.b32 	%r9369, %r9368, %r9368, 1;
	add.s32 	%r9370, %r8886, %r9369;
	add.s32 	%r9371, %r9370, %r8885;
	add.s32 	%r9372, %r9371, %r9365;
	add.s32 	%r8895, %r9372, -899497514;
	shf.l.wrap.b32 	%r8897, %r8887, %r8887, 30;
	shf.l.wrap.b32 	%r9373, %r8895, %r8895, 5;
	// begin inline asm
	lop3.b32 %r8890, %r8891, %r8897, %r8893, 150;
	// end inline asm
	xor.b32  	%r9374, %r9265, %r9249;
	xor.b32  	%r9375, %r9374, %r9313;
	xor.b32  	%r9376, %r9375, %r9353;
	shf.l.wrap.b32 	%r9377, %r9376, %r9376, 1;
	add.s32 	%r9378, %r8890, %r9377;
	add.s32 	%r9379, %r9378, %r8889;
	add.s32 	%r9380, %r9379, %r9373;
	add.s32 	%r8899, %r9380, -899497514;
	shf.l.wrap.b32 	%r8901, %r8891, %r8891, 30;
	shf.l.wrap.b32 	%r9381, %r8899, %r8899, 5;
	// begin inline asm
	lop3.b32 %r8894, %r8895, %r8901, %r8897, 150;
	// end inline asm
	xor.b32  	%r9382, %r9273, %r9257;
	xor.b32  	%r9383, %r9382, %r9321;
	xor.b32  	%r9384, %r9383, %r9361;
	shf.l.wrap.b32 	%r9385, %r9384, %r9384, 1;
	add.s32 	%r9386, %r8894, %r9385;
	add.s32 	%r9387, %r9386, %r8893;
	add.s32 	%r9388, %r9387, %r9381;
	add.s32 	%r8903, %r9388, -899497514;
	shf.l.wrap.b32 	%r8905, %r8895, %r8895, 30;
	shf.l.wrap.b32 	%r9389, %r8903, %r8903, 5;
	// begin inline asm
	lop3.b32 %r8898, %r8899, %r8905, %r8901, 150;
	// end inline asm
	xor.b32  	%r9390, %r9281, %r9265;
	xor.b32  	%r9391, %r9390, %r9329;
	xor.b32  	%r9392, %r9391, %r9369;
	shf.l.wrap.b32 	%r9393, %r9392, %r9392, 1;
	add.s32 	%r9394, %r8898, %r9393;
	add.s32 	%r9395, %r9394, %r8897;
	add.s32 	%r9396, %r9395, %r9389;
	add.s32 	%r8907, %r9396, -899497514;
	shf.l.wrap.b32 	%r8909, %r8899, %r8899, 30;
	shf.l.wrap.b32 	%r9397, %r8907, %r8907, 5;
	// begin inline asm
	lop3.b32 %r8902, %r8903, %r8909, %r8905, 150;
	// end inline asm
	xor.b32  	%r9398, %r9289, %r9273;
	xor.b32  	%r9399, %r9398, %r9337;
	xor.b32  	%r9400, %r9399, %r9377;
	shf.l.wrap.b32 	%r9401, %r9400, %r9400, 1;
	add.s32 	%r9402, %r8902, %r9401;
	add.s32 	%r9403, %r9402, %r8901;
	add.s32 	%r9404, %r9403, %r9397;
	add.s32 	%r8911, %r9404, -899497514;
	shf.l.wrap.b32 	%r8913, %r8903, %r8903, 30;
	shf.l.wrap.b32 	%r9405, %r8911, %r8911, 5;
	// begin inline asm
	lop3.b32 %r8906, %r8907, %r8913, %r8909, 150;
	// end inline asm
	xor.b32  	%r9406, %r9297, %r9281;
	xor.b32  	%r9407, %r9406, %r9345;
	xor.b32  	%r9408, %r9407, %r9385;
	shf.l.wrap.b32 	%r9409, %r9408, %r9408, 1;
	add.s32 	%r9410, %r8906, %r9409;
	add.s32 	%r9411, %r9410, %r8905;
	add.s32 	%r9412, %r9411, %r9405;
	add.s32 	%r8915, %r9412, -899497514;
	shf.l.wrap.b32 	%r8917, %r8907, %r8907, 30;
	shf.l.wrap.b32 	%r9413, %r8915, %r8915, 5;
	// begin inline asm
	lop3.b32 %r8910, %r8911, %r8917, %r8913, 150;
	// end inline asm
	xor.b32  	%r9414, %r9305, %r9289;
	xor.b32  	%r9415, %r9414, %r9353;
	xor.b32  	%r9416, %r9415, %r9393;
	shf.l.wrap.b32 	%r9417, %r9416, %r9416, 1;
	add.s32 	%r9418, %r8910, %r9417;
	add.s32 	%r9419, %r9418, %r8909;
	add.s32 	%r9420, %r9419, %r9413;
	add.s32 	%r8919, %r9420, -899497514;
	shf.l.wrap.b32 	%r8921, %r8911, %r8911, 30;
	shf.l.wrap.b32 	%r9421, %r8919, %r8919, 5;
	// begin inline asm
	lop3.b32 %r8914, %r8915, %r8921, %r8917, 150;
	// end inline asm
	xor.b32  	%r9422, %r9313, %r9297;
	xor.b32  	%r9423, %r9422, %r9361;
	xor.b32  	%r9424, %r9423, %r9401;
	shf.l.wrap.b32 	%r9425, %r9424, %r9424, 1;
	add.s32 	%r9426, %r8914, %r9425;
	add.s32 	%r9427, %r9426, %r8913;
	add.s32 	%r9428, %r9427, %r9421;
	add.s32 	%r8923, %r9428, -899497514;
	shf.l.wrap.b32 	%r8925, %r8915, %r8915, 30;
	shf.l.wrap.b32 	%r9429, %r8923, %r8923, 5;
	// begin inline asm
	lop3.b32 %r8918, %r8919, %r8925, %r8921, 150;
	// end inline asm
	xor.b32  	%r9430, %r9321, %r9305;
	xor.b32  	%r9431, %r9430, %r9369;
	xor.b32  	%r9432, %r9431, %r9409;
	shf.l.wrap.b32 	%r9433, %r9432, %r9432, 1;
	add.s32 	%r9434, %r8918, %r9433;
	add.s32 	%r9435, %r9434, %r8917;
	add.s32 	%r9436, %r9435, %r9429;
	add.s32 	%r8927, %r9436, -899497514;
	shf.l.wrap.b32 	%r8929, %r8919, %r8919, 30;
	shf.l.wrap.b32 	%r9437, %r8927, %r8927, 5;
	// begin inline asm
	lop3.b32 %r8922, %r8923, %r8929, %r8925, 150;
	// end inline asm
	xor.b32  	%r9438, %r9329, %r9313;
	xor.b32  	%r9439, %r9438, %r9377;
	xor.b32  	%r9440, %r9439, %r9417;
	shf.l.wrap.b32 	%r9441, %r9440, %r9440, 1;
	add.s32 	%r9442, %r8922, %r9441;
	add.s32 	%r9443, %r9442, %r8921;
	add.s32 	%r9444, %r9443, %r9437;
	add.s32 	%r8931, %r9444, -899497514;
	shf.l.wrap.b32 	%r8933, %r8923, %r8923, 30;
	shf.l.wrap.b32 	%r9445, %r8931, %r8931, 5;
	// begin inline asm
	lop3.b32 %r8926, %r8927, %r8933, %r8929, 150;
	// end inline asm
	xor.b32  	%r9446, %r9337, %r9321;
	xor.b32  	%r9447, %r9446, %r9385;
	xor.b32  	%r9448, %r9447, %r9425;
	shf.l.wrap.b32 	%r9449, %r9448, %r9448, 1;
	add.s32 	%r9450, %r8926, %r9449;
	add.s32 	%r9451, %r9450, %r8925;
	add.s32 	%r9452, %r9451, %r9445;
	add.s32 	%r8935, %r9452, -899497514;
	shf.l.wrap.b32 	%r8937, %r8927, %r8927, 30;
	shf.l.wrap.b32 	%r9453, %r8935, %r8935, 5;
	// begin inline asm
	lop3.b32 %r8930, %r8931, %r8937, %r8933, 150;
	// end inline asm
	xor.b32  	%r9454, %r9345, %r9329;
	xor.b32  	%r9455, %r9454, %r9393;
	xor.b32  	%r9456, %r9455, %r9433;
	shf.l.wrap.b32 	%r9457, %r9456, %r9456, 1;
	add.s32 	%r9458, %r8930, %r9457;
	add.s32 	%r9459, %r9458, %r8929;
	add.s32 	%r9460, %r9459, %r9453;
	add.s32 	%r8939, %r9460, -899497514;
	shf.l.wrap.b32 	%r8941, %r8931, %r8931, 30;
	shf.l.wrap.b32 	%r9461, %r8939, %r8939, 5;
	// begin inline asm
	lop3.b32 %r8934, %r8935, %r8941, %r8937, 150;
	// end inline asm
	xor.b32  	%r9462, %r9353, %r9337;
	xor.b32  	%r9463, %r9462, %r9401;
	xor.b32  	%r9464, %r9463, %r9441;
	shf.l.wrap.b32 	%r9465, %r9464, %r9464, 1;
	add.s32 	%r9466, %r8934, %r9465;
	add.s32 	%r9467, %r9466, %r8933;
	add.s32 	%r9468, %r9467, %r9461;
	add.s32 	%r8943, %r9468, -899497514;
	shf.l.wrap.b32 	%r8945, %r8935, %r8935, 30;
	shf.l.wrap.b32 	%r9469, %r8943, %r8943, 5;
	// begin inline asm
	lop3.b32 %r8938, %r8939, %r8945, %r8941, 150;
	// end inline asm
	xor.b32  	%r9470, %r9361, %r9345;
	xor.b32  	%r9471, %r9470, %r9409;
	xor.b32  	%r9472, %r9471, %r9449;
	shf.l.wrap.b32 	%r9473, %r9472, %r9472, 1;
	add.s32 	%r9474, %r8938, %r9473;
	add.s32 	%r9475, %r9474, %r8937;
	add.s32 	%r9476, %r9475, %r9469;
	add.s32 	%r8947, %r9476, -899497514;
	shf.l.wrap.b32 	%r8949, %r8939, %r8939, 30;
	shf.l.wrap.b32 	%r9477, %r8947, %r8947, 5;
	// begin inline asm
	lop3.b32 %r8942, %r8943, %r8949, %r8945, 150;
	// end inline asm
	xor.b32  	%r9478, %r9369, %r9353;
	xor.b32  	%r9479, %r9478, %r9417;
	xor.b32  	%r9480, %r9479, %r9457;
	shf.l.wrap.b32 	%r9481, %r9480, %r9480, 1;
	add.s32 	%r9482, %r8942, %r9481;
	add.s32 	%r9483, %r9482, %r8941;
	add.s32 	%r9484, %r9483, %r9477;
	add.s32 	%r8951, %r9484, -899497514;
	shf.l.wrap.b32 	%r8953, %r8943, %r8943, 30;
	shf.l.wrap.b32 	%r9485, %r8951, %r8951, 5;
	// begin inline asm
	lop3.b32 %r8946, %r8947, %r8953, %r8949, 150;
	// end inline asm
	xor.b32  	%r9486, %r9377, %r9361;
	xor.b32  	%r9487, %r9486, %r9425;
	xor.b32  	%r9488, %r9487, %r9465;
	shf.l.wrap.b32 	%r9489, %r9488, %r9488, 1;
	add.s32 	%r9490, %r8946, %r9489;
	add.s32 	%r9491, %r9490, %r8945;
	add.s32 	%r9492, %r9491, %r9485;
	add.s32 	%r8955, %r9492, -899497514;
	shf.l.wrap.b32 	%r8957, %r8947, %r8947, 30;
	shf.l.wrap.b32 	%r9493, %r8955, %r8955, 5;
	// begin inline asm
	lop3.b32 %r8950, %r8951, %r8957, %r8953, 150;
	// end inline asm
	xor.b32  	%r9494, %r9385, %r9369;
	xor.b32  	%r9495, %r9494, %r9433;
	xor.b32  	%r9496, %r9495, %r9473;
	shf.l.wrap.b32 	%r9497, %r9496, %r9496, 1;
	add.s32 	%r9498, %r8950, %r9497;
	add.s32 	%r9499, %r9498, %r8949;
	add.s32 	%r9500, %r9499, %r9493;
	add.s32 	%r9501, %r9500, -899497514;
	shf.l.wrap.b32 	%r8956, %r8951, %r8951, 30;
	shf.l.wrap.b32 	%r9502, %r9501, %r9501, 5;
	// begin inline asm
	lop3.b32 %r8954, %r8955, %r8956, %r8957, 150;
	// end inline asm
	xor.b32  	%r9503, %r9393, %r9377;
	xor.b32  	%r9504, %r9503, %r9441;
	xor.b32  	%r9505, %r9504, %r9481;
	shf.l.wrap.b32 	%r9506, %r9505, %r9505, 1;
	shf.l.wrap.b32 	%r9507, %r8955, %r8955, 30;
	add.s32 	%r9508, %r8954, %r9506;
	add.s32 	%r9509, %r9508, %r8953;
	add.s32 	%r9510, %r9509, %r9502;
	add.s32 	%r190, %r9500, -1171231393;
	mov.u32 	%r9642, 0;
	add.s32 	%r9511, %r9510, 833086679;
	st.local.v2.u32 	[%rd1], {%r9511, %r190};
	add.s32 	%r191, %r9507, -1732584194;
	add.s32 	%r192, %r8956, 271733878;
	st.local.v2.u32 	[%rd1+8], {%r191, %r192};
	add.s32 	%r193, %r8957, -1009589776;
	st.local.u32 	[%rd1+16], %r193;
	shf.l.wrap.b32 	%r9512, %r9511, %r9511, 16;
	shl.b32 	%r9513, %r9512, 8;
	and.b32  	%r9514, %r9513, -16711936;
	shr.u32 	%r9515, %r9512, 8;
	and.b32  	%r9516, %r9515, 16711935;
	or.b32  	%r9517, %r9514, %r9516;
	ld.local.u32 	%r9518, [%rd7];
	setp.ne.s32 	%p109, %r9518, %r9517;
	@%p109 bra 	$L__BB3_114;

	shf.l.wrap.b32 	%r9520, %r190, %r190, 16;
	shl.b32 	%r9521, %r9520, 8;
	and.b32  	%r9522, %r9521, -16711936;
	shr.u32 	%r9523, %r9520, 8;
	and.b32  	%r9524, %r9523, 16711935;
	or.b32  	%r9525, %r9522, %r9524;
	ld.local.u32 	%r9526, [%rd7+4];
	setp.ne.s32 	%p110, %r9526, %r9525;
	@%p110 bra 	$L__BB3_114;

	shf.l.wrap.b32 	%r9528, %r191, %r191, 16;
	shl.b32 	%r9529, %r9528, 8;
	and.b32  	%r9530, %r9529, -16711936;
	shr.u32 	%r9531, %r9528, 8;
	and.b32  	%r9532, %r9531, 16711935;
	or.b32  	%r9533, %r9530, %r9532;
	ld.local.u32 	%r9534, [%rd7+8];
	setp.ne.s32 	%p111, %r9534, %r9533;
	@%p111 bra 	$L__BB3_114;

	shf.l.wrap.b32 	%r9536, %r192, %r192, 16;
	shl.b32 	%r9537, %r9536, 8;
	and.b32  	%r9538, %r9537, -16711936;
	shr.u32 	%r9539, %r9536, 8;
	and.b32  	%r9540, %r9539, 16711935;
	or.b32  	%r9541, %r9538, %r9540;
	ld.local.u32 	%r9542, [%rd7+12];
	setp.ne.s32 	%p112, %r9542, %r9541;
	@%p112 bra 	$L__BB3_114;

	shf.l.wrap.b32 	%r9543, %r193, %r193, 16;
	shl.b32 	%r9544, %r9543, 8;
	and.b32  	%r9545, %r9544, -16711936;
	shr.u32 	%r9546, %r9543, 8;
	and.b32  	%r9547, %r9546, 16711935;
	or.b32  	%r9548, %r9545, %r9547;
	ld.local.u32 	%r9549, [%rd7+16];
	setp.eq.s32 	%p113, %r9549, %r9548;
	selp.u32 	%r9642, 1, 0, %p113;

$L__BB3_114:
	ld.param.u64 	%rd99, [Generate2010key_param_1];
	shl.b64 	%rd93, %rd2, 2;
	add.s64 	%rd94, %rd99, %rd93;
	st.global.u32 	[%rd94], %r9642;
	ret;

}
	// .globl	GenerateSHA512pwhash
.entry GenerateSHA512pwhash(
	.param .u64 .ptr .global .align 8 GenerateSHA512pwhash_param_0,
	.param .u64 .ptr .global .align 4 GenerateSHA512pwhash_param_1,
	.param .u64 .ptr .const .align 8 GenerateSHA512pwhash_param_2,
	.param .u64 .ptr .global .align 8 GenerateSHA512pwhash_param_3
)
{
	.reg .b32 	%r<2016>;
	.reg .b64 	%rd<2786>;


	ld.param.u64 	%rd1, [GenerateSHA512pwhash_param_0];
	ld.param.u64 	%rd2, [GenerateSHA512pwhash_param_1];
	ld.param.u64 	%rd3, [GenerateSHA512pwhash_param_2];
	ld.param.u64 	%rd4, [GenerateSHA512pwhash_param_3];
	mov.b32 	%r1, %envreg3;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	add.s32 	%r5, %r4, %r1;
	mad.lo.s32 	%r6, %r2, %r3, %r5;
	ld.const.u64 	%rd5, [%rd3];
	mov.u64 	%rd6, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7, %temp}, %rd5;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %rd5;
	}
	mov.u32 	%r9, 291;
	mov.u32 	%r10, 0;
	prmt.b32 	%r11, %r7, %r10, %r9;
	prmt.b32 	%r12, %r8, %r10, %r9;
	mov.b64 	%rd7, {%r12, %r11};
	ld.const.u64 	%rd8, [%rd3+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %rd8;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %rd8;
	}
	prmt.b32 	%r15, %r13, %r10, %r9;
	prmt.b32 	%r16, %r14, %r10, %r9;
	mov.b64 	%rd9, {%r16, %r15};
	mul.lo.s32 	%r17, %r6, 12;
	mul.wide.u32 	%rd10, %r17, 8;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.u64 	%rd12, [%rd11];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r18, %temp}, %rd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %rd12;
	}
	prmt.b32 	%r20, %r18, %r10, %r9;
	prmt.b32 	%r21, %r19, %r10, %r9;
	mov.b64 	%rd13, {%r21, %r20};
	ld.global.u64 	%rd14, [%rd11+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %rd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %rd14;
	}
	prmt.b32 	%r24, %r22, %r10, %r9;
	prmt.b32 	%r25, %r23, %r10, %r9;
	mov.b64 	%rd15, {%r25, %r24};
	ld.global.u64 	%rd16, [%rd11+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r26, %temp}, %rd16;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %rd16;
	}
	prmt.b32 	%r28, %r26, %r10, %r9;
	prmt.b32 	%r29, %r27, %r10, %r9;
	mov.b64 	%rd17, {%r29, %r28};
	ld.global.u64 	%rd18, [%rd11+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %rd18;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %rd18;
	}
	prmt.b32 	%r32, %r30, %r10, %r9;
	prmt.b32 	%r33, %r31, %r10, %r9;
	mov.b64 	%rd19, {%r33, %r32};
	add.s32 	%r34, %r17, 4;
	mul.wide.u32 	%rd20, %r34, 8;
	add.s64 	%rd21, %rd1, %rd20;
	ld.global.u64 	%rd22, [%rd21];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %rd22;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %rd22;
	}
	prmt.b32 	%r37, %r35, %r10, %r9;
	prmt.b32 	%r38, %r36, %r10, %r9;
	mov.b64 	%rd23, {%r38, %r37};
	ld.global.u64 	%rd24, [%rd21+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r39, %temp}, %rd24;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r40}, %rd24;
	}
	prmt.b32 	%r41, %r39, %r10, %r9;
	prmt.b32 	%r42, %r40, %r10, %r9;
	mov.b64 	%rd25, {%r42, %r41};
	ld.global.u64 	%rd26, [%rd21+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r43, %temp}, %rd26;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r44}, %rd26;
	}
	prmt.b32 	%r45, %r43, %r10, %r9;
	prmt.b32 	%r46, %r44, %r10, %r9;
	mov.b64 	%rd27, {%r46, %r45};
	ld.global.u64 	%rd28, [%rd21+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %rd28;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r48}, %rd28;
	}
	prmt.b32 	%r49, %r47, %r10, %r9;
	prmt.b32 	%r50, %r48, %r10, %r9;
	mov.b64 	%rd29, {%r50, %r49};
	add.s32 	%r51, %r17, 8;
	mul.wide.u32 	%rd30, %r51, 8;
	add.s64 	%rd31, %rd1, %rd30;
	ld.global.u64 	%rd32, [%rd31];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r52, %temp}, %rd32;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r53}, %rd32;
	}
	prmt.b32 	%r54, %r52, %r10, %r9;
	prmt.b32 	%r55, %r53, %r10, %r9;
	mov.b64 	%rd33, {%r55, %r54};
	ld.global.u64 	%rd34, [%rd31+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r56, %temp}, %rd34;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %rd34;
	}
	prmt.b32 	%r58, %r56, %r10, %r9;
	prmt.b32 	%r59, %r57, %r10, %r9;
	mov.b64 	%rd35, {%r59, %r58};
	ld.global.u64 	%rd36, [%rd31+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r60, %temp}, %rd36;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r61}, %rd36;
	}
	prmt.b32 	%r62, %r60, %r10, %r9;
	prmt.b32 	%r63, %r61, %r10, %r9;
	mov.b64 	%rd37, {%r63, %r62};
	ld.global.u64 	%rd38, [%rd31+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r64, %temp}, %rd38;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r65}, %rd38;
	}
	prmt.b32 	%r66, %r64, %r10, %r9;
	prmt.b32 	%r67, %r65, %r10, %r9;
	mov.b64 	%rd39, {%r67, %r66};
	mul.wide.u32 	%rd40, %r6, 4;
	add.s64 	%rd41, %rd2, %rd40;
	ld.global.u32 	%r68, [%rd41];
	add.s32 	%r69, %r68, 16;
	cvt.u64.u32 	%rd42, %r69;
	mul.wide.u32 	%rd43, %r69, 8;
	mov.u64 	%rd44, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r70,%dummy}, %rd44;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r71}, %rd44;
	}
	shf.r.wrap.b32 	%r72, %r71, %r70, 14;
	shf.r.wrap.b32 	%r73, %r70, %r71, 14;
	mov.b64 	%rd45, {%r73, %r72};
	shf.r.wrap.b32 	%r74, %r71, %r70, 18;
	shf.r.wrap.b32 	%r75, %r70, %r71, 18;
	mov.b64 	%rd46, {%r75, %r74};
	xor.b64  	%rd47, %rd45, %rd46;
	shf.l.wrap.b32 	%r76, %r70, %r71, 23;
	shf.l.wrap.b32 	%r77, %r71, %r70, 23;
	mov.b64 	%rd48, {%r77, %r76};
	xor.b64  	%rd49, %rd47, %rd48;
	add.s64 	%rd50, %rd49, %rd7;
	add.s64 	%rd51, %rd50, -7031530027109396581;
	add.s64 	%rd52, %rd50, 7151922335638569927;
	mov.u64 	%rd53, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r78,%dummy}, %rd53;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r79}, %rd53;
	}
	shf.r.wrap.b32 	%r80, %r79, %r78, 28;
	shf.r.wrap.b32 	%r81, %r78, %r79, 28;
	mov.b64 	%rd54, {%r81, %r80};
	shf.l.wrap.b32 	%r82, %r78, %r79, 30;
	shf.l.wrap.b32 	%r83, %r79, %r78, 30;
	mov.b64 	%rd55, {%r83, %r82};
	xor.b64  	%rd56, %rd54, %rd55;
	shf.l.wrap.b32 	%r84, %r78, %r79, 25;
	shf.l.wrap.b32 	%r85, %r79, %r78, 25;
	mov.b64 	%rd57, {%r85, %r84};
	xor.b64  	%rd58, %rd56, %rd57;
	add.s64 	%rd59, %rd58, %rd51;
	add.s64 	%rd60, %rd59, 6482280703085258342;
	and.b64  	%rd61, %rd52, -3887949035690463538;
	xor.b64  	%rd62, %rd61, -7276294671716946913;
	add.s64 	%rd63, %rd9, %rd62;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r86,%dummy}, %rd52;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r87}, %rd52;
	}
	shf.r.wrap.b32 	%r88, %r87, %r86, 14;
	shf.r.wrap.b32 	%r89, %r86, %r87, 14;
	mov.b64 	%rd64, {%r89, %r88};
	shf.r.wrap.b32 	%r90, %r87, %r86, 18;
	shf.r.wrap.b32 	%r91, %r86, %r87, 18;
	mov.b64 	%rd65, {%r91, %r90};
	xor.b64  	%rd66, %rd64, %rd65;
	shf.l.wrap.b32 	%r92, %r86, %r87, 23;
	shf.l.wrap.b32 	%r93, %r87, %r86, 23;
	mov.b64 	%rd67, {%r93, %r92};
	xor.b64  	%rd68, %rd66, %rd67;
	add.s64 	%rd69, %rd63, %rd68;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r94,%dummy}, %rd60;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r95}, %rd60;
	}
	shf.r.wrap.b32 	%r96, %r95, %r94, 28;
	shf.r.wrap.b32 	%r97, %r94, %r95, 28;
	mov.b64 	%rd70, {%r97, %r96};
	shf.l.wrap.b32 	%r98, %r94, %r95, 30;
	shf.l.wrap.b32 	%r99, %r95, %r94, 30;
	mov.b64 	%rd71, {%r99, %r98};
	xor.b64  	%rd72, %rd70, %rd71;
	shf.l.wrap.b32 	%r100, %r94, %r95, 25;
	shf.l.wrap.b32 	%r101, %r95, %r94, 25;
	mov.b64 	%rd73, {%r101, %r100};
	xor.b64  	%rd74, %rd72, %rd73;
	and.b64  	%rd75, %rd60, -3355664534840381901;
	or.b64  	%rd76, %rd75, 3026882967131160840;
	add.s64 	%rd77, %rd76, %rd74;
	add.s64 	%rd78, %rd77, %rd69;
	add.s64 	%rd79, %rd69, -3663095898801038493;
	add.s64 	%rd80, %rd78, -8017781463737883848;
	xor.b64  	%rd81, %rd52, 5840696475078001361;
	and.b64  	%rd82, %rd79, %rd81;
	xor.b64  	%rd83, %rd82, 5840696475078001361;
	add.s64 	%rd84, %rd13, %rd83;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r102,%dummy}, %rd79;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r103}, %rd79;
	}
	shf.r.wrap.b32 	%r104, %r103, %r102, 14;
	shf.r.wrap.b32 	%r105, %r102, %r103, 14;
	mov.b64 	%rd85, {%r105, %r104};
	shf.r.wrap.b32 	%r106, %r103, %r102, 18;
	shf.r.wrap.b32 	%r107, %r102, %r103, 18;
	mov.b64 	%rd86, {%r107, %r106};
	xor.b64  	%rd87, %rd85, %rd86;
	shf.l.wrap.b32 	%r108, %r102, %r103, 23;
	shf.l.wrap.b32 	%r109, %r103, %r102, 23;
	mov.b64 	%rd88, {%r109, %r108};
	xor.b64  	%rd89, %rd87, %rd88;
	add.s64 	%rd90, %rd84, %rd89;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r110,%dummy}, %rd80;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r111}, %rd80;
	}
	shf.r.wrap.b32 	%r112, %r111, %r110, 28;
	shf.r.wrap.b32 	%r113, %r110, %r111, 28;
	mov.b64 	%rd91, {%r113, %r112};
	shf.l.wrap.b32 	%r114, %r110, %r111, 30;
	shf.l.wrap.b32 	%r115, %r111, %r110, 30;
	mov.b64 	%rd92, {%r115, %r114};
	xor.b64  	%rd93, %rd91, %rd92;
	shf.l.wrap.b32 	%r116, %r110, %r111, 25;
	shf.l.wrap.b32 	%r117, %r111, %r110, 25;
	mov.b64 	%rd94, {%r117, %r116};
	xor.b64  	%rd95, %rd93, %rd94;
	and.b64  	%rd96, %rd80, %rd60;
	or.b64  	%rd97, %rd80, %rd60;
	and.b64  	%rd98, %rd97, 7640891576956012808;
	or.b64  	%rd99, %rd98, %rd96;
	add.s64 	%rd100, %rd99, %rd95;
	add.s64 	%rd101, %rd100, %rd90;
	add.s64 	%rd102, %rd90, 877659737583668873;
	add.s64 	%rd103, %rd101, 5820449915117741902;
	xor.b64  	%rd104, %rd79, %rd52;
	and.b64  	%rd105, %rd102, %rd104;
	xor.b64  	%rd106, %rd105, %rd52;
	add.s64 	%rd107, %rd15, %rd106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r118,%dummy}, %rd102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r119}, %rd102;
	}
	shf.r.wrap.b32 	%r120, %r119, %r118, 14;
	shf.r.wrap.b32 	%r121, %r118, %r119, 14;
	mov.b64 	%rd108, {%r121, %r120};
	shf.r.wrap.b32 	%r122, %r119, %r118, 18;
	shf.r.wrap.b32 	%r123, %r118, %r119, 18;
	mov.b64 	%rd109, {%r123, %r122};
	xor.b64  	%rd110, %rd108, %rd109;
	shf.l.wrap.b32 	%r124, %r118, %r119, 23;
	shf.l.wrap.b32 	%r125, %r119, %r118, 23;
	mov.b64 	%rd111, {%r125, %r124};
	xor.b64  	%rd112, %rd110, %rd111;
	add.s64 	%rd113, %rd107, %rd112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r126,%dummy}, %rd103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r127}, %rd103;
	}
	shf.r.wrap.b32 	%r128, %r127, %r126, 28;
	shf.r.wrap.b32 	%r129, %r126, %r127, 28;
	mov.b64 	%rd114, {%r129, %r128};
	shf.l.wrap.b32 	%r130, %r126, %r127, 30;
	shf.l.wrap.b32 	%r131, %r127, %r126, 30;
	mov.b64 	%rd115, {%r131, %r130};
	xor.b64  	%rd116, %rd114, %rd115;
	shf.l.wrap.b32 	%r132, %r126, %r127, 25;
	shf.l.wrap.b32 	%r133, %r127, %r126, 25;
	mov.b64 	%rd117, {%r133, %r132};
	xor.b64  	%rd118, %rd116, %rd117;
	and.b64  	%rd119, %rd103, %rd80;
	or.b64  	%rd120, %rd103, %rd80;
	and.b64  	%rd121, %rd120, %rd60;
	or.b64  	%rd122, %rd121, %rd119;
	add.s64 	%rd123, %rd122, %rd118;
	add.s64 	%rd124, %rd123, %rd113;
	add.s64 	%rd125, %rd113, -6571292209873868907;
	add.s64 	%rd126, %rd124, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r134,%dummy}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r135}, %rd125;
	}
	shf.r.wrap.b32 	%r136, %r135, %r134, 14;
	shf.r.wrap.b32 	%r137, %r134, %r135, 14;
	mov.b64 	%rd127, {%r137, %r136};
	shf.r.wrap.b32 	%r138, %r135, %r134, 18;
	shf.r.wrap.b32 	%r139, %r134, %r135, 18;
	mov.b64 	%rd128, {%r139, %r138};
	xor.b64  	%rd129, %rd127, %rd128;
	shf.l.wrap.b32 	%r140, %r134, %r135, 23;
	shf.l.wrap.b32 	%r141, %r135, %r134, 23;
	mov.b64 	%rd130, {%r141, %r140};
	xor.b64  	%rd131, %rd129, %rd130;
	xor.b64  	%rd132, %rd102, %rd79;
	and.b64  	%rd133, %rd125, %rd132;
	xor.b64  	%rd134, %rd133, %rd79;
	add.s64 	%rd135, %rd51, %rd17;
	add.s64 	%rd136, %rd135, %rd134;
	add.s64 	%rd137, %rd136, %rd131;
	add.s64 	%rd138, %rd137, -131588302623135388;
	add.s64 	%rd139, %rd138, %rd60;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r142,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r143}, %rd126;
	}
	shf.r.wrap.b32 	%r144, %r143, %r142, 28;
	shf.r.wrap.b32 	%r145, %r142, %r143, 28;
	mov.b64 	%rd140, {%r145, %r144};
	shf.l.wrap.b32 	%r146, %r142, %r143, 30;
	shf.l.wrap.b32 	%r147, %r143, %r142, 30;
	mov.b64 	%rd141, {%r147, %r146};
	xor.b64  	%rd142, %rd140, %rd141;
	shf.l.wrap.b32 	%r148, %r142, %r143, 25;
	shf.l.wrap.b32 	%r149, %r143, %r142, 25;
	mov.b64 	%rd143, {%r149, %r148};
	xor.b64  	%rd144, %rd142, %rd143;
	and.b64  	%rd145, %rd126, %rd103;
	or.b64  	%rd146, %rd126, %rd103;
	and.b64  	%rd147, %rd146, %rd80;
	or.b64  	%rd148, %rd147, %rd145;
	add.s64 	%rd149, %rd148, %rd144;
	add.s64 	%rd150, %rd149, %rd138;
	add.s64 	%rd151, %rd19, %rd79;
	xor.b64  	%rd152, %rd125, %rd102;
	and.b64  	%rd153, %rd139, %rd152;
	xor.b64  	%rd154, %rd153, %rd102;
	add.s64 	%rd155, %rd151, %rd154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r150,%dummy}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r151}, %rd139;
	}
	shf.r.wrap.b32 	%r152, %r151, %r150, 14;
	shf.r.wrap.b32 	%r153, %r150, %r151, 14;
	mov.b64 	%rd156, {%r153, %r152};
	shf.r.wrap.b32 	%r154, %r151, %r150, 18;
	shf.r.wrap.b32 	%r155, %r150, %r151, 18;
	mov.b64 	%rd157, {%r155, %r154};
	xor.b64  	%rd158, %rd156, %rd157;
	shf.l.wrap.b32 	%r156, %r150, %r151, 23;
	shf.l.wrap.b32 	%r157, %r151, %r150, 23;
	mov.b64 	%rd159, {%r157, %r156};
	xor.b64  	%rd160, %rd158, %rd159;
	add.s64 	%rd161, %rd155, %rd160;
	add.s64 	%rd162, %rd161, 6480981068601479193;
	add.s64 	%rd163, %rd162, %rd80;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r158,%dummy}, %rd150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r159}, %rd150;
	}
	shf.r.wrap.b32 	%r160, %r159, %r158, 28;
	shf.r.wrap.b32 	%r161, %r158, %r159, 28;
	mov.b64 	%rd164, {%r161, %r160};
	shf.l.wrap.b32 	%r162, %r158, %r159, 30;
	shf.l.wrap.b32 	%r163, %r159, %r158, 30;
	mov.b64 	%rd165, {%r163, %r162};
	xor.b64  	%rd166, %rd164, %rd165;
	shf.l.wrap.b32 	%r164, %r158, %r159, 25;
	shf.l.wrap.b32 	%r165, %r159, %r158, 25;
	mov.b64 	%rd167, {%r165, %r164};
	xor.b64  	%rd168, %rd166, %rd167;
	and.b64  	%rd169, %rd150, %rd126;
	or.b64  	%rd170, %rd150, %rd126;
	and.b64  	%rd171, %rd170, %rd103;
	or.b64  	%rd172, %rd171, %rd169;
	add.s64 	%rd173, %rd172, %rd168;
	add.s64 	%rd174, %rd173, %rd162;
	add.s64 	%rd175, %rd23, %rd102;
	xor.b64  	%rd176, %rd139, %rd125;
	and.b64  	%rd177, %rd163, %rd176;
	xor.b64  	%rd178, %rd177, %rd125;
	add.s64 	%rd179, %rd175, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r166,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r167}, %rd163;
	}
	shf.r.wrap.b32 	%r168, %r167, %r166, 14;
	shf.r.wrap.b32 	%r169, %r166, %r167, 14;
	mov.b64 	%rd180, {%r169, %r168};
	shf.r.wrap.b32 	%r170, %r167, %r166, 18;
	shf.r.wrap.b32 	%r171, %r166, %r167, 18;
	mov.b64 	%rd181, {%r171, %r170};
	xor.b64  	%rd182, %rd180, %rd181;
	shf.l.wrap.b32 	%r172, %r166, %r167, 23;
	shf.l.wrap.b32 	%r173, %r167, %r166, 23;
	mov.b64 	%rd183, {%r173, %r172};
	xor.b64  	%rd184, %rd182, %rd183;
	add.s64 	%rd185, %rd179, %rd184;
	add.s64 	%rd186, %rd185, -7908458776815382629;
	add.s64 	%rd187, %rd186, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r174,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r175}, %rd174;
	}
	shf.r.wrap.b32 	%r176, %r175, %r174, 28;
	shf.r.wrap.b32 	%r177, %r174, %r175, 28;
	mov.b64 	%rd188, {%r177, %r176};
	shf.l.wrap.b32 	%r178, %r174, %r175, 30;
	shf.l.wrap.b32 	%r179, %r175, %r174, 30;
	mov.b64 	%rd189, {%r179, %r178};
	xor.b64  	%rd190, %rd188, %rd189;
	shf.l.wrap.b32 	%r180, %r174, %r175, 25;
	shf.l.wrap.b32 	%r181, %r175, %r174, 25;
	mov.b64 	%rd191, {%r181, %r180};
	xor.b64  	%rd192, %rd190, %rd191;
	and.b64  	%rd193, %rd174, %rd150;
	or.b64  	%rd194, %rd174, %rd150;
	and.b64  	%rd195, %rd194, %rd126;
	or.b64  	%rd196, %rd195, %rd193;
	add.s64 	%rd197, %rd196, %rd192;
	add.s64 	%rd198, %rd197, %rd186;
	add.s64 	%rd199, %rd25, %rd125;
	xor.b64  	%rd200, %rd163, %rd139;
	and.b64  	%rd201, %rd187, %rd200;
	xor.b64  	%rd202, %rd201, %rd139;
	add.s64 	%rd203, %rd199, %rd202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r182,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r183}, %rd187;
	}
	shf.r.wrap.b32 	%r184, %r183, %r182, 14;
	shf.r.wrap.b32 	%r185, %r182, %r183, 14;
	mov.b64 	%rd204, {%r185, %r184};
	shf.r.wrap.b32 	%r186, %r183, %r182, 18;
	shf.r.wrap.b32 	%r187, %r182, %r183, 18;
	mov.b64 	%rd205, {%r187, %r186};
	xor.b64  	%rd206, %rd204, %rd205;
	shf.l.wrap.b32 	%r188, %r182, %r183, 23;
	shf.l.wrap.b32 	%r189, %r183, %r182, 23;
	mov.b64 	%rd207, {%r189, %r188};
	xor.b64  	%rd208, %rd206, %rd207;
	add.s64 	%rd209, %rd203, %rd208;
	add.s64 	%rd210, %rd209, -6116909921290321640;
	add.s64 	%rd211, %rd210, %rd126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r190,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r191}, %rd198;
	}
	shf.r.wrap.b32 	%r192, %r191, %r190, 28;
	shf.r.wrap.b32 	%r193, %r190, %r191, 28;
	mov.b64 	%rd212, {%r193, %r192};
	shf.l.wrap.b32 	%r194, %r190, %r191, 30;
	shf.l.wrap.b32 	%r195, %r191, %r190, 30;
	mov.b64 	%rd213, {%r195, %r194};
	xor.b64  	%rd214, %rd212, %rd213;
	shf.l.wrap.b32 	%r196, %r190, %r191, 25;
	shf.l.wrap.b32 	%r197, %r191, %r190, 25;
	mov.b64 	%rd215, {%r197, %r196};
	xor.b64  	%rd216, %rd214, %rd215;
	and.b64  	%rd217, %rd198, %rd174;
	or.b64  	%rd218, %rd198, %rd174;
	and.b64  	%rd219, %rd218, %rd150;
	or.b64  	%rd220, %rd219, %rd217;
	add.s64 	%rd221, %rd220, %rd216;
	add.s64 	%rd222, %rd221, %rd210;
	add.s64 	%rd223, %rd27, %rd139;
	xor.b64  	%rd224, %rd187, %rd163;
	and.b64  	%rd225, %rd211, %rd224;
	xor.b64  	%rd226, %rd225, %rd163;
	add.s64 	%rd227, %rd223, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r198,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r199}, %rd211;
	}
	shf.r.wrap.b32 	%r200, %r199, %r198, 14;
	shf.r.wrap.b32 	%r201, %r198, %r199, 14;
	mov.b64 	%rd228, {%r201, %r200};
	shf.r.wrap.b32 	%r202, %r199, %r198, 18;
	shf.r.wrap.b32 	%r203, %r198, %r199, 18;
	mov.b64 	%rd229, {%r203, %r202};
	xor.b64  	%rd230, %rd228, %rd229;
	shf.l.wrap.b32 	%r204, %r198, %r199, 23;
	shf.l.wrap.b32 	%r205, %r199, %r198, 23;
	mov.b64 	%rd231, {%r205, %r204};
	xor.b64  	%rd232, %rd230, %rd231;
	add.s64 	%rd233, %rd227, %rd232;
	add.s64 	%rd234, %rd233, -2880145864133508542;
	add.s64 	%rd235, %rd234, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r206,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r207}, %rd222;
	}
	shf.r.wrap.b32 	%r208, %r207, %r206, 28;
	shf.r.wrap.b32 	%r209, %r206, %r207, 28;
	mov.b64 	%rd236, {%r209, %r208};
	shf.l.wrap.b32 	%r210, %r206, %r207, 30;
	shf.l.wrap.b32 	%r211, %r207, %r206, 30;
	mov.b64 	%rd237, {%r211, %r210};
	xor.b64  	%rd238, %rd236, %rd237;
	shf.l.wrap.b32 	%r212, %r206, %r207, 25;
	shf.l.wrap.b32 	%r213, %r207, %r206, 25;
	mov.b64 	%rd239, {%r213, %r212};
	xor.b64  	%rd240, %rd238, %rd239;
	and.b64  	%rd241, %rd222, %rd198;
	or.b64  	%rd242, %rd222, %rd198;
	and.b64  	%rd243, %rd242, %rd174;
	or.b64  	%rd244, %rd243, %rd241;
	add.s64 	%rd245, %rd244, %rd240;
	add.s64 	%rd246, %rd245, %rd234;
	add.s64 	%rd247, %rd29, %rd163;
	xor.b64  	%rd248, %rd211, %rd187;
	and.b64  	%rd249, %rd235, %rd248;
	xor.b64  	%rd250, %rd249, %rd187;
	add.s64 	%rd251, %rd247, %rd250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r214,%dummy}, %rd235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r215}, %rd235;
	}
	shf.r.wrap.b32 	%r216, %r215, %r214, 14;
	shf.r.wrap.b32 	%r217, %r214, %r215, 14;
	mov.b64 	%rd252, {%r217, %r216};
	shf.r.wrap.b32 	%r218, %r215, %r214, 18;
	shf.r.wrap.b32 	%r219, %r214, %r215, 18;
	mov.b64 	%rd253, {%r219, %r218};
	xor.b64  	%rd254, %rd252, %rd253;
	shf.l.wrap.b32 	%r220, %r214, %r215, 23;
	shf.l.wrap.b32 	%r221, %r215, %r214, 23;
	mov.b64 	%rd255, {%r221, %r220};
	xor.b64  	%rd256, %rd254, %rd255;
	add.s64 	%rd257, %rd251, %rd256;
	add.s64 	%rd258, %rd257, 1334009975649890238;
	add.s64 	%rd259, %rd258, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r222,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r223}, %rd246;
	}
	shf.r.wrap.b32 	%r224, %r223, %r222, 28;
	shf.r.wrap.b32 	%r225, %r222, %r223, 28;
	mov.b64 	%rd260, {%r225, %r224};
	shf.l.wrap.b32 	%r226, %r222, %r223, 30;
	shf.l.wrap.b32 	%r227, %r223, %r222, 30;
	mov.b64 	%rd261, {%r227, %r226};
	xor.b64  	%rd262, %rd260, %rd261;
	shf.l.wrap.b32 	%r228, %r222, %r223, 25;
	shf.l.wrap.b32 	%r229, %r223, %r222, 25;
	mov.b64 	%rd263, {%r229, %r228};
	xor.b64  	%rd264, %rd262, %rd263;
	and.b64  	%rd265, %rd246, %rd222;
	or.b64  	%rd266, %rd246, %rd222;
	and.b64  	%rd267, %rd266, %rd198;
	or.b64  	%rd268, %rd267, %rd265;
	add.s64 	%rd269, %rd268, %rd264;
	add.s64 	%rd270, %rd269, %rd258;
	add.s64 	%rd271, %rd33, %rd187;
	xor.b64  	%rd272, %rd235, %rd211;
	and.b64  	%rd273, %rd259, %rd272;
	xor.b64  	%rd274, %rd273, %rd211;
	add.s64 	%rd275, %rd271, %rd274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r230,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r231}, %rd259;
	}
	shf.r.wrap.b32 	%r232, %r231, %r230, 14;
	shf.r.wrap.b32 	%r233, %r230, %r231, 14;
	mov.b64 	%rd276, {%r233, %r232};
	shf.r.wrap.b32 	%r234, %r231, %r230, 18;
	shf.r.wrap.b32 	%r235, %r230, %r231, 18;
	mov.b64 	%rd277, {%r235, %r234};
	xor.b64  	%rd278, %rd276, %rd277;
	shf.l.wrap.b32 	%r236, %r230, %r231, 23;
	shf.l.wrap.b32 	%r237, %r231, %r230, 23;
	mov.b64 	%rd279, {%r237, %r236};
	xor.b64  	%rd280, %rd278, %rd279;
	add.s64 	%rd281, %rd275, %rd280;
	add.s64 	%rd282, %rd281, 2608012711638119052;
	add.s64 	%rd283, %rd282, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r238,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r239}, %rd270;
	}
	shf.r.wrap.b32 	%r240, %r239, %r238, 28;
	shf.r.wrap.b32 	%r241, %r238, %r239, 28;
	mov.b64 	%rd284, {%r241, %r240};
	shf.l.wrap.b32 	%r242, %r238, %r239, 30;
	shf.l.wrap.b32 	%r243, %r239, %r238, 30;
	mov.b64 	%rd285, {%r243, %r242};
	xor.b64  	%rd286, %rd284, %rd285;
	shf.l.wrap.b32 	%r244, %r238, %r239, 25;
	shf.l.wrap.b32 	%r245, %r239, %r238, 25;
	mov.b64 	%rd287, {%r245, %r244};
	xor.b64  	%rd288, %rd286, %rd287;
	and.b64  	%rd289, %rd270, %rd246;
	or.b64  	%rd290, %rd270, %rd246;
	and.b64  	%rd291, %rd290, %rd222;
	or.b64  	%rd292, %rd291, %rd289;
	add.s64 	%rd293, %rd292, %rd288;
	add.s64 	%rd294, %rd293, %rd282;
	add.s64 	%rd295, %rd35, %rd211;
	xor.b64  	%rd296, %rd259, %rd235;
	and.b64  	%rd297, %rd283, %rd296;
	xor.b64  	%rd298, %rd297, %rd235;
	add.s64 	%rd299, %rd295, %rd298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r246,%dummy}, %rd283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r247}, %rd283;
	}
	shf.r.wrap.b32 	%r248, %r247, %r246, 14;
	shf.r.wrap.b32 	%r249, %r246, %r247, 14;
	mov.b64 	%rd300, {%r249, %r248};
	shf.r.wrap.b32 	%r250, %r247, %r246, 18;
	shf.r.wrap.b32 	%r251, %r246, %r247, 18;
	mov.b64 	%rd301, {%r251, %r250};
	xor.b64  	%rd302, %rd300, %rd301;
	shf.l.wrap.b32 	%r252, %r246, %r247, 23;
	shf.l.wrap.b32 	%r253, %r247, %r246, 23;
	mov.b64 	%rd303, {%r253, %r252};
	xor.b64  	%rd304, %rd302, %rd303;
	add.s64 	%rd305, %rd299, %rd304;
	add.s64 	%rd306, %rd305, 6128411473006802146;
	add.s64 	%rd307, %rd306, %rd222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r254,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r255}, %rd294;
	}
	shf.r.wrap.b32 	%r256, %r255, %r254, 28;
	shf.r.wrap.b32 	%r257, %r254, %r255, 28;
	mov.b64 	%rd308, {%r257, %r256};
	shf.l.wrap.b32 	%r258, %r254, %r255, 30;
	shf.l.wrap.b32 	%r259, %r255, %r254, 30;
	mov.b64 	%rd309, {%r259, %r258};
	xor.b64  	%rd310, %rd308, %rd309;
	shf.l.wrap.b32 	%r260, %r254, %r255, 25;
	shf.l.wrap.b32 	%r261, %r255, %r254, 25;
	mov.b64 	%rd311, {%r261, %r260};
	xor.b64  	%rd312, %rd310, %rd311;
	and.b64  	%rd313, %rd294, %rd270;
	or.b64  	%rd314, %rd294, %rd270;
	and.b64  	%rd315, %rd314, %rd246;
	or.b64  	%rd316, %rd315, %rd313;
	add.s64 	%rd317, %rd316, %rd312;
	add.s64 	%rd318, %rd317, %rd306;
	add.s64 	%rd319, %rd37, %rd235;
	xor.b64  	%rd320, %rd283, %rd259;
	and.b64  	%rd321, %rd307, %rd320;
	xor.b64  	%rd322, %rd321, %rd259;
	add.s64 	%rd323, %rd319, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r262,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r263}, %rd307;
	}
	shf.r.wrap.b32 	%r264, %r263, %r262, 14;
	shf.r.wrap.b32 	%r265, %r262, %r263, 14;
	mov.b64 	%rd324, {%r265, %r264};
	shf.r.wrap.b32 	%r266, %r263, %r262, 18;
	shf.r.wrap.b32 	%r267, %r262, %r263, 18;
	mov.b64 	%rd325, {%r267, %r266};
	xor.b64  	%rd326, %rd324, %rd325;
	shf.l.wrap.b32 	%r268, %r262, %r263, 23;
	shf.l.wrap.b32 	%r269, %r263, %r262, 23;
	mov.b64 	%rd327, {%r269, %r268};
	xor.b64  	%rd328, %rd326, %rd327;
	add.s64 	%rd329, %rd323, %rd328;
	add.s64 	%rd330, %rd329, 8268148722764581231;
	add.s64 	%rd331, %rd330, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r270,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r271}, %rd318;
	}
	shf.r.wrap.b32 	%r272, %r271, %r270, 28;
	shf.r.wrap.b32 	%r273, %r270, %r271, 28;
	mov.b64 	%rd332, {%r273, %r272};
	shf.l.wrap.b32 	%r274, %r270, %r271, 30;
	shf.l.wrap.b32 	%r275, %r271, %r270, 30;
	mov.b64 	%rd333, {%r275, %r274};
	xor.b64  	%rd334, %rd332, %rd333;
	shf.l.wrap.b32 	%r276, %r270, %r271, 25;
	shf.l.wrap.b32 	%r277, %r271, %r270, 25;
	mov.b64 	%rd335, {%r277, %r276};
	xor.b64  	%rd336, %rd334, %rd335;
	and.b64  	%rd337, %rd318, %rd294;
	or.b64  	%rd338, %rd318, %rd294;
	and.b64  	%rd339, %rd338, %rd270;
	or.b64  	%rd340, %rd339, %rd337;
	add.s64 	%rd341, %rd340, %rd336;
	add.s64 	%rd342, %rd341, %rd330;
	add.s64 	%rd343, %rd39, %rd259;
	xor.b64  	%rd344, %rd307, %rd283;
	and.b64  	%rd345, %rd331, %rd344;
	xor.b64  	%rd346, %rd345, %rd283;
	add.s64 	%rd347, %rd343, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r278,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r279}, %rd331;
	}
	shf.r.wrap.b32 	%r280, %r279, %r278, 14;
	shf.r.wrap.b32 	%r281, %r278, %r279, 14;
	mov.b64 	%rd348, {%r281, %r280};
	shf.r.wrap.b32 	%r282, %r279, %r278, 18;
	shf.r.wrap.b32 	%r283, %r278, %r279, 18;
	mov.b64 	%rd349, {%r283, %r282};
	xor.b64  	%rd350, %rd348, %rd349;
	shf.l.wrap.b32 	%r284, %r278, %r279, 23;
	shf.l.wrap.b32 	%r285, %r279, %r278, 23;
	mov.b64 	%rd351, {%r285, %r284};
	xor.b64  	%rd352, %rd350, %rd351;
	add.s64 	%rd353, %rd347, %rd352;
	add.s64 	%rd354, %rd353, -9160688886553864527;
	add.s64 	%rd355, %rd354, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r286,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r287}, %rd342;
	}
	shf.r.wrap.b32 	%r288, %r287, %r286, 28;
	shf.r.wrap.b32 	%r289, %r286, %r287, 28;
	mov.b64 	%rd356, {%r289, %r288};
	shf.l.wrap.b32 	%r290, %r286, %r287, 30;
	shf.l.wrap.b32 	%r291, %r287, %r286, 30;
	mov.b64 	%rd357, {%r291, %r290};
	xor.b64  	%rd358, %rd356, %rd357;
	shf.l.wrap.b32 	%r292, %r286, %r287, 25;
	shf.l.wrap.b32 	%r293, %r287, %r286, 25;
	mov.b64 	%rd359, {%r293, %r292};
	xor.b64  	%rd360, %rd358, %rd359;
	and.b64  	%rd361, %rd342, %rd318;
	or.b64  	%rd362, %rd342, %rd318;
	and.b64  	%rd363, %rd362, %rd294;
	or.b64  	%rd364, %rd363, %rd361;
	add.s64 	%rd365, %rd364, %rd360;
	add.s64 	%rd366, %rd365, %rd354;
	xor.b64  	%rd367, %rd331, %rd307;
	and.b64  	%rd368, %rd355, %rd367;
	xor.b64  	%rd369, %rd368, %rd307;
	add.s64 	%rd370, %rd283, %rd369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r294,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r295}, %rd355;
	}
	shf.r.wrap.b32 	%r296, %r295, %r294, 14;
	shf.r.wrap.b32 	%r297, %r294, %r295, 14;
	mov.b64 	%rd371, {%r297, %r296};
	shf.r.wrap.b32 	%r298, %r295, %r294, 18;
	shf.r.wrap.b32 	%r299, %r294, %r295, 18;
	mov.b64 	%rd372, {%r299, %r298};
	xor.b64  	%rd373, %rd371, %rd372;
	shf.l.wrap.b32 	%r300, %r294, %r295, 23;
	shf.l.wrap.b32 	%r301, %r295, %r294, 23;
	mov.b64 	%rd374, {%r301, %r300};
	xor.b64  	%rd375, %rd373, %rd374;
	add.s64 	%rd376, %rd370, %rd375;
	add.s64 	%rd377, %rd376, -7215885187991268811;
	add.s64 	%rd378, %rd377, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r302,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r303}, %rd366;
	}
	shf.r.wrap.b32 	%r304, %r303, %r302, 28;
	shf.r.wrap.b32 	%r305, %r302, %r303, 28;
	mov.b64 	%rd379, {%r305, %r304};
	shf.l.wrap.b32 	%r306, %r302, %r303, 30;
	shf.l.wrap.b32 	%r307, %r303, %r302, 30;
	mov.b64 	%rd380, {%r307, %r306};
	xor.b64  	%rd381, %rd379, %rd380;
	shf.l.wrap.b32 	%r308, %r302, %r303, 25;
	shf.l.wrap.b32 	%r309, %r303, %r302, 25;
	mov.b64 	%rd382, {%r309, %r308};
	xor.b64  	%rd383, %rd381, %rd382;
	and.b64  	%rd384, %rd366, %rd342;
	or.b64  	%rd385, %rd366, %rd342;
	and.b64  	%rd386, %rd385, %rd318;
	or.b64  	%rd387, %rd386, %rd384;
	add.s64 	%rd388, %rd387, %rd383;
	add.s64 	%rd389, %rd388, %rd377;
	add.s64 	%rd390, %rd43, %rd307;
	xor.b64  	%rd391, %rd355, %rd331;
	and.b64  	%rd392, %rd378, %rd391;
	xor.b64  	%rd393, %rd392, %rd331;
	add.s64 	%rd394, %rd390, %rd393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r310,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r311}, %rd378;
	}
	shf.r.wrap.b32 	%r312, %r311, %r310, 14;
	shf.r.wrap.b32 	%r313, %r310, %r311, 14;
	mov.b64 	%rd395, {%r313, %r312};
	shf.r.wrap.b32 	%r314, %r311, %r310, 18;
	shf.r.wrap.b32 	%r315, %r310, %r311, 18;
	mov.b64 	%rd396, {%r315, %r314};
	xor.b64  	%rd397, %rd395, %rd396;
	shf.l.wrap.b32 	%r316, %r310, %r311, 23;
	shf.l.wrap.b32 	%r317, %r311, %r310, 23;
	mov.b64 	%rd398, {%r317, %r316};
	xor.b64  	%rd399, %rd397, %rd398;
	add.s64 	%rd400, %rd394, %rd399;
	add.s64 	%rd401, %rd400, -4495734319001033068;
	add.s64 	%rd402, %rd401, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd389;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 28;
	shf.r.wrap.b32 	%r321, %r318, %r319, 28;
	mov.b64 	%rd403, {%r321, %r320};
	shf.l.wrap.b32 	%r322, %r318, %r319, 30;
	shf.l.wrap.b32 	%r323, %r319, %r318, 30;
	mov.b64 	%rd404, {%r323, %r322};
	xor.b64  	%rd405, %rd403, %rd404;
	shf.l.wrap.b32 	%r324, %r318, %r319, 25;
	shf.l.wrap.b32 	%r325, %r319, %r318, 25;
	mov.b64 	%rd406, {%r325, %r324};
	xor.b64  	%rd407, %rd405, %rd406;
	and.b64  	%rd408, %rd389, %rd366;
	or.b64  	%rd409, %rd389, %rd366;
	and.b64  	%rd410, %rd409, %rd342;
	or.b64  	%rd411, %rd410, %rd408;
	add.s64 	%rd412, %rd411, %rd407;
	add.s64 	%rd413, %rd412, %rd401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r326,%dummy}, %rd6;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r327}, %rd6;
	}
	shf.r.wrap.b32 	%r328, %r327, %r326, 19;
	shf.r.wrap.b32 	%r329, %r326, %r327, 19;
	mov.b64 	%rd414, {%r329, %r328};
	shf.l.wrap.b32 	%r330, %r326, %r327, 3;
	shf.l.wrap.b32 	%r331, %r327, %r326, 3;
	mov.b64 	%rd415, {%r331, %r330};
	xor.b64  	%rd416, %rd414, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r332,%dummy}, %rd9;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd9;
	}
	shf.r.wrap.b32 	%r334, %r333, %r332, 1;
	shf.r.wrap.b32 	%r335, %r332, %r333, 1;
	mov.b64 	%rd417, {%r335, %r334};
	shf.r.wrap.b32 	%r336, %r333, %r332, 8;
	shf.r.wrap.b32 	%r337, %r332, %r333, 8;
	mov.b64 	%rd418, {%r337, %r336};
	xor.b64  	%rd419, %rd417, %rd418;
	shr.u64 	%rd420, %rd9, 7;
	xor.b64  	%rd421, %rd419, %rd420;
	add.s64 	%rd422, %rd416, %rd7;
	add.s64 	%rd423, %rd422, %rd29;
	add.s64 	%rd424, %rd423, %rd421;
	add.s64 	%rd425, %rd424, %rd331;
	xor.b64  	%rd426, %rd378, %rd355;
	and.b64  	%rd427, %rd402, %rd426;
	xor.b64  	%rd428, %rd427, %rd355;
	add.s64 	%rd429, %rd425, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r338,%dummy}, %rd402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r339}, %rd402;
	}
	shf.r.wrap.b32 	%r340, %r339, %r338, 14;
	shf.r.wrap.b32 	%r341, %r338, %r339, 14;
	mov.b64 	%rd430, {%r341, %r340};
	shf.r.wrap.b32 	%r342, %r339, %r338, 18;
	shf.r.wrap.b32 	%r343, %r338, %r339, 18;
	mov.b64 	%rd431, {%r343, %r342};
	xor.b64  	%rd432, %rd430, %rd431;
	shf.l.wrap.b32 	%r344, %r338, %r339, 23;
	shf.l.wrap.b32 	%r345, %r339, %r338, 23;
	mov.b64 	%rd433, {%r345, %r344};
	xor.b64  	%rd434, %rd432, %rd433;
	add.s64 	%rd435, %rd429, %rd434;
	add.s64 	%rd436, %rd435, -1973867731355612462;
	add.s64 	%rd437, %rd436, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd413;
	}
	shf.r.wrap.b32 	%r348, %r347, %r346, 28;
	shf.r.wrap.b32 	%r349, %r346, %r347, 28;
	mov.b64 	%rd438, {%r349, %r348};
	shf.l.wrap.b32 	%r350, %r346, %r347, 30;
	shf.l.wrap.b32 	%r351, %r347, %r346, 30;
	mov.b64 	%rd439, {%r351, %r350};
	xor.b64  	%rd440, %rd438, %rd439;
	shf.l.wrap.b32 	%r352, %r346, %r347, 25;
	shf.l.wrap.b32 	%r353, %r347, %r346, 25;
	mov.b64 	%rd441, {%r353, %r352};
	xor.b64  	%rd442, %rd440, %rd441;
	and.b64  	%rd443, %rd413, %rd389;
	or.b64  	%rd444, %rd413, %rd389;
	and.b64  	%rd445, %rd444, %rd366;
	or.b64  	%rd446, %rd445, %rd443;
	add.s64 	%rd447, %rd446, %rd442;
	add.s64 	%rd448, %rd447, %rd436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd43;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd43;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 19;
	shf.r.wrap.b32 	%r357, %r354, %r355, 19;
	mov.b64 	%rd449, {%r357, %r356};
	shf.l.wrap.b32 	%r358, %r354, %r355, 3;
	shf.l.wrap.b32 	%r359, %r355, %r354, 3;
	mov.b64 	%rd450, {%r359, %r358};
	xor.b64  	%rd451, %rd449, %rd450;
	shr.u64 	%rd452, %rd42, 3;
	xor.b64  	%rd453, %rd451, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd13;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd13;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 1;
	shf.r.wrap.b32 	%r363, %r360, %r361, 1;
	mov.b64 	%rd454, {%r363, %r362};
	shf.r.wrap.b32 	%r364, %r361, %r360, 8;
	shf.r.wrap.b32 	%r365, %r360, %r361, 8;
	mov.b64 	%rd455, {%r365, %r364};
	xor.b64  	%rd456, %rd454, %rd455;
	shr.u64 	%rd457, %rd13, 7;
	xor.b64  	%rd458, %rd456, %rd457;
	add.s64 	%rd459, %rd453, %rd9;
	add.s64 	%rd460, %rd459, %rd33;
	add.s64 	%rd461, %rd460, %rd458;
	add.s64 	%rd462, %rd461, %rd355;
	xor.b64  	%rd463, %rd402, %rd378;
	and.b64  	%rd464, %rd437, %rd463;
	xor.b64  	%rd465, %rd464, %rd378;
	add.s64 	%rd466, %rd462, %rd465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd437;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 14;
	shf.r.wrap.b32 	%r369, %r366, %r367, 14;
	mov.b64 	%rd467, {%r369, %r368};
	shf.r.wrap.b32 	%r370, %r367, %r366, 18;
	shf.r.wrap.b32 	%r371, %r366, %r367, 18;
	mov.b64 	%rd468, {%r371, %r370};
	xor.b64  	%rd469, %rd467, %rd468;
	shf.l.wrap.b32 	%r372, %r366, %r367, 23;
	shf.l.wrap.b32 	%r373, %r367, %r366, 23;
	mov.b64 	%rd470, {%r373, %r372};
	xor.b64  	%rd471, %rd469, %rd470;
	add.s64 	%rd472, %rd466, %rd471;
	add.s64 	%rd473, %rd472, -1171420211273849373;
	add.s64 	%rd474, %rd473, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r375}, %rd448;
	}
	shf.r.wrap.b32 	%r376, %r375, %r374, 28;
	shf.r.wrap.b32 	%r377, %r374, %r375, 28;
	mov.b64 	%rd475, {%r377, %r376};
	shf.l.wrap.b32 	%r378, %r374, %r375, 30;
	shf.l.wrap.b32 	%r379, %r375, %r374, 30;
	mov.b64 	%rd476, {%r379, %r378};
	xor.b64  	%rd477, %rd475, %rd476;
	shf.l.wrap.b32 	%r380, %r374, %r375, 25;
	shf.l.wrap.b32 	%r381, %r375, %r374, 25;
	mov.b64 	%rd478, {%r381, %r380};
	xor.b64  	%rd479, %rd477, %rd478;
	and.b64  	%rd480, %rd448, %rd413;
	or.b64  	%rd481, %rd448, %rd413;
	and.b64  	%rd482, %rd481, %rd389;
	or.b64  	%rd483, %rd482, %rd480;
	add.s64 	%rd484, %rd483, %rd479;
	add.s64 	%rd485, %rd484, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r382,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r383}, %rd424;
	}
	shf.r.wrap.b32 	%r384, %r383, %r382, 19;
	shf.r.wrap.b32 	%r385, %r382, %r383, 19;
	mov.b64 	%rd486, {%r385, %r384};
	shf.l.wrap.b32 	%r386, %r382, %r383, 3;
	shf.l.wrap.b32 	%r387, %r383, %r382, 3;
	mov.b64 	%rd487, {%r387, %r386};
	xor.b64  	%rd488, %rd486, %rd487;
	shr.u64 	%rd489, %rd424, 6;
	xor.b64  	%rd490, %rd488, %rd489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r388,%dummy}, %rd15;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r389}, %rd15;
	}
	shf.r.wrap.b32 	%r390, %r389, %r388, 1;
	shf.r.wrap.b32 	%r391, %r388, %r389, 1;
	mov.b64 	%rd491, {%r391, %r390};
	shf.r.wrap.b32 	%r392, %r389, %r388, 8;
	shf.r.wrap.b32 	%r393, %r388, %r389, 8;
	mov.b64 	%rd492, {%r393, %r392};
	xor.b64  	%rd493, %rd491, %rd492;
	shr.u64 	%rd494, %rd15, 7;
	xor.b64  	%rd495, %rd493, %rd494;
	add.s64 	%rd496, %rd490, %rd13;
	add.s64 	%rd497, %rd496, %rd35;
	add.s64 	%rd498, %rd497, %rd495;
	add.s64 	%rd499, %rd498, %rd378;
	xor.b64  	%rd500, %rd437, %rd402;
	and.b64  	%rd501, %rd474, %rd500;
	xor.b64  	%rd502, %rd501, %rd402;
	add.s64 	%rd503, %rd499, %rd502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r395}, %rd474;
	}
	shf.r.wrap.b32 	%r396, %r395, %r394, 14;
	shf.r.wrap.b32 	%r397, %r394, %r395, 14;
	mov.b64 	%rd504, {%r397, %r396};
	shf.r.wrap.b32 	%r398, %r395, %r394, 18;
	shf.r.wrap.b32 	%r399, %r394, %r395, 18;
	mov.b64 	%rd505, {%r399, %r398};
	xor.b64  	%rd506, %rd504, %rd505;
	shf.l.wrap.b32 	%r400, %r394, %r395, 23;
	shf.l.wrap.b32 	%r401, %r395, %r394, 23;
	mov.b64 	%rd507, {%r401, %r400};
	xor.b64  	%rd508, %rd506, %rd507;
	add.s64 	%rd509, %rd503, %rd508;
	add.s64 	%rd510, %rd509, 1135362057144423861;
	add.s64 	%rd511, %rd510, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd485;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 28;
	shf.r.wrap.b32 	%r405, %r402, %r403, 28;
	mov.b64 	%rd512, {%r405, %r404};
	shf.l.wrap.b32 	%r406, %r402, %r403, 30;
	shf.l.wrap.b32 	%r407, %r403, %r402, 30;
	mov.b64 	%rd513, {%r407, %r406};
	xor.b64  	%rd514, %rd512, %rd513;
	shf.l.wrap.b32 	%r408, %r402, %r403, 25;
	shf.l.wrap.b32 	%r409, %r403, %r402, 25;
	mov.b64 	%rd515, {%r409, %r408};
	xor.b64  	%rd516, %rd514, %rd515;
	and.b64  	%rd517, %rd485, %rd448;
	or.b64  	%rd518, %rd485, %rd448;
	and.b64  	%rd519, %rd518, %rd413;
	or.b64  	%rd520, %rd519, %rd517;
	add.s64 	%rd521, %rd520, %rd516;
	add.s64 	%rd522, %rd521, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd461;
	}
	shf.r.wrap.b32 	%r412, %r411, %r410, 19;
	shf.r.wrap.b32 	%r413, %r410, %r411, 19;
	mov.b64 	%rd523, {%r413, %r412};
	shf.l.wrap.b32 	%r414, %r410, %r411, 3;
	shf.l.wrap.b32 	%r415, %r411, %r410, 3;
	mov.b64 	%rd524, {%r415, %r414};
	xor.b64  	%rd525, %rd523, %rd524;
	shr.u64 	%rd526, %rd461, 6;
	xor.b64  	%rd527, %rd525, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd17;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd17;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 1;
	shf.r.wrap.b32 	%r419, %r416, %r417, 1;
	mov.b64 	%rd528, {%r419, %r418};
	shf.r.wrap.b32 	%r420, %r417, %r416, 8;
	shf.r.wrap.b32 	%r421, %r416, %r417, 8;
	mov.b64 	%rd529, {%r421, %r420};
	xor.b64  	%rd530, %rd528, %rd529;
	shr.u64 	%rd531, %rd17, 7;
	xor.b64  	%rd532, %rd530, %rd531;
	add.s64 	%rd533, %rd527, %rd15;
	add.s64 	%rd534, %rd533, %rd37;
	add.s64 	%rd535, %rd534, %rd532;
	add.s64 	%rd536, %rd535, %rd402;
	xor.b64  	%rd537, %rd474, %rd437;
	and.b64  	%rd538, %rd511, %rd537;
	xor.b64  	%rd539, %rd538, %rd437;
	add.s64 	%rd540, %rd536, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd511;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 14;
	shf.r.wrap.b32 	%r425, %r422, %r423, 14;
	mov.b64 	%rd541, {%r425, %r424};
	shf.r.wrap.b32 	%r426, %r423, %r422, 18;
	shf.r.wrap.b32 	%r427, %r422, %r423, 18;
	mov.b64 	%rd542, {%r427, %r426};
	xor.b64  	%rd543, %rd541, %rd542;
	shf.l.wrap.b32 	%r428, %r422, %r423, 23;
	shf.l.wrap.b32 	%r429, %r423, %r422, 23;
	mov.b64 	%rd544, {%r429, %r428};
	xor.b64  	%rd545, %rd543, %rd544;
	add.s64 	%rd546, %rd540, %rd545;
	add.s64 	%rd547, %rd546, 2597628984639134821;
	add.s64 	%rd548, %rd547, %rd413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r431}, %rd522;
	}
	shf.r.wrap.b32 	%r432, %r431, %r430, 28;
	shf.r.wrap.b32 	%r433, %r430, %r431, 28;
	mov.b64 	%rd549, {%r433, %r432};
	shf.l.wrap.b32 	%r434, %r430, %r431, 30;
	shf.l.wrap.b32 	%r435, %r431, %r430, 30;
	mov.b64 	%rd550, {%r435, %r434};
	xor.b64  	%rd551, %rd549, %rd550;
	shf.l.wrap.b32 	%r436, %r430, %r431, 25;
	shf.l.wrap.b32 	%r437, %r431, %r430, 25;
	mov.b64 	%rd552, {%r437, %r436};
	xor.b64  	%rd553, %rd551, %rd552;
	and.b64  	%rd554, %rd522, %rd485;
	or.b64  	%rd555, %rd522, %rd485;
	and.b64  	%rd556, %rd555, %rd448;
	or.b64  	%rd557, %rd556, %rd554;
	add.s64 	%rd558, %rd557, %rd553;
	add.s64 	%rd559, %rd558, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd498;
	}
	shf.r.wrap.b32 	%r440, %r439, %r438, 19;
	shf.r.wrap.b32 	%r441, %r438, %r439, 19;
	mov.b64 	%rd560, {%r441, %r440};
	shf.l.wrap.b32 	%r442, %r438, %r439, 3;
	shf.l.wrap.b32 	%r443, %r439, %r438, 3;
	mov.b64 	%rd561, {%r443, %r442};
	xor.b64  	%rd562, %rd560, %rd561;
	shr.u64 	%rd563, %rd498, 6;
	xor.b64  	%rd564, %rd562, %rd563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd19;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd19;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 1;
	shf.r.wrap.b32 	%r447, %r444, %r445, 1;
	mov.b64 	%rd565, {%r447, %r446};
	shf.r.wrap.b32 	%r448, %r445, %r444, 8;
	shf.r.wrap.b32 	%r449, %r444, %r445, 8;
	mov.b64 	%rd566, {%r449, %r448};
	xor.b64  	%rd567, %rd565, %rd566;
	shr.u64 	%rd568, %rd19, 7;
	xor.b64  	%rd569, %rd567, %rd568;
	add.s64 	%rd570, %rd564, %rd17;
	add.s64 	%rd571, %rd570, %rd39;
	add.s64 	%rd572, %rd571, %rd569;
	add.s64 	%rd573, %rd572, %rd437;
	xor.b64  	%rd574, %rd511, %rd474;
	and.b64  	%rd575, %rd548, %rd574;
	xor.b64  	%rd576, %rd575, %rd474;
	add.s64 	%rd577, %rd573, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r450,%dummy}, %rd548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd548;
	}
	shf.r.wrap.b32 	%r452, %r451, %r450, 14;
	shf.r.wrap.b32 	%r453, %r450, %r451, 14;
	mov.b64 	%rd578, {%r453, %r452};
	shf.r.wrap.b32 	%r454, %r451, %r450, 18;
	shf.r.wrap.b32 	%r455, %r450, %r451, 18;
	mov.b64 	%rd579, {%r455, %r454};
	xor.b64  	%rd580, %rd578, %rd579;
	shf.l.wrap.b32 	%r456, %r450, %r451, 23;
	shf.l.wrap.b32 	%r457, %r451, %r450, 23;
	mov.b64 	%rd581, {%r457, %r456};
	xor.b64  	%rd582, %rd580, %rd581;
	add.s64 	%rd583, %rd577, %rd582;
	add.s64 	%rd584, %rd583, 3308224258029322869;
	add.s64 	%rd585, %rd584, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd559;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 28;
	shf.r.wrap.b32 	%r461, %r458, %r459, 28;
	mov.b64 	%rd586, {%r461, %r460};
	shf.l.wrap.b32 	%r462, %r458, %r459, 30;
	shf.l.wrap.b32 	%r463, %r459, %r458, 30;
	mov.b64 	%rd587, {%r463, %r462};
	xor.b64  	%rd588, %rd586, %rd587;
	shf.l.wrap.b32 	%r464, %r458, %r459, 25;
	shf.l.wrap.b32 	%r465, %r459, %r458, 25;
	mov.b64 	%rd589, {%r465, %r464};
	xor.b64  	%rd590, %rd588, %rd589;
	and.b64  	%rd591, %rd559, %rd522;
	or.b64  	%rd592, %rd559, %rd522;
	and.b64  	%rd593, %rd592, %rd485;
	or.b64  	%rd594, %rd593, %rd591;
	add.s64 	%rd595, %rd594, %rd590;
	add.s64 	%rd596, %rd595, %rd584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r467}, %rd535;
	}
	shf.r.wrap.b32 	%r468, %r467, %r466, 19;
	shf.r.wrap.b32 	%r469, %r466, %r467, 19;
	mov.b64 	%rd597, {%r469, %r468};
	shf.l.wrap.b32 	%r470, %r466, %r467, 3;
	shf.l.wrap.b32 	%r471, %r467, %r466, 3;
	mov.b64 	%rd598, {%r471, %r470};
	xor.b64  	%rd599, %rd597, %rd598;
	shr.u64 	%rd600, %rd535, 6;
	xor.b64  	%rd601, %rd599, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd23;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd23;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 1;
	shf.r.wrap.b32 	%r475, %r472, %r473, 1;
	mov.b64 	%rd602, {%r475, %r474};
	shf.r.wrap.b32 	%r476, %r473, %r472, 8;
	shf.r.wrap.b32 	%r477, %r472, %r473, 8;
	mov.b64 	%rd603, {%r477, %r476};
	xor.b64  	%rd604, %rd602, %rd603;
	shr.u64 	%rd605, %rd23, 7;
	xor.b64  	%rd606, %rd604, %rd605;
	add.s64 	%rd607, %rd601, %rd19;
	add.s64 	%rd608, %rd607, %rd606;
	add.s64 	%rd609, %rd608, %rd474;
	xor.b64  	%rd610, %rd548, %rd511;
	and.b64  	%rd611, %rd585, %rd610;
	xor.b64  	%rd612, %rd611, %rd511;
	add.s64 	%rd613, %rd609, %rd612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r478,%dummy}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r479}, %rd585;
	}
	shf.r.wrap.b32 	%r480, %r479, %r478, 14;
	shf.r.wrap.b32 	%r481, %r478, %r479, 14;
	mov.b64 	%rd614, {%r481, %r480};
	shf.r.wrap.b32 	%r482, %r479, %r478, 18;
	shf.r.wrap.b32 	%r483, %r478, %r479, 18;
	mov.b64 	%rd615, {%r483, %r482};
	xor.b64  	%rd616, %rd614, %rd615;
	shf.l.wrap.b32 	%r484, %r478, %r479, 23;
	shf.l.wrap.b32 	%r485, %r479, %r478, 23;
	mov.b64 	%rd617, {%r485, %r484};
	xor.b64  	%rd618, %rd616, %rd617;
	add.s64 	%rd619, %rd613, %rd618;
	add.s64 	%rd620, %rd619, 5365058923640841347;
	add.s64 	%rd621, %rd620, %rd485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r486,%dummy}, %rd596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r487}, %rd596;
	}
	shf.r.wrap.b32 	%r488, %r487, %r486, 28;
	shf.r.wrap.b32 	%r489, %r486, %r487, 28;
	mov.b64 	%rd622, {%r489, %r488};
	shf.l.wrap.b32 	%r490, %r486, %r487, 30;
	shf.l.wrap.b32 	%r491, %r487, %r486, 30;
	mov.b64 	%rd623, {%r491, %r490};
	xor.b64  	%rd624, %rd622, %rd623;
	shf.l.wrap.b32 	%r492, %r486, %r487, 25;
	shf.l.wrap.b32 	%r493, %r487, %r486, 25;
	mov.b64 	%rd625, {%r493, %r492};
	xor.b64  	%rd626, %rd624, %rd625;
	and.b64  	%rd627, %rd596, %rd559;
	or.b64  	%rd628, %rd596, %rd559;
	and.b64  	%rd629, %rd628, %rd522;
	or.b64  	%rd630, %rd629, %rd627;
	add.s64 	%rd631, %rd630, %rd626;
	add.s64 	%rd632, %rd631, %rd620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r494,%dummy}, %rd572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r495}, %rd572;
	}
	shf.r.wrap.b32 	%r496, %r495, %r494, 19;
	shf.r.wrap.b32 	%r497, %r494, %r495, 19;
	mov.b64 	%rd633, {%r497, %r496};
	shf.l.wrap.b32 	%r498, %r494, %r495, 3;
	shf.l.wrap.b32 	%r499, %r495, %r494, 3;
	mov.b64 	%rd634, {%r499, %r498};
	xor.b64  	%rd635, %rd633, %rd634;
	shr.u64 	%rd636, %rd572, 6;
	xor.b64  	%rd637, %rd635, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd25;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 1;
	shf.r.wrap.b32 	%r503, %r500, %r501, 1;
	mov.b64 	%rd638, {%r503, %r502};
	shf.r.wrap.b32 	%r504, %r501, %r500, 8;
	shf.r.wrap.b32 	%r505, %r500, %r501, 8;
	mov.b64 	%rd639, {%r505, %r504};
	xor.b64  	%rd640, %rd638, %rd639;
	shr.u64 	%rd641, %rd25, 7;
	xor.b64  	%rd642, %rd640, %rd641;
	add.s64 	%rd643, %rd637, %rd23;
	add.s64 	%rd644, %rd643, %rd43;
	add.s64 	%rd645, %rd644, %rd642;
	add.s64 	%rd646, %rd645, %rd511;
	xor.b64  	%rd647, %rd585, %rd548;
	and.b64  	%rd648, %rd621, %rd647;
	xor.b64  	%rd649, %rd648, %rd548;
	add.s64 	%rd650, %rd646, %rd649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd621;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 14;
	shf.r.wrap.b32 	%r509, %r506, %r507, 14;
	mov.b64 	%rd651, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 18;
	shf.r.wrap.b32 	%r511, %r506, %r507, 18;
	mov.b64 	%rd652, {%r511, %r510};
	xor.b64  	%rd653, %rd651, %rd652;
	shf.l.wrap.b32 	%r512, %r506, %r507, 23;
	shf.l.wrap.b32 	%r513, %r507, %r506, 23;
	mov.b64 	%rd654, {%r513, %r512};
	xor.b64  	%rd655, %rd653, %rd654;
	add.s64 	%rd656, %rd650, %rd655;
	add.s64 	%rd657, %rd656, 6679025012923562964;
	add.s64 	%rd658, %rd657, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r515}, %rd632;
	}
	shf.r.wrap.b32 	%r516, %r515, %r514, 28;
	shf.r.wrap.b32 	%r517, %r514, %r515, 28;
	mov.b64 	%rd659, {%r517, %r516};
	shf.l.wrap.b32 	%r518, %r514, %r515, 30;
	shf.l.wrap.b32 	%r519, %r515, %r514, 30;
	mov.b64 	%rd660, {%r519, %r518};
	xor.b64  	%rd661, %rd659, %rd660;
	shf.l.wrap.b32 	%r520, %r514, %r515, 25;
	shf.l.wrap.b32 	%r521, %r515, %r514, 25;
	mov.b64 	%rd662, {%r521, %r520};
	xor.b64  	%rd663, %rd661, %rd662;
	and.b64  	%rd664, %rd632, %rd596;
	or.b64  	%rd665, %rd632, %rd596;
	and.b64  	%rd666, %rd665, %rd559;
	or.b64  	%rd667, %rd666, %rd664;
	add.s64 	%rd668, %rd667, %rd663;
	add.s64 	%rd669, %rd668, %rd657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd608;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 19;
	shf.r.wrap.b32 	%r525, %r522, %r523, 19;
	mov.b64 	%rd670, {%r525, %r524};
	shf.l.wrap.b32 	%r526, %r522, %r523, 3;
	shf.l.wrap.b32 	%r527, %r523, %r522, 3;
	mov.b64 	%rd671, {%r527, %r526};
	xor.b64  	%rd672, %rd670, %rd671;
	shr.u64 	%rd673, %rd608, 6;
	xor.b64  	%rd674, %rd672, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd27;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd27;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 1;
	shf.r.wrap.b32 	%r531, %r528, %r529, 1;
	mov.b64 	%rd675, {%r531, %r530};
	shf.r.wrap.b32 	%r532, %r529, %r528, 8;
	shf.r.wrap.b32 	%r533, %r528, %r529, 8;
	mov.b64 	%rd676, {%r533, %r532};
	xor.b64  	%rd677, %rd675, %rd676;
	shr.u64 	%rd678, %rd27, 7;
	xor.b64  	%rd679, %rd677, %rd678;
	add.s64 	%rd680, %rd674, %rd25;
	add.s64 	%rd681, %rd680, %rd424;
	add.s64 	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd682, %rd548;
	xor.b64  	%rd684, %rd621, %rd585;
	and.b64  	%rd685, %rd658, %rd684;
	xor.b64  	%rd686, %rd685, %rd585;
	add.s64 	%rd687, %rd683, %rd686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r534,%dummy}, %rd658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd658;
	}
	shf.r.wrap.b32 	%r536, %r535, %r534, 14;
	shf.r.wrap.b32 	%r537, %r534, %r535, 14;
	mov.b64 	%rd688, {%r537, %r536};
	shf.r.wrap.b32 	%r538, %r535, %r534, 18;
	shf.r.wrap.b32 	%r539, %r534, %r535, 18;
	mov.b64 	%rd689, {%r539, %r538};
	xor.b64  	%rd690, %rd688, %rd689;
	shf.l.wrap.b32 	%r540, %r534, %r535, 23;
	shf.l.wrap.b32 	%r541, %r535, %r534, 23;
	mov.b64 	%rd691, {%r541, %r540};
	xor.b64  	%rd692, %rd690, %rd691;
	add.s64 	%rd693, %rd687, %rd692;
	add.s64 	%rd694, %rd693, 8573033837759648693;
	add.s64 	%rd695, %rd694, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r542,%dummy}, %rd669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r543}, %rd669;
	}
	shf.r.wrap.b32 	%r544, %r543, %r542, 28;
	shf.r.wrap.b32 	%r545, %r542, %r543, 28;
	mov.b64 	%rd696, {%r545, %r544};
	shf.l.wrap.b32 	%r546, %r542, %r543, 30;
	shf.l.wrap.b32 	%r547, %r543, %r542, 30;
	mov.b64 	%rd697, {%r547, %r546};
	xor.b64  	%rd698, %rd696, %rd697;
	shf.l.wrap.b32 	%r548, %r542, %r543, 25;
	shf.l.wrap.b32 	%r549, %r543, %r542, 25;
	mov.b64 	%rd699, {%r549, %r548};
	xor.b64  	%rd700, %rd698, %rd699;
	and.b64  	%rd701, %rd669, %rd632;
	or.b64  	%rd702, %rd669, %rd632;
	and.b64  	%rd703, %rd702, %rd596;
	or.b64  	%rd704, %rd703, %rd701;
	add.s64 	%rd705, %rd704, %rd700;
	add.s64 	%rd706, %rd705, %rd694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r550,%dummy}, %rd645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r551}, %rd645;
	}
	shf.r.wrap.b32 	%r552, %r551, %r550, 19;
	shf.r.wrap.b32 	%r553, %r550, %r551, 19;
	mov.b64 	%rd707, {%r553, %r552};
	shf.l.wrap.b32 	%r554, %r550, %r551, 3;
	shf.l.wrap.b32 	%r555, %r551, %r550, 3;
	mov.b64 	%rd708, {%r555, %r554};
	xor.b64  	%rd709, %rd707, %rd708;
	shr.u64 	%rd710, %rd645, 6;
	xor.b64  	%rd711, %rd709, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd29;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd29;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 1;
	shf.r.wrap.b32 	%r559, %r556, %r557, 1;
	mov.b64 	%rd712, {%r559, %r558};
	shf.r.wrap.b32 	%r560, %r557, %r556, 8;
	shf.r.wrap.b32 	%r561, %r556, %r557, 8;
	mov.b64 	%rd713, {%r561, %r560};
	xor.b64  	%rd714, %rd712, %rd713;
	shr.u64 	%rd715, %rd29, 7;
	xor.b64  	%rd716, %rd714, %rd715;
	add.s64 	%rd717, %rd711, %rd27;
	add.s64 	%rd718, %rd717, %rd461;
	add.s64 	%rd719, %rd718, %rd716;
	add.s64 	%rd720, %rd719, %rd585;
	xor.b64  	%rd721, %rd658, %rd621;
	and.b64  	%rd722, %rd695, %rd721;
	xor.b64  	%rd723, %rd722, %rd621;
	add.s64 	%rd724, %rd720, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd695;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 14;
	shf.r.wrap.b32 	%r565, %r562, %r563, 14;
	mov.b64 	%rd725, {%r565, %r564};
	shf.r.wrap.b32 	%r566, %r563, %r562, 18;
	shf.r.wrap.b32 	%r567, %r562, %r563, 18;
	mov.b64 	%rd726, {%r567, %r566};
	xor.b64  	%rd727, %rd725, %rd726;
	shf.l.wrap.b32 	%r568, %r562, %r563, 23;
	shf.l.wrap.b32 	%r569, %r563, %r562, 23;
	mov.b64 	%rd728, {%r569, %r568};
	xor.b64  	%rd729, %rd727, %rd728;
	add.s64 	%rd730, %rd724, %rd729;
	add.s64 	%rd731, %rd730, -7476448914759557205;
	add.s64 	%rd732, %rd731, %rd596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd706;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 28;
	shf.r.wrap.b32 	%r573, %r570, %r571, 28;
	mov.b64 	%rd733, {%r573, %r572};
	shf.l.wrap.b32 	%r574, %r570, %r571, 30;
	shf.l.wrap.b32 	%r575, %r571, %r570, 30;
	mov.b64 	%rd734, {%r575, %r574};
	xor.b64  	%rd735, %rd733, %rd734;
	shf.l.wrap.b32 	%r576, %r570, %r571, 25;
	shf.l.wrap.b32 	%r577, %r571, %r570, 25;
	mov.b64 	%rd736, {%r577, %r576};
	xor.b64  	%rd737, %rd735, %rd736;
	and.b64  	%rd738, %rd706, %rd669;
	or.b64  	%rd739, %rd706, %rd669;
	and.b64  	%rd740, %rd739, %rd632;
	or.b64  	%rd741, %rd740, %rd738;
	add.s64 	%rd742, %rd741, %rd737;
	add.s64 	%rd743, %rd742, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd682;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 19;
	shf.r.wrap.b32 	%r581, %r578, %r579, 19;
	mov.b64 	%rd744, {%r581, %r580};
	shf.l.wrap.b32 	%r582, %r578, %r579, 3;
	shf.l.wrap.b32 	%r583, %r579, %r578, 3;
	mov.b64 	%rd745, {%r583, %r582};
	xor.b64  	%rd746, %rd744, %rd745;
	shr.u64 	%rd747, %rd682, 6;
	xor.b64  	%rd748, %rd746, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd33;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd33;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 1;
	shf.r.wrap.b32 	%r587, %r584, %r585, 1;
	mov.b64 	%rd749, {%r587, %r586};
	shf.r.wrap.b32 	%r588, %r585, %r584, 8;
	shf.r.wrap.b32 	%r589, %r584, %r585, 8;
	mov.b64 	%rd750, {%r589, %r588};
	xor.b64  	%rd751, %rd749, %rd750;
	shr.u64 	%rd752, %rd33, 7;
	xor.b64  	%rd753, %rd751, %rd752;
	add.s64 	%rd754, %rd748, %rd29;
	add.s64 	%rd755, %rd754, %rd498;
	add.s64 	%rd756, %rd755, %rd753;
	add.s64 	%rd757, %rd756, %rd621;
	xor.b64  	%rd758, %rd695, %rd658;
	and.b64  	%rd759, %rd732, %rd758;
	xor.b64  	%rd760, %rd759, %rd658;
	add.s64 	%rd761, %rd757, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd732;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 14;
	shf.r.wrap.b32 	%r593, %r590, %r591, 14;
	mov.b64 	%rd762, {%r593, %r592};
	shf.r.wrap.b32 	%r594, %r591, %r590, 18;
	shf.r.wrap.b32 	%r595, %r590, %r591, 18;
	mov.b64 	%rd763, {%r595, %r594};
	xor.b64  	%rd764, %rd762, %rd763;
	shf.l.wrap.b32 	%r596, %r590, %r591, 23;
	shf.l.wrap.b32 	%r597, %r591, %r590, 23;
	mov.b64 	%rd765, {%r597, %r596};
	xor.b64  	%rd766, %rd764, %rd765;
	add.s64 	%rd767, %rd761, %rd766;
	add.s64 	%rd768, %rd767, -6327057829258317296;
	add.s64 	%rd769, %rd768, %rd632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r598,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r599}, %rd743;
	}
	shf.r.wrap.b32 	%r600, %r599, %r598, 28;
	shf.r.wrap.b32 	%r601, %r598, %r599, 28;
	mov.b64 	%rd770, {%r601, %r600};
	shf.l.wrap.b32 	%r602, %r598, %r599, 30;
	shf.l.wrap.b32 	%r603, %r599, %r598, 30;
	mov.b64 	%rd771, {%r603, %r602};
	xor.b64  	%rd772, %rd770, %rd771;
	shf.l.wrap.b32 	%r604, %r598, %r599, 25;
	shf.l.wrap.b32 	%r605, %r599, %r598, 25;
	mov.b64 	%rd773, {%r605, %r604};
	xor.b64  	%rd774, %rd772, %rd773;
	and.b64  	%rd775, %rd743, %rd706;
	or.b64  	%rd776, %rd743, %rd706;
	and.b64  	%rd777, %rd776, %rd669;
	or.b64  	%rd778, %rd777, %rd775;
	add.s64 	%rd779, %rd778, %rd774;
	add.s64 	%rd780, %rd779, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r606,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r607}, %rd719;
	}
	shf.r.wrap.b32 	%r608, %r607, %r606, 19;
	shf.r.wrap.b32 	%r609, %r606, %r607, 19;
	mov.b64 	%rd781, {%r609, %r608};
	shf.l.wrap.b32 	%r610, %r606, %r607, 3;
	shf.l.wrap.b32 	%r611, %r607, %r606, 3;
	mov.b64 	%rd782, {%r611, %r610};
	xor.b64  	%rd783, %rd781, %rd782;
	shr.u64 	%rd784, %rd719, 6;
	xor.b64  	%rd785, %rd783, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd35;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd35;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 1;
	shf.r.wrap.b32 	%r615, %r612, %r613, 1;
	mov.b64 	%rd786, {%r615, %r614};
	shf.r.wrap.b32 	%r616, %r613, %r612, 8;
	shf.r.wrap.b32 	%r617, %r612, %r613, 8;
	mov.b64 	%rd787, {%r617, %r616};
	xor.b64  	%rd788, %rd786, %rd787;
	shr.u64 	%rd789, %rd35, 7;
	xor.b64  	%rd790, %rd788, %rd789;
	add.s64 	%rd791, %rd785, %rd33;
	add.s64 	%rd792, %rd791, %rd535;
	add.s64 	%rd793, %rd792, %rd790;
	add.s64 	%rd794, %rd793, %rd658;
	xor.b64  	%rd795, %rd732, %rd695;
	and.b64  	%rd796, %rd769, %rd795;
	xor.b64  	%rd797, %rd796, %rd695;
	add.s64 	%rd798, %rd794, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd769;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 14;
	shf.r.wrap.b32 	%r621, %r618, %r619, 14;
	mov.b64 	%rd799, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 18;
	shf.r.wrap.b32 	%r623, %r618, %r619, 18;
	mov.b64 	%rd800, {%r623, %r622};
	xor.b64  	%rd801, %rd799, %rd800;
	shf.l.wrap.b32 	%r624, %r618, %r619, 23;
	shf.l.wrap.b32 	%r625, %r619, %r618, 23;
	mov.b64 	%rd802, {%r625, %r624};
	xor.b64  	%rd803, %rd801, %rd802;
	add.s64 	%rd804, %rd798, %rd803;
	add.s64 	%rd805, %rd804, -5763719355590565569;
	add.s64 	%rd806, %rd805, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd780;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 28;
	shf.r.wrap.b32 	%r629, %r626, %r627, 28;
	mov.b64 	%rd807, {%r629, %r628};
	shf.l.wrap.b32 	%r630, %r626, %r627, 30;
	shf.l.wrap.b32 	%r631, %r627, %r626, 30;
	mov.b64 	%rd808, {%r631, %r630};
	xor.b64  	%rd809, %rd807, %rd808;
	shf.l.wrap.b32 	%r632, %r626, %r627, 25;
	shf.l.wrap.b32 	%r633, %r627, %r626, 25;
	mov.b64 	%rd810, {%r633, %r632};
	xor.b64  	%rd811, %rd809, %rd810;
	and.b64  	%rd812, %rd780, %rd743;
	or.b64  	%rd813, %rd780, %rd743;
	and.b64  	%rd814, %rd813, %rd706;
	or.b64  	%rd815, %rd814, %rd812;
	add.s64 	%rd816, %rd815, %rd811;
	add.s64 	%rd817, %rd816, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd756;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 19;
	shf.r.wrap.b32 	%r637, %r634, %r635, 19;
	mov.b64 	%rd818, {%r637, %r636};
	shf.l.wrap.b32 	%r638, %r634, %r635, 3;
	shf.l.wrap.b32 	%r639, %r635, %r634, 3;
	mov.b64 	%rd819, {%r639, %r638};
	xor.b64  	%rd820, %rd818, %rd819;
	shr.u64 	%rd821, %rd756, 6;
	xor.b64  	%rd822, %rd820, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd37;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 1;
	shf.r.wrap.b32 	%r643, %r640, %r641, 1;
	mov.b64 	%rd823, {%r643, %r642};
	shf.r.wrap.b32 	%r644, %r641, %r640, 8;
	shf.r.wrap.b32 	%r645, %r640, %r641, 8;
	mov.b64 	%rd824, {%r645, %r644};
	xor.b64  	%rd825, %rd823, %rd824;
	shr.u64 	%rd826, %rd37, 7;
	xor.b64  	%rd827, %rd825, %rd826;
	add.s64 	%rd828, %rd822, %rd35;
	add.s64 	%rd829, %rd828, %rd572;
	add.s64 	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd830, %rd695;
	xor.b64  	%rd832, %rd769, %rd732;
	and.b64  	%rd833, %rd806, %rd832;
	xor.b64  	%rd834, %rd833, %rd732;
	add.s64 	%rd835, %rd831, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r646,%dummy}, %rd806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd806;
	}
	shf.r.wrap.b32 	%r648, %r647, %r646, 14;
	shf.r.wrap.b32 	%r649, %r646, %r647, 14;
	mov.b64 	%rd836, {%r649, %r648};
	shf.r.wrap.b32 	%r650, %r647, %r646, 18;
	shf.r.wrap.b32 	%r651, %r646, %r647, 18;
	mov.b64 	%rd837, {%r651, %r650};
	xor.b64  	%rd838, %rd836, %rd837;
	shf.l.wrap.b32 	%r652, %r646, %r647, 23;
	shf.l.wrap.b32 	%r653, %r647, %r646, 23;
	mov.b64 	%rd839, {%r653, %r652};
	xor.b64  	%rd840, %rd838, %rd839;
	add.s64 	%rd841, %rd835, %rd840;
	add.s64 	%rd842, %rd841, -4658551843659510044;
	add.s64 	%rd843, %rd842, %rd706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r654,%dummy}, %rd817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r655}, %rd817;
	}
	shf.r.wrap.b32 	%r656, %r655, %r654, 28;
	shf.r.wrap.b32 	%r657, %r654, %r655, 28;
	mov.b64 	%rd844, {%r657, %r656};
	shf.l.wrap.b32 	%r658, %r654, %r655, 30;
	shf.l.wrap.b32 	%r659, %r655, %r654, 30;
	mov.b64 	%rd845, {%r659, %r658};
	xor.b64  	%rd846, %rd844, %rd845;
	shf.l.wrap.b32 	%r660, %r654, %r655, 25;
	shf.l.wrap.b32 	%r661, %r655, %r654, 25;
	mov.b64 	%rd847, {%r661, %r660};
	xor.b64  	%rd848, %rd846, %rd847;
	and.b64  	%rd849, %rd817, %rd780;
	or.b64  	%rd850, %rd817, %rd780;
	and.b64  	%rd851, %rd850, %rd743;
	or.b64  	%rd852, %rd851, %rd849;
	add.s64 	%rd853, %rd852, %rd848;
	add.s64 	%rd854, %rd853, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r662,%dummy}, %rd793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r663}, %rd793;
	}
	shf.r.wrap.b32 	%r664, %r663, %r662, 19;
	shf.r.wrap.b32 	%r665, %r662, %r663, 19;
	mov.b64 	%rd855, {%r665, %r664};
	shf.l.wrap.b32 	%r666, %r662, %r663, 3;
	shf.l.wrap.b32 	%r667, %r663, %r662, 3;
	mov.b64 	%rd856, {%r667, %r666};
	xor.b64  	%rd857, %rd855, %rd856;
	shr.u64 	%rd858, %rd793, 6;
	xor.b64  	%rd859, %rd857, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd39;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd39;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 1;
	shf.r.wrap.b32 	%r671, %r668, %r669, 1;
	mov.b64 	%rd860, {%r671, %r670};
	shf.r.wrap.b32 	%r672, %r669, %r668, 8;
	shf.r.wrap.b32 	%r673, %r668, %r669, 8;
	mov.b64 	%rd861, {%r673, %r672};
	xor.b64  	%rd862, %rd860, %rd861;
	shr.u64 	%rd863, %rd39, 7;
	xor.b64  	%rd864, %rd862, %rd863;
	add.s64 	%rd865, %rd859, %rd37;
	add.s64 	%rd866, %rd865, %rd608;
	add.s64 	%rd867, %rd866, %rd864;
	add.s64 	%rd868, %rd867, %rd732;
	xor.b64  	%rd869, %rd806, %rd769;
	and.b64  	%rd870, %rd843, %rd869;
	xor.b64  	%rd871, %rd870, %rd769;
	add.s64 	%rd872, %rd868, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd843;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 14;
	shf.r.wrap.b32 	%r677, %r674, %r675, 14;
	mov.b64 	%rd873, {%r677, %r676};
	shf.r.wrap.b32 	%r678, %r675, %r674, 18;
	shf.r.wrap.b32 	%r679, %r674, %r675, 18;
	mov.b64 	%rd874, {%r679, %r678};
	xor.b64  	%rd875, %rd873, %rd874;
	shf.l.wrap.b32 	%r680, %r674, %r675, 23;
	shf.l.wrap.b32 	%r681, %r675, %r674, 23;
	mov.b64 	%rd876, {%r681, %r680};
	xor.b64  	%rd877, %rd875, %rd876;
	add.s64 	%rd878, %rd872, %rd877;
	add.s64 	%rd879, %rd878, -4116276920077217854;
	add.s64 	%rd880, %rd879, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd854;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 28;
	shf.r.wrap.b32 	%r685, %r682, %r683, 28;
	mov.b64 	%rd881, {%r685, %r684};
	shf.l.wrap.b32 	%r686, %r682, %r683, 30;
	shf.l.wrap.b32 	%r687, %r683, %r682, 30;
	mov.b64 	%rd882, {%r687, %r686};
	xor.b64  	%rd883, %rd881, %rd882;
	shf.l.wrap.b32 	%r688, %r682, %r683, 25;
	shf.l.wrap.b32 	%r689, %r683, %r682, 25;
	mov.b64 	%rd884, {%r689, %r688};
	xor.b64  	%rd885, %rd883, %rd884;
	and.b64  	%rd886, %rd854, %rd817;
	or.b64  	%rd887, %rd854, %rd817;
	and.b64  	%rd888, %rd887, %rd780;
	or.b64  	%rd889, %rd888, %rd886;
	add.s64 	%rd890, %rd889, %rd885;
	add.s64 	%rd891, %rd890, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd830;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 19;
	shf.r.wrap.b32 	%r693, %r690, %r691, 19;
	mov.b64 	%rd892, {%r693, %r692};
	shf.l.wrap.b32 	%r694, %r690, %r691, 3;
	shf.l.wrap.b32 	%r695, %r691, %r690, 3;
	mov.b64 	%rd893, {%r695, %r694};
	xor.b64  	%rd894, %rd892, %rd893;
	shr.u64 	%rd895, %rd830, 6;
	xor.b64  	%rd896, %rd894, %rd895;
	shf.r.wrap.b32 	%r696, %r327, %r326, 1;
	shf.r.wrap.b32 	%r697, %r326, %r327, 1;
	mov.b64 	%rd897, {%r697, %r696};
	shf.r.wrap.b32 	%r698, %r327, %r326, 8;
	shf.r.wrap.b32 	%r699, %r326, %r327, 8;
	mov.b64 	%rd898, {%r699, %r698};
	xor.b64  	%rd899, %rd897, %rd898;
	add.s64 	%rd900, %rd896, %rd39;
	add.s64 	%rd901, %rd900, %rd645;
	add.s64 	%rd902, %rd901, %rd899;
	add.s64 	%rd903, %rd902, %rd769;
	xor.b64  	%rd904, %rd843, %rd806;
	and.b64  	%rd905, %rd880, %rd904;
	xor.b64  	%rd906, %rd905, %rd806;
	add.s64 	%rd907, %rd903, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r700,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd880;
	}
	shf.r.wrap.b32 	%r702, %r701, %r700, 14;
	shf.r.wrap.b32 	%r703, %r700, %r701, 14;
	mov.b64 	%rd908, {%r703, %r702};
	shf.r.wrap.b32 	%r704, %r701, %r700, 18;
	shf.r.wrap.b32 	%r705, %r700, %r701, 18;
	mov.b64 	%rd909, {%r705, %r704};
	xor.b64  	%rd910, %rd908, %rd909;
	shf.l.wrap.b32 	%r706, %r700, %r701, 23;
	shf.l.wrap.b32 	%r707, %r701, %r700, 23;
	mov.b64 	%rd911, {%r707, %r706};
	xor.b64  	%rd912, %rd910, %rd911;
	add.s64 	%rd913, %rd907, %rd912;
	add.s64 	%rd914, %rd913, -3051310485924567259;
	add.s64 	%rd915, %rd914, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd891;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 28;
	shf.r.wrap.b32 	%r711, %r708, %r709, 28;
	mov.b64 	%rd916, {%r711, %r710};
	shf.l.wrap.b32 	%r712, %r708, %r709, 30;
	shf.l.wrap.b32 	%r713, %r709, %r708, 30;
	mov.b64 	%rd917, {%r713, %r712};
	xor.b64  	%rd918, %rd916, %rd917;
	shf.l.wrap.b32 	%r714, %r708, %r709, 25;
	shf.l.wrap.b32 	%r715, %r709, %r708, 25;
	mov.b64 	%rd919, {%r715, %r714};
	xor.b64  	%rd920, %rd918, %rd919;
	and.b64  	%rd921, %rd891, %rd854;
	or.b64  	%rd922, %rd891, %rd854;
	and.b64  	%rd923, %rd922, %rd817;
	or.b64  	%rd924, %rd923, %rd921;
	add.s64 	%rd925, %rd924, %rd920;
	add.s64 	%rd926, %rd925, %rd914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd867;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 19;
	shf.r.wrap.b32 	%r719, %r716, %r717, 19;
	mov.b64 	%rd927, {%r719, %r718};
	shf.l.wrap.b32 	%r720, %r716, %r717, 3;
	shf.l.wrap.b32 	%r721, %r717, %r716, 3;
	mov.b64 	%rd928, {%r721, %r720};
	xor.b64  	%rd929, %rd927, %rd928;
	shr.u64 	%rd930, %rd867, 6;
	xor.b64  	%rd931, %rd929, %rd930;
	shf.r.wrap.b32 	%r722, %r355, %r354, 1;
	shf.r.wrap.b32 	%r723, %r354, %r355, 1;
	mov.b64 	%rd932, {%r723, %r722};
	shf.r.wrap.b32 	%r724, %r355, %r354, 8;
	shf.r.wrap.b32 	%r725, %r354, %r355, 8;
	mov.b64 	%rd933, {%r725, %r724};
	xor.b64  	%rd934, %rd932, %rd933;
	shr.u64 	%rd935, %rd42, 4;
	xor.b64  	%rd936, %rd934, %rd935;
	add.s64 	%rd937, %rd931, %rd682;
	add.s64 	%rd938, %rd937, %rd936;
	add.s64 	%rd939, %rd938, %rd806;
	xor.b64  	%rd940, %rd880, %rd843;
	and.b64  	%rd941, %rd915, %rd940;
	xor.b64  	%rd942, %rd941, %rd843;
	add.s64 	%rd943, %rd939, %rd942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd915;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 14;
	shf.r.wrap.b32 	%r729, %r726, %r727, 14;
	mov.b64 	%rd944, {%r729, %r728};
	shf.r.wrap.b32 	%r730, %r727, %r726, 18;
	shf.r.wrap.b32 	%r731, %r726, %r727, 18;
	mov.b64 	%rd945, {%r731, %r730};
	xor.b64  	%rd946, %rd944, %rd945;
	shf.l.wrap.b32 	%r732, %r726, %r727, 23;
	shf.l.wrap.b32 	%r733, %r727, %r726, 23;
	mov.b64 	%rd947, {%r733, %r732};
	xor.b64  	%rd948, %rd946, %rd947;
	add.s64 	%rd949, %rd943, %rd948;
	add.s64 	%rd950, %rd949, 489312712824947311;
	add.s64 	%rd951, %rd950, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r734,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r735}, %rd926;
	}
	shf.r.wrap.b32 	%r736, %r735, %r734, 28;
	shf.r.wrap.b32 	%r737, %r734, %r735, 28;
	mov.b64 	%rd952, {%r737, %r736};
	shf.l.wrap.b32 	%r738, %r734, %r735, 30;
	shf.l.wrap.b32 	%r739, %r735, %r734, 30;
	mov.b64 	%rd953, {%r739, %r738};
	xor.b64  	%rd954, %rd952, %rd953;
	shf.l.wrap.b32 	%r740, %r734, %r735, 25;
	shf.l.wrap.b32 	%r741, %r735, %r734, 25;
	mov.b64 	%rd955, {%r741, %r740};
	xor.b64  	%rd956, %rd954, %rd955;
	and.b64  	%rd957, %rd926, %rd891;
	or.b64  	%rd958, %rd926, %rd891;
	and.b64  	%rd959, %rd958, %rd854;
	or.b64  	%rd960, %rd959, %rd957;
	add.s64 	%rd961, %rd960, %rd956;
	add.s64 	%rd962, %rd961, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r743}, %rd902;
	}
	shf.r.wrap.b32 	%r744, %r743, %r742, 19;
	shf.r.wrap.b32 	%r745, %r742, %r743, 19;
	mov.b64 	%rd963, {%r745, %r744};
	shf.l.wrap.b32 	%r746, %r742, %r743, 3;
	shf.l.wrap.b32 	%r747, %r743, %r742, 3;
	mov.b64 	%rd964, {%r747, %r746};
	xor.b64  	%rd965, %rd963, %rd964;
	shr.u64 	%rd966, %rd902, 6;
	xor.b64  	%rd967, %rd965, %rd966;
	shf.r.wrap.b32 	%r748, %r383, %r382, 1;
	shf.r.wrap.b32 	%r749, %r382, %r383, 1;
	mov.b64 	%rd968, {%r749, %r748};
	shf.r.wrap.b32 	%r750, %r383, %r382, 8;
	shf.r.wrap.b32 	%r751, %r382, %r383, 8;
	mov.b64 	%rd969, {%r751, %r750};
	xor.b64  	%rd970, %rd968, %rd969;
	shr.u64 	%rd971, %rd424, 7;
	xor.b64  	%rd972, %rd970, %rd971;
	add.s64 	%rd973, %rd967, %rd43;
	add.s64 	%rd974, %rd973, %rd719;
	add.s64 	%rd975, %rd974, %rd972;
	add.s64 	%rd976, %rd975, %rd843;
	xor.b64  	%rd977, %rd915, %rd880;
	and.b64  	%rd978, %rd951, %rd977;
	xor.b64  	%rd979, %rd978, %rd880;
	add.s64 	%rd980, %rd976, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r752,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r753}, %rd951;
	}
	shf.r.wrap.b32 	%r754, %r753, %r752, 14;
	shf.r.wrap.b32 	%r755, %r752, %r753, 14;
	mov.b64 	%rd981, {%r755, %r754};
	shf.r.wrap.b32 	%r756, %r753, %r752, 18;
	shf.r.wrap.b32 	%r757, %r752, %r753, 18;
	mov.b64 	%rd982, {%r757, %r756};
	xor.b64  	%rd983, %rd981, %rd982;
	shf.l.wrap.b32 	%r758, %r752, %r753, 23;
	shf.l.wrap.b32 	%r759, %r753, %r752, 23;
	mov.b64 	%rd984, {%r759, %r758};
	xor.b64  	%rd985, %rd983, %rd984;
	add.s64 	%rd986, %rd980, %rd985;
	add.s64 	%rd987, %rd986, 1452737877330783856;
	add.s64 	%rd988, %rd987, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r760,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r761}, %rd962;
	}
	shf.r.wrap.b32 	%r762, %r761, %r760, 28;
	shf.r.wrap.b32 	%r763, %r760, %r761, 28;
	mov.b64 	%rd989, {%r763, %r762};
	shf.l.wrap.b32 	%r764, %r760, %r761, 30;
	shf.l.wrap.b32 	%r765, %r761, %r760, 30;
	mov.b64 	%rd990, {%r765, %r764};
	xor.b64  	%rd991, %rd989, %rd990;
	shf.l.wrap.b32 	%r766, %r760, %r761, 25;
	shf.l.wrap.b32 	%r767, %r761, %r760, 25;
	mov.b64 	%rd992, {%r767, %r766};
	xor.b64  	%rd993, %rd991, %rd992;
	and.b64  	%rd994, %rd962, %rd926;
	or.b64  	%rd995, %rd962, %rd926;
	and.b64  	%rd996, %rd995, %rd891;
	or.b64  	%rd997, %rd996, %rd994;
	add.s64 	%rd998, %rd997, %rd993;
	add.s64 	%rd999, %rd998, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r768,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r769}, %rd938;
	}
	shf.r.wrap.b32 	%r770, %r769, %r768, 19;
	shf.r.wrap.b32 	%r771, %r768, %r769, 19;
	mov.b64 	%rd1000, {%r771, %r770};
	shf.l.wrap.b32 	%r772, %r768, %r769, 3;
	shf.l.wrap.b32 	%r773, %r769, %r768, 3;
	mov.b64 	%rd1001, {%r773, %r772};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	shr.u64 	%rd1003, %rd938, 6;
	xor.b64  	%rd1004, %rd1002, %rd1003;
	shf.r.wrap.b32 	%r774, %r411, %r410, 1;
	shf.r.wrap.b32 	%r775, %r410, %r411, 1;
	mov.b64 	%rd1005, {%r775, %r774};
	shf.r.wrap.b32 	%r776, %r411, %r410, 8;
	shf.r.wrap.b32 	%r777, %r410, %r411, 8;
	mov.b64 	%rd1006, {%r777, %r776};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	shr.u64 	%rd1008, %rd461, 7;
	xor.b64  	%rd1009, %rd1007, %rd1008;
	add.s64 	%rd1010, %rd1004, %rd424;
	add.s64 	%rd1011, %rd1010, %rd756;
	add.s64 	%rd1012, %rd1011, %rd1009;
	add.s64 	%rd1013, %rd1012, %rd880;
	xor.b64  	%rd1014, %rd951, %rd915;
	and.b64  	%rd1015, %rd988, %rd1014;
	xor.b64  	%rd1016, %rd1015, %rd915;
	add.s64 	%rd1017, %rd1013, %rd1016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r779}, %rd988;
	}
	shf.r.wrap.b32 	%r780, %r779, %r778, 14;
	shf.r.wrap.b32 	%r781, %r778, %r779, 14;
	mov.b64 	%rd1018, {%r781, %r780};
	shf.r.wrap.b32 	%r782, %r779, %r778, 18;
	shf.r.wrap.b32 	%r783, %r778, %r779, 18;
	mov.b64 	%rd1019, {%r783, %r782};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	shf.l.wrap.b32 	%r784, %r778, %r779, 23;
	shf.l.wrap.b32 	%r785, %r779, %r778, 23;
	mov.b64 	%rd1021, {%r785, %r784};
	xor.b64  	%rd1022, %rd1020, %rd1021;
	add.s64 	%rd1023, %rd1017, %rd1022;
	add.s64 	%rd1024, %rd1023, 2861767655752347644;
	add.s64 	%rd1025, %rd1024, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r787}, %rd999;
	}
	shf.r.wrap.b32 	%r788, %r787, %r786, 28;
	shf.r.wrap.b32 	%r789, %r786, %r787, 28;
	mov.b64 	%rd1026, {%r789, %r788};
	shf.l.wrap.b32 	%r790, %r786, %r787, 30;
	shf.l.wrap.b32 	%r791, %r787, %r786, 30;
	mov.b64 	%rd1027, {%r791, %r790};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	shf.l.wrap.b32 	%r792, %r786, %r787, 25;
	shf.l.wrap.b32 	%r793, %r787, %r786, 25;
	mov.b64 	%rd1029, {%r793, %r792};
	xor.b64  	%rd1030, %rd1028, %rd1029;
	and.b64  	%rd1031, %rd999, %rd962;
	or.b64  	%rd1032, %rd999, %rd962;
	and.b64  	%rd1033, %rd1032, %rd926;
	or.b64  	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd1034, %rd1030;
	add.s64 	%rd1036, %rd1035, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r794,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r795}, %rd975;
	}
	shf.r.wrap.b32 	%r796, %r795, %r794, 19;
	shf.r.wrap.b32 	%r797, %r794, %r795, 19;
	mov.b64 	%rd1037, {%r797, %r796};
	shf.l.wrap.b32 	%r798, %r794, %r795, 3;
	shf.l.wrap.b32 	%r799, %r795, %r794, 3;
	mov.b64 	%rd1038, {%r799, %r798};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	shr.u64 	%rd1040, %rd975, 6;
	xor.b64  	%rd1041, %rd1039, %rd1040;
	shf.r.wrap.b32 	%r800, %r439, %r438, 1;
	shf.r.wrap.b32 	%r801, %r438, %r439, 1;
	mov.b64 	%rd1042, {%r801, %r800};
	shf.r.wrap.b32 	%r802, %r439, %r438, 8;
	shf.r.wrap.b32 	%r803, %r438, %r439, 8;
	mov.b64 	%rd1043, {%r803, %r802};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	shr.u64 	%rd1045, %rd498, 7;
	xor.b64  	%rd1046, %rd1044, %rd1045;
	add.s64 	%rd1047, %rd1041, %rd461;
	add.s64 	%rd1048, %rd1047, %rd793;
	add.s64 	%rd1049, %rd1048, %rd1046;
	add.s64 	%rd1050, %rd1049, %rd915;
	xor.b64  	%rd1051, %rd988, %rd951;
	and.b64  	%rd1052, %rd1025, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd951;
	add.s64 	%rd1054, %rd1050, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd1025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd1025;
	}
	shf.r.wrap.b32 	%r806, %r805, %r804, 14;
	shf.r.wrap.b32 	%r807, %r804, %r805, 14;
	mov.b64 	%rd1055, {%r807, %r806};
	shf.r.wrap.b32 	%r808, %r805, %r804, 18;
	shf.r.wrap.b32 	%r809, %r804, %r805, 18;
	mov.b64 	%rd1056, {%r809, %r808};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	shf.l.wrap.b32 	%r810, %r804, %r805, 23;
	shf.l.wrap.b32 	%r811, %r805, %r804, 23;
	mov.b64 	%rd1058, {%r811, %r810};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	add.s64 	%rd1060, %rd1054, %rd1059;
	add.s64 	%rd1061, %rd1060, 3322285676063803686;
	add.s64 	%rd1062, %rd1061, %rd926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd1036;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 28;
	shf.r.wrap.b32 	%r815, %r812, %r813, 28;
	mov.b64 	%rd1063, {%r815, %r814};
	shf.l.wrap.b32 	%r816, %r812, %r813, 30;
	shf.l.wrap.b32 	%r817, %r813, %r812, 30;
	mov.b64 	%rd1064, {%r817, %r816};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	shf.l.wrap.b32 	%r818, %r812, %r813, 25;
	shf.l.wrap.b32 	%r819, %r813, %r812, 25;
	mov.b64 	%rd1066, {%r819, %r818};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	and.b64  	%rd1068, %rd1036, %rd999;
	or.b64  	%rd1069, %rd1036, %rd999;
	and.b64  	%rd1070, %rd1069, %rd962;
	or.b64  	%rd1071, %rd1070, %rd1068;
	add.s64 	%rd1072, %rd1071, %rd1067;
	add.s64 	%rd1073, %rd1072, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd1012;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 19;
	shf.r.wrap.b32 	%r823, %r820, %r821, 19;
	mov.b64 	%rd1074, {%r823, %r822};
	shf.l.wrap.b32 	%r824, %r820, %r821, 3;
	shf.l.wrap.b32 	%r825, %r821, %r820, 3;
	mov.b64 	%rd1075, {%r825, %r824};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	shr.u64 	%rd1077, %rd1012, 6;
	xor.b64  	%rd1078, %rd1076, %rd1077;
	shf.r.wrap.b32 	%r826, %r467, %r466, 1;
	shf.r.wrap.b32 	%r827, %r466, %r467, 1;
	mov.b64 	%rd1079, {%r827, %r826};
	shf.r.wrap.b32 	%r828, %r467, %r466, 8;
	shf.r.wrap.b32 	%r829, %r466, %r467, 8;
	mov.b64 	%rd1080, {%r829, %r828};
	xor.b64  	%rd1081, %rd1079, %rd1080;
	shr.u64 	%rd1082, %rd535, 7;
	xor.b64  	%rd1083, %rd1081, %rd1082;
	add.s64 	%rd1084, %rd1078, %rd498;
	add.s64 	%rd1085, %rd1084, %rd830;
	add.s64 	%rd1086, %rd1085, %rd1083;
	add.s64 	%rd1087, %rd1086, %rd951;
	xor.b64  	%rd1088, %rd1025, %rd988;
	and.b64  	%rd1089, %rd1062, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd988;
	add.s64 	%rd1091, %rd1087, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd1062;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 14;
	shf.r.wrap.b32 	%r833, %r830, %r831, 14;
	mov.b64 	%rd1092, {%r833, %r832};
	shf.r.wrap.b32 	%r834, %r831, %r830, 18;
	shf.r.wrap.b32 	%r835, %r830, %r831, 18;
	mov.b64 	%rd1093, {%r835, %r834};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	shf.l.wrap.b32 	%r836, %r830, %r831, 23;
	shf.l.wrap.b32 	%r837, %r831, %r830, 23;
	mov.b64 	%rd1095, {%r837, %r836};
	xor.b64  	%rd1096, %rd1094, %rd1095;
	add.s64 	%rd1097, %rd1091, %rd1096;
	add.s64 	%rd1098, %rd1097, 5560940570517711597;
	add.s64 	%rd1099, %rd1098, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd1073;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 28;
	shf.r.wrap.b32 	%r841, %r838, %r839, 28;
	mov.b64 	%rd1100, {%r841, %r840};
	shf.l.wrap.b32 	%r842, %r838, %r839, 30;
	shf.l.wrap.b32 	%r843, %r839, %r838, 30;
	mov.b64 	%rd1101, {%r843, %r842};
	xor.b64  	%rd1102, %rd1100, %rd1101;
	shf.l.wrap.b32 	%r844, %r838, %r839, 25;
	shf.l.wrap.b32 	%r845, %r839, %r838, 25;
	mov.b64 	%rd1103, {%r845, %r844};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	and.b64  	%rd1105, %rd1073, %rd1036;
	or.b64  	%rd1106, %rd1073, %rd1036;
	and.b64  	%rd1107, %rd1106, %rd999;
	or.b64  	%rd1108, %rd1107, %rd1105;
	add.s64 	%rd1109, %rd1108, %rd1104;
	add.s64 	%rd1110, %rd1109, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd1049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd1049;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 19;
	shf.r.wrap.b32 	%r849, %r846, %r847, 19;
	mov.b64 	%rd1111, {%r849, %r848};
	shf.l.wrap.b32 	%r850, %r846, %r847, 3;
	shf.l.wrap.b32 	%r851, %r847, %r846, 3;
	mov.b64 	%rd1112, {%r851, %r850};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	shr.u64 	%rd1114, %rd1049, 6;
	xor.b64  	%rd1115, %rd1113, %rd1114;
	shf.r.wrap.b32 	%r852, %r495, %r494, 1;
	shf.r.wrap.b32 	%r853, %r494, %r495, 1;
	mov.b64 	%rd1116, {%r853, %r852};
	shf.r.wrap.b32 	%r854, %r495, %r494, 8;
	shf.r.wrap.b32 	%r855, %r494, %r495, 8;
	mov.b64 	%rd1117, {%r855, %r854};
	xor.b64  	%rd1118, %rd1116, %rd1117;
	shr.u64 	%rd1119, %rd572, 7;
	xor.b64  	%rd1120, %rd1118, %rd1119;
	add.s64 	%rd1121, %rd1115, %rd535;
	add.s64 	%rd1122, %rd1121, %rd867;
	add.s64 	%rd1123, %rd1122, %rd1120;
	add.s64 	%rd1124, %rd1123, %rd988;
	xor.b64  	%rd1125, %rd1062, %rd1025;
	and.b64  	%rd1126, %rd1099, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1025;
	add.s64 	%rd1128, %rd1124, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd1099;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 14;
	shf.r.wrap.b32 	%r859, %r856, %r857, 14;
	mov.b64 	%rd1129, {%r859, %r858};
	shf.r.wrap.b32 	%r860, %r857, %r856, 18;
	shf.r.wrap.b32 	%r861, %r856, %r857, 18;
	mov.b64 	%rd1130, {%r861, %r860};
	xor.b64  	%rd1131, %rd1129, %rd1130;
	shf.l.wrap.b32 	%r862, %r856, %r857, 23;
	shf.l.wrap.b32 	%r863, %r857, %r856, 23;
	mov.b64 	%rd1132, {%r863, %r862};
	xor.b64  	%rd1133, %rd1131, %rd1132;
	add.s64 	%rd1134, %rd1128, %rd1133;
	add.s64 	%rd1135, %rd1134, 5996557281743188959;
	add.s64 	%rd1136, %rd1135, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r864,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r865}, %rd1110;
	}
	shf.r.wrap.b32 	%r866, %r865, %r864, 28;
	shf.r.wrap.b32 	%r867, %r864, %r865, 28;
	mov.b64 	%rd1137, {%r867, %r866};
	shf.l.wrap.b32 	%r868, %r864, %r865, 30;
	shf.l.wrap.b32 	%r869, %r865, %r864, 30;
	mov.b64 	%rd1138, {%r869, %r868};
	xor.b64  	%rd1139, %rd1137, %rd1138;
	shf.l.wrap.b32 	%r870, %r864, %r865, 25;
	shf.l.wrap.b32 	%r871, %r865, %r864, 25;
	mov.b64 	%rd1140, {%r871, %r870};
	xor.b64  	%rd1141, %rd1139, %rd1140;
	and.b64  	%rd1142, %rd1110, %rd1073;
	or.b64  	%rd1143, %rd1110, %rd1073;
	and.b64  	%rd1144, %rd1143, %rd1036;
	or.b64  	%rd1145, %rd1144, %rd1142;
	add.s64 	%rd1146, %rd1145, %rd1141;
	add.s64 	%rd1147, %rd1146, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r872,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r873}, %rd1086;
	}
	shf.r.wrap.b32 	%r874, %r873, %r872, 19;
	shf.r.wrap.b32 	%r875, %r872, %r873, 19;
	mov.b64 	%rd1148, {%r875, %r874};
	shf.l.wrap.b32 	%r876, %r872, %r873, 3;
	shf.l.wrap.b32 	%r877, %r873, %r872, 3;
	mov.b64 	%rd1149, {%r877, %r876};
	xor.b64  	%rd1150, %rd1148, %rd1149;
	shr.u64 	%rd1151, %rd1086, 6;
	xor.b64  	%rd1152, %rd1150, %rd1151;
	shf.r.wrap.b32 	%r878, %r523, %r522, 1;
	shf.r.wrap.b32 	%r879, %r522, %r523, 1;
	mov.b64 	%rd1153, {%r879, %r878};
	shf.r.wrap.b32 	%r880, %r523, %r522, 8;
	shf.r.wrap.b32 	%r881, %r522, %r523, 8;
	mov.b64 	%rd1154, {%r881, %r880};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	shr.u64 	%rd1156, %rd608, 7;
	xor.b64  	%rd1157, %rd1155, %rd1156;
	add.s64 	%rd1158, %rd1152, %rd572;
	add.s64 	%rd1159, %rd1158, %rd902;
	add.s64 	%rd1160, %rd1159, %rd1157;
	add.s64 	%rd1161, %rd1160, %rd1025;
	xor.b64  	%rd1162, %rd1099, %rd1062;
	and.b64  	%rd1163, %rd1136, %rd1162;
	xor.b64  	%rd1164, %rd1163, %rd1062;
	add.s64 	%rd1165, %rd1161, %rd1164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd1136;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 14;
	shf.r.wrap.b32 	%r885, %r882, %r883, 14;
	mov.b64 	%rd1166, {%r885, %r884};
	shf.r.wrap.b32 	%r886, %r883, %r882, 18;
	shf.r.wrap.b32 	%r887, %r882, %r883, 18;
	mov.b64 	%rd1167, {%r887, %r886};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	shf.l.wrap.b32 	%r888, %r882, %r883, 23;
	shf.l.wrap.b32 	%r889, %r883, %r882, 23;
	mov.b64 	%rd1169, {%r889, %r888};
	xor.b64  	%rd1170, %rd1168, %rd1169;
	add.s64 	%rd1171, %rd1165, %rd1170;
	add.s64 	%rd1172, %rd1171, 7280758554555802590;
	add.s64 	%rd1173, %rd1172, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r891}, %rd1147;
	}
	shf.r.wrap.b32 	%r892, %r891, %r890, 28;
	shf.r.wrap.b32 	%r893, %r890, %r891, 28;
	mov.b64 	%rd1174, {%r893, %r892};
	shf.l.wrap.b32 	%r894, %r890, %r891, 30;
	shf.l.wrap.b32 	%r895, %r891, %r890, 30;
	mov.b64 	%rd1175, {%r895, %r894};
	xor.b64  	%rd1176, %rd1174, %rd1175;
	shf.l.wrap.b32 	%r896, %r890, %r891, 25;
	shf.l.wrap.b32 	%r897, %r891, %r890, 25;
	mov.b64 	%rd1177, {%r897, %r896};
	xor.b64  	%rd1178, %rd1176, %rd1177;
	and.b64  	%rd1179, %rd1147, %rd1110;
	or.b64  	%rd1180, %rd1147, %rd1110;
	and.b64  	%rd1181, %rd1180, %rd1073;
	or.b64  	%rd1182, %rd1181, %rd1179;
	add.s64 	%rd1183, %rd1182, %rd1178;
	add.s64 	%rd1184, %rd1183, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r899}, %rd1123;
	}
	shf.r.wrap.b32 	%r900, %r899, %r898, 19;
	shf.r.wrap.b32 	%r901, %r898, %r899, 19;
	mov.b64 	%rd1185, {%r901, %r900};
	shf.l.wrap.b32 	%r902, %r898, %r899, 3;
	shf.l.wrap.b32 	%r903, %r899, %r898, 3;
	mov.b64 	%rd1186, {%r903, %r902};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	shr.u64 	%rd1188, %rd1123, 6;
	xor.b64  	%rd1189, %rd1187, %rd1188;
	shf.r.wrap.b32 	%r904, %r551, %r550, 1;
	shf.r.wrap.b32 	%r905, %r550, %r551, 1;
	mov.b64 	%rd1190, {%r905, %r904};
	shf.r.wrap.b32 	%r906, %r551, %r550, 8;
	shf.r.wrap.b32 	%r907, %r550, %r551, 8;
	mov.b64 	%rd1191, {%r907, %r906};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	shr.u64 	%rd1193, %rd645, 7;
	xor.b64  	%rd1194, %rd1192, %rd1193;
	add.s64 	%rd1195, %rd1189, %rd608;
	add.s64 	%rd1196, %rd1195, %rd938;
	add.s64 	%rd1197, %rd1196, %rd1194;
	add.s64 	%rd1198, %rd1197, %rd1062;
	xor.b64  	%rd1199, %rd1136, %rd1099;
	and.b64  	%rd1200, %rd1173, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1099;
	add.s64 	%rd1202, %rd1198, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd1173;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 14;
	shf.r.wrap.b32 	%r911, %r908, %r909, 14;
	mov.b64 	%rd1203, {%r911, %r910};
	shf.r.wrap.b32 	%r912, %r909, %r908, 18;
	shf.r.wrap.b32 	%r913, %r908, %r909, 18;
	mov.b64 	%rd1204, {%r913, %r912};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	shf.l.wrap.b32 	%r914, %r908, %r909, 23;
	shf.l.wrap.b32 	%r915, %r909, %r908, 23;
	mov.b64 	%rd1206, {%r915, %r914};
	xor.b64  	%rd1207, %rd1205, %rd1206;
	add.s64 	%rd1208, %rd1202, %rd1207;
	add.s64 	%rd1209, %rd1208, 8532644243296465576;
	add.s64 	%rd1210, %rd1209, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1184;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 28;
	shf.r.wrap.b32 	%r919, %r916, %r917, 28;
	mov.b64 	%rd1211, {%r919, %r918};
	shf.l.wrap.b32 	%r920, %r916, %r917, 30;
	shf.l.wrap.b32 	%r921, %r917, %r916, 30;
	mov.b64 	%rd1212, {%r921, %r920};
	xor.b64  	%rd1213, %rd1211, %rd1212;
	shf.l.wrap.b32 	%r922, %r916, %r917, 25;
	shf.l.wrap.b32 	%r923, %r917, %r916, 25;
	mov.b64 	%rd1214, {%r923, %r922};
	xor.b64  	%rd1215, %rd1213, %rd1214;
	and.b64  	%rd1216, %rd1184, %rd1147;
	or.b64  	%rd1217, %rd1184, %rd1147;
	and.b64  	%rd1218, %rd1217, %rd1110;
	or.b64  	%rd1219, %rd1218, %rd1216;
	add.s64 	%rd1220, %rd1219, %rd1215;
	add.s64 	%rd1221, %rd1220, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1160;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 19;
	shf.r.wrap.b32 	%r927, %r924, %r925, 19;
	mov.b64 	%rd1222, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 3;
	shf.l.wrap.b32 	%r929, %r925, %r924, 3;
	mov.b64 	%rd1223, {%r929, %r928};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	shr.u64 	%rd1225, %rd1160, 6;
	xor.b64  	%rd1226, %rd1224, %rd1225;
	shf.r.wrap.b32 	%r930, %r579, %r578, 1;
	shf.r.wrap.b32 	%r931, %r578, %r579, 1;
	mov.b64 	%rd1227, {%r931, %r930};
	shf.r.wrap.b32 	%r932, %r579, %r578, 8;
	shf.r.wrap.b32 	%r933, %r578, %r579, 8;
	mov.b64 	%rd1228, {%r933, %r932};
	xor.b64  	%rd1229, %rd1227, %rd1228;
	shr.u64 	%rd1230, %rd682, 7;
	xor.b64  	%rd1231, %rd1229, %rd1230;
	add.s64 	%rd1232, %rd1226, %rd645;
	add.s64 	%rd1233, %rd1232, %rd975;
	add.s64 	%rd1234, %rd1233, %rd1231;
	add.s64 	%rd1235, %rd1234, %rd1099;
	xor.b64  	%rd1236, %rd1173, %rd1136;
	and.b64  	%rd1237, %rd1210, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1136;
	add.s64 	%rd1239, %rd1235, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd1210;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 14;
	shf.r.wrap.b32 	%r937, %r934, %r935, 14;
	mov.b64 	%rd1240, {%r937, %r936};
	shf.r.wrap.b32 	%r938, %r935, %r934, 18;
	shf.r.wrap.b32 	%r939, %r934, %r935, 18;
	mov.b64 	%rd1241, {%r939, %r938};
	xor.b64  	%rd1242, %rd1240, %rd1241;
	shf.l.wrap.b32 	%r940, %r934, %r935, 23;
	shf.l.wrap.b32 	%r941, %r935, %r934, 23;
	mov.b64 	%rd1243, {%r941, %r940};
	xor.b64  	%rd1244, %rd1242, %rd1243;
	add.s64 	%rd1245, %rd1239, %rd1244;
	add.s64 	%rd1246, %rd1245, -9096487096722542874;
	add.s64 	%rd1247, %rd1246, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1221;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 28;
	shf.r.wrap.b32 	%r945, %r942, %r943, 28;
	mov.b64 	%rd1248, {%r945, %r944};
	shf.l.wrap.b32 	%r946, %r942, %r943, 30;
	shf.l.wrap.b32 	%r947, %r943, %r942, 30;
	mov.b64 	%rd1249, {%r947, %r946};
	xor.b64  	%rd1250, %rd1248, %rd1249;
	shf.l.wrap.b32 	%r948, %r942, %r943, 25;
	shf.l.wrap.b32 	%r949, %r943, %r942, 25;
	mov.b64 	%rd1251, {%r949, %r948};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	and.b64  	%rd1253, %rd1221, %rd1184;
	or.b64  	%rd1254, %rd1221, %rd1184;
	and.b64  	%rd1255, %rd1254, %rd1147;
	or.b64  	%rd1256, %rd1255, %rd1253;
	add.s64 	%rd1257, %rd1256, %rd1252;
	add.s64 	%rd1258, %rd1257, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1197;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 19;
	shf.r.wrap.b32 	%r953, %r950, %r951, 19;
	mov.b64 	%rd1259, {%r953, %r952};
	shf.l.wrap.b32 	%r954, %r950, %r951, 3;
	shf.l.wrap.b32 	%r955, %r951, %r950, 3;
	mov.b64 	%rd1260, {%r955, %r954};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	shr.u64 	%rd1262, %rd1197, 6;
	xor.b64  	%rd1263, %rd1261, %rd1262;
	shf.r.wrap.b32 	%r956, %r607, %r606, 1;
	shf.r.wrap.b32 	%r957, %r606, %r607, 1;
	mov.b64 	%rd1264, {%r957, %r956};
	shf.r.wrap.b32 	%r958, %r607, %r606, 8;
	shf.r.wrap.b32 	%r959, %r606, %r607, 8;
	mov.b64 	%rd1265, {%r959, %r958};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	shr.u64 	%rd1267, %rd719, 7;
	xor.b64  	%rd1268, %rd1266, %rd1267;
	add.s64 	%rd1269, %rd1263, %rd682;
	add.s64 	%rd1270, %rd1269, %rd1012;
	add.s64 	%rd1271, %rd1270, %rd1268;
	add.s64 	%rd1272, %rd1271, %rd1136;
	xor.b64  	%rd1273, %rd1210, %rd1173;
	and.b64  	%rd1274, %rd1247, %rd1273;
	xor.b64  	%rd1275, %rd1274, %rd1173;
	add.s64 	%rd1276, %rd1272, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r960,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd1247;
	}
	shf.r.wrap.b32 	%r962, %r961, %r960, 14;
	shf.r.wrap.b32 	%r963, %r960, %r961, 14;
	mov.b64 	%rd1277, {%r963, %r962};
	shf.r.wrap.b32 	%r964, %r961, %r960, 18;
	shf.r.wrap.b32 	%r965, %r960, %r961, 18;
	mov.b64 	%rd1278, {%r965, %r964};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	shf.l.wrap.b32 	%r966, %r960, %r961, 23;
	shf.l.wrap.b32 	%r967, %r961, %r960, 23;
	mov.b64 	%rd1280, {%r967, %r966};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	add.s64 	%rd1282, %rd1276, %rd1281;
	add.s64 	%rd1283, %rd1282, -7894198246740708037;
	add.s64 	%rd1284, %rd1283, %rd1147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r968,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r969}, %rd1258;
	}
	shf.r.wrap.b32 	%r970, %r969, %r968, 28;
	shf.r.wrap.b32 	%r971, %r968, %r969, 28;
	mov.b64 	%rd1285, {%r971, %r970};
	shf.l.wrap.b32 	%r972, %r968, %r969, 30;
	shf.l.wrap.b32 	%r973, %r969, %r968, 30;
	mov.b64 	%rd1286, {%r973, %r972};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	shf.l.wrap.b32 	%r974, %r968, %r969, 25;
	shf.l.wrap.b32 	%r975, %r969, %r968, 25;
	mov.b64 	%rd1288, {%r975, %r974};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	and.b64  	%rd1290, %rd1258, %rd1221;
	or.b64  	%rd1291, %rd1258, %rd1221;
	and.b64  	%rd1292, %rd1291, %rd1184;
	or.b64  	%rd1293, %rd1292, %rd1290;
	add.s64 	%rd1294, %rd1293, %rd1289;
	add.s64 	%rd1295, %rd1294, %rd1283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r976,%dummy}, %rd1234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd1234;
	}
	shf.r.wrap.b32 	%r978, %r977, %r976, 19;
	shf.r.wrap.b32 	%r979, %r976, %r977, 19;
	mov.b64 	%rd1296, {%r979, %r978};
	shf.l.wrap.b32 	%r980, %r976, %r977, 3;
	shf.l.wrap.b32 	%r981, %r977, %r976, 3;
	mov.b64 	%rd1297, {%r981, %r980};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shr.u64 	%rd1299, %rd1234, 6;
	xor.b64  	%rd1300, %rd1298, %rd1299;
	shf.r.wrap.b32 	%r982, %r635, %r634, 1;
	shf.r.wrap.b32 	%r983, %r634, %r635, 1;
	mov.b64 	%rd1301, {%r983, %r982};
	shf.r.wrap.b32 	%r984, %r635, %r634, 8;
	shf.r.wrap.b32 	%r985, %r634, %r635, 8;
	mov.b64 	%rd1302, {%r985, %r984};
	xor.b64  	%rd1303, %rd1301, %rd1302;
	shr.u64 	%rd1304, %rd756, 7;
	xor.b64  	%rd1305, %rd1303, %rd1304;
	add.s64 	%rd1306, %rd1300, %rd719;
	add.s64 	%rd1307, %rd1306, %rd1049;
	add.s64 	%rd1308, %rd1307, %rd1305;
	add.s64 	%rd1309, %rd1308, %rd1173;
	xor.b64  	%rd1310, %rd1247, %rd1210;
	and.b64  	%rd1311, %rd1284, %rd1310;
	xor.b64  	%rd1312, %rd1311, %rd1210;
	add.s64 	%rd1313, %rd1309, %rd1312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r986,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r987}, %rd1284;
	}
	shf.r.wrap.b32 	%r988, %r987, %r986, 14;
	shf.r.wrap.b32 	%r989, %r986, %r987, 14;
	mov.b64 	%rd1314, {%r989, %r988};
	shf.r.wrap.b32 	%r990, %r987, %r986, 18;
	shf.r.wrap.b32 	%r991, %r986, %r987, 18;
	mov.b64 	%rd1315, {%r991, %r990};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	shf.l.wrap.b32 	%r992, %r986, %r987, 23;
	shf.l.wrap.b32 	%r993, %r987, %r986, 23;
	mov.b64 	%rd1317, {%r993, %r992};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	add.s64 	%rd1319, %rd1313, %rd1318;
	add.s64 	%rd1320, %rd1319, -6719396339535248540;
	add.s64 	%rd1321, %rd1320, %rd1184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r994,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r995}, %rd1295;
	}
	shf.r.wrap.b32 	%r996, %r995, %r994, 28;
	shf.r.wrap.b32 	%r997, %r994, %r995, 28;
	mov.b64 	%rd1322, {%r997, %r996};
	shf.l.wrap.b32 	%r998, %r994, %r995, 30;
	shf.l.wrap.b32 	%r999, %r995, %r994, 30;
	mov.b64 	%rd1323, {%r999, %r998};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	shf.l.wrap.b32 	%r1000, %r994, %r995, 25;
	shf.l.wrap.b32 	%r1001, %r995, %r994, 25;
	mov.b64 	%rd1325, {%r1001, %r1000};
	xor.b64  	%rd1326, %rd1324, %rd1325;
	and.b64  	%rd1327, %rd1295, %rd1258;
	or.b64  	%rd1328, %rd1295, %rd1258;
	and.b64  	%rd1329, %rd1328, %rd1221;
	or.b64  	%rd1330, %rd1329, %rd1327;
	add.s64 	%rd1331, %rd1330, %rd1326;
	add.s64 	%rd1332, %rd1331, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1003}, %rd1271;
	}
	shf.r.wrap.b32 	%r1004, %r1003, %r1002, 19;
	shf.r.wrap.b32 	%r1005, %r1002, %r1003, 19;
	mov.b64 	%rd1333, {%r1005, %r1004};
	shf.l.wrap.b32 	%r1006, %r1002, %r1003, 3;
	shf.l.wrap.b32 	%r1007, %r1003, %r1002, 3;
	mov.b64 	%rd1334, {%r1007, %r1006};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	shr.u64 	%rd1336, %rd1271, 6;
	xor.b64  	%rd1337, %rd1335, %rd1336;
	shf.r.wrap.b32 	%r1008, %r663, %r662, 1;
	shf.r.wrap.b32 	%r1009, %r662, %r663, 1;
	mov.b64 	%rd1338, {%r1009, %r1008};
	shf.r.wrap.b32 	%r1010, %r663, %r662, 8;
	shf.r.wrap.b32 	%r1011, %r662, %r663, 8;
	mov.b64 	%rd1339, {%r1011, %r1010};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	shr.u64 	%rd1341, %rd793, 7;
	xor.b64  	%rd1342, %rd1340, %rd1341;
	add.s64 	%rd1343, %rd1337, %rd756;
	add.s64 	%rd1344, %rd1343, %rd1086;
	add.s64 	%rd1345, %rd1344, %rd1342;
	add.s64 	%rd1346, %rd1345, %rd1210;
	xor.b64  	%rd1347, %rd1284, %rd1247;
	and.b64  	%rd1348, %rd1321, %rd1347;
	xor.b64  	%rd1349, %rd1348, %rd1247;
	add.s64 	%rd1350, %rd1346, %rd1349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1012,%dummy}, %rd1321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd1321;
	}
	shf.r.wrap.b32 	%r1014, %r1013, %r1012, 14;
	shf.r.wrap.b32 	%r1015, %r1012, %r1013, 14;
	mov.b64 	%rd1351, {%r1015, %r1014};
	shf.r.wrap.b32 	%r1016, %r1013, %r1012, 18;
	shf.r.wrap.b32 	%r1017, %r1012, %r1013, 18;
	mov.b64 	%rd1352, {%r1017, %r1016};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	shf.l.wrap.b32 	%r1018, %r1012, %r1013, 23;
	shf.l.wrap.b32 	%r1019, %r1013, %r1012, 23;
	mov.b64 	%rd1354, {%r1019, %r1018};
	xor.b64  	%rd1355, %rd1353, %rd1354;
	add.s64 	%rd1356, %rd1350, %rd1355;
	add.s64 	%rd1357, %rd1356, -6333637450476146687;
	add.s64 	%rd1358, %rd1357, %rd1221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1020,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd1332;
	}
	shf.r.wrap.b32 	%r1022, %r1021, %r1020, 28;
	shf.r.wrap.b32 	%r1023, %r1020, %r1021, 28;
	mov.b64 	%rd1359, {%r1023, %r1022};
	shf.l.wrap.b32 	%r1024, %r1020, %r1021, 30;
	shf.l.wrap.b32 	%r1025, %r1021, %r1020, 30;
	mov.b64 	%rd1360, {%r1025, %r1024};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	shf.l.wrap.b32 	%r1026, %r1020, %r1021, 25;
	shf.l.wrap.b32 	%r1027, %r1021, %r1020, 25;
	mov.b64 	%rd1362, {%r1027, %r1026};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	and.b64  	%rd1364, %rd1332, %rd1295;
	or.b64  	%rd1365, %rd1332, %rd1295;
	and.b64  	%rd1366, %rd1365, %rd1258;
	or.b64  	%rd1367, %rd1366, %rd1364;
	add.s64 	%rd1368, %rd1367, %rd1363;
	add.s64 	%rd1369, %rd1368, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd1308;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 19;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 19;
	mov.b64 	%rd1370, {%r1031, %r1030};
	shf.l.wrap.b32 	%r1032, %r1028, %r1029, 3;
	shf.l.wrap.b32 	%r1033, %r1029, %r1028, 3;
	mov.b64 	%rd1371, {%r1033, %r1032};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	shr.u64 	%rd1373, %rd1308, 6;
	xor.b64  	%rd1374, %rd1372, %rd1373;
	shf.r.wrap.b32 	%r1034, %r691, %r690, 1;
	shf.r.wrap.b32 	%r1035, %r690, %r691, 1;
	mov.b64 	%rd1375, {%r1035, %r1034};
	shf.r.wrap.b32 	%r1036, %r691, %r690, 8;
	shf.r.wrap.b32 	%r1037, %r690, %r691, 8;
	mov.b64 	%rd1376, {%r1037, %r1036};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	shr.u64 	%rd1378, %rd830, 7;
	xor.b64  	%rd1379, %rd1377, %rd1378;
	add.s64 	%rd1380, %rd1374, %rd793;
	add.s64 	%rd1381, %rd1380, %rd1123;
	add.s64 	%rd1382, %rd1381, %rd1379;
	add.s64 	%rd1383, %rd1382, %rd1247;
	xor.b64  	%rd1384, %rd1321, %rd1284;
	and.b64  	%rd1385, %rd1358, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd1284;
	add.s64 	%rd1387, %rd1383, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd1358;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 14;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 14;
	mov.b64 	%rd1388, {%r1041, %r1040};
	shf.r.wrap.b32 	%r1042, %r1039, %r1038, 18;
	shf.r.wrap.b32 	%r1043, %r1038, %r1039, 18;
	mov.b64 	%rd1389, {%r1043, %r1042};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 23;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 23;
	mov.b64 	%rd1391, {%r1045, %r1044};
	xor.b64  	%rd1392, %rd1390, %rd1391;
	add.s64 	%rd1393, %rd1387, %rd1392;
	add.s64 	%rd1394, %rd1393, -4446306890439682159;
	add.s64 	%rd1395, %rd1394, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd1369;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 28;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 28;
	mov.b64 	%rd1396, {%r1049, %r1048};
	shf.l.wrap.b32 	%r1050, %r1046, %r1047, 30;
	shf.l.wrap.b32 	%r1051, %r1047, %r1046, 30;
	mov.b64 	%rd1397, {%r1051, %r1050};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	shf.l.wrap.b32 	%r1052, %r1046, %r1047, 25;
	shf.l.wrap.b32 	%r1053, %r1047, %r1046, 25;
	mov.b64 	%rd1399, {%r1053, %r1052};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	and.b64  	%rd1401, %rd1369, %rd1332;
	or.b64  	%rd1402, %rd1369, %rd1332;
	and.b64  	%rd1403, %rd1402, %rd1295;
	or.b64  	%rd1404, %rd1403, %rd1401;
	add.s64 	%rd1405, %rd1404, %rd1400;
	add.s64 	%rd1406, %rd1405, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd1345;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 19;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 19;
	mov.b64 	%rd1407, {%r1057, %r1056};
	shf.l.wrap.b32 	%r1058, %r1054, %r1055, 3;
	shf.l.wrap.b32 	%r1059, %r1055, %r1054, 3;
	mov.b64 	%rd1408, {%r1059, %r1058};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	shr.u64 	%rd1410, %rd1345, 6;
	xor.b64  	%rd1411, %rd1409, %rd1410;
	shf.r.wrap.b32 	%r1060, %r717, %r716, 1;
	shf.r.wrap.b32 	%r1061, %r716, %r717, 1;
	mov.b64 	%rd1412, {%r1061, %r1060};
	shf.r.wrap.b32 	%r1062, %r717, %r716, 8;
	shf.r.wrap.b32 	%r1063, %r716, %r717, 8;
	mov.b64 	%rd1413, {%r1063, %r1062};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	shr.u64 	%rd1415, %rd867, 7;
	xor.b64  	%rd1416, %rd1414, %rd1415;
	add.s64 	%rd1417, %rd1411, %rd830;
	add.s64 	%rd1418, %rd1417, %rd1160;
	add.s64 	%rd1419, %rd1418, %rd1416;
	add.s64 	%rd1420, %rd1419, %rd1284;
	xor.b64  	%rd1421, %rd1358, %rd1321;
	and.b64  	%rd1422, %rd1395, %rd1421;
	xor.b64  	%rd1423, %rd1422, %rd1321;
	add.s64 	%rd1424, %rd1420, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd1395;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 14;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 14;
	mov.b64 	%rd1425, {%r1067, %r1066};
	shf.r.wrap.b32 	%r1068, %r1065, %r1064, 18;
	shf.r.wrap.b32 	%r1069, %r1064, %r1065, 18;
	mov.b64 	%rd1426, {%r1069, %r1068};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	shf.l.wrap.b32 	%r1070, %r1064, %r1065, 23;
	shf.l.wrap.b32 	%r1071, %r1065, %r1064, 23;
	mov.b64 	%rd1428, {%r1071, %r1070};
	xor.b64  	%rd1429, %rd1427, %rd1428;
	add.s64 	%rd1430, %rd1424, %rd1429;
	add.s64 	%rd1431, %rd1430, -4076793802049405392;
	add.s64 	%rd1432, %rd1431, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1406;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 28;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 28;
	mov.b64 	%rd1433, {%r1075, %r1074};
	shf.l.wrap.b32 	%r1076, %r1072, %r1073, 30;
	shf.l.wrap.b32 	%r1077, %r1073, %r1072, 30;
	mov.b64 	%rd1434, {%r1077, %r1076};
	xor.b64  	%rd1435, %rd1433, %rd1434;
	shf.l.wrap.b32 	%r1078, %r1072, %r1073, 25;
	shf.l.wrap.b32 	%r1079, %r1073, %r1072, 25;
	mov.b64 	%rd1436, {%r1079, %r1078};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	and.b64  	%rd1438, %rd1406, %rd1369;
	or.b64  	%rd1439, %rd1406, %rd1369;
	and.b64  	%rd1440, %rd1439, %rd1332;
	or.b64  	%rd1441, %rd1440, %rd1438;
	add.s64 	%rd1442, %rd1441, %rd1437;
	add.s64 	%rd1443, %rd1442, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd1382;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 19;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 19;
	mov.b64 	%rd1444, {%r1083, %r1082};
	shf.l.wrap.b32 	%r1084, %r1080, %r1081, 3;
	shf.l.wrap.b32 	%r1085, %r1081, %r1080, 3;
	mov.b64 	%rd1445, {%r1085, %r1084};
	xor.b64  	%rd1446, %rd1444, %rd1445;
	shr.u64 	%rd1447, %rd1382, 6;
	xor.b64  	%rd1448, %rd1446, %rd1447;
	shf.r.wrap.b32 	%r1086, %r743, %r742, 1;
	shf.r.wrap.b32 	%r1087, %r742, %r743, 1;
	mov.b64 	%rd1449, {%r1087, %r1086};
	shf.r.wrap.b32 	%r1088, %r743, %r742, 8;
	shf.r.wrap.b32 	%r1089, %r742, %r743, 8;
	mov.b64 	%rd1450, {%r1089, %r1088};
	xor.b64  	%rd1451, %rd1449, %rd1450;
	shr.u64 	%rd1452, %rd902, 7;
	xor.b64  	%rd1453, %rd1451, %rd1452;
	add.s64 	%rd1454, %rd1448, %rd867;
	add.s64 	%rd1455, %rd1454, %rd1197;
	add.s64 	%rd1456, %rd1455, %rd1453;
	add.s64 	%rd1457, %rd1456, %rd1321;
	xor.b64  	%rd1458, %rd1395, %rd1358;
	and.b64  	%rd1459, %rd1432, %rd1458;
	xor.b64  	%rd1460, %rd1459, %rd1358;
	add.s64 	%rd1461, %rd1457, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd1432;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 14;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 14;
	mov.b64 	%rd1462, {%r1093, %r1092};
	shf.r.wrap.b32 	%r1094, %r1091, %r1090, 18;
	shf.r.wrap.b32 	%r1095, %r1090, %r1091, 18;
	mov.b64 	%rd1463, {%r1095, %r1094};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	shf.l.wrap.b32 	%r1096, %r1090, %r1091, 23;
	shf.l.wrap.b32 	%r1097, %r1091, %r1090, 23;
	mov.b64 	%rd1465, {%r1097, %r1096};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	add.s64 	%rd1467, %rd1461, %rd1466;
	add.s64 	%rd1468, %rd1467, -3345356375505022440;
	add.s64 	%rd1469, %rd1468, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd1443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd1443;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 28;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 28;
	mov.b64 	%rd1470, {%r1101, %r1100};
	shf.l.wrap.b32 	%r1102, %r1098, %r1099, 30;
	shf.l.wrap.b32 	%r1103, %r1099, %r1098, 30;
	mov.b64 	%rd1471, {%r1103, %r1102};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	shf.l.wrap.b32 	%r1104, %r1098, %r1099, 25;
	shf.l.wrap.b32 	%r1105, %r1099, %r1098, 25;
	mov.b64 	%rd1473, {%r1105, %r1104};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	and.b64  	%rd1475, %rd1443, %rd1406;
	or.b64  	%rd1476, %rd1443, %rd1406;
	and.b64  	%rd1477, %rd1476, %rd1369;
	or.b64  	%rd1478, %rd1477, %rd1475;
	add.s64 	%rd1479, %rd1478, %rd1474;
	add.s64 	%rd1480, %rd1479, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd1419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd1419;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 19;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 19;
	mov.b64 	%rd1481, {%r1109, %r1108};
	shf.l.wrap.b32 	%r1110, %r1106, %r1107, 3;
	shf.l.wrap.b32 	%r1111, %r1107, %r1106, 3;
	mov.b64 	%rd1482, {%r1111, %r1110};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	shr.u64 	%rd1484, %rd1419, 6;
	xor.b64  	%rd1485, %rd1483, %rd1484;
	shf.r.wrap.b32 	%r1112, %r769, %r768, 1;
	shf.r.wrap.b32 	%r1113, %r768, %r769, 1;
	mov.b64 	%rd1486, {%r1113, %r1112};
	shf.r.wrap.b32 	%r1114, %r769, %r768, 8;
	shf.r.wrap.b32 	%r1115, %r768, %r769, 8;
	mov.b64 	%rd1487, {%r1115, %r1114};
	xor.b64  	%rd1488, %rd1486, %rd1487;
	shr.u64 	%rd1489, %rd938, 7;
	xor.b64  	%rd1490, %rd1488, %rd1489;
	add.s64 	%rd1491, %rd1485, %rd902;
	add.s64 	%rd1492, %rd1491, %rd1234;
	add.s64 	%rd1493, %rd1492, %rd1490;
	add.s64 	%rd1494, %rd1493, %rd1358;
	xor.b64  	%rd1495, %rd1432, %rd1395;
	and.b64  	%rd1496, %rd1469, %rd1495;
	xor.b64  	%rd1497, %rd1496, %rd1395;
	add.s64 	%rd1498, %rd1494, %rd1497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd1469;
	}
	shf.r.wrap.b32 	%r1118, %r1117, %r1116, 14;
	shf.r.wrap.b32 	%r1119, %r1116, %r1117, 14;
	mov.b64 	%rd1499, {%r1119, %r1118};
	shf.r.wrap.b32 	%r1120, %r1117, %r1116, 18;
	shf.r.wrap.b32 	%r1121, %r1116, %r1117, 18;
	mov.b64 	%rd1500, {%r1121, %r1120};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	shf.l.wrap.b32 	%r1122, %r1116, %r1117, 23;
	shf.l.wrap.b32 	%r1123, %r1117, %r1116, 23;
	mov.b64 	%rd1502, {%r1123, %r1122};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	add.s64 	%rd1504, %rd1498, %rd1503;
	add.s64 	%rd1505, %rd1504, -2983346525034927856;
	add.s64 	%rd1506, %rd1505, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1124,%dummy}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1125}, %rd1480;
	}
	shf.r.wrap.b32 	%r1126, %r1125, %r1124, 28;
	shf.r.wrap.b32 	%r1127, %r1124, %r1125, 28;
	mov.b64 	%rd1507, {%r1127, %r1126};
	shf.l.wrap.b32 	%r1128, %r1124, %r1125, 30;
	shf.l.wrap.b32 	%r1129, %r1125, %r1124, 30;
	mov.b64 	%rd1508, {%r1129, %r1128};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	shf.l.wrap.b32 	%r1130, %r1124, %r1125, 25;
	shf.l.wrap.b32 	%r1131, %r1125, %r1124, 25;
	mov.b64 	%rd1510, {%r1131, %r1130};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	and.b64  	%rd1512, %rd1480, %rd1443;
	or.b64  	%rd1513, %rd1480, %rd1443;
	and.b64  	%rd1514, %rd1513, %rd1406;
	or.b64  	%rd1515, %rd1514, %rd1512;
	add.s64 	%rd1516, %rd1515, %rd1511;
	add.s64 	%rd1517, %rd1516, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1132,%dummy}, %rd1456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1133}, %rd1456;
	}
	shf.r.wrap.b32 	%r1134, %r1133, %r1132, 19;
	shf.r.wrap.b32 	%r1135, %r1132, %r1133, 19;
	mov.b64 	%rd1518, {%r1135, %r1134};
	shf.l.wrap.b32 	%r1136, %r1132, %r1133, 3;
	shf.l.wrap.b32 	%r1137, %r1133, %r1132, 3;
	mov.b64 	%rd1519, {%r1137, %r1136};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	shr.u64 	%rd1521, %rd1456, 6;
	xor.b64  	%rd1522, %rd1520, %rd1521;
	shf.r.wrap.b32 	%r1138, %r795, %r794, 1;
	shf.r.wrap.b32 	%r1139, %r794, %r795, 1;
	mov.b64 	%rd1523, {%r1139, %r1138};
	shf.r.wrap.b32 	%r1140, %r795, %r794, 8;
	shf.r.wrap.b32 	%r1141, %r794, %r795, 8;
	mov.b64 	%rd1524, {%r1141, %r1140};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	shr.u64 	%rd1526, %rd975, 7;
	xor.b64  	%rd1527, %rd1525, %rd1526;
	add.s64 	%rd1528, %rd1522, %rd938;
	add.s64 	%rd1529, %rd1528, %rd1271;
	add.s64 	%rd1530, %rd1529, %rd1527;
	add.s64 	%rd1531, %rd1530, %rd1395;
	xor.b64  	%rd1532, %rd1469, %rd1432;
	and.b64  	%rd1533, %rd1506, %rd1532;
	xor.b64  	%rd1534, %rd1533, %rd1432;
	add.s64 	%rd1535, %rd1531, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1142,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1143}, %rd1506;
	}
	shf.r.wrap.b32 	%r1144, %r1143, %r1142, 14;
	shf.r.wrap.b32 	%r1145, %r1142, %r1143, 14;
	mov.b64 	%rd1536, {%r1145, %r1144};
	shf.r.wrap.b32 	%r1146, %r1143, %r1142, 18;
	shf.r.wrap.b32 	%r1147, %r1142, %r1143, 18;
	mov.b64 	%rd1537, {%r1147, %r1146};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	shf.l.wrap.b32 	%r1148, %r1142, %r1143, 23;
	shf.l.wrap.b32 	%r1149, %r1143, %r1142, 23;
	mov.b64 	%rd1539, {%r1149, %r1148};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	add.s64 	%rd1541, %rd1535, %rd1540;
	add.s64 	%rd1542, %rd1541, -860691631967231958;
	add.s64 	%rd1543, %rd1542, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1151}, %rd1517;
	}
	shf.r.wrap.b32 	%r1152, %r1151, %r1150, 28;
	shf.r.wrap.b32 	%r1153, %r1150, %r1151, 28;
	mov.b64 	%rd1544, {%r1153, %r1152};
	shf.l.wrap.b32 	%r1154, %r1150, %r1151, 30;
	shf.l.wrap.b32 	%r1155, %r1151, %r1150, 30;
	mov.b64 	%rd1545, {%r1155, %r1154};
	xor.b64  	%rd1546, %rd1544, %rd1545;
	shf.l.wrap.b32 	%r1156, %r1150, %r1151, 25;
	shf.l.wrap.b32 	%r1157, %r1151, %r1150, 25;
	mov.b64 	%rd1547, {%r1157, %r1156};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	and.b64  	%rd1549, %rd1517, %rd1480;
	or.b64  	%rd1550, %rd1517, %rd1480;
	and.b64  	%rd1551, %rd1550, %rd1443;
	or.b64  	%rd1552, %rd1551, %rd1549;
	add.s64 	%rd1553, %rd1552, %rd1548;
	add.s64 	%rd1554, %rd1553, %rd1542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd1493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd1493;
	}
	shf.r.wrap.b32 	%r1160, %r1159, %r1158, 19;
	shf.r.wrap.b32 	%r1161, %r1158, %r1159, 19;
	mov.b64 	%rd1555, {%r1161, %r1160};
	shf.l.wrap.b32 	%r1162, %r1158, %r1159, 3;
	shf.l.wrap.b32 	%r1163, %r1159, %r1158, 3;
	mov.b64 	%rd1556, {%r1163, %r1162};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shr.u64 	%rd1558, %rd1493, 6;
	xor.b64  	%rd1559, %rd1557, %rd1558;
	shf.r.wrap.b32 	%r1164, %r821, %r820, 1;
	shf.r.wrap.b32 	%r1165, %r820, %r821, 1;
	mov.b64 	%rd1560, {%r1165, %r1164};
	shf.r.wrap.b32 	%r1166, %r821, %r820, 8;
	shf.r.wrap.b32 	%r1167, %r820, %r821, 8;
	mov.b64 	%rd1561, {%r1167, %r1166};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	shr.u64 	%rd1563, %rd1012, 7;
	xor.b64  	%rd1564, %rd1562, %rd1563;
	add.s64 	%rd1565, %rd1559, %rd975;
	add.s64 	%rd1566, %rd1565, %rd1308;
	add.s64 	%rd1567, %rd1566, %rd1564;
	add.s64 	%rd1568, %rd1567, %rd1432;
	xor.b64  	%rd1569, %rd1506, %rd1469;
	and.b64  	%rd1570, %rd1543, %rd1569;
	xor.b64  	%rd1571, %rd1570, %rd1469;
	add.s64 	%rd1572, %rd1568, %rd1571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd1543;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 14;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 14;
	mov.b64 	%rd1573, {%r1171, %r1170};
	shf.r.wrap.b32 	%r1172, %r1169, %r1168, 18;
	shf.r.wrap.b32 	%r1173, %r1168, %r1169, 18;
	mov.b64 	%rd1574, {%r1173, %r1172};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	shf.l.wrap.b32 	%r1174, %r1168, %r1169, 23;
	shf.l.wrap.b32 	%r1175, %r1169, %r1168, 23;
	mov.b64 	%rd1576, {%r1175, %r1174};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	add.s64 	%rd1578, %rd1572, %rd1577;
	add.s64 	%rd1579, %rd1578, 1182934255886127544;
	add.s64 	%rd1580, %rd1579, %rd1443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1554;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 28;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 28;
	mov.b64 	%rd1581, {%r1179, %r1178};
	shf.l.wrap.b32 	%r1180, %r1176, %r1177, 30;
	shf.l.wrap.b32 	%r1181, %r1177, %r1176, 30;
	mov.b64 	%rd1582, {%r1181, %r1180};
	xor.b64  	%rd1583, %rd1581, %rd1582;
	shf.l.wrap.b32 	%r1182, %r1176, %r1177, 25;
	shf.l.wrap.b32 	%r1183, %r1177, %r1176, 25;
	mov.b64 	%rd1584, {%r1183, %r1182};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	and.b64  	%rd1586, %rd1554, %rd1517;
	or.b64  	%rd1587, %rd1554, %rd1517;
	and.b64  	%rd1588, %rd1587, %rd1480;
	or.b64  	%rd1589, %rd1588, %rd1586;
	add.s64 	%rd1590, %rd1589, %rd1585;
	add.s64 	%rd1591, %rd1590, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1184,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1185}, %rd1530;
	}
	shf.r.wrap.b32 	%r1186, %r1185, %r1184, 19;
	shf.r.wrap.b32 	%r1187, %r1184, %r1185, 19;
	mov.b64 	%rd1592, {%r1187, %r1186};
	shf.l.wrap.b32 	%r1188, %r1184, %r1185, 3;
	shf.l.wrap.b32 	%r1189, %r1185, %r1184, 3;
	mov.b64 	%rd1593, {%r1189, %r1188};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	shr.u64 	%rd1595, %rd1530, 6;
	xor.b64  	%rd1596, %rd1594, %rd1595;
	shf.r.wrap.b32 	%r1190, %r847, %r846, 1;
	shf.r.wrap.b32 	%r1191, %r846, %r847, 1;
	mov.b64 	%rd1597, {%r1191, %r1190};
	shf.r.wrap.b32 	%r1192, %r847, %r846, 8;
	shf.r.wrap.b32 	%r1193, %r846, %r847, 8;
	mov.b64 	%rd1598, {%r1193, %r1192};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	shr.u64 	%rd1600, %rd1049, 7;
	xor.b64  	%rd1601, %rd1599, %rd1600;
	add.s64 	%rd1602, %rd1596, %rd1012;
	add.s64 	%rd1603, %rd1602, %rd1345;
	add.s64 	%rd1604, %rd1603, %rd1601;
	add.s64 	%rd1605, %rd1604, %rd1469;
	xor.b64  	%rd1606, %rd1543, %rd1506;
	and.b64  	%rd1607, %rd1580, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1506;
	add.s64 	%rd1609, %rd1605, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd1580;
	}
	shf.r.wrap.b32 	%r1196, %r1195, %r1194, 14;
	shf.r.wrap.b32 	%r1197, %r1194, %r1195, 14;
	mov.b64 	%rd1610, {%r1197, %r1196};
	shf.r.wrap.b32 	%r1198, %r1195, %r1194, 18;
	shf.r.wrap.b32 	%r1199, %r1194, %r1195, 18;
	mov.b64 	%rd1611, {%r1199, %r1198};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	shf.l.wrap.b32 	%r1200, %r1194, %r1195, 23;
	shf.l.wrap.b32 	%r1201, %r1195, %r1194, 23;
	mov.b64 	%rd1613, {%r1201, %r1200};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	add.s64 	%rd1615, %rd1609, %rd1614;
	add.s64 	%rd1616, %rd1615, 1847814050463011016;
	add.s64 	%rd1617, %rd1616, %rd1480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1202,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd1591;
	}
	shf.r.wrap.b32 	%r1204, %r1203, %r1202, 28;
	shf.r.wrap.b32 	%r1205, %r1202, %r1203, 28;
	mov.b64 	%rd1618, {%r1205, %r1204};
	shf.l.wrap.b32 	%r1206, %r1202, %r1203, 30;
	shf.l.wrap.b32 	%r1207, %r1203, %r1202, 30;
	mov.b64 	%rd1619, {%r1207, %r1206};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	shf.l.wrap.b32 	%r1208, %r1202, %r1203, 25;
	shf.l.wrap.b32 	%r1209, %r1203, %r1202, 25;
	mov.b64 	%rd1621, {%r1209, %r1208};
	xor.b64  	%rd1622, %rd1620, %rd1621;
	and.b64  	%rd1623, %rd1591, %rd1554;
	or.b64  	%rd1624, %rd1591, %rd1554;
	and.b64  	%rd1625, %rd1624, %rd1517;
	or.b64  	%rd1626, %rd1625, %rd1623;
	add.s64 	%rd1627, %rd1626, %rd1622;
	add.s64 	%rd1628, %rd1627, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd1567;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 19;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 19;
	mov.b64 	%rd1629, {%r1213, %r1212};
	shf.l.wrap.b32 	%r1214, %r1210, %r1211, 3;
	shf.l.wrap.b32 	%r1215, %r1211, %r1210, 3;
	mov.b64 	%rd1630, {%r1215, %r1214};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	shr.u64 	%rd1632, %rd1567, 6;
	xor.b64  	%rd1633, %rd1631, %rd1632;
	shf.r.wrap.b32 	%r1216, %r873, %r872, 1;
	shf.r.wrap.b32 	%r1217, %r872, %r873, 1;
	mov.b64 	%rd1634, {%r1217, %r1216};
	shf.r.wrap.b32 	%r1218, %r873, %r872, 8;
	shf.r.wrap.b32 	%r1219, %r872, %r873, 8;
	mov.b64 	%rd1635, {%r1219, %r1218};
	xor.b64  	%rd1636, %rd1634, %rd1635;
	shr.u64 	%rd1637, %rd1086, 7;
	xor.b64  	%rd1638, %rd1636, %rd1637;
	add.s64 	%rd1639, %rd1633, %rd1049;
	add.s64 	%rd1640, %rd1639, %rd1382;
	add.s64 	%rd1641, %rd1640, %rd1638;
	add.s64 	%rd1642, %rd1641, %rd1506;
	xor.b64  	%rd1643, %rd1580, %rd1543;
	and.b64  	%rd1644, %rd1617, %rd1643;
	xor.b64  	%rd1645, %rd1644, %rd1543;
	add.s64 	%rd1646, %rd1642, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1220,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1221}, %rd1617;
	}
	shf.r.wrap.b32 	%r1222, %r1221, %r1220, 14;
	shf.r.wrap.b32 	%r1223, %r1220, %r1221, 14;
	mov.b64 	%rd1647, {%r1223, %r1222};
	shf.r.wrap.b32 	%r1224, %r1221, %r1220, 18;
	shf.r.wrap.b32 	%r1225, %r1220, %r1221, 18;
	mov.b64 	%rd1648, {%r1225, %r1224};
	xor.b64  	%rd1649, %rd1647, %rd1648;
	shf.l.wrap.b32 	%r1226, %r1220, %r1221, 23;
	shf.l.wrap.b32 	%r1227, %r1221, %r1220, 23;
	mov.b64 	%rd1650, {%r1227, %r1226};
	xor.b64  	%rd1651, %rd1649, %rd1650;
	add.s64 	%rd1652, %rd1646, %rd1651;
	add.s64 	%rd1653, %rd1652, 2177327727835720531;
	add.s64 	%rd1654, %rd1653, %rd1517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd1628;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 28;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 28;
	mov.b64 	%rd1655, {%r1231, %r1230};
	shf.l.wrap.b32 	%r1232, %r1228, %r1229, 30;
	shf.l.wrap.b32 	%r1233, %r1229, %r1228, 30;
	mov.b64 	%rd1656, {%r1233, %r1232};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	shf.l.wrap.b32 	%r1234, %r1228, %r1229, 25;
	shf.l.wrap.b32 	%r1235, %r1229, %r1228, 25;
	mov.b64 	%rd1658, {%r1235, %r1234};
	xor.b64  	%rd1659, %rd1657, %rd1658;
	and.b64  	%rd1660, %rd1628, %rd1591;
	or.b64  	%rd1661, %rd1628, %rd1591;
	and.b64  	%rd1662, %rd1661, %rd1554;
	or.b64  	%rd1663, %rd1662, %rd1660;
	add.s64 	%rd1664, %rd1663, %rd1659;
	add.s64 	%rd1665, %rd1664, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1236,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1237}, %rd1604;
	}
	shf.r.wrap.b32 	%r1238, %r1237, %r1236, 19;
	shf.r.wrap.b32 	%r1239, %r1236, %r1237, 19;
	mov.b64 	%rd1666, {%r1239, %r1238};
	shf.l.wrap.b32 	%r1240, %r1236, %r1237, 3;
	shf.l.wrap.b32 	%r1241, %r1237, %r1236, 3;
	mov.b64 	%rd1667, {%r1241, %r1240};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	shr.u64 	%rd1669, %rd1604, 6;
	xor.b64  	%rd1670, %rd1668, %rd1669;
	shf.r.wrap.b32 	%r1242, %r899, %r898, 1;
	shf.r.wrap.b32 	%r1243, %r898, %r899, 1;
	mov.b64 	%rd1671, {%r1243, %r1242};
	shf.r.wrap.b32 	%r1244, %r899, %r898, 8;
	shf.r.wrap.b32 	%r1245, %r898, %r899, 8;
	mov.b64 	%rd1672, {%r1245, %r1244};
	xor.b64  	%rd1673, %rd1671, %rd1672;
	shr.u64 	%rd1674, %rd1123, 7;
	xor.b64  	%rd1675, %rd1673, %rd1674;
	add.s64 	%rd1676, %rd1670, %rd1086;
	add.s64 	%rd1677, %rd1676, %rd1419;
	add.s64 	%rd1678, %rd1677, %rd1675;
	add.s64 	%rd1679, %rd1678, %rd1543;
	xor.b64  	%rd1680, %rd1617, %rd1580;
	and.b64  	%rd1681, %rd1654, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1580;
	add.s64 	%rd1683, %rd1679, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd1654;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 14;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 14;
	mov.b64 	%rd1684, {%r1249, %r1248};
	shf.r.wrap.b32 	%r1250, %r1247, %r1246, 18;
	shf.r.wrap.b32 	%r1251, %r1246, %r1247, 18;
	mov.b64 	%rd1685, {%r1251, %r1250};
	xor.b64  	%rd1686, %rd1684, %rd1685;
	shf.l.wrap.b32 	%r1252, %r1246, %r1247, 23;
	shf.l.wrap.b32 	%r1253, %r1247, %r1246, 23;
	mov.b64 	%rd1687, {%r1253, %r1252};
	xor.b64  	%rd1688, %rd1686, %rd1687;
	add.s64 	%rd1689, %rd1683, %rd1688;
	add.s64 	%rd1690, %rd1689, 2830643537854262169;
	add.s64 	%rd1691, %rd1690, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd1665;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 28;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 28;
	mov.b64 	%rd1692, {%r1257, %r1256};
	shf.l.wrap.b32 	%r1258, %r1254, %r1255, 30;
	shf.l.wrap.b32 	%r1259, %r1255, %r1254, 30;
	mov.b64 	%rd1693, {%r1259, %r1258};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	shf.l.wrap.b32 	%r1260, %r1254, %r1255, 25;
	shf.l.wrap.b32 	%r1261, %r1255, %r1254, 25;
	mov.b64 	%rd1695, {%r1261, %r1260};
	xor.b64  	%rd1696, %rd1694, %rd1695;
	and.b64  	%rd1697, %rd1665, %rd1628;
	or.b64  	%rd1698, %rd1665, %rd1628;
	and.b64  	%rd1699, %rd1698, %rd1591;
	or.b64  	%rd1700, %rd1699, %rd1697;
	add.s64 	%rd1701, %rd1700, %rd1696;
	add.s64 	%rd1702, %rd1701, %rd1690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd1641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd1641;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 19;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 19;
	mov.b64 	%rd1703, {%r1265, %r1264};
	shf.l.wrap.b32 	%r1266, %r1262, %r1263, 3;
	shf.l.wrap.b32 	%r1267, %r1263, %r1262, 3;
	mov.b64 	%rd1704, {%r1267, %r1266};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	shr.u64 	%rd1706, %rd1641, 6;
	xor.b64  	%rd1707, %rd1705, %rd1706;
	shf.r.wrap.b32 	%r1268, %r925, %r924, 1;
	shf.r.wrap.b32 	%r1269, %r924, %r925, 1;
	mov.b64 	%rd1708, {%r1269, %r1268};
	shf.r.wrap.b32 	%r1270, %r925, %r924, 8;
	shf.r.wrap.b32 	%r1271, %r924, %r925, 8;
	mov.b64 	%rd1709, {%r1271, %r1270};
	xor.b64  	%rd1710, %rd1708, %rd1709;
	shr.u64 	%rd1711, %rd1160, 7;
	xor.b64  	%rd1712, %rd1710, %rd1711;
	add.s64 	%rd1713, %rd1707, %rd1123;
	add.s64 	%rd1714, %rd1713, %rd1456;
	add.s64 	%rd1715, %rd1714, %rd1712;
	add.s64 	%rd1716, %rd1715, %rd1580;
	xor.b64  	%rd1717, %rd1654, %rd1617;
	and.b64  	%rd1718, %rd1691, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1617;
	add.s64 	%rd1720, %rd1716, %rd1719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1272,%dummy}, %rd1691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1273}, %rd1691;
	}
	shf.r.wrap.b32 	%r1274, %r1273, %r1272, 14;
	shf.r.wrap.b32 	%r1275, %r1272, %r1273, 14;
	mov.b64 	%rd1721, {%r1275, %r1274};
	shf.r.wrap.b32 	%r1276, %r1273, %r1272, 18;
	shf.r.wrap.b32 	%r1277, %r1272, %r1273, 18;
	mov.b64 	%rd1722, {%r1277, %r1276};
	xor.b64  	%rd1723, %rd1721, %rd1722;
	shf.l.wrap.b32 	%r1278, %r1272, %r1273, 23;
	shf.l.wrap.b32 	%r1279, %r1273, %r1272, 23;
	mov.b64 	%rd1724, {%r1279, %r1278};
	xor.b64  	%rd1725, %rd1723, %rd1724;
	add.s64 	%rd1726, %rd1720, %rd1725;
	add.s64 	%rd1727, %rd1726, 3796741975233480872;
	add.s64 	%rd1728, %rd1727, %rd1591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1280,%dummy}, %rd1702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1281}, %rd1702;
	}
	shf.r.wrap.b32 	%r1282, %r1281, %r1280, 28;
	shf.r.wrap.b32 	%r1283, %r1280, %r1281, 28;
	mov.b64 	%rd1729, {%r1283, %r1282};
	shf.l.wrap.b32 	%r1284, %r1280, %r1281, 30;
	shf.l.wrap.b32 	%r1285, %r1281, %r1280, 30;
	mov.b64 	%rd1730, {%r1285, %r1284};
	xor.b64  	%rd1731, %rd1729, %rd1730;
	shf.l.wrap.b32 	%r1286, %r1280, %r1281, 25;
	shf.l.wrap.b32 	%r1287, %r1281, %r1280, 25;
	mov.b64 	%rd1732, {%r1287, %r1286};
	xor.b64  	%rd1733, %rd1731, %rd1732;
	and.b64  	%rd1734, %rd1702, %rd1665;
	or.b64  	%rd1735, %rd1702, %rd1665;
	and.b64  	%rd1736, %rd1735, %rd1628;
	or.b64  	%rd1737, %rd1736, %rd1734;
	add.s64 	%rd1738, %rd1737, %rd1733;
	add.s64 	%rd1739, %rd1738, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1288,%dummy}, %rd1678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1289}, %rd1678;
	}
	shf.r.wrap.b32 	%r1290, %r1289, %r1288, 19;
	shf.r.wrap.b32 	%r1291, %r1288, %r1289, 19;
	mov.b64 	%rd1740, {%r1291, %r1290};
	shf.l.wrap.b32 	%r1292, %r1288, %r1289, 3;
	shf.l.wrap.b32 	%r1293, %r1289, %r1288, 3;
	mov.b64 	%rd1741, {%r1293, %r1292};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	shr.u64 	%rd1743, %rd1678, 6;
	xor.b64  	%rd1744, %rd1742, %rd1743;
	shf.r.wrap.b32 	%r1294, %r951, %r950, 1;
	shf.r.wrap.b32 	%r1295, %r950, %r951, 1;
	mov.b64 	%rd1745, {%r1295, %r1294};
	shf.r.wrap.b32 	%r1296, %r951, %r950, 8;
	shf.r.wrap.b32 	%r1297, %r950, %r951, 8;
	mov.b64 	%rd1746, {%r1297, %r1296};
	xor.b64  	%rd1747, %rd1745, %rd1746;
	shr.u64 	%rd1748, %rd1197, 7;
	xor.b64  	%rd1749, %rd1747, %rd1748;
	add.s64 	%rd1750, %rd1744, %rd1160;
	add.s64 	%rd1751, %rd1750, %rd1493;
	add.s64 	%rd1752, %rd1751, %rd1749;
	add.s64 	%rd1753, %rd1752, %rd1617;
	xor.b64  	%rd1754, %rd1691, %rd1654;
	and.b64  	%rd1755, %rd1728, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1654;
	add.s64 	%rd1757, %rd1753, %rd1756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1298,%dummy}, %rd1728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1299}, %rd1728;
	}
	shf.r.wrap.b32 	%r1300, %r1299, %r1298, 14;
	shf.r.wrap.b32 	%r1301, %r1298, %r1299, 14;
	mov.b64 	%rd1758, {%r1301, %r1300};
	shf.r.wrap.b32 	%r1302, %r1299, %r1298, 18;
	shf.r.wrap.b32 	%r1303, %r1298, %r1299, 18;
	mov.b64 	%rd1759, {%r1303, %r1302};
	xor.b64  	%rd1760, %rd1758, %rd1759;
	shf.l.wrap.b32 	%r1304, %r1298, %r1299, 23;
	shf.l.wrap.b32 	%r1305, %r1299, %r1298, 23;
	mov.b64 	%rd1761, {%r1305, %r1304};
	xor.b64  	%rd1762, %rd1760, %rd1761;
	add.s64 	%rd1763, %rd1757, %rd1762;
	add.s64 	%rd1764, %rd1763, 4115178125766777443;
	add.s64 	%rd1765, %rd1764, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1307}, %rd1739;
	}
	shf.r.wrap.b32 	%r1308, %r1307, %r1306, 28;
	shf.r.wrap.b32 	%r1309, %r1306, %r1307, 28;
	mov.b64 	%rd1766, {%r1309, %r1308};
	shf.l.wrap.b32 	%r1310, %r1306, %r1307, 30;
	shf.l.wrap.b32 	%r1311, %r1307, %r1306, 30;
	mov.b64 	%rd1767, {%r1311, %r1310};
	xor.b64  	%rd1768, %rd1766, %rd1767;
	shf.l.wrap.b32 	%r1312, %r1306, %r1307, 25;
	shf.l.wrap.b32 	%r1313, %r1307, %r1306, 25;
	mov.b64 	%rd1769, {%r1313, %r1312};
	xor.b64  	%rd1770, %rd1768, %rd1769;
	and.b64  	%rd1771, %rd1739, %rd1702;
	or.b64  	%rd1772, %rd1739, %rd1702;
	and.b64  	%rd1773, %rd1772, %rd1665;
	or.b64  	%rd1774, %rd1773, %rd1771;
	add.s64 	%rd1775, %rd1774, %rd1770;
	add.s64 	%rd1776, %rd1775, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1314,%dummy}, %rd1715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1315}, %rd1715;
	}
	shf.r.wrap.b32 	%r1316, %r1315, %r1314, 19;
	shf.r.wrap.b32 	%r1317, %r1314, %r1315, 19;
	mov.b64 	%rd1777, {%r1317, %r1316};
	shf.l.wrap.b32 	%r1318, %r1314, %r1315, 3;
	shf.l.wrap.b32 	%r1319, %r1315, %r1314, 3;
	mov.b64 	%rd1778, {%r1319, %r1318};
	xor.b64  	%rd1779, %rd1777, %rd1778;
	shr.u64 	%rd1780, %rd1715, 6;
	xor.b64  	%rd1781, %rd1779, %rd1780;
	shf.r.wrap.b32 	%r1320, %r977, %r976, 1;
	shf.r.wrap.b32 	%r1321, %r976, %r977, 1;
	mov.b64 	%rd1782, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r977, %r976, 8;
	shf.r.wrap.b32 	%r1323, %r976, %r977, 8;
	mov.b64 	%rd1783, {%r1323, %r1322};
	xor.b64  	%rd1784, %rd1782, %rd1783;
	shr.u64 	%rd1785, %rd1234, 7;
	xor.b64  	%rd1786, %rd1784, %rd1785;
	add.s64 	%rd1787, %rd1781, %rd1197;
	add.s64 	%rd1788, %rd1787, %rd1530;
	add.s64 	%rd1789, %rd1788, %rd1786;
	add.s64 	%rd1790, %rd1789, %rd1654;
	xor.b64  	%rd1791, %rd1728, %rd1691;
	and.b64  	%rd1792, %rd1765, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1691;
	add.s64 	%rd1794, %rd1790, %rd1793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd1765;
	}
	shf.r.wrap.b32 	%r1326, %r1325, %r1324, 14;
	shf.r.wrap.b32 	%r1327, %r1324, %r1325, 14;
	mov.b64 	%rd1795, {%r1327, %r1326};
	shf.r.wrap.b32 	%r1328, %r1325, %r1324, 18;
	shf.r.wrap.b32 	%r1329, %r1324, %r1325, 18;
	mov.b64 	%rd1796, {%r1329, %r1328};
	xor.b64  	%rd1797, %rd1795, %rd1796;
	shf.l.wrap.b32 	%r1330, %r1324, %r1325, 23;
	shf.l.wrap.b32 	%r1331, %r1325, %r1324, 23;
	mov.b64 	%rd1798, {%r1331, %r1330};
	xor.b64  	%rd1799, %rd1797, %rd1798;
	add.s64 	%rd1800, %rd1794, %rd1799;
	add.s64 	%rd1801, %rd1800, 5681478168544905931;
	add.s64 	%rd1802, %rd1801, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd1776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1333}, %rd1776;
	}
	shf.r.wrap.b32 	%r1334, %r1333, %r1332, 28;
	shf.r.wrap.b32 	%r1335, %r1332, %r1333, 28;
	mov.b64 	%rd1803, {%r1335, %r1334};
	shf.l.wrap.b32 	%r1336, %r1332, %r1333, 30;
	shf.l.wrap.b32 	%r1337, %r1333, %r1332, 30;
	mov.b64 	%rd1804, {%r1337, %r1336};
	xor.b64  	%rd1805, %rd1803, %rd1804;
	shf.l.wrap.b32 	%r1338, %r1332, %r1333, 25;
	shf.l.wrap.b32 	%r1339, %r1333, %r1332, 25;
	mov.b64 	%rd1806, {%r1339, %r1338};
	xor.b64  	%rd1807, %rd1805, %rd1806;
	and.b64  	%rd1808, %rd1776, %rd1739;
	or.b64  	%rd1809, %rd1776, %rd1739;
	and.b64  	%rd1810, %rd1809, %rd1702;
	or.b64  	%rd1811, %rd1810, %rd1808;
	add.s64 	%rd1812, %rd1811, %rd1807;
	add.s64 	%rd1813, %rd1812, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1340,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd1752;
	}
	shf.r.wrap.b32 	%r1342, %r1341, %r1340, 19;
	shf.r.wrap.b32 	%r1343, %r1340, %r1341, 19;
	mov.b64 	%rd1814, {%r1343, %r1342};
	shf.l.wrap.b32 	%r1344, %r1340, %r1341, 3;
	shf.l.wrap.b32 	%r1345, %r1341, %r1340, 3;
	mov.b64 	%rd1815, {%r1345, %r1344};
	xor.b64  	%rd1816, %rd1814, %rd1815;
	shr.u64 	%rd1817, %rd1752, 6;
	xor.b64  	%rd1818, %rd1816, %rd1817;
	shf.r.wrap.b32 	%r1346, %r1003, %r1002, 1;
	shf.r.wrap.b32 	%r1347, %r1002, %r1003, 1;
	mov.b64 	%rd1819, {%r1347, %r1346};
	shf.r.wrap.b32 	%r1348, %r1003, %r1002, 8;
	shf.r.wrap.b32 	%r1349, %r1002, %r1003, 8;
	mov.b64 	%rd1820, {%r1349, %r1348};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	shr.u64 	%rd1822, %rd1271, 7;
	xor.b64  	%rd1823, %rd1821, %rd1822;
	add.s64 	%rd1824, %rd1818, %rd1234;
	add.s64 	%rd1825, %rd1824, %rd1567;
	add.s64 	%rd1826, %rd1825, %rd1823;
	add.s64 	%rd1827, %rd1826, %rd1691;
	xor.b64  	%rd1828, %rd1765, %rd1728;
	and.b64  	%rd1829, %rd1802, %rd1828;
	xor.b64  	%rd1830, %rd1829, %rd1728;
	add.s64 	%rd1831, %rd1827, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd1802;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 14;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 14;
	mov.b64 	%rd1832, {%r1353, %r1352};
	shf.r.wrap.b32 	%r1354, %r1351, %r1350, 18;
	shf.r.wrap.b32 	%r1355, %r1350, %r1351, 18;
	mov.b64 	%rd1833, {%r1355, %r1354};
	xor.b64  	%rd1834, %rd1832, %rd1833;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 23;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 23;
	mov.b64 	%rd1835, {%r1357, %r1356};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	add.s64 	%rd1837, %rd1831, %rd1836;
	add.s64 	%rd1838, %rd1837, 6601373596472566643;
	add.s64 	%rd1839, %rd1838, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1813;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 28;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 28;
	mov.b64 	%rd1840, {%r1361, %r1360};
	shf.l.wrap.b32 	%r1362, %r1358, %r1359, 30;
	shf.l.wrap.b32 	%r1363, %r1359, %r1358, 30;
	mov.b64 	%rd1841, {%r1363, %r1362};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 25;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 25;
	mov.b64 	%rd1843, {%r1365, %r1364};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	and.b64  	%rd1845, %rd1813, %rd1776;
	or.b64  	%rd1846, %rd1813, %rd1776;
	and.b64  	%rd1847, %rd1846, %rd1739;
	or.b64  	%rd1848, %rd1847, %rd1845;
	add.s64 	%rd1849, %rd1848, %rd1844;
	add.s64 	%rd1850, %rd1849, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd1789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd1789;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 19;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 19;
	mov.b64 	%rd1851, {%r1369, %r1368};
	shf.l.wrap.b32 	%r1370, %r1366, %r1367, 3;
	shf.l.wrap.b32 	%r1371, %r1367, %r1366, 3;
	mov.b64 	%rd1852, {%r1371, %r1370};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	shr.u64 	%rd1854, %rd1789, 6;
	xor.b64  	%rd1855, %rd1853, %rd1854;
	shf.r.wrap.b32 	%r1372, %r1029, %r1028, 1;
	shf.r.wrap.b32 	%r1373, %r1028, %r1029, 1;
	mov.b64 	%rd1856, {%r1373, %r1372};
	shf.r.wrap.b32 	%r1374, %r1029, %r1028, 8;
	shf.r.wrap.b32 	%r1375, %r1028, %r1029, 8;
	mov.b64 	%rd1857, {%r1375, %r1374};
	xor.b64  	%rd1858, %rd1856, %rd1857;
	shr.u64 	%rd1859, %rd1308, 7;
	xor.b64  	%rd1860, %rd1858, %rd1859;
	add.s64 	%rd1861, %rd1855, %rd1271;
	add.s64 	%rd1862, %rd1861, %rd1604;
	add.s64 	%rd1863, %rd1862, %rd1860;
	add.s64 	%rd1864, %rd1863, %rd1728;
	xor.b64  	%rd1865, %rd1802, %rd1765;
	and.b64  	%rd1866, %rd1839, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1765;
	add.s64 	%rd1868, %rd1864, %rd1867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1376,%dummy}, %rd1839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1377}, %rd1839;
	}
	shf.r.wrap.b32 	%r1378, %r1377, %r1376, 14;
	shf.r.wrap.b32 	%r1379, %r1376, %r1377, 14;
	mov.b64 	%rd1869, {%r1379, %r1378};
	shf.r.wrap.b32 	%r1380, %r1377, %r1376, 18;
	shf.r.wrap.b32 	%r1381, %r1376, %r1377, 18;
	mov.b64 	%rd1870, {%r1381, %r1380};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	shf.l.wrap.b32 	%r1382, %r1376, %r1377, 23;
	shf.l.wrap.b32 	%r1383, %r1377, %r1376, 23;
	mov.b64 	%rd1872, {%r1383, %r1382};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	add.s64 	%rd1874, %rd1868, %rd1873;
	add.s64 	%rd1875, %rd1874, 7507060721942968483;
	add.s64 	%rd1876, %rd1875, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1384,%dummy}, %rd1850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd1850;
	}
	shf.r.wrap.b32 	%r1386, %r1385, %r1384, 28;
	shf.r.wrap.b32 	%r1387, %r1384, %r1385, 28;
	mov.b64 	%rd1877, {%r1387, %r1386};
	shf.l.wrap.b32 	%r1388, %r1384, %r1385, 30;
	shf.l.wrap.b32 	%r1389, %r1385, %r1384, 30;
	mov.b64 	%rd1878, {%r1389, %r1388};
	xor.b64  	%rd1879, %rd1877, %rd1878;
	shf.l.wrap.b32 	%r1390, %r1384, %r1385, 25;
	shf.l.wrap.b32 	%r1391, %r1385, %r1384, 25;
	mov.b64 	%rd1880, {%r1391, %r1390};
	xor.b64  	%rd1881, %rd1879, %rd1880;
	and.b64  	%rd1882, %rd1850, %rd1813;
	or.b64  	%rd1883, %rd1850, %rd1813;
	and.b64  	%rd1884, %rd1883, %rd1776;
	or.b64  	%rd1885, %rd1884, %rd1882;
	add.s64 	%rd1886, %rd1885, %rd1881;
	add.s64 	%rd1887, %rd1886, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1392,%dummy}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1393}, %rd1826;
	}
	shf.r.wrap.b32 	%r1394, %r1393, %r1392, 19;
	shf.r.wrap.b32 	%r1395, %r1392, %r1393, 19;
	mov.b64 	%rd1888, {%r1395, %r1394};
	shf.l.wrap.b32 	%r1396, %r1392, %r1393, 3;
	shf.l.wrap.b32 	%r1397, %r1393, %r1392, 3;
	mov.b64 	%rd1889, {%r1397, %r1396};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	shr.u64 	%rd1891, %rd1826, 6;
	xor.b64  	%rd1892, %rd1890, %rd1891;
	shf.r.wrap.b32 	%r1398, %r1055, %r1054, 1;
	shf.r.wrap.b32 	%r1399, %r1054, %r1055, 1;
	mov.b64 	%rd1893, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1055, %r1054, 8;
	shf.r.wrap.b32 	%r1401, %r1054, %r1055, 8;
	mov.b64 	%rd1894, {%r1401, %r1400};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	shr.u64 	%rd1896, %rd1345, 7;
	xor.b64  	%rd1897, %rd1895, %rd1896;
	add.s64 	%rd1898, %rd1892, %rd1308;
	add.s64 	%rd1899, %rd1898, %rd1641;
	add.s64 	%rd1900, %rd1899, %rd1897;
	add.s64 	%rd1901, %rd1900, %rd1765;
	xor.b64  	%rd1902, %rd1839, %rd1802;
	and.b64  	%rd1903, %rd1876, %rd1902;
	xor.b64  	%rd1904, %rd1903, %rd1802;
	add.s64 	%rd1905, %rd1901, %rd1904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd1876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1403}, %rd1876;
	}
	shf.r.wrap.b32 	%r1404, %r1403, %r1402, 14;
	shf.r.wrap.b32 	%r1405, %r1402, %r1403, 14;
	mov.b64 	%rd1906, {%r1405, %r1404};
	shf.r.wrap.b32 	%r1406, %r1403, %r1402, 18;
	shf.r.wrap.b32 	%r1407, %r1402, %r1403, 18;
	mov.b64 	%rd1907, {%r1407, %r1406};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	shf.l.wrap.b32 	%r1408, %r1402, %r1403, 23;
	shf.l.wrap.b32 	%r1409, %r1403, %r1402, 23;
	mov.b64 	%rd1909, {%r1409, %r1408};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	add.s64 	%rd1911, %rd1905, %rd1910;
	add.s64 	%rd1912, %rd1911, 8399075790359081724;
	add.s64 	%rd1913, %rd1912, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1411}, %rd1887;
	}
	shf.r.wrap.b32 	%r1412, %r1411, %r1410, 28;
	shf.r.wrap.b32 	%r1413, %r1410, %r1411, 28;
	mov.b64 	%rd1914, {%r1413, %r1412};
	shf.l.wrap.b32 	%r1414, %r1410, %r1411, 30;
	shf.l.wrap.b32 	%r1415, %r1411, %r1410, 30;
	mov.b64 	%rd1915, {%r1415, %r1414};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	shf.l.wrap.b32 	%r1416, %r1410, %r1411, 25;
	shf.l.wrap.b32 	%r1417, %r1411, %r1410, 25;
	mov.b64 	%rd1917, {%r1417, %r1416};
	xor.b64  	%rd1918, %rd1916, %rd1917;
	and.b64  	%rd1919, %rd1887, %rd1850;
	or.b64  	%rd1920, %rd1887, %rd1850;
	and.b64  	%rd1921, %rd1920, %rd1813;
	or.b64  	%rd1922, %rd1921, %rd1919;
	add.s64 	%rd1923, %rd1922, %rd1918;
	add.s64 	%rd1924, %rd1923, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd1863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd1863;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 19;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 19;
	mov.b64 	%rd1925, {%r1421, %r1420};
	shf.l.wrap.b32 	%r1422, %r1418, %r1419, 3;
	shf.l.wrap.b32 	%r1423, %r1419, %r1418, 3;
	mov.b64 	%rd1926, {%r1423, %r1422};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	shr.u64 	%rd1928, %rd1863, 6;
	xor.b64  	%rd1929, %rd1927, %rd1928;
	shf.r.wrap.b32 	%r1424, %r1081, %r1080, 1;
	shf.r.wrap.b32 	%r1425, %r1080, %r1081, 1;
	mov.b64 	%rd1930, {%r1425, %r1424};
	shf.r.wrap.b32 	%r1426, %r1081, %r1080, 8;
	shf.r.wrap.b32 	%r1427, %r1080, %r1081, 8;
	mov.b64 	%rd1931, {%r1427, %r1426};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	shr.u64 	%rd1933, %rd1382, 7;
	xor.b64  	%rd1934, %rd1932, %rd1933;
	add.s64 	%rd1935, %rd1929, %rd1345;
	add.s64 	%rd1936, %rd1935, %rd1678;
	add.s64 	%rd1937, %rd1936, %rd1934;
	add.s64 	%rd1938, %rd1937, %rd1802;
	xor.b64  	%rd1939, %rd1876, %rd1839;
	and.b64  	%rd1940, %rd1913, %rd1939;
	xor.b64  	%rd1941, %rd1940, %rd1839;
	add.s64 	%rd1942, %rd1938, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd1913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd1913;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 14;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 14;
	mov.b64 	%rd1943, {%r1431, %r1430};
	shf.r.wrap.b32 	%r1432, %r1429, %r1428, 18;
	shf.r.wrap.b32 	%r1433, %r1428, %r1429, 18;
	mov.b64 	%rd1944, {%r1433, %r1432};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	shf.l.wrap.b32 	%r1434, %r1428, %r1429, 23;
	shf.l.wrap.b32 	%r1435, %r1429, %r1428, 23;
	mov.b64 	%rd1946, {%r1435, %r1434};
	xor.b64  	%rd1947, %rd1945, %rd1946;
	add.s64 	%rd1948, %rd1942, %rd1947;
	add.s64 	%rd1949, %rd1948, 8693463985226723168;
	add.s64 	%rd1950, %rd1949, %rd1813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd1924;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 28;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 28;
	mov.b64 	%rd1951, {%r1439, %r1438};
	shf.l.wrap.b32 	%r1440, %r1436, %r1437, 30;
	shf.l.wrap.b32 	%r1441, %r1437, %r1436, 30;
	mov.b64 	%rd1952, {%r1441, %r1440};
	xor.b64  	%rd1953, %rd1951, %rd1952;
	shf.l.wrap.b32 	%r1442, %r1436, %r1437, 25;
	shf.l.wrap.b32 	%r1443, %r1437, %r1436, 25;
	mov.b64 	%rd1954, {%r1443, %r1442};
	xor.b64  	%rd1955, %rd1953, %rd1954;
	and.b64  	%rd1956, %rd1924, %rd1887;
	or.b64  	%rd1957, %rd1924, %rd1887;
	and.b64  	%rd1958, %rd1957, %rd1850;
	or.b64  	%rd1959, %rd1958, %rd1956;
	add.s64 	%rd1960, %rd1959, %rd1955;
	add.s64 	%rd1961, %rd1960, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1444,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1445}, %rd1900;
	}
	shf.r.wrap.b32 	%r1446, %r1445, %r1444, 19;
	shf.r.wrap.b32 	%r1447, %r1444, %r1445, 19;
	mov.b64 	%rd1962, {%r1447, %r1446};
	shf.l.wrap.b32 	%r1448, %r1444, %r1445, 3;
	shf.l.wrap.b32 	%r1449, %r1445, %r1444, 3;
	mov.b64 	%rd1963, {%r1449, %r1448};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	shr.u64 	%rd1965, %rd1900, 6;
	xor.b64  	%rd1966, %rd1964, %rd1965;
	shf.r.wrap.b32 	%r1450, %r1107, %r1106, 1;
	shf.r.wrap.b32 	%r1451, %r1106, %r1107, 1;
	mov.b64 	%rd1967, {%r1451, %r1450};
	shf.r.wrap.b32 	%r1452, %r1107, %r1106, 8;
	shf.r.wrap.b32 	%r1453, %r1106, %r1107, 8;
	mov.b64 	%rd1968, {%r1453, %r1452};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	shr.u64 	%rd1970, %rd1419, 7;
	xor.b64  	%rd1971, %rd1969, %rd1970;
	add.s64 	%rd1972, %rd1966, %rd1382;
	add.s64 	%rd1973, %rd1972, %rd1715;
	add.s64 	%rd1974, %rd1973, %rd1971;
	add.s64 	%rd1975, %rd1974, %rd1839;
	xor.b64  	%rd1976, %rd1913, %rd1876;
	and.b64  	%rd1977, %rd1950, %rd1976;
	xor.b64  	%rd1978, %rd1977, %rd1876;
	add.s64 	%rd1979, %rd1975, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd1950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd1950;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 14;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 14;
	mov.b64 	%rd1980, {%r1457, %r1456};
	shf.r.wrap.b32 	%r1458, %r1455, %r1454, 18;
	shf.r.wrap.b32 	%r1459, %r1454, %r1455, 18;
	mov.b64 	%rd1981, {%r1459, %r1458};
	xor.b64  	%rd1982, %rd1980, %rd1981;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 23;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 23;
	mov.b64 	%rd1983, {%r1461, %r1460};
	xor.b64  	%rd1984, %rd1982, %rd1983;
	add.s64 	%rd1985, %rd1979, %rd1984;
	add.s64 	%rd1986, %rd1985, -8878714635349349518;
	add.s64 	%rd1987, %rd1986, %rd1850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd1961;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 28;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 28;
	mov.b64 	%rd1988, {%r1465, %r1464};
	shf.l.wrap.b32 	%r1466, %r1462, %r1463, 30;
	shf.l.wrap.b32 	%r1467, %r1463, %r1462, 30;
	mov.b64 	%rd1989, {%r1467, %r1466};
	xor.b64  	%rd1990, %rd1988, %rd1989;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 25;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 25;
	mov.b64 	%rd1991, {%r1469, %r1468};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	and.b64  	%rd1993, %rd1961, %rd1924;
	or.b64  	%rd1994, %rd1961, %rd1924;
	and.b64  	%rd1995, %rd1994, %rd1887;
	or.b64  	%rd1996, %rd1995, %rd1993;
	add.s64 	%rd1997, %rd1996, %rd1992;
	add.s64 	%rd1998, %rd1997, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd1937;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 19;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 19;
	mov.b64 	%rd1999, {%r1473, %r1472};
	shf.l.wrap.b32 	%r1474, %r1470, %r1471, 3;
	shf.l.wrap.b32 	%r1475, %r1471, %r1470, 3;
	mov.b64 	%rd2000, {%r1475, %r1474};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	shr.u64 	%rd2002, %rd1937, 6;
	xor.b64  	%rd2003, %rd2001, %rd2002;
	shf.r.wrap.b32 	%r1476, %r1133, %r1132, 1;
	shf.r.wrap.b32 	%r1477, %r1132, %r1133, 1;
	mov.b64 	%rd2004, {%r1477, %r1476};
	shf.r.wrap.b32 	%r1478, %r1133, %r1132, 8;
	shf.r.wrap.b32 	%r1479, %r1132, %r1133, 8;
	mov.b64 	%rd2005, {%r1479, %r1478};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	shr.u64 	%rd2007, %rd1456, 7;
	xor.b64  	%rd2008, %rd2006, %rd2007;
	add.s64 	%rd2009, %rd2003, %rd1419;
	add.s64 	%rd2010, %rd2009, %rd1752;
	add.s64 	%rd2011, %rd2010, %rd2008;
	add.s64 	%rd2012, %rd2011, %rd1876;
	xor.b64  	%rd2013, %rd1950, %rd1913;
	and.b64  	%rd2014, %rd1987, %rd2013;
	xor.b64  	%rd2015, %rd2014, %rd1913;
	add.s64 	%rd2016, %rd2012, %rd2015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1480,%dummy}, %rd1987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1481}, %rd1987;
	}
	shf.r.wrap.b32 	%r1482, %r1481, %r1480, 14;
	shf.r.wrap.b32 	%r1483, %r1480, %r1481, 14;
	mov.b64 	%rd2017, {%r1483, %r1482};
	shf.r.wrap.b32 	%r1484, %r1481, %r1480, 18;
	shf.r.wrap.b32 	%r1485, %r1480, %r1481, 18;
	mov.b64 	%rd2018, {%r1485, %r1484};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	shf.l.wrap.b32 	%r1486, %r1480, %r1481, 23;
	shf.l.wrap.b32 	%r1487, %r1481, %r1480, 23;
	mov.b64 	%rd2020, {%r1487, %r1486};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	add.s64 	%rd2022, %rd2016, %rd2021;
	add.s64 	%rd2023, %rd2022, -8302665154208450068;
	add.s64 	%rd2024, %rd2023, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1488,%dummy}, %rd1998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1489}, %rd1998;
	}
	shf.r.wrap.b32 	%r1490, %r1489, %r1488, 28;
	shf.r.wrap.b32 	%r1491, %r1488, %r1489, 28;
	mov.b64 	%rd2025, {%r1491, %r1490};
	shf.l.wrap.b32 	%r1492, %r1488, %r1489, 30;
	shf.l.wrap.b32 	%r1493, %r1489, %r1488, 30;
	mov.b64 	%rd2026, {%r1493, %r1492};
	xor.b64  	%rd2027, %rd2025, %rd2026;
	shf.l.wrap.b32 	%r1494, %r1488, %r1489, 25;
	shf.l.wrap.b32 	%r1495, %r1489, %r1488, 25;
	mov.b64 	%rd2028, {%r1495, %r1494};
	xor.b64  	%rd2029, %rd2027, %rd2028;
	and.b64  	%rd2030, %rd1998, %rd1961;
	or.b64  	%rd2031, %rd1998, %rd1961;
	and.b64  	%rd2032, %rd2031, %rd1924;
	or.b64  	%rd2033, %rd2032, %rd2030;
	add.s64 	%rd2034, %rd2033, %rd2029;
	add.s64 	%rd2035, %rd2034, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1496,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd1974;
	}
	shf.r.wrap.b32 	%r1498, %r1497, %r1496, 19;
	shf.r.wrap.b32 	%r1499, %r1496, %r1497, 19;
	mov.b64 	%rd2036, {%r1499, %r1498};
	shf.l.wrap.b32 	%r1500, %r1496, %r1497, 3;
	shf.l.wrap.b32 	%r1501, %r1497, %r1496, 3;
	mov.b64 	%rd2037, {%r1501, %r1500};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	shr.u64 	%rd2039, %rd1974, 6;
	xor.b64  	%rd2040, %rd2038, %rd2039;
	shf.r.wrap.b32 	%r1502, %r1159, %r1158, 1;
	shf.r.wrap.b32 	%r1503, %r1158, %r1159, 1;
	mov.b64 	%rd2041, {%r1503, %r1502};
	shf.r.wrap.b32 	%r1504, %r1159, %r1158, 8;
	shf.r.wrap.b32 	%r1505, %r1158, %r1159, 8;
	mov.b64 	%rd2042, {%r1505, %r1504};
	xor.b64  	%rd2043, %rd2041, %rd2042;
	shr.u64 	%rd2044, %rd1493, 7;
	xor.b64  	%rd2045, %rd2043, %rd2044;
	add.s64 	%rd2046, %rd2040, %rd1456;
	add.s64 	%rd2047, %rd2046, %rd1789;
	add.s64 	%rd2048, %rd2047, %rd2045;
	add.s64 	%rd2049, %rd2048, %rd1913;
	xor.b64  	%rd2050, %rd1987, %rd1950;
	and.b64  	%rd2051, %rd2024, %rd2050;
	xor.b64  	%rd2052, %rd2051, %rd1950;
	add.s64 	%rd2053, %rd2049, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd2024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1507}, %rd2024;
	}
	shf.r.wrap.b32 	%r1508, %r1507, %r1506, 14;
	shf.r.wrap.b32 	%r1509, %r1506, %r1507, 14;
	mov.b64 	%rd2054, {%r1509, %r1508};
	shf.r.wrap.b32 	%r1510, %r1507, %r1506, 18;
	shf.r.wrap.b32 	%r1511, %r1506, %r1507, 18;
	mov.b64 	%rd2055, {%r1511, %r1510};
	xor.b64  	%rd2056, %rd2054, %rd2055;
	shf.l.wrap.b32 	%r1512, %r1506, %r1507, 23;
	shf.l.wrap.b32 	%r1513, %r1507, %r1506, 23;
	mov.b64 	%rd2057, {%r1513, %r1512};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	add.s64 	%rd2059, %rd2053, %rd2058;
	add.s64 	%rd2060, %rd2059, -8016688836872298968;
	add.s64 	%rd2061, %rd2060, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1515}, %rd2035;
	}
	shf.r.wrap.b32 	%r1516, %r1515, %r1514, 28;
	shf.r.wrap.b32 	%r1517, %r1514, %r1515, 28;
	mov.b64 	%rd2062, {%r1517, %r1516};
	shf.l.wrap.b32 	%r1518, %r1514, %r1515, 30;
	shf.l.wrap.b32 	%r1519, %r1515, %r1514, 30;
	mov.b64 	%rd2063, {%r1519, %r1518};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	shf.l.wrap.b32 	%r1520, %r1514, %r1515, 25;
	shf.l.wrap.b32 	%r1521, %r1515, %r1514, 25;
	mov.b64 	%rd2065, {%r1521, %r1520};
	xor.b64  	%rd2066, %rd2064, %rd2065;
	and.b64  	%rd2067, %rd2035, %rd1998;
	or.b64  	%rd2068, %rd2035, %rd1998;
	and.b64  	%rd2069, %rd2068, %rd1961;
	or.b64  	%rd2070, %rd2069, %rd2067;
	add.s64 	%rd2071, %rd2070, %rd2066;
	add.s64 	%rd2072, %rd2071, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd2011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd2011;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 19;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 19;
	mov.b64 	%rd2073, {%r1525, %r1524};
	shf.l.wrap.b32 	%r1526, %r1522, %r1523, 3;
	shf.l.wrap.b32 	%r1527, %r1523, %r1522, 3;
	mov.b64 	%rd2074, {%r1527, %r1526};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	shr.u64 	%rd2076, %rd2011, 6;
	xor.b64  	%rd2077, %rd2075, %rd2076;
	shf.r.wrap.b32 	%r1528, %r1185, %r1184, 1;
	shf.r.wrap.b32 	%r1529, %r1184, %r1185, 1;
	mov.b64 	%rd2078, {%r1529, %r1528};
	shf.r.wrap.b32 	%r1530, %r1185, %r1184, 8;
	shf.r.wrap.b32 	%r1531, %r1184, %r1185, 8;
	mov.b64 	%rd2079, {%r1531, %r1530};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	shr.u64 	%rd2081, %rd1530, 7;
	xor.b64  	%rd2082, %rd2080, %rd2081;
	add.s64 	%rd2083, %rd2077, %rd1493;
	add.s64 	%rd2084, %rd2083, %rd1826;
	add.s64 	%rd2085, %rd2084, %rd2082;
	add.s64 	%rd2086, %rd2085, %rd1950;
	xor.b64  	%rd2087, %rd2024, %rd1987;
	and.b64  	%rd2088, %rd2061, %rd2087;
	xor.b64  	%rd2089, %rd2088, %rd1987;
	add.s64 	%rd2090, %rd2086, %rd2089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1532,%dummy}, %rd2061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd2061;
	}
	shf.r.wrap.b32 	%r1534, %r1533, %r1532, 14;
	shf.r.wrap.b32 	%r1535, %r1532, %r1533, 14;
	mov.b64 	%rd2091, {%r1535, %r1534};
	shf.r.wrap.b32 	%r1536, %r1533, %r1532, 18;
	shf.r.wrap.b32 	%r1537, %r1532, %r1533, 18;
	mov.b64 	%rd2092, {%r1537, %r1536};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	shf.l.wrap.b32 	%r1538, %r1532, %r1533, 23;
	shf.l.wrap.b32 	%r1539, %r1533, %r1532, 23;
	mov.b64 	%rd2094, {%r1539, %r1538};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	add.s64 	%rd2096, %rd2090, %rd2095;
	add.s64 	%rd2097, %rd2096, -6606660893046293015;
	add.s64 	%rd2098, %rd2097, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1540,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1541}, %rd2072;
	}
	shf.r.wrap.b32 	%r1542, %r1541, %r1540, 28;
	shf.r.wrap.b32 	%r1543, %r1540, %r1541, 28;
	mov.b64 	%rd2099, {%r1543, %r1542};
	shf.l.wrap.b32 	%r1544, %r1540, %r1541, 30;
	shf.l.wrap.b32 	%r1545, %r1541, %r1540, 30;
	mov.b64 	%rd2100, {%r1545, %r1544};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	shf.l.wrap.b32 	%r1546, %r1540, %r1541, 25;
	shf.l.wrap.b32 	%r1547, %r1541, %r1540, 25;
	mov.b64 	%rd2102, {%r1547, %r1546};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	and.b64  	%rd2104, %rd2072, %rd2035;
	or.b64  	%rd2105, %rd2072, %rd2035;
	and.b64  	%rd2106, %rd2105, %rd1998;
	or.b64  	%rd2107, %rd2106, %rd2104;
	add.s64 	%rd2108, %rd2107, %rd2103;
	add.s64 	%rd2109, %rd2108, %rd2097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1548,%dummy}, %rd2048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1549}, %rd2048;
	}
	shf.r.wrap.b32 	%r1550, %r1549, %r1548, 19;
	shf.r.wrap.b32 	%r1551, %r1548, %r1549, 19;
	mov.b64 	%rd2110, {%r1551, %r1550};
	shf.l.wrap.b32 	%r1552, %r1548, %r1549, 3;
	shf.l.wrap.b32 	%r1553, %r1549, %r1548, 3;
	mov.b64 	%rd2111, {%r1553, %r1552};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	shr.u64 	%rd2113, %rd2048, 6;
	xor.b64  	%rd2114, %rd2112, %rd2113;
	shf.r.wrap.b32 	%r1554, %r1211, %r1210, 1;
	shf.r.wrap.b32 	%r1555, %r1210, %r1211, 1;
	mov.b64 	%rd2115, {%r1555, %r1554};
	shf.r.wrap.b32 	%r1556, %r1211, %r1210, 8;
	shf.r.wrap.b32 	%r1557, %r1210, %r1211, 8;
	mov.b64 	%rd2116, {%r1557, %r1556};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	shr.u64 	%rd2118, %rd1567, 7;
	xor.b64  	%rd2119, %rd2117, %rd2118;
	add.s64 	%rd2120, %rd2114, %rd1530;
	add.s64 	%rd2121, %rd2120, %rd1863;
	add.s64 	%rd2122, %rd2121, %rd2119;
	add.s64 	%rd2123, %rd2122, %rd1987;
	xor.b64  	%rd2124, %rd2061, %rd2024;
	and.b64  	%rd2125, %rd2098, %rd2124;
	xor.b64  	%rd2126, %rd2125, %rd2024;
	add.s64 	%rd2127, %rd2123, %rd2126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd2098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd2098;
	}
	shf.r.wrap.b32 	%r1560, %r1559, %r1558, 14;
	shf.r.wrap.b32 	%r1561, %r1558, %r1559, 14;
	mov.b64 	%rd2128, {%r1561, %r1560};
	shf.r.wrap.b32 	%r1562, %r1559, %r1558, 18;
	shf.r.wrap.b32 	%r1563, %r1558, %r1559, 18;
	mov.b64 	%rd2129, {%r1563, %r1562};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	shf.l.wrap.b32 	%r1564, %r1558, %r1559, 23;
	shf.l.wrap.b32 	%r1565, %r1559, %r1558, 23;
	mov.b64 	%rd2131, {%r1565, %r1564};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	add.s64 	%rd2133, %rd2127, %rd2132;
	add.s64 	%rd2134, %rd2133, -4685533653050689259;
	add.s64 	%rd2135, %rd2134, %rd1998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd2109;
	}
	shf.r.wrap.b32 	%r1568, %r1567, %r1566, 28;
	shf.r.wrap.b32 	%r1569, %r1566, %r1567, 28;
	mov.b64 	%rd2136, {%r1569, %r1568};
	shf.l.wrap.b32 	%r1570, %r1566, %r1567, 30;
	shf.l.wrap.b32 	%r1571, %r1567, %r1566, 30;
	mov.b64 	%rd2137, {%r1571, %r1570};
	xor.b64  	%rd2138, %rd2136, %rd2137;
	shf.l.wrap.b32 	%r1572, %r1566, %r1567, 25;
	shf.l.wrap.b32 	%r1573, %r1567, %r1566, 25;
	mov.b64 	%rd2139, {%r1573, %r1572};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	and.b64  	%rd2141, %rd2109, %rd2072;
	or.b64  	%rd2142, %rd2109, %rd2072;
	and.b64  	%rd2143, %rd2142, %rd2035;
	or.b64  	%rd2144, %rd2143, %rd2141;
	add.s64 	%rd2145, %rd2144, %rd2140;
	add.s64 	%rd2146, %rd2145, %rd2134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd2085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd2085;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 19;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 19;
	mov.b64 	%rd2147, {%r1577, %r1576};
	shf.l.wrap.b32 	%r1578, %r1574, %r1575, 3;
	shf.l.wrap.b32 	%r1579, %r1575, %r1574, 3;
	mov.b64 	%rd2148, {%r1579, %r1578};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	shr.u64 	%rd2150, %rd2085, 6;
	xor.b64  	%rd2151, %rd2149, %rd2150;
	shf.r.wrap.b32 	%r1580, %r1237, %r1236, 1;
	shf.r.wrap.b32 	%r1581, %r1236, %r1237, 1;
	mov.b64 	%rd2152, {%r1581, %r1580};
	shf.r.wrap.b32 	%r1582, %r1237, %r1236, 8;
	shf.r.wrap.b32 	%r1583, %r1236, %r1237, 8;
	mov.b64 	%rd2153, {%r1583, %r1582};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	shr.u64 	%rd2155, %rd1604, 7;
	xor.b64  	%rd2156, %rd2154, %rd2155;
	add.s64 	%rd2157, %rd2151, %rd1567;
	add.s64 	%rd2158, %rd2157, %rd1900;
	add.s64 	%rd2159, %rd2158, %rd2156;
	add.s64 	%rd2160, %rd2159, %rd2024;
	xor.b64  	%rd2161, %rd2098, %rd2061;
	and.b64  	%rd2162, %rd2135, %rd2161;
	xor.b64  	%rd2163, %rd2162, %rd2061;
	add.s64 	%rd2164, %rd2160, %rd2163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd2135;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 14;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 14;
	mov.b64 	%rd2165, {%r1587, %r1586};
	shf.r.wrap.b32 	%r1588, %r1585, %r1584, 18;
	shf.r.wrap.b32 	%r1589, %r1584, %r1585, 18;
	mov.b64 	%rd2166, {%r1589, %r1588};
	xor.b64  	%rd2167, %rd2165, %rd2166;
	shf.l.wrap.b32 	%r1590, %r1584, %r1585, 23;
	shf.l.wrap.b32 	%r1591, %r1585, %r1584, 23;
	mov.b64 	%rd2168, {%r1591, %r1590};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	add.s64 	%rd2170, %rd2164, %rd2169;
	add.s64 	%rd2171, %rd2170, -4147400797238176981;
	add.s64 	%rd2172, %rd2171, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1592,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd2146;
	}
	shf.r.wrap.b32 	%r1594, %r1593, %r1592, 28;
	shf.r.wrap.b32 	%r1595, %r1592, %r1593, 28;
	mov.b64 	%rd2173, {%r1595, %r1594};
	shf.l.wrap.b32 	%r1596, %r1592, %r1593, 30;
	shf.l.wrap.b32 	%r1597, %r1593, %r1592, 30;
	mov.b64 	%rd2174, {%r1597, %r1596};
	xor.b64  	%rd2175, %rd2173, %rd2174;
	shf.l.wrap.b32 	%r1598, %r1592, %r1593, 25;
	shf.l.wrap.b32 	%r1599, %r1593, %r1592, 25;
	mov.b64 	%rd2176, {%r1599, %r1598};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	and.b64  	%rd2178, %rd2146, %rd2109;
	or.b64  	%rd2179, %rd2146, %rd2109;
	and.b64  	%rd2180, %rd2179, %rd2072;
	or.b64  	%rd2181, %rd2180, %rd2178;
	add.s64 	%rd2182, %rd2181, %rd2177;
	add.s64 	%rd2183, %rd2182, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1600,%dummy}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1601}, %rd2122;
	}
	shf.r.wrap.b32 	%r1602, %r1601, %r1600, 19;
	shf.r.wrap.b32 	%r1603, %r1600, %r1601, 19;
	mov.b64 	%rd2184, {%r1603, %r1602};
	shf.l.wrap.b32 	%r1604, %r1600, %r1601, 3;
	shf.l.wrap.b32 	%r1605, %r1601, %r1600, 3;
	mov.b64 	%rd2185, {%r1605, %r1604};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	shr.u64 	%rd2187, %rd2122, 6;
	xor.b64  	%rd2188, %rd2186, %rd2187;
	shf.r.wrap.b32 	%r1606, %r1263, %r1262, 1;
	shf.r.wrap.b32 	%r1607, %r1262, %r1263, 1;
	mov.b64 	%rd2189, {%r1607, %r1606};
	shf.r.wrap.b32 	%r1608, %r1263, %r1262, 8;
	shf.r.wrap.b32 	%r1609, %r1262, %r1263, 8;
	mov.b64 	%rd2190, {%r1609, %r1608};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	shr.u64 	%rd2192, %rd1641, 7;
	xor.b64  	%rd2193, %rd2191, %rd2192;
	add.s64 	%rd2194, %rd2188, %rd1604;
	add.s64 	%rd2195, %rd2194, %rd1937;
	add.s64 	%rd2196, %rd2195, %rd2193;
	add.s64 	%rd2197, %rd2196, %rd2061;
	xor.b64  	%rd2198, %rd2135, %rd2098;
	and.b64  	%rd2199, %rd2172, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2098;
	add.s64 	%rd2201, %rd2197, %rd2200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1610,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1611}, %rd2172;
	}
	shf.r.wrap.b32 	%r1612, %r1611, %r1610, 14;
	shf.r.wrap.b32 	%r1613, %r1610, %r1611, 14;
	mov.b64 	%rd2202, {%r1613, %r1612};
	shf.r.wrap.b32 	%r1614, %r1611, %r1610, 18;
	shf.r.wrap.b32 	%r1615, %r1610, %r1611, 18;
	mov.b64 	%rd2203, {%r1615, %r1614};
	xor.b64  	%rd2204, %rd2202, %rd2203;
	shf.l.wrap.b32 	%r1616, %r1610, %r1611, 23;
	shf.l.wrap.b32 	%r1617, %r1611, %r1610, 23;
	mov.b64 	%rd2205, {%r1617, %r1616};
	xor.b64  	%rd2206, %rd2204, %rd2205;
	add.s64 	%rd2207, %rd2201, %rd2206;
	add.s64 	%rd2208, %rd2207, -3880063495543823972;
	add.s64 	%rd2209, %rd2208, %rd2072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1619}, %rd2183;
	}
	shf.r.wrap.b32 	%r1620, %r1619, %r1618, 28;
	shf.r.wrap.b32 	%r1621, %r1618, %r1619, 28;
	mov.b64 	%rd2210, {%r1621, %r1620};
	shf.l.wrap.b32 	%r1622, %r1618, %r1619, 30;
	shf.l.wrap.b32 	%r1623, %r1619, %r1618, 30;
	mov.b64 	%rd2211, {%r1623, %r1622};
	xor.b64  	%rd2212, %rd2210, %rd2211;
	shf.l.wrap.b32 	%r1624, %r1618, %r1619, 25;
	shf.l.wrap.b32 	%r1625, %r1619, %r1618, 25;
	mov.b64 	%rd2213, {%r1625, %r1624};
	xor.b64  	%rd2214, %rd2212, %rd2213;
	and.b64  	%rd2215, %rd2183, %rd2146;
	or.b64  	%rd2216, %rd2183, %rd2146;
	and.b64  	%rd2217, %rd2216, %rd2109;
	or.b64  	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd2218, %rd2214;
	add.s64 	%rd2220, %rd2219, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1627}, %rd2159;
	}
	shf.r.wrap.b32 	%r1628, %r1627, %r1626, 19;
	shf.r.wrap.b32 	%r1629, %r1626, %r1627, 19;
	mov.b64 	%rd2221, {%r1629, %r1628};
	shf.l.wrap.b32 	%r1630, %r1626, %r1627, 3;
	shf.l.wrap.b32 	%r1631, %r1627, %r1626, 3;
	mov.b64 	%rd2222, {%r1631, %r1630};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	shr.u64 	%rd2224, %rd2159, 6;
	xor.b64  	%rd2225, %rd2223, %rd2224;
	shf.r.wrap.b32 	%r1632, %r1289, %r1288, 1;
	shf.r.wrap.b32 	%r1633, %r1288, %r1289, 1;
	mov.b64 	%rd2226, {%r1633, %r1632};
	shf.r.wrap.b32 	%r1634, %r1289, %r1288, 8;
	shf.r.wrap.b32 	%r1635, %r1288, %r1289, 8;
	mov.b64 	%rd2227, {%r1635, %r1634};
	xor.b64  	%rd2228, %rd2226, %rd2227;
	shr.u64 	%rd2229, %rd1678, 7;
	xor.b64  	%rd2230, %rd2228, %rd2229;
	add.s64 	%rd2231, %rd2225, %rd1641;
	add.s64 	%rd2232, %rd2231, %rd1974;
	add.s64 	%rd2233, %rd2232, %rd2230;
	add.s64 	%rd2234, %rd2233, %rd2098;
	xor.b64  	%rd2235, %rd2172, %rd2135;
	and.b64  	%rd2236, %rd2209, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2135;
	add.s64 	%rd2238, %rd2234, %rd2237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1636,%dummy}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1637}, %rd2209;
	}
	shf.r.wrap.b32 	%r1638, %r1637, %r1636, 14;
	shf.r.wrap.b32 	%r1639, %r1636, %r1637, 14;
	mov.b64 	%rd2239, {%r1639, %r1638};
	shf.r.wrap.b32 	%r1640, %r1637, %r1636, 18;
	shf.r.wrap.b32 	%r1641, %r1636, %r1637, 18;
	mov.b64 	%rd2240, {%r1641, %r1640};
	xor.b64  	%rd2241, %rd2239, %rd2240;
	shf.l.wrap.b32 	%r1642, %r1636, %r1637, 23;
	shf.l.wrap.b32 	%r1643, %r1637, %r1636, 23;
	mov.b64 	%rd2242, {%r1643, %r1642};
	xor.b64  	%rd2243, %rd2241, %rd2242;
	add.s64 	%rd2244, %rd2238, %rd2243;
	add.s64 	%rd2245, %rd2244, -3348786107499101689;
	add.s64 	%rd2246, %rd2245, %rd2109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd2220;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 28;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 28;
	mov.b64 	%rd2247, {%r1647, %r1646};
	shf.l.wrap.b32 	%r1648, %r1644, %r1645, 30;
	shf.l.wrap.b32 	%r1649, %r1645, %r1644, 30;
	mov.b64 	%rd2248, {%r1649, %r1648};
	xor.b64  	%rd2249, %rd2247, %rd2248;
	shf.l.wrap.b32 	%r1650, %r1644, %r1645, 25;
	shf.l.wrap.b32 	%r1651, %r1645, %r1644, 25;
	mov.b64 	%rd2250, {%r1651, %r1650};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	and.b64  	%rd2252, %rd2220, %rd2183;
	or.b64  	%rd2253, %rd2220, %rd2183;
	and.b64  	%rd2254, %rd2253, %rd2146;
	or.b64  	%rd2255, %rd2254, %rd2252;
	add.s64 	%rd2256, %rd2255, %rd2251;
	add.s64 	%rd2257, %rd2256, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1652,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd2196;
	}
	shf.r.wrap.b32 	%r1654, %r1653, %r1652, 19;
	shf.r.wrap.b32 	%r1655, %r1652, %r1653, 19;
	mov.b64 	%rd2258, {%r1655, %r1654};
	shf.l.wrap.b32 	%r1656, %r1652, %r1653, 3;
	shf.l.wrap.b32 	%r1657, %r1653, %r1652, 3;
	mov.b64 	%rd2259, {%r1657, %r1656};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	shr.u64 	%rd2261, %rd2196, 6;
	xor.b64  	%rd2262, %rd2260, %rd2261;
	shf.r.wrap.b32 	%r1658, %r1315, %r1314, 1;
	shf.r.wrap.b32 	%r1659, %r1314, %r1315, 1;
	mov.b64 	%rd2263, {%r1659, %r1658};
	shf.r.wrap.b32 	%r1660, %r1315, %r1314, 8;
	shf.r.wrap.b32 	%r1661, %r1314, %r1315, 8;
	mov.b64 	%rd2264, {%r1661, %r1660};
	xor.b64  	%rd2265, %rd2263, %rd2264;
	shr.u64 	%rd2266, %rd1715, 7;
	xor.b64  	%rd2267, %rd2265, %rd2266;
	add.s64 	%rd2268, %rd2262, %rd1678;
	add.s64 	%rd2269, %rd2268, %rd2011;
	add.s64 	%rd2270, %rd2269, %rd2267;
	add.s64 	%rd2271, %rd2270, %rd2135;
	xor.b64  	%rd2272, %rd2209, %rd2172;
	and.b64  	%rd2273, %rd2246, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2172;
	add.s64 	%rd2275, %rd2271, %rd2274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd2246;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 14;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 14;
	mov.b64 	%rd2276, {%r1665, %r1664};
	shf.r.wrap.b32 	%r1666, %r1663, %r1662, 18;
	shf.r.wrap.b32 	%r1667, %r1662, %r1663, 18;
	mov.b64 	%rd2277, {%r1667, %r1666};
	xor.b64  	%rd2278, %rd2276, %rd2277;
	shf.l.wrap.b32 	%r1668, %r1662, %r1663, 23;
	shf.l.wrap.b32 	%r1669, %r1663, %r1662, 23;
	mov.b64 	%rd2279, {%r1669, %r1668};
	xor.b64  	%rd2280, %rd2278, %rd2279;
	add.s64 	%rd2281, %rd2275, %rd2280;
	add.s64 	%rd2282, %rd2281, -1523767162380948706;
	add.s64 	%rd2283, %rd2282, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd2257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd2257;
	}
	shf.r.wrap.b32 	%r1672, %r1671, %r1670, 28;
	shf.r.wrap.b32 	%r1673, %r1670, %r1671, 28;
	mov.b64 	%rd2284, {%r1673, %r1672};
	shf.l.wrap.b32 	%r1674, %r1670, %r1671, 30;
	shf.l.wrap.b32 	%r1675, %r1671, %r1670, 30;
	mov.b64 	%rd2285, {%r1675, %r1674};
	xor.b64  	%rd2286, %rd2284, %rd2285;
	shf.l.wrap.b32 	%r1676, %r1670, %r1671, 25;
	shf.l.wrap.b32 	%r1677, %r1671, %r1670, 25;
	mov.b64 	%rd2287, {%r1677, %r1676};
	xor.b64  	%rd2288, %rd2286, %rd2287;
	and.b64  	%rd2289, %rd2257, %rd2220;
	or.b64  	%rd2290, %rd2257, %rd2220;
	and.b64  	%rd2291, %rd2290, %rd2183;
	or.b64  	%rd2292, %rd2291, %rd2289;
	add.s64 	%rd2293, %rd2292, %rd2288;
	add.s64 	%rd2294, %rd2293, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd2233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd2233;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 19;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 19;
	mov.b64 	%rd2295, {%r1681, %r1680};
	shf.l.wrap.b32 	%r1682, %r1678, %r1679, 3;
	shf.l.wrap.b32 	%r1683, %r1679, %r1678, 3;
	mov.b64 	%rd2296, {%r1683, %r1682};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	shr.u64 	%rd2298, %rd2233, 6;
	xor.b64  	%rd2299, %rd2297, %rd2298;
	shf.r.wrap.b32 	%r1684, %r1341, %r1340, 1;
	shf.r.wrap.b32 	%r1685, %r1340, %r1341, 1;
	mov.b64 	%rd2300, {%r1685, %r1684};
	shf.r.wrap.b32 	%r1686, %r1341, %r1340, 8;
	shf.r.wrap.b32 	%r1687, %r1340, %r1341, 8;
	mov.b64 	%rd2301, {%r1687, %r1686};
	xor.b64  	%rd2302, %rd2300, %rd2301;
	shr.u64 	%rd2303, %rd1752, 7;
	xor.b64  	%rd2304, %rd2302, %rd2303;
	add.s64 	%rd2305, %rd2299, %rd1715;
	add.s64 	%rd2306, %rd2305, %rd2048;
	add.s64 	%rd2307, %rd2306, %rd2304;
	add.s64 	%rd2308, %rd2307, %rd2172;
	xor.b64  	%rd2309, %rd2246, %rd2209;
	and.b64  	%rd2310, %rd2283, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2209;
	add.s64 	%rd2312, %rd2308, %rd2311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd2283;
	}
	shf.r.wrap.b32 	%r1690, %r1689, %r1688, 14;
	shf.r.wrap.b32 	%r1691, %r1688, %r1689, 14;
	mov.b64 	%rd2313, {%r1691, %r1690};
	shf.r.wrap.b32 	%r1692, %r1689, %r1688, 18;
	shf.r.wrap.b32 	%r1693, %r1688, %r1689, 18;
	mov.b64 	%rd2314, {%r1693, %r1692};
	xor.b64  	%rd2315, %rd2313, %rd2314;
	shf.l.wrap.b32 	%r1694, %r1688, %r1689, 23;
	shf.l.wrap.b32 	%r1695, %r1689, %r1688, 23;
	mov.b64 	%rd2316, {%r1695, %r1694};
	xor.b64  	%rd2317, %rd2315, %rd2316;
	add.s64 	%rd2318, %rd2312, %rd2317;
	add.s64 	%rd2319, %rd2318, -757361751448694408;
	add.s64 	%rd2320, %rd2319, %rd2183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1696,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2294;
	}
	shf.r.wrap.b32 	%r1698, %r1697, %r1696, 28;
	shf.r.wrap.b32 	%r1699, %r1696, %r1697, 28;
	mov.b64 	%rd2321, {%r1699, %r1698};
	shf.l.wrap.b32 	%r1700, %r1696, %r1697, 30;
	shf.l.wrap.b32 	%r1701, %r1697, %r1696, 30;
	mov.b64 	%rd2322, {%r1701, %r1700};
	xor.b64  	%rd2323, %rd2321, %rd2322;
	shf.l.wrap.b32 	%r1702, %r1696, %r1697, 25;
	shf.l.wrap.b32 	%r1703, %r1697, %r1696, 25;
	mov.b64 	%rd2324, {%r1703, %r1702};
	xor.b64  	%rd2325, %rd2323, %rd2324;
	and.b64  	%rd2326, %rd2294, %rd2257;
	or.b64  	%rd2327, %rd2294, %rd2257;
	and.b64  	%rd2328, %rd2327, %rd2220;
	or.b64  	%rd2329, %rd2328, %rd2326;
	add.s64 	%rd2330, %rd2329, %rd2325;
	add.s64 	%rd2331, %rd2330, %rd2319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2270;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 19;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 19;
	mov.b64 	%rd2332, {%r1707, %r1706};
	shf.l.wrap.b32 	%r1708, %r1704, %r1705, 3;
	shf.l.wrap.b32 	%r1709, %r1705, %r1704, 3;
	mov.b64 	%rd2333, {%r1709, %r1708};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	shr.u64 	%rd2335, %rd2270, 6;
	xor.b64  	%rd2336, %rd2334, %rd2335;
	shf.r.wrap.b32 	%r1710, %r1367, %r1366, 1;
	shf.r.wrap.b32 	%r1711, %r1366, %r1367, 1;
	mov.b64 	%rd2337, {%r1711, %r1710};
	shf.r.wrap.b32 	%r1712, %r1367, %r1366, 8;
	shf.r.wrap.b32 	%r1713, %r1366, %r1367, 8;
	mov.b64 	%rd2338, {%r1713, %r1712};
	xor.b64  	%rd2339, %rd2337, %rd2338;
	shr.u64 	%rd2340, %rd1789, 7;
	xor.b64  	%rd2341, %rd2339, %rd2340;
	add.s64 	%rd2342, %rd2336, %rd1752;
	add.s64 	%rd2343, %rd2342, %rd2085;
	add.s64 	%rd2344, %rd2343, %rd2341;
	add.s64 	%rd2345, %rd2344, %rd2209;
	xor.b64  	%rd2346, %rd2283, %rd2246;
	and.b64  	%rd2347, %rd2320, %rd2346;
	xor.b64  	%rd2348, %rd2347, %rd2246;
	add.s64 	%rd2349, %rd2345, %rd2348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1714,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1715}, %rd2320;
	}
	shf.r.wrap.b32 	%r1716, %r1715, %r1714, 14;
	shf.r.wrap.b32 	%r1717, %r1714, %r1715, 14;
	mov.b64 	%rd2350, {%r1717, %r1716};
	shf.r.wrap.b32 	%r1718, %r1715, %r1714, 18;
	shf.r.wrap.b32 	%r1719, %r1714, %r1715, 18;
	mov.b64 	%rd2351, {%r1719, %r1718};
	xor.b64  	%rd2352, %rd2350, %rd2351;
	shf.l.wrap.b32 	%r1720, %r1714, %r1715, 23;
	shf.l.wrap.b32 	%r1721, %r1715, %r1714, 23;
	mov.b64 	%rd2353, {%r1721, %r1720};
	xor.b64  	%rd2354, %rd2352, %rd2353;
	add.s64 	%rd2355, %rd2349, %rd2354;
	add.s64 	%rd2356, %rd2355, 500013540394364858;
	add.s64 	%rd2357, %rd2356, %rd2220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1722,%dummy}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1723}, %rd2331;
	}
	shf.r.wrap.b32 	%r1724, %r1723, %r1722, 28;
	shf.r.wrap.b32 	%r1725, %r1722, %r1723, 28;
	mov.b64 	%rd2358, {%r1725, %r1724};
	shf.l.wrap.b32 	%r1726, %r1722, %r1723, 30;
	shf.l.wrap.b32 	%r1727, %r1723, %r1722, 30;
	mov.b64 	%rd2359, {%r1727, %r1726};
	xor.b64  	%rd2360, %rd2358, %rd2359;
	shf.l.wrap.b32 	%r1728, %r1722, %r1723, 25;
	shf.l.wrap.b32 	%r1729, %r1723, %r1722, 25;
	mov.b64 	%rd2361, {%r1729, %r1728};
	xor.b64  	%rd2362, %rd2360, %rd2361;
	and.b64  	%rd2363, %rd2331, %rd2294;
	or.b64  	%rd2364, %rd2331, %rd2294;
	and.b64  	%rd2365, %rd2364, %rd2257;
	or.b64  	%rd2366, %rd2365, %rd2363;
	add.s64 	%rd2367, %rd2366, %rd2362;
	add.s64 	%rd2368, %rd2367, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1730,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1731}, %rd2307;
	}
	shf.r.wrap.b32 	%r1732, %r1731, %r1730, 19;
	shf.r.wrap.b32 	%r1733, %r1730, %r1731, 19;
	mov.b64 	%rd2369, {%r1733, %r1732};
	shf.l.wrap.b32 	%r1734, %r1730, %r1731, 3;
	shf.l.wrap.b32 	%r1735, %r1731, %r1730, 3;
	mov.b64 	%rd2370, {%r1735, %r1734};
	xor.b64  	%rd2371, %rd2369, %rd2370;
	shr.u64 	%rd2372, %rd2307, 6;
	xor.b64  	%rd2373, %rd2371, %rd2372;
	shf.r.wrap.b32 	%r1736, %r1393, %r1392, 1;
	shf.r.wrap.b32 	%r1737, %r1392, %r1393, 1;
	mov.b64 	%rd2374, {%r1737, %r1736};
	shf.r.wrap.b32 	%r1738, %r1393, %r1392, 8;
	shf.r.wrap.b32 	%r1739, %r1392, %r1393, 8;
	mov.b64 	%rd2375, {%r1739, %r1738};
	xor.b64  	%rd2376, %rd2374, %rd2375;
	shr.u64 	%rd2377, %rd1826, 7;
	xor.b64  	%rd2378, %rd2376, %rd2377;
	add.s64 	%rd2379, %rd2373, %rd1789;
	add.s64 	%rd2380, %rd2379, %rd2122;
	add.s64 	%rd2381, %rd2380, %rd2378;
	add.s64 	%rd2382, %rd2381, %rd2246;
	xor.b64  	%rd2383, %rd2320, %rd2283;
	and.b64  	%rd2384, %rd2357, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2283;
	add.s64 	%rd2386, %rd2382, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1740,%dummy}, %rd2357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd2357;
	}
	shf.r.wrap.b32 	%r1742, %r1741, %r1740, 14;
	shf.r.wrap.b32 	%r1743, %r1740, %r1741, 14;
	mov.b64 	%rd2387, {%r1743, %r1742};
	shf.r.wrap.b32 	%r1744, %r1741, %r1740, 18;
	shf.r.wrap.b32 	%r1745, %r1740, %r1741, 18;
	mov.b64 	%rd2388, {%r1745, %r1744};
	xor.b64  	%rd2389, %rd2387, %rd2388;
	shf.l.wrap.b32 	%r1746, %r1740, %r1741, 23;
	shf.l.wrap.b32 	%r1747, %r1741, %r1740, 23;
	mov.b64 	%rd2390, {%r1747, %r1746};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	add.s64 	%rd2392, %rd2386, %rd2391;
	add.s64 	%rd2393, %rd2392, 748580250866718886;
	add.s64 	%rd2394, %rd2393, %rd2257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1748,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1749}, %rd2368;
	}
	shf.r.wrap.b32 	%r1750, %r1749, %r1748, 28;
	shf.r.wrap.b32 	%r1751, %r1748, %r1749, 28;
	mov.b64 	%rd2395, {%r1751, %r1750};
	shf.l.wrap.b32 	%r1752, %r1748, %r1749, 30;
	shf.l.wrap.b32 	%r1753, %r1749, %r1748, 30;
	mov.b64 	%rd2396, {%r1753, %r1752};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	shf.l.wrap.b32 	%r1754, %r1748, %r1749, 25;
	shf.l.wrap.b32 	%r1755, %r1749, %r1748, 25;
	mov.b64 	%rd2398, {%r1755, %r1754};
	xor.b64  	%rd2399, %rd2397, %rd2398;
	and.b64  	%rd2400, %rd2368, %rd2331;
	or.b64  	%rd2401, %rd2368, %rd2331;
	and.b64  	%rd2402, %rd2401, %rd2294;
	or.b64  	%rd2403, %rd2402, %rd2400;
	add.s64 	%rd2404, %rd2403, %rd2399;
	add.s64 	%rd2405, %rd2404, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1756,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1757}, %rd2344;
	}
	shf.r.wrap.b32 	%r1758, %r1757, %r1756, 19;
	shf.r.wrap.b32 	%r1759, %r1756, %r1757, 19;
	mov.b64 	%rd2406, {%r1759, %r1758};
	shf.l.wrap.b32 	%r1760, %r1756, %r1757, 3;
	shf.l.wrap.b32 	%r1761, %r1757, %r1756, 3;
	mov.b64 	%rd2407, {%r1761, %r1760};
	xor.b64  	%rd2408, %rd2406, %rd2407;
	shr.u64 	%rd2409, %rd2344, 6;
	xor.b64  	%rd2410, %rd2408, %rd2409;
	shf.r.wrap.b32 	%r1762, %r1419, %r1418, 1;
	shf.r.wrap.b32 	%r1763, %r1418, %r1419, 1;
	mov.b64 	%rd2411, {%r1763, %r1762};
	shf.r.wrap.b32 	%r1764, %r1419, %r1418, 8;
	shf.r.wrap.b32 	%r1765, %r1418, %r1419, 8;
	mov.b64 	%rd2412, {%r1765, %r1764};
	xor.b64  	%rd2413, %rd2411, %rd2412;
	shr.u64 	%rd2414, %rd1863, 7;
	xor.b64  	%rd2415, %rd2413, %rd2414;
	add.s64 	%rd2416, %rd2410, %rd1826;
	add.s64 	%rd2417, %rd2416, %rd2159;
	add.s64 	%rd2418, %rd2417, %rd2415;
	add.s64 	%rd2419, %rd2418, %rd2283;
	xor.b64  	%rd2420, %rd2357, %rd2320;
	and.b64  	%rd2421, %rd2394, %rd2420;
	xor.b64  	%rd2422, %rd2421, %rd2320;
	add.s64 	%rd2423, %rd2419, %rd2422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd2394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd2394;
	}
	shf.r.wrap.b32 	%r1768, %r1767, %r1766, 14;
	shf.r.wrap.b32 	%r1769, %r1766, %r1767, 14;
	mov.b64 	%rd2424, {%r1769, %r1768};
	shf.r.wrap.b32 	%r1770, %r1767, %r1766, 18;
	shf.r.wrap.b32 	%r1771, %r1766, %r1767, 18;
	mov.b64 	%rd2425, {%r1771, %r1770};
	xor.b64  	%rd2426, %rd2424, %rd2425;
	shf.l.wrap.b32 	%r1772, %r1766, %r1767, 23;
	shf.l.wrap.b32 	%r1773, %r1767, %r1766, 23;
	mov.b64 	%rd2427, {%r1773, %r1772};
	xor.b64  	%rd2428, %rd2426, %rd2427;
	add.s64 	%rd2429, %rd2423, %rd2428;
	add.s64 	%rd2430, %rd2429, 1242879168328830382;
	add.s64 	%rd2431, %rd2430, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd2405;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 28;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 28;
	mov.b64 	%rd2432, {%r1777, %r1776};
	shf.l.wrap.b32 	%r1778, %r1774, %r1775, 30;
	shf.l.wrap.b32 	%r1779, %r1775, %r1774, 30;
	mov.b64 	%rd2433, {%r1779, %r1778};
	xor.b64  	%rd2434, %rd2432, %rd2433;
	shf.l.wrap.b32 	%r1780, %r1774, %r1775, 25;
	shf.l.wrap.b32 	%r1781, %r1775, %r1774, 25;
	mov.b64 	%rd2435, {%r1781, %r1780};
	xor.b64  	%rd2436, %rd2434, %rd2435;
	and.b64  	%rd2437, %rd2405, %rd2368;
	or.b64  	%rd2438, %rd2405, %rd2368;
	and.b64  	%rd2439, %rd2438, %rd2331;
	or.b64  	%rd2440, %rd2439, %rd2437;
	add.s64 	%rd2441, %rd2440, %rd2436;
	add.s64 	%rd2442, %rd2441, %rd2430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd2381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd2381;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 19;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 19;
	mov.b64 	%rd2443, {%r1785, %r1784};
	shf.l.wrap.b32 	%r1786, %r1782, %r1783, 3;
	shf.l.wrap.b32 	%r1787, %r1783, %r1782, 3;
	mov.b64 	%rd2444, {%r1787, %r1786};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	shr.u64 	%rd2446, %rd2381, 6;
	xor.b64  	%rd2447, %rd2445, %rd2446;
	shf.r.wrap.b32 	%r1788, %r1445, %r1444, 1;
	shf.r.wrap.b32 	%r1789, %r1444, %r1445, 1;
	mov.b64 	%rd2448, {%r1789, %r1788};
	shf.r.wrap.b32 	%r1790, %r1445, %r1444, 8;
	shf.r.wrap.b32 	%r1791, %r1444, %r1445, 8;
	mov.b64 	%rd2449, {%r1791, %r1790};
	xor.b64  	%rd2450, %rd2448, %rd2449;
	shr.u64 	%rd2451, %rd1900, 7;
	xor.b64  	%rd2452, %rd2450, %rd2451;
	add.s64 	%rd2453, %rd2447, %rd1863;
	add.s64 	%rd2454, %rd2453, %rd2196;
	add.s64 	%rd2455, %rd2454, %rd2452;
	add.s64 	%rd2456, %rd2455, %rd2320;
	xor.b64  	%rd2457, %rd2394, %rd2357;
	and.b64  	%rd2458, %rd2431, %rd2457;
	xor.b64  	%rd2459, %rd2458, %rd2357;
	add.s64 	%rd2460, %rd2456, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1792,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1793}, %rd2431;
	}
	shf.r.wrap.b32 	%r1794, %r1793, %r1792, 14;
	shf.r.wrap.b32 	%r1795, %r1792, %r1793, 14;
	mov.b64 	%rd2461, {%r1795, %r1794};
	shf.r.wrap.b32 	%r1796, %r1793, %r1792, 18;
	shf.r.wrap.b32 	%r1797, %r1792, %r1793, 18;
	mov.b64 	%rd2462, {%r1797, %r1796};
	xor.b64  	%rd2463, %rd2461, %rd2462;
	shf.l.wrap.b32 	%r1798, %r1792, %r1793, 23;
	shf.l.wrap.b32 	%r1799, %r1793, %r1792, 23;
	mov.b64 	%rd2464, {%r1799, %r1798};
	xor.b64  	%rd2465, %rd2463, %rd2464;
	add.s64 	%rd2466, %rd2460, %rd2465;
	add.s64 	%rd2467, %rd2466, 1977374033974150939;
	add.s64 	%rd2468, %rd2467, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd2442;
	}
	shf.r.wrap.b32 	%r1802, %r1801, %r1800, 28;
	shf.r.wrap.b32 	%r1803, %r1800, %r1801, 28;
	mov.b64 	%rd2469, {%r1803, %r1802};
	shf.l.wrap.b32 	%r1804, %r1800, %r1801, 30;
	shf.l.wrap.b32 	%r1805, %r1801, %r1800, 30;
	mov.b64 	%rd2470, {%r1805, %r1804};
	xor.b64  	%rd2471, %rd2469, %rd2470;
	shf.l.wrap.b32 	%r1806, %r1800, %r1801, 25;
	shf.l.wrap.b32 	%r1807, %r1801, %r1800, 25;
	mov.b64 	%rd2472, {%r1807, %r1806};
	xor.b64  	%rd2473, %rd2471, %rd2472;
	and.b64  	%rd2474, %rd2442, %rd2405;
	or.b64  	%rd2475, %rd2442, %rd2405;
	and.b64  	%rd2476, %rd2475, %rd2368;
	or.b64  	%rd2477, %rd2476, %rd2474;
	add.s64 	%rd2478, %rd2477, %rd2473;
	add.s64 	%rd2479, %rd2478, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1808,%dummy}, %rd2418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1809}, %rd2418;
	}
	shf.r.wrap.b32 	%r1810, %r1809, %r1808, 19;
	shf.r.wrap.b32 	%r1811, %r1808, %r1809, 19;
	mov.b64 	%rd2480, {%r1811, %r1810};
	shf.l.wrap.b32 	%r1812, %r1808, %r1809, 3;
	shf.l.wrap.b32 	%r1813, %r1809, %r1808, 3;
	mov.b64 	%rd2481, {%r1813, %r1812};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	shr.u64 	%rd2483, %rd2418, 6;
	xor.b64  	%rd2484, %rd2482, %rd2483;
	shf.r.wrap.b32 	%r1814, %r1471, %r1470, 1;
	shf.r.wrap.b32 	%r1815, %r1470, %r1471, 1;
	mov.b64 	%rd2485, {%r1815, %r1814};
	shf.r.wrap.b32 	%r1816, %r1471, %r1470, 8;
	shf.r.wrap.b32 	%r1817, %r1470, %r1471, 8;
	mov.b64 	%rd2486, {%r1817, %r1816};
	xor.b64  	%rd2487, %rd2485, %rd2486;
	shr.u64 	%rd2488, %rd1937, 7;
	xor.b64  	%rd2489, %rd2487, %rd2488;
	add.s64 	%rd2490, %rd2484, %rd1900;
	add.s64 	%rd2491, %rd2490, %rd2233;
	add.s64 	%rd2492, %rd2491, %rd2489;
	add.s64 	%rd2493, %rd2492, %rd2357;
	xor.b64  	%rd2494, %rd2431, %rd2394;
	and.b64  	%rd2495, %rd2468, %rd2494;
	xor.b64  	%rd2496, %rd2495, %rd2394;
	add.s64 	%rd2497, %rd2493, %rd2496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd2468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1819}, %rd2468;
	}
	shf.r.wrap.b32 	%r1820, %r1819, %r1818, 14;
	shf.r.wrap.b32 	%r1821, %r1818, %r1819, 14;
	mov.b64 	%rd2498, {%r1821, %r1820};
	shf.r.wrap.b32 	%r1822, %r1819, %r1818, 18;
	shf.r.wrap.b32 	%r1823, %r1818, %r1819, 18;
	mov.b64 	%rd2499, {%r1823, %r1822};
	xor.b64  	%rd2500, %rd2498, %rd2499;
	shf.l.wrap.b32 	%r1824, %r1818, %r1819, 23;
	shf.l.wrap.b32 	%r1825, %r1819, %r1818, 23;
	mov.b64 	%rd2501, {%r1825, %r1824};
	xor.b64  	%rd2502, %rd2500, %rd2501;
	add.s64 	%rd2503, %rd2497, %rd2502;
	add.s64 	%rd2504, %rd2503, 2944078676154940804;
	add.s64 	%rd2505, %rd2504, %rd2368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd2479;
	}
	shf.r.wrap.b32 	%r1828, %r1827, %r1826, 28;
	shf.r.wrap.b32 	%r1829, %r1826, %r1827, 28;
	mov.b64 	%rd2506, {%r1829, %r1828};
	shf.l.wrap.b32 	%r1830, %r1826, %r1827, 30;
	shf.l.wrap.b32 	%r1831, %r1827, %r1826, 30;
	mov.b64 	%rd2507, {%r1831, %r1830};
	xor.b64  	%rd2508, %rd2506, %rd2507;
	shf.l.wrap.b32 	%r1832, %r1826, %r1827, 25;
	shf.l.wrap.b32 	%r1833, %r1827, %r1826, 25;
	mov.b64 	%rd2509, {%r1833, %r1832};
	xor.b64  	%rd2510, %rd2508, %rd2509;
	and.b64  	%rd2511, %rd2479, %rd2442;
	or.b64  	%rd2512, %rd2479, %rd2442;
	and.b64  	%rd2513, %rd2512, %rd2405;
	or.b64  	%rd2514, %rd2513, %rd2511;
	add.s64 	%rd2515, %rd2514, %rd2510;
	add.s64 	%rd2516, %rd2515, %rd2504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd2455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1835}, %rd2455;
	}
	shf.r.wrap.b32 	%r1836, %r1835, %r1834, 19;
	shf.r.wrap.b32 	%r1837, %r1834, %r1835, 19;
	mov.b64 	%rd2517, {%r1837, %r1836};
	shf.l.wrap.b32 	%r1838, %r1834, %r1835, 3;
	shf.l.wrap.b32 	%r1839, %r1835, %r1834, 3;
	mov.b64 	%rd2518, {%r1839, %r1838};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	shr.u64 	%rd2520, %rd2455, 6;
	xor.b64  	%rd2521, %rd2519, %rd2520;
	shf.r.wrap.b32 	%r1840, %r1497, %r1496, 1;
	shf.r.wrap.b32 	%r1841, %r1496, %r1497, 1;
	mov.b64 	%rd2522, {%r1841, %r1840};
	shf.r.wrap.b32 	%r1842, %r1497, %r1496, 8;
	shf.r.wrap.b32 	%r1843, %r1496, %r1497, 8;
	mov.b64 	%rd2523, {%r1843, %r1842};
	xor.b64  	%rd2524, %rd2522, %rd2523;
	shr.u64 	%rd2525, %rd1974, 7;
	xor.b64  	%rd2526, %rd2524, %rd2525;
	add.s64 	%rd2527, %rd2521, %rd1937;
	add.s64 	%rd2528, %rd2527, %rd2270;
	add.s64 	%rd2529, %rd2528, %rd2526;
	add.s64 	%rd2530, %rd2529, %rd2394;
	xor.b64  	%rd2531, %rd2468, %rd2431;
	and.b64  	%rd2532, %rd2505, %rd2531;
	xor.b64  	%rd2533, %rd2532, %rd2431;
	add.s64 	%rd2534, %rd2530, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1844,%dummy}, %rd2505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1845}, %rd2505;
	}
	shf.r.wrap.b32 	%r1846, %r1845, %r1844, 14;
	shf.r.wrap.b32 	%r1847, %r1844, %r1845, 14;
	mov.b64 	%rd2535, {%r1847, %r1846};
	shf.r.wrap.b32 	%r1848, %r1845, %r1844, 18;
	shf.r.wrap.b32 	%r1849, %r1844, %r1845, 18;
	mov.b64 	%rd2536, {%r1849, %r1848};
	xor.b64  	%rd2537, %rd2535, %rd2536;
	shf.l.wrap.b32 	%r1850, %r1844, %r1845, 23;
	shf.l.wrap.b32 	%r1851, %r1845, %r1844, 23;
	mov.b64 	%rd2538, {%r1851, %r1850};
	xor.b64  	%rd2539, %rd2537, %rd2538;
	add.s64 	%rd2540, %rd2534, %rd2539;
	add.s64 	%rd2541, %rd2540, 3659926193048069267;
	add.s64 	%rd2542, %rd2541, %rd2405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1852,%dummy}, %rd2516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd2516;
	}
	shf.r.wrap.b32 	%r1854, %r1853, %r1852, 28;
	shf.r.wrap.b32 	%r1855, %r1852, %r1853, 28;
	mov.b64 	%rd2543, {%r1855, %r1854};
	shf.l.wrap.b32 	%r1856, %r1852, %r1853, 30;
	shf.l.wrap.b32 	%r1857, %r1853, %r1852, 30;
	mov.b64 	%rd2544, {%r1857, %r1856};
	xor.b64  	%rd2545, %rd2543, %rd2544;
	shf.l.wrap.b32 	%r1858, %r1852, %r1853, 25;
	shf.l.wrap.b32 	%r1859, %r1853, %r1852, 25;
	mov.b64 	%rd2546, {%r1859, %r1858};
	xor.b64  	%rd2547, %rd2545, %rd2546;
	and.b64  	%rd2548, %rd2516, %rd2479;
	or.b64  	%rd2549, %rd2516, %rd2479;
	and.b64  	%rd2550, %rd2549, %rd2442;
	or.b64  	%rd2551, %rd2550, %rd2548;
	add.s64 	%rd2552, %rd2551, %rd2547;
	add.s64 	%rd2553, %rd2552, %rd2541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1860,%dummy}, %rd2492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd2492;
	}
	shf.r.wrap.b32 	%r1862, %r1861, %r1860, 19;
	shf.r.wrap.b32 	%r1863, %r1860, %r1861, 19;
	mov.b64 	%rd2554, {%r1863, %r1862};
	shf.l.wrap.b32 	%r1864, %r1860, %r1861, 3;
	shf.l.wrap.b32 	%r1865, %r1861, %r1860, 3;
	mov.b64 	%rd2555, {%r1865, %r1864};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	shr.u64 	%rd2557, %rd2492, 6;
	xor.b64  	%rd2558, %rd2556, %rd2557;
	shf.r.wrap.b32 	%r1866, %r1523, %r1522, 1;
	shf.r.wrap.b32 	%r1867, %r1522, %r1523, 1;
	mov.b64 	%rd2559, {%r1867, %r1866};
	shf.r.wrap.b32 	%r1868, %r1523, %r1522, 8;
	shf.r.wrap.b32 	%r1869, %r1522, %r1523, 8;
	mov.b64 	%rd2560, {%r1869, %r1868};
	xor.b64  	%rd2561, %rd2559, %rd2560;
	shr.u64 	%rd2562, %rd2011, 7;
	xor.b64  	%rd2563, %rd2561, %rd2562;
	add.s64 	%rd2564, %rd2558, %rd1974;
	add.s64 	%rd2565, %rd2564, %rd2307;
	add.s64 	%rd2566, %rd2565, %rd2563;
	add.s64 	%rd2567, %rd2566, %rd2431;
	xor.b64  	%rd2568, %rd2505, %rd2468;
	and.b64  	%rd2569, %rd2542, %rd2568;
	xor.b64  	%rd2570, %rd2569, %rd2468;
	add.s64 	%rd2571, %rd2567, %rd2570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd2542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd2542;
	}
	shf.r.wrap.b32 	%r1872, %r1871, %r1870, 14;
	shf.r.wrap.b32 	%r1873, %r1870, %r1871, 14;
	mov.b64 	%rd2572, {%r1873, %r1872};
	shf.r.wrap.b32 	%r1874, %r1871, %r1870, 18;
	shf.r.wrap.b32 	%r1875, %r1870, %r1871, 18;
	mov.b64 	%rd2573, {%r1875, %r1874};
	xor.b64  	%rd2574, %rd2572, %rd2573;
	shf.l.wrap.b32 	%r1876, %r1870, %r1871, 23;
	shf.l.wrap.b32 	%r1877, %r1871, %r1870, 23;
	mov.b64 	%rd2575, {%r1877, %r1876};
	xor.b64  	%rd2576, %rd2574, %rd2575;
	add.s64 	%rd2577, %rd2571, %rd2576;
	add.s64 	%rd2578, %rd2577, 4368137639120453308;
	add.s64 	%rd2579, %rd2578, %rd2442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1878,%dummy}, %rd2553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1879}, %rd2553;
	}
	shf.r.wrap.b32 	%r1880, %r1879, %r1878, 28;
	shf.r.wrap.b32 	%r1881, %r1878, %r1879, 28;
	mov.b64 	%rd2580, {%r1881, %r1880};
	shf.l.wrap.b32 	%r1882, %r1878, %r1879, 30;
	shf.l.wrap.b32 	%r1883, %r1879, %r1878, 30;
	mov.b64 	%rd2581, {%r1883, %r1882};
	xor.b64  	%rd2582, %rd2580, %rd2581;
	shf.l.wrap.b32 	%r1884, %r1878, %r1879, 25;
	shf.l.wrap.b32 	%r1885, %r1879, %r1878, 25;
	mov.b64 	%rd2583, {%r1885, %r1884};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	and.b64  	%rd2585, %rd2553, %rd2516;
	or.b64  	%rd2586, %rd2553, %rd2516;
	and.b64  	%rd2587, %rd2586, %rd2479;
	or.b64  	%rd2588, %rd2587, %rd2585;
	add.s64 	%rd2589, %rd2588, %rd2584;
	add.s64 	%rd2590, %rd2589, %rd2578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1886,%dummy}, %rd2529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1887}, %rd2529;
	}
	shf.r.wrap.b32 	%r1888, %r1887, %r1886, 19;
	shf.r.wrap.b32 	%r1889, %r1886, %r1887, 19;
	mov.b64 	%rd2591, {%r1889, %r1888};
	shf.l.wrap.b32 	%r1890, %r1886, %r1887, 3;
	shf.l.wrap.b32 	%r1891, %r1887, %r1886, 3;
	mov.b64 	%rd2592, {%r1891, %r1890};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	shr.u64 	%rd2594, %rd2529, 6;
	xor.b64  	%rd2595, %rd2593, %rd2594;
	shf.r.wrap.b32 	%r1892, %r1549, %r1548, 1;
	shf.r.wrap.b32 	%r1893, %r1548, %r1549, 1;
	mov.b64 	%rd2596, {%r1893, %r1892};
	shf.r.wrap.b32 	%r1894, %r1549, %r1548, 8;
	shf.r.wrap.b32 	%r1895, %r1548, %r1549, 8;
	mov.b64 	%rd2597, {%r1895, %r1894};
	xor.b64  	%rd2598, %rd2596, %rd2597;
	shr.u64 	%rd2599, %rd2048, 7;
	xor.b64  	%rd2600, %rd2598, %rd2599;
	add.s64 	%rd2601, %rd2595, %rd2011;
	add.s64 	%rd2602, %rd2601, %rd2344;
	add.s64 	%rd2603, %rd2602, %rd2600;
	add.s64 	%rd2604, %rd2603, %rd2468;
	xor.b64  	%rd2605, %rd2542, %rd2505;
	and.b64  	%rd2606, %rd2579, %rd2605;
	xor.b64  	%rd2607, %rd2606, %rd2505;
	add.s64 	%rd2608, %rd2604, %rd2607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1896,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1897}, %rd2579;
	}
	shf.r.wrap.b32 	%r1898, %r1897, %r1896, 14;
	shf.r.wrap.b32 	%r1899, %r1896, %r1897, 14;
	mov.b64 	%rd2609, {%r1899, %r1898};
	shf.r.wrap.b32 	%r1900, %r1897, %r1896, 18;
	shf.r.wrap.b32 	%r1901, %r1896, %r1897, 18;
	mov.b64 	%rd2610, {%r1901, %r1900};
	xor.b64  	%rd2611, %rd2609, %rd2610;
	shf.l.wrap.b32 	%r1902, %r1896, %r1897, 23;
	shf.l.wrap.b32 	%r1903, %r1897, %r1896, 23;
	mov.b64 	%rd2612, {%r1903, %r1902};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	add.s64 	%rd2614, %rd2608, %rd2613;
	add.s64 	%rd2615, %rd2614, 4836135668995329356;
	add.s64 	%rd2616, %rd2615, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1904,%dummy}, %rd2590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1905}, %rd2590;
	}
	shf.r.wrap.b32 	%r1906, %r1905, %r1904, 28;
	shf.r.wrap.b32 	%r1907, %r1904, %r1905, 28;
	mov.b64 	%rd2617, {%r1907, %r1906};
	shf.l.wrap.b32 	%r1908, %r1904, %r1905, 30;
	shf.l.wrap.b32 	%r1909, %r1905, %r1904, 30;
	mov.b64 	%rd2618, {%r1909, %r1908};
	xor.b64  	%rd2619, %rd2617, %rd2618;
	shf.l.wrap.b32 	%r1910, %r1904, %r1905, 25;
	shf.l.wrap.b32 	%r1911, %r1905, %r1904, 25;
	mov.b64 	%rd2620, {%r1911, %r1910};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	and.b64  	%rd2622, %rd2590, %rd2553;
	or.b64  	%rd2623, %rd2590, %rd2553;
	and.b64  	%rd2624, %rd2623, %rd2516;
	or.b64  	%rd2625, %rd2624, %rd2622;
	add.s64 	%rd2626, %rd2625, %rd2621;
	add.s64 	%rd2627, %rd2626, %rd2615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1912,%dummy}, %rd2566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1913}, %rd2566;
	}
	shf.r.wrap.b32 	%r1914, %r1913, %r1912, 19;
	shf.r.wrap.b32 	%r1915, %r1912, %r1913, 19;
	mov.b64 	%rd2628, {%r1915, %r1914};
	shf.l.wrap.b32 	%r1916, %r1912, %r1913, 3;
	shf.l.wrap.b32 	%r1917, %r1913, %r1912, 3;
	mov.b64 	%rd2629, {%r1917, %r1916};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	shr.u64 	%rd2631, %rd2566, 6;
	xor.b64  	%rd2632, %rd2630, %rd2631;
	shf.r.wrap.b32 	%r1918, %r1575, %r1574, 1;
	shf.r.wrap.b32 	%r1919, %r1574, %r1575, 1;
	mov.b64 	%rd2633, {%r1919, %r1918};
	shf.r.wrap.b32 	%r1920, %r1575, %r1574, 8;
	shf.r.wrap.b32 	%r1921, %r1574, %r1575, 8;
	mov.b64 	%rd2634, {%r1921, %r1920};
	xor.b64  	%rd2635, %rd2633, %rd2634;
	shr.u64 	%rd2636, %rd2085, 7;
	xor.b64  	%rd2637, %rd2635, %rd2636;
	add.s64 	%rd2638, %rd2632, %rd2048;
	add.s64 	%rd2639, %rd2638, %rd2381;
	add.s64 	%rd2640, %rd2639, %rd2637;
	add.s64 	%rd2641, %rd2640, %rd2505;
	xor.b64  	%rd2642, %rd2579, %rd2542;
	and.b64  	%rd2643, %rd2616, %rd2642;
	xor.b64  	%rd2644, %rd2643, %rd2542;
	add.s64 	%rd2645, %rd2641, %rd2644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1922,%dummy}, %rd2616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1923}, %rd2616;
	}
	shf.r.wrap.b32 	%r1924, %r1923, %r1922, 14;
	shf.r.wrap.b32 	%r1925, %r1922, %r1923, 14;
	mov.b64 	%rd2646, {%r1925, %r1924};
	shf.r.wrap.b32 	%r1926, %r1923, %r1922, 18;
	shf.r.wrap.b32 	%r1927, %r1922, %r1923, 18;
	mov.b64 	%rd2647, {%r1927, %r1926};
	xor.b64  	%rd2648, %rd2646, %rd2647;
	shf.l.wrap.b32 	%r1928, %r1922, %r1923, 23;
	shf.l.wrap.b32 	%r1929, %r1923, %r1922, 23;
	mov.b64 	%rd2649, {%r1929, %r1928};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	add.s64 	%rd2651, %rd2645, %rd2650;
	add.s64 	%rd2652, %rd2651, 5532061633213252278;
	add.s64 	%rd2653, %rd2652, %rd2516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd2627;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 28;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 28;
	mov.b64 	%rd2654, {%r1933, %r1932};
	shf.l.wrap.b32 	%r1934, %r1930, %r1931, 30;
	shf.l.wrap.b32 	%r1935, %r1931, %r1930, 30;
	mov.b64 	%rd2655, {%r1935, %r1934};
	xor.b64  	%rd2656, %rd2654, %rd2655;
	shf.l.wrap.b32 	%r1936, %r1930, %r1931, 25;
	shf.l.wrap.b32 	%r1937, %r1931, %r1930, 25;
	mov.b64 	%rd2657, {%r1937, %r1936};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	and.b64  	%rd2659, %rd2627, %rd2590;
	or.b64  	%rd2660, %rd2627, %rd2590;
	and.b64  	%rd2661, %rd2660, %rd2553;
	or.b64  	%rd2662, %rd2661, %rd2659;
	add.s64 	%rd2663, %rd2662, %rd2658;
	add.s64 	%rd2664, %rd2663, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1938,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1939}, %rd2603;
	}
	shf.r.wrap.b32 	%r1940, %r1939, %r1938, 19;
	shf.r.wrap.b32 	%r1941, %r1938, %r1939, 19;
	mov.b64 	%rd2665, {%r1941, %r1940};
	shf.l.wrap.b32 	%r1942, %r1938, %r1939, 3;
	shf.l.wrap.b32 	%r1943, %r1939, %r1938, 3;
	mov.b64 	%rd2666, {%r1943, %r1942};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	shr.u64 	%rd2668, %rd2603, 6;
	xor.b64  	%rd2669, %rd2667, %rd2668;
	shf.r.wrap.b32 	%r1944, %r1601, %r1600, 1;
	shf.r.wrap.b32 	%r1945, %r1600, %r1601, 1;
	mov.b64 	%rd2670, {%r1945, %r1944};
	shf.r.wrap.b32 	%r1946, %r1601, %r1600, 8;
	shf.r.wrap.b32 	%r1947, %r1600, %r1601, 8;
	mov.b64 	%rd2671, {%r1947, %r1946};
	xor.b64  	%rd2672, %rd2670, %rd2671;
	shr.u64 	%rd2673, %rd2122, 7;
	xor.b64  	%rd2674, %rd2672, %rd2673;
	add.s64 	%rd2675, %rd2669, %rd2085;
	add.s64 	%rd2676, %rd2675, %rd2418;
	add.s64 	%rd2677, %rd2676, %rd2674;
	add.s64 	%rd2678, %rd2677, %rd2542;
	xor.b64  	%rd2679, %rd2616, %rd2579;
	and.b64  	%rd2680, %rd2653, %rd2679;
	xor.b64  	%rd2681, %rd2680, %rd2579;
	add.s64 	%rd2682, %rd2678, %rd2681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd2653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd2653;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 14;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 14;
	mov.b64 	%rd2683, {%r1951, %r1950};
	shf.r.wrap.b32 	%r1952, %r1949, %r1948, 18;
	shf.r.wrap.b32 	%r1953, %r1948, %r1949, 18;
	mov.b64 	%rd2684, {%r1953, %r1952};
	xor.b64  	%rd2685, %rd2683, %rd2684;
	shf.l.wrap.b32 	%r1954, %r1948, %r1949, 23;
	shf.l.wrap.b32 	%r1955, %r1949, %r1948, 23;
	mov.b64 	%rd2686, {%r1955, %r1954};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	add.s64 	%rd2688, %rd2682, %rd2687;
	add.s64 	%rd2689, %rd2688, 6448918945643986474;
	add.s64 	%rd2690, %rd2689, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1956,%dummy}, %rd2664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1957}, %rd2664;
	}
	shf.r.wrap.b32 	%r1958, %r1957, %r1956, 28;
	shf.r.wrap.b32 	%r1959, %r1956, %r1957, 28;
	mov.b64 	%rd2691, {%r1959, %r1958};
	shf.l.wrap.b32 	%r1960, %r1956, %r1957, 30;
	shf.l.wrap.b32 	%r1961, %r1957, %r1956, 30;
	mov.b64 	%rd2692, {%r1961, %r1960};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	shf.l.wrap.b32 	%r1962, %r1956, %r1957, 25;
	shf.l.wrap.b32 	%r1963, %r1957, %r1956, 25;
	mov.b64 	%rd2694, {%r1963, %r1962};
	xor.b64  	%rd2695, %rd2693, %rd2694;
	and.b64  	%rd2696, %rd2664, %rd2627;
	or.b64  	%rd2697, %rd2664, %rd2627;
	and.b64  	%rd2698, %rd2697, %rd2590;
	or.b64  	%rd2699, %rd2698, %rd2696;
	add.s64 	%rd2700, %rd2699, %rd2695;
	add.s64 	%rd2701, %rd2700, %rd2689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1964,%dummy}, %rd2640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd2640;
	}
	shf.r.wrap.b32 	%r1966, %r1965, %r1964, 19;
	shf.r.wrap.b32 	%r1967, %r1964, %r1965, 19;
	mov.b64 	%rd2702, {%r1967, %r1966};
	shf.l.wrap.b32 	%r1968, %r1964, %r1965, 3;
	shf.l.wrap.b32 	%r1969, %r1965, %r1964, 3;
	mov.b64 	%rd2703, {%r1969, %r1968};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	shr.u64 	%rd2705, %rd2640, 6;
	xor.b64  	%rd2706, %rd2704, %rd2705;
	shf.r.wrap.b32 	%r1970, %r1627, %r1626, 1;
	shf.r.wrap.b32 	%r1971, %r1626, %r1627, 1;
	mov.b64 	%rd2707, {%r1971, %r1970};
	shf.r.wrap.b32 	%r1972, %r1627, %r1626, 8;
	shf.r.wrap.b32 	%r1973, %r1626, %r1627, 8;
	mov.b64 	%rd2708, {%r1973, %r1972};
	xor.b64  	%rd2709, %rd2707, %rd2708;
	shr.u64 	%rd2710, %rd2159, 7;
	xor.b64  	%rd2711, %rd2709, %rd2710;
	add.s64 	%rd2712, %rd2706, %rd2122;
	add.s64 	%rd2713, %rd2712, %rd2455;
	add.s64 	%rd2714, %rd2713, %rd2711;
	add.s64 	%rd2715, %rd2714, %rd2579;
	xor.b64  	%rd2716, %rd2653, %rd2616;
	and.b64  	%rd2717, %rd2690, %rd2716;
	xor.b64  	%rd2718, %rd2717, %rd2616;
	add.s64 	%rd2719, %rd2715, %rd2718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1974,%dummy}, %rd2690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1975}, %rd2690;
	}
	shf.r.wrap.b32 	%r1976, %r1975, %r1974, 14;
	shf.r.wrap.b32 	%r1977, %r1974, %r1975, 14;
	mov.b64 	%rd2720, {%r1977, %r1976};
	shf.r.wrap.b32 	%r1978, %r1975, %r1974, 18;
	shf.r.wrap.b32 	%r1979, %r1974, %r1975, 18;
	mov.b64 	%rd2721, {%r1979, %r1978};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	shf.l.wrap.b32 	%r1980, %r1974, %r1975, 23;
	shf.l.wrap.b32 	%r1981, %r1975, %r1974, 23;
	mov.b64 	%rd2723, {%r1981, %r1980};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	add.s64 	%rd2725, %rd2719, %rd2724;
	add.s64 	%rd2726, %rd2725, 6902733635092675308;
	add.s64 	%rd2727, %rd2726, %rd2590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1982,%dummy}, %rd2701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1983}, %rd2701;
	}
	shf.r.wrap.b32 	%r1984, %r1983, %r1982, 28;
	shf.r.wrap.b32 	%r1985, %r1982, %r1983, 28;
	mov.b64 	%rd2728, {%r1985, %r1984};
	shf.l.wrap.b32 	%r1986, %r1982, %r1983, 30;
	shf.l.wrap.b32 	%r1987, %r1983, %r1982, 30;
	mov.b64 	%rd2729, {%r1987, %r1986};
	xor.b64  	%rd2730, %rd2728, %rd2729;
	shf.l.wrap.b32 	%r1988, %r1982, %r1983, 25;
	shf.l.wrap.b32 	%r1989, %r1983, %r1982, 25;
	mov.b64 	%rd2731, {%r1989, %r1988};
	xor.b64  	%rd2732, %rd2730, %rd2731;
	and.b64  	%rd2733, %rd2701, %rd2664;
	or.b64  	%rd2734, %rd2701, %rd2664;
	and.b64  	%rd2735, %rd2734, %rd2627;
	or.b64  	%rd2736, %rd2735, %rd2733;
	add.s64 	%rd2737, %rd2736, %rd2732;
	add.s64 	%rd2738, %rd2737, %rd2726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1990,%dummy}, %rd2677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1991}, %rd2677;
	}
	shf.r.wrap.b32 	%r1992, %r1991, %r1990, 19;
	shf.r.wrap.b32 	%r1993, %r1990, %r1991, 19;
	mov.b64 	%rd2739, {%r1993, %r1992};
	shf.l.wrap.b32 	%r1994, %r1990, %r1991, 3;
	shf.l.wrap.b32 	%r1995, %r1991, %r1990, 3;
	mov.b64 	%rd2740, {%r1995, %r1994};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	shr.u64 	%rd2742, %rd2677, 6;
	xor.b64  	%rd2743, %rd2741, %rd2742;
	shf.r.wrap.b32 	%r1996, %r1653, %r1652, 1;
	shf.r.wrap.b32 	%r1997, %r1652, %r1653, 1;
	mov.b64 	%rd2744, {%r1997, %r1996};
	shf.r.wrap.b32 	%r1998, %r1653, %r1652, 8;
	shf.r.wrap.b32 	%r1999, %r1652, %r1653, 8;
	mov.b64 	%rd2745, {%r1999, %r1998};
	xor.b64  	%rd2746, %rd2744, %rd2745;
	shr.u64 	%rd2747, %rd2196, 7;
	xor.b64  	%rd2748, %rd2746, %rd2747;
	add.s64 	%rd2749, %rd2743, %rd2159;
	add.s64 	%rd2750, %rd2749, %rd2492;
	add.s64 	%rd2751, %rd2750, %rd2748;
	add.s64 	%rd2752, %rd2751, %rd2616;
	xor.b64  	%rd2753, %rd2690, %rd2653;
	and.b64  	%rd2754, %rd2727, %rd2753;
	xor.b64  	%rd2755, %rd2754, %rd2653;
	add.s64 	%rd2756, %rd2752, %rd2755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd2727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd2727;
	}
	shf.r.wrap.b32 	%r2002, %r2001, %r2000, 14;
	shf.r.wrap.b32 	%r2003, %r2000, %r2001, 14;
	mov.b64 	%rd2757, {%r2003, %r2002};
	shf.r.wrap.b32 	%r2004, %r2001, %r2000, 18;
	shf.r.wrap.b32 	%r2005, %r2000, %r2001, 18;
	mov.b64 	%rd2758, {%r2005, %r2004};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	shf.l.wrap.b32 	%r2006, %r2000, %r2001, 23;
	shf.l.wrap.b32 	%r2007, %r2001, %r2000, 23;
	mov.b64 	%rd2760, {%r2007, %r2006};
	xor.b64  	%rd2761, %rd2759, %rd2760;
	add.s64 	%rd2762, %rd2756, %rd2761;
	add.s64 	%rd2763, %rd2762, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2008,%dummy}, %rd2738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2009}, %rd2738;
	}
	shf.r.wrap.b32 	%r2010, %r2009, %r2008, 28;
	shf.r.wrap.b32 	%r2011, %r2008, %r2009, 28;
	mov.b64 	%rd2764, {%r2011, %r2010};
	shf.l.wrap.b32 	%r2012, %r2008, %r2009, 30;
	shf.l.wrap.b32 	%r2013, %r2009, %r2008, 30;
	mov.b64 	%rd2765, {%r2013, %r2012};
	xor.b64  	%rd2766, %rd2764, %rd2765;
	shf.l.wrap.b32 	%r2014, %r2008, %r2009, 25;
	shf.l.wrap.b32 	%r2015, %r2009, %r2008, 25;
	mov.b64 	%rd2767, {%r2015, %r2014};
	xor.b64  	%rd2768, %rd2766, %rd2767;
	and.b64  	%rd2769, %rd2738, %rd2701;
	or.b64  	%rd2770, %rd2738, %rd2701;
	and.b64  	%rd2771, %rd2770, %rd2664;
	or.b64  	%rd2772, %rd2771, %rd2769;
	add.s64 	%rd2773, %rd2768, %rd2772;
	add.s64 	%rd2774, %rd2773, %rd2763;
	add.s64 	%rd2775, %rd2774, 7640891576956012808;
	add.s64 	%rd2776, %rd2738, -4942790177534073029;
	add.s64 	%rd2777, %rd2701, 4354685564936845355;
	add.s64 	%rd2778, %rd2664, -6534734903238641935;
	add.s64 	%rd2779, %rd2627, %rd2763;
	add.s64 	%rd2780, %rd2779, 5840696475078001361;
	add.s64 	%rd2781, %rd2727, -7276294671716946913;
	add.s64 	%rd2782, %rd2690, 2270897969802886507;
	add.s64 	%rd2783, %rd2653, 6620516959819538809;
	mul.wide.u32 	%rd2784, %r6, 72;
	add.s64 	%rd2785, %rd4, %rd2784;
	st.global.u64 	[%rd2785+8], %rd2775;
	st.global.u64 	[%rd2785+16], %rd2776;
	st.global.u64 	[%rd2785+24], %rd2777;
	st.global.u64 	[%rd2785+32], %rd2778;
	st.global.u64 	[%rd2785+40], %rd2780;
	st.global.u64 	[%rd2785+48], %rd2781;
	st.global.u64 	[%rd2785+56], %rd2782;
	st.global.u64 	[%rd2785+64], %rd2783;
	st.global.u32 	[%rd2785], %r10;
	ret;

}
	// .globl	HashLoop13
.entry HashLoop13(
	.param .u64 .ptr .global .align 8 HashLoop13_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<1140>;
	.reg .b64 	%rd<1641>;


	ld.param.u64 	%rd106, [HashLoop13_param_0];
	mov.b32 	%r7, %envreg3;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	add.s32 	%r11, %r10, %r7;
	mad.lo.s32 	%r12, %r9, %r8, %r11;
	mul.wide.u32 	%rd107, %r12, 72;
	add.s64 	%rd1, %rd106, %rd107;
	ld.global.u32 	%r1, [%rd1];
	mov.u64 	%rd108, 0;
	ld.global.u64 	%rd1615, [%rd1+8];
	ld.global.u64 	%rd1614, [%rd1+16];
	ld.global.u64 	%rd1613, [%rd1+24];
	ld.global.u64 	%rd1612, [%rd1+32];
	ld.global.u64 	%rd1611, [%rd1+40];
	ld.global.u64 	%rd1610, [%rd1+48];
	ld.global.u64 	%rd1609, [%rd1+56];
	ld.global.u64 	%rd1608, [%rd1+64];
	mov.u64 	%rd109, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13,%dummy}, %rd109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14}, %rd109;
	}
	shf.r.wrap.b32 	%r15, %r14, %r13, 18;
	shf.r.wrap.b32 	%r16, %r13, %r14, 18;
	mov.b64 	%rd110, {%r16, %r15};
	shf.r.wrap.b32 	%r17, %r14, %r13, 14;
	shf.r.wrap.b32 	%r18, %r13, %r14, 14;
	mov.b64 	%rd111, {%r18, %r17};
	xor.b64  	%rd112, %rd111, %rd110;
	shf.l.wrap.b32 	%r19, %r13, %r14, 23;
	shf.l.wrap.b32 	%r20, %r14, %r13, 23;
	mov.b64 	%rd113, {%r20, %r19};
	xor.b64  	%rd114, %rd112, %rd113;
	add.s64 	%rd10, %rd114, -7031530027109396581;
	mov.u64 	%rd115, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r21}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r22,%dummy}, %rd115;
	}
	shf.l.wrap.b32 	%r23, %r22, %r21, 30;
	shf.l.wrap.b32 	%r24, %r21, %r22, 30;
	mov.b64 	%rd116, {%r24, %r23};
	shf.r.wrap.b32 	%r25, %r21, %r22, 28;
	shf.r.wrap.b32 	%r26, %r22, %r21, 28;
	mov.b64 	%rd117, {%r26, %r25};
	xor.b64  	%rd118, %rd117, %rd116;
	shf.l.wrap.b32 	%r27, %r22, %r21, 25;
	shf.l.wrap.b32 	%r28, %r21, %r22, 25;
	mov.b64 	%rd119, {%r28, %r27};
	xor.b64  	%rd120, %rd118, %rd119;
	add.s64 	%rd11, %rd120, 6482280703085258342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r30,%dummy}, %rd108;
	}
	shf.l.wrap.b32 	%r31, %r30, %r29, 3;
	shf.l.wrap.b32 	%r32, %r29, %r30, 3;
	mov.b64 	%rd121, {%r32, %r31};
	shf.r.wrap.b32 	%r33, %r29, %r30, 19;
	shf.r.wrap.b32 	%r34, %r30, %r29, 19;
	mov.b64 	%rd122, {%r34, %r33};
	xor.b64  	%rd12, %rd122, %rd121;
	shf.r.wrap.b32 	%r35, %r29, %r30, 8;
	shf.r.wrap.b32 	%r36, %r30, %r29, 8;
	mov.b64 	%rd123, {%r36, %r35};
	shf.r.wrap.b32 	%r37, %r29, %r30, 1;
	shf.r.wrap.b32 	%r38, %r30, %r29, 1;
	mov.b64 	%rd124, {%r38, %r37};
	xor.b64  	%rd13, %rd124, %rd123;
	mov.u64 	%rd125, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r40,%dummy}, %rd125;
	}
	shf.l.wrap.b32 	%r41, %r40, %r39, 3;
	shf.l.wrap.b32 	%r42, %r39, %r40, 3;
	mov.b64 	%rd126, {%r42, %r41};
	shf.r.wrap.b32 	%r43, %r39, %r40, 19;
	shf.r.wrap.b32 	%r44, %r40, %r39, 19;
	mov.b64 	%rd127, {%r44, %r43};
	xor.b64  	%rd128, %rd127, %rd126;
	xor.b64  	%rd14, %rd128, 8;
	shf.r.wrap.b32 	%r45, %r39, %r40, 8;
	shf.r.wrap.b32 	%r46, %r40, %r39, 8;
	mov.b64 	%rd129, {%r46, %r45};
	shf.r.wrap.b32 	%r47, %r39, %r40, 1;
	shf.r.wrap.b32 	%r48, %r40, %r39, 1;
	mov.b64 	%rd130, {%r48, %r47};
	xor.b64  	%rd131, %rd130, %rd129;
	xor.b64  	%rd15, %rd131, 4;
	mov.u32 	%r1138, 0;

$L__BB5_1:
	add.s32 	%r50, %r1138, %r1;
	shf.l.wrap.b32 	%r51, %r50, %r50, 16;
	shl.b32 	%r52, %r51, 8;
	and.b32  	%r53, %r52, -16711936;
	shr.u32 	%r54, %r51, 8;
	and.b32  	%r55, %r54, 16711935;
	or.b32  	%r56, %r53, %r55;
	cvt.u64.u32 	%rd133, %r56;
	shl.b64 	%rd134, %rd133, 32;
	mov.u32 	%r1139, 32;
	shr.u64 	%rd135, %rd1615, 32;
	or.b64  	%rd136, %rd135, %rd134;
	shr.u64 	%rd137, %rd1614, 32;
	shl.b64 	%rd138, %rd1615, 32;
	or.b64  	%rd139, %rd137, %rd138;
	shr.u64 	%rd140, %rd1613, 32;
	shl.b64 	%rd141, %rd1614, 32;
	or.b64  	%rd142, %rd140, %rd141;
	shr.u64 	%rd143, %rd1612, 32;
	shl.b64 	%rd144, %rd1613, 32;
	or.b64  	%rd145, %rd143, %rd144;
	shr.u64 	%rd146, %rd1611, 32;
	shl.b64 	%rd147, %rd1612, 32;
	or.b64  	%rd148, %rd146, %rd147;
	shr.u64 	%rd149, %rd1610, 32;
	shl.b64 	%rd150, %rd1611, 32;
	or.b64  	%rd151, %rd149, %rd150;
	shr.u64 	%rd152, %rd1609, 32;
	shl.b64 	%rd153, %rd1610, 32;
	or.b64  	%rd154, %rd152, %rd153;
	shr.u64 	%rd155, %rd1608, 32;
	shl.b64 	%rd156, %rd1609, 32;
	or.b64  	%rd157, %rd155, %rd156;
	shl.b64 	%rd158, %rd1608, 32;
	or.b64  	%rd159, %rd158, 2147483648;
	add.s64 	%rd160, %rd10, %rd136;
	add.s64 	%rd161, %rd160, -4263291710961585108;
	add.s64 	%rd162, %rd11, %rd160;
	and.b64  	%rd163, %rd161, -3887949035690463538;
	xor.b64  	%rd164, %rd163, -7276294671716946913;
	add.s64 	%rd165, %rd139, %rd164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd161;
	}
	shf.r.wrap.b32 	%r59, %r58, %r57, 14;
	shf.r.wrap.b32 	%r60, %r57, %r58, 14;
	mov.b64 	%rd166, {%r60, %r59};
	shf.r.wrap.b32 	%r61, %r58, %r57, 18;
	shf.r.wrap.b32 	%r62, %r57, %r58, 18;
	mov.b64 	%rd167, {%r62, %r61};
	xor.b64  	%rd168, %rd166, %rd167;
	shf.l.wrap.b32 	%r63, %r57, %r58, 23;
	shf.l.wrap.b32 	%r64, %r58, %r57, 23;
	mov.b64 	%rd169, {%r64, %r63};
	xor.b64  	%rd170, %rd168, %rd169;
	add.s64 	%rd171, %rd165, %rd170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd162;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 28;
	shf.r.wrap.b32 	%r68, %r65, %r66, 28;
	mov.b64 	%rd172, {%r68, %r67};
	shf.l.wrap.b32 	%r69, %r65, %r66, 30;
	shf.l.wrap.b32 	%r70, %r66, %r65, 30;
	mov.b64 	%rd173, {%r70, %r69};
	xor.b64  	%rd174, %rd172, %rd173;
	shf.l.wrap.b32 	%r71, %r65, %r66, 25;
	shf.l.wrap.b32 	%r72, %r66, %r65, 25;
	mov.b64 	%rd175, {%r72, %r71};
	xor.b64  	%rd176, %rd174, %rd175;
	and.b64  	%rd177, %rd162, -3355664534840381901;
	or.b64  	%rd178, %rd177, 3026882967131160840;
	add.s64 	%rd179, %rd178, %rd176;
	add.s64 	%rd180, %rd179, %rd171;
	add.s64 	%rd181, %rd171, -3663095898801038493;
	add.s64 	%rd182, %rd180, -8017781463737883848;
	xor.b64  	%rd183, %rd161, 5840696475078001361;
	and.b64  	%rd184, %rd181, %rd183;
	xor.b64  	%rd185, %rd184, 5840696475078001361;
	add.s64 	%rd186, %rd142, %rd185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r73,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r74}, %rd181;
	}
	shf.r.wrap.b32 	%r75, %r74, %r73, 14;
	shf.r.wrap.b32 	%r76, %r73, %r74, 14;
	mov.b64 	%rd187, {%r76, %r75};
	shf.r.wrap.b32 	%r77, %r74, %r73, 18;
	shf.r.wrap.b32 	%r78, %r73, %r74, 18;
	mov.b64 	%rd188, {%r78, %r77};
	xor.b64  	%rd189, %rd187, %rd188;
	shf.l.wrap.b32 	%r79, %r73, %r74, 23;
	shf.l.wrap.b32 	%r80, %r74, %r73, 23;
	mov.b64 	%rd190, {%r80, %r79};
	xor.b64  	%rd191, %rd189, %rd190;
	add.s64 	%rd192, %rd186, %rd191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd182;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 28;
	shf.r.wrap.b32 	%r84, %r81, %r82, 28;
	mov.b64 	%rd193, {%r84, %r83};
	shf.l.wrap.b32 	%r85, %r81, %r82, 30;
	shf.l.wrap.b32 	%r86, %r82, %r81, 30;
	mov.b64 	%rd194, {%r86, %r85};
	xor.b64  	%rd195, %rd193, %rd194;
	shf.l.wrap.b32 	%r87, %r81, %r82, 25;
	shf.l.wrap.b32 	%r88, %r82, %r81, 25;
	mov.b64 	%rd196, {%r88, %r87};
	xor.b64  	%rd197, %rd195, %rd196;
	and.b64  	%rd198, %rd182, %rd162;
	or.b64  	%rd199, %rd182, %rd162;
	and.b64  	%rd200, %rd199, 7640891576956012808;
	or.b64  	%rd201, %rd200, %rd198;
	add.s64 	%rd202, %rd201, %rd197;
	add.s64 	%rd203, %rd202, %rd192;
	add.s64 	%rd204, %rd192, 877659737583668873;
	add.s64 	%rd205, %rd203, 5820449915117741902;
	xor.b64  	%rd206, %rd181, %rd161;
	and.b64  	%rd207, %rd204, %rd206;
	xor.b64  	%rd208, %rd207, %rd161;
	add.s64 	%rd209, %rd145, %rd208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r89,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd204;
	}
	shf.r.wrap.b32 	%r91, %r90, %r89, 14;
	shf.r.wrap.b32 	%r92, %r89, %r90, 14;
	mov.b64 	%rd210, {%r92, %r91};
	shf.r.wrap.b32 	%r93, %r90, %r89, 18;
	shf.r.wrap.b32 	%r94, %r89, %r90, 18;
	mov.b64 	%rd211, {%r94, %r93};
	xor.b64  	%rd212, %rd210, %rd211;
	shf.l.wrap.b32 	%r95, %r89, %r90, 23;
	shf.l.wrap.b32 	%r96, %r90, %r89, 23;
	mov.b64 	%rd213, {%r96, %r95};
	xor.b64  	%rd214, %rd212, %rd213;
	add.s64 	%rd215, %rd209, %rd214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd205;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 28;
	shf.r.wrap.b32 	%r100, %r97, %r98, 28;
	mov.b64 	%rd216, {%r100, %r99};
	shf.l.wrap.b32 	%r101, %r97, %r98, 30;
	shf.l.wrap.b32 	%r102, %r98, %r97, 30;
	mov.b64 	%rd217, {%r102, %r101};
	xor.b64  	%rd218, %rd216, %rd217;
	shf.l.wrap.b32 	%r103, %r97, %r98, 25;
	shf.l.wrap.b32 	%r104, %r98, %r97, 25;
	mov.b64 	%rd219, {%r104, %r103};
	xor.b64  	%rd220, %rd218, %rd219;
	and.b64  	%rd221, %rd205, %rd182;
	or.b64  	%rd222, %rd205, %rd182;
	and.b64  	%rd223, %rd222, %rd162;
	or.b64  	%rd224, %rd223, %rd221;
	add.s64 	%rd225, %rd224, %rd220;
	add.s64 	%rd226, %rd225, %rd215;
	add.s64 	%rd227, %rd215, -6571292209873868907;
	add.s64 	%rd228, %rd226, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd227;
	}
	shf.r.wrap.b32 	%r107, %r106, %r105, 14;
	shf.r.wrap.b32 	%r108, %r105, %r106, 14;
	mov.b64 	%rd229, {%r108, %r107};
	shf.r.wrap.b32 	%r109, %r106, %r105, 18;
	shf.r.wrap.b32 	%r110, %r105, %r106, 18;
	mov.b64 	%rd230, {%r110, %r109};
	xor.b64  	%rd231, %rd229, %rd230;
	shf.l.wrap.b32 	%r111, %r105, %r106, 23;
	shf.l.wrap.b32 	%r112, %r106, %r105, 23;
	mov.b64 	%rd232, {%r112, %r111};
	xor.b64  	%rd233, %rd231, %rd232;
	xor.b64  	%rd234, %rd204, %rd181;
	and.b64  	%rd235, %rd227, %rd234;
	xor.b64  	%rd236, %rd235, %rd181;
	add.s64 	%rd237, %rd160, %rd148;
	add.s64 	%rd238, %rd237, %rd236;
	add.s64 	%rd239, %rd238, %rd233;
	add.s64 	%rd240, %rd239, -131588302623135388;
	add.s64 	%rd241, %rd240, %rd162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd228;
	}
	shf.r.wrap.b32 	%r115, %r114, %r113, 28;
	shf.r.wrap.b32 	%r116, %r113, %r114, 28;
	mov.b64 	%rd242, {%r116, %r115};
	shf.l.wrap.b32 	%r117, %r113, %r114, 30;
	shf.l.wrap.b32 	%r118, %r114, %r113, 30;
	mov.b64 	%rd243, {%r118, %r117};
	xor.b64  	%rd244, %rd242, %rd243;
	shf.l.wrap.b32 	%r119, %r113, %r114, 25;
	shf.l.wrap.b32 	%r120, %r114, %r113, 25;
	mov.b64 	%rd245, {%r120, %r119};
	xor.b64  	%rd246, %rd244, %rd245;
	and.b64  	%rd247, %rd228, %rd205;
	or.b64  	%rd248, %rd228, %rd205;
	and.b64  	%rd249, %rd248, %rd182;
	or.b64  	%rd250, %rd249, %rd247;
	add.s64 	%rd251, %rd250, %rd246;
	add.s64 	%rd252, %rd251, %rd240;
	add.s64 	%rd253, %rd151, %rd181;
	xor.b64  	%rd254, %rd227, %rd204;
	and.b64  	%rd255, %rd241, %rd254;
	xor.b64  	%rd256, %rd255, %rd204;
	add.s64 	%rd257, %rd253, %rd256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r122}, %rd241;
	}
	shf.r.wrap.b32 	%r123, %r122, %r121, 14;
	shf.r.wrap.b32 	%r124, %r121, %r122, 14;
	mov.b64 	%rd258, {%r124, %r123};
	shf.r.wrap.b32 	%r125, %r122, %r121, 18;
	shf.r.wrap.b32 	%r126, %r121, %r122, 18;
	mov.b64 	%rd259, {%r126, %r125};
	xor.b64  	%rd260, %rd258, %rd259;
	shf.l.wrap.b32 	%r127, %r121, %r122, 23;
	shf.l.wrap.b32 	%r128, %r122, %r121, 23;
	mov.b64 	%rd261, {%r128, %r127};
	xor.b64  	%rd262, %rd260, %rd261;
	add.s64 	%rd263, %rd257, %rd262;
	add.s64 	%rd264, %rd263, 6480981068601479193;
	add.s64 	%rd265, %rd264, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd252;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 28;
	shf.r.wrap.b32 	%r132, %r129, %r130, 28;
	mov.b64 	%rd266, {%r132, %r131};
	shf.l.wrap.b32 	%r133, %r129, %r130, 30;
	shf.l.wrap.b32 	%r134, %r130, %r129, 30;
	mov.b64 	%rd267, {%r134, %r133};
	xor.b64  	%rd268, %rd266, %rd267;
	shf.l.wrap.b32 	%r135, %r129, %r130, 25;
	shf.l.wrap.b32 	%r136, %r130, %r129, 25;
	mov.b64 	%rd269, {%r136, %r135};
	xor.b64  	%rd270, %rd268, %rd269;
	and.b64  	%rd271, %rd252, %rd228;
	or.b64  	%rd272, %rd252, %rd228;
	and.b64  	%rd273, %rd272, %rd205;
	or.b64  	%rd274, %rd273, %rd271;
	add.s64 	%rd275, %rd274, %rd270;
	add.s64 	%rd276, %rd275, %rd264;
	add.s64 	%rd277, %rd154, %rd204;
	xor.b64  	%rd278, %rd241, %rd227;
	and.b64  	%rd279, %rd265, %rd278;
	xor.b64  	%rd280, %rd279, %rd227;
	add.s64 	%rd281, %rd277, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r138}, %rd265;
	}
	shf.r.wrap.b32 	%r139, %r138, %r137, 14;
	shf.r.wrap.b32 	%r140, %r137, %r138, 14;
	mov.b64 	%rd282, {%r140, %r139};
	shf.r.wrap.b32 	%r141, %r138, %r137, 18;
	shf.r.wrap.b32 	%r142, %r137, %r138, 18;
	mov.b64 	%rd283, {%r142, %r141};
	xor.b64  	%rd284, %rd282, %rd283;
	shf.l.wrap.b32 	%r143, %r137, %r138, 23;
	shf.l.wrap.b32 	%r144, %r138, %r137, 23;
	mov.b64 	%rd285, {%r144, %r143};
	xor.b64  	%rd286, %rd284, %rd285;
	add.s64 	%rd287, %rd281, %rd286;
	add.s64 	%rd288, %rd287, -7908458776815382629;
	add.s64 	%rd289, %rd288, %rd205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd276;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 28;
	shf.r.wrap.b32 	%r148, %r145, %r146, 28;
	mov.b64 	%rd290, {%r148, %r147};
	shf.l.wrap.b32 	%r149, %r145, %r146, 30;
	shf.l.wrap.b32 	%r150, %r146, %r145, 30;
	mov.b64 	%rd291, {%r150, %r149};
	xor.b64  	%rd292, %rd290, %rd291;
	shf.l.wrap.b32 	%r151, %r145, %r146, 25;
	shf.l.wrap.b32 	%r152, %r146, %r145, 25;
	mov.b64 	%rd293, {%r152, %r151};
	xor.b64  	%rd294, %rd292, %rd293;
	and.b64  	%rd295, %rd276, %rd252;
	or.b64  	%rd296, %rd276, %rd252;
	and.b64  	%rd297, %rd296, %rd228;
	or.b64  	%rd298, %rd297, %rd295;
	add.s64 	%rd299, %rd298, %rd294;
	add.s64 	%rd300, %rd299, %rd288;
	add.s64 	%rd301, %rd157, %rd227;
	xor.b64  	%rd302, %rd265, %rd241;
	and.b64  	%rd303, %rd289, %rd302;
	xor.b64  	%rd304, %rd303, %rd241;
	add.s64 	%rd305, %rd301, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd289;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 14;
	shf.r.wrap.b32 	%r156, %r153, %r154, 14;
	mov.b64 	%rd306, {%r156, %r155};
	shf.r.wrap.b32 	%r157, %r154, %r153, 18;
	shf.r.wrap.b32 	%r158, %r153, %r154, 18;
	mov.b64 	%rd307, {%r158, %r157};
	xor.b64  	%rd308, %rd306, %rd307;
	shf.l.wrap.b32 	%r159, %r153, %r154, 23;
	shf.l.wrap.b32 	%r160, %r154, %r153, 23;
	mov.b64 	%rd309, {%r160, %r159};
	xor.b64  	%rd310, %rd308, %rd309;
	add.s64 	%rd311, %rd305, %rd310;
	add.s64 	%rd312, %rd311, -6116909921290321640;
	add.s64 	%rd313, %rd312, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd300;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 28;
	shf.r.wrap.b32 	%r164, %r161, %r162, 28;
	mov.b64 	%rd314, {%r164, %r163};
	shf.l.wrap.b32 	%r165, %r161, %r162, 30;
	shf.l.wrap.b32 	%r166, %r162, %r161, 30;
	mov.b64 	%rd315, {%r166, %r165};
	xor.b64  	%rd316, %rd314, %rd315;
	shf.l.wrap.b32 	%r167, %r161, %r162, 25;
	shf.l.wrap.b32 	%r168, %r162, %r161, 25;
	mov.b64 	%rd317, {%r168, %r167};
	xor.b64  	%rd318, %rd316, %rd317;
	and.b64  	%rd319, %rd300, %rd276;
	or.b64  	%rd320, %rd300, %rd276;
	and.b64  	%rd321, %rd320, %rd252;
	or.b64  	%rd322, %rd321, %rd319;
	add.s64 	%rd323, %rd322, %rd318;
	add.s64 	%rd324, %rd323, %rd312;
	add.s64 	%rd325, %rd159, %rd241;
	xor.b64  	%rd326, %rd289, %rd265;
	and.b64  	%rd327, %rd313, %rd326;
	xor.b64  	%rd328, %rd327, %rd265;
	add.s64 	%rd329, %rd325, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd313;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 14;
	shf.r.wrap.b32 	%r172, %r169, %r170, 14;
	mov.b64 	%rd330, {%r172, %r171};
	shf.r.wrap.b32 	%r173, %r170, %r169, 18;
	shf.r.wrap.b32 	%r174, %r169, %r170, 18;
	mov.b64 	%rd331, {%r174, %r173};
	xor.b64  	%rd332, %rd330, %rd331;
	shf.l.wrap.b32 	%r175, %r169, %r170, 23;
	shf.l.wrap.b32 	%r176, %r170, %r169, 23;
	mov.b64 	%rd333, {%r176, %r175};
	xor.b64  	%rd334, %rd332, %rd333;
	add.s64 	%rd335, %rd329, %rd334;
	add.s64 	%rd336, %rd335, -2880145864133508542;
	add.s64 	%rd337, %rd336, %rd252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd324;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 28;
	shf.r.wrap.b32 	%r180, %r177, %r178, 28;
	mov.b64 	%rd338, {%r180, %r179};
	shf.l.wrap.b32 	%r181, %r177, %r178, 30;
	shf.l.wrap.b32 	%r182, %r178, %r177, 30;
	mov.b64 	%rd339, {%r182, %r181};
	xor.b64  	%rd340, %rd338, %rd339;
	shf.l.wrap.b32 	%r183, %r177, %r178, 25;
	shf.l.wrap.b32 	%r184, %r178, %r177, 25;
	mov.b64 	%rd341, {%r184, %r183};
	xor.b64  	%rd342, %rd340, %rd341;
	and.b64  	%rd343, %rd324, %rd300;
	or.b64  	%rd344, %rd324, %rd300;
	and.b64  	%rd345, %rd344, %rd276;
	or.b64  	%rd346, %rd345, %rd343;
	add.s64 	%rd347, %rd346, %rd342;
	add.s64 	%rd348, %rd347, %rd336;
	xor.b64  	%rd349, %rd313, %rd289;
	and.b64  	%rd350, %rd337, %rd349;
	xor.b64  	%rd351, %rd350, %rd289;
	add.s64 	%rd352, %rd265, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd337;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 14;
	shf.r.wrap.b32 	%r188, %r185, %r186, 14;
	mov.b64 	%rd353, {%r188, %r187};
	shf.r.wrap.b32 	%r189, %r186, %r185, 18;
	shf.r.wrap.b32 	%r190, %r185, %r186, 18;
	mov.b64 	%rd354, {%r190, %r189};
	xor.b64  	%rd355, %rd353, %rd354;
	shf.l.wrap.b32 	%r191, %r185, %r186, 23;
	shf.l.wrap.b32 	%r192, %r186, %r185, 23;
	mov.b64 	%rd356, {%r192, %r191};
	xor.b64  	%rd357, %rd355, %rd356;
	add.s64 	%rd358, %rd352, %rd357;
	add.s64 	%rd359, %rd358, 1334009975649890238;
	add.s64 	%rd360, %rd359, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd348;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 28;
	shf.r.wrap.b32 	%r196, %r193, %r194, 28;
	mov.b64 	%rd361, {%r196, %r195};
	shf.l.wrap.b32 	%r197, %r193, %r194, 30;
	shf.l.wrap.b32 	%r198, %r194, %r193, 30;
	mov.b64 	%rd362, {%r198, %r197};
	xor.b64  	%rd363, %rd361, %rd362;
	shf.l.wrap.b32 	%r199, %r193, %r194, 25;
	shf.l.wrap.b32 	%r200, %r194, %r193, 25;
	mov.b64 	%rd364, {%r200, %r199};
	xor.b64  	%rd365, %rd363, %rd364;
	and.b64  	%rd366, %rd348, %rd324;
	or.b64  	%rd367, %rd348, %rd324;
	and.b64  	%rd368, %rd367, %rd300;
	or.b64  	%rd369, %rd368, %rd366;
	add.s64 	%rd370, %rd369, %rd365;
	add.s64 	%rd371, %rd370, %rd359;
	xor.b64  	%rd372, %rd337, %rd313;
	and.b64  	%rd373, %rd360, %rd372;
	xor.b64  	%rd374, %rd373, %rd313;
	add.s64 	%rd375, %rd289, %rd374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd360;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 14;
	shf.r.wrap.b32 	%r204, %r201, %r202, 14;
	mov.b64 	%rd376, {%r204, %r203};
	shf.r.wrap.b32 	%r205, %r202, %r201, 18;
	shf.r.wrap.b32 	%r206, %r201, %r202, 18;
	mov.b64 	%rd377, {%r206, %r205};
	xor.b64  	%rd378, %rd376, %rd377;
	shf.l.wrap.b32 	%r207, %r201, %r202, 23;
	shf.l.wrap.b32 	%r208, %r202, %r201, 23;
	mov.b64 	%rd379, {%r208, %r207};
	xor.b64  	%rd380, %rd378, %rd379;
	add.s64 	%rd381, %rd375, %rd380;
	add.s64 	%rd382, %rd381, 2608012711638119052;
	add.s64 	%rd383, %rd382, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd371;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 28;
	shf.r.wrap.b32 	%r212, %r209, %r210, 28;
	mov.b64 	%rd384, {%r212, %r211};
	shf.l.wrap.b32 	%r213, %r209, %r210, 30;
	shf.l.wrap.b32 	%r214, %r210, %r209, 30;
	mov.b64 	%rd385, {%r214, %r213};
	xor.b64  	%rd386, %rd384, %rd385;
	shf.l.wrap.b32 	%r215, %r209, %r210, 25;
	shf.l.wrap.b32 	%r216, %r210, %r209, 25;
	mov.b64 	%rd387, {%r216, %r215};
	xor.b64  	%rd388, %rd386, %rd387;
	and.b64  	%rd389, %rd371, %rd348;
	or.b64  	%rd390, %rd371, %rd348;
	and.b64  	%rd391, %rd390, %rd324;
	or.b64  	%rd392, %rd391, %rd389;
	add.s64 	%rd393, %rd392, %rd388;
	add.s64 	%rd394, %rd393, %rd382;
	xor.b64  	%rd395, %rd360, %rd337;
	and.b64  	%rd396, %rd383, %rd395;
	xor.b64  	%rd397, %rd396, %rd337;
	add.s64 	%rd398, %rd313, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd383;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 14;
	shf.r.wrap.b32 	%r220, %r217, %r218, 14;
	mov.b64 	%rd399, {%r220, %r219};
	shf.r.wrap.b32 	%r221, %r218, %r217, 18;
	shf.r.wrap.b32 	%r222, %r217, %r218, 18;
	mov.b64 	%rd400, {%r222, %r221};
	xor.b64  	%rd401, %rd399, %rd400;
	shf.l.wrap.b32 	%r223, %r217, %r218, 23;
	shf.l.wrap.b32 	%r224, %r218, %r217, 23;
	mov.b64 	%rd402, {%r224, %r223};
	xor.b64  	%rd403, %rd401, %rd402;
	add.s64 	%rd404, %rd398, %rd403;
	add.s64 	%rd405, %rd404, 6128411473006802146;
	add.s64 	%rd406, %rd405, %rd324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd394;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 28;
	shf.r.wrap.b32 	%r228, %r225, %r226, 28;
	mov.b64 	%rd407, {%r228, %r227};
	shf.l.wrap.b32 	%r229, %r225, %r226, 30;
	shf.l.wrap.b32 	%r230, %r226, %r225, 30;
	mov.b64 	%rd408, {%r230, %r229};
	xor.b64  	%rd409, %rd407, %rd408;
	shf.l.wrap.b32 	%r231, %r225, %r226, 25;
	shf.l.wrap.b32 	%r232, %r226, %r225, 25;
	mov.b64 	%rd410, {%r232, %r231};
	xor.b64  	%rd411, %rd409, %rd410;
	and.b64  	%rd412, %rd394, %rd371;
	or.b64  	%rd413, %rd394, %rd371;
	and.b64  	%rd414, %rd413, %rd348;
	or.b64  	%rd415, %rd414, %rd412;
	add.s64 	%rd416, %rd415, %rd411;
	add.s64 	%rd417, %rd416, %rd405;
	xor.b64  	%rd418, %rd383, %rd360;
	and.b64  	%rd419, %rd406, %rd418;
	xor.b64  	%rd420, %rd419, %rd360;
	add.s64 	%rd421, %rd337, %rd420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd406;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 14;
	shf.r.wrap.b32 	%r236, %r233, %r234, 14;
	mov.b64 	%rd422, {%r236, %r235};
	shf.r.wrap.b32 	%r237, %r234, %r233, 18;
	shf.r.wrap.b32 	%r238, %r233, %r234, 18;
	mov.b64 	%rd423, {%r238, %r237};
	xor.b64  	%rd424, %rd422, %rd423;
	shf.l.wrap.b32 	%r239, %r233, %r234, 23;
	shf.l.wrap.b32 	%r240, %r234, %r233, 23;
	mov.b64 	%rd425, {%r240, %r239};
	xor.b64  	%rd426, %rd424, %rd425;
	add.s64 	%rd427, %rd421, %rd426;
	add.s64 	%rd428, %rd427, 8268148722764581231;
	add.s64 	%rd429, %rd428, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd417;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 28;
	shf.r.wrap.b32 	%r244, %r241, %r242, 28;
	mov.b64 	%rd430, {%r244, %r243};
	shf.l.wrap.b32 	%r245, %r241, %r242, 30;
	shf.l.wrap.b32 	%r246, %r242, %r241, 30;
	mov.b64 	%rd431, {%r246, %r245};
	xor.b64  	%rd432, %rd430, %rd431;
	shf.l.wrap.b32 	%r247, %r241, %r242, 25;
	shf.l.wrap.b32 	%r248, %r242, %r241, 25;
	mov.b64 	%rd433, {%r248, %r247};
	xor.b64  	%rd434, %rd432, %rd433;
	and.b64  	%rd435, %rd417, %rd394;
	or.b64  	%rd436, %rd417, %rd394;
	and.b64  	%rd437, %rd436, %rd371;
	or.b64  	%rd438, %rd437, %rd435;
	add.s64 	%rd439, %rd438, %rd434;
	add.s64 	%rd440, %rd439, %rd428;
	xor.b64  	%rd441, %rd406, %rd383;
	and.b64  	%rd442, %rd429, %rd441;
	xor.b64  	%rd443, %rd442, %rd383;
	add.s64 	%rd444, %rd360, %rd443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd429;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 14;
	shf.r.wrap.b32 	%r252, %r249, %r250, 14;
	mov.b64 	%rd445, {%r252, %r251};
	shf.r.wrap.b32 	%r253, %r250, %r249, 18;
	shf.r.wrap.b32 	%r254, %r249, %r250, 18;
	mov.b64 	%rd446, {%r254, %r253};
	xor.b64  	%rd447, %rd445, %rd446;
	shf.l.wrap.b32 	%r255, %r249, %r250, 23;
	shf.l.wrap.b32 	%r256, %r250, %r249, 23;
	mov.b64 	%rd448, {%r256, %r255};
	xor.b64  	%rd449, %rd447, %rd448;
	add.s64 	%rd450, %rd444, %rd449;
	add.s64 	%rd451, %rd450, -9160688886553864527;
	add.s64 	%rd452, %rd451, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd440;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 28;
	shf.r.wrap.b32 	%r260, %r257, %r258, 28;
	mov.b64 	%rd453, {%r260, %r259};
	shf.l.wrap.b32 	%r261, %r257, %r258, 30;
	shf.l.wrap.b32 	%r262, %r258, %r257, 30;
	mov.b64 	%rd454, {%r262, %r261};
	xor.b64  	%rd455, %rd453, %rd454;
	shf.l.wrap.b32 	%r263, %r257, %r258, 25;
	shf.l.wrap.b32 	%r264, %r258, %r257, 25;
	mov.b64 	%rd456, {%r264, %r263};
	xor.b64  	%rd457, %rd455, %rd456;
	and.b64  	%rd458, %rd440, %rd417;
	or.b64  	%rd459, %rd440, %rd417;
	and.b64  	%rd460, %rd459, %rd394;
	or.b64  	%rd461, %rd460, %rd458;
	add.s64 	%rd462, %rd461, %rd457;
	add.s64 	%rd463, %rd462, %rd451;
	xor.b64  	%rd464, %rd429, %rd406;
	and.b64  	%rd465, %rd452, %rd464;
	xor.b64  	%rd466, %rd465, %rd406;
	add.s64 	%rd467, %rd383, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd452;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 14;
	shf.r.wrap.b32 	%r268, %r265, %r266, 14;
	mov.b64 	%rd468, {%r268, %r267};
	shf.r.wrap.b32 	%r269, %r266, %r265, 18;
	shf.r.wrap.b32 	%r270, %r265, %r266, 18;
	mov.b64 	%rd469, {%r270, %r269};
	xor.b64  	%rd470, %rd468, %rd469;
	shf.l.wrap.b32 	%r271, %r265, %r266, 23;
	shf.l.wrap.b32 	%r272, %r266, %r265, 23;
	mov.b64 	%rd471, {%r272, %r271};
	xor.b64  	%rd472, %rd470, %rd471;
	add.s64 	%rd473, %rd467, %rd472;
	add.s64 	%rd474, %rd473, -7215885187991268811;
	add.s64 	%rd475, %rd474, %rd394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd463;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 28;
	shf.r.wrap.b32 	%r276, %r273, %r274, 28;
	mov.b64 	%rd476, {%r276, %r275};
	shf.l.wrap.b32 	%r277, %r273, %r274, 30;
	shf.l.wrap.b32 	%r278, %r274, %r273, 30;
	mov.b64 	%rd477, {%r278, %r277};
	xor.b64  	%rd478, %rd476, %rd477;
	shf.l.wrap.b32 	%r279, %r273, %r274, 25;
	shf.l.wrap.b32 	%r280, %r274, %r273, 25;
	mov.b64 	%rd479, {%r280, %r279};
	xor.b64  	%rd480, %rd478, %rd479;
	and.b64  	%rd481, %rd463, %rd440;
	or.b64  	%rd482, %rd463, %rd440;
	and.b64  	%rd483, %rd482, %rd417;
	or.b64  	%rd484, %rd483, %rd481;
	add.s64 	%rd485, %rd484, %rd480;
	add.s64 	%rd486, %rd485, %rd474;
	xor.b64  	%rd487, %rd452, %rd429;
	and.b64  	%rd488, %rd475, %rd487;
	xor.b64  	%rd489, %rd488, %rd429;
	add.s64 	%rd490, %rd406, %rd489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd475;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 14;
	shf.r.wrap.b32 	%r284, %r281, %r282, 14;
	mov.b64 	%rd491, {%r284, %r283};
	shf.r.wrap.b32 	%r285, %r282, %r281, 18;
	shf.r.wrap.b32 	%r286, %r281, %r282, 18;
	mov.b64 	%rd492, {%r286, %r285};
	xor.b64  	%rd493, %rd491, %rd492;
	shf.l.wrap.b32 	%r287, %r281, %r282, 23;
	shf.l.wrap.b32 	%r288, %r282, %r281, 23;
	mov.b64 	%rd494, {%r288, %r287};
	xor.b64  	%rd495, %rd493, %rd494;
	add.s64 	%rd496, %rd490, %rd495;
	add.s64 	%rd497, %rd496, -4495734319001032524;
	add.s64 	%rd498, %rd497, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd486;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 28;
	shf.r.wrap.b32 	%r292, %r289, %r290, 28;
	mov.b64 	%rd499, {%r292, %r291};
	shf.l.wrap.b32 	%r293, %r289, %r290, 30;
	shf.l.wrap.b32 	%r294, %r290, %r289, 30;
	mov.b64 	%rd500, {%r294, %r293};
	xor.b64  	%rd501, %rd499, %rd500;
	shf.l.wrap.b32 	%r295, %r289, %r290, 25;
	shf.l.wrap.b32 	%r296, %r290, %r289, 25;
	mov.b64 	%rd502, {%r296, %r295};
	xor.b64  	%rd503, %rd501, %rd502;
	and.b64  	%rd504, %rd486, %rd463;
	or.b64  	%rd505, %rd486, %rd463;
	and.b64  	%rd506, %rd505, %rd440;
	or.b64  	%rd507, %rd506, %rd504;
	add.s64 	%rd508, %rd507, %rd503;
	add.s64 	%rd509, %rd508, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r298}, %rd139;
	}
	shf.r.wrap.b32 	%r299, %r298, %r297, 1;
	shf.r.wrap.b32 	%r300, %r297, %r298, 1;
	mov.b64 	%rd510, {%r300, %r299};
	shf.r.wrap.b32 	%r301, %r298, %r297, 8;
	shf.r.wrap.b32 	%r302, %r297, %r298, 8;
	mov.b64 	%rd511, {%r302, %r301};
	xor.b64  	%rd512, %rd510, %rd511;
	shr.u64 	%rd513, %rd139, 7;
	xor.b64  	%rd514, %rd512, %rd513;
	add.s64 	%rd515, %rd136, %rd12;
	add.s64 	%rd1630, %rd515, %rd514;
	add.s64 	%rd516, %rd1630, %rd429;
	xor.b64  	%rd517, %rd475, %rd452;
	and.b64  	%rd518, %rd498, %rd517;
	xor.b64  	%rd519, %rd518, %rd452;
	add.s64 	%rd520, %rd516, %rd519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r303,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd498;
	}
	shf.r.wrap.b32 	%r305, %r304, %r303, 14;
	shf.r.wrap.b32 	%r306, %r303, %r304, 14;
	mov.b64 	%rd521, {%r306, %r305};
	shf.r.wrap.b32 	%r307, %r304, %r303, 18;
	shf.r.wrap.b32 	%r308, %r303, %r304, 18;
	mov.b64 	%rd522, {%r308, %r307};
	xor.b64  	%rd523, %rd521, %rd522;
	shf.l.wrap.b32 	%r309, %r303, %r304, 23;
	shf.l.wrap.b32 	%r310, %r304, %r303, 23;
	mov.b64 	%rd524, {%r310, %r309};
	xor.b64  	%rd525, %rd523, %rd524;
	add.s64 	%rd526, %rd520, %rd525;
	add.s64 	%rd527, %rd526, -1973867731355612462;
	add.s64 	%rd528, %rd527, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd509;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 28;
	shf.r.wrap.b32 	%r314, %r311, %r312, 28;
	mov.b64 	%rd529, {%r314, %r313};
	shf.l.wrap.b32 	%r315, %r311, %r312, 30;
	shf.l.wrap.b32 	%r316, %r312, %r311, 30;
	mov.b64 	%rd530, {%r316, %r315};
	xor.b64  	%rd531, %rd529, %rd530;
	shf.l.wrap.b32 	%r317, %r311, %r312, 25;
	shf.l.wrap.b32 	%r318, %r312, %r311, 25;
	mov.b64 	%rd532, {%r318, %r317};
	xor.b64  	%rd533, %rd531, %rd532;
	and.b64  	%rd534, %rd509, %rd486;
	or.b64  	%rd535, %rd509, %rd486;
	and.b64  	%rd536, %rd535, %rd463;
	or.b64  	%rd537, %rd536, %rd534;
	add.s64 	%rd538, %rd537, %rd533;
	add.s64 	%rd539, %rd538, %rd527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd142;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 1;
	shf.r.wrap.b32 	%r322, %r319, %r320, 1;
	mov.b64 	%rd540, {%r322, %r321};
	shf.r.wrap.b32 	%r323, %r320, %r319, 8;
	shf.r.wrap.b32 	%r324, %r319, %r320, 8;
	mov.b64 	%rd541, {%r324, %r323};
	xor.b64  	%rd542, %rd540, %rd541;
	shr.u64 	%rd543, %rd142, 7;
	xor.b64  	%rd544, %rd542, %rd543;
	add.s64 	%rd545, %rd14, %rd139;
	add.s64 	%rd1631, %rd545, %rd544;
	add.s64 	%rd546, %rd1631, %rd452;
	xor.b64  	%rd547, %rd498, %rd475;
	and.b64  	%rd548, %rd528, %rd547;
	xor.b64  	%rd549, %rd548, %rd475;
	add.s64 	%rd550, %rd546, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd528;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 14;
	shf.r.wrap.b32 	%r328, %r325, %r326, 14;
	mov.b64 	%rd551, {%r328, %r327};
	shf.r.wrap.b32 	%r329, %r326, %r325, 18;
	shf.r.wrap.b32 	%r330, %r325, %r326, 18;
	mov.b64 	%rd552, {%r330, %r329};
	xor.b64  	%rd553, %rd551, %rd552;
	shf.l.wrap.b32 	%r331, %r325, %r326, 23;
	shf.l.wrap.b32 	%r332, %r326, %r325, 23;
	mov.b64 	%rd554, {%r332, %r331};
	xor.b64  	%rd555, %rd553, %rd554;
	add.s64 	%rd556, %rd550, %rd555;
	add.s64 	%rd557, %rd556, -1171420211273849373;
	add.s64 	%rd558, %rd557, %rd463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r334}, %rd539;
	}
	shf.r.wrap.b32 	%r335, %r334, %r333, 28;
	shf.r.wrap.b32 	%r336, %r333, %r334, 28;
	mov.b64 	%rd559, {%r336, %r335};
	shf.l.wrap.b32 	%r337, %r333, %r334, 30;
	shf.l.wrap.b32 	%r338, %r334, %r333, 30;
	mov.b64 	%rd560, {%r338, %r337};
	xor.b64  	%rd561, %rd559, %rd560;
	shf.l.wrap.b32 	%r339, %r333, %r334, 25;
	shf.l.wrap.b32 	%r340, %r334, %r333, 25;
	mov.b64 	%rd562, {%r340, %r339};
	xor.b64  	%rd563, %rd561, %rd562;
	and.b64  	%rd564, %rd539, %rd509;
	or.b64  	%rd565, %rd539, %rd509;
	and.b64  	%rd566, %rd565, %rd486;
	or.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd567, %rd563;
	add.s64 	%rd569, %rd568, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd1630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd1630;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 19;
	shf.r.wrap.b32 	%r344, %r341, %r342, 19;
	mov.b64 	%rd570, {%r344, %r343};
	shf.l.wrap.b32 	%r345, %r341, %r342, 3;
	shf.l.wrap.b32 	%r346, %r342, %r341, 3;
	mov.b64 	%rd571, {%r346, %r345};
	xor.b64  	%rd572, %rd570, %rd571;
	shr.u64 	%rd573, %rd1630, 6;
	xor.b64  	%rd574, %rd572, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd145;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 1;
	shf.r.wrap.b32 	%r350, %r347, %r348, 1;
	mov.b64 	%rd575, {%r350, %r349};
	shf.r.wrap.b32 	%r351, %r348, %r347, 8;
	shf.r.wrap.b32 	%r352, %r347, %r348, 8;
	mov.b64 	%rd576, {%r352, %r351};
	xor.b64  	%rd577, %rd575, %rd576;
	shr.u64 	%rd578, %rd145, 7;
	xor.b64  	%rd579, %rd577, %rd578;
	add.s64 	%rd580, %rd574, %rd142;
	add.s64 	%rd1627, %rd580, %rd579;
	add.s64 	%rd581, %rd1627, %rd475;
	xor.b64  	%rd582, %rd528, %rd498;
	and.b64  	%rd583, %rd558, %rd582;
	xor.b64  	%rd584, %rd583, %rd498;
	add.s64 	%rd585, %rd581, %rd584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd558;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 14;
	shf.r.wrap.b32 	%r356, %r353, %r354, 14;
	mov.b64 	%rd586, {%r356, %r355};
	shf.r.wrap.b32 	%r357, %r354, %r353, 18;
	shf.r.wrap.b32 	%r358, %r353, %r354, 18;
	mov.b64 	%rd587, {%r358, %r357};
	xor.b64  	%rd588, %rd586, %rd587;
	shf.l.wrap.b32 	%r359, %r353, %r354, 23;
	shf.l.wrap.b32 	%r360, %r354, %r353, 23;
	mov.b64 	%rd589, {%r360, %r359};
	xor.b64  	%rd590, %rd588, %rd589;
	add.s64 	%rd591, %rd585, %rd590;
	add.s64 	%rd592, %rd591, 1135362057144423861;
	add.s64 	%rd593, %rd592, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd569;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 28;
	shf.r.wrap.b32 	%r364, %r361, %r362, 28;
	mov.b64 	%rd594, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 30;
	shf.l.wrap.b32 	%r366, %r362, %r361, 30;
	mov.b64 	%rd595, {%r366, %r365};
	xor.b64  	%rd596, %rd594, %rd595;
	shf.l.wrap.b32 	%r367, %r361, %r362, 25;
	shf.l.wrap.b32 	%r368, %r362, %r361, 25;
	mov.b64 	%rd597, {%r368, %r367};
	xor.b64  	%rd598, %rd596, %rd597;
	and.b64  	%rd599, %rd569, %rd539;
	or.b64  	%rd600, %rd569, %rd539;
	and.b64  	%rd601, %rd600, %rd509;
	or.b64  	%rd602, %rd601, %rd599;
	add.s64 	%rd603, %rd602, %rd598;
	add.s64 	%rd604, %rd603, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd1631;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 19;
	shf.r.wrap.b32 	%r372, %r369, %r370, 19;
	mov.b64 	%rd605, {%r372, %r371};
	shf.l.wrap.b32 	%r373, %r369, %r370, 3;
	shf.l.wrap.b32 	%r374, %r370, %r369, 3;
	mov.b64 	%rd606, {%r374, %r373};
	xor.b64  	%rd607, %rd605, %rd606;
	shr.u64 	%rd608, %rd1631, 6;
	xor.b64  	%rd609, %rd607, %rd608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r375,%dummy}, %rd148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd148;
	}
	shf.r.wrap.b32 	%r377, %r376, %r375, 1;
	shf.r.wrap.b32 	%r378, %r375, %r376, 1;
	mov.b64 	%rd610, {%r378, %r377};
	shf.r.wrap.b32 	%r379, %r376, %r375, 8;
	shf.r.wrap.b32 	%r380, %r375, %r376, 8;
	mov.b64 	%rd611, {%r380, %r379};
	xor.b64  	%rd612, %rd610, %rd611;
	shr.u64 	%rd613, %rd148, 7;
	xor.b64  	%rd614, %rd612, %rd613;
	add.s64 	%rd615, %rd609, %rd145;
	add.s64 	%rd1625, %rd615, %rd614;
	add.s64 	%rd616, %rd1625, %rd498;
	xor.b64  	%rd617, %rd558, %rd528;
	and.b64  	%rd618, %rd593, %rd617;
	xor.b64  	%rd619, %rd618, %rd528;
	add.s64 	%rd620, %rd616, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r382}, %rd593;
	}
	shf.r.wrap.b32 	%r383, %r382, %r381, 14;
	shf.r.wrap.b32 	%r384, %r381, %r382, 14;
	mov.b64 	%rd621, {%r384, %r383};
	shf.r.wrap.b32 	%r385, %r382, %r381, 18;
	shf.r.wrap.b32 	%r386, %r381, %r382, 18;
	mov.b64 	%rd622, {%r386, %r385};
	xor.b64  	%rd623, %rd621, %rd622;
	shf.l.wrap.b32 	%r387, %r381, %r382, 23;
	shf.l.wrap.b32 	%r388, %r382, %r381, 23;
	mov.b64 	%rd624, {%r388, %r387};
	xor.b64  	%rd625, %rd623, %rd624;
	add.s64 	%rd626, %rd620, %rd625;
	add.s64 	%rd627, %rd626, 2597628984639134821;
	add.s64 	%rd628, %rd627, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd604;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 28;
	shf.r.wrap.b32 	%r392, %r389, %r390, 28;
	mov.b64 	%rd629, {%r392, %r391};
	shf.l.wrap.b32 	%r393, %r389, %r390, 30;
	shf.l.wrap.b32 	%r394, %r390, %r389, 30;
	mov.b64 	%rd630, {%r394, %r393};
	xor.b64  	%rd631, %rd629, %rd630;
	shf.l.wrap.b32 	%r395, %r389, %r390, 25;
	shf.l.wrap.b32 	%r396, %r390, %r389, 25;
	mov.b64 	%rd632, {%r396, %r395};
	xor.b64  	%rd633, %rd631, %rd632;
	and.b64  	%rd634, %rd604, %rd569;
	or.b64  	%rd635, %rd604, %rd569;
	and.b64  	%rd636, %rd635, %rd539;
	or.b64  	%rd637, %rd636, %rd634;
	add.s64 	%rd638, %rd637, %rd633;
	add.s64 	%rd639, %rd638, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd1627;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd640, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd641, {%r402, %r401};
	xor.b64  	%rd642, %rd640, %rd641;
	shr.u64 	%rd643, %rd1627, 6;
	xor.b64  	%rd644, %rd642, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd151;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 1;
	shf.r.wrap.b32 	%r406, %r403, %r404, 1;
	mov.b64 	%rd645, {%r406, %r405};
	shf.r.wrap.b32 	%r407, %r404, %r403, 8;
	shf.r.wrap.b32 	%r408, %r403, %r404, 8;
	mov.b64 	%rd646, {%r408, %r407};
	xor.b64  	%rd647, %rd645, %rd646;
	shr.u64 	%rd648, %rd151, 7;
	xor.b64  	%rd649, %rd647, %rd648;
	add.s64 	%rd650, %rd644, %rd148;
	add.s64 	%rd1623, %rd650, %rd649;
	add.s64 	%rd651, %rd1623, %rd528;
	xor.b64  	%rd652, %rd593, %rd558;
	and.b64  	%rd653, %rd628, %rd652;
	xor.b64  	%rd654, %rd653, %rd558;
	add.s64 	%rd655, %rd651, %rd654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd628;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 14;
	shf.r.wrap.b32 	%r412, %r409, %r410, 14;
	mov.b64 	%rd656, {%r412, %r411};
	shf.r.wrap.b32 	%r413, %r410, %r409, 18;
	shf.r.wrap.b32 	%r414, %r409, %r410, 18;
	mov.b64 	%rd657, {%r414, %r413};
	xor.b64  	%rd658, %rd656, %rd657;
	shf.l.wrap.b32 	%r415, %r409, %r410, 23;
	shf.l.wrap.b32 	%r416, %r410, %r409, 23;
	mov.b64 	%rd659, {%r416, %r415};
	xor.b64  	%rd660, %rd658, %rd659;
	add.s64 	%rd661, %rd655, %rd660;
	add.s64 	%rd662, %rd661, 3308224258029322869;
	add.s64 	%rd663, %rd662, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd639;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 28;
	shf.r.wrap.b32 	%r420, %r417, %r418, 28;
	mov.b64 	%rd664, {%r420, %r419};
	shf.l.wrap.b32 	%r421, %r417, %r418, 30;
	shf.l.wrap.b32 	%r422, %r418, %r417, 30;
	mov.b64 	%rd665, {%r422, %r421};
	xor.b64  	%rd666, %rd664, %rd665;
	shf.l.wrap.b32 	%r423, %r417, %r418, 25;
	shf.l.wrap.b32 	%r424, %r418, %r417, 25;
	mov.b64 	%rd667, {%r424, %r423};
	xor.b64  	%rd668, %rd666, %rd667;
	and.b64  	%rd669, %rd639, %rd604;
	or.b64  	%rd670, %rd639, %rd604;
	and.b64  	%rd671, %rd670, %rd569;
	or.b64  	%rd672, %rd671, %rd669;
	add.s64 	%rd673, %rd672, %rd668;
	add.s64 	%rd674, %rd673, %rd662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd1625;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 19;
	shf.r.wrap.b32 	%r428, %r425, %r426, 19;
	mov.b64 	%rd675, {%r428, %r427};
	shf.l.wrap.b32 	%r429, %r425, %r426, 3;
	shf.l.wrap.b32 	%r430, %r426, %r425, 3;
	mov.b64 	%rd676, {%r430, %r429};
	xor.b64  	%rd677, %rd675, %rd676;
	shr.u64 	%rd678, %rd1625, 6;
	xor.b64  	%rd679, %rd677, %rd678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd154;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 1;
	shf.r.wrap.b32 	%r434, %r431, %r432, 1;
	mov.b64 	%rd680, {%r434, %r433};
	shf.r.wrap.b32 	%r435, %r432, %r431, 8;
	shf.r.wrap.b32 	%r436, %r431, %r432, 8;
	mov.b64 	%rd681, {%r436, %r435};
	xor.b64  	%rd682, %rd680, %rd681;
	shr.u64 	%rd683, %rd154, 7;
	xor.b64  	%rd684, %rd682, %rd683;
	add.s64 	%rd685, %rd679, %rd151;
	add.s64 	%rd1621, %rd685, %rd684;
	add.s64 	%rd686, %rd1621, %rd558;
	xor.b64  	%rd687, %rd628, %rd593;
	and.b64  	%rd688, %rd663, %rd687;
	xor.b64  	%rd689, %rd688, %rd593;
	add.s64 	%rd690, %rd686, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r438}, %rd663;
	}
	shf.r.wrap.b32 	%r439, %r438, %r437, 14;
	shf.r.wrap.b32 	%r440, %r437, %r438, 14;
	mov.b64 	%rd691, {%r440, %r439};
	shf.r.wrap.b32 	%r441, %r438, %r437, 18;
	shf.r.wrap.b32 	%r442, %r437, %r438, 18;
	mov.b64 	%rd692, {%r442, %r441};
	xor.b64  	%rd693, %rd691, %rd692;
	shf.l.wrap.b32 	%r443, %r437, %r438, 23;
	shf.l.wrap.b32 	%r444, %r438, %r437, 23;
	mov.b64 	%rd694, {%r444, %r443};
	xor.b64  	%rd695, %rd693, %rd694;
	add.s64 	%rd696, %rd690, %rd695;
	add.s64 	%rd697, %rd696, 5365058923640841347;
	add.s64 	%rd698, %rd697, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd674;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 28;
	shf.r.wrap.b32 	%r448, %r445, %r446, 28;
	mov.b64 	%rd699, {%r448, %r447};
	shf.l.wrap.b32 	%r449, %r445, %r446, 30;
	shf.l.wrap.b32 	%r450, %r446, %r445, 30;
	mov.b64 	%rd700, {%r450, %r449};
	xor.b64  	%rd701, %rd699, %rd700;
	shf.l.wrap.b32 	%r451, %r445, %r446, 25;
	shf.l.wrap.b32 	%r452, %r446, %r445, 25;
	mov.b64 	%rd702, {%r452, %r451};
	xor.b64  	%rd703, %rd701, %rd702;
	and.b64  	%rd704, %rd674, %rd639;
	or.b64  	%rd705, %rd674, %rd639;
	and.b64  	%rd706, %rd705, %rd604;
	or.b64  	%rd707, %rd706, %rd704;
	add.s64 	%rd708, %rd707, %rd703;
	add.s64 	%rd709, %rd708, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r453,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r454}, %rd1623;
	}
	shf.r.wrap.b32 	%r455, %r454, %r453, 19;
	shf.r.wrap.b32 	%r456, %r453, %r454, 19;
	mov.b64 	%rd710, {%r456, %r455};
	shf.l.wrap.b32 	%r457, %r453, %r454, 3;
	shf.l.wrap.b32 	%r458, %r454, %r453, 3;
	mov.b64 	%rd711, {%r458, %r457};
	xor.b64  	%rd712, %rd710, %rd711;
	shr.u64 	%rd713, %rd1623, 6;
	xor.b64  	%rd714, %rd712, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd157;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 1;
	shf.r.wrap.b32 	%r462, %r459, %r460, 1;
	mov.b64 	%rd715, {%r462, %r461};
	shf.r.wrap.b32 	%r463, %r460, %r459, 8;
	shf.r.wrap.b32 	%r464, %r459, %r460, 8;
	mov.b64 	%rd716, {%r464, %r463};
	xor.b64  	%rd717, %rd715, %rd716;
	shr.u64 	%rd718, %rd157, 7;
	xor.b64  	%rd719, %rd717, %rd718;
	add.s64 	%rd720, %rd714, %rd154;
	add.s64 	%rd721, %rd720, %rd719;
	add.s64 	%rd1619, %rd721, 544;
	add.s64 	%rd722, %rd1619, %rd593;
	xor.b64  	%rd723, %rd663, %rd628;
	and.b64  	%rd724, %rd698, %rd723;
	xor.b64  	%rd725, %rd724, %rd628;
	add.s64 	%rd726, %rd722, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd698;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 14;
	shf.r.wrap.b32 	%r468, %r465, %r466, 14;
	mov.b64 	%rd727, {%r468, %r467};
	shf.r.wrap.b32 	%r469, %r466, %r465, 18;
	shf.r.wrap.b32 	%r470, %r465, %r466, 18;
	mov.b64 	%rd728, {%r470, %r469};
	xor.b64  	%rd729, %rd727, %rd728;
	shf.l.wrap.b32 	%r471, %r465, %r466, 23;
	shf.l.wrap.b32 	%r472, %r466, %r465, 23;
	mov.b64 	%rd730, {%r472, %r471};
	xor.b64  	%rd731, %rd729, %rd730;
	add.s64 	%rd732, %rd726, %rd731;
	add.s64 	%rd733, %rd732, 6679025012923562964;
	add.s64 	%rd734, %rd733, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd709;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 28;
	shf.r.wrap.b32 	%r476, %r473, %r474, 28;
	mov.b64 	%rd735, {%r476, %r475};
	shf.l.wrap.b32 	%r477, %r473, %r474, 30;
	shf.l.wrap.b32 	%r478, %r474, %r473, 30;
	mov.b64 	%rd736, {%r478, %r477};
	xor.b64  	%rd737, %rd735, %rd736;
	shf.l.wrap.b32 	%r479, %r473, %r474, 25;
	shf.l.wrap.b32 	%r480, %r474, %r473, 25;
	mov.b64 	%rd738, {%r480, %r479};
	xor.b64  	%rd739, %rd737, %rd738;
	and.b64  	%rd740, %rd709, %rd674;
	or.b64  	%rd741, %rd709, %rd674;
	and.b64  	%rd742, %rd741, %rd639;
	or.b64  	%rd743, %rd742, %rd740;
	add.s64 	%rd744, %rd743, %rd739;
	add.s64 	%rd745, %rd744, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd1621;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 19;
	shf.r.wrap.b32 	%r484, %r481, %r482, 19;
	mov.b64 	%rd746, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 3;
	shf.l.wrap.b32 	%r486, %r482, %r481, 3;
	mov.b64 	%rd747, {%r486, %r485};
	xor.b64  	%rd748, %rd746, %rd747;
	shr.u64 	%rd749, %rd1621, 6;
	xor.b64  	%rd750, %rd748, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd159;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 1;
	shf.r.wrap.b32 	%r490, %r487, %r488, 1;
	mov.b64 	%rd751, {%r490, %r489};
	shf.r.wrap.b32 	%r491, %r488, %r487, 8;
	shf.r.wrap.b32 	%r492, %r487, %r488, 8;
	mov.b64 	%rd752, {%r492, %r491};
	xor.b64  	%rd753, %rd751, %rd752;
	shr.u64 	%rd754, %rd159, 7;
	xor.b64  	%rd755, %rd753, %rd754;
	add.s64 	%rd756, %rd750, %rd157;
	add.s64 	%rd757, %rd756, %rd1630;
	add.s64 	%rd1618, %rd757, %rd755;
	add.s64 	%rd758, %rd1618, %rd628;
	xor.b64  	%rd759, %rd698, %rd663;
	and.b64  	%rd760, %rd734, %rd759;
	xor.b64  	%rd761, %rd760, %rd663;
	add.s64 	%rd762, %rd758, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r493,%dummy}, %rd734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r494}, %rd734;
	}
	shf.r.wrap.b32 	%r495, %r494, %r493, 14;
	shf.r.wrap.b32 	%r496, %r493, %r494, 14;
	mov.b64 	%rd763, {%r496, %r495};
	shf.r.wrap.b32 	%r497, %r494, %r493, 18;
	shf.r.wrap.b32 	%r498, %r493, %r494, 18;
	mov.b64 	%rd764, {%r498, %r497};
	xor.b64  	%rd765, %rd763, %rd764;
	shf.l.wrap.b32 	%r499, %r493, %r494, 23;
	shf.l.wrap.b32 	%r500, %r494, %r493, 23;
	mov.b64 	%rd766, {%r500, %r499};
	xor.b64  	%rd767, %rd765, %rd766;
	add.s64 	%rd768, %rd762, %rd767;
	add.s64 	%rd769, %rd768, 8573033837759648693;
	add.s64 	%rd770, %rd769, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r501,%dummy}, %rd745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r502}, %rd745;
	}
	shf.r.wrap.b32 	%r503, %r502, %r501, 28;
	shf.r.wrap.b32 	%r504, %r501, %r502, 28;
	mov.b64 	%rd771, {%r504, %r503};
	shf.l.wrap.b32 	%r505, %r501, %r502, 30;
	shf.l.wrap.b32 	%r506, %r502, %r501, 30;
	mov.b64 	%rd772, {%r506, %r505};
	xor.b64  	%rd773, %rd771, %rd772;
	shf.l.wrap.b32 	%r507, %r501, %r502, 25;
	shf.l.wrap.b32 	%r508, %r502, %r501, 25;
	mov.b64 	%rd774, {%r508, %r507};
	xor.b64  	%rd775, %rd773, %rd774;
	and.b64  	%rd776, %rd745, %rd709;
	or.b64  	%rd777, %rd745, %rd709;
	and.b64  	%rd778, %rd777, %rd674;
	or.b64  	%rd779, %rd778, %rd776;
	add.s64 	%rd780, %rd779, %rd775;
	add.s64 	%rd781, %rd780, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r510}, %rd1619;
	}
	shf.r.wrap.b32 	%r511, %r510, %r509, 19;
	shf.r.wrap.b32 	%r512, %r509, %r510, 19;
	mov.b64 	%rd782, {%r512, %r511};
	shf.l.wrap.b32 	%r513, %r509, %r510, 3;
	shf.l.wrap.b32 	%r514, %r510, %r509, 3;
	mov.b64 	%rd783, {%r514, %r513};
	xor.b64  	%rd784, %rd782, %rd783;
	shr.u64 	%rd785, %rd1619, 6;
	xor.b64  	%rd786, %rd784, %rd785;
	add.s64 	%rd787, %rd159, %rd13;
	add.s64 	%rd788, %rd787, %rd1631;
	add.s64 	%rd1617, %rd788, %rd786;
	add.s64 	%rd789, %rd1617, %rd663;
	xor.b64  	%rd790, %rd734, %rd698;
	and.b64  	%rd791, %rd770, %rd790;
	xor.b64  	%rd792, %rd791, %rd698;
	add.s64 	%rd793, %rd789, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd770;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 14;
	shf.r.wrap.b32 	%r518, %r515, %r516, 14;
	mov.b64 	%rd794, {%r518, %r517};
	shf.r.wrap.b32 	%r519, %r516, %r515, 18;
	shf.r.wrap.b32 	%r520, %r515, %r516, 18;
	mov.b64 	%rd795, {%r520, %r519};
	xor.b64  	%rd796, %rd794, %rd795;
	shf.l.wrap.b32 	%r521, %r515, %r516, 23;
	shf.l.wrap.b32 	%r522, %r516, %r515, 23;
	mov.b64 	%rd797, {%r522, %r521};
	xor.b64  	%rd798, %rd796, %rd797;
	add.s64 	%rd799, %rd793, %rd798;
	add.s64 	%rd800, %rd799, -7476448914759557205;
	add.s64 	%rd801, %rd800, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd781;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 28;
	shf.r.wrap.b32 	%r526, %r523, %r524, 28;
	mov.b64 	%rd802, {%r526, %r525};
	shf.l.wrap.b32 	%r527, %r523, %r524, 30;
	shf.l.wrap.b32 	%r528, %r524, %r523, 30;
	mov.b64 	%rd803, {%r528, %r527};
	xor.b64  	%rd804, %rd802, %rd803;
	shf.l.wrap.b32 	%r529, %r523, %r524, 25;
	shf.l.wrap.b32 	%r530, %r524, %r523, 25;
	mov.b64 	%rd805, {%r530, %r529};
	xor.b64  	%rd806, %rd804, %rd805;
	and.b64  	%rd807, %rd781, %rd745;
	or.b64  	%rd808, %rd781, %rd745;
	and.b64  	%rd809, %rd808, %rd709;
	or.b64  	%rd810, %rd809, %rd807;
	add.s64 	%rd811, %rd810, %rd806;
	add.s64 	%rd812, %rd811, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd1618;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 19;
	shf.r.wrap.b32 	%r534, %r531, %r532, 19;
	mov.b64 	%rd813, {%r534, %r533};
	shf.l.wrap.b32 	%r535, %r531, %r532, 3;
	shf.l.wrap.b32 	%r536, %r532, %r531, 3;
	mov.b64 	%rd814, {%r536, %r535};
	xor.b64  	%rd815, %rd813, %rd814;
	shr.u64 	%rd816, %rd1618, 6;
	xor.b64  	%rd817, %rd815, %rd816;
	add.s64 	%rd818, %rd1627, %rd13;
	add.s64 	%rd1629, %rd818, %rd817;
	add.s64 	%rd819, %rd1629, %rd698;
	xor.b64  	%rd820, %rd770, %rd734;
	and.b64  	%rd821, %rd801, %rd820;
	xor.b64  	%rd822, %rd821, %rd734;
	add.s64 	%rd823, %rd819, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd801;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 14;
	shf.r.wrap.b32 	%r540, %r537, %r538, 14;
	mov.b64 	%rd824, {%r540, %r539};
	shf.r.wrap.b32 	%r541, %r538, %r537, 18;
	shf.r.wrap.b32 	%r542, %r537, %r538, 18;
	mov.b64 	%rd825, {%r542, %r541};
	xor.b64  	%rd826, %rd824, %rd825;
	shf.l.wrap.b32 	%r543, %r537, %r538, 23;
	shf.l.wrap.b32 	%r544, %r538, %r537, 23;
	mov.b64 	%rd827, {%r544, %r543};
	xor.b64  	%rd828, %rd826, %rd827;
	add.s64 	%rd829, %rd823, %rd828;
	add.s64 	%rd830, %rd829, -6327057829258317296;
	add.s64 	%rd831, %rd830, %rd709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd812;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 28;
	shf.r.wrap.b32 	%r548, %r545, %r546, 28;
	mov.b64 	%rd832, {%r548, %r547};
	shf.l.wrap.b32 	%r549, %r545, %r546, 30;
	shf.l.wrap.b32 	%r550, %r546, %r545, 30;
	mov.b64 	%rd833, {%r550, %r549};
	xor.b64  	%rd834, %rd832, %rd833;
	shf.l.wrap.b32 	%r551, %r545, %r546, 25;
	shf.l.wrap.b32 	%r552, %r546, %r545, 25;
	mov.b64 	%rd835, {%r552, %r551};
	xor.b64  	%rd836, %rd834, %rd835;
	and.b64  	%rd837, %rd812, %rd781;
	or.b64  	%rd838, %rd812, %rd781;
	and.b64  	%rd839, %rd838, %rd745;
	or.b64  	%rd840, %rd839, %rd837;
	add.s64 	%rd841, %rd840, %rd836;
	add.s64 	%rd842, %rd841, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd1617;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 19;
	shf.r.wrap.b32 	%r556, %r553, %r554, 19;
	mov.b64 	%rd843, {%r556, %r555};
	shf.l.wrap.b32 	%r557, %r553, %r554, 3;
	shf.l.wrap.b32 	%r558, %r554, %r553, 3;
	mov.b64 	%rd844, {%r558, %r557};
	xor.b64  	%rd845, %rd843, %rd844;
	shr.u64 	%rd846, %rd1617, 6;
	xor.b64  	%rd847, %rd845, %rd846;
	add.s64 	%rd848, %rd1625, %rd13;
	add.s64 	%rd1626, %rd848, %rd847;
	add.s64 	%rd849, %rd1626, %rd734;
	xor.b64  	%rd850, %rd801, %rd770;
	and.b64  	%rd851, %rd831, %rd850;
	xor.b64  	%rd852, %rd851, %rd770;
	add.s64 	%rd853, %rd849, %rd852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd831;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 14;
	shf.r.wrap.b32 	%r562, %r559, %r560, 14;
	mov.b64 	%rd854, {%r562, %r561};
	shf.r.wrap.b32 	%r563, %r560, %r559, 18;
	shf.r.wrap.b32 	%r564, %r559, %r560, 18;
	mov.b64 	%rd855, {%r564, %r563};
	xor.b64  	%rd856, %rd854, %rd855;
	shf.l.wrap.b32 	%r565, %r559, %r560, 23;
	shf.l.wrap.b32 	%r566, %r560, %r559, 23;
	mov.b64 	%rd857, {%r566, %r565};
	xor.b64  	%rd858, %rd856, %rd857;
	add.s64 	%rd859, %rd853, %rd858;
	add.s64 	%rd860, %rd859, -5763719355590565569;
	add.s64 	%rd861, %rd860, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd842;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 28;
	shf.r.wrap.b32 	%r570, %r567, %r568, 28;
	mov.b64 	%rd862, {%r570, %r569};
	shf.l.wrap.b32 	%r571, %r567, %r568, 30;
	shf.l.wrap.b32 	%r572, %r568, %r567, 30;
	mov.b64 	%rd863, {%r572, %r571};
	xor.b64  	%rd864, %rd862, %rd863;
	shf.l.wrap.b32 	%r573, %r567, %r568, 25;
	shf.l.wrap.b32 	%r574, %r568, %r567, 25;
	mov.b64 	%rd865, {%r574, %r573};
	xor.b64  	%rd866, %rd864, %rd865;
	and.b64  	%rd867, %rd842, %rd812;
	or.b64  	%rd868, %rd842, %rd812;
	and.b64  	%rd869, %rd868, %rd781;
	or.b64  	%rd870, %rd869, %rd867;
	add.s64 	%rd871, %rd870, %rd866;
	add.s64 	%rd872, %rd871, %rd860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd1629;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 19;
	shf.r.wrap.b32 	%r578, %r575, %r576, 19;
	mov.b64 	%rd873, {%r578, %r577};
	shf.l.wrap.b32 	%r579, %r575, %r576, 3;
	shf.l.wrap.b32 	%r580, %r576, %r575, 3;
	mov.b64 	%rd874, {%r580, %r579};
	xor.b64  	%rd875, %rd873, %rd874;
	shr.u64 	%rd876, %rd1629, 6;
	xor.b64  	%rd877, %rd875, %rd876;
	add.s64 	%rd878, %rd1623, %rd13;
	add.s64 	%rd1624, %rd878, %rd877;
	add.s64 	%rd879, %rd1624, %rd770;
	xor.b64  	%rd880, %rd831, %rd801;
	and.b64  	%rd881, %rd861, %rd880;
	xor.b64  	%rd882, %rd881, %rd801;
	add.s64 	%rd883, %rd879, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd861;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 14;
	shf.r.wrap.b32 	%r584, %r581, %r582, 14;
	mov.b64 	%rd884, {%r584, %r583};
	shf.r.wrap.b32 	%r585, %r582, %r581, 18;
	shf.r.wrap.b32 	%r586, %r581, %r582, 18;
	mov.b64 	%rd885, {%r586, %r585};
	xor.b64  	%rd886, %rd884, %rd885;
	shf.l.wrap.b32 	%r587, %r581, %r582, 23;
	shf.l.wrap.b32 	%r588, %r582, %r581, 23;
	mov.b64 	%rd887, {%r588, %r587};
	xor.b64  	%rd888, %rd886, %rd887;
	add.s64 	%rd889, %rd883, %rd888;
	add.s64 	%rd890, %rd889, -4658551843659510044;
	add.s64 	%rd891, %rd890, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd872;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 28;
	shf.r.wrap.b32 	%r592, %r589, %r590, 28;
	mov.b64 	%rd892, {%r592, %r591};
	shf.l.wrap.b32 	%r593, %r589, %r590, 30;
	shf.l.wrap.b32 	%r594, %r590, %r589, 30;
	mov.b64 	%rd893, {%r594, %r593};
	xor.b64  	%rd894, %rd892, %rd893;
	shf.l.wrap.b32 	%r595, %r589, %r590, 25;
	shf.l.wrap.b32 	%r596, %r590, %r589, 25;
	mov.b64 	%rd895, {%r596, %r595};
	xor.b64  	%rd896, %rd894, %rd895;
	and.b64  	%rd897, %rd872, %rd842;
	or.b64  	%rd898, %rd872, %rd842;
	and.b64  	%rd899, %rd898, %rd812;
	or.b64  	%rd900, %rd899, %rd897;
	add.s64 	%rd901, %rd900, %rd896;
	add.s64 	%rd902, %rd901, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd1626;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 19;
	shf.r.wrap.b32 	%r600, %r597, %r598, 19;
	mov.b64 	%rd903, {%r600, %r599};
	shf.l.wrap.b32 	%r601, %r597, %r598, 3;
	shf.l.wrap.b32 	%r602, %r598, %r597, 3;
	mov.b64 	%rd904, {%r602, %r601};
	xor.b64  	%rd905, %rd903, %rd904;
	shr.u64 	%rd906, %rd1626, 6;
	xor.b64  	%rd907, %rd905, %rd906;
	add.s64 	%rd908, %rd1621, %rd13;
	add.s64 	%rd1622, %rd908, %rd907;
	add.s64 	%rd909, %rd1622, %rd801;
	xor.b64  	%rd910, %rd861, %rd831;
	and.b64  	%rd911, %rd891, %rd910;
	xor.b64  	%rd912, %rd911, %rd831;
	add.s64 	%rd913, %rd909, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd891;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 14;
	shf.r.wrap.b32 	%r606, %r603, %r604, 14;
	mov.b64 	%rd914, {%r606, %r605};
	shf.r.wrap.b32 	%r607, %r604, %r603, 18;
	shf.r.wrap.b32 	%r608, %r603, %r604, 18;
	mov.b64 	%rd915, {%r608, %r607};
	xor.b64  	%rd916, %rd914, %rd915;
	shf.l.wrap.b32 	%r609, %r603, %r604, 23;
	shf.l.wrap.b32 	%r610, %r604, %r603, 23;
	mov.b64 	%rd917, {%r610, %r609};
	xor.b64  	%rd918, %rd916, %rd917;
	add.s64 	%rd919, %rd913, %rd918;
	add.s64 	%rd920, %rd919, -4116276920077217854;
	add.s64 	%rd1640, %rd920, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd902;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 28;
	shf.r.wrap.b32 	%r614, %r611, %r612, 28;
	mov.b64 	%rd921, {%r614, %r613};
	shf.l.wrap.b32 	%r615, %r611, %r612, 30;
	shf.l.wrap.b32 	%r616, %r612, %r611, 30;
	mov.b64 	%rd922, {%r616, %r615};
	xor.b64  	%rd923, %rd921, %rd922;
	shf.l.wrap.b32 	%r617, %r611, %r612, 25;
	shf.l.wrap.b32 	%r618, %r612, %r611, 25;
	mov.b64 	%rd924, {%r618, %r617};
	xor.b64  	%rd925, %rd923, %rd924;
	and.b64  	%rd926, %rd902, %rd872;
	or.b64  	%rd927, %rd902, %rd872;
	and.b64  	%rd928, %rd927, %rd842;
	or.b64  	%rd929, %rd928, %rd926;
	add.s64 	%rd930, %rd929, %rd925;
	add.s64 	%rd1636, %rd930, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd1624;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 19;
	shf.r.wrap.b32 	%r622, %r619, %r620, 19;
	mov.b64 	%rd931, {%r622, %r621};
	shf.l.wrap.b32 	%r623, %r619, %r620, 3;
	shf.l.wrap.b32 	%r624, %r620, %r619, 3;
	mov.b64 	%rd932, {%r624, %r623};
	xor.b64  	%rd933, %rd931, %rd932;
	shr.u64 	%rd934, %rd1624, 6;
	xor.b64  	%rd935, %rd933, %rd934;
	add.s64 	%rd936, %rd1619, %rd13;
	add.s64 	%rd1620, %rd936, %rd935;
	add.s64 	%rd937, %rd1620, %rd831;
	xor.b64  	%rd938, %rd891, %rd861;
	and.b64  	%rd939, %rd1640, %rd938;
	xor.b64  	%rd940, %rd939, %rd861;
	add.s64 	%rd941, %rd937, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd1640;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 14;
	shf.r.wrap.b32 	%r628, %r625, %r626, 14;
	mov.b64 	%rd942, {%r628, %r627};
	shf.r.wrap.b32 	%r629, %r626, %r625, 18;
	shf.r.wrap.b32 	%r630, %r625, %r626, 18;
	mov.b64 	%rd943, {%r630, %r629};
	xor.b64  	%rd944, %rd942, %rd943;
	shf.l.wrap.b32 	%r631, %r625, %r626, 23;
	shf.l.wrap.b32 	%r632, %r626, %r625, 23;
	mov.b64 	%rd945, {%r632, %r631};
	xor.b64  	%rd946, %rd944, %rd945;
	add.s64 	%rd947, %rd941, %rd946;
	add.s64 	%rd948, %rd947, -3051310485924567259;
	add.s64 	%rd1639, %rd948, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd1636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd1636;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 28;
	shf.r.wrap.b32 	%r636, %r633, %r634, 28;
	mov.b64 	%rd949, {%r636, %r635};
	shf.l.wrap.b32 	%r637, %r633, %r634, 30;
	shf.l.wrap.b32 	%r638, %r634, %r633, 30;
	mov.b64 	%rd950, {%r638, %r637};
	xor.b64  	%rd951, %rd949, %rd950;
	shf.l.wrap.b32 	%r639, %r633, %r634, 25;
	shf.l.wrap.b32 	%r640, %r634, %r633, 25;
	mov.b64 	%rd952, {%r640, %r639};
	xor.b64  	%rd953, %rd951, %rd952;
	and.b64  	%rd954, %rd1636, %rd902;
	or.b64  	%rd955, %rd1636, %rd902;
	and.b64  	%rd956, %rd955, %rd872;
	or.b64  	%rd957, %rd956, %rd954;
	add.s64 	%rd958, %rd957, %rd953;
	add.s64 	%rd1635, %rd958, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd1622;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 19;
	shf.r.wrap.b32 	%r644, %r641, %r642, 19;
	mov.b64 	%rd959, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 3;
	shf.l.wrap.b32 	%r646, %r642, %r641, 3;
	mov.b64 	%rd960, {%r646, %r645};
	xor.b64  	%rd961, %rd959, %rd960;
	shr.u64 	%rd962, %rd1622, 6;
	xor.b64  	%rd963, %rd961, %rd962;
	add.s64 	%rd964, %rd963, %rd1618;
	add.s64 	%rd1632, %rd964, %rd15;
	add.s64 	%rd965, %rd1632, %rd861;
	xor.b64  	%rd966, %rd1640, %rd891;
	and.b64  	%rd967, %rd1639, %rd966;
	xor.b64  	%rd968, %rd967, %rd891;
	add.s64 	%rd969, %rd965, %rd968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd1639;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 14;
	shf.r.wrap.b32 	%r650, %r647, %r648, 14;
	mov.b64 	%rd970, {%r650, %r649};
	shf.r.wrap.b32 	%r651, %r648, %r647, 18;
	shf.r.wrap.b32 	%r652, %r647, %r648, 18;
	mov.b64 	%rd971, {%r652, %r651};
	xor.b64  	%rd972, %rd970, %rd971;
	shf.l.wrap.b32 	%r653, %r647, %r648, 23;
	shf.l.wrap.b32 	%r654, %r648, %r647, 23;
	mov.b64 	%rd973, {%r654, %r653};
	xor.b64  	%rd974, %rd972, %rd973;
	add.s64 	%rd975, %rd969, %rd974;
	add.s64 	%rd976, %rd975, 489312712824947311;
	add.s64 	%rd1638, %rd976, %rd872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd1635;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 28;
	shf.r.wrap.b32 	%r658, %r655, %r656, 28;
	mov.b64 	%rd977, {%r658, %r657};
	shf.l.wrap.b32 	%r659, %r655, %r656, 30;
	shf.l.wrap.b32 	%r660, %r656, %r655, 30;
	mov.b64 	%rd978, {%r660, %r659};
	xor.b64  	%rd979, %rd977, %rd978;
	shf.l.wrap.b32 	%r661, %r655, %r656, 25;
	shf.l.wrap.b32 	%r662, %r656, %r655, 25;
	mov.b64 	%rd980, {%r662, %r661};
	xor.b64  	%rd981, %rd979, %rd980;
	and.b64  	%rd982, %rd1635, %rd1636;
	or.b64  	%rd983, %rd1635, %rd1636;
	and.b64  	%rd984, %rd983, %rd902;
	or.b64  	%rd985, %rd984, %rd982;
	add.s64 	%rd986, %rd985, %rd981;
	add.s64 	%rd1634, %rd986, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd1620;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 19;
	shf.r.wrap.b32 	%r666, %r663, %r664, 19;
	mov.b64 	%rd987, {%r666, %r665};
	shf.l.wrap.b32 	%r667, %r663, %r664, 3;
	shf.l.wrap.b32 	%r668, %r664, %r663, 3;
	mov.b64 	%rd988, {%r668, %r667};
	xor.b64  	%rd989, %rd987, %rd988;
	shr.u64 	%rd990, %rd1620, 6;
	xor.b64  	%rd991, %rd989, %rd990;
	shf.r.wrap.b32 	%r669, %r342, %r341, 1;
	shf.r.wrap.b32 	%r670, %r341, %r342, 1;
	mov.b64 	%rd992, {%r670, %r669};
	shf.r.wrap.b32 	%r671, %r342, %r341, 8;
	shf.r.wrap.b32 	%r672, %r341, %r342, 8;
	mov.b64 	%rd993, {%r672, %r671};
	xor.b64  	%rd994, %rd992, %rd993;
	shr.u64 	%rd995, %rd1630, 7;
	xor.b64  	%rd996, %rd994, %rd995;
	add.s64 	%rd997, %rd991, %rd1617;
	add.s64 	%rd998, %rd997, %rd996;
	add.s64 	%rd1628, %rd998, 544;
	add.s64 	%rd999, %rd1628, %rd891;
	xor.b64  	%rd1000, %rd1639, %rd1640;
	and.b64  	%rd1001, %rd1638, %rd1000;
	xor.b64  	%rd1002, %rd1001, %rd1640;
	add.s64 	%rd1003, %rd999, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd1638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd1638;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 14;
	shf.r.wrap.b32 	%r676, %r673, %r674, 14;
	mov.b64 	%rd1004, {%r676, %r675};
	shf.r.wrap.b32 	%r677, %r674, %r673, 18;
	shf.r.wrap.b32 	%r678, %r673, %r674, 18;
	mov.b64 	%rd1005, {%r678, %r677};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	shf.l.wrap.b32 	%r679, %r673, %r674, 23;
	shf.l.wrap.b32 	%r680, %r674, %r673, 23;
	mov.b64 	%rd1007, {%r680, %r679};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	add.s64 	%rd1009, %rd1003, %rd1008;
	add.s64 	%rd1010, %rd1009, 1452737877330783856;
	add.s64 	%rd1637, %rd1010, %rd902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1634;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 28;
	shf.r.wrap.b32 	%r684, %r681, %r682, 28;
	mov.b64 	%rd1011, {%r684, %r683};
	shf.l.wrap.b32 	%r685, %r681, %r682, 30;
	shf.l.wrap.b32 	%r686, %r682, %r681, 30;
	mov.b64 	%rd1012, {%r686, %r685};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	shf.l.wrap.b32 	%r687, %r681, %r682, 25;
	shf.l.wrap.b32 	%r688, %r682, %r681, 25;
	mov.b64 	%rd1014, {%r688, %r687};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	and.b64  	%rd1016, %rd1634, %rd1635;
	or.b64  	%rd1017, %rd1634, %rd1635;
	and.b64  	%rd1018, %rd1017, %rd1636;
	or.b64  	%rd1019, %rd1018, %rd1016;
	add.s64 	%rd1020, %rd1019, %rd1015;
	add.s64 	%rd1633, %rd1020, %rd1010;
	mov.u64 	%rd1616, K;

$L__BB5_2:
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd1632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd1632;
	}
	shf.l.wrap.b32 	%r691, %r690, %r689, 3;
	shf.l.wrap.b32 	%r692, %r689, %r690, 3;
	mov.b64 	%rd1021, {%r692, %r691};
	shf.r.wrap.b32 	%r693, %r689, %r690, 19;
	shf.r.wrap.b32 	%r694, %r690, %r689, 19;
	mov.b64 	%rd1022, {%r694, %r693};
	xor.b64  	%rd1023, %rd1022, %rd1021;
	shr.u64 	%rd1024, %rd1632, 6;
	xor.b64  	%rd1025, %rd1023, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd1631;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 8;
	shf.r.wrap.b32 	%r698, %r695, %r696, 8;
	mov.b64 	%rd1026, {%r698, %r697};
	shf.r.wrap.b32 	%r699, %r696, %r695, 1;
	shf.r.wrap.b32 	%r700, %r695, %r696, 1;
	mov.b64 	%rd1027, {%r700, %r699};
	xor.b64  	%rd1028, %rd1027, %rd1026;
	shr.u64 	%rd1029, %rd1631, 7;
	xor.b64  	%rd1030, %rd1028, %rd1029;
	add.s64 	%rd1031, %rd1025, %rd1630;
	add.s64 	%rd1032, %rd1031, %rd1629;
	add.s64 	%rd1630, %rd1032, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd1637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd1637;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 18;
	shf.r.wrap.b32 	%r704, %r701, %r702, 18;
	mov.b64 	%rd1033, {%r704, %r703};
	shf.r.wrap.b32 	%r705, %r702, %r701, 14;
	shf.r.wrap.b32 	%r706, %r701, %r702, 14;
	mov.b64 	%rd1034, {%r706, %r705};
	xor.b64  	%rd1035, %rd1034, %rd1033;
	shf.l.wrap.b32 	%r707, %r701, %r702, 23;
	shf.l.wrap.b32 	%r708, %r702, %r701, 23;
	mov.b64 	%rd1036, {%r708, %r707};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	xor.b64  	%rd1038, %rd1638, %rd1639;
	and.b64  	%rd1039, %rd1637, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd1639;
	add.s64 	%rd1041, %rd1040, %rd1640;
	add.s64 	%rd1042, %rd1041, %rd1037;
	ld.const.u64 	%rd1043, [%rd1616+256];
	add.s64 	%rd1044, %rd1042, %rd1043;
	add.s64 	%rd1045, %rd1044, %rd1630;
	add.s64 	%rd1046, %rd1045, %rd1636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd1633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r710,%dummy}, %rd1633;
	}
	shf.l.wrap.b32 	%r711, %r710, %r709, 30;
	shf.l.wrap.b32 	%r712, %r709, %r710, 30;
	mov.b64 	%rd1047, {%r712, %r711};
	shf.r.wrap.b32 	%r713, %r709, %r710, 28;
	shf.r.wrap.b32 	%r714, %r710, %r709, 28;
	mov.b64 	%rd1048, {%r714, %r713};
	xor.b64  	%rd1049, %rd1048, %rd1047;
	shf.l.wrap.b32 	%r715, %r710, %r709, 25;
	shf.l.wrap.b32 	%r716, %r709, %r710, 25;
	mov.b64 	%rd1050, {%r716, %r715};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	or.b64  	%rd1052, %rd1633, %rd1634;
	and.b64  	%rd1053, %rd1052, %rd1635;
	and.b64  	%rd1054, %rd1633, %rd1634;
	or.b64  	%rd1055, %rd1053, %rd1054;
	add.s64 	%rd1056, %rd1055, %rd1051;
	add.s64 	%rd1057, %rd1056, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd1628;
	}
	shf.l.wrap.b32 	%r719, %r718, %r717, 3;
	shf.l.wrap.b32 	%r720, %r717, %r718, 3;
	mov.b64 	%rd1058, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r717, %r718, 19;
	shf.r.wrap.b32 	%r722, %r718, %r717, 19;
	mov.b64 	%rd1059, {%r722, %r721};
	xor.b64  	%rd1060, %rd1059, %rd1058;
	shr.u64 	%rd1061, %rd1628, 6;
	xor.b64  	%rd1062, %rd1060, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1627;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 8;
	shf.r.wrap.b32 	%r726, %r723, %r724, 8;
	mov.b64 	%rd1063, {%r726, %r725};
	shf.r.wrap.b32 	%r727, %r724, %r723, 1;
	shf.r.wrap.b32 	%r728, %r723, %r724, 1;
	mov.b64 	%rd1064, {%r728, %r727};
	xor.b64  	%rd1065, %rd1064, %rd1063;
	shr.u64 	%rd1066, %rd1627, 7;
	xor.b64  	%rd1067, %rd1065, %rd1066;
	add.s64 	%rd1068, %rd1062, %rd1631;
	add.s64 	%rd1069, %rd1068, %rd1626;
	add.s64 	%rd1631, %rd1069, %rd1067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1046;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 14;
	shf.r.wrap.b32 	%r732, %r729, %r730, 14;
	mov.b64 	%rd1070, {%r732, %r731};
	shf.r.wrap.b32 	%r733, %r730, %r729, 18;
	shf.r.wrap.b32 	%r734, %r729, %r730, 18;
	mov.b64 	%rd1071, {%r734, %r733};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	shf.l.wrap.b32 	%r735, %r729, %r730, 23;
	shf.l.wrap.b32 	%r736, %r730, %r729, 23;
	mov.b64 	%rd1073, {%r736, %r735};
	xor.b64  	%rd1074, %rd1072, %rd1073;
	xor.b64  	%rd1075, %rd1637, %rd1638;
	and.b64  	%rd1076, %rd1046, %rd1075;
	xor.b64  	%rd1077, %rd1076, %rd1638;
	ld.const.u64 	%rd1078, [%rd1616+264];
	add.s64 	%rd1079, %rd1078, %rd1639;
	add.s64 	%rd1080, %rd1079, %rd1631;
	add.s64 	%rd1081, %rd1080, %rd1077;
	add.s64 	%rd1082, %rd1081, %rd1074;
	add.s64 	%rd1083, %rd1082, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1057;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 28;
	shf.r.wrap.b32 	%r740, %r737, %r738, 28;
	mov.b64 	%rd1084, {%r740, %r739};
	shf.l.wrap.b32 	%r741, %r737, %r738, 30;
	shf.l.wrap.b32 	%r742, %r738, %r737, 30;
	mov.b64 	%rd1085, {%r742, %r741};
	xor.b64  	%rd1086, %rd1084, %rd1085;
	shf.l.wrap.b32 	%r743, %r737, %r738, 25;
	shf.l.wrap.b32 	%r744, %r738, %r737, 25;
	mov.b64 	%rd1087, {%r744, %r743};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	and.b64  	%rd1089, %rd1057, %rd1633;
	or.b64  	%rd1090, %rd1057, %rd1633;
	and.b64  	%rd1091, %rd1090, %rd1634;
	or.b64  	%rd1092, %rd1091, %rd1089;
	add.s64 	%rd1093, %rd1092, %rd1088;
	add.s64 	%rd1094, %rd1093, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r745,%dummy}, %rd1630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r746}, %rd1630;
	}
	shf.r.wrap.b32 	%r747, %r746, %r745, 19;
	shf.r.wrap.b32 	%r748, %r745, %r746, 19;
	mov.b64 	%rd1095, {%r748, %r747};
	shf.l.wrap.b32 	%r749, %r745, %r746, 3;
	shf.l.wrap.b32 	%r750, %r746, %r745, 3;
	mov.b64 	%rd1096, {%r750, %r749};
	xor.b64  	%rd1097, %rd1095, %rd1096;
	shr.u64 	%rd1098, %rd1630, 6;
	xor.b64  	%rd1099, %rd1097, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r751,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd1625;
	}
	shf.r.wrap.b32 	%r753, %r752, %r751, 8;
	shf.r.wrap.b32 	%r754, %r751, %r752, 8;
	mov.b64 	%rd1100, {%r754, %r753};
	shf.r.wrap.b32 	%r755, %r752, %r751, 1;
	shf.r.wrap.b32 	%r756, %r751, %r752, 1;
	mov.b64 	%rd1101, {%r756, %r755};
	xor.b64  	%rd1102, %rd1101, %rd1100;
	shr.u64 	%rd1103, %rd1625, 7;
	xor.b64  	%rd1104, %rd1102, %rd1103;
	add.s64 	%rd1105, %rd1099, %rd1627;
	add.s64 	%rd1106, %rd1105, %rd1624;
	add.s64 	%rd1627, %rd1106, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1083;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 14;
	shf.r.wrap.b32 	%r760, %r757, %r758, 14;
	mov.b64 	%rd1107, {%r760, %r759};
	shf.r.wrap.b32 	%r761, %r758, %r757, 18;
	shf.r.wrap.b32 	%r762, %r757, %r758, 18;
	mov.b64 	%rd1108, {%r762, %r761};
	xor.b64  	%rd1109, %rd1107, %rd1108;
	shf.l.wrap.b32 	%r763, %r757, %r758, 23;
	shf.l.wrap.b32 	%r764, %r758, %r757, 23;
	mov.b64 	%rd1110, {%r764, %r763};
	xor.b64  	%rd1111, %rd1109, %rd1110;
	xor.b64  	%rd1112, %rd1046, %rd1637;
	and.b64  	%rd1113, %rd1083, %rd1112;
	xor.b64  	%rd1114, %rd1113, %rd1637;
	ld.const.u64 	%rd1115, [%rd1616+272];
	add.s64 	%rd1116, %rd1115, %rd1638;
	add.s64 	%rd1117, %rd1116, %rd1627;
	add.s64 	%rd1118, %rd1117, %rd1114;
	add.s64 	%rd1119, %rd1118, %rd1111;
	add.s64 	%rd1120, %rd1119, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd1094;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 28;
	shf.r.wrap.b32 	%r768, %r765, %r766, 28;
	mov.b64 	%rd1121, {%r768, %r767};
	shf.l.wrap.b32 	%r769, %r765, %r766, 30;
	shf.l.wrap.b32 	%r770, %r766, %r765, 30;
	mov.b64 	%rd1122, {%r770, %r769};
	xor.b64  	%rd1123, %rd1121, %rd1122;
	shf.l.wrap.b32 	%r771, %r765, %r766, 25;
	shf.l.wrap.b32 	%r772, %r766, %r765, 25;
	mov.b64 	%rd1124, {%r772, %r771};
	xor.b64  	%rd1125, %rd1123, %rd1124;
	and.b64  	%rd1126, %rd1094, %rd1057;
	or.b64  	%rd1127, %rd1094, %rd1057;
	and.b64  	%rd1128, %rd1127, %rd1633;
	or.b64  	%rd1129, %rd1128, %rd1126;
	add.s64 	%rd1130, %rd1129, %rd1125;
	add.s64 	%rd1131, %rd1130, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd1631;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 19;
	shf.r.wrap.b32 	%r776, %r773, %r774, 19;
	mov.b64 	%rd1132, {%r776, %r775};
	shf.l.wrap.b32 	%r777, %r773, %r774, 3;
	shf.l.wrap.b32 	%r778, %r774, %r773, 3;
	mov.b64 	%rd1133, {%r778, %r777};
	xor.b64  	%rd1134, %rd1132, %rd1133;
	shr.u64 	%rd1135, %rd1631, 6;
	xor.b64  	%rd1136, %rd1134, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1623;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 8;
	shf.r.wrap.b32 	%r782, %r779, %r780, 8;
	mov.b64 	%rd1137, {%r782, %r781};
	shf.r.wrap.b32 	%r783, %r780, %r779, 1;
	shf.r.wrap.b32 	%r784, %r779, %r780, 1;
	mov.b64 	%rd1138, {%r784, %r783};
	xor.b64  	%rd1139, %rd1138, %rd1137;
	shr.u64 	%rd1140, %rd1623, 7;
	xor.b64  	%rd1141, %rd1139, %rd1140;
	add.s64 	%rd1142, %rd1136, %rd1625;
	add.s64 	%rd1143, %rd1142, %rd1622;
	add.s64 	%rd1625, %rd1143, %rd1141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r785,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r786}, %rd1120;
	}
	shf.r.wrap.b32 	%r787, %r786, %r785, 14;
	shf.r.wrap.b32 	%r788, %r785, %r786, 14;
	mov.b64 	%rd1144, {%r788, %r787};
	shf.r.wrap.b32 	%r789, %r786, %r785, 18;
	shf.r.wrap.b32 	%r790, %r785, %r786, 18;
	mov.b64 	%rd1145, {%r790, %r789};
	xor.b64  	%rd1146, %rd1144, %rd1145;
	shf.l.wrap.b32 	%r791, %r785, %r786, 23;
	shf.l.wrap.b32 	%r792, %r786, %r785, 23;
	mov.b64 	%rd1147, {%r792, %r791};
	xor.b64  	%rd1148, %rd1146, %rd1147;
	xor.b64  	%rd1149, %rd1083, %rd1046;
	and.b64  	%rd1150, %rd1120, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1046;
	ld.const.u64 	%rd1152, [%rd1616+280];
	add.s64 	%rd1153, %rd1152, %rd1637;
	add.s64 	%rd1154, %rd1153, %rd1625;
	add.s64 	%rd1155, %rd1154, %rd1151;
	add.s64 	%rd1156, %rd1155, %rd1148;
	add.s64 	%rd1157, %rd1156, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd1131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd1131;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 28;
	shf.r.wrap.b32 	%r796, %r793, %r794, 28;
	mov.b64 	%rd1158, {%r796, %r795};
	shf.l.wrap.b32 	%r797, %r793, %r794, 30;
	shf.l.wrap.b32 	%r798, %r794, %r793, 30;
	mov.b64 	%rd1159, {%r798, %r797};
	xor.b64  	%rd1160, %rd1158, %rd1159;
	shf.l.wrap.b32 	%r799, %r793, %r794, 25;
	shf.l.wrap.b32 	%r800, %r794, %r793, 25;
	mov.b64 	%rd1161, {%r800, %r799};
	xor.b64  	%rd1162, %rd1160, %rd1161;
	and.b64  	%rd1163, %rd1131, %rd1094;
	or.b64  	%rd1164, %rd1131, %rd1094;
	and.b64  	%rd1165, %rd1164, %rd1057;
	or.b64  	%rd1166, %rd1165, %rd1163;
	add.s64 	%rd1167, %rd1166, %rd1162;
	add.s64 	%rd1168, %rd1167, %rd1156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r802}, %rd1627;
	}
	shf.r.wrap.b32 	%r803, %r802, %r801, 19;
	shf.r.wrap.b32 	%r804, %r801, %r802, 19;
	mov.b64 	%rd1169, {%r804, %r803};
	shf.l.wrap.b32 	%r805, %r801, %r802, 3;
	shf.l.wrap.b32 	%r806, %r802, %r801, 3;
	mov.b64 	%rd1170, {%r806, %r805};
	xor.b64  	%rd1171, %rd1169, %rd1170;
	shr.u64 	%rd1172, %rd1627, 6;
	xor.b64  	%rd1173, %rd1171, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r807,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd1621;
	}
	shf.r.wrap.b32 	%r809, %r808, %r807, 8;
	shf.r.wrap.b32 	%r810, %r807, %r808, 8;
	mov.b64 	%rd1174, {%r810, %r809};
	shf.r.wrap.b32 	%r811, %r808, %r807, 1;
	shf.r.wrap.b32 	%r812, %r807, %r808, 1;
	mov.b64 	%rd1175, {%r812, %r811};
	xor.b64  	%rd1176, %rd1175, %rd1174;
	shr.u64 	%rd1177, %rd1621, 7;
	xor.b64  	%rd1178, %rd1176, %rd1177;
	add.s64 	%rd1179, %rd1173, %rd1623;
	add.s64 	%rd1180, %rd1179, %rd1620;
	add.s64 	%rd1623, %rd1180, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd1157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd1157;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 14;
	shf.r.wrap.b32 	%r816, %r813, %r814, 14;
	mov.b64 	%rd1181, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r814, %r813, 18;
	shf.r.wrap.b32 	%r818, %r813, %r814, 18;
	mov.b64 	%rd1182, {%r818, %r817};
	xor.b64  	%rd1183, %rd1181, %rd1182;
	shf.l.wrap.b32 	%r819, %r813, %r814, 23;
	shf.l.wrap.b32 	%r820, %r814, %r813, 23;
	mov.b64 	%rd1184, {%r820, %r819};
	xor.b64  	%rd1185, %rd1183, %rd1184;
	xor.b64  	%rd1186, %rd1120, %rd1083;
	and.b64  	%rd1187, %rd1157, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1083;
	ld.const.u64 	%rd1189, [%rd1616+288];
	add.s64 	%rd1190, %rd1189, %rd1046;
	add.s64 	%rd1191, %rd1190, %rd1623;
	add.s64 	%rd1192, %rd1191, %rd1188;
	add.s64 	%rd1193, %rd1192, %rd1185;
	add.s64 	%rd1194, %rd1193, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd1168;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 28;
	shf.r.wrap.b32 	%r824, %r821, %r822, 28;
	mov.b64 	%rd1195, {%r824, %r823};
	shf.l.wrap.b32 	%r825, %r821, %r822, 30;
	shf.l.wrap.b32 	%r826, %r822, %r821, 30;
	mov.b64 	%rd1196, {%r826, %r825};
	xor.b64  	%rd1197, %rd1195, %rd1196;
	shf.l.wrap.b32 	%r827, %r821, %r822, 25;
	shf.l.wrap.b32 	%r828, %r822, %r821, 25;
	mov.b64 	%rd1198, {%r828, %r827};
	xor.b64  	%rd1199, %rd1197, %rd1198;
	and.b64  	%rd1200, %rd1168, %rd1131;
	or.b64  	%rd1201, %rd1168, %rd1131;
	and.b64  	%rd1202, %rd1201, %rd1094;
	or.b64  	%rd1203, %rd1202, %rd1200;
	add.s64 	%rd1204, %rd1203, %rd1199;
	add.s64 	%rd1205, %rd1204, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd1625;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 19;
	shf.r.wrap.b32 	%r832, %r829, %r830, 19;
	mov.b64 	%rd1206, {%r832, %r831};
	shf.l.wrap.b32 	%r833, %r829, %r830, 3;
	shf.l.wrap.b32 	%r834, %r830, %r829, 3;
	mov.b64 	%rd1207, {%r834, %r833};
	xor.b64  	%rd1208, %rd1206, %rd1207;
	shr.u64 	%rd1209, %rd1625, 6;
	xor.b64  	%rd1210, %rd1208, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1619;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 8;
	shf.r.wrap.b32 	%r838, %r835, %r836, 8;
	mov.b64 	%rd1211, {%r838, %r837};
	shf.r.wrap.b32 	%r839, %r836, %r835, 1;
	shf.r.wrap.b32 	%r840, %r835, %r836, 1;
	mov.b64 	%rd1212, {%r840, %r839};
	xor.b64  	%rd1213, %rd1212, %rd1211;
	shr.u64 	%rd1214, %rd1619, 7;
	xor.b64  	%rd1215, %rd1213, %rd1214;
	add.s64 	%rd1216, %rd1210, %rd1621;
	add.s64 	%rd1217, %rd1216, %rd1632;
	add.s64 	%rd1621, %rd1217, %rd1215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r841,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r842}, %rd1194;
	}
	shf.r.wrap.b32 	%r843, %r842, %r841, 14;
	shf.r.wrap.b32 	%r844, %r841, %r842, 14;
	mov.b64 	%rd1218, {%r844, %r843};
	shf.r.wrap.b32 	%r845, %r842, %r841, 18;
	shf.r.wrap.b32 	%r846, %r841, %r842, 18;
	mov.b64 	%rd1219, {%r846, %r845};
	xor.b64  	%rd1220, %rd1218, %rd1219;
	shf.l.wrap.b32 	%r847, %r841, %r842, 23;
	shf.l.wrap.b32 	%r848, %r842, %r841, 23;
	mov.b64 	%rd1221, {%r848, %r847};
	xor.b64  	%rd1222, %rd1220, %rd1221;
	xor.b64  	%rd1223, %rd1157, %rd1120;
	and.b64  	%rd1224, %rd1194, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1120;
	ld.const.u64 	%rd1226, [%rd1616+296];
	add.s64 	%rd1227, %rd1226, %rd1083;
	add.s64 	%rd1228, %rd1227, %rd1621;
	add.s64 	%rd1229, %rd1228, %rd1225;
	add.s64 	%rd1230, %rd1229, %rd1222;
	add.s64 	%rd1231, %rd1230, %rd1094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r849,%dummy}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r850}, %rd1205;
	}
	shf.r.wrap.b32 	%r851, %r850, %r849, 28;
	shf.r.wrap.b32 	%r852, %r849, %r850, 28;
	mov.b64 	%rd1232, {%r852, %r851};
	shf.l.wrap.b32 	%r853, %r849, %r850, 30;
	shf.l.wrap.b32 	%r854, %r850, %r849, 30;
	mov.b64 	%rd1233, {%r854, %r853};
	xor.b64  	%rd1234, %rd1232, %rd1233;
	shf.l.wrap.b32 	%r855, %r849, %r850, 25;
	shf.l.wrap.b32 	%r856, %r850, %r849, 25;
	mov.b64 	%rd1235, {%r856, %r855};
	xor.b64  	%rd1236, %rd1234, %rd1235;
	and.b64  	%rd1237, %rd1205, %rd1168;
	or.b64  	%rd1238, %rd1205, %rd1168;
	and.b64  	%rd1239, %rd1238, %rd1131;
	or.b64  	%rd1240, %rd1239, %rd1237;
	add.s64 	%rd1241, %rd1240, %rd1236;
	add.s64 	%rd1242, %rd1241, %rd1230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r857,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r858}, %rd1623;
	}
	shf.r.wrap.b32 	%r859, %r858, %r857, 19;
	shf.r.wrap.b32 	%r860, %r857, %r858, 19;
	mov.b64 	%rd1243, {%r860, %r859};
	shf.l.wrap.b32 	%r861, %r857, %r858, 3;
	shf.l.wrap.b32 	%r862, %r858, %r857, 3;
	mov.b64 	%rd1244, {%r862, %r861};
	xor.b64  	%rd1245, %rd1243, %rd1244;
	shr.u64 	%rd1246, %rd1623, 6;
	xor.b64  	%rd1247, %rd1245, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd1618;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 8;
	shf.r.wrap.b32 	%r866, %r863, %r864, 8;
	mov.b64 	%rd1248, {%r866, %r865};
	shf.r.wrap.b32 	%r867, %r864, %r863, 1;
	shf.r.wrap.b32 	%r868, %r863, %r864, 1;
	mov.b64 	%rd1249, {%r868, %r867};
	xor.b64  	%rd1250, %rd1249, %rd1248;
	shr.u64 	%rd1251, %rd1618, 7;
	xor.b64  	%rd1252, %rd1250, %rd1251;
	add.s64 	%rd1253, %rd1247, %rd1619;
	add.s64 	%rd1254, %rd1253, %rd1628;
	add.s64 	%rd1619, %rd1254, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1231;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 14;
	shf.r.wrap.b32 	%r872, %r869, %r870, 14;
	mov.b64 	%rd1255, {%r872, %r871};
	shf.r.wrap.b32 	%r873, %r870, %r869, 18;
	shf.r.wrap.b32 	%r874, %r869, %r870, 18;
	mov.b64 	%rd1256, {%r874, %r873};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	shf.l.wrap.b32 	%r875, %r869, %r870, 23;
	shf.l.wrap.b32 	%r876, %r870, %r869, 23;
	mov.b64 	%rd1258, {%r876, %r875};
	xor.b64  	%rd1259, %rd1257, %rd1258;
	xor.b64  	%rd1260, %rd1194, %rd1157;
	and.b64  	%rd1261, %rd1231, %rd1260;
	xor.b64  	%rd1262, %rd1261, %rd1157;
	ld.const.u64 	%rd1263, [%rd1616+304];
	add.s64 	%rd1264, %rd1263, %rd1120;
	add.s64 	%rd1265, %rd1264, %rd1619;
	add.s64 	%rd1266, %rd1265, %rd1262;
	add.s64 	%rd1267, %rd1266, %rd1259;
	add.s64 	%rd1268, %rd1267, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1242;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 28;
	shf.r.wrap.b32 	%r880, %r877, %r878, 28;
	mov.b64 	%rd1269, {%r880, %r879};
	shf.l.wrap.b32 	%r881, %r877, %r878, 30;
	shf.l.wrap.b32 	%r882, %r878, %r877, 30;
	mov.b64 	%rd1270, {%r882, %r881};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	shf.l.wrap.b32 	%r883, %r877, %r878, 25;
	shf.l.wrap.b32 	%r884, %r878, %r877, 25;
	mov.b64 	%rd1272, {%r884, %r883};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	and.b64  	%rd1274, %rd1242, %rd1205;
	or.b64  	%rd1275, %rd1242, %rd1205;
	and.b64  	%rd1276, %rd1275, %rd1168;
	or.b64  	%rd1277, %rd1276, %rd1274;
	add.s64 	%rd1278, %rd1277, %rd1273;
	add.s64 	%rd1279, %rd1278, %rd1267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1621;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 19;
	shf.r.wrap.b32 	%r888, %r885, %r886, 19;
	mov.b64 	%rd1280, {%r888, %r887};
	shf.l.wrap.b32 	%r889, %r885, %r886, 3;
	shf.l.wrap.b32 	%r890, %r886, %r885, 3;
	mov.b64 	%rd1281, {%r890, %r889};
	xor.b64  	%rd1282, %rd1280, %rd1281;
	shr.u64 	%rd1283, %rd1621, 6;
	xor.b64  	%rd1284, %rd1282, %rd1283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd1617;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 8;
	shf.r.wrap.b32 	%r894, %r891, %r892, 8;
	mov.b64 	%rd1285, {%r894, %r893};
	shf.r.wrap.b32 	%r895, %r892, %r891, 1;
	shf.r.wrap.b32 	%r896, %r891, %r892, 1;
	mov.b64 	%rd1286, {%r896, %r895};
	xor.b64  	%rd1287, %rd1286, %rd1285;
	shr.u64 	%rd1288, %rd1617, 7;
	xor.b64  	%rd1289, %rd1287, %rd1288;
	add.s64 	%rd1290, %rd1284, %rd1618;
	add.s64 	%rd1291, %rd1290, %rd1630;
	add.s64 	%rd1618, %rd1291, %rd1289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r897,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r898}, %rd1268;
	}
	shf.r.wrap.b32 	%r899, %r898, %r897, 14;
	shf.r.wrap.b32 	%r900, %r897, %r898, 14;
	mov.b64 	%rd1292, {%r900, %r899};
	shf.r.wrap.b32 	%r901, %r898, %r897, 18;
	shf.r.wrap.b32 	%r902, %r897, %r898, 18;
	mov.b64 	%rd1293, {%r902, %r901};
	xor.b64  	%rd1294, %rd1292, %rd1293;
	shf.l.wrap.b32 	%r903, %r897, %r898, 23;
	shf.l.wrap.b32 	%r904, %r898, %r897, 23;
	mov.b64 	%rd1295, {%r904, %r903};
	xor.b64  	%rd1296, %rd1294, %rd1295;
	xor.b64  	%rd1297, %rd1231, %rd1194;
	and.b64  	%rd1298, %rd1268, %rd1297;
	xor.b64  	%rd1299, %rd1298, %rd1194;
	ld.const.u64 	%rd1300, [%rd1616+312];
	add.s64 	%rd1301, %rd1300, %rd1157;
	add.s64 	%rd1302, %rd1301, %rd1618;
	add.s64 	%rd1303, %rd1302, %rd1299;
	add.s64 	%rd1304, %rd1303, %rd1296;
	add.s64 	%rd1305, %rd1304, %rd1168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r905,%dummy}, %rd1279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r906}, %rd1279;
	}
	shf.r.wrap.b32 	%r907, %r906, %r905, 28;
	shf.r.wrap.b32 	%r908, %r905, %r906, 28;
	mov.b64 	%rd1306, {%r908, %r907};
	shf.l.wrap.b32 	%r909, %r905, %r906, 30;
	shf.l.wrap.b32 	%r910, %r906, %r905, 30;
	mov.b64 	%rd1307, {%r910, %r909};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	shf.l.wrap.b32 	%r911, %r905, %r906, 25;
	shf.l.wrap.b32 	%r912, %r906, %r905, 25;
	mov.b64 	%rd1309, {%r912, %r911};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	and.b64  	%rd1311, %rd1279, %rd1242;
	or.b64  	%rd1312, %rd1279, %rd1242;
	and.b64  	%rd1313, %rd1312, %rd1205;
	or.b64  	%rd1314, %rd1313, %rd1311;
	add.s64 	%rd1315, %rd1314, %rd1310;
	add.s64 	%rd1316, %rd1315, %rd1304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1619;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 19;
	shf.r.wrap.b32 	%r916, %r913, %r914, 19;
	mov.b64 	%rd1317, {%r916, %r915};
	shf.l.wrap.b32 	%r917, %r913, %r914, 3;
	shf.l.wrap.b32 	%r918, %r914, %r913, 3;
	mov.b64 	%rd1318, {%r918, %r917};
	xor.b64  	%rd1319, %rd1317, %rd1318;
	shr.u64 	%rd1320, %rd1619, 6;
	xor.b64  	%rd1321, %rd1319, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1629;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 8;
	shf.r.wrap.b32 	%r922, %r919, %r920, 8;
	mov.b64 	%rd1322, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 1;
	shf.r.wrap.b32 	%r924, %r919, %r920, 1;
	mov.b64 	%rd1323, {%r924, %r923};
	xor.b64  	%rd1324, %rd1323, %rd1322;
	shr.u64 	%rd1325, %rd1629, 7;
	xor.b64  	%rd1326, %rd1324, %rd1325;
	add.s64 	%rd1327, %rd1321, %rd1617;
	add.s64 	%rd1328, %rd1327, %rd1631;
	add.s64 	%rd1617, %rd1328, %rd1326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd1305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd1305;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 14;
	shf.r.wrap.b32 	%r928, %r925, %r926, 14;
	mov.b64 	%rd1329, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 18;
	shf.r.wrap.b32 	%r930, %r925, %r926, 18;
	mov.b64 	%rd1330, {%r930, %r929};
	xor.b64  	%rd1331, %rd1329, %rd1330;
	shf.l.wrap.b32 	%r931, %r925, %r926, 23;
	shf.l.wrap.b32 	%r932, %r926, %r925, 23;
	mov.b64 	%rd1332, {%r932, %r931};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	xor.b64  	%rd1334, %rd1268, %rd1231;
	and.b64  	%rd1335, %rd1305, %rd1334;
	xor.b64  	%rd1336, %rd1335, %rd1231;
	ld.const.u64 	%rd1337, [%rd1616+320];
	add.s64 	%rd1338, %rd1337, %rd1194;
	add.s64 	%rd1339, %rd1338, %rd1617;
	add.s64 	%rd1340, %rd1339, %rd1336;
	add.s64 	%rd1341, %rd1340, %rd1333;
	add.s64 	%rd1342, %rd1341, %rd1205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1316;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 28;
	shf.r.wrap.b32 	%r936, %r933, %r934, 28;
	mov.b64 	%rd1343, {%r936, %r935};
	shf.l.wrap.b32 	%r937, %r933, %r934, 30;
	shf.l.wrap.b32 	%r938, %r934, %r933, 30;
	mov.b64 	%rd1344, {%r938, %r937};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	shf.l.wrap.b32 	%r939, %r933, %r934, 25;
	shf.l.wrap.b32 	%r940, %r934, %r933, 25;
	mov.b64 	%rd1346, {%r940, %r939};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	and.b64  	%rd1348, %rd1316, %rd1279;
	or.b64  	%rd1349, %rd1316, %rd1279;
	and.b64  	%rd1350, %rd1349, %rd1242;
	or.b64  	%rd1351, %rd1350, %rd1348;
	add.s64 	%rd1352, %rd1351, %rd1347;
	add.s64 	%rd1353, %rd1352, %rd1341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1618;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 19;
	shf.r.wrap.b32 	%r944, %r941, %r942, 19;
	mov.b64 	%rd1354, {%r944, %r943};
	shf.l.wrap.b32 	%r945, %r941, %r942, 3;
	shf.l.wrap.b32 	%r946, %r942, %r941, 3;
	mov.b64 	%rd1355, {%r946, %r945};
	xor.b64  	%rd1356, %rd1354, %rd1355;
	shr.u64 	%rd1357, %rd1618, 6;
	xor.b64  	%rd1358, %rd1356, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd1626;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 8;
	shf.r.wrap.b32 	%r950, %r947, %r948, 8;
	mov.b64 	%rd1359, {%r950, %r949};
	shf.r.wrap.b32 	%r951, %r948, %r947, 1;
	shf.r.wrap.b32 	%r952, %r947, %r948, 1;
	mov.b64 	%rd1360, {%r952, %r951};
	xor.b64  	%rd1361, %rd1360, %rd1359;
	shr.u64 	%rd1362, %rd1626, 7;
	xor.b64  	%rd1363, %rd1361, %rd1362;
	add.s64 	%rd1364, %rd1358, %rd1629;
	add.s64 	%rd1365, %rd1364, %rd1627;
	add.s64 	%rd1629, %rd1365, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r953,%dummy}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r954}, %rd1342;
	}
	shf.r.wrap.b32 	%r955, %r954, %r953, 14;
	shf.r.wrap.b32 	%r956, %r953, %r954, 14;
	mov.b64 	%rd1366, {%r956, %r955};
	shf.r.wrap.b32 	%r957, %r954, %r953, 18;
	shf.r.wrap.b32 	%r958, %r953, %r954, 18;
	mov.b64 	%rd1367, {%r958, %r957};
	xor.b64  	%rd1368, %rd1366, %rd1367;
	shf.l.wrap.b32 	%r959, %r953, %r954, 23;
	shf.l.wrap.b32 	%r960, %r954, %r953, 23;
	mov.b64 	%rd1369, {%r960, %r959};
	xor.b64  	%rd1370, %rd1368, %rd1369;
	xor.b64  	%rd1371, %rd1305, %rd1268;
	and.b64  	%rd1372, %rd1342, %rd1371;
	xor.b64  	%rd1373, %rd1372, %rd1268;
	ld.const.u64 	%rd1374, [%rd1616+328];
	add.s64 	%rd1375, %rd1374, %rd1231;
	add.s64 	%rd1376, %rd1375, %rd1629;
	add.s64 	%rd1377, %rd1376, %rd1373;
	add.s64 	%rd1378, %rd1377, %rd1370;
	add.s64 	%rd1379, %rd1378, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r961,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r962}, %rd1353;
	}
	shf.r.wrap.b32 	%r963, %r962, %r961, 28;
	shf.r.wrap.b32 	%r964, %r961, %r962, 28;
	mov.b64 	%rd1380, {%r964, %r963};
	shf.l.wrap.b32 	%r965, %r961, %r962, 30;
	shf.l.wrap.b32 	%r966, %r962, %r961, 30;
	mov.b64 	%rd1381, {%r966, %r965};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	shf.l.wrap.b32 	%r967, %r961, %r962, 25;
	shf.l.wrap.b32 	%r968, %r962, %r961, 25;
	mov.b64 	%rd1383, {%r968, %r967};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	and.b64  	%rd1385, %rd1353, %rd1316;
	or.b64  	%rd1386, %rd1353, %rd1316;
	and.b64  	%rd1387, %rd1386, %rd1279;
	or.b64  	%rd1388, %rd1387, %rd1385;
	add.s64 	%rd1389, %rd1388, %rd1384;
	add.s64 	%rd1390, %rd1389, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r969,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r970}, %rd1617;
	}
	shf.r.wrap.b32 	%r971, %r970, %r969, 19;
	shf.r.wrap.b32 	%r972, %r969, %r970, 19;
	mov.b64 	%rd1391, {%r972, %r971};
	shf.l.wrap.b32 	%r973, %r969, %r970, 3;
	shf.l.wrap.b32 	%r974, %r970, %r969, 3;
	mov.b64 	%rd1392, {%r974, %r973};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	shr.u64 	%rd1394, %rd1617, 6;
	xor.b64  	%rd1395, %rd1393, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1624;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 8;
	shf.r.wrap.b32 	%r978, %r975, %r976, 8;
	mov.b64 	%rd1396, {%r978, %r977};
	shf.r.wrap.b32 	%r979, %r976, %r975, 1;
	shf.r.wrap.b32 	%r980, %r975, %r976, 1;
	mov.b64 	%rd1397, {%r980, %r979};
	xor.b64  	%rd1398, %rd1397, %rd1396;
	shr.u64 	%rd1399, %rd1624, 7;
	xor.b64  	%rd1400, %rd1398, %rd1399;
	add.s64 	%rd1401, %rd1395, %rd1626;
	add.s64 	%rd1402, %rd1401, %rd1625;
	add.s64 	%rd1626, %rd1402, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1379;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 14;
	shf.r.wrap.b32 	%r984, %r981, %r982, 14;
	mov.b64 	%rd1403, {%r984, %r983};
	shf.r.wrap.b32 	%r985, %r982, %r981, 18;
	shf.r.wrap.b32 	%r986, %r981, %r982, 18;
	mov.b64 	%rd1404, {%r986, %r985};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	shf.l.wrap.b32 	%r987, %r981, %r982, 23;
	shf.l.wrap.b32 	%r988, %r982, %r981, 23;
	mov.b64 	%rd1406, {%r988, %r987};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	xor.b64  	%rd1408, %rd1342, %rd1305;
	and.b64  	%rd1409, %rd1379, %rd1408;
	xor.b64  	%rd1410, %rd1409, %rd1305;
	ld.const.u64 	%rd1411, [%rd1616+336];
	add.s64 	%rd1412, %rd1411, %rd1268;
	add.s64 	%rd1413, %rd1412, %rd1626;
	add.s64 	%rd1414, %rd1413, %rd1410;
	add.s64 	%rd1415, %rd1414, %rd1407;
	add.s64 	%rd1416, %rd1415, %rd1279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1390;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 28;
	shf.r.wrap.b32 	%r992, %r989, %r990, 28;
	mov.b64 	%rd1417, {%r992, %r991};
	shf.l.wrap.b32 	%r993, %r989, %r990, 30;
	shf.l.wrap.b32 	%r994, %r990, %r989, 30;
	mov.b64 	%rd1418, {%r994, %r993};
	xor.b64  	%rd1419, %rd1417, %rd1418;
	shf.l.wrap.b32 	%r995, %r989, %r990, 25;
	shf.l.wrap.b32 	%r996, %r990, %r989, 25;
	mov.b64 	%rd1420, {%r996, %r995};
	xor.b64  	%rd1421, %rd1419, %rd1420;
	and.b64  	%rd1422, %rd1390, %rd1353;
	or.b64  	%rd1423, %rd1390, %rd1353;
	and.b64  	%rd1424, %rd1423, %rd1316;
	or.b64  	%rd1425, %rd1424, %rd1422;
	add.s64 	%rd1426, %rd1425, %rd1421;
	add.s64 	%rd1427, %rd1426, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1629;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 19;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 19;
	mov.b64 	%rd1428, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 3;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 3;
	mov.b64 	%rd1429, {%r1002, %r1001};
	xor.b64  	%rd1430, %rd1428, %rd1429;
	shr.u64 	%rd1431, %rd1629, 6;
	xor.b64  	%rd1432, %rd1430, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1003,%dummy}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1004}, %rd1622;
	}
	shf.r.wrap.b32 	%r1005, %r1004, %r1003, 8;
	shf.r.wrap.b32 	%r1006, %r1003, %r1004, 8;
	mov.b64 	%rd1433, {%r1006, %r1005};
	shf.r.wrap.b32 	%r1007, %r1004, %r1003, 1;
	shf.r.wrap.b32 	%r1008, %r1003, %r1004, 1;
	mov.b64 	%rd1434, {%r1008, %r1007};
	xor.b64  	%rd1435, %rd1434, %rd1433;
	shr.u64 	%rd1436, %rd1622, 7;
	xor.b64  	%rd1437, %rd1435, %rd1436;
	add.s64 	%rd1438, %rd1432, %rd1624;
	add.s64 	%rd1439, %rd1438, %rd1623;
	add.s64 	%rd1624, %rd1439, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd1416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd1416;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 14;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 14;
	mov.b64 	%rd1440, {%r1012, %r1011};
	shf.r.wrap.b32 	%r1013, %r1010, %r1009, 18;
	shf.r.wrap.b32 	%r1014, %r1009, %r1010, 18;
	mov.b64 	%rd1441, {%r1014, %r1013};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	shf.l.wrap.b32 	%r1015, %r1009, %r1010, 23;
	shf.l.wrap.b32 	%r1016, %r1010, %r1009, 23;
	mov.b64 	%rd1443, {%r1016, %r1015};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	xor.b64  	%rd1445, %rd1379, %rd1342;
	and.b64  	%rd1446, %rd1416, %rd1445;
	xor.b64  	%rd1447, %rd1446, %rd1342;
	ld.const.u64 	%rd1448, [%rd1616+344];
	add.s64 	%rd1449, %rd1448, %rd1305;
	add.s64 	%rd1450, %rd1449, %rd1624;
	add.s64 	%rd1451, %rd1450, %rd1447;
	add.s64 	%rd1452, %rd1451, %rd1444;
	add.s64 	%rd1453, %rd1452, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd1427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd1427;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 28;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 28;
	mov.b64 	%rd1454, {%r1020, %r1019};
	shf.l.wrap.b32 	%r1021, %r1017, %r1018, 30;
	shf.l.wrap.b32 	%r1022, %r1018, %r1017, 30;
	mov.b64 	%rd1455, {%r1022, %r1021};
	xor.b64  	%rd1456, %rd1454, %rd1455;
	shf.l.wrap.b32 	%r1023, %r1017, %r1018, 25;
	shf.l.wrap.b32 	%r1024, %r1018, %r1017, 25;
	mov.b64 	%rd1457, {%r1024, %r1023};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	and.b64  	%rd1459, %rd1427, %rd1390;
	or.b64  	%rd1460, %rd1427, %rd1390;
	and.b64  	%rd1461, %rd1460, %rd1353;
	or.b64  	%rd1462, %rd1461, %rd1459;
	add.s64 	%rd1463, %rd1462, %rd1458;
	add.s64 	%rd1464, %rd1463, %rd1452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd1626;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 19;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 19;
	mov.b64 	%rd1465, {%r1028, %r1027};
	shf.l.wrap.b32 	%r1029, %r1025, %r1026, 3;
	shf.l.wrap.b32 	%r1030, %r1026, %r1025, 3;
	mov.b64 	%rd1466, {%r1030, %r1029};
	xor.b64  	%rd1467, %rd1465, %rd1466;
	shr.u64 	%rd1468, %rd1626, 6;
	xor.b64  	%rd1469, %rd1467, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1620;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 8;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 8;
	mov.b64 	%rd1470, {%r1034, %r1033};
	shf.r.wrap.b32 	%r1035, %r1032, %r1031, 1;
	shf.r.wrap.b32 	%r1036, %r1031, %r1032, 1;
	mov.b64 	%rd1471, {%r1036, %r1035};
	xor.b64  	%rd1472, %rd1471, %rd1470;
	shr.u64 	%rd1473, %rd1620, 7;
	xor.b64  	%rd1474, %rd1472, %rd1473;
	add.s64 	%rd1475, %rd1469, %rd1622;
	add.s64 	%rd1476, %rd1475, %rd1621;
	add.s64 	%rd1622, %rd1476, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd1453;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1477, {%r1040, %r1039};
	shf.r.wrap.b32 	%r1041, %r1038, %r1037, 18;
	shf.r.wrap.b32 	%r1042, %r1037, %r1038, 18;
	mov.b64 	%rd1478, {%r1042, %r1041};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	shf.l.wrap.b32 	%r1043, %r1037, %r1038, 23;
	shf.l.wrap.b32 	%r1044, %r1038, %r1037, 23;
	mov.b64 	%rd1480, {%r1044, %r1043};
	xor.b64  	%rd1481, %rd1479, %rd1480;
	xor.b64  	%rd1482, %rd1416, %rd1379;
	and.b64  	%rd1483, %rd1453, %rd1482;
	xor.b64  	%rd1484, %rd1483, %rd1379;
	ld.const.u64 	%rd1485, [%rd1616+352];
	add.s64 	%rd1486, %rd1485, %rd1342;
	add.s64 	%rd1487, %rd1486, %rd1622;
	add.s64 	%rd1488, %rd1487, %rd1484;
	add.s64 	%rd1489, %rd1488, %rd1481;
	add.s64 	%rd1640, %rd1489, %rd1353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd1464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd1464;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 28;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 28;
	mov.b64 	%rd1490, {%r1048, %r1047};
	shf.l.wrap.b32 	%r1049, %r1045, %r1046, 30;
	shf.l.wrap.b32 	%r1050, %r1046, %r1045, 30;
	mov.b64 	%rd1491, {%r1050, %r1049};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	shf.l.wrap.b32 	%r1051, %r1045, %r1046, 25;
	shf.l.wrap.b32 	%r1052, %r1046, %r1045, 25;
	mov.b64 	%rd1493, {%r1052, %r1051};
	xor.b64  	%rd1494, %rd1492, %rd1493;
	and.b64  	%rd1495, %rd1464, %rd1427;
	or.b64  	%rd1496, %rd1464, %rd1427;
	and.b64  	%rd1497, %rd1496, %rd1390;
	or.b64  	%rd1498, %rd1497, %rd1495;
	add.s64 	%rd1499, %rd1498, %rd1494;
	add.s64 	%rd1636, %rd1499, %rd1489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1624;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 19;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 19;
	mov.b64 	%rd1500, {%r1056, %r1055};
	shf.l.wrap.b32 	%r1057, %r1053, %r1054, 3;
	shf.l.wrap.b32 	%r1058, %r1054, %r1053, 3;
	mov.b64 	%rd1501, {%r1058, %r1057};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	shr.u64 	%rd1503, %rd1624, 6;
	xor.b64  	%rd1504, %rd1502, %rd1503;
	shf.r.wrap.b32 	%r1059, %r689, %r690, 8;
	shf.r.wrap.b32 	%r1060, %r690, %r689, 8;
	mov.b64 	%rd1505, {%r1060, %r1059};
	shf.r.wrap.b32 	%r1061, %r689, %r690, 1;
	shf.r.wrap.b32 	%r1062, %r690, %r689, 1;
	mov.b64 	%rd1506, {%r1062, %r1061};
	xor.b64  	%rd1507, %rd1506, %rd1505;
	shr.u64 	%rd1508, %rd1632, 7;
	xor.b64  	%rd1509, %rd1507, %rd1508;
	add.s64 	%rd1510, %rd1504, %rd1620;
	add.s64 	%rd1511, %rd1510, %rd1619;
	add.s64 	%rd1620, %rd1511, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1640;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 14;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 14;
	mov.b64 	%rd1512, {%r1066, %r1065};
	shf.r.wrap.b32 	%r1067, %r1064, %r1063, 18;
	shf.r.wrap.b32 	%r1068, %r1063, %r1064, 18;
	mov.b64 	%rd1513, {%r1068, %r1067};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 23;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 23;
	mov.b64 	%rd1515, {%r1070, %r1069};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	xor.b64  	%rd1517, %rd1453, %rd1416;
	and.b64  	%rd1518, %rd1640, %rd1517;
	xor.b64  	%rd1519, %rd1518, %rd1416;
	ld.const.u64 	%rd1520, [%rd1616+360];
	add.s64 	%rd1521, %rd1520, %rd1379;
	add.s64 	%rd1522, %rd1521, %rd1620;
	add.s64 	%rd1523, %rd1522, %rd1519;
	add.s64 	%rd1524, %rd1523, %rd1516;
	add.s64 	%rd1639, %rd1524, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd1636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1072}, %rd1636;
	}
	shf.r.wrap.b32 	%r1073, %r1072, %r1071, 28;
	shf.r.wrap.b32 	%r1074, %r1071, %r1072, 28;
	mov.b64 	%rd1525, {%r1074, %r1073};
	shf.l.wrap.b32 	%r1075, %r1071, %r1072, 30;
	shf.l.wrap.b32 	%r1076, %r1072, %r1071, 30;
	mov.b64 	%rd1526, {%r1076, %r1075};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	shf.l.wrap.b32 	%r1077, %r1071, %r1072, 25;
	shf.l.wrap.b32 	%r1078, %r1072, %r1071, 25;
	mov.b64 	%rd1528, {%r1078, %r1077};
	xor.b64  	%rd1529, %rd1527, %rd1528;
	and.b64  	%rd1530, %rd1636, %rd1464;
	or.b64  	%rd1531, %rd1636, %rd1464;
	and.b64  	%rd1532, %rd1531, %rd1427;
	or.b64  	%rd1533, %rd1532, %rd1530;
	add.s64 	%rd1534, %rd1533, %rd1529;
	add.s64 	%rd1635, %rd1534, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1622;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 19;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 19;
	mov.b64 	%rd1535, {%r1082, %r1081};
	shf.l.wrap.b32 	%r1083, %r1079, %r1080, 3;
	shf.l.wrap.b32 	%r1084, %r1080, %r1079, 3;
	mov.b64 	%rd1536, {%r1084, %r1083};
	xor.b64  	%rd1537, %rd1535, %rd1536;
	shr.u64 	%rd1538, %rd1622, 6;
	xor.b64  	%rd1539, %rd1537, %rd1538;
	shf.r.wrap.b32 	%r1085, %r717, %r718, 8;
	shf.r.wrap.b32 	%r1086, %r718, %r717, 8;
	mov.b64 	%rd1540, {%r1086, %r1085};
	shf.r.wrap.b32 	%r1087, %r717, %r718, 1;
	shf.r.wrap.b32 	%r1088, %r718, %r717, 1;
	mov.b64 	%rd1541, {%r1088, %r1087};
	xor.b64  	%rd1542, %rd1541, %rd1540;
	shr.u64 	%rd1543, %rd1628, 7;
	xor.b64  	%rd1544, %rd1542, %rd1543;
	add.s64 	%rd1545, %rd1539, %rd1632;
	add.s64 	%rd1546, %rd1545, %rd1618;
	add.s64 	%rd1632, %rd1546, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd1639;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 14;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 14;
	mov.b64 	%rd1547, {%r1092, %r1091};
	shf.r.wrap.b32 	%r1093, %r1090, %r1089, 18;
	shf.r.wrap.b32 	%r1094, %r1089, %r1090, 18;
	mov.b64 	%rd1548, {%r1094, %r1093};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	shf.l.wrap.b32 	%r1095, %r1089, %r1090, 23;
	shf.l.wrap.b32 	%r1096, %r1090, %r1089, 23;
	mov.b64 	%rd1550, {%r1096, %r1095};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1640, %rd1453;
	and.b64  	%rd1553, %rd1639, %rd1552;
	xor.b64  	%rd1554, %rd1553, %rd1453;
	ld.const.u64 	%rd1555, [%rd1616+368];
	add.s64 	%rd1556, %rd1555, %rd1416;
	add.s64 	%rd1557, %rd1556, %rd1632;
	add.s64 	%rd1558, %rd1557, %rd1554;
	add.s64 	%rd1559, %rd1558, %rd1551;
	add.s64 	%rd1638, %rd1559, %rd1427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd1635;
	}
	shf.r.wrap.b32 	%r1099, %r1098, %r1097, 28;
	shf.r.wrap.b32 	%r1100, %r1097, %r1098, 28;
	mov.b64 	%rd1560, {%r1100, %r1099};
	shf.l.wrap.b32 	%r1101, %r1097, %r1098, 30;
	shf.l.wrap.b32 	%r1102, %r1098, %r1097, 30;
	mov.b64 	%rd1561, {%r1102, %r1101};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	shf.l.wrap.b32 	%r1103, %r1097, %r1098, 25;
	shf.l.wrap.b32 	%r1104, %r1098, %r1097, 25;
	mov.b64 	%rd1563, {%r1104, %r1103};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	and.b64  	%rd1565, %rd1635, %rd1636;
	or.b64  	%rd1566, %rd1635, %rd1636;
	and.b64  	%rd1567, %rd1566, %rd1464;
	or.b64  	%rd1568, %rd1567, %rd1565;
	add.s64 	%rd1569, %rd1568, %rd1564;
	add.s64 	%rd1634, %rd1569, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1620;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 19;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 19;
	mov.b64 	%rd1570, {%r1108, %r1107};
	shf.l.wrap.b32 	%r1109, %r1105, %r1106, 3;
	shf.l.wrap.b32 	%r1110, %r1106, %r1105, 3;
	mov.b64 	%rd1571, {%r1110, %r1109};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	shr.u64 	%rd1573, %rd1620, 6;
	xor.b64  	%rd1574, %rd1572, %rd1573;
	shf.r.wrap.b32 	%r1111, %r746, %r745, 1;
	shf.r.wrap.b32 	%r1112, %r745, %r746, 1;
	mov.b64 	%rd1575, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r746, %r745, 8;
	shf.r.wrap.b32 	%r1114, %r745, %r746, 8;
	mov.b64 	%rd1576, {%r1114, %r1113};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	shr.u64 	%rd1578, %rd1630, 7;
	xor.b64  	%rd1579, %rd1577, %rd1578;
	add.s64 	%rd1580, %rd1574, %rd1628;
	add.s64 	%rd1581, %rd1580, %rd1617;
	add.s64 	%rd1628, %rd1581, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd1638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd1638;
	}
	shf.r.wrap.b32 	%r1117, %r1116, %r1115, 14;
	shf.r.wrap.b32 	%r1118, %r1115, %r1116, 14;
	mov.b64 	%rd1582, {%r1118, %r1117};
	shf.r.wrap.b32 	%r1119, %r1116, %r1115, 18;
	shf.r.wrap.b32 	%r1120, %r1115, %r1116, 18;
	mov.b64 	%rd1583, {%r1120, %r1119};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	shf.l.wrap.b32 	%r1121, %r1115, %r1116, 23;
	shf.l.wrap.b32 	%r1122, %r1116, %r1115, 23;
	mov.b64 	%rd1585, {%r1122, %r1121};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1639, %rd1640;
	and.b64  	%rd1588, %rd1638, %rd1587;
	xor.b64  	%rd1589, %rd1588, %rd1640;
	ld.const.u64 	%rd1590, [%rd1616+376];
	add.s64 	%rd1591, %rd1590, %rd1453;
	add.s64 	%rd1592, %rd1591, %rd1628;
	add.s64 	%rd1593, %rd1592, %rd1589;
	add.s64 	%rd1594, %rd1593, %rd1586;
	add.s64 	%rd1637, %rd1594, %rd1464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd1634;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 28;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 28;
	mov.b64 	%rd1595, {%r1126, %r1125};
	shf.l.wrap.b32 	%r1127, %r1123, %r1124, 30;
	shf.l.wrap.b32 	%r1128, %r1124, %r1123, 30;
	mov.b64 	%rd1596, {%r1128, %r1127};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	shf.l.wrap.b32 	%r1129, %r1123, %r1124, 25;
	shf.l.wrap.b32 	%r1130, %r1124, %r1123, 25;
	mov.b64 	%rd1598, {%r1130, %r1129};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	and.b64  	%rd1600, %rd1634, %rd1635;
	or.b64  	%rd1601, %rd1634, %rd1635;
	and.b64  	%rd1602, %rd1601, %rd1636;
	or.b64  	%rd1603, %rd1602, %rd1600;
	add.s64 	%rd1604, %rd1603, %rd1599;
	add.s64 	%rd1633, %rd1604, %rd1594;
	add.s64 	%rd1616, %rd1616, 128;
	add.s32 	%r1139, %r1139, 16;
	setp.lt.u32 	%p1, %r1139, 65;
	@%p1 bra 	$L__BB5_2;

	add.s64 	%rd1615, %rd1633, 7640891576956012808;
	add.s64 	%rd1614, %rd1634, -4942790177534073029;
	add.s64 	%rd1613, %rd1635, 4354685564936845355;
	add.s64 	%rd1612, %rd1636, -6534734903238641935;
	add.s64 	%rd1611, %rd1637, 5840696475078001361;
	add.s64 	%rd1610, %rd1638, -7276294671716946913;
	add.s64 	%rd1609, %rd1639, 2270897969802886507;
	add.s64 	%rd1608, %rd1640, 6620516959819538809;
	add.s32 	%r1138, %r1138, 1;
	setp.lt.u32 	%p2, %r1138, 500;
	@%p2 bra 	$L__BB5_1;

	mov.b32 	%r1137, %envreg3;
	mov.u32 	%r1136, %tid.x;
	add.s32 	%r1135, %r1136, %r1137;
	mov.u32 	%r1134, %ctaid.x;
	mov.u32 	%r1133, %ntid.x;
	mad.lo.s32 	%r1132, %r1133, %r1134, %r1135;
	mul.wide.u32 	%rd1607, %r1132, 72;
	ld.param.u64 	%rd1606, [HashLoop13_param_0];
	add.s64 	%rd1605, %rd1606, %rd1607;
	st.global.u64 	[%rd1605+8], %rd1615;
	st.global.u64 	[%rd1605+16], %rd1614;
	st.global.u64 	[%rd1605+24], %rd1613;
	st.global.u64 	[%rd1605+32], %rd1612;
	st.global.u64 	[%rd1605+40], %rd1611;
	st.global.u64 	[%rd1605+48], %rd1610;
	st.global.u64 	[%rd1605+56], %rd1609;
	st.global.u64 	[%rd1605+64], %rd1608;
	add.s32 	%r1131, %r1, 500;
	st.global.u32 	[%rd1605], %r1131;
	ret;

}
	// .globl	Generate2013key
.entry Generate2013key(
	.param .u64 .ptr .global .align 8 Generate2013key_param_0,
	.param .u64 .ptr .global .align 4 Generate2013key_param_1,
	.param .u64 .ptr .const .align 8 Generate2013key_param_2,
	.param .u64 .ptr .const .align 1 Generate2013key_param_3
)
{
	.local .align 16 .b8 	__local_depot6[1280];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<119>;
	.reg .b16 	%rs<149>;
	.reg .b32 	%r<12696>;
	.reg .b64 	%rd<9575>;


	mov.u64 	%SPL, __local_depot6;
	ld.param.u64 	%rd177, [Generate2013key_param_0];
	ld.param.u64 	%rd178, [Generate2013key_param_2];
	add.u64 	%rd1, %SPL, 736;
	mov.u32 	%r162, %ctaid.x;
	mov.u32 	%r163, %ntid.x;
	mov.u32 	%r164, %tid.x;
	mov.b32 	%r165, %envreg3;
	add.s32 	%r166, %r164, %r165;
	mad.lo.s32 	%r167, %r163, %r162, %r166;
	mul.wide.u32 	%rd180, %r167, 72;
	add.s64 	%rd181, %rd177, %rd180;
	ld.global.u32 	%r1, [%rd181];
	add.s64 	%rd3, %rd178, 32;
	ld.const.u32 	%r168, [%rd178+32];
	ld.global.u64 	%rd9530, [%rd181+8];
	ld.global.u64 	%rd9529, [%rd181+16];
	st.local.v2.u64 	[%rd1], {%rd9530, %rd9529};
	ld.global.u64 	%rd9528, [%rd181+24];
	ld.global.u64 	%rd9527, [%rd181+32];
	st.local.v2.u64 	[%rd1+16], {%rd9528, %rd9527};
	ld.global.u64 	%rd9526, [%rd181+40];
	ld.global.u64 	%rd9525, [%rd181+48];
	st.local.v2.u64 	[%rd1+32], {%rd9526, %rd9525};
	ld.global.u64 	%rd9524, [%rd181+56];
	ld.global.u64 	%rd9523, [%rd181+64];
	st.local.v2.u64 	[%rd1+48], {%rd9524, %rd9523};
	add.u64 	%rd12, %SPL, 0;
	add.u64 	%rd13, %SPL, 1024;
	add.u64 	%rd14, %SPL, 1264;
	mul.wide.u32 	%rd186, %r168, 274877907;
	shr.u64 	%rd187, %rd186, 37;
	cvt.u32.u64 	%r169, %rd187;
	mul.lo.s32 	%r170, %r169, 500;
	sub.s32 	%r2, %r168, %r170;
	setp.eq.s32 	%p2, %r2, 0;
	@%p2 bra 	$L__BB6_6;

	mov.u64 	%rd188, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd188;
	}
	shf.r.wrap.b32 	%r174, %r173, %r172, 14;
	shf.r.wrap.b32 	%r175, %r172, %r173, 14;
	mov.b64 	%rd189, {%r175, %r174};
	shf.r.wrap.b32 	%r176, %r173, %r172, 18;
	shf.r.wrap.b32 	%r177, %r172, %r173, 18;
	mov.b64 	%rd190, {%r177, %r176};
	xor.b64  	%rd191, %rd189, %rd190;
	shf.l.wrap.b32 	%r178, %r172, %r173, 23;
	shf.l.wrap.b32 	%r179, %r173, %r172, 23;
	mov.b64 	%rd192, {%r179, %r178};
	xor.b64  	%rd193, %rd191, %rd192;
	add.s64 	%rd16, %rd193, -7031530027109396581;
	mov.u64 	%rd194, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd194;
	}
	shf.l.wrap.b32 	%r182, %r181, %r180, 30;
	shf.l.wrap.b32 	%r183, %r180, %r181, 30;
	mov.b64 	%rd195, {%r183, %r182};
	shf.r.wrap.b32 	%r184, %r180, %r181, 28;
	shf.r.wrap.b32 	%r185, %r181, %r180, 28;
	mov.b64 	%rd196, {%r185, %r184};
	xor.b64  	%rd197, %rd196, %rd195;
	shf.l.wrap.b32 	%r186, %r181, %r180, 25;
	shf.l.wrap.b32 	%r187, %r180, %r181, 25;
	mov.b64 	%rd198, {%r187, %r186};
	xor.b64  	%rd199, %rd197, %rd198;
	add.s64 	%rd17, %rd199, 6482280703085258342;
	mov.u64 	%rd200, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd200;
	}
	shf.l.wrap.b32 	%r190, %r189, %r188, 3;
	shf.l.wrap.b32 	%r191, %r188, %r189, 3;
	mov.b64 	%rd201, {%r191, %r190};
	shf.r.wrap.b32 	%r192, %r188, %r189, 19;
	shf.r.wrap.b32 	%r193, %r189, %r188, 19;
	mov.b64 	%rd202, {%r193, %r192};
	xor.b64  	%rd18, %rd202, %rd201;
	shf.r.wrap.b32 	%r194, %r188, %r189, 8;
	shf.r.wrap.b32 	%r195, %r189, %r188, 8;
	mov.b64 	%rd203, {%r195, %r194};
	shf.r.wrap.b32 	%r196, %r188, %r189, 1;
	shf.r.wrap.b32 	%r197, %r189, %r188, 1;
	mov.b64 	%rd204, {%r197, %r196};
	xor.b64  	%rd19, %rd204, %rd203;
	mov.u64 	%rd205, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd205;
	}
	shf.l.wrap.b32 	%r200, %r199, %r198, 3;
	shf.l.wrap.b32 	%r201, %r198, %r199, 3;
	mov.b64 	%rd206, {%r201, %r200};
	shf.r.wrap.b32 	%r202, %r198, %r199, 19;
	shf.r.wrap.b32 	%r203, %r199, %r198, 19;
	mov.b64 	%rd207, {%r203, %r202};
	xor.b64  	%rd208, %rd207, %rd206;
	xor.b64  	%rd20, %rd208, 8;
	shf.r.wrap.b32 	%r204, %r198, %r199, 8;
	shf.r.wrap.b32 	%r205, %r199, %r198, 8;
	mov.b64 	%rd209, {%r205, %r204};
	shf.r.wrap.b32 	%r206, %r198, %r199, 1;
	shf.r.wrap.b32 	%r207, %r199, %r198, 1;
	mov.b64 	%rd210, {%r207, %r206};
	xor.b64  	%rd211, %rd210, %rd209;
	xor.b64  	%rd21, %rd211, 4;
	mov.u32 	%r12630, 0;

$L__BB6_2:
	add.s32 	%r209, %r12630, %r1;
	shf.l.wrap.b32 	%r210, %r209, %r209, 16;
	shl.b32 	%r211, %r210, 8;
	and.b32  	%r212, %r211, -16711936;
	shr.u32 	%r213, %r210, 8;
	and.b32  	%r214, %r213, 16711935;
	or.b32  	%r215, %r212, %r214;
	cvt.u64.u32 	%rd213, %r215;
	shl.b64 	%rd214, %rd213, 32;
	mov.u32 	%r12631, 32;
	shr.u64 	%rd215, %rd9530, 32;
	or.b64  	%rd216, %rd215, %rd214;
	shr.u64 	%rd217, %rd9529, 32;
	shl.b64 	%rd218, %rd9530, 32;
	or.b64  	%rd219, %rd217, %rd218;
	shr.u64 	%rd220, %rd9528, 32;
	shl.b64 	%rd221, %rd9529, 32;
	or.b64  	%rd222, %rd220, %rd221;
	shr.u64 	%rd223, %rd9527, 32;
	shl.b64 	%rd224, %rd9528, 32;
	or.b64  	%rd225, %rd223, %rd224;
	shr.u64 	%rd226, %rd9526, 32;
	shl.b64 	%rd227, %rd9527, 32;
	or.b64  	%rd228, %rd226, %rd227;
	shr.u64 	%rd229, %rd9525, 32;
	shl.b64 	%rd230, %rd9526, 32;
	or.b64  	%rd231, %rd229, %rd230;
	shr.u64 	%rd232, %rd9524, 32;
	shl.b64 	%rd233, %rd9525, 32;
	or.b64  	%rd234, %rd232, %rd233;
	shr.u64 	%rd235, %rd9523, 32;
	shl.b64 	%rd236, %rd9524, 32;
	or.b64  	%rd237, %rd235, %rd236;
	shl.b64 	%rd238, %rd9523, 32;
	or.b64  	%rd239, %rd238, 2147483648;
	add.s64 	%rd240, %rd16, %rd216;
	add.s64 	%rd241, %rd240, -4263291710961585108;
	add.s64 	%rd242, %rd17, %rd240;
	and.b64  	%rd243, %rd241, -3887949035690463538;
	xor.b64  	%rd244, %rd243, -7276294671716946913;
	add.s64 	%rd245, %rd219, %rd244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd241;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 14;
	shf.r.wrap.b32 	%r219, %r216, %r217, 14;
	mov.b64 	%rd246, {%r219, %r218};
	shf.r.wrap.b32 	%r220, %r217, %r216, 18;
	shf.r.wrap.b32 	%r221, %r216, %r217, 18;
	mov.b64 	%rd247, {%r221, %r220};
	xor.b64  	%rd248, %rd246, %rd247;
	shf.l.wrap.b32 	%r222, %r216, %r217, 23;
	shf.l.wrap.b32 	%r223, %r217, %r216, 23;
	mov.b64 	%rd249, {%r223, %r222};
	xor.b64  	%rd250, %rd248, %rd249;
	add.s64 	%rd251, %rd245, %rd250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd242;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 28;
	shf.r.wrap.b32 	%r227, %r224, %r225, 28;
	mov.b64 	%rd252, {%r227, %r226};
	shf.l.wrap.b32 	%r228, %r224, %r225, 30;
	shf.l.wrap.b32 	%r229, %r225, %r224, 30;
	mov.b64 	%rd253, {%r229, %r228};
	xor.b64  	%rd254, %rd252, %rd253;
	shf.l.wrap.b32 	%r230, %r224, %r225, 25;
	shf.l.wrap.b32 	%r231, %r225, %r224, 25;
	mov.b64 	%rd255, {%r231, %r230};
	xor.b64  	%rd256, %rd254, %rd255;
	and.b64  	%rd257, %rd242, -3355664534840381901;
	or.b64  	%rd258, %rd257, 3026882967131160840;
	add.s64 	%rd259, %rd258, %rd256;
	add.s64 	%rd260, %rd259, %rd251;
	add.s64 	%rd261, %rd251, -3663095898801038493;
	add.s64 	%rd262, %rd260, -8017781463737883848;
	xor.b64  	%rd263, %rd241, 5840696475078001361;
	and.b64  	%rd264, %rd261, %rd263;
	xor.b64  	%rd265, %rd264, 5840696475078001361;
	add.s64 	%rd266, %rd222, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd261;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 14;
	shf.r.wrap.b32 	%r235, %r232, %r233, 14;
	mov.b64 	%rd267, {%r235, %r234};
	shf.r.wrap.b32 	%r236, %r233, %r232, 18;
	shf.r.wrap.b32 	%r237, %r232, %r233, 18;
	mov.b64 	%rd268, {%r237, %r236};
	xor.b64  	%rd269, %rd267, %rd268;
	shf.l.wrap.b32 	%r238, %r232, %r233, 23;
	shf.l.wrap.b32 	%r239, %r233, %r232, 23;
	mov.b64 	%rd270, {%r239, %r238};
	xor.b64  	%rd271, %rd269, %rd270;
	add.s64 	%rd272, %rd266, %rd271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd262;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 28;
	shf.r.wrap.b32 	%r243, %r240, %r241, 28;
	mov.b64 	%rd273, {%r243, %r242};
	shf.l.wrap.b32 	%r244, %r240, %r241, 30;
	shf.l.wrap.b32 	%r245, %r241, %r240, 30;
	mov.b64 	%rd274, {%r245, %r244};
	xor.b64  	%rd275, %rd273, %rd274;
	shf.l.wrap.b32 	%r246, %r240, %r241, 25;
	shf.l.wrap.b32 	%r247, %r241, %r240, 25;
	mov.b64 	%rd276, {%r247, %r246};
	xor.b64  	%rd277, %rd275, %rd276;
	and.b64  	%rd278, %rd262, %rd242;
	or.b64  	%rd279, %rd262, %rd242;
	and.b64  	%rd280, %rd279, 7640891576956012808;
	or.b64  	%rd281, %rd280, %rd278;
	add.s64 	%rd282, %rd281, %rd277;
	add.s64 	%rd283, %rd282, %rd272;
	add.s64 	%rd284, %rd272, 877659737583668873;
	add.s64 	%rd285, %rd283, 5820449915117741902;
	xor.b64  	%rd286, %rd261, %rd241;
	and.b64  	%rd287, %rd284, %rd286;
	xor.b64  	%rd288, %rd287, %rd241;
	add.s64 	%rd289, %rd225, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd284;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 14;
	shf.r.wrap.b32 	%r251, %r248, %r249, 14;
	mov.b64 	%rd290, {%r251, %r250};
	shf.r.wrap.b32 	%r252, %r249, %r248, 18;
	shf.r.wrap.b32 	%r253, %r248, %r249, 18;
	mov.b64 	%rd291, {%r253, %r252};
	xor.b64  	%rd292, %rd290, %rd291;
	shf.l.wrap.b32 	%r254, %r248, %r249, 23;
	shf.l.wrap.b32 	%r255, %r249, %r248, 23;
	mov.b64 	%rd293, {%r255, %r254};
	xor.b64  	%rd294, %rd292, %rd293;
	add.s64 	%rd295, %rd289, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd285;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 28;
	shf.r.wrap.b32 	%r259, %r256, %r257, 28;
	mov.b64 	%rd296, {%r259, %r258};
	shf.l.wrap.b32 	%r260, %r256, %r257, 30;
	shf.l.wrap.b32 	%r261, %r257, %r256, 30;
	mov.b64 	%rd297, {%r261, %r260};
	xor.b64  	%rd298, %rd296, %rd297;
	shf.l.wrap.b32 	%r262, %r256, %r257, 25;
	shf.l.wrap.b32 	%r263, %r257, %r256, 25;
	mov.b64 	%rd299, {%r263, %r262};
	xor.b64  	%rd300, %rd298, %rd299;
	and.b64  	%rd301, %rd285, %rd262;
	or.b64  	%rd302, %rd285, %rd262;
	and.b64  	%rd303, %rd302, %rd242;
	or.b64  	%rd304, %rd303, %rd301;
	add.s64 	%rd305, %rd304, %rd300;
	add.s64 	%rd306, %rd305, %rd295;
	add.s64 	%rd307, %rd295, -6571292209873868907;
	add.s64 	%rd308, %rd306, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd307;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 14;
	shf.r.wrap.b32 	%r267, %r264, %r265, 14;
	mov.b64 	%rd309, {%r267, %r266};
	shf.r.wrap.b32 	%r268, %r265, %r264, 18;
	shf.r.wrap.b32 	%r269, %r264, %r265, 18;
	mov.b64 	%rd310, {%r269, %r268};
	xor.b64  	%rd311, %rd309, %rd310;
	shf.l.wrap.b32 	%r270, %r264, %r265, 23;
	shf.l.wrap.b32 	%r271, %r265, %r264, 23;
	mov.b64 	%rd312, {%r271, %r270};
	xor.b64  	%rd313, %rd311, %rd312;
	xor.b64  	%rd314, %rd284, %rd261;
	and.b64  	%rd315, %rd307, %rd314;
	xor.b64  	%rd316, %rd315, %rd261;
	add.s64 	%rd317, %rd240, %rd228;
	add.s64 	%rd318, %rd317, %rd316;
	add.s64 	%rd319, %rd318, %rd313;
	add.s64 	%rd320, %rd319, -131588302623135388;
	add.s64 	%rd321, %rd320, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd308;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 28;
	shf.r.wrap.b32 	%r275, %r272, %r273, 28;
	mov.b64 	%rd322, {%r275, %r274};
	shf.l.wrap.b32 	%r276, %r272, %r273, 30;
	shf.l.wrap.b32 	%r277, %r273, %r272, 30;
	mov.b64 	%rd323, {%r277, %r276};
	xor.b64  	%rd324, %rd322, %rd323;
	shf.l.wrap.b32 	%r278, %r272, %r273, 25;
	shf.l.wrap.b32 	%r279, %r273, %r272, 25;
	mov.b64 	%rd325, {%r279, %r278};
	xor.b64  	%rd326, %rd324, %rd325;
	and.b64  	%rd327, %rd308, %rd285;
	or.b64  	%rd328, %rd308, %rd285;
	and.b64  	%rd329, %rd328, %rd262;
	or.b64  	%rd330, %rd329, %rd327;
	add.s64 	%rd331, %rd330, %rd326;
	add.s64 	%rd332, %rd331, %rd320;
	add.s64 	%rd333, %rd231, %rd261;
	xor.b64  	%rd334, %rd307, %rd284;
	and.b64  	%rd335, %rd321, %rd334;
	xor.b64  	%rd336, %rd335, %rd284;
	add.s64 	%rd337, %rd333, %rd336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd321;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 14;
	shf.r.wrap.b32 	%r283, %r280, %r281, 14;
	mov.b64 	%rd338, {%r283, %r282};
	shf.r.wrap.b32 	%r284, %r281, %r280, 18;
	shf.r.wrap.b32 	%r285, %r280, %r281, 18;
	mov.b64 	%rd339, {%r285, %r284};
	xor.b64  	%rd340, %rd338, %rd339;
	shf.l.wrap.b32 	%r286, %r280, %r281, 23;
	shf.l.wrap.b32 	%r287, %r281, %r280, 23;
	mov.b64 	%rd341, {%r287, %r286};
	xor.b64  	%rd342, %rd340, %rd341;
	add.s64 	%rd343, %rd337, %rd342;
	add.s64 	%rd344, %rd343, 6480981068601479193;
	add.s64 	%rd345, %rd344, %rd262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd332;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 28;
	shf.r.wrap.b32 	%r291, %r288, %r289, 28;
	mov.b64 	%rd346, {%r291, %r290};
	shf.l.wrap.b32 	%r292, %r288, %r289, 30;
	shf.l.wrap.b32 	%r293, %r289, %r288, 30;
	mov.b64 	%rd347, {%r293, %r292};
	xor.b64  	%rd348, %rd346, %rd347;
	shf.l.wrap.b32 	%r294, %r288, %r289, 25;
	shf.l.wrap.b32 	%r295, %r289, %r288, 25;
	mov.b64 	%rd349, {%r295, %r294};
	xor.b64  	%rd350, %rd348, %rd349;
	and.b64  	%rd351, %rd332, %rd308;
	or.b64  	%rd352, %rd332, %rd308;
	and.b64  	%rd353, %rd352, %rd285;
	or.b64  	%rd354, %rd353, %rd351;
	add.s64 	%rd355, %rd354, %rd350;
	add.s64 	%rd356, %rd355, %rd344;
	add.s64 	%rd357, %rd234, %rd284;
	xor.b64  	%rd358, %rd321, %rd307;
	and.b64  	%rd359, %rd345, %rd358;
	xor.b64  	%rd360, %rd359, %rd307;
	add.s64 	%rd361, %rd357, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r296,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r297}, %rd345;
	}
	shf.r.wrap.b32 	%r298, %r297, %r296, 14;
	shf.r.wrap.b32 	%r299, %r296, %r297, 14;
	mov.b64 	%rd362, {%r299, %r298};
	shf.r.wrap.b32 	%r300, %r297, %r296, 18;
	shf.r.wrap.b32 	%r301, %r296, %r297, 18;
	mov.b64 	%rd363, {%r301, %r300};
	xor.b64  	%rd364, %rd362, %rd363;
	shf.l.wrap.b32 	%r302, %r296, %r297, 23;
	shf.l.wrap.b32 	%r303, %r297, %r296, 23;
	mov.b64 	%rd365, {%r303, %r302};
	xor.b64  	%rd366, %rd364, %rd365;
	add.s64 	%rd367, %rd361, %rd366;
	add.s64 	%rd368, %rd367, -7908458776815382629;
	add.s64 	%rd369, %rd368, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r304,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r305}, %rd356;
	}
	shf.r.wrap.b32 	%r306, %r305, %r304, 28;
	shf.r.wrap.b32 	%r307, %r304, %r305, 28;
	mov.b64 	%rd370, {%r307, %r306};
	shf.l.wrap.b32 	%r308, %r304, %r305, 30;
	shf.l.wrap.b32 	%r309, %r305, %r304, 30;
	mov.b64 	%rd371, {%r309, %r308};
	xor.b64  	%rd372, %rd370, %rd371;
	shf.l.wrap.b32 	%r310, %r304, %r305, 25;
	shf.l.wrap.b32 	%r311, %r305, %r304, 25;
	mov.b64 	%rd373, {%r311, %r310};
	xor.b64  	%rd374, %rd372, %rd373;
	and.b64  	%rd375, %rd356, %rd332;
	or.b64  	%rd376, %rd356, %rd332;
	and.b64  	%rd377, %rd376, %rd308;
	or.b64  	%rd378, %rd377, %rd375;
	add.s64 	%rd379, %rd378, %rd374;
	add.s64 	%rd380, %rd379, %rd368;
	add.s64 	%rd381, %rd237, %rd307;
	xor.b64  	%rd382, %rd345, %rd321;
	and.b64  	%rd383, %rd369, %rd382;
	xor.b64  	%rd384, %rd383, %rd321;
	add.s64 	%rd385, %rd381, %rd384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd369;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 14;
	shf.r.wrap.b32 	%r315, %r312, %r313, 14;
	mov.b64 	%rd386, {%r315, %r314};
	shf.r.wrap.b32 	%r316, %r313, %r312, 18;
	shf.r.wrap.b32 	%r317, %r312, %r313, 18;
	mov.b64 	%rd387, {%r317, %r316};
	xor.b64  	%rd388, %rd386, %rd387;
	shf.l.wrap.b32 	%r318, %r312, %r313, 23;
	shf.l.wrap.b32 	%r319, %r313, %r312, 23;
	mov.b64 	%rd389, {%r319, %r318};
	xor.b64  	%rd390, %rd388, %rd389;
	add.s64 	%rd391, %rd385, %rd390;
	add.s64 	%rd392, %rd391, -6116909921290321640;
	add.s64 	%rd393, %rd392, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r320,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd380;
	}
	shf.r.wrap.b32 	%r322, %r321, %r320, 28;
	shf.r.wrap.b32 	%r323, %r320, %r321, 28;
	mov.b64 	%rd394, {%r323, %r322};
	shf.l.wrap.b32 	%r324, %r320, %r321, 30;
	shf.l.wrap.b32 	%r325, %r321, %r320, 30;
	mov.b64 	%rd395, {%r325, %r324};
	xor.b64  	%rd396, %rd394, %rd395;
	shf.l.wrap.b32 	%r326, %r320, %r321, 25;
	shf.l.wrap.b32 	%r327, %r321, %r320, 25;
	mov.b64 	%rd397, {%r327, %r326};
	xor.b64  	%rd398, %rd396, %rd397;
	and.b64  	%rd399, %rd380, %rd356;
	or.b64  	%rd400, %rd380, %rd356;
	and.b64  	%rd401, %rd400, %rd332;
	or.b64  	%rd402, %rd401, %rd399;
	add.s64 	%rd403, %rd402, %rd398;
	add.s64 	%rd404, %rd403, %rd392;
	add.s64 	%rd405, %rd239, %rd321;
	xor.b64  	%rd406, %rd369, %rd345;
	and.b64  	%rd407, %rd393, %rd406;
	xor.b64  	%rd408, %rd407, %rd345;
	add.s64 	%rd409, %rd405, %rd408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r328,%dummy}, %rd393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r329}, %rd393;
	}
	shf.r.wrap.b32 	%r330, %r329, %r328, 14;
	shf.r.wrap.b32 	%r331, %r328, %r329, 14;
	mov.b64 	%rd410, {%r331, %r330};
	shf.r.wrap.b32 	%r332, %r329, %r328, 18;
	shf.r.wrap.b32 	%r333, %r328, %r329, 18;
	mov.b64 	%rd411, {%r333, %r332};
	xor.b64  	%rd412, %rd410, %rd411;
	shf.l.wrap.b32 	%r334, %r328, %r329, 23;
	shf.l.wrap.b32 	%r335, %r329, %r328, 23;
	mov.b64 	%rd413, {%r335, %r334};
	xor.b64  	%rd414, %rd412, %rd413;
	add.s64 	%rd415, %rd409, %rd414;
	add.s64 	%rd416, %rd415, -2880145864133508542;
	add.s64 	%rd417, %rd416, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd404;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 28;
	shf.r.wrap.b32 	%r339, %r336, %r337, 28;
	mov.b64 	%rd418, {%r339, %r338};
	shf.l.wrap.b32 	%r340, %r336, %r337, 30;
	shf.l.wrap.b32 	%r341, %r337, %r336, 30;
	mov.b64 	%rd419, {%r341, %r340};
	xor.b64  	%rd420, %rd418, %rd419;
	shf.l.wrap.b32 	%r342, %r336, %r337, 25;
	shf.l.wrap.b32 	%r343, %r337, %r336, 25;
	mov.b64 	%rd421, {%r343, %r342};
	xor.b64  	%rd422, %rd420, %rd421;
	and.b64  	%rd423, %rd404, %rd380;
	or.b64  	%rd424, %rd404, %rd380;
	and.b64  	%rd425, %rd424, %rd356;
	or.b64  	%rd426, %rd425, %rd423;
	add.s64 	%rd427, %rd426, %rd422;
	add.s64 	%rd428, %rd427, %rd416;
	xor.b64  	%rd429, %rd393, %rd369;
	and.b64  	%rd430, %rd417, %rd429;
	xor.b64  	%rd431, %rd430, %rd369;
	add.s64 	%rd432, %rd345, %rd431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r344,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd417;
	}
	shf.r.wrap.b32 	%r346, %r345, %r344, 14;
	shf.r.wrap.b32 	%r347, %r344, %r345, 14;
	mov.b64 	%rd433, {%r347, %r346};
	shf.r.wrap.b32 	%r348, %r345, %r344, 18;
	shf.r.wrap.b32 	%r349, %r344, %r345, 18;
	mov.b64 	%rd434, {%r349, %r348};
	xor.b64  	%rd435, %rd433, %rd434;
	shf.l.wrap.b32 	%r350, %r344, %r345, 23;
	shf.l.wrap.b32 	%r351, %r345, %r344, 23;
	mov.b64 	%rd436, {%r351, %r350};
	xor.b64  	%rd437, %rd435, %rd436;
	add.s64 	%rd438, %rd432, %rd437;
	add.s64 	%rd439, %rd438, 1334009975649890238;
	add.s64 	%rd440, %rd439, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r352,%dummy}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd428;
	}
	shf.r.wrap.b32 	%r354, %r353, %r352, 28;
	shf.r.wrap.b32 	%r355, %r352, %r353, 28;
	mov.b64 	%rd441, {%r355, %r354};
	shf.l.wrap.b32 	%r356, %r352, %r353, 30;
	shf.l.wrap.b32 	%r357, %r353, %r352, 30;
	mov.b64 	%rd442, {%r357, %r356};
	xor.b64  	%rd443, %rd441, %rd442;
	shf.l.wrap.b32 	%r358, %r352, %r353, 25;
	shf.l.wrap.b32 	%r359, %r353, %r352, 25;
	mov.b64 	%rd444, {%r359, %r358};
	xor.b64  	%rd445, %rd443, %rd444;
	and.b64  	%rd446, %rd428, %rd404;
	or.b64  	%rd447, %rd428, %rd404;
	and.b64  	%rd448, %rd447, %rd380;
	or.b64  	%rd449, %rd448, %rd446;
	add.s64 	%rd450, %rd449, %rd445;
	add.s64 	%rd451, %rd450, %rd439;
	xor.b64  	%rd452, %rd417, %rd393;
	and.b64  	%rd453, %rd440, %rd452;
	xor.b64  	%rd454, %rd453, %rd393;
	add.s64 	%rd455, %rd369, %rd454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd440;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 14;
	shf.r.wrap.b32 	%r363, %r360, %r361, 14;
	mov.b64 	%rd456, {%r363, %r362};
	shf.r.wrap.b32 	%r364, %r361, %r360, 18;
	shf.r.wrap.b32 	%r365, %r360, %r361, 18;
	mov.b64 	%rd457, {%r365, %r364};
	xor.b64  	%rd458, %rd456, %rd457;
	shf.l.wrap.b32 	%r366, %r360, %r361, 23;
	shf.l.wrap.b32 	%r367, %r361, %r360, 23;
	mov.b64 	%rd459, {%r367, %r366};
	xor.b64  	%rd460, %rd458, %rd459;
	add.s64 	%rd461, %rd455, %rd460;
	add.s64 	%rd462, %rd461, 2608012711638119052;
	add.s64 	%rd463, %rd462, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd451;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 28;
	shf.r.wrap.b32 	%r371, %r368, %r369, 28;
	mov.b64 	%rd464, {%r371, %r370};
	shf.l.wrap.b32 	%r372, %r368, %r369, 30;
	shf.l.wrap.b32 	%r373, %r369, %r368, 30;
	mov.b64 	%rd465, {%r373, %r372};
	xor.b64  	%rd466, %rd464, %rd465;
	shf.l.wrap.b32 	%r374, %r368, %r369, 25;
	shf.l.wrap.b32 	%r375, %r369, %r368, 25;
	mov.b64 	%rd467, {%r375, %r374};
	xor.b64  	%rd468, %rd466, %rd467;
	and.b64  	%rd469, %rd451, %rd428;
	or.b64  	%rd470, %rd451, %rd428;
	and.b64  	%rd471, %rd470, %rd404;
	or.b64  	%rd472, %rd471, %rd469;
	add.s64 	%rd473, %rd472, %rd468;
	add.s64 	%rd474, %rd473, %rd462;
	xor.b64  	%rd475, %rd440, %rd417;
	and.b64  	%rd476, %rd463, %rd475;
	xor.b64  	%rd477, %rd476, %rd417;
	add.s64 	%rd478, %rd393, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r376,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd463;
	}
	shf.r.wrap.b32 	%r378, %r377, %r376, 14;
	shf.r.wrap.b32 	%r379, %r376, %r377, 14;
	mov.b64 	%rd479, {%r379, %r378};
	shf.r.wrap.b32 	%r380, %r377, %r376, 18;
	shf.r.wrap.b32 	%r381, %r376, %r377, 18;
	mov.b64 	%rd480, {%r381, %r380};
	xor.b64  	%rd481, %rd479, %rd480;
	shf.l.wrap.b32 	%r382, %r376, %r377, 23;
	shf.l.wrap.b32 	%r383, %r377, %r376, 23;
	mov.b64 	%rd482, {%r383, %r382};
	xor.b64  	%rd483, %rd481, %rd482;
	add.s64 	%rd484, %rd478, %rd483;
	add.s64 	%rd485, %rd484, 6128411473006802146;
	add.s64 	%rd486, %rd485, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd474;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 28;
	shf.r.wrap.b32 	%r387, %r384, %r385, 28;
	mov.b64 	%rd487, {%r387, %r386};
	shf.l.wrap.b32 	%r388, %r384, %r385, 30;
	shf.l.wrap.b32 	%r389, %r385, %r384, 30;
	mov.b64 	%rd488, {%r389, %r388};
	xor.b64  	%rd489, %rd487, %rd488;
	shf.l.wrap.b32 	%r390, %r384, %r385, 25;
	shf.l.wrap.b32 	%r391, %r385, %r384, 25;
	mov.b64 	%rd490, {%r391, %r390};
	xor.b64  	%rd491, %rd489, %rd490;
	and.b64  	%rd492, %rd474, %rd451;
	or.b64  	%rd493, %rd474, %rd451;
	and.b64  	%rd494, %rd493, %rd428;
	or.b64  	%rd495, %rd494, %rd492;
	add.s64 	%rd496, %rd495, %rd491;
	add.s64 	%rd497, %rd496, %rd485;
	xor.b64  	%rd498, %rd463, %rd440;
	and.b64  	%rd499, %rd486, %rd498;
	xor.b64  	%rd500, %rd499, %rd440;
	add.s64 	%rd501, %rd417, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd486;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 14;
	shf.r.wrap.b32 	%r395, %r392, %r393, 14;
	mov.b64 	%rd502, {%r395, %r394};
	shf.r.wrap.b32 	%r396, %r393, %r392, 18;
	shf.r.wrap.b32 	%r397, %r392, %r393, 18;
	mov.b64 	%rd503, {%r397, %r396};
	xor.b64  	%rd504, %rd502, %rd503;
	shf.l.wrap.b32 	%r398, %r392, %r393, 23;
	shf.l.wrap.b32 	%r399, %r393, %r392, 23;
	mov.b64 	%rd505, {%r399, %r398};
	xor.b64  	%rd506, %rd504, %rd505;
	add.s64 	%rd507, %rd501, %rd506;
	add.s64 	%rd508, %rd507, 8268148722764581231;
	add.s64 	%rd509, %rd508, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd497;
	}
	shf.r.wrap.b32 	%r402, %r401, %r400, 28;
	shf.r.wrap.b32 	%r403, %r400, %r401, 28;
	mov.b64 	%rd510, {%r403, %r402};
	shf.l.wrap.b32 	%r404, %r400, %r401, 30;
	shf.l.wrap.b32 	%r405, %r401, %r400, 30;
	mov.b64 	%rd511, {%r405, %r404};
	xor.b64  	%rd512, %rd510, %rd511;
	shf.l.wrap.b32 	%r406, %r400, %r401, 25;
	shf.l.wrap.b32 	%r407, %r401, %r400, 25;
	mov.b64 	%rd513, {%r407, %r406};
	xor.b64  	%rd514, %rd512, %rd513;
	and.b64  	%rd515, %rd497, %rd474;
	or.b64  	%rd516, %rd497, %rd474;
	and.b64  	%rd517, %rd516, %rd451;
	or.b64  	%rd518, %rd517, %rd515;
	add.s64 	%rd519, %rd518, %rd514;
	add.s64 	%rd520, %rd519, %rd508;
	xor.b64  	%rd521, %rd486, %rd463;
	and.b64  	%rd522, %rd509, %rd521;
	xor.b64  	%rd523, %rd522, %rd463;
	add.s64 	%rd524, %rd440, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd509;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 14;
	shf.r.wrap.b32 	%r411, %r408, %r409, 14;
	mov.b64 	%rd525, {%r411, %r410};
	shf.r.wrap.b32 	%r412, %r409, %r408, 18;
	shf.r.wrap.b32 	%r413, %r408, %r409, 18;
	mov.b64 	%rd526, {%r413, %r412};
	xor.b64  	%rd527, %rd525, %rd526;
	shf.l.wrap.b32 	%r414, %r408, %r409, 23;
	shf.l.wrap.b32 	%r415, %r409, %r408, 23;
	mov.b64 	%rd528, {%r415, %r414};
	xor.b64  	%rd529, %rd527, %rd528;
	add.s64 	%rd530, %rd524, %rd529;
	add.s64 	%rd531, %rd530, -9160688886553864527;
	add.s64 	%rd532, %rd531, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd520;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 28;
	shf.r.wrap.b32 	%r419, %r416, %r417, 28;
	mov.b64 	%rd533, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 30;
	shf.l.wrap.b32 	%r421, %r417, %r416, 30;
	mov.b64 	%rd534, {%r421, %r420};
	xor.b64  	%rd535, %rd533, %rd534;
	shf.l.wrap.b32 	%r422, %r416, %r417, 25;
	shf.l.wrap.b32 	%r423, %r417, %r416, 25;
	mov.b64 	%rd536, {%r423, %r422};
	xor.b64  	%rd537, %rd535, %rd536;
	and.b64  	%rd538, %rd520, %rd497;
	or.b64  	%rd539, %rd520, %rd497;
	and.b64  	%rd540, %rd539, %rd474;
	or.b64  	%rd541, %rd540, %rd538;
	add.s64 	%rd542, %rd541, %rd537;
	add.s64 	%rd543, %rd542, %rd531;
	xor.b64  	%rd544, %rd509, %rd486;
	and.b64  	%rd545, %rd532, %rd544;
	xor.b64  	%rd546, %rd545, %rd486;
	add.s64 	%rd547, %rd463, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r424,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd532;
	}
	shf.r.wrap.b32 	%r426, %r425, %r424, 14;
	shf.r.wrap.b32 	%r427, %r424, %r425, 14;
	mov.b64 	%rd548, {%r427, %r426};
	shf.r.wrap.b32 	%r428, %r425, %r424, 18;
	shf.r.wrap.b32 	%r429, %r424, %r425, 18;
	mov.b64 	%rd549, {%r429, %r428};
	xor.b64  	%rd550, %rd548, %rd549;
	shf.l.wrap.b32 	%r430, %r424, %r425, 23;
	shf.l.wrap.b32 	%r431, %r425, %r424, 23;
	mov.b64 	%rd551, {%r431, %r430};
	xor.b64  	%rd552, %rd550, %rd551;
	add.s64 	%rd553, %rd547, %rd552;
	add.s64 	%rd554, %rd553, -7215885187991268811;
	add.s64 	%rd555, %rd554, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd543;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 28;
	shf.r.wrap.b32 	%r435, %r432, %r433, 28;
	mov.b64 	%rd556, {%r435, %r434};
	shf.l.wrap.b32 	%r436, %r432, %r433, 30;
	shf.l.wrap.b32 	%r437, %r433, %r432, 30;
	mov.b64 	%rd557, {%r437, %r436};
	xor.b64  	%rd558, %rd556, %rd557;
	shf.l.wrap.b32 	%r438, %r432, %r433, 25;
	shf.l.wrap.b32 	%r439, %r433, %r432, 25;
	mov.b64 	%rd559, {%r439, %r438};
	xor.b64  	%rd560, %rd558, %rd559;
	and.b64  	%rd561, %rd543, %rd520;
	or.b64  	%rd562, %rd543, %rd520;
	and.b64  	%rd563, %rd562, %rd497;
	or.b64  	%rd564, %rd563, %rd561;
	add.s64 	%rd565, %rd564, %rd560;
	add.s64 	%rd566, %rd565, %rd554;
	xor.b64  	%rd567, %rd532, %rd509;
	and.b64  	%rd568, %rd555, %rd567;
	xor.b64  	%rd569, %rd568, %rd509;
	add.s64 	%rd570, %rd486, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd555;
	}
	shf.r.wrap.b32 	%r442, %r441, %r440, 14;
	shf.r.wrap.b32 	%r443, %r440, %r441, 14;
	mov.b64 	%rd571, {%r443, %r442};
	shf.r.wrap.b32 	%r444, %r441, %r440, 18;
	shf.r.wrap.b32 	%r445, %r440, %r441, 18;
	mov.b64 	%rd572, {%r445, %r444};
	xor.b64  	%rd573, %rd571, %rd572;
	shf.l.wrap.b32 	%r446, %r440, %r441, 23;
	shf.l.wrap.b32 	%r447, %r441, %r440, 23;
	mov.b64 	%rd574, {%r447, %r446};
	xor.b64  	%rd575, %rd573, %rd574;
	add.s64 	%rd576, %rd570, %rd575;
	add.s64 	%rd577, %rd576, -4495734319001032524;
	add.s64 	%rd578, %rd577, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd566;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 28;
	shf.r.wrap.b32 	%r451, %r448, %r449, 28;
	mov.b64 	%rd579, {%r451, %r450};
	shf.l.wrap.b32 	%r452, %r448, %r449, 30;
	shf.l.wrap.b32 	%r453, %r449, %r448, 30;
	mov.b64 	%rd580, {%r453, %r452};
	xor.b64  	%rd581, %rd579, %rd580;
	shf.l.wrap.b32 	%r454, %r448, %r449, 25;
	shf.l.wrap.b32 	%r455, %r449, %r448, 25;
	mov.b64 	%rd582, {%r455, %r454};
	xor.b64  	%rd583, %rd581, %rd582;
	and.b64  	%rd584, %rd566, %rd543;
	or.b64  	%rd585, %rd566, %rd543;
	and.b64  	%rd586, %rd585, %rd520;
	or.b64  	%rd587, %rd586, %rd584;
	add.s64 	%rd588, %rd587, %rd583;
	add.s64 	%rd589, %rd588, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd219;
	}
	shf.r.wrap.b32 	%r458, %r457, %r456, 1;
	shf.r.wrap.b32 	%r459, %r456, %r457, 1;
	mov.b64 	%rd590, {%r459, %r458};
	shf.r.wrap.b32 	%r460, %r457, %r456, 8;
	shf.r.wrap.b32 	%r461, %r456, %r457, 8;
	mov.b64 	%rd591, {%r461, %r460};
	xor.b64  	%rd592, %rd590, %rd591;
	shr.u64 	%rd593, %rd219, 7;
	xor.b64  	%rd594, %rd592, %rd593;
	add.s64 	%rd595, %rd216, %rd18;
	add.s64 	%rd9545, %rd595, %rd594;
	add.s64 	%rd596, %rd9545, %rd509;
	xor.b64  	%rd597, %rd555, %rd532;
	and.b64  	%rd598, %rd578, %rd597;
	xor.b64  	%rd599, %rd598, %rd532;
	add.s64 	%rd600, %rd596, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r462,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r463}, %rd578;
	}
	shf.r.wrap.b32 	%r464, %r463, %r462, 14;
	shf.r.wrap.b32 	%r465, %r462, %r463, 14;
	mov.b64 	%rd601, {%r465, %r464};
	shf.r.wrap.b32 	%r466, %r463, %r462, 18;
	shf.r.wrap.b32 	%r467, %r462, %r463, 18;
	mov.b64 	%rd602, {%r467, %r466};
	xor.b64  	%rd603, %rd601, %rd602;
	shf.l.wrap.b32 	%r468, %r462, %r463, 23;
	shf.l.wrap.b32 	%r469, %r463, %r462, 23;
	mov.b64 	%rd604, {%r469, %r468};
	xor.b64  	%rd605, %rd603, %rd604;
	add.s64 	%rd606, %rd600, %rd605;
	add.s64 	%rd607, %rd606, -1973867731355612462;
	add.s64 	%rd608, %rd607, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r470,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r471}, %rd589;
	}
	shf.r.wrap.b32 	%r472, %r471, %r470, 28;
	shf.r.wrap.b32 	%r473, %r470, %r471, 28;
	mov.b64 	%rd609, {%r473, %r472};
	shf.l.wrap.b32 	%r474, %r470, %r471, 30;
	shf.l.wrap.b32 	%r475, %r471, %r470, 30;
	mov.b64 	%rd610, {%r475, %r474};
	xor.b64  	%rd611, %rd609, %rd610;
	shf.l.wrap.b32 	%r476, %r470, %r471, 25;
	shf.l.wrap.b32 	%r477, %r471, %r470, 25;
	mov.b64 	%rd612, {%r477, %r476};
	xor.b64  	%rd613, %rd611, %rd612;
	and.b64  	%rd614, %rd589, %rd566;
	or.b64  	%rd615, %rd589, %rd566;
	and.b64  	%rd616, %rd615, %rd543;
	or.b64  	%rd617, %rd616, %rd614;
	add.s64 	%rd618, %rd617, %rd613;
	add.s64 	%rd619, %rd618, %rd607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r478,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r479}, %rd222;
	}
	shf.r.wrap.b32 	%r480, %r479, %r478, 1;
	shf.r.wrap.b32 	%r481, %r478, %r479, 1;
	mov.b64 	%rd620, {%r481, %r480};
	shf.r.wrap.b32 	%r482, %r479, %r478, 8;
	shf.r.wrap.b32 	%r483, %r478, %r479, 8;
	mov.b64 	%rd621, {%r483, %r482};
	xor.b64  	%rd622, %rd620, %rd621;
	shr.u64 	%rd623, %rd222, 7;
	xor.b64  	%rd624, %rd622, %rd623;
	add.s64 	%rd625, %rd20, %rd219;
	add.s64 	%rd9546, %rd625, %rd624;
	add.s64 	%rd626, %rd9546, %rd532;
	xor.b64  	%rd627, %rd578, %rd555;
	and.b64  	%rd628, %rd608, %rd627;
	xor.b64  	%rd629, %rd628, %rd555;
	add.s64 	%rd630, %rd626, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd608;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 14;
	shf.r.wrap.b32 	%r487, %r484, %r485, 14;
	mov.b64 	%rd631, {%r487, %r486};
	shf.r.wrap.b32 	%r488, %r485, %r484, 18;
	shf.r.wrap.b32 	%r489, %r484, %r485, 18;
	mov.b64 	%rd632, {%r489, %r488};
	xor.b64  	%rd633, %rd631, %rd632;
	shf.l.wrap.b32 	%r490, %r484, %r485, 23;
	shf.l.wrap.b32 	%r491, %r485, %r484, 23;
	mov.b64 	%rd634, {%r491, %r490};
	xor.b64  	%rd635, %rd633, %rd634;
	add.s64 	%rd636, %rd630, %rd635;
	add.s64 	%rd637, %rd636, -1171420211273849373;
	add.s64 	%rd638, %rd637, %rd543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd619;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 28;
	shf.r.wrap.b32 	%r495, %r492, %r493, 28;
	mov.b64 	%rd639, {%r495, %r494};
	shf.l.wrap.b32 	%r496, %r492, %r493, 30;
	shf.l.wrap.b32 	%r497, %r493, %r492, 30;
	mov.b64 	%rd640, {%r497, %r496};
	xor.b64  	%rd641, %rd639, %rd640;
	shf.l.wrap.b32 	%r498, %r492, %r493, 25;
	shf.l.wrap.b32 	%r499, %r493, %r492, 25;
	mov.b64 	%rd642, {%r499, %r498};
	xor.b64  	%rd643, %rd641, %rd642;
	and.b64  	%rd644, %rd619, %rd589;
	or.b64  	%rd645, %rd619, %rd589;
	and.b64  	%rd646, %rd645, %rd566;
	or.b64  	%rd647, %rd646, %rd644;
	add.s64 	%rd648, %rd647, %rd643;
	add.s64 	%rd649, %rd648, %rd637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd9545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd9545;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 19;
	shf.r.wrap.b32 	%r503, %r500, %r501, 19;
	mov.b64 	%rd650, {%r503, %r502};
	shf.l.wrap.b32 	%r504, %r500, %r501, 3;
	shf.l.wrap.b32 	%r505, %r501, %r500, 3;
	mov.b64 	%rd651, {%r505, %r504};
	xor.b64  	%rd652, %rd650, %rd651;
	shr.u64 	%rd653, %rd9545, 6;
	xor.b64  	%rd654, %rd652, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd225;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 1;
	shf.r.wrap.b32 	%r509, %r506, %r507, 1;
	mov.b64 	%rd655, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 8;
	shf.r.wrap.b32 	%r511, %r506, %r507, 8;
	mov.b64 	%rd656, {%r511, %r510};
	xor.b64  	%rd657, %rd655, %rd656;
	shr.u64 	%rd658, %rd225, 7;
	xor.b64  	%rd659, %rd657, %rd658;
	add.s64 	%rd660, %rd654, %rd222;
	add.s64 	%rd9542, %rd660, %rd659;
	add.s64 	%rd661, %rd9542, %rd555;
	xor.b64  	%rd662, %rd608, %rd578;
	and.b64  	%rd663, %rd638, %rd662;
	xor.b64  	%rd664, %rd663, %rd578;
	add.s64 	%rd665, %rd661, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd638;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 14;
	shf.r.wrap.b32 	%r515, %r512, %r513, 14;
	mov.b64 	%rd666, {%r515, %r514};
	shf.r.wrap.b32 	%r516, %r513, %r512, 18;
	shf.r.wrap.b32 	%r517, %r512, %r513, 18;
	mov.b64 	%rd667, {%r517, %r516};
	xor.b64  	%rd668, %rd666, %rd667;
	shf.l.wrap.b32 	%r518, %r512, %r513, 23;
	shf.l.wrap.b32 	%r519, %r513, %r512, 23;
	mov.b64 	%rd669, {%r519, %r518};
	xor.b64  	%rd670, %rd668, %rd669;
	add.s64 	%rd671, %rd665, %rd670;
	add.s64 	%rd672, %rd671, 1135362057144423861;
	add.s64 	%rd673, %rd672, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd649;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 28;
	shf.r.wrap.b32 	%r523, %r520, %r521, 28;
	mov.b64 	%rd674, {%r523, %r522};
	shf.l.wrap.b32 	%r524, %r520, %r521, 30;
	shf.l.wrap.b32 	%r525, %r521, %r520, 30;
	mov.b64 	%rd675, {%r525, %r524};
	xor.b64  	%rd676, %rd674, %rd675;
	shf.l.wrap.b32 	%r526, %r520, %r521, 25;
	shf.l.wrap.b32 	%r527, %r521, %r520, 25;
	mov.b64 	%rd677, {%r527, %r526};
	xor.b64  	%rd678, %rd676, %rd677;
	and.b64  	%rd679, %rd649, %rd619;
	or.b64  	%rd680, %rd649, %rd619;
	and.b64  	%rd681, %rd680, %rd589;
	or.b64  	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd682, %rd678;
	add.s64 	%rd684, %rd683, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd9546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd9546;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 19;
	shf.r.wrap.b32 	%r531, %r528, %r529, 19;
	mov.b64 	%rd685, {%r531, %r530};
	shf.l.wrap.b32 	%r532, %r528, %r529, 3;
	shf.l.wrap.b32 	%r533, %r529, %r528, 3;
	mov.b64 	%rd686, {%r533, %r532};
	xor.b64  	%rd687, %rd685, %rd686;
	shr.u64 	%rd688, %rd9546, 6;
	xor.b64  	%rd689, %rd687, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r534,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd228;
	}
	shf.r.wrap.b32 	%r536, %r535, %r534, 1;
	shf.r.wrap.b32 	%r537, %r534, %r535, 1;
	mov.b64 	%rd690, {%r537, %r536};
	shf.r.wrap.b32 	%r538, %r535, %r534, 8;
	shf.r.wrap.b32 	%r539, %r534, %r535, 8;
	mov.b64 	%rd691, {%r539, %r538};
	xor.b64  	%rd692, %rd690, %rd691;
	shr.u64 	%rd693, %rd228, 7;
	xor.b64  	%rd694, %rd692, %rd693;
	add.s64 	%rd695, %rd689, %rd225;
	add.s64 	%rd9540, %rd695, %rd694;
	add.s64 	%rd696, %rd9540, %rd578;
	xor.b64  	%rd697, %rd638, %rd608;
	and.b64  	%rd698, %rd673, %rd697;
	xor.b64  	%rd699, %rd698, %rd608;
	add.s64 	%rd700, %rd696, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd673;
	}
	shf.r.wrap.b32 	%r542, %r541, %r540, 14;
	shf.r.wrap.b32 	%r543, %r540, %r541, 14;
	mov.b64 	%rd701, {%r543, %r542};
	shf.r.wrap.b32 	%r544, %r541, %r540, 18;
	shf.r.wrap.b32 	%r545, %r540, %r541, 18;
	mov.b64 	%rd702, {%r545, %r544};
	xor.b64  	%rd703, %rd701, %rd702;
	shf.l.wrap.b32 	%r546, %r540, %r541, 23;
	shf.l.wrap.b32 	%r547, %r541, %r540, 23;
	mov.b64 	%rd704, {%r547, %r546};
	xor.b64  	%rd705, %rd703, %rd704;
	add.s64 	%rd706, %rd700, %rd705;
	add.s64 	%rd707, %rd706, 2597628984639134821;
	add.s64 	%rd708, %rd707, %rd589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd684;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 28;
	shf.r.wrap.b32 	%r551, %r548, %r549, 28;
	mov.b64 	%rd709, {%r551, %r550};
	shf.l.wrap.b32 	%r552, %r548, %r549, 30;
	shf.l.wrap.b32 	%r553, %r549, %r548, 30;
	mov.b64 	%rd710, {%r553, %r552};
	xor.b64  	%rd711, %rd709, %rd710;
	shf.l.wrap.b32 	%r554, %r548, %r549, 25;
	shf.l.wrap.b32 	%r555, %r549, %r548, 25;
	mov.b64 	%rd712, {%r555, %r554};
	xor.b64  	%rd713, %rd711, %rd712;
	and.b64  	%rd714, %rd684, %rd649;
	or.b64  	%rd715, %rd684, %rd649;
	and.b64  	%rd716, %rd715, %rd619;
	or.b64  	%rd717, %rd716, %rd714;
	add.s64 	%rd718, %rd717, %rd713;
	add.s64 	%rd719, %rd718, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd9542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd9542;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 19;
	shf.r.wrap.b32 	%r559, %r556, %r557, 19;
	mov.b64 	%rd720, {%r559, %r558};
	shf.l.wrap.b32 	%r560, %r556, %r557, 3;
	shf.l.wrap.b32 	%r561, %r557, %r556, 3;
	mov.b64 	%rd721, {%r561, %r560};
	xor.b64  	%rd722, %rd720, %rd721;
	shr.u64 	%rd723, %rd9542, 6;
	xor.b64  	%rd724, %rd722, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd231;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 1;
	shf.r.wrap.b32 	%r565, %r562, %r563, 1;
	mov.b64 	%rd725, {%r565, %r564};
	shf.r.wrap.b32 	%r566, %r563, %r562, 8;
	shf.r.wrap.b32 	%r567, %r562, %r563, 8;
	mov.b64 	%rd726, {%r567, %r566};
	xor.b64  	%rd727, %rd725, %rd726;
	shr.u64 	%rd728, %rd231, 7;
	xor.b64  	%rd729, %rd727, %rd728;
	add.s64 	%rd730, %rd724, %rd228;
	add.s64 	%rd9538, %rd730, %rd729;
	add.s64 	%rd731, %rd9538, %rd608;
	xor.b64  	%rd732, %rd673, %rd638;
	and.b64  	%rd733, %rd708, %rd732;
	xor.b64  	%rd734, %rd733, %rd638;
	add.s64 	%rd735, %rd731, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd708;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 14;
	shf.r.wrap.b32 	%r571, %r568, %r569, 14;
	mov.b64 	%rd736, {%r571, %r570};
	shf.r.wrap.b32 	%r572, %r569, %r568, 18;
	shf.r.wrap.b32 	%r573, %r568, %r569, 18;
	mov.b64 	%rd737, {%r573, %r572};
	xor.b64  	%rd738, %rd736, %rd737;
	shf.l.wrap.b32 	%r574, %r568, %r569, 23;
	shf.l.wrap.b32 	%r575, %r569, %r568, 23;
	mov.b64 	%rd739, {%r575, %r574};
	xor.b64  	%rd740, %rd738, %rd739;
	add.s64 	%rd741, %rd735, %rd740;
	add.s64 	%rd742, %rd741, 3308224258029322869;
	add.s64 	%rd743, %rd742, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd719;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 28;
	shf.r.wrap.b32 	%r579, %r576, %r577, 28;
	mov.b64 	%rd744, {%r579, %r578};
	shf.l.wrap.b32 	%r580, %r576, %r577, 30;
	shf.l.wrap.b32 	%r581, %r577, %r576, 30;
	mov.b64 	%rd745, {%r581, %r580};
	xor.b64  	%rd746, %rd744, %rd745;
	shf.l.wrap.b32 	%r582, %r576, %r577, 25;
	shf.l.wrap.b32 	%r583, %r577, %r576, 25;
	mov.b64 	%rd747, {%r583, %r582};
	xor.b64  	%rd748, %rd746, %rd747;
	and.b64  	%rd749, %rd719, %rd684;
	or.b64  	%rd750, %rd719, %rd684;
	and.b64  	%rd751, %rd750, %rd649;
	or.b64  	%rd752, %rd751, %rd749;
	add.s64 	%rd753, %rd752, %rd748;
	add.s64 	%rd754, %rd753, %rd742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd9540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd9540;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 19;
	shf.r.wrap.b32 	%r587, %r584, %r585, 19;
	mov.b64 	%rd755, {%r587, %r586};
	shf.l.wrap.b32 	%r588, %r584, %r585, 3;
	shf.l.wrap.b32 	%r589, %r585, %r584, 3;
	mov.b64 	%rd756, {%r589, %r588};
	xor.b64  	%rd757, %rd755, %rd756;
	shr.u64 	%rd758, %rd9540, 6;
	xor.b64  	%rd759, %rd757, %rd758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd234;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 1;
	shf.r.wrap.b32 	%r593, %r590, %r591, 1;
	mov.b64 	%rd760, {%r593, %r592};
	shf.r.wrap.b32 	%r594, %r591, %r590, 8;
	shf.r.wrap.b32 	%r595, %r590, %r591, 8;
	mov.b64 	%rd761, {%r595, %r594};
	xor.b64  	%rd762, %rd760, %rd761;
	shr.u64 	%rd763, %rd234, 7;
	xor.b64  	%rd764, %rd762, %rd763;
	add.s64 	%rd765, %rd759, %rd231;
	add.s64 	%rd9536, %rd765, %rd764;
	add.s64 	%rd766, %rd9536, %rd638;
	xor.b64  	%rd767, %rd708, %rd673;
	and.b64  	%rd768, %rd743, %rd767;
	xor.b64  	%rd769, %rd768, %rd673;
	add.s64 	%rd770, %rd766, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd743;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd771, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd772, {%r601, %r600};
	xor.b64  	%rd773, %rd771, %rd772;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd774, {%r603, %r602};
	xor.b64  	%rd775, %rd773, %rd774;
	add.s64 	%rd776, %rd770, %rd775;
	add.s64 	%rd777, %rd776, 5365058923640841347;
	add.s64 	%rd778, %rd777, %rd649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd754;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd779, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd780, {%r609, %r608};
	xor.b64  	%rd781, %rd779, %rd780;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd782, {%r611, %r610};
	xor.b64  	%rd783, %rd781, %rd782;
	and.b64  	%rd784, %rd754, %rd719;
	or.b64  	%rd785, %rd754, %rd719;
	and.b64  	%rd786, %rd785, %rd684;
	or.b64  	%rd787, %rd786, %rd784;
	add.s64 	%rd788, %rd787, %rd783;
	add.s64 	%rd789, %rd788, %rd777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd9538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd9538;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 19;
	shf.r.wrap.b32 	%r615, %r612, %r613, 19;
	mov.b64 	%rd790, {%r615, %r614};
	shf.l.wrap.b32 	%r616, %r612, %r613, 3;
	shf.l.wrap.b32 	%r617, %r613, %r612, 3;
	mov.b64 	%rd791, {%r617, %r616};
	xor.b64  	%rd792, %rd790, %rd791;
	shr.u64 	%rd793, %rd9538, 6;
	xor.b64  	%rd794, %rd792, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd237;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 1;
	shf.r.wrap.b32 	%r621, %r618, %r619, 1;
	mov.b64 	%rd795, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 8;
	shf.r.wrap.b32 	%r623, %r618, %r619, 8;
	mov.b64 	%rd796, {%r623, %r622};
	xor.b64  	%rd797, %rd795, %rd796;
	shr.u64 	%rd798, %rd237, 7;
	xor.b64  	%rd799, %rd797, %rd798;
	add.s64 	%rd800, %rd794, %rd234;
	add.s64 	%rd801, %rd800, %rd799;
	add.s64 	%rd9534, %rd801, 544;
	add.s64 	%rd802, %rd9534, %rd673;
	xor.b64  	%rd803, %rd743, %rd708;
	and.b64  	%rd804, %rd778, %rd803;
	xor.b64  	%rd805, %rd804, %rd708;
	add.s64 	%rd806, %rd802, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd778;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 14;
	shf.r.wrap.b32 	%r627, %r624, %r625, 14;
	mov.b64 	%rd807, {%r627, %r626};
	shf.r.wrap.b32 	%r628, %r625, %r624, 18;
	shf.r.wrap.b32 	%r629, %r624, %r625, 18;
	mov.b64 	%rd808, {%r629, %r628};
	xor.b64  	%rd809, %rd807, %rd808;
	shf.l.wrap.b32 	%r630, %r624, %r625, 23;
	shf.l.wrap.b32 	%r631, %r625, %r624, 23;
	mov.b64 	%rd810, {%r631, %r630};
	xor.b64  	%rd811, %rd809, %rd810;
	add.s64 	%rd812, %rd806, %rd811;
	add.s64 	%rd813, %rd812, 6679025012923562964;
	add.s64 	%rd814, %rd813, %rd684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd789;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 28;
	shf.r.wrap.b32 	%r635, %r632, %r633, 28;
	mov.b64 	%rd815, {%r635, %r634};
	shf.l.wrap.b32 	%r636, %r632, %r633, 30;
	shf.l.wrap.b32 	%r637, %r633, %r632, 30;
	mov.b64 	%rd816, {%r637, %r636};
	xor.b64  	%rd817, %rd815, %rd816;
	shf.l.wrap.b32 	%r638, %r632, %r633, 25;
	shf.l.wrap.b32 	%r639, %r633, %r632, 25;
	mov.b64 	%rd818, {%r639, %r638};
	xor.b64  	%rd819, %rd817, %rd818;
	and.b64  	%rd820, %rd789, %rd754;
	or.b64  	%rd821, %rd789, %rd754;
	and.b64  	%rd822, %rd821, %rd719;
	or.b64  	%rd823, %rd822, %rd820;
	add.s64 	%rd824, %rd823, %rd819;
	add.s64 	%rd825, %rd824, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd9536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd9536;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 19;
	shf.r.wrap.b32 	%r643, %r640, %r641, 19;
	mov.b64 	%rd826, {%r643, %r642};
	shf.l.wrap.b32 	%r644, %r640, %r641, 3;
	shf.l.wrap.b32 	%r645, %r641, %r640, 3;
	mov.b64 	%rd827, {%r645, %r644};
	xor.b64  	%rd828, %rd826, %rd827;
	shr.u64 	%rd829, %rd9536, 6;
	xor.b64  	%rd830, %rd828, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r646,%dummy}, %rd239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd239;
	}
	shf.r.wrap.b32 	%r648, %r647, %r646, 1;
	shf.r.wrap.b32 	%r649, %r646, %r647, 1;
	mov.b64 	%rd831, {%r649, %r648};
	shf.r.wrap.b32 	%r650, %r647, %r646, 8;
	shf.r.wrap.b32 	%r651, %r646, %r647, 8;
	mov.b64 	%rd832, {%r651, %r650};
	xor.b64  	%rd833, %rd831, %rd832;
	shr.u64 	%rd834, %rd239, 7;
	xor.b64  	%rd835, %rd833, %rd834;
	add.s64 	%rd836, %rd830, %rd237;
	add.s64 	%rd837, %rd836, %rd9545;
	add.s64 	%rd9533, %rd837, %rd835;
	add.s64 	%rd838, %rd9533, %rd708;
	xor.b64  	%rd839, %rd778, %rd743;
	and.b64  	%rd840, %rd814, %rd839;
	xor.b64  	%rd841, %rd840, %rd743;
	add.s64 	%rd842, %rd838, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd814;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 14;
	shf.r.wrap.b32 	%r655, %r652, %r653, 14;
	mov.b64 	%rd843, {%r655, %r654};
	shf.r.wrap.b32 	%r656, %r653, %r652, 18;
	shf.r.wrap.b32 	%r657, %r652, %r653, 18;
	mov.b64 	%rd844, {%r657, %r656};
	xor.b64  	%rd845, %rd843, %rd844;
	shf.l.wrap.b32 	%r658, %r652, %r653, 23;
	shf.l.wrap.b32 	%r659, %r653, %r652, 23;
	mov.b64 	%rd846, {%r659, %r658};
	xor.b64  	%rd847, %rd845, %rd846;
	add.s64 	%rd848, %rd842, %rd847;
	add.s64 	%rd849, %rd848, 8573033837759648693;
	add.s64 	%rd850, %rd849, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd825;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 28;
	shf.r.wrap.b32 	%r663, %r660, %r661, 28;
	mov.b64 	%rd851, {%r663, %r662};
	shf.l.wrap.b32 	%r664, %r660, %r661, 30;
	shf.l.wrap.b32 	%r665, %r661, %r660, 30;
	mov.b64 	%rd852, {%r665, %r664};
	xor.b64  	%rd853, %rd851, %rd852;
	shf.l.wrap.b32 	%r666, %r660, %r661, 25;
	shf.l.wrap.b32 	%r667, %r661, %r660, 25;
	mov.b64 	%rd854, {%r667, %r666};
	xor.b64  	%rd855, %rd853, %rd854;
	and.b64  	%rd856, %rd825, %rd789;
	or.b64  	%rd857, %rd825, %rd789;
	and.b64  	%rd858, %rd857, %rd754;
	or.b64  	%rd859, %rd858, %rd856;
	add.s64 	%rd860, %rd859, %rd855;
	add.s64 	%rd861, %rd860, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd9534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd9534;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 19;
	shf.r.wrap.b32 	%r671, %r668, %r669, 19;
	mov.b64 	%rd862, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 3;
	shf.l.wrap.b32 	%r673, %r669, %r668, 3;
	mov.b64 	%rd863, {%r673, %r672};
	xor.b64  	%rd864, %rd862, %rd863;
	shr.u64 	%rd865, %rd9534, 6;
	xor.b64  	%rd866, %rd864, %rd865;
	add.s64 	%rd867, %rd239, %rd19;
	add.s64 	%rd868, %rd867, %rd9546;
	add.s64 	%rd9532, %rd868, %rd866;
	add.s64 	%rd869, %rd9532, %rd743;
	xor.b64  	%rd870, %rd814, %rd778;
	and.b64  	%rd871, %rd850, %rd870;
	xor.b64  	%rd872, %rd871, %rd778;
	add.s64 	%rd873, %rd869, %rd872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd850;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 14;
	shf.r.wrap.b32 	%r677, %r674, %r675, 14;
	mov.b64 	%rd874, {%r677, %r676};
	shf.r.wrap.b32 	%r678, %r675, %r674, 18;
	shf.r.wrap.b32 	%r679, %r674, %r675, 18;
	mov.b64 	%rd875, {%r679, %r678};
	xor.b64  	%rd876, %rd874, %rd875;
	shf.l.wrap.b32 	%r680, %r674, %r675, 23;
	shf.l.wrap.b32 	%r681, %r675, %r674, 23;
	mov.b64 	%rd877, {%r681, %r680};
	xor.b64  	%rd878, %rd876, %rd877;
	add.s64 	%rd879, %rd873, %rd878;
	add.s64 	%rd880, %rd879, -7476448914759557205;
	add.s64 	%rd881, %rd880, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd861;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 28;
	shf.r.wrap.b32 	%r685, %r682, %r683, 28;
	mov.b64 	%rd882, {%r685, %r684};
	shf.l.wrap.b32 	%r686, %r682, %r683, 30;
	shf.l.wrap.b32 	%r687, %r683, %r682, 30;
	mov.b64 	%rd883, {%r687, %r686};
	xor.b64  	%rd884, %rd882, %rd883;
	shf.l.wrap.b32 	%r688, %r682, %r683, 25;
	shf.l.wrap.b32 	%r689, %r683, %r682, 25;
	mov.b64 	%rd885, {%r689, %r688};
	xor.b64  	%rd886, %rd884, %rd885;
	and.b64  	%rd887, %rd861, %rd825;
	or.b64  	%rd888, %rd861, %rd825;
	and.b64  	%rd889, %rd888, %rd789;
	or.b64  	%rd890, %rd889, %rd887;
	add.s64 	%rd891, %rd890, %rd886;
	add.s64 	%rd892, %rd891, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd9533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd9533;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 19;
	shf.r.wrap.b32 	%r693, %r690, %r691, 19;
	mov.b64 	%rd893, {%r693, %r692};
	shf.l.wrap.b32 	%r694, %r690, %r691, 3;
	shf.l.wrap.b32 	%r695, %r691, %r690, 3;
	mov.b64 	%rd894, {%r695, %r694};
	xor.b64  	%rd895, %rd893, %rd894;
	shr.u64 	%rd896, %rd9533, 6;
	xor.b64  	%rd897, %rd895, %rd896;
	add.s64 	%rd898, %rd9542, %rd19;
	add.s64 	%rd9544, %rd898, %rd897;
	add.s64 	%rd899, %rd9544, %rd778;
	xor.b64  	%rd900, %rd850, %rd814;
	and.b64  	%rd901, %rd881, %rd900;
	xor.b64  	%rd902, %rd901, %rd814;
	add.s64 	%rd903, %rd899, %rd902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd881;
	}
	shf.r.wrap.b32 	%r698, %r697, %r696, 14;
	shf.r.wrap.b32 	%r699, %r696, %r697, 14;
	mov.b64 	%rd904, {%r699, %r698};
	shf.r.wrap.b32 	%r700, %r697, %r696, 18;
	shf.r.wrap.b32 	%r701, %r696, %r697, 18;
	mov.b64 	%rd905, {%r701, %r700};
	xor.b64  	%rd906, %rd904, %rd905;
	shf.l.wrap.b32 	%r702, %r696, %r697, 23;
	shf.l.wrap.b32 	%r703, %r697, %r696, 23;
	mov.b64 	%rd907, {%r703, %r702};
	xor.b64  	%rd908, %rd906, %rd907;
	add.s64 	%rd909, %rd903, %rd908;
	add.s64 	%rd910, %rd909, -6327057829258317296;
	add.s64 	%rd911, %rd910, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd892;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 28;
	shf.r.wrap.b32 	%r707, %r704, %r705, 28;
	mov.b64 	%rd912, {%r707, %r706};
	shf.l.wrap.b32 	%r708, %r704, %r705, 30;
	shf.l.wrap.b32 	%r709, %r705, %r704, 30;
	mov.b64 	%rd913, {%r709, %r708};
	xor.b64  	%rd914, %rd912, %rd913;
	shf.l.wrap.b32 	%r710, %r704, %r705, 25;
	shf.l.wrap.b32 	%r711, %r705, %r704, 25;
	mov.b64 	%rd915, {%r711, %r710};
	xor.b64  	%rd916, %rd914, %rd915;
	and.b64  	%rd917, %rd892, %rd861;
	or.b64  	%rd918, %rd892, %rd861;
	and.b64  	%rd919, %rd918, %rd825;
	or.b64  	%rd920, %rd919, %rd917;
	add.s64 	%rd921, %rd920, %rd916;
	add.s64 	%rd922, %rd921, %rd910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd9532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd9532;
	}
	shf.r.wrap.b32 	%r714, %r713, %r712, 19;
	shf.r.wrap.b32 	%r715, %r712, %r713, 19;
	mov.b64 	%rd923, {%r715, %r714};
	shf.l.wrap.b32 	%r716, %r712, %r713, 3;
	shf.l.wrap.b32 	%r717, %r713, %r712, 3;
	mov.b64 	%rd924, {%r717, %r716};
	xor.b64  	%rd925, %rd923, %rd924;
	shr.u64 	%rd926, %rd9532, 6;
	xor.b64  	%rd927, %rd925, %rd926;
	add.s64 	%rd928, %rd9540, %rd19;
	add.s64 	%rd9541, %rd928, %rd927;
	add.s64 	%rd929, %rd9541, %rd814;
	xor.b64  	%rd930, %rd881, %rd850;
	and.b64  	%rd931, %rd911, %rd930;
	xor.b64  	%rd932, %rd931, %rd850;
	add.s64 	%rd933, %rd929, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r719}, %rd911;
	}
	shf.r.wrap.b32 	%r720, %r719, %r718, 14;
	shf.r.wrap.b32 	%r721, %r718, %r719, 14;
	mov.b64 	%rd934, {%r721, %r720};
	shf.r.wrap.b32 	%r722, %r719, %r718, 18;
	shf.r.wrap.b32 	%r723, %r718, %r719, 18;
	mov.b64 	%rd935, {%r723, %r722};
	xor.b64  	%rd936, %rd934, %rd935;
	shf.l.wrap.b32 	%r724, %r718, %r719, 23;
	shf.l.wrap.b32 	%r725, %r719, %r718, 23;
	mov.b64 	%rd937, {%r725, %r724};
	xor.b64  	%rd938, %rd936, %rd937;
	add.s64 	%rd939, %rd933, %rd938;
	add.s64 	%rd940, %rd939, -5763719355590565569;
	add.s64 	%rd941, %rd940, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd922;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 28;
	shf.r.wrap.b32 	%r729, %r726, %r727, 28;
	mov.b64 	%rd942, {%r729, %r728};
	shf.l.wrap.b32 	%r730, %r726, %r727, 30;
	shf.l.wrap.b32 	%r731, %r727, %r726, 30;
	mov.b64 	%rd943, {%r731, %r730};
	xor.b64  	%rd944, %rd942, %rd943;
	shf.l.wrap.b32 	%r732, %r726, %r727, 25;
	shf.l.wrap.b32 	%r733, %r727, %r726, 25;
	mov.b64 	%rd945, {%r733, %r732};
	xor.b64  	%rd946, %rd944, %rd945;
	and.b64  	%rd947, %rd922, %rd892;
	or.b64  	%rd948, %rd922, %rd892;
	and.b64  	%rd949, %rd948, %rd861;
	or.b64  	%rd950, %rd949, %rd947;
	add.s64 	%rd951, %rd950, %rd946;
	add.s64 	%rd952, %rd951, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r734,%dummy}, %rd9544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r735}, %rd9544;
	}
	shf.r.wrap.b32 	%r736, %r735, %r734, 19;
	shf.r.wrap.b32 	%r737, %r734, %r735, 19;
	mov.b64 	%rd953, {%r737, %r736};
	shf.l.wrap.b32 	%r738, %r734, %r735, 3;
	shf.l.wrap.b32 	%r739, %r735, %r734, 3;
	mov.b64 	%rd954, {%r739, %r738};
	xor.b64  	%rd955, %rd953, %rd954;
	shr.u64 	%rd956, %rd9544, 6;
	xor.b64  	%rd957, %rd955, %rd956;
	add.s64 	%rd958, %rd9538, %rd19;
	add.s64 	%rd9539, %rd958, %rd957;
	add.s64 	%rd959, %rd9539, %rd850;
	xor.b64  	%rd960, %rd911, %rd881;
	and.b64  	%rd961, %rd941, %rd960;
	xor.b64  	%rd962, %rd961, %rd881;
	add.s64 	%rd963, %rd959, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r740,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd941;
	}
	shf.r.wrap.b32 	%r742, %r741, %r740, 14;
	shf.r.wrap.b32 	%r743, %r740, %r741, 14;
	mov.b64 	%rd964, {%r743, %r742};
	shf.r.wrap.b32 	%r744, %r741, %r740, 18;
	shf.r.wrap.b32 	%r745, %r740, %r741, 18;
	mov.b64 	%rd965, {%r745, %r744};
	xor.b64  	%rd966, %rd964, %rd965;
	shf.l.wrap.b32 	%r746, %r740, %r741, 23;
	shf.l.wrap.b32 	%r747, %r741, %r740, 23;
	mov.b64 	%rd967, {%r747, %r746};
	xor.b64  	%rd968, %rd966, %rd967;
	add.s64 	%rd969, %rd963, %rd968;
	add.s64 	%rd970, %rd969, -4658551843659510044;
	add.s64 	%rd971, %rd970, %rd861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r748,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r749}, %rd952;
	}
	shf.r.wrap.b32 	%r750, %r749, %r748, 28;
	shf.r.wrap.b32 	%r751, %r748, %r749, 28;
	mov.b64 	%rd972, {%r751, %r750};
	shf.l.wrap.b32 	%r752, %r748, %r749, 30;
	shf.l.wrap.b32 	%r753, %r749, %r748, 30;
	mov.b64 	%rd973, {%r753, %r752};
	xor.b64  	%rd974, %rd972, %rd973;
	shf.l.wrap.b32 	%r754, %r748, %r749, 25;
	shf.l.wrap.b32 	%r755, %r749, %r748, 25;
	mov.b64 	%rd975, {%r755, %r754};
	xor.b64  	%rd976, %rd974, %rd975;
	and.b64  	%rd977, %rd952, %rd922;
	or.b64  	%rd978, %rd952, %rd922;
	and.b64  	%rd979, %rd978, %rd892;
	or.b64  	%rd980, %rd979, %rd977;
	add.s64 	%rd981, %rd980, %rd976;
	add.s64 	%rd982, %rd981, %rd970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd9541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r757}, %rd9541;
	}
	shf.r.wrap.b32 	%r758, %r757, %r756, 19;
	shf.r.wrap.b32 	%r759, %r756, %r757, 19;
	mov.b64 	%rd983, {%r759, %r758};
	shf.l.wrap.b32 	%r760, %r756, %r757, 3;
	shf.l.wrap.b32 	%r761, %r757, %r756, 3;
	mov.b64 	%rd984, {%r761, %r760};
	xor.b64  	%rd985, %rd983, %rd984;
	shr.u64 	%rd986, %rd9541, 6;
	xor.b64  	%rd987, %rd985, %rd986;
	add.s64 	%rd988, %rd9536, %rd19;
	add.s64 	%rd9537, %rd988, %rd987;
	add.s64 	%rd989, %rd9537, %rd881;
	xor.b64  	%rd990, %rd941, %rd911;
	and.b64  	%rd991, %rd971, %rd990;
	xor.b64  	%rd992, %rd991, %rd911;
	add.s64 	%rd993, %rd989, %rd992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r763}, %rd971;
	}
	shf.r.wrap.b32 	%r764, %r763, %r762, 14;
	shf.r.wrap.b32 	%r765, %r762, %r763, 14;
	mov.b64 	%rd994, {%r765, %r764};
	shf.r.wrap.b32 	%r766, %r763, %r762, 18;
	shf.r.wrap.b32 	%r767, %r762, %r763, 18;
	mov.b64 	%rd995, {%r767, %r766};
	xor.b64  	%rd996, %rd994, %rd995;
	shf.l.wrap.b32 	%r768, %r762, %r763, 23;
	shf.l.wrap.b32 	%r769, %r763, %r762, 23;
	mov.b64 	%rd997, {%r769, %r768};
	xor.b64  	%rd998, %rd996, %rd997;
	add.s64 	%rd999, %rd993, %rd998;
	add.s64 	%rd1000, %rd999, -4116276920077217854;
	add.s64 	%rd9555, %rd1000, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r770,%dummy}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r771}, %rd982;
	}
	shf.r.wrap.b32 	%r772, %r771, %r770, 28;
	shf.r.wrap.b32 	%r773, %r770, %r771, 28;
	mov.b64 	%rd1001, {%r773, %r772};
	shf.l.wrap.b32 	%r774, %r770, %r771, 30;
	shf.l.wrap.b32 	%r775, %r771, %r770, 30;
	mov.b64 	%rd1002, {%r775, %r774};
	xor.b64  	%rd1003, %rd1001, %rd1002;
	shf.l.wrap.b32 	%r776, %r770, %r771, 25;
	shf.l.wrap.b32 	%r777, %r771, %r770, 25;
	mov.b64 	%rd1004, {%r777, %r776};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	and.b64  	%rd1006, %rd982, %rd952;
	or.b64  	%rd1007, %rd982, %rd952;
	and.b64  	%rd1008, %rd1007, %rd922;
	or.b64  	%rd1009, %rd1008, %rd1006;
	add.s64 	%rd1010, %rd1009, %rd1005;
	add.s64 	%rd9551, %rd1010, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r779}, %rd9539;
	}
	shf.r.wrap.b32 	%r780, %r779, %r778, 19;
	shf.r.wrap.b32 	%r781, %r778, %r779, 19;
	mov.b64 	%rd1011, {%r781, %r780};
	shf.l.wrap.b32 	%r782, %r778, %r779, 3;
	shf.l.wrap.b32 	%r783, %r779, %r778, 3;
	mov.b64 	%rd1012, {%r783, %r782};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	shr.u64 	%rd1014, %rd9539, 6;
	xor.b64  	%rd1015, %rd1013, %rd1014;
	add.s64 	%rd1016, %rd9534, %rd19;
	add.s64 	%rd9535, %rd1016, %rd1015;
	add.s64 	%rd1017, %rd9535, %rd911;
	xor.b64  	%rd1018, %rd971, %rd941;
	and.b64  	%rd1019, %rd9555, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd941;
	add.s64 	%rd1021, %rd1017, %rd1020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r784,%dummy}, %rd9555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r785}, %rd9555;
	}
	shf.r.wrap.b32 	%r786, %r785, %r784, 14;
	shf.r.wrap.b32 	%r787, %r784, %r785, 14;
	mov.b64 	%rd1022, {%r787, %r786};
	shf.r.wrap.b32 	%r788, %r785, %r784, 18;
	shf.r.wrap.b32 	%r789, %r784, %r785, 18;
	mov.b64 	%rd1023, {%r789, %r788};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	shf.l.wrap.b32 	%r790, %r784, %r785, 23;
	shf.l.wrap.b32 	%r791, %r785, %r784, 23;
	mov.b64 	%rd1025, {%r791, %r790};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	add.s64 	%rd1027, %rd1021, %rd1026;
	add.s64 	%rd1028, %rd1027, -3051310485924567259;
	add.s64 	%rd9554, %rd1028, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r792,%dummy}, %rd9551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r793}, %rd9551;
	}
	shf.r.wrap.b32 	%r794, %r793, %r792, 28;
	shf.r.wrap.b32 	%r795, %r792, %r793, 28;
	mov.b64 	%rd1029, {%r795, %r794};
	shf.l.wrap.b32 	%r796, %r792, %r793, 30;
	shf.l.wrap.b32 	%r797, %r793, %r792, 30;
	mov.b64 	%rd1030, {%r797, %r796};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	shf.l.wrap.b32 	%r798, %r792, %r793, 25;
	shf.l.wrap.b32 	%r799, %r793, %r792, 25;
	mov.b64 	%rd1032, {%r799, %r798};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	and.b64  	%rd1034, %rd9551, %rd982;
	or.b64  	%rd1035, %rd9551, %rd982;
	and.b64  	%rd1036, %rd1035, %rd952;
	or.b64  	%rd1037, %rd1036, %rd1034;
	add.s64 	%rd1038, %rd1037, %rd1033;
	add.s64 	%rd9550, %rd1038, %rd1028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r800,%dummy}, %rd9537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r801}, %rd9537;
	}
	shf.r.wrap.b32 	%r802, %r801, %r800, 19;
	shf.r.wrap.b32 	%r803, %r800, %r801, 19;
	mov.b64 	%rd1039, {%r803, %r802};
	shf.l.wrap.b32 	%r804, %r800, %r801, 3;
	shf.l.wrap.b32 	%r805, %r801, %r800, 3;
	mov.b64 	%rd1040, {%r805, %r804};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	shr.u64 	%rd1042, %rd9537, 6;
	xor.b64  	%rd1043, %rd1041, %rd1042;
	add.s64 	%rd1044, %rd1043, %rd9533;
	add.s64 	%rd9547, %rd1044, %rd21;
	add.s64 	%rd1045, %rd9547, %rd941;
	xor.b64  	%rd1046, %rd9555, %rd971;
	and.b64  	%rd1047, %rd9554, %rd1046;
	xor.b64  	%rd1048, %rd1047, %rd971;
	add.s64 	%rd1049, %rd1045, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd9554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd9554;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 14;
	shf.r.wrap.b32 	%r809, %r806, %r807, 14;
	mov.b64 	%rd1050, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r807, %r806, 18;
	shf.r.wrap.b32 	%r811, %r806, %r807, 18;
	mov.b64 	%rd1051, {%r811, %r810};
	xor.b64  	%rd1052, %rd1050, %rd1051;
	shf.l.wrap.b32 	%r812, %r806, %r807, 23;
	shf.l.wrap.b32 	%r813, %r807, %r806, 23;
	mov.b64 	%rd1053, {%r813, %r812};
	xor.b64  	%rd1054, %rd1052, %rd1053;
	add.s64 	%rd1055, %rd1049, %rd1054;
	add.s64 	%rd1056, %rd1055, 489312712824947311;
	add.s64 	%rd9553, %rd1056, %rd952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd9550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd9550;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 28;
	shf.r.wrap.b32 	%r817, %r814, %r815, 28;
	mov.b64 	%rd1057, {%r817, %r816};
	shf.l.wrap.b32 	%r818, %r814, %r815, 30;
	shf.l.wrap.b32 	%r819, %r815, %r814, 30;
	mov.b64 	%rd1058, {%r819, %r818};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	shf.l.wrap.b32 	%r820, %r814, %r815, 25;
	shf.l.wrap.b32 	%r821, %r815, %r814, 25;
	mov.b64 	%rd1060, {%r821, %r820};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	and.b64  	%rd1062, %rd9550, %rd9551;
	or.b64  	%rd1063, %rd9550, %rd9551;
	and.b64  	%rd1064, %rd1063, %rd982;
	or.b64  	%rd1065, %rd1064, %rd1062;
	add.s64 	%rd1066, %rd1065, %rd1061;
	add.s64 	%rd9549, %rd1066, %rd1056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd9535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd9535;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 19;
	shf.r.wrap.b32 	%r825, %r822, %r823, 19;
	mov.b64 	%rd1067, {%r825, %r824};
	shf.l.wrap.b32 	%r826, %r822, %r823, 3;
	shf.l.wrap.b32 	%r827, %r823, %r822, 3;
	mov.b64 	%rd1068, {%r827, %r826};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	shr.u64 	%rd1070, %rd9535, 6;
	xor.b64  	%rd1071, %rd1069, %rd1070;
	shf.r.wrap.b32 	%r828, %r501, %r500, 1;
	shf.r.wrap.b32 	%r829, %r500, %r501, 1;
	mov.b64 	%rd1072, {%r829, %r828};
	shf.r.wrap.b32 	%r830, %r501, %r500, 8;
	shf.r.wrap.b32 	%r831, %r500, %r501, 8;
	mov.b64 	%rd1073, {%r831, %r830};
	xor.b64  	%rd1074, %rd1072, %rd1073;
	shr.u64 	%rd1075, %rd9545, 7;
	xor.b64  	%rd1076, %rd1074, %rd1075;
	add.s64 	%rd1077, %rd1071, %rd9532;
	add.s64 	%rd1078, %rd1077, %rd1076;
	add.s64 	%rd9543, %rd1078, 544;
	add.s64 	%rd1079, %rd9543, %rd971;
	xor.b64  	%rd1080, %rd9554, %rd9555;
	and.b64  	%rd1081, %rd9553, %rd1080;
	xor.b64  	%rd1082, %rd1081, %rd9555;
	add.s64 	%rd1083, %rd1079, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r832,%dummy}, %rd9553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd9553;
	}
	shf.r.wrap.b32 	%r834, %r833, %r832, 14;
	shf.r.wrap.b32 	%r835, %r832, %r833, 14;
	mov.b64 	%rd1084, {%r835, %r834};
	shf.r.wrap.b32 	%r836, %r833, %r832, 18;
	shf.r.wrap.b32 	%r837, %r832, %r833, 18;
	mov.b64 	%rd1085, {%r837, %r836};
	xor.b64  	%rd1086, %rd1084, %rd1085;
	shf.l.wrap.b32 	%r838, %r832, %r833, 23;
	shf.l.wrap.b32 	%r839, %r833, %r832, 23;
	mov.b64 	%rd1087, {%r839, %r838};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	add.s64 	%rd1089, %rd1083, %rd1088;
	add.s64 	%rd1090, %rd1089, 1452737877330783856;
	add.s64 	%rd9552, %rd1090, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r840,%dummy}, %rd9549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r841}, %rd9549;
	}
	shf.r.wrap.b32 	%r842, %r841, %r840, 28;
	shf.r.wrap.b32 	%r843, %r840, %r841, 28;
	mov.b64 	%rd1091, {%r843, %r842};
	shf.l.wrap.b32 	%r844, %r840, %r841, 30;
	shf.l.wrap.b32 	%r845, %r841, %r840, 30;
	mov.b64 	%rd1092, {%r845, %r844};
	xor.b64  	%rd1093, %rd1091, %rd1092;
	shf.l.wrap.b32 	%r846, %r840, %r841, 25;
	shf.l.wrap.b32 	%r847, %r841, %r840, 25;
	mov.b64 	%rd1094, {%r847, %r846};
	xor.b64  	%rd1095, %rd1093, %rd1094;
	and.b64  	%rd1096, %rd9549, %rd9550;
	or.b64  	%rd1097, %rd9549, %rd9550;
	and.b64  	%rd1098, %rd1097, %rd9551;
	or.b64  	%rd1099, %rd1098, %rd1096;
	add.s64 	%rd1100, %rd1099, %rd1095;
	add.s64 	%rd9548, %rd1100, %rd1090;
	mov.u64 	%rd9531, K;

$L__BB6_3:
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd9547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r849,%dummy}, %rd9547;
	}
	shf.l.wrap.b32 	%r850, %r849, %r848, 3;
	shf.l.wrap.b32 	%r851, %r848, %r849, 3;
	mov.b64 	%rd1101, {%r851, %r850};
	shf.r.wrap.b32 	%r852, %r848, %r849, 19;
	shf.r.wrap.b32 	%r853, %r849, %r848, 19;
	mov.b64 	%rd1102, {%r853, %r852};
	xor.b64  	%rd1103, %rd1102, %rd1101;
	shr.u64 	%rd1104, %rd9547, 6;
	xor.b64  	%rd1105, %rd1103, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r854,%dummy}, %rd9546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r855}, %rd9546;
	}
	shf.r.wrap.b32 	%r856, %r855, %r854, 8;
	shf.r.wrap.b32 	%r857, %r854, %r855, 8;
	mov.b64 	%rd1106, {%r857, %r856};
	shf.r.wrap.b32 	%r858, %r855, %r854, 1;
	shf.r.wrap.b32 	%r859, %r854, %r855, 1;
	mov.b64 	%rd1107, {%r859, %r858};
	xor.b64  	%rd1108, %rd1107, %rd1106;
	shr.u64 	%rd1109, %rd9546, 7;
	xor.b64  	%rd1110, %rd1108, %rd1109;
	add.s64 	%rd1111, %rd1105, %rd9545;
	add.s64 	%rd1112, %rd1111, %rd9544;
	add.s64 	%rd9545, %rd1112, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd9552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd9552;
	}
	shf.r.wrap.b32 	%r862, %r861, %r860, 18;
	shf.r.wrap.b32 	%r863, %r860, %r861, 18;
	mov.b64 	%rd1113, {%r863, %r862};
	shf.r.wrap.b32 	%r864, %r861, %r860, 14;
	shf.r.wrap.b32 	%r865, %r860, %r861, 14;
	mov.b64 	%rd1114, {%r865, %r864};
	xor.b64  	%rd1115, %rd1114, %rd1113;
	shf.l.wrap.b32 	%r866, %r860, %r861, 23;
	shf.l.wrap.b32 	%r867, %r861, %r860, 23;
	mov.b64 	%rd1116, {%r867, %r866};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	xor.b64  	%rd1118, %rd9553, %rd9554;
	and.b64  	%rd1119, %rd9552, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd9554;
	add.s64 	%rd1121, %rd1120, %rd9555;
	add.s64 	%rd1122, %rd1121, %rd1117;
	ld.const.u64 	%rd1123, [%rd9531+256];
	add.s64 	%rd1124, %rd1122, %rd1123;
	add.s64 	%rd1125, %rd1124, %rd9545;
	add.s64 	%rd1126, %rd1125, %rd9551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd9548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd9548;
	}
	shf.l.wrap.b32 	%r870, %r869, %r868, 30;
	shf.l.wrap.b32 	%r871, %r868, %r869, 30;
	mov.b64 	%rd1127, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r868, %r869, 28;
	shf.r.wrap.b32 	%r873, %r869, %r868, 28;
	mov.b64 	%rd1128, {%r873, %r872};
	xor.b64  	%rd1129, %rd1128, %rd1127;
	shf.l.wrap.b32 	%r874, %r869, %r868, 25;
	shf.l.wrap.b32 	%r875, %r868, %r869, 25;
	mov.b64 	%rd1130, {%r875, %r874};
	xor.b64  	%rd1131, %rd1129, %rd1130;
	or.b64  	%rd1132, %rd9548, %rd9549;
	and.b64  	%rd1133, %rd1132, %rd9550;
	and.b64  	%rd1134, %rd9548, %rd9549;
	or.b64  	%rd1135, %rd1133, %rd1134;
	add.s64 	%rd1136, %rd1135, %rd1131;
	add.s64 	%rd1137, %rd1136, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r876}, %rd9543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd9543;
	}
	shf.l.wrap.b32 	%r878, %r877, %r876, 3;
	shf.l.wrap.b32 	%r879, %r876, %r877, 3;
	mov.b64 	%rd1138, {%r879, %r878};
	shf.r.wrap.b32 	%r880, %r876, %r877, 19;
	shf.r.wrap.b32 	%r881, %r877, %r876, 19;
	mov.b64 	%rd1139, {%r881, %r880};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shr.u64 	%rd1141, %rd9543, 6;
	xor.b64  	%rd1142, %rd1140, %rd1141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd9542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd9542;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 8;
	shf.r.wrap.b32 	%r885, %r882, %r883, 8;
	mov.b64 	%rd1143, {%r885, %r884};
	shf.r.wrap.b32 	%r886, %r883, %r882, 1;
	shf.r.wrap.b32 	%r887, %r882, %r883, 1;
	mov.b64 	%rd1144, {%r887, %r886};
	xor.b64  	%rd1145, %rd1144, %rd1143;
	shr.u64 	%rd1146, %rd9542, 7;
	xor.b64  	%rd1147, %rd1145, %rd1146;
	add.s64 	%rd1148, %rd1142, %rd9546;
	add.s64 	%rd1149, %rd1148, %rd9541;
	add.s64 	%rd9546, %rd1149, %rd1147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r888,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd1126;
	}
	shf.r.wrap.b32 	%r890, %r889, %r888, 14;
	shf.r.wrap.b32 	%r891, %r888, %r889, 14;
	mov.b64 	%rd1150, {%r891, %r890};
	shf.r.wrap.b32 	%r892, %r889, %r888, 18;
	shf.r.wrap.b32 	%r893, %r888, %r889, 18;
	mov.b64 	%rd1151, {%r893, %r892};
	xor.b64  	%rd1152, %rd1150, %rd1151;
	shf.l.wrap.b32 	%r894, %r888, %r889, 23;
	shf.l.wrap.b32 	%r895, %r889, %r888, 23;
	mov.b64 	%rd1153, {%r895, %r894};
	xor.b64  	%rd1154, %rd1152, %rd1153;
	xor.b64  	%rd1155, %rd9552, %rd9553;
	and.b64  	%rd1156, %rd1126, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd9553;
	ld.const.u64 	%rd1158, [%rd9531+264];
	add.s64 	%rd1159, %rd1158, %rd9554;
	add.s64 	%rd1160, %rd1159, %rd9546;
	add.s64 	%rd1161, %rd1160, %rd1157;
	add.s64 	%rd1162, %rd1161, %rd1154;
	add.s64 	%rd1163, %rd1162, %rd9550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r896,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r897}, %rd1137;
	}
	shf.r.wrap.b32 	%r898, %r897, %r896, 28;
	shf.r.wrap.b32 	%r899, %r896, %r897, 28;
	mov.b64 	%rd1164, {%r899, %r898};
	shf.l.wrap.b32 	%r900, %r896, %r897, 30;
	shf.l.wrap.b32 	%r901, %r897, %r896, 30;
	mov.b64 	%rd1165, {%r901, %r900};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	shf.l.wrap.b32 	%r902, %r896, %r897, 25;
	shf.l.wrap.b32 	%r903, %r897, %r896, 25;
	mov.b64 	%rd1167, {%r903, %r902};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	and.b64  	%rd1169, %rd1137, %rd9548;
	or.b64  	%rd1170, %rd1137, %rd9548;
	and.b64  	%rd1171, %rd1170, %rd9549;
	or.b64  	%rd1172, %rd1171, %rd1169;
	add.s64 	%rd1173, %rd1172, %rd1168;
	add.s64 	%rd1174, %rd1173, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r904,%dummy}, %rd9545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r905}, %rd9545;
	}
	shf.r.wrap.b32 	%r906, %r905, %r904, 19;
	shf.r.wrap.b32 	%r907, %r904, %r905, 19;
	mov.b64 	%rd1175, {%r907, %r906};
	shf.l.wrap.b32 	%r908, %r904, %r905, 3;
	shf.l.wrap.b32 	%r909, %r905, %r904, 3;
	mov.b64 	%rd1176, {%r909, %r908};
	xor.b64  	%rd1177, %rd1175, %rd1176;
	shr.u64 	%rd1178, %rd9545, 6;
	xor.b64  	%rd1179, %rd1177, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd9540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd9540;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 8;
	shf.r.wrap.b32 	%r913, %r910, %r911, 8;
	mov.b64 	%rd1180, {%r913, %r912};
	shf.r.wrap.b32 	%r914, %r911, %r910, 1;
	shf.r.wrap.b32 	%r915, %r910, %r911, 1;
	mov.b64 	%rd1181, {%r915, %r914};
	xor.b64  	%rd1182, %rd1181, %rd1180;
	shr.u64 	%rd1183, %rd9540, 7;
	xor.b64  	%rd1184, %rd1182, %rd1183;
	add.s64 	%rd1185, %rd1179, %rd9542;
	add.s64 	%rd1186, %rd1185, %rd9539;
	add.s64 	%rd9542, %rd1186, %rd1184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1163;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 14;
	shf.r.wrap.b32 	%r919, %r916, %r917, 14;
	mov.b64 	%rd1187, {%r919, %r918};
	shf.r.wrap.b32 	%r920, %r917, %r916, 18;
	shf.r.wrap.b32 	%r921, %r916, %r917, 18;
	mov.b64 	%rd1188, {%r921, %r920};
	xor.b64  	%rd1189, %rd1187, %rd1188;
	shf.l.wrap.b32 	%r922, %r916, %r917, 23;
	shf.l.wrap.b32 	%r923, %r917, %r916, 23;
	mov.b64 	%rd1190, {%r923, %r922};
	xor.b64  	%rd1191, %rd1189, %rd1190;
	xor.b64  	%rd1192, %rd1126, %rd9552;
	and.b64  	%rd1193, %rd1163, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd9552;
	ld.const.u64 	%rd1195, [%rd9531+272];
	add.s64 	%rd1196, %rd1195, %rd9553;
	add.s64 	%rd1197, %rd1196, %rd9542;
	add.s64 	%rd1198, %rd1197, %rd1194;
	add.s64 	%rd1199, %rd1198, %rd1191;
	add.s64 	%rd1200, %rd1199, %rd9549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1174;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 28;
	shf.r.wrap.b32 	%r927, %r924, %r925, 28;
	mov.b64 	%rd1201, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 30;
	shf.l.wrap.b32 	%r929, %r925, %r924, 30;
	mov.b64 	%rd1202, {%r929, %r928};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	shf.l.wrap.b32 	%r930, %r924, %r925, 25;
	shf.l.wrap.b32 	%r931, %r925, %r924, 25;
	mov.b64 	%rd1204, {%r931, %r930};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	and.b64  	%rd1206, %rd1174, %rd1137;
	or.b64  	%rd1207, %rd1174, %rd1137;
	and.b64  	%rd1208, %rd1207, %rd9548;
	or.b64  	%rd1209, %rd1208, %rd1206;
	add.s64 	%rd1210, %rd1209, %rd1205;
	add.s64 	%rd1211, %rd1210, %rd1199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r932,%dummy}, %rd9546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd9546;
	}
	shf.r.wrap.b32 	%r934, %r933, %r932, 19;
	shf.r.wrap.b32 	%r935, %r932, %r933, 19;
	mov.b64 	%rd1212, {%r935, %r934};
	shf.l.wrap.b32 	%r936, %r932, %r933, 3;
	shf.l.wrap.b32 	%r937, %r933, %r932, 3;
	mov.b64 	%rd1213, {%r937, %r936};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	shr.u64 	%rd1215, %rd9546, 6;
	xor.b64  	%rd1216, %rd1214, %rd1215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r938,%dummy}, %rd9538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r939}, %rd9538;
	}
	shf.r.wrap.b32 	%r940, %r939, %r938, 8;
	shf.r.wrap.b32 	%r941, %r938, %r939, 8;
	mov.b64 	%rd1217, {%r941, %r940};
	shf.r.wrap.b32 	%r942, %r939, %r938, 1;
	shf.r.wrap.b32 	%r943, %r938, %r939, 1;
	mov.b64 	%rd1218, {%r943, %r942};
	xor.b64  	%rd1219, %rd1218, %rd1217;
	shr.u64 	%rd1220, %rd9538, 7;
	xor.b64  	%rd1221, %rd1219, %rd1220;
	add.s64 	%rd1222, %rd1216, %rd9540;
	add.s64 	%rd1223, %rd1222, %rd9537;
	add.s64 	%rd9540, %rd1223, %rd1221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r944,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd1200;
	}
	shf.r.wrap.b32 	%r946, %r945, %r944, 14;
	shf.r.wrap.b32 	%r947, %r944, %r945, 14;
	mov.b64 	%rd1224, {%r947, %r946};
	shf.r.wrap.b32 	%r948, %r945, %r944, 18;
	shf.r.wrap.b32 	%r949, %r944, %r945, 18;
	mov.b64 	%rd1225, {%r949, %r948};
	xor.b64  	%rd1226, %rd1224, %rd1225;
	shf.l.wrap.b32 	%r950, %r944, %r945, 23;
	shf.l.wrap.b32 	%r951, %r945, %r944, 23;
	mov.b64 	%rd1227, {%r951, %r950};
	xor.b64  	%rd1228, %rd1226, %rd1227;
	xor.b64  	%rd1229, %rd1163, %rd1126;
	and.b64  	%rd1230, %rd1200, %rd1229;
	xor.b64  	%rd1231, %rd1230, %rd1126;
	ld.const.u64 	%rd1232, [%rd9531+280];
	add.s64 	%rd1233, %rd1232, %rd9552;
	add.s64 	%rd1234, %rd1233, %rd9540;
	add.s64 	%rd1235, %rd1234, %rd1231;
	add.s64 	%rd1236, %rd1235, %rd1228;
	add.s64 	%rd1237, %rd1236, %rd9548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r952,%dummy}, %rd1211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd1211;
	}
	shf.r.wrap.b32 	%r954, %r953, %r952, 28;
	shf.r.wrap.b32 	%r955, %r952, %r953, 28;
	mov.b64 	%rd1238, {%r955, %r954};
	shf.l.wrap.b32 	%r956, %r952, %r953, 30;
	shf.l.wrap.b32 	%r957, %r953, %r952, 30;
	mov.b64 	%rd1239, {%r957, %r956};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	shf.l.wrap.b32 	%r958, %r952, %r953, 25;
	shf.l.wrap.b32 	%r959, %r953, %r952, 25;
	mov.b64 	%rd1241, {%r959, %r958};
	xor.b64  	%rd1242, %rd1240, %rd1241;
	and.b64  	%rd1243, %rd1211, %rd1174;
	or.b64  	%rd1244, %rd1211, %rd1174;
	and.b64  	%rd1245, %rd1244, %rd1137;
	or.b64  	%rd1246, %rd1245, %rd1243;
	add.s64 	%rd1247, %rd1246, %rd1242;
	add.s64 	%rd1248, %rd1247, %rd1236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r960,%dummy}, %rd9542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd9542;
	}
	shf.r.wrap.b32 	%r962, %r961, %r960, 19;
	shf.r.wrap.b32 	%r963, %r960, %r961, 19;
	mov.b64 	%rd1249, {%r963, %r962};
	shf.l.wrap.b32 	%r964, %r960, %r961, 3;
	shf.l.wrap.b32 	%r965, %r961, %r960, 3;
	mov.b64 	%rd1250, {%r965, %r964};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	shr.u64 	%rd1252, %rd9542, 6;
	xor.b64  	%rd1253, %rd1251, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd9536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r967}, %rd9536;
	}
	shf.r.wrap.b32 	%r968, %r967, %r966, 8;
	shf.r.wrap.b32 	%r969, %r966, %r967, 8;
	mov.b64 	%rd1254, {%r969, %r968};
	shf.r.wrap.b32 	%r970, %r967, %r966, 1;
	shf.r.wrap.b32 	%r971, %r966, %r967, 1;
	mov.b64 	%rd1255, {%r971, %r970};
	xor.b64  	%rd1256, %rd1255, %rd1254;
	shr.u64 	%rd1257, %rd9536, 7;
	xor.b64  	%rd1258, %rd1256, %rd1257;
	add.s64 	%rd1259, %rd1253, %rd9538;
	add.s64 	%rd1260, %rd1259, %rd9535;
	add.s64 	%rd9538, %rd1260, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd1237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1237;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 14;
	shf.r.wrap.b32 	%r975, %r972, %r973, 14;
	mov.b64 	%rd1261, {%r975, %r974};
	shf.r.wrap.b32 	%r976, %r973, %r972, 18;
	shf.r.wrap.b32 	%r977, %r972, %r973, 18;
	mov.b64 	%rd1262, {%r977, %r976};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	shf.l.wrap.b32 	%r978, %r972, %r973, 23;
	shf.l.wrap.b32 	%r979, %r973, %r972, 23;
	mov.b64 	%rd1264, {%r979, %r978};
	xor.b64  	%rd1265, %rd1263, %rd1264;
	xor.b64  	%rd1266, %rd1200, %rd1163;
	and.b64  	%rd1267, %rd1237, %rd1266;
	xor.b64  	%rd1268, %rd1267, %rd1163;
	ld.const.u64 	%rd1269, [%rd9531+288];
	add.s64 	%rd1270, %rd1269, %rd1126;
	add.s64 	%rd1271, %rd1270, %rd9538;
	add.s64 	%rd1272, %rd1271, %rd1268;
	add.s64 	%rd1273, %rd1272, %rd1265;
	add.s64 	%rd1274, %rd1273, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd1248;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 28;
	shf.r.wrap.b32 	%r983, %r980, %r981, 28;
	mov.b64 	%rd1275, {%r983, %r982};
	shf.l.wrap.b32 	%r984, %r980, %r981, 30;
	shf.l.wrap.b32 	%r985, %r981, %r980, 30;
	mov.b64 	%rd1276, {%r985, %r984};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	shf.l.wrap.b32 	%r986, %r980, %r981, 25;
	shf.l.wrap.b32 	%r987, %r981, %r980, 25;
	mov.b64 	%rd1278, {%r987, %r986};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	and.b64  	%rd1280, %rd1248, %rd1211;
	or.b64  	%rd1281, %rd1248, %rd1211;
	and.b64  	%rd1282, %rd1281, %rd1174;
	or.b64  	%rd1283, %rd1282, %rd1280;
	add.s64 	%rd1284, %rd1283, %rd1279;
	add.s64 	%rd1285, %rd1284, %rd1273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd9540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd9540;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 19;
	shf.r.wrap.b32 	%r991, %r988, %r989, 19;
	mov.b64 	%rd1286, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 3;
	shf.l.wrap.b32 	%r993, %r989, %r988, 3;
	mov.b64 	%rd1287, {%r993, %r992};
	xor.b64  	%rd1288, %rd1286, %rd1287;
	shr.u64 	%rd1289, %rd9540, 6;
	xor.b64  	%rd1290, %rd1288, %rd1289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r994,%dummy}, %rd9534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r995}, %rd9534;
	}
	shf.r.wrap.b32 	%r996, %r995, %r994, 8;
	shf.r.wrap.b32 	%r997, %r994, %r995, 8;
	mov.b64 	%rd1291, {%r997, %r996};
	shf.r.wrap.b32 	%r998, %r995, %r994, 1;
	shf.r.wrap.b32 	%r999, %r994, %r995, 1;
	mov.b64 	%rd1292, {%r999, %r998};
	xor.b64  	%rd1293, %rd1292, %rd1291;
	shr.u64 	%rd1294, %rd9534, 7;
	xor.b64  	%rd1295, %rd1293, %rd1294;
	add.s64 	%rd1296, %rd1290, %rd9536;
	add.s64 	%rd1297, %rd1296, %rd9547;
	add.s64 	%rd9536, %rd1297, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1000,%dummy}, %rd1274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1001}, %rd1274;
	}
	shf.r.wrap.b32 	%r1002, %r1001, %r1000, 14;
	shf.r.wrap.b32 	%r1003, %r1000, %r1001, 14;
	mov.b64 	%rd1298, {%r1003, %r1002};
	shf.r.wrap.b32 	%r1004, %r1001, %r1000, 18;
	shf.r.wrap.b32 	%r1005, %r1000, %r1001, 18;
	mov.b64 	%rd1299, {%r1005, %r1004};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	shf.l.wrap.b32 	%r1006, %r1000, %r1001, 23;
	shf.l.wrap.b32 	%r1007, %r1001, %r1000, 23;
	mov.b64 	%rd1301, {%r1007, %r1006};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	xor.b64  	%rd1303, %rd1237, %rd1200;
	and.b64  	%rd1304, %rd1274, %rd1303;
	xor.b64  	%rd1305, %rd1304, %rd1200;
	ld.const.u64 	%rd1306, [%rd9531+296];
	add.s64 	%rd1307, %rd1306, %rd1163;
	add.s64 	%rd1308, %rd1307, %rd9536;
	add.s64 	%rd1309, %rd1308, %rd1305;
	add.s64 	%rd1310, %rd1309, %rd1302;
	add.s64 	%rd1311, %rd1310, %rd1174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1008,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd1285;
	}
	shf.r.wrap.b32 	%r1010, %r1009, %r1008, 28;
	shf.r.wrap.b32 	%r1011, %r1008, %r1009, 28;
	mov.b64 	%rd1312, {%r1011, %r1010};
	shf.l.wrap.b32 	%r1012, %r1008, %r1009, 30;
	shf.l.wrap.b32 	%r1013, %r1009, %r1008, 30;
	mov.b64 	%rd1313, {%r1013, %r1012};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	shf.l.wrap.b32 	%r1014, %r1008, %r1009, 25;
	shf.l.wrap.b32 	%r1015, %r1009, %r1008, 25;
	mov.b64 	%rd1315, {%r1015, %r1014};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	and.b64  	%rd1317, %rd1285, %rd1248;
	or.b64  	%rd1318, %rd1285, %rd1248;
	and.b64  	%rd1319, %rd1318, %rd1211;
	or.b64  	%rd1320, %rd1319, %rd1317;
	add.s64 	%rd1321, %rd1320, %rd1316;
	add.s64 	%rd1322, %rd1321, %rd1310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1016,%dummy}, %rd9538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd9538;
	}
	shf.r.wrap.b32 	%r1018, %r1017, %r1016, 19;
	shf.r.wrap.b32 	%r1019, %r1016, %r1017, 19;
	mov.b64 	%rd1323, {%r1019, %r1018};
	shf.l.wrap.b32 	%r1020, %r1016, %r1017, 3;
	shf.l.wrap.b32 	%r1021, %r1017, %r1016, 3;
	mov.b64 	%rd1324, {%r1021, %r1020};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	shr.u64 	%rd1326, %rd9538, 6;
	xor.b64  	%rd1327, %rd1325, %rd1326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd9533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1023}, %rd9533;
	}
	shf.r.wrap.b32 	%r1024, %r1023, %r1022, 8;
	shf.r.wrap.b32 	%r1025, %r1022, %r1023, 8;
	mov.b64 	%rd1328, {%r1025, %r1024};
	shf.r.wrap.b32 	%r1026, %r1023, %r1022, 1;
	shf.r.wrap.b32 	%r1027, %r1022, %r1023, 1;
	mov.b64 	%rd1329, {%r1027, %r1026};
	xor.b64  	%rd1330, %rd1329, %rd1328;
	shr.u64 	%rd1331, %rd9533, 7;
	xor.b64  	%rd1332, %rd1330, %rd1331;
	add.s64 	%rd1333, %rd1327, %rd9534;
	add.s64 	%rd1334, %rd1333, %rd9543;
	add.s64 	%rd9534, %rd1334, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd1311;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 14;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 14;
	mov.b64 	%rd1335, {%r1031, %r1030};
	shf.r.wrap.b32 	%r1032, %r1029, %r1028, 18;
	shf.r.wrap.b32 	%r1033, %r1028, %r1029, 18;
	mov.b64 	%rd1336, {%r1033, %r1032};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	shf.l.wrap.b32 	%r1034, %r1028, %r1029, 23;
	shf.l.wrap.b32 	%r1035, %r1029, %r1028, 23;
	mov.b64 	%rd1338, {%r1035, %r1034};
	xor.b64  	%rd1339, %rd1337, %rd1338;
	xor.b64  	%rd1340, %rd1274, %rd1237;
	and.b64  	%rd1341, %rd1311, %rd1340;
	xor.b64  	%rd1342, %rd1341, %rd1237;
	ld.const.u64 	%rd1343, [%rd9531+304];
	add.s64 	%rd1344, %rd1343, %rd1200;
	add.s64 	%rd1345, %rd1344, %rd9534;
	add.s64 	%rd1346, %rd1345, %rd1342;
	add.s64 	%rd1347, %rd1346, %rd1339;
	add.s64 	%rd1348, %rd1347, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1036,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd1322;
	}
	shf.r.wrap.b32 	%r1038, %r1037, %r1036, 28;
	shf.r.wrap.b32 	%r1039, %r1036, %r1037, 28;
	mov.b64 	%rd1349, {%r1039, %r1038};
	shf.l.wrap.b32 	%r1040, %r1036, %r1037, 30;
	shf.l.wrap.b32 	%r1041, %r1037, %r1036, 30;
	mov.b64 	%rd1350, {%r1041, %r1040};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	shf.l.wrap.b32 	%r1042, %r1036, %r1037, 25;
	shf.l.wrap.b32 	%r1043, %r1037, %r1036, 25;
	mov.b64 	%rd1352, {%r1043, %r1042};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	and.b64  	%rd1354, %rd1322, %rd1285;
	or.b64  	%rd1355, %rd1322, %rd1285;
	and.b64  	%rd1356, %rd1355, %rd1248;
	or.b64  	%rd1357, %rd1356, %rd1354;
	add.s64 	%rd1358, %rd1357, %rd1353;
	add.s64 	%rd1359, %rd1358, %rd1347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1044,%dummy}, %rd9536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd9536;
	}
	shf.r.wrap.b32 	%r1046, %r1045, %r1044, 19;
	shf.r.wrap.b32 	%r1047, %r1044, %r1045, 19;
	mov.b64 	%rd1360, {%r1047, %r1046};
	shf.l.wrap.b32 	%r1048, %r1044, %r1045, 3;
	shf.l.wrap.b32 	%r1049, %r1045, %r1044, 3;
	mov.b64 	%rd1361, {%r1049, %r1048};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	shr.u64 	%rd1363, %rd9536, 6;
	xor.b64  	%rd1364, %rd1362, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd9532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1051}, %rd9532;
	}
	shf.r.wrap.b32 	%r1052, %r1051, %r1050, 8;
	shf.r.wrap.b32 	%r1053, %r1050, %r1051, 8;
	mov.b64 	%rd1365, {%r1053, %r1052};
	shf.r.wrap.b32 	%r1054, %r1051, %r1050, 1;
	shf.r.wrap.b32 	%r1055, %r1050, %r1051, 1;
	mov.b64 	%rd1366, {%r1055, %r1054};
	xor.b64  	%rd1367, %rd1366, %rd1365;
	shr.u64 	%rd1368, %rd9532, 7;
	xor.b64  	%rd1369, %rd1367, %rd1368;
	add.s64 	%rd1370, %rd1364, %rd9533;
	add.s64 	%rd1371, %rd1370, %rd9545;
	add.s64 	%rd9533, %rd1371, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1056,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1057}, %rd1348;
	}
	shf.r.wrap.b32 	%r1058, %r1057, %r1056, 14;
	shf.r.wrap.b32 	%r1059, %r1056, %r1057, 14;
	mov.b64 	%rd1372, {%r1059, %r1058};
	shf.r.wrap.b32 	%r1060, %r1057, %r1056, 18;
	shf.r.wrap.b32 	%r1061, %r1056, %r1057, 18;
	mov.b64 	%rd1373, {%r1061, %r1060};
	xor.b64  	%rd1374, %rd1372, %rd1373;
	shf.l.wrap.b32 	%r1062, %r1056, %r1057, 23;
	shf.l.wrap.b32 	%r1063, %r1057, %r1056, 23;
	mov.b64 	%rd1375, {%r1063, %r1062};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	xor.b64  	%rd1377, %rd1311, %rd1274;
	and.b64  	%rd1378, %rd1348, %rd1377;
	xor.b64  	%rd1379, %rd1378, %rd1274;
	ld.const.u64 	%rd1380, [%rd9531+312];
	add.s64 	%rd1381, %rd1380, %rd1237;
	add.s64 	%rd1382, %rd1381, %rd9533;
	add.s64 	%rd1383, %rd1382, %rd1379;
	add.s64 	%rd1384, %rd1383, %rd1376;
	add.s64 	%rd1385, %rd1384, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd1359;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 28;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 28;
	mov.b64 	%rd1386, {%r1067, %r1066};
	shf.l.wrap.b32 	%r1068, %r1064, %r1065, 30;
	shf.l.wrap.b32 	%r1069, %r1065, %r1064, 30;
	mov.b64 	%rd1387, {%r1069, %r1068};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	shf.l.wrap.b32 	%r1070, %r1064, %r1065, 25;
	shf.l.wrap.b32 	%r1071, %r1065, %r1064, 25;
	mov.b64 	%rd1389, {%r1071, %r1070};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	and.b64  	%rd1391, %rd1359, %rd1322;
	or.b64  	%rd1392, %rd1359, %rd1322;
	and.b64  	%rd1393, %rd1392, %rd1285;
	or.b64  	%rd1394, %rd1393, %rd1391;
	add.s64 	%rd1395, %rd1394, %rd1390;
	add.s64 	%rd1396, %rd1395, %rd1384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd9534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd9534;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 19;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 19;
	mov.b64 	%rd1397, {%r1075, %r1074};
	shf.l.wrap.b32 	%r1076, %r1072, %r1073, 3;
	shf.l.wrap.b32 	%r1077, %r1073, %r1072, 3;
	mov.b64 	%rd1398, {%r1077, %r1076};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	shr.u64 	%rd1400, %rd9534, 6;
	xor.b64  	%rd1401, %rd1399, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd9544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1079}, %rd9544;
	}
	shf.r.wrap.b32 	%r1080, %r1079, %r1078, 8;
	shf.r.wrap.b32 	%r1081, %r1078, %r1079, 8;
	mov.b64 	%rd1402, {%r1081, %r1080};
	shf.r.wrap.b32 	%r1082, %r1079, %r1078, 1;
	shf.r.wrap.b32 	%r1083, %r1078, %r1079, 1;
	mov.b64 	%rd1403, {%r1083, %r1082};
	xor.b64  	%rd1404, %rd1403, %rd1402;
	shr.u64 	%rd1405, %rd9544, 7;
	xor.b64  	%rd1406, %rd1404, %rd1405;
	add.s64 	%rd1407, %rd1401, %rd9532;
	add.s64 	%rd1408, %rd1407, %rd9546;
	add.s64 	%rd9532, %rd1408, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd1385;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 14;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 14;
	mov.b64 	%rd1409, {%r1087, %r1086};
	shf.r.wrap.b32 	%r1088, %r1085, %r1084, 18;
	shf.r.wrap.b32 	%r1089, %r1084, %r1085, 18;
	mov.b64 	%rd1410, {%r1089, %r1088};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	shf.l.wrap.b32 	%r1090, %r1084, %r1085, 23;
	shf.l.wrap.b32 	%r1091, %r1085, %r1084, 23;
	mov.b64 	%rd1412, {%r1091, %r1090};
	xor.b64  	%rd1413, %rd1411, %rd1412;
	xor.b64  	%rd1414, %rd1348, %rd1311;
	and.b64  	%rd1415, %rd1385, %rd1414;
	xor.b64  	%rd1416, %rd1415, %rd1311;
	ld.const.u64 	%rd1417, [%rd9531+320];
	add.s64 	%rd1418, %rd1417, %rd1274;
	add.s64 	%rd1419, %rd1418, %rd9532;
	add.s64 	%rd1420, %rd1419, %rd1416;
	add.s64 	%rd1421, %rd1420, %rd1413;
	add.s64 	%rd1422, %rd1421, %rd1285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1396;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 28;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 28;
	mov.b64 	%rd1423, {%r1095, %r1094};
	shf.l.wrap.b32 	%r1096, %r1092, %r1093, 30;
	shf.l.wrap.b32 	%r1097, %r1093, %r1092, 30;
	mov.b64 	%rd1424, {%r1097, %r1096};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	shf.l.wrap.b32 	%r1098, %r1092, %r1093, 25;
	shf.l.wrap.b32 	%r1099, %r1093, %r1092, 25;
	mov.b64 	%rd1426, {%r1099, %r1098};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	and.b64  	%rd1428, %rd1396, %rd1359;
	or.b64  	%rd1429, %rd1396, %rd1359;
	and.b64  	%rd1430, %rd1429, %rd1322;
	or.b64  	%rd1431, %rd1430, %rd1428;
	add.s64 	%rd1432, %rd1431, %rd1427;
	add.s64 	%rd1433, %rd1432, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd9533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd9533;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 19;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 19;
	mov.b64 	%rd1434, {%r1103, %r1102};
	shf.l.wrap.b32 	%r1104, %r1100, %r1101, 3;
	shf.l.wrap.b32 	%r1105, %r1101, %r1100, 3;
	mov.b64 	%rd1435, {%r1105, %r1104};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	shr.u64 	%rd1437, %rd9533, 6;
	xor.b64  	%rd1438, %rd1436, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd9541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd9541;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 8;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 8;
	mov.b64 	%rd1439, {%r1109, %r1108};
	shf.r.wrap.b32 	%r1110, %r1107, %r1106, 1;
	shf.r.wrap.b32 	%r1111, %r1106, %r1107, 1;
	mov.b64 	%rd1440, {%r1111, %r1110};
	xor.b64  	%rd1441, %rd1440, %rd1439;
	shr.u64 	%rd1442, %rd9541, 7;
	xor.b64  	%rd1443, %rd1441, %rd1442;
	add.s64 	%rd1444, %rd1438, %rd9544;
	add.s64 	%rd1445, %rd1444, %rd9542;
	add.s64 	%rd9544, %rd1445, %rd1443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1112,%dummy}, %rd1422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1113}, %rd1422;
	}
	shf.r.wrap.b32 	%r1114, %r1113, %r1112, 14;
	shf.r.wrap.b32 	%r1115, %r1112, %r1113, 14;
	mov.b64 	%rd1446, {%r1115, %r1114};
	shf.r.wrap.b32 	%r1116, %r1113, %r1112, 18;
	shf.r.wrap.b32 	%r1117, %r1112, %r1113, 18;
	mov.b64 	%rd1447, {%r1117, %r1116};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	shf.l.wrap.b32 	%r1118, %r1112, %r1113, 23;
	shf.l.wrap.b32 	%r1119, %r1113, %r1112, 23;
	mov.b64 	%rd1449, {%r1119, %r1118};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	xor.b64  	%rd1451, %rd1385, %rd1348;
	and.b64  	%rd1452, %rd1422, %rd1451;
	xor.b64  	%rd1453, %rd1452, %rd1348;
	ld.const.u64 	%rd1454, [%rd9531+328];
	add.s64 	%rd1455, %rd1454, %rd1311;
	add.s64 	%rd1456, %rd1455, %rd9544;
	add.s64 	%rd1457, %rd1456, %rd1453;
	add.s64 	%rd1458, %rd1457, %rd1450;
	add.s64 	%rd1459, %rd1458, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1120,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd1433;
	}
	shf.r.wrap.b32 	%r1122, %r1121, %r1120, 28;
	shf.r.wrap.b32 	%r1123, %r1120, %r1121, 28;
	mov.b64 	%rd1460, {%r1123, %r1122};
	shf.l.wrap.b32 	%r1124, %r1120, %r1121, 30;
	shf.l.wrap.b32 	%r1125, %r1121, %r1120, 30;
	mov.b64 	%rd1461, {%r1125, %r1124};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	shf.l.wrap.b32 	%r1126, %r1120, %r1121, 25;
	shf.l.wrap.b32 	%r1127, %r1121, %r1120, 25;
	mov.b64 	%rd1463, {%r1127, %r1126};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	and.b64  	%rd1465, %rd1433, %rd1396;
	or.b64  	%rd1466, %rd1433, %rd1396;
	and.b64  	%rd1467, %rd1466, %rd1359;
	or.b64  	%rd1468, %rd1467, %rd1465;
	add.s64 	%rd1469, %rd1468, %rd1464;
	add.s64 	%rd1470, %rd1469, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd9532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd9532;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 19;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 19;
	mov.b64 	%rd1471, {%r1131, %r1130};
	shf.l.wrap.b32 	%r1132, %r1128, %r1129, 3;
	shf.l.wrap.b32 	%r1133, %r1129, %r1128, 3;
	mov.b64 	%rd1472, {%r1133, %r1132};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	shr.u64 	%rd1474, %rd9532, 6;
	xor.b64  	%rd1475, %rd1473, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1134,%dummy}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1135}, %rd9539;
	}
	shf.r.wrap.b32 	%r1136, %r1135, %r1134, 8;
	shf.r.wrap.b32 	%r1137, %r1134, %r1135, 8;
	mov.b64 	%rd1476, {%r1137, %r1136};
	shf.r.wrap.b32 	%r1138, %r1135, %r1134, 1;
	shf.r.wrap.b32 	%r1139, %r1134, %r1135, 1;
	mov.b64 	%rd1477, {%r1139, %r1138};
	xor.b64  	%rd1478, %rd1477, %rd1476;
	shr.u64 	%rd1479, %rd9539, 7;
	xor.b64  	%rd1480, %rd1478, %rd1479;
	add.s64 	%rd1481, %rd1475, %rd9541;
	add.s64 	%rd1482, %rd1481, %rd9540;
	add.s64 	%rd9541, %rd1482, %rd1480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1140,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1141}, %rd1459;
	}
	shf.r.wrap.b32 	%r1142, %r1141, %r1140, 14;
	shf.r.wrap.b32 	%r1143, %r1140, %r1141, 14;
	mov.b64 	%rd1483, {%r1143, %r1142};
	shf.r.wrap.b32 	%r1144, %r1141, %r1140, 18;
	shf.r.wrap.b32 	%r1145, %r1140, %r1141, 18;
	mov.b64 	%rd1484, {%r1145, %r1144};
	xor.b64  	%rd1485, %rd1483, %rd1484;
	shf.l.wrap.b32 	%r1146, %r1140, %r1141, 23;
	shf.l.wrap.b32 	%r1147, %r1141, %r1140, 23;
	mov.b64 	%rd1486, {%r1147, %r1146};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	xor.b64  	%rd1488, %rd1422, %rd1385;
	and.b64  	%rd1489, %rd1459, %rd1488;
	xor.b64  	%rd1490, %rd1489, %rd1385;
	ld.const.u64 	%rd1491, [%rd9531+336];
	add.s64 	%rd1492, %rd1491, %rd1348;
	add.s64 	%rd1493, %rd1492, %rd9541;
	add.s64 	%rd1494, %rd1493, %rd1490;
	add.s64 	%rd1495, %rd1494, %rd1487;
	add.s64 	%rd1496, %rd1495, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd1470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1470;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 28;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 28;
	mov.b64 	%rd1497, {%r1151, %r1150};
	shf.l.wrap.b32 	%r1152, %r1148, %r1149, 30;
	shf.l.wrap.b32 	%r1153, %r1149, %r1148, 30;
	mov.b64 	%rd1498, {%r1153, %r1152};
	xor.b64  	%rd1499, %rd1497, %rd1498;
	shf.l.wrap.b32 	%r1154, %r1148, %r1149, 25;
	shf.l.wrap.b32 	%r1155, %r1149, %r1148, 25;
	mov.b64 	%rd1500, {%r1155, %r1154};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	and.b64  	%rd1502, %rd1470, %rd1433;
	or.b64  	%rd1503, %rd1470, %rd1433;
	and.b64  	%rd1504, %rd1503, %rd1396;
	or.b64  	%rd1505, %rd1504, %rd1502;
	add.s64 	%rd1506, %rd1505, %rd1501;
	add.s64 	%rd1507, %rd1506, %rd1495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1156,%dummy}, %rd9544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1157}, %rd9544;
	}
	shf.r.wrap.b32 	%r1158, %r1157, %r1156, 19;
	shf.r.wrap.b32 	%r1159, %r1156, %r1157, 19;
	mov.b64 	%rd1508, {%r1159, %r1158};
	shf.l.wrap.b32 	%r1160, %r1156, %r1157, 3;
	shf.l.wrap.b32 	%r1161, %r1157, %r1156, 3;
	mov.b64 	%rd1509, {%r1161, %r1160};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	shr.u64 	%rd1511, %rd9544, 6;
	xor.b64  	%rd1512, %rd1510, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd9537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd9537;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 8;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 8;
	mov.b64 	%rd1513, {%r1165, %r1164};
	shf.r.wrap.b32 	%r1166, %r1163, %r1162, 1;
	shf.r.wrap.b32 	%r1167, %r1162, %r1163, 1;
	mov.b64 	%rd1514, {%r1167, %r1166};
	xor.b64  	%rd1515, %rd1514, %rd1513;
	shr.u64 	%rd1516, %rd9537, 7;
	xor.b64  	%rd1517, %rd1515, %rd1516;
	add.s64 	%rd1518, %rd1512, %rd9539;
	add.s64 	%rd1519, %rd1518, %rd9538;
	add.s64 	%rd9539, %rd1519, %rd1517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd1496;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 14;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 14;
	mov.b64 	%rd1520, {%r1171, %r1170};
	shf.r.wrap.b32 	%r1172, %r1169, %r1168, 18;
	shf.r.wrap.b32 	%r1173, %r1168, %r1169, 18;
	mov.b64 	%rd1521, {%r1173, %r1172};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	shf.l.wrap.b32 	%r1174, %r1168, %r1169, 23;
	shf.l.wrap.b32 	%r1175, %r1169, %r1168, 23;
	mov.b64 	%rd1523, {%r1175, %r1174};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	xor.b64  	%rd1525, %rd1459, %rd1422;
	and.b64  	%rd1526, %rd1496, %rd1525;
	xor.b64  	%rd1527, %rd1526, %rd1422;
	ld.const.u64 	%rd1528, [%rd9531+344];
	add.s64 	%rd1529, %rd1528, %rd1385;
	add.s64 	%rd1530, %rd1529, %rd9539;
	add.s64 	%rd1531, %rd1530, %rd1527;
	add.s64 	%rd1532, %rd1531, %rd1524;
	add.s64 	%rd1533, %rd1532, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1507;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 28;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 28;
	mov.b64 	%rd1534, {%r1179, %r1178};
	shf.l.wrap.b32 	%r1180, %r1176, %r1177, 30;
	shf.l.wrap.b32 	%r1181, %r1177, %r1176, 30;
	mov.b64 	%rd1535, {%r1181, %r1180};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	shf.l.wrap.b32 	%r1182, %r1176, %r1177, 25;
	shf.l.wrap.b32 	%r1183, %r1177, %r1176, 25;
	mov.b64 	%rd1537, {%r1183, %r1182};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	and.b64  	%rd1539, %rd1507, %rd1470;
	or.b64  	%rd1540, %rd1507, %rd1470;
	and.b64  	%rd1541, %rd1540, %rd1433;
	or.b64  	%rd1542, %rd1541, %rd1539;
	add.s64 	%rd1543, %rd1542, %rd1538;
	add.s64 	%rd1544, %rd1543, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1184,%dummy}, %rd9541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1185}, %rd9541;
	}
	shf.r.wrap.b32 	%r1186, %r1185, %r1184, 19;
	shf.r.wrap.b32 	%r1187, %r1184, %r1185, 19;
	mov.b64 	%rd1545, {%r1187, %r1186};
	shf.l.wrap.b32 	%r1188, %r1184, %r1185, 3;
	shf.l.wrap.b32 	%r1189, %r1185, %r1184, 3;
	mov.b64 	%rd1546, {%r1189, %r1188};
	xor.b64  	%rd1547, %rd1545, %rd1546;
	shr.u64 	%rd1548, %rd9541, 6;
	xor.b64  	%rd1549, %rd1547, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd9535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1191}, %rd9535;
	}
	shf.r.wrap.b32 	%r1192, %r1191, %r1190, 8;
	shf.r.wrap.b32 	%r1193, %r1190, %r1191, 8;
	mov.b64 	%rd1550, {%r1193, %r1192};
	shf.r.wrap.b32 	%r1194, %r1191, %r1190, 1;
	shf.r.wrap.b32 	%r1195, %r1190, %r1191, 1;
	mov.b64 	%rd1551, {%r1195, %r1194};
	xor.b64  	%rd1552, %rd1551, %rd1550;
	shr.u64 	%rd1553, %rd9535, 7;
	xor.b64  	%rd1554, %rd1552, %rd1553;
	add.s64 	%rd1555, %rd1549, %rd9537;
	add.s64 	%rd1556, %rd1555, %rd9536;
	add.s64 	%rd9537, %rd1556, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1533;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 14;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 14;
	mov.b64 	%rd1557, {%r1199, %r1198};
	shf.r.wrap.b32 	%r1200, %r1197, %r1196, 18;
	shf.r.wrap.b32 	%r1201, %r1196, %r1197, 18;
	mov.b64 	%rd1558, {%r1201, %r1200};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	shf.l.wrap.b32 	%r1202, %r1196, %r1197, 23;
	shf.l.wrap.b32 	%r1203, %r1197, %r1196, 23;
	mov.b64 	%rd1560, {%r1203, %r1202};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	xor.b64  	%rd1562, %rd1496, %rd1459;
	and.b64  	%rd1563, %rd1533, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1459;
	ld.const.u64 	%rd1565, [%rd9531+352];
	add.s64 	%rd1566, %rd1565, %rd1422;
	add.s64 	%rd1567, %rd1566, %rd9537;
	add.s64 	%rd1568, %rd1567, %rd1564;
	add.s64 	%rd1569, %rd1568, %rd1561;
	add.s64 	%rd9555, %rd1569, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd1544;
	}
	shf.r.wrap.b32 	%r1206, %r1205, %r1204, 28;
	shf.r.wrap.b32 	%r1207, %r1204, %r1205, 28;
	mov.b64 	%rd1570, {%r1207, %r1206};
	shf.l.wrap.b32 	%r1208, %r1204, %r1205, 30;
	shf.l.wrap.b32 	%r1209, %r1205, %r1204, 30;
	mov.b64 	%rd1571, {%r1209, %r1208};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	shf.l.wrap.b32 	%r1210, %r1204, %r1205, 25;
	shf.l.wrap.b32 	%r1211, %r1205, %r1204, 25;
	mov.b64 	%rd1573, {%r1211, %r1210};
	xor.b64  	%rd1574, %rd1572, %rd1573;
	and.b64  	%rd1575, %rd1544, %rd1507;
	or.b64  	%rd1576, %rd1544, %rd1507;
	and.b64  	%rd1577, %rd1576, %rd1470;
	or.b64  	%rd1578, %rd1577, %rd1575;
	add.s64 	%rd1579, %rd1578, %rd1574;
	add.s64 	%rd9551, %rd1579, %rd1569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1212,%dummy}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1213}, %rd9539;
	}
	shf.r.wrap.b32 	%r1214, %r1213, %r1212, 19;
	shf.r.wrap.b32 	%r1215, %r1212, %r1213, 19;
	mov.b64 	%rd1580, {%r1215, %r1214};
	shf.l.wrap.b32 	%r1216, %r1212, %r1213, 3;
	shf.l.wrap.b32 	%r1217, %r1213, %r1212, 3;
	mov.b64 	%rd1581, {%r1217, %r1216};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	shr.u64 	%rd1583, %rd9539, 6;
	xor.b64  	%rd1584, %rd1582, %rd1583;
	shf.r.wrap.b32 	%r1218, %r848, %r849, 8;
	shf.r.wrap.b32 	%r1219, %r849, %r848, 8;
	mov.b64 	%rd1585, {%r1219, %r1218};
	shf.r.wrap.b32 	%r1220, %r848, %r849, 1;
	shf.r.wrap.b32 	%r1221, %r849, %r848, 1;
	mov.b64 	%rd1586, {%r1221, %r1220};
	xor.b64  	%rd1587, %rd1586, %rd1585;
	shr.u64 	%rd1588, %rd9547, 7;
	xor.b64  	%rd1589, %rd1587, %rd1588;
	add.s64 	%rd1590, %rd1584, %rd9535;
	add.s64 	%rd1591, %rd1590, %rd9534;
	add.s64 	%rd9535, %rd1591, %rd1589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd9555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd9555;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 14;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 14;
	mov.b64 	%rd1592, {%r1225, %r1224};
	shf.r.wrap.b32 	%r1226, %r1223, %r1222, 18;
	shf.r.wrap.b32 	%r1227, %r1222, %r1223, 18;
	mov.b64 	%rd1593, {%r1227, %r1226};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	shf.l.wrap.b32 	%r1228, %r1222, %r1223, 23;
	shf.l.wrap.b32 	%r1229, %r1223, %r1222, 23;
	mov.b64 	%rd1595, {%r1229, %r1228};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	xor.b64  	%rd1597, %rd1533, %rd1496;
	and.b64  	%rd1598, %rd9555, %rd1597;
	xor.b64  	%rd1599, %rd1598, %rd1496;
	ld.const.u64 	%rd1600, [%rd9531+360];
	add.s64 	%rd1601, %rd1600, %rd1459;
	add.s64 	%rd1602, %rd1601, %rd9535;
	add.s64 	%rd1603, %rd1602, %rd1599;
	add.s64 	%rd1604, %rd1603, %rd1596;
	add.s64 	%rd9554, %rd1604, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd9551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd9551;
	}
	shf.r.wrap.b32 	%r1232, %r1231, %r1230, 28;
	shf.r.wrap.b32 	%r1233, %r1230, %r1231, 28;
	mov.b64 	%rd1605, {%r1233, %r1232};
	shf.l.wrap.b32 	%r1234, %r1230, %r1231, 30;
	shf.l.wrap.b32 	%r1235, %r1231, %r1230, 30;
	mov.b64 	%rd1606, {%r1235, %r1234};
	xor.b64  	%rd1607, %rd1605, %rd1606;
	shf.l.wrap.b32 	%r1236, %r1230, %r1231, 25;
	shf.l.wrap.b32 	%r1237, %r1231, %r1230, 25;
	mov.b64 	%rd1608, {%r1237, %r1236};
	xor.b64  	%rd1609, %rd1607, %rd1608;
	and.b64  	%rd1610, %rd9551, %rd1544;
	or.b64  	%rd1611, %rd9551, %rd1544;
	and.b64  	%rd1612, %rd1611, %rd1507;
	or.b64  	%rd1613, %rd1612, %rd1610;
	add.s64 	%rd1614, %rd1613, %rd1609;
	add.s64 	%rd9550, %rd1614, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd9537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1239}, %rd9537;
	}
	shf.r.wrap.b32 	%r1240, %r1239, %r1238, 19;
	shf.r.wrap.b32 	%r1241, %r1238, %r1239, 19;
	mov.b64 	%rd1615, {%r1241, %r1240};
	shf.l.wrap.b32 	%r1242, %r1238, %r1239, 3;
	shf.l.wrap.b32 	%r1243, %r1239, %r1238, 3;
	mov.b64 	%rd1616, {%r1243, %r1242};
	xor.b64  	%rd1617, %rd1615, %rd1616;
	shr.u64 	%rd1618, %rd9537, 6;
	xor.b64  	%rd1619, %rd1617, %rd1618;
	shf.r.wrap.b32 	%r1244, %r876, %r877, 8;
	shf.r.wrap.b32 	%r1245, %r877, %r876, 8;
	mov.b64 	%rd1620, {%r1245, %r1244};
	shf.r.wrap.b32 	%r1246, %r876, %r877, 1;
	shf.r.wrap.b32 	%r1247, %r877, %r876, 1;
	mov.b64 	%rd1621, {%r1247, %r1246};
	xor.b64  	%rd1622, %rd1621, %rd1620;
	shr.u64 	%rd1623, %rd9543, 7;
	xor.b64  	%rd1624, %rd1622, %rd1623;
	add.s64 	%rd1625, %rd1619, %rd9547;
	add.s64 	%rd1626, %rd1625, %rd9533;
	add.s64 	%rd9547, %rd1626, %rd1624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd9554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd9554;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 14;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 14;
	mov.b64 	%rd1627, {%r1251, %r1250};
	shf.r.wrap.b32 	%r1252, %r1249, %r1248, 18;
	shf.r.wrap.b32 	%r1253, %r1248, %r1249, 18;
	mov.b64 	%rd1628, {%r1253, %r1252};
	xor.b64  	%rd1629, %rd1627, %rd1628;
	shf.l.wrap.b32 	%r1254, %r1248, %r1249, 23;
	shf.l.wrap.b32 	%r1255, %r1249, %r1248, 23;
	mov.b64 	%rd1630, {%r1255, %r1254};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	xor.b64  	%rd1632, %rd9555, %rd1533;
	and.b64  	%rd1633, %rd9554, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1533;
	ld.const.u64 	%rd1635, [%rd9531+368];
	add.s64 	%rd1636, %rd1635, %rd1496;
	add.s64 	%rd1637, %rd1636, %rd9547;
	add.s64 	%rd1638, %rd1637, %rd1634;
	add.s64 	%rd1639, %rd1638, %rd1631;
	add.s64 	%rd9553, %rd1639, %rd1507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1256,%dummy}, %rd9550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1257}, %rd9550;
	}
	shf.r.wrap.b32 	%r1258, %r1257, %r1256, 28;
	shf.r.wrap.b32 	%r1259, %r1256, %r1257, 28;
	mov.b64 	%rd1640, {%r1259, %r1258};
	shf.l.wrap.b32 	%r1260, %r1256, %r1257, 30;
	shf.l.wrap.b32 	%r1261, %r1257, %r1256, 30;
	mov.b64 	%rd1641, {%r1261, %r1260};
	xor.b64  	%rd1642, %rd1640, %rd1641;
	shf.l.wrap.b32 	%r1262, %r1256, %r1257, 25;
	shf.l.wrap.b32 	%r1263, %r1257, %r1256, 25;
	mov.b64 	%rd1643, {%r1263, %r1262};
	xor.b64  	%rd1644, %rd1642, %rd1643;
	and.b64  	%rd1645, %rd9550, %rd9551;
	or.b64  	%rd1646, %rd9550, %rd9551;
	and.b64  	%rd1647, %rd1646, %rd1544;
	or.b64  	%rd1648, %rd1647, %rd1645;
	add.s64 	%rd1649, %rd1648, %rd1644;
	add.s64 	%rd9549, %rd1649, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1264,%dummy}, %rd9535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1265}, %rd9535;
	}
	shf.r.wrap.b32 	%r1266, %r1265, %r1264, 19;
	shf.r.wrap.b32 	%r1267, %r1264, %r1265, 19;
	mov.b64 	%rd1650, {%r1267, %r1266};
	shf.l.wrap.b32 	%r1268, %r1264, %r1265, 3;
	shf.l.wrap.b32 	%r1269, %r1265, %r1264, 3;
	mov.b64 	%rd1651, {%r1269, %r1268};
	xor.b64  	%rd1652, %rd1650, %rd1651;
	shr.u64 	%rd1653, %rd9535, 6;
	xor.b64  	%rd1654, %rd1652, %rd1653;
	shf.r.wrap.b32 	%r1270, %r905, %r904, 1;
	shf.r.wrap.b32 	%r1271, %r904, %r905, 1;
	mov.b64 	%rd1655, {%r1271, %r1270};
	shf.r.wrap.b32 	%r1272, %r905, %r904, 8;
	shf.r.wrap.b32 	%r1273, %r904, %r905, 8;
	mov.b64 	%rd1656, {%r1273, %r1272};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	shr.u64 	%rd1658, %rd9545, 7;
	xor.b64  	%rd1659, %rd1657, %rd1658;
	add.s64 	%rd1660, %rd1654, %rd9543;
	add.s64 	%rd1661, %rd1660, %rd9532;
	add.s64 	%rd9543, %rd1661, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd9553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd9553;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 14;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 14;
	mov.b64 	%rd1662, {%r1277, %r1276};
	shf.r.wrap.b32 	%r1278, %r1275, %r1274, 18;
	shf.r.wrap.b32 	%r1279, %r1274, %r1275, 18;
	mov.b64 	%rd1663, {%r1279, %r1278};
	xor.b64  	%rd1664, %rd1662, %rd1663;
	shf.l.wrap.b32 	%r1280, %r1274, %r1275, 23;
	shf.l.wrap.b32 	%r1281, %r1275, %r1274, 23;
	mov.b64 	%rd1665, {%r1281, %r1280};
	xor.b64  	%rd1666, %rd1664, %rd1665;
	xor.b64  	%rd1667, %rd9554, %rd9555;
	and.b64  	%rd1668, %rd9553, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd9555;
	ld.const.u64 	%rd1670, [%rd9531+376];
	add.s64 	%rd1671, %rd1670, %rd1533;
	add.s64 	%rd1672, %rd1671, %rd9543;
	add.s64 	%rd1673, %rd1672, %rd1669;
	add.s64 	%rd1674, %rd1673, %rd1666;
	add.s64 	%rd9552, %rd1674, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd9549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd9549;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 28;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 28;
	mov.b64 	%rd1675, {%r1285, %r1284};
	shf.l.wrap.b32 	%r1286, %r1282, %r1283, 30;
	shf.l.wrap.b32 	%r1287, %r1283, %r1282, 30;
	mov.b64 	%rd1676, {%r1287, %r1286};
	xor.b64  	%rd1677, %rd1675, %rd1676;
	shf.l.wrap.b32 	%r1288, %r1282, %r1283, 25;
	shf.l.wrap.b32 	%r1289, %r1283, %r1282, 25;
	mov.b64 	%rd1678, {%r1289, %r1288};
	xor.b64  	%rd1679, %rd1677, %rd1678;
	and.b64  	%rd1680, %rd9549, %rd9550;
	or.b64  	%rd1681, %rd9549, %rd9550;
	and.b64  	%rd1682, %rd1681, %rd9551;
	or.b64  	%rd1683, %rd1682, %rd1680;
	add.s64 	%rd1684, %rd1683, %rd1679;
	add.s64 	%rd9548, %rd1684, %rd1674;
	add.s64 	%rd9531, %rd9531, 128;
	add.s32 	%r12631, %r12631, 16;
	setp.lt.u32 	%p3, %r12631, 65;
	@%p3 bra 	$L__BB6_3;

	add.s64 	%rd9530, %rd9548, 7640891576956012808;
	add.s64 	%rd9529, %rd9549, -4942790177534073029;
	add.s64 	%rd9528, %rd9550, 4354685564936845355;
	add.s64 	%rd9527, %rd9551, -6534734903238641935;
	add.s64 	%rd9526, %rd9552, 5840696475078001361;
	add.s64 	%rd9525, %rd9553, -7276294671716946913;
	add.s64 	%rd9524, %rd9554, 2270897969802886507;
	add.s64 	%rd9523, %rd9555, 6620516959819538809;
	add.s32 	%r12630, %r12630, 1;
	setp.lt.u32 	%p4, %r12630, %r2;
	@%p4 bra 	$L__BB6_2;

	st.local.v2.u64 	[%rd1], {%rd9530, %rd9529};
	st.local.v2.u64 	[%rd1+16], {%rd9528, %rd9527};
	st.local.v2.u64 	[%rd1+32], {%rd9526, %rd9525};
	st.local.v2.u64 	[%rd1+48], {%rd9524, %rd9523};

$L__BB6_6:
	mov.u64 	%rd1685, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1685;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 14;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 14;
	mov.b64 	%rd1686, {%r1295, %r1294};
	shf.r.wrap.b32 	%r1296, %r1293, %r1292, 18;
	shf.r.wrap.b32 	%r1297, %r1292, %r1293, 18;
	mov.b64 	%rd1687, {%r1297, %r1296};
	xor.b64  	%rd1688, %rd1686, %rd1687;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 23;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 23;
	mov.b64 	%rd1689, {%r1299, %r1298};
	xor.b64  	%rd1690, %rd1688, %rd1689;
	add.s64 	%rd120, %rd1690, -7031530027109396581;
	mov.u64 	%rd1691, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1691;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 28;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 28;
	mov.b64 	%rd1692, {%r1303, %r1302};
	shf.l.wrap.b32 	%r1304, %r1300, %r1301, 30;
	shf.l.wrap.b32 	%r1305, %r1301, %r1300, 30;
	mov.b64 	%rd1693, {%r1305, %r1304};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	shf.l.wrap.b32 	%r1306, %r1300, %r1301, 25;
	shf.l.wrap.b32 	%r1307, %r1301, %r1300, 25;
	mov.b64 	%rd1695, {%r1307, %r1306};
	xor.b64  	%rd1696, %rd1694, %rd1695;
	add.s64 	%rd121, %rd1696, 6482280703085258342;
	mov.u64 	%rd1697, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1697;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 19;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 19;
	mov.b64 	%rd1698, {%r1311, %r1310};
	shf.l.wrap.b32 	%r1312, %r1308, %r1309, 3;
	shf.l.wrap.b32 	%r1313, %r1309, %r1308, 3;
	mov.b64 	%rd1699, {%r1313, %r1312};
	xor.b64  	%rd122, %rd1698, %rd1699;
	shf.r.wrap.b32 	%r1314, %r1309, %r1308, 1;
	shf.r.wrap.b32 	%r1315, %r1308, %r1309, 1;
	mov.b64 	%rd1700, {%r1315, %r1314};
	shf.r.wrap.b32 	%r1316, %r1309, %r1308, 8;
	shf.r.wrap.b32 	%r1317, %r1308, %r1309, 8;
	mov.b64 	%rd1701, {%r1317, %r1316};
	xor.b64  	%rd123, %rd1700, %rd1701;
	add.s64 	%rd1702, %rd120, %rd9530;
	add.s64 	%rd1703, %rd1702, -4263291710961585108;
	add.s64 	%rd1704, %rd121, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1703;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 14;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 14;
	mov.b64 	%rd1705, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r1319, %r1318, 18;
	shf.r.wrap.b32 	%r1323, %r1318, %r1319, 18;
	mov.b64 	%rd1706, {%r1323, %r1322};
	xor.b64  	%rd1707, %rd1705, %rd1706;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 23;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 23;
	mov.b64 	%rd1708, {%r1325, %r1324};
	xor.b64  	%rd1709, %rd1707, %rd1708;
	and.b64  	%rd1710, %rd1703, -3887949035690463538;
	xor.b64  	%rd1711, %rd1710, -7276294671716946913;
	add.s64 	%rd1712, %rd9529, %rd1711;
	add.s64 	%rd1713, %rd1712, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1704;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 28;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 28;
	mov.b64 	%rd1714, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 30;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 30;
	mov.b64 	%rd1715, {%r1331, %r1330};
	xor.b64  	%rd1716, %rd1714, %rd1715;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 25;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 25;
	mov.b64 	%rd1717, {%r1333, %r1332};
	xor.b64  	%rd1718, %rd1716, %rd1717;
	and.b64  	%rd1719, %rd1704, -3355664534840381901;
	or.b64  	%rd1720, %rd1719, 3026882967131160840;
	add.s64 	%rd1721, %rd1720, %rd1718;
	add.s64 	%rd1722, %rd1721, %rd1713;
	add.s64 	%rd1723, %rd1713, -3663095898801038493;
	add.s64 	%rd1724, %rd1722, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd1723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1723;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 14;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 14;
	mov.b64 	%rd1725, {%r1337, %r1336};
	shf.r.wrap.b32 	%r1338, %r1335, %r1334, 18;
	shf.r.wrap.b32 	%r1339, %r1334, %r1335, 18;
	mov.b64 	%rd1726, {%r1339, %r1338};
	xor.b64  	%rd1727, %rd1725, %rd1726;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 23;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 23;
	mov.b64 	%rd1728, {%r1341, %r1340};
	xor.b64  	%rd1729, %rd1727, %rd1728;
	xor.b64  	%rd1730, %rd1703, 5840696475078001361;
	and.b64  	%rd1731, %rd1723, %rd1730;
	xor.b64  	%rd1732, %rd1731, 5840696475078001361;
	add.s64 	%rd1733, %rd9528, %rd1732;
	add.s64 	%rd1734, %rd1733, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd1724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd1724;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 28;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 28;
	mov.b64 	%rd1735, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 30;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 30;
	mov.b64 	%rd1736, {%r1347, %r1346};
	xor.b64  	%rd1737, %rd1735, %rd1736;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 25;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 25;
	mov.b64 	%rd1738, {%r1349, %r1348};
	xor.b64  	%rd1739, %rd1737, %rd1738;
	and.b64  	%rd1740, %rd1724, %rd1704;
	or.b64  	%rd1741, %rd1724, %rd1704;
	and.b64  	%rd1742, %rd1741, 7640891576956012808;
	or.b64  	%rd1743, %rd1742, %rd1740;
	add.s64 	%rd1744, %rd1743, %rd1739;
	add.s64 	%rd1745, %rd1744, %rd1734;
	add.s64 	%rd1746, %rd1734, 877659737583668873;
	add.s64 	%rd1747, %rd1745, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd1746;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 14;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 14;
	mov.b64 	%rd1748, {%r1353, %r1352};
	shf.r.wrap.b32 	%r1354, %r1351, %r1350, 18;
	shf.r.wrap.b32 	%r1355, %r1350, %r1351, 18;
	mov.b64 	%rd1749, {%r1355, %r1354};
	xor.b64  	%rd1750, %rd1748, %rd1749;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 23;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 23;
	mov.b64 	%rd1751, {%r1357, %r1356};
	xor.b64  	%rd1752, %rd1750, %rd1751;
	xor.b64  	%rd1753, %rd1723, %rd1703;
	and.b64  	%rd1754, %rd1746, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1703;
	add.s64 	%rd1756, %rd9527, %rd1755;
	add.s64 	%rd1757, %rd1756, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1747;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 28;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 28;
	mov.b64 	%rd1758, {%r1361, %r1360};
	shf.l.wrap.b32 	%r1362, %r1358, %r1359, 30;
	shf.l.wrap.b32 	%r1363, %r1359, %r1358, 30;
	mov.b64 	%rd1759, {%r1363, %r1362};
	xor.b64  	%rd1760, %rd1758, %rd1759;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 25;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 25;
	mov.b64 	%rd1761, {%r1365, %r1364};
	xor.b64  	%rd1762, %rd1760, %rd1761;
	and.b64  	%rd1763, %rd1747, %rd1724;
	or.b64  	%rd1764, %rd1747, %rd1724;
	and.b64  	%rd1765, %rd1764, %rd1704;
	or.b64  	%rd1766, %rd1765, %rd1763;
	add.s64 	%rd1767, %rd1766, %rd1762;
	add.s64 	%rd1768, %rd1767, %rd1757;
	add.s64 	%rd1769, %rd1757, -6571292209873868907;
	add.s64 	%rd1770, %rd1768, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd1769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd1769;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 14;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 14;
	mov.b64 	%rd1771, {%r1369, %r1368};
	shf.r.wrap.b32 	%r1370, %r1367, %r1366, 18;
	shf.r.wrap.b32 	%r1371, %r1366, %r1367, 18;
	mov.b64 	%rd1772, {%r1371, %r1370};
	xor.b64  	%rd1773, %rd1771, %rd1772;
	shf.l.wrap.b32 	%r1372, %r1366, %r1367, 23;
	shf.l.wrap.b32 	%r1373, %r1367, %r1366, 23;
	mov.b64 	%rd1774, {%r1373, %r1372};
	xor.b64  	%rd1775, %rd1773, %rd1774;
	xor.b64  	%rd1776, %rd1746, %rd1723;
	and.b64  	%rd1777, %rd1769, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1723;
	add.s64 	%rd1779, %rd1702, %rd9526;
	add.s64 	%rd1780, %rd1779, %rd1778;
	add.s64 	%rd1781, %rd1780, %rd1775;
	add.s64 	%rd1782, %rd1781, -131588302623135388;
	add.s64 	%rd1783, %rd1782, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1375}, %rd1770;
	}
	shf.r.wrap.b32 	%r1376, %r1375, %r1374, 28;
	shf.r.wrap.b32 	%r1377, %r1374, %r1375, 28;
	mov.b64 	%rd1784, {%r1377, %r1376};
	shf.l.wrap.b32 	%r1378, %r1374, %r1375, 30;
	shf.l.wrap.b32 	%r1379, %r1375, %r1374, 30;
	mov.b64 	%rd1785, {%r1379, %r1378};
	xor.b64  	%rd1786, %rd1784, %rd1785;
	shf.l.wrap.b32 	%r1380, %r1374, %r1375, 25;
	shf.l.wrap.b32 	%r1381, %r1375, %r1374, 25;
	mov.b64 	%rd1787, {%r1381, %r1380};
	xor.b64  	%rd1788, %rd1786, %rd1787;
	and.b64  	%rd1789, %rd1770, %rd1747;
	or.b64  	%rd1790, %rd1770, %rd1747;
	and.b64  	%rd1791, %rd1790, %rd1724;
	or.b64  	%rd1792, %rd1791, %rd1789;
	add.s64 	%rd1793, %rd1792, %rd1788;
	add.s64 	%rd1794, %rd1793, %rd1782;
	add.s64 	%rd1795, %rd9525, %rd1723;
	xor.b64  	%rd1796, %rd1769, %rd1746;
	and.b64  	%rd1797, %rd1783, %rd1796;
	xor.b64  	%rd1798, %rd1797, %rd1746;
	add.s64 	%rd1799, %rd1795, %rd1798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd1783;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 14;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 14;
	mov.b64 	%rd1800, {%r1385, %r1384};
	shf.r.wrap.b32 	%r1386, %r1383, %r1382, 18;
	shf.r.wrap.b32 	%r1387, %r1382, %r1383, 18;
	mov.b64 	%rd1801, {%r1387, %r1386};
	xor.b64  	%rd1802, %rd1800, %rd1801;
	shf.l.wrap.b32 	%r1388, %r1382, %r1383, 23;
	shf.l.wrap.b32 	%r1389, %r1383, %r1382, 23;
	mov.b64 	%rd1803, {%r1389, %r1388};
	xor.b64  	%rd1804, %rd1802, %rd1803;
	add.s64 	%rd1805, %rd1799, %rd1804;
	add.s64 	%rd1806, %rd1805, 6480981068601479193;
	add.s64 	%rd1807, %rd1806, %rd1724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd1794;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 28;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 28;
	mov.b64 	%rd1808, {%r1393, %r1392};
	shf.l.wrap.b32 	%r1394, %r1390, %r1391, 30;
	shf.l.wrap.b32 	%r1395, %r1391, %r1390, 30;
	mov.b64 	%rd1809, {%r1395, %r1394};
	xor.b64  	%rd1810, %rd1808, %rd1809;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 25;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 25;
	mov.b64 	%rd1811, {%r1397, %r1396};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	and.b64  	%rd1813, %rd1794, %rd1770;
	or.b64  	%rd1814, %rd1794, %rd1770;
	and.b64  	%rd1815, %rd1814, %rd1747;
	or.b64  	%rd1816, %rd1815, %rd1813;
	add.s64 	%rd1817, %rd1816, %rd1812;
	add.s64 	%rd1818, %rd1817, %rd1806;
	add.s64 	%rd1819, %rd9524, %rd1746;
	xor.b64  	%rd1820, %rd1783, %rd1769;
	and.b64  	%rd1821, %rd1807, %rd1820;
	xor.b64  	%rd1822, %rd1821, %rd1769;
	add.s64 	%rd1823, %rd1819, %rd1822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd1807;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 14;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 14;
	mov.b64 	%rd1824, {%r1401, %r1400};
	shf.r.wrap.b32 	%r1402, %r1399, %r1398, 18;
	shf.r.wrap.b32 	%r1403, %r1398, %r1399, 18;
	mov.b64 	%rd1825, {%r1403, %r1402};
	xor.b64  	%rd1826, %rd1824, %rd1825;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 23;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 23;
	mov.b64 	%rd1827, {%r1405, %r1404};
	xor.b64  	%rd1828, %rd1826, %rd1827;
	add.s64 	%rd1829, %rd1823, %rd1828;
	add.s64 	%rd1830, %rd1829, -7908458776815382629;
	add.s64 	%rd1831, %rd1830, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd1818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd1818;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 28;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 28;
	mov.b64 	%rd1832, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 30;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 30;
	mov.b64 	%rd1833, {%r1411, %r1410};
	xor.b64  	%rd1834, %rd1832, %rd1833;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 25;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 25;
	mov.b64 	%rd1835, {%r1413, %r1412};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	and.b64  	%rd1837, %rd1818, %rd1794;
	or.b64  	%rd1838, %rd1818, %rd1794;
	and.b64  	%rd1839, %rd1838, %rd1770;
	or.b64  	%rd1840, %rd1839, %rd1837;
	add.s64 	%rd1841, %rd1840, %rd1836;
	add.s64 	%rd1842, %rd1841, %rd1830;
	add.s64 	%rd1843, %rd9523, %rd1769;
	xor.b64  	%rd1844, %rd1807, %rd1783;
	and.b64  	%rd1845, %rd1831, %rd1844;
	xor.b64  	%rd1846, %rd1845, %rd1783;
	add.s64 	%rd1847, %rd1843, %rd1846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd1831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd1831;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 14;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 14;
	mov.b64 	%rd1848, {%r1417, %r1416};
	shf.r.wrap.b32 	%r1418, %r1415, %r1414, 18;
	shf.r.wrap.b32 	%r1419, %r1414, %r1415, 18;
	mov.b64 	%rd1849, {%r1419, %r1418};
	xor.b64  	%rd1850, %rd1848, %rd1849;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 23;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 23;
	mov.b64 	%rd1851, {%r1421, %r1420};
	xor.b64  	%rd1852, %rd1850, %rd1851;
	add.s64 	%rd1853, %rd1847, %rd1852;
	add.s64 	%rd1854, %rd1853, -6116909921290321640;
	add.s64 	%rd1855, %rd1854, %rd1770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd1842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd1842;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 28;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 28;
	mov.b64 	%rd1856, {%r1425, %r1424};
	shf.l.wrap.b32 	%r1426, %r1422, %r1423, 30;
	shf.l.wrap.b32 	%r1427, %r1423, %r1422, 30;
	mov.b64 	%rd1857, {%r1427, %r1426};
	xor.b64  	%rd1858, %rd1856, %rd1857;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 25;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 25;
	mov.b64 	%rd1859, {%r1429, %r1428};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	and.b64  	%rd1861, %rd1842, %rd1818;
	or.b64  	%rd1862, %rd1842, %rd1818;
	and.b64  	%rd1863, %rd1862, %rd1794;
	or.b64  	%rd1864, %rd1863, %rd1861;
	add.s64 	%rd1865, %rd1864, %rd1860;
	add.s64 	%rd1866, %rd1865, %rd1854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd1855;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 14;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 14;
	mov.b64 	%rd1867, {%r1433, %r1432};
	shf.r.wrap.b32 	%r1434, %r1431, %r1430, 18;
	shf.r.wrap.b32 	%r1435, %r1430, %r1431, 18;
	mov.b64 	%rd1868, {%r1435, %r1434};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 23;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 23;
	mov.b64 	%rd1870, {%r1437, %r1436};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	xor.b64  	%rd1872, %rd1831, %rd1807;
	and.b64  	%rd1873, %rd1855, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1807;
	add.s64 	%rd1875, %rd1783, %rd1874;
	add.s64 	%rd1876, %rd1875, %rd1871;
	add.s64 	%rd1877, %rd1876, -2977023325855899461;
	add.s64 	%rd1878, %rd1877, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd1866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd1866;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 28;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 28;
	mov.b64 	%rd1879, {%r1441, %r1440};
	shf.l.wrap.b32 	%r1442, %r1438, %r1439, 30;
	shf.l.wrap.b32 	%r1443, %r1439, %r1438, 30;
	mov.b64 	%rd1880, {%r1443, %r1442};
	xor.b64  	%rd1881, %rd1879, %rd1880;
	shf.l.wrap.b32 	%r1444, %r1438, %r1439, 25;
	shf.l.wrap.b32 	%r1445, %r1439, %r1438, 25;
	mov.b64 	%rd1882, {%r1445, %r1444};
	xor.b64  	%rd1883, %rd1881, %rd1882;
	and.b64  	%rd1884, %rd1866, %rd1842;
	or.b64  	%rd1885, %rd1866, %rd1842;
	and.b64  	%rd1886, %rd1885, %rd1818;
	or.b64  	%rd1887, %rd1886, %rd1884;
	add.s64 	%rd1888, %rd1887, %rd1883;
	add.s64 	%rd1889, %rd1888, %rd1877;
	add.s64 	%rd1890, %rd1807, -7889362061204885570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd1878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd1878;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 14;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 14;
	mov.b64 	%rd1891, {%r1449, %r1448};
	shf.r.wrap.b32 	%r1450, %r1447, %r1446, 18;
	shf.r.wrap.b32 	%r1451, %r1446, %r1447, 18;
	mov.b64 	%rd1892, {%r1451, %r1450};
	xor.b64  	%rd1893, %rd1891, %rd1892;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 23;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 23;
	mov.b64 	%rd1894, {%r1453, %r1452};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	xor.b64  	%rd1896, %rd1855, %rd1831;
	and.b64  	%rd1897, %rd1878, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1831;
	add.s64 	%rd1899, %rd1890, %rd1898;
	add.s64 	%rd1900, %rd1899, %rd1895;
	add.s64 	%rd1901, %rd1900, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd1889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd1889;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 28;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 28;
	mov.b64 	%rd1902, {%r1457, %r1456};
	shf.l.wrap.b32 	%r1458, %r1454, %r1455, 30;
	shf.l.wrap.b32 	%r1459, %r1455, %r1454, 30;
	mov.b64 	%rd1903, {%r1459, %r1458};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 25;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 25;
	mov.b64 	%rd1905, {%r1461, %r1460};
	xor.b64  	%rd1906, %rd1904, %rd1905;
	and.b64  	%rd1907, %rd1889, %rd1866;
	or.b64  	%rd1908, %rd1889, %rd1866;
	and.b64  	%rd1909, %rd1908, %rd1842;
	or.b64  	%rd1910, %rd1909, %rd1907;
	add.s64 	%rd1911, %rd1910, %rd1906;
	add.s64 	%rd1912, %rd1911, %rd1900;
	add.s64 	%rd1913, %rd1831, 2608012711638119052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd1901;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 14;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 14;
	mov.b64 	%rd1914, {%r1465, %r1464};
	shf.r.wrap.b32 	%r1466, %r1463, %r1462, 18;
	shf.r.wrap.b32 	%r1467, %r1462, %r1463, 18;
	mov.b64 	%rd1915, {%r1467, %r1466};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 23;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 23;
	mov.b64 	%rd1917, {%r1469, %r1468};
	xor.b64  	%rd1918, %rd1916, %rd1917;
	xor.b64  	%rd1919, %rd1878, %rd1855;
	and.b64  	%rd1920, %rd1901, %rd1919;
	xor.b64  	%rd1921, %rd1920, %rd1855;
	add.s64 	%rd1922, %rd1913, %rd1921;
	add.s64 	%rd1923, %rd1922, %rd1918;
	add.s64 	%rd1924, %rd1923, %rd1842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd1912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd1912;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 28;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 28;
	mov.b64 	%rd1925, {%r1473, %r1472};
	shf.l.wrap.b32 	%r1474, %r1470, %r1471, 30;
	shf.l.wrap.b32 	%r1475, %r1471, %r1470, 30;
	mov.b64 	%rd1926, {%r1475, %r1474};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	shf.l.wrap.b32 	%r1476, %r1470, %r1471, 25;
	shf.l.wrap.b32 	%r1477, %r1471, %r1470, 25;
	mov.b64 	%rd1928, {%r1477, %r1476};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	and.b64  	%rd1930, %rd1912, %rd1889;
	or.b64  	%rd1931, %rd1912, %rd1889;
	and.b64  	%rd1932, %rd1931, %rd1866;
	or.b64  	%rd1933, %rd1932, %rd1930;
	add.s64 	%rd1934, %rd1933, %rd1929;
	add.s64 	%rd1935, %rd1934, %rd1923;
	add.s64 	%rd1936, %rd1855, 6128411473006802146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd1924;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 14;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 14;
	mov.b64 	%rd1937, {%r1481, %r1480};
	shf.r.wrap.b32 	%r1482, %r1479, %r1478, 18;
	shf.r.wrap.b32 	%r1483, %r1478, %r1479, 18;
	mov.b64 	%rd1938, {%r1483, %r1482};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	shf.l.wrap.b32 	%r1484, %r1478, %r1479, 23;
	shf.l.wrap.b32 	%r1485, %r1479, %r1478, 23;
	mov.b64 	%rd1940, {%r1485, %r1484};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	xor.b64  	%rd1942, %rd1901, %rd1878;
	and.b64  	%rd1943, %rd1924, %rd1942;
	xor.b64  	%rd1944, %rd1943, %rd1878;
	add.s64 	%rd1945, %rd1936, %rd1944;
	add.s64 	%rd1946, %rd1945, %rd1941;
	add.s64 	%rd1947, %rd1946, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd1935;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 28;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 28;
	mov.b64 	%rd1948, {%r1489, %r1488};
	shf.l.wrap.b32 	%r1490, %r1486, %r1487, 30;
	shf.l.wrap.b32 	%r1491, %r1487, %r1486, 30;
	mov.b64 	%rd1949, {%r1491, %r1490};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	shf.l.wrap.b32 	%r1492, %r1486, %r1487, 25;
	shf.l.wrap.b32 	%r1493, %r1487, %r1486, 25;
	mov.b64 	%rd1951, {%r1493, %r1492};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	and.b64  	%rd1953, %rd1935, %rd1912;
	or.b64  	%rd1954, %rd1935, %rd1912;
	and.b64  	%rd1955, %rd1954, %rd1889;
	or.b64  	%rd1956, %rd1955, %rd1953;
	add.s64 	%rd1957, %rd1956, %rd1952;
	add.s64 	%rd1958, %rd1957, %rd1946;
	xor.b64  	%rd1959, %rd1924, %rd1901;
	and.b64  	%rd1960, %rd1947, %rd1959;
	xor.b64  	%rd1961, %rd1960, %rd1901;
	add.s64 	%rd1962, %rd1878, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1494,%dummy}, %rd1947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1495}, %rd1947;
	}
	shf.r.wrap.b32 	%r1496, %r1495, %r1494, 14;
	shf.r.wrap.b32 	%r1497, %r1494, %r1495, 14;
	mov.b64 	%rd1963, {%r1497, %r1496};
	shf.r.wrap.b32 	%r1498, %r1495, %r1494, 18;
	shf.r.wrap.b32 	%r1499, %r1494, %r1495, 18;
	mov.b64 	%rd1964, {%r1499, %r1498};
	xor.b64  	%rd1965, %rd1963, %rd1964;
	shf.l.wrap.b32 	%r1500, %r1494, %r1495, 23;
	shf.l.wrap.b32 	%r1501, %r1495, %r1494, 23;
	mov.b64 	%rd1966, {%r1501, %r1500};
	xor.b64  	%rd1967, %rd1965, %rd1966;
	add.s64 	%rd1968, %rd1962, %rd1967;
	add.s64 	%rd1969, %rd1968, 8268148722764581231;
	add.s64 	%rd1970, %rd1969, %rd1889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd1958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1503}, %rd1958;
	}
	shf.r.wrap.b32 	%r1504, %r1503, %r1502, 28;
	shf.r.wrap.b32 	%r1505, %r1502, %r1503, 28;
	mov.b64 	%rd1971, {%r1505, %r1504};
	shf.l.wrap.b32 	%r1506, %r1502, %r1503, 30;
	shf.l.wrap.b32 	%r1507, %r1503, %r1502, 30;
	mov.b64 	%rd1972, {%r1507, %r1506};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	shf.l.wrap.b32 	%r1508, %r1502, %r1503, 25;
	shf.l.wrap.b32 	%r1509, %r1503, %r1502, 25;
	mov.b64 	%rd1974, {%r1509, %r1508};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	and.b64  	%rd1976, %rd1958, %rd1935;
	or.b64  	%rd1977, %rd1958, %rd1935;
	and.b64  	%rd1978, %rd1977, %rd1912;
	or.b64  	%rd1979, %rd1978, %rd1976;
	add.s64 	%rd1980, %rd1979, %rd1975;
	add.s64 	%rd1981, %rd1980, %rd1969;
	xor.b64  	%rd1982, %rd1947, %rd1924;
	and.b64  	%rd1983, %rd1970, %rd1982;
	xor.b64  	%rd1984, %rd1983, %rd1924;
	add.s64 	%rd1985, %rd1901, %rd1984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1511}, %rd1970;
	}
	shf.r.wrap.b32 	%r1512, %r1511, %r1510, 14;
	shf.r.wrap.b32 	%r1513, %r1510, %r1511, 14;
	mov.b64 	%rd1986, {%r1513, %r1512};
	shf.r.wrap.b32 	%r1514, %r1511, %r1510, 18;
	shf.r.wrap.b32 	%r1515, %r1510, %r1511, 18;
	mov.b64 	%rd1987, {%r1515, %r1514};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	shf.l.wrap.b32 	%r1516, %r1510, %r1511, 23;
	shf.l.wrap.b32 	%r1517, %r1511, %r1510, 23;
	mov.b64 	%rd1989, {%r1517, %r1516};
	xor.b64  	%rd1990, %rd1988, %rd1989;
	add.s64 	%rd1991, %rd1985, %rd1990;
	add.s64 	%rd1992, %rd1991, -9160688886553864527;
	add.s64 	%rd1993, %rd1992, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd1981;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 28;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 28;
	mov.b64 	%rd1994, {%r1521, %r1520};
	shf.l.wrap.b32 	%r1522, %r1518, %r1519, 30;
	shf.l.wrap.b32 	%r1523, %r1519, %r1518, 30;
	mov.b64 	%rd1995, {%r1523, %r1522};
	xor.b64  	%rd1996, %rd1994, %rd1995;
	shf.l.wrap.b32 	%r1524, %r1518, %r1519, 25;
	shf.l.wrap.b32 	%r1525, %r1519, %r1518, 25;
	mov.b64 	%rd1997, {%r1525, %r1524};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	and.b64  	%rd1999, %rd1981, %rd1958;
	or.b64  	%rd2000, %rd1981, %rd1958;
	and.b64  	%rd2001, %rd2000, %rd1935;
	or.b64  	%rd2002, %rd2001, %rd1999;
	add.s64 	%rd2003, %rd2002, %rd1998;
	add.s64 	%rd2004, %rd2003, %rd1992;
	xor.b64  	%rd2005, %rd1970, %rd1947;
	and.b64  	%rd2006, %rd1993, %rd2005;
	xor.b64  	%rd2007, %rd2006, %rd1947;
	add.s64 	%rd2008, %rd1924, %rd2007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd1993;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 14;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 14;
	mov.b64 	%rd2009, {%r1529, %r1528};
	shf.r.wrap.b32 	%r1530, %r1527, %r1526, 18;
	shf.r.wrap.b32 	%r1531, %r1526, %r1527, 18;
	mov.b64 	%rd2010, {%r1531, %r1530};
	xor.b64  	%rd2011, %rd2009, %rd2010;
	shf.l.wrap.b32 	%r1532, %r1526, %r1527, 23;
	shf.l.wrap.b32 	%r1533, %r1527, %r1526, 23;
	mov.b64 	%rd2012, {%r1533, %r1532};
	xor.b64  	%rd2013, %rd2011, %rd2012;
	add.s64 	%rd2014, %rd2008, %rd2013;
	add.s64 	%rd2015, %rd2014, -7215885187991268811;
	add.s64 	%rd2016, %rd2015, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd2004;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 28;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 28;
	mov.b64 	%rd2017, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 30;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 30;
	mov.b64 	%rd2018, {%r1539, %r1538};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	shf.l.wrap.b32 	%r1540, %r1534, %r1535, 25;
	shf.l.wrap.b32 	%r1541, %r1535, %r1534, 25;
	mov.b64 	%rd2020, {%r1541, %r1540};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	and.b64  	%rd2022, %rd2004, %rd1981;
	or.b64  	%rd2023, %rd2004, %rd1981;
	and.b64  	%rd2024, %rd2023, %rd1958;
	or.b64  	%rd2025, %rd2024, %rd2022;
	add.s64 	%rd2026, %rd2025, %rd2021;
	add.s64 	%rd2027, %rd2026, %rd2015;
	xor.b64  	%rd2028, %rd1993, %rd1970;
	and.b64  	%rd2029, %rd2016, %rd2028;
	xor.b64  	%rd2030, %rd2029, %rd1970;
	add.s64 	%rd2031, %rd1947, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd2016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd2016;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 14;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 14;
	mov.b64 	%rd2032, {%r1545, %r1544};
	shf.r.wrap.b32 	%r1546, %r1543, %r1542, 18;
	shf.r.wrap.b32 	%r1547, %r1542, %r1543, 18;
	mov.b64 	%rd2033, {%r1547, %r1546};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	shf.l.wrap.b32 	%r1548, %r1542, %r1543, 23;
	shf.l.wrap.b32 	%r1549, %r1543, %r1542, 23;
	mov.b64 	%rd2035, {%r1549, %r1548};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	add.s64 	%rd2037, %rd2031, %rd2036;
	add.s64 	%rd2038, %rd2037, -4495734319001032492;
	add.s64 	%rd2039, %rd2038, %rd1958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1550,%dummy}, %rd2027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1551}, %rd2027;
	}
	shf.r.wrap.b32 	%r1552, %r1551, %r1550, 28;
	shf.r.wrap.b32 	%r1553, %r1550, %r1551, 28;
	mov.b64 	%rd2040, {%r1553, %r1552};
	shf.l.wrap.b32 	%r1554, %r1550, %r1551, 30;
	shf.l.wrap.b32 	%r1555, %r1551, %r1550, 30;
	mov.b64 	%rd2041, {%r1555, %r1554};
	xor.b64  	%rd2042, %rd2040, %rd2041;
	shf.l.wrap.b32 	%r1556, %r1550, %r1551, 25;
	shf.l.wrap.b32 	%r1557, %r1551, %r1550, 25;
	mov.b64 	%rd2043, {%r1557, %r1556};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	and.b64  	%rd2045, %rd2027, %rd2004;
	or.b64  	%rd2046, %rd2027, %rd2004;
	and.b64  	%rd2047, %rd2046, %rd1981;
	or.b64  	%rd2048, %rd2047, %rd2045;
	add.s64 	%rd2049, %rd2048, %rd2044;
	add.s64 	%rd2050, %rd2049, %rd2038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd9529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd9529;
	}
	shf.r.wrap.b32 	%r1560, %r1559, %r1558, 8;
	shf.r.wrap.b32 	%r1561, %r1558, %r1559, 8;
	mov.b64 	%rd2051, {%r1561, %r1560};
	shf.r.wrap.b32 	%r1562, %r1559, %r1558, 1;
	shf.r.wrap.b32 	%r1563, %r1558, %r1559, 1;
	mov.b64 	%rd2052, {%r1563, %r1562};
	xor.b64  	%rd2053, %rd2052, %rd2051;
	shr.u64 	%rd2054, %rd9529, 7;
	xor.b64  	%rd2055, %rd2053, %rd2054;
	add.s64 	%rd2056, %rd122, %rd9530;
	xor.b64  	%rd2057, %rd2056, -9223372036854775808;
	mov.u64 	%rd2058, -9223372036854775808;
	add.s64 	%rd2059, %rd2057, %rd2055;
	add.s64 	%rd2060, %rd2059, -1973867731355612462;
	add.s64 	%rd2061, %rd2060, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1564,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1565}, %rd2039;
	}
	shf.r.wrap.b32 	%r1566, %r1565, %r1564, 14;
	shf.r.wrap.b32 	%r1567, %r1564, %r1565, 14;
	mov.b64 	%rd2062, {%r1567, %r1566};
	shf.r.wrap.b32 	%r1568, %r1565, %r1564, 18;
	shf.r.wrap.b32 	%r1569, %r1564, %r1565, 18;
	mov.b64 	%rd2063, {%r1569, %r1568};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	shf.l.wrap.b32 	%r1570, %r1564, %r1565, 23;
	shf.l.wrap.b32 	%r1571, %r1565, %r1564, 23;
	mov.b64 	%rd2065, {%r1571, %r1570};
	xor.b64  	%rd2066, %rd2064, %rd2065;
	xor.b64  	%rd2067, %rd2016, %rd1993;
	and.b64  	%rd2068, %rd2039, %rd2067;
	xor.b64  	%rd2069, %rd2068, %rd1993;
	add.s64 	%rd2070, %rd2061, %rd2069;
	add.s64 	%rd2071, %rd2070, %rd2066;
	add.s64 	%rd2072, %rd2071, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1572,%dummy}, %rd2050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1573}, %rd2050;
	}
	shf.r.wrap.b32 	%r1574, %r1573, %r1572, 28;
	shf.r.wrap.b32 	%r1575, %r1572, %r1573, 28;
	mov.b64 	%rd2073, {%r1575, %r1574};
	shf.l.wrap.b32 	%r1576, %r1572, %r1573, 30;
	shf.l.wrap.b32 	%r1577, %r1573, %r1572, 30;
	mov.b64 	%rd2074, {%r1577, %r1576};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	shf.l.wrap.b32 	%r1578, %r1572, %r1573, 25;
	shf.l.wrap.b32 	%r1579, %r1573, %r1572, 25;
	mov.b64 	%rd2076, {%r1579, %r1578};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	and.b64  	%rd2078, %rd2050, %rd2027;
	or.b64  	%rd2079, %rd2050, %rd2027;
	and.b64  	%rd2080, %rd2079, %rd2004;
	or.b64  	%rd2081, %rd2080, %rd2078;
	add.s64 	%rd2082, %rd2081, %rd2077;
	add.s64 	%rd2083, %rd2082, %rd2071;
	mov.u64 	%rd2084, 576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd2084;
	}
	shf.l.wrap.b32 	%r1582, %r1581, %r1580, 3;
	shf.l.wrap.b32 	%r1583, %r1580, %r1581, 3;
	mov.b64 	%rd2085, {%r1583, %r1582};
	shf.r.wrap.b32 	%r1584, %r1580, %r1581, 19;
	shf.r.wrap.b32 	%r1585, %r1581, %r1580, 19;
	mov.b64 	%rd2086, {%r1585, %r1584};
	xor.b64  	%rd2087, %rd2086, %rd2085;
	xor.b64  	%rd2088, %rd2087, 9;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd9528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd9528;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 8;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 8;
	mov.b64 	%rd2089, {%r1589, %r1588};
	shf.r.wrap.b32 	%r1590, %r1587, %r1586, 1;
	shf.r.wrap.b32 	%r1591, %r1586, %r1587, 1;
	mov.b64 	%rd2090, {%r1591, %r1590};
	xor.b64  	%rd2091, %rd2090, %rd2089;
	shr.u64 	%rd2092, %rd9528, 7;
	xor.b64  	%rd2093, %rd2091, %rd2092;
	add.s64 	%rd2094, %rd2088, %rd9529;
	add.s64 	%rd2095, %rd2094, %rd2093;
	add.s64 	%rd2096, %rd2095, -1171420211273849373;
	add.s64 	%rd2097, %rd2096, %rd1993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1592,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd2072;
	}
	shf.r.wrap.b32 	%r1594, %r1593, %r1592, 14;
	shf.r.wrap.b32 	%r1595, %r1592, %r1593, 14;
	mov.b64 	%rd2098, {%r1595, %r1594};
	shf.r.wrap.b32 	%r1596, %r1593, %r1592, 18;
	shf.r.wrap.b32 	%r1597, %r1592, %r1593, 18;
	mov.b64 	%rd2099, {%r1597, %r1596};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	shf.l.wrap.b32 	%r1598, %r1592, %r1593, 23;
	shf.l.wrap.b32 	%r1599, %r1593, %r1592, 23;
	mov.b64 	%rd2101, {%r1599, %r1598};
	xor.b64  	%rd2102, %rd2100, %rd2101;
	xor.b64  	%rd2103, %rd2039, %rd2016;
	and.b64  	%rd2104, %rd2072, %rd2103;
	xor.b64  	%rd2105, %rd2104, %rd2016;
	add.s64 	%rd2106, %rd2097, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2102;
	add.s64 	%rd2108, %rd2107, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1600,%dummy}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1601}, %rd2083;
	}
	shf.r.wrap.b32 	%r1602, %r1601, %r1600, 28;
	shf.r.wrap.b32 	%r1603, %r1600, %r1601, 28;
	mov.b64 	%rd2109, {%r1603, %r1602};
	shf.l.wrap.b32 	%r1604, %r1600, %r1601, 30;
	shf.l.wrap.b32 	%r1605, %r1601, %r1600, 30;
	mov.b64 	%rd2110, {%r1605, %r1604};
	xor.b64  	%rd2111, %rd2109, %rd2110;
	shf.l.wrap.b32 	%r1606, %r1600, %r1601, 25;
	shf.l.wrap.b32 	%r1607, %r1601, %r1600, 25;
	mov.b64 	%rd2112, {%r1607, %r1606};
	xor.b64  	%rd2113, %rd2111, %rd2112;
	and.b64  	%rd2114, %rd2083, %rd2050;
	or.b64  	%rd2115, %rd2083, %rd2050;
	and.b64  	%rd2116, %rd2115, %rd2027;
	or.b64  	%rd2117, %rd2116, %rd2114;
	add.s64 	%rd2118, %rd2117, %rd2113;
	add.s64 	%rd2119, %rd2118, %rd2107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1608,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd2059;
	}
	shf.r.wrap.b32 	%r1610, %r1609, %r1608, 19;
	shf.r.wrap.b32 	%r1611, %r1608, %r1609, 19;
	mov.b64 	%rd2120, {%r1611, %r1610};
	shf.l.wrap.b32 	%r1612, %r1608, %r1609, 3;
	shf.l.wrap.b32 	%r1613, %r1609, %r1608, 3;
	mov.b64 	%rd2121, {%r1613, %r1612};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	shr.u64 	%rd2123, %rd2059, 6;
	xor.b64  	%rd2124, %rd2122, %rd2123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd9527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd9527;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 8;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 8;
	mov.b64 	%rd2125, {%r1617, %r1616};
	shf.r.wrap.b32 	%r1618, %r1615, %r1614, 1;
	shf.r.wrap.b32 	%r1619, %r1614, %r1615, 1;
	mov.b64 	%rd2126, {%r1619, %r1618};
	xor.b64  	%rd2127, %rd2126, %rd2125;
	shr.u64 	%rd2128, %rd9527, 7;
	xor.b64  	%rd2129, %rd2127, %rd2128;
	add.s64 	%rd2130, %rd2124, %rd9528;
	add.s64 	%rd2131, %rd2130, %rd2129;
	add.s64 	%rd2132, %rd2131, 1135362057144423861;
	add.s64 	%rd2133, %rd2132, %rd2016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1620,%dummy}, %rd2108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1621}, %rd2108;
	}
	shf.r.wrap.b32 	%r1622, %r1621, %r1620, 14;
	shf.r.wrap.b32 	%r1623, %r1620, %r1621, 14;
	mov.b64 	%rd2134, {%r1623, %r1622};
	shf.r.wrap.b32 	%r1624, %r1621, %r1620, 18;
	shf.r.wrap.b32 	%r1625, %r1620, %r1621, 18;
	mov.b64 	%rd2135, {%r1625, %r1624};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	shf.l.wrap.b32 	%r1626, %r1620, %r1621, 23;
	shf.l.wrap.b32 	%r1627, %r1621, %r1620, 23;
	mov.b64 	%rd2137, {%r1627, %r1626};
	xor.b64  	%rd2138, %rd2136, %rd2137;
	xor.b64  	%rd2139, %rd2072, %rd2039;
	and.b64  	%rd2140, %rd2108, %rd2139;
	xor.b64  	%rd2141, %rd2140, %rd2039;
	add.s64 	%rd2142, %rd2133, %rd2141;
	add.s64 	%rd2143, %rd2142, %rd2138;
	add.s64 	%rd2144, %rd2143, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1628,%dummy}, %rd2119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd2119;
	}
	shf.r.wrap.b32 	%r1630, %r1629, %r1628, 28;
	shf.r.wrap.b32 	%r1631, %r1628, %r1629, 28;
	mov.b64 	%rd2145, {%r1631, %r1630};
	shf.l.wrap.b32 	%r1632, %r1628, %r1629, 30;
	shf.l.wrap.b32 	%r1633, %r1629, %r1628, 30;
	mov.b64 	%rd2146, {%r1633, %r1632};
	xor.b64  	%rd2147, %rd2145, %rd2146;
	shf.l.wrap.b32 	%r1634, %r1628, %r1629, 25;
	shf.l.wrap.b32 	%r1635, %r1629, %r1628, 25;
	mov.b64 	%rd2148, {%r1635, %r1634};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	and.b64  	%rd2150, %rd2119, %rd2083;
	or.b64  	%rd2151, %rd2119, %rd2083;
	and.b64  	%rd2152, %rd2151, %rd2050;
	or.b64  	%rd2153, %rd2152, %rd2150;
	add.s64 	%rd2154, %rd2153, %rd2149;
	add.s64 	%rd2155, %rd2154, %rd2143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1636,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1637}, %rd2095;
	}
	shf.r.wrap.b32 	%r1638, %r1637, %r1636, 19;
	shf.r.wrap.b32 	%r1639, %r1636, %r1637, 19;
	mov.b64 	%rd2156, {%r1639, %r1638};
	shf.l.wrap.b32 	%r1640, %r1636, %r1637, 3;
	shf.l.wrap.b32 	%r1641, %r1637, %r1636, 3;
	mov.b64 	%rd2157, {%r1641, %r1640};
	xor.b64  	%rd2158, %rd2156, %rd2157;
	shr.u64 	%rd2159, %rd2095, 6;
	xor.b64  	%rd2160, %rd2158, %rd2159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1642,%dummy}, %rd9526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1643}, %rd9526;
	}
	shf.r.wrap.b32 	%r1644, %r1643, %r1642, 8;
	shf.r.wrap.b32 	%r1645, %r1642, %r1643, 8;
	mov.b64 	%rd2161, {%r1645, %r1644};
	shf.r.wrap.b32 	%r1646, %r1643, %r1642, 1;
	shf.r.wrap.b32 	%r1647, %r1642, %r1643, 1;
	mov.b64 	%rd2162, {%r1647, %r1646};
	xor.b64  	%rd2163, %rd2162, %rd2161;
	shr.u64 	%rd2164, %rd9526, 7;
	xor.b64  	%rd2165, %rd2163, %rd2164;
	add.s64 	%rd2166, %rd2160, %rd9527;
	add.s64 	%rd2167, %rd2166, %rd2165;
	add.s64 	%rd2168, %rd2167, 2597628984639134821;
	add.s64 	%rd2169, %rd2168, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2144;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 14;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 14;
	mov.b64 	%rd2170, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1649, %r1648, 18;
	shf.r.wrap.b32 	%r1653, %r1648, %r1649, 18;
	mov.b64 	%rd2171, {%r1653, %r1652};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	shf.l.wrap.b32 	%r1654, %r1648, %r1649, 23;
	shf.l.wrap.b32 	%r1655, %r1649, %r1648, 23;
	mov.b64 	%rd2173, {%r1655, %r1654};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	xor.b64  	%rd2175, %rd2108, %rd2072;
	and.b64  	%rd2176, %rd2144, %rd2175;
	xor.b64  	%rd2177, %rd2176, %rd2072;
	add.s64 	%rd2178, %rd2169, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2174;
	add.s64 	%rd2180, %rd2179, %rd2050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2155;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 28;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 28;
	mov.b64 	%rd2181, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 30;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 30;
	mov.b64 	%rd2182, {%r1661, %r1660};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 25;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 25;
	mov.b64 	%rd2184, {%r1663, %r1662};
	xor.b64  	%rd2185, %rd2183, %rd2184;
	and.b64  	%rd2186, %rd2155, %rd2119;
	or.b64  	%rd2187, %rd2155, %rd2119;
	and.b64  	%rd2188, %rd2187, %rd2083;
	or.b64  	%rd2189, %rd2188, %rd2186;
	add.s64 	%rd2190, %rd2189, %rd2185;
	add.s64 	%rd2191, %rd2190, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2131;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 19;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 19;
	mov.b64 	%rd2192, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 3;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 3;
	mov.b64 	%rd2193, {%r1669, %r1668};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	shr.u64 	%rd2195, %rd2131, 6;
	xor.b64  	%rd2196, %rd2194, %rd2195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd9525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd9525;
	}
	shf.r.wrap.b32 	%r1672, %r1671, %r1670, 8;
	shf.r.wrap.b32 	%r1673, %r1670, %r1671, 8;
	mov.b64 	%rd2197, {%r1673, %r1672};
	shf.r.wrap.b32 	%r1674, %r1671, %r1670, 1;
	shf.r.wrap.b32 	%r1675, %r1670, %r1671, 1;
	mov.b64 	%rd2198, {%r1675, %r1674};
	xor.b64  	%rd2199, %rd2198, %rd2197;
	shr.u64 	%rd2200, %rd9525, 7;
	xor.b64  	%rd2201, %rd2199, %rd2200;
	add.s64 	%rd2202, %rd2196, %rd9526;
	add.s64 	%rd2203, %rd2202, %rd2201;
	add.s64 	%rd2204, %rd2203, 3308224258029322869;
	add.s64 	%rd2205, %rd2204, %rd2072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1676,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1677}, %rd2180;
	}
	shf.r.wrap.b32 	%r1678, %r1677, %r1676, 14;
	shf.r.wrap.b32 	%r1679, %r1676, %r1677, 14;
	mov.b64 	%rd2206, {%r1679, %r1678};
	shf.r.wrap.b32 	%r1680, %r1677, %r1676, 18;
	shf.r.wrap.b32 	%r1681, %r1676, %r1677, 18;
	mov.b64 	%rd2207, {%r1681, %r1680};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	shf.l.wrap.b32 	%r1682, %r1676, %r1677, 23;
	shf.l.wrap.b32 	%r1683, %r1677, %r1676, 23;
	mov.b64 	%rd2209, {%r1683, %r1682};
	xor.b64  	%rd2210, %rd2208, %rd2209;
	xor.b64  	%rd2211, %rd2144, %rd2108;
	and.b64  	%rd2212, %rd2180, %rd2211;
	xor.b64  	%rd2213, %rd2212, %rd2108;
	add.s64 	%rd2214, %rd2205, %rd2213;
	add.s64 	%rd2215, %rd2214, %rd2210;
	add.s64 	%rd2216, %rd2215, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1684,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1685}, %rd2191;
	}
	shf.r.wrap.b32 	%r1686, %r1685, %r1684, 28;
	shf.r.wrap.b32 	%r1687, %r1684, %r1685, 28;
	mov.b64 	%rd2217, {%r1687, %r1686};
	shf.l.wrap.b32 	%r1688, %r1684, %r1685, 30;
	shf.l.wrap.b32 	%r1689, %r1685, %r1684, 30;
	mov.b64 	%rd2218, {%r1689, %r1688};
	xor.b64  	%rd2219, %rd2217, %rd2218;
	shf.l.wrap.b32 	%r1690, %r1684, %r1685, 25;
	shf.l.wrap.b32 	%r1691, %r1685, %r1684, 25;
	mov.b64 	%rd2220, {%r1691, %r1690};
	xor.b64  	%rd2221, %rd2219, %rd2220;
	and.b64  	%rd2222, %rd2191, %rd2155;
	or.b64  	%rd2223, %rd2191, %rd2155;
	and.b64  	%rd2224, %rd2223, %rd2119;
	or.b64  	%rd2225, %rd2224, %rd2222;
	add.s64 	%rd2226, %rd2225, %rd2221;
	add.s64 	%rd2227, %rd2226, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1692,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd2167;
	}
	shf.r.wrap.b32 	%r1694, %r1693, %r1692, 19;
	shf.r.wrap.b32 	%r1695, %r1692, %r1693, 19;
	mov.b64 	%rd2228, {%r1695, %r1694};
	shf.l.wrap.b32 	%r1696, %r1692, %r1693, 3;
	shf.l.wrap.b32 	%r1697, %r1693, %r1692, 3;
	mov.b64 	%rd2229, {%r1697, %r1696};
	xor.b64  	%rd2230, %rd2228, %rd2229;
	shr.u64 	%rd2231, %rd2167, 6;
	xor.b64  	%rd2232, %rd2230, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd9524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd9524;
	}
	shf.r.wrap.b32 	%r1700, %r1699, %r1698, 8;
	shf.r.wrap.b32 	%r1701, %r1698, %r1699, 8;
	mov.b64 	%rd2233, {%r1701, %r1700};
	shf.r.wrap.b32 	%r1702, %r1699, %r1698, 1;
	shf.r.wrap.b32 	%r1703, %r1698, %r1699, 1;
	mov.b64 	%rd2234, {%r1703, %r1702};
	xor.b64  	%rd2235, %rd2234, %rd2233;
	shr.u64 	%rd2236, %rd9524, 7;
	xor.b64  	%rd2237, %rd2235, %rd2236;
	add.s64 	%rd2238, %rd2232, %rd9525;
	add.s64 	%rd2239, %rd2238, %rd2237;
	add.s64 	%rd2240, %rd2239, 5365058923640841347;
	add.s64 	%rd2241, %rd2240, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2216;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 14;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 14;
	mov.b64 	%rd2242, {%r1707, %r1706};
	shf.r.wrap.b32 	%r1708, %r1705, %r1704, 18;
	shf.r.wrap.b32 	%r1709, %r1704, %r1705, 18;
	mov.b64 	%rd2243, {%r1709, %r1708};
	xor.b64  	%rd2244, %rd2242, %rd2243;
	shf.l.wrap.b32 	%r1710, %r1704, %r1705, 23;
	shf.l.wrap.b32 	%r1711, %r1705, %r1704, 23;
	mov.b64 	%rd2245, {%r1711, %r1710};
	xor.b64  	%rd2246, %rd2244, %rd2245;
	xor.b64  	%rd2247, %rd2180, %rd2144;
	and.b64  	%rd2248, %rd2216, %rd2247;
	xor.b64  	%rd2249, %rd2248, %rd2144;
	add.s64 	%rd2250, %rd2241, %rd2249;
	add.s64 	%rd2251, %rd2250, %rd2246;
	add.s64 	%rd2252, %rd2251, %rd2119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2227;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 28;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 28;
	mov.b64 	%rd2253, {%r1715, %r1714};
	shf.l.wrap.b32 	%r1716, %r1712, %r1713, 30;
	shf.l.wrap.b32 	%r1717, %r1713, %r1712, 30;
	mov.b64 	%rd2254, {%r1717, %r1716};
	xor.b64  	%rd2255, %rd2253, %rd2254;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 25;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 25;
	mov.b64 	%rd2256, {%r1719, %r1718};
	xor.b64  	%rd2257, %rd2255, %rd2256;
	and.b64  	%rd2258, %rd2227, %rd2191;
	or.b64  	%rd2259, %rd2227, %rd2191;
	and.b64  	%rd2260, %rd2259, %rd2155;
	or.b64  	%rd2261, %rd2260, %rd2258;
	add.s64 	%rd2262, %rd2261, %rd2257;
	add.s64 	%rd2263, %rd2262, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd2203;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 19;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 19;
	mov.b64 	%rd2264, {%r1723, %r1722};
	shf.l.wrap.b32 	%r1724, %r1720, %r1721, 3;
	shf.l.wrap.b32 	%r1725, %r1721, %r1720, 3;
	mov.b64 	%rd2265, {%r1725, %r1724};
	xor.b64  	%rd2266, %rd2264, %rd2265;
	shr.u64 	%rd2267, %rd2203, 6;
	xor.b64  	%rd2268, %rd2266, %rd2267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd9523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1727}, %rd9523;
	}
	shf.r.wrap.b32 	%r1728, %r1727, %r1726, 8;
	shf.r.wrap.b32 	%r1729, %r1726, %r1727, 8;
	mov.b64 	%rd2269, {%r1729, %r1728};
	shf.r.wrap.b32 	%r1730, %r1727, %r1726, 1;
	shf.r.wrap.b32 	%r1731, %r1726, %r1727, 1;
	mov.b64 	%rd2270, {%r1731, %r1730};
	xor.b64  	%rd2271, %rd2270, %rd2269;
	shr.u64 	%rd2272, %rd9523, 7;
	xor.b64  	%rd2273, %rd2271, %rd2272;
	add.s64 	%rd2274, %rd2268, %rd9524;
	add.s64 	%rd2275, %rd2274, %rd2273;
	add.s64 	%rd2276, %rd2275, 576;
	add.s64 	%rd2277, %rd2275, 6679025012923563540;
	add.s64 	%rd2278, %rd2277, %rd2144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1732,%dummy}, %rd2252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1733}, %rd2252;
	}
	shf.r.wrap.b32 	%r1734, %r1733, %r1732, 14;
	shf.r.wrap.b32 	%r1735, %r1732, %r1733, 14;
	mov.b64 	%rd2279, {%r1735, %r1734};
	shf.r.wrap.b32 	%r1736, %r1733, %r1732, 18;
	shf.r.wrap.b32 	%r1737, %r1732, %r1733, 18;
	mov.b64 	%rd2280, {%r1737, %r1736};
	xor.b64  	%rd2281, %rd2279, %rd2280;
	shf.l.wrap.b32 	%r1738, %r1732, %r1733, 23;
	shf.l.wrap.b32 	%r1739, %r1733, %r1732, 23;
	mov.b64 	%rd2282, {%r1739, %r1738};
	xor.b64  	%rd2283, %rd2281, %rd2282;
	xor.b64  	%rd2284, %rd2216, %rd2180;
	and.b64  	%rd2285, %rd2252, %rd2284;
	xor.b64  	%rd2286, %rd2285, %rd2180;
	add.s64 	%rd2287, %rd2278, %rd2286;
	add.s64 	%rd2288, %rd2287, %rd2283;
	add.s64 	%rd2289, %rd2288, %rd2155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1740,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd2263;
	}
	shf.r.wrap.b32 	%r1742, %r1741, %r1740, 28;
	shf.r.wrap.b32 	%r1743, %r1740, %r1741, 28;
	mov.b64 	%rd2290, {%r1743, %r1742};
	shf.l.wrap.b32 	%r1744, %r1740, %r1741, 30;
	shf.l.wrap.b32 	%r1745, %r1741, %r1740, 30;
	mov.b64 	%rd2291, {%r1745, %r1744};
	xor.b64  	%rd2292, %rd2290, %rd2291;
	shf.l.wrap.b32 	%r1746, %r1740, %r1741, 25;
	shf.l.wrap.b32 	%r1747, %r1741, %r1740, 25;
	mov.b64 	%rd2293, {%r1747, %r1746};
	xor.b64  	%rd2294, %rd2292, %rd2293;
	and.b64  	%rd2295, %rd2263, %rd2227;
	or.b64  	%rd2296, %rd2263, %rd2227;
	and.b64  	%rd2297, %rd2296, %rd2191;
	or.b64  	%rd2298, %rd2297, %rd2295;
	add.s64 	%rd2299, %rd2298, %rd2294;
	add.s64 	%rd2300, %rd2299, %rd2288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1748,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1749}, %rd2239;
	}
	shf.r.wrap.b32 	%r1750, %r1749, %r1748, 19;
	shf.r.wrap.b32 	%r1751, %r1748, %r1749, 19;
	mov.b64 	%rd2301, {%r1751, %r1750};
	shf.l.wrap.b32 	%r1752, %r1748, %r1749, 3;
	shf.l.wrap.b32 	%r1753, %r1749, %r1748, 3;
	mov.b64 	%rd2302, {%r1753, %r1752};
	xor.b64  	%rd2303, %rd2301, %rd2302;
	shr.u64 	%rd2304, %rd2239, 6;
	xor.b64  	%rd2305, %rd2303, %rd2304;
	mov.u64 	%rd2306, -96877461722390919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1754,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1755}, %rd2306;
	}
	shf.r.wrap.b32 	%r1756, %r1755, %r1754, 8;
	shf.r.wrap.b32 	%r1757, %r1754, %r1755, 8;
	mov.b64 	%rd2307, {%r1757, %r1756};
	shf.r.wrap.b32 	%r1758, %r1755, %r1754, 1;
	shf.r.wrap.b32 	%r1759, %r1754, %r1755, 1;
	mov.b64 	%rd2308, {%r1759, %r1758};
	xor.b64  	%rd2309, %rd2308, %rd2307;
	xor.b64  	%rd2310, %rd2309, 143358332906149692;
	add.s64 	%rd2311, %rd2305, %rd9523;
	add.s64 	%rd2312, %rd2311, %rd2059;
	add.s64 	%rd2313, %rd2312, %rd2310;
	add.s64 	%rd2314, %rd2313, %rd2180;
	xor.b64  	%rd2315, %rd2252, %rd2216;
	and.b64  	%rd2316, %rd2289, %rd2315;
	xor.b64  	%rd2317, %rd2316, %rd2216;
	add.s64 	%rd2318, %rd2314, %rd2317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2289;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 14;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 14;
	mov.b64 	%rd2319, {%r1763, %r1762};
	shf.r.wrap.b32 	%r1764, %r1761, %r1760, 18;
	shf.r.wrap.b32 	%r1765, %r1760, %r1761, 18;
	mov.b64 	%rd2320, {%r1765, %r1764};
	xor.b64  	%rd2321, %rd2319, %rd2320;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 23;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 23;
	mov.b64 	%rd2322, {%r1767, %r1766};
	xor.b64  	%rd2323, %rd2321, %rd2322;
	add.s64 	%rd2324, %rd2318, %rd2323;
	add.s64 	%rd2325, %rd2324, 8573033837759648693;
	add.s64 	%rd2326, %rd2325, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2300;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 28;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 28;
	mov.b64 	%rd2327, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 30;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 30;
	mov.b64 	%rd2328, {%r1773, %r1772};
	xor.b64  	%rd2329, %rd2327, %rd2328;
	shf.l.wrap.b32 	%r1774, %r1768, %r1769, 25;
	shf.l.wrap.b32 	%r1775, %r1769, %r1768, 25;
	mov.b64 	%rd2330, {%r1775, %r1774};
	xor.b64  	%rd2331, %rd2329, %rd2330;
	and.b64  	%rd2332, %rd2300, %rd2263;
	or.b64  	%rd2333, %rd2300, %rd2263;
	and.b64  	%rd2334, %rd2333, %rd2227;
	or.b64  	%rd2335, %rd2334, %rd2332;
	add.s64 	%rd2336, %rd2335, %rd2331;
	add.s64 	%rd2337, %rd2336, %rd2325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2276;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 19;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 19;
	mov.b64 	%rd2338, {%r1779, %r1778};
	shf.l.wrap.b32 	%r1780, %r1776, %r1777, 3;
	shf.l.wrap.b32 	%r1781, %r1777, %r1776, 3;
	mov.b64 	%rd2339, {%r1781, %r1780};
	xor.b64  	%rd2340, %rd2338, %rd2339;
	shr.u64 	%rd2341, %rd2276, 6;
	xor.b64  	%rd2342, %rd2340, %rd2341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd2058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd2058;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 8;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 8;
	mov.b64 	%rd2343, {%r1785, %r1784};
	shf.r.wrap.b32 	%r1786, %r1783, %r1782, 1;
	shf.r.wrap.b32 	%r1787, %r1782, %r1783, 1;
	mov.b64 	%rd2344, {%r1787, %r1786};
	xor.b64  	%rd2345, %rd2344, %rd2343;
	xor.b64  	%rd124, %rd2345, 72057594037927936;
	add.s64 	%rd2346, %rd2342, %rd2095;
	add.s64 	%rd2347, %rd2346, %rd124;
	add.s64 	%rd2348, %rd2347, -96877461722390919;
	add.s64 	%rd2349, %rd2348, %rd2216;
	xor.b64  	%rd2350, %rd2289, %rd2252;
	and.b64  	%rd2351, %rd2326, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd2252;
	add.s64 	%rd2353, %rd2349, %rd2352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1788,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd2326;
	}
	shf.r.wrap.b32 	%r1790, %r1789, %r1788, 14;
	shf.r.wrap.b32 	%r1791, %r1788, %r1789, 14;
	mov.b64 	%rd2354, {%r1791, %r1790};
	shf.r.wrap.b32 	%r1792, %r1789, %r1788, 18;
	shf.r.wrap.b32 	%r1793, %r1788, %r1789, 18;
	mov.b64 	%rd2355, {%r1793, %r1792};
	xor.b64  	%rd2356, %rd2354, %rd2355;
	shf.l.wrap.b32 	%r1794, %r1788, %r1789, 23;
	shf.l.wrap.b32 	%r1795, %r1789, %r1788, 23;
	mov.b64 	%rd2357, {%r1795, %r1794};
	xor.b64  	%rd2358, %rd2356, %rd2357;
	add.s64 	%rd2359, %rd2353, %rd2358;
	add.s64 	%rd2360, %rd2359, -7476448914759557205;
	add.s64 	%rd2361, %rd2360, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1796,%dummy}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1797}, %rd2337;
	}
	shf.r.wrap.b32 	%r1798, %r1797, %r1796, 28;
	shf.r.wrap.b32 	%r1799, %r1796, %r1797, 28;
	mov.b64 	%rd2362, {%r1799, %r1798};
	shf.l.wrap.b32 	%r1800, %r1796, %r1797, 30;
	shf.l.wrap.b32 	%r1801, %r1797, %r1796, 30;
	mov.b64 	%rd2363, {%r1801, %r1800};
	xor.b64  	%rd2364, %rd2362, %rd2363;
	shf.l.wrap.b32 	%r1802, %r1796, %r1797, 25;
	shf.l.wrap.b32 	%r1803, %r1797, %r1796, 25;
	mov.b64 	%rd2365, {%r1803, %r1802};
	xor.b64  	%rd2366, %rd2364, %rd2365;
	and.b64  	%rd2367, %rd2337, %rd2300;
	or.b64  	%rd2368, %rd2337, %rd2300;
	and.b64  	%rd2369, %rd2368, %rd2263;
	or.b64  	%rd2370, %rd2369, %rd2367;
	add.s64 	%rd2371, %rd2370, %rd2366;
	add.s64 	%rd2372, %rd2371, %rd2360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd2313;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 19;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 19;
	mov.b64 	%rd2373, {%r1807, %r1806};
	shf.l.wrap.b32 	%r1808, %r1804, %r1805, 3;
	shf.l.wrap.b32 	%r1809, %r1805, %r1804, 3;
	mov.b64 	%rd2374, {%r1809, %r1808};
	xor.b64  	%rd2375, %rd2373, %rd2374;
	shr.u64 	%rd2376, %rd2313, 6;
	xor.b64  	%rd2377, %rd2375, %rd2376;
	xor.b64  	%rd2378, %rd2377, -9223372036854775808;
	add.s64 	%rd2379, %rd2378, %rd2131;
	add.s64 	%rd2380, %rd2379, %rd123;
	add.s64 	%rd2381, %rd2380, %rd2252;
	xor.b64  	%rd2382, %rd2326, %rd2289;
	and.b64  	%rd2383, %rd2361, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2289;
	add.s64 	%rd2385, %rd2381, %rd2384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1810,%dummy}, %rd2361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1811}, %rd2361;
	}
	shf.r.wrap.b32 	%r1812, %r1811, %r1810, 14;
	shf.r.wrap.b32 	%r1813, %r1810, %r1811, 14;
	mov.b64 	%rd2386, {%r1813, %r1812};
	shf.r.wrap.b32 	%r1814, %r1811, %r1810, 18;
	shf.r.wrap.b32 	%r1815, %r1810, %r1811, 18;
	mov.b64 	%rd2387, {%r1815, %r1814};
	xor.b64  	%rd2388, %rd2386, %rd2387;
	shf.l.wrap.b32 	%r1816, %r1810, %r1811, 23;
	shf.l.wrap.b32 	%r1817, %r1811, %r1810, 23;
	mov.b64 	%rd2389, {%r1817, %r1816};
	xor.b64  	%rd2390, %rd2388, %rd2389;
	add.s64 	%rd2391, %rd2385, %rd2390;
	add.s64 	%rd2392, %rd2391, -6327057829258317296;
	add.s64 	%rd2393, %rd2392, %rd2263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd2372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1819}, %rd2372;
	}
	shf.r.wrap.b32 	%r1820, %r1819, %r1818, 28;
	shf.r.wrap.b32 	%r1821, %r1818, %r1819, 28;
	mov.b64 	%rd2394, {%r1821, %r1820};
	shf.l.wrap.b32 	%r1822, %r1818, %r1819, 30;
	shf.l.wrap.b32 	%r1823, %r1819, %r1818, 30;
	mov.b64 	%rd2395, {%r1823, %r1822};
	xor.b64  	%rd2396, %rd2394, %rd2395;
	shf.l.wrap.b32 	%r1824, %r1818, %r1819, 25;
	shf.l.wrap.b32 	%r1825, %r1819, %r1818, 25;
	mov.b64 	%rd2397, {%r1825, %r1824};
	xor.b64  	%rd2398, %rd2396, %rd2397;
	and.b64  	%rd2399, %rd2372, %rd2337;
	or.b64  	%rd2400, %rd2372, %rd2337;
	and.b64  	%rd2401, %rd2400, %rd2300;
	or.b64  	%rd2402, %rd2401, %rd2399;
	add.s64 	%rd2403, %rd2402, %rd2398;
	add.s64 	%rd2404, %rd2403, %rd2392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd2348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd2348;
	}
	shf.r.wrap.b32 	%r1828, %r1827, %r1826, 19;
	shf.r.wrap.b32 	%r1829, %r1826, %r1827, 19;
	mov.b64 	%rd2405, {%r1829, %r1828};
	shf.l.wrap.b32 	%r1830, %r1826, %r1827, 3;
	shf.l.wrap.b32 	%r1831, %r1827, %r1826, 3;
	mov.b64 	%rd2406, {%r1831, %r1830};
	xor.b64  	%rd2407, %rd2405, %rd2406;
	shr.u64 	%rd2408, %rd2348, 6;
	xor.b64  	%rd2409, %rd2407, %rd2408;
	add.s64 	%rd2410, %rd2409, %rd2167;
	add.s64 	%rd2411, %rd2410, %rd123;
	add.s64 	%rd2412, %rd2411, %rd2289;
	xor.b64  	%rd2413, %rd2361, %rd2326;
	and.b64  	%rd2414, %rd2393, %rd2413;
	xor.b64  	%rd2415, %rd2414, %rd2326;
	add.s64 	%rd2416, %rd2412, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1832,%dummy}, %rd2393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd2393;
	}
	shf.r.wrap.b32 	%r1834, %r1833, %r1832, 14;
	shf.r.wrap.b32 	%r1835, %r1832, %r1833, 14;
	mov.b64 	%rd2417, {%r1835, %r1834};
	shf.r.wrap.b32 	%r1836, %r1833, %r1832, 18;
	shf.r.wrap.b32 	%r1837, %r1832, %r1833, 18;
	mov.b64 	%rd2418, {%r1837, %r1836};
	xor.b64  	%rd2419, %rd2417, %rd2418;
	shf.l.wrap.b32 	%r1838, %r1832, %r1833, 23;
	shf.l.wrap.b32 	%r1839, %r1833, %r1832, 23;
	mov.b64 	%rd2420, {%r1839, %r1838};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	add.s64 	%rd2422, %rd2416, %rd2421;
	add.s64 	%rd2423, %rd2422, -5763719355590565569;
	add.s64 	%rd2424, %rd2423, %rd2300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1840,%dummy}, %rd2404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1841}, %rd2404;
	}
	shf.r.wrap.b32 	%r1842, %r1841, %r1840, 28;
	shf.r.wrap.b32 	%r1843, %r1840, %r1841, 28;
	mov.b64 	%rd2425, {%r1843, %r1842};
	shf.l.wrap.b32 	%r1844, %r1840, %r1841, 30;
	shf.l.wrap.b32 	%r1845, %r1841, %r1840, 30;
	mov.b64 	%rd2426, {%r1845, %r1844};
	xor.b64  	%rd2427, %rd2425, %rd2426;
	shf.l.wrap.b32 	%r1846, %r1840, %r1841, 25;
	shf.l.wrap.b32 	%r1847, %r1841, %r1840, 25;
	mov.b64 	%rd2428, {%r1847, %r1846};
	xor.b64  	%rd2429, %rd2427, %rd2428;
	and.b64  	%rd2430, %rd2404, %rd2372;
	or.b64  	%rd2431, %rd2404, %rd2372;
	and.b64  	%rd2432, %rd2431, %rd2337;
	or.b64  	%rd2433, %rd2432, %rd2430;
	add.s64 	%rd2434, %rd2433, %rd2429;
	add.s64 	%rd2435, %rd2434, %rd2423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1848,%dummy}, %rd2380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1849}, %rd2380;
	}
	shf.r.wrap.b32 	%r1850, %r1849, %r1848, 19;
	shf.r.wrap.b32 	%r1851, %r1848, %r1849, 19;
	mov.b64 	%rd2436, {%r1851, %r1850};
	shf.l.wrap.b32 	%r1852, %r1848, %r1849, 3;
	shf.l.wrap.b32 	%r1853, %r1849, %r1848, 3;
	mov.b64 	%rd2437, {%r1853, %r1852};
	xor.b64  	%rd2438, %rd2436, %rd2437;
	shr.u64 	%rd2439, %rd2380, 6;
	xor.b64  	%rd2440, %rd2438, %rd2439;
	add.s64 	%rd2441, %rd2440, %rd2203;
	add.s64 	%rd2442, %rd2441, %rd123;
	add.s64 	%rd2443, %rd2442, %rd2326;
	xor.b64  	%rd2444, %rd2393, %rd2361;
	and.b64  	%rd2445, %rd2424, %rd2444;
	xor.b64  	%rd2446, %rd2445, %rd2361;
	add.s64 	%rd2447, %rd2443, %rd2446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd2424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd2424;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 14;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 14;
	mov.b64 	%rd2448, {%r1857, %r1856};
	shf.r.wrap.b32 	%r1858, %r1855, %r1854, 18;
	shf.r.wrap.b32 	%r1859, %r1854, %r1855, 18;
	mov.b64 	%rd2449, {%r1859, %r1858};
	xor.b64  	%rd2450, %rd2448, %rd2449;
	shf.l.wrap.b32 	%r1860, %r1854, %r1855, 23;
	shf.l.wrap.b32 	%r1861, %r1855, %r1854, 23;
	mov.b64 	%rd2451, {%r1861, %r1860};
	xor.b64  	%rd2452, %rd2450, %rd2451;
	add.s64 	%rd2453, %rd2447, %rd2452;
	add.s64 	%rd2454, %rd2453, -4658551843659510044;
	add.s64 	%rd2455, %rd2454, %rd2337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1862,%dummy}, %rd2435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1863}, %rd2435;
	}
	shf.r.wrap.b32 	%r1864, %r1863, %r1862, 28;
	shf.r.wrap.b32 	%r1865, %r1862, %r1863, 28;
	mov.b64 	%rd2456, {%r1865, %r1864};
	shf.l.wrap.b32 	%r1866, %r1862, %r1863, 30;
	shf.l.wrap.b32 	%r1867, %r1863, %r1862, 30;
	mov.b64 	%rd2457, {%r1867, %r1866};
	xor.b64  	%rd2458, %rd2456, %rd2457;
	shf.l.wrap.b32 	%r1868, %r1862, %r1863, 25;
	shf.l.wrap.b32 	%r1869, %r1863, %r1862, 25;
	mov.b64 	%rd2459, {%r1869, %r1868};
	xor.b64  	%rd2460, %rd2458, %rd2459;
	and.b64  	%rd2461, %rd2435, %rd2404;
	or.b64  	%rd2462, %rd2435, %rd2404;
	and.b64  	%rd2463, %rd2462, %rd2372;
	or.b64  	%rd2464, %rd2463, %rd2461;
	add.s64 	%rd2465, %rd2464, %rd2460;
	add.s64 	%rd2466, %rd2465, %rd2454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd2411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd2411;
	}
	shf.r.wrap.b32 	%r1872, %r1871, %r1870, 19;
	shf.r.wrap.b32 	%r1873, %r1870, %r1871, 19;
	mov.b64 	%rd2467, {%r1873, %r1872};
	shf.l.wrap.b32 	%r1874, %r1870, %r1871, 3;
	shf.l.wrap.b32 	%r1875, %r1871, %r1870, 3;
	mov.b64 	%rd2468, {%r1875, %r1874};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	shr.u64 	%rd2470, %rd2411, 6;
	xor.b64  	%rd2471, %rd2469, %rd2470;
	add.s64 	%rd2472, %rd2471, %rd2239;
	add.s64 	%rd2473, %rd2472, %rd123;
	add.s64 	%rd2474, %rd2473, %rd2361;
	xor.b64  	%rd2475, %rd2424, %rd2393;
	and.b64  	%rd2476, %rd2455, %rd2475;
	xor.b64  	%rd2477, %rd2476, %rd2393;
	add.s64 	%rd2478, %rd2474, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1876,%dummy}, %rd2455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd2455;
	}
	shf.r.wrap.b32 	%r1878, %r1877, %r1876, 14;
	shf.r.wrap.b32 	%r1879, %r1876, %r1877, 14;
	mov.b64 	%rd2479, {%r1879, %r1878};
	shf.r.wrap.b32 	%r1880, %r1877, %r1876, 18;
	shf.r.wrap.b32 	%r1881, %r1876, %r1877, 18;
	mov.b64 	%rd2480, {%r1881, %r1880};
	xor.b64  	%rd2481, %rd2479, %rd2480;
	shf.l.wrap.b32 	%r1882, %r1876, %r1877, 23;
	shf.l.wrap.b32 	%r1883, %r1877, %r1876, 23;
	mov.b64 	%rd2482, {%r1883, %r1882};
	xor.b64  	%rd2483, %rd2481, %rd2482;
	add.s64 	%rd2484, %rd2478, %rd2483;
	add.s64 	%rd2485, %rd2484, -4116276920077217854;
	add.s64 	%rd2486, %rd2485, %rd2372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd2466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd2466;
	}
	shf.r.wrap.b32 	%r1886, %r1885, %r1884, 28;
	shf.r.wrap.b32 	%r1887, %r1884, %r1885, 28;
	mov.b64 	%rd2487, {%r1887, %r1886};
	shf.l.wrap.b32 	%r1888, %r1884, %r1885, 30;
	shf.l.wrap.b32 	%r1889, %r1885, %r1884, 30;
	mov.b64 	%rd2488, {%r1889, %r1888};
	xor.b64  	%rd2489, %rd2487, %rd2488;
	shf.l.wrap.b32 	%r1890, %r1884, %r1885, 25;
	shf.l.wrap.b32 	%r1891, %r1885, %r1884, 25;
	mov.b64 	%rd2490, {%r1891, %r1890};
	xor.b64  	%rd2491, %rd2489, %rd2490;
	and.b64  	%rd2492, %rd2466, %rd2435;
	or.b64  	%rd2493, %rd2466, %rd2435;
	and.b64  	%rd2494, %rd2493, %rd2404;
	or.b64  	%rd2495, %rd2494, %rd2492;
	add.s64 	%rd2496, %rd2495, %rd2491;
	add.s64 	%rd2497, %rd2496, %rd2485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1892,%dummy}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd2442;
	}
	shf.r.wrap.b32 	%r1894, %r1893, %r1892, 19;
	shf.r.wrap.b32 	%r1895, %r1892, %r1893, 19;
	mov.b64 	%rd2498, {%r1895, %r1894};
	shf.l.wrap.b32 	%r1896, %r1892, %r1893, 3;
	shf.l.wrap.b32 	%r1897, %r1893, %r1892, 3;
	mov.b64 	%rd2499, {%r1897, %r1896};
	xor.b64  	%rd2500, %rd2498, %rd2499;
	shr.u64 	%rd2501, %rd2442, 6;
	xor.b64  	%rd2502, %rd2500, %rd2501;
	add.s64 	%rd2503, %rd2502, %rd2276;
	add.s64 	%rd2504, %rd2503, %rd123;
	add.s64 	%rd2505, %rd2504, %rd2393;
	xor.b64  	%rd2506, %rd2455, %rd2424;
	and.b64  	%rd2507, %rd2486, %rd2506;
	xor.b64  	%rd2508, %rd2507, %rd2424;
	add.s64 	%rd2509, %rd2505, %rd2508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1898,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1899}, %rd2486;
	}
	shf.r.wrap.b32 	%r1900, %r1899, %r1898, 14;
	shf.r.wrap.b32 	%r1901, %r1898, %r1899, 14;
	mov.b64 	%rd2510, {%r1901, %r1900};
	shf.r.wrap.b32 	%r1902, %r1899, %r1898, 18;
	shf.r.wrap.b32 	%r1903, %r1898, %r1899, 18;
	mov.b64 	%rd2511, {%r1903, %r1902};
	xor.b64  	%rd2512, %rd2510, %rd2511;
	shf.l.wrap.b32 	%r1904, %r1898, %r1899, 23;
	shf.l.wrap.b32 	%r1905, %r1899, %r1898, 23;
	mov.b64 	%rd2513, {%r1905, %r1904};
	xor.b64  	%rd2514, %rd2512, %rd2513;
	add.s64 	%rd2515, %rd2509, %rd2514;
	add.s64 	%rd2516, %rd2515, -3051310485924567259;
	add.s64 	%rd2517, %rd2516, %rd2404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd2497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1907}, %rd2497;
	}
	shf.r.wrap.b32 	%r1908, %r1907, %r1906, 28;
	shf.r.wrap.b32 	%r1909, %r1906, %r1907, 28;
	mov.b64 	%rd2518, {%r1909, %r1908};
	shf.l.wrap.b32 	%r1910, %r1906, %r1907, 30;
	shf.l.wrap.b32 	%r1911, %r1907, %r1906, 30;
	mov.b64 	%rd2519, {%r1911, %r1910};
	xor.b64  	%rd2520, %rd2518, %rd2519;
	shf.l.wrap.b32 	%r1912, %r1906, %r1907, 25;
	shf.l.wrap.b32 	%r1913, %r1907, %r1906, 25;
	mov.b64 	%rd2521, {%r1913, %r1912};
	xor.b64  	%rd2522, %rd2520, %rd2521;
	and.b64  	%rd2523, %rd2497, %rd2466;
	or.b64  	%rd2524, %rd2497, %rd2466;
	and.b64  	%rd2525, %rd2524, %rd2435;
	or.b64  	%rd2526, %rd2525, %rd2523;
	add.s64 	%rd2527, %rd2526, %rd2522;
	add.s64 	%rd2528, %rd2527, %rd2516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1914,%dummy}, %rd2473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1915}, %rd2473;
	}
	shf.r.wrap.b32 	%r1916, %r1915, %r1914, 19;
	shf.r.wrap.b32 	%r1917, %r1914, %r1915, 19;
	mov.b64 	%rd2529, {%r1917, %r1916};
	shf.l.wrap.b32 	%r1918, %r1914, %r1915, 3;
	shf.l.wrap.b32 	%r1919, %r1915, %r1914, 3;
	mov.b64 	%rd2530, {%r1919, %r1918};
	xor.b64  	%rd2531, %rd2529, %rd2530;
	shr.u64 	%rd2532, %rd2473, 6;
	xor.b64  	%rd2533, %rd2531, %rd2532;
	shf.r.wrap.b32 	%r1920, %r1580, %r1581, 8;
	shf.r.wrap.b32 	%r1921, %r1581, %r1580, 8;
	mov.b64 	%rd2534, {%r1921, %r1920};
	shf.r.wrap.b32 	%r1922, %r1580, %r1581, 1;
	shf.r.wrap.b32 	%r1923, %r1581, %r1580, 1;
	mov.b64 	%rd2535, {%r1923, %r1922};
	xor.b64  	%rd2536, %rd2535, %rd2534;
	xor.b64  	%rd2537, %rd2536, 4;
	add.s64 	%rd2538, %rd2533, %rd2313;
	add.s64 	%rd2539, %rd2538, %rd2537;
	add.s64 	%rd2540, %rd2539, %rd2424;
	xor.b64  	%rd2541, %rd2486, %rd2455;
	and.b64  	%rd2542, %rd2517, %rd2541;
	xor.b64  	%rd2543, %rd2542, %rd2455;
	add.s64 	%rd2544, %rd2540, %rd2543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2517;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 14;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 14;
	mov.b64 	%rd2545, {%r1927, %r1926};
	shf.r.wrap.b32 	%r1928, %r1925, %r1924, 18;
	shf.r.wrap.b32 	%r1929, %r1924, %r1925, 18;
	mov.b64 	%rd2546, {%r1929, %r1928};
	xor.b64  	%rd2547, %rd2545, %rd2546;
	shf.l.wrap.b32 	%r1930, %r1924, %r1925, 23;
	shf.l.wrap.b32 	%r1931, %r1925, %r1924, 23;
	mov.b64 	%rd2548, {%r1931, %r1930};
	xor.b64  	%rd2549, %rd2547, %rd2548;
	add.s64 	%rd2550, %rd2544, %rd2549;
	add.s64 	%rd2551, %rd2550, 489312712824947311;
	add.s64 	%rd2552, %rd2551, %rd2435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd2528;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 28;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 28;
	mov.b64 	%rd2553, {%r1935, %r1934};
	shf.l.wrap.b32 	%r1936, %r1932, %r1933, 30;
	shf.l.wrap.b32 	%r1937, %r1933, %r1932, 30;
	mov.b64 	%rd2554, {%r1937, %r1936};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	shf.l.wrap.b32 	%r1938, %r1932, %r1933, 25;
	shf.l.wrap.b32 	%r1939, %r1933, %r1932, 25;
	mov.b64 	%rd2556, {%r1939, %r1938};
	xor.b64  	%rd2557, %rd2555, %rd2556;
	and.b64  	%rd2558, %rd2528, %rd2497;
	or.b64  	%rd2559, %rd2528, %rd2497;
	and.b64  	%rd2560, %rd2559, %rd2466;
	or.b64  	%rd2561, %rd2560, %rd2558;
	add.s64 	%rd2562, %rd2561, %rd2557;
	add.s64 	%rd2563, %rd2562, %rd2551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd2504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd2504;
	}
	shf.r.wrap.b32 	%r1942, %r1941, %r1940, 19;
	shf.r.wrap.b32 	%r1943, %r1940, %r1941, 19;
	mov.b64 	%rd2564, {%r1943, %r1942};
	shf.l.wrap.b32 	%r1944, %r1940, %r1941, 3;
	shf.l.wrap.b32 	%r1945, %r1941, %r1940, 3;
	mov.b64 	%rd2565, {%r1945, %r1944};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	shr.u64 	%rd2567, %rd2504, 6;
	xor.b64  	%rd2568, %rd2566, %rd2567;
	shf.r.wrap.b32 	%r1946, %r1609, %r1608, 1;
	shf.r.wrap.b32 	%r1947, %r1608, %r1609, 1;
	mov.b64 	%rd2569, {%r1947, %r1946};
	shf.r.wrap.b32 	%r1948, %r1609, %r1608, 8;
	shf.r.wrap.b32 	%r1949, %r1608, %r1609, 8;
	mov.b64 	%rd2570, {%r1949, %r1948};
	xor.b64  	%rd2571, %rd2569, %rd2570;
	shr.u64 	%rd2572, %rd2059, 7;
	xor.b64  	%rd2573, %rd2571, %rd2572;
	add.s64 	%rd2574, %rd2568, %rd2348;
	add.s64 	%rd2575, %rd2574, %rd2573;
	add.s64 	%rd2576, %rd2575, 576;
	add.s64 	%rd2577, %rd2576, %rd2455;
	xor.b64  	%rd2578, %rd2517, %rd2486;
	and.b64  	%rd2579, %rd2552, %rd2578;
	xor.b64  	%rd2580, %rd2579, %rd2486;
	add.s64 	%rd2581, %rd2577, %rd2580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd2552;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 14;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 14;
	mov.b64 	%rd2582, {%r1953, %r1952};
	shf.r.wrap.b32 	%r1954, %r1951, %r1950, 18;
	shf.r.wrap.b32 	%r1955, %r1950, %r1951, 18;
	mov.b64 	%rd2583, {%r1955, %r1954};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	shf.l.wrap.b32 	%r1956, %r1950, %r1951, 23;
	shf.l.wrap.b32 	%r1957, %r1951, %r1950, 23;
	mov.b64 	%rd2585, {%r1957, %r1956};
	xor.b64  	%rd2586, %rd2584, %rd2585;
	add.s64 	%rd2587, %rd2581, %rd2586;
	add.s64 	%rd2588, %rd2587, 1452737877330783856;
	add.s64 	%rd2589, %rd2588, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1958,%dummy}, %rd2563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1959}, %rd2563;
	}
	shf.r.wrap.b32 	%r1960, %r1959, %r1958, 28;
	shf.r.wrap.b32 	%r1961, %r1958, %r1959, 28;
	mov.b64 	%rd2590, {%r1961, %r1960};
	shf.l.wrap.b32 	%r1962, %r1958, %r1959, 30;
	shf.l.wrap.b32 	%r1963, %r1959, %r1958, 30;
	mov.b64 	%rd2591, {%r1963, %r1962};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	shf.l.wrap.b32 	%r1964, %r1958, %r1959, 25;
	shf.l.wrap.b32 	%r1965, %r1959, %r1958, 25;
	mov.b64 	%rd2593, {%r1965, %r1964};
	xor.b64  	%rd2594, %rd2592, %rd2593;
	and.b64  	%rd2595, %rd2563, %rd2528;
	or.b64  	%rd2596, %rd2563, %rd2528;
	and.b64  	%rd2597, %rd2596, %rd2497;
	or.b64  	%rd2598, %rd2597, %rd2595;
	add.s64 	%rd2599, %rd2598, %rd2594;
	add.s64 	%rd2600, %rd2599, %rd2588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1966,%dummy}, %rd2539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1967}, %rd2539;
	}
	shf.r.wrap.b32 	%r1968, %r1967, %r1966, 19;
	shf.r.wrap.b32 	%r1969, %r1966, %r1967, 19;
	mov.b64 	%rd2601, {%r1969, %r1968};
	shf.l.wrap.b32 	%r1970, %r1966, %r1967, 3;
	shf.l.wrap.b32 	%r1971, %r1967, %r1966, 3;
	mov.b64 	%rd2602, {%r1971, %r1970};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	shr.u64 	%rd2604, %rd2539, 6;
	xor.b64  	%rd2605, %rd2603, %rd2604;
	shf.r.wrap.b32 	%r1972, %r1637, %r1636, 1;
	shf.r.wrap.b32 	%r1973, %r1636, %r1637, 1;
	mov.b64 	%rd2606, {%r1973, %r1972};
	shf.r.wrap.b32 	%r1974, %r1637, %r1636, 8;
	shf.r.wrap.b32 	%r1975, %r1636, %r1637, 8;
	mov.b64 	%rd2607, {%r1975, %r1974};
	xor.b64  	%rd2608, %rd2606, %rd2607;
	shr.u64 	%rd2609, %rd2095, 7;
	xor.b64  	%rd2610, %rd2608, %rd2609;
	add.s64 	%rd2611, %rd2605, %rd2059;
	add.s64 	%rd2612, %rd2611, %rd2380;
	add.s64 	%rd2613, %rd2612, %rd2610;
	add.s64 	%rd2614, %rd2613, %rd2486;
	xor.b64  	%rd2615, %rd2552, %rd2517;
	and.b64  	%rd2616, %rd2589, %rd2615;
	xor.b64  	%rd2617, %rd2616, %rd2517;
	add.s64 	%rd2618, %rd2614, %rd2617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1976,%dummy}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd2589;
	}
	shf.r.wrap.b32 	%r1978, %r1977, %r1976, 14;
	shf.r.wrap.b32 	%r1979, %r1976, %r1977, 14;
	mov.b64 	%rd2619, {%r1979, %r1978};
	shf.r.wrap.b32 	%r1980, %r1977, %r1976, 18;
	shf.r.wrap.b32 	%r1981, %r1976, %r1977, 18;
	mov.b64 	%rd2620, {%r1981, %r1980};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	shf.l.wrap.b32 	%r1982, %r1976, %r1977, 23;
	shf.l.wrap.b32 	%r1983, %r1977, %r1976, 23;
	mov.b64 	%rd2622, {%r1983, %r1982};
	xor.b64  	%rd2623, %rd2621, %rd2622;
	add.s64 	%rd2624, %rd2618, %rd2623;
	add.s64 	%rd2625, %rd2624, 2861767655752347644;
	add.s64 	%rd2626, %rd2625, %rd2497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1984,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1985}, %rd2600;
	}
	shf.r.wrap.b32 	%r1986, %r1985, %r1984, 28;
	shf.r.wrap.b32 	%r1987, %r1984, %r1985, 28;
	mov.b64 	%rd2627, {%r1987, %r1986};
	shf.l.wrap.b32 	%r1988, %r1984, %r1985, 30;
	shf.l.wrap.b32 	%r1989, %r1985, %r1984, 30;
	mov.b64 	%rd2628, {%r1989, %r1988};
	xor.b64  	%rd2629, %rd2627, %rd2628;
	shf.l.wrap.b32 	%r1990, %r1984, %r1985, 25;
	shf.l.wrap.b32 	%r1991, %r1985, %r1984, 25;
	mov.b64 	%rd2630, {%r1991, %r1990};
	xor.b64  	%rd2631, %rd2629, %rd2630;
	and.b64  	%rd2632, %rd2600, %rd2563;
	or.b64  	%rd2633, %rd2600, %rd2563;
	and.b64  	%rd2634, %rd2633, %rd2528;
	or.b64  	%rd2635, %rd2634, %rd2632;
	add.s64 	%rd2636, %rd2635, %rd2631;
	add.s64 	%rd2637, %rd2636, %rd2625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1992,%dummy}, %rd2576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1993}, %rd2576;
	}
	shf.r.wrap.b32 	%r1994, %r1993, %r1992, 19;
	shf.r.wrap.b32 	%r1995, %r1992, %r1993, 19;
	mov.b64 	%rd2638, {%r1995, %r1994};
	shf.l.wrap.b32 	%r1996, %r1992, %r1993, 3;
	shf.l.wrap.b32 	%r1997, %r1993, %r1992, 3;
	mov.b64 	%rd2639, {%r1997, %r1996};
	xor.b64  	%rd2640, %rd2638, %rd2639;
	shr.u64 	%rd2641, %rd2576, 6;
	xor.b64  	%rd2642, %rd2640, %rd2641;
	shf.r.wrap.b32 	%r1998, %r1665, %r1664, 1;
	shf.r.wrap.b32 	%r1999, %r1664, %r1665, 1;
	mov.b64 	%rd2643, {%r1999, %r1998};
	shf.r.wrap.b32 	%r2000, %r1665, %r1664, 8;
	shf.r.wrap.b32 	%r2001, %r1664, %r1665, 8;
	mov.b64 	%rd2644, {%r2001, %r2000};
	xor.b64  	%rd2645, %rd2643, %rd2644;
	shr.u64 	%rd2646, %rd2131, 7;
	xor.b64  	%rd2647, %rd2645, %rd2646;
	add.s64 	%rd2648, %rd2642, %rd2095;
	add.s64 	%rd2649, %rd2648, %rd2411;
	add.s64 	%rd2650, %rd2649, %rd2647;
	add.s64 	%rd2651, %rd2650, %rd2517;
	xor.b64  	%rd2652, %rd2589, %rd2552;
	and.b64  	%rd2653, %rd2626, %rd2652;
	xor.b64  	%rd2654, %rd2653, %rd2552;
	add.s64 	%rd2655, %rd2651, %rd2654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd2626;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 14;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 14;
	mov.b64 	%rd2656, {%r2005, %r2004};
	shf.r.wrap.b32 	%r2006, %r2003, %r2002, 18;
	shf.r.wrap.b32 	%r2007, %r2002, %r2003, 18;
	mov.b64 	%rd2657, {%r2007, %r2006};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	shf.l.wrap.b32 	%r2008, %r2002, %r2003, 23;
	shf.l.wrap.b32 	%r2009, %r2003, %r2002, 23;
	mov.b64 	%rd2659, {%r2009, %r2008};
	xor.b64  	%rd2660, %rd2658, %rd2659;
	add.s64 	%rd2661, %rd2655, %rd2660;
	add.s64 	%rd2662, %rd2661, 3322285676063803686;
	add.s64 	%rd2663, %rd2662, %rd2528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd2637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd2637;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 28;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 28;
	mov.b64 	%rd2664, {%r2013, %r2012};
	shf.l.wrap.b32 	%r2014, %r2010, %r2011, 30;
	shf.l.wrap.b32 	%r2015, %r2011, %r2010, 30;
	mov.b64 	%rd2665, {%r2015, %r2014};
	xor.b64  	%rd2666, %rd2664, %rd2665;
	shf.l.wrap.b32 	%r2016, %r2010, %r2011, 25;
	shf.l.wrap.b32 	%r2017, %r2011, %r2010, 25;
	mov.b64 	%rd2667, {%r2017, %r2016};
	xor.b64  	%rd2668, %rd2666, %rd2667;
	and.b64  	%rd2669, %rd2637, %rd2600;
	or.b64  	%rd2670, %rd2637, %rd2600;
	and.b64  	%rd2671, %rd2670, %rd2563;
	or.b64  	%rd2672, %rd2671, %rd2669;
	add.s64 	%rd2673, %rd2672, %rd2668;
	add.s64 	%rd2674, %rd2673, %rd2662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2019}, %rd2613;
	}
	shf.r.wrap.b32 	%r2020, %r2019, %r2018, 19;
	shf.r.wrap.b32 	%r2021, %r2018, %r2019, 19;
	mov.b64 	%rd2675, {%r2021, %r2020};
	shf.l.wrap.b32 	%r2022, %r2018, %r2019, 3;
	shf.l.wrap.b32 	%r2023, %r2019, %r2018, 3;
	mov.b64 	%rd2676, {%r2023, %r2022};
	xor.b64  	%rd2677, %rd2675, %rd2676;
	shr.u64 	%rd2678, %rd2613, 6;
	xor.b64  	%rd2679, %rd2677, %rd2678;
	shf.r.wrap.b32 	%r2024, %r1693, %r1692, 1;
	shf.r.wrap.b32 	%r2025, %r1692, %r1693, 1;
	mov.b64 	%rd2680, {%r2025, %r2024};
	shf.r.wrap.b32 	%r2026, %r1693, %r1692, 8;
	shf.r.wrap.b32 	%r2027, %r1692, %r1693, 8;
	mov.b64 	%rd2681, {%r2027, %r2026};
	xor.b64  	%rd2682, %rd2680, %rd2681;
	shr.u64 	%rd2683, %rd2167, 7;
	xor.b64  	%rd2684, %rd2682, %rd2683;
	add.s64 	%rd2685, %rd2679, %rd2131;
	add.s64 	%rd2686, %rd2685, %rd2442;
	add.s64 	%rd2687, %rd2686, %rd2684;
	add.s64 	%rd2688, %rd2687, %rd2552;
	xor.b64  	%rd2689, %rd2626, %rd2589;
	and.b64  	%rd2690, %rd2663, %rd2689;
	xor.b64  	%rd2691, %rd2690, %rd2589;
	add.s64 	%rd2692, %rd2688, %rd2691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd2663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd2663;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 14;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 14;
	mov.b64 	%rd2693, {%r2031, %r2030};
	shf.r.wrap.b32 	%r2032, %r2029, %r2028, 18;
	shf.r.wrap.b32 	%r2033, %r2028, %r2029, 18;
	mov.b64 	%rd2694, {%r2033, %r2032};
	xor.b64  	%rd2695, %rd2693, %rd2694;
	shf.l.wrap.b32 	%r2034, %r2028, %r2029, 23;
	shf.l.wrap.b32 	%r2035, %r2029, %r2028, 23;
	mov.b64 	%rd2696, {%r2035, %r2034};
	xor.b64  	%rd2697, %rd2695, %rd2696;
	add.s64 	%rd2698, %rd2692, %rd2697;
	add.s64 	%rd2699, %rd2698, 5560940570517711597;
	add.s64 	%rd2700, %rd2699, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd2674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2037}, %rd2674;
	}
	shf.r.wrap.b32 	%r2038, %r2037, %r2036, 28;
	shf.r.wrap.b32 	%r2039, %r2036, %r2037, 28;
	mov.b64 	%rd2701, {%r2039, %r2038};
	shf.l.wrap.b32 	%r2040, %r2036, %r2037, 30;
	shf.l.wrap.b32 	%r2041, %r2037, %r2036, 30;
	mov.b64 	%rd2702, {%r2041, %r2040};
	xor.b64  	%rd2703, %rd2701, %rd2702;
	shf.l.wrap.b32 	%r2042, %r2036, %r2037, 25;
	shf.l.wrap.b32 	%r2043, %r2037, %r2036, 25;
	mov.b64 	%rd2704, {%r2043, %r2042};
	xor.b64  	%rd2705, %rd2703, %rd2704;
	and.b64  	%rd2706, %rd2674, %rd2637;
	or.b64  	%rd2707, %rd2674, %rd2637;
	and.b64  	%rd2708, %rd2707, %rd2600;
	or.b64  	%rd2709, %rd2708, %rd2706;
	add.s64 	%rd2710, %rd2709, %rd2705;
	add.s64 	%rd2711, %rd2710, %rd2699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2044,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd2650;
	}
	shf.r.wrap.b32 	%r2046, %r2045, %r2044, 19;
	shf.r.wrap.b32 	%r2047, %r2044, %r2045, 19;
	mov.b64 	%rd2712, {%r2047, %r2046};
	shf.l.wrap.b32 	%r2048, %r2044, %r2045, 3;
	shf.l.wrap.b32 	%r2049, %r2045, %r2044, 3;
	mov.b64 	%rd2713, {%r2049, %r2048};
	xor.b64  	%rd2714, %rd2712, %rd2713;
	shr.u64 	%rd2715, %rd2650, 6;
	xor.b64  	%rd2716, %rd2714, %rd2715;
	shf.r.wrap.b32 	%r2050, %r1721, %r1720, 1;
	shf.r.wrap.b32 	%r2051, %r1720, %r1721, 1;
	mov.b64 	%rd2717, {%r2051, %r2050};
	shf.r.wrap.b32 	%r2052, %r1721, %r1720, 8;
	shf.r.wrap.b32 	%r2053, %r1720, %r1721, 8;
	mov.b64 	%rd2718, {%r2053, %r2052};
	xor.b64  	%rd2719, %rd2717, %rd2718;
	shr.u64 	%rd2720, %rd2203, 7;
	xor.b64  	%rd2721, %rd2719, %rd2720;
	add.s64 	%rd2722, %rd2716, %rd2167;
	add.s64 	%rd2723, %rd2722, %rd2473;
	add.s64 	%rd2724, %rd2723, %rd2721;
	add.s64 	%rd2725, %rd2724, %rd2589;
	xor.b64  	%rd2726, %rd2663, %rd2626;
	and.b64  	%rd2727, %rd2700, %rd2726;
	xor.b64  	%rd2728, %rd2727, %rd2626;
	add.s64 	%rd2729, %rd2725, %rd2728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd2700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2055}, %rd2700;
	}
	shf.r.wrap.b32 	%r2056, %r2055, %r2054, 14;
	shf.r.wrap.b32 	%r2057, %r2054, %r2055, 14;
	mov.b64 	%rd2730, {%r2057, %r2056};
	shf.r.wrap.b32 	%r2058, %r2055, %r2054, 18;
	shf.r.wrap.b32 	%r2059, %r2054, %r2055, 18;
	mov.b64 	%rd2731, {%r2059, %r2058};
	xor.b64  	%rd2732, %rd2730, %rd2731;
	shf.l.wrap.b32 	%r2060, %r2054, %r2055, 23;
	shf.l.wrap.b32 	%r2061, %r2055, %r2054, 23;
	mov.b64 	%rd2733, {%r2061, %r2060};
	xor.b64  	%rd2734, %rd2732, %rd2733;
	add.s64 	%rd2735, %rd2729, %rd2734;
	add.s64 	%rd2736, %rd2735, 5996557281743188959;
	add.s64 	%rd2737, %rd2736, %rd2600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2062,%dummy}, %rd2711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2063}, %rd2711;
	}
	shf.r.wrap.b32 	%r2064, %r2063, %r2062, 28;
	shf.r.wrap.b32 	%r2065, %r2062, %r2063, 28;
	mov.b64 	%rd2738, {%r2065, %r2064};
	shf.l.wrap.b32 	%r2066, %r2062, %r2063, 30;
	shf.l.wrap.b32 	%r2067, %r2063, %r2062, 30;
	mov.b64 	%rd2739, {%r2067, %r2066};
	xor.b64  	%rd2740, %rd2738, %rd2739;
	shf.l.wrap.b32 	%r2068, %r2062, %r2063, 25;
	shf.l.wrap.b32 	%r2069, %r2063, %r2062, 25;
	mov.b64 	%rd2741, {%r2069, %r2068};
	xor.b64  	%rd2742, %rd2740, %rd2741;
	and.b64  	%rd2743, %rd2711, %rd2674;
	or.b64  	%rd2744, %rd2711, %rd2674;
	and.b64  	%rd2745, %rd2744, %rd2637;
	or.b64  	%rd2746, %rd2745, %rd2743;
	add.s64 	%rd2747, %rd2746, %rd2742;
	add.s64 	%rd2748, %rd2747, %rd2736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2070,%dummy}, %rd2687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd2687;
	}
	shf.r.wrap.b32 	%r2072, %r2071, %r2070, 19;
	shf.r.wrap.b32 	%r2073, %r2070, %r2071, 19;
	mov.b64 	%rd2749, {%r2073, %r2072};
	shf.l.wrap.b32 	%r2074, %r2070, %r2071, 3;
	shf.l.wrap.b32 	%r2075, %r2071, %r2070, 3;
	mov.b64 	%rd2750, {%r2075, %r2074};
	xor.b64  	%rd2751, %rd2749, %rd2750;
	shr.u64 	%rd2752, %rd2687, 6;
	xor.b64  	%rd2753, %rd2751, %rd2752;
	shf.r.wrap.b32 	%r2076, %r1749, %r1748, 1;
	shf.r.wrap.b32 	%r2077, %r1748, %r1749, 1;
	mov.b64 	%rd2754, {%r2077, %r2076};
	shf.r.wrap.b32 	%r2078, %r1749, %r1748, 8;
	shf.r.wrap.b32 	%r2079, %r1748, %r1749, 8;
	mov.b64 	%rd2755, {%r2079, %r2078};
	xor.b64  	%rd2756, %rd2754, %rd2755;
	shr.u64 	%rd2757, %rd2239, 7;
	xor.b64  	%rd2758, %rd2756, %rd2757;
	add.s64 	%rd2759, %rd2753, %rd2203;
	add.s64 	%rd2760, %rd2759, %rd2504;
	add.s64 	%rd2761, %rd2760, %rd2758;
	add.s64 	%rd2762, %rd2761, %rd2626;
	xor.b64  	%rd2763, %rd2700, %rd2663;
	and.b64  	%rd2764, %rd2737, %rd2763;
	xor.b64  	%rd2765, %rd2764, %rd2663;
	add.s64 	%rd2766, %rd2762, %rd2765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd2737;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 14;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 14;
	mov.b64 	%rd2767, {%r2083, %r2082};
	shf.r.wrap.b32 	%r2084, %r2081, %r2080, 18;
	shf.r.wrap.b32 	%r2085, %r2080, %r2081, 18;
	mov.b64 	%rd2768, {%r2085, %r2084};
	xor.b64  	%rd2769, %rd2767, %rd2768;
	shf.l.wrap.b32 	%r2086, %r2080, %r2081, 23;
	shf.l.wrap.b32 	%r2087, %r2081, %r2080, 23;
	mov.b64 	%rd2770, {%r2087, %r2086};
	xor.b64  	%rd2771, %rd2769, %rd2770;
	add.s64 	%rd2772, %rd2766, %rd2771;
	add.s64 	%rd2773, %rd2772, 7280758554555802590;
	add.s64 	%rd2774, %rd2773, %rd2637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2088,%dummy}, %rd2748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2089}, %rd2748;
	}
	shf.r.wrap.b32 	%r2090, %r2089, %r2088, 28;
	shf.r.wrap.b32 	%r2091, %r2088, %r2089, 28;
	mov.b64 	%rd2775, {%r2091, %r2090};
	shf.l.wrap.b32 	%r2092, %r2088, %r2089, 30;
	shf.l.wrap.b32 	%r2093, %r2089, %r2088, 30;
	mov.b64 	%rd2776, {%r2093, %r2092};
	xor.b64  	%rd2777, %rd2775, %rd2776;
	shf.l.wrap.b32 	%r2094, %r2088, %r2089, 25;
	shf.l.wrap.b32 	%r2095, %r2089, %r2088, 25;
	mov.b64 	%rd2778, {%r2095, %r2094};
	xor.b64  	%rd2779, %rd2777, %rd2778;
	and.b64  	%rd2780, %rd2748, %rd2711;
	or.b64  	%rd2781, %rd2748, %rd2711;
	and.b64  	%rd2782, %rd2781, %rd2674;
	or.b64  	%rd2783, %rd2782, %rd2780;
	add.s64 	%rd2784, %rd2783, %rd2779;
	add.s64 	%rd2785, %rd2784, %rd2773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2096,%dummy}, %rd2724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2097}, %rd2724;
	}
	shf.r.wrap.b32 	%r2098, %r2097, %r2096, 19;
	shf.r.wrap.b32 	%r2099, %r2096, %r2097, 19;
	mov.b64 	%rd2786, {%r2099, %r2098};
	shf.l.wrap.b32 	%r2100, %r2096, %r2097, 3;
	shf.l.wrap.b32 	%r2101, %r2097, %r2096, 3;
	mov.b64 	%rd2787, {%r2101, %r2100};
	xor.b64  	%rd2788, %rd2786, %rd2787;
	shr.u64 	%rd2789, %rd2724, 6;
	xor.b64  	%rd2790, %rd2788, %rd2789;
	shf.r.wrap.b32 	%r2102, %r1777, %r1776, 1;
	shf.r.wrap.b32 	%r2103, %r1776, %r1777, 1;
	mov.b64 	%rd2791, {%r2103, %r2102};
	shf.r.wrap.b32 	%r2104, %r1777, %r1776, 8;
	shf.r.wrap.b32 	%r2105, %r1776, %r1777, 8;
	mov.b64 	%rd2792, {%r2105, %r2104};
	xor.b64  	%rd2793, %rd2791, %rd2792;
	shr.u64 	%rd2794, %rd2276, 7;
	xor.b64  	%rd2795, %rd2793, %rd2794;
	add.s64 	%rd2796, %rd2790, %rd2239;
	add.s64 	%rd2797, %rd2796, %rd2539;
	add.s64 	%rd2798, %rd2797, %rd2795;
	add.s64 	%rd2799, %rd2798, %rd2663;
	xor.b64  	%rd2800, %rd2737, %rd2700;
	and.b64  	%rd2801, %rd2774, %rd2800;
	xor.b64  	%rd2802, %rd2801, %rd2700;
	add.s64 	%rd2803, %rd2799, %rd2802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd2774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd2774;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 14;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 14;
	mov.b64 	%rd2804, {%r2109, %r2108};
	shf.r.wrap.b32 	%r2110, %r2107, %r2106, 18;
	shf.r.wrap.b32 	%r2111, %r2106, %r2107, 18;
	mov.b64 	%rd2805, {%r2111, %r2110};
	xor.b64  	%rd2806, %rd2804, %rd2805;
	shf.l.wrap.b32 	%r2112, %r2106, %r2107, 23;
	shf.l.wrap.b32 	%r2113, %r2107, %r2106, 23;
	mov.b64 	%rd2807, {%r2113, %r2112};
	xor.b64  	%rd2808, %rd2806, %rd2807;
	add.s64 	%rd2809, %rd2803, %rd2808;
	add.s64 	%rd2810, %rd2809, 8532644243296465576;
	add.s64 	%rd2811, %rd2810, %rd2674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd2785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd2785;
	}
	shf.r.wrap.b32 	%r2116, %r2115, %r2114, 28;
	shf.r.wrap.b32 	%r2117, %r2114, %r2115, 28;
	mov.b64 	%rd2812, {%r2117, %r2116};
	shf.l.wrap.b32 	%r2118, %r2114, %r2115, 30;
	shf.l.wrap.b32 	%r2119, %r2115, %r2114, 30;
	mov.b64 	%rd2813, {%r2119, %r2118};
	xor.b64  	%rd2814, %rd2812, %rd2813;
	shf.l.wrap.b32 	%r2120, %r2114, %r2115, 25;
	shf.l.wrap.b32 	%r2121, %r2115, %r2114, 25;
	mov.b64 	%rd2815, {%r2121, %r2120};
	xor.b64  	%rd2816, %rd2814, %rd2815;
	and.b64  	%rd2817, %rd2785, %rd2748;
	or.b64  	%rd2818, %rd2785, %rd2748;
	and.b64  	%rd2819, %rd2818, %rd2711;
	or.b64  	%rd2820, %rd2819, %rd2817;
	add.s64 	%rd2821, %rd2820, %rd2816;
	add.s64 	%rd2822, %rd2821, %rd2810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd2761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2123}, %rd2761;
	}
	shf.r.wrap.b32 	%r2124, %r2123, %r2122, 19;
	shf.r.wrap.b32 	%r2125, %r2122, %r2123, 19;
	mov.b64 	%rd2823, {%r2125, %r2124};
	shf.l.wrap.b32 	%r2126, %r2122, %r2123, 3;
	shf.l.wrap.b32 	%r2127, %r2123, %r2122, 3;
	mov.b64 	%rd2824, {%r2127, %r2126};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	shr.u64 	%rd2826, %rd2761, 6;
	xor.b64  	%rd2827, %rd2825, %rd2826;
	shf.r.wrap.b32 	%r2128, %r1805, %r1804, 1;
	shf.r.wrap.b32 	%r2129, %r1804, %r1805, 1;
	mov.b64 	%rd2828, {%r2129, %r2128};
	shf.r.wrap.b32 	%r2130, %r1805, %r1804, 8;
	shf.r.wrap.b32 	%r2131, %r1804, %r1805, 8;
	mov.b64 	%rd2829, {%r2131, %r2130};
	xor.b64  	%rd2830, %rd2828, %rd2829;
	shr.u64 	%rd2831, %rd2313, 7;
	xor.b64  	%rd2832, %rd2830, %rd2831;
	add.s64 	%rd2833, %rd2827, %rd2276;
	add.s64 	%rd2834, %rd2833, %rd2576;
	add.s64 	%rd2835, %rd2834, %rd2832;
	add.s64 	%rd2836, %rd2835, %rd2700;
	xor.b64  	%rd2837, %rd2774, %rd2737;
	and.b64  	%rd2838, %rd2811, %rd2837;
	xor.b64  	%rd2839, %rd2838, %rd2737;
	add.s64 	%rd2840, %rd2836, %rd2839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2132,%dummy}, %rd2811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2133}, %rd2811;
	}
	shf.r.wrap.b32 	%r2134, %r2133, %r2132, 14;
	shf.r.wrap.b32 	%r2135, %r2132, %r2133, 14;
	mov.b64 	%rd2841, {%r2135, %r2134};
	shf.r.wrap.b32 	%r2136, %r2133, %r2132, 18;
	shf.r.wrap.b32 	%r2137, %r2132, %r2133, 18;
	mov.b64 	%rd2842, {%r2137, %r2136};
	xor.b64  	%rd2843, %rd2841, %rd2842;
	shf.l.wrap.b32 	%r2138, %r2132, %r2133, 23;
	shf.l.wrap.b32 	%r2139, %r2133, %r2132, 23;
	mov.b64 	%rd2844, {%r2139, %r2138};
	xor.b64  	%rd2845, %rd2843, %rd2844;
	add.s64 	%rd2846, %rd2840, %rd2845;
	add.s64 	%rd2847, %rd2846, -9096487096722542874;
	add.s64 	%rd2848, %rd2847, %rd2711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2140,%dummy}, %rd2822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2141}, %rd2822;
	}
	shf.r.wrap.b32 	%r2142, %r2141, %r2140, 28;
	shf.r.wrap.b32 	%r2143, %r2140, %r2141, 28;
	mov.b64 	%rd2849, {%r2143, %r2142};
	shf.l.wrap.b32 	%r2144, %r2140, %r2141, 30;
	shf.l.wrap.b32 	%r2145, %r2141, %r2140, 30;
	mov.b64 	%rd2850, {%r2145, %r2144};
	xor.b64  	%rd2851, %rd2849, %rd2850;
	shf.l.wrap.b32 	%r2146, %r2140, %r2141, 25;
	shf.l.wrap.b32 	%r2147, %r2141, %r2140, 25;
	mov.b64 	%rd2852, {%r2147, %r2146};
	xor.b64  	%rd2853, %rd2851, %rd2852;
	and.b64  	%rd2854, %rd2822, %rd2785;
	or.b64  	%rd2855, %rd2822, %rd2785;
	and.b64  	%rd2856, %rd2855, %rd2748;
	or.b64  	%rd2857, %rd2856, %rd2854;
	add.s64 	%rd2858, %rd2857, %rd2853;
	add.s64 	%rd2859, %rd2858, %rd2847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2148,%dummy}, %rd2798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2149}, %rd2798;
	}
	shf.r.wrap.b32 	%r2150, %r2149, %r2148, 19;
	shf.r.wrap.b32 	%r2151, %r2148, %r2149, 19;
	mov.b64 	%rd2860, {%r2151, %r2150};
	shf.l.wrap.b32 	%r2152, %r2148, %r2149, 3;
	shf.l.wrap.b32 	%r2153, %r2149, %r2148, 3;
	mov.b64 	%rd2861, {%r2153, %r2152};
	xor.b64  	%rd2862, %rd2860, %rd2861;
	shr.u64 	%rd2863, %rd2798, 6;
	xor.b64  	%rd2864, %rd2862, %rd2863;
	shf.r.wrap.b32 	%r2154, %r1827, %r1826, 1;
	shf.r.wrap.b32 	%r2155, %r1826, %r1827, 1;
	mov.b64 	%rd2865, {%r2155, %r2154};
	shf.r.wrap.b32 	%r2156, %r1827, %r1826, 8;
	shf.r.wrap.b32 	%r2157, %r1826, %r1827, 8;
	mov.b64 	%rd2866, {%r2157, %r2156};
	xor.b64  	%rd2867, %rd2865, %rd2866;
	shr.u64 	%rd2868, %rd2348, 7;
	xor.b64  	%rd2869, %rd2867, %rd2868;
	add.s64 	%rd2870, %rd2864, %rd2313;
	add.s64 	%rd2871, %rd2870, %rd2613;
	add.s64 	%rd2872, %rd2871, %rd2869;
	add.s64 	%rd2873, %rd2872, %rd2737;
	xor.b64  	%rd2874, %rd2811, %rd2774;
	and.b64  	%rd2875, %rd2848, %rd2874;
	xor.b64  	%rd2876, %rd2875, %rd2774;
	add.s64 	%rd2877, %rd2873, %rd2876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd2848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd2848;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 14;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 14;
	mov.b64 	%rd2878, {%r2161, %r2160};
	shf.r.wrap.b32 	%r2162, %r2159, %r2158, 18;
	shf.r.wrap.b32 	%r2163, %r2158, %r2159, 18;
	mov.b64 	%rd2879, {%r2163, %r2162};
	xor.b64  	%rd2880, %rd2878, %rd2879;
	shf.l.wrap.b32 	%r2164, %r2158, %r2159, 23;
	shf.l.wrap.b32 	%r2165, %r2159, %r2158, 23;
	mov.b64 	%rd2881, {%r2165, %r2164};
	xor.b64  	%rd2882, %rd2880, %rd2881;
	add.s64 	%rd2883, %rd2877, %rd2882;
	add.s64 	%rd2884, %rd2883, -7894198246740708037;
	add.s64 	%rd2885, %rd2884, %rd2748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd2859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2167}, %rd2859;
	}
	shf.r.wrap.b32 	%r2168, %r2167, %r2166, 28;
	shf.r.wrap.b32 	%r2169, %r2166, %r2167, 28;
	mov.b64 	%rd2886, {%r2169, %r2168};
	shf.l.wrap.b32 	%r2170, %r2166, %r2167, 30;
	shf.l.wrap.b32 	%r2171, %r2167, %r2166, 30;
	mov.b64 	%rd2887, {%r2171, %r2170};
	xor.b64  	%rd2888, %rd2886, %rd2887;
	shf.l.wrap.b32 	%r2172, %r2166, %r2167, 25;
	shf.l.wrap.b32 	%r2173, %r2167, %r2166, 25;
	mov.b64 	%rd2889, {%r2173, %r2172};
	xor.b64  	%rd2890, %rd2888, %rd2889;
	and.b64  	%rd2891, %rd2859, %rd2822;
	or.b64  	%rd2892, %rd2859, %rd2822;
	and.b64  	%rd2893, %rd2892, %rd2785;
	or.b64  	%rd2894, %rd2893, %rd2891;
	add.s64 	%rd2895, %rd2894, %rd2890;
	add.s64 	%rd2896, %rd2895, %rd2884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd2835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2175}, %rd2835;
	}
	shf.r.wrap.b32 	%r2176, %r2175, %r2174, 19;
	shf.r.wrap.b32 	%r2177, %r2174, %r2175, 19;
	mov.b64 	%rd2897, {%r2177, %r2176};
	shf.l.wrap.b32 	%r2178, %r2174, %r2175, 3;
	shf.l.wrap.b32 	%r2179, %r2175, %r2174, 3;
	mov.b64 	%rd2898, {%r2179, %r2178};
	xor.b64  	%rd2899, %rd2897, %rd2898;
	shr.u64 	%rd2900, %rd2835, 6;
	xor.b64  	%rd2901, %rd2899, %rd2900;
	shf.r.wrap.b32 	%r2180, %r1849, %r1848, 1;
	shf.r.wrap.b32 	%r2181, %r1848, %r1849, 1;
	mov.b64 	%rd2902, {%r2181, %r2180};
	shf.r.wrap.b32 	%r2182, %r1849, %r1848, 8;
	shf.r.wrap.b32 	%r2183, %r1848, %r1849, 8;
	mov.b64 	%rd2903, {%r2183, %r2182};
	xor.b64  	%rd2904, %rd2902, %rd2903;
	shr.u64 	%rd2905, %rd2380, 7;
	xor.b64  	%rd2906, %rd2904, %rd2905;
	add.s64 	%rd2907, %rd2901, %rd2348;
	add.s64 	%rd2908, %rd2907, %rd2650;
	add.s64 	%rd2909, %rd2908, %rd2906;
	add.s64 	%rd2910, %rd2909, %rd2774;
	xor.b64  	%rd2911, %rd2848, %rd2811;
	and.b64  	%rd2912, %rd2885, %rd2911;
	xor.b64  	%rd2913, %rd2912, %rd2811;
	add.s64 	%rd2914, %rd2910, %rd2913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2184,%dummy}, %rd2885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2185}, %rd2885;
	}
	shf.r.wrap.b32 	%r2186, %r2185, %r2184, 14;
	shf.r.wrap.b32 	%r2187, %r2184, %r2185, 14;
	mov.b64 	%rd2915, {%r2187, %r2186};
	shf.r.wrap.b32 	%r2188, %r2185, %r2184, 18;
	shf.r.wrap.b32 	%r2189, %r2184, %r2185, 18;
	mov.b64 	%rd2916, {%r2189, %r2188};
	xor.b64  	%rd2917, %rd2915, %rd2916;
	shf.l.wrap.b32 	%r2190, %r2184, %r2185, 23;
	shf.l.wrap.b32 	%r2191, %r2185, %r2184, 23;
	mov.b64 	%rd2918, {%r2191, %r2190};
	xor.b64  	%rd2919, %rd2917, %rd2918;
	add.s64 	%rd2920, %rd2914, %rd2919;
	add.s64 	%rd2921, %rd2920, -6719396339535248540;
	add.s64 	%rd2922, %rd2921, %rd2785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2192,%dummy}, %rd2896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2193}, %rd2896;
	}
	shf.r.wrap.b32 	%r2194, %r2193, %r2192, 28;
	shf.r.wrap.b32 	%r2195, %r2192, %r2193, 28;
	mov.b64 	%rd2923, {%r2195, %r2194};
	shf.l.wrap.b32 	%r2196, %r2192, %r2193, 30;
	shf.l.wrap.b32 	%r2197, %r2193, %r2192, 30;
	mov.b64 	%rd2924, {%r2197, %r2196};
	xor.b64  	%rd2925, %rd2923, %rd2924;
	shf.l.wrap.b32 	%r2198, %r2192, %r2193, 25;
	shf.l.wrap.b32 	%r2199, %r2193, %r2192, 25;
	mov.b64 	%rd2926, {%r2199, %r2198};
	xor.b64  	%rd2927, %rd2925, %rd2926;
	and.b64  	%rd2928, %rd2896, %rd2859;
	or.b64  	%rd2929, %rd2896, %rd2859;
	and.b64  	%rd2930, %rd2929, %rd2822;
	or.b64  	%rd2931, %rd2930, %rd2928;
	add.s64 	%rd2932, %rd2931, %rd2927;
	add.s64 	%rd2933, %rd2932, %rd2921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2200,%dummy}, %rd2872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2201}, %rd2872;
	}
	shf.r.wrap.b32 	%r2202, %r2201, %r2200, 19;
	shf.r.wrap.b32 	%r2203, %r2200, %r2201, 19;
	mov.b64 	%rd2934, {%r2203, %r2202};
	shf.l.wrap.b32 	%r2204, %r2200, %r2201, 3;
	shf.l.wrap.b32 	%r2205, %r2201, %r2200, 3;
	mov.b64 	%rd2935, {%r2205, %r2204};
	xor.b64  	%rd2936, %rd2934, %rd2935;
	shr.u64 	%rd2937, %rd2872, 6;
	xor.b64  	%rd2938, %rd2936, %rd2937;
	shf.r.wrap.b32 	%r2206, %r1871, %r1870, 1;
	shf.r.wrap.b32 	%r2207, %r1870, %r1871, 1;
	mov.b64 	%rd2939, {%r2207, %r2206};
	shf.r.wrap.b32 	%r2208, %r1871, %r1870, 8;
	shf.r.wrap.b32 	%r2209, %r1870, %r1871, 8;
	mov.b64 	%rd2940, {%r2209, %r2208};
	xor.b64  	%rd2941, %rd2939, %rd2940;
	shr.u64 	%rd2942, %rd2411, 7;
	xor.b64  	%rd2943, %rd2941, %rd2942;
	add.s64 	%rd2944, %rd2938, %rd2380;
	add.s64 	%rd2945, %rd2944, %rd2687;
	add.s64 	%rd2946, %rd2945, %rd2943;
	add.s64 	%rd2947, %rd2946, %rd2811;
	xor.b64  	%rd2948, %rd2885, %rd2848;
	and.b64  	%rd2949, %rd2922, %rd2948;
	xor.b64  	%rd2950, %rd2949, %rd2848;
	add.s64 	%rd2951, %rd2947, %rd2950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd2922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd2922;
	}
	shf.r.wrap.b32 	%r2212, %r2211, %r2210, 14;
	shf.r.wrap.b32 	%r2213, %r2210, %r2211, 14;
	mov.b64 	%rd2952, {%r2213, %r2212};
	shf.r.wrap.b32 	%r2214, %r2211, %r2210, 18;
	shf.r.wrap.b32 	%r2215, %r2210, %r2211, 18;
	mov.b64 	%rd2953, {%r2215, %r2214};
	xor.b64  	%rd2954, %rd2952, %rd2953;
	shf.l.wrap.b32 	%r2216, %r2210, %r2211, 23;
	shf.l.wrap.b32 	%r2217, %r2211, %r2210, 23;
	mov.b64 	%rd2955, {%r2217, %r2216};
	xor.b64  	%rd2956, %rd2954, %rd2955;
	add.s64 	%rd2957, %rd2951, %rd2956;
	add.s64 	%rd2958, %rd2957, -6333637450476146687;
	add.s64 	%rd2959, %rd2958, %rd2822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2218,%dummy}, %rd2933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd2933;
	}
	shf.r.wrap.b32 	%r2220, %r2219, %r2218, 28;
	shf.r.wrap.b32 	%r2221, %r2218, %r2219, 28;
	mov.b64 	%rd2960, {%r2221, %r2220};
	shf.l.wrap.b32 	%r2222, %r2218, %r2219, 30;
	shf.l.wrap.b32 	%r2223, %r2219, %r2218, 30;
	mov.b64 	%rd2961, {%r2223, %r2222};
	xor.b64  	%rd2962, %rd2960, %rd2961;
	shf.l.wrap.b32 	%r2224, %r2218, %r2219, 25;
	shf.l.wrap.b32 	%r2225, %r2219, %r2218, 25;
	mov.b64 	%rd2963, {%r2225, %r2224};
	xor.b64  	%rd2964, %rd2962, %rd2963;
	and.b64  	%rd2965, %rd2933, %rd2896;
	or.b64  	%rd2966, %rd2933, %rd2896;
	and.b64  	%rd2967, %rd2966, %rd2859;
	or.b64  	%rd2968, %rd2967, %rd2965;
	add.s64 	%rd2969, %rd2968, %rd2964;
	add.s64 	%rd2970, %rd2969, %rd2958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2227}, %rd2909;
	}
	shf.r.wrap.b32 	%r2228, %r2227, %r2226, 19;
	shf.r.wrap.b32 	%r2229, %r2226, %r2227, 19;
	mov.b64 	%rd2971, {%r2229, %r2228};
	shf.l.wrap.b32 	%r2230, %r2226, %r2227, 3;
	shf.l.wrap.b32 	%r2231, %r2227, %r2226, 3;
	mov.b64 	%rd2972, {%r2231, %r2230};
	xor.b64  	%rd2973, %rd2971, %rd2972;
	shr.u64 	%rd2974, %rd2909, 6;
	xor.b64  	%rd2975, %rd2973, %rd2974;
	shf.r.wrap.b32 	%r2232, %r1893, %r1892, 1;
	shf.r.wrap.b32 	%r2233, %r1892, %r1893, 1;
	mov.b64 	%rd2976, {%r2233, %r2232};
	shf.r.wrap.b32 	%r2234, %r1893, %r1892, 8;
	shf.r.wrap.b32 	%r2235, %r1892, %r1893, 8;
	mov.b64 	%rd2977, {%r2235, %r2234};
	xor.b64  	%rd2978, %rd2976, %rd2977;
	shr.u64 	%rd2979, %rd2442, 7;
	xor.b64  	%rd2980, %rd2978, %rd2979;
	add.s64 	%rd2981, %rd2975, %rd2411;
	add.s64 	%rd2982, %rd2981, %rd2724;
	add.s64 	%rd2983, %rd2982, %rd2980;
	add.s64 	%rd2984, %rd2983, %rd2848;
	xor.b64  	%rd2985, %rd2922, %rd2885;
	and.b64  	%rd2986, %rd2959, %rd2985;
	xor.b64  	%rd2987, %rd2986, %rd2885;
	add.s64 	%rd2988, %rd2984, %rd2987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2236,%dummy}, %rd2959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2237}, %rd2959;
	}
	shf.r.wrap.b32 	%r2238, %r2237, %r2236, 14;
	shf.r.wrap.b32 	%r2239, %r2236, %r2237, 14;
	mov.b64 	%rd2989, {%r2239, %r2238};
	shf.r.wrap.b32 	%r2240, %r2237, %r2236, 18;
	shf.r.wrap.b32 	%r2241, %r2236, %r2237, 18;
	mov.b64 	%rd2990, {%r2241, %r2240};
	xor.b64  	%rd2991, %rd2989, %rd2990;
	shf.l.wrap.b32 	%r2242, %r2236, %r2237, 23;
	shf.l.wrap.b32 	%r2243, %r2237, %r2236, 23;
	mov.b64 	%rd2992, {%r2243, %r2242};
	xor.b64  	%rd2993, %rd2991, %rd2992;
	add.s64 	%rd2994, %rd2988, %rd2993;
	add.s64 	%rd2995, %rd2994, -4446306890439682159;
	add.s64 	%rd2996, %rd2995, %rd2859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd2970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2245}, %rd2970;
	}
	shf.r.wrap.b32 	%r2246, %r2245, %r2244, 28;
	shf.r.wrap.b32 	%r2247, %r2244, %r2245, 28;
	mov.b64 	%rd2997, {%r2247, %r2246};
	shf.l.wrap.b32 	%r2248, %r2244, %r2245, 30;
	shf.l.wrap.b32 	%r2249, %r2245, %r2244, 30;
	mov.b64 	%rd2998, {%r2249, %r2248};
	xor.b64  	%rd2999, %rd2997, %rd2998;
	shf.l.wrap.b32 	%r2250, %r2244, %r2245, 25;
	shf.l.wrap.b32 	%r2251, %r2245, %r2244, 25;
	mov.b64 	%rd3000, {%r2251, %r2250};
	xor.b64  	%rd3001, %rd2999, %rd3000;
	and.b64  	%rd3002, %rd2970, %rd2933;
	or.b64  	%rd3003, %rd2970, %rd2933;
	and.b64  	%rd3004, %rd3003, %rd2896;
	or.b64  	%rd3005, %rd3004, %rd3002;
	add.s64 	%rd3006, %rd3005, %rd3001;
	add.s64 	%rd3007, %rd3006, %rd2995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2252,%dummy}, %rd2946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2253}, %rd2946;
	}
	shf.r.wrap.b32 	%r2254, %r2253, %r2252, 19;
	shf.r.wrap.b32 	%r2255, %r2252, %r2253, 19;
	mov.b64 	%rd3008, {%r2255, %r2254};
	shf.l.wrap.b32 	%r2256, %r2252, %r2253, 3;
	shf.l.wrap.b32 	%r2257, %r2253, %r2252, 3;
	mov.b64 	%rd3009, {%r2257, %r2256};
	xor.b64  	%rd3010, %rd3008, %rd3009;
	shr.u64 	%rd3011, %rd2946, 6;
	xor.b64  	%rd3012, %rd3010, %rd3011;
	shf.r.wrap.b32 	%r2258, %r1915, %r1914, 1;
	shf.r.wrap.b32 	%r2259, %r1914, %r1915, 1;
	mov.b64 	%rd3013, {%r2259, %r2258};
	shf.r.wrap.b32 	%r2260, %r1915, %r1914, 8;
	shf.r.wrap.b32 	%r2261, %r1914, %r1915, 8;
	mov.b64 	%rd3014, {%r2261, %r2260};
	xor.b64  	%rd3015, %rd3013, %rd3014;
	shr.u64 	%rd3016, %rd2473, 7;
	xor.b64  	%rd3017, %rd3015, %rd3016;
	add.s64 	%rd3018, %rd3012, %rd2442;
	add.s64 	%rd3019, %rd3018, %rd2761;
	add.s64 	%rd3020, %rd3019, %rd3017;
	add.s64 	%rd3021, %rd3020, %rd2885;
	xor.b64  	%rd3022, %rd2959, %rd2922;
	and.b64  	%rd3023, %rd2996, %rd3022;
	xor.b64  	%rd3024, %rd3023, %rd2922;
	add.s64 	%rd3025, %rd3021, %rd3024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2262,%dummy}, %rd2996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2263}, %rd2996;
	}
	shf.r.wrap.b32 	%r2264, %r2263, %r2262, 14;
	shf.r.wrap.b32 	%r2265, %r2262, %r2263, 14;
	mov.b64 	%rd3026, {%r2265, %r2264};
	shf.r.wrap.b32 	%r2266, %r2263, %r2262, 18;
	shf.r.wrap.b32 	%r2267, %r2262, %r2263, 18;
	mov.b64 	%rd3027, {%r2267, %r2266};
	xor.b64  	%rd3028, %rd3026, %rd3027;
	shf.l.wrap.b32 	%r2268, %r2262, %r2263, 23;
	shf.l.wrap.b32 	%r2269, %r2263, %r2262, 23;
	mov.b64 	%rd3029, {%r2269, %r2268};
	xor.b64  	%rd3030, %rd3028, %rd3029;
	add.s64 	%rd3031, %rd3025, %rd3030;
	add.s64 	%rd3032, %rd3031, -4076793802049405392;
	add.s64 	%rd3033, %rd3032, %rd2896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd3007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd3007;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 28;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 28;
	mov.b64 	%rd3034, {%r2273, %r2272};
	shf.l.wrap.b32 	%r2274, %r2270, %r2271, 30;
	shf.l.wrap.b32 	%r2275, %r2271, %r2270, 30;
	mov.b64 	%rd3035, {%r2275, %r2274};
	xor.b64  	%rd3036, %rd3034, %rd3035;
	shf.l.wrap.b32 	%r2276, %r2270, %r2271, 25;
	shf.l.wrap.b32 	%r2277, %r2271, %r2270, 25;
	mov.b64 	%rd3037, {%r2277, %r2276};
	xor.b64  	%rd3038, %rd3036, %rd3037;
	and.b64  	%rd3039, %rd3007, %rd2970;
	or.b64  	%rd3040, %rd3007, %rd2970;
	and.b64  	%rd3041, %rd3040, %rd2933;
	or.b64  	%rd3042, %rd3041, %rd3039;
	add.s64 	%rd3043, %rd3042, %rd3038;
	add.s64 	%rd3044, %rd3043, %rd3032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd2983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd2983;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 19;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 19;
	mov.b64 	%rd3045, {%r2281, %r2280};
	shf.l.wrap.b32 	%r2282, %r2278, %r2279, 3;
	shf.l.wrap.b32 	%r2283, %r2279, %r2278, 3;
	mov.b64 	%rd3046, {%r2283, %r2282};
	xor.b64  	%rd3047, %rd3045, %rd3046;
	shr.u64 	%rd3048, %rd2983, 6;
	xor.b64  	%rd3049, %rd3047, %rd3048;
	shf.r.wrap.b32 	%r2284, %r1941, %r1940, 1;
	shf.r.wrap.b32 	%r2285, %r1940, %r1941, 1;
	mov.b64 	%rd3050, {%r2285, %r2284};
	shf.r.wrap.b32 	%r2286, %r1941, %r1940, 8;
	shf.r.wrap.b32 	%r2287, %r1940, %r1941, 8;
	mov.b64 	%rd3051, {%r2287, %r2286};
	xor.b64  	%rd3052, %rd3050, %rd3051;
	shr.u64 	%rd3053, %rd2504, 7;
	xor.b64  	%rd3054, %rd3052, %rd3053;
	add.s64 	%rd3055, %rd3049, %rd2473;
	add.s64 	%rd3056, %rd3055, %rd2798;
	add.s64 	%rd3057, %rd3056, %rd3054;
	add.s64 	%rd3058, %rd3057, %rd2922;
	xor.b64  	%rd3059, %rd2996, %rd2959;
	and.b64  	%rd3060, %rd3033, %rd3059;
	xor.b64  	%rd3061, %rd3060, %rd2959;
	add.s64 	%rd3062, %rd3058, %rd3061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2288,%dummy}, %rd3033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2289}, %rd3033;
	}
	shf.r.wrap.b32 	%r2290, %r2289, %r2288, 14;
	shf.r.wrap.b32 	%r2291, %r2288, %r2289, 14;
	mov.b64 	%rd3063, {%r2291, %r2290};
	shf.r.wrap.b32 	%r2292, %r2289, %r2288, 18;
	shf.r.wrap.b32 	%r2293, %r2288, %r2289, 18;
	mov.b64 	%rd3064, {%r2293, %r2292};
	xor.b64  	%rd3065, %rd3063, %rd3064;
	shf.l.wrap.b32 	%r2294, %r2288, %r2289, 23;
	shf.l.wrap.b32 	%r2295, %r2289, %r2288, 23;
	mov.b64 	%rd3066, {%r2295, %r2294};
	xor.b64  	%rd3067, %rd3065, %rd3066;
	add.s64 	%rd3068, %rd3062, %rd3067;
	add.s64 	%rd3069, %rd3068, -3345356375505022440;
	add.s64 	%rd3070, %rd3069, %rd2933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2296,%dummy}, %rd3044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2297}, %rd3044;
	}
	shf.r.wrap.b32 	%r2298, %r2297, %r2296, 28;
	shf.r.wrap.b32 	%r2299, %r2296, %r2297, 28;
	mov.b64 	%rd3071, {%r2299, %r2298};
	shf.l.wrap.b32 	%r2300, %r2296, %r2297, 30;
	shf.l.wrap.b32 	%r2301, %r2297, %r2296, 30;
	mov.b64 	%rd3072, {%r2301, %r2300};
	xor.b64  	%rd3073, %rd3071, %rd3072;
	shf.l.wrap.b32 	%r2302, %r2296, %r2297, 25;
	shf.l.wrap.b32 	%r2303, %r2297, %r2296, 25;
	mov.b64 	%rd3074, {%r2303, %r2302};
	xor.b64  	%rd3075, %rd3073, %rd3074;
	and.b64  	%rd3076, %rd3044, %rd3007;
	or.b64  	%rd3077, %rd3044, %rd3007;
	and.b64  	%rd3078, %rd3077, %rd2970;
	or.b64  	%rd3079, %rd3078, %rd3076;
	add.s64 	%rd3080, %rd3079, %rd3075;
	add.s64 	%rd3081, %rd3080, %rd3069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2304,%dummy}, %rd3020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2305}, %rd3020;
	}
	shf.r.wrap.b32 	%r2306, %r2305, %r2304, 19;
	shf.r.wrap.b32 	%r2307, %r2304, %r2305, 19;
	mov.b64 	%rd3082, {%r2307, %r2306};
	shf.l.wrap.b32 	%r2308, %r2304, %r2305, 3;
	shf.l.wrap.b32 	%r2309, %r2305, %r2304, 3;
	mov.b64 	%rd3083, {%r2309, %r2308};
	xor.b64  	%rd3084, %rd3082, %rd3083;
	shr.u64 	%rd3085, %rd3020, 6;
	xor.b64  	%rd3086, %rd3084, %rd3085;
	shf.r.wrap.b32 	%r2310, %r1967, %r1966, 1;
	shf.r.wrap.b32 	%r2311, %r1966, %r1967, 1;
	mov.b64 	%rd3087, {%r2311, %r2310};
	shf.r.wrap.b32 	%r2312, %r1967, %r1966, 8;
	shf.r.wrap.b32 	%r2313, %r1966, %r1967, 8;
	mov.b64 	%rd3088, {%r2313, %r2312};
	xor.b64  	%rd3089, %rd3087, %rd3088;
	shr.u64 	%rd3090, %rd2539, 7;
	xor.b64  	%rd3091, %rd3089, %rd3090;
	add.s64 	%rd3092, %rd3086, %rd2504;
	add.s64 	%rd3093, %rd3092, %rd2835;
	add.s64 	%rd3094, %rd3093, %rd3091;
	add.s64 	%rd3095, %rd3094, %rd2959;
	xor.b64  	%rd3096, %rd3033, %rd2996;
	and.b64  	%rd3097, %rd3070, %rd3096;
	xor.b64  	%rd3098, %rd3097, %rd2996;
	add.s64 	%rd3099, %rd3095, %rd3098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2314,%dummy}, %rd3070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2315}, %rd3070;
	}
	shf.r.wrap.b32 	%r2316, %r2315, %r2314, 14;
	shf.r.wrap.b32 	%r2317, %r2314, %r2315, 14;
	mov.b64 	%rd3100, {%r2317, %r2316};
	shf.r.wrap.b32 	%r2318, %r2315, %r2314, 18;
	shf.r.wrap.b32 	%r2319, %r2314, %r2315, 18;
	mov.b64 	%rd3101, {%r2319, %r2318};
	xor.b64  	%rd3102, %rd3100, %rd3101;
	shf.l.wrap.b32 	%r2320, %r2314, %r2315, 23;
	shf.l.wrap.b32 	%r2321, %r2315, %r2314, 23;
	mov.b64 	%rd3103, {%r2321, %r2320};
	xor.b64  	%rd3104, %rd3102, %rd3103;
	add.s64 	%rd3105, %rd3099, %rd3104;
	add.s64 	%rd3106, %rd3105, -2983346525034927856;
	add.s64 	%rd3107, %rd3106, %rd2970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2322,%dummy}, %rd3081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2323}, %rd3081;
	}
	shf.r.wrap.b32 	%r2324, %r2323, %r2322, 28;
	shf.r.wrap.b32 	%r2325, %r2322, %r2323, 28;
	mov.b64 	%rd3108, {%r2325, %r2324};
	shf.l.wrap.b32 	%r2326, %r2322, %r2323, 30;
	shf.l.wrap.b32 	%r2327, %r2323, %r2322, 30;
	mov.b64 	%rd3109, {%r2327, %r2326};
	xor.b64  	%rd3110, %rd3108, %rd3109;
	shf.l.wrap.b32 	%r2328, %r2322, %r2323, 25;
	shf.l.wrap.b32 	%r2329, %r2323, %r2322, 25;
	mov.b64 	%rd3111, {%r2329, %r2328};
	xor.b64  	%rd3112, %rd3110, %rd3111;
	and.b64  	%rd3113, %rd3081, %rd3044;
	or.b64  	%rd3114, %rd3081, %rd3044;
	and.b64  	%rd3115, %rd3114, %rd3007;
	or.b64  	%rd3116, %rd3115, %rd3113;
	add.s64 	%rd3117, %rd3116, %rd3112;
	add.s64 	%rd3118, %rd3117, %rd3106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2330,%dummy}, %rd3057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2331}, %rd3057;
	}
	shf.r.wrap.b32 	%r2332, %r2331, %r2330, 19;
	shf.r.wrap.b32 	%r2333, %r2330, %r2331, 19;
	mov.b64 	%rd3119, {%r2333, %r2332};
	shf.l.wrap.b32 	%r2334, %r2330, %r2331, 3;
	shf.l.wrap.b32 	%r2335, %r2331, %r2330, 3;
	mov.b64 	%rd3120, {%r2335, %r2334};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	shr.u64 	%rd3122, %rd3057, 6;
	xor.b64  	%rd3123, %rd3121, %rd3122;
	shf.r.wrap.b32 	%r2336, %r1993, %r1992, 1;
	shf.r.wrap.b32 	%r2337, %r1992, %r1993, 1;
	mov.b64 	%rd3124, {%r2337, %r2336};
	shf.r.wrap.b32 	%r2338, %r1993, %r1992, 8;
	shf.r.wrap.b32 	%r2339, %r1992, %r1993, 8;
	mov.b64 	%rd3125, {%r2339, %r2338};
	xor.b64  	%rd3126, %rd3124, %rd3125;
	shr.u64 	%rd3127, %rd2576, 7;
	xor.b64  	%rd3128, %rd3126, %rd3127;
	add.s64 	%rd3129, %rd3123, %rd2539;
	add.s64 	%rd3130, %rd3129, %rd2872;
	add.s64 	%rd3131, %rd3130, %rd3128;
	add.s64 	%rd3132, %rd3131, %rd2996;
	xor.b64  	%rd3133, %rd3070, %rd3033;
	and.b64  	%rd3134, %rd3107, %rd3133;
	xor.b64  	%rd3135, %rd3134, %rd3033;
	add.s64 	%rd3136, %rd3132, %rd3135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2340,%dummy}, %rd3107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2341}, %rd3107;
	}
	shf.r.wrap.b32 	%r2342, %r2341, %r2340, 14;
	shf.r.wrap.b32 	%r2343, %r2340, %r2341, 14;
	mov.b64 	%rd3137, {%r2343, %r2342};
	shf.r.wrap.b32 	%r2344, %r2341, %r2340, 18;
	shf.r.wrap.b32 	%r2345, %r2340, %r2341, 18;
	mov.b64 	%rd3138, {%r2345, %r2344};
	xor.b64  	%rd3139, %rd3137, %rd3138;
	shf.l.wrap.b32 	%r2346, %r2340, %r2341, 23;
	shf.l.wrap.b32 	%r2347, %r2341, %r2340, 23;
	mov.b64 	%rd3140, {%r2347, %r2346};
	xor.b64  	%rd3141, %rd3139, %rd3140;
	add.s64 	%rd3142, %rd3136, %rd3141;
	add.s64 	%rd3143, %rd3142, -860691631967231958;
	add.s64 	%rd3144, %rd3143, %rd3007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2348,%dummy}, %rd3118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd3118;
	}
	shf.r.wrap.b32 	%r2350, %r2349, %r2348, 28;
	shf.r.wrap.b32 	%r2351, %r2348, %r2349, 28;
	mov.b64 	%rd3145, {%r2351, %r2350};
	shf.l.wrap.b32 	%r2352, %r2348, %r2349, 30;
	shf.l.wrap.b32 	%r2353, %r2349, %r2348, 30;
	mov.b64 	%rd3146, {%r2353, %r2352};
	xor.b64  	%rd3147, %rd3145, %rd3146;
	shf.l.wrap.b32 	%r2354, %r2348, %r2349, 25;
	shf.l.wrap.b32 	%r2355, %r2349, %r2348, 25;
	mov.b64 	%rd3148, {%r2355, %r2354};
	xor.b64  	%rd3149, %rd3147, %rd3148;
	and.b64  	%rd3150, %rd3118, %rd3081;
	or.b64  	%rd3151, %rd3118, %rd3081;
	and.b64  	%rd3152, %rd3151, %rd3044;
	or.b64  	%rd3153, %rd3152, %rd3150;
	add.s64 	%rd3154, %rd3153, %rd3149;
	add.s64 	%rd3155, %rd3154, %rd3143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd3094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd3094;
	}
	shf.r.wrap.b32 	%r2358, %r2357, %r2356, 19;
	shf.r.wrap.b32 	%r2359, %r2356, %r2357, 19;
	mov.b64 	%rd3156, {%r2359, %r2358};
	shf.l.wrap.b32 	%r2360, %r2356, %r2357, 3;
	shf.l.wrap.b32 	%r2361, %r2357, %r2356, 3;
	mov.b64 	%rd3157, {%r2361, %r2360};
	xor.b64  	%rd3158, %rd3156, %rd3157;
	shr.u64 	%rd3159, %rd3094, 6;
	xor.b64  	%rd3160, %rd3158, %rd3159;
	shf.r.wrap.b32 	%r2362, %r2019, %r2018, 1;
	shf.r.wrap.b32 	%r2363, %r2018, %r2019, 1;
	mov.b64 	%rd3161, {%r2363, %r2362};
	shf.r.wrap.b32 	%r2364, %r2019, %r2018, 8;
	shf.r.wrap.b32 	%r2365, %r2018, %r2019, 8;
	mov.b64 	%rd3162, {%r2365, %r2364};
	xor.b64  	%rd3163, %rd3161, %rd3162;
	shr.u64 	%rd3164, %rd2613, 7;
	xor.b64  	%rd3165, %rd3163, %rd3164;
	add.s64 	%rd3166, %rd3160, %rd2576;
	add.s64 	%rd3167, %rd3166, %rd2909;
	add.s64 	%rd3168, %rd3167, %rd3165;
	add.s64 	%rd3169, %rd3168, %rd3033;
	xor.b64  	%rd3170, %rd3107, %rd3070;
	and.b64  	%rd3171, %rd3144, %rd3170;
	xor.b64  	%rd3172, %rd3171, %rd3070;
	add.s64 	%rd3173, %rd3169, %rd3172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd3144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2367}, %rd3144;
	}
	shf.r.wrap.b32 	%r2368, %r2367, %r2366, 14;
	shf.r.wrap.b32 	%r2369, %r2366, %r2367, 14;
	mov.b64 	%rd3174, {%r2369, %r2368};
	shf.r.wrap.b32 	%r2370, %r2367, %r2366, 18;
	shf.r.wrap.b32 	%r2371, %r2366, %r2367, 18;
	mov.b64 	%rd3175, {%r2371, %r2370};
	xor.b64  	%rd3176, %rd3174, %rd3175;
	shf.l.wrap.b32 	%r2372, %r2366, %r2367, 23;
	shf.l.wrap.b32 	%r2373, %r2367, %r2366, 23;
	mov.b64 	%rd3177, {%r2373, %r2372};
	xor.b64  	%rd3178, %rd3176, %rd3177;
	add.s64 	%rd3179, %rd3173, %rd3178;
	add.s64 	%rd3180, %rd3179, 1182934255886127544;
	add.s64 	%rd3181, %rd3180, %rd3044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2374,%dummy}, %rd3155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2375}, %rd3155;
	}
	shf.r.wrap.b32 	%r2376, %r2375, %r2374, 28;
	shf.r.wrap.b32 	%r2377, %r2374, %r2375, 28;
	mov.b64 	%rd3182, {%r2377, %r2376};
	shf.l.wrap.b32 	%r2378, %r2374, %r2375, 30;
	shf.l.wrap.b32 	%r2379, %r2375, %r2374, 30;
	mov.b64 	%rd3183, {%r2379, %r2378};
	xor.b64  	%rd3184, %rd3182, %rd3183;
	shf.l.wrap.b32 	%r2380, %r2374, %r2375, 25;
	shf.l.wrap.b32 	%r2381, %r2375, %r2374, 25;
	mov.b64 	%rd3185, {%r2381, %r2380};
	xor.b64  	%rd3186, %rd3184, %rd3185;
	and.b64  	%rd3187, %rd3155, %rd3118;
	or.b64  	%rd3188, %rd3155, %rd3118;
	and.b64  	%rd3189, %rd3188, %rd3081;
	or.b64  	%rd3190, %rd3189, %rd3187;
	add.s64 	%rd3191, %rd3190, %rd3186;
	add.s64 	%rd3192, %rd3191, %rd3180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2382,%dummy}, %rd3131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2383}, %rd3131;
	}
	shf.r.wrap.b32 	%r2384, %r2383, %r2382, 19;
	shf.r.wrap.b32 	%r2385, %r2382, %r2383, 19;
	mov.b64 	%rd3193, {%r2385, %r2384};
	shf.l.wrap.b32 	%r2386, %r2382, %r2383, 3;
	shf.l.wrap.b32 	%r2387, %r2383, %r2382, 3;
	mov.b64 	%rd3194, {%r2387, %r2386};
	xor.b64  	%rd3195, %rd3193, %rd3194;
	shr.u64 	%rd3196, %rd3131, 6;
	xor.b64  	%rd3197, %rd3195, %rd3196;
	shf.r.wrap.b32 	%r2388, %r2045, %r2044, 1;
	shf.r.wrap.b32 	%r2389, %r2044, %r2045, 1;
	mov.b64 	%rd3198, {%r2389, %r2388};
	shf.r.wrap.b32 	%r2390, %r2045, %r2044, 8;
	shf.r.wrap.b32 	%r2391, %r2044, %r2045, 8;
	mov.b64 	%rd3199, {%r2391, %r2390};
	xor.b64  	%rd3200, %rd3198, %rd3199;
	shr.u64 	%rd3201, %rd2650, 7;
	xor.b64  	%rd3202, %rd3200, %rd3201;
	add.s64 	%rd3203, %rd3197, %rd2613;
	add.s64 	%rd3204, %rd3203, %rd2946;
	add.s64 	%rd3205, %rd3204, %rd3202;
	add.s64 	%rd3206, %rd3205, %rd3070;
	xor.b64  	%rd3207, %rd3144, %rd3107;
	and.b64  	%rd3208, %rd3181, %rd3207;
	xor.b64  	%rd3209, %rd3208, %rd3107;
	add.s64 	%rd3210, %rd3206, %rd3209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2392,%dummy}, %rd3181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2393}, %rd3181;
	}
	shf.r.wrap.b32 	%r2394, %r2393, %r2392, 14;
	shf.r.wrap.b32 	%r2395, %r2392, %r2393, 14;
	mov.b64 	%rd3211, {%r2395, %r2394};
	shf.r.wrap.b32 	%r2396, %r2393, %r2392, 18;
	shf.r.wrap.b32 	%r2397, %r2392, %r2393, 18;
	mov.b64 	%rd3212, {%r2397, %r2396};
	xor.b64  	%rd3213, %rd3211, %rd3212;
	shf.l.wrap.b32 	%r2398, %r2392, %r2393, 23;
	shf.l.wrap.b32 	%r2399, %r2393, %r2392, 23;
	mov.b64 	%rd3214, {%r2399, %r2398};
	xor.b64  	%rd3215, %rd3213, %rd3214;
	add.s64 	%rd3216, %rd3210, %rd3215;
	add.s64 	%rd3217, %rd3216, 1847814050463011016;
	add.s64 	%rd3218, %rd3217, %rd3081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2400,%dummy}, %rd3192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd3192;
	}
	shf.r.wrap.b32 	%r2402, %r2401, %r2400, 28;
	shf.r.wrap.b32 	%r2403, %r2400, %r2401, 28;
	mov.b64 	%rd3219, {%r2403, %r2402};
	shf.l.wrap.b32 	%r2404, %r2400, %r2401, 30;
	shf.l.wrap.b32 	%r2405, %r2401, %r2400, 30;
	mov.b64 	%rd3220, {%r2405, %r2404};
	xor.b64  	%rd3221, %rd3219, %rd3220;
	shf.l.wrap.b32 	%r2406, %r2400, %r2401, 25;
	shf.l.wrap.b32 	%r2407, %r2401, %r2400, 25;
	mov.b64 	%rd3222, {%r2407, %r2406};
	xor.b64  	%rd3223, %rd3221, %rd3222;
	and.b64  	%rd3224, %rd3192, %rd3155;
	or.b64  	%rd3225, %rd3192, %rd3155;
	and.b64  	%rd3226, %rd3225, %rd3118;
	or.b64  	%rd3227, %rd3226, %rd3224;
	add.s64 	%rd3228, %rd3227, %rd3223;
	add.s64 	%rd3229, %rd3228, %rd3217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2408,%dummy}, %rd3168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2409}, %rd3168;
	}
	shf.r.wrap.b32 	%r2410, %r2409, %r2408, 19;
	shf.r.wrap.b32 	%r2411, %r2408, %r2409, 19;
	mov.b64 	%rd3230, {%r2411, %r2410};
	shf.l.wrap.b32 	%r2412, %r2408, %r2409, 3;
	shf.l.wrap.b32 	%r2413, %r2409, %r2408, 3;
	mov.b64 	%rd3231, {%r2413, %r2412};
	xor.b64  	%rd3232, %rd3230, %rd3231;
	shr.u64 	%rd3233, %rd3168, 6;
	xor.b64  	%rd3234, %rd3232, %rd3233;
	shf.r.wrap.b32 	%r2414, %r2071, %r2070, 1;
	shf.r.wrap.b32 	%r2415, %r2070, %r2071, 1;
	mov.b64 	%rd3235, {%r2415, %r2414};
	shf.r.wrap.b32 	%r2416, %r2071, %r2070, 8;
	shf.r.wrap.b32 	%r2417, %r2070, %r2071, 8;
	mov.b64 	%rd3236, {%r2417, %r2416};
	xor.b64  	%rd3237, %rd3235, %rd3236;
	shr.u64 	%rd3238, %rd2687, 7;
	xor.b64  	%rd3239, %rd3237, %rd3238;
	add.s64 	%rd3240, %rd3234, %rd2650;
	add.s64 	%rd3241, %rd3240, %rd2983;
	add.s64 	%rd3242, %rd3241, %rd3239;
	add.s64 	%rd3243, %rd3242, %rd3107;
	xor.b64  	%rd3244, %rd3181, %rd3144;
	and.b64  	%rd3245, %rd3218, %rd3244;
	xor.b64  	%rd3246, %rd3245, %rd3144;
	add.s64 	%rd3247, %rd3243, %rd3246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2418,%dummy}, %rd3218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2419}, %rd3218;
	}
	shf.r.wrap.b32 	%r2420, %r2419, %r2418, 14;
	shf.r.wrap.b32 	%r2421, %r2418, %r2419, 14;
	mov.b64 	%rd3248, {%r2421, %r2420};
	shf.r.wrap.b32 	%r2422, %r2419, %r2418, 18;
	shf.r.wrap.b32 	%r2423, %r2418, %r2419, 18;
	mov.b64 	%rd3249, {%r2423, %r2422};
	xor.b64  	%rd3250, %rd3248, %rd3249;
	shf.l.wrap.b32 	%r2424, %r2418, %r2419, 23;
	shf.l.wrap.b32 	%r2425, %r2419, %r2418, 23;
	mov.b64 	%rd3251, {%r2425, %r2424};
	xor.b64  	%rd3252, %rd3250, %rd3251;
	add.s64 	%rd3253, %rd3247, %rd3252;
	add.s64 	%rd3254, %rd3253, 2177327727835720531;
	add.s64 	%rd3255, %rd3254, %rd3118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2426,%dummy}, %rd3229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2427}, %rd3229;
	}
	shf.r.wrap.b32 	%r2428, %r2427, %r2426, 28;
	shf.r.wrap.b32 	%r2429, %r2426, %r2427, 28;
	mov.b64 	%rd3256, {%r2429, %r2428};
	shf.l.wrap.b32 	%r2430, %r2426, %r2427, 30;
	shf.l.wrap.b32 	%r2431, %r2427, %r2426, 30;
	mov.b64 	%rd3257, {%r2431, %r2430};
	xor.b64  	%rd3258, %rd3256, %rd3257;
	shf.l.wrap.b32 	%r2432, %r2426, %r2427, 25;
	shf.l.wrap.b32 	%r2433, %r2427, %r2426, 25;
	mov.b64 	%rd3259, {%r2433, %r2432};
	xor.b64  	%rd3260, %rd3258, %rd3259;
	and.b64  	%rd3261, %rd3229, %rd3192;
	or.b64  	%rd3262, %rd3229, %rd3192;
	and.b64  	%rd3263, %rd3262, %rd3155;
	or.b64  	%rd3264, %rd3263, %rd3261;
	add.s64 	%rd3265, %rd3264, %rd3260;
	add.s64 	%rd3266, %rd3265, %rd3254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2434,%dummy}, %rd3205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2435}, %rd3205;
	}
	shf.r.wrap.b32 	%r2436, %r2435, %r2434, 19;
	shf.r.wrap.b32 	%r2437, %r2434, %r2435, 19;
	mov.b64 	%rd3267, {%r2437, %r2436};
	shf.l.wrap.b32 	%r2438, %r2434, %r2435, 3;
	shf.l.wrap.b32 	%r2439, %r2435, %r2434, 3;
	mov.b64 	%rd3268, {%r2439, %r2438};
	xor.b64  	%rd3269, %rd3267, %rd3268;
	shr.u64 	%rd3270, %rd3205, 6;
	xor.b64  	%rd3271, %rd3269, %rd3270;
	shf.r.wrap.b32 	%r2440, %r2097, %r2096, 1;
	shf.r.wrap.b32 	%r2441, %r2096, %r2097, 1;
	mov.b64 	%rd3272, {%r2441, %r2440};
	shf.r.wrap.b32 	%r2442, %r2097, %r2096, 8;
	shf.r.wrap.b32 	%r2443, %r2096, %r2097, 8;
	mov.b64 	%rd3273, {%r2443, %r2442};
	xor.b64  	%rd3274, %rd3272, %rd3273;
	shr.u64 	%rd3275, %rd2724, 7;
	xor.b64  	%rd3276, %rd3274, %rd3275;
	add.s64 	%rd3277, %rd3271, %rd2687;
	add.s64 	%rd3278, %rd3277, %rd3020;
	add.s64 	%rd3279, %rd3278, %rd3276;
	add.s64 	%rd3280, %rd3279, %rd3144;
	xor.b64  	%rd3281, %rd3218, %rd3181;
	and.b64  	%rd3282, %rd3255, %rd3281;
	xor.b64  	%rd3283, %rd3282, %rd3181;
	add.s64 	%rd3284, %rd3280, %rd3283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2444,%dummy}, %rd3255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2445}, %rd3255;
	}
	shf.r.wrap.b32 	%r2446, %r2445, %r2444, 14;
	shf.r.wrap.b32 	%r2447, %r2444, %r2445, 14;
	mov.b64 	%rd3285, {%r2447, %r2446};
	shf.r.wrap.b32 	%r2448, %r2445, %r2444, 18;
	shf.r.wrap.b32 	%r2449, %r2444, %r2445, 18;
	mov.b64 	%rd3286, {%r2449, %r2448};
	xor.b64  	%rd3287, %rd3285, %rd3286;
	shf.l.wrap.b32 	%r2450, %r2444, %r2445, 23;
	shf.l.wrap.b32 	%r2451, %r2445, %r2444, 23;
	mov.b64 	%rd3288, {%r2451, %r2450};
	xor.b64  	%rd3289, %rd3287, %rd3288;
	add.s64 	%rd3290, %rd3284, %rd3289;
	add.s64 	%rd3291, %rd3290, 2830643537854262169;
	add.s64 	%rd3292, %rd3291, %rd3155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2452,%dummy}, %rd3266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd3266;
	}
	shf.r.wrap.b32 	%r2454, %r2453, %r2452, 28;
	shf.r.wrap.b32 	%r2455, %r2452, %r2453, 28;
	mov.b64 	%rd3293, {%r2455, %r2454};
	shf.l.wrap.b32 	%r2456, %r2452, %r2453, 30;
	shf.l.wrap.b32 	%r2457, %r2453, %r2452, 30;
	mov.b64 	%rd3294, {%r2457, %r2456};
	xor.b64  	%rd3295, %rd3293, %rd3294;
	shf.l.wrap.b32 	%r2458, %r2452, %r2453, 25;
	shf.l.wrap.b32 	%r2459, %r2453, %r2452, 25;
	mov.b64 	%rd3296, {%r2459, %r2458};
	xor.b64  	%rd3297, %rd3295, %rd3296;
	and.b64  	%rd3298, %rd3266, %rd3229;
	or.b64  	%rd3299, %rd3266, %rd3229;
	and.b64  	%rd3300, %rd3299, %rd3192;
	or.b64  	%rd3301, %rd3300, %rd3298;
	add.s64 	%rd3302, %rd3301, %rd3297;
	add.s64 	%rd3303, %rd3302, %rd3291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2460,%dummy}, %rd3242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd3242;
	}
	shf.r.wrap.b32 	%r2462, %r2461, %r2460, 19;
	shf.r.wrap.b32 	%r2463, %r2460, %r2461, 19;
	mov.b64 	%rd3304, {%r2463, %r2462};
	shf.l.wrap.b32 	%r2464, %r2460, %r2461, 3;
	shf.l.wrap.b32 	%r2465, %r2461, %r2460, 3;
	mov.b64 	%rd3305, {%r2465, %r2464};
	xor.b64  	%rd3306, %rd3304, %rd3305;
	shr.u64 	%rd3307, %rd3242, 6;
	xor.b64  	%rd3308, %rd3306, %rd3307;
	shf.r.wrap.b32 	%r2466, %r2123, %r2122, 1;
	shf.r.wrap.b32 	%r2467, %r2122, %r2123, 1;
	mov.b64 	%rd3309, {%r2467, %r2466};
	shf.r.wrap.b32 	%r2468, %r2123, %r2122, 8;
	shf.r.wrap.b32 	%r2469, %r2122, %r2123, 8;
	mov.b64 	%rd3310, {%r2469, %r2468};
	xor.b64  	%rd3311, %rd3309, %rd3310;
	shr.u64 	%rd3312, %rd2761, 7;
	xor.b64  	%rd3313, %rd3311, %rd3312;
	add.s64 	%rd3314, %rd3308, %rd2724;
	add.s64 	%rd3315, %rd3314, %rd3057;
	add.s64 	%rd3316, %rd3315, %rd3313;
	add.s64 	%rd3317, %rd3316, %rd3181;
	xor.b64  	%rd3318, %rd3255, %rd3218;
	and.b64  	%rd3319, %rd3292, %rd3318;
	xor.b64  	%rd3320, %rd3319, %rd3218;
	add.s64 	%rd3321, %rd3317, %rd3320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2470,%dummy}, %rd3292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2471}, %rd3292;
	}
	shf.r.wrap.b32 	%r2472, %r2471, %r2470, 14;
	shf.r.wrap.b32 	%r2473, %r2470, %r2471, 14;
	mov.b64 	%rd3322, {%r2473, %r2472};
	shf.r.wrap.b32 	%r2474, %r2471, %r2470, 18;
	shf.r.wrap.b32 	%r2475, %r2470, %r2471, 18;
	mov.b64 	%rd3323, {%r2475, %r2474};
	xor.b64  	%rd3324, %rd3322, %rd3323;
	shf.l.wrap.b32 	%r2476, %r2470, %r2471, 23;
	shf.l.wrap.b32 	%r2477, %r2471, %r2470, 23;
	mov.b64 	%rd3325, {%r2477, %r2476};
	xor.b64  	%rd3326, %rd3324, %rd3325;
	add.s64 	%rd3327, %rd3321, %rd3326;
	add.s64 	%rd3328, %rd3327, 3796741975233480872;
	add.s64 	%rd3329, %rd3328, %rd3192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2478,%dummy}, %rd3303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2479}, %rd3303;
	}
	shf.r.wrap.b32 	%r2480, %r2479, %r2478, 28;
	shf.r.wrap.b32 	%r2481, %r2478, %r2479, 28;
	mov.b64 	%rd3330, {%r2481, %r2480};
	shf.l.wrap.b32 	%r2482, %r2478, %r2479, 30;
	shf.l.wrap.b32 	%r2483, %r2479, %r2478, 30;
	mov.b64 	%rd3331, {%r2483, %r2482};
	xor.b64  	%rd3332, %rd3330, %rd3331;
	shf.l.wrap.b32 	%r2484, %r2478, %r2479, 25;
	shf.l.wrap.b32 	%r2485, %r2479, %r2478, 25;
	mov.b64 	%rd3333, {%r2485, %r2484};
	xor.b64  	%rd3334, %rd3332, %rd3333;
	and.b64  	%rd3335, %rd3303, %rd3266;
	or.b64  	%rd3336, %rd3303, %rd3266;
	and.b64  	%rd3337, %rd3336, %rd3229;
	or.b64  	%rd3338, %rd3337, %rd3335;
	add.s64 	%rd3339, %rd3338, %rd3334;
	add.s64 	%rd3340, %rd3339, %rd3328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2486,%dummy}, %rd3279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2487}, %rd3279;
	}
	shf.r.wrap.b32 	%r2488, %r2487, %r2486, 19;
	shf.r.wrap.b32 	%r2489, %r2486, %r2487, 19;
	mov.b64 	%rd3341, {%r2489, %r2488};
	shf.l.wrap.b32 	%r2490, %r2486, %r2487, 3;
	shf.l.wrap.b32 	%r2491, %r2487, %r2486, 3;
	mov.b64 	%rd3342, {%r2491, %r2490};
	xor.b64  	%rd3343, %rd3341, %rd3342;
	shr.u64 	%rd3344, %rd3279, 6;
	xor.b64  	%rd3345, %rd3343, %rd3344;
	shf.r.wrap.b32 	%r2492, %r2149, %r2148, 1;
	shf.r.wrap.b32 	%r2493, %r2148, %r2149, 1;
	mov.b64 	%rd3346, {%r2493, %r2492};
	shf.r.wrap.b32 	%r2494, %r2149, %r2148, 8;
	shf.r.wrap.b32 	%r2495, %r2148, %r2149, 8;
	mov.b64 	%rd3347, {%r2495, %r2494};
	xor.b64  	%rd3348, %rd3346, %rd3347;
	shr.u64 	%rd3349, %rd2798, 7;
	xor.b64  	%rd3350, %rd3348, %rd3349;
	add.s64 	%rd3351, %rd3345, %rd2761;
	add.s64 	%rd3352, %rd3351, %rd3094;
	add.s64 	%rd3353, %rd3352, %rd3350;
	add.s64 	%rd3354, %rd3353, %rd3218;
	xor.b64  	%rd3355, %rd3292, %rd3255;
	and.b64  	%rd3356, %rd3329, %rd3355;
	xor.b64  	%rd3357, %rd3356, %rd3255;
	add.s64 	%rd3358, %rd3354, %rd3357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd3329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd3329;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 14;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 14;
	mov.b64 	%rd3359, {%r2499, %r2498};
	shf.r.wrap.b32 	%r2500, %r2497, %r2496, 18;
	shf.r.wrap.b32 	%r2501, %r2496, %r2497, 18;
	mov.b64 	%rd3360, {%r2501, %r2500};
	xor.b64  	%rd3361, %rd3359, %rd3360;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 23;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 23;
	mov.b64 	%rd3362, {%r2503, %r2502};
	xor.b64  	%rd3363, %rd3361, %rd3362;
	add.s64 	%rd3364, %rd3358, %rd3363;
	add.s64 	%rd3365, %rd3364, 4115178125766777443;
	add.s64 	%rd3366, %rd3365, %rd3229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2504,%dummy}, %rd3340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2505}, %rd3340;
	}
	shf.r.wrap.b32 	%r2506, %r2505, %r2504, 28;
	shf.r.wrap.b32 	%r2507, %r2504, %r2505, 28;
	mov.b64 	%rd3367, {%r2507, %r2506};
	shf.l.wrap.b32 	%r2508, %r2504, %r2505, 30;
	shf.l.wrap.b32 	%r2509, %r2505, %r2504, 30;
	mov.b64 	%rd3368, {%r2509, %r2508};
	xor.b64  	%rd3369, %rd3367, %rd3368;
	shf.l.wrap.b32 	%r2510, %r2504, %r2505, 25;
	shf.l.wrap.b32 	%r2511, %r2505, %r2504, 25;
	mov.b64 	%rd3370, {%r2511, %r2510};
	xor.b64  	%rd3371, %rd3369, %rd3370;
	and.b64  	%rd3372, %rd3340, %rd3303;
	or.b64  	%rd3373, %rd3340, %rd3303;
	and.b64  	%rd3374, %rd3373, %rd3266;
	or.b64  	%rd3375, %rd3374, %rd3372;
	add.s64 	%rd3376, %rd3375, %rd3371;
	add.s64 	%rd3377, %rd3376, %rd3365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2512,%dummy}, %rd3316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2513}, %rd3316;
	}
	shf.r.wrap.b32 	%r2514, %r2513, %r2512, 19;
	shf.r.wrap.b32 	%r2515, %r2512, %r2513, 19;
	mov.b64 	%rd3378, {%r2515, %r2514};
	shf.l.wrap.b32 	%r2516, %r2512, %r2513, 3;
	shf.l.wrap.b32 	%r2517, %r2513, %r2512, 3;
	mov.b64 	%rd3379, {%r2517, %r2516};
	xor.b64  	%rd3380, %rd3378, %rd3379;
	shr.u64 	%rd3381, %rd3316, 6;
	xor.b64  	%rd3382, %rd3380, %rd3381;
	shf.r.wrap.b32 	%r2518, %r2175, %r2174, 1;
	shf.r.wrap.b32 	%r2519, %r2174, %r2175, 1;
	mov.b64 	%rd3383, {%r2519, %r2518};
	shf.r.wrap.b32 	%r2520, %r2175, %r2174, 8;
	shf.r.wrap.b32 	%r2521, %r2174, %r2175, 8;
	mov.b64 	%rd3384, {%r2521, %r2520};
	xor.b64  	%rd3385, %rd3383, %rd3384;
	shr.u64 	%rd3386, %rd2835, 7;
	xor.b64  	%rd3387, %rd3385, %rd3386;
	add.s64 	%rd3388, %rd3382, %rd2798;
	add.s64 	%rd3389, %rd3388, %rd3131;
	add.s64 	%rd3390, %rd3389, %rd3387;
	add.s64 	%rd3391, %rd3390, %rd3255;
	xor.b64  	%rd3392, %rd3329, %rd3292;
	and.b64  	%rd3393, %rd3366, %rd3392;
	xor.b64  	%rd3394, %rd3393, %rd3292;
	add.s64 	%rd3395, %rd3391, %rd3394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2522,%dummy}, %rd3366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2523}, %rd3366;
	}
	shf.r.wrap.b32 	%r2524, %r2523, %r2522, 14;
	shf.r.wrap.b32 	%r2525, %r2522, %r2523, 14;
	mov.b64 	%rd3396, {%r2525, %r2524};
	shf.r.wrap.b32 	%r2526, %r2523, %r2522, 18;
	shf.r.wrap.b32 	%r2527, %r2522, %r2523, 18;
	mov.b64 	%rd3397, {%r2527, %r2526};
	xor.b64  	%rd3398, %rd3396, %rd3397;
	shf.l.wrap.b32 	%r2528, %r2522, %r2523, 23;
	shf.l.wrap.b32 	%r2529, %r2523, %r2522, 23;
	mov.b64 	%rd3399, {%r2529, %r2528};
	xor.b64  	%rd3400, %rd3398, %rd3399;
	add.s64 	%rd3401, %rd3395, %rd3400;
	add.s64 	%rd3402, %rd3401, 5681478168544905931;
	add.s64 	%rd3403, %rd3402, %rd3266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2530,%dummy}, %rd3377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2531}, %rd3377;
	}
	shf.r.wrap.b32 	%r2532, %r2531, %r2530, 28;
	shf.r.wrap.b32 	%r2533, %r2530, %r2531, 28;
	mov.b64 	%rd3404, {%r2533, %r2532};
	shf.l.wrap.b32 	%r2534, %r2530, %r2531, 30;
	shf.l.wrap.b32 	%r2535, %r2531, %r2530, 30;
	mov.b64 	%rd3405, {%r2535, %r2534};
	xor.b64  	%rd3406, %rd3404, %rd3405;
	shf.l.wrap.b32 	%r2536, %r2530, %r2531, 25;
	shf.l.wrap.b32 	%r2537, %r2531, %r2530, 25;
	mov.b64 	%rd3407, {%r2537, %r2536};
	xor.b64  	%rd3408, %rd3406, %rd3407;
	and.b64  	%rd3409, %rd3377, %rd3340;
	or.b64  	%rd3410, %rd3377, %rd3340;
	and.b64  	%rd3411, %rd3410, %rd3303;
	or.b64  	%rd3412, %rd3411, %rd3409;
	add.s64 	%rd3413, %rd3412, %rd3408;
	add.s64 	%rd3414, %rd3413, %rd3402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2538,%dummy}, %rd3353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2539}, %rd3353;
	}
	shf.r.wrap.b32 	%r2540, %r2539, %r2538, 19;
	shf.r.wrap.b32 	%r2541, %r2538, %r2539, 19;
	mov.b64 	%rd3415, {%r2541, %r2540};
	shf.l.wrap.b32 	%r2542, %r2538, %r2539, 3;
	shf.l.wrap.b32 	%r2543, %r2539, %r2538, 3;
	mov.b64 	%rd3416, {%r2543, %r2542};
	xor.b64  	%rd3417, %rd3415, %rd3416;
	shr.u64 	%rd3418, %rd3353, 6;
	xor.b64  	%rd3419, %rd3417, %rd3418;
	shf.r.wrap.b32 	%r2544, %r2201, %r2200, 1;
	shf.r.wrap.b32 	%r2545, %r2200, %r2201, 1;
	mov.b64 	%rd3420, {%r2545, %r2544};
	shf.r.wrap.b32 	%r2546, %r2201, %r2200, 8;
	shf.r.wrap.b32 	%r2547, %r2200, %r2201, 8;
	mov.b64 	%rd3421, {%r2547, %r2546};
	xor.b64  	%rd3422, %rd3420, %rd3421;
	shr.u64 	%rd3423, %rd2872, 7;
	xor.b64  	%rd3424, %rd3422, %rd3423;
	add.s64 	%rd3425, %rd3419, %rd2835;
	add.s64 	%rd3426, %rd3425, %rd3168;
	add.s64 	%rd3427, %rd3426, %rd3424;
	add.s64 	%rd3428, %rd3427, %rd3292;
	xor.b64  	%rd3429, %rd3366, %rd3329;
	and.b64  	%rd3430, %rd3403, %rd3429;
	xor.b64  	%rd3431, %rd3430, %rd3329;
	add.s64 	%rd3432, %rd3428, %rd3431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2548,%dummy}, %rd3403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2549}, %rd3403;
	}
	shf.r.wrap.b32 	%r2550, %r2549, %r2548, 14;
	shf.r.wrap.b32 	%r2551, %r2548, %r2549, 14;
	mov.b64 	%rd3433, {%r2551, %r2550};
	shf.r.wrap.b32 	%r2552, %r2549, %r2548, 18;
	shf.r.wrap.b32 	%r2553, %r2548, %r2549, 18;
	mov.b64 	%rd3434, {%r2553, %r2552};
	xor.b64  	%rd3435, %rd3433, %rd3434;
	shf.l.wrap.b32 	%r2554, %r2548, %r2549, 23;
	shf.l.wrap.b32 	%r2555, %r2549, %r2548, 23;
	mov.b64 	%rd3436, {%r2555, %r2554};
	xor.b64  	%rd3437, %rd3435, %rd3436;
	add.s64 	%rd3438, %rd3432, %rd3437;
	add.s64 	%rd3439, %rd3438, 6601373596472566643;
	add.s64 	%rd3440, %rd3439, %rd3303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2556,%dummy}, %rd3414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2557}, %rd3414;
	}
	shf.r.wrap.b32 	%r2558, %r2557, %r2556, 28;
	shf.r.wrap.b32 	%r2559, %r2556, %r2557, 28;
	mov.b64 	%rd3441, {%r2559, %r2558};
	shf.l.wrap.b32 	%r2560, %r2556, %r2557, 30;
	shf.l.wrap.b32 	%r2561, %r2557, %r2556, 30;
	mov.b64 	%rd3442, {%r2561, %r2560};
	xor.b64  	%rd3443, %rd3441, %rd3442;
	shf.l.wrap.b32 	%r2562, %r2556, %r2557, 25;
	shf.l.wrap.b32 	%r2563, %r2557, %r2556, 25;
	mov.b64 	%rd3444, {%r2563, %r2562};
	xor.b64  	%rd3445, %rd3443, %rd3444;
	and.b64  	%rd3446, %rd3414, %rd3377;
	or.b64  	%rd3447, %rd3414, %rd3377;
	and.b64  	%rd3448, %rd3447, %rd3340;
	or.b64  	%rd3449, %rd3448, %rd3446;
	add.s64 	%rd3450, %rd3449, %rd3445;
	add.s64 	%rd3451, %rd3450, %rd3439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2564,%dummy}, %rd3390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2565}, %rd3390;
	}
	shf.r.wrap.b32 	%r2566, %r2565, %r2564, 19;
	shf.r.wrap.b32 	%r2567, %r2564, %r2565, 19;
	mov.b64 	%rd3452, {%r2567, %r2566};
	shf.l.wrap.b32 	%r2568, %r2564, %r2565, 3;
	shf.l.wrap.b32 	%r2569, %r2565, %r2564, 3;
	mov.b64 	%rd3453, {%r2569, %r2568};
	xor.b64  	%rd3454, %rd3452, %rd3453;
	shr.u64 	%rd3455, %rd3390, 6;
	xor.b64  	%rd3456, %rd3454, %rd3455;
	shf.r.wrap.b32 	%r2570, %r2227, %r2226, 1;
	shf.r.wrap.b32 	%r2571, %r2226, %r2227, 1;
	mov.b64 	%rd3457, {%r2571, %r2570};
	shf.r.wrap.b32 	%r2572, %r2227, %r2226, 8;
	shf.r.wrap.b32 	%r2573, %r2226, %r2227, 8;
	mov.b64 	%rd3458, {%r2573, %r2572};
	xor.b64  	%rd3459, %rd3457, %rd3458;
	shr.u64 	%rd3460, %rd2909, 7;
	xor.b64  	%rd3461, %rd3459, %rd3460;
	add.s64 	%rd3462, %rd3456, %rd2872;
	add.s64 	%rd3463, %rd3462, %rd3205;
	add.s64 	%rd3464, %rd3463, %rd3461;
	add.s64 	%rd3465, %rd3464, %rd3329;
	xor.b64  	%rd3466, %rd3403, %rd3366;
	and.b64  	%rd3467, %rd3440, %rd3466;
	xor.b64  	%rd3468, %rd3467, %rd3366;
	add.s64 	%rd3469, %rd3465, %rd3468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2574,%dummy}, %rd3440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2575}, %rd3440;
	}
	shf.r.wrap.b32 	%r2576, %r2575, %r2574, 14;
	shf.r.wrap.b32 	%r2577, %r2574, %r2575, 14;
	mov.b64 	%rd3470, {%r2577, %r2576};
	shf.r.wrap.b32 	%r2578, %r2575, %r2574, 18;
	shf.r.wrap.b32 	%r2579, %r2574, %r2575, 18;
	mov.b64 	%rd3471, {%r2579, %r2578};
	xor.b64  	%rd3472, %rd3470, %rd3471;
	shf.l.wrap.b32 	%r2580, %r2574, %r2575, 23;
	shf.l.wrap.b32 	%r2581, %r2575, %r2574, 23;
	mov.b64 	%rd3473, {%r2581, %r2580};
	xor.b64  	%rd3474, %rd3472, %rd3473;
	add.s64 	%rd3475, %rd3469, %rd3474;
	add.s64 	%rd3476, %rd3475, 7507060721942968483;
	add.s64 	%rd3477, %rd3476, %rd3340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2582,%dummy}, %rd3451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2583}, %rd3451;
	}
	shf.r.wrap.b32 	%r2584, %r2583, %r2582, 28;
	shf.r.wrap.b32 	%r2585, %r2582, %r2583, 28;
	mov.b64 	%rd3478, {%r2585, %r2584};
	shf.l.wrap.b32 	%r2586, %r2582, %r2583, 30;
	shf.l.wrap.b32 	%r2587, %r2583, %r2582, 30;
	mov.b64 	%rd3479, {%r2587, %r2586};
	xor.b64  	%rd3480, %rd3478, %rd3479;
	shf.l.wrap.b32 	%r2588, %r2582, %r2583, 25;
	shf.l.wrap.b32 	%r2589, %r2583, %r2582, 25;
	mov.b64 	%rd3481, {%r2589, %r2588};
	xor.b64  	%rd3482, %rd3480, %rd3481;
	and.b64  	%rd3483, %rd3451, %rd3414;
	or.b64  	%rd3484, %rd3451, %rd3414;
	and.b64  	%rd3485, %rd3484, %rd3377;
	or.b64  	%rd3486, %rd3485, %rd3483;
	add.s64 	%rd3487, %rd3486, %rd3482;
	add.s64 	%rd3488, %rd3487, %rd3476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2590,%dummy}, %rd3427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2591}, %rd3427;
	}
	shf.r.wrap.b32 	%r2592, %r2591, %r2590, 19;
	shf.r.wrap.b32 	%r2593, %r2590, %r2591, 19;
	mov.b64 	%rd3489, {%r2593, %r2592};
	shf.l.wrap.b32 	%r2594, %r2590, %r2591, 3;
	shf.l.wrap.b32 	%r2595, %r2591, %r2590, 3;
	mov.b64 	%rd3490, {%r2595, %r2594};
	xor.b64  	%rd3491, %rd3489, %rd3490;
	shr.u64 	%rd3492, %rd3427, 6;
	xor.b64  	%rd3493, %rd3491, %rd3492;
	shf.r.wrap.b32 	%r2596, %r2253, %r2252, 1;
	shf.r.wrap.b32 	%r2597, %r2252, %r2253, 1;
	mov.b64 	%rd3494, {%r2597, %r2596};
	shf.r.wrap.b32 	%r2598, %r2253, %r2252, 8;
	shf.r.wrap.b32 	%r2599, %r2252, %r2253, 8;
	mov.b64 	%rd3495, {%r2599, %r2598};
	xor.b64  	%rd3496, %rd3494, %rd3495;
	shr.u64 	%rd3497, %rd2946, 7;
	xor.b64  	%rd3498, %rd3496, %rd3497;
	add.s64 	%rd3499, %rd3493, %rd2909;
	add.s64 	%rd3500, %rd3499, %rd3242;
	add.s64 	%rd3501, %rd3500, %rd3498;
	add.s64 	%rd3502, %rd3501, %rd3366;
	xor.b64  	%rd3503, %rd3440, %rd3403;
	and.b64  	%rd3504, %rd3477, %rd3503;
	xor.b64  	%rd3505, %rd3504, %rd3403;
	add.s64 	%rd3506, %rd3502, %rd3505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2600,%dummy}, %rd3477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2601}, %rd3477;
	}
	shf.r.wrap.b32 	%r2602, %r2601, %r2600, 14;
	shf.r.wrap.b32 	%r2603, %r2600, %r2601, 14;
	mov.b64 	%rd3507, {%r2603, %r2602};
	shf.r.wrap.b32 	%r2604, %r2601, %r2600, 18;
	shf.r.wrap.b32 	%r2605, %r2600, %r2601, 18;
	mov.b64 	%rd3508, {%r2605, %r2604};
	xor.b64  	%rd3509, %rd3507, %rd3508;
	shf.l.wrap.b32 	%r2606, %r2600, %r2601, 23;
	shf.l.wrap.b32 	%r2607, %r2601, %r2600, 23;
	mov.b64 	%rd3510, {%r2607, %r2606};
	xor.b64  	%rd3511, %rd3509, %rd3510;
	add.s64 	%rd3512, %rd3506, %rd3511;
	add.s64 	%rd3513, %rd3512, 8399075790359081724;
	add.s64 	%rd3514, %rd3513, %rd3377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd3488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2609}, %rd3488;
	}
	shf.r.wrap.b32 	%r2610, %r2609, %r2608, 28;
	shf.r.wrap.b32 	%r2611, %r2608, %r2609, 28;
	mov.b64 	%rd3515, {%r2611, %r2610};
	shf.l.wrap.b32 	%r2612, %r2608, %r2609, 30;
	shf.l.wrap.b32 	%r2613, %r2609, %r2608, 30;
	mov.b64 	%rd3516, {%r2613, %r2612};
	xor.b64  	%rd3517, %rd3515, %rd3516;
	shf.l.wrap.b32 	%r2614, %r2608, %r2609, 25;
	shf.l.wrap.b32 	%r2615, %r2609, %r2608, 25;
	mov.b64 	%rd3518, {%r2615, %r2614};
	xor.b64  	%rd3519, %rd3517, %rd3518;
	and.b64  	%rd3520, %rd3488, %rd3451;
	or.b64  	%rd3521, %rd3488, %rd3451;
	and.b64  	%rd3522, %rd3521, %rd3414;
	or.b64  	%rd3523, %rd3522, %rd3520;
	add.s64 	%rd3524, %rd3523, %rd3519;
	add.s64 	%rd3525, %rd3524, %rd3513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2616,%dummy}, %rd3464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2617}, %rd3464;
	}
	shf.r.wrap.b32 	%r2618, %r2617, %r2616, 19;
	shf.r.wrap.b32 	%r2619, %r2616, %r2617, 19;
	mov.b64 	%rd3526, {%r2619, %r2618};
	shf.l.wrap.b32 	%r2620, %r2616, %r2617, 3;
	shf.l.wrap.b32 	%r2621, %r2617, %r2616, 3;
	mov.b64 	%rd3527, {%r2621, %r2620};
	xor.b64  	%rd3528, %rd3526, %rd3527;
	shr.u64 	%rd3529, %rd3464, 6;
	xor.b64  	%rd3530, %rd3528, %rd3529;
	shf.r.wrap.b32 	%r2622, %r2279, %r2278, 1;
	shf.r.wrap.b32 	%r2623, %r2278, %r2279, 1;
	mov.b64 	%rd3531, {%r2623, %r2622};
	shf.r.wrap.b32 	%r2624, %r2279, %r2278, 8;
	shf.r.wrap.b32 	%r2625, %r2278, %r2279, 8;
	mov.b64 	%rd3532, {%r2625, %r2624};
	xor.b64  	%rd3533, %rd3531, %rd3532;
	shr.u64 	%rd3534, %rd2983, 7;
	xor.b64  	%rd3535, %rd3533, %rd3534;
	add.s64 	%rd3536, %rd3530, %rd2946;
	add.s64 	%rd3537, %rd3536, %rd3279;
	add.s64 	%rd3538, %rd3537, %rd3535;
	add.s64 	%rd3539, %rd3538, %rd3403;
	xor.b64  	%rd3540, %rd3477, %rd3440;
	and.b64  	%rd3541, %rd3514, %rd3540;
	xor.b64  	%rd3542, %rd3541, %rd3440;
	add.s64 	%rd3543, %rd3539, %rd3542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2626,%dummy}, %rd3514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2627}, %rd3514;
	}
	shf.r.wrap.b32 	%r2628, %r2627, %r2626, 14;
	shf.r.wrap.b32 	%r2629, %r2626, %r2627, 14;
	mov.b64 	%rd3544, {%r2629, %r2628};
	shf.r.wrap.b32 	%r2630, %r2627, %r2626, 18;
	shf.r.wrap.b32 	%r2631, %r2626, %r2627, 18;
	mov.b64 	%rd3545, {%r2631, %r2630};
	xor.b64  	%rd3546, %rd3544, %rd3545;
	shf.l.wrap.b32 	%r2632, %r2626, %r2627, 23;
	shf.l.wrap.b32 	%r2633, %r2627, %r2626, 23;
	mov.b64 	%rd3547, {%r2633, %r2632};
	xor.b64  	%rd3548, %rd3546, %rd3547;
	add.s64 	%rd3549, %rd3543, %rd3548;
	add.s64 	%rd3550, %rd3549, 8693463985226723168;
	add.s64 	%rd3551, %rd3550, %rd3414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2634,%dummy}, %rd3525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2635}, %rd3525;
	}
	shf.r.wrap.b32 	%r2636, %r2635, %r2634, 28;
	shf.r.wrap.b32 	%r2637, %r2634, %r2635, 28;
	mov.b64 	%rd3552, {%r2637, %r2636};
	shf.l.wrap.b32 	%r2638, %r2634, %r2635, 30;
	shf.l.wrap.b32 	%r2639, %r2635, %r2634, 30;
	mov.b64 	%rd3553, {%r2639, %r2638};
	xor.b64  	%rd3554, %rd3552, %rd3553;
	shf.l.wrap.b32 	%r2640, %r2634, %r2635, 25;
	shf.l.wrap.b32 	%r2641, %r2635, %r2634, 25;
	mov.b64 	%rd3555, {%r2641, %r2640};
	xor.b64  	%rd3556, %rd3554, %rd3555;
	and.b64  	%rd3557, %rd3525, %rd3488;
	or.b64  	%rd3558, %rd3525, %rd3488;
	and.b64  	%rd3559, %rd3558, %rd3451;
	or.b64  	%rd3560, %rd3559, %rd3557;
	add.s64 	%rd3561, %rd3560, %rd3556;
	add.s64 	%rd3562, %rd3561, %rd3550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2642,%dummy}, %rd3501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2643}, %rd3501;
	}
	shf.r.wrap.b32 	%r2644, %r2643, %r2642, 19;
	shf.r.wrap.b32 	%r2645, %r2642, %r2643, 19;
	mov.b64 	%rd3563, {%r2645, %r2644};
	shf.l.wrap.b32 	%r2646, %r2642, %r2643, 3;
	shf.l.wrap.b32 	%r2647, %r2643, %r2642, 3;
	mov.b64 	%rd3564, {%r2647, %r2646};
	xor.b64  	%rd3565, %rd3563, %rd3564;
	shr.u64 	%rd3566, %rd3501, 6;
	xor.b64  	%rd3567, %rd3565, %rd3566;
	shf.r.wrap.b32 	%r2648, %r2305, %r2304, 1;
	shf.r.wrap.b32 	%r2649, %r2304, %r2305, 1;
	mov.b64 	%rd3568, {%r2649, %r2648};
	shf.r.wrap.b32 	%r2650, %r2305, %r2304, 8;
	shf.r.wrap.b32 	%r2651, %r2304, %r2305, 8;
	mov.b64 	%rd3569, {%r2651, %r2650};
	xor.b64  	%rd3570, %rd3568, %rd3569;
	shr.u64 	%rd3571, %rd3020, 7;
	xor.b64  	%rd3572, %rd3570, %rd3571;
	add.s64 	%rd3573, %rd3567, %rd2983;
	add.s64 	%rd3574, %rd3573, %rd3316;
	add.s64 	%rd3575, %rd3574, %rd3572;
	add.s64 	%rd3576, %rd3575, %rd3440;
	xor.b64  	%rd3577, %rd3514, %rd3477;
	and.b64  	%rd3578, %rd3551, %rd3577;
	xor.b64  	%rd3579, %rd3578, %rd3477;
	add.s64 	%rd3580, %rd3576, %rd3579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2652,%dummy}, %rd3551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2653}, %rd3551;
	}
	shf.r.wrap.b32 	%r2654, %r2653, %r2652, 14;
	shf.r.wrap.b32 	%r2655, %r2652, %r2653, 14;
	mov.b64 	%rd3581, {%r2655, %r2654};
	shf.r.wrap.b32 	%r2656, %r2653, %r2652, 18;
	shf.r.wrap.b32 	%r2657, %r2652, %r2653, 18;
	mov.b64 	%rd3582, {%r2657, %r2656};
	xor.b64  	%rd3583, %rd3581, %rd3582;
	shf.l.wrap.b32 	%r2658, %r2652, %r2653, 23;
	shf.l.wrap.b32 	%r2659, %r2653, %r2652, 23;
	mov.b64 	%rd3584, {%r2659, %r2658};
	xor.b64  	%rd3585, %rd3583, %rd3584;
	add.s64 	%rd3586, %rd3580, %rd3585;
	add.s64 	%rd3587, %rd3586, -8878714635349349518;
	add.s64 	%rd3588, %rd3587, %rd3451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2660,%dummy}, %rd3562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2661}, %rd3562;
	}
	shf.r.wrap.b32 	%r2662, %r2661, %r2660, 28;
	shf.r.wrap.b32 	%r2663, %r2660, %r2661, 28;
	mov.b64 	%rd3589, {%r2663, %r2662};
	shf.l.wrap.b32 	%r2664, %r2660, %r2661, 30;
	shf.l.wrap.b32 	%r2665, %r2661, %r2660, 30;
	mov.b64 	%rd3590, {%r2665, %r2664};
	xor.b64  	%rd3591, %rd3589, %rd3590;
	shf.l.wrap.b32 	%r2666, %r2660, %r2661, 25;
	shf.l.wrap.b32 	%r2667, %r2661, %r2660, 25;
	mov.b64 	%rd3592, {%r2667, %r2666};
	xor.b64  	%rd3593, %rd3591, %rd3592;
	and.b64  	%rd3594, %rd3562, %rd3525;
	or.b64  	%rd3595, %rd3562, %rd3525;
	and.b64  	%rd3596, %rd3595, %rd3488;
	or.b64  	%rd3597, %rd3596, %rd3594;
	add.s64 	%rd3598, %rd3597, %rd3593;
	add.s64 	%rd3599, %rd3598, %rd3587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2668,%dummy}, %rd3538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2669}, %rd3538;
	}
	shf.r.wrap.b32 	%r2670, %r2669, %r2668, 19;
	shf.r.wrap.b32 	%r2671, %r2668, %r2669, 19;
	mov.b64 	%rd3600, {%r2671, %r2670};
	shf.l.wrap.b32 	%r2672, %r2668, %r2669, 3;
	shf.l.wrap.b32 	%r2673, %r2669, %r2668, 3;
	mov.b64 	%rd3601, {%r2673, %r2672};
	xor.b64  	%rd3602, %rd3600, %rd3601;
	shr.u64 	%rd3603, %rd3538, 6;
	xor.b64  	%rd3604, %rd3602, %rd3603;
	shf.r.wrap.b32 	%r2674, %r2331, %r2330, 1;
	shf.r.wrap.b32 	%r2675, %r2330, %r2331, 1;
	mov.b64 	%rd3605, {%r2675, %r2674};
	shf.r.wrap.b32 	%r2676, %r2331, %r2330, 8;
	shf.r.wrap.b32 	%r2677, %r2330, %r2331, 8;
	mov.b64 	%rd3606, {%r2677, %r2676};
	xor.b64  	%rd3607, %rd3605, %rd3606;
	shr.u64 	%rd3608, %rd3057, 7;
	xor.b64  	%rd3609, %rd3607, %rd3608;
	add.s64 	%rd3610, %rd3604, %rd3020;
	add.s64 	%rd3611, %rd3610, %rd3353;
	add.s64 	%rd3612, %rd3611, %rd3609;
	add.s64 	%rd3613, %rd3612, %rd3477;
	xor.b64  	%rd3614, %rd3551, %rd3514;
	and.b64  	%rd3615, %rd3588, %rd3614;
	xor.b64  	%rd3616, %rd3615, %rd3514;
	add.s64 	%rd3617, %rd3613, %rd3616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2678,%dummy}, %rd3588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2679}, %rd3588;
	}
	shf.r.wrap.b32 	%r2680, %r2679, %r2678, 14;
	shf.r.wrap.b32 	%r2681, %r2678, %r2679, 14;
	mov.b64 	%rd3618, {%r2681, %r2680};
	shf.r.wrap.b32 	%r2682, %r2679, %r2678, 18;
	shf.r.wrap.b32 	%r2683, %r2678, %r2679, 18;
	mov.b64 	%rd3619, {%r2683, %r2682};
	xor.b64  	%rd3620, %rd3618, %rd3619;
	shf.l.wrap.b32 	%r2684, %r2678, %r2679, 23;
	shf.l.wrap.b32 	%r2685, %r2679, %r2678, 23;
	mov.b64 	%rd3621, {%r2685, %r2684};
	xor.b64  	%rd3622, %rd3620, %rd3621;
	add.s64 	%rd3623, %rd3617, %rd3622;
	add.s64 	%rd3624, %rd3623, -8302665154208450068;
	add.s64 	%rd3625, %rd3624, %rd3488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2686,%dummy}, %rd3599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2687}, %rd3599;
	}
	shf.r.wrap.b32 	%r2688, %r2687, %r2686, 28;
	shf.r.wrap.b32 	%r2689, %r2686, %r2687, 28;
	mov.b64 	%rd3626, {%r2689, %r2688};
	shf.l.wrap.b32 	%r2690, %r2686, %r2687, 30;
	shf.l.wrap.b32 	%r2691, %r2687, %r2686, 30;
	mov.b64 	%rd3627, {%r2691, %r2690};
	xor.b64  	%rd3628, %rd3626, %rd3627;
	shf.l.wrap.b32 	%r2692, %r2686, %r2687, 25;
	shf.l.wrap.b32 	%r2693, %r2687, %r2686, 25;
	mov.b64 	%rd3629, {%r2693, %r2692};
	xor.b64  	%rd3630, %rd3628, %rd3629;
	and.b64  	%rd3631, %rd3599, %rd3562;
	or.b64  	%rd3632, %rd3599, %rd3562;
	and.b64  	%rd3633, %rd3632, %rd3525;
	or.b64  	%rd3634, %rd3633, %rd3631;
	add.s64 	%rd3635, %rd3634, %rd3630;
	add.s64 	%rd3636, %rd3635, %rd3624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2694,%dummy}, %rd3575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2695}, %rd3575;
	}
	shf.r.wrap.b32 	%r2696, %r2695, %r2694, 19;
	shf.r.wrap.b32 	%r2697, %r2694, %r2695, 19;
	mov.b64 	%rd3637, {%r2697, %r2696};
	shf.l.wrap.b32 	%r2698, %r2694, %r2695, 3;
	shf.l.wrap.b32 	%r2699, %r2695, %r2694, 3;
	mov.b64 	%rd3638, {%r2699, %r2698};
	xor.b64  	%rd3639, %rd3637, %rd3638;
	shr.u64 	%rd3640, %rd3575, 6;
	xor.b64  	%rd3641, %rd3639, %rd3640;
	shf.r.wrap.b32 	%r2700, %r2357, %r2356, 1;
	shf.r.wrap.b32 	%r2701, %r2356, %r2357, 1;
	mov.b64 	%rd3642, {%r2701, %r2700};
	shf.r.wrap.b32 	%r2702, %r2357, %r2356, 8;
	shf.r.wrap.b32 	%r2703, %r2356, %r2357, 8;
	mov.b64 	%rd3643, {%r2703, %r2702};
	xor.b64  	%rd3644, %rd3642, %rd3643;
	shr.u64 	%rd3645, %rd3094, 7;
	xor.b64  	%rd3646, %rd3644, %rd3645;
	add.s64 	%rd3647, %rd3641, %rd3057;
	add.s64 	%rd3648, %rd3647, %rd3390;
	add.s64 	%rd3649, %rd3648, %rd3646;
	add.s64 	%rd3650, %rd3649, %rd3514;
	xor.b64  	%rd3651, %rd3588, %rd3551;
	and.b64  	%rd3652, %rd3625, %rd3651;
	xor.b64  	%rd3653, %rd3652, %rd3551;
	add.s64 	%rd3654, %rd3650, %rd3653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd3625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd3625;
	}
	shf.r.wrap.b32 	%r2706, %r2705, %r2704, 14;
	shf.r.wrap.b32 	%r2707, %r2704, %r2705, 14;
	mov.b64 	%rd3655, {%r2707, %r2706};
	shf.r.wrap.b32 	%r2708, %r2705, %r2704, 18;
	shf.r.wrap.b32 	%r2709, %r2704, %r2705, 18;
	mov.b64 	%rd3656, {%r2709, %r2708};
	xor.b64  	%rd3657, %rd3655, %rd3656;
	shf.l.wrap.b32 	%r2710, %r2704, %r2705, 23;
	shf.l.wrap.b32 	%r2711, %r2705, %r2704, 23;
	mov.b64 	%rd3658, {%r2711, %r2710};
	xor.b64  	%rd3659, %rd3657, %rd3658;
	add.s64 	%rd3660, %rd3654, %rd3659;
	add.s64 	%rd3661, %rd3660, -8016688836872298968;
	add.s64 	%rd3662, %rd3661, %rd3525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2712,%dummy}, %rd3636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd3636;
	}
	shf.r.wrap.b32 	%r2714, %r2713, %r2712, 28;
	shf.r.wrap.b32 	%r2715, %r2712, %r2713, 28;
	mov.b64 	%rd3663, {%r2715, %r2714};
	shf.l.wrap.b32 	%r2716, %r2712, %r2713, 30;
	shf.l.wrap.b32 	%r2717, %r2713, %r2712, 30;
	mov.b64 	%rd3664, {%r2717, %r2716};
	xor.b64  	%rd3665, %rd3663, %rd3664;
	shf.l.wrap.b32 	%r2718, %r2712, %r2713, 25;
	shf.l.wrap.b32 	%r2719, %r2713, %r2712, 25;
	mov.b64 	%rd3666, {%r2719, %r2718};
	xor.b64  	%rd3667, %rd3665, %rd3666;
	and.b64  	%rd3668, %rd3636, %rd3599;
	or.b64  	%rd3669, %rd3636, %rd3599;
	and.b64  	%rd3670, %rd3669, %rd3562;
	or.b64  	%rd3671, %rd3670, %rd3668;
	add.s64 	%rd3672, %rd3671, %rd3667;
	add.s64 	%rd3673, %rd3672, %rd3661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd3612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd3612;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 19;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 19;
	mov.b64 	%rd3674, {%r2723, %r2722};
	shf.l.wrap.b32 	%r2724, %r2720, %r2721, 3;
	shf.l.wrap.b32 	%r2725, %r2721, %r2720, 3;
	mov.b64 	%rd3675, {%r2725, %r2724};
	xor.b64  	%rd3676, %rd3674, %rd3675;
	shr.u64 	%rd3677, %rd3612, 6;
	xor.b64  	%rd3678, %rd3676, %rd3677;
	shf.r.wrap.b32 	%r2726, %r2383, %r2382, 1;
	shf.r.wrap.b32 	%r2727, %r2382, %r2383, 1;
	mov.b64 	%rd3679, {%r2727, %r2726};
	shf.r.wrap.b32 	%r2728, %r2383, %r2382, 8;
	shf.r.wrap.b32 	%r2729, %r2382, %r2383, 8;
	mov.b64 	%rd3680, {%r2729, %r2728};
	xor.b64  	%rd3681, %rd3679, %rd3680;
	shr.u64 	%rd3682, %rd3131, 7;
	xor.b64  	%rd3683, %rd3681, %rd3682;
	add.s64 	%rd3684, %rd3678, %rd3094;
	add.s64 	%rd3685, %rd3684, %rd3427;
	add.s64 	%rd3686, %rd3685, %rd3683;
	add.s64 	%rd3687, %rd3686, %rd3551;
	xor.b64  	%rd3688, %rd3625, %rd3588;
	and.b64  	%rd3689, %rd3662, %rd3688;
	xor.b64  	%rd3690, %rd3689, %rd3588;
	add.s64 	%rd3691, %rd3687, %rd3690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2730,%dummy}, %rd3662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2731}, %rd3662;
	}
	shf.r.wrap.b32 	%r2732, %r2731, %r2730, 14;
	shf.r.wrap.b32 	%r2733, %r2730, %r2731, 14;
	mov.b64 	%rd3692, {%r2733, %r2732};
	shf.r.wrap.b32 	%r2734, %r2731, %r2730, 18;
	shf.r.wrap.b32 	%r2735, %r2730, %r2731, 18;
	mov.b64 	%rd3693, {%r2735, %r2734};
	xor.b64  	%rd3694, %rd3692, %rd3693;
	shf.l.wrap.b32 	%r2736, %r2730, %r2731, 23;
	shf.l.wrap.b32 	%r2737, %r2731, %r2730, 23;
	mov.b64 	%rd3695, {%r2737, %r2736};
	xor.b64  	%rd3696, %rd3694, %rd3695;
	add.s64 	%rd3697, %rd3691, %rd3696;
	add.s64 	%rd3698, %rd3697, -6606660893046293015;
	add.s64 	%rd3699, %rd3698, %rd3562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2738,%dummy}, %rd3673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2739}, %rd3673;
	}
	shf.r.wrap.b32 	%r2740, %r2739, %r2738, 28;
	shf.r.wrap.b32 	%r2741, %r2738, %r2739, 28;
	mov.b64 	%rd3700, {%r2741, %r2740};
	shf.l.wrap.b32 	%r2742, %r2738, %r2739, 30;
	shf.l.wrap.b32 	%r2743, %r2739, %r2738, 30;
	mov.b64 	%rd3701, {%r2743, %r2742};
	xor.b64  	%rd3702, %rd3700, %rd3701;
	shf.l.wrap.b32 	%r2744, %r2738, %r2739, 25;
	shf.l.wrap.b32 	%r2745, %r2739, %r2738, 25;
	mov.b64 	%rd3703, {%r2745, %r2744};
	xor.b64  	%rd3704, %rd3702, %rd3703;
	and.b64  	%rd3705, %rd3673, %rd3636;
	or.b64  	%rd3706, %rd3673, %rd3636;
	and.b64  	%rd3707, %rd3706, %rd3599;
	or.b64  	%rd3708, %rd3707, %rd3705;
	add.s64 	%rd3709, %rd3708, %rd3704;
	add.s64 	%rd3710, %rd3709, %rd3698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2746,%dummy}, %rd3649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2747}, %rd3649;
	}
	shf.r.wrap.b32 	%r2748, %r2747, %r2746, 19;
	shf.r.wrap.b32 	%r2749, %r2746, %r2747, 19;
	mov.b64 	%rd3711, {%r2749, %r2748};
	shf.l.wrap.b32 	%r2750, %r2746, %r2747, 3;
	shf.l.wrap.b32 	%r2751, %r2747, %r2746, 3;
	mov.b64 	%rd3712, {%r2751, %r2750};
	xor.b64  	%rd3713, %rd3711, %rd3712;
	shr.u64 	%rd3714, %rd3649, 6;
	xor.b64  	%rd3715, %rd3713, %rd3714;
	shf.r.wrap.b32 	%r2752, %r2409, %r2408, 1;
	shf.r.wrap.b32 	%r2753, %r2408, %r2409, 1;
	mov.b64 	%rd3716, {%r2753, %r2752};
	shf.r.wrap.b32 	%r2754, %r2409, %r2408, 8;
	shf.r.wrap.b32 	%r2755, %r2408, %r2409, 8;
	mov.b64 	%rd3717, {%r2755, %r2754};
	xor.b64  	%rd3718, %rd3716, %rd3717;
	shr.u64 	%rd3719, %rd3168, 7;
	xor.b64  	%rd3720, %rd3718, %rd3719;
	add.s64 	%rd3721, %rd3715, %rd3131;
	add.s64 	%rd3722, %rd3721, %rd3464;
	add.s64 	%rd3723, %rd3722, %rd3720;
	add.s64 	%rd3724, %rd3723, %rd3588;
	xor.b64  	%rd3725, %rd3662, %rd3625;
	and.b64  	%rd3726, %rd3699, %rd3725;
	xor.b64  	%rd3727, %rd3726, %rd3625;
	add.s64 	%rd3728, %rd3724, %rd3727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2756,%dummy}, %rd3699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2757}, %rd3699;
	}
	shf.r.wrap.b32 	%r2758, %r2757, %r2756, 14;
	shf.r.wrap.b32 	%r2759, %r2756, %r2757, 14;
	mov.b64 	%rd3729, {%r2759, %r2758};
	shf.r.wrap.b32 	%r2760, %r2757, %r2756, 18;
	shf.r.wrap.b32 	%r2761, %r2756, %r2757, 18;
	mov.b64 	%rd3730, {%r2761, %r2760};
	xor.b64  	%rd3731, %rd3729, %rd3730;
	shf.l.wrap.b32 	%r2762, %r2756, %r2757, 23;
	shf.l.wrap.b32 	%r2763, %r2757, %r2756, 23;
	mov.b64 	%rd3732, {%r2763, %r2762};
	xor.b64  	%rd3733, %rd3731, %rd3732;
	add.s64 	%rd3734, %rd3728, %rd3733;
	add.s64 	%rd3735, %rd3734, -4685533653050689259;
	add.s64 	%rd3736, %rd3735, %rd3599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2764,%dummy}, %rd3710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2765}, %rd3710;
	}
	shf.r.wrap.b32 	%r2766, %r2765, %r2764, 28;
	shf.r.wrap.b32 	%r2767, %r2764, %r2765, 28;
	mov.b64 	%rd3737, {%r2767, %r2766};
	shf.l.wrap.b32 	%r2768, %r2764, %r2765, 30;
	shf.l.wrap.b32 	%r2769, %r2765, %r2764, 30;
	mov.b64 	%rd3738, {%r2769, %r2768};
	xor.b64  	%rd3739, %rd3737, %rd3738;
	shf.l.wrap.b32 	%r2770, %r2764, %r2765, 25;
	shf.l.wrap.b32 	%r2771, %r2765, %r2764, 25;
	mov.b64 	%rd3740, {%r2771, %r2770};
	xor.b64  	%rd3741, %rd3739, %rd3740;
	and.b64  	%rd3742, %rd3710, %rd3673;
	or.b64  	%rd3743, %rd3710, %rd3673;
	and.b64  	%rd3744, %rd3743, %rd3636;
	or.b64  	%rd3745, %rd3744, %rd3742;
	add.s64 	%rd3746, %rd3745, %rd3741;
	add.s64 	%rd3747, %rd3746, %rd3735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2772,%dummy}, %rd3686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2773}, %rd3686;
	}
	shf.r.wrap.b32 	%r2774, %r2773, %r2772, 19;
	shf.r.wrap.b32 	%r2775, %r2772, %r2773, 19;
	mov.b64 	%rd3748, {%r2775, %r2774};
	shf.l.wrap.b32 	%r2776, %r2772, %r2773, 3;
	shf.l.wrap.b32 	%r2777, %r2773, %r2772, 3;
	mov.b64 	%rd3749, {%r2777, %r2776};
	xor.b64  	%rd3750, %rd3748, %rd3749;
	shr.u64 	%rd3751, %rd3686, 6;
	xor.b64  	%rd3752, %rd3750, %rd3751;
	shf.r.wrap.b32 	%r2778, %r2435, %r2434, 1;
	shf.r.wrap.b32 	%r2779, %r2434, %r2435, 1;
	mov.b64 	%rd3753, {%r2779, %r2778};
	shf.r.wrap.b32 	%r2780, %r2435, %r2434, 8;
	shf.r.wrap.b32 	%r2781, %r2434, %r2435, 8;
	mov.b64 	%rd3754, {%r2781, %r2780};
	xor.b64  	%rd3755, %rd3753, %rd3754;
	shr.u64 	%rd3756, %rd3205, 7;
	xor.b64  	%rd3757, %rd3755, %rd3756;
	add.s64 	%rd3758, %rd3752, %rd3168;
	add.s64 	%rd3759, %rd3758, %rd3501;
	add.s64 	%rd3760, %rd3759, %rd3757;
	add.s64 	%rd3761, %rd3760, %rd3625;
	xor.b64  	%rd3762, %rd3699, %rd3662;
	and.b64  	%rd3763, %rd3736, %rd3762;
	xor.b64  	%rd3764, %rd3763, %rd3662;
	add.s64 	%rd3765, %rd3761, %rd3764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2782,%dummy}, %rd3736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2783}, %rd3736;
	}
	shf.r.wrap.b32 	%r2784, %r2783, %r2782, 14;
	shf.r.wrap.b32 	%r2785, %r2782, %r2783, 14;
	mov.b64 	%rd3766, {%r2785, %r2784};
	shf.r.wrap.b32 	%r2786, %r2783, %r2782, 18;
	shf.r.wrap.b32 	%r2787, %r2782, %r2783, 18;
	mov.b64 	%rd3767, {%r2787, %r2786};
	xor.b64  	%rd3768, %rd3766, %rd3767;
	shf.l.wrap.b32 	%r2788, %r2782, %r2783, 23;
	shf.l.wrap.b32 	%r2789, %r2783, %r2782, 23;
	mov.b64 	%rd3769, {%r2789, %r2788};
	xor.b64  	%rd3770, %rd3768, %rd3769;
	add.s64 	%rd3771, %rd3765, %rd3770;
	add.s64 	%rd3772, %rd3771, -4147400797238176981;
	add.s64 	%rd3773, %rd3772, %rd3636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2790,%dummy}, %rd3747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2791}, %rd3747;
	}
	shf.r.wrap.b32 	%r2792, %r2791, %r2790, 28;
	shf.r.wrap.b32 	%r2793, %r2790, %r2791, 28;
	mov.b64 	%rd3774, {%r2793, %r2792};
	shf.l.wrap.b32 	%r2794, %r2790, %r2791, 30;
	shf.l.wrap.b32 	%r2795, %r2791, %r2790, 30;
	mov.b64 	%rd3775, {%r2795, %r2794};
	xor.b64  	%rd3776, %rd3774, %rd3775;
	shf.l.wrap.b32 	%r2796, %r2790, %r2791, 25;
	shf.l.wrap.b32 	%r2797, %r2791, %r2790, 25;
	mov.b64 	%rd3777, {%r2797, %r2796};
	xor.b64  	%rd3778, %rd3776, %rd3777;
	and.b64  	%rd3779, %rd3747, %rd3710;
	or.b64  	%rd3780, %rd3747, %rd3710;
	and.b64  	%rd3781, %rd3780, %rd3673;
	or.b64  	%rd3782, %rd3781, %rd3779;
	add.s64 	%rd3783, %rd3782, %rd3778;
	add.s64 	%rd3784, %rd3783, %rd3772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2798,%dummy}, %rd3723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2799}, %rd3723;
	}
	shf.r.wrap.b32 	%r2800, %r2799, %r2798, 19;
	shf.r.wrap.b32 	%r2801, %r2798, %r2799, 19;
	mov.b64 	%rd3785, {%r2801, %r2800};
	shf.l.wrap.b32 	%r2802, %r2798, %r2799, 3;
	shf.l.wrap.b32 	%r2803, %r2799, %r2798, 3;
	mov.b64 	%rd3786, {%r2803, %r2802};
	xor.b64  	%rd3787, %rd3785, %rd3786;
	shr.u64 	%rd3788, %rd3723, 6;
	xor.b64  	%rd3789, %rd3787, %rd3788;
	shf.r.wrap.b32 	%r2804, %r2461, %r2460, 1;
	shf.r.wrap.b32 	%r2805, %r2460, %r2461, 1;
	mov.b64 	%rd3790, {%r2805, %r2804};
	shf.r.wrap.b32 	%r2806, %r2461, %r2460, 8;
	shf.r.wrap.b32 	%r2807, %r2460, %r2461, 8;
	mov.b64 	%rd3791, {%r2807, %r2806};
	xor.b64  	%rd3792, %rd3790, %rd3791;
	shr.u64 	%rd3793, %rd3242, 7;
	xor.b64  	%rd3794, %rd3792, %rd3793;
	add.s64 	%rd3795, %rd3789, %rd3205;
	add.s64 	%rd3796, %rd3795, %rd3538;
	add.s64 	%rd3797, %rd3796, %rd3794;
	add.s64 	%rd3798, %rd3797, %rd3662;
	xor.b64  	%rd3799, %rd3736, %rd3699;
	and.b64  	%rd3800, %rd3773, %rd3799;
	xor.b64  	%rd3801, %rd3800, %rd3699;
	add.s64 	%rd3802, %rd3798, %rd3801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2808,%dummy}, %rd3773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2809}, %rd3773;
	}
	shf.r.wrap.b32 	%r2810, %r2809, %r2808, 14;
	shf.r.wrap.b32 	%r2811, %r2808, %r2809, 14;
	mov.b64 	%rd3803, {%r2811, %r2810};
	shf.r.wrap.b32 	%r2812, %r2809, %r2808, 18;
	shf.r.wrap.b32 	%r2813, %r2808, %r2809, 18;
	mov.b64 	%rd3804, {%r2813, %r2812};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	shf.l.wrap.b32 	%r2814, %r2808, %r2809, 23;
	shf.l.wrap.b32 	%r2815, %r2809, %r2808, 23;
	mov.b64 	%rd3806, {%r2815, %r2814};
	xor.b64  	%rd3807, %rd3805, %rd3806;
	add.s64 	%rd3808, %rd3802, %rd3807;
	add.s64 	%rd3809, %rd3808, -3880063495543823972;
	add.s64 	%rd3810, %rd3809, %rd3673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2816,%dummy}, %rd3784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2817}, %rd3784;
	}
	shf.r.wrap.b32 	%r2818, %r2817, %r2816, 28;
	shf.r.wrap.b32 	%r2819, %r2816, %r2817, 28;
	mov.b64 	%rd3811, {%r2819, %r2818};
	shf.l.wrap.b32 	%r2820, %r2816, %r2817, 30;
	shf.l.wrap.b32 	%r2821, %r2817, %r2816, 30;
	mov.b64 	%rd3812, {%r2821, %r2820};
	xor.b64  	%rd3813, %rd3811, %rd3812;
	shf.l.wrap.b32 	%r2822, %r2816, %r2817, 25;
	shf.l.wrap.b32 	%r2823, %r2817, %r2816, 25;
	mov.b64 	%rd3814, {%r2823, %r2822};
	xor.b64  	%rd3815, %rd3813, %rd3814;
	and.b64  	%rd3816, %rd3784, %rd3747;
	or.b64  	%rd3817, %rd3784, %rd3747;
	and.b64  	%rd3818, %rd3817, %rd3710;
	or.b64  	%rd3819, %rd3818, %rd3816;
	add.s64 	%rd3820, %rd3819, %rd3815;
	add.s64 	%rd3821, %rd3820, %rd3809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2824,%dummy}, %rd3760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2825}, %rd3760;
	}
	shf.r.wrap.b32 	%r2826, %r2825, %r2824, 19;
	shf.r.wrap.b32 	%r2827, %r2824, %r2825, 19;
	mov.b64 	%rd3822, {%r2827, %r2826};
	shf.l.wrap.b32 	%r2828, %r2824, %r2825, 3;
	shf.l.wrap.b32 	%r2829, %r2825, %r2824, 3;
	mov.b64 	%rd3823, {%r2829, %r2828};
	xor.b64  	%rd3824, %rd3822, %rd3823;
	shr.u64 	%rd3825, %rd3760, 6;
	xor.b64  	%rd3826, %rd3824, %rd3825;
	shf.r.wrap.b32 	%r2830, %r2487, %r2486, 1;
	shf.r.wrap.b32 	%r2831, %r2486, %r2487, 1;
	mov.b64 	%rd3827, {%r2831, %r2830};
	shf.r.wrap.b32 	%r2832, %r2487, %r2486, 8;
	shf.r.wrap.b32 	%r2833, %r2486, %r2487, 8;
	mov.b64 	%rd3828, {%r2833, %r2832};
	xor.b64  	%rd3829, %rd3827, %rd3828;
	shr.u64 	%rd3830, %rd3279, 7;
	xor.b64  	%rd3831, %rd3829, %rd3830;
	add.s64 	%rd3832, %rd3826, %rd3242;
	add.s64 	%rd3833, %rd3832, %rd3575;
	add.s64 	%rd3834, %rd3833, %rd3831;
	add.s64 	%rd3835, %rd3834, %rd3699;
	xor.b64  	%rd3836, %rd3773, %rd3736;
	and.b64  	%rd3837, %rd3810, %rd3836;
	xor.b64  	%rd3838, %rd3837, %rd3736;
	add.s64 	%rd3839, %rd3835, %rd3838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2834,%dummy}, %rd3810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2835}, %rd3810;
	}
	shf.r.wrap.b32 	%r2836, %r2835, %r2834, 14;
	shf.r.wrap.b32 	%r2837, %r2834, %r2835, 14;
	mov.b64 	%rd3840, {%r2837, %r2836};
	shf.r.wrap.b32 	%r2838, %r2835, %r2834, 18;
	shf.r.wrap.b32 	%r2839, %r2834, %r2835, 18;
	mov.b64 	%rd3841, {%r2839, %r2838};
	xor.b64  	%rd3842, %rd3840, %rd3841;
	shf.l.wrap.b32 	%r2840, %r2834, %r2835, 23;
	shf.l.wrap.b32 	%r2841, %r2835, %r2834, 23;
	mov.b64 	%rd3843, {%r2841, %r2840};
	xor.b64  	%rd3844, %rd3842, %rd3843;
	add.s64 	%rd3845, %rd3839, %rd3844;
	add.s64 	%rd3846, %rd3845, -3348786107499101689;
	add.s64 	%rd3847, %rd3846, %rd3710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2842,%dummy}, %rd3821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2843}, %rd3821;
	}
	shf.r.wrap.b32 	%r2844, %r2843, %r2842, 28;
	shf.r.wrap.b32 	%r2845, %r2842, %r2843, 28;
	mov.b64 	%rd3848, {%r2845, %r2844};
	shf.l.wrap.b32 	%r2846, %r2842, %r2843, 30;
	shf.l.wrap.b32 	%r2847, %r2843, %r2842, 30;
	mov.b64 	%rd3849, {%r2847, %r2846};
	xor.b64  	%rd3850, %rd3848, %rd3849;
	shf.l.wrap.b32 	%r2848, %r2842, %r2843, 25;
	shf.l.wrap.b32 	%r2849, %r2843, %r2842, 25;
	mov.b64 	%rd3851, {%r2849, %r2848};
	xor.b64  	%rd3852, %rd3850, %rd3851;
	and.b64  	%rd3853, %rd3821, %rd3784;
	or.b64  	%rd3854, %rd3821, %rd3784;
	and.b64  	%rd3855, %rd3854, %rd3747;
	or.b64  	%rd3856, %rd3855, %rd3853;
	add.s64 	%rd3857, %rd3856, %rd3852;
	add.s64 	%rd3858, %rd3857, %rd3846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2850,%dummy}, %rd3797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd3797;
	}
	shf.r.wrap.b32 	%r2852, %r2851, %r2850, 19;
	shf.r.wrap.b32 	%r2853, %r2850, %r2851, 19;
	mov.b64 	%rd3859, {%r2853, %r2852};
	shf.l.wrap.b32 	%r2854, %r2850, %r2851, 3;
	shf.l.wrap.b32 	%r2855, %r2851, %r2850, 3;
	mov.b64 	%rd3860, {%r2855, %r2854};
	xor.b64  	%rd3861, %rd3859, %rd3860;
	shr.u64 	%rd3862, %rd3797, 6;
	xor.b64  	%rd3863, %rd3861, %rd3862;
	shf.r.wrap.b32 	%r2856, %r2513, %r2512, 1;
	shf.r.wrap.b32 	%r2857, %r2512, %r2513, 1;
	mov.b64 	%rd3864, {%r2857, %r2856};
	shf.r.wrap.b32 	%r2858, %r2513, %r2512, 8;
	shf.r.wrap.b32 	%r2859, %r2512, %r2513, 8;
	mov.b64 	%rd3865, {%r2859, %r2858};
	xor.b64  	%rd3866, %rd3864, %rd3865;
	shr.u64 	%rd3867, %rd3316, 7;
	xor.b64  	%rd3868, %rd3866, %rd3867;
	add.s64 	%rd3869, %rd3863, %rd3279;
	add.s64 	%rd3870, %rd3869, %rd3612;
	add.s64 	%rd3871, %rd3870, %rd3868;
	add.s64 	%rd3872, %rd3871, %rd3736;
	xor.b64  	%rd3873, %rd3810, %rd3773;
	and.b64  	%rd3874, %rd3847, %rd3873;
	xor.b64  	%rd3875, %rd3874, %rd3773;
	add.s64 	%rd3876, %rd3872, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2860,%dummy}, %rd3847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2861}, %rd3847;
	}
	shf.r.wrap.b32 	%r2862, %r2861, %r2860, 14;
	shf.r.wrap.b32 	%r2863, %r2860, %r2861, 14;
	mov.b64 	%rd3877, {%r2863, %r2862};
	shf.r.wrap.b32 	%r2864, %r2861, %r2860, 18;
	shf.r.wrap.b32 	%r2865, %r2860, %r2861, 18;
	mov.b64 	%rd3878, {%r2865, %r2864};
	xor.b64  	%rd3879, %rd3877, %rd3878;
	shf.l.wrap.b32 	%r2866, %r2860, %r2861, 23;
	shf.l.wrap.b32 	%r2867, %r2861, %r2860, 23;
	mov.b64 	%rd3880, {%r2867, %r2866};
	xor.b64  	%rd3881, %rd3879, %rd3880;
	add.s64 	%rd3882, %rd3876, %rd3881;
	add.s64 	%rd3883, %rd3882, -1523767162380948706;
	add.s64 	%rd3884, %rd3883, %rd3747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2868,%dummy}, %rd3858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2869}, %rd3858;
	}
	shf.r.wrap.b32 	%r2870, %r2869, %r2868, 28;
	shf.r.wrap.b32 	%r2871, %r2868, %r2869, 28;
	mov.b64 	%rd3885, {%r2871, %r2870};
	shf.l.wrap.b32 	%r2872, %r2868, %r2869, 30;
	shf.l.wrap.b32 	%r2873, %r2869, %r2868, 30;
	mov.b64 	%rd3886, {%r2873, %r2872};
	xor.b64  	%rd3887, %rd3885, %rd3886;
	shf.l.wrap.b32 	%r2874, %r2868, %r2869, 25;
	shf.l.wrap.b32 	%r2875, %r2869, %r2868, 25;
	mov.b64 	%rd3888, {%r2875, %r2874};
	xor.b64  	%rd3889, %rd3887, %rd3888;
	and.b64  	%rd3890, %rd3858, %rd3821;
	or.b64  	%rd3891, %rd3858, %rd3821;
	and.b64  	%rd3892, %rd3891, %rd3784;
	or.b64  	%rd3893, %rd3892, %rd3890;
	add.s64 	%rd3894, %rd3893, %rd3889;
	add.s64 	%rd3895, %rd3894, %rd3883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2876,%dummy}, %rd3834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2877}, %rd3834;
	}
	shf.r.wrap.b32 	%r2878, %r2877, %r2876, 19;
	shf.r.wrap.b32 	%r2879, %r2876, %r2877, 19;
	mov.b64 	%rd3896, {%r2879, %r2878};
	shf.l.wrap.b32 	%r2880, %r2876, %r2877, 3;
	shf.l.wrap.b32 	%r2881, %r2877, %r2876, 3;
	mov.b64 	%rd3897, {%r2881, %r2880};
	xor.b64  	%rd3898, %rd3896, %rd3897;
	shr.u64 	%rd3899, %rd3834, 6;
	xor.b64  	%rd3900, %rd3898, %rd3899;
	shf.r.wrap.b32 	%r2882, %r2539, %r2538, 1;
	shf.r.wrap.b32 	%r2883, %r2538, %r2539, 1;
	mov.b64 	%rd3901, {%r2883, %r2882};
	shf.r.wrap.b32 	%r2884, %r2539, %r2538, 8;
	shf.r.wrap.b32 	%r2885, %r2538, %r2539, 8;
	mov.b64 	%rd3902, {%r2885, %r2884};
	xor.b64  	%rd3903, %rd3901, %rd3902;
	shr.u64 	%rd3904, %rd3353, 7;
	xor.b64  	%rd3905, %rd3903, %rd3904;
	add.s64 	%rd3906, %rd3900, %rd3316;
	add.s64 	%rd3907, %rd3906, %rd3649;
	add.s64 	%rd3908, %rd3907, %rd3905;
	add.s64 	%rd3909, %rd3908, %rd3773;
	xor.b64  	%rd3910, %rd3847, %rd3810;
	and.b64  	%rd3911, %rd3884, %rd3910;
	xor.b64  	%rd3912, %rd3911, %rd3810;
	add.s64 	%rd3913, %rd3909, %rd3912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2886,%dummy}, %rd3884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2887}, %rd3884;
	}
	shf.r.wrap.b32 	%r2888, %r2887, %r2886, 14;
	shf.r.wrap.b32 	%r2889, %r2886, %r2887, 14;
	mov.b64 	%rd3914, {%r2889, %r2888};
	shf.r.wrap.b32 	%r2890, %r2887, %r2886, 18;
	shf.r.wrap.b32 	%r2891, %r2886, %r2887, 18;
	mov.b64 	%rd3915, {%r2891, %r2890};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	shf.l.wrap.b32 	%r2892, %r2886, %r2887, 23;
	shf.l.wrap.b32 	%r2893, %r2887, %r2886, 23;
	mov.b64 	%rd3917, {%r2893, %r2892};
	xor.b64  	%rd3918, %rd3916, %rd3917;
	add.s64 	%rd3919, %rd3913, %rd3918;
	add.s64 	%rd3920, %rd3919, -757361751448694408;
	add.s64 	%rd3921, %rd3920, %rd3784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2894,%dummy}, %rd3895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2895}, %rd3895;
	}
	shf.r.wrap.b32 	%r2896, %r2895, %r2894, 28;
	shf.r.wrap.b32 	%r2897, %r2894, %r2895, 28;
	mov.b64 	%rd3922, {%r2897, %r2896};
	shf.l.wrap.b32 	%r2898, %r2894, %r2895, 30;
	shf.l.wrap.b32 	%r2899, %r2895, %r2894, 30;
	mov.b64 	%rd3923, {%r2899, %r2898};
	xor.b64  	%rd3924, %rd3922, %rd3923;
	shf.l.wrap.b32 	%r2900, %r2894, %r2895, 25;
	shf.l.wrap.b32 	%r2901, %r2895, %r2894, 25;
	mov.b64 	%rd3925, {%r2901, %r2900};
	xor.b64  	%rd3926, %rd3924, %rd3925;
	and.b64  	%rd3927, %rd3895, %rd3858;
	or.b64  	%rd3928, %rd3895, %rd3858;
	and.b64  	%rd3929, %rd3928, %rd3821;
	or.b64  	%rd3930, %rd3929, %rd3927;
	add.s64 	%rd3931, %rd3930, %rd3926;
	add.s64 	%rd3932, %rd3931, %rd3920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2902,%dummy}, %rd3871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2903}, %rd3871;
	}
	shf.r.wrap.b32 	%r2904, %r2903, %r2902, 19;
	shf.r.wrap.b32 	%r2905, %r2902, %r2903, 19;
	mov.b64 	%rd3933, {%r2905, %r2904};
	shf.l.wrap.b32 	%r2906, %r2902, %r2903, 3;
	shf.l.wrap.b32 	%r2907, %r2903, %r2902, 3;
	mov.b64 	%rd3934, {%r2907, %r2906};
	xor.b64  	%rd3935, %rd3933, %rd3934;
	shr.u64 	%rd3936, %rd3871, 6;
	xor.b64  	%rd3937, %rd3935, %rd3936;
	shf.r.wrap.b32 	%r2908, %r2565, %r2564, 1;
	shf.r.wrap.b32 	%r2909, %r2564, %r2565, 1;
	mov.b64 	%rd3938, {%r2909, %r2908};
	shf.r.wrap.b32 	%r2910, %r2565, %r2564, 8;
	shf.r.wrap.b32 	%r2911, %r2564, %r2565, 8;
	mov.b64 	%rd3939, {%r2911, %r2910};
	xor.b64  	%rd3940, %rd3938, %rd3939;
	shr.u64 	%rd3941, %rd3390, 7;
	xor.b64  	%rd3942, %rd3940, %rd3941;
	add.s64 	%rd3943, %rd3937, %rd3353;
	add.s64 	%rd3944, %rd3943, %rd3686;
	add.s64 	%rd3945, %rd3944, %rd3942;
	add.s64 	%rd3946, %rd3945, %rd3810;
	xor.b64  	%rd3947, %rd3884, %rd3847;
	and.b64  	%rd3948, %rd3921, %rd3947;
	xor.b64  	%rd3949, %rd3948, %rd3847;
	add.s64 	%rd3950, %rd3946, %rd3949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2912,%dummy}, %rd3921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2913}, %rd3921;
	}
	shf.r.wrap.b32 	%r2914, %r2913, %r2912, 14;
	shf.r.wrap.b32 	%r2915, %r2912, %r2913, 14;
	mov.b64 	%rd3951, {%r2915, %r2914};
	shf.r.wrap.b32 	%r2916, %r2913, %r2912, 18;
	shf.r.wrap.b32 	%r2917, %r2912, %r2913, 18;
	mov.b64 	%rd3952, {%r2917, %r2916};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	shf.l.wrap.b32 	%r2918, %r2912, %r2913, 23;
	shf.l.wrap.b32 	%r2919, %r2913, %r2912, 23;
	mov.b64 	%rd3954, {%r2919, %r2918};
	xor.b64  	%rd3955, %rd3953, %rd3954;
	add.s64 	%rd3956, %rd3950, %rd3955;
	add.s64 	%rd3957, %rd3956, 500013540394364858;
	add.s64 	%rd3958, %rd3957, %rd3821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2920,%dummy}, %rd3932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2921}, %rd3932;
	}
	shf.r.wrap.b32 	%r2922, %r2921, %r2920, 28;
	shf.r.wrap.b32 	%r2923, %r2920, %r2921, 28;
	mov.b64 	%rd3959, {%r2923, %r2922};
	shf.l.wrap.b32 	%r2924, %r2920, %r2921, 30;
	shf.l.wrap.b32 	%r2925, %r2921, %r2920, 30;
	mov.b64 	%rd3960, {%r2925, %r2924};
	xor.b64  	%rd3961, %rd3959, %rd3960;
	shf.l.wrap.b32 	%r2926, %r2920, %r2921, 25;
	shf.l.wrap.b32 	%r2927, %r2921, %r2920, 25;
	mov.b64 	%rd3962, {%r2927, %r2926};
	xor.b64  	%rd3963, %rd3961, %rd3962;
	and.b64  	%rd3964, %rd3932, %rd3895;
	or.b64  	%rd3965, %rd3932, %rd3895;
	and.b64  	%rd3966, %rd3965, %rd3858;
	or.b64  	%rd3967, %rd3966, %rd3964;
	add.s64 	%rd3968, %rd3967, %rd3963;
	add.s64 	%rd3969, %rd3968, %rd3957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd3908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd3908;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 19;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 19;
	mov.b64 	%rd3970, {%r2931, %r2930};
	shf.l.wrap.b32 	%r2932, %r2928, %r2929, 3;
	shf.l.wrap.b32 	%r2933, %r2929, %r2928, 3;
	mov.b64 	%rd3971, {%r2933, %r2932};
	xor.b64  	%rd3972, %rd3970, %rd3971;
	shr.u64 	%rd3973, %rd3908, 6;
	xor.b64  	%rd3974, %rd3972, %rd3973;
	shf.r.wrap.b32 	%r2934, %r2591, %r2590, 1;
	shf.r.wrap.b32 	%r2935, %r2590, %r2591, 1;
	mov.b64 	%rd3975, {%r2935, %r2934};
	shf.r.wrap.b32 	%r2936, %r2591, %r2590, 8;
	shf.r.wrap.b32 	%r2937, %r2590, %r2591, 8;
	mov.b64 	%rd3976, {%r2937, %r2936};
	xor.b64  	%rd3977, %rd3975, %rd3976;
	shr.u64 	%rd3978, %rd3427, 7;
	xor.b64  	%rd3979, %rd3977, %rd3978;
	add.s64 	%rd3980, %rd3974, %rd3390;
	add.s64 	%rd3981, %rd3980, %rd3723;
	add.s64 	%rd3982, %rd3981, %rd3979;
	add.s64 	%rd3983, %rd3982, %rd3847;
	xor.b64  	%rd3984, %rd3921, %rd3884;
	and.b64  	%rd3985, %rd3958, %rd3984;
	xor.b64  	%rd3986, %rd3985, %rd3884;
	add.s64 	%rd3987, %rd3983, %rd3986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd3958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2939}, %rd3958;
	}
	shf.r.wrap.b32 	%r2940, %r2939, %r2938, 14;
	shf.r.wrap.b32 	%r2941, %r2938, %r2939, 14;
	mov.b64 	%rd3988, {%r2941, %r2940};
	shf.r.wrap.b32 	%r2942, %r2939, %r2938, 18;
	shf.r.wrap.b32 	%r2943, %r2938, %r2939, 18;
	mov.b64 	%rd3989, {%r2943, %r2942};
	xor.b64  	%rd3990, %rd3988, %rd3989;
	shf.l.wrap.b32 	%r2944, %r2938, %r2939, 23;
	shf.l.wrap.b32 	%r2945, %r2939, %r2938, 23;
	mov.b64 	%rd3991, {%r2945, %r2944};
	xor.b64  	%rd3992, %rd3990, %rd3991;
	add.s64 	%rd3993, %rd3987, %rd3992;
	add.s64 	%rd3994, %rd3993, 748580250866718886;
	add.s64 	%rd3995, %rd3994, %rd3858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd3969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd3969;
	}
	shf.r.wrap.b32 	%r2948, %r2947, %r2946, 28;
	shf.r.wrap.b32 	%r2949, %r2946, %r2947, 28;
	mov.b64 	%rd3996, {%r2949, %r2948};
	shf.l.wrap.b32 	%r2950, %r2946, %r2947, 30;
	shf.l.wrap.b32 	%r2951, %r2947, %r2946, 30;
	mov.b64 	%rd3997, {%r2951, %r2950};
	xor.b64  	%rd3998, %rd3996, %rd3997;
	shf.l.wrap.b32 	%r2952, %r2946, %r2947, 25;
	shf.l.wrap.b32 	%r2953, %r2947, %r2946, 25;
	mov.b64 	%rd3999, {%r2953, %r2952};
	xor.b64  	%rd4000, %rd3998, %rd3999;
	and.b64  	%rd4001, %rd3969, %rd3932;
	or.b64  	%rd4002, %rd3969, %rd3932;
	and.b64  	%rd4003, %rd4002, %rd3895;
	or.b64  	%rd4004, %rd4003, %rd4001;
	add.s64 	%rd4005, %rd4004, %rd4000;
	add.s64 	%rd4006, %rd4005, %rd3994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd3945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd3945;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 19;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 19;
	mov.b64 	%rd4007, {%r2957, %r2956};
	shf.l.wrap.b32 	%r2958, %r2954, %r2955, 3;
	shf.l.wrap.b32 	%r2959, %r2955, %r2954, 3;
	mov.b64 	%rd4008, {%r2959, %r2958};
	xor.b64  	%rd4009, %rd4007, %rd4008;
	shr.u64 	%rd4010, %rd3945, 6;
	xor.b64  	%rd4011, %rd4009, %rd4010;
	shf.r.wrap.b32 	%r2960, %r2617, %r2616, 1;
	shf.r.wrap.b32 	%r2961, %r2616, %r2617, 1;
	mov.b64 	%rd4012, {%r2961, %r2960};
	shf.r.wrap.b32 	%r2962, %r2617, %r2616, 8;
	shf.r.wrap.b32 	%r2963, %r2616, %r2617, 8;
	mov.b64 	%rd4013, {%r2963, %r2962};
	xor.b64  	%rd4014, %rd4012, %rd4013;
	shr.u64 	%rd4015, %rd3464, 7;
	xor.b64  	%rd4016, %rd4014, %rd4015;
	add.s64 	%rd4017, %rd4011, %rd3427;
	add.s64 	%rd4018, %rd4017, %rd3760;
	add.s64 	%rd4019, %rd4018, %rd4016;
	add.s64 	%rd4020, %rd4019, %rd3884;
	xor.b64  	%rd4021, %rd3958, %rd3921;
	and.b64  	%rd4022, %rd3995, %rd4021;
	xor.b64  	%rd4023, %rd4022, %rd3921;
	add.s64 	%rd4024, %rd4020, %rd4023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2964,%dummy}, %rd3995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2965}, %rd3995;
	}
	shf.r.wrap.b32 	%r2966, %r2965, %r2964, 14;
	shf.r.wrap.b32 	%r2967, %r2964, %r2965, 14;
	mov.b64 	%rd4025, {%r2967, %r2966};
	shf.r.wrap.b32 	%r2968, %r2965, %r2964, 18;
	shf.r.wrap.b32 	%r2969, %r2964, %r2965, 18;
	mov.b64 	%rd4026, {%r2969, %r2968};
	xor.b64  	%rd4027, %rd4025, %rd4026;
	shf.l.wrap.b32 	%r2970, %r2964, %r2965, 23;
	shf.l.wrap.b32 	%r2971, %r2965, %r2964, 23;
	mov.b64 	%rd4028, {%r2971, %r2970};
	xor.b64  	%rd4029, %rd4027, %rd4028;
	add.s64 	%rd4030, %rd4024, %rd4029;
	add.s64 	%rd4031, %rd4030, 1242879168328830382;
	add.s64 	%rd4032, %rd4031, %rd3895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2972,%dummy}, %rd4006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2973}, %rd4006;
	}
	shf.r.wrap.b32 	%r2974, %r2973, %r2972, 28;
	shf.r.wrap.b32 	%r2975, %r2972, %r2973, 28;
	mov.b64 	%rd4033, {%r2975, %r2974};
	shf.l.wrap.b32 	%r2976, %r2972, %r2973, 30;
	shf.l.wrap.b32 	%r2977, %r2973, %r2972, 30;
	mov.b64 	%rd4034, {%r2977, %r2976};
	xor.b64  	%rd4035, %rd4033, %rd4034;
	shf.l.wrap.b32 	%r2978, %r2972, %r2973, 25;
	shf.l.wrap.b32 	%r2979, %r2973, %r2972, 25;
	mov.b64 	%rd4036, {%r2979, %r2978};
	xor.b64  	%rd4037, %rd4035, %rd4036;
	and.b64  	%rd4038, %rd4006, %rd3969;
	or.b64  	%rd4039, %rd4006, %rd3969;
	and.b64  	%rd4040, %rd4039, %rd3932;
	or.b64  	%rd4041, %rd4040, %rd4038;
	add.s64 	%rd4042, %rd4041, %rd4037;
	add.s64 	%rd4043, %rd4042, %rd4031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2980,%dummy}, %rd3982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd3982;
	}
	shf.r.wrap.b32 	%r2982, %r2981, %r2980, 19;
	shf.r.wrap.b32 	%r2983, %r2980, %r2981, 19;
	mov.b64 	%rd4044, {%r2983, %r2982};
	shf.l.wrap.b32 	%r2984, %r2980, %r2981, 3;
	shf.l.wrap.b32 	%r2985, %r2981, %r2980, 3;
	mov.b64 	%rd4045, {%r2985, %r2984};
	xor.b64  	%rd4046, %rd4044, %rd4045;
	shr.u64 	%rd4047, %rd3982, 6;
	xor.b64  	%rd4048, %rd4046, %rd4047;
	shf.r.wrap.b32 	%r2986, %r2643, %r2642, 1;
	shf.r.wrap.b32 	%r2987, %r2642, %r2643, 1;
	mov.b64 	%rd4049, {%r2987, %r2986};
	shf.r.wrap.b32 	%r2988, %r2643, %r2642, 8;
	shf.r.wrap.b32 	%r2989, %r2642, %r2643, 8;
	mov.b64 	%rd4050, {%r2989, %r2988};
	xor.b64  	%rd4051, %rd4049, %rd4050;
	shr.u64 	%rd4052, %rd3501, 7;
	xor.b64  	%rd4053, %rd4051, %rd4052;
	add.s64 	%rd4054, %rd4048, %rd3464;
	add.s64 	%rd4055, %rd4054, %rd3797;
	add.s64 	%rd4056, %rd4055, %rd4053;
	add.s64 	%rd4057, %rd4056, %rd3921;
	xor.b64  	%rd4058, %rd3995, %rd3958;
	and.b64  	%rd4059, %rd4032, %rd4058;
	xor.b64  	%rd4060, %rd4059, %rd3958;
	add.s64 	%rd4061, %rd4057, %rd4060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd4032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2991}, %rd4032;
	}
	shf.r.wrap.b32 	%r2992, %r2991, %r2990, 14;
	shf.r.wrap.b32 	%r2993, %r2990, %r2991, 14;
	mov.b64 	%rd4062, {%r2993, %r2992};
	shf.r.wrap.b32 	%r2994, %r2991, %r2990, 18;
	shf.r.wrap.b32 	%r2995, %r2990, %r2991, 18;
	mov.b64 	%rd4063, {%r2995, %r2994};
	xor.b64  	%rd4064, %rd4062, %rd4063;
	shf.l.wrap.b32 	%r2996, %r2990, %r2991, 23;
	shf.l.wrap.b32 	%r2997, %r2991, %r2990, 23;
	mov.b64 	%rd4065, {%r2997, %r2996};
	xor.b64  	%rd4066, %rd4064, %rd4065;
	add.s64 	%rd4067, %rd4061, %rd4066;
	add.s64 	%rd4068, %rd4067, 1977374033974150939;
	add.s64 	%rd4069, %rd4068, %rd3932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2998,%dummy}, %rd4043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2999}, %rd4043;
	}
	shf.r.wrap.b32 	%r3000, %r2999, %r2998, 28;
	shf.r.wrap.b32 	%r3001, %r2998, %r2999, 28;
	mov.b64 	%rd4070, {%r3001, %r3000};
	shf.l.wrap.b32 	%r3002, %r2998, %r2999, 30;
	shf.l.wrap.b32 	%r3003, %r2999, %r2998, 30;
	mov.b64 	%rd4071, {%r3003, %r3002};
	xor.b64  	%rd4072, %rd4070, %rd4071;
	shf.l.wrap.b32 	%r3004, %r2998, %r2999, 25;
	shf.l.wrap.b32 	%r3005, %r2999, %r2998, 25;
	mov.b64 	%rd4073, {%r3005, %r3004};
	xor.b64  	%rd4074, %rd4072, %rd4073;
	and.b64  	%rd4075, %rd4043, %rd4006;
	or.b64  	%rd4076, %rd4043, %rd4006;
	and.b64  	%rd4077, %rd4076, %rd3969;
	or.b64  	%rd4078, %rd4077, %rd4075;
	add.s64 	%rd4079, %rd4078, %rd4074;
	add.s64 	%rd4080, %rd4079, %rd4068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd4019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3007}, %rd4019;
	}
	shf.r.wrap.b32 	%r3008, %r3007, %r3006, 19;
	shf.r.wrap.b32 	%r3009, %r3006, %r3007, 19;
	mov.b64 	%rd4081, {%r3009, %r3008};
	shf.l.wrap.b32 	%r3010, %r3006, %r3007, 3;
	shf.l.wrap.b32 	%r3011, %r3007, %r3006, 3;
	mov.b64 	%rd4082, {%r3011, %r3010};
	xor.b64  	%rd4083, %rd4081, %rd4082;
	shr.u64 	%rd4084, %rd4019, 6;
	xor.b64  	%rd4085, %rd4083, %rd4084;
	shf.r.wrap.b32 	%r3012, %r2669, %r2668, 1;
	shf.r.wrap.b32 	%r3013, %r2668, %r2669, 1;
	mov.b64 	%rd4086, {%r3013, %r3012};
	shf.r.wrap.b32 	%r3014, %r2669, %r2668, 8;
	shf.r.wrap.b32 	%r3015, %r2668, %r2669, 8;
	mov.b64 	%rd4087, {%r3015, %r3014};
	xor.b64  	%rd4088, %rd4086, %rd4087;
	shr.u64 	%rd4089, %rd3538, 7;
	xor.b64  	%rd4090, %rd4088, %rd4089;
	add.s64 	%rd4091, %rd4085, %rd3501;
	add.s64 	%rd4092, %rd4091, %rd3834;
	add.s64 	%rd4093, %rd4092, %rd4090;
	add.s64 	%rd4094, %rd4093, %rd3958;
	xor.b64  	%rd4095, %rd4032, %rd3995;
	and.b64  	%rd4096, %rd4069, %rd4095;
	xor.b64  	%rd4097, %rd4096, %rd3995;
	add.s64 	%rd4098, %rd4094, %rd4097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3016,%dummy}, %rd4069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3017}, %rd4069;
	}
	shf.r.wrap.b32 	%r3018, %r3017, %r3016, 14;
	shf.r.wrap.b32 	%r3019, %r3016, %r3017, 14;
	mov.b64 	%rd4099, {%r3019, %r3018};
	shf.r.wrap.b32 	%r3020, %r3017, %r3016, 18;
	shf.r.wrap.b32 	%r3021, %r3016, %r3017, 18;
	mov.b64 	%rd4100, {%r3021, %r3020};
	xor.b64  	%rd4101, %rd4099, %rd4100;
	shf.l.wrap.b32 	%r3022, %r3016, %r3017, 23;
	shf.l.wrap.b32 	%r3023, %r3017, %r3016, 23;
	mov.b64 	%rd4102, {%r3023, %r3022};
	xor.b64  	%rd4103, %rd4101, %rd4102;
	add.s64 	%rd4104, %rd4098, %rd4103;
	add.s64 	%rd4105, %rd4104, 2944078676154940804;
	add.s64 	%rd4106, %rd4105, %rd3969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3024,%dummy}, %rd4080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3025}, %rd4080;
	}
	shf.r.wrap.b32 	%r3026, %r3025, %r3024, 28;
	shf.r.wrap.b32 	%r3027, %r3024, %r3025, 28;
	mov.b64 	%rd4107, {%r3027, %r3026};
	shf.l.wrap.b32 	%r3028, %r3024, %r3025, 30;
	shf.l.wrap.b32 	%r3029, %r3025, %r3024, 30;
	mov.b64 	%rd4108, {%r3029, %r3028};
	xor.b64  	%rd4109, %rd4107, %rd4108;
	shf.l.wrap.b32 	%r3030, %r3024, %r3025, 25;
	shf.l.wrap.b32 	%r3031, %r3025, %r3024, 25;
	mov.b64 	%rd4110, {%r3031, %r3030};
	xor.b64  	%rd4111, %rd4109, %rd4110;
	and.b64  	%rd4112, %rd4080, %rd4043;
	or.b64  	%rd4113, %rd4080, %rd4043;
	and.b64  	%rd4114, %rd4113, %rd4006;
	or.b64  	%rd4115, %rd4114, %rd4112;
	add.s64 	%rd4116, %rd4115, %rd4111;
	add.s64 	%rd4117, %rd4116, %rd4105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3032,%dummy}, %rd4056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3033}, %rd4056;
	}
	shf.r.wrap.b32 	%r3034, %r3033, %r3032, 19;
	shf.r.wrap.b32 	%r3035, %r3032, %r3033, 19;
	mov.b64 	%rd4118, {%r3035, %r3034};
	shf.l.wrap.b32 	%r3036, %r3032, %r3033, 3;
	shf.l.wrap.b32 	%r3037, %r3033, %r3032, 3;
	mov.b64 	%rd4119, {%r3037, %r3036};
	xor.b64  	%rd4120, %rd4118, %rd4119;
	shr.u64 	%rd4121, %rd4056, 6;
	xor.b64  	%rd4122, %rd4120, %rd4121;
	shf.r.wrap.b32 	%r3038, %r2695, %r2694, 1;
	shf.r.wrap.b32 	%r3039, %r2694, %r2695, 1;
	mov.b64 	%rd4123, {%r3039, %r3038};
	shf.r.wrap.b32 	%r3040, %r2695, %r2694, 8;
	shf.r.wrap.b32 	%r3041, %r2694, %r2695, 8;
	mov.b64 	%rd4124, {%r3041, %r3040};
	xor.b64  	%rd4125, %rd4123, %rd4124;
	shr.u64 	%rd4126, %rd3575, 7;
	xor.b64  	%rd4127, %rd4125, %rd4126;
	add.s64 	%rd4128, %rd4122, %rd3538;
	add.s64 	%rd4129, %rd4128, %rd3871;
	add.s64 	%rd4130, %rd4129, %rd4127;
	add.s64 	%rd4131, %rd4130, %rd3995;
	xor.b64  	%rd4132, %rd4069, %rd4032;
	and.b64  	%rd4133, %rd4106, %rd4132;
	xor.b64  	%rd4134, %rd4133, %rd4032;
	add.s64 	%rd4135, %rd4131, %rd4134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd4106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3043}, %rd4106;
	}
	shf.r.wrap.b32 	%r3044, %r3043, %r3042, 14;
	shf.r.wrap.b32 	%r3045, %r3042, %r3043, 14;
	mov.b64 	%rd4136, {%r3045, %r3044};
	shf.r.wrap.b32 	%r3046, %r3043, %r3042, 18;
	shf.r.wrap.b32 	%r3047, %r3042, %r3043, 18;
	mov.b64 	%rd4137, {%r3047, %r3046};
	xor.b64  	%rd4138, %rd4136, %rd4137;
	shf.l.wrap.b32 	%r3048, %r3042, %r3043, 23;
	shf.l.wrap.b32 	%r3049, %r3043, %r3042, 23;
	mov.b64 	%rd4139, {%r3049, %r3048};
	xor.b64  	%rd4140, %rd4138, %rd4139;
	add.s64 	%rd4141, %rd4135, %rd4140;
	add.s64 	%rd4142, %rd4141, 3659926193048069267;
	add.s64 	%rd4143, %rd4142, %rd4006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd4117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3051}, %rd4117;
	}
	shf.r.wrap.b32 	%r3052, %r3051, %r3050, 28;
	shf.r.wrap.b32 	%r3053, %r3050, %r3051, 28;
	mov.b64 	%rd4144, {%r3053, %r3052};
	shf.l.wrap.b32 	%r3054, %r3050, %r3051, 30;
	shf.l.wrap.b32 	%r3055, %r3051, %r3050, 30;
	mov.b64 	%rd4145, {%r3055, %r3054};
	xor.b64  	%rd4146, %rd4144, %rd4145;
	shf.l.wrap.b32 	%r3056, %r3050, %r3051, 25;
	shf.l.wrap.b32 	%r3057, %r3051, %r3050, 25;
	mov.b64 	%rd4147, {%r3057, %r3056};
	xor.b64  	%rd4148, %rd4146, %rd4147;
	and.b64  	%rd4149, %rd4117, %rd4080;
	or.b64  	%rd4150, %rd4117, %rd4080;
	and.b64  	%rd4151, %rd4150, %rd4043;
	or.b64  	%rd4152, %rd4151, %rd4149;
	add.s64 	%rd4153, %rd4152, %rd4148;
	add.s64 	%rd4154, %rd4153, %rd4142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3058,%dummy}, %rd4093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3059}, %rd4093;
	}
	shf.r.wrap.b32 	%r3060, %r3059, %r3058, 19;
	shf.r.wrap.b32 	%r3061, %r3058, %r3059, 19;
	mov.b64 	%rd4155, {%r3061, %r3060};
	shf.l.wrap.b32 	%r3062, %r3058, %r3059, 3;
	shf.l.wrap.b32 	%r3063, %r3059, %r3058, 3;
	mov.b64 	%rd4156, {%r3063, %r3062};
	xor.b64  	%rd4157, %rd4155, %rd4156;
	shr.u64 	%rd4158, %rd4093, 6;
	xor.b64  	%rd4159, %rd4157, %rd4158;
	shf.r.wrap.b32 	%r3064, %r2721, %r2720, 1;
	shf.r.wrap.b32 	%r3065, %r2720, %r2721, 1;
	mov.b64 	%rd4160, {%r3065, %r3064};
	shf.r.wrap.b32 	%r3066, %r2721, %r2720, 8;
	shf.r.wrap.b32 	%r3067, %r2720, %r2721, 8;
	mov.b64 	%rd4161, {%r3067, %r3066};
	xor.b64  	%rd4162, %rd4160, %rd4161;
	shr.u64 	%rd4163, %rd3612, 7;
	xor.b64  	%rd4164, %rd4162, %rd4163;
	add.s64 	%rd4165, %rd4159, %rd3575;
	add.s64 	%rd4166, %rd4165, %rd3908;
	add.s64 	%rd4167, %rd4166, %rd4164;
	add.s64 	%rd4168, %rd4167, %rd4032;
	xor.b64  	%rd4169, %rd4106, %rd4069;
	and.b64  	%rd4170, %rd4143, %rd4169;
	xor.b64  	%rd4171, %rd4170, %rd4069;
	add.s64 	%rd4172, %rd4168, %rd4171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3068,%dummy}, %rd4143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3069}, %rd4143;
	}
	shf.r.wrap.b32 	%r3070, %r3069, %r3068, 14;
	shf.r.wrap.b32 	%r3071, %r3068, %r3069, 14;
	mov.b64 	%rd4173, {%r3071, %r3070};
	shf.r.wrap.b32 	%r3072, %r3069, %r3068, 18;
	shf.r.wrap.b32 	%r3073, %r3068, %r3069, 18;
	mov.b64 	%rd4174, {%r3073, %r3072};
	xor.b64  	%rd4175, %rd4173, %rd4174;
	shf.l.wrap.b32 	%r3074, %r3068, %r3069, 23;
	shf.l.wrap.b32 	%r3075, %r3069, %r3068, 23;
	mov.b64 	%rd4176, {%r3075, %r3074};
	xor.b64  	%rd4177, %rd4175, %rd4176;
	add.s64 	%rd4178, %rd4172, %rd4177;
	add.s64 	%rd4179, %rd4178, 4368137639120453308;
	add.s64 	%rd4180, %rd4179, %rd4043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3076,%dummy}, %rd4154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3077}, %rd4154;
	}
	shf.r.wrap.b32 	%r3078, %r3077, %r3076, 28;
	shf.r.wrap.b32 	%r3079, %r3076, %r3077, 28;
	mov.b64 	%rd4181, {%r3079, %r3078};
	shf.l.wrap.b32 	%r3080, %r3076, %r3077, 30;
	shf.l.wrap.b32 	%r3081, %r3077, %r3076, 30;
	mov.b64 	%rd4182, {%r3081, %r3080};
	xor.b64  	%rd4183, %rd4181, %rd4182;
	shf.l.wrap.b32 	%r3082, %r3076, %r3077, 25;
	shf.l.wrap.b32 	%r3083, %r3077, %r3076, 25;
	mov.b64 	%rd4184, {%r3083, %r3082};
	xor.b64  	%rd4185, %rd4183, %rd4184;
	and.b64  	%rd4186, %rd4154, %rd4117;
	or.b64  	%rd4187, %rd4154, %rd4117;
	and.b64  	%rd4188, %rd4187, %rd4080;
	or.b64  	%rd4189, %rd4188, %rd4186;
	add.s64 	%rd4190, %rd4189, %rd4185;
	add.s64 	%rd4191, %rd4190, %rd4179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3084,%dummy}, %rd4130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3085}, %rd4130;
	}
	shf.r.wrap.b32 	%r3086, %r3085, %r3084, 19;
	shf.r.wrap.b32 	%r3087, %r3084, %r3085, 19;
	mov.b64 	%rd4192, {%r3087, %r3086};
	shf.l.wrap.b32 	%r3088, %r3084, %r3085, 3;
	shf.l.wrap.b32 	%r3089, %r3085, %r3084, 3;
	mov.b64 	%rd4193, {%r3089, %r3088};
	xor.b64  	%rd4194, %rd4192, %rd4193;
	shr.u64 	%rd4195, %rd4130, 6;
	xor.b64  	%rd4196, %rd4194, %rd4195;
	shf.r.wrap.b32 	%r3090, %r2747, %r2746, 1;
	shf.r.wrap.b32 	%r3091, %r2746, %r2747, 1;
	mov.b64 	%rd4197, {%r3091, %r3090};
	shf.r.wrap.b32 	%r3092, %r2747, %r2746, 8;
	shf.r.wrap.b32 	%r3093, %r2746, %r2747, 8;
	mov.b64 	%rd4198, {%r3093, %r3092};
	xor.b64  	%rd4199, %rd4197, %rd4198;
	shr.u64 	%rd4200, %rd3649, 7;
	xor.b64  	%rd4201, %rd4199, %rd4200;
	add.s64 	%rd4202, %rd4196, %rd3612;
	add.s64 	%rd4203, %rd4202, %rd3945;
	add.s64 	%rd4204, %rd4203, %rd4201;
	add.s64 	%rd4205, %rd4204, %rd4069;
	xor.b64  	%rd4206, %rd4143, %rd4106;
	and.b64  	%rd4207, %rd4180, %rd4206;
	xor.b64  	%rd4208, %rd4207, %rd4106;
	add.s64 	%rd4209, %rd4205, %rd4208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3094,%dummy}, %rd4180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3095}, %rd4180;
	}
	shf.r.wrap.b32 	%r3096, %r3095, %r3094, 14;
	shf.r.wrap.b32 	%r3097, %r3094, %r3095, 14;
	mov.b64 	%rd4210, {%r3097, %r3096};
	shf.r.wrap.b32 	%r3098, %r3095, %r3094, 18;
	shf.r.wrap.b32 	%r3099, %r3094, %r3095, 18;
	mov.b64 	%rd4211, {%r3099, %r3098};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	shf.l.wrap.b32 	%r3100, %r3094, %r3095, 23;
	shf.l.wrap.b32 	%r3101, %r3095, %r3094, 23;
	mov.b64 	%rd4213, {%r3101, %r3100};
	xor.b64  	%rd4214, %rd4212, %rd4213;
	add.s64 	%rd4215, %rd4209, %rd4214;
	add.s64 	%rd4216, %rd4215, 4836135668995329356;
	add.s64 	%rd4217, %rd4216, %rd4080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3102,%dummy}, %rd4191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3103}, %rd4191;
	}
	shf.r.wrap.b32 	%r3104, %r3103, %r3102, 28;
	shf.r.wrap.b32 	%r3105, %r3102, %r3103, 28;
	mov.b64 	%rd4218, {%r3105, %r3104};
	shf.l.wrap.b32 	%r3106, %r3102, %r3103, 30;
	shf.l.wrap.b32 	%r3107, %r3103, %r3102, 30;
	mov.b64 	%rd4219, {%r3107, %r3106};
	xor.b64  	%rd4220, %rd4218, %rd4219;
	shf.l.wrap.b32 	%r3108, %r3102, %r3103, 25;
	shf.l.wrap.b32 	%r3109, %r3103, %r3102, 25;
	mov.b64 	%rd4221, {%r3109, %r3108};
	xor.b64  	%rd4222, %rd4220, %rd4221;
	and.b64  	%rd4223, %rd4191, %rd4154;
	or.b64  	%rd4224, %rd4191, %rd4154;
	and.b64  	%rd4225, %rd4224, %rd4117;
	or.b64  	%rd4226, %rd4225, %rd4223;
	add.s64 	%rd4227, %rd4226, %rd4222;
	add.s64 	%rd4228, %rd4227, %rd4216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd4167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd4167;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 19;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 19;
	mov.b64 	%rd4229, {%r3113, %r3112};
	shf.l.wrap.b32 	%r3114, %r3110, %r3111, 3;
	shf.l.wrap.b32 	%r3115, %r3111, %r3110, 3;
	mov.b64 	%rd4230, {%r3115, %r3114};
	xor.b64  	%rd4231, %rd4229, %rd4230;
	shr.u64 	%rd4232, %rd4167, 6;
	xor.b64  	%rd4233, %rd4231, %rd4232;
	shf.r.wrap.b32 	%r3116, %r2773, %r2772, 1;
	shf.r.wrap.b32 	%r3117, %r2772, %r2773, 1;
	mov.b64 	%rd4234, {%r3117, %r3116};
	shf.r.wrap.b32 	%r3118, %r2773, %r2772, 8;
	shf.r.wrap.b32 	%r3119, %r2772, %r2773, 8;
	mov.b64 	%rd4235, {%r3119, %r3118};
	xor.b64  	%rd4236, %rd4234, %rd4235;
	shr.u64 	%rd4237, %rd3686, 7;
	xor.b64  	%rd4238, %rd4236, %rd4237;
	add.s64 	%rd4239, %rd4233, %rd3649;
	add.s64 	%rd4240, %rd4239, %rd3982;
	add.s64 	%rd4241, %rd4240, %rd4238;
	add.s64 	%rd4242, %rd4241, %rd4106;
	xor.b64  	%rd4243, %rd4180, %rd4143;
	and.b64  	%rd4244, %rd4217, %rd4243;
	xor.b64  	%rd4245, %rd4244, %rd4143;
	add.s64 	%rd4246, %rd4242, %rd4245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3120,%dummy}, %rd4217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3121}, %rd4217;
	}
	shf.r.wrap.b32 	%r3122, %r3121, %r3120, 14;
	shf.r.wrap.b32 	%r3123, %r3120, %r3121, 14;
	mov.b64 	%rd4247, {%r3123, %r3122};
	shf.r.wrap.b32 	%r3124, %r3121, %r3120, 18;
	shf.r.wrap.b32 	%r3125, %r3120, %r3121, 18;
	mov.b64 	%rd4248, {%r3125, %r3124};
	xor.b64  	%rd4249, %rd4247, %rd4248;
	shf.l.wrap.b32 	%r3126, %r3120, %r3121, 23;
	shf.l.wrap.b32 	%r3127, %r3121, %r3120, 23;
	mov.b64 	%rd4250, {%r3127, %r3126};
	xor.b64  	%rd4251, %rd4249, %rd4250;
	add.s64 	%rd4252, %rd4246, %rd4251;
	add.s64 	%rd4253, %rd4252, 5532061633213252278;
	add.s64 	%rd4254, %rd4253, %rd4117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3128,%dummy}, %rd4228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3129}, %rd4228;
	}
	shf.r.wrap.b32 	%r3130, %r3129, %r3128, 28;
	shf.r.wrap.b32 	%r3131, %r3128, %r3129, 28;
	mov.b64 	%rd4255, {%r3131, %r3130};
	shf.l.wrap.b32 	%r3132, %r3128, %r3129, 30;
	shf.l.wrap.b32 	%r3133, %r3129, %r3128, 30;
	mov.b64 	%rd4256, {%r3133, %r3132};
	xor.b64  	%rd4257, %rd4255, %rd4256;
	shf.l.wrap.b32 	%r3134, %r3128, %r3129, 25;
	shf.l.wrap.b32 	%r3135, %r3129, %r3128, 25;
	mov.b64 	%rd4258, {%r3135, %r3134};
	xor.b64  	%rd4259, %rd4257, %rd4258;
	and.b64  	%rd4260, %rd4228, %rd4191;
	or.b64  	%rd4261, %rd4228, %rd4191;
	and.b64  	%rd4262, %rd4261, %rd4154;
	or.b64  	%rd4263, %rd4262, %rd4260;
	add.s64 	%rd4264, %rd4263, %rd4259;
	add.s64 	%rd4265, %rd4264, %rd4253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3136,%dummy}, %rd4204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd4204;
	}
	shf.r.wrap.b32 	%r3138, %r3137, %r3136, 19;
	shf.r.wrap.b32 	%r3139, %r3136, %r3137, 19;
	mov.b64 	%rd4266, {%r3139, %r3138};
	shf.l.wrap.b32 	%r3140, %r3136, %r3137, 3;
	shf.l.wrap.b32 	%r3141, %r3137, %r3136, 3;
	mov.b64 	%rd4267, {%r3141, %r3140};
	xor.b64  	%rd4268, %rd4266, %rd4267;
	shr.u64 	%rd4269, %rd4204, 6;
	xor.b64  	%rd4270, %rd4268, %rd4269;
	shf.r.wrap.b32 	%r3142, %r2799, %r2798, 1;
	shf.r.wrap.b32 	%r3143, %r2798, %r2799, 1;
	mov.b64 	%rd4271, {%r3143, %r3142};
	shf.r.wrap.b32 	%r3144, %r2799, %r2798, 8;
	shf.r.wrap.b32 	%r3145, %r2798, %r2799, 8;
	mov.b64 	%rd4272, {%r3145, %r3144};
	xor.b64  	%rd4273, %rd4271, %rd4272;
	shr.u64 	%rd4274, %rd3723, 7;
	xor.b64  	%rd4275, %rd4273, %rd4274;
	add.s64 	%rd4276, %rd4270, %rd3686;
	add.s64 	%rd4277, %rd4276, %rd4019;
	add.s64 	%rd4278, %rd4277, %rd4275;
	add.s64 	%rd4279, %rd4278, %rd4143;
	xor.b64  	%rd4280, %rd4217, %rd4180;
	and.b64  	%rd4281, %rd4254, %rd4280;
	xor.b64  	%rd4282, %rd4281, %rd4180;
	add.s64 	%rd4283, %rd4279, %rd4282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3146,%dummy}, %rd4254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd4254;
	}
	shf.r.wrap.b32 	%r3148, %r3147, %r3146, 14;
	shf.r.wrap.b32 	%r3149, %r3146, %r3147, 14;
	mov.b64 	%rd4284, {%r3149, %r3148};
	shf.r.wrap.b32 	%r3150, %r3147, %r3146, 18;
	shf.r.wrap.b32 	%r3151, %r3146, %r3147, 18;
	mov.b64 	%rd4285, {%r3151, %r3150};
	xor.b64  	%rd4286, %rd4284, %rd4285;
	shf.l.wrap.b32 	%r3152, %r3146, %r3147, 23;
	shf.l.wrap.b32 	%r3153, %r3147, %r3146, 23;
	mov.b64 	%rd4287, {%r3153, %r3152};
	xor.b64  	%rd4288, %rd4286, %rd4287;
	add.s64 	%rd4289, %rd4283, %rd4288;
	add.s64 	%rd4290, %rd4289, 6448918945643986474;
	add.s64 	%rd4291, %rd4290, %rd4154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3154,%dummy}, %rd4265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3155}, %rd4265;
	}
	shf.r.wrap.b32 	%r3156, %r3155, %r3154, 28;
	shf.r.wrap.b32 	%r3157, %r3154, %r3155, 28;
	mov.b64 	%rd4292, {%r3157, %r3156};
	shf.l.wrap.b32 	%r3158, %r3154, %r3155, 30;
	shf.l.wrap.b32 	%r3159, %r3155, %r3154, 30;
	mov.b64 	%rd4293, {%r3159, %r3158};
	xor.b64  	%rd4294, %rd4292, %rd4293;
	shf.l.wrap.b32 	%r3160, %r3154, %r3155, 25;
	shf.l.wrap.b32 	%r3161, %r3155, %r3154, 25;
	mov.b64 	%rd4295, {%r3161, %r3160};
	xor.b64  	%rd4296, %rd4294, %rd4295;
	and.b64  	%rd4297, %rd4265, %rd4228;
	or.b64  	%rd4298, %rd4265, %rd4228;
	and.b64  	%rd4299, %rd4298, %rd4191;
	or.b64  	%rd4300, %rd4299, %rd4297;
	add.s64 	%rd4301, %rd4300, %rd4296;
	add.s64 	%rd4302, %rd4301, %rd4290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd4241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3163}, %rd4241;
	}
	shf.r.wrap.b32 	%r3164, %r3163, %r3162, 19;
	shf.r.wrap.b32 	%r3165, %r3162, %r3163, 19;
	mov.b64 	%rd4303, {%r3165, %r3164};
	shf.l.wrap.b32 	%r3166, %r3162, %r3163, 3;
	shf.l.wrap.b32 	%r3167, %r3163, %r3162, 3;
	mov.b64 	%rd4304, {%r3167, %r3166};
	xor.b64  	%rd4305, %rd4303, %rd4304;
	shr.u64 	%rd4306, %rd4241, 6;
	xor.b64  	%rd4307, %rd4305, %rd4306;
	shf.r.wrap.b32 	%r3168, %r2825, %r2824, 1;
	shf.r.wrap.b32 	%r3169, %r2824, %r2825, 1;
	mov.b64 	%rd4308, {%r3169, %r3168};
	shf.r.wrap.b32 	%r3170, %r2825, %r2824, 8;
	shf.r.wrap.b32 	%r3171, %r2824, %r2825, 8;
	mov.b64 	%rd4309, {%r3171, %r3170};
	xor.b64  	%rd4310, %rd4308, %rd4309;
	shr.u64 	%rd4311, %rd3760, 7;
	xor.b64  	%rd4312, %rd4310, %rd4311;
	add.s64 	%rd4313, %rd4307, %rd3723;
	add.s64 	%rd4314, %rd4313, %rd4056;
	add.s64 	%rd4315, %rd4314, %rd4312;
	add.s64 	%rd4316, %rd4315, %rd4180;
	xor.b64  	%rd4317, %rd4254, %rd4217;
	and.b64  	%rd4318, %rd4291, %rd4317;
	xor.b64  	%rd4319, %rd4318, %rd4217;
	add.s64 	%rd4320, %rd4316, %rd4319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3172,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3173}, %rd4291;
	}
	shf.r.wrap.b32 	%r3174, %r3173, %r3172, 14;
	shf.r.wrap.b32 	%r3175, %r3172, %r3173, 14;
	mov.b64 	%rd4321, {%r3175, %r3174};
	shf.r.wrap.b32 	%r3176, %r3173, %r3172, 18;
	shf.r.wrap.b32 	%r3177, %r3172, %r3173, 18;
	mov.b64 	%rd4322, {%r3177, %r3176};
	xor.b64  	%rd4323, %rd4321, %rd4322;
	shf.l.wrap.b32 	%r3178, %r3172, %r3173, 23;
	shf.l.wrap.b32 	%r3179, %r3173, %r3172, 23;
	mov.b64 	%rd4324, {%r3179, %r3178};
	xor.b64  	%rd4325, %rd4323, %rd4324;
	add.s64 	%rd4326, %rd4320, %rd4325;
	add.s64 	%rd4327, %rd4326, 6902733635092675308;
	add.s64 	%rd4328, %rd4327, %rd4191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3180,%dummy}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3181}, %rd4302;
	}
	shf.r.wrap.b32 	%r3182, %r3181, %r3180, 28;
	shf.r.wrap.b32 	%r3183, %r3180, %r3181, 28;
	mov.b64 	%rd4329, {%r3183, %r3182};
	shf.l.wrap.b32 	%r3184, %r3180, %r3181, 30;
	shf.l.wrap.b32 	%r3185, %r3181, %r3180, 30;
	mov.b64 	%rd4330, {%r3185, %r3184};
	xor.b64  	%rd4331, %rd4329, %rd4330;
	shf.l.wrap.b32 	%r3186, %r3180, %r3181, 25;
	shf.l.wrap.b32 	%r3187, %r3181, %r3180, 25;
	mov.b64 	%rd4332, {%r3187, %r3186};
	xor.b64  	%rd4333, %rd4331, %rd4332;
	and.b64  	%rd4334, %rd4302, %rd4265;
	or.b64  	%rd4335, %rd4302, %rd4265;
	and.b64  	%rd4336, %rd4335, %rd4228;
	or.b64  	%rd4337, %rd4336, %rd4334;
	add.s64 	%rd4338, %rd4337, %rd4333;
	add.s64 	%rd4339, %rd4338, %rd4327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3188,%dummy}, %rd4278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3189}, %rd4278;
	}
	shf.r.wrap.b32 	%r3190, %r3189, %r3188, 19;
	shf.r.wrap.b32 	%r3191, %r3188, %r3189, 19;
	mov.b64 	%rd4340, {%r3191, %r3190};
	shf.l.wrap.b32 	%r3192, %r3188, %r3189, 3;
	shf.l.wrap.b32 	%r3193, %r3189, %r3188, 3;
	mov.b64 	%rd4341, {%r3193, %r3192};
	xor.b64  	%rd4342, %rd4340, %rd4341;
	shr.u64 	%rd4343, %rd4278, 6;
	xor.b64  	%rd4344, %rd4342, %rd4343;
	shf.r.wrap.b32 	%r3194, %r2851, %r2850, 1;
	shf.r.wrap.b32 	%r3195, %r2850, %r2851, 1;
	mov.b64 	%rd4345, {%r3195, %r3194};
	shf.r.wrap.b32 	%r3196, %r2851, %r2850, 8;
	shf.r.wrap.b32 	%r3197, %r2850, %r2851, 8;
	mov.b64 	%rd4346, {%r3197, %r3196};
	xor.b64  	%rd4347, %rd4345, %rd4346;
	shr.u64 	%rd4348, %rd3797, 7;
	xor.b64  	%rd4349, %rd4347, %rd4348;
	add.s64 	%rd4350, %rd4344, %rd3760;
	add.s64 	%rd4351, %rd4350, %rd4093;
	add.s64 	%rd4352, %rd4351, %rd4349;
	add.s64 	%rd4353, %rd4352, %rd4217;
	xor.b64  	%rd4354, %rd4291, %rd4254;
	and.b64  	%rd4355, %rd4328, %rd4354;
	xor.b64  	%rd4356, %rd4355, %rd4254;
	add.s64 	%rd4357, %rd4353, %rd4356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3198,%dummy}, %rd4328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3199}, %rd4328;
	}
	shf.r.wrap.b32 	%r3200, %r3199, %r3198, 14;
	shf.r.wrap.b32 	%r3201, %r3198, %r3199, 14;
	mov.b64 	%rd4358, {%r3201, %r3200};
	shf.r.wrap.b32 	%r3202, %r3199, %r3198, 18;
	shf.r.wrap.b32 	%r3203, %r3198, %r3199, 18;
	mov.b64 	%rd4359, {%r3203, %r3202};
	xor.b64  	%rd4360, %rd4358, %rd4359;
	shf.l.wrap.b32 	%r3204, %r3198, %r3199, 23;
	shf.l.wrap.b32 	%r3205, %r3199, %r3198, 23;
	mov.b64 	%rd4361, {%r3205, %r3204};
	xor.b64  	%rd4362, %rd4360, %rd4361;
	add.s64 	%rd4363, %rd4357, %rd4362;
	add.s64 	%rd4364, %rd4363, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3206,%dummy}, %rd4339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3207}, %rd4339;
	}
	shf.r.wrap.b32 	%r3208, %r3207, %r3206, 28;
	shf.r.wrap.b32 	%r3209, %r3206, %r3207, 28;
	mov.b64 	%rd4365, {%r3209, %r3208};
	shf.l.wrap.b32 	%r3210, %r3206, %r3207, 30;
	shf.l.wrap.b32 	%r3211, %r3207, %r3206, 30;
	mov.b64 	%rd4366, {%r3211, %r3210};
	xor.b64  	%rd4367, %rd4365, %rd4366;
	shf.l.wrap.b32 	%r3212, %r3206, %r3207, 25;
	shf.l.wrap.b32 	%r3213, %r3207, %r3206, 25;
	mov.b64 	%rd4368, {%r3213, %r3212};
	xor.b64  	%rd4369, %rd4367, %rd4368;
	and.b64  	%rd4370, %rd4339, %rd4302;
	or.b64  	%rd4371, %rd4339, %rd4302;
	and.b64  	%rd4372, %rd4371, %rd4265;
	or.b64  	%rd4373, %rd4372, %rd4370;
	add.s64 	%rd4374, %rd4369, %rd4373;
	add.s64 	%rd4375, %rd4374, %rd4364;
	add.s64 	%rd4376, %rd4375, 7640891576956012808;
	add.s64 	%rd4377, %rd4339, -4942790177534073029;
	add.s64 	%rd4378, %rd4302, 4354685564936845355;
	add.s64 	%rd4379, %rd4265, -6534734903238641935;
	add.s64 	%rd4380, %rd4228, %rd4364;
	add.s64 	%rd4381, %rd4380, 5840696475078001361;
	add.s64 	%rd4382, %rd4328, -7276294671716946913;
	add.s64 	%rd4383, %rd4291, 2270897969802886507;
	add.s64 	%rd4384, %rd4254, 6620516959819538809;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3214, %temp}, %rd4376;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3215}, %rd4376;
	}
	mov.u32 	%r3216, 291;
	mov.u32 	%r1290, 0;
	prmt.b32 	%r3217, %r3214, %r1290, %r3216;
	prmt.b32 	%r3218, %r3215, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3219, %temp}, %rd4377;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3220}, %rd4377;
	}
	prmt.b32 	%r3221, %r3219, %r1290, %r3216;
	prmt.b32 	%r3222, %r3220, %r1290, %r3216;
	mov.b64 	%rd4385, {%r3218, %r3217};
	mov.b64 	%rd4386, {%r3222, %r3221};
	st.local.v2.u64 	[%rd1+64], {%rd4385, %rd4386};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3223, %temp}, %rd4378;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3224}, %rd4378;
	}
	prmt.b32 	%r3225, %r3223, %r1290, %r3216;
	prmt.b32 	%r3226, %r3224, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3227, %temp}, %rd4379;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3228}, %rd4379;
	}
	prmt.b32 	%r3229, %r3227, %r1290, %r3216;
	prmt.b32 	%r3230, %r3228, %r1290, %r3216;
	mov.b64 	%rd4387, {%r3226, %r3225};
	mov.b64 	%rd4388, {%r3230, %r3229};
	st.local.v2.u64 	[%rd1+80], {%rd4387, %rd4388};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3231, %temp}, %rd4381;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3232}, %rd4381;
	}
	prmt.b32 	%r3233, %r3231, %r1290, %r3216;
	prmt.b32 	%r3234, %r3232, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3235, %temp}, %rd4382;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3236}, %rd4382;
	}
	prmt.b32 	%r3237, %r3235, %r1290, %r3216;
	prmt.b32 	%r3238, %r3236, %r1290, %r3216;
	mov.b64 	%rd4389, {%r3234, %r3233};
	mov.b64 	%rd4390, {%r3238, %r3237};
	st.local.v2.u64 	[%rd1+96], {%rd4389, %rd4390};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3239, %temp}, %rd4383;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3240}, %rd4383;
	}
	prmt.b32 	%r3241, %r3239, %r1290, %r3216;
	prmt.b32 	%r3242, %r3240, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3243, %temp}, %rd4384;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3244}, %rd4384;
	}
	prmt.b32 	%r3245, %r3243, %r1290, %r3216;
	prmt.b32 	%r3246, %r3244, %r1290, %r3216;
	mov.b64 	%rd4391, {%r3242, %r3241};
	mov.b64 	%rd4392, {%r3246, %r3245};
	st.local.v2.u64 	[%rd1+112], {%rd4391, %rd4392};
	add.s64 	%rd4393, %rd1876, -5786639512010213744;
	add.s64 	%rd4394, %rd4393, %rd1794;
	add.s64 	%rd4395, %rd1888, %rd4393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3247,%dummy}, %rd4394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3248}, %rd4394;
	}
	shf.r.wrap.b32 	%r3249, %r3248, %r3247, 14;
	shf.r.wrap.b32 	%r3250, %r3247, %r3248, 14;
	mov.b64 	%rd4396, {%r3250, %r3249};
	shf.r.wrap.b32 	%r3251, %r3248, %r3247, 18;
	shf.r.wrap.b32 	%r3252, %r3247, %r3248, 18;
	mov.b64 	%rd4397, {%r3252, %r3251};
	xor.b64  	%rd4398, %rd4396, %rd4397;
	shf.l.wrap.b32 	%r3253, %r3247, %r3248, 23;
	shf.l.wrap.b32 	%r3254, %r3248, %r3247, 23;
	mov.b64 	%rd4399, {%r3254, %r3253};
	xor.b64  	%rd4400, %rd4398, %rd4399;
	and.b64  	%rd4401, %rd4394, %rd1896;
	xor.b64  	%rd4402, %rd4401, %rd1831;
	add.s64 	%rd4403, %rd1890, %rd4402;
	add.s64 	%rd4404, %rd4403, %rd4400;
	add.s64 	%rd4405, %rd4404, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3255,%dummy}, %rd4395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3256}, %rd4395;
	}
	shf.r.wrap.b32 	%r3257, %r3256, %r3255, 28;
	shf.r.wrap.b32 	%r3258, %r3255, %r3256, 28;
	mov.b64 	%rd4406, {%r3258, %r3257};
	shf.l.wrap.b32 	%r3259, %r3255, %r3256, 30;
	shf.l.wrap.b32 	%r3260, %r3256, %r3255, 30;
	mov.b64 	%rd4407, {%r3260, %r3259};
	xor.b64  	%rd4408, %rd4406, %rd4407;
	shf.l.wrap.b32 	%r3261, %r3255, %r3256, 25;
	shf.l.wrap.b32 	%r3262, %r3256, %r3255, 25;
	mov.b64 	%rd4409, {%r3262, %r3261};
	xor.b64  	%rd4410, %rd4408, %rd4409;
	and.b64  	%rd4411, %rd4395, %rd1866;
	or.b64  	%rd4412, %rd4395, %rd1866;
	and.b64  	%rd4413, %rd4412, %rd1842;
	or.b64  	%rd4414, %rd4413, %rd4411;
	add.s64 	%rd4415, %rd4414, %rd4410;
	add.s64 	%rd4416, %rd4415, %rd4404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3263,%dummy}, %rd4405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3264}, %rd4405;
	}
	shf.r.wrap.b32 	%r3265, %r3264, %r3263, 14;
	shf.r.wrap.b32 	%r3266, %r3263, %r3264, 14;
	mov.b64 	%rd4417, {%r3266, %r3265};
	shf.r.wrap.b32 	%r3267, %r3264, %r3263, 18;
	shf.r.wrap.b32 	%r3268, %r3263, %r3264, 18;
	mov.b64 	%rd4418, {%r3268, %r3267};
	xor.b64  	%rd4419, %rd4417, %rd4418;
	shf.l.wrap.b32 	%r3269, %r3263, %r3264, 23;
	shf.l.wrap.b32 	%r3270, %r3264, %r3263, 23;
	mov.b64 	%rd4420, {%r3270, %r3269};
	xor.b64  	%rd4421, %rd4419, %rd4420;
	xor.b64  	%rd4422, %rd4394, %rd1855;
	and.b64  	%rd4423, %rd4405, %rd4422;
	xor.b64  	%rd4424, %rd4423, %rd1855;
	add.s64 	%rd4425, %rd1913, %rd4424;
	add.s64 	%rd4426, %rd4425, %rd4421;
	add.s64 	%rd4427, %rd4426, %rd1842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3271,%dummy}, %rd4416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3272}, %rd4416;
	}
	shf.r.wrap.b32 	%r3273, %r3272, %r3271, 28;
	shf.r.wrap.b32 	%r3274, %r3271, %r3272, 28;
	mov.b64 	%rd4428, {%r3274, %r3273};
	shf.l.wrap.b32 	%r3275, %r3271, %r3272, 30;
	shf.l.wrap.b32 	%r3276, %r3272, %r3271, 30;
	mov.b64 	%rd4429, {%r3276, %r3275};
	xor.b64  	%rd4430, %rd4428, %rd4429;
	shf.l.wrap.b32 	%r3277, %r3271, %r3272, 25;
	shf.l.wrap.b32 	%r3278, %r3272, %r3271, 25;
	mov.b64 	%rd4431, {%r3278, %r3277};
	xor.b64  	%rd4432, %rd4430, %rd4431;
	and.b64  	%rd4433, %rd4416, %rd4395;
	or.b64  	%rd4434, %rd4416, %rd4395;
	and.b64  	%rd4435, %rd4434, %rd1866;
	or.b64  	%rd4436, %rd4435, %rd4433;
	add.s64 	%rd4437, %rd4436, %rd4432;
	add.s64 	%rd4438, %rd4437, %rd4426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3279,%dummy}, %rd4427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3280}, %rd4427;
	}
	shf.r.wrap.b32 	%r3281, %r3280, %r3279, 14;
	shf.r.wrap.b32 	%r3282, %r3279, %r3280, 14;
	mov.b64 	%rd4439, {%r3282, %r3281};
	shf.r.wrap.b32 	%r3283, %r3280, %r3279, 18;
	shf.r.wrap.b32 	%r3284, %r3279, %r3280, 18;
	mov.b64 	%rd4440, {%r3284, %r3283};
	xor.b64  	%rd4441, %rd4439, %rd4440;
	shf.l.wrap.b32 	%r3285, %r3279, %r3280, 23;
	shf.l.wrap.b32 	%r3286, %r3280, %r3279, 23;
	mov.b64 	%rd4442, {%r3286, %r3285};
	xor.b64  	%rd4443, %rd4441, %rd4442;
	xor.b64  	%rd4444, %rd4405, %rd4394;
	and.b64  	%rd4445, %rd4427, %rd4444;
	xor.b64  	%rd4446, %rd4445, %rd4394;
	add.s64 	%rd4447, %rd1936, %rd4446;
	add.s64 	%rd4448, %rd4447, %rd4443;
	add.s64 	%rd4449, %rd4448, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3287,%dummy}, %rd4438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3288}, %rd4438;
	}
	shf.r.wrap.b32 	%r3289, %r3288, %r3287, 28;
	shf.r.wrap.b32 	%r3290, %r3287, %r3288, 28;
	mov.b64 	%rd4450, {%r3290, %r3289};
	shf.l.wrap.b32 	%r3291, %r3287, %r3288, 30;
	shf.l.wrap.b32 	%r3292, %r3288, %r3287, 30;
	mov.b64 	%rd4451, {%r3292, %r3291};
	xor.b64  	%rd4452, %rd4450, %rd4451;
	shf.l.wrap.b32 	%r3293, %r3287, %r3288, 25;
	shf.l.wrap.b32 	%r3294, %r3288, %r3287, 25;
	mov.b64 	%rd4453, {%r3294, %r3293};
	xor.b64  	%rd4454, %rd4452, %rd4453;
	and.b64  	%rd4455, %rd4438, %rd4416;
	or.b64  	%rd4456, %rd4438, %rd4416;
	and.b64  	%rd4457, %rd4456, %rd4395;
	or.b64  	%rd4458, %rd4457, %rd4455;
	add.s64 	%rd4459, %rd4458, %rd4454;
	add.s64 	%rd4460, %rd4459, %rd4448;
	xor.b64  	%rd4461, %rd4427, %rd4405;
	and.b64  	%rd4462, %rd4449, %rd4461;
	xor.b64  	%rd4463, %rd4462, %rd4405;
	add.s64 	%rd4464, %rd4394, %rd4463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3295,%dummy}, %rd4449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3296}, %rd4449;
	}
	shf.r.wrap.b32 	%r3297, %r3296, %r3295, 14;
	shf.r.wrap.b32 	%r3298, %r3295, %r3296, 14;
	mov.b64 	%rd4465, {%r3298, %r3297};
	shf.r.wrap.b32 	%r3299, %r3296, %r3295, 18;
	shf.r.wrap.b32 	%r3300, %r3295, %r3296, 18;
	mov.b64 	%rd4466, {%r3300, %r3299};
	xor.b64  	%rd4467, %rd4465, %rd4466;
	shf.l.wrap.b32 	%r3301, %r3295, %r3296, 23;
	shf.l.wrap.b32 	%r3302, %r3296, %r3295, 23;
	mov.b64 	%rd4468, {%r3302, %r3301};
	xor.b64  	%rd4469, %rd4467, %rd4468;
	add.s64 	%rd4470, %rd4464, %rd4469;
	add.s64 	%rd4471, %rd4470, 8268148722764581231;
	add.s64 	%rd4472, %rd4471, %rd4395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3303,%dummy}, %rd4460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3304}, %rd4460;
	}
	shf.r.wrap.b32 	%r3305, %r3304, %r3303, 28;
	shf.r.wrap.b32 	%r3306, %r3303, %r3304, 28;
	mov.b64 	%rd4473, {%r3306, %r3305};
	shf.l.wrap.b32 	%r3307, %r3303, %r3304, 30;
	shf.l.wrap.b32 	%r3308, %r3304, %r3303, 30;
	mov.b64 	%rd4474, {%r3308, %r3307};
	xor.b64  	%rd4475, %rd4473, %rd4474;
	shf.l.wrap.b32 	%r3309, %r3303, %r3304, 25;
	shf.l.wrap.b32 	%r3310, %r3304, %r3303, 25;
	mov.b64 	%rd4476, {%r3310, %r3309};
	xor.b64  	%rd4477, %rd4475, %rd4476;
	and.b64  	%rd4478, %rd4460, %rd4438;
	or.b64  	%rd4479, %rd4460, %rd4438;
	and.b64  	%rd4480, %rd4479, %rd4416;
	or.b64  	%rd4481, %rd4480, %rd4478;
	add.s64 	%rd4482, %rd4481, %rd4477;
	add.s64 	%rd4483, %rd4482, %rd4471;
	xor.b64  	%rd4484, %rd4449, %rd4427;
	and.b64  	%rd4485, %rd4472, %rd4484;
	xor.b64  	%rd4486, %rd4485, %rd4427;
	add.s64 	%rd4487, %rd4405, %rd4486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3311,%dummy}, %rd4472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3312}, %rd4472;
	}
	shf.r.wrap.b32 	%r3313, %r3312, %r3311, 14;
	shf.r.wrap.b32 	%r3314, %r3311, %r3312, 14;
	mov.b64 	%rd4488, {%r3314, %r3313};
	shf.r.wrap.b32 	%r3315, %r3312, %r3311, 18;
	shf.r.wrap.b32 	%r3316, %r3311, %r3312, 18;
	mov.b64 	%rd4489, {%r3316, %r3315};
	xor.b64  	%rd4490, %rd4488, %rd4489;
	shf.l.wrap.b32 	%r3317, %r3311, %r3312, 23;
	shf.l.wrap.b32 	%r3318, %r3312, %r3311, 23;
	mov.b64 	%rd4491, {%r3318, %r3317};
	xor.b64  	%rd4492, %rd4490, %rd4491;
	add.s64 	%rd4493, %rd4487, %rd4492;
	add.s64 	%rd4494, %rd4493, -9160688886553864527;
	add.s64 	%rd4495, %rd4494, %rd4416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3319,%dummy}, %rd4483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3320}, %rd4483;
	}
	shf.r.wrap.b32 	%r3321, %r3320, %r3319, 28;
	shf.r.wrap.b32 	%r3322, %r3319, %r3320, 28;
	mov.b64 	%rd4496, {%r3322, %r3321};
	shf.l.wrap.b32 	%r3323, %r3319, %r3320, 30;
	shf.l.wrap.b32 	%r3324, %r3320, %r3319, 30;
	mov.b64 	%rd4497, {%r3324, %r3323};
	xor.b64  	%rd4498, %rd4496, %rd4497;
	shf.l.wrap.b32 	%r3325, %r3319, %r3320, 25;
	shf.l.wrap.b32 	%r3326, %r3320, %r3319, 25;
	mov.b64 	%rd4499, {%r3326, %r3325};
	xor.b64  	%rd4500, %rd4498, %rd4499;
	and.b64  	%rd4501, %rd4483, %rd4460;
	or.b64  	%rd4502, %rd4483, %rd4460;
	and.b64  	%rd4503, %rd4502, %rd4438;
	or.b64  	%rd4504, %rd4503, %rd4501;
	add.s64 	%rd4505, %rd4504, %rd4500;
	add.s64 	%rd4506, %rd4505, %rd4494;
	xor.b64  	%rd4507, %rd4472, %rd4449;
	and.b64  	%rd4508, %rd4495, %rd4507;
	xor.b64  	%rd4509, %rd4508, %rd4449;
	add.s64 	%rd4510, %rd4427, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3327,%dummy}, %rd4495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3328}, %rd4495;
	}
	shf.r.wrap.b32 	%r3329, %r3328, %r3327, 14;
	shf.r.wrap.b32 	%r3330, %r3327, %r3328, 14;
	mov.b64 	%rd4511, {%r3330, %r3329};
	shf.r.wrap.b32 	%r3331, %r3328, %r3327, 18;
	shf.r.wrap.b32 	%r3332, %r3327, %r3328, 18;
	mov.b64 	%rd4512, {%r3332, %r3331};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	shf.l.wrap.b32 	%r3333, %r3327, %r3328, 23;
	shf.l.wrap.b32 	%r3334, %r3328, %r3327, 23;
	mov.b64 	%rd4514, {%r3334, %r3333};
	xor.b64  	%rd4515, %rd4513, %rd4514;
	add.s64 	%rd4516, %rd4510, %rd4515;
	add.s64 	%rd4517, %rd4516, -7215885187991268811;
	add.s64 	%rd4518, %rd4517, %rd4438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3335,%dummy}, %rd4506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3336}, %rd4506;
	}
	shf.r.wrap.b32 	%r3337, %r3336, %r3335, 28;
	shf.r.wrap.b32 	%r3338, %r3335, %r3336, 28;
	mov.b64 	%rd4519, {%r3338, %r3337};
	shf.l.wrap.b32 	%r3339, %r3335, %r3336, 30;
	shf.l.wrap.b32 	%r3340, %r3336, %r3335, 30;
	mov.b64 	%rd4520, {%r3340, %r3339};
	xor.b64  	%rd4521, %rd4519, %rd4520;
	shf.l.wrap.b32 	%r3341, %r3335, %r3336, 25;
	shf.l.wrap.b32 	%r3342, %r3336, %r3335, 25;
	mov.b64 	%rd4522, {%r3342, %r3341};
	xor.b64  	%rd4523, %rd4521, %rd4522;
	and.b64  	%rd4524, %rd4506, %rd4483;
	or.b64  	%rd4525, %rd4506, %rd4483;
	and.b64  	%rd4526, %rd4525, %rd4460;
	or.b64  	%rd4527, %rd4526, %rd4524;
	add.s64 	%rd4528, %rd4527, %rd4523;
	add.s64 	%rd4529, %rd4528, %rd4517;
	xor.b64  	%rd4530, %rd4495, %rd4472;
	and.b64  	%rd4531, %rd4518, %rd4530;
	xor.b64  	%rd4532, %rd4531, %rd4472;
	add.s64 	%rd4533, %rd4449, %rd4532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3343,%dummy}, %rd4518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3344}, %rd4518;
	}
	shf.r.wrap.b32 	%r3345, %r3344, %r3343, 14;
	shf.r.wrap.b32 	%r3346, %r3343, %r3344, 14;
	mov.b64 	%rd4534, {%r3346, %r3345};
	shf.r.wrap.b32 	%r3347, %r3344, %r3343, 18;
	shf.r.wrap.b32 	%r3348, %r3343, %r3344, 18;
	mov.b64 	%rd4535, {%r3348, %r3347};
	xor.b64  	%rd4536, %rd4534, %rd4535;
	shf.l.wrap.b32 	%r3349, %r3343, %r3344, 23;
	shf.l.wrap.b32 	%r3350, %r3344, %r3343, 23;
	mov.b64 	%rd4537, {%r3350, %r3349};
	xor.b64  	%rd4538, %rd4536, %rd4537;
	add.s64 	%rd4539, %rd4533, %rd4538;
	add.s64 	%rd4540, %rd4539, -4495734319001032492;
	add.s64 	%rd4541, %rd4540, %rd4460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3351,%dummy}, %rd4529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3352}, %rd4529;
	}
	shf.r.wrap.b32 	%r3353, %r3352, %r3351, 28;
	shf.r.wrap.b32 	%r3354, %r3351, %r3352, 28;
	mov.b64 	%rd4542, {%r3354, %r3353};
	shf.l.wrap.b32 	%r3355, %r3351, %r3352, 30;
	shf.l.wrap.b32 	%r3356, %r3352, %r3351, 30;
	mov.b64 	%rd4543, {%r3356, %r3355};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	shf.l.wrap.b32 	%r3357, %r3351, %r3352, 25;
	shf.l.wrap.b32 	%r3358, %r3352, %r3351, 25;
	mov.b64 	%rd4545, {%r3358, %r3357};
	xor.b64  	%rd4546, %rd4544, %rd4545;
	and.b64  	%rd4547, %rd4529, %rd4506;
	or.b64  	%rd4548, %rd4529, %rd4506;
	and.b64  	%rd4549, %rd4548, %rd4483;
	or.b64  	%rd4550, %rd4549, %rd4547;
	add.s64 	%rd4551, %rd4550, %rd4546;
	add.s64 	%rd4552, %rd4551, %rd4540;
	add.s64 	%rd4553, %rd2060, %rd4472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3359,%dummy}, %rd4541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3360}, %rd4541;
	}
	shf.r.wrap.b32 	%r3361, %r3360, %r3359, 14;
	shf.r.wrap.b32 	%r3362, %r3359, %r3360, 14;
	mov.b64 	%rd4554, {%r3362, %r3361};
	shf.r.wrap.b32 	%r3363, %r3360, %r3359, 18;
	shf.r.wrap.b32 	%r3364, %r3359, %r3360, 18;
	mov.b64 	%rd4555, {%r3364, %r3363};
	xor.b64  	%rd4556, %rd4554, %rd4555;
	shf.l.wrap.b32 	%r3365, %r3359, %r3360, 23;
	shf.l.wrap.b32 	%r3366, %r3360, %r3359, 23;
	mov.b64 	%rd4557, {%r3366, %r3365};
	xor.b64  	%rd4558, %rd4556, %rd4557;
	xor.b64  	%rd4559, %rd4518, %rd4495;
	and.b64  	%rd4560, %rd4541, %rd4559;
	xor.b64  	%rd4561, %rd4560, %rd4495;
	add.s64 	%rd4562, %rd4553, %rd4561;
	add.s64 	%rd4563, %rd4562, %rd4558;
	add.s64 	%rd4564, %rd4563, %rd4483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3367,%dummy}, %rd4552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3368}, %rd4552;
	}
	shf.r.wrap.b32 	%r3369, %r3368, %r3367, 28;
	shf.r.wrap.b32 	%r3370, %r3367, %r3368, 28;
	mov.b64 	%rd4565, {%r3370, %r3369};
	shf.l.wrap.b32 	%r3371, %r3367, %r3368, 30;
	shf.l.wrap.b32 	%r3372, %r3368, %r3367, 30;
	mov.b64 	%rd4566, {%r3372, %r3371};
	xor.b64  	%rd4567, %rd4565, %rd4566;
	shf.l.wrap.b32 	%r3373, %r3367, %r3368, 25;
	shf.l.wrap.b32 	%r3374, %r3368, %r3367, 25;
	mov.b64 	%rd4568, {%r3374, %r3373};
	xor.b64  	%rd4569, %rd4567, %rd4568;
	and.b64  	%rd4570, %rd4552, %rd4529;
	or.b64  	%rd4571, %rd4552, %rd4529;
	and.b64  	%rd4572, %rd4571, %rd4506;
	or.b64  	%rd4573, %rd4572, %rd4570;
	add.s64 	%rd4574, %rd4573, %rd4569;
	add.s64 	%rd4575, %rd4574, %rd4563;
	add.s64 	%rd4576, %rd2096, %rd4495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3375,%dummy}, %rd4564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3376}, %rd4564;
	}
	shf.r.wrap.b32 	%r3377, %r3376, %r3375, 14;
	shf.r.wrap.b32 	%r3378, %r3375, %r3376, 14;
	mov.b64 	%rd4577, {%r3378, %r3377};
	shf.r.wrap.b32 	%r3379, %r3376, %r3375, 18;
	shf.r.wrap.b32 	%r3380, %r3375, %r3376, 18;
	mov.b64 	%rd4578, {%r3380, %r3379};
	xor.b64  	%rd4579, %rd4577, %rd4578;
	shf.l.wrap.b32 	%r3381, %r3375, %r3376, 23;
	shf.l.wrap.b32 	%r3382, %r3376, %r3375, 23;
	mov.b64 	%rd4580, {%r3382, %r3381};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	xor.b64  	%rd4582, %rd4541, %rd4518;
	and.b64  	%rd4583, %rd4564, %rd4582;
	xor.b64  	%rd4584, %rd4583, %rd4518;
	add.s64 	%rd4585, %rd4576, %rd4584;
	add.s64 	%rd4586, %rd4585, %rd4581;
	add.s64 	%rd4587, %rd4586, %rd4506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3383,%dummy}, %rd4575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3384}, %rd4575;
	}
	shf.r.wrap.b32 	%r3385, %r3384, %r3383, 28;
	shf.r.wrap.b32 	%r3386, %r3383, %r3384, 28;
	mov.b64 	%rd4588, {%r3386, %r3385};
	shf.l.wrap.b32 	%r3387, %r3383, %r3384, 30;
	shf.l.wrap.b32 	%r3388, %r3384, %r3383, 30;
	mov.b64 	%rd4589, {%r3388, %r3387};
	xor.b64  	%rd4590, %rd4588, %rd4589;
	shf.l.wrap.b32 	%r3389, %r3383, %r3384, 25;
	shf.l.wrap.b32 	%r3390, %r3384, %r3383, 25;
	mov.b64 	%rd4591, {%r3390, %r3389};
	xor.b64  	%rd4592, %rd4590, %rd4591;
	and.b64  	%rd4593, %rd4575, %rd4552;
	or.b64  	%rd4594, %rd4575, %rd4552;
	and.b64  	%rd4595, %rd4594, %rd4529;
	or.b64  	%rd4596, %rd4595, %rd4593;
	add.s64 	%rd4597, %rd4596, %rd4592;
	add.s64 	%rd4598, %rd4597, %rd4586;
	add.s64 	%rd4599, %rd2132, %rd4518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3391,%dummy}, %rd4587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3392}, %rd4587;
	}
	shf.r.wrap.b32 	%r3393, %r3392, %r3391, 14;
	shf.r.wrap.b32 	%r3394, %r3391, %r3392, 14;
	mov.b64 	%rd4600, {%r3394, %r3393};
	shf.r.wrap.b32 	%r3395, %r3392, %r3391, 18;
	shf.r.wrap.b32 	%r3396, %r3391, %r3392, 18;
	mov.b64 	%rd4601, {%r3396, %r3395};
	xor.b64  	%rd4602, %rd4600, %rd4601;
	shf.l.wrap.b32 	%r3397, %r3391, %r3392, 23;
	shf.l.wrap.b32 	%r3398, %r3392, %r3391, 23;
	mov.b64 	%rd4603, {%r3398, %r3397};
	xor.b64  	%rd4604, %rd4602, %rd4603;
	xor.b64  	%rd4605, %rd4564, %rd4541;
	and.b64  	%rd4606, %rd4587, %rd4605;
	xor.b64  	%rd4607, %rd4606, %rd4541;
	add.s64 	%rd4608, %rd4599, %rd4607;
	add.s64 	%rd4609, %rd4608, %rd4604;
	add.s64 	%rd4610, %rd4609, %rd4529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3399,%dummy}, %rd4598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3400}, %rd4598;
	}
	shf.r.wrap.b32 	%r3401, %r3400, %r3399, 28;
	shf.r.wrap.b32 	%r3402, %r3399, %r3400, 28;
	mov.b64 	%rd4611, {%r3402, %r3401};
	shf.l.wrap.b32 	%r3403, %r3399, %r3400, 30;
	shf.l.wrap.b32 	%r3404, %r3400, %r3399, 30;
	mov.b64 	%rd4612, {%r3404, %r3403};
	xor.b64  	%rd4613, %rd4611, %rd4612;
	shf.l.wrap.b32 	%r3405, %r3399, %r3400, 25;
	shf.l.wrap.b32 	%r3406, %r3400, %r3399, 25;
	mov.b64 	%rd4614, {%r3406, %r3405};
	xor.b64  	%rd4615, %rd4613, %rd4614;
	and.b64  	%rd4616, %rd4598, %rd4575;
	or.b64  	%rd4617, %rd4598, %rd4575;
	and.b64  	%rd4618, %rd4617, %rd4552;
	or.b64  	%rd4619, %rd4618, %rd4616;
	add.s64 	%rd4620, %rd4619, %rd4615;
	add.s64 	%rd4621, %rd4620, %rd4609;
	add.s64 	%rd4622, %rd2168, %rd4541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3407,%dummy}, %rd4610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3408}, %rd4610;
	}
	shf.r.wrap.b32 	%r3409, %r3408, %r3407, 14;
	shf.r.wrap.b32 	%r3410, %r3407, %r3408, 14;
	mov.b64 	%rd4623, {%r3410, %r3409};
	shf.r.wrap.b32 	%r3411, %r3408, %r3407, 18;
	shf.r.wrap.b32 	%r3412, %r3407, %r3408, 18;
	mov.b64 	%rd4624, {%r3412, %r3411};
	xor.b64  	%rd4625, %rd4623, %rd4624;
	shf.l.wrap.b32 	%r3413, %r3407, %r3408, 23;
	shf.l.wrap.b32 	%r3414, %r3408, %r3407, 23;
	mov.b64 	%rd4626, {%r3414, %r3413};
	xor.b64  	%rd4627, %rd4625, %rd4626;
	xor.b64  	%rd4628, %rd4587, %rd4564;
	and.b64  	%rd4629, %rd4610, %rd4628;
	xor.b64  	%rd4630, %rd4629, %rd4564;
	add.s64 	%rd4631, %rd4622, %rd4630;
	add.s64 	%rd4632, %rd4631, %rd4627;
	add.s64 	%rd4633, %rd4632, %rd4552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3415,%dummy}, %rd4621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3416}, %rd4621;
	}
	shf.r.wrap.b32 	%r3417, %r3416, %r3415, 28;
	shf.r.wrap.b32 	%r3418, %r3415, %r3416, 28;
	mov.b64 	%rd4634, {%r3418, %r3417};
	shf.l.wrap.b32 	%r3419, %r3415, %r3416, 30;
	shf.l.wrap.b32 	%r3420, %r3416, %r3415, 30;
	mov.b64 	%rd4635, {%r3420, %r3419};
	xor.b64  	%rd4636, %rd4634, %rd4635;
	shf.l.wrap.b32 	%r3421, %r3415, %r3416, 25;
	shf.l.wrap.b32 	%r3422, %r3416, %r3415, 25;
	mov.b64 	%rd4637, {%r3422, %r3421};
	xor.b64  	%rd4638, %rd4636, %rd4637;
	and.b64  	%rd4639, %rd4621, %rd4598;
	or.b64  	%rd4640, %rd4621, %rd4598;
	and.b64  	%rd4641, %rd4640, %rd4575;
	or.b64  	%rd4642, %rd4641, %rd4639;
	add.s64 	%rd4643, %rd4642, %rd4638;
	add.s64 	%rd4644, %rd4643, %rd4632;
	add.s64 	%rd4645, %rd2204, %rd4564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3423,%dummy}, %rd4633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3424}, %rd4633;
	}
	shf.r.wrap.b32 	%r3425, %r3424, %r3423, 14;
	shf.r.wrap.b32 	%r3426, %r3423, %r3424, 14;
	mov.b64 	%rd4646, {%r3426, %r3425};
	shf.r.wrap.b32 	%r3427, %r3424, %r3423, 18;
	shf.r.wrap.b32 	%r3428, %r3423, %r3424, 18;
	mov.b64 	%rd4647, {%r3428, %r3427};
	xor.b64  	%rd4648, %rd4646, %rd4647;
	shf.l.wrap.b32 	%r3429, %r3423, %r3424, 23;
	shf.l.wrap.b32 	%r3430, %r3424, %r3423, 23;
	mov.b64 	%rd4649, {%r3430, %r3429};
	xor.b64  	%rd4650, %rd4648, %rd4649;
	xor.b64  	%rd4651, %rd4610, %rd4587;
	and.b64  	%rd4652, %rd4633, %rd4651;
	xor.b64  	%rd4653, %rd4652, %rd4587;
	add.s64 	%rd4654, %rd4645, %rd4653;
	add.s64 	%rd4655, %rd4654, %rd4650;
	add.s64 	%rd4656, %rd4655, %rd4575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3431,%dummy}, %rd4644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3432}, %rd4644;
	}
	shf.r.wrap.b32 	%r3433, %r3432, %r3431, 28;
	shf.r.wrap.b32 	%r3434, %r3431, %r3432, 28;
	mov.b64 	%rd4657, {%r3434, %r3433};
	shf.l.wrap.b32 	%r3435, %r3431, %r3432, 30;
	shf.l.wrap.b32 	%r3436, %r3432, %r3431, 30;
	mov.b64 	%rd4658, {%r3436, %r3435};
	xor.b64  	%rd4659, %rd4657, %rd4658;
	shf.l.wrap.b32 	%r3437, %r3431, %r3432, 25;
	shf.l.wrap.b32 	%r3438, %r3432, %r3431, 25;
	mov.b64 	%rd4660, {%r3438, %r3437};
	xor.b64  	%rd4661, %rd4659, %rd4660;
	and.b64  	%rd4662, %rd4644, %rd4621;
	or.b64  	%rd4663, %rd4644, %rd4621;
	and.b64  	%rd4664, %rd4663, %rd4598;
	or.b64  	%rd4665, %rd4664, %rd4662;
	add.s64 	%rd4666, %rd4665, %rd4661;
	add.s64 	%rd4667, %rd4666, %rd4655;
	add.s64 	%rd4668, %rd2240, %rd4587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3439,%dummy}, %rd4656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3440}, %rd4656;
	}
	shf.r.wrap.b32 	%r3441, %r3440, %r3439, 14;
	shf.r.wrap.b32 	%r3442, %r3439, %r3440, 14;
	mov.b64 	%rd4669, {%r3442, %r3441};
	shf.r.wrap.b32 	%r3443, %r3440, %r3439, 18;
	shf.r.wrap.b32 	%r3444, %r3439, %r3440, 18;
	mov.b64 	%rd4670, {%r3444, %r3443};
	xor.b64  	%rd4671, %rd4669, %rd4670;
	shf.l.wrap.b32 	%r3445, %r3439, %r3440, 23;
	shf.l.wrap.b32 	%r3446, %r3440, %r3439, 23;
	mov.b64 	%rd4672, {%r3446, %r3445};
	xor.b64  	%rd4673, %rd4671, %rd4672;
	xor.b64  	%rd4674, %rd4633, %rd4610;
	and.b64  	%rd4675, %rd4656, %rd4674;
	xor.b64  	%rd4676, %rd4675, %rd4610;
	add.s64 	%rd4677, %rd4668, %rd4676;
	add.s64 	%rd4678, %rd4677, %rd4673;
	add.s64 	%rd4679, %rd4678, %rd4598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3447,%dummy}, %rd4667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3448}, %rd4667;
	}
	shf.r.wrap.b32 	%r3449, %r3448, %r3447, 28;
	shf.r.wrap.b32 	%r3450, %r3447, %r3448, 28;
	mov.b64 	%rd4680, {%r3450, %r3449};
	shf.l.wrap.b32 	%r3451, %r3447, %r3448, 30;
	shf.l.wrap.b32 	%r3452, %r3448, %r3447, 30;
	mov.b64 	%rd4681, {%r3452, %r3451};
	xor.b64  	%rd4682, %rd4680, %rd4681;
	shf.l.wrap.b32 	%r3453, %r3447, %r3448, 25;
	shf.l.wrap.b32 	%r3454, %r3448, %r3447, 25;
	mov.b64 	%rd4683, {%r3454, %r3453};
	xor.b64  	%rd4684, %rd4682, %rd4683;
	and.b64  	%rd4685, %rd4667, %rd4644;
	or.b64  	%rd4686, %rd4667, %rd4644;
	and.b64  	%rd4687, %rd4686, %rd4621;
	or.b64  	%rd4688, %rd4687, %rd4685;
	add.s64 	%rd4689, %rd4688, %rd4684;
	add.s64 	%rd4690, %rd4689, %rd4678;
	add.s64 	%rd4691, %rd2277, %rd4610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3455,%dummy}, %rd4679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3456}, %rd4679;
	}
	shf.r.wrap.b32 	%r3457, %r3456, %r3455, 14;
	shf.r.wrap.b32 	%r3458, %r3455, %r3456, 14;
	mov.b64 	%rd4692, {%r3458, %r3457};
	shf.r.wrap.b32 	%r3459, %r3456, %r3455, 18;
	shf.r.wrap.b32 	%r3460, %r3455, %r3456, 18;
	mov.b64 	%rd4693, {%r3460, %r3459};
	xor.b64  	%rd4694, %rd4692, %rd4693;
	shf.l.wrap.b32 	%r3461, %r3455, %r3456, 23;
	shf.l.wrap.b32 	%r3462, %r3456, %r3455, 23;
	mov.b64 	%rd4695, {%r3462, %r3461};
	xor.b64  	%rd4696, %rd4694, %rd4695;
	xor.b64  	%rd4697, %rd4656, %rd4633;
	and.b64  	%rd4698, %rd4679, %rd4697;
	xor.b64  	%rd4699, %rd4698, %rd4633;
	add.s64 	%rd4700, %rd4691, %rd4699;
	add.s64 	%rd4701, %rd4700, %rd4696;
	add.s64 	%rd4702, %rd4701, %rd4621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3463,%dummy}, %rd4690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3464}, %rd4690;
	}
	shf.r.wrap.b32 	%r3465, %r3464, %r3463, 28;
	shf.r.wrap.b32 	%r3466, %r3463, %r3464, 28;
	mov.b64 	%rd4703, {%r3466, %r3465};
	shf.l.wrap.b32 	%r3467, %r3463, %r3464, 30;
	shf.l.wrap.b32 	%r3468, %r3464, %r3463, 30;
	mov.b64 	%rd4704, {%r3468, %r3467};
	xor.b64  	%rd4705, %rd4703, %rd4704;
	shf.l.wrap.b32 	%r3469, %r3463, %r3464, 25;
	shf.l.wrap.b32 	%r3470, %r3464, %r3463, 25;
	mov.b64 	%rd4706, {%r3470, %r3469};
	xor.b64  	%rd4707, %rd4705, %rd4706;
	and.b64  	%rd4708, %rd4690, %rd4667;
	or.b64  	%rd4709, %rd4690, %rd4667;
	and.b64  	%rd4710, %rd4709, %rd4644;
	or.b64  	%rd4711, %rd4710, %rd4708;
	add.s64 	%rd4712, %rd4711, %rd4707;
	add.s64 	%rd4713, %rd4712, %rd4701;
	mov.u64 	%rd4714, -2906493647876705202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3471,%dummy}, %rd4714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3472}, %rd4714;
	}
	shf.r.wrap.b32 	%r3473, %r3472, %r3471, 8;
	shf.r.wrap.b32 	%r3474, %r3471, %r3472, 8;
	mov.b64 	%rd4715, {%r3474, %r3473};
	shf.r.wrap.b32 	%r3475, %r3472, %r3471, 1;
	shf.r.wrap.b32 	%r3476, %r3471, %r3472, 1;
	mov.b64 	%rd4716, {%r3476, %r3475};
	xor.b64  	%rd4717, %rd4716, %rd4715;
	xor.b64  	%rd4718, %rd4717, 121408206451819112;
	add.s64 	%rd4719, %rd2312, %rd4718;
	add.s64 	%rd4720, %rd4719, %rd4633;
	xor.b64  	%rd4721, %rd4679, %rd4656;
	and.b64  	%rd4722, %rd4702, %rd4721;
	xor.b64  	%rd4723, %rd4722, %rd4656;
	add.s64 	%rd4724, %rd4720, %rd4723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3477,%dummy}, %rd4702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3478}, %rd4702;
	}
	shf.r.wrap.b32 	%r3479, %r3478, %r3477, 14;
	shf.r.wrap.b32 	%r3480, %r3477, %r3478, 14;
	mov.b64 	%rd4725, {%r3480, %r3479};
	shf.r.wrap.b32 	%r3481, %r3478, %r3477, 18;
	shf.r.wrap.b32 	%r3482, %r3477, %r3478, 18;
	mov.b64 	%rd4726, {%r3482, %r3481};
	xor.b64  	%rd4727, %rd4725, %rd4726;
	shf.l.wrap.b32 	%r3483, %r3477, %r3478, 23;
	shf.l.wrap.b32 	%r3484, %r3478, %r3477, 23;
	mov.b64 	%rd4728, {%r3484, %r3483};
	xor.b64  	%rd4729, %rd4727, %rd4728;
	add.s64 	%rd4730, %rd4724, %rd4729;
	add.s64 	%rd4731, %rd4730, 8573033837759648693;
	add.s64 	%rd4732, %rd4731, %rd4644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3485,%dummy}, %rd4713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3486}, %rd4713;
	}
	shf.r.wrap.b32 	%r3487, %r3486, %r3485, 28;
	shf.r.wrap.b32 	%r3488, %r3485, %r3486, 28;
	mov.b64 	%rd4733, {%r3488, %r3487};
	shf.l.wrap.b32 	%r3489, %r3485, %r3486, 30;
	shf.l.wrap.b32 	%r3490, %r3486, %r3485, 30;
	mov.b64 	%rd4734, {%r3490, %r3489};
	xor.b64  	%rd4735, %rd4733, %rd4734;
	shf.l.wrap.b32 	%r3491, %r3485, %r3486, 25;
	shf.l.wrap.b32 	%r3492, %r3486, %r3485, 25;
	mov.b64 	%rd4736, {%r3492, %r3491};
	xor.b64  	%rd4737, %rd4735, %rd4736;
	and.b64  	%rd4738, %rd4713, %rd4690;
	or.b64  	%rd4739, %rd4713, %rd4690;
	and.b64  	%rd4740, %rd4739, %rd4667;
	or.b64  	%rd4741, %rd4740, %rd4738;
	add.s64 	%rd4742, %rd4741, %rd4737;
	add.s64 	%rd4743, %rd4742, %rd4731;
	add.s64 	%rd4744, %rd2347, -2906493647876705202;
	add.s64 	%rd4745, %rd4744, %rd4656;
	xor.b64  	%rd4746, %rd4702, %rd4679;
	and.b64  	%rd4747, %rd4732, %rd4746;
	xor.b64  	%rd4748, %rd4747, %rd4679;
	add.s64 	%rd4749, %rd4745, %rd4748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3493,%dummy}, %rd4732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3494}, %rd4732;
	}
	shf.r.wrap.b32 	%r3495, %r3494, %r3493, 14;
	shf.r.wrap.b32 	%r3496, %r3493, %r3494, 14;
	mov.b64 	%rd4750, {%r3496, %r3495};
	shf.r.wrap.b32 	%r3497, %r3494, %r3493, 18;
	shf.r.wrap.b32 	%r3498, %r3493, %r3494, 18;
	mov.b64 	%rd4751, {%r3498, %r3497};
	xor.b64  	%rd4752, %rd4750, %rd4751;
	shf.l.wrap.b32 	%r3499, %r3493, %r3494, 23;
	shf.l.wrap.b32 	%r3500, %r3494, %r3493, 23;
	mov.b64 	%rd4753, {%r3500, %r3499};
	xor.b64  	%rd4754, %rd4752, %rd4753;
	add.s64 	%rd4755, %rd4749, %rd4754;
	add.s64 	%rd4756, %rd4755, -7476448914759557205;
	add.s64 	%rd4757, %rd4756, %rd4667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3501,%dummy}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3502}, %rd4743;
	}
	shf.r.wrap.b32 	%r3503, %r3502, %r3501, 28;
	shf.r.wrap.b32 	%r3504, %r3501, %r3502, 28;
	mov.b64 	%rd4758, {%r3504, %r3503};
	shf.l.wrap.b32 	%r3505, %r3501, %r3502, 30;
	shf.l.wrap.b32 	%r3506, %r3502, %r3501, 30;
	mov.b64 	%rd4759, {%r3506, %r3505};
	xor.b64  	%rd4760, %rd4758, %rd4759;
	shf.l.wrap.b32 	%r3507, %r3501, %r3502, 25;
	shf.l.wrap.b32 	%r3508, %r3502, %r3501, 25;
	mov.b64 	%rd4761, {%r3508, %r3507};
	xor.b64  	%rd4762, %rd4760, %rd4761;
	and.b64  	%rd4763, %rd4743, %rd4713;
	or.b64  	%rd4764, %rd4743, %rd4713;
	and.b64  	%rd4765, %rd4764, %rd4690;
	or.b64  	%rd4766, %rd4765, %rd4763;
	add.s64 	%rd4767, %rd4766, %rd4762;
	add.s64 	%rd4768, %rd4767, %rd4756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3509,%dummy}, %rd4719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3510}, %rd4719;
	}
	shf.r.wrap.b32 	%r3511, %r3510, %r3509, 19;
	shf.r.wrap.b32 	%r3512, %r3509, %r3510, 19;
	mov.b64 	%rd4769, {%r3512, %r3511};
	shf.l.wrap.b32 	%r3513, %r3509, %r3510, 3;
	shf.l.wrap.b32 	%r3514, %r3510, %r3509, 3;
	mov.b64 	%rd4770, {%r3514, %r3513};
	xor.b64  	%rd4771, %rd4769, %rd4770;
	shr.u64 	%rd4772, %rd4719, 6;
	xor.b64  	%rd4773, %rd4771, %rd4772;
	xor.b64  	%rd4774, %rd4773, -9223372036854775808;
	add.s64 	%rd4775, %rd4774, %rd2131;
	add.s64 	%rd4776, %rd4775, %rd123;
	add.s64 	%rd4777, %rd4776, %rd4679;
	xor.b64  	%rd4778, %rd4732, %rd4702;
	and.b64  	%rd4779, %rd4757, %rd4778;
	xor.b64  	%rd4780, %rd4779, %rd4702;
	add.s64 	%rd4781, %rd4777, %rd4780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3515,%dummy}, %rd4757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3516}, %rd4757;
	}
	shf.r.wrap.b32 	%r3517, %r3516, %r3515, 14;
	shf.r.wrap.b32 	%r3518, %r3515, %r3516, 14;
	mov.b64 	%rd4782, {%r3518, %r3517};
	shf.r.wrap.b32 	%r3519, %r3516, %r3515, 18;
	shf.r.wrap.b32 	%r3520, %r3515, %r3516, 18;
	mov.b64 	%rd4783, {%r3520, %r3519};
	xor.b64  	%rd4784, %rd4782, %rd4783;
	shf.l.wrap.b32 	%r3521, %r3515, %r3516, 23;
	shf.l.wrap.b32 	%r3522, %r3516, %r3515, 23;
	mov.b64 	%rd4785, {%r3522, %r3521};
	xor.b64  	%rd4786, %rd4784, %rd4785;
	add.s64 	%rd4787, %rd4781, %rd4786;
	add.s64 	%rd4788, %rd4787, -6327057829258317296;
	add.s64 	%rd4789, %rd4788, %rd4690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3523,%dummy}, %rd4768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3524}, %rd4768;
	}
	shf.r.wrap.b32 	%r3525, %r3524, %r3523, 28;
	shf.r.wrap.b32 	%r3526, %r3523, %r3524, 28;
	mov.b64 	%rd4790, {%r3526, %r3525};
	shf.l.wrap.b32 	%r3527, %r3523, %r3524, 30;
	shf.l.wrap.b32 	%r3528, %r3524, %r3523, 30;
	mov.b64 	%rd4791, {%r3528, %r3527};
	xor.b64  	%rd4792, %rd4790, %rd4791;
	shf.l.wrap.b32 	%r3529, %r3523, %r3524, 25;
	shf.l.wrap.b32 	%r3530, %r3524, %r3523, 25;
	mov.b64 	%rd4793, {%r3530, %r3529};
	xor.b64  	%rd4794, %rd4792, %rd4793;
	and.b64  	%rd4795, %rd4768, %rd4743;
	or.b64  	%rd4796, %rd4768, %rd4743;
	and.b64  	%rd4797, %rd4796, %rd4713;
	or.b64  	%rd4798, %rd4797, %rd4795;
	add.s64 	%rd4799, %rd4798, %rd4794;
	add.s64 	%rd4800, %rd4799, %rd4788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3531,%dummy}, %rd4744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3532}, %rd4744;
	}
	shf.r.wrap.b32 	%r3533, %r3532, %r3531, 19;
	shf.r.wrap.b32 	%r3534, %r3531, %r3532, 19;
	mov.b64 	%rd4801, {%r3534, %r3533};
	shf.l.wrap.b32 	%r3535, %r3531, %r3532, 3;
	shf.l.wrap.b32 	%r3536, %r3532, %r3531, 3;
	mov.b64 	%rd4802, {%r3536, %r3535};
	xor.b64  	%rd4803, %rd4801, %rd4802;
	shr.u64 	%rd4804, %rd4744, 6;
	xor.b64  	%rd4805, %rd4803, %rd4804;
	add.s64 	%rd4806, %rd4805, %rd2167;
	add.s64 	%rd4807, %rd4806, %rd123;
	add.s64 	%rd4808, %rd4807, %rd4702;
	xor.b64  	%rd4809, %rd4757, %rd4732;
	and.b64  	%rd4810, %rd4789, %rd4809;
	xor.b64  	%rd4811, %rd4810, %rd4732;
	add.s64 	%rd4812, %rd4808, %rd4811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3537,%dummy}, %rd4789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3538}, %rd4789;
	}
	shf.r.wrap.b32 	%r3539, %r3538, %r3537, 14;
	shf.r.wrap.b32 	%r3540, %r3537, %r3538, 14;
	mov.b64 	%rd4813, {%r3540, %r3539};
	shf.r.wrap.b32 	%r3541, %r3538, %r3537, 18;
	shf.r.wrap.b32 	%r3542, %r3537, %r3538, 18;
	mov.b64 	%rd4814, {%r3542, %r3541};
	xor.b64  	%rd4815, %rd4813, %rd4814;
	shf.l.wrap.b32 	%r3543, %r3537, %r3538, 23;
	shf.l.wrap.b32 	%r3544, %r3538, %r3537, 23;
	mov.b64 	%rd4816, {%r3544, %r3543};
	xor.b64  	%rd4817, %rd4815, %rd4816;
	add.s64 	%rd4818, %rd4812, %rd4817;
	add.s64 	%rd4819, %rd4818, -5763719355590565569;
	add.s64 	%rd4820, %rd4819, %rd4713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3545,%dummy}, %rd4800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3546}, %rd4800;
	}
	shf.r.wrap.b32 	%r3547, %r3546, %r3545, 28;
	shf.r.wrap.b32 	%r3548, %r3545, %r3546, 28;
	mov.b64 	%rd4821, {%r3548, %r3547};
	shf.l.wrap.b32 	%r3549, %r3545, %r3546, 30;
	shf.l.wrap.b32 	%r3550, %r3546, %r3545, 30;
	mov.b64 	%rd4822, {%r3550, %r3549};
	xor.b64  	%rd4823, %rd4821, %rd4822;
	shf.l.wrap.b32 	%r3551, %r3545, %r3546, 25;
	shf.l.wrap.b32 	%r3552, %r3546, %r3545, 25;
	mov.b64 	%rd4824, {%r3552, %r3551};
	xor.b64  	%rd4825, %rd4823, %rd4824;
	and.b64  	%rd4826, %rd4800, %rd4768;
	or.b64  	%rd4827, %rd4800, %rd4768;
	and.b64  	%rd4828, %rd4827, %rd4743;
	or.b64  	%rd4829, %rd4828, %rd4826;
	add.s64 	%rd4830, %rd4829, %rd4825;
	add.s64 	%rd4831, %rd4830, %rd4819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3553,%dummy}, %rd4776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3554}, %rd4776;
	}
	shf.r.wrap.b32 	%r3555, %r3554, %r3553, 19;
	shf.r.wrap.b32 	%r3556, %r3553, %r3554, 19;
	mov.b64 	%rd4832, {%r3556, %r3555};
	shf.l.wrap.b32 	%r3557, %r3553, %r3554, 3;
	shf.l.wrap.b32 	%r3558, %r3554, %r3553, 3;
	mov.b64 	%rd4833, {%r3558, %r3557};
	xor.b64  	%rd4834, %rd4832, %rd4833;
	shr.u64 	%rd4835, %rd4776, 6;
	xor.b64  	%rd4836, %rd4834, %rd4835;
	add.s64 	%rd4837, %rd4836, %rd2203;
	add.s64 	%rd4838, %rd4837, %rd123;
	add.s64 	%rd4839, %rd4838, %rd4732;
	xor.b64  	%rd4840, %rd4789, %rd4757;
	and.b64  	%rd4841, %rd4820, %rd4840;
	xor.b64  	%rd4842, %rd4841, %rd4757;
	add.s64 	%rd4843, %rd4839, %rd4842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3559,%dummy}, %rd4820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3560}, %rd4820;
	}
	shf.r.wrap.b32 	%r3561, %r3560, %r3559, 14;
	shf.r.wrap.b32 	%r3562, %r3559, %r3560, 14;
	mov.b64 	%rd4844, {%r3562, %r3561};
	shf.r.wrap.b32 	%r3563, %r3560, %r3559, 18;
	shf.r.wrap.b32 	%r3564, %r3559, %r3560, 18;
	mov.b64 	%rd4845, {%r3564, %r3563};
	xor.b64  	%rd4846, %rd4844, %rd4845;
	shf.l.wrap.b32 	%r3565, %r3559, %r3560, 23;
	shf.l.wrap.b32 	%r3566, %r3560, %r3559, 23;
	mov.b64 	%rd4847, {%r3566, %r3565};
	xor.b64  	%rd4848, %rd4846, %rd4847;
	add.s64 	%rd4849, %rd4843, %rd4848;
	add.s64 	%rd4850, %rd4849, -4658551843659510044;
	add.s64 	%rd4851, %rd4850, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3567,%dummy}, %rd4831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3568}, %rd4831;
	}
	shf.r.wrap.b32 	%r3569, %r3568, %r3567, 28;
	shf.r.wrap.b32 	%r3570, %r3567, %r3568, 28;
	mov.b64 	%rd4852, {%r3570, %r3569};
	shf.l.wrap.b32 	%r3571, %r3567, %r3568, 30;
	shf.l.wrap.b32 	%r3572, %r3568, %r3567, 30;
	mov.b64 	%rd4853, {%r3572, %r3571};
	xor.b64  	%rd4854, %rd4852, %rd4853;
	shf.l.wrap.b32 	%r3573, %r3567, %r3568, 25;
	shf.l.wrap.b32 	%r3574, %r3568, %r3567, 25;
	mov.b64 	%rd4855, {%r3574, %r3573};
	xor.b64  	%rd4856, %rd4854, %rd4855;
	and.b64  	%rd4857, %rd4831, %rd4800;
	or.b64  	%rd4858, %rd4831, %rd4800;
	and.b64  	%rd4859, %rd4858, %rd4768;
	or.b64  	%rd4860, %rd4859, %rd4857;
	add.s64 	%rd4861, %rd4860, %rd4856;
	add.s64 	%rd4862, %rd4861, %rd4850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3575,%dummy}, %rd4807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3576}, %rd4807;
	}
	shf.r.wrap.b32 	%r3577, %r3576, %r3575, 19;
	shf.r.wrap.b32 	%r3578, %r3575, %r3576, 19;
	mov.b64 	%rd4863, {%r3578, %r3577};
	shf.l.wrap.b32 	%r3579, %r3575, %r3576, 3;
	shf.l.wrap.b32 	%r3580, %r3576, %r3575, 3;
	mov.b64 	%rd4864, {%r3580, %r3579};
	xor.b64  	%rd4865, %rd4863, %rd4864;
	shr.u64 	%rd4866, %rd4807, 6;
	xor.b64  	%rd4867, %rd4865, %rd4866;
	add.s64 	%rd4868, %rd4867, %rd2239;
	add.s64 	%rd4869, %rd4868, %rd123;
	add.s64 	%rd4870, %rd4869, %rd4757;
	xor.b64  	%rd4871, %rd4820, %rd4789;
	and.b64  	%rd4872, %rd4851, %rd4871;
	xor.b64  	%rd4873, %rd4872, %rd4789;
	add.s64 	%rd4874, %rd4870, %rd4873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3581,%dummy}, %rd4851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3582}, %rd4851;
	}
	shf.r.wrap.b32 	%r3583, %r3582, %r3581, 14;
	shf.r.wrap.b32 	%r3584, %r3581, %r3582, 14;
	mov.b64 	%rd4875, {%r3584, %r3583};
	shf.r.wrap.b32 	%r3585, %r3582, %r3581, 18;
	shf.r.wrap.b32 	%r3586, %r3581, %r3582, 18;
	mov.b64 	%rd4876, {%r3586, %r3585};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	shf.l.wrap.b32 	%r3587, %r3581, %r3582, 23;
	shf.l.wrap.b32 	%r3588, %r3582, %r3581, 23;
	mov.b64 	%rd4878, {%r3588, %r3587};
	xor.b64  	%rd4879, %rd4877, %rd4878;
	add.s64 	%rd4880, %rd4874, %rd4879;
	add.s64 	%rd4881, %rd4880, -4116276920077217854;
	add.s64 	%rd4882, %rd4881, %rd4768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3589,%dummy}, %rd4862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3590}, %rd4862;
	}
	shf.r.wrap.b32 	%r3591, %r3590, %r3589, 28;
	shf.r.wrap.b32 	%r3592, %r3589, %r3590, 28;
	mov.b64 	%rd4883, {%r3592, %r3591};
	shf.l.wrap.b32 	%r3593, %r3589, %r3590, 30;
	shf.l.wrap.b32 	%r3594, %r3590, %r3589, 30;
	mov.b64 	%rd4884, {%r3594, %r3593};
	xor.b64  	%rd4885, %rd4883, %rd4884;
	shf.l.wrap.b32 	%r3595, %r3589, %r3590, 25;
	shf.l.wrap.b32 	%r3596, %r3590, %r3589, 25;
	mov.b64 	%rd4886, {%r3596, %r3595};
	xor.b64  	%rd4887, %rd4885, %rd4886;
	and.b64  	%rd4888, %rd4862, %rd4831;
	or.b64  	%rd4889, %rd4862, %rd4831;
	and.b64  	%rd4890, %rd4889, %rd4800;
	or.b64  	%rd4891, %rd4890, %rd4888;
	add.s64 	%rd4892, %rd4891, %rd4887;
	add.s64 	%rd4893, %rd4892, %rd4881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3597,%dummy}, %rd4838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3598}, %rd4838;
	}
	shf.r.wrap.b32 	%r3599, %r3598, %r3597, 19;
	shf.r.wrap.b32 	%r3600, %r3597, %r3598, 19;
	mov.b64 	%rd4894, {%r3600, %r3599};
	shf.l.wrap.b32 	%r3601, %r3597, %r3598, 3;
	shf.l.wrap.b32 	%r3602, %r3598, %r3597, 3;
	mov.b64 	%rd4895, {%r3602, %r3601};
	xor.b64  	%rd4896, %rd4894, %rd4895;
	shr.u64 	%rd4897, %rd4838, 6;
	xor.b64  	%rd4898, %rd4896, %rd4897;
	add.s64 	%rd4899, %rd4898, %rd2276;
	add.s64 	%rd4900, %rd4899, %rd123;
	add.s64 	%rd4901, %rd4900, %rd4789;
	xor.b64  	%rd4902, %rd4851, %rd4820;
	and.b64  	%rd4903, %rd4882, %rd4902;
	xor.b64  	%rd4904, %rd4903, %rd4820;
	add.s64 	%rd4905, %rd4901, %rd4904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3603,%dummy}, %rd4882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3604}, %rd4882;
	}
	shf.r.wrap.b32 	%r3605, %r3604, %r3603, 14;
	shf.r.wrap.b32 	%r3606, %r3603, %r3604, 14;
	mov.b64 	%rd4906, {%r3606, %r3605};
	shf.r.wrap.b32 	%r3607, %r3604, %r3603, 18;
	shf.r.wrap.b32 	%r3608, %r3603, %r3604, 18;
	mov.b64 	%rd4907, {%r3608, %r3607};
	xor.b64  	%rd4908, %rd4906, %rd4907;
	shf.l.wrap.b32 	%r3609, %r3603, %r3604, 23;
	shf.l.wrap.b32 	%r3610, %r3604, %r3603, 23;
	mov.b64 	%rd4909, {%r3610, %r3609};
	xor.b64  	%rd4910, %rd4908, %rd4909;
	add.s64 	%rd4911, %rd4905, %rd4910;
	add.s64 	%rd4912, %rd4911, -3051310485924567259;
	add.s64 	%rd4913, %rd4912, %rd4800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3611,%dummy}, %rd4893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3612}, %rd4893;
	}
	shf.r.wrap.b32 	%r3613, %r3612, %r3611, 28;
	shf.r.wrap.b32 	%r3614, %r3611, %r3612, 28;
	mov.b64 	%rd4914, {%r3614, %r3613};
	shf.l.wrap.b32 	%r3615, %r3611, %r3612, 30;
	shf.l.wrap.b32 	%r3616, %r3612, %r3611, 30;
	mov.b64 	%rd4915, {%r3616, %r3615};
	xor.b64  	%rd4916, %rd4914, %rd4915;
	shf.l.wrap.b32 	%r3617, %r3611, %r3612, 25;
	shf.l.wrap.b32 	%r3618, %r3612, %r3611, 25;
	mov.b64 	%rd4917, {%r3618, %r3617};
	xor.b64  	%rd4918, %rd4916, %rd4917;
	and.b64  	%rd4919, %rd4893, %rd4862;
	or.b64  	%rd4920, %rd4893, %rd4862;
	and.b64  	%rd4921, %rd4920, %rd4831;
	or.b64  	%rd4922, %rd4921, %rd4919;
	add.s64 	%rd4923, %rd4922, %rd4918;
	add.s64 	%rd4924, %rd4923, %rd4912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3619,%dummy}, %rd4869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3620}, %rd4869;
	}
	shf.r.wrap.b32 	%r3621, %r3620, %r3619, 19;
	shf.r.wrap.b32 	%r3622, %r3619, %r3620, 19;
	mov.b64 	%rd4925, {%r3622, %r3621};
	shf.l.wrap.b32 	%r3623, %r3619, %r3620, 3;
	shf.l.wrap.b32 	%r3624, %r3620, %r3619, 3;
	mov.b64 	%rd4926, {%r3624, %r3623};
	xor.b64  	%rd4927, %rd4925, %rd4926;
	shr.u64 	%rd4928, %rd4869, 6;
	xor.b64  	%rd4929, %rd4927, %rd4928;
	add.s64 	%rd4930, %rd4929, %rd4719;
	add.s64 	%rd4931, %rd4930, %rd2537;
	add.s64 	%rd4932, %rd4931, %rd4820;
	xor.b64  	%rd4933, %rd4882, %rd4851;
	and.b64  	%rd4934, %rd4913, %rd4933;
	xor.b64  	%rd4935, %rd4934, %rd4851;
	add.s64 	%rd4936, %rd4932, %rd4935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3625,%dummy}, %rd4913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3626}, %rd4913;
	}
	shf.r.wrap.b32 	%r3627, %r3626, %r3625, 14;
	shf.r.wrap.b32 	%r3628, %r3625, %r3626, 14;
	mov.b64 	%rd4937, {%r3628, %r3627};
	shf.r.wrap.b32 	%r3629, %r3626, %r3625, 18;
	shf.r.wrap.b32 	%r3630, %r3625, %r3626, 18;
	mov.b64 	%rd4938, {%r3630, %r3629};
	xor.b64  	%rd4939, %rd4937, %rd4938;
	shf.l.wrap.b32 	%r3631, %r3625, %r3626, 23;
	shf.l.wrap.b32 	%r3632, %r3626, %r3625, 23;
	mov.b64 	%rd4940, {%r3632, %r3631};
	xor.b64  	%rd4941, %rd4939, %rd4940;
	add.s64 	%rd4942, %rd4936, %rd4941;
	add.s64 	%rd4943, %rd4942, 489312712824947311;
	add.s64 	%rd4944, %rd4943, %rd4831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3633,%dummy}, %rd4924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3634}, %rd4924;
	}
	shf.r.wrap.b32 	%r3635, %r3634, %r3633, 28;
	shf.r.wrap.b32 	%r3636, %r3633, %r3634, 28;
	mov.b64 	%rd4945, {%r3636, %r3635};
	shf.l.wrap.b32 	%r3637, %r3633, %r3634, 30;
	shf.l.wrap.b32 	%r3638, %r3634, %r3633, 30;
	mov.b64 	%rd4946, {%r3638, %r3637};
	xor.b64  	%rd4947, %rd4945, %rd4946;
	shf.l.wrap.b32 	%r3639, %r3633, %r3634, 25;
	shf.l.wrap.b32 	%r3640, %r3634, %r3633, 25;
	mov.b64 	%rd4948, {%r3640, %r3639};
	xor.b64  	%rd4949, %rd4947, %rd4948;
	and.b64  	%rd4950, %rd4924, %rd4893;
	or.b64  	%rd4951, %rd4924, %rd4893;
	and.b64  	%rd4952, %rd4951, %rd4862;
	or.b64  	%rd4953, %rd4952, %rd4950;
	add.s64 	%rd4954, %rd4953, %rd4949;
	add.s64 	%rd4955, %rd4954, %rd4943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3641,%dummy}, %rd4900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3642}, %rd4900;
	}
	shf.r.wrap.b32 	%r3643, %r3642, %r3641, 19;
	shf.r.wrap.b32 	%r3644, %r3641, %r3642, 19;
	mov.b64 	%rd4956, {%r3644, %r3643};
	shf.l.wrap.b32 	%r3645, %r3641, %r3642, 3;
	shf.l.wrap.b32 	%r3646, %r3642, %r3641, 3;
	mov.b64 	%rd4957, {%r3646, %r3645};
	xor.b64  	%rd4958, %rd4956, %rd4957;
	shr.u64 	%rd4959, %rd4900, 6;
	xor.b64  	%rd4960, %rd4958, %rd4959;
	add.s64 	%rd4961, %rd4960, %rd4744;
	add.s64 	%rd4962, %rd4961, %rd2573;
	add.s64 	%rd4963, %rd4962, 576;
	add.s64 	%rd4964, %rd4963, %rd4851;
	xor.b64  	%rd4965, %rd4913, %rd4882;
	and.b64  	%rd4966, %rd4944, %rd4965;
	xor.b64  	%rd4967, %rd4966, %rd4882;
	add.s64 	%rd4968, %rd4964, %rd4967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3647,%dummy}, %rd4944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3648}, %rd4944;
	}
	shf.r.wrap.b32 	%r3649, %r3648, %r3647, 14;
	shf.r.wrap.b32 	%r3650, %r3647, %r3648, 14;
	mov.b64 	%rd4969, {%r3650, %r3649};
	shf.r.wrap.b32 	%r3651, %r3648, %r3647, 18;
	shf.r.wrap.b32 	%r3652, %r3647, %r3648, 18;
	mov.b64 	%rd4970, {%r3652, %r3651};
	xor.b64  	%rd4971, %rd4969, %rd4970;
	shf.l.wrap.b32 	%r3653, %r3647, %r3648, 23;
	shf.l.wrap.b32 	%r3654, %r3648, %r3647, 23;
	mov.b64 	%rd4972, {%r3654, %r3653};
	xor.b64  	%rd4973, %rd4971, %rd4972;
	add.s64 	%rd4974, %rd4968, %rd4973;
	add.s64 	%rd4975, %rd4974, 1452737877330783856;
	add.s64 	%rd4976, %rd4975, %rd4862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3655,%dummy}, %rd4955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3656}, %rd4955;
	}
	shf.r.wrap.b32 	%r3657, %r3656, %r3655, 28;
	shf.r.wrap.b32 	%r3658, %r3655, %r3656, 28;
	mov.b64 	%rd4977, {%r3658, %r3657};
	shf.l.wrap.b32 	%r3659, %r3655, %r3656, 30;
	shf.l.wrap.b32 	%r3660, %r3656, %r3655, 30;
	mov.b64 	%rd4978, {%r3660, %r3659};
	xor.b64  	%rd4979, %rd4977, %rd4978;
	shf.l.wrap.b32 	%r3661, %r3655, %r3656, 25;
	shf.l.wrap.b32 	%r3662, %r3656, %r3655, 25;
	mov.b64 	%rd4980, {%r3662, %r3661};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	and.b64  	%rd4982, %rd4955, %rd4924;
	or.b64  	%rd4983, %rd4955, %rd4924;
	and.b64  	%rd4984, %rd4983, %rd4893;
	or.b64  	%rd4985, %rd4984, %rd4982;
	add.s64 	%rd4986, %rd4985, %rd4981;
	add.s64 	%rd4987, %rd4986, %rd4975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3663,%dummy}, %rd4931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3664}, %rd4931;
	}
	shf.r.wrap.b32 	%r3665, %r3664, %r3663, 19;
	shf.r.wrap.b32 	%r3666, %r3663, %r3664, 19;
	mov.b64 	%rd4988, {%r3666, %r3665};
	shf.l.wrap.b32 	%r3667, %r3663, %r3664, 3;
	shf.l.wrap.b32 	%r3668, %r3664, %r3663, 3;
	mov.b64 	%rd4989, {%r3668, %r3667};
	xor.b64  	%rd4990, %rd4988, %rd4989;
	shr.u64 	%rd4991, %rd4931, 6;
	xor.b64  	%rd4992, %rd4990, %rd4991;
	add.s64 	%rd4993, %rd4992, %rd2059;
	add.s64 	%rd4994, %rd4993, %rd4776;
	add.s64 	%rd4995, %rd4994, %rd2610;
	add.s64 	%rd4996, %rd4995, %rd4882;
	xor.b64  	%rd4997, %rd4944, %rd4913;
	and.b64  	%rd4998, %rd4976, %rd4997;
	xor.b64  	%rd4999, %rd4998, %rd4913;
	add.s64 	%rd5000, %rd4996, %rd4999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3669,%dummy}, %rd4976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3670}, %rd4976;
	}
	shf.r.wrap.b32 	%r3671, %r3670, %r3669, 14;
	shf.r.wrap.b32 	%r3672, %r3669, %r3670, 14;
	mov.b64 	%rd5001, {%r3672, %r3671};
	shf.r.wrap.b32 	%r3673, %r3670, %r3669, 18;
	shf.r.wrap.b32 	%r3674, %r3669, %r3670, 18;
	mov.b64 	%rd5002, {%r3674, %r3673};
	xor.b64  	%rd5003, %rd5001, %rd5002;
	shf.l.wrap.b32 	%r3675, %r3669, %r3670, 23;
	shf.l.wrap.b32 	%r3676, %r3670, %r3669, 23;
	mov.b64 	%rd5004, {%r3676, %r3675};
	xor.b64  	%rd5005, %rd5003, %rd5004;
	add.s64 	%rd5006, %rd5000, %rd5005;
	add.s64 	%rd5007, %rd5006, 2861767655752347644;
	add.s64 	%rd5008, %rd5007, %rd4893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3677,%dummy}, %rd4987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3678}, %rd4987;
	}
	shf.r.wrap.b32 	%r3679, %r3678, %r3677, 28;
	shf.r.wrap.b32 	%r3680, %r3677, %r3678, 28;
	mov.b64 	%rd5009, {%r3680, %r3679};
	shf.l.wrap.b32 	%r3681, %r3677, %r3678, 30;
	shf.l.wrap.b32 	%r3682, %r3678, %r3677, 30;
	mov.b64 	%rd5010, {%r3682, %r3681};
	xor.b64  	%rd5011, %rd5009, %rd5010;
	shf.l.wrap.b32 	%r3683, %r3677, %r3678, 25;
	shf.l.wrap.b32 	%r3684, %r3678, %r3677, 25;
	mov.b64 	%rd5012, {%r3684, %r3683};
	xor.b64  	%rd5013, %rd5011, %rd5012;
	and.b64  	%rd5014, %rd4987, %rd4955;
	or.b64  	%rd5015, %rd4987, %rd4955;
	and.b64  	%rd5016, %rd5015, %rd4924;
	or.b64  	%rd5017, %rd5016, %rd5014;
	add.s64 	%rd5018, %rd5017, %rd5013;
	add.s64 	%rd5019, %rd5018, %rd5007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3685,%dummy}, %rd4963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3686}, %rd4963;
	}
	shf.r.wrap.b32 	%r3687, %r3686, %r3685, 19;
	shf.r.wrap.b32 	%r3688, %r3685, %r3686, 19;
	mov.b64 	%rd5020, {%r3688, %r3687};
	shf.l.wrap.b32 	%r3689, %r3685, %r3686, 3;
	shf.l.wrap.b32 	%r3690, %r3686, %r3685, 3;
	mov.b64 	%rd5021, {%r3690, %r3689};
	xor.b64  	%rd5022, %rd5020, %rd5021;
	shr.u64 	%rd5023, %rd4963, 6;
	xor.b64  	%rd5024, %rd5022, %rd5023;
	add.s64 	%rd5025, %rd5024, %rd2095;
	add.s64 	%rd5026, %rd5025, %rd4807;
	add.s64 	%rd5027, %rd5026, %rd2647;
	add.s64 	%rd5028, %rd5027, %rd4913;
	xor.b64  	%rd5029, %rd4976, %rd4944;
	and.b64  	%rd5030, %rd5008, %rd5029;
	xor.b64  	%rd5031, %rd5030, %rd4944;
	add.s64 	%rd5032, %rd5028, %rd5031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3691,%dummy}, %rd5008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3692}, %rd5008;
	}
	shf.r.wrap.b32 	%r3693, %r3692, %r3691, 14;
	shf.r.wrap.b32 	%r3694, %r3691, %r3692, 14;
	mov.b64 	%rd5033, {%r3694, %r3693};
	shf.r.wrap.b32 	%r3695, %r3692, %r3691, 18;
	shf.r.wrap.b32 	%r3696, %r3691, %r3692, 18;
	mov.b64 	%rd5034, {%r3696, %r3695};
	xor.b64  	%rd5035, %rd5033, %rd5034;
	shf.l.wrap.b32 	%r3697, %r3691, %r3692, 23;
	shf.l.wrap.b32 	%r3698, %r3692, %r3691, 23;
	mov.b64 	%rd5036, {%r3698, %r3697};
	xor.b64  	%rd5037, %rd5035, %rd5036;
	add.s64 	%rd5038, %rd5032, %rd5037;
	add.s64 	%rd5039, %rd5038, 3322285676063803686;
	add.s64 	%rd5040, %rd5039, %rd4924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3699,%dummy}, %rd5019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3700}, %rd5019;
	}
	shf.r.wrap.b32 	%r3701, %r3700, %r3699, 28;
	shf.r.wrap.b32 	%r3702, %r3699, %r3700, 28;
	mov.b64 	%rd5041, {%r3702, %r3701};
	shf.l.wrap.b32 	%r3703, %r3699, %r3700, 30;
	shf.l.wrap.b32 	%r3704, %r3700, %r3699, 30;
	mov.b64 	%rd5042, {%r3704, %r3703};
	xor.b64  	%rd5043, %rd5041, %rd5042;
	shf.l.wrap.b32 	%r3705, %r3699, %r3700, 25;
	shf.l.wrap.b32 	%r3706, %r3700, %r3699, 25;
	mov.b64 	%rd5044, {%r3706, %r3705};
	xor.b64  	%rd5045, %rd5043, %rd5044;
	and.b64  	%rd5046, %rd5019, %rd4987;
	or.b64  	%rd5047, %rd5019, %rd4987;
	and.b64  	%rd5048, %rd5047, %rd4955;
	or.b64  	%rd5049, %rd5048, %rd5046;
	add.s64 	%rd5050, %rd5049, %rd5045;
	add.s64 	%rd5051, %rd5050, %rd5039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3707,%dummy}, %rd4995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3708}, %rd4995;
	}
	shf.r.wrap.b32 	%r3709, %r3708, %r3707, 19;
	shf.r.wrap.b32 	%r3710, %r3707, %r3708, 19;
	mov.b64 	%rd5052, {%r3710, %r3709};
	shf.l.wrap.b32 	%r3711, %r3707, %r3708, 3;
	shf.l.wrap.b32 	%r3712, %r3708, %r3707, 3;
	mov.b64 	%rd5053, {%r3712, %r3711};
	xor.b64  	%rd5054, %rd5052, %rd5053;
	shr.u64 	%rd5055, %rd4995, 6;
	xor.b64  	%rd5056, %rd5054, %rd5055;
	add.s64 	%rd5057, %rd5056, %rd2131;
	add.s64 	%rd5058, %rd5057, %rd4838;
	add.s64 	%rd5059, %rd5058, %rd2684;
	add.s64 	%rd5060, %rd5059, %rd4944;
	xor.b64  	%rd5061, %rd5008, %rd4976;
	and.b64  	%rd5062, %rd5040, %rd5061;
	xor.b64  	%rd5063, %rd5062, %rd4976;
	add.s64 	%rd5064, %rd5060, %rd5063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3713,%dummy}, %rd5040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3714}, %rd5040;
	}
	shf.r.wrap.b32 	%r3715, %r3714, %r3713, 14;
	shf.r.wrap.b32 	%r3716, %r3713, %r3714, 14;
	mov.b64 	%rd5065, {%r3716, %r3715};
	shf.r.wrap.b32 	%r3717, %r3714, %r3713, 18;
	shf.r.wrap.b32 	%r3718, %r3713, %r3714, 18;
	mov.b64 	%rd5066, {%r3718, %r3717};
	xor.b64  	%rd5067, %rd5065, %rd5066;
	shf.l.wrap.b32 	%r3719, %r3713, %r3714, 23;
	shf.l.wrap.b32 	%r3720, %r3714, %r3713, 23;
	mov.b64 	%rd5068, {%r3720, %r3719};
	xor.b64  	%rd5069, %rd5067, %rd5068;
	add.s64 	%rd5070, %rd5064, %rd5069;
	add.s64 	%rd5071, %rd5070, 5560940570517711597;
	add.s64 	%rd5072, %rd5071, %rd4955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3721,%dummy}, %rd5051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3722}, %rd5051;
	}
	shf.r.wrap.b32 	%r3723, %r3722, %r3721, 28;
	shf.r.wrap.b32 	%r3724, %r3721, %r3722, 28;
	mov.b64 	%rd5073, {%r3724, %r3723};
	shf.l.wrap.b32 	%r3725, %r3721, %r3722, 30;
	shf.l.wrap.b32 	%r3726, %r3722, %r3721, 30;
	mov.b64 	%rd5074, {%r3726, %r3725};
	xor.b64  	%rd5075, %rd5073, %rd5074;
	shf.l.wrap.b32 	%r3727, %r3721, %r3722, 25;
	shf.l.wrap.b32 	%r3728, %r3722, %r3721, 25;
	mov.b64 	%rd5076, {%r3728, %r3727};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	and.b64  	%rd5078, %rd5051, %rd5019;
	or.b64  	%rd5079, %rd5051, %rd5019;
	and.b64  	%rd5080, %rd5079, %rd4987;
	or.b64  	%rd5081, %rd5080, %rd5078;
	add.s64 	%rd5082, %rd5081, %rd5077;
	add.s64 	%rd5083, %rd5082, %rd5071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3729,%dummy}, %rd5027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3730}, %rd5027;
	}
	shf.r.wrap.b32 	%r3731, %r3730, %r3729, 19;
	shf.r.wrap.b32 	%r3732, %r3729, %r3730, 19;
	mov.b64 	%rd5084, {%r3732, %r3731};
	shf.l.wrap.b32 	%r3733, %r3729, %r3730, 3;
	shf.l.wrap.b32 	%r3734, %r3730, %r3729, 3;
	mov.b64 	%rd5085, {%r3734, %r3733};
	xor.b64  	%rd5086, %rd5084, %rd5085;
	shr.u64 	%rd5087, %rd5027, 6;
	xor.b64  	%rd5088, %rd5086, %rd5087;
	add.s64 	%rd5089, %rd5088, %rd2167;
	add.s64 	%rd5090, %rd5089, %rd4869;
	add.s64 	%rd5091, %rd5090, %rd2721;
	add.s64 	%rd5092, %rd5091, %rd4976;
	xor.b64  	%rd5093, %rd5040, %rd5008;
	and.b64  	%rd5094, %rd5072, %rd5093;
	xor.b64  	%rd5095, %rd5094, %rd5008;
	add.s64 	%rd5096, %rd5092, %rd5095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3735,%dummy}, %rd5072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3736}, %rd5072;
	}
	shf.r.wrap.b32 	%r3737, %r3736, %r3735, 14;
	shf.r.wrap.b32 	%r3738, %r3735, %r3736, 14;
	mov.b64 	%rd5097, {%r3738, %r3737};
	shf.r.wrap.b32 	%r3739, %r3736, %r3735, 18;
	shf.r.wrap.b32 	%r3740, %r3735, %r3736, 18;
	mov.b64 	%rd5098, {%r3740, %r3739};
	xor.b64  	%rd5099, %rd5097, %rd5098;
	shf.l.wrap.b32 	%r3741, %r3735, %r3736, 23;
	shf.l.wrap.b32 	%r3742, %r3736, %r3735, 23;
	mov.b64 	%rd5100, {%r3742, %r3741};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	add.s64 	%rd5102, %rd5096, %rd5101;
	add.s64 	%rd5103, %rd5102, 5996557281743188959;
	add.s64 	%rd5104, %rd5103, %rd4987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3743,%dummy}, %rd5083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3744}, %rd5083;
	}
	shf.r.wrap.b32 	%r3745, %r3744, %r3743, 28;
	shf.r.wrap.b32 	%r3746, %r3743, %r3744, 28;
	mov.b64 	%rd5105, {%r3746, %r3745};
	shf.l.wrap.b32 	%r3747, %r3743, %r3744, 30;
	shf.l.wrap.b32 	%r3748, %r3744, %r3743, 30;
	mov.b64 	%rd5106, {%r3748, %r3747};
	xor.b64  	%rd5107, %rd5105, %rd5106;
	shf.l.wrap.b32 	%r3749, %r3743, %r3744, 25;
	shf.l.wrap.b32 	%r3750, %r3744, %r3743, 25;
	mov.b64 	%rd5108, {%r3750, %r3749};
	xor.b64  	%rd5109, %rd5107, %rd5108;
	and.b64  	%rd5110, %rd5083, %rd5051;
	or.b64  	%rd5111, %rd5083, %rd5051;
	and.b64  	%rd5112, %rd5111, %rd5019;
	or.b64  	%rd5113, %rd5112, %rd5110;
	add.s64 	%rd5114, %rd5113, %rd5109;
	add.s64 	%rd5115, %rd5114, %rd5103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3751,%dummy}, %rd5059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3752}, %rd5059;
	}
	shf.r.wrap.b32 	%r3753, %r3752, %r3751, 19;
	shf.r.wrap.b32 	%r3754, %r3751, %r3752, 19;
	mov.b64 	%rd5116, {%r3754, %r3753};
	shf.l.wrap.b32 	%r3755, %r3751, %r3752, 3;
	shf.l.wrap.b32 	%r3756, %r3752, %r3751, 3;
	mov.b64 	%rd5117, {%r3756, %r3755};
	xor.b64  	%rd5118, %rd5116, %rd5117;
	shr.u64 	%rd5119, %rd5059, 6;
	xor.b64  	%rd5120, %rd5118, %rd5119;
	add.s64 	%rd5121, %rd5120, %rd2203;
	add.s64 	%rd5122, %rd5121, %rd4900;
	add.s64 	%rd5123, %rd5122, %rd2758;
	add.s64 	%rd5124, %rd5123, %rd5008;
	xor.b64  	%rd5125, %rd5072, %rd5040;
	and.b64  	%rd5126, %rd5104, %rd5125;
	xor.b64  	%rd5127, %rd5126, %rd5040;
	add.s64 	%rd5128, %rd5124, %rd5127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3757,%dummy}, %rd5104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3758}, %rd5104;
	}
	shf.r.wrap.b32 	%r3759, %r3758, %r3757, 14;
	shf.r.wrap.b32 	%r3760, %r3757, %r3758, 14;
	mov.b64 	%rd5129, {%r3760, %r3759};
	shf.r.wrap.b32 	%r3761, %r3758, %r3757, 18;
	shf.r.wrap.b32 	%r3762, %r3757, %r3758, 18;
	mov.b64 	%rd5130, {%r3762, %r3761};
	xor.b64  	%rd5131, %rd5129, %rd5130;
	shf.l.wrap.b32 	%r3763, %r3757, %r3758, 23;
	shf.l.wrap.b32 	%r3764, %r3758, %r3757, 23;
	mov.b64 	%rd5132, {%r3764, %r3763};
	xor.b64  	%rd5133, %rd5131, %rd5132;
	add.s64 	%rd5134, %rd5128, %rd5133;
	add.s64 	%rd5135, %rd5134, 7280758554555802590;
	add.s64 	%rd5136, %rd5135, %rd5019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3765,%dummy}, %rd5115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3766}, %rd5115;
	}
	shf.r.wrap.b32 	%r3767, %r3766, %r3765, 28;
	shf.r.wrap.b32 	%r3768, %r3765, %r3766, 28;
	mov.b64 	%rd5137, {%r3768, %r3767};
	shf.l.wrap.b32 	%r3769, %r3765, %r3766, 30;
	shf.l.wrap.b32 	%r3770, %r3766, %r3765, 30;
	mov.b64 	%rd5138, {%r3770, %r3769};
	xor.b64  	%rd5139, %rd5137, %rd5138;
	shf.l.wrap.b32 	%r3771, %r3765, %r3766, 25;
	shf.l.wrap.b32 	%r3772, %r3766, %r3765, 25;
	mov.b64 	%rd5140, {%r3772, %r3771};
	xor.b64  	%rd5141, %rd5139, %rd5140;
	and.b64  	%rd5142, %rd5115, %rd5083;
	or.b64  	%rd5143, %rd5115, %rd5083;
	and.b64  	%rd5144, %rd5143, %rd5051;
	or.b64  	%rd5145, %rd5144, %rd5142;
	add.s64 	%rd5146, %rd5145, %rd5141;
	add.s64 	%rd5147, %rd5146, %rd5135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3773,%dummy}, %rd5091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3774}, %rd5091;
	}
	shf.r.wrap.b32 	%r3775, %r3774, %r3773, 19;
	shf.r.wrap.b32 	%r3776, %r3773, %r3774, 19;
	mov.b64 	%rd5148, {%r3776, %r3775};
	shf.l.wrap.b32 	%r3777, %r3773, %r3774, 3;
	shf.l.wrap.b32 	%r3778, %r3774, %r3773, 3;
	mov.b64 	%rd5149, {%r3778, %r3777};
	xor.b64  	%rd5150, %rd5148, %rd5149;
	shr.u64 	%rd5151, %rd5091, 6;
	xor.b64  	%rd5152, %rd5150, %rd5151;
	add.s64 	%rd5153, %rd5152, %rd2239;
	add.s64 	%rd5154, %rd5153, %rd4931;
	add.s64 	%rd5155, %rd5154, %rd2795;
	add.s64 	%rd5156, %rd5155, %rd5040;
	xor.b64  	%rd5157, %rd5104, %rd5072;
	and.b64  	%rd5158, %rd5136, %rd5157;
	xor.b64  	%rd5159, %rd5158, %rd5072;
	add.s64 	%rd5160, %rd5156, %rd5159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3779,%dummy}, %rd5136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3780}, %rd5136;
	}
	shf.r.wrap.b32 	%r3781, %r3780, %r3779, 14;
	shf.r.wrap.b32 	%r3782, %r3779, %r3780, 14;
	mov.b64 	%rd5161, {%r3782, %r3781};
	shf.r.wrap.b32 	%r3783, %r3780, %r3779, 18;
	shf.r.wrap.b32 	%r3784, %r3779, %r3780, 18;
	mov.b64 	%rd5162, {%r3784, %r3783};
	xor.b64  	%rd5163, %rd5161, %rd5162;
	shf.l.wrap.b32 	%r3785, %r3779, %r3780, 23;
	shf.l.wrap.b32 	%r3786, %r3780, %r3779, 23;
	mov.b64 	%rd5164, {%r3786, %r3785};
	xor.b64  	%rd5165, %rd5163, %rd5164;
	add.s64 	%rd5166, %rd5160, %rd5165;
	add.s64 	%rd5167, %rd5166, 8532644243296465576;
	add.s64 	%rd5168, %rd5167, %rd5051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3787,%dummy}, %rd5147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3788}, %rd5147;
	}
	shf.r.wrap.b32 	%r3789, %r3788, %r3787, 28;
	shf.r.wrap.b32 	%r3790, %r3787, %r3788, 28;
	mov.b64 	%rd5169, {%r3790, %r3789};
	shf.l.wrap.b32 	%r3791, %r3787, %r3788, 30;
	shf.l.wrap.b32 	%r3792, %r3788, %r3787, 30;
	mov.b64 	%rd5170, {%r3792, %r3791};
	xor.b64  	%rd5171, %rd5169, %rd5170;
	shf.l.wrap.b32 	%r3793, %r3787, %r3788, 25;
	shf.l.wrap.b32 	%r3794, %r3788, %r3787, 25;
	mov.b64 	%rd5172, {%r3794, %r3793};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	and.b64  	%rd5174, %rd5147, %rd5115;
	or.b64  	%rd5175, %rd5147, %rd5115;
	and.b64  	%rd5176, %rd5175, %rd5083;
	or.b64  	%rd5177, %rd5176, %rd5174;
	add.s64 	%rd5178, %rd5177, %rd5173;
	add.s64 	%rd5179, %rd5178, %rd5167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3795,%dummy}, %rd5123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3796}, %rd5123;
	}
	shf.r.wrap.b32 	%r3797, %r3796, %r3795, 19;
	shf.r.wrap.b32 	%r3798, %r3795, %r3796, 19;
	mov.b64 	%rd5180, {%r3798, %r3797};
	shf.l.wrap.b32 	%r3799, %r3795, %r3796, 3;
	shf.l.wrap.b32 	%r3800, %r3796, %r3795, 3;
	mov.b64 	%rd5181, {%r3800, %r3799};
	xor.b64  	%rd5182, %rd5180, %rd5181;
	shr.u64 	%rd5183, %rd5123, 6;
	xor.b64  	%rd5184, %rd5182, %rd5183;
	shf.r.wrap.b32 	%r3801, %r3510, %r3509, 1;
	shf.r.wrap.b32 	%r3802, %r3509, %r3510, 1;
	mov.b64 	%rd5185, {%r3802, %r3801};
	shf.r.wrap.b32 	%r3803, %r3510, %r3509, 8;
	shf.r.wrap.b32 	%r3804, %r3509, %r3510, 8;
	mov.b64 	%rd5186, {%r3804, %r3803};
	xor.b64  	%rd5187, %rd5185, %rd5186;
	shr.u64 	%rd5188, %rd4719, 7;
	xor.b64  	%rd5189, %rd5187, %rd5188;
	add.s64 	%rd5190, %rd5184, %rd2276;
	add.s64 	%rd5191, %rd5190, %rd4963;
	add.s64 	%rd5192, %rd5191, %rd5189;
	add.s64 	%rd5193, %rd5192, %rd5072;
	xor.b64  	%rd5194, %rd5136, %rd5104;
	and.b64  	%rd5195, %rd5168, %rd5194;
	xor.b64  	%rd5196, %rd5195, %rd5104;
	add.s64 	%rd5197, %rd5193, %rd5196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3805,%dummy}, %rd5168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3806}, %rd5168;
	}
	shf.r.wrap.b32 	%r3807, %r3806, %r3805, 14;
	shf.r.wrap.b32 	%r3808, %r3805, %r3806, 14;
	mov.b64 	%rd5198, {%r3808, %r3807};
	shf.r.wrap.b32 	%r3809, %r3806, %r3805, 18;
	shf.r.wrap.b32 	%r3810, %r3805, %r3806, 18;
	mov.b64 	%rd5199, {%r3810, %r3809};
	xor.b64  	%rd5200, %rd5198, %rd5199;
	shf.l.wrap.b32 	%r3811, %r3805, %r3806, 23;
	shf.l.wrap.b32 	%r3812, %r3806, %r3805, 23;
	mov.b64 	%rd5201, {%r3812, %r3811};
	xor.b64  	%rd5202, %rd5200, %rd5201;
	add.s64 	%rd5203, %rd5197, %rd5202;
	add.s64 	%rd5204, %rd5203, -9096487096722542874;
	add.s64 	%rd5205, %rd5204, %rd5083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd5179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd5179;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 28;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 28;
	mov.b64 	%rd5206, {%r3816, %r3815};
	shf.l.wrap.b32 	%r3817, %r3813, %r3814, 30;
	shf.l.wrap.b32 	%r3818, %r3814, %r3813, 30;
	mov.b64 	%rd5207, {%r3818, %r3817};
	xor.b64  	%rd5208, %rd5206, %rd5207;
	shf.l.wrap.b32 	%r3819, %r3813, %r3814, 25;
	shf.l.wrap.b32 	%r3820, %r3814, %r3813, 25;
	mov.b64 	%rd5209, {%r3820, %r3819};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	and.b64  	%rd5211, %rd5179, %rd5147;
	or.b64  	%rd5212, %rd5179, %rd5147;
	and.b64  	%rd5213, %rd5212, %rd5115;
	or.b64  	%rd5214, %rd5213, %rd5211;
	add.s64 	%rd5215, %rd5214, %rd5210;
	add.s64 	%rd5216, %rd5215, %rd5204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3821,%dummy}, %rd5155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3822}, %rd5155;
	}
	shf.r.wrap.b32 	%r3823, %r3822, %r3821, 19;
	shf.r.wrap.b32 	%r3824, %r3821, %r3822, 19;
	mov.b64 	%rd5217, {%r3824, %r3823};
	shf.l.wrap.b32 	%r3825, %r3821, %r3822, 3;
	shf.l.wrap.b32 	%r3826, %r3822, %r3821, 3;
	mov.b64 	%rd5218, {%r3826, %r3825};
	xor.b64  	%rd5219, %rd5217, %rd5218;
	shr.u64 	%rd5220, %rd5155, 6;
	xor.b64  	%rd5221, %rd5219, %rd5220;
	shf.r.wrap.b32 	%r3827, %r3532, %r3531, 1;
	shf.r.wrap.b32 	%r3828, %r3531, %r3532, 1;
	mov.b64 	%rd5222, {%r3828, %r3827};
	shf.r.wrap.b32 	%r3829, %r3532, %r3531, 8;
	shf.r.wrap.b32 	%r3830, %r3531, %r3532, 8;
	mov.b64 	%rd5223, {%r3830, %r3829};
	xor.b64  	%rd5224, %rd5222, %rd5223;
	shr.u64 	%rd5225, %rd4744, 7;
	xor.b64  	%rd5226, %rd5224, %rd5225;
	add.s64 	%rd5227, %rd5221, %rd4719;
	add.s64 	%rd5228, %rd5227, %rd4995;
	add.s64 	%rd5229, %rd5228, %rd5226;
	add.s64 	%rd5230, %rd5229, %rd5104;
	xor.b64  	%rd5231, %rd5168, %rd5136;
	and.b64  	%rd5232, %rd5205, %rd5231;
	xor.b64  	%rd5233, %rd5232, %rd5136;
	add.s64 	%rd5234, %rd5230, %rd5233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3831,%dummy}, %rd5205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3832}, %rd5205;
	}
	shf.r.wrap.b32 	%r3833, %r3832, %r3831, 14;
	shf.r.wrap.b32 	%r3834, %r3831, %r3832, 14;
	mov.b64 	%rd5235, {%r3834, %r3833};
	shf.r.wrap.b32 	%r3835, %r3832, %r3831, 18;
	shf.r.wrap.b32 	%r3836, %r3831, %r3832, 18;
	mov.b64 	%rd5236, {%r3836, %r3835};
	xor.b64  	%rd5237, %rd5235, %rd5236;
	shf.l.wrap.b32 	%r3837, %r3831, %r3832, 23;
	shf.l.wrap.b32 	%r3838, %r3832, %r3831, 23;
	mov.b64 	%rd5238, {%r3838, %r3837};
	xor.b64  	%rd5239, %rd5237, %rd5238;
	add.s64 	%rd5240, %rd5234, %rd5239;
	add.s64 	%rd5241, %rd5240, -7894198246740708037;
	add.s64 	%rd5242, %rd5241, %rd5115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3839,%dummy}, %rd5216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3840}, %rd5216;
	}
	shf.r.wrap.b32 	%r3841, %r3840, %r3839, 28;
	shf.r.wrap.b32 	%r3842, %r3839, %r3840, 28;
	mov.b64 	%rd5243, {%r3842, %r3841};
	shf.l.wrap.b32 	%r3843, %r3839, %r3840, 30;
	shf.l.wrap.b32 	%r3844, %r3840, %r3839, 30;
	mov.b64 	%rd5244, {%r3844, %r3843};
	xor.b64  	%rd5245, %rd5243, %rd5244;
	shf.l.wrap.b32 	%r3845, %r3839, %r3840, 25;
	shf.l.wrap.b32 	%r3846, %r3840, %r3839, 25;
	mov.b64 	%rd5246, {%r3846, %r3845};
	xor.b64  	%rd5247, %rd5245, %rd5246;
	and.b64  	%rd5248, %rd5216, %rd5179;
	or.b64  	%rd5249, %rd5216, %rd5179;
	and.b64  	%rd5250, %rd5249, %rd5147;
	or.b64  	%rd5251, %rd5250, %rd5248;
	add.s64 	%rd5252, %rd5251, %rd5247;
	add.s64 	%rd5253, %rd5252, %rd5241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3847,%dummy}, %rd5192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3848}, %rd5192;
	}
	shf.r.wrap.b32 	%r3849, %r3848, %r3847, 19;
	shf.r.wrap.b32 	%r3850, %r3847, %r3848, 19;
	mov.b64 	%rd5254, {%r3850, %r3849};
	shf.l.wrap.b32 	%r3851, %r3847, %r3848, 3;
	shf.l.wrap.b32 	%r3852, %r3848, %r3847, 3;
	mov.b64 	%rd5255, {%r3852, %r3851};
	xor.b64  	%rd5256, %rd5254, %rd5255;
	shr.u64 	%rd5257, %rd5192, 6;
	xor.b64  	%rd5258, %rd5256, %rd5257;
	shf.r.wrap.b32 	%r3853, %r3554, %r3553, 1;
	shf.r.wrap.b32 	%r3854, %r3553, %r3554, 1;
	mov.b64 	%rd5259, {%r3854, %r3853};
	shf.r.wrap.b32 	%r3855, %r3554, %r3553, 8;
	shf.r.wrap.b32 	%r3856, %r3553, %r3554, 8;
	mov.b64 	%rd5260, {%r3856, %r3855};
	xor.b64  	%rd5261, %rd5259, %rd5260;
	shr.u64 	%rd5262, %rd4776, 7;
	xor.b64  	%rd5263, %rd5261, %rd5262;
	add.s64 	%rd5264, %rd5258, %rd4744;
	add.s64 	%rd5265, %rd5264, %rd5027;
	add.s64 	%rd5266, %rd5265, %rd5263;
	add.s64 	%rd5267, %rd5266, %rd5136;
	xor.b64  	%rd5268, %rd5205, %rd5168;
	and.b64  	%rd5269, %rd5242, %rd5268;
	xor.b64  	%rd5270, %rd5269, %rd5168;
	add.s64 	%rd5271, %rd5267, %rd5270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3857,%dummy}, %rd5242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3858}, %rd5242;
	}
	shf.r.wrap.b32 	%r3859, %r3858, %r3857, 14;
	shf.r.wrap.b32 	%r3860, %r3857, %r3858, 14;
	mov.b64 	%rd5272, {%r3860, %r3859};
	shf.r.wrap.b32 	%r3861, %r3858, %r3857, 18;
	shf.r.wrap.b32 	%r3862, %r3857, %r3858, 18;
	mov.b64 	%rd5273, {%r3862, %r3861};
	xor.b64  	%rd5274, %rd5272, %rd5273;
	shf.l.wrap.b32 	%r3863, %r3857, %r3858, 23;
	shf.l.wrap.b32 	%r3864, %r3858, %r3857, 23;
	mov.b64 	%rd5275, {%r3864, %r3863};
	xor.b64  	%rd5276, %rd5274, %rd5275;
	add.s64 	%rd5277, %rd5271, %rd5276;
	add.s64 	%rd5278, %rd5277, -6719396339535248540;
	add.s64 	%rd5279, %rd5278, %rd5147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3865,%dummy}, %rd5253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3866}, %rd5253;
	}
	shf.r.wrap.b32 	%r3867, %r3866, %r3865, 28;
	shf.r.wrap.b32 	%r3868, %r3865, %r3866, 28;
	mov.b64 	%rd5280, {%r3868, %r3867};
	shf.l.wrap.b32 	%r3869, %r3865, %r3866, 30;
	shf.l.wrap.b32 	%r3870, %r3866, %r3865, 30;
	mov.b64 	%rd5281, {%r3870, %r3869};
	xor.b64  	%rd5282, %rd5280, %rd5281;
	shf.l.wrap.b32 	%r3871, %r3865, %r3866, 25;
	shf.l.wrap.b32 	%r3872, %r3866, %r3865, 25;
	mov.b64 	%rd5283, {%r3872, %r3871};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	and.b64  	%rd5285, %rd5253, %rd5216;
	or.b64  	%rd5286, %rd5253, %rd5216;
	and.b64  	%rd5287, %rd5286, %rd5179;
	or.b64  	%rd5288, %rd5287, %rd5285;
	add.s64 	%rd5289, %rd5288, %rd5284;
	add.s64 	%rd5290, %rd5289, %rd5278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3873,%dummy}, %rd5229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3874}, %rd5229;
	}
	shf.r.wrap.b32 	%r3875, %r3874, %r3873, 19;
	shf.r.wrap.b32 	%r3876, %r3873, %r3874, 19;
	mov.b64 	%rd5291, {%r3876, %r3875};
	shf.l.wrap.b32 	%r3877, %r3873, %r3874, 3;
	shf.l.wrap.b32 	%r3878, %r3874, %r3873, 3;
	mov.b64 	%rd5292, {%r3878, %r3877};
	xor.b64  	%rd5293, %rd5291, %rd5292;
	shr.u64 	%rd5294, %rd5229, 6;
	xor.b64  	%rd5295, %rd5293, %rd5294;
	shf.r.wrap.b32 	%r3879, %r3576, %r3575, 1;
	shf.r.wrap.b32 	%r3880, %r3575, %r3576, 1;
	mov.b64 	%rd5296, {%r3880, %r3879};
	shf.r.wrap.b32 	%r3881, %r3576, %r3575, 8;
	shf.r.wrap.b32 	%r3882, %r3575, %r3576, 8;
	mov.b64 	%rd5297, {%r3882, %r3881};
	xor.b64  	%rd5298, %rd5296, %rd5297;
	shr.u64 	%rd5299, %rd4807, 7;
	xor.b64  	%rd5300, %rd5298, %rd5299;
	add.s64 	%rd5301, %rd5295, %rd4776;
	add.s64 	%rd5302, %rd5301, %rd5059;
	add.s64 	%rd5303, %rd5302, %rd5300;
	add.s64 	%rd5304, %rd5303, %rd5168;
	xor.b64  	%rd5305, %rd5242, %rd5205;
	and.b64  	%rd5306, %rd5279, %rd5305;
	xor.b64  	%rd5307, %rd5306, %rd5205;
	add.s64 	%rd5308, %rd5304, %rd5307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd5279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd5279;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 14;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 14;
	mov.b64 	%rd5309, {%r3886, %r3885};
	shf.r.wrap.b32 	%r3887, %r3884, %r3883, 18;
	shf.r.wrap.b32 	%r3888, %r3883, %r3884, 18;
	mov.b64 	%rd5310, {%r3888, %r3887};
	xor.b64  	%rd5311, %rd5309, %rd5310;
	shf.l.wrap.b32 	%r3889, %r3883, %r3884, 23;
	shf.l.wrap.b32 	%r3890, %r3884, %r3883, 23;
	mov.b64 	%rd5312, {%r3890, %r3889};
	xor.b64  	%rd5313, %rd5311, %rd5312;
	add.s64 	%rd5314, %rd5308, %rd5313;
	add.s64 	%rd5315, %rd5314, -6333637450476146687;
	add.s64 	%rd5316, %rd5315, %rd5179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd5290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd5290;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 28;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 28;
	mov.b64 	%rd5317, {%r3894, %r3893};
	shf.l.wrap.b32 	%r3895, %r3891, %r3892, 30;
	shf.l.wrap.b32 	%r3896, %r3892, %r3891, 30;
	mov.b64 	%rd5318, {%r3896, %r3895};
	xor.b64  	%rd5319, %rd5317, %rd5318;
	shf.l.wrap.b32 	%r3897, %r3891, %r3892, 25;
	shf.l.wrap.b32 	%r3898, %r3892, %r3891, 25;
	mov.b64 	%rd5320, {%r3898, %r3897};
	xor.b64  	%rd5321, %rd5319, %rd5320;
	and.b64  	%rd5322, %rd5290, %rd5253;
	or.b64  	%rd5323, %rd5290, %rd5253;
	and.b64  	%rd5324, %rd5323, %rd5216;
	or.b64  	%rd5325, %rd5324, %rd5322;
	add.s64 	%rd5326, %rd5325, %rd5321;
	add.s64 	%rd5327, %rd5326, %rd5315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3899,%dummy}, %rd5266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3900}, %rd5266;
	}
	shf.r.wrap.b32 	%r3901, %r3900, %r3899, 19;
	shf.r.wrap.b32 	%r3902, %r3899, %r3900, 19;
	mov.b64 	%rd5328, {%r3902, %r3901};
	shf.l.wrap.b32 	%r3903, %r3899, %r3900, 3;
	shf.l.wrap.b32 	%r3904, %r3900, %r3899, 3;
	mov.b64 	%rd5329, {%r3904, %r3903};
	xor.b64  	%rd5330, %rd5328, %rd5329;
	shr.u64 	%rd5331, %rd5266, 6;
	xor.b64  	%rd5332, %rd5330, %rd5331;
	shf.r.wrap.b32 	%r3905, %r3598, %r3597, 1;
	shf.r.wrap.b32 	%r3906, %r3597, %r3598, 1;
	mov.b64 	%rd5333, {%r3906, %r3905};
	shf.r.wrap.b32 	%r3907, %r3598, %r3597, 8;
	shf.r.wrap.b32 	%r3908, %r3597, %r3598, 8;
	mov.b64 	%rd5334, {%r3908, %r3907};
	xor.b64  	%rd5335, %rd5333, %rd5334;
	shr.u64 	%rd5336, %rd4838, 7;
	xor.b64  	%rd5337, %rd5335, %rd5336;
	add.s64 	%rd5338, %rd5332, %rd4807;
	add.s64 	%rd5339, %rd5338, %rd5091;
	add.s64 	%rd5340, %rd5339, %rd5337;
	add.s64 	%rd5341, %rd5340, %rd5205;
	xor.b64  	%rd5342, %rd5279, %rd5242;
	and.b64  	%rd5343, %rd5316, %rd5342;
	xor.b64  	%rd5344, %rd5343, %rd5242;
	add.s64 	%rd5345, %rd5341, %rd5344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3909,%dummy}, %rd5316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3910}, %rd5316;
	}
	shf.r.wrap.b32 	%r3911, %r3910, %r3909, 14;
	shf.r.wrap.b32 	%r3912, %r3909, %r3910, 14;
	mov.b64 	%rd5346, {%r3912, %r3911};
	shf.r.wrap.b32 	%r3913, %r3910, %r3909, 18;
	shf.r.wrap.b32 	%r3914, %r3909, %r3910, 18;
	mov.b64 	%rd5347, {%r3914, %r3913};
	xor.b64  	%rd5348, %rd5346, %rd5347;
	shf.l.wrap.b32 	%r3915, %r3909, %r3910, 23;
	shf.l.wrap.b32 	%r3916, %r3910, %r3909, 23;
	mov.b64 	%rd5349, {%r3916, %r3915};
	xor.b64  	%rd5350, %rd5348, %rd5349;
	add.s64 	%rd5351, %rd5345, %rd5350;
	add.s64 	%rd5352, %rd5351, -4446306890439682159;
	add.s64 	%rd5353, %rd5352, %rd5216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3917,%dummy}, %rd5327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3918}, %rd5327;
	}
	shf.r.wrap.b32 	%r3919, %r3918, %r3917, 28;
	shf.r.wrap.b32 	%r3920, %r3917, %r3918, 28;
	mov.b64 	%rd5354, {%r3920, %r3919};
	shf.l.wrap.b32 	%r3921, %r3917, %r3918, 30;
	shf.l.wrap.b32 	%r3922, %r3918, %r3917, 30;
	mov.b64 	%rd5355, {%r3922, %r3921};
	xor.b64  	%rd5356, %rd5354, %rd5355;
	shf.l.wrap.b32 	%r3923, %r3917, %r3918, 25;
	shf.l.wrap.b32 	%r3924, %r3918, %r3917, 25;
	mov.b64 	%rd5357, {%r3924, %r3923};
	xor.b64  	%rd5358, %rd5356, %rd5357;
	and.b64  	%rd5359, %rd5327, %rd5290;
	or.b64  	%rd5360, %rd5327, %rd5290;
	and.b64  	%rd5361, %rd5360, %rd5253;
	or.b64  	%rd5362, %rd5361, %rd5359;
	add.s64 	%rd5363, %rd5362, %rd5358;
	add.s64 	%rd5364, %rd5363, %rd5352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3925,%dummy}, %rd5303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3926}, %rd5303;
	}
	shf.r.wrap.b32 	%r3927, %r3926, %r3925, 19;
	shf.r.wrap.b32 	%r3928, %r3925, %r3926, 19;
	mov.b64 	%rd5365, {%r3928, %r3927};
	shf.l.wrap.b32 	%r3929, %r3925, %r3926, 3;
	shf.l.wrap.b32 	%r3930, %r3926, %r3925, 3;
	mov.b64 	%rd5366, {%r3930, %r3929};
	xor.b64  	%rd5367, %rd5365, %rd5366;
	shr.u64 	%rd5368, %rd5303, 6;
	xor.b64  	%rd5369, %rd5367, %rd5368;
	shf.r.wrap.b32 	%r3931, %r3620, %r3619, 1;
	shf.r.wrap.b32 	%r3932, %r3619, %r3620, 1;
	mov.b64 	%rd5370, {%r3932, %r3931};
	shf.r.wrap.b32 	%r3933, %r3620, %r3619, 8;
	shf.r.wrap.b32 	%r3934, %r3619, %r3620, 8;
	mov.b64 	%rd5371, {%r3934, %r3933};
	xor.b64  	%rd5372, %rd5370, %rd5371;
	shr.u64 	%rd5373, %rd4869, 7;
	xor.b64  	%rd5374, %rd5372, %rd5373;
	add.s64 	%rd5375, %rd5369, %rd4838;
	add.s64 	%rd5376, %rd5375, %rd5123;
	add.s64 	%rd5377, %rd5376, %rd5374;
	add.s64 	%rd5378, %rd5377, %rd5242;
	xor.b64  	%rd5379, %rd5316, %rd5279;
	and.b64  	%rd5380, %rd5353, %rd5379;
	xor.b64  	%rd5381, %rd5380, %rd5279;
	add.s64 	%rd5382, %rd5378, %rd5381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3935,%dummy}, %rd5353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3936}, %rd5353;
	}
	shf.r.wrap.b32 	%r3937, %r3936, %r3935, 14;
	shf.r.wrap.b32 	%r3938, %r3935, %r3936, 14;
	mov.b64 	%rd5383, {%r3938, %r3937};
	shf.r.wrap.b32 	%r3939, %r3936, %r3935, 18;
	shf.r.wrap.b32 	%r3940, %r3935, %r3936, 18;
	mov.b64 	%rd5384, {%r3940, %r3939};
	xor.b64  	%rd5385, %rd5383, %rd5384;
	shf.l.wrap.b32 	%r3941, %r3935, %r3936, 23;
	shf.l.wrap.b32 	%r3942, %r3936, %r3935, 23;
	mov.b64 	%rd5386, {%r3942, %r3941};
	xor.b64  	%rd5387, %rd5385, %rd5386;
	add.s64 	%rd5388, %rd5382, %rd5387;
	add.s64 	%rd5389, %rd5388, -4076793802049405392;
	add.s64 	%rd5390, %rd5389, %rd5253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3943,%dummy}, %rd5364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3944}, %rd5364;
	}
	shf.r.wrap.b32 	%r3945, %r3944, %r3943, 28;
	shf.r.wrap.b32 	%r3946, %r3943, %r3944, 28;
	mov.b64 	%rd5391, {%r3946, %r3945};
	shf.l.wrap.b32 	%r3947, %r3943, %r3944, 30;
	shf.l.wrap.b32 	%r3948, %r3944, %r3943, 30;
	mov.b64 	%rd5392, {%r3948, %r3947};
	xor.b64  	%rd5393, %rd5391, %rd5392;
	shf.l.wrap.b32 	%r3949, %r3943, %r3944, 25;
	shf.l.wrap.b32 	%r3950, %r3944, %r3943, 25;
	mov.b64 	%rd5394, {%r3950, %r3949};
	xor.b64  	%rd5395, %rd5393, %rd5394;
	and.b64  	%rd5396, %rd5364, %rd5327;
	or.b64  	%rd5397, %rd5364, %rd5327;
	and.b64  	%rd5398, %rd5397, %rd5290;
	or.b64  	%rd5399, %rd5398, %rd5396;
	add.s64 	%rd5400, %rd5399, %rd5395;
	add.s64 	%rd5401, %rd5400, %rd5389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3951,%dummy}, %rd5340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3952}, %rd5340;
	}
	shf.r.wrap.b32 	%r3953, %r3952, %r3951, 19;
	shf.r.wrap.b32 	%r3954, %r3951, %r3952, 19;
	mov.b64 	%rd5402, {%r3954, %r3953};
	shf.l.wrap.b32 	%r3955, %r3951, %r3952, 3;
	shf.l.wrap.b32 	%r3956, %r3952, %r3951, 3;
	mov.b64 	%rd5403, {%r3956, %r3955};
	xor.b64  	%rd5404, %rd5402, %rd5403;
	shr.u64 	%rd5405, %rd5340, 6;
	xor.b64  	%rd5406, %rd5404, %rd5405;
	shf.r.wrap.b32 	%r3957, %r3642, %r3641, 1;
	shf.r.wrap.b32 	%r3958, %r3641, %r3642, 1;
	mov.b64 	%rd5407, {%r3958, %r3957};
	shf.r.wrap.b32 	%r3959, %r3642, %r3641, 8;
	shf.r.wrap.b32 	%r3960, %r3641, %r3642, 8;
	mov.b64 	%rd5408, {%r3960, %r3959};
	xor.b64  	%rd5409, %rd5407, %rd5408;
	shr.u64 	%rd5410, %rd4900, 7;
	xor.b64  	%rd5411, %rd5409, %rd5410;
	add.s64 	%rd5412, %rd5406, %rd4869;
	add.s64 	%rd5413, %rd5412, %rd5155;
	add.s64 	%rd5414, %rd5413, %rd5411;
	add.s64 	%rd5415, %rd5414, %rd5279;
	xor.b64  	%rd5416, %rd5353, %rd5316;
	and.b64  	%rd5417, %rd5390, %rd5416;
	xor.b64  	%rd5418, %rd5417, %rd5316;
	add.s64 	%rd5419, %rd5415, %rd5418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3961,%dummy}, %rd5390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3962}, %rd5390;
	}
	shf.r.wrap.b32 	%r3963, %r3962, %r3961, 14;
	shf.r.wrap.b32 	%r3964, %r3961, %r3962, 14;
	mov.b64 	%rd5420, {%r3964, %r3963};
	shf.r.wrap.b32 	%r3965, %r3962, %r3961, 18;
	shf.r.wrap.b32 	%r3966, %r3961, %r3962, 18;
	mov.b64 	%rd5421, {%r3966, %r3965};
	xor.b64  	%rd5422, %rd5420, %rd5421;
	shf.l.wrap.b32 	%r3967, %r3961, %r3962, 23;
	shf.l.wrap.b32 	%r3968, %r3962, %r3961, 23;
	mov.b64 	%rd5423, {%r3968, %r3967};
	xor.b64  	%rd5424, %rd5422, %rd5423;
	add.s64 	%rd5425, %rd5419, %rd5424;
	add.s64 	%rd5426, %rd5425, -3345356375505022440;
	add.s64 	%rd5427, %rd5426, %rd5290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3969,%dummy}, %rd5401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3970}, %rd5401;
	}
	shf.r.wrap.b32 	%r3971, %r3970, %r3969, 28;
	shf.r.wrap.b32 	%r3972, %r3969, %r3970, 28;
	mov.b64 	%rd5428, {%r3972, %r3971};
	shf.l.wrap.b32 	%r3973, %r3969, %r3970, 30;
	shf.l.wrap.b32 	%r3974, %r3970, %r3969, 30;
	mov.b64 	%rd5429, {%r3974, %r3973};
	xor.b64  	%rd5430, %rd5428, %rd5429;
	shf.l.wrap.b32 	%r3975, %r3969, %r3970, 25;
	shf.l.wrap.b32 	%r3976, %r3970, %r3969, 25;
	mov.b64 	%rd5431, {%r3976, %r3975};
	xor.b64  	%rd5432, %rd5430, %rd5431;
	and.b64  	%rd5433, %rd5401, %rd5364;
	or.b64  	%rd5434, %rd5401, %rd5364;
	and.b64  	%rd5435, %rd5434, %rd5327;
	or.b64  	%rd5436, %rd5435, %rd5433;
	add.s64 	%rd5437, %rd5436, %rd5432;
	add.s64 	%rd5438, %rd5437, %rd5426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3977,%dummy}, %rd5377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3978}, %rd5377;
	}
	shf.r.wrap.b32 	%r3979, %r3978, %r3977, 19;
	shf.r.wrap.b32 	%r3980, %r3977, %r3978, 19;
	mov.b64 	%rd5439, {%r3980, %r3979};
	shf.l.wrap.b32 	%r3981, %r3977, %r3978, 3;
	shf.l.wrap.b32 	%r3982, %r3978, %r3977, 3;
	mov.b64 	%rd5440, {%r3982, %r3981};
	xor.b64  	%rd5441, %rd5439, %rd5440;
	shr.u64 	%rd5442, %rd5377, 6;
	xor.b64  	%rd5443, %rd5441, %rd5442;
	shf.r.wrap.b32 	%r3983, %r3664, %r3663, 1;
	shf.r.wrap.b32 	%r3984, %r3663, %r3664, 1;
	mov.b64 	%rd5444, {%r3984, %r3983};
	shf.r.wrap.b32 	%r3985, %r3664, %r3663, 8;
	shf.r.wrap.b32 	%r3986, %r3663, %r3664, 8;
	mov.b64 	%rd5445, {%r3986, %r3985};
	xor.b64  	%rd5446, %rd5444, %rd5445;
	shr.u64 	%rd5447, %rd4931, 7;
	xor.b64  	%rd5448, %rd5446, %rd5447;
	add.s64 	%rd5449, %rd5443, %rd4900;
	add.s64 	%rd5450, %rd5449, %rd5192;
	add.s64 	%rd5451, %rd5450, %rd5448;
	add.s64 	%rd5452, %rd5451, %rd5316;
	xor.b64  	%rd5453, %rd5390, %rd5353;
	and.b64  	%rd5454, %rd5427, %rd5453;
	xor.b64  	%rd5455, %rd5454, %rd5353;
	add.s64 	%rd5456, %rd5452, %rd5455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3987,%dummy}, %rd5427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3988}, %rd5427;
	}
	shf.r.wrap.b32 	%r3989, %r3988, %r3987, 14;
	shf.r.wrap.b32 	%r3990, %r3987, %r3988, 14;
	mov.b64 	%rd5457, {%r3990, %r3989};
	shf.r.wrap.b32 	%r3991, %r3988, %r3987, 18;
	shf.r.wrap.b32 	%r3992, %r3987, %r3988, 18;
	mov.b64 	%rd5458, {%r3992, %r3991};
	xor.b64  	%rd5459, %rd5457, %rd5458;
	shf.l.wrap.b32 	%r3993, %r3987, %r3988, 23;
	shf.l.wrap.b32 	%r3994, %r3988, %r3987, 23;
	mov.b64 	%rd5460, {%r3994, %r3993};
	xor.b64  	%rd5461, %rd5459, %rd5460;
	add.s64 	%rd5462, %rd5456, %rd5461;
	add.s64 	%rd5463, %rd5462, -2983346525034927856;
	add.s64 	%rd5464, %rd5463, %rd5327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3995,%dummy}, %rd5438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3996}, %rd5438;
	}
	shf.r.wrap.b32 	%r3997, %r3996, %r3995, 28;
	shf.r.wrap.b32 	%r3998, %r3995, %r3996, 28;
	mov.b64 	%rd5465, {%r3998, %r3997};
	shf.l.wrap.b32 	%r3999, %r3995, %r3996, 30;
	shf.l.wrap.b32 	%r4000, %r3996, %r3995, 30;
	mov.b64 	%rd5466, {%r4000, %r3999};
	xor.b64  	%rd5467, %rd5465, %rd5466;
	shf.l.wrap.b32 	%r4001, %r3995, %r3996, 25;
	shf.l.wrap.b32 	%r4002, %r3996, %r3995, 25;
	mov.b64 	%rd5468, {%r4002, %r4001};
	xor.b64  	%rd5469, %rd5467, %rd5468;
	and.b64  	%rd5470, %rd5438, %rd5401;
	or.b64  	%rd5471, %rd5438, %rd5401;
	and.b64  	%rd5472, %rd5471, %rd5364;
	or.b64  	%rd5473, %rd5472, %rd5470;
	add.s64 	%rd5474, %rd5473, %rd5469;
	add.s64 	%rd5475, %rd5474, %rd5463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4003,%dummy}, %rd5414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4004}, %rd5414;
	}
	shf.r.wrap.b32 	%r4005, %r4004, %r4003, 19;
	shf.r.wrap.b32 	%r4006, %r4003, %r4004, 19;
	mov.b64 	%rd5476, {%r4006, %r4005};
	shf.l.wrap.b32 	%r4007, %r4003, %r4004, 3;
	shf.l.wrap.b32 	%r4008, %r4004, %r4003, 3;
	mov.b64 	%rd5477, {%r4008, %r4007};
	xor.b64  	%rd5478, %rd5476, %rd5477;
	shr.u64 	%rd5479, %rd5414, 6;
	xor.b64  	%rd5480, %rd5478, %rd5479;
	shf.r.wrap.b32 	%r4009, %r3686, %r3685, 1;
	shf.r.wrap.b32 	%r4010, %r3685, %r3686, 1;
	mov.b64 	%rd5481, {%r4010, %r4009};
	shf.r.wrap.b32 	%r4011, %r3686, %r3685, 8;
	shf.r.wrap.b32 	%r4012, %r3685, %r3686, 8;
	mov.b64 	%rd5482, {%r4012, %r4011};
	xor.b64  	%rd5483, %rd5481, %rd5482;
	shr.u64 	%rd5484, %rd4963, 7;
	xor.b64  	%rd5485, %rd5483, %rd5484;
	add.s64 	%rd5486, %rd5480, %rd4931;
	add.s64 	%rd5487, %rd5486, %rd5229;
	add.s64 	%rd5488, %rd5487, %rd5485;
	add.s64 	%rd5489, %rd5488, %rd5353;
	xor.b64  	%rd5490, %rd5427, %rd5390;
	and.b64  	%rd5491, %rd5464, %rd5490;
	xor.b64  	%rd5492, %rd5491, %rd5390;
	add.s64 	%rd5493, %rd5489, %rd5492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4013,%dummy}, %rd5464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4014}, %rd5464;
	}
	shf.r.wrap.b32 	%r4015, %r4014, %r4013, 14;
	shf.r.wrap.b32 	%r4016, %r4013, %r4014, 14;
	mov.b64 	%rd5494, {%r4016, %r4015};
	shf.r.wrap.b32 	%r4017, %r4014, %r4013, 18;
	shf.r.wrap.b32 	%r4018, %r4013, %r4014, 18;
	mov.b64 	%rd5495, {%r4018, %r4017};
	xor.b64  	%rd5496, %rd5494, %rd5495;
	shf.l.wrap.b32 	%r4019, %r4013, %r4014, 23;
	shf.l.wrap.b32 	%r4020, %r4014, %r4013, 23;
	mov.b64 	%rd5497, {%r4020, %r4019};
	xor.b64  	%rd5498, %rd5496, %rd5497;
	add.s64 	%rd5499, %rd5493, %rd5498;
	add.s64 	%rd5500, %rd5499, -860691631967231958;
	add.s64 	%rd5501, %rd5500, %rd5364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4021,%dummy}, %rd5475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4022}, %rd5475;
	}
	shf.r.wrap.b32 	%r4023, %r4022, %r4021, 28;
	shf.r.wrap.b32 	%r4024, %r4021, %r4022, 28;
	mov.b64 	%rd5502, {%r4024, %r4023};
	shf.l.wrap.b32 	%r4025, %r4021, %r4022, 30;
	shf.l.wrap.b32 	%r4026, %r4022, %r4021, 30;
	mov.b64 	%rd5503, {%r4026, %r4025};
	xor.b64  	%rd5504, %rd5502, %rd5503;
	shf.l.wrap.b32 	%r4027, %r4021, %r4022, 25;
	shf.l.wrap.b32 	%r4028, %r4022, %r4021, 25;
	mov.b64 	%rd5505, {%r4028, %r4027};
	xor.b64  	%rd5506, %rd5504, %rd5505;
	and.b64  	%rd5507, %rd5475, %rd5438;
	or.b64  	%rd5508, %rd5475, %rd5438;
	and.b64  	%rd5509, %rd5508, %rd5401;
	or.b64  	%rd5510, %rd5509, %rd5507;
	add.s64 	%rd5511, %rd5510, %rd5506;
	add.s64 	%rd5512, %rd5511, %rd5500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4029,%dummy}, %rd5451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4030}, %rd5451;
	}
	shf.r.wrap.b32 	%r4031, %r4030, %r4029, 19;
	shf.r.wrap.b32 	%r4032, %r4029, %r4030, 19;
	mov.b64 	%rd5513, {%r4032, %r4031};
	shf.l.wrap.b32 	%r4033, %r4029, %r4030, 3;
	shf.l.wrap.b32 	%r4034, %r4030, %r4029, 3;
	mov.b64 	%rd5514, {%r4034, %r4033};
	xor.b64  	%rd5515, %rd5513, %rd5514;
	shr.u64 	%rd5516, %rd5451, 6;
	xor.b64  	%rd5517, %rd5515, %rd5516;
	shf.r.wrap.b32 	%r4035, %r3708, %r3707, 1;
	shf.r.wrap.b32 	%r4036, %r3707, %r3708, 1;
	mov.b64 	%rd5518, {%r4036, %r4035};
	shf.r.wrap.b32 	%r4037, %r3708, %r3707, 8;
	shf.r.wrap.b32 	%r4038, %r3707, %r3708, 8;
	mov.b64 	%rd5519, {%r4038, %r4037};
	xor.b64  	%rd5520, %rd5518, %rd5519;
	shr.u64 	%rd5521, %rd4995, 7;
	xor.b64  	%rd5522, %rd5520, %rd5521;
	add.s64 	%rd5523, %rd5517, %rd4963;
	add.s64 	%rd5524, %rd5523, %rd5266;
	add.s64 	%rd5525, %rd5524, %rd5522;
	add.s64 	%rd5526, %rd5525, %rd5390;
	xor.b64  	%rd5527, %rd5464, %rd5427;
	and.b64  	%rd5528, %rd5501, %rd5527;
	xor.b64  	%rd5529, %rd5528, %rd5427;
	add.s64 	%rd5530, %rd5526, %rd5529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4039,%dummy}, %rd5501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4040}, %rd5501;
	}
	shf.r.wrap.b32 	%r4041, %r4040, %r4039, 14;
	shf.r.wrap.b32 	%r4042, %r4039, %r4040, 14;
	mov.b64 	%rd5531, {%r4042, %r4041};
	shf.r.wrap.b32 	%r4043, %r4040, %r4039, 18;
	shf.r.wrap.b32 	%r4044, %r4039, %r4040, 18;
	mov.b64 	%rd5532, {%r4044, %r4043};
	xor.b64  	%rd5533, %rd5531, %rd5532;
	shf.l.wrap.b32 	%r4045, %r4039, %r4040, 23;
	shf.l.wrap.b32 	%r4046, %r4040, %r4039, 23;
	mov.b64 	%rd5534, {%r4046, %r4045};
	xor.b64  	%rd5535, %rd5533, %rd5534;
	add.s64 	%rd5536, %rd5530, %rd5535;
	add.s64 	%rd5537, %rd5536, 1182934255886127544;
	add.s64 	%rd5538, %rd5537, %rd5401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4047,%dummy}, %rd5512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4048}, %rd5512;
	}
	shf.r.wrap.b32 	%r4049, %r4048, %r4047, 28;
	shf.r.wrap.b32 	%r4050, %r4047, %r4048, 28;
	mov.b64 	%rd5539, {%r4050, %r4049};
	shf.l.wrap.b32 	%r4051, %r4047, %r4048, 30;
	shf.l.wrap.b32 	%r4052, %r4048, %r4047, 30;
	mov.b64 	%rd5540, {%r4052, %r4051};
	xor.b64  	%rd5541, %rd5539, %rd5540;
	shf.l.wrap.b32 	%r4053, %r4047, %r4048, 25;
	shf.l.wrap.b32 	%r4054, %r4048, %r4047, 25;
	mov.b64 	%rd5542, {%r4054, %r4053};
	xor.b64  	%rd5543, %rd5541, %rd5542;
	and.b64  	%rd5544, %rd5512, %rd5475;
	or.b64  	%rd5545, %rd5512, %rd5475;
	and.b64  	%rd5546, %rd5545, %rd5438;
	or.b64  	%rd5547, %rd5546, %rd5544;
	add.s64 	%rd5548, %rd5547, %rd5543;
	add.s64 	%rd5549, %rd5548, %rd5537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4055,%dummy}, %rd5488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4056}, %rd5488;
	}
	shf.r.wrap.b32 	%r4057, %r4056, %r4055, 19;
	shf.r.wrap.b32 	%r4058, %r4055, %r4056, 19;
	mov.b64 	%rd5550, {%r4058, %r4057};
	shf.l.wrap.b32 	%r4059, %r4055, %r4056, 3;
	shf.l.wrap.b32 	%r4060, %r4056, %r4055, 3;
	mov.b64 	%rd5551, {%r4060, %r4059};
	xor.b64  	%rd5552, %rd5550, %rd5551;
	shr.u64 	%rd5553, %rd5488, 6;
	xor.b64  	%rd5554, %rd5552, %rd5553;
	shf.r.wrap.b32 	%r4061, %r3730, %r3729, 1;
	shf.r.wrap.b32 	%r4062, %r3729, %r3730, 1;
	mov.b64 	%rd5555, {%r4062, %r4061};
	shf.r.wrap.b32 	%r4063, %r3730, %r3729, 8;
	shf.r.wrap.b32 	%r4064, %r3729, %r3730, 8;
	mov.b64 	%rd5556, {%r4064, %r4063};
	xor.b64  	%rd5557, %rd5555, %rd5556;
	shr.u64 	%rd5558, %rd5027, 7;
	xor.b64  	%rd5559, %rd5557, %rd5558;
	add.s64 	%rd5560, %rd5554, %rd4995;
	add.s64 	%rd5561, %rd5560, %rd5303;
	add.s64 	%rd5562, %rd5561, %rd5559;
	add.s64 	%rd5563, %rd5562, %rd5427;
	xor.b64  	%rd5564, %rd5501, %rd5464;
	and.b64  	%rd5565, %rd5538, %rd5564;
	xor.b64  	%rd5566, %rd5565, %rd5464;
	add.s64 	%rd5567, %rd5563, %rd5566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4065,%dummy}, %rd5538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4066}, %rd5538;
	}
	shf.r.wrap.b32 	%r4067, %r4066, %r4065, 14;
	shf.r.wrap.b32 	%r4068, %r4065, %r4066, 14;
	mov.b64 	%rd5568, {%r4068, %r4067};
	shf.r.wrap.b32 	%r4069, %r4066, %r4065, 18;
	shf.r.wrap.b32 	%r4070, %r4065, %r4066, 18;
	mov.b64 	%rd5569, {%r4070, %r4069};
	xor.b64  	%rd5570, %rd5568, %rd5569;
	shf.l.wrap.b32 	%r4071, %r4065, %r4066, 23;
	shf.l.wrap.b32 	%r4072, %r4066, %r4065, 23;
	mov.b64 	%rd5571, {%r4072, %r4071};
	xor.b64  	%rd5572, %rd5570, %rd5571;
	add.s64 	%rd5573, %rd5567, %rd5572;
	add.s64 	%rd5574, %rd5573, 1847814050463011016;
	add.s64 	%rd5575, %rd5574, %rd5438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4073,%dummy}, %rd5549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4074}, %rd5549;
	}
	shf.r.wrap.b32 	%r4075, %r4074, %r4073, 28;
	shf.r.wrap.b32 	%r4076, %r4073, %r4074, 28;
	mov.b64 	%rd5576, {%r4076, %r4075};
	shf.l.wrap.b32 	%r4077, %r4073, %r4074, 30;
	shf.l.wrap.b32 	%r4078, %r4074, %r4073, 30;
	mov.b64 	%rd5577, {%r4078, %r4077};
	xor.b64  	%rd5578, %rd5576, %rd5577;
	shf.l.wrap.b32 	%r4079, %r4073, %r4074, 25;
	shf.l.wrap.b32 	%r4080, %r4074, %r4073, 25;
	mov.b64 	%rd5579, {%r4080, %r4079};
	xor.b64  	%rd5580, %rd5578, %rd5579;
	and.b64  	%rd5581, %rd5549, %rd5512;
	or.b64  	%rd5582, %rd5549, %rd5512;
	and.b64  	%rd5583, %rd5582, %rd5475;
	or.b64  	%rd5584, %rd5583, %rd5581;
	add.s64 	%rd5585, %rd5584, %rd5580;
	add.s64 	%rd5586, %rd5585, %rd5574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4081,%dummy}, %rd5525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4082}, %rd5525;
	}
	shf.r.wrap.b32 	%r4083, %r4082, %r4081, 19;
	shf.r.wrap.b32 	%r4084, %r4081, %r4082, 19;
	mov.b64 	%rd5587, {%r4084, %r4083};
	shf.l.wrap.b32 	%r4085, %r4081, %r4082, 3;
	shf.l.wrap.b32 	%r4086, %r4082, %r4081, 3;
	mov.b64 	%rd5588, {%r4086, %r4085};
	xor.b64  	%rd5589, %rd5587, %rd5588;
	shr.u64 	%rd5590, %rd5525, 6;
	xor.b64  	%rd5591, %rd5589, %rd5590;
	shf.r.wrap.b32 	%r4087, %r3752, %r3751, 1;
	shf.r.wrap.b32 	%r4088, %r3751, %r3752, 1;
	mov.b64 	%rd5592, {%r4088, %r4087};
	shf.r.wrap.b32 	%r4089, %r3752, %r3751, 8;
	shf.r.wrap.b32 	%r4090, %r3751, %r3752, 8;
	mov.b64 	%rd5593, {%r4090, %r4089};
	xor.b64  	%rd5594, %rd5592, %rd5593;
	shr.u64 	%rd5595, %rd5059, 7;
	xor.b64  	%rd5596, %rd5594, %rd5595;
	add.s64 	%rd5597, %rd5591, %rd5027;
	add.s64 	%rd5598, %rd5597, %rd5340;
	add.s64 	%rd5599, %rd5598, %rd5596;
	add.s64 	%rd5600, %rd5599, %rd5464;
	xor.b64  	%rd5601, %rd5538, %rd5501;
	and.b64  	%rd5602, %rd5575, %rd5601;
	xor.b64  	%rd5603, %rd5602, %rd5501;
	add.s64 	%rd5604, %rd5600, %rd5603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4091,%dummy}, %rd5575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4092}, %rd5575;
	}
	shf.r.wrap.b32 	%r4093, %r4092, %r4091, 14;
	shf.r.wrap.b32 	%r4094, %r4091, %r4092, 14;
	mov.b64 	%rd5605, {%r4094, %r4093};
	shf.r.wrap.b32 	%r4095, %r4092, %r4091, 18;
	shf.r.wrap.b32 	%r4096, %r4091, %r4092, 18;
	mov.b64 	%rd5606, {%r4096, %r4095};
	xor.b64  	%rd5607, %rd5605, %rd5606;
	shf.l.wrap.b32 	%r4097, %r4091, %r4092, 23;
	shf.l.wrap.b32 	%r4098, %r4092, %r4091, 23;
	mov.b64 	%rd5608, {%r4098, %r4097};
	xor.b64  	%rd5609, %rd5607, %rd5608;
	add.s64 	%rd5610, %rd5604, %rd5609;
	add.s64 	%rd5611, %rd5610, 2177327727835720531;
	add.s64 	%rd5612, %rd5611, %rd5475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4099,%dummy}, %rd5586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4100}, %rd5586;
	}
	shf.r.wrap.b32 	%r4101, %r4100, %r4099, 28;
	shf.r.wrap.b32 	%r4102, %r4099, %r4100, 28;
	mov.b64 	%rd5613, {%r4102, %r4101};
	shf.l.wrap.b32 	%r4103, %r4099, %r4100, 30;
	shf.l.wrap.b32 	%r4104, %r4100, %r4099, 30;
	mov.b64 	%rd5614, {%r4104, %r4103};
	xor.b64  	%rd5615, %rd5613, %rd5614;
	shf.l.wrap.b32 	%r4105, %r4099, %r4100, 25;
	shf.l.wrap.b32 	%r4106, %r4100, %r4099, 25;
	mov.b64 	%rd5616, {%r4106, %r4105};
	xor.b64  	%rd5617, %rd5615, %rd5616;
	and.b64  	%rd5618, %rd5586, %rd5549;
	or.b64  	%rd5619, %rd5586, %rd5549;
	and.b64  	%rd5620, %rd5619, %rd5512;
	or.b64  	%rd5621, %rd5620, %rd5618;
	add.s64 	%rd5622, %rd5621, %rd5617;
	add.s64 	%rd5623, %rd5622, %rd5611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4107,%dummy}, %rd5562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4108}, %rd5562;
	}
	shf.r.wrap.b32 	%r4109, %r4108, %r4107, 19;
	shf.r.wrap.b32 	%r4110, %r4107, %r4108, 19;
	mov.b64 	%rd5624, {%r4110, %r4109};
	shf.l.wrap.b32 	%r4111, %r4107, %r4108, 3;
	shf.l.wrap.b32 	%r4112, %r4108, %r4107, 3;
	mov.b64 	%rd5625, {%r4112, %r4111};
	xor.b64  	%rd5626, %rd5624, %rd5625;
	shr.u64 	%rd5627, %rd5562, 6;
	xor.b64  	%rd5628, %rd5626, %rd5627;
	shf.r.wrap.b32 	%r4113, %r3774, %r3773, 1;
	shf.r.wrap.b32 	%r4114, %r3773, %r3774, 1;
	mov.b64 	%rd5629, {%r4114, %r4113};
	shf.r.wrap.b32 	%r4115, %r3774, %r3773, 8;
	shf.r.wrap.b32 	%r4116, %r3773, %r3774, 8;
	mov.b64 	%rd5630, {%r4116, %r4115};
	xor.b64  	%rd5631, %rd5629, %rd5630;
	shr.u64 	%rd5632, %rd5091, 7;
	xor.b64  	%rd5633, %rd5631, %rd5632;
	add.s64 	%rd5634, %rd5628, %rd5059;
	add.s64 	%rd5635, %rd5634, %rd5377;
	add.s64 	%rd5636, %rd5635, %rd5633;
	add.s64 	%rd5637, %rd5636, %rd5501;
	xor.b64  	%rd5638, %rd5575, %rd5538;
	and.b64  	%rd5639, %rd5612, %rd5638;
	xor.b64  	%rd5640, %rd5639, %rd5538;
	add.s64 	%rd5641, %rd5637, %rd5640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4117,%dummy}, %rd5612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4118}, %rd5612;
	}
	shf.r.wrap.b32 	%r4119, %r4118, %r4117, 14;
	shf.r.wrap.b32 	%r4120, %r4117, %r4118, 14;
	mov.b64 	%rd5642, {%r4120, %r4119};
	shf.r.wrap.b32 	%r4121, %r4118, %r4117, 18;
	shf.r.wrap.b32 	%r4122, %r4117, %r4118, 18;
	mov.b64 	%rd5643, {%r4122, %r4121};
	xor.b64  	%rd5644, %rd5642, %rd5643;
	shf.l.wrap.b32 	%r4123, %r4117, %r4118, 23;
	shf.l.wrap.b32 	%r4124, %r4118, %r4117, 23;
	mov.b64 	%rd5645, {%r4124, %r4123};
	xor.b64  	%rd5646, %rd5644, %rd5645;
	add.s64 	%rd5647, %rd5641, %rd5646;
	add.s64 	%rd5648, %rd5647, 2830643537854262169;
	add.s64 	%rd5649, %rd5648, %rd5512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd5623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd5623;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 28;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 28;
	mov.b64 	%rd5650, {%r4128, %r4127};
	shf.l.wrap.b32 	%r4129, %r4125, %r4126, 30;
	shf.l.wrap.b32 	%r4130, %r4126, %r4125, 30;
	mov.b64 	%rd5651, {%r4130, %r4129};
	xor.b64  	%rd5652, %rd5650, %rd5651;
	shf.l.wrap.b32 	%r4131, %r4125, %r4126, 25;
	shf.l.wrap.b32 	%r4132, %r4126, %r4125, 25;
	mov.b64 	%rd5653, {%r4132, %r4131};
	xor.b64  	%rd5654, %rd5652, %rd5653;
	and.b64  	%rd5655, %rd5623, %rd5586;
	or.b64  	%rd5656, %rd5623, %rd5586;
	and.b64  	%rd5657, %rd5656, %rd5549;
	or.b64  	%rd5658, %rd5657, %rd5655;
	add.s64 	%rd5659, %rd5658, %rd5654;
	add.s64 	%rd5660, %rd5659, %rd5648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4133,%dummy}, %rd5599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4134}, %rd5599;
	}
	shf.r.wrap.b32 	%r4135, %r4134, %r4133, 19;
	shf.r.wrap.b32 	%r4136, %r4133, %r4134, 19;
	mov.b64 	%rd5661, {%r4136, %r4135};
	shf.l.wrap.b32 	%r4137, %r4133, %r4134, 3;
	shf.l.wrap.b32 	%r4138, %r4134, %r4133, 3;
	mov.b64 	%rd5662, {%r4138, %r4137};
	xor.b64  	%rd5663, %rd5661, %rd5662;
	shr.u64 	%rd5664, %rd5599, 6;
	xor.b64  	%rd5665, %rd5663, %rd5664;
	shf.r.wrap.b32 	%r4139, %r3796, %r3795, 1;
	shf.r.wrap.b32 	%r4140, %r3795, %r3796, 1;
	mov.b64 	%rd5666, {%r4140, %r4139};
	shf.r.wrap.b32 	%r4141, %r3796, %r3795, 8;
	shf.r.wrap.b32 	%r4142, %r3795, %r3796, 8;
	mov.b64 	%rd5667, {%r4142, %r4141};
	xor.b64  	%rd5668, %rd5666, %rd5667;
	shr.u64 	%rd5669, %rd5123, 7;
	xor.b64  	%rd5670, %rd5668, %rd5669;
	add.s64 	%rd5671, %rd5665, %rd5091;
	add.s64 	%rd5672, %rd5671, %rd5414;
	add.s64 	%rd5673, %rd5672, %rd5670;
	add.s64 	%rd5674, %rd5673, %rd5538;
	xor.b64  	%rd5675, %rd5612, %rd5575;
	and.b64  	%rd5676, %rd5649, %rd5675;
	xor.b64  	%rd5677, %rd5676, %rd5575;
	add.s64 	%rd5678, %rd5674, %rd5677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4143,%dummy}, %rd5649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4144}, %rd5649;
	}
	shf.r.wrap.b32 	%r4145, %r4144, %r4143, 14;
	shf.r.wrap.b32 	%r4146, %r4143, %r4144, 14;
	mov.b64 	%rd5679, {%r4146, %r4145};
	shf.r.wrap.b32 	%r4147, %r4144, %r4143, 18;
	shf.r.wrap.b32 	%r4148, %r4143, %r4144, 18;
	mov.b64 	%rd5680, {%r4148, %r4147};
	xor.b64  	%rd5681, %rd5679, %rd5680;
	shf.l.wrap.b32 	%r4149, %r4143, %r4144, 23;
	shf.l.wrap.b32 	%r4150, %r4144, %r4143, 23;
	mov.b64 	%rd5682, {%r4150, %r4149};
	xor.b64  	%rd5683, %rd5681, %rd5682;
	add.s64 	%rd5684, %rd5678, %rd5683;
	add.s64 	%rd5685, %rd5684, 3796741975233480872;
	add.s64 	%rd5686, %rd5685, %rd5549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4151,%dummy}, %rd5660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4152}, %rd5660;
	}
	shf.r.wrap.b32 	%r4153, %r4152, %r4151, 28;
	shf.r.wrap.b32 	%r4154, %r4151, %r4152, 28;
	mov.b64 	%rd5687, {%r4154, %r4153};
	shf.l.wrap.b32 	%r4155, %r4151, %r4152, 30;
	shf.l.wrap.b32 	%r4156, %r4152, %r4151, 30;
	mov.b64 	%rd5688, {%r4156, %r4155};
	xor.b64  	%rd5689, %rd5687, %rd5688;
	shf.l.wrap.b32 	%r4157, %r4151, %r4152, 25;
	shf.l.wrap.b32 	%r4158, %r4152, %r4151, 25;
	mov.b64 	%rd5690, {%r4158, %r4157};
	xor.b64  	%rd5691, %rd5689, %rd5690;
	and.b64  	%rd5692, %rd5660, %rd5623;
	or.b64  	%rd5693, %rd5660, %rd5623;
	and.b64  	%rd5694, %rd5693, %rd5586;
	or.b64  	%rd5695, %rd5694, %rd5692;
	add.s64 	%rd5696, %rd5695, %rd5691;
	add.s64 	%rd5697, %rd5696, %rd5685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4159,%dummy}, %rd5636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4160}, %rd5636;
	}
	shf.r.wrap.b32 	%r4161, %r4160, %r4159, 19;
	shf.r.wrap.b32 	%r4162, %r4159, %r4160, 19;
	mov.b64 	%rd5698, {%r4162, %r4161};
	shf.l.wrap.b32 	%r4163, %r4159, %r4160, 3;
	shf.l.wrap.b32 	%r4164, %r4160, %r4159, 3;
	mov.b64 	%rd5699, {%r4164, %r4163};
	xor.b64  	%rd5700, %rd5698, %rd5699;
	shr.u64 	%rd5701, %rd5636, 6;
	xor.b64  	%rd5702, %rd5700, %rd5701;
	shf.r.wrap.b32 	%r4165, %r3822, %r3821, 1;
	shf.r.wrap.b32 	%r4166, %r3821, %r3822, 1;
	mov.b64 	%rd5703, {%r4166, %r4165};
	shf.r.wrap.b32 	%r4167, %r3822, %r3821, 8;
	shf.r.wrap.b32 	%r4168, %r3821, %r3822, 8;
	mov.b64 	%rd5704, {%r4168, %r4167};
	xor.b64  	%rd5705, %rd5703, %rd5704;
	shr.u64 	%rd5706, %rd5155, 7;
	xor.b64  	%rd5707, %rd5705, %rd5706;
	add.s64 	%rd5708, %rd5702, %rd5123;
	add.s64 	%rd5709, %rd5708, %rd5451;
	add.s64 	%rd5710, %rd5709, %rd5707;
	add.s64 	%rd5711, %rd5710, %rd5575;
	xor.b64  	%rd5712, %rd5649, %rd5612;
	and.b64  	%rd5713, %rd5686, %rd5712;
	xor.b64  	%rd5714, %rd5713, %rd5612;
	add.s64 	%rd5715, %rd5711, %rd5714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4169,%dummy}, %rd5686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4170}, %rd5686;
	}
	shf.r.wrap.b32 	%r4171, %r4170, %r4169, 14;
	shf.r.wrap.b32 	%r4172, %r4169, %r4170, 14;
	mov.b64 	%rd5716, {%r4172, %r4171};
	shf.r.wrap.b32 	%r4173, %r4170, %r4169, 18;
	shf.r.wrap.b32 	%r4174, %r4169, %r4170, 18;
	mov.b64 	%rd5717, {%r4174, %r4173};
	xor.b64  	%rd5718, %rd5716, %rd5717;
	shf.l.wrap.b32 	%r4175, %r4169, %r4170, 23;
	shf.l.wrap.b32 	%r4176, %r4170, %r4169, 23;
	mov.b64 	%rd5719, {%r4176, %r4175};
	xor.b64  	%rd5720, %rd5718, %rd5719;
	add.s64 	%rd5721, %rd5715, %rd5720;
	add.s64 	%rd5722, %rd5721, 4115178125766777443;
	add.s64 	%rd5723, %rd5722, %rd5586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4177,%dummy}, %rd5697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4178}, %rd5697;
	}
	shf.r.wrap.b32 	%r4179, %r4178, %r4177, 28;
	shf.r.wrap.b32 	%r4180, %r4177, %r4178, 28;
	mov.b64 	%rd5724, {%r4180, %r4179};
	shf.l.wrap.b32 	%r4181, %r4177, %r4178, 30;
	shf.l.wrap.b32 	%r4182, %r4178, %r4177, 30;
	mov.b64 	%rd5725, {%r4182, %r4181};
	xor.b64  	%rd5726, %rd5724, %rd5725;
	shf.l.wrap.b32 	%r4183, %r4177, %r4178, 25;
	shf.l.wrap.b32 	%r4184, %r4178, %r4177, 25;
	mov.b64 	%rd5727, {%r4184, %r4183};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	and.b64  	%rd5729, %rd5697, %rd5660;
	or.b64  	%rd5730, %rd5697, %rd5660;
	and.b64  	%rd5731, %rd5730, %rd5623;
	or.b64  	%rd5732, %rd5731, %rd5729;
	add.s64 	%rd5733, %rd5732, %rd5728;
	add.s64 	%rd5734, %rd5733, %rd5722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4185,%dummy}, %rd5673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4186}, %rd5673;
	}
	shf.r.wrap.b32 	%r4187, %r4186, %r4185, 19;
	shf.r.wrap.b32 	%r4188, %r4185, %r4186, 19;
	mov.b64 	%rd5735, {%r4188, %r4187};
	shf.l.wrap.b32 	%r4189, %r4185, %r4186, 3;
	shf.l.wrap.b32 	%r4190, %r4186, %r4185, 3;
	mov.b64 	%rd5736, {%r4190, %r4189};
	xor.b64  	%rd5737, %rd5735, %rd5736;
	shr.u64 	%rd5738, %rd5673, 6;
	xor.b64  	%rd5739, %rd5737, %rd5738;
	shf.r.wrap.b32 	%r4191, %r3848, %r3847, 1;
	shf.r.wrap.b32 	%r4192, %r3847, %r3848, 1;
	mov.b64 	%rd5740, {%r4192, %r4191};
	shf.r.wrap.b32 	%r4193, %r3848, %r3847, 8;
	shf.r.wrap.b32 	%r4194, %r3847, %r3848, 8;
	mov.b64 	%rd5741, {%r4194, %r4193};
	xor.b64  	%rd5742, %rd5740, %rd5741;
	shr.u64 	%rd5743, %rd5192, 7;
	xor.b64  	%rd5744, %rd5742, %rd5743;
	add.s64 	%rd5745, %rd5739, %rd5155;
	add.s64 	%rd5746, %rd5745, %rd5488;
	add.s64 	%rd5747, %rd5746, %rd5744;
	add.s64 	%rd5748, %rd5747, %rd5612;
	xor.b64  	%rd5749, %rd5686, %rd5649;
	and.b64  	%rd5750, %rd5723, %rd5749;
	xor.b64  	%rd5751, %rd5750, %rd5649;
	add.s64 	%rd5752, %rd5748, %rd5751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4195,%dummy}, %rd5723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4196}, %rd5723;
	}
	shf.r.wrap.b32 	%r4197, %r4196, %r4195, 14;
	shf.r.wrap.b32 	%r4198, %r4195, %r4196, 14;
	mov.b64 	%rd5753, {%r4198, %r4197};
	shf.r.wrap.b32 	%r4199, %r4196, %r4195, 18;
	shf.r.wrap.b32 	%r4200, %r4195, %r4196, 18;
	mov.b64 	%rd5754, {%r4200, %r4199};
	xor.b64  	%rd5755, %rd5753, %rd5754;
	shf.l.wrap.b32 	%r4201, %r4195, %r4196, 23;
	shf.l.wrap.b32 	%r4202, %r4196, %r4195, 23;
	mov.b64 	%rd5756, {%r4202, %r4201};
	xor.b64  	%rd5757, %rd5755, %rd5756;
	add.s64 	%rd5758, %rd5752, %rd5757;
	add.s64 	%rd5759, %rd5758, 5681478168544905931;
	add.s64 	%rd5760, %rd5759, %rd5623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4203,%dummy}, %rd5734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4204}, %rd5734;
	}
	shf.r.wrap.b32 	%r4205, %r4204, %r4203, 28;
	shf.r.wrap.b32 	%r4206, %r4203, %r4204, 28;
	mov.b64 	%rd5761, {%r4206, %r4205};
	shf.l.wrap.b32 	%r4207, %r4203, %r4204, 30;
	shf.l.wrap.b32 	%r4208, %r4204, %r4203, 30;
	mov.b64 	%rd5762, {%r4208, %r4207};
	xor.b64  	%rd5763, %rd5761, %rd5762;
	shf.l.wrap.b32 	%r4209, %r4203, %r4204, 25;
	shf.l.wrap.b32 	%r4210, %r4204, %r4203, 25;
	mov.b64 	%rd5764, {%r4210, %r4209};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	and.b64  	%rd5766, %rd5734, %rd5697;
	or.b64  	%rd5767, %rd5734, %rd5697;
	and.b64  	%rd5768, %rd5767, %rd5660;
	or.b64  	%rd5769, %rd5768, %rd5766;
	add.s64 	%rd5770, %rd5769, %rd5765;
	add.s64 	%rd5771, %rd5770, %rd5759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4211,%dummy}, %rd5710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4212}, %rd5710;
	}
	shf.r.wrap.b32 	%r4213, %r4212, %r4211, 19;
	shf.r.wrap.b32 	%r4214, %r4211, %r4212, 19;
	mov.b64 	%rd5772, {%r4214, %r4213};
	shf.l.wrap.b32 	%r4215, %r4211, %r4212, 3;
	shf.l.wrap.b32 	%r4216, %r4212, %r4211, 3;
	mov.b64 	%rd5773, {%r4216, %r4215};
	xor.b64  	%rd5774, %rd5772, %rd5773;
	shr.u64 	%rd5775, %rd5710, 6;
	xor.b64  	%rd5776, %rd5774, %rd5775;
	shf.r.wrap.b32 	%r4217, %r3874, %r3873, 1;
	shf.r.wrap.b32 	%r4218, %r3873, %r3874, 1;
	mov.b64 	%rd5777, {%r4218, %r4217};
	shf.r.wrap.b32 	%r4219, %r3874, %r3873, 8;
	shf.r.wrap.b32 	%r4220, %r3873, %r3874, 8;
	mov.b64 	%rd5778, {%r4220, %r4219};
	xor.b64  	%rd5779, %rd5777, %rd5778;
	shr.u64 	%rd5780, %rd5229, 7;
	xor.b64  	%rd5781, %rd5779, %rd5780;
	add.s64 	%rd5782, %rd5776, %rd5192;
	add.s64 	%rd5783, %rd5782, %rd5525;
	add.s64 	%rd5784, %rd5783, %rd5781;
	add.s64 	%rd5785, %rd5784, %rd5649;
	xor.b64  	%rd5786, %rd5723, %rd5686;
	and.b64  	%rd5787, %rd5760, %rd5786;
	xor.b64  	%rd5788, %rd5787, %rd5686;
	add.s64 	%rd5789, %rd5785, %rd5788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4221,%dummy}, %rd5760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4222}, %rd5760;
	}
	shf.r.wrap.b32 	%r4223, %r4222, %r4221, 14;
	shf.r.wrap.b32 	%r4224, %r4221, %r4222, 14;
	mov.b64 	%rd5790, {%r4224, %r4223};
	shf.r.wrap.b32 	%r4225, %r4222, %r4221, 18;
	shf.r.wrap.b32 	%r4226, %r4221, %r4222, 18;
	mov.b64 	%rd5791, {%r4226, %r4225};
	xor.b64  	%rd5792, %rd5790, %rd5791;
	shf.l.wrap.b32 	%r4227, %r4221, %r4222, 23;
	shf.l.wrap.b32 	%r4228, %r4222, %r4221, 23;
	mov.b64 	%rd5793, {%r4228, %r4227};
	xor.b64  	%rd5794, %rd5792, %rd5793;
	add.s64 	%rd5795, %rd5789, %rd5794;
	add.s64 	%rd5796, %rd5795, 6601373596472566643;
	add.s64 	%rd5797, %rd5796, %rd5660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4229,%dummy}, %rd5771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4230}, %rd5771;
	}
	shf.r.wrap.b32 	%r4231, %r4230, %r4229, 28;
	shf.r.wrap.b32 	%r4232, %r4229, %r4230, 28;
	mov.b64 	%rd5798, {%r4232, %r4231};
	shf.l.wrap.b32 	%r4233, %r4229, %r4230, 30;
	shf.l.wrap.b32 	%r4234, %r4230, %r4229, 30;
	mov.b64 	%rd5799, {%r4234, %r4233};
	xor.b64  	%rd5800, %rd5798, %rd5799;
	shf.l.wrap.b32 	%r4235, %r4229, %r4230, 25;
	shf.l.wrap.b32 	%r4236, %r4230, %r4229, 25;
	mov.b64 	%rd5801, {%r4236, %r4235};
	xor.b64  	%rd5802, %rd5800, %rd5801;
	and.b64  	%rd5803, %rd5771, %rd5734;
	or.b64  	%rd5804, %rd5771, %rd5734;
	and.b64  	%rd5805, %rd5804, %rd5697;
	or.b64  	%rd5806, %rd5805, %rd5803;
	add.s64 	%rd5807, %rd5806, %rd5802;
	add.s64 	%rd5808, %rd5807, %rd5796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4237,%dummy}, %rd5747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4238}, %rd5747;
	}
	shf.r.wrap.b32 	%r4239, %r4238, %r4237, 19;
	shf.r.wrap.b32 	%r4240, %r4237, %r4238, 19;
	mov.b64 	%rd5809, {%r4240, %r4239};
	shf.l.wrap.b32 	%r4241, %r4237, %r4238, 3;
	shf.l.wrap.b32 	%r4242, %r4238, %r4237, 3;
	mov.b64 	%rd5810, {%r4242, %r4241};
	xor.b64  	%rd5811, %rd5809, %rd5810;
	shr.u64 	%rd5812, %rd5747, 6;
	xor.b64  	%rd5813, %rd5811, %rd5812;
	shf.r.wrap.b32 	%r4243, %r3900, %r3899, 1;
	shf.r.wrap.b32 	%r4244, %r3899, %r3900, 1;
	mov.b64 	%rd5814, {%r4244, %r4243};
	shf.r.wrap.b32 	%r4245, %r3900, %r3899, 8;
	shf.r.wrap.b32 	%r4246, %r3899, %r3900, 8;
	mov.b64 	%rd5815, {%r4246, %r4245};
	xor.b64  	%rd5816, %rd5814, %rd5815;
	shr.u64 	%rd5817, %rd5266, 7;
	xor.b64  	%rd5818, %rd5816, %rd5817;
	add.s64 	%rd5819, %rd5813, %rd5229;
	add.s64 	%rd5820, %rd5819, %rd5562;
	add.s64 	%rd5821, %rd5820, %rd5818;
	add.s64 	%rd5822, %rd5821, %rd5686;
	xor.b64  	%rd5823, %rd5760, %rd5723;
	and.b64  	%rd5824, %rd5797, %rd5823;
	xor.b64  	%rd5825, %rd5824, %rd5723;
	add.s64 	%rd5826, %rd5822, %rd5825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4247,%dummy}, %rd5797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4248}, %rd5797;
	}
	shf.r.wrap.b32 	%r4249, %r4248, %r4247, 14;
	shf.r.wrap.b32 	%r4250, %r4247, %r4248, 14;
	mov.b64 	%rd5827, {%r4250, %r4249};
	shf.r.wrap.b32 	%r4251, %r4248, %r4247, 18;
	shf.r.wrap.b32 	%r4252, %r4247, %r4248, 18;
	mov.b64 	%rd5828, {%r4252, %r4251};
	xor.b64  	%rd5829, %rd5827, %rd5828;
	shf.l.wrap.b32 	%r4253, %r4247, %r4248, 23;
	shf.l.wrap.b32 	%r4254, %r4248, %r4247, 23;
	mov.b64 	%rd5830, {%r4254, %r4253};
	xor.b64  	%rd5831, %rd5829, %rd5830;
	add.s64 	%rd5832, %rd5826, %rd5831;
	add.s64 	%rd5833, %rd5832, 7507060721942968483;
	add.s64 	%rd5834, %rd5833, %rd5697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4255,%dummy}, %rd5808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4256}, %rd5808;
	}
	shf.r.wrap.b32 	%r4257, %r4256, %r4255, 28;
	shf.r.wrap.b32 	%r4258, %r4255, %r4256, 28;
	mov.b64 	%rd5835, {%r4258, %r4257};
	shf.l.wrap.b32 	%r4259, %r4255, %r4256, 30;
	shf.l.wrap.b32 	%r4260, %r4256, %r4255, 30;
	mov.b64 	%rd5836, {%r4260, %r4259};
	xor.b64  	%rd5837, %rd5835, %rd5836;
	shf.l.wrap.b32 	%r4261, %r4255, %r4256, 25;
	shf.l.wrap.b32 	%r4262, %r4256, %r4255, 25;
	mov.b64 	%rd5838, {%r4262, %r4261};
	xor.b64  	%rd5839, %rd5837, %rd5838;
	and.b64  	%rd5840, %rd5808, %rd5771;
	or.b64  	%rd5841, %rd5808, %rd5771;
	and.b64  	%rd5842, %rd5841, %rd5734;
	or.b64  	%rd5843, %rd5842, %rd5840;
	add.s64 	%rd5844, %rd5843, %rd5839;
	add.s64 	%rd5845, %rd5844, %rd5833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4263,%dummy}, %rd5784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4264}, %rd5784;
	}
	shf.r.wrap.b32 	%r4265, %r4264, %r4263, 19;
	shf.r.wrap.b32 	%r4266, %r4263, %r4264, 19;
	mov.b64 	%rd5846, {%r4266, %r4265};
	shf.l.wrap.b32 	%r4267, %r4263, %r4264, 3;
	shf.l.wrap.b32 	%r4268, %r4264, %r4263, 3;
	mov.b64 	%rd5847, {%r4268, %r4267};
	xor.b64  	%rd5848, %rd5846, %rd5847;
	shr.u64 	%rd5849, %rd5784, 6;
	xor.b64  	%rd5850, %rd5848, %rd5849;
	shf.r.wrap.b32 	%r4269, %r3926, %r3925, 1;
	shf.r.wrap.b32 	%r4270, %r3925, %r3926, 1;
	mov.b64 	%rd5851, {%r4270, %r4269};
	shf.r.wrap.b32 	%r4271, %r3926, %r3925, 8;
	shf.r.wrap.b32 	%r4272, %r3925, %r3926, 8;
	mov.b64 	%rd5852, {%r4272, %r4271};
	xor.b64  	%rd5853, %rd5851, %rd5852;
	shr.u64 	%rd5854, %rd5303, 7;
	xor.b64  	%rd5855, %rd5853, %rd5854;
	add.s64 	%rd5856, %rd5850, %rd5266;
	add.s64 	%rd5857, %rd5856, %rd5599;
	add.s64 	%rd5858, %rd5857, %rd5855;
	add.s64 	%rd5859, %rd5858, %rd5723;
	xor.b64  	%rd5860, %rd5797, %rd5760;
	and.b64  	%rd5861, %rd5834, %rd5860;
	xor.b64  	%rd5862, %rd5861, %rd5760;
	add.s64 	%rd5863, %rd5859, %rd5862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4273,%dummy}, %rd5834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4274}, %rd5834;
	}
	shf.r.wrap.b32 	%r4275, %r4274, %r4273, 14;
	shf.r.wrap.b32 	%r4276, %r4273, %r4274, 14;
	mov.b64 	%rd5864, {%r4276, %r4275};
	shf.r.wrap.b32 	%r4277, %r4274, %r4273, 18;
	shf.r.wrap.b32 	%r4278, %r4273, %r4274, 18;
	mov.b64 	%rd5865, {%r4278, %r4277};
	xor.b64  	%rd5866, %rd5864, %rd5865;
	shf.l.wrap.b32 	%r4279, %r4273, %r4274, 23;
	shf.l.wrap.b32 	%r4280, %r4274, %r4273, 23;
	mov.b64 	%rd5867, {%r4280, %r4279};
	xor.b64  	%rd5868, %rd5866, %rd5867;
	add.s64 	%rd5869, %rd5863, %rd5868;
	add.s64 	%rd5870, %rd5869, 8399075790359081724;
	add.s64 	%rd5871, %rd5870, %rd5734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4281,%dummy}, %rd5845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4282}, %rd5845;
	}
	shf.r.wrap.b32 	%r4283, %r4282, %r4281, 28;
	shf.r.wrap.b32 	%r4284, %r4281, %r4282, 28;
	mov.b64 	%rd5872, {%r4284, %r4283};
	shf.l.wrap.b32 	%r4285, %r4281, %r4282, 30;
	shf.l.wrap.b32 	%r4286, %r4282, %r4281, 30;
	mov.b64 	%rd5873, {%r4286, %r4285};
	xor.b64  	%rd5874, %rd5872, %rd5873;
	shf.l.wrap.b32 	%r4287, %r4281, %r4282, 25;
	shf.l.wrap.b32 	%r4288, %r4282, %r4281, 25;
	mov.b64 	%rd5875, {%r4288, %r4287};
	xor.b64  	%rd5876, %rd5874, %rd5875;
	and.b64  	%rd5877, %rd5845, %rd5808;
	or.b64  	%rd5878, %rd5845, %rd5808;
	and.b64  	%rd5879, %rd5878, %rd5771;
	or.b64  	%rd5880, %rd5879, %rd5877;
	add.s64 	%rd5881, %rd5880, %rd5876;
	add.s64 	%rd5882, %rd5881, %rd5870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4289,%dummy}, %rd5821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4290}, %rd5821;
	}
	shf.r.wrap.b32 	%r4291, %r4290, %r4289, 19;
	shf.r.wrap.b32 	%r4292, %r4289, %r4290, 19;
	mov.b64 	%rd5883, {%r4292, %r4291};
	shf.l.wrap.b32 	%r4293, %r4289, %r4290, 3;
	shf.l.wrap.b32 	%r4294, %r4290, %r4289, 3;
	mov.b64 	%rd5884, {%r4294, %r4293};
	xor.b64  	%rd5885, %rd5883, %rd5884;
	shr.u64 	%rd5886, %rd5821, 6;
	xor.b64  	%rd5887, %rd5885, %rd5886;
	shf.r.wrap.b32 	%r4295, %r3952, %r3951, 1;
	shf.r.wrap.b32 	%r4296, %r3951, %r3952, 1;
	mov.b64 	%rd5888, {%r4296, %r4295};
	shf.r.wrap.b32 	%r4297, %r3952, %r3951, 8;
	shf.r.wrap.b32 	%r4298, %r3951, %r3952, 8;
	mov.b64 	%rd5889, {%r4298, %r4297};
	xor.b64  	%rd5890, %rd5888, %rd5889;
	shr.u64 	%rd5891, %rd5340, 7;
	xor.b64  	%rd5892, %rd5890, %rd5891;
	add.s64 	%rd5893, %rd5887, %rd5303;
	add.s64 	%rd5894, %rd5893, %rd5636;
	add.s64 	%rd5895, %rd5894, %rd5892;
	add.s64 	%rd5896, %rd5895, %rd5760;
	xor.b64  	%rd5897, %rd5834, %rd5797;
	and.b64  	%rd5898, %rd5871, %rd5897;
	xor.b64  	%rd5899, %rd5898, %rd5797;
	add.s64 	%rd5900, %rd5896, %rd5899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4299,%dummy}, %rd5871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4300}, %rd5871;
	}
	shf.r.wrap.b32 	%r4301, %r4300, %r4299, 14;
	shf.r.wrap.b32 	%r4302, %r4299, %r4300, 14;
	mov.b64 	%rd5901, {%r4302, %r4301};
	shf.r.wrap.b32 	%r4303, %r4300, %r4299, 18;
	shf.r.wrap.b32 	%r4304, %r4299, %r4300, 18;
	mov.b64 	%rd5902, {%r4304, %r4303};
	xor.b64  	%rd5903, %rd5901, %rd5902;
	shf.l.wrap.b32 	%r4305, %r4299, %r4300, 23;
	shf.l.wrap.b32 	%r4306, %r4300, %r4299, 23;
	mov.b64 	%rd5904, {%r4306, %r4305};
	xor.b64  	%rd5905, %rd5903, %rd5904;
	add.s64 	%rd5906, %rd5900, %rd5905;
	add.s64 	%rd5907, %rd5906, 8693463985226723168;
	add.s64 	%rd5908, %rd5907, %rd5771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4307,%dummy}, %rd5882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4308}, %rd5882;
	}
	shf.r.wrap.b32 	%r4309, %r4308, %r4307, 28;
	shf.r.wrap.b32 	%r4310, %r4307, %r4308, 28;
	mov.b64 	%rd5909, {%r4310, %r4309};
	shf.l.wrap.b32 	%r4311, %r4307, %r4308, 30;
	shf.l.wrap.b32 	%r4312, %r4308, %r4307, 30;
	mov.b64 	%rd5910, {%r4312, %r4311};
	xor.b64  	%rd5911, %rd5909, %rd5910;
	shf.l.wrap.b32 	%r4313, %r4307, %r4308, 25;
	shf.l.wrap.b32 	%r4314, %r4308, %r4307, 25;
	mov.b64 	%rd5912, {%r4314, %r4313};
	xor.b64  	%rd5913, %rd5911, %rd5912;
	and.b64  	%rd5914, %rd5882, %rd5845;
	or.b64  	%rd5915, %rd5882, %rd5845;
	and.b64  	%rd5916, %rd5915, %rd5808;
	or.b64  	%rd5917, %rd5916, %rd5914;
	add.s64 	%rd5918, %rd5917, %rd5913;
	add.s64 	%rd5919, %rd5918, %rd5907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4315,%dummy}, %rd5858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4316}, %rd5858;
	}
	shf.r.wrap.b32 	%r4317, %r4316, %r4315, 19;
	shf.r.wrap.b32 	%r4318, %r4315, %r4316, 19;
	mov.b64 	%rd5920, {%r4318, %r4317};
	shf.l.wrap.b32 	%r4319, %r4315, %r4316, 3;
	shf.l.wrap.b32 	%r4320, %r4316, %r4315, 3;
	mov.b64 	%rd5921, {%r4320, %r4319};
	xor.b64  	%rd5922, %rd5920, %rd5921;
	shr.u64 	%rd5923, %rd5858, 6;
	xor.b64  	%rd5924, %rd5922, %rd5923;
	shf.r.wrap.b32 	%r4321, %r3978, %r3977, 1;
	shf.r.wrap.b32 	%r4322, %r3977, %r3978, 1;
	mov.b64 	%rd5925, {%r4322, %r4321};
	shf.r.wrap.b32 	%r4323, %r3978, %r3977, 8;
	shf.r.wrap.b32 	%r4324, %r3977, %r3978, 8;
	mov.b64 	%rd5926, {%r4324, %r4323};
	xor.b64  	%rd5927, %rd5925, %rd5926;
	shr.u64 	%rd5928, %rd5377, 7;
	xor.b64  	%rd5929, %rd5927, %rd5928;
	add.s64 	%rd5930, %rd5924, %rd5340;
	add.s64 	%rd5931, %rd5930, %rd5673;
	add.s64 	%rd5932, %rd5931, %rd5929;
	add.s64 	%rd5933, %rd5932, %rd5797;
	xor.b64  	%rd5934, %rd5871, %rd5834;
	and.b64  	%rd5935, %rd5908, %rd5934;
	xor.b64  	%rd5936, %rd5935, %rd5834;
	add.s64 	%rd5937, %rd5933, %rd5936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4325,%dummy}, %rd5908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4326}, %rd5908;
	}
	shf.r.wrap.b32 	%r4327, %r4326, %r4325, 14;
	shf.r.wrap.b32 	%r4328, %r4325, %r4326, 14;
	mov.b64 	%rd5938, {%r4328, %r4327};
	shf.r.wrap.b32 	%r4329, %r4326, %r4325, 18;
	shf.r.wrap.b32 	%r4330, %r4325, %r4326, 18;
	mov.b64 	%rd5939, {%r4330, %r4329};
	xor.b64  	%rd5940, %rd5938, %rd5939;
	shf.l.wrap.b32 	%r4331, %r4325, %r4326, 23;
	shf.l.wrap.b32 	%r4332, %r4326, %r4325, 23;
	mov.b64 	%rd5941, {%r4332, %r4331};
	xor.b64  	%rd5942, %rd5940, %rd5941;
	add.s64 	%rd5943, %rd5937, %rd5942;
	add.s64 	%rd5944, %rd5943, -8878714635349349518;
	add.s64 	%rd5945, %rd5944, %rd5808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4333,%dummy}, %rd5919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4334}, %rd5919;
	}
	shf.r.wrap.b32 	%r4335, %r4334, %r4333, 28;
	shf.r.wrap.b32 	%r4336, %r4333, %r4334, 28;
	mov.b64 	%rd5946, {%r4336, %r4335};
	shf.l.wrap.b32 	%r4337, %r4333, %r4334, 30;
	shf.l.wrap.b32 	%r4338, %r4334, %r4333, 30;
	mov.b64 	%rd5947, {%r4338, %r4337};
	xor.b64  	%rd5948, %rd5946, %rd5947;
	shf.l.wrap.b32 	%r4339, %r4333, %r4334, 25;
	shf.l.wrap.b32 	%r4340, %r4334, %r4333, 25;
	mov.b64 	%rd5949, {%r4340, %r4339};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	and.b64  	%rd5951, %rd5919, %rd5882;
	or.b64  	%rd5952, %rd5919, %rd5882;
	and.b64  	%rd5953, %rd5952, %rd5845;
	or.b64  	%rd5954, %rd5953, %rd5951;
	add.s64 	%rd5955, %rd5954, %rd5950;
	add.s64 	%rd5956, %rd5955, %rd5944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4341,%dummy}, %rd5895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4342}, %rd5895;
	}
	shf.r.wrap.b32 	%r4343, %r4342, %r4341, 19;
	shf.r.wrap.b32 	%r4344, %r4341, %r4342, 19;
	mov.b64 	%rd5957, {%r4344, %r4343};
	shf.l.wrap.b32 	%r4345, %r4341, %r4342, 3;
	shf.l.wrap.b32 	%r4346, %r4342, %r4341, 3;
	mov.b64 	%rd5958, {%r4346, %r4345};
	xor.b64  	%rd5959, %rd5957, %rd5958;
	shr.u64 	%rd5960, %rd5895, 6;
	xor.b64  	%rd5961, %rd5959, %rd5960;
	shf.r.wrap.b32 	%r4347, %r4004, %r4003, 1;
	shf.r.wrap.b32 	%r4348, %r4003, %r4004, 1;
	mov.b64 	%rd5962, {%r4348, %r4347};
	shf.r.wrap.b32 	%r4349, %r4004, %r4003, 8;
	shf.r.wrap.b32 	%r4350, %r4003, %r4004, 8;
	mov.b64 	%rd5963, {%r4350, %r4349};
	xor.b64  	%rd5964, %rd5962, %rd5963;
	shr.u64 	%rd5965, %rd5414, 7;
	xor.b64  	%rd5966, %rd5964, %rd5965;
	add.s64 	%rd5967, %rd5961, %rd5377;
	add.s64 	%rd5968, %rd5967, %rd5710;
	add.s64 	%rd5969, %rd5968, %rd5966;
	add.s64 	%rd5970, %rd5969, %rd5834;
	xor.b64  	%rd5971, %rd5908, %rd5871;
	and.b64  	%rd5972, %rd5945, %rd5971;
	xor.b64  	%rd5973, %rd5972, %rd5871;
	add.s64 	%rd5974, %rd5970, %rd5973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4351,%dummy}, %rd5945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4352}, %rd5945;
	}
	shf.r.wrap.b32 	%r4353, %r4352, %r4351, 14;
	shf.r.wrap.b32 	%r4354, %r4351, %r4352, 14;
	mov.b64 	%rd5975, {%r4354, %r4353};
	shf.r.wrap.b32 	%r4355, %r4352, %r4351, 18;
	shf.r.wrap.b32 	%r4356, %r4351, %r4352, 18;
	mov.b64 	%rd5976, {%r4356, %r4355};
	xor.b64  	%rd5977, %rd5975, %rd5976;
	shf.l.wrap.b32 	%r4357, %r4351, %r4352, 23;
	shf.l.wrap.b32 	%r4358, %r4352, %r4351, 23;
	mov.b64 	%rd5978, {%r4358, %r4357};
	xor.b64  	%rd5979, %rd5977, %rd5978;
	add.s64 	%rd5980, %rd5974, %rd5979;
	add.s64 	%rd5981, %rd5980, -8302665154208450068;
	add.s64 	%rd5982, %rd5981, %rd5845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4359,%dummy}, %rd5956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4360}, %rd5956;
	}
	shf.r.wrap.b32 	%r4361, %r4360, %r4359, 28;
	shf.r.wrap.b32 	%r4362, %r4359, %r4360, 28;
	mov.b64 	%rd5983, {%r4362, %r4361};
	shf.l.wrap.b32 	%r4363, %r4359, %r4360, 30;
	shf.l.wrap.b32 	%r4364, %r4360, %r4359, 30;
	mov.b64 	%rd5984, {%r4364, %r4363};
	xor.b64  	%rd5985, %rd5983, %rd5984;
	shf.l.wrap.b32 	%r4365, %r4359, %r4360, 25;
	shf.l.wrap.b32 	%r4366, %r4360, %r4359, 25;
	mov.b64 	%rd5986, {%r4366, %r4365};
	xor.b64  	%rd5987, %rd5985, %rd5986;
	and.b64  	%rd5988, %rd5956, %rd5919;
	or.b64  	%rd5989, %rd5956, %rd5919;
	and.b64  	%rd5990, %rd5989, %rd5882;
	or.b64  	%rd5991, %rd5990, %rd5988;
	add.s64 	%rd5992, %rd5991, %rd5987;
	add.s64 	%rd5993, %rd5992, %rd5981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4367,%dummy}, %rd5932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4368}, %rd5932;
	}
	shf.r.wrap.b32 	%r4369, %r4368, %r4367, 19;
	shf.r.wrap.b32 	%r4370, %r4367, %r4368, 19;
	mov.b64 	%rd5994, {%r4370, %r4369};
	shf.l.wrap.b32 	%r4371, %r4367, %r4368, 3;
	shf.l.wrap.b32 	%r4372, %r4368, %r4367, 3;
	mov.b64 	%rd5995, {%r4372, %r4371};
	xor.b64  	%rd5996, %rd5994, %rd5995;
	shr.u64 	%rd5997, %rd5932, 6;
	xor.b64  	%rd5998, %rd5996, %rd5997;
	shf.r.wrap.b32 	%r4373, %r4030, %r4029, 1;
	shf.r.wrap.b32 	%r4374, %r4029, %r4030, 1;
	mov.b64 	%rd5999, {%r4374, %r4373};
	shf.r.wrap.b32 	%r4375, %r4030, %r4029, 8;
	shf.r.wrap.b32 	%r4376, %r4029, %r4030, 8;
	mov.b64 	%rd6000, {%r4376, %r4375};
	xor.b64  	%rd6001, %rd5999, %rd6000;
	shr.u64 	%rd6002, %rd5451, 7;
	xor.b64  	%rd6003, %rd6001, %rd6002;
	add.s64 	%rd6004, %rd5998, %rd5414;
	add.s64 	%rd6005, %rd6004, %rd5747;
	add.s64 	%rd6006, %rd6005, %rd6003;
	add.s64 	%rd6007, %rd6006, %rd5871;
	xor.b64  	%rd6008, %rd5945, %rd5908;
	and.b64  	%rd6009, %rd5982, %rd6008;
	xor.b64  	%rd6010, %rd6009, %rd5908;
	add.s64 	%rd6011, %rd6007, %rd6010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4377,%dummy}, %rd5982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4378}, %rd5982;
	}
	shf.r.wrap.b32 	%r4379, %r4378, %r4377, 14;
	shf.r.wrap.b32 	%r4380, %r4377, %r4378, 14;
	mov.b64 	%rd6012, {%r4380, %r4379};
	shf.r.wrap.b32 	%r4381, %r4378, %r4377, 18;
	shf.r.wrap.b32 	%r4382, %r4377, %r4378, 18;
	mov.b64 	%rd6013, {%r4382, %r4381};
	xor.b64  	%rd6014, %rd6012, %rd6013;
	shf.l.wrap.b32 	%r4383, %r4377, %r4378, 23;
	shf.l.wrap.b32 	%r4384, %r4378, %r4377, 23;
	mov.b64 	%rd6015, {%r4384, %r4383};
	xor.b64  	%rd6016, %rd6014, %rd6015;
	add.s64 	%rd6017, %rd6011, %rd6016;
	add.s64 	%rd6018, %rd6017, -8016688836872298968;
	add.s64 	%rd6019, %rd6018, %rd5882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4385,%dummy}, %rd5993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4386}, %rd5993;
	}
	shf.r.wrap.b32 	%r4387, %r4386, %r4385, 28;
	shf.r.wrap.b32 	%r4388, %r4385, %r4386, 28;
	mov.b64 	%rd6020, {%r4388, %r4387};
	shf.l.wrap.b32 	%r4389, %r4385, %r4386, 30;
	shf.l.wrap.b32 	%r4390, %r4386, %r4385, 30;
	mov.b64 	%rd6021, {%r4390, %r4389};
	xor.b64  	%rd6022, %rd6020, %rd6021;
	shf.l.wrap.b32 	%r4391, %r4385, %r4386, 25;
	shf.l.wrap.b32 	%r4392, %r4386, %r4385, 25;
	mov.b64 	%rd6023, {%r4392, %r4391};
	xor.b64  	%rd6024, %rd6022, %rd6023;
	and.b64  	%rd6025, %rd5993, %rd5956;
	or.b64  	%rd6026, %rd5993, %rd5956;
	and.b64  	%rd6027, %rd6026, %rd5919;
	or.b64  	%rd6028, %rd6027, %rd6025;
	add.s64 	%rd6029, %rd6028, %rd6024;
	add.s64 	%rd6030, %rd6029, %rd6018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4393,%dummy}, %rd5969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4394}, %rd5969;
	}
	shf.r.wrap.b32 	%r4395, %r4394, %r4393, 19;
	shf.r.wrap.b32 	%r4396, %r4393, %r4394, 19;
	mov.b64 	%rd6031, {%r4396, %r4395};
	shf.l.wrap.b32 	%r4397, %r4393, %r4394, 3;
	shf.l.wrap.b32 	%r4398, %r4394, %r4393, 3;
	mov.b64 	%rd6032, {%r4398, %r4397};
	xor.b64  	%rd6033, %rd6031, %rd6032;
	shr.u64 	%rd6034, %rd5969, 6;
	xor.b64  	%rd6035, %rd6033, %rd6034;
	shf.r.wrap.b32 	%r4399, %r4056, %r4055, 1;
	shf.r.wrap.b32 	%r4400, %r4055, %r4056, 1;
	mov.b64 	%rd6036, {%r4400, %r4399};
	shf.r.wrap.b32 	%r4401, %r4056, %r4055, 8;
	shf.r.wrap.b32 	%r4402, %r4055, %r4056, 8;
	mov.b64 	%rd6037, {%r4402, %r4401};
	xor.b64  	%rd6038, %rd6036, %rd6037;
	shr.u64 	%rd6039, %rd5488, 7;
	xor.b64  	%rd6040, %rd6038, %rd6039;
	add.s64 	%rd6041, %rd6035, %rd5451;
	add.s64 	%rd6042, %rd6041, %rd5784;
	add.s64 	%rd6043, %rd6042, %rd6040;
	add.s64 	%rd6044, %rd6043, %rd5908;
	xor.b64  	%rd6045, %rd5982, %rd5945;
	and.b64  	%rd6046, %rd6019, %rd6045;
	xor.b64  	%rd6047, %rd6046, %rd5945;
	add.s64 	%rd6048, %rd6044, %rd6047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4403,%dummy}, %rd6019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4404}, %rd6019;
	}
	shf.r.wrap.b32 	%r4405, %r4404, %r4403, 14;
	shf.r.wrap.b32 	%r4406, %r4403, %r4404, 14;
	mov.b64 	%rd6049, {%r4406, %r4405};
	shf.r.wrap.b32 	%r4407, %r4404, %r4403, 18;
	shf.r.wrap.b32 	%r4408, %r4403, %r4404, 18;
	mov.b64 	%rd6050, {%r4408, %r4407};
	xor.b64  	%rd6051, %rd6049, %rd6050;
	shf.l.wrap.b32 	%r4409, %r4403, %r4404, 23;
	shf.l.wrap.b32 	%r4410, %r4404, %r4403, 23;
	mov.b64 	%rd6052, {%r4410, %r4409};
	xor.b64  	%rd6053, %rd6051, %rd6052;
	add.s64 	%rd6054, %rd6048, %rd6053;
	add.s64 	%rd6055, %rd6054, -6606660893046293015;
	add.s64 	%rd6056, %rd6055, %rd5919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4411,%dummy}, %rd6030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4412}, %rd6030;
	}
	shf.r.wrap.b32 	%r4413, %r4412, %r4411, 28;
	shf.r.wrap.b32 	%r4414, %r4411, %r4412, 28;
	mov.b64 	%rd6057, {%r4414, %r4413};
	shf.l.wrap.b32 	%r4415, %r4411, %r4412, 30;
	shf.l.wrap.b32 	%r4416, %r4412, %r4411, 30;
	mov.b64 	%rd6058, {%r4416, %r4415};
	xor.b64  	%rd6059, %rd6057, %rd6058;
	shf.l.wrap.b32 	%r4417, %r4411, %r4412, 25;
	shf.l.wrap.b32 	%r4418, %r4412, %r4411, 25;
	mov.b64 	%rd6060, {%r4418, %r4417};
	xor.b64  	%rd6061, %rd6059, %rd6060;
	and.b64  	%rd6062, %rd6030, %rd5993;
	or.b64  	%rd6063, %rd6030, %rd5993;
	and.b64  	%rd6064, %rd6063, %rd5956;
	or.b64  	%rd6065, %rd6064, %rd6062;
	add.s64 	%rd6066, %rd6065, %rd6061;
	add.s64 	%rd6067, %rd6066, %rd6055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4419,%dummy}, %rd6006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4420}, %rd6006;
	}
	shf.r.wrap.b32 	%r4421, %r4420, %r4419, 19;
	shf.r.wrap.b32 	%r4422, %r4419, %r4420, 19;
	mov.b64 	%rd6068, {%r4422, %r4421};
	shf.l.wrap.b32 	%r4423, %r4419, %r4420, 3;
	shf.l.wrap.b32 	%r4424, %r4420, %r4419, 3;
	mov.b64 	%rd6069, {%r4424, %r4423};
	xor.b64  	%rd6070, %rd6068, %rd6069;
	shr.u64 	%rd6071, %rd6006, 6;
	xor.b64  	%rd6072, %rd6070, %rd6071;
	shf.r.wrap.b32 	%r4425, %r4082, %r4081, 1;
	shf.r.wrap.b32 	%r4426, %r4081, %r4082, 1;
	mov.b64 	%rd6073, {%r4426, %r4425};
	shf.r.wrap.b32 	%r4427, %r4082, %r4081, 8;
	shf.r.wrap.b32 	%r4428, %r4081, %r4082, 8;
	mov.b64 	%rd6074, {%r4428, %r4427};
	xor.b64  	%rd6075, %rd6073, %rd6074;
	shr.u64 	%rd6076, %rd5525, 7;
	xor.b64  	%rd6077, %rd6075, %rd6076;
	add.s64 	%rd6078, %rd6072, %rd5488;
	add.s64 	%rd6079, %rd6078, %rd5821;
	add.s64 	%rd6080, %rd6079, %rd6077;
	add.s64 	%rd6081, %rd6080, %rd5945;
	xor.b64  	%rd6082, %rd6019, %rd5982;
	and.b64  	%rd6083, %rd6056, %rd6082;
	xor.b64  	%rd6084, %rd6083, %rd5982;
	add.s64 	%rd6085, %rd6081, %rd6084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4429,%dummy}, %rd6056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4430}, %rd6056;
	}
	shf.r.wrap.b32 	%r4431, %r4430, %r4429, 14;
	shf.r.wrap.b32 	%r4432, %r4429, %r4430, 14;
	mov.b64 	%rd6086, {%r4432, %r4431};
	shf.r.wrap.b32 	%r4433, %r4430, %r4429, 18;
	shf.r.wrap.b32 	%r4434, %r4429, %r4430, 18;
	mov.b64 	%rd6087, {%r4434, %r4433};
	xor.b64  	%rd6088, %rd6086, %rd6087;
	shf.l.wrap.b32 	%r4435, %r4429, %r4430, 23;
	shf.l.wrap.b32 	%r4436, %r4430, %r4429, 23;
	mov.b64 	%rd6089, {%r4436, %r4435};
	xor.b64  	%rd6090, %rd6088, %rd6089;
	add.s64 	%rd6091, %rd6085, %rd6090;
	add.s64 	%rd6092, %rd6091, -4685533653050689259;
	add.s64 	%rd6093, %rd6092, %rd5956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4437,%dummy}, %rd6067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4438}, %rd6067;
	}
	shf.r.wrap.b32 	%r4439, %r4438, %r4437, 28;
	shf.r.wrap.b32 	%r4440, %r4437, %r4438, 28;
	mov.b64 	%rd6094, {%r4440, %r4439};
	shf.l.wrap.b32 	%r4441, %r4437, %r4438, 30;
	shf.l.wrap.b32 	%r4442, %r4438, %r4437, 30;
	mov.b64 	%rd6095, {%r4442, %r4441};
	xor.b64  	%rd6096, %rd6094, %rd6095;
	shf.l.wrap.b32 	%r4443, %r4437, %r4438, 25;
	shf.l.wrap.b32 	%r4444, %r4438, %r4437, 25;
	mov.b64 	%rd6097, {%r4444, %r4443};
	xor.b64  	%rd6098, %rd6096, %rd6097;
	and.b64  	%rd6099, %rd6067, %rd6030;
	or.b64  	%rd6100, %rd6067, %rd6030;
	and.b64  	%rd6101, %rd6100, %rd5993;
	or.b64  	%rd6102, %rd6101, %rd6099;
	add.s64 	%rd6103, %rd6102, %rd6098;
	add.s64 	%rd6104, %rd6103, %rd6092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4445,%dummy}, %rd6043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4446}, %rd6043;
	}
	shf.r.wrap.b32 	%r4447, %r4446, %r4445, 19;
	shf.r.wrap.b32 	%r4448, %r4445, %r4446, 19;
	mov.b64 	%rd6105, {%r4448, %r4447};
	shf.l.wrap.b32 	%r4449, %r4445, %r4446, 3;
	shf.l.wrap.b32 	%r4450, %r4446, %r4445, 3;
	mov.b64 	%rd6106, {%r4450, %r4449};
	xor.b64  	%rd6107, %rd6105, %rd6106;
	shr.u64 	%rd6108, %rd6043, 6;
	xor.b64  	%rd6109, %rd6107, %rd6108;
	shf.r.wrap.b32 	%r4451, %r4108, %r4107, 1;
	shf.r.wrap.b32 	%r4452, %r4107, %r4108, 1;
	mov.b64 	%rd6110, {%r4452, %r4451};
	shf.r.wrap.b32 	%r4453, %r4108, %r4107, 8;
	shf.r.wrap.b32 	%r4454, %r4107, %r4108, 8;
	mov.b64 	%rd6111, {%r4454, %r4453};
	xor.b64  	%rd6112, %rd6110, %rd6111;
	shr.u64 	%rd6113, %rd5562, 7;
	xor.b64  	%rd6114, %rd6112, %rd6113;
	add.s64 	%rd6115, %rd6109, %rd5525;
	add.s64 	%rd6116, %rd6115, %rd5858;
	add.s64 	%rd6117, %rd6116, %rd6114;
	add.s64 	%rd6118, %rd6117, %rd5982;
	xor.b64  	%rd6119, %rd6056, %rd6019;
	and.b64  	%rd6120, %rd6093, %rd6119;
	xor.b64  	%rd6121, %rd6120, %rd6019;
	add.s64 	%rd6122, %rd6118, %rd6121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4455,%dummy}, %rd6093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4456}, %rd6093;
	}
	shf.r.wrap.b32 	%r4457, %r4456, %r4455, 14;
	shf.r.wrap.b32 	%r4458, %r4455, %r4456, 14;
	mov.b64 	%rd6123, {%r4458, %r4457};
	shf.r.wrap.b32 	%r4459, %r4456, %r4455, 18;
	shf.r.wrap.b32 	%r4460, %r4455, %r4456, 18;
	mov.b64 	%rd6124, {%r4460, %r4459};
	xor.b64  	%rd6125, %rd6123, %rd6124;
	shf.l.wrap.b32 	%r4461, %r4455, %r4456, 23;
	shf.l.wrap.b32 	%r4462, %r4456, %r4455, 23;
	mov.b64 	%rd6126, {%r4462, %r4461};
	xor.b64  	%rd6127, %rd6125, %rd6126;
	add.s64 	%rd6128, %rd6122, %rd6127;
	add.s64 	%rd6129, %rd6128, -4147400797238176981;
	add.s64 	%rd6130, %rd6129, %rd5993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4463,%dummy}, %rd6104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4464}, %rd6104;
	}
	shf.r.wrap.b32 	%r4465, %r4464, %r4463, 28;
	shf.r.wrap.b32 	%r4466, %r4463, %r4464, 28;
	mov.b64 	%rd6131, {%r4466, %r4465};
	shf.l.wrap.b32 	%r4467, %r4463, %r4464, 30;
	shf.l.wrap.b32 	%r4468, %r4464, %r4463, 30;
	mov.b64 	%rd6132, {%r4468, %r4467};
	xor.b64  	%rd6133, %rd6131, %rd6132;
	shf.l.wrap.b32 	%r4469, %r4463, %r4464, 25;
	shf.l.wrap.b32 	%r4470, %r4464, %r4463, 25;
	mov.b64 	%rd6134, {%r4470, %r4469};
	xor.b64  	%rd6135, %rd6133, %rd6134;
	and.b64  	%rd6136, %rd6104, %rd6067;
	or.b64  	%rd6137, %rd6104, %rd6067;
	and.b64  	%rd6138, %rd6137, %rd6030;
	or.b64  	%rd6139, %rd6138, %rd6136;
	add.s64 	%rd6140, %rd6139, %rd6135;
	add.s64 	%rd6141, %rd6140, %rd6129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4471,%dummy}, %rd6080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4472}, %rd6080;
	}
	shf.r.wrap.b32 	%r4473, %r4472, %r4471, 19;
	shf.r.wrap.b32 	%r4474, %r4471, %r4472, 19;
	mov.b64 	%rd6142, {%r4474, %r4473};
	shf.l.wrap.b32 	%r4475, %r4471, %r4472, 3;
	shf.l.wrap.b32 	%r4476, %r4472, %r4471, 3;
	mov.b64 	%rd6143, {%r4476, %r4475};
	xor.b64  	%rd6144, %rd6142, %rd6143;
	shr.u64 	%rd6145, %rd6080, 6;
	xor.b64  	%rd6146, %rd6144, %rd6145;
	shf.r.wrap.b32 	%r4477, %r4134, %r4133, 1;
	shf.r.wrap.b32 	%r4478, %r4133, %r4134, 1;
	mov.b64 	%rd6147, {%r4478, %r4477};
	shf.r.wrap.b32 	%r4479, %r4134, %r4133, 8;
	shf.r.wrap.b32 	%r4480, %r4133, %r4134, 8;
	mov.b64 	%rd6148, {%r4480, %r4479};
	xor.b64  	%rd6149, %rd6147, %rd6148;
	shr.u64 	%rd6150, %rd5599, 7;
	xor.b64  	%rd6151, %rd6149, %rd6150;
	add.s64 	%rd6152, %rd6146, %rd5562;
	add.s64 	%rd6153, %rd6152, %rd5895;
	add.s64 	%rd6154, %rd6153, %rd6151;
	add.s64 	%rd6155, %rd6154, %rd6019;
	xor.b64  	%rd6156, %rd6093, %rd6056;
	and.b64  	%rd6157, %rd6130, %rd6156;
	xor.b64  	%rd6158, %rd6157, %rd6056;
	add.s64 	%rd6159, %rd6155, %rd6158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4481,%dummy}, %rd6130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4482}, %rd6130;
	}
	shf.r.wrap.b32 	%r4483, %r4482, %r4481, 14;
	shf.r.wrap.b32 	%r4484, %r4481, %r4482, 14;
	mov.b64 	%rd6160, {%r4484, %r4483};
	shf.r.wrap.b32 	%r4485, %r4482, %r4481, 18;
	shf.r.wrap.b32 	%r4486, %r4481, %r4482, 18;
	mov.b64 	%rd6161, {%r4486, %r4485};
	xor.b64  	%rd6162, %rd6160, %rd6161;
	shf.l.wrap.b32 	%r4487, %r4481, %r4482, 23;
	shf.l.wrap.b32 	%r4488, %r4482, %r4481, 23;
	mov.b64 	%rd6163, {%r4488, %r4487};
	xor.b64  	%rd6164, %rd6162, %rd6163;
	add.s64 	%rd6165, %rd6159, %rd6164;
	add.s64 	%rd6166, %rd6165, -3880063495543823972;
	add.s64 	%rd6167, %rd6166, %rd6030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4489,%dummy}, %rd6141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4490}, %rd6141;
	}
	shf.r.wrap.b32 	%r4491, %r4490, %r4489, 28;
	shf.r.wrap.b32 	%r4492, %r4489, %r4490, 28;
	mov.b64 	%rd6168, {%r4492, %r4491};
	shf.l.wrap.b32 	%r4493, %r4489, %r4490, 30;
	shf.l.wrap.b32 	%r4494, %r4490, %r4489, 30;
	mov.b64 	%rd6169, {%r4494, %r4493};
	xor.b64  	%rd6170, %rd6168, %rd6169;
	shf.l.wrap.b32 	%r4495, %r4489, %r4490, 25;
	shf.l.wrap.b32 	%r4496, %r4490, %r4489, 25;
	mov.b64 	%rd6171, {%r4496, %r4495};
	xor.b64  	%rd6172, %rd6170, %rd6171;
	and.b64  	%rd6173, %rd6141, %rd6104;
	or.b64  	%rd6174, %rd6141, %rd6104;
	and.b64  	%rd6175, %rd6174, %rd6067;
	or.b64  	%rd6176, %rd6175, %rd6173;
	add.s64 	%rd6177, %rd6176, %rd6172;
	add.s64 	%rd6178, %rd6177, %rd6166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4497,%dummy}, %rd6117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4498}, %rd6117;
	}
	shf.r.wrap.b32 	%r4499, %r4498, %r4497, 19;
	shf.r.wrap.b32 	%r4500, %r4497, %r4498, 19;
	mov.b64 	%rd6179, {%r4500, %r4499};
	shf.l.wrap.b32 	%r4501, %r4497, %r4498, 3;
	shf.l.wrap.b32 	%r4502, %r4498, %r4497, 3;
	mov.b64 	%rd6180, {%r4502, %r4501};
	xor.b64  	%rd6181, %rd6179, %rd6180;
	shr.u64 	%rd6182, %rd6117, 6;
	xor.b64  	%rd6183, %rd6181, %rd6182;
	shf.r.wrap.b32 	%r4503, %r4160, %r4159, 1;
	shf.r.wrap.b32 	%r4504, %r4159, %r4160, 1;
	mov.b64 	%rd6184, {%r4504, %r4503};
	shf.r.wrap.b32 	%r4505, %r4160, %r4159, 8;
	shf.r.wrap.b32 	%r4506, %r4159, %r4160, 8;
	mov.b64 	%rd6185, {%r4506, %r4505};
	xor.b64  	%rd6186, %rd6184, %rd6185;
	shr.u64 	%rd6187, %rd5636, 7;
	xor.b64  	%rd6188, %rd6186, %rd6187;
	add.s64 	%rd6189, %rd6183, %rd5599;
	add.s64 	%rd6190, %rd6189, %rd5932;
	add.s64 	%rd6191, %rd6190, %rd6188;
	add.s64 	%rd6192, %rd6191, %rd6056;
	xor.b64  	%rd6193, %rd6130, %rd6093;
	and.b64  	%rd6194, %rd6167, %rd6193;
	xor.b64  	%rd6195, %rd6194, %rd6093;
	add.s64 	%rd6196, %rd6192, %rd6195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4507,%dummy}, %rd6167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4508}, %rd6167;
	}
	shf.r.wrap.b32 	%r4509, %r4508, %r4507, 14;
	shf.r.wrap.b32 	%r4510, %r4507, %r4508, 14;
	mov.b64 	%rd6197, {%r4510, %r4509};
	shf.r.wrap.b32 	%r4511, %r4508, %r4507, 18;
	shf.r.wrap.b32 	%r4512, %r4507, %r4508, 18;
	mov.b64 	%rd6198, {%r4512, %r4511};
	xor.b64  	%rd6199, %rd6197, %rd6198;
	shf.l.wrap.b32 	%r4513, %r4507, %r4508, 23;
	shf.l.wrap.b32 	%r4514, %r4508, %r4507, 23;
	mov.b64 	%rd6200, {%r4514, %r4513};
	xor.b64  	%rd6201, %rd6199, %rd6200;
	add.s64 	%rd6202, %rd6196, %rd6201;
	add.s64 	%rd6203, %rd6202, -3348786107499101689;
	add.s64 	%rd6204, %rd6203, %rd6067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4515,%dummy}, %rd6178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4516}, %rd6178;
	}
	shf.r.wrap.b32 	%r4517, %r4516, %r4515, 28;
	shf.r.wrap.b32 	%r4518, %r4515, %r4516, 28;
	mov.b64 	%rd6205, {%r4518, %r4517};
	shf.l.wrap.b32 	%r4519, %r4515, %r4516, 30;
	shf.l.wrap.b32 	%r4520, %r4516, %r4515, 30;
	mov.b64 	%rd6206, {%r4520, %r4519};
	xor.b64  	%rd6207, %rd6205, %rd6206;
	shf.l.wrap.b32 	%r4521, %r4515, %r4516, 25;
	shf.l.wrap.b32 	%r4522, %r4516, %r4515, 25;
	mov.b64 	%rd6208, {%r4522, %r4521};
	xor.b64  	%rd6209, %rd6207, %rd6208;
	and.b64  	%rd6210, %rd6178, %rd6141;
	or.b64  	%rd6211, %rd6178, %rd6141;
	and.b64  	%rd6212, %rd6211, %rd6104;
	or.b64  	%rd6213, %rd6212, %rd6210;
	add.s64 	%rd6214, %rd6213, %rd6209;
	add.s64 	%rd6215, %rd6214, %rd6203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4523,%dummy}, %rd6154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4524}, %rd6154;
	}
	shf.r.wrap.b32 	%r4525, %r4524, %r4523, 19;
	shf.r.wrap.b32 	%r4526, %r4523, %r4524, 19;
	mov.b64 	%rd6216, {%r4526, %r4525};
	shf.l.wrap.b32 	%r4527, %r4523, %r4524, 3;
	shf.l.wrap.b32 	%r4528, %r4524, %r4523, 3;
	mov.b64 	%rd6217, {%r4528, %r4527};
	xor.b64  	%rd6218, %rd6216, %rd6217;
	shr.u64 	%rd6219, %rd6154, 6;
	xor.b64  	%rd6220, %rd6218, %rd6219;
	shf.r.wrap.b32 	%r4529, %r4186, %r4185, 1;
	shf.r.wrap.b32 	%r4530, %r4185, %r4186, 1;
	mov.b64 	%rd6221, {%r4530, %r4529};
	shf.r.wrap.b32 	%r4531, %r4186, %r4185, 8;
	shf.r.wrap.b32 	%r4532, %r4185, %r4186, 8;
	mov.b64 	%rd6222, {%r4532, %r4531};
	xor.b64  	%rd6223, %rd6221, %rd6222;
	shr.u64 	%rd6224, %rd5673, 7;
	xor.b64  	%rd6225, %rd6223, %rd6224;
	add.s64 	%rd6226, %rd6220, %rd5636;
	add.s64 	%rd6227, %rd6226, %rd5969;
	add.s64 	%rd6228, %rd6227, %rd6225;
	add.s64 	%rd6229, %rd6228, %rd6093;
	xor.b64  	%rd6230, %rd6167, %rd6130;
	and.b64  	%rd6231, %rd6204, %rd6230;
	xor.b64  	%rd6232, %rd6231, %rd6130;
	add.s64 	%rd6233, %rd6229, %rd6232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4533,%dummy}, %rd6204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4534}, %rd6204;
	}
	shf.r.wrap.b32 	%r4535, %r4534, %r4533, 14;
	shf.r.wrap.b32 	%r4536, %r4533, %r4534, 14;
	mov.b64 	%rd6234, {%r4536, %r4535};
	shf.r.wrap.b32 	%r4537, %r4534, %r4533, 18;
	shf.r.wrap.b32 	%r4538, %r4533, %r4534, 18;
	mov.b64 	%rd6235, {%r4538, %r4537};
	xor.b64  	%rd6236, %rd6234, %rd6235;
	shf.l.wrap.b32 	%r4539, %r4533, %r4534, 23;
	shf.l.wrap.b32 	%r4540, %r4534, %r4533, 23;
	mov.b64 	%rd6237, {%r4540, %r4539};
	xor.b64  	%rd6238, %rd6236, %rd6237;
	add.s64 	%rd6239, %rd6233, %rd6238;
	add.s64 	%rd6240, %rd6239, -1523767162380948706;
	add.s64 	%rd6241, %rd6240, %rd6104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4541,%dummy}, %rd6215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4542}, %rd6215;
	}
	shf.r.wrap.b32 	%r4543, %r4542, %r4541, 28;
	shf.r.wrap.b32 	%r4544, %r4541, %r4542, 28;
	mov.b64 	%rd6242, {%r4544, %r4543};
	shf.l.wrap.b32 	%r4545, %r4541, %r4542, 30;
	shf.l.wrap.b32 	%r4546, %r4542, %r4541, 30;
	mov.b64 	%rd6243, {%r4546, %r4545};
	xor.b64  	%rd6244, %rd6242, %rd6243;
	shf.l.wrap.b32 	%r4547, %r4541, %r4542, 25;
	shf.l.wrap.b32 	%r4548, %r4542, %r4541, 25;
	mov.b64 	%rd6245, {%r4548, %r4547};
	xor.b64  	%rd6246, %rd6244, %rd6245;
	and.b64  	%rd6247, %rd6215, %rd6178;
	or.b64  	%rd6248, %rd6215, %rd6178;
	and.b64  	%rd6249, %rd6248, %rd6141;
	or.b64  	%rd6250, %rd6249, %rd6247;
	add.s64 	%rd6251, %rd6250, %rd6246;
	add.s64 	%rd6252, %rd6251, %rd6240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4549,%dummy}, %rd6191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4550}, %rd6191;
	}
	shf.r.wrap.b32 	%r4551, %r4550, %r4549, 19;
	shf.r.wrap.b32 	%r4552, %r4549, %r4550, 19;
	mov.b64 	%rd6253, {%r4552, %r4551};
	shf.l.wrap.b32 	%r4553, %r4549, %r4550, 3;
	shf.l.wrap.b32 	%r4554, %r4550, %r4549, 3;
	mov.b64 	%rd6254, {%r4554, %r4553};
	xor.b64  	%rd6255, %rd6253, %rd6254;
	shr.u64 	%rd6256, %rd6191, 6;
	xor.b64  	%rd6257, %rd6255, %rd6256;
	shf.r.wrap.b32 	%r4555, %r4212, %r4211, 1;
	shf.r.wrap.b32 	%r4556, %r4211, %r4212, 1;
	mov.b64 	%rd6258, {%r4556, %r4555};
	shf.r.wrap.b32 	%r4557, %r4212, %r4211, 8;
	shf.r.wrap.b32 	%r4558, %r4211, %r4212, 8;
	mov.b64 	%rd6259, {%r4558, %r4557};
	xor.b64  	%rd6260, %rd6258, %rd6259;
	shr.u64 	%rd6261, %rd5710, 7;
	xor.b64  	%rd6262, %rd6260, %rd6261;
	add.s64 	%rd6263, %rd6257, %rd5673;
	add.s64 	%rd6264, %rd6263, %rd6006;
	add.s64 	%rd6265, %rd6264, %rd6262;
	add.s64 	%rd6266, %rd6265, %rd6130;
	xor.b64  	%rd6267, %rd6204, %rd6167;
	and.b64  	%rd6268, %rd6241, %rd6267;
	xor.b64  	%rd6269, %rd6268, %rd6167;
	add.s64 	%rd6270, %rd6266, %rd6269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4559,%dummy}, %rd6241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4560}, %rd6241;
	}
	shf.r.wrap.b32 	%r4561, %r4560, %r4559, 14;
	shf.r.wrap.b32 	%r4562, %r4559, %r4560, 14;
	mov.b64 	%rd6271, {%r4562, %r4561};
	shf.r.wrap.b32 	%r4563, %r4560, %r4559, 18;
	shf.r.wrap.b32 	%r4564, %r4559, %r4560, 18;
	mov.b64 	%rd6272, {%r4564, %r4563};
	xor.b64  	%rd6273, %rd6271, %rd6272;
	shf.l.wrap.b32 	%r4565, %r4559, %r4560, 23;
	shf.l.wrap.b32 	%r4566, %r4560, %r4559, 23;
	mov.b64 	%rd6274, {%r4566, %r4565};
	xor.b64  	%rd6275, %rd6273, %rd6274;
	add.s64 	%rd6276, %rd6270, %rd6275;
	add.s64 	%rd6277, %rd6276, -757361751448694408;
	add.s64 	%rd6278, %rd6277, %rd6141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4567,%dummy}, %rd6252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4568}, %rd6252;
	}
	shf.r.wrap.b32 	%r4569, %r4568, %r4567, 28;
	shf.r.wrap.b32 	%r4570, %r4567, %r4568, 28;
	mov.b64 	%rd6279, {%r4570, %r4569};
	shf.l.wrap.b32 	%r4571, %r4567, %r4568, 30;
	shf.l.wrap.b32 	%r4572, %r4568, %r4567, 30;
	mov.b64 	%rd6280, {%r4572, %r4571};
	xor.b64  	%rd6281, %rd6279, %rd6280;
	shf.l.wrap.b32 	%r4573, %r4567, %r4568, 25;
	shf.l.wrap.b32 	%r4574, %r4568, %r4567, 25;
	mov.b64 	%rd6282, {%r4574, %r4573};
	xor.b64  	%rd6283, %rd6281, %rd6282;
	and.b64  	%rd6284, %rd6252, %rd6215;
	or.b64  	%rd6285, %rd6252, %rd6215;
	and.b64  	%rd6286, %rd6285, %rd6178;
	or.b64  	%rd6287, %rd6286, %rd6284;
	add.s64 	%rd6288, %rd6287, %rd6283;
	add.s64 	%rd6289, %rd6288, %rd6277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4575,%dummy}, %rd6228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4576}, %rd6228;
	}
	shf.r.wrap.b32 	%r4577, %r4576, %r4575, 19;
	shf.r.wrap.b32 	%r4578, %r4575, %r4576, 19;
	mov.b64 	%rd6290, {%r4578, %r4577};
	shf.l.wrap.b32 	%r4579, %r4575, %r4576, 3;
	shf.l.wrap.b32 	%r4580, %r4576, %r4575, 3;
	mov.b64 	%rd6291, {%r4580, %r4579};
	xor.b64  	%rd6292, %rd6290, %rd6291;
	shr.u64 	%rd6293, %rd6228, 6;
	xor.b64  	%rd6294, %rd6292, %rd6293;
	shf.r.wrap.b32 	%r4581, %r4238, %r4237, 1;
	shf.r.wrap.b32 	%r4582, %r4237, %r4238, 1;
	mov.b64 	%rd6295, {%r4582, %r4581};
	shf.r.wrap.b32 	%r4583, %r4238, %r4237, 8;
	shf.r.wrap.b32 	%r4584, %r4237, %r4238, 8;
	mov.b64 	%rd6296, {%r4584, %r4583};
	xor.b64  	%rd6297, %rd6295, %rd6296;
	shr.u64 	%rd6298, %rd5747, 7;
	xor.b64  	%rd6299, %rd6297, %rd6298;
	add.s64 	%rd6300, %rd6294, %rd5710;
	add.s64 	%rd6301, %rd6300, %rd6043;
	add.s64 	%rd6302, %rd6301, %rd6299;
	add.s64 	%rd6303, %rd6302, %rd6167;
	xor.b64  	%rd6304, %rd6241, %rd6204;
	and.b64  	%rd6305, %rd6278, %rd6304;
	xor.b64  	%rd6306, %rd6305, %rd6204;
	add.s64 	%rd6307, %rd6303, %rd6306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4585,%dummy}, %rd6278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4586}, %rd6278;
	}
	shf.r.wrap.b32 	%r4587, %r4586, %r4585, 14;
	shf.r.wrap.b32 	%r4588, %r4585, %r4586, 14;
	mov.b64 	%rd6308, {%r4588, %r4587};
	shf.r.wrap.b32 	%r4589, %r4586, %r4585, 18;
	shf.r.wrap.b32 	%r4590, %r4585, %r4586, 18;
	mov.b64 	%rd6309, {%r4590, %r4589};
	xor.b64  	%rd6310, %rd6308, %rd6309;
	shf.l.wrap.b32 	%r4591, %r4585, %r4586, 23;
	shf.l.wrap.b32 	%r4592, %r4586, %r4585, 23;
	mov.b64 	%rd6311, {%r4592, %r4591};
	xor.b64  	%rd6312, %rd6310, %rd6311;
	add.s64 	%rd6313, %rd6307, %rd6312;
	add.s64 	%rd6314, %rd6313, 500013540394364858;
	add.s64 	%rd6315, %rd6314, %rd6178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4593,%dummy}, %rd6289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4594}, %rd6289;
	}
	shf.r.wrap.b32 	%r4595, %r4594, %r4593, 28;
	shf.r.wrap.b32 	%r4596, %r4593, %r4594, 28;
	mov.b64 	%rd6316, {%r4596, %r4595};
	shf.l.wrap.b32 	%r4597, %r4593, %r4594, 30;
	shf.l.wrap.b32 	%r4598, %r4594, %r4593, 30;
	mov.b64 	%rd6317, {%r4598, %r4597};
	xor.b64  	%rd6318, %rd6316, %rd6317;
	shf.l.wrap.b32 	%r4599, %r4593, %r4594, 25;
	shf.l.wrap.b32 	%r4600, %r4594, %r4593, 25;
	mov.b64 	%rd6319, {%r4600, %r4599};
	xor.b64  	%rd6320, %rd6318, %rd6319;
	and.b64  	%rd6321, %rd6289, %rd6252;
	or.b64  	%rd6322, %rd6289, %rd6252;
	and.b64  	%rd6323, %rd6322, %rd6215;
	or.b64  	%rd6324, %rd6323, %rd6321;
	add.s64 	%rd6325, %rd6324, %rd6320;
	add.s64 	%rd6326, %rd6325, %rd6314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4601,%dummy}, %rd6265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4602}, %rd6265;
	}
	shf.r.wrap.b32 	%r4603, %r4602, %r4601, 19;
	shf.r.wrap.b32 	%r4604, %r4601, %r4602, 19;
	mov.b64 	%rd6327, {%r4604, %r4603};
	shf.l.wrap.b32 	%r4605, %r4601, %r4602, 3;
	shf.l.wrap.b32 	%r4606, %r4602, %r4601, 3;
	mov.b64 	%rd6328, {%r4606, %r4605};
	xor.b64  	%rd6329, %rd6327, %rd6328;
	shr.u64 	%rd6330, %rd6265, 6;
	xor.b64  	%rd6331, %rd6329, %rd6330;
	shf.r.wrap.b32 	%r4607, %r4264, %r4263, 1;
	shf.r.wrap.b32 	%r4608, %r4263, %r4264, 1;
	mov.b64 	%rd6332, {%r4608, %r4607};
	shf.r.wrap.b32 	%r4609, %r4264, %r4263, 8;
	shf.r.wrap.b32 	%r4610, %r4263, %r4264, 8;
	mov.b64 	%rd6333, {%r4610, %r4609};
	xor.b64  	%rd6334, %rd6332, %rd6333;
	shr.u64 	%rd6335, %rd5784, 7;
	xor.b64  	%rd6336, %rd6334, %rd6335;
	add.s64 	%rd6337, %rd6331, %rd5747;
	add.s64 	%rd6338, %rd6337, %rd6080;
	add.s64 	%rd6339, %rd6338, %rd6336;
	add.s64 	%rd6340, %rd6339, %rd6204;
	xor.b64  	%rd6341, %rd6278, %rd6241;
	and.b64  	%rd6342, %rd6315, %rd6341;
	xor.b64  	%rd6343, %rd6342, %rd6241;
	add.s64 	%rd6344, %rd6340, %rd6343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4611,%dummy}, %rd6315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4612}, %rd6315;
	}
	shf.r.wrap.b32 	%r4613, %r4612, %r4611, 14;
	shf.r.wrap.b32 	%r4614, %r4611, %r4612, 14;
	mov.b64 	%rd6345, {%r4614, %r4613};
	shf.r.wrap.b32 	%r4615, %r4612, %r4611, 18;
	shf.r.wrap.b32 	%r4616, %r4611, %r4612, 18;
	mov.b64 	%rd6346, {%r4616, %r4615};
	xor.b64  	%rd6347, %rd6345, %rd6346;
	shf.l.wrap.b32 	%r4617, %r4611, %r4612, 23;
	shf.l.wrap.b32 	%r4618, %r4612, %r4611, 23;
	mov.b64 	%rd6348, {%r4618, %r4617};
	xor.b64  	%rd6349, %rd6347, %rd6348;
	add.s64 	%rd6350, %rd6344, %rd6349;
	add.s64 	%rd6351, %rd6350, 748580250866718886;
	add.s64 	%rd6352, %rd6351, %rd6215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4619,%dummy}, %rd6326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4620}, %rd6326;
	}
	shf.r.wrap.b32 	%r4621, %r4620, %r4619, 28;
	shf.r.wrap.b32 	%r4622, %r4619, %r4620, 28;
	mov.b64 	%rd6353, {%r4622, %r4621};
	shf.l.wrap.b32 	%r4623, %r4619, %r4620, 30;
	shf.l.wrap.b32 	%r4624, %r4620, %r4619, 30;
	mov.b64 	%rd6354, {%r4624, %r4623};
	xor.b64  	%rd6355, %rd6353, %rd6354;
	shf.l.wrap.b32 	%r4625, %r4619, %r4620, 25;
	shf.l.wrap.b32 	%r4626, %r4620, %r4619, 25;
	mov.b64 	%rd6356, {%r4626, %r4625};
	xor.b64  	%rd6357, %rd6355, %rd6356;
	and.b64  	%rd6358, %rd6326, %rd6289;
	or.b64  	%rd6359, %rd6326, %rd6289;
	and.b64  	%rd6360, %rd6359, %rd6252;
	or.b64  	%rd6361, %rd6360, %rd6358;
	add.s64 	%rd6362, %rd6361, %rd6357;
	add.s64 	%rd6363, %rd6362, %rd6351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4627,%dummy}, %rd6302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4628}, %rd6302;
	}
	shf.r.wrap.b32 	%r4629, %r4628, %r4627, 19;
	shf.r.wrap.b32 	%r4630, %r4627, %r4628, 19;
	mov.b64 	%rd6364, {%r4630, %r4629};
	shf.l.wrap.b32 	%r4631, %r4627, %r4628, 3;
	shf.l.wrap.b32 	%r4632, %r4628, %r4627, 3;
	mov.b64 	%rd6365, {%r4632, %r4631};
	xor.b64  	%rd6366, %rd6364, %rd6365;
	shr.u64 	%rd6367, %rd6302, 6;
	xor.b64  	%rd6368, %rd6366, %rd6367;
	shf.r.wrap.b32 	%r4633, %r4290, %r4289, 1;
	shf.r.wrap.b32 	%r4634, %r4289, %r4290, 1;
	mov.b64 	%rd6369, {%r4634, %r4633};
	shf.r.wrap.b32 	%r4635, %r4290, %r4289, 8;
	shf.r.wrap.b32 	%r4636, %r4289, %r4290, 8;
	mov.b64 	%rd6370, {%r4636, %r4635};
	xor.b64  	%rd6371, %rd6369, %rd6370;
	shr.u64 	%rd6372, %rd5821, 7;
	xor.b64  	%rd6373, %rd6371, %rd6372;
	add.s64 	%rd6374, %rd6368, %rd5784;
	add.s64 	%rd6375, %rd6374, %rd6117;
	add.s64 	%rd6376, %rd6375, %rd6373;
	add.s64 	%rd6377, %rd6376, %rd6241;
	xor.b64  	%rd6378, %rd6315, %rd6278;
	and.b64  	%rd6379, %rd6352, %rd6378;
	xor.b64  	%rd6380, %rd6379, %rd6278;
	add.s64 	%rd6381, %rd6377, %rd6380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4637,%dummy}, %rd6352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4638}, %rd6352;
	}
	shf.r.wrap.b32 	%r4639, %r4638, %r4637, 14;
	shf.r.wrap.b32 	%r4640, %r4637, %r4638, 14;
	mov.b64 	%rd6382, {%r4640, %r4639};
	shf.r.wrap.b32 	%r4641, %r4638, %r4637, 18;
	shf.r.wrap.b32 	%r4642, %r4637, %r4638, 18;
	mov.b64 	%rd6383, {%r4642, %r4641};
	xor.b64  	%rd6384, %rd6382, %rd6383;
	shf.l.wrap.b32 	%r4643, %r4637, %r4638, 23;
	shf.l.wrap.b32 	%r4644, %r4638, %r4637, 23;
	mov.b64 	%rd6385, {%r4644, %r4643};
	xor.b64  	%rd6386, %rd6384, %rd6385;
	add.s64 	%rd6387, %rd6381, %rd6386;
	add.s64 	%rd6388, %rd6387, 1242879168328830382;
	add.s64 	%rd6389, %rd6388, %rd6252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4645,%dummy}, %rd6363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4646}, %rd6363;
	}
	shf.r.wrap.b32 	%r4647, %r4646, %r4645, 28;
	shf.r.wrap.b32 	%r4648, %r4645, %r4646, 28;
	mov.b64 	%rd6390, {%r4648, %r4647};
	shf.l.wrap.b32 	%r4649, %r4645, %r4646, 30;
	shf.l.wrap.b32 	%r4650, %r4646, %r4645, 30;
	mov.b64 	%rd6391, {%r4650, %r4649};
	xor.b64  	%rd6392, %rd6390, %rd6391;
	shf.l.wrap.b32 	%r4651, %r4645, %r4646, 25;
	shf.l.wrap.b32 	%r4652, %r4646, %r4645, 25;
	mov.b64 	%rd6393, {%r4652, %r4651};
	xor.b64  	%rd6394, %rd6392, %rd6393;
	and.b64  	%rd6395, %rd6363, %rd6326;
	or.b64  	%rd6396, %rd6363, %rd6326;
	and.b64  	%rd6397, %rd6396, %rd6289;
	or.b64  	%rd6398, %rd6397, %rd6395;
	add.s64 	%rd6399, %rd6398, %rd6394;
	add.s64 	%rd6400, %rd6399, %rd6388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4653,%dummy}, %rd6339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4654}, %rd6339;
	}
	shf.r.wrap.b32 	%r4655, %r4654, %r4653, 19;
	shf.r.wrap.b32 	%r4656, %r4653, %r4654, 19;
	mov.b64 	%rd6401, {%r4656, %r4655};
	shf.l.wrap.b32 	%r4657, %r4653, %r4654, 3;
	shf.l.wrap.b32 	%r4658, %r4654, %r4653, 3;
	mov.b64 	%rd6402, {%r4658, %r4657};
	xor.b64  	%rd6403, %rd6401, %rd6402;
	shr.u64 	%rd6404, %rd6339, 6;
	xor.b64  	%rd6405, %rd6403, %rd6404;
	shf.r.wrap.b32 	%r4659, %r4316, %r4315, 1;
	shf.r.wrap.b32 	%r4660, %r4315, %r4316, 1;
	mov.b64 	%rd6406, {%r4660, %r4659};
	shf.r.wrap.b32 	%r4661, %r4316, %r4315, 8;
	shf.r.wrap.b32 	%r4662, %r4315, %r4316, 8;
	mov.b64 	%rd6407, {%r4662, %r4661};
	xor.b64  	%rd6408, %rd6406, %rd6407;
	shr.u64 	%rd6409, %rd5858, 7;
	xor.b64  	%rd6410, %rd6408, %rd6409;
	add.s64 	%rd6411, %rd6405, %rd5821;
	add.s64 	%rd6412, %rd6411, %rd6154;
	add.s64 	%rd6413, %rd6412, %rd6410;
	add.s64 	%rd6414, %rd6413, %rd6278;
	xor.b64  	%rd6415, %rd6352, %rd6315;
	and.b64  	%rd6416, %rd6389, %rd6415;
	xor.b64  	%rd6417, %rd6416, %rd6315;
	add.s64 	%rd6418, %rd6414, %rd6417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4663,%dummy}, %rd6389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4664}, %rd6389;
	}
	shf.r.wrap.b32 	%r4665, %r4664, %r4663, 14;
	shf.r.wrap.b32 	%r4666, %r4663, %r4664, 14;
	mov.b64 	%rd6419, {%r4666, %r4665};
	shf.r.wrap.b32 	%r4667, %r4664, %r4663, 18;
	shf.r.wrap.b32 	%r4668, %r4663, %r4664, 18;
	mov.b64 	%rd6420, {%r4668, %r4667};
	xor.b64  	%rd6421, %rd6419, %rd6420;
	shf.l.wrap.b32 	%r4669, %r4663, %r4664, 23;
	shf.l.wrap.b32 	%r4670, %r4664, %r4663, 23;
	mov.b64 	%rd6422, {%r4670, %r4669};
	xor.b64  	%rd6423, %rd6421, %rd6422;
	add.s64 	%rd6424, %rd6418, %rd6423;
	add.s64 	%rd6425, %rd6424, 1977374033974150939;
	add.s64 	%rd6426, %rd6425, %rd6289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4671,%dummy}, %rd6400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4672}, %rd6400;
	}
	shf.r.wrap.b32 	%r4673, %r4672, %r4671, 28;
	shf.r.wrap.b32 	%r4674, %r4671, %r4672, 28;
	mov.b64 	%rd6427, {%r4674, %r4673};
	shf.l.wrap.b32 	%r4675, %r4671, %r4672, 30;
	shf.l.wrap.b32 	%r4676, %r4672, %r4671, 30;
	mov.b64 	%rd6428, {%r4676, %r4675};
	xor.b64  	%rd6429, %rd6427, %rd6428;
	shf.l.wrap.b32 	%r4677, %r4671, %r4672, 25;
	shf.l.wrap.b32 	%r4678, %r4672, %r4671, 25;
	mov.b64 	%rd6430, {%r4678, %r4677};
	xor.b64  	%rd6431, %rd6429, %rd6430;
	and.b64  	%rd6432, %rd6400, %rd6363;
	or.b64  	%rd6433, %rd6400, %rd6363;
	and.b64  	%rd6434, %rd6433, %rd6326;
	or.b64  	%rd6435, %rd6434, %rd6432;
	add.s64 	%rd6436, %rd6435, %rd6431;
	add.s64 	%rd6437, %rd6436, %rd6425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4679,%dummy}, %rd6376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4680}, %rd6376;
	}
	shf.r.wrap.b32 	%r4681, %r4680, %r4679, 19;
	shf.r.wrap.b32 	%r4682, %r4679, %r4680, 19;
	mov.b64 	%rd6438, {%r4682, %r4681};
	shf.l.wrap.b32 	%r4683, %r4679, %r4680, 3;
	shf.l.wrap.b32 	%r4684, %r4680, %r4679, 3;
	mov.b64 	%rd6439, {%r4684, %r4683};
	xor.b64  	%rd6440, %rd6438, %rd6439;
	shr.u64 	%rd6441, %rd6376, 6;
	xor.b64  	%rd6442, %rd6440, %rd6441;
	shf.r.wrap.b32 	%r4685, %r4342, %r4341, 1;
	shf.r.wrap.b32 	%r4686, %r4341, %r4342, 1;
	mov.b64 	%rd6443, {%r4686, %r4685};
	shf.r.wrap.b32 	%r4687, %r4342, %r4341, 8;
	shf.r.wrap.b32 	%r4688, %r4341, %r4342, 8;
	mov.b64 	%rd6444, {%r4688, %r4687};
	xor.b64  	%rd6445, %rd6443, %rd6444;
	shr.u64 	%rd6446, %rd5895, 7;
	xor.b64  	%rd6447, %rd6445, %rd6446;
	add.s64 	%rd6448, %rd6442, %rd5858;
	add.s64 	%rd6449, %rd6448, %rd6191;
	add.s64 	%rd6450, %rd6449, %rd6447;
	add.s64 	%rd6451, %rd6450, %rd6315;
	xor.b64  	%rd6452, %rd6389, %rd6352;
	and.b64  	%rd6453, %rd6426, %rd6452;
	xor.b64  	%rd6454, %rd6453, %rd6352;
	add.s64 	%rd6455, %rd6451, %rd6454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4689,%dummy}, %rd6426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4690}, %rd6426;
	}
	shf.r.wrap.b32 	%r4691, %r4690, %r4689, 14;
	shf.r.wrap.b32 	%r4692, %r4689, %r4690, 14;
	mov.b64 	%rd6456, {%r4692, %r4691};
	shf.r.wrap.b32 	%r4693, %r4690, %r4689, 18;
	shf.r.wrap.b32 	%r4694, %r4689, %r4690, 18;
	mov.b64 	%rd6457, {%r4694, %r4693};
	xor.b64  	%rd6458, %rd6456, %rd6457;
	shf.l.wrap.b32 	%r4695, %r4689, %r4690, 23;
	shf.l.wrap.b32 	%r4696, %r4690, %r4689, 23;
	mov.b64 	%rd6459, {%r4696, %r4695};
	xor.b64  	%rd6460, %rd6458, %rd6459;
	add.s64 	%rd6461, %rd6455, %rd6460;
	add.s64 	%rd6462, %rd6461, 2944078676154940804;
	add.s64 	%rd6463, %rd6462, %rd6326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4697,%dummy}, %rd6437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4698}, %rd6437;
	}
	shf.r.wrap.b32 	%r4699, %r4698, %r4697, 28;
	shf.r.wrap.b32 	%r4700, %r4697, %r4698, 28;
	mov.b64 	%rd6464, {%r4700, %r4699};
	shf.l.wrap.b32 	%r4701, %r4697, %r4698, 30;
	shf.l.wrap.b32 	%r4702, %r4698, %r4697, 30;
	mov.b64 	%rd6465, {%r4702, %r4701};
	xor.b64  	%rd6466, %rd6464, %rd6465;
	shf.l.wrap.b32 	%r4703, %r4697, %r4698, 25;
	shf.l.wrap.b32 	%r4704, %r4698, %r4697, 25;
	mov.b64 	%rd6467, {%r4704, %r4703};
	xor.b64  	%rd6468, %rd6466, %rd6467;
	and.b64  	%rd6469, %rd6437, %rd6400;
	or.b64  	%rd6470, %rd6437, %rd6400;
	and.b64  	%rd6471, %rd6470, %rd6363;
	or.b64  	%rd6472, %rd6471, %rd6469;
	add.s64 	%rd6473, %rd6472, %rd6468;
	add.s64 	%rd6474, %rd6473, %rd6462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4705,%dummy}, %rd6413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4706}, %rd6413;
	}
	shf.r.wrap.b32 	%r4707, %r4706, %r4705, 19;
	shf.r.wrap.b32 	%r4708, %r4705, %r4706, 19;
	mov.b64 	%rd6475, {%r4708, %r4707};
	shf.l.wrap.b32 	%r4709, %r4705, %r4706, 3;
	shf.l.wrap.b32 	%r4710, %r4706, %r4705, 3;
	mov.b64 	%rd6476, {%r4710, %r4709};
	xor.b64  	%rd6477, %rd6475, %rd6476;
	shr.u64 	%rd6478, %rd6413, 6;
	xor.b64  	%rd6479, %rd6477, %rd6478;
	shf.r.wrap.b32 	%r4711, %r4368, %r4367, 1;
	shf.r.wrap.b32 	%r4712, %r4367, %r4368, 1;
	mov.b64 	%rd6480, {%r4712, %r4711};
	shf.r.wrap.b32 	%r4713, %r4368, %r4367, 8;
	shf.r.wrap.b32 	%r4714, %r4367, %r4368, 8;
	mov.b64 	%rd6481, {%r4714, %r4713};
	xor.b64  	%rd6482, %rd6480, %rd6481;
	shr.u64 	%rd6483, %rd5932, 7;
	xor.b64  	%rd6484, %rd6482, %rd6483;
	add.s64 	%rd6485, %rd6479, %rd5895;
	add.s64 	%rd6486, %rd6485, %rd6228;
	add.s64 	%rd6487, %rd6486, %rd6484;
	add.s64 	%rd6488, %rd6487, %rd6352;
	xor.b64  	%rd6489, %rd6426, %rd6389;
	and.b64  	%rd6490, %rd6463, %rd6489;
	xor.b64  	%rd6491, %rd6490, %rd6389;
	add.s64 	%rd6492, %rd6488, %rd6491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4715,%dummy}, %rd6463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4716}, %rd6463;
	}
	shf.r.wrap.b32 	%r4717, %r4716, %r4715, 14;
	shf.r.wrap.b32 	%r4718, %r4715, %r4716, 14;
	mov.b64 	%rd6493, {%r4718, %r4717};
	shf.r.wrap.b32 	%r4719, %r4716, %r4715, 18;
	shf.r.wrap.b32 	%r4720, %r4715, %r4716, 18;
	mov.b64 	%rd6494, {%r4720, %r4719};
	xor.b64  	%rd6495, %rd6493, %rd6494;
	shf.l.wrap.b32 	%r4721, %r4715, %r4716, 23;
	shf.l.wrap.b32 	%r4722, %r4716, %r4715, 23;
	mov.b64 	%rd6496, {%r4722, %r4721};
	xor.b64  	%rd6497, %rd6495, %rd6496;
	add.s64 	%rd6498, %rd6492, %rd6497;
	add.s64 	%rd6499, %rd6498, 3659926193048069267;
	add.s64 	%rd6500, %rd6499, %rd6363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4723,%dummy}, %rd6474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4724}, %rd6474;
	}
	shf.r.wrap.b32 	%r4725, %r4724, %r4723, 28;
	shf.r.wrap.b32 	%r4726, %r4723, %r4724, 28;
	mov.b64 	%rd6501, {%r4726, %r4725};
	shf.l.wrap.b32 	%r4727, %r4723, %r4724, 30;
	shf.l.wrap.b32 	%r4728, %r4724, %r4723, 30;
	mov.b64 	%rd6502, {%r4728, %r4727};
	xor.b64  	%rd6503, %rd6501, %rd6502;
	shf.l.wrap.b32 	%r4729, %r4723, %r4724, 25;
	shf.l.wrap.b32 	%r4730, %r4724, %r4723, 25;
	mov.b64 	%rd6504, {%r4730, %r4729};
	xor.b64  	%rd6505, %rd6503, %rd6504;
	and.b64  	%rd6506, %rd6474, %rd6437;
	or.b64  	%rd6507, %rd6474, %rd6437;
	and.b64  	%rd6508, %rd6507, %rd6400;
	or.b64  	%rd6509, %rd6508, %rd6506;
	add.s64 	%rd6510, %rd6509, %rd6505;
	add.s64 	%rd6511, %rd6510, %rd6499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4731,%dummy}, %rd6450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4732}, %rd6450;
	}
	shf.r.wrap.b32 	%r4733, %r4732, %r4731, 19;
	shf.r.wrap.b32 	%r4734, %r4731, %r4732, 19;
	mov.b64 	%rd6512, {%r4734, %r4733};
	shf.l.wrap.b32 	%r4735, %r4731, %r4732, 3;
	shf.l.wrap.b32 	%r4736, %r4732, %r4731, 3;
	mov.b64 	%rd6513, {%r4736, %r4735};
	xor.b64  	%rd6514, %rd6512, %rd6513;
	shr.u64 	%rd6515, %rd6450, 6;
	xor.b64  	%rd6516, %rd6514, %rd6515;
	shf.r.wrap.b32 	%r4737, %r4394, %r4393, 1;
	shf.r.wrap.b32 	%r4738, %r4393, %r4394, 1;
	mov.b64 	%rd6517, {%r4738, %r4737};
	shf.r.wrap.b32 	%r4739, %r4394, %r4393, 8;
	shf.r.wrap.b32 	%r4740, %r4393, %r4394, 8;
	mov.b64 	%rd6518, {%r4740, %r4739};
	xor.b64  	%rd6519, %rd6517, %rd6518;
	shr.u64 	%rd6520, %rd5969, 7;
	xor.b64  	%rd6521, %rd6519, %rd6520;
	add.s64 	%rd6522, %rd6516, %rd5932;
	add.s64 	%rd6523, %rd6522, %rd6265;
	add.s64 	%rd6524, %rd6523, %rd6521;
	add.s64 	%rd6525, %rd6524, %rd6389;
	xor.b64  	%rd6526, %rd6463, %rd6426;
	and.b64  	%rd6527, %rd6500, %rd6526;
	xor.b64  	%rd6528, %rd6527, %rd6426;
	add.s64 	%rd6529, %rd6525, %rd6528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4741,%dummy}, %rd6500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4742}, %rd6500;
	}
	shf.r.wrap.b32 	%r4743, %r4742, %r4741, 14;
	shf.r.wrap.b32 	%r4744, %r4741, %r4742, 14;
	mov.b64 	%rd6530, {%r4744, %r4743};
	shf.r.wrap.b32 	%r4745, %r4742, %r4741, 18;
	shf.r.wrap.b32 	%r4746, %r4741, %r4742, 18;
	mov.b64 	%rd6531, {%r4746, %r4745};
	xor.b64  	%rd6532, %rd6530, %rd6531;
	shf.l.wrap.b32 	%r4747, %r4741, %r4742, 23;
	shf.l.wrap.b32 	%r4748, %r4742, %r4741, 23;
	mov.b64 	%rd6533, {%r4748, %r4747};
	xor.b64  	%rd6534, %rd6532, %rd6533;
	add.s64 	%rd6535, %rd6529, %rd6534;
	add.s64 	%rd6536, %rd6535, 4368137639120453308;
	add.s64 	%rd6537, %rd6536, %rd6400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4749,%dummy}, %rd6511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4750}, %rd6511;
	}
	shf.r.wrap.b32 	%r4751, %r4750, %r4749, 28;
	shf.r.wrap.b32 	%r4752, %r4749, %r4750, 28;
	mov.b64 	%rd6538, {%r4752, %r4751};
	shf.l.wrap.b32 	%r4753, %r4749, %r4750, 30;
	shf.l.wrap.b32 	%r4754, %r4750, %r4749, 30;
	mov.b64 	%rd6539, {%r4754, %r4753};
	xor.b64  	%rd6540, %rd6538, %rd6539;
	shf.l.wrap.b32 	%r4755, %r4749, %r4750, 25;
	shf.l.wrap.b32 	%r4756, %r4750, %r4749, 25;
	mov.b64 	%rd6541, {%r4756, %r4755};
	xor.b64  	%rd6542, %rd6540, %rd6541;
	and.b64  	%rd6543, %rd6511, %rd6474;
	or.b64  	%rd6544, %rd6511, %rd6474;
	and.b64  	%rd6545, %rd6544, %rd6437;
	or.b64  	%rd6546, %rd6545, %rd6543;
	add.s64 	%rd6547, %rd6546, %rd6542;
	add.s64 	%rd6548, %rd6547, %rd6536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4757,%dummy}, %rd6487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4758}, %rd6487;
	}
	shf.r.wrap.b32 	%r4759, %r4758, %r4757, 19;
	shf.r.wrap.b32 	%r4760, %r4757, %r4758, 19;
	mov.b64 	%rd6549, {%r4760, %r4759};
	shf.l.wrap.b32 	%r4761, %r4757, %r4758, 3;
	shf.l.wrap.b32 	%r4762, %r4758, %r4757, 3;
	mov.b64 	%rd6550, {%r4762, %r4761};
	xor.b64  	%rd6551, %rd6549, %rd6550;
	shr.u64 	%rd6552, %rd6487, 6;
	xor.b64  	%rd6553, %rd6551, %rd6552;
	shf.r.wrap.b32 	%r4763, %r4420, %r4419, 1;
	shf.r.wrap.b32 	%r4764, %r4419, %r4420, 1;
	mov.b64 	%rd6554, {%r4764, %r4763};
	shf.r.wrap.b32 	%r4765, %r4420, %r4419, 8;
	shf.r.wrap.b32 	%r4766, %r4419, %r4420, 8;
	mov.b64 	%rd6555, {%r4766, %r4765};
	xor.b64  	%rd6556, %rd6554, %rd6555;
	shr.u64 	%rd6557, %rd6006, 7;
	xor.b64  	%rd6558, %rd6556, %rd6557;
	add.s64 	%rd6559, %rd6553, %rd5969;
	add.s64 	%rd6560, %rd6559, %rd6302;
	add.s64 	%rd6561, %rd6560, %rd6558;
	add.s64 	%rd6562, %rd6561, %rd6426;
	xor.b64  	%rd6563, %rd6500, %rd6463;
	and.b64  	%rd6564, %rd6537, %rd6563;
	xor.b64  	%rd6565, %rd6564, %rd6463;
	add.s64 	%rd6566, %rd6562, %rd6565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4767,%dummy}, %rd6537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4768}, %rd6537;
	}
	shf.r.wrap.b32 	%r4769, %r4768, %r4767, 14;
	shf.r.wrap.b32 	%r4770, %r4767, %r4768, 14;
	mov.b64 	%rd6567, {%r4770, %r4769};
	shf.r.wrap.b32 	%r4771, %r4768, %r4767, 18;
	shf.r.wrap.b32 	%r4772, %r4767, %r4768, 18;
	mov.b64 	%rd6568, {%r4772, %r4771};
	xor.b64  	%rd6569, %rd6567, %rd6568;
	shf.l.wrap.b32 	%r4773, %r4767, %r4768, 23;
	shf.l.wrap.b32 	%r4774, %r4768, %r4767, 23;
	mov.b64 	%rd6570, {%r4774, %r4773};
	xor.b64  	%rd6571, %rd6569, %rd6570;
	add.s64 	%rd6572, %rd6566, %rd6571;
	add.s64 	%rd6573, %rd6572, 4836135668995329356;
	add.s64 	%rd6574, %rd6573, %rd6437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4775,%dummy}, %rd6548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4776}, %rd6548;
	}
	shf.r.wrap.b32 	%r4777, %r4776, %r4775, 28;
	shf.r.wrap.b32 	%r4778, %r4775, %r4776, 28;
	mov.b64 	%rd6575, {%r4778, %r4777};
	shf.l.wrap.b32 	%r4779, %r4775, %r4776, 30;
	shf.l.wrap.b32 	%r4780, %r4776, %r4775, 30;
	mov.b64 	%rd6576, {%r4780, %r4779};
	xor.b64  	%rd6577, %rd6575, %rd6576;
	shf.l.wrap.b32 	%r4781, %r4775, %r4776, 25;
	shf.l.wrap.b32 	%r4782, %r4776, %r4775, 25;
	mov.b64 	%rd6578, {%r4782, %r4781};
	xor.b64  	%rd6579, %rd6577, %rd6578;
	and.b64  	%rd6580, %rd6548, %rd6511;
	or.b64  	%rd6581, %rd6548, %rd6511;
	and.b64  	%rd6582, %rd6581, %rd6474;
	or.b64  	%rd6583, %rd6582, %rd6580;
	add.s64 	%rd6584, %rd6583, %rd6579;
	add.s64 	%rd6585, %rd6584, %rd6573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4783,%dummy}, %rd6524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4784}, %rd6524;
	}
	shf.r.wrap.b32 	%r4785, %r4784, %r4783, 19;
	shf.r.wrap.b32 	%r4786, %r4783, %r4784, 19;
	mov.b64 	%rd6586, {%r4786, %r4785};
	shf.l.wrap.b32 	%r4787, %r4783, %r4784, 3;
	shf.l.wrap.b32 	%r4788, %r4784, %r4783, 3;
	mov.b64 	%rd6587, {%r4788, %r4787};
	xor.b64  	%rd6588, %rd6586, %rd6587;
	shr.u64 	%rd6589, %rd6524, 6;
	xor.b64  	%rd6590, %rd6588, %rd6589;
	shf.r.wrap.b32 	%r4789, %r4446, %r4445, 1;
	shf.r.wrap.b32 	%r4790, %r4445, %r4446, 1;
	mov.b64 	%rd6591, {%r4790, %r4789};
	shf.r.wrap.b32 	%r4791, %r4446, %r4445, 8;
	shf.r.wrap.b32 	%r4792, %r4445, %r4446, 8;
	mov.b64 	%rd6592, {%r4792, %r4791};
	xor.b64  	%rd6593, %rd6591, %rd6592;
	shr.u64 	%rd6594, %rd6043, 7;
	xor.b64  	%rd6595, %rd6593, %rd6594;
	add.s64 	%rd6596, %rd6590, %rd6006;
	add.s64 	%rd6597, %rd6596, %rd6339;
	add.s64 	%rd6598, %rd6597, %rd6595;
	add.s64 	%rd6599, %rd6598, %rd6463;
	xor.b64  	%rd6600, %rd6537, %rd6500;
	and.b64  	%rd6601, %rd6574, %rd6600;
	xor.b64  	%rd6602, %rd6601, %rd6500;
	add.s64 	%rd6603, %rd6599, %rd6602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4793,%dummy}, %rd6574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4794}, %rd6574;
	}
	shf.r.wrap.b32 	%r4795, %r4794, %r4793, 14;
	shf.r.wrap.b32 	%r4796, %r4793, %r4794, 14;
	mov.b64 	%rd6604, {%r4796, %r4795};
	shf.r.wrap.b32 	%r4797, %r4794, %r4793, 18;
	shf.r.wrap.b32 	%r4798, %r4793, %r4794, 18;
	mov.b64 	%rd6605, {%r4798, %r4797};
	xor.b64  	%rd6606, %rd6604, %rd6605;
	shf.l.wrap.b32 	%r4799, %r4793, %r4794, 23;
	shf.l.wrap.b32 	%r4800, %r4794, %r4793, 23;
	mov.b64 	%rd6607, {%r4800, %r4799};
	xor.b64  	%rd6608, %rd6606, %rd6607;
	add.s64 	%rd6609, %rd6603, %rd6608;
	add.s64 	%rd6610, %rd6609, 5532061633213252278;
	add.s64 	%rd6611, %rd6610, %rd6474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4801,%dummy}, %rd6585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4802}, %rd6585;
	}
	shf.r.wrap.b32 	%r4803, %r4802, %r4801, 28;
	shf.r.wrap.b32 	%r4804, %r4801, %r4802, 28;
	mov.b64 	%rd6612, {%r4804, %r4803};
	shf.l.wrap.b32 	%r4805, %r4801, %r4802, 30;
	shf.l.wrap.b32 	%r4806, %r4802, %r4801, 30;
	mov.b64 	%rd6613, {%r4806, %r4805};
	xor.b64  	%rd6614, %rd6612, %rd6613;
	shf.l.wrap.b32 	%r4807, %r4801, %r4802, 25;
	shf.l.wrap.b32 	%r4808, %r4802, %r4801, 25;
	mov.b64 	%rd6615, {%r4808, %r4807};
	xor.b64  	%rd6616, %rd6614, %rd6615;
	and.b64  	%rd6617, %rd6585, %rd6548;
	or.b64  	%rd6618, %rd6585, %rd6548;
	and.b64  	%rd6619, %rd6618, %rd6511;
	or.b64  	%rd6620, %rd6619, %rd6617;
	add.s64 	%rd6621, %rd6620, %rd6616;
	add.s64 	%rd6622, %rd6621, %rd6610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4809,%dummy}, %rd6561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4810}, %rd6561;
	}
	shf.r.wrap.b32 	%r4811, %r4810, %r4809, 19;
	shf.r.wrap.b32 	%r4812, %r4809, %r4810, 19;
	mov.b64 	%rd6623, {%r4812, %r4811};
	shf.l.wrap.b32 	%r4813, %r4809, %r4810, 3;
	shf.l.wrap.b32 	%r4814, %r4810, %r4809, 3;
	mov.b64 	%rd6624, {%r4814, %r4813};
	xor.b64  	%rd6625, %rd6623, %rd6624;
	shr.u64 	%rd6626, %rd6561, 6;
	xor.b64  	%rd6627, %rd6625, %rd6626;
	shf.r.wrap.b32 	%r4815, %r4472, %r4471, 1;
	shf.r.wrap.b32 	%r4816, %r4471, %r4472, 1;
	mov.b64 	%rd6628, {%r4816, %r4815};
	shf.r.wrap.b32 	%r4817, %r4472, %r4471, 8;
	shf.r.wrap.b32 	%r4818, %r4471, %r4472, 8;
	mov.b64 	%rd6629, {%r4818, %r4817};
	xor.b64  	%rd6630, %rd6628, %rd6629;
	shr.u64 	%rd6631, %rd6080, 7;
	xor.b64  	%rd6632, %rd6630, %rd6631;
	add.s64 	%rd6633, %rd6627, %rd6043;
	add.s64 	%rd6634, %rd6633, %rd6376;
	add.s64 	%rd6635, %rd6634, %rd6632;
	add.s64 	%rd6636, %rd6635, %rd6500;
	xor.b64  	%rd6637, %rd6574, %rd6537;
	and.b64  	%rd6638, %rd6611, %rd6637;
	xor.b64  	%rd6639, %rd6638, %rd6537;
	add.s64 	%rd6640, %rd6636, %rd6639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4819,%dummy}, %rd6611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4820}, %rd6611;
	}
	shf.r.wrap.b32 	%r4821, %r4820, %r4819, 14;
	shf.r.wrap.b32 	%r4822, %r4819, %r4820, 14;
	mov.b64 	%rd6641, {%r4822, %r4821};
	shf.r.wrap.b32 	%r4823, %r4820, %r4819, 18;
	shf.r.wrap.b32 	%r4824, %r4819, %r4820, 18;
	mov.b64 	%rd6642, {%r4824, %r4823};
	xor.b64  	%rd6643, %rd6641, %rd6642;
	shf.l.wrap.b32 	%r4825, %r4819, %r4820, 23;
	shf.l.wrap.b32 	%r4826, %r4820, %r4819, 23;
	mov.b64 	%rd6644, {%r4826, %r4825};
	xor.b64  	%rd6645, %rd6643, %rd6644;
	add.s64 	%rd6646, %rd6640, %rd6645;
	add.s64 	%rd6647, %rd6646, 6448918945643986474;
	add.s64 	%rd6648, %rd6647, %rd6511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4827,%dummy}, %rd6622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4828}, %rd6622;
	}
	shf.r.wrap.b32 	%r4829, %r4828, %r4827, 28;
	shf.r.wrap.b32 	%r4830, %r4827, %r4828, 28;
	mov.b64 	%rd6649, {%r4830, %r4829};
	shf.l.wrap.b32 	%r4831, %r4827, %r4828, 30;
	shf.l.wrap.b32 	%r4832, %r4828, %r4827, 30;
	mov.b64 	%rd6650, {%r4832, %r4831};
	xor.b64  	%rd6651, %rd6649, %rd6650;
	shf.l.wrap.b32 	%r4833, %r4827, %r4828, 25;
	shf.l.wrap.b32 	%r4834, %r4828, %r4827, 25;
	mov.b64 	%rd6652, {%r4834, %r4833};
	xor.b64  	%rd6653, %rd6651, %rd6652;
	and.b64  	%rd6654, %rd6622, %rd6585;
	or.b64  	%rd6655, %rd6622, %rd6585;
	and.b64  	%rd6656, %rd6655, %rd6548;
	or.b64  	%rd6657, %rd6656, %rd6654;
	add.s64 	%rd6658, %rd6657, %rd6653;
	add.s64 	%rd6659, %rd6658, %rd6647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4835,%dummy}, %rd6598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4836}, %rd6598;
	}
	shf.r.wrap.b32 	%r4837, %r4836, %r4835, 19;
	shf.r.wrap.b32 	%r4838, %r4835, %r4836, 19;
	mov.b64 	%rd6660, {%r4838, %r4837};
	shf.l.wrap.b32 	%r4839, %r4835, %r4836, 3;
	shf.l.wrap.b32 	%r4840, %r4836, %r4835, 3;
	mov.b64 	%rd6661, {%r4840, %r4839};
	xor.b64  	%rd6662, %rd6660, %rd6661;
	shr.u64 	%rd6663, %rd6598, 6;
	xor.b64  	%rd6664, %rd6662, %rd6663;
	shf.r.wrap.b32 	%r4841, %r4498, %r4497, 1;
	shf.r.wrap.b32 	%r4842, %r4497, %r4498, 1;
	mov.b64 	%rd6665, {%r4842, %r4841};
	shf.r.wrap.b32 	%r4843, %r4498, %r4497, 8;
	shf.r.wrap.b32 	%r4844, %r4497, %r4498, 8;
	mov.b64 	%rd6666, {%r4844, %r4843};
	xor.b64  	%rd6667, %rd6665, %rd6666;
	shr.u64 	%rd6668, %rd6117, 7;
	xor.b64  	%rd6669, %rd6667, %rd6668;
	add.s64 	%rd6670, %rd6664, %rd6080;
	add.s64 	%rd6671, %rd6670, %rd6413;
	add.s64 	%rd6672, %rd6671, %rd6669;
	add.s64 	%rd6673, %rd6672, %rd6537;
	xor.b64  	%rd6674, %rd6611, %rd6574;
	and.b64  	%rd6675, %rd6648, %rd6674;
	xor.b64  	%rd6676, %rd6675, %rd6574;
	add.s64 	%rd6677, %rd6673, %rd6676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4845,%dummy}, %rd6648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4846}, %rd6648;
	}
	shf.r.wrap.b32 	%r4847, %r4846, %r4845, 14;
	shf.r.wrap.b32 	%r4848, %r4845, %r4846, 14;
	mov.b64 	%rd6678, {%r4848, %r4847};
	shf.r.wrap.b32 	%r4849, %r4846, %r4845, 18;
	shf.r.wrap.b32 	%r4850, %r4845, %r4846, 18;
	mov.b64 	%rd6679, {%r4850, %r4849};
	xor.b64  	%rd6680, %rd6678, %rd6679;
	shf.l.wrap.b32 	%r4851, %r4845, %r4846, 23;
	shf.l.wrap.b32 	%r4852, %r4846, %r4845, 23;
	mov.b64 	%rd6681, {%r4852, %r4851};
	xor.b64  	%rd6682, %rd6680, %rd6681;
	add.s64 	%rd6683, %rd6677, %rd6682;
	add.s64 	%rd6684, %rd6683, 6902733635092675308;
	add.s64 	%rd6685, %rd6684, %rd6548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4853,%dummy}, %rd6659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4854}, %rd6659;
	}
	shf.r.wrap.b32 	%r4855, %r4854, %r4853, 28;
	shf.r.wrap.b32 	%r4856, %r4853, %r4854, 28;
	mov.b64 	%rd6686, {%r4856, %r4855};
	shf.l.wrap.b32 	%r4857, %r4853, %r4854, 30;
	shf.l.wrap.b32 	%r4858, %r4854, %r4853, 30;
	mov.b64 	%rd6687, {%r4858, %r4857};
	xor.b64  	%rd6688, %rd6686, %rd6687;
	shf.l.wrap.b32 	%r4859, %r4853, %r4854, 25;
	shf.l.wrap.b32 	%r4860, %r4854, %r4853, 25;
	mov.b64 	%rd6689, {%r4860, %r4859};
	xor.b64  	%rd6690, %rd6688, %rd6689;
	and.b64  	%rd6691, %rd6659, %rd6622;
	or.b64  	%rd6692, %rd6659, %rd6622;
	and.b64  	%rd6693, %rd6692, %rd6585;
	or.b64  	%rd6694, %rd6693, %rd6691;
	add.s64 	%rd6695, %rd6694, %rd6690;
	add.s64 	%rd6696, %rd6695, %rd6684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4861,%dummy}, %rd6635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4862}, %rd6635;
	}
	shf.r.wrap.b32 	%r4863, %r4862, %r4861, 19;
	shf.r.wrap.b32 	%r4864, %r4861, %r4862, 19;
	mov.b64 	%rd6697, {%r4864, %r4863};
	shf.l.wrap.b32 	%r4865, %r4861, %r4862, 3;
	shf.l.wrap.b32 	%r4866, %r4862, %r4861, 3;
	mov.b64 	%rd6698, {%r4866, %r4865};
	xor.b64  	%rd6699, %rd6697, %rd6698;
	shr.u64 	%rd6700, %rd6635, 6;
	xor.b64  	%rd6701, %rd6699, %rd6700;
	shf.r.wrap.b32 	%r4867, %r4524, %r4523, 1;
	shf.r.wrap.b32 	%r4868, %r4523, %r4524, 1;
	mov.b64 	%rd6702, {%r4868, %r4867};
	shf.r.wrap.b32 	%r4869, %r4524, %r4523, 8;
	shf.r.wrap.b32 	%r4870, %r4523, %r4524, 8;
	mov.b64 	%rd6703, {%r4870, %r4869};
	xor.b64  	%rd6704, %rd6702, %rd6703;
	shr.u64 	%rd6705, %rd6154, 7;
	xor.b64  	%rd6706, %rd6704, %rd6705;
	add.s64 	%rd6707, %rd6701, %rd6117;
	add.s64 	%rd6708, %rd6707, %rd6450;
	add.s64 	%rd6709, %rd6708, %rd6706;
	add.s64 	%rd6710, %rd6709, %rd6574;
	xor.b64  	%rd6711, %rd6648, %rd6611;
	and.b64  	%rd6712, %rd6685, %rd6711;
	xor.b64  	%rd6713, %rd6712, %rd6611;
	add.s64 	%rd6714, %rd6710, %rd6713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4871,%dummy}, %rd6685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4872}, %rd6685;
	}
	shf.r.wrap.b32 	%r4873, %r4872, %r4871, 14;
	shf.r.wrap.b32 	%r4874, %r4871, %r4872, 14;
	mov.b64 	%rd6715, {%r4874, %r4873};
	shf.r.wrap.b32 	%r4875, %r4872, %r4871, 18;
	shf.r.wrap.b32 	%r4876, %r4871, %r4872, 18;
	mov.b64 	%rd6716, {%r4876, %r4875};
	xor.b64  	%rd6717, %rd6715, %rd6716;
	shf.l.wrap.b32 	%r4877, %r4871, %r4872, 23;
	shf.l.wrap.b32 	%r4878, %r4872, %r4871, 23;
	mov.b64 	%rd6718, {%r4878, %r4877};
	xor.b64  	%rd6719, %rd6717, %rd6718;
	add.s64 	%rd6720, %rd6714, %rd6719;
	add.s64 	%rd6721, %rd6720, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4879,%dummy}, %rd6696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4880}, %rd6696;
	}
	shf.r.wrap.b32 	%r4881, %r4880, %r4879, 28;
	shf.r.wrap.b32 	%r4882, %r4879, %r4880, 28;
	mov.b64 	%rd6722, {%r4882, %r4881};
	shf.l.wrap.b32 	%r4883, %r4879, %r4880, 30;
	shf.l.wrap.b32 	%r4884, %r4880, %r4879, 30;
	mov.b64 	%rd6723, {%r4884, %r4883};
	xor.b64  	%rd6724, %rd6722, %rd6723;
	shf.l.wrap.b32 	%r4885, %r4879, %r4880, 25;
	shf.l.wrap.b32 	%r4886, %r4880, %r4879, 25;
	mov.b64 	%rd6725, {%r4886, %r4885};
	xor.b64  	%rd6726, %rd6724, %rd6725;
	and.b64  	%rd6727, %rd6696, %rd6659;
	or.b64  	%rd6728, %rd6696, %rd6659;
	and.b64  	%rd6729, %rd6728, %rd6622;
	or.b64  	%rd6730, %rd6729, %rd6727;
	add.s64 	%rd6731, %rd6726, %rd6730;
	add.s64 	%rd6732, %rd6731, %rd6721;
	add.s64 	%rd6733, %rd6732, 7640891576956012808;
	add.s64 	%rd6734, %rd6696, -4942790177534073029;
	add.s64 	%rd6735, %rd6659, 4354685564936845355;
	add.s64 	%rd6736, %rd6622, -6534734903238641935;
	add.s64 	%rd6737, %rd6585, %rd6721;
	add.s64 	%rd6738, %rd6737, 5840696475078001361;
	add.s64 	%rd6739, %rd6685, -7276294671716946913;
	add.s64 	%rd6740, %rd6648, 2270897969802886507;
	add.s64 	%rd6741, %rd6611, 6620516959819538809;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4887, %temp}, %rd6733;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4888}, %rd6733;
	}
	prmt.b32 	%r4889, %r4887, %r1290, %r3216;
	prmt.b32 	%r4890, %r4888, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4891, %temp}, %rd6734;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4892}, %rd6734;
	}
	prmt.b32 	%r4893, %r4891, %r1290, %r3216;
	prmt.b32 	%r4894, %r4892, %r1290, %r3216;
	mov.b64 	%rd6742, {%r4890, %r4889};
	mov.b64 	%rd6743, {%r4894, %r4893};
	st.local.v2.u64 	[%rd1+128], {%rd6742, %rd6743};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4895, %temp}, %rd6735;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4896}, %rd6735;
	}
	prmt.b32 	%r4897, %r4895, %r1290, %r3216;
	prmt.b32 	%r4898, %r4896, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4899, %temp}, %rd6736;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4900}, %rd6736;
	}
	prmt.b32 	%r4901, %r4899, %r1290, %r3216;
	prmt.b32 	%r4902, %r4900, %r1290, %r3216;
	mov.b64 	%rd6744, {%r4898, %r4897};
	mov.b64 	%rd6745, {%r4902, %r4901};
	st.local.v2.u64 	[%rd1+144], {%rd6744, %rd6745};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4903, %temp}, %rd6738;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4904}, %rd6738;
	}
	prmt.b32 	%r4905, %r4903, %r1290, %r3216;
	prmt.b32 	%r4906, %r4904, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4907, %temp}, %rd6739;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4908}, %rd6739;
	}
	prmt.b32 	%r4909, %r4907, %r1290, %r3216;
	prmt.b32 	%r4910, %r4908, %r1290, %r3216;
	mov.b64 	%rd6746, {%r4906, %r4905};
	mov.b64 	%rd6747, {%r4910, %r4909};
	st.local.v2.u64 	[%rd1+160], {%rd6746, %rd6747};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4911, %temp}, %rd6740;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4912}, %rd6740;
	}
	prmt.b32 	%r4913, %r4911, %r1290, %r3216;
	prmt.b32 	%r4914, %r4912, %r1290, %r3216;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4915, %temp}, %rd6741;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4916}, %rd6741;
	}
	prmt.b32 	%r4917, %r4915, %r1290, %r3216;
	prmt.b32 	%r4918, %r4916, %r1290, %r3216;
	mov.b64 	%rd6748, {%r4914, %r4913};
	mov.b64 	%rd6749, {%r4918, %r4917};
	st.local.v2.u64 	[%rd1+176], {%rd6748, %rd6749};
	ld.const.v4.u16 	{%rs42, %rs43, %rs44, %rs45}, [%rd3+-32];
	ld.const.u8 	%rs9, [%rd3+-24];
	ld.const.u8 	%rs10, [%rd3+-23];
	ld.const.u8 	%rs11, [%rd3+-22];
	ld.const.u8 	%rs12, [%rd3+-21];
	cvt.u32.u16 	%r4919, %rs9;
	cvt.u32.u16 	%r4920, %rs10;
	prmt.b32 	%r4921, %r4920, %r4919, 30212;
	cvt.u32.u16 	%r4922, %rs11;
	cvt.u32.u16 	%r4923, %rs12;
	prmt.b32 	%r4924, %r4923, %r4922, 30212;
	ld.const.u8 	%rs13, [%rd3+-20];
	ld.const.u8 	%rs14, [%rd3+-19];
	ld.const.u8 	%rs15, [%rd3+-18];
	ld.const.u8 	%rs16, [%rd3+-17];
	cvt.u32.u16 	%r4925, %rs13;
	cvt.u32.u16 	%r4926, %rs14;
	prmt.b32 	%r4927, %r4926, %r4925, 30212;
	cvt.u32.u16 	%r4928, %rs15;
	cvt.u32.u16 	%r4929, %rs16;
	prmt.b32 	%r4930, %r4929, %r4928, 30212;
	prmt.b32 	%r10, %r4930, %r4927, 4180;
	prmt.b32 	%r9, %r4924, %r4921, 4180;
	mov.b32 	%r8, {%rs44, %rs45};
	mov.b32 	%r7, {%rs42, %rs43};
	st.local.v4.u32 	[%rd14], {%r7, %r8, %r9, %r10};
	ld.const.u32 	%r4931, [%rd3+-8];
	cvt.u64.u32 	%rd126, %r4931;
	shr.u32 	%r11, %r4931, 3;
	shr.u32 	%r12, %r4931, 5;
	mul.wide.u32 	%rd6750, %r12, 4;
	add.s64 	%rd6751, %rd13, %rd6750;
	add.s64 	%rd127, %rd6751, -4;
	mov.u32 	%r12632, 10;
	setp.eq.s32 	%p5, %r11, 16;
	@%p5 bra 	$L__BB6_11;

	setp.eq.s32 	%p6, %r11, 24;
	@%p6 bra 	$L__BB6_10;

	mov.u32 	%r12632, 0;
	setp.ne.s32 	%p7, %r11, 32;
	@%p7 bra 	$L__BB6_25;

	mov.u32 	%r12632, 14;
	bra.uni 	$L__BB6_11;

$L__BB6_10:
	mov.u32 	%r12632, 12;

$L__BB6_11:
	cvt.u32.u64 	%r4934, %rd126;
	shr.u32 	%r14, %r4934, 5;
	shl.b32 	%r4935, %r12632, 2;
	add.s32 	%r15, %r4935, 4;
	setp.eq.s32 	%p8, %r14, 0;
	@%p8 bra 	$L__BB6_18;

	add.u64 	%rd9521, %SPL, 736;
	add.s64 	%rd128, %rd9521, 64;
	add.s32 	%r4937, %r14, -1;
	and.b32  	%r12637, %r14, 3;
	setp.lt.u32 	%p9, %r4937, 3;
	mov.u32 	%r12635, 0;
	@%p9 bra 	$L__BB6_15;

	sub.s32 	%r12634, %r14, %r12637;
	mov.u32 	%r12635, 0;

$L__BB6_14:
	shl.b32 	%r4939, %r12635, 2;
	cvt.s64.s32 	%rd6752, %r4939;
	add.s64 	%rd6753, %rd128, %rd6752;
	ld.local.u8 	%r4940, [%rd6753];
	ld.local.u8 	%r4941, [%rd6753+1];
	prmt.b32 	%r4942, %r4941, %r4940, 30212;
	ld.local.u8 	%r4943, [%rd6753+2];
	prmt.b32 	%r4944, %r4943, %r4942, 28756;
	ld.local.u8 	%r4945, [%rd6753+3];
	mul.wide.s32 	%rd6754, %r12635, 4;
	add.s64 	%rd6755, %rd13, %rd6754;
	prmt.b32 	%r4946, %r4945, %r4944, 1620;
	ld.local.u32 	%r4947, [%rd6753+12];
	ld.local.u32 	%r4948, [%rd6753+8];
	ld.local.u32 	%r4949, [%rd6753+4];
	st.local.v4.u32 	[%rd6755], {%r4946, %r4949, %r4948, %r4947};
	add.s32 	%r12635, %r12635, 4;
	add.s32 	%r12634, %r12634, -4;
	setp.ne.s32 	%p10, %r12634, 0;
	@%p10 bra 	$L__BB6_14;

$L__BB6_15:
	setp.eq.s32 	%p11, %r12637, 0;
	@%p11 bra 	$L__BB6_18;

	mul.wide.s32 	%rd6756, %r12635, 4;
	add.s64 	%rd9564, %rd13, %rd6756;
	shl.b32 	%r12636, %r12635, 2;

$L__BB6_17:
	.pragma "nounroll";
	cvt.s64.s32 	%rd6757, %r12636;
	add.s64 	%rd6758, %rd128, %rd6757;
	ld.local.u32 	%r4950, [%rd6758];
	st.local.u32 	[%rd9564], %r4950;
	add.s64 	%rd9564, %rd9564, 4;
	add.s32 	%r12636, %r12636, 4;
	add.s32 	%r12637, %r12637, -1;
	setp.ne.s32 	%p12, %r12637, 0;
	@%p12 bra 	$L__BB6_17;

$L__BB6_18:
	setp.ge.u32 	%p13, %r14, %r15;
	@%p13 bra 	$L__BB6_25;

	ld.local.u32 	%r12642, [%rd127];
	shr.u64 	%rd6759, %rd126, 3;
	and.b64  	%rd132, %rd6759, 536870908;
	mov.u32 	%r12639, 0;
	mov.u64 	%rd9565, %rd13;
	mov.u32 	%r12640, %r14;
	mov.u32 	%r12641, %r12639;

$L__BB6_20:
	setp.eq.s32 	%p14, %r12641, 0;
	@%p14 bra 	$L__BB6_23;

	setp.lt.u32 	%p15, %r4934, 224;
	setp.ne.s32 	%p16, %r12641, 4;
	or.pred  	%p17, %p15, %p16;
	@%p17 bra 	$L__BB6_24;

	and.b32  	%r4954, %r12642, 1431655765;
	shl.b32 	%r4955, %r12642, 1;
	and.b32  	%r4956, %r4955, -1431655766;
	or.b32  	%r4957, %r4956, %r4954;
	and.b32  	%r4958, %r12642, -1431655766;
	shr.u32 	%r4959, %r4958, 1;
	or.b32  	%r4960, %r4959, %r4958;
	and.b32  	%r4961, %r4957, 858993459;
	shl.b32 	%r4962, %r4957, 2;
	and.b32  	%r4963, %r4962, -858993460;
	or.b32  	%r4964, %r4963, %r4961;
	and.b32  	%r4965, %r4957, -858993460;
	shr.u32 	%r4966, %r4965, 2;
	or.b32  	%r4967, %r4966, %r4965;
	and.b32  	%r4968, %r4960, 858993459;
	shl.b32 	%r4969, %r4960, 2;
	and.b32  	%r4970, %r4969, -858993460;
	or.b32  	%r4971, %r4970, %r4968;
	and.b32  	%r4972, %r4960, -858993460;
	shr.u32 	%r4973, %r4972, 2;
	or.b32  	%r4974, %r4973, %r4972;
	and.b32  	%r4975, %r4964, 252645135;
	shl.b32 	%r4976, %r4964, 4;
	and.b32  	%r4977, %r4976, -252645136;
	or.b32  	%r4978, %r4977, %r4975;
	and.b32  	%r4979, %r4964, -252645136;
	shr.u32 	%r4980, %r4979, 4;
	or.b32  	%r4981, %r4980, %r4979;
	and.b32  	%r4982, %r4971, 252645135;
	shl.b32 	%r4983, %r4971, 4;
	and.b32  	%r4984, %r4983, -252645136;
	or.b32  	%r4985, %r4984, %r4982;
	and.b32  	%r4986, %r4971, -252645136;
	shr.u32 	%r4987, %r4986, 4;
	or.b32  	%r4988, %r4987, %r4986;
	and.b32  	%r4989, %r4967, 252645135;
	shl.b32 	%r4990, %r4967, 4;
	and.b32  	%r4991, %r4990, -252645136;
	or.b32  	%r4992, %r4991, %r4989;
	and.b32  	%r4993, %r4967, -252645136;
	shr.u32 	%r4994, %r4993, 4;
	or.b32  	%r4995, %r4994, %r4993;
	and.b32  	%r4996, %r4974, 252645135;
	shl.b32 	%r4997, %r4974, 4;
	and.b32  	%r4998, %r4997, -252645136;
	or.b32  	%r4999, %r4998, %r4996;
	and.b32  	%r5000, %r4974, -252645136;
	shr.u32 	%r5001, %r5000, 4;
	or.b32  	%r5002, %r5001, %r5000;
	xor.b32  	%r5003, %r4992, %r4981;
	xor.b32  	%r5004, %r4985, %r5002;
	xor.b32  	%r5005, %r4981, %r5002;
	xor.b32  	%r5006, %r4992, %r5002;
	xor.b32  	%r5007, %r4988, %r4995;
	xor.b32  	%r5008, %r4978, %r5007;
	xor.b32  	%r5009, %r5008, %r4981;
	xor.b32  	%r5010, %r5004, %r5003;
	xor.b32  	%r5011, %r5008, %r5002;
	xor.b32  	%r5012, %r5008, %r4985;
	xor.b32  	%r5013, %r5012, %r5006;
	xor.b32  	%r5014, %r5010, %r4999;
	xor.b32  	%r5015, %r5014, %r4992;
	xor.b32  	%r5016, %r5014, %r4995;
	xor.b32  	%r5017, %r5015, %r4978;
	xor.b32  	%r5018, %r5015, %r5007;
	xor.b32  	%r5019, %r5016, %r5005;
	xor.b32  	%r5020, %r5019, %r4978;
	xor.b32  	%r5021, %r5018, %r5019;
	xor.b32  	%r5022, %r5019, %r5007;
	and.b32  	%r5023, %r5015, %r5010;
	and.b32  	%r5024, %r5017, %r5013;
	and.b32  	%r5025, %r5009, %r4978;
	and.b32  	%r5026, %r5022, %r5004;
	and.b32  	%r5027, %r5012, %r5008;
	and.b32  	%r5028, %r5020, %r5011;
	and.b32  	%r5029, %r5019, %r5005;
	and.b32  	%r5030, %r5021, %r5003;
	xor.b32  	%r5031, %r5030, %r5029;
	and.b32  	%r5032, %r5018, %r5006;
	xor.b32  	%r5033, %r5032, %r5029;
	xor.b32  	%r5034, %r5023, %r5016;
	xor.b32  	%r5035, %r5034, %r5024;
	xor.b32  	%r5036, %r5035, %r5031;
	xor.b32  	%r5037, %r5025, %r5006;
	xor.b32  	%r5038, %r5037, %r5018;
	xor.b32  	%r5039, %r5038, %r5023;
	xor.b32  	%r5040, %r5039, %r5033;
	xor.b32  	%r5041, %r5027, %r5004;
	xor.b32  	%r5042, %r5041, %r5022;
	xor.b32  	%r5043, %r5042, %r5026;
	xor.b32  	%r5044, %r5043, %r5031;
	xor.b32  	%r5045, %r5022, %r5002;
	xor.b32  	%r5046, %r5045, %r5026;
	xor.b32  	%r5047, %r5046, %r5028;
	xor.b32  	%r5048, %r5047, %r5033;
	xor.b32  	%r5049, %r5036, %r5040;
	and.b32  	%r5050, %r5036, %r5044;
	xor.b32  	%r5051, %r5050, %r5048;
	and.b32  	%r5052, %r5051, %r5049;
	xor.b32  	%r5053, %r5052, %r5040;
	xor.b32  	%r5054, %r5044, %r5048;
	xor.b32  	%r5055, %r5050, %r5040;
	and.b32  	%r5056, %r5055, %r5054;
	xor.b32  	%r5057, %r5056, %r5048;
	xor.b32  	%r5058, %r5057, %r5044;
	xor.b32  	%r5059, %r5056, %r5050;
	and.b32  	%r5060, %r5059, %r5048;
	xor.b32  	%r5061, %r5058, %r5060;
	xor.b32  	%r5062, %r5060, %r5051;
	and.b32  	%r5063, %r5062, %r5053;
	xor.b32  	%r5064, %r5063, %r5049;
	xor.b32  	%r5065, %r5064, %r5061;
	xor.b32  	%r5066, %r5053, %r5057;
	xor.b32  	%r5067, %r5064, %r5053;
	xor.b32  	%r5068, %r5060, %r5044;
	xor.b32  	%r5069, %r5065, %r5066;
	and.b32  	%r5070, %r5068, %r5015;
	and.b32  	%r5071, %r5061, %r5017;
	and.b32  	%r5072, %r5057, %r4978;
	and.b32  	%r5073, %r5067, %r5022;
	and.b32  	%r5074, %r5064, %r5008;
	and.b32  	%r5075, %r5053, %r5020;
	and.b32  	%r5076, %r5066, %r5019;
	and.b32  	%r5077, %r5069, %r5021;
	and.b32  	%r5078, %r5065, %r5018;
	and.b32  	%r5079, %r5068, %r5010;
	and.b32  	%r5080, %r5061, %r5013;
	and.b32  	%r5081, %r5057, %r5009;
	and.b32  	%r5082, %r5067, %r5004;
	and.b32  	%r5083, %r5064, %r5012;
	and.b32  	%r5084, %r5053, %r5011;
	and.b32  	%r5085, %r5066, %r5005;
	and.b32  	%r5086, %r5069, %r5003;
	and.b32  	%r5087, %r5065, %r5006;
	xor.b32  	%r5088, %r5086, %r5085;
	xor.b32  	%r5089, %r5080, %r5081;
	xor.b32  	%r5090, %r5083, %r5075;
	xor.b32  	%r5091, %r5079, %r5080;
	xor.b32  	%r5092, %r5082, %r5072;
	xor.b32  	%r5093, %r5072, %r5075;
	xor.b32  	%r5094, %r5077, %r5078;
	xor.b32  	%r5095, %r5073, %r5070;
	xor.b32  	%r5096, %r5092, %r5095;
	xor.b32  	%r5097, %r5088, %r5074;
	xor.b32  	%r5098, %r5073, %r5076;
	xor.b32  	%r5099, %r5098, %r5077;
	xor.b32  	%r5100, %r5096, %r5084;
	xor.b32  	%r5101, %r5094, %r5097;
	xor.b32  	%r5102, %r5091, %r5097;
	xor.b32  	%r5103, %r5099, %r5074;
	xor.b32  	%r5104, %r5100, %r5101;
	xor.b32  	%r5105, %r5102, %r5071;
	xor.b32  	%r5106, %r5102, %r5099;
	xor.b32  	%r5107, %r5090, 16843009;
	xor.b32  	%r5108, %r5082, %r5107;
	xor.b32  	%r5109, %r5108, %r5101;
	xor.b32  	%r5110, %r5096, %r5107;
	xor.b32  	%r5111, %r5110, %r5088;
	xor.b32  	%r5112, %r5105, %r5095;
	xor.b32  	%r5113, %r5093, %r5105;
	xor.b32  	%r5114, %r5089, %r5104;
	xor.b32  	%r5115, %r5112, %r5103;
	not.b32 	%r5116, %r5115;
	xor.b32  	%r5117, %r5086, %r5087;
	xor.b32  	%r5118, %r5117, %r5103;
	xor.b32  	%r5119, %r5118, %r5104;
	and.b32  	%r5120, %r5111, 16843009;
	shl.b32 	%r5121, %r5109, 1;
	and.b32  	%r5122, %r5121, 33686018;
	or.b32  	%r5123, %r5122, %r5120;
	and.b32  	%r5124, %r5114, 16843009;
	shl.b32 	%r5125, %r5113, 1;
	and.b32  	%r5126, %r5125, 33686018;
	or.b32  	%r5127, %r5126, %r5124;
	and.b32  	%r5128, %r5112, 16843009;
	shl.b32 	%r5129, %r5119, 1;
	not.b32 	%r5130, %r5129;
	and.b32  	%r5131, %r5130, 33686018;
	or.b32  	%r5132, %r5131, %r5128;
	and.b32  	%r5133, %r5116, 16843009;
	shl.b32 	%r5134, %r5106, 1;
	and.b32  	%r5135, %r5134, 33686018;
	or.b32  	%r5136, %r5135, %r5133;
	shl.b32 	%r5137, %r5127, 2;
	or.b32  	%r5138, %r5137, %r5123;
	shl.b32 	%r5139, %r5136, 2;
	or.b32  	%r5140, %r5139, %r5132;
	shl.b32 	%r5141, %r5140, 4;
	or.b32  	%r12642, %r5141, %r5138;
	bra.uni 	$L__BB6_24;

$L__BB6_23:
	shf.l.wrap.b32 	%r5142, %r12642, %r12642, 24;
	and.b32  	%r5143, %r5142, 1431655765;
	shl.b32 	%r5144, %r5142, 1;
	and.b32  	%r5145, %r5144, -1431655766;
	or.b32  	%r5146, %r5145, %r5143;
	and.b32  	%r5147, %r5142, -1431655766;
	shr.u32 	%r5148, %r5147, 1;
	or.b32  	%r5149, %r5148, %r5147;
	and.b32  	%r5150, %r5146, 858993459;
	shl.b32 	%r5151, %r5146, 2;
	and.b32  	%r5152, %r5151, -858993460;
	or.b32  	%r5153, %r5152, %r5150;
	and.b32  	%r5154, %r5146, -858993460;
	shr.u32 	%r5155, %r5154, 2;
	or.b32  	%r5156, %r5155, %r5154;
	and.b32  	%r5157, %r5149, 858993459;
	shl.b32 	%r5158, %r5149, 2;
	and.b32  	%r5159, %r5158, -858993460;
	or.b32  	%r5160, %r5159, %r5157;
	and.b32  	%r5161, %r5149, -858993460;
	shr.u32 	%r5162, %r5161, 2;
	or.b32  	%r5163, %r5162, %r5161;
	and.b32  	%r5164, %r5153, 252645135;
	shl.b32 	%r5165, %r5153, 4;
	and.b32  	%r5166, %r5165, -252645136;
	or.b32  	%r5167, %r5166, %r5164;
	and.b32  	%r5168, %r5153, -252645136;
	shr.u32 	%r5169, %r5168, 4;
	or.b32  	%r5170, %r5169, %r5168;
	and.b32  	%r5171, %r5160, 252645135;
	shl.b32 	%r5172, %r5160, 4;
	and.b32  	%r5173, %r5172, -252645136;
	or.b32  	%r5174, %r5173, %r5171;
	and.b32  	%r5175, %r5160, -252645136;
	shr.u32 	%r5176, %r5175, 4;
	or.b32  	%r5177, %r5176, %r5175;
	and.b32  	%r5178, %r5156, 252645135;
	shl.b32 	%r5179, %r5156, 4;
	and.b32  	%r5180, %r5179, -252645136;
	or.b32  	%r5181, %r5180, %r5178;
	and.b32  	%r5182, %r5156, -252645136;
	shr.u32 	%r5183, %r5182, 4;
	or.b32  	%r5184, %r5183, %r5182;
	and.b32  	%r5185, %r5163, 252645135;
	shl.b32 	%r5186, %r5163, 4;
	and.b32  	%r5187, %r5186, -252645136;
	or.b32  	%r5188, %r5187, %r5185;
	and.b32  	%r5189, %r5163, -252645136;
	shr.u32 	%r5190, %r5189, 4;
	or.b32  	%r5191, %r5190, %r5189;
	xor.b32  	%r5192, %r5181, %r5170;
	xor.b32  	%r5193, %r5174, %r5191;
	xor.b32  	%r5194, %r5170, %r5191;
	xor.b32  	%r5195, %r5181, %r5191;
	xor.b32  	%r5196, %r5177, %r5184;
	xor.b32  	%r5197, %r5167, %r5196;
	xor.b32  	%r5198, %r5197, %r5170;
	xor.b32  	%r5199, %r5193, %r5192;
	xor.b32  	%r5200, %r5197, %r5191;
	xor.b32  	%r5201, %r5197, %r5174;
	xor.b32  	%r5202, %r5201, %r5195;
	xor.b32  	%r5203, %r5199, %r5188;
	xor.b32  	%r5204, %r5203, %r5181;
	xor.b32  	%r5205, %r5203, %r5184;
	xor.b32  	%r5206, %r5204, %r5167;
	xor.b32  	%r5207, %r5204, %r5196;
	xor.b32  	%r5208, %r5205, %r5194;
	xor.b32  	%r5209, %r5208, %r5167;
	xor.b32  	%r5210, %r5207, %r5208;
	xor.b32  	%r5211, %r5208, %r5196;
	and.b32  	%r5212, %r5204, %r5199;
	and.b32  	%r5213, %r5206, %r5202;
	and.b32  	%r5214, %r5198, %r5167;
	and.b32  	%r5215, %r5211, %r5193;
	and.b32  	%r5216, %r5201, %r5197;
	and.b32  	%r5217, %r5209, %r5200;
	and.b32  	%r5218, %r5208, %r5194;
	and.b32  	%r5219, %r5210, %r5192;
	xor.b32  	%r5220, %r5219, %r5218;
	and.b32  	%r5221, %r5207, %r5195;
	xor.b32  	%r5222, %r5221, %r5218;
	xor.b32  	%r5223, %r5212, %r5205;
	xor.b32  	%r5224, %r5223, %r5213;
	xor.b32  	%r5225, %r5224, %r5220;
	xor.b32  	%r5226, %r5214, %r5195;
	xor.b32  	%r5227, %r5226, %r5207;
	xor.b32  	%r5228, %r5227, %r5212;
	xor.b32  	%r5229, %r5228, %r5222;
	xor.b32  	%r5230, %r5216, %r5193;
	xor.b32  	%r5231, %r5230, %r5211;
	xor.b32  	%r5232, %r5231, %r5215;
	xor.b32  	%r5233, %r5232, %r5220;
	xor.b32  	%r5234, %r5211, %r5191;
	xor.b32  	%r5235, %r5234, %r5215;
	xor.b32  	%r5236, %r5235, %r5217;
	xor.b32  	%r5237, %r5236, %r5222;
	xor.b32  	%r5238, %r5225, %r5229;
	and.b32  	%r5239, %r5225, %r5233;
	xor.b32  	%r5240, %r5239, %r5237;
	and.b32  	%r5241, %r5240, %r5238;
	xor.b32  	%r5242, %r5241, %r5229;
	xor.b32  	%r5243, %r5233, %r5237;
	xor.b32  	%r5244, %r5239, %r5229;
	and.b32  	%r5245, %r5244, %r5243;
	xor.b32  	%r5246, %r5245, %r5237;
	xor.b32  	%r5247, %r5246, %r5233;
	xor.b32  	%r5248, %r5245, %r5239;
	and.b32  	%r5249, %r5248, %r5237;
	xor.b32  	%r5250, %r5247, %r5249;
	xor.b32  	%r5251, %r5249, %r5240;
	and.b32  	%r5252, %r5251, %r5242;
	xor.b32  	%r5253, %r5252, %r5238;
	xor.b32  	%r5254, %r5253, %r5250;
	xor.b32  	%r5255, %r5242, %r5246;
	xor.b32  	%r5256, %r5253, %r5242;
	xor.b32  	%r5257, %r5249, %r5233;
	xor.b32  	%r5258, %r5254, %r5255;
	and.b32  	%r5259, %r5257, %r5204;
	and.b32  	%r5260, %r5250, %r5206;
	and.b32  	%r5261, %r5246, %r5167;
	and.b32  	%r5262, %r5256, %r5211;
	and.b32  	%r5263, %r5253, %r5197;
	and.b32  	%r5264, %r5242, %r5209;
	and.b32  	%r5265, %r5255, %r5208;
	and.b32  	%r5266, %r5258, %r5210;
	and.b32  	%r5267, %r5254, %r5207;
	and.b32  	%r5268, %r5257, %r5199;
	and.b32  	%r5269, %r5250, %r5202;
	and.b32  	%r5270, %r5246, %r5198;
	and.b32  	%r5271, %r5256, %r5193;
	and.b32  	%r5272, %r5253, %r5201;
	and.b32  	%r5273, %r5242, %r5200;
	and.b32  	%r5274, %r5255, %r5194;
	and.b32  	%r5275, %r5258, %r5192;
	and.b32  	%r5276, %r5254, %r5195;
	xor.b32  	%r5277, %r5275, %r5274;
	xor.b32  	%r5278, %r5269, %r5270;
	xor.b32  	%r5279, %r5272, %r5264;
	xor.b32  	%r5280, %r5268, %r5269;
	xor.b32  	%r5281, %r5271, %r5261;
	xor.b32  	%r5282, %r5261, %r5264;
	xor.b32  	%r5283, %r5266, %r5267;
	xor.b32  	%r5284, %r5262, %r5259;
	xor.b32  	%r5285, %r5281, %r5284;
	xor.b32  	%r5286, %r5277, %r5263;
	xor.b32  	%r5287, %r5262, %r5265;
	xor.b32  	%r5288, %r5287, %r5266;
	xor.b32  	%r5289, %r5285, %r5273;
	xor.b32  	%r5290, %r5283, %r5286;
	xor.b32  	%r5291, %r5280, %r5286;
	xor.b32  	%r5292, %r5288, %r5263;
	xor.b32  	%r5293, %r5289, %r5290;
	xor.b32  	%r5294, %r5291, %r5260;
	xor.b32  	%r5295, %r5291, %r5288;
	xor.b32  	%r5296, %r5279, 16843009;
	xor.b32  	%r5297, %r5271, %r5296;
	xor.b32  	%r5298, %r5297, %r5290;
	xor.b32  	%r5299, %r5285, %r5296;
	xor.b32  	%r5300, %r5299, %r5277;
	xor.b32  	%r5301, %r5294, %r5284;
	xor.b32  	%r5302, %r5282, %r5294;
	xor.b32  	%r5303, %r5278, %r5293;
	xor.b32  	%r5304, %r5301, %r5292;
	not.b32 	%r5305, %r5304;
	xor.b32  	%r5306, %r5275, %r5276;
	xor.b32  	%r5307, %r5306, %r5292;
	xor.b32  	%r5308, %r5307, %r5293;
	and.b32  	%r5309, %r5300, 16843009;
	shl.b32 	%r5310, %r5298, 1;
	and.b32  	%r5311, %r5310, 33686018;
	or.b32  	%r5312, %r5311, %r5309;
	and.b32  	%r5313, %r5303, 16843009;
	shl.b32 	%r5314, %r5302, 1;
	and.b32  	%r5315, %r5314, 33686018;
	or.b32  	%r5316, %r5315, %r5313;
	and.b32  	%r5317, %r5301, 16843009;
	shl.b32 	%r5318, %r5308, 1;
	not.b32 	%r5319, %r5318;
	and.b32  	%r5320, %r5319, 33686018;
	or.b32  	%r5321, %r5320, %r5317;
	and.b32  	%r5322, %r5305, 16843009;
	shl.b32 	%r5323, %r5295, 1;
	and.b32  	%r5324, %r5323, 33686018;
	or.b32  	%r5325, %r5324, %r5322;
	shl.b32 	%r5326, %r5316, 2;
	or.b32  	%r5327, %r5326, %r5312;
	shl.b32 	%r5328, %r5325, 2;
	or.b32  	%r5329, %r5328, %r5321;
	shl.b32 	%r5330, %r5329, 4;
	or.b32  	%r5331, %r5330, %r5327;
	cvt.s64.s32 	%rd6760, %r12639;
	mov.u64 	%rd6761, aes_keysched_base_$_Rcon;
	add.s64 	%rd6762, %rd6761, %rd6760;
	ld.const.u8 	%r5332, [%rd6762];
	xor.b32  	%r12642, %r5331, %r5332;

$L__BB6_24:
	ld.local.u32 	%r5333, [%rd9565];
	xor.b32  	%r12642, %r5333, %r12642;
	add.s64 	%rd6763, %rd9565, %rd132;
	st.local.u32 	[%rd6763], %r12642;
	add.s32 	%r5334, %r12641, 1;
	setp.eq.s32 	%p18, %r5334, %r14;
	selp.b32 	%r12641, 0, %r5334, %p18;
	selp.u32 	%r5335, 1, 0, %p18;
	add.s32 	%r12639, %r12639, %r5335;
	add.s64 	%rd9565, %rd9565, 4;
	add.s32 	%r12640, %r12640, 1;
	setp.lt.u32 	%p19, %r12640, %r15;
	@%p19 bra 	$L__BB6_20;

$L__BB6_25:
	ld.local.v4.u32 	{%r5336, %r5337, %r5338, %r5339}, [%rd13];
	and.b32  	%r5344, %r5336, 1431655765;
	shl.b32 	%r5345, %r5336, 1;
	and.b32  	%r5346, %r5345, -1431655766;
	or.b32  	%r5347, %r5346, %r5344;
	and.b32  	%r5348, %r5336, -1431655766;
	shr.u32 	%r5349, %r5348, 1;
	or.b32  	%r5350, %r5349, %r5348;
	and.b32  	%r5351, %r5337, 1431655765;
	shl.b32 	%r5352, %r5337, 1;
	and.b32  	%r5353, %r5352, -1431655766;
	or.b32  	%r5354, %r5353, %r5351;
	and.b32  	%r5355, %r5337, -1431655766;
	shr.u32 	%r5356, %r5355, 1;
	or.b32  	%r5357, %r5356, %r5355;
	and.b32  	%r5358, %r5338, 1431655765;
	shl.b32 	%r5359, %r5338, 1;
	and.b32  	%r5360, %r5359, -1431655766;
	or.b32  	%r5361, %r5360, %r5358;
	and.b32  	%r5362, %r5338, -1431655766;
	shr.u32 	%r5363, %r5362, 1;
	or.b32  	%r5364, %r5363, %r5362;
	and.b32  	%r5365, %r5339, 1431655765;
	shl.b32 	%r5366, %r5339, 1;
	and.b32  	%r5367, %r5366, -1431655766;
	or.b32  	%r5368, %r5367, %r5365;
	and.b32  	%r5369, %r5339, -1431655766;
	shr.u32 	%r5370, %r5369, 1;
	or.b32  	%r5371, %r5370, %r5369;
	and.b32  	%r5372, %r5347, 858993459;
	shl.b32 	%r5373, %r5354, 2;
	and.b32  	%r5374, %r5373, -858993460;
	or.b32  	%r5375, %r5374, %r5372;
	and.b32  	%r5376, %r5347, -858993460;
	shr.u32 	%r5377, %r5376, 2;
	and.b32  	%r5378, %r5354, -858993460;
	or.b32  	%r5379, %r5377, %r5378;
	and.b32  	%r5380, %r5350, 858993459;
	shl.b32 	%r5381, %r5357, 2;
	and.b32  	%r5382, %r5381, -858993460;
	or.b32  	%r5383, %r5382, %r5380;
	and.b32  	%r5384, %r5350, -858993460;
	shr.u32 	%r5385, %r5384, 2;
	and.b32  	%r5386, %r5357, -858993460;
	or.b32  	%r5387, %r5385, %r5386;
	and.b32  	%r5388, %r5361, 858993459;
	shl.b32 	%r5389, %r5368, 2;
	and.b32  	%r5390, %r5389, -858993460;
	or.b32  	%r5391, %r5390, %r5388;
	and.b32  	%r5392, %r5361, -858993460;
	shr.u32 	%r5393, %r5392, 2;
	and.b32  	%r5394, %r5368, -858993460;
	or.b32  	%r5395, %r5393, %r5394;
	and.b32  	%r5396, %r5364, 858993459;
	shl.b32 	%r5397, %r5371, 2;
	and.b32  	%r5398, %r5397, -858993460;
	or.b32  	%r5399, %r5398, %r5396;
	and.b32  	%r5400, %r5364, -858993460;
	shr.u32 	%r5401, %r5400, 2;
	and.b32  	%r5402, %r5371, -858993460;
	or.b32  	%r5403, %r5401, %r5402;
	and.b32  	%r5404, %r5375, 84215045;
	shl.b32 	%r5405, %r5391, 4;
	and.b32  	%r5406, %r5405, 1347440720;
	and.b32  	%r5407, %r5375, 1347440720;
	and.b32  	%r5408, %r5391, 1347440720;
	and.b32  	%r5409, %r5383, 168430090;
	shl.b32 	%r5410, %r5399, 4;
	and.b32  	%r5411, %r5410, -1600085856;
	and.b32  	%r5412, %r5383, -1600085856;
	and.b32  	%r5413, %r5399, -1600085856;
	and.b32  	%r5414, %r5379, 84215045;
	shl.b32 	%r5415, %r5395, 4;
	and.b32  	%r5416, %r5415, 1347440720;
	and.b32  	%r5417, %r5379, 1347440720;
	and.b32  	%r5418, %r5395, 1347440720;
	and.b32  	%r5419, %r5387, 168430090;
	shl.b32 	%r5420, %r5403, 4;
	and.b32  	%r5421, %r5420, -1600085856;
	and.b32  	%r5422, %r5387, -1600085856;
	and.b32  	%r5423, %r5403, -1600085856;
	or.b32  	%r5424, %r5409, %r5404;
	or.b32  	%r5425, %r5424, %r5406;
	or.b32  	%r5426, %r5425, %r5411;
	st.local.u32 	[%rd12], %r5426;
	or.b32  	%r5427, %r5419, %r5414;
	or.b32  	%r5428, %r5427, %r5416;
	or.b32  	%r5429, %r5428, %r5421;
	st.local.u32 	[%rd12+4], %r5429;
	or.b32  	%r5430, %r5412, %r5407;
	shr.u32 	%r5431, %r5430, 4;
	or.b32  	%r5432, %r5431, %r5408;
	or.b32  	%r5433, %r5432, %r5413;
	st.local.u32 	[%rd12+8], %r5433;
	or.b32  	%r5434, %r5422, %r5417;
	shr.u32 	%r5435, %r5434, 4;
	or.b32  	%r5436, %r5435, %r5418;
	or.b32  	%r5437, %r5436, %r5423;
	st.local.u32 	[%rd12+12], %r5437;
	setp.eq.s32 	%p20, %r12632, 0;
	@%p20 bra 	$L__BB6_33;

	ld.local.v4.u32 	{%r5438, %r5439, %r5440, %r5441}, [%rd13+16];
	and.b32  	%r5446, %r5438, 1431655765;
	shl.b32 	%r5447, %r5438, 1;
	and.b32  	%r5448, %r5447, -1431655766;
	or.b32  	%r5449, %r5448, %r5446;
	and.b32  	%r5450, %r5438, -1431655766;
	shr.u32 	%r5451, %r5450, 1;
	or.b32  	%r5452, %r5451, %r5450;
	and.b32  	%r5453, %r5439, 1431655765;
	shl.b32 	%r5454, %r5439, 1;
	and.b32  	%r5455, %r5454, -1431655766;
	or.b32  	%r5456, %r5455, %r5453;
	and.b32  	%r5457, %r5439, -1431655766;
	shr.u32 	%r5458, %r5457, 1;
	or.b32  	%r5459, %r5458, %r5457;
	and.b32  	%r5460, %r5440, 1431655765;
	shl.b32 	%r5461, %r5440, 1;
	and.b32  	%r5462, %r5461, -1431655766;
	or.b32  	%r5463, %r5462, %r5460;
	and.b32  	%r5464, %r5440, -1431655766;
	shr.u32 	%r5465, %r5464, 1;
	or.b32  	%r5466, %r5465, %r5464;
	and.b32  	%r5467, %r5441, 1431655765;
	shl.b32 	%r5468, %r5441, 1;
	and.b32  	%r5469, %r5468, -1431655766;
	or.b32  	%r5470, %r5469, %r5467;
	and.b32  	%r5471, %r5441, -1431655766;
	shr.u32 	%r5472, %r5471, 1;
	or.b32  	%r5473, %r5472, %r5471;
	and.b32  	%r5474, %r5449, 858993459;
	shl.b32 	%r5475, %r5456, 2;
	and.b32  	%r5476, %r5475, -858993460;
	or.b32  	%r5477, %r5476, %r5474;
	and.b32  	%r5478, %r5449, -858993460;
	shr.u32 	%r5479, %r5478, 2;
	and.b32  	%r5480, %r5456, -858993460;
	or.b32  	%r5481, %r5479, %r5480;
	and.b32  	%r5482, %r5452, 858993459;
	shl.b32 	%r5483, %r5459, 2;
	and.b32  	%r5484, %r5483, -858993460;
	or.b32  	%r5485, %r5484, %r5482;
	and.b32  	%r5486, %r5452, -858993460;
	shr.u32 	%r5487, %r5486, 2;
	and.b32  	%r5488, %r5459, -858993460;
	or.b32  	%r5489, %r5487, %r5488;
	and.b32  	%r5490, %r5463, 858993459;
	shl.b32 	%r5491, %r5470, 2;
	and.b32  	%r5492, %r5491, -858993460;
	or.b32  	%r5493, %r5492, %r5490;
	and.b32  	%r5494, %r5463, -858993460;
	shr.u32 	%r5495, %r5494, 2;
	and.b32  	%r5496, %r5470, -858993460;
	or.b32  	%r5497, %r5495, %r5496;
	and.b32  	%r5498, %r5466, 858993459;
	shl.b32 	%r5499, %r5473, 2;
	and.b32  	%r5500, %r5499, -858993460;
	or.b32  	%r5501, %r5500, %r5498;
	and.b32  	%r5502, %r5466, -858993460;
	shr.u32 	%r5503, %r5502, 2;
	and.b32  	%r5504, %r5473, -858993460;
	or.b32  	%r5505, %r5503, %r5504;
	and.b32  	%r5506, %r5477, 84215045;
	shl.b32 	%r5507, %r5493, 4;
	and.b32  	%r5508, %r5507, 1347440720;
	and.b32  	%r5509, %r5477, 1347440720;
	and.b32  	%r5510, %r5493, 1347440720;
	and.b32  	%r5511, %r5485, 168430090;
	shl.b32 	%r5512, %r5501, 4;
	and.b32  	%r5513, %r5512, -1600085856;
	and.b32  	%r5514, %r5485, -1600085856;
	and.b32  	%r5515, %r5501, -1600085856;
	and.b32  	%r5516, %r5481, 84215045;
	shl.b32 	%r5517, %r5497, 4;
	and.b32  	%r5518, %r5517, 1347440720;
	and.b32  	%r5519, %r5481, 1347440720;
	and.b32  	%r5520, %r5497, 1347440720;
	and.b32  	%r5521, %r5489, 168430090;
	shl.b32 	%r5522, %r5505, 4;
	and.b32  	%r5523, %r5522, -1600085856;
	and.b32  	%r5524, %r5489, -1600085856;
	and.b32  	%r5525, %r5505, -1600085856;
	or.b32  	%r5526, %r5511, %r5506;
	or.b32  	%r5527, %r5526, %r5508;
	or.b32  	%r5528, %r5527, %r5513;
	st.local.u32 	[%rd12+16], %r5528;
	or.b32  	%r5529, %r5521, %r5516;
	or.b32  	%r5530, %r5529, %r5518;
	or.b32  	%r5531, %r5530, %r5523;
	st.local.u32 	[%rd12+20], %r5531;
	or.b32  	%r5532, %r5514, %r5509;
	shr.u32 	%r5533, %r5532, 4;
	or.b32  	%r5534, %r5533, %r5510;
	or.b32  	%r5535, %r5534, %r5515;
	st.local.u32 	[%rd12+24], %r5535;
	or.b32  	%r5536, %r5524, %r5519;
	shr.u32 	%r5537, %r5536, 4;
	or.b32  	%r5538, %r5537, %r5520;
	or.b32  	%r5539, %r5538, %r5525;
	st.local.u32 	[%rd12+28], %r5539;
	ld.local.v4.u32 	{%r5540, %r5541, %r5542, %r5543}, [%rd13+32];
	and.b32  	%r5548, %r5540, 1431655765;
	shl.b32 	%r5549, %r5540, 1;
	and.b32  	%r5550, %r5549, -1431655766;
	or.b32  	%r5551, %r5550, %r5548;
	and.b32  	%r5552, %r5540, -1431655766;
	shr.u32 	%r5553, %r5552, 1;
	or.b32  	%r5554, %r5553, %r5552;
	and.b32  	%r5555, %r5541, 1431655765;
	shl.b32 	%r5556, %r5541, 1;
	and.b32  	%r5557, %r5556, -1431655766;
	or.b32  	%r5558, %r5557, %r5555;
	and.b32  	%r5559, %r5541, -1431655766;
	shr.u32 	%r5560, %r5559, 1;
	or.b32  	%r5561, %r5560, %r5559;
	and.b32  	%r5562, %r5542, 1431655765;
	shl.b32 	%r5563, %r5542, 1;
	and.b32  	%r5564, %r5563, -1431655766;
	or.b32  	%r5565, %r5564, %r5562;
	and.b32  	%r5566, %r5542, -1431655766;
	shr.u32 	%r5567, %r5566, 1;
	or.b32  	%r5568, %r5567, %r5566;
	and.b32  	%r5569, %r5543, 1431655765;
	shl.b32 	%r5570, %r5543, 1;
	and.b32  	%r5571, %r5570, -1431655766;
	or.b32  	%r5572, %r5571, %r5569;
	and.b32  	%r5573, %r5543, -1431655766;
	shr.u32 	%r5574, %r5573, 1;
	or.b32  	%r5575, %r5574, %r5573;
	and.b32  	%r5576, %r5551, 858993459;
	shl.b32 	%r5577, %r5558, 2;
	and.b32  	%r5578, %r5577, -858993460;
	or.b32  	%r5579, %r5578, %r5576;
	and.b32  	%r5580, %r5551, -858993460;
	shr.u32 	%r5581, %r5580, 2;
	and.b32  	%r5582, %r5558, -858993460;
	or.b32  	%r5583, %r5581, %r5582;
	and.b32  	%r5584, %r5554, 858993459;
	shl.b32 	%r5585, %r5561, 2;
	and.b32  	%r5586, %r5585, -858993460;
	or.b32  	%r5587, %r5586, %r5584;
	and.b32  	%r5588, %r5554, -858993460;
	shr.u32 	%r5589, %r5588, 2;
	and.b32  	%r5590, %r5561, -858993460;
	or.b32  	%r5591, %r5589, %r5590;
	and.b32  	%r5592, %r5565, 858993459;
	shl.b32 	%r5593, %r5572, 2;
	and.b32  	%r5594, %r5593, -858993460;
	or.b32  	%r5595, %r5594, %r5592;
	and.b32  	%r5596, %r5565, -858993460;
	shr.u32 	%r5597, %r5596, 2;
	and.b32  	%r5598, %r5572, -858993460;
	or.b32  	%r5599, %r5597, %r5598;
	and.b32  	%r5600, %r5568, 858993459;
	shl.b32 	%r5601, %r5575, 2;
	and.b32  	%r5602, %r5601, -858993460;
	or.b32  	%r5603, %r5602, %r5600;
	and.b32  	%r5604, %r5568, -858993460;
	shr.u32 	%r5605, %r5604, 2;
	and.b32  	%r5606, %r5575, -858993460;
	or.b32  	%r5607, %r5605, %r5606;
	and.b32  	%r5608, %r5579, 84215045;
	shl.b32 	%r5609, %r5595, 4;
	and.b32  	%r5610, %r5609, 1347440720;
	and.b32  	%r5611, %r5579, 1347440720;
	and.b32  	%r5612, %r5595, 1347440720;
	and.b32  	%r5613, %r5587, 168430090;
	shl.b32 	%r5614, %r5603, 4;
	and.b32  	%r5615, %r5614, -1600085856;
	and.b32  	%r5616, %r5587, -1600085856;
	and.b32  	%r5617, %r5603, -1600085856;
	and.b32  	%r5618, %r5583, 84215045;
	shl.b32 	%r5619, %r5599, 4;
	and.b32  	%r5620, %r5619, 1347440720;
	and.b32  	%r5621, %r5583, 1347440720;
	and.b32  	%r5622, %r5599, 1347440720;
	and.b32  	%r5623, %r5591, 168430090;
	shl.b32 	%r5624, %r5607, 4;
	and.b32  	%r5625, %r5624, -1600085856;
	and.b32  	%r5626, %r5591, -1600085856;
	and.b32  	%r5627, %r5607, -1600085856;
	or.b32  	%r5628, %r5613, %r5608;
	or.b32  	%r5629, %r5628, %r5610;
	or.b32  	%r5630, %r5629, %r5615;
	st.local.u32 	[%rd12+32], %r5630;
	or.b32  	%r5631, %r5623, %r5618;
	or.b32  	%r5632, %r5631, %r5620;
	or.b32  	%r5633, %r5632, %r5625;
	st.local.u32 	[%rd12+36], %r5633;
	or.b32  	%r5634, %r5616, %r5611;
	shr.u32 	%r5635, %r5634, 4;
	or.b32  	%r5636, %r5635, %r5612;
	or.b32  	%r5637, %r5636, %r5617;
	st.local.u32 	[%rd12+40], %r5637;
	or.b32  	%r5638, %r5626, %r5621;
	shr.u32 	%r5639, %r5638, 4;
	or.b32  	%r5640, %r5639, %r5622;
	or.b32  	%r5641, %r5640, %r5627;
	st.local.u32 	[%rd12+44], %r5641;
	setp.lt.u32 	%p21, %r12632, 3;
	@%p21 bra 	$L__BB6_33;

	ld.local.v4.u32 	{%r5642, %r5643, %r5644, %r5645}, [%rd13+48];
	and.b32  	%r5650, %r5642, 1431655765;
	shl.b32 	%r5651, %r5642, 1;
	and.b32  	%r5652, %r5651, -1431655766;
	or.b32  	%r5653, %r5652, %r5650;
	and.b32  	%r5654, %r5642, -1431655766;
	shr.u32 	%r5655, %r5654, 1;
	or.b32  	%r5656, %r5655, %r5654;
	and.b32  	%r5657, %r5643, 1431655765;
	shl.b32 	%r5658, %r5643, 1;
	and.b32  	%r5659, %r5658, -1431655766;
	or.b32  	%r5660, %r5659, %r5657;
	and.b32  	%r5661, %r5643, -1431655766;
	shr.u32 	%r5662, %r5661, 1;
	or.b32  	%r5663, %r5662, %r5661;
	and.b32  	%r5664, %r5644, 1431655765;
	shl.b32 	%r5665, %r5644, 1;
	and.b32  	%r5666, %r5665, -1431655766;
	or.b32  	%r5667, %r5666, %r5664;
	and.b32  	%r5668, %r5644, -1431655766;
	shr.u32 	%r5669, %r5668, 1;
	or.b32  	%r5670, %r5669, %r5668;
	and.b32  	%r5671, %r5645, 1431655765;
	shl.b32 	%r5672, %r5645, 1;
	and.b32  	%r5673, %r5672, -1431655766;
	or.b32  	%r5674, %r5673, %r5671;
	and.b32  	%r5675, %r5645, -1431655766;
	shr.u32 	%r5676, %r5675, 1;
	or.b32  	%r5677, %r5676, %r5675;
	and.b32  	%r5678, %r5653, 858993459;
	shl.b32 	%r5679, %r5660, 2;
	and.b32  	%r5680, %r5679, -858993460;
	or.b32  	%r5681, %r5680, %r5678;
	and.b32  	%r5682, %r5653, -858993460;
	shr.u32 	%r5683, %r5682, 2;
	and.b32  	%r5684, %r5660, -858993460;
	or.b32  	%r5685, %r5683, %r5684;
	and.b32  	%r5686, %r5656, 858993459;
	shl.b32 	%r5687, %r5663, 2;
	and.b32  	%r5688, %r5687, -858993460;
	or.b32  	%r5689, %r5688, %r5686;
	and.b32  	%r5690, %r5656, -858993460;
	shr.u32 	%r5691, %r5690, 2;
	and.b32  	%r5692, %r5663, -858993460;
	or.b32  	%r5693, %r5691, %r5692;
	and.b32  	%r5694, %r5667, 858993459;
	shl.b32 	%r5695, %r5674, 2;
	and.b32  	%r5696, %r5695, -858993460;
	or.b32  	%r5697, %r5696, %r5694;
	and.b32  	%r5698, %r5667, -858993460;
	shr.u32 	%r5699, %r5698, 2;
	and.b32  	%r5700, %r5674, -858993460;
	or.b32  	%r5701, %r5699, %r5700;
	and.b32  	%r5702, %r5670, 858993459;
	shl.b32 	%r5703, %r5677, 2;
	and.b32  	%r5704, %r5703, -858993460;
	or.b32  	%r5705, %r5704, %r5702;
	and.b32  	%r5706, %r5670, -858993460;
	shr.u32 	%r5707, %r5706, 2;
	and.b32  	%r5708, %r5677, -858993460;
	or.b32  	%r5709, %r5707, %r5708;
	and.b32  	%r5710, %r5681, 84215045;
	shl.b32 	%r5711, %r5697, 4;
	and.b32  	%r5712, %r5711, 1347440720;
	and.b32  	%r5713, %r5681, 1347440720;
	and.b32  	%r5714, %r5697, 1347440720;
	and.b32  	%r5715, %r5689, 168430090;
	shl.b32 	%r5716, %r5705, 4;
	and.b32  	%r5717, %r5716, -1600085856;
	and.b32  	%r5718, %r5689, -1600085856;
	and.b32  	%r5719, %r5705, -1600085856;
	and.b32  	%r5720, %r5685, 84215045;
	shl.b32 	%r5721, %r5701, 4;
	and.b32  	%r5722, %r5721, 1347440720;
	and.b32  	%r5723, %r5685, 1347440720;
	and.b32  	%r5724, %r5701, 1347440720;
	and.b32  	%r5725, %r5693, 168430090;
	shl.b32 	%r5726, %r5709, 4;
	and.b32  	%r5727, %r5726, -1600085856;
	and.b32  	%r5728, %r5693, -1600085856;
	and.b32  	%r5729, %r5709, -1600085856;
	or.b32  	%r5730, %r5715, %r5710;
	or.b32  	%r5731, %r5730, %r5712;
	or.b32  	%r5732, %r5731, %r5717;
	st.local.u32 	[%rd12+48], %r5732;
	or.b32  	%r5733, %r5725, %r5720;
	or.b32  	%r5734, %r5733, %r5722;
	or.b32  	%r5735, %r5734, %r5727;
	st.local.u32 	[%rd12+52], %r5735;
	or.b32  	%r5736, %r5718, %r5713;
	shr.u32 	%r5737, %r5736, 4;
	or.b32  	%r5738, %r5737, %r5714;
	or.b32  	%r5739, %r5738, %r5719;
	st.local.u32 	[%rd12+56], %r5739;
	or.b32  	%r5740, %r5728, %r5723;
	shr.u32 	%r5741, %r5740, 4;
	or.b32  	%r5742, %r5741, %r5724;
	or.b32  	%r5743, %r5742, %r5729;
	st.local.u32 	[%rd12+60], %r5743;
	ld.local.v4.u32 	{%r5744, %r5745, %r5746, %r5747}, [%rd13+64];
	and.b32  	%r5752, %r5744, 1431655765;
	shl.b32 	%r5753, %r5744, 1;
	and.b32  	%r5754, %r5753, -1431655766;
	or.b32  	%r5755, %r5754, %r5752;
	and.b32  	%r5756, %r5744, -1431655766;
	shr.u32 	%r5757, %r5756, 1;
	or.b32  	%r5758, %r5757, %r5756;
	and.b32  	%r5759, %r5745, 1431655765;
	shl.b32 	%r5760, %r5745, 1;
	and.b32  	%r5761, %r5760, -1431655766;
	or.b32  	%r5762, %r5761, %r5759;
	and.b32  	%r5763, %r5745, -1431655766;
	shr.u32 	%r5764, %r5763, 1;
	or.b32  	%r5765, %r5764, %r5763;
	and.b32  	%r5766, %r5746, 1431655765;
	shl.b32 	%r5767, %r5746, 1;
	and.b32  	%r5768, %r5767, -1431655766;
	or.b32  	%r5769, %r5768, %r5766;
	and.b32  	%r5770, %r5746, -1431655766;
	shr.u32 	%r5771, %r5770, 1;
	or.b32  	%r5772, %r5771, %r5770;
	and.b32  	%r5773, %r5747, 1431655765;
	shl.b32 	%r5774, %r5747, 1;
	and.b32  	%r5775, %r5774, -1431655766;
	or.b32  	%r5776, %r5775, %r5773;
	and.b32  	%r5777, %r5747, -1431655766;
	shr.u32 	%r5778, %r5777, 1;
	or.b32  	%r5779, %r5778, %r5777;
	and.b32  	%r5780, %r5755, 858993459;
	shl.b32 	%r5781, %r5762, 2;
	and.b32  	%r5782, %r5781, -858993460;
	or.b32  	%r5783, %r5782, %r5780;
	and.b32  	%r5784, %r5755, -858993460;
	shr.u32 	%r5785, %r5784, 2;
	and.b32  	%r5786, %r5762, -858993460;
	or.b32  	%r5787, %r5785, %r5786;
	and.b32  	%r5788, %r5758, 858993459;
	shl.b32 	%r5789, %r5765, 2;
	and.b32  	%r5790, %r5789, -858993460;
	or.b32  	%r5791, %r5790, %r5788;
	and.b32  	%r5792, %r5758, -858993460;
	shr.u32 	%r5793, %r5792, 2;
	and.b32  	%r5794, %r5765, -858993460;
	or.b32  	%r5795, %r5793, %r5794;
	and.b32  	%r5796, %r5769, 858993459;
	shl.b32 	%r5797, %r5776, 2;
	and.b32  	%r5798, %r5797, -858993460;
	or.b32  	%r5799, %r5798, %r5796;
	and.b32  	%r5800, %r5769, -858993460;
	shr.u32 	%r5801, %r5800, 2;
	and.b32  	%r5802, %r5776, -858993460;
	or.b32  	%r5803, %r5801, %r5802;
	and.b32  	%r5804, %r5772, 858993459;
	shl.b32 	%r5805, %r5779, 2;
	and.b32  	%r5806, %r5805, -858993460;
	or.b32  	%r5807, %r5806, %r5804;
	and.b32  	%r5808, %r5772, -858993460;
	shr.u32 	%r5809, %r5808, 2;
	and.b32  	%r5810, %r5779, -858993460;
	or.b32  	%r5811, %r5809, %r5810;
	and.b32  	%r5812, %r5783, 84215045;
	shl.b32 	%r5813, %r5799, 4;
	and.b32  	%r5814, %r5813, 1347440720;
	and.b32  	%r5815, %r5783, 1347440720;
	and.b32  	%r5816, %r5799, 1347440720;
	and.b32  	%r5817, %r5791, 168430090;
	shl.b32 	%r5818, %r5807, 4;
	and.b32  	%r5819, %r5818, -1600085856;
	and.b32  	%r5820, %r5791, -1600085856;
	and.b32  	%r5821, %r5807, -1600085856;
	and.b32  	%r5822, %r5787, 84215045;
	shl.b32 	%r5823, %r5803, 4;
	and.b32  	%r5824, %r5823, 1347440720;
	and.b32  	%r5825, %r5787, 1347440720;
	and.b32  	%r5826, %r5803, 1347440720;
	and.b32  	%r5827, %r5795, 168430090;
	shl.b32 	%r5828, %r5811, 4;
	and.b32  	%r5829, %r5828, -1600085856;
	and.b32  	%r5830, %r5795, -1600085856;
	and.b32  	%r5831, %r5811, -1600085856;
	or.b32  	%r5832, %r5817, %r5812;
	or.b32  	%r5833, %r5832, %r5814;
	or.b32  	%r5834, %r5833, %r5819;
	st.local.u32 	[%rd12+64], %r5834;
	or.b32  	%r5835, %r5827, %r5822;
	or.b32  	%r5836, %r5835, %r5824;
	or.b32  	%r5837, %r5836, %r5829;
	st.local.u32 	[%rd12+68], %r5837;
	or.b32  	%r5838, %r5820, %r5815;
	shr.u32 	%r5839, %r5838, 4;
	or.b32  	%r5840, %r5839, %r5816;
	or.b32  	%r5841, %r5840, %r5821;
	st.local.u32 	[%rd12+72], %r5841;
	or.b32  	%r5842, %r5830, %r5825;
	shr.u32 	%r5843, %r5842, 4;
	or.b32  	%r5844, %r5843, %r5826;
	or.b32  	%r5845, %r5844, %r5831;
	st.local.u32 	[%rd12+76], %r5845;
	setp.lt.u32 	%p22, %r12632, 5;
	@%p22 bra 	$L__BB6_33;

	ld.local.v4.u32 	{%r5846, %r5847, %r5848, %r5849}, [%rd13+80];
	and.b32  	%r5854, %r5846, 1431655765;
	shl.b32 	%r5855, %r5846, 1;
	and.b32  	%r5856, %r5855, -1431655766;
	or.b32  	%r5857, %r5856, %r5854;
	and.b32  	%r5858, %r5846, -1431655766;
	shr.u32 	%r5859, %r5858, 1;
	or.b32  	%r5860, %r5859, %r5858;
	and.b32  	%r5861, %r5847, 1431655765;
	shl.b32 	%r5862, %r5847, 1;
	and.b32  	%r5863, %r5862, -1431655766;
	or.b32  	%r5864, %r5863, %r5861;
	and.b32  	%r5865, %r5847, -1431655766;
	shr.u32 	%r5866, %r5865, 1;
	or.b32  	%r5867, %r5866, %r5865;
	and.b32  	%r5868, %r5848, 1431655765;
	shl.b32 	%r5869, %r5848, 1;
	and.b32  	%r5870, %r5869, -1431655766;
	or.b32  	%r5871, %r5870, %r5868;
	and.b32  	%r5872, %r5848, -1431655766;
	shr.u32 	%r5873, %r5872, 1;
	or.b32  	%r5874, %r5873, %r5872;
	and.b32  	%r5875, %r5849, 1431655765;
	shl.b32 	%r5876, %r5849, 1;
	and.b32  	%r5877, %r5876, -1431655766;
	or.b32  	%r5878, %r5877, %r5875;
	and.b32  	%r5879, %r5849, -1431655766;
	shr.u32 	%r5880, %r5879, 1;
	or.b32  	%r5881, %r5880, %r5879;
	and.b32  	%r5882, %r5857, 858993459;
	shl.b32 	%r5883, %r5864, 2;
	and.b32  	%r5884, %r5883, -858993460;
	or.b32  	%r5885, %r5884, %r5882;
	and.b32  	%r5886, %r5857, -858993460;
	shr.u32 	%r5887, %r5886, 2;
	and.b32  	%r5888, %r5864, -858993460;
	or.b32  	%r5889, %r5887, %r5888;
	and.b32  	%r5890, %r5860, 858993459;
	shl.b32 	%r5891, %r5867, 2;
	and.b32  	%r5892, %r5891, -858993460;
	or.b32  	%r5893, %r5892, %r5890;
	and.b32  	%r5894, %r5860, -858993460;
	shr.u32 	%r5895, %r5894, 2;
	and.b32  	%r5896, %r5867, -858993460;
	or.b32  	%r5897, %r5895, %r5896;
	and.b32  	%r5898, %r5871, 858993459;
	shl.b32 	%r5899, %r5878, 2;
	and.b32  	%r5900, %r5899, -858993460;
	or.b32  	%r5901, %r5900, %r5898;
	and.b32  	%r5902, %r5871, -858993460;
	shr.u32 	%r5903, %r5902, 2;
	and.b32  	%r5904, %r5878, -858993460;
	or.b32  	%r5905, %r5903, %r5904;
	and.b32  	%r5906, %r5874, 858993459;
	shl.b32 	%r5907, %r5881, 2;
	and.b32  	%r5908, %r5907, -858993460;
	or.b32  	%r5909, %r5908, %r5906;
	and.b32  	%r5910, %r5874, -858993460;
	shr.u32 	%r5911, %r5910, 2;
	and.b32  	%r5912, %r5881, -858993460;
	or.b32  	%r5913, %r5911, %r5912;
	and.b32  	%r5914, %r5885, 84215045;
	shl.b32 	%r5915, %r5901, 4;
	and.b32  	%r5916, %r5915, 1347440720;
	and.b32  	%r5917, %r5885, 1347440720;
	and.b32  	%r5918, %r5901, 1347440720;
	and.b32  	%r5919, %r5893, 168430090;
	shl.b32 	%r5920, %r5909, 4;
	and.b32  	%r5921, %r5920, -1600085856;
	and.b32  	%r5922, %r5893, -1600085856;
	and.b32  	%r5923, %r5909, -1600085856;
	and.b32  	%r5924, %r5889, 84215045;
	shl.b32 	%r5925, %r5905, 4;
	and.b32  	%r5926, %r5925, 1347440720;
	and.b32  	%r5927, %r5889, 1347440720;
	and.b32  	%r5928, %r5905, 1347440720;
	and.b32  	%r5929, %r5897, 168430090;
	shl.b32 	%r5930, %r5913, 4;
	and.b32  	%r5931, %r5930, -1600085856;
	and.b32  	%r5932, %r5897, -1600085856;
	and.b32  	%r5933, %r5913, -1600085856;
	or.b32  	%r5934, %r5919, %r5914;
	or.b32  	%r5935, %r5934, %r5916;
	or.b32  	%r5936, %r5935, %r5921;
	st.local.u32 	[%rd12+80], %r5936;
	or.b32  	%r5937, %r5929, %r5924;
	or.b32  	%r5938, %r5937, %r5926;
	or.b32  	%r5939, %r5938, %r5931;
	st.local.u32 	[%rd12+84], %r5939;
	or.b32  	%r5940, %r5922, %r5917;
	shr.u32 	%r5941, %r5940, 4;
	or.b32  	%r5942, %r5941, %r5918;
	or.b32  	%r5943, %r5942, %r5923;
	st.local.u32 	[%rd12+88], %r5943;
	or.b32  	%r5944, %r5932, %r5927;
	shr.u32 	%r5945, %r5944, 4;
	or.b32  	%r5946, %r5945, %r5928;
	or.b32  	%r5947, %r5946, %r5933;
	st.local.u32 	[%rd12+92], %r5947;
	ld.local.v4.u32 	{%r5948, %r5949, %r5950, %r5951}, [%rd13+96];
	and.b32  	%r5956, %r5948, 1431655765;
	shl.b32 	%r5957, %r5948, 1;
	and.b32  	%r5958, %r5957, -1431655766;
	or.b32  	%r5959, %r5958, %r5956;
	and.b32  	%r5960, %r5948, -1431655766;
	shr.u32 	%r5961, %r5960, 1;
	or.b32  	%r5962, %r5961, %r5960;
	and.b32  	%r5963, %r5949, 1431655765;
	shl.b32 	%r5964, %r5949, 1;
	and.b32  	%r5965, %r5964, -1431655766;
	or.b32  	%r5966, %r5965, %r5963;
	and.b32  	%r5967, %r5949, -1431655766;
	shr.u32 	%r5968, %r5967, 1;
	or.b32  	%r5969, %r5968, %r5967;
	and.b32  	%r5970, %r5950, 1431655765;
	shl.b32 	%r5971, %r5950, 1;
	and.b32  	%r5972, %r5971, -1431655766;
	or.b32  	%r5973, %r5972, %r5970;
	and.b32  	%r5974, %r5950, -1431655766;
	shr.u32 	%r5975, %r5974, 1;
	or.b32  	%r5976, %r5975, %r5974;
	and.b32  	%r5977, %r5951, 1431655765;
	shl.b32 	%r5978, %r5951, 1;
	and.b32  	%r5979, %r5978, -1431655766;
	or.b32  	%r5980, %r5979, %r5977;
	and.b32  	%r5981, %r5951, -1431655766;
	shr.u32 	%r5982, %r5981, 1;
	or.b32  	%r5983, %r5982, %r5981;
	and.b32  	%r5984, %r5959, 858993459;
	shl.b32 	%r5985, %r5966, 2;
	and.b32  	%r5986, %r5985, -858993460;
	or.b32  	%r5987, %r5986, %r5984;
	and.b32  	%r5988, %r5959, -858993460;
	shr.u32 	%r5989, %r5988, 2;
	and.b32  	%r5990, %r5966, -858993460;
	or.b32  	%r5991, %r5989, %r5990;
	and.b32  	%r5992, %r5962, 858993459;
	shl.b32 	%r5993, %r5969, 2;
	and.b32  	%r5994, %r5993, -858993460;
	or.b32  	%r5995, %r5994, %r5992;
	and.b32  	%r5996, %r5962, -858993460;
	shr.u32 	%r5997, %r5996, 2;
	and.b32  	%r5998, %r5969, -858993460;
	or.b32  	%r5999, %r5997, %r5998;
	and.b32  	%r6000, %r5973, 858993459;
	shl.b32 	%r6001, %r5980, 2;
	and.b32  	%r6002, %r6001, -858993460;
	or.b32  	%r6003, %r6002, %r6000;
	and.b32  	%r6004, %r5973, -858993460;
	shr.u32 	%r6005, %r6004, 2;
	and.b32  	%r6006, %r5980, -858993460;
	or.b32  	%r6007, %r6005, %r6006;
	and.b32  	%r6008, %r5976, 858993459;
	shl.b32 	%r6009, %r5983, 2;
	and.b32  	%r6010, %r6009, -858993460;
	or.b32  	%r6011, %r6010, %r6008;
	and.b32  	%r6012, %r5976, -858993460;
	shr.u32 	%r6013, %r6012, 2;
	and.b32  	%r6014, %r5983, -858993460;
	or.b32  	%r6015, %r6013, %r6014;
	and.b32  	%r6016, %r5987, 84215045;
	shl.b32 	%r6017, %r6003, 4;
	and.b32  	%r6018, %r6017, 1347440720;
	and.b32  	%r6019, %r5987, 1347440720;
	and.b32  	%r6020, %r6003, 1347440720;
	and.b32  	%r6021, %r5995, 168430090;
	shl.b32 	%r6022, %r6011, 4;
	and.b32  	%r6023, %r6022, -1600085856;
	and.b32  	%r6024, %r5995, -1600085856;
	and.b32  	%r6025, %r6011, -1600085856;
	and.b32  	%r6026, %r5991, 84215045;
	shl.b32 	%r6027, %r6007, 4;
	and.b32  	%r6028, %r6027, 1347440720;
	and.b32  	%r6029, %r5991, 1347440720;
	and.b32  	%r6030, %r6007, 1347440720;
	and.b32  	%r6031, %r5999, 168430090;
	shl.b32 	%r6032, %r6015, 4;
	and.b32  	%r6033, %r6032, -1600085856;
	and.b32  	%r6034, %r5999, -1600085856;
	and.b32  	%r6035, %r6015, -1600085856;
	or.b32  	%r6036, %r6021, %r6016;
	or.b32  	%r6037, %r6036, %r6018;
	or.b32  	%r6038, %r6037, %r6023;
	st.local.u32 	[%rd12+96], %r6038;
	or.b32  	%r6039, %r6031, %r6026;
	or.b32  	%r6040, %r6039, %r6028;
	or.b32  	%r6041, %r6040, %r6033;
	st.local.u32 	[%rd12+100], %r6041;
	or.b32  	%r6042, %r6024, %r6019;
	shr.u32 	%r6043, %r6042, 4;
	or.b32  	%r6044, %r6043, %r6020;
	or.b32  	%r6045, %r6044, %r6025;
	st.local.u32 	[%rd12+104], %r6045;
	or.b32  	%r6046, %r6034, %r6029;
	shr.u32 	%r6047, %r6046, 4;
	or.b32  	%r6048, %r6047, %r6030;
	or.b32  	%r6049, %r6048, %r6035;
	st.local.u32 	[%rd12+108], %r6049;
	setp.lt.u32 	%p23, %r12632, 7;
	@%p23 bra 	$L__BB6_33;

	ld.local.v4.u32 	{%r6050, %r6051, %r6052, %r6053}, [%rd13+112];
	and.b32  	%r6058, %r6050, 1431655765;
	shl.b32 	%r6059, %r6050, 1;
	and.b32  	%r6060, %r6059, -1431655766;
	or.b32  	%r6061, %r6060, %r6058;
	and.b32  	%r6062, %r6050, -1431655766;
	shr.u32 	%r6063, %r6062, 1;
	or.b32  	%r6064, %r6063, %r6062;
	and.b32  	%r6065, %r6051, 1431655765;
	shl.b32 	%r6066, %r6051, 1;
	and.b32  	%r6067, %r6066, -1431655766;
	or.b32  	%r6068, %r6067, %r6065;
	and.b32  	%r6069, %r6051, -1431655766;
	shr.u32 	%r6070, %r6069, 1;
	or.b32  	%r6071, %r6070, %r6069;
	and.b32  	%r6072, %r6052, 1431655765;
	shl.b32 	%r6073, %r6052, 1;
	and.b32  	%r6074, %r6073, -1431655766;
	or.b32  	%r6075, %r6074, %r6072;
	and.b32  	%r6076, %r6052, -1431655766;
	shr.u32 	%r6077, %r6076, 1;
	or.b32  	%r6078, %r6077, %r6076;
	and.b32  	%r6079, %r6053, 1431655765;
	shl.b32 	%r6080, %r6053, 1;
	and.b32  	%r6081, %r6080, -1431655766;
	or.b32  	%r6082, %r6081, %r6079;
	and.b32  	%r6083, %r6053, -1431655766;
	shr.u32 	%r6084, %r6083, 1;
	or.b32  	%r6085, %r6084, %r6083;
	and.b32  	%r6086, %r6061, 858993459;
	shl.b32 	%r6087, %r6068, 2;
	and.b32  	%r6088, %r6087, -858993460;
	or.b32  	%r6089, %r6088, %r6086;
	and.b32  	%r6090, %r6061, -858993460;
	shr.u32 	%r6091, %r6090, 2;
	and.b32  	%r6092, %r6068, -858993460;
	or.b32  	%r6093, %r6091, %r6092;
	and.b32  	%r6094, %r6064, 858993459;
	shl.b32 	%r6095, %r6071, 2;
	and.b32  	%r6096, %r6095, -858993460;
	or.b32  	%r6097, %r6096, %r6094;
	and.b32  	%r6098, %r6064, -858993460;
	shr.u32 	%r6099, %r6098, 2;
	and.b32  	%r6100, %r6071, -858993460;
	or.b32  	%r6101, %r6099, %r6100;
	and.b32  	%r6102, %r6075, 858993459;
	shl.b32 	%r6103, %r6082, 2;
	and.b32  	%r6104, %r6103, -858993460;
	or.b32  	%r6105, %r6104, %r6102;
	and.b32  	%r6106, %r6075, -858993460;
	shr.u32 	%r6107, %r6106, 2;
	and.b32  	%r6108, %r6082, -858993460;
	or.b32  	%r6109, %r6107, %r6108;
	and.b32  	%r6110, %r6078, 858993459;
	shl.b32 	%r6111, %r6085, 2;
	and.b32  	%r6112, %r6111, -858993460;
	or.b32  	%r6113, %r6112, %r6110;
	and.b32  	%r6114, %r6078, -858993460;
	shr.u32 	%r6115, %r6114, 2;
	and.b32  	%r6116, %r6085, -858993460;
	or.b32  	%r6117, %r6115, %r6116;
	and.b32  	%r6118, %r6089, 84215045;
	shl.b32 	%r6119, %r6105, 4;
	and.b32  	%r6120, %r6119, 1347440720;
	and.b32  	%r6121, %r6089, 1347440720;
	and.b32  	%r6122, %r6105, 1347440720;
	and.b32  	%r6123, %r6097, 168430090;
	shl.b32 	%r6124, %r6113, 4;
	and.b32  	%r6125, %r6124, -1600085856;
	and.b32  	%r6126, %r6097, -1600085856;
	and.b32  	%r6127, %r6113, -1600085856;
	and.b32  	%r6128, %r6093, 84215045;
	shl.b32 	%r6129, %r6109, 4;
	and.b32  	%r6130, %r6129, 1347440720;
	and.b32  	%r6131, %r6093, 1347440720;
	and.b32  	%r6132, %r6109, 1347440720;
	and.b32  	%r6133, %r6101, 168430090;
	shl.b32 	%r6134, %r6117, 4;
	and.b32  	%r6135, %r6134, -1600085856;
	and.b32  	%r6136, %r6101, -1600085856;
	and.b32  	%r6137, %r6117, -1600085856;
	or.b32  	%r6138, %r6123, %r6118;
	or.b32  	%r6139, %r6138, %r6120;
	or.b32  	%r6140, %r6139, %r6125;
	st.local.u32 	[%rd12+112], %r6140;
	or.b32  	%r6141, %r6133, %r6128;
	or.b32  	%r6142, %r6141, %r6130;
	or.b32  	%r6143, %r6142, %r6135;
	st.local.u32 	[%rd12+116], %r6143;
	or.b32  	%r6144, %r6126, %r6121;
	shr.u32 	%r6145, %r6144, 4;
	or.b32  	%r6146, %r6145, %r6122;
	or.b32  	%r6147, %r6146, %r6127;
	st.local.u32 	[%rd12+120], %r6147;
	or.b32  	%r6148, %r6136, %r6131;
	shr.u32 	%r6149, %r6148, 4;
	or.b32  	%r6150, %r6149, %r6132;
	or.b32  	%r6151, %r6150, %r6137;
	st.local.u32 	[%rd12+124], %r6151;
	ld.local.v4.u32 	{%r6152, %r6153, %r6154, %r6155}, [%rd13+128];
	and.b32  	%r6160, %r6152, 1431655765;
	shl.b32 	%r6161, %r6152, 1;
	and.b32  	%r6162, %r6161, -1431655766;
	or.b32  	%r6163, %r6162, %r6160;
	and.b32  	%r6164, %r6152, -1431655766;
	shr.u32 	%r6165, %r6164, 1;
	or.b32  	%r6166, %r6165, %r6164;
	and.b32  	%r6167, %r6153, 1431655765;
	shl.b32 	%r6168, %r6153, 1;
	and.b32  	%r6169, %r6168, -1431655766;
	or.b32  	%r6170, %r6169, %r6167;
	and.b32  	%r6171, %r6153, -1431655766;
	shr.u32 	%r6172, %r6171, 1;
	or.b32  	%r6173, %r6172, %r6171;
	and.b32  	%r6174, %r6154, 1431655765;
	shl.b32 	%r6175, %r6154, 1;
	and.b32  	%r6176, %r6175, -1431655766;
	or.b32  	%r6177, %r6176, %r6174;
	and.b32  	%r6178, %r6154, -1431655766;
	shr.u32 	%r6179, %r6178, 1;
	or.b32  	%r6180, %r6179, %r6178;
	and.b32  	%r6181, %r6155, 1431655765;
	shl.b32 	%r6182, %r6155, 1;
	and.b32  	%r6183, %r6182, -1431655766;
	or.b32  	%r6184, %r6183, %r6181;
	and.b32  	%r6185, %r6155, -1431655766;
	shr.u32 	%r6186, %r6185, 1;
	or.b32  	%r6187, %r6186, %r6185;
	and.b32  	%r6188, %r6163, 858993459;
	shl.b32 	%r6189, %r6170, 2;
	and.b32  	%r6190, %r6189, -858993460;
	or.b32  	%r6191, %r6190, %r6188;
	and.b32  	%r6192, %r6163, -858993460;
	shr.u32 	%r6193, %r6192, 2;
	and.b32  	%r6194, %r6170, -858993460;
	or.b32  	%r6195, %r6193, %r6194;
	and.b32  	%r6196, %r6166, 858993459;
	shl.b32 	%r6197, %r6173, 2;
	and.b32  	%r6198, %r6197, -858993460;
	or.b32  	%r6199, %r6198, %r6196;
	and.b32  	%r6200, %r6166, -858993460;
	shr.u32 	%r6201, %r6200, 2;
	and.b32  	%r6202, %r6173, -858993460;
	or.b32  	%r6203, %r6201, %r6202;
	and.b32  	%r6204, %r6177, 858993459;
	shl.b32 	%r6205, %r6184, 2;
	and.b32  	%r6206, %r6205, -858993460;
	or.b32  	%r6207, %r6206, %r6204;
	and.b32  	%r6208, %r6177, -858993460;
	shr.u32 	%r6209, %r6208, 2;
	and.b32  	%r6210, %r6184, -858993460;
	or.b32  	%r6211, %r6209, %r6210;
	and.b32  	%r6212, %r6180, 858993459;
	shl.b32 	%r6213, %r6187, 2;
	and.b32  	%r6214, %r6213, -858993460;
	or.b32  	%r6215, %r6214, %r6212;
	and.b32  	%r6216, %r6180, -858993460;
	shr.u32 	%r6217, %r6216, 2;
	and.b32  	%r6218, %r6187, -858993460;
	or.b32  	%r6219, %r6217, %r6218;
	and.b32  	%r6220, %r6191, 84215045;
	shl.b32 	%r6221, %r6207, 4;
	and.b32  	%r6222, %r6221, 1347440720;
	and.b32  	%r6223, %r6191, 1347440720;
	and.b32  	%r6224, %r6207, 1347440720;
	and.b32  	%r6225, %r6199, 168430090;
	shl.b32 	%r6226, %r6215, 4;
	and.b32  	%r6227, %r6226, -1600085856;
	and.b32  	%r6228, %r6199, -1600085856;
	and.b32  	%r6229, %r6215, -1600085856;
	and.b32  	%r6230, %r6195, 84215045;
	shl.b32 	%r6231, %r6211, 4;
	and.b32  	%r6232, %r6231, 1347440720;
	and.b32  	%r6233, %r6195, 1347440720;
	and.b32  	%r6234, %r6211, 1347440720;
	and.b32  	%r6235, %r6203, 168430090;
	shl.b32 	%r6236, %r6219, 4;
	and.b32  	%r6237, %r6236, -1600085856;
	and.b32  	%r6238, %r6203, -1600085856;
	and.b32  	%r6239, %r6219, -1600085856;
	or.b32  	%r6240, %r6225, %r6220;
	or.b32  	%r6241, %r6240, %r6222;
	or.b32  	%r6242, %r6241, %r6227;
	st.local.u32 	[%rd12+128], %r6242;
	or.b32  	%r6243, %r6235, %r6230;
	or.b32  	%r6244, %r6243, %r6232;
	or.b32  	%r6245, %r6244, %r6237;
	st.local.u32 	[%rd12+132], %r6245;
	or.b32  	%r6246, %r6228, %r6223;
	shr.u32 	%r6247, %r6246, 4;
	or.b32  	%r6248, %r6247, %r6224;
	or.b32  	%r6249, %r6248, %r6229;
	st.local.u32 	[%rd12+136], %r6249;
	or.b32  	%r6250, %r6238, %r6233;
	shr.u32 	%r6251, %r6250, 4;
	or.b32  	%r6252, %r6251, %r6234;
	or.b32  	%r6253, %r6252, %r6239;
	st.local.u32 	[%rd12+140], %r6253;
	setp.lt.u32 	%p24, %r12632, 9;
	@%p24 bra 	$L__BB6_33;

	ld.local.v4.u32 	{%r6254, %r6255, %r6256, %r6257}, [%rd13+144];
	and.b32  	%r6262, %r6254, 1431655765;
	shl.b32 	%r6263, %r6254, 1;
	and.b32  	%r6264, %r6263, -1431655766;
	or.b32  	%r6265, %r6264, %r6262;
	and.b32  	%r6266, %r6254, -1431655766;
	shr.u32 	%r6267, %r6266, 1;
	or.b32  	%r6268, %r6267, %r6266;
	and.b32  	%r6269, %r6255, 1431655765;
	shl.b32 	%r6270, %r6255, 1;
	and.b32  	%r6271, %r6270, -1431655766;
	or.b32  	%r6272, %r6271, %r6269;
	and.b32  	%r6273, %r6255, -1431655766;
	shr.u32 	%r6274, %r6273, 1;
	or.b32  	%r6275, %r6274, %r6273;
	and.b32  	%r6276, %r6256, 1431655765;
	shl.b32 	%r6277, %r6256, 1;
	and.b32  	%r6278, %r6277, -1431655766;
	or.b32  	%r6279, %r6278, %r6276;
	and.b32  	%r6280, %r6256, -1431655766;
	shr.u32 	%r6281, %r6280, 1;
	or.b32  	%r6282, %r6281, %r6280;
	and.b32  	%r6283, %r6257, 1431655765;
	shl.b32 	%r6284, %r6257, 1;
	and.b32  	%r6285, %r6284, -1431655766;
	or.b32  	%r6286, %r6285, %r6283;
	and.b32  	%r6287, %r6257, -1431655766;
	shr.u32 	%r6288, %r6287, 1;
	or.b32  	%r6289, %r6288, %r6287;
	and.b32  	%r6290, %r6265, 858993459;
	shl.b32 	%r6291, %r6272, 2;
	and.b32  	%r6292, %r6291, -858993460;
	or.b32  	%r6293, %r6292, %r6290;
	and.b32  	%r6294, %r6265, -858993460;
	shr.u32 	%r6295, %r6294, 2;
	and.b32  	%r6296, %r6272, -858993460;
	or.b32  	%r6297, %r6295, %r6296;
	and.b32  	%r6298, %r6268, 858993459;
	shl.b32 	%r6299, %r6275, 2;
	and.b32  	%r6300, %r6299, -858993460;
	or.b32  	%r6301, %r6300, %r6298;
	and.b32  	%r6302, %r6268, -858993460;
	shr.u32 	%r6303, %r6302, 2;
	and.b32  	%r6304, %r6275, -858993460;
	or.b32  	%r6305, %r6303, %r6304;
	and.b32  	%r6306, %r6279, 858993459;
	shl.b32 	%r6307, %r6286, 2;
	and.b32  	%r6308, %r6307, -858993460;
	or.b32  	%r6309, %r6308, %r6306;
	and.b32  	%r6310, %r6279, -858993460;
	shr.u32 	%r6311, %r6310, 2;
	and.b32  	%r6312, %r6286, -858993460;
	or.b32  	%r6313, %r6311, %r6312;
	and.b32  	%r6314, %r6282, 858993459;
	shl.b32 	%r6315, %r6289, 2;
	and.b32  	%r6316, %r6315, -858993460;
	or.b32  	%r6317, %r6316, %r6314;
	and.b32  	%r6318, %r6282, -858993460;
	shr.u32 	%r6319, %r6318, 2;
	and.b32  	%r6320, %r6289, -858993460;
	or.b32  	%r6321, %r6319, %r6320;
	and.b32  	%r6322, %r6293, 84215045;
	shl.b32 	%r6323, %r6309, 4;
	and.b32  	%r6324, %r6323, 1347440720;
	and.b32  	%r6325, %r6293, 1347440720;
	and.b32  	%r6326, %r6309, 1347440720;
	and.b32  	%r6327, %r6301, 168430090;
	shl.b32 	%r6328, %r6317, 4;
	and.b32  	%r6329, %r6328, -1600085856;
	and.b32  	%r6330, %r6301, -1600085856;
	and.b32  	%r6331, %r6317, -1600085856;
	and.b32  	%r6332, %r6297, 84215045;
	shl.b32 	%r6333, %r6313, 4;
	and.b32  	%r6334, %r6333, 1347440720;
	and.b32  	%r6335, %r6297, 1347440720;
	and.b32  	%r6336, %r6313, 1347440720;
	and.b32  	%r6337, %r6305, 168430090;
	shl.b32 	%r6338, %r6321, 4;
	and.b32  	%r6339, %r6338, -1600085856;
	and.b32  	%r6340, %r6305, -1600085856;
	and.b32  	%r6341, %r6321, -1600085856;
	or.b32  	%r6342, %r6327, %r6322;
	or.b32  	%r6343, %r6342, %r6324;
	or.b32  	%r6344, %r6343, %r6329;
	st.local.u32 	[%rd12+144], %r6344;
	or.b32  	%r6345, %r6337, %r6332;
	or.b32  	%r6346, %r6345, %r6334;
	or.b32  	%r6347, %r6346, %r6339;
	st.local.u32 	[%rd12+148], %r6347;
	or.b32  	%r6348, %r6330, %r6325;
	shr.u32 	%r6349, %r6348, 4;
	or.b32  	%r6350, %r6349, %r6326;
	or.b32  	%r6351, %r6350, %r6331;
	st.local.u32 	[%rd12+152], %r6351;
	or.b32  	%r6352, %r6340, %r6335;
	shr.u32 	%r6353, %r6352, 4;
	or.b32  	%r6354, %r6353, %r6336;
	or.b32  	%r6355, %r6354, %r6341;
	st.local.u32 	[%rd12+156], %r6355;
	ld.local.v4.u32 	{%r6356, %r6357, %r6358, %r6359}, [%rd13+160];
	and.b32  	%r6364, %r6356, 1431655765;
	shl.b32 	%r6365, %r6356, 1;
	and.b32  	%r6366, %r6365, -1431655766;
	or.b32  	%r6367, %r6366, %r6364;
	and.b32  	%r6368, %r6356, -1431655766;
	shr.u32 	%r6369, %r6368, 1;
	or.b32  	%r6370, %r6369, %r6368;
	and.b32  	%r6371, %r6357, 1431655765;
	shl.b32 	%r6372, %r6357, 1;
	and.b32  	%r6373, %r6372, -1431655766;
	or.b32  	%r6374, %r6373, %r6371;
	and.b32  	%r6375, %r6357, -1431655766;
	shr.u32 	%r6376, %r6375, 1;
	or.b32  	%r6377, %r6376, %r6375;
	and.b32  	%r6378, %r6358, 1431655765;
	shl.b32 	%r6379, %r6358, 1;
	and.b32  	%r6380, %r6379, -1431655766;
	or.b32  	%r6381, %r6380, %r6378;
	and.b32  	%r6382, %r6358, -1431655766;
	shr.u32 	%r6383, %r6382, 1;
	or.b32  	%r6384, %r6383, %r6382;
	and.b32  	%r6385, %r6359, 1431655765;
	shl.b32 	%r6386, %r6359, 1;
	and.b32  	%r6387, %r6386, -1431655766;
	or.b32  	%r6388, %r6387, %r6385;
	and.b32  	%r6389, %r6359, -1431655766;
	shr.u32 	%r6390, %r6389, 1;
	or.b32  	%r6391, %r6390, %r6389;
	and.b32  	%r6392, %r6367, 858993459;
	shl.b32 	%r6393, %r6374, 2;
	and.b32  	%r6394, %r6393, -858993460;
	or.b32  	%r6395, %r6394, %r6392;
	and.b32  	%r6396, %r6367, -858993460;
	shr.u32 	%r6397, %r6396, 2;
	and.b32  	%r6398, %r6374, -858993460;
	or.b32  	%r6399, %r6397, %r6398;
	and.b32  	%r6400, %r6370, 858993459;
	shl.b32 	%r6401, %r6377, 2;
	and.b32  	%r6402, %r6401, -858993460;
	or.b32  	%r6403, %r6402, %r6400;
	and.b32  	%r6404, %r6370, -858993460;
	shr.u32 	%r6405, %r6404, 2;
	and.b32  	%r6406, %r6377, -858993460;
	or.b32  	%r6407, %r6405, %r6406;
	and.b32  	%r6408, %r6381, 858993459;
	shl.b32 	%r6409, %r6388, 2;
	and.b32  	%r6410, %r6409, -858993460;
	or.b32  	%r6411, %r6410, %r6408;
	and.b32  	%r6412, %r6381, -858993460;
	shr.u32 	%r6413, %r6412, 2;
	and.b32  	%r6414, %r6388, -858993460;
	or.b32  	%r6415, %r6413, %r6414;
	and.b32  	%r6416, %r6384, 858993459;
	shl.b32 	%r6417, %r6391, 2;
	and.b32  	%r6418, %r6417, -858993460;
	or.b32  	%r6419, %r6418, %r6416;
	and.b32  	%r6420, %r6384, -858993460;
	shr.u32 	%r6421, %r6420, 2;
	and.b32  	%r6422, %r6391, -858993460;
	or.b32  	%r6423, %r6421, %r6422;
	and.b32  	%r6424, %r6395, 84215045;
	shl.b32 	%r6425, %r6411, 4;
	and.b32  	%r6426, %r6425, 1347440720;
	and.b32  	%r6427, %r6395, 1347440720;
	and.b32  	%r6428, %r6411, 1347440720;
	and.b32  	%r6429, %r6403, 168430090;
	shl.b32 	%r6430, %r6419, 4;
	and.b32  	%r6431, %r6430, -1600085856;
	and.b32  	%r6432, %r6403, -1600085856;
	and.b32  	%r6433, %r6419, -1600085856;
	and.b32  	%r6434, %r6399, 84215045;
	shl.b32 	%r6435, %r6415, 4;
	and.b32  	%r6436, %r6435, 1347440720;
	and.b32  	%r6437, %r6399, 1347440720;
	and.b32  	%r6438, %r6415, 1347440720;
	and.b32  	%r6439, %r6407, 168430090;
	shl.b32 	%r6440, %r6423, 4;
	and.b32  	%r6441, %r6440, -1600085856;
	and.b32  	%r6442, %r6407, -1600085856;
	and.b32  	%r6443, %r6423, -1600085856;
	or.b32  	%r6444, %r6429, %r6424;
	or.b32  	%r6445, %r6444, %r6426;
	or.b32  	%r6446, %r6445, %r6431;
	st.local.u32 	[%rd12+160], %r6446;
	or.b32  	%r6447, %r6439, %r6434;
	or.b32  	%r6448, %r6447, %r6436;
	or.b32  	%r6449, %r6448, %r6441;
	st.local.u32 	[%rd12+164], %r6449;
	or.b32  	%r6450, %r6432, %r6427;
	shr.u32 	%r6451, %r6450, 4;
	or.b32  	%r6452, %r6451, %r6428;
	or.b32  	%r6453, %r6452, %r6433;
	st.local.u32 	[%rd12+168], %r6453;
	or.b32  	%r6454, %r6442, %r6437;
	shr.u32 	%r6455, %r6454, 4;
	or.b32  	%r6456, %r6455, %r6438;
	or.b32  	%r6457, %r6456, %r6443;
	st.local.u32 	[%rd12+172], %r6457;
	setp.lt.u32 	%p25, %r12632, 11;
	@%p25 bra 	$L__BB6_33;

	ld.local.v4.u32 	{%r6458, %r6459, %r6460, %r6461}, [%rd13+176];
	and.b32  	%r6466, %r6458, 1431655765;
	shl.b32 	%r6467, %r6458, 1;
	and.b32  	%r6468, %r6467, -1431655766;
	or.b32  	%r6469, %r6468, %r6466;
	and.b32  	%r6470, %r6458, -1431655766;
	shr.u32 	%r6471, %r6470, 1;
	or.b32  	%r6472, %r6471, %r6470;
	and.b32  	%r6473, %r6459, 1431655765;
	shl.b32 	%r6474, %r6459, 1;
	and.b32  	%r6475, %r6474, -1431655766;
	or.b32  	%r6476, %r6475, %r6473;
	and.b32  	%r6477, %r6459, -1431655766;
	shr.u32 	%r6478, %r6477, 1;
	or.b32  	%r6479, %r6478, %r6477;
	and.b32  	%r6480, %r6460, 1431655765;
	shl.b32 	%r6481, %r6460, 1;
	and.b32  	%r6482, %r6481, -1431655766;
	or.b32  	%r6483, %r6482, %r6480;
	and.b32  	%r6484, %r6460, -1431655766;
	shr.u32 	%r6485, %r6484, 1;
	or.b32  	%r6486, %r6485, %r6484;
	and.b32  	%r6487, %r6461, 1431655765;
	shl.b32 	%r6488, %r6461, 1;
	and.b32  	%r6489, %r6488, -1431655766;
	or.b32  	%r6490, %r6489, %r6487;
	and.b32  	%r6491, %r6461, -1431655766;
	shr.u32 	%r6492, %r6491, 1;
	or.b32  	%r6493, %r6492, %r6491;
	and.b32  	%r6494, %r6469, 858993459;
	shl.b32 	%r6495, %r6476, 2;
	and.b32  	%r6496, %r6495, -858993460;
	or.b32  	%r6497, %r6496, %r6494;
	and.b32  	%r6498, %r6469, -858993460;
	shr.u32 	%r6499, %r6498, 2;
	and.b32  	%r6500, %r6476, -858993460;
	or.b32  	%r6501, %r6499, %r6500;
	and.b32  	%r6502, %r6472, 858993459;
	shl.b32 	%r6503, %r6479, 2;
	and.b32  	%r6504, %r6503, -858993460;
	or.b32  	%r6505, %r6504, %r6502;
	and.b32  	%r6506, %r6472, -858993460;
	shr.u32 	%r6507, %r6506, 2;
	and.b32  	%r6508, %r6479, -858993460;
	or.b32  	%r6509, %r6507, %r6508;
	and.b32  	%r6510, %r6483, 858993459;
	shl.b32 	%r6511, %r6490, 2;
	and.b32  	%r6512, %r6511, -858993460;
	or.b32  	%r6513, %r6512, %r6510;
	and.b32  	%r6514, %r6483, -858993460;
	shr.u32 	%r6515, %r6514, 2;
	and.b32  	%r6516, %r6490, -858993460;
	or.b32  	%r6517, %r6515, %r6516;
	and.b32  	%r6518, %r6486, 858993459;
	shl.b32 	%r6519, %r6493, 2;
	and.b32  	%r6520, %r6519, -858993460;
	or.b32  	%r6521, %r6520, %r6518;
	and.b32  	%r6522, %r6486, -858993460;
	shr.u32 	%r6523, %r6522, 2;
	and.b32  	%r6524, %r6493, -858993460;
	or.b32  	%r6525, %r6523, %r6524;
	and.b32  	%r6526, %r6497, 84215045;
	shl.b32 	%r6527, %r6513, 4;
	and.b32  	%r6528, %r6527, 1347440720;
	and.b32  	%r6529, %r6497, 1347440720;
	and.b32  	%r6530, %r6513, 1347440720;
	and.b32  	%r6531, %r6505, 168430090;
	shl.b32 	%r6532, %r6521, 4;
	and.b32  	%r6533, %r6532, -1600085856;
	and.b32  	%r6534, %r6505, -1600085856;
	and.b32  	%r6535, %r6521, -1600085856;
	and.b32  	%r6536, %r6501, 84215045;
	shl.b32 	%r6537, %r6517, 4;
	and.b32  	%r6538, %r6537, 1347440720;
	and.b32  	%r6539, %r6501, 1347440720;
	and.b32  	%r6540, %r6517, 1347440720;
	and.b32  	%r6541, %r6509, 168430090;
	shl.b32 	%r6542, %r6525, 4;
	and.b32  	%r6543, %r6542, -1600085856;
	and.b32  	%r6544, %r6509, -1600085856;
	and.b32  	%r6545, %r6525, -1600085856;
	or.b32  	%r6546, %r6531, %r6526;
	or.b32  	%r6547, %r6546, %r6528;
	or.b32  	%r6548, %r6547, %r6533;
	st.local.u32 	[%rd12+176], %r6548;
	or.b32  	%r6549, %r6541, %r6536;
	or.b32  	%r6550, %r6549, %r6538;
	or.b32  	%r6551, %r6550, %r6543;
	st.local.u32 	[%rd12+180], %r6551;
	or.b32  	%r6552, %r6534, %r6529;
	shr.u32 	%r6553, %r6552, 4;
	or.b32  	%r6554, %r6553, %r6530;
	or.b32  	%r6555, %r6554, %r6535;
	st.local.u32 	[%rd12+184], %r6555;
	or.b32  	%r6556, %r6544, %r6539;
	shr.u32 	%r6557, %r6556, 4;
	or.b32  	%r6558, %r6557, %r6540;
	or.b32  	%r6559, %r6558, %r6545;
	st.local.u32 	[%rd12+188], %r6559;
	ld.local.v4.u32 	{%r6560, %r6561, %r6562, %r6563}, [%rd13+192];
	and.b32  	%r6568, %r6560, 1431655765;
	shl.b32 	%r6569, %r6560, 1;
	and.b32  	%r6570, %r6569, -1431655766;
	or.b32  	%r6571, %r6570, %r6568;
	and.b32  	%r6572, %r6560, -1431655766;
	shr.u32 	%r6573, %r6572, 1;
	or.b32  	%r6574, %r6573, %r6572;
	and.b32  	%r6575, %r6561, 1431655765;
	shl.b32 	%r6576, %r6561, 1;
	and.b32  	%r6577, %r6576, -1431655766;
	or.b32  	%r6578, %r6577, %r6575;
	and.b32  	%r6579, %r6561, -1431655766;
	shr.u32 	%r6580, %r6579, 1;
	or.b32  	%r6581, %r6580, %r6579;
	and.b32  	%r6582, %r6562, 1431655765;
	shl.b32 	%r6583, %r6562, 1;
	and.b32  	%r6584, %r6583, -1431655766;
	or.b32  	%r6585, %r6584, %r6582;
	and.b32  	%r6586, %r6562, -1431655766;
	shr.u32 	%r6587, %r6586, 1;
	or.b32  	%r6588, %r6587, %r6586;
	and.b32  	%r6589, %r6563, 1431655765;
	shl.b32 	%r6590, %r6563, 1;
	and.b32  	%r6591, %r6590, -1431655766;
	or.b32  	%r6592, %r6591, %r6589;
	and.b32  	%r6593, %r6563, -1431655766;
	shr.u32 	%r6594, %r6593, 1;
	or.b32  	%r6595, %r6594, %r6593;
	and.b32  	%r6596, %r6571, 858993459;
	shl.b32 	%r6597, %r6578, 2;
	and.b32  	%r6598, %r6597, -858993460;
	or.b32  	%r6599, %r6598, %r6596;
	and.b32  	%r6600, %r6571, -858993460;
	shr.u32 	%r6601, %r6600, 2;
	and.b32  	%r6602, %r6578, -858993460;
	or.b32  	%r6603, %r6601, %r6602;
	and.b32  	%r6604, %r6574, 858993459;
	shl.b32 	%r6605, %r6581, 2;
	and.b32  	%r6606, %r6605, -858993460;
	or.b32  	%r6607, %r6606, %r6604;
	and.b32  	%r6608, %r6574, -858993460;
	shr.u32 	%r6609, %r6608, 2;
	and.b32  	%r6610, %r6581, -858993460;
	or.b32  	%r6611, %r6609, %r6610;
	and.b32  	%r6612, %r6585, 858993459;
	shl.b32 	%r6613, %r6592, 2;
	and.b32  	%r6614, %r6613, -858993460;
	or.b32  	%r6615, %r6614, %r6612;
	and.b32  	%r6616, %r6585, -858993460;
	shr.u32 	%r6617, %r6616, 2;
	and.b32  	%r6618, %r6592, -858993460;
	or.b32  	%r6619, %r6617, %r6618;
	and.b32  	%r6620, %r6588, 858993459;
	shl.b32 	%r6621, %r6595, 2;
	and.b32  	%r6622, %r6621, -858993460;
	or.b32  	%r6623, %r6622, %r6620;
	and.b32  	%r6624, %r6588, -858993460;
	shr.u32 	%r6625, %r6624, 2;
	and.b32  	%r6626, %r6595, -858993460;
	or.b32  	%r6627, %r6625, %r6626;
	and.b32  	%r6628, %r6599, 84215045;
	shl.b32 	%r6629, %r6615, 4;
	and.b32  	%r6630, %r6629, 1347440720;
	and.b32  	%r6631, %r6599, 1347440720;
	and.b32  	%r6632, %r6615, 1347440720;
	and.b32  	%r6633, %r6607, 168430090;
	shl.b32 	%r6634, %r6623, 4;
	and.b32  	%r6635, %r6634, -1600085856;
	and.b32  	%r6636, %r6607, -1600085856;
	and.b32  	%r6637, %r6623, -1600085856;
	and.b32  	%r6638, %r6603, 84215045;
	shl.b32 	%r6639, %r6619, 4;
	and.b32  	%r6640, %r6639, 1347440720;
	and.b32  	%r6641, %r6603, 1347440720;
	and.b32  	%r6642, %r6619, 1347440720;
	and.b32  	%r6643, %r6611, 168430090;
	shl.b32 	%r6644, %r6627, 4;
	and.b32  	%r6645, %r6644, -1600085856;
	and.b32  	%r6646, %r6611, -1600085856;
	and.b32  	%r6647, %r6627, -1600085856;
	or.b32  	%r6648, %r6633, %r6628;
	or.b32  	%r6649, %r6648, %r6630;
	or.b32  	%r6650, %r6649, %r6635;
	st.local.u32 	[%rd12+192], %r6650;
	or.b32  	%r6651, %r6643, %r6638;
	or.b32  	%r6652, %r6651, %r6640;
	or.b32  	%r6653, %r6652, %r6645;
	st.local.u32 	[%rd12+196], %r6653;
	or.b32  	%r6654, %r6636, %r6631;
	shr.u32 	%r6655, %r6654, 4;
	or.b32  	%r6656, %r6655, %r6632;
	or.b32  	%r6657, %r6656, %r6637;
	st.local.u32 	[%rd12+200], %r6657;
	or.b32  	%r6658, %r6646, %r6641;
	shr.u32 	%r6659, %r6658, 4;
	or.b32  	%r6660, %r6659, %r6642;
	or.b32  	%r6661, %r6660, %r6647;
	st.local.u32 	[%rd12+204], %r6661;
	setp.lt.u32 	%p26, %r12632, 13;
	@%p26 bra 	$L__BB6_33;

	ld.local.v4.u32 	{%r6662, %r6663, %r6664, %r6665}, [%rd13+208];
	and.b32  	%r6670, %r6662, 1431655765;
	shl.b32 	%r6671, %r6662, 1;
	and.b32  	%r6672, %r6671, -1431655766;
	or.b32  	%r6673, %r6672, %r6670;
	and.b32  	%r6674, %r6662, -1431655766;
	shr.u32 	%r6675, %r6674, 1;
	or.b32  	%r6676, %r6675, %r6674;
	and.b32  	%r6677, %r6663, 1431655765;
	shl.b32 	%r6678, %r6663, 1;
	and.b32  	%r6679, %r6678, -1431655766;
	or.b32  	%r6680, %r6679, %r6677;
	and.b32  	%r6681, %r6663, -1431655766;
	shr.u32 	%r6682, %r6681, 1;
	or.b32  	%r6683, %r6682, %r6681;
	and.b32  	%r6684, %r6664, 1431655765;
	shl.b32 	%r6685, %r6664, 1;
	and.b32  	%r6686, %r6685, -1431655766;
	or.b32  	%r6687, %r6686, %r6684;
	and.b32  	%r6688, %r6664, -1431655766;
	shr.u32 	%r6689, %r6688, 1;
	or.b32  	%r6690, %r6689, %r6688;
	and.b32  	%r6691, %r6665, 1431655765;
	shl.b32 	%r6692, %r6665, 1;
	and.b32  	%r6693, %r6692, -1431655766;
	or.b32  	%r6694, %r6693, %r6691;
	and.b32  	%r6695, %r6665, -1431655766;
	shr.u32 	%r6696, %r6695, 1;
	or.b32  	%r6697, %r6696, %r6695;
	and.b32  	%r6698, %r6673, 858993459;
	shl.b32 	%r6699, %r6680, 2;
	and.b32  	%r6700, %r6699, -858993460;
	or.b32  	%r6701, %r6700, %r6698;
	and.b32  	%r6702, %r6673, -858993460;
	shr.u32 	%r6703, %r6702, 2;
	and.b32  	%r6704, %r6680, -858993460;
	or.b32  	%r6705, %r6703, %r6704;
	and.b32  	%r6706, %r6676, 858993459;
	shl.b32 	%r6707, %r6683, 2;
	and.b32  	%r6708, %r6707, -858993460;
	or.b32  	%r6709, %r6708, %r6706;
	and.b32  	%r6710, %r6676, -858993460;
	shr.u32 	%r6711, %r6710, 2;
	and.b32  	%r6712, %r6683, -858993460;
	or.b32  	%r6713, %r6711, %r6712;
	and.b32  	%r6714, %r6687, 858993459;
	shl.b32 	%r6715, %r6694, 2;
	and.b32  	%r6716, %r6715, -858993460;
	or.b32  	%r6717, %r6716, %r6714;
	and.b32  	%r6718, %r6687, -858993460;
	shr.u32 	%r6719, %r6718, 2;
	and.b32  	%r6720, %r6694, -858993460;
	or.b32  	%r6721, %r6719, %r6720;
	and.b32  	%r6722, %r6690, 858993459;
	shl.b32 	%r6723, %r6697, 2;
	and.b32  	%r6724, %r6723, -858993460;
	or.b32  	%r6725, %r6724, %r6722;
	and.b32  	%r6726, %r6690, -858993460;
	shr.u32 	%r6727, %r6726, 2;
	and.b32  	%r6728, %r6697, -858993460;
	or.b32  	%r6729, %r6727, %r6728;
	and.b32  	%r6730, %r6701, 84215045;
	shl.b32 	%r6731, %r6717, 4;
	and.b32  	%r6732, %r6731, 1347440720;
	and.b32  	%r6733, %r6701, 1347440720;
	and.b32  	%r6734, %r6717, 1347440720;
	and.b32  	%r6735, %r6709, 168430090;
	shl.b32 	%r6736, %r6725, 4;
	and.b32  	%r6737, %r6736, -1600085856;
	and.b32  	%r6738, %r6709, -1600085856;
	and.b32  	%r6739, %r6725, -1600085856;
	and.b32  	%r6740, %r6705, 84215045;
	shl.b32 	%r6741, %r6721, 4;
	and.b32  	%r6742, %r6741, 1347440720;
	and.b32  	%r6743, %r6705, 1347440720;
	and.b32  	%r6744, %r6721, 1347440720;
	and.b32  	%r6745, %r6713, 168430090;
	shl.b32 	%r6746, %r6729, 4;
	and.b32  	%r6747, %r6746, -1600085856;
	and.b32  	%r6748, %r6713, -1600085856;
	and.b32  	%r6749, %r6729, -1600085856;
	or.b32  	%r6750, %r6735, %r6730;
	or.b32  	%r6751, %r6750, %r6732;
	or.b32  	%r6752, %r6751, %r6737;
	st.local.u32 	[%rd12+208], %r6752;
	or.b32  	%r6753, %r6745, %r6740;
	or.b32  	%r6754, %r6753, %r6742;
	or.b32  	%r6755, %r6754, %r6747;
	st.local.u32 	[%rd12+212], %r6755;
	or.b32  	%r6756, %r6738, %r6733;
	shr.u32 	%r6757, %r6756, 4;
	or.b32  	%r6758, %r6757, %r6734;
	or.b32  	%r6759, %r6758, %r6739;
	st.local.u32 	[%rd12+216], %r6759;
	or.b32  	%r6760, %r6748, %r6743;
	shr.u32 	%r6761, %r6760, 4;
	or.b32  	%r6762, %r6761, %r6744;
	or.b32  	%r6763, %r6762, %r6749;
	st.local.u32 	[%rd12+220], %r6763;
	ld.local.v4.u32 	{%r6764, %r6765, %r6766, %r6767}, [%rd13+224];
	and.b32  	%r6772, %r6764, 1431655765;
	shl.b32 	%r6773, %r6764, 1;
	and.b32  	%r6774, %r6773, -1431655766;
	or.b32  	%r6775, %r6774, %r6772;
	and.b32  	%r6776, %r6764, -1431655766;
	shr.u32 	%r6777, %r6776, 1;
	or.b32  	%r6778, %r6777, %r6776;
	and.b32  	%r6779, %r6765, 1431655765;
	shl.b32 	%r6780, %r6765, 1;
	and.b32  	%r6781, %r6780, -1431655766;
	or.b32  	%r6782, %r6781, %r6779;
	and.b32  	%r6783, %r6765, -1431655766;
	shr.u32 	%r6784, %r6783, 1;
	or.b32  	%r6785, %r6784, %r6783;
	and.b32  	%r6786, %r6766, 1431655765;
	shl.b32 	%r6787, %r6766, 1;
	and.b32  	%r6788, %r6787, -1431655766;
	or.b32  	%r6789, %r6788, %r6786;
	and.b32  	%r6790, %r6766, -1431655766;
	shr.u32 	%r6791, %r6790, 1;
	or.b32  	%r6792, %r6791, %r6790;
	and.b32  	%r6793, %r6767, 1431655765;
	shl.b32 	%r6794, %r6767, 1;
	and.b32  	%r6795, %r6794, -1431655766;
	or.b32  	%r6796, %r6795, %r6793;
	and.b32  	%r6797, %r6767, -1431655766;
	shr.u32 	%r6798, %r6797, 1;
	or.b32  	%r6799, %r6798, %r6797;
	and.b32  	%r6800, %r6775, 858993459;
	shl.b32 	%r6801, %r6782, 2;
	and.b32  	%r6802, %r6801, -858993460;
	or.b32  	%r6803, %r6802, %r6800;
	and.b32  	%r6804, %r6775, -858993460;
	shr.u32 	%r6805, %r6804, 2;
	and.b32  	%r6806, %r6782, -858993460;
	or.b32  	%r6807, %r6805, %r6806;
	and.b32  	%r6808, %r6778, 858993459;
	shl.b32 	%r6809, %r6785, 2;
	and.b32  	%r6810, %r6809, -858993460;
	or.b32  	%r6811, %r6810, %r6808;
	and.b32  	%r6812, %r6778, -858993460;
	shr.u32 	%r6813, %r6812, 2;
	and.b32  	%r6814, %r6785, -858993460;
	or.b32  	%r6815, %r6813, %r6814;
	and.b32  	%r6816, %r6789, 858993459;
	shl.b32 	%r6817, %r6796, 2;
	and.b32  	%r6818, %r6817, -858993460;
	or.b32  	%r6819, %r6818, %r6816;
	and.b32  	%r6820, %r6789, -858993460;
	shr.u32 	%r6821, %r6820, 2;
	and.b32  	%r6822, %r6796, -858993460;
	or.b32  	%r6823, %r6821, %r6822;
	and.b32  	%r6824, %r6792, 858993459;
	shl.b32 	%r6825, %r6799, 2;
	and.b32  	%r6826, %r6825, -858993460;
	or.b32  	%r6827, %r6826, %r6824;
	and.b32  	%r6828, %r6792, -858993460;
	shr.u32 	%r6829, %r6828, 2;
	and.b32  	%r6830, %r6799, -858993460;
	or.b32  	%r6831, %r6829, %r6830;
	and.b32  	%r6832, %r6803, 84215045;
	shl.b32 	%r6833, %r6819, 4;
	and.b32  	%r6834, %r6833, 1347440720;
	and.b32  	%r6835, %r6803, 1347440720;
	and.b32  	%r6836, %r6819, 1347440720;
	and.b32  	%r6837, %r6811, 168430090;
	shl.b32 	%r6838, %r6827, 4;
	and.b32  	%r6839, %r6838, -1600085856;
	and.b32  	%r6840, %r6811, -1600085856;
	and.b32  	%r6841, %r6827, -1600085856;
	and.b32  	%r6842, %r6807, 84215045;
	shl.b32 	%r6843, %r6823, 4;
	and.b32  	%r6844, %r6843, 1347440720;
	and.b32  	%r6845, %r6807, 1347440720;
	and.b32  	%r6846, %r6823, 1347440720;
	and.b32  	%r6847, %r6815, 168430090;
	shl.b32 	%r6848, %r6831, 4;
	and.b32  	%r6849, %r6848, -1600085856;
	and.b32  	%r6850, %r6815, -1600085856;
	and.b32  	%r6851, %r6831, -1600085856;
	or.b32  	%r6852, %r6837, %r6832;
	or.b32  	%r6853, %r6852, %r6834;
	or.b32  	%r6854, %r6853, %r6839;
	st.local.u32 	[%rd12+224], %r6854;
	or.b32  	%r6855, %r6847, %r6842;
	or.b32  	%r6856, %r6855, %r6844;
	or.b32  	%r6857, %r6856, %r6849;
	st.local.u32 	[%rd12+228], %r6857;
	or.b32  	%r6858, %r6840, %r6835;
	shr.u32 	%r6859, %r6858, 4;
	or.b32  	%r6860, %r6859, %r6836;
	or.b32  	%r6861, %r6860, %r6841;
	st.local.u32 	[%rd12+232], %r6861;
	or.b32  	%r6862, %r6850, %r6845;
	shr.u32 	%r6863, %r6862, 4;
	or.b32  	%r6864, %r6863, %r6846;
	or.b32  	%r6865, %r6864, %r6851;
	st.local.u32 	[%rd12+236], %r6865;

$L__BB6_33:
	mov.u32 	%r12645, 0;
	st.local.u32 	[%rd12+720], %r12632;
	@%p20 bra 	$L__BB6_38;

	shl.b32 	%r6867, %r12632, 2;
	add.s32 	%r41, %r6867, 4;
	setp.eq.s32 	%p28, %r41, 0;
	mov.u32 	%r12645, %r12632;
	@%p28 bra 	$L__BB6_38;

	mov.u32 	%r12644, 0;
	mov.u64 	%rd9566, %rd12;
	mov.u64 	%rd9567, %rd12;

$L__BB6_36:
	ld.local.u32 	%r6869, [%rd9567];
	and.b32  	%r6870, %r6869, 1431655765;
	shl.b32 	%r6871, %r6869, 1;
	and.b32  	%r6872, %r6871, -1431655766;
	or.b32  	%r6873, %r6872, %r6870;
	st.local.u32 	[%rd9566+240], %r6873;
	and.b32  	%r6874, %r6869, -1431655766;
	shr.u32 	%r6875, %r6874, 1;
	or.b32  	%r6876, %r6875, %r6874;
	st.local.u32 	[%rd9566+244], %r6876;
	ld.local.u32 	%r6877, [%rd9567+4];
	and.b32  	%r6878, %r6877, 1431655765;
	shl.b32 	%r6879, %r6877, 1;
	and.b32  	%r6880, %r6879, -1431655766;
	or.b32  	%r6881, %r6880, %r6878;
	st.local.u32 	[%rd9566+248], %r6881;
	and.b32  	%r6882, %r6877, -1431655766;
	shr.u32 	%r6883, %r6882, 1;
	or.b32  	%r6884, %r6883, %r6882;
	st.local.u32 	[%rd9566+252], %r6884;
	ld.local.u32 	%r6885, [%rd9567+8];
	and.b32  	%r6886, %r6885, 1431655765;
	shl.b32 	%r6887, %r6885, 1;
	and.b32  	%r6888, %r6887, -1431655766;
	or.b32  	%r6889, %r6888, %r6886;
	st.local.u32 	[%rd9566+256], %r6889;
	and.b32  	%r6890, %r6885, -1431655766;
	shr.u32 	%r6891, %r6890, 1;
	or.b32  	%r6892, %r6891, %r6890;
	st.local.u32 	[%rd9566+260], %r6892;
	ld.local.u32 	%r6893, [%rd9567+12];
	and.b32  	%r6894, %r6893, 1431655765;
	shl.b32 	%r6895, %r6893, 1;
	and.b32  	%r6896, %r6895, -1431655766;
	or.b32  	%r6897, %r6896, %r6894;
	st.local.u32 	[%rd9566+264], %r6897;
	and.b32  	%r6898, %r6893, -1431655766;
	shr.u32 	%r6899, %r6898, 1;
	or.b32  	%r6900, %r6899, %r6898;
	st.local.u32 	[%rd9566+268], %r6900;
	add.s64 	%rd9567, %rd9567, 16;
	add.s64 	%rd9566, %rd9566, 32;
	add.s32 	%r12644, %r12644, 4;
	setp.lt.u32 	%p29, %r12644, %r41;
	@%p29 bra 	$L__BB6_36;

	ld.local.u32 	%r12645, [%rd12+720];

$L__BB6_38:
	ld.param.u64 	%rd9511, [Generate2013key_param_3];
	ld.const.u8 	%r6901, [%rd9511];
	ld.const.u8 	%r6902, [%rd9511+1];
	prmt.b32 	%r6903, %r6902, %r6901, 30212;
	ld.const.u8 	%r6904, [%rd9511+2];
	prmt.b32 	%r6905, %r6904, %r6903, 28756;
	ld.const.u8 	%r6906, [%rd9511+3];
	prmt.b32 	%r6907, %r6906, %r6905, 1620;
	ld.const.u8 	%r6908, [%rd9511+4];
	ld.const.u8 	%r6909, [%rd9511+5];
	prmt.b32 	%r6910, %r6909, %r6908, 30212;
	ld.const.u8 	%r6911, [%rd9511+6];
	prmt.b32 	%r6912, %r6911, %r6910, 28756;
	ld.const.u8 	%r6913, [%rd9511+7];
	prmt.b32 	%r6914, %r6913, %r6912, 1620;
	ld.const.u8 	%r6915, [%rd9511+8];
	ld.const.u8 	%r6916, [%rd9511+9];
	prmt.b32 	%r6917, %r6916, %r6915, 30212;
	ld.const.u8 	%r6918, [%rd9511+10];
	prmt.b32 	%r6919, %r6918, %r6917, 28756;
	ld.const.u8 	%r6920, [%rd9511+11];
	prmt.b32 	%r6921, %r6920, %r6919, 1620;
	ld.const.u8 	%r6922, [%rd9511+12];
	ld.const.u8 	%r6923, [%rd9511+13];
	prmt.b32 	%r6924, %r6923, %r6922, 30212;
	ld.const.u8 	%r6925, [%rd9511+14];
	prmt.b32 	%r6926, %r6925, %r6924, 28756;
	ld.const.u8 	%r6927, [%rd9511+15];
	prmt.b32 	%r6928, %r6927, %r6926, 1620;
	and.b32  	%r6929, %r6907, -1431655766;
	shr.u32 	%r6930, %r6929, 3;
	shr.u32 	%r6931, %r6929, 1;
	and.b32  	%r6932, %r6914, -2004318072;
	and.b32  	%r6933, %r6921, -1431655766;
	shr.u32 	%r6934, %r6933, 3;
	shr.u32 	%r6935, %r6933, 1;
	and.b32  	%r6936, %r6928, -2004318072;
	and.b32  	%r6937, %r6907, 286331153;
	shl.b32 	%r6938, %r6914, 2;
	and.b32  	%r6939, %r6938, 1145324612;
	or.b32  	%r6940, %r6939, %r6937;
	and.b32  	%r6941, %r6907, 1145324612;
	shr.u32 	%r6942, %r6941, 2;
	and.b32  	%r6943, %r6914, 1145324612;
	or.b32  	%r6944, %r6942, %r6943;
	and.b32  	%r6945, %r6931, 286331153;
	shl.b32 	%r6946, %r6914, 1;
	and.b32  	%r6947, %r6946, 1145324612;
	or.b32  	%r6948, %r6947, %r6945;
	and.b32  	%r6949, %r6930, 286331153;
	shr.u32 	%r6950, %r6932, 1;
	or.b32  	%r6951, %r6949, %r6950;
	and.b32  	%r6952, %r6921, 286331153;
	shl.b32 	%r6953, %r6928, 2;
	and.b32  	%r6954, %r6953, 1145324612;
	or.b32  	%r6955, %r6954, %r6952;
	and.b32  	%r6956, %r6921, 1145324612;
	shr.u32 	%r6957, %r6956, 2;
	and.b32  	%r6958, %r6928, 1145324612;
	or.b32  	%r6959, %r6957, %r6958;
	and.b32  	%r6960, %r6935, 286331153;
	shl.b32 	%r6961, %r6928, 1;
	and.b32  	%r6962, %r6961, 1145324612;
	or.b32  	%r6963, %r6962, %r6960;
	and.b32  	%r6964, %r6934, 286331153;
	shr.u32 	%r6965, %r6936, 1;
	or.b32  	%r6966, %r6964, %r6965;
	and.b32  	%r6967, %r6940, 84215045;
	shl.b32 	%r6968, %r6955, 4;
	and.b32  	%r6969, %r6968, 1347440720;
	or.b32  	%r6970, %r6969, %r6967;
	and.b32  	%r6971, %r6940, 1347440720;
	shr.u32 	%r6972, %r6971, 4;
	and.b32  	%r6973, %r6955, 1347440720;
	or.b32  	%r6974, %r6972, %r6973;
	and.b32  	%r6975, %r6948, 84215045;
	shl.b32 	%r6976, %r6963, 4;
	and.b32  	%r6977, %r6976, 1347440720;
	or.b32  	%r6978, %r6977, %r6975;
	and.b32  	%r6979, %r6948, 1347440720;
	shr.u32 	%r6980, %r6979, 4;
	and.b32  	%r6981, %r6963, 1347440720;
	or.b32  	%r6982, %r6980, %r6981;
	and.b32  	%r6983, %r6944, 84215045;
	shl.b32 	%r6984, %r6959, 4;
	and.b32  	%r6985, %r6984, 1347440720;
	or.b32  	%r6986, %r6985, %r6983;
	and.b32  	%r6987, %r6944, 1347440720;
	shr.u32 	%r6988, %r6987, 4;
	and.b32  	%r6989, %r6959, 1347440720;
	or.b32  	%r6990, %r6988, %r6989;
	and.b32  	%r6991, %r6951, 84215045;
	shl.b32 	%r6992, %r6966, 4;
	and.b32  	%r6993, %r6992, 1347440720;
	or.b32  	%r6994, %r6993, %r6991;
	and.b32  	%r6995, %r6951, 1347440720;
	shr.u32 	%r6996, %r6995, 4;
	and.b32  	%r6997, %r6966, 1347440720;
	or.b32  	%r6998, %r6996, %r6997;
	shl.b32 	%r6999, %r12645, 3;
	mul.wide.u32 	%rd6764, %r6999, 4;
	add.s64 	%rd6765, %rd12, %rd6764;
	ld.local.u32 	%r7000, [%rd6765+240];
	xor.b32  	%r12655, %r6970, %r7000;
	ld.local.u32 	%r7001, [%rd6765+244];
	xor.b32  	%r12656, %r6978, %r7001;
	ld.local.u32 	%r7002, [%rd6765+248];
	xor.b32  	%r12657, %r6986, %r7002;
	ld.local.u32 	%r7003, [%rd6765+252];
	xor.b32  	%r12658, %r6994, %r7003;
	ld.local.u32 	%r7004, [%rd6765+256];
	xor.b32  	%r12659, %r6974, %r7004;
	ld.local.u32 	%r7005, [%rd6765+260];
	xor.b32  	%r12660, %r6982, %r7005;
	ld.local.u32 	%r7006, [%rd6765+264];
	xor.b32  	%r12661, %r6990, %r7006;
	ld.local.u32 	%r7007, [%rd6765+268];
	xor.b32  	%r12662, %r6998, %r7007;
	add.s32 	%r12654, %r12645, -1;
	setp.eq.s32 	%p30, %r12654, 0;
	@%p30 bra 	$L__BB6_40;

$L__BB6_39:
	shl.b32 	%r7008, %r12655, 2;
	and.b32  	%r7009, %r7008, 64512;
	and.b32  	%r7010, %r12655, 255;
	or.b32  	%r7011, %r7009, %r7010;
	and.b32  	%r7012, %r12655, 49152;
	shr.u32 	%r7013, %r7012, 6;
	or.b32  	%r7014, %r7011, %r7013;
	shl.b32 	%r7015, %r12655, 4;
	and.b32  	%r7016, %r7015, 15728640;
	or.b32  	%r7017, %r7014, %r7016;
	and.b32  	%r7018, %r12655, 15728640;
	shr.u32 	%r7019, %r7018, 4;
	or.b32  	%r7020, %r7017, %r7019;
	shl.b32 	%r7021, %r12655, 6;
	and.b32  	%r7022, %r7021, -1073741824;
	or.b32  	%r7023, %r7020, %r7022;
	and.b32  	%r7024, %r12655, -67108864;
	shr.u32 	%r7025, %r7024, 2;
	or.b32  	%r7026, %r7023, %r7025;
	shl.b32 	%r7027, %r12656, 2;
	and.b32  	%r7028, %r7027, 64512;
	and.b32  	%r7029, %r12656, 255;
	or.b32  	%r7030, %r7028, %r7029;
	and.b32  	%r7031, %r12656, 49152;
	shr.u32 	%r7032, %r7031, 6;
	or.b32  	%r7033, %r7030, %r7032;
	shl.b32 	%r7034, %r12656, 4;
	and.b32  	%r7035, %r7034, 15728640;
	or.b32  	%r7036, %r7033, %r7035;
	and.b32  	%r7037, %r12656, 15728640;
	shr.u32 	%r7038, %r7037, 4;
	or.b32  	%r7039, %r7036, %r7038;
	shl.b32 	%r7040, %r12656, 6;
	and.b32  	%r7041, %r7040, -1073741824;
	or.b32  	%r7042, %r7039, %r7041;
	and.b32  	%r7043, %r12656, -67108864;
	shr.u32 	%r7044, %r7043, 2;
	or.b32  	%r7045, %r7042, %r7044;
	shl.b32 	%r7046, %r12657, 2;
	and.b32  	%r7047, %r7046, 64512;
	and.b32  	%r7048, %r12657, 255;
	or.b32  	%r7049, %r7047, %r7048;
	and.b32  	%r7050, %r12657, 49152;
	shr.u32 	%r7051, %r7050, 6;
	or.b32  	%r7052, %r7049, %r7051;
	shl.b32 	%r7053, %r12657, 4;
	and.b32  	%r7054, %r7053, 15728640;
	or.b32  	%r7055, %r7052, %r7054;
	and.b32  	%r7056, %r12657, 15728640;
	shr.u32 	%r7057, %r7056, 4;
	or.b32  	%r7058, %r7055, %r7057;
	shl.b32 	%r7059, %r12657, 6;
	and.b32  	%r7060, %r7059, -1073741824;
	or.b32  	%r7061, %r7058, %r7060;
	and.b32  	%r7062, %r12657, -67108864;
	shr.u32 	%r7063, %r7062, 2;
	or.b32  	%r7064, %r7061, %r7063;
	shl.b32 	%r7065, %r12658, 2;
	and.b32  	%r7066, %r7065, 64512;
	and.b32  	%r7067, %r12658, 255;
	or.b32  	%r7068, %r7066, %r7067;
	and.b32  	%r7069, %r12658, 49152;
	shr.u32 	%r7070, %r7069, 6;
	or.b32  	%r7071, %r7068, %r7070;
	shl.b32 	%r7072, %r12658, 4;
	and.b32  	%r7073, %r7072, 15728640;
	or.b32  	%r7074, %r7071, %r7073;
	and.b32  	%r7075, %r12658, 15728640;
	shr.u32 	%r7076, %r7075, 4;
	or.b32  	%r7077, %r7074, %r7076;
	shl.b32 	%r7078, %r12658, 6;
	and.b32  	%r7079, %r7078, -1073741824;
	or.b32  	%r7080, %r7077, %r7079;
	and.b32  	%r7081, %r12658, -67108864;
	shr.u32 	%r7082, %r7081, 2;
	or.b32  	%r7083, %r7080, %r7082;
	shl.b32 	%r7084, %r12659, 2;
	and.b32  	%r7085, %r7084, 64512;
	and.b32  	%r7086, %r12659, 255;
	or.b32  	%r7087, %r7085, %r7086;
	and.b32  	%r7088, %r12659, 49152;
	shr.u32 	%r7089, %r7088, 6;
	or.b32  	%r7090, %r7087, %r7089;
	shl.b32 	%r7091, %r12659, 4;
	and.b32  	%r7092, %r7091, 15728640;
	or.b32  	%r7093, %r7090, %r7092;
	and.b32  	%r7094, %r12659, 15728640;
	shr.u32 	%r7095, %r7094, 4;
	or.b32  	%r7096, %r7093, %r7095;
	shl.b32 	%r7097, %r12659, 6;
	and.b32  	%r7098, %r7097, -1073741824;
	or.b32  	%r7099, %r7096, %r7098;
	and.b32  	%r7100, %r12659, -67108864;
	shr.u32 	%r7101, %r7100, 2;
	or.b32  	%r7102, %r7099, %r7101;
	shl.b32 	%r7103, %r12660, 2;
	and.b32  	%r7104, %r7103, 64512;
	and.b32  	%r7105, %r12660, 255;
	or.b32  	%r7106, %r7104, %r7105;
	and.b32  	%r7107, %r12660, 49152;
	shr.u32 	%r7108, %r7107, 6;
	or.b32  	%r7109, %r7106, %r7108;
	shl.b32 	%r7110, %r12660, 4;
	and.b32  	%r7111, %r7110, 15728640;
	or.b32  	%r7112, %r7109, %r7111;
	and.b32  	%r7113, %r12660, 15728640;
	shr.u32 	%r7114, %r7113, 4;
	or.b32  	%r7115, %r7112, %r7114;
	shl.b32 	%r7116, %r12660, 6;
	and.b32  	%r7117, %r7116, -1073741824;
	or.b32  	%r7118, %r7115, %r7117;
	and.b32  	%r7119, %r12660, -67108864;
	shr.u32 	%r7120, %r7119, 2;
	or.b32  	%r7121, %r7118, %r7120;
	shl.b32 	%r7122, %r12661, 2;
	and.b32  	%r7123, %r7122, 64512;
	and.b32  	%r7124, %r12661, 255;
	or.b32  	%r7125, %r7123, %r7124;
	and.b32  	%r7126, %r12661, 49152;
	shr.u32 	%r7127, %r7126, 6;
	or.b32  	%r7128, %r7125, %r7127;
	shl.b32 	%r7129, %r12661, 4;
	and.b32  	%r7130, %r7129, 15728640;
	or.b32  	%r7131, %r7128, %r7130;
	and.b32  	%r7132, %r12661, 15728640;
	shr.u32 	%r7133, %r7132, 4;
	or.b32  	%r7134, %r7131, %r7133;
	shl.b32 	%r7135, %r12661, 6;
	and.b32  	%r7136, %r7135, -1073741824;
	or.b32  	%r7137, %r7134, %r7136;
	and.b32  	%r7138, %r12661, -67108864;
	shr.u32 	%r7139, %r7138, 2;
	or.b32  	%r7140, %r7137, %r7139;
	shl.b32 	%r7141, %r12662, 2;
	and.b32  	%r7142, %r7141, 64512;
	and.b32  	%r7143, %r12662, 255;
	or.b32  	%r7144, %r7142, %r7143;
	and.b32  	%r7145, %r12662, 49152;
	shr.u32 	%r7146, %r7145, 6;
	or.b32  	%r7147, %r7144, %r7146;
	shl.b32 	%r7148, %r12662, 4;
	and.b32  	%r7149, %r7148, 15728640;
	or.b32  	%r7150, %r7147, %r7149;
	and.b32  	%r7151, %r12662, 15728640;
	shr.u32 	%r7152, %r7151, 4;
	or.b32  	%r7153, %r7150, %r7152;
	shl.b32 	%r7154, %r12662, 6;
	and.b32  	%r7155, %r7154, -1073741824;
	or.b32  	%r7156, %r7153, %r7155;
	and.b32  	%r7157, %r12662, -67108864;
	shr.u32 	%r7158, %r7157, 2;
	or.b32  	%r7159, %r7156, %r7158;
	xor.b32  	%r7160, %r7083, %r7026;
	xor.b32  	%r7161, %r7102, %r7045;
	not.b32 	%r7162, %r7121;
	not.b32 	%r7163, %r7140;
	not.b32 	%r7164, %r7161;
	xor.b32  	%r7165, %r7164, %r7163;
	not.b32 	%r7166, %r7160;
	xor.b32  	%r7167, %r7166, %r7162;
	xor.b32  	%r7168, %r7102, %r7064;
	xor.b32  	%r7169, %r7168, %r7159;
	xor.b32  	%r7170, %r7083, %r7045;
	xor.b32  	%r7171, %r7170, %r7140;
	xor.b32  	%r7172, %r7064, %r7026;
	xor.b32  	%r7173, %r7172, %r7121;
	xor.b32  	%r7174, %r7164, %r7159;
	xor.b32  	%r7175, %r7166, %r7163;
	xor.b32  	%r7176, %r7064, %r7162;
	xor.b32  	%r7177, %r7176, %r7159;
	xor.b32  	%r7178, %r7174, %r7171;
	xor.b32  	%r7179, %r7166, %r7164;
	xor.b32  	%r7180, %r7171, %r7165;
	xor.b32  	%r7181, %r7159, %r7163;
	xor.b32  	%r7182, %r7169, %r7167;
	xor.b32  	%r7183, %r7177, %r7182;
	xor.b32  	%r7184, %r7183, %r7171;
	xor.b32  	%r7185, %r7179, %r7178;
	xor.b32  	%r7186, %r7183, %r7165;
	xor.b32  	%r7187, %r7183, %r7175;
	xor.b32  	%r7188, %r7187, %r7181;
	xor.b32  	%r7189, %r7185, %r7173;
	xor.b32  	%r7190, %r7189, %r7174;
	xor.b32  	%r7191, %r7189, %r7167;
	xor.b32  	%r7192, %r7190, %r7177;
	xor.b32  	%r7193, %r7190, %r7182;
	xor.b32  	%r7194, %r7191, %r7180;
	xor.b32  	%r7195, %r7194, %r7177;
	xor.b32  	%r7196, %r7193, %r7194;
	xor.b32  	%r7197, %r7194, %r7182;
	and.b32  	%r7198, %r7190, %r7185;
	and.b32  	%r7199, %r7192, %r7188;
	and.b32  	%r7200, %r7184, %r7177;
	and.b32  	%r7201, %r7197, %r7179;
	and.b32  	%r7202, %r7187, %r7183;
	and.b32  	%r7203, %r7195, %r7186;
	and.b32  	%r7204, %r7194, %r7180;
	and.b32  	%r7205, %r7196, %r7178;
	xor.b32  	%r7206, %r7205, %r7204;
	and.b32  	%r7207, %r7193, %r7181;
	xor.b32  	%r7208, %r7207, %r7204;
	xor.b32  	%r7209, %r7198, %r7191;
	xor.b32  	%r7210, %r7209, %r7199;
	xor.b32  	%r7211, %r7210, %r7206;
	xor.b32  	%r7212, %r7200, %r7181;
	xor.b32  	%r7213, %r7212, %r7193;
	xor.b32  	%r7214, %r7213, %r7198;
	xor.b32  	%r7215, %r7214, %r7208;
	xor.b32  	%r7216, %r7202, %r7179;
	xor.b32  	%r7217, %r7216, %r7197;
	xor.b32  	%r7218, %r7217, %r7201;
	xor.b32  	%r7219, %r7218, %r7206;
	xor.b32  	%r7220, %r7197, %r7165;
	xor.b32  	%r7221, %r7220, %r7201;
	xor.b32  	%r7222, %r7221, %r7203;
	xor.b32  	%r7223, %r7222, %r7208;
	xor.b32  	%r7224, %r7211, %r7215;
	and.b32  	%r7225, %r7211, %r7219;
	xor.b32  	%r7226, %r7225, %r7223;
	and.b32  	%r7227, %r7226, %r7224;
	xor.b32  	%r7228, %r7227, %r7215;
	xor.b32  	%r7229, %r7219, %r7223;
	xor.b32  	%r7230, %r7225, %r7215;
	and.b32  	%r7231, %r7230, %r7229;
	xor.b32  	%r7232, %r7231, %r7223;
	xor.b32  	%r7233, %r7232, %r7219;
	xor.b32  	%r7234, %r7231, %r7225;
	and.b32  	%r7235, %r7234, %r7223;
	xor.b32  	%r7236, %r7233, %r7235;
	xor.b32  	%r7237, %r7235, %r7226;
	and.b32  	%r7238, %r7237, %r7228;
	xor.b32  	%r7239, %r7238, %r7224;
	xor.b32  	%r7240, %r7239, %r7236;
	xor.b32  	%r7241, %r7228, %r7232;
	xor.b32  	%r7242, %r7239, %r7228;
	xor.b32  	%r7243, %r7235, %r7219;
	xor.b32  	%r7244, %r7240, %r7241;
	and.b32  	%r7245, %r7243, %r7190;
	and.b32  	%r7246, %r7236, %r7192;
	and.b32  	%r7247, %r7232, %r7177;
	and.b32  	%r7248, %r7242, %r7197;
	and.b32  	%r7249, %r7239, %r7183;
	and.b32  	%r7250, %r7228, %r7195;
	and.b32  	%r7251, %r7241, %r7194;
	and.b32  	%r7252, %r7244, %r7196;
	and.b32  	%r7253, %r7240, %r7193;
	and.b32  	%r7254, %r7243, %r7185;
	and.b32  	%r7255, %r7236, %r7188;
	and.b32  	%r7256, %r7232, %r7184;
	and.b32  	%r7257, %r7242, %r7179;
	and.b32  	%r7258, %r7239, %r7187;
	and.b32  	%r7259, %r7228, %r7186;
	and.b32  	%r7260, %r7241, %r7180;
	and.b32  	%r7261, %r7244, %r7178;
	and.b32  	%r7262, %r7240, %r7181;
	xor.b32  	%r7263, %r7261, %r7260;
	xor.b32  	%r7264, %r7255, %r7256;
	xor.b32  	%r7265, %r7258, %r7250;
	xor.b32  	%r7266, %r7254, %r7255;
	xor.b32  	%r7267, %r7257, %r7247;
	xor.b32  	%r7268, %r7247, %r7250;
	xor.b32  	%r7269, %r7252, %r7253;
	xor.b32  	%r7270, %r7248, %r7245;
	xor.b32  	%r7271, %r7257, %r7265;
	xor.b32  	%r7272, %r7267, %r7270;
	xor.b32  	%r7273, %r7263, %r7249;
	xor.b32  	%r7274, %r7248, %r7251;
	xor.b32  	%r7275, %r7274, %r7252;
	xor.b32  	%r7276, %r7263, %r7272;
	xor.b32  	%r7277, %r7272, %r7259;
	xor.b32  	%r7278, %r7269, %r7273;
	xor.b32  	%r7279, %r7266, %r7273;
	xor.b32  	%r7280, %r7275, %r7249;
	xor.b32  	%r7281, %r7277, %r7278;
	xor.b32  	%r7282, %r7279, %r7246;
	xor.b32  	%r7283, %r7279, %r7275;
	xor.b32  	%r7284, %r7282, %r7270;
	xor.b32  	%r7285, %r7278, %r7271;
	xor.b32  	%r7286, %r7284, %r7280;
	xor.b32  	%r7287, %r7285, %r7286;
	xor.b32  	%r7288, %r7264, %r7281;
	xor.b32  	%r7289, %r7261, %r7262;
	xor.b32  	%r7290, %r7289, %r7280;
	xor.b32  	%r7291, %r7276, %r7265;
	xor.b32  	%r7292, %r7290, %r7281;
	xor.b32  	%r7293, %r7291, %r7292;
	xor.b32  	%r7294, %r7293, %r7288;
	xor.b32  	%r7295, %r7268, %r7282;
	xor.b32  	%r7296, %r7287, %r7295;
	xor.b32  	%r7297, %r7280, %r7285;
	xor.b32  	%r7298, %r7293, %r7295;
	xor.b32  	%r7299, %r7283, %r7284;
	xor.b32  	%r7300, %r7299, %r7288;
	xor.b32  	%r7301, %r7299, %r7285;
	xor.b32  	%r7302, %r7291, %r7286;
	xor.b32  	%r7303, %r7302, %r7295;
	xor.b32  	%r7304, %r7283, %r7292;
	xor.b32  	%r7305, %r7304, %r7288;
	shl.b32 	%r7306, %r12654, 3;
	mul.wide.u32 	%rd6766, %r7306, 4;
	add.s64 	%rd6767, %rd12, %rd6766;
	ld.local.u32 	%r7307, [%rd6767+240];
	xor.b32  	%r7308, %r7305, %r7307;
	ld.local.u32 	%r7309, [%rd6767+244];
	xor.b32  	%r7310, %r7303, %r7309;
	ld.local.u32 	%r7311, [%rd6767+248];
	xor.b32  	%r7312, %r7301, %r7311;
	ld.local.u32 	%r7313, [%rd6767+252];
	xor.b32  	%r7314, %r7294, %r7313;
	ld.local.u32 	%r7315, [%rd6767+256];
	xor.b32  	%r7316, %r7296, %r7315;
	ld.local.u32 	%r7317, [%rd6767+260];
	xor.b32  	%r7318, %r7300, %r7317;
	ld.local.u32 	%r7319, [%rd6767+264];
	xor.b32  	%r7320, %r7298, %r7319;
	ld.local.u32 	%r7321, [%rd6767+268];
	xor.b32  	%r7322, %r7297, %r7321;
	shf.l.wrap.b32 	%r7323, %r7308, %r7308, 24;
	shf.l.wrap.b32 	%r7324, %r7310, %r7310, 24;
	shf.l.wrap.b32 	%r7325, %r7312, %r7312, 24;
	shf.l.wrap.b32 	%r7326, %r7314, %r7314, 24;
	shf.l.wrap.b32 	%r7327, %r7316, %r7316, 24;
	shf.l.wrap.b32 	%r7328, %r7318, %r7318, 24;
	shf.l.wrap.b32 	%r7329, %r7320, %r7320, 24;
	shf.l.wrap.b32 	%r7330, %r7322, %r7322, 24;
	xor.b32  	%r7331, %r7318, %r7308;
	xor.b32  	%r7332, %r7320, %r7323;
	xor.b32  	%r7333, %r7332, %r7331;
	xor.b32  	%r7334, %r7333, %r7328;
	shf.l.wrap.b32 	%r7335, %r7334, %r7334, 16;
	xor.b32  	%r7336, %r7318, %r7323;
	xor.b32  	%r7337, %r7336, %r7320;
	xor.b32  	%r7338, %r7337, %r7322;
	xor.b32  	%r7339, %r7338, %r7328;
	xor.b32  	%r7340, %r7339, %r7330;
	xor.b32  	%r12655, %r7340, %r7335;
	xor.b32  	%r7341, %r7324, %r7310;
	xor.b32  	%r7342, %r7341, %r7318;
	xor.b32  	%r7343, %r7342, %r7322;
	xor.b32  	%r7344, %r7343, %r7328;
	xor.b32  	%r7345, %r7344, %r7329;
	shf.l.wrap.b32 	%r7346, %r7345, %r7345, 16;
	xor.b32  	%r7347, %r7324, %r7323;
	xor.b32  	%r7348, %r7347, %r7331;
	xor.b32  	%r7349, %r7348, %r7328;
	xor.b32  	%r7350, %r7349, %r7329;
	xor.b32  	%r7351, %r7350, %r7330;
	xor.b32  	%r12656, %r7351, %r7346;
	xor.b32  	%r7352, %r7310, %r7308;
	xor.b32  	%r7353, %r7312, %r7308;
	xor.b32  	%r7354, %r7353, %r7325;
	xor.b32  	%r7355, %r7354, %r7320;
	xor.b32  	%r7356, %r7355, %r7329;
	xor.b32  	%r7357, %r7356, %r7330;
	shf.l.wrap.b32 	%r7358, %r7357, %r7357, 16;
	xor.b32  	%r7359, %r7324, %r7352;
	xor.b32  	%r7360, %r7359, %r7325;
	xor.b32  	%r7361, %r7360, %r7320;
	xor.b32  	%r7362, %r7361, %r7329;
	xor.b32  	%r7363, %r7362, %r7330;
	xor.b32  	%r12657, %r7363, %r7358;
	xor.b32  	%r7364, %r7352, %r7312;
	xor.b32  	%r7365, %r7323, %r7352;
	xor.b32  	%r7366, %r7365, %r7314;
	xor.b32  	%r7367, %r7366, %r7318;
	xor.b32  	%r7368, %r7367, %r7326;
	xor.b32  	%r7369, %r7368, %r7320;
	xor.b32  	%r7370, %r7369, %r7322;
	xor.b32  	%r7371, %r7370, %r7328;
	xor.b32  	%r7372, %r7371, %r7330;
	shf.l.wrap.b32 	%r7373, %r7372, %r7372, 16;
	xor.b32  	%r7374, %r7364, %r7323;
	xor.b32  	%r7375, %r7374, %r7325;
	xor.b32  	%r7376, %r7375, %r7318;
	xor.b32  	%r7377, %r7376, %r7326;
	xor.b32  	%r7378, %r7377, %r7320;
	xor.b32  	%r7379, %r7378, %r7328;
	xor.b32  	%r12658, %r7379, %r7373;
	xor.b32  	%r7380, %r7312, %r7310;
	xor.b32  	%r7381, %r7380, %r7314;
	xor.b32  	%r7382, %r7324, %r7380;
	xor.b32  	%r7383, %r7382, %r7316;
	xor.b32  	%r7384, %r7383, %r7318;
	xor.b32  	%r7385, %r7384, %r7327;
	xor.b32  	%r7386, %r7385, %r7322;
	xor.b32  	%r7387, %r7386, %r7328;
	xor.b32  	%r7388, %r7387, %r7329;
	shf.l.wrap.b32 	%r7389, %r7388, %r7388, 16;
	xor.b32  	%r7390, %r7381, %r7324;
	xor.b32  	%r7391, %r7390, %r7318;
	xor.b32  	%r7392, %r7391, %r7326;
	xor.b32  	%r7393, %r7392, %r7327;
	xor.b32  	%r7394, %r7393, %r7328;
	xor.b32  	%r7395, %r7394, %r7329;
	xor.b32  	%r7396, %r7395, %r7330;
	xor.b32  	%r12659, %r7396, %r7389;
	xor.b32  	%r7397, %r7314, %r7312;
	xor.b32  	%r7398, %r7397, %r7316;
	xor.b32  	%r7399, %r7325, %r7397;
	xor.b32  	%r7400, %r7399, %r7318;
	xor.b32  	%r7401, %r7400, %r7320;
	xor.b32  	%r7402, %r7401, %r7328;
	xor.b32  	%r7403, %r7402, %r7329;
	xor.b32  	%r7404, %r7403, %r7330;
	shf.l.wrap.b32 	%r7405, %r7404, %r7404, 16;
	xor.b32  	%r7406, %r7398, %r7325;
	xor.b32  	%r7407, %r7406, %r7320;
	xor.b32  	%r7408, %r7407, %r7327;
	xor.b32  	%r7409, %r7408, %r7328;
	xor.b32  	%r7410, %r7409, %r7329;
	xor.b32  	%r7411, %r7410, %r7330;
	xor.b32  	%r12660, %r7411, %r7405;
	xor.b32  	%r7412, %r7316, %r7314;
	xor.b32  	%r7413, %r7412, %r7318;
	xor.b32  	%r7414, %r7326, %r7412;
	xor.b32  	%r7415, %r7414, %r7320;
	xor.b32  	%r7416, %r7415, %r7322;
	xor.b32  	%r7417, %r7416, %r7329;
	xor.b32  	%r7418, %r7417, %r7330;
	shf.l.wrap.b32 	%r7419, %r7418, %r7418, 16;
	xor.b32  	%r7420, %r7413, %r7326;
	xor.b32  	%r7421, %r7420, %r7322;
	xor.b32  	%r7422, %r7421, %r7328;
	xor.b32  	%r7423, %r7422, %r7329;
	xor.b32  	%r7424, %r7423, %r7330;
	xor.b32  	%r12661, %r7424, %r7419;
	xor.b32  	%r7425, %r7318, %r7316;
	xor.b32  	%r7426, %r7425, %r7320;
	xor.b32  	%r7427, %r7426, %r7327;
	xor.b32  	%r7428, %r7427, %r7329;
	xor.b32  	%r7429, %r7428, %r7330;
	xor.b32  	%r7430, %r7327, %r7425;
	xor.b32  	%r7431, %r7430, %r7322;
	xor.b32  	%r7432, %r7431, %r7330;
	shf.l.wrap.b32 	%r7433, %r7432, %r7432, 16;
	xor.b32  	%r12662, %r7429, %r7433;
	add.s32 	%r12654, %r12654, -1;
	setp.ne.s32 	%p31, %r12654, 0;
	@%p31 bra 	$L__BB6_39;

$L__BB6_40:
	ld.param.u64 	%rd9516, [Generate2013key_param_2];
	add.s64 	%rd9515, %rd9516, 32;
	ld.const.u32 	%r12629, [%rd9515+-8];
	shr.u32 	%r12628, %r12629, 3;
	setp.eq.s32 	%p117, %r12628, 16;
	ld.param.u64 	%rd9514, [Generate2013key_param_3];
	add.u64 	%rd9512, %SPL, 736;
	mov.b32 	%r12589, {%rs44, %rs45};
	mov.b32 	%r12588, {%rs42, %rs43};
	add.s64 	%rd141, %rd9512, 128;
	shl.b32 	%r7436, %r12655, 2;
	and.b32  	%r7437, %r7436, 64512;
	and.b32  	%r7438, %r12655, 255;
	or.b32  	%r7439, %r7437, %r7438;
	and.b32  	%r7440, %r12655, 49152;
	shr.u32 	%r7441, %r7440, 6;
	or.b32  	%r7442, %r7439, %r7441;
	shl.b32 	%r7443, %r12655, 4;
	and.b32  	%r7444, %r7443, 15728640;
	or.b32  	%r7445, %r7442, %r7444;
	and.b32  	%r7446, %r12655, 15728640;
	shr.u32 	%r7447, %r7446, 4;
	or.b32  	%r7448, %r7445, %r7447;
	shl.b32 	%r7449, %r12655, 6;
	and.b32  	%r7450, %r7449, -1073741824;
	or.b32  	%r7451, %r7448, %r7450;
	and.b32  	%r7452, %r12655, -67108864;
	shr.u32 	%r7453, %r7452, 2;
	or.b32  	%r7454, %r7451, %r7453;
	shl.b32 	%r7455, %r12656, 2;
	and.b32  	%r7456, %r7455, 64512;
	and.b32  	%r7457, %r12656, 255;
	or.b32  	%r7458, %r7456, %r7457;
	and.b32  	%r7459, %r12656, 49152;
	shr.u32 	%r7460, %r7459, 6;
	or.b32  	%r7461, %r7458, %r7460;
	shl.b32 	%r7462, %r12656, 4;
	and.b32  	%r7463, %r7462, 15728640;
	or.b32  	%r7464, %r7461, %r7463;
	and.b32  	%r7465, %r12656, 15728640;
	shr.u32 	%r7466, %r7465, 4;
	or.b32  	%r7467, %r7464, %r7466;
	shl.b32 	%r7468, %r12656, 6;
	and.b32  	%r7469, %r7468, -1073741824;
	or.b32  	%r7470, %r7467, %r7469;
	and.b32  	%r7471, %r12656, -67108864;
	shr.u32 	%r7472, %r7471, 2;
	or.b32  	%r7473, %r7470, %r7472;
	shl.b32 	%r7474, %r12657, 2;
	and.b32  	%r7475, %r7474, 64512;
	and.b32  	%r7476, %r12657, 255;
	or.b32  	%r7477, %r7475, %r7476;
	and.b32  	%r7478, %r12657, 49152;
	shr.u32 	%r7479, %r7478, 6;
	or.b32  	%r7480, %r7477, %r7479;
	shl.b32 	%r7481, %r12657, 4;
	and.b32  	%r7482, %r7481, 15728640;
	or.b32  	%r7483, %r7480, %r7482;
	and.b32  	%r7484, %r12657, 15728640;
	shr.u32 	%r7485, %r7484, 4;
	or.b32  	%r7486, %r7483, %r7485;
	shl.b32 	%r7487, %r12657, 6;
	and.b32  	%r7488, %r7487, -1073741824;
	or.b32  	%r7489, %r7486, %r7488;
	and.b32  	%r7490, %r12657, -67108864;
	shr.u32 	%r7491, %r7490, 2;
	or.b32  	%r7492, %r7489, %r7491;
	shl.b32 	%r7493, %r12658, 2;
	and.b32  	%r7494, %r7493, 64512;
	and.b32  	%r7495, %r12658, 255;
	or.b32  	%r7496, %r7494, %r7495;
	and.b32  	%r7497, %r12658, 49152;
	shr.u32 	%r7498, %r7497, 6;
	or.b32  	%r7499, %r7496, %r7498;
	shl.b32 	%r7500, %r12658, 4;
	and.b32  	%r7501, %r7500, 15728640;
	or.b32  	%r7502, %r7499, %r7501;
	and.b32  	%r7503, %r12658, 15728640;
	shr.u32 	%r7504, %r7503, 4;
	or.b32  	%r7505, %r7502, %r7504;
	shl.b32 	%r7506, %r12658, 6;
	and.b32  	%r7507, %r7506, -1073741824;
	or.b32  	%r7508, %r7505, %r7507;
	and.b32  	%r7509, %r12658, -67108864;
	shr.u32 	%r7510, %r7509, 2;
	or.b32  	%r7511, %r7508, %r7510;
	shl.b32 	%r7512, %r12659, 2;
	and.b32  	%r7513, %r7512, 64512;
	and.b32  	%r7514, %r12659, 255;
	or.b32  	%r7515, %r7513, %r7514;
	and.b32  	%r7516, %r12659, 49152;
	shr.u32 	%r7517, %r7516, 6;
	or.b32  	%r7518, %r7515, %r7517;
	shl.b32 	%r7519, %r12659, 4;
	and.b32  	%r7520, %r7519, 15728640;
	or.b32  	%r7521, %r7518, %r7520;
	and.b32  	%r7522, %r12659, 15728640;
	shr.u32 	%r7523, %r7522, 4;
	or.b32  	%r7524, %r7521, %r7523;
	shl.b32 	%r7525, %r12659, 6;
	and.b32  	%r7526, %r7525, -1073741824;
	or.b32  	%r7527, %r7524, %r7526;
	and.b32  	%r7528, %r12659, -67108864;
	shr.u32 	%r7529, %r7528, 2;
	or.b32  	%r7530, %r7527, %r7529;
	shl.b32 	%r7531, %r12660, 2;
	and.b32  	%r7532, %r7531, 64512;
	and.b32  	%r7533, %r12660, 255;
	or.b32  	%r7534, %r7532, %r7533;
	and.b32  	%r7535, %r12660, 49152;
	shr.u32 	%r7536, %r7535, 6;
	or.b32  	%r7537, %r7534, %r7536;
	shl.b32 	%r7538, %r12660, 4;
	and.b32  	%r7539, %r7538, 15728640;
	or.b32  	%r7540, %r7537, %r7539;
	and.b32  	%r7541, %r12660, 15728640;
	shr.u32 	%r7542, %r7541, 4;
	or.b32  	%r7543, %r7540, %r7542;
	shl.b32 	%r7544, %r12660, 6;
	and.b32  	%r7545, %r7544, -1073741824;
	or.b32  	%r7546, %r7543, %r7545;
	and.b32  	%r7547, %r12660, -67108864;
	shr.u32 	%r7548, %r7547, 2;
	or.b32  	%r7549, %r7546, %r7548;
	shl.b32 	%r7550, %r12661, 2;
	and.b32  	%r7551, %r7550, 64512;
	and.b32  	%r7552, %r12661, 255;
	or.b32  	%r7553, %r7551, %r7552;
	and.b32  	%r7554, %r12661, 49152;
	shr.u32 	%r7555, %r7554, 6;
	or.b32  	%r7556, %r7553, %r7555;
	shl.b32 	%r7557, %r12661, 4;
	and.b32  	%r7558, %r7557, 15728640;
	or.b32  	%r7559, %r7556, %r7558;
	and.b32  	%r7560, %r12661, 15728640;
	shr.u32 	%r7561, %r7560, 4;
	or.b32  	%r7562, %r7559, %r7561;
	shl.b32 	%r7563, %r12661, 6;
	and.b32  	%r7564, %r7563, -1073741824;
	or.b32  	%r7565, %r7562, %r7564;
	and.b32  	%r7566, %r12661, -67108864;
	shr.u32 	%r7567, %r7566, 2;
	or.b32  	%r7568, %r7565, %r7567;
	shl.b32 	%r7569, %r12662, 2;
	and.b32  	%r7570, %r7569, 64512;
	and.b32  	%r7571, %r12662, 255;
	or.b32  	%r7572, %r7570, %r7571;
	and.b32  	%r7573, %r12662, 49152;
	shr.u32 	%r7574, %r7573, 6;
	or.b32  	%r7575, %r7572, %r7574;
	shl.b32 	%r7576, %r12662, 4;
	and.b32  	%r7577, %r7576, 15728640;
	or.b32  	%r7578, %r7575, %r7577;
	and.b32  	%r7579, %r12662, 15728640;
	shr.u32 	%r7580, %r7579, 4;
	or.b32  	%r7581, %r7578, %r7580;
	shl.b32 	%r7582, %r12662, 6;
	and.b32  	%r7583, %r7582, -1073741824;
	or.b32  	%r7584, %r7581, %r7583;
	and.b32  	%r7585, %r12662, -67108864;
	shr.u32 	%r7586, %r7585, 2;
	or.b32  	%r7587, %r7584, %r7586;
	xor.b32  	%r7588, %r7511, %r7454;
	xor.b32  	%r7589, %r7530, %r7473;
	not.b32 	%r7590, %r7549;
	not.b32 	%r7591, %r7568;
	not.b32 	%r7592, %r7589;
	xor.b32  	%r7593, %r7592, %r7591;
	not.b32 	%r7594, %r7588;
	xor.b32  	%r7595, %r7594, %r7590;
	xor.b32  	%r7596, %r7530, %r7492;
	xor.b32  	%r7597, %r7596, %r7587;
	xor.b32  	%r7598, %r7511, %r7473;
	xor.b32  	%r7599, %r7598, %r7568;
	xor.b32  	%r7600, %r7492, %r7454;
	xor.b32  	%r7601, %r7600, %r7549;
	xor.b32  	%r7602, %r7592, %r7587;
	xor.b32  	%r7603, %r7594, %r7591;
	xor.b32  	%r7604, %r7492, %r7590;
	xor.b32  	%r7605, %r7604, %r7587;
	xor.b32  	%r7606, %r7602, %r7599;
	xor.b32  	%r7607, %r7594, %r7592;
	xor.b32  	%r7608, %r7599, %r7593;
	xor.b32  	%r7609, %r7587, %r7591;
	xor.b32  	%r7610, %r7597, %r7595;
	xor.b32  	%r7611, %r7605, %r7610;
	xor.b32  	%r7612, %r7611, %r7599;
	xor.b32  	%r7613, %r7607, %r7606;
	xor.b32  	%r7614, %r7611, %r7593;
	xor.b32  	%r7615, %r7611, %r7603;
	xor.b32  	%r7616, %r7615, %r7609;
	xor.b32  	%r7617, %r7613, %r7601;
	xor.b32  	%r7618, %r7617, %r7602;
	xor.b32  	%r7619, %r7617, %r7595;
	xor.b32  	%r7620, %r7618, %r7605;
	xor.b32  	%r7621, %r7618, %r7610;
	xor.b32  	%r7622, %r7619, %r7608;
	xor.b32  	%r7623, %r7622, %r7605;
	xor.b32  	%r7624, %r7621, %r7622;
	xor.b32  	%r7625, %r7622, %r7610;
	and.b32  	%r7626, %r7618, %r7613;
	and.b32  	%r7627, %r7620, %r7616;
	and.b32  	%r7628, %r7612, %r7605;
	and.b32  	%r7629, %r7625, %r7607;
	and.b32  	%r7630, %r7615, %r7611;
	and.b32  	%r7631, %r7623, %r7614;
	and.b32  	%r7632, %r7622, %r7608;
	and.b32  	%r7633, %r7624, %r7606;
	xor.b32  	%r7634, %r7633, %r7632;
	and.b32  	%r7635, %r7621, %r7609;
	xor.b32  	%r7636, %r7635, %r7632;
	xor.b32  	%r7637, %r7626, %r7619;
	xor.b32  	%r7638, %r7637, %r7627;
	xor.b32  	%r7639, %r7638, %r7634;
	xor.b32  	%r7640, %r7628, %r7609;
	xor.b32  	%r7641, %r7640, %r7621;
	xor.b32  	%r7642, %r7641, %r7626;
	xor.b32  	%r7643, %r7642, %r7636;
	xor.b32  	%r7644, %r7630, %r7607;
	xor.b32  	%r7645, %r7644, %r7625;
	xor.b32  	%r7646, %r7645, %r7629;
	xor.b32  	%r7647, %r7646, %r7634;
	xor.b32  	%r7648, %r7625, %r7593;
	xor.b32  	%r7649, %r7648, %r7629;
	xor.b32  	%r7650, %r7649, %r7631;
	xor.b32  	%r7651, %r7650, %r7636;
	xor.b32  	%r7652, %r7639, %r7643;
	and.b32  	%r7653, %r7639, %r7647;
	xor.b32  	%r7654, %r7653, %r7651;
	and.b32  	%r7655, %r7654, %r7652;
	xor.b32  	%r7656, %r7655, %r7643;
	xor.b32  	%r7657, %r7647, %r7651;
	xor.b32  	%r7658, %r7653, %r7643;
	and.b32  	%r7659, %r7658, %r7657;
	xor.b32  	%r7660, %r7659, %r7651;
	xor.b32  	%r7661, %r7660, %r7647;
	xor.b32  	%r7662, %r7659, %r7653;
	and.b32  	%r7663, %r7662, %r7651;
	xor.b32  	%r7664, %r7661, %r7663;
	xor.b32  	%r7665, %r7663, %r7654;
	and.b32  	%r7666, %r7665, %r7656;
	xor.b32  	%r7667, %r7666, %r7652;
	xor.b32  	%r7668, %r7667, %r7664;
	xor.b32  	%r7669, %r7656, %r7660;
	xor.b32  	%r7670, %r7667, %r7656;
	xor.b32  	%r7671, %r7663, %r7647;
	xor.b32  	%r7672, %r7668, %r7669;
	and.b32  	%r7673, %r7671, %r7618;
	and.b32  	%r7674, %r7664, %r7620;
	and.b32  	%r7675, %r7660, %r7605;
	and.b32  	%r7676, %r7670, %r7625;
	and.b32  	%r7677, %r7667, %r7611;
	and.b32  	%r7678, %r7656, %r7623;
	and.b32  	%r7679, %r7669, %r7622;
	and.b32  	%r7680, %r7672, %r7624;
	and.b32  	%r7681, %r7668, %r7621;
	and.b32  	%r7682, %r7671, %r7613;
	and.b32  	%r7683, %r7664, %r7616;
	and.b32  	%r7684, %r7660, %r7612;
	and.b32  	%r7685, %r7670, %r7607;
	and.b32  	%r7686, %r7667, %r7615;
	and.b32  	%r7687, %r7656, %r7614;
	and.b32  	%r7688, %r7669, %r7608;
	and.b32  	%r7689, %r7672, %r7606;
	and.b32  	%r7690, %r7668, %r7609;
	xor.b32  	%r7691, %r7689, %r7688;
	xor.b32  	%r7692, %r7683, %r7684;
	xor.b32  	%r7693, %r7686, %r7678;
	xor.b32  	%r7694, %r7682, %r7683;
	xor.b32  	%r7695, %r7685, %r7675;
	xor.b32  	%r7696, %r7675, %r7678;
	xor.b32  	%r7697, %r7680, %r7681;
	xor.b32  	%r7698, %r7676, %r7673;
	xor.b32  	%r7699, %r7685, %r7693;
	xor.b32  	%r7700, %r7695, %r7698;
	xor.b32  	%r7701, %r7691, %r7677;
	xor.b32  	%r7702, %r7676, %r7679;
	xor.b32  	%r7703, %r7702, %r7680;
	xor.b32  	%r7704, %r7691, %r7700;
	xor.b32  	%r7705, %r7700, %r7687;
	xor.b32  	%r7706, %r7697, %r7701;
	xor.b32  	%r7707, %r7694, %r7701;
	xor.b32  	%r7708, %r7703, %r7677;
	xor.b32  	%r7709, %r7705, %r7706;
	xor.b32  	%r7710, %r7707, %r7674;
	xor.b32  	%r7711, %r7707, %r7703;
	xor.b32  	%r7712, %r7710, %r7698;
	xor.b32  	%r7713, %r7706, %r7699;
	xor.b32  	%r7714, %r7712, %r7708;
	xor.b32  	%r7715, %r7713, %r7714;
	xor.b32  	%r7716, %r7692, %r7709;
	xor.b32  	%r7717, %r7689, %r7690;
	xor.b32  	%r7718, %r7717, %r7708;
	xor.b32  	%r7719, %r7704, %r7693;
	xor.b32  	%r7720, %r7718, %r7709;
	xor.b32  	%r7721, %r7719, %r7720;
	xor.b32  	%r7722, %r7721, %r7716;
	xor.b32  	%r7723, %r7696, %r7710;
	xor.b32  	%r7724, %r7715, %r7723;
	xor.b32  	%r7725, %r7708, %r7713;
	xor.b32  	%r7726, %r7721, %r7723;
	xor.b32  	%r7727, %r7711, %r7712;
	xor.b32  	%r7728, %r7727, %r7716;
	ld.local.u32 	%r7729, [%rd12+252];
	xor.b32  	%r7730, %r7722, %r7729;
	xor.b32  	%r7731, %r7727, %r7713;
	xor.b32  	%r7732, %r7719, %r7714;
	xor.b32  	%r7733, %r7732, %r7723;
	xor.b32  	%r7734, %r7711, %r7720;
	xor.b32  	%r7735, %r7734, %r7716;
	ld.local.u32 	%r7736, [%rd12+240];
	xor.b32  	%r7737, %r7735, %r7736;
	ld.local.u32 	%r7738, [%rd12+244];
	xor.b32  	%r7739, %r7733, %r7738;
	ld.local.u32 	%r7740, [%rd12+248];
	xor.b32  	%r7741, %r7731, %r7740;
	ld.local.u32 	%r7742, [%rd12+256];
	xor.b32  	%r7743, %r7724, %r7742;
	ld.local.u32 	%r7744, [%rd12+260];
	xor.b32  	%r7745, %r7728, %r7744;
	ld.local.u32 	%r7746, [%rd12+264];
	xor.b32  	%r7747, %r7726, %r7746;
	ld.local.u32 	%r7748, [%rd12+268];
	xor.b32  	%r7749, %r7725, %r7748;
	and.b32  	%r7750, %r7737, 1431655765;
	shl.b32 	%r7751, %r7739, 1;
	and.b32  	%r7752, %r7751, -1431655766;
	or.b32  	%r81, %r7752, %r7750;
	and.b32  	%r7753, %r7741, 1431655765;
	shl.b32 	%r7754, %r7730, 1;
	and.b32  	%r7755, %r7754, -1431655766;
	or.b32  	%r82, %r7755, %r7753;
	and.b32  	%r7756, %r7743, 1431655765;
	shl.b32 	%r7757, %r7745, 1;
	and.b32  	%r7758, %r7757, -1431655766;
	or.b32  	%r83, %r7758, %r7756;
	and.b32  	%r7759, %r7747, 1431655765;
	shl.b32 	%r7760, %r7749, 1;
	and.b32  	%r7761, %r7760, -1431655766;
	or.b32  	%r84, %r7761, %r7759;
	add.s64 	%rd9573, %rd9514, 16;
	st.local.v4.u32 	[%rd14], {%r12588, %r12589, %r9, %r10};
	mov.u32 	%r12663, 10;
	mov.u32 	%r7434, 0;
	@%p117 bra 	$L__BB6_45;

	setp.eq.s32 	%p33, %r11, 24;
	@%p33 bra 	$L__BB6_44;

	setp.ne.s32 	%p34, %r11, 32;
	mov.u32 	%r12663, %r7434;
	@%p34 bra 	$L__BB6_59;

	mov.u32 	%r12663, 14;
	bra.uni 	$L__BB6_45;

$L__BB6_44:
	mov.u32 	%r12663, 12;

$L__BB6_45:
	shl.b32 	%r7764, %r12663, 2;
	add.s32 	%r86, %r7764, 4;
	setp.eq.s32 	%p35, %r12, 0;
	@%p35 bra 	$L__BB6_52;

	add.s32 	%r7766, %r12, -1;
	and.b32  	%r12668, %r12, 3;
	setp.lt.u32 	%p36, %r7766, 3;
	mov.u32 	%r12666, 0;
	@%p36 bra 	$L__BB6_49;

	sub.s32 	%r12665, %r12, %r12668;
	mov.u32 	%r12666, 0;

$L__BB6_48:
	shl.b32 	%r7768, %r12666, 2;
	cvt.s64.s32 	%rd6768, %r7768;
	add.s64 	%rd6769, %rd141, %rd6768;
	ld.local.u8 	%r7769, [%rd6769];
	ld.local.u8 	%r7770, [%rd6769+1];
	prmt.b32 	%r7771, %r7770, %r7769, 30212;
	ld.local.u8 	%r7772, [%rd6769+2];
	prmt.b32 	%r7773, %r7772, %r7771, 28756;
	ld.local.u8 	%r7774, [%rd6769+3];
	mul.wide.s32 	%rd6770, %r12666, 4;
	add.s64 	%rd6771, %rd13, %rd6770;
	prmt.b32 	%r7775, %r7774, %r7773, 1620;
	ld.local.u32 	%r7776, [%rd6769+12];
	ld.local.u32 	%r7777, [%rd6769+8];
	ld.local.u32 	%r7778, [%rd6769+4];
	st.local.v4.u32 	[%rd6771], {%r7775, %r7778, %r7777, %r7776};
	add.s32 	%r12666, %r12666, 4;
	add.s32 	%r12665, %r12665, -4;
	setp.ne.s32 	%p37, %r12665, 0;
	@%p37 bra 	$L__BB6_48;

$L__BB6_49:
	setp.eq.s32 	%p38, %r12668, 0;
	@%p38 bra 	$L__BB6_52;

	mul.wide.s32 	%rd6772, %r12666, 4;
	add.s64 	%rd9568, %rd13, %rd6772;
	shl.b32 	%r12667, %r12666, 2;

$L__BB6_51:
	.pragma "nounroll";
	cvt.s64.s32 	%rd6773, %r12667;
	add.s64 	%rd6774, %rd141, %rd6773;
	ld.local.u32 	%r7779, [%rd6774];
	st.local.u32 	[%rd9568], %r7779;
	add.s64 	%rd9568, %rd9568, 4;
	add.s32 	%r12667, %r12667, 4;
	add.s32 	%r12668, %r12668, -1;
	setp.ne.s32 	%p39, %r12668, 0;
	@%p39 bra 	$L__BB6_51;

$L__BB6_52:
	setp.ge.u32 	%p40, %r12, %r86;
	@%p40 bra 	$L__BB6_59;

	ld.local.u32 	%r12673, [%rd127];
	mov.u32 	%r12670, 0;
	mov.u64 	%rd6776, aes_keysched_base_$_Rcon;
	mov.u32 	%r12671, %r12;
	mov.u32 	%r12672, %r12670;

$L__BB6_54:
	setp.eq.s32 	%p41, %r12672, 0;
	@%p41 bra 	$L__BB6_57;

	cvt.u32.u64 	%r7782, %rd126;
	setp.lt.u32 	%p42, %r7782, 224;
	setp.ne.s32 	%p43, %r12672, 4;
	or.pred  	%p44, %p42, %p43;
	@%p44 bra 	$L__BB6_58;

	and.b32  	%r7783, %r12673, 1431655765;
	shl.b32 	%r7784, %r12673, 1;
	and.b32  	%r7785, %r7784, -1431655766;
	or.b32  	%r7786, %r7785, %r7783;
	and.b32  	%r7787, %r12673, -1431655766;
	shr.u32 	%r7788, %r7787, 1;
	or.b32  	%r7789, %r7788, %r7787;
	and.b32  	%r7790, %r7786, 858993459;
	shl.b32 	%r7791, %r7786, 2;
	and.b32  	%r7792, %r7791, -858993460;
	or.b32  	%r7793, %r7792, %r7790;
	and.b32  	%r7794, %r7786, -858993460;
	shr.u32 	%r7795, %r7794, 2;
	or.b32  	%r7796, %r7795, %r7794;
	and.b32  	%r7797, %r7789, 858993459;
	shl.b32 	%r7798, %r7789, 2;
	and.b32  	%r7799, %r7798, -858993460;
	or.b32  	%r7800, %r7799, %r7797;
	and.b32  	%r7801, %r7789, -858993460;
	shr.u32 	%r7802, %r7801, 2;
	or.b32  	%r7803, %r7802, %r7801;
	and.b32  	%r7804, %r7793, 252645135;
	shl.b32 	%r7805, %r7793, 4;
	and.b32  	%r7806, %r7805, -252645136;
	or.b32  	%r7807, %r7806, %r7804;
	and.b32  	%r7808, %r7793, -252645136;
	shr.u32 	%r7809, %r7808, 4;
	or.b32  	%r7810, %r7809, %r7808;
	and.b32  	%r7811, %r7800, 252645135;
	shl.b32 	%r7812, %r7800, 4;
	and.b32  	%r7813, %r7812, -252645136;
	or.b32  	%r7814, %r7813, %r7811;
	and.b32  	%r7815, %r7800, -252645136;
	shr.u32 	%r7816, %r7815, 4;
	or.b32  	%r7817, %r7816, %r7815;
	and.b32  	%r7818, %r7796, 252645135;
	shl.b32 	%r7819, %r7796, 4;
	and.b32  	%r7820, %r7819, -252645136;
	or.b32  	%r7821, %r7820, %r7818;
	and.b32  	%r7822, %r7796, -252645136;
	shr.u32 	%r7823, %r7822, 4;
	or.b32  	%r7824, %r7823, %r7822;
	and.b32  	%r7825, %r7803, 252645135;
	shl.b32 	%r7826, %r7803, 4;
	and.b32  	%r7827, %r7826, -252645136;
	or.b32  	%r7828, %r7827, %r7825;
	and.b32  	%r7829, %r7803, -252645136;
	shr.u32 	%r7830, %r7829, 4;
	or.b32  	%r7831, %r7830, %r7829;
	xor.b32  	%r7832, %r7821, %r7810;
	xor.b32  	%r7833, %r7814, %r7831;
	xor.b32  	%r7834, %r7810, %r7831;
	xor.b32  	%r7835, %r7821, %r7831;
	xor.b32  	%r7836, %r7817, %r7824;
	xor.b32  	%r7837, %r7807, %r7836;
	xor.b32  	%r7838, %r7837, %r7810;
	xor.b32  	%r7839, %r7833, %r7832;
	xor.b32  	%r7840, %r7837, %r7831;
	xor.b32  	%r7841, %r7837, %r7814;
	xor.b32  	%r7842, %r7841, %r7835;
	xor.b32  	%r7843, %r7839, %r7828;
	xor.b32  	%r7844, %r7843, %r7821;
	xor.b32  	%r7845, %r7843, %r7824;
	xor.b32  	%r7846, %r7844, %r7807;
	xor.b32  	%r7847, %r7844, %r7836;
	xor.b32  	%r7848, %r7845, %r7834;
	xor.b32  	%r7849, %r7848, %r7807;
	xor.b32  	%r7850, %r7847, %r7848;
	xor.b32  	%r7851, %r7848, %r7836;
	and.b32  	%r7852, %r7844, %r7839;
	and.b32  	%r7853, %r7846, %r7842;
	and.b32  	%r7854, %r7838, %r7807;
	and.b32  	%r7855, %r7851, %r7833;
	and.b32  	%r7856, %r7841, %r7837;
	and.b32  	%r7857, %r7849, %r7840;
	and.b32  	%r7858, %r7848, %r7834;
	and.b32  	%r7859, %r7850, %r7832;
	xor.b32  	%r7860, %r7859, %r7858;
	and.b32  	%r7861, %r7847, %r7835;
	xor.b32  	%r7862, %r7861, %r7858;
	xor.b32  	%r7863, %r7852, %r7845;
	xor.b32  	%r7864, %r7863, %r7853;
	xor.b32  	%r7865, %r7864, %r7860;
	xor.b32  	%r7866, %r7854, %r7835;
	xor.b32  	%r7867, %r7866, %r7847;
	xor.b32  	%r7868, %r7867, %r7852;
	xor.b32  	%r7869, %r7868, %r7862;
	xor.b32  	%r7870, %r7856, %r7833;
	xor.b32  	%r7871, %r7870, %r7851;
	xor.b32  	%r7872, %r7871, %r7855;
	xor.b32  	%r7873, %r7872, %r7860;
	xor.b32  	%r7874, %r7851, %r7831;
	xor.b32  	%r7875, %r7874, %r7855;
	xor.b32  	%r7876, %r7875, %r7857;
	xor.b32  	%r7877, %r7876, %r7862;
	xor.b32  	%r7878, %r7865, %r7869;
	and.b32  	%r7879, %r7865, %r7873;
	xor.b32  	%r7880, %r7879, %r7877;
	and.b32  	%r7881, %r7880, %r7878;
	xor.b32  	%r7882, %r7881, %r7869;
	xor.b32  	%r7883, %r7873, %r7877;
	xor.b32  	%r7884, %r7879, %r7869;
	and.b32  	%r7885, %r7884, %r7883;
	xor.b32  	%r7886, %r7885, %r7877;
	xor.b32  	%r7887, %r7886, %r7873;
	xor.b32  	%r7888, %r7885, %r7879;
	and.b32  	%r7889, %r7888, %r7877;
	xor.b32  	%r7890, %r7887, %r7889;
	xor.b32  	%r7891, %r7889, %r7880;
	and.b32  	%r7892, %r7891, %r7882;
	xor.b32  	%r7893, %r7892, %r7878;
	xor.b32  	%r7894, %r7893, %r7890;
	xor.b32  	%r7895, %r7882, %r7886;
	xor.b32  	%r7896, %r7893, %r7882;
	xor.b32  	%r7897, %r7889, %r7873;
	xor.b32  	%r7898, %r7894, %r7895;
	and.b32  	%r7899, %r7897, %r7844;
	and.b32  	%r7900, %r7890, %r7846;
	and.b32  	%r7901, %r7886, %r7807;
	and.b32  	%r7902, %r7896, %r7851;
	and.b32  	%r7903, %r7893, %r7837;
	and.b32  	%r7904, %r7882, %r7849;
	and.b32  	%r7905, %r7895, %r7848;
	and.b32  	%r7906, %r7898, %r7850;
	and.b32  	%r7907, %r7894, %r7847;
	and.b32  	%r7908, %r7897, %r7839;
	and.b32  	%r7909, %r7890, %r7842;
	and.b32  	%r7910, %r7886, %r7838;
	and.b32  	%r7911, %r7896, %r7833;
	and.b32  	%r7912, %r7893, %r7841;
	and.b32  	%r7913, %r7882, %r7840;
	and.b32  	%r7914, %r7895, %r7834;
	and.b32  	%r7915, %r7898, %r7832;
	and.b32  	%r7916, %r7894, %r7835;
	xor.b32  	%r7917, %r7915, %r7914;
	xor.b32  	%r7918, %r7909, %r7910;
	xor.b32  	%r7919, %r7912, %r7904;
	xor.b32  	%r7920, %r7908, %r7909;
	xor.b32  	%r7921, %r7911, %r7901;
	xor.b32  	%r7922, %r7901, %r7904;
	xor.b32  	%r7923, %r7906, %r7907;
	xor.b32  	%r7924, %r7902, %r7899;
	xor.b32  	%r7925, %r7921, %r7924;
	xor.b32  	%r7926, %r7917, %r7903;
	xor.b32  	%r7927, %r7902, %r7905;
	xor.b32  	%r7928, %r7927, %r7906;
	xor.b32  	%r7929, %r7925, %r7913;
	xor.b32  	%r7930, %r7923, %r7926;
	xor.b32  	%r7931, %r7920, %r7926;
	xor.b32  	%r7932, %r7928, %r7903;
	xor.b32  	%r7933, %r7929, %r7930;
	xor.b32  	%r7934, %r7931, %r7900;
	xor.b32  	%r7935, %r7931, %r7928;
	xor.b32  	%r7936, %r7919, 16843009;
	xor.b32  	%r7937, %r7911, %r7936;
	xor.b32  	%r7938, %r7937, %r7930;
	xor.b32  	%r7939, %r7925, %r7936;
	xor.b32  	%r7940, %r7939, %r7917;
	xor.b32  	%r7941, %r7934, %r7924;
	xor.b32  	%r7942, %r7922, %r7934;
	xor.b32  	%r7943, %r7918, %r7933;
	xor.b32  	%r7944, %r7941, %r7932;
	not.b32 	%r7945, %r7944;
	xor.b32  	%r7946, %r7915, %r7916;
	xor.b32  	%r7947, %r7946, %r7932;
	xor.b32  	%r7948, %r7947, %r7933;
	and.b32  	%r7949, %r7940, 16843009;
	shl.b32 	%r7950, %r7938, 1;
	and.b32  	%r7951, %r7950, 33686018;
	or.b32  	%r7952, %r7951, %r7949;
	and.b32  	%r7953, %r7943, 16843009;
	shl.b32 	%r7954, %r7942, 1;
	and.b32  	%r7955, %r7954, 33686018;
	or.b32  	%r7956, %r7955, %r7953;
	and.b32  	%r7957, %r7941, 16843009;
	shl.b32 	%r7958, %r7948, 1;
	not.b32 	%r7959, %r7958;
	and.b32  	%r7960, %r7959, 33686018;
	or.b32  	%r7961, %r7960, %r7957;
	and.b32  	%r7962, %r7945, 16843009;
	shl.b32 	%r7963, %r7935, 1;
	and.b32  	%r7964, %r7963, 33686018;
	or.b32  	%r7965, %r7964, %r7962;
	shl.b32 	%r7966, %r7956, 2;
	or.b32  	%r7967, %r7966, %r7952;
	shl.b32 	%r7968, %r7965, 2;
	or.b32  	%r7969, %r7968, %r7961;
	shl.b32 	%r7970, %r7969, 4;
	or.b32  	%r12673, %r7970, %r7967;
	bra.uni 	$L__BB6_58;

$L__BB6_57:
	shf.l.wrap.b32 	%r7971, %r12673, %r12673, 24;
	and.b32  	%r7972, %r7971, 1431655765;
	shl.b32 	%r7973, %r7971, 1;
	and.b32  	%r7974, %r7973, -1431655766;
	or.b32  	%r7975, %r7974, %r7972;
	and.b32  	%r7976, %r7971, -1431655766;
	shr.u32 	%r7977, %r7976, 1;
	or.b32  	%r7978, %r7977, %r7976;
	and.b32  	%r7979, %r7975, 858993459;
	shl.b32 	%r7980, %r7975, 2;
	and.b32  	%r7981, %r7980, -858993460;
	or.b32  	%r7982, %r7981, %r7979;
	and.b32  	%r7983, %r7975, -858993460;
	shr.u32 	%r7984, %r7983, 2;
	or.b32  	%r7985, %r7984, %r7983;
	and.b32  	%r7986, %r7978, 858993459;
	shl.b32 	%r7987, %r7978, 2;
	and.b32  	%r7988, %r7987, -858993460;
	or.b32  	%r7989, %r7988, %r7986;
	and.b32  	%r7990, %r7978, -858993460;
	shr.u32 	%r7991, %r7990, 2;
	or.b32  	%r7992, %r7991, %r7990;
	and.b32  	%r7993, %r7982, 252645135;
	shl.b32 	%r7994, %r7982, 4;
	and.b32  	%r7995, %r7994, -252645136;
	or.b32  	%r7996, %r7995, %r7993;
	and.b32  	%r7997, %r7982, -252645136;
	shr.u32 	%r7998, %r7997, 4;
	or.b32  	%r7999, %r7998, %r7997;
	and.b32  	%r8000, %r7989, 252645135;
	shl.b32 	%r8001, %r7989, 4;
	and.b32  	%r8002, %r8001, -252645136;
	or.b32  	%r8003, %r8002, %r8000;
	and.b32  	%r8004, %r7989, -252645136;
	shr.u32 	%r8005, %r8004, 4;
	or.b32  	%r8006, %r8005, %r8004;
	and.b32  	%r8007, %r7985, 252645135;
	shl.b32 	%r8008, %r7985, 4;
	and.b32  	%r8009, %r8008, -252645136;
	or.b32  	%r8010, %r8009, %r8007;
	and.b32  	%r8011, %r7985, -252645136;
	shr.u32 	%r8012, %r8011, 4;
	or.b32  	%r8013, %r8012, %r8011;
	and.b32  	%r8014, %r7992, 252645135;
	shl.b32 	%r8015, %r7992, 4;
	and.b32  	%r8016, %r8015, -252645136;
	or.b32  	%r8017, %r8016, %r8014;
	and.b32  	%r8018, %r7992, -252645136;
	shr.u32 	%r8019, %r8018, 4;
	or.b32  	%r8020, %r8019, %r8018;
	xor.b32  	%r8021, %r8010, %r7999;
	xor.b32  	%r8022, %r8003, %r8020;
	xor.b32  	%r8023, %r7999, %r8020;
	xor.b32  	%r8024, %r8010, %r8020;
	xor.b32  	%r8025, %r8006, %r8013;
	xor.b32  	%r8026, %r7996, %r8025;
	xor.b32  	%r8027, %r8026, %r7999;
	xor.b32  	%r8028, %r8022, %r8021;
	xor.b32  	%r8029, %r8026, %r8020;
	xor.b32  	%r8030, %r8026, %r8003;
	xor.b32  	%r8031, %r8030, %r8024;
	xor.b32  	%r8032, %r8028, %r8017;
	xor.b32  	%r8033, %r8032, %r8010;
	xor.b32  	%r8034, %r8032, %r8013;
	xor.b32  	%r8035, %r8033, %r7996;
	xor.b32  	%r8036, %r8033, %r8025;
	xor.b32  	%r8037, %r8034, %r8023;
	xor.b32  	%r8038, %r8037, %r7996;
	xor.b32  	%r8039, %r8036, %r8037;
	xor.b32  	%r8040, %r8037, %r8025;
	and.b32  	%r8041, %r8033, %r8028;
	and.b32  	%r8042, %r8035, %r8031;
	and.b32  	%r8043, %r8027, %r7996;
	and.b32  	%r8044, %r8040, %r8022;
	and.b32  	%r8045, %r8030, %r8026;
	and.b32  	%r8046, %r8038, %r8029;
	and.b32  	%r8047, %r8037, %r8023;
	and.b32  	%r8048, %r8039, %r8021;
	xor.b32  	%r8049, %r8048, %r8047;
	and.b32  	%r8050, %r8036, %r8024;
	xor.b32  	%r8051, %r8050, %r8047;
	xor.b32  	%r8052, %r8041, %r8034;
	xor.b32  	%r8053, %r8052, %r8042;
	xor.b32  	%r8054, %r8053, %r8049;
	xor.b32  	%r8055, %r8043, %r8024;
	xor.b32  	%r8056, %r8055, %r8036;
	xor.b32  	%r8057, %r8056, %r8041;
	xor.b32  	%r8058, %r8057, %r8051;
	xor.b32  	%r8059, %r8045, %r8022;
	xor.b32  	%r8060, %r8059, %r8040;
	xor.b32  	%r8061, %r8060, %r8044;
	xor.b32  	%r8062, %r8061, %r8049;
	xor.b32  	%r8063, %r8040, %r8020;
	xor.b32  	%r8064, %r8063, %r8044;
	xor.b32  	%r8065, %r8064, %r8046;
	xor.b32  	%r8066, %r8065, %r8051;
	xor.b32  	%r8067, %r8054, %r8058;
	and.b32  	%r8068, %r8054, %r8062;
	xor.b32  	%r8069, %r8068, %r8066;
	and.b32  	%r8070, %r8069, %r8067;
	xor.b32  	%r8071, %r8070, %r8058;
	xor.b32  	%r8072, %r8062, %r8066;
	xor.b32  	%r8073, %r8068, %r8058;
	and.b32  	%r8074, %r8073, %r8072;
	xor.b32  	%r8075, %r8074, %r8066;
	xor.b32  	%r8076, %r8075, %r8062;
	xor.b32  	%r8077, %r8074, %r8068;
	and.b32  	%r8078, %r8077, %r8066;
	xor.b32  	%r8079, %r8076, %r8078;
	xor.b32  	%r8080, %r8078, %r8069;
	and.b32  	%r8081, %r8080, %r8071;
	xor.b32  	%r8082, %r8081, %r8067;
	xor.b32  	%r8083, %r8082, %r8079;
	xor.b32  	%r8084, %r8071, %r8075;
	xor.b32  	%r8085, %r8082, %r8071;
	xor.b32  	%r8086, %r8078, %r8062;
	xor.b32  	%r8087, %r8083, %r8084;
	and.b32  	%r8088, %r8086, %r8033;
	and.b32  	%r8089, %r8079, %r8035;
	and.b32  	%r8090, %r8075, %r7996;
	and.b32  	%r8091, %r8085, %r8040;
	and.b32  	%r8092, %r8082, %r8026;
	and.b32  	%r8093, %r8071, %r8038;
	and.b32  	%r8094, %r8084, %r8037;
	and.b32  	%r8095, %r8087, %r8039;
	and.b32  	%r8096, %r8083, %r8036;
	and.b32  	%r8097, %r8086, %r8028;
	and.b32  	%r8098, %r8079, %r8031;
	and.b32  	%r8099, %r8075, %r8027;
	and.b32  	%r8100, %r8085, %r8022;
	and.b32  	%r8101, %r8082, %r8030;
	and.b32  	%r8102, %r8071, %r8029;
	and.b32  	%r8103, %r8084, %r8023;
	and.b32  	%r8104, %r8087, %r8021;
	and.b32  	%r8105, %r8083, %r8024;
	xor.b32  	%r8106, %r8104, %r8103;
	xor.b32  	%r8107, %r8098, %r8099;
	xor.b32  	%r8108, %r8101, %r8093;
	xor.b32  	%r8109, %r8097, %r8098;
	xor.b32  	%r8110, %r8100, %r8090;
	xor.b32  	%r8111, %r8090, %r8093;
	xor.b32  	%r8112, %r8095, %r8096;
	xor.b32  	%r8113, %r8091, %r8088;
	xor.b32  	%r8114, %r8110, %r8113;
	xor.b32  	%r8115, %r8106, %r8092;
	xor.b32  	%r8116, %r8091, %r8094;
	xor.b32  	%r8117, %r8116, %r8095;
	xor.b32  	%r8118, %r8114, %r8102;
	xor.b32  	%r8119, %r8112, %r8115;
	xor.b32  	%r8120, %r8109, %r8115;
	xor.b32  	%r8121, %r8117, %r8092;
	xor.b32  	%r8122, %r8118, %r8119;
	xor.b32  	%r8123, %r8120, %r8089;
	xor.b32  	%r8124, %r8120, %r8117;
	xor.b32  	%r8125, %r8108, 16843009;
	xor.b32  	%r8126, %r8100, %r8125;
	xor.b32  	%r8127, %r8126, %r8119;
	xor.b32  	%r8128, %r8114, %r8125;
	xor.b32  	%r8129, %r8128, %r8106;
	xor.b32  	%r8130, %r8123, %r8113;
	xor.b32  	%r8131, %r8111, %r8123;
	xor.b32  	%r8132, %r8107, %r8122;
	xor.b32  	%r8133, %r8130, %r8121;
	not.b32 	%r8134, %r8133;
	xor.b32  	%r8135, %r8104, %r8105;
	xor.b32  	%r8136, %r8135, %r8121;
	xor.b32  	%r8137, %r8136, %r8122;
	and.b32  	%r8138, %r8129, 16843009;
	shl.b32 	%r8139, %r8127, 1;
	and.b32  	%r8140, %r8139, 33686018;
	or.b32  	%r8141, %r8140, %r8138;
	and.b32  	%r8142, %r8132, 16843009;
	shl.b32 	%r8143, %r8131, 1;
	and.b32  	%r8144, %r8143, 33686018;
	or.b32  	%r8145, %r8144, %r8142;
	and.b32  	%r8146, %r8130, 16843009;
	shl.b32 	%r8147, %r8137, 1;
	not.b32 	%r8148, %r8147;
	and.b32  	%r8149, %r8148, 33686018;
	or.b32  	%r8150, %r8149, %r8146;
	and.b32  	%r8151, %r8134, 16843009;
	shl.b32 	%r8152, %r8124, 1;
	and.b32  	%r8153, %r8152, 33686018;
	or.b32  	%r8154, %r8153, %r8151;
	shl.b32 	%r8155, %r8145, 2;
	or.b32  	%r8156, %r8155, %r8141;
	shl.b32 	%r8157, %r8154, 2;
	or.b32  	%r8158, %r8157, %r8150;
	shl.b32 	%r8159, %r8158, 4;
	or.b32  	%r8160, %r8159, %r8156;
	cvt.s64.s32 	%rd6775, %r12670;
	add.s64 	%rd6777, %rd6776, %rd6775;
	ld.const.u8 	%r8161, [%rd6777];
	xor.b32  	%r12673, %r8160, %r8161;

$L__BB6_58:
	sub.s32 	%r8162, %r12671, %r12;
	mul.wide.s32 	%rd6778, %r8162, 4;
	add.s64 	%rd6779, %rd13, %rd6778;
	ld.local.u32 	%r8163, [%rd6779];
	xor.b32  	%r12673, %r8163, %r12673;
	mul.wide.s32 	%rd6780, %r12671, 4;
	add.s64 	%rd6781, %rd13, %rd6780;
	st.local.u32 	[%rd6781], %r12673;
	add.s32 	%r8164, %r12672, 1;
	setp.eq.s32 	%p45, %r8164, %r12;
	selp.b32 	%r12672, 0, %r8164, %p45;
	selp.u32 	%r8165, 1, 0, %p45;
	add.s32 	%r12670, %r12670, %r8165;
	add.s32 	%r12671, %r12671, 1;
	setp.lt.u32 	%p46, %r12671, %r86;
	@%p46 bra 	$L__BB6_54;

$L__BB6_59:
	ld.param.u64 	%rd9518, [Generate2013key_param_2];
	add.s64 	%rd9517, %rd9518, 32;
	ld.const.u8 	%rs148, [%rd9517+-24];
	ld.const.u8 	%rs147, [%rd9517+-23];
	ld.const.u8 	%rs146, [%rd9517+-17];
	ld.param.u64 	%rd9478, [Generate2013key_param_2];
	add.s64 	%rd9477, %rd9478, 32;
	ld.const.u8 	%rs141, [%rd9477+-22];
	ld.const.u8 	%rs140, [%rd9477+-21];
	ld.const.u8 	%rs139, [%rd9477+-20];
	ld.const.u8 	%rs138, [%rd9477+-19];
	ld.const.u8 	%rs137, [%rd9477+-18];
	shl.b32 	%r8166, %r82, 2;
	and.b32  	%r8167, %r8166, -858993460;
	and.b32  	%r8168, %r81, 858993459;
	or.b32  	%r8169, %r8167, %r8168;
	and.b32  	%r8170, %r82, -858993460;
	and.b32  	%r8171, %r81, -858993460;
	shr.u32 	%r8172, %r8171, 2;
	or.b32  	%r8173, %r8172, %r8170;
	shl.b32 	%r8174, %r84, 2;
	and.b32  	%r8175, %r8174, -858993460;
	and.b32  	%r8176, %r83, 858993459;
	or.b32  	%r8177, %r8175, %r8176;
	and.b32  	%r8178, %r84, -858993460;
	and.b32  	%r8179, %r83, -858993460;
	shr.u32 	%r8180, %r8179, 2;
	or.b32  	%r8181, %r8180, %r8178;
	shl.b32 	%r8182, %r8177, 4;
	and.b32  	%r8183, %r8182, -252645136;
	and.b32  	%r8184, %r8169, 252645135;
	or.b32  	%r112, %r8183, %r8184;
	and.b32  	%r8185, %r8177, -252645136;
	and.b32  	%r8186, %r8169, -252645136;
	shr.u32 	%r8187, %r8186, 4;
	or.b32  	%r8188, %r8187, %r8185;
	shl.b32 	%r8189, %r8181, 4;
	and.b32  	%r8190, %r8189, -252645136;
	and.b32  	%r8191, %r8173, 252645135;
	or.b32  	%r113, %r8190, %r8191;
	and.b32  	%r8192, %r8181, -252645136;
	and.b32  	%r8193, %r8173, -252645136;
	shr.u32 	%r8194, %r8193, 4;
	or.b32  	%r8195, %r8194, %r8192;
	ld.local.v4.u32 	{%r8196, %r8197, %r8198, %r8199}, [%rd13];
	and.b32  	%r8204, %r8196, 1431655765;
	shl.b32 	%r8205, %r8196, 1;
	and.b32  	%r8206, %r8205, -1431655766;
	or.b32  	%r8207, %r8206, %r8204;
	and.b32  	%r8208, %r8196, -1431655766;
	shr.u32 	%r8209, %r8208, 1;
	or.b32  	%r8210, %r8209, %r8208;
	and.b32  	%r8211, %r8197, 1431655765;
	shl.b32 	%r8212, %r8197, 1;
	and.b32  	%r8213, %r8212, -1431655766;
	or.b32  	%r8214, %r8213, %r8211;
	and.b32  	%r8215, %r8197, -1431655766;
	shr.u32 	%r8216, %r8215, 1;
	or.b32  	%r8217, %r8216, %r8215;
	and.b32  	%r8218, %r8198, 1431655765;
	shl.b32 	%r8219, %r8198, 1;
	and.b32  	%r8220, %r8219, -1431655766;
	or.b32  	%r8221, %r8220, %r8218;
	and.b32  	%r8222, %r8198, -1431655766;
	shr.u32 	%r8223, %r8222, 1;
	or.b32  	%r8224, %r8223, %r8222;
	and.b32  	%r8225, %r8199, 1431655765;
	shl.b32 	%r8226, %r8199, 1;
	and.b32  	%r8227, %r8226, -1431655766;
	or.b32  	%r8228, %r8227, %r8225;
	and.b32  	%r8229, %r8199, -1431655766;
	shr.u32 	%r8230, %r8229, 1;
	or.b32  	%r8231, %r8230, %r8229;
	and.b32  	%r8232, %r8207, 858993459;
	shl.b32 	%r8233, %r8214, 2;
	and.b32  	%r8234, %r8233, -858993460;
	or.b32  	%r8235, %r8234, %r8232;
	and.b32  	%r8236, %r8207, -858993460;
	shr.u32 	%r8237, %r8236, 2;
	and.b32  	%r8238, %r8214, -858993460;
	or.b32  	%r8239, %r8237, %r8238;
	and.b32  	%r8240, %r8210, 858993459;
	shl.b32 	%r8241, %r8217, 2;
	and.b32  	%r8242, %r8241, -858993460;
	or.b32  	%r8243, %r8242, %r8240;
	and.b32  	%r8244, %r8210, -858993460;
	shr.u32 	%r8245, %r8244, 2;
	and.b32  	%r8246, %r8217, -858993460;
	or.b32  	%r8247, %r8245, %r8246;
	and.b32  	%r8248, %r8221, 858993459;
	shl.b32 	%r8249, %r8228, 2;
	and.b32  	%r8250, %r8249, -858993460;
	or.b32  	%r8251, %r8250, %r8248;
	and.b32  	%r8252, %r8221, -858993460;
	shr.u32 	%r8253, %r8252, 2;
	and.b32  	%r8254, %r8228, -858993460;
	or.b32  	%r8255, %r8253, %r8254;
	and.b32  	%r8256, %r8224, 858993459;
	shl.b32 	%r8257, %r8231, 2;
	and.b32  	%r8258, %r8257, -858993460;
	or.b32  	%r8259, %r8258, %r8256;
	and.b32  	%r8260, %r8224, -858993460;
	shr.u32 	%r8261, %r8260, 2;
	and.b32  	%r8262, %r8231, -858993460;
	or.b32  	%r8263, %r8261, %r8262;
	and.b32  	%r8264, %r8235, 84215045;
	shl.b32 	%r8265, %r8251, 4;
	and.b32  	%r8266, %r8265, 1347440720;
	and.b32  	%r8267, %r8235, 1347440720;
	and.b32  	%r8268, %r8251, 1347440720;
	and.b32  	%r8269, %r8243, 168430090;
	shl.b32 	%r8270, %r8259, 4;
	and.b32  	%r8271, %r8270, -1600085856;
	and.b32  	%r8272, %r8243, -1600085856;
	and.b32  	%r8273, %r8259, -1600085856;
	and.b32  	%r8274, %r8239, 84215045;
	shl.b32 	%r8275, %r8255, 4;
	and.b32  	%r8276, %r8275, 1347440720;
	and.b32  	%r8277, %r8239, 1347440720;
	and.b32  	%r8278, %r8255, 1347440720;
	and.b32  	%r8279, %r8247, 168430090;
	shl.b32 	%r8280, %r8263, 4;
	and.b32  	%r8281, %r8280, -1600085856;
	and.b32  	%r8282, %r8247, -1600085856;
	and.b32  	%r8283, %r8263, -1600085856;
	or.b32  	%r8284, %r8269, %r8264;
	or.b32  	%r8285, %r8284, %r8266;
	or.b32  	%r8286, %r8285, %r8271;
	st.local.u32 	[%rd12], %r8286;
	or.b32  	%r8287, %r8279, %r8274;
	or.b32  	%r8288, %r8287, %r8276;
	or.b32  	%r8289, %r8288, %r8281;
	st.local.u32 	[%rd12+4], %r8289;
	or.b32  	%r8290, %r8272, %r8267;
	shr.u32 	%r8291, %r8290, 4;
	or.b32  	%r8292, %r8291, %r8268;
	or.b32  	%r8293, %r8292, %r8273;
	st.local.u32 	[%rd12+8], %r8293;
	or.b32  	%r8294, %r8282, %r8277;
	shr.u32 	%r8295, %r8294, 4;
	or.b32  	%r8296, %r8295, %r8278;
	or.b32  	%r8297, %r8296, %r8283;
	st.local.u32 	[%rd12+12], %r8297;
	setp.eq.s32 	%p47, %r12663, 0;
	shr.u32 	%r8298, %r8195, 24;
	cvt.u16.u32 	%rs46, %r8298;
	xor.b16  	%rs47, %rs146, %rs46;
	cvt.u64.u16 	%rd6782, %rs47;
	and.b64  	%rd146, %rd6782, 255;
	shr.u32 	%r8299, %r8195, 16;
	cvt.u16.u32 	%rs48, %r8299;
	xor.b16  	%rs49, %rs137, %rs48;
	cvt.u64.u16 	%rd6783, %rs49;
	and.b64  	%rd147, %rd6783, 255;
	cvt.u16.u32 	%rs50, %r8195;
	shr.u16 	%rs51, %rs50, 8;
	xor.b16  	%rs52, %rs138, %rs51;
	cvt.u64.u16 	%rd6784, %rs52;
	and.b64  	%rd148, %rd6784, 255;
	xor.b16  	%rs53, %rs139, %rs50;
	cvt.u64.u16 	%rd6785, %rs53;
	and.b64  	%rd149, %rd6785, 255;
	shr.u32 	%r8300, %r8188, 24;
	cvt.u16.u32 	%rs54, %r8300;
	xor.b16  	%rs55, %rs140, %rs54;
	cvt.u64.u16 	%rd6786, %rs55;
	and.b64  	%rd150, %rd6786, 255;
	shr.u32 	%r8301, %r8188, 16;
	cvt.u16.u32 	%rs56, %r8301;
	xor.b16  	%rs57, %rs141, %rs56;
	cvt.u64.u16 	%rd6787, %rs57;
	and.b64  	%rd151, %rd6787, 255;
	cvt.u16.u32 	%rs58, %r8188;
	shr.u16 	%rs59, %rs58, 8;
	xor.b16  	%rs60, %rs147, %rs59;
	cvt.u64.u16 	%rd6788, %rs60;
	and.b64  	%rd152, %rd6788, 255;
	xor.b16  	%rs17, %rs148, %rs58;
	@%p47 bra 	$L__BB6_67;

	ld.local.v4.u32 	{%r8302, %r8303, %r8304, %r8305}, [%rd13+16];
	and.b32  	%r8310, %r8302, 1431655765;
	shl.b32 	%r8311, %r8302, 1;
	and.b32  	%r8312, %r8311, -1431655766;
	or.b32  	%r8313, %r8312, %r8310;
	and.b32  	%r8314, %r8302, -1431655766;
	shr.u32 	%r8315, %r8314, 1;
	or.b32  	%r8316, %r8315, %r8314;
	and.b32  	%r8317, %r8303, 1431655765;
	shl.b32 	%r8318, %r8303, 1;
	and.b32  	%r8319, %r8318, -1431655766;
	or.b32  	%r8320, %r8319, %r8317;
	and.b32  	%r8321, %r8303, -1431655766;
	shr.u32 	%r8322, %r8321, 1;
	or.b32  	%r8323, %r8322, %r8321;
	and.b32  	%r8324, %r8304, 1431655765;
	shl.b32 	%r8325, %r8304, 1;
	and.b32  	%r8326, %r8325, -1431655766;
	or.b32  	%r8327, %r8326, %r8324;
	and.b32  	%r8328, %r8304, -1431655766;
	shr.u32 	%r8329, %r8328, 1;
	or.b32  	%r8330, %r8329, %r8328;
	and.b32  	%r8331, %r8305, 1431655765;
	shl.b32 	%r8332, %r8305, 1;
	and.b32  	%r8333, %r8332, -1431655766;
	or.b32  	%r8334, %r8333, %r8331;
	and.b32  	%r8335, %r8305, -1431655766;
	shr.u32 	%r8336, %r8335, 1;
	or.b32  	%r8337, %r8336, %r8335;
	and.b32  	%r8338, %r8313, 858993459;
	shl.b32 	%r8339, %r8320, 2;
	and.b32  	%r8340, %r8339, -858993460;
	or.b32  	%r8341, %r8340, %r8338;
	and.b32  	%r8342, %r8313, -858993460;
	shr.u32 	%r8343, %r8342, 2;
	and.b32  	%r8344, %r8320, -858993460;
	or.b32  	%r8345, %r8343, %r8344;
	and.b32  	%r8346, %r8316, 858993459;
	shl.b32 	%r8347, %r8323, 2;
	and.b32  	%r8348, %r8347, -858993460;
	or.b32  	%r8349, %r8348, %r8346;
	and.b32  	%r8350, %r8316, -858993460;
	shr.u32 	%r8351, %r8350, 2;
	and.b32  	%r8352, %r8323, -858993460;
	or.b32  	%r8353, %r8351, %r8352;
	and.b32  	%r8354, %r8327, 858993459;
	shl.b32 	%r8355, %r8334, 2;
	and.b32  	%r8356, %r8355, -858993460;
	or.b32  	%r8357, %r8356, %r8354;
	and.b32  	%r8358, %r8327, -858993460;
	shr.u32 	%r8359, %r8358, 2;
	and.b32  	%r8360, %r8334, -858993460;
	or.b32  	%r8361, %r8359, %r8360;
	and.b32  	%r8362, %r8330, 858993459;
	shl.b32 	%r8363, %r8337, 2;
	and.b32  	%r8364, %r8363, -858993460;
	or.b32  	%r8365, %r8364, %r8362;
	and.b32  	%r8366, %r8330, -858993460;
	shr.u32 	%r8367, %r8366, 2;
	and.b32  	%r8368, %r8337, -858993460;
	or.b32  	%r8369, %r8367, %r8368;
	and.b32  	%r8370, %r8341, 84215045;
	shl.b32 	%r8371, %r8357, 4;
	and.b32  	%r8372, %r8371, 1347440720;
	and.b32  	%r8373, %r8341, 1347440720;
	and.b32  	%r8374, %r8357, 1347440720;
	and.b32  	%r8375, %r8349, 168430090;
	shl.b32 	%r8376, %r8365, 4;
	and.b32  	%r8377, %r8376, -1600085856;
	and.b32  	%r8378, %r8349, -1600085856;
	and.b32  	%r8379, %r8365, -1600085856;
	and.b32  	%r8380, %r8345, 84215045;
	shl.b32 	%r8381, %r8361, 4;
	and.b32  	%r8382, %r8381, 1347440720;
	and.b32  	%r8383, %r8345, 1347440720;
	and.b32  	%r8384, %r8361, 1347440720;
	and.b32  	%r8385, %r8353, 168430090;
	shl.b32 	%r8386, %r8369, 4;
	and.b32  	%r8387, %r8386, -1600085856;
	and.b32  	%r8388, %r8353, -1600085856;
	and.b32  	%r8389, %r8369, -1600085856;
	or.b32  	%r8390, %r8375, %r8370;
	or.b32  	%r8391, %r8390, %r8372;
	or.b32  	%r8392, %r8391, %r8377;
	st.local.u32 	[%rd12+16], %r8392;
	or.b32  	%r8393, %r8385, %r8380;
	or.b32  	%r8394, %r8393, %r8382;
	or.b32  	%r8395, %r8394, %r8387;
	st.local.u32 	[%rd12+20], %r8395;
	or.b32  	%r8396, %r8378, %r8373;
	shr.u32 	%r8397, %r8396, 4;
	or.b32  	%r8398, %r8397, %r8374;
	or.b32  	%r8399, %r8398, %r8379;
	st.local.u32 	[%rd12+24], %r8399;
	or.b32  	%r8400, %r8388, %r8383;
	shr.u32 	%r8401, %r8400, 4;
	or.b32  	%r8402, %r8401, %r8384;
	or.b32  	%r8403, %r8402, %r8389;
	st.local.u32 	[%rd12+28], %r8403;
	ld.local.v4.u32 	{%r8404, %r8405, %r8406, %r8407}, [%rd13+32];
	and.b32  	%r8412, %r8404, 1431655765;
	shl.b32 	%r8413, %r8404, 1;
	and.b32  	%r8414, %r8413, -1431655766;
	or.b32  	%r8415, %r8414, %r8412;
	and.b32  	%r8416, %r8404, -1431655766;
	shr.u32 	%r8417, %r8416, 1;
	or.b32  	%r8418, %r8417, %r8416;
	and.b32  	%r8419, %r8405, 1431655765;
	shl.b32 	%r8420, %r8405, 1;
	and.b32  	%r8421, %r8420, -1431655766;
	or.b32  	%r8422, %r8421, %r8419;
	and.b32  	%r8423, %r8405, -1431655766;
	shr.u32 	%r8424, %r8423, 1;
	or.b32  	%r8425, %r8424, %r8423;
	and.b32  	%r8426, %r8406, 1431655765;
	shl.b32 	%r8427, %r8406, 1;
	and.b32  	%r8428, %r8427, -1431655766;
	or.b32  	%r8429, %r8428, %r8426;
	and.b32  	%r8430, %r8406, -1431655766;
	shr.u32 	%r8431, %r8430, 1;
	or.b32  	%r8432, %r8431, %r8430;
	and.b32  	%r8433, %r8407, 1431655765;
	shl.b32 	%r8434, %r8407, 1;
	and.b32  	%r8435, %r8434, -1431655766;
	or.b32  	%r8436, %r8435, %r8433;
	and.b32  	%r8437, %r8407, -1431655766;
	shr.u32 	%r8438, %r8437, 1;
	or.b32  	%r8439, %r8438, %r8437;
	and.b32  	%r8440, %r8415, 858993459;
	shl.b32 	%r8441, %r8422, 2;
	and.b32  	%r8442, %r8441, -858993460;
	or.b32  	%r8443, %r8442, %r8440;
	and.b32  	%r8444, %r8415, -858993460;
	shr.u32 	%r8445, %r8444, 2;
	and.b32  	%r8446, %r8422, -858993460;
	or.b32  	%r8447, %r8445, %r8446;
	and.b32  	%r8448, %r8418, 858993459;
	shl.b32 	%r8449, %r8425, 2;
	and.b32  	%r8450, %r8449, -858993460;
	or.b32  	%r8451, %r8450, %r8448;
	and.b32  	%r8452, %r8418, -858993460;
	shr.u32 	%r8453, %r8452, 2;
	and.b32  	%r8454, %r8425, -858993460;
	or.b32  	%r8455, %r8453, %r8454;
	and.b32  	%r8456, %r8429, 858993459;
	shl.b32 	%r8457, %r8436, 2;
	and.b32  	%r8458, %r8457, -858993460;
	or.b32  	%r8459, %r8458, %r8456;
	and.b32  	%r8460, %r8429, -858993460;
	shr.u32 	%r8461, %r8460, 2;
	and.b32  	%r8462, %r8436, -858993460;
	or.b32  	%r8463, %r8461, %r8462;
	and.b32  	%r8464, %r8432, 858993459;
	shl.b32 	%r8465, %r8439, 2;
	and.b32  	%r8466, %r8465, -858993460;
	or.b32  	%r8467, %r8466, %r8464;
	and.b32  	%r8468, %r8432, -858993460;
	shr.u32 	%r8469, %r8468, 2;
	and.b32  	%r8470, %r8439, -858993460;
	or.b32  	%r8471, %r8469, %r8470;
	and.b32  	%r8472, %r8443, 84215045;
	shl.b32 	%r8473, %r8459, 4;
	and.b32  	%r8474, %r8473, 1347440720;
	and.b32  	%r8475, %r8443, 1347440720;
	and.b32  	%r8476, %r8459, 1347440720;
	and.b32  	%r8477, %r8451, 168430090;
	shl.b32 	%r8478, %r8467, 4;
	and.b32  	%r8479, %r8478, -1600085856;
	and.b32  	%r8480, %r8451, -1600085856;
	and.b32  	%r8481, %r8467, -1600085856;
	and.b32  	%r8482, %r8447, 84215045;
	shl.b32 	%r8483, %r8463, 4;
	and.b32  	%r8484, %r8483, 1347440720;
	and.b32  	%r8485, %r8447, 1347440720;
	and.b32  	%r8486, %r8463, 1347440720;
	and.b32  	%r8487, %r8455, 168430090;
	shl.b32 	%r8488, %r8471, 4;
	and.b32  	%r8489, %r8488, -1600085856;
	and.b32  	%r8490, %r8455, -1600085856;
	and.b32  	%r8491, %r8471, -1600085856;
	or.b32  	%r8492, %r8477, %r8472;
	or.b32  	%r8493, %r8492, %r8474;
	or.b32  	%r8494, %r8493, %r8479;
	st.local.u32 	[%rd12+32], %r8494;
	or.b32  	%r8495, %r8487, %r8482;
	or.b32  	%r8496, %r8495, %r8484;
	or.b32  	%r8497, %r8496, %r8489;
	st.local.u32 	[%rd12+36], %r8497;
	or.b32  	%r8498, %r8480, %r8475;
	shr.u32 	%r8499, %r8498, 4;
	or.b32  	%r8500, %r8499, %r8476;
	or.b32  	%r8501, %r8500, %r8481;
	st.local.u32 	[%rd12+40], %r8501;
	or.b32  	%r8502, %r8490, %r8485;
	shr.u32 	%r8503, %r8502, 4;
	or.b32  	%r8504, %r8503, %r8486;
	or.b32  	%r8505, %r8504, %r8491;
	st.local.u32 	[%rd12+44], %r8505;
	setp.lt.u32 	%p48, %r12663, 3;
	@%p48 bra 	$L__BB6_67;

	ld.local.v4.u32 	{%r8506, %r8507, %r8508, %r8509}, [%rd13+48];
	and.b32  	%r8514, %r8506, 1431655765;
	shl.b32 	%r8515, %r8506, 1;
	and.b32  	%r8516, %r8515, -1431655766;
	or.b32  	%r8517, %r8516, %r8514;
	and.b32  	%r8518, %r8506, -1431655766;
	shr.u32 	%r8519, %r8518, 1;
	or.b32  	%r8520, %r8519, %r8518;
	and.b32  	%r8521, %r8507, 1431655765;
	shl.b32 	%r8522, %r8507, 1;
	and.b32  	%r8523, %r8522, -1431655766;
	or.b32  	%r8524, %r8523, %r8521;
	and.b32  	%r8525, %r8507, -1431655766;
	shr.u32 	%r8526, %r8525, 1;
	or.b32  	%r8527, %r8526, %r8525;
	and.b32  	%r8528, %r8508, 1431655765;
	shl.b32 	%r8529, %r8508, 1;
	and.b32  	%r8530, %r8529, -1431655766;
	or.b32  	%r8531, %r8530, %r8528;
	and.b32  	%r8532, %r8508, -1431655766;
	shr.u32 	%r8533, %r8532, 1;
	or.b32  	%r8534, %r8533, %r8532;
	and.b32  	%r8535, %r8509, 1431655765;
	shl.b32 	%r8536, %r8509, 1;
	and.b32  	%r8537, %r8536, -1431655766;
	or.b32  	%r8538, %r8537, %r8535;
	and.b32  	%r8539, %r8509, -1431655766;
	shr.u32 	%r8540, %r8539, 1;
	or.b32  	%r8541, %r8540, %r8539;
	and.b32  	%r8542, %r8517, 858993459;
	shl.b32 	%r8543, %r8524, 2;
	and.b32  	%r8544, %r8543, -858993460;
	or.b32  	%r8545, %r8544, %r8542;
	and.b32  	%r8546, %r8517, -858993460;
	shr.u32 	%r8547, %r8546, 2;
	and.b32  	%r8548, %r8524, -858993460;
	or.b32  	%r8549, %r8547, %r8548;
	and.b32  	%r8550, %r8520, 858993459;
	shl.b32 	%r8551, %r8527, 2;
	and.b32  	%r8552, %r8551, -858993460;
	or.b32  	%r8553, %r8552, %r8550;
	and.b32  	%r8554, %r8520, -858993460;
	shr.u32 	%r8555, %r8554, 2;
	and.b32  	%r8556, %r8527, -858993460;
	or.b32  	%r8557, %r8555, %r8556;
	and.b32  	%r8558, %r8531, 858993459;
	shl.b32 	%r8559, %r8538, 2;
	and.b32  	%r8560, %r8559, -858993460;
	or.b32  	%r8561, %r8560, %r8558;
	and.b32  	%r8562, %r8531, -858993460;
	shr.u32 	%r8563, %r8562, 2;
	and.b32  	%r8564, %r8538, -858993460;
	or.b32  	%r8565, %r8563, %r8564;
	and.b32  	%r8566, %r8534, 858993459;
	shl.b32 	%r8567, %r8541, 2;
	and.b32  	%r8568, %r8567, -858993460;
	or.b32  	%r8569, %r8568, %r8566;
	and.b32  	%r8570, %r8534, -858993460;
	shr.u32 	%r8571, %r8570, 2;
	and.b32  	%r8572, %r8541, -858993460;
	or.b32  	%r8573, %r8571, %r8572;
	and.b32  	%r8574, %r8545, 84215045;
	shl.b32 	%r8575, %r8561, 4;
	and.b32  	%r8576, %r8575, 1347440720;
	and.b32  	%r8577, %r8545, 1347440720;
	and.b32  	%r8578, %r8561, 1347440720;
	and.b32  	%r8579, %r8553, 168430090;
	shl.b32 	%r8580, %r8569, 4;
	and.b32  	%r8581, %r8580, -1600085856;
	and.b32  	%r8582, %r8553, -1600085856;
	and.b32  	%r8583, %r8569, -1600085856;
	and.b32  	%r8584, %r8549, 84215045;
	shl.b32 	%r8585, %r8565, 4;
	and.b32  	%r8586, %r8585, 1347440720;
	and.b32  	%r8587, %r8549, 1347440720;
	and.b32  	%r8588, %r8565, 1347440720;
	and.b32  	%r8589, %r8557, 168430090;
	shl.b32 	%r8590, %r8573, 4;
	and.b32  	%r8591, %r8590, -1600085856;
	and.b32  	%r8592, %r8557, -1600085856;
	and.b32  	%r8593, %r8573, -1600085856;
	or.b32  	%r8594, %r8579, %r8574;
	or.b32  	%r8595, %r8594, %r8576;
	or.b32  	%r8596, %r8595, %r8581;
	st.local.u32 	[%rd12+48], %r8596;
	or.b32  	%r8597, %r8589, %r8584;
	or.b32  	%r8598, %r8597, %r8586;
	or.b32  	%r8599, %r8598, %r8591;
	st.local.u32 	[%rd12+52], %r8599;
	or.b32  	%r8600, %r8582, %r8577;
	shr.u32 	%r8601, %r8600, 4;
	or.b32  	%r8602, %r8601, %r8578;
	or.b32  	%r8603, %r8602, %r8583;
	st.local.u32 	[%rd12+56], %r8603;
	or.b32  	%r8604, %r8592, %r8587;
	shr.u32 	%r8605, %r8604, 4;
	or.b32  	%r8606, %r8605, %r8588;
	or.b32  	%r8607, %r8606, %r8593;
	st.local.u32 	[%rd12+60], %r8607;
	ld.local.v4.u32 	{%r8608, %r8609, %r8610, %r8611}, [%rd13+64];
	and.b32  	%r8616, %r8608, 1431655765;
	shl.b32 	%r8617, %r8608, 1;
	and.b32  	%r8618, %r8617, -1431655766;
	or.b32  	%r8619, %r8618, %r8616;
	and.b32  	%r8620, %r8608, -1431655766;
	shr.u32 	%r8621, %r8620, 1;
	or.b32  	%r8622, %r8621, %r8620;
	and.b32  	%r8623, %r8609, 1431655765;
	shl.b32 	%r8624, %r8609, 1;
	and.b32  	%r8625, %r8624, -1431655766;
	or.b32  	%r8626, %r8625, %r8623;
	and.b32  	%r8627, %r8609, -1431655766;
	shr.u32 	%r8628, %r8627, 1;
	or.b32  	%r8629, %r8628, %r8627;
	and.b32  	%r8630, %r8610, 1431655765;
	shl.b32 	%r8631, %r8610, 1;
	and.b32  	%r8632, %r8631, -1431655766;
	or.b32  	%r8633, %r8632, %r8630;
	and.b32  	%r8634, %r8610, -1431655766;
	shr.u32 	%r8635, %r8634, 1;
	or.b32  	%r8636, %r8635, %r8634;
	and.b32  	%r8637, %r8611, 1431655765;
	shl.b32 	%r8638, %r8611, 1;
	and.b32  	%r8639, %r8638, -1431655766;
	or.b32  	%r8640, %r8639, %r8637;
	and.b32  	%r8641, %r8611, -1431655766;
	shr.u32 	%r8642, %r8641, 1;
	or.b32  	%r8643, %r8642, %r8641;
	and.b32  	%r8644, %r8619, 858993459;
	shl.b32 	%r8645, %r8626, 2;
	and.b32  	%r8646, %r8645, -858993460;
	or.b32  	%r8647, %r8646, %r8644;
	and.b32  	%r8648, %r8619, -858993460;
	shr.u32 	%r8649, %r8648, 2;
	and.b32  	%r8650, %r8626, -858993460;
	or.b32  	%r8651, %r8649, %r8650;
	and.b32  	%r8652, %r8622, 858993459;
	shl.b32 	%r8653, %r8629, 2;
	and.b32  	%r8654, %r8653, -858993460;
	or.b32  	%r8655, %r8654, %r8652;
	and.b32  	%r8656, %r8622, -858993460;
	shr.u32 	%r8657, %r8656, 2;
	and.b32  	%r8658, %r8629, -858993460;
	or.b32  	%r8659, %r8657, %r8658;
	and.b32  	%r8660, %r8633, 858993459;
	shl.b32 	%r8661, %r8640, 2;
	and.b32  	%r8662, %r8661, -858993460;
	or.b32  	%r8663, %r8662, %r8660;
	and.b32  	%r8664, %r8633, -858993460;
	shr.u32 	%r8665, %r8664, 2;
	and.b32  	%r8666, %r8640, -858993460;
	or.b32  	%r8667, %r8665, %r8666;
	and.b32  	%r8668, %r8636, 858993459;
	shl.b32 	%r8669, %r8643, 2;
	and.b32  	%r8670, %r8669, -858993460;
	or.b32  	%r8671, %r8670, %r8668;
	and.b32  	%r8672, %r8636, -858993460;
	shr.u32 	%r8673, %r8672, 2;
	and.b32  	%r8674, %r8643, -858993460;
	or.b32  	%r8675, %r8673, %r8674;
	and.b32  	%r8676, %r8647, 84215045;
	shl.b32 	%r8677, %r8663, 4;
	and.b32  	%r8678, %r8677, 1347440720;
	and.b32  	%r8679, %r8647, 1347440720;
	and.b32  	%r8680, %r8663, 1347440720;
	and.b32  	%r8681, %r8655, 168430090;
	shl.b32 	%r8682, %r8671, 4;
	and.b32  	%r8683, %r8682, -1600085856;
	and.b32  	%r8684, %r8655, -1600085856;
	and.b32  	%r8685, %r8671, -1600085856;
	and.b32  	%r8686, %r8651, 84215045;
	shl.b32 	%r8687, %r8667, 4;
	and.b32  	%r8688, %r8687, 1347440720;
	and.b32  	%r8689, %r8651, 1347440720;
	and.b32  	%r8690, %r8667, 1347440720;
	and.b32  	%r8691, %r8659, 168430090;
	shl.b32 	%r8692, %r8675, 4;
	and.b32  	%r8693, %r8692, -1600085856;
	and.b32  	%r8694, %r8659, -1600085856;
	and.b32  	%r8695, %r8675, -1600085856;
	or.b32  	%r8696, %r8681, %r8676;
	or.b32  	%r8697, %r8696, %r8678;
	or.b32  	%r8698, %r8697, %r8683;
	st.local.u32 	[%rd12+64], %r8698;
	or.b32  	%r8699, %r8691, %r8686;
	or.b32  	%r8700, %r8699, %r8688;
	or.b32  	%r8701, %r8700, %r8693;
	st.local.u32 	[%rd12+68], %r8701;
	or.b32  	%r8702, %r8684, %r8679;
	shr.u32 	%r8703, %r8702, 4;
	or.b32  	%r8704, %r8703, %r8680;
	or.b32  	%r8705, %r8704, %r8685;
	st.local.u32 	[%rd12+72], %r8705;
	or.b32  	%r8706, %r8694, %r8689;
	shr.u32 	%r8707, %r8706, 4;
	or.b32  	%r8708, %r8707, %r8690;
	or.b32  	%r8709, %r8708, %r8695;
	st.local.u32 	[%rd12+76], %r8709;
	setp.lt.u32 	%p49, %r12663, 5;
	@%p49 bra 	$L__BB6_67;

	ld.local.v4.u32 	{%r8710, %r8711, %r8712, %r8713}, [%rd13+80];
	and.b32  	%r8718, %r8710, 1431655765;
	shl.b32 	%r8719, %r8710, 1;
	and.b32  	%r8720, %r8719, -1431655766;
	or.b32  	%r8721, %r8720, %r8718;
	and.b32  	%r8722, %r8710, -1431655766;
	shr.u32 	%r8723, %r8722, 1;
	or.b32  	%r8724, %r8723, %r8722;
	and.b32  	%r8725, %r8711, 1431655765;
	shl.b32 	%r8726, %r8711, 1;
	and.b32  	%r8727, %r8726, -1431655766;
	or.b32  	%r8728, %r8727, %r8725;
	and.b32  	%r8729, %r8711, -1431655766;
	shr.u32 	%r8730, %r8729, 1;
	or.b32  	%r8731, %r8730, %r8729;
	and.b32  	%r8732, %r8712, 1431655765;
	shl.b32 	%r8733, %r8712, 1;
	and.b32  	%r8734, %r8733, -1431655766;
	or.b32  	%r8735, %r8734, %r8732;
	and.b32  	%r8736, %r8712, -1431655766;
	shr.u32 	%r8737, %r8736, 1;
	or.b32  	%r8738, %r8737, %r8736;
	and.b32  	%r8739, %r8713, 1431655765;
	shl.b32 	%r8740, %r8713, 1;
	and.b32  	%r8741, %r8740, -1431655766;
	or.b32  	%r8742, %r8741, %r8739;
	and.b32  	%r8743, %r8713, -1431655766;
	shr.u32 	%r8744, %r8743, 1;
	or.b32  	%r8745, %r8744, %r8743;
	and.b32  	%r8746, %r8721, 858993459;
	shl.b32 	%r8747, %r8728, 2;
	and.b32  	%r8748, %r8747, -858993460;
	or.b32  	%r8749, %r8748, %r8746;
	and.b32  	%r8750, %r8721, -858993460;
	shr.u32 	%r8751, %r8750, 2;
	and.b32  	%r8752, %r8728, -858993460;
	or.b32  	%r8753, %r8751, %r8752;
	and.b32  	%r8754, %r8724, 858993459;
	shl.b32 	%r8755, %r8731, 2;
	and.b32  	%r8756, %r8755, -858993460;
	or.b32  	%r8757, %r8756, %r8754;
	and.b32  	%r8758, %r8724, -858993460;
	shr.u32 	%r8759, %r8758, 2;
	and.b32  	%r8760, %r8731, -858993460;
	or.b32  	%r8761, %r8759, %r8760;
	and.b32  	%r8762, %r8735, 858993459;
	shl.b32 	%r8763, %r8742, 2;
	and.b32  	%r8764, %r8763, -858993460;
	or.b32  	%r8765, %r8764, %r8762;
	and.b32  	%r8766, %r8735, -858993460;
	shr.u32 	%r8767, %r8766, 2;
	and.b32  	%r8768, %r8742, -858993460;
	or.b32  	%r8769, %r8767, %r8768;
	and.b32  	%r8770, %r8738, 858993459;
	shl.b32 	%r8771, %r8745, 2;
	and.b32  	%r8772, %r8771, -858993460;
	or.b32  	%r8773, %r8772, %r8770;
	and.b32  	%r8774, %r8738, -858993460;
	shr.u32 	%r8775, %r8774, 2;
	and.b32  	%r8776, %r8745, -858993460;
	or.b32  	%r8777, %r8775, %r8776;
	and.b32  	%r8778, %r8749, 84215045;
	shl.b32 	%r8779, %r8765, 4;
	and.b32  	%r8780, %r8779, 1347440720;
	and.b32  	%r8781, %r8749, 1347440720;
	and.b32  	%r8782, %r8765, 1347440720;
	and.b32  	%r8783, %r8757, 168430090;
	shl.b32 	%r8784, %r8773, 4;
	and.b32  	%r8785, %r8784, -1600085856;
	and.b32  	%r8786, %r8757, -1600085856;
	and.b32  	%r8787, %r8773, -1600085856;
	and.b32  	%r8788, %r8753, 84215045;
	shl.b32 	%r8789, %r8769, 4;
	and.b32  	%r8790, %r8789, 1347440720;
	and.b32  	%r8791, %r8753, 1347440720;
	and.b32  	%r8792, %r8769, 1347440720;
	and.b32  	%r8793, %r8761, 168430090;
	shl.b32 	%r8794, %r8777, 4;
	and.b32  	%r8795, %r8794, -1600085856;
	and.b32  	%r8796, %r8761, -1600085856;
	and.b32  	%r8797, %r8777, -1600085856;
	or.b32  	%r8798, %r8783, %r8778;
	or.b32  	%r8799, %r8798, %r8780;
	or.b32  	%r8800, %r8799, %r8785;
	st.local.u32 	[%rd12+80], %r8800;
	or.b32  	%r8801, %r8793, %r8788;
	or.b32  	%r8802, %r8801, %r8790;
	or.b32  	%r8803, %r8802, %r8795;
	st.local.u32 	[%rd12+84], %r8803;
	or.b32  	%r8804, %r8786, %r8781;
	shr.u32 	%r8805, %r8804, 4;
	or.b32  	%r8806, %r8805, %r8782;
	or.b32  	%r8807, %r8806, %r8787;
	st.local.u32 	[%rd12+88], %r8807;
	or.b32  	%r8808, %r8796, %r8791;
	shr.u32 	%r8809, %r8808, 4;
	or.b32  	%r8810, %r8809, %r8792;
	or.b32  	%r8811, %r8810, %r8797;
	st.local.u32 	[%rd12+92], %r8811;
	ld.local.v4.u32 	{%r8812, %r8813, %r8814, %r8815}, [%rd13+96];
	and.b32  	%r8820, %r8812, 1431655765;
	shl.b32 	%r8821, %r8812, 1;
	and.b32  	%r8822, %r8821, -1431655766;
	or.b32  	%r8823, %r8822, %r8820;
	and.b32  	%r8824, %r8812, -1431655766;
	shr.u32 	%r8825, %r8824, 1;
	or.b32  	%r8826, %r8825, %r8824;
	and.b32  	%r8827, %r8813, 1431655765;
	shl.b32 	%r8828, %r8813, 1;
	and.b32  	%r8829, %r8828, -1431655766;
	or.b32  	%r8830, %r8829, %r8827;
	and.b32  	%r8831, %r8813, -1431655766;
	shr.u32 	%r8832, %r8831, 1;
	or.b32  	%r8833, %r8832, %r8831;
	and.b32  	%r8834, %r8814, 1431655765;
	shl.b32 	%r8835, %r8814, 1;
	and.b32  	%r8836, %r8835, -1431655766;
	or.b32  	%r8837, %r8836, %r8834;
	and.b32  	%r8838, %r8814, -1431655766;
	shr.u32 	%r8839, %r8838, 1;
	or.b32  	%r8840, %r8839, %r8838;
	and.b32  	%r8841, %r8815, 1431655765;
	shl.b32 	%r8842, %r8815, 1;
	and.b32  	%r8843, %r8842, -1431655766;
	or.b32  	%r8844, %r8843, %r8841;
	and.b32  	%r8845, %r8815, -1431655766;
	shr.u32 	%r8846, %r8845, 1;
	or.b32  	%r8847, %r8846, %r8845;
	and.b32  	%r8848, %r8823, 858993459;
	shl.b32 	%r8849, %r8830, 2;
	and.b32  	%r8850, %r8849, -858993460;
	or.b32  	%r8851, %r8850, %r8848;
	and.b32  	%r8852, %r8823, -858993460;
	shr.u32 	%r8853, %r8852, 2;
	and.b32  	%r8854, %r8830, -858993460;
	or.b32  	%r8855, %r8853, %r8854;
	and.b32  	%r8856, %r8826, 858993459;
	shl.b32 	%r8857, %r8833, 2;
	and.b32  	%r8858, %r8857, -858993460;
	or.b32  	%r8859, %r8858, %r8856;
	and.b32  	%r8860, %r8826, -858993460;
	shr.u32 	%r8861, %r8860, 2;
	and.b32  	%r8862, %r8833, -858993460;
	or.b32  	%r8863, %r8861, %r8862;
	and.b32  	%r8864, %r8837, 858993459;
	shl.b32 	%r8865, %r8844, 2;
	and.b32  	%r8866, %r8865, -858993460;
	or.b32  	%r8867, %r8866, %r8864;
	and.b32  	%r8868, %r8837, -858993460;
	shr.u32 	%r8869, %r8868, 2;
	and.b32  	%r8870, %r8844, -858993460;
	or.b32  	%r8871, %r8869, %r8870;
	and.b32  	%r8872, %r8840, 858993459;
	shl.b32 	%r8873, %r8847, 2;
	and.b32  	%r8874, %r8873, -858993460;
	or.b32  	%r8875, %r8874, %r8872;
	and.b32  	%r8876, %r8840, -858993460;
	shr.u32 	%r8877, %r8876, 2;
	and.b32  	%r8878, %r8847, -858993460;
	or.b32  	%r8879, %r8877, %r8878;
	and.b32  	%r8880, %r8851, 84215045;
	shl.b32 	%r8881, %r8867, 4;
	and.b32  	%r8882, %r8881, 1347440720;
	and.b32  	%r8883, %r8851, 1347440720;
	and.b32  	%r8884, %r8867, 1347440720;
	and.b32  	%r8885, %r8859, 168430090;
	shl.b32 	%r8886, %r8875, 4;
	and.b32  	%r8887, %r8886, -1600085856;
	and.b32  	%r8888, %r8859, -1600085856;
	and.b32  	%r8889, %r8875, -1600085856;
	and.b32  	%r8890, %r8855, 84215045;
	shl.b32 	%r8891, %r8871, 4;
	and.b32  	%r8892, %r8891, 1347440720;
	and.b32  	%r8893, %r8855, 1347440720;
	and.b32  	%r8894, %r8871, 1347440720;
	and.b32  	%r8895, %r8863, 168430090;
	shl.b32 	%r8896, %r8879, 4;
	and.b32  	%r8897, %r8896, -1600085856;
	and.b32  	%r8898, %r8863, -1600085856;
	and.b32  	%r8899, %r8879, -1600085856;
	or.b32  	%r8900, %r8885, %r8880;
	or.b32  	%r8901, %r8900, %r8882;
	or.b32  	%r8902, %r8901, %r8887;
	st.local.u32 	[%rd12+96], %r8902;
	or.b32  	%r8903, %r8895, %r8890;
	or.b32  	%r8904, %r8903, %r8892;
	or.b32  	%r8905, %r8904, %r8897;
	st.local.u32 	[%rd12+100], %r8905;
	or.b32  	%r8906, %r8888, %r8883;
	shr.u32 	%r8907, %r8906, 4;
	or.b32  	%r8908, %r8907, %r8884;
	or.b32  	%r8909, %r8908, %r8889;
	st.local.u32 	[%rd12+104], %r8909;
	or.b32  	%r8910, %r8898, %r8893;
	shr.u32 	%r8911, %r8910, 4;
	or.b32  	%r8912, %r8911, %r8894;
	or.b32  	%r8913, %r8912, %r8899;
	st.local.u32 	[%rd12+108], %r8913;
	setp.lt.u32 	%p50, %r12663, 7;
	@%p50 bra 	$L__BB6_67;

	ld.local.v4.u32 	{%r8914, %r8915, %r8916, %r8917}, [%rd13+112];
	and.b32  	%r8922, %r8914, 1431655765;
	shl.b32 	%r8923, %r8914, 1;
	and.b32  	%r8924, %r8923, -1431655766;
	or.b32  	%r8925, %r8924, %r8922;
	and.b32  	%r8926, %r8914, -1431655766;
	shr.u32 	%r8927, %r8926, 1;
	or.b32  	%r8928, %r8927, %r8926;
	and.b32  	%r8929, %r8915, 1431655765;
	shl.b32 	%r8930, %r8915, 1;
	and.b32  	%r8931, %r8930, -1431655766;
	or.b32  	%r8932, %r8931, %r8929;
	and.b32  	%r8933, %r8915, -1431655766;
	shr.u32 	%r8934, %r8933, 1;
	or.b32  	%r8935, %r8934, %r8933;
	and.b32  	%r8936, %r8916, 1431655765;
	shl.b32 	%r8937, %r8916, 1;
	and.b32  	%r8938, %r8937, -1431655766;
	or.b32  	%r8939, %r8938, %r8936;
	and.b32  	%r8940, %r8916, -1431655766;
	shr.u32 	%r8941, %r8940, 1;
	or.b32  	%r8942, %r8941, %r8940;
	and.b32  	%r8943, %r8917, 1431655765;
	shl.b32 	%r8944, %r8917, 1;
	and.b32  	%r8945, %r8944, -1431655766;
	or.b32  	%r8946, %r8945, %r8943;
	and.b32  	%r8947, %r8917, -1431655766;
	shr.u32 	%r8948, %r8947, 1;
	or.b32  	%r8949, %r8948, %r8947;
	and.b32  	%r8950, %r8925, 858993459;
	shl.b32 	%r8951, %r8932, 2;
	and.b32  	%r8952, %r8951, -858993460;
	or.b32  	%r8953, %r8952, %r8950;
	and.b32  	%r8954, %r8925, -858993460;
	shr.u32 	%r8955, %r8954, 2;
	and.b32  	%r8956, %r8932, -858993460;
	or.b32  	%r8957, %r8955, %r8956;
	and.b32  	%r8958, %r8928, 858993459;
	shl.b32 	%r8959, %r8935, 2;
	and.b32  	%r8960, %r8959, -858993460;
	or.b32  	%r8961, %r8960, %r8958;
	and.b32  	%r8962, %r8928, -858993460;
	shr.u32 	%r8963, %r8962, 2;
	and.b32  	%r8964, %r8935, -858993460;
	or.b32  	%r8965, %r8963, %r8964;
	and.b32  	%r8966, %r8939, 858993459;
	shl.b32 	%r8967, %r8946, 2;
	and.b32  	%r8968, %r8967, -858993460;
	or.b32  	%r8969, %r8968, %r8966;
	and.b32  	%r8970, %r8939, -858993460;
	shr.u32 	%r8971, %r8970, 2;
	and.b32  	%r8972, %r8946, -858993460;
	or.b32  	%r8973, %r8971, %r8972;
	and.b32  	%r8974, %r8942, 858993459;
	shl.b32 	%r8975, %r8949, 2;
	and.b32  	%r8976, %r8975, -858993460;
	or.b32  	%r8977, %r8976, %r8974;
	and.b32  	%r8978, %r8942, -858993460;
	shr.u32 	%r8979, %r8978, 2;
	and.b32  	%r8980, %r8949, -858993460;
	or.b32  	%r8981, %r8979, %r8980;
	and.b32  	%r8982, %r8953, 84215045;
	shl.b32 	%r8983, %r8969, 4;
	and.b32  	%r8984, %r8983, 1347440720;
	and.b32  	%r8985, %r8953, 1347440720;
	and.b32  	%r8986, %r8969, 1347440720;
	and.b32  	%r8987, %r8961, 168430090;
	shl.b32 	%r8988, %r8977, 4;
	and.b32  	%r8989, %r8988, -1600085856;
	and.b32  	%r8990, %r8961, -1600085856;
	and.b32  	%r8991, %r8977, -1600085856;
	and.b32  	%r8992, %r8957, 84215045;
	shl.b32 	%r8993, %r8973, 4;
	and.b32  	%r8994, %r8993, 1347440720;
	and.b32  	%r8995, %r8957, 1347440720;
	and.b32  	%r8996, %r8973, 1347440720;
	and.b32  	%r8997, %r8965, 168430090;
	shl.b32 	%r8998, %r8981, 4;
	and.b32  	%r8999, %r8998, -1600085856;
	and.b32  	%r9000, %r8965, -1600085856;
	and.b32  	%r9001, %r8981, -1600085856;
	or.b32  	%r9002, %r8987, %r8982;
	or.b32  	%r9003, %r9002, %r8984;
	or.b32  	%r9004, %r9003, %r8989;
	st.local.u32 	[%rd12+112], %r9004;
	or.b32  	%r9005, %r8997, %r8992;
	or.b32  	%r9006, %r9005, %r8994;
	or.b32  	%r9007, %r9006, %r8999;
	st.local.u32 	[%rd12+116], %r9007;
	or.b32  	%r9008, %r8990, %r8985;
	shr.u32 	%r9009, %r9008, 4;
	or.b32  	%r9010, %r9009, %r8986;
	or.b32  	%r9011, %r9010, %r8991;
	st.local.u32 	[%rd12+120], %r9011;
	or.b32  	%r9012, %r9000, %r8995;
	shr.u32 	%r9013, %r9012, 4;
	or.b32  	%r9014, %r9013, %r8996;
	or.b32  	%r9015, %r9014, %r9001;
	st.local.u32 	[%rd12+124], %r9015;
	ld.local.v4.u32 	{%r9016, %r9017, %r9018, %r9019}, [%rd13+128];
	and.b32  	%r9024, %r9016, 1431655765;
	shl.b32 	%r9025, %r9016, 1;
	and.b32  	%r9026, %r9025, -1431655766;
	or.b32  	%r9027, %r9026, %r9024;
	and.b32  	%r9028, %r9016, -1431655766;
	shr.u32 	%r9029, %r9028, 1;
	or.b32  	%r9030, %r9029, %r9028;
	and.b32  	%r9031, %r9017, 1431655765;
	shl.b32 	%r9032, %r9017, 1;
	and.b32  	%r9033, %r9032, -1431655766;
	or.b32  	%r9034, %r9033, %r9031;
	and.b32  	%r9035, %r9017, -1431655766;
	shr.u32 	%r9036, %r9035, 1;
	or.b32  	%r9037, %r9036, %r9035;
	and.b32  	%r9038, %r9018, 1431655765;
	shl.b32 	%r9039, %r9018, 1;
	and.b32  	%r9040, %r9039, -1431655766;
	or.b32  	%r9041, %r9040, %r9038;
	and.b32  	%r9042, %r9018, -1431655766;
	shr.u32 	%r9043, %r9042, 1;
	or.b32  	%r9044, %r9043, %r9042;
	and.b32  	%r9045, %r9019, 1431655765;
	shl.b32 	%r9046, %r9019, 1;
	and.b32  	%r9047, %r9046, -1431655766;
	or.b32  	%r9048, %r9047, %r9045;
	and.b32  	%r9049, %r9019, -1431655766;
	shr.u32 	%r9050, %r9049, 1;
	or.b32  	%r9051, %r9050, %r9049;
	and.b32  	%r9052, %r9027, 858993459;
	shl.b32 	%r9053, %r9034, 2;
	and.b32  	%r9054, %r9053, -858993460;
	or.b32  	%r9055, %r9054, %r9052;
	and.b32  	%r9056, %r9027, -858993460;
	shr.u32 	%r9057, %r9056, 2;
	and.b32  	%r9058, %r9034, -858993460;
	or.b32  	%r9059, %r9057, %r9058;
	and.b32  	%r9060, %r9030, 858993459;
	shl.b32 	%r9061, %r9037, 2;
	and.b32  	%r9062, %r9061, -858993460;
	or.b32  	%r9063, %r9062, %r9060;
	and.b32  	%r9064, %r9030, -858993460;
	shr.u32 	%r9065, %r9064, 2;
	and.b32  	%r9066, %r9037, -858993460;
	or.b32  	%r9067, %r9065, %r9066;
	and.b32  	%r9068, %r9041, 858993459;
	shl.b32 	%r9069, %r9048, 2;
	and.b32  	%r9070, %r9069, -858993460;
	or.b32  	%r9071, %r9070, %r9068;
	and.b32  	%r9072, %r9041, -858993460;
	shr.u32 	%r9073, %r9072, 2;
	and.b32  	%r9074, %r9048, -858993460;
	or.b32  	%r9075, %r9073, %r9074;
	and.b32  	%r9076, %r9044, 858993459;
	shl.b32 	%r9077, %r9051, 2;
	and.b32  	%r9078, %r9077, -858993460;
	or.b32  	%r9079, %r9078, %r9076;
	and.b32  	%r9080, %r9044, -858993460;
	shr.u32 	%r9081, %r9080, 2;
	and.b32  	%r9082, %r9051, -858993460;
	or.b32  	%r9083, %r9081, %r9082;
	and.b32  	%r9084, %r9055, 84215045;
	shl.b32 	%r9085, %r9071, 4;
	and.b32  	%r9086, %r9085, 1347440720;
	and.b32  	%r9087, %r9055, 1347440720;
	and.b32  	%r9088, %r9071, 1347440720;
	and.b32  	%r9089, %r9063, 168430090;
	shl.b32 	%r9090, %r9079, 4;
	and.b32  	%r9091, %r9090, -1600085856;
	and.b32  	%r9092, %r9063, -1600085856;
	and.b32  	%r9093, %r9079, -1600085856;
	and.b32  	%r9094, %r9059, 84215045;
	shl.b32 	%r9095, %r9075, 4;
	and.b32  	%r9096, %r9095, 1347440720;
	and.b32  	%r9097, %r9059, 1347440720;
	and.b32  	%r9098, %r9075, 1347440720;
	and.b32  	%r9099, %r9067, 168430090;
	shl.b32 	%r9100, %r9083, 4;
	and.b32  	%r9101, %r9100, -1600085856;
	and.b32  	%r9102, %r9067, -1600085856;
	and.b32  	%r9103, %r9083, -1600085856;
	or.b32  	%r9104, %r9089, %r9084;
	or.b32  	%r9105, %r9104, %r9086;
	or.b32  	%r9106, %r9105, %r9091;
	st.local.u32 	[%rd12+128], %r9106;
	or.b32  	%r9107, %r9099, %r9094;
	or.b32  	%r9108, %r9107, %r9096;
	or.b32  	%r9109, %r9108, %r9101;
	st.local.u32 	[%rd12+132], %r9109;
	or.b32  	%r9110, %r9092, %r9087;
	shr.u32 	%r9111, %r9110, 4;
	or.b32  	%r9112, %r9111, %r9088;
	or.b32  	%r9113, %r9112, %r9093;
	st.local.u32 	[%rd12+136], %r9113;
	or.b32  	%r9114, %r9102, %r9097;
	shr.u32 	%r9115, %r9114, 4;
	or.b32  	%r9116, %r9115, %r9098;
	or.b32  	%r9117, %r9116, %r9103;
	st.local.u32 	[%rd12+140], %r9117;
	setp.lt.u32 	%p51, %r12663, 9;
	@%p51 bra 	$L__BB6_67;

	ld.local.v4.u32 	{%r9118, %r9119, %r9120, %r9121}, [%rd13+144];
	and.b32  	%r9126, %r9118, 1431655765;
	shl.b32 	%r9127, %r9118, 1;
	and.b32  	%r9128, %r9127, -1431655766;
	or.b32  	%r9129, %r9128, %r9126;
	and.b32  	%r9130, %r9118, -1431655766;
	shr.u32 	%r9131, %r9130, 1;
	or.b32  	%r9132, %r9131, %r9130;
	and.b32  	%r9133, %r9119, 1431655765;
	shl.b32 	%r9134, %r9119, 1;
	and.b32  	%r9135, %r9134, -1431655766;
	or.b32  	%r9136, %r9135, %r9133;
	and.b32  	%r9137, %r9119, -1431655766;
	shr.u32 	%r9138, %r9137, 1;
	or.b32  	%r9139, %r9138, %r9137;
	and.b32  	%r9140, %r9120, 1431655765;
	shl.b32 	%r9141, %r9120, 1;
	and.b32  	%r9142, %r9141, -1431655766;
	or.b32  	%r9143, %r9142, %r9140;
	and.b32  	%r9144, %r9120, -1431655766;
	shr.u32 	%r9145, %r9144, 1;
	or.b32  	%r9146, %r9145, %r9144;
	and.b32  	%r9147, %r9121, 1431655765;
	shl.b32 	%r9148, %r9121, 1;
	and.b32  	%r9149, %r9148, -1431655766;
	or.b32  	%r9150, %r9149, %r9147;
	and.b32  	%r9151, %r9121, -1431655766;
	shr.u32 	%r9152, %r9151, 1;
	or.b32  	%r9153, %r9152, %r9151;
	and.b32  	%r9154, %r9129, 858993459;
	shl.b32 	%r9155, %r9136, 2;
	and.b32  	%r9156, %r9155, -858993460;
	or.b32  	%r9157, %r9156, %r9154;
	and.b32  	%r9158, %r9129, -858993460;
	shr.u32 	%r9159, %r9158, 2;
	and.b32  	%r9160, %r9136, -858993460;
	or.b32  	%r9161, %r9159, %r9160;
	and.b32  	%r9162, %r9132, 858993459;
	shl.b32 	%r9163, %r9139, 2;
	and.b32  	%r9164, %r9163, -858993460;
	or.b32  	%r9165, %r9164, %r9162;
	and.b32  	%r9166, %r9132, -858993460;
	shr.u32 	%r9167, %r9166, 2;
	and.b32  	%r9168, %r9139, -858993460;
	or.b32  	%r9169, %r9167, %r9168;
	and.b32  	%r9170, %r9143, 858993459;
	shl.b32 	%r9171, %r9150, 2;
	and.b32  	%r9172, %r9171, -858993460;
	or.b32  	%r9173, %r9172, %r9170;
	and.b32  	%r9174, %r9143, -858993460;
	shr.u32 	%r9175, %r9174, 2;
	and.b32  	%r9176, %r9150, -858993460;
	or.b32  	%r9177, %r9175, %r9176;
	and.b32  	%r9178, %r9146, 858993459;
	shl.b32 	%r9179, %r9153, 2;
	and.b32  	%r9180, %r9179, -858993460;
	or.b32  	%r9181, %r9180, %r9178;
	and.b32  	%r9182, %r9146, -858993460;
	shr.u32 	%r9183, %r9182, 2;
	and.b32  	%r9184, %r9153, -858993460;
	or.b32  	%r9185, %r9183, %r9184;
	and.b32  	%r9186, %r9157, 84215045;
	shl.b32 	%r9187, %r9173, 4;
	and.b32  	%r9188, %r9187, 1347440720;
	and.b32  	%r9189, %r9157, 1347440720;
	and.b32  	%r9190, %r9173, 1347440720;
	and.b32  	%r9191, %r9165, 168430090;
	shl.b32 	%r9192, %r9181, 4;
	and.b32  	%r9193, %r9192, -1600085856;
	and.b32  	%r9194, %r9165, -1600085856;
	and.b32  	%r9195, %r9181, -1600085856;
	and.b32  	%r9196, %r9161, 84215045;
	shl.b32 	%r9197, %r9177, 4;
	and.b32  	%r9198, %r9197, 1347440720;
	and.b32  	%r9199, %r9161, 1347440720;
	and.b32  	%r9200, %r9177, 1347440720;
	and.b32  	%r9201, %r9169, 168430090;
	shl.b32 	%r9202, %r9185, 4;
	and.b32  	%r9203, %r9202, -1600085856;
	and.b32  	%r9204, %r9169, -1600085856;
	and.b32  	%r9205, %r9185, -1600085856;
	or.b32  	%r9206, %r9191, %r9186;
	or.b32  	%r9207, %r9206, %r9188;
	or.b32  	%r9208, %r9207, %r9193;
	st.local.u32 	[%rd12+144], %r9208;
	or.b32  	%r9209, %r9201, %r9196;
	or.b32  	%r9210, %r9209, %r9198;
	or.b32  	%r9211, %r9210, %r9203;
	st.local.u32 	[%rd12+148], %r9211;
	or.b32  	%r9212, %r9194, %r9189;
	shr.u32 	%r9213, %r9212, 4;
	or.b32  	%r9214, %r9213, %r9190;
	or.b32  	%r9215, %r9214, %r9195;
	st.local.u32 	[%rd12+152], %r9215;
	or.b32  	%r9216, %r9204, %r9199;
	shr.u32 	%r9217, %r9216, 4;
	or.b32  	%r9218, %r9217, %r9200;
	or.b32  	%r9219, %r9218, %r9205;
	st.local.u32 	[%rd12+156], %r9219;
	ld.local.v4.u32 	{%r9220, %r9221, %r9222, %r9223}, [%rd13+160];
	and.b32  	%r9228, %r9220, 1431655765;
	shl.b32 	%r9229, %r9220, 1;
	and.b32  	%r9230, %r9229, -1431655766;
	or.b32  	%r9231, %r9230, %r9228;
	and.b32  	%r9232, %r9220, -1431655766;
	shr.u32 	%r9233, %r9232, 1;
	or.b32  	%r9234, %r9233, %r9232;
	and.b32  	%r9235, %r9221, 1431655765;
	shl.b32 	%r9236, %r9221, 1;
	and.b32  	%r9237, %r9236, -1431655766;
	or.b32  	%r9238, %r9237, %r9235;
	and.b32  	%r9239, %r9221, -1431655766;
	shr.u32 	%r9240, %r9239, 1;
	or.b32  	%r9241, %r9240, %r9239;
	and.b32  	%r9242, %r9222, 1431655765;
	shl.b32 	%r9243, %r9222, 1;
	and.b32  	%r9244, %r9243, -1431655766;
	or.b32  	%r9245, %r9244, %r9242;
	and.b32  	%r9246, %r9222, -1431655766;
	shr.u32 	%r9247, %r9246, 1;
	or.b32  	%r9248, %r9247, %r9246;
	and.b32  	%r9249, %r9223, 1431655765;
	shl.b32 	%r9250, %r9223, 1;
	and.b32  	%r9251, %r9250, -1431655766;
	or.b32  	%r9252, %r9251, %r9249;
	and.b32  	%r9253, %r9223, -1431655766;
	shr.u32 	%r9254, %r9253, 1;
	or.b32  	%r9255, %r9254, %r9253;
	and.b32  	%r9256, %r9231, 858993459;
	shl.b32 	%r9257, %r9238, 2;
	and.b32  	%r9258, %r9257, -858993460;
	or.b32  	%r9259, %r9258, %r9256;
	and.b32  	%r9260, %r9231, -858993460;
	shr.u32 	%r9261, %r9260, 2;
	and.b32  	%r9262, %r9238, -858993460;
	or.b32  	%r9263, %r9261, %r9262;
	and.b32  	%r9264, %r9234, 858993459;
	shl.b32 	%r9265, %r9241, 2;
	and.b32  	%r9266, %r9265, -858993460;
	or.b32  	%r9267, %r9266, %r9264;
	and.b32  	%r9268, %r9234, -858993460;
	shr.u32 	%r9269, %r9268, 2;
	and.b32  	%r9270, %r9241, -858993460;
	or.b32  	%r9271, %r9269, %r9270;
	and.b32  	%r9272, %r9245, 858993459;
	shl.b32 	%r9273, %r9252, 2;
	and.b32  	%r9274, %r9273, -858993460;
	or.b32  	%r9275, %r9274, %r9272;
	and.b32  	%r9276, %r9245, -858993460;
	shr.u32 	%r9277, %r9276, 2;
	and.b32  	%r9278, %r9252, -858993460;
	or.b32  	%r9279, %r9277, %r9278;
	and.b32  	%r9280, %r9248, 858993459;
	shl.b32 	%r9281, %r9255, 2;
	and.b32  	%r9282, %r9281, -858993460;
	or.b32  	%r9283, %r9282, %r9280;
	and.b32  	%r9284, %r9248, -858993460;
	shr.u32 	%r9285, %r9284, 2;
	and.b32  	%r9286, %r9255, -858993460;
	or.b32  	%r9287, %r9285, %r9286;
	and.b32  	%r9288, %r9259, 84215045;
	shl.b32 	%r9289, %r9275, 4;
	and.b32  	%r9290, %r9289, 1347440720;
	and.b32  	%r9291, %r9259, 1347440720;
	and.b32  	%r9292, %r9275, 1347440720;
	and.b32  	%r9293, %r9267, 168430090;
	shl.b32 	%r9294, %r9283, 4;
	and.b32  	%r9295, %r9294, -1600085856;
	and.b32  	%r9296, %r9267, -1600085856;
	and.b32  	%r9297, %r9283, -1600085856;
	and.b32  	%r9298, %r9263, 84215045;
	shl.b32 	%r9299, %r9279, 4;
	and.b32  	%r9300, %r9299, 1347440720;
	and.b32  	%r9301, %r9263, 1347440720;
	and.b32  	%r9302, %r9279, 1347440720;
	and.b32  	%r9303, %r9271, 168430090;
	shl.b32 	%r9304, %r9287, 4;
	and.b32  	%r9305, %r9304, -1600085856;
	and.b32  	%r9306, %r9271, -1600085856;
	and.b32  	%r9307, %r9287, -1600085856;
	or.b32  	%r9308, %r9293, %r9288;
	or.b32  	%r9309, %r9308, %r9290;
	or.b32  	%r9310, %r9309, %r9295;
	st.local.u32 	[%rd12+160], %r9310;
	or.b32  	%r9311, %r9303, %r9298;
	or.b32  	%r9312, %r9311, %r9300;
	or.b32  	%r9313, %r9312, %r9305;
	st.local.u32 	[%rd12+164], %r9313;
	or.b32  	%r9314, %r9296, %r9291;
	shr.u32 	%r9315, %r9314, 4;
	or.b32  	%r9316, %r9315, %r9292;
	or.b32  	%r9317, %r9316, %r9297;
	st.local.u32 	[%rd12+168], %r9317;
	or.b32  	%r9318, %r9306, %r9301;
	shr.u32 	%r9319, %r9318, 4;
	or.b32  	%r9320, %r9319, %r9302;
	or.b32  	%r9321, %r9320, %r9307;
	st.local.u32 	[%rd12+172], %r9321;
	setp.lt.u32 	%p52, %r12663, 11;
	@%p52 bra 	$L__BB6_67;

	ld.local.v4.u32 	{%r9322, %r9323, %r9324, %r9325}, [%rd13+176];
	and.b32  	%r9330, %r9322, 1431655765;
	shl.b32 	%r9331, %r9322, 1;
	and.b32  	%r9332, %r9331, -1431655766;
	or.b32  	%r9333, %r9332, %r9330;
	and.b32  	%r9334, %r9322, -1431655766;
	shr.u32 	%r9335, %r9334, 1;
	or.b32  	%r9336, %r9335, %r9334;
	and.b32  	%r9337, %r9323, 1431655765;
	shl.b32 	%r9338, %r9323, 1;
	and.b32  	%r9339, %r9338, -1431655766;
	or.b32  	%r9340, %r9339, %r9337;
	and.b32  	%r9341, %r9323, -1431655766;
	shr.u32 	%r9342, %r9341, 1;
	or.b32  	%r9343, %r9342, %r9341;
	and.b32  	%r9344, %r9324, 1431655765;
	shl.b32 	%r9345, %r9324, 1;
	and.b32  	%r9346, %r9345, -1431655766;
	or.b32  	%r9347, %r9346, %r9344;
	and.b32  	%r9348, %r9324, -1431655766;
	shr.u32 	%r9349, %r9348, 1;
	or.b32  	%r9350, %r9349, %r9348;
	and.b32  	%r9351, %r9325, 1431655765;
	shl.b32 	%r9352, %r9325, 1;
	and.b32  	%r9353, %r9352, -1431655766;
	or.b32  	%r9354, %r9353, %r9351;
	and.b32  	%r9355, %r9325, -1431655766;
	shr.u32 	%r9356, %r9355, 1;
	or.b32  	%r9357, %r9356, %r9355;
	and.b32  	%r9358, %r9333, 858993459;
	shl.b32 	%r9359, %r9340, 2;
	and.b32  	%r9360, %r9359, -858993460;
	or.b32  	%r9361, %r9360, %r9358;
	and.b32  	%r9362, %r9333, -858993460;
	shr.u32 	%r9363, %r9362, 2;
	and.b32  	%r9364, %r9340, -858993460;
	or.b32  	%r9365, %r9363, %r9364;
	and.b32  	%r9366, %r9336, 858993459;
	shl.b32 	%r9367, %r9343, 2;
	and.b32  	%r9368, %r9367, -858993460;
	or.b32  	%r9369, %r9368, %r9366;
	and.b32  	%r9370, %r9336, -858993460;
	shr.u32 	%r9371, %r9370, 2;
	and.b32  	%r9372, %r9343, -858993460;
	or.b32  	%r9373, %r9371, %r9372;
	and.b32  	%r9374, %r9347, 858993459;
	shl.b32 	%r9375, %r9354, 2;
	and.b32  	%r9376, %r9375, -858993460;
	or.b32  	%r9377, %r9376, %r9374;
	and.b32  	%r9378, %r9347, -858993460;
	shr.u32 	%r9379, %r9378, 2;
	and.b32  	%r9380, %r9354, -858993460;
	or.b32  	%r9381, %r9379, %r9380;
	and.b32  	%r9382, %r9350, 858993459;
	shl.b32 	%r9383, %r9357, 2;
	and.b32  	%r9384, %r9383, -858993460;
	or.b32  	%r9385, %r9384, %r9382;
	and.b32  	%r9386, %r9350, -858993460;
	shr.u32 	%r9387, %r9386, 2;
	and.b32  	%r9388, %r9357, -858993460;
	or.b32  	%r9389, %r9387, %r9388;
	and.b32  	%r9390, %r9361, 84215045;
	shl.b32 	%r9391, %r9377, 4;
	and.b32  	%r9392, %r9391, 1347440720;
	and.b32  	%r9393, %r9361, 1347440720;
	and.b32  	%r9394, %r9377, 1347440720;
	and.b32  	%r9395, %r9369, 168430090;
	shl.b32 	%r9396, %r9385, 4;
	and.b32  	%r9397, %r9396, -1600085856;
	and.b32  	%r9398, %r9369, -1600085856;
	and.b32  	%r9399, %r9385, -1600085856;
	and.b32  	%r9400, %r9365, 84215045;
	shl.b32 	%r9401, %r9381, 4;
	and.b32  	%r9402, %r9401, 1347440720;
	and.b32  	%r9403, %r9365, 1347440720;
	and.b32  	%r9404, %r9381, 1347440720;
	and.b32  	%r9405, %r9373, 168430090;
	shl.b32 	%r9406, %r9389, 4;
	and.b32  	%r9407, %r9406, -1600085856;
	and.b32  	%r9408, %r9373, -1600085856;
	and.b32  	%r9409, %r9389, -1600085856;
	or.b32  	%r9410, %r9395, %r9390;
	or.b32  	%r9411, %r9410, %r9392;
	or.b32  	%r9412, %r9411, %r9397;
	st.local.u32 	[%rd12+176], %r9412;
	or.b32  	%r9413, %r9405, %r9400;
	or.b32  	%r9414, %r9413, %r9402;
	or.b32  	%r9415, %r9414, %r9407;
	st.local.u32 	[%rd12+180], %r9415;
	or.b32  	%r9416, %r9398, %r9393;
	shr.u32 	%r9417, %r9416, 4;
	or.b32  	%r9418, %r9417, %r9394;
	or.b32  	%r9419, %r9418, %r9399;
	st.local.u32 	[%rd12+184], %r9419;
	or.b32  	%r9420, %r9408, %r9403;
	shr.u32 	%r9421, %r9420, 4;
	or.b32  	%r9422, %r9421, %r9404;
	or.b32  	%r9423, %r9422, %r9409;
	st.local.u32 	[%rd12+188], %r9423;
	ld.local.v4.u32 	{%r9424, %r9425, %r9426, %r9427}, [%rd13+192];
	and.b32  	%r9432, %r9424, 1431655765;
	shl.b32 	%r9433, %r9424, 1;
	and.b32  	%r9434, %r9433, -1431655766;
	or.b32  	%r9435, %r9434, %r9432;
	and.b32  	%r9436, %r9424, -1431655766;
	shr.u32 	%r9437, %r9436, 1;
	or.b32  	%r9438, %r9437, %r9436;
	and.b32  	%r9439, %r9425, 1431655765;
	shl.b32 	%r9440, %r9425, 1;
	and.b32  	%r9441, %r9440, -1431655766;
	or.b32  	%r9442, %r9441, %r9439;
	and.b32  	%r9443, %r9425, -1431655766;
	shr.u32 	%r9444, %r9443, 1;
	or.b32  	%r9445, %r9444, %r9443;
	and.b32  	%r9446, %r9426, 1431655765;
	shl.b32 	%r9447, %r9426, 1;
	and.b32  	%r9448, %r9447, -1431655766;
	or.b32  	%r9449, %r9448, %r9446;
	and.b32  	%r9450, %r9426, -1431655766;
	shr.u32 	%r9451, %r9450, 1;
	or.b32  	%r9452, %r9451, %r9450;
	and.b32  	%r9453, %r9427, 1431655765;
	shl.b32 	%r9454, %r9427, 1;
	and.b32  	%r9455, %r9454, -1431655766;
	or.b32  	%r9456, %r9455, %r9453;
	and.b32  	%r9457, %r9427, -1431655766;
	shr.u32 	%r9458, %r9457, 1;
	or.b32  	%r9459, %r9458, %r9457;
	and.b32  	%r9460, %r9435, 858993459;
	shl.b32 	%r9461, %r9442, 2;
	and.b32  	%r9462, %r9461, -858993460;
	or.b32  	%r9463, %r9462, %r9460;
	and.b32  	%r9464, %r9435, -858993460;
	shr.u32 	%r9465, %r9464, 2;
	and.b32  	%r9466, %r9442, -858993460;
	or.b32  	%r9467, %r9465, %r9466;
	and.b32  	%r9468, %r9438, 858993459;
	shl.b32 	%r9469, %r9445, 2;
	and.b32  	%r9470, %r9469, -858993460;
	or.b32  	%r9471, %r9470, %r9468;
	and.b32  	%r9472, %r9438, -858993460;
	shr.u32 	%r9473, %r9472, 2;
	and.b32  	%r9474, %r9445, -858993460;
	or.b32  	%r9475, %r9473, %r9474;
	and.b32  	%r9476, %r9449, 858993459;
	shl.b32 	%r9477, %r9456, 2;
	and.b32  	%r9478, %r9477, -858993460;
	or.b32  	%r9479, %r9478, %r9476;
	and.b32  	%r9480, %r9449, -858993460;
	shr.u32 	%r9481, %r9480, 2;
	and.b32  	%r9482, %r9456, -858993460;
	or.b32  	%r9483, %r9481, %r9482;
	and.b32  	%r9484, %r9452, 858993459;
	shl.b32 	%r9485, %r9459, 2;
	and.b32  	%r9486, %r9485, -858993460;
	or.b32  	%r9487, %r9486, %r9484;
	and.b32  	%r9488, %r9452, -858993460;
	shr.u32 	%r9489, %r9488, 2;
	and.b32  	%r9490, %r9459, -858993460;
	or.b32  	%r9491, %r9489, %r9490;
	and.b32  	%r9492, %r9463, 84215045;
	shl.b32 	%r9493, %r9479, 4;
	and.b32  	%r9494, %r9493, 1347440720;
	and.b32  	%r9495, %r9463, 1347440720;
	and.b32  	%r9496, %r9479, 1347440720;
	and.b32  	%r9497, %r9471, 168430090;
	shl.b32 	%r9498, %r9487, 4;
	and.b32  	%r9499, %r9498, -1600085856;
	and.b32  	%r9500, %r9471, -1600085856;
	and.b32  	%r9501, %r9487, -1600085856;
	and.b32  	%r9502, %r9467, 84215045;
	shl.b32 	%r9503, %r9483, 4;
	and.b32  	%r9504, %r9503, 1347440720;
	and.b32  	%r9505, %r9467, 1347440720;
	and.b32  	%r9506, %r9483, 1347440720;
	and.b32  	%r9507, %r9475, 168430090;
	shl.b32 	%r9508, %r9491, 4;
	and.b32  	%r9509, %r9508, -1600085856;
	and.b32  	%r9510, %r9475, -1600085856;
	and.b32  	%r9511, %r9491, -1600085856;
	or.b32  	%r9512, %r9497, %r9492;
	or.b32  	%r9513, %r9512, %r9494;
	or.b32  	%r9514, %r9513, %r9499;
	st.local.u32 	[%rd12+192], %r9514;
	or.b32  	%r9515, %r9507, %r9502;
	or.b32  	%r9516, %r9515, %r9504;
	or.b32  	%r9517, %r9516, %r9509;
	st.local.u32 	[%rd12+196], %r9517;
	or.b32  	%r9518, %r9500, %r9495;
	shr.u32 	%r9519, %r9518, 4;
	or.b32  	%r9520, %r9519, %r9496;
	or.b32  	%r9521, %r9520, %r9501;
	st.local.u32 	[%rd12+200], %r9521;
	or.b32  	%r9522, %r9510, %r9505;
	shr.u32 	%r9523, %r9522, 4;
	or.b32  	%r9524, %r9523, %r9506;
	or.b32  	%r9525, %r9524, %r9511;
	st.local.u32 	[%rd12+204], %r9525;
	setp.lt.u32 	%p53, %r12663, 13;
	@%p53 bra 	$L__BB6_67;

	ld.local.v4.u32 	{%r9526, %r9527, %r9528, %r9529}, [%rd13+208];
	and.b32  	%r9534, %r9526, 1431655765;
	shl.b32 	%r9535, %r9526, 1;
	and.b32  	%r9536, %r9535, -1431655766;
	or.b32  	%r9537, %r9536, %r9534;
	and.b32  	%r9538, %r9526, -1431655766;
	shr.u32 	%r9539, %r9538, 1;
	or.b32  	%r9540, %r9539, %r9538;
	and.b32  	%r9541, %r9527, 1431655765;
	shl.b32 	%r9542, %r9527, 1;
	and.b32  	%r9543, %r9542, -1431655766;
	or.b32  	%r9544, %r9543, %r9541;
	and.b32  	%r9545, %r9527, -1431655766;
	shr.u32 	%r9546, %r9545, 1;
	or.b32  	%r9547, %r9546, %r9545;
	and.b32  	%r9548, %r9528, 1431655765;
	shl.b32 	%r9549, %r9528, 1;
	and.b32  	%r9550, %r9549, -1431655766;
	or.b32  	%r9551, %r9550, %r9548;
	and.b32  	%r9552, %r9528, -1431655766;
	shr.u32 	%r9553, %r9552, 1;
	or.b32  	%r9554, %r9553, %r9552;
	and.b32  	%r9555, %r9529, 1431655765;
	shl.b32 	%r9556, %r9529, 1;
	and.b32  	%r9557, %r9556, -1431655766;
	or.b32  	%r9558, %r9557, %r9555;
	and.b32  	%r9559, %r9529, -1431655766;
	shr.u32 	%r9560, %r9559, 1;
	or.b32  	%r9561, %r9560, %r9559;
	and.b32  	%r9562, %r9537, 858993459;
	shl.b32 	%r9563, %r9544, 2;
	and.b32  	%r9564, %r9563, -858993460;
	or.b32  	%r9565, %r9564, %r9562;
	and.b32  	%r9566, %r9537, -858993460;
	shr.u32 	%r9567, %r9566, 2;
	and.b32  	%r9568, %r9544, -858993460;
	or.b32  	%r9569, %r9567, %r9568;
	and.b32  	%r9570, %r9540, 858993459;
	shl.b32 	%r9571, %r9547, 2;
	and.b32  	%r9572, %r9571, -858993460;
	or.b32  	%r9573, %r9572, %r9570;
	and.b32  	%r9574, %r9540, -858993460;
	shr.u32 	%r9575, %r9574, 2;
	and.b32  	%r9576, %r9547, -858993460;
	or.b32  	%r9577, %r9575, %r9576;
	and.b32  	%r9578, %r9551, 858993459;
	shl.b32 	%r9579, %r9558, 2;
	and.b32  	%r9580, %r9579, -858993460;
	or.b32  	%r9581, %r9580, %r9578;
	and.b32  	%r9582, %r9551, -858993460;
	shr.u32 	%r9583, %r9582, 2;
	and.b32  	%r9584, %r9558, -858993460;
	or.b32  	%r9585, %r9583, %r9584;
	and.b32  	%r9586, %r9554, 858993459;
	shl.b32 	%r9587, %r9561, 2;
	and.b32  	%r9588, %r9587, -858993460;
	or.b32  	%r9589, %r9588, %r9586;
	and.b32  	%r9590, %r9554, -858993460;
	shr.u32 	%r9591, %r9590, 2;
	and.b32  	%r9592, %r9561, -858993460;
	or.b32  	%r9593, %r9591, %r9592;
	and.b32  	%r9594, %r9565, 84215045;
	shl.b32 	%r9595, %r9581, 4;
	and.b32  	%r9596, %r9595, 1347440720;
	and.b32  	%r9597, %r9565, 1347440720;
	and.b32  	%r9598, %r9581, 1347440720;
	and.b32  	%r9599, %r9573, 168430090;
	shl.b32 	%r9600, %r9589, 4;
	and.b32  	%r9601, %r9600, -1600085856;
	and.b32  	%r9602, %r9573, -1600085856;
	and.b32  	%r9603, %r9589, -1600085856;
	and.b32  	%r9604, %r9569, 84215045;
	shl.b32 	%r9605, %r9585, 4;
	and.b32  	%r9606, %r9605, 1347440720;
	and.b32  	%r9607, %r9569, 1347440720;
	and.b32  	%r9608, %r9585, 1347440720;
	and.b32  	%r9609, %r9577, 168430090;
	shl.b32 	%r9610, %r9593, 4;
	and.b32  	%r9611, %r9610, -1600085856;
	and.b32  	%r9612, %r9577, -1600085856;
	and.b32  	%r9613, %r9593, -1600085856;
	or.b32  	%r9614, %r9599, %r9594;
	or.b32  	%r9615, %r9614, %r9596;
	or.b32  	%r9616, %r9615, %r9601;
	st.local.u32 	[%rd12+208], %r9616;
	or.b32  	%r9617, %r9609, %r9604;
	or.b32  	%r9618, %r9617, %r9606;
	or.b32  	%r9619, %r9618, %r9611;
	st.local.u32 	[%rd12+212], %r9619;
	or.b32  	%r9620, %r9602, %r9597;
	shr.u32 	%r9621, %r9620, 4;
	or.b32  	%r9622, %r9621, %r9598;
	or.b32  	%r9623, %r9622, %r9603;
	st.local.u32 	[%rd12+216], %r9623;
	or.b32  	%r9624, %r9612, %r9607;
	shr.u32 	%r9625, %r9624, 4;
	or.b32  	%r9626, %r9625, %r9608;
	or.b32  	%r9627, %r9626, %r9613;
	st.local.u32 	[%rd12+220], %r9627;
	ld.local.v4.u32 	{%r9628, %r9629, %r9630, %r9631}, [%rd13+224];
	and.b32  	%r9636, %r9628, 1431655765;
	shl.b32 	%r9637, %r9628, 1;
	and.b32  	%r9638, %r9637, -1431655766;
	or.b32  	%r9639, %r9638, %r9636;
	and.b32  	%r9640, %r9628, -1431655766;
	shr.u32 	%r9641, %r9640, 1;
	or.b32  	%r9642, %r9641, %r9640;
	and.b32  	%r9643, %r9629, 1431655765;
	shl.b32 	%r9644, %r9629, 1;
	and.b32  	%r9645, %r9644, -1431655766;
	or.b32  	%r9646, %r9645, %r9643;
	and.b32  	%r9647, %r9629, -1431655766;
	shr.u32 	%r9648, %r9647, 1;
	or.b32  	%r9649, %r9648, %r9647;
	and.b32  	%r9650, %r9630, 1431655765;
	shl.b32 	%r9651, %r9630, 1;
	and.b32  	%r9652, %r9651, -1431655766;
	or.b32  	%r9653, %r9652, %r9650;
	and.b32  	%r9654, %r9630, -1431655766;
	shr.u32 	%r9655, %r9654, 1;
	or.b32  	%r9656, %r9655, %r9654;
	and.b32  	%r9657, %r9631, 1431655765;
	shl.b32 	%r9658, %r9631, 1;
	and.b32  	%r9659, %r9658, -1431655766;
	or.b32  	%r9660, %r9659, %r9657;
	and.b32  	%r9661, %r9631, -1431655766;
	shr.u32 	%r9662, %r9661, 1;
	or.b32  	%r9663, %r9662, %r9661;
	and.b32  	%r9664, %r9639, 858993459;
	shl.b32 	%r9665, %r9646, 2;
	and.b32  	%r9666, %r9665, -858993460;
	or.b32  	%r9667, %r9666, %r9664;
	and.b32  	%r9668, %r9639, -858993460;
	shr.u32 	%r9669, %r9668, 2;
	and.b32  	%r9670, %r9646, -858993460;
	or.b32  	%r9671, %r9669, %r9670;
	and.b32  	%r9672, %r9642, 858993459;
	shl.b32 	%r9673, %r9649, 2;
	and.b32  	%r9674, %r9673, -858993460;
	or.b32  	%r9675, %r9674, %r9672;
	and.b32  	%r9676, %r9642, -858993460;
	shr.u32 	%r9677, %r9676, 2;
	and.b32  	%r9678, %r9649, -858993460;
	or.b32  	%r9679, %r9677, %r9678;
	and.b32  	%r9680, %r9653, 858993459;
	shl.b32 	%r9681, %r9660, 2;
	and.b32  	%r9682, %r9681, -858993460;
	or.b32  	%r9683, %r9682, %r9680;
	and.b32  	%r9684, %r9653, -858993460;
	shr.u32 	%r9685, %r9684, 2;
	and.b32  	%r9686, %r9660, -858993460;
	or.b32  	%r9687, %r9685, %r9686;
	and.b32  	%r9688, %r9656, 858993459;
	shl.b32 	%r9689, %r9663, 2;
	and.b32  	%r9690, %r9689, -858993460;
	or.b32  	%r9691, %r9690, %r9688;
	and.b32  	%r9692, %r9656, -858993460;
	shr.u32 	%r9693, %r9692, 2;
	and.b32  	%r9694, %r9663, -858993460;
	or.b32  	%r9695, %r9693, %r9694;
	and.b32  	%r9696, %r9667, 84215045;
	shl.b32 	%r9697, %r9683, 4;
	and.b32  	%r9698, %r9697, 1347440720;
	and.b32  	%r9699, %r9667, 1347440720;
	and.b32  	%r9700, %r9683, 1347440720;
	and.b32  	%r9701, %r9675, 168430090;
	shl.b32 	%r9702, %r9691, 4;
	and.b32  	%r9703, %r9702, -1600085856;
	and.b32  	%r9704, %r9675, -1600085856;
	and.b32  	%r9705, %r9691, -1600085856;
	and.b32  	%r9706, %r9671, 84215045;
	shl.b32 	%r9707, %r9687, 4;
	and.b32  	%r9708, %r9707, 1347440720;
	and.b32  	%r9709, %r9671, 1347440720;
	and.b32  	%r9710, %r9687, 1347440720;
	and.b32  	%r9711, %r9679, 168430090;
	shl.b32 	%r9712, %r9695, 4;
	and.b32  	%r9713, %r9712, -1600085856;
	and.b32  	%r9714, %r9679, -1600085856;
	and.b32  	%r9715, %r9695, -1600085856;
	or.b32  	%r9716, %r9701, %r9696;
	or.b32  	%r9717, %r9716, %r9698;
	or.b32  	%r9718, %r9717, %r9703;
	st.local.u32 	[%rd12+224], %r9718;
	or.b32  	%r9719, %r9711, %r9706;
	or.b32  	%r9720, %r9719, %r9708;
	or.b32  	%r9721, %r9720, %r9713;
	st.local.u32 	[%rd12+228], %r9721;
	or.b32  	%r9722, %r9704, %r9699;
	shr.u32 	%r9723, %r9722, 4;
	or.b32  	%r9724, %r9723, %r9700;
	or.b32  	%r9725, %r9724, %r9705;
	st.local.u32 	[%rd12+232], %r9725;
	or.b32  	%r9726, %r9714, %r9709;
	shr.u32 	%r9727, %r9726, 4;
	or.b32  	%r9728, %r9727, %r9710;
	or.b32  	%r9729, %r9728, %r9715;
	st.local.u32 	[%rd12+236], %r9729;

$L__BB6_67:
	shr.u16 	%rs145, %rs45, 8;
	shr.u16 	%rs144, %rs44, 8;
	shr.u16 	%rs143, %rs43, 8;
	shr.u16 	%rs142, %rs42, 8;
	st.local.u32 	[%rd12+720], %r12663;
	cvt.u16.u32 	%rs61, %r112;
	xor.b16  	%rs18, %rs42, %rs61;
	shr.u32 	%r9730, %r112, 8;
	cvt.u16.u32 	%rs62, %r9730;
	xor.b16  	%rs19, %rs142, %rs62;
	shr.u32 	%r9731, %r112, 16;
	cvt.u16.u32 	%rs63, %r9731;
	xor.b16  	%rs20, %rs43, %rs63;
	shr.u32 	%r9732, %r112, 24;
	cvt.u16.u32 	%rs64, %r9732;
	xor.b16  	%rs21, %rs143, %rs64;
	cvt.u16.u32 	%rs65, %r113;
	xor.b16  	%rs22, %rs44, %rs65;
	shr.u32 	%r9733, %r113, 8;
	cvt.u16.u32 	%rs66, %r9733;
	xor.b16  	%rs23, %rs144, %rs66;
	shr.u32 	%r9734, %r113, 16;
	cvt.u16.u32 	%rs67, %r9734;
	xor.b16  	%rs24, %rs45, %rs67;
	shr.u32 	%r9735, %r113, 24;
	cvt.u16.u32 	%rs68, %r9735;
	xor.b16  	%rs25, %rs145, %rs68;
	@%p47 bra 	$L__BB6_71;

	shl.b32 	%r9736, %r12663, 2;
	add.s32 	%r114, %r9736, 4;
	setp.eq.s32 	%p55, %r114, 0;
	@%p55 bra 	$L__BB6_71;

	mov.u32 	%r12675, 0;
	mov.u64 	%rd9569, %rd12;
	mov.u64 	%rd9570, %rd12;

$L__BB6_70:
	ld.local.u32 	%r9738, [%rd9570];
	and.b32  	%r9739, %r9738, 1431655765;
	shl.b32 	%r9740, %r9738, 1;
	and.b32  	%r9741, %r9740, -1431655766;
	or.b32  	%r9742, %r9741, %r9739;
	st.local.u32 	[%rd9569+240], %r9742;
	and.b32  	%r9743, %r9738, -1431655766;
	shr.u32 	%r9744, %r9743, 1;
	or.b32  	%r9745, %r9744, %r9743;
	st.local.u32 	[%rd9569+244], %r9745;
	ld.local.u32 	%r9746, [%rd9570+4];
	and.b32  	%r9747, %r9746, 1431655765;
	shl.b32 	%r9748, %r9746, 1;
	and.b32  	%r9749, %r9748, -1431655766;
	or.b32  	%r9750, %r9749, %r9747;
	st.local.u32 	[%rd9569+248], %r9750;
	and.b32  	%r9751, %r9746, -1431655766;
	shr.u32 	%r9752, %r9751, 1;
	or.b32  	%r9753, %r9752, %r9751;
	st.local.u32 	[%rd9569+252], %r9753;
	ld.local.u32 	%r9754, [%rd9570+8];
	and.b32  	%r9755, %r9754, 1431655765;
	shl.b32 	%r9756, %r9754, 1;
	and.b32  	%r9757, %r9756, -1431655766;
	or.b32  	%r9758, %r9757, %r9755;
	st.local.u32 	[%rd9569+256], %r9758;
	and.b32  	%r9759, %r9754, -1431655766;
	shr.u32 	%r9760, %r9759, 1;
	or.b32  	%r9761, %r9760, %r9759;
	st.local.u32 	[%rd9569+260], %r9761;
	ld.local.u32 	%r9762, [%rd9570+12];
	and.b32  	%r9763, %r9762, 1431655765;
	shl.b32 	%r9764, %r9762, 1;
	and.b32  	%r9765, %r9764, -1431655766;
	or.b32  	%r9766, %r9765, %r9763;
	st.local.u32 	[%rd9569+264], %r9766;
	and.b32  	%r9767, %r9762, -1431655766;
	shr.u32 	%r9768, %r9767, 1;
	or.b32  	%r9769, %r9768, %r9767;
	st.local.u32 	[%rd9569+268], %r9769;
	add.s64 	%rd9570, %rd9570, 16;
	add.s64 	%rd9569, %rd9569, 32;
	add.s32 	%r12675, %r12675, 4;
	setp.lt.u32 	%p56, %r12675, %r114;
	@%p56 bra 	$L__BB6_70;

$L__BB6_71:
	add.u64 	%rd9574, %SPL, 992;
	cvt.u64.u16 	%rd6789, %rs17;
	and.b64  	%rd158, %rd6789, 255;
	cvt.u64.u16 	%rd159, %rs25;
	cvt.u64.u16 	%rd6790, %rs24;
	and.b64  	%rd160, %rd6790, 255;
	cvt.u64.u16 	%rd6791, %rs23;
	and.b64  	%rd161, %rd6791, 255;
	cvt.u64.u16 	%rd6792, %rs22;
	and.b64  	%rd162, %rd6792, 255;
	cvt.u64.u16 	%rd163, %rs21;
	cvt.u64.u16 	%rd6793, %rs20;
	and.b64  	%rd164, %rd6793, 255;
	cvt.u64.u16 	%rd6794, %rs19;
	and.b64  	%rd165, %rd6794, 255;
	cvt.u64.u16 	%rd6795, %rs18;
	and.b64  	%rd166, %rd6795, 255;
	mov.u32 	%r12695, 32;

$L__BB6_72:
	setp.eq.s32 	%p57, %r12695, 0;
	@%p57 bra 	$L__BB6_111;

	ld.const.u8 	%rs26, [%rd9573];
	cvt.u32.u16 	%r9771, %rs26;
	and.b32  	%r9772, %r9771, 255;
	ld.const.u8 	%rs27, [%rd9573+1];
	cvt.u32.u16 	%r9773, %rs27;
	prmt.b32 	%r9774, %r9773, %r9772, 30212;
	ld.const.u8 	%rs28, [%rd9573+2];
	cvt.u32.u16 	%r9775, %rs28;
	prmt.b32 	%r9776, %r9775, %r9774, 28756;
	ld.const.u8 	%rs29, [%rd9573+3];
	cvt.u32.u16 	%r9777, %rs29;
	prmt.b32 	%r9778, %r9777, %r9776, 1620;
	ld.const.u8 	%rs30, [%rd9573+4];
	cvt.u32.u16 	%r9779, %rs30;
	and.b32  	%r9780, %r9779, 255;
	ld.const.u8 	%rs31, [%rd9573+5];
	cvt.u32.u16 	%r9781, %rs31;
	prmt.b32 	%r9782, %r9781, %r9780, 30212;
	ld.const.u8 	%rs32, [%rd9573+6];
	cvt.u32.u16 	%r9783, %rs32;
	prmt.b32 	%r9784, %r9783, %r9782, 28756;
	ld.const.u8 	%rs33, [%rd9573+7];
	cvt.u32.u16 	%r9785, %rs33;
	prmt.b32 	%r9786, %r9785, %r9784, 1620;
	ld.const.u8 	%rs34, [%rd9573+8];
	cvt.u32.u16 	%r9787, %rs34;
	and.b32  	%r9788, %r9787, 255;
	ld.const.u8 	%rs35, [%rd9573+9];
	cvt.u32.u16 	%r9789, %rs35;
	prmt.b32 	%r9790, %r9789, %r9788, 30212;
	ld.const.u8 	%rs36, [%rd9573+10];
	cvt.u32.u16 	%r9791, %rs36;
	prmt.b32 	%r9792, %r9791, %r9790, 28756;
	ld.const.u8 	%rs37, [%rd9573+11];
	cvt.u32.u16 	%r9793, %rs37;
	prmt.b32 	%r9794, %r9793, %r9792, 1620;
	ld.const.u8 	%rs38, [%rd9573+12];
	cvt.u32.u16 	%r9795, %rs38;
	and.b32  	%r9796, %r9795, 255;
	ld.const.u8 	%rs39, [%rd9573+13];
	cvt.u32.u16 	%r9797, %rs39;
	prmt.b32 	%r9798, %r9797, %r9796, 30212;
	ld.const.u8 	%rs40, [%rd9573+14];
	cvt.u32.u16 	%r9799, %rs40;
	prmt.b32 	%r9800, %r9799, %r9798, 28756;
	ld.const.u8 	%rs41, [%rd9573+15];
	cvt.u32.u16 	%r9801, %rs41;
	prmt.b32 	%r9802, %r9801, %r9800, 1620;
	and.b32  	%r9803, %r9778, -1431655766;
	shr.u32 	%r9804, %r9803, 3;
	shr.u32 	%r9805, %r9803, 1;
	and.b32  	%r9806, %r9786, -2004318072;
	and.b32  	%r9807, %r9794, -1431655766;
	shr.u32 	%r9808, %r9807, 3;
	shr.u32 	%r9809, %r9807, 1;
	and.b32  	%r9810, %r9802, -2004318072;
	and.b32  	%r9811, %r9778, 286331153;
	shl.b32 	%r9812, %r9786, 2;
	and.b32  	%r9813, %r9812, 1145324612;
	or.b32  	%r9814, %r9813, %r9811;
	and.b32  	%r9815, %r9778, 1145324612;
	shr.u32 	%r9816, %r9815, 2;
	and.b32  	%r9817, %r9786, 1145324612;
	or.b32  	%r9818, %r9816, %r9817;
	and.b32  	%r9819, %r9805, 286331153;
	shl.b32 	%r9820, %r9786, 1;
	and.b32  	%r9821, %r9820, 1145324612;
	or.b32  	%r9822, %r9821, %r9819;
	and.b32  	%r9823, %r9804, 286331153;
	shr.u32 	%r9824, %r9806, 1;
	or.b32  	%r9825, %r9823, %r9824;
	and.b32  	%r9826, %r9794, 286331153;
	shl.b32 	%r9827, %r9802, 2;
	and.b32  	%r9828, %r9827, 1145324612;
	or.b32  	%r9829, %r9828, %r9826;
	and.b32  	%r9830, %r9794, 1145324612;
	shr.u32 	%r9831, %r9830, 2;
	and.b32  	%r9832, %r9802, 1145324612;
	or.b32  	%r9833, %r9831, %r9832;
	and.b32  	%r9834, %r9809, 286331153;
	shl.b32 	%r9835, %r9802, 1;
	and.b32  	%r9836, %r9835, 1145324612;
	or.b32  	%r9837, %r9836, %r9834;
	and.b32  	%r9838, %r9808, 286331153;
	shr.u32 	%r9839, %r9810, 1;
	or.b32  	%r9840, %r9838, %r9839;
	and.b32  	%r9841, %r9814, 84215045;
	shl.b32 	%r9842, %r9829, 4;
	and.b32  	%r9843, %r9842, 1347440720;
	or.b32  	%r9844, %r9843, %r9841;
	and.b32  	%r9845, %r9814, 1347440720;
	shr.u32 	%r9846, %r9845, 4;
	and.b32  	%r9847, %r9829, 1347440720;
	or.b32  	%r9848, %r9846, %r9847;
	and.b32  	%r9849, %r9822, 84215045;
	shl.b32 	%r9850, %r9837, 4;
	and.b32  	%r9851, %r9850, 1347440720;
	or.b32  	%r9852, %r9851, %r9849;
	and.b32  	%r9853, %r9822, 1347440720;
	shr.u32 	%r9854, %r9853, 4;
	and.b32  	%r9855, %r9837, 1347440720;
	or.b32  	%r9856, %r9854, %r9855;
	and.b32  	%r9857, %r9818, 84215045;
	shl.b32 	%r9858, %r9833, 4;
	and.b32  	%r9859, %r9858, 1347440720;
	or.b32  	%r9860, %r9859, %r9857;
	and.b32  	%r9861, %r9818, 1347440720;
	shr.u32 	%r9862, %r9861, 4;
	and.b32  	%r9863, %r9833, 1347440720;
	or.b32  	%r9864, %r9862, %r9863;
	and.b32  	%r9865, %r9825, 84215045;
	shl.b32 	%r9866, %r9840, 4;
	and.b32  	%r9867, %r9866, 1347440720;
	or.b32  	%r9868, %r9867, %r9865;
	and.b32  	%r9869, %r9825, 1347440720;
	shr.u32 	%r9870, %r9869, 4;
	and.b32  	%r9871, %r9840, 1347440720;
	or.b32  	%r9872, %r9870, %r9871;
	ld.local.u32 	%r9873, [%rd12+720];
	shl.b32 	%r9874, %r9873, 3;
	mul.wide.u32 	%rd6796, %r9874, 4;
	add.s64 	%rd6797, %rd12, %rd6796;
	ld.local.u32 	%r9875, [%rd6797+240];
	xor.b32  	%r12686, %r9844, %r9875;
	ld.local.u32 	%r9876, [%rd6797+244];
	xor.b32  	%r12687, %r9852, %r9876;
	ld.local.u32 	%r9877, [%rd6797+248];
	xor.b32  	%r12688, %r9860, %r9877;
	ld.local.u32 	%r9878, [%rd6797+252];
	xor.b32  	%r12689, %r9868, %r9878;
	ld.local.u32 	%r9879, [%rd6797+256];
	xor.b32  	%r12690, %r9848, %r9879;
	ld.local.u32 	%r9880, [%rd6797+260];
	xor.b32  	%r12691, %r9856, %r9880;
	ld.local.u32 	%r9881, [%rd6797+264];
	xor.b32  	%r12692, %r9864, %r9881;
	ld.local.u32 	%r9882, [%rd6797+268];
	xor.b32  	%r12693, %r9872, %r9882;
	add.s32 	%r12685, %r9873, -1;
	setp.eq.s32 	%p58, %r12685, 0;
	@%p58 bra 	$L__BB6_75;

$L__BB6_74:
	shl.b32 	%r9883, %r12686, 2;
	and.b32  	%r9884, %r9883, 64512;
	and.b32  	%r9885, %r12686, 255;
	or.b32  	%r9886, %r9884, %r9885;
	and.b32  	%r9887, %r12686, 49152;
	shr.u32 	%r9888, %r9887, 6;
	or.b32  	%r9889, %r9886, %r9888;
	shl.b32 	%r9890, %r12686, 4;
	and.b32  	%r9891, %r9890, 15728640;
	or.b32  	%r9892, %r9889, %r9891;
	and.b32  	%r9893, %r12686, 15728640;
	shr.u32 	%r9894, %r9893, 4;
	or.b32  	%r9895, %r9892, %r9894;
	shl.b32 	%r9896, %r12686, 6;
	and.b32  	%r9897, %r9896, -1073741824;
	or.b32  	%r9898, %r9895, %r9897;
	and.b32  	%r9899, %r12686, -67108864;
	shr.u32 	%r9900, %r9899, 2;
	or.b32  	%r9901, %r9898, %r9900;
	shl.b32 	%r9902, %r12687, 2;
	and.b32  	%r9903, %r9902, 64512;
	and.b32  	%r9904, %r12687, 255;
	or.b32  	%r9905, %r9903, %r9904;
	and.b32  	%r9906, %r12687, 49152;
	shr.u32 	%r9907, %r9906, 6;
	or.b32  	%r9908, %r9905, %r9907;
	shl.b32 	%r9909, %r12687, 4;
	and.b32  	%r9910, %r9909, 15728640;
	or.b32  	%r9911, %r9908, %r9910;
	and.b32  	%r9912, %r12687, 15728640;
	shr.u32 	%r9913, %r9912, 4;
	or.b32  	%r9914, %r9911, %r9913;
	shl.b32 	%r9915, %r12687, 6;
	and.b32  	%r9916, %r9915, -1073741824;
	or.b32  	%r9917, %r9914, %r9916;
	and.b32  	%r9918, %r12687, -67108864;
	shr.u32 	%r9919, %r9918, 2;
	or.b32  	%r9920, %r9917, %r9919;
	shl.b32 	%r9921, %r12688, 2;
	and.b32  	%r9922, %r9921, 64512;
	and.b32  	%r9923, %r12688, 255;
	or.b32  	%r9924, %r9922, %r9923;
	and.b32  	%r9925, %r12688, 49152;
	shr.u32 	%r9926, %r9925, 6;
	or.b32  	%r9927, %r9924, %r9926;
	shl.b32 	%r9928, %r12688, 4;
	and.b32  	%r9929, %r9928, 15728640;
	or.b32  	%r9930, %r9927, %r9929;
	and.b32  	%r9931, %r12688, 15728640;
	shr.u32 	%r9932, %r9931, 4;
	or.b32  	%r9933, %r9930, %r9932;
	shl.b32 	%r9934, %r12688, 6;
	and.b32  	%r9935, %r9934, -1073741824;
	or.b32  	%r9936, %r9933, %r9935;
	and.b32  	%r9937, %r12688, -67108864;
	shr.u32 	%r9938, %r9937, 2;
	or.b32  	%r9939, %r9936, %r9938;
	shl.b32 	%r9940, %r12689, 2;
	and.b32  	%r9941, %r9940, 64512;
	and.b32  	%r9942, %r12689, 255;
	or.b32  	%r9943, %r9941, %r9942;
	and.b32  	%r9944, %r12689, 49152;
	shr.u32 	%r9945, %r9944, 6;
	or.b32  	%r9946, %r9943, %r9945;
	shl.b32 	%r9947, %r12689, 4;
	and.b32  	%r9948, %r9947, 15728640;
	or.b32  	%r9949, %r9946, %r9948;
	and.b32  	%r9950, %r12689, 15728640;
	shr.u32 	%r9951, %r9950, 4;
	or.b32  	%r9952, %r9949, %r9951;
	shl.b32 	%r9953, %r12689, 6;
	and.b32  	%r9954, %r9953, -1073741824;
	or.b32  	%r9955, %r9952, %r9954;
	and.b32  	%r9956, %r12689, -67108864;
	shr.u32 	%r9957, %r9956, 2;
	or.b32  	%r9958, %r9955, %r9957;
	shl.b32 	%r9959, %r12690, 2;
	and.b32  	%r9960, %r9959, 64512;
	and.b32  	%r9961, %r12690, 255;
	or.b32  	%r9962, %r9960, %r9961;
	and.b32  	%r9963, %r12690, 49152;
	shr.u32 	%r9964, %r9963, 6;
	or.b32  	%r9965, %r9962, %r9964;
	shl.b32 	%r9966, %r12690, 4;
	and.b32  	%r9967, %r9966, 15728640;
	or.b32  	%r9968, %r9965, %r9967;
	and.b32  	%r9969, %r12690, 15728640;
	shr.u32 	%r9970, %r9969, 4;
	or.b32  	%r9971, %r9968, %r9970;
	shl.b32 	%r9972, %r12690, 6;
	and.b32  	%r9973, %r9972, -1073741824;
	or.b32  	%r9974, %r9971, %r9973;
	and.b32  	%r9975, %r12690, -67108864;
	shr.u32 	%r9976, %r9975, 2;
	or.b32  	%r9977, %r9974, %r9976;
	shl.b32 	%r9978, %r12691, 2;
	and.b32  	%r9979, %r9978, 64512;
	and.b32  	%r9980, %r12691, 255;
	or.b32  	%r9981, %r9979, %r9980;
	and.b32  	%r9982, %r12691, 49152;
	shr.u32 	%r9983, %r9982, 6;
	or.b32  	%r9984, %r9981, %r9983;
	shl.b32 	%r9985, %r12691, 4;
	and.b32  	%r9986, %r9985, 15728640;
	or.b32  	%r9987, %r9984, %r9986;
	and.b32  	%r9988, %r12691, 15728640;
	shr.u32 	%r9989, %r9988, 4;
	or.b32  	%r9990, %r9987, %r9989;
	shl.b32 	%r9991, %r12691, 6;
	and.b32  	%r9992, %r9991, -1073741824;
	or.b32  	%r9993, %r9990, %r9992;
	and.b32  	%r9994, %r12691, -67108864;
	shr.u32 	%r9995, %r9994, 2;
	or.b32  	%r9996, %r9993, %r9995;
	shl.b32 	%r9997, %r12692, 2;
	and.b32  	%r9998, %r9997, 64512;
	and.b32  	%r9999, %r12692, 255;
	or.b32  	%r10000, %r9998, %r9999;
	and.b32  	%r10001, %r12692, 49152;
	shr.u32 	%r10002, %r10001, 6;
	or.b32  	%r10003, %r10000, %r10002;
	shl.b32 	%r10004, %r12692, 4;
	and.b32  	%r10005, %r10004, 15728640;
	or.b32  	%r10006, %r10003, %r10005;
	and.b32  	%r10007, %r12692, 15728640;
	shr.u32 	%r10008, %r10007, 4;
	or.b32  	%r10009, %r10006, %r10008;
	shl.b32 	%r10010, %r12692, 6;
	and.b32  	%r10011, %r10010, -1073741824;
	or.b32  	%r10012, %r10009, %r10011;
	and.b32  	%r10013, %r12692, -67108864;
	shr.u32 	%r10014, %r10013, 2;
	or.b32  	%r10015, %r10012, %r10014;
	shl.b32 	%r10016, %r12693, 2;
	and.b32  	%r10017, %r10016, 64512;
	and.b32  	%r10018, %r12693, 255;
	or.b32  	%r10019, %r10017, %r10018;
	and.b32  	%r10020, %r12693, 49152;
	shr.u32 	%r10021, %r10020, 6;
	or.b32  	%r10022, %r10019, %r10021;
	shl.b32 	%r10023, %r12693, 4;
	and.b32  	%r10024, %r10023, 15728640;
	or.b32  	%r10025, %r10022, %r10024;
	and.b32  	%r10026, %r12693, 15728640;
	shr.u32 	%r10027, %r10026, 4;
	or.b32  	%r10028, %r10025, %r10027;
	shl.b32 	%r10029, %r12693, 6;
	and.b32  	%r10030, %r10029, -1073741824;
	or.b32  	%r10031, %r10028, %r10030;
	and.b32  	%r10032, %r12693, -67108864;
	shr.u32 	%r10033, %r10032, 2;
	or.b32  	%r10034, %r10031, %r10033;
	xor.b32  	%r10035, %r9958, %r9901;
	xor.b32  	%r10036, %r9977, %r9920;
	not.b32 	%r10037, %r9996;
	not.b32 	%r10038, %r10015;
	not.b32 	%r10039, %r10036;
	xor.b32  	%r10040, %r10039, %r10038;
	not.b32 	%r10041, %r10035;
	xor.b32  	%r10042, %r10041, %r10037;
	xor.b32  	%r10043, %r9977, %r9939;
	xor.b32  	%r10044, %r10043, %r10034;
	xor.b32  	%r10045, %r9958, %r9920;
	xor.b32  	%r10046, %r10045, %r10015;
	xor.b32  	%r10047, %r9939, %r9901;
	xor.b32  	%r10048, %r10047, %r9996;
	xor.b32  	%r10049, %r10039, %r10034;
	xor.b32  	%r10050, %r10041, %r10038;
	xor.b32  	%r10051, %r9939, %r10037;
	xor.b32  	%r10052, %r10051, %r10034;
	xor.b32  	%r10053, %r10049, %r10046;
	xor.b32  	%r10054, %r10041, %r10039;
	xor.b32  	%r10055, %r10046, %r10040;
	xor.b32  	%r10056, %r10034, %r10038;
	xor.b32  	%r10057, %r10044, %r10042;
	xor.b32  	%r10058, %r10052, %r10057;
	xor.b32  	%r10059, %r10058, %r10046;
	xor.b32  	%r10060, %r10054, %r10053;
	xor.b32  	%r10061, %r10058, %r10040;
	xor.b32  	%r10062, %r10058, %r10050;
	xor.b32  	%r10063, %r10062, %r10056;
	xor.b32  	%r10064, %r10060, %r10048;
	xor.b32  	%r10065, %r10064, %r10049;
	xor.b32  	%r10066, %r10064, %r10042;
	xor.b32  	%r10067, %r10065, %r10052;
	xor.b32  	%r10068, %r10065, %r10057;
	xor.b32  	%r10069, %r10066, %r10055;
	xor.b32  	%r10070, %r10069, %r10052;
	xor.b32  	%r10071, %r10068, %r10069;
	xor.b32  	%r10072, %r10069, %r10057;
	and.b32  	%r10073, %r10065, %r10060;
	and.b32  	%r10074, %r10067, %r10063;
	and.b32  	%r10075, %r10059, %r10052;
	and.b32  	%r10076, %r10072, %r10054;
	and.b32  	%r10077, %r10062, %r10058;
	and.b32  	%r10078, %r10070, %r10061;
	and.b32  	%r10079, %r10069, %r10055;
	and.b32  	%r10080, %r10071, %r10053;
	xor.b32  	%r10081, %r10080, %r10079;
	and.b32  	%r10082, %r10068, %r10056;
	xor.b32  	%r10083, %r10082, %r10079;
	xor.b32  	%r10084, %r10073, %r10066;
	xor.b32  	%r10085, %r10084, %r10074;
	xor.b32  	%r10086, %r10085, %r10081;
	xor.b32  	%r10087, %r10075, %r10056;
	xor.b32  	%r10088, %r10087, %r10068;
	xor.b32  	%r10089, %r10088, %r10073;
	xor.b32  	%r10090, %r10089, %r10083;
	xor.b32  	%r10091, %r10077, %r10054;
	xor.b32  	%r10092, %r10091, %r10072;
	xor.b32  	%r10093, %r10092, %r10076;
	xor.b32  	%r10094, %r10093, %r10081;
	xor.b32  	%r10095, %r10072, %r10040;
	xor.b32  	%r10096, %r10095, %r10076;
	xor.b32  	%r10097, %r10096, %r10078;
	xor.b32  	%r10098, %r10097, %r10083;
	xor.b32  	%r10099, %r10086, %r10090;
	and.b32  	%r10100, %r10086, %r10094;
	xor.b32  	%r10101, %r10100, %r10098;
	and.b32  	%r10102, %r10101, %r10099;
	xor.b32  	%r10103, %r10102, %r10090;
	xor.b32  	%r10104, %r10094, %r10098;
	xor.b32  	%r10105, %r10100, %r10090;
	and.b32  	%r10106, %r10105, %r10104;
	xor.b32  	%r10107, %r10106, %r10098;
	xor.b32  	%r10108, %r10107, %r10094;
	xor.b32  	%r10109, %r10106, %r10100;
	and.b32  	%r10110, %r10109, %r10098;
	xor.b32  	%r10111, %r10108, %r10110;
	xor.b32  	%r10112, %r10110, %r10101;
	and.b32  	%r10113, %r10112, %r10103;
	xor.b32  	%r10114, %r10113, %r10099;
	xor.b32  	%r10115, %r10114, %r10111;
	xor.b32  	%r10116, %r10103, %r10107;
	xor.b32  	%r10117, %r10114, %r10103;
	xor.b32  	%r10118, %r10110, %r10094;
	xor.b32  	%r10119, %r10115, %r10116;
	and.b32  	%r10120, %r10118, %r10065;
	and.b32  	%r10121, %r10111, %r10067;
	and.b32  	%r10122, %r10107, %r10052;
	and.b32  	%r10123, %r10117, %r10072;
	and.b32  	%r10124, %r10114, %r10058;
	and.b32  	%r10125, %r10103, %r10070;
	and.b32  	%r10126, %r10116, %r10069;
	and.b32  	%r10127, %r10119, %r10071;
	and.b32  	%r10128, %r10115, %r10068;
	and.b32  	%r10129, %r10118, %r10060;
	and.b32  	%r10130, %r10111, %r10063;
	and.b32  	%r10131, %r10107, %r10059;
	and.b32  	%r10132, %r10117, %r10054;
	and.b32  	%r10133, %r10114, %r10062;
	and.b32  	%r10134, %r10103, %r10061;
	and.b32  	%r10135, %r10116, %r10055;
	and.b32  	%r10136, %r10119, %r10053;
	and.b32  	%r10137, %r10115, %r10056;
	xor.b32  	%r10138, %r10136, %r10135;
	xor.b32  	%r10139, %r10130, %r10131;
	xor.b32  	%r10140, %r10133, %r10125;
	xor.b32  	%r10141, %r10129, %r10130;
	xor.b32  	%r10142, %r10132, %r10122;
	xor.b32  	%r10143, %r10122, %r10125;
	xor.b32  	%r10144, %r10127, %r10128;
	xor.b32  	%r10145, %r10123, %r10120;
	xor.b32  	%r10146, %r10132, %r10140;
	xor.b32  	%r10147, %r10142, %r10145;
	xor.b32  	%r10148, %r10138, %r10124;
	xor.b32  	%r10149, %r10123, %r10126;
	xor.b32  	%r10150, %r10149, %r10127;
	xor.b32  	%r10151, %r10138, %r10147;
	xor.b32  	%r10152, %r10147, %r10134;
	xor.b32  	%r10153, %r10144, %r10148;
	xor.b32  	%r10154, %r10141, %r10148;
	xor.b32  	%r10155, %r10150, %r10124;
	xor.b32  	%r10156, %r10152, %r10153;
	xor.b32  	%r10157, %r10154, %r10121;
	xor.b32  	%r10158, %r10154, %r10150;
	xor.b32  	%r10159, %r10157, %r10145;
	xor.b32  	%r10160, %r10153, %r10146;
	xor.b32  	%r10161, %r10159, %r10155;
	xor.b32  	%r10162, %r10160, %r10161;
	xor.b32  	%r10163, %r10139, %r10156;
	xor.b32  	%r10164, %r10136, %r10137;
	xor.b32  	%r10165, %r10164, %r10155;
	xor.b32  	%r10166, %r10151, %r10140;
	xor.b32  	%r10167, %r10165, %r10156;
	xor.b32  	%r10168, %r10166, %r10167;
	xor.b32  	%r10169, %r10168, %r10163;
	xor.b32  	%r10170, %r10143, %r10157;
	xor.b32  	%r10171, %r10162, %r10170;
	xor.b32  	%r10172, %r10155, %r10160;
	xor.b32  	%r10173, %r10168, %r10170;
	xor.b32  	%r10174, %r10158, %r10159;
	xor.b32  	%r10175, %r10174, %r10163;
	xor.b32  	%r10176, %r10174, %r10160;
	xor.b32  	%r10177, %r10166, %r10161;
	xor.b32  	%r10178, %r10177, %r10170;
	xor.b32  	%r10179, %r10158, %r10167;
	xor.b32  	%r10180, %r10179, %r10163;
	shl.b32 	%r10181, %r12685, 3;
	mul.wide.u32 	%rd6798, %r10181, 4;
	add.s64 	%rd6799, %rd12, %rd6798;
	ld.local.u32 	%r10182, [%rd6799+240];
	xor.b32  	%r10183, %r10180, %r10182;
	ld.local.u32 	%r10184, [%rd6799+244];
	xor.b32  	%r10185, %r10178, %r10184;
	ld.local.u32 	%r10186, [%rd6799+248];
	xor.b32  	%r10187, %r10176, %r10186;
	ld.local.u32 	%r10188, [%rd6799+252];
	xor.b32  	%r10189, %r10169, %r10188;
	ld.local.u32 	%r10190, [%rd6799+256];
	xor.b32  	%r10191, %r10171, %r10190;
	ld.local.u32 	%r10192, [%rd6799+260];
	xor.b32  	%r10193, %r10175, %r10192;
	ld.local.u32 	%r10194, [%rd6799+264];
	xor.b32  	%r10195, %r10173, %r10194;
	ld.local.u32 	%r10196, [%rd6799+268];
	xor.b32  	%r10197, %r10172, %r10196;
	shf.l.wrap.b32 	%r10198, %r10183, %r10183, 24;
	shf.l.wrap.b32 	%r10199, %r10185, %r10185, 24;
	shf.l.wrap.b32 	%r10200, %r10187, %r10187, 24;
	shf.l.wrap.b32 	%r10201, %r10189, %r10189, 24;
	shf.l.wrap.b32 	%r10202, %r10191, %r10191, 24;
	shf.l.wrap.b32 	%r10203, %r10193, %r10193, 24;
	shf.l.wrap.b32 	%r10204, %r10195, %r10195, 24;
	shf.l.wrap.b32 	%r10205, %r10197, %r10197, 24;
	xor.b32  	%r10206, %r10193, %r10183;
	xor.b32  	%r10207, %r10195, %r10198;
	xor.b32  	%r10208, %r10207, %r10206;
	xor.b32  	%r10209, %r10208, %r10203;
	shf.l.wrap.b32 	%r10210, %r10209, %r10209, 16;
	xor.b32  	%r10211, %r10193, %r10198;
	xor.b32  	%r10212, %r10211, %r10195;
	xor.b32  	%r10213, %r10212, %r10197;
	xor.b32  	%r10214, %r10213, %r10203;
	xor.b32  	%r10215, %r10214, %r10205;
	xor.b32  	%r12686, %r10215, %r10210;
	xor.b32  	%r10216, %r10199, %r10185;
	xor.b32  	%r10217, %r10216, %r10193;
	xor.b32  	%r10218, %r10217, %r10197;
	xor.b32  	%r10219, %r10218, %r10203;
	xor.b32  	%r10220, %r10219, %r10204;
	shf.l.wrap.b32 	%r10221, %r10220, %r10220, 16;
	xor.b32  	%r10222, %r10199, %r10198;
	xor.b32  	%r10223, %r10222, %r10206;
	xor.b32  	%r10224, %r10223, %r10203;
	xor.b32  	%r10225, %r10224, %r10204;
	xor.b32  	%r10226, %r10225, %r10205;
	xor.b32  	%r12687, %r10226, %r10221;
	xor.b32  	%r10227, %r10185, %r10183;
	xor.b32  	%r10228, %r10187, %r10183;
	xor.b32  	%r10229, %r10228, %r10200;
	xor.b32  	%r10230, %r10229, %r10195;
	xor.b32  	%r10231, %r10230, %r10204;
	xor.b32  	%r10232, %r10231, %r10205;
	shf.l.wrap.b32 	%r10233, %r10232, %r10232, 16;
	xor.b32  	%r10234, %r10199, %r10227;
	xor.b32  	%r10235, %r10234, %r10200;
	xor.b32  	%r10236, %r10235, %r10195;
	xor.b32  	%r10237, %r10236, %r10204;
	xor.b32  	%r10238, %r10237, %r10205;
	xor.b32  	%r12688, %r10238, %r10233;
	xor.b32  	%r10239, %r10227, %r10187;
	xor.b32  	%r10240, %r10198, %r10227;
	xor.b32  	%r10241, %r10240, %r10189;
	xor.b32  	%r10242, %r10241, %r10193;
	xor.b32  	%r10243, %r10242, %r10201;
	xor.b32  	%r10244, %r10243, %r10195;
	xor.b32  	%r10245, %r10244, %r10197;
	xor.b32  	%r10246, %r10245, %r10203;
	xor.b32  	%r10247, %r10246, %r10205;
	shf.l.wrap.b32 	%r10248, %r10247, %r10247, 16;
	xor.b32  	%r10249, %r10239, %r10198;
	xor.b32  	%r10250, %r10249, %r10200;
	xor.b32  	%r10251, %r10250, %r10193;
	xor.b32  	%r10252, %r10251, %r10201;
	xor.b32  	%r10253, %r10252, %r10195;
	xor.b32  	%r10254, %r10253, %r10203;
	xor.b32  	%r12689, %r10254, %r10248;
	xor.b32  	%r10255, %r10187, %r10185;
	xor.b32  	%r10256, %r10255, %r10189;
	xor.b32  	%r10257, %r10199, %r10255;
	xor.b32  	%r10258, %r10257, %r10191;
	xor.b32  	%r10259, %r10258, %r10193;
	xor.b32  	%r10260, %r10259, %r10202;
	xor.b32  	%r10261, %r10260, %r10197;
	xor.b32  	%r10262, %r10261, %r10203;
	xor.b32  	%r10263, %r10262, %r10204;
	shf.l.wrap.b32 	%r10264, %r10263, %r10263, 16;
	xor.b32  	%r10265, %r10256, %r10199;
	xor.b32  	%r10266, %r10265, %r10193;
	xor.b32  	%r10267, %r10266, %r10201;
	xor.b32  	%r10268, %r10267, %r10202;
	xor.b32  	%r10269, %r10268, %r10203;
	xor.b32  	%r10270, %r10269, %r10204;
	xor.b32  	%r10271, %r10270, %r10205;
	xor.b32  	%r12690, %r10271, %r10264;
	xor.b32  	%r10272, %r10189, %r10187;
	xor.b32  	%r10273, %r10272, %r10191;
	xor.b32  	%r10274, %r10200, %r10272;
	xor.b32  	%r10275, %r10274, %r10193;
	xor.b32  	%r10276, %r10275, %r10195;
	xor.b32  	%r10277, %r10276, %r10203;
	xor.b32  	%r10278, %r10277, %r10204;
	xor.b32  	%r10279, %r10278, %r10205;
	shf.l.wrap.b32 	%r10280, %r10279, %r10279, 16;
	xor.b32  	%r10281, %r10273, %r10200;
	xor.b32  	%r10282, %r10281, %r10195;
	xor.b32  	%r10283, %r10282, %r10202;
	xor.b32  	%r10284, %r10283, %r10203;
	xor.b32  	%r10285, %r10284, %r10204;
	xor.b32  	%r10286, %r10285, %r10205;
	xor.b32  	%r12691, %r10286, %r10280;
	xor.b32  	%r10287, %r10191, %r10189;
	xor.b32  	%r10288, %r10287, %r10193;
	xor.b32  	%r10289, %r10201, %r10287;
	xor.b32  	%r10290, %r10289, %r10195;
	xor.b32  	%r10291, %r10290, %r10197;
	xor.b32  	%r10292, %r10291, %r10204;
	xor.b32  	%r10293, %r10292, %r10205;
	shf.l.wrap.b32 	%r10294, %r10293, %r10293, 16;
	xor.b32  	%r10295, %r10288, %r10201;
	xor.b32  	%r10296, %r10295, %r10197;
	xor.b32  	%r10297, %r10296, %r10203;
	xor.b32  	%r10298, %r10297, %r10204;
	xor.b32  	%r10299, %r10298, %r10205;
	xor.b32  	%r12692, %r10299, %r10294;
	xor.b32  	%r10300, %r10193, %r10191;
	xor.b32  	%r10301, %r10300, %r10195;
	xor.b32  	%r10302, %r10301, %r10202;
	xor.b32  	%r10303, %r10302, %r10204;
	xor.b32  	%r10304, %r10303, %r10205;
	xor.b32  	%r10305, %r10202, %r10300;
	xor.b32  	%r10306, %r10305, %r10197;
	xor.b32  	%r10307, %r10306, %r10205;
	shf.l.wrap.b32 	%r10308, %r10307, %r10307, 16;
	xor.b32  	%r12693, %r10304, %r10308;
	add.s32 	%r12685, %r12685, -1;
	setp.ne.s32 	%p59, %r12685, 0;
	@%p59 bra 	$L__BB6_74;

$L__BB6_75:
	shl.b32 	%r10310, %r12686, 2;
	and.b32  	%r10311, %r10310, 64512;
	and.b32  	%r10312, %r12686, 255;
	or.b32  	%r10313, %r10311, %r10312;
	and.b32  	%r10314, %r12686, 49152;
	shr.u32 	%r10315, %r10314, 6;
	or.b32  	%r10316, %r10313, %r10315;
	shl.b32 	%r10317, %r12686, 4;
	and.b32  	%r10318, %r10317, 15728640;
	or.b32  	%r10319, %r10316, %r10318;
	and.b32  	%r10320, %r12686, 15728640;
	shr.u32 	%r10321, %r10320, 4;
	or.b32  	%r10322, %r10319, %r10321;
	shl.b32 	%r10323, %r12686, 6;
	and.b32  	%r10324, %r10323, -1073741824;
	or.b32  	%r10325, %r10322, %r10324;
	and.b32  	%r10326, %r12686, -67108864;
	shr.u32 	%r10327, %r10326, 2;
	or.b32  	%r10328, %r10325, %r10327;
	shl.b32 	%r10329, %r12687, 2;
	and.b32  	%r10330, %r10329, 64512;
	and.b32  	%r10331, %r12687, 255;
	or.b32  	%r10332, %r10330, %r10331;
	and.b32  	%r10333, %r12687, 49152;
	shr.u32 	%r10334, %r10333, 6;
	or.b32  	%r10335, %r10332, %r10334;
	shl.b32 	%r10336, %r12687, 4;
	and.b32  	%r10337, %r10336, 15728640;
	or.b32  	%r10338, %r10335, %r10337;
	and.b32  	%r10339, %r12687, 15728640;
	shr.u32 	%r10340, %r10339, 4;
	or.b32  	%r10341, %r10338, %r10340;
	shl.b32 	%r10342, %r12687, 6;
	and.b32  	%r10343, %r10342, -1073741824;
	or.b32  	%r10344, %r10341, %r10343;
	and.b32  	%r10345, %r12687, -67108864;
	shr.u32 	%r10346, %r10345, 2;
	or.b32  	%r10347, %r10344, %r10346;
	shl.b32 	%r10348, %r12688, 2;
	and.b32  	%r10349, %r10348, 64512;
	and.b32  	%r10350, %r12688, 255;
	or.b32  	%r10351, %r10349, %r10350;
	and.b32  	%r10352, %r12688, 49152;
	shr.u32 	%r10353, %r10352, 6;
	or.b32  	%r10354, %r10351, %r10353;
	shl.b32 	%r10355, %r12688, 4;
	and.b32  	%r10356, %r10355, 15728640;
	or.b32  	%r10357, %r10354, %r10356;
	and.b32  	%r10358, %r12688, 15728640;
	shr.u32 	%r10359, %r10358, 4;
	or.b32  	%r10360, %r10357, %r10359;
	shl.b32 	%r10361, %r12688, 6;
	and.b32  	%r10362, %r10361, -1073741824;
	or.b32  	%r10363, %r10360, %r10362;
	and.b32  	%r10364, %r12688, -67108864;
	shr.u32 	%r10365, %r10364, 2;
	or.b32  	%r10366, %r10363, %r10365;
	shl.b32 	%r10367, %r12689, 2;
	and.b32  	%r10368, %r10367, 64512;
	and.b32  	%r10369, %r12689, 255;
	or.b32  	%r10370, %r10368, %r10369;
	and.b32  	%r10371, %r12689, 49152;
	shr.u32 	%r10372, %r10371, 6;
	or.b32  	%r10373, %r10370, %r10372;
	shl.b32 	%r10374, %r12689, 4;
	and.b32  	%r10375, %r10374, 15728640;
	or.b32  	%r10376, %r10373, %r10375;
	and.b32  	%r10377, %r12689, 15728640;
	shr.u32 	%r10378, %r10377, 4;
	or.b32  	%r10379, %r10376, %r10378;
	shl.b32 	%r10380, %r12689, 6;
	and.b32  	%r10381, %r10380, -1073741824;
	or.b32  	%r10382, %r10379, %r10381;
	and.b32  	%r10383, %r12689, -67108864;
	shr.u32 	%r10384, %r10383, 2;
	or.b32  	%r10385, %r10382, %r10384;
	shl.b32 	%r10386, %r12690, 2;
	and.b32  	%r10387, %r10386, 64512;
	and.b32  	%r10388, %r12690, 255;
	or.b32  	%r10389, %r10387, %r10388;
	and.b32  	%r10390, %r12690, 49152;
	shr.u32 	%r10391, %r10390, 6;
	or.b32  	%r10392, %r10389, %r10391;
	shl.b32 	%r10393, %r12690, 4;
	and.b32  	%r10394, %r10393, 15728640;
	or.b32  	%r10395, %r10392, %r10394;
	and.b32  	%r10396, %r12690, 15728640;
	shr.u32 	%r10397, %r10396, 4;
	or.b32  	%r10398, %r10395, %r10397;
	shl.b32 	%r10399, %r12690, 6;
	and.b32  	%r10400, %r10399, -1073741824;
	or.b32  	%r10401, %r10398, %r10400;
	and.b32  	%r10402, %r12690, -67108864;
	shr.u32 	%r10403, %r10402, 2;
	or.b32  	%r10404, %r10401, %r10403;
	shl.b32 	%r10405, %r12691, 2;
	and.b32  	%r10406, %r10405, 64512;
	and.b32  	%r10407, %r12691, 255;
	or.b32  	%r10408, %r10406, %r10407;
	and.b32  	%r10409, %r12691, 49152;
	shr.u32 	%r10410, %r10409, 6;
	or.b32  	%r10411, %r10408, %r10410;
	shl.b32 	%r10412, %r12691, 4;
	and.b32  	%r10413, %r10412, 15728640;
	or.b32  	%r10414, %r10411, %r10413;
	and.b32  	%r10415, %r12691, 15728640;
	shr.u32 	%r10416, %r10415, 4;
	or.b32  	%r10417, %r10414, %r10416;
	shl.b32 	%r10418, %r12691, 6;
	and.b32  	%r10419, %r10418, -1073741824;
	or.b32  	%r10420, %r10417, %r10419;
	and.b32  	%r10421, %r12691, -67108864;
	shr.u32 	%r10422, %r10421, 2;
	or.b32  	%r10423, %r10420, %r10422;
	shl.b32 	%r10424, %r12692, 2;
	and.b32  	%r10425, %r10424, 64512;
	and.b32  	%r10426, %r12692, 255;
	or.b32  	%r10427, %r10425, %r10426;
	and.b32  	%r10428, %r12692, 49152;
	shr.u32 	%r10429, %r10428, 6;
	or.b32  	%r10430, %r10427, %r10429;
	shl.b32 	%r10431, %r12692, 4;
	and.b32  	%r10432, %r10431, 15728640;
	or.b32  	%r10433, %r10430, %r10432;
	and.b32  	%r10434, %r12692, 15728640;
	shr.u32 	%r10435, %r10434, 4;
	or.b32  	%r10436, %r10433, %r10435;
	shl.b32 	%r10437, %r12692, 6;
	and.b32  	%r10438, %r10437, -1073741824;
	or.b32  	%r10439, %r10436, %r10438;
	and.b32  	%r10440, %r12692, -67108864;
	shr.u32 	%r10441, %r10440, 2;
	or.b32  	%r10442, %r10439, %r10441;
	shl.b32 	%r10443, %r12693, 2;
	and.b32  	%r10444, %r10443, 64512;
	and.b32  	%r10445, %r12693, 255;
	or.b32  	%r10446, %r10444, %r10445;
	and.b32  	%r10447, %r12693, 49152;
	shr.u32 	%r10448, %r10447, 6;
	or.b32  	%r10449, %r10446, %r10448;
	shl.b32 	%r10450, %r12693, 4;
	and.b32  	%r10451, %r10450, 15728640;
	or.b32  	%r10452, %r10449, %r10451;
	and.b32  	%r10453, %r12693, 15728640;
	shr.u32 	%r10454, %r10453, 4;
	or.b32  	%r10455, %r10452, %r10454;
	shl.b32 	%r10456, %r12693, 6;
	and.b32  	%r10457, %r10456, -1073741824;
	or.b32  	%r10458, %r10455, %r10457;
	and.b32  	%r10459, %r12693, -67108864;
	shr.u32 	%r10460, %r10459, 2;
	or.b32  	%r10461, %r10458, %r10460;
	xor.b32  	%r10462, %r10385, %r10328;
	xor.b32  	%r10463, %r10404, %r10347;
	not.b32 	%r10464, %r10423;
	not.b32 	%r10465, %r10442;
	not.b32 	%r10466, %r10463;
	xor.b32  	%r10467, %r10466, %r10465;
	not.b32 	%r10468, %r10462;
	xor.b32  	%r10469, %r10468, %r10464;
	xor.b32  	%r10470, %r10404, %r10366;
	xor.b32  	%r10471, %r10470, %r10461;
	xor.b32  	%r10472, %r10385, %r10347;
	xor.b32  	%r10473, %r10472, %r10442;
	xor.b32  	%r10474, %r10366, %r10328;
	xor.b32  	%r10475, %r10474, %r10423;
	xor.b32  	%r10476, %r10466, %r10461;
	xor.b32  	%r10477, %r10468, %r10465;
	xor.b32  	%r10478, %r10366, %r10464;
	xor.b32  	%r10479, %r10478, %r10461;
	xor.b32  	%r10480, %r10476, %r10473;
	xor.b32  	%r10481, %r10468, %r10466;
	xor.b32  	%r10482, %r10473, %r10467;
	xor.b32  	%r10483, %r10461, %r10465;
	xor.b32  	%r10484, %r10471, %r10469;
	xor.b32  	%r10485, %r10479, %r10484;
	xor.b32  	%r10486, %r10485, %r10473;
	xor.b32  	%r10487, %r10481, %r10480;
	xor.b32  	%r10488, %r10485, %r10467;
	xor.b32  	%r10489, %r10485, %r10477;
	xor.b32  	%r10490, %r10489, %r10483;
	xor.b32  	%r10491, %r10487, %r10475;
	xor.b32  	%r10492, %r10491, %r10476;
	xor.b32  	%r10493, %r10491, %r10469;
	xor.b32  	%r10494, %r10492, %r10479;
	xor.b32  	%r10495, %r10492, %r10484;
	xor.b32  	%r10496, %r10493, %r10482;
	xor.b32  	%r10497, %r10496, %r10479;
	xor.b32  	%r10498, %r10495, %r10496;
	xor.b32  	%r10499, %r10496, %r10484;
	and.b32  	%r10500, %r10492, %r10487;
	and.b32  	%r10501, %r10494, %r10490;
	and.b32  	%r10502, %r10486, %r10479;
	and.b32  	%r10503, %r10499, %r10481;
	and.b32  	%r10504, %r10489, %r10485;
	and.b32  	%r10505, %r10497, %r10488;
	and.b32  	%r10506, %r10496, %r10482;
	and.b32  	%r10507, %r10498, %r10480;
	xor.b32  	%r10508, %r10507, %r10506;
	and.b32  	%r10509, %r10495, %r10483;
	xor.b32  	%r10510, %r10509, %r10506;
	xor.b32  	%r10511, %r10500, %r10493;
	xor.b32  	%r10512, %r10511, %r10501;
	xor.b32  	%r10513, %r10512, %r10508;
	xor.b32  	%r10514, %r10502, %r10483;
	xor.b32  	%r10515, %r10514, %r10495;
	xor.b32  	%r10516, %r10515, %r10500;
	xor.b32  	%r10517, %r10516, %r10510;
	xor.b32  	%r10518, %r10504, %r10481;
	xor.b32  	%r10519, %r10518, %r10499;
	xor.b32  	%r10520, %r10519, %r10503;
	xor.b32  	%r10521, %r10520, %r10508;
	xor.b32  	%r10522, %r10499, %r10467;
	xor.b32  	%r10523, %r10522, %r10503;
	xor.b32  	%r10524, %r10523, %r10505;
	xor.b32  	%r10525, %r10524, %r10510;
	xor.b32  	%r10526, %r10513, %r10517;
	and.b32  	%r10527, %r10513, %r10521;
	xor.b32  	%r10528, %r10527, %r10525;
	and.b32  	%r10529, %r10528, %r10526;
	xor.b32  	%r10530, %r10529, %r10517;
	xor.b32  	%r10531, %r10521, %r10525;
	xor.b32  	%r10532, %r10527, %r10517;
	and.b32  	%r10533, %r10532, %r10531;
	xor.b32  	%r10534, %r10533, %r10525;
	xor.b32  	%r10535, %r10534, %r10521;
	xor.b32  	%r10536, %r10533, %r10527;
	and.b32  	%r10537, %r10536, %r10525;
	xor.b32  	%r10538, %r10535, %r10537;
	xor.b32  	%r10539, %r10537, %r10528;
	and.b32  	%r10540, %r10539, %r10530;
	xor.b32  	%r10541, %r10540, %r10526;
	xor.b32  	%r10542, %r10541, %r10538;
	xor.b32  	%r10543, %r10530, %r10534;
	xor.b32  	%r10544, %r10541, %r10530;
	xor.b32  	%r10545, %r10537, %r10521;
	xor.b32  	%r10546, %r10542, %r10543;
	and.b32  	%r10547, %r10545, %r10492;
	and.b32  	%r10548, %r10538, %r10494;
	and.b32  	%r10549, %r10534, %r10479;
	and.b32  	%r10550, %r10544, %r10499;
	and.b32  	%r10551, %r10541, %r10485;
	and.b32  	%r10552, %r10530, %r10497;
	and.b32  	%r10553, %r10543, %r10496;
	and.b32  	%r10554, %r10546, %r10498;
	and.b32  	%r10555, %r10542, %r10495;
	and.b32  	%r10556, %r10545, %r10487;
	and.b32  	%r10557, %r10538, %r10490;
	and.b32  	%r10558, %r10534, %r10486;
	and.b32  	%r10559, %r10544, %r10481;
	and.b32  	%r10560, %r10541, %r10489;
	and.b32  	%r10561, %r10530, %r10488;
	and.b32  	%r10562, %r10543, %r10482;
	and.b32  	%r10563, %r10546, %r10480;
	and.b32  	%r10564, %r10542, %r10483;
	xor.b32  	%r10565, %r10563, %r10562;
	xor.b32  	%r10566, %r10557, %r10558;
	xor.b32  	%r10567, %r10560, %r10552;
	xor.b32  	%r10568, %r10556, %r10557;
	xor.b32  	%r10569, %r10559, %r10549;
	xor.b32  	%r10570, %r10549, %r10552;
	xor.b32  	%r10571, %r10554, %r10555;
	xor.b32  	%r10572, %r10550, %r10547;
	xor.b32  	%r10573, %r10559, %r10567;
	xor.b32  	%r10574, %r10569, %r10572;
	xor.b32  	%r10575, %r10565, %r10551;
	xor.b32  	%r10576, %r10550, %r10553;
	xor.b32  	%r10577, %r10576, %r10554;
	xor.b32  	%r10578, %r10565, %r10574;
	xor.b32  	%r10579, %r10574, %r10561;
	xor.b32  	%r10580, %r10571, %r10575;
	xor.b32  	%r10581, %r10568, %r10575;
	xor.b32  	%r10582, %r10577, %r10551;
	xor.b32  	%r10583, %r10579, %r10580;
	xor.b32  	%r10584, %r10581, %r10548;
	xor.b32  	%r10585, %r10581, %r10577;
	xor.b32  	%r10586, %r10584, %r10572;
	xor.b32  	%r10587, %r10580, %r10573;
	xor.b32  	%r10588, %r10586, %r10582;
	xor.b32  	%r10589, %r10587, %r10588;
	xor.b32  	%r10590, %r10566, %r10583;
	xor.b32  	%r10591, %r10563, %r10564;
	xor.b32  	%r10592, %r10591, %r10582;
	xor.b32  	%r10593, %r10578, %r10567;
	xor.b32  	%r10594, %r10592, %r10583;
	xor.b32  	%r10595, %r10593, %r10594;
	xor.b32  	%r10596, %r10595, %r10590;
	xor.b32  	%r10597, %r10570, %r10584;
	xor.b32  	%r10598, %r10589, %r10597;
	xor.b32  	%r10599, %r10582, %r10587;
	xor.b32  	%r10600, %r10595, %r10597;
	xor.b32  	%r10601, %r10585, %r10586;
	xor.b32  	%r10602, %r10601, %r10590;
	ld.local.u32 	%r10603, [%rd12+252];
	xor.b32  	%r10604, %r10596, %r10603;
	xor.b32  	%r10605, %r10601, %r10587;
	xor.b32  	%r10606, %r10593, %r10588;
	xor.b32  	%r10607, %r10606, %r10597;
	xor.b32  	%r10608, %r10585, %r10594;
	xor.b32  	%r10609, %r10608, %r10590;
	ld.local.u32 	%r10610, [%rd12+240];
	xor.b32  	%r10611, %r10609, %r10610;
	ld.local.u32 	%r10612, [%rd12+244];
	xor.b32  	%r10613, %r10607, %r10612;
	ld.local.u32 	%r10614, [%rd12+248];
	xor.b32  	%r10615, %r10605, %r10614;
	ld.local.u32 	%r10616, [%rd12+256];
	xor.b32  	%r10617, %r10598, %r10616;
	ld.local.u32 	%r10618, [%rd12+260];
	xor.b32  	%r10619, %r10602, %r10618;
	ld.local.u32 	%r10620, [%rd12+264];
	xor.b32  	%r10621, %r10600, %r10620;
	ld.local.u32 	%r10622, [%rd12+268];
	xor.b32  	%r10623, %r10599, %r10622;
	and.b32  	%r10624, %r10611, 1431655765;
	shl.b32 	%r10625, %r10613, 1;
	and.b32  	%r10626, %r10625, -1431655766;
	mov.u32 	%r12694, 1;
	or.b32  	%r10627, %r10626, %r10624;
	and.b32  	%r10628, %r10615, 1431655765;
	shl.b32 	%r10629, %r10604, 1;
	and.b32  	%r10630, %r10629, -1431655766;
	or.b32  	%r10631, %r10630, %r10628;
	and.b32  	%r10632, %r10617, 1431655765;
	shl.b32 	%r10633, %r10619, 1;
	and.b32  	%r10634, %r10633, -1431655766;
	or.b32  	%r10635, %r10634, %r10632;
	and.b32  	%r10636, %r10621, 1431655765;
	shl.b32 	%r10637, %r10623, 1;
	and.b32  	%r10638, %r10637, -1431655766;
	or.b32  	%r10639, %r10638, %r10636;
	and.b32  	%r10640, %r10627, 858993459;
	shl.b32 	%r10641, %r10631, 2;
	and.b32  	%r10642, %r10641, -858993460;
	or.b32  	%r10643, %r10642, %r10640;
	and.b32  	%r10644, %r10627, -858993460;
	shr.u32 	%r10645, %r10644, 2;
	and.b32  	%r10646, %r10631, -858993460;
	or.b32  	%r153, %r10645, %r10646;
	and.b32  	%r10647, %r10635, 858993459;
	shl.b32 	%r10648, %r10639, 2;
	and.b32  	%r10649, %r10648, -858993460;
	or.b32  	%r10650, %r10649, %r10647;
	and.b32  	%r10651, %r10635, -858993460;
	shr.u32 	%r10652, %r10651, 2;
	and.b32  	%r10653, %r10639, -858993460;
	or.b32  	%r154, %r10652, %r10653;
	and.b32  	%r10654, %r10643, 252645135;
	shl.b32 	%r10655, %r10650, 4;
	and.b32  	%r10656, %r10655, -252645136;
	or.b32  	%r155, %r10656, %r10654;
	and.b32  	%r10657, %r10643, -252645136;
	shr.u32 	%r10658, %r10657, 4;
	and.b32  	%r10659, %r10650, -252645136;
	or.b32  	%r156, %r10658, %r10659;
	cvt.u16.u32 	%rs69, %r155;
	ld.local.u8 	%rs70, [%rd14];
	xor.b16  	%rs71, %rs70, %rs69;
	st.local.u8 	[%rd9574], %rs71;
	st.local.u8 	[%rd14], %rs26;
	setp.eq.s32 	%p60, %r12695, 1;
	@%p60 bra 	$L__BB6_91;

	shl.b32 	%r10661, %r154, 4;
	and.b32  	%r10662, %r10661, -252645136;
	and.b32  	%r10663, %r153, 252645135;
	or.b32  	%r157, %r10662, %r10663;
	and.b32  	%r10664, %r154, -252645136;
	and.b32  	%r10665, %r153, -252645136;
	shr.u32 	%r10666, %r10665, 4;
	or.b32  	%r158, %r10666, %r10664;
	shr.u16 	%rs73, %rs69, 8;
	ld.local.u8 	%rs74, [%rd14+1];
	xor.b16  	%rs75, %rs74, %rs73;
	st.local.u8 	[%rd9574+1], %rs75;
	st.local.u8 	[%rd14+1], %rs27;
	setp.eq.s32 	%p61, %r12695, 2;
	mov.u32 	%r12694, 2;
	@%p61 bra 	$L__BB6_91;

	ld.local.u8 	%rs76, [%rd14+2];
	shr.u32 	%r10668, %r155, 16;
	cvt.u16.u32 	%rs77, %r10668;
	xor.b16  	%rs78, %rs76, %rs77;
	st.local.u8 	[%rd9574+2], %rs78;
	st.local.u8 	[%rd14+2], %rs28;
	setp.lt.u32 	%p62, %r12695, 4;
	mov.u32 	%r12694, 3;
	@%p62 bra 	$L__BB6_91;

	ld.local.u8 	%rs79, [%rd14+3];
	shr.u32 	%r10670, %r155, 24;
	cvt.u16.u32 	%rs80, %r10670;
	xor.b16  	%rs81, %rs79, %rs80;
	st.local.u8 	[%rd9574+3], %rs81;
	st.local.u8 	[%rd14+3], %rs29;
	setp.eq.s32 	%p63, %r12695, 4;
	mov.u32 	%r12694, 4;
	@%p63 bra 	$L__BB6_91;

	ld.local.u8 	%rs82, [%rd14+4];
	cvt.u16.u32 	%rs83, %r157;
	xor.b16  	%rs84, %rs82, %rs83;
	st.local.u8 	[%rd9574+4], %rs84;
	st.local.u8 	[%rd14+4], %rs30;
	setp.lt.u32 	%p64, %r12695, 6;
	mov.u32 	%r12694, 5;
	@%p64 bra 	$L__BB6_91;

	ld.local.u8 	%rs85, [%rd14+5];
	shr.u16 	%rs87, %rs83, 8;
	xor.b16  	%rs88, %rs85, %rs87;
	st.local.u8 	[%rd9574+5], %rs88;
	st.local.u8 	[%rd14+5], %rs31;
	setp.eq.s32 	%p65, %r12695, 6;
	mov.u32 	%r12694, 6;
	@%p65 bra 	$L__BB6_91;

	ld.local.u8 	%rs89, [%rd14+6];
	shr.u32 	%r10674, %r157, 16;
	cvt.u16.u32 	%rs90, %r10674;
	xor.b16  	%rs91, %rs89, %rs90;
	st.local.u8 	[%rd9574+6], %rs91;
	st.local.u8 	[%rd14+6], %rs32;
	setp.lt.u32 	%p66, %r12695, 8;
	mov.u32 	%r12694, 7;
	@%p66 bra 	$L__BB6_91;

	ld.local.u8 	%rs92, [%rd14+7];
	shr.u32 	%r10676, %r157, 24;
	cvt.u16.u32 	%rs93, %r10676;
	xor.b16  	%rs94, %rs92, %rs93;
	st.local.u8 	[%rd9574+7], %rs94;
	st.local.u8 	[%rd14+7], %rs33;
	setp.eq.s32 	%p67, %r12695, 8;
	mov.u32 	%r12694, 8;
	@%p67 bra 	$L__BB6_91;

	ld.local.u8 	%rs95, [%rd14+8];
	cvt.u16.u32 	%rs96, %r156;
	xor.b16  	%rs97, %rs95, %rs96;
	st.local.u8 	[%rd9574+8], %rs97;
	st.local.u8 	[%rd14+8], %rs34;
	setp.lt.u32 	%p68, %r12695, 10;
	mov.u32 	%r12694, 9;
	@%p68 bra 	$L__BB6_91;

	ld.local.u8 	%rs98, [%rd14+9];
	shr.u16 	%rs100, %rs96, 8;
	xor.b16  	%rs101, %rs98, %rs100;
	st.local.u8 	[%rd9574+9], %rs101;
	st.local.u8 	[%rd14+9], %rs35;
	setp.eq.s32 	%p69, %r12695, 10;
	mov.u32 	%r12694, 10;
	@%p69 bra 	$L__BB6_91;

	ld.local.u8 	%rs102, [%rd14+10];
	shr.u32 	%r10680, %r156, 16;
	cvt.u16.u32 	%rs103, %r10680;
	xor.b16  	%rs104, %rs102, %rs103;
	st.local.u8 	[%rd9574+10], %rs104;
	st.local.u8 	[%rd14+10], %rs36;
	setp.lt.u32 	%p70, %r12695, 12;
	mov.u32 	%r12694, 11;
	@%p70 bra 	$L__BB6_91;

	ld.local.u8 	%rs105, [%rd14+11];
	shr.u32 	%r10682, %r156, 24;
	cvt.u16.u32 	%rs106, %r10682;
	xor.b16  	%rs107, %rs105, %rs106;
	st.local.u8 	[%rd9574+11], %rs107;
	st.local.u8 	[%rd14+11], %rs37;
	setp.eq.s32 	%p71, %r12695, 12;
	mov.u32 	%r12694, 12;
	@%p71 bra 	$L__BB6_91;

	ld.local.u8 	%rs108, [%rd14+12];
	cvt.u16.u32 	%rs109, %r158;
	xor.b16  	%rs110, %rs108, %rs109;
	st.local.u8 	[%rd9574+12], %rs110;
	st.local.u8 	[%rd14+12], %rs38;
	setp.lt.u32 	%p72, %r12695, 14;
	mov.u32 	%r12694, 13;
	@%p72 bra 	$L__BB6_91;

	ld.local.u8 	%rs111, [%rd14+13];
	shr.u16 	%rs113, %rs109, 8;
	xor.b16  	%rs114, %rs111, %rs113;
	st.local.u8 	[%rd9574+13], %rs114;
	st.local.u8 	[%rd14+13], %rs39;
	setp.eq.s32 	%p73, %r12695, 14;
	mov.u32 	%r12694, 14;
	@%p73 bra 	$L__BB6_91;

	ld.local.u8 	%rs115, [%rd14+14];
	shr.u32 	%r10686, %r158, 16;
	cvt.u16.u32 	%rs116, %r10686;
	xor.b16  	%rs117, %rs115, %rs116;
	st.local.u8 	[%rd9574+14], %rs117;
	st.local.u8 	[%rd14+14], %rs40;
	setp.lt.u32 	%p74, %r12695, 16;
	mov.u32 	%r12694, 15;
	@%p74 bra 	$L__BB6_91;

	ld.local.u8 	%rs118, [%rd14+15];
	shr.u32 	%r10688, %r158, 24;
	cvt.u16.u32 	%rs119, %r10688;
	xor.b16  	%rs120, %rs118, %rs119;
	st.local.u8 	[%rd9574+15], %rs120;
	st.local.u8 	[%rd14+15], %rs41;
	mov.u32 	%r12694, 16;

$L__BB6_91:
	setp.lt.u32 	%p75, %r12695, 17;
	@%p75 bra 	$L__BB6_93;
	bra.uni 	$L__BB6_92;

$L__BB6_93:
	setp.gt.u32 	%p78, %r12694, 15;
	mov.pred 	%p118, 0;
	@%p78 bra 	$L__BB6_110;

	cvt.u64.u32 	%rd6800, %r12694;
	add.s64 	%rd171, %rd9573, %rd6800;
	ld.const.u8 	%rs121, [%rd171];
	add.s64 	%rd172, %rd14, %rd6800;
	st.local.u8 	[%rd172], %rs121;
	add.s32 	%r10689, %r12694, 1;
	setp.gt.u32 	%p80, %r10689, 15;
	@%p80 bra 	$L__BB6_110;

	ld.const.u8 	%rs122, [%rd171+1];
	st.local.u8 	[%rd172+1], %rs122;
	add.s32 	%r10690, %r12694, 2;
	setp.gt.u32 	%p82, %r10690, 15;
	@%p82 bra 	$L__BB6_110;

	ld.const.u8 	%rs123, [%rd171+2];
	st.local.u8 	[%rd172+2], %rs123;
	add.s32 	%r10691, %r12694, 3;
	setp.gt.u32 	%p84, %r10691, 15;
	@%p84 bra 	$L__BB6_110;

	ld.const.u8 	%rs124, [%rd171+3];
	st.local.u8 	[%rd172+3], %rs124;
	add.s32 	%r10692, %r12694, 4;
	setp.gt.u32 	%p86, %r10692, 15;
	@%p86 bra 	$L__BB6_110;

	ld.const.u8 	%rs125, [%rd171+4];
	st.local.u8 	[%rd172+4], %rs125;
	add.s32 	%r10693, %r12694, 5;
	setp.gt.u32 	%p88, %r10693, 15;
	@%p88 bra 	$L__BB6_110;

	ld.const.u8 	%rs126, [%rd171+5];
	st.local.u8 	[%rd172+5], %rs126;
	add.s32 	%r10694, %r12694, 6;
	setp.gt.u32 	%p90, %r10694, 15;
	@%p90 bra 	$L__BB6_110;

	ld.const.u8 	%rs127, [%rd171+6];
	st.local.u8 	[%rd172+6], %rs127;
	add.s32 	%r10695, %r12694, 7;
	setp.gt.u32 	%p92, %r10695, 15;
	@%p92 bra 	$L__BB6_110;

	ld.const.u8 	%rs128, [%rd171+7];
	st.local.u8 	[%rd172+7], %rs128;
	add.s32 	%r10696, %r12694, 8;
	setp.gt.u32 	%p94, %r10696, 15;
	@%p94 bra 	$L__BB6_110;

	ld.const.u8 	%rs129, [%rd171+8];
	st.local.u8 	[%rd172+8], %rs129;
	add.s32 	%r10697, %r12694, 9;
	setp.gt.u32 	%p96, %r10697, 15;
	@%p96 bra 	$L__BB6_110;

	ld.const.u8 	%rs130, [%rd171+9];
	st.local.u8 	[%rd172+9], %rs130;
	add.s32 	%r10698, %r12694, 10;
	setp.gt.u32 	%p98, %r10698, 15;
	@%p98 bra 	$L__BB6_110;

	ld.const.u8 	%rs131, [%rd171+10];
	st.local.u8 	[%rd172+10], %rs131;
	add.s32 	%r10699, %r12694, 11;
	setp.gt.u32 	%p100, %r10699, 15;
	@%p100 bra 	$L__BB6_110;

	ld.const.u8 	%rs132, [%rd171+11];
	st.local.u8 	[%rd172+11], %rs132;
	add.s32 	%r10700, %r12694, 12;
	setp.gt.u32 	%p102, %r10700, 15;
	@%p102 bra 	$L__BB6_110;

	ld.const.u8 	%rs133, [%rd171+12];
	st.local.u8 	[%rd172+12], %rs133;
	add.s32 	%r10701, %r12694, 13;
	setp.gt.u32 	%p104, %r10701, 15;
	@%p104 bra 	$L__BB6_110;

	ld.const.u8 	%rs134, [%rd171+13];
	st.local.u8 	[%rd172+13], %rs134;
	add.s32 	%r10702, %r12694, 14;
	setp.gt.u32 	%p106, %r10702, 15;
	@%p106 bra 	$L__BB6_110;

	ld.const.u8 	%rs135, [%rd171+14];
	st.local.u8 	[%rd172+14], %rs135;
	add.s32 	%r10703, %r12694, 15;
	setp.gt.u32 	%p108, %r10703, 15;
	@%p108 bra 	$L__BB6_110;

	ld.const.u8 	%rs136, [%rd171+15];
	st.local.u8 	[%rd172+15], %rs136;
	bra.uni 	$L__BB6_110;

$L__BB6_92:
	add.s32 	%r12695, %r12695, -16;
	add.s64 	%rd9573, %rd9573, 16;
	add.s64 	%rd9574, %rd9574, 16;
	mov.pred 	%p118, -1;

$L__BB6_110:
	@%p118 bra 	$L__BB6_72;

$L__BB6_111:
	add.u64 	%rd9519, %SPL, 736;
	mov.u64 	%rd9510, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12627}, %rd9510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12626,%dummy}, %rd9510;
	}
	mov.u64 	%rd9509, 7640891576956012808;
	mov.u64 	%rd9508, 0;
	mov.u64 	%rd9507, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12625,%dummy}, %rd9507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12624}, %rd9507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12623}, %rd9508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12622,%dummy}, %rd9508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12621}, %rd9509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12620,%dummy}, %rd9509;
	}
	mov.b32 	%r12619, %envreg3;
	mov.u32 	%r12618, %tid.x;
	add.s32 	%r12617, %r12618, %r12619;
	mov.u32 	%r12616, %ctaid.x;
	mov.u32 	%r12615, %ntid.x;
	mad.lo.s32 	%r12614, %r12615, %r12616, %r12617;
	cvt.u64.u32 	%rd9506, %r12614;
	ld.param.u64 	%rd9505, [Generate2013key_param_1];
	shf.r.wrap.b32 	%r12613, %r12623, %r12622, 1;
	shf.r.wrap.b32 	%r12612, %r12622, %r12623, 1;
	shf.r.wrap.b32 	%r12611, %r12623, %r12622, 8;
	shf.r.wrap.b32 	%r12610, %r12622, %r12623, 8;
	mov.b64 	%rd9504, {%r12610, %r12611};
	mov.b64 	%rd9503, {%r12612, %r12613};
	xor.b64  	%rd9502, %rd9503, %rd9504;
	shf.r.wrap.b32 	%r12609, %r12624, %r12625, 1;
	shf.r.wrap.b32 	%r12608, %r12625, %r12624, 1;
	shf.r.wrap.b32 	%r12607, %r12624, %r12625, 8;
	shf.r.wrap.b32 	%r12606, %r12625, %r12624, 8;
	mov.b64 	%rd9501, {%r12606, %r12607};
	mov.b64 	%rd9500, {%r12608, %r12609};
	xor.b64  	%rd9499, %rd9500, %rd9501;
	xor.b64  	%rd9498, %rd9499, 72057594037927936;
	shf.r.wrap.b32 	%r12605, %r12623, %r12622, 19;
	shf.r.wrap.b32 	%r12604, %r12622, %r12623, 19;
	shf.l.wrap.b32 	%r12603, %r12622, %r12623, 3;
	shf.l.wrap.b32 	%r12602, %r12623, %r12622, 3;
	mov.b64 	%rd9497, {%r12602, %r12603};
	mov.b64 	%rd9496, {%r12604, %r12605};
	xor.b64  	%rd9495, %rd9496, %rd9497;
	shf.r.wrap.b32 	%r12601, %r12621, %r12620, 28;
	shf.r.wrap.b32 	%r12600, %r12620, %r12621, 28;
	shf.l.wrap.b32 	%r12599, %r12620, %r12621, 30;
	shf.l.wrap.b32 	%r12598, %r12621, %r12620, 30;
	mov.b64 	%rd9494, {%r12598, %r12599};
	mov.b64 	%rd9493, {%r12600, %r12601};
	shf.l.wrap.b32 	%r12597, %r12620, %r12621, 25;
	shf.l.wrap.b32 	%r12596, %r12621, %r12620, 25;
	mov.b64 	%rd9492, {%r12596, %r12597};
	xor.b64  	%rd9491, %rd9493, %rd9494;
	xor.b64  	%rd9490, %rd9491, %rd9492;
	add.s64 	%rd9489, %rd9490, 6482280703085258342;
	shf.r.wrap.b32 	%r12595, %r12627, %r12626, 14;
	shf.r.wrap.b32 	%r12594, %r12626, %r12627, 14;
	shf.r.wrap.b32 	%r12593, %r12627, %r12626, 18;
	shf.r.wrap.b32 	%r12592, %r12626, %r12627, 18;
	mov.b64 	%rd9488, {%r12592, %r12593};
	mov.b64 	%rd9487, {%r12594, %r12595};
	shf.l.wrap.b32 	%r12591, %r12626, %r12627, 23;
	shf.l.wrap.b32 	%r12590, %r12627, %r12626, 23;
	mov.b64 	%rd9486, {%r12590, %r12591};
	xor.b64  	%rd9485, %rd9487, %rd9488;
	xor.b64  	%rd9484, %rd9485, %rd9486;
	add.s64 	%rd9483, %rd9484, -7031530027109396581;
	add.u64 	%rd9481, %SPL, 992;
	shl.b64 	%rd6801, %rd165, 48;
	shl.b64 	%rd6802, %rd166, 56;
	or.b64  	%rd6803, %rd6801, %rd6802;
	shl.b64 	%rd6804, %rd164, 40;
	or.b64  	%rd6805, %rd6803, %rd6804;
	shl.b64 	%rd6806, %rd163, 32;
	or.b64  	%rd6807, %rd6805, %rd6806;
	shl.b64 	%rd6808, %rd162, 24;
	or.b64  	%rd6809, %rd6807, %rd6808;
	shl.b64 	%rd6810, %rd161, 16;
	or.b64  	%rd6811, %rd6809, %rd6810;
	shl.b64 	%rd6812, %rd160, 8;
	or.b64  	%rd6813, %rd6811, %rd6812;
	or.b64  	%rd6814, %rd6813, %rd159;
	shl.b64 	%rd6815, %rd152, 48;
	shl.b64 	%rd6816, %rd158, 56;
	or.b64  	%rd6817, %rd6815, %rd6816;
	shl.b64 	%rd6818, %rd151, 40;
	or.b64  	%rd6819, %rd6817, %rd6818;
	shl.b64 	%rd6820, %rd150, 32;
	or.b64  	%rd6821, %rd6819, %rd6820;
	shl.b64 	%rd6822, %rd149, 24;
	or.b64  	%rd6823, %rd6821, %rd6822;
	shl.b64 	%rd6824, %rd148, 16;
	or.b64  	%rd6825, %rd6823, %rd6824;
	shl.b64 	%rd6826, %rd147, 8;
	or.b64  	%rd6827, %rd6825, %rd6826;
	or.b64  	%rd6828, %rd6827, %rd146;
	add.s64 	%rd6829, %rd9483, %rd6814;
	add.s64 	%rd6830, %rd6829, -4263291710961585108;
	add.s64 	%rd6831, %rd9489, %rd6829;
	and.b64  	%rd6832, %rd6830, -3887949035690463538;
	xor.b64  	%rd6833, %rd6832, -7276294671716946913;
	add.s64 	%rd6834, %rd6828, %rd6833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10704,%dummy}, %rd6830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10705}, %rd6830;
	}
	shf.r.wrap.b32 	%r10706, %r10705, %r10704, 14;
	shf.r.wrap.b32 	%r10707, %r10704, %r10705, 14;
	mov.b64 	%rd6835, {%r10707, %r10706};
	shf.r.wrap.b32 	%r10708, %r10705, %r10704, 18;
	shf.r.wrap.b32 	%r10709, %r10704, %r10705, 18;
	mov.b64 	%rd6836, {%r10709, %r10708};
	xor.b64  	%rd6837, %rd6835, %rd6836;
	shf.l.wrap.b32 	%r10710, %r10704, %r10705, 23;
	shf.l.wrap.b32 	%r10711, %r10705, %r10704, 23;
	mov.b64 	%rd6838, {%r10711, %r10710};
	xor.b64  	%rd6839, %rd6837, %rd6838;
	add.s64 	%rd6840, %rd6834, %rd6839;
	add.s64 	%rd6841, %rd6840, -8017781463737883848;
	add.s64 	%rd6842, %rd6840, -3663095898801038493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10712,%dummy}, %rd6831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10713}, %rd6831;
	}
	shf.r.wrap.b32 	%r10714, %r10713, %r10712, 28;
	shf.r.wrap.b32 	%r10715, %r10712, %r10713, 28;
	mov.b64 	%rd6843, {%r10715, %r10714};
	shf.l.wrap.b32 	%r10716, %r10712, %r10713, 30;
	shf.l.wrap.b32 	%r10717, %r10713, %r10712, 30;
	mov.b64 	%rd6844, {%r10717, %r10716};
	xor.b64  	%rd6845, %rd6843, %rd6844;
	shf.l.wrap.b32 	%r10718, %r10712, %r10713, 25;
	shf.l.wrap.b32 	%r10719, %r10713, %r10712, 25;
	mov.b64 	%rd6846, {%r10719, %r10718};
	xor.b64  	%rd6847, %rd6845, %rd6846;
	and.b64  	%rd6848, %rd6831, -3355664534840381901;
	or.b64  	%rd6849, %rd6848, 3026882967131160840;
	add.s64 	%rd6850, %rd6849, %rd6847;
	add.s64 	%rd6851, %rd6850, %rd6841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10720,%dummy}, %rd6842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10721}, %rd6842;
	}
	shf.r.wrap.b32 	%r10722, %r10721, %r10720, 14;
	shf.r.wrap.b32 	%r10723, %r10720, %r10721, 14;
	mov.b64 	%rd6852, {%r10723, %r10722};
	shf.r.wrap.b32 	%r10724, %r10721, %r10720, 18;
	shf.r.wrap.b32 	%r10725, %r10720, %r10721, 18;
	mov.b64 	%rd6853, {%r10725, %r10724};
	xor.b64  	%rd6854, %rd6852, %rd6853;
	shf.l.wrap.b32 	%r10726, %r10720, %r10721, 23;
	shf.l.wrap.b32 	%r10727, %r10721, %r10720, 23;
	mov.b64 	%rd6855, {%r10727, %r10726};
	xor.b64  	%rd6856, %rd6854, %rd6855;
	xor.b64  	%rd6857, %rd6830, 5840696475078001361;
	and.b64  	%rd6858, %rd6842, %rd6857;
	xor.b64  	%rd6859, %rd6858, 5840696475078001361;
	add.s64 	%rd6860, %rd6859, %rd6856;
	add.s64 	%rd6861, %rd6860, -3402922121737033906;
	add.s64 	%rd6862, %rd6860, -8345712299271106935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10728,%dummy}, %rd6851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10729}, %rd6851;
	}
	shf.r.wrap.b32 	%r10730, %r10729, %r10728, 28;
	shf.r.wrap.b32 	%r10731, %r10728, %r10729, 28;
	mov.b64 	%rd6863, {%r10731, %r10730};
	shf.l.wrap.b32 	%r10732, %r10728, %r10729, 30;
	shf.l.wrap.b32 	%r10733, %r10729, %r10728, 30;
	mov.b64 	%rd6864, {%r10733, %r10732};
	xor.b64  	%rd6865, %rd6863, %rd6864;
	shf.l.wrap.b32 	%r10734, %r10728, %r10729, 25;
	shf.l.wrap.b32 	%r10735, %r10729, %r10728, 25;
	mov.b64 	%rd6866, {%r10735, %r10734};
	xor.b64  	%rd6867, %rd6865, %rd6866;
	and.b64  	%rd6868, %rd6851, %rd6831;
	or.b64  	%rd6869, %rd6851, %rd6831;
	and.b64  	%rd6870, %rd6869, 7640891576956012808;
	or.b64  	%rd6871, %rd6870, %rd6868;
	add.s64 	%rd6872, %rd6871, %rd6867;
	add.s64 	%rd6873, %rd6872, %rd6861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10736,%dummy}, %rd6862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10737}, %rd6862;
	}
	shf.r.wrap.b32 	%r10738, %r10737, %r10736, 14;
	shf.r.wrap.b32 	%r10739, %r10736, %r10737, 14;
	mov.b64 	%rd6874, {%r10739, %r10738};
	shf.r.wrap.b32 	%r10740, %r10737, %r10736, 18;
	shf.r.wrap.b32 	%r10741, %r10736, %r10737, 18;
	mov.b64 	%rd6875, {%r10741, %r10740};
	xor.b64  	%rd6876, %rd6874, %rd6875;
	shf.l.wrap.b32 	%r10742, %r10736, %r10737, 23;
	shf.l.wrap.b32 	%r10743, %r10737, %r10736, 23;
	mov.b64 	%rd6877, {%r10743, %r10742};
	xor.b64  	%rd6878, %rd6876, %rd6877;
	xor.b64  	%rd6879, %rd6842, %rd6830;
	and.b64  	%rd6880, %rd6862, %rd6879;
	xor.b64  	%rd6881, %rd6880, %rd6830;
	add.s64 	%rd6882, %rd6881, %rd6878;
	add.s64 	%rd6883, %rd6882, 4234560286879669901;
	add.s64 	%rd6884, %rd6882, -6571292209873868907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10744,%dummy}, %rd6873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10745}, %rd6873;
	}
	shf.r.wrap.b32 	%r10746, %r10745, %r10744, 28;
	shf.r.wrap.b32 	%r10747, %r10744, %r10745, 28;
	mov.b64 	%rd6885, {%r10747, %r10746};
	shf.l.wrap.b32 	%r10748, %r10744, %r10745, 30;
	shf.l.wrap.b32 	%r10749, %r10745, %r10744, 30;
	mov.b64 	%rd6886, {%r10749, %r10748};
	xor.b64  	%rd6887, %rd6885, %rd6886;
	shf.l.wrap.b32 	%r10750, %r10744, %r10745, 25;
	shf.l.wrap.b32 	%r10751, %r10745, %r10744, 25;
	mov.b64 	%rd6888, {%r10751, %r10750};
	xor.b64  	%rd6889, %rd6887, %rd6888;
	and.b64  	%rd6890, %rd6873, %rd6851;
	or.b64  	%rd6891, %rd6873, %rd6851;
	and.b64  	%rd6892, %rd6891, %rd6831;
	or.b64  	%rd6893, %rd6892, %rd6890;
	add.s64 	%rd6894, %rd6893, %rd6889;
	add.s64 	%rd6895, %rd6894, %rd6883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10752,%dummy}, %rd6884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10753}, %rd6884;
	}
	shf.r.wrap.b32 	%r10754, %r10753, %r10752, 14;
	shf.r.wrap.b32 	%r10755, %r10752, %r10753, 14;
	mov.b64 	%rd6896, {%r10755, %r10754};
	shf.r.wrap.b32 	%r10756, %r10753, %r10752, 18;
	shf.r.wrap.b32 	%r10757, %r10752, %r10753, 18;
	mov.b64 	%rd6897, {%r10757, %r10756};
	xor.b64  	%rd6898, %rd6896, %rd6897;
	shf.l.wrap.b32 	%r10758, %r10752, %r10753, 23;
	shf.l.wrap.b32 	%r10759, %r10753, %r10752, 23;
	mov.b64 	%rd6899, {%r10759, %r10758};
	xor.b64  	%rd6900, %rd6898, %rd6899;
	xor.b64  	%rd6901, %rd6862, %rd6842;
	and.b64  	%rd6902, %rd6884, %rd6901;
	xor.b64  	%rd6903, %rd6902, %rd6842;
	add.s64 	%rd6904, %rd6829, %rd6903;
	add.s64 	%rd6905, %rd6904, %rd6900;
	add.s64 	%rd6906, %rd6905, -131588302623135388;
	add.s64 	%rd6907, %rd6906, %rd6831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10760,%dummy}, %rd6895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10761}, %rd6895;
	}
	shf.r.wrap.b32 	%r10762, %r10761, %r10760, 28;
	shf.r.wrap.b32 	%r10763, %r10760, %r10761, 28;
	mov.b64 	%rd6908, {%r10763, %r10762};
	shf.l.wrap.b32 	%r10764, %r10760, %r10761, 30;
	shf.l.wrap.b32 	%r10765, %r10761, %r10760, 30;
	mov.b64 	%rd6909, {%r10765, %r10764};
	xor.b64  	%rd6910, %rd6908, %rd6909;
	shf.l.wrap.b32 	%r10766, %r10760, %r10761, 25;
	shf.l.wrap.b32 	%r10767, %r10761, %r10760, 25;
	mov.b64 	%rd6911, {%r10767, %r10766};
	xor.b64  	%rd6912, %rd6910, %rd6911;
	and.b64  	%rd6913, %rd6895, %rd6873;
	or.b64  	%rd6914, %rd6895, %rd6873;
	and.b64  	%rd6915, %rd6914, %rd6851;
	or.b64  	%rd6916, %rd6915, %rd6913;
	add.s64 	%rd6917, %rd6916, %rd6912;
	add.s64 	%rd6918, %rd6917, %rd6906;
	xor.b64  	%rd6919, %rd6884, %rd6862;
	and.b64  	%rd6920, %rd6907, %rd6919;
	xor.b64  	%rd6921, %rd6920, %rd6862;
	add.s64 	%rd6922, %rd6841, %rd6921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10768,%dummy}, %rd6907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10769}, %rd6907;
	}
	shf.r.wrap.b32 	%r10770, %r10769, %r10768, 14;
	shf.r.wrap.b32 	%r10771, %r10768, %r10769, 14;
	mov.b64 	%rd6923, {%r10771, %r10770};
	shf.r.wrap.b32 	%r10772, %r10769, %r10768, 18;
	shf.r.wrap.b32 	%r10773, %r10768, %r10769, 18;
	mov.b64 	%rd6924, {%r10773, %r10772};
	xor.b64  	%rd6925, %rd6923, %rd6924;
	shf.l.wrap.b32 	%r10774, %r10768, %r10769, 23;
	shf.l.wrap.b32 	%r10775, %r10769, %r10768, 23;
	mov.b64 	%rd6926, {%r10775, %r10774};
	xor.b64  	%rd6927, %rd6925, %rd6926;
	add.s64 	%rd6928, %rd6922, %rd6927;
	add.s64 	%rd6929, %rd6928, -7611077440171227068;
	add.s64 	%rd6930, %rd6929, %rd6851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10776,%dummy}, %rd6918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10777}, %rd6918;
	}
	shf.r.wrap.b32 	%r10778, %r10777, %r10776, 28;
	shf.r.wrap.b32 	%r10779, %r10776, %r10777, 28;
	mov.b64 	%rd6931, {%r10779, %r10778};
	shf.l.wrap.b32 	%r10780, %r10776, %r10777, 30;
	shf.l.wrap.b32 	%r10781, %r10777, %r10776, 30;
	mov.b64 	%rd6932, {%r10781, %r10780};
	xor.b64  	%rd6933, %rd6931, %rd6932;
	shf.l.wrap.b32 	%r10782, %r10776, %r10777, 25;
	shf.l.wrap.b32 	%r10783, %r10777, %r10776, 25;
	mov.b64 	%rd6934, {%r10783, %r10782};
	xor.b64  	%rd6935, %rd6933, %rd6934;
	and.b64  	%rd6936, %rd6918, %rd6895;
	or.b64  	%rd6937, %rd6918, %rd6895;
	and.b64  	%rd6938, %rd6937, %rd6873;
	or.b64  	%rd6939, %rd6938, %rd6936;
	add.s64 	%rd6940, %rd6939, %rd6935;
	add.s64 	%rd6941, %rd6940, %rd6929;
	xor.b64  	%rd6942, %rd6907, %rd6884;
	and.b64  	%rd6943, %rd6930, %rd6942;
	xor.b64  	%rd6944, %rd6943, %rd6884;
	add.s64 	%rd6945, %rd6861, %rd6944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10784,%dummy}, %rd6930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10785}, %rd6930;
	}
	shf.r.wrap.b32 	%r10786, %r10785, %r10784, 14;
	shf.r.wrap.b32 	%r10787, %r10784, %r10785, 14;
	mov.b64 	%rd6946, {%r10787, %r10786};
	shf.r.wrap.b32 	%r10788, %r10785, %r10784, 18;
	shf.r.wrap.b32 	%r10789, %r10784, %r10785, 18;
	mov.b64 	%rd6947, {%r10789, %r10788};
	xor.b64  	%rd6948, %rd6946, %rd6947;
	shf.l.wrap.b32 	%r10790, %r10784, %r10785, 23;
	shf.l.wrap.b32 	%r10791, %r10785, %r10784, 23;
	mov.b64 	%rd6949, {%r10791, %r10790};
	xor.b64  	%rd6950, %rd6948, %rd6949;
	add.s64 	%rd6951, %rd6945, %rd6950;
	add.s64 	%rd6952, %rd6951, 5595495119360095958;
	add.s64 	%rd6953, %rd6952, %rd6873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10792,%dummy}, %rd6941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10793}, %rd6941;
	}
	shf.r.wrap.b32 	%r10794, %r10793, %r10792, 28;
	shf.r.wrap.b32 	%r10795, %r10792, %r10793, 28;
	mov.b64 	%rd6954, {%r10795, %r10794};
	shf.l.wrap.b32 	%r10796, %r10792, %r10793, 30;
	shf.l.wrap.b32 	%r10797, %r10793, %r10792, 30;
	mov.b64 	%rd6955, {%r10797, %r10796};
	xor.b64  	%rd6956, %rd6954, %rd6955;
	shf.l.wrap.b32 	%r10798, %r10792, %r10793, 25;
	shf.l.wrap.b32 	%r10799, %r10793, %r10792, 25;
	mov.b64 	%rd6957, {%r10799, %r10798};
	xor.b64  	%rd6958, %rd6956, %rd6957;
	and.b64  	%rd6959, %rd6941, %rd6918;
	or.b64  	%rd6960, %rd6941, %rd6918;
	and.b64  	%rd6961, %rd6960, %rd6895;
	or.b64  	%rd6962, %rd6961, %rd6959;
	add.s64 	%rd6963, %rd6962, %rd6958;
	add.s64 	%rd6964, %rd6963, %rd6952;
	xor.b64  	%rd6965, %rd6930, %rd6907;
	and.b64  	%rd6966, %rd6953, %rd6965;
	xor.b64  	%rd6967, %rd6966, %rd6907;
	add.s64 	%rd6968, %rd6883, %rd6967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10800,%dummy}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10801}, %rd6953;
	}
	shf.r.wrap.b32 	%r10802, %r10801, %r10800, 14;
	shf.r.wrap.b32 	%r10803, %r10800, %r10801, 14;
	mov.b64 	%rd6969, {%r10803, %r10802};
	shf.r.wrap.b32 	%r10804, %r10801, %r10800, 18;
	shf.r.wrap.b32 	%r10805, %r10800, %r10801, 18;
	mov.b64 	%rd6970, {%r10805, %r10804};
	xor.b64  	%rd6971, %rd6969, %rd6970;
	shf.l.wrap.b32 	%r10806, %r10800, %r10801, 23;
	shf.l.wrap.b32 	%r10807, %r10801, %r10800, 23;
	mov.b64 	%rd6972, {%r10807, %r10806};
	xor.b64  	%rd6973, %rd6971, %rd6972;
	add.s64 	%rd6974, %rd6968, %rd6973;
	add.s64 	%rd6975, %rd6974, 1523981655665691168;
	add.s64 	%rd6976, %rd6975, %rd6895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10808,%dummy}, %rd6964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10809}, %rd6964;
	}
	shf.r.wrap.b32 	%r10810, %r10809, %r10808, 28;
	shf.r.wrap.b32 	%r10811, %r10808, %r10809, 28;
	mov.b64 	%rd6977, {%r10811, %r10810};
	shf.l.wrap.b32 	%r10812, %r10808, %r10809, 30;
	shf.l.wrap.b32 	%r10813, %r10809, %r10808, 30;
	mov.b64 	%rd6978, {%r10813, %r10812};
	xor.b64  	%rd6979, %rd6977, %rd6978;
	shf.l.wrap.b32 	%r10814, %r10808, %r10809, 25;
	shf.l.wrap.b32 	%r10815, %r10809, %r10808, 25;
	mov.b64 	%rd6980, {%r10815, %r10814};
	xor.b64  	%rd6981, %rd6979, %rd6980;
	and.b64  	%rd6982, %rd6964, %rd6941;
	or.b64  	%rd6983, %rd6964, %rd6941;
	and.b64  	%rd6984, %rd6983, %rd6918;
	or.b64  	%rd6985, %rd6984, %rd6982;
	add.s64 	%rd6986, %rd6985, %rd6981;
	add.s64 	%rd6987, %rd6986, %rd6975;
	xor.b64  	%rd6988, %rd6953, %rd6930;
	and.b64  	%rd6989, %rd6976, %rd6988;
	xor.b64  	%rd6990, %rd6989, %rd6930;
	add.s64 	%rd6991, %rd6907, %rd6990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10816,%dummy}, %rd6976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10817}, %rd6976;
	}
	shf.r.wrap.b32 	%r10818, %r10817, %r10816, 14;
	shf.r.wrap.b32 	%r10819, %r10816, %r10817, 14;
	mov.b64 	%rd6992, {%r10819, %r10818};
	shf.r.wrap.b32 	%r10820, %r10817, %r10816, 18;
	shf.r.wrap.b32 	%r10821, %r10816, %r10817, 18;
	mov.b64 	%rd6993, {%r10821, %r10820};
	xor.b64  	%rd6994, %rd6992, %rd6993;
	shf.l.wrap.b32 	%r10822, %r10816, %r10817, 23;
	shf.l.wrap.b32 	%r10823, %r10817, %r10816, 23;
	mov.b64 	%rd6995, {%r10823, %r10822};
	xor.b64  	%rd6996, %rd6994, %rd6995;
	add.s64 	%rd6997, %rd6991, %rd6996;
	add.s64 	%rd6998, %rd6997, -2880145864133508542;
	add.s64 	%rd6999, %rd6998, %rd6918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10824,%dummy}, %rd6987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10825}, %rd6987;
	}
	shf.r.wrap.b32 	%r10826, %r10825, %r10824, 28;
	shf.r.wrap.b32 	%r10827, %r10824, %r10825, 28;
	mov.b64 	%rd7000, {%r10827, %r10826};
	shf.l.wrap.b32 	%r10828, %r10824, %r10825, 30;
	shf.l.wrap.b32 	%r10829, %r10825, %r10824, 30;
	mov.b64 	%rd7001, {%r10829, %r10828};
	xor.b64  	%rd7002, %rd7000, %rd7001;
	shf.l.wrap.b32 	%r10830, %r10824, %r10825, 25;
	shf.l.wrap.b32 	%r10831, %r10825, %r10824, 25;
	mov.b64 	%rd7003, {%r10831, %r10830};
	xor.b64  	%rd7004, %rd7002, %rd7003;
	and.b64  	%rd7005, %rd6987, %rd6964;
	or.b64  	%rd7006, %rd6987, %rd6964;
	and.b64  	%rd7007, %rd7006, %rd6941;
	or.b64  	%rd7008, %rd7007, %rd7005;
	add.s64 	%rd7009, %rd7008, %rd7004;
	add.s64 	%rd7010, %rd7009, %rd6998;
	xor.b64  	%rd7011, %rd6976, %rd6953;
	and.b64  	%rd7012, %rd6999, %rd7011;
	xor.b64  	%rd7013, %rd7012, %rd6953;
	add.s64 	%rd7014, %rd6930, %rd7013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10832,%dummy}, %rd6999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10833}, %rd6999;
	}
	shf.r.wrap.b32 	%r10834, %r10833, %r10832, 14;
	shf.r.wrap.b32 	%r10835, %r10832, %r10833, 14;
	mov.b64 	%rd7015, {%r10835, %r10834};
	shf.r.wrap.b32 	%r10836, %r10833, %r10832, 18;
	shf.r.wrap.b32 	%r10837, %r10832, %r10833, 18;
	mov.b64 	%rd7016, {%r10837, %r10836};
	xor.b64  	%rd7017, %rd7015, %rd7016;
	shf.l.wrap.b32 	%r10838, %r10832, %r10833, 23;
	shf.l.wrap.b32 	%r10839, %r10833, %r10832, 23;
	mov.b64 	%rd7018, {%r10839, %r10838};
	xor.b64  	%rd7019, %rd7017, %rd7018;
	add.s64 	%rd7020, %rd7014, %rd7019;
	add.s64 	%rd7021, %rd7020, 1334009975649890238;
	add.s64 	%rd7022, %rd7021, %rd6941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10840,%dummy}, %rd7010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10841}, %rd7010;
	}
	shf.r.wrap.b32 	%r10842, %r10841, %r10840, 28;
	shf.r.wrap.b32 	%r10843, %r10840, %r10841, 28;
	mov.b64 	%rd7023, {%r10843, %r10842};
	shf.l.wrap.b32 	%r10844, %r10840, %r10841, 30;
	shf.l.wrap.b32 	%r10845, %r10841, %r10840, 30;
	mov.b64 	%rd7024, {%r10845, %r10844};
	xor.b64  	%rd7025, %rd7023, %rd7024;
	shf.l.wrap.b32 	%r10846, %r10840, %r10841, 25;
	shf.l.wrap.b32 	%r10847, %r10841, %r10840, 25;
	mov.b64 	%rd7026, {%r10847, %r10846};
	xor.b64  	%rd7027, %rd7025, %rd7026;
	and.b64  	%rd7028, %rd7010, %rd6987;
	or.b64  	%rd7029, %rd7010, %rd6987;
	and.b64  	%rd7030, %rd7029, %rd6964;
	or.b64  	%rd7031, %rd7030, %rd7028;
	add.s64 	%rd7032, %rd7031, %rd7027;
	add.s64 	%rd7033, %rd7032, %rd7021;
	xor.b64  	%rd7034, %rd6999, %rd6976;
	and.b64  	%rd7035, %rd7022, %rd7034;
	xor.b64  	%rd7036, %rd7035, %rd6976;
	add.s64 	%rd7037, %rd6953, %rd7036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10848,%dummy}, %rd7022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10849}, %rd7022;
	}
	shf.r.wrap.b32 	%r10850, %r10849, %r10848, 14;
	shf.r.wrap.b32 	%r10851, %r10848, %r10849, 14;
	mov.b64 	%rd7038, {%r10851, %r10850};
	shf.r.wrap.b32 	%r10852, %r10849, %r10848, 18;
	shf.r.wrap.b32 	%r10853, %r10848, %r10849, 18;
	mov.b64 	%rd7039, {%r10853, %r10852};
	xor.b64  	%rd7040, %rd7038, %rd7039;
	shf.l.wrap.b32 	%r10854, %r10848, %r10849, 23;
	shf.l.wrap.b32 	%r10855, %r10849, %r10848, 23;
	mov.b64 	%rd7041, {%r10855, %r10854};
	xor.b64  	%rd7042, %rd7040, %rd7041;
	add.s64 	%rd7043, %rd7037, %rd7042;
	add.s64 	%rd7044, %rd7043, 2608012711638119052;
	add.s64 	%rd7045, %rd7044, %rd6964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10856,%dummy}, %rd7033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10857}, %rd7033;
	}
	shf.r.wrap.b32 	%r10858, %r10857, %r10856, 28;
	shf.r.wrap.b32 	%r10859, %r10856, %r10857, 28;
	mov.b64 	%rd7046, {%r10859, %r10858};
	shf.l.wrap.b32 	%r10860, %r10856, %r10857, 30;
	shf.l.wrap.b32 	%r10861, %r10857, %r10856, 30;
	mov.b64 	%rd7047, {%r10861, %r10860};
	xor.b64  	%rd7048, %rd7046, %rd7047;
	shf.l.wrap.b32 	%r10862, %r10856, %r10857, 25;
	shf.l.wrap.b32 	%r10863, %r10857, %r10856, 25;
	mov.b64 	%rd7049, {%r10863, %r10862};
	xor.b64  	%rd7050, %rd7048, %rd7049;
	and.b64  	%rd7051, %rd7033, %rd7010;
	or.b64  	%rd7052, %rd7033, %rd7010;
	and.b64  	%rd7053, %rd7052, %rd6987;
	or.b64  	%rd7054, %rd7053, %rd7051;
	add.s64 	%rd7055, %rd7054, %rd7050;
	add.s64 	%rd7056, %rd7055, %rd7044;
	xor.b64  	%rd7057, %rd7022, %rd6999;
	and.b64  	%rd7058, %rd7045, %rd7057;
	xor.b64  	%rd7059, %rd7058, %rd6999;
	add.s64 	%rd7060, %rd6976, %rd7059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10864,%dummy}, %rd7045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10865}, %rd7045;
	}
	shf.r.wrap.b32 	%r10866, %r10865, %r10864, 14;
	shf.r.wrap.b32 	%r10867, %r10864, %r10865, 14;
	mov.b64 	%rd7061, {%r10867, %r10866};
	shf.r.wrap.b32 	%r10868, %r10865, %r10864, 18;
	shf.r.wrap.b32 	%r10869, %r10864, %r10865, 18;
	mov.b64 	%rd7062, {%r10869, %r10868};
	xor.b64  	%rd7063, %rd7061, %rd7062;
	shf.l.wrap.b32 	%r10870, %r10864, %r10865, 23;
	shf.l.wrap.b32 	%r10871, %r10865, %r10864, 23;
	mov.b64 	%rd7064, {%r10871, %r10870};
	xor.b64  	%rd7065, %rd7063, %rd7064;
	add.s64 	%rd7066, %rd7060, %rd7065;
	add.s64 	%rd7067, %rd7066, 6128411473006802146;
	add.s64 	%rd7068, %rd7067, %rd6987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10872,%dummy}, %rd7056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10873}, %rd7056;
	}
	shf.r.wrap.b32 	%r10874, %r10873, %r10872, 28;
	shf.r.wrap.b32 	%r10875, %r10872, %r10873, 28;
	mov.b64 	%rd7069, {%r10875, %r10874};
	shf.l.wrap.b32 	%r10876, %r10872, %r10873, 30;
	shf.l.wrap.b32 	%r10877, %r10873, %r10872, 30;
	mov.b64 	%rd7070, {%r10877, %r10876};
	xor.b64  	%rd7071, %rd7069, %rd7070;
	shf.l.wrap.b32 	%r10878, %r10872, %r10873, 25;
	shf.l.wrap.b32 	%r10879, %r10873, %r10872, 25;
	mov.b64 	%rd7072, {%r10879, %r10878};
	xor.b64  	%rd7073, %rd7071, %rd7072;
	and.b64  	%rd7074, %rd7056, %rd7033;
	or.b64  	%rd7075, %rd7056, %rd7033;
	and.b64  	%rd7076, %rd7075, %rd7010;
	or.b64  	%rd7077, %rd7076, %rd7074;
	add.s64 	%rd7078, %rd7077, %rd7073;
	add.s64 	%rd7079, %rd7078, %rd7067;
	xor.b64  	%rd7080, %rd7045, %rd7022;
	and.b64  	%rd7081, %rd7068, %rd7080;
	xor.b64  	%rd7082, %rd7081, %rd7022;
	add.s64 	%rd7083, %rd6999, %rd7082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10880,%dummy}, %rd7068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10881}, %rd7068;
	}
	shf.r.wrap.b32 	%r10882, %r10881, %r10880, 14;
	shf.r.wrap.b32 	%r10883, %r10880, %r10881, 14;
	mov.b64 	%rd7084, {%r10883, %r10882};
	shf.r.wrap.b32 	%r10884, %r10881, %r10880, 18;
	shf.r.wrap.b32 	%r10885, %r10880, %r10881, 18;
	mov.b64 	%rd7085, {%r10885, %r10884};
	xor.b64  	%rd7086, %rd7084, %rd7085;
	shf.l.wrap.b32 	%r10886, %r10880, %r10881, 23;
	shf.l.wrap.b32 	%r10887, %r10881, %r10880, 23;
	mov.b64 	%rd7087, {%r10887, %r10886};
	xor.b64  	%rd7088, %rd7086, %rd7087;
	add.s64 	%rd7089, %rd7083, %rd7088;
	add.s64 	%rd7090, %rd7089, 8268148722764581231;
	add.s64 	%rd7091, %rd7090, %rd7010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10888,%dummy}, %rd7079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10889}, %rd7079;
	}
	shf.r.wrap.b32 	%r10890, %r10889, %r10888, 28;
	shf.r.wrap.b32 	%r10891, %r10888, %r10889, 28;
	mov.b64 	%rd7092, {%r10891, %r10890};
	shf.l.wrap.b32 	%r10892, %r10888, %r10889, 30;
	shf.l.wrap.b32 	%r10893, %r10889, %r10888, 30;
	mov.b64 	%rd7093, {%r10893, %r10892};
	xor.b64  	%rd7094, %rd7092, %rd7093;
	shf.l.wrap.b32 	%r10894, %r10888, %r10889, 25;
	shf.l.wrap.b32 	%r10895, %r10889, %r10888, 25;
	mov.b64 	%rd7095, {%r10895, %r10894};
	xor.b64  	%rd7096, %rd7094, %rd7095;
	and.b64  	%rd7097, %rd7079, %rd7056;
	or.b64  	%rd7098, %rd7079, %rd7056;
	and.b64  	%rd7099, %rd7098, %rd7033;
	or.b64  	%rd7100, %rd7099, %rd7097;
	add.s64 	%rd7101, %rd7100, %rd7096;
	add.s64 	%rd7102, %rd7101, %rd7090;
	xor.b64  	%rd7103, %rd7068, %rd7045;
	and.b64  	%rd7104, %rd7091, %rd7103;
	xor.b64  	%rd7105, %rd7104, %rd7045;
	add.s64 	%rd7106, %rd7022, %rd7105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10896,%dummy}, %rd7091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10897}, %rd7091;
	}
	shf.r.wrap.b32 	%r10898, %r10897, %r10896, 14;
	shf.r.wrap.b32 	%r10899, %r10896, %r10897, 14;
	mov.b64 	%rd7107, {%r10899, %r10898};
	shf.r.wrap.b32 	%r10900, %r10897, %r10896, 18;
	shf.r.wrap.b32 	%r10901, %r10896, %r10897, 18;
	mov.b64 	%rd7108, {%r10901, %r10900};
	xor.b64  	%rd7109, %rd7107, %rd7108;
	shf.l.wrap.b32 	%r10902, %r10896, %r10897, 23;
	shf.l.wrap.b32 	%r10903, %r10897, %r10896, 23;
	mov.b64 	%rd7110, {%r10903, %r10902};
	xor.b64  	%rd7111, %rd7109, %rd7110;
	add.s64 	%rd7112, %rd7106, %rd7111;
	add.s64 	%rd7113, %rd7112, -9160688886553864527;
	add.s64 	%rd7114, %rd7113, %rd7033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10904,%dummy}, %rd7102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10905}, %rd7102;
	}
	shf.r.wrap.b32 	%r10906, %r10905, %r10904, 28;
	shf.r.wrap.b32 	%r10907, %r10904, %r10905, 28;
	mov.b64 	%rd7115, {%r10907, %r10906};
	shf.l.wrap.b32 	%r10908, %r10904, %r10905, 30;
	shf.l.wrap.b32 	%r10909, %r10905, %r10904, 30;
	mov.b64 	%rd7116, {%r10909, %r10908};
	xor.b64  	%rd7117, %rd7115, %rd7116;
	shf.l.wrap.b32 	%r10910, %r10904, %r10905, 25;
	shf.l.wrap.b32 	%r10911, %r10905, %r10904, 25;
	mov.b64 	%rd7118, {%r10911, %r10910};
	xor.b64  	%rd7119, %rd7117, %rd7118;
	and.b64  	%rd7120, %rd7102, %rd7079;
	or.b64  	%rd7121, %rd7102, %rd7079;
	and.b64  	%rd7122, %rd7121, %rd7056;
	or.b64  	%rd7123, %rd7122, %rd7120;
	add.s64 	%rd7124, %rd7123, %rd7119;
	add.s64 	%rd7125, %rd7124, %rd7113;
	xor.b64  	%rd7126, %rd7091, %rd7068;
	and.b64  	%rd7127, %rd7114, %rd7126;
	xor.b64  	%rd7128, %rd7127, %rd7068;
	add.s64 	%rd7129, %rd7045, %rd7128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10912,%dummy}, %rd7114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10913}, %rd7114;
	}
	shf.r.wrap.b32 	%r10914, %r10913, %r10912, 14;
	shf.r.wrap.b32 	%r10915, %r10912, %r10913, 14;
	mov.b64 	%rd7130, {%r10915, %r10914};
	shf.r.wrap.b32 	%r10916, %r10913, %r10912, 18;
	shf.r.wrap.b32 	%r10917, %r10912, %r10913, 18;
	mov.b64 	%rd7131, {%r10917, %r10916};
	xor.b64  	%rd7132, %rd7130, %rd7131;
	shf.l.wrap.b32 	%r10918, %r10912, %r10913, 23;
	shf.l.wrap.b32 	%r10919, %r10913, %r10912, 23;
	mov.b64 	%rd7133, {%r10919, %r10918};
	xor.b64  	%rd7134, %rd7132, %rd7133;
	add.s64 	%rd7135, %rd7129, %rd7134;
	add.s64 	%rd7136, %rd7135, -7215885187991268811;
	add.s64 	%rd7137, %rd7136, %rd7056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10920,%dummy}, %rd7125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10921}, %rd7125;
	}
	shf.r.wrap.b32 	%r10922, %r10921, %r10920, 28;
	shf.r.wrap.b32 	%r10923, %r10920, %r10921, 28;
	mov.b64 	%rd7138, {%r10923, %r10922};
	shf.l.wrap.b32 	%r10924, %r10920, %r10921, 30;
	shf.l.wrap.b32 	%r10925, %r10921, %r10920, 30;
	mov.b64 	%rd7139, {%r10925, %r10924};
	xor.b64  	%rd7140, %rd7138, %rd7139;
	shf.l.wrap.b32 	%r10926, %r10920, %r10921, 25;
	shf.l.wrap.b32 	%r10927, %r10921, %r10920, 25;
	mov.b64 	%rd7141, {%r10927, %r10926};
	xor.b64  	%rd7142, %rd7140, %rd7141;
	and.b64  	%rd7143, %rd7125, %rd7102;
	or.b64  	%rd7144, %rd7125, %rd7102;
	and.b64  	%rd7145, %rd7144, %rd7079;
	or.b64  	%rd7146, %rd7145, %rd7143;
	add.s64 	%rd7147, %rd7146, %rd7142;
	add.s64 	%rd7148, %rd7147, %rd7136;
	xor.b64  	%rd7149, %rd7114, %rd7091;
	and.b64  	%rd7150, %rd7137, %rd7149;
	xor.b64  	%rd7151, %rd7150, %rd7091;
	add.s64 	%rd7152, %rd7068, %rd7151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10928,%dummy}, %rd7137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10929}, %rd7137;
	}
	shf.r.wrap.b32 	%r10930, %r10929, %r10928, 14;
	shf.r.wrap.b32 	%r10931, %r10928, %r10929, 14;
	mov.b64 	%rd7153, {%r10931, %r10930};
	shf.r.wrap.b32 	%r10932, %r10929, %r10928, 18;
	shf.r.wrap.b32 	%r10933, %r10928, %r10929, 18;
	mov.b64 	%rd7154, {%r10933, %r10932};
	xor.b64  	%rd7155, %rd7153, %rd7154;
	shf.l.wrap.b32 	%r10934, %r10928, %r10929, 23;
	shf.l.wrap.b32 	%r10935, %r10929, %r10928, 23;
	mov.b64 	%rd7156, {%r10935, %r10934};
	xor.b64  	%rd7157, %rd7155, %rd7156;
	add.s64 	%rd7158, %rd7152, %rd7157;
	add.s64 	%rd7159, %rd7158, -4495734319001032940;
	add.s64 	%rd7160, %rd7159, %rd7079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10936,%dummy}, %rd7148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10937}, %rd7148;
	}
	shf.r.wrap.b32 	%r10938, %r10937, %r10936, 28;
	shf.r.wrap.b32 	%r10939, %r10936, %r10937, 28;
	mov.b64 	%rd7161, {%r10939, %r10938};
	shf.l.wrap.b32 	%r10940, %r10936, %r10937, 30;
	shf.l.wrap.b32 	%r10941, %r10937, %r10936, 30;
	mov.b64 	%rd7162, {%r10941, %r10940};
	xor.b64  	%rd7163, %rd7161, %rd7162;
	shf.l.wrap.b32 	%r10942, %r10936, %r10937, 25;
	shf.l.wrap.b32 	%r10943, %r10937, %r10936, 25;
	mov.b64 	%rd7164, {%r10943, %r10942};
	xor.b64  	%rd7165, %rd7163, %rd7164;
	and.b64  	%rd7166, %rd7148, %rd7125;
	or.b64  	%rd7167, %rd7148, %rd7125;
	and.b64  	%rd7168, %rd7167, %rd7102;
	or.b64  	%rd7169, %rd7168, %rd7166;
	add.s64 	%rd7170, %rd7169, %rd7165;
	add.s64 	%rd7171, %rd7170, %rd7159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10944,%dummy}, %rd6828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10945}, %rd6828;
	}
	shf.r.wrap.b32 	%r10946, %r10945, %r10944, 1;
	shf.r.wrap.b32 	%r10947, %r10944, %r10945, 1;
	mov.b64 	%rd7172, {%r10947, %r10946};
	shf.r.wrap.b32 	%r10948, %r10945, %r10944, 8;
	shf.r.wrap.b32 	%r10949, %r10944, %r10945, 8;
	mov.b64 	%rd7173, {%r10949, %r10948};
	xor.b64  	%rd7174, %rd7172, %rd7173;
	shr.u64 	%rd7175, %rd6828, 7;
	xor.b64  	%rd7176, %rd7174, %rd7175;
	add.s64 	%rd7177, %rd9495, %rd6814;
	add.s64 	%rd7178, %rd7177, %rd7176;
	add.s64 	%rd7179, %rd7178, %rd7091;
	xor.b64  	%rd7180, %rd7137, %rd7114;
	and.b64  	%rd7181, %rd7160, %rd7180;
	xor.b64  	%rd7182, %rd7181, %rd7114;
	add.s64 	%rd7183, %rd7179, %rd7182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10950,%dummy}, %rd7160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10951}, %rd7160;
	}
	shf.r.wrap.b32 	%r10952, %r10951, %r10950, 14;
	shf.r.wrap.b32 	%r10953, %r10950, %r10951, 14;
	mov.b64 	%rd7184, {%r10953, %r10952};
	shf.r.wrap.b32 	%r10954, %r10951, %r10950, 18;
	shf.r.wrap.b32 	%r10955, %r10950, %r10951, 18;
	mov.b64 	%rd7185, {%r10955, %r10954};
	xor.b64  	%rd7186, %rd7184, %rd7185;
	shf.l.wrap.b32 	%r10956, %r10950, %r10951, 23;
	shf.l.wrap.b32 	%r10957, %r10951, %r10950, 23;
	mov.b64 	%rd7187, {%r10957, %r10956};
	xor.b64  	%rd7188, %rd7186, %rd7187;
	add.s64 	%rd7189, %rd7183, %rd7188;
	add.s64 	%rd7190, %rd7189, -1973867731355612462;
	add.s64 	%rd7191, %rd7190, %rd7102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10958,%dummy}, %rd7171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10959}, %rd7171;
	}
	shf.r.wrap.b32 	%r10960, %r10959, %r10958, 28;
	shf.r.wrap.b32 	%r10961, %r10958, %r10959, 28;
	mov.b64 	%rd7192, {%r10961, %r10960};
	shf.l.wrap.b32 	%r10962, %r10958, %r10959, 30;
	shf.l.wrap.b32 	%r10963, %r10959, %r10958, 30;
	mov.b64 	%rd7193, {%r10963, %r10962};
	xor.b64  	%rd7194, %rd7192, %rd7193;
	shf.l.wrap.b32 	%r10964, %r10958, %r10959, 25;
	shf.l.wrap.b32 	%r10965, %r10959, %r10958, 25;
	mov.b64 	%rd7195, {%r10965, %r10964};
	xor.b64  	%rd7196, %rd7194, %rd7195;
	and.b64  	%rd7197, %rd7171, %rd7148;
	or.b64  	%rd7198, %rd7171, %rd7148;
	and.b64  	%rd7199, %rd7198, %rd7125;
	or.b64  	%rd7200, %rd7199, %rd7197;
	add.s64 	%rd7201, %rd7200, %rd7196;
	add.s64 	%rd7202, %rd7201, %rd7190;
	mov.u64 	%rd7203, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10966}, %rd7203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10967,%dummy}, %rd7203;
	}
	shf.l.wrap.b32 	%r10968, %r10967, %r10966, 3;
	shf.l.wrap.b32 	%r10969, %r10966, %r10967, 3;
	mov.b64 	%rd7204, {%r10969, %r10968};
	shf.r.wrap.b32 	%r10970, %r10966, %r10967, 19;
	shf.r.wrap.b32 	%r10971, %r10967, %r10966, 19;
	mov.b64 	%rd7205, {%r10971, %r10970};
	xor.b64  	%rd7206, %rd7205, %rd7204;
	xor.b64  	%rd7207, %rd7206, 2;
	add.s64 	%rd7208, %rd7207, %rd6828;
	add.s64 	%rd7209, %rd7208, %rd9498;
	add.s64 	%rd7210, %rd7209, %rd7114;
	xor.b64  	%rd7211, %rd7160, %rd7137;
	and.b64  	%rd7212, %rd7191, %rd7211;
	xor.b64  	%rd7213, %rd7212, %rd7137;
	add.s64 	%rd7214, %rd7210, %rd7213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10972,%dummy}, %rd7191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10973}, %rd7191;
	}
	shf.r.wrap.b32 	%r10974, %r10973, %r10972, 14;
	shf.r.wrap.b32 	%r10975, %r10972, %r10973, 14;
	mov.b64 	%rd7215, {%r10975, %r10974};
	shf.r.wrap.b32 	%r10976, %r10973, %r10972, 18;
	shf.r.wrap.b32 	%r10977, %r10972, %r10973, 18;
	mov.b64 	%rd7216, {%r10977, %r10976};
	xor.b64  	%rd7217, %rd7215, %rd7216;
	shf.l.wrap.b32 	%r10978, %r10972, %r10973, 23;
	shf.l.wrap.b32 	%r10979, %r10973, %r10972, 23;
	mov.b64 	%rd7218, {%r10979, %r10978};
	xor.b64  	%rd7219, %rd7217, %rd7218;
	add.s64 	%rd7220, %rd7214, %rd7219;
	add.s64 	%rd7221, %rd7220, -1171420211273849373;
	add.s64 	%rd7222, %rd7221, %rd7125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10980,%dummy}, %rd7202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10981}, %rd7202;
	}
	shf.r.wrap.b32 	%r10982, %r10981, %r10980, 28;
	shf.r.wrap.b32 	%r10983, %r10980, %r10981, 28;
	mov.b64 	%rd7223, {%r10983, %r10982};
	shf.l.wrap.b32 	%r10984, %r10980, %r10981, 30;
	shf.l.wrap.b32 	%r10985, %r10981, %r10980, 30;
	mov.b64 	%rd7224, {%r10985, %r10984};
	xor.b64  	%rd7225, %rd7223, %rd7224;
	shf.l.wrap.b32 	%r10986, %r10980, %r10981, 25;
	shf.l.wrap.b32 	%r10987, %r10981, %r10980, 25;
	mov.b64 	%rd7226, {%r10987, %r10986};
	xor.b64  	%rd7227, %rd7225, %rd7226;
	and.b64  	%rd7228, %rd7202, %rd7171;
	or.b64  	%rd7229, %rd7202, %rd7171;
	and.b64  	%rd7230, %rd7229, %rd7148;
	or.b64  	%rd7231, %rd7230, %rd7228;
	add.s64 	%rd7232, %rd7231, %rd7227;
	add.s64 	%rd7233, %rd7232, %rd7221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10988,%dummy}, %rd7178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10989}, %rd7178;
	}
	shf.r.wrap.b32 	%r10990, %r10989, %r10988, 19;
	shf.r.wrap.b32 	%r10991, %r10988, %r10989, 19;
	mov.b64 	%rd7234, {%r10991, %r10990};
	shf.l.wrap.b32 	%r10992, %r10988, %r10989, 3;
	shf.l.wrap.b32 	%r10993, %r10989, %r10988, 3;
	mov.b64 	%rd7235, {%r10993, %r10992};
	xor.b64  	%rd7236, %rd7234, %rd7235;
	shr.u64 	%rd7237, %rd7178, 6;
	xor.b64  	%rd7238, %rd7236, %rd7237;
	xor.b64  	%rd7239, %rd7238, -9223372036854775808;
	add.s64 	%rd7240, %rd7239, %rd9502;
	add.s64 	%rd7241, %rd7240, %rd7137;
	xor.b64  	%rd7242, %rd7191, %rd7160;
	and.b64  	%rd7243, %rd7222, %rd7242;
	xor.b64  	%rd7244, %rd7243, %rd7160;
	add.s64 	%rd7245, %rd7241, %rd7244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10994,%dummy}, %rd7222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10995}, %rd7222;
	}
	shf.r.wrap.b32 	%r10996, %r10995, %r10994, 14;
	shf.r.wrap.b32 	%r10997, %r10994, %r10995, 14;
	mov.b64 	%rd7246, {%r10997, %r10996};
	shf.r.wrap.b32 	%r10998, %r10995, %r10994, 18;
	shf.r.wrap.b32 	%r10999, %r10994, %r10995, 18;
	mov.b64 	%rd7247, {%r10999, %r10998};
	xor.b64  	%rd7248, %rd7246, %rd7247;
	shf.l.wrap.b32 	%r11000, %r10994, %r10995, 23;
	shf.l.wrap.b32 	%r11001, %r10995, %r10994, 23;
	mov.b64 	%rd7249, {%r11001, %r11000};
	xor.b64  	%rd7250, %rd7248, %rd7249;
	add.s64 	%rd7251, %rd7245, %rd7250;
	add.s64 	%rd7252, %rd7251, 1135362057144423861;
	add.s64 	%rd7253, %rd7252, %rd7148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11002,%dummy}, %rd7233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11003}, %rd7233;
	}
	shf.r.wrap.b32 	%r11004, %r11003, %r11002, 28;
	shf.r.wrap.b32 	%r11005, %r11002, %r11003, 28;
	mov.b64 	%rd7254, {%r11005, %r11004};
	shf.l.wrap.b32 	%r11006, %r11002, %r11003, 30;
	shf.l.wrap.b32 	%r11007, %r11003, %r11002, 30;
	mov.b64 	%rd7255, {%r11007, %r11006};
	xor.b64  	%rd7256, %rd7254, %rd7255;
	shf.l.wrap.b32 	%r11008, %r11002, %r11003, 25;
	shf.l.wrap.b32 	%r11009, %r11003, %r11002, 25;
	mov.b64 	%rd7257, {%r11009, %r11008};
	xor.b64  	%rd7258, %rd7256, %rd7257;
	and.b64  	%rd7259, %rd7233, %rd7202;
	or.b64  	%rd7260, %rd7233, %rd7202;
	and.b64  	%rd7261, %rd7260, %rd7171;
	or.b64  	%rd7262, %rd7261, %rd7259;
	add.s64 	%rd7263, %rd7262, %rd7258;
	add.s64 	%rd7264, %rd7263, %rd7252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11010,%dummy}, %rd7209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11011}, %rd7209;
	}
	shf.r.wrap.b32 	%r11012, %r11011, %r11010, 19;
	shf.r.wrap.b32 	%r11013, %r11010, %r11011, 19;
	mov.b64 	%rd7265, {%r11013, %r11012};
	shf.l.wrap.b32 	%r11014, %r11010, %r11011, 3;
	shf.l.wrap.b32 	%r11015, %r11011, %r11010, 3;
	mov.b64 	%rd7266, {%r11015, %r11014};
	xor.b64  	%rd7267, %rd7265, %rd7266;
	shr.u64 	%rd7268, %rd7209, 6;
	xor.b64  	%rd7269, %rd7267, %rd7268;
	add.s64 	%rd7270, %rd7269, %rd9502;
	add.s64 	%rd7271, %rd7270, %rd7160;
	xor.b64  	%rd7272, %rd7222, %rd7191;
	and.b64  	%rd7273, %rd7253, %rd7272;
	xor.b64  	%rd7274, %rd7273, %rd7191;
	add.s64 	%rd7275, %rd7271, %rd7274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11016,%dummy}, %rd7253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11017}, %rd7253;
	}
	shf.r.wrap.b32 	%r11018, %r11017, %r11016, 14;
	shf.r.wrap.b32 	%r11019, %r11016, %r11017, 14;
	mov.b64 	%rd7276, {%r11019, %r11018};
	shf.r.wrap.b32 	%r11020, %r11017, %r11016, 18;
	shf.r.wrap.b32 	%r11021, %r11016, %r11017, 18;
	mov.b64 	%rd7277, {%r11021, %r11020};
	xor.b64  	%rd7278, %rd7276, %rd7277;
	shf.l.wrap.b32 	%r11022, %r11016, %r11017, 23;
	shf.l.wrap.b32 	%r11023, %r11017, %r11016, 23;
	mov.b64 	%rd7279, {%r11023, %r11022};
	xor.b64  	%rd7280, %rd7278, %rd7279;
	add.s64 	%rd7281, %rd7275, %rd7280;
	add.s64 	%rd7282, %rd7281, 2597628984639134821;
	add.s64 	%rd7283, %rd7282, %rd7171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11024,%dummy}, %rd7264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11025}, %rd7264;
	}
	shf.r.wrap.b32 	%r11026, %r11025, %r11024, 28;
	shf.r.wrap.b32 	%r11027, %r11024, %r11025, 28;
	mov.b64 	%rd7284, {%r11027, %r11026};
	shf.l.wrap.b32 	%r11028, %r11024, %r11025, 30;
	shf.l.wrap.b32 	%r11029, %r11025, %r11024, 30;
	mov.b64 	%rd7285, {%r11029, %r11028};
	xor.b64  	%rd7286, %rd7284, %rd7285;
	shf.l.wrap.b32 	%r11030, %r11024, %r11025, 25;
	shf.l.wrap.b32 	%r11031, %r11025, %r11024, 25;
	mov.b64 	%rd7287, {%r11031, %r11030};
	xor.b64  	%rd7288, %rd7286, %rd7287;
	and.b64  	%rd7289, %rd7264, %rd7233;
	or.b64  	%rd7290, %rd7264, %rd7233;
	and.b64  	%rd7291, %rd7290, %rd7202;
	or.b64  	%rd7292, %rd7291, %rd7289;
	add.s64 	%rd7293, %rd7292, %rd7288;
	add.s64 	%rd7294, %rd7293, %rd7282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11032,%dummy}, %rd7240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11033}, %rd7240;
	}
	shf.r.wrap.b32 	%r11034, %r11033, %r11032, 19;
	shf.r.wrap.b32 	%r11035, %r11032, %r11033, 19;
	mov.b64 	%rd7295, {%r11035, %r11034};
	shf.l.wrap.b32 	%r11036, %r11032, %r11033, 3;
	shf.l.wrap.b32 	%r11037, %r11033, %r11032, 3;
	mov.b64 	%rd7296, {%r11037, %r11036};
	xor.b64  	%rd7297, %rd7295, %rd7296;
	shr.u64 	%rd7298, %rd7240, 6;
	xor.b64  	%rd7299, %rd7297, %rd7298;
	add.s64 	%rd7300, %rd7299, %rd9502;
	add.s64 	%rd7301, %rd7300, %rd7191;
	xor.b64  	%rd7302, %rd7253, %rd7222;
	and.b64  	%rd7303, %rd7283, %rd7302;
	xor.b64  	%rd7304, %rd7303, %rd7222;
	add.s64 	%rd7305, %rd7301, %rd7304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11038,%dummy}, %rd7283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11039}, %rd7283;
	}
	shf.r.wrap.b32 	%r11040, %r11039, %r11038, 14;
	shf.r.wrap.b32 	%r11041, %r11038, %r11039, 14;
	mov.b64 	%rd7306, {%r11041, %r11040};
	shf.r.wrap.b32 	%r11042, %r11039, %r11038, 18;
	shf.r.wrap.b32 	%r11043, %r11038, %r11039, 18;
	mov.b64 	%rd7307, {%r11043, %r11042};
	xor.b64  	%rd7308, %rd7306, %rd7307;
	shf.l.wrap.b32 	%r11044, %r11038, %r11039, 23;
	shf.l.wrap.b32 	%r11045, %r11039, %r11038, 23;
	mov.b64 	%rd7309, {%r11045, %r11044};
	xor.b64  	%rd7310, %rd7308, %rd7309;
	add.s64 	%rd7311, %rd7305, %rd7310;
	add.s64 	%rd7312, %rd7311, 3308224258029322869;
	add.s64 	%rd7313, %rd7312, %rd7202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11046,%dummy}, %rd7294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11047}, %rd7294;
	}
	shf.r.wrap.b32 	%r11048, %r11047, %r11046, 28;
	shf.r.wrap.b32 	%r11049, %r11046, %r11047, 28;
	mov.b64 	%rd7314, {%r11049, %r11048};
	shf.l.wrap.b32 	%r11050, %r11046, %r11047, 30;
	shf.l.wrap.b32 	%r11051, %r11047, %r11046, 30;
	mov.b64 	%rd7315, {%r11051, %r11050};
	xor.b64  	%rd7316, %rd7314, %rd7315;
	shf.l.wrap.b32 	%r11052, %r11046, %r11047, 25;
	shf.l.wrap.b32 	%r11053, %r11047, %r11046, 25;
	mov.b64 	%rd7317, {%r11053, %r11052};
	xor.b64  	%rd7318, %rd7316, %rd7317;
	and.b64  	%rd7319, %rd7294, %rd7264;
	or.b64  	%rd7320, %rd7294, %rd7264;
	and.b64  	%rd7321, %rd7320, %rd7233;
	or.b64  	%rd7322, %rd7321, %rd7319;
	add.s64 	%rd7323, %rd7322, %rd7318;
	add.s64 	%rd7324, %rd7323, %rd7312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11054,%dummy}, %rd7270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11055}, %rd7270;
	}
	shf.r.wrap.b32 	%r11056, %r11055, %r11054, 19;
	shf.r.wrap.b32 	%r11057, %r11054, %r11055, 19;
	mov.b64 	%rd7325, {%r11057, %r11056};
	shf.l.wrap.b32 	%r11058, %r11054, %r11055, 3;
	shf.l.wrap.b32 	%r11059, %r11055, %r11054, 3;
	mov.b64 	%rd7326, {%r11059, %r11058};
	xor.b64  	%rd7327, %rd7325, %rd7326;
	shr.u64 	%rd7328, %rd7270, 6;
	xor.b64  	%rd7329, %rd7327, %rd7328;
	add.s64 	%rd7330, %rd7329, %rd9502;
	add.s64 	%rd7331, %rd7330, %rd7222;
	xor.b64  	%rd7332, %rd7283, %rd7253;
	and.b64  	%rd7333, %rd7313, %rd7332;
	xor.b64  	%rd7334, %rd7333, %rd7253;
	add.s64 	%rd7335, %rd7331, %rd7334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11060,%dummy}, %rd7313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11061}, %rd7313;
	}
	shf.r.wrap.b32 	%r11062, %r11061, %r11060, 14;
	shf.r.wrap.b32 	%r11063, %r11060, %r11061, 14;
	mov.b64 	%rd7336, {%r11063, %r11062};
	shf.r.wrap.b32 	%r11064, %r11061, %r11060, 18;
	shf.r.wrap.b32 	%r11065, %r11060, %r11061, 18;
	mov.b64 	%rd7337, {%r11065, %r11064};
	xor.b64  	%rd7338, %rd7336, %rd7337;
	shf.l.wrap.b32 	%r11066, %r11060, %r11061, 23;
	shf.l.wrap.b32 	%r11067, %r11061, %r11060, 23;
	mov.b64 	%rd7339, {%r11067, %r11066};
	xor.b64  	%rd7340, %rd7338, %rd7339;
	add.s64 	%rd7341, %rd7335, %rd7340;
	add.s64 	%rd7342, %rd7341, 5365058923640841347;
	add.s64 	%rd7343, %rd7342, %rd7233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11068,%dummy}, %rd7324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11069}, %rd7324;
	}
	shf.r.wrap.b32 	%r11070, %r11069, %r11068, 28;
	shf.r.wrap.b32 	%r11071, %r11068, %r11069, 28;
	mov.b64 	%rd7344, {%r11071, %r11070};
	shf.l.wrap.b32 	%r11072, %r11068, %r11069, 30;
	shf.l.wrap.b32 	%r11073, %r11069, %r11068, 30;
	mov.b64 	%rd7345, {%r11073, %r11072};
	xor.b64  	%rd7346, %rd7344, %rd7345;
	shf.l.wrap.b32 	%r11074, %r11068, %r11069, 25;
	shf.l.wrap.b32 	%r11075, %r11069, %r11068, 25;
	mov.b64 	%rd7347, {%r11075, %r11074};
	xor.b64  	%rd7348, %rd7346, %rd7347;
	and.b64  	%rd7349, %rd7324, %rd7294;
	or.b64  	%rd7350, %rd7324, %rd7294;
	and.b64  	%rd7351, %rd7350, %rd7264;
	or.b64  	%rd7352, %rd7351, %rd7349;
	add.s64 	%rd7353, %rd7352, %rd7348;
	add.s64 	%rd7354, %rd7353, %rd7342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11076,%dummy}, %rd7300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11077}, %rd7300;
	}
	shf.r.wrap.b32 	%r11078, %r11077, %r11076, 19;
	shf.r.wrap.b32 	%r11079, %r11076, %r11077, 19;
	mov.b64 	%rd7355, {%r11079, %r11078};
	shf.l.wrap.b32 	%r11080, %r11076, %r11077, 3;
	shf.l.wrap.b32 	%r11081, %r11077, %r11076, 3;
	mov.b64 	%rd7356, {%r11081, %r11080};
	xor.b64  	%rd7357, %rd7355, %rd7356;
	shr.u64 	%rd7358, %rd7300, 6;
	xor.b64  	%rd7359, %rd7357, %rd7358;
	add.s64 	%rd7360, %rd7359, %rd9502;
	add.s64 	%rd7361, %rd7360, 128;
	add.s64 	%rd7362, %rd7361, %rd7253;
	xor.b64  	%rd7363, %rd7313, %rd7283;
	and.b64  	%rd7364, %rd7343, %rd7363;
	xor.b64  	%rd7365, %rd7364, %rd7283;
	add.s64 	%rd7366, %rd7362, %rd7365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11082,%dummy}, %rd7343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11083}, %rd7343;
	}
	shf.r.wrap.b32 	%r11084, %r11083, %r11082, 14;
	shf.r.wrap.b32 	%r11085, %r11082, %r11083, 14;
	mov.b64 	%rd7367, {%r11085, %r11084};
	shf.r.wrap.b32 	%r11086, %r11083, %r11082, 18;
	shf.r.wrap.b32 	%r11087, %r11082, %r11083, 18;
	mov.b64 	%rd7368, {%r11087, %r11086};
	xor.b64  	%rd7369, %rd7367, %rd7368;
	shf.l.wrap.b32 	%r11088, %r11082, %r11083, 23;
	shf.l.wrap.b32 	%r11089, %r11083, %r11082, 23;
	mov.b64 	%rd7370, {%r11089, %r11088};
	xor.b64  	%rd7371, %rd7369, %rd7370;
	add.s64 	%rd7372, %rd7366, %rd7371;
	add.s64 	%rd7373, %rd7372, 6679025012923562964;
	add.s64 	%rd7374, %rd7373, %rd7264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11090,%dummy}, %rd7354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11091}, %rd7354;
	}
	shf.r.wrap.b32 	%r11092, %r11091, %r11090, 28;
	shf.r.wrap.b32 	%r11093, %r11090, %r11091, 28;
	mov.b64 	%rd7375, {%r11093, %r11092};
	shf.l.wrap.b32 	%r11094, %r11090, %r11091, 30;
	shf.l.wrap.b32 	%r11095, %r11091, %r11090, 30;
	mov.b64 	%rd7376, {%r11095, %r11094};
	xor.b64  	%rd7377, %rd7375, %rd7376;
	shf.l.wrap.b32 	%r11096, %r11090, %r11091, 25;
	shf.l.wrap.b32 	%r11097, %r11091, %r11090, 25;
	mov.b64 	%rd7378, {%r11097, %r11096};
	xor.b64  	%rd7379, %rd7377, %rd7378;
	and.b64  	%rd7380, %rd7354, %rd7324;
	or.b64  	%rd7381, %rd7354, %rd7324;
	and.b64  	%rd7382, %rd7381, %rd7294;
	or.b64  	%rd7383, %rd7382, %rd7380;
	add.s64 	%rd7384, %rd7383, %rd7379;
	add.s64 	%rd7385, %rd7384, %rd7373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11098,%dummy}, %rd7330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11099}, %rd7330;
	}
	shf.r.wrap.b32 	%r11100, %r11099, %r11098, 19;
	shf.r.wrap.b32 	%r11101, %r11098, %r11099, 19;
	mov.b64 	%rd7386, {%r11101, %r11100};
	shf.l.wrap.b32 	%r11102, %r11098, %r11099, 3;
	shf.l.wrap.b32 	%r11103, %r11099, %r11098, 3;
	mov.b64 	%rd7387, {%r11103, %r11102};
	xor.b64  	%rd7388, %rd7386, %rd7387;
	shr.u64 	%rd7389, %rd7330, 6;
	xor.b64  	%rd7390, %rd7388, %rd7389;
	add.s64 	%rd7391, %rd7390, %rd7178;
	add.s64 	%rd7392, %rd7391, %rd9502;
	add.s64 	%rd7393, %rd7392, %rd7283;
	xor.b64  	%rd7394, %rd7343, %rd7313;
	and.b64  	%rd7395, %rd7374, %rd7394;
	xor.b64  	%rd7396, %rd7395, %rd7313;
	add.s64 	%rd7397, %rd7393, %rd7396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11104,%dummy}, %rd7374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11105}, %rd7374;
	}
	shf.r.wrap.b32 	%r11106, %r11105, %r11104, 14;
	shf.r.wrap.b32 	%r11107, %r11104, %r11105, 14;
	mov.b64 	%rd7398, {%r11107, %r11106};
	shf.r.wrap.b32 	%r11108, %r11105, %r11104, 18;
	shf.r.wrap.b32 	%r11109, %r11104, %r11105, 18;
	mov.b64 	%rd7399, {%r11109, %r11108};
	xor.b64  	%rd7400, %rd7398, %rd7399;
	shf.l.wrap.b32 	%r11110, %r11104, %r11105, 23;
	shf.l.wrap.b32 	%r11111, %r11105, %r11104, 23;
	mov.b64 	%rd7401, {%r11111, %r11110};
	xor.b64  	%rd7402, %rd7400, %rd7401;
	add.s64 	%rd7403, %rd7397, %rd7402;
	add.s64 	%rd7404, %rd7403, 8573033837759648693;
	add.s64 	%rd7405, %rd7404, %rd7294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11112,%dummy}, %rd7385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11113}, %rd7385;
	}
	shf.r.wrap.b32 	%r11114, %r11113, %r11112, 28;
	shf.r.wrap.b32 	%r11115, %r11112, %r11113, 28;
	mov.b64 	%rd7406, {%r11115, %r11114};
	shf.l.wrap.b32 	%r11116, %r11112, %r11113, 30;
	shf.l.wrap.b32 	%r11117, %r11113, %r11112, 30;
	mov.b64 	%rd7407, {%r11117, %r11116};
	xor.b64  	%rd7408, %rd7406, %rd7407;
	shf.l.wrap.b32 	%r11118, %r11112, %r11113, 25;
	shf.l.wrap.b32 	%r11119, %r11113, %r11112, 25;
	mov.b64 	%rd7409, {%r11119, %r11118};
	xor.b64  	%rd7410, %rd7408, %rd7409;
	and.b64  	%rd7411, %rd7385, %rd7354;
	or.b64  	%rd7412, %rd7385, %rd7354;
	and.b64  	%rd7413, %rd7412, %rd7324;
	or.b64  	%rd7414, %rd7413, %rd7411;
	add.s64 	%rd7415, %rd7414, %rd7410;
	add.s64 	%rd7416, %rd7415, %rd7404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11120,%dummy}, %rd7361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11121}, %rd7361;
	}
	shf.r.wrap.b32 	%r11122, %r11121, %r11120, 19;
	shf.r.wrap.b32 	%r11123, %r11120, %r11121, 19;
	mov.b64 	%rd7417, {%r11123, %r11122};
	shf.l.wrap.b32 	%r11124, %r11120, %r11121, 3;
	shf.l.wrap.b32 	%r11125, %r11121, %r11120, 3;
	mov.b64 	%rd7418, {%r11125, %r11124};
	xor.b64  	%rd7419, %rd7417, %rd7418;
	shr.u64 	%rd7420, %rd7361, 6;
	xor.b64  	%rd7421, %rd7419, %rd7420;
	add.s64 	%rd7422, %rd7421, %rd7209;
	add.s64 	%rd7423, %rd7422, %rd9502;
	add.s64 	%rd7424, %rd7423, %rd7313;
	xor.b64  	%rd7425, %rd7374, %rd7343;
	and.b64  	%rd7426, %rd7405, %rd7425;
	xor.b64  	%rd7427, %rd7426, %rd7343;
	add.s64 	%rd7428, %rd7424, %rd7427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11126,%dummy}, %rd7405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11127}, %rd7405;
	}
	shf.r.wrap.b32 	%r11128, %r11127, %r11126, 14;
	shf.r.wrap.b32 	%r11129, %r11126, %r11127, 14;
	mov.b64 	%rd7429, {%r11129, %r11128};
	shf.r.wrap.b32 	%r11130, %r11127, %r11126, 18;
	shf.r.wrap.b32 	%r11131, %r11126, %r11127, 18;
	mov.b64 	%rd7430, {%r11131, %r11130};
	xor.b64  	%rd7431, %rd7429, %rd7430;
	shf.l.wrap.b32 	%r11132, %r11126, %r11127, 23;
	shf.l.wrap.b32 	%r11133, %r11127, %r11126, 23;
	mov.b64 	%rd7432, {%r11133, %r11132};
	xor.b64  	%rd7433, %rd7431, %rd7432;
	add.s64 	%rd7434, %rd7428, %rd7433;
	add.s64 	%rd7435, %rd7434, -7476448914759557205;
	add.s64 	%rd7436, %rd7435, %rd7324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11134,%dummy}, %rd7416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11135}, %rd7416;
	}
	shf.r.wrap.b32 	%r11136, %r11135, %r11134, 28;
	shf.r.wrap.b32 	%r11137, %r11134, %r11135, 28;
	mov.b64 	%rd7437, {%r11137, %r11136};
	shf.l.wrap.b32 	%r11138, %r11134, %r11135, 30;
	shf.l.wrap.b32 	%r11139, %r11135, %r11134, 30;
	mov.b64 	%rd7438, {%r11139, %r11138};
	xor.b64  	%rd7439, %rd7437, %rd7438;
	shf.l.wrap.b32 	%r11140, %r11134, %r11135, 25;
	shf.l.wrap.b32 	%r11141, %r11135, %r11134, 25;
	mov.b64 	%rd7440, {%r11141, %r11140};
	xor.b64  	%rd7441, %rd7439, %rd7440;
	and.b64  	%rd7442, %rd7416, %rd7385;
	or.b64  	%rd7443, %rd7416, %rd7385;
	and.b64  	%rd7444, %rd7443, %rd7354;
	or.b64  	%rd7445, %rd7444, %rd7442;
	add.s64 	%rd7446, %rd7445, %rd7441;
	add.s64 	%rd7447, %rd7446, %rd7435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11142,%dummy}, %rd7392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11143}, %rd7392;
	}
	shf.r.wrap.b32 	%r11144, %r11143, %r11142, 19;
	shf.r.wrap.b32 	%r11145, %r11142, %r11143, 19;
	mov.b64 	%rd7448, {%r11145, %r11144};
	shf.l.wrap.b32 	%r11146, %r11142, %r11143, 3;
	shf.l.wrap.b32 	%r11147, %r11143, %r11142, 3;
	mov.b64 	%rd7449, {%r11147, %r11146};
	xor.b64  	%rd7450, %rd7448, %rd7449;
	shr.u64 	%rd7451, %rd7392, 6;
	xor.b64  	%rd7452, %rd7450, %rd7451;
	add.s64 	%rd7453, %rd7452, %rd7240;
	add.s64 	%rd7454, %rd7453, %rd9502;
	add.s64 	%rd7455, %rd7454, %rd7343;
	xor.b64  	%rd7456, %rd7405, %rd7374;
	and.b64  	%rd7457, %rd7436, %rd7456;
	xor.b64  	%rd7458, %rd7457, %rd7374;
	add.s64 	%rd7459, %rd7455, %rd7458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11148,%dummy}, %rd7436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11149}, %rd7436;
	}
	shf.r.wrap.b32 	%r11150, %r11149, %r11148, 14;
	shf.r.wrap.b32 	%r11151, %r11148, %r11149, 14;
	mov.b64 	%rd7460, {%r11151, %r11150};
	shf.r.wrap.b32 	%r11152, %r11149, %r11148, 18;
	shf.r.wrap.b32 	%r11153, %r11148, %r11149, 18;
	mov.b64 	%rd7461, {%r11153, %r11152};
	xor.b64  	%rd7462, %rd7460, %rd7461;
	shf.l.wrap.b32 	%r11154, %r11148, %r11149, 23;
	shf.l.wrap.b32 	%r11155, %r11149, %r11148, 23;
	mov.b64 	%rd7463, {%r11155, %r11154};
	xor.b64  	%rd7464, %rd7462, %rd7463;
	add.s64 	%rd7465, %rd7459, %rd7464;
	add.s64 	%rd7466, %rd7465, -6327057829258317296;
	add.s64 	%rd7467, %rd7466, %rd7354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11156,%dummy}, %rd7447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11157}, %rd7447;
	}
	shf.r.wrap.b32 	%r11158, %r11157, %r11156, 28;
	shf.r.wrap.b32 	%r11159, %r11156, %r11157, 28;
	mov.b64 	%rd7468, {%r11159, %r11158};
	shf.l.wrap.b32 	%r11160, %r11156, %r11157, 30;
	shf.l.wrap.b32 	%r11161, %r11157, %r11156, 30;
	mov.b64 	%rd7469, {%r11161, %r11160};
	xor.b64  	%rd7470, %rd7468, %rd7469;
	shf.l.wrap.b32 	%r11162, %r11156, %r11157, 25;
	shf.l.wrap.b32 	%r11163, %r11157, %r11156, 25;
	mov.b64 	%rd7471, {%r11163, %r11162};
	xor.b64  	%rd7472, %rd7470, %rd7471;
	and.b64  	%rd7473, %rd7447, %rd7416;
	or.b64  	%rd7474, %rd7447, %rd7416;
	and.b64  	%rd7475, %rd7474, %rd7385;
	or.b64  	%rd7476, %rd7475, %rd7473;
	add.s64 	%rd7477, %rd7476, %rd7472;
	add.s64 	%rd7478, %rd7477, %rd7466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11164,%dummy}, %rd7423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11165}, %rd7423;
	}
	shf.r.wrap.b32 	%r11166, %r11165, %r11164, 19;
	shf.r.wrap.b32 	%r11167, %r11164, %r11165, 19;
	mov.b64 	%rd7479, {%r11167, %r11166};
	shf.l.wrap.b32 	%r11168, %r11164, %r11165, 3;
	shf.l.wrap.b32 	%r11169, %r11165, %r11164, 3;
	mov.b64 	%rd7480, {%r11169, %r11168};
	xor.b64  	%rd7481, %rd7479, %rd7480;
	shr.u64 	%rd7482, %rd7423, 6;
	xor.b64  	%rd7483, %rd7481, %rd7482;
	add.s64 	%rd7484, %rd7483, %rd7270;
	add.s64 	%rd7485, %rd7484, %rd9502;
	add.s64 	%rd7486, %rd7485, %rd7374;
	xor.b64  	%rd7487, %rd7436, %rd7405;
	and.b64  	%rd7488, %rd7467, %rd7487;
	xor.b64  	%rd7489, %rd7488, %rd7405;
	add.s64 	%rd7490, %rd7486, %rd7489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11170,%dummy}, %rd7467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11171}, %rd7467;
	}
	shf.r.wrap.b32 	%r11172, %r11171, %r11170, 14;
	shf.r.wrap.b32 	%r11173, %r11170, %r11171, 14;
	mov.b64 	%rd7491, {%r11173, %r11172};
	shf.r.wrap.b32 	%r11174, %r11171, %r11170, 18;
	shf.r.wrap.b32 	%r11175, %r11170, %r11171, 18;
	mov.b64 	%rd7492, {%r11175, %r11174};
	xor.b64  	%rd7493, %rd7491, %rd7492;
	shf.l.wrap.b32 	%r11176, %r11170, %r11171, 23;
	shf.l.wrap.b32 	%r11177, %r11171, %r11170, 23;
	mov.b64 	%rd7494, {%r11177, %r11176};
	xor.b64  	%rd7495, %rd7493, %rd7494;
	add.s64 	%rd7496, %rd7490, %rd7495;
	add.s64 	%rd7497, %rd7496, -5763719355590565569;
	add.s64 	%rd7498, %rd7497, %rd7385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11178,%dummy}, %rd7478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11179}, %rd7478;
	}
	shf.r.wrap.b32 	%r11180, %r11179, %r11178, 28;
	shf.r.wrap.b32 	%r11181, %r11178, %r11179, 28;
	mov.b64 	%rd7499, {%r11181, %r11180};
	shf.l.wrap.b32 	%r11182, %r11178, %r11179, 30;
	shf.l.wrap.b32 	%r11183, %r11179, %r11178, 30;
	mov.b64 	%rd7500, {%r11183, %r11182};
	xor.b64  	%rd7501, %rd7499, %rd7500;
	shf.l.wrap.b32 	%r11184, %r11178, %r11179, 25;
	shf.l.wrap.b32 	%r11185, %r11179, %r11178, 25;
	mov.b64 	%rd7502, {%r11185, %r11184};
	xor.b64  	%rd7503, %rd7501, %rd7502;
	and.b64  	%rd7504, %rd7478, %rd7447;
	or.b64  	%rd7505, %rd7478, %rd7447;
	and.b64  	%rd7506, %rd7505, %rd7416;
	or.b64  	%rd7507, %rd7506, %rd7504;
	add.s64 	%rd7508, %rd7507, %rd7503;
	add.s64 	%rd7509, %rd7508, %rd7497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11186,%dummy}, %rd7454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11187}, %rd7454;
	}
	shf.r.wrap.b32 	%r11188, %r11187, %r11186, 19;
	shf.r.wrap.b32 	%r11189, %r11186, %r11187, 19;
	mov.b64 	%rd7510, {%r11189, %r11188};
	shf.l.wrap.b32 	%r11190, %r11186, %r11187, 3;
	shf.l.wrap.b32 	%r11191, %r11187, %r11186, 3;
	mov.b64 	%rd7511, {%r11191, %r11190};
	xor.b64  	%rd7512, %rd7510, %rd7511;
	shr.u64 	%rd7513, %rd7454, 6;
	xor.b64  	%rd7514, %rd7512, %rd7513;
	add.s64 	%rd7515, %rd7514, %rd7300;
	add.s64 	%rd7516, %rd7515, %rd9502;
	add.s64 	%rd7517, %rd7516, %rd7405;
	xor.b64  	%rd7518, %rd7467, %rd7436;
	and.b64  	%rd7519, %rd7498, %rd7518;
	xor.b64  	%rd7520, %rd7519, %rd7436;
	add.s64 	%rd7521, %rd7517, %rd7520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11192,%dummy}, %rd7498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11193}, %rd7498;
	}
	shf.r.wrap.b32 	%r11194, %r11193, %r11192, 14;
	shf.r.wrap.b32 	%r11195, %r11192, %r11193, 14;
	mov.b64 	%rd7522, {%r11195, %r11194};
	shf.r.wrap.b32 	%r11196, %r11193, %r11192, 18;
	shf.r.wrap.b32 	%r11197, %r11192, %r11193, 18;
	mov.b64 	%rd7523, {%r11197, %r11196};
	xor.b64  	%rd7524, %rd7522, %rd7523;
	shf.l.wrap.b32 	%r11198, %r11192, %r11193, 23;
	shf.l.wrap.b32 	%r11199, %r11193, %r11192, 23;
	mov.b64 	%rd7525, {%r11199, %r11198};
	xor.b64  	%rd7526, %rd7524, %rd7525;
	add.s64 	%rd7527, %rd7521, %rd7526;
	add.s64 	%rd7528, %rd7527, -4658551843659510044;
	add.s64 	%rd7529, %rd7528, %rd7416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11200,%dummy}, %rd7509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11201}, %rd7509;
	}
	shf.r.wrap.b32 	%r11202, %r11201, %r11200, 28;
	shf.r.wrap.b32 	%r11203, %r11200, %r11201, 28;
	mov.b64 	%rd7530, {%r11203, %r11202};
	shf.l.wrap.b32 	%r11204, %r11200, %r11201, 30;
	shf.l.wrap.b32 	%r11205, %r11201, %r11200, 30;
	mov.b64 	%rd7531, {%r11205, %r11204};
	xor.b64  	%rd7532, %rd7530, %rd7531;
	shf.l.wrap.b32 	%r11206, %r11200, %r11201, 25;
	shf.l.wrap.b32 	%r11207, %r11201, %r11200, 25;
	mov.b64 	%rd7533, {%r11207, %r11206};
	xor.b64  	%rd7534, %rd7532, %rd7533;
	and.b64  	%rd7535, %rd7509, %rd7478;
	or.b64  	%rd7536, %rd7509, %rd7478;
	and.b64  	%rd7537, %rd7536, %rd7447;
	or.b64  	%rd7538, %rd7537, %rd7535;
	add.s64 	%rd7539, %rd7538, %rd7534;
	add.s64 	%rd7540, %rd7539, %rd7528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11208,%dummy}, %rd7485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11209}, %rd7485;
	}
	shf.r.wrap.b32 	%r11210, %r11209, %r11208, 19;
	shf.r.wrap.b32 	%r11211, %r11208, %r11209, 19;
	mov.b64 	%rd7541, {%r11211, %r11210};
	shf.l.wrap.b32 	%r11212, %r11208, %r11209, 3;
	shf.l.wrap.b32 	%r11213, %r11209, %r11208, 3;
	mov.b64 	%rd7542, {%r11213, %r11212};
	xor.b64  	%rd7543, %rd7541, %rd7542;
	shr.u64 	%rd7544, %rd7485, 6;
	xor.b64  	%rd7545, %rd7543, %rd7544;
	add.s64 	%rd7546, %rd7545, %rd7330;
	add.s64 	%rd7547, %rd7546, %rd9502;
	add.s64 	%rd7548, %rd7547, %rd7436;
	xor.b64  	%rd7549, %rd7498, %rd7467;
	and.b64  	%rd7550, %rd7529, %rd7549;
	xor.b64  	%rd7551, %rd7550, %rd7467;
	add.s64 	%rd7552, %rd7548, %rd7551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11214,%dummy}, %rd7529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11215}, %rd7529;
	}
	shf.r.wrap.b32 	%r11216, %r11215, %r11214, 14;
	shf.r.wrap.b32 	%r11217, %r11214, %r11215, 14;
	mov.b64 	%rd7553, {%r11217, %r11216};
	shf.r.wrap.b32 	%r11218, %r11215, %r11214, 18;
	shf.r.wrap.b32 	%r11219, %r11214, %r11215, 18;
	mov.b64 	%rd7554, {%r11219, %r11218};
	xor.b64  	%rd7555, %rd7553, %rd7554;
	shf.l.wrap.b32 	%r11220, %r11214, %r11215, 23;
	shf.l.wrap.b32 	%r11221, %r11215, %r11214, 23;
	mov.b64 	%rd7556, {%r11221, %r11220};
	xor.b64  	%rd7557, %rd7555, %rd7556;
	add.s64 	%rd7558, %rd7552, %rd7557;
	add.s64 	%rd7559, %rd7558, -4116276920077217854;
	add.s64 	%rd7560, %rd7559, %rd7447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11222,%dummy}, %rd7540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11223}, %rd7540;
	}
	shf.r.wrap.b32 	%r11224, %r11223, %r11222, 28;
	shf.r.wrap.b32 	%r11225, %r11222, %r11223, 28;
	mov.b64 	%rd7561, {%r11225, %r11224};
	shf.l.wrap.b32 	%r11226, %r11222, %r11223, 30;
	shf.l.wrap.b32 	%r11227, %r11223, %r11222, 30;
	mov.b64 	%rd7562, {%r11227, %r11226};
	xor.b64  	%rd7563, %rd7561, %rd7562;
	shf.l.wrap.b32 	%r11228, %r11222, %r11223, 25;
	shf.l.wrap.b32 	%r11229, %r11223, %r11222, 25;
	mov.b64 	%rd7564, {%r11229, %r11228};
	xor.b64  	%rd7565, %rd7563, %rd7564;
	and.b64  	%rd7566, %rd7540, %rd7509;
	or.b64  	%rd7567, %rd7540, %rd7509;
	and.b64  	%rd7568, %rd7567, %rd7478;
	or.b64  	%rd7569, %rd7568, %rd7566;
	add.s64 	%rd7570, %rd7569, %rd7565;
	add.s64 	%rd7571, %rd7570, %rd7559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11230,%dummy}, %rd7516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11231}, %rd7516;
	}
	shf.r.wrap.b32 	%r11232, %r11231, %r11230, 19;
	shf.r.wrap.b32 	%r11233, %r11230, %r11231, 19;
	mov.b64 	%rd7572, {%r11233, %r11232};
	shf.l.wrap.b32 	%r11234, %r11230, %r11231, 3;
	shf.l.wrap.b32 	%r11235, %r11231, %r11230, 3;
	mov.b64 	%rd7573, {%r11235, %r11234};
	xor.b64  	%rd7574, %rd7572, %rd7573;
	shr.u64 	%rd7575, %rd7516, 6;
	xor.b64  	%rd7576, %rd7574, %rd7575;
	add.s64 	%rd7577, %rd7576, %rd7361;
	add.s64 	%rd7578, %rd7577, %rd9502;
	add.s64 	%rd7579, %rd7578, %rd7467;
	xor.b64  	%rd7580, %rd7529, %rd7498;
	and.b64  	%rd7581, %rd7560, %rd7580;
	xor.b64  	%rd7582, %rd7581, %rd7498;
	add.s64 	%rd7583, %rd7579, %rd7582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11236,%dummy}, %rd7560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11237}, %rd7560;
	}
	shf.r.wrap.b32 	%r11238, %r11237, %r11236, 14;
	shf.r.wrap.b32 	%r11239, %r11236, %r11237, 14;
	mov.b64 	%rd7584, {%r11239, %r11238};
	shf.r.wrap.b32 	%r11240, %r11237, %r11236, 18;
	shf.r.wrap.b32 	%r11241, %r11236, %r11237, 18;
	mov.b64 	%rd7585, {%r11241, %r11240};
	xor.b64  	%rd7586, %rd7584, %rd7585;
	shf.l.wrap.b32 	%r11242, %r11236, %r11237, 23;
	shf.l.wrap.b32 	%r11243, %r11237, %r11236, 23;
	mov.b64 	%rd7587, {%r11243, %r11242};
	xor.b64  	%rd7588, %rd7586, %rd7587;
	add.s64 	%rd7589, %rd7583, %rd7588;
	add.s64 	%rd7590, %rd7589, -3051310485924567259;
	add.s64 	%rd7591, %rd7590, %rd7478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11244,%dummy}, %rd7571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11245}, %rd7571;
	}
	shf.r.wrap.b32 	%r11246, %r11245, %r11244, 28;
	shf.r.wrap.b32 	%r11247, %r11244, %r11245, 28;
	mov.b64 	%rd7592, {%r11247, %r11246};
	shf.l.wrap.b32 	%r11248, %r11244, %r11245, 30;
	shf.l.wrap.b32 	%r11249, %r11245, %r11244, 30;
	mov.b64 	%rd7593, {%r11249, %r11248};
	xor.b64  	%rd7594, %rd7592, %rd7593;
	shf.l.wrap.b32 	%r11250, %r11244, %r11245, 25;
	shf.l.wrap.b32 	%r11251, %r11245, %r11244, 25;
	mov.b64 	%rd7595, {%r11251, %r11250};
	xor.b64  	%rd7596, %rd7594, %rd7595;
	and.b64  	%rd7597, %rd7571, %rd7540;
	or.b64  	%rd7598, %rd7571, %rd7540;
	and.b64  	%rd7599, %rd7598, %rd7509;
	or.b64  	%rd7600, %rd7599, %rd7597;
	add.s64 	%rd7601, %rd7600, %rd7596;
	add.s64 	%rd7602, %rd7601, %rd7590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11252,%dummy}, %rd7547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11253}, %rd7547;
	}
	shf.r.wrap.b32 	%r11254, %r11253, %r11252, 19;
	shf.r.wrap.b32 	%r11255, %r11252, %r11253, 19;
	mov.b64 	%rd7603, {%r11255, %r11254};
	shf.l.wrap.b32 	%r11256, %r11252, %r11253, 3;
	shf.l.wrap.b32 	%r11257, %r11253, %r11252, 3;
	mov.b64 	%rd7604, {%r11257, %r11256};
	xor.b64  	%rd7605, %rd7603, %rd7604;
	shr.u64 	%rd7606, %rd7547, 6;
	xor.b64  	%rd7607, %rd7605, %rd7606;
	shf.r.wrap.b32 	%r11258, %r10966, %r10967, 8;
	shf.r.wrap.b32 	%r11259, %r10967, %r10966, 8;
	mov.b64 	%rd7608, {%r11259, %r11258};
	shf.r.wrap.b32 	%r11260, %r10966, %r10967, 1;
	shf.r.wrap.b32 	%r11261, %r10967, %r10966, 1;
	mov.b64 	%rd7609, {%r11261, %r11260};
	xor.b64  	%rd7610, %rd7609, %rd7608;
	xor.b64  	%rd7611, %rd7610, 1;
	add.s64 	%rd7612, %rd7607, %rd7392;
	add.s64 	%rd7613, %rd7612, %rd7611;
	add.s64 	%rd7614, %rd7613, %rd7498;
	xor.b64  	%rd7615, %rd7560, %rd7529;
	and.b64  	%rd7616, %rd7591, %rd7615;
	xor.b64  	%rd7617, %rd7616, %rd7529;
	add.s64 	%rd7618, %rd7614, %rd7617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11262,%dummy}, %rd7591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11263}, %rd7591;
	}
	shf.r.wrap.b32 	%r11264, %r11263, %r11262, 14;
	shf.r.wrap.b32 	%r11265, %r11262, %r11263, 14;
	mov.b64 	%rd7619, {%r11265, %r11264};
	shf.r.wrap.b32 	%r11266, %r11263, %r11262, 18;
	shf.r.wrap.b32 	%r11267, %r11262, %r11263, 18;
	mov.b64 	%rd7620, {%r11267, %r11266};
	xor.b64  	%rd7621, %rd7619, %rd7620;
	shf.l.wrap.b32 	%r11268, %r11262, %r11263, 23;
	shf.l.wrap.b32 	%r11269, %r11263, %r11262, 23;
	mov.b64 	%rd7622, {%r11269, %r11268};
	xor.b64  	%rd7623, %rd7621, %rd7622;
	add.s64 	%rd7624, %rd7618, %rd7623;
	add.s64 	%rd7625, %rd7624, 489312712824947311;
	add.s64 	%rd7626, %rd7625, %rd7509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11270,%dummy}, %rd7602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11271}, %rd7602;
	}
	shf.r.wrap.b32 	%r11272, %r11271, %r11270, 28;
	shf.r.wrap.b32 	%r11273, %r11270, %r11271, 28;
	mov.b64 	%rd7627, {%r11273, %r11272};
	shf.l.wrap.b32 	%r11274, %r11270, %r11271, 30;
	shf.l.wrap.b32 	%r11275, %r11271, %r11270, 30;
	mov.b64 	%rd7628, {%r11275, %r11274};
	xor.b64  	%rd7629, %rd7627, %rd7628;
	shf.l.wrap.b32 	%r11276, %r11270, %r11271, 25;
	shf.l.wrap.b32 	%r11277, %r11271, %r11270, 25;
	mov.b64 	%rd7630, {%r11277, %r11276};
	xor.b64  	%rd7631, %rd7629, %rd7630;
	and.b64  	%rd7632, %rd7602, %rd7571;
	or.b64  	%rd7633, %rd7602, %rd7571;
	and.b64  	%rd7634, %rd7633, %rd7540;
	or.b64  	%rd7635, %rd7634, %rd7632;
	add.s64 	%rd7636, %rd7635, %rd7631;
	add.s64 	%rd7637, %rd7636, %rd7625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11278,%dummy}, %rd7578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11279}, %rd7578;
	}
	shf.r.wrap.b32 	%r11280, %r11279, %r11278, 19;
	shf.r.wrap.b32 	%r11281, %r11278, %r11279, 19;
	mov.b64 	%rd7638, {%r11281, %r11280};
	shf.l.wrap.b32 	%r11282, %r11278, %r11279, 3;
	shf.l.wrap.b32 	%r11283, %r11279, %r11278, 3;
	mov.b64 	%rd7639, {%r11283, %r11282};
	xor.b64  	%rd7640, %rd7638, %rd7639;
	shr.u64 	%rd7641, %rd7578, 6;
	xor.b64  	%rd7642, %rd7640, %rd7641;
	shf.r.wrap.b32 	%r11284, %r10989, %r10988, 1;
	shf.r.wrap.b32 	%r11285, %r10988, %r10989, 1;
	mov.b64 	%rd7643, {%r11285, %r11284};
	shf.r.wrap.b32 	%r11286, %r10989, %r10988, 8;
	shf.r.wrap.b32 	%r11287, %r10988, %r10989, 8;
	mov.b64 	%rd7644, {%r11287, %r11286};
	xor.b64  	%rd7645, %rd7643, %rd7644;
	shr.u64 	%rd7646, %rd7178, 7;
	xor.b64  	%rd7647, %rd7645, %rd7646;
	add.s64 	%rd7648, %rd7642, %rd7423;
	add.s64 	%rd7649, %rd7648, %rd7647;
	add.s64 	%rd7650, %rd7649, 128;
	add.s64 	%rd7651, %rd7650, %rd7529;
	xor.b64  	%rd7652, %rd7591, %rd7560;
	and.b64  	%rd7653, %rd7626, %rd7652;
	xor.b64  	%rd7654, %rd7653, %rd7560;
	add.s64 	%rd7655, %rd7651, %rd7654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11288,%dummy}, %rd7626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11289}, %rd7626;
	}
	shf.r.wrap.b32 	%r11290, %r11289, %r11288, 14;
	shf.r.wrap.b32 	%r11291, %r11288, %r11289, 14;
	mov.b64 	%rd7656, {%r11291, %r11290};
	shf.r.wrap.b32 	%r11292, %r11289, %r11288, 18;
	shf.r.wrap.b32 	%r11293, %r11288, %r11289, 18;
	mov.b64 	%rd7657, {%r11293, %r11292};
	xor.b64  	%rd7658, %rd7656, %rd7657;
	shf.l.wrap.b32 	%r11294, %r11288, %r11289, 23;
	shf.l.wrap.b32 	%r11295, %r11289, %r11288, 23;
	mov.b64 	%rd7659, {%r11295, %r11294};
	xor.b64  	%rd7660, %rd7658, %rd7659;
	add.s64 	%rd7661, %rd7655, %rd7660;
	add.s64 	%rd7662, %rd7661, 1452737877330783856;
	add.s64 	%rd7663, %rd7662, %rd7540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11296,%dummy}, %rd7637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11297}, %rd7637;
	}
	shf.r.wrap.b32 	%r11298, %r11297, %r11296, 28;
	shf.r.wrap.b32 	%r11299, %r11296, %r11297, 28;
	mov.b64 	%rd7664, {%r11299, %r11298};
	shf.l.wrap.b32 	%r11300, %r11296, %r11297, 30;
	shf.l.wrap.b32 	%r11301, %r11297, %r11296, 30;
	mov.b64 	%rd7665, {%r11301, %r11300};
	xor.b64  	%rd7666, %rd7664, %rd7665;
	shf.l.wrap.b32 	%r11302, %r11296, %r11297, 25;
	shf.l.wrap.b32 	%r11303, %r11297, %r11296, 25;
	mov.b64 	%rd7667, {%r11303, %r11302};
	xor.b64  	%rd7668, %rd7666, %rd7667;
	and.b64  	%rd7669, %rd7637, %rd7602;
	or.b64  	%rd7670, %rd7637, %rd7602;
	and.b64  	%rd7671, %rd7670, %rd7571;
	or.b64  	%rd7672, %rd7671, %rd7669;
	add.s64 	%rd7673, %rd7672, %rd7668;
	add.s64 	%rd7674, %rd7673, %rd7662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11304,%dummy}, %rd7613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11305}, %rd7613;
	}
	shf.r.wrap.b32 	%r11306, %r11305, %r11304, 19;
	shf.r.wrap.b32 	%r11307, %r11304, %r11305, 19;
	mov.b64 	%rd7675, {%r11307, %r11306};
	shf.l.wrap.b32 	%r11308, %r11304, %r11305, 3;
	shf.l.wrap.b32 	%r11309, %r11305, %r11304, 3;
	mov.b64 	%rd7676, {%r11309, %r11308};
	xor.b64  	%rd7677, %rd7675, %rd7676;
	shr.u64 	%rd7678, %rd7613, 6;
	xor.b64  	%rd7679, %rd7677, %rd7678;
	shf.r.wrap.b32 	%r11310, %r11011, %r11010, 1;
	shf.r.wrap.b32 	%r11311, %r11010, %r11011, 1;
	mov.b64 	%rd7680, {%r11311, %r11310};
	shf.r.wrap.b32 	%r11312, %r11011, %r11010, 8;
	shf.r.wrap.b32 	%r11313, %r11010, %r11011, 8;
	mov.b64 	%rd7681, {%r11313, %r11312};
	xor.b64  	%rd7682, %rd7680, %rd7681;
	shr.u64 	%rd7683, %rd7209, 7;
	xor.b64  	%rd7684, %rd7682, %rd7683;
	add.s64 	%rd7685, %rd7679, %rd7178;
	add.s64 	%rd7686, %rd7685, %rd7454;
	add.s64 	%rd7687, %rd7686, %rd7684;
	add.s64 	%rd7688, %rd7687, %rd7560;
	xor.b64  	%rd7689, %rd7626, %rd7591;
	and.b64  	%rd7690, %rd7663, %rd7689;
	xor.b64  	%rd7691, %rd7690, %rd7591;
	add.s64 	%rd7692, %rd7688, %rd7691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11314,%dummy}, %rd7663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11315}, %rd7663;
	}
	shf.r.wrap.b32 	%r11316, %r11315, %r11314, 14;
	shf.r.wrap.b32 	%r11317, %r11314, %r11315, 14;
	mov.b64 	%rd7693, {%r11317, %r11316};
	shf.r.wrap.b32 	%r11318, %r11315, %r11314, 18;
	shf.r.wrap.b32 	%r11319, %r11314, %r11315, 18;
	mov.b64 	%rd7694, {%r11319, %r11318};
	xor.b64  	%rd7695, %rd7693, %rd7694;
	shf.l.wrap.b32 	%r11320, %r11314, %r11315, 23;
	shf.l.wrap.b32 	%r11321, %r11315, %r11314, 23;
	mov.b64 	%rd7696, {%r11321, %r11320};
	xor.b64  	%rd7697, %rd7695, %rd7696;
	add.s64 	%rd7698, %rd7692, %rd7697;
	add.s64 	%rd7699, %rd7698, 2861767655752347644;
	add.s64 	%rd7700, %rd7699, %rd7571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11322,%dummy}, %rd7674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11323}, %rd7674;
	}
	shf.r.wrap.b32 	%r11324, %r11323, %r11322, 28;
	shf.r.wrap.b32 	%r11325, %r11322, %r11323, 28;
	mov.b64 	%rd7701, {%r11325, %r11324};
	shf.l.wrap.b32 	%r11326, %r11322, %r11323, 30;
	shf.l.wrap.b32 	%r11327, %r11323, %r11322, 30;
	mov.b64 	%rd7702, {%r11327, %r11326};
	xor.b64  	%rd7703, %rd7701, %rd7702;
	shf.l.wrap.b32 	%r11328, %r11322, %r11323, 25;
	shf.l.wrap.b32 	%r11329, %r11323, %r11322, 25;
	mov.b64 	%rd7704, {%r11329, %r11328};
	xor.b64  	%rd7705, %rd7703, %rd7704;
	and.b64  	%rd7706, %rd7674, %rd7637;
	or.b64  	%rd7707, %rd7674, %rd7637;
	and.b64  	%rd7708, %rd7707, %rd7602;
	or.b64  	%rd7709, %rd7708, %rd7706;
	add.s64 	%rd7710, %rd7709, %rd7705;
	add.s64 	%rd7711, %rd7710, %rd7699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11330,%dummy}, %rd7650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11331}, %rd7650;
	}
	shf.r.wrap.b32 	%r11332, %r11331, %r11330, 19;
	shf.r.wrap.b32 	%r11333, %r11330, %r11331, 19;
	mov.b64 	%rd7712, {%r11333, %r11332};
	shf.l.wrap.b32 	%r11334, %r11330, %r11331, 3;
	shf.l.wrap.b32 	%r11335, %r11331, %r11330, 3;
	mov.b64 	%rd7713, {%r11335, %r11334};
	xor.b64  	%rd7714, %rd7712, %rd7713;
	shr.u64 	%rd7715, %rd7650, 6;
	xor.b64  	%rd7716, %rd7714, %rd7715;
	shf.r.wrap.b32 	%r11336, %r11033, %r11032, 1;
	shf.r.wrap.b32 	%r11337, %r11032, %r11033, 1;
	mov.b64 	%rd7717, {%r11337, %r11336};
	shf.r.wrap.b32 	%r11338, %r11033, %r11032, 8;
	shf.r.wrap.b32 	%r11339, %r11032, %r11033, 8;
	mov.b64 	%rd7718, {%r11339, %r11338};
	xor.b64  	%rd7719, %rd7717, %rd7718;
	shr.u64 	%rd7720, %rd7240, 7;
	xor.b64  	%rd7721, %rd7719, %rd7720;
	add.s64 	%rd7722, %rd7716, %rd7209;
	add.s64 	%rd7723, %rd7722, %rd7485;
	add.s64 	%rd7724, %rd7723, %rd7721;
	add.s64 	%rd7725, %rd7724, %rd7591;
	xor.b64  	%rd7726, %rd7663, %rd7626;
	and.b64  	%rd7727, %rd7700, %rd7726;
	xor.b64  	%rd7728, %rd7727, %rd7626;
	add.s64 	%rd7729, %rd7725, %rd7728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11340,%dummy}, %rd7700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11341}, %rd7700;
	}
	shf.r.wrap.b32 	%r11342, %r11341, %r11340, 14;
	shf.r.wrap.b32 	%r11343, %r11340, %r11341, 14;
	mov.b64 	%rd7730, {%r11343, %r11342};
	shf.r.wrap.b32 	%r11344, %r11341, %r11340, 18;
	shf.r.wrap.b32 	%r11345, %r11340, %r11341, 18;
	mov.b64 	%rd7731, {%r11345, %r11344};
	xor.b64  	%rd7732, %rd7730, %rd7731;
	shf.l.wrap.b32 	%r11346, %r11340, %r11341, 23;
	shf.l.wrap.b32 	%r11347, %r11341, %r11340, 23;
	mov.b64 	%rd7733, {%r11347, %r11346};
	xor.b64  	%rd7734, %rd7732, %rd7733;
	add.s64 	%rd7735, %rd7729, %rd7734;
	add.s64 	%rd7736, %rd7735, 3322285676063803686;
	add.s64 	%rd7737, %rd7736, %rd7602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11348,%dummy}, %rd7711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11349}, %rd7711;
	}
	shf.r.wrap.b32 	%r11350, %r11349, %r11348, 28;
	shf.r.wrap.b32 	%r11351, %r11348, %r11349, 28;
	mov.b64 	%rd7738, {%r11351, %r11350};
	shf.l.wrap.b32 	%r11352, %r11348, %r11349, 30;
	shf.l.wrap.b32 	%r11353, %r11349, %r11348, 30;
	mov.b64 	%rd7739, {%r11353, %r11352};
	xor.b64  	%rd7740, %rd7738, %rd7739;
	shf.l.wrap.b32 	%r11354, %r11348, %r11349, 25;
	shf.l.wrap.b32 	%r11355, %r11349, %r11348, 25;
	mov.b64 	%rd7741, {%r11355, %r11354};
	xor.b64  	%rd7742, %rd7740, %rd7741;
	and.b64  	%rd7743, %rd7711, %rd7674;
	or.b64  	%rd7744, %rd7711, %rd7674;
	and.b64  	%rd7745, %rd7744, %rd7637;
	or.b64  	%rd7746, %rd7745, %rd7743;
	add.s64 	%rd7747, %rd7746, %rd7742;
	add.s64 	%rd7748, %rd7747, %rd7736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11356,%dummy}, %rd7687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11357}, %rd7687;
	}
	shf.r.wrap.b32 	%r11358, %r11357, %r11356, 19;
	shf.r.wrap.b32 	%r11359, %r11356, %r11357, 19;
	mov.b64 	%rd7749, {%r11359, %r11358};
	shf.l.wrap.b32 	%r11360, %r11356, %r11357, 3;
	shf.l.wrap.b32 	%r11361, %r11357, %r11356, 3;
	mov.b64 	%rd7750, {%r11361, %r11360};
	xor.b64  	%rd7751, %rd7749, %rd7750;
	shr.u64 	%rd7752, %rd7687, 6;
	xor.b64  	%rd7753, %rd7751, %rd7752;
	shf.r.wrap.b32 	%r11362, %r11055, %r11054, 1;
	shf.r.wrap.b32 	%r11363, %r11054, %r11055, 1;
	mov.b64 	%rd7754, {%r11363, %r11362};
	shf.r.wrap.b32 	%r11364, %r11055, %r11054, 8;
	shf.r.wrap.b32 	%r11365, %r11054, %r11055, 8;
	mov.b64 	%rd7755, {%r11365, %r11364};
	xor.b64  	%rd7756, %rd7754, %rd7755;
	shr.u64 	%rd7757, %rd7270, 7;
	xor.b64  	%rd7758, %rd7756, %rd7757;
	add.s64 	%rd7759, %rd7753, %rd7240;
	add.s64 	%rd7760, %rd7759, %rd7516;
	add.s64 	%rd7761, %rd7760, %rd7758;
	add.s64 	%rd7762, %rd7761, %rd7626;
	xor.b64  	%rd7763, %rd7700, %rd7663;
	and.b64  	%rd7764, %rd7737, %rd7763;
	xor.b64  	%rd7765, %rd7764, %rd7663;
	add.s64 	%rd7766, %rd7762, %rd7765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11366,%dummy}, %rd7737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11367}, %rd7737;
	}
	shf.r.wrap.b32 	%r11368, %r11367, %r11366, 14;
	shf.r.wrap.b32 	%r11369, %r11366, %r11367, 14;
	mov.b64 	%rd7767, {%r11369, %r11368};
	shf.r.wrap.b32 	%r11370, %r11367, %r11366, 18;
	shf.r.wrap.b32 	%r11371, %r11366, %r11367, 18;
	mov.b64 	%rd7768, {%r11371, %r11370};
	xor.b64  	%rd7769, %rd7767, %rd7768;
	shf.l.wrap.b32 	%r11372, %r11366, %r11367, 23;
	shf.l.wrap.b32 	%r11373, %r11367, %r11366, 23;
	mov.b64 	%rd7770, {%r11373, %r11372};
	xor.b64  	%rd7771, %rd7769, %rd7770;
	add.s64 	%rd7772, %rd7766, %rd7771;
	add.s64 	%rd7773, %rd7772, 5560940570517711597;
	add.s64 	%rd7774, %rd7773, %rd7637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11374,%dummy}, %rd7748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11375}, %rd7748;
	}
	shf.r.wrap.b32 	%r11376, %r11375, %r11374, 28;
	shf.r.wrap.b32 	%r11377, %r11374, %r11375, 28;
	mov.b64 	%rd7775, {%r11377, %r11376};
	shf.l.wrap.b32 	%r11378, %r11374, %r11375, 30;
	shf.l.wrap.b32 	%r11379, %r11375, %r11374, 30;
	mov.b64 	%rd7776, {%r11379, %r11378};
	xor.b64  	%rd7777, %rd7775, %rd7776;
	shf.l.wrap.b32 	%r11380, %r11374, %r11375, 25;
	shf.l.wrap.b32 	%r11381, %r11375, %r11374, 25;
	mov.b64 	%rd7778, {%r11381, %r11380};
	xor.b64  	%rd7779, %rd7777, %rd7778;
	and.b64  	%rd7780, %rd7748, %rd7711;
	or.b64  	%rd7781, %rd7748, %rd7711;
	and.b64  	%rd7782, %rd7781, %rd7674;
	or.b64  	%rd7783, %rd7782, %rd7780;
	add.s64 	%rd7784, %rd7783, %rd7779;
	add.s64 	%rd7785, %rd7784, %rd7773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11382,%dummy}, %rd7724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11383}, %rd7724;
	}
	shf.r.wrap.b32 	%r11384, %r11383, %r11382, 19;
	shf.r.wrap.b32 	%r11385, %r11382, %r11383, 19;
	mov.b64 	%rd7786, {%r11385, %r11384};
	shf.l.wrap.b32 	%r11386, %r11382, %r11383, 3;
	shf.l.wrap.b32 	%r11387, %r11383, %r11382, 3;
	mov.b64 	%rd7787, {%r11387, %r11386};
	xor.b64  	%rd7788, %rd7786, %rd7787;
	shr.u64 	%rd7789, %rd7724, 6;
	xor.b64  	%rd7790, %rd7788, %rd7789;
	shf.r.wrap.b32 	%r11388, %r11077, %r11076, 1;
	shf.r.wrap.b32 	%r11389, %r11076, %r11077, 1;
	mov.b64 	%rd7791, {%r11389, %r11388};
	shf.r.wrap.b32 	%r11390, %r11077, %r11076, 8;
	shf.r.wrap.b32 	%r11391, %r11076, %r11077, 8;
	mov.b64 	%rd7792, {%r11391, %r11390};
	xor.b64  	%rd7793, %rd7791, %rd7792;
	shr.u64 	%rd7794, %rd7300, 7;
	xor.b64  	%rd7795, %rd7793, %rd7794;
	add.s64 	%rd7796, %rd7790, %rd7270;
	add.s64 	%rd7797, %rd7796, %rd7547;
	add.s64 	%rd7798, %rd7797, %rd7795;
	add.s64 	%rd7799, %rd7798, %rd7663;
	xor.b64  	%rd7800, %rd7737, %rd7700;
	and.b64  	%rd7801, %rd7774, %rd7800;
	xor.b64  	%rd7802, %rd7801, %rd7700;
	add.s64 	%rd7803, %rd7799, %rd7802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11392,%dummy}, %rd7774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11393}, %rd7774;
	}
	shf.r.wrap.b32 	%r11394, %r11393, %r11392, 14;
	shf.r.wrap.b32 	%r11395, %r11392, %r11393, 14;
	mov.b64 	%rd7804, {%r11395, %r11394};
	shf.r.wrap.b32 	%r11396, %r11393, %r11392, 18;
	shf.r.wrap.b32 	%r11397, %r11392, %r11393, 18;
	mov.b64 	%rd7805, {%r11397, %r11396};
	xor.b64  	%rd7806, %rd7804, %rd7805;
	shf.l.wrap.b32 	%r11398, %r11392, %r11393, 23;
	shf.l.wrap.b32 	%r11399, %r11393, %r11392, 23;
	mov.b64 	%rd7807, {%r11399, %r11398};
	xor.b64  	%rd7808, %rd7806, %rd7807;
	add.s64 	%rd7809, %rd7803, %rd7808;
	add.s64 	%rd7810, %rd7809, 5996557281743188959;
	add.s64 	%rd7811, %rd7810, %rd7674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11400,%dummy}, %rd7785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11401}, %rd7785;
	}
	shf.r.wrap.b32 	%r11402, %r11401, %r11400, 28;
	shf.r.wrap.b32 	%r11403, %r11400, %r11401, 28;
	mov.b64 	%rd7812, {%r11403, %r11402};
	shf.l.wrap.b32 	%r11404, %r11400, %r11401, 30;
	shf.l.wrap.b32 	%r11405, %r11401, %r11400, 30;
	mov.b64 	%rd7813, {%r11405, %r11404};
	xor.b64  	%rd7814, %rd7812, %rd7813;
	shf.l.wrap.b32 	%r11406, %r11400, %r11401, 25;
	shf.l.wrap.b32 	%r11407, %r11401, %r11400, 25;
	mov.b64 	%rd7815, {%r11407, %r11406};
	xor.b64  	%rd7816, %rd7814, %rd7815;
	and.b64  	%rd7817, %rd7785, %rd7748;
	or.b64  	%rd7818, %rd7785, %rd7748;
	and.b64  	%rd7819, %rd7818, %rd7711;
	or.b64  	%rd7820, %rd7819, %rd7817;
	add.s64 	%rd7821, %rd7820, %rd7816;
	add.s64 	%rd7822, %rd7821, %rd7810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11408,%dummy}, %rd7761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11409}, %rd7761;
	}
	shf.r.wrap.b32 	%r11410, %r11409, %r11408, 19;
	shf.r.wrap.b32 	%r11411, %r11408, %r11409, 19;
	mov.b64 	%rd7823, {%r11411, %r11410};
	shf.l.wrap.b32 	%r11412, %r11408, %r11409, 3;
	shf.l.wrap.b32 	%r11413, %r11409, %r11408, 3;
	mov.b64 	%rd7824, {%r11413, %r11412};
	xor.b64  	%rd7825, %rd7823, %rd7824;
	shr.u64 	%rd7826, %rd7761, 6;
	xor.b64  	%rd7827, %rd7825, %rd7826;
	shf.r.wrap.b32 	%r11414, %r11099, %r11098, 1;
	shf.r.wrap.b32 	%r11415, %r11098, %r11099, 1;
	mov.b64 	%rd7828, {%r11415, %r11414};
	shf.r.wrap.b32 	%r11416, %r11099, %r11098, 8;
	shf.r.wrap.b32 	%r11417, %r11098, %r11099, 8;
	mov.b64 	%rd7829, {%r11417, %r11416};
	xor.b64  	%rd7830, %rd7828, %rd7829;
	shr.u64 	%rd7831, %rd7330, 7;
	xor.b64  	%rd7832, %rd7830, %rd7831;
	add.s64 	%rd7833, %rd7827, %rd7300;
	add.s64 	%rd7834, %rd7833, %rd7578;
	add.s64 	%rd7835, %rd7834, %rd7832;
	add.s64 	%rd7836, %rd7835, %rd7700;
	xor.b64  	%rd7837, %rd7774, %rd7737;
	and.b64  	%rd7838, %rd7811, %rd7837;
	xor.b64  	%rd7839, %rd7838, %rd7737;
	add.s64 	%rd7840, %rd7836, %rd7839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11418,%dummy}, %rd7811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11419}, %rd7811;
	}
	shf.r.wrap.b32 	%r11420, %r11419, %r11418, 14;
	shf.r.wrap.b32 	%r11421, %r11418, %r11419, 14;
	mov.b64 	%rd7841, {%r11421, %r11420};
	shf.r.wrap.b32 	%r11422, %r11419, %r11418, 18;
	shf.r.wrap.b32 	%r11423, %r11418, %r11419, 18;
	mov.b64 	%rd7842, {%r11423, %r11422};
	xor.b64  	%rd7843, %rd7841, %rd7842;
	shf.l.wrap.b32 	%r11424, %r11418, %r11419, 23;
	shf.l.wrap.b32 	%r11425, %r11419, %r11418, 23;
	mov.b64 	%rd7844, {%r11425, %r11424};
	xor.b64  	%rd7845, %rd7843, %rd7844;
	add.s64 	%rd7846, %rd7840, %rd7845;
	add.s64 	%rd7847, %rd7846, 7280758554555802590;
	add.s64 	%rd7848, %rd7847, %rd7711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11426,%dummy}, %rd7822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11427}, %rd7822;
	}
	shf.r.wrap.b32 	%r11428, %r11427, %r11426, 28;
	shf.r.wrap.b32 	%r11429, %r11426, %r11427, 28;
	mov.b64 	%rd7849, {%r11429, %r11428};
	shf.l.wrap.b32 	%r11430, %r11426, %r11427, 30;
	shf.l.wrap.b32 	%r11431, %r11427, %r11426, 30;
	mov.b64 	%rd7850, {%r11431, %r11430};
	xor.b64  	%rd7851, %rd7849, %rd7850;
	shf.l.wrap.b32 	%r11432, %r11426, %r11427, 25;
	shf.l.wrap.b32 	%r11433, %r11427, %r11426, 25;
	mov.b64 	%rd7852, {%r11433, %r11432};
	xor.b64  	%rd7853, %rd7851, %rd7852;
	and.b64  	%rd7854, %rd7822, %rd7785;
	or.b64  	%rd7855, %rd7822, %rd7785;
	and.b64  	%rd7856, %rd7855, %rd7748;
	or.b64  	%rd7857, %rd7856, %rd7854;
	add.s64 	%rd7858, %rd7857, %rd7853;
	add.s64 	%rd7859, %rd7858, %rd7847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11434,%dummy}, %rd7798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11435}, %rd7798;
	}
	shf.r.wrap.b32 	%r11436, %r11435, %r11434, 19;
	shf.r.wrap.b32 	%r11437, %r11434, %r11435, 19;
	mov.b64 	%rd7860, {%r11437, %r11436};
	shf.l.wrap.b32 	%r11438, %r11434, %r11435, 3;
	shf.l.wrap.b32 	%r11439, %r11435, %r11434, 3;
	mov.b64 	%rd7861, {%r11439, %r11438};
	xor.b64  	%rd7862, %rd7860, %rd7861;
	shr.u64 	%rd7863, %rd7798, 6;
	xor.b64  	%rd7864, %rd7862, %rd7863;
	shf.r.wrap.b32 	%r11440, %r11121, %r11120, 1;
	shf.r.wrap.b32 	%r11441, %r11120, %r11121, 1;
	mov.b64 	%rd7865, {%r11441, %r11440};
	shf.r.wrap.b32 	%r11442, %r11121, %r11120, 8;
	shf.r.wrap.b32 	%r11443, %r11120, %r11121, 8;
	mov.b64 	%rd7866, {%r11443, %r11442};
	xor.b64  	%rd7867, %rd7865, %rd7866;
	shr.u64 	%rd7868, %rd7361, 7;
	xor.b64  	%rd7869, %rd7867, %rd7868;
	add.s64 	%rd7870, %rd7864, %rd7330;
	add.s64 	%rd7871, %rd7870, %rd7613;
	add.s64 	%rd7872, %rd7871, %rd7869;
	add.s64 	%rd7873, %rd7872, %rd7737;
	xor.b64  	%rd7874, %rd7811, %rd7774;
	and.b64  	%rd7875, %rd7848, %rd7874;
	xor.b64  	%rd7876, %rd7875, %rd7774;
	add.s64 	%rd7877, %rd7873, %rd7876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11444,%dummy}, %rd7848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11445}, %rd7848;
	}
	shf.r.wrap.b32 	%r11446, %r11445, %r11444, 14;
	shf.r.wrap.b32 	%r11447, %r11444, %r11445, 14;
	mov.b64 	%rd7878, {%r11447, %r11446};
	shf.r.wrap.b32 	%r11448, %r11445, %r11444, 18;
	shf.r.wrap.b32 	%r11449, %r11444, %r11445, 18;
	mov.b64 	%rd7879, {%r11449, %r11448};
	xor.b64  	%rd7880, %rd7878, %rd7879;
	shf.l.wrap.b32 	%r11450, %r11444, %r11445, 23;
	shf.l.wrap.b32 	%r11451, %r11445, %r11444, 23;
	mov.b64 	%rd7881, {%r11451, %r11450};
	xor.b64  	%rd7882, %rd7880, %rd7881;
	add.s64 	%rd7883, %rd7877, %rd7882;
	add.s64 	%rd7884, %rd7883, 8532644243296465576;
	add.s64 	%rd7885, %rd7884, %rd7748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11452,%dummy}, %rd7859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11453}, %rd7859;
	}
	shf.r.wrap.b32 	%r11454, %r11453, %r11452, 28;
	shf.r.wrap.b32 	%r11455, %r11452, %r11453, 28;
	mov.b64 	%rd7886, {%r11455, %r11454};
	shf.l.wrap.b32 	%r11456, %r11452, %r11453, 30;
	shf.l.wrap.b32 	%r11457, %r11453, %r11452, 30;
	mov.b64 	%rd7887, {%r11457, %r11456};
	xor.b64  	%rd7888, %rd7886, %rd7887;
	shf.l.wrap.b32 	%r11458, %r11452, %r11453, 25;
	shf.l.wrap.b32 	%r11459, %r11453, %r11452, 25;
	mov.b64 	%rd7889, {%r11459, %r11458};
	xor.b64  	%rd7890, %rd7888, %rd7889;
	and.b64  	%rd7891, %rd7859, %rd7822;
	or.b64  	%rd7892, %rd7859, %rd7822;
	and.b64  	%rd7893, %rd7892, %rd7785;
	or.b64  	%rd7894, %rd7893, %rd7891;
	add.s64 	%rd7895, %rd7894, %rd7890;
	add.s64 	%rd7896, %rd7895, %rd7884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11460,%dummy}, %rd7835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11461}, %rd7835;
	}
	shf.r.wrap.b32 	%r11462, %r11461, %r11460, 19;
	shf.r.wrap.b32 	%r11463, %r11460, %r11461, 19;
	mov.b64 	%rd7897, {%r11463, %r11462};
	shf.l.wrap.b32 	%r11464, %r11460, %r11461, 3;
	shf.l.wrap.b32 	%r11465, %r11461, %r11460, 3;
	mov.b64 	%rd7898, {%r11465, %r11464};
	xor.b64  	%rd7899, %rd7897, %rd7898;
	shr.u64 	%rd7900, %rd7835, 6;
	xor.b64  	%rd7901, %rd7899, %rd7900;
	shf.r.wrap.b32 	%r11466, %r11143, %r11142, 1;
	shf.r.wrap.b32 	%r11467, %r11142, %r11143, 1;
	mov.b64 	%rd7902, {%r11467, %r11466};
	shf.r.wrap.b32 	%r11468, %r11143, %r11142, 8;
	shf.r.wrap.b32 	%r11469, %r11142, %r11143, 8;
	mov.b64 	%rd7903, {%r11469, %r11468};
	xor.b64  	%rd7904, %rd7902, %rd7903;
	shr.u64 	%rd7905, %rd7392, 7;
	xor.b64  	%rd7906, %rd7904, %rd7905;
	add.s64 	%rd7907, %rd7901, %rd7361;
	add.s64 	%rd7908, %rd7907, %rd7650;
	add.s64 	%rd7909, %rd7908, %rd7906;
	add.s64 	%rd7910, %rd7909, %rd7774;
	xor.b64  	%rd7911, %rd7848, %rd7811;
	and.b64  	%rd7912, %rd7885, %rd7911;
	xor.b64  	%rd7913, %rd7912, %rd7811;
	add.s64 	%rd7914, %rd7910, %rd7913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11470,%dummy}, %rd7885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11471}, %rd7885;
	}
	shf.r.wrap.b32 	%r11472, %r11471, %r11470, 14;
	shf.r.wrap.b32 	%r11473, %r11470, %r11471, 14;
	mov.b64 	%rd7915, {%r11473, %r11472};
	shf.r.wrap.b32 	%r11474, %r11471, %r11470, 18;
	shf.r.wrap.b32 	%r11475, %r11470, %r11471, 18;
	mov.b64 	%rd7916, {%r11475, %r11474};
	xor.b64  	%rd7917, %rd7915, %rd7916;
	shf.l.wrap.b32 	%r11476, %r11470, %r11471, 23;
	shf.l.wrap.b32 	%r11477, %r11471, %r11470, 23;
	mov.b64 	%rd7918, {%r11477, %r11476};
	xor.b64  	%rd7919, %rd7917, %rd7918;
	add.s64 	%rd7920, %rd7914, %rd7919;
	add.s64 	%rd7921, %rd7920, -9096487096722542874;
	add.s64 	%rd7922, %rd7921, %rd7785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11478,%dummy}, %rd7896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11479}, %rd7896;
	}
	shf.r.wrap.b32 	%r11480, %r11479, %r11478, 28;
	shf.r.wrap.b32 	%r11481, %r11478, %r11479, 28;
	mov.b64 	%rd7923, {%r11481, %r11480};
	shf.l.wrap.b32 	%r11482, %r11478, %r11479, 30;
	shf.l.wrap.b32 	%r11483, %r11479, %r11478, 30;
	mov.b64 	%rd7924, {%r11483, %r11482};
	xor.b64  	%rd7925, %rd7923, %rd7924;
	shf.l.wrap.b32 	%r11484, %r11478, %r11479, 25;
	shf.l.wrap.b32 	%r11485, %r11479, %r11478, 25;
	mov.b64 	%rd7926, {%r11485, %r11484};
	xor.b64  	%rd7927, %rd7925, %rd7926;
	and.b64  	%rd7928, %rd7896, %rd7859;
	or.b64  	%rd7929, %rd7896, %rd7859;
	and.b64  	%rd7930, %rd7929, %rd7822;
	or.b64  	%rd7931, %rd7930, %rd7928;
	add.s64 	%rd7932, %rd7931, %rd7927;
	add.s64 	%rd7933, %rd7932, %rd7921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11486,%dummy}, %rd7872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11487}, %rd7872;
	}
	shf.r.wrap.b32 	%r11488, %r11487, %r11486, 19;
	shf.r.wrap.b32 	%r11489, %r11486, %r11487, 19;
	mov.b64 	%rd7934, {%r11489, %r11488};
	shf.l.wrap.b32 	%r11490, %r11486, %r11487, 3;
	shf.l.wrap.b32 	%r11491, %r11487, %r11486, 3;
	mov.b64 	%rd7935, {%r11491, %r11490};
	xor.b64  	%rd7936, %rd7934, %rd7935;
	shr.u64 	%rd7937, %rd7872, 6;
	xor.b64  	%rd7938, %rd7936, %rd7937;
	shf.r.wrap.b32 	%r11492, %r11165, %r11164, 1;
	shf.r.wrap.b32 	%r11493, %r11164, %r11165, 1;
	mov.b64 	%rd7939, {%r11493, %r11492};
	shf.r.wrap.b32 	%r11494, %r11165, %r11164, 8;
	shf.r.wrap.b32 	%r11495, %r11164, %r11165, 8;
	mov.b64 	%rd7940, {%r11495, %r11494};
	xor.b64  	%rd7941, %rd7939, %rd7940;
	shr.u64 	%rd7942, %rd7423, 7;
	xor.b64  	%rd7943, %rd7941, %rd7942;
	add.s64 	%rd7944, %rd7938, %rd7392;
	add.s64 	%rd7945, %rd7944, %rd7687;
	add.s64 	%rd7946, %rd7945, %rd7943;
	add.s64 	%rd7947, %rd7946, %rd7811;
	xor.b64  	%rd7948, %rd7885, %rd7848;
	and.b64  	%rd7949, %rd7922, %rd7948;
	xor.b64  	%rd7950, %rd7949, %rd7848;
	add.s64 	%rd7951, %rd7947, %rd7950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11496,%dummy}, %rd7922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11497}, %rd7922;
	}
	shf.r.wrap.b32 	%r11498, %r11497, %r11496, 14;
	shf.r.wrap.b32 	%r11499, %r11496, %r11497, 14;
	mov.b64 	%rd7952, {%r11499, %r11498};
	shf.r.wrap.b32 	%r11500, %r11497, %r11496, 18;
	shf.r.wrap.b32 	%r11501, %r11496, %r11497, 18;
	mov.b64 	%rd7953, {%r11501, %r11500};
	xor.b64  	%rd7954, %rd7952, %rd7953;
	shf.l.wrap.b32 	%r11502, %r11496, %r11497, 23;
	shf.l.wrap.b32 	%r11503, %r11497, %r11496, 23;
	mov.b64 	%rd7955, {%r11503, %r11502};
	xor.b64  	%rd7956, %rd7954, %rd7955;
	add.s64 	%rd7957, %rd7951, %rd7956;
	add.s64 	%rd7958, %rd7957, -7894198246740708037;
	add.s64 	%rd7959, %rd7958, %rd7822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11504,%dummy}, %rd7933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11505}, %rd7933;
	}
	shf.r.wrap.b32 	%r11506, %r11505, %r11504, 28;
	shf.r.wrap.b32 	%r11507, %r11504, %r11505, 28;
	mov.b64 	%rd7960, {%r11507, %r11506};
	shf.l.wrap.b32 	%r11508, %r11504, %r11505, 30;
	shf.l.wrap.b32 	%r11509, %r11505, %r11504, 30;
	mov.b64 	%rd7961, {%r11509, %r11508};
	xor.b64  	%rd7962, %rd7960, %rd7961;
	shf.l.wrap.b32 	%r11510, %r11504, %r11505, 25;
	shf.l.wrap.b32 	%r11511, %r11505, %r11504, 25;
	mov.b64 	%rd7963, {%r11511, %r11510};
	xor.b64  	%rd7964, %rd7962, %rd7963;
	and.b64  	%rd7965, %rd7933, %rd7896;
	or.b64  	%rd7966, %rd7933, %rd7896;
	and.b64  	%rd7967, %rd7966, %rd7859;
	or.b64  	%rd7968, %rd7967, %rd7965;
	add.s64 	%rd7969, %rd7968, %rd7964;
	add.s64 	%rd7970, %rd7969, %rd7958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11512,%dummy}, %rd7909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11513}, %rd7909;
	}
	shf.r.wrap.b32 	%r11514, %r11513, %r11512, 19;
	shf.r.wrap.b32 	%r11515, %r11512, %r11513, 19;
	mov.b64 	%rd7971, {%r11515, %r11514};
	shf.l.wrap.b32 	%r11516, %r11512, %r11513, 3;
	shf.l.wrap.b32 	%r11517, %r11513, %r11512, 3;
	mov.b64 	%rd7972, {%r11517, %r11516};
	xor.b64  	%rd7973, %rd7971, %rd7972;
	shr.u64 	%rd7974, %rd7909, 6;
	xor.b64  	%rd7975, %rd7973, %rd7974;
	shf.r.wrap.b32 	%r11518, %r11187, %r11186, 1;
	shf.r.wrap.b32 	%r11519, %r11186, %r11187, 1;
	mov.b64 	%rd7976, {%r11519, %r11518};
	shf.r.wrap.b32 	%r11520, %r11187, %r11186, 8;
	shf.r.wrap.b32 	%r11521, %r11186, %r11187, 8;
	mov.b64 	%rd7977, {%r11521, %r11520};
	xor.b64  	%rd7978, %rd7976, %rd7977;
	shr.u64 	%rd7979, %rd7454, 7;
	xor.b64  	%rd7980, %rd7978, %rd7979;
	add.s64 	%rd7981, %rd7975, %rd7423;
	add.s64 	%rd7982, %rd7981, %rd7724;
	add.s64 	%rd7983, %rd7982, %rd7980;
	add.s64 	%rd7984, %rd7983, %rd7848;
	xor.b64  	%rd7985, %rd7922, %rd7885;
	and.b64  	%rd7986, %rd7959, %rd7985;
	xor.b64  	%rd7987, %rd7986, %rd7885;
	add.s64 	%rd7988, %rd7984, %rd7987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11522,%dummy}, %rd7959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11523}, %rd7959;
	}
	shf.r.wrap.b32 	%r11524, %r11523, %r11522, 14;
	shf.r.wrap.b32 	%r11525, %r11522, %r11523, 14;
	mov.b64 	%rd7989, {%r11525, %r11524};
	shf.r.wrap.b32 	%r11526, %r11523, %r11522, 18;
	shf.r.wrap.b32 	%r11527, %r11522, %r11523, 18;
	mov.b64 	%rd7990, {%r11527, %r11526};
	xor.b64  	%rd7991, %rd7989, %rd7990;
	shf.l.wrap.b32 	%r11528, %r11522, %r11523, 23;
	shf.l.wrap.b32 	%r11529, %r11523, %r11522, 23;
	mov.b64 	%rd7992, {%r11529, %r11528};
	xor.b64  	%rd7993, %rd7991, %rd7992;
	add.s64 	%rd7994, %rd7988, %rd7993;
	add.s64 	%rd7995, %rd7994, -6719396339535248540;
	add.s64 	%rd7996, %rd7995, %rd7859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11530,%dummy}, %rd7970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11531}, %rd7970;
	}
	shf.r.wrap.b32 	%r11532, %r11531, %r11530, 28;
	shf.r.wrap.b32 	%r11533, %r11530, %r11531, 28;
	mov.b64 	%rd7997, {%r11533, %r11532};
	shf.l.wrap.b32 	%r11534, %r11530, %r11531, 30;
	shf.l.wrap.b32 	%r11535, %r11531, %r11530, 30;
	mov.b64 	%rd7998, {%r11535, %r11534};
	xor.b64  	%rd7999, %rd7997, %rd7998;
	shf.l.wrap.b32 	%r11536, %r11530, %r11531, 25;
	shf.l.wrap.b32 	%r11537, %r11531, %r11530, 25;
	mov.b64 	%rd8000, {%r11537, %r11536};
	xor.b64  	%rd8001, %rd7999, %rd8000;
	and.b64  	%rd8002, %rd7970, %rd7933;
	or.b64  	%rd8003, %rd7970, %rd7933;
	and.b64  	%rd8004, %rd8003, %rd7896;
	or.b64  	%rd8005, %rd8004, %rd8002;
	add.s64 	%rd8006, %rd8005, %rd8001;
	add.s64 	%rd8007, %rd8006, %rd7995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11538,%dummy}, %rd7946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11539}, %rd7946;
	}
	shf.r.wrap.b32 	%r11540, %r11539, %r11538, 19;
	shf.r.wrap.b32 	%r11541, %r11538, %r11539, 19;
	mov.b64 	%rd8008, {%r11541, %r11540};
	shf.l.wrap.b32 	%r11542, %r11538, %r11539, 3;
	shf.l.wrap.b32 	%r11543, %r11539, %r11538, 3;
	mov.b64 	%rd8009, {%r11543, %r11542};
	xor.b64  	%rd8010, %rd8008, %rd8009;
	shr.u64 	%rd8011, %rd7946, 6;
	xor.b64  	%rd8012, %rd8010, %rd8011;
	shf.r.wrap.b32 	%r11544, %r11209, %r11208, 1;
	shf.r.wrap.b32 	%r11545, %r11208, %r11209, 1;
	mov.b64 	%rd8013, {%r11545, %r11544};
	shf.r.wrap.b32 	%r11546, %r11209, %r11208, 8;
	shf.r.wrap.b32 	%r11547, %r11208, %r11209, 8;
	mov.b64 	%rd8014, {%r11547, %r11546};
	xor.b64  	%rd8015, %rd8013, %rd8014;
	shr.u64 	%rd8016, %rd7485, 7;
	xor.b64  	%rd8017, %rd8015, %rd8016;
	add.s64 	%rd8018, %rd8012, %rd7454;
	add.s64 	%rd8019, %rd8018, %rd7761;
	add.s64 	%rd8020, %rd8019, %rd8017;
	add.s64 	%rd8021, %rd8020, %rd7885;
	xor.b64  	%rd8022, %rd7959, %rd7922;
	and.b64  	%rd8023, %rd7996, %rd8022;
	xor.b64  	%rd8024, %rd8023, %rd7922;
	add.s64 	%rd8025, %rd8021, %rd8024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11548,%dummy}, %rd7996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11549}, %rd7996;
	}
	shf.r.wrap.b32 	%r11550, %r11549, %r11548, 14;
	shf.r.wrap.b32 	%r11551, %r11548, %r11549, 14;
	mov.b64 	%rd8026, {%r11551, %r11550};
	shf.r.wrap.b32 	%r11552, %r11549, %r11548, 18;
	shf.r.wrap.b32 	%r11553, %r11548, %r11549, 18;
	mov.b64 	%rd8027, {%r11553, %r11552};
	xor.b64  	%rd8028, %rd8026, %rd8027;
	shf.l.wrap.b32 	%r11554, %r11548, %r11549, 23;
	shf.l.wrap.b32 	%r11555, %r11549, %r11548, 23;
	mov.b64 	%rd8029, {%r11555, %r11554};
	xor.b64  	%rd8030, %rd8028, %rd8029;
	add.s64 	%rd8031, %rd8025, %rd8030;
	add.s64 	%rd8032, %rd8031, -6333637450476146687;
	add.s64 	%rd8033, %rd8032, %rd7896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11556,%dummy}, %rd8007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11557}, %rd8007;
	}
	shf.r.wrap.b32 	%r11558, %r11557, %r11556, 28;
	shf.r.wrap.b32 	%r11559, %r11556, %r11557, 28;
	mov.b64 	%rd8034, {%r11559, %r11558};
	shf.l.wrap.b32 	%r11560, %r11556, %r11557, 30;
	shf.l.wrap.b32 	%r11561, %r11557, %r11556, 30;
	mov.b64 	%rd8035, {%r11561, %r11560};
	xor.b64  	%rd8036, %rd8034, %rd8035;
	shf.l.wrap.b32 	%r11562, %r11556, %r11557, 25;
	shf.l.wrap.b32 	%r11563, %r11557, %r11556, 25;
	mov.b64 	%rd8037, {%r11563, %r11562};
	xor.b64  	%rd8038, %rd8036, %rd8037;
	and.b64  	%rd8039, %rd8007, %rd7970;
	or.b64  	%rd8040, %rd8007, %rd7970;
	and.b64  	%rd8041, %rd8040, %rd7933;
	or.b64  	%rd8042, %rd8041, %rd8039;
	add.s64 	%rd8043, %rd8042, %rd8038;
	add.s64 	%rd8044, %rd8043, %rd8032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11564,%dummy}, %rd7983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11565}, %rd7983;
	}
	shf.r.wrap.b32 	%r11566, %r11565, %r11564, 19;
	shf.r.wrap.b32 	%r11567, %r11564, %r11565, 19;
	mov.b64 	%rd8045, {%r11567, %r11566};
	shf.l.wrap.b32 	%r11568, %r11564, %r11565, 3;
	shf.l.wrap.b32 	%r11569, %r11565, %r11564, 3;
	mov.b64 	%rd8046, {%r11569, %r11568};
	xor.b64  	%rd8047, %rd8045, %rd8046;
	shr.u64 	%rd8048, %rd7983, 6;
	xor.b64  	%rd8049, %rd8047, %rd8048;
	shf.r.wrap.b32 	%r11570, %r11231, %r11230, 1;
	shf.r.wrap.b32 	%r11571, %r11230, %r11231, 1;
	mov.b64 	%rd8050, {%r11571, %r11570};
	shf.r.wrap.b32 	%r11572, %r11231, %r11230, 8;
	shf.r.wrap.b32 	%r11573, %r11230, %r11231, 8;
	mov.b64 	%rd8051, {%r11573, %r11572};
	xor.b64  	%rd8052, %rd8050, %rd8051;
	shr.u64 	%rd8053, %rd7516, 7;
	xor.b64  	%rd8054, %rd8052, %rd8053;
	add.s64 	%rd8055, %rd8049, %rd7485;
	add.s64 	%rd8056, %rd8055, %rd7798;
	add.s64 	%rd8057, %rd8056, %rd8054;
	add.s64 	%rd8058, %rd8057, %rd7922;
	xor.b64  	%rd8059, %rd7996, %rd7959;
	and.b64  	%rd8060, %rd8033, %rd8059;
	xor.b64  	%rd8061, %rd8060, %rd7959;
	add.s64 	%rd8062, %rd8058, %rd8061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11574,%dummy}, %rd8033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11575}, %rd8033;
	}
	shf.r.wrap.b32 	%r11576, %r11575, %r11574, 14;
	shf.r.wrap.b32 	%r11577, %r11574, %r11575, 14;
	mov.b64 	%rd8063, {%r11577, %r11576};
	shf.r.wrap.b32 	%r11578, %r11575, %r11574, 18;
	shf.r.wrap.b32 	%r11579, %r11574, %r11575, 18;
	mov.b64 	%rd8064, {%r11579, %r11578};
	xor.b64  	%rd8065, %rd8063, %rd8064;
	shf.l.wrap.b32 	%r11580, %r11574, %r11575, 23;
	shf.l.wrap.b32 	%r11581, %r11575, %r11574, 23;
	mov.b64 	%rd8066, {%r11581, %r11580};
	xor.b64  	%rd8067, %rd8065, %rd8066;
	add.s64 	%rd8068, %rd8062, %rd8067;
	add.s64 	%rd8069, %rd8068, -4446306890439682159;
	add.s64 	%rd8070, %rd8069, %rd7933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11582,%dummy}, %rd8044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11583}, %rd8044;
	}
	shf.r.wrap.b32 	%r11584, %r11583, %r11582, 28;
	shf.r.wrap.b32 	%r11585, %r11582, %r11583, 28;
	mov.b64 	%rd8071, {%r11585, %r11584};
	shf.l.wrap.b32 	%r11586, %r11582, %r11583, 30;
	shf.l.wrap.b32 	%r11587, %r11583, %r11582, 30;
	mov.b64 	%rd8072, {%r11587, %r11586};
	xor.b64  	%rd8073, %rd8071, %rd8072;
	shf.l.wrap.b32 	%r11588, %r11582, %r11583, 25;
	shf.l.wrap.b32 	%r11589, %r11583, %r11582, 25;
	mov.b64 	%rd8074, {%r11589, %r11588};
	xor.b64  	%rd8075, %rd8073, %rd8074;
	and.b64  	%rd8076, %rd8044, %rd8007;
	or.b64  	%rd8077, %rd8044, %rd8007;
	and.b64  	%rd8078, %rd8077, %rd7970;
	or.b64  	%rd8079, %rd8078, %rd8076;
	add.s64 	%rd8080, %rd8079, %rd8075;
	add.s64 	%rd8081, %rd8080, %rd8069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11590,%dummy}, %rd8020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11591}, %rd8020;
	}
	shf.r.wrap.b32 	%r11592, %r11591, %r11590, 19;
	shf.r.wrap.b32 	%r11593, %r11590, %r11591, 19;
	mov.b64 	%rd8082, {%r11593, %r11592};
	shf.l.wrap.b32 	%r11594, %r11590, %r11591, 3;
	shf.l.wrap.b32 	%r11595, %r11591, %r11590, 3;
	mov.b64 	%rd8083, {%r11595, %r11594};
	xor.b64  	%rd8084, %rd8082, %rd8083;
	shr.u64 	%rd8085, %rd8020, 6;
	xor.b64  	%rd8086, %rd8084, %rd8085;
	shf.r.wrap.b32 	%r11596, %r11253, %r11252, 1;
	shf.r.wrap.b32 	%r11597, %r11252, %r11253, 1;
	mov.b64 	%rd8087, {%r11597, %r11596};
	shf.r.wrap.b32 	%r11598, %r11253, %r11252, 8;
	shf.r.wrap.b32 	%r11599, %r11252, %r11253, 8;
	mov.b64 	%rd8088, {%r11599, %r11598};
	xor.b64  	%rd8089, %rd8087, %rd8088;
	shr.u64 	%rd8090, %rd7547, 7;
	xor.b64  	%rd8091, %rd8089, %rd8090;
	add.s64 	%rd8092, %rd8086, %rd7516;
	add.s64 	%rd8093, %rd8092, %rd7835;
	add.s64 	%rd8094, %rd8093, %rd8091;
	add.s64 	%rd8095, %rd8094, %rd7959;
	xor.b64  	%rd8096, %rd8033, %rd7996;
	and.b64  	%rd8097, %rd8070, %rd8096;
	xor.b64  	%rd8098, %rd8097, %rd7996;
	add.s64 	%rd8099, %rd8095, %rd8098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11600,%dummy}, %rd8070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11601}, %rd8070;
	}
	shf.r.wrap.b32 	%r11602, %r11601, %r11600, 14;
	shf.r.wrap.b32 	%r11603, %r11600, %r11601, 14;
	mov.b64 	%rd8100, {%r11603, %r11602};
	shf.r.wrap.b32 	%r11604, %r11601, %r11600, 18;
	shf.r.wrap.b32 	%r11605, %r11600, %r11601, 18;
	mov.b64 	%rd8101, {%r11605, %r11604};
	xor.b64  	%rd8102, %rd8100, %rd8101;
	shf.l.wrap.b32 	%r11606, %r11600, %r11601, 23;
	shf.l.wrap.b32 	%r11607, %r11601, %r11600, 23;
	mov.b64 	%rd8103, {%r11607, %r11606};
	xor.b64  	%rd8104, %rd8102, %rd8103;
	add.s64 	%rd8105, %rd8099, %rd8104;
	add.s64 	%rd8106, %rd8105, -4076793802049405392;
	add.s64 	%rd8107, %rd8106, %rd7970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11608,%dummy}, %rd8081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11609}, %rd8081;
	}
	shf.r.wrap.b32 	%r11610, %r11609, %r11608, 28;
	shf.r.wrap.b32 	%r11611, %r11608, %r11609, 28;
	mov.b64 	%rd8108, {%r11611, %r11610};
	shf.l.wrap.b32 	%r11612, %r11608, %r11609, 30;
	shf.l.wrap.b32 	%r11613, %r11609, %r11608, 30;
	mov.b64 	%rd8109, {%r11613, %r11612};
	xor.b64  	%rd8110, %rd8108, %rd8109;
	shf.l.wrap.b32 	%r11614, %r11608, %r11609, 25;
	shf.l.wrap.b32 	%r11615, %r11609, %r11608, 25;
	mov.b64 	%rd8111, {%r11615, %r11614};
	xor.b64  	%rd8112, %rd8110, %rd8111;
	and.b64  	%rd8113, %rd8081, %rd8044;
	or.b64  	%rd8114, %rd8081, %rd8044;
	and.b64  	%rd8115, %rd8114, %rd8007;
	or.b64  	%rd8116, %rd8115, %rd8113;
	add.s64 	%rd8117, %rd8116, %rd8112;
	add.s64 	%rd8118, %rd8117, %rd8106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11616,%dummy}, %rd8057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11617}, %rd8057;
	}
	shf.r.wrap.b32 	%r11618, %r11617, %r11616, 19;
	shf.r.wrap.b32 	%r11619, %r11616, %r11617, 19;
	mov.b64 	%rd8119, {%r11619, %r11618};
	shf.l.wrap.b32 	%r11620, %r11616, %r11617, 3;
	shf.l.wrap.b32 	%r11621, %r11617, %r11616, 3;
	mov.b64 	%rd8120, {%r11621, %r11620};
	xor.b64  	%rd8121, %rd8119, %rd8120;
	shr.u64 	%rd8122, %rd8057, 6;
	xor.b64  	%rd8123, %rd8121, %rd8122;
	shf.r.wrap.b32 	%r11622, %r11279, %r11278, 1;
	shf.r.wrap.b32 	%r11623, %r11278, %r11279, 1;
	mov.b64 	%rd8124, {%r11623, %r11622};
	shf.r.wrap.b32 	%r11624, %r11279, %r11278, 8;
	shf.r.wrap.b32 	%r11625, %r11278, %r11279, 8;
	mov.b64 	%rd8125, {%r11625, %r11624};
	xor.b64  	%rd8126, %rd8124, %rd8125;
	shr.u64 	%rd8127, %rd7578, 7;
	xor.b64  	%rd8128, %rd8126, %rd8127;
	add.s64 	%rd8129, %rd8123, %rd7547;
	add.s64 	%rd8130, %rd8129, %rd7872;
	add.s64 	%rd8131, %rd8130, %rd8128;
	add.s64 	%rd8132, %rd8131, %rd7996;
	xor.b64  	%rd8133, %rd8070, %rd8033;
	and.b64  	%rd8134, %rd8107, %rd8133;
	xor.b64  	%rd8135, %rd8134, %rd8033;
	add.s64 	%rd8136, %rd8132, %rd8135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11626,%dummy}, %rd8107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11627}, %rd8107;
	}
	shf.r.wrap.b32 	%r11628, %r11627, %r11626, 14;
	shf.r.wrap.b32 	%r11629, %r11626, %r11627, 14;
	mov.b64 	%rd8137, {%r11629, %r11628};
	shf.r.wrap.b32 	%r11630, %r11627, %r11626, 18;
	shf.r.wrap.b32 	%r11631, %r11626, %r11627, 18;
	mov.b64 	%rd8138, {%r11631, %r11630};
	xor.b64  	%rd8139, %rd8137, %rd8138;
	shf.l.wrap.b32 	%r11632, %r11626, %r11627, 23;
	shf.l.wrap.b32 	%r11633, %r11627, %r11626, 23;
	mov.b64 	%rd8140, {%r11633, %r11632};
	xor.b64  	%rd8141, %rd8139, %rd8140;
	add.s64 	%rd8142, %rd8136, %rd8141;
	add.s64 	%rd8143, %rd8142, -3345356375505022440;
	add.s64 	%rd8144, %rd8143, %rd8007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11634,%dummy}, %rd8118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11635}, %rd8118;
	}
	shf.r.wrap.b32 	%r11636, %r11635, %r11634, 28;
	shf.r.wrap.b32 	%r11637, %r11634, %r11635, 28;
	mov.b64 	%rd8145, {%r11637, %r11636};
	shf.l.wrap.b32 	%r11638, %r11634, %r11635, 30;
	shf.l.wrap.b32 	%r11639, %r11635, %r11634, 30;
	mov.b64 	%rd8146, {%r11639, %r11638};
	xor.b64  	%rd8147, %rd8145, %rd8146;
	shf.l.wrap.b32 	%r11640, %r11634, %r11635, 25;
	shf.l.wrap.b32 	%r11641, %r11635, %r11634, 25;
	mov.b64 	%rd8148, {%r11641, %r11640};
	xor.b64  	%rd8149, %rd8147, %rd8148;
	and.b64  	%rd8150, %rd8118, %rd8081;
	or.b64  	%rd8151, %rd8118, %rd8081;
	and.b64  	%rd8152, %rd8151, %rd8044;
	or.b64  	%rd8153, %rd8152, %rd8150;
	add.s64 	%rd8154, %rd8153, %rd8149;
	add.s64 	%rd8155, %rd8154, %rd8143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11642,%dummy}, %rd8094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11643}, %rd8094;
	}
	shf.r.wrap.b32 	%r11644, %r11643, %r11642, 19;
	shf.r.wrap.b32 	%r11645, %r11642, %r11643, 19;
	mov.b64 	%rd8156, {%r11645, %r11644};
	shf.l.wrap.b32 	%r11646, %r11642, %r11643, 3;
	shf.l.wrap.b32 	%r11647, %r11643, %r11642, 3;
	mov.b64 	%rd8157, {%r11647, %r11646};
	xor.b64  	%rd8158, %rd8156, %rd8157;
	shr.u64 	%rd8159, %rd8094, 6;
	xor.b64  	%rd8160, %rd8158, %rd8159;
	shf.r.wrap.b32 	%r11648, %r11305, %r11304, 1;
	shf.r.wrap.b32 	%r11649, %r11304, %r11305, 1;
	mov.b64 	%rd8161, {%r11649, %r11648};
	shf.r.wrap.b32 	%r11650, %r11305, %r11304, 8;
	shf.r.wrap.b32 	%r11651, %r11304, %r11305, 8;
	mov.b64 	%rd8162, {%r11651, %r11650};
	xor.b64  	%rd8163, %rd8161, %rd8162;
	shr.u64 	%rd8164, %rd7613, 7;
	xor.b64  	%rd8165, %rd8163, %rd8164;
	add.s64 	%rd8166, %rd8160, %rd7578;
	add.s64 	%rd8167, %rd8166, %rd7909;
	add.s64 	%rd8168, %rd8167, %rd8165;
	add.s64 	%rd8169, %rd8168, %rd8033;
	xor.b64  	%rd8170, %rd8107, %rd8070;
	and.b64  	%rd8171, %rd8144, %rd8170;
	xor.b64  	%rd8172, %rd8171, %rd8070;
	add.s64 	%rd8173, %rd8169, %rd8172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11652,%dummy}, %rd8144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11653}, %rd8144;
	}
	shf.r.wrap.b32 	%r11654, %r11653, %r11652, 14;
	shf.r.wrap.b32 	%r11655, %r11652, %r11653, 14;
	mov.b64 	%rd8174, {%r11655, %r11654};
	shf.r.wrap.b32 	%r11656, %r11653, %r11652, 18;
	shf.r.wrap.b32 	%r11657, %r11652, %r11653, 18;
	mov.b64 	%rd8175, {%r11657, %r11656};
	xor.b64  	%rd8176, %rd8174, %rd8175;
	shf.l.wrap.b32 	%r11658, %r11652, %r11653, 23;
	shf.l.wrap.b32 	%r11659, %r11653, %r11652, 23;
	mov.b64 	%rd8177, {%r11659, %r11658};
	xor.b64  	%rd8178, %rd8176, %rd8177;
	add.s64 	%rd8179, %rd8173, %rd8178;
	add.s64 	%rd8180, %rd8179, -2983346525034927856;
	add.s64 	%rd8181, %rd8180, %rd8044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11660,%dummy}, %rd8155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11661}, %rd8155;
	}
	shf.r.wrap.b32 	%r11662, %r11661, %r11660, 28;
	shf.r.wrap.b32 	%r11663, %r11660, %r11661, 28;
	mov.b64 	%rd8182, {%r11663, %r11662};
	shf.l.wrap.b32 	%r11664, %r11660, %r11661, 30;
	shf.l.wrap.b32 	%r11665, %r11661, %r11660, 30;
	mov.b64 	%rd8183, {%r11665, %r11664};
	xor.b64  	%rd8184, %rd8182, %rd8183;
	shf.l.wrap.b32 	%r11666, %r11660, %r11661, 25;
	shf.l.wrap.b32 	%r11667, %r11661, %r11660, 25;
	mov.b64 	%rd8185, {%r11667, %r11666};
	xor.b64  	%rd8186, %rd8184, %rd8185;
	and.b64  	%rd8187, %rd8155, %rd8118;
	or.b64  	%rd8188, %rd8155, %rd8118;
	and.b64  	%rd8189, %rd8188, %rd8081;
	or.b64  	%rd8190, %rd8189, %rd8187;
	add.s64 	%rd8191, %rd8190, %rd8186;
	add.s64 	%rd8192, %rd8191, %rd8180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11668,%dummy}, %rd8131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11669}, %rd8131;
	}
	shf.r.wrap.b32 	%r11670, %r11669, %r11668, 19;
	shf.r.wrap.b32 	%r11671, %r11668, %r11669, 19;
	mov.b64 	%rd8193, {%r11671, %r11670};
	shf.l.wrap.b32 	%r11672, %r11668, %r11669, 3;
	shf.l.wrap.b32 	%r11673, %r11669, %r11668, 3;
	mov.b64 	%rd8194, {%r11673, %r11672};
	xor.b64  	%rd8195, %rd8193, %rd8194;
	shr.u64 	%rd8196, %rd8131, 6;
	xor.b64  	%rd8197, %rd8195, %rd8196;
	shf.r.wrap.b32 	%r11674, %r11331, %r11330, 1;
	shf.r.wrap.b32 	%r11675, %r11330, %r11331, 1;
	mov.b64 	%rd8198, {%r11675, %r11674};
	shf.r.wrap.b32 	%r11676, %r11331, %r11330, 8;
	shf.r.wrap.b32 	%r11677, %r11330, %r11331, 8;
	mov.b64 	%rd8199, {%r11677, %r11676};
	xor.b64  	%rd8200, %rd8198, %rd8199;
	shr.u64 	%rd8201, %rd7650, 7;
	xor.b64  	%rd8202, %rd8200, %rd8201;
	add.s64 	%rd8203, %rd8197, %rd7613;
	add.s64 	%rd8204, %rd8203, %rd7946;
	add.s64 	%rd8205, %rd8204, %rd8202;
	add.s64 	%rd8206, %rd8205, %rd8070;
	xor.b64  	%rd8207, %rd8144, %rd8107;
	and.b64  	%rd8208, %rd8181, %rd8207;
	xor.b64  	%rd8209, %rd8208, %rd8107;
	add.s64 	%rd8210, %rd8206, %rd8209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11678,%dummy}, %rd8181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11679}, %rd8181;
	}
	shf.r.wrap.b32 	%r11680, %r11679, %r11678, 14;
	shf.r.wrap.b32 	%r11681, %r11678, %r11679, 14;
	mov.b64 	%rd8211, {%r11681, %r11680};
	shf.r.wrap.b32 	%r11682, %r11679, %r11678, 18;
	shf.r.wrap.b32 	%r11683, %r11678, %r11679, 18;
	mov.b64 	%rd8212, {%r11683, %r11682};
	xor.b64  	%rd8213, %rd8211, %rd8212;
	shf.l.wrap.b32 	%r11684, %r11678, %r11679, 23;
	shf.l.wrap.b32 	%r11685, %r11679, %r11678, 23;
	mov.b64 	%rd8214, {%r11685, %r11684};
	xor.b64  	%rd8215, %rd8213, %rd8214;
	add.s64 	%rd8216, %rd8210, %rd8215;
	add.s64 	%rd8217, %rd8216, -860691631967231958;
	add.s64 	%rd8218, %rd8217, %rd8081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11686,%dummy}, %rd8192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11687}, %rd8192;
	}
	shf.r.wrap.b32 	%r11688, %r11687, %r11686, 28;
	shf.r.wrap.b32 	%r11689, %r11686, %r11687, 28;
	mov.b64 	%rd8219, {%r11689, %r11688};
	shf.l.wrap.b32 	%r11690, %r11686, %r11687, 30;
	shf.l.wrap.b32 	%r11691, %r11687, %r11686, 30;
	mov.b64 	%rd8220, {%r11691, %r11690};
	xor.b64  	%rd8221, %rd8219, %rd8220;
	shf.l.wrap.b32 	%r11692, %r11686, %r11687, 25;
	shf.l.wrap.b32 	%r11693, %r11687, %r11686, 25;
	mov.b64 	%rd8222, {%r11693, %r11692};
	xor.b64  	%rd8223, %rd8221, %rd8222;
	and.b64  	%rd8224, %rd8192, %rd8155;
	or.b64  	%rd8225, %rd8192, %rd8155;
	and.b64  	%rd8226, %rd8225, %rd8118;
	or.b64  	%rd8227, %rd8226, %rd8224;
	add.s64 	%rd8228, %rd8227, %rd8223;
	add.s64 	%rd8229, %rd8228, %rd8217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11694,%dummy}, %rd8168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11695}, %rd8168;
	}
	shf.r.wrap.b32 	%r11696, %r11695, %r11694, 19;
	shf.r.wrap.b32 	%r11697, %r11694, %r11695, 19;
	mov.b64 	%rd8230, {%r11697, %r11696};
	shf.l.wrap.b32 	%r11698, %r11694, %r11695, 3;
	shf.l.wrap.b32 	%r11699, %r11695, %r11694, 3;
	mov.b64 	%rd8231, {%r11699, %r11698};
	xor.b64  	%rd8232, %rd8230, %rd8231;
	shr.u64 	%rd8233, %rd8168, 6;
	xor.b64  	%rd8234, %rd8232, %rd8233;
	shf.r.wrap.b32 	%r11700, %r11357, %r11356, 1;
	shf.r.wrap.b32 	%r11701, %r11356, %r11357, 1;
	mov.b64 	%rd8235, {%r11701, %r11700};
	shf.r.wrap.b32 	%r11702, %r11357, %r11356, 8;
	shf.r.wrap.b32 	%r11703, %r11356, %r11357, 8;
	mov.b64 	%rd8236, {%r11703, %r11702};
	xor.b64  	%rd8237, %rd8235, %rd8236;
	shr.u64 	%rd8238, %rd7687, 7;
	xor.b64  	%rd8239, %rd8237, %rd8238;
	add.s64 	%rd8240, %rd8234, %rd7650;
	add.s64 	%rd8241, %rd8240, %rd7983;
	add.s64 	%rd8242, %rd8241, %rd8239;
	add.s64 	%rd8243, %rd8242, %rd8107;
	xor.b64  	%rd8244, %rd8181, %rd8144;
	and.b64  	%rd8245, %rd8218, %rd8244;
	xor.b64  	%rd8246, %rd8245, %rd8144;
	add.s64 	%rd8247, %rd8243, %rd8246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11704,%dummy}, %rd8218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11705}, %rd8218;
	}
	shf.r.wrap.b32 	%r11706, %r11705, %r11704, 14;
	shf.r.wrap.b32 	%r11707, %r11704, %r11705, 14;
	mov.b64 	%rd8248, {%r11707, %r11706};
	shf.r.wrap.b32 	%r11708, %r11705, %r11704, 18;
	shf.r.wrap.b32 	%r11709, %r11704, %r11705, 18;
	mov.b64 	%rd8249, {%r11709, %r11708};
	xor.b64  	%rd8250, %rd8248, %rd8249;
	shf.l.wrap.b32 	%r11710, %r11704, %r11705, 23;
	shf.l.wrap.b32 	%r11711, %r11705, %r11704, 23;
	mov.b64 	%rd8251, {%r11711, %r11710};
	xor.b64  	%rd8252, %rd8250, %rd8251;
	add.s64 	%rd8253, %rd8247, %rd8252;
	add.s64 	%rd8254, %rd8253, 1182934255886127544;
	add.s64 	%rd8255, %rd8254, %rd8118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11712,%dummy}, %rd8229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11713}, %rd8229;
	}
	shf.r.wrap.b32 	%r11714, %r11713, %r11712, 28;
	shf.r.wrap.b32 	%r11715, %r11712, %r11713, 28;
	mov.b64 	%rd8256, {%r11715, %r11714};
	shf.l.wrap.b32 	%r11716, %r11712, %r11713, 30;
	shf.l.wrap.b32 	%r11717, %r11713, %r11712, 30;
	mov.b64 	%rd8257, {%r11717, %r11716};
	xor.b64  	%rd8258, %rd8256, %rd8257;
	shf.l.wrap.b32 	%r11718, %r11712, %r11713, 25;
	shf.l.wrap.b32 	%r11719, %r11713, %r11712, 25;
	mov.b64 	%rd8259, {%r11719, %r11718};
	xor.b64  	%rd8260, %rd8258, %rd8259;
	and.b64  	%rd8261, %rd8229, %rd8192;
	or.b64  	%rd8262, %rd8229, %rd8192;
	and.b64  	%rd8263, %rd8262, %rd8155;
	or.b64  	%rd8264, %rd8263, %rd8261;
	add.s64 	%rd8265, %rd8264, %rd8260;
	add.s64 	%rd8266, %rd8265, %rd8254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11720,%dummy}, %rd8205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11721}, %rd8205;
	}
	shf.r.wrap.b32 	%r11722, %r11721, %r11720, 19;
	shf.r.wrap.b32 	%r11723, %r11720, %r11721, 19;
	mov.b64 	%rd8267, {%r11723, %r11722};
	shf.l.wrap.b32 	%r11724, %r11720, %r11721, 3;
	shf.l.wrap.b32 	%r11725, %r11721, %r11720, 3;
	mov.b64 	%rd8268, {%r11725, %r11724};
	xor.b64  	%rd8269, %rd8267, %rd8268;
	shr.u64 	%rd8270, %rd8205, 6;
	xor.b64  	%rd8271, %rd8269, %rd8270;
	shf.r.wrap.b32 	%r11726, %r11383, %r11382, 1;
	shf.r.wrap.b32 	%r11727, %r11382, %r11383, 1;
	mov.b64 	%rd8272, {%r11727, %r11726};
	shf.r.wrap.b32 	%r11728, %r11383, %r11382, 8;
	shf.r.wrap.b32 	%r11729, %r11382, %r11383, 8;
	mov.b64 	%rd8273, {%r11729, %r11728};
	xor.b64  	%rd8274, %rd8272, %rd8273;
	shr.u64 	%rd8275, %rd7724, 7;
	xor.b64  	%rd8276, %rd8274, %rd8275;
	add.s64 	%rd8277, %rd8271, %rd7687;
	add.s64 	%rd8278, %rd8277, %rd8020;
	add.s64 	%rd8279, %rd8278, %rd8276;
	add.s64 	%rd8280, %rd8279, %rd8144;
	xor.b64  	%rd8281, %rd8218, %rd8181;
	and.b64  	%rd8282, %rd8255, %rd8281;
	xor.b64  	%rd8283, %rd8282, %rd8181;
	add.s64 	%rd8284, %rd8280, %rd8283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11730,%dummy}, %rd8255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11731}, %rd8255;
	}
	shf.r.wrap.b32 	%r11732, %r11731, %r11730, 14;
	shf.r.wrap.b32 	%r11733, %r11730, %r11731, 14;
	mov.b64 	%rd8285, {%r11733, %r11732};
	shf.r.wrap.b32 	%r11734, %r11731, %r11730, 18;
	shf.r.wrap.b32 	%r11735, %r11730, %r11731, 18;
	mov.b64 	%rd8286, {%r11735, %r11734};
	xor.b64  	%rd8287, %rd8285, %rd8286;
	shf.l.wrap.b32 	%r11736, %r11730, %r11731, 23;
	shf.l.wrap.b32 	%r11737, %r11731, %r11730, 23;
	mov.b64 	%rd8288, {%r11737, %r11736};
	xor.b64  	%rd8289, %rd8287, %rd8288;
	add.s64 	%rd8290, %rd8284, %rd8289;
	add.s64 	%rd8291, %rd8290, 1847814050463011016;
	add.s64 	%rd8292, %rd8291, %rd8155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11738,%dummy}, %rd8266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11739}, %rd8266;
	}
	shf.r.wrap.b32 	%r11740, %r11739, %r11738, 28;
	shf.r.wrap.b32 	%r11741, %r11738, %r11739, 28;
	mov.b64 	%rd8293, {%r11741, %r11740};
	shf.l.wrap.b32 	%r11742, %r11738, %r11739, 30;
	shf.l.wrap.b32 	%r11743, %r11739, %r11738, 30;
	mov.b64 	%rd8294, {%r11743, %r11742};
	xor.b64  	%rd8295, %rd8293, %rd8294;
	shf.l.wrap.b32 	%r11744, %r11738, %r11739, 25;
	shf.l.wrap.b32 	%r11745, %r11739, %r11738, 25;
	mov.b64 	%rd8296, {%r11745, %r11744};
	xor.b64  	%rd8297, %rd8295, %rd8296;
	and.b64  	%rd8298, %rd8266, %rd8229;
	or.b64  	%rd8299, %rd8266, %rd8229;
	and.b64  	%rd8300, %rd8299, %rd8192;
	or.b64  	%rd8301, %rd8300, %rd8298;
	add.s64 	%rd8302, %rd8301, %rd8297;
	add.s64 	%rd8303, %rd8302, %rd8291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11746,%dummy}, %rd8242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11747}, %rd8242;
	}
	shf.r.wrap.b32 	%r11748, %r11747, %r11746, 19;
	shf.r.wrap.b32 	%r11749, %r11746, %r11747, 19;
	mov.b64 	%rd8304, {%r11749, %r11748};
	shf.l.wrap.b32 	%r11750, %r11746, %r11747, 3;
	shf.l.wrap.b32 	%r11751, %r11747, %r11746, 3;
	mov.b64 	%rd8305, {%r11751, %r11750};
	xor.b64  	%rd8306, %rd8304, %rd8305;
	shr.u64 	%rd8307, %rd8242, 6;
	xor.b64  	%rd8308, %rd8306, %rd8307;
	shf.r.wrap.b32 	%r11752, %r11409, %r11408, 1;
	shf.r.wrap.b32 	%r11753, %r11408, %r11409, 1;
	mov.b64 	%rd8309, {%r11753, %r11752};
	shf.r.wrap.b32 	%r11754, %r11409, %r11408, 8;
	shf.r.wrap.b32 	%r11755, %r11408, %r11409, 8;
	mov.b64 	%rd8310, {%r11755, %r11754};
	xor.b64  	%rd8311, %rd8309, %rd8310;
	shr.u64 	%rd8312, %rd7761, 7;
	xor.b64  	%rd8313, %rd8311, %rd8312;
	add.s64 	%rd8314, %rd8308, %rd7724;
	add.s64 	%rd8315, %rd8314, %rd8057;
	add.s64 	%rd8316, %rd8315, %rd8313;
	add.s64 	%rd8317, %rd8316, %rd8181;
	xor.b64  	%rd8318, %rd8255, %rd8218;
	and.b64  	%rd8319, %rd8292, %rd8318;
	xor.b64  	%rd8320, %rd8319, %rd8218;
	add.s64 	%rd8321, %rd8317, %rd8320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11756,%dummy}, %rd8292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11757}, %rd8292;
	}
	shf.r.wrap.b32 	%r11758, %r11757, %r11756, 14;
	shf.r.wrap.b32 	%r11759, %r11756, %r11757, 14;
	mov.b64 	%rd8322, {%r11759, %r11758};
	shf.r.wrap.b32 	%r11760, %r11757, %r11756, 18;
	shf.r.wrap.b32 	%r11761, %r11756, %r11757, 18;
	mov.b64 	%rd8323, {%r11761, %r11760};
	xor.b64  	%rd8324, %rd8322, %rd8323;
	shf.l.wrap.b32 	%r11762, %r11756, %r11757, 23;
	shf.l.wrap.b32 	%r11763, %r11757, %r11756, 23;
	mov.b64 	%rd8325, {%r11763, %r11762};
	xor.b64  	%rd8326, %rd8324, %rd8325;
	add.s64 	%rd8327, %rd8321, %rd8326;
	add.s64 	%rd8328, %rd8327, 2177327727835720531;
	add.s64 	%rd8329, %rd8328, %rd8192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11764,%dummy}, %rd8303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11765}, %rd8303;
	}
	shf.r.wrap.b32 	%r11766, %r11765, %r11764, 28;
	shf.r.wrap.b32 	%r11767, %r11764, %r11765, 28;
	mov.b64 	%rd8330, {%r11767, %r11766};
	shf.l.wrap.b32 	%r11768, %r11764, %r11765, 30;
	shf.l.wrap.b32 	%r11769, %r11765, %r11764, 30;
	mov.b64 	%rd8331, {%r11769, %r11768};
	xor.b64  	%rd8332, %rd8330, %rd8331;
	shf.l.wrap.b32 	%r11770, %r11764, %r11765, 25;
	shf.l.wrap.b32 	%r11771, %r11765, %r11764, 25;
	mov.b64 	%rd8333, {%r11771, %r11770};
	xor.b64  	%rd8334, %rd8332, %rd8333;
	and.b64  	%rd8335, %rd8303, %rd8266;
	or.b64  	%rd8336, %rd8303, %rd8266;
	and.b64  	%rd8337, %rd8336, %rd8229;
	or.b64  	%rd8338, %rd8337, %rd8335;
	add.s64 	%rd8339, %rd8338, %rd8334;
	add.s64 	%rd8340, %rd8339, %rd8328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11772,%dummy}, %rd8279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11773}, %rd8279;
	}
	shf.r.wrap.b32 	%r11774, %r11773, %r11772, 19;
	shf.r.wrap.b32 	%r11775, %r11772, %r11773, 19;
	mov.b64 	%rd8341, {%r11775, %r11774};
	shf.l.wrap.b32 	%r11776, %r11772, %r11773, 3;
	shf.l.wrap.b32 	%r11777, %r11773, %r11772, 3;
	mov.b64 	%rd8342, {%r11777, %r11776};
	xor.b64  	%rd8343, %rd8341, %rd8342;
	shr.u64 	%rd8344, %rd8279, 6;
	xor.b64  	%rd8345, %rd8343, %rd8344;
	shf.r.wrap.b32 	%r11778, %r11435, %r11434, 1;
	shf.r.wrap.b32 	%r11779, %r11434, %r11435, 1;
	mov.b64 	%rd8346, {%r11779, %r11778};
	shf.r.wrap.b32 	%r11780, %r11435, %r11434, 8;
	shf.r.wrap.b32 	%r11781, %r11434, %r11435, 8;
	mov.b64 	%rd8347, {%r11781, %r11780};
	xor.b64  	%rd8348, %rd8346, %rd8347;
	shr.u64 	%rd8349, %rd7798, 7;
	xor.b64  	%rd8350, %rd8348, %rd8349;
	add.s64 	%rd8351, %rd8345, %rd7761;
	add.s64 	%rd8352, %rd8351, %rd8094;
	add.s64 	%rd8353, %rd8352, %rd8350;
	add.s64 	%rd8354, %rd8353, %rd8218;
	xor.b64  	%rd8355, %rd8292, %rd8255;
	and.b64  	%rd8356, %rd8329, %rd8355;
	xor.b64  	%rd8357, %rd8356, %rd8255;
	add.s64 	%rd8358, %rd8354, %rd8357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11782,%dummy}, %rd8329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11783}, %rd8329;
	}
	shf.r.wrap.b32 	%r11784, %r11783, %r11782, 14;
	shf.r.wrap.b32 	%r11785, %r11782, %r11783, 14;
	mov.b64 	%rd8359, {%r11785, %r11784};
	shf.r.wrap.b32 	%r11786, %r11783, %r11782, 18;
	shf.r.wrap.b32 	%r11787, %r11782, %r11783, 18;
	mov.b64 	%rd8360, {%r11787, %r11786};
	xor.b64  	%rd8361, %rd8359, %rd8360;
	shf.l.wrap.b32 	%r11788, %r11782, %r11783, 23;
	shf.l.wrap.b32 	%r11789, %r11783, %r11782, 23;
	mov.b64 	%rd8362, {%r11789, %r11788};
	xor.b64  	%rd8363, %rd8361, %rd8362;
	add.s64 	%rd8364, %rd8358, %rd8363;
	add.s64 	%rd8365, %rd8364, 2830643537854262169;
	add.s64 	%rd8366, %rd8365, %rd8229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11790,%dummy}, %rd8340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11791}, %rd8340;
	}
	shf.r.wrap.b32 	%r11792, %r11791, %r11790, 28;
	shf.r.wrap.b32 	%r11793, %r11790, %r11791, 28;
	mov.b64 	%rd8367, {%r11793, %r11792};
	shf.l.wrap.b32 	%r11794, %r11790, %r11791, 30;
	shf.l.wrap.b32 	%r11795, %r11791, %r11790, 30;
	mov.b64 	%rd8368, {%r11795, %r11794};
	xor.b64  	%rd8369, %rd8367, %rd8368;
	shf.l.wrap.b32 	%r11796, %r11790, %r11791, 25;
	shf.l.wrap.b32 	%r11797, %r11791, %r11790, 25;
	mov.b64 	%rd8370, {%r11797, %r11796};
	xor.b64  	%rd8371, %rd8369, %rd8370;
	and.b64  	%rd8372, %rd8340, %rd8303;
	or.b64  	%rd8373, %rd8340, %rd8303;
	and.b64  	%rd8374, %rd8373, %rd8266;
	or.b64  	%rd8375, %rd8374, %rd8372;
	add.s64 	%rd8376, %rd8375, %rd8371;
	add.s64 	%rd8377, %rd8376, %rd8365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11798,%dummy}, %rd8316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11799}, %rd8316;
	}
	shf.r.wrap.b32 	%r11800, %r11799, %r11798, 19;
	shf.r.wrap.b32 	%r11801, %r11798, %r11799, 19;
	mov.b64 	%rd8378, {%r11801, %r11800};
	shf.l.wrap.b32 	%r11802, %r11798, %r11799, 3;
	shf.l.wrap.b32 	%r11803, %r11799, %r11798, 3;
	mov.b64 	%rd8379, {%r11803, %r11802};
	xor.b64  	%rd8380, %rd8378, %rd8379;
	shr.u64 	%rd8381, %rd8316, 6;
	xor.b64  	%rd8382, %rd8380, %rd8381;
	shf.r.wrap.b32 	%r11804, %r11461, %r11460, 1;
	shf.r.wrap.b32 	%r11805, %r11460, %r11461, 1;
	mov.b64 	%rd8383, {%r11805, %r11804};
	shf.r.wrap.b32 	%r11806, %r11461, %r11460, 8;
	shf.r.wrap.b32 	%r11807, %r11460, %r11461, 8;
	mov.b64 	%rd8384, {%r11807, %r11806};
	xor.b64  	%rd8385, %rd8383, %rd8384;
	shr.u64 	%rd8386, %rd7835, 7;
	xor.b64  	%rd8387, %rd8385, %rd8386;
	add.s64 	%rd8388, %rd8382, %rd7798;
	add.s64 	%rd8389, %rd8388, %rd8131;
	add.s64 	%rd8390, %rd8389, %rd8387;
	add.s64 	%rd8391, %rd8390, %rd8255;
	xor.b64  	%rd8392, %rd8329, %rd8292;
	and.b64  	%rd8393, %rd8366, %rd8392;
	xor.b64  	%rd8394, %rd8393, %rd8292;
	add.s64 	%rd8395, %rd8391, %rd8394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11808,%dummy}, %rd8366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11809}, %rd8366;
	}
	shf.r.wrap.b32 	%r11810, %r11809, %r11808, 14;
	shf.r.wrap.b32 	%r11811, %r11808, %r11809, 14;
	mov.b64 	%rd8396, {%r11811, %r11810};
	shf.r.wrap.b32 	%r11812, %r11809, %r11808, 18;
	shf.r.wrap.b32 	%r11813, %r11808, %r11809, 18;
	mov.b64 	%rd8397, {%r11813, %r11812};
	xor.b64  	%rd8398, %rd8396, %rd8397;
	shf.l.wrap.b32 	%r11814, %r11808, %r11809, 23;
	shf.l.wrap.b32 	%r11815, %r11809, %r11808, 23;
	mov.b64 	%rd8399, {%r11815, %r11814};
	xor.b64  	%rd8400, %rd8398, %rd8399;
	add.s64 	%rd8401, %rd8395, %rd8400;
	add.s64 	%rd8402, %rd8401, 3796741975233480872;
	add.s64 	%rd8403, %rd8402, %rd8266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11816,%dummy}, %rd8377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11817}, %rd8377;
	}
	shf.r.wrap.b32 	%r11818, %r11817, %r11816, 28;
	shf.r.wrap.b32 	%r11819, %r11816, %r11817, 28;
	mov.b64 	%rd8404, {%r11819, %r11818};
	shf.l.wrap.b32 	%r11820, %r11816, %r11817, 30;
	shf.l.wrap.b32 	%r11821, %r11817, %r11816, 30;
	mov.b64 	%rd8405, {%r11821, %r11820};
	xor.b64  	%rd8406, %rd8404, %rd8405;
	shf.l.wrap.b32 	%r11822, %r11816, %r11817, 25;
	shf.l.wrap.b32 	%r11823, %r11817, %r11816, 25;
	mov.b64 	%rd8407, {%r11823, %r11822};
	xor.b64  	%rd8408, %rd8406, %rd8407;
	and.b64  	%rd8409, %rd8377, %rd8340;
	or.b64  	%rd8410, %rd8377, %rd8340;
	and.b64  	%rd8411, %rd8410, %rd8303;
	or.b64  	%rd8412, %rd8411, %rd8409;
	add.s64 	%rd8413, %rd8412, %rd8408;
	add.s64 	%rd8414, %rd8413, %rd8402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11824,%dummy}, %rd8353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11825}, %rd8353;
	}
	shf.r.wrap.b32 	%r11826, %r11825, %r11824, 19;
	shf.r.wrap.b32 	%r11827, %r11824, %r11825, 19;
	mov.b64 	%rd8415, {%r11827, %r11826};
	shf.l.wrap.b32 	%r11828, %r11824, %r11825, 3;
	shf.l.wrap.b32 	%r11829, %r11825, %r11824, 3;
	mov.b64 	%rd8416, {%r11829, %r11828};
	xor.b64  	%rd8417, %rd8415, %rd8416;
	shr.u64 	%rd8418, %rd8353, 6;
	xor.b64  	%rd8419, %rd8417, %rd8418;
	shf.r.wrap.b32 	%r11830, %r11487, %r11486, 1;
	shf.r.wrap.b32 	%r11831, %r11486, %r11487, 1;
	mov.b64 	%rd8420, {%r11831, %r11830};
	shf.r.wrap.b32 	%r11832, %r11487, %r11486, 8;
	shf.r.wrap.b32 	%r11833, %r11486, %r11487, 8;
	mov.b64 	%rd8421, {%r11833, %r11832};
	xor.b64  	%rd8422, %rd8420, %rd8421;
	shr.u64 	%rd8423, %rd7872, 7;
	xor.b64  	%rd8424, %rd8422, %rd8423;
	add.s64 	%rd8425, %rd8419, %rd7835;
	add.s64 	%rd8426, %rd8425, %rd8168;
	add.s64 	%rd8427, %rd8426, %rd8424;
	add.s64 	%rd8428, %rd8427, %rd8292;
	xor.b64  	%rd8429, %rd8366, %rd8329;
	and.b64  	%rd8430, %rd8403, %rd8429;
	xor.b64  	%rd8431, %rd8430, %rd8329;
	add.s64 	%rd8432, %rd8428, %rd8431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11834,%dummy}, %rd8403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11835}, %rd8403;
	}
	shf.r.wrap.b32 	%r11836, %r11835, %r11834, 14;
	shf.r.wrap.b32 	%r11837, %r11834, %r11835, 14;
	mov.b64 	%rd8433, {%r11837, %r11836};
	shf.r.wrap.b32 	%r11838, %r11835, %r11834, 18;
	shf.r.wrap.b32 	%r11839, %r11834, %r11835, 18;
	mov.b64 	%rd8434, {%r11839, %r11838};
	xor.b64  	%rd8435, %rd8433, %rd8434;
	shf.l.wrap.b32 	%r11840, %r11834, %r11835, 23;
	shf.l.wrap.b32 	%r11841, %r11835, %r11834, 23;
	mov.b64 	%rd8436, {%r11841, %r11840};
	xor.b64  	%rd8437, %rd8435, %rd8436;
	add.s64 	%rd8438, %rd8432, %rd8437;
	add.s64 	%rd8439, %rd8438, 4115178125766777443;
	add.s64 	%rd8440, %rd8439, %rd8303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11842,%dummy}, %rd8414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11843}, %rd8414;
	}
	shf.r.wrap.b32 	%r11844, %r11843, %r11842, 28;
	shf.r.wrap.b32 	%r11845, %r11842, %r11843, 28;
	mov.b64 	%rd8441, {%r11845, %r11844};
	shf.l.wrap.b32 	%r11846, %r11842, %r11843, 30;
	shf.l.wrap.b32 	%r11847, %r11843, %r11842, 30;
	mov.b64 	%rd8442, {%r11847, %r11846};
	xor.b64  	%rd8443, %rd8441, %rd8442;
	shf.l.wrap.b32 	%r11848, %r11842, %r11843, 25;
	shf.l.wrap.b32 	%r11849, %r11843, %r11842, 25;
	mov.b64 	%rd8444, {%r11849, %r11848};
	xor.b64  	%rd8445, %rd8443, %rd8444;
	and.b64  	%rd8446, %rd8414, %rd8377;
	or.b64  	%rd8447, %rd8414, %rd8377;
	and.b64  	%rd8448, %rd8447, %rd8340;
	or.b64  	%rd8449, %rd8448, %rd8446;
	add.s64 	%rd8450, %rd8449, %rd8445;
	add.s64 	%rd8451, %rd8450, %rd8439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11850,%dummy}, %rd8390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11851}, %rd8390;
	}
	shf.r.wrap.b32 	%r11852, %r11851, %r11850, 19;
	shf.r.wrap.b32 	%r11853, %r11850, %r11851, 19;
	mov.b64 	%rd8452, {%r11853, %r11852};
	shf.l.wrap.b32 	%r11854, %r11850, %r11851, 3;
	shf.l.wrap.b32 	%r11855, %r11851, %r11850, 3;
	mov.b64 	%rd8453, {%r11855, %r11854};
	xor.b64  	%rd8454, %rd8452, %rd8453;
	shr.u64 	%rd8455, %rd8390, 6;
	xor.b64  	%rd8456, %rd8454, %rd8455;
	shf.r.wrap.b32 	%r11856, %r11513, %r11512, 1;
	shf.r.wrap.b32 	%r11857, %r11512, %r11513, 1;
	mov.b64 	%rd8457, {%r11857, %r11856};
	shf.r.wrap.b32 	%r11858, %r11513, %r11512, 8;
	shf.r.wrap.b32 	%r11859, %r11512, %r11513, 8;
	mov.b64 	%rd8458, {%r11859, %r11858};
	xor.b64  	%rd8459, %rd8457, %rd8458;
	shr.u64 	%rd8460, %rd7909, 7;
	xor.b64  	%rd8461, %rd8459, %rd8460;
	add.s64 	%rd8462, %rd8456, %rd7872;
	add.s64 	%rd8463, %rd8462, %rd8205;
	add.s64 	%rd8464, %rd8463, %rd8461;
	add.s64 	%rd8465, %rd8464, %rd8329;
	xor.b64  	%rd8466, %rd8403, %rd8366;
	and.b64  	%rd8467, %rd8440, %rd8466;
	xor.b64  	%rd8468, %rd8467, %rd8366;
	add.s64 	%rd8469, %rd8465, %rd8468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11860,%dummy}, %rd8440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11861}, %rd8440;
	}
	shf.r.wrap.b32 	%r11862, %r11861, %r11860, 14;
	shf.r.wrap.b32 	%r11863, %r11860, %r11861, 14;
	mov.b64 	%rd8470, {%r11863, %r11862};
	shf.r.wrap.b32 	%r11864, %r11861, %r11860, 18;
	shf.r.wrap.b32 	%r11865, %r11860, %r11861, 18;
	mov.b64 	%rd8471, {%r11865, %r11864};
	xor.b64  	%rd8472, %rd8470, %rd8471;
	shf.l.wrap.b32 	%r11866, %r11860, %r11861, 23;
	shf.l.wrap.b32 	%r11867, %r11861, %r11860, 23;
	mov.b64 	%rd8473, {%r11867, %r11866};
	xor.b64  	%rd8474, %rd8472, %rd8473;
	add.s64 	%rd8475, %rd8469, %rd8474;
	add.s64 	%rd8476, %rd8475, 5681478168544905931;
	add.s64 	%rd8477, %rd8476, %rd8340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11868,%dummy}, %rd8451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11869}, %rd8451;
	}
	shf.r.wrap.b32 	%r11870, %r11869, %r11868, 28;
	shf.r.wrap.b32 	%r11871, %r11868, %r11869, 28;
	mov.b64 	%rd8478, {%r11871, %r11870};
	shf.l.wrap.b32 	%r11872, %r11868, %r11869, 30;
	shf.l.wrap.b32 	%r11873, %r11869, %r11868, 30;
	mov.b64 	%rd8479, {%r11873, %r11872};
	xor.b64  	%rd8480, %rd8478, %rd8479;
	shf.l.wrap.b32 	%r11874, %r11868, %r11869, 25;
	shf.l.wrap.b32 	%r11875, %r11869, %r11868, 25;
	mov.b64 	%rd8481, {%r11875, %r11874};
	xor.b64  	%rd8482, %rd8480, %rd8481;
	and.b64  	%rd8483, %rd8451, %rd8414;
	or.b64  	%rd8484, %rd8451, %rd8414;
	and.b64  	%rd8485, %rd8484, %rd8377;
	or.b64  	%rd8486, %rd8485, %rd8483;
	add.s64 	%rd8487, %rd8486, %rd8482;
	add.s64 	%rd8488, %rd8487, %rd8476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11876,%dummy}, %rd8427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11877}, %rd8427;
	}
	shf.r.wrap.b32 	%r11878, %r11877, %r11876, 19;
	shf.r.wrap.b32 	%r11879, %r11876, %r11877, 19;
	mov.b64 	%rd8489, {%r11879, %r11878};
	shf.l.wrap.b32 	%r11880, %r11876, %r11877, 3;
	shf.l.wrap.b32 	%r11881, %r11877, %r11876, 3;
	mov.b64 	%rd8490, {%r11881, %r11880};
	xor.b64  	%rd8491, %rd8489, %rd8490;
	shr.u64 	%rd8492, %rd8427, 6;
	xor.b64  	%rd8493, %rd8491, %rd8492;
	shf.r.wrap.b32 	%r11882, %r11539, %r11538, 1;
	shf.r.wrap.b32 	%r11883, %r11538, %r11539, 1;
	mov.b64 	%rd8494, {%r11883, %r11882};
	shf.r.wrap.b32 	%r11884, %r11539, %r11538, 8;
	shf.r.wrap.b32 	%r11885, %r11538, %r11539, 8;
	mov.b64 	%rd8495, {%r11885, %r11884};
	xor.b64  	%rd8496, %rd8494, %rd8495;
	shr.u64 	%rd8497, %rd7946, 7;
	xor.b64  	%rd8498, %rd8496, %rd8497;
	add.s64 	%rd8499, %rd8493, %rd7909;
	add.s64 	%rd8500, %rd8499, %rd8242;
	add.s64 	%rd8501, %rd8500, %rd8498;
	add.s64 	%rd8502, %rd8501, %rd8366;
	xor.b64  	%rd8503, %rd8440, %rd8403;
	and.b64  	%rd8504, %rd8477, %rd8503;
	xor.b64  	%rd8505, %rd8504, %rd8403;
	add.s64 	%rd8506, %rd8502, %rd8505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11886,%dummy}, %rd8477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11887}, %rd8477;
	}
	shf.r.wrap.b32 	%r11888, %r11887, %r11886, 14;
	shf.r.wrap.b32 	%r11889, %r11886, %r11887, 14;
	mov.b64 	%rd8507, {%r11889, %r11888};
	shf.r.wrap.b32 	%r11890, %r11887, %r11886, 18;
	shf.r.wrap.b32 	%r11891, %r11886, %r11887, 18;
	mov.b64 	%rd8508, {%r11891, %r11890};
	xor.b64  	%rd8509, %rd8507, %rd8508;
	shf.l.wrap.b32 	%r11892, %r11886, %r11887, 23;
	shf.l.wrap.b32 	%r11893, %r11887, %r11886, 23;
	mov.b64 	%rd8510, {%r11893, %r11892};
	xor.b64  	%rd8511, %rd8509, %rd8510;
	add.s64 	%rd8512, %rd8506, %rd8511;
	add.s64 	%rd8513, %rd8512, 6601373596472566643;
	add.s64 	%rd8514, %rd8513, %rd8377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11894,%dummy}, %rd8488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11895}, %rd8488;
	}
	shf.r.wrap.b32 	%r11896, %r11895, %r11894, 28;
	shf.r.wrap.b32 	%r11897, %r11894, %r11895, 28;
	mov.b64 	%rd8515, {%r11897, %r11896};
	shf.l.wrap.b32 	%r11898, %r11894, %r11895, 30;
	shf.l.wrap.b32 	%r11899, %r11895, %r11894, 30;
	mov.b64 	%rd8516, {%r11899, %r11898};
	xor.b64  	%rd8517, %rd8515, %rd8516;
	shf.l.wrap.b32 	%r11900, %r11894, %r11895, 25;
	shf.l.wrap.b32 	%r11901, %r11895, %r11894, 25;
	mov.b64 	%rd8518, {%r11901, %r11900};
	xor.b64  	%rd8519, %rd8517, %rd8518;
	and.b64  	%rd8520, %rd8488, %rd8451;
	or.b64  	%rd8521, %rd8488, %rd8451;
	and.b64  	%rd8522, %rd8521, %rd8414;
	or.b64  	%rd8523, %rd8522, %rd8520;
	add.s64 	%rd8524, %rd8523, %rd8519;
	add.s64 	%rd8525, %rd8524, %rd8513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11902,%dummy}, %rd8464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11903}, %rd8464;
	}
	shf.r.wrap.b32 	%r11904, %r11903, %r11902, 19;
	shf.r.wrap.b32 	%r11905, %r11902, %r11903, 19;
	mov.b64 	%rd8526, {%r11905, %r11904};
	shf.l.wrap.b32 	%r11906, %r11902, %r11903, 3;
	shf.l.wrap.b32 	%r11907, %r11903, %r11902, 3;
	mov.b64 	%rd8527, {%r11907, %r11906};
	xor.b64  	%rd8528, %rd8526, %rd8527;
	shr.u64 	%rd8529, %rd8464, 6;
	xor.b64  	%rd8530, %rd8528, %rd8529;
	shf.r.wrap.b32 	%r11908, %r11565, %r11564, 1;
	shf.r.wrap.b32 	%r11909, %r11564, %r11565, 1;
	mov.b64 	%rd8531, {%r11909, %r11908};
	shf.r.wrap.b32 	%r11910, %r11565, %r11564, 8;
	shf.r.wrap.b32 	%r11911, %r11564, %r11565, 8;
	mov.b64 	%rd8532, {%r11911, %r11910};
	xor.b64  	%rd8533, %rd8531, %rd8532;
	shr.u64 	%rd8534, %rd7983, 7;
	xor.b64  	%rd8535, %rd8533, %rd8534;
	add.s64 	%rd8536, %rd8530, %rd7946;
	add.s64 	%rd8537, %rd8536, %rd8279;
	add.s64 	%rd8538, %rd8537, %rd8535;
	add.s64 	%rd8539, %rd8538, %rd8403;
	xor.b64  	%rd8540, %rd8477, %rd8440;
	and.b64  	%rd8541, %rd8514, %rd8540;
	xor.b64  	%rd8542, %rd8541, %rd8440;
	add.s64 	%rd8543, %rd8539, %rd8542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11912,%dummy}, %rd8514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11913}, %rd8514;
	}
	shf.r.wrap.b32 	%r11914, %r11913, %r11912, 14;
	shf.r.wrap.b32 	%r11915, %r11912, %r11913, 14;
	mov.b64 	%rd8544, {%r11915, %r11914};
	shf.r.wrap.b32 	%r11916, %r11913, %r11912, 18;
	shf.r.wrap.b32 	%r11917, %r11912, %r11913, 18;
	mov.b64 	%rd8545, {%r11917, %r11916};
	xor.b64  	%rd8546, %rd8544, %rd8545;
	shf.l.wrap.b32 	%r11918, %r11912, %r11913, 23;
	shf.l.wrap.b32 	%r11919, %r11913, %r11912, 23;
	mov.b64 	%rd8547, {%r11919, %r11918};
	xor.b64  	%rd8548, %rd8546, %rd8547;
	add.s64 	%rd8549, %rd8543, %rd8548;
	add.s64 	%rd8550, %rd8549, 7507060721942968483;
	add.s64 	%rd8551, %rd8550, %rd8414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11920,%dummy}, %rd8525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11921}, %rd8525;
	}
	shf.r.wrap.b32 	%r11922, %r11921, %r11920, 28;
	shf.r.wrap.b32 	%r11923, %r11920, %r11921, 28;
	mov.b64 	%rd8552, {%r11923, %r11922};
	shf.l.wrap.b32 	%r11924, %r11920, %r11921, 30;
	shf.l.wrap.b32 	%r11925, %r11921, %r11920, 30;
	mov.b64 	%rd8553, {%r11925, %r11924};
	xor.b64  	%rd8554, %rd8552, %rd8553;
	shf.l.wrap.b32 	%r11926, %r11920, %r11921, 25;
	shf.l.wrap.b32 	%r11927, %r11921, %r11920, 25;
	mov.b64 	%rd8555, {%r11927, %r11926};
	xor.b64  	%rd8556, %rd8554, %rd8555;
	and.b64  	%rd8557, %rd8525, %rd8488;
	or.b64  	%rd8558, %rd8525, %rd8488;
	and.b64  	%rd8559, %rd8558, %rd8451;
	or.b64  	%rd8560, %rd8559, %rd8557;
	add.s64 	%rd8561, %rd8560, %rd8556;
	add.s64 	%rd8562, %rd8561, %rd8550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11928,%dummy}, %rd8501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11929}, %rd8501;
	}
	shf.r.wrap.b32 	%r11930, %r11929, %r11928, 19;
	shf.r.wrap.b32 	%r11931, %r11928, %r11929, 19;
	mov.b64 	%rd8563, {%r11931, %r11930};
	shf.l.wrap.b32 	%r11932, %r11928, %r11929, 3;
	shf.l.wrap.b32 	%r11933, %r11929, %r11928, 3;
	mov.b64 	%rd8564, {%r11933, %r11932};
	xor.b64  	%rd8565, %rd8563, %rd8564;
	shr.u64 	%rd8566, %rd8501, 6;
	xor.b64  	%rd8567, %rd8565, %rd8566;
	shf.r.wrap.b32 	%r11934, %r11591, %r11590, 1;
	shf.r.wrap.b32 	%r11935, %r11590, %r11591, 1;
	mov.b64 	%rd8568, {%r11935, %r11934};
	shf.r.wrap.b32 	%r11936, %r11591, %r11590, 8;
	shf.r.wrap.b32 	%r11937, %r11590, %r11591, 8;
	mov.b64 	%rd8569, {%r11937, %r11936};
	xor.b64  	%rd8570, %rd8568, %rd8569;
	shr.u64 	%rd8571, %rd8020, 7;
	xor.b64  	%rd8572, %rd8570, %rd8571;
	add.s64 	%rd8573, %rd8567, %rd7983;
	add.s64 	%rd8574, %rd8573, %rd8316;
	add.s64 	%rd8575, %rd8574, %rd8572;
	add.s64 	%rd8576, %rd8575, %rd8440;
	xor.b64  	%rd8577, %rd8514, %rd8477;
	and.b64  	%rd8578, %rd8551, %rd8577;
	xor.b64  	%rd8579, %rd8578, %rd8477;
	add.s64 	%rd8580, %rd8576, %rd8579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11938,%dummy}, %rd8551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11939}, %rd8551;
	}
	shf.r.wrap.b32 	%r11940, %r11939, %r11938, 14;
	shf.r.wrap.b32 	%r11941, %r11938, %r11939, 14;
	mov.b64 	%rd8581, {%r11941, %r11940};
	shf.r.wrap.b32 	%r11942, %r11939, %r11938, 18;
	shf.r.wrap.b32 	%r11943, %r11938, %r11939, 18;
	mov.b64 	%rd8582, {%r11943, %r11942};
	xor.b64  	%rd8583, %rd8581, %rd8582;
	shf.l.wrap.b32 	%r11944, %r11938, %r11939, 23;
	shf.l.wrap.b32 	%r11945, %r11939, %r11938, 23;
	mov.b64 	%rd8584, {%r11945, %r11944};
	xor.b64  	%rd8585, %rd8583, %rd8584;
	add.s64 	%rd8586, %rd8580, %rd8585;
	add.s64 	%rd8587, %rd8586, 8399075790359081724;
	add.s64 	%rd8588, %rd8587, %rd8451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11946,%dummy}, %rd8562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11947}, %rd8562;
	}
	shf.r.wrap.b32 	%r11948, %r11947, %r11946, 28;
	shf.r.wrap.b32 	%r11949, %r11946, %r11947, 28;
	mov.b64 	%rd8589, {%r11949, %r11948};
	shf.l.wrap.b32 	%r11950, %r11946, %r11947, 30;
	shf.l.wrap.b32 	%r11951, %r11947, %r11946, 30;
	mov.b64 	%rd8590, {%r11951, %r11950};
	xor.b64  	%rd8591, %rd8589, %rd8590;
	shf.l.wrap.b32 	%r11952, %r11946, %r11947, 25;
	shf.l.wrap.b32 	%r11953, %r11947, %r11946, 25;
	mov.b64 	%rd8592, {%r11953, %r11952};
	xor.b64  	%rd8593, %rd8591, %rd8592;
	and.b64  	%rd8594, %rd8562, %rd8525;
	or.b64  	%rd8595, %rd8562, %rd8525;
	and.b64  	%rd8596, %rd8595, %rd8488;
	or.b64  	%rd8597, %rd8596, %rd8594;
	add.s64 	%rd8598, %rd8597, %rd8593;
	add.s64 	%rd8599, %rd8598, %rd8587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11954,%dummy}, %rd8538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11955}, %rd8538;
	}
	shf.r.wrap.b32 	%r11956, %r11955, %r11954, 19;
	shf.r.wrap.b32 	%r11957, %r11954, %r11955, 19;
	mov.b64 	%rd8600, {%r11957, %r11956};
	shf.l.wrap.b32 	%r11958, %r11954, %r11955, 3;
	shf.l.wrap.b32 	%r11959, %r11955, %r11954, 3;
	mov.b64 	%rd8601, {%r11959, %r11958};
	xor.b64  	%rd8602, %rd8600, %rd8601;
	shr.u64 	%rd8603, %rd8538, 6;
	xor.b64  	%rd8604, %rd8602, %rd8603;
	shf.r.wrap.b32 	%r11960, %r11617, %r11616, 1;
	shf.r.wrap.b32 	%r11961, %r11616, %r11617, 1;
	mov.b64 	%rd8605, {%r11961, %r11960};
	shf.r.wrap.b32 	%r11962, %r11617, %r11616, 8;
	shf.r.wrap.b32 	%r11963, %r11616, %r11617, 8;
	mov.b64 	%rd8606, {%r11963, %r11962};
	xor.b64  	%rd8607, %rd8605, %rd8606;
	shr.u64 	%rd8608, %rd8057, 7;
	xor.b64  	%rd8609, %rd8607, %rd8608;
	add.s64 	%rd8610, %rd8604, %rd8020;
	add.s64 	%rd8611, %rd8610, %rd8353;
	add.s64 	%rd8612, %rd8611, %rd8609;
	add.s64 	%rd8613, %rd8612, %rd8477;
	xor.b64  	%rd8614, %rd8551, %rd8514;
	and.b64  	%rd8615, %rd8588, %rd8614;
	xor.b64  	%rd8616, %rd8615, %rd8514;
	add.s64 	%rd8617, %rd8613, %rd8616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11964,%dummy}, %rd8588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11965}, %rd8588;
	}
	shf.r.wrap.b32 	%r11966, %r11965, %r11964, 14;
	shf.r.wrap.b32 	%r11967, %r11964, %r11965, 14;
	mov.b64 	%rd8618, {%r11967, %r11966};
	shf.r.wrap.b32 	%r11968, %r11965, %r11964, 18;
	shf.r.wrap.b32 	%r11969, %r11964, %r11965, 18;
	mov.b64 	%rd8619, {%r11969, %r11968};
	xor.b64  	%rd8620, %rd8618, %rd8619;
	shf.l.wrap.b32 	%r11970, %r11964, %r11965, 23;
	shf.l.wrap.b32 	%r11971, %r11965, %r11964, 23;
	mov.b64 	%rd8621, {%r11971, %r11970};
	xor.b64  	%rd8622, %rd8620, %rd8621;
	add.s64 	%rd8623, %rd8617, %rd8622;
	add.s64 	%rd8624, %rd8623, 8693463985226723168;
	add.s64 	%rd8625, %rd8624, %rd8488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11972,%dummy}, %rd8599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11973}, %rd8599;
	}
	shf.r.wrap.b32 	%r11974, %r11973, %r11972, 28;
	shf.r.wrap.b32 	%r11975, %r11972, %r11973, 28;
	mov.b64 	%rd8626, {%r11975, %r11974};
	shf.l.wrap.b32 	%r11976, %r11972, %r11973, 30;
	shf.l.wrap.b32 	%r11977, %r11973, %r11972, 30;
	mov.b64 	%rd8627, {%r11977, %r11976};
	xor.b64  	%rd8628, %rd8626, %rd8627;
	shf.l.wrap.b32 	%r11978, %r11972, %r11973, 25;
	shf.l.wrap.b32 	%r11979, %r11973, %r11972, 25;
	mov.b64 	%rd8629, {%r11979, %r11978};
	xor.b64  	%rd8630, %rd8628, %rd8629;
	and.b64  	%rd8631, %rd8599, %rd8562;
	or.b64  	%rd8632, %rd8599, %rd8562;
	and.b64  	%rd8633, %rd8632, %rd8525;
	or.b64  	%rd8634, %rd8633, %rd8631;
	add.s64 	%rd8635, %rd8634, %rd8630;
	add.s64 	%rd8636, %rd8635, %rd8624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11980,%dummy}, %rd8575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11981}, %rd8575;
	}
	shf.r.wrap.b32 	%r11982, %r11981, %r11980, 19;
	shf.r.wrap.b32 	%r11983, %r11980, %r11981, 19;
	mov.b64 	%rd8637, {%r11983, %r11982};
	shf.l.wrap.b32 	%r11984, %r11980, %r11981, 3;
	shf.l.wrap.b32 	%r11985, %r11981, %r11980, 3;
	mov.b64 	%rd8638, {%r11985, %r11984};
	xor.b64  	%rd8639, %rd8637, %rd8638;
	shr.u64 	%rd8640, %rd8575, 6;
	xor.b64  	%rd8641, %rd8639, %rd8640;
	shf.r.wrap.b32 	%r11986, %r11643, %r11642, 1;
	shf.r.wrap.b32 	%r11987, %r11642, %r11643, 1;
	mov.b64 	%rd8642, {%r11987, %r11986};
	shf.r.wrap.b32 	%r11988, %r11643, %r11642, 8;
	shf.r.wrap.b32 	%r11989, %r11642, %r11643, 8;
	mov.b64 	%rd8643, {%r11989, %r11988};
	xor.b64  	%rd8644, %rd8642, %rd8643;
	shr.u64 	%rd8645, %rd8094, 7;
	xor.b64  	%rd8646, %rd8644, %rd8645;
	add.s64 	%rd8647, %rd8641, %rd8057;
	add.s64 	%rd8648, %rd8647, %rd8390;
	add.s64 	%rd8649, %rd8648, %rd8646;
	add.s64 	%rd8650, %rd8649, %rd8514;
	xor.b64  	%rd8651, %rd8588, %rd8551;
	and.b64  	%rd8652, %rd8625, %rd8651;
	xor.b64  	%rd8653, %rd8652, %rd8551;
	add.s64 	%rd8654, %rd8650, %rd8653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11990,%dummy}, %rd8625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11991}, %rd8625;
	}
	shf.r.wrap.b32 	%r11992, %r11991, %r11990, 14;
	shf.r.wrap.b32 	%r11993, %r11990, %r11991, 14;
	mov.b64 	%rd8655, {%r11993, %r11992};
	shf.r.wrap.b32 	%r11994, %r11991, %r11990, 18;
	shf.r.wrap.b32 	%r11995, %r11990, %r11991, 18;
	mov.b64 	%rd8656, {%r11995, %r11994};
	xor.b64  	%rd8657, %rd8655, %rd8656;
	shf.l.wrap.b32 	%r11996, %r11990, %r11991, 23;
	shf.l.wrap.b32 	%r11997, %r11991, %r11990, 23;
	mov.b64 	%rd8658, {%r11997, %r11996};
	xor.b64  	%rd8659, %rd8657, %rd8658;
	add.s64 	%rd8660, %rd8654, %rd8659;
	add.s64 	%rd8661, %rd8660, -8878714635349349518;
	add.s64 	%rd8662, %rd8661, %rd8525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11998,%dummy}, %rd8636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11999}, %rd8636;
	}
	shf.r.wrap.b32 	%r12000, %r11999, %r11998, 28;
	shf.r.wrap.b32 	%r12001, %r11998, %r11999, 28;
	mov.b64 	%rd8663, {%r12001, %r12000};
	shf.l.wrap.b32 	%r12002, %r11998, %r11999, 30;
	shf.l.wrap.b32 	%r12003, %r11999, %r11998, 30;
	mov.b64 	%rd8664, {%r12003, %r12002};
	xor.b64  	%rd8665, %rd8663, %rd8664;
	shf.l.wrap.b32 	%r12004, %r11998, %r11999, 25;
	shf.l.wrap.b32 	%r12005, %r11999, %r11998, 25;
	mov.b64 	%rd8666, {%r12005, %r12004};
	xor.b64  	%rd8667, %rd8665, %rd8666;
	and.b64  	%rd8668, %rd8636, %rd8599;
	or.b64  	%rd8669, %rd8636, %rd8599;
	and.b64  	%rd8670, %rd8669, %rd8562;
	or.b64  	%rd8671, %rd8670, %rd8668;
	add.s64 	%rd8672, %rd8671, %rd8667;
	add.s64 	%rd8673, %rd8672, %rd8661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12006,%dummy}, %rd8612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12007}, %rd8612;
	}
	shf.r.wrap.b32 	%r12008, %r12007, %r12006, 19;
	shf.r.wrap.b32 	%r12009, %r12006, %r12007, 19;
	mov.b64 	%rd8674, {%r12009, %r12008};
	shf.l.wrap.b32 	%r12010, %r12006, %r12007, 3;
	shf.l.wrap.b32 	%r12011, %r12007, %r12006, 3;
	mov.b64 	%rd8675, {%r12011, %r12010};
	xor.b64  	%rd8676, %rd8674, %rd8675;
	shr.u64 	%rd8677, %rd8612, 6;
	xor.b64  	%rd8678, %rd8676, %rd8677;
	shf.r.wrap.b32 	%r12012, %r11669, %r11668, 1;
	shf.r.wrap.b32 	%r12013, %r11668, %r11669, 1;
	mov.b64 	%rd8679, {%r12013, %r12012};
	shf.r.wrap.b32 	%r12014, %r11669, %r11668, 8;
	shf.r.wrap.b32 	%r12015, %r11668, %r11669, 8;
	mov.b64 	%rd8680, {%r12015, %r12014};
	xor.b64  	%rd8681, %rd8679, %rd8680;
	shr.u64 	%rd8682, %rd8131, 7;
	xor.b64  	%rd8683, %rd8681, %rd8682;
	add.s64 	%rd8684, %rd8678, %rd8094;
	add.s64 	%rd8685, %rd8684, %rd8427;
	add.s64 	%rd8686, %rd8685, %rd8683;
	add.s64 	%rd8687, %rd8686, %rd8551;
	xor.b64  	%rd8688, %rd8625, %rd8588;
	and.b64  	%rd8689, %rd8662, %rd8688;
	xor.b64  	%rd8690, %rd8689, %rd8588;
	add.s64 	%rd8691, %rd8687, %rd8690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12016,%dummy}, %rd8662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12017}, %rd8662;
	}
	shf.r.wrap.b32 	%r12018, %r12017, %r12016, 14;
	shf.r.wrap.b32 	%r12019, %r12016, %r12017, 14;
	mov.b64 	%rd8692, {%r12019, %r12018};
	shf.r.wrap.b32 	%r12020, %r12017, %r12016, 18;
	shf.r.wrap.b32 	%r12021, %r12016, %r12017, 18;
	mov.b64 	%rd8693, {%r12021, %r12020};
	xor.b64  	%rd8694, %rd8692, %rd8693;
	shf.l.wrap.b32 	%r12022, %r12016, %r12017, 23;
	shf.l.wrap.b32 	%r12023, %r12017, %r12016, 23;
	mov.b64 	%rd8695, {%r12023, %r12022};
	xor.b64  	%rd8696, %rd8694, %rd8695;
	add.s64 	%rd8697, %rd8691, %rd8696;
	add.s64 	%rd8698, %rd8697, -8302665154208450068;
	add.s64 	%rd8699, %rd8698, %rd8562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12024,%dummy}, %rd8673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12025}, %rd8673;
	}
	shf.r.wrap.b32 	%r12026, %r12025, %r12024, 28;
	shf.r.wrap.b32 	%r12027, %r12024, %r12025, 28;
	mov.b64 	%rd8700, {%r12027, %r12026};
	shf.l.wrap.b32 	%r12028, %r12024, %r12025, 30;
	shf.l.wrap.b32 	%r12029, %r12025, %r12024, 30;
	mov.b64 	%rd8701, {%r12029, %r12028};
	xor.b64  	%rd8702, %rd8700, %rd8701;
	shf.l.wrap.b32 	%r12030, %r12024, %r12025, 25;
	shf.l.wrap.b32 	%r12031, %r12025, %r12024, 25;
	mov.b64 	%rd8703, {%r12031, %r12030};
	xor.b64  	%rd8704, %rd8702, %rd8703;
	and.b64  	%rd8705, %rd8673, %rd8636;
	or.b64  	%rd8706, %rd8673, %rd8636;
	and.b64  	%rd8707, %rd8706, %rd8599;
	or.b64  	%rd8708, %rd8707, %rd8705;
	add.s64 	%rd8709, %rd8708, %rd8704;
	add.s64 	%rd8710, %rd8709, %rd8698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12032,%dummy}, %rd8649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12033}, %rd8649;
	}
	shf.r.wrap.b32 	%r12034, %r12033, %r12032, 19;
	shf.r.wrap.b32 	%r12035, %r12032, %r12033, 19;
	mov.b64 	%rd8711, {%r12035, %r12034};
	shf.l.wrap.b32 	%r12036, %r12032, %r12033, 3;
	shf.l.wrap.b32 	%r12037, %r12033, %r12032, 3;
	mov.b64 	%rd8712, {%r12037, %r12036};
	xor.b64  	%rd8713, %rd8711, %rd8712;
	shr.u64 	%rd8714, %rd8649, 6;
	xor.b64  	%rd8715, %rd8713, %rd8714;
	shf.r.wrap.b32 	%r12038, %r11695, %r11694, 1;
	shf.r.wrap.b32 	%r12039, %r11694, %r11695, 1;
	mov.b64 	%rd8716, {%r12039, %r12038};
	shf.r.wrap.b32 	%r12040, %r11695, %r11694, 8;
	shf.r.wrap.b32 	%r12041, %r11694, %r11695, 8;
	mov.b64 	%rd8717, {%r12041, %r12040};
	xor.b64  	%rd8718, %rd8716, %rd8717;
	shr.u64 	%rd8719, %rd8168, 7;
	xor.b64  	%rd8720, %rd8718, %rd8719;
	add.s64 	%rd8721, %rd8715, %rd8131;
	add.s64 	%rd8722, %rd8721, %rd8464;
	add.s64 	%rd8723, %rd8722, %rd8720;
	add.s64 	%rd8724, %rd8723, %rd8588;
	xor.b64  	%rd8725, %rd8662, %rd8625;
	and.b64  	%rd8726, %rd8699, %rd8725;
	xor.b64  	%rd8727, %rd8726, %rd8625;
	add.s64 	%rd8728, %rd8724, %rd8727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12042,%dummy}, %rd8699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12043}, %rd8699;
	}
	shf.r.wrap.b32 	%r12044, %r12043, %r12042, 14;
	shf.r.wrap.b32 	%r12045, %r12042, %r12043, 14;
	mov.b64 	%rd8729, {%r12045, %r12044};
	shf.r.wrap.b32 	%r12046, %r12043, %r12042, 18;
	shf.r.wrap.b32 	%r12047, %r12042, %r12043, 18;
	mov.b64 	%rd8730, {%r12047, %r12046};
	xor.b64  	%rd8731, %rd8729, %rd8730;
	shf.l.wrap.b32 	%r12048, %r12042, %r12043, 23;
	shf.l.wrap.b32 	%r12049, %r12043, %r12042, 23;
	mov.b64 	%rd8732, {%r12049, %r12048};
	xor.b64  	%rd8733, %rd8731, %rd8732;
	add.s64 	%rd8734, %rd8728, %rd8733;
	add.s64 	%rd8735, %rd8734, -8016688836872298968;
	add.s64 	%rd8736, %rd8735, %rd8599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12050,%dummy}, %rd8710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12051}, %rd8710;
	}
	shf.r.wrap.b32 	%r12052, %r12051, %r12050, 28;
	shf.r.wrap.b32 	%r12053, %r12050, %r12051, 28;
	mov.b64 	%rd8737, {%r12053, %r12052};
	shf.l.wrap.b32 	%r12054, %r12050, %r12051, 30;
	shf.l.wrap.b32 	%r12055, %r12051, %r12050, 30;
	mov.b64 	%rd8738, {%r12055, %r12054};
	xor.b64  	%rd8739, %rd8737, %rd8738;
	shf.l.wrap.b32 	%r12056, %r12050, %r12051, 25;
	shf.l.wrap.b32 	%r12057, %r12051, %r12050, 25;
	mov.b64 	%rd8740, {%r12057, %r12056};
	xor.b64  	%rd8741, %rd8739, %rd8740;
	and.b64  	%rd8742, %rd8710, %rd8673;
	or.b64  	%rd8743, %rd8710, %rd8673;
	and.b64  	%rd8744, %rd8743, %rd8636;
	or.b64  	%rd8745, %rd8744, %rd8742;
	add.s64 	%rd8746, %rd8745, %rd8741;
	add.s64 	%rd8747, %rd8746, %rd8735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12058,%dummy}, %rd8686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12059}, %rd8686;
	}
	shf.r.wrap.b32 	%r12060, %r12059, %r12058, 19;
	shf.r.wrap.b32 	%r12061, %r12058, %r12059, 19;
	mov.b64 	%rd8748, {%r12061, %r12060};
	shf.l.wrap.b32 	%r12062, %r12058, %r12059, 3;
	shf.l.wrap.b32 	%r12063, %r12059, %r12058, 3;
	mov.b64 	%rd8749, {%r12063, %r12062};
	xor.b64  	%rd8750, %rd8748, %rd8749;
	shr.u64 	%rd8751, %rd8686, 6;
	xor.b64  	%rd8752, %rd8750, %rd8751;
	shf.r.wrap.b32 	%r12064, %r11721, %r11720, 1;
	shf.r.wrap.b32 	%r12065, %r11720, %r11721, 1;
	mov.b64 	%rd8753, {%r12065, %r12064};
	shf.r.wrap.b32 	%r12066, %r11721, %r11720, 8;
	shf.r.wrap.b32 	%r12067, %r11720, %r11721, 8;
	mov.b64 	%rd8754, {%r12067, %r12066};
	xor.b64  	%rd8755, %rd8753, %rd8754;
	shr.u64 	%rd8756, %rd8205, 7;
	xor.b64  	%rd8757, %rd8755, %rd8756;
	add.s64 	%rd8758, %rd8752, %rd8168;
	add.s64 	%rd8759, %rd8758, %rd8501;
	add.s64 	%rd8760, %rd8759, %rd8757;
	add.s64 	%rd8761, %rd8760, %rd8625;
	xor.b64  	%rd8762, %rd8699, %rd8662;
	and.b64  	%rd8763, %rd8736, %rd8762;
	xor.b64  	%rd8764, %rd8763, %rd8662;
	add.s64 	%rd8765, %rd8761, %rd8764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12068,%dummy}, %rd8736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12069}, %rd8736;
	}
	shf.r.wrap.b32 	%r12070, %r12069, %r12068, 14;
	shf.r.wrap.b32 	%r12071, %r12068, %r12069, 14;
	mov.b64 	%rd8766, {%r12071, %r12070};
	shf.r.wrap.b32 	%r12072, %r12069, %r12068, 18;
	shf.r.wrap.b32 	%r12073, %r12068, %r12069, 18;
	mov.b64 	%rd8767, {%r12073, %r12072};
	xor.b64  	%rd8768, %rd8766, %rd8767;
	shf.l.wrap.b32 	%r12074, %r12068, %r12069, 23;
	shf.l.wrap.b32 	%r12075, %r12069, %r12068, 23;
	mov.b64 	%rd8769, {%r12075, %r12074};
	xor.b64  	%rd8770, %rd8768, %rd8769;
	add.s64 	%rd8771, %rd8765, %rd8770;
	add.s64 	%rd8772, %rd8771, -6606660893046293015;
	add.s64 	%rd8773, %rd8772, %rd8636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12076,%dummy}, %rd8747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12077}, %rd8747;
	}
	shf.r.wrap.b32 	%r12078, %r12077, %r12076, 28;
	shf.r.wrap.b32 	%r12079, %r12076, %r12077, 28;
	mov.b64 	%rd8774, {%r12079, %r12078};
	shf.l.wrap.b32 	%r12080, %r12076, %r12077, 30;
	shf.l.wrap.b32 	%r12081, %r12077, %r12076, 30;
	mov.b64 	%rd8775, {%r12081, %r12080};
	xor.b64  	%rd8776, %rd8774, %rd8775;
	shf.l.wrap.b32 	%r12082, %r12076, %r12077, 25;
	shf.l.wrap.b32 	%r12083, %r12077, %r12076, 25;
	mov.b64 	%rd8777, {%r12083, %r12082};
	xor.b64  	%rd8778, %rd8776, %rd8777;
	and.b64  	%rd8779, %rd8747, %rd8710;
	or.b64  	%rd8780, %rd8747, %rd8710;
	and.b64  	%rd8781, %rd8780, %rd8673;
	or.b64  	%rd8782, %rd8781, %rd8779;
	add.s64 	%rd8783, %rd8782, %rd8778;
	add.s64 	%rd8784, %rd8783, %rd8772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12084,%dummy}, %rd8723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12085}, %rd8723;
	}
	shf.r.wrap.b32 	%r12086, %r12085, %r12084, 19;
	shf.r.wrap.b32 	%r12087, %r12084, %r12085, 19;
	mov.b64 	%rd8785, {%r12087, %r12086};
	shf.l.wrap.b32 	%r12088, %r12084, %r12085, 3;
	shf.l.wrap.b32 	%r12089, %r12085, %r12084, 3;
	mov.b64 	%rd8786, {%r12089, %r12088};
	xor.b64  	%rd8787, %rd8785, %rd8786;
	shr.u64 	%rd8788, %rd8723, 6;
	xor.b64  	%rd8789, %rd8787, %rd8788;
	shf.r.wrap.b32 	%r12090, %r11747, %r11746, 1;
	shf.r.wrap.b32 	%r12091, %r11746, %r11747, 1;
	mov.b64 	%rd8790, {%r12091, %r12090};
	shf.r.wrap.b32 	%r12092, %r11747, %r11746, 8;
	shf.r.wrap.b32 	%r12093, %r11746, %r11747, 8;
	mov.b64 	%rd8791, {%r12093, %r12092};
	xor.b64  	%rd8792, %rd8790, %rd8791;
	shr.u64 	%rd8793, %rd8242, 7;
	xor.b64  	%rd8794, %rd8792, %rd8793;
	add.s64 	%rd8795, %rd8789, %rd8205;
	add.s64 	%rd8796, %rd8795, %rd8538;
	add.s64 	%rd8797, %rd8796, %rd8794;
	add.s64 	%rd8798, %rd8797, %rd8662;
	xor.b64  	%rd8799, %rd8736, %rd8699;
	and.b64  	%rd8800, %rd8773, %rd8799;
	xor.b64  	%rd8801, %rd8800, %rd8699;
	add.s64 	%rd8802, %rd8798, %rd8801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12094,%dummy}, %rd8773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12095}, %rd8773;
	}
	shf.r.wrap.b32 	%r12096, %r12095, %r12094, 14;
	shf.r.wrap.b32 	%r12097, %r12094, %r12095, 14;
	mov.b64 	%rd8803, {%r12097, %r12096};
	shf.r.wrap.b32 	%r12098, %r12095, %r12094, 18;
	shf.r.wrap.b32 	%r12099, %r12094, %r12095, 18;
	mov.b64 	%rd8804, {%r12099, %r12098};
	xor.b64  	%rd8805, %rd8803, %rd8804;
	shf.l.wrap.b32 	%r12100, %r12094, %r12095, 23;
	shf.l.wrap.b32 	%r12101, %r12095, %r12094, 23;
	mov.b64 	%rd8806, {%r12101, %r12100};
	xor.b64  	%rd8807, %rd8805, %rd8806;
	add.s64 	%rd8808, %rd8802, %rd8807;
	add.s64 	%rd8809, %rd8808, -4685533653050689259;
	add.s64 	%rd8810, %rd8809, %rd8673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12102,%dummy}, %rd8784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12103}, %rd8784;
	}
	shf.r.wrap.b32 	%r12104, %r12103, %r12102, 28;
	shf.r.wrap.b32 	%r12105, %r12102, %r12103, 28;
	mov.b64 	%rd8811, {%r12105, %r12104};
	shf.l.wrap.b32 	%r12106, %r12102, %r12103, 30;
	shf.l.wrap.b32 	%r12107, %r12103, %r12102, 30;
	mov.b64 	%rd8812, {%r12107, %r12106};
	xor.b64  	%rd8813, %rd8811, %rd8812;
	shf.l.wrap.b32 	%r12108, %r12102, %r12103, 25;
	shf.l.wrap.b32 	%r12109, %r12103, %r12102, 25;
	mov.b64 	%rd8814, {%r12109, %r12108};
	xor.b64  	%rd8815, %rd8813, %rd8814;
	and.b64  	%rd8816, %rd8784, %rd8747;
	or.b64  	%rd8817, %rd8784, %rd8747;
	and.b64  	%rd8818, %rd8817, %rd8710;
	or.b64  	%rd8819, %rd8818, %rd8816;
	add.s64 	%rd8820, %rd8819, %rd8815;
	add.s64 	%rd8821, %rd8820, %rd8809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12110,%dummy}, %rd8760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12111}, %rd8760;
	}
	shf.r.wrap.b32 	%r12112, %r12111, %r12110, 19;
	shf.r.wrap.b32 	%r12113, %r12110, %r12111, 19;
	mov.b64 	%rd8822, {%r12113, %r12112};
	shf.l.wrap.b32 	%r12114, %r12110, %r12111, 3;
	shf.l.wrap.b32 	%r12115, %r12111, %r12110, 3;
	mov.b64 	%rd8823, {%r12115, %r12114};
	xor.b64  	%rd8824, %rd8822, %rd8823;
	shr.u64 	%rd8825, %rd8760, 6;
	xor.b64  	%rd8826, %rd8824, %rd8825;
	shf.r.wrap.b32 	%r12116, %r11773, %r11772, 1;
	shf.r.wrap.b32 	%r12117, %r11772, %r11773, 1;
	mov.b64 	%rd8827, {%r12117, %r12116};
	shf.r.wrap.b32 	%r12118, %r11773, %r11772, 8;
	shf.r.wrap.b32 	%r12119, %r11772, %r11773, 8;
	mov.b64 	%rd8828, {%r12119, %r12118};
	xor.b64  	%rd8829, %rd8827, %rd8828;
	shr.u64 	%rd8830, %rd8279, 7;
	xor.b64  	%rd8831, %rd8829, %rd8830;
	add.s64 	%rd8832, %rd8826, %rd8242;
	add.s64 	%rd8833, %rd8832, %rd8575;
	add.s64 	%rd8834, %rd8833, %rd8831;
	add.s64 	%rd8835, %rd8834, %rd8699;
	xor.b64  	%rd8836, %rd8773, %rd8736;
	and.b64  	%rd8837, %rd8810, %rd8836;
	xor.b64  	%rd8838, %rd8837, %rd8736;
	add.s64 	%rd8839, %rd8835, %rd8838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12120,%dummy}, %rd8810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12121}, %rd8810;
	}
	shf.r.wrap.b32 	%r12122, %r12121, %r12120, 14;
	shf.r.wrap.b32 	%r12123, %r12120, %r12121, 14;
	mov.b64 	%rd8840, {%r12123, %r12122};
	shf.r.wrap.b32 	%r12124, %r12121, %r12120, 18;
	shf.r.wrap.b32 	%r12125, %r12120, %r12121, 18;
	mov.b64 	%rd8841, {%r12125, %r12124};
	xor.b64  	%rd8842, %rd8840, %rd8841;
	shf.l.wrap.b32 	%r12126, %r12120, %r12121, 23;
	shf.l.wrap.b32 	%r12127, %r12121, %r12120, 23;
	mov.b64 	%rd8843, {%r12127, %r12126};
	xor.b64  	%rd8844, %rd8842, %rd8843;
	add.s64 	%rd8845, %rd8839, %rd8844;
	add.s64 	%rd8846, %rd8845, -4147400797238176981;
	add.s64 	%rd8847, %rd8846, %rd8710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12128,%dummy}, %rd8821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12129}, %rd8821;
	}
	shf.r.wrap.b32 	%r12130, %r12129, %r12128, 28;
	shf.r.wrap.b32 	%r12131, %r12128, %r12129, 28;
	mov.b64 	%rd8848, {%r12131, %r12130};
	shf.l.wrap.b32 	%r12132, %r12128, %r12129, 30;
	shf.l.wrap.b32 	%r12133, %r12129, %r12128, 30;
	mov.b64 	%rd8849, {%r12133, %r12132};
	xor.b64  	%rd8850, %rd8848, %rd8849;
	shf.l.wrap.b32 	%r12134, %r12128, %r12129, 25;
	shf.l.wrap.b32 	%r12135, %r12129, %r12128, 25;
	mov.b64 	%rd8851, {%r12135, %r12134};
	xor.b64  	%rd8852, %rd8850, %rd8851;
	and.b64  	%rd8853, %rd8821, %rd8784;
	or.b64  	%rd8854, %rd8821, %rd8784;
	and.b64  	%rd8855, %rd8854, %rd8747;
	or.b64  	%rd8856, %rd8855, %rd8853;
	add.s64 	%rd8857, %rd8856, %rd8852;
	add.s64 	%rd8858, %rd8857, %rd8846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12136,%dummy}, %rd8797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12137}, %rd8797;
	}
	shf.r.wrap.b32 	%r12138, %r12137, %r12136, 19;
	shf.r.wrap.b32 	%r12139, %r12136, %r12137, 19;
	mov.b64 	%rd8859, {%r12139, %r12138};
	shf.l.wrap.b32 	%r12140, %r12136, %r12137, 3;
	shf.l.wrap.b32 	%r12141, %r12137, %r12136, 3;
	mov.b64 	%rd8860, {%r12141, %r12140};
	xor.b64  	%rd8861, %rd8859, %rd8860;
	shr.u64 	%rd8862, %rd8797, 6;
	xor.b64  	%rd8863, %rd8861, %rd8862;
	shf.r.wrap.b32 	%r12142, %r11799, %r11798, 1;
	shf.r.wrap.b32 	%r12143, %r11798, %r11799, 1;
	mov.b64 	%rd8864, {%r12143, %r12142};
	shf.r.wrap.b32 	%r12144, %r11799, %r11798, 8;
	shf.r.wrap.b32 	%r12145, %r11798, %r11799, 8;
	mov.b64 	%rd8865, {%r12145, %r12144};
	xor.b64  	%rd8866, %rd8864, %rd8865;
	shr.u64 	%rd8867, %rd8316, 7;
	xor.b64  	%rd8868, %rd8866, %rd8867;
	add.s64 	%rd8869, %rd8863, %rd8279;
	add.s64 	%rd8870, %rd8869, %rd8612;
	add.s64 	%rd8871, %rd8870, %rd8868;
	add.s64 	%rd8872, %rd8871, %rd8736;
	xor.b64  	%rd8873, %rd8810, %rd8773;
	and.b64  	%rd8874, %rd8847, %rd8873;
	xor.b64  	%rd8875, %rd8874, %rd8773;
	add.s64 	%rd8876, %rd8872, %rd8875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12146,%dummy}, %rd8847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12147}, %rd8847;
	}
	shf.r.wrap.b32 	%r12148, %r12147, %r12146, 14;
	shf.r.wrap.b32 	%r12149, %r12146, %r12147, 14;
	mov.b64 	%rd8877, {%r12149, %r12148};
	shf.r.wrap.b32 	%r12150, %r12147, %r12146, 18;
	shf.r.wrap.b32 	%r12151, %r12146, %r12147, 18;
	mov.b64 	%rd8878, {%r12151, %r12150};
	xor.b64  	%rd8879, %rd8877, %rd8878;
	shf.l.wrap.b32 	%r12152, %r12146, %r12147, 23;
	shf.l.wrap.b32 	%r12153, %r12147, %r12146, 23;
	mov.b64 	%rd8880, {%r12153, %r12152};
	xor.b64  	%rd8881, %rd8879, %rd8880;
	add.s64 	%rd8882, %rd8876, %rd8881;
	add.s64 	%rd8883, %rd8882, -3880063495543823972;
	add.s64 	%rd8884, %rd8883, %rd8747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12154,%dummy}, %rd8858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12155}, %rd8858;
	}
	shf.r.wrap.b32 	%r12156, %r12155, %r12154, 28;
	shf.r.wrap.b32 	%r12157, %r12154, %r12155, 28;
	mov.b64 	%rd8885, {%r12157, %r12156};
	shf.l.wrap.b32 	%r12158, %r12154, %r12155, 30;
	shf.l.wrap.b32 	%r12159, %r12155, %r12154, 30;
	mov.b64 	%rd8886, {%r12159, %r12158};
	xor.b64  	%rd8887, %rd8885, %rd8886;
	shf.l.wrap.b32 	%r12160, %r12154, %r12155, 25;
	shf.l.wrap.b32 	%r12161, %r12155, %r12154, 25;
	mov.b64 	%rd8888, {%r12161, %r12160};
	xor.b64  	%rd8889, %rd8887, %rd8888;
	and.b64  	%rd8890, %rd8858, %rd8821;
	or.b64  	%rd8891, %rd8858, %rd8821;
	and.b64  	%rd8892, %rd8891, %rd8784;
	or.b64  	%rd8893, %rd8892, %rd8890;
	add.s64 	%rd8894, %rd8893, %rd8889;
	add.s64 	%rd8895, %rd8894, %rd8883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12162,%dummy}, %rd8834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12163}, %rd8834;
	}
	shf.r.wrap.b32 	%r12164, %r12163, %r12162, 19;
	shf.r.wrap.b32 	%r12165, %r12162, %r12163, 19;
	mov.b64 	%rd8896, {%r12165, %r12164};
	shf.l.wrap.b32 	%r12166, %r12162, %r12163, 3;
	shf.l.wrap.b32 	%r12167, %r12163, %r12162, 3;
	mov.b64 	%rd8897, {%r12167, %r12166};
	xor.b64  	%rd8898, %rd8896, %rd8897;
	shr.u64 	%rd8899, %rd8834, 6;
	xor.b64  	%rd8900, %rd8898, %rd8899;
	shf.r.wrap.b32 	%r12168, %r11825, %r11824, 1;
	shf.r.wrap.b32 	%r12169, %r11824, %r11825, 1;
	mov.b64 	%rd8901, {%r12169, %r12168};
	shf.r.wrap.b32 	%r12170, %r11825, %r11824, 8;
	shf.r.wrap.b32 	%r12171, %r11824, %r11825, 8;
	mov.b64 	%rd8902, {%r12171, %r12170};
	xor.b64  	%rd8903, %rd8901, %rd8902;
	shr.u64 	%rd8904, %rd8353, 7;
	xor.b64  	%rd8905, %rd8903, %rd8904;
	add.s64 	%rd8906, %rd8900, %rd8316;
	add.s64 	%rd8907, %rd8906, %rd8649;
	add.s64 	%rd8908, %rd8907, %rd8905;
	add.s64 	%rd8909, %rd8908, %rd8773;
	xor.b64  	%rd8910, %rd8847, %rd8810;
	and.b64  	%rd8911, %rd8884, %rd8910;
	xor.b64  	%rd8912, %rd8911, %rd8810;
	add.s64 	%rd8913, %rd8909, %rd8912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12172,%dummy}, %rd8884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12173}, %rd8884;
	}
	shf.r.wrap.b32 	%r12174, %r12173, %r12172, 14;
	shf.r.wrap.b32 	%r12175, %r12172, %r12173, 14;
	mov.b64 	%rd8914, {%r12175, %r12174};
	shf.r.wrap.b32 	%r12176, %r12173, %r12172, 18;
	shf.r.wrap.b32 	%r12177, %r12172, %r12173, 18;
	mov.b64 	%rd8915, {%r12177, %r12176};
	xor.b64  	%rd8916, %rd8914, %rd8915;
	shf.l.wrap.b32 	%r12178, %r12172, %r12173, 23;
	shf.l.wrap.b32 	%r12179, %r12173, %r12172, 23;
	mov.b64 	%rd8917, {%r12179, %r12178};
	xor.b64  	%rd8918, %rd8916, %rd8917;
	add.s64 	%rd8919, %rd8913, %rd8918;
	add.s64 	%rd8920, %rd8919, -3348786107499101689;
	add.s64 	%rd8921, %rd8920, %rd8784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12180,%dummy}, %rd8895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12181}, %rd8895;
	}
	shf.r.wrap.b32 	%r12182, %r12181, %r12180, 28;
	shf.r.wrap.b32 	%r12183, %r12180, %r12181, 28;
	mov.b64 	%rd8922, {%r12183, %r12182};
	shf.l.wrap.b32 	%r12184, %r12180, %r12181, 30;
	shf.l.wrap.b32 	%r12185, %r12181, %r12180, 30;
	mov.b64 	%rd8923, {%r12185, %r12184};
	xor.b64  	%rd8924, %rd8922, %rd8923;
	shf.l.wrap.b32 	%r12186, %r12180, %r12181, 25;
	shf.l.wrap.b32 	%r12187, %r12181, %r12180, 25;
	mov.b64 	%rd8925, {%r12187, %r12186};
	xor.b64  	%rd8926, %rd8924, %rd8925;
	and.b64  	%rd8927, %rd8895, %rd8858;
	or.b64  	%rd8928, %rd8895, %rd8858;
	and.b64  	%rd8929, %rd8928, %rd8821;
	or.b64  	%rd8930, %rd8929, %rd8927;
	add.s64 	%rd8931, %rd8930, %rd8926;
	add.s64 	%rd8932, %rd8931, %rd8920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12188,%dummy}, %rd8871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12189}, %rd8871;
	}
	shf.r.wrap.b32 	%r12190, %r12189, %r12188, 19;
	shf.r.wrap.b32 	%r12191, %r12188, %r12189, 19;
	mov.b64 	%rd8933, {%r12191, %r12190};
	shf.l.wrap.b32 	%r12192, %r12188, %r12189, 3;
	shf.l.wrap.b32 	%r12193, %r12189, %r12188, 3;
	mov.b64 	%rd8934, {%r12193, %r12192};
	xor.b64  	%rd8935, %rd8933, %rd8934;
	shr.u64 	%rd8936, %rd8871, 6;
	xor.b64  	%rd8937, %rd8935, %rd8936;
	shf.r.wrap.b32 	%r12194, %r11851, %r11850, 1;
	shf.r.wrap.b32 	%r12195, %r11850, %r11851, 1;
	mov.b64 	%rd8938, {%r12195, %r12194};
	shf.r.wrap.b32 	%r12196, %r11851, %r11850, 8;
	shf.r.wrap.b32 	%r12197, %r11850, %r11851, 8;
	mov.b64 	%rd8939, {%r12197, %r12196};
	xor.b64  	%rd8940, %rd8938, %rd8939;
	shr.u64 	%rd8941, %rd8390, 7;
	xor.b64  	%rd8942, %rd8940, %rd8941;
	add.s64 	%rd8943, %rd8937, %rd8353;
	add.s64 	%rd8944, %rd8943, %rd8686;
	add.s64 	%rd8945, %rd8944, %rd8942;
	add.s64 	%rd8946, %rd8945, %rd8810;
	xor.b64  	%rd8947, %rd8884, %rd8847;
	and.b64  	%rd8948, %rd8921, %rd8947;
	xor.b64  	%rd8949, %rd8948, %rd8847;
	add.s64 	%rd8950, %rd8946, %rd8949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12198,%dummy}, %rd8921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12199}, %rd8921;
	}
	shf.r.wrap.b32 	%r12200, %r12199, %r12198, 14;
	shf.r.wrap.b32 	%r12201, %r12198, %r12199, 14;
	mov.b64 	%rd8951, {%r12201, %r12200};
	shf.r.wrap.b32 	%r12202, %r12199, %r12198, 18;
	shf.r.wrap.b32 	%r12203, %r12198, %r12199, 18;
	mov.b64 	%rd8952, {%r12203, %r12202};
	xor.b64  	%rd8953, %rd8951, %rd8952;
	shf.l.wrap.b32 	%r12204, %r12198, %r12199, 23;
	shf.l.wrap.b32 	%r12205, %r12199, %r12198, 23;
	mov.b64 	%rd8954, {%r12205, %r12204};
	xor.b64  	%rd8955, %rd8953, %rd8954;
	add.s64 	%rd8956, %rd8950, %rd8955;
	add.s64 	%rd8957, %rd8956, -1523767162380948706;
	add.s64 	%rd8958, %rd8957, %rd8821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12206,%dummy}, %rd8932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12207}, %rd8932;
	}
	shf.r.wrap.b32 	%r12208, %r12207, %r12206, 28;
	shf.r.wrap.b32 	%r12209, %r12206, %r12207, 28;
	mov.b64 	%rd8959, {%r12209, %r12208};
	shf.l.wrap.b32 	%r12210, %r12206, %r12207, 30;
	shf.l.wrap.b32 	%r12211, %r12207, %r12206, 30;
	mov.b64 	%rd8960, {%r12211, %r12210};
	xor.b64  	%rd8961, %rd8959, %rd8960;
	shf.l.wrap.b32 	%r12212, %r12206, %r12207, 25;
	shf.l.wrap.b32 	%r12213, %r12207, %r12206, 25;
	mov.b64 	%rd8962, {%r12213, %r12212};
	xor.b64  	%rd8963, %rd8961, %rd8962;
	and.b64  	%rd8964, %rd8932, %rd8895;
	or.b64  	%rd8965, %rd8932, %rd8895;
	and.b64  	%rd8966, %rd8965, %rd8858;
	or.b64  	%rd8967, %rd8966, %rd8964;
	add.s64 	%rd8968, %rd8967, %rd8963;
	add.s64 	%rd8969, %rd8968, %rd8957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12214,%dummy}, %rd8908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12215}, %rd8908;
	}
	shf.r.wrap.b32 	%r12216, %r12215, %r12214, 19;
	shf.r.wrap.b32 	%r12217, %r12214, %r12215, 19;
	mov.b64 	%rd8970, {%r12217, %r12216};
	shf.l.wrap.b32 	%r12218, %r12214, %r12215, 3;
	shf.l.wrap.b32 	%r12219, %r12215, %r12214, 3;
	mov.b64 	%rd8971, {%r12219, %r12218};
	xor.b64  	%rd8972, %rd8970, %rd8971;
	shr.u64 	%rd8973, %rd8908, 6;
	xor.b64  	%rd8974, %rd8972, %rd8973;
	shf.r.wrap.b32 	%r12220, %r11877, %r11876, 1;
	shf.r.wrap.b32 	%r12221, %r11876, %r11877, 1;
	mov.b64 	%rd8975, {%r12221, %r12220};
	shf.r.wrap.b32 	%r12222, %r11877, %r11876, 8;
	shf.r.wrap.b32 	%r12223, %r11876, %r11877, 8;
	mov.b64 	%rd8976, {%r12223, %r12222};
	xor.b64  	%rd8977, %rd8975, %rd8976;
	shr.u64 	%rd8978, %rd8427, 7;
	xor.b64  	%rd8979, %rd8977, %rd8978;
	add.s64 	%rd8980, %rd8974, %rd8390;
	add.s64 	%rd8981, %rd8980, %rd8723;
	add.s64 	%rd8982, %rd8981, %rd8979;
	add.s64 	%rd8983, %rd8982, %rd8847;
	xor.b64  	%rd8984, %rd8921, %rd8884;
	and.b64  	%rd8985, %rd8958, %rd8984;
	xor.b64  	%rd8986, %rd8985, %rd8884;
	add.s64 	%rd8987, %rd8983, %rd8986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12224,%dummy}, %rd8958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12225}, %rd8958;
	}
	shf.r.wrap.b32 	%r12226, %r12225, %r12224, 14;
	shf.r.wrap.b32 	%r12227, %r12224, %r12225, 14;
	mov.b64 	%rd8988, {%r12227, %r12226};
	shf.r.wrap.b32 	%r12228, %r12225, %r12224, 18;
	shf.r.wrap.b32 	%r12229, %r12224, %r12225, 18;
	mov.b64 	%rd8989, {%r12229, %r12228};
	xor.b64  	%rd8990, %rd8988, %rd8989;
	shf.l.wrap.b32 	%r12230, %r12224, %r12225, 23;
	shf.l.wrap.b32 	%r12231, %r12225, %r12224, 23;
	mov.b64 	%rd8991, {%r12231, %r12230};
	xor.b64  	%rd8992, %rd8990, %rd8991;
	add.s64 	%rd8993, %rd8987, %rd8992;
	add.s64 	%rd8994, %rd8993, -757361751448694408;
	add.s64 	%rd8995, %rd8994, %rd8858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12232,%dummy}, %rd8969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12233}, %rd8969;
	}
	shf.r.wrap.b32 	%r12234, %r12233, %r12232, 28;
	shf.r.wrap.b32 	%r12235, %r12232, %r12233, 28;
	mov.b64 	%rd8996, {%r12235, %r12234};
	shf.l.wrap.b32 	%r12236, %r12232, %r12233, 30;
	shf.l.wrap.b32 	%r12237, %r12233, %r12232, 30;
	mov.b64 	%rd8997, {%r12237, %r12236};
	xor.b64  	%rd8998, %rd8996, %rd8997;
	shf.l.wrap.b32 	%r12238, %r12232, %r12233, 25;
	shf.l.wrap.b32 	%r12239, %r12233, %r12232, 25;
	mov.b64 	%rd8999, {%r12239, %r12238};
	xor.b64  	%rd9000, %rd8998, %rd8999;
	and.b64  	%rd9001, %rd8969, %rd8932;
	or.b64  	%rd9002, %rd8969, %rd8932;
	and.b64  	%rd9003, %rd9002, %rd8895;
	or.b64  	%rd9004, %rd9003, %rd9001;
	add.s64 	%rd9005, %rd9004, %rd9000;
	add.s64 	%rd9006, %rd9005, %rd8994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12240,%dummy}, %rd8945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12241}, %rd8945;
	}
	shf.r.wrap.b32 	%r12242, %r12241, %r12240, 19;
	shf.r.wrap.b32 	%r12243, %r12240, %r12241, 19;
	mov.b64 	%rd9007, {%r12243, %r12242};
	shf.l.wrap.b32 	%r12244, %r12240, %r12241, 3;
	shf.l.wrap.b32 	%r12245, %r12241, %r12240, 3;
	mov.b64 	%rd9008, {%r12245, %r12244};
	xor.b64  	%rd9009, %rd9007, %rd9008;
	shr.u64 	%rd9010, %rd8945, 6;
	xor.b64  	%rd9011, %rd9009, %rd9010;
	shf.r.wrap.b32 	%r12246, %r11903, %r11902, 1;
	shf.r.wrap.b32 	%r12247, %r11902, %r11903, 1;
	mov.b64 	%rd9012, {%r12247, %r12246};
	shf.r.wrap.b32 	%r12248, %r11903, %r11902, 8;
	shf.r.wrap.b32 	%r12249, %r11902, %r11903, 8;
	mov.b64 	%rd9013, {%r12249, %r12248};
	xor.b64  	%rd9014, %rd9012, %rd9013;
	shr.u64 	%rd9015, %rd8464, 7;
	xor.b64  	%rd9016, %rd9014, %rd9015;
	add.s64 	%rd9017, %rd9011, %rd8427;
	add.s64 	%rd9018, %rd9017, %rd8760;
	add.s64 	%rd9019, %rd9018, %rd9016;
	add.s64 	%rd9020, %rd9019, %rd8884;
	xor.b64  	%rd9021, %rd8958, %rd8921;
	and.b64  	%rd9022, %rd8995, %rd9021;
	xor.b64  	%rd9023, %rd9022, %rd8921;
	add.s64 	%rd9024, %rd9020, %rd9023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12250,%dummy}, %rd8995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12251}, %rd8995;
	}
	shf.r.wrap.b32 	%r12252, %r12251, %r12250, 14;
	shf.r.wrap.b32 	%r12253, %r12250, %r12251, 14;
	mov.b64 	%rd9025, {%r12253, %r12252};
	shf.r.wrap.b32 	%r12254, %r12251, %r12250, 18;
	shf.r.wrap.b32 	%r12255, %r12250, %r12251, 18;
	mov.b64 	%rd9026, {%r12255, %r12254};
	xor.b64  	%rd9027, %rd9025, %rd9026;
	shf.l.wrap.b32 	%r12256, %r12250, %r12251, 23;
	shf.l.wrap.b32 	%r12257, %r12251, %r12250, 23;
	mov.b64 	%rd9028, {%r12257, %r12256};
	xor.b64  	%rd9029, %rd9027, %rd9028;
	add.s64 	%rd9030, %rd9024, %rd9029;
	add.s64 	%rd9031, %rd9030, 500013540394364858;
	add.s64 	%rd9032, %rd9031, %rd8895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12258,%dummy}, %rd9006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12259}, %rd9006;
	}
	shf.r.wrap.b32 	%r12260, %r12259, %r12258, 28;
	shf.r.wrap.b32 	%r12261, %r12258, %r12259, 28;
	mov.b64 	%rd9033, {%r12261, %r12260};
	shf.l.wrap.b32 	%r12262, %r12258, %r12259, 30;
	shf.l.wrap.b32 	%r12263, %r12259, %r12258, 30;
	mov.b64 	%rd9034, {%r12263, %r12262};
	xor.b64  	%rd9035, %rd9033, %rd9034;
	shf.l.wrap.b32 	%r12264, %r12258, %r12259, 25;
	shf.l.wrap.b32 	%r12265, %r12259, %r12258, 25;
	mov.b64 	%rd9036, {%r12265, %r12264};
	xor.b64  	%rd9037, %rd9035, %rd9036;
	and.b64  	%rd9038, %rd9006, %rd8969;
	or.b64  	%rd9039, %rd9006, %rd8969;
	and.b64  	%rd9040, %rd9039, %rd8932;
	or.b64  	%rd9041, %rd9040, %rd9038;
	add.s64 	%rd9042, %rd9041, %rd9037;
	add.s64 	%rd9043, %rd9042, %rd9031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12266,%dummy}, %rd8982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12267}, %rd8982;
	}
	shf.r.wrap.b32 	%r12268, %r12267, %r12266, 19;
	shf.r.wrap.b32 	%r12269, %r12266, %r12267, 19;
	mov.b64 	%rd9044, {%r12269, %r12268};
	shf.l.wrap.b32 	%r12270, %r12266, %r12267, 3;
	shf.l.wrap.b32 	%r12271, %r12267, %r12266, 3;
	mov.b64 	%rd9045, {%r12271, %r12270};
	xor.b64  	%rd9046, %rd9044, %rd9045;
	shr.u64 	%rd9047, %rd8982, 6;
	xor.b64  	%rd9048, %rd9046, %rd9047;
	shf.r.wrap.b32 	%r12272, %r11929, %r11928, 1;
	shf.r.wrap.b32 	%r12273, %r11928, %r11929, 1;
	mov.b64 	%rd9049, {%r12273, %r12272};
	shf.r.wrap.b32 	%r12274, %r11929, %r11928, 8;
	shf.r.wrap.b32 	%r12275, %r11928, %r11929, 8;
	mov.b64 	%rd9050, {%r12275, %r12274};
	xor.b64  	%rd9051, %rd9049, %rd9050;
	shr.u64 	%rd9052, %rd8501, 7;
	xor.b64  	%rd9053, %rd9051, %rd9052;
	add.s64 	%rd9054, %rd9048, %rd8464;
	add.s64 	%rd9055, %rd9054, %rd8797;
	add.s64 	%rd9056, %rd9055, %rd9053;
	add.s64 	%rd9057, %rd9056, %rd8921;
	xor.b64  	%rd9058, %rd8995, %rd8958;
	and.b64  	%rd9059, %rd9032, %rd9058;
	xor.b64  	%rd9060, %rd9059, %rd8958;
	add.s64 	%rd9061, %rd9057, %rd9060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12276,%dummy}, %rd9032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12277}, %rd9032;
	}
	shf.r.wrap.b32 	%r12278, %r12277, %r12276, 14;
	shf.r.wrap.b32 	%r12279, %r12276, %r12277, 14;
	mov.b64 	%rd9062, {%r12279, %r12278};
	shf.r.wrap.b32 	%r12280, %r12277, %r12276, 18;
	shf.r.wrap.b32 	%r12281, %r12276, %r12277, 18;
	mov.b64 	%rd9063, {%r12281, %r12280};
	xor.b64  	%rd9064, %rd9062, %rd9063;
	shf.l.wrap.b32 	%r12282, %r12276, %r12277, 23;
	shf.l.wrap.b32 	%r12283, %r12277, %r12276, 23;
	mov.b64 	%rd9065, {%r12283, %r12282};
	xor.b64  	%rd9066, %rd9064, %rd9065;
	add.s64 	%rd9067, %rd9061, %rd9066;
	add.s64 	%rd9068, %rd9067, 748580250866718886;
	add.s64 	%rd9069, %rd9068, %rd8932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12284,%dummy}, %rd9043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12285}, %rd9043;
	}
	shf.r.wrap.b32 	%r12286, %r12285, %r12284, 28;
	shf.r.wrap.b32 	%r12287, %r12284, %r12285, 28;
	mov.b64 	%rd9070, {%r12287, %r12286};
	shf.l.wrap.b32 	%r12288, %r12284, %r12285, 30;
	shf.l.wrap.b32 	%r12289, %r12285, %r12284, 30;
	mov.b64 	%rd9071, {%r12289, %r12288};
	xor.b64  	%rd9072, %rd9070, %rd9071;
	shf.l.wrap.b32 	%r12290, %r12284, %r12285, 25;
	shf.l.wrap.b32 	%r12291, %r12285, %r12284, 25;
	mov.b64 	%rd9073, {%r12291, %r12290};
	xor.b64  	%rd9074, %rd9072, %rd9073;
	and.b64  	%rd9075, %rd9043, %rd9006;
	or.b64  	%rd9076, %rd9043, %rd9006;
	and.b64  	%rd9077, %rd9076, %rd8969;
	or.b64  	%rd9078, %rd9077, %rd9075;
	add.s64 	%rd9079, %rd9078, %rd9074;
	add.s64 	%rd9080, %rd9079, %rd9068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12292,%dummy}, %rd9019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12293}, %rd9019;
	}
	shf.r.wrap.b32 	%r12294, %r12293, %r12292, 19;
	shf.r.wrap.b32 	%r12295, %r12292, %r12293, 19;
	mov.b64 	%rd9081, {%r12295, %r12294};
	shf.l.wrap.b32 	%r12296, %r12292, %r12293, 3;
	shf.l.wrap.b32 	%r12297, %r12293, %r12292, 3;
	mov.b64 	%rd9082, {%r12297, %r12296};
	xor.b64  	%rd9083, %rd9081, %rd9082;
	shr.u64 	%rd9084, %rd9019, 6;
	xor.b64  	%rd9085, %rd9083, %rd9084;
	shf.r.wrap.b32 	%r12298, %r11955, %r11954, 1;
	shf.r.wrap.b32 	%r12299, %r11954, %r11955, 1;
	mov.b64 	%rd9086, {%r12299, %r12298};
	shf.r.wrap.b32 	%r12300, %r11955, %r11954, 8;
	shf.r.wrap.b32 	%r12301, %r11954, %r11955, 8;
	mov.b64 	%rd9087, {%r12301, %r12300};
	xor.b64  	%rd9088, %rd9086, %rd9087;
	shr.u64 	%rd9089, %rd8538, 7;
	xor.b64  	%rd9090, %rd9088, %rd9089;
	add.s64 	%rd9091, %rd9085, %rd8501;
	add.s64 	%rd9092, %rd9091, %rd8834;
	add.s64 	%rd9093, %rd9092, %rd9090;
	add.s64 	%rd9094, %rd9093, %rd8958;
	xor.b64  	%rd9095, %rd9032, %rd8995;
	and.b64  	%rd9096, %rd9069, %rd9095;
	xor.b64  	%rd9097, %rd9096, %rd8995;
	add.s64 	%rd9098, %rd9094, %rd9097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12302,%dummy}, %rd9069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12303}, %rd9069;
	}
	shf.r.wrap.b32 	%r12304, %r12303, %r12302, 14;
	shf.r.wrap.b32 	%r12305, %r12302, %r12303, 14;
	mov.b64 	%rd9099, {%r12305, %r12304};
	shf.r.wrap.b32 	%r12306, %r12303, %r12302, 18;
	shf.r.wrap.b32 	%r12307, %r12302, %r12303, 18;
	mov.b64 	%rd9100, {%r12307, %r12306};
	xor.b64  	%rd9101, %rd9099, %rd9100;
	shf.l.wrap.b32 	%r12308, %r12302, %r12303, 23;
	shf.l.wrap.b32 	%r12309, %r12303, %r12302, 23;
	mov.b64 	%rd9102, {%r12309, %r12308};
	xor.b64  	%rd9103, %rd9101, %rd9102;
	add.s64 	%rd9104, %rd9098, %rd9103;
	add.s64 	%rd9105, %rd9104, 1242879168328830382;
	add.s64 	%rd9106, %rd9105, %rd8969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12310,%dummy}, %rd9080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12311}, %rd9080;
	}
	shf.r.wrap.b32 	%r12312, %r12311, %r12310, 28;
	shf.r.wrap.b32 	%r12313, %r12310, %r12311, 28;
	mov.b64 	%rd9107, {%r12313, %r12312};
	shf.l.wrap.b32 	%r12314, %r12310, %r12311, 30;
	shf.l.wrap.b32 	%r12315, %r12311, %r12310, 30;
	mov.b64 	%rd9108, {%r12315, %r12314};
	xor.b64  	%rd9109, %rd9107, %rd9108;
	shf.l.wrap.b32 	%r12316, %r12310, %r12311, 25;
	shf.l.wrap.b32 	%r12317, %r12311, %r12310, 25;
	mov.b64 	%rd9110, {%r12317, %r12316};
	xor.b64  	%rd9111, %rd9109, %rd9110;
	and.b64  	%rd9112, %rd9080, %rd9043;
	or.b64  	%rd9113, %rd9080, %rd9043;
	and.b64  	%rd9114, %rd9113, %rd9006;
	or.b64  	%rd9115, %rd9114, %rd9112;
	add.s64 	%rd9116, %rd9115, %rd9111;
	add.s64 	%rd9117, %rd9116, %rd9105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12318,%dummy}, %rd9056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12319}, %rd9056;
	}
	shf.r.wrap.b32 	%r12320, %r12319, %r12318, 19;
	shf.r.wrap.b32 	%r12321, %r12318, %r12319, 19;
	mov.b64 	%rd9118, {%r12321, %r12320};
	shf.l.wrap.b32 	%r12322, %r12318, %r12319, 3;
	shf.l.wrap.b32 	%r12323, %r12319, %r12318, 3;
	mov.b64 	%rd9119, {%r12323, %r12322};
	xor.b64  	%rd9120, %rd9118, %rd9119;
	shr.u64 	%rd9121, %rd9056, 6;
	xor.b64  	%rd9122, %rd9120, %rd9121;
	shf.r.wrap.b32 	%r12324, %r11981, %r11980, 1;
	shf.r.wrap.b32 	%r12325, %r11980, %r11981, 1;
	mov.b64 	%rd9123, {%r12325, %r12324};
	shf.r.wrap.b32 	%r12326, %r11981, %r11980, 8;
	shf.r.wrap.b32 	%r12327, %r11980, %r11981, 8;
	mov.b64 	%rd9124, {%r12327, %r12326};
	xor.b64  	%rd9125, %rd9123, %rd9124;
	shr.u64 	%rd9126, %rd8575, 7;
	xor.b64  	%rd9127, %rd9125, %rd9126;
	add.s64 	%rd9128, %rd9122, %rd8538;
	add.s64 	%rd9129, %rd9128, %rd8871;
	add.s64 	%rd9130, %rd9129, %rd9127;
	add.s64 	%rd9131, %rd9130, %rd8995;
	xor.b64  	%rd9132, %rd9069, %rd9032;
	and.b64  	%rd9133, %rd9106, %rd9132;
	xor.b64  	%rd9134, %rd9133, %rd9032;
	add.s64 	%rd9135, %rd9131, %rd9134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12328,%dummy}, %rd9106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12329}, %rd9106;
	}
	shf.r.wrap.b32 	%r12330, %r12329, %r12328, 14;
	shf.r.wrap.b32 	%r12331, %r12328, %r12329, 14;
	mov.b64 	%rd9136, {%r12331, %r12330};
	shf.r.wrap.b32 	%r12332, %r12329, %r12328, 18;
	shf.r.wrap.b32 	%r12333, %r12328, %r12329, 18;
	mov.b64 	%rd9137, {%r12333, %r12332};
	xor.b64  	%rd9138, %rd9136, %rd9137;
	shf.l.wrap.b32 	%r12334, %r12328, %r12329, 23;
	shf.l.wrap.b32 	%r12335, %r12329, %r12328, 23;
	mov.b64 	%rd9139, {%r12335, %r12334};
	xor.b64  	%rd9140, %rd9138, %rd9139;
	add.s64 	%rd9141, %rd9135, %rd9140;
	add.s64 	%rd9142, %rd9141, 1977374033974150939;
	add.s64 	%rd9143, %rd9142, %rd9006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12336,%dummy}, %rd9117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12337}, %rd9117;
	}
	shf.r.wrap.b32 	%r12338, %r12337, %r12336, 28;
	shf.r.wrap.b32 	%r12339, %r12336, %r12337, 28;
	mov.b64 	%rd9144, {%r12339, %r12338};
	shf.l.wrap.b32 	%r12340, %r12336, %r12337, 30;
	shf.l.wrap.b32 	%r12341, %r12337, %r12336, 30;
	mov.b64 	%rd9145, {%r12341, %r12340};
	xor.b64  	%rd9146, %rd9144, %rd9145;
	shf.l.wrap.b32 	%r12342, %r12336, %r12337, 25;
	shf.l.wrap.b32 	%r12343, %r12337, %r12336, 25;
	mov.b64 	%rd9147, {%r12343, %r12342};
	xor.b64  	%rd9148, %rd9146, %rd9147;
	and.b64  	%rd9149, %rd9117, %rd9080;
	or.b64  	%rd9150, %rd9117, %rd9080;
	and.b64  	%rd9151, %rd9150, %rd9043;
	or.b64  	%rd9152, %rd9151, %rd9149;
	add.s64 	%rd9153, %rd9152, %rd9148;
	add.s64 	%rd9154, %rd9153, %rd9142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12344,%dummy}, %rd9093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12345}, %rd9093;
	}
	shf.r.wrap.b32 	%r12346, %r12345, %r12344, 19;
	shf.r.wrap.b32 	%r12347, %r12344, %r12345, 19;
	mov.b64 	%rd9155, {%r12347, %r12346};
	shf.l.wrap.b32 	%r12348, %r12344, %r12345, 3;
	shf.l.wrap.b32 	%r12349, %r12345, %r12344, 3;
	mov.b64 	%rd9156, {%r12349, %r12348};
	xor.b64  	%rd9157, %rd9155, %rd9156;
	shr.u64 	%rd9158, %rd9093, 6;
	xor.b64  	%rd9159, %rd9157, %rd9158;
	shf.r.wrap.b32 	%r12350, %r12007, %r12006, 1;
	shf.r.wrap.b32 	%r12351, %r12006, %r12007, 1;
	mov.b64 	%rd9160, {%r12351, %r12350};
	shf.r.wrap.b32 	%r12352, %r12007, %r12006, 8;
	shf.r.wrap.b32 	%r12353, %r12006, %r12007, 8;
	mov.b64 	%rd9161, {%r12353, %r12352};
	xor.b64  	%rd9162, %rd9160, %rd9161;
	shr.u64 	%rd9163, %rd8612, 7;
	xor.b64  	%rd9164, %rd9162, %rd9163;
	add.s64 	%rd9165, %rd9159, %rd8575;
	add.s64 	%rd9166, %rd9165, %rd8908;
	add.s64 	%rd9167, %rd9166, %rd9164;
	add.s64 	%rd9168, %rd9167, %rd9032;
	xor.b64  	%rd9169, %rd9106, %rd9069;
	and.b64  	%rd9170, %rd9143, %rd9169;
	xor.b64  	%rd9171, %rd9170, %rd9069;
	add.s64 	%rd9172, %rd9168, %rd9171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12354,%dummy}, %rd9143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12355}, %rd9143;
	}
	shf.r.wrap.b32 	%r12356, %r12355, %r12354, 14;
	shf.r.wrap.b32 	%r12357, %r12354, %r12355, 14;
	mov.b64 	%rd9173, {%r12357, %r12356};
	shf.r.wrap.b32 	%r12358, %r12355, %r12354, 18;
	shf.r.wrap.b32 	%r12359, %r12354, %r12355, 18;
	mov.b64 	%rd9174, {%r12359, %r12358};
	xor.b64  	%rd9175, %rd9173, %rd9174;
	shf.l.wrap.b32 	%r12360, %r12354, %r12355, 23;
	shf.l.wrap.b32 	%r12361, %r12355, %r12354, 23;
	mov.b64 	%rd9176, {%r12361, %r12360};
	xor.b64  	%rd9177, %rd9175, %rd9176;
	add.s64 	%rd9178, %rd9172, %rd9177;
	add.s64 	%rd9179, %rd9178, 2944078676154940804;
	add.s64 	%rd9180, %rd9179, %rd9043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12362,%dummy}, %rd9154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12363}, %rd9154;
	}
	shf.r.wrap.b32 	%r12364, %r12363, %r12362, 28;
	shf.r.wrap.b32 	%r12365, %r12362, %r12363, 28;
	mov.b64 	%rd9181, {%r12365, %r12364};
	shf.l.wrap.b32 	%r12366, %r12362, %r12363, 30;
	shf.l.wrap.b32 	%r12367, %r12363, %r12362, 30;
	mov.b64 	%rd9182, {%r12367, %r12366};
	xor.b64  	%rd9183, %rd9181, %rd9182;
	shf.l.wrap.b32 	%r12368, %r12362, %r12363, 25;
	shf.l.wrap.b32 	%r12369, %r12363, %r12362, 25;
	mov.b64 	%rd9184, {%r12369, %r12368};
	xor.b64  	%rd9185, %rd9183, %rd9184;
	and.b64  	%rd9186, %rd9154, %rd9117;
	or.b64  	%rd9187, %rd9154, %rd9117;
	and.b64  	%rd9188, %rd9187, %rd9080;
	or.b64  	%rd9189, %rd9188, %rd9186;
	add.s64 	%rd9190, %rd9189, %rd9185;
	add.s64 	%rd9191, %rd9190, %rd9179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12370,%dummy}, %rd9130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12371}, %rd9130;
	}
	shf.r.wrap.b32 	%r12372, %r12371, %r12370, 19;
	shf.r.wrap.b32 	%r12373, %r12370, %r12371, 19;
	mov.b64 	%rd9192, {%r12373, %r12372};
	shf.l.wrap.b32 	%r12374, %r12370, %r12371, 3;
	shf.l.wrap.b32 	%r12375, %r12371, %r12370, 3;
	mov.b64 	%rd9193, {%r12375, %r12374};
	xor.b64  	%rd9194, %rd9192, %rd9193;
	shr.u64 	%rd9195, %rd9130, 6;
	xor.b64  	%rd9196, %rd9194, %rd9195;
	shf.r.wrap.b32 	%r12376, %r12033, %r12032, 1;
	shf.r.wrap.b32 	%r12377, %r12032, %r12033, 1;
	mov.b64 	%rd9197, {%r12377, %r12376};
	shf.r.wrap.b32 	%r12378, %r12033, %r12032, 8;
	shf.r.wrap.b32 	%r12379, %r12032, %r12033, 8;
	mov.b64 	%rd9198, {%r12379, %r12378};
	xor.b64  	%rd9199, %rd9197, %rd9198;
	shr.u64 	%rd9200, %rd8649, 7;
	xor.b64  	%rd9201, %rd9199, %rd9200;
	add.s64 	%rd9202, %rd9196, %rd8612;
	add.s64 	%rd9203, %rd9202, %rd8945;
	add.s64 	%rd9204, %rd9203, %rd9201;
	add.s64 	%rd9205, %rd9204, %rd9069;
	xor.b64  	%rd9206, %rd9143, %rd9106;
	and.b64  	%rd9207, %rd9180, %rd9206;
	xor.b64  	%rd9208, %rd9207, %rd9106;
	add.s64 	%rd9209, %rd9205, %rd9208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12380,%dummy}, %rd9180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12381}, %rd9180;
	}
	shf.r.wrap.b32 	%r12382, %r12381, %r12380, 14;
	shf.r.wrap.b32 	%r12383, %r12380, %r12381, 14;
	mov.b64 	%rd9210, {%r12383, %r12382};
	shf.r.wrap.b32 	%r12384, %r12381, %r12380, 18;
	shf.r.wrap.b32 	%r12385, %r12380, %r12381, 18;
	mov.b64 	%rd9211, {%r12385, %r12384};
	xor.b64  	%rd9212, %rd9210, %rd9211;
	shf.l.wrap.b32 	%r12386, %r12380, %r12381, 23;
	shf.l.wrap.b32 	%r12387, %r12381, %r12380, 23;
	mov.b64 	%rd9213, {%r12387, %r12386};
	xor.b64  	%rd9214, %rd9212, %rd9213;
	add.s64 	%rd9215, %rd9209, %rd9214;
	add.s64 	%rd9216, %rd9215, 3659926193048069267;
	add.s64 	%rd9217, %rd9216, %rd9080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12388,%dummy}, %rd9191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12389}, %rd9191;
	}
	shf.r.wrap.b32 	%r12390, %r12389, %r12388, 28;
	shf.r.wrap.b32 	%r12391, %r12388, %r12389, 28;
	mov.b64 	%rd9218, {%r12391, %r12390};
	shf.l.wrap.b32 	%r12392, %r12388, %r12389, 30;
	shf.l.wrap.b32 	%r12393, %r12389, %r12388, 30;
	mov.b64 	%rd9219, {%r12393, %r12392};
	xor.b64  	%rd9220, %rd9218, %rd9219;
	shf.l.wrap.b32 	%r12394, %r12388, %r12389, 25;
	shf.l.wrap.b32 	%r12395, %r12389, %r12388, 25;
	mov.b64 	%rd9221, {%r12395, %r12394};
	xor.b64  	%rd9222, %rd9220, %rd9221;
	and.b64  	%rd9223, %rd9191, %rd9154;
	or.b64  	%rd9224, %rd9191, %rd9154;
	and.b64  	%rd9225, %rd9224, %rd9117;
	or.b64  	%rd9226, %rd9225, %rd9223;
	add.s64 	%rd9227, %rd9226, %rd9222;
	add.s64 	%rd9228, %rd9227, %rd9216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12396,%dummy}, %rd9167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12397}, %rd9167;
	}
	shf.r.wrap.b32 	%r12398, %r12397, %r12396, 19;
	shf.r.wrap.b32 	%r12399, %r12396, %r12397, 19;
	mov.b64 	%rd9229, {%r12399, %r12398};
	shf.l.wrap.b32 	%r12400, %r12396, %r12397, 3;
	shf.l.wrap.b32 	%r12401, %r12397, %r12396, 3;
	mov.b64 	%rd9230, {%r12401, %r12400};
	xor.b64  	%rd9231, %rd9229, %rd9230;
	shr.u64 	%rd9232, %rd9167, 6;
	xor.b64  	%rd9233, %rd9231, %rd9232;
	shf.r.wrap.b32 	%r12402, %r12059, %r12058, 1;
	shf.r.wrap.b32 	%r12403, %r12058, %r12059, 1;
	mov.b64 	%rd9234, {%r12403, %r12402};
	shf.r.wrap.b32 	%r12404, %r12059, %r12058, 8;
	shf.r.wrap.b32 	%r12405, %r12058, %r12059, 8;
	mov.b64 	%rd9235, {%r12405, %r12404};
	xor.b64  	%rd9236, %rd9234, %rd9235;
	shr.u64 	%rd9237, %rd8686, 7;
	xor.b64  	%rd9238, %rd9236, %rd9237;
	add.s64 	%rd9239, %rd9233, %rd8649;
	add.s64 	%rd9240, %rd9239, %rd8982;
	add.s64 	%rd9241, %rd9240, %rd9238;
	add.s64 	%rd9242, %rd9241, %rd9106;
	xor.b64  	%rd9243, %rd9180, %rd9143;
	and.b64  	%rd9244, %rd9217, %rd9243;
	xor.b64  	%rd9245, %rd9244, %rd9143;
	add.s64 	%rd9246, %rd9242, %rd9245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12406,%dummy}, %rd9217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12407}, %rd9217;
	}
	shf.r.wrap.b32 	%r12408, %r12407, %r12406, 14;
	shf.r.wrap.b32 	%r12409, %r12406, %r12407, 14;
	mov.b64 	%rd9247, {%r12409, %r12408};
	shf.r.wrap.b32 	%r12410, %r12407, %r12406, 18;
	shf.r.wrap.b32 	%r12411, %r12406, %r12407, 18;
	mov.b64 	%rd9248, {%r12411, %r12410};
	xor.b64  	%rd9249, %rd9247, %rd9248;
	shf.l.wrap.b32 	%r12412, %r12406, %r12407, 23;
	shf.l.wrap.b32 	%r12413, %r12407, %r12406, 23;
	mov.b64 	%rd9250, {%r12413, %r12412};
	xor.b64  	%rd9251, %rd9249, %rd9250;
	add.s64 	%rd9252, %rd9246, %rd9251;
	add.s64 	%rd9253, %rd9252, 4368137639120453308;
	add.s64 	%rd9254, %rd9253, %rd9117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12414,%dummy}, %rd9228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12415}, %rd9228;
	}
	shf.r.wrap.b32 	%r12416, %r12415, %r12414, 28;
	shf.r.wrap.b32 	%r12417, %r12414, %r12415, 28;
	mov.b64 	%rd9255, {%r12417, %r12416};
	shf.l.wrap.b32 	%r12418, %r12414, %r12415, 30;
	shf.l.wrap.b32 	%r12419, %r12415, %r12414, 30;
	mov.b64 	%rd9256, {%r12419, %r12418};
	xor.b64  	%rd9257, %rd9255, %rd9256;
	shf.l.wrap.b32 	%r12420, %r12414, %r12415, 25;
	shf.l.wrap.b32 	%r12421, %r12415, %r12414, 25;
	mov.b64 	%rd9258, {%r12421, %r12420};
	xor.b64  	%rd9259, %rd9257, %rd9258;
	and.b64  	%rd9260, %rd9228, %rd9191;
	or.b64  	%rd9261, %rd9228, %rd9191;
	and.b64  	%rd9262, %rd9261, %rd9154;
	or.b64  	%rd9263, %rd9262, %rd9260;
	add.s64 	%rd9264, %rd9263, %rd9259;
	add.s64 	%rd9265, %rd9264, %rd9253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12422,%dummy}, %rd9204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12423}, %rd9204;
	}
	shf.r.wrap.b32 	%r12424, %r12423, %r12422, 19;
	shf.r.wrap.b32 	%r12425, %r12422, %r12423, 19;
	mov.b64 	%rd9266, {%r12425, %r12424};
	shf.l.wrap.b32 	%r12426, %r12422, %r12423, 3;
	shf.l.wrap.b32 	%r12427, %r12423, %r12422, 3;
	mov.b64 	%rd9267, {%r12427, %r12426};
	xor.b64  	%rd9268, %rd9266, %rd9267;
	shr.u64 	%rd9269, %rd9204, 6;
	xor.b64  	%rd9270, %rd9268, %rd9269;
	shf.r.wrap.b32 	%r12428, %r12085, %r12084, 1;
	shf.r.wrap.b32 	%r12429, %r12084, %r12085, 1;
	mov.b64 	%rd9271, {%r12429, %r12428};
	shf.r.wrap.b32 	%r12430, %r12085, %r12084, 8;
	shf.r.wrap.b32 	%r12431, %r12084, %r12085, 8;
	mov.b64 	%rd9272, {%r12431, %r12430};
	xor.b64  	%rd9273, %rd9271, %rd9272;
	shr.u64 	%rd9274, %rd8723, 7;
	xor.b64  	%rd9275, %rd9273, %rd9274;
	add.s64 	%rd9276, %rd9270, %rd8686;
	add.s64 	%rd9277, %rd9276, %rd9019;
	add.s64 	%rd9278, %rd9277, %rd9275;
	add.s64 	%rd9279, %rd9278, %rd9143;
	xor.b64  	%rd9280, %rd9217, %rd9180;
	and.b64  	%rd9281, %rd9254, %rd9280;
	xor.b64  	%rd9282, %rd9281, %rd9180;
	add.s64 	%rd9283, %rd9279, %rd9282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12432,%dummy}, %rd9254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12433}, %rd9254;
	}
	shf.r.wrap.b32 	%r12434, %r12433, %r12432, 14;
	shf.r.wrap.b32 	%r12435, %r12432, %r12433, 14;
	mov.b64 	%rd9284, {%r12435, %r12434};
	shf.r.wrap.b32 	%r12436, %r12433, %r12432, 18;
	shf.r.wrap.b32 	%r12437, %r12432, %r12433, 18;
	mov.b64 	%rd9285, {%r12437, %r12436};
	xor.b64  	%rd9286, %rd9284, %rd9285;
	shf.l.wrap.b32 	%r12438, %r12432, %r12433, 23;
	shf.l.wrap.b32 	%r12439, %r12433, %r12432, 23;
	mov.b64 	%rd9287, {%r12439, %r12438};
	xor.b64  	%rd9288, %rd9286, %rd9287;
	add.s64 	%rd9289, %rd9283, %rd9288;
	add.s64 	%rd9290, %rd9289, 4836135668995329356;
	add.s64 	%rd9291, %rd9290, %rd9154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12440,%dummy}, %rd9265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12441}, %rd9265;
	}
	shf.r.wrap.b32 	%r12442, %r12441, %r12440, 28;
	shf.r.wrap.b32 	%r12443, %r12440, %r12441, 28;
	mov.b64 	%rd9292, {%r12443, %r12442};
	shf.l.wrap.b32 	%r12444, %r12440, %r12441, 30;
	shf.l.wrap.b32 	%r12445, %r12441, %r12440, 30;
	mov.b64 	%rd9293, {%r12445, %r12444};
	xor.b64  	%rd9294, %rd9292, %rd9293;
	shf.l.wrap.b32 	%r12446, %r12440, %r12441, 25;
	shf.l.wrap.b32 	%r12447, %r12441, %r12440, 25;
	mov.b64 	%rd9295, {%r12447, %r12446};
	xor.b64  	%rd9296, %rd9294, %rd9295;
	and.b64  	%rd9297, %rd9265, %rd9228;
	or.b64  	%rd9298, %rd9265, %rd9228;
	and.b64  	%rd9299, %rd9298, %rd9191;
	or.b64  	%rd9300, %rd9299, %rd9297;
	add.s64 	%rd9301, %rd9300, %rd9296;
	add.s64 	%rd9302, %rd9301, %rd9290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12448,%dummy}, %rd9241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12449}, %rd9241;
	}
	shf.r.wrap.b32 	%r12450, %r12449, %r12448, 19;
	shf.r.wrap.b32 	%r12451, %r12448, %r12449, 19;
	mov.b64 	%rd9303, {%r12451, %r12450};
	shf.l.wrap.b32 	%r12452, %r12448, %r12449, 3;
	shf.l.wrap.b32 	%r12453, %r12449, %r12448, 3;
	mov.b64 	%rd9304, {%r12453, %r12452};
	xor.b64  	%rd9305, %rd9303, %rd9304;
	shr.u64 	%rd9306, %rd9241, 6;
	xor.b64  	%rd9307, %rd9305, %rd9306;
	shf.r.wrap.b32 	%r12454, %r12111, %r12110, 1;
	shf.r.wrap.b32 	%r12455, %r12110, %r12111, 1;
	mov.b64 	%rd9308, {%r12455, %r12454};
	shf.r.wrap.b32 	%r12456, %r12111, %r12110, 8;
	shf.r.wrap.b32 	%r12457, %r12110, %r12111, 8;
	mov.b64 	%rd9309, {%r12457, %r12456};
	xor.b64  	%rd9310, %rd9308, %rd9309;
	shr.u64 	%rd9311, %rd8760, 7;
	xor.b64  	%rd9312, %rd9310, %rd9311;
	add.s64 	%rd9313, %rd9307, %rd8723;
	add.s64 	%rd9314, %rd9313, %rd9056;
	add.s64 	%rd9315, %rd9314, %rd9312;
	add.s64 	%rd9316, %rd9315, %rd9180;
	xor.b64  	%rd9317, %rd9254, %rd9217;
	and.b64  	%rd9318, %rd9291, %rd9317;
	xor.b64  	%rd9319, %rd9318, %rd9217;
	add.s64 	%rd9320, %rd9316, %rd9319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12458,%dummy}, %rd9291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12459}, %rd9291;
	}
	shf.r.wrap.b32 	%r12460, %r12459, %r12458, 14;
	shf.r.wrap.b32 	%r12461, %r12458, %r12459, 14;
	mov.b64 	%rd9321, {%r12461, %r12460};
	shf.r.wrap.b32 	%r12462, %r12459, %r12458, 18;
	shf.r.wrap.b32 	%r12463, %r12458, %r12459, 18;
	mov.b64 	%rd9322, {%r12463, %r12462};
	xor.b64  	%rd9323, %rd9321, %rd9322;
	shf.l.wrap.b32 	%r12464, %r12458, %r12459, 23;
	shf.l.wrap.b32 	%r12465, %r12459, %r12458, 23;
	mov.b64 	%rd9324, {%r12465, %r12464};
	xor.b64  	%rd9325, %rd9323, %rd9324;
	add.s64 	%rd9326, %rd9320, %rd9325;
	add.s64 	%rd9327, %rd9326, 5532061633213252278;
	add.s64 	%rd9328, %rd9327, %rd9191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12466,%dummy}, %rd9302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12467}, %rd9302;
	}
	shf.r.wrap.b32 	%r12468, %r12467, %r12466, 28;
	shf.r.wrap.b32 	%r12469, %r12466, %r12467, 28;
	mov.b64 	%rd9329, {%r12469, %r12468};
	shf.l.wrap.b32 	%r12470, %r12466, %r12467, 30;
	shf.l.wrap.b32 	%r12471, %r12467, %r12466, 30;
	mov.b64 	%rd9330, {%r12471, %r12470};
	xor.b64  	%rd9331, %rd9329, %rd9330;
	shf.l.wrap.b32 	%r12472, %r12466, %r12467, 25;
	shf.l.wrap.b32 	%r12473, %r12467, %r12466, 25;
	mov.b64 	%rd9332, {%r12473, %r12472};
	xor.b64  	%rd9333, %rd9331, %rd9332;
	and.b64  	%rd9334, %rd9302, %rd9265;
	or.b64  	%rd9335, %rd9302, %rd9265;
	and.b64  	%rd9336, %rd9335, %rd9228;
	or.b64  	%rd9337, %rd9336, %rd9334;
	add.s64 	%rd9338, %rd9337, %rd9333;
	add.s64 	%rd9339, %rd9338, %rd9327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12474,%dummy}, %rd9278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12475}, %rd9278;
	}
	shf.r.wrap.b32 	%r12476, %r12475, %r12474, 19;
	shf.r.wrap.b32 	%r12477, %r12474, %r12475, 19;
	mov.b64 	%rd9340, {%r12477, %r12476};
	shf.l.wrap.b32 	%r12478, %r12474, %r12475, 3;
	shf.l.wrap.b32 	%r12479, %r12475, %r12474, 3;
	mov.b64 	%rd9341, {%r12479, %r12478};
	xor.b64  	%rd9342, %rd9340, %rd9341;
	shr.u64 	%rd9343, %rd9278, 6;
	xor.b64  	%rd9344, %rd9342, %rd9343;
	shf.r.wrap.b32 	%r12480, %r12137, %r12136, 1;
	shf.r.wrap.b32 	%r12481, %r12136, %r12137, 1;
	mov.b64 	%rd9345, {%r12481, %r12480};
	shf.r.wrap.b32 	%r12482, %r12137, %r12136, 8;
	shf.r.wrap.b32 	%r12483, %r12136, %r12137, 8;
	mov.b64 	%rd9346, {%r12483, %r12482};
	xor.b64  	%rd9347, %rd9345, %rd9346;
	shr.u64 	%rd9348, %rd8797, 7;
	xor.b64  	%rd9349, %rd9347, %rd9348;
	add.s64 	%rd9350, %rd9344, %rd8760;
	add.s64 	%rd9351, %rd9350, %rd9093;
	add.s64 	%rd9352, %rd9351, %rd9349;
	add.s64 	%rd9353, %rd9352, %rd9217;
	xor.b64  	%rd9354, %rd9291, %rd9254;
	and.b64  	%rd9355, %rd9328, %rd9354;
	xor.b64  	%rd9356, %rd9355, %rd9254;
	add.s64 	%rd9357, %rd9353, %rd9356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12484,%dummy}, %rd9328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12485}, %rd9328;
	}
	shf.r.wrap.b32 	%r12486, %r12485, %r12484, 14;
	shf.r.wrap.b32 	%r12487, %r12484, %r12485, 14;
	mov.b64 	%rd9358, {%r12487, %r12486};
	shf.r.wrap.b32 	%r12488, %r12485, %r12484, 18;
	shf.r.wrap.b32 	%r12489, %r12484, %r12485, 18;
	mov.b64 	%rd9359, {%r12489, %r12488};
	xor.b64  	%rd9360, %rd9358, %rd9359;
	shf.l.wrap.b32 	%r12490, %r12484, %r12485, 23;
	shf.l.wrap.b32 	%r12491, %r12485, %r12484, 23;
	mov.b64 	%rd9361, {%r12491, %r12490};
	xor.b64  	%rd9362, %rd9360, %rd9361;
	add.s64 	%rd9363, %rd9357, %rd9362;
	add.s64 	%rd9364, %rd9363, 6448918945643986474;
	add.s64 	%rd9365, %rd9364, %rd9228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12492,%dummy}, %rd9339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12493}, %rd9339;
	}
	shf.r.wrap.b32 	%r12494, %r12493, %r12492, 28;
	shf.r.wrap.b32 	%r12495, %r12492, %r12493, 28;
	mov.b64 	%rd9366, {%r12495, %r12494};
	shf.l.wrap.b32 	%r12496, %r12492, %r12493, 30;
	shf.l.wrap.b32 	%r12497, %r12493, %r12492, 30;
	mov.b64 	%rd9367, {%r12497, %r12496};
	xor.b64  	%rd9368, %rd9366, %rd9367;
	shf.l.wrap.b32 	%r12498, %r12492, %r12493, 25;
	shf.l.wrap.b32 	%r12499, %r12493, %r12492, 25;
	mov.b64 	%rd9369, {%r12499, %r12498};
	xor.b64  	%rd9370, %rd9368, %rd9369;
	and.b64  	%rd9371, %rd9339, %rd9302;
	or.b64  	%rd9372, %rd9339, %rd9302;
	and.b64  	%rd9373, %rd9372, %rd9265;
	or.b64  	%rd9374, %rd9373, %rd9371;
	add.s64 	%rd9375, %rd9374, %rd9370;
	add.s64 	%rd9376, %rd9375, %rd9364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12500,%dummy}, %rd9315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12501}, %rd9315;
	}
	shf.r.wrap.b32 	%r12502, %r12501, %r12500, 19;
	shf.r.wrap.b32 	%r12503, %r12500, %r12501, 19;
	mov.b64 	%rd9377, {%r12503, %r12502};
	shf.l.wrap.b32 	%r12504, %r12500, %r12501, 3;
	shf.l.wrap.b32 	%r12505, %r12501, %r12500, 3;
	mov.b64 	%rd9378, {%r12505, %r12504};
	xor.b64  	%rd9379, %rd9377, %rd9378;
	shr.u64 	%rd9380, %rd9315, 6;
	xor.b64  	%rd9381, %rd9379, %rd9380;
	shf.r.wrap.b32 	%r12506, %r12163, %r12162, 1;
	shf.r.wrap.b32 	%r12507, %r12162, %r12163, 1;
	mov.b64 	%rd9382, {%r12507, %r12506};
	shf.r.wrap.b32 	%r12508, %r12163, %r12162, 8;
	shf.r.wrap.b32 	%r12509, %r12162, %r12163, 8;
	mov.b64 	%rd9383, {%r12509, %r12508};
	xor.b64  	%rd9384, %rd9382, %rd9383;
	shr.u64 	%rd9385, %rd8834, 7;
	xor.b64  	%rd9386, %rd9384, %rd9385;
	add.s64 	%rd9387, %rd9381, %rd8797;
	add.s64 	%rd9388, %rd9387, %rd9130;
	add.s64 	%rd9389, %rd9388, %rd9386;
	add.s64 	%rd9390, %rd9389, %rd9254;
	xor.b64  	%rd9391, %rd9328, %rd9291;
	and.b64  	%rd9392, %rd9365, %rd9391;
	xor.b64  	%rd9393, %rd9392, %rd9291;
	add.s64 	%rd9394, %rd9390, %rd9393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12510,%dummy}, %rd9365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12511}, %rd9365;
	}
	shf.r.wrap.b32 	%r12512, %r12511, %r12510, 14;
	shf.r.wrap.b32 	%r12513, %r12510, %r12511, 14;
	mov.b64 	%rd9395, {%r12513, %r12512};
	shf.r.wrap.b32 	%r12514, %r12511, %r12510, 18;
	shf.r.wrap.b32 	%r12515, %r12510, %r12511, 18;
	mov.b64 	%rd9396, {%r12515, %r12514};
	xor.b64  	%rd9397, %rd9395, %rd9396;
	shf.l.wrap.b32 	%r12516, %r12510, %r12511, 23;
	shf.l.wrap.b32 	%r12517, %r12511, %r12510, 23;
	mov.b64 	%rd9398, {%r12517, %r12516};
	xor.b64  	%rd9399, %rd9397, %rd9398;
	add.s64 	%rd9400, %rd9394, %rd9399;
	add.s64 	%rd9401, %rd9400, 6902733635092675308;
	add.s64 	%rd9402, %rd9401, %rd9265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12518,%dummy}, %rd9376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12519}, %rd9376;
	}
	shf.r.wrap.b32 	%r12520, %r12519, %r12518, 28;
	shf.r.wrap.b32 	%r12521, %r12518, %r12519, 28;
	mov.b64 	%rd9403, {%r12521, %r12520};
	shf.l.wrap.b32 	%r12522, %r12518, %r12519, 30;
	shf.l.wrap.b32 	%r12523, %r12519, %r12518, 30;
	mov.b64 	%rd9404, {%r12523, %r12522};
	xor.b64  	%rd9405, %rd9403, %rd9404;
	shf.l.wrap.b32 	%r12524, %r12518, %r12519, 25;
	shf.l.wrap.b32 	%r12525, %r12519, %r12518, 25;
	mov.b64 	%rd9406, {%r12525, %r12524};
	xor.b64  	%rd9407, %rd9405, %rd9406;
	and.b64  	%rd9408, %rd9376, %rd9339;
	or.b64  	%rd9409, %rd9376, %rd9339;
	and.b64  	%rd9410, %rd9409, %rd9302;
	or.b64  	%rd9411, %rd9410, %rd9408;
	add.s64 	%rd9412, %rd9411, %rd9407;
	add.s64 	%rd9413, %rd9412, %rd9401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12526,%dummy}, %rd9352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12527}, %rd9352;
	}
	shf.r.wrap.b32 	%r12528, %r12527, %r12526, 19;
	shf.r.wrap.b32 	%r12529, %r12526, %r12527, 19;
	mov.b64 	%rd9414, {%r12529, %r12528};
	shf.l.wrap.b32 	%r12530, %r12526, %r12527, 3;
	shf.l.wrap.b32 	%r12531, %r12527, %r12526, 3;
	mov.b64 	%rd9415, {%r12531, %r12530};
	xor.b64  	%rd9416, %rd9414, %rd9415;
	shr.u64 	%rd9417, %rd9352, 6;
	xor.b64  	%rd9418, %rd9416, %rd9417;
	shf.r.wrap.b32 	%r12532, %r12189, %r12188, 1;
	shf.r.wrap.b32 	%r12533, %r12188, %r12189, 1;
	mov.b64 	%rd9419, {%r12533, %r12532};
	shf.r.wrap.b32 	%r12534, %r12189, %r12188, 8;
	shf.r.wrap.b32 	%r12535, %r12188, %r12189, 8;
	mov.b64 	%rd9420, {%r12535, %r12534};
	xor.b64  	%rd9421, %rd9419, %rd9420;
	shr.u64 	%rd9422, %rd8871, 7;
	xor.b64  	%rd9423, %rd9421, %rd9422;
	add.s64 	%rd9424, %rd9418, %rd8834;
	add.s64 	%rd9425, %rd9424, %rd9167;
	add.s64 	%rd9426, %rd9425, %rd9423;
	add.s64 	%rd9427, %rd9426, %rd9291;
	xor.b64  	%rd9428, %rd9365, %rd9328;
	and.b64  	%rd9429, %rd9402, %rd9428;
	xor.b64  	%rd9430, %rd9429, %rd9328;
	add.s64 	%rd9431, %rd9427, %rd9430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12536,%dummy}, %rd9402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12537}, %rd9402;
	}
	shf.r.wrap.b32 	%r12538, %r12537, %r12536, 14;
	shf.r.wrap.b32 	%r12539, %r12536, %r12537, 14;
	mov.b64 	%rd9432, {%r12539, %r12538};
	shf.r.wrap.b32 	%r12540, %r12537, %r12536, 18;
	shf.r.wrap.b32 	%r12541, %r12536, %r12537, 18;
	mov.b64 	%rd9433, {%r12541, %r12540};
	xor.b64  	%rd9434, %rd9432, %rd9433;
	shf.l.wrap.b32 	%r12542, %r12536, %r12537, 23;
	shf.l.wrap.b32 	%r12543, %r12537, %r12536, 23;
	mov.b64 	%rd9435, {%r12543, %r12542};
	xor.b64  	%rd9436, %rd9434, %rd9435;
	add.s64 	%rd9437, %rd9431, %rd9436;
	add.s64 	%rd9438, %rd9437, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12544,%dummy}, %rd9413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12545}, %rd9413;
	}
	shf.r.wrap.b32 	%r12546, %r12545, %r12544, 28;
	shf.r.wrap.b32 	%r12547, %r12544, %r12545, 28;
	mov.b64 	%rd9439, {%r12547, %r12546};
	shf.l.wrap.b32 	%r12548, %r12544, %r12545, 30;
	shf.l.wrap.b32 	%r12549, %r12545, %r12544, 30;
	mov.b64 	%rd9440, {%r12549, %r12548};
	xor.b64  	%rd9441, %rd9439, %rd9440;
	shf.l.wrap.b32 	%r12550, %r12544, %r12545, 25;
	shf.l.wrap.b32 	%r12551, %r12545, %r12544, 25;
	mov.b64 	%rd9442, {%r12551, %r12550};
	xor.b64  	%rd9443, %rd9441, %rd9442;
	and.b64  	%rd9444, %rd9413, %rd9376;
	or.b64  	%rd9445, %rd9413, %rd9376;
	and.b64  	%rd9446, %rd9445, %rd9339;
	or.b64  	%rd9447, %rd9446, %rd9444;
	add.s64 	%rd9448, %rd9443, %rd9447;
	add.s64 	%rd9449, %rd9448, %rd9438;
	add.s64 	%rd9450, %rd9449, 7640891576956012808;
	add.s64 	%rd9451, %rd9413, -4942790177534073029;
	add.s64 	%rd9452, %rd9376, 4354685564936845355;
	add.s64 	%rd9453, %rd9339, -6534734903238641935;
	add.s64 	%rd9454, %rd9302, %rd9438;
	add.s64 	%rd9455, %rd9454, 5840696475078001361;
	add.s64 	%rd9456, %rd9402, -7276294671716946913;
	add.s64 	%rd9457, %rd9365, 2270897969802886507;
	add.s64 	%rd9458, %rd9328, 6620516959819538809;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12552, %temp}, %rd9450;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12553}, %rd9450;
	}
	mov.u32 	%r12554, 291;
	mov.u32 	%r12555, 0;
	prmt.b32 	%r12556, %r12552, %r12555, %r12554;
	prmt.b32 	%r12557, %r12553, %r12555, %r12554;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12558, %temp}, %rd9451;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12559}, %rd9451;
	}
	prmt.b32 	%r12560, %r12558, %r12555, %r12554;
	prmt.b32 	%r12561, %r12559, %r12555, %r12554;
	mov.b64 	%rd9459, {%r12557, %r12556};
	mov.b64 	%rd9460, {%r12561, %r12560};
	st.local.v2.u64 	[%rd9519+192], {%rd9459, %rd9460};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12562, %temp}, %rd9452;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12563}, %rd9452;
	}
	prmt.b32 	%r12564, %r12562, %r12555, %r12554;
	prmt.b32 	%r12565, %r12563, %r12555, %r12554;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12566, %temp}, %rd9453;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12567}, %rd9453;
	}
	prmt.b32 	%r12568, %r12566, %r12555, %r12554;
	prmt.b32 	%r12569, %r12567, %r12555, %r12554;
	mov.b64 	%rd9461, {%r12565, %r12564};
	mov.b64 	%rd9462, {%r12569, %r12568};
	st.local.v2.u64 	[%rd9519+208], {%rd9461, %rd9462};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12570, %temp}, %rd9455;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12571}, %rd9455;
	}
	prmt.b32 	%r12572, %r12570, %r12555, %r12554;
	prmt.b32 	%r12573, %r12571, %r12555, %r12554;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12574, %temp}, %rd9456;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12575}, %rd9456;
	}
	prmt.b32 	%r12576, %r12574, %r12555, %r12554;
	prmt.b32 	%r12577, %r12575, %r12555, %r12554;
	mov.b64 	%rd9463, {%r12573, %r12572};
	mov.b64 	%rd9464, {%r12577, %r12576};
	st.local.v2.u64 	[%rd9519+224], {%rd9463, %rd9464};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12578, %temp}, %rd9457;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12579}, %rd9457;
	}
	prmt.b32 	%r12580, %r12578, %r12555, %r12554;
	prmt.b32 	%r12581, %r12579, %r12555, %r12554;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12582, %temp}, %rd9458;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12583}, %rd9458;
	}
	prmt.b32 	%r12584, %r12582, %r12555, %r12554;
	prmt.b32 	%r12585, %r12583, %r12555, %r12554;
	mov.b64 	%rd9465, {%r12581, %r12580};
	mov.b64 	%rd9466, {%r12585, %r12584};
	st.local.v2.u64 	[%rd9519+240], {%rd9465, %rd9466};
	ld.local.v2.u64 	{%rd9467, %rd9468}, [%rd9481];
	setp.eq.s64 	%p110, %rd9467, %rd9459;
	setp.eq.s64 	%p111, %rd9468, %rd9460;
	and.pred  	%p112, %p110, %p111;
	ld.local.v2.u64 	{%rd9471, %rd9472}, [%rd9481+16];
	setp.eq.s64 	%p113, %rd9471, %rd9461;
	and.pred  	%p114, %p112, %p113;
	setp.eq.s64 	%p115, %rd9472, %rd9462;
	and.pred  	%p116, %p114, %p115;
	selp.u32 	%r12586, 1, 0, %p116;
	shl.b64 	%rd9475, %rd9506, 2;
	add.s64 	%rd9476, %rd9505, %rd9475;
	st.global.u32 	[%rd9476], %r12586;
	ret;

}

  