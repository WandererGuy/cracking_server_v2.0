//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	sha1
// sha1_$_s_bitmaps has been demoted

.entry sha1(
	.param .u64 .ptr .global .align 4 sha1_param_0,
	.param .u64 .ptr .global .align 4 sha1_param_1,
	.param .u64 .ptr .global .align 4 sha1_param_2,
	.param .u64 .ptr .const .align 4 sha1_param_3,
	.param .u64 .ptr .global .align 4 sha1_param_4,
	.param .u64 .ptr .global .align 4 sha1_param_5,
	.param .u64 .ptr .global .align 4 sha1_param_6,
	.param .u64 .ptr .global .align 4 sha1_param_7,
	.param .u64 .ptr .global .align 4 sha1_param_8,
	.param .u64 .ptr .global .align 4 sha1_param_9
)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<32>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<1127>;
	.reg .b64 	%rd<101>;
	// demoted variable
	.shared .align 4 .b8 sha1_$_s_bitmaps[16384];

	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd6, [sha1_param_0];
	ld.param.u64 	%rd13, [sha1_param_1];
	ld.param.u64 	%rd7, [sha1_param_4];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r1126, %tid.x;
	mov.b32 	%r16, %envreg3;
	add.s32 	%r17, %r1126, %r16;
	mad.lo.s32 	%r3, %r1, %r15, %r17;
	mul.wide.u32 	%rd15, %r3, 4;
	add.s64 	%rd16, %rd13, %rd15;
	ld.global.u32 	%r4, [%rd16];
	mov.u32 	%r18, 0;
	st.local.v4.u32 	[%rd1], {%r18, %r18, %r18, %r18};
	st.local.v4.u32 	[%rd1+16], {%r18, %r18, %r18, %r18};
	st.local.v4.u32 	[%rd1+32], {%r18, %r18, %r18, %r18};
	st.local.v4.u32 	[%rd1+48], {%r18, %r18, %r18, %r18};
	and.b32  	%r5, %r4, 63;
	setp.gt.u32 	%p1, %r1126, 4095;
	@%p1 bra 	$L__BB0_2;

$L__BB0_1:
	mul.wide.u32 	%rd17, %r1126, 4;
	add.s64 	%rd18, %rd7, %rd17;
	ld.global.u32 	%r19, [%rd18];
	mov.u64 	%rd19, sha1_$_s_bitmaps;
	add.s64 	%rd20, %rd19, %rd17;
	st.shared.u32 	[%rd20], %r19;
	add.s32 	%r1126, %r1126, %r1;
	setp.lt.u32 	%p2, %r1126, 4096;
	@%p2 bra 	$L__BB0_1;

$L__BB0_2:
	bar.sync 	0;
	add.s32 	%r8, %r5, 3;
	and.b32  	%r20, %r8, 124;
	setp.eq.s32 	%p3, %r20, 0;
	@%p3 bra 	$L__BB0_19;

	shr.u32 	%r21, %r4, 6;
	mul.wide.u32 	%rd21, %r21, 4;
	add.s64 	%rd4, %rd6, %rd21;
	ld.global.u32 	%r22, [%rd4];
	shf.l.wrap.b32 	%r23, %r22, %r22, 16;
	shl.b32 	%r24, %r23, 8;
	and.b32  	%r25, %r24, -16711936;
	shr.u32 	%r26, %r23, 8;
	and.b32  	%r27, %r26, 16711935;
	or.b32  	%r28, %r25, %r27;
	st.local.u32 	[%rd1], %r28;
	setp.lt.u32 	%p4, %r8, 8;
	@%p4 bra 	$L__BB0_19;

	ld.global.u32 	%r29, [%rd4+4];
	shf.l.wrap.b32 	%r30, %r29, %r29, 16;
	shl.b32 	%r31, %r30, 8;
	and.b32  	%r32, %r31, -16711936;
	shr.u32 	%r33, %r30, 8;
	and.b32  	%r34, %r33, 16711935;
	or.b32  	%r35, %r32, %r34;
	st.local.u32 	[%rd1+4], %r35;
	setp.lt.u32 	%p5, %r8, 12;
	@%p5 bra 	$L__BB0_19;

	ld.global.u32 	%r36, [%rd4+8];
	shf.l.wrap.b32 	%r37, %r36, %r36, 16;
	shl.b32 	%r38, %r37, 8;
	and.b32  	%r39, %r38, -16711936;
	shr.u32 	%r40, %r37, 8;
	and.b32  	%r41, %r40, 16711935;
	or.b32  	%r42, %r39, %r41;
	st.local.u32 	[%rd1+8], %r42;
	setp.lt.u32 	%p6, %r8, 16;
	@%p6 bra 	$L__BB0_19;

	ld.global.u32 	%r43, [%rd4+12];
	shf.l.wrap.b32 	%r44, %r43, %r43, 16;
	shl.b32 	%r45, %r44, 8;
	and.b32  	%r46, %r45, -16711936;
	shr.u32 	%r47, %r44, 8;
	and.b32  	%r48, %r47, 16711935;
	or.b32  	%r49, %r46, %r48;
	st.local.u32 	[%rd1+12], %r49;
	setp.lt.u32 	%p7, %r8, 20;
	@%p7 bra 	$L__BB0_19;

	ld.global.u32 	%r50, [%rd4+16];
	shf.l.wrap.b32 	%r51, %r50, %r50, 16;
	shl.b32 	%r52, %r51, 8;
	and.b32  	%r53, %r52, -16711936;
	shr.u32 	%r54, %r51, 8;
	and.b32  	%r55, %r54, 16711935;
	or.b32  	%r56, %r53, %r55;
	st.local.u32 	[%rd1+16], %r56;
	setp.lt.u32 	%p8, %r8, 24;
	@%p8 bra 	$L__BB0_19;

	ld.global.u32 	%r57, [%rd4+20];
	shf.l.wrap.b32 	%r58, %r57, %r57, 16;
	shl.b32 	%r59, %r58, 8;
	and.b32  	%r60, %r59, -16711936;
	shr.u32 	%r61, %r58, 8;
	and.b32  	%r62, %r61, 16711935;
	or.b32  	%r63, %r60, %r62;
	st.local.u32 	[%rd1+20], %r63;
	setp.lt.u32 	%p9, %r8, 28;
	@%p9 bra 	$L__BB0_19;

	ld.global.u32 	%r64, [%rd4+24];
	shf.l.wrap.b32 	%r65, %r64, %r64, 16;
	shl.b32 	%r66, %r65, 8;
	and.b32  	%r67, %r66, -16711936;
	shr.u32 	%r68, %r65, 8;
	and.b32  	%r69, %r68, 16711935;
	or.b32  	%r70, %r67, %r69;
	st.local.u32 	[%rd1+24], %r70;
	setp.lt.u32 	%p10, %r8, 32;
	@%p10 bra 	$L__BB0_19;

	ld.global.u32 	%r71, [%rd4+28];
	shf.l.wrap.b32 	%r72, %r71, %r71, 16;
	shl.b32 	%r73, %r72, 8;
	and.b32  	%r74, %r73, -16711936;
	shr.u32 	%r75, %r72, 8;
	and.b32  	%r76, %r75, 16711935;
	or.b32  	%r77, %r74, %r76;
	st.local.u32 	[%rd1+28], %r77;
	setp.lt.u32 	%p11, %r8, 36;
	@%p11 bra 	$L__BB0_19;

	ld.global.u32 	%r78, [%rd4+32];
	shf.l.wrap.b32 	%r79, %r78, %r78, 16;
	shl.b32 	%r80, %r79, 8;
	and.b32  	%r81, %r80, -16711936;
	shr.u32 	%r82, %r79, 8;
	and.b32  	%r83, %r82, 16711935;
	or.b32  	%r84, %r81, %r83;
	st.local.u32 	[%rd1+32], %r84;
	setp.lt.u32 	%p12, %r8, 40;
	@%p12 bra 	$L__BB0_19;

	ld.global.u32 	%r85, [%rd4+36];
	shf.l.wrap.b32 	%r86, %r85, %r85, 16;
	shl.b32 	%r87, %r86, 8;
	and.b32  	%r88, %r87, -16711936;
	shr.u32 	%r89, %r86, 8;
	and.b32  	%r90, %r89, 16711935;
	or.b32  	%r91, %r88, %r90;
	st.local.u32 	[%rd1+36], %r91;
	setp.lt.u32 	%p13, %r8, 44;
	@%p13 bra 	$L__BB0_19;

	ld.global.u32 	%r92, [%rd4+40];
	shf.l.wrap.b32 	%r93, %r92, %r92, 16;
	shl.b32 	%r94, %r93, 8;
	and.b32  	%r95, %r94, -16711936;
	shr.u32 	%r96, %r93, 8;
	and.b32  	%r97, %r96, 16711935;
	or.b32  	%r98, %r95, %r97;
	st.local.u32 	[%rd1+40], %r98;
	setp.lt.u32 	%p14, %r8, 48;
	@%p14 bra 	$L__BB0_19;

	ld.global.u32 	%r99, [%rd4+44];
	shf.l.wrap.b32 	%r100, %r99, %r99, 16;
	shl.b32 	%r101, %r100, 8;
	and.b32  	%r102, %r101, -16711936;
	shr.u32 	%r103, %r100, 8;
	and.b32  	%r104, %r103, 16711935;
	or.b32  	%r105, %r102, %r104;
	st.local.u32 	[%rd1+44], %r105;
	setp.lt.u32 	%p15, %r8, 52;
	@%p15 bra 	$L__BB0_19;

	ld.global.u32 	%r106, [%rd4+48];
	shf.l.wrap.b32 	%r107, %r106, %r106, 16;
	shl.b32 	%r108, %r107, 8;
	and.b32  	%r109, %r108, -16711936;
	shr.u32 	%r110, %r107, 8;
	and.b32  	%r111, %r110, 16711935;
	or.b32  	%r112, %r109, %r111;
	st.local.u32 	[%rd1+48], %r112;
	setp.lt.u32 	%p16, %r8, 56;
	@%p16 bra 	$L__BB0_19;

	ld.global.u32 	%r113, [%rd4+52];
	shf.l.wrap.b32 	%r114, %r113, %r113, 16;
	shl.b32 	%r115, %r114, 8;
	and.b32  	%r116, %r115, -16711936;
	shr.u32 	%r117, %r114, 8;
	and.b32  	%r118, %r117, 16711935;
	or.b32  	%r119, %r116, %r118;
	st.local.u32 	[%rd1+52], %r119;
	setp.lt.u32 	%p17, %r8, 60;
	@%p17 bra 	$L__BB0_19;

	ld.global.u32 	%r120, [%rd4+56];
	shf.l.wrap.b32 	%r121, %r120, %r120, 16;
	shl.b32 	%r122, %r121, 8;
	and.b32  	%r123, %r122, -16711936;
	shr.u32 	%r124, %r121, 8;
	and.b32  	%r125, %r124, 16711935;
	or.b32  	%r126, %r123, %r125;
	st.local.u32 	[%rd1+56], %r126;
	setp.lt.u32 	%p18, %r8, 64;
	@%p18 bra 	$L__BB0_19;

	ld.global.u32 	%r127, [%rd4+60];
	shf.l.wrap.b32 	%r128, %r127, %r127, 16;
	shl.b32 	%r129, %r128, 8;
	and.b32  	%r130, %r129, -16711936;
	shr.u32 	%r131, %r128, 8;
	and.b32  	%r132, %r131, 16711935;
	or.b32  	%r133, %r130, %r132;
	st.local.u32 	[%rd1+60], %r133;

$L__BB0_19:
	xor.b32  	%r454, %r5, 3;
	cvt.u64.u32 	%rd22, %r454;
	add.s64 	%rd23, %rd1, %rd22;
	mov.u16 	%rs1, 128;
	st.local.u8 	[%rd23], %rs1;
	shl.b32 	%r455, %r5, 3;
	st.local.u32 	[%rd1+60], %r455;
	ld.local.v4.u32 	{%r456, %r457, %r458, %r459}, [%rd1];
	mov.u32 	%r139, 1732584193;
	shf.l.wrap.b32 	%r464, %r139, %r139, 5;
	mov.u32 	%r135, -271733879;
	mov.u32 	%r141, -1732584194;
	mov.u32 	%r137, 271733878;
	// begin inline asm
	lop3.b32 %r134, %r135, %r141, %r137, 202;
	// end inline asm
	add.s32 	%r465, %r464, %r134;
	add.s32 	%r466, %r465, %r456;
	add.s32 	%r143, %r466, 508910473;
	shf.l.wrap.b32 	%r467, %r143, %r143, 5;
	shf.l.wrap.b32 	%r145, %r135, %r135, 30;
	// begin inline asm
	lop3.b32 %r138, %r139, %r145, %r141, 202;
	// end inline asm
	add.s32 	%r468, %r138, %r457;
	add.s32 	%r469, %r468, %r467;
	add.s32 	%r147, %r469, 1790234127;
	shf.l.wrap.b32 	%r470, %r147, %r147, 5;
	shf.l.wrap.b32 	%r149, %r139, %r139, 30;
	// begin inline asm
	lop3.b32 %r142, %r143, %r149, %r145, 202;
	// end inline asm
	add.s32 	%r471, %r142, %r458;
	add.s32 	%r472, %r471, %r470;
	add.s32 	%r151, %r472, -214083945;
	shf.l.wrap.b32 	%r153, %r143, %r143, 30;
	shf.l.wrap.b32 	%r473, %r151, %r151, 5;
	// begin inline asm
	lop3.b32 %r146, %r147, %r153, %r149, 202;
	// end inline asm
	add.s32 	%r474, %r145, %r146;
	add.s32 	%r475, %r474, %r459;
	add.s32 	%r476, %r475, %r473;
	add.s32 	%r155, %r476, 1518500249;
	shf.l.wrap.b32 	%r157, %r147, %r147, 30;
	shf.l.wrap.b32 	%r477, %r155, %r155, 5;
	// begin inline asm
	lop3.b32 %r150, %r151, %r157, %r153, 202;
	// end inline asm
	ld.local.v4.u32 	{%r478, %r479, %r480, %r481}, [%rd1+16];
	add.s32 	%r486, %r149, %r150;
	add.s32 	%r487, %r486, %r478;
	add.s32 	%r488, %r487, %r477;
	add.s32 	%r159, %r488, 1518500249;
	shf.l.wrap.b32 	%r161, %r151, %r151, 30;
	shf.l.wrap.b32 	%r489, %r159, %r159, 5;
	// begin inline asm
	lop3.b32 %r154, %r155, %r161, %r157, 202;
	// end inline asm
	add.s32 	%r490, %r153, %r154;
	add.s32 	%r491, %r490, %r479;
	add.s32 	%r492, %r491, %r489;
	add.s32 	%r163, %r492, 1518500249;
	shf.l.wrap.b32 	%r165, %r155, %r155, 30;
	shf.l.wrap.b32 	%r493, %r163, %r163, 5;
	// begin inline asm
	lop3.b32 %r158, %r159, %r165, %r161, 202;
	// end inline asm
	add.s32 	%r494, %r157, %r158;
	add.s32 	%r495, %r494, %r480;
	add.s32 	%r496, %r495, %r493;
	add.s32 	%r167, %r496, 1518500249;
	shf.l.wrap.b32 	%r169, %r159, %r159, 30;
	shf.l.wrap.b32 	%r497, %r167, %r167, 5;
	// begin inline asm
	lop3.b32 %r162, %r163, %r169, %r165, 202;
	// end inline asm
	add.s32 	%r498, %r162, %r481;
	add.s32 	%r499, %r498, %r161;
	add.s32 	%r500, %r499, %r497;
	add.s32 	%r171, %r500, 1518500249;
	shf.l.wrap.b32 	%r173, %r163, %r163, 30;
	shf.l.wrap.b32 	%r501, %r171, %r171, 5;
	// begin inline asm
	lop3.b32 %r166, %r167, %r173, %r169, 202;
	// end inline asm
	ld.local.v4.u32 	{%r502, %r503, %r504, %r505}, [%rd1+32];
	add.s32 	%r510, %r166, %r502;
	add.s32 	%r511, %r510, %r165;
	add.s32 	%r512, %r511, %r501;
	add.s32 	%r175, %r512, 1518500249;
	shf.l.wrap.b32 	%r177, %r167, %r167, 30;
	shf.l.wrap.b32 	%r513, %r175, %r175, 5;
	// begin inline asm
	lop3.b32 %r170, %r171, %r177, %r173, 202;
	// end inline asm
	add.s32 	%r514, %r170, %r503;
	add.s32 	%r515, %r514, %r169;
	add.s32 	%r516, %r515, %r513;
	add.s32 	%r179, %r516, 1518500249;
	shf.l.wrap.b32 	%r181, %r171, %r171, 30;
	shf.l.wrap.b32 	%r517, %r179, %r179, 5;
	// begin inline asm
	lop3.b32 %r174, %r175, %r181, %r177, 202;
	// end inline asm
	add.s32 	%r518, %r174, %r504;
	add.s32 	%r519, %r518, %r173;
	add.s32 	%r520, %r519, %r517;
	add.s32 	%r183, %r520, 1518500249;
	shf.l.wrap.b32 	%r185, %r175, %r175, 30;
	shf.l.wrap.b32 	%r521, %r183, %r183, 5;
	// begin inline asm
	lop3.b32 %r178, %r179, %r185, %r181, 202;
	// end inline asm
	add.s32 	%r522, %r178, %r505;
	add.s32 	%r523, %r522, %r177;
	add.s32 	%r524, %r523, %r521;
	add.s32 	%r187, %r524, 1518500249;
	shf.l.wrap.b32 	%r189, %r179, %r179, 30;
	shf.l.wrap.b32 	%r525, %r187, %r187, 5;
	// begin inline asm
	lop3.b32 %r182, %r183, %r189, %r185, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r526, %r527, %r528, %r529}, [%rd1+48];
	add.s32 	%r533, %r182, %r526;
	add.s32 	%r534, %r533, %r181;
	add.s32 	%r535, %r534, %r525;
	add.s32 	%r191, %r535, 1518500249;
	shf.l.wrap.b32 	%r193, %r183, %r183, 30;
	shf.l.wrap.b32 	%r536, %r191, %r191, 5;
	// begin inline asm
	lop3.b32 %r186, %r187, %r193, %r189, 202;
	// end inline asm
	add.s32 	%r537, %r186, %r527;
	add.s32 	%r538, %r537, %r185;
	add.s32 	%r539, %r538, %r536;
	add.s32 	%r195, %r539, 1518500249;
	shf.l.wrap.b32 	%r197, %r187, %r187, 30;
	shf.l.wrap.b32 	%r540, %r195, %r195, 5;
	// begin inline asm
	lop3.b32 %r190, %r191, %r197, %r193, 202;
	// end inline asm
	add.s32 	%r541, %r190, %r528;
	add.s32 	%r542, %r541, %r189;
	add.s32 	%r543, %r542, %r540;
	add.s32 	%r199, %r543, 1518500249;
	shf.l.wrap.b32 	%r201, %r191, %r191, 30;
	shf.l.wrap.b32 	%r544, %r199, %r199, 5;
	// begin inline asm
	lop3.b32 %r194, %r195, %r201, %r197, 202;
	// end inline asm
	add.s32 	%r545, %r194, %r455;
	add.s32 	%r546, %r545, %r193;
	add.s32 	%r547, %r546, %r544;
	add.s32 	%r203, %r547, 1518500249;
	shf.l.wrap.b32 	%r205, %r195, %r195, 30;
	shf.l.wrap.b32 	%r548, %r203, %r203, 5;
	// begin inline asm
	lop3.b32 %r198, %r199, %r205, %r201, 202;
	// end inline asm
	xor.b32  	%r549, %r502, %r527;
	xor.b32  	%r550, %r549, %r458;
	xor.b32  	%r551, %r550, %r456;
	shf.l.wrap.b32 	%r552, %r551, %r551, 1;
	add.s32 	%r553, %r198, %r552;
	add.s32 	%r554, %r553, %r197;
	add.s32 	%r555, %r554, %r548;
	add.s32 	%r207, %r555, 1518500249;
	shf.l.wrap.b32 	%r209, %r199, %r199, 30;
	shf.l.wrap.b32 	%r556, %r207, %r207, 5;
	// begin inline asm
	lop3.b32 %r202, %r203, %r209, %r205, 202;
	// end inline asm
	xor.b32  	%r557, %r503, %r528;
	xor.b32  	%r558, %r557, %r459;
	xor.b32  	%r559, %r558, %r457;
	shf.l.wrap.b32 	%r560, %r559, %r559, 1;
	add.s32 	%r561, %r202, %r560;
	add.s32 	%r562, %r561, %r201;
	add.s32 	%r563, %r562, %r556;
	add.s32 	%r211, %r563, 1518500249;
	shf.l.wrap.b32 	%r213, %r203, %r203, 30;
	shf.l.wrap.b32 	%r564, %r211, %r211, 5;
	// begin inline asm
	lop3.b32 %r206, %r207, %r213, %r209, 202;
	// end inline asm
	xor.b32  	%r565, %r504, %r455;
	xor.b32  	%r566, %r565, %r478;
	xor.b32  	%r567, %r566, %r458;
	shf.l.wrap.b32 	%r568, %r567, %r567, 1;
	add.s32 	%r569, %r206, %r568;
	add.s32 	%r570, %r569, %r205;
	add.s32 	%r571, %r570, %r564;
	add.s32 	%r215, %r571, 1518500249;
	shf.l.wrap.b32 	%r217, %r207, %r207, 30;
	shf.l.wrap.b32 	%r572, %r215, %r215, 5;
	// begin inline asm
	lop3.b32 %r210, %r211, %r217, %r213, 202;
	// end inline asm
	xor.b32  	%r573, %r505, %r552;
	xor.b32  	%r574, %r573, %r479;
	xor.b32  	%r575, %r574, %r459;
	shf.l.wrap.b32 	%r576, %r575, %r575, 1;
	add.s32 	%r577, %r210, %r576;
	add.s32 	%r578, %r577, %r209;
	add.s32 	%r579, %r578, %r572;
	add.s32 	%r219, %r579, 1518500249;
	shf.l.wrap.b32 	%r221, %r211, %r211, 30;
	shf.l.wrap.b32 	%r580, %r219, %r219, 5;
	// begin inline asm
	lop3.b32 %r214, %r215, %r221, %r217, 150;
	// end inline asm
	xor.b32  	%r581, %r526, %r560;
	xor.b32  	%r582, %r581, %r480;
	xor.b32  	%r583, %r582, %r478;
	shf.l.wrap.b32 	%r584, %r583, %r583, 1;
	add.s32 	%r585, %r214, %r584;
	add.s32 	%r586, %r585, %r213;
	add.s32 	%r587, %r586, %r580;
	add.s32 	%r223, %r587, 1859775393;
	shf.l.wrap.b32 	%r225, %r215, %r215, 30;
	shf.l.wrap.b32 	%r588, %r223, %r223, 5;
	// begin inline asm
	lop3.b32 %r218, %r219, %r225, %r221, 150;
	// end inline asm
	xor.b32  	%r589, %r527, %r568;
	xor.b32  	%r590, %r589, %r481;
	xor.b32  	%r591, %r590, %r479;
	shf.l.wrap.b32 	%r592, %r591, %r591, 1;
	add.s32 	%r593, %r218, %r592;
	add.s32 	%r594, %r593, %r217;
	add.s32 	%r595, %r594, %r588;
	add.s32 	%r227, %r595, 1859775393;
	shf.l.wrap.b32 	%r229, %r219, %r219, 30;
	shf.l.wrap.b32 	%r596, %r227, %r227, 5;
	// begin inline asm
	lop3.b32 %r222, %r223, %r229, %r225, 150;
	// end inline asm
	xor.b32  	%r597, %r528, %r576;
	xor.b32  	%r598, %r597, %r502;
	xor.b32  	%r599, %r598, %r480;
	shf.l.wrap.b32 	%r600, %r599, %r599, 1;
	add.s32 	%r601, %r222, %r600;
	add.s32 	%r602, %r601, %r221;
	add.s32 	%r603, %r602, %r596;
	add.s32 	%r231, %r603, 1859775393;
	shf.l.wrap.b32 	%r233, %r223, %r223, 30;
	shf.l.wrap.b32 	%r604, %r231, %r231, 5;
	// begin inline asm
	lop3.b32 %r226, %r227, %r233, %r229, 150;
	// end inline asm
	xor.b32  	%r605, %r455, %r584;
	xor.b32  	%r606, %r605, %r503;
	xor.b32  	%r607, %r606, %r481;
	shf.l.wrap.b32 	%r608, %r607, %r607, 1;
	add.s32 	%r609, %r226, %r608;
	add.s32 	%r610, %r609, %r225;
	add.s32 	%r611, %r610, %r604;
	add.s32 	%r235, %r611, 1859775393;
	shf.l.wrap.b32 	%r237, %r227, %r227, 30;
	shf.l.wrap.b32 	%r612, %r235, %r235, 5;
	// begin inline asm
	lop3.b32 %r230, %r231, %r237, %r233, 150;
	// end inline asm
	xor.b32  	%r613, %r592, %r552;
	xor.b32  	%r614, %r613, %r504;
	xor.b32  	%r615, %r614, %r502;
	shf.l.wrap.b32 	%r616, %r615, %r615, 1;
	add.s32 	%r617, %r230, %r616;
	add.s32 	%r618, %r617, %r229;
	add.s32 	%r619, %r618, %r612;
	add.s32 	%r239, %r619, 1859775393;
	shf.l.wrap.b32 	%r241, %r231, %r231, 30;
	shf.l.wrap.b32 	%r620, %r239, %r239, 5;
	// begin inline asm
	lop3.b32 %r234, %r235, %r241, %r237, 150;
	// end inline asm
	xor.b32  	%r621, %r600, %r560;
	xor.b32  	%r622, %r621, %r505;
	xor.b32  	%r623, %r622, %r503;
	shf.l.wrap.b32 	%r624, %r623, %r623, 1;
	add.s32 	%r625, %r234, %r624;
	add.s32 	%r626, %r625, %r233;
	add.s32 	%r627, %r626, %r620;
	add.s32 	%r243, %r627, 1859775393;
	shf.l.wrap.b32 	%r245, %r235, %r235, 30;
	shf.l.wrap.b32 	%r628, %r243, %r243, 5;
	// begin inline asm
	lop3.b32 %r238, %r239, %r245, %r241, 150;
	// end inline asm
	xor.b32  	%r629, %r608, %r568;
	xor.b32  	%r630, %r629, %r526;
	xor.b32  	%r631, %r630, %r504;
	shf.l.wrap.b32 	%r632, %r631, %r631, 1;
	add.s32 	%r633, %r238, %r632;
	add.s32 	%r634, %r633, %r237;
	add.s32 	%r635, %r634, %r628;
	add.s32 	%r247, %r635, 1859775393;
	shf.l.wrap.b32 	%r249, %r239, %r239, 30;
	shf.l.wrap.b32 	%r636, %r247, %r247, 5;
	// begin inline asm
	lop3.b32 %r242, %r243, %r249, %r245, 150;
	// end inline asm
	xor.b32  	%r637, %r616, %r576;
	xor.b32  	%r638, %r637, %r527;
	xor.b32  	%r639, %r638, %r505;
	shf.l.wrap.b32 	%r640, %r639, %r639, 1;
	add.s32 	%r641, %r242, %r640;
	add.s32 	%r642, %r641, %r241;
	add.s32 	%r643, %r642, %r636;
	add.s32 	%r251, %r643, 1859775393;
	shf.l.wrap.b32 	%r253, %r243, %r243, 30;
	shf.l.wrap.b32 	%r644, %r251, %r251, 5;
	// begin inline asm
	lop3.b32 %r246, %r247, %r253, %r249, 150;
	// end inline asm
	xor.b32  	%r645, %r624, %r584;
	xor.b32  	%r646, %r645, %r528;
	xor.b32  	%r647, %r646, %r526;
	shf.l.wrap.b32 	%r648, %r647, %r647, 1;
	add.s32 	%r649, %r246, %r648;
	add.s32 	%r650, %r649, %r245;
	add.s32 	%r651, %r650, %r644;
	add.s32 	%r255, %r651, 1859775393;
	shf.l.wrap.b32 	%r257, %r247, %r247, 30;
	shf.l.wrap.b32 	%r652, %r255, %r255, 5;
	// begin inline asm
	lop3.b32 %r250, %r251, %r257, %r253, 150;
	// end inline asm
	xor.b32  	%r653, %r632, %r592;
	xor.b32  	%r654, %r653, %r455;
	xor.b32  	%r655, %r654, %r527;
	shf.l.wrap.b32 	%r656, %r655, %r655, 1;
	add.s32 	%r657, %r250, %r656;
	add.s32 	%r658, %r657, %r249;
	add.s32 	%r659, %r658, %r652;
	add.s32 	%r259, %r659, 1859775393;
	shf.l.wrap.b32 	%r261, %r251, %r251, 30;
	shf.l.wrap.b32 	%r660, %r259, %r259, 5;
	// begin inline asm
	lop3.b32 %r254, %r255, %r261, %r257, 150;
	// end inline asm
	xor.b32  	%r661, %r600, %r552;
	xor.b32  	%r662, %r661, %r640;
	xor.b32  	%r663, %r662, %r528;
	shf.l.wrap.b32 	%r664, %r663, %r663, 1;
	add.s32 	%r665, %r254, %r664;
	add.s32 	%r666, %r665, %r253;
	add.s32 	%r667, %r666, %r660;
	add.s32 	%r263, %r667, 1859775393;
	shf.l.wrap.b32 	%r265, %r255, %r255, 30;
	shf.l.wrap.b32 	%r668, %r263, %r263, 5;
	// begin inline asm
	lop3.b32 %r258, %r259, %r265, %r261, 150;
	// end inline asm
	xor.b32  	%r669, %r608, %r560;
	xor.b32  	%r670, %r669, %r648;
	xor.b32  	%r671, %r670, %r455;
	shf.l.wrap.b32 	%r672, %r671, %r671, 1;
	add.s32 	%r673, %r258, %r672;
	add.s32 	%r674, %r673, %r257;
	add.s32 	%r675, %r674, %r668;
	add.s32 	%r267, %r675, 1859775393;
	shf.l.wrap.b32 	%r269, %r259, %r259, 30;
	shf.l.wrap.b32 	%r676, %r267, %r267, 5;
	// begin inline asm
	lop3.b32 %r262, %r263, %r269, %r265, 150;
	// end inline asm
	xor.b32  	%r677, %r568, %r552;
	xor.b32  	%r678, %r677, %r616;
	xor.b32  	%r679, %r678, %r656;
	shf.l.wrap.b32 	%r680, %r679, %r679, 1;
	add.s32 	%r681, %r262, %r680;
	add.s32 	%r682, %r681, %r261;
	add.s32 	%r683, %r682, %r676;
	add.s32 	%r271, %r683, 1859775393;
	shf.l.wrap.b32 	%r273, %r263, %r263, 30;
	shf.l.wrap.b32 	%r684, %r271, %r271, 5;
	// begin inline asm
	lop3.b32 %r266, %r267, %r273, %r269, 150;
	// end inline asm
	xor.b32  	%r685, %r576, %r560;
	xor.b32  	%r686, %r685, %r624;
	xor.b32  	%r687, %r686, %r664;
	shf.l.wrap.b32 	%r688, %r687, %r687, 1;
	add.s32 	%r689, %r266, %r688;
	add.s32 	%r690, %r689, %r265;
	add.s32 	%r691, %r690, %r684;
	add.s32 	%r275, %r691, 1859775393;
	shf.l.wrap.b32 	%r277, %r267, %r267, 30;
	shf.l.wrap.b32 	%r692, %r275, %r275, 5;
	// begin inline asm
	lop3.b32 %r270, %r271, %r277, %r273, 150;
	// end inline asm
	xor.b32  	%r693, %r584, %r568;
	xor.b32  	%r694, %r693, %r632;
	xor.b32  	%r695, %r694, %r672;
	shf.l.wrap.b32 	%r696, %r695, %r695, 1;
	add.s32 	%r697, %r270, %r696;
	add.s32 	%r698, %r697, %r269;
	add.s32 	%r699, %r698, %r692;
	add.s32 	%r279, %r699, 1859775393;
	shf.l.wrap.b32 	%r281, %r271, %r271, 30;
	shf.l.wrap.b32 	%r700, %r279, %r279, 5;
	// begin inline asm
	lop3.b32 %r274, %r275, %r281, %r277, 150;
	// end inline asm
	xor.b32  	%r701, %r592, %r576;
	xor.b32  	%r702, %r701, %r640;
	xor.b32  	%r703, %r702, %r680;
	shf.l.wrap.b32 	%r704, %r703, %r703, 1;
	add.s32 	%r705, %r274, %r704;
	add.s32 	%r706, %r705, %r273;
	add.s32 	%r707, %r706, %r700;
	add.s32 	%r283, %r707, 1859775393;
	shf.l.wrap.b32 	%r285, %r275, %r275, 30;
	shf.l.wrap.b32 	%r708, %r283, %r283, 5;
	// begin inline asm
	lop3.b32 %r278, %r279, %r285, %r281, 150;
	// end inline asm
	xor.b32  	%r709, %r600, %r584;
	xor.b32  	%r710, %r709, %r648;
	xor.b32  	%r711, %r710, %r688;
	shf.l.wrap.b32 	%r712, %r711, %r711, 1;
	add.s32 	%r713, %r278, %r712;
	add.s32 	%r714, %r713, %r277;
	add.s32 	%r715, %r714, %r708;
	add.s32 	%r287, %r715, 1859775393;
	shf.l.wrap.b32 	%r289, %r279, %r279, 30;
	shf.l.wrap.b32 	%r716, %r287, %r287, 5;
	// begin inline asm
	lop3.b32 %r282, %r283, %r289, %r285, 150;
	// end inline asm
	xor.b32  	%r717, %r608, %r592;
	xor.b32  	%r718, %r717, %r656;
	xor.b32  	%r719, %r718, %r696;
	shf.l.wrap.b32 	%r720, %r719, %r719, 1;
	add.s32 	%r721, %r282, %r720;
	add.s32 	%r722, %r721, %r281;
	add.s32 	%r723, %r722, %r716;
	add.s32 	%r291, %r723, 1859775393;
	shf.l.wrap.b32 	%r293, %r283, %r283, 30;
	shf.l.wrap.b32 	%r724, %r291, %r291, 5;
	// begin inline asm
	lop3.b32 %r286, %r287, %r293, %r289, 150;
	// end inline asm
	xor.b32  	%r725, %r616, %r600;
	xor.b32  	%r726, %r725, %r664;
	xor.b32  	%r727, %r726, %r704;
	shf.l.wrap.b32 	%r728, %r727, %r727, 1;
	add.s32 	%r729, %r286, %r728;
	add.s32 	%r730, %r729, %r285;
	add.s32 	%r731, %r730, %r724;
	add.s32 	%r295, %r731, 1859775393;
	shf.l.wrap.b32 	%r297, %r287, %r287, 30;
	shf.l.wrap.b32 	%r732, %r295, %r295, 5;
	// begin inline asm
	lop3.b32 %r290, %r291, %r297, %r293, 150;
	// end inline asm
	xor.b32  	%r733, %r624, %r608;
	xor.b32  	%r734, %r733, %r672;
	xor.b32  	%r735, %r734, %r712;
	shf.l.wrap.b32 	%r736, %r735, %r735, 1;
	add.s32 	%r737, %r290, %r736;
	add.s32 	%r738, %r737, %r289;
	add.s32 	%r739, %r738, %r732;
	add.s32 	%r299, %r739, 1859775393;
	shf.l.wrap.b32 	%r301, %r291, %r291, 30;
	shf.l.wrap.b32 	%r740, %r299, %r299, 5;
	// begin inline asm
	lop3.b32 %r294, %r295, %r301, %r297, 232;
	// end inline asm
	xor.b32  	%r741, %r632, %r616;
	xor.b32  	%r742, %r741, %r680;
	xor.b32  	%r743, %r742, %r720;
	shf.l.wrap.b32 	%r744, %r743, %r743, 1;
	add.s32 	%r745, %r294, %r744;
	add.s32 	%r746, %r745, %r293;
	add.s32 	%r747, %r746, %r740;
	add.s32 	%r303, %r747, -1894007588;
	shf.l.wrap.b32 	%r305, %r295, %r295, 30;
	shf.l.wrap.b32 	%r748, %r303, %r303, 5;
	// begin inline asm
	lop3.b32 %r298, %r299, %r305, %r301, 232;
	// end inline asm
	xor.b32  	%r749, %r640, %r624;
	xor.b32  	%r750, %r749, %r688;
	xor.b32  	%r751, %r750, %r728;
	shf.l.wrap.b32 	%r752, %r751, %r751, 1;
	add.s32 	%r753, %r298, %r752;
	add.s32 	%r754, %r753, %r297;
	add.s32 	%r755, %r754, %r748;
	add.s32 	%r307, %r755, -1894007588;
	shf.l.wrap.b32 	%r309, %r299, %r299, 30;
	shf.l.wrap.b32 	%r756, %r307, %r307, 5;
	// begin inline asm
	lop3.b32 %r302, %r303, %r309, %r305, 232;
	// end inline asm
	xor.b32  	%r757, %r648, %r632;
	xor.b32  	%r758, %r757, %r696;
	xor.b32  	%r759, %r758, %r736;
	shf.l.wrap.b32 	%r760, %r759, %r759, 1;
	add.s32 	%r761, %r302, %r760;
	add.s32 	%r762, %r761, %r301;
	add.s32 	%r763, %r762, %r756;
	add.s32 	%r311, %r763, -1894007588;
	shf.l.wrap.b32 	%r313, %r303, %r303, 30;
	shf.l.wrap.b32 	%r764, %r311, %r311, 5;
	// begin inline asm
	lop3.b32 %r306, %r307, %r313, %r309, 232;
	// end inline asm
	xor.b32  	%r765, %r656, %r640;
	xor.b32  	%r766, %r765, %r704;
	xor.b32  	%r767, %r766, %r744;
	shf.l.wrap.b32 	%r768, %r767, %r767, 1;
	add.s32 	%r769, %r306, %r768;
	add.s32 	%r770, %r769, %r305;
	add.s32 	%r771, %r770, %r764;
	add.s32 	%r315, %r771, -1894007588;
	shf.l.wrap.b32 	%r317, %r307, %r307, 30;
	shf.l.wrap.b32 	%r772, %r315, %r315, 5;
	// begin inline asm
	lop3.b32 %r310, %r311, %r317, %r313, 232;
	// end inline asm
	xor.b32  	%r773, %r664, %r648;
	xor.b32  	%r774, %r773, %r712;
	xor.b32  	%r775, %r774, %r752;
	shf.l.wrap.b32 	%r776, %r775, %r775, 1;
	add.s32 	%r777, %r310, %r776;
	add.s32 	%r778, %r777, %r309;
	add.s32 	%r779, %r778, %r772;
	add.s32 	%r319, %r779, -1894007588;
	shf.l.wrap.b32 	%r321, %r311, %r311, 30;
	shf.l.wrap.b32 	%r780, %r319, %r319, 5;
	// begin inline asm
	lop3.b32 %r314, %r315, %r321, %r317, 232;
	// end inline asm
	xor.b32  	%r781, %r672, %r656;
	xor.b32  	%r782, %r781, %r720;
	xor.b32  	%r783, %r782, %r760;
	shf.l.wrap.b32 	%r784, %r783, %r783, 1;
	add.s32 	%r785, %r314, %r784;
	add.s32 	%r786, %r785, %r313;
	add.s32 	%r787, %r786, %r780;
	add.s32 	%r323, %r787, -1894007588;
	shf.l.wrap.b32 	%r325, %r315, %r315, 30;
	shf.l.wrap.b32 	%r788, %r323, %r323, 5;
	// begin inline asm
	lop3.b32 %r318, %r319, %r325, %r321, 232;
	// end inline asm
	xor.b32  	%r789, %r680, %r664;
	xor.b32  	%r790, %r789, %r728;
	xor.b32  	%r791, %r790, %r768;
	shf.l.wrap.b32 	%r792, %r791, %r791, 1;
	add.s32 	%r793, %r318, %r792;
	add.s32 	%r794, %r793, %r317;
	add.s32 	%r795, %r794, %r788;
	add.s32 	%r327, %r795, -1894007588;
	shf.l.wrap.b32 	%r329, %r319, %r319, 30;
	shf.l.wrap.b32 	%r796, %r327, %r327, 5;
	// begin inline asm
	lop3.b32 %r322, %r323, %r329, %r325, 232;
	// end inline asm
	xor.b32  	%r797, %r688, %r672;
	xor.b32  	%r798, %r797, %r736;
	xor.b32  	%r799, %r798, %r776;
	shf.l.wrap.b32 	%r800, %r799, %r799, 1;
	add.s32 	%r801, %r322, %r800;
	add.s32 	%r802, %r801, %r321;
	add.s32 	%r803, %r802, %r796;
	add.s32 	%r331, %r803, -1894007588;
	shf.l.wrap.b32 	%r333, %r323, %r323, 30;
	shf.l.wrap.b32 	%r804, %r331, %r331, 5;
	// begin inline asm
	lop3.b32 %r326, %r327, %r333, %r329, 232;
	// end inline asm
	xor.b32  	%r805, %r696, %r680;
	xor.b32  	%r806, %r805, %r744;
	xor.b32  	%r807, %r806, %r784;
	shf.l.wrap.b32 	%r808, %r807, %r807, 1;
	add.s32 	%r809, %r326, %r808;
	add.s32 	%r810, %r809, %r325;
	add.s32 	%r811, %r810, %r804;
	add.s32 	%r335, %r811, -1894007588;
	shf.l.wrap.b32 	%r337, %r327, %r327, 30;
	shf.l.wrap.b32 	%r812, %r335, %r335, 5;
	// begin inline asm
	lop3.b32 %r330, %r331, %r337, %r333, 232;
	// end inline asm
	xor.b32  	%r813, %r704, %r688;
	xor.b32  	%r814, %r813, %r752;
	xor.b32  	%r815, %r814, %r792;
	shf.l.wrap.b32 	%r816, %r815, %r815, 1;
	add.s32 	%r817, %r330, %r816;
	add.s32 	%r818, %r817, %r329;
	add.s32 	%r819, %r818, %r812;
	add.s32 	%r339, %r819, -1894007588;
	shf.l.wrap.b32 	%r341, %r331, %r331, 30;
	shf.l.wrap.b32 	%r820, %r339, %r339, 5;
	// begin inline asm
	lop3.b32 %r334, %r335, %r341, %r337, 232;
	// end inline asm
	xor.b32  	%r821, %r712, %r696;
	xor.b32  	%r822, %r821, %r760;
	xor.b32  	%r823, %r822, %r800;
	shf.l.wrap.b32 	%r824, %r823, %r823, 1;
	add.s32 	%r825, %r334, %r824;
	add.s32 	%r826, %r825, %r333;
	add.s32 	%r827, %r826, %r820;
	add.s32 	%r343, %r827, -1894007588;
	shf.l.wrap.b32 	%r345, %r335, %r335, 30;
	shf.l.wrap.b32 	%r828, %r343, %r343, 5;
	// begin inline asm
	lop3.b32 %r338, %r339, %r345, %r341, 232;
	// end inline asm
	xor.b32  	%r829, %r720, %r704;
	xor.b32  	%r830, %r829, %r768;
	xor.b32  	%r831, %r830, %r808;
	shf.l.wrap.b32 	%r832, %r831, %r831, 1;
	add.s32 	%r833, %r338, %r832;
	add.s32 	%r834, %r833, %r337;
	add.s32 	%r835, %r834, %r828;
	add.s32 	%r347, %r835, -1894007588;
	shf.l.wrap.b32 	%r349, %r339, %r339, 30;
	shf.l.wrap.b32 	%r836, %r347, %r347, 5;
	// begin inline asm
	lop3.b32 %r342, %r343, %r349, %r345, 232;
	// end inline asm
	xor.b32  	%r837, %r728, %r712;
	xor.b32  	%r838, %r837, %r776;
	xor.b32  	%r839, %r838, %r816;
	shf.l.wrap.b32 	%r840, %r839, %r839, 1;
	add.s32 	%r841, %r342, %r840;
	add.s32 	%r842, %r841, %r341;
	add.s32 	%r843, %r842, %r836;
	add.s32 	%r351, %r843, -1894007588;
	shf.l.wrap.b32 	%r353, %r343, %r343, 30;
	shf.l.wrap.b32 	%r844, %r351, %r351, 5;
	// begin inline asm
	lop3.b32 %r346, %r347, %r353, %r349, 232;
	// end inline asm
	xor.b32  	%r845, %r736, %r720;
	xor.b32  	%r846, %r845, %r784;
	xor.b32  	%r847, %r846, %r824;
	shf.l.wrap.b32 	%r848, %r847, %r847, 1;
	add.s32 	%r849, %r346, %r848;
	add.s32 	%r850, %r849, %r345;
	add.s32 	%r851, %r850, %r844;
	add.s32 	%r355, %r851, -1894007588;
	shf.l.wrap.b32 	%r357, %r347, %r347, 30;
	shf.l.wrap.b32 	%r852, %r355, %r355, 5;
	// begin inline asm
	lop3.b32 %r350, %r351, %r357, %r353, 232;
	// end inline asm
	xor.b32  	%r853, %r744, %r728;
	xor.b32  	%r854, %r853, %r792;
	xor.b32  	%r855, %r854, %r832;
	shf.l.wrap.b32 	%r856, %r855, %r855, 1;
	add.s32 	%r857, %r350, %r856;
	add.s32 	%r858, %r857, %r349;
	add.s32 	%r859, %r858, %r852;
	add.s32 	%r359, %r859, -1894007588;
	shf.l.wrap.b32 	%r361, %r351, %r351, 30;
	shf.l.wrap.b32 	%r860, %r359, %r359, 5;
	// begin inline asm
	lop3.b32 %r354, %r355, %r361, %r357, 232;
	// end inline asm
	xor.b32  	%r861, %r752, %r736;
	xor.b32  	%r862, %r861, %r800;
	xor.b32  	%r863, %r862, %r840;
	shf.l.wrap.b32 	%r864, %r863, %r863, 1;
	add.s32 	%r865, %r354, %r864;
	add.s32 	%r866, %r865, %r353;
	add.s32 	%r867, %r866, %r860;
	add.s32 	%r363, %r867, -1894007588;
	shf.l.wrap.b32 	%r365, %r355, %r355, 30;
	shf.l.wrap.b32 	%r868, %r363, %r363, 5;
	// begin inline asm
	lop3.b32 %r358, %r359, %r365, %r361, 232;
	// end inline asm
	xor.b32  	%r869, %r760, %r744;
	xor.b32  	%r870, %r869, %r808;
	xor.b32  	%r871, %r870, %r848;
	shf.l.wrap.b32 	%r872, %r871, %r871, 1;
	add.s32 	%r873, %r358, %r872;
	add.s32 	%r874, %r873, %r357;
	add.s32 	%r875, %r874, %r868;
	add.s32 	%r367, %r875, -1894007588;
	shf.l.wrap.b32 	%r369, %r359, %r359, 30;
	shf.l.wrap.b32 	%r876, %r367, %r367, 5;
	// begin inline asm
	lop3.b32 %r362, %r363, %r369, %r365, 232;
	// end inline asm
	xor.b32  	%r877, %r768, %r752;
	xor.b32  	%r878, %r877, %r816;
	xor.b32  	%r879, %r878, %r856;
	shf.l.wrap.b32 	%r880, %r879, %r879, 1;
	add.s32 	%r881, %r362, %r880;
	add.s32 	%r882, %r881, %r361;
	add.s32 	%r883, %r882, %r876;
	add.s32 	%r371, %r883, -1894007588;
	shf.l.wrap.b32 	%r373, %r363, %r363, 30;
	shf.l.wrap.b32 	%r884, %r371, %r371, 5;
	// begin inline asm
	lop3.b32 %r366, %r367, %r373, %r369, 232;
	// end inline asm
	xor.b32  	%r885, %r776, %r760;
	xor.b32  	%r886, %r885, %r824;
	xor.b32  	%r887, %r886, %r864;
	shf.l.wrap.b32 	%r888, %r887, %r887, 1;
	add.s32 	%r889, %r366, %r888;
	add.s32 	%r890, %r889, %r365;
	add.s32 	%r891, %r890, %r884;
	add.s32 	%r375, %r891, -1894007588;
	shf.l.wrap.b32 	%r377, %r367, %r367, 30;
	shf.l.wrap.b32 	%r892, %r375, %r375, 5;
	// begin inline asm
	lop3.b32 %r370, %r371, %r377, %r373, 232;
	// end inline asm
	xor.b32  	%r893, %r784, %r768;
	xor.b32  	%r894, %r893, %r832;
	xor.b32  	%r895, %r894, %r872;
	shf.l.wrap.b32 	%r896, %r895, %r895, 1;
	add.s32 	%r897, %r370, %r896;
	add.s32 	%r898, %r897, %r369;
	add.s32 	%r899, %r898, %r892;
	add.s32 	%r379, %r899, -1894007588;
	shf.l.wrap.b32 	%r381, %r371, %r371, 30;
	shf.l.wrap.b32 	%r900, %r379, %r379, 5;
	// begin inline asm
	lop3.b32 %r374, %r375, %r381, %r377, 150;
	// end inline asm
	xor.b32  	%r901, %r792, %r776;
	xor.b32  	%r902, %r901, %r840;
	xor.b32  	%r903, %r902, %r880;
	shf.l.wrap.b32 	%r904, %r903, %r903, 1;
	add.s32 	%r905, %r374, %r904;
	add.s32 	%r906, %r905, %r373;
	add.s32 	%r907, %r906, %r900;
	add.s32 	%r383, %r907, -899497514;
	shf.l.wrap.b32 	%r385, %r375, %r375, 30;
	shf.l.wrap.b32 	%r908, %r383, %r383, 5;
	// begin inline asm
	lop3.b32 %r378, %r379, %r385, %r381, 150;
	// end inline asm
	xor.b32  	%r909, %r800, %r784;
	xor.b32  	%r910, %r909, %r848;
	xor.b32  	%r911, %r910, %r888;
	shf.l.wrap.b32 	%r912, %r911, %r911, 1;
	add.s32 	%r913, %r378, %r912;
	add.s32 	%r914, %r913, %r377;
	add.s32 	%r915, %r914, %r908;
	add.s32 	%r387, %r915, -899497514;
	shf.l.wrap.b32 	%r389, %r379, %r379, 30;
	shf.l.wrap.b32 	%r916, %r387, %r387, 5;
	// begin inline asm
	lop3.b32 %r382, %r383, %r389, %r385, 150;
	// end inline asm
	xor.b32  	%r917, %r808, %r792;
	xor.b32  	%r918, %r917, %r856;
	xor.b32  	%r919, %r918, %r896;
	shf.l.wrap.b32 	%r920, %r919, %r919, 1;
	add.s32 	%r921, %r382, %r920;
	add.s32 	%r922, %r921, %r381;
	add.s32 	%r923, %r922, %r916;
	add.s32 	%r391, %r923, -899497514;
	shf.l.wrap.b32 	%r393, %r383, %r383, 30;
	shf.l.wrap.b32 	%r924, %r391, %r391, 5;
	// begin inline asm
	lop3.b32 %r386, %r387, %r393, %r389, 150;
	// end inline asm
	xor.b32  	%r925, %r816, %r800;
	xor.b32  	%r926, %r925, %r864;
	xor.b32  	%r927, %r926, %r904;
	shf.l.wrap.b32 	%r928, %r927, %r927, 1;
	add.s32 	%r929, %r386, %r928;
	add.s32 	%r930, %r929, %r385;
	add.s32 	%r931, %r930, %r924;
	add.s32 	%r395, %r931, -899497514;
	shf.l.wrap.b32 	%r397, %r387, %r387, 30;
	shf.l.wrap.b32 	%r932, %r395, %r395, 5;
	// begin inline asm
	lop3.b32 %r390, %r391, %r397, %r393, 150;
	// end inline asm
	xor.b32  	%r933, %r824, %r808;
	xor.b32  	%r934, %r933, %r872;
	xor.b32  	%r935, %r934, %r912;
	shf.l.wrap.b32 	%r936, %r935, %r935, 1;
	add.s32 	%r937, %r390, %r936;
	add.s32 	%r938, %r937, %r389;
	add.s32 	%r939, %r938, %r932;
	add.s32 	%r399, %r939, -899497514;
	shf.l.wrap.b32 	%r401, %r391, %r391, 30;
	shf.l.wrap.b32 	%r940, %r399, %r399, 5;
	// begin inline asm
	lop3.b32 %r394, %r395, %r401, %r397, 150;
	// end inline asm
	xor.b32  	%r941, %r832, %r816;
	xor.b32  	%r942, %r941, %r880;
	xor.b32  	%r943, %r942, %r920;
	shf.l.wrap.b32 	%r944, %r943, %r943, 1;
	add.s32 	%r945, %r394, %r944;
	add.s32 	%r946, %r945, %r393;
	add.s32 	%r947, %r946, %r940;
	add.s32 	%r403, %r947, -899497514;
	shf.l.wrap.b32 	%r405, %r395, %r395, 30;
	shf.l.wrap.b32 	%r948, %r403, %r403, 5;
	// begin inline asm
	lop3.b32 %r398, %r399, %r405, %r401, 150;
	// end inline asm
	xor.b32  	%r949, %r840, %r824;
	xor.b32  	%r950, %r949, %r888;
	xor.b32  	%r951, %r950, %r928;
	shf.l.wrap.b32 	%r952, %r951, %r951, 1;
	add.s32 	%r953, %r398, %r952;
	add.s32 	%r954, %r953, %r397;
	add.s32 	%r955, %r954, %r948;
	add.s32 	%r407, %r955, -899497514;
	shf.l.wrap.b32 	%r409, %r399, %r399, 30;
	shf.l.wrap.b32 	%r956, %r407, %r407, 5;
	// begin inline asm
	lop3.b32 %r402, %r403, %r409, %r405, 150;
	// end inline asm
	xor.b32  	%r957, %r848, %r832;
	xor.b32  	%r958, %r957, %r896;
	xor.b32  	%r959, %r958, %r936;
	shf.l.wrap.b32 	%r960, %r959, %r959, 1;
	add.s32 	%r961, %r402, %r960;
	add.s32 	%r962, %r961, %r401;
	add.s32 	%r963, %r962, %r956;
	add.s32 	%r411, %r963, -899497514;
	shf.l.wrap.b32 	%r413, %r403, %r403, 30;
	shf.l.wrap.b32 	%r964, %r411, %r411, 5;
	// begin inline asm
	lop3.b32 %r406, %r407, %r413, %r409, 150;
	// end inline asm
	xor.b32  	%r965, %r856, %r840;
	xor.b32  	%r966, %r965, %r904;
	xor.b32  	%r967, %r966, %r944;
	shf.l.wrap.b32 	%r968, %r967, %r967, 1;
	add.s32 	%r969, %r406, %r968;
	add.s32 	%r970, %r969, %r405;
	add.s32 	%r971, %r970, %r964;
	add.s32 	%r415, %r971, -899497514;
	shf.l.wrap.b32 	%r417, %r407, %r407, 30;
	shf.l.wrap.b32 	%r972, %r415, %r415, 5;
	// begin inline asm
	lop3.b32 %r410, %r411, %r417, %r413, 150;
	// end inline asm
	xor.b32  	%r973, %r864, %r848;
	xor.b32  	%r974, %r973, %r912;
	xor.b32  	%r975, %r974, %r952;
	shf.l.wrap.b32 	%r976, %r975, %r975, 1;
	add.s32 	%r977, %r410, %r976;
	add.s32 	%r978, %r977, %r409;
	add.s32 	%r979, %r978, %r972;
	add.s32 	%r419, %r979, -899497514;
	shf.l.wrap.b32 	%r421, %r411, %r411, 30;
	shf.l.wrap.b32 	%r980, %r419, %r419, 5;
	// begin inline asm
	lop3.b32 %r414, %r415, %r421, %r417, 150;
	// end inline asm
	xor.b32  	%r981, %r872, %r856;
	xor.b32  	%r982, %r981, %r920;
	xor.b32  	%r983, %r982, %r960;
	shf.l.wrap.b32 	%r984, %r983, %r983, 1;
	add.s32 	%r985, %r414, %r984;
	add.s32 	%r986, %r985, %r413;
	add.s32 	%r987, %r986, %r980;
	add.s32 	%r423, %r987, -899497514;
	shf.l.wrap.b32 	%r425, %r415, %r415, 30;
	shf.l.wrap.b32 	%r988, %r423, %r423, 5;
	// begin inline asm
	lop3.b32 %r418, %r419, %r425, %r421, 150;
	// end inline asm
	xor.b32  	%r989, %r880, %r864;
	xor.b32  	%r990, %r989, %r928;
	xor.b32  	%r991, %r990, %r968;
	shf.l.wrap.b32 	%r992, %r991, %r991, 1;
	add.s32 	%r993, %r418, %r992;
	add.s32 	%r994, %r993, %r417;
	add.s32 	%r995, %r994, %r988;
	add.s32 	%r427, %r995, -899497514;
	shf.l.wrap.b32 	%r429, %r419, %r419, 30;
	shf.l.wrap.b32 	%r996, %r427, %r427, 5;
	// begin inline asm
	lop3.b32 %r422, %r423, %r429, %r425, 150;
	// end inline asm
	xor.b32  	%r997, %r888, %r872;
	xor.b32  	%r998, %r997, %r936;
	xor.b32  	%r999, %r998, %r976;
	shf.l.wrap.b32 	%r1000, %r999, %r999, 1;
	add.s32 	%r1001, %r422, %r1000;
	add.s32 	%r1002, %r1001, %r421;
	add.s32 	%r1003, %r1002, %r996;
	add.s32 	%r431, %r1003, -899497514;
	shf.l.wrap.b32 	%r433, %r423, %r423, 30;
	shf.l.wrap.b32 	%r1004, %r431, %r431, 5;
	// begin inline asm
	lop3.b32 %r426, %r427, %r433, %r429, 150;
	// end inline asm
	xor.b32  	%r1005, %r896, %r880;
	xor.b32  	%r1006, %r1005, %r944;
	xor.b32  	%r1007, %r1006, %r984;
	shf.l.wrap.b32 	%r1008, %r1007, %r1007, 1;
	add.s32 	%r1009, %r426, %r1008;
	add.s32 	%r1010, %r1009, %r425;
	add.s32 	%r1011, %r1010, %r1004;
	add.s32 	%r435, %r1011, -899497514;
	shf.l.wrap.b32 	%r437, %r427, %r427, 30;
	shf.l.wrap.b32 	%r1012, %r435, %r435, 5;
	// begin inline asm
	lop3.b32 %r430, %r431, %r437, %r433, 150;
	// end inline asm
	xor.b32  	%r1013, %r904, %r888;
	xor.b32  	%r1014, %r1013, %r952;
	xor.b32  	%r1015, %r1014, %r992;
	shf.l.wrap.b32 	%r1016, %r1015, %r1015, 1;
	add.s32 	%r1017, %r430, %r1016;
	add.s32 	%r1018, %r1017, %r429;
	add.s32 	%r1019, %r1018, %r1012;
	add.s32 	%r439, %r1019, -899497514;
	shf.l.wrap.b32 	%r441, %r431, %r431, 30;
	shf.l.wrap.b32 	%r1020, %r439, %r439, 5;
	// begin inline asm
	lop3.b32 %r434, %r435, %r441, %r437, 150;
	// end inline asm
	xor.b32  	%r1021, %r912, %r896;
	xor.b32  	%r1022, %r1021, %r960;
	xor.b32  	%r1023, %r1022, %r1000;
	shf.l.wrap.b32 	%r1024, %r1023, %r1023, 1;
	add.s32 	%r1025, %r434, %r1024;
	add.s32 	%r1026, %r1025, %r433;
	add.s32 	%r1027, %r1026, %r1020;
	add.s32 	%r443, %r1027, -899497514;
	shf.l.wrap.b32 	%r445, %r435, %r435, 30;
	shf.l.wrap.b32 	%r1028, %r443, %r443, 5;
	// begin inline asm
	lop3.b32 %r438, %r439, %r445, %r441, 150;
	// end inline asm
	xor.b32  	%r1029, %r920, %r904;
	xor.b32  	%r1030, %r1029, %r968;
	xor.b32  	%r1031, %r1030, %r1008;
	shf.l.wrap.b32 	%r1032, %r1031, %r1031, 1;
	add.s32 	%r1033, %r438, %r1032;
	add.s32 	%r1034, %r1033, %r437;
	add.s32 	%r1035, %r1034, %r1028;
	add.s32 	%r447, %r1035, -899497514;
	shf.l.wrap.b32 	%r449, %r439, %r439, 30;
	shf.l.wrap.b32 	%r1036, %r447, %r447, 5;
	// begin inline asm
	lop3.b32 %r442, %r443, %r449, %r445, 150;
	// end inline asm
	xor.b32  	%r1037, %r928, %r912;
	xor.b32  	%r1038, %r1037, %r976;
	xor.b32  	%r1039, %r1038, %r1016;
	shf.l.wrap.b32 	%r1040, %r1039, %r1039, 1;
	add.s32 	%r1041, %r442, %r1040;
	add.s32 	%r1042, %r1041, %r441;
	add.s32 	%r1043, %r1042, %r1036;
	add.s32 	%r451, %r1043, -899497514;
	shf.l.wrap.b32 	%r453, %r443, %r443, 30;
	shf.l.wrap.b32 	%r1044, %r451, %r451, 5;
	// begin inline asm
	lop3.b32 %r446, %r447, %r453, %r449, 150;
	// end inline asm
	xor.b32  	%r1045, %r936, %r920;
	xor.b32  	%r1046, %r1045, %r984;
	xor.b32  	%r1047, %r1046, %r1024;
	shf.l.wrap.b32 	%r1048, %r1047, %r1047, 1;
	add.s32 	%r1049, %r446, %r1048;
	add.s32 	%r1050, %r1049, %r445;
	add.s32 	%r1051, %r1050, %r1044;
	add.s32 	%r1052, %r1051, -899497514;
	shf.l.wrap.b32 	%r452, %r447, %r447, 30;
	shf.l.wrap.b32 	%r1053, %r1052, %r1052, 5;
	// begin inline asm
	lop3.b32 %r450, %r451, %r452, %r453, 150;
	// end inline asm
	xor.b32  	%r1054, %r944, %r928;
	xor.b32  	%r1055, %r1054, %r992;
	xor.b32  	%r1056, %r1055, %r1032;
	shf.l.wrap.b32 	%r1057, %r1056, %r1056, 1;
	shf.l.wrap.b32 	%r1058, %r451, %r451, 30;
	add.s32 	%r1059, %r450, %r1057;
	add.s32 	%r1060, %r1059, %r449;
	add.s32 	%r1061, %r1060, %r1053;
	add.s32 	%r10, %r1061, 833086679;
	add.s32 	%r11, %r1051, -1171231393;
	add.s32 	%r12, %r1058, -1732584194;
	add.s32 	%r13, %r452, 271733878;
	and.b32  	%r1062, %r13, 32736;
	shr.u32 	%r1063, %r1062, 5;
	mul.wide.u32 	%rd24, %r1063, 4;
	mov.u64 	%rd25, sha1_$_s_bitmaps;
	add.s64 	%rd26, %rd25, %rd24;
	and.b32  	%r1064, %r13, 31;
	ld.shared.u32 	%r1065, [%rd26];
	shr.u32 	%r1066, %r1065, %r1064;
	and.b32  	%r1067, %r12, 32736;
	shr.u32 	%r1068, %r1067, 5;
	or.b32  	%r1069, %r1068, 1024;
	mul.wide.u32 	%rd27, %r1069, 4;
	add.s64 	%rd28, %rd25, %rd27;
	and.b32  	%r1070, %r12, 31;
	ld.shared.u32 	%r1071, [%rd28];
	shr.u32 	%r1072, %r1071, %r1070;
	and.b32  	%r1073, %r11, 32736;
	shr.u32 	%r1074, %r1073, 5;
	or.b32  	%r1075, %r1074, 2048;
	mul.wide.u32 	%rd29, %r1075, 4;
	add.s64 	%rd30, %rd25, %rd29;
	and.b32  	%r1076, %r11, 31;
	ld.shared.u32 	%r1077, [%rd30];
	shr.u32 	%r1078, %r1077, %r1076;
	and.b32  	%r1079, %r10, 32736;
	shr.u32 	%r1080, %r1079, 5;
	or.b32  	%r1081, %r1080, 3072;
	mul.wide.u32 	%rd31, %r1081, 4;
	add.s64 	%rd32, %rd25, %rd31;
	and.b32  	%r1082, %r10, 31;
	ld.shared.u32 	%r1083, [%rd32];
	shr.u32 	%r1084, %r1083, %r1082;
	and.b32  	%r1085, %r1066, 1;
	setp.eq.b32 	%p19, %r1085, 1;
	and.b32  	%r1086, %r1072, 1;
	setp.eq.b32 	%p20, %r1086, 1;
	and.pred  	%p21, %p19, %p20;
	and.b32  	%r1087, %r1078, 1;
	setp.eq.b32 	%p22, %r1087, 1;
	and.pred  	%p23, %p21, %p22;
	and.b32  	%r1088, %r1084, 1;
	setp.eq.b32 	%p24, %r1088, 1;
	and.pred  	%p25, %p23, %p24;
	mov.pred 	%p26, 0;
	xor.pred  	%p27, %p25, %p26;
	not.pred 	%p28, %p27;
	@%p28 bra 	$L__BB0_24;

	ld.param.u64 	%rd97, [sha1_param_6];
	ld.param.u64 	%rd96, [sha1_param_5];
	add.s32 	%r1089, %r453, -1009589776;
	cvt.u64.u32 	%rd33, %r13;
	cvt.u64.u32 	%rd34, %r12;
	bfi.b64 	%rd35, %rd33, %rd34, 32, 32;
	cvt.u64.u32 	%rd36, %r11;
	cvt.u64.u32 	%rd37, %r10;
	bfi.b64 	%rd38, %rd36, %rd37, 32, 32;
	mul.wide.u32 	%rd39, %r1089, -1307163959;
	shr.u64 	%rd40, %rd39, 36;
	cvt.u32.u64 	%r1090, %rd40;
	mul.lo.s32 	%r1091, %r1090, 23;
	sub.s32 	%r1092, %r1089, %r1091;
	mul.lo.s32 	%r1093, %r1092, 13;
	cvt.u64.u32 	%rd41, %r1093;
	mul.hi.u64 	%rd42, %rd35, 7218291159277650633;
	sub.s64 	%rd43, %rd35, %rd42;
	shr.u64 	%rd44, %rd43, 1;
	add.s64 	%rd45, %rd44, %rd42;
	shr.u64 	%rd46, %rd45, 4;
	mul.lo.s64 	%rd47, %rd46, 23;
	sub.s64 	%rd48, %rd35, %rd47;
	mul.lo.s64 	%rd49, %rd48, 6;
	add.s64 	%rd50, %rd49, %rd41;
	mul.hi.u64 	%rd51, %rd38, 7218291159277650633;
	sub.s64 	%rd52, %rd38, %rd51;
	shr.u64 	%rd53, %rd52, 1;
	add.s64 	%rd54, %rd53, %rd51;
	shr.u64 	%rd55, %rd54, 4;
	mul.lo.s64 	%rd56, %rd55, 23;
	sub.s64 	%rd57, %rd38, %rd56;
	add.s64 	%rd58, %rd50, %rd57;
	cvt.u32.u64 	%r1094, %rd58;
	mul.wide.u32 	%rd59, %r1094, -1307163959;
	shr.u64 	%rd60, %rd59, 36;
	cvt.u32.u64 	%r1095, %rd60;
	mul.lo.s32 	%r1096, %r1095, 23;
	sub.s32 	%r1097, %r1094, %r1096;
	mul.wide.u32 	%rd61, %r1097, 4;
	add.s64 	%rd62, %rd96, %rd61;
	ld.global.u32 	%rd63, [%rd62];
	add.s64 	%rd64, %rd38, %rd63;
	mul.wide.u32 	%rd65, %r1089, 1374389535;
	shr.u64 	%rd66, %rd65, 35;
	cvt.u32.u64 	%r1098, %rd66;
	mul.lo.s32 	%r1099, %r1098, 25;
	sub.s32 	%r1100, %r1089, %r1099;
	mul.lo.s32 	%r1101, %r1100, 6;
	cvt.u64.u32 	%rd67, %r1101;
	mul.hi.u64 	%rd68, %rd35, 5165088340638674453;
	sub.s64 	%rd69, %rd35, %rd68;
	shr.u64 	%rd70, %rd69, 1;
	add.s64 	%rd71, %rd70, %rd68;
	shr.u64 	%rd72, %rd71, 4;
	mul.lo.s64 	%rd73, %rd72, 25;
	sub.s64 	%rd74, %rd35, %rd73;
	shl.b64 	%rd75, %rd74, 4;
	add.s64 	%rd76, %rd75, %rd67;
	mul.hi.u64 	%rd77, %rd64, 5165088340638674453;
	sub.s64 	%rd78, %rd64, %rd77;
	shr.u64 	%rd79, %rd78, 1;
	add.s64 	%rd80, %rd79, %rd77;
	shr.u64 	%rd81, %rd80, 4;
	mul.lo.s64 	%rd82, %rd81, 25;
	sub.s64 	%rd83, %rd64, %rd82;
	add.s64 	%rd84, %rd76, %rd83;
	cvt.u32.u64 	%r1102, %rd84;
	mul.wide.u32 	%rd85, %r1102, 1374389535;
	shr.u64 	%rd86, %rd85, 35;
	cvt.u32.u64 	%r1103, %rd86;
	mul.lo.s32 	%r1104, %r1103, 25;
	sub.s32 	%r14, %r1102, %r1104;
	mul.wide.u32 	%rd87, %r14, 4;
	add.s64 	%rd5, %rd97, %rd87;
	ld.global.u32 	%r1105, [%rd5];
	setp.ne.s32 	%p29, %r1105, %r10;
	@%p29 bra 	$L__BB0_24;

	ld.global.u32 	%r1106, [%rd5+100];
	setp.ne.s32 	%p30, %r1106, %r11;
	@%p30 bra 	$L__BB0_24;

	ld.param.u64 	%rd98, [sha1_param_9];
	mov.u32 	%r1107, 1;
	shl.b32 	%r1108, %r1107, %r14;
	atom.global.or.b32 	%r1109, [%rd98], %r1108;
	and.b32  	%r1110, %r1109, %r1108;
	setp.ne.s32 	%p31, %r1110, 0;
	@%p31 bra 	$L__BB0_24;

	mov.b32 	%r1125, %envreg3;
	mov.u32 	%r1124, %tid.x;
	add.s32 	%r1123, %r1124, %r1125;
	mov.u32 	%r1122, %ctaid.x;
	mov.u32 	%r1121, %ntid.x;
	mad.lo.s32 	%r1120, %r1121, %r1122, %r1123;
	ld.param.u64 	%rd100, [sha1_param_7];
	ld.param.u64 	%rd99, [sha1_param_8];
	atom.global.add.u32 	%r1111, [%rd99], 1;
	mul.lo.s32 	%r1112, %r1111, 3;
	add.s32 	%r1113, %r1112, 1;
	mul.wide.u32 	%rd88, %r1113, 4;
	add.s64 	%rd89, %rd99, %rd88;
	st.volatile.global.u32 	[%rd89], %r1120;
	add.s32 	%r1114, %r1112, 2;
	mul.wide.u32 	%rd90, %r1114, 4;
	add.s64 	%rd91, %rd99, %rd90;
	mov.u32 	%r1115, 0;
	st.volatile.global.u32 	[%rd91], %r1115;
	add.s32 	%r1116, %r1112, 3;
	mul.wide.u32 	%rd92, %r1116, 4;
	add.s64 	%rd93, %rd99, %rd92;
	st.volatile.global.u32 	[%rd93], %r14;
	shl.b32 	%r1117, %r1111, 1;
	mul.wide.u32 	%rd94, %r1117, 4;
	add.s64 	%rd95, %rd100, %rd94;
	add.s32 	%r1118, %r1058, -1732584194;
	st.global.u32 	[%rd95], %r1118;
	add.s32 	%r1119, %r452, 271733878;
	st.global.u32 	[%rd95+4], %r1119;

$L__BB0_24:
	ret;

}

  