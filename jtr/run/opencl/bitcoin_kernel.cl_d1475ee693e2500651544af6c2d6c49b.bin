//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	bitcoin_init
.func SHA512_Update
(
	.param .b64 SHA512_Update_param_0,
	.param .b64 SHA512_Update_param_1,
	.param .b32 SHA512_Update_param_2
)
;
.const .align 4 .b8 h[32] = {103, 230, 9, 106, 133, 174, 103, 187, 114, 243, 110, 60, 58, 245, 79, 165, 127, 82, 14, 81, 140, 104, 5, 155, 171, 217, 131, 31, 25, 205, 224, 91};
.const .align 4 .b8 k[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 1 .b8 aes_keysched_base_$_Rcon[10] = {1, 2, 4, 8, 16, 32, 64, 128, 27, 54};

.entry bitcoin_init(
	.param .u64 .ptr .global .align 4 bitcoin_init_param_0,
	.param .u64 .ptr .const .align 4 bitcoin_init_param_1,
	.param .u64 .ptr .global .align 8 bitcoin_init_param_2
)
{
	.local .align 16 .b8 	__local_depot0[480];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<46>;
	.reg .b16 	%rs<38>;
	.reg .b32 	%r<8285>;
	.reg .b64 	%rd<12085>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd202, [bitcoin_init_param_0];
	ld.param.u64 	%rd203, [bitcoin_init_param_1];
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd12027, %SP, 16;
	cvta.to.local.u64 	%rd12045, %rd12027;
	add.u64 	%rd207, %SP, 144;
	add.u64 	%rd3, %SPL, 144;
	add.u64 	%rd208, %SP, 352;
	add.u64 	%rd12016, %SPL, 352;
	mov.u32 	%r71, %ctaid.x;
	mov.u32 	%r72, %ntid.x;
	mov.u32 	%r73, %tid.x;
	mov.b32 	%r74, %envreg3;
	add.s32 	%r75, %r73, %r74;
	mad.lo.s32 	%r76, %r72, %r71, %r75;
	cvt.u64.u32 	%rd5, %r76;
	mov.u32 	%r77, 0;
	st.local.u32 	[%rd3], %r77;
	mov.u64 	%rd209, 7640891576956012808;
	st.local.u64 	[%rd3+8], %rd209;
	mov.u64 	%rd210, -4942790177534073029;
	st.local.u64 	[%rd3+16], %rd210;
	mov.u64 	%rd211, 4354685564936845355;
	st.local.u64 	[%rd3+24], %rd211;
	mov.u64 	%rd212, -6534734903238641935;
	st.local.u64 	[%rd3+32], %rd212;
	mov.u64 	%rd213, 5840696475078001361;
	st.local.u64 	[%rd3+40], %rd213;
	mov.u64 	%rd214, -7276294671716946913;
	st.local.u64 	[%rd3+48], %rd214;
	mov.u64 	%rd215, 2270897969802886507;
	st.local.u64 	[%rd3+56], %rd215;
	mov.u64 	%rd216, 6620516959819538809;
	st.local.u64 	[%rd3+64], %rd216;
	mul.wide.u32 	%rd217, %r76, 132;
	add.s64 	%rd218, %rd202, %rd217;
	ld.global.u32 	%r1, [%rd218];
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB0_6;

	mul.lo.s64 	%rd219, %rd5, 132;
	add.s64 	%rd220, %rd202, %rd219;
	add.s64 	%rd12011, %rd220, 4;
	and.b32  	%r8253, %r1, 3;
	setp.eq.s32 	%p2, %r8253, 0;
	mov.u64 	%rd12010, %rd12016;
	mov.u32 	%r8254, %r1;
	@%p2 bra 	$L__BB0_4;

	mov.u64 	%rd12006, %rd12016;
	mov.u64 	%rd12007, %rd12011;
	mov.u32 	%r8254, %r1;

$L__BB0_3:
	.pragma "nounroll";
	add.s32 	%r8254, %r8254, -1;
	add.s64 	%rd12011, %rd12007, 1;
	ld.global.u8 	%rs1, [%rd12007];
	add.s64 	%rd12010, %rd12006, 1;
	st.local.u8 	[%rd12006], %rs1;
	add.s32 	%r8253, %r8253, -1;
	setp.ne.s32 	%p3, %r8253, 0;
	mov.u64 	%rd12006, %rd12010;
	mov.u64 	%rd12007, %rd12011;
	@%p3 bra 	$L__BB0_3;

$L__BB0_4:
	add.s32 	%r78, %r1, -1;
	setp.lt.u32 	%p4, %r78, 3;
	@%p4 bra 	$L__BB0_6;

$L__BB0_5:
	ld.global.u8 	%rs2, [%rd12011];
	st.local.u8 	[%rd12010], %rs2;
	ld.global.u8 	%rs3, [%rd12011+1];
	st.local.u8 	[%rd12010+1], %rs3;
	ld.global.u8 	%rs4, [%rd12011+2];
	st.local.u8 	[%rd12010+2], %rs4;
	add.s64 	%rd18, %rd12011, 4;
	ld.global.u8 	%rs5, [%rd12011+3];
	add.s64 	%rd19, %rd12010, 4;
	st.local.u8 	[%rd12010+3], %rs5;
	add.s32 	%r8254, %r8254, -4;
	setp.ne.s32 	%p5, %r8254, 0;
	mov.u64 	%rd12010, %rd19;
	mov.u64 	%rd12011, %rd18;
	@%p5 bra 	$L__BB0_5;

$L__BB0_6:
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd207;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd208;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r1;
	call.uni 
	SHA512_Update, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 3
	ld.const.u32 	%r10, [%rd203+260];
	setp.eq.s32 	%p6, %r10, 0;
	@%p6 bra 	$L__BB0_12;

	add.s64 	%rd12017, %rd203, 132;
	and.b32  	%r8257, %r10, 3;
	setp.eq.s32 	%p7, %r8257, 0;
	mov.u32 	%r8258, %r10;
	@%p7 bra 	$L__BB0_10;

	mov.u64 	%rd12012, %rd12016;
	mov.u64 	%rd12013, %rd12017;
	mov.u32 	%r8258, %r10;

$L__BB0_9:
	.pragma "nounroll";
	add.s32 	%r8258, %r8258, -1;
	add.s64 	%rd12017, %rd12013, 1;
	ld.const.u8 	%rs6, [%rd12013];
	add.s64 	%rd12016, %rd12012, 1;
	st.local.u8 	[%rd12012], %rs6;
	add.s32 	%r8257, %r8257, -1;
	setp.ne.s32 	%p8, %r8257, 0;
	mov.u64 	%rd12012, %rd12016;
	mov.u64 	%rd12013, %rd12017;
	@%p8 bra 	$L__BB0_9;

$L__BB0_10:
	add.s32 	%r79, %r10, -1;
	setp.lt.u32 	%p9, %r79, 3;
	@%p9 bra 	$L__BB0_12;

$L__BB0_11:
	ld.const.u8 	%rs7, [%rd12017];
	st.local.u8 	[%rd12016], %rs7;
	ld.const.u8 	%rs8, [%rd12017+1];
	st.local.u8 	[%rd12016+1], %rs8;
	ld.const.u8 	%rs9, [%rd12017+2];
	st.local.u8 	[%rd12016+2], %rs9;
	add.s64 	%rd31, %rd12017, 4;
	ld.const.u8 	%rs10, [%rd12017+3];
	add.s64 	%rd32, %rd12016, 4;
	st.local.u8 	[%rd12016+3], %rs10;
	add.s32 	%r8258, %r8258, -4;
	setp.ne.s32 	%p10, %r8258, 0;
	mov.u64 	%rd12016, %rd32;
	mov.u64 	%rd12017, %rd31;
	@%p10 bra 	$L__BB0_11;

$L__BB0_12:
	mov.u32 	%r8260, 0;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd207;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd208;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r10;
	call.uni 
	SHA512_Update, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 4
	add.s64 	%rd33, %rd12045, 1;
	mov.u64 	%rd12018, 0;

$L__BB0_13:
	add.s64 	%rd226, %rd33, %rd12018;
	mov.u16 	%rs11, 0;
	st.local.u8 	[%rd226], %rs11;
	add.s64 	%rd12018, %rd12018, 1;
	add.s32 	%r8260, %r8260, 1;
	setp.lt.u32 	%p11, %r8260, 127;
	@%p11 bra 	$L__BB0_13;

	mov.u16 	%rs12, 128;
	st.local.u8 	[%rd12045], %rs12;
	ld.local.u32 	%r21, [%rd3];
	shr.u32 	%r81, %r21, 21;
	shr.u32 	%r82, %r21, 13;
	cvt.u16.u32 	%rs13, %r21;
	and.b32  	%r83, %r81, 255;
	prmt.b32 	%r84, %r82, %r83, 30212;
	shl.b16 	%rs14, %rs13, 3;
	cvt.u32.u16 	%r85, %rs14;
	shr.u16 	%rs15, %rs13, 5;
	and.b16  	%rs16, %rs15, 255;
	cvt.u32.u16 	%r86, %rs16;
	prmt.b32 	%r87, %r85, %r86, 30212;
	prmt.b32 	%r88, %r87, %r84, 4180;
	mov.b32 	%r89, {%rs11, %rs11};
	st.local.v4.u32 	[%rd1], {%r89, %r89, %r89, %r88};
	and.b32  	%r8265, %r21, 127;
	setp.lt.u32 	%p12, %r8265, 112;
	selp.b32 	%r90, 112, 240, %p12;
	sub.s32 	%r8268, %r90, %r8265;
	setp.eq.s32 	%p13, %r8268, 0;
	@%p13 bra 	$L__BB0_34;

	add.s32 	%r91, %r21, %r8268;
	st.local.u32 	[%rd3], %r91;
	mov.u32 	%r92, 128;
	sub.s32 	%r24, %r92, %r8265;
	setp.lt.u32 	%p14, %r8268, %r24;
	setp.eq.s32 	%p15, %r8265, 0;
	or.pred  	%p16, %p15, %p14;
	@%p16 bra 	$L__BB0_23;

	setp.eq.s32 	%p17, %r24, 0;
	@%p17 bra 	$L__BB0_22;

	cvt.u64.u32 	%rd227, %r8265;
	add.s64 	%rd228, %rd3, %rd227;
	add.s64 	%rd12023, %rd228, 72;
	and.b32  	%r8262, %r24, 3;
	setp.eq.s32 	%p18, %r8262, 0;
	mov.u64 	%rd12024, %rd12045;
	mov.u32 	%r8263, %r24;
	@%p18 bra 	$L__BB0_20;

	mov.u64 	%rd12019, %rd12023;
	mov.u64 	%rd12020, %rd12045;
	mov.u32 	%r8263, %r24;

$L__BB0_19:
	.pragma "nounroll";
	add.s32 	%r8263, %r8263, -1;
	add.s64 	%rd12024, %rd12020, 1;
	ld.local.u8 	%rs18, [%rd12020];
	add.s64 	%rd12023, %rd12019, 1;
	st.local.u8 	[%rd12019], %rs18;
	add.s32 	%r8262, %r8262, -1;
	setp.ne.s32 	%p19, %r8262, 0;
	mov.u64 	%rd12019, %rd12023;
	mov.u64 	%rd12020, %rd12024;
	@%p19 bra 	$L__BB0_19;

$L__BB0_20:
	xor.b32  	%r93, %r8265, 127;
	setp.lt.u32 	%p20, %r93, 3;
	@%p20 bra 	$L__BB0_22;

$L__BB0_21:
	ld.local.u8 	%rs19, [%rd12024];
	st.local.u8 	[%rd12023], %rs19;
	ld.local.u8 	%rs20, [%rd12024+1];
	st.local.u8 	[%rd12023+1], %rs20;
	ld.local.u8 	%rs21, [%rd12024+2];
	st.local.u8 	[%rd12023+2], %rs21;
	add.s64 	%rd49, %rd12024, 4;
	ld.local.u8 	%rs22, [%rd12024+3];
	add.s64 	%rd50, %rd12023, 4;
	st.local.u8 	[%rd12023+3], %rs22;
	add.s32 	%r8263, %r8263, -4;
	setp.ne.s32 	%p21, %r8263, 0;
	mov.u64 	%rd12023, %rd50;
	mov.u64 	%rd12024, %rd49;
	@%p21 bra 	$L__BB0_21;

$L__BB0_22:
	ld.local.u64 	%rd229, [%rd3+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r95, %temp}, %rd229;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r96}, %rd229;
	}
	mov.u32 	%r97, 291;
	mov.u32 	%r8265, 0;
	prmt.b32 	%r98, %r95, %r8265, %r97;
	prmt.b32 	%r99, %r96, %r8265, %r97;
	mov.b64 	%rd230, {%r99, %r98};
	ld.local.u64 	%rd231, [%rd3+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %rd231;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r101}, %rd231;
	}
	prmt.b32 	%r102, %r100, %r8265, %r97;
	prmt.b32 	%r103, %r101, %r8265, %r97;
	mov.b64 	%rd232, {%r103, %r102};
	ld.local.u64 	%rd233, [%rd3+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r104, %temp}, %rd233;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r105}, %rd233;
	}
	prmt.b32 	%r106, %r104, %r8265, %r97;
	prmt.b32 	%r107, %r105, %r8265, %r97;
	mov.b64 	%rd234, {%r107, %r106};
	ld.local.u64 	%rd235, [%rd3+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r108, %temp}, %rd235;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r109}, %rd235;
	}
	prmt.b32 	%r110, %r108, %r8265, %r97;
	prmt.b32 	%r111, %r109, %r8265, %r97;
	mov.b64 	%rd236, {%r111, %r110};
	ld.local.u64 	%rd237, [%rd3+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r112, %temp}, %rd237;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r113}, %rd237;
	}
	prmt.b32 	%r114, %r112, %r8265, %r97;
	prmt.b32 	%r115, %r113, %r8265, %r97;
	mov.b64 	%rd238, {%r115, %r114};
	ld.local.u64 	%rd239, [%rd3+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r116, %temp}, %rd239;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r117}, %rd239;
	}
	prmt.b32 	%r118, %r116, %r8265, %r97;
	prmt.b32 	%r119, %r117, %r8265, %r97;
	mov.b64 	%rd240, {%r119, %r118};
	ld.local.u64 	%rd241, [%rd3+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r120, %temp}, %rd241;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r121}, %rd241;
	}
	prmt.b32 	%r122, %r120, %r8265, %r97;
	prmt.b32 	%r123, %r121, %r8265, %r97;
	mov.b64 	%rd242, {%r123, %r122};
	ld.local.u64 	%rd243, [%rd3+128];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r124, %temp}, %rd243;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r125}, %rd243;
	}
	prmt.b32 	%r126, %r124, %r8265, %r97;
	prmt.b32 	%r127, %r125, %r8265, %r97;
	mov.b64 	%rd244, {%r127, %r126};
	ld.local.u64 	%rd245, [%rd3+136];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r128, %temp}, %rd245;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r129}, %rd245;
	}
	prmt.b32 	%r130, %r128, %r8265, %r97;
	prmt.b32 	%r131, %r129, %r8265, %r97;
	mov.b64 	%rd246, {%r131, %r130};
	ld.local.u64 	%rd247, [%rd3+144];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r132, %temp}, %rd247;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r133}, %rd247;
	}
	prmt.b32 	%r134, %r132, %r8265, %r97;
	prmt.b32 	%r135, %r133, %r8265, %r97;
	mov.b64 	%rd248, {%r135, %r134};
	ld.local.u64 	%rd249, [%rd3+152];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r136, %temp}, %rd249;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r137}, %rd249;
	}
	prmt.b32 	%r138, %r136, %r8265, %r97;
	prmt.b32 	%r139, %r137, %r8265, %r97;
	mov.b64 	%rd250, {%r139, %r138};
	ld.local.u64 	%rd251, [%rd3+160];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r140, %temp}, %rd251;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r141}, %rd251;
	}
	prmt.b32 	%r142, %r140, %r8265, %r97;
	prmt.b32 	%r143, %r141, %r8265, %r97;
	mov.b64 	%rd252, {%r143, %r142};
	ld.local.u64 	%rd253, [%rd3+168];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r144, %temp}, %rd253;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r145}, %rd253;
	}
	prmt.b32 	%r146, %r144, %r8265, %r97;
	prmt.b32 	%r147, %r145, %r8265, %r97;
	mov.b64 	%rd254, {%r147, %r146};
	ld.local.u64 	%rd255, [%rd3+176];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r148, %temp}, %rd255;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r149}, %rd255;
	}
	prmt.b32 	%r150, %r148, %r8265, %r97;
	prmt.b32 	%r151, %r149, %r8265, %r97;
	mov.b64 	%rd256, {%r151, %r150};
	ld.local.u64 	%rd257, [%rd3+184];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r152, %temp}, %rd257;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r153}, %rd257;
	}
	prmt.b32 	%r154, %r152, %r8265, %r97;
	prmt.b32 	%r155, %r153, %r8265, %r97;
	mov.b64 	%rd258, {%r155, %r154};
	ld.local.u64 	%rd259, [%rd3+192];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r156, %temp}, %rd259;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r157}, %rd259;
	}
	prmt.b32 	%r158, %r156, %r8265, %r97;
	prmt.b32 	%r159, %r157, %r8265, %r97;
	mov.b64 	%rd260, {%r159, %r158};
	ld.local.u64 	%rd261, [%rd3+64];
	add.s64 	%rd262, %rd230, %rd261;
	ld.local.u64 	%rd263, [%rd3+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd263;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 14;
	shf.r.wrap.b32 	%r163, %r160, %r161, 14;
	mov.b64 	%rd264, {%r163, %r162};
	shf.r.wrap.b32 	%r164, %r161, %r160, 18;
	shf.r.wrap.b32 	%r165, %r160, %r161, 18;
	mov.b64 	%rd265, {%r165, %r164};
	xor.b64  	%rd266, %rd264, %rd265;
	shf.l.wrap.b32 	%r166, %r160, %r161, 23;
	shf.l.wrap.b32 	%r167, %r161, %r160, 23;
	mov.b64 	%rd267, {%r167, %r166};
	xor.b64  	%rd268, %rd266, %rd267;
	add.s64 	%rd269, %rd262, %rd268;
	ld.local.u64 	%rd270, [%rd3+56];
	ld.local.u64 	%rd271, [%rd3+48];
	xor.b64  	%rd272, %rd270, %rd271;
	and.b64  	%rd273, %rd272, %rd263;
	xor.b64  	%rd274, %rd273, %rd270;
	add.s64 	%rd275, %rd269, %rd274;
	add.s64 	%rd276, %rd275, 4794697086780616226;
	ld.local.u64 	%rd277, [%rd3+32];
	add.s64 	%rd278, %rd276, %rd277;
	ld.local.u64 	%rd279, [%rd3+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r168,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd279;
	}
	shf.r.wrap.b32 	%r170, %r169, %r168, 28;
	shf.r.wrap.b32 	%r171, %r168, %r169, 28;
	mov.b64 	%rd280, {%r171, %r170};
	shf.l.wrap.b32 	%r172, %r168, %r169, 30;
	shf.l.wrap.b32 	%r173, %r169, %r168, 30;
	mov.b64 	%rd281, {%r173, %r172};
	xor.b64  	%rd282, %rd280, %rd281;
	shf.l.wrap.b32 	%r174, %r168, %r169, 25;
	shf.l.wrap.b32 	%r175, %r169, %r168, 25;
	mov.b64 	%rd283, {%r175, %r174};
	xor.b64  	%rd284, %rd282, %rd283;
	ld.local.u64 	%rd285, [%rd3+16];
	and.b64  	%rd286, %rd285, %rd279;
	or.b64  	%rd287, %rd285, %rd279;
	ld.local.u64 	%rd288, [%rd3+24];
	and.b64  	%rd289, %rd288, %rd287;
	or.b64  	%rd290, %rd289, %rd286;
	add.s64 	%rd291, %rd290, %rd284;
	add.s64 	%rd292, %rd291, %rd276;
	add.s64 	%rd293, %rd232, %rd270;
	xor.b64  	%rd294, %rd271, %rd263;
	and.b64  	%rd295, %rd278, %rd294;
	xor.b64  	%rd296, %rd295, %rd271;
	add.s64 	%rd297, %rd293, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd278;
	}
	shf.r.wrap.b32 	%r178, %r177, %r176, 14;
	shf.r.wrap.b32 	%r179, %r176, %r177, 14;
	mov.b64 	%rd298, {%r179, %r178};
	shf.r.wrap.b32 	%r180, %r177, %r176, 18;
	shf.r.wrap.b32 	%r181, %r176, %r177, 18;
	mov.b64 	%rd299, {%r181, %r180};
	xor.b64  	%rd300, %rd298, %rd299;
	shf.l.wrap.b32 	%r182, %r176, %r177, 23;
	shf.l.wrap.b32 	%r183, %r177, %r176, 23;
	mov.b64 	%rd301, {%r183, %r182};
	xor.b64  	%rd302, %rd300, %rd301;
	add.s64 	%rd303, %rd297, %rd302;
	add.s64 	%rd304, %rd303, 8158064640168781261;
	add.s64 	%rd305, %rd304, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd292;
	}
	shf.r.wrap.b32 	%r186, %r185, %r184, 28;
	shf.r.wrap.b32 	%r187, %r184, %r185, 28;
	mov.b64 	%rd306, {%r187, %r186};
	shf.l.wrap.b32 	%r188, %r184, %r185, 30;
	shf.l.wrap.b32 	%r189, %r185, %r184, 30;
	mov.b64 	%rd307, {%r189, %r188};
	xor.b64  	%rd308, %rd306, %rd307;
	shf.l.wrap.b32 	%r190, %r184, %r185, 25;
	shf.l.wrap.b32 	%r191, %r185, %r184, 25;
	mov.b64 	%rd309, {%r191, %r190};
	xor.b64  	%rd310, %rd308, %rd309;
	and.b64  	%rd311, %rd292, %rd279;
	or.b64  	%rd312, %rd292, %rd279;
	and.b64  	%rd313, %rd312, %rd285;
	or.b64  	%rd314, %rd313, %rd311;
	add.s64 	%rd315, %rd314, %rd310;
	add.s64 	%rd316, %rd315, %rd304;
	add.s64 	%rd317, %rd234, %rd271;
	xor.b64  	%rd318, %rd278, %rd263;
	and.b64  	%rd319, %rd305, %rd318;
	xor.b64  	%rd320, %rd319, %rd263;
	add.s64 	%rd321, %rd317, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r192,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd305;
	}
	shf.r.wrap.b32 	%r194, %r193, %r192, 14;
	shf.r.wrap.b32 	%r195, %r192, %r193, 14;
	mov.b64 	%rd322, {%r195, %r194};
	shf.r.wrap.b32 	%r196, %r193, %r192, 18;
	shf.r.wrap.b32 	%r197, %r192, %r193, 18;
	mov.b64 	%rd323, {%r197, %r196};
	xor.b64  	%rd324, %rd322, %rd323;
	shf.l.wrap.b32 	%r198, %r192, %r193, 23;
	shf.l.wrap.b32 	%r199, %r193, %r192, 23;
	mov.b64 	%rd325, {%r199, %r198};
	xor.b64  	%rd326, %rd324, %rd325;
	add.s64 	%rd327, %rd321, %rd326;
	add.s64 	%rd328, %rd327, -5349999486874862801;
	add.s64 	%rd329, %rd328, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r200,%dummy}, %rd316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd316;
	}
	shf.r.wrap.b32 	%r202, %r201, %r200, 28;
	shf.r.wrap.b32 	%r203, %r200, %r201, 28;
	mov.b64 	%rd330, {%r203, %r202};
	shf.l.wrap.b32 	%r204, %r200, %r201, 30;
	shf.l.wrap.b32 	%r205, %r201, %r200, 30;
	mov.b64 	%rd331, {%r205, %r204};
	xor.b64  	%rd332, %rd330, %rd331;
	shf.l.wrap.b32 	%r206, %r200, %r201, 25;
	shf.l.wrap.b32 	%r207, %r201, %r200, 25;
	mov.b64 	%rd333, {%r207, %r206};
	xor.b64  	%rd334, %rd332, %rd333;
	and.b64  	%rd335, %rd316, %rd292;
	or.b64  	%rd336, %rd316, %rd292;
	and.b64  	%rd337, %rd336, %rd279;
	or.b64  	%rd338, %rd337, %rd335;
	add.s64 	%rd339, %rd338, %rd334;
	add.s64 	%rd340, %rd339, %rd328;
	add.s64 	%rd341, %rd236, %rd263;
	xor.b64  	%rd342, %rd305, %rd278;
	and.b64  	%rd343, %rd329, %rd342;
	xor.b64  	%rd344, %rd343, %rd278;
	add.s64 	%rd345, %rd341, %rd344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd329;
	}
	shf.r.wrap.b32 	%r210, %r209, %r208, 14;
	shf.r.wrap.b32 	%r211, %r208, %r209, 14;
	mov.b64 	%rd346, {%r211, %r210};
	shf.r.wrap.b32 	%r212, %r209, %r208, 18;
	shf.r.wrap.b32 	%r213, %r208, %r209, 18;
	mov.b64 	%rd347, {%r213, %r212};
	xor.b64  	%rd348, %rd346, %rd347;
	shf.l.wrap.b32 	%r214, %r208, %r209, 23;
	shf.l.wrap.b32 	%r215, %r209, %r208, 23;
	mov.b64 	%rd349, {%r215, %r214};
	xor.b64  	%rd350, %rd348, %rd349;
	add.s64 	%rd351, %rd345, %rd350;
	add.s64 	%rd352, %rd351, -1606136188198331460;
	add.s64 	%rd353, %rd352, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd340;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 28;
	shf.r.wrap.b32 	%r219, %r216, %r217, 28;
	mov.b64 	%rd354, {%r219, %r218};
	shf.l.wrap.b32 	%r220, %r216, %r217, 30;
	shf.l.wrap.b32 	%r221, %r217, %r216, 30;
	mov.b64 	%rd355, {%r221, %r220};
	xor.b64  	%rd356, %rd354, %rd355;
	shf.l.wrap.b32 	%r222, %r216, %r217, 25;
	shf.l.wrap.b32 	%r223, %r217, %r216, 25;
	mov.b64 	%rd357, {%r223, %r222};
	xor.b64  	%rd358, %rd356, %rd357;
	and.b64  	%rd359, %rd340, %rd316;
	or.b64  	%rd360, %rd340, %rd316;
	and.b64  	%rd361, %rd360, %rd292;
	or.b64  	%rd362, %rd361, %rd359;
	add.s64 	%rd363, %rd362, %rd358;
	add.s64 	%rd364, %rd363, %rd352;
	add.s64 	%rd365, %rd238, %rd278;
	xor.b64  	%rd366, %rd329, %rd305;
	and.b64  	%rd367, %rd353, %rd366;
	xor.b64  	%rd368, %rd367, %rd305;
	add.s64 	%rd369, %rd365, %rd368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd353;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 14;
	shf.r.wrap.b32 	%r227, %r224, %r225, 14;
	mov.b64 	%rd370, {%r227, %r226};
	shf.r.wrap.b32 	%r228, %r225, %r224, 18;
	shf.r.wrap.b32 	%r229, %r224, %r225, 18;
	mov.b64 	%rd371, {%r229, %r228};
	xor.b64  	%rd372, %rd370, %rd371;
	shf.l.wrap.b32 	%r230, %r224, %r225, 23;
	shf.l.wrap.b32 	%r231, %r225, %r224, 23;
	mov.b64 	%rd373, {%r231, %r230};
	xor.b64  	%rd374, %rd372, %rd373;
	add.s64 	%rd375, %rd369, %rd374;
	add.s64 	%rd376, %rd375, 4131703408338449720;
	add.s64 	%rd377, %rd376, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd364;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 28;
	shf.r.wrap.b32 	%r235, %r232, %r233, 28;
	mov.b64 	%rd378, {%r235, %r234};
	shf.l.wrap.b32 	%r236, %r232, %r233, 30;
	shf.l.wrap.b32 	%r237, %r233, %r232, 30;
	mov.b64 	%rd379, {%r237, %r236};
	xor.b64  	%rd380, %rd378, %rd379;
	shf.l.wrap.b32 	%r238, %r232, %r233, 25;
	shf.l.wrap.b32 	%r239, %r233, %r232, 25;
	mov.b64 	%rd381, {%r239, %r238};
	xor.b64  	%rd382, %rd380, %rd381;
	and.b64  	%rd383, %rd364, %rd340;
	or.b64  	%rd384, %rd364, %rd340;
	and.b64  	%rd385, %rd384, %rd316;
	or.b64  	%rd386, %rd385, %rd383;
	add.s64 	%rd387, %rd386, %rd382;
	add.s64 	%rd388, %rd387, %rd376;
	add.s64 	%rd389, %rd240, %rd305;
	xor.b64  	%rd390, %rd353, %rd329;
	and.b64  	%rd391, %rd377, %rd390;
	xor.b64  	%rd392, %rd391, %rd329;
	add.s64 	%rd393, %rd389, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd377;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 14;
	shf.r.wrap.b32 	%r243, %r240, %r241, 14;
	mov.b64 	%rd394, {%r243, %r242};
	shf.r.wrap.b32 	%r244, %r241, %r240, 18;
	shf.r.wrap.b32 	%r245, %r240, %r241, 18;
	mov.b64 	%rd395, {%r245, %r244};
	xor.b64  	%rd396, %rd394, %rd395;
	shf.l.wrap.b32 	%r246, %r240, %r241, 23;
	shf.l.wrap.b32 	%r247, %r241, %r240, 23;
	mov.b64 	%rd397, {%r247, %r246};
	xor.b64  	%rd398, %rd396, %rd397;
	add.s64 	%rd399, %rd393, %rd398;
	add.s64 	%rd400, %rd399, 6480981068601479193;
	add.s64 	%rd401, %rd400, %rd316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd388;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 28;
	shf.r.wrap.b32 	%r251, %r248, %r249, 28;
	mov.b64 	%rd402, {%r251, %r250};
	shf.l.wrap.b32 	%r252, %r248, %r249, 30;
	shf.l.wrap.b32 	%r253, %r249, %r248, 30;
	mov.b64 	%rd403, {%r253, %r252};
	xor.b64  	%rd404, %rd402, %rd403;
	shf.l.wrap.b32 	%r254, %r248, %r249, 25;
	shf.l.wrap.b32 	%r255, %r249, %r248, 25;
	mov.b64 	%rd405, {%r255, %r254};
	xor.b64  	%rd406, %rd404, %rd405;
	and.b64  	%rd407, %rd388, %rd364;
	or.b64  	%rd408, %rd388, %rd364;
	and.b64  	%rd409, %rd408, %rd340;
	or.b64  	%rd410, %rd409, %rd407;
	add.s64 	%rd411, %rd410, %rd406;
	add.s64 	%rd412, %rd411, %rd400;
	add.s64 	%rd413, %rd242, %rd329;
	xor.b64  	%rd414, %rd377, %rd353;
	and.b64  	%rd415, %rd401, %rd414;
	xor.b64  	%rd416, %rd415, %rd353;
	add.s64 	%rd417, %rd413, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd401;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 14;
	shf.r.wrap.b32 	%r259, %r256, %r257, 14;
	mov.b64 	%rd418, {%r259, %r258};
	shf.r.wrap.b32 	%r260, %r257, %r256, 18;
	shf.r.wrap.b32 	%r261, %r256, %r257, 18;
	mov.b64 	%rd419, {%r261, %r260};
	xor.b64  	%rd420, %rd418, %rd419;
	shf.l.wrap.b32 	%r262, %r256, %r257, 23;
	shf.l.wrap.b32 	%r263, %r257, %r256, 23;
	mov.b64 	%rd421, {%r263, %r262};
	xor.b64  	%rd422, %rd420, %rd421;
	add.s64 	%rd423, %rd417, %rd422;
	add.s64 	%rd424, %rd423, -7908458776815382629;
	add.s64 	%rd425, %rd424, %rd340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd412;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 28;
	shf.r.wrap.b32 	%r267, %r264, %r265, 28;
	mov.b64 	%rd426, {%r267, %r266};
	shf.l.wrap.b32 	%r268, %r264, %r265, 30;
	shf.l.wrap.b32 	%r269, %r265, %r264, 30;
	mov.b64 	%rd427, {%r269, %r268};
	xor.b64  	%rd428, %rd426, %rd427;
	shf.l.wrap.b32 	%r270, %r264, %r265, 25;
	shf.l.wrap.b32 	%r271, %r265, %r264, 25;
	mov.b64 	%rd429, {%r271, %r270};
	xor.b64  	%rd430, %rd428, %rd429;
	and.b64  	%rd431, %rd412, %rd388;
	or.b64  	%rd432, %rd412, %rd388;
	and.b64  	%rd433, %rd432, %rd364;
	or.b64  	%rd434, %rd433, %rd431;
	add.s64 	%rd435, %rd434, %rd430;
	add.s64 	%rd436, %rd435, %rd424;
	add.s64 	%rd437, %rd244, %rd353;
	xor.b64  	%rd438, %rd401, %rd377;
	and.b64  	%rd439, %rd425, %rd438;
	xor.b64  	%rd440, %rd439, %rd377;
	add.s64 	%rd441, %rd437, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd425;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 14;
	shf.r.wrap.b32 	%r275, %r272, %r273, 14;
	mov.b64 	%rd442, {%r275, %r274};
	shf.r.wrap.b32 	%r276, %r273, %r272, 18;
	shf.r.wrap.b32 	%r277, %r272, %r273, 18;
	mov.b64 	%rd443, {%r277, %r276};
	xor.b64  	%rd444, %rd442, %rd443;
	shf.l.wrap.b32 	%r278, %r272, %r273, 23;
	shf.l.wrap.b32 	%r279, %r273, %r272, 23;
	mov.b64 	%rd445, {%r279, %r278};
	xor.b64  	%rd446, %rd444, %rd445;
	add.s64 	%rd447, %rd441, %rd446;
	add.s64 	%rd448, %rd447, -6116909921290321640;
	add.s64 	%rd449, %rd448, %rd364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd436;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 28;
	shf.r.wrap.b32 	%r283, %r280, %r281, 28;
	mov.b64 	%rd450, {%r283, %r282};
	shf.l.wrap.b32 	%r284, %r280, %r281, 30;
	shf.l.wrap.b32 	%r285, %r281, %r280, 30;
	mov.b64 	%rd451, {%r285, %r284};
	xor.b64  	%rd452, %rd450, %rd451;
	shf.l.wrap.b32 	%r286, %r280, %r281, 25;
	shf.l.wrap.b32 	%r287, %r281, %r280, 25;
	mov.b64 	%rd453, {%r287, %r286};
	xor.b64  	%rd454, %rd452, %rd453;
	and.b64  	%rd455, %rd436, %rd412;
	or.b64  	%rd456, %rd436, %rd412;
	and.b64  	%rd457, %rd456, %rd388;
	or.b64  	%rd458, %rd457, %rd455;
	add.s64 	%rd459, %rd458, %rd454;
	add.s64 	%rd460, %rd459, %rd448;
	add.s64 	%rd461, %rd246, %rd377;
	xor.b64  	%rd462, %rd425, %rd401;
	and.b64  	%rd463, %rd449, %rd462;
	xor.b64  	%rd464, %rd463, %rd401;
	add.s64 	%rd465, %rd461, %rd464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd449;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 14;
	shf.r.wrap.b32 	%r291, %r288, %r289, 14;
	mov.b64 	%rd466, {%r291, %r290};
	shf.r.wrap.b32 	%r292, %r289, %r288, 18;
	shf.r.wrap.b32 	%r293, %r288, %r289, 18;
	mov.b64 	%rd467, {%r293, %r292};
	xor.b64  	%rd468, %rd466, %rd467;
	shf.l.wrap.b32 	%r294, %r288, %r289, 23;
	shf.l.wrap.b32 	%r295, %r289, %r288, 23;
	mov.b64 	%rd469, {%r295, %r294};
	xor.b64  	%rd470, %rd468, %rd469;
	add.s64 	%rd471, %rd465, %rd470;
	add.s64 	%rd472, %rd471, -2880145864133508542;
	add.s64 	%rd473, %rd472, %rd388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r296,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r297}, %rd460;
	}
	shf.r.wrap.b32 	%r298, %r297, %r296, 28;
	shf.r.wrap.b32 	%r299, %r296, %r297, 28;
	mov.b64 	%rd474, {%r299, %r298};
	shf.l.wrap.b32 	%r300, %r296, %r297, 30;
	shf.l.wrap.b32 	%r301, %r297, %r296, 30;
	mov.b64 	%rd475, {%r301, %r300};
	xor.b64  	%rd476, %rd474, %rd475;
	shf.l.wrap.b32 	%r302, %r296, %r297, 25;
	shf.l.wrap.b32 	%r303, %r297, %r296, 25;
	mov.b64 	%rd477, {%r303, %r302};
	xor.b64  	%rd478, %rd476, %rd477;
	and.b64  	%rd479, %rd460, %rd436;
	or.b64  	%rd480, %rd460, %rd436;
	and.b64  	%rd481, %rd480, %rd412;
	or.b64  	%rd482, %rd481, %rd479;
	add.s64 	%rd483, %rd482, %rd478;
	add.s64 	%rd484, %rd483, %rd472;
	add.s64 	%rd485, %rd248, %rd401;
	xor.b64  	%rd486, %rd449, %rd425;
	and.b64  	%rd487, %rd473, %rd486;
	xor.b64  	%rd488, %rd487, %rd425;
	add.s64 	%rd489, %rd485, %rd488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r304,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r305}, %rd473;
	}
	shf.r.wrap.b32 	%r306, %r305, %r304, 14;
	shf.r.wrap.b32 	%r307, %r304, %r305, 14;
	mov.b64 	%rd490, {%r307, %r306};
	shf.r.wrap.b32 	%r308, %r305, %r304, 18;
	shf.r.wrap.b32 	%r309, %r304, %r305, 18;
	mov.b64 	%rd491, {%r309, %r308};
	xor.b64  	%rd492, %rd490, %rd491;
	shf.l.wrap.b32 	%r310, %r304, %r305, 23;
	shf.l.wrap.b32 	%r311, %r305, %r304, 23;
	mov.b64 	%rd493, {%r311, %r310};
	xor.b64  	%rd494, %rd492, %rd493;
	add.s64 	%rd495, %rd489, %rd494;
	add.s64 	%rd496, %rd495, 1334009975649890238;
	add.s64 	%rd497, %rd496, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd484;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 28;
	shf.r.wrap.b32 	%r315, %r312, %r313, 28;
	mov.b64 	%rd498, {%r315, %r314};
	shf.l.wrap.b32 	%r316, %r312, %r313, 30;
	shf.l.wrap.b32 	%r317, %r313, %r312, 30;
	mov.b64 	%rd499, {%r317, %r316};
	xor.b64  	%rd500, %rd498, %rd499;
	shf.l.wrap.b32 	%r318, %r312, %r313, 25;
	shf.l.wrap.b32 	%r319, %r313, %r312, 25;
	mov.b64 	%rd501, {%r319, %r318};
	xor.b64  	%rd502, %rd500, %rd501;
	and.b64  	%rd503, %rd484, %rd460;
	or.b64  	%rd504, %rd484, %rd460;
	and.b64  	%rd505, %rd504, %rd436;
	or.b64  	%rd506, %rd505, %rd503;
	add.s64 	%rd507, %rd506, %rd502;
	add.s64 	%rd508, %rd507, %rd496;
	add.s64 	%rd509, %rd250, %rd425;
	xor.b64  	%rd510, %rd473, %rd449;
	and.b64  	%rd511, %rd497, %rd510;
	xor.b64  	%rd512, %rd511, %rd449;
	add.s64 	%rd513, %rd509, %rd512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r320,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd497;
	}
	shf.r.wrap.b32 	%r322, %r321, %r320, 14;
	shf.r.wrap.b32 	%r323, %r320, %r321, 14;
	mov.b64 	%rd514, {%r323, %r322};
	shf.r.wrap.b32 	%r324, %r321, %r320, 18;
	shf.r.wrap.b32 	%r325, %r320, %r321, 18;
	mov.b64 	%rd515, {%r325, %r324};
	xor.b64  	%rd516, %rd514, %rd515;
	shf.l.wrap.b32 	%r326, %r320, %r321, 23;
	shf.l.wrap.b32 	%r327, %r321, %r320, 23;
	mov.b64 	%rd517, {%r327, %r326};
	xor.b64  	%rd518, %rd516, %rd517;
	add.s64 	%rd519, %rd513, %rd518;
	add.s64 	%rd520, %rd519, 2608012711638119052;
	add.s64 	%rd521, %rd520, %rd436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r328,%dummy}, %rd508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r329}, %rd508;
	}
	shf.r.wrap.b32 	%r330, %r329, %r328, 28;
	shf.r.wrap.b32 	%r331, %r328, %r329, 28;
	mov.b64 	%rd522, {%r331, %r330};
	shf.l.wrap.b32 	%r332, %r328, %r329, 30;
	shf.l.wrap.b32 	%r333, %r329, %r328, 30;
	mov.b64 	%rd523, {%r333, %r332};
	xor.b64  	%rd524, %rd522, %rd523;
	shf.l.wrap.b32 	%r334, %r328, %r329, 25;
	shf.l.wrap.b32 	%r335, %r329, %r328, 25;
	mov.b64 	%rd525, {%r335, %r334};
	xor.b64  	%rd526, %rd524, %rd525;
	and.b64  	%rd527, %rd508, %rd484;
	or.b64  	%rd528, %rd508, %rd484;
	and.b64  	%rd529, %rd528, %rd460;
	or.b64  	%rd530, %rd529, %rd527;
	add.s64 	%rd531, %rd530, %rd526;
	add.s64 	%rd532, %rd531, %rd520;
	add.s64 	%rd533, %rd252, %rd449;
	xor.b64  	%rd534, %rd497, %rd473;
	and.b64  	%rd535, %rd521, %rd534;
	xor.b64  	%rd536, %rd535, %rd473;
	add.s64 	%rd537, %rd533, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd521;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 14;
	shf.r.wrap.b32 	%r339, %r336, %r337, 14;
	mov.b64 	%rd538, {%r339, %r338};
	shf.r.wrap.b32 	%r340, %r337, %r336, 18;
	shf.r.wrap.b32 	%r341, %r336, %r337, 18;
	mov.b64 	%rd539, {%r341, %r340};
	xor.b64  	%rd540, %rd538, %rd539;
	shf.l.wrap.b32 	%r342, %r336, %r337, 23;
	shf.l.wrap.b32 	%r343, %r337, %r336, 23;
	mov.b64 	%rd541, {%r343, %r342};
	xor.b64  	%rd542, %rd540, %rd541;
	add.s64 	%rd543, %rd537, %rd542;
	add.s64 	%rd544, %rd543, 6128411473006802146;
	add.s64 	%rd545, %rd544, %rd460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r344,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd532;
	}
	shf.r.wrap.b32 	%r346, %r345, %r344, 28;
	shf.r.wrap.b32 	%r347, %r344, %r345, 28;
	mov.b64 	%rd546, {%r347, %r346};
	shf.l.wrap.b32 	%r348, %r344, %r345, 30;
	shf.l.wrap.b32 	%r349, %r345, %r344, 30;
	mov.b64 	%rd547, {%r349, %r348};
	xor.b64  	%rd548, %rd546, %rd547;
	shf.l.wrap.b32 	%r350, %r344, %r345, 25;
	shf.l.wrap.b32 	%r351, %r345, %r344, 25;
	mov.b64 	%rd549, {%r351, %r350};
	xor.b64  	%rd550, %rd548, %rd549;
	and.b64  	%rd551, %rd532, %rd508;
	or.b64  	%rd552, %rd532, %rd508;
	and.b64  	%rd553, %rd552, %rd484;
	or.b64  	%rd554, %rd553, %rd551;
	add.s64 	%rd555, %rd554, %rd550;
	add.s64 	%rd556, %rd555, %rd544;
	add.s64 	%rd557, %rd254, %rd473;
	xor.b64  	%rd558, %rd521, %rd497;
	and.b64  	%rd559, %rd545, %rd558;
	xor.b64  	%rd560, %rd559, %rd497;
	add.s64 	%rd561, %rd557, %rd560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r352,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd545;
	}
	shf.r.wrap.b32 	%r354, %r353, %r352, 14;
	shf.r.wrap.b32 	%r355, %r352, %r353, 14;
	mov.b64 	%rd562, {%r355, %r354};
	shf.r.wrap.b32 	%r356, %r353, %r352, 18;
	shf.r.wrap.b32 	%r357, %r352, %r353, 18;
	mov.b64 	%rd563, {%r357, %r356};
	xor.b64  	%rd564, %rd562, %rd563;
	shf.l.wrap.b32 	%r358, %r352, %r353, 23;
	shf.l.wrap.b32 	%r359, %r353, %r352, 23;
	mov.b64 	%rd565, {%r359, %r358};
	xor.b64  	%rd566, %rd564, %rd565;
	add.s64 	%rd567, %rd561, %rd566;
	add.s64 	%rd568, %rd567, 8268148722764581231;
	add.s64 	%rd569, %rd568, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd556;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 28;
	shf.r.wrap.b32 	%r363, %r360, %r361, 28;
	mov.b64 	%rd570, {%r363, %r362};
	shf.l.wrap.b32 	%r364, %r360, %r361, 30;
	shf.l.wrap.b32 	%r365, %r361, %r360, 30;
	mov.b64 	%rd571, {%r365, %r364};
	xor.b64  	%rd572, %rd570, %rd571;
	shf.l.wrap.b32 	%r366, %r360, %r361, 25;
	shf.l.wrap.b32 	%r367, %r361, %r360, 25;
	mov.b64 	%rd573, {%r367, %r366};
	xor.b64  	%rd574, %rd572, %rd573;
	and.b64  	%rd575, %rd556, %rd532;
	or.b64  	%rd576, %rd556, %rd532;
	and.b64  	%rd577, %rd576, %rd508;
	or.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd578, %rd574;
	add.s64 	%rd580, %rd579, %rd568;
	add.s64 	%rd581, %rd256, %rd497;
	xor.b64  	%rd582, %rd545, %rd521;
	and.b64  	%rd583, %rd569, %rd582;
	xor.b64  	%rd584, %rd583, %rd521;
	add.s64 	%rd585, %rd581, %rd584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd569;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 14;
	shf.r.wrap.b32 	%r371, %r368, %r369, 14;
	mov.b64 	%rd586, {%r371, %r370};
	shf.r.wrap.b32 	%r372, %r369, %r368, 18;
	shf.r.wrap.b32 	%r373, %r368, %r369, 18;
	mov.b64 	%rd587, {%r373, %r372};
	xor.b64  	%rd588, %rd586, %rd587;
	shf.l.wrap.b32 	%r374, %r368, %r369, 23;
	shf.l.wrap.b32 	%r375, %r369, %r368, 23;
	mov.b64 	%rd589, {%r375, %r374};
	xor.b64  	%rd590, %rd588, %rd589;
	add.s64 	%rd591, %rd585, %rd590;
	add.s64 	%rd592, %rd591, -9160688886553864527;
	add.s64 	%rd593, %rd592, %rd508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r376,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd580;
	}
	shf.r.wrap.b32 	%r378, %r377, %r376, 28;
	shf.r.wrap.b32 	%r379, %r376, %r377, 28;
	mov.b64 	%rd594, {%r379, %r378};
	shf.l.wrap.b32 	%r380, %r376, %r377, 30;
	shf.l.wrap.b32 	%r381, %r377, %r376, 30;
	mov.b64 	%rd595, {%r381, %r380};
	xor.b64  	%rd596, %rd594, %rd595;
	shf.l.wrap.b32 	%r382, %r376, %r377, 25;
	shf.l.wrap.b32 	%r383, %r377, %r376, 25;
	mov.b64 	%rd597, {%r383, %r382};
	xor.b64  	%rd598, %rd596, %rd597;
	and.b64  	%rd599, %rd580, %rd556;
	or.b64  	%rd600, %rd580, %rd556;
	and.b64  	%rd601, %rd600, %rd532;
	or.b64  	%rd602, %rd601, %rd599;
	add.s64 	%rd603, %rd602, %rd598;
	add.s64 	%rd604, %rd603, %rd592;
	add.s64 	%rd605, %rd258, %rd521;
	xor.b64  	%rd606, %rd569, %rd545;
	and.b64  	%rd607, %rd593, %rd606;
	xor.b64  	%rd608, %rd607, %rd545;
	add.s64 	%rd609, %rd605, %rd608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd593;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 14;
	shf.r.wrap.b32 	%r387, %r384, %r385, 14;
	mov.b64 	%rd610, {%r387, %r386};
	shf.r.wrap.b32 	%r388, %r385, %r384, 18;
	shf.r.wrap.b32 	%r389, %r384, %r385, 18;
	mov.b64 	%rd611, {%r389, %r388};
	xor.b64  	%rd612, %rd610, %rd611;
	shf.l.wrap.b32 	%r390, %r384, %r385, 23;
	shf.l.wrap.b32 	%r391, %r385, %r384, 23;
	mov.b64 	%rd613, {%r391, %r390};
	xor.b64  	%rd614, %rd612, %rd613;
	add.s64 	%rd615, %rd609, %rd614;
	add.s64 	%rd616, %rd615, -7215885187991268811;
	add.s64 	%rd617, %rd616, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd604;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 28;
	shf.r.wrap.b32 	%r395, %r392, %r393, 28;
	mov.b64 	%rd618, {%r395, %r394};
	shf.l.wrap.b32 	%r396, %r392, %r393, 30;
	shf.l.wrap.b32 	%r397, %r393, %r392, 30;
	mov.b64 	%rd619, {%r397, %r396};
	xor.b64  	%rd620, %rd618, %rd619;
	shf.l.wrap.b32 	%r398, %r392, %r393, 25;
	shf.l.wrap.b32 	%r399, %r393, %r392, 25;
	mov.b64 	%rd621, {%r399, %r398};
	xor.b64  	%rd622, %rd620, %rd621;
	and.b64  	%rd623, %rd604, %rd580;
	or.b64  	%rd624, %rd604, %rd580;
	and.b64  	%rd625, %rd624, %rd556;
	or.b64  	%rd626, %rd625, %rd623;
	add.s64 	%rd627, %rd626, %rd622;
	add.s64 	%rd628, %rd627, %rd616;
	add.s64 	%rd629, %rd260, %rd545;
	xor.b64  	%rd630, %rd593, %rd569;
	and.b64  	%rd631, %rd617, %rd630;
	xor.b64  	%rd632, %rd631, %rd569;
	add.s64 	%rd633, %rd629, %rd632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd617;
	}
	shf.r.wrap.b32 	%r402, %r401, %r400, 14;
	shf.r.wrap.b32 	%r403, %r400, %r401, 14;
	mov.b64 	%rd634, {%r403, %r402};
	shf.r.wrap.b32 	%r404, %r401, %r400, 18;
	shf.r.wrap.b32 	%r405, %r400, %r401, 18;
	mov.b64 	%rd635, {%r405, %r404};
	xor.b64  	%rd636, %rd634, %rd635;
	shf.l.wrap.b32 	%r406, %r400, %r401, 23;
	shf.l.wrap.b32 	%r407, %r401, %r400, 23;
	mov.b64 	%rd637, {%r407, %r406};
	xor.b64  	%rd638, %rd636, %rd637;
	add.s64 	%rd639, %rd633, %rd638;
	add.s64 	%rd640, %rd639, -4495734319001033068;
	add.s64 	%rd641, %rd640, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd628;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 28;
	shf.r.wrap.b32 	%r411, %r408, %r409, 28;
	mov.b64 	%rd642, {%r411, %r410};
	shf.l.wrap.b32 	%r412, %r408, %r409, 30;
	shf.l.wrap.b32 	%r413, %r409, %r408, 30;
	mov.b64 	%rd643, {%r413, %r412};
	xor.b64  	%rd644, %rd642, %rd643;
	shf.l.wrap.b32 	%r414, %r408, %r409, 25;
	shf.l.wrap.b32 	%r415, %r409, %r408, 25;
	mov.b64 	%rd645, {%r415, %r414};
	xor.b64  	%rd646, %rd644, %rd645;
	and.b64  	%rd647, %rd628, %rd604;
	or.b64  	%rd648, %rd628, %rd604;
	and.b64  	%rd649, %rd648, %rd580;
	or.b64  	%rd650, %rd649, %rd647;
	add.s64 	%rd651, %rd650, %rd646;
	add.s64 	%rd652, %rd651, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd258;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 19;
	shf.r.wrap.b32 	%r419, %r416, %r417, 19;
	mov.b64 	%rd653, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 3;
	shf.l.wrap.b32 	%r421, %r417, %r416, 3;
	mov.b64 	%rd654, {%r421, %r420};
	xor.b64  	%rd655, %rd653, %rd654;
	shr.u64 	%rd656, %rd258, 6;
	xor.b64  	%rd657, %rd655, %rd656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd232;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 1;
	shf.r.wrap.b32 	%r425, %r422, %r423, 1;
	mov.b64 	%rd658, {%r425, %r424};
	shf.r.wrap.b32 	%r426, %r423, %r422, 8;
	shf.r.wrap.b32 	%r427, %r422, %r423, 8;
	mov.b64 	%rd659, {%r427, %r426};
	xor.b64  	%rd660, %rd658, %rd659;
	shr.u64 	%rd661, %rd232, 7;
	xor.b64  	%rd662, %rd660, %rd661;
	add.s64 	%rd663, %rd662, %rd230;
	add.s64 	%rd664, %rd663, %rd248;
	add.s64 	%rd665, %rd664, %rd657;
	add.s64 	%rd666, %rd665, %rd569;
	xor.b64  	%rd667, %rd617, %rd593;
	and.b64  	%rd668, %rd641, %rd667;
	xor.b64  	%rd669, %rd668, %rd593;
	add.s64 	%rd670, %rd666, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd641;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 14;
	shf.r.wrap.b32 	%r431, %r428, %r429, 14;
	mov.b64 	%rd671, {%r431, %r430};
	shf.r.wrap.b32 	%r432, %r429, %r428, 18;
	shf.r.wrap.b32 	%r433, %r428, %r429, 18;
	mov.b64 	%rd672, {%r433, %r432};
	xor.b64  	%rd673, %rd671, %rd672;
	shf.l.wrap.b32 	%r434, %r428, %r429, 23;
	shf.l.wrap.b32 	%r435, %r429, %r428, 23;
	mov.b64 	%rd674, {%r435, %r434};
	xor.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd670, %rd675;
	add.s64 	%rd677, %rd676, -1973867731355612462;
	add.s64 	%rd678, %rd677, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd652;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 28;
	shf.r.wrap.b32 	%r439, %r436, %r437, 28;
	mov.b64 	%rd679, {%r439, %r438};
	shf.l.wrap.b32 	%r440, %r436, %r437, 30;
	shf.l.wrap.b32 	%r441, %r437, %r436, 30;
	mov.b64 	%rd680, {%r441, %r440};
	xor.b64  	%rd681, %rd679, %rd680;
	shf.l.wrap.b32 	%r442, %r436, %r437, 25;
	shf.l.wrap.b32 	%r443, %r437, %r436, 25;
	mov.b64 	%rd682, {%r443, %r442};
	xor.b64  	%rd683, %rd681, %rd682;
	and.b64  	%rd684, %rd652, %rd628;
	or.b64  	%rd685, %rd652, %rd628;
	and.b64  	%rd686, %rd685, %rd604;
	or.b64  	%rd687, %rd686, %rd684;
	add.s64 	%rd688, %rd687, %rd683;
	add.s64 	%rd689, %rd688, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd260;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 19;
	shf.r.wrap.b32 	%r447, %r444, %r445, 19;
	mov.b64 	%rd690, {%r447, %r446};
	shf.l.wrap.b32 	%r448, %r444, %r445, 3;
	shf.l.wrap.b32 	%r449, %r445, %r444, 3;
	mov.b64 	%rd691, {%r449, %r448};
	xor.b64  	%rd692, %rd690, %rd691;
	shr.u64 	%rd693, %rd260, 6;
	xor.b64  	%rd694, %rd692, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r450,%dummy}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd234;
	}
	shf.r.wrap.b32 	%r452, %r451, %r450, 1;
	shf.r.wrap.b32 	%r453, %r450, %r451, 1;
	mov.b64 	%rd695, {%r453, %r452};
	shf.r.wrap.b32 	%r454, %r451, %r450, 8;
	shf.r.wrap.b32 	%r455, %r450, %r451, 8;
	mov.b64 	%rd696, {%r455, %r454};
	xor.b64  	%rd697, %rd695, %rd696;
	shr.u64 	%rd698, %rd234, 7;
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd699, %rd232;
	add.s64 	%rd701, %rd700, %rd250;
	add.s64 	%rd702, %rd701, %rd694;
	add.s64 	%rd703, %rd702, %rd593;
	xor.b64  	%rd704, %rd641, %rd617;
	and.b64  	%rd705, %rd678, %rd704;
	xor.b64  	%rd706, %rd705, %rd617;
	add.s64 	%rd707, %rd703, %rd706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd678;
	}
	shf.r.wrap.b32 	%r458, %r457, %r456, 14;
	shf.r.wrap.b32 	%r459, %r456, %r457, 14;
	mov.b64 	%rd708, {%r459, %r458};
	shf.r.wrap.b32 	%r460, %r457, %r456, 18;
	shf.r.wrap.b32 	%r461, %r456, %r457, 18;
	mov.b64 	%rd709, {%r461, %r460};
	xor.b64  	%rd710, %rd708, %rd709;
	shf.l.wrap.b32 	%r462, %r456, %r457, 23;
	shf.l.wrap.b32 	%r463, %r457, %r456, 23;
	mov.b64 	%rd711, {%r463, %r462};
	xor.b64  	%rd712, %rd710, %rd711;
	add.s64 	%rd713, %rd707, %rd712;
	add.s64 	%rd714, %rd713, -1171420211273849373;
	add.s64 	%rd715, %rd714, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd689;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 28;
	shf.r.wrap.b32 	%r467, %r464, %r465, 28;
	mov.b64 	%rd716, {%r467, %r466};
	shf.l.wrap.b32 	%r468, %r464, %r465, 30;
	shf.l.wrap.b32 	%r469, %r465, %r464, 30;
	mov.b64 	%rd717, {%r469, %r468};
	xor.b64  	%rd718, %rd716, %rd717;
	shf.l.wrap.b32 	%r470, %r464, %r465, 25;
	shf.l.wrap.b32 	%r471, %r465, %r464, 25;
	mov.b64 	%rd719, {%r471, %r470};
	xor.b64  	%rd720, %rd718, %rd719;
	and.b64  	%rd721, %rd689, %rd652;
	or.b64  	%rd722, %rd689, %rd652;
	and.b64  	%rd723, %rd722, %rd628;
	or.b64  	%rd724, %rd723, %rd721;
	add.s64 	%rd725, %rd724, %rd720;
	add.s64 	%rd726, %rd725, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd665;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 19;
	shf.r.wrap.b32 	%r475, %r472, %r473, 19;
	mov.b64 	%rd727, {%r475, %r474};
	shf.l.wrap.b32 	%r476, %r472, %r473, 3;
	shf.l.wrap.b32 	%r477, %r473, %r472, 3;
	mov.b64 	%rd728, {%r477, %r476};
	xor.b64  	%rd729, %rd727, %rd728;
	shr.u64 	%rd730, %rd665, 6;
	xor.b64  	%rd731, %rd729, %rd730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r478,%dummy}, %rd236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r479}, %rd236;
	}
	shf.r.wrap.b32 	%r480, %r479, %r478, 1;
	shf.r.wrap.b32 	%r481, %r478, %r479, 1;
	mov.b64 	%rd732, {%r481, %r480};
	shf.r.wrap.b32 	%r482, %r479, %r478, 8;
	shf.r.wrap.b32 	%r483, %r478, %r479, 8;
	mov.b64 	%rd733, {%r483, %r482};
	xor.b64  	%rd734, %rd732, %rd733;
	shr.u64 	%rd735, %rd236, 7;
	xor.b64  	%rd736, %rd734, %rd735;
	add.s64 	%rd737, %rd736, %rd234;
	add.s64 	%rd738, %rd737, %rd252;
	add.s64 	%rd739, %rd738, %rd731;
	add.s64 	%rd740, %rd739, %rd617;
	xor.b64  	%rd741, %rd678, %rd641;
	and.b64  	%rd742, %rd715, %rd741;
	xor.b64  	%rd743, %rd742, %rd641;
	add.s64 	%rd744, %rd740, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd715;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 14;
	shf.r.wrap.b32 	%r487, %r484, %r485, 14;
	mov.b64 	%rd745, {%r487, %r486};
	shf.r.wrap.b32 	%r488, %r485, %r484, 18;
	shf.r.wrap.b32 	%r489, %r484, %r485, 18;
	mov.b64 	%rd746, {%r489, %r488};
	xor.b64  	%rd747, %rd745, %rd746;
	shf.l.wrap.b32 	%r490, %r484, %r485, 23;
	shf.l.wrap.b32 	%r491, %r485, %r484, 23;
	mov.b64 	%rd748, {%r491, %r490};
	xor.b64  	%rd749, %rd747, %rd748;
	add.s64 	%rd750, %rd744, %rd749;
	add.s64 	%rd751, %rd750, 1135362057144423861;
	add.s64 	%rd752, %rd751, %rd628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd726;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 28;
	shf.r.wrap.b32 	%r495, %r492, %r493, 28;
	mov.b64 	%rd753, {%r495, %r494};
	shf.l.wrap.b32 	%r496, %r492, %r493, 30;
	shf.l.wrap.b32 	%r497, %r493, %r492, 30;
	mov.b64 	%rd754, {%r497, %r496};
	xor.b64  	%rd755, %rd753, %rd754;
	shf.l.wrap.b32 	%r498, %r492, %r493, 25;
	shf.l.wrap.b32 	%r499, %r493, %r492, 25;
	mov.b64 	%rd756, {%r499, %r498};
	xor.b64  	%rd757, %rd755, %rd756;
	and.b64  	%rd758, %rd726, %rd689;
	or.b64  	%rd759, %rd726, %rd689;
	and.b64  	%rd760, %rd759, %rd652;
	or.b64  	%rd761, %rd760, %rd758;
	add.s64 	%rd762, %rd761, %rd757;
	add.s64 	%rd763, %rd762, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd702;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 19;
	shf.r.wrap.b32 	%r503, %r500, %r501, 19;
	mov.b64 	%rd764, {%r503, %r502};
	shf.l.wrap.b32 	%r504, %r500, %r501, 3;
	shf.l.wrap.b32 	%r505, %r501, %r500, 3;
	mov.b64 	%rd765, {%r505, %r504};
	xor.b64  	%rd766, %rd764, %rd765;
	shr.u64 	%rd767, %rd702, 6;
	xor.b64  	%rd768, %rd766, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd238;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 1;
	shf.r.wrap.b32 	%r509, %r506, %r507, 1;
	mov.b64 	%rd769, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 8;
	shf.r.wrap.b32 	%r511, %r506, %r507, 8;
	mov.b64 	%rd770, {%r511, %r510};
	xor.b64  	%rd771, %rd769, %rd770;
	shr.u64 	%rd772, %rd238, 7;
	xor.b64  	%rd773, %rd771, %rd772;
	add.s64 	%rd774, %rd773, %rd236;
	add.s64 	%rd775, %rd774, %rd254;
	add.s64 	%rd776, %rd775, %rd768;
	add.s64 	%rd777, %rd776, %rd641;
	xor.b64  	%rd778, %rd715, %rd678;
	and.b64  	%rd779, %rd752, %rd778;
	xor.b64  	%rd780, %rd779, %rd678;
	add.s64 	%rd781, %rd777, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd752;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 14;
	shf.r.wrap.b32 	%r515, %r512, %r513, 14;
	mov.b64 	%rd782, {%r515, %r514};
	shf.r.wrap.b32 	%r516, %r513, %r512, 18;
	shf.r.wrap.b32 	%r517, %r512, %r513, 18;
	mov.b64 	%rd783, {%r517, %r516};
	xor.b64  	%rd784, %rd782, %rd783;
	shf.l.wrap.b32 	%r518, %r512, %r513, 23;
	shf.l.wrap.b32 	%r519, %r513, %r512, 23;
	mov.b64 	%rd785, {%r519, %r518};
	xor.b64  	%rd786, %rd784, %rd785;
	add.s64 	%rd787, %rd781, %rd786;
	add.s64 	%rd788, %rd787, 2597628984639134821;
	add.s64 	%rd789, %rd788, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd763;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 28;
	shf.r.wrap.b32 	%r523, %r520, %r521, 28;
	mov.b64 	%rd790, {%r523, %r522};
	shf.l.wrap.b32 	%r524, %r520, %r521, 30;
	shf.l.wrap.b32 	%r525, %r521, %r520, 30;
	mov.b64 	%rd791, {%r525, %r524};
	xor.b64  	%rd792, %rd790, %rd791;
	shf.l.wrap.b32 	%r526, %r520, %r521, 25;
	shf.l.wrap.b32 	%r527, %r521, %r520, 25;
	mov.b64 	%rd793, {%r527, %r526};
	xor.b64  	%rd794, %rd792, %rd793;
	and.b64  	%rd795, %rd763, %rd726;
	or.b64  	%rd796, %rd763, %rd726;
	and.b64  	%rd797, %rd796, %rd689;
	or.b64  	%rd798, %rd797, %rd795;
	add.s64 	%rd799, %rd798, %rd794;
	add.s64 	%rd800, %rd799, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd739;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 19;
	shf.r.wrap.b32 	%r531, %r528, %r529, 19;
	mov.b64 	%rd801, {%r531, %r530};
	shf.l.wrap.b32 	%r532, %r528, %r529, 3;
	shf.l.wrap.b32 	%r533, %r529, %r528, 3;
	mov.b64 	%rd802, {%r533, %r532};
	xor.b64  	%rd803, %rd801, %rd802;
	shr.u64 	%rd804, %rd739, 6;
	xor.b64  	%rd805, %rd803, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r534,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd240;
	}
	shf.r.wrap.b32 	%r536, %r535, %r534, 1;
	shf.r.wrap.b32 	%r537, %r534, %r535, 1;
	mov.b64 	%rd806, {%r537, %r536};
	shf.r.wrap.b32 	%r538, %r535, %r534, 8;
	shf.r.wrap.b32 	%r539, %r534, %r535, 8;
	mov.b64 	%rd807, {%r539, %r538};
	xor.b64  	%rd808, %rd806, %rd807;
	shr.u64 	%rd809, %rd240, 7;
	xor.b64  	%rd810, %rd808, %rd809;
	add.s64 	%rd811, %rd810, %rd238;
	add.s64 	%rd812, %rd811, %rd256;
	add.s64 	%rd813, %rd812, %rd805;
	add.s64 	%rd814, %rd813, %rd678;
	xor.b64  	%rd815, %rd752, %rd715;
	and.b64  	%rd816, %rd789, %rd815;
	xor.b64  	%rd817, %rd816, %rd715;
	add.s64 	%rd818, %rd814, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd789;
	}
	shf.r.wrap.b32 	%r542, %r541, %r540, 14;
	shf.r.wrap.b32 	%r543, %r540, %r541, 14;
	mov.b64 	%rd819, {%r543, %r542};
	shf.r.wrap.b32 	%r544, %r541, %r540, 18;
	shf.r.wrap.b32 	%r545, %r540, %r541, 18;
	mov.b64 	%rd820, {%r545, %r544};
	xor.b64  	%rd821, %rd819, %rd820;
	shf.l.wrap.b32 	%r546, %r540, %r541, 23;
	shf.l.wrap.b32 	%r547, %r541, %r540, 23;
	mov.b64 	%rd822, {%r547, %r546};
	xor.b64  	%rd823, %rd821, %rd822;
	add.s64 	%rd824, %rd818, %rd823;
	add.s64 	%rd825, %rd824, 3308224258029322869;
	add.s64 	%rd826, %rd825, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd800;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 28;
	shf.r.wrap.b32 	%r551, %r548, %r549, 28;
	mov.b64 	%rd827, {%r551, %r550};
	shf.l.wrap.b32 	%r552, %r548, %r549, 30;
	shf.l.wrap.b32 	%r553, %r549, %r548, 30;
	mov.b64 	%rd828, {%r553, %r552};
	xor.b64  	%rd829, %rd827, %rd828;
	shf.l.wrap.b32 	%r554, %r548, %r549, 25;
	shf.l.wrap.b32 	%r555, %r549, %r548, 25;
	mov.b64 	%rd830, {%r555, %r554};
	xor.b64  	%rd831, %rd829, %rd830;
	and.b64  	%rd832, %rd800, %rd763;
	or.b64  	%rd833, %rd800, %rd763;
	and.b64  	%rd834, %rd833, %rd726;
	or.b64  	%rd835, %rd834, %rd832;
	add.s64 	%rd836, %rd835, %rd831;
	add.s64 	%rd837, %rd836, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd776;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 19;
	shf.r.wrap.b32 	%r559, %r556, %r557, 19;
	mov.b64 	%rd838, {%r559, %r558};
	shf.l.wrap.b32 	%r560, %r556, %r557, 3;
	shf.l.wrap.b32 	%r561, %r557, %r556, 3;
	mov.b64 	%rd839, {%r561, %r560};
	xor.b64  	%rd840, %rd838, %rd839;
	shr.u64 	%rd841, %rd776, 6;
	xor.b64  	%rd842, %rd840, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd242;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 1;
	shf.r.wrap.b32 	%r565, %r562, %r563, 1;
	mov.b64 	%rd843, {%r565, %r564};
	shf.r.wrap.b32 	%r566, %r563, %r562, 8;
	shf.r.wrap.b32 	%r567, %r562, %r563, 8;
	mov.b64 	%rd844, {%r567, %r566};
	xor.b64  	%rd845, %rd843, %rd844;
	shr.u64 	%rd846, %rd242, 7;
	xor.b64  	%rd847, %rd845, %rd846;
	add.s64 	%rd848, %rd847, %rd240;
	add.s64 	%rd849, %rd848, %rd258;
	add.s64 	%rd850, %rd849, %rd842;
	add.s64 	%rd851, %rd850, %rd715;
	xor.b64  	%rd852, %rd789, %rd752;
	and.b64  	%rd853, %rd826, %rd852;
	xor.b64  	%rd854, %rd853, %rd752;
	add.s64 	%rd855, %rd851, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd826;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 14;
	shf.r.wrap.b32 	%r571, %r568, %r569, 14;
	mov.b64 	%rd856, {%r571, %r570};
	shf.r.wrap.b32 	%r572, %r569, %r568, 18;
	shf.r.wrap.b32 	%r573, %r568, %r569, 18;
	mov.b64 	%rd857, {%r573, %r572};
	xor.b64  	%rd858, %rd856, %rd857;
	shf.l.wrap.b32 	%r574, %r568, %r569, 23;
	shf.l.wrap.b32 	%r575, %r569, %r568, 23;
	mov.b64 	%rd859, {%r575, %r574};
	xor.b64  	%rd860, %rd858, %rd859;
	add.s64 	%rd861, %rd855, %rd860;
	add.s64 	%rd862, %rd861, 5365058923640841347;
	add.s64 	%rd863, %rd862, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd837;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 28;
	shf.r.wrap.b32 	%r579, %r576, %r577, 28;
	mov.b64 	%rd864, {%r579, %r578};
	shf.l.wrap.b32 	%r580, %r576, %r577, 30;
	shf.l.wrap.b32 	%r581, %r577, %r576, 30;
	mov.b64 	%rd865, {%r581, %r580};
	xor.b64  	%rd866, %rd864, %rd865;
	shf.l.wrap.b32 	%r582, %r576, %r577, 25;
	shf.l.wrap.b32 	%r583, %r577, %r576, 25;
	mov.b64 	%rd867, {%r583, %r582};
	xor.b64  	%rd868, %rd866, %rd867;
	and.b64  	%rd869, %rd837, %rd800;
	or.b64  	%rd870, %rd837, %rd800;
	and.b64  	%rd871, %rd870, %rd763;
	or.b64  	%rd872, %rd871, %rd869;
	add.s64 	%rd873, %rd872, %rd868;
	add.s64 	%rd874, %rd873, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd813;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 19;
	shf.r.wrap.b32 	%r587, %r584, %r585, 19;
	mov.b64 	%rd875, {%r587, %r586};
	shf.l.wrap.b32 	%r588, %r584, %r585, 3;
	shf.l.wrap.b32 	%r589, %r585, %r584, 3;
	mov.b64 	%rd876, {%r589, %r588};
	xor.b64  	%rd877, %rd875, %rd876;
	shr.u64 	%rd878, %rd813, 6;
	xor.b64  	%rd879, %rd877, %rd878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd244;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 1;
	shf.r.wrap.b32 	%r593, %r590, %r591, 1;
	mov.b64 	%rd880, {%r593, %r592};
	shf.r.wrap.b32 	%r594, %r591, %r590, 8;
	shf.r.wrap.b32 	%r595, %r590, %r591, 8;
	mov.b64 	%rd881, {%r595, %r594};
	xor.b64  	%rd882, %rd880, %rd881;
	shr.u64 	%rd883, %rd244, 7;
	xor.b64  	%rd884, %rd882, %rd883;
	add.s64 	%rd885, %rd884, %rd242;
	add.s64 	%rd886, %rd885, %rd260;
	add.s64 	%rd887, %rd886, %rd879;
	add.s64 	%rd888, %rd887, %rd752;
	xor.b64  	%rd889, %rd826, %rd789;
	and.b64  	%rd890, %rd863, %rd889;
	xor.b64  	%rd891, %rd890, %rd789;
	add.s64 	%rd892, %rd888, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd863;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd893, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd894, {%r601, %r600};
	xor.b64  	%rd895, %rd893, %rd894;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd896, {%r603, %r602};
	xor.b64  	%rd897, %rd895, %rd896;
	add.s64 	%rd898, %rd892, %rd897;
	add.s64 	%rd899, %rd898, 6679025012923562964;
	add.s64 	%rd900, %rd899, %rd763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd874;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd901, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd902, {%r609, %r608};
	xor.b64  	%rd903, %rd901, %rd902;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd904, {%r611, %r610};
	xor.b64  	%rd905, %rd903, %rd904;
	and.b64  	%rd906, %rd874, %rd837;
	or.b64  	%rd907, %rd874, %rd837;
	and.b64  	%rd908, %rd907, %rd800;
	or.b64  	%rd909, %rd908, %rd906;
	add.s64 	%rd910, %rd909, %rd905;
	add.s64 	%rd911, %rd910, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd850;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 19;
	shf.r.wrap.b32 	%r615, %r612, %r613, 19;
	mov.b64 	%rd912, {%r615, %r614};
	shf.l.wrap.b32 	%r616, %r612, %r613, 3;
	shf.l.wrap.b32 	%r617, %r613, %r612, 3;
	mov.b64 	%rd913, {%r617, %r616};
	xor.b64  	%rd914, %rd912, %rd913;
	shr.u64 	%rd915, %rd850, 6;
	xor.b64  	%rd916, %rd914, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd246;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 1;
	shf.r.wrap.b32 	%r621, %r618, %r619, 1;
	mov.b64 	%rd917, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 8;
	shf.r.wrap.b32 	%r623, %r618, %r619, 8;
	mov.b64 	%rd918, {%r623, %r622};
	xor.b64  	%rd919, %rd917, %rd918;
	shr.u64 	%rd920, %rd246, 7;
	xor.b64  	%rd921, %rd919, %rd920;
	add.s64 	%rd922, %rd921, %rd244;
	add.s64 	%rd923, %rd922, %rd665;
	add.s64 	%rd924, %rd923, %rd916;
	add.s64 	%rd925, %rd924, %rd789;
	xor.b64  	%rd926, %rd863, %rd826;
	and.b64  	%rd927, %rd900, %rd926;
	xor.b64  	%rd928, %rd927, %rd826;
	add.s64 	%rd929, %rd925, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd900;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 14;
	shf.r.wrap.b32 	%r627, %r624, %r625, 14;
	mov.b64 	%rd930, {%r627, %r626};
	shf.r.wrap.b32 	%r628, %r625, %r624, 18;
	shf.r.wrap.b32 	%r629, %r624, %r625, 18;
	mov.b64 	%rd931, {%r629, %r628};
	xor.b64  	%rd932, %rd930, %rd931;
	shf.l.wrap.b32 	%r630, %r624, %r625, 23;
	shf.l.wrap.b32 	%r631, %r625, %r624, 23;
	mov.b64 	%rd933, {%r631, %r630};
	xor.b64  	%rd934, %rd932, %rd933;
	add.s64 	%rd935, %rd929, %rd934;
	add.s64 	%rd936, %rd935, 8573033837759648693;
	add.s64 	%rd937, %rd936, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd911;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 28;
	shf.r.wrap.b32 	%r635, %r632, %r633, 28;
	mov.b64 	%rd938, {%r635, %r634};
	shf.l.wrap.b32 	%r636, %r632, %r633, 30;
	shf.l.wrap.b32 	%r637, %r633, %r632, 30;
	mov.b64 	%rd939, {%r637, %r636};
	xor.b64  	%rd940, %rd938, %rd939;
	shf.l.wrap.b32 	%r638, %r632, %r633, 25;
	shf.l.wrap.b32 	%r639, %r633, %r632, 25;
	mov.b64 	%rd941, {%r639, %r638};
	xor.b64  	%rd942, %rd940, %rd941;
	and.b64  	%rd943, %rd911, %rd874;
	or.b64  	%rd944, %rd911, %rd874;
	and.b64  	%rd945, %rd944, %rd837;
	or.b64  	%rd946, %rd945, %rd943;
	add.s64 	%rd947, %rd946, %rd942;
	add.s64 	%rd948, %rd947, %rd936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd887;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 19;
	shf.r.wrap.b32 	%r643, %r640, %r641, 19;
	mov.b64 	%rd949, {%r643, %r642};
	shf.l.wrap.b32 	%r644, %r640, %r641, 3;
	shf.l.wrap.b32 	%r645, %r641, %r640, 3;
	mov.b64 	%rd950, {%r645, %r644};
	xor.b64  	%rd951, %rd949, %rd950;
	shr.u64 	%rd952, %rd887, 6;
	xor.b64  	%rd953, %rd951, %rd952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r646,%dummy}, %rd248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd248;
	}
	shf.r.wrap.b32 	%r648, %r647, %r646, 1;
	shf.r.wrap.b32 	%r649, %r646, %r647, 1;
	mov.b64 	%rd954, {%r649, %r648};
	shf.r.wrap.b32 	%r650, %r647, %r646, 8;
	shf.r.wrap.b32 	%r651, %r646, %r647, 8;
	mov.b64 	%rd955, {%r651, %r650};
	xor.b64  	%rd956, %rd954, %rd955;
	shr.u64 	%rd957, %rd248, 7;
	xor.b64  	%rd958, %rd956, %rd957;
	add.s64 	%rd959, %rd958, %rd246;
	add.s64 	%rd960, %rd959, %rd702;
	add.s64 	%rd961, %rd960, %rd953;
	add.s64 	%rd962, %rd961, %rd826;
	xor.b64  	%rd963, %rd900, %rd863;
	and.b64  	%rd964, %rd937, %rd963;
	xor.b64  	%rd965, %rd964, %rd863;
	add.s64 	%rd966, %rd962, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd937;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 14;
	shf.r.wrap.b32 	%r655, %r652, %r653, 14;
	mov.b64 	%rd967, {%r655, %r654};
	shf.r.wrap.b32 	%r656, %r653, %r652, 18;
	shf.r.wrap.b32 	%r657, %r652, %r653, 18;
	mov.b64 	%rd968, {%r657, %r656};
	xor.b64  	%rd969, %rd967, %rd968;
	shf.l.wrap.b32 	%r658, %r652, %r653, 23;
	shf.l.wrap.b32 	%r659, %r653, %r652, 23;
	mov.b64 	%rd970, {%r659, %r658};
	xor.b64  	%rd971, %rd969, %rd970;
	add.s64 	%rd972, %rd966, %rd971;
	add.s64 	%rd973, %rd972, -7476448914759557205;
	add.s64 	%rd974, %rd973, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd948;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 28;
	shf.r.wrap.b32 	%r663, %r660, %r661, 28;
	mov.b64 	%rd975, {%r663, %r662};
	shf.l.wrap.b32 	%r664, %r660, %r661, 30;
	shf.l.wrap.b32 	%r665, %r661, %r660, 30;
	mov.b64 	%rd976, {%r665, %r664};
	xor.b64  	%rd977, %rd975, %rd976;
	shf.l.wrap.b32 	%r666, %r660, %r661, 25;
	shf.l.wrap.b32 	%r667, %r661, %r660, 25;
	mov.b64 	%rd978, {%r667, %r666};
	xor.b64  	%rd979, %rd977, %rd978;
	and.b64  	%rd980, %rd948, %rd911;
	or.b64  	%rd981, %rd948, %rd911;
	and.b64  	%rd982, %rd981, %rd874;
	or.b64  	%rd983, %rd982, %rd980;
	add.s64 	%rd984, %rd983, %rd979;
	add.s64 	%rd985, %rd984, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd924;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 19;
	shf.r.wrap.b32 	%r671, %r668, %r669, 19;
	mov.b64 	%rd986, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 3;
	shf.l.wrap.b32 	%r673, %r669, %r668, 3;
	mov.b64 	%rd987, {%r673, %r672};
	xor.b64  	%rd988, %rd986, %rd987;
	shr.u64 	%rd989, %rd924, 6;
	xor.b64  	%rd990, %rd988, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd250;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 1;
	shf.r.wrap.b32 	%r677, %r674, %r675, 1;
	mov.b64 	%rd991, {%r677, %r676};
	shf.r.wrap.b32 	%r678, %r675, %r674, 8;
	shf.r.wrap.b32 	%r679, %r674, %r675, 8;
	mov.b64 	%rd992, {%r679, %r678};
	xor.b64  	%rd993, %rd991, %rd992;
	shr.u64 	%rd994, %rd250, 7;
	xor.b64  	%rd995, %rd993, %rd994;
	add.s64 	%rd996, %rd995, %rd248;
	add.s64 	%rd997, %rd996, %rd739;
	add.s64 	%rd998, %rd997, %rd990;
	add.s64 	%rd999, %rd998, %rd863;
	xor.b64  	%rd1000, %rd937, %rd900;
	and.b64  	%rd1001, %rd974, %rd1000;
	xor.b64  	%rd1002, %rd1001, %rd900;
	add.s64 	%rd1003, %rd999, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r680,%dummy}, %rd974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd974;
	}
	shf.r.wrap.b32 	%r682, %r681, %r680, 14;
	shf.r.wrap.b32 	%r683, %r680, %r681, 14;
	mov.b64 	%rd1004, {%r683, %r682};
	shf.r.wrap.b32 	%r684, %r681, %r680, 18;
	shf.r.wrap.b32 	%r685, %r680, %r681, 18;
	mov.b64 	%rd1005, {%r685, %r684};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	shf.l.wrap.b32 	%r686, %r680, %r681, 23;
	shf.l.wrap.b32 	%r687, %r681, %r680, 23;
	mov.b64 	%rd1007, {%r687, %r686};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	add.s64 	%rd1009, %rd1003, %rd1008;
	add.s64 	%rd1010, %rd1009, -6327057829258317296;
	add.s64 	%rd1011, %rd1010, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd985;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 28;
	shf.r.wrap.b32 	%r691, %r688, %r689, 28;
	mov.b64 	%rd1012, {%r691, %r690};
	shf.l.wrap.b32 	%r692, %r688, %r689, 30;
	shf.l.wrap.b32 	%r693, %r689, %r688, 30;
	mov.b64 	%rd1013, {%r693, %r692};
	xor.b64  	%rd1014, %rd1012, %rd1013;
	shf.l.wrap.b32 	%r694, %r688, %r689, 25;
	shf.l.wrap.b32 	%r695, %r689, %r688, 25;
	mov.b64 	%rd1015, {%r695, %r694};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	and.b64  	%rd1017, %rd985, %rd948;
	or.b64  	%rd1018, %rd985, %rd948;
	and.b64  	%rd1019, %rd1018, %rd911;
	or.b64  	%rd1020, %rd1019, %rd1017;
	add.s64 	%rd1021, %rd1020, %rd1016;
	add.s64 	%rd1022, %rd1021, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd961;
	}
	shf.r.wrap.b32 	%r698, %r697, %r696, 19;
	shf.r.wrap.b32 	%r699, %r696, %r697, 19;
	mov.b64 	%rd1023, {%r699, %r698};
	shf.l.wrap.b32 	%r700, %r696, %r697, 3;
	shf.l.wrap.b32 	%r701, %r697, %r696, 3;
	mov.b64 	%rd1024, {%r701, %r700};
	xor.b64  	%rd1025, %rd1023, %rd1024;
	shr.u64 	%rd1026, %rd961, 6;
	xor.b64  	%rd1027, %rd1025, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r703}, %rd252;
	}
	shf.r.wrap.b32 	%r704, %r703, %r702, 1;
	shf.r.wrap.b32 	%r705, %r702, %r703, 1;
	mov.b64 	%rd1028, {%r705, %r704};
	shf.r.wrap.b32 	%r706, %r703, %r702, 8;
	shf.r.wrap.b32 	%r707, %r702, %r703, 8;
	mov.b64 	%rd1029, {%r707, %r706};
	xor.b64  	%rd1030, %rd1028, %rd1029;
	shr.u64 	%rd1031, %rd252, 7;
	xor.b64  	%rd1032, %rd1030, %rd1031;
	add.s64 	%rd1033, %rd1032, %rd250;
	add.s64 	%rd1034, %rd1033, %rd776;
	add.s64 	%rd1035, %rd1034, %rd1027;
	add.s64 	%rd1036, %rd1035, %rd900;
	xor.b64  	%rd1037, %rd974, %rd937;
	and.b64  	%rd1038, %rd1011, %rd1037;
	xor.b64  	%rd1039, %rd1038, %rd937;
	add.s64 	%rd1040, %rd1036, %rd1039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd1011;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 14;
	shf.r.wrap.b32 	%r711, %r708, %r709, 14;
	mov.b64 	%rd1041, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r709, %r708, 18;
	shf.r.wrap.b32 	%r713, %r708, %r709, 18;
	mov.b64 	%rd1042, {%r713, %r712};
	xor.b64  	%rd1043, %rd1041, %rd1042;
	shf.l.wrap.b32 	%r714, %r708, %r709, 23;
	shf.l.wrap.b32 	%r715, %r709, %r708, 23;
	mov.b64 	%rd1044, {%r715, %r714};
	xor.b64  	%rd1045, %rd1043, %rd1044;
	add.s64 	%rd1046, %rd1040, %rd1045;
	add.s64 	%rd1047, %rd1046, -5763719355590565569;
	add.s64 	%rd1048, %rd1047, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd1022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1022;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 28;
	shf.r.wrap.b32 	%r719, %r716, %r717, 28;
	mov.b64 	%rd1049, {%r719, %r718};
	shf.l.wrap.b32 	%r720, %r716, %r717, 30;
	shf.l.wrap.b32 	%r721, %r717, %r716, 30;
	mov.b64 	%rd1050, {%r721, %r720};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	shf.l.wrap.b32 	%r722, %r716, %r717, 25;
	shf.l.wrap.b32 	%r723, %r717, %r716, 25;
	mov.b64 	%rd1052, {%r723, %r722};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	and.b64  	%rd1054, %rd1022, %rd985;
	or.b64  	%rd1055, %rd1022, %rd985;
	and.b64  	%rd1056, %rd1055, %rd948;
	or.b64  	%rd1057, %rd1056, %rd1054;
	add.s64 	%rd1058, %rd1057, %rd1053;
	add.s64 	%rd1059, %rd1058, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd998;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 19;
	shf.r.wrap.b32 	%r727, %r724, %r725, 19;
	mov.b64 	%rd1060, {%r727, %r726};
	shf.l.wrap.b32 	%r728, %r724, %r725, 3;
	shf.l.wrap.b32 	%r729, %r725, %r724, 3;
	mov.b64 	%rd1061, {%r729, %r728};
	xor.b64  	%rd1062, %rd1060, %rd1061;
	shr.u64 	%rd1063, %rd998, 6;
	xor.b64  	%rd1064, %rd1062, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd254;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 1;
	shf.r.wrap.b32 	%r733, %r730, %r731, 1;
	mov.b64 	%rd1065, {%r733, %r732};
	shf.r.wrap.b32 	%r734, %r731, %r730, 8;
	shf.r.wrap.b32 	%r735, %r730, %r731, 8;
	mov.b64 	%rd1066, {%r735, %r734};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	shr.u64 	%rd1068, %rd254, 7;
	xor.b64  	%rd1069, %rd1067, %rd1068;
	add.s64 	%rd1070, %rd1069, %rd252;
	add.s64 	%rd1071, %rd1070, %rd813;
	add.s64 	%rd1072, %rd1071, %rd1064;
	add.s64 	%rd1073, %rd1072, %rd937;
	xor.b64  	%rd1074, %rd1011, %rd974;
	and.b64  	%rd1075, %rd1048, %rd1074;
	xor.b64  	%rd1076, %rd1075, %rd974;
	add.s64 	%rd1077, %rd1073, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r736,%dummy}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r737}, %rd1048;
	}
	shf.r.wrap.b32 	%r738, %r737, %r736, 14;
	shf.r.wrap.b32 	%r739, %r736, %r737, 14;
	mov.b64 	%rd1078, {%r739, %r738};
	shf.r.wrap.b32 	%r740, %r737, %r736, 18;
	shf.r.wrap.b32 	%r741, %r736, %r737, 18;
	mov.b64 	%rd1079, {%r741, %r740};
	xor.b64  	%rd1080, %rd1078, %rd1079;
	shf.l.wrap.b32 	%r742, %r736, %r737, 23;
	shf.l.wrap.b32 	%r743, %r737, %r736, 23;
	mov.b64 	%rd1081, {%r743, %r742};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	add.s64 	%rd1083, %rd1077, %rd1082;
	add.s64 	%rd1084, %rd1083, -4658551843659510044;
	add.s64 	%rd1085, %rd1084, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r744,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1059;
	}
	shf.r.wrap.b32 	%r746, %r745, %r744, 28;
	shf.r.wrap.b32 	%r747, %r744, %r745, 28;
	mov.b64 	%rd1086, {%r747, %r746};
	shf.l.wrap.b32 	%r748, %r744, %r745, 30;
	shf.l.wrap.b32 	%r749, %r745, %r744, 30;
	mov.b64 	%rd1087, {%r749, %r748};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	shf.l.wrap.b32 	%r750, %r744, %r745, 25;
	shf.l.wrap.b32 	%r751, %r745, %r744, 25;
	mov.b64 	%rd1089, {%r751, %r750};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	and.b64  	%rd1091, %rd1059, %rd1022;
	or.b64  	%rd1092, %rd1059, %rd1022;
	and.b64  	%rd1093, %rd1092, %rd985;
	or.b64  	%rd1094, %rd1093, %rd1091;
	add.s64 	%rd1095, %rd1094, %rd1090;
	add.s64 	%rd1096, %rd1095, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r752,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r753}, %rd1035;
	}
	shf.r.wrap.b32 	%r754, %r753, %r752, 19;
	shf.r.wrap.b32 	%r755, %r752, %r753, 19;
	mov.b64 	%rd1097, {%r755, %r754};
	shf.l.wrap.b32 	%r756, %r752, %r753, 3;
	shf.l.wrap.b32 	%r757, %r753, %r752, 3;
	mov.b64 	%rd1098, {%r757, %r756};
	xor.b64  	%rd1099, %rd1097, %rd1098;
	shr.u64 	%rd1100, %rd1035, 6;
	xor.b64  	%rd1101, %rd1099, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r758,%dummy}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r759}, %rd256;
	}
	shf.r.wrap.b32 	%r760, %r759, %r758, 1;
	shf.r.wrap.b32 	%r761, %r758, %r759, 1;
	mov.b64 	%rd1102, {%r761, %r760};
	shf.r.wrap.b32 	%r762, %r759, %r758, 8;
	shf.r.wrap.b32 	%r763, %r758, %r759, 8;
	mov.b64 	%rd1103, {%r763, %r762};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	shr.u64 	%rd1105, %rd256, 7;
	xor.b64  	%rd1106, %rd1104, %rd1105;
	add.s64 	%rd1107, %rd1106, %rd254;
	add.s64 	%rd1108, %rd1107, %rd850;
	add.s64 	%rd1109, %rd1108, %rd1101;
	add.s64 	%rd1110, %rd1109, %rd974;
	xor.b64  	%rd1111, %rd1048, %rd1011;
	and.b64  	%rd1112, %rd1085, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1011;
	add.s64 	%rd1114, %rd1110, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1085;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 14;
	shf.r.wrap.b32 	%r767, %r764, %r765, 14;
	mov.b64 	%rd1115, {%r767, %r766};
	shf.r.wrap.b32 	%r768, %r765, %r764, 18;
	shf.r.wrap.b32 	%r769, %r764, %r765, 18;
	mov.b64 	%rd1116, {%r769, %r768};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	shf.l.wrap.b32 	%r770, %r764, %r765, 23;
	shf.l.wrap.b32 	%r771, %r765, %r764, 23;
	mov.b64 	%rd1118, {%r771, %r770};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	add.s64 	%rd1120, %rd1114, %rd1119;
	add.s64 	%rd1121, %rd1120, -4116276920077217854;
	add.s64 	%rd1122, %rd1121, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1096;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 28;
	shf.r.wrap.b32 	%r775, %r772, %r773, 28;
	mov.b64 	%rd1123, {%r775, %r774};
	shf.l.wrap.b32 	%r776, %r772, %r773, 30;
	shf.l.wrap.b32 	%r777, %r773, %r772, 30;
	mov.b64 	%rd1124, {%r777, %r776};
	xor.b64  	%rd1125, %rd1123, %rd1124;
	shf.l.wrap.b32 	%r778, %r772, %r773, 25;
	shf.l.wrap.b32 	%r779, %r773, %r772, 25;
	mov.b64 	%rd1126, {%r779, %r778};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	and.b64  	%rd1128, %rd1096, %rd1059;
	or.b64  	%rd1129, %rd1096, %rd1059;
	and.b64  	%rd1130, %rd1129, %rd1022;
	or.b64  	%rd1131, %rd1130, %rd1128;
	add.s64 	%rd1132, %rd1131, %rd1127;
	add.s64 	%rd1133, %rd1132, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1072;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 19;
	shf.r.wrap.b32 	%r783, %r780, %r781, 19;
	mov.b64 	%rd1134, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 3;
	shf.l.wrap.b32 	%r785, %r781, %r780, 3;
	mov.b64 	%rd1135, {%r785, %r784};
	xor.b64  	%rd1136, %rd1134, %rd1135;
	shr.u64 	%rd1137, %rd1072, 6;
	xor.b64  	%rd1138, %rd1136, %rd1137;
	shf.r.wrap.b32 	%r786, %r417, %r416, 1;
	shf.r.wrap.b32 	%r787, %r416, %r417, 1;
	mov.b64 	%rd1139, {%r787, %r786};
	shf.r.wrap.b32 	%r788, %r417, %r416, 8;
	shf.r.wrap.b32 	%r789, %r416, %r417, 8;
	mov.b64 	%rd1140, {%r789, %r788};
	xor.b64  	%rd1141, %rd1139, %rd1140;
	shr.u64 	%rd1142, %rd258, 7;
	xor.b64  	%rd1143, %rd1141, %rd1142;
	add.s64 	%rd1144, %rd1143, %rd256;
	add.s64 	%rd1145, %rd1144, %rd887;
	add.s64 	%rd1146, %rd1145, %rd1138;
	add.s64 	%rd1147, %rd1146, %rd1011;
	xor.b64  	%rd1148, %rd1085, %rd1048;
	and.b64  	%rd1149, %rd1122, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1048;
	add.s64 	%rd1151, %rd1147, %rd1150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd1122;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 14;
	shf.r.wrap.b32 	%r793, %r790, %r791, 14;
	mov.b64 	%rd1152, {%r793, %r792};
	shf.r.wrap.b32 	%r794, %r791, %r790, 18;
	shf.r.wrap.b32 	%r795, %r790, %r791, 18;
	mov.b64 	%rd1153, {%r795, %r794};
	xor.b64  	%rd1154, %rd1152, %rd1153;
	shf.l.wrap.b32 	%r796, %r790, %r791, 23;
	shf.l.wrap.b32 	%r797, %r791, %r790, 23;
	mov.b64 	%rd1155, {%r797, %r796};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	add.s64 	%rd1157, %rd1151, %rd1156;
	add.s64 	%rd1158, %rd1157, -3051310485924567259;
	add.s64 	%rd1159, %rd1158, %rd1022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r798,%dummy}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r799}, %rd1133;
	}
	shf.r.wrap.b32 	%r800, %r799, %r798, 28;
	shf.r.wrap.b32 	%r801, %r798, %r799, 28;
	mov.b64 	%rd1160, {%r801, %r800};
	shf.l.wrap.b32 	%r802, %r798, %r799, 30;
	shf.l.wrap.b32 	%r803, %r799, %r798, 30;
	mov.b64 	%rd1161, {%r803, %r802};
	xor.b64  	%rd1162, %rd1160, %rd1161;
	shf.l.wrap.b32 	%r804, %r798, %r799, 25;
	shf.l.wrap.b32 	%r805, %r799, %r798, 25;
	mov.b64 	%rd1163, {%r805, %r804};
	xor.b64  	%rd1164, %rd1162, %rd1163;
	and.b64  	%rd1165, %rd1133, %rd1096;
	or.b64  	%rd1166, %rd1133, %rd1096;
	and.b64  	%rd1167, %rd1166, %rd1059;
	or.b64  	%rd1168, %rd1167, %rd1165;
	add.s64 	%rd1169, %rd1168, %rd1164;
	add.s64 	%rd1170, %rd1169, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd1109;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 19;
	shf.r.wrap.b32 	%r809, %r806, %r807, 19;
	mov.b64 	%rd1171, {%r809, %r808};
	shf.l.wrap.b32 	%r810, %r806, %r807, 3;
	shf.l.wrap.b32 	%r811, %r807, %r806, 3;
	mov.b64 	%rd1172, {%r811, %r810};
	xor.b64  	%rd1173, %rd1171, %rd1172;
	shr.u64 	%rd1174, %rd1109, 6;
	xor.b64  	%rd1175, %rd1173, %rd1174;
	shf.r.wrap.b32 	%r812, %r445, %r444, 1;
	shf.r.wrap.b32 	%r813, %r444, %r445, 1;
	mov.b64 	%rd1176, {%r813, %r812};
	shf.r.wrap.b32 	%r814, %r445, %r444, 8;
	shf.r.wrap.b32 	%r815, %r444, %r445, 8;
	mov.b64 	%rd1177, {%r815, %r814};
	xor.b64  	%rd1178, %rd1176, %rd1177;
	shr.u64 	%rd1179, %rd260, 7;
	xor.b64  	%rd1180, %rd1178, %rd1179;
	add.s64 	%rd1181, %rd1180, %rd258;
	add.s64 	%rd1182, %rd1181, %rd924;
	add.s64 	%rd1183, %rd1182, %rd1175;
	add.s64 	%rd1184, %rd1183, %rd1048;
	xor.b64  	%rd1185, %rd1122, %rd1085;
	and.b64  	%rd1186, %rd1159, %rd1185;
	xor.b64  	%rd1187, %rd1186, %rd1085;
	add.s64 	%rd1188, %rd1184, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r816,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r817}, %rd1159;
	}
	shf.r.wrap.b32 	%r818, %r817, %r816, 14;
	shf.r.wrap.b32 	%r819, %r816, %r817, 14;
	mov.b64 	%rd1189, {%r819, %r818};
	shf.r.wrap.b32 	%r820, %r817, %r816, 18;
	shf.r.wrap.b32 	%r821, %r816, %r817, 18;
	mov.b64 	%rd1190, {%r821, %r820};
	xor.b64  	%rd1191, %rd1189, %rd1190;
	shf.l.wrap.b32 	%r822, %r816, %r817, 23;
	shf.l.wrap.b32 	%r823, %r817, %r816, 23;
	mov.b64 	%rd1192, {%r823, %r822};
	xor.b64  	%rd1193, %rd1191, %rd1192;
	add.s64 	%rd1194, %rd1188, %rd1193;
	add.s64 	%rd1195, %rd1194, 489312712824947311;
	add.s64 	%rd1196, %rd1195, %rd1059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r824,%dummy}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r825}, %rd1170;
	}
	shf.r.wrap.b32 	%r826, %r825, %r824, 28;
	shf.r.wrap.b32 	%r827, %r824, %r825, 28;
	mov.b64 	%rd1197, {%r827, %r826};
	shf.l.wrap.b32 	%r828, %r824, %r825, 30;
	shf.l.wrap.b32 	%r829, %r825, %r824, 30;
	mov.b64 	%rd1198, {%r829, %r828};
	xor.b64  	%rd1199, %rd1197, %rd1198;
	shf.l.wrap.b32 	%r830, %r824, %r825, 25;
	shf.l.wrap.b32 	%r831, %r825, %r824, 25;
	mov.b64 	%rd1200, {%r831, %r830};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	and.b64  	%rd1202, %rd1170, %rd1133;
	or.b64  	%rd1203, %rd1170, %rd1133;
	and.b64  	%rd1204, %rd1203, %rd1096;
	or.b64  	%rd1205, %rd1204, %rd1202;
	add.s64 	%rd1206, %rd1205, %rd1201;
	add.s64 	%rd1207, %rd1206, %rd1195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r832,%dummy}, %rd1146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd1146;
	}
	shf.r.wrap.b32 	%r834, %r833, %r832, 19;
	shf.r.wrap.b32 	%r835, %r832, %r833, 19;
	mov.b64 	%rd1208, {%r835, %r834};
	shf.l.wrap.b32 	%r836, %r832, %r833, 3;
	shf.l.wrap.b32 	%r837, %r833, %r832, 3;
	mov.b64 	%rd1209, {%r837, %r836};
	xor.b64  	%rd1210, %rd1208, %rd1209;
	shr.u64 	%rd1211, %rd1146, 6;
	xor.b64  	%rd1212, %rd1210, %rd1211;
	shf.r.wrap.b32 	%r838, %r473, %r472, 1;
	shf.r.wrap.b32 	%r839, %r472, %r473, 1;
	mov.b64 	%rd1213, {%r839, %r838};
	shf.r.wrap.b32 	%r840, %r473, %r472, 8;
	shf.r.wrap.b32 	%r841, %r472, %r473, 8;
	mov.b64 	%rd1214, {%r841, %r840};
	xor.b64  	%rd1215, %rd1213, %rd1214;
	shr.u64 	%rd1216, %rd665, 7;
	xor.b64  	%rd1217, %rd1215, %rd1216;
	add.s64 	%rd1218, %rd1217, %rd260;
	add.s64 	%rd1219, %rd1218, %rd961;
	add.s64 	%rd1220, %rd1219, %rd1212;
	add.s64 	%rd1221, %rd1220, %rd1085;
	xor.b64  	%rd1222, %rd1159, %rd1122;
	and.b64  	%rd1223, %rd1196, %rd1222;
	xor.b64  	%rd1224, %rd1223, %rd1122;
	add.s64 	%rd1225, %rd1221, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r843}, %rd1196;
	}
	shf.r.wrap.b32 	%r844, %r843, %r842, 14;
	shf.r.wrap.b32 	%r845, %r842, %r843, 14;
	mov.b64 	%rd1226, {%r845, %r844};
	shf.r.wrap.b32 	%r846, %r843, %r842, 18;
	shf.r.wrap.b32 	%r847, %r842, %r843, 18;
	mov.b64 	%rd1227, {%r847, %r846};
	xor.b64  	%rd1228, %rd1226, %rd1227;
	shf.l.wrap.b32 	%r848, %r842, %r843, 23;
	shf.l.wrap.b32 	%r849, %r843, %r842, 23;
	mov.b64 	%rd1229, {%r849, %r848};
	xor.b64  	%rd1230, %rd1228, %rd1229;
	add.s64 	%rd1231, %rd1225, %rd1230;
	add.s64 	%rd1232, %rd1231, 1452737877330783856;
	add.s64 	%rd1233, %rd1232, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd1207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r851}, %rd1207;
	}
	shf.r.wrap.b32 	%r852, %r851, %r850, 28;
	shf.r.wrap.b32 	%r853, %r850, %r851, 28;
	mov.b64 	%rd1234, {%r853, %r852};
	shf.l.wrap.b32 	%r854, %r850, %r851, 30;
	shf.l.wrap.b32 	%r855, %r851, %r850, 30;
	mov.b64 	%rd1235, {%r855, %r854};
	xor.b64  	%rd1236, %rd1234, %rd1235;
	shf.l.wrap.b32 	%r856, %r850, %r851, 25;
	shf.l.wrap.b32 	%r857, %r851, %r850, 25;
	mov.b64 	%rd1237, {%r857, %r856};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	and.b64  	%rd1239, %rd1207, %rd1170;
	or.b64  	%rd1240, %rd1207, %rd1170;
	and.b64  	%rd1241, %rd1240, %rd1133;
	or.b64  	%rd1242, %rd1241, %rd1239;
	add.s64 	%rd1243, %rd1242, %rd1238;
	add.s64 	%rd1244, %rd1243, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r859}, %rd1183;
	}
	shf.r.wrap.b32 	%r860, %r859, %r858, 19;
	shf.r.wrap.b32 	%r861, %r858, %r859, 19;
	mov.b64 	%rd1245, {%r861, %r860};
	shf.l.wrap.b32 	%r862, %r858, %r859, 3;
	shf.l.wrap.b32 	%r863, %r859, %r858, 3;
	mov.b64 	%rd1246, {%r863, %r862};
	xor.b64  	%rd1247, %rd1245, %rd1246;
	shr.u64 	%rd1248, %rd1183, 6;
	xor.b64  	%rd1249, %rd1247, %rd1248;
	shf.r.wrap.b32 	%r864, %r501, %r500, 1;
	shf.r.wrap.b32 	%r865, %r500, %r501, 1;
	mov.b64 	%rd1250, {%r865, %r864};
	shf.r.wrap.b32 	%r866, %r501, %r500, 8;
	shf.r.wrap.b32 	%r867, %r500, %r501, 8;
	mov.b64 	%rd1251, {%r867, %r866};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	shr.u64 	%rd1253, %rd702, 7;
	xor.b64  	%rd1254, %rd1252, %rd1253;
	add.s64 	%rd1255, %rd1254, %rd665;
	add.s64 	%rd1256, %rd1255, %rd998;
	add.s64 	%rd1257, %rd1256, %rd1249;
	add.s64 	%rd1258, %rd1257, %rd1122;
	xor.b64  	%rd1259, %rd1196, %rd1159;
	and.b64  	%rd1260, %rd1233, %rd1259;
	xor.b64  	%rd1261, %rd1260, %rd1159;
	add.s64 	%rd1262, %rd1258, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd1233;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 14;
	shf.r.wrap.b32 	%r871, %r868, %r869, 14;
	mov.b64 	%rd1263, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r869, %r868, 18;
	shf.r.wrap.b32 	%r873, %r868, %r869, 18;
	mov.b64 	%rd1264, {%r873, %r872};
	xor.b64  	%rd1265, %rd1263, %rd1264;
	shf.l.wrap.b32 	%r874, %r868, %r869, 23;
	shf.l.wrap.b32 	%r875, %r869, %r868, 23;
	mov.b64 	%rd1266, {%r875, %r874};
	xor.b64  	%rd1267, %rd1265, %rd1266;
	add.s64 	%rd1268, %rd1262, %rd1267;
	add.s64 	%rd1269, %rd1268, 2861767655752347644;
	add.s64 	%rd1270, %rd1269, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd1244;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 28;
	shf.r.wrap.b32 	%r879, %r876, %r877, 28;
	mov.b64 	%rd1271, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 30;
	shf.l.wrap.b32 	%r881, %r877, %r876, 30;
	mov.b64 	%rd1272, {%r881, %r880};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	shf.l.wrap.b32 	%r882, %r876, %r877, 25;
	shf.l.wrap.b32 	%r883, %r877, %r876, 25;
	mov.b64 	%rd1274, {%r883, %r882};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	and.b64  	%rd1276, %rd1244, %rd1207;
	or.b64  	%rd1277, %rd1244, %rd1207;
	and.b64  	%rd1278, %rd1277, %rd1170;
	or.b64  	%rd1279, %rd1278, %rd1276;
	add.s64 	%rd1280, %rd1279, %rd1275;
	add.s64 	%rd1281, %rd1280, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1220;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 19;
	shf.r.wrap.b32 	%r887, %r884, %r885, 19;
	mov.b64 	%rd1282, {%r887, %r886};
	shf.l.wrap.b32 	%r888, %r884, %r885, 3;
	shf.l.wrap.b32 	%r889, %r885, %r884, 3;
	mov.b64 	%rd1283, {%r889, %r888};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	shr.u64 	%rd1285, %rd1220, 6;
	xor.b64  	%rd1286, %rd1284, %rd1285;
	shf.r.wrap.b32 	%r890, %r529, %r528, 1;
	shf.r.wrap.b32 	%r891, %r528, %r529, 1;
	mov.b64 	%rd1287, {%r891, %r890};
	shf.r.wrap.b32 	%r892, %r529, %r528, 8;
	shf.r.wrap.b32 	%r893, %r528, %r529, 8;
	mov.b64 	%rd1288, {%r893, %r892};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	shr.u64 	%rd1290, %rd739, 7;
	xor.b64  	%rd1291, %rd1289, %rd1290;
	add.s64 	%rd1292, %rd1291, %rd702;
	add.s64 	%rd1293, %rd1292, %rd1035;
	add.s64 	%rd1294, %rd1293, %rd1286;
	add.s64 	%rd1295, %rd1294, %rd1159;
	xor.b64  	%rd1296, %rd1233, %rd1196;
	and.b64  	%rd1297, %rd1270, %rd1296;
	xor.b64  	%rd1298, %rd1297, %rd1196;
	add.s64 	%rd1299, %rd1295, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd1270;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 14;
	shf.r.wrap.b32 	%r897, %r894, %r895, 14;
	mov.b64 	%rd1300, {%r897, %r896};
	shf.r.wrap.b32 	%r898, %r895, %r894, 18;
	shf.r.wrap.b32 	%r899, %r894, %r895, 18;
	mov.b64 	%rd1301, {%r899, %r898};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	shf.l.wrap.b32 	%r900, %r894, %r895, 23;
	shf.l.wrap.b32 	%r901, %r895, %r894, 23;
	mov.b64 	%rd1303, {%r901, %r900};
	xor.b64  	%rd1304, %rd1302, %rd1303;
	add.s64 	%rd1305, %rd1299, %rd1304;
	add.s64 	%rd1306, %rd1305, 3322285676063803686;
	add.s64 	%rd1307, %rd1306, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1281;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 28;
	shf.r.wrap.b32 	%r905, %r902, %r903, 28;
	mov.b64 	%rd1308, {%r905, %r904};
	shf.l.wrap.b32 	%r906, %r902, %r903, 30;
	shf.l.wrap.b32 	%r907, %r903, %r902, 30;
	mov.b64 	%rd1309, {%r907, %r906};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	shf.l.wrap.b32 	%r908, %r902, %r903, 25;
	shf.l.wrap.b32 	%r909, %r903, %r902, 25;
	mov.b64 	%rd1311, {%r909, %r908};
	xor.b64  	%rd1312, %rd1310, %rd1311;
	and.b64  	%rd1313, %rd1281, %rd1244;
	or.b64  	%rd1314, %rd1281, %rd1244;
	and.b64  	%rd1315, %rd1314, %rd1207;
	or.b64  	%rd1316, %rd1315, %rd1313;
	add.s64 	%rd1317, %rd1316, %rd1312;
	add.s64 	%rd1318, %rd1317, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd1257;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 19;
	shf.r.wrap.b32 	%r913, %r910, %r911, 19;
	mov.b64 	%rd1319, {%r913, %r912};
	shf.l.wrap.b32 	%r914, %r910, %r911, 3;
	shf.l.wrap.b32 	%r915, %r911, %r910, 3;
	mov.b64 	%rd1320, {%r915, %r914};
	xor.b64  	%rd1321, %rd1319, %rd1320;
	shr.u64 	%rd1322, %rd1257, 6;
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shf.r.wrap.b32 	%r916, %r557, %r556, 1;
	shf.r.wrap.b32 	%r917, %r556, %r557, 1;
	mov.b64 	%rd1324, {%r917, %r916};
	shf.r.wrap.b32 	%r918, %r557, %r556, 8;
	shf.r.wrap.b32 	%r919, %r556, %r557, 8;
	mov.b64 	%rd1325, {%r919, %r918};
	xor.b64  	%rd1326, %rd1324, %rd1325;
	shr.u64 	%rd1327, %rd776, 7;
	xor.b64  	%rd1328, %rd1326, %rd1327;
	add.s64 	%rd1329, %rd1328, %rd739;
	add.s64 	%rd1330, %rd1329, %rd1072;
	add.s64 	%rd1331, %rd1330, %rd1323;
	add.s64 	%rd1332, %rd1331, %rd1196;
	xor.b64  	%rd1333, %rd1270, %rd1233;
	and.b64  	%rd1334, %rd1307, %rd1333;
	xor.b64  	%rd1335, %rd1334, %rd1233;
	add.s64 	%rd1336, %rd1332, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r920,%dummy}, %rd1307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r921}, %rd1307;
	}
	shf.r.wrap.b32 	%r922, %r921, %r920, 14;
	shf.r.wrap.b32 	%r923, %r920, %r921, 14;
	mov.b64 	%rd1337, {%r923, %r922};
	shf.r.wrap.b32 	%r924, %r921, %r920, 18;
	shf.r.wrap.b32 	%r925, %r920, %r921, 18;
	mov.b64 	%rd1338, {%r925, %r924};
	xor.b64  	%rd1339, %rd1337, %rd1338;
	shf.l.wrap.b32 	%r926, %r920, %r921, 23;
	shf.l.wrap.b32 	%r927, %r921, %r920, 23;
	mov.b64 	%rd1340, {%r927, %r926};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	add.s64 	%rd1342, %rd1336, %rd1341;
	add.s64 	%rd1343, %rd1342, 5560940570517711597;
	add.s64 	%rd1344, %rd1343, %rd1207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r928,%dummy}, %rd1318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r929}, %rd1318;
	}
	shf.r.wrap.b32 	%r930, %r929, %r928, 28;
	shf.r.wrap.b32 	%r931, %r928, %r929, 28;
	mov.b64 	%rd1345, {%r931, %r930};
	shf.l.wrap.b32 	%r932, %r928, %r929, 30;
	shf.l.wrap.b32 	%r933, %r929, %r928, 30;
	mov.b64 	%rd1346, {%r933, %r932};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	shf.l.wrap.b32 	%r934, %r928, %r929, 25;
	shf.l.wrap.b32 	%r935, %r929, %r928, 25;
	mov.b64 	%rd1348, {%r935, %r934};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	and.b64  	%rd1350, %rd1318, %rd1281;
	or.b64  	%rd1351, %rd1318, %rd1281;
	and.b64  	%rd1352, %rd1351, %rd1244;
	or.b64  	%rd1353, %rd1352, %rd1350;
	add.s64 	%rd1354, %rd1353, %rd1349;
	add.s64 	%rd1355, %rd1354, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd1294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd1294;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 19;
	shf.r.wrap.b32 	%r939, %r936, %r937, 19;
	mov.b64 	%rd1356, {%r939, %r938};
	shf.l.wrap.b32 	%r940, %r936, %r937, 3;
	shf.l.wrap.b32 	%r941, %r937, %r936, 3;
	mov.b64 	%rd1357, {%r941, %r940};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	shr.u64 	%rd1359, %rd1294, 6;
	xor.b64  	%rd1360, %rd1358, %rd1359;
	shf.r.wrap.b32 	%r942, %r585, %r584, 1;
	shf.r.wrap.b32 	%r943, %r584, %r585, 1;
	mov.b64 	%rd1361, {%r943, %r942};
	shf.r.wrap.b32 	%r944, %r585, %r584, 8;
	shf.r.wrap.b32 	%r945, %r584, %r585, 8;
	mov.b64 	%rd1362, {%r945, %r944};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	shr.u64 	%rd1364, %rd813, 7;
	xor.b64  	%rd1365, %rd1363, %rd1364;
	add.s64 	%rd1366, %rd1365, %rd776;
	add.s64 	%rd1367, %rd1366, %rd1109;
	add.s64 	%rd1368, %rd1367, %rd1360;
	add.s64 	%rd1369, %rd1368, %rd1233;
	xor.b64  	%rd1370, %rd1307, %rd1270;
	and.b64  	%rd1371, %rd1344, %rd1370;
	xor.b64  	%rd1372, %rd1371, %rd1270;
	add.s64 	%rd1373, %rd1369, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd1344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd1344;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 14;
	shf.r.wrap.b32 	%r949, %r946, %r947, 14;
	mov.b64 	%rd1374, {%r949, %r948};
	shf.r.wrap.b32 	%r950, %r947, %r946, 18;
	shf.r.wrap.b32 	%r951, %r946, %r947, 18;
	mov.b64 	%rd1375, {%r951, %r950};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	shf.l.wrap.b32 	%r952, %r946, %r947, 23;
	shf.l.wrap.b32 	%r953, %r947, %r946, 23;
	mov.b64 	%rd1377, {%r953, %r952};
	xor.b64  	%rd1378, %rd1376, %rd1377;
	add.s64 	%rd1379, %rd1373, %rd1378;
	add.s64 	%rd1380, %rd1379, 5996557281743188959;
	add.s64 	%rd1381, %rd1380, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd1355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd1355;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 28;
	shf.r.wrap.b32 	%r957, %r954, %r955, 28;
	mov.b64 	%rd1382, {%r957, %r956};
	shf.l.wrap.b32 	%r958, %r954, %r955, 30;
	shf.l.wrap.b32 	%r959, %r955, %r954, 30;
	mov.b64 	%rd1383, {%r959, %r958};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	shf.l.wrap.b32 	%r960, %r954, %r955, 25;
	shf.l.wrap.b32 	%r961, %r955, %r954, 25;
	mov.b64 	%rd1385, {%r961, %r960};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	and.b64  	%rd1387, %rd1355, %rd1318;
	or.b64  	%rd1388, %rd1355, %rd1318;
	and.b64  	%rd1389, %rd1388, %rd1281;
	or.b64  	%rd1390, %rd1389, %rd1387;
	add.s64 	%rd1391, %rd1390, %rd1386;
	add.s64 	%rd1392, %rd1391, %rd1380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd1331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd1331;
	}
	shf.r.wrap.b32 	%r964, %r963, %r962, 19;
	shf.r.wrap.b32 	%r965, %r962, %r963, 19;
	mov.b64 	%rd1393, {%r965, %r964};
	shf.l.wrap.b32 	%r966, %r962, %r963, 3;
	shf.l.wrap.b32 	%r967, %r963, %r962, 3;
	mov.b64 	%rd1394, {%r967, %r966};
	xor.b64  	%rd1395, %rd1393, %rd1394;
	shr.u64 	%rd1396, %rd1331, 6;
	xor.b64  	%rd1397, %rd1395, %rd1396;
	shf.r.wrap.b32 	%r968, %r613, %r612, 1;
	shf.r.wrap.b32 	%r969, %r612, %r613, 1;
	mov.b64 	%rd1398, {%r969, %r968};
	shf.r.wrap.b32 	%r970, %r613, %r612, 8;
	shf.r.wrap.b32 	%r971, %r612, %r613, 8;
	mov.b64 	%rd1399, {%r971, %r970};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	shr.u64 	%rd1401, %rd850, 7;
	xor.b64  	%rd1402, %rd1400, %rd1401;
	add.s64 	%rd1403, %rd1402, %rd813;
	add.s64 	%rd1404, %rd1403, %rd1146;
	add.s64 	%rd1405, %rd1404, %rd1397;
	add.s64 	%rd1406, %rd1405, %rd1270;
	xor.b64  	%rd1407, %rd1344, %rd1307;
	and.b64  	%rd1408, %rd1381, %rd1407;
	xor.b64  	%rd1409, %rd1408, %rd1307;
	add.s64 	%rd1410, %rd1406, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1381;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 14;
	shf.r.wrap.b32 	%r975, %r972, %r973, 14;
	mov.b64 	%rd1411, {%r975, %r974};
	shf.r.wrap.b32 	%r976, %r973, %r972, 18;
	shf.r.wrap.b32 	%r977, %r972, %r973, 18;
	mov.b64 	%rd1412, {%r977, %r976};
	xor.b64  	%rd1413, %rd1411, %rd1412;
	shf.l.wrap.b32 	%r978, %r972, %r973, 23;
	shf.l.wrap.b32 	%r979, %r973, %r972, 23;
	mov.b64 	%rd1414, {%r979, %r978};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	add.s64 	%rd1416, %rd1410, %rd1415;
	add.s64 	%rd1417, %rd1416, 7280758554555802590;
	add.s64 	%rd1418, %rd1417, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd1392;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 28;
	shf.r.wrap.b32 	%r983, %r980, %r981, 28;
	mov.b64 	%rd1419, {%r983, %r982};
	shf.l.wrap.b32 	%r984, %r980, %r981, 30;
	shf.l.wrap.b32 	%r985, %r981, %r980, 30;
	mov.b64 	%rd1420, {%r985, %r984};
	xor.b64  	%rd1421, %rd1419, %rd1420;
	shf.l.wrap.b32 	%r986, %r980, %r981, 25;
	shf.l.wrap.b32 	%r987, %r981, %r980, 25;
	mov.b64 	%rd1422, {%r987, %r986};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	and.b64  	%rd1424, %rd1392, %rd1355;
	or.b64  	%rd1425, %rd1392, %rd1355;
	and.b64  	%rd1426, %rd1425, %rd1318;
	or.b64  	%rd1427, %rd1426, %rd1424;
	add.s64 	%rd1428, %rd1427, %rd1423;
	add.s64 	%rd1429, %rd1428, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd1368;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 19;
	shf.r.wrap.b32 	%r991, %r988, %r989, 19;
	mov.b64 	%rd1430, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 3;
	shf.l.wrap.b32 	%r993, %r989, %r988, 3;
	mov.b64 	%rd1431, {%r993, %r992};
	xor.b64  	%rd1432, %rd1430, %rd1431;
	shr.u64 	%rd1433, %rd1368, 6;
	xor.b64  	%rd1434, %rd1432, %rd1433;
	shf.r.wrap.b32 	%r994, %r641, %r640, 1;
	shf.r.wrap.b32 	%r995, %r640, %r641, 1;
	mov.b64 	%rd1435, {%r995, %r994};
	shf.r.wrap.b32 	%r996, %r641, %r640, 8;
	shf.r.wrap.b32 	%r997, %r640, %r641, 8;
	mov.b64 	%rd1436, {%r997, %r996};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	shr.u64 	%rd1438, %rd887, 7;
	xor.b64  	%rd1439, %rd1437, %rd1438;
	add.s64 	%rd1440, %rd1439, %rd850;
	add.s64 	%rd1441, %rd1440, %rd1183;
	add.s64 	%rd1442, %rd1441, %rd1434;
	add.s64 	%rd1443, %rd1442, %rd1307;
	xor.b64  	%rd1444, %rd1381, %rd1344;
	and.b64  	%rd1445, %rd1418, %rd1444;
	xor.b64  	%rd1446, %rd1445, %rd1344;
	add.s64 	%rd1447, %rd1443, %rd1446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd1418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd1418;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 14;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 14;
	mov.b64 	%rd1448, {%r1001, %r1000};
	shf.r.wrap.b32 	%r1002, %r999, %r998, 18;
	shf.r.wrap.b32 	%r1003, %r998, %r999, 18;
	mov.b64 	%rd1449, {%r1003, %r1002};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	shf.l.wrap.b32 	%r1004, %r998, %r999, 23;
	shf.l.wrap.b32 	%r1005, %r999, %r998, 23;
	mov.b64 	%rd1451, {%r1005, %r1004};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	add.s64 	%rd1453, %rd1447, %rd1452;
	add.s64 	%rd1454, %rd1453, 8532644243296465576;
	add.s64 	%rd1455, %rd1454, %rd1318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd1429;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 28;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 28;
	mov.b64 	%rd1456, {%r1009, %r1008};
	shf.l.wrap.b32 	%r1010, %r1006, %r1007, 30;
	shf.l.wrap.b32 	%r1011, %r1007, %r1006, 30;
	mov.b64 	%rd1457, {%r1011, %r1010};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	shf.l.wrap.b32 	%r1012, %r1006, %r1007, 25;
	shf.l.wrap.b32 	%r1013, %r1007, %r1006, 25;
	mov.b64 	%rd1459, {%r1013, %r1012};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	and.b64  	%rd1461, %rd1429, %rd1392;
	or.b64  	%rd1462, %rd1429, %rd1392;
	and.b64  	%rd1463, %rd1462, %rd1355;
	or.b64  	%rd1464, %rd1463, %rd1461;
	add.s64 	%rd1465, %rd1464, %rd1460;
	add.s64 	%rd1466, %rd1465, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd1405;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 19;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 19;
	mov.b64 	%rd1467, {%r1017, %r1016};
	shf.l.wrap.b32 	%r1018, %r1014, %r1015, 3;
	shf.l.wrap.b32 	%r1019, %r1015, %r1014, 3;
	mov.b64 	%rd1468, {%r1019, %r1018};
	xor.b64  	%rd1469, %rd1467, %rd1468;
	shr.u64 	%rd1470, %rd1405, 6;
	xor.b64  	%rd1471, %rd1469, %rd1470;
	shf.r.wrap.b32 	%r1020, %r669, %r668, 1;
	shf.r.wrap.b32 	%r1021, %r668, %r669, 1;
	mov.b64 	%rd1472, {%r1021, %r1020};
	shf.r.wrap.b32 	%r1022, %r669, %r668, 8;
	shf.r.wrap.b32 	%r1023, %r668, %r669, 8;
	mov.b64 	%rd1473, {%r1023, %r1022};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	shr.u64 	%rd1475, %rd924, 7;
	xor.b64  	%rd1476, %rd1474, %rd1475;
	add.s64 	%rd1477, %rd1476, %rd887;
	add.s64 	%rd1478, %rd1477, %rd1220;
	add.s64 	%rd1479, %rd1478, %rd1471;
	add.s64 	%rd1480, %rd1479, %rd1344;
	xor.b64  	%rd1481, %rd1418, %rd1381;
	and.b64  	%rd1482, %rd1455, %rd1481;
	xor.b64  	%rd1483, %rd1482, %rd1381;
	add.s64 	%rd1484, %rd1480, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1024,%dummy}, %rd1455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1025}, %rd1455;
	}
	shf.r.wrap.b32 	%r1026, %r1025, %r1024, 14;
	shf.r.wrap.b32 	%r1027, %r1024, %r1025, 14;
	mov.b64 	%rd1485, {%r1027, %r1026};
	shf.r.wrap.b32 	%r1028, %r1025, %r1024, 18;
	shf.r.wrap.b32 	%r1029, %r1024, %r1025, 18;
	mov.b64 	%rd1486, {%r1029, %r1028};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	shf.l.wrap.b32 	%r1030, %r1024, %r1025, 23;
	shf.l.wrap.b32 	%r1031, %r1025, %r1024, 23;
	mov.b64 	%rd1488, {%r1031, %r1030};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	add.s64 	%rd1490, %rd1484, %rd1489;
	add.s64 	%rd1491, %rd1490, -9096487096722542874;
	add.s64 	%rd1492, %rd1491, %rd1355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd1466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd1466;
	}
	shf.r.wrap.b32 	%r1034, %r1033, %r1032, 28;
	shf.r.wrap.b32 	%r1035, %r1032, %r1033, 28;
	mov.b64 	%rd1493, {%r1035, %r1034};
	shf.l.wrap.b32 	%r1036, %r1032, %r1033, 30;
	shf.l.wrap.b32 	%r1037, %r1033, %r1032, 30;
	mov.b64 	%rd1494, {%r1037, %r1036};
	xor.b64  	%rd1495, %rd1493, %rd1494;
	shf.l.wrap.b32 	%r1038, %r1032, %r1033, 25;
	shf.l.wrap.b32 	%r1039, %r1033, %r1032, 25;
	mov.b64 	%rd1496, {%r1039, %r1038};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	and.b64  	%rd1498, %rd1466, %rd1429;
	or.b64  	%rd1499, %rd1466, %rd1429;
	and.b64  	%rd1500, %rd1499, %rd1392;
	or.b64  	%rd1501, %rd1500, %rd1498;
	add.s64 	%rd1502, %rd1501, %rd1497;
	add.s64 	%rd1503, %rd1502, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1040,%dummy}, %rd1442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd1442;
	}
	shf.r.wrap.b32 	%r1042, %r1041, %r1040, 19;
	shf.r.wrap.b32 	%r1043, %r1040, %r1041, 19;
	mov.b64 	%rd1504, {%r1043, %r1042};
	shf.l.wrap.b32 	%r1044, %r1040, %r1041, 3;
	shf.l.wrap.b32 	%r1045, %r1041, %r1040, 3;
	mov.b64 	%rd1505, {%r1045, %r1044};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	shr.u64 	%rd1507, %rd1442, 6;
	xor.b64  	%rd1508, %rd1506, %rd1507;
	shf.r.wrap.b32 	%r1046, %r697, %r696, 1;
	shf.r.wrap.b32 	%r1047, %r696, %r697, 1;
	mov.b64 	%rd1509, {%r1047, %r1046};
	shf.r.wrap.b32 	%r1048, %r697, %r696, 8;
	shf.r.wrap.b32 	%r1049, %r696, %r697, 8;
	mov.b64 	%rd1510, {%r1049, %r1048};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	shr.u64 	%rd1512, %rd961, 7;
	xor.b64  	%rd1513, %rd1511, %rd1512;
	add.s64 	%rd1514, %rd1513, %rd924;
	add.s64 	%rd1515, %rd1514, %rd1257;
	add.s64 	%rd1516, %rd1515, %rd1508;
	add.s64 	%rd1517, %rd1516, %rd1381;
	xor.b64  	%rd1518, %rd1455, %rd1418;
	and.b64  	%rd1519, %rd1492, %rd1518;
	xor.b64  	%rd1520, %rd1519, %rd1418;
	add.s64 	%rd1521, %rd1517, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd1492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1051}, %rd1492;
	}
	shf.r.wrap.b32 	%r1052, %r1051, %r1050, 14;
	shf.r.wrap.b32 	%r1053, %r1050, %r1051, 14;
	mov.b64 	%rd1522, {%r1053, %r1052};
	shf.r.wrap.b32 	%r1054, %r1051, %r1050, 18;
	shf.r.wrap.b32 	%r1055, %r1050, %r1051, 18;
	mov.b64 	%rd1523, {%r1055, %r1054};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	shf.l.wrap.b32 	%r1056, %r1050, %r1051, 23;
	shf.l.wrap.b32 	%r1057, %r1051, %r1050, 23;
	mov.b64 	%rd1525, {%r1057, %r1056};
	xor.b64  	%rd1526, %rd1524, %rd1525;
	add.s64 	%rd1527, %rd1521, %rd1526;
	add.s64 	%rd1528, %rd1527, -7894198246740708037;
	add.s64 	%rd1529, %rd1528, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd1503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd1503;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 28;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 28;
	mov.b64 	%rd1530, {%r1061, %r1060};
	shf.l.wrap.b32 	%r1062, %r1058, %r1059, 30;
	shf.l.wrap.b32 	%r1063, %r1059, %r1058, 30;
	mov.b64 	%rd1531, {%r1063, %r1062};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	shf.l.wrap.b32 	%r1064, %r1058, %r1059, 25;
	shf.l.wrap.b32 	%r1065, %r1059, %r1058, 25;
	mov.b64 	%rd1533, {%r1065, %r1064};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	and.b64  	%rd1535, %rd1503, %rd1466;
	or.b64  	%rd1536, %rd1503, %rd1466;
	and.b64  	%rd1537, %rd1536, %rd1429;
	or.b64  	%rd1538, %rd1537, %rd1535;
	add.s64 	%rd1539, %rd1538, %rd1534;
	add.s64 	%rd1540, %rd1539, %rd1528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd1479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd1479;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 19;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 19;
	mov.b64 	%rd1541, {%r1069, %r1068};
	shf.l.wrap.b32 	%r1070, %r1066, %r1067, 3;
	shf.l.wrap.b32 	%r1071, %r1067, %r1066, 3;
	mov.b64 	%rd1542, {%r1071, %r1070};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	shr.u64 	%rd1544, %rd1479, 6;
	xor.b64  	%rd1545, %rd1543, %rd1544;
	shf.r.wrap.b32 	%r1072, %r725, %r724, 1;
	shf.r.wrap.b32 	%r1073, %r724, %r725, 1;
	mov.b64 	%rd1546, {%r1073, %r1072};
	shf.r.wrap.b32 	%r1074, %r725, %r724, 8;
	shf.r.wrap.b32 	%r1075, %r724, %r725, 8;
	mov.b64 	%rd1547, {%r1075, %r1074};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	shr.u64 	%rd1549, %rd998, 7;
	xor.b64  	%rd1550, %rd1548, %rd1549;
	add.s64 	%rd1551, %rd1550, %rd961;
	add.s64 	%rd1552, %rd1551, %rd1294;
	add.s64 	%rd1553, %rd1552, %rd1545;
	add.s64 	%rd1554, %rd1553, %rd1418;
	xor.b64  	%rd1555, %rd1492, %rd1455;
	and.b64  	%rd1556, %rd1529, %rd1555;
	xor.b64  	%rd1557, %rd1556, %rd1455;
	add.s64 	%rd1558, %rd1554, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd1529;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 14;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 14;
	mov.b64 	%rd1559, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 18;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 18;
	mov.b64 	%rd1560, {%r1081, %r1080};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	shf.l.wrap.b32 	%r1082, %r1076, %r1077, 23;
	shf.l.wrap.b32 	%r1083, %r1077, %r1076, 23;
	mov.b64 	%rd1562, {%r1083, %r1082};
	xor.b64  	%rd1563, %rd1561, %rd1562;
	add.s64 	%rd1564, %rd1558, %rd1563;
	add.s64 	%rd1565, %rd1564, -6719396339535248540;
	add.s64 	%rd1566, %rd1565, %rd1429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd1540;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 28;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 28;
	mov.b64 	%rd1567, {%r1087, %r1086};
	shf.l.wrap.b32 	%r1088, %r1084, %r1085, 30;
	shf.l.wrap.b32 	%r1089, %r1085, %r1084, 30;
	mov.b64 	%rd1568, {%r1089, %r1088};
	xor.b64  	%rd1569, %rd1567, %rd1568;
	shf.l.wrap.b32 	%r1090, %r1084, %r1085, 25;
	shf.l.wrap.b32 	%r1091, %r1085, %r1084, 25;
	mov.b64 	%rd1570, {%r1091, %r1090};
	xor.b64  	%rd1571, %rd1569, %rd1570;
	and.b64  	%rd1572, %rd1540, %rd1503;
	or.b64  	%rd1573, %rd1540, %rd1503;
	and.b64  	%rd1574, %rd1573, %rd1466;
	or.b64  	%rd1575, %rd1574, %rd1572;
	add.s64 	%rd1576, %rd1575, %rd1571;
	add.s64 	%rd1577, %rd1576, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1516;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 19;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 19;
	mov.b64 	%rd1578, {%r1095, %r1094};
	shf.l.wrap.b32 	%r1096, %r1092, %r1093, 3;
	shf.l.wrap.b32 	%r1097, %r1093, %r1092, 3;
	mov.b64 	%rd1579, {%r1097, %r1096};
	xor.b64  	%rd1580, %rd1578, %rd1579;
	shr.u64 	%rd1581, %rd1516, 6;
	xor.b64  	%rd1582, %rd1580, %rd1581;
	shf.r.wrap.b32 	%r1098, %r753, %r752, 1;
	shf.r.wrap.b32 	%r1099, %r752, %r753, 1;
	mov.b64 	%rd1583, {%r1099, %r1098};
	shf.r.wrap.b32 	%r1100, %r753, %r752, 8;
	shf.r.wrap.b32 	%r1101, %r752, %r753, 8;
	mov.b64 	%rd1584, {%r1101, %r1100};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	shr.u64 	%rd1586, %rd1035, 7;
	xor.b64  	%rd1587, %rd1585, %rd1586;
	add.s64 	%rd1588, %rd1587, %rd998;
	add.s64 	%rd1589, %rd1588, %rd1331;
	add.s64 	%rd1590, %rd1589, %rd1582;
	add.s64 	%rd1591, %rd1590, %rd1455;
	xor.b64  	%rd1592, %rd1529, %rd1492;
	and.b64  	%rd1593, %rd1566, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1492;
	add.s64 	%rd1595, %rd1591, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd1566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd1566;
	}
	shf.r.wrap.b32 	%r1104, %r1103, %r1102, 14;
	shf.r.wrap.b32 	%r1105, %r1102, %r1103, 14;
	mov.b64 	%rd1596, {%r1105, %r1104};
	shf.r.wrap.b32 	%r1106, %r1103, %r1102, 18;
	shf.r.wrap.b32 	%r1107, %r1102, %r1103, 18;
	mov.b64 	%rd1597, {%r1107, %r1106};
	xor.b64  	%rd1598, %rd1596, %rd1597;
	shf.l.wrap.b32 	%r1108, %r1102, %r1103, 23;
	shf.l.wrap.b32 	%r1109, %r1103, %r1102, 23;
	mov.b64 	%rd1599, {%r1109, %r1108};
	xor.b64  	%rd1600, %rd1598, %rd1599;
	add.s64 	%rd1601, %rd1595, %rd1600;
	add.s64 	%rd1602, %rd1601, -6333637450476146687;
	add.s64 	%rd1603, %rd1602, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1111}, %rd1577;
	}
	shf.r.wrap.b32 	%r1112, %r1111, %r1110, 28;
	shf.r.wrap.b32 	%r1113, %r1110, %r1111, 28;
	mov.b64 	%rd1604, {%r1113, %r1112};
	shf.l.wrap.b32 	%r1114, %r1110, %r1111, 30;
	shf.l.wrap.b32 	%r1115, %r1111, %r1110, 30;
	mov.b64 	%rd1605, {%r1115, %r1114};
	xor.b64  	%rd1606, %rd1604, %rd1605;
	shf.l.wrap.b32 	%r1116, %r1110, %r1111, 25;
	shf.l.wrap.b32 	%r1117, %r1111, %r1110, 25;
	mov.b64 	%rd1607, {%r1117, %r1116};
	xor.b64  	%rd1608, %rd1606, %rd1607;
	and.b64  	%rd1609, %rd1577, %rd1540;
	or.b64  	%rd1610, %rd1577, %rd1540;
	and.b64  	%rd1611, %rd1610, %rd1503;
	or.b64  	%rd1612, %rd1611, %rd1609;
	add.s64 	%rd1613, %rd1612, %rd1608;
	add.s64 	%rd1614, %rd1613, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd1553;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 19;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 19;
	mov.b64 	%rd1615, {%r1121, %r1120};
	shf.l.wrap.b32 	%r1122, %r1118, %r1119, 3;
	shf.l.wrap.b32 	%r1123, %r1119, %r1118, 3;
	mov.b64 	%rd1616, {%r1123, %r1122};
	xor.b64  	%rd1617, %rd1615, %rd1616;
	shr.u64 	%rd1618, %rd1553, 6;
	xor.b64  	%rd1619, %rd1617, %rd1618;
	shf.r.wrap.b32 	%r1124, %r781, %r780, 1;
	shf.r.wrap.b32 	%r1125, %r780, %r781, 1;
	mov.b64 	%rd1620, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r781, %r780, 8;
	shf.r.wrap.b32 	%r1127, %r780, %r781, 8;
	mov.b64 	%rd1621, {%r1127, %r1126};
	xor.b64  	%rd1622, %rd1620, %rd1621;
	shr.u64 	%rd1623, %rd1072, 7;
	xor.b64  	%rd1624, %rd1622, %rd1623;
	add.s64 	%rd1625, %rd1624, %rd1035;
	add.s64 	%rd1626, %rd1625, %rd1368;
	add.s64 	%rd1627, %rd1626, %rd1619;
	add.s64 	%rd1628, %rd1627, %rd1492;
	xor.b64  	%rd1629, %rd1566, %rd1529;
	and.b64  	%rd1630, %rd1603, %rd1629;
	xor.b64  	%rd1631, %rd1630, %rd1529;
	add.s64 	%rd1632, %rd1628, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1603;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 14;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 14;
	mov.b64 	%rd1633, {%r1131, %r1130};
	shf.r.wrap.b32 	%r1132, %r1129, %r1128, 18;
	shf.r.wrap.b32 	%r1133, %r1128, %r1129, 18;
	mov.b64 	%rd1634, {%r1133, %r1132};
	xor.b64  	%rd1635, %rd1633, %rd1634;
	shf.l.wrap.b32 	%r1134, %r1128, %r1129, 23;
	shf.l.wrap.b32 	%r1135, %r1129, %r1128, 23;
	mov.b64 	%rd1636, {%r1135, %r1134};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	add.s64 	%rd1638, %rd1632, %rd1637;
	add.s64 	%rd1639, %rd1638, -4446306890439682159;
	add.s64 	%rd1640, %rd1639, %rd1503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1614;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 28;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 28;
	mov.b64 	%rd1641, {%r1139, %r1138};
	shf.l.wrap.b32 	%r1140, %r1136, %r1137, 30;
	shf.l.wrap.b32 	%r1141, %r1137, %r1136, 30;
	mov.b64 	%rd1642, {%r1141, %r1140};
	xor.b64  	%rd1643, %rd1641, %rd1642;
	shf.l.wrap.b32 	%r1142, %r1136, %r1137, 25;
	shf.l.wrap.b32 	%r1143, %r1137, %r1136, 25;
	mov.b64 	%rd1644, {%r1143, %r1142};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	and.b64  	%rd1646, %rd1614, %rd1577;
	or.b64  	%rd1647, %rd1614, %rd1577;
	and.b64  	%rd1648, %rd1647, %rd1540;
	or.b64  	%rd1649, %rd1648, %rd1646;
	add.s64 	%rd1650, %rd1649, %rd1645;
	add.s64 	%rd1651, %rd1650, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1144,%dummy}, %rd1590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd1590;
	}
	shf.r.wrap.b32 	%r1146, %r1145, %r1144, 19;
	shf.r.wrap.b32 	%r1147, %r1144, %r1145, 19;
	mov.b64 	%rd1652, {%r1147, %r1146};
	shf.l.wrap.b32 	%r1148, %r1144, %r1145, 3;
	shf.l.wrap.b32 	%r1149, %r1145, %r1144, 3;
	mov.b64 	%rd1653, {%r1149, %r1148};
	xor.b64  	%rd1654, %rd1652, %rd1653;
	shr.u64 	%rd1655, %rd1590, 6;
	xor.b64  	%rd1656, %rd1654, %rd1655;
	shf.r.wrap.b32 	%r1150, %r807, %r806, 1;
	shf.r.wrap.b32 	%r1151, %r806, %r807, 1;
	mov.b64 	%rd1657, {%r1151, %r1150};
	shf.r.wrap.b32 	%r1152, %r807, %r806, 8;
	shf.r.wrap.b32 	%r1153, %r806, %r807, 8;
	mov.b64 	%rd1658, {%r1153, %r1152};
	xor.b64  	%rd1659, %rd1657, %rd1658;
	shr.u64 	%rd1660, %rd1109, 7;
	xor.b64  	%rd1661, %rd1659, %rd1660;
	add.s64 	%rd1662, %rd1661, %rd1072;
	add.s64 	%rd1663, %rd1662, %rd1405;
	add.s64 	%rd1664, %rd1663, %rd1656;
	add.s64 	%rd1665, %rd1664, %rd1529;
	xor.b64  	%rd1666, %rd1603, %rd1566;
	and.b64  	%rd1667, %rd1640, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1566;
	add.s64 	%rd1669, %rd1665, %rd1668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1154,%dummy}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1155}, %rd1640;
	}
	shf.r.wrap.b32 	%r1156, %r1155, %r1154, 14;
	shf.r.wrap.b32 	%r1157, %r1154, %r1155, 14;
	mov.b64 	%rd1670, {%r1157, %r1156};
	shf.r.wrap.b32 	%r1158, %r1155, %r1154, 18;
	shf.r.wrap.b32 	%r1159, %r1154, %r1155, 18;
	mov.b64 	%rd1671, {%r1159, %r1158};
	xor.b64  	%rd1672, %rd1670, %rd1671;
	shf.l.wrap.b32 	%r1160, %r1154, %r1155, 23;
	shf.l.wrap.b32 	%r1161, %r1155, %r1154, 23;
	mov.b64 	%rd1673, {%r1161, %r1160};
	xor.b64  	%rd1674, %rd1672, %rd1673;
	add.s64 	%rd1675, %rd1669, %rd1674;
	add.s64 	%rd1676, %rd1675, -4076793802049405392;
	add.s64 	%rd1677, %rd1676, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd1651;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 28;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 28;
	mov.b64 	%rd1678, {%r1165, %r1164};
	shf.l.wrap.b32 	%r1166, %r1162, %r1163, 30;
	shf.l.wrap.b32 	%r1167, %r1163, %r1162, 30;
	mov.b64 	%rd1679, {%r1167, %r1166};
	xor.b64  	%rd1680, %rd1678, %rd1679;
	shf.l.wrap.b32 	%r1168, %r1162, %r1163, 25;
	shf.l.wrap.b32 	%r1169, %r1163, %r1162, 25;
	mov.b64 	%rd1681, {%r1169, %r1168};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	and.b64  	%rd1683, %rd1651, %rd1614;
	or.b64  	%rd1684, %rd1651, %rd1614;
	and.b64  	%rd1685, %rd1684, %rd1577;
	or.b64  	%rd1686, %rd1685, %rd1683;
	add.s64 	%rd1687, %rd1686, %rd1682;
	add.s64 	%rd1688, %rd1687, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd1627;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 19;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 19;
	mov.b64 	%rd1689, {%r1173, %r1172};
	shf.l.wrap.b32 	%r1174, %r1170, %r1171, 3;
	shf.l.wrap.b32 	%r1175, %r1171, %r1170, 3;
	mov.b64 	%rd1690, {%r1175, %r1174};
	xor.b64  	%rd1691, %rd1689, %rd1690;
	shr.u64 	%rd1692, %rd1627, 6;
	xor.b64  	%rd1693, %rd1691, %rd1692;
	shf.r.wrap.b32 	%r1176, %r833, %r832, 1;
	shf.r.wrap.b32 	%r1177, %r832, %r833, 1;
	mov.b64 	%rd1694, {%r1177, %r1176};
	shf.r.wrap.b32 	%r1178, %r833, %r832, 8;
	shf.r.wrap.b32 	%r1179, %r832, %r833, 8;
	mov.b64 	%rd1695, {%r1179, %r1178};
	xor.b64  	%rd1696, %rd1694, %rd1695;
	shr.u64 	%rd1697, %rd1146, 7;
	xor.b64  	%rd1698, %rd1696, %rd1697;
	add.s64 	%rd1699, %rd1698, %rd1109;
	add.s64 	%rd1700, %rd1699, %rd1442;
	add.s64 	%rd1701, %rd1700, %rd1693;
	add.s64 	%rd1702, %rd1701, %rd1566;
	xor.b64  	%rd1703, %rd1640, %rd1603;
	and.b64  	%rd1704, %rd1677, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1603;
	add.s64 	%rd1706, %rd1702, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1180,%dummy}, %rd1677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd1677;
	}
	shf.r.wrap.b32 	%r1182, %r1181, %r1180, 14;
	shf.r.wrap.b32 	%r1183, %r1180, %r1181, 14;
	mov.b64 	%rd1707, {%r1183, %r1182};
	shf.r.wrap.b32 	%r1184, %r1181, %r1180, 18;
	shf.r.wrap.b32 	%r1185, %r1180, %r1181, 18;
	mov.b64 	%rd1708, {%r1185, %r1184};
	xor.b64  	%rd1709, %rd1707, %rd1708;
	shf.l.wrap.b32 	%r1186, %r1180, %r1181, 23;
	shf.l.wrap.b32 	%r1187, %r1181, %r1180, 23;
	mov.b64 	%rd1710, {%r1187, %r1186};
	xor.b64  	%rd1711, %rd1709, %rd1710;
	add.s64 	%rd1712, %rd1706, %rd1711;
	add.s64 	%rd1713, %rd1712, -3345356375505022440;
	add.s64 	%rd1714, %rd1713, %rd1577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd1688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1688;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 28;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 28;
	mov.b64 	%rd1715, {%r1191, %r1190};
	shf.l.wrap.b32 	%r1192, %r1188, %r1189, 30;
	shf.l.wrap.b32 	%r1193, %r1189, %r1188, 30;
	mov.b64 	%rd1716, {%r1193, %r1192};
	xor.b64  	%rd1717, %rd1715, %rd1716;
	shf.l.wrap.b32 	%r1194, %r1188, %r1189, 25;
	shf.l.wrap.b32 	%r1195, %r1189, %r1188, 25;
	mov.b64 	%rd1718, {%r1195, %r1194};
	xor.b64  	%rd1719, %rd1717, %rd1718;
	and.b64  	%rd1720, %rd1688, %rd1651;
	or.b64  	%rd1721, %rd1688, %rd1651;
	and.b64  	%rd1722, %rd1721, %rd1614;
	or.b64  	%rd1723, %rd1722, %rd1720;
	add.s64 	%rd1724, %rd1723, %rd1719;
	add.s64 	%rd1725, %rd1724, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1664;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 19;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 19;
	mov.b64 	%rd1726, {%r1199, %r1198};
	shf.l.wrap.b32 	%r1200, %r1196, %r1197, 3;
	shf.l.wrap.b32 	%r1201, %r1197, %r1196, 3;
	mov.b64 	%rd1727, {%r1201, %r1200};
	xor.b64  	%rd1728, %rd1726, %rd1727;
	shr.u64 	%rd1729, %rd1664, 6;
	xor.b64  	%rd1730, %rd1728, %rd1729;
	shf.r.wrap.b32 	%r1202, %r859, %r858, 1;
	shf.r.wrap.b32 	%r1203, %r858, %r859, 1;
	mov.b64 	%rd1731, {%r1203, %r1202};
	shf.r.wrap.b32 	%r1204, %r859, %r858, 8;
	shf.r.wrap.b32 	%r1205, %r858, %r859, 8;
	mov.b64 	%rd1732, {%r1205, %r1204};
	xor.b64  	%rd1733, %rd1731, %rd1732;
	shr.u64 	%rd1734, %rd1183, 7;
	xor.b64  	%rd1735, %rd1733, %rd1734;
	add.s64 	%rd1736, %rd1735, %rd1146;
	add.s64 	%rd1737, %rd1736, %rd1479;
	add.s64 	%rd1738, %rd1737, %rd1730;
	add.s64 	%rd1739, %rd1738, %rd1603;
	xor.b64  	%rd1740, %rd1677, %rd1640;
	and.b64  	%rd1741, %rd1714, %rd1740;
	xor.b64  	%rd1742, %rd1741, %rd1640;
	add.s64 	%rd1743, %rd1739, %rd1742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd1714;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 14;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 14;
	mov.b64 	%rd1744, {%r1209, %r1208};
	shf.r.wrap.b32 	%r1210, %r1207, %r1206, 18;
	shf.r.wrap.b32 	%r1211, %r1206, %r1207, 18;
	mov.b64 	%rd1745, {%r1211, %r1210};
	xor.b64  	%rd1746, %rd1744, %rd1745;
	shf.l.wrap.b32 	%r1212, %r1206, %r1207, 23;
	shf.l.wrap.b32 	%r1213, %r1207, %r1206, 23;
	mov.b64 	%rd1747, {%r1213, %r1212};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	add.s64 	%rd1749, %rd1743, %rd1748;
	add.s64 	%rd1750, %rd1749, -2983346525034927856;
	add.s64 	%rd1751, %rd1750, %rd1614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1214,%dummy}, %rd1725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1215}, %rd1725;
	}
	shf.r.wrap.b32 	%r1216, %r1215, %r1214, 28;
	shf.r.wrap.b32 	%r1217, %r1214, %r1215, 28;
	mov.b64 	%rd1752, {%r1217, %r1216};
	shf.l.wrap.b32 	%r1218, %r1214, %r1215, 30;
	shf.l.wrap.b32 	%r1219, %r1215, %r1214, 30;
	mov.b64 	%rd1753, {%r1219, %r1218};
	xor.b64  	%rd1754, %rd1752, %rd1753;
	shf.l.wrap.b32 	%r1220, %r1214, %r1215, 25;
	shf.l.wrap.b32 	%r1221, %r1215, %r1214, 25;
	mov.b64 	%rd1755, {%r1221, %r1220};
	xor.b64  	%rd1756, %rd1754, %rd1755;
	and.b64  	%rd1757, %rd1725, %rd1688;
	or.b64  	%rd1758, %rd1725, %rd1688;
	and.b64  	%rd1759, %rd1758, %rd1651;
	or.b64  	%rd1760, %rd1759, %rd1757;
	add.s64 	%rd1761, %rd1760, %rd1756;
	add.s64 	%rd1762, %rd1761, %rd1750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd1701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd1701;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 19;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 19;
	mov.b64 	%rd1763, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 3;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 3;
	mov.b64 	%rd1764, {%r1227, %r1226};
	xor.b64  	%rd1765, %rd1763, %rd1764;
	shr.u64 	%rd1766, %rd1701, 6;
	xor.b64  	%rd1767, %rd1765, %rd1766;
	shf.r.wrap.b32 	%r1228, %r885, %r884, 1;
	shf.r.wrap.b32 	%r1229, %r884, %r885, 1;
	mov.b64 	%rd1768, {%r1229, %r1228};
	shf.r.wrap.b32 	%r1230, %r885, %r884, 8;
	shf.r.wrap.b32 	%r1231, %r884, %r885, 8;
	mov.b64 	%rd1769, {%r1231, %r1230};
	xor.b64  	%rd1770, %rd1768, %rd1769;
	shr.u64 	%rd1771, %rd1220, 7;
	xor.b64  	%rd1772, %rd1770, %rd1771;
	add.s64 	%rd1773, %rd1772, %rd1183;
	add.s64 	%rd1774, %rd1773, %rd1516;
	add.s64 	%rd1775, %rd1774, %rd1767;
	add.s64 	%rd1776, %rd1775, %rd1640;
	xor.b64  	%rd1777, %rd1714, %rd1677;
	and.b64  	%rd1778, %rd1751, %rd1777;
	xor.b64  	%rd1779, %rd1778, %rd1677;
	add.s64 	%rd1780, %rd1776, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1751;
	}
	shf.r.wrap.b32 	%r1234, %r1233, %r1232, 14;
	shf.r.wrap.b32 	%r1235, %r1232, %r1233, 14;
	mov.b64 	%rd1781, {%r1235, %r1234};
	shf.r.wrap.b32 	%r1236, %r1233, %r1232, 18;
	shf.r.wrap.b32 	%r1237, %r1232, %r1233, 18;
	mov.b64 	%rd1782, {%r1237, %r1236};
	xor.b64  	%rd1783, %rd1781, %rd1782;
	shf.l.wrap.b32 	%r1238, %r1232, %r1233, 23;
	shf.l.wrap.b32 	%r1239, %r1233, %r1232, 23;
	mov.b64 	%rd1784, {%r1239, %r1238};
	xor.b64  	%rd1785, %rd1783, %rd1784;
	add.s64 	%rd1786, %rd1780, %rd1785;
	add.s64 	%rd1787, %rd1786, -860691631967231958;
	add.s64 	%rd1788, %rd1787, %rd1651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1762;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 28;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 28;
	mov.b64 	%rd1789, {%r1243, %r1242};
	shf.l.wrap.b32 	%r1244, %r1240, %r1241, 30;
	shf.l.wrap.b32 	%r1245, %r1241, %r1240, 30;
	mov.b64 	%rd1790, {%r1245, %r1244};
	xor.b64  	%rd1791, %rd1789, %rd1790;
	shf.l.wrap.b32 	%r1246, %r1240, %r1241, 25;
	shf.l.wrap.b32 	%r1247, %r1241, %r1240, 25;
	mov.b64 	%rd1792, {%r1247, %r1246};
	xor.b64  	%rd1793, %rd1791, %rd1792;
	and.b64  	%rd1794, %rd1762, %rd1725;
	or.b64  	%rd1795, %rd1762, %rd1725;
	and.b64  	%rd1796, %rd1795, %rd1688;
	or.b64  	%rd1797, %rd1796, %rd1794;
	add.s64 	%rd1798, %rd1797, %rd1793;
	add.s64 	%rd1799, %rd1798, %rd1787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd1738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1738;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 19;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 19;
	mov.b64 	%rd1800, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 3;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 3;
	mov.b64 	%rd1801, {%r1253, %r1252};
	xor.b64  	%rd1802, %rd1800, %rd1801;
	shr.u64 	%rd1803, %rd1738, 6;
	xor.b64  	%rd1804, %rd1802, %rd1803;
	shf.r.wrap.b32 	%r1254, %r911, %r910, 1;
	shf.r.wrap.b32 	%r1255, %r910, %r911, 1;
	mov.b64 	%rd1805, {%r1255, %r1254};
	shf.r.wrap.b32 	%r1256, %r911, %r910, 8;
	shf.r.wrap.b32 	%r1257, %r910, %r911, 8;
	mov.b64 	%rd1806, {%r1257, %r1256};
	xor.b64  	%rd1807, %rd1805, %rd1806;
	shr.u64 	%rd1808, %rd1257, 7;
	xor.b64  	%rd1809, %rd1807, %rd1808;
	add.s64 	%rd1810, %rd1809, %rd1220;
	add.s64 	%rd1811, %rd1810, %rd1553;
	add.s64 	%rd1812, %rd1811, %rd1804;
	add.s64 	%rd1813, %rd1812, %rd1677;
	xor.b64  	%rd1814, %rd1751, %rd1714;
	and.b64  	%rd1815, %rd1788, %rd1814;
	xor.b64  	%rd1816, %rd1815, %rd1714;
	add.s64 	%rd1817, %rd1813, %rd1816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd1788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd1788;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 14;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 14;
	mov.b64 	%rd1818, {%r1261, %r1260};
	shf.r.wrap.b32 	%r1262, %r1259, %r1258, 18;
	shf.r.wrap.b32 	%r1263, %r1258, %r1259, 18;
	mov.b64 	%rd1819, {%r1263, %r1262};
	xor.b64  	%rd1820, %rd1818, %rd1819;
	shf.l.wrap.b32 	%r1264, %r1258, %r1259, 23;
	shf.l.wrap.b32 	%r1265, %r1259, %r1258, 23;
	mov.b64 	%rd1821, {%r1265, %r1264};
	xor.b64  	%rd1822, %rd1820, %rd1821;
	add.s64 	%rd1823, %rd1817, %rd1822;
	add.s64 	%rd1824, %rd1823, 1182934255886127544;
	add.s64 	%rd1825, %rd1824, %rd1688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd1799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd1799;
	}
	shf.r.wrap.b32 	%r1268, %r1267, %r1266, 28;
	shf.r.wrap.b32 	%r1269, %r1266, %r1267, 28;
	mov.b64 	%rd1826, {%r1269, %r1268};
	shf.l.wrap.b32 	%r1270, %r1266, %r1267, 30;
	shf.l.wrap.b32 	%r1271, %r1267, %r1266, 30;
	mov.b64 	%rd1827, {%r1271, %r1270};
	xor.b64  	%rd1828, %rd1826, %rd1827;
	shf.l.wrap.b32 	%r1272, %r1266, %r1267, 25;
	shf.l.wrap.b32 	%r1273, %r1267, %r1266, 25;
	mov.b64 	%rd1829, {%r1273, %r1272};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	and.b64  	%rd1831, %rd1799, %rd1762;
	or.b64  	%rd1832, %rd1799, %rd1762;
	and.b64  	%rd1833, %rd1832, %rd1725;
	or.b64  	%rd1834, %rd1833, %rd1831;
	add.s64 	%rd1835, %rd1834, %rd1830;
	add.s64 	%rd1836, %rd1835, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd1775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd1775;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 19;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 19;
	mov.b64 	%rd1837, {%r1277, %r1276};
	shf.l.wrap.b32 	%r1278, %r1274, %r1275, 3;
	shf.l.wrap.b32 	%r1279, %r1275, %r1274, 3;
	mov.b64 	%rd1838, {%r1279, %r1278};
	xor.b64  	%rd1839, %rd1837, %rd1838;
	shr.u64 	%rd1840, %rd1775, 6;
	xor.b64  	%rd1841, %rd1839, %rd1840;
	shf.r.wrap.b32 	%r1280, %r937, %r936, 1;
	shf.r.wrap.b32 	%r1281, %r936, %r937, 1;
	mov.b64 	%rd1842, {%r1281, %r1280};
	shf.r.wrap.b32 	%r1282, %r937, %r936, 8;
	shf.r.wrap.b32 	%r1283, %r936, %r937, 8;
	mov.b64 	%rd1843, {%r1283, %r1282};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	shr.u64 	%rd1845, %rd1294, 7;
	xor.b64  	%rd1846, %rd1844, %rd1845;
	add.s64 	%rd1847, %rd1846, %rd1257;
	add.s64 	%rd1848, %rd1847, %rd1590;
	add.s64 	%rd1849, %rd1848, %rd1841;
	add.s64 	%rd1850, %rd1849, %rd1714;
	xor.b64  	%rd1851, %rd1788, %rd1751;
	and.b64  	%rd1852, %rd1825, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1751;
	add.s64 	%rd1854, %rd1850, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd1825;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 14;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 14;
	mov.b64 	%rd1855, {%r1287, %r1286};
	shf.r.wrap.b32 	%r1288, %r1285, %r1284, 18;
	shf.r.wrap.b32 	%r1289, %r1284, %r1285, 18;
	mov.b64 	%rd1856, {%r1289, %r1288};
	xor.b64  	%rd1857, %rd1855, %rd1856;
	shf.l.wrap.b32 	%r1290, %r1284, %r1285, 23;
	shf.l.wrap.b32 	%r1291, %r1285, %r1284, 23;
	mov.b64 	%rd1858, {%r1291, %r1290};
	xor.b64  	%rd1859, %rd1857, %rd1858;
	add.s64 	%rd1860, %rd1854, %rd1859;
	add.s64 	%rd1861, %rd1860, 1847814050463011016;
	add.s64 	%rd1862, %rd1861, %rd1725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1836;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 28;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 28;
	mov.b64 	%rd1863, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 30;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 30;
	mov.b64 	%rd1864, {%r1297, %r1296};
	xor.b64  	%rd1865, %rd1863, %rd1864;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 25;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 25;
	mov.b64 	%rd1866, {%r1299, %r1298};
	xor.b64  	%rd1867, %rd1865, %rd1866;
	and.b64  	%rd1868, %rd1836, %rd1799;
	or.b64  	%rd1869, %rd1836, %rd1799;
	and.b64  	%rd1870, %rd1869, %rd1762;
	or.b64  	%rd1871, %rd1870, %rd1868;
	add.s64 	%rd1872, %rd1871, %rd1867;
	add.s64 	%rd1873, %rd1872, %rd1861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1812;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 19;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 19;
	mov.b64 	%rd1874, {%r1303, %r1302};
	shf.l.wrap.b32 	%r1304, %r1300, %r1301, 3;
	shf.l.wrap.b32 	%r1305, %r1301, %r1300, 3;
	mov.b64 	%rd1875, {%r1305, %r1304};
	xor.b64  	%rd1876, %rd1874, %rd1875;
	shr.u64 	%rd1877, %rd1812, 6;
	xor.b64  	%rd1878, %rd1876, %rd1877;
	shf.r.wrap.b32 	%r1306, %r963, %r962, 1;
	shf.r.wrap.b32 	%r1307, %r962, %r963, 1;
	mov.b64 	%rd1879, {%r1307, %r1306};
	shf.r.wrap.b32 	%r1308, %r963, %r962, 8;
	shf.r.wrap.b32 	%r1309, %r962, %r963, 8;
	mov.b64 	%rd1880, {%r1309, %r1308};
	xor.b64  	%rd1881, %rd1879, %rd1880;
	shr.u64 	%rd1882, %rd1331, 7;
	xor.b64  	%rd1883, %rd1881, %rd1882;
	add.s64 	%rd1884, %rd1883, %rd1294;
	add.s64 	%rd1885, %rd1884, %rd1627;
	add.s64 	%rd1886, %rd1885, %rd1878;
	add.s64 	%rd1887, %rd1886, %rd1751;
	xor.b64  	%rd1888, %rd1825, %rd1788;
	and.b64  	%rd1889, %rd1862, %rd1888;
	xor.b64  	%rd1890, %rd1889, %rd1788;
	add.s64 	%rd1891, %rd1887, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1862;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 14;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 14;
	mov.b64 	%rd1892, {%r1313, %r1312};
	shf.r.wrap.b32 	%r1314, %r1311, %r1310, 18;
	shf.r.wrap.b32 	%r1315, %r1310, %r1311, 18;
	mov.b64 	%rd1893, {%r1315, %r1314};
	xor.b64  	%rd1894, %rd1892, %rd1893;
	shf.l.wrap.b32 	%r1316, %r1310, %r1311, 23;
	shf.l.wrap.b32 	%r1317, %r1311, %r1310, 23;
	mov.b64 	%rd1895, {%r1317, %r1316};
	xor.b64  	%rd1896, %rd1894, %rd1895;
	add.s64 	%rd1897, %rd1891, %rd1896;
	add.s64 	%rd1898, %rd1897, 2177327727835720531;
	add.s64 	%rd1899, %rd1898, %rd1762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1873;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 28;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 28;
	mov.b64 	%rd1900, {%r1321, %r1320};
	shf.l.wrap.b32 	%r1322, %r1318, %r1319, 30;
	shf.l.wrap.b32 	%r1323, %r1319, %r1318, 30;
	mov.b64 	%rd1901, {%r1323, %r1322};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 25;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 25;
	mov.b64 	%rd1903, {%r1325, %r1324};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	and.b64  	%rd1905, %rd1873, %rd1836;
	or.b64  	%rd1906, %rd1873, %rd1836;
	and.b64  	%rd1907, %rd1906, %rd1799;
	or.b64  	%rd1908, %rd1907, %rd1905;
	add.s64 	%rd1909, %rd1908, %rd1904;
	add.s64 	%rd1910, %rd1909, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1849;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 19;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 19;
	mov.b64 	%rd1911, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 3;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 3;
	mov.b64 	%rd1912, {%r1331, %r1330};
	xor.b64  	%rd1913, %rd1911, %rd1912;
	shr.u64 	%rd1914, %rd1849, 6;
	xor.b64  	%rd1915, %rd1913, %rd1914;
	shf.r.wrap.b32 	%r1332, %r989, %r988, 1;
	shf.r.wrap.b32 	%r1333, %r988, %r989, 1;
	mov.b64 	%rd1916, {%r1333, %r1332};
	shf.r.wrap.b32 	%r1334, %r989, %r988, 8;
	shf.r.wrap.b32 	%r1335, %r988, %r989, 8;
	mov.b64 	%rd1917, {%r1335, %r1334};
	xor.b64  	%rd1918, %rd1916, %rd1917;
	shr.u64 	%rd1919, %rd1368, 7;
	xor.b64  	%rd1920, %rd1918, %rd1919;
	add.s64 	%rd1921, %rd1920, %rd1331;
	add.s64 	%rd1922, %rd1921, %rd1664;
	add.s64 	%rd1923, %rd1922, %rd1915;
	add.s64 	%rd1924, %rd1923, %rd1788;
	xor.b64  	%rd1925, %rd1862, %rd1825;
	and.b64  	%rd1926, %rd1899, %rd1925;
	xor.b64  	%rd1927, %rd1926, %rd1825;
	add.s64 	%rd1928, %rd1924, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1336,%dummy}, %rd1899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1337}, %rd1899;
	}
	shf.r.wrap.b32 	%r1338, %r1337, %r1336, 14;
	shf.r.wrap.b32 	%r1339, %r1336, %r1337, 14;
	mov.b64 	%rd1929, {%r1339, %r1338};
	shf.r.wrap.b32 	%r1340, %r1337, %r1336, 18;
	shf.r.wrap.b32 	%r1341, %r1336, %r1337, 18;
	mov.b64 	%rd1930, {%r1341, %r1340};
	xor.b64  	%rd1931, %rd1929, %rd1930;
	shf.l.wrap.b32 	%r1342, %r1336, %r1337, 23;
	shf.l.wrap.b32 	%r1343, %r1337, %r1336, 23;
	mov.b64 	%rd1932, {%r1343, %r1342};
	xor.b64  	%rd1933, %rd1931, %rd1932;
	add.s64 	%rd1934, %rd1928, %rd1933;
	add.s64 	%rd1935, %rd1934, 2830643537854262169;
	add.s64 	%rd1936, %rd1935, %rd1799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1344,%dummy}, %rd1910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1345}, %rd1910;
	}
	shf.r.wrap.b32 	%r1346, %r1345, %r1344, 28;
	shf.r.wrap.b32 	%r1347, %r1344, %r1345, 28;
	mov.b64 	%rd1937, {%r1347, %r1346};
	shf.l.wrap.b32 	%r1348, %r1344, %r1345, 30;
	shf.l.wrap.b32 	%r1349, %r1345, %r1344, 30;
	mov.b64 	%rd1938, {%r1349, %r1348};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	shf.l.wrap.b32 	%r1350, %r1344, %r1345, 25;
	shf.l.wrap.b32 	%r1351, %r1345, %r1344, 25;
	mov.b64 	%rd1940, {%r1351, %r1350};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	and.b64  	%rd1942, %rd1910, %rd1873;
	or.b64  	%rd1943, %rd1910, %rd1873;
	and.b64  	%rd1944, %rd1943, %rd1836;
	or.b64  	%rd1945, %rd1944, %rd1942;
	add.s64 	%rd1946, %rd1945, %rd1941;
	add.s64 	%rd1947, %rd1946, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd1886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd1886;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 19;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 19;
	mov.b64 	%rd1948, {%r1355, %r1354};
	shf.l.wrap.b32 	%r1356, %r1352, %r1353, 3;
	shf.l.wrap.b32 	%r1357, %r1353, %r1352, 3;
	mov.b64 	%rd1949, {%r1357, %r1356};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	shr.u64 	%rd1951, %rd1886, 6;
	xor.b64  	%rd1952, %rd1950, %rd1951;
	shf.r.wrap.b32 	%r1358, %r1015, %r1014, 1;
	shf.r.wrap.b32 	%r1359, %r1014, %r1015, 1;
	mov.b64 	%rd1953, {%r1359, %r1358};
	shf.r.wrap.b32 	%r1360, %r1015, %r1014, 8;
	shf.r.wrap.b32 	%r1361, %r1014, %r1015, 8;
	mov.b64 	%rd1954, {%r1361, %r1360};
	xor.b64  	%rd1955, %rd1953, %rd1954;
	shr.u64 	%rd1956, %rd1405, 7;
	xor.b64  	%rd1957, %rd1955, %rd1956;
	add.s64 	%rd1958, %rd1957, %rd1368;
	add.s64 	%rd1959, %rd1958, %rd1701;
	add.s64 	%rd1960, %rd1959, %rd1952;
	add.s64 	%rd1961, %rd1960, %rd1825;
	xor.b64  	%rd1962, %rd1899, %rd1862;
	and.b64  	%rd1963, %rd1936, %rd1962;
	xor.b64  	%rd1964, %rd1963, %rd1862;
	add.s64 	%rd1965, %rd1961, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd1936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1363}, %rd1936;
	}
	shf.r.wrap.b32 	%r1364, %r1363, %r1362, 14;
	shf.r.wrap.b32 	%r1365, %r1362, %r1363, 14;
	mov.b64 	%rd1966, {%r1365, %r1364};
	shf.r.wrap.b32 	%r1366, %r1363, %r1362, 18;
	shf.r.wrap.b32 	%r1367, %r1362, %r1363, 18;
	mov.b64 	%rd1967, {%r1367, %r1366};
	xor.b64  	%rd1968, %rd1966, %rd1967;
	shf.l.wrap.b32 	%r1368, %r1362, %r1363, 23;
	shf.l.wrap.b32 	%r1369, %r1363, %r1362, 23;
	mov.b64 	%rd1969, {%r1369, %r1368};
	xor.b64  	%rd1970, %rd1968, %rd1969;
	add.s64 	%rd1971, %rd1965, %rd1970;
	add.s64 	%rd1972, %rd1971, 3796741975233480872;
	add.s64 	%rd1973, %rd1972, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd1947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd1947;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 28;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 28;
	mov.b64 	%rd1974, {%r1373, %r1372};
	shf.l.wrap.b32 	%r1374, %r1370, %r1371, 30;
	shf.l.wrap.b32 	%r1375, %r1371, %r1370, 30;
	mov.b64 	%rd1975, {%r1375, %r1374};
	xor.b64  	%rd1976, %rd1974, %rd1975;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 25;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 25;
	mov.b64 	%rd1977, {%r1377, %r1376};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	and.b64  	%rd1979, %rd1947, %rd1910;
	or.b64  	%rd1980, %rd1947, %rd1910;
	and.b64  	%rd1981, %rd1980, %rd1873;
	or.b64  	%rd1982, %rd1981, %rd1979;
	add.s64 	%rd1983, %rd1982, %rd1978;
	add.s64 	%rd1984, %rd1983, %rd1972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd1923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd1923;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 19;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 19;
	mov.b64 	%rd1985, {%r1381, %r1380};
	shf.l.wrap.b32 	%r1382, %r1378, %r1379, 3;
	shf.l.wrap.b32 	%r1383, %r1379, %r1378, 3;
	mov.b64 	%rd1986, {%r1383, %r1382};
	xor.b64  	%rd1987, %rd1985, %rd1986;
	shr.u64 	%rd1988, %rd1923, 6;
	xor.b64  	%rd1989, %rd1987, %rd1988;
	shf.r.wrap.b32 	%r1384, %r1041, %r1040, 1;
	shf.r.wrap.b32 	%r1385, %r1040, %r1041, 1;
	mov.b64 	%rd1990, {%r1385, %r1384};
	shf.r.wrap.b32 	%r1386, %r1041, %r1040, 8;
	shf.r.wrap.b32 	%r1387, %r1040, %r1041, 8;
	mov.b64 	%rd1991, {%r1387, %r1386};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	shr.u64 	%rd1993, %rd1442, 7;
	xor.b64  	%rd1994, %rd1992, %rd1993;
	add.s64 	%rd1995, %rd1994, %rd1405;
	add.s64 	%rd1996, %rd1995, %rd1738;
	add.s64 	%rd1997, %rd1996, %rd1989;
	add.s64 	%rd1998, %rd1997, %rd1862;
	xor.b64  	%rd1999, %rd1936, %rd1899;
	and.b64  	%rd2000, %rd1973, %rd1999;
	xor.b64  	%rd2001, %rd2000, %rd1899;
	add.s64 	%rd2002, %rd1998, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd1973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd1973;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 14;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 14;
	mov.b64 	%rd2003, {%r1391, %r1390};
	shf.r.wrap.b32 	%r1392, %r1389, %r1388, 18;
	shf.r.wrap.b32 	%r1393, %r1388, %r1389, 18;
	mov.b64 	%rd2004, {%r1393, %r1392};
	xor.b64  	%rd2005, %rd2003, %rd2004;
	shf.l.wrap.b32 	%r1394, %r1388, %r1389, 23;
	shf.l.wrap.b32 	%r1395, %r1389, %r1388, 23;
	mov.b64 	%rd2006, {%r1395, %r1394};
	xor.b64  	%rd2007, %rd2005, %rd2006;
	add.s64 	%rd2008, %rd2002, %rd2007;
	add.s64 	%rd2009, %rd2008, 4115178125766777443;
	add.s64 	%rd2010, %rd2009, %rd1873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd1984;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 28;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 28;
	mov.b64 	%rd2011, {%r1399, %r1398};
	shf.l.wrap.b32 	%r1400, %r1396, %r1397, 30;
	shf.l.wrap.b32 	%r1401, %r1397, %r1396, 30;
	mov.b64 	%rd2012, {%r1401, %r1400};
	xor.b64  	%rd2013, %rd2011, %rd2012;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 25;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 25;
	mov.b64 	%rd2014, {%r1403, %r1402};
	xor.b64  	%rd2015, %rd2013, %rd2014;
	and.b64  	%rd2016, %rd1984, %rd1947;
	or.b64  	%rd2017, %rd1984, %rd1947;
	and.b64  	%rd2018, %rd2017, %rd1910;
	or.b64  	%rd2019, %rd2018, %rd2016;
	add.s64 	%rd2020, %rd2019, %rd2015;
	add.s64 	%rd2021, %rd2020, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd1960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd1960;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 19;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 19;
	mov.b64 	%rd2022, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 3;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 3;
	mov.b64 	%rd2023, {%r1409, %r1408};
	xor.b64  	%rd2024, %rd2022, %rd2023;
	shr.u64 	%rd2025, %rd1960, 6;
	xor.b64  	%rd2026, %rd2024, %rd2025;
	shf.r.wrap.b32 	%r1410, %r1067, %r1066, 1;
	shf.r.wrap.b32 	%r1411, %r1066, %r1067, 1;
	mov.b64 	%rd2027, {%r1411, %r1410};
	shf.r.wrap.b32 	%r1412, %r1067, %r1066, 8;
	shf.r.wrap.b32 	%r1413, %r1066, %r1067, 8;
	mov.b64 	%rd2028, {%r1413, %r1412};
	xor.b64  	%rd2029, %rd2027, %rd2028;
	shr.u64 	%rd2030, %rd1479, 7;
	xor.b64  	%rd2031, %rd2029, %rd2030;
	add.s64 	%rd2032, %rd2031, %rd1442;
	add.s64 	%rd2033, %rd2032, %rd1775;
	add.s64 	%rd2034, %rd2033, %rd2026;
	add.s64 	%rd2035, %rd2034, %rd1899;
	xor.b64  	%rd2036, %rd1973, %rd1936;
	and.b64  	%rd2037, %rd2010, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1936;
	add.s64 	%rd2039, %rd2035, %rd2038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd2010;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 14;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 14;
	mov.b64 	%rd2040, {%r1417, %r1416};
	shf.r.wrap.b32 	%r1418, %r1415, %r1414, 18;
	shf.r.wrap.b32 	%r1419, %r1414, %r1415, 18;
	mov.b64 	%rd2041, {%r1419, %r1418};
	xor.b64  	%rd2042, %rd2040, %rd2041;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 23;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 23;
	mov.b64 	%rd2043, {%r1421, %r1420};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	add.s64 	%rd2045, %rd2039, %rd2044;
	add.s64 	%rd2046, %rd2045, 5681478168544905931;
	add.s64 	%rd2047, %rd2046, %rd1910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd2021;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 28;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 28;
	mov.b64 	%rd2048, {%r1425, %r1424};
	shf.l.wrap.b32 	%r1426, %r1422, %r1423, 30;
	shf.l.wrap.b32 	%r1427, %r1423, %r1422, 30;
	mov.b64 	%rd2049, {%r1427, %r1426};
	xor.b64  	%rd2050, %rd2048, %rd2049;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 25;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 25;
	mov.b64 	%rd2051, {%r1429, %r1428};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	and.b64  	%rd2053, %rd2021, %rd1984;
	or.b64  	%rd2054, %rd2021, %rd1984;
	and.b64  	%rd2055, %rd2054, %rd1947;
	or.b64  	%rd2056, %rd2055, %rd2053;
	add.s64 	%rd2057, %rd2056, %rd2052;
	add.s64 	%rd2058, %rd2057, %rd2046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd1997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd1997;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 19;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 19;
	mov.b64 	%rd2059, {%r1433, %r1432};
	shf.l.wrap.b32 	%r1434, %r1430, %r1431, 3;
	shf.l.wrap.b32 	%r1435, %r1431, %r1430, 3;
	mov.b64 	%rd2060, {%r1435, %r1434};
	xor.b64  	%rd2061, %rd2059, %rd2060;
	shr.u64 	%rd2062, %rd1997, 6;
	xor.b64  	%rd2063, %rd2061, %rd2062;
	shf.r.wrap.b32 	%r1436, %r1093, %r1092, 1;
	shf.r.wrap.b32 	%r1437, %r1092, %r1093, 1;
	mov.b64 	%rd2064, {%r1437, %r1436};
	shf.r.wrap.b32 	%r1438, %r1093, %r1092, 8;
	shf.r.wrap.b32 	%r1439, %r1092, %r1093, 8;
	mov.b64 	%rd2065, {%r1439, %r1438};
	xor.b64  	%rd2066, %rd2064, %rd2065;
	shr.u64 	%rd2067, %rd1516, 7;
	xor.b64  	%rd2068, %rd2066, %rd2067;
	add.s64 	%rd2069, %rd2068, %rd1479;
	add.s64 	%rd2070, %rd2069, %rd1812;
	add.s64 	%rd2071, %rd2070, %rd2063;
	add.s64 	%rd2072, %rd2071, %rd1936;
	xor.b64  	%rd2073, %rd2010, %rd1973;
	and.b64  	%rd2074, %rd2047, %rd2073;
	xor.b64  	%rd2075, %rd2074, %rd1973;
	add.s64 	%rd2076, %rd2072, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1440,%dummy}, %rd2047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1441}, %rd2047;
	}
	shf.r.wrap.b32 	%r1442, %r1441, %r1440, 14;
	shf.r.wrap.b32 	%r1443, %r1440, %r1441, 14;
	mov.b64 	%rd2077, {%r1443, %r1442};
	shf.r.wrap.b32 	%r1444, %r1441, %r1440, 18;
	shf.r.wrap.b32 	%r1445, %r1440, %r1441, 18;
	mov.b64 	%rd2078, {%r1445, %r1444};
	xor.b64  	%rd2079, %rd2077, %rd2078;
	shf.l.wrap.b32 	%r1446, %r1440, %r1441, 23;
	shf.l.wrap.b32 	%r1447, %r1441, %r1440, 23;
	mov.b64 	%rd2080, {%r1447, %r1446};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	add.s64 	%rd2082, %rd2076, %rd2081;
	add.s64 	%rd2083, %rd2082, 6601373596472566643;
	add.s64 	%rd2084, %rd2083, %rd1947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1448,%dummy}, %rd2058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd2058;
	}
	shf.r.wrap.b32 	%r1450, %r1449, %r1448, 28;
	shf.r.wrap.b32 	%r1451, %r1448, %r1449, 28;
	mov.b64 	%rd2085, {%r1451, %r1450};
	shf.l.wrap.b32 	%r1452, %r1448, %r1449, 30;
	shf.l.wrap.b32 	%r1453, %r1449, %r1448, 30;
	mov.b64 	%rd2086, {%r1453, %r1452};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	shf.l.wrap.b32 	%r1454, %r1448, %r1449, 25;
	shf.l.wrap.b32 	%r1455, %r1449, %r1448, 25;
	mov.b64 	%rd2088, {%r1455, %r1454};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	and.b64  	%rd2090, %rd2058, %rd2021;
	or.b64  	%rd2091, %rd2058, %rd2021;
	and.b64  	%rd2092, %rd2091, %rd1984;
	or.b64  	%rd2093, %rd2092, %rd2090;
	add.s64 	%rd2094, %rd2093, %rd2089;
	add.s64 	%rd2095, %rd2094, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1456,%dummy}, %rd2034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1457}, %rd2034;
	}
	shf.r.wrap.b32 	%r1458, %r1457, %r1456, 19;
	shf.r.wrap.b32 	%r1459, %r1456, %r1457, 19;
	mov.b64 	%rd2096, {%r1459, %r1458};
	shf.l.wrap.b32 	%r1460, %r1456, %r1457, 3;
	shf.l.wrap.b32 	%r1461, %r1457, %r1456, 3;
	mov.b64 	%rd2097, {%r1461, %r1460};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	shr.u64 	%rd2099, %rd2034, 6;
	xor.b64  	%rd2100, %rd2098, %rd2099;
	shf.r.wrap.b32 	%r1462, %r1119, %r1118, 1;
	shf.r.wrap.b32 	%r1463, %r1118, %r1119, 1;
	mov.b64 	%rd2101, {%r1463, %r1462};
	shf.r.wrap.b32 	%r1464, %r1119, %r1118, 8;
	shf.r.wrap.b32 	%r1465, %r1118, %r1119, 8;
	mov.b64 	%rd2102, {%r1465, %r1464};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	shr.u64 	%rd2104, %rd1553, 7;
	xor.b64  	%rd2105, %rd2103, %rd2104;
	add.s64 	%rd2106, %rd2105, %rd1516;
	add.s64 	%rd2107, %rd2106, %rd1849;
	add.s64 	%rd2108, %rd2107, %rd2100;
	add.s64 	%rd2109, %rd2108, %rd1973;
	xor.b64  	%rd2110, %rd2047, %rd2010;
	and.b64  	%rd2111, %rd2084, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2010;
	add.s64 	%rd2113, %rd2109, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd2084;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 14;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 14;
	mov.b64 	%rd2114, {%r1469, %r1468};
	shf.r.wrap.b32 	%r1470, %r1467, %r1466, 18;
	shf.r.wrap.b32 	%r1471, %r1466, %r1467, 18;
	mov.b64 	%rd2115, {%r1471, %r1470};
	xor.b64  	%rd2116, %rd2114, %rd2115;
	shf.l.wrap.b32 	%r1472, %r1466, %r1467, 23;
	shf.l.wrap.b32 	%r1473, %r1467, %r1466, 23;
	mov.b64 	%rd2117, {%r1473, %r1472};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	add.s64 	%rd2119, %rd2113, %rd2118;
	add.s64 	%rd2120, %rd2119, 7507060721942968483;
	add.s64 	%rd2121, %rd2120, %rd1984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd2095;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 28;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 28;
	mov.b64 	%rd2122, {%r1477, %r1476};
	shf.l.wrap.b32 	%r1478, %r1474, %r1475, 30;
	shf.l.wrap.b32 	%r1479, %r1475, %r1474, 30;
	mov.b64 	%rd2123, {%r1479, %r1478};
	xor.b64  	%rd2124, %rd2122, %rd2123;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 25;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 25;
	mov.b64 	%rd2125, {%r1481, %r1480};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	and.b64  	%rd2127, %rd2095, %rd2058;
	or.b64  	%rd2128, %rd2095, %rd2058;
	and.b64  	%rd2129, %rd2128, %rd2021;
	or.b64  	%rd2130, %rd2129, %rd2127;
	add.s64 	%rd2131, %rd2130, %rd2126;
	add.s64 	%rd2132, %rd2131, %rd2120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd2071;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 19;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 19;
	mov.b64 	%rd2133, {%r1485, %r1484};
	shf.l.wrap.b32 	%r1486, %r1482, %r1483, 3;
	shf.l.wrap.b32 	%r1487, %r1483, %r1482, 3;
	mov.b64 	%rd2134, {%r1487, %r1486};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	shr.u64 	%rd2136, %rd2071, 6;
	xor.b64  	%rd2137, %rd2135, %rd2136;
	shf.r.wrap.b32 	%r1488, %r1145, %r1144, 1;
	shf.r.wrap.b32 	%r1489, %r1144, %r1145, 1;
	mov.b64 	%rd2138, {%r1489, %r1488};
	shf.r.wrap.b32 	%r1490, %r1145, %r1144, 8;
	shf.r.wrap.b32 	%r1491, %r1144, %r1145, 8;
	mov.b64 	%rd2139, {%r1491, %r1490};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	shr.u64 	%rd2141, %rd1590, 7;
	xor.b64  	%rd2142, %rd2140, %rd2141;
	add.s64 	%rd2143, %rd2142, %rd1553;
	add.s64 	%rd2144, %rd2143, %rd1886;
	add.s64 	%rd2145, %rd2144, %rd2137;
	add.s64 	%rd2146, %rd2145, %rd2010;
	xor.b64  	%rd2147, %rd2084, %rd2047;
	and.b64  	%rd2148, %rd2121, %rd2147;
	xor.b64  	%rd2149, %rd2148, %rd2047;
	add.s64 	%rd2150, %rd2146, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1492,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1493}, %rd2121;
	}
	shf.r.wrap.b32 	%r1494, %r1493, %r1492, 14;
	shf.r.wrap.b32 	%r1495, %r1492, %r1493, 14;
	mov.b64 	%rd2151, {%r1495, %r1494};
	shf.r.wrap.b32 	%r1496, %r1493, %r1492, 18;
	shf.r.wrap.b32 	%r1497, %r1492, %r1493, 18;
	mov.b64 	%rd2152, {%r1497, %r1496};
	xor.b64  	%rd2153, %rd2151, %rd2152;
	shf.l.wrap.b32 	%r1498, %r1492, %r1493, 23;
	shf.l.wrap.b32 	%r1499, %r1493, %r1492, 23;
	mov.b64 	%rd2154, {%r1499, %r1498};
	xor.b64  	%rd2155, %rd2153, %rd2154;
	add.s64 	%rd2156, %rd2150, %rd2155;
	add.s64 	%rd2157, %rd2156, 8399075790359081724;
	add.s64 	%rd2158, %rd2157, %rd2021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd2132;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 28;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 28;
	mov.b64 	%rd2159, {%r1503, %r1502};
	shf.l.wrap.b32 	%r1504, %r1500, %r1501, 30;
	shf.l.wrap.b32 	%r1505, %r1501, %r1500, 30;
	mov.b64 	%rd2160, {%r1505, %r1504};
	xor.b64  	%rd2161, %rd2159, %rd2160;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 25;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 25;
	mov.b64 	%rd2162, {%r1507, %r1506};
	xor.b64  	%rd2163, %rd2161, %rd2162;
	and.b64  	%rd2164, %rd2132, %rd2095;
	or.b64  	%rd2165, %rd2132, %rd2095;
	and.b64  	%rd2166, %rd2165, %rd2058;
	or.b64  	%rd2167, %rd2166, %rd2164;
	add.s64 	%rd2168, %rd2167, %rd2163;
	add.s64 	%rd2169, %rd2168, %rd2157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd2108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd2108;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 19;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 19;
	mov.b64 	%rd2170, {%r1511, %r1510};
	shf.l.wrap.b32 	%r1512, %r1508, %r1509, 3;
	shf.l.wrap.b32 	%r1513, %r1509, %r1508, 3;
	mov.b64 	%rd2171, {%r1513, %r1512};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	shr.u64 	%rd2173, %rd2108, 6;
	xor.b64  	%rd2174, %rd2172, %rd2173;
	shf.r.wrap.b32 	%r1514, %r1171, %r1170, 1;
	shf.r.wrap.b32 	%r1515, %r1170, %r1171, 1;
	mov.b64 	%rd2175, {%r1515, %r1514};
	shf.r.wrap.b32 	%r1516, %r1171, %r1170, 8;
	shf.r.wrap.b32 	%r1517, %r1170, %r1171, 8;
	mov.b64 	%rd2176, {%r1517, %r1516};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	shr.u64 	%rd2178, %rd1627, 7;
	xor.b64  	%rd2179, %rd2177, %rd2178;
	add.s64 	%rd2180, %rd2179, %rd1590;
	add.s64 	%rd2181, %rd2180, %rd1923;
	add.s64 	%rd2182, %rd2181, %rd2174;
	add.s64 	%rd2183, %rd2182, %rd2047;
	xor.b64  	%rd2184, %rd2121, %rd2084;
	and.b64  	%rd2185, %rd2158, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2084;
	add.s64 	%rd2187, %rd2183, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd2158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd2158;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 14;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 14;
	mov.b64 	%rd2188, {%r1521, %r1520};
	shf.r.wrap.b32 	%r1522, %r1519, %r1518, 18;
	shf.r.wrap.b32 	%r1523, %r1518, %r1519, 18;
	mov.b64 	%rd2189, {%r1523, %r1522};
	xor.b64  	%rd2190, %rd2188, %rd2189;
	shf.l.wrap.b32 	%r1524, %r1518, %r1519, 23;
	shf.l.wrap.b32 	%r1525, %r1519, %r1518, 23;
	mov.b64 	%rd2191, {%r1525, %r1524};
	xor.b64  	%rd2192, %rd2190, %rd2191;
	add.s64 	%rd2193, %rd2187, %rd2192;
	add.s64 	%rd2194, %rd2193, 8693463985226723168;
	add.s64 	%rd2195, %rd2194, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd2169;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 28;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 28;
	mov.b64 	%rd2196, {%r1529, %r1528};
	shf.l.wrap.b32 	%r1530, %r1526, %r1527, 30;
	shf.l.wrap.b32 	%r1531, %r1527, %r1526, 30;
	mov.b64 	%rd2197, {%r1531, %r1530};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	shf.l.wrap.b32 	%r1532, %r1526, %r1527, 25;
	shf.l.wrap.b32 	%r1533, %r1527, %r1526, 25;
	mov.b64 	%rd2199, {%r1533, %r1532};
	xor.b64  	%rd2200, %rd2198, %rd2199;
	and.b64  	%rd2201, %rd2169, %rd2132;
	or.b64  	%rd2202, %rd2169, %rd2132;
	and.b64  	%rd2203, %rd2202, %rd2095;
	or.b64  	%rd2204, %rd2203, %rd2201;
	add.s64 	%rd2205, %rd2204, %rd2200;
	add.s64 	%rd2206, %rd2205, %rd2194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd2145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd2145;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 19;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 19;
	mov.b64 	%rd2207, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 3;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 3;
	mov.b64 	%rd2208, {%r1539, %r1538};
	xor.b64  	%rd2209, %rd2207, %rd2208;
	shr.u64 	%rd2210, %rd2145, 6;
	xor.b64  	%rd2211, %rd2209, %rd2210;
	shf.r.wrap.b32 	%r1540, %r1197, %r1196, 1;
	shf.r.wrap.b32 	%r1541, %r1196, %r1197, 1;
	mov.b64 	%rd2212, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1197, %r1196, 8;
	shf.r.wrap.b32 	%r1543, %r1196, %r1197, 8;
	mov.b64 	%rd2213, {%r1543, %r1542};
	xor.b64  	%rd2214, %rd2212, %rd2213;
	shr.u64 	%rd2215, %rd1664, 7;
	xor.b64  	%rd2216, %rd2214, %rd2215;
	add.s64 	%rd2217, %rd2216, %rd1627;
	add.s64 	%rd2218, %rd2217, %rd1960;
	add.s64 	%rd2219, %rd2218, %rd2211;
	add.s64 	%rd2220, %rd2219, %rd2084;
	xor.b64  	%rd2221, %rd2158, %rd2121;
	and.b64  	%rd2222, %rd2195, %rd2221;
	xor.b64  	%rd2223, %rd2222, %rd2121;
	add.s64 	%rd2224, %rd2220, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd2195;
	}
	shf.r.wrap.b32 	%r1546, %r1545, %r1544, 14;
	shf.r.wrap.b32 	%r1547, %r1544, %r1545, 14;
	mov.b64 	%rd2225, {%r1547, %r1546};
	shf.r.wrap.b32 	%r1548, %r1545, %r1544, 18;
	shf.r.wrap.b32 	%r1549, %r1544, %r1545, 18;
	mov.b64 	%rd2226, {%r1549, %r1548};
	xor.b64  	%rd2227, %rd2225, %rd2226;
	shf.l.wrap.b32 	%r1550, %r1544, %r1545, 23;
	shf.l.wrap.b32 	%r1551, %r1545, %r1544, 23;
	mov.b64 	%rd2228, {%r1551, %r1550};
	xor.b64  	%rd2229, %rd2227, %rd2228;
	add.s64 	%rd2230, %rd2224, %rd2229;
	add.s64 	%rd2231, %rd2230, -8878714635349349518;
	add.s64 	%rd2232, %rd2231, %rd2095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2206;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 28;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 28;
	mov.b64 	%rd2233, {%r1555, %r1554};
	shf.l.wrap.b32 	%r1556, %r1552, %r1553, 30;
	shf.l.wrap.b32 	%r1557, %r1553, %r1552, 30;
	mov.b64 	%rd2234, {%r1557, %r1556};
	xor.b64  	%rd2235, %rd2233, %rd2234;
	shf.l.wrap.b32 	%r1558, %r1552, %r1553, 25;
	shf.l.wrap.b32 	%r1559, %r1553, %r1552, 25;
	mov.b64 	%rd2236, {%r1559, %r1558};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	and.b64  	%rd2238, %rd2206, %rd2169;
	or.b64  	%rd2239, %rd2206, %rd2169;
	and.b64  	%rd2240, %rd2239, %rd2132;
	or.b64  	%rd2241, %rd2240, %rd2238;
	add.s64 	%rd2242, %rd2241, %rd2237;
	add.s64 	%rd2243, %rd2242, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd2182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd2182;
	}
	shf.r.wrap.b32 	%r1562, %r1561, %r1560, 19;
	shf.r.wrap.b32 	%r1563, %r1560, %r1561, 19;
	mov.b64 	%rd2244, {%r1563, %r1562};
	shf.l.wrap.b32 	%r1564, %r1560, %r1561, 3;
	shf.l.wrap.b32 	%r1565, %r1561, %r1560, 3;
	mov.b64 	%rd2245, {%r1565, %r1564};
	xor.b64  	%rd2246, %rd2244, %rd2245;
	shr.u64 	%rd2247, %rd2182, 6;
	xor.b64  	%rd2248, %rd2246, %rd2247;
	shf.r.wrap.b32 	%r1566, %r1223, %r1222, 1;
	shf.r.wrap.b32 	%r1567, %r1222, %r1223, 1;
	mov.b64 	%rd2249, {%r1567, %r1566};
	shf.r.wrap.b32 	%r1568, %r1223, %r1222, 8;
	shf.r.wrap.b32 	%r1569, %r1222, %r1223, 8;
	mov.b64 	%rd2250, {%r1569, %r1568};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	shr.u64 	%rd2252, %rd1701, 7;
	xor.b64  	%rd2253, %rd2251, %rd2252;
	add.s64 	%rd2254, %rd2253, %rd1664;
	add.s64 	%rd2255, %rd2254, %rd1997;
	add.s64 	%rd2256, %rd2255, %rd2248;
	add.s64 	%rd2257, %rd2256, %rd2121;
	xor.b64  	%rd2258, %rd2195, %rd2158;
	and.b64  	%rd2259, %rd2232, %rd2258;
	xor.b64  	%rd2260, %rd2259, %rd2158;
	add.s64 	%rd2261, %rd2257, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1570,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1571}, %rd2232;
	}
	shf.r.wrap.b32 	%r1572, %r1571, %r1570, 14;
	shf.r.wrap.b32 	%r1573, %r1570, %r1571, 14;
	mov.b64 	%rd2262, {%r1573, %r1572};
	shf.r.wrap.b32 	%r1574, %r1571, %r1570, 18;
	shf.r.wrap.b32 	%r1575, %r1570, %r1571, 18;
	mov.b64 	%rd2263, {%r1575, %r1574};
	xor.b64  	%rd2264, %rd2262, %rd2263;
	shf.l.wrap.b32 	%r1576, %r1570, %r1571, 23;
	shf.l.wrap.b32 	%r1577, %r1571, %r1570, 23;
	mov.b64 	%rd2265, {%r1577, %r1576};
	xor.b64  	%rd2266, %rd2264, %rd2265;
	add.s64 	%rd2267, %rd2261, %rd2266;
	add.s64 	%rd2268, %rd2267, -8302665154208450068;
	add.s64 	%rd2269, %rd2268, %rd2132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd2243;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 28;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 28;
	mov.b64 	%rd2270, {%r1581, %r1580};
	shf.l.wrap.b32 	%r1582, %r1578, %r1579, 30;
	shf.l.wrap.b32 	%r1583, %r1579, %r1578, 30;
	mov.b64 	%rd2271, {%r1583, %r1582};
	xor.b64  	%rd2272, %rd2270, %rd2271;
	shf.l.wrap.b32 	%r1584, %r1578, %r1579, 25;
	shf.l.wrap.b32 	%r1585, %r1579, %r1578, 25;
	mov.b64 	%rd2273, {%r1585, %r1584};
	xor.b64  	%rd2274, %rd2272, %rd2273;
	and.b64  	%rd2275, %rd2243, %rd2206;
	or.b64  	%rd2276, %rd2243, %rd2206;
	and.b64  	%rd2277, %rd2276, %rd2169;
	or.b64  	%rd2278, %rd2277, %rd2275;
	add.s64 	%rd2279, %rd2278, %rd2274;
	add.s64 	%rd2280, %rd2279, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd2219;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 19;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 19;
	mov.b64 	%rd2281, {%r1589, %r1588};
	shf.l.wrap.b32 	%r1590, %r1586, %r1587, 3;
	shf.l.wrap.b32 	%r1591, %r1587, %r1586, 3;
	mov.b64 	%rd2282, {%r1591, %r1590};
	xor.b64  	%rd2283, %rd2281, %rd2282;
	shr.u64 	%rd2284, %rd2219, 6;
	xor.b64  	%rd2285, %rd2283, %rd2284;
	shf.r.wrap.b32 	%r1592, %r1249, %r1248, 1;
	shf.r.wrap.b32 	%r1593, %r1248, %r1249, 1;
	mov.b64 	%rd2286, {%r1593, %r1592};
	shf.r.wrap.b32 	%r1594, %r1249, %r1248, 8;
	shf.r.wrap.b32 	%r1595, %r1248, %r1249, 8;
	mov.b64 	%rd2287, {%r1595, %r1594};
	xor.b64  	%rd2288, %rd2286, %rd2287;
	shr.u64 	%rd2289, %rd1738, 7;
	xor.b64  	%rd2290, %rd2288, %rd2289;
	add.s64 	%rd2291, %rd2290, %rd1701;
	add.s64 	%rd2292, %rd2291, %rd2034;
	add.s64 	%rd2293, %rd2292, %rd2285;
	add.s64 	%rd2294, %rd2293, %rd2158;
	xor.b64  	%rd2295, %rd2232, %rd2195;
	and.b64  	%rd2296, %rd2269, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2195;
	add.s64 	%rd2298, %rd2294, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd2269;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 14;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 14;
	mov.b64 	%rd2299, {%r1599, %r1598};
	shf.r.wrap.b32 	%r1600, %r1597, %r1596, 18;
	shf.r.wrap.b32 	%r1601, %r1596, %r1597, 18;
	mov.b64 	%rd2300, {%r1601, %r1600};
	xor.b64  	%rd2301, %rd2299, %rd2300;
	shf.l.wrap.b32 	%r1602, %r1596, %r1597, 23;
	shf.l.wrap.b32 	%r1603, %r1597, %r1596, 23;
	mov.b64 	%rd2302, {%r1603, %r1602};
	xor.b64  	%rd2303, %rd2301, %rd2302;
	add.s64 	%rd2304, %rd2298, %rd2303;
	add.s64 	%rd2305, %rd2304, -8016688836872298968;
	add.s64 	%rd2306, %rd2305, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd2280;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 28;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 28;
	mov.b64 	%rd2307, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 30;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 30;
	mov.b64 	%rd2308, {%r1609, %r1608};
	xor.b64  	%rd2309, %rd2307, %rd2308;
	shf.l.wrap.b32 	%r1610, %r1604, %r1605, 25;
	shf.l.wrap.b32 	%r1611, %r1605, %r1604, 25;
	mov.b64 	%rd2310, {%r1611, %r1610};
	xor.b64  	%rd2311, %rd2309, %rd2310;
	and.b64  	%rd2312, %rd2280, %rd2243;
	or.b64  	%rd2313, %rd2280, %rd2243;
	and.b64  	%rd2314, %rd2313, %rd2206;
	or.b64  	%rd2315, %rd2314, %rd2312;
	add.s64 	%rd2316, %rd2315, %rd2311;
	add.s64 	%rd2317, %rd2316, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1612,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd2256;
	}
	shf.r.wrap.b32 	%r1614, %r1613, %r1612, 19;
	shf.r.wrap.b32 	%r1615, %r1612, %r1613, 19;
	mov.b64 	%rd2318, {%r1615, %r1614};
	shf.l.wrap.b32 	%r1616, %r1612, %r1613, 3;
	shf.l.wrap.b32 	%r1617, %r1613, %r1612, 3;
	mov.b64 	%rd2319, {%r1617, %r1616};
	xor.b64  	%rd2320, %rd2318, %rd2319;
	shr.u64 	%rd2321, %rd2256, 6;
	xor.b64  	%rd2322, %rd2320, %rd2321;
	shf.r.wrap.b32 	%r1618, %r1275, %r1274, 1;
	shf.r.wrap.b32 	%r1619, %r1274, %r1275, 1;
	mov.b64 	%rd2323, {%r1619, %r1618};
	shf.r.wrap.b32 	%r1620, %r1275, %r1274, 8;
	shf.r.wrap.b32 	%r1621, %r1274, %r1275, 8;
	mov.b64 	%rd2324, {%r1621, %r1620};
	xor.b64  	%rd2325, %rd2323, %rd2324;
	shr.u64 	%rd2326, %rd1775, 7;
	xor.b64  	%rd2327, %rd2325, %rd2326;
	add.s64 	%rd2328, %rd2327, %rd1738;
	add.s64 	%rd2329, %rd2328, %rd2071;
	add.s64 	%rd2330, %rd2329, %rd2322;
	add.s64 	%rd2331, %rd2330, %rd2195;
	xor.b64  	%rd2332, %rd2269, %rd2232;
	and.b64  	%rd2333, %rd2306, %rd2332;
	xor.b64  	%rd2334, %rd2333, %rd2232;
	add.s64 	%rd2335, %rd2331, %rd2334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1622,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1623}, %rd2306;
	}
	shf.r.wrap.b32 	%r1624, %r1623, %r1622, 14;
	shf.r.wrap.b32 	%r1625, %r1622, %r1623, 14;
	mov.b64 	%rd2336, {%r1625, %r1624};
	shf.r.wrap.b32 	%r1626, %r1623, %r1622, 18;
	shf.r.wrap.b32 	%r1627, %r1622, %r1623, 18;
	mov.b64 	%rd2337, {%r1627, %r1626};
	xor.b64  	%rd2338, %rd2336, %rd2337;
	shf.l.wrap.b32 	%r1628, %r1622, %r1623, 23;
	shf.l.wrap.b32 	%r1629, %r1623, %r1622, 23;
	mov.b64 	%rd2339, {%r1629, %r1628};
	xor.b64  	%rd2340, %rd2338, %rd2339;
	add.s64 	%rd2341, %rd2335, %rd2340;
	add.s64 	%rd2342, %rd2341, -6606660893046293015;
	add.s64 	%rd2343, %rd2342, %rd2206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1630,%dummy}, %rd2317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1631}, %rd2317;
	}
	shf.r.wrap.b32 	%r1632, %r1631, %r1630, 28;
	shf.r.wrap.b32 	%r1633, %r1630, %r1631, 28;
	mov.b64 	%rd2344, {%r1633, %r1632};
	shf.l.wrap.b32 	%r1634, %r1630, %r1631, 30;
	shf.l.wrap.b32 	%r1635, %r1631, %r1630, 30;
	mov.b64 	%rd2345, {%r1635, %r1634};
	xor.b64  	%rd2346, %rd2344, %rd2345;
	shf.l.wrap.b32 	%r1636, %r1630, %r1631, 25;
	shf.l.wrap.b32 	%r1637, %r1631, %r1630, 25;
	mov.b64 	%rd2347, {%r1637, %r1636};
	xor.b64  	%rd2348, %rd2346, %rd2347;
	and.b64  	%rd2349, %rd2317, %rd2280;
	or.b64  	%rd2350, %rd2317, %rd2280;
	and.b64  	%rd2351, %rd2350, %rd2243;
	or.b64  	%rd2352, %rd2351, %rd2349;
	add.s64 	%rd2353, %rd2352, %rd2348;
	add.s64 	%rd2354, %rd2353, %rd2342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd2293;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 19;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 19;
	mov.b64 	%rd2355, {%r1641, %r1640};
	shf.l.wrap.b32 	%r1642, %r1638, %r1639, 3;
	shf.l.wrap.b32 	%r1643, %r1639, %r1638, 3;
	mov.b64 	%rd2356, {%r1643, %r1642};
	xor.b64  	%rd2357, %rd2355, %rd2356;
	shr.u64 	%rd2358, %rd2293, 6;
	xor.b64  	%rd2359, %rd2357, %rd2358;
	shf.r.wrap.b32 	%r1644, %r1301, %r1300, 1;
	shf.r.wrap.b32 	%r1645, %r1300, %r1301, 1;
	mov.b64 	%rd2360, {%r1645, %r1644};
	shf.r.wrap.b32 	%r1646, %r1301, %r1300, 8;
	shf.r.wrap.b32 	%r1647, %r1300, %r1301, 8;
	mov.b64 	%rd2361, {%r1647, %r1646};
	xor.b64  	%rd2362, %rd2360, %rd2361;
	shr.u64 	%rd2363, %rd1812, 7;
	xor.b64  	%rd2364, %rd2362, %rd2363;
	add.s64 	%rd2365, %rd2364, %rd1775;
	add.s64 	%rd2366, %rd2365, %rd2108;
	add.s64 	%rd2367, %rd2366, %rd2359;
	add.s64 	%rd2368, %rd2367, %rd2232;
	xor.b64  	%rd2369, %rd2306, %rd2269;
	and.b64  	%rd2370, %rd2343, %rd2369;
	xor.b64  	%rd2371, %rd2370, %rd2269;
	add.s64 	%rd2372, %rd2368, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2343;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 14;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 14;
	mov.b64 	%rd2373, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1649, %r1648, 18;
	shf.r.wrap.b32 	%r1653, %r1648, %r1649, 18;
	mov.b64 	%rd2374, {%r1653, %r1652};
	xor.b64  	%rd2375, %rd2373, %rd2374;
	shf.l.wrap.b32 	%r1654, %r1648, %r1649, 23;
	shf.l.wrap.b32 	%r1655, %r1649, %r1648, 23;
	mov.b64 	%rd2376, {%r1655, %r1654};
	xor.b64  	%rd2377, %rd2375, %rd2376;
	add.s64 	%rd2378, %rd2372, %rd2377;
	add.s64 	%rd2379, %rd2378, -4685533653050689259;
	add.s64 	%rd2380, %rd2379, %rd2243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2354;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 28;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 28;
	mov.b64 	%rd2381, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 30;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 30;
	mov.b64 	%rd2382, {%r1661, %r1660};
	xor.b64  	%rd2383, %rd2381, %rd2382;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 25;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 25;
	mov.b64 	%rd2384, {%r1663, %r1662};
	xor.b64  	%rd2385, %rd2383, %rd2384;
	and.b64  	%rd2386, %rd2354, %rd2317;
	or.b64  	%rd2387, %rd2354, %rd2317;
	and.b64  	%rd2388, %rd2387, %rd2280;
	or.b64  	%rd2389, %rd2388, %rd2386;
	add.s64 	%rd2390, %rd2389, %rd2385;
	add.s64 	%rd2391, %rd2390, %rd2379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2330;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 19;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 19;
	mov.b64 	%rd2392, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 3;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 3;
	mov.b64 	%rd2393, {%r1669, %r1668};
	xor.b64  	%rd2394, %rd2392, %rd2393;
	shr.u64 	%rd2395, %rd2330, 6;
	xor.b64  	%rd2396, %rd2394, %rd2395;
	shf.r.wrap.b32 	%r1670, %r1327, %r1326, 1;
	shf.r.wrap.b32 	%r1671, %r1326, %r1327, 1;
	mov.b64 	%rd2397, {%r1671, %r1670};
	shf.r.wrap.b32 	%r1672, %r1327, %r1326, 8;
	shf.r.wrap.b32 	%r1673, %r1326, %r1327, 8;
	mov.b64 	%rd2398, {%r1673, %r1672};
	xor.b64  	%rd2399, %rd2397, %rd2398;
	shr.u64 	%rd2400, %rd1849, 7;
	xor.b64  	%rd2401, %rd2399, %rd2400;
	add.s64 	%rd2402, %rd2401, %rd1812;
	add.s64 	%rd2403, %rd2402, %rd2145;
	add.s64 	%rd2404, %rd2403, %rd2396;
	add.s64 	%rd2405, %rd2404, %rd2269;
	xor.b64  	%rd2406, %rd2343, %rd2306;
	and.b64  	%rd2407, %rd2380, %rd2406;
	xor.b64  	%rd2408, %rd2407, %rd2306;
	add.s64 	%rd2409, %rd2405, %rd2408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd2380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd2380;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 14;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 14;
	mov.b64 	%rd2410, {%r1677, %r1676};
	shf.r.wrap.b32 	%r1678, %r1675, %r1674, 18;
	shf.r.wrap.b32 	%r1679, %r1674, %r1675, 18;
	mov.b64 	%rd2411, {%r1679, %r1678};
	xor.b64  	%rd2412, %rd2410, %rd2411;
	shf.l.wrap.b32 	%r1680, %r1674, %r1675, 23;
	shf.l.wrap.b32 	%r1681, %r1675, %r1674, 23;
	mov.b64 	%rd2413, {%r1681, %r1680};
	xor.b64  	%rd2414, %rd2412, %rd2413;
	add.s64 	%rd2415, %rd2409, %rd2414;
	add.s64 	%rd2416, %rd2415, -4147400797238176981;
	add.s64 	%rd2417, %rd2416, %rd2280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1682,%dummy}, %rd2391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1683}, %rd2391;
	}
	shf.r.wrap.b32 	%r1684, %r1683, %r1682, 28;
	shf.r.wrap.b32 	%r1685, %r1682, %r1683, 28;
	mov.b64 	%rd2418, {%r1685, %r1684};
	shf.l.wrap.b32 	%r1686, %r1682, %r1683, 30;
	shf.l.wrap.b32 	%r1687, %r1683, %r1682, 30;
	mov.b64 	%rd2419, {%r1687, %r1686};
	xor.b64  	%rd2420, %rd2418, %rd2419;
	shf.l.wrap.b32 	%r1688, %r1682, %r1683, 25;
	shf.l.wrap.b32 	%r1689, %r1683, %r1682, 25;
	mov.b64 	%rd2421, {%r1689, %r1688};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	and.b64  	%rd2423, %rd2391, %rd2354;
	or.b64  	%rd2424, %rd2391, %rd2354;
	and.b64  	%rd2425, %rd2424, %rd2317;
	or.b64  	%rd2426, %rd2425, %rd2423;
	add.s64 	%rd2427, %rd2426, %rd2422;
	add.s64 	%rd2428, %rd2427, %rd2416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1690,%dummy}, %rd2367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1691}, %rd2367;
	}
	shf.r.wrap.b32 	%r1692, %r1691, %r1690, 19;
	shf.r.wrap.b32 	%r1693, %r1690, %r1691, 19;
	mov.b64 	%rd2429, {%r1693, %r1692};
	shf.l.wrap.b32 	%r1694, %r1690, %r1691, 3;
	shf.l.wrap.b32 	%r1695, %r1691, %r1690, 3;
	mov.b64 	%rd2430, {%r1695, %r1694};
	xor.b64  	%rd2431, %rd2429, %rd2430;
	shr.u64 	%rd2432, %rd2367, 6;
	xor.b64  	%rd2433, %rd2431, %rd2432;
	shf.r.wrap.b32 	%r1696, %r1353, %r1352, 1;
	shf.r.wrap.b32 	%r1697, %r1352, %r1353, 1;
	mov.b64 	%rd2434, {%r1697, %r1696};
	shf.r.wrap.b32 	%r1698, %r1353, %r1352, 8;
	shf.r.wrap.b32 	%r1699, %r1352, %r1353, 8;
	mov.b64 	%rd2435, {%r1699, %r1698};
	xor.b64  	%rd2436, %rd2434, %rd2435;
	shr.u64 	%rd2437, %rd1886, 7;
	xor.b64  	%rd2438, %rd2436, %rd2437;
	add.s64 	%rd2439, %rd2438, %rd1849;
	add.s64 	%rd2440, %rd2439, %rd2182;
	add.s64 	%rd2441, %rd2440, %rd2433;
	add.s64 	%rd2442, %rd2441, %rd2306;
	xor.b64  	%rd2443, %rd2380, %rd2343;
	and.b64  	%rd2444, %rd2417, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2343;
	add.s64 	%rd2446, %rd2442, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1700,%dummy}, %rd2417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd2417;
	}
	shf.r.wrap.b32 	%r1702, %r1701, %r1700, 14;
	shf.r.wrap.b32 	%r1703, %r1700, %r1701, 14;
	mov.b64 	%rd2447, {%r1703, %r1702};
	shf.r.wrap.b32 	%r1704, %r1701, %r1700, 18;
	shf.r.wrap.b32 	%r1705, %r1700, %r1701, 18;
	mov.b64 	%rd2448, {%r1705, %r1704};
	xor.b64  	%rd2449, %rd2447, %rd2448;
	shf.l.wrap.b32 	%r1706, %r1700, %r1701, 23;
	shf.l.wrap.b32 	%r1707, %r1701, %r1700, 23;
	mov.b64 	%rd2450, {%r1707, %r1706};
	xor.b64  	%rd2451, %rd2449, %rd2450;
	add.s64 	%rd2452, %rd2446, %rd2451;
	add.s64 	%rd2453, %rd2452, -3880063495543823972;
	add.s64 	%rd2454, %rd2453, %rd2317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1708,%dummy}, %rd2428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd2428;
	}
	shf.r.wrap.b32 	%r1710, %r1709, %r1708, 28;
	shf.r.wrap.b32 	%r1711, %r1708, %r1709, 28;
	mov.b64 	%rd2455, {%r1711, %r1710};
	shf.l.wrap.b32 	%r1712, %r1708, %r1709, 30;
	shf.l.wrap.b32 	%r1713, %r1709, %r1708, 30;
	mov.b64 	%rd2456, {%r1713, %r1712};
	xor.b64  	%rd2457, %rd2455, %rd2456;
	shf.l.wrap.b32 	%r1714, %r1708, %r1709, 25;
	shf.l.wrap.b32 	%r1715, %r1709, %r1708, 25;
	mov.b64 	%rd2458, {%r1715, %r1714};
	xor.b64  	%rd2459, %rd2457, %rd2458;
	and.b64  	%rd2460, %rd2428, %rd2391;
	or.b64  	%rd2461, %rd2428, %rd2391;
	and.b64  	%rd2462, %rd2461, %rd2354;
	or.b64  	%rd2463, %rd2462, %rd2460;
	add.s64 	%rd2464, %rd2463, %rd2459;
	add.s64 	%rd2465, %rd2464, %rd2453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd2404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd2404;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 19;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 19;
	mov.b64 	%rd2466, {%r1719, %r1718};
	shf.l.wrap.b32 	%r1720, %r1716, %r1717, 3;
	shf.l.wrap.b32 	%r1721, %r1717, %r1716, 3;
	mov.b64 	%rd2467, {%r1721, %r1720};
	xor.b64  	%rd2468, %rd2466, %rd2467;
	shr.u64 	%rd2469, %rd2404, 6;
	xor.b64  	%rd2470, %rd2468, %rd2469;
	shf.r.wrap.b32 	%r1722, %r1379, %r1378, 1;
	shf.r.wrap.b32 	%r1723, %r1378, %r1379, 1;
	mov.b64 	%rd2471, {%r1723, %r1722};
	shf.r.wrap.b32 	%r1724, %r1379, %r1378, 8;
	shf.r.wrap.b32 	%r1725, %r1378, %r1379, 8;
	mov.b64 	%rd2472, {%r1725, %r1724};
	xor.b64  	%rd2473, %rd2471, %rd2472;
	shr.u64 	%rd2474, %rd1923, 7;
	xor.b64  	%rd2475, %rd2473, %rd2474;
	add.s64 	%rd2476, %rd2475, %rd1886;
	add.s64 	%rd2477, %rd2476, %rd2219;
	add.s64 	%rd2478, %rd2477, %rd2470;
	add.s64 	%rd2479, %rd2478, %rd2343;
	xor.b64  	%rd2480, %rd2417, %rd2380;
	and.b64  	%rd2481, %rd2454, %rd2480;
	xor.b64  	%rd2482, %rd2481, %rd2380;
	add.s64 	%rd2483, %rd2479, %rd2482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd2454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1727}, %rd2454;
	}
	shf.r.wrap.b32 	%r1728, %r1727, %r1726, 14;
	shf.r.wrap.b32 	%r1729, %r1726, %r1727, 14;
	mov.b64 	%rd2484, {%r1729, %r1728};
	shf.r.wrap.b32 	%r1730, %r1727, %r1726, 18;
	shf.r.wrap.b32 	%r1731, %r1726, %r1727, 18;
	mov.b64 	%rd2485, {%r1731, %r1730};
	xor.b64  	%rd2486, %rd2484, %rd2485;
	shf.l.wrap.b32 	%r1732, %r1726, %r1727, 23;
	shf.l.wrap.b32 	%r1733, %r1727, %r1726, 23;
	mov.b64 	%rd2487, {%r1733, %r1732};
	xor.b64  	%rd2488, %rd2486, %rd2487;
	add.s64 	%rd2489, %rd2483, %rd2488;
	add.s64 	%rd2490, %rd2489, -3348786107499101689;
	add.s64 	%rd2491, %rd2490, %rd2354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd2465;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 28;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 28;
	mov.b64 	%rd2492, {%r1737, %r1736};
	shf.l.wrap.b32 	%r1738, %r1734, %r1735, 30;
	shf.l.wrap.b32 	%r1739, %r1735, %r1734, 30;
	mov.b64 	%rd2493, {%r1739, %r1738};
	xor.b64  	%rd2494, %rd2492, %rd2493;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 25;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 25;
	mov.b64 	%rd2495, {%r1741, %r1740};
	xor.b64  	%rd2496, %rd2494, %rd2495;
	and.b64  	%rd2497, %rd2465, %rd2428;
	or.b64  	%rd2498, %rd2465, %rd2428;
	and.b64  	%rd2499, %rd2498, %rd2391;
	or.b64  	%rd2500, %rd2499, %rd2497;
	add.s64 	%rd2501, %rd2500, %rd2496;
	add.s64 	%rd2502, %rd2501, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd2441;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 19;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 19;
	mov.b64 	%rd2503, {%r1745, %r1744};
	shf.l.wrap.b32 	%r1746, %r1742, %r1743, 3;
	shf.l.wrap.b32 	%r1747, %r1743, %r1742, 3;
	mov.b64 	%rd2504, {%r1747, %r1746};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	shr.u64 	%rd2506, %rd2441, 6;
	xor.b64  	%rd2507, %rd2505, %rd2506;
	shf.r.wrap.b32 	%r1748, %r1405, %r1404, 1;
	shf.r.wrap.b32 	%r1749, %r1404, %r1405, 1;
	mov.b64 	%rd2508, {%r1749, %r1748};
	shf.r.wrap.b32 	%r1750, %r1405, %r1404, 8;
	shf.r.wrap.b32 	%r1751, %r1404, %r1405, 8;
	mov.b64 	%rd2509, {%r1751, %r1750};
	xor.b64  	%rd2510, %rd2508, %rd2509;
	shr.u64 	%rd2511, %rd1960, 7;
	xor.b64  	%rd2512, %rd2510, %rd2511;
	add.s64 	%rd2513, %rd2512, %rd1923;
	add.s64 	%rd2514, %rd2513, %rd2256;
	add.s64 	%rd2515, %rd2514, %rd2507;
	add.s64 	%rd2516, %rd2515, %rd2380;
	xor.b64  	%rd2517, %rd2454, %rd2417;
	and.b64  	%rd2518, %rd2491, %rd2517;
	xor.b64  	%rd2519, %rd2518, %rd2417;
	add.s64 	%rd2520, %rd2516, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd2491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd2491;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 14;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 14;
	mov.b64 	%rd2521, {%r1755, %r1754};
	shf.r.wrap.b32 	%r1756, %r1753, %r1752, 18;
	shf.r.wrap.b32 	%r1757, %r1752, %r1753, 18;
	mov.b64 	%rd2522, {%r1757, %r1756};
	xor.b64  	%rd2523, %rd2521, %rd2522;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 23;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 23;
	mov.b64 	%rd2524, {%r1759, %r1758};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	add.s64 	%rd2526, %rd2520, %rd2525;
	add.s64 	%rd2527, %rd2526, -1523767162380948706;
	add.s64 	%rd2528, %rd2527, %rd2391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2502;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 28;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 28;
	mov.b64 	%rd2529, {%r1763, %r1762};
	shf.l.wrap.b32 	%r1764, %r1760, %r1761, 30;
	shf.l.wrap.b32 	%r1765, %r1761, %r1760, 30;
	mov.b64 	%rd2530, {%r1765, %r1764};
	xor.b64  	%rd2531, %rd2529, %rd2530;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 25;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 25;
	mov.b64 	%rd2532, {%r1767, %r1766};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	and.b64  	%rd2534, %rd2502, %rd2465;
	or.b64  	%rd2535, %rd2502, %rd2465;
	and.b64  	%rd2536, %rd2535, %rd2428;
	or.b64  	%rd2537, %rd2536, %rd2534;
	add.s64 	%rd2538, %rd2537, %rd2533;
	add.s64 	%rd2539, %rd2538, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2478;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 19;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 19;
	mov.b64 	%rd2540, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 3;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 3;
	mov.b64 	%rd2541, {%r1773, %r1772};
	xor.b64  	%rd2542, %rd2540, %rd2541;
	shr.u64 	%rd2543, %rd2478, 6;
	xor.b64  	%rd2544, %rd2542, %rd2543;
	shf.r.wrap.b32 	%r1774, %r1431, %r1430, 1;
	shf.r.wrap.b32 	%r1775, %r1430, %r1431, 1;
	mov.b64 	%rd2545, {%r1775, %r1774};
	shf.r.wrap.b32 	%r1776, %r1431, %r1430, 8;
	shf.r.wrap.b32 	%r1777, %r1430, %r1431, 8;
	mov.b64 	%rd2546, {%r1777, %r1776};
	xor.b64  	%rd2547, %rd2545, %rd2546;
	shr.u64 	%rd2548, %rd1997, 7;
	xor.b64  	%rd2549, %rd2547, %rd2548;
	add.s64 	%rd2550, %rd2549, %rd1960;
	add.s64 	%rd2551, %rd2550, %rd2293;
	add.s64 	%rd2552, %rd2551, %rd2544;
	add.s64 	%rd2553, %rd2552, %rd2417;
	xor.b64  	%rd2554, %rd2491, %rd2454;
	and.b64  	%rd2555, %rd2528, %rd2554;
	xor.b64  	%rd2556, %rd2555, %rd2454;
	add.s64 	%rd2557, %rd2553, %rd2556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd2528;
	}
	shf.r.wrap.b32 	%r1780, %r1779, %r1778, 14;
	shf.r.wrap.b32 	%r1781, %r1778, %r1779, 14;
	mov.b64 	%rd2558, {%r1781, %r1780};
	shf.r.wrap.b32 	%r1782, %r1779, %r1778, 18;
	shf.r.wrap.b32 	%r1783, %r1778, %r1779, 18;
	mov.b64 	%rd2559, {%r1783, %r1782};
	xor.b64  	%rd2560, %rd2558, %rd2559;
	shf.l.wrap.b32 	%r1784, %r1778, %r1779, 23;
	shf.l.wrap.b32 	%r1785, %r1779, %r1778, 23;
	mov.b64 	%rd2561, {%r1785, %r1784};
	xor.b64  	%rd2562, %rd2560, %rd2561;
	add.s64 	%rd2563, %rd2557, %rd2562;
	add.s64 	%rd2564, %rd2563, -757361751448694408;
	add.s64 	%rd2565, %rd2564, %rd2428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd2539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1787}, %rd2539;
	}
	shf.r.wrap.b32 	%r1788, %r1787, %r1786, 28;
	shf.r.wrap.b32 	%r1789, %r1786, %r1787, 28;
	mov.b64 	%rd2566, {%r1789, %r1788};
	shf.l.wrap.b32 	%r1790, %r1786, %r1787, 30;
	shf.l.wrap.b32 	%r1791, %r1787, %r1786, 30;
	mov.b64 	%rd2567, {%r1791, %r1790};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	shf.l.wrap.b32 	%r1792, %r1786, %r1787, 25;
	shf.l.wrap.b32 	%r1793, %r1787, %r1786, 25;
	mov.b64 	%rd2569, {%r1793, %r1792};
	xor.b64  	%rd2570, %rd2568, %rd2569;
	and.b64  	%rd2571, %rd2539, %rd2502;
	or.b64  	%rd2572, %rd2539, %rd2502;
	and.b64  	%rd2573, %rd2572, %rd2465;
	or.b64  	%rd2574, %rd2573, %rd2571;
	add.s64 	%rd2575, %rd2574, %rd2570;
	add.s64 	%rd2576, %rd2575, %rd2564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1794,%dummy}, %rd2515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1795}, %rd2515;
	}
	shf.r.wrap.b32 	%r1796, %r1795, %r1794, 19;
	shf.r.wrap.b32 	%r1797, %r1794, %r1795, 19;
	mov.b64 	%rd2577, {%r1797, %r1796};
	shf.l.wrap.b32 	%r1798, %r1794, %r1795, 3;
	shf.l.wrap.b32 	%r1799, %r1795, %r1794, 3;
	mov.b64 	%rd2578, {%r1799, %r1798};
	xor.b64  	%rd2579, %rd2577, %rd2578;
	shr.u64 	%rd2580, %rd2515, 6;
	xor.b64  	%rd2581, %rd2579, %rd2580;
	shf.r.wrap.b32 	%r1800, %r1457, %r1456, 1;
	shf.r.wrap.b32 	%r1801, %r1456, %r1457, 1;
	mov.b64 	%rd2582, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1457, %r1456, 8;
	shf.r.wrap.b32 	%r1803, %r1456, %r1457, 8;
	mov.b64 	%rd2583, {%r1803, %r1802};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	shr.u64 	%rd2585, %rd2034, 7;
	xor.b64  	%rd2586, %rd2584, %rd2585;
	add.s64 	%rd2587, %rd2586, %rd1997;
	add.s64 	%rd2588, %rd2587, %rd2330;
	add.s64 	%rd2589, %rd2588, %rd2581;
	add.s64 	%rd2590, %rd2589, %rd2454;
	xor.b64  	%rd2591, %rd2528, %rd2491;
	and.b64  	%rd2592, %rd2565, %rd2591;
	xor.b64  	%rd2593, %rd2592, %rd2491;
	add.s64 	%rd2594, %rd2590, %rd2593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd2565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd2565;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 14;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 14;
	mov.b64 	%rd2595, {%r1807, %r1806};
	shf.r.wrap.b32 	%r1808, %r1805, %r1804, 18;
	shf.r.wrap.b32 	%r1809, %r1804, %r1805, 18;
	mov.b64 	%rd2596, {%r1809, %r1808};
	xor.b64  	%rd2597, %rd2595, %rd2596;
	shf.l.wrap.b32 	%r1810, %r1804, %r1805, 23;
	shf.l.wrap.b32 	%r1811, %r1805, %r1804, 23;
	mov.b64 	%rd2598, {%r1811, %r1810};
	xor.b64  	%rd2599, %rd2597, %rd2598;
	add.s64 	%rd2600, %rd2594, %rd2599;
	add.s64 	%rd2601, %rd2600, 500013540394364858;
	add.s64 	%rd2602, %rd2601, %rd2465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1812,%dummy}, %rd2576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd2576;
	}
	shf.r.wrap.b32 	%r1814, %r1813, %r1812, 28;
	shf.r.wrap.b32 	%r1815, %r1812, %r1813, 28;
	mov.b64 	%rd2603, {%r1815, %r1814};
	shf.l.wrap.b32 	%r1816, %r1812, %r1813, 30;
	shf.l.wrap.b32 	%r1817, %r1813, %r1812, 30;
	mov.b64 	%rd2604, {%r1817, %r1816};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	shf.l.wrap.b32 	%r1818, %r1812, %r1813, 25;
	shf.l.wrap.b32 	%r1819, %r1813, %r1812, 25;
	mov.b64 	%rd2606, {%r1819, %r1818};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	and.b64  	%rd2608, %rd2576, %rd2539;
	or.b64  	%rd2609, %rd2576, %rd2539;
	and.b64  	%rd2610, %rd2609, %rd2502;
	or.b64  	%rd2611, %rd2610, %rd2608;
	add.s64 	%rd2612, %rd2611, %rd2607;
	add.s64 	%rd2613, %rd2612, %rd2601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1820,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd2552;
	}
	shf.r.wrap.b32 	%r1822, %r1821, %r1820, 19;
	shf.r.wrap.b32 	%r1823, %r1820, %r1821, 19;
	mov.b64 	%rd2614, {%r1823, %r1822};
	shf.l.wrap.b32 	%r1824, %r1820, %r1821, 3;
	shf.l.wrap.b32 	%r1825, %r1821, %r1820, 3;
	mov.b64 	%rd2615, {%r1825, %r1824};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	shr.u64 	%rd2617, %rd2552, 6;
	xor.b64  	%rd2618, %rd2616, %rd2617;
	shf.r.wrap.b32 	%r1826, %r1483, %r1482, 1;
	shf.r.wrap.b32 	%r1827, %r1482, %r1483, 1;
	mov.b64 	%rd2619, {%r1827, %r1826};
	shf.r.wrap.b32 	%r1828, %r1483, %r1482, 8;
	shf.r.wrap.b32 	%r1829, %r1482, %r1483, 8;
	mov.b64 	%rd2620, {%r1829, %r1828};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	shr.u64 	%rd2622, %rd2071, 7;
	xor.b64  	%rd2623, %rd2621, %rd2622;
	add.s64 	%rd2624, %rd2623, %rd2034;
	add.s64 	%rd2625, %rd2624, %rd2367;
	add.s64 	%rd2626, %rd2625, %rd2618;
	add.s64 	%rd2627, %rd2626, %rd2491;
	xor.b64  	%rd2628, %rd2565, %rd2528;
	and.b64  	%rd2629, %rd2602, %rd2628;
	xor.b64  	%rd2630, %rd2629, %rd2528;
	add.s64 	%rd2631, %rd2627, %rd2630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd2602;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 14;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 14;
	mov.b64 	%rd2632, {%r1833, %r1832};
	shf.r.wrap.b32 	%r1834, %r1831, %r1830, 18;
	shf.r.wrap.b32 	%r1835, %r1830, %r1831, 18;
	mov.b64 	%rd2633, {%r1835, %r1834};
	xor.b64  	%rd2634, %rd2632, %rd2633;
	shf.l.wrap.b32 	%r1836, %r1830, %r1831, 23;
	shf.l.wrap.b32 	%r1837, %r1831, %r1830, 23;
	mov.b64 	%rd2635, {%r1837, %r1836};
	xor.b64  	%rd2636, %rd2634, %rd2635;
	add.s64 	%rd2637, %rd2631, %rd2636;
	add.s64 	%rd2638, %rd2637, 748580250866718886;
	add.s64 	%rd2639, %rd2638, %rd2502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd2613;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 28;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 28;
	mov.b64 	%rd2640, {%r1841, %r1840};
	shf.l.wrap.b32 	%r1842, %r1838, %r1839, 30;
	shf.l.wrap.b32 	%r1843, %r1839, %r1838, 30;
	mov.b64 	%rd2641, {%r1843, %r1842};
	xor.b64  	%rd2642, %rd2640, %rd2641;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 25;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 25;
	mov.b64 	%rd2643, {%r1845, %r1844};
	xor.b64  	%rd2644, %rd2642, %rd2643;
	and.b64  	%rd2645, %rd2613, %rd2576;
	or.b64  	%rd2646, %rd2613, %rd2576;
	and.b64  	%rd2647, %rd2646, %rd2539;
	or.b64  	%rd2648, %rd2647, %rd2645;
	add.s64 	%rd2649, %rd2648, %rd2644;
	add.s64 	%rd2650, %rd2649, %rd2638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd2589;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 19;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 19;
	mov.b64 	%rd2651, {%r1849, %r1848};
	shf.l.wrap.b32 	%r1850, %r1846, %r1847, 3;
	shf.l.wrap.b32 	%r1851, %r1847, %r1846, 3;
	mov.b64 	%rd2652, {%r1851, %r1850};
	xor.b64  	%rd2653, %rd2651, %rd2652;
	shr.u64 	%rd2654, %rd2589, 6;
	xor.b64  	%rd2655, %rd2653, %rd2654;
	shf.r.wrap.b32 	%r1852, %r1509, %r1508, 1;
	shf.r.wrap.b32 	%r1853, %r1508, %r1509, 1;
	mov.b64 	%rd2656, {%r1853, %r1852};
	shf.r.wrap.b32 	%r1854, %r1509, %r1508, 8;
	shf.r.wrap.b32 	%r1855, %r1508, %r1509, 8;
	mov.b64 	%rd2657, {%r1855, %r1854};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	shr.u64 	%rd2659, %rd2108, 7;
	xor.b64  	%rd2660, %rd2658, %rd2659;
	add.s64 	%rd2661, %rd2660, %rd2071;
	add.s64 	%rd2662, %rd2661, %rd2404;
	add.s64 	%rd2663, %rd2662, %rd2655;
	add.s64 	%rd2664, %rd2663, %rd2528;
	xor.b64  	%rd2665, %rd2602, %rd2565;
	and.b64  	%rd2666, %rd2639, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd2565;
	add.s64 	%rd2668, %rd2664, %rd2667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1856,%dummy}, %rd2639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1857}, %rd2639;
	}
	shf.r.wrap.b32 	%r1858, %r1857, %r1856, 14;
	shf.r.wrap.b32 	%r1859, %r1856, %r1857, 14;
	mov.b64 	%rd2669, {%r1859, %r1858};
	shf.r.wrap.b32 	%r1860, %r1857, %r1856, 18;
	shf.r.wrap.b32 	%r1861, %r1856, %r1857, 18;
	mov.b64 	%rd2670, {%r1861, %r1860};
	xor.b64  	%rd2671, %rd2669, %rd2670;
	shf.l.wrap.b32 	%r1862, %r1856, %r1857, 23;
	shf.l.wrap.b32 	%r1863, %r1857, %r1856, 23;
	mov.b64 	%rd2672, {%r1863, %r1862};
	xor.b64  	%rd2673, %rd2671, %rd2672;
	add.s64 	%rd2674, %rd2668, %rd2673;
	add.s64 	%rd2675, %rd2674, 1242879168328830382;
	add.s64 	%rd2676, %rd2675, %rd2539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1864,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd2650;
	}
	shf.r.wrap.b32 	%r1866, %r1865, %r1864, 28;
	shf.r.wrap.b32 	%r1867, %r1864, %r1865, 28;
	mov.b64 	%rd2677, {%r1867, %r1866};
	shf.l.wrap.b32 	%r1868, %r1864, %r1865, 30;
	shf.l.wrap.b32 	%r1869, %r1865, %r1864, 30;
	mov.b64 	%rd2678, {%r1869, %r1868};
	xor.b64  	%rd2679, %rd2677, %rd2678;
	shf.l.wrap.b32 	%r1870, %r1864, %r1865, 25;
	shf.l.wrap.b32 	%r1871, %r1865, %r1864, 25;
	mov.b64 	%rd2680, {%r1871, %r1870};
	xor.b64  	%rd2681, %rd2679, %rd2680;
	and.b64  	%rd2682, %rd2650, %rd2613;
	or.b64  	%rd2683, %rd2650, %rd2613;
	and.b64  	%rd2684, %rd2683, %rd2576;
	or.b64  	%rd2685, %rd2684, %rd2682;
	add.s64 	%rd2686, %rd2685, %rd2681;
	add.s64 	%rd2687, %rd2686, %rd2675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1872,%dummy}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1873}, %rd2626;
	}
	shf.r.wrap.b32 	%r1874, %r1873, %r1872, 19;
	shf.r.wrap.b32 	%r1875, %r1872, %r1873, 19;
	mov.b64 	%rd2688, {%r1875, %r1874};
	shf.l.wrap.b32 	%r1876, %r1872, %r1873, 3;
	shf.l.wrap.b32 	%r1877, %r1873, %r1872, 3;
	mov.b64 	%rd2689, {%r1877, %r1876};
	xor.b64  	%rd2690, %rd2688, %rd2689;
	shr.u64 	%rd2691, %rd2626, 6;
	xor.b64  	%rd2692, %rd2690, %rd2691;
	shf.r.wrap.b32 	%r1878, %r1535, %r1534, 1;
	shf.r.wrap.b32 	%r1879, %r1534, %r1535, 1;
	mov.b64 	%rd2693, {%r1879, %r1878};
	shf.r.wrap.b32 	%r1880, %r1535, %r1534, 8;
	shf.r.wrap.b32 	%r1881, %r1534, %r1535, 8;
	mov.b64 	%rd2694, {%r1881, %r1880};
	xor.b64  	%rd2695, %rd2693, %rd2694;
	shr.u64 	%rd2696, %rd2145, 7;
	xor.b64  	%rd2697, %rd2695, %rd2696;
	add.s64 	%rd2698, %rd2697, %rd2108;
	add.s64 	%rd2699, %rd2698, %rd2441;
	add.s64 	%rd2700, %rd2699, %rd2692;
	add.s64 	%rd2701, %rd2700, %rd2565;
	xor.b64  	%rd2702, %rd2639, %rd2602;
	and.b64  	%rd2703, %rd2676, %rd2702;
	xor.b64  	%rd2704, %rd2703, %rd2602;
	add.s64 	%rd2705, %rd2701, %rd2704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd2676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd2676;
	}
	shf.r.wrap.b32 	%r1884, %r1883, %r1882, 14;
	shf.r.wrap.b32 	%r1885, %r1882, %r1883, 14;
	mov.b64 	%rd2706, {%r1885, %r1884};
	shf.r.wrap.b32 	%r1886, %r1883, %r1882, 18;
	shf.r.wrap.b32 	%r1887, %r1882, %r1883, 18;
	mov.b64 	%rd2707, {%r1887, %r1886};
	xor.b64  	%rd2708, %rd2706, %rd2707;
	shf.l.wrap.b32 	%r1888, %r1882, %r1883, 23;
	shf.l.wrap.b32 	%r1889, %r1883, %r1882, 23;
	mov.b64 	%rd2709, {%r1889, %r1888};
	xor.b64  	%rd2710, %rd2708, %rd2709;
	add.s64 	%rd2711, %rd2705, %rd2710;
	add.s64 	%rd2712, %rd2711, 1977374033974150939;
	add.s64 	%rd2713, %rd2712, %rd2576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd2687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1891}, %rd2687;
	}
	shf.r.wrap.b32 	%r1892, %r1891, %r1890, 28;
	shf.r.wrap.b32 	%r1893, %r1890, %r1891, 28;
	mov.b64 	%rd2714, {%r1893, %r1892};
	shf.l.wrap.b32 	%r1894, %r1890, %r1891, 30;
	shf.l.wrap.b32 	%r1895, %r1891, %r1890, 30;
	mov.b64 	%rd2715, {%r1895, %r1894};
	xor.b64  	%rd2716, %rd2714, %rd2715;
	shf.l.wrap.b32 	%r1896, %r1890, %r1891, 25;
	shf.l.wrap.b32 	%r1897, %r1891, %r1890, 25;
	mov.b64 	%rd2717, {%r1897, %r1896};
	xor.b64  	%rd2718, %rd2716, %rd2717;
	and.b64  	%rd2719, %rd2687, %rd2650;
	or.b64  	%rd2720, %rd2687, %rd2650;
	and.b64  	%rd2721, %rd2720, %rd2613;
	or.b64  	%rd2722, %rd2721, %rd2719;
	add.s64 	%rd2723, %rd2722, %rd2718;
	add.s64 	%rd2724, %rd2723, %rd2712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1898,%dummy}, %rd2663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1899}, %rd2663;
	}
	shf.r.wrap.b32 	%r1900, %r1899, %r1898, 19;
	shf.r.wrap.b32 	%r1901, %r1898, %r1899, 19;
	mov.b64 	%rd2725, {%r1901, %r1900};
	shf.l.wrap.b32 	%r1902, %r1898, %r1899, 3;
	shf.l.wrap.b32 	%r1903, %r1899, %r1898, 3;
	mov.b64 	%rd2726, {%r1903, %r1902};
	xor.b64  	%rd2727, %rd2725, %rd2726;
	shr.u64 	%rd2728, %rd2663, 6;
	xor.b64  	%rd2729, %rd2727, %rd2728;
	shf.r.wrap.b32 	%r1904, %r1561, %r1560, 1;
	shf.r.wrap.b32 	%r1905, %r1560, %r1561, 1;
	mov.b64 	%rd2730, {%r1905, %r1904};
	shf.r.wrap.b32 	%r1906, %r1561, %r1560, 8;
	shf.r.wrap.b32 	%r1907, %r1560, %r1561, 8;
	mov.b64 	%rd2731, {%r1907, %r1906};
	xor.b64  	%rd2732, %rd2730, %rd2731;
	shr.u64 	%rd2733, %rd2182, 7;
	xor.b64  	%rd2734, %rd2732, %rd2733;
	add.s64 	%rd2735, %rd2734, %rd2145;
	add.s64 	%rd2736, %rd2735, %rd2478;
	add.s64 	%rd2737, %rd2736, %rd2729;
	add.s64 	%rd2738, %rd2737, %rd2602;
	xor.b64  	%rd2739, %rd2676, %rd2639;
	and.b64  	%rd2740, %rd2713, %rd2739;
	xor.b64  	%rd2741, %rd2740, %rd2639;
	add.s64 	%rd2742, %rd2738, %rd2741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd2713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd2713;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 14;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 14;
	mov.b64 	%rd2743, {%r1911, %r1910};
	shf.r.wrap.b32 	%r1912, %r1909, %r1908, 18;
	shf.r.wrap.b32 	%r1913, %r1908, %r1909, 18;
	mov.b64 	%rd2744, {%r1913, %r1912};
	xor.b64  	%rd2745, %rd2743, %rd2744;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 23;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 23;
	mov.b64 	%rd2746, {%r1915, %r1914};
	xor.b64  	%rd2747, %rd2745, %rd2746;
	add.s64 	%rd2748, %rd2742, %rd2747;
	add.s64 	%rd2749, %rd2748, 2944078676154940804;
	add.s64 	%rd2750, %rd2749, %rd2613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd2724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd2724;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 28;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 28;
	mov.b64 	%rd2751, {%r1919, %r1918};
	shf.l.wrap.b32 	%r1920, %r1916, %r1917, 30;
	shf.l.wrap.b32 	%r1921, %r1917, %r1916, 30;
	mov.b64 	%rd2752, {%r1921, %r1920};
	xor.b64  	%rd2753, %rd2751, %rd2752;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 25;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 25;
	mov.b64 	%rd2754, {%r1923, %r1922};
	xor.b64  	%rd2755, %rd2753, %rd2754;
	and.b64  	%rd2756, %rd2724, %rd2687;
	or.b64  	%rd2757, %rd2724, %rd2687;
	and.b64  	%rd2758, %rd2757, %rd2650;
	or.b64  	%rd2759, %rd2758, %rd2756;
	add.s64 	%rd2760, %rd2759, %rd2755;
	add.s64 	%rd2761, %rd2760, %rd2749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2700;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 19;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 19;
	mov.b64 	%rd2762, {%r1927, %r1926};
	shf.l.wrap.b32 	%r1928, %r1924, %r1925, 3;
	shf.l.wrap.b32 	%r1929, %r1925, %r1924, 3;
	mov.b64 	%rd2763, {%r1929, %r1928};
	xor.b64  	%rd2764, %rd2762, %rd2763;
	shr.u64 	%rd2765, %rd2700, 6;
	xor.b64  	%rd2766, %rd2764, %rd2765;
	shf.r.wrap.b32 	%r1930, %r1587, %r1586, 1;
	shf.r.wrap.b32 	%r1931, %r1586, %r1587, 1;
	mov.b64 	%rd2767, {%r1931, %r1930};
	shf.r.wrap.b32 	%r1932, %r1587, %r1586, 8;
	shf.r.wrap.b32 	%r1933, %r1586, %r1587, 8;
	mov.b64 	%rd2768, {%r1933, %r1932};
	xor.b64  	%rd2769, %rd2767, %rd2768;
	shr.u64 	%rd2770, %rd2219, 7;
	xor.b64  	%rd2771, %rd2769, %rd2770;
	add.s64 	%rd2772, %rd2771, %rd2182;
	add.s64 	%rd2773, %rd2772, %rd2515;
	add.s64 	%rd2774, %rd2773, %rd2766;
	add.s64 	%rd2775, %rd2774, %rd2639;
	xor.b64  	%rd2776, %rd2713, %rd2676;
	and.b64  	%rd2777, %rd2750, %rd2776;
	xor.b64  	%rd2778, %rd2777, %rd2676;
	add.s64 	%rd2779, %rd2775, %rd2778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1935}, %rd2750;
	}
	shf.r.wrap.b32 	%r1936, %r1935, %r1934, 14;
	shf.r.wrap.b32 	%r1937, %r1934, %r1935, 14;
	mov.b64 	%rd2780, {%r1937, %r1936};
	shf.r.wrap.b32 	%r1938, %r1935, %r1934, 18;
	shf.r.wrap.b32 	%r1939, %r1934, %r1935, 18;
	mov.b64 	%rd2781, {%r1939, %r1938};
	xor.b64  	%rd2782, %rd2780, %rd2781;
	shf.l.wrap.b32 	%r1940, %r1934, %r1935, 23;
	shf.l.wrap.b32 	%r1941, %r1935, %r1934, 23;
	mov.b64 	%rd2783, {%r1941, %r1940};
	xor.b64  	%rd2784, %rd2782, %rd2783;
	add.s64 	%rd2785, %rd2779, %rd2784;
	add.s64 	%rd2786, %rd2785, 3659926193048069267;
	add.s64 	%rd2787, %rd2786, %rd2650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd2761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd2761;
	}
	shf.r.wrap.b32 	%r1944, %r1943, %r1942, 28;
	shf.r.wrap.b32 	%r1945, %r1942, %r1943, 28;
	mov.b64 	%rd2788, {%r1945, %r1944};
	shf.l.wrap.b32 	%r1946, %r1942, %r1943, 30;
	shf.l.wrap.b32 	%r1947, %r1943, %r1942, 30;
	mov.b64 	%rd2789, {%r1947, %r1946};
	xor.b64  	%rd2790, %rd2788, %rd2789;
	shf.l.wrap.b32 	%r1948, %r1942, %r1943, 25;
	shf.l.wrap.b32 	%r1949, %r1943, %r1942, 25;
	mov.b64 	%rd2791, {%r1949, %r1948};
	xor.b64  	%rd2792, %rd2790, %rd2791;
	and.b64  	%rd2793, %rd2761, %rd2724;
	or.b64  	%rd2794, %rd2761, %rd2724;
	and.b64  	%rd2795, %rd2794, %rd2687;
	or.b64  	%rd2796, %rd2795, %rd2793;
	add.s64 	%rd2797, %rd2796, %rd2792;
	add.s64 	%rd2798, %rd2797, %rd2786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd2737;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 19;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 19;
	mov.b64 	%rd2799, {%r1953, %r1952};
	shf.l.wrap.b32 	%r1954, %r1950, %r1951, 3;
	shf.l.wrap.b32 	%r1955, %r1951, %r1950, 3;
	mov.b64 	%rd2800, {%r1955, %r1954};
	xor.b64  	%rd2801, %rd2799, %rd2800;
	shr.u64 	%rd2802, %rd2737, 6;
	xor.b64  	%rd2803, %rd2801, %rd2802;
	shf.r.wrap.b32 	%r1956, %r1613, %r1612, 1;
	shf.r.wrap.b32 	%r1957, %r1612, %r1613, 1;
	mov.b64 	%rd2804, {%r1957, %r1956};
	shf.r.wrap.b32 	%r1958, %r1613, %r1612, 8;
	shf.r.wrap.b32 	%r1959, %r1612, %r1613, 8;
	mov.b64 	%rd2805, {%r1959, %r1958};
	xor.b64  	%rd2806, %rd2804, %rd2805;
	shr.u64 	%rd2807, %rd2256, 7;
	xor.b64  	%rd2808, %rd2806, %rd2807;
	add.s64 	%rd2809, %rd2808, %rd2219;
	add.s64 	%rd2810, %rd2809, %rd2552;
	add.s64 	%rd2811, %rd2810, %rd2803;
	add.s64 	%rd2812, %rd2811, %rd2676;
	xor.b64  	%rd2813, %rd2750, %rd2713;
	and.b64  	%rd2814, %rd2787, %rd2813;
	xor.b64  	%rd2815, %rd2814, %rd2713;
	add.s64 	%rd2816, %rd2812, %rd2815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1960,%dummy}, %rd2787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd2787;
	}
	shf.r.wrap.b32 	%r1962, %r1961, %r1960, 14;
	shf.r.wrap.b32 	%r1963, %r1960, %r1961, 14;
	mov.b64 	%rd2817, {%r1963, %r1962};
	shf.r.wrap.b32 	%r1964, %r1961, %r1960, 18;
	shf.r.wrap.b32 	%r1965, %r1960, %r1961, 18;
	mov.b64 	%rd2818, {%r1965, %r1964};
	xor.b64  	%rd2819, %rd2817, %rd2818;
	shf.l.wrap.b32 	%r1966, %r1960, %r1961, 23;
	shf.l.wrap.b32 	%r1967, %r1961, %r1960, 23;
	mov.b64 	%rd2820, {%r1967, %r1966};
	xor.b64  	%rd2821, %rd2819, %rd2820;
	add.s64 	%rd2822, %rd2816, %rd2821;
	add.s64 	%rd2823, %rd2822, 4368137639120453308;
	add.s64 	%rd2824, %rd2823, %rd2687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1968,%dummy}, %rd2798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd2798;
	}
	shf.r.wrap.b32 	%r1970, %r1969, %r1968, 28;
	shf.r.wrap.b32 	%r1971, %r1968, %r1969, 28;
	mov.b64 	%rd2825, {%r1971, %r1970};
	shf.l.wrap.b32 	%r1972, %r1968, %r1969, 30;
	shf.l.wrap.b32 	%r1973, %r1969, %r1968, 30;
	mov.b64 	%rd2826, {%r1973, %r1972};
	xor.b64  	%rd2827, %rd2825, %rd2826;
	shf.l.wrap.b32 	%r1974, %r1968, %r1969, 25;
	shf.l.wrap.b32 	%r1975, %r1969, %r1968, 25;
	mov.b64 	%rd2828, {%r1975, %r1974};
	xor.b64  	%rd2829, %rd2827, %rd2828;
	and.b64  	%rd2830, %rd2798, %rd2761;
	or.b64  	%rd2831, %rd2798, %rd2761;
	and.b64  	%rd2832, %rd2831, %rd2724;
	or.b64  	%rd2833, %rd2832, %rd2830;
	add.s64 	%rd2834, %rd2833, %rd2829;
	add.s64 	%rd2835, %rd2834, %rd2823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1976,%dummy}, %rd2774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd2774;
	}
	shf.r.wrap.b32 	%r1978, %r1977, %r1976, 19;
	shf.r.wrap.b32 	%r1979, %r1976, %r1977, 19;
	mov.b64 	%rd2836, {%r1979, %r1978};
	shf.l.wrap.b32 	%r1980, %r1976, %r1977, 3;
	shf.l.wrap.b32 	%r1981, %r1977, %r1976, 3;
	mov.b64 	%rd2837, {%r1981, %r1980};
	xor.b64  	%rd2838, %rd2836, %rd2837;
	shr.u64 	%rd2839, %rd2774, 6;
	xor.b64  	%rd2840, %rd2838, %rd2839;
	shf.r.wrap.b32 	%r1982, %r1639, %r1638, 1;
	shf.r.wrap.b32 	%r1983, %r1638, %r1639, 1;
	mov.b64 	%rd2841, {%r1983, %r1982};
	shf.r.wrap.b32 	%r1984, %r1639, %r1638, 8;
	shf.r.wrap.b32 	%r1985, %r1638, %r1639, 8;
	mov.b64 	%rd2842, {%r1985, %r1984};
	xor.b64  	%rd2843, %rd2841, %rd2842;
	shr.u64 	%rd2844, %rd2293, 7;
	xor.b64  	%rd2845, %rd2843, %rd2844;
	add.s64 	%rd2846, %rd2845, %rd2256;
	add.s64 	%rd2847, %rd2846, %rd2589;
	add.s64 	%rd2848, %rd2847, %rd2840;
	add.s64 	%rd2849, %rd2848, %rd2713;
	xor.b64  	%rd2850, %rd2787, %rd2750;
	and.b64  	%rd2851, %rd2824, %rd2850;
	xor.b64  	%rd2852, %rd2851, %rd2750;
	add.s64 	%rd2853, %rd2849, %rd2852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1986,%dummy}, %rd2824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1987}, %rd2824;
	}
	shf.r.wrap.b32 	%r1988, %r1987, %r1986, 14;
	shf.r.wrap.b32 	%r1989, %r1986, %r1987, 14;
	mov.b64 	%rd2854, {%r1989, %r1988};
	shf.r.wrap.b32 	%r1990, %r1987, %r1986, 18;
	shf.r.wrap.b32 	%r1991, %r1986, %r1987, 18;
	mov.b64 	%rd2855, {%r1991, %r1990};
	xor.b64  	%rd2856, %rd2854, %rd2855;
	shf.l.wrap.b32 	%r1992, %r1986, %r1987, 23;
	shf.l.wrap.b32 	%r1993, %r1987, %r1986, 23;
	mov.b64 	%rd2857, {%r1993, %r1992};
	xor.b64  	%rd2858, %rd2856, %rd2857;
	add.s64 	%rd2859, %rd2853, %rd2858;
	add.s64 	%rd2860, %rd2859, 4836135668995329356;
	add.s64 	%rd2861, %rd2860, %rd2724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd2835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd2835;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 28;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 28;
	mov.b64 	%rd2862, {%r1997, %r1996};
	shf.l.wrap.b32 	%r1998, %r1994, %r1995, 30;
	shf.l.wrap.b32 	%r1999, %r1995, %r1994, 30;
	mov.b64 	%rd2863, {%r1999, %r1998};
	xor.b64  	%rd2864, %rd2862, %rd2863;
	shf.l.wrap.b32 	%r2000, %r1994, %r1995, 25;
	shf.l.wrap.b32 	%r2001, %r1995, %r1994, 25;
	mov.b64 	%rd2865, {%r2001, %r2000};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	and.b64  	%rd2867, %rd2835, %rd2798;
	or.b64  	%rd2868, %rd2835, %rd2798;
	and.b64  	%rd2869, %rd2868, %rd2761;
	or.b64  	%rd2870, %rd2869, %rd2867;
	add.s64 	%rd2871, %rd2870, %rd2866;
	add.s64 	%rd2872, %rd2871, %rd2860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd2811;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 19;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 19;
	mov.b64 	%rd2873, {%r2005, %r2004};
	shf.l.wrap.b32 	%r2006, %r2002, %r2003, 3;
	shf.l.wrap.b32 	%r2007, %r2003, %r2002, 3;
	mov.b64 	%rd2874, {%r2007, %r2006};
	xor.b64  	%rd2875, %rd2873, %rd2874;
	shr.u64 	%rd2876, %rd2811, 6;
	xor.b64  	%rd2877, %rd2875, %rd2876;
	shf.r.wrap.b32 	%r2008, %r1665, %r1664, 1;
	shf.r.wrap.b32 	%r2009, %r1664, %r1665, 1;
	mov.b64 	%rd2878, {%r2009, %r2008};
	shf.r.wrap.b32 	%r2010, %r1665, %r1664, 8;
	shf.r.wrap.b32 	%r2011, %r1664, %r1665, 8;
	mov.b64 	%rd2879, {%r2011, %r2010};
	xor.b64  	%rd2880, %rd2878, %rd2879;
	shr.u64 	%rd2881, %rd2330, 7;
	xor.b64  	%rd2882, %rd2880, %rd2881;
	add.s64 	%rd2883, %rd2882, %rd2293;
	add.s64 	%rd2884, %rd2883, %rd2626;
	add.s64 	%rd2885, %rd2884, %rd2877;
	add.s64 	%rd2886, %rd2885, %rd2750;
	xor.b64  	%rd2887, %rd2824, %rd2787;
	and.b64  	%rd2888, %rd2861, %rd2887;
	xor.b64  	%rd2889, %rd2888, %rd2787;
	add.s64 	%rd2890, %rd2886, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2012,%dummy}, %rd2861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2013}, %rd2861;
	}
	shf.r.wrap.b32 	%r2014, %r2013, %r2012, 14;
	shf.r.wrap.b32 	%r2015, %r2012, %r2013, 14;
	mov.b64 	%rd2891, {%r2015, %r2014};
	shf.r.wrap.b32 	%r2016, %r2013, %r2012, 18;
	shf.r.wrap.b32 	%r2017, %r2012, %r2013, 18;
	mov.b64 	%rd2892, {%r2017, %r2016};
	xor.b64  	%rd2893, %rd2891, %rd2892;
	shf.l.wrap.b32 	%r2018, %r2012, %r2013, 23;
	shf.l.wrap.b32 	%r2019, %r2013, %r2012, 23;
	mov.b64 	%rd2894, {%r2019, %r2018};
	xor.b64  	%rd2895, %rd2893, %rd2894;
	add.s64 	%rd2896, %rd2890, %rd2895;
	add.s64 	%rd2897, %rd2896, 5532061633213252278;
	add.s64 	%rd2898, %rd2897, %rd2761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd2872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd2872;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 28;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 28;
	mov.b64 	%rd2899, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 30;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 30;
	mov.b64 	%rd2900, {%r2025, %r2024};
	xor.b64  	%rd2901, %rd2899, %rd2900;
	shf.l.wrap.b32 	%r2026, %r2020, %r2021, 25;
	shf.l.wrap.b32 	%r2027, %r2021, %r2020, 25;
	mov.b64 	%rd2902, {%r2027, %r2026};
	xor.b64  	%rd2903, %rd2901, %rd2902;
	and.b64  	%rd2904, %rd2872, %rd2835;
	or.b64  	%rd2905, %rd2872, %rd2835;
	and.b64  	%rd2906, %rd2905, %rd2798;
	or.b64  	%rd2907, %rd2906, %rd2904;
	add.s64 	%rd2908, %rd2907, %rd2903;
	add.s64 	%rd2909, %rd2908, %rd2897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd2848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd2848;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 19;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 19;
	mov.b64 	%rd2910, {%r2031, %r2030};
	shf.l.wrap.b32 	%r2032, %r2028, %r2029, 3;
	shf.l.wrap.b32 	%r2033, %r2029, %r2028, 3;
	mov.b64 	%rd2911, {%r2033, %r2032};
	xor.b64  	%rd2912, %rd2910, %rd2911;
	shr.u64 	%rd2913, %rd2848, 6;
	xor.b64  	%rd2914, %rd2912, %rd2913;
	shf.r.wrap.b32 	%r2034, %r1691, %r1690, 1;
	shf.r.wrap.b32 	%r2035, %r1690, %r1691, 1;
	mov.b64 	%rd2915, {%r2035, %r2034};
	shf.r.wrap.b32 	%r2036, %r1691, %r1690, 8;
	shf.r.wrap.b32 	%r2037, %r1690, %r1691, 8;
	mov.b64 	%rd2916, {%r2037, %r2036};
	xor.b64  	%rd2917, %rd2915, %rd2916;
	shr.u64 	%rd2918, %rd2367, 7;
	xor.b64  	%rd2919, %rd2917, %rd2918;
	add.s64 	%rd2920, %rd2919, %rd2330;
	add.s64 	%rd2921, %rd2920, %rd2663;
	add.s64 	%rd2922, %rd2921, %rd2914;
	add.s64 	%rd2923, %rd2922, %rd2787;
	xor.b64  	%rd2924, %rd2861, %rd2824;
	and.b64  	%rd2925, %rd2898, %rd2924;
	xor.b64  	%rd2926, %rd2925, %rd2824;
	add.s64 	%rd2927, %rd2923, %rd2926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2038,%dummy}, %rd2898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2039}, %rd2898;
	}
	shf.r.wrap.b32 	%r2040, %r2039, %r2038, 14;
	shf.r.wrap.b32 	%r2041, %r2038, %r2039, 14;
	mov.b64 	%rd2928, {%r2041, %r2040};
	shf.r.wrap.b32 	%r2042, %r2039, %r2038, 18;
	shf.r.wrap.b32 	%r2043, %r2038, %r2039, 18;
	mov.b64 	%rd2929, {%r2043, %r2042};
	xor.b64  	%rd2930, %rd2928, %rd2929;
	shf.l.wrap.b32 	%r2044, %r2038, %r2039, 23;
	shf.l.wrap.b32 	%r2045, %r2039, %r2038, 23;
	mov.b64 	%rd2931, {%r2045, %r2044};
	xor.b64  	%rd2932, %rd2930, %rd2931;
	add.s64 	%rd2933, %rd2927, %rd2932;
	add.s64 	%rd2934, %rd2933, 6448918945643986474;
	add.s64 	%rd2935, %rd2934, %rd2798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2046,%dummy}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2047}, %rd2909;
	}
	shf.r.wrap.b32 	%r2048, %r2047, %r2046, 28;
	shf.r.wrap.b32 	%r2049, %r2046, %r2047, 28;
	mov.b64 	%rd2936, {%r2049, %r2048};
	shf.l.wrap.b32 	%r2050, %r2046, %r2047, 30;
	shf.l.wrap.b32 	%r2051, %r2047, %r2046, 30;
	mov.b64 	%rd2937, {%r2051, %r2050};
	xor.b64  	%rd2938, %rd2936, %rd2937;
	shf.l.wrap.b32 	%r2052, %r2046, %r2047, 25;
	shf.l.wrap.b32 	%r2053, %r2047, %r2046, 25;
	mov.b64 	%rd2939, {%r2053, %r2052};
	xor.b64  	%rd2940, %rd2938, %rd2939;
	and.b64  	%rd2941, %rd2909, %rd2872;
	or.b64  	%rd2942, %rd2909, %rd2872;
	and.b64  	%rd2943, %rd2942, %rd2835;
	or.b64  	%rd2944, %rd2943, %rd2941;
	add.s64 	%rd2945, %rd2944, %rd2940;
	add.s64 	%rd2946, %rd2945, %rd2934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd2885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2055}, %rd2885;
	}
	shf.r.wrap.b32 	%r2056, %r2055, %r2054, 19;
	shf.r.wrap.b32 	%r2057, %r2054, %r2055, 19;
	mov.b64 	%rd2947, {%r2057, %r2056};
	shf.l.wrap.b32 	%r2058, %r2054, %r2055, 3;
	shf.l.wrap.b32 	%r2059, %r2055, %r2054, 3;
	mov.b64 	%rd2948, {%r2059, %r2058};
	xor.b64  	%rd2949, %rd2947, %rd2948;
	shr.u64 	%rd2950, %rd2885, 6;
	xor.b64  	%rd2951, %rd2949, %rd2950;
	shf.r.wrap.b32 	%r2060, %r1717, %r1716, 1;
	shf.r.wrap.b32 	%r2061, %r1716, %r1717, 1;
	mov.b64 	%rd2952, {%r2061, %r2060};
	shf.r.wrap.b32 	%r2062, %r1717, %r1716, 8;
	shf.r.wrap.b32 	%r2063, %r1716, %r1717, 8;
	mov.b64 	%rd2953, {%r2063, %r2062};
	xor.b64  	%rd2954, %rd2952, %rd2953;
	shr.u64 	%rd2955, %rd2404, 7;
	xor.b64  	%rd2956, %rd2954, %rd2955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2064,%dummy}, %rd2935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2065}, %rd2935;
	}
	shf.r.wrap.b32 	%r2066, %r2065, %r2064, 14;
	shf.r.wrap.b32 	%r2067, %r2064, %r2065, 14;
	mov.b64 	%rd2957, {%r2067, %r2066};
	shf.r.wrap.b32 	%r2068, %r2065, %r2064, 18;
	shf.r.wrap.b32 	%r2069, %r2064, %r2065, 18;
	mov.b64 	%rd2958, {%r2069, %r2068};
	xor.b64  	%rd2959, %rd2957, %rd2958;
	shf.l.wrap.b32 	%r2070, %r2064, %r2065, 23;
	shf.l.wrap.b32 	%r2071, %r2065, %r2064, 23;
	mov.b64 	%rd2960, {%r2071, %r2070};
	xor.b64  	%rd2961, %rd2959, %rd2960;
	xor.b64  	%rd2962, %rd2898, %rd2861;
	and.b64  	%rd2963, %rd2935, %rd2962;
	xor.b64  	%rd2964, %rd2963, %rd2861;
	add.s64 	%rd2965, %rd2367, %rd2956;
	add.s64 	%rd2966, %rd2965, %rd2700;
	add.s64 	%rd2967, %rd2966, %rd2951;
	add.s64 	%rd2968, %rd2967, %rd2824;
	add.s64 	%rd2969, %rd2968, %rd2964;
	add.s64 	%rd2970, %rd2969, %rd2961;
	add.s64 	%rd2971, %rd2970, 6902733635092675308;
	add.s64 	%rd2972, %rd2971, %rd2835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2072,%dummy}, %rd2946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2073}, %rd2946;
	}
	shf.r.wrap.b32 	%r2074, %r2073, %r2072, 28;
	shf.r.wrap.b32 	%r2075, %r2072, %r2073, 28;
	mov.b64 	%rd2973, {%r2075, %r2074};
	shf.l.wrap.b32 	%r2076, %r2072, %r2073, 30;
	shf.l.wrap.b32 	%r2077, %r2073, %r2072, 30;
	mov.b64 	%rd2974, {%r2077, %r2076};
	xor.b64  	%rd2975, %rd2973, %rd2974;
	shf.l.wrap.b32 	%r2078, %r2072, %r2073, 25;
	shf.l.wrap.b32 	%r2079, %r2073, %r2072, 25;
	mov.b64 	%rd2976, {%r2079, %r2078};
	xor.b64  	%rd2977, %rd2975, %rd2976;
	and.b64  	%rd2978, %rd2946, %rd2909;
	or.b64  	%rd2979, %rd2946, %rd2909;
	and.b64  	%rd2980, %rd2979, %rd2872;
	or.b64  	%rd2981, %rd2980, %rd2978;
	add.s64 	%rd2982, %rd2981, %rd2977;
	add.s64 	%rd2983, %rd2982, %rd2971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd2922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd2922;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 19;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 19;
	mov.b64 	%rd2984, {%r2083, %r2082};
	shf.l.wrap.b32 	%r2084, %r2080, %r2081, 3;
	shf.l.wrap.b32 	%r2085, %r2081, %r2080, 3;
	mov.b64 	%rd2985, {%r2085, %r2084};
	xor.b64  	%rd2986, %rd2984, %rd2985;
	shr.u64 	%rd2987, %rd2922, 6;
	xor.b64  	%rd2988, %rd2986, %rd2987;
	shf.r.wrap.b32 	%r2086, %r1743, %r1742, 1;
	shf.r.wrap.b32 	%r2087, %r1742, %r1743, 1;
	mov.b64 	%rd2989, {%r2087, %r2086};
	shf.r.wrap.b32 	%r2088, %r1743, %r1742, 8;
	shf.r.wrap.b32 	%r2089, %r1742, %r1743, 8;
	mov.b64 	%rd2990, {%r2089, %r2088};
	xor.b64  	%rd2991, %rd2989, %rd2990;
	shr.u64 	%rd2992, %rd2441, 7;
	xor.b64  	%rd2993, %rd2991, %rd2992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd2972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd2972;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 14;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 14;
	mov.b64 	%rd2994, {%r2093, %r2092};
	shf.r.wrap.b32 	%r2094, %r2091, %r2090, 18;
	shf.r.wrap.b32 	%r2095, %r2090, %r2091, 18;
	mov.b64 	%rd2995, {%r2095, %r2094};
	xor.b64  	%rd2996, %rd2994, %rd2995;
	shf.l.wrap.b32 	%r2096, %r2090, %r2091, 23;
	shf.l.wrap.b32 	%r2097, %r2091, %r2090, 23;
	mov.b64 	%rd2997, {%r2097, %r2096};
	xor.b64  	%rd2998, %rd2996, %rd2997;
	xor.b64  	%rd2999, %rd2935, %rd2898;
	and.b64  	%rd3000, %rd2972, %rd2999;
	xor.b64  	%rd3001, %rd3000, %rd2898;
	add.s64 	%rd3002, %rd2404, %rd2993;
	add.s64 	%rd3003, %rd3002, %rd2737;
	add.s64 	%rd3004, %rd3003, %rd2988;
	add.s64 	%rd3005, %rd3004, %rd2861;
	add.s64 	%rd3006, %rd3005, %rd3001;
	add.s64 	%rd3007, %rd3006, %rd2998;
	add.s64 	%rd3008, %rd3007, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd2983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd2983;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 28;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 28;
	mov.b64 	%rd3009, {%r2101, %r2100};
	shf.l.wrap.b32 	%r2102, %r2098, %r2099, 30;
	shf.l.wrap.b32 	%r2103, %r2099, %r2098, 30;
	mov.b64 	%rd3010, {%r2103, %r2102};
	xor.b64  	%rd3011, %rd3009, %rd3010;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 25;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 25;
	mov.b64 	%rd3012, {%r2105, %r2104};
	xor.b64  	%rd3013, %rd3011, %rd3012;
	and.b64  	%rd3014, %rd2983, %rd2946;
	or.b64  	%rd3015, %rd2983, %rd2946;
	and.b64  	%rd3016, %rd3015, %rd2909;
	or.b64  	%rd3017, %rd3016, %rd3014;
	add.s64 	%rd3018, %rd3013, %rd279;
	add.s64 	%rd3019, %rd3018, %rd3017;
	add.s64 	%rd3020, %rd3019, %rd3008;
	st.local.u64 	[%rd3+8], %rd3020;
	add.s64 	%rd3021, %rd2983, %rd285;
	st.local.u64 	[%rd3+16], %rd3021;
	add.s64 	%rd3022, %rd2946, %rd288;
	st.local.u64 	[%rd3+24], %rd3022;
	add.s64 	%rd3023, %rd2909, %rd277;
	st.local.u64 	[%rd3+32], %rd3023;
	add.s64 	%rd3024, %rd2872, %rd263;
	add.s64 	%rd3025, %rd3024, %rd3008;
	st.local.u64 	[%rd3+40], %rd3025;
	add.s64 	%rd3026, %rd2972, %rd271;
	st.local.u64 	[%rd3+48], %rd3026;
	add.s64 	%rd3027, %rd2935, %rd270;
	st.local.u64 	[%rd3+56], %rd3027;
	add.s64 	%rd3028, %rd2898, %rd261;
	st.local.u64 	[%rd3+64], %rd3028;
	cvt.u64.u32 	%rd3029, %r24;
	add.s64 	%rd12045, %rd12045, %rd3029;
	add.u64 	%rd3030, %SP, 16;
	add.s64 	%rd12027, %rd3030, %rd3029;
	sub.s32 	%r8268, %r8268, %r24;

$L__BB0_23:
	setp.lt.u32 	%p22, %r8268, 128;
	@%p22 bra 	$L__BB0_28;

$L__BB0_24:
	and.b64  	%rd3031, %rd12027, 7;
	setp.eq.s64 	%p23, %rd3031, 0;
	@%p23 bra 	$L__BB0_26;

	ld.local.u8 	%rd3032, [%rd12045];
	shl.b64 	%rd3033, %rd3032, 56;
	ld.local.u8 	%rd3034, [%rd12045+1];
	shl.b64 	%rd3035, %rd3034, 48;
	or.b64  	%rd3036, %rd3035, %rd3033;
	ld.local.u8 	%rd3037, [%rd12045+2];
	shl.b64 	%rd3038, %rd3037, 40;
	or.b64  	%rd3039, %rd3036, %rd3038;
	ld.local.u8 	%rd3040, [%rd12045+3];
	shl.b64 	%rd3041, %rd3040, 32;
	or.b64  	%rd3042, %rd3039, %rd3041;
	ld.local.u8 	%r2106, [%rd12045+4];
	mul.wide.u32 	%rd3043, %r2106, 16777216;
	or.b64  	%rd3044, %rd3042, %rd3043;
	ld.local.u8 	%r2107, [%rd12045+5];
	mul.wide.u32 	%rd3045, %r2107, 65536;
	or.b64  	%rd3046, %rd3044, %rd3045;
	ld.local.u8 	%r2108, [%rd12045+6];
	mul.wide.u32 	%rd3047, %r2108, 256;
	or.b64  	%rd3048, %rd3046, %rd3047;
	ld.local.u8 	%rd3049, [%rd12045+7];
	or.b64  	%rd12044, %rd3048, %rd3049;
	ld.local.u8 	%rd3050, [%rd12045+8];
	shl.b64 	%rd3051, %rd3050, 56;
	ld.local.u8 	%rd3052, [%rd12045+9];
	shl.b64 	%rd3053, %rd3052, 48;
	or.b64  	%rd3054, %rd3053, %rd3051;
	ld.local.u8 	%rd3055, [%rd12045+10];
	shl.b64 	%rd3056, %rd3055, 40;
	or.b64  	%rd3057, %rd3054, %rd3056;
	ld.local.u8 	%rd3058, [%rd12045+11];
	shl.b64 	%rd3059, %rd3058, 32;
	or.b64  	%rd3060, %rd3057, %rd3059;
	ld.local.u8 	%r2109, [%rd12045+12];
	mul.wide.u32 	%rd3061, %r2109, 16777216;
	or.b64  	%rd3062, %rd3060, %rd3061;
	ld.local.u8 	%r2110, [%rd12045+13];
	mul.wide.u32 	%rd3063, %r2110, 65536;
	or.b64  	%rd3064, %rd3062, %rd3063;
	ld.local.u8 	%r2111, [%rd12045+14];
	mul.wide.u32 	%rd3065, %r2111, 256;
	or.b64  	%rd3066, %rd3064, %rd3065;
	ld.local.u8 	%rd3067, [%rd12045+15];
	or.b64  	%rd12043, %rd3066, %rd3067;
	ld.local.u8 	%rd3068, [%rd12045+16];
	shl.b64 	%rd3069, %rd3068, 56;
	ld.local.u8 	%rd3070, [%rd12045+17];
	shl.b64 	%rd3071, %rd3070, 48;
	or.b64  	%rd3072, %rd3071, %rd3069;
	ld.local.u8 	%rd3073, [%rd12045+18];
	shl.b64 	%rd3074, %rd3073, 40;
	or.b64  	%rd3075, %rd3072, %rd3074;
	ld.local.u8 	%rd3076, [%rd12045+19];
	shl.b64 	%rd3077, %rd3076, 32;
	or.b64  	%rd3078, %rd3075, %rd3077;
	ld.local.u8 	%r2112, [%rd12045+20];
	mul.wide.u32 	%rd3079, %r2112, 16777216;
	or.b64  	%rd3080, %rd3078, %rd3079;
	ld.local.u8 	%r2113, [%rd12045+21];
	mul.wide.u32 	%rd3081, %r2113, 65536;
	or.b64  	%rd3082, %rd3080, %rd3081;
	ld.local.u8 	%r2114, [%rd12045+22];
	mul.wide.u32 	%rd3083, %r2114, 256;
	or.b64  	%rd3084, %rd3082, %rd3083;
	ld.local.u8 	%rd3085, [%rd12045+23];
	or.b64  	%rd12042, %rd3084, %rd3085;
	ld.local.u8 	%rd3086, [%rd12045+24];
	shl.b64 	%rd3087, %rd3086, 56;
	ld.local.u8 	%rd3088, [%rd12045+25];
	shl.b64 	%rd3089, %rd3088, 48;
	or.b64  	%rd3090, %rd3089, %rd3087;
	ld.local.u8 	%rd3091, [%rd12045+26];
	shl.b64 	%rd3092, %rd3091, 40;
	or.b64  	%rd3093, %rd3090, %rd3092;
	ld.local.u8 	%rd3094, [%rd12045+27];
	shl.b64 	%rd3095, %rd3094, 32;
	or.b64  	%rd3096, %rd3093, %rd3095;
	ld.local.u8 	%r2115, [%rd12045+28];
	mul.wide.u32 	%rd3097, %r2115, 16777216;
	or.b64  	%rd3098, %rd3096, %rd3097;
	ld.local.u8 	%r2116, [%rd12045+29];
	mul.wide.u32 	%rd3099, %r2116, 65536;
	or.b64  	%rd3100, %rd3098, %rd3099;
	ld.local.u8 	%r2117, [%rd12045+30];
	mul.wide.u32 	%rd3101, %r2117, 256;
	or.b64  	%rd3102, %rd3100, %rd3101;
	ld.local.u8 	%rd3103, [%rd12045+31];
	or.b64  	%rd12041, %rd3102, %rd3103;
	ld.local.u8 	%rd3104, [%rd12045+32];
	shl.b64 	%rd3105, %rd3104, 56;
	ld.local.u8 	%rd3106, [%rd12045+33];
	shl.b64 	%rd3107, %rd3106, 48;
	or.b64  	%rd3108, %rd3107, %rd3105;
	ld.local.u8 	%rd3109, [%rd12045+34];
	shl.b64 	%rd3110, %rd3109, 40;
	or.b64  	%rd3111, %rd3108, %rd3110;
	ld.local.u8 	%rd3112, [%rd12045+35];
	shl.b64 	%rd3113, %rd3112, 32;
	or.b64  	%rd3114, %rd3111, %rd3113;
	ld.local.u8 	%r2118, [%rd12045+36];
	mul.wide.u32 	%rd3115, %r2118, 16777216;
	or.b64  	%rd3116, %rd3114, %rd3115;
	ld.local.u8 	%r2119, [%rd12045+37];
	mul.wide.u32 	%rd3117, %r2119, 65536;
	or.b64  	%rd3118, %rd3116, %rd3117;
	ld.local.u8 	%r2120, [%rd12045+38];
	mul.wide.u32 	%rd3119, %r2120, 256;
	or.b64  	%rd3120, %rd3118, %rd3119;
	ld.local.u8 	%rd3121, [%rd12045+39];
	or.b64  	%rd12040, %rd3120, %rd3121;
	ld.local.u8 	%rd3122, [%rd12045+40];
	shl.b64 	%rd3123, %rd3122, 56;
	ld.local.u8 	%rd3124, [%rd12045+41];
	shl.b64 	%rd3125, %rd3124, 48;
	or.b64  	%rd3126, %rd3125, %rd3123;
	ld.local.u8 	%rd3127, [%rd12045+42];
	shl.b64 	%rd3128, %rd3127, 40;
	or.b64  	%rd3129, %rd3126, %rd3128;
	ld.local.u8 	%rd3130, [%rd12045+43];
	shl.b64 	%rd3131, %rd3130, 32;
	or.b64  	%rd3132, %rd3129, %rd3131;
	ld.local.u8 	%r2121, [%rd12045+44];
	mul.wide.u32 	%rd3133, %r2121, 16777216;
	or.b64  	%rd3134, %rd3132, %rd3133;
	ld.local.u8 	%r2122, [%rd12045+45];
	mul.wide.u32 	%rd3135, %r2122, 65536;
	or.b64  	%rd3136, %rd3134, %rd3135;
	ld.local.u8 	%r2123, [%rd12045+46];
	mul.wide.u32 	%rd3137, %r2123, 256;
	or.b64  	%rd3138, %rd3136, %rd3137;
	ld.local.u8 	%rd3139, [%rd12045+47];
	or.b64  	%rd12039, %rd3138, %rd3139;
	ld.local.u8 	%rd3140, [%rd12045+48];
	shl.b64 	%rd3141, %rd3140, 56;
	ld.local.u8 	%rd3142, [%rd12045+49];
	shl.b64 	%rd3143, %rd3142, 48;
	or.b64  	%rd3144, %rd3143, %rd3141;
	ld.local.u8 	%rd3145, [%rd12045+50];
	shl.b64 	%rd3146, %rd3145, 40;
	or.b64  	%rd3147, %rd3144, %rd3146;
	ld.local.u8 	%rd3148, [%rd12045+51];
	shl.b64 	%rd3149, %rd3148, 32;
	or.b64  	%rd3150, %rd3147, %rd3149;
	ld.local.u8 	%r2124, [%rd12045+52];
	mul.wide.u32 	%rd3151, %r2124, 16777216;
	or.b64  	%rd3152, %rd3150, %rd3151;
	ld.local.u8 	%r2125, [%rd12045+53];
	mul.wide.u32 	%rd3153, %r2125, 65536;
	or.b64  	%rd3154, %rd3152, %rd3153;
	ld.local.u8 	%r2126, [%rd12045+54];
	mul.wide.u32 	%rd3155, %r2126, 256;
	or.b64  	%rd3156, %rd3154, %rd3155;
	ld.local.u8 	%rd3157, [%rd12045+55];
	or.b64  	%rd12038, %rd3156, %rd3157;
	ld.local.u8 	%rd3158, [%rd12045+56];
	shl.b64 	%rd3159, %rd3158, 56;
	ld.local.u8 	%rd3160, [%rd12045+57];
	shl.b64 	%rd3161, %rd3160, 48;
	or.b64  	%rd3162, %rd3161, %rd3159;
	ld.local.u8 	%rd3163, [%rd12045+58];
	shl.b64 	%rd3164, %rd3163, 40;
	or.b64  	%rd3165, %rd3162, %rd3164;
	ld.local.u8 	%rd3166, [%rd12045+59];
	shl.b64 	%rd3167, %rd3166, 32;
	or.b64  	%rd3168, %rd3165, %rd3167;
	ld.local.u8 	%r2127, [%rd12045+60];
	mul.wide.u32 	%rd3169, %r2127, 16777216;
	or.b64  	%rd3170, %rd3168, %rd3169;
	ld.local.u8 	%r2128, [%rd12045+61];
	mul.wide.u32 	%rd3171, %r2128, 65536;
	or.b64  	%rd3172, %rd3170, %rd3171;
	ld.local.u8 	%r2129, [%rd12045+62];
	mul.wide.u32 	%rd3173, %r2129, 256;
	or.b64  	%rd3174, %rd3172, %rd3173;
	ld.local.u8 	%rd3175, [%rd12045+63];
	or.b64  	%rd12037, %rd3174, %rd3175;
	ld.local.u8 	%rd3176, [%rd12045+64];
	shl.b64 	%rd3177, %rd3176, 56;
	ld.local.u8 	%rd3178, [%rd12045+65];
	shl.b64 	%rd3179, %rd3178, 48;
	or.b64  	%rd3180, %rd3179, %rd3177;
	ld.local.u8 	%rd3181, [%rd12045+66];
	shl.b64 	%rd3182, %rd3181, 40;
	or.b64  	%rd3183, %rd3180, %rd3182;
	ld.local.u8 	%rd3184, [%rd12045+67];
	shl.b64 	%rd3185, %rd3184, 32;
	or.b64  	%rd3186, %rd3183, %rd3185;
	ld.local.u8 	%r2130, [%rd12045+68];
	mul.wide.u32 	%rd3187, %r2130, 16777216;
	or.b64  	%rd3188, %rd3186, %rd3187;
	ld.local.u8 	%r2131, [%rd12045+69];
	mul.wide.u32 	%rd3189, %r2131, 65536;
	or.b64  	%rd3190, %rd3188, %rd3189;
	ld.local.u8 	%r2132, [%rd12045+70];
	mul.wide.u32 	%rd3191, %r2132, 256;
	or.b64  	%rd3192, %rd3190, %rd3191;
	ld.local.u8 	%rd3193, [%rd12045+71];
	or.b64  	%rd12036, %rd3192, %rd3193;
	ld.local.u8 	%rd3194, [%rd12045+72];
	shl.b64 	%rd3195, %rd3194, 56;
	ld.local.u8 	%rd3196, [%rd12045+73];
	shl.b64 	%rd3197, %rd3196, 48;
	or.b64  	%rd3198, %rd3197, %rd3195;
	ld.local.u8 	%rd3199, [%rd12045+74];
	shl.b64 	%rd3200, %rd3199, 40;
	or.b64  	%rd3201, %rd3198, %rd3200;
	ld.local.u8 	%rd3202, [%rd12045+75];
	shl.b64 	%rd3203, %rd3202, 32;
	or.b64  	%rd3204, %rd3201, %rd3203;
	ld.local.u8 	%r2133, [%rd12045+76];
	mul.wide.u32 	%rd3205, %r2133, 16777216;
	or.b64  	%rd3206, %rd3204, %rd3205;
	ld.local.u8 	%r2134, [%rd12045+77];
	mul.wide.u32 	%rd3207, %r2134, 65536;
	or.b64  	%rd3208, %rd3206, %rd3207;
	ld.local.u8 	%r2135, [%rd12045+78];
	mul.wide.u32 	%rd3209, %r2135, 256;
	or.b64  	%rd3210, %rd3208, %rd3209;
	ld.local.u8 	%rd3211, [%rd12045+79];
	or.b64  	%rd12035, %rd3210, %rd3211;
	ld.local.u8 	%rd3212, [%rd12045+80];
	shl.b64 	%rd3213, %rd3212, 56;
	ld.local.u8 	%rd3214, [%rd12045+81];
	shl.b64 	%rd3215, %rd3214, 48;
	or.b64  	%rd3216, %rd3215, %rd3213;
	ld.local.u8 	%rd3217, [%rd12045+82];
	shl.b64 	%rd3218, %rd3217, 40;
	or.b64  	%rd3219, %rd3216, %rd3218;
	ld.local.u8 	%rd3220, [%rd12045+83];
	shl.b64 	%rd3221, %rd3220, 32;
	or.b64  	%rd3222, %rd3219, %rd3221;
	ld.local.u8 	%r2136, [%rd12045+84];
	mul.wide.u32 	%rd3223, %r2136, 16777216;
	or.b64  	%rd3224, %rd3222, %rd3223;
	ld.local.u8 	%r2137, [%rd12045+85];
	mul.wide.u32 	%rd3225, %r2137, 65536;
	or.b64  	%rd3226, %rd3224, %rd3225;
	ld.local.u8 	%r2138, [%rd12045+86];
	mul.wide.u32 	%rd3227, %r2138, 256;
	or.b64  	%rd3228, %rd3226, %rd3227;
	ld.local.u8 	%rd3229, [%rd12045+87];
	or.b64  	%rd12034, %rd3228, %rd3229;
	ld.local.u8 	%rd3230, [%rd12045+88];
	shl.b64 	%rd3231, %rd3230, 56;
	ld.local.u8 	%rd3232, [%rd12045+89];
	shl.b64 	%rd3233, %rd3232, 48;
	or.b64  	%rd3234, %rd3233, %rd3231;
	ld.local.u8 	%rd3235, [%rd12045+90];
	shl.b64 	%rd3236, %rd3235, 40;
	or.b64  	%rd3237, %rd3234, %rd3236;
	ld.local.u8 	%rd3238, [%rd12045+91];
	shl.b64 	%rd3239, %rd3238, 32;
	or.b64  	%rd3240, %rd3237, %rd3239;
	ld.local.u8 	%r2139, [%rd12045+92];
	mul.wide.u32 	%rd3241, %r2139, 16777216;
	or.b64  	%rd3242, %rd3240, %rd3241;
	ld.local.u8 	%r2140, [%rd12045+93];
	mul.wide.u32 	%rd3243, %r2140, 65536;
	or.b64  	%rd3244, %rd3242, %rd3243;
	ld.local.u8 	%r2141, [%rd12045+94];
	mul.wide.u32 	%rd3245, %r2141, 256;
	or.b64  	%rd3246, %rd3244, %rd3245;
	ld.local.u8 	%rd3247, [%rd12045+95];
	or.b64  	%rd12033, %rd3246, %rd3247;
	ld.local.u8 	%rd3248, [%rd12045+96];
	shl.b64 	%rd3249, %rd3248, 56;
	ld.local.u8 	%rd3250, [%rd12045+97];
	shl.b64 	%rd3251, %rd3250, 48;
	or.b64  	%rd3252, %rd3251, %rd3249;
	ld.local.u8 	%rd3253, [%rd12045+98];
	shl.b64 	%rd3254, %rd3253, 40;
	or.b64  	%rd3255, %rd3252, %rd3254;
	ld.local.u8 	%rd3256, [%rd12045+99];
	shl.b64 	%rd3257, %rd3256, 32;
	or.b64  	%rd3258, %rd3255, %rd3257;
	ld.local.u8 	%r2142, [%rd12045+100];
	mul.wide.u32 	%rd3259, %r2142, 16777216;
	or.b64  	%rd3260, %rd3258, %rd3259;
	ld.local.u8 	%r2143, [%rd12045+101];
	mul.wide.u32 	%rd3261, %r2143, 65536;
	or.b64  	%rd3262, %rd3260, %rd3261;
	ld.local.u8 	%r2144, [%rd12045+102];
	mul.wide.u32 	%rd3263, %r2144, 256;
	or.b64  	%rd3264, %rd3262, %rd3263;
	ld.local.u8 	%rd3265, [%rd12045+103];
	or.b64  	%rd12032, %rd3264, %rd3265;
	ld.local.u8 	%rd3266, [%rd12045+104];
	shl.b64 	%rd3267, %rd3266, 56;
	ld.local.u8 	%rd3268, [%rd12045+105];
	shl.b64 	%rd3269, %rd3268, 48;
	or.b64  	%rd3270, %rd3269, %rd3267;
	ld.local.u8 	%rd3271, [%rd12045+106];
	shl.b64 	%rd3272, %rd3271, 40;
	or.b64  	%rd3273, %rd3270, %rd3272;
	ld.local.u8 	%rd3274, [%rd12045+107];
	shl.b64 	%rd3275, %rd3274, 32;
	or.b64  	%rd3276, %rd3273, %rd3275;
	ld.local.u8 	%r2145, [%rd12045+108];
	mul.wide.u32 	%rd3277, %r2145, 16777216;
	or.b64  	%rd3278, %rd3276, %rd3277;
	ld.local.u8 	%r2146, [%rd12045+109];
	mul.wide.u32 	%rd3279, %r2146, 65536;
	or.b64  	%rd3280, %rd3278, %rd3279;
	ld.local.u8 	%r2147, [%rd12045+110];
	mul.wide.u32 	%rd3281, %r2147, 256;
	or.b64  	%rd3282, %rd3280, %rd3281;
	ld.local.u8 	%rd3283, [%rd12045+111];
	or.b64  	%rd12031, %rd3282, %rd3283;
	ld.local.u8 	%rd3284, [%rd12045+112];
	shl.b64 	%rd3285, %rd3284, 56;
	ld.local.u8 	%rd3286, [%rd12045+113];
	shl.b64 	%rd3287, %rd3286, 48;
	or.b64  	%rd3288, %rd3287, %rd3285;
	ld.local.u8 	%rd3289, [%rd12045+114];
	shl.b64 	%rd3290, %rd3289, 40;
	or.b64  	%rd3291, %rd3288, %rd3290;
	ld.local.u8 	%rd3292, [%rd12045+115];
	shl.b64 	%rd3293, %rd3292, 32;
	or.b64  	%rd3294, %rd3291, %rd3293;
	ld.local.u8 	%r2148, [%rd12045+116];
	mul.wide.u32 	%rd3295, %r2148, 16777216;
	or.b64  	%rd3296, %rd3294, %rd3295;
	ld.local.u8 	%r2149, [%rd12045+117];
	mul.wide.u32 	%rd3297, %r2149, 65536;
	or.b64  	%rd3298, %rd3296, %rd3297;
	ld.local.u8 	%r2150, [%rd12045+118];
	mul.wide.u32 	%rd3299, %r2150, 256;
	or.b64  	%rd3300, %rd3298, %rd3299;
	ld.local.u8 	%rd3301, [%rd12045+119];
	or.b64  	%rd12030, %rd3300, %rd3301;
	ld.local.u8 	%rd3302, [%rd12045+120];
	ld.local.u8 	%rd3303, [%rd12045+121];
	ld.local.u8 	%rd3304, [%rd12045+122];
	ld.local.u8 	%rd3305, [%rd12045+123];
	ld.local.u8 	%r2151, [%rd12045+124];
	mul.wide.u32 	%rd3306, %r2151, 16777216;
	ld.local.u8 	%r2152, [%rd12045+125];
	mul.wide.u32 	%rd3307, %r2152, 65536;
	ld.local.u8 	%r2153, [%rd12045+126];
	mul.wide.u32 	%rd3308, %r2153, 256;
	ld.local.u8 	%rd3309, [%rd12045+127];
	shl.b64 	%rd3310, %rd3303, 48;
	shl.b64 	%rd3311, %rd3302, 56;
	shl.b64 	%rd3312, %rd3304, 40;
	or.b64  	%rd3313, %rd3310, %rd3311;
	shl.b64 	%rd3314, %rd3305, 32;
	or.b64  	%rd3315, %rd3313, %rd3312;
	or.b64  	%rd3316, %rd3315, %rd3314;
	or.b64  	%rd3317, %rd3316, %rd3306;
	or.b64  	%rd3318, %rd3317, %rd3307;
	or.b64  	%rd3319, %rd3318, %rd3308;
	or.b64  	%rd12029, %rd3319, %rd3309;
	bra.uni 	$L__BB0_27;

$L__BB0_26:
	ld.local.u64 	%rd3320, [%rd12045];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2154, %temp}, %rd3320;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2155}, %rd3320;
	}
	mov.u32 	%r2156, 291;
	mov.u32 	%r2157, 0;
	prmt.b32 	%r2158, %r2154, %r2157, %r2156;
	prmt.b32 	%r2159, %r2155, %r2157, %r2156;
	mov.b64 	%rd12044, {%r2159, %r2158};
	ld.local.u64 	%rd3321, [%rd12045+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2160, %temp}, %rd3321;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2161}, %rd3321;
	}
	prmt.b32 	%r2162, %r2160, %r2157, %r2156;
	prmt.b32 	%r2163, %r2161, %r2157, %r2156;
	mov.b64 	%rd12043, {%r2163, %r2162};
	ld.local.u64 	%rd3322, [%rd12045+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2164, %temp}, %rd3322;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2165}, %rd3322;
	}
	prmt.b32 	%r2166, %r2164, %r2157, %r2156;
	prmt.b32 	%r2167, %r2165, %r2157, %r2156;
	mov.b64 	%rd12042, {%r2167, %r2166};
	ld.local.u64 	%rd3323, [%rd12045+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2168, %temp}, %rd3323;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2169}, %rd3323;
	}
	prmt.b32 	%r2170, %r2168, %r2157, %r2156;
	prmt.b32 	%r2171, %r2169, %r2157, %r2156;
	mov.b64 	%rd12041, {%r2171, %r2170};
	ld.local.u64 	%rd3324, [%rd12045+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2172, %temp}, %rd3324;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2173}, %rd3324;
	}
	prmt.b32 	%r2174, %r2172, %r2157, %r2156;
	prmt.b32 	%r2175, %r2173, %r2157, %r2156;
	mov.b64 	%rd12040, {%r2175, %r2174};
	ld.local.u64 	%rd3325, [%rd12045+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2176, %temp}, %rd3325;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2177}, %rd3325;
	}
	prmt.b32 	%r2178, %r2176, %r2157, %r2156;
	prmt.b32 	%r2179, %r2177, %r2157, %r2156;
	mov.b64 	%rd12039, {%r2179, %r2178};
	ld.local.u64 	%rd3326, [%rd12045+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2180, %temp}, %rd3326;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2181}, %rd3326;
	}
	prmt.b32 	%r2182, %r2180, %r2157, %r2156;
	prmt.b32 	%r2183, %r2181, %r2157, %r2156;
	mov.b64 	%rd12038, {%r2183, %r2182};
	ld.local.u64 	%rd3327, [%rd12045+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2184, %temp}, %rd3327;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2185}, %rd3327;
	}
	prmt.b32 	%r2186, %r2184, %r2157, %r2156;
	prmt.b32 	%r2187, %r2185, %r2157, %r2156;
	mov.b64 	%rd12037, {%r2187, %r2186};
	ld.local.u64 	%rd3328, [%rd12045+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2188, %temp}, %rd3328;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2189}, %rd3328;
	}
	prmt.b32 	%r2190, %r2188, %r2157, %r2156;
	prmt.b32 	%r2191, %r2189, %r2157, %r2156;
	mov.b64 	%rd12036, {%r2191, %r2190};
	ld.local.u64 	%rd3329, [%rd12045+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2192, %temp}, %rd3329;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2193}, %rd3329;
	}
	prmt.b32 	%r2194, %r2192, %r2157, %r2156;
	prmt.b32 	%r2195, %r2193, %r2157, %r2156;
	mov.b64 	%rd12035, {%r2195, %r2194};
	ld.local.u64 	%rd3330, [%rd12045+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2196, %temp}, %rd3330;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2197}, %rd3330;
	}
	prmt.b32 	%r2198, %r2196, %r2157, %r2156;
	prmt.b32 	%r2199, %r2197, %r2157, %r2156;
	mov.b64 	%rd12034, {%r2199, %r2198};
	ld.local.u64 	%rd3331, [%rd12045+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2200, %temp}, %rd3331;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2201}, %rd3331;
	}
	prmt.b32 	%r2202, %r2200, %r2157, %r2156;
	prmt.b32 	%r2203, %r2201, %r2157, %r2156;
	mov.b64 	%rd12033, {%r2203, %r2202};
	ld.local.u64 	%rd3332, [%rd12045+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2204, %temp}, %rd3332;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2205}, %rd3332;
	}
	prmt.b32 	%r2206, %r2204, %r2157, %r2156;
	prmt.b32 	%r2207, %r2205, %r2157, %r2156;
	mov.b64 	%rd12032, {%r2207, %r2206};
	ld.local.u64 	%rd3333, [%rd12045+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2208, %temp}, %rd3333;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2209}, %rd3333;
	}
	prmt.b32 	%r2210, %r2208, %r2157, %r2156;
	prmt.b32 	%r2211, %r2209, %r2157, %r2156;
	mov.b64 	%rd12031, {%r2211, %r2210};
	ld.local.u64 	%rd3334, [%rd12045+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2212, %temp}, %rd3334;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2213}, %rd3334;
	}
	prmt.b32 	%r2214, %r2212, %r2157, %r2156;
	prmt.b32 	%r2215, %r2213, %r2157, %r2156;
	mov.b64 	%rd12030, {%r2215, %r2214};
	ld.local.u64 	%rd3335, [%rd12045+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2216, %temp}, %rd3335;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2217}, %rd3335;
	}
	prmt.b32 	%r2218, %r2216, %r2157, %r2156;
	prmt.b32 	%r2219, %r2217, %r2157, %r2156;
	mov.b64 	%rd12029, {%r2219, %r2218};

$L__BB0_27:
	ld.local.u64 	%rd3336, [%rd3+64];
	add.s64 	%rd3337, %rd12044, %rd3336;
	ld.local.u64 	%rd3338, [%rd3+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2220,%dummy}, %rd3338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2221}, %rd3338;
	}
	shf.r.wrap.b32 	%r2222, %r2221, %r2220, 14;
	shf.r.wrap.b32 	%r2223, %r2220, %r2221, 14;
	mov.b64 	%rd3339, {%r2223, %r2222};
	shf.r.wrap.b32 	%r2224, %r2221, %r2220, 18;
	shf.r.wrap.b32 	%r2225, %r2220, %r2221, 18;
	mov.b64 	%rd3340, {%r2225, %r2224};
	xor.b64  	%rd3341, %rd3339, %rd3340;
	shf.l.wrap.b32 	%r2226, %r2220, %r2221, 23;
	shf.l.wrap.b32 	%r2227, %r2221, %r2220, 23;
	mov.b64 	%rd3342, {%r2227, %r2226};
	xor.b64  	%rd3343, %rd3341, %rd3342;
	add.s64 	%rd3344, %rd3337, %rd3343;
	ld.local.u64 	%rd3345, [%rd3+56];
	ld.local.u64 	%rd3346, [%rd3+48];
	xor.b64  	%rd3347, %rd3345, %rd3346;
	and.b64  	%rd3348, %rd3347, %rd3338;
	xor.b64  	%rd3349, %rd3348, %rd3345;
	add.s64 	%rd3350, %rd3344, %rd3349;
	add.s64 	%rd3351, %rd3350, 4794697086780616226;
	ld.local.u64 	%rd3352, [%rd3+32];
	add.s64 	%rd3353, %rd3351, %rd3352;
	ld.local.u64 	%rd3354, [%rd3+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2228,%dummy}, %rd3354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2229}, %rd3354;
	}
	shf.r.wrap.b32 	%r2230, %r2229, %r2228, 28;
	shf.r.wrap.b32 	%r2231, %r2228, %r2229, 28;
	mov.b64 	%rd3355, {%r2231, %r2230};
	shf.l.wrap.b32 	%r2232, %r2228, %r2229, 30;
	shf.l.wrap.b32 	%r2233, %r2229, %r2228, 30;
	mov.b64 	%rd3356, {%r2233, %r2232};
	xor.b64  	%rd3357, %rd3355, %rd3356;
	shf.l.wrap.b32 	%r2234, %r2228, %r2229, 25;
	shf.l.wrap.b32 	%r2235, %r2229, %r2228, 25;
	mov.b64 	%rd3358, {%r2235, %r2234};
	xor.b64  	%rd3359, %rd3357, %rd3358;
	ld.local.u64 	%rd3360, [%rd3+16];
	and.b64  	%rd3361, %rd3360, %rd3354;
	or.b64  	%rd3362, %rd3360, %rd3354;
	ld.local.u64 	%rd3363, [%rd3+24];
	and.b64  	%rd3364, %rd3363, %rd3362;
	or.b64  	%rd3365, %rd3364, %rd3361;
	add.s64 	%rd3366, %rd3365, %rd3359;
	add.s64 	%rd3367, %rd3366, %rd3351;
	add.s64 	%rd3368, %rd12043, %rd3345;
	xor.b64  	%rd3369, %rd3346, %rd3338;
	and.b64  	%rd3370, %rd3353, %rd3369;
	xor.b64  	%rd3371, %rd3370, %rd3346;
	add.s64 	%rd3372, %rd3368, %rd3371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2236,%dummy}, %rd3353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2237}, %rd3353;
	}
	shf.r.wrap.b32 	%r2238, %r2237, %r2236, 14;
	shf.r.wrap.b32 	%r2239, %r2236, %r2237, 14;
	mov.b64 	%rd3373, {%r2239, %r2238};
	shf.r.wrap.b32 	%r2240, %r2237, %r2236, 18;
	shf.r.wrap.b32 	%r2241, %r2236, %r2237, 18;
	mov.b64 	%rd3374, {%r2241, %r2240};
	xor.b64  	%rd3375, %rd3373, %rd3374;
	shf.l.wrap.b32 	%r2242, %r2236, %r2237, 23;
	shf.l.wrap.b32 	%r2243, %r2237, %r2236, 23;
	mov.b64 	%rd3376, {%r2243, %r2242};
	xor.b64  	%rd3377, %rd3375, %rd3376;
	add.s64 	%rd3378, %rd3372, %rd3377;
	add.s64 	%rd3379, %rd3378, 8158064640168781261;
	add.s64 	%rd3380, %rd3379, %rd3363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd3367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2245}, %rd3367;
	}
	shf.r.wrap.b32 	%r2246, %r2245, %r2244, 28;
	shf.r.wrap.b32 	%r2247, %r2244, %r2245, 28;
	mov.b64 	%rd3381, {%r2247, %r2246};
	shf.l.wrap.b32 	%r2248, %r2244, %r2245, 30;
	shf.l.wrap.b32 	%r2249, %r2245, %r2244, 30;
	mov.b64 	%rd3382, {%r2249, %r2248};
	xor.b64  	%rd3383, %rd3381, %rd3382;
	shf.l.wrap.b32 	%r2250, %r2244, %r2245, 25;
	shf.l.wrap.b32 	%r2251, %r2245, %r2244, 25;
	mov.b64 	%rd3384, {%r2251, %r2250};
	xor.b64  	%rd3385, %rd3383, %rd3384;
	and.b64  	%rd3386, %rd3367, %rd3354;
	or.b64  	%rd3387, %rd3367, %rd3354;
	and.b64  	%rd3388, %rd3387, %rd3360;
	or.b64  	%rd3389, %rd3388, %rd3386;
	add.s64 	%rd3390, %rd3389, %rd3385;
	add.s64 	%rd3391, %rd3390, %rd3379;
	add.s64 	%rd3392, %rd12042, %rd3346;
	xor.b64  	%rd3393, %rd3353, %rd3338;
	and.b64  	%rd3394, %rd3380, %rd3393;
	xor.b64  	%rd3395, %rd3394, %rd3338;
	add.s64 	%rd3396, %rd3392, %rd3395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2252,%dummy}, %rd3380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2253}, %rd3380;
	}
	shf.r.wrap.b32 	%r2254, %r2253, %r2252, 14;
	shf.r.wrap.b32 	%r2255, %r2252, %r2253, 14;
	mov.b64 	%rd3397, {%r2255, %r2254};
	shf.r.wrap.b32 	%r2256, %r2253, %r2252, 18;
	shf.r.wrap.b32 	%r2257, %r2252, %r2253, 18;
	mov.b64 	%rd3398, {%r2257, %r2256};
	xor.b64  	%rd3399, %rd3397, %rd3398;
	shf.l.wrap.b32 	%r2258, %r2252, %r2253, 23;
	shf.l.wrap.b32 	%r2259, %r2253, %r2252, 23;
	mov.b64 	%rd3400, {%r2259, %r2258};
	xor.b64  	%rd3401, %rd3399, %rd3400;
	add.s64 	%rd3402, %rd3396, %rd3401;
	add.s64 	%rd3403, %rd3402, -5349999486874862801;
	add.s64 	%rd3404, %rd3403, %rd3360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2260,%dummy}, %rd3391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2261}, %rd3391;
	}
	shf.r.wrap.b32 	%r2262, %r2261, %r2260, 28;
	shf.r.wrap.b32 	%r2263, %r2260, %r2261, 28;
	mov.b64 	%rd3405, {%r2263, %r2262};
	shf.l.wrap.b32 	%r2264, %r2260, %r2261, 30;
	shf.l.wrap.b32 	%r2265, %r2261, %r2260, 30;
	mov.b64 	%rd3406, {%r2265, %r2264};
	xor.b64  	%rd3407, %rd3405, %rd3406;
	shf.l.wrap.b32 	%r2266, %r2260, %r2261, 25;
	shf.l.wrap.b32 	%r2267, %r2261, %r2260, 25;
	mov.b64 	%rd3408, {%r2267, %r2266};
	xor.b64  	%rd3409, %rd3407, %rd3408;
	and.b64  	%rd3410, %rd3391, %rd3367;
	or.b64  	%rd3411, %rd3391, %rd3367;
	and.b64  	%rd3412, %rd3411, %rd3354;
	or.b64  	%rd3413, %rd3412, %rd3410;
	add.s64 	%rd3414, %rd3413, %rd3409;
	add.s64 	%rd3415, %rd3414, %rd3403;
	add.s64 	%rd3416, %rd12041, %rd3338;
	xor.b64  	%rd3417, %rd3380, %rd3353;
	and.b64  	%rd3418, %rd3404, %rd3417;
	xor.b64  	%rd3419, %rd3418, %rd3353;
	add.s64 	%rd3420, %rd3416, %rd3419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2268,%dummy}, %rd3404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2269}, %rd3404;
	}
	shf.r.wrap.b32 	%r2270, %r2269, %r2268, 14;
	shf.r.wrap.b32 	%r2271, %r2268, %r2269, 14;
	mov.b64 	%rd3421, {%r2271, %r2270};
	shf.r.wrap.b32 	%r2272, %r2269, %r2268, 18;
	shf.r.wrap.b32 	%r2273, %r2268, %r2269, 18;
	mov.b64 	%rd3422, {%r2273, %r2272};
	xor.b64  	%rd3423, %rd3421, %rd3422;
	shf.l.wrap.b32 	%r2274, %r2268, %r2269, 23;
	shf.l.wrap.b32 	%r2275, %r2269, %r2268, 23;
	mov.b64 	%rd3424, {%r2275, %r2274};
	xor.b64  	%rd3425, %rd3423, %rd3424;
	add.s64 	%rd3426, %rd3420, %rd3425;
	add.s64 	%rd3427, %rd3426, -1606136188198331460;
	add.s64 	%rd3428, %rd3427, %rd3354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2276,%dummy}, %rd3415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2277}, %rd3415;
	}
	shf.r.wrap.b32 	%r2278, %r2277, %r2276, 28;
	shf.r.wrap.b32 	%r2279, %r2276, %r2277, 28;
	mov.b64 	%rd3429, {%r2279, %r2278};
	shf.l.wrap.b32 	%r2280, %r2276, %r2277, 30;
	shf.l.wrap.b32 	%r2281, %r2277, %r2276, 30;
	mov.b64 	%rd3430, {%r2281, %r2280};
	xor.b64  	%rd3431, %rd3429, %rd3430;
	shf.l.wrap.b32 	%r2282, %r2276, %r2277, 25;
	shf.l.wrap.b32 	%r2283, %r2277, %r2276, 25;
	mov.b64 	%rd3432, {%r2283, %r2282};
	xor.b64  	%rd3433, %rd3431, %rd3432;
	and.b64  	%rd3434, %rd3415, %rd3391;
	or.b64  	%rd3435, %rd3415, %rd3391;
	and.b64  	%rd3436, %rd3435, %rd3367;
	or.b64  	%rd3437, %rd3436, %rd3434;
	add.s64 	%rd3438, %rd3437, %rd3433;
	add.s64 	%rd3439, %rd3438, %rd3427;
	add.s64 	%rd3440, %rd12040, %rd3353;
	xor.b64  	%rd3441, %rd3404, %rd3380;
	and.b64  	%rd3442, %rd3428, %rd3441;
	xor.b64  	%rd3443, %rd3442, %rd3380;
	add.s64 	%rd3444, %rd3440, %rd3443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2284,%dummy}, %rd3428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2285}, %rd3428;
	}
	shf.r.wrap.b32 	%r2286, %r2285, %r2284, 14;
	shf.r.wrap.b32 	%r2287, %r2284, %r2285, 14;
	mov.b64 	%rd3445, {%r2287, %r2286};
	shf.r.wrap.b32 	%r2288, %r2285, %r2284, 18;
	shf.r.wrap.b32 	%r2289, %r2284, %r2285, 18;
	mov.b64 	%rd3446, {%r2289, %r2288};
	xor.b64  	%rd3447, %rd3445, %rd3446;
	shf.l.wrap.b32 	%r2290, %r2284, %r2285, 23;
	shf.l.wrap.b32 	%r2291, %r2285, %r2284, 23;
	mov.b64 	%rd3448, {%r2291, %r2290};
	xor.b64  	%rd3449, %rd3447, %rd3448;
	add.s64 	%rd3450, %rd3444, %rd3449;
	add.s64 	%rd3451, %rd3450, 4131703408338449720;
	add.s64 	%rd3452, %rd3451, %rd3367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2292,%dummy}, %rd3439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2293}, %rd3439;
	}
	shf.r.wrap.b32 	%r2294, %r2293, %r2292, 28;
	shf.r.wrap.b32 	%r2295, %r2292, %r2293, 28;
	mov.b64 	%rd3453, {%r2295, %r2294};
	shf.l.wrap.b32 	%r2296, %r2292, %r2293, 30;
	shf.l.wrap.b32 	%r2297, %r2293, %r2292, 30;
	mov.b64 	%rd3454, {%r2297, %r2296};
	xor.b64  	%rd3455, %rd3453, %rd3454;
	shf.l.wrap.b32 	%r2298, %r2292, %r2293, 25;
	shf.l.wrap.b32 	%r2299, %r2293, %r2292, 25;
	mov.b64 	%rd3456, {%r2299, %r2298};
	xor.b64  	%rd3457, %rd3455, %rd3456;
	and.b64  	%rd3458, %rd3439, %rd3415;
	or.b64  	%rd3459, %rd3439, %rd3415;
	and.b64  	%rd3460, %rd3459, %rd3391;
	or.b64  	%rd3461, %rd3460, %rd3458;
	add.s64 	%rd3462, %rd3461, %rd3457;
	add.s64 	%rd3463, %rd3462, %rd3451;
	add.s64 	%rd3464, %rd12039, %rd3380;
	xor.b64  	%rd3465, %rd3428, %rd3404;
	and.b64  	%rd3466, %rd3452, %rd3465;
	xor.b64  	%rd3467, %rd3466, %rd3404;
	add.s64 	%rd3468, %rd3464, %rd3467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2300,%dummy}, %rd3452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2301}, %rd3452;
	}
	shf.r.wrap.b32 	%r2302, %r2301, %r2300, 14;
	shf.r.wrap.b32 	%r2303, %r2300, %r2301, 14;
	mov.b64 	%rd3469, {%r2303, %r2302};
	shf.r.wrap.b32 	%r2304, %r2301, %r2300, 18;
	shf.r.wrap.b32 	%r2305, %r2300, %r2301, 18;
	mov.b64 	%rd3470, {%r2305, %r2304};
	xor.b64  	%rd3471, %rd3469, %rd3470;
	shf.l.wrap.b32 	%r2306, %r2300, %r2301, 23;
	shf.l.wrap.b32 	%r2307, %r2301, %r2300, 23;
	mov.b64 	%rd3472, {%r2307, %r2306};
	xor.b64  	%rd3473, %rd3471, %rd3472;
	add.s64 	%rd3474, %rd3468, %rd3473;
	add.s64 	%rd3475, %rd3474, 6480981068601479193;
	add.s64 	%rd3476, %rd3475, %rd3391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2308,%dummy}, %rd3463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2309}, %rd3463;
	}
	shf.r.wrap.b32 	%r2310, %r2309, %r2308, 28;
	shf.r.wrap.b32 	%r2311, %r2308, %r2309, 28;
	mov.b64 	%rd3477, {%r2311, %r2310};
	shf.l.wrap.b32 	%r2312, %r2308, %r2309, 30;
	shf.l.wrap.b32 	%r2313, %r2309, %r2308, 30;
	mov.b64 	%rd3478, {%r2313, %r2312};
	xor.b64  	%rd3479, %rd3477, %rd3478;
	shf.l.wrap.b32 	%r2314, %r2308, %r2309, 25;
	shf.l.wrap.b32 	%r2315, %r2309, %r2308, 25;
	mov.b64 	%rd3480, {%r2315, %r2314};
	xor.b64  	%rd3481, %rd3479, %rd3480;
	and.b64  	%rd3482, %rd3463, %rd3439;
	or.b64  	%rd3483, %rd3463, %rd3439;
	and.b64  	%rd3484, %rd3483, %rd3415;
	or.b64  	%rd3485, %rd3484, %rd3482;
	add.s64 	%rd3486, %rd3485, %rd3481;
	add.s64 	%rd3487, %rd3486, %rd3475;
	add.s64 	%rd3488, %rd12038, %rd3404;
	xor.b64  	%rd3489, %rd3452, %rd3428;
	and.b64  	%rd3490, %rd3476, %rd3489;
	xor.b64  	%rd3491, %rd3490, %rd3428;
	add.s64 	%rd3492, %rd3488, %rd3491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2316,%dummy}, %rd3476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2317}, %rd3476;
	}
	shf.r.wrap.b32 	%r2318, %r2317, %r2316, 14;
	shf.r.wrap.b32 	%r2319, %r2316, %r2317, 14;
	mov.b64 	%rd3493, {%r2319, %r2318};
	shf.r.wrap.b32 	%r2320, %r2317, %r2316, 18;
	shf.r.wrap.b32 	%r2321, %r2316, %r2317, 18;
	mov.b64 	%rd3494, {%r2321, %r2320};
	xor.b64  	%rd3495, %rd3493, %rd3494;
	shf.l.wrap.b32 	%r2322, %r2316, %r2317, 23;
	shf.l.wrap.b32 	%r2323, %r2317, %r2316, 23;
	mov.b64 	%rd3496, {%r2323, %r2322};
	xor.b64  	%rd3497, %rd3495, %rd3496;
	add.s64 	%rd3498, %rd3492, %rd3497;
	add.s64 	%rd3499, %rd3498, -7908458776815382629;
	add.s64 	%rd3500, %rd3499, %rd3415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2324,%dummy}, %rd3487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2325}, %rd3487;
	}
	shf.r.wrap.b32 	%r2326, %r2325, %r2324, 28;
	shf.r.wrap.b32 	%r2327, %r2324, %r2325, 28;
	mov.b64 	%rd3501, {%r2327, %r2326};
	shf.l.wrap.b32 	%r2328, %r2324, %r2325, 30;
	shf.l.wrap.b32 	%r2329, %r2325, %r2324, 30;
	mov.b64 	%rd3502, {%r2329, %r2328};
	xor.b64  	%rd3503, %rd3501, %rd3502;
	shf.l.wrap.b32 	%r2330, %r2324, %r2325, 25;
	shf.l.wrap.b32 	%r2331, %r2325, %r2324, 25;
	mov.b64 	%rd3504, {%r2331, %r2330};
	xor.b64  	%rd3505, %rd3503, %rd3504;
	and.b64  	%rd3506, %rd3487, %rd3463;
	or.b64  	%rd3507, %rd3487, %rd3463;
	and.b64  	%rd3508, %rd3507, %rd3439;
	or.b64  	%rd3509, %rd3508, %rd3506;
	add.s64 	%rd3510, %rd3509, %rd3505;
	add.s64 	%rd3511, %rd3510, %rd3499;
	add.s64 	%rd3512, %rd12037, %rd3428;
	xor.b64  	%rd3513, %rd3476, %rd3452;
	and.b64  	%rd3514, %rd3500, %rd3513;
	xor.b64  	%rd3515, %rd3514, %rd3452;
	add.s64 	%rd3516, %rd3512, %rd3515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2332,%dummy}, %rd3500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2333}, %rd3500;
	}
	shf.r.wrap.b32 	%r2334, %r2333, %r2332, 14;
	shf.r.wrap.b32 	%r2335, %r2332, %r2333, 14;
	mov.b64 	%rd3517, {%r2335, %r2334};
	shf.r.wrap.b32 	%r2336, %r2333, %r2332, 18;
	shf.r.wrap.b32 	%r2337, %r2332, %r2333, 18;
	mov.b64 	%rd3518, {%r2337, %r2336};
	xor.b64  	%rd3519, %rd3517, %rd3518;
	shf.l.wrap.b32 	%r2338, %r2332, %r2333, 23;
	shf.l.wrap.b32 	%r2339, %r2333, %r2332, 23;
	mov.b64 	%rd3520, {%r2339, %r2338};
	xor.b64  	%rd3521, %rd3519, %rd3520;
	add.s64 	%rd3522, %rd3516, %rd3521;
	add.s64 	%rd3523, %rd3522, -6116909921290321640;
	add.s64 	%rd3524, %rd3523, %rd3439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2340,%dummy}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2341}, %rd3511;
	}
	shf.r.wrap.b32 	%r2342, %r2341, %r2340, 28;
	shf.r.wrap.b32 	%r2343, %r2340, %r2341, 28;
	mov.b64 	%rd3525, {%r2343, %r2342};
	shf.l.wrap.b32 	%r2344, %r2340, %r2341, 30;
	shf.l.wrap.b32 	%r2345, %r2341, %r2340, 30;
	mov.b64 	%rd3526, {%r2345, %r2344};
	xor.b64  	%rd3527, %rd3525, %rd3526;
	shf.l.wrap.b32 	%r2346, %r2340, %r2341, 25;
	shf.l.wrap.b32 	%r2347, %r2341, %r2340, 25;
	mov.b64 	%rd3528, {%r2347, %r2346};
	xor.b64  	%rd3529, %rd3527, %rd3528;
	and.b64  	%rd3530, %rd3511, %rd3487;
	or.b64  	%rd3531, %rd3511, %rd3487;
	and.b64  	%rd3532, %rd3531, %rd3463;
	or.b64  	%rd3533, %rd3532, %rd3530;
	add.s64 	%rd3534, %rd3533, %rd3529;
	add.s64 	%rd3535, %rd3534, %rd3523;
	add.s64 	%rd3536, %rd12036, %rd3452;
	xor.b64  	%rd3537, %rd3500, %rd3476;
	and.b64  	%rd3538, %rd3524, %rd3537;
	xor.b64  	%rd3539, %rd3538, %rd3476;
	add.s64 	%rd3540, %rd3536, %rd3539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2348,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd3524;
	}
	shf.r.wrap.b32 	%r2350, %r2349, %r2348, 14;
	shf.r.wrap.b32 	%r2351, %r2348, %r2349, 14;
	mov.b64 	%rd3541, {%r2351, %r2350};
	shf.r.wrap.b32 	%r2352, %r2349, %r2348, 18;
	shf.r.wrap.b32 	%r2353, %r2348, %r2349, 18;
	mov.b64 	%rd3542, {%r2353, %r2352};
	xor.b64  	%rd3543, %rd3541, %rd3542;
	shf.l.wrap.b32 	%r2354, %r2348, %r2349, 23;
	shf.l.wrap.b32 	%r2355, %r2349, %r2348, 23;
	mov.b64 	%rd3544, {%r2355, %r2354};
	xor.b64  	%rd3545, %rd3543, %rd3544;
	add.s64 	%rd3546, %rd3540, %rd3545;
	add.s64 	%rd3547, %rd3546, -2880145864133508542;
	add.s64 	%rd3548, %rd3547, %rd3463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd3535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd3535;
	}
	shf.r.wrap.b32 	%r2358, %r2357, %r2356, 28;
	shf.r.wrap.b32 	%r2359, %r2356, %r2357, 28;
	mov.b64 	%rd3549, {%r2359, %r2358};
	shf.l.wrap.b32 	%r2360, %r2356, %r2357, 30;
	shf.l.wrap.b32 	%r2361, %r2357, %r2356, 30;
	mov.b64 	%rd3550, {%r2361, %r2360};
	xor.b64  	%rd3551, %rd3549, %rd3550;
	shf.l.wrap.b32 	%r2362, %r2356, %r2357, 25;
	shf.l.wrap.b32 	%r2363, %r2357, %r2356, 25;
	mov.b64 	%rd3552, {%r2363, %r2362};
	xor.b64  	%rd3553, %rd3551, %rd3552;
	and.b64  	%rd3554, %rd3535, %rd3511;
	or.b64  	%rd3555, %rd3535, %rd3511;
	and.b64  	%rd3556, %rd3555, %rd3487;
	or.b64  	%rd3557, %rd3556, %rd3554;
	add.s64 	%rd3558, %rd3557, %rd3553;
	add.s64 	%rd3559, %rd3558, %rd3547;
	add.s64 	%rd3560, %rd12035, %rd3476;
	xor.b64  	%rd3561, %rd3524, %rd3500;
	and.b64  	%rd3562, %rd3548, %rd3561;
	xor.b64  	%rd3563, %rd3562, %rd3500;
	add.s64 	%rd3564, %rd3560, %rd3563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2364,%dummy}, %rd3548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2365}, %rd3548;
	}
	shf.r.wrap.b32 	%r2366, %r2365, %r2364, 14;
	shf.r.wrap.b32 	%r2367, %r2364, %r2365, 14;
	mov.b64 	%rd3565, {%r2367, %r2366};
	shf.r.wrap.b32 	%r2368, %r2365, %r2364, 18;
	shf.r.wrap.b32 	%r2369, %r2364, %r2365, 18;
	mov.b64 	%rd3566, {%r2369, %r2368};
	xor.b64  	%rd3567, %rd3565, %rd3566;
	shf.l.wrap.b32 	%r2370, %r2364, %r2365, 23;
	shf.l.wrap.b32 	%r2371, %r2365, %r2364, 23;
	mov.b64 	%rd3568, {%r2371, %r2370};
	xor.b64  	%rd3569, %rd3567, %rd3568;
	add.s64 	%rd3570, %rd3564, %rd3569;
	add.s64 	%rd3571, %rd3570, 1334009975649890238;
	add.s64 	%rd3572, %rd3571, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2372,%dummy}, %rd3559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2373}, %rd3559;
	}
	shf.r.wrap.b32 	%r2374, %r2373, %r2372, 28;
	shf.r.wrap.b32 	%r2375, %r2372, %r2373, 28;
	mov.b64 	%rd3573, {%r2375, %r2374};
	shf.l.wrap.b32 	%r2376, %r2372, %r2373, 30;
	shf.l.wrap.b32 	%r2377, %r2373, %r2372, 30;
	mov.b64 	%rd3574, {%r2377, %r2376};
	xor.b64  	%rd3575, %rd3573, %rd3574;
	shf.l.wrap.b32 	%r2378, %r2372, %r2373, 25;
	shf.l.wrap.b32 	%r2379, %r2373, %r2372, 25;
	mov.b64 	%rd3576, {%r2379, %r2378};
	xor.b64  	%rd3577, %rd3575, %rd3576;
	and.b64  	%rd3578, %rd3559, %rd3535;
	or.b64  	%rd3579, %rd3559, %rd3535;
	and.b64  	%rd3580, %rd3579, %rd3511;
	or.b64  	%rd3581, %rd3580, %rd3578;
	add.s64 	%rd3582, %rd3581, %rd3577;
	add.s64 	%rd3583, %rd3582, %rd3571;
	add.s64 	%rd3584, %rd12034, %rd3500;
	xor.b64  	%rd3585, %rd3548, %rd3524;
	and.b64  	%rd3586, %rd3572, %rd3585;
	xor.b64  	%rd3587, %rd3586, %rd3524;
	add.s64 	%rd3588, %rd3584, %rd3587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2380,%dummy}, %rd3572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2381}, %rd3572;
	}
	shf.r.wrap.b32 	%r2382, %r2381, %r2380, 14;
	shf.r.wrap.b32 	%r2383, %r2380, %r2381, 14;
	mov.b64 	%rd3589, {%r2383, %r2382};
	shf.r.wrap.b32 	%r2384, %r2381, %r2380, 18;
	shf.r.wrap.b32 	%r2385, %r2380, %r2381, 18;
	mov.b64 	%rd3590, {%r2385, %r2384};
	xor.b64  	%rd3591, %rd3589, %rd3590;
	shf.l.wrap.b32 	%r2386, %r2380, %r2381, 23;
	shf.l.wrap.b32 	%r2387, %r2381, %r2380, 23;
	mov.b64 	%rd3592, {%r2387, %r2386};
	xor.b64  	%rd3593, %rd3591, %rd3592;
	add.s64 	%rd3594, %rd3588, %rd3593;
	add.s64 	%rd3595, %rd3594, 2608012711638119052;
	add.s64 	%rd3596, %rd3595, %rd3511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2388,%dummy}, %rd3583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2389}, %rd3583;
	}
	shf.r.wrap.b32 	%r2390, %r2389, %r2388, 28;
	shf.r.wrap.b32 	%r2391, %r2388, %r2389, 28;
	mov.b64 	%rd3597, {%r2391, %r2390};
	shf.l.wrap.b32 	%r2392, %r2388, %r2389, 30;
	shf.l.wrap.b32 	%r2393, %r2389, %r2388, 30;
	mov.b64 	%rd3598, {%r2393, %r2392};
	xor.b64  	%rd3599, %rd3597, %rd3598;
	shf.l.wrap.b32 	%r2394, %r2388, %r2389, 25;
	shf.l.wrap.b32 	%r2395, %r2389, %r2388, 25;
	mov.b64 	%rd3600, {%r2395, %r2394};
	xor.b64  	%rd3601, %rd3599, %rd3600;
	and.b64  	%rd3602, %rd3583, %rd3559;
	or.b64  	%rd3603, %rd3583, %rd3559;
	and.b64  	%rd3604, %rd3603, %rd3535;
	or.b64  	%rd3605, %rd3604, %rd3602;
	add.s64 	%rd3606, %rd3605, %rd3601;
	add.s64 	%rd3607, %rd3606, %rd3595;
	add.s64 	%rd3608, %rd12033, %rd3524;
	xor.b64  	%rd3609, %rd3572, %rd3548;
	and.b64  	%rd3610, %rd3596, %rd3609;
	xor.b64  	%rd3611, %rd3610, %rd3548;
	add.s64 	%rd3612, %rd3608, %rd3611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2396,%dummy}, %rd3596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2397}, %rd3596;
	}
	shf.r.wrap.b32 	%r2398, %r2397, %r2396, 14;
	shf.r.wrap.b32 	%r2399, %r2396, %r2397, 14;
	mov.b64 	%rd3613, {%r2399, %r2398};
	shf.r.wrap.b32 	%r2400, %r2397, %r2396, 18;
	shf.r.wrap.b32 	%r2401, %r2396, %r2397, 18;
	mov.b64 	%rd3614, {%r2401, %r2400};
	xor.b64  	%rd3615, %rd3613, %rd3614;
	shf.l.wrap.b32 	%r2402, %r2396, %r2397, 23;
	shf.l.wrap.b32 	%r2403, %r2397, %r2396, 23;
	mov.b64 	%rd3616, {%r2403, %r2402};
	xor.b64  	%rd3617, %rd3615, %rd3616;
	add.s64 	%rd3618, %rd3612, %rd3617;
	add.s64 	%rd3619, %rd3618, 6128411473006802146;
	add.s64 	%rd3620, %rd3619, %rd3535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2404,%dummy}, %rd3607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2405}, %rd3607;
	}
	shf.r.wrap.b32 	%r2406, %r2405, %r2404, 28;
	shf.r.wrap.b32 	%r2407, %r2404, %r2405, 28;
	mov.b64 	%rd3621, {%r2407, %r2406};
	shf.l.wrap.b32 	%r2408, %r2404, %r2405, 30;
	shf.l.wrap.b32 	%r2409, %r2405, %r2404, 30;
	mov.b64 	%rd3622, {%r2409, %r2408};
	xor.b64  	%rd3623, %rd3621, %rd3622;
	shf.l.wrap.b32 	%r2410, %r2404, %r2405, 25;
	shf.l.wrap.b32 	%r2411, %r2405, %r2404, 25;
	mov.b64 	%rd3624, {%r2411, %r2410};
	xor.b64  	%rd3625, %rd3623, %rd3624;
	and.b64  	%rd3626, %rd3607, %rd3583;
	or.b64  	%rd3627, %rd3607, %rd3583;
	and.b64  	%rd3628, %rd3627, %rd3559;
	or.b64  	%rd3629, %rd3628, %rd3626;
	add.s64 	%rd3630, %rd3629, %rd3625;
	add.s64 	%rd3631, %rd3630, %rd3619;
	add.s64 	%rd3632, %rd12032, %rd3548;
	xor.b64  	%rd3633, %rd3596, %rd3572;
	and.b64  	%rd3634, %rd3620, %rd3633;
	xor.b64  	%rd3635, %rd3634, %rd3572;
	add.s64 	%rd3636, %rd3632, %rd3635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2412,%dummy}, %rd3620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd3620;
	}
	shf.r.wrap.b32 	%r2414, %r2413, %r2412, 14;
	shf.r.wrap.b32 	%r2415, %r2412, %r2413, 14;
	mov.b64 	%rd3637, {%r2415, %r2414};
	shf.r.wrap.b32 	%r2416, %r2413, %r2412, 18;
	shf.r.wrap.b32 	%r2417, %r2412, %r2413, 18;
	mov.b64 	%rd3638, {%r2417, %r2416};
	xor.b64  	%rd3639, %rd3637, %rd3638;
	shf.l.wrap.b32 	%r2418, %r2412, %r2413, 23;
	shf.l.wrap.b32 	%r2419, %r2413, %r2412, 23;
	mov.b64 	%rd3640, {%r2419, %r2418};
	xor.b64  	%rd3641, %rd3639, %rd3640;
	add.s64 	%rd3642, %rd3636, %rd3641;
	add.s64 	%rd3643, %rd3642, 8268148722764581231;
	add.s64 	%rd3644, %rd3643, %rd3559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2420,%dummy}, %rd3631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2421}, %rd3631;
	}
	shf.r.wrap.b32 	%r2422, %r2421, %r2420, 28;
	shf.r.wrap.b32 	%r2423, %r2420, %r2421, 28;
	mov.b64 	%rd3645, {%r2423, %r2422};
	shf.l.wrap.b32 	%r2424, %r2420, %r2421, 30;
	shf.l.wrap.b32 	%r2425, %r2421, %r2420, 30;
	mov.b64 	%rd3646, {%r2425, %r2424};
	xor.b64  	%rd3647, %rd3645, %rd3646;
	shf.l.wrap.b32 	%r2426, %r2420, %r2421, 25;
	shf.l.wrap.b32 	%r2427, %r2421, %r2420, 25;
	mov.b64 	%rd3648, {%r2427, %r2426};
	xor.b64  	%rd3649, %rd3647, %rd3648;
	and.b64  	%rd3650, %rd3631, %rd3607;
	or.b64  	%rd3651, %rd3631, %rd3607;
	and.b64  	%rd3652, %rd3651, %rd3583;
	or.b64  	%rd3653, %rd3652, %rd3650;
	add.s64 	%rd3654, %rd3653, %rd3649;
	add.s64 	%rd3655, %rd3654, %rd3643;
	add.s64 	%rd3656, %rd12031, %rd3572;
	xor.b64  	%rd3657, %rd3620, %rd3596;
	and.b64  	%rd3658, %rd3644, %rd3657;
	xor.b64  	%rd3659, %rd3658, %rd3596;
	add.s64 	%rd3660, %rd3656, %rd3659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2428,%dummy}, %rd3644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2429}, %rd3644;
	}
	shf.r.wrap.b32 	%r2430, %r2429, %r2428, 14;
	shf.r.wrap.b32 	%r2431, %r2428, %r2429, 14;
	mov.b64 	%rd3661, {%r2431, %r2430};
	shf.r.wrap.b32 	%r2432, %r2429, %r2428, 18;
	shf.r.wrap.b32 	%r2433, %r2428, %r2429, 18;
	mov.b64 	%rd3662, {%r2433, %r2432};
	xor.b64  	%rd3663, %rd3661, %rd3662;
	shf.l.wrap.b32 	%r2434, %r2428, %r2429, 23;
	shf.l.wrap.b32 	%r2435, %r2429, %r2428, 23;
	mov.b64 	%rd3664, {%r2435, %r2434};
	xor.b64  	%rd3665, %rd3663, %rd3664;
	add.s64 	%rd3666, %rd3660, %rd3665;
	add.s64 	%rd3667, %rd3666, -9160688886553864527;
	add.s64 	%rd3668, %rd3667, %rd3583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd3655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd3655;
	}
	shf.r.wrap.b32 	%r2438, %r2437, %r2436, 28;
	shf.r.wrap.b32 	%r2439, %r2436, %r2437, 28;
	mov.b64 	%rd3669, {%r2439, %r2438};
	shf.l.wrap.b32 	%r2440, %r2436, %r2437, 30;
	shf.l.wrap.b32 	%r2441, %r2437, %r2436, 30;
	mov.b64 	%rd3670, {%r2441, %r2440};
	xor.b64  	%rd3671, %rd3669, %rd3670;
	shf.l.wrap.b32 	%r2442, %r2436, %r2437, 25;
	shf.l.wrap.b32 	%r2443, %r2437, %r2436, 25;
	mov.b64 	%rd3672, {%r2443, %r2442};
	xor.b64  	%rd3673, %rd3671, %rd3672;
	and.b64  	%rd3674, %rd3655, %rd3631;
	or.b64  	%rd3675, %rd3655, %rd3631;
	and.b64  	%rd3676, %rd3675, %rd3607;
	or.b64  	%rd3677, %rd3676, %rd3674;
	add.s64 	%rd3678, %rd3677, %rd3673;
	add.s64 	%rd3679, %rd3678, %rd3667;
	add.s64 	%rd3680, %rd12030, %rd3596;
	xor.b64  	%rd3681, %rd3644, %rd3620;
	and.b64  	%rd3682, %rd3668, %rd3681;
	xor.b64  	%rd3683, %rd3682, %rd3620;
	add.s64 	%rd3684, %rd3680, %rd3683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2444,%dummy}, %rd3668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2445}, %rd3668;
	}
	shf.r.wrap.b32 	%r2446, %r2445, %r2444, 14;
	shf.r.wrap.b32 	%r2447, %r2444, %r2445, 14;
	mov.b64 	%rd3685, {%r2447, %r2446};
	shf.r.wrap.b32 	%r2448, %r2445, %r2444, 18;
	shf.r.wrap.b32 	%r2449, %r2444, %r2445, 18;
	mov.b64 	%rd3686, {%r2449, %r2448};
	xor.b64  	%rd3687, %rd3685, %rd3686;
	shf.l.wrap.b32 	%r2450, %r2444, %r2445, 23;
	shf.l.wrap.b32 	%r2451, %r2445, %r2444, 23;
	mov.b64 	%rd3688, {%r2451, %r2450};
	xor.b64  	%rd3689, %rd3687, %rd3688;
	add.s64 	%rd3690, %rd3684, %rd3689;
	add.s64 	%rd3691, %rd3690, -7215885187991268811;
	add.s64 	%rd3692, %rd3691, %rd3607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2452,%dummy}, %rd3679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd3679;
	}
	shf.r.wrap.b32 	%r2454, %r2453, %r2452, 28;
	shf.r.wrap.b32 	%r2455, %r2452, %r2453, 28;
	mov.b64 	%rd3693, {%r2455, %r2454};
	shf.l.wrap.b32 	%r2456, %r2452, %r2453, 30;
	shf.l.wrap.b32 	%r2457, %r2453, %r2452, 30;
	mov.b64 	%rd3694, {%r2457, %r2456};
	xor.b64  	%rd3695, %rd3693, %rd3694;
	shf.l.wrap.b32 	%r2458, %r2452, %r2453, 25;
	shf.l.wrap.b32 	%r2459, %r2453, %r2452, 25;
	mov.b64 	%rd3696, {%r2459, %r2458};
	xor.b64  	%rd3697, %rd3695, %rd3696;
	and.b64  	%rd3698, %rd3679, %rd3655;
	or.b64  	%rd3699, %rd3679, %rd3655;
	and.b64  	%rd3700, %rd3699, %rd3631;
	or.b64  	%rd3701, %rd3700, %rd3698;
	add.s64 	%rd3702, %rd3701, %rd3697;
	add.s64 	%rd3703, %rd3702, %rd3691;
	add.s64 	%rd3704, %rd12029, %rd3620;
	xor.b64  	%rd3705, %rd3668, %rd3644;
	and.b64  	%rd3706, %rd3692, %rd3705;
	xor.b64  	%rd3707, %rd3706, %rd3644;
	add.s64 	%rd3708, %rd3704, %rd3707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2460,%dummy}, %rd3692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd3692;
	}
	shf.r.wrap.b32 	%r2462, %r2461, %r2460, 14;
	shf.r.wrap.b32 	%r2463, %r2460, %r2461, 14;
	mov.b64 	%rd3709, {%r2463, %r2462};
	shf.r.wrap.b32 	%r2464, %r2461, %r2460, 18;
	shf.r.wrap.b32 	%r2465, %r2460, %r2461, 18;
	mov.b64 	%rd3710, {%r2465, %r2464};
	xor.b64  	%rd3711, %rd3709, %rd3710;
	shf.l.wrap.b32 	%r2466, %r2460, %r2461, 23;
	shf.l.wrap.b32 	%r2467, %r2461, %r2460, 23;
	mov.b64 	%rd3712, {%r2467, %r2466};
	xor.b64  	%rd3713, %rd3711, %rd3712;
	add.s64 	%rd3714, %rd3708, %rd3713;
	add.s64 	%rd3715, %rd3714, -4495734319001033068;
	add.s64 	%rd3716, %rd3715, %rd3631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2468,%dummy}, %rd3703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2469}, %rd3703;
	}
	shf.r.wrap.b32 	%r2470, %r2469, %r2468, 28;
	shf.r.wrap.b32 	%r2471, %r2468, %r2469, 28;
	mov.b64 	%rd3717, {%r2471, %r2470};
	shf.l.wrap.b32 	%r2472, %r2468, %r2469, 30;
	shf.l.wrap.b32 	%r2473, %r2469, %r2468, 30;
	mov.b64 	%rd3718, {%r2473, %r2472};
	xor.b64  	%rd3719, %rd3717, %rd3718;
	shf.l.wrap.b32 	%r2474, %r2468, %r2469, 25;
	shf.l.wrap.b32 	%r2475, %r2469, %r2468, 25;
	mov.b64 	%rd3720, {%r2475, %r2474};
	xor.b64  	%rd3721, %rd3719, %rd3720;
	and.b64  	%rd3722, %rd3703, %rd3679;
	or.b64  	%rd3723, %rd3703, %rd3679;
	and.b64  	%rd3724, %rd3723, %rd3655;
	or.b64  	%rd3725, %rd3724, %rd3722;
	add.s64 	%rd3726, %rd3725, %rd3721;
	add.s64 	%rd3727, %rd3726, %rd3715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd12030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd12030;
	}
	shf.l.wrap.b32 	%r2478, %r2477, %r2476, 3;
	shf.l.wrap.b32 	%r2479, %r2476, %r2477, 3;
	mov.b64 	%rd3728, {%r2479, %r2478};
	shf.r.wrap.b32 	%r2480, %r2476, %r2477, 19;
	shf.r.wrap.b32 	%r2481, %r2477, %r2476, 19;
	mov.b64 	%rd3729, {%r2481, %r2480};
	xor.b64  	%rd3730, %rd3729, %rd3728;
	shr.u64 	%rd3731, %rd12030, 6;
	xor.b64  	%rd3732, %rd3730, %rd3731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2482,%dummy}, %rd12043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2483}, %rd12043;
	}
	shf.r.wrap.b32 	%r2484, %r2483, %r2482, 8;
	shf.r.wrap.b32 	%r2485, %r2482, %r2483, 8;
	mov.b64 	%rd3733, {%r2485, %r2484};
	shf.r.wrap.b32 	%r2486, %r2483, %r2482, 1;
	shf.r.wrap.b32 	%r2487, %r2482, %r2483, 1;
	mov.b64 	%rd3734, {%r2487, %r2486};
	xor.b64  	%rd3735, %rd3734, %rd3733;
	shr.u64 	%rd3736, %rd12043, 7;
	xor.b64  	%rd3737, %rd3735, %rd3736;
	add.s64 	%rd3738, %rd12035, %rd3732;
	add.s64 	%rd3739, %rd3738, %rd12044;
	add.s64 	%rd3740, %rd3739, %rd3737;
	add.s64 	%rd3741, %rd3740, %rd3644;
	xor.b64  	%rd3742, %rd3692, %rd3668;
	and.b64  	%rd3743, %rd3716, %rd3742;
	xor.b64  	%rd3744, %rd3743, %rd3668;
	add.s64 	%rd3745, %rd3741, %rd3744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2488,%dummy}, %rd3716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd3716;
	}
	shf.r.wrap.b32 	%r2490, %r2489, %r2488, 14;
	shf.r.wrap.b32 	%r2491, %r2488, %r2489, 14;
	mov.b64 	%rd3746, {%r2491, %r2490};
	shf.r.wrap.b32 	%r2492, %r2489, %r2488, 18;
	shf.r.wrap.b32 	%r2493, %r2488, %r2489, 18;
	mov.b64 	%rd3747, {%r2493, %r2492};
	xor.b64  	%rd3748, %rd3746, %rd3747;
	shf.l.wrap.b32 	%r2494, %r2488, %r2489, 23;
	shf.l.wrap.b32 	%r2495, %r2489, %r2488, 23;
	mov.b64 	%rd3749, {%r2495, %r2494};
	xor.b64  	%rd3750, %rd3748, %rd3749;
	add.s64 	%rd3751, %rd3745, %rd3750;
	add.s64 	%rd3752, %rd3751, -1973867731355612462;
	add.s64 	%rd3753, %rd3752, %rd3655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd3727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd3727;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 28;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 28;
	mov.b64 	%rd3754, {%r2499, %r2498};
	shf.l.wrap.b32 	%r2500, %r2496, %r2497, 30;
	shf.l.wrap.b32 	%r2501, %r2497, %r2496, 30;
	mov.b64 	%rd3755, {%r2501, %r2500};
	xor.b64  	%rd3756, %rd3754, %rd3755;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 25;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 25;
	mov.b64 	%rd3757, {%r2503, %r2502};
	xor.b64  	%rd3758, %rd3756, %rd3757;
	and.b64  	%rd3759, %rd3727, %rd3703;
	or.b64  	%rd3760, %rd3727, %rd3703;
	and.b64  	%rd3761, %rd3760, %rd3679;
	or.b64  	%rd3762, %rd3761, %rd3759;
	add.s64 	%rd3763, %rd3762, %rd3758;
	add.s64 	%rd3764, %rd3763, %rd3752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2504}, %rd12029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd12029;
	}
	shf.l.wrap.b32 	%r2506, %r2505, %r2504, 3;
	shf.l.wrap.b32 	%r2507, %r2504, %r2505, 3;
	mov.b64 	%rd3765, {%r2507, %r2506};
	shf.r.wrap.b32 	%r2508, %r2504, %r2505, 19;
	shf.r.wrap.b32 	%r2509, %r2505, %r2504, 19;
	mov.b64 	%rd3766, {%r2509, %r2508};
	xor.b64  	%rd3767, %rd3766, %rd3765;
	shr.u64 	%rd3768, %rd12029, 6;
	xor.b64  	%rd3769, %rd3767, %rd3768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2510,%dummy}, %rd12042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2511}, %rd12042;
	}
	shf.r.wrap.b32 	%r2512, %r2511, %r2510, 8;
	shf.r.wrap.b32 	%r2513, %r2510, %r2511, 8;
	mov.b64 	%rd3770, {%r2513, %r2512};
	shf.r.wrap.b32 	%r2514, %r2511, %r2510, 1;
	shf.r.wrap.b32 	%r2515, %r2510, %r2511, 1;
	mov.b64 	%rd3771, {%r2515, %r2514};
	xor.b64  	%rd3772, %rd3771, %rd3770;
	shr.u64 	%rd3773, %rd12042, 7;
	xor.b64  	%rd3774, %rd3772, %rd3773;
	add.s64 	%rd3775, %rd12034, %rd3769;
	add.s64 	%rd3776, %rd3775, %rd12043;
	add.s64 	%rd3777, %rd3776, %rd3774;
	add.s64 	%rd3778, %rd3777, %rd3668;
	xor.b64  	%rd3779, %rd3716, %rd3692;
	and.b64  	%rd3780, %rd3753, %rd3779;
	xor.b64  	%rd3781, %rd3780, %rd3692;
	add.s64 	%rd3782, %rd3778, %rd3781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2516,%dummy}, %rd3753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd3753;
	}
	shf.r.wrap.b32 	%r2518, %r2517, %r2516, 14;
	shf.r.wrap.b32 	%r2519, %r2516, %r2517, 14;
	mov.b64 	%rd3783, {%r2519, %r2518};
	shf.r.wrap.b32 	%r2520, %r2517, %r2516, 18;
	shf.r.wrap.b32 	%r2521, %r2516, %r2517, 18;
	mov.b64 	%rd3784, {%r2521, %r2520};
	xor.b64  	%rd3785, %rd3783, %rd3784;
	shf.l.wrap.b32 	%r2522, %r2516, %r2517, 23;
	shf.l.wrap.b32 	%r2523, %r2517, %r2516, 23;
	mov.b64 	%rd3786, {%r2523, %r2522};
	xor.b64  	%rd3787, %rd3785, %rd3786;
	add.s64 	%rd3788, %rd3782, %rd3787;
	add.s64 	%rd3789, %rd3788, -1171420211273849373;
	add.s64 	%rd3790, %rd3789, %rd3679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2524,%dummy}, %rd3764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2525}, %rd3764;
	}
	shf.r.wrap.b32 	%r2526, %r2525, %r2524, 28;
	shf.r.wrap.b32 	%r2527, %r2524, %r2525, 28;
	mov.b64 	%rd3791, {%r2527, %r2526};
	shf.l.wrap.b32 	%r2528, %r2524, %r2525, 30;
	shf.l.wrap.b32 	%r2529, %r2525, %r2524, 30;
	mov.b64 	%rd3792, {%r2529, %r2528};
	xor.b64  	%rd3793, %rd3791, %rd3792;
	shf.l.wrap.b32 	%r2530, %r2524, %r2525, 25;
	shf.l.wrap.b32 	%r2531, %r2525, %r2524, 25;
	mov.b64 	%rd3794, {%r2531, %r2530};
	xor.b64  	%rd3795, %rd3793, %rd3794;
	and.b64  	%rd3796, %rd3764, %rd3727;
	or.b64  	%rd3797, %rd3764, %rd3727;
	and.b64  	%rd3798, %rd3797, %rd3703;
	or.b64  	%rd3799, %rd3798, %rd3796;
	add.s64 	%rd3800, %rd3799, %rd3795;
	add.s64 	%rd3801, %rd3800, %rd3789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2532,%dummy}, %rd3740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2533}, %rd3740;
	}
	shf.r.wrap.b32 	%r2534, %r2533, %r2532, 19;
	shf.r.wrap.b32 	%r2535, %r2532, %r2533, 19;
	mov.b64 	%rd3802, {%r2535, %r2534};
	shf.l.wrap.b32 	%r2536, %r2532, %r2533, 3;
	shf.l.wrap.b32 	%r2537, %r2533, %r2532, 3;
	mov.b64 	%rd3803, {%r2537, %r2536};
	xor.b64  	%rd3804, %rd3802, %rd3803;
	shr.u64 	%rd3805, %rd3740, 6;
	xor.b64  	%rd3806, %rd3804, %rd3805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2538,%dummy}, %rd12041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2539}, %rd12041;
	}
	shf.r.wrap.b32 	%r2540, %r2539, %r2538, 8;
	shf.r.wrap.b32 	%r2541, %r2538, %r2539, 8;
	mov.b64 	%rd3807, {%r2541, %r2540};
	shf.r.wrap.b32 	%r2542, %r2539, %r2538, 1;
	shf.r.wrap.b32 	%r2543, %r2538, %r2539, 1;
	mov.b64 	%rd3808, {%r2543, %r2542};
	xor.b64  	%rd3809, %rd3808, %rd3807;
	shr.u64 	%rd3810, %rd12041, 7;
	xor.b64  	%rd3811, %rd3809, %rd3810;
	add.s64 	%rd3812, %rd12042, %rd12033;
	add.s64 	%rd3813, %rd3812, %rd3811;
	add.s64 	%rd3814, %rd3813, %rd3806;
	add.s64 	%rd3815, %rd3814, %rd3692;
	xor.b64  	%rd3816, %rd3753, %rd3716;
	and.b64  	%rd3817, %rd3790, %rd3816;
	xor.b64  	%rd3818, %rd3817, %rd3716;
	add.s64 	%rd3819, %rd3815, %rd3818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2544,%dummy}, %rd3790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd3790;
	}
	shf.r.wrap.b32 	%r2546, %r2545, %r2544, 14;
	shf.r.wrap.b32 	%r2547, %r2544, %r2545, 14;
	mov.b64 	%rd3820, {%r2547, %r2546};
	shf.r.wrap.b32 	%r2548, %r2545, %r2544, 18;
	shf.r.wrap.b32 	%r2549, %r2544, %r2545, 18;
	mov.b64 	%rd3821, {%r2549, %r2548};
	xor.b64  	%rd3822, %rd3820, %rd3821;
	shf.l.wrap.b32 	%r2550, %r2544, %r2545, 23;
	shf.l.wrap.b32 	%r2551, %r2545, %r2544, 23;
	mov.b64 	%rd3823, {%r2551, %r2550};
	xor.b64  	%rd3824, %rd3822, %rd3823;
	add.s64 	%rd3825, %rd3819, %rd3824;
	add.s64 	%rd3826, %rd3825, 1135362057144423861;
	add.s64 	%rd3827, %rd3826, %rd3703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2552,%dummy}, %rd3801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd3801;
	}
	shf.r.wrap.b32 	%r2554, %r2553, %r2552, 28;
	shf.r.wrap.b32 	%r2555, %r2552, %r2553, 28;
	mov.b64 	%rd3828, {%r2555, %r2554};
	shf.l.wrap.b32 	%r2556, %r2552, %r2553, 30;
	shf.l.wrap.b32 	%r2557, %r2553, %r2552, 30;
	mov.b64 	%rd3829, {%r2557, %r2556};
	xor.b64  	%rd3830, %rd3828, %rd3829;
	shf.l.wrap.b32 	%r2558, %r2552, %r2553, 25;
	shf.l.wrap.b32 	%r2559, %r2553, %r2552, 25;
	mov.b64 	%rd3831, {%r2559, %r2558};
	xor.b64  	%rd3832, %rd3830, %rd3831;
	and.b64  	%rd3833, %rd3801, %rd3764;
	or.b64  	%rd3834, %rd3801, %rd3764;
	and.b64  	%rd3835, %rd3834, %rd3727;
	or.b64  	%rd3836, %rd3835, %rd3833;
	add.s64 	%rd3837, %rd3836, %rd3832;
	add.s64 	%rd3838, %rd3837, %rd3826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd3777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd3777;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 19;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 19;
	mov.b64 	%rd3839, {%r2563, %r2562};
	shf.l.wrap.b32 	%r2564, %r2560, %r2561, 3;
	shf.l.wrap.b32 	%r2565, %r2561, %r2560, 3;
	mov.b64 	%rd3840, {%r2565, %r2564};
	xor.b64  	%rd3841, %rd3839, %rd3840;
	shr.u64 	%rd3842, %rd3777, 6;
	xor.b64  	%rd3843, %rd3841, %rd3842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2566,%dummy}, %rd12040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2567}, %rd12040;
	}
	shf.r.wrap.b32 	%r2568, %r2567, %r2566, 8;
	shf.r.wrap.b32 	%r2569, %r2566, %r2567, 8;
	mov.b64 	%rd3844, {%r2569, %r2568};
	shf.r.wrap.b32 	%r2570, %r2567, %r2566, 1;
	shf.r.wrap.b32 	%r2571, %r2566, %r2567, 1;
	mov.b64 	%rd3845, {%r2571, %r2570};
	xor.b64  	%rd3846, %rd3845, %rd3844;
	shr.u64 	%rd3847, %rd12040, 7;
	xor.b64  	%rd3848, %rd3846, %rd3847;
	add.s64 	%rd3849, %rd12041, %rd12032;
	add.s64 	%rd3850, %rd3849, %rd3848;
	add.s64 	%rd3851, %rd3850, %rd3843;
	add.s64 	%rd3852, %rd3851, %rd3716;
	xor.b64  	%rd3853, %rd3790, %rd3753;
	and.b64  	%rd3854, %rd3827, %rd3853;
	xor.b64  	%rd3855, %rd3854, %rd3753;
	add.s64 	%rd3856, %rd3852, %rd3855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2572,%dummy}, %rd3827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2573}, %rd3827;
	}
	shf.r.wrap.b32 	%r2574, %r2573, %r2572, 14;
	shf.r.wrap.b32 	%r2575, %r2572, %r2573, 14;
	mov.b64 	%rd3857, {%r2575, %r2574};
	shf.r.wrap.b32 	%r2576, %r2573, %r2572, 18;
	shf.r.wrap.b32 	%r2577, %r2572, %r2573, 18;
	mov.b64 	%rd3858, {%r2577, %r2576};
	xor.b64  	%rd3859, %rd3857, %rd3858;
	shf.l.wrap.b32 	%r2578, %r2572, %r2573, 23;
	shf.l.wrap.b32 	%r2579, %r2573, %r2572, 23;
	mov.b64 	%rd3860, {%r2579, %r2578};
	xor.b64  	%rd3861, %rd3859, %rd3860;
	add.s64 	%rd3862, %rd3856, %rd3861;
	add.s64 	%rd3863, %rd3862, 2597628984639134821;
	add.s64 	%rd3864, %rd3863, %rd3727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2580,%dummy}, %rd3838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2581}, %rd3838;
	}
	shf.r.wrap.b32 	%r2582, %r2581, %r2580, 28;
	shf.r.wrap.b32 	%r2583, %r2580, %r2581, 28;
	mov.b64 	%rd3865, {%r2583, %r2582};
	shf.l.wrap.b32 	%r2584, %r2580, %r2581, 30;
	shf.l.wrap.b32 	%r2585, %r2581, %r2580, 30;
	mov.b64 	%rd3866, {%r2585, %r2584};
	xor.b64  	%rd3867, %rd3865, %rd3866;
	shf.l.wrap.b32 	%r2586, %r2580, %r2581, 25;
	shf.l.wrap.b32 	%r2587, %r2581, %r2580, 25;
	mov.b64 	%rd3868, {%r2587, %r2586};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	and.b64  	%rd3870, %rd3838, %rd3801;
	or.b64  	%rd3871, %rd3838, %rd3801;
	and.b64  	%rd3872, %rd3871, %rd3764;
	or.b64  	%rd3873, %rd3872, %rd3870;
	add.s64 	%rd3874, %rd3873, %rd3869;
	add.s64 	%rd3875, %rd3874, %rd3863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2588,%dummy}, %rd3814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2589}, %rd3814;
	}
	shf.r.wrap.b32 	%r2590, %r2589, %r2588, 19;
	shf.r.wrap.b32 	%r2591, %r2588, %r2589, 19;
	mov.b64 	%rd3876, {%r2591, %r2590};
	shf.l.wrap.b32 	%r2592, %r2588, %r2589, 3;
	shf.l.wrap.b32 	%r2593, %r2589, %r2588, 3;
	mov.b64 	%rd3877, {%r2593, %r2592};
	xor.b64  	%rd3878, %rd3876, %rd3877;
	shr.u64 	%rd3879, %rd3814, 6;
	xor.b64  	%rd3880, %rd3878, %rd3879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2594,%dummy}, %rd12039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2595}, %rd12039;
	}
	shf.r.wrap.b32 	%r2596, %r2595, %r2594, 8;
	shf.r.wrap.b32 	%r2597, %r2594, %r2595, 8;
	mov.b64 	%rd3881, {%r2597, %r2596};
	shf.r.wrap.b32 	%r2598, %r2595, %r2594, 1;
	shf.r.wrap.b32 	%r2599, %r2594, %r2595, 1;
	mov.b64 	%rd3882, {%r2599, %r2598};
	xor.b64  	%rd3883, %rd3882, %rd3881;
	shr.u64 	%rd3884, %rd12039, 7;
	xor.b64  	%rd3885, %rd3883, %rd3884;
	add.s64 	%rd3886, %rd12040, %rd12031;
	add.s64 	%rd3887, %rd3886, %rd3885;
	add.s64 	%rd3888, %rd3887, %rd3880;
	add.s64 	%rd3889, %rd3888, %rd3753;
	xor.b64  	%rd3890, %rd3827, %rd3790;
	and.b64  	%rd3891, %rd3864, %rd3890;
	xor.b64  	%rd3892, %rd3891, %rd3790;
	add.s64 	%rd3893, %rd3889, %rd3892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2600,%dummy}, %rd3864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2601}, %rd3864;
	}
	shf.r.wrap.b32 	%r2602, %r2601, %r2600, 14;
	shf.r.wrap.b32 	%r2603, %r2600, %r2601, 14;
	mov.b64 	%rd3894, {%r2603, %r2602};
	shf.r.wrap.b32 	%r2604, %r2601, %r2600, 18;
	shf.r.wrap.b32 	%r2605, %r2600, %r2601, 18;
	mov.b64 	%rd3895, {%r2605, %r2604};
	xor.b64  	%rd3896, %rd3894, %rd3895;
	shf.l.wrap.b32 	%r2606, %r2600, %r2601, 23;
	shf.l.wrap.b32 	%r2607, %r2601, %r2600, 23;
	mov.b64 	%rd3897, {%r2607, %r2606};
	xor.b64  	%rd3898, %rd3896, %rd3897;
	add.s64 	%rd3899, %rd3893, %rd3898;
	add.s64 	%rd3900, %rd3899, 3308224258029322869;
	add.s64 	%rd3901, %rd3900, %rd3764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd3875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2609}, %rd3875;
	}
	shf.r.wrap.b32 	%r2610, %r2609, %r2608, 28;
	shf.r.wrap.b32 	%r2611, %r2608, %r2609, 28;
	mov.b64 	%rd3902, {%r2611, %r2610};
	shf.l.wrap.b32 	%r2612, %r2608, %r2609, 30;
	shf.l.wrap.b32 	%r2613, %r2609, %r2608, 30;
	mov.b64 	%rd3903, {%r2613, %r2612};
	xor.b64  	%rd3904, %rd3902, %rd3903;
	shf.l.wrap.b32 	%r2614, %r2608, %r2609, 25;
	shf.l.wrap.b32 	%r2615, %r2609, %r2608, 25;
	mov.b64 	%rd3905, {%r2615, %r2614};
	xor.b64  	%rd3906, %rd3904, %rd3905;
	and.b64  	%rd3907, %rd3875, %rd3838;
	or.b64  	%rd3908, %rd3875, %rd3838;
	and.b64  	%rd3909, %rd3908, %rd3801;
	or.b64  	%rd3910, %rd3909, %rd3907;
	add.s64 	%rd3911, %rd3910, %rd3906;
	add.s64 	%rd3912, %rd3911, %rd3900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2616,%dummy}, %rd3851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2617}, %rd3851;
	}
	shf.r.wrap.b32 	%r2618, %r2617, %r2616, 19;
	shf.r.wrap.b32 	%r2619, %r2616, %r2617, 19;
	mov.b64 	%rd3913, {%r2619, %r2618};
	shf.l.wrap.b32 	%r2620, %r2616, %r2617, 3;
	shf.l.wrap.b32 	%r2621, %r2617, %r2616, 3;
	mov.b64 	%rd3914, {%r2621, %r2620};
	xor.b64  	%rd3915, %rd3913, %rd3914;
	shr.u64 	%rd3916, %rd3851, 6;
	xor.b64  	%rd3917, %rd3915, %rd3916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2622,%dummy}, %rd12038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2623}, %rd12038;
	}
	shf.r.wrap.b32 	%r2624, %r2623, %r2622, 8;
	shf.r.wrap.b32 	%r2625, %r2622, %r2623, 8;
	mov.b64 	%rd3918, {%r2625, %r2624};
	shf.r.wrap.b32 	%r2626, %r2623, %r2622, 1;
	shf.r.wrap.b32 	%r2627, %r2622, %r2623, 1;
	mov.b64 	%rd3919, {%r2627, %r2626};
	xor.b64  	%rd3920, %rd3919, %rd3918;
	shr.u64 	%rd3921, %rd12038, 7;
	xor.b64  	%rd3922, %rd3920, %rd3921;
	add.s64 	%rd3923, %rd12039, %rd12030;
	add.s64 	%rd3924, %rd3923, %rd3922;
	add.s64 	%rd3925, %rd3924, %rd3917;
	add.s64 	%rd3926, %rd3925, %rd3790;
	xor.b64  	%rd3927, %rd3864, %rd3827;
	and.b64  	%rd3928, %rd3901, %rd3927;
	xor.b64  	%rd3929, %rd3928, %rd3827;
	add.s64 	%rd3930, %rd3926, %rd3929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2628,%dummy}, %rd3901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2629}, %rd3901;
	}
	shf.r.wrap.b32 	%r2630, %r2629, %r2628, 14;
	shf.r.wrap.b32 	%r2631, %r2628, %r2629, 14;
	mov.b64 	%rd3931, {%r2631, %r2630};
	shf.r.wrap.b32 	%r2632, %r2629, %r2628, 18;
	shf.r.wrap.b32 	%r2633, %r2628, %r2629, 18;
	mov.b64 	%rd3932, {%r2633, %r2632};
	xor.b64  	%rd3933, %rd3931, %rd3932;
	shf.l.wrap.b32 	%r2634, %r2628, %r2629, 23;
	shf.l.wrap.b32 	%r2635, %r2629, %r2628, 23;
	mov.b64 	%rd3934, {%r2635, %r2634};
	xor.b64  	%rd3935, %rd3933, %rd3934;
	add.s64 	%rd3936, %rd3930, %rd3935;
	add.s64 	%rd3937, %rd3936, 5365058923640841347;
	add.s64 	%rd3938, %rd3937, %rd3801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2636,%dummy}, %rd3912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2637}, %rd3912;
	}
	shf.r.wrap.b32 	%r2638, %r2637, %r2636, 28;
	shf.r.wrap.b32 	%r2639, %r2636, %r2637, 28;
	mov.b64 	%rd3939, {%r2639, %r2638};
	shf.l.wrap.b32 	%r2640, %r2636, %r2637, 30;
	shf.l.wrap.b32 	%r2641, %r2637, %r2636, 30;
	mov.b64 	%rd3940, {%r2641, %r2640};
	xor.b64  	%rd3941, %rd3939, %rd3940;
	shf.l.wrap.b32 	%r2642, %r2636, %r2637, 25;
	shf.l.wrap.b32 	%r2643, %r2637, %r2636, 25;
	mov.b64 	%rd3942, {%r2643, %r2642};
	xor.b64  	%rd3943, %rd3941, %rd3942;
	and.b64  	%rd3944, %rd3912, %rd3875;
	or.b64  	%rd3945, %rd3912, %rd3875;
	and.b64  	%rd3946, %rd3945, %rd3838;
	or.b64  	%rd3947, %rd3946, %rd3944;
	add.s64 	%rd3948, %rd3947, %rd3943;
	add.s64 	%rd3949, %rd3948, %rd3937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd3888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd3888;
	}
	shf.r.wrap.b32 	%r2646, %r2645, %r2644, 19;
	shf.r.wrap.b32 	%r2647, %r2644, %r2645, 19;
	mov.b64 	%rd3950, {%r2647, %r2646};
	shf.l.wrap.b32 	%r2648, %r2644, %r2645, 3;
	shf.l.wrap.b32 	%r2649, %r2645, %r2644, 3;
	mov.b64 	%rd3951, {%r2649, %r2648};
	xor.b64  	%rd3952, %rd3950, %rd3951;
	shr.u64 	%rd3953, %rd3888, 6;
	xor.b64  	%rd3954, %rd3952, %rd3953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2650,%dummy}, %rd12037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2651}, %rd12037;
	}
	shf.r.wrap.b32 	%r2652, %r2651, %r2650, 8;
	shf.r.wrap.b32 	%r2653, %r2650, %r2651, 8;
	mov.b64 	%rd3955, {%r2653, %r2652};
	shf.r.wrap.b32 	%r2654, %r2651, %r2650, 1;
	shf.r.wrap.b32 	%r2655, %r2650, %r2651, 1;
	mov.b64 	%rd3956, {%r2655, %r2654};
	xor.b64  	%rd3957, %rd3956, %rd3955;
	shr.u64 	%rd3958, %rd12037, 7;
	xor.b64  	%rd3959, %rd3957, %rd3958;
	add.s64 	%rd3960, %rd12038, %rd12029;
	add.s64 	%rd3961, %rd3960, %rd3959;
	add.s64 	%rd3962, %rd3961, %rd3954;
	add.s64 	%rd3963, %rd3962, %rd3827;
	xor.b64  	%rd3964, %rd3901, %rd3864;
	and.b64  	%rd3965, %rd3938, %rd3964;
	xor.b64  	%rd3966, %rd3965, %rd3864;
	add.s64 	%rd3967, %rd3963, %rd3966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2656,%dummy}, %rd3938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd3938;
	}
	shf.r.wrap.b32 	%r2658, %r2657, %r2656, 14;
	shf.r.wrap.b32 	%r2659, %r2656, %r2657, 14;
	mov.b64 	%rd3968, {%r2659, %r2658};
	shf.r.wrap.b32 	%r2660, %r2657, %r2656, 18;
	shf.r.wrap.b32 	%r2661, %r2656, %r2657, 18;
	mov.b64 	%rd3969, {%r2661, %r2660};
	xor.b64  	%rd3970, %rd3968, %rd3969;
	shf.l.wrap.b32 	%r2662, %r2656, %r2657, 23;
	shf.l.wrap.b32 	%r2663, %r2657, %r2656, 23;
	mov.b64 	%rd3971, {%r2663, %r2662};
	xor.b64  	%rd3972, %rd3970, %rd3971;
	add.s64 	%rd3973, %rd3967, %rd3972;
	add.s64 	%rd3974, %rd3973, 6679025012923562964;
	add.s64 	%rd3975, %rd3974, %rd3838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2664,%dummy}, %rd3949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd3949;
	}
	shf.r.wrap.b32 	%r2666, %r2665, %r2664, 28;
	shf.r.wrap.b32 	%r2667, %r2664, %r2665, 28;
	mov.b64 	%rd3976, {%r2667, %r2666};
	shf.l.wrap.b32 	%r2668, %r2664, %r2665, 30;
	shf.l.wrap.b32 	%r2669, %r2665, %r2664, 30;
	mov.b64 	%rd3977, {%r2669, %r2668};
	xor.b64  	%rd3978, %rd3976, %rd3977;
	shf.l.wrap.b32 	%r2670, %r2664, %r2665, 25;
	shf.l.wrap.b32 	%r2671, %r2665, %r2664, 25;
	mov.b64 	%rd3979, {%r2671, %r2670};
	xor.b64  	%rd3980, %rd3978, %rd3979;
	and.b64  	%rd3981, %rd3949, %rd3912;
	or.b64  	%rd3982, %rd3949, %rd3912;
	and.b64  	%rd3983, %rd3982, %rd3875;
	or.b64  	%rd3984, %rd3983, %rd3981;
	add.s64 	%rd3985, %rd3984, %rd3980;
	add.s64 	%rd3986, %rd3985, %rd3974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2672,%dummy}, %rd3925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2673}, %rd3925;
	}
	shf.r.wrap.b32 	%r2674, %r2673, %r2672, 19;
	shf.r.wrap.b32 	%r2675, %r2672, %r2673, 19;
	mov.b64 	%rd3987, {%r2675, %r2674};
	shf.l.wrap.b32 	%r2676, %r2672, %r2673, 3;
	shf.l.wrap.b32 	%r2677, %r2673, %r2672, 3;
	mov.b64 	%rd3988, {%r2677, %r2676};
	xor.b64  	%rd3989, %rd3987, %rd3988;
	shr.u64 	%rd3990, %rd3925, 6;
	xor.b64  	%rd3991, %rd3989, %rd3990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2678,%dummy}, %rd12036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2679}, %rd12036;
	}
	shf.r.wrap.b32 	%r2680, %r2679, %r2678, 8;
	shf.r.wrap.b32 	%r2681, %r2678, %r2679, 8;
	mov.b64 	%rd3992, {%r2681, %r2680};
	shf.r.wrap.b32 	%r2682, %r2679, %r2678, 1;
	shf.r.wrap.b32 	%r2683, %r2678, %r2679, 1;
	mov.b64 	%rd3993, {%r2683, %r2682};
	xor.b64  	%rd3994, %rd3993, %rd3992;
	shr.u64 	%rd3995, %rd12036, 7;
	xor.b64  	%rd3996, %rd3994, %rd3995;
	add.s64 	%rd3997, %rd3996, %rd12037;
	add.s64 	%rd3998, %rd3997, %rd3740;
	add.s64 	%rd3999, %rd3998, %rd3991;
	add.s64 	%rd4000, %rd3999, %rd3864;
	xor.b64  	%rd4001, %rd3938, %rd3901;
	and.b64  	%rd4002, %rd3975, %rd4001;
	xor.b64  	%rd4003, %rd4002, %rd3901;
	add.s64 	%rd4004, %rd4000, %rd4003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2684,%dummy}, %rd3975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd3975;
	}
	shf.r.wrap.b32 	%r2686, %r2685, %r2684, 14;
	shf.r.wrap.b32 	%r2687, %r2684, %r2685, 14;
	mov.b64 	%rd4005, {%r2687, %r2686};
	shf.r.wrap.b32 	%r2688, %r2685, %r2684, 18;
	shf.r.wrap.b32 	%r2689, %r2684, %r2685, 18;
	mov.b64 	%rd4006, {%r2689, %r2688};
	xor.b64  	%rd4007, %rd4005, %rd4006;
	shf.l.wrap.b32 	%r2690, %r2684, %r2685, 23;
	shf.l.wrap.b32 	%r2691, %r2685, %r2684, 23;
	mov.b64 	%rd4008, {%r2691, %r2690};
	xor.b64  	%rd4009, %rd4007, %rd4008;
	add.s64 	%rd4010, %rd4004, %rd4009;
	add.s64 	%rd4011, %rd4010, 8573033837759648693;
	add.s64 	%rd4012, %rd4011, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2692,%dummy}, %rd3986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2693}, %rd3986;
	}
	shf.r.wrap.b32 	%r2694, %r2693, %r2692, 28;
	shf.r.wrap.b32 	%r2695, %r2692, %r2693, 28;
	mov.b64 	%rd4013, {%r2695, %r2694};
	shf.l.wrap.b32 	%r2696, %r2692, %r2693, 30;
	shf.l.wrap.b32 	%r2697, %r2693, %r2692, 30;
	mov.b64 	%rd4014, {%r2697, %r2696};
	xor.b64  	%rd4015, %rd4013, %rd4014;
	shf.l.wrap.b32 	%r2698, %r2692, %r2693, 25;
	shf.l.wrap.b32 	%r2699, %r2693, %r2692, 25;
	mov.b64 	%rd4016, {%r2699, %r2698};
	xor.b64  	%rd4017, %rd4015, %rd4016;
	and.b64  	%rd4018, %rd3986, %rd3949;
	or.b64  	%rd4019, %rd3986, %rd3949;
	and.b64  	%rd4020, %rd4019, %rd3912;
	or.b64  	%rd4021, %rd4020, %rd4018;
	add.s64 	%rd4022, %rd4021, %rd4017;
	add.s64 	%rd4023, %rd4022, %rd4011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2700,%dummy}, %rd3962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2701}, %rd3962;
	}
	shf.r.wrap.b32 	%r2702, %r2701, %r2700, 19;
	shf.r.wrap.b32 	%r2703, %r2700, %r2701, 19;
	mov.b64 	%rd4024, {%r2703, %r2702};
	shf.l.wrap.b32 	%r2704, %r2700, %r2701, 3;
	shf.l.wrap.b32 	%r2705, %r2701, %r2700, 3;
	mov.b64 	%rd4025, {%r2705, %r2704};
	xor.b64  	%rd4026, %rd4024, %rd4025;
	shr.u64 	%rd4027, %rd3962, 6;
	xor.b64  	%rd4028, %rd4026, %rd4027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2706,%dummy}, %rd12035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2707}, %rd12035;
	}
	shf.r.wrap.b32 	%r2708, %r2707, %r2706, 8;
	shf.r.wrap.b32 	%r2709, %r2706, %r2707, 8;
	mov.b64 	%rd4029, {%r2709, %r2708};
	shf.r.wrap.b32 	%r2710, %r2707, %r2706, 1;
	shf.r.wrap.b32 	%r2711, %r2706, %r2707, 1;
	mov.b64 	%rd4030, {%r2711, %r2710};
	xor.b64  	%rd4031, %rd4030, %rd4029;
	shr.u64 	%rd4032, %rd12035, 7;
	xor.b64  	%rd4033, %rd4031, %rd4032;
	add.s64 	%rd4034, %rd4033, %rd12036;
	add.s64 	%rd4035, %rd4034, %rd3777;
	add.s64 	%rd4036, %rd4035, %rd4028;
	add.s64 	%rd4037, %rd4036, %rd3901;
	xor.b64  	%rd4038, %rd3975, %rd3938;
	and.b64  	%rd4039, %rd4012, %rd4038;
	xor.b64  	%rd4040, %rd4039, %rd3938;
	add.s64 	%rd4041, %rd4037, %rd4040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2712,%dummy}, %rd4012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd4012;
	}
	shf.r.wrap.b32 	%r2714, %r2713, %r2712, 14;
	shf.r.wrap.b32 	%r2715, %r2712, %r2713, 14;
	mov.b64 	%rd4042, {%r2715, %r2714};
	shf.r.wrap.b32 	%r2716, %r2713, %r2712, 18;
	shf.r.wrap.b32 	%r2717, %r2712, %r2713, 18;
	mov.b64 	%rd4043, {%r2717, %r2716};
	xor.b64  	%rd4044, %rd4042, %rd4043;
	shf.l.wrap.b32 	%r2718, %r2712, %r2713, 23;
	shf.l.wrap.b32 	%r2719, %r2713, %r2712, 23;
	mov.b64 	%rd4045, {%r2719, %r2718};
	xor.b64  	%rd4046, %rd4044, %rd4045;
	add.s64 	%rd4047, %rd4041, %rd4046;
	add.s64 	%rd4048, %rd4047, -7476448914759557205;
	add.s64 	%rd4049, %rd4048, %rd3912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd4023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd4023;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 28;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 28;
	mov.b64 	%rd4050, {%r2723, %r2722};
	shf.l.wrap.b32 	%r2724, %r2720, %r2721, 30;
	shf.l.wrap.b32 	%r2725, %r2721, %r2720, 30;
	mov.b64 	%rd4051, {%r2725, %r2724};
	xor.b64  	%rd4052, %rd4050, %rd4051;
	shf.l.wrap.b32 	%r2726, %r2720, %r2721, 25;
	shf.l.wrap.b32 	%r2727, %r2721, %r2720, 25;
	mov.b64 	%rd4053, {%r2727, %r2726};
	xor.b64  	%rd4054, %rd4052, %rd4053;
	and.b64  	%rd4055, %rd4023, %rd3986;
	or.b64  	%rd4056, %rd4023, %rd3986;
	and.b64  	%rd4057, %rd4056, %rd3949;
	or.b64  	%rd4058, %rd4057, %rd4055;
	add.s64 	%rd4059, %rd4058, %rd4054;
	add.s64 	%rd4060, %rd4059, %rd4048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd3999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd3999;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 19;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 19;
	mov.b64 	%rd4061, {%r2731, %r2730};
	shf.l.wrap.b32 	%r2732, %r2728, %r2729, 3;
	shf.l.wrap.b32 	%r2733, %r2729, %r2728, 3;
	mov.b64 	%rd4062, {%r2733, %r2732};
	xor.b64  	%rd4063, %rd4061, %rd4062;
	shr.u64 	%rd4064, %rd3999, 6;
	xor.b64  	%rd4065, %rd4063, %rd4064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2734,%dummy}, %rd12034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2735}, %rd12034;
	}
	shf.r.wrap.b32 	%r2736, %r2735, %r2734, 8;
	shf.r.wrap.b32 	%r2737, %r2734, %r2735, 8;
	mov.b64 	%rd4066, {%r2737, %r2736};
	shf.r.wrap.b32 	%r2738, %r2735, %r2734, 1;
	shf.r.wrap.b32 	%r2739, %r2734, %r2735, 1;
	mov.b64 	%rd4067, {%r2739, %r2738};
	xor.b64  	%rd4068, %rd4067, %rd4066;
	shr.u64 	%rd4069, %rd12034, 7;
	xor.b64  	%rd4070, %rd4068, %rd4069;
	add.s64 	%rd4071, %rd4070, %rd12035;
	add.s64 	%rd4072, %rd4071, %rd3814;
	add.s64 	%rd4073, %rd4072, %rd4065;
	add.s64 	%rd4074, %rd4073, %rd3938;
	xor.b64  	%rd4075, %rd4012, %rd3975;
	and.b64  	%rd4076, %rd4049, %rd4075;
	xor.b64  	%rd4077, %rd4076, %rd3975;
	add.s64 	%rd4078, %rd4074, %rd4077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2740,%dummy}, %rd4049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2741}, %rd4049;
	}
	shf.r.wrap.b32 	%r2742, %r2741, %r2740, 14;
	shf.r.wrap.b32 	%r2743, %r2740, %r2741, 14;
	mov.b64 	%rd4079, {%r2743, %r2742};
	shf.r.wrap.b32 	%r2744, %r2741, %r2740, 18;
	shf.r.wrap.b32 	%r2745, %r2740, %r2741, 18;
	mov.b64 	%rd4080, {%r2745, %r2744};
	xor.b64  	%rd4081, %rd4079, %rd4080;
	shf.l.wrap.b32 	%r2746, %r2740, %r2741, 23;
	shf.l.wrap.b32 	%r2747, %r2741, %r2740, 23;
	mov.b64 	%rd4082, {%r2747, %r2746};
	xor.b64  	%rd4083, %rd4081, %rd4082;
	add.s64 	%rd4084, %rd4078, %rd4083;
	add.s64 	%rd4085, %rd4084, -6327057829258317296;
	add.s64 	%rd4086, %rd4085, %rd3949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2748,%dummy}, %rd4060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2749}, %rd4060;
	}
	shf.r.wrap.b32 	%r2750, %r2749, %r2748, 28;
	shf.r.wrap.b32 	%r2751, %r2748, %r2749, 28;
	mov.b64 	%rd4087, {%r2751, %r2750};
	shf.l.wrap.b32 	%r2752, %r2748, %r2749, 30;
	shf.l.wrap.b32 	%r2753, %r2749, %r2748, 30;
	mov.b64 	%rd4088, {%r2753, %r2752};
	xor.b64  	%rd4089, %rd4087, %rd4088;
	shf.l.wrap.b32 	%r2754, %r2748, %r2749, 25;
	shf.l.wrap.b32 	%r2755, %r2749, %r2748, 25;
	mov.b64 	%rd4090, {%r2755, %r2754};
	xor.b64  	%rd4091, %rd4089, %rd4090;
	and.b64  	%rd4092, %rd4060, %rd4023;
	or.b64  	%rd4093, %rd4060, %rd4023;
	and.b64  	%rd4094, %rd4093, %rd3986;
	or.b64  	%rd4095, %rd4094, %rd4092;
	add.s64 	%rd4096, %rd4095, %rd4091;
	add.s64 	%rd4097, %rd4096, %rd4085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2756,%dummy}, %rd4036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2757}, %rd4036;
	}
	shf.r.wrap.b32 	%r2758, %r2757, %r2756, 19;
	shf.r.wrap.b32 	%r2759, %r2756, %r2757, 19;
	mov.b64 	%rd4098, {%r2759, %r2758};
	shf.l.wrap.b32 	%r2760, %r2756, %r2757, 3;
	shf.l.wrap.b32 	%r2761, %r2757, %r2756, 3;
	mov.b64 	%rd4099, {%r2761, %r2760};
	xor.b64  	%rd4100, %rd4098, %rd4099;
	shr.u64 	%rd4101, %rd4036, 6;
	xor.b64  	%rd4102, %rd4100, %rd4101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd12033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd12033;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 8;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 8;
	mov.b64 	%rd4103, {%r2765, %r2764};
	shf.r.wrap.b32 	%r2766, %r2763, %r2762, 1;
	shf.r.wrap.b32 	%r2767, %r2762, %r2763, 1;
	mov.b64 	%rd4104, {%r2767, %r2766};
	xor.b64  	%rd4105, %rd4104, %rd4103;
	shr.u64 	%rd4106, %rd12033, 7;
	xor.b64  	%rd4107, %rd4105, %rd4106;
	add.s64 	%rd4108, %rd4107, %rd12034;
	add.s64 	%rd4109, %rd4108, %rd3851;
	add.s64 	%rd4110, %rd4109, %rd4102;
	add.s64 	%rd4111, %rd4110, %rd3975;
	xor.b64  	%rd4112, %rd4049, %rd4012;
	and.b64  	%rd4113, %rd4086, %rd4112;
	xor.b64  	%rd4114, %rd4113, %rd4012;
	add.s64 	%rd4115, %rd4111, %rd4114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2768,%dummy}, %rd4086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2769}, %rd4086;
	}
	shf.r.wrap.b32 	%r2770, %r2769, %r2768, 14;
	shf.r.wrap.b32 	%r2771, %r2768, %r2769, 14;
	mov.b64 	%rd4116, {%r2771, %r2770};
	shf.r.wrap.b32 	%r2772, %r2769, %r2768, 18;
	shf.r.wrap.b32 	%r2773, %r2768, %r2769, 18;
	mov.b64 	%rd4117, {%r2773, %r2772};
	xor.b64  	%rd4118, %rd4116, %rd4117;
	shf.l.wrap.b32 	%r2774, %r2768, %r2769, 23;
	shf.l.wrap.b32 	%r2775, %r2769, %r2768, 23;
	mov.b64 	%rd4119, {%r2775, %r2774};
	xor.b64  	%rd4120, %rd4118, %rd4119;
	add.s64 	%rd4121, %rd4115, %rd4120;
	add.s64 	%rd4122, %rd4121, -5763719355590565569;
	add.s64 	%rd4123, %rd4122, %rd3986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2776,%dummy}, %rd4097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2777}, %rd4097;
	}
	shf.r.wrap.b32 	%r2778, %r2777, %r2776, 28;
	shf.r.wrap.b32 	%r2779, %r2776, %r2777, 28;
	mov.b64 	%rd4124, {%r2779, %r2778};
	shf.l.wrap.b32 	%r2780, %r2776, %r2777, 30;
	shf.l.wrap.b32 	%r2781, %r2777, %r2776, 30;
	mov.b64 	%rd4125, {%r2781, %r2780};
	xor.b64  	%rd4126, %rd4124, %rd4125;
	shf.l.wrap.b32 	%r2782, %r2776, %r2777, 25;
	shf.l.wrap.b32 	%r2783, %r2777, %r2776, 25;
	mov.b64 	%rd4127, {%r2783, %r2782};
	xor.b64  	%rd4128, %rd4126, %rd4127;
	and.b64  	%rd4129, %rd4097, %rd4060;
	or.b64  	%rd4130, %rd4097, %rd4060;
	and.b64  	%rd4131, %rd4130, %rd4023;
	or.b64  	%rd4132, %rd4131, %rd4129;
	add.s64 	%rd4133, %rd4132, %rd4128;
	add.s64 	%rd4134, %rd4133, %rd4122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2784,%dummy}, %rd4073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2785}, %rd4073;
	}
	shf.r.wrap.b32 	%r2786, %r2785, %r2784, 19;
	shf.r.wrap.b32 	%r2787, %r2784, %r2785, 19;
	mov.b64 	%rd4135, {%r2787, %r2786};
	shf.l.wrap.b32 	%r2788, %r2784, %r2785, 3;
	shf.l.wrap.b32 	%r2789, %r2785, %r2784, 3;
	mov.b64 	%rd4136, {%r2789, %r2788};
	xor.b64  	%rd4137, %rd4135, %rd4136;
	shr.u64 	%rd4138, %rd4073, 6;
	xor.b64  	%rd4139, %rd4137, %rd4138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2790,%dummy}, %rd12032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2791}, %rd12032;
	}
	shf.r.wrap.b32 	%r2792, %r2791, %r2790, 8;
	shf.r.wrap.b32 	%r2793, %r2790, %r2791, 8;
	mov.b64 	%rd4140, {%r2793, %r2792};
	shf.r.wrap.b32 	%r2794, %r2791, %r2790, 1;
	shf.r.wrap.b32 	%r2795, %r2790, %r2791, 1;
	mov.b64 	%rd4141, {%r2795, %r2794};
	xor.b64  	%rd4142, %rd4141, %rd4140;
	shr.u64 	%rd4143, %rd12032, 7;
	xor.b64  	%rd4144, %rd4142, %rd4143;
	add.s64 	%rd4145, %rd4144, %rd12033;
	add.s64 	%rd4146, %rd4145, %rd3888;
	add.s64 	%rd4147, %rd4146, %rd4139;
	add.s64 	%rd4148, %rd4147, %rd4012;
	xor.b64  	%rd4149, %rd4086, %rd4049;
	and.b64  	%rd4150, %rd4123, %rd4149;
	xor.b64  	%rd4151, %rd4150, %rd4049;
	add.s64 	%rd4152, %rd4148, %rd4151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2796,%dummy}, %rd4123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2797}, %rd4123;
	}
	shf.r.wrap.b32 	%r2798, %r2797, %r2796, 14;
	shf.r.wrap.b32 	%r2799, %r2796, %r2797, 14;
	mov.b64 	%rd4153, {%r2799, %r2798};
	shf.r.wrap.b32 	%r2800, %r2797, %r2796, 18;
	shf.r.wrap.b32 	%r2801, %r2796, %r2797, 18;
	mov.b64 	%rd4154, {%r2801, %r2800};
	xor.b64  	%rd4155, %rd4153, %rd4154;
	shf.l.wrap.b32 	%r2802, %r2796, %r2797, 23;
	shf.l.wrap.b32 	%r2803, %r2797, %r2796, 23;
	mov.b64 	%rd4156, {%r2803, %r2802};
	xor.b64  	%rd4157, %rd4155, %rd4156;
	add.s64 	%rd4158, %rd4152, %rd4157;
	add.s64 	%rd4159, %rd4158, -4658551843659510044;
	add.s64 	%rd4160, %rd4159, %rd4023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2804,%dummy}, %rd4134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd4134;
	}
	shf.r.wrap.b32 	%r2806, %r2805, %r2804, 28;
	shf.r.wrap.b32 	%r2807, %r2804, %r2805, 28;
	mov.b64 	%rd4161, {%r2807, %r2806};
	shf.l.wrap.b32 	%r2808, %r2804, %r2805, 30;
	shf.l.wrap.b32 	%r2809, %r2805, %r2804, 30;
	mov.b64 	%rd4162, {%r2809, %r2808};
	xor.b64  	%rd4163, %rd4161, %rd4162;
	shf.l.wrap.b32 	%r2810, %r2804, %r2805, 25;
	shf.l.wrap.b32 	%r2811, %r2805, %r2804, 25;
	mov.b64 	%rd4164, {%r2811, %r2810};
	xor.b64  	%rd4165, %rd4163, %rd4164;
	and.b64  	%rd4166, %rd4134, %rd4097;
	or.b64  	%rd4167, %rd4134, %rd4097;
	and.b64  	%rd4168, %rd4167, %rd4060;
	or.b64  	%rd4169, %rd4168, %rd4166;
	add.s64 	%rd4170, %rd4169, %rd4165;
	add.s64 	%rd4171, %rd4170, %rd4159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2812,%dummy}, %rd4110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2813}, %rd4110;
	}
	shf.r.wrap.b32 	%r2814, %r2813, %r2812, 19;
	shf.r.wrap.b32 	%r2815, %r2812, %r2813, 19;
	mov.b64 	%rd4172, {%r2815, %r2814};
	shf.l.wrap.b32 	%r2816, %r2812, %r2813, 3;
	shf.l.wrap.b32 	%r2817, %r2813, %r2812, 3;
	mov.b64 	%rd4173, {%r2817, %r2816};
	xor.b64  	%rd4174, %rd4172, %rd4173;
	shr.u64 	%rd4175, %rd4110, 6;
	xor.b64  	%rd4176, %rd4174, %rd4175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd12031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd12031;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 8;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 8;
	mov.b64 	%rd4177, {%r2821, %r2820};
	shf.r.wrap.b32 	%r2822, %r2819, %r2818, 1;
	shf.r.wrap.b32 	%r2823, %r2818, %r2819, 1;
	mov.b64 	%rd4178, {%r2823, %r2822};
	xor.b64  	%rd4179, %rd4178, %rd4177;
	shr.u64 	%rd4180, %rd12031, 7;
	xor.b64  	%rd4181, %rd4179, %rd4180;
	add.s64 	%rd4182, %rd4181, %rd12032;
	add.s64 	%rd4183, %rd4182, %rd3925;
	add.s64 	%rd4184, %rd4183, %rd4176;
	add.s64 	%rd4185, %rd4184, %rd4049;
	xor.b64  	%rd4186, %rd4123, %rd4086;
	and.b64  	%rd4187, %rd4160, %rd4186;
	xor.b64  	%rd4188, %rd4187, %rd4086;
	add.s64 	%rd4189, %rd4185, %rd4188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2824,%dummy}, %rd4160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2825}, %rd4160;
	}
	shf.r.wrap.b32 	%r2826, %r2825, %r2824, 14;
	shf.r.wrap.b32 	%r2827, %r2824, %r2825, 14;
	mov.b64 	%rd4190, {%r2827, %r2826};
	shf.r.wrap.b32 	%r2828, %r2825, %r2824, 18;
	shf.r.wrap.b32 	%r2829, %r2824, %r2825, 18;
	mov.b64 	%rd4191, {%r2829, %r2828};
	xor.b64  	%rd4192, %rd4190, %rd4191;
	shf.l.wrap.b32 	%r2830, %r2824, %r2825, 23;
	shf.l.wrap.b32 	%r2831, %r2825, %r2824, 23;
	mov.b64 	%rd4193, {%r2831, %r2830};
	xor.b64  	%rd4194, %rd4192, %rd4193;
	add.s64 	%rd4195, %rd4189, %rd4194;
	add.s64 	%rd4196, %rd4195, -4116276920077217854;
	add.s64 	%rd4197, %rd4196, %rd4060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2832,%dummy}, %rd4171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2833}, %rd4171;
	}
	shf.r.wrap.b32 	%r2834, %r2833, %r2832, 28;
	shf.r.wrap.b32 	%r2835, %r2832, %r2833, 28;
	mov.b64 	%rd4198, {%r2835, %r2834};
	shf.l.wrap.b32 	%r2836, %r2832, %r2833, 30;
	shf.l.wrap.b32 	%r2837, %r2833, %r2832, 30;
	mov.b64 	%rd4199, {%r2837, %r2836};
	xor.b64  	%rd4200, %rd4198, %rd4199;
	shf.l.wrap.b32 	%r2838, %r2832, %r2833, 25;
	shf.l.wrap.b32 	%r2839, %r2833, %r2832, 25;
	mov.b64 	%rd4201, {%r2839, %r2838};
	xor.b64  	%rd4202, %rd4200, %rd4201;
	and.b64  	%rd4203, %rd4171, %rd4134;
	or.b64  	%rd4204, %rd4171, %rd4134;
	and.b64  	%rd4205, %rd4204, %rd4097;
	or.b64  	%rd4206, %rd4205, %rd4203;
	add.s64 	%rd4207, %rd4206, %rd4202;
	add.s64 	%rd4208, %rd4207, %rd4196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2840,%dummy}, %rd4147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2841}, %rd4147;
	}
	shf.r.wrap.b32 	%r2842, %r2841, %r2840, 19;
	shf.r.wrap.b32 	%r2843, %r2840, %r2841, 19;
	mov.b64 	%rd4209, {%r2843, %r2842};
	shf.l.wrap.b32 	%r2844, %r2840, %r2841, 3;
	shf.l.wrap.b32 	%r2845, %r2841, %r2840, 3;
	mov.b64 	%rd4210, {%r2845, %r2844};
	xor.b64  	%rd4211, %rd4209, %rd4210;
	shr.u64 	%rd4212, %rd4147, 6;
	xor.b64  	%rd4213, %rd4211, %rd4212;
	shf.r.wrap.b32 	%r2846, %r2476, %r2477, 8;
	shf.r.wrap.b32 	%r2847, %r2477, %r2476, 8;
	mov.b64 	%rd4214, {%r2847, %r2846};
	shf.r.wrap.b32 	%r2848, %r2476, %r2477, 1;
	shf.r.wrap.b32 	%r2849, %r2477, %r2476, 1;
	mov.b64 	%rd4215, {%r2849, %r2848};
	xor.b64  	%rd4216, %rd4215, %rd4214;
	shr.u64 	%rd4217, %rd12030, 7;
	xor.b64  	%rd4218, %rd4216, %rd4217;
	add.s64 	%rd4219, %rd4218, %rd12031;
	add.s64 	%rd4220, %rd4219, %rd3962;
	add.s64 	%rd4221, %rd4220, %rd4213;
	add.s64 	%rd4222, %rd4221, %rd4086;
	xor.b64  	%rd4223, %rd4160, %rd4123;
	and.b64  	%rd4224, %rd4197, %rd4223;
	xor.b64  	%rd4225, %rd4224, %rd4123;
	add.s64 	%rd4226, %rd4222, %rd4225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2850,%dummy}, %rd4197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd4197;
	}
	shf.r.wrap.b32 	%r2852, %r2851, %r2850, 14;
	shf.r.wrap.b32 	%r2853, %r2850, %r2851, 14;
	mov.b64 	%rd4227, {%r2853, %r2852};
	shf.r.wrap.b32 	%r2854, %r2851, %r2850, 18;
	shf.r.wrap.b32 	%r2855, %r2850, %r2851, 18;
	mov.b64 	%rd4228, {%r2855, %r2854};
	xor.b64  	%rd4229, %rd4227, %rd4228;
	shf.l.wrap.b32 	%r2856, %r2850, %r2851, 23;
	shf.l.wrap.b32 	%r2857, %r2851, %r2850, 23;
	mov.b64 	%rd4230, {%r2857, %r2856};
	xor.b64  	%rd4231, %rd4229, %rd4230;
	add.s64 	%rd4232, %rd4226, %rd4231;
	add.s64 	%rd4233, %rd4232, -3051310485924567259;
	add.s64 	%rd4234, %rd4233, %rd4097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd4208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd4208;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 28;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 28;
	mov.b64 	%rd4235, {%r2861, %r2860};
	shf.l.wrap.b32 	%r2862, %r2858, %r2859, 30;
	shf.l.wrap.b32 	%r2863, %r2859, %r2858, 30;
	mov.b64 	%rd4236, {%r2863, %r2862};
	xor.b64  	%rd4237, %rd4235, %rd4236;
	shf.l.wrap.b32 	%r2864, %r2858, %r2859, 25;
	shf.l.wrap.b32 	%r2865, %r2859, %r2858, 25;
	mov.b64 	%rd4238, {%r2865, %r2864};
	xor.b64  	%rd4239, %rd4237, %rd4238;
	and.b64  	%rd4240, %rd4208, %rd4171;
	or.b64  	%rd4241, %rd4208, %rd4171;
	and.b64  	%rd4242, %rd4241, %rd4134;
	or.b64  	%rd4243, %rd4242, %rd4240;
	add.s64 	%rd4244, %rd4243, %rd4239;
	add.s64 	%rd4245, %rd4244, %rd4233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd4184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd4184;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 19;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 19;
	mov.b64 	%rd4246, {%r2869, %r2868};
	shf.l.wrap.b32 	%r2870, %r2866, %r2867, 3;
	shf.l.wrap.b32 	%r2871, %r2867, %r2866, 3;
	mov.b64 	%rd4247, {%r2871, %r2870};
	xor.b64  	%rd4248, %rd4246, %rd4247;
	shr.u64 	%rd4249, %rd4184, 6;
	xor.b64  	%rd4250, %rd4248, %rd4249;
	shf.r.wrap.b32 	%r2872, %r2504, %r2505, 8;
	shf.r.wrap.b32 	%r2873, %r2505, %r2504, 8;
	mov.b64 	%rd4251, {%r2873, %r2872};
	shf.r.wrap.b32 	%r2874, %r2504, %r2505, 1;
	shf.r.wrap.b32 	%r2875, %r2505, %r2504, 1;
	mov.b64 	%rd4252, {%r2875, %r2874};
	xor.b64  	%rd4253, %rd4252, %rd4251;
	shr.u64 	%rd4254, %rd12029, 7;
	xor.b64  	%rd4255, %rd4253, %rd4254;
	add.s64 	%rd4256, %rd4255, %rd12030;
	add.s64 	%rd4257, %rd4256, %rd3999;
	add.s64 	%rd4258, %rd4257, %rd4250;
	add.s64 	%rd4259, %rd4258, %rd4123;
	xor.b64  	%rd4260, %rd4197, %rd4160;
	and.b64  	%rd4261, %rd4234, %rd4260;
	xor.b64  	%rd4262, %rd4261, %rd4160;
	add.s64 	%rd4263, %rd4259, %rd4262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2876,%dummy}, %rd4234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2877}, %rd4234;
	}
	shf.r.wrap.b32 	%r2878, %r2877, %r2876, 14;
	shf.r.wrap.b32 	%r2879, %r2876, %r2877, 14;
	mov.b64 	%rd4264, {%r2879, %r2878};
	shf.r.wrap.b32 	%r2880, %r2877, %r2876, 18;
	shf.r.wrap.b32 	%r2881, %r2876, %r2877, 18;
	mov.b64 	%rd4265, {%r2881, %r2880};
	xor.b64  	%rd4266, %rd4264, %rd4265;
	shf.l.wrap.b32 	%r2882, %r2876, %r2877, 23;
	shf.l.wrap.b32 	%r2883, %r2877, %r2876, 23;
	mov.b64 	%rd4267, {%r2883, %r2882};
	xor.b64  	%rd4268, %rd4266, %rd4267;
	add.s64 	%rd4269, %rd4263, %rd4268;
	add.s64 	%rd4270, %rd4269, 489312712824947311;
	add.s64 	%rd4271, %rd4270, %rd4134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2884,%dummy}, %rd4245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2885}, %rd4245;
	}
	shf.r.wrap.b32 	%r2886, %r2885, %r2884, 28;
	shf.r.wrap.b32 	%r2887, %r2884, %r2885, 28;
	mov.b64 	%rd4272, {%r2887, %r2886};
	shf.l.wrap.b32 	%r2888, %r2884, %r2885, 30;
	shf.l.wrap.b32 	%r2889, %r2885, %r2884, 30;
	mov.b64 	%rd4273, {%r2889, %r2888};
	xor.b64  	%rd4274, %rd4272, %rd4273;
	shf.l.wrap.b32 	%r2890, %r2884, %r2885, 25;
	shf.l.wrap.b32 	%r2891, %r2885, %r2884, 25;
	mov.b64 	%rd4275, {%r2891, %r2890};
	xor.b64  	%rd4276, %rd4274, %rd4275;
	and.b64  	%rd4277, %rd4245, %rd4208;
	or.b64  	%rd4278, %rd4245, %rd4208;
	and.b64  	%rd4279, %rd4278, %rd4171;
	or.b64  	%rd4280, %rd4279, %rd4277;
	add.s64 	%rd4281, %rd4280, %rd4276;
	add.s64 	%rd4282, %rd4281, %rd4270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2892,%dummy}, %rd4221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2893}, %rd4221;
	}
	shf.r.wrap.b32 	%r2894, %r2893, %r2892, 19;
	shf.r.wrap.b32 	%r2895, %r2892, %r2893, 19;
	mov.b64 	%rd4283, {%r2895, %r2894};
	shf.l.wrap.b32 	%r2896, %r2892, %r2893, 3;
	shf.l.wrap.b32 	%r2897, %r2893, %r2892, 3;
	mov.b64 	%rd4284, {%r2897, %r2896};
	xor.b64  	%rd4285, %rd4283, %rd4284;
	shr.u64 	%rd4286, %rd4221, 6;
	xor.b64  	%rd4287, %rd4285, %rd4286;
	shf.r.wrap.b32 	%r2898, %r2533, %r2532, 1;
	shf.r.wrap.b32 	%r2899, %r2532, %r2533, 1;
	mov.b64 	%rd4288, {%r2899, %r2898};
	shf.r.wrap.b32 	%r2900, %r2533, %r2532, 8;
	shf.r.wrap.b32 	%r2901, %r2532, %r2533, 8;
	mov.b64 	%rd4289, {%r2901, %r2900};
	xor.b64  	%rd4290, %rd4288, %rd4289;
	shr.u64 	%rd4291, %rd3740, 7;
	xor.b64  	%rd4292, %rd4290, %rd4291;
	add.s64 	%rd4293, %rd4292, %rd12029;
	add.s64 	%rd4294, %rd4293, %rd4036;
	add.s64 	%rd4295, %rd4294, %rd4287;
	add.s64 	%rd4296, %rd4295, %rd4160;
	xor.b64  	%rd4297, %rd4234, %rd4197;
	and.b64  	%rd4298, %rd4271, %rd4297;
	xor.b64  	%rd4299, %rd4298, %rd4197;
	add.s64 	%rd4300, %rd4296, %rd4299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2902,%dummy}, %rd4271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2903}, %rd4271;
	}
	shf.r.wrap.b32 	%r2904, %r2903, %r2902, 14;
	shf.r.wrap.b32 	%r2905, %r2902, %r2903, 14;
	mov.b64 	%rd4301, {%r2905, %r2904};
	shf.r.wrap.b32 	%r2906, %r2903, %r2902, 18;
	shf.r.wrap.b32 	%r2907, %r2902, %r2903, 18;
	mov.b64 	%rd4302, {%r2907, %r2906};
	xor.b64  	%rd4303, %rd4301, %rd4302;
	shf.l.wrap.b32 	%r2908, %r2902, %r2903, 23;
	shf.l.wrap.b32 	%r2909, %r2903, %r2902, 23;
	mov.b64 	%rd4304, {%r2909, %r2908};
	xor.b64  	%rd4305, %rd4303, %rd4304;
	add.s64 	%rd4306, %rd4300, %rd4305;
	add.s64 	%rd4307, %rd4306, 1452737877330783856;
	add.s64 	%rd4308, %rd4307, %rd4171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2910,%dummy}, %rd4282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2911}, %rd4282;
	}
	shf.r.wrap.b32 	%r2912, %r2911, %r2910, 28;
	shf.r.wrap.b32 	%r2913, %r2910, %r2911, 28;
	mov.b64 	%rd4309, {%r2913, %r2912};
	shf.l.wrap.b32 	%r2914, %r2910, %r2911, 30;
	shf.l.wrap.b32 	%r2915, %r2911, %r2910, 30;
	mov.b64 	%rd4310, {%r2915, %r2914};
	xor.b64  	%rd4311, %rd4309, %rd4310;
	shf.l.wrap.b32 	%r2916, %r2910, %r2911, 25;
	shf.l.wrap.b32 	%r2917, %r2911, %r2910, 25;
	mov.b64 	%rd4312, {%r2917, %r2916};
	xor.b64  	%rd4313, %rd4311, %rd4312;
	and.b64  	%rd4314, %rd4282, %rd4245;
	or.b64  	%rd4315, %rd4282, %rd4245;
	and.b64  	%rd4316, %rd4315, %rd4208;
	or.b64  	%rd4317, %rd4316, %rd4314;
	add.s64 	%rd4318, %rd4317, %rd4313;
	add.s64 	%rd4319, %rd4318, %rd4307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2918,%dummy}, %rd4258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2919}, %rd4258;
	}
	shf.r.wrap.b32 	%r2920, %r2919, %r2918, 19;
	shf.r.wrap.b32 	%r2921, %r2918, %r2919, 19;
	mov.b64 	%rd4320, {%r2921, %r2920};
	shf.l.wrap.b32 	%r2922, %r2918, %r2919, 3;
	shf.l.wrap.b32 	%r2923, %r2919, %r2918, 3;
	mov.b64 	%rd4321, {%r2923, %r2922};
	xor.b64  	%rd4322, %rd4320, %rd4321;
	shr.u64 	%rd4323, %rd4258, 6;
	xor.b64  	%rd4324, %rd4322, %rd4323;
	shf.r.wrap.b32 	%r2924, %r2561, %r2560, 1;
	shf.r.wrap.b32 	%r2925, %r2560, %r2561, 1;
	mov.b64 	%rd4325, {%r2925, %r2924};
	shf.r.wrap.b32 	%r2926, %r2561, %r2560, 8;
	shf.r.wrap.b32 	%r2927, %r2560, %r2561, 8;
	mov.b64 	%rd4326, {%r2927, %r2926};
	xor.b64  	%rd4327, %rd4325, %rd4326;
	shr.u64 	%rd4328, %rd3777, 7;
	xor.b64  	%rd4329, %rd4327, %rd4328;
	add.s64 	%rd4330, %rd4329, %rd3740;
	add.s64 	%rd4331, %rd4330, %rd4073;
	add.s64 	%rd4332, %rd4331, %rd4324;
	add.s64 	%rd4333, %rd4332, %rd4197;
	xor.b64  	%rd4334, %rd4271, %rd4234;
	and.b64  	%rd4335, %rd4308, %rd4334;
	xor.b64  	%rd4336, %rd4335, %rd4234;
	add.s64 	%rd4337, %rd4333, %rd4336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd4308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd4308;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 14;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 14;
	mov.b64 	%rd4338, {%r2931, %r2930};
	shf.r.wrap.b32 	%r2932, %r2929, %r2928, 18;
	shf.r.wrap.b32 	%r2933, %r2928, %r2929, 18;
	mov.b64 	%rd4339, {%r2933, %r2932};
	xor.b64  	%rd4340, %rd4338, %rd4339;
	shf.l.wrap.b32 	%r2934, %r2928, %r2929, 23;
	shf.l.wrap.b32 	%r2935, %r2929, %r2928, 23;
	mov.b64 	%rd4341, {%r2935, %r2934};
	xor.b64  	%rd4342, %rd4340, %rd4341;
	add.s64 	%rd4343, %rd4337, %rd4342;
	add.s64 	%rd4344, %rd4343, 2861767655752347644;
	add.s64 	%rd4345, %rd4344, %rd4208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2936,%dummy}, %rd4319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2937}, %rd4319;
	}
	shf.r.wrap.b32 	%r2938, %r2937, %r2936, 28;
	shf.r.wrap.b32 	%r2939, %r2936, %r2937, 28;
	mov.b64 	%rd4346, {%r2939, %r2938};
	shf.l.wrap.b32 	%r2940, %r2936, %r2937, 30;
	shf.l.wrap.b32 	%r2941, %r2937, %r2936, 30;
	mov.b64 	%rd4347, {%r2941, %r2940};
	xor.b64  	%rd4348, %rd4346, %rd4347;
	shf.l.wrap.b32 	%r2942, %r2936, %r2937, 25;
	shf.l.wrap.b32 	%r2943, %r2937, %r2936, 25;
	mov.b64 	%rd4349, {%r2943, %r2942};
	xor.b64  	%rd4350, %rd4348, %rd4349;
	and.b64  	%rd4351, %rd4319, %rd4282;
	or.b64  	%rd4352, %rd4319, %rd4282;
	and.b64  	%rd4353, %rd4352, %rd4245;
	or.b64  	%rd4354, %rd4353, %rd4351;
	add.s64 	%rd4355, %rd4354, %rd4350;
	add.s64 	%rd4356, %rd4355, %rd4344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2944,%dummy}, %rd4295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd4295;
	}
	shf.r.wrap.b32 	%r2946, %r2945, %r2944, 19;
	shf.r.wrap.b32 	%r2947, %r2944, %r2945, 19;
	mov.b64 	%rd4357, {%r2947, %r2946};
	shf.l.wrap.b32 	%r2948, %r2944, %r2945, 3;
	shf.l.wrap.b32 	%r2949, %r2945, %r2944, 3;
	mov.b64 	%rd4358, {%r2949, %r2948};
	xor.b64  	%rd4359, %rd4357, %rd4358;
	shr.u64 	%rd4360, %rd4295, 6;
	xor.b64  	%rd4361, %rd4359, %rd4360;
	shf.r.wrap.b32 	%r2950, %r2589, %r2588, 1;
	shf.r.wrap.b32 	%r2951, %r2588, %r2589, 1;
	mov.b64 	%rd4362, {%r2951, %r2950};
	shf.r.wrap.b32 	%r2952, %r2589, %r2588, 8;
	shf.r.wrap.b32 	%r2953, %r2588, %r2589, 8;
	mov.b64 	%rd4363, {%r2953, %r2952};
	xor.b64  	%rd4364, %rd4362, %rd4363;
	shr.u64 	%rd4365, %rd3814, 7;
	xor.b64  	%rd4366, %rd4364, %rd4365;
	add.s64 	%rd4367, %rd4366, %rd3777;
	add.s64 	%rd4368, %rd4367, %rd4110;
	add.s64 	%rd4369, %rd4368, %rd4361;
	add.s64 	%rd4370, %rd4369, %rd4234;
	xor.b64  	%rd4371, %rd4308, %rd4271;
	and.b64  	%rd4372, %rd4345, %rd4371;
	xor.b64  	%rd4373, %rd4372, %rd4271;
	add.s64 	%rd4374, %rd4370, %rd4373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd4345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd4345;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 14;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 14;
	mov.b64 	%rd4375, {%r2957, %r2956};
	shf.r.wrap.b32 	%r2958, %r2955, %r2954, 18;
	shf.r.wrap.b32 	%r2959, %r2954, %r2955, 18;
	mov.b64 	%rd4376, {%r2959, %r2958};
	xor.b64  	%rd4377, %rd4375, %rd4376;
	shf.l.wrap.b32 	%r2960, %r2954, %r2955, 23;
	shf.l.wrap.b32 	%r2961, %r2955, %r2954, 23;
	mov.b64 	%rd4378, {%r2961, %r2960};
	xor.b64  	%rd4379, %rd4377, %rd4378;
	add.s64 	%rd4380, %rd4374, %rd4379;
	add.s64 	%rd4381, %rd4380, 3322285676063803686;
	add.s64 	%rd4382, %rd4381, %rd4245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd4356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd4356;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 28;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 28;
	mov.b64 	%rd4383, {%r2965, %r2964};
	shf.l.wrap.b32 	%r2966, %r2962, %r2963, 30;
	shf.l.wrap.b32 	%r2967, %r2963, %r2962, 30;
	mov.b64 	%rd4384, {%r2967, %r2966};
	xor.b64  	%rd4385, %rd4383, %rd4384;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 25;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 25;
	mov.b64 	%rd4386, {%r2969, %r2968};
	xor.b64  	%rd4387, %rd4385, %rd4386;
	and.b64  	%rd4388, %rd4356, %rd4319;
	or.b64  	%rd4389, %rd4356, %rd4319;
	and.b64  	%rd4390, %rd4389, %rd4282;
	or.b64  	%rd4391, %rd4390, %rd4388;
	add.s64 	%rd4392, %rd4391, %rd4387;
	add.s64 	%rd4393, %rd4392, %rd4381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd4332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd4332;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 19;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 19;
	mov.b64 	%rd4394, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 3;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 3;
	mov.b64 	%rd4395, {%r2975, %r2974};
	xor.b64  	%rd4396, %rd4394, %rd4395;
	shr.u64 	%rd4397, %rd4332, 6;
	xor.b64  	%rd4398, %rd4396, %rd4397;
	shf.r.wrap.b32 	%r2976, %r2617, %r2616, 1;
	shf.r.wrap.b32 	%r2977, %r2616, %r2617, 1;
	mov.b64 	%rd4399, {%r2977, %r2976};
	shf.r.wrap.b32 	%r2978, %r2617, %r2616, 8;
	shf.r.wrap.b32 	%r2979, %r2616, %r2617, 8;
	mov.b64 	%rd4400, {%r2979, %r2978};
	xor.b64  	%rd4401, %rd4399, %rd4400;
	shr.u64 	%rd4402, %rd3851, 7;
	xor.b64  	%rd4403, %rd4401, %rd4402;
	add.s64 	%rd4404, %rd4403, %rd3814;
	add.s64 	%rd4405, %rd4404, %rd4147;
	add.s64 	%rd4406, %rd4405, %rd4398;
	add.s64 	%rd4407, %rd4406, %rd4271;
	xor.b64  	%rd4408, %rd4345, %rd4308;
	and.b64  	%rd4409, %rd4382, %rd4408;
	xor.b64  	%rd4410, %rd4409, %rd4308;
	add.s64 	%rd4411, %rd4407, %rd4410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2980,%dummy}, %rd4382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd4382;
	}
	shf.r.wrap.b32 	%r2982, %r2981, %r2980, 14;
	shf.r.wrap.b32 	%r2983, %r2980, %r2981, 14;
	mov.b64 	%rd4412, {%r2983, %r2982};
	shf.r.wrap.b32 	%r2984, %r2981, %r2980, 18;
	shf.r.wrap.b32 	%r2985, %r2980, %r2981, 18;
	mov.b64 	%rd4413, {%r2985, %r2984};
	xor.b64  	%rd4414, %rd4412, %rd4413;
	shf.l.wrap.b32 	%r2986, %r2980, %r2981, 23;
	shf.l.wrap.b32 	%r2987, %r2981, %r2980, 23;
	mov.b64 	%rd4415, {%r2987, %r2986};
	xor.b64  	%rd4416, %rd4414, %rd4415;
	add.s64 	%rd4417, %rd4411, %rd4416;
	add.s64 	%rd4418, %rd4417, 5560940570517711597;
	add.s64 	%rd4419, %rd4418, %rd4282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2988,%dummy}, %rd4393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2989}, %rd4393;
	}
	shf.r.wrap.b32 	%r2990, %r2989, %r2988, 28;
	shf.r.wrap.b32 	%r2991, %r2988, %r2989, 28;
	mov.b64 	%rd4420, {%r2991, %r2990};
	shf.l.wrap.b32 	%r2992, %r2988, %r2989, 30;
	shf.l.wrap.b32 	%r2993, %r2989, %r2988, 30;
	mov.b64 	%rd4421, {%r2993, %r2992};
	xor.b64  	%rd4422, %rd4420, %rd4421;
	shf.l.wrap.b32 	%r2994, %r2988, %r2989, 25;
	shf.l.wrap.b32 	%r2995, %r2989, %r2988, 25;
	mov.b64 	%rd4423, {%r2995, %r2994};
	xor.b64  	%rd4424, %rd4422, %rd4423;
	and.b64  	%rd4425, %rd4393, %rd4356;
	or.b64  	%rd4426, %rd4393, %rd4356;
	and.b64  	%rd4427, %rd4426, %rd4319;
	or.b64  	%rd4428, %rd4427, %rd4425;
	add.s64 	%rd4429, %rd4428, %rd4424;
	add.s64 	%rd4430, %rd4429, %rd4418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2996,%dummy}, %rd4369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2997}, %rd4369;
	}
	shf.r.wrap.b32 	%r2998, %r2997, %r2996, 19;
	shf.r.wrap.b32 	%r2999, %r2996, %r2997, 19;
	mov.b64 	%rd4431, {%r2999, %r2998};
	shf.l.wrap.b32 	%r3000, %r2996, %r2997, 3;
	shf.l.wrap.b32 	%r3001, %r2997, %r2996, 3;
	mov.b64 	%rd4432, {%r3001, %r3000};
	xor.b64  	%rd4433, %rd4431, %rd4432;
	shr.u64 	%rd4434, %rd4369, 6;
	xor.b64  	%rd4435, %rd4433, %rd4434;
	shf.r.wrap.b32 	%r3002, %r2645, %r2644, 1;
	shf.r.wrap.b32 	%r3003, %r2644, %r2645, 1;
	mov.b64 	%rd4436, {%r3003, %r3002};
	shf.r.wrap.b32 	%r3004, %r2645, %r2644, 8;
	shf.r.wrap.b32 	%r3005, %r2644, %r2645, 8;
	mov.b64 	%rd4437, {%r3005, %r3004};
	xor.b64  	%rd4438, %rd4436, %rd4437;
	shr.u64 	%rd4439, %rd3888, 7;
	xor.b64  	%rd4440, %rd4438, %rd4439;
	add.s64 	%rd4441, %rd4440, %rd3851;
	add.s64 	%rd4442, %rd4441, %rd4184;
	add.s64 	%rd4443, %rd4442, %rd4435;
	add.s64 	%rd4444, %rd4443, %rd4308;
	xor.b64  	%rd4445, %rd4382, %rd4345;
	and.b64  	%rd4446, %rd4419, %rd4445;
	xor.b64  	%rd4447, %rd4446, %rd4345;
	add.s64 	%rd4448, %rd4444, %rd4447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd4419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3007}, %rd4419;
	}
	shf.r.wrap.b32 	%r3008, %r3007, %r3006, 14;
	shf.r.wrap.b32 	%r3009, %r3006, %r3007, 14;
	mov.b64 	%rd4449, {%r3009, %r3008};
	shf.r.wrap.b32 	%r3010, %r3007, %r3006, 18;
	shf.r.wrap.b32 	%r3011, %r3006, %r3007, 18;
	mov.b64 	%rd4450, {%r3011, %r3010};
	xor.b64  	%rd4451, %rd4449, %rd4450;
	shf.l.wrap.b32 	%r3012, %r3006, %r3007, 23;
	shf.l.wrap.b32 	%r3013, %r3007, %r3006, 23;
	mov.b64 	%rd4452, {%r3013, %r3012};
	xor.b64  	%rd4453, %rd4451, %rd4452;
	add.s64 	%rd4454, %rd4448, %rd4453;
	add.s64 	%rd4455, %rd4454, 5996557281743188959;
	add.s64 	%rd4456, %rd4455, %rd4319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3014,%dummy}, %rd4430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3015}, %rd4430;
	}
	shf.r.wrap.b32 	%r3016, %r3015, %r3014, 28;
	shf.r.wrap.b32 	%r3017, %r3014, %r3015, 28;
	mov.b64 	%rd4457, {%r3017, %r3016};
	shf.l.wrap.b32 	%r3018, %r3014, %r3015, 30;
	shf.l.wrap.b32 	%r3019, %r3015, %r3014, 30;
	mov.b64 	%rd4458, {%r3019, %r3018};
	xor.b64  	%rd4459, %rd4457, %rd4458;
	shf.l.wrap.b32 	%r3020, %r3014, %r3015, 25;
	shf.l.wrap.b32 	%r3021, %r3015, %r3014, 25;
	mov.b64 	%rd4460, {%r3021, %r3020};
	xor.b64  	%rd4461, %rd4459, %rd4460;
	and.b64  	%rd4462, %rd4430, %rd4393;
	or.b64  	%rd4463, %rd4430, %rd4393;
	and.b64  	%rd4464, %rd4463, %rd4356;
	or.b64  	%rd4465, %rd4464, %rd4462;
	add.s64 	%rd4466, %rd4465, %rd4461;
	add.s64 	%rd4467, %rd4466, %rd4455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3022,%dummy}, %rd4406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3023}, %rd4406;
	}
	shf.r.wrap.b32 	%r3024, %r3023, %r3022, 19;
	shf.r.wrap.b32 	%r3025, %r3022, %r3023, 19;
	mov.b64 	%rd4468, {%r3025, %r3024};
	shf.l.wrap.b32 	%r3026, %r3022, %r3023, 3;
	shf.l.wrap.b32 	%r3027, %r3023, %r3022, 3;
	mov.b64 	%rd4469, {%r3027, %r3026};
	xor.b64  	%rd4470, %rd4468, %rd4469;
	shr.u64 	%rd4471, %rd4406, 6;
	xor.b64  	%rd4472, %rd4470, %rd4471;
	shf.r.wrap.b32 	%r3028, %r2673, %r2672, 1;
	shf.r.wrap.b32 	%r3029, %r2672, %r2673, 1;
	mov.b64 	%rd4473, {%r3029, %r3028};
	shf.r.wrap.b32 	%r3030, %r2673, %r2672, 8;
	shf.r.wrap.b32 	%r3031, %r2672, %r2673, 8;
	mov.b64 	%rd4474, {%r3031, %r3030};
	xor.b64  	%rd4475, %rd4473, %rd4474;
	shr.u64 	%rd4476, %rd3925, 7;
	xor.b64  	%rd4477, %rd4475, %rd4476;
	add.s64 	%rd4478, %rd4477, %rd3888;
	add.s64 	%rd4479, %rd4478, %rd4221;
	add.s64 	%rd4480, %rd4479, %rd4472;
	add.s64 	%rd4481, %rd4480, %rd4345;
	xor.b64  	%rd4482, %rd4419, %rd4382;
	and.b64  	%rd4483, %rd4456, %rd4482;
	xor.b64  	%rd4484, %rd4483, %rd4382;
	add.s64 	%rd4485, %rd4481, %rd4484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3032,%dummy}, %rd4456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3033}, %rd4456;
	}
	shf.r.wrap.b32 	%r3034, %r3033, %r3032, 14;
	shf.r.wrap.b32 	%r3035, %r3032, %r3033, 14;
	mov.b64 	%rd4486, {%r3035, %r3034};
	shf.r.wrap.b32 	%r3036, %r3033, %r3032, 18;
	shf.r.wrap.b32 	%r3037, %r3032, %r3033, 18;
	mov.b64 	%rd4487, {%r3037, %r3036};
	xor.b64  	%rd4488, %rd4486, %rd4487;
	shf.l.wrap.b32 	%r3038, %r3032, %r3033, 23;
	shf.l.wrap.b32 	%r3039, %r3033, %r3032, 23;
	mov.b64 	%rd4489, {%r3039, %r3038};
	xor.b64  	%rd4490, %rd4488, %rd4489;
	add.s64 	%rd4491, %rd4485, %rd4490;
	add.s64 	%rd4492, %rd4491, 7280758554555802590;
	add.s64 	%rd4493, %rd4492, %rd4356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3040,%dummy}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3041}, %rd4467;
	}
	shf.r.wrap.b32 	%r3042, %r3041, %r3040, 28;
	shf.r.wrap.b32 	%r3043, %r3040, %r3041, 28;
	mov.b64 	%rd4494, {%r3043, %r3042};
	shf.l.wrap.b32 	%r3044, %r3040, %r3041, 30;
	shf.l.wrap.b32 	%r3045, %r3041, %r3040, 30;
	mov.b64 	%rd4495, {%r3045, %r3044};
	xor.b64  	%rd4496, %rd4494, %rd4495;
	shf.l.wrap.b32 	%r3046, %r3040, %r3041, 25;
	shf.l.wrap.b32 	%r3047, %r3041, %r3040, 25;
	mov.b64 	%rd4497, {%r3047, %r3046};
	xor.b64  	%rd4498, %rd4496, %rd4497;
	and.b64  	%rd4499, %rd4467, %rd4430;
	or.b64  	%rd4500, %rd4467, %rd4430;
	and.b64  	%rd4501, %rd4500, %rd4393;
	or.b64  	%rd4502, %rd4501, %rd4499;
	add.s64 	%rd4503, %rd4502, %rd4498;
	add.s64 	%rd4504, %rd4503, %rd4492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3048,%dummy}, %rd4443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd4443;
	}
	shf.r.wrap.b32 	%r3050, %r3049, %r3048, 19;
	shf.r.wrap.b32 	%r3051, %r3048, %r3049, 19;
	mov.b64 	%rd4505, {%r3051, %r3050};
	shf.l.wrap.b32 	%r3052, %r3048, %r3049, 3;
	shf.l.wrap.b32 	%r3053, %r3049, %r3048, 3;
	mov.b64 	%rd4506, {%r3053, %r3052};
	xor.b64  	%rd4507, %rd4505, %rd4506;
	shr.u64 	%rd4508, %rd4443, 6;
	xor.b64  	%rd4509, %rd4507, %rd4508;
	shf.r.wrap.b32 	%r3054, %r2701, %r2700, 1;
	shf.r.wrap.b32 	%r3055, %r2700, %r2701, 1;
	mov.b64 	%rd4510, {%r3055, %r3054};
	shf.r.wrap.b32 	%r3056, %r2701, %r2700, 8;
	shf.r.wrap.b32 	%r3057, %r2700, %r2701, 8;
	mov.b64 	%rd4511, {%r3057, %r3056};
	xor.b64  	%rd4512, %rd4510, %rd4511;
	shr.u64 	%rd4513, %rd3962, 7;
	xor.b64  	%rd4514, %rd4512, %rd4513;
	add.s64 	%rd4515, %rd4514, %rd3925;
	add.s64 	%rd4516, %rd4515, %rd4258;
	add.s64 	%rd4517, %rd4516, %rd4509;
	add.s64 	%rd4518, %rd4517, %rd4382;
	xor.b64  	%rd4519, %rd4456, %rd4419;
	and.b64  	%rd4520, %rd4493, %rd4519;
	xor.b64  	%rd4521, %rd4520, %rd4419;
	add.s64 	%rd4522, %rd4518, %rd4521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3058,%dummy}, %rd4493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3059}, %rd4493;
	}
	shf.r.wrap.b32 	%r3060, %r3059, %r3058, 14;
	shf.r.wrap.b32 	%r3061, %r3058, %r3059, 14;
	mov.b64 	%rd4523, {%r3061, %r3060};
	shf.r.wrap.b32 	%r3062, %r3059, %r3058, 18;
	shf.r.wrap.b32 	%r3063, %r3058, %r3059, 18;
	mov.b64 	%rd4524, {%r3063, %r3062};
	xor.b64  	%rd4525, %rd4523, %rd4524;
	shf.l.wrap.b32 	%r3064, %r3058, %r3059, 23;
	shf.l.wrap.b32 	%r3065, %r3059, %r3058, 23;
	mov.b64 	%rd4526, {%r3065, %r3064};
	xor.b64  	%rd4527, %rd4525, %rd4526;
	add.s64 	%rd4528, %rd4522, %rd4527;
	add.s64 	%rd4529, %rd4528, 8532644243296465576;
	add.s64 	%rd4530, %rd4529, %rd4393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd4504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3067}, %rd4504;
	}
	shf.r.wrap.b32 	%r3068, %r3067, %r3066, 28;
	shf.r.wrap.b32 	%r3069, %r3066, %r3067, 28;
	mov.b64 	%rd4531, {%r3069, %r3068};
	shf.l.wrap.b32 	%r3070, %r3066, %r3067, 30;
	shf.l.wrap.b32 	%r3071, %r3067, %r3066, 30;
	mov.b64 	%rd4532, {%r3071, %r3070};
	xor.b64  	%rd4533, %rd4531, %rd4532;
	shf.l.wrap.b32 	%r3072, %r3066, %r3067, 25;
	shf.l.wrap.b32 	%r3073, %r3067, %r3066, 25;
	mov.b64 	%rd4534, {%r3073, %r3072};
	xor.b64  	%rd4535, %rd4533, %rd4534;
	and.b64  	%rd4536, %rd4504, %rd4467;
	or.b64  	%rd4537, %rd4504, %rd4467;
	and.b64  	%rd4538, %rd4537, %rd4430;
	or.b64  	%rd4539, %rd4538, %rd4536;
	add.s64 	%rd4540, %rd4539, %rd4535;
	add.s64 	%rd4541, %rd4540, %rd4529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd4480;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 19;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 19;
	mov.b64 	%rd4542, {%r3077, %r3076};
	shf.l.wrap.b32 	%r3078, %r3074, %r3075, 3;
	shf.l.wrap.b32 	%r3079, %r3075, %r3074, 3;
	mov.b64 	%rd4543, {%r3079, %r3078};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	shr.u64 	%rd4545, %rd4480, 6;
	xor.b64  	%rd4546, %rd4544, %rd4545;
	shf.r.wrap.b32 	%r3080, %r2729, %r2728, 1;
	shf.r.wrap.b32 	%r3081, %r2728, %r2729, 1;
	mov.b64 	%rd4547, {%r3081, %r3080};
	shf.r.wrap.b32 	%r3082, %r2729, %r2728, 8;
	shf.r.wrap.b32 	%r3083, %r2728, %r2729, 8;
	mov.b64 	%rd4548, {%r3083, %r3082};
	xor.b64  	%rd4549, %rd4547, %rd4548;
	shr.u64 	%rd4550, %rd3999, 7;
	xor.b64  	%rd4551, %rd4549, %rd4550;
	add.s64 	%rd4552, %rd4551, %rd3962;
	add.s64 	%rd4553, %rd4552, %rd4295;
	add.s64 	%rd4554, %rd4553, %rd4546;
	add.s64 	%rd4555, %rd4554, %rd4419;
	xor.b64  	%rd4556, %rd4493, %rd4456;
	and.b64  	%rd4557, %rd4530, %rd4556;
	xor.b64  	%rd4558, %rd4557, %rd4456;
	add.s64 	%rd4559, %rd4555, %rd4558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3084,%dummy}, %rd4530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3085}, %rd4530;
	}
	shf.r.wrap.b32 	%r3086, %r3085, %r3084, 14;
	shf.r.wrap.b32 	%r3087, %r3084, %r3085, 14;
	mov.b64 	%rd4560, {%r3087, %r3086};
	shf.r.wrap.b32 	%r3088, %r3085, %r3084, 18;
	shf.r.wrap.b32 	%r3089, %r3084, %r3085, 18;
	mov.b64 	%rd4561, {%r3089, %r3088};
	xor.b64  	%rd4562, %rd4560, %rd4561;
	shf.l.wrap.b32 	%r3090, %r3084, %r3085, 23;
	shf.l.wrap.b32 	%r3091, %r3085, %r3084, 23;
	mov.b64 	%rd4563, {%r3091, %r3090};
	xor.b64  	%rd4564, %rd4562, %rd4563;
	add.s64 	%rd4565, %rd4559, %rd4564;
	add.s64 	%rd4566, %rd4565, -9096487096722542874;
	add.s64 	%rd4567, %rd4566, %rd4430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3092,%dummy}, %rd4541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3093}, %rd4541;
	}
	shf.r.wrap.b32 	%r3094, %r3093, %r3092, 28;
	shf.r.wrap.b32 	%r3095, %r3092, %r3093, 28;
	mov.b64 	%rd4568, {%r3095, %r3094};
	shf.l.wrap.b32 	%r3096, %r3092, %r3093, 30;
	shf.l.wrap.b32 	%r3097, %r3093, %r3092, 30;
	mov.b64 	%rd4569, {%r3097, %r3096};
	xor.b64  	%rd4570, %rd4568, %rd4569;
	shf.l.wrap.b32 	%r3098, %r3092, %r3093, 25;
	shf.l.wrap.b32 	%r3099, %r3093, %r3092, 25;
	mov.b64 	%rd4571, {%r3099, %r3098};
	xor.b64  	%rd4572, %rd4570, %rd4571;
	and.b64  	%rd4573, %rd4541, %rd4504;
	or.b64  	%rd4574, %rd4541, %rd4504;
	and.b64  	%rd4575, %rd4574, %rd4467;
	or.b64  	%rd4576, %rd4575, %rd4573;
	add.s64 	%rd4577, %rd4576, %rd4572;
	add.s64 	%rd4578, %rd4577, %rd4566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3100,%dummy}, %rd4517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3101}, %rd4517;
	}
	shf.r.wrap.b32 	%r3102, %r3101, %r3100, 19;
	shf.r.wrap.b32 	%r3103, %r3100, %r3101, 19;
	mov.b64 	%rd4579, {%r3103, %r3102};
	shf.l.wrap.b32 	%r3104, %r3100, %r3101, 3;
	shf.l.wrap.b32 	%r3105, %r3101, %r3100, 3;
	mov.b64 	%rd4580, {%r3105, %r3104};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	shr.u64 	%rd4582, %rd4517, 6;
	xor.b64  	%rd4583, %rd4581, %rd4582;
	shf.r.wrap.b32 	%r3106, %r2757, %r2756, 1;
	shf.r.wrap.b32 	%r3107, %r2756, %r2757, 1;
	mov.b64 	%rd4584, {%r3107, %r3106};
	shf.r.wrap.b32 	%r3108, %r2757, %r2756, 8;
	shf.r.wrap.b32 	%r3109, %r2756, %r2757, 8;
	mov.b64 	%rd4585, {%r3109, %r3108};
	xor.b64  	%rd4586, %rd4584, %rd4585;
	shr.u64 	%rd4587, %rd4036, 7;
	xor.b64  	%rd4588, %rd4586, %rd4587;
	add.s64 	%rd4589, %rd4588, %rd3999;
	add.s64 	%rd4590, %rd4589, %rd4332;
	add.s64 	%rd4591, %rd4590, %rd4583;
	add.s64 	%rd4592, %rd4591, %rd4456;
	xor.b64  	%rd4593, %rd4530, %rd4493;
	and.b64  	%rd4594, %rd4567, %rd4593;
	xor.b64  	%rd4595, %rd4594, %rd4493;
	add.s64 	%rd4596, %rd4592, %rd4595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd4567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd4567;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 14;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 14;
	mov.b64 	%rd4597, {%r3113, %r3112};
	shf.r.wrap.b32 	%r3114, %r3111, %r3110, 18;
	shf.r.wrap.b32 	%r3115, %r3110, %r3111, 18;
	mov.b64 	%rd4598, {%r3115, %r3114};
	xor.b64  	%rd4599, %rd4597, %rd4598;
	shf.l.wrap.b32 	%r3116, %r3110, %r3111, 23;
	shf.l.wrap.b32 	%r3117, %r3111, %r3110, 23;
	mov.b64 	%rd4600, {%r3117, %r3116};
	xor.b64  	%rd4601, %rd4599, %rd4600;
	add.s64 	%rd4602, %rd4596, %rd4601;
	add.s64 	%rd4603, %rd4602, -7894198246740708037;
	add.s64 	%rd4604, %rd4603, %rd4467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3118,%dummy}, %rd4578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3119}, %rd4578;
	}
	shf.r.wrap.b32 	%r3120, %r3119, %r3118, 28;
	shf.r.wrap.b32 	%r3121, %r3118, %r3119, 28;
	mov.b64 	%rd4605, {%r3121, %r3120};
	shf.l.wrap.b32 	%r3122, %r3118, %r3119, 30;
	shf.l.wrap.b32 	%r3123, %r3119, %r3118, 30;
	mov.b64 	%rd4606, {%r3123, %r3122};
	xor.b64  	%rd4607, %rd4605, %rd4606;
	shf.l.wrap.b32 	%r3124, %r3118, %r3119, 25;
	shf.l.wrap.b32 	%r3125, %r3119, %r3118, 25;
	mov.b64 	%rd4608, {%r3125, %r3124};
	xor.b64  	%rd4609, %rd4607, %rd4608;
	and.b64  	%rd4610, %rd4578, %rd4541;
	or.b64  	%rd4611, %rd4578, %rd4541;
	and.b64  	%rd4612, %rd4611, %rd4504;
	or.b64  	%rd4613, %rd4612, %rd4610;
	add.s64 	%rd4614, %rd4613, %rd4609;
	add.s64 	%rd4615, %rd4614, %rd4603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd4554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd4554;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 19;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 19;
	mov.b64 	%rd4616, {%r3129, %r3128};
	shf.l.wrap.b32 	%r3130, %r3126, %r3127, 3;
	shf.l.wrap.b32 	%r3131, %r3127, %r3126, 3;
	mov.b64 	%rd4617, {%r3131, %r3130};
	xor.b64  	%rd4618, %rd4616, %rd4617;
	shr.u64 	%rd4619, %rd4554, 6;
	xor.b64  	%rd4620, %rd4618, %rd4619;
	shf.r.wrap.b32 	%r3132, %r2785, %r2784, 1;
	shf.r.wrap.b32 	%r3133, %r2784, %r2785, 1;
	mov.b64 	%rd4621, {%r3133, %r3132};
	shf.r.wrap.b32 	%r3134, %r2785, %r2784, 8;
	shf.r.wrap.b32 	%r3135, %r2784, %r2785, 8;
	mov.b64 	%rd4622, {%r3135, %r3134};
	xor.b64  	%rd4623, %rd4621, %rd4622;
	shr.u64 	%rd4624, %rd4073, 7;
	xor.b64  	%rd4625, %rd4623, %rd4624;
	add.s64 	%rd4626, %rd4625, %rd4036;
	add.s64 	%rd4627, %rd4626, %rd4369;
	add.s64 	%rd4628, %rd4627, %rd4620;
	add.s64 	%rd4629, %rd4628, %rd4493;
	xor.b64  	%rd4630, %rd4567, %rd4530;
	and.b64  	%rd4631, %rd4604, %rd4630;
	xor.b64  	%rd4632, %rd4631, %rd4530;
	add.s64 	%rd4633, %rd4629, %rd4632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3136,%dummy}, %rd4604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd4604;
	}
	shf.r.wrap.b32 	%r3138, %r3137, %r3136, 14;
	shf.r.wrap.b32 	%r3139, %r3136, %r3137, 14;
	mov.b64 	%rd4634, {%r3139, %r3138};
	shf.r.wrap.b32 	%r3140, %r3137, %r3136, 18;
	shf.r.wrap.b32 	%r3141, %r3136, %r3137, 18;
	mov.b64 	%rd4635, {%r3141, %r3140};
	xor.b64  	%rd4636, %rd4634, %rd4635;
	shf.l.wrap.b32 	%r3142, %r3136, %r3137, 23;
	shf.l.wrap.b32 	%r3143, %r3137, %r3136, 23;
	mov.b64 	%rd4637, {%r3143, %r3142};
	xor.b64  	%rd4638, %rd4636, %rd4637;
	add.s64 	%rd4639, %rd4633, %rd4638;
	add.s64 	%rd4640, %rd4639, -6719396339535248540;
	add.s64 	%rd4641, %rd4640, %rd4504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3144,%dummy}, %rd4615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3145}, %rd4615;
	}
	shf.r.wrap.b32 	%r3146, %r3145, %r3144, 28;
	shf.r.wrap.b32 	%r3147, %r3144, %r3145, 28;
	mov.b64 	%rd4642, {%r3147, %r3146};
	shf.l.wrap.b32 	%r3148, %r3144, %r3145, 30;
	shf.l.wrap.b32 	%r3149, %r3145, %r3144, 30;
	mov.b64 	%rd4643, {%r3149, %r3148};
	xor.b64  	%rd4644, %rd4642, %rd4643;
	shf.l.wrap.b32 	%r3150, %r3144, %r3145, 25;
	shf.l.wrap.b32 	%r3151, %r3145, %r3144, 25;
	mov.b64 	%rd4645, {%r3151, %r3150};
	xor.b64  	%rd4646, %rd4644, %rd4645;
	and.b64  	%rd4647, %rd4615, %rd4578;
	or.b64  	%rd4648, %rd4615, %rd4578;
	and.b64  	%rd4649, %rd4648, %rd4541;
	or.b64  	%rd4650, %rd4649, %rd4647;
	add.s64 	%rd4651, %rd4650, %rd4646;
	add.s64 	%rd4652, %rd4651, %rd4640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3152,%dummy}, %rd4591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd4591;
	}
	shf.r.wrap.b32 	%r3154, %r3153, %r3152, 19;
	shf.r.wrap.b32 	%r3155, %r3152, %r3153, 19;
	mov.b64 	%rd4653, {%r3155, %r3154};
	shf.l.wrap.b32 	%r3156, %r3152, %r3153, 3;
	shf.l.wrap.b32 	%r3157, %r3153, %r3152, 3;
	mov.b64 	%rd4654, {%r3157, %r3156};
	xor.b64  	%rd4655, %rd4653, %rd4654;
	shr.u64 	%rd4656, %rd4591, 6;
	xor.b64  	%rd4657, %rd4655, %rd4656;
	shf.r.wrap.b32 	%r3158, %r2813, %r2812, 1;
	shf.r.wrap.b32 	%r3159, %r2812, %r2813, 1;
	mov.b64 	%rd4658, {%r3159, %r3158};
	shf.r.wrap.b32 	%r3160, %r2813, %r2812, 8;
	shf.r.wrap.b32 	%r3161, %r2812, %r2813, 8;
	mov.b64 	%rd4659, {%r3161, %r3160};
	xor.b64  	%rd4660, %rd4658, %rd4659;
	shr.u64 	%rd4661, %rd4110, 7;
	xor.b64  	%rd4662, %rd4660, %rd4661;
	add.s64 	%rd4663, %rd4662, %rd4073;
	add.s64 	%rd4664, %rd4663, %rd4406;
	add.s64 	%rd4665, %rd4664, %rd4657;
	add.s64 	%rd4666, %rd4665, %rd4530;
	xor.b64  	%rd4667, %rd4604, %rd4567;
	and.b64  	%rd4668, %rd4641, %rd4667;
	xor.b64  	%rd4669, %rd4668, %rd4567;
	add.s64 	%rd4670, %rd4666, %rd4669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd4641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3163}, %rd4641;
	}
	shf.r.wrap.b32 	%r3164, %r3163, %r3162, 14;
	shf.r.wrap.b32 	%r3165, %r3162, %r3163, 14;
	mov.b64 	%rd4671, {%r3165, %r3164};
	shf.r.wrap.b32 	%r3166, %r3163, %r3162, 18;
	shf.r.wrap.b32 	%r3167, %r3162, %r3163, 18;
	mov.b64 	%rd4672, {%r3167, %r3166};
	xor.b64  	%rd4673, %rd4671, %rd4672;
	shf.l.wrap.b32 	%r3168, %r3162, %r3163, 23;
	shf.l.wrap.b32 	%r3169, %r3163, %r3162, 23;
	mov.b64 	%rd4674, {%r3169, %r3168};
	xor.b64  	%rd4675, %rd4673, %rd4674;
	add.s64 	%rd4676, %rd4670, %rd4675;
	add.s64 	%rd4677, %rd4676, -6333637450476146687;
	add.s64 	%rd4678, %rd4677, %rd4541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3170,%dummy}, %rd4652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3171}, %rd4652;
	}
	shf.r.wrap.b32 	%r3172, %r3171, %r3170, 28;
	shf.r.wrap.b32 	%r3173, %r3170, %r3171, 28;
	mov.b64 	%rd4679, {%r3173, %r3172};
	shf.l.wrap.b32 	%r3174, %r3170, %r3171, 30;
	shf.l.wrap.b32 	%r3175, %r3171, %r3170, 30;
	mov.b64 	%rd4680, {%r3175, %r3174};
	xor.b64  	%rd4681, %rd4679, %rd4680;
	shf.l.wrap.b32 	%r3176, %r3170, %r3171, 25;
	shf.l.wrap.b32 	%r3177, %r3171, %r3170, 25;
	mov.b64 	%rd4682, {%r3177, %r3176};
	xor.b64  	%rd4683, %rd4681, %rd4682;
	and.b64  	%rd4684, %rd4652, %rd4615;
	or.b64  	%rd4685, %rd4652, %rd4615;
	and.b64  	%rd4686, %rd4685, %rd4578;
	or.b64  	%rd4687, %rd4686, %rd4684;
	add.s64 	%rd4688, %rd4687, %rd4683;
	add.s64 	%rd4689, %rd4688, %rd4677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd4628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3179}, %rd4628;
	}
	shf.r.wrap.b32 	%r3180, %r3179, %r3178, 19;
	shf.r.wrap.b32 	%r3181, %r3178, %r3179, 19;
	mov.b64 	%rd4690, {%r3181, %r3180};
	shf.l.wrap.b32 	%r3182, %r3178, %r3179, 3;
	shf.l.wrap.b32 	%r3183, %r3179, %r3178, 3;
	mov.b64 	%rd4691, {%r3183, %r3182};
	xor.b64  	%rd4692, %rd4690, %rd4691;
	shr.u64 	%rd4693, %rd4628, 6;
	xor.b64  	%rd4694, %rd4692, %rd4693;
	shf.r.wrap.b32 	%r3184, %r2841, %r2840, 1;
	shf.r.wrap.b32 	%r3185, %r2840, %r2841, 1;
	mov.b64 	%rd4695, {%r3185, %r3184};
	shf.r.wrap.b32 	%r3186, %r2841, %r2840, 8;
	shf.r.wrap.b32 	%r3187, %r2840, %r2841, 8;
	mov.b64 	%rd4696, {%r3187, %r3186};
	xor.b64  	%rd4697, %rd4695, %rd4696;
	shr.u64 	%rd4698, %rd4147, 7;
	xor.b64  	%rd4699, %rd4697, %rd4698;
	add.s64 	%rd4700, %rd4699, %rd4110;
	add.s64 	%rd4701, %rd4700, %rd4443;
	add.s64 	%rd4702, %rd4701, %rd4694;
	add.s64 	%rd4703, %rd4702, %rd4567;
	xor.b64  	%rd4704, %rd4641, %rd4604;
	and.b64  	%rd4705, %rd4678, %rd4704;
	xor.b64  	%rd4706, %rd4705, %rd4604;
	add.s64 	%rd4707, %rd4703, %rd4706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3188,%dummy}, %rd4678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3189}, %rd4678;
	}
	shf.r.wrap.b32 	%r3190, %r3189, %r3188, 14;
	shf.r.wrap.b32 	%r3191, %r3188, %r3189, 14;
	mov.b64 	%rd4708, {%r3191, %r3190};
	shf.r.wrap.b32 	%r3192, %r3189, %r3188, 18;
	shf.r.wrap.b32 	%r3193, %r3188, %r3189, 18;
	mov.b64 	%rd4709, {%r3193, %r3192};
	xor.b64  	%rd4710, %rd4708, %rd4709;
	shf.l.wrap.b32 	%r3194, %r3188, %r3189, 23;
	shf.l.wrap.b32 	%r3195, %r3189, %r3188, 23;
	mov.b64 	%rd4711, {%r3195, %r3194};
	xor.b64  	%rd4712, %rd4710, %rd4711;
	add.s64 	%rd4713, %rd4707, %rd4712;
	add.s64 	%rd4714, %rd4713, -4446306890439682159;
	add.s64 	%rd4715, %rd4714, %rd4578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3196,%dummy}, %rd4689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3197}, %rd4689;
	}
	shf.r.wrap.b32 	%r3198, %r3197, %r3196, 28;
	shf.r.wrap.b32 	%r3199, %r3196, %r3197, 28;
	mov.b64 	%rd4716, {%r3199, %r3198};
	shf.l.wrap.b32 	%r3200, %r3196, %r3197, 30;
	shf.l.wrap.b32 	%r3201, %r3197, %r3196, 30;
	mov.b64 	%rd4717, {%r3201, %r3200};
	xor.b64  	%rd4718, %rd4716, %rd4717;
	shf.l.wrap.b32 	%r3202, %r3196, %r3197, 25;
	shf.l.wrap.b32 	%r3203, %r3197, %r3196, 25;
	mov.b64 	%rd4719, {%r3203, %r3202};
	xor.b64  	%rd4720, %rd4718, %rd4719;
	and.b64  	%rd4721, %rd4689, %rd4652;
	or.b64  	%rd4722, %rd4689, %rd4652;
	and.b64  	%rd4723, %rd4722, %rd4615;
	or.b64  	%rd4724, %rd4723, %rd4721;
	add.s64 	%rd4725, %rd4724, %rd4720;
	add.s64 	%rd4726, %rd4725, %rd4714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3204,%dummy}, %rd4665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd4665;
	}
	shf.r.wrap.b32 	%r3206, %r3205, %r3204, 19;
	shf.r.wrap.b32 	%r3207, %r3204, %r3205, 19;
	mov.b64 	%rd4727, {%r3207, %r3206};
	shf.l.wrap.b32 	%r3208, %r3204, %r3205, 3;
	shf.l.wrap.b32 	%r3209, %r3205, %r3204, 3;
	mov.b64 	%rd4728, {%r3209, %r3208};
	xor.b64  	%rd4729, %rd4727, %rd4728;
	shr.u64 	%rd4730, %rd4665, 6;
	xor.b64  	%rd4731, %rd4729, %rd4730;
	shf.r.wrap.b32 	%r3210, %r2867, %r2866, 1;
	shf.r.wrap.b32 	%r3211, %r2866, %r2867, 1;
	mov.b64 	%rd4732, {%r3211, %r3210};
	shf.r.wrap.b32 	%r3212, %r2867, %r2866, 8;
	shf.r.wrap.b32 	%r3213, %r2866, %r2867, 8;
	mov.b64 	%rd4733, {%r3213, %r3212};
	xor.b64  	%rd4734, %rd4732, %rd4733;
	shr.u64 	%rd4735, %rd4184, 7;
	xor.b64  	%rd4736, %rd4734, %rd4735;
	add.s64 	%rd4737, %rd4736, %rd4147;
	add.s64 	%rd4738, %rd4737, %rd4480;
	add.s64 	%rd4739, %rd4738, %rd4731;
	add.s64 	%rd4740, %rd4739, %rd4604;
	xor.b64  	%rd4741, %rd4678, %rd4641;
	and.b64  	%rd4742, %rd4715, %rd4741;
	xor.b64  	%rd4743, %rd4742, %rd4641;
	add.s64 	%rd4744, %rd4740, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3214,%dummy}, %rd4715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3215}, %rd4715;
	}
	shf.r.wrap.b32 	%r3216, %r3215, %r3214, 14;
	shf.r.wrap.b32 	%r3217, %r3214, %r3215, 14;
	mov.b64 	%rd4745, {%r3217, %r3216};
	shf.r.wrap.b32 	%r3218, %r3215, %r3214, 18;
	shf.r.wrap.b32 	%r3219, %r3214, %r3215, 18;
	mov.b64 	%rd4746, {%r3219, %r3218};
	xor.b64  	%rd4747, %rd4745, %rd4746;
	shf.l.wrap.b32 	%r3220, %r3214, %r3215, 23;
	shf.l.wrap.b32 	%r3221, %r3215, %r3214, 23;
	mov.b64 	%rd4748, {%r3221, %r3220};
	xor.b64  	%rd4749, %rd4747, %rd4748;
	add.s64 	%rd4750, %rd4744, %rd4749;
	add.s64 	%rd4751, %rd4750, -4076793802049405392;
	add.s64 	%rd4752, %rd4751, %rd4615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd4726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3223}, %rd4726;
	}
	shf.r.wrap.b32 	%r3224, %r3223, %r3222, 28;
	shf.r.wrap.b32 	%r3225, %r3222, %r3223, 28;
	mov.b64 	%rd4753, {%r3225, %r3224};
	shf.l.wrap.b32 	%r3226, %r3222, %r3223, 30;
	shf.l.wrap.b32 	%r3227, %r3223, %r3222, 30;
	mov.b64 	%rd4754, {%r3227, %r3226};
	xor.b64  	%rd4755, %rd4753, %rd4754;
	shf.l.wrap.b32 	%r3228, %r3222, %r3223, 25;
	shf.l.wrap.b32 	%r3229, %r3223, %r3222, 25;
	mov.b64 	%rd4756, {%r3229, %r3228};
	xor.b64  	%rd4757, %rd4755, %rd4756;
	and.b64  	%rd4758, %rd4726, %rd4689;
	or.b64  	%rd4759, %rd4726, %rd4689;
	and.b64  	%rd4760, %rd4759, %rd4652;
	or.b64  	%rd4761, %rd4760, %rd4758;
	add.s64 	%rd4762, %rd4761, %rd4757;
	add.s64 	%rd4763, %rd4762, %rd4751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3230,%dummy}, %rd4702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3231}, %rd4702;
	}
	shf.r.wrap.b32 	%r3232, %r3231, %r3230, 19;
	shf.r.wrap.b32 	%r3233, %r3230, %r3231, 19;
	mov.b64 	%rd4764, {%r3233, %r3232};
	shf.l.wrap.b32 	%r3234, %r3230, %r3231, 3;
	shf.l.wrap.b32 	%r3235, %r3231, %r3230, 3;
	mov.b64 	%rd4765, {%r3235, %r3234};
	xor.b64  	%rd4766, %rd4764, %rd4765;
	shr.u64 	%rd4767, %rd4702, 6;
	xor.b64  	%rd4768, %rd4766, %rd4767;
	shf.r.wrap.b32 	%r3236, %r2893, %r2892, 1;
	shf.r.wrap.b32 	%r3237, %r2892, %r2893, 1;
	mov.b64 	%rd4769, {%r3237, %r3236};
	shf.r.wrap.b32 	%r3238, %r2893, %r2892, 8;
	shf.r.wrap.b32 	%r3239, %r2892, %r2893, 8;
	mov.b64 	%rd4770, {%r3239, %r3238};
	xor.b64  	%rd4771, %rd4769, %rd4770;
	shr.u64 	%rd4772, %rd4221, 7;
	xor.b64  	%rd4773, %rd4771, %rd4772;
	add.s64 	%rd4774, %rd4773, %rd4184;
	add.s64 	%rd4775, %rd4774, %rd4517;
	add.s64 	%rd4776, %rd4775, %rd4768;
	add.s64 	%rd4777, %rd4776, %rd4641;
	xor.b64  	%rd4778, %rd4715, %rd4678;
	and.b64  	%rd4779, %rd4752, %rd4778;
	xor.b64  	%rd4780, %rd4779, %rd4678;
	add.s64 	%rd4781, %rd4777, %rd4780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3240,%dummy}, %rd4752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3241}, %rd4752;
	}
	shf.r.wrap.b32 	%r3242, %r3241, %r3240, 14;
	shf.r.wrap.b32 	%r3243, %r3240, %r3241, 14;
	mov.b64 	%rd4782, {%r3243, %r3242};
	shf.r.wrap.b32 	%r3244, %r3241, %r3240, 18;
	shf.r.wrap.b32 	%r3245, %r3240, %r3241, 18;
	mov.b64 	%rd4783, {%r3245, %r3244};
	xor.b64  	%rd4784, %rd4782, %rd4783;
	shf.l.wrap.b32 	%r3246, %r3240, %r3241, 23;
	shf.l.wrap.b32 	%r3247, %r3241, %r3240, 23;
	mov.b64 	%rd4785, {%r3247, %r3246};
	xor.b64  	%rd4786, %rd4784, %rd4785;
	add.s64 	%rd4787, %rd4781, %rd4786;
	add.s64 	%rd4788, %rd4787, -3345356375505022440;
	add.s64 	%rd4789, %rd4788, %rd4652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3248,%dummy}, %rd4763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd4763;
	}
	shf.r.wrap.b32 	%r3250, %r3249, %r3248, 28;
	shf.r.wrap.b32 	%r3251, %r3248, %r3249, 28;
	mov.b64 	%rd4790, {%r3251, %r3250};
	shf.l.wrap.b32 	%r3252, %r3248, %r3249, 30;
	shf.l.wrap.b32 	%r3253, %r3249, %r3248, 30;
	mov.b64 	%rd4791, {%r3253, %r3252};
	xor.b64  	%rd4792, %rd4790, %rd4791;
	shf.l.wrap.b32 	%r3254, %r3248, %r3249, 25;
	shf.l.wrap.b32 	%r3255, %r3249, %r3248, 25;
	mov.b64 	%rd4793, {%r3255, %r3254};
	xor.b64  	%rd4794, %rd4792, %rd4793;
	and.b64  	%rd4795, %rd4763, %rd4726;
	or.b64  	%rd4796, %rd4763, %rd4726;
	and.b64  	%rd4797, %rd4796, %rd4689;
	or.b64  	%rd4798, %rd4797, %rd4795;
	add.s64 	%rd4799, %rd4798, %rd4794;
	add.s64 	%rd4800, %rd4799, %rd4788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3256,%dummy}, %rd4739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3257}, %rd4739;
	}
	shf.r.wrap.b32 	%r3258, %r3257, %r3256, 19;
	shf.r.wrap.b32 	%r3259, %r3256, %r3257, 19;
	mov.b64 	%rd4801, {%r3259, %r3258};
	shf.l.wrap.b32 	%r3260, %r3256, %r3257, 3;
	shf.l.wrap.b32 	%r3261, %r3257, %r3256, 3;
	mov.b64 	%rd4802, {%r3261, %r3260};
	xor.b64  	%rd4803, %rd4801, %rd4802;
	shr.u64 	%rd4804, %rd4739, 6;
	xor.b64  	%rd4805, %rd4803, %rd4804;
	shf.r.wrap.b32 	%r3262, %r2919, %r2918, 1;
	shf.r.wrap.b32 	%r3263, %r2918, %r2919, 1;
	mov.b64 	%rd4806, {%r3263, %r3262};
	shf.r.wrap.b32 	%r3264, %r2919, %r2918, 8;
	shf.r.wrap.b32 	%r3265, %r2918, %r2919, 8;
	mov.b64 	%rd4807, {%r3265, %r3264};
	xor.b64  	%rd4808, %rd4806, %rd4807;
	shr.u64 	%rd4809, %rd4258, 7;
	xor.b64  	%rd4810, %rd4808, %rd4809;
	add.s64 	%rd4811, %rd4810, %rd4221;
	add.s64 	%rd4812, %rd4811, %rd4554;
	add.s64 	%rd4813, %rd4812, %rd4805;
	add.s64 	%rd4814, %rd4813, %rd4678;
	xor.b64  	%rd4815, %rd4752, %rd4715;
	and.b64  	%rd4816, %rd4789, %rd4815;
	xor.b64  	%rd4817, %rd4816, %rd4715;
	add.s64 	%rd4818, %rd4814, %rd4817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd4789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3267}, %rd4789;
	}
	shf.r.wrap.b32 	%r3268, %r3267, %r3266, 14;
	shf.r.wrap.b32 	%r3269, %r3266, %r3267, 14;
	mov.b64 	%rd4819, {%r3269, %r3268};
	shf.r.wrap.b32 	%r3270, %r3267, %r3266, 18;
	shf.r.wrap.b32 	%r3271, %r3266, %r3267, 18;
	mov.b64 	%rd4820, {%r3271, %r3270};
	xor.b64  	%rd4821, %rd4819, %rd4820;
	shf.l.wrap.b32 	%r3272, %r3266, %r3267, 23;
	shf.l.wrap.b32 	%r3273, %r3267, %r3266, 23;
	mov.b64 	%rd4822, {%r3273, %r3272};
	xor.b64  	%rd4823, %rd4821, %rd4822;
	add.s64 	%rd4824, %rd4818, %rd4823;
	add.s64 	%rd4825, %rd4824, -2983346525034927856;
	add.s64 	%rd4826, %rd4825, %rd4689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3274,%dummy}, %rd4800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3275}, %rd4800;
	}
	shf.r.wrap.b32 	%r3276, %r3275, %r3274, 28;
	shf.r.wrap.b32 	%r3277, %r3274, %r3275, 28;
	mov.b64 	%rd4827, {%r3277, %r3276};
	shf.l.wrap.b32 	%r3278, %r3274, %r3275, 30;
	shf.l.wrap.b32 	%r3279, %r3275, %r3274, 30;
	mov.b64 	%rd4828, {%r3279, %r3278};
	xor.b64  	%rd4829, %rd4827, %rd4828;
	shf.l.wrap.b32 	%r3280, %r3274, %r3275, 25;
	shf.l.wrap.b32 	%r3281, %r3275, %r3274, 25;
	mov.b64 	%rd4830, {%r3281, %r3280};
	xor.b64  	%rd4831, %rd4829, %rd4830;
	and.b64  	%rd4832, %rd4800, %rd4763;
	or.b64  	%rd4833, %rd4800, %rd4763;
	and.b64  	%rd4834, %rd4833, %rd4726;
	or.b64  	%rd4835, %rd4834, %rd4832;
	add.s64 	%rd4836, %rd4835, %rd4831;
	add.s64 	%rd4837, %rd4836, %rd4825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd4776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd4776;
	}
	shf.r.wrap.b32 	%r3284, %r3283, %r3282, 19;
	shf.r.wrap.b32 	%r3285, %r3282, %r3283, 19;
	mov.b64 	%rd4838, {%r3285, %r3284};
	shf.l.wrap.b32 	%r3286, %r3282, %r3283, 3;
	shf.l.wrap.b32 	%r3287, %r3283, %r3282, 3;
	mov.b64 	%rd4839, {%r3287, %r3286};
	xor.b64  	%rd4840, %rd4838, %rd4839;
	shr.u64 	%rd4841, %rd4776, 6;
	xor.b64  	%rd4842, %rd4840, %rd4841;
	shf.r.wrap.b32 	%r3288, %r2945, %r2944, 1;
	shf.r.wrap.b32 	%r3289, %r2944, %r2945, 1;
	mov.b64 	%rd4843, {%r3289, %r3288};
	shf.r.wrap.b32 	%r3290, %r2945, %r2944, 8;
	shf.r.wrap.b32 	%r3291, %r2944, %r2945, 8;
	mov.b64 	%rd4844, {%r3291, %r3290};
	xor.b64  	%rd4845, %rd4843, %rd4844;
	shr.u64 	%rd4846, %rd4295, 7;
	xor.b64  	%rd4847, %rd4845, %rd4846;
	add.s64 	%rd4848, %rd4847, %rd4258;
	add.s64 	%rd4849, %rd4848, %rd4591;
	add.s64 	%rd4850, %rd4849, %rd4842;
	add.s64 	%rd4851, %rd4850, %rd4715;
	xor.b64  	%rd4852, %rd4789, %rd4752;
	and.b64  	%rd4853, %rd4826, %rd4852;
	xor.b64  	%rd4854, %rd4853, %rd4752;
	add.s64 	%rd4855, %rd4851, %rd4854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3292,%dummy}, %rd4826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3293}, %rd4826;
	}
	shf.r.wrap.b32 	%r3294, %r3293, %r3292, 14;
	shf.r.wrap.b32 	%r3295, %r3292, %r3293, 14;
	mov.b64 	%rd4856, {%r3295, %r3294};
	shf.r.wrap.b32 	%r3296, %r3293, %r3292, 18;
	shf.r.wrap.b32 	%r3297, %r3292, %r3293, 18;
	mov.b64 	%rd4857, {%r3297, %r3296};
	xor.b64  	%rd4858, %rd4856, %rd4857;
	shf.l.wrap.b32 	%r3298, %r3292, %r3293, 23;
	shf.l.wrap.b32 	%r3299, %r3293, %r3292, 23;
	mov.b64 	%rd4859, {%r3299, %r3298};
	xor.b64  	%rd4860, %rd4858, %rd4859;
	add.s64 	%rd4861, %rd4855, %rd4860;
	add.s64 	%rd4862, %rd4861, -860691631967231958;
	add.s64 	%rd4863, %rd4862, %rd4726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3300,%dummy}, %rd4837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3301}, %rd4837;
	}
	shf.r.wrap.b32 	%r3302, %r3301, %r3300, 28;
	shf.r.wrap.b32 	%r3303, %r3300, %r3301, 28;
	mov.b64 	%rd4864, {%r3303, %r3302};
	shf.l.wrap.b32 	%r3304, %r3300, %r3301, 30;
	shf.l.wrap.b32 	%r3305, %r3301, %r3300, 30;
	mov.b64 	%rd4865, {%r3305, %r3304};
	xor.b64  	%rd4866, %rd4864, %rd4865;
	shf.l.wrap.b32 	%r3306, %r3300, %r3301, 25;
	shf.l.wrap.b32 	%r3307, %r3301, %r3300, 25;
	mov.b64 	%rd4867, {%r3307, %r3306};
	xor.b64  	%rd4868, %rd4866, %rd4867;
	and.b64  	%rd4869, %rd4837, %rd4800;
	or.b64  	%rd4870, %rd4837, %rd4800;
	and.b64  	%rd4871, %rd4870, %rd4763;
	or.b64  	%rd4872, %rd4871, %rd4869;
	add.s64 	%rd4873, %rd4872, %rd4868;
	add.s64 	%rd4874, %rd4873, %rd4862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3308,%dummy}, %rd4813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3309}, %rd4813;
	}
	shf.r.wrap.b32 	%r3310, %r3309, %r3308, 19;
	shf.r.wrap.b32 	%r3311, %r3308, %r3309, 19;
	mov.b64 	%rd4875, {%r3311, %r3310};
	shf.l.wrap.b32 	%r3312, %r3308, %r3309, 3;
	shf.l.wrap.b32 	%r3313, %r3309, %r3308, 3;
	mov.b64 	%rd4876, {%r3313, %r3312};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	shr.u64 	%rd4878, %rd4813, 6;
	xor.b64  	%rd4879, %rd4877, %rd4878;
	shf.r.wrap.b32 	%r3314, %r2971, %r2970, 1;
	shf.r.wrap.b32 	%r3315, %r2970, %r2971, 1;
	mov.b64 	%rd4880, {%r3315, %r3314};
	shf.r.wrap.b32 	%r3316, %r2971, %r2970, 8;
	shf.r.wrap.b32 	%r3317, %r2970, %r2971, 8;
	mov.b64 	%rd4881, {%r3317, %r3316};
	xor.b64  	%rd4882, %rd4880, %rd4881;
	shr.u64 	%rd4883, %rd4332, 7;
	xor.b64  	%rd4884, %rd4882, %rd4883;
	add.s64 	%rd4885, %rd4884, %rd4295;
	add.s64 	%rd4886, %rd4885, %rd4628;
	add.s64 	%rd4887, %rd4886, %rd4879;
	add.s64 	%rd4888, %rd4887, %rd4752;
	xor.b64  	%rd4889, %rd4826, %rd4789;
	and.b64  	%rd4890, %rd4863, %rd4889;
	xor.b64  	%rd4891, %rd4890, %rd4789;
	add.s64 	%rd4892, %rd4888, %rd4891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3318,%dummy}, %rd4863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3319}, %rd4863;
	}
	shf.r.wrap.b32 	%r3320, %r3319, %r3318, 14;
	shf.r.wrap.b32 	%r3321, %r3318, %r3319, 14;
	mov.b64 	%rd4893, {%r3321, %r3320};
	shf.r.wrap.b32 	%r3322, %r3319, %r3318, 18;
	shf.r.wrap.b32 	%r3323, %r3318, %r3319, 18;
	mov.b64 	%rd4894, {%r3323, %r3322};
	xor.b64  	%rd4895, %rd4893, %rd4894;
	shf.l.wrap.b32 	%r3324, %r3318, %r3319, 23;
	shf.l.wrap.b32 	%r3325, %r3319, %r3318, 23;
	mov.b64 	%rd4896, {%r3325, %r3324};
	xor.b64  	%rd4897, %rd4895, %rd4896;
	add.s64 	%rd4898, %rd4892, %rd4897;
	add.s64 	%rd4899, %rd4898, 1182934255886127544;
	add.s64 	%rd4900, %rd4899, %rd4763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3326,%dummy}, %rd4874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3327}, %rd4874;
	}
	shf.r.wrap.b32 	%r3328, %r3327, %r3326, 28;
	shf.r.wrap.b32 	%r3329, %r3326, %r3327, 28;
	mov.b64 	%rd4901, {%r3329, %r3328};
	shf.l.wrap.b32 	%r3330, %r3326, %r3327, 30;
	shf.l.wrap.b32 	%r3331, %r3327, %r3326, 30;
	mov.b64 	%rd4902, {%r3331, %r3330};
	xor.b64  	%rd4903, %rd4901, %rd4902;
	shf.l.wrap.b32 	%r3332, %r3326, %r3327, 25;
	shf.l.wrap.b32 	%r3333, %r3327, %r3326, 25;
	mov.b64 	%rd4904, {%r3333, %r3332};
	xor.b64  	%rd4905, %rd4903, %rd4904;
	and.b64  	%rd4906, %rd4874, %rd4837;
	or.b64  	%rd4907, %rd4874, %rd4837;
	and.b64  	%rd4908, %rd4907, %rd4800;
	or.b64  	%rd4909, %rd4908, %rd4906;
	add.s64 	%rd4910, %rd4909, %rd4905;
	add.s64 	%rd4911, %rd4910, %rd4899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3334,%dummy}, %rd4850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3335}, %rd4850;
	}
	shf.r.wrap.b32 	%r3336, %r3335, %r3334, 19;
	shf.r.wrap.b32 	%r3337, %r3334, %r3335, 19;
	mov.b64 	%rd4912, {%r3337, %r3336};
	shf.l.wrap.b32 	%r3338, %r3334, %r3335, 3;
	shf.l.wrap.b32 	%r3339, %r3335, %r3334, 3;
	mov.b64 	%rd4913, {%r3339, %r3338};
	xor.b64  	%rd4914, %rd4912, %rd4913;
	shr.u64 	%rd4915, %rd4850, 6;
	xor.b64  	%rd4916, %rd4914, %rd4915;
	shf.r.wrap.b32 	%r3340, %r2997, %r2996, 1;
	shf.r.wrap.b32 	%r3341, %r2996, %r2997, 1;
	mov.b64 	%rd4917, {%r3341, %r3340};
	shf.r.wrap.b32 	%r3342, %r2997, %r2996, 8;
	shf.r.wrap.b32 	%r3343, %r2996, %r2997, 8;
	mov.b64 	%rd4918, {%r3343, %r3342};
	xor.b64  	%rd4919, %rd4917, %rd4918;
	shr.u64 	%rd4920, %rd4369, 7;
	xor.b64  	%rd4921, %rd4919, %rd4920;
	add.s64 	%rd4922, %rd4921, %rd4332;
	add.s64 	%rd4923, %rd4922, %rd4665;
	add.s64 	%rd4924, %rd4923, %rd4916;
	add.s64 	%rd4925, %rd4924, %rd4789;
	xor.b64  	%rd4926, %rd4863, %rd4826;
	and.b64  	%rd4927, %rd4900, %rd4926;
	xor.b64  	%rd4928, %rd4927, %rd4826;
	add.s64 	%rd4929, %rd4925, %rd4928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3344,%dummy}, %rd4900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3345}, %rd4900;
	}
	shf.r.wrap.b32 	%r3346, %r3345, %r3344, 14;
	shf.r.wrap.b32 	%r3347, %r3344, %r3345, 14;
	mov.b64 	%rd4930, {%r3347, %r3346};
	shf.r.wrap.b32 	%r3348, %r3345, %r3344, 18;
	shf.r.wrap.b32 	%r3349, %r3344, %r3345, 18;
	mov.b64 	%rd4931, {%r3349, %r3348};
	xor.b64  	%rd4932, %rd4930, %rd4931;
	shf.l.wrap.b32 	%r3350, %r3344, %r3345, 23;
	shf.l.wrap.b32 	%r3351, %r3345, %r3344, 23;
	mov.b64 	%rd4933, {%r3351, %r3350};
	xor.b64  	%rd4934, %rd4932, %rd4933;
	add.s64 	%rd4935, %rd4929, %rd4934;
	add.s64 	%rd4936, %rd4935, 1847814050463011016;
	add.s64 	%rd4937, %rd4936, %rd4800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3352,%dummy}, %rd4911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3353}, %rd4911;
	}
	shf.r.wrap.b32 	%r3354, %r3353, %r3352, 28;
	shf.r.wrap.b32 	%r3355, %r3352, %r3353, 28;
	mov.b64 	%rd4938, {%r3355, %r3354};
	shf.l.wrap.b32 	%r3356, %r3352, %r3353, 30;
	shf.l.wrap.b32 	%r3357, %r3353, %r3352, 30;
	mov.b64 	%rd4939, {%r3357, %r3356};
	xor.b64  	%rd4940, %rd4938, %rd4939;
	shf.l.wrap.b32 	%r3358, %r3352, %r3353, 25;
	shf.l.wrap.b32 	%r3359, %r3353, %r3352, 25;
	mov.b64 	%rd4941, {%r3359, %r3358};
	xor.b64  	%rd4942, %rd4940, %rd4941;
	and.b64  	%rd4943, %rd4911, %rd4874;
	or.b64  	%rd4944, %rd4911, %rd4874;
	and.b64  	%rd4945, %rd4944, %rd4837;
	or.b64  	%rd4946, %rd4945, %rd4943;
	add.s64 	%rd4947, %rd4946, %rd4942;
	add.s64 	%rd4948, %rd4947, %rd4936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3360,%dummy}, %rd4887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3361}, %rd4887;
	}
	shf.r.wrap.b32 	%r3362, %r3361, %r3360, 19;
	shf.r.wrap.b32 	%r3363, %r3360, %r3361, 19;
	mov.b64 	%rd4949, {%r3363, %r3362};
	shf.l.wrap.b32 	%r3364, %r3360, %r3361, 3;
	shf.l.wrap.b32 	%r3365, %r3361, %r3360, 3;
	mov.b64 	%rd4950, {%r3365, %r3364};
	xor.b64  	%rd4951, %rd4949, %rd4950;
	shr.u64 	%rd4952, %rd4887, 6;
	xor.b64  	%rd4953, %rd4951, %rd4952;
	shf.r.wrap.b32 	%r3366, %r3023, %r3022, 1;
	shf.r.wrap.b32 	%r3367, %r3022, %r3023, 1;
	mov.b64 	%rd4954, {%r3367, %r3366};
	shf.r.wrap.b32 	%r3368, %r3023, %r3022, 8;
	shf.r.wrap.b32 	%r3369, %r3022, %r3023, 8;
	mov.b64 	%rd4955, {%r3369, %r3368};
	xor.b64  	%rd4956, %rd4954, %rd4955;
	shr.u64 	%rd4957, %rd4406, 7;
	xor.b64  	%rd4958, %rd4956, %rd4957;
	add.s64 	%rd4959, %rd4958, %rd4369;
	add.s64 	%rd4960, %rd4959, %rd4702;
	add.s64 	%rd4961, %rd4960, %rd4953;
	add.s64 	%rd4962, %rd4961, %rd4826;
	xor.b64  	%rd4963, %rd4900, %rd4863;
	and.b64  	%rd4964, %rd4937, %rd4963;
	xor.b64  	%rd4965, %rd4964, %rd4863;
	add.s64 	%rd4966, %rd4962, %rd4965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd4937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3371}, %rd4937;
	}
	shf.r.wrap.b32 	%r3372, %r3371, %r3370, 14;
	shf.r.wrap.b32 	%r3373, %r3370, %r3371, 14;
	mov.b64 	%rd4967, {%r3373, %r3372};
	shf.r.wrap.b32 	%r3374, %r3371, %r3370, 18;
	shf.r.wrap.b32 	%r3375, %r3370, %r3371, 18;
	mov.b64 	%rd4968, {%r3375, %r3374};
	xor.b64  	%rd4969, %rd4967, %rd4968;
	shf.l.wrap.b32 	%r3376, %r3370, %r3371, 23;
	shf.l.wrap.b32 	%r3377, %r3371, %r3370, 23;
	mov.b64 	%rd4970, {%r3377, %r3376};
	xor.b64  	%rd4971, %rd4969, %rd4970;
	add.s64 	%rd4972, %rd4966, %rd4971;
	add.s64 	%rd4973, %rd4972, 2177327727835720531;
	add.s64 	%rd4974, %rd4973, %rd4837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3378,%dummy}, %rd4948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3379}, %rd4948;
	}
	shf.r.wrap.b32 	%r3380, %r3379, %r3378, 28;
	shf.r.wrap.b32 	%r3381, %r3378, %r3379, 28;
	mov.b64 	%rd4975, {%r3381, %r3380};
	shf.l.wrap.b32 	%r3382, %r3378, %r3379, 30;
	shf.l.wrap.b32 	%r3383, %r3379, %r3378, 30;
	mov.b64 	%rd4976, {%r3383, %r3382};
	xor.b64  	%rd4977, %rd4975, %rd4976;
	shf.l.wrap.b32 	%r3384, %r3378, %r3379, 25;
	shf.l.wrap.b32 	%r3385, %r3379, %r3378, 25;
	mov.b64 	%rd4978, {%r3385, %r3384};
	xor.b64  	%rd4979, %rd4977, %rd4978;
	and.b64  	%rd4980, %rd4948, %rd4911;
	or.b64  	%rd4981, %rd4948, %rd4911;
	and.b64  	%rd4982, %rd4981, %rd4874;
	or.b64  	%rd4983, %rd4982, %rd4980;
	add.s64 	%rd4984, %rd4983, %rd4979;
	add.s64 	%rd4985, %rd4984, %rd4973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd4924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd4924;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 19;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 19;
	mov.b64 	%rd4986, {%r3389, %r3388};
	shf.l.wrap.b32 	%r3390, %r3386, %r3387, 3;
	shf.l.wrap.b32 	%r3391, %r3387, %r3386, 3;
	mov.b64 	%rd4987, {%r3391, %r3390};
	xor.b64  	%rd4988, %rd4986, %rd4987;
	shr.u64 	%rd4989, %rd4924, 6;
	xor.b64  	%rd4990, %rd4988, %rd4989;
	shf.r.wrap.b32 	%r3392, %r3049, %r3048, 1;
	shf.r.wrap.b32 	%r3393, %r3048, %r3049, 1;
	mov.b64 	%rd4991, {%r3393, %r3392};
	shf.r.wrap.b32 	%r3394, %r3049, %r3048, 8;
	shf.r.wrap.b32 	%r3395, %r3048, %r3049, 8;
	mov.b64 	%rd4992, {%r3395, %r3394};
	xor.b64  	%rd4993, %rd4991, %rd4992;
	shr.u64 	%rd4994, %rd4443, 7;
	xor.b64  	%rd4995, %rd4993, %rd4994;
	add.s64 	%rd4996, %rd4995, %rd4406;
	add.s64 	%rd4997, %rd4996, %rd4739;
	add.s64 	%rd4998, %rd4997, %rd4990;
	add.s64 	%rd4999, %rd4998, %rd4863;
	xor.b64  	%rd5000, %rd4937, %rd4900;
	and.b64  	%rd5001, %rd4974, %rd5000;
	xor.b64  	%rd5002, %rd5001, %rd4900;
	add.s64 	%rd5003, %rd4999, %rd5002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3396,%dummy}, %rd4974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd4974;
	}
	shf.r.wrap.b32 	%r3398, %r3397, %r3396, 14;
	shf.r.wrap.b32 	%r3399, %r3396, %r3397, 14;
	mov.b64 	%rd5004, {%r3399, %r3398};
	shf.r.wrap.b32 	%r3400, %r3397, %r3396, 18;
	shf.r.wrap.b32 	%r3401, %r3396, %r3397, 18;
	mov.b64 	%rd5005, {%r3401, %r3400};
	xor.b64  	%rd5006, %rd5004, %rd5005;
	shf.l.wrap.b32 	%r3402, %r3396, %r3397, 23;
	shf.l.wrap.b32 	%r3403, %r3397, %r3396, 23;
	mov.b64 	%rd5007, {%r3403, %r3402};
	xor.b64  	%rd5008, %rd5006, %rd5007;
	add.s64 	%rd5009, %rd5003, %rd5008;
	add.s64 	%rd5010, %rd5009, 2830643537854262169;
	add.s64 	%rd5011, %rd5010, %rd4874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3404,%dummy}, %rd4985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3405}, %rd4985;
	}
	shf.r.wrap.b32 	%r3406, %r3405, %r3404, 28;
	shf.r.wrap.b32 	%r3407, %r3404, %r3405, 28;
	mov.b64 	%rd5012, {%r3407, %r3406};
	shf.l.wrap.b32 	%r3408, %r3404, %r3405, 30;
	shf.l.wrap.b32 	%r3409, %r3405, %r3404, 30;
	mov.b64 	%rd5013, {%r3409, %r3408};
	xor.b64  	%rd5014, %rd5012, %rd5013;
	shf.l.wrap.b32 	%r3410, %r3404, %r3405, 25;
	shf.l.wrap.b32 	%r3411, %r3405, %r3404, 25;
	mov.b64 	%rd5015, {%r3411, %r3410};
	xor.b64  	%rd5016, %rd5014, %rd5015;
	and.b64  	%rd5017, %rd4985, %rd4948;
	or.b64  	%rd5018, %rd4985, %rd4948;
	and.b64  	%rd5019, %rd5018, %rd4911;
	or.b64  	%rd5020, %rd5019, %rd5017;
	add.s64 	%rd5021, %rd5020, %rd5016;
	add.s64 	%rd5022, %rd5021, %rd5010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3412,%dummy}, %rd4961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3413}, %rd4961;
	}
	shf.r.wrap.b32 	%r3414, %r3413, %r3412, 19;
	shf.r.wrap.b32 	%r3415, %r3412, %r3413, 19;
	mov.b64 	%rd5023, {%r3415, %r3414};
	shf.l.wrap.b32 	%r3416, %r3412, %r3413, 3;
	shf.l.wrap.b32 	%r3417, %r3413, %r3412, 3;
	mov.b64 	%rd5024, {%r3417, %r3416};
	xor.b64  	%rd5025, %rd5023, %rd5024;
	shr.u64 	%rd5026, %rd4961, 6;
	xor.b64  	%rd5027, %rd5025, %rd5026;
	shf.r.wrap.b32 	%r3418, %r3075, %r3074, 1;
	shf.r.wrap.b32 	%r3419, %r3074, %r3075, 1;
	mov.b64 	%rd5028, {%r3419, %r3418};
	shf.r.wrap.b32 	%r3420, %r3075, %r3074, 8;
	shf.r.wrap.b32 	%r3421, %r3074, %r3075, 8;
	mov.b64 	%rd5029, {%r3421, %r3420};
	xor.b64  	%rd5030, %rd5028, %rd5029;
	shr.u64 	%rd5031, %rd4480, 7;
	xor.b64  	%rd5032, %rd5030, %rd5031;
	add.s64 	%rd5033, %rd5032, %rd4443;
	add.s64 	%rd5034, %rd5033, %rd4776;
	add.s64 	%rd5035, %rd5034, %rd5027;
	add.s64 	%rd5036, %rd5035, %rd4900;
	xor.b64  	%rd5037, %rd4974, %rd4937;
	and.b64  	%rd5038, %rd5011, %rd5037;
	xor.b64  	%rd5039, %rd5038, %rd4937;
	add.s64 	%rd5040, %rd5036, %rd5039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3422,%dummy}, %rd5011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3423}, %rd5011;
	}
	shf.r.wrap.b32 	%r3424, %r3423, %r3422, 14;
	shf.r.wrap.b32 	%r3425, %r3422, %r3423, 14;
	mov.b64 	%rd5041, {%r3425, %r3424};
	shf.r.wrap.b32 	%r3426, %r3423, %r3422, 18;
	shf.r.wrap.b32 	%r3427, %r3422, %r3423, 18;
	mov.b64 	%rd5042, {%r3427, %r3426};
	xor.b64  	%rd5043, %rd5041, %rd5042;
	shf.l.wrap.b32 	%r3428, %r3422, %r3423, 23;
	shf.l.wrap.b32 	%r3429, %r3423, %r3422, 23;
	mov.b64 	%rd5044, {%r3429, %r3428};
	xor.b64  	%rd5045, %rd5043, %rd5044;
	add.s64 	%rd5046, %rd5040, %rd5045;
	add.s64 	%rd5047, %rd5046, 3796741975233480872;
	add.s64 	%rd5048, %rd5047, %rd4911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3430,%dummy}, %rd5022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3431}, %rd5022;
	}
	shf.r.wrap.b32 	%r3432, %r3431, %r3430, 28;
	shf.r.wrap.b32 	%r3433, %r3430, %r3431, 28;
	mov.b64 	%rd5049, {%r3433, %r3432};
	shf.l.wrap.b32 	%r3434, %r3430, %r3431, 30;
	shf.l.wrap.b32 	%r3435, %r3431, %r3430, 30;
	mov.b64 	%rd5050, {%r3435, %r3434};
	xor.b64  	%rd5051, %rd5049, %rd5050;
	shf.l.wrap.b32 	%r3436, %r3430, %r3431, 25;
	shf.l.wrap.b32 	%r3437, %r3431, %r3430, 25;
	mov.b64 	%rd5052, {%r3437, %r3436};
	xor.b64  	%rd5053, %rd5051, %rd5052;
	and.b64  	%rd5054, %rd5022, %rd4985;
	or.b64  	%rd5055, %rd5022, %rd4985;
	and.b64  	%rd5056, %rd5055, %rd4948;
	or.b64  	%rd5057, %rd5056, %rd5054;
	add.s64 	%rd5058, %rd5057, %rd5053;
	add.s64 	%rd5059, %rd5058, %rd5047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3438,%dummy}, %rd4998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3439}, %rd4998;
	}
	shf.r.wrap.b32 	%r3440, %r3439, %r3438, 19;
	shf.r.wrap.b32 	%r3441, %r3438, %r3439, 19;
	mov.b64 	%rd5060, {%r3441, %r3440};
	shf.l.wrap.b32 	%r3442, %r3438, %r3439, 3;
	shf.l.wrap.b32 	%r3443, %r3439, %r3438, 3;
	mov.b64 	%rd5061, {%r3443, %r3442};
	xor.b64  	%rd5062, %rd5060, %rd5061;
	shr.u64 	%rd5063, %rd4998, 6;
	xor.b64  	%rd5064, %rd5062, %rd5063;
	shf.r.wrap.b32 	%r3444, %r3101, %r3100, 1;
	shf.r.wrap.b32 	%r3445, %r3100, %r3101, 1;
	mov.b64 	%rd5065, {%r3445, %r3444};
	shf.r.wrap.b32 	%r3446, %r3101, %r3100, 8;
	shf.r.wrap.b32 	%r3447, %r3100, %r3101, 8;
	mov.b64 	%rd5066, {%r3447, %r3446};
	xor.b64  	%rd5067, %rd5065, %rd5066;
	shr.u64 	%rd5068, %rd4517, 7;
	xor.b64  	%rd5069, %rd5067, %rd5068;
	add.s64 	%rd5070, %rd5069, %rd4480;
	add.s64 	%rd5071, %rd5070, %rd4813;
	add.s64 	%rd5072, %rd5071, %rd5064;
	add.s64 	%rd5073, %rd5072, %rd4937;
	xor.b64  	%rd5074, %rd5011, %rd4974;
	and.b64  	%rd5075, %rd5048, %rd5074;
	xor.b64  	%rd5076, %rd5075, %rd4974;
	add.s64 	%rd5077, %rd5073, %rd5076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3448,%dummy}, %rd5048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3449}, %rd5048;
	}
	shf.r.wrap.b32 	%r3450, %r3449, %r3448, 14;
	shf.r.wrap.b32 	%r3451, %r3448, %r3449, 14;
	mov.b64 	%rd5078, {%r3451, %r3450};
	shf.r.wrap.b32 	%r3452, %r3449, %r3448, 18;
	shf.r.wrap.b32 	%r3453, %r3448, %r3449, 18;
	mov.b64 	%rd5079, {%r3453, %r3452};
	xor.b64  	%rd5080, %rd5078, %rd5079;
	shf.l.wrap.b32 	%r3454, %r3448, %r3449, 23;
	shf.l.wrap.b32 	%r3455, %r3449, %r3448, 23;
	mov.b64 	%rd5081, {%r3455, %r3454};
	xor.b64  	%rd5082, %rd5080, %rd5081;
	add.s64 	%rd5083, %rd5077, %rd5082;
	add.s64 	%rd5084, %rd5083, 4115178125766777443;
	add.s64 	%rd5085, %rd5084, %rd4948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd5059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd5059;
	}
	shf.r.wrap.b32 	%r3458, %r3457, %r3456, 28;
	shf.r.wrap.b32 	%r3459, %r3456, %r3457, 28;
	mov.b64 	%rd5086, {%r3459, %r3458};
	shf.l.wrap.b32 	%r3460, %r3456, %r3457, 30;
	shf.l.wrap.b32 	%r3461, %r3457, %r3456, 30;
	mov.b64 	%rd5087, {%r3461, %r3460};
	xor.b64  	%rd5088, %rd5086, %rd5087;
	shf.l.wrap.b32 	%r3462, %r3456, %r3457, 25;
	shf.l.wrap.b32 	%r3463, %r3457, %r3456, 25;
	mov.b64 	%rd5089, {%r3463, %r3462};
	xor.b64  	%rd5090, %rd5088, %rd5089;
	and.b64  	%rd5091, %rd5059, %rd5022;
	or.b64  	%rd5092, %rd5059, %rd5022;
	and.b64  	%rd5093, %rd5092, %rd4985;
	or.b64  	%rd5094, %rd5093, %rd5091;
	add.s64 	%rd5095, %rd5094, %rd5090;
	add.s64 	%rd5096, %rd5095, %rd5084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3464,%dummy}, %rd5035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3465}, %rd5035;
	}
	shf.r.wrap.b32 	%r3466, %r3465, %r3464, 19;
	shf.r.wrap.b32 	%r3467, %r3464, %r3465, 19;
	mov.b64 	%rd5097, {%r3467, %r3466};
	shf.l.wrap.b32 	%r3468, %r3464, %r3465, 3;
	shf.l.wrap.b32 	%r3469, %r3465, %r3464, 3;
	mov.b64 	%rd5098, {%r3469, %r3468};
	xor.b64  	%rd5099, %rd5097, %rd5098;
	shr.u64 	%rd5100, %rd5035, 6;
	xor.b64  	%rd5101, %rd5099, %rd5100;
	shf.r.wrap.b32 	%r3470, %r3127, %r3126, 1;
	shf.r.wrap.b32 	%r3471, %r3126, %r3127, 1;
	mov.b64 	%rd5102, {%r3471, %r3470};
	shf.r.wrap.b32 	%r3472, %r3127, %r3126, 8;
	shf.r.wrap.b32 	%r3473, %r3126, %r3127, 8;
	mov.b64 	%rd5103, {%r3473, %r3472};
	xor.b64  	%rd5104, %rd5102, %rd5103;
	shr.u64 	%rd5105, %rd4554, 7;
	xor.b64  	%rd5106, %rd5104, %rd5105;
	add.s64 	%rd5107, %rd5106, %rd4517;
	add.s64 	%rd5108, %rd5107, %rd4850;
	add.s64 	%rd5109, %rd5108, %rd5101;
	add.s64 	%rd5110, %rd5109, %rd4974;
	xor.b64  	%rd5111, %rd5048, %rd5011;
	and.b64  	%rd5112, %rd5085, %rd5111;
	xor.b64  	%rd5113, %rd5112, %rd5011;
	add.s64 	%rd5114, %rd5110, %rd5113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3474,%dummy}, %rd5085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3475}, %rd5085;
	}
	shf.r.wrap.b32 	%r3476, %r3475, %r3474, 14;
	shf.r.wrap.b32 	%r3477, %r3474, %r3475, 14;
	mov.b64 	%rd5115, {%r3477, %r3476};
	shf.r.wrap.b32 	%r3478, %r3475, %r3474, 18;
	shf.r.wrap.b32 	%r3479, %r3474, %r3475, 18;
	mov.b64 	%rd5116, {%r3479, %r3478};
	xor.b64  	%rd5117, %rd5115, %rd5116;
	shf.l.wrap.b32 	%r3480, %r3474, %r3475, 23;
	shf.l.wrap.b32 	%r3481, %r3475, %r3474, 23;
	mov.b64 	%rd5118, {%r3481, %r3480};
	xor.b64  	%rd5119, %rd5117, %rd5118;
	add.s64 	%rd5120, %rd5114, %rd5119;
	add.s64 	%rd5121, %rd5120, 5681478168544905931;
	add.s64 	%rd5122, %rd5121, %rd4985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3482,%dummy}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3483}, %rd5096;
	}
	shf.r.wrap.b32 	%r3484, %r3483, %r3482, 28;
	shf.r.wrap.b32 	%r3485, %r3482, %r3483, 28;
	mov.b64 	%rd5123, {%r3485, %r3484};
	shf.l.wrap.b32 	%r3486, %r3482, %r3483, 30;
	shf.l.wrap.b32 	%r3487, %r3483, %r3482, 30;
	mov.b64 	%rd5124, {%r3487, %r3486};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	shf.l.wrap.b32 	%r3488, %r3482, %r3483, 25;
	shf.l.wrap.b32 	%r3489, %r3483, %r3482, 25;
	mov.b64 	%rd5126, {%r3489, %r3488};
	xor.b64  	%rd5127, %rd5125, %rd5126;
	and.b64  	%rd5128, %rd5096, %rd5059;
	or.b64  	%rd5129, %rd5096, %rd5059;
	and.b64  	%rd5130, %rd5129, %rd5022;
	or.b64  	%rd5131, %rd5130, %rd5128;
	add.s64 	%rd5132, %rd5131, %rd5127;
	add.s64 	%rd5133, %rd5132, %rd5121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3490,%dummy}, %rd5072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3491}, %rd5072;
	}
	shf.r.wrap.b32 	%r3492, %r3491, %r3490, 19;
	shf.r.wrap.b32 	%r3493, %r3490, %r3491, 19;
	mov.b64 	%rd5134, {%r3493, %r3492};
	shf.l.wrap.b32 	%r3494, %r3490, %r3491, 3;
	shf.l.wrap.b32 	%r3495, %r3491, %r3490, 3;
	mov.b64 	%rd5135, {%r3495, %r3494};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	shr.u64 	%rd5137, %rd5072, 6;
	xor.b64  	%rd5138, %rd5136, %rd5137;
	shf.r.wrap.b32 	%r3496, %r3153, %r3152, 1;
	shf.r.wrap.b32 	%r3497, %r3152, %r3153, 1;
	mov.b64 	%rd5139, {%r3497, %r3496};
	shf.r.wrap.b32 	%r3498, %r3153, %r3152, 8;
	shf.r.wrap.b32 	%r3499, %r3152, %r3153, 8;
	mov.b64 	%rd5140, {%r3499, %r3498};
	xor.b64  	%rd5141, %rd5139, %rd5140;
	shr.u64 	%rd5142, %rd4591, 7;
	xor.b64  	%rd5143, %rd5141, %rd5142;
	add.s64 	%rd5144, %rd5143, %rd4554;
	add.s64 	%rd5145, %rd5144, %rd4887;
	add.s64 	%rd5146, %rd5145, %rd5138;
	add.s64 	%rd5147, %rd5146, %rd5011;
	xor.b64  	%rd5148, %rd5085, %rd5048;
	and.b64  	%rd5149, %rd5122, %rd5148;
	xor.b64  	%rd5150, %rd5149, %rd5048;
	add.s64 	%rd5151, %rd5147, %rd5150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3500,%dummy}, %rd5122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3501}, %rd5122;
	}
	shf.r.wrap.b32 	%r3502, %r3501, %r3500, 14;
	shf.r.wrap.b32 	%r3503, %r3500, %r3501, 14;
	mov.b64 	%rd5152, {%r3503, %r3502};
	shf.r.wrap.b32 	%r3504, %r3501, %r3500, 18;
	shf.r.wrap.b32 	%r3505, %r3500, %r3501, 18;
	mov.b64 	%rd5153, {%r3505, %r3504};
	xor.b64  	%rd5154, %rd5152, %rd5153;
	shf.l.wrap.b32 	%r3506, %r3500, %r3501, 23;
	shf.l.wrap.b32 	%r3507, %r3501, %r3500, 23;
	mov.b64 	%rd5155, {%r3507, %r3506};
	xor.b64  	%rd5156, %rd5154, %rd5155;
	add.s64 	%rd5157, %rd5151, %rd5156;
	add.s64 	%rd5158, %rd5157, 6601373596472566643;
	add.s64 	%rd5159, %rd5158, %rd5022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3508,%dummy}, %rd5133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3509}, %rd5133;
	}
	shf.r.wrap.b32 	%r3510, %r3509, %r3508, 28;
	shf.r.wrap.b32 	%r3511, %r3508, %r3509, 28;
	mov.b64 	%rd5160, {%r3511, %r3510};
	shf.l.wrap.b32 	%r3512, %r3508, %r3509, 30;
	shf.l.wrap.b32 	%r3513, %r3509, %r3508, 30;
	mov.b64 	%rd5161, {%r3513, %r3512};
	xor.b64  	%rd5162, %rd5160, %rd5161;
	shf.l.wrap.b32 	%r3514, %r3508, %r3509, 25;
	shf.l.wrap.b32 	%r3515, %r3509, %r3508, 25;
	mov.b64 	%rd5163, {%r3515, %r3514};
	xor.b64  	%rd5164, %rd5162, %rd5163;
	and.b64  	%rd5165, %rd5133, %rd5096;
	or.b64  	%rd5166, %rd5133, %rd5096;
	and.b64  	%rd5167, %rd5166, %rd5059;
	or.b64  	%rd5168, %rd5167, %rd5165;
	add.s64 	%rd5169, %rd5168, %rd5164;
	add.s64 	%rd5170, %rd5169, %rd5158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3516,%dummy}, %rd5109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3517}, %rd5109;
	}
	shf.r.wrap.b32 	%r3518, %r3517, %r3516, 19;
	shf.r.wrap.b32 	%r3519, %r3516, %r3517, 19;
	mov.b64 	%rd5171, {%r3519, %r3518};
	shf.l.wrap.b32 	%r3520, %r3516, %r3517, 3;
	shf.l.wrap.b32 	%r3521, %r3517, %r3516, 3;
	mov.b64 	%rd5172, {%r3521, %r3520};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	shr.u64 	%rd5174, %rd5109, 6;
	xor.b64  	%rd5175, %rd5173, %rd5174;
	shf.r.wrap.b32 	%r3522, %r3179, %r3178, 1;
	shf.r.wrap.b32 	%r3523, %r3178, %r3179, 1;
	mov.b64 	%rd5176, {%r3523, %r3522};
	shf.r.wrap.b32 	%r3524, %r3179, %r3178, 8;
	shf.r.wrap.b32 	%r3525, %r3178, %r3179, 8;
	mov.b64 	%rd5177, {%r3525, %r3524};
	xor.b64  	%rd5178, %rd5176, %rd5177;
	shr.u64 	%rd5179, %rd4628, 7;
	xor.b64  	%rd5180, %rd5178, %rd5179;
	add.s64 	%rd5181, %rd5180, %rd4591;
	add.s64 	%rd5182, %rd5181, %rd4924;
	add.s64 	%rd5183, %rd5182, %rd5175;
	add.s64 	%rd5184, %rd5183, %rd5048;
	xor.b64  	%rd5185, %rd5122, %rd5085;
	and.b64  	%rd5186, %rd5159, %rd5185;
	xor.b64  	%rd5187, %rd5186, %rd5085;
	add.s64 	%rd5188, %rd5184, %rd5187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3526,%dummy}, %rd5159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3527}, %rd5159;
	}
	shf.r.wrap.b32 	%r3528, %r3527, %r3526, 14;
	shf.r.wrap.b32 	%r3529, %r3526, %r3527, 14;
	mov.b64 	%rd5189, {%r3529, %r3528};
	shf.r.wrap.b32 	%r3530, %r3527, %r3526, 18;
	shf.r.wrap.b32 	%r3531, %r3526, %r3527, 18;
	mov.b64 	%rd5190, {%r3531, %r3530};
	xor.b64  	%rd5191, %rd5189, %rd5190;
	shf.l.wrap.b32 	%r3532, %r3526, %r3527, 23;
	shf.l.wrap.b32 	%r3533, %r3527, %r3526, 23;
	mov.b64 	%rd5192, {%r3533, %r3532};
	xor.b64  	%rd5193, %rd5191, %rd5192;
	add.s64 	%rd5194, %rd5188, %rd5193;
	add.s64 	%rd5195, %rd5194, 7507060721942968483;
	add.s64 	%rd5196, %rd5195, %rd5059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3534,%dummy}, %rd5170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3535}, %rd5170;
	}
	shf.r.wrap.b32 	%r3536, %r3535, %r3534, 28;
	shf.r.wrap.b32 	%r3537, %r3534, %r3535, 28;
	mov.b64 	%rd5197, {%r3537, %r3536};
	shf.l.wrap.b32 	%r3538, %r3534, %r3535, 30;
	shf.l.wrap.b32 	%r3539, %r3535, %r3534, 30;
	mov.b64 	%rd5198, {%r3539, %r3538};
	xor.b64  	%rd5199, %rd5197, %rd5198;
	shf.l.wrap.b32 	%r3540, %r3534, %r3535, 25;
	shf.l.wrap.b32 	%r3541, %r3535, %r3534, 25;
	mov.b64 	%rd5200, {%r3541, %r3540};
	xor.b64  	%rd5201, %rd5199, %rd5200;
	and.b64  	%rd5202, %rd5170, %rd5133;
	or.b64  	%rd5203, %rd5170, %rd5133;
	and.b64  	%rd5204, %rd5203, %rd5096;
	or.b64  	%rd5205, %rd5204, %rd5202;
	add.s64 	%rd5206, %rd5205, %rd5201;
	add.s64 	%rd5207, %rd5206, %rd5195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3542,%dummy}, %rd5146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3543}, %rd5146;
	}
	shf.r.wrap.b32 	%r3544, %r3543, %r3542, 19;
	shf.r.wrap.b32 	%r3545, %r3542, %r3543, 19;
	mov.b64 	%rd5208, {%r3545, %r3544};
	shf.l.wrap.b32 	%r3546, %r3542, %r3543, 3;
	shf.l.wrap.b32 	%r3547, %r3543, %r3542, 3;
	mov.b64 	%rd5209, {%r3547, %r3546};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	shr.u64 	%rd5211, %rd5146, 6;
	xor.b64  	%rd5212, %rd5210, %rd5211;
	shf.r.wrap.b32 	%r3548, %r3205, %r3204, 1;
	shf.r.wrap.b32 	%r3549, %r3204, %r3205, 1;
	mov.b64 	%rd5213, {%r3549, %r3548};
	shf.r.wrap.b32 	%r3550, %r3205, %r3204, 8;
	shf.r.wrap.b32 	%r3551, %r3204, %r3205, 8;
	mov.b64 	%rd5214, {%r3551, %r3550};
	xor.b64  	%rd5215, %rd5213, %rd5214;
	shr.u64 	%rd5216, %rd4665, 7;
	xor.b64  	%rd5217, %rd5215, %rd5216;
	add.s64 	%rd5218, %rd5217, %rd4628;
	add.s64 	%rd5219, %rd5218, %rd4961;
	add.s64 	%rd5220, %rd5219, %rd5212;
	add.s64 	%rd5221, %rd5220, %rd5085;
	xor.b64  	%rd5222, %rd5159, %rd5122;
	and.b64  	%rd5223, %rd5196, %rd5222;
	xor.b64  	%rd5224, %rd5223, %rd5122;
	add.s64 	%rd5225, %rd5221, %rd5224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3552,%dummy}, %rd5196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd5196;
	}
	shf.r.wrap.b32 	%r3554, %r3553, %r3552, 14;
	shf.r.wrap.b32 	%r3555, %r3552, %r3553, 14;
	mov.b64 	%rd5226, {%r3555, %r3554};
	shf.r.wrap.b32 	%r3556, %r3553, %r3552, 18;
	shf.r.wrap.b32 	%r3557, %r3552, %r3553, 18;
	mov.b64 	%rd5227, {%r3557, %r3556};
	xor.b64  	%rd5228, %rd5226, %rd5227;
	shf.l.wrap.b32 	%r3558, %r3552, %r3553, 23;
	shf.l.wrap.b32 	%r3559, %r3553, %r3552, 23;
	mov.b64 	%rd5229, {%r3559, %r3558};
	xor.b64  	%rd5230, %rd5228, %rd5229;
	add.s64 	%rd5231, %rd5225, %rd5230;
	add.s64 	%rd5232, %rd5231, 8399075790359081724;
	add.s64 	%rd5233, %rd5232, %rd5096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3560,%dummy}, %rd5207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd5207;
	}
	shf.r.wrap.b32 	%r3562, %r3561, %r3560, 28;
	shf.r.wrap.b32 	%r3563, %r3560, %r3561, 28;
	mov.b64 	%rd5234, {%r3563, %r3562};
	shf.l.wrap.b32 	%r3564, %r3560, %r3561, 30;
	shf.l.wrap.b32 	%r3565, %r3561, %r3560, 30;
	mov.b64 	%rd5235, {%r3565, %r3564};
	xor.b64  	%rd5236, %rd5234, %rd5235;
	shf.l.wrap.b32 	%r3566, %r3560, %r3561, 25;
	shf.l.wrap.b32 	%r3567, %r3561, %r3560, 25;
	mov.b64 	%rd5237, {%r3567, %r3566};
	xor.b64  	%rd5238, %rd5236, %rd5237;
	and.b64  	%rd5239, %rd5207, %rd5170;
	or.b64  	%rd5240, %rd5207, %rd5170;
	and.b64  	%rd5241, %rd5240, %rd5133;
	or.b64  	%rd5242, %rd5241, %rd5239;
	add.s64 	%rd5243, %rd5242, %rd5238;
	add.s64 	%rd5244, %rd5243, %rd5232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3568,%dummy}, %rd5183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd5183;
	}
	shf.r.wrap.b32 	%r3570, %r3569, %r3568, 19;
	shf.r.wrap.b32 	%r3571, %r3568, %r3569, 19;
	mov.b64 	%rd5245, {%r3571, %r3570};
	shf.l.wrap.b32 	%r3572, %r3568, %r3569, 3;
	shf.l.wrap.b32 	%r3573, %r3569, %r3568, 3;
	mov.b64 	%rd5246, {%r3573, %r3572};
	xor.b64  	%rd5247, %rd5245, %rd5246;
	shr.u64 	%rd5248, %rd5183, 6;
	xor.b64  	%rd5249, %rd5247, %rd5248;
	shf.r.wrap.b32 	%r3574, %r3231, %r3230, 1;
	shf.r.wrap.b32 	%r3575, %r3230, %r3231, 1;
	mov.b64 	%rd5250, {%r3575, %r3574};
	shf.r.wrap.b32 	%r3576, %r3231, %r3230, 8;
	shf.r.wrap.b32 	%r3577, %r3230, %r3231, 8;
	mov.b64 	%rd5251, {%r3577, %r3576};
	xor.b64  	%rd5252, %rd5250, %rd5251;
	shr.u64 	%rd5253, %rd4702, 7;
	xor.b64  	%rd5254, %rd5252, %rd5253;
	add.s64 	%rd5255, %rd5254, %rd4665;
	add.s64 	%rd5256, %rd5255, %rd4998;
	add.s64 	%rd5257, %rd5256, %rd5249;
	add.s64 	%rd5258, %rd5257, %rd5122;
	xor.b64  	%rd5259, %rd5196, %rd5159;
	and.b64  	%rd5260, %rd5233, %rd5259;
	xor.b64  	%rd5261, %rd5260, %rd5159;
	add.s64 	%rd5262, %rd5258, %rd5261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3578,%dummy}, %rd5233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3579}, %rd5233;
	}
	shf.r.wrap.b32 	%r3580, %r3579, %r3578, 14;
	shf.r.wrap.b32 	%r3581, %r3578, %r3579, 14;
	mov.b64 	%rd5263, {%r3581, %r3580};
	shf.r.wrap.b32 	%r3582, %r3579, %r3578, 18;
	shf.r.wrap.b32 	%r3583, %r3578, %r3579, 18;
	mov.b64 	%rd5264, {%r3583, %r3582};
	xor.b64  	%rd5265, %rd5263, %rd5264;
	shf.l.wrap.b32 	%r3584, %r3578, %r3579, 23;
	shf.l.wrap.b32 	%r3585, %r3579, %r3578, 23;
	mov.b64 	%rd5266, {%r3585, %r3584};
	xor.b64  	%rd5267, %rd5265, %rd5266;
	add.s64 	%rd5268, %rd5262, %rd5267;
	add.s64 	%rd5269, %rd5268, 8693463985226723168;
	add.s64 	%rd5270, %rd5269, %rd5133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd5244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3587}, %rd5244;
	}
	shf.r.wrap.b32 	%r3588, %r3587, %r3586, 28;
	shf.r.wrap.b32 	%r3589, %r3586, %r3587, 28;
	mov.b64 	%rd5271, {%r3589, %r3588};
	shf.l.wrap.b32 	%r3590, %r3586, %r3587, 30;
	shf.l.wrap.b32 	%r3591, %r3587, %r3586, 30;
	mov.b64 	%rd5272, {%r3591, %r3590};
	xor.b64  	%rd5273, %rd5271, %rd5272;
	shf.l.wrap.b32 	%r3592, %r3586, %r3587, 25;
	shf.l.wrap.b32 	%r3593, %r3587, %r3586, 25;
	mov.b64 	%rd5274, {%r3593, %r3592};
	xor.b64  	%rd5275, %rd5273, %rd5274;
	and.b64  	%rd5276, %rd5244, %rd5207;
	or.b64  	%rd5277, %rd5244, %rd5207;
	and.b64  	%rd5278, %rd5277, %rd5170;
	or.b64  	%rd5279, %rd5278, %rd5276;
	add.s64 	%rd5280, %rd5279, %rd5275;
	add.s64 	%rd5281, %rd5280, %rd5269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd5220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd5220;
	}
	shf.r.wrap.b32 	%r3596, %r3595, %r3594, 19;
	shf.r.wrap.b32 	%r3597, %r3594, %r3595, 19;
	mov.b64 	%rd5282, {%r3597, %r3596};
	shf.l.wrap.b32 	%r3598, %r3594, %r3595, 3;
	shf.l.wrap.b32 	%r3599, %r3595, %r3594, 3;
	mov.b64 	%rd5283, {%r3599, %r3598};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	shr.u64 	%rd5285, %rd5220, 6;
	xor.b64  	%rd5286, %rd5284, %rd5285;
	shf.r.wrap.b32 	%r3600, %r3257, %r3256, 1;
	shf.r.wrap.b32 	%r3601, %r3256, %r3257, 1;
	mov.b64 	%rd5287, {%r3601, %r3600};
	shf.r.wrap.b32 	%r3602, %r3257, %r3256, 8;
	shf.r.wrap.b32 	%r3603, %r3256, %r3257, 8;
	mov.b64 	%rd5288, {%r3603, %r3602};
	xor.b64  	%rd5289, %rd5287, %rd5288;
	shr.u64 	%rd5290, %rd4739, 7;
	xor.b64  	%rd5291, %rd5289, %rd5290;
	add.s64 	%rd5292, %rd5291, %rd4702;
	add.s64 	%rd5293, %rd5292, %rd5035;
	add.s64 	%rd5294, %rd5293, %rd5286;
	add.s64 	%rd5295, %rd5294, %rd5159;
	xor.b64  	%rd5296, %rd5233, %rd5196;
	and.b64  	%rd5297, %rd5270, %rd5296;
	xor.b64  	%rd5298, %rd5297, %rd5196;
	add.s64 	%rd5299, %rd5295, %rd5298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3604,%dummy}, %rd5270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3605}, %rd5270;
	}
	shf.r.wrap.b32 	%r3606, %r3605, %r3604, 14;
	shf.r.wrap.b32 	%r3607, %r3604, %r3605, 14;
	mov.b64 	%rd5300, {%r3607, %r3606};
	shf.r.wrap.b32 	%r3608, %r3605, %r3604, 18;
	shf.r.wrap.b32 	%r3609, %r3604, %r3605, 18;
	mov.b64 	%rd5301, {%r3609, %r3608};
	xor.b64  	%rd5302, %rd5300, %rd5301;
	shf.l.wrap.b32 	%r3610, %r3604, %r3605, 23;
	shf.l.wrap.b32 	%r3611, %r3605, %r3604, 23;
	mov.b64 	%rd5303, {%r3611, %r3610};
	xor.b64  	%rd5304, %rd5302, %rd5303;
	add.s64 	%rd5305, %rd5299, %rd5304;
	add.s64 	%rd5306, %rd5305, -8878714635349349518;
	add.s64 	%rd5307, %rd5306, %rd5170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3612,%dummy}, %rd5281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3613}, %rd5281;
	}
	shf.r.wrap.b32 	%r3614, %r3613, %r3612, 28;
	shf.r.wrap.b32 	%r3615, %r3612, %r3613, 28;
	mov.b64 	%rd5308, {%r3615, %r3614};
	shf.l.wrap.b32 	%r3616, %r3612, %r3613, 30;
	shf.l.wrap.b32 	%r3617, %r3613, %r3612, 30;
	mov.b64 	%rd5309, {%r3617, %r3616};
	xor.b64  	%rd5310, %rd5308, %rd5309;
	shf.l.wrap.b32 	%r3618, %r3612, %r3613, 25;
	shf.l.wrap.b32 	%r3619, %r3613, %r3612, 25;
	mov.b64 	%rd5311, {%r3619, %r3618};
	xor.b64  	%rd5312, %rd5310, %rd5311;
	and.b64  	%rd5313, %rd5281, %rd5244;
	or.b64  	%rd5314, %rd5281, %rd5244;
	and.b64  	%rd5315, %rd5314, %rd5207;
	or.b64  	%rd5316, %rd5315, %rd5313;
	add.s64 	%rd5317, %rd5316, %rd5312;
	add.s64 	%rd5318, %rd5317, %rd5306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3620,%dummy}, %rd5257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3621}, %rd5257;
	}
	shf.r.wrap.b32 	%r3622, %r3621, %r3620, 19;
	shf.r.wrap.b32 	%r3623, %r3620, %r3621, 19;
	mov.b64 	%rd5319, {%r3623, %r3622};
	shf.l.wrap.b32 	%r3624, %r3620, %r3621, 3;
	shf.l.wrap.b32 	%r3625, %r3621, %r3620, 3;
	mov.b64 	%rd5320, {%r3625, %r3624};
	xor.b64  	%rd5321, %rd5319, %rd5320;
	shr.u64 	%rd5322, %rd5257, 6;
	xor.b64  	%rd5323, %rd5321, %rd5322;
	shf.r.wrap.b32 	%r3626, %r3283, %r3282, 1;
	shf.r.wrap.b32 	%r3627, %r3282, %r3283, 1;
	mov.b64 	%rd5324, {%r3627, %r3626};
	shf.r.wrap.b32 	%r3628, %r3283, %r3282, 8;
	shf.r.wrap.b32 	%r3629, %r3282, %r3283, 8;
	mov.b64 	%rd5325, {%r3629, %r3628};
	xor.b64  	%rd5326, %rd5324, %rd5325;
	shr.u64 	%rd5327, %rd4776, 7;
	xor.b64  	%rd5328, %rd5326, %rd5327;
	add.s64 	%rd5329, %rd5328, %rd4739;
	add.s64 	%rd5330, %rd5329, %rd5072;
	add.s64 	%rd5331, %rd5330, %rd5323;
	add.s64 	%rd5332, %rd5331, %rd5196;
	xor.b64  	%rd5333, %rd5270, %rd5233;
	and.b64  	%rd5334, %rd5307, %rd5333;
	xor.b64  	%rd5335, %rd5334, %rd5233;
	add.s64 	%rd5336, %rd5332, %rd5335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3630,%dummy}, %rd5307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3631}, %rd5307;
	}
	shf.r.wrap.b32 	%r3632, %r3631, %r3630, 14;
	shf.r.wrap.b32 	%r3633, %r3630, %r3631, 14;
	mov.b64 	%rd5337, {%r3633, %r3632};
	shf.r.wrap.b32 	%r3634, %r3631, %r3630, 18;
	shf.r.wrap.b32 	%r3635, %r3630, %r3631, 18;
	mov.b64 	%rd5338, {%r3635, %r3634};
	xor.b64  	%rd5339, %rd5337, %rd5338;
	shf.l.wrap.b32 	%r3636, %r3630, %r3631, 23;
	shf.l.wrap.b32 	%r3637, %r3631, %r3630, 23;
	mov.b64 	%rd5340, {%r3637, %r3636};
	xor.b64  	%rd5341, %rd5339, %rd5340;
	add.s64 	%rd5342, %rd5336, %rd5341;
	add.s64 	%rd5343, %rd5342, -8302665154208450068;
	add.s64 	%rd5344, %rd5343, %rd5207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3638,%dummy}, %rd5318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3639}, %rd5318;
	}
	shf.r.wrap.b32 	%r3640, %r3639, %r3638, 28;
	shf.r.wrap.b32 	%r3641, %r3638, %r3639, 28;
	mov.b64 	%rd5345, {%r3641, %r3640};
	shf.l.wrap.b32 	%r3642, %r3638, %r3639, 30;
	shf.l.wrap.b32 	%r3643, %r3639, %r3638, 30;
	mov.b64 	%rd5346, {%r3643, %r3642};
	xor.b64  	%rd5347, %rd5345, %rd5346;
	shf.l.wrap.b32 	%r3644, %r3638, %r3639, 25;
	shf.l.wrap.b32 	%r3645, %r3639, %r3638, 25;
	mov.b64 	%rd5348, {%r3645, %r3644};
	xor.b64  	%rd5349, %rd5347, %rd5348;
	and.b64  	%rd5350, %rd5318, %rd5281;
	or.b64  	%rd5351, %rd5318, %rd5281;
	and.b64  	%rd5352, %rd5351, %rd5244;
	or.b64  	%rd5353, %rd5352, %rd5350;
	add.s64 	%rd5354, %rd5353, %rd5349;
	add.s64 	%rd5355, %rd5354, %rd5343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3646,%dummy}, %rd5294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3647}, %rd5294;
	}
	shf.r.wrap.b32 	%r3648, %r3647, %r3646, 19;
	shf.r.wrap.b32 	%r3649, %r3646, %r3647, 19;
	mov.b64 	%rd5356, {%r3649, %r3648};
	shf.l.wrap.b32 	%r3650, %r3646, %r3647, 3;
	shf.l.wrap.b32 	%r3651, %r3647, %r3646, 3;
	mov.b64 	%rd5357, {%r3651, %r3650};
	xor.b64  	%rd5358, %rd5356, %rd5357;
	shr.u64 	%rd5359, %rd5294, 6;
	xor.b64  	%rd5360, %rd5358, %rd5359;
	shf.r.wrap.b32 	%r3652, %r3309, %r3308, 1;
	shf.r.wrap.b32 	%r3653, %r3308, %r3309, 1;
	mov.b64 	%rd5361, {%r3653, %r3652};
	shf.r.wrap.b32 	%r3654, %r3309, %r3308, 8;
	shf.r.wrap.b32 	%r3655, %r3308, %r3309, 8;
	mov.b64 	%rd5362, {%r3655, %r3654};
	xor.b64  	%rd5363, %rd5361, %rd5362;
	shr.u64 	%rd5364, %rd4813, 7;
	xor.b64  	%rd5365, %rd5363, %rd5364;
	add.s64 	%rd5366, %rd5365, %rd4776;
	add.s64 	%rd5367, %rd5366, %rd5109;
	add.s64 	%rd5368, %rd5367, %rd5360;
	add.s64 	%rd5369, %rd5368, %rd5233;
	xor.b64  	%rd5370, %rd5307, %rd5270;
	and.b64  	%rd5371, %rd5344, %rd5370;
	xor.b64  	%rd5372, %rd5371, %rd5270;
	add.s64 	%rd5373, %rd5369, %rd5372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3656,%dummy}, %rd5344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3657}, %rd5344;
	}
	shf.r.wrap.b32 	%r3658, %r3657, %r3656, 14;
	shf.r.wrap.b32 	%r3659, %r3656, %r3657, 14;
	mov.b64 	%rd5374, {%r3659, %r3658};
	shf.r.wrap.b32 	%r3660, %r3657, %r3656, 18;
	shf.r.wrap.b32 	%r3661, %r3656, %r3657, 18;
	mov.b64 	%rd5375, {%r3661, %r3660};
	xor.b64  	%rd5376, %rd5374, %rd5375;
	shf.l.wrap.b32 	%r3662, %r3656, %r3657, 23;
	shf.l.wrap.b32 	%r3663, %r3657, %r3656, 23;
	mov.b64 	%rd5377, {%r3663, %r3662};
	xor.b64  	%rd5378, %rd5376, %rd5377;
	add.s64 	%rd5379, %rd5373, %rd5378;
	add.s64 	%rd5380, %rd5379, -8016688836872298968;
	add.s64 	%rd5381, %rd5380, %rd5244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3664,%dummy}, %rd5355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3665}, %rd5355;
	}
	shf.r.wrap.b32 	%r3666, %r3665, %r3664, 28;
	shf.r.wrap.b32 	%r3667, %r3664, %r3665, 28;
	mov.b64 	%rd5382, {%r3667, %r3666};
	shf.l.wrap.b32 	%r3668, %r3664, %r3665, 30;
	shf.l.wrap.b32 	%r3669, %r3665, %r3664, 30;
	mov.b64 	%rd5383, {%r3669, %r3668};
	xor.b64  	%rd5384, %rd5382, %rd5383;
	shf.l.wrap.b32 	%r3670, %r3664, %r3665, 25;
	shf.l.wrap.b32 	%r3671, %r3665, %r3664, 25;
	mov.b64 	%rd5385, {%r3671, %r3670};
	xor.b64  	%rd5386, %rd5384, %rd5385;
	and.b64  	%rd5387, %rd5355, %rd5318;
	or.b64  	%rd5388, %rd5355, %rd5318;
	and.b64  	%rd5389, %rd5388, %rd5281;
	or.b64  	%rd5390, %rd5389, %rd5387;
	add.s64 	%rd5391, %rd5390, %rd5386;
	add.s64 	%rd5392, %rd5391, %rd5380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3672,%dummy}, %rd5331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd5331;
	}
	shf.r.wrap.b32 	%r3674, %r3673, %r3672, 19;
	shf.r.wrap.b32 	%r3675, %r3672, %r3673, 19;
	mov.b64 	%rd5393, {%r3675, %r3674};
	shf.l.wrap.b32 	%r3676, %r3672, %r3673, 3;
	shf.l.wrap.b32 	%r3677, %r3673, %r3672, 3;
	mov.b64 	%rd5394, {%r3677, %r3676};
	xor.b64  	%rd5395, %rd5393, %rd5394;
	shr.u64 	%rd5396, %rd5331, 6;
	xor.b64  	%rd5397, %rd5395, %rd5396;
	shf.r.wrap.b32 	%r3678, %r3335, %r3334, 1;
	shf.r.wrap.b32 	%r3679, %r3334, %r3335, 1;
	mov.b64 	%rd5398, {%r3679, %r3678};
	shf.r.wrap.b32 	%r3680, %r3335, %r3334, 8;
	shf.r.wrap.b32 	%r3681, %r3334, %r3335, 8;
	mov.b64 	%rd5399, {%r3681, %r3680};
	xor.b64  	%rd5400, %rd5398, %rd5399;
	shr.u64 	%rd5401, %rd4850, 7;
	xor.b64  	%rd5402, %rd5400, %rd5401;
	add.s64 	%rd5403, %rd5402, %rd4813;
	add.s64 	%rd5404, %rd5403, %rd5146;
	add.s64 	%rd5405, %rd5404, %rd5397;
	add.s64 	%rd5406, %rd5405, %rd5270;
	xor.b64  	%rd5407, %rd5344, %rd5307;
	and.b64  	%rd5408, %rd5381, %rd5407;
	xor.b64  	%rd5409, %rd5408, %rd5307;
	add.s64 	%rd5410, %rd5406, %rd5409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd5381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3683}, %rd5381;
	}
	shf.r.wrap.b32 	%r3684, %r3683, %r3682, 14;
	shf.r.wrap.b32 	%r3685, %r3682, %r3683, 14;
	mov.b64 	%rd5411, {%r3685, %r3684};
	shf.r.wrap.b32 	%r3686, %r3683, %r3682, 18;
	shf.r.wrap.b32 	%r3687, %r3682, %r3683, 18;
	mov.b64 	%rd5412, {%r3687, %r3686};
	xor.b64  	%rd5413, %rd5411, %rd5412;
	shf.l.wrap.b32 	%r3688, %r3682, %r3683, 23;
	shf.l.wrap.b32 	%r3689, %r3683, %r3682, 23;
	mov.b64 	%rd5414, {%r3689, %r3688};
	xor.b64  	%rd5415, %rd5413, %rd5414;
	add.s64 	%rd5416, %rd5410, %rd5415;
	add.s64 	%rd5417, %rd5416, -6606660893046293015;
	add.s64 	%rd5418, %rd5417, %rd5281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd5392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3691}, %rd5392;
	}
	shf.r.wrap.b32 	%r3692, %r3691, %r3690, 28;
	shf.r.wrap.b32 	%r3693, %r3690, %r3691, 28;
	mov.b64 	%rd5419, {%r3693, %r3692};
	shf.l.wrap.b32 	%r3694, %r3690, %r3691, 30;
	shf.l.wrap.b32 	%r3695, %r3691, %r3690, 30;
	mov.b64 	%rd5420, {%r3695, %r3694};
	xor.b64  	%rd5421, %rd5419, %rd5420;
	shf.l.wrap.b32 	%r3696, %r3690, %r3691, 25;
	shf.l.wrap.b32 	%r3697, %r3691, %r3690, 25;
	mov.b64 	%rd5422, {%r3697, %r3696};
	xor.b64  	%rd5423, %rd5421, %rd5422;
	and.b64  	%rd5424, %rd5392, %rd5355;
	or.b64  	%rd5425, %rd5392, %rd5355;
	and.b64  	%rd5426, %rd5425, %rd5318;
	or.b64  	%rd5427, %rd5426, %rd5424;
	add.s64 	%rd5428, %rd5427, %rd5423;
	add.s64 	%rd5429, %rd5428, %rd5417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3698,%dummy}, %rd5368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3699}, %rd5368;
	}
	shf.r.wrap.b32 	%r3700, %r3699, %r3698, 19;
	shf.r.wrap.b32 	%r3701, %r3698, %r3699, 19;
	mov.b64 	%rd5430, {%r3701, %r3700};
	shf.l.wrap.b32 	%r3702, %r3698, %r3699, 3;
	shf.l.wrap.b32 	%r3703, %r3699, %r3698, 3;
	mov.b64 	%rd5431, {%r3703, %r3702};
	xor.b64  	%rd5432, %rd5430, %rd5431;
	shr.u64 	%rd5433, %rd5368, 6;
	xor.b64  	%rd5434, %rd5432, %rd5433;
	shf.r.wrap.b32 	%r3704, %r3361, %r3360, 1;
	shf.r.wrap.b32 	%r3705, %r3360, %r3361, 1;
	mov.b64 	%rd5435, {%r3705, %r3704};
	shf.r.wrap.b32 	%r3706, %r3361, %r3360, 8;
	shf.r.wrap.b32 	%r3707, %r3360, %r3361, 8;
	mov.b64 	%rd5436, {%r3707, %r3706};
	xor.b64  	%rd5437, %rd5435, %rd5436;
	shr.u64 	%rd5438, %rd4887, 7;
	xor.b64  	%rd5439, %rd5437, %rd5438;
	add.s64 	%rd5440, %rd5439, %rd4850;
	add.s64 	%rd5441, %rd5440, %rd5183;
	add.s64 	%rd5442, %rd5441, %rd5434;
	add.s64 	%rd5443, %rd5442, %rd5307;
	xor.b64  	%rd5444, %rd5381, %rd5344;
	and.b64  	%rd5445, %rd5418, %rd5444;
	xor.b64  	%rd5446, %rd5445, %rd5344;
	add.s64 	%rd5447, %rd5443, %rd5446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3708,%dummy}, %rd5418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3709}, %rd5418;
	}
	shf.r.wrap.b32 	%r3710, %r3709, %r3708, 14;
	shf.r.wrap.b32 	%r3711, %r3708, %r3709, 14;
	mov.b64 	%rd5448, {%r3711, %r3710};
	shf.r.wrap.b32 	%r3712, %r3709, %r3708, 18;
	shf.r.wrap.b32 	%r3713, %r3708, %r3709, 18;
	mov.b64 	%rd5449, {%r3713, %r3712};
	xor.b64  	%rd5450, %rd5448, %rd5449;
	shf.l.wrap.b32 	%r3714, %r3708, %r3709, 23;
	shf.l.wrap.b32 	%r3715, %r3709, %r3708, 23;
	mov.b64 	%rd5451, {%r3715, %r3714};
	xor.b64  	%rd5452, %rd5450, %rd5451;
	add.s64 	%rd5453, %rd5447, %rd5452;
	add.s64 	%rd5454, %rd5453, -4685533653050689259;
	add.s64 	%rd5455, %rd5454, %rd5318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3716,%dummy}, %rd5429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3717}, %rd5429;
	}
	shf.r.wrap.b32 	%r3718, %r3717, %r3716, 28;
	shf.r.wrap.b32 	%r3719, %r3716, %r3717, 28;
	mov.b64 	%rd5456, {%r3719, %r3718};
	shf.l.wrap.b32 	%r3720, %r3716, %r3717, 30;
	shf.l.wrap.b32 	%r3721, %r3717, %r3716, 30;
	mov.b64 	%rd5457, {%r3721, %r3720};
	xor.b64  	%rd5458, %rd5456, %rd5457;
	shf.l.wrap.b32 	%r3722, %r3716, %r3717, 25;
	shf.l.wrap.b32 	%r3723, %r3717, %r3716, 25;
	mov.b64 	%rd5459, {%r3723, %r3722};
	xor.b64  	%rd5460, %rd5458, %rd5459;
	and.b64  	%rd5461, %rd5429, %rd5392;
	or.b64  	%rd5462, %rd5429, %rd5392;
	and.b64  	%rd5463, %rd5462, %rd5355;
	or.b64  	%rd5464, %rd5463, %rd5461;
	add.s64 	%rd5465, %rd5464, %rd5460;
	add.s64 	%rd5466, %rd5465, %rd5454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3724,%dummy}, %rd5405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3725}, %rd5405;
	}
	shf.r.wrap.b32 	%r3726, %r3725, %r3724, 19;
	shf.r.wrap.b32 	%r3727, %r3724, %r3725, 19;
	mov.b64 	%rd5467, {%r3727, %r3726};
	shf.l.wrap.b32 	%r3728, %r3724, %r3725, 3;
	shf.l.wrap.b32 	%r3729, %r3725, %r3724, 3;
	mov.b64 	%rd5468, {%r3729, %r3728};
	xor.b64  	%rd5469, %rd5467, %rd5468;
	shr.u64 	%rd5470, %rd5405, 6;
	xor.b64  	%rd5471, %rd5469, %rd5470;
	shf.r.wrap.b32 	%r3730, %r3387, %r3386, 1;
	shf.r.wrap.b32 	%r3731, %r3386, %r3387, 1;
	mov.b64 	%rd5472, {%r3731, %r3730};
	shf.r.wrap.b32 	%r3732, %r3387, %r3386, 8;
	shf.r.wrap.b32 	%r3733, %r3386, %r3387, 8;
	mov.b64 	%rd5473, {%r3733, %r3732};
	xor.b64  	%rd5474, %rd5472, %rd5473;
	shr.u64 	%rd5475, %rd4924, 7;
	xor.b64  	%rd5476, %rd5474, %rd5475;
	add.s64 	%rd5477, %rd5476, %rd4887;
	add.s64 	%rd5478, %rd5477, %rd5220;
	add.s64 	%rd5479, %rd5478, %rd5471;
	add.s64 	%rd5480, %rd5479, %rd5344;
	xor.b64  	%rd5481, %rd5418, %rd5381;
	and.b64  	%rd5482, %rd5455, %rd5481;
	xor.b64  	%rd5483, %rd5482, %rd5381;
	add.s64 	%rd5484, %rd5480, %rd5483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3734,%dummy}, %rd5455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3735}, %rd5455;
	}
	shf.r.wrap.b32 	%r3736, %r3735, %r3734, 14;
	shf.r.wrap.b32 	%r3737, %r3734, %r3735, 14;
	mov.b64 	%rd5485, {%r3737, %r3736};
	shf.r.wrap.b32 	%r3738, %r3735, %r3734, 18;
	shf.r.wrap.b32 	%r3739, %r3734, %r3735, 18;
	mov.b64 	%rd5486, {%r3739, %r3738};
	xor.b64  	%rd5487, %rd5485, %rd5486;
	shf.l.wrap.b32 	%r3740, %r3734, %r3735, 23;
	shf.l.wrap.b32 	%r3741, %r3735, %r3734, 23;
	mov.b64 	%rd5488, {%r3741, %r3740};
	xor.b64  	%rd5489, %rd5487, %rd5488;
	add.s64 	%rd5490, %rd5484, %rd5489;
	add.s64 	%rd5491, %rd5490, -4147400797238176981;
	add.s64 	%rd5492, %rd5491, %rd5355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3742,%dummy}, %rd5466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3743}, %rd5466;
	}
	shf.r.wrap.b32 	%r3744, %r3743, %r3742, 28;
	shf.r.wrap.b32 	%r3745, %r3742, %r3743, 28;
	mov.b64 	%rd5493, {%r3745, %r3744};
	shf.l.wrap.b32 	%r3746, %r3742, %r3743, 30;
	shf.l.wrap.b32 	%r3747, %r3743, %r3742, 30;
	mov.b64 	%rd5494, {%r3747, %r3746};
	xor.b64  	%rd5495, %rd5493, %rd5494;
	shf.l.wrap.b32 	%r3748, %r3742, %r3743, 25;
	shf.l.wrap.b32 	%r3749, %r3743, %r3742, 25;
	mov.b64 	%rd5496, {%r3749, %r3748};
	xor.b64  	%rd5497, %rd5495, %rd5496;
	and.b64  	%rd5498, %rd5466, %rd5429;
	or.b64  	%rd5499, %rd5466, %rd5429;
	and.b64  	%rd5500, %rd5499, %rd5392;
	or.b64  	%rd5501, %rd5500, %rd5498;
	add.s64 	%rd5502, %rd5501, %rd5497;
	add.s64 	%rd5503, %rd5502, %rd5491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3750,%dummy}, %rd5442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3751}, %rd5442;
	}
	shf.r.wrap.b32 	%r3752, %r3751, %r3750, 19;
	shf.r.wrap.b32 	%r3753, %r3750, %r3751, 19;
	mov.b64 	%rd5504, {%r3753, %r3752};
	shf.l.wrap.b32 	%r3754, %r3750, %r3751, 3;
	shf.l.wrap.b32 	%r3755, %r3751, %r3750, 3;
	mov.b64 	%rd5505, {%r3755, %r3754};
	xor.b64  	%rd5506, %rd5504, %rd5505;
	shr.u64 	%rd5507, %rd5442, 6;
	xor.b64  	%rd5508, %rd5506, %rd5507;
	shf.r.wrap.b32 	%r3756, %r3413, %r3412, 1;
	shf.r.wrap.b32 	%r3757, %r3412, %r3413, 1;
	mov.b64 	%rd5509, {%r3757, %r3756};
	shf.r.wrap.b32 	%r3758, %r3413, %r3412, 8;
	shf.r.wrap.b32 	%r3759, %r3412, %r3413, 8;
	mov.b64 	%rd5510, {%r3759, %r3758};
	xor.b64  	%rd5511, %rd5509, %rd5510;
	shr.u64 	%rd5512, %rd4961, 7;
	xor.b64  	%rd5513, %rd5511, %rd5512;
	add.s64 	%rd5514, %rd5513, %rd4924;
	add.s64 	%rd5515, %rd5514, %rd5257;
	add.s64 	%rd5516, %rd5515, %rd5508;
	add.s64 	%rd5517, %rd5516, %rd5381;
	xor.b64  	%rd5518, %rd5455, %rd5418;
	and.b64  	%rd5519, %rd5492, %rd5518;
	xor.b64  	%rd5520, %rd5519, %rd5418;
	add.s64 	%rd5521, %rd5517, %rd5520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3760,%dummy}, %rd5492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3761}, %rd5492;
	}
	shf.r.wrap.b32 	%r3762, %r3761, %r3760, 14;
	shf.r.wrap.b32 	%r3763, %r3760, %r3761, 14;
	mov.b64 	%rd5522, {%r3763, %r3762};
	shf.r.wrap.b32 	%r3764, %r3761, %r3760, 18;
	shf.r.wrap.b32 	%r3765, %r3760, %r3761, 18;
	mov.b64 	%rd5523, {%r3765, %r3764};
	xor.b64  	%rd5524, %rd5522, %rd5523;
	shf.l.wrap.b32 	%r3766, %r3760, %r3761, 23;
	shf.l.wrap.b32 	%r3767, %r3761, %r3760, 23;
	mov.b64 	%rd5525, {%r3767, %r3766};
	xor.b64  	%rd5526, %rd5524, %rd5525;
	add.s64 	%rd5527, %rd5521, %rd5526;
	add.s64 	%rd5528, %rd5527, -3880063495543823972;
	add.s64 	%rd5529, %rd5528, %rd5392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3768,%dummy}, %rd5503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3769}, %rd5503;
	}
	shf.r.wrap.b32 	%r3770, %r3769, %r3768, 28;
	shf.r.wrap.b32 	%r3771, %r3768, %r3769, 28;
	mov.b64 	%rd5530, {%r3771, %r3770};
	shf.l.wrap.b32 	%r3772, %r3768, %r3769, 30;
	shf.l.wrap.b32 	%r3773, %r3769, %r3768, 30;
	mov.b64 	%rd5531, {%r3773, %r3772};
	xor.b64  	%rd5532, %rd5530, %rd5531;
	shf.l.wrap.b32 	%r3774, %r3768, %r3769, 25;
	shf.l.wrap.b32 	%r3775, %r3769, %r3768, 25;
	mov.b64 	%rd5533, {%r3775, %r3774};
	xor.b64  	%rd5534, %rd5532, %rd5533;
	and.b64  	%rd5535, %rd5503, %rd5466;
	or.b64  	%rd5536, %rd5503, %rd5466;
	and.b64  	%rd5537, %rd5536, %rd5429;
	or.b64  	%rd5538, %rd5537, %rd5535;
	add.s64 	%rd5539, %rd5538, %rd5534;
	add.s64 	%rd5540, %rd5539, %rd5528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3776,%dummy}, %rd5479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3777}, %rd5479;
	}
	shf.r.wrap.b32 	%r3778, %r3777, %r3776, 19;
	shf.r.wrap.b32 	%r3779, %r3776, %r3777, 19;
	mov.b64 	%rd5541, {%r3779, %r3778};
	shf.l.wrap.b32 	%r3780, %r3776, %r3777, 3;
	shf.l.wrap.b32 	%r3781, %r3777, %r3776, 3;
	mov.b64 	%rd5542, {%r3781, %r3780};
	xor.b64  	%rd5543, %rd5541, %rd5542;
	shr.u64 	%rd5544, %rd5479, 6;
	xor.b64  	%rd5545, %rd5543, %rd5544;
	shf.r.wrap.b32 	%r3782, %r3439, %r3438, 1;
	shf.r.wrap.b32 	%r3783, %r3438, %r3439, 1;
	mov.b64 	%rd5546, {%r3783, %r3782};
	shf.r.wrap.b32 	%r3784, %r3439, %r3438, 8;
	shf.r.wrap.b32 	%r3785, %r3438, %r3439, 8;
	mov.b64 	%rd5547, {%r3785, %r3784};
	xor.b64  	%rd5548, %rd5546, %rd5547;
	shr.u64 	%rd5549, %rd4998, 7;
	xor.b64  	%rd5550, %rd5548, %rd5549;
	add.s64 	%rd5551, %rd5550, %rd4961;
	add.s64 	%rd5552, %rd5551, %rd5294;
	add.s64 	%rd5553, %rd5552, %rd5545;
	add.s64 	%rd5554, %rd5553, %rd5418;
	xor.b64  	%rd5555, %rd5492, %rd5455;
	and.b64  	%rd5556, %rd5529, %rd5555;
	xor.b64  	%rd5557, %rd5556, %rd5455;
	add.s64 	%rd5558, %rd5554, %rd5557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd5529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3787}, %rd5529;
	}
	shf.r.wrap.b32 	%r3788, %r3787, %r3786, 14;
	shf.r.wrap.b32 	%r3789, %r3786, %r3787, 14;
	mov.b64 	%rd5559, {%r3789, %r3788};
	shf.r.wrap.b32 	%r3790, %r3787, %r3786, 18;
	shf.r.wrap.b32 	%r3791, %r3786, %r3787, 18;
	mov.b64 	%rd5560, {%r3791, %r3790};
	xor.b64  	%rd5561, %rd5559, %rd5560;
	shf.l.wrap.b32 	%r3792, %r3786, %r3787, 23;
	shf.l.wrap.b32 	%r3793, %r3787, %r3786, 23;
	mov.b64 	%rd5562, {%r3793, %r3792};
	xor.b64  	%rd5563, %rd5561, %rd5562;
	add.s64 	%rd5564, %rd5558, %rd5563;
	add.s64 	%rd5565, %rd5564, -3348786107499101689;
	add.s64 	%rd5566, %rd5565, %rd5429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3794,%dummy}, %rd5540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3795}, %rd5540;
	}
	shf.r.wrap.b32 	%r3796, %r3795, %r3794, 28;
	shf.r.wrap.b32 	%r3797, %r3794, %r3795, 28;
	mov.b64 	%rd5567, {%r3797, %r3796};
	shf.l.wrap.b32 	%r3798, %r3794, %r3795, 30;
	shf.l.wrap.b32 	%r3799, %r3795, %r3794, 30;
	mov.b64 	%rd5568, {%r3799, %r3798};
	xor.b64  	%rd5569, %rd5567, %rd5568;
	shf.l.wrap.b32 	%r3800, %r3794, %r3795, 25;
	shf.l.wrap.b32 	%r3801, %r3795, %r3794, 25;
	mov.b64 	%rd5570, {%r3801, %r3800};
	xor.b64  	%rd5571, %rd5569, %rd5570;
	and.b64  	%rd5572, %rd5540, %rd5503;
	or.b64  	%rd5573, %rd5540, %rd5503;
	and.b64  	%rd5574, %rd5573, %rd5466;
	or.b64  	%rd5575, %rd5574, %rd5572;
	add.s64 	%rd5576, %rd5575, %rd5571;
	add.s64 	%rd5577, %rd5576, %rd5565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd5516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3803}, %rd5516;
	}
	shf.r.wrap.b32 	%r3804, %r3803, %r3802, 19;
	shf.r.wrap.b32 	%r3805, %r3802, %r3803, 19;
	mov.b64 	%rd5578, {%r3805, %r3804};
	shf.l.wrap.b32 	%r3806, %r3802, %r3803, 3;
	shf.l.wrap.b32 	%r3807, %r3803, %r3802, 3;
	mov.b64 	%rd5579, {%r3807, %r3806};
	xor.b64  	%rd5580, %rd5578, %rd5579;
	shr.u64 	%rd5581, %rd5516, 6;
	xor.b64  	%rd5582, %rd5580, %rd5581;
	shf.r.wrap.b32 	%r3808, %r3465, %r3464, 1;
	shf.r.wrap.b32 	%r3809, %r3464, %r3465, 1;
	mov.b64 	%rd5583, {%r3809, %r3808};
	shf.r.wrap.b32 	%r3810, %r3465, %r3464, 8;
	shf.r.wrap.b32 	%r3811, %r3464, %r3465, 8;
	mov.b64 	%rd5584, {%r3811, %r3810};
	xor.b64  	%rd5585, %rd5583, %rd5584;
	shr.u64 	%rd5586, %rd5035, 7;
	xor.b64  	%rd5587, %rd5585, %rd5586;
	add.s64 	%rd5588, %rd5587, %rd4998;
	add.s64 	%rd5589, %rd5588, %rd5331;
	add.s64 	%rd5590, %rd5589, %rd5582;
	add.s64 	%rd5591, %rd5590, %rd5455;
	xor.b64  	%rd5592, %rd5529, %rd5492;
	and.b64  	%rd5593, %rd5566, %rd5592;
	xor.b64  	%rd5594, %rd5593, %rd5492;
	add.s64 	%rd5595, %rd5591, %rd5594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3812,%dummy}, %rd5566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3813}, %rd5566;
	}
	shf.r.wrap.b32 	%r3814, %r3813, %r3812, 14;
	shf.r.wrap.b32 	%r3815, %r3812, %r3813, 14;
	mov.b64 	%rd5596, {%r3815, %r3814};
	shf.r.wrap.b32 	%r3816, %r3813, %r3812, 18;
	shf.r.wrap.b32 	%r3817, %r3812, %r3813, 18;
	mov.b64 	%rd5597, {%r3817, %r3816};
	xor.b64  	%rd5598, %rd5596, %rd5597;
	shf.l.wrap.b32 	%r3818, %r3812, %r3813, 23;
	shf.l.wrap.b32 	%r3819, %r3813, %r3812, 23;
	mov.b64 	%rd5599, {%r3819, %r3818};
	xor.b64  	%rd5600, %rd5598, %rd5599;
	add.s64 	%rd5601, %rd5595, %rd5600;
	add.s64 	%rd5602, %rd5601, -1523767162380948706;
	add.s64 	%rd5603, %rd5602, %rd5466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3820,%dummy}, %rd5577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd5577;
	}
	shf.r.wrap.b32 	%r3822, %r3821, %r3820, 28;
	shf.r.wrap.b32 	%r3823, %r3820, %r3821, 28;
	mov.b64 	%rd5604, {%r3823, %r3822};
	shf.l.wrap.b32 	%r3824, %r3820, %r3821, 30;
	shf.l.wrap.b32 	%r3825, %r3821, %r3820, 30;
	mov.b64 	%rd5605, {%r3825, %r3824};
	xor.b64  	%rd5606, %rd5604, %rd5605;
	shf.l.wrap.b32 	%r3826, %r3820, %r3821, 25;
	shf.l.wrap.b32 	%r3827, %r3821, %r3820, 25;
	mov.b64 	%rd5607, {%r3827, %r3826};
	xor.b64  	%rd5608, %rd5606, %rd5607;
	and.b64  	%rd5609, %rd5577, %rd5540;
	or.b64  	%rd5610, %rd5577, %rd5540;
	and.b64  	%rd5611, %rd5610, %rd5503;
	or.b64  	%rd5612, %rd5611, %rd5609;
	add.s64 	%rd5613, %rd5612, %rd5608;
	add.s64 	%rd5614, %rd5613, %rd5602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3828,%dummy}, %rd5553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3829}, %rd5553;
	}
	shf.r.wrap.b32 	%r3830, %r3829, %r3828, 19;
	shf.r.wrap.b32 	%r3831, %r3828, %r3829, 19;
	mov.b64 	%rd5615, {%r3831, %r3830};
	shf.l.wrap.b32 	%r3832, %r3828, %r3829, 3;
	shf.l.wrap.b32 	%r3833, %r3829, %r3828, 3;
	mov.b64 	%rd5616, {%r3833, %r3832};
	xor.b64  	%rd5617, %rd5615, %rd5616;
	shr.u64 	%rd5618, %rd5553, 6;
	xor.b64  	%rd5619, %rd5617, %rd5618;
	shf.r.wrap.b32 	%r3834, %r3491, %r3490, 1;
	shf.r.wrap.b32 	%r3835, %r3490, %r3491, 1;
	mov.b64 	%rd5620, {%r3835, %r3834};
	shf.r.wrap.b32 	%r3836, %r3491, %r3490, 8;
	shf.r.wrap.b32 	%r3837, %r3490, %r3491, 8;
	mov.b64 	%rd5621, {%r3837, %r3836};
	xor.b64  	%rd5622, %rd5620, %rd5621;
	shr.u64 	%rd5623, %rd5072, 7;
	xor.b64  	%rd5624, %rd5622, %rd5623;
	add.s64 	%rd5625, %rd5624, %rd5035;
	add.s64 	%rd5626, %rd5625, %rd5368;
	add.s64 	%rd5627, %rd5626, %rd5619;
	add.s64 	%rd5628, %rd5627, %rd5492;
	xor.b64  	%rd5629, %rd5566, %rd5529;
	and.b64  	%rd5630, %rd5603, %rd5629;
	xor.b64  	%rd5631, %rd5630, %rd5529;
	add.s64 	%rd5632, %rd5628, %rd5631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3838,%dummy}, %rd5603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3839}, %rd5603;
	}
	shf.r.wrap.b32 	%r3840, %r3839, %r3838, 14;
	shf.r.wrap.b32 	%r3841, %r3838, %r3839, 14;
	mov.b64 	%rd5633, {%r3841, %r3840};
	shf.r.wrap.b32 	%r3842, %r3839, %r3838, 18;
	shf.r.wrap.b32 	%r3843, %r3838, %r3839, 18;
	mov.b64 	%rd5634, {%r3843, %r3842};
	xor.b64  	%rd5635, %rd5633, %rd5634;
	shf.l.wrap.b32 	%r3844, %r3838, %r3839, 23;
	shf.l.wrap.b32 	%r3845, %r3839, %r3838, 23;
	mov.b64 	%rd5636, {%r3845, %r3844};
	xor.b64  	%rd5637, %rd5635, %rd5636;
	add.s64 	%rd5638, %rd5632, %rd5637;
	add.s64 	%rd5639, %rd5638, -757361751448694408;
	add.s64 	%rd5640, %rd5639, %rd5503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3846,%dummy}, %rd5614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3847}, %rd5614;
	}
	shf.r.wrap.b32 	%r3848, %r3847, %r3846, 28;
	shf.r.wrap.b32 	%r3849, %r3846, %r3847, 28;
	mov.b64 	%rd5641, {%r3849, %r3848};
	shf.l.wrap.b32 	%r3850, %r3846, %r3847, 30;
	shf.l.wrap.b32 	%r3851, %r3847, %r3846, 30;
	mov.b64 	%rd5642, {%r3851, %r3850};
	xor.b64  	%rd5643, %rd5641, %rd5642;
	shf.l.wrap.b32 	%r3852, %r3846, %r3847, 25;
	shf.l.wrap.b32 	%r3853, %r3847, %r3846, 25;
	mov.b64 	%rd5644, {%r3853, %r3852};
	xor.b64  	%rd5645, %rd5643, %rd5644;
	and.b64  	%rd5646, %rd5614, %rd5577;
	or.b64  	%rd5647, %rd5614, %rd5577;
	and.b64  	%rd5648, %rd5647, %rd5540;
	or.b64  	%rd5649, %rd5648, %rd5646;
	add.s64 	%rd5650, %rd5649, %rd5645;
	add.s64 	%rd5651, %rd5650, %rd5639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3854,%dummy}, %rd5590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3855}, %rd5590;
	}
	shf.r.wrap.b32 	%r3856, %r3855, %r3854, 19;
	shf.r.wrap.b32 	%r3857, %r3854, %r3855, 19;
	mov.b64 	%rd5652, {%r3857, %r3856};
	shf.l.wrap.b32 	%r3858, %r3854, %r3855, 3;
	shf.l.wrap.b32 	%r3859, %r3855, %r3854, 3;
	mov.b64 	%rd5653, {%r3859, %r3858};
	xor.b64  	%rd5654, %rd5652, %rd5653;
	shr.u64 	%rd5655, %rd5590, 6;
	xor.b64  	%rd5656, %rd5654, %rd5655;
	shf.r.wrap.b32 	%r3860, %r3517, %r3516, 1;
	shf.r.wrap.b32 	%r3861, %r3516, %r3517, 1;
	mov.b64 	%rd5657, {%r3861, %r3860};
	shf.r.wrap.b32 	%r3862, %r3517, %r3516, 8;
	shf.r.wrap.b32 	%r3863, %r3516, %r3517, 8;
	mov.b64 	%rd5658, {%r3863, %r3862};
	xor.b64  	%rd5659, %rd5657, %rd5658;
	shr.u64 	%rd5660, %rd5109, 7;
	xor.b64  	%rd5661, %rd5659, %rd5660;
	add.s64 	%rd5662, %rd5661, %rd5072;
	add.s64 	%rd5663, %rd5662, %rd5405;
	add.s64 	%rd5664, %rd5663, %rd5656;
	add.s64 	%rd5665, %rd5664, %rd5529;
	xor.b64  	%rd5666, %rd5603, %rd5566;
	and.b64  	%rd5667, %rd5640, %rd5666;
	xor.b64  	%rd5668, %rd5667, %rd5566;
	add.s64 	%rd5669, %rd5665, %rd5668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3864,%dummy}, %rd5640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3865}, %rd5640;
	}
	shf.r.wrap.b32 	%r3866, %r3865, %r3864, 14;
	shf.r.wrap.b32 	%r3867, %r3864, %r3865, 14;
	mov.b64 	%rd5670, {%r3867, %r3866};
	shf.r.wrap.b32 	%r3868, %r3865, %r3864, 18;
	shf.r.wrap.b32 	%r3869, %r3864, %r3865, 18;
	mov.b64 	%rd5671, {%r3869, %r3868};
	xor.b64  	%rd5672, %rd5670, %rd5671;
	shf.l.wrap.b32 	%r3870, %r3864, %r3865, 23;
	shf.l.wrap.b32 	%r3871, %r3865, %r3864, 23;
	mov.b64 	%rd5673, {%r3871, %r3870};
	xor.b64  	%rd5674, %rd5672, %rd5673;
	add.s64 	%rd5675, %rd5669, %rd5674;
	add.s64 	%rd5676, %rd5675, 500013540394364858;
	add.s64 	%rd5677, %rd5676, %rd5540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3872,%dummy}, %rd5651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3873}, %rd5651;
	}
	shf.r.wrap.b32 	%r3874, %r3873, %r3872, 28;
	shf.r.wrap.b32 	%r3875, %r3872, %r3873, 28;
	mov.b64 	%rd5678, {%r3875, %r3874};
	shf.l.wrap.b32 	%r3876, %r3872, %r3873, 30;
	shf.l.wrap.b32 	%r3877, %r3873, %r3872, 30;
	mov.b64 	%rd5679, {%r3877, %r3876};
	xor.b64  	%rd5680, %rd5678, %rd5679;
	shf.l.wrap.b32 	%r3878, %r3872, %r3873, 25;
	shf.l.wrap.b32 	%r3879, %r3873, %r3872, 25;
	mov.b64 	%rd5681, {%r3879, %r3878};
	xor.b64  	%rd5682, %rd5680, %rd5681;
	and.b64  	%rd5683, %rd5651, %rd5614;
	or.b64  	%rd5684, %rd5651, %rd5614;
	and.b64  	%rd5685, %rd5684, %rd5577;
	or.b64  	%rd5686, %rd5685, %rd5683;
	add.s64 	%rd5687, %rd5686, %rd5682;
	add.s64 	%rd5688, %rd5687, %rd5676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3880,%dummy}, %rd5627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3881}, %rd5627;
	}
	shf.r.wrap.b32 	%r3882, %r3881, %r3880, 19;
	shf.r.wrap.b32 	%r3883, %r3880, %r3881, 19;
	mov.b64 	%rd5689, {%r3883, %r3882};
	shf.l.wrap.b32 	%r3884, %r3880, %r3881, 3;
	shf.l.wrap.b32 	%r3885, %r3881, %r3880, 3;
	mov.b64 	%rd5690, {%r3885, %r3884};
	xor.b64  	%rd5691, %rd5689, %rd5690;
	shr.u64 	%rd5692, %rd5627, 6;
	xor.b64  	%rd5693, %rd5691, %rd5692;
	shf.r.wrap.b32 	%r3886, %r3543, %r3542, 1;
	shf.r.wrap.b32 	%r3887, %r3542, %r3543, 1;
	mov.b64 	%rd5694, {%r3887, %r3886};
	shf.r.wrap.b32 	%r3888, %r3543, %r3542, 8;
	shf.r.wrap.b32 	%r3889, %r3542, %r3543, 8;
	mov.b64 	%rd5695, {%r3889, %r3888};
	xor.b64  	%rd5696, %rd5694, %rd5695;
	shr.u64 	%rd5697, %rd5146, 7;
	xor.b64  	%rd5698, %rd5696, %rd5697;
	add.s64 	%rd5699, %rd5698, %rd5109;
	add.s64 	%rd5700, %rd5699, %rd5442;
	add.s64 	%rd5701, %rd5700, %rd5693;
	add.s64 	%rd5702, %rd5701, %rd5566;
	xor.b64  	%rd5703, %rd5640, %rd5603;
	and.b64  	%rd5704, %rd5677, %rd5703;
	xor.b64  	%rd5705, %rd5704, %rd5603;
	add.s64 	%rd5706, %rd5702, %rd5705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3890,%dummy}, %rd5677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3891}, %rd5677;
	}
	shf.r.wrap.b32 	%r3892, %r3891, %r3890, 14;
	shf.r.wrap.b32 	%r3893, %r3890, %r3891, 14;
	mov.b64 	%rd5707, {%r3893, %r3892};
	shf.r.wrap.b32 	%r3894, %r3891, %r3890, 18;
	shf.r.wrap.b32 	%r3895, %r3890, %r3891, 18;
	mov.b64 	%rd5708, {%r3895, %r3894};
	xor.b64  	%rd5709, %rd5707, %rd5708;
	shf.l.wrap.b32 	%r3896, %r3890, %r3891, 23;
	shf.l.wrap.b32 	%r3897, %r3891, %r3890, 23;
	mov.b64 	%rd5710, {%r3897, %r3896};
	xor.b64  	%rd5711, %rd5709, %rd5710;
	add.s64 	%rd5712, %rd5706, %rd5711;
	add.s64 	%rd5713, %rd5712, 748580250866718886;
	add.s64 	%rd5714, %rd5713, %rd5577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3898,%dummy}, %rd5688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3899}, %rd5688;
	}
	shf.r.wrap.b32 	%r3900, %r3899, %r3898, 28;
	shf.r.wrap.b32 	%r3901, %r3898, %r3899, 28;
	mov.b64 	%rd5715, {%r3901, %r3900};
	shf.l.wrap.b32 	%r3902, %r3898, %r3899, 30;
	shf.l.wrap.b32 	%r3903, %r3899, %r3898, 30;
	mov.b64 	%rd5716, {%r3903, %r3902};
	xor.b64  	%rd5717, %rd5715, %rd5716;
	shf.l.wrap.b32 	%r3904, %r3898, %r3899, 25;
	shf.l.wrap.b32 	%r3905, %r3899, %r3898, 25;
	mov.b64 	%rd5718, {%r3905, %r3904};
	xor.b64  	%rd5719, %rd5717, %rd5718;
	and.b64  	%rd5720, %rd5688, %rd5651;
	or.b64  	%rd5721, %rd5688, %rd5651;
	and.b64  	%rd5722, %rd5721, %rd5614;
	or.b64  	%rd5723, %rd5722, %rd5720;
	add.s64 	%rd5724, %rd5723, %rd5719;
	add.s64 	%rd5725, %rd5724, %rd5713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3906,%dummy}, %rd5664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3907}, %rd5664;
	}
	shf.r.wrap.b32 	%r3908, %r3907, %r3906, 19;
	shf.r.wrap.b32 	%r3909, %r3906, %r3907, 19;
	mov.b64 	%rd5726, {%r3909, %r3908};
	shf.l.wrap.b32 	%r3910, %r3906, %r3907, 3;
	shf.l.wrap.b32 	%r3911, %r3907, %r3906, 3;
	mov.b64 	%rd5727, {%r3911, %r3910};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	shr.u64 	%rd5729, %rd5664, 6;
	xor.b64  	%rd5730, %rd5728, %rd5729;
	shf.r.wrap.b32 	%r3912, %r3569, %r3568, 1;
	shf.r.wrap.b32 	%r3913, %r3568, %r3569, 1;
	mov.b64 	%rd5731, {%r3913, %r3912};
	shf.r.wrap.b32 	%r3914, %r3569, %r3568, 8;
	shf.r.wrap.b32 	%r3915, %r3568, %r3569, 8;
	mov.b64 	%rd5732, {%r3915, %r3914};
	xor.b64  	%rd5733, %rd5731, %rd5732;
	shr.u64 	%rd5734, %rd5183, 7;
	xor.b64  	%rd5735, %rd5733, %rd5734;
	add.s64 	%rd5736, %rd5735, %rd5146;
	add.s64 	%rd5737, %rd5736, %rd5479;
	add.s64 	%rd5738, %rd5737, %rd5730;
	add.s64 	%rd5739, %rd5738, %rd5603;
	xor.b64  	%rd5740, %rd5677, %rd5640;
	and.b64  	%rd5741, %rd5714, %rd5740;
	xor.b64  	%rd5742, %rd5741, %rd5640;
	add.s64 	%rd5743, %rd5739, %rd5742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3916,%dummy}, %rd5714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3917}, %rd5714;
	}
	shf.r.wrap.b32 	%r3918, %r3917, %r3916, 14;
	shf.r.wrap.b32 	%r3919, %r3916, %r3917, 14;
	mov.b64 	%rd5744, {%r3919, %r3918};
	shf.r.wrap.b32 	%r3920, %r3917, %r3916, 18;
	shf.r.wrap.b32 	%r3921, %r3916, %r3917, 18;
	mov.b64 	%rd5745, {%r3921, %r3920};
	xor.b64  	%rd5746, %rd5744, %rd5745;
	shf.l.wrap.b32 	%r3922, %r3916, %r3917, 23;
	shf.l.wrap.b32 	%r3923, %r3917, %r3916, 23;
	mov.b64 	%rd5747, {%r3923, %r3922};
	xor.b64  	%rd5748, %rd5746, %rd5747;
	add.s64 	%rd5749, %rd5743, %rd5748;
	add.s64 	%rd5750, %rd5749, 1242879168328830382;
	add.s64 	%rd5751, %rd5750, %rd5614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3924,%dummy}, %rd5725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3925}, %rd5725;
	}
	shf.r.wrap.b32 	%r3926, %r3925, %r3924, 28;
	shf.r.wrap.b32 	%r3927, %r3924, %r3925, 28;
	mov.b64 	%rd5752, {%r3927, %r3926};
	shf.l.wrap.b32 	%r3928, %r3924, %r3925, 30;
	shf.l.wrap.b32 	%r3929, %r3925, %r3924, 30;
	mov.b64 	%rd5753, {%r3929, %r3928};
	xor.b64  	%rd5754, %rd5752, %rd5753;
	shf.l.wrap.b32 	%r3930, %r3924, %r3925, 25;
	shf.l.wrap.b32 	%r3931, %r3925, %r3924, 25;
	mov.b64 	%rd5755, {%r3931, %r3930};
	xor.b64  	%rd5756, %rd5754, %rd5755;
	and.b64  	%rd5757, %rd5725, %rd5688;
	or.b64  	%rd5758, %rd5725, %rd5688;
	and.b64  	%rd5759, %rd5758, %rd5651;
	or.b64  	%rd5760, %rd5759, %rd5757;
	add.s64 	%rd5761, %rd5760, %rd5756;
	add.s64 	%rd5762, %rd5761, %rd5750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3932,%dummy}, %rd5701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3933}, %rd5701;
	}
	shf.r.wrap.b32 	%r3934, %r3933, %r3932, 19;
	shf.r.wrap.b32 	%r3935, %r3932, %r3933, 19;
	mov.b64 	%rd5763, {%r3935, %r3934};
	shf.l.wrap.b32 	%r3936, %r3932, %r3933, 3;
	shf.l.wrap.b32 	%r3937, %r3933, %r3932, 3;
	mov.b64 	%rd5764, {%r3937, %r3936};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	shr.u64 	%rd5766, %rd5701, 6;
	xor.b64  	%rd5767, %rd5765, %rd5766;
	shf.r.wrap.b32 	%r3938, %r3595, %r3594, 1;
	shf.r.wrap.b32 	%r3939, %r3594, %r3595, 1;
	mov.b64 	%rd5768, {%r3939, %r3938};
	shf.r.wrap.b32 	%r3940, %r3595, %r3594, 8;
	shf.r.wrap.b32 	%r3941, %r3594, %r3595, 8;
	mov.b64 	%rd5769, {%r3941, %r3940};
	xor.b64  	%rd5770, %rd5768, %rd5769;
	shr.u64 	%rd5771, %rd5220, 7;
	xor.b64  	%rd5772, %rd5770, %rd5771;
	add.s64 	%rd5773, %rd5772, %rd5183;
	add.s64 	%rd5774, %rd5773, %rd5516;
	add.s64 	%rd5775, %rd5774, %rd5767;
	add.s64 	%rd5776, %rd5775, %rd5640;
	xor.b64  	%rd5777, %rd5714, %rd5677;
	and.b64  	%rd5778, %rd5751, %rd5777;
	xor.b64  	%rd5779, %rd5778, %rd5677;
	add.s64 	%rd5780, %rd5776, %rd5779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3942,%dummy}, %rd5751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3943}, %rd5751;
	}
	shf.r.wrap.b32 	%r3944, %r3943, %r3942, 14;
	shf.r.wrap.b32 	%r3945, %r3942, %r3943, 14;
	mov.b64 	%rd5781, {%r3945, %r3944};
	shf.r.wrap.b32 	%r3946, %r3943, %r3942, 18;
	shf.r.wrap.b32 	%r3947, %r3942, %r3943, 18;
	mov.b64 	%rd5782, {%r3947, %r3946};
	xor.b64  	%rd5783, %rd5781, %rd5782;
	shf.l.wrap.b32 	%r3948, %r3942, %r3943, 23;
	shf.l.wrap.b32 	%r3949, %r3943, %r3942, 23;
	mov.b64 	%rd5784, {%r3949, %r3948};
	xor.b64  	%rd5785, %rd5783, %rd5784;
	add.s64 	%rd5786, %rd5780, %rd5785;
	add.s64 	%rd5787, %rd5786, 1977374033974150939;
	add.s64 	%rd5788, %rd5787, %rd5651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3950,%dummy}, %rd5762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3951}, %rd5762;
	}
	shf.r.wrap.b32 	%r3952, %r3951, %r3950, 28;
	shf.r.wrap.b32 	%r3953, %r3950, %r3951, 28;
	mov.b64 	%rd5789, {%r3953, %r3952};
	shf.l.wrap.b32 	%r3954, %r3950, %r3951, 30;
	shf.l.wrap.b32 	%r3955, %r3951, %r3950, 30;
	mov.b64 	%rd5790, {%r3955, %r3954};
	xor.b64  	%rd5791, %rd5789, %rd5790;
	shf.l.wrap.b32 	%r3956, %r3950, %r3951, 25;
	shf.l.wrap.b32 	%r3957, %r3951, %r3950, 25;
	mov.b64 	%rd5792, {%r3957, %r3956};
	xor.b64  	%rd5793, %rd5791, %rd5792;
	and.b64  	%rd5794, %rd5762, %rd5725;
	or.b64  	%rd5795, %rd5762, %rd5725;
	and.b64  	%rd5796, %rd5795, %rd5688;
	or.b64  	%rd5797, %rd5796, %rd5794;
	add.s64 	%rd5798, %rd5797, %rd5793;
	add.s64 	%rd5799, %rd5798, %rd5787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3958,%dummy}, %rd5738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3959}, %rd5738;
	}
	shf.r.wrap.b32 	%r3960, %r3959, %r3958, 19;
	shf.r.wrap.b32 	%r3961, %r3958, %r3959, 19;
	mov.b64 	%rd5800, {%r3961, %r3960};
	shf.l.wrap.b32 	%r3962, %r3958, %r3959, 3;
	shf.l.wrap.b32 	%r3963, %r3959, %r3958, 3;
	mov.b64 	%rd5801, {%r3963, %r3962};
	xor.b64  	%rd5802, %rd5800, %rd5801;
	shr.u64 	%rd5803, %rd5738, 6;
	xor.b64  	%rd5804, %rd5802, %rd5803;
	shf.r.wrap.b32 	%r3964, %r3621, %r3620, 1;
	shf.r.wrap.b32 	%r3965, %r3620, %r3621, 1;
	mov.b64 	%rd5805, {%r3965, %r3964};
	shf.r.wrap.b32 	%r3966, %r3621, %r3620, 8;
	shf.r.wrap.b32 	%r3967, %r3620, %r3621, 8;
	mov.b64 	%rd5806, {%r3967, %r3966};
	xor.b64  	%rd5807, %rd5805, %rd5806;
	shr.u64 	%rd5808, %rd5257, 7;
	xor.b64  	%rd5809, %rd5807, %rd5808;
	add.s64 	%rd5810, %rd5809, %rd5220;
	add.s64 	%rd5811, %rd5810, %rd5553;
	add.s64 	%rd5812, %rd5811, %rd5804;
	add.s64 	%rd5813, %rd5812, %rd5677;
	xor.b64  	%rd5814, %rd5751, %rd5714;
	and.b64  	%rd5815, %rd5788, %rd5814;
	xor.b64  	%rd5816, %rd5815, %rd5714;
	add.s64 	%rd5817, %rd5813, %rd5816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3968,%dummy}, %rd5788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3969}, %rd5788;
	}
	shf.r.wrap.b32 	%r3970, %r3969, %r3968, 14;
	shf.r.wrap.b32 	%r3971, %r3968, %r3969, 14;
	mov.b64 	%rd5818, {%r3971, %r3970};
	shf.r.wrap.b32 	%r3972, %r3969, %r3968, 18;
	shf.r.wrap.b32 	%r3973, %r3968, %r3969, 18;
	mov.b64 	%rd5819, {%r3973, %r3972};
	xor.b64  	%rd5820, %rd5818, %rd5819;
	shf.l.wrap.b32 	%r3974, %r3968, %r3969, 23;
	shf.l.wrap.b32 	%r3975, %r3969, %r3968, 23;
	mov.b64 	%rd5821, {%r3975, %r3974};
	xor.b64  	%rd5822, %rd5820, %rd5821;
	add.s64 	%rd5823, %rd5817, %rd5822;
	add.s64 	%rd5824, %rd5823, 2944078676154940804;
	add.s64 	%rd5825, %rd5824, %rd5688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3976,%dummy}, %rd5799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3977}, %rd5799;
	}
	shf.r.wrap.b32 	%r3978, %r3977, %r3976, 28;
	shf.r.wrap.b32 	%r3979, %r3976, %r3977, 28;
	mov.b64 	%rd5826, {%r3979, %r3978};
	shf.l.wrap.b32 	%r3980, %r3976, %r3977, 30;
	shf.l.wrap.b32 	%r3981, %r3977, %r3976, 30;
	mov.b64 	%rd5827, {%r3981, %r3980};
	xor.b64  	%rd5828, %rd5826, %rd5827;
	shf.l.wrap.b32 	%r3982, %r3976, %r3977, 25;
	shf.l.wrap.b32 	%r3983, %r3977, %r3976, 25;
	mov.b64 	%rd5829, {%r3983, %r3982};
	xor.b64  	%rd5830, %rd5828, %rd5829;
	and.b64  	%rd5831, %rd5799, %rd5762;
	or.b64  	%rd5832, %rd5799, %rd5762;
	and.b64  	%rd5833, %rd5832, %rd5725;
	or.b64  	%rd5834, %rd5833, %rd5831;
	add.s64 	%rd5835, %rd5834, %rd5830;
	add.s64 	%rd5836, %rd5835, %rd5824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3984,%dummy}, %rd5775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3985}, %rd5775;
	}
	shf.r.wrap.b32 	%r3986, %r3985, %r3984, 19;
	shf.r.wrap.b32 	%r3987, %r3984, %r3985, 19;
	mov.b64 	%rd5837, {%r3987, %r3986};
	shf.l.wrap.b32 	%r3988, %r3984, %r3985, 3;
	shf.l.wrap.b32 	%r3989, %r3985, %r3984, 3;
	mov.b64 	%rd5838, {%r3989, %r3988};
	xor.b64  	%rd5839, %rd5837, %rd5838;
	shr.u64 	%rd5840, %rd5775, 6;
	xor.b64  	%rd5841, %rd5839, %rd5840;
	shf.r.wrap.b32 	%r3990, %r3647, %r3646, 1;
	shf.r.wrap.b32 	%r3991, %r3646, %r3647, 1;
	mov.b64 	%rd5842, {%r3991, %r3990};
	shf.r.wrap.b32 	%r3992, %r3647, %r3646, 8;
	shf.r.wrap.b32 	%r3993, %r3646, %r3647, 8;
	mov.b64 	%rd5843, {%r3993, %r3992};
	xor.b64  	%rd5844, %rd5842, %rd5843;
	shr.u64 	%rd5845, %rd5294, 7;
	xor.b64  	%rd5846, %rd5844, %rd5845;
	add.s64 	%rd5847, %rd5846, %rd5257;
	add.s64 	%rd5848, %rd5847, %rd5590;
	add.s64 	%rd5849, %rd5848, %rd5841;
	add.s64 	%rd5850, %rd5849, %rd5714;
	xor.b64  	%rd5851, %rd5788, %rd5751;
	and.b64  	%rd5852, %rd5825, %rd5851;
	xor.b64  	%rd5853, %rd5852, %rd5751;
	add.s64 	%rd5854, %rd5850, %rd5853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3994,%dummy}, %rd5825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3995}, %rd5825;
	}
	shf.r.wrap.b32 	%r3996, %r3995, %r3994, 14;
	shf.r.wrap.b32 	%r3997, %r3994, %r3995, 14;
	mov.b64 	%rd5855, {%r3997, %r3996};
	shf.r.wrap.b32 	%r3998, %r3995, %r3994, 18;
	shf.r.wrap.b32 	%r3999, %r3994, %r3995, 18;
	mov.b64 	%rd5856, {%r3999, %r3998};
	xor.b64  	%rd5857, %rd5855, %rd5856;
	shf.l.wrap.b32 	%r4000, %r3994, %r3995, 23;
	shf.l.wrap.b32 	%r4001, %r3995, %r3994, 23;
	mov.b64 	%rd5858, {%r4001, %r4000};
	xor.b64  	%rd5859, %rd5857, %rd5858;
	add.s64 	%rd5860, %rd5854, %rd5859;
	add.s64 	%rd5861, %rd5860, 3659926193048069267;
	add.s64 	%rd5862, %rd5861, %rd5725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4002,%dummy}, %rd5836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4003}, %rd5836;
	}
	shf.r.wrap.b32 	%r4004, %r4003, %r4002, 28;
	shf.r.wrap.b32 	%r4005, %r4002, %r4003, 28;
	mov.b64 	%rd5863, {%r4005, %r4004};
	shf.l.wrap.b32 	%r4006, %r4002, %r4003, 30;
	shf.l.wrap.b32 	%r4007, %r4003, %r4002, 30;
	mov.b64 	%rd5864, {%r4007, %r4006};
	xor.b64  	%rd5865, %rd5863, %rd5864;
	shf.l.wrap.b32 	%r4008, %r4002, %r4003, 25;
	shf.l.wrap.b32 	%r4009, %r4003, %r4002, 25;
	mov.b64 	%rd5866, {%r4009, %r4008};
	xor.b64  	%rd5867, %rd5865, %rd5866;
	and.b64  	%rd5868, %rd5836, %rd5799;
	or.b64  	%rd5869, %rd5836, %rd5799;
	and.b64  	%rd5870, %rd5869, %rd5762;
	or.b64  	%rd5871, %rd5870, %rd5868;
	add.s64 	%rd5872, %rd5871, %rd5867;
	add.s64 	%rd5873, %rd5872, %rd5861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4010,%dummy}, %rd5812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4011}, %rd5812;
	}
	shf.r.wrap.b32 	%r4012, %r4011, %r4010, 19;
	shf.r.wrap.b32 	%r4013, %r4010, %r4011, 19;
	mov.b64 	%rd5874, {%r4013, %r4012};
	shf.l.wrap.b32 	%r4014, %r4010, %r4011, 3;
	shf.l.wrap.b32 	%r4015, %r4011, %r4010, 3;
	mov.b64 	%rd5875, {%r4015, %r4014};
	xor.b64  	%rd5876, %rd5874, %rd5875;
	shr.u64 	%rd5877, %rd5812, 6;
	xor.b64  	%rd5878, %rd5876, %rd5877;
	shf.r.wrap.b32 	%r4016, %r3673, %r3672, 1;
	shf.r.wrap.b32 	%r4017, %r3672, %r3673, 1;
	mov.b64 	%rd5879, {%r4017, %r4016};
	shf.r.wrap.b32 	%r4018, %r3673, %r3672, 8;
	shf.r.wrap.b32 	%r4019, %r3672, %r3673, 8;
	mov.b64 	%rd5880, {%r4019, %r4018};
	xor.b64  	%rd5881, %rd5879, %rd5880;
	shr.u64 	%rd5882, %rd5331, 7;
	xor.b64  	%rd5883, %rd5881, %rd5882;
	add.s64 	%rd5884, %rd5883, %rd5294;
	add.s64 	%rd5885, %rd5884, %rd5627;
	add.s64 	%rd5886, %rd5885, %rd5878;
	add.s64 	%rd5887, %rd5886, %rd5751;
	xor.b64  	%rd5888, %rd5825, %rd5788;
	and.b64  	%rd5889, %rd5862, %rd5888;
	xor.b64  	%rd5890, %rd5889, %rd5788;
	add.s64 	%rd5891, %rd5887, %rd5890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4020,%dummy}, %rd5862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4021}, %rd5862;
	}
	shf.r.wrap.b32 	%r4022, %r4021, %r4020, 14;
	shf.r.wrap.b32 	%r4023, %r4020, %r4021, 14;
	mov.b64 	%rd5892, {%r4023, %r4022};
	shf.r.wrap.b32 	%r4024, %r4021, %r4020, 18;
	shf.r.wrap.b32 	%r4025, %r4020, %r4021, 18;
	mov.b64 	%rd5893, {%r4025, %r4024};
	xor.b64  	%rd5894, %rd5892, %rd5893;
	shf.l.wrap.b32 	%r4026, %r4020, %r4021, 23;
	shf.l.wrap.b32 	%r4027, %r4021, %r4020, 23;
	mov.b64 	%rd5895, {%r4027, %r4026};
	xor.b64  	%rd5896, %rd5894, %rd5895;
	add.s64 	%rd5897, %rd5891, %rd5896;
	add.s64 	%rd5898, %rd5897, 4368137639120453308;
	add.s64 	%rd5899, %rd5898, %rd5762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4028,%dummy}, %rd5873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4029}, %rd5873;
	}
	shf.r.wrap.b32 	%r4030, %r4029, %r4028, 28;
	shf.r.wrap.b32 	%r4031, %r4028, %r4029, 28;
	mov.b64 	%rd5900, {%r4031, %r4030};
	shf.l.wrap.b32 	%r4032, %r4028, %r4029, 30;
	shf.l.wrap.b32 	%r4033, %r4029, %r4028, 30;
	mov.b64 	%rd5901, {%r4033, %r4032};
	xor.b64  	%rd5902, %rd5900, %rd5901;
	shf.l.wrap.b32 	%r4034, %r4028, %r4029, 25;
	shf.l.wrap.b32 	%r4035, %r4029, %r4028, 25;
	mov.b64 	%rd5903, {%r4035, %r4034};
	xor.b64  	%rd5904, %rd5902, %rd5903;
	and.b64  	%rd5905, %rd5873, %rd5836;
	or.b64  	%rd5906, %rd5873, %rd5836;
	and.b64  	%rd5907, %rd5906, %rd5799;
	or.b64  	%rd5908, %rd5907, %rd5905;
	add.s64 	%rd5909, %rd5908, %rd5904;
	add.s64 	%rd5910, %rd5909, %rd5898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4036,%dummy}, %rd5849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4037}, %rd5849;
	}
	shf.r.wrap.b32 	%r4038, %r4037, %r4036, 19;
	shf.r.wrap.b32 	%r4039, %r4036, %r4037, 19;
	mov.b64 	%rd5911, {%r4039, %r4038};
	shf.l.wrap.b32 	%r4040, %r4036, %r4037, 3;
	shf.l.wrap.b32 	%r4041, %r4037, %r4036, 3;
	mov.b64 	%rd5912, {%r4041, %r4040};
	xor.b64  	%rd5913, %rd5911, %rd5912;
	shr.u64 	%rd5914, %rd5849, 6;
	xor.b64  	%rd5915, %rd5913, %rd5914;
	shf.r.wrap.b32 	%r4042, %r3699, %r3698, 1;
	shf.r.wrap.b32 	%r4043, %r3698, %r3699, 1;
	mov.b64 	%rd5916, {%r4043, %r4042};
	shf.r.wrap.b32 	%r4044, %r3699, %r3698, 8;
	shf.r.wrap.b32 	%r4045, %r3698, %r3699, 8;
	mov.b64 	%rd5917, {%r4045, %r4044};
	xor.b64  	%rd5918, %rd5916, %rd5917;
	shr.u64 	%rd5919, %rd5368, 7;
	xor.b64  	%rd5920, %rd5918, %rd5919;
	add.s64 	%rd5921, %rd5920, %rd5331;
	add.s64 	%rd5922, %rd5921, %rd5664;
	add.s64 	%rd5923, %rd5922, %rd5915;
	add.s64 	%rd5924, %rd5923, %rd5788;
	xor.b64  	%rd5925, %rd5862, %rd5825;
	and.b64  	%rd5926, %rd5899, %rd5925;
	xor.b64  	%rd5927, %rd5926, %rd5825;
	add.s64 	%rd5928, %rd5924, %rd5927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4046,%dummy}, %rd5899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4047}, %rd5899;
	}
	shf.r.wrap.b32 	%r4048, %r4047, %r4046, 14;
	shf.r.wrap.b32 	%r4049, %r4046, %r4047, 14;
	mov.b64 	%rd5929, {%r4049, %r4048};
	shf.r.wrap.b32 	%r4050, %r4047, %r4046, 18;
	shf.r.wrap.b32 	%r4051, %r4046, %r4047, 18;
	mov.b64 	%rd5930, {%r4051, %r4050};
	xor.b64  	%rd5931, %rd5929, %rd5930;
	shf.l.wrap.b32 	%r4052, %r4046, %r4047, 23;
	shf.l.wrap.b32 	%r4053, %r4047, %r4046, 23;
	mov.b64 	%rd5932, {%r4053, %r4052};
	xor.b64  	%rd5933, %rd5931, %rd5932;
	add.s64 	%rd5934, %rd5928, %rd5933;
	add.s64 	%rd5935, %rd5934, 4836135668995329356;
	add.s64 	%rd5936, %rd5935, %rd5799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4054,%dummy}, %rd5910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4055}, %rd5910;
	}
	shf.r.wrap.b32 	%r4056, %r4055, %r4054, 28;
	shf.r.wrap.b32 	%r4057, %r4054, %r4055, 28;
	mov.b64 	%rd5937, {%r4057, %r4056};
	shf.l.wrap.b32 	%r4058, %r4054, %r4055, 30;
	shf.l.wrap.b32 	%r4059, %r4055, %r4054, 30;
	mov.b64 	%rd5938, {%r4059, %r4058};
	xor.b64  	%rd5939, %rd5937, %rd5938;
	shf.l.wrap.b32 	%r4060, %r4054, %r4055, 25;
	shf.l.wrap.b32 	%r4061, %r4055, %r4054, 25;
	mov.b64 	%rd5940, {%r4061, %r4060};
	xor.b64  	%rd5941, %rd5939, %rd5940;
	and.b64  	%rd5942, %rd5910, %rd5873;
	or.b64  	%rd5943, %rd5910, %rd5873;
	and.b64  	%rd5944, %rd5943, %rd5836;
	or.b64  	%rd5945, %rd5944, %rd5942;
	add.s64 	%rd5946, %rd5945, %rd5941;
	add.s64 	%rd5947, %rd5946, %rd5935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4062,%dummy}, %rd5886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4063}, %rd5886;
	}
	shf.r.wrap.b32 	%r4064, %r4063, %r4062, 19;
	shf.r.wrap.b32 	%r4065, %r4062, %r4063, 19;
	mov.b64 	%rd5948, {%r4065, %r4064};
	shf.l.wrap.b32 	%r4066, %r4062, %r4063, 3;
	shf.l.wrap.b32 	%r4067, %r4063, %r4062, 3;
	mov.b64 	%rd5949, {%r4067, %r4066};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	shr.u64 	%rd5951, %rd5886, 6;
	xor.b64  	%rd5952, %rd5950, %rd5951;
	shf.r.wrap.b32 	%r4068, %r3725, %r3724, 1;
	shf.r.wrap.b32 	%r4069, %r3724, %r3725, 1;
	mov.b64 	%rd5953, {%r4069, %r4068};
	shf.r.wrap.b32 	%r4070, %r3725, %r3724, 8;
	shf.r.wrap.b32 	%r4071, %r3724, %r3725, 8;
	mov.b64 	%rd5954, {%r4071, %r4070};
	xor.b64  	%rd5955, %rd5953, %rd5954;
	shr.u64 	%rd5956, %rd5405, 7;
	xor.b64  	%rd5957, %rd5955, %rd5956;
	add.s64 	%rd5958, %rd5957, %rd5368;
	add.s64 	%rd5959, %rd5958, %rd5701;
	add.s64 	%rd5960, %rd5959, %rd5952;
	add.s64 	%rd5961, %rd5960, %rd5825;
	xor.b64  	%rd5962, %rd5899, %rd5862;
	and.b64  	%rd5963, %rd5936, %rd5962;
	xor.b64  	%rd5964, %rd5963, %rd5862;
	add.s64 	%rd5965, %rd5961, %rd5964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4072,%dummy}, %rd5936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4073}, %rd5936;
	}
	shf.r.wrap.b32 	%r4074, %r4073, %r4072, 14;
	shf.r.wrap.b32 	%r4075, %r4072, %r4073, 14;
	mov.b64 	%rd5966, {%r4075, %r4074};
	shf.r.wrap.b32 	%r4076, %r4073, %r4072, 18;
	shf.r.wrap.b32 	%r4077, %r4072, %r4073, 18;
	mov.b64 	%rd5967, {%r4077, %r4076};
	xor.b64  	%rd5968, %rd5966, %rd5967;
	shf.l.wrap.b32 	%r4078, %r4072, %r4073, 23;
	shf.l.wrap.b32 	%r4079, %r4073, %r4072, 23;
	mov.b64 	%rd5969, {%r4079, %r4078};
	xor.b64  	%rd5970, %rd5968, %rd5969;
	add.s64 	%rd5971, %rd5965, %rd5970;
	add.s64 	%rd5972, %rd5971, 5532061633213252278;
	add.s64 	%rd5973, %rd5972, %rd5836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4080,%dummy}, %rd5947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4081}, %rd5947;
	}
	shf.r.wrap.b32 	%r4082, %r4081, %r4080, 28;
	shf.r.wrap.b32 	%r4083, %r4080, %r4081, 28;
	mov.b64 	%rd5974, {%r4083, %r4082};
	shf.l.wrap.b32 	%r4084, %r4080, %r4081, 30;
	shf.l.wrap.b32 	%r4085, %r4081, %r4080, 30;
	mov.b64 	%rd5975, {%r4085, %r4084};
	xor.b64  	%rd5976, %rd5974, %rd5975;
	shf.l.wrap.b32 	%r4086, %r4080, %r4081, 25;
	shf.l.wrap.b32 	%r4087, %r4081, %r4080, 25;
	mov.b64 	%rd5977, {%r4087, %r4086};
	xor.b64  	%rd5978, %rd5976, %rd5977;
	and.b64  	%rd5979, %rd5947, %rd5910;
	or.b64  	%rd5980, %rd5947, %rd5910;
	and.b64  	%rd5981, %rd5980, %rd5873;
	or.b64  	%rd5982, %rd5981, %rd5979;
	add.s64 	%rd5983, %rd5982, %rd5978;
	add.s64 	%rd5984, %rd5983, %rd5972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4088,%dummy}, %rd5923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4089}, %rd5923;
	}
	shf.r.wrap.b32 	%r4090, %r4089, %r4088, 19;
	shf.r.wrap.b32 	%r4091, %r4088, %r4089, 19;
	mov.b64 	%rd5985, {%r4091, %r4090};
	shf.l.wrap.b32 	%r4092, %r4088, %r4089, 3;
	shf.l.wrap.b32 	%r4093, %r4089, %r4088, 3;
	mov.b64 	%rd5986, {%r4093, %r4092};
	xor.b64  	%rd5987, %rd5985, %rd5986;
	shr.u64 	%rd5988, %rd5923, 6;
	xor.b64  	%rd5989, %rd5987, %rd5988;
	shf.r.wrap.b32 	%r4094, %r3751, %r3750, 1;
	shf.r.wrap.b32 	%r4095, %r3750, %r3751, 1;
	mov.b64 	%rd5990, {%r4095, %r4094};
	shf.r.wrap.b32 	%r4096, %r3751, %r3750, 8;
	shf.r.wrap.b32 	%r4097, %r3750, %r3751, 8;
	mov.b64 	%rd5991, {%r4097, %r4096};
	xor.b64  	%rd5992, %rd5990, %rd5991;
	shr.u64 	%rd5993, %rd5442, 7;
	xor.b64  	%rd5994, %rd5992, %rd5993;
	add.s64 	%rd5995, %rd5994, %rd5405;
	add.s64 	%rd5996, %rd5995, %rd5738;
	add.s64 	%rd5997, %rd5996, %rd5989;
	add.s64 	%rd5998, %rd5997, %rd5862;
	xor.b64  	%rd5999, %rd5936, %rd5899;
	and.b64  	%rd6000, %rd5973, %rd5999;
	xor.b64  	%rd6001, %rd6000, %rd5899;
	add.s64 	%rd6002, %rd5998, %rd6001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4098,%dummy}, %rd5973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4099}, %rd5973;
	}
	shf.r.wrap.b32 	%r4100, %r4099, %r4098, 14;
	shf.r.wrap.b32 	%r4101, %r4098, %r4099, 14;
	mov.b64 	%rd6003, {%r4101, %r4100};
	shf.r.wrap.b32 	%r4102, %r4099, %r4098, 18;
	shf.r.wrap.b32 	%r4103, %r4098, %r4099, 18;
	mov.b64 	%rd6004, {%r4103, %r4102};
	xor.b64  	%rd6005, %rd6003, %rd6004;
	shf.l.wrap.b32 	%r4104, %r4098, %r4099, 23;
	shf.l.wrap.b32 	%r4105, %r4099, %r4098, 23;
	mov.b64 	%rd6006, {%r4105, %r4104};
	xor.b64  	%rd6007, %rd6005, %rd6006;
	add.s64 	%rd6008, %rd6002, %rd6007;
	add.s64 	%rd6009, %rd6008, 6448918945643986474;
	add.s64 	%rd6010, %rd6009, %rd5873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4106,%dummy}, %rd5984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4107}, %rd5984;
	}
	shf.r.wrap.b32 	%r4108, %r4107, %r4106, 28;
	shf.r.wrap.b32 	%r4109, %r4106, %r4107, 28;
	mov.b64 	%rd6011, {%r4109, %r4108};
	shf.l.wrap.b32 	%r4110, %r4106, %r4107, 30;
	shf.l.wrap.b32 	%r4111, %r4107, %r4106, 30;
	mov.b64 	%rd6012, {%r4111, %r4110};
	xor.b64  	%rd6013, %rd6011, %rd6012;
	shf.l.wrap.b32 	%r4112, %r4106, %r4107, 25;
	shf.l.wrap.b32 	%r4113, %r4107, %r4106, 25;
	mov.b64 	%rd6014, {%r4113, %r4112};
	xor.b64  	%rd6015, %rd6013, %rd6014;
	and.b64  	%rd6016, %rd5984, %rd5947;
	or.b64  	%rd6017, %rd5984, %rd5947;
	and.b64  	%rd6018, %rd6017, %rd5910;
	or.b64  	%rd6019, %rd6018, %rd6016;
	add.s64 	%rd6020, %rd6019, %rd6015;
	add.s64 	%rd6021, %rd6020, %rd6009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4114,%dummy}, %rd5960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4115}, %rd5960;
	}
	shf.r.wrap.b32 	%r4116, %r4115, %r4114, 19;
	shf.r.wrap.b32 	%r4117, %r4114, %r4115, 19;
	mov.b64 	%rd6022, {%r4117, %r4116};
	shf.l.wrap.b32 	%r4118, %r4114, %r4115, 3;
	shf.l.wrap.b32 	%r4119, %r4115, %r4114, 3;
	mov.b64 	%rd6023, {%r4119, %r4118};
	xor.b64  	%rd6024, %rd6022, %rd6023;
	shr.u64 	%rd6025, %rd5960, 6;
	xor.b64  	%rd6026, %rd6024, %rd6025;
	shf.r.wrap.b32 	%r4120, %r3777, %r3776, 1;
	shf.r.wrap.b32 	%r4121, %r3776, %r3777, 1;
	mov.b64 	%rd6027, {%r4121, %r4120};
	shf.r.wrap.b32 	%r4122, %r3777, %r3776, 8;
	shf.r.wrap.b32 	%r4123, %r3776, %r3777, 8;
	mov.b64 	%rd6028, {%r4123, %r4122};
	xor.b64  	%rd6029, %rd6027, %rd6028;
	shr.u64 	%rd6030, %rd5479, 7;
	xor.b64  	%rd6031, %rd6029, %rd6030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4124,%dummy}, %rd6010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4125}, %rd6010;
	}
	shf.r.wrap.b32 	%r4126, %r4125, %r4124, 14;
	shf.r.wrap.b32 	%r4127, %r4124, %r4125, 14;
	mov.b64 	%rd6032, {%r4127, %r4126};
	shf.r.wrap.b32 	%r4128, %r4125, %r4124, 18;
	shf.r.wrap.b32 	%r4129, %r4124, %r4125, 18;
	mov.b64 	%rd6033, {%r4129, %r4128};
	xor.b64  	%rd6034, %rd6032, %rd6033;
	shf.l.wrap.b32 	%r4130, %r4124, %r4125, 23;
	shf.l.wrap.b32 	%r4131, %r4125, %r4124, 23;
	mov.b64 	%rd6035, {%r4131, %r4130};
	xor.b64  	%rd6036, %rd6034, %rd6035;
	xor.b64  	%rd6037, %rd5973, %rd5936;
	and.b64  	%rd6038, %rd6010, %rd6037;
	xor.b64  	%rd6039, %rd6038, %rd5936;
	add.s64 	%rd6040, %rd5442, %rd6031;
	add.s64 	%rd6041, %rd6040, %rd5775;
	add.s64 	%rd6042, %rd6041, %rd6026;
	add.s64 	%rd6043, %rd6042, %rd5899;
	add.s64 	%rd6044, %rd6043, %rd6039;
	add.s64 	%rd6045, %rd6044, %rd6036;
	add.s64 	%rd6046, %rd6045, 6902733635092675308;
	add.s64 	%rd6047, %rd6046, %rd5910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4132,%dummy}, %rd6021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4133}, %rd6021;
	}
	shf.r.wrap.b32 	%r4134, %r4133, %r4132, 28;
	shf.r.wrap.b32 	%r4135, %r4132, %r4133, 28;
	mov.b64 	%rd6048, {%r4135, %r4134};
	shf.l.wrap.b32 	%r4136, %r4132, %r4133, 30;
	shf.l.wrap.b32 	%r4137, %r4133, %r4132, 30;
	mov.b64 	%rd6049, {%r4137, %r4136};
	xor.b64  	%rd6050, %rd6048, %rd6049;
	shf.l.wrap.b32 	%r4138, %r4132, %r4133, 25;
	shf.l.wrap.b32 	%r4139, %r4133, %r4132, 25;
	mov.b64 	%rd6051, {%r4139, %r4138};
	xor.b64  	%rd6052, %rd6050, %rd6051;
	and.b64  	%rd6053, %rd6021, %rd5984;
	or.b64  	%rd6054, %rd6021, %rd5984;
	and.b64  	%rd6055, %rd6054, %rd5947;
	or.b64  	%rd6056, %rd6055, %rd6053;
	add.s64 	%rd6057, %rd6056, %rd6052;
	add.s64 	%rd6058, %rd6057, %rd6046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4140,%dummy}, %rd5997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4141}, %rd5997;
	}
	shf.r.wrap.b32 	%r4142, %r4141, %r4140, 19;
	shf.r.wrap.b32 	%r4143, %r4140, %r4141, 19;
	mov.b64 	%rd6059, {%r4143, %r4142};
	shf.l.wrap.b32 	%r4144, %r4140, %r4141, 3;
	shf.l.wrap.b32 	%r4145, %r4141, %r4140, 3;
	mov.b64 	%rd6060, {%r4145, %r4144};
	xor.b64  	%rd6061, %rd6059, %rd6060;
	shr.u64 	%rd6062, %rd5997, 6;
	xor.b64  	%rd6063, %rd6061, %rd6062;
	shf.r.wrap.b32 	%r4146, %r3803, %r3802, 1;
	shf.r.wrap.b32 	%r4147, %r3802, %r3803, 1;
	mov.b64 	%rd6064, {%r4147, %r4146};
	shf.r.wrap.b32 	%r4148, %r3803, %r3802, 8;
	shf.r.wrap.b32 	%r4149, %r3802, %r3803, 8;
	mov.b64 	%rd6065, {%r4149, %r4148};
	xor.b64  	%rd6066, %rd6064, %rd6065;
	shr.u64 	%rd6067, %rd5516, 7;
	xor.b64  	%rd6068, %rd6066, %rd6067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4150,%dummy}, %rd6047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4151}, %rd6047;
	}
	shf.r.wrap.b32 	%r4152, %r4151, %r4150, 14;
	shf.r.wrap.b32 	%r4153, %r4150, %r4151, 14;
	mov.b64 	%rd6069, {%r4153, %r4152};
	shf.r.wrap.b32 	%r4154, %r4151, %r4150, 18;
	shf.r.wrap.b32 	%r4155, %r4150, %r4151, 18;
	mov.b64 	%rd6070, {%r4155, %r4154};
	xor.b64  	%rd6071, %rd6069, %rd6070;
	shf.l.wrap.b32 	%r4156, %r4150, %r4151, 23;
	shf.l.wrap.b32 	%r4157, %r4151, %r4150, 23;
	mov.b64 	%rd6072, {%r4157, %r4156};
	xor.b64  	%rd6073, %rd6071, %rd6072;
	xor.b64  	%rd6074, %rd6010, %rd5973;
	and.b64  	%rd6075, %rd6047, %rd6074;
	xor.b64  	%rd6076, %rd6075, %rd5973;
	add.s64 	%rd6077, %rd5479, %rd6068;
	add.s64 	%rd6078, %rd6077, %rd5812;
	add.s64 	%rd6079, %rd6078, %rd6063;
	add.s64 	%rd6080, %rd6079, %rd5936;
	add.s64 	%rd6081, %rd6080, %rd6076;
	add.s64 	%rd6082, %rd6081, %rd6073;
	add.s64 	%rd6083, %rd6082, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4158,%dummy}, %rd6058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4159}, %rd6058;
	}
	shf.r.wrap.b32 	%r4160, %r4159, %r4158, 28;
	shf.r.wrap.b32 	%r4161, %r4158, %r4159, 28;
	mov.b64 	%rd6084, {%r4161, %r4160};
	shf.l.wrap.b32 	%r4162, %r4158, %r4159, 30;
	shf.l.wrap.b32 	%r4163, %r4159, %r4158, 30;
	mov.b64 	%rd6085, {%r4163, %r4162};
	xor.b64  	%rd6086, %rd6084, %rd6085;
	shf.l.wrap.b32 	%r4164, %r4158, %r4159, 25;
	shf.l.wrap.b32 	%r4165, %r4159, %r4158, 25;
	mov.b64 	%rd6087, {%r4165, %r4164};
	xor.b64  	%rd6088, %rd6086, %rd6087;
	and.b64  	%rd6089, %rd6058, %rd6021;
	or.b64  	%rd6090, %rd6058, %rd6021;
	and.b64  	%rd6091, %rd6090, %rd5984;
	or.b64  	%rd6092, %rd6091, %rd6089;
	add.s64 	%rd6093, %rd6088, %rd3354;
	add.s64 	%rd6094, %rd6093, %rd6092;
	add.s64 	%rd6095, %rd6094, %rd6083;
	st.local.u64 	[%rd3+8], %rd6095;
	add.s64 	%rd6096, %rd6058, %rd3360;
	st.local.u64 	[%rd3+16], %rd6096;
	add.s64 	%rd6097, %rd6021, %rd3363;
	st.local.u64 	[%rd3+24], %rd6097;
	add.s64 	%rd6098, %rd5984, %rd3352;
	st.local.u64 	[%rd3+32], %rd6098;
	add.s64 	%rd6099, %rd5947, %rd3338;
	add.s64 	%rd6100, %rd6099, %rd6083;
	st.local.u64 	[%rd3+40], %rd6100;
	add.s64 	%rd6101, %rd6047, %rd3346;
	st.local.u64 	[%rd3+48], %rd6101;
	add.s64 	%rd6102, %rd6010, %rd3345;
	st.local.u64 	[%rd3+56], %rd6102;
	add.s64 	%rd6103, %rd5973, %rd3336;
	st.local.u64 	[%rd3+64], %rd6103;
	add.s64 	%rd12045, %rd12045, 128;
	add.s64 	%rd12027, %rd12027, 128;
	add.s32 	%r8268, %r8268, -128;
	setp.gt.u32 	%p24, %r8268, 127;
	@%p24 bra 	$L__BB0_24;

$L__BB0_28:
	setp.eq.s32 	%p25, %r8268, 0;
	@%p25 bra 	$L__BB0_34;

	cvt.u64.u32 	%rd6104, %r8265;
	add.s64 	%rd6105, %rd3, %rd6104;
	add.s64 	%rd12050, %rd6105, 72;
	and.b32  	%r8270, %r8268, 3;
	setp.eq.s32 	%p26, %r8270, 0;
	mov.u32 	%r8271, %r8268;
	@%p26 bra 	$L__BB0_32;

	mov.u64 	%rd12046, %rd12050;
	mov.u64 	%rd12047, %rd12045;
	mov.u32 	%r8271, %r8268;

$L__BB0_31:
	.pragma "nounroll";
	add.s32 	%r8271, %r8271, -1;
	add.s64 	%rd12045, %rd12047, 1;
	ld.local.u8 	%rs23, [%rd12047];
	add.s64 	%rd12050, %rd12046, 1;
	st.local.u8 	[%rd12046], %rs23;
	add.s32 	%r8270, %r8270, -1;
	setp.ne.s32 	%p27, %r8270, 0;
	mov.u64 	%rd12046, %rd12050;
	mov.u64 	%rd12047, %rd12045;
	@%p27 bra 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r4166, %r8268, -1;
	setp.lt.u32 	%p28, %r4166, 3;
	@%p28 bra 	$L__BB0_34;

$L__BB0_33:
	ld.local.u8 	%rs24, [%rd12045];
	st.local.u8 	[%rd12050], %rs24;
	ld.local.u8 	%rs25, [%rd12045+1];
	st.local.u8 	[%rd12050+1], %rs25;
	ld.local.u8 	%rs26, [%rd12045+2];
	st.local.u8 	[%rd12050+2], %rs26;
	add.s64 	%rd117, %rd12045, 4;
	ld.local.u8 	%rs27, [%rd12045+3];
	add.s64 	%rd118, %rd12050, 4;
	st.local.u8 	[%rd12050+3], %rs27;
	add.s32 	%r8271, %r8271, -4;
	setp.ne.s32 	%p29, %r8271, 0;
	mov.u64 	%rd12050, %rd118;
	mov.u64 	%rd12045, %rd117;
	@%p29 bra 	$L__BB0_33;

$L__BB0_34:
	add.u64 	%rd12078, %SPL, 0;
	add.u64 	%rd12060, %SP, 0;
	ld.local.u32 	%r4168, [%rd3];
	and.b32  	%r8277, %r4168, 127;
	mov.u32 	%r4169, 128;
	sub.s32 	%r48, %r4169, %r8277;
	add.s32 	%r4170, %r4168, 16;
	mov.u32 	%r8280, 16;
	st.local.u32 	[%rd3], %r4170;
	setp.eq.s32 	%p30, %r8277, 0;
	setp.gt.u32 	%p31, %r48, 16;
	or.pred  	%p32, %p30, %p31;
	@%p32 bra 	$L__BB0_42;

	setp.eq.s32 	%p33, %r48, 0;
	@%p33 bra 	$L__BB0_41;

	add.u64 	%rd12057, %SPL, 0;
	cvt.u64.u32 	%rd6106, %r8277;
	add.s64 	%rd6107, %rd3, %rd6106;
	add.s64 	%rd12056, %rd6107, 72;
	and.b32  	%r8274, %r48, 3;
	setp.eq.s32 	%p34, %r8274, 0;
	mov.u32 	%r8275, %r48;
	@%p34 bra 	$L__BB0_39;

	add.u64 	%rd12053, %SPL, 0;
	mov.u64 	%rd12052, %rd12056;
	mov.u32 	%r8275, %r48;

$L__BB0_38:
	.pragma "nounroll";
	add.s32 	%r8275, %r8275, -1;
	add.s64 	%rd12057, %rd12053, 1;
	ld.local.u8 	%rs28, [%rd12053];
	add.s64 	%rd12056, %rd12052, 1;
	st.local.u8 	[%rd12052], %rs28;
	add.s32 	%r8274, %r8274, -1;
	setp.ne.s32 	%p35, %r8274, 0;
	mov.u64 	%rd12052, %rd12056;
	mov.u64 	%rd12053, %rd12057;
	@%p35 bra 	$L__BB0_38;

$L__BB0_39:
	xor.b32  	%r4171, %r8277, 127;
	setp.lt.u32 	%p36, %r4171, 3;
	@%p36 bra 	$L__BB0_41;

$L__BB0_40:
	ld.local.u8 	%rs29, [%rd12057];
	st.local.u8 	[%rd12056], %rs29;
	ld.local.u8 	%rs30, [%rd12057+1];
	st.local.u8 	[%rd12056+1], %rs30;
	ld.local.u8 	%rs31, [%rd12057+2];
	st.local.u8 	[%rd12056+2], %rs31;
	add.s64 	%rd132, %rd12057, 4;
	ld.local.u8 	%rs32, [%rd12057+3];
	add.s64 	%rd133, %rd12056, 4;
	st.local.u8 	[%rd12056+3], %rs32;
	add.s32 	%r8275, %r8275, -4;
	setp.ne.s32 	%p37, %r8275, 0;
	mov.u64 	%rd12056, %rd133;
	mov.u64 	%rd12057, %rd132;
	@%p37 bra 	$L__BB0_40;

$L__BB0_41:
	add.u64 	%rd12004, %SPL, 0;
	ld.local.u64 	%rd6108, [%rd3+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4173, %temp}, %rd6108;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4174}, %rd6108;
	}
	mov.u32 	%r4175, 291;
	mov.u32 	%r8277, 0;
	prmt.b32 	%r4176, %r4173, %r8277, %r4175;
	prmt.b32 	%r4177, %r4174, %r8277, %r4175;
	mov.b64 	%rd6109, {%r4177, %r4176};
	ld.local.u64 	%rd6110, [%rd3+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4178, %temp}, %rd6110;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4179}, %rd6110;
	}
	prmt.b32 	%r4180, %r4178, %r8277, %r4175;
	prmt.b32 	%r4181, %r4179, %r8277, %r4175;
	mov.b64 	%rd6111, {%r4181, %r4180};
	ld.local.u64 	%rd6112, [%rd3+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4182, %temp}, %rd6112;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4183}, %rd6112;
	}
	prmt.b32 	%r4184, %r4182, %r8277, %r4175;
	prmt.b32 	%r4185, %r4183, %r8277, %r4175;
	mov.b64 	%rd6113, {%r4185, %r4184};
	ld.local.u64 	%rd6114, [%rd3+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4186, %temp}, %rd6114;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4187}, %rd6114;
	}
	prmt.b32 	%r4188, %r4186, %r8277, %r4175;
	prmt.b32 	%r4189, %r4187, %r8277, %r4175;
	mov.b64 	%rd6115, {%r4189, %r4188};
	ld.local.u64 	%rd6116, [%rd3+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4190, %temp}, %rd6116;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4191}, %rd6116;
	}
	prmt.b32 	%r4192, %r4190, %r8277, %r4175;
	prmt.b32 	%r4193, %r4191, %r8277, %r4175;
	mov.b64 	%rd6117, {%r4193, %r4192};
	ld.local.u64 	%rd6118, [%rd3+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4194, %temp}, %rd6118;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4195}, %rd6118;
	}
	prmt.b32 	%r4196, %r4194, %r8277, %r4175;
	prmt.b32 	%r4197, %r4195, %r8277, %r4175;
	mov.b64 	%rd6119, {%r4197, %r4196};
	ld.local.u64 	%rd6120, [%rd3+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4198, %temp}, %rd6120;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4199}, %rd6120;
	}
	prmt.b32 	%r4200, %r4198, %r8277, %r4175;
	prmt.b32 	%r4201, %r4199, %r8277, %r4175;
	mov.b64 	%rd6121, {%r4201, %r4200};
	ld.local.u64 	%rd6122, [%rd3+128];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4202, %temp}, %rd6122;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4203}, %rd6122;
	}
	prmt.b32 	%r4204, %r4202, %r8277, %r4175;
	prmt.b32 	%r4205, %r4203, %r8277, %r4175;
	mov.b64 	%rd6123, {%r4205, %r4204};
	ld.local.u64 	%rd6124, [%rd3+136];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4206, %temp}, %rd6124;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4207}, %rd6124;
	}
	prmt.b32 	%r4208, %r4206, %r8277, %r4175;
	prmt.b32 	%r4209, %r4207, %r8277, %r4175;
	mov.b64 	%rd6125, {%r4209, %r4208};
	ld.local.u64 	%rd6126, [%rd3+144];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4210, %temp}, %rd6126;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4211}, %rd6126;
	}
	prmt.b32 	%r4212, %r4210, %r8277, %r4175;
	prmt.b32 	%r4213, %r4211, %r8277, %r4175;
	mov.b64 	%rd6127, {%r4213, %r4212};
	ld.local.u64 	%rd6128, [%rd3+152];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4214, %temp}, %rd6128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4215}, %rd6128;
	}
	prmt.b32 	%r4216, %r4214, %r8277, %r4175;
	prmt.b32 	%r4217, %r4215, %r8277, %r4175;
	mov.b64 	%rd6129, {%r4217, %r4216};
	ld.local.u64 	%rd6130, [%rd3+160];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4218, %temp}, %rd6130;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4219}, %rd6130;
	}
	prmt.b32 	%r4220, %r4218, %r8277, %r4175;
	prmt.b32 	%r4221, %r4219, %r8277, %r4175;
	mov.b64 	%rd6131, {%r4221, %r4220};
	ld.local.u64 	%rd6132, [%rd3+168];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4222, %temp}, %rd6132;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4223}, %rd6132;
	}
	prmt.b32 	%r4224, %r4222, %r8277, %r4175;
	prmt.b32 	%r4225, %r4223, %r8277, %r4175;
	mov.b64 	%rd6133, {%r4225, %r4224};
	ld.local.u64 	%rd6134, [%rd3+176];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4226, %temp}, %rd6134;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4227}, %rd6134;
	}
	prmt.b32 	%r4228, %r4226, %r8277, %r4175;
	prmt.b32 	%r4229, %r4227, %r8277, %r4175;
	mov.b64 	%rd6135, {%r4229, %r4228};
	ld.local.u64 	%rd6136, [%rd3+184];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4230, %temp}, %rd6136;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4231}, %rd6136;
	}
	prmt.b32 	%r4232, %r4230, %r8277, %r4175;
	prmt.b32 	%r4233, %r4231, %r8277, %r4175;
	mov.b64 	%rd6137, {%r4233, %r4232};
	ld.local.u64 	%rd6138, [%rd3+192];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4234, %temp}, %rd6138;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4235}, %rd6138;
	}
	prmt.b32 	%r4236, %r4234, %r8277, %r4175;
	prmt.b32 	%r4237, %r4235, %r8277, %r4175;
	mov.b64 	%rd6139, {%r4237, %r4236};
	ld.local.u64 	%rd6140, [%rd3+64];
	add.s64 	%rd6141, %rd6109, %rd6140;
	ld.local.u64 	%rd6142, [%rd3+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4238,%dummy}, %rd6142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4239}, %rd6142;
	}
	shf.r.wrap.b32 	%r4240, %r4239, %r4238, 14;
	shf.r.wrap.b32 	%r4241, %r4238, %r4239, 14;
	mov.b64 	%rd6143, {%r4241, %r4240};
	shf.r.wrap.b32 	%r4242, %r4239, %r4238, 18;
	shf.r.wrap.b32 	%r4243, %r4238, %r4239, 18;
	mov.b64 	%rd6144, {%r4243, %r4242};
	xor.b64  	%rd6145, %rd6143, %rd6144;
	shf.l.wrap.b32 	%r4244, %r4238, %r4239, 23;
	shf.l.wrap.b32 	%r4245, %r4239, %r4238, 23;
	mov.b64 	%rd6146, {%r4245, %r4244};
	xor.b64  	%rd6147, %rd6145, %rd6146;
	add.s64 	%rd6148, %rd6141, %rd6147;
	ld.local.u64 	%rd6149, [%rd3+56];
	ld.local.u64 	%rd6150, [%rd3+48];
	xor.b64  	%rd6151, %rd6149, %rd6150;
	and.b64  	%rd6152, %rd6151, %rd6142;
	xor.b64  	%rd6153, %rd6152, %rd6149;
	add.s64 	%rd6154, %rd6148, %rd6153;
	add.s64 	%rd6155, %rd6154, 4794697086780616226;
	ld.local.u64 	%rd6156, [%rd3+32];
	add.s64 	%rd6157, %rd6155, %rd6156;
	ld.local.u64 	%rd6158, [%rd3+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4246,%dummy}, %rd6158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4247}, %rd6158;
	}
	shf.r.wrap.b32 	%r4248, %r4247, %r4246, 28;
	shf.r.wrap.b32 	%r4249, %r4246, %r4247, 28;
	mov.b64 	%rd6159, {%r4249, %r4248};
	shf.l.wrap.b32 	%r4250, %r4246, %r4247, 30;
	shf.l.wrap.b32 	%r4251, %r4247, %r4246, 30;
	mov.b64 	%rd6160, {%r4251, %r4250};
	xor.b64  	%rd6161, %rd6159, %rd6160;
	shf.l.wrap.b32 	%r4252, %r4246, %r4247, 25;
	shf.l.wrap.b32 	%r4253, %r4247, %r4246, 25;
	mov.b64 	%rd6162, {%r4253, %r4252};
	xor.b64  	%rd6163, %rd6161, %rd6162;
	ld.local.u64 	%rd6164, [%rd3+16];
	and.b64  	%rd6165, %rd6164, %rd6158;
	or.b64  	%rd6166, %rd6164, %rd6158;
	ld.local.u64 	%rd6167, [%rd3+24];
	and.b64  	%rd6168, %rd6167, %rd6166;
	or.b64  	%rd6169, %rd6168, %rd6165;
	add.s64 	%rd6170, %rd6169, %rd6163;
	add.s64 	%rd6171, %rd6170, %rd6155;
	add.s64 	%rd6172, %rd6111, %rd6149;
	xor.b64  	%rd6173, %rd6150, %rd6142;
	and.b64  	%rd6174, %rd6157, %rd6173;
	xor.b64  	%rd6175, %rd6174, %rd6150;
	add.s64 	%rd6176, %rd6172, %rd6175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4254,%dummy}, %rd6157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4255}, %rd6157;
	}
	shf.r.wrap.b32 	%r4256, %r4255, %r4254, 14;
	shf.r.wrap.b32 	%r4257, %r4254, %r4255, 14;
	mov.b64 	%rd6177, {%r4257, %r4256};
	shf.r.wrap.b32 	%r4258, %r4255, %r4254, 18;
	shf.r.wrap.b32 	%r4259, %r4254, %r4255, 18;
	mov.b64 	%rd6178, {%r4259, %r4258};
	xor.b64  	%rd6179, %rd6177, %rd6178;
	shf.l.wrap.b32 	%r4260, %r4254, %r4255, 23;
	shf.l.wrap.b32 	%r4261, %r4255, %r4254, 23;
	mov.b64 	%rd6180, {%r4261, %r4260};
	xor.b64  	%rd6181, %rd6179, %rd6180;
	add.s64 	%rd6182, %rd6176, %rd6181;
	add.s64 	%rd6183, %rd6182, 8158064640168781261;
	add.s64 	%rd6184, %rd6183, %rd6167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4262,%dummy}, %rd6171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4263}, %rd6171;
	}
	shf.r.wrap.b32 	%r4264, %r4263, %r4262, 28;
	shf.r.wrap.b32 	%r4265, %r4262, %r4263, 28;
	mov.b64 	%rd6185, {%r4265, %r4264};
	shf.l.wrap.b32 	%r4266, %r4262, %r4263, 30;
	shf.l.wrap.b32 	%r4267, %r4263, %r4262, 30;
	mov.b64 	%rd6186, {%r4267, %r4266};
	xor.b64  	%rd6187, %rd6185, %rd6186;
	shf.l.wrap.b32 	%r4268, %r4262, %r4263, 25;
	shf.l.wrap.b32 	%r4269, %r4263, %r4262, 25;
	mov.b64 	%rd6188, {%r4269, %r4268};
	xor.b64  	%rd6189, %rd6187, %rd6188;
	and.b64  	%rd6190, %rd6171, %rd6158;
	or.b64  	%rd6191, %rd6171, %rd6158;
	and.b64  	%rd6192, %rd6191, %rd6164;
	or.b64  	%rd6193, %rd6192, %rd6190;
	add.s64 	%rd6194, %rd6193, %rd6189;
	add.s64 	%rd6195, %rd6194, %rd6183;
	add.s64 	%rd6196, %rd6113, %rd6150;
	xor.b64  	%rd6197, %rd6157, %rd6142;
	and.b64  	%rd6198, %rd6184, %rd6197;
	xor.b64  	%rd6199, %rd6198, %rd6142;
	add.s64 	%rd6200, %rd6196, %rd6199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4270,%dummy}, %rd6184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4271}, %rd6184;
	}
	shf.r.wrap.b32 	%r4272, %r4271, %r4270, 14;
	shf.r.wrap.b32 	%r4273, %r4270, %r4271, 14;
	mov.b64 	%rd6201, {%r4273, %r4272};
	shf.r.wrap.b32 	%r4274, %r4271, %r4270, 18;
	shf.r.wrap.b32 	%r4275, %r4270, %r4271, 18;
	mov.b64 	%rd6202, {%r4275, %r4274};
	xor.b64  	%rd6203, %rd6201, %rd6202;
	shf.l.wrap.b32 	%r4276, %r4270, %r4271, 23;
	shf.l.wrap.b32 	%r4277, %r4271, %r4270, 23;
	mov.b64 	%rd6204, {%r4277, %r4276};
	xor.b64  	%rd6205, %rd6203, %rd6204;
	add.s64 	%rd6206, %rd6200, %rd6205;
	add.s64 	%rd6207, %rd6206, -5349999486874862801;
	add.s64 	%rd6208, %rd6207, %rd6164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4278,%dummy}, %rd6195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4279}, %rd6195;
	}
	shf.r.wrap.b32 	%r4280, %r4279, %r4278, 28;
	shf.r.wrap.b32 	%r4281, %r4278, %r4279, 28;
	mov.b64 	%rd6209, {%r4281, %r4280};
	shf.l.wrap.b32 	%r4282, %r4278, %r4279, 30;
	shf.l.wrap.b32 	%r4283, %r4279, %r4278, 30;
	mov.b64 	%rd6210, {%r4283, %r4282};
	xor.b64  	%rd6211, %rd6209, %rd6210;
	shf.l.wrap.b32 	%r4284, %r4278, %r4279, 25;
	shf.l.wrap.b32 	%r4285, %r4279, %r4278, 25;
	mov.b64 	%rd6212, {%r4285, %r4284};
	xor.b64  	%rd6213, %rd6211, %rd6212;
	and.b64  	%rd6214, %rd6195, %rd6171;
	or.b64  	%rd6215, %rd6195, %rd6171;
	and.b64  	%rd6216, %rd6215, %rd6158;
	or.b64  	%rd6217, %rd6216, %rd6214;
	add.s64 	%rd6218, %rd6217, %rd6213;
	add.s64 	%rd6219, %rd6218, %rd6207;
	add.s64 	%rd6220, %rd6115, %rd6142;
	xor.b64  	%rd6221, %rd6184, %rd6157;
	and.b64  	%rd6222, %rd6208, %rd6221;
	xor.b64  	%rd6223, %rd6222, %rd6157;
	add.s64 	%rd6224, %rd6220, %rd6223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4286,%dummy}, %rd6208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4287}, %rd6208;
	}
	shf.r.wrap.b32 	%r4288, %r4287, %r4286, 14;
	shf.r.wrap.b32 	%r4289, %r4286, %r4287, 14;
	mov.b64 	%rd6225, {%r4289, %r4288};
	shf.r.wrap.b32 	%r4290, %r4287, %r4286, 18;
	shf.r.wrap.b32 	%r4291, %r4286, %r4287, 18;
	mov.b64 	%rd6226, {%r4291, %r4290};
	xor.b64  	%rd6227, %rd6225, %rd6226;
	shf.l.wrap.b32 	%r4292, %r4286, %r4287, 23;
	shf.l.wrap.b32 	%r4293, %r4287, %r4286, 23;
	mov.b64 	%rd6228, {%r4293, %r4292};
	xor.b64  	%rd6229, %rd6227, %rd6228;
	add.s64 	%rd6230, %rd6224, %rd6229;
	add.s64 	%rd6231, %rd6230, -1606136188198331460;
	add.s64 	%rd6232, %rd6231, %rd6158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4294,%dummy}, %rd6219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4295}, %rd6219;
	}
	shf.r.wrap.b32 	%r4296, %r4295, %r4294, 28;
	shf.r.wrap.b32 	%r4297, %r4294, %r4295, 28;
	mov.b64 	%rd6233, {%r4297, %r4296};
	shf.l.wrap.b32 	%r4298, %r4294, %r4295, 30;
	shf.l.wrap.b32 	%r4299, %r4295, %r4294, 30;
	mov.b64 	%rd6234, {%r4299, %r4298};
	xor.b64  	%rd6235, %rd6233, %rd6234;
	shf.l.wrap.b32 	%r4300, %r4294, %r4295, 25;
	shf.l.wrap.b32 	%r4301, %r4295, %r4294, 25;
	mov.b64 	%rd6236, {%r4301, %r4300};
	xor.b64  	%rd6237, %rd6235, %rd6236;
	and.b64  	%rd6238, %rd6219, %rd6195;
	or.b64  	%rd6239, %rd6219, %rd6195;
	and.b64  	%rd6240, %rd6239, %rd6171;
	or.b64  	%rd6241, %rd6240, %rd6238;
	add.s64 	%rd6242, %rd6241, %rd6237;
	add.s64 	%rd6243, %rd6242, %rd6231;
	add.s64 	%rd6244, %rd6117, %rd6157;
	xor.b64  	%rd6245, %rd6208, %rd6184;
	and.b64  	%rd6246, %rd6232, %rd6245;
	xor.b64  	%rd6247, %rd6246, %rd6184;
	add.s64 	%rd6248, %rd6244, %rd6247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4302,%dummy}, %rd6232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4303}, %rd6232;
	}
	shf.r.wrap.b32 	%r4304, %r4303, %r4302, 14;
	shf.r.wrap.b32 	%r4305, %r4302, %r4303, 14;
	mov.b64 	%rd6249, {%r4305, %r4304};
	shf.r.wrap.b32 	%r4306, %r4303, %r4302, 18;
	shf.r.wrap.b32 	%r4307, %r4302, %r4303, 18;
	mov.b64 	%rd6250, {%r4307, %r4306};
	xor.b64  	%rd6251, %rd6249, %rd6250;
	shf.l.wrap.b32 	%r4308, %r4302, %r4303, 23;
	shf.l.wrap.b32 	%r4309, %r4303, %r4302, 23;
	mov.b64 	%rd6252, {%r4309, %r4308};
	xor.b64  	%rd6253, %rd6251, %rd6252;
	add.s64 	%rd6254, %rd6248, %rd6253;
	add.s64 	%rd6255, %rd6254, 4131703408338449720;
	add.s64 	%rd6256, %rd6255, %rd6171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4310,%dummy}, %rd6243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4311}, %rd6243;
	}
	shf.r.wrap.b32 	%r4312, %r4311, %r4310, 28;
	shf.r.wrap.b32 	%r4313, %r4310, %r4311, 28;
	mov.b64 	%rd6257, {%r4313, %r4312};
	shf.l.wrap.b32 	%r4314, %r4310, %r4311, 30;
	shf.l.wrap.b32 	%r4315, %r4311, %r4310, 30;
	mov.b64 	%rd6258, {%r4315, %r4314};
	xor.b64  	%rd6259, %rd6257, %rd6258;
	shf.l.wrap.b32 	%r4316, %r4310, %r4311, 25;
	shf.l.wrap.b32 	%r4317, %r4311, %r4310, 25;
	mov.b64 	%rd6260, {%r4317, %r4316};
	xor.b64  	%rd6261, %rd6259, %rd6260;
	and.b64  	%rd6262, %rd6243, %rd6219;
	or.b64  	%rd6263, %rd6243, %rd6219;
	and.b64  	%rd6264, %rd6263, %rd6195;
	or.b64  	%rd6265, %rd6264, %rd6262;
	add.s64 	%rd6266, %rd6265, %rd6261;
	add.s64 	%rd6267, %rd6266, %rd6255;
	add.s64 	%rd6268, %rd6119, %rd6184;
	xor.b64  	%rd6269, %rd6232, %rd6208;
	and.b64  	%rd6270, %rd6256, %rd6269;
	xor.b64  	%rd6271, %rd6270, %rd6208;
	add.s64 	%rd6272, %rd6268, %rd6271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4318,%dummy}, %rd6256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4319}, %rd6256;
	}
	shf.r.wrap.b32 	%r4320, %r4319, %r4318, 14;
	shf.r.wrap.b32 	%r4321, %r4318, %r4319, 14;
	mov.b64 	%rd6273, {%r4321, %r4320};
	shf.r.wrap.b32 	%r4322, %r4319, %r4318, 18;
	shf.r.wrap.b32 	%r4323, %r4318, %r4319, 18;
	mov.b64 	%rd6274, {%r4323, %r4322};
	xor.b64  	%rd6275, %rd6273, %rd6274;
	shf.l.wrap.b32 	%r4324, %r4318, %r4319, 23;
	shf.l.wrap.b32 	%r4325, %r4319, %r4318, 23;
	mov.b64 	%rd6276, {%r4325, %r4324};
	xor.b64  	%rd6277, %rd6275, %rd6276;
	add.s64 	%rd6278, %rd6272, %rd6277;
	add.s64 	%rd6279, %rd6278, 6480981068601479193;
	add.s64 	%rd6280, %rd6279, %rd6195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4326,%dummy}, %rd6267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4327}, %rd6267;
	}
	shf.r.wrap.b32 	%r4328, %r4327, %r4326, 28;
	shf.r.wrap.b32 	%r4329, %r4326, %r4327, 28;
	mov.b64 	%rd6281, {%r4329, %r4328};
	shf.l.wrap.b32 	%r4330, %r4326, %r4327, 30;
	shf.l.wrap.b32 	%r4331, %r4327, %r4326, 30;
	mov.b64 	%rd6282, {%r4331, %r4330};
	xor.b64  	%rd6283, %rd6281, %rd6282;
	shf.l.wrap.b32 	%r4332, %r4326, %r4327, 25;
	shf.l.wrap.b32 	%r4333, %r4327, %r4326, 25;
	mov.b64 	%rd6284, {%r4333, %r4332};
	xor.b64  	%rd6285, %rd6283, %rd6284;
	and.b64  	%rd6286, %rd6267, %rd6243;
	or.b64  	%rd6287, %rd6267, %rd6243;
	and.b64  	%rd6288, %rd6287, %rd6219;
	or.b64  	%rd6289, %rd6288, %rd6286;
	add.s64 	%rd6290, %rd6289, %rd6285;
	add.s64 	%rd6291, %rd6290, %rd6279;
	add.s64 	%rd6292, %rd6121, %rd6208;
	xor.b64  	%rd6293, %rd6256, %rd6232;
	and.b64  	%rd6294, %rd6280, %rd6293;
	xor.b64  	%rd6295, %rd6294, %rd6232;
	add.s64 	%rd6296, %rd6292, %rd6295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4334,%dummy}, %rd6280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4335}, %rd6280;
	}
	shf.r.wrap.b32 	%r4336, %r4335, %r4334, 14;
	shf.r.wrap.b32 	%r4337, %r4334, %r4335, 14;
	mov.b64 	%rd6297, {%r4337, %r4336};
	shf.r.wrap.b32 	%r4338, %r4335, %r4334, 18;
	shf.r.wrap.b32 	%r4339, %r4334, %r4335, 18;
	mov.b64 	%rd6298, {%r4339, %r4338};
	xor.b64  	%rd6299, %rd6297, %rd6298;
	shf.l.wrap.b32 	%r4340, %r4334, %r4335, 23;
	shf.l.wrap.b32 	%r4341, %r4335, %r4334, 23;
	mov.b64 	%rd6300, {%r4341, %r4340};
	xor.b64  	%rd6301, %rd6299, %rd6300;
	add.s64 	%rd6302, %rd6296, %rd6301;
	add.s64 	%rd6303, %rd6302, -7908458776815382629;
	add.s64 	%rd6304, %rd6303, %rd6219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4342,%dummy}, %rd6291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4343}, %rd6291;
	}
	shf.r.wrap.b32 	%r4344, %r4343, %r4342, 28;
	shf.r.wrap.b32 	%r4345, %r4342, %r4343, 28;
	mov.b64 	%rd6305, {%r4345, %r4344};
	shf.l.wrap.b32 	%r4346, %r4342, %r4343, 30;
	shf.l.wrap.b32 	%r4347, %r4343, %r4342, 30;
	mov.b64 	%rd6306, {%r4347, %r4346};
	xor.b64  	%rd6307, %rd6305, %rd6306;
	shf.l.wrap.b32 	%r4348, %r4342, %r4343, 25;
	shf.l.wrap.b32 	%r4349, %r4343, %r4342, 25;
	mov.b64 	%rd6308, {%r4349, %r4348};
	xor.b64  	%rd6309, %rd6307, %rd6308;
	and.b64  	%rd6310, %rd6291, %rd6267;
	or.b64  	%rd6311, %rd6291, %rd6267;
	and.b64  	%rd6312, %rd6311, %rd6243;
	or.b64  	%rd6313, %rd6312, %rd6310;
	add.s64 	%rd6314, %rd6313, %rd6309;
	add.s64 	%rd6315, %rd6314, %rd6303;
	add.s64 	%rd6316, %rd6123, %rd6232;
	xor.b64  	%rd6317, %rd6280, %rd6256;
	and.b64  	%rd6318, %rd6304, %rd6317;
	xor.b64  	%rd6319, %rd6318, %rd6256;
	add.s64 	%rd6320, %rd6316, %rd6319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4350,%dummy}, %rd6304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4351}, %rd6304;
	}
	shf.r.wrap.b32 	%r4352, %r4351, %r4350, 14;
	shf.r.wrap.b32 	%r4353, %r4350, %r4351, 14;
	mov.b64 	%rd6321, {%r4353, %r4352};
	shf.r.wrap.b32 	%r4354, %r4351, %r4350, 18;
	shf.r.wrap.b32 	%r4355, %r4350, %r4351, 18;
	mov.b64 	%rd6322, {%r4355, %r4354};
	xor.b64  	%rd6323, %rd6321, %rd6322;
	shf.l.wrap.b32 	%r4356, %r4350, %r4351, 23;
	shf.l.wrap.b32 	%r4357, %r4351, %r4350, 23;
	mov.b64 	%rd6324, {%r4357, %r4356};
	xor.b64  	%rd6325, %rd6323, %rd6324;
	add.s64 	%rd6326, %rd6320, %rd6325;
	add.s64 	%rd6327, %rd6326, -6116909921290321640;
	add.s64 	%rd6328, %rd6327, %rd6243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4358,%dummy}, %rd6315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4359}, %rd6315;
	}
	shf.r.wrap.b32 	%r4360, %r4359, %r4358, 28;
	shf.r.wrap.b32 	%r4361, %r4358, %r4359, 28;
	mov.b64 	%rd6329, {%r4361, %r4360};
	shf.l.wrap.b32 	%r4362, %r4358, %r4359, 30;
	shf.l.wrap.b32 	%r4363, %r4359, %r4358, 30;
	mov.b64 	%rd6330, {%r4363, %r4362};
	xor.b64  	%rd6331, %rd6329, %rd6330;
	shf.l.wrap.b32 	%r4364, %r4358, %r4359, 25;
	shf.l.wrap.b32 	%r4365, %r4359, %r4358, 25;
	mov.b64 	%rd6332, {%r4365, %r4364};
	xor.b64  	%rd6333, %rd6331, %rd6332;
	and.b64  	%rd6334, %rd6315, %rd6291;
	or.b64  	%rd6335, %rd6315, %rd6291;
	and.b64  	%rd6336, %rd6335, %rd6267;
	or.b64  	%rd6337, %rd6336, %rd6334;
	add.s64 	%rd6338, %rd6337, %rd6333;
	add.s64 	%rd6339, %rd6338, %rd6327;
	add.s64 	%rd6340, %rd6125, %rd6256;
	xor.b64  	%rd6341, %rd6304, %rd6280;
	and.b64  	%rd6342, %rd6328, %rd6341;
	xor.b64  	%rd6343, %rd6342, %rd6280;
	add.s64 	%rd6344, %rd6340, %rd6343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4366,%dummy}, %rd6328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4367}, %rd6328;
	}
	shf.r.wrap.b32 	%r4368, %r4367, %r4366, 14;
	shf.r.wrap.b32 	%r4369, %r4366, %r4367, 14;
	mov.b64 	%rd6345, {%r4369, %r4368};
	shf.r.wrap.b32 	%r4370, %r4367, %r4366, 18;
	shf.r.wrap.b32 	%r4371, %r4366, %r4367, 18;
	mov.b64 	%rd6346, {%r4371, %r4370};
	xor.b64  	%rd6347, %rd6345, %rd6346;
	shf.l.wrap.b32 	%r4372, %r4366, %r4367, 23;
	shf.l.wrap.b32 	%r4373, %r4367, %r4366, 23;
	mov.b64 	%rd6348, {%r4373, %r4372};
	xor.b64  	%rd6349, %rd6347, %rd6348;
	add.s64 	%rd6350, %rd6344, %rd6349;
	add.s64 	%rd6351, %rd6350, -2880145864133508542;
	add.s64 	%rd6352, %rd6351, %rd6267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4374,%dummy}, %rd6339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4375}, %rd6339;
	}
	shf.r.wrap.b32 	%r4376, %r4375, %r4374, 28;
	shf.r.wrap.b32 	%r4377, %r4374, %r4375, 28;
	mov.b64 	%rd6353, {%r4377, %r4376};
	shf.l.wrap.b32 	%r4378, %r4374, %r4375, 30;
	shf.l.wrap.b32 	%r4379, %r4375, %r4374, 30;
	mov.b64 	%rd6354, {%r4379, %r4378};
	xor.b64  	%rd6355, %rd6353, %rd6354;
	shf.l.wrap.b32 	%r4380, %r4374, %r4375, 25;
	shf.l.wrap.b32 	%r4381, %r4375, %r4374, 25;
	mov.b64 	%rd6356, {%r4381, %r4380};
	xor.b64  	%rd6357, %rd6355, %rd6356;
	and.b64  	%rd6358, %rd6339, %rd6315;
	or.b64  	%rd6359, %rd6339, %rd6315;
	and.b64  	%rd6360, %rd6359, %rd6291;
	or.b64  	%rd6361, %rd6360, %rd6358;
	add.s64 	%rd6362, %rd6361, %rd6357;
	add.s64 	%rd6363, %rd6362, %rd6351;
	add.s64 	%rd6364, %rd6127, %rd6280;
	xor.b64  	%rd6365, %rd6328, %rd6304;
	and.b64  	%rd6366, %rd6352, %rd6365;
	xor.b64  	%rd6367, %rd6366, %rd6304;
	add.s64 	%rd6368, %rd6364, %rd6367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4382,%dummy}, %rd6352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4383}, %rd6352;
	}
	shf.r.wrap.b32 	%r4384, %r4383, %r4382, 14;
	shf.r.wrap.b32 	%r4385, %r4382, %r4383, 14;
	mov.b64 	%rd6369, {%r4385, %r4384};
	shf.r.wrap.b32 	%r4386, %r4383, %r4382, 18;
	shf.r.wrap.b32 	%r4387, %r4382, %r4383, 18;
	mov.b64 	%rd6370, {%r4387, %r4386};
	xor.b64  	%rd6371, %rd6369, %rd6370;
	shf.l.wrap.b32 	%r4388, %r4382, %r4383, 23;
	shf.l.wrap.b32 	%r4389, %r4383, %r4382, 23;
	mov.b64 	%rd6372, {%r4389, %r4388};
	xor.b64  	%rd6373, %rd6371, %rd6372;
	add.s64 	%rd6374, %rd6368, %rd6373;
	add.s64 	%rd6375, %rd6374, 1334009975649890238;
	add.s64 	%rd6376, %rd6375, %rd6291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4390,%dummy}, %rd6363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4391}, %rd6363;
	}
	shf.r.wrap.b32 	%r4392, %r4391, %r4390, 28;
	shf.r.wrap.b32 	%r4393, %r4390, %r4391, 28;
	mov.b64 	%rd6377, {%r4393, %r4392};
	shf.l.wrap.b32 	%r4394, %r4390, %r4391, 30;
	shf.l.wrap.b32 	%r4395, %r4391, %r4390, 30;
	mov.b64 	%rd6378, {%r4395, %r4394};
	xor.b64  	%rd6379, %rd6377, %rd6378;
	shf.l.wrap.b32 	%r4396, %r4390, %r4391, 25;
	shf.l.wrap.b32 	%r4397, %r4391, %r4390, 25;
	mov.b64 	%rd6380, {%r4397, %r4396};
	xor.b64  	%rd6381, %rd6379, %rd6380;
	and.b64  	%rd6382, %rd6363, %rd6339;
	or.b64  	%rd6383, %rd6363, %rd6339;
	and.b64  	%rd6384, %rd6383, %rd6315;
	or.b64  	%rd6385, %rd6384, %rd6382;
	add.s64 	%rd6386, %rd6385, %rd6381;
	add.s64 	%rd6387, %rd6386, %rd6375;
	add.s64 	%rd6388, %rd6129, %rd6304;
	xor.b64  	%rd6389, %rd6352, %rd6328;
	and.b64  	%rd6390, %rd6376, %rd6389;
	xor.b64  	%rd6391, %rd6390, %rd6328;
	add.s64 	%rd6392, %rd6388, %rd6391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4398,%dummy}, %rd6376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4399}, %rd6376;
	}
	shf.r.wrap.b32 	%r4400, %r4399, %r4398, 14;
	shf.r.wrap.b32 	%r4401, %r4398, %r4399, 14;
	mov.b64 	%rd6393, {%r4401, %r4400};
	shf.r.wrap.b32 	%r4402, %r4399, %r4398, 18;
	shf.r.wrap.b32 	%r4403, %r4398, %r4399, 18;
	mov.b64 	%rd6394, {%r4403, %r4402};
	xor.b64  	%rd6395, %rd6393, %rd6394;
	shf.l.wrap.b32 	%r4404, %r4398, %r4399, 23;
	shf.l.wrap.b32 	%r4405, %r4399, %r4398, 23;
	mov.b64 	%rd6396, {%r4405, %r4404};
	xor.b64  	%rd6397, %rd6395, %rd6396;
	add.s64 	%rd6398, %rd6392, %rd6397;
	add.s64 	%rd6399, %rd6398, 2608012711638119052;
	add.s64 	%rd6400, %rd6399, %rd6315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd6387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4407}, %rd6387;
	}
	shf.r.wrap.b32 	%r4408, %r4407, %r4406, 28;
	shf.r.wrap.b32 	%r4409, %r4406, %r4407, 28;
	mov.b64 	%rd6401, {%r4409, %r4408};
	shf.l.wrap.b32 	%r4410, %r4406, %r4407, 30;
	shf.l.wrap.b32 	%r4411, %r4407, %r4406, 30;
	mov.b64 	%rd6402, {%r4411, %r4410};
	xor.b64  	%rd6403, %rd6401, %rd6402;
	shf.l.wrap.b32 	%r4412, %r4406, %r4407, 25;
	shf.l.wrap.b32 	%r4413, %r4407, %r4406, 25;
	mov.b64 	%rd6404, {%r4413, %r4412};
	xor.b64  	%rd6405, %rd6403, %rd6404;
	and.b64  	%rd6406, %rd6387, %rd6363;
	or.b64  	%rd6407, %rd6387, %rd6363;
	and.b64  	%rd6408, %rd6407, %rd6339;
	or.b64  	%rd6409, %rd6408, %rd6406;
	add.s64 	%rd6410, %rd6409, %rd6405;
	add.s64 	%rd6411, %rd6410, %rd6399;
	add.s64 	%rd6412, %rd6131, %rd6328;
	xor.b64  	%rd6413, %rd6376, %rd6352;
	and.b64  	%rd6414, %rd6400, %rd6413;
	xor.b64  	%rd6415, %rd6414, %rd6352;
	add.s64 	%rd6416, %rd6412, %rd6415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd6400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4415}, %rd6400;
	}
	shf.r.wrap.b32 	%r4416, %r4415, %r4414, 14;
	shf.r.wrap.b32 	%r4417, %r4414, %r4415, 14;
	mov.b64 	%rd6417, {%r4417, %r4416};
	shf.r.wrap.b32 	%r4418, %r4415, %r4414, 18;
	shf.r.wrap.b32 	%r4419, %r4414, %r4415, 18;
	mov.b64 	%rd6418, {%r4419, %r4418};
	xor.b64  	%rd6419, %rd6417, %rd6418;
	shf.l.wrap.b32 	%r4420, %r4414, %r4415, 23;
	shf.l.wrap.b32 	%r4421, %r4415, %r4414, 23;
	mov.b64 	%rd6420, {%r4421, %r4420};
	xor.b64  	%rd6421, %rd6419, %rd6420;
	add.s64 	%rd6422, %rd6416, %rd6421;
	add.s64 	%rd6423, %rd6422, 6128411473006802146;
	add.s64 	%rd6424, %rd6423, %rd6339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4422,%dummy}, %rd6411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4423}, %rd6411;
	}
	shf.r.wrap.b32 	%r4424, %r4423, %r4422, 28;
	shf.r.wrap.b32 	%r4425, %r4422, %r4423, 28;
	mov.b64 	%rd6425, {%r4425, %r4424};
	shf.l.wrap.b32 	%r4426, %r4422, %r4423, 30;
	shf.l.wrap.b32 	%r4427, %r4423, %r4422, 30;
	mov.b64 	%rd6426, {%r4427, %r4426};
	xor.b64  	%rd6427, %rd6425, %rd6426;
	shf.l.wrap.b32 	%r4428, %r4422, %r4423, 25;
	shf.l.wrap.b32 	%r4429, %r4423, %r4422, 25;
	mov.b64 	%rd6428, {%r4429, %r4428};
	xor.b64  	%rd6429, %rd6427, %rd6428;
	and.b64  	%rd6430, %rd6411, %rd6387;
	or.b64  	%rd6431, %rd6411, %rd6387;
	and.b64  	%rd6432, %rd6431, %rd6363;
	or.b64  	%rd6433, %rd6432, %rd6430;
	add.s64 	%rd6434, %rd6433, %rd6429;
	add.s64 	%rd6435, %rd6434, %rd6423;
	add.s64 	%rd6436, %rd6133, %rd6352;
	xor.b64  	%rd6437, %rd6400, %rd6376;
	and.b64  	%rd6438, %rd6424, %rd6437;
	xor.b64  	%rd6439, %rd6438, %rd6376;
	add.s64 	%rd6440, %rd6436, %rd6439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4430,%dummy}, %rd6424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4431}, %rd6424;
	}
	shf.r.wrap.b32 	%r4432, %r4431, %r4430, 14;
	shf.r.wrap.b32 	%r4433, %r4430, %r4431, 14;
	mov.b64 	%rd6441, {%r4433, %r4432};
	shf.r.wrap.b32 	%r4434, %r4431, %r4430, 18;
	shf.r.wrap.b32 	%r4435, %r4430, %r4431, 18;
	mov.b64 	%rd6442, {%r4435, %r4434};
	xor.b64  	%rd6443, %rd6441, %rd6442;
	shf.l.wrap.b32 	%r4436, %r4430, %r4431, 23;
	shf.l.wrap.b32 	%r4437, %r4431, %r4430, 23;
	mov.b64 	%rd6444, {%r4437, %r4436};
	xor.b64  	%rd6445, %rd6443, %rd6444;
	add.s64 	%rd6446, %rd6440, %rd6445;
	add.s64 	%rd6447, %rd6446, 8268148722764581231;
	add.s64 	%rd6448, %rd6447, %rd6363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4438,%dummy}, %rd6435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4439}, %rd6435;
	}
	shf.r.wrap.b32 	%r4440, %r4439, %r4438, 28;
	shf.r.wrap.b32 	%r4441, %r4438, %r4439, 28;
	mov.b64 	%rd6449, {%r4441, %r4440};
	shf.l.wrap.b32 	%r4442, %r4438, %r4439, 30;
	shf.l.wrap.b32 	%r4443, %r4439, %r4438, 30;
	mov.b64 	%rd6450, {%r4443, %r4442};
	xor.b64  	%rd6451, %rd6449, %rd6450;
	shf.l.wrap.b32 	%r4444, %r4438, %r4439, 25;
	shf.l.wrap.b32 	%r4445, %r4439, %r4438, 25;
	mov.b64 	%rd6452, {%r4445, %r4444};
	xor.b64  	%rd6453, %rd6451, %rd6452;
	and.b64  	%rd6454, %rd6435, %rd6411;
	or.b64  	%rd6455, %rd6435, %rd6411;
	and.b64  	%rd6456, %rd6455, %rd6387;
	or.b64  	%rd6457, %rd6456, %rd6454;
	add.s64 	%rd6458, %rd6457, %rd6453;
	add.s64 	%rd6459, %rd6458, %rd6447;
	add.s64 	%rd6460, %rd6135, %rd6376;
	xor.b64  	%rd6461, %rd6424, %rd6400;
	and.b64  	%rd6462, %rd6448, %rd6461;
	xor.b64  	%rd6463, %rd6462, %rd6400;
	add.s64 	%rd6464, %rd6460, %rd6463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4446,%dummy}, %rd6448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4447}, %rd6448;
	}
	shf.r.wrap.b32 	%r4448, %r4447, %r4446, 14;
	shf.r.wrap.b32 	%r4449, %r4446, %r4447, 14;
	mov.b64 	%rd6465, {%r4449, %r4448};
	shf.r.wrap.b32 	%r4450, %r4447, %r4446, 18;
	shf.r.wrap.b32 	%r4451, %r4446, %r4447, 18;
	mov.b64 	%rd6466, {%r4451, %r4450};
	xor.b64  	%rd6467, %rd6465, %rd6466;
	shf.l.wrap.b32 	%r4452, %r4446, %r4447, 23;
	shf.l.wrap.b32 	%r4453, %r4447, %r4446, 23;
	mov.b64 	%rd6468, {%r4453, %r4452};
	xor.b64  	%rd6469, %rd6467, %rd6468;
	add.s64 	%rd6470, %rd6464, %rd6469;
	add.s64 	%rd6471, %rd6470, -9160688886553864527;
	add.s64 	%rd6472, %rd6471, %rd6387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4454,%dummy}, %rd6459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4455}, %rd6459;
	}
	shf.r.wrap.b32 	%r4456, %r4455, %r4454, 28;
	shf.r.wrap.b32 	%r4457, %r4454, %r4455, 28;
	mov.b64 	%rd6473, {%r4457, %r4456};
	shf.l.wrap.b32 	%r4458, %r4454, %r4455, 30;
	shf.l.wrap.b32 	%r4459, %r4455, %r4454, 30;
	mov.b64 	%rd6474, {%r4459, %r4458};
	xor.b64  	%rd6475, %rd6473, %rd6474;
	shf.l.wrap.b32 	%r4460, %r4454, %r4455, 25;
	shf.l.wrap.b32 	%r4461, %r4455, %r4454, 25;
	mov.b64 	%rd6476, {%r4461, %r4460};
	xor.b64  	%rd6477, %rd6475, %rd6476;
	and.b64  	%rd6478, %rd6459, %rd6435;
	or.b64  	%rd6479, %rd6459, %rd6435;
	and.b64  	%rd6480, %rd6479, %rd6411;
	or.b64  	%rd6481, %rd6480, %rd6478;
	add.s64 	%rd6482, %rd6481, %rd6477;
	add.s64 	%rd6483, %rd6482, %rd6471;
	add.s64 	%rd6484, %rd6137, %rd6400;
	xor.b64  	%rd6485, %rd6448, %rd6424;
	and.b64  	%rd6486, %rd6472, %rd6485;
	xor.b64  	%rd6487, %rd6486, %rd6424;
	add.s64 	%rd6488, %rd6484, %rd6487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4462,%dummy}, %rd6472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4463}, %rd6472;
	}
	shf.r.wrap.b32 	%r4464, %r4463, %r4462, 14;
	shf.r.wrap.b32 	%r4465, %r4462, %r4463, 14;
	mov.b64 	%rd6489, {%r4465, %r4464};
	shf.r.wrap.b32 	%r4466, %r4463, %r4462, 18;
	shf.r.wrap.b32 	%r4467, %r4462, %r4463, 18;
	mov.b64 	%rd6490, {%r4467, %r4466};
	xor.b64  	%rd6491, %rd6489, %rd6490;
	shf.l.wrap.b32 	%r4468, %r4462, %r4463, 23;
	shf.l.wrap.b32 	%r4469, %r4463, %r4462, 23;
	mov.b64 	%rd6492, {%r4469, %r4468};
	xor.b64  	%rd6493, %rd6491, %rd6492;
	add.s64 	%rd6494, %rd6488, %rd6493;
	add.s64 	%rd6495, %rd6494, -7215885187991268811;
	add.s64 	%rd6496, %rd6495, %rd6411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4470,%dummy}, %rd6483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4471}, %rd6483;
	}
	shf.r.wrap.b32 	%r4472, %r4471, %r4470, 28;
	shf.r.wrap.b32 	%r4473, %r4470, %r4471, 28;
	mov.b64 	%rd6497, {%r4473, %r4472};
	shf.l.wrap.b32 	%r4474, %r4470, %r4471, 30;
	shf.l.wrap.b32 	%r4475, %r4471, %r4470, 30;
	mov.b64 	%rd6498, {%r4475, %r4474};
	xor.b64  	%rd6499, %rd6497, %rd6498;
	shf.l.wrap.b32 	%r4476, %r4470, %r4471, 25;
	shf.l.wrap.b32 	%r4477, %r4471, %r4470, 25;
	mov.b64 	%rd6500, {%r4477, %r4476};
	xor.b64  	%rd6501, %rd6499, %rd6500;
	and.b64  	%rd6502, %rd6483, %rd6459;
	or.b64  	%rd6503, %rd6483, %rd6459;
	and.b64  	%rd6504, %rd6503, %rd6435;
	or.b64  	%rd6505, %rd6504, %rd6502;
	add.s64 	%rd6506, %rd6505, %rd6501;
	add.s64 	%rd6507, %rd6506, %rd6495;
	add.s64 	%rd6508, %rd6139, %rd6424;
	xor.b64  	%rd6509, %rd6472, %rd6448;
	and.b64  	%rd6510, %rd6496, %rd6509;
	xor.b64  	%rd6511, %rd6510, %rd6448;
	add.s64 	%rd6512, %rd6508, %rd6511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4478,%dummy}, %rd6496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4479}, %rd6496;
	}
	shf.r.wrap.b32 	%r4480, %r4479, %r4478, 14;
	shf.r.wrap.b32 	%r4481, %r4478, %r4479, 14;
	mov.b64 	%rd6513, {%r4481, %r4480};
	shf.r.wrap.b32 	%r4482, %r4479, %r4478, 18;
	shf.r.wrap.b32 	%r4483, %r4478, %r4479, 18;
	mov.b64 	%rd6514, {%r4483, %r4482};
	xor.b64  	%rd6515, %rd6513, %rd6514;
	shf.l.wrap.b32 	%r4484, %r4478, %r4479, 23;
	shf.l.wrap.b32 	%r4485, %r4479, %r4478, 23;
	mov.b64 	%rd6516, {%r4485, %r4484};
	xor.b64  	%rd6517, %rd6515, %rd6516;
	add.s64 	%rd6518, %rd6512, %rd6517;
	add.s64 	%rd6519, %rd6518, -4495734319001033068;
	add.s64 	%rd6520, %rd6519, %rd6435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4486,%dummy}, %rd6507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4487}, %rd6507;
	}
	shf.r.wrap.b32 	%r4488, %r4487, %r4486, 28;
	shf.r.wrap.b32 	%r4489, %r4486, %r4487, 28;
	mov.b64 	%rd6521, {%r4489, %r4488};
	shf.l.wrap.b32 	%r4490, %r4486, %r4487, 30;
	shf.l.wrap.b32 	%r4491, %r4487, %r4486, 30;
	mov.b64 	%rd6522, {%r4491, %r4490};
	xor.b64  	%rd6523, %rd6521, %rd6522;
	shf.l.wrap.b32 	%r4492, %r4486, %r4487, 25;
	shf.l.wrap.b32 	%r4493, %r4487, %r4486, 25;
	mov.b64 	%rd6524, {%r4493, %r4492};
	xor.b64  	%rd6525, %rd6523, %rd6524;
	and.b64  	%rd6526, %rd6507, %rd6483;
	or.b64  	%rd6527, %rd6507, %rd6483;
	and.b64  	%rd6528, %rd6527, %rd6459;
	or.b64  	%rd6529, %rd6528, %rd6526;
	add.s64 	%rd6530, %rd6529, %rd6525;
	add.s64 	%rd6531, %rd6530, %rd6519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4494,%dummy}, %rd6137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4495}, %rd6137;
	}
	shf.r.wrap.b32 	%r4496, %r4495, %r4494, 19;
	shf.r.wrap.b32 	%r4497, %r4494, %r4495, 19;
	mov.b64 	%rd6532, {%r4497, %r4496};
	shf.l.wrap.b32 	%r4498, %r4494, %r4495, 3;
	shf.l.wrap.b32 	%r4499, %r4495, %r4494, 3;
	mov.b64 	%rd6533, {%r4499, %r4498};
	xor.b64  	%rd6534, %rd6532, %rd6533;
	shr.u64 	%rd6535, %rd6137, 6;
	xor.b64  	%rd6536, %rd6534, %rd6535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4500,%dummy}, %rd6111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4501}, %rd6111;
	}
	shf.r.wrap.b32 	%r4502, %r4501, %r4500, 1;
	shf.r.wrap.b32 	%r4503, %r4500, %r4501, 1;
	mov.b64 	%rd6537, {%r4503, %r4502};
	shf.r.wrap.b32 	%r4504, %r4501, %r4500, 8;
	shf.r.wrap.b32 	%r4505, %r4500, %r4501, 8;
	mov.b64 	%rd6538, {%r4505, %r4504};
	xor.b64  	%rd6539, %rd6537, %rd6538;
	shr.u64 	%rd6540, %rd6111, 7;
	xor.b64  	%rd6541, %rd6539, %rd6540;
	add.s64 	%rd6542, %rd6541, %rd6109;
	add.s64 	%rd6543, %rd6542, %rd6127;
	add.s64 	%rd6544, %rd6543, %rd6536;
	add.s64 	%rd6545, %rd6544, %rd6448;
	xor.b64  	%rd6546, %rd6496, %rd6472;
	and.b64  	%rd6547, %rd6520, %rd6546;
	xor.b64  	%rd6548, %rd6547, %rd6472;
	add.s64 	%rd6549, %rd6545, %rd6548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4506,%dummy}, %rd6520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4507}, %rd6520;
	}
	shf.r.wrap.b32 	%r4508, %r4507, %r4506, 14;
	shf.r.wrap.b32 	%r4509, %r4506, %r4507, 14;
	mov.b64 	%rd6550, {%r4509, %r4508};
	shf.r.wrap.b32 	%r4510, %r4507, %r4506, 18;
	shf.r.wrap.b32 	%r4511, %r4506, %r4507, 18;
	mov.b64 	%rd6551, {%r4511, %r4510};
	xor.b64  	%rd6552, %rd6550, %rd6551;
	shf.l.wrap.b32 	%r4512, %r4506, %r4507, 23;
	shf.l.wrap.b32 	%r4513, %r4507, %r4506, 23;
	mov.b64 	%rd6553, {%r4513, %r4512};
	xor.b64  	%rd6554, %rd6552, %rd6553;
	add.s64 	%rd6555, %rd6549, %rd6554;
	add.s64 	%rd6556, %rd6555, -1973867731355612462;
	add.s64 	%rd6557, %rd6556, %rd6459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4514,%dummy}, %rd6531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4515}, %rd6531;
	}
	shf.r.wrap.b32 	%r4516, %r4515, %r4514, 28;
	shf.r.wrap.b32 	%r4517, %r4514, %r4515, 28;
	mov.b64 	%rd6558, {%r4517, %r4516};
	shf.l.wrap.b32 	%r4518, %r4514, %r4515, 30;
	shf.l.wrap.b32 	%r4519, %r4515, %r4514, 30;
	mov.b64 	%rd6559, {%r4519, %r4518};
	xor.b64  	%rd6560, %rd6558, %rd6559;
	shf.l.wrap.b32 	%r4520, %r4514, %r4515, 25;
	shf.l.wrap.b32 	%r4521, %r4515, %r4514, 25;
	mov.b64 	%rd6561, {%r4521, %r4520};
	xor.b64  	%rd6562, %rd6560, %rd6561;
	and.b64  	%rd6563, %rd6531, %rd6507;
	or.b64  	%rd6564, %rd6531, %rd6507;
	and.b64  	%rd6565, %rd6564, %rd6483;
	or.b64  	%rd6566, %rd6565, %rd6563;
	add.s64 	%rd6567, %rd6566, %rd6562;
	add.s64 	%rd6568, %rd6567, %rd6556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4522,%dummy}, %rd6139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4523}, %rd6139;
	}
	shf.r.wrap.b32 	%r4524, %r4523, %r4522, 19;
	shf.r.wrap.b32 	%r4525, %r4522, %r4523, 19;
	mov.b64 	%rd6569, {%r4525, %r4524};
	shf.l.wrap.b32 	%r4526, %r4522, %r4523, 3;
	shf.l.wrap.b32 	%r4527, %r4523, %r4522, 3;
	mov.b64 	%rd6570, {%r4527, %r4526};
	xor.b64  	%rd6571, %rd6569, %rd6570;
	shr.u64 	%rd6572, %rd6139, 6;
	xor.b64  	%rd6573, %rd6571, %rd6572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4528,%dummy}, %rd6113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4529}, %rd6113;
	}
	shf.r.wrap.b32 	%r4530, %r4529, %r4528, 1;
	shf.r.wrap.b32 	%r4531, %r4528, %r4529, 1;
	mov.b64 	%rd6574, {%r4531, %r4530};
	shf.r.wrap.b32 	%r4532, %r4529, %r4528, 8;
	shf.r.wrap.b32 	%r4533, %r4528, %r4529, 8;
	mov.b64 	%rd6575, {%r4533, %r4532};
	xor.b64  	%rd6576, %rd6574, %rd6575;
	shr.u64 	%rd6577, %rd6113, 7;
	xor.b64  	%rd6578, %rd6576, %rd6577;
	add.s64 	%rd6579, %rd6578, %rd6111;
	add.s64 	%rd6580, %rd6579, %rd6129;
	add.s64 	%rd6581, %rd6580, %rd6573;
	add.s64 	%rd6582, %rd6581, %rd6472;
	xor.b64  	%rd6583, %rd6520, %rd6496;
	and.b64  	%rd6584, %rd6557, %rd6583;
	xor.b64  	%rd6585, %rd6584, %rd6496;
	add.s64 	%rd6586, %rd6582, %rd6585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4534,%dummy}, %rd6557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4535}, %rd6557;
	}
	shf.r.wrap.b32 	%r4536, %r4535, %r4534, 14;
	shf.r.wrap.b32 	%r4537, %r4534, %r4535, 14;
	mov.b64 	%rd6587, {%r4537, %r4536};
	shf.r.wrap.b32 	%r4538, %r4535, %r4534, 18;
	shf.r.wrap.b32 	%r4539, %r4534, %r4535, 18;
	mov.b64 	%rd6588, {%r4539, %r4538};
	xor.b64  	%rd6589, %rd6587, %rd6588;
	shf.l.wrap.b32 	%r4540, %r4534, %r4535, 23;
	shf.l.wrap.b32 	%r4541, %r4535, %r4534, 23;
	mov.b64 	%rd6590, {%r4541, %r4540};
	xor.b64  	%rd6591, %rd6589, %rd6590;
	add.s64 	%rd6592, %rd6586, %rd6591;
	add.s64 	%rd6593, %rd6592, -1171420211273849373;
	add.s64 	%rd6594, %rd6593, %rd6483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4542,%dummy}, %rd6568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4543}, %rd6568;
	}
	shf.r.wrap.b32 	%r4544, %r4543, %r4542, 28;
	shf.r.wrap.b32 	%r4545, %r4542, %r4543, 28;
	mov.b64 	%rd6595, {%r4545, %r4544};
	shf.l.wrap.b32 	%r4546, %r4542, %r4543, 30;
	shf.l.wrap.b32 	%r4547, %r4543, %r4542, 30;
	mov.b64 	%rd6596, {%r4547, %r4546};
	xor.b64  	%rd6597, %rd6595, %rd6596;
	shf.l.wrap.b32 	%r4548, %r4542, %r4543, 25;
	shf.l.wrap.b32 	%r4549, %r4543, %r4542, 25;
	mov.b64 	%rd6598, {%r4549, %r4548};
	xor.b64  	%rd6599, %rd6597, %rd6598;
	and.b64  	%rd6600, %rd6568, %rd6531;
	or.b64  	%rd6601, %rd6568, %rd6531;
	and.b64  	%rd6602, %rd6601, %rd6507;
	or.b64  	%rd6603, %rd6602, %rd6600;
	add.s64 	%rd6604, %rd6603, %rd6599;
	add.s64 	%rd6605, %rd6604, %rd6593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4550,%dummy}, %rd6544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4551}, %rd6544;
	}
	shf.r.wrap.b32 	%r4552, %r4551, %r4550, 19;
	shf.r.wrap.b32 	%r4553, %r4550, %r4551, 19;
	mov.b64 	%rd6606, {%r4553, %r4552};
	shf.l.wrap.b32 	%r4554, %r4550, %r4551, 3;
	shf.l.wrap.b32 	%r4555, %r4551, %r4550, 3;
	mov.b64 	%rd6607, {%r4555, %r4554};
	xor.b64  	%rd6608, %rd6606, %rd6607;
	shr.u64 	%rd6609, %rd6544, 6;
	xor.b64  	%rd6610, %rd6608, %rd6609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4556,%dummy}, %rd6115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4557}, %rd6115;
	}
	shf.r.wrap.b32 	%r4558, %r4557, %r4556, 1;
	shf.r.wrap.b32 	%r4559, %r4556, %r4557, 1;
	mov.b64 	%rd6611, {%r4559, %r4558};
	shf.r.wrap.b32 	%r4560, %r4557, %r4556, 8;
	shf.r.wrap.b32 	%r4561, %r4556, %r4557, 8;
	mov.b64 	%rd6612, {%r4561, %r4560};
	xor.b64  	%rd6613, %rd6611, %rd6612;
	shr.u64 	%rd6614, %rd6115, 7;
	xor.b64  	%rd6615, %rd6613, %rd6614;
	add.s64 	%rd6616, %rd6615, %rd6113;
	add.s64 	%rd6617, %rd6616, %rd6131;
	add.s64 	%rd6618, %rd6617, %rd6610;
	add.s64 	%rd6619, %rd6618, %rd6496;
	xor.b64  	%rd6620, %rd6557, %rd6520;
	and.b64  	%rd6621, %rd6594, %rd6620;
	xor.b64  	%rd6622, %rd6621, %rd6520;
	add.s64 	%rd6623, %rd6619, %rd6622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4562,%dummy}, %rd6594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4563}, %rd6594;
	}
	shf.r.wrap.b32 	%r4564, %r4563, %r4562, 14;
	shf.r.wrap.b32 	%r4565, %r4562, %r4563, 14;
	mov.b64 	%rd6624, {%r4565, %r4564};
	shf.r.wrap.b32 	%r4566, %r4563, %r4562, 18;
	shf.r.wrap.b32 	%r4567, %r4562, %r4563, 18;
	mov.b64 	%rd6625, {%r4567, %r4566};
	xor.b64  	%rd6626, %rd6624, %rd6625;
	shf.l.wrap.b32 	%r4568, %r4562, %r4563, 23;
	shf.l.wrap.b32 	%r4569, %r4563, %r4562, 23;
	mov.b64 	%rd6627, {%r4569, %r4568};
	xor.b64  	%rd6628, %rd6626, %rd6627;
	add.s64 	%rd6629, %rd6623, %rd6628;
	add.s64 	%rd6630, %rd6629, 1135362057144423861;
	add.s64 	%rd6631, %rd6630, %rd6507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4570,%dummy}, %rd6605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4571}, %rd6605;
	}
	shf.r.wrap.b32 	%r4572, %r4571, %r4570, 28;
	shf.r.wrap.b32 	%r4573, %r4570, %r4571, 28;
	mov.b64 	%rd6632, {%r4573, %r4572};
	shf.l.wrap.b32 	%r4574, %r4570, %r4571, 30;
	shf.l.wrap.b32 	%r4575, %r4571, %r4570, 30;
	mov.b64 	%rd6633, {%r4575, %r4574};
	xor.b64  	%rd6634, %rd6632, %rd6633;
	shf.l.wrap.b32 	%r4576, %r4570, %r4571, 25;
	shf.l.wrap.b32 	%r4577, %r4571, %r4570, 25;
	mov.b64 	%rd6635, {%r4577, %r4576};
	xor.b64  	%rd6636, %rd6634, %rd6635;
	and.b64  	%rd6637, %rd6605, %rd6568;
	or.b64  	%rd6638, %rd6605, %rd6568;
	and.b64  	%rd6639, %rd6638, %rd6531;
	or.b64  	%rd6640, %rd6639, %rd6637;
	add.s64 	%rd6641, %rd6640, %rd6636;
	add.s64 	%rd6642, %rd6641, %rd6630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4578,%dummy}, %rd6581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4579}, %rd6581;
	}
	shf.r.wrap.b32 	%r4580, %r4579, %r4578, 19;
	shf.r.wrap.b32 	%r4581, %r4578, %r4579, 19;
	mov.b64 	%rd6643, {%r4581, %r4580};
	shf.l.wrap.b32 	%r4582, %r4578, %r4579, 3;
	shf.l.wrap.b32 	%r4583, %r4579, %r4578, 3;
	mov.b64 	%rd6644, {%r4583, %r4582};
	xor.b64  	%rd6645, %rd6643, %rd6644;
	shr.u64 	%rd6646, %rd6581, 6;
	xor.b64  	%rd6647, %rd6645, %rd6646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4584,%dummy}, %rd6117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4585}, %rd6117;
	}
	shf.r.wrap.b32 	%r4586, %r4585, %r4584, 1;
	shf.r.wrap.b32 	%r4587, %r4584, %r4585, 1;
	mov.b64 	%rd6648, {%r4587, %r4586};
	shf.r.wrap.b32 	%r4588, %r4585, %r4584, 8;
	shf.r.wrap.b32 	%r4589, %r4584, %r4585, 8;
	mov.b64 	%rd6649, {%r4589, %r4588};
	xor.b64  	%rd6650, %rd6648, %rd6649;
	shr.u64 	%rd6651, %rd6117, 7;
	xor.b64  	%rd6652, %rd6650, %rd6651;
	add.s64 	%rd6653, %rd6652, %rd6115;
	add.s64 	%rd6654, %rd6653, %rd6133;
	add.s64 	%rd6655, %rd6654, %rd6647;
	add.s64 	%rd6656, %rd6655, %rd6520;
	xor.b64  	%rd6657, %rd6594, %rd6557;
	and.b64  	%rd6658, %rd6631, %rd6657;
	xor.b64  	%rd6659, %rd6658, %rd6557;
	add.s64 	%rd6660, %rd6656, %rd6659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4590,%dummy}, %rd6631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4591}, %rd6631;
	}
	shf.r.wrap.b32 	%r4592, %r4591, %r4590, 14;
	shf.r.wrap.b32 	%r4593, %r4590, %r4591, 14;
	mov.b64 	%rd6661, {%r4593, %r4592};
	shf.r.wrap.b32 	%r4594, %r4591, %r4590, 18;
	shf.r.wrap.b32 	%r4595, %r4590, %r4591, 18;
	mov.b64 	%rd6662, {%r4595, %r4594};
	xor.b64  	%rd6663, %rd6661, %rd6662;
	shf.l.wrap.b32 	%r4596, %r4590, %r4591, 23;
	shf.l.wrap.b32 	%r4597, %r4591, %r4590, 23;
	mov.b64 	%rd6664, {%r4597, %r4596};
	xor.b64  	%rd6665, %rd6663, %rd6664;
	add.s64 	%rd6666, %rd6660, %rd6665;
	add.s64 	%rd6667, %rd6666, 2597628984639134821;
	add.s64 	%rd6668, %rd6667, %rd6531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4598,%dummy}, %rd6642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4599}, %rd6642;
	}
	shf.r.wrap.b32 	%r4600, %r4599, %r4598, 28;
	shf.r.wrap.b32 	%r4601, %r4598, %r4599, 28;
	mov.b64 	%rd6669, {%r4601, %r4600};
	shf.l.wrap.b32 	%r4602, %r4598, %r4599, 30;
	shf.l.wrap.b32 	%r4603, %r4599, %r4598, 30;
	mov.b64 	%rd6670, {%r4603, %r4602};
	xor.b64  	%rd6671, %rd6669, %rd6670;
	shf.l.wrap.b32 	%r4604, %r4598, %r4599, 25;
	shf.l.wrap.b32 	%r4605, %r4599, %r4598, 25;
	mov.b64 	%rd6672, {%r4605, %r4604};
	xor.b64  	%rd6673, %rd6671, %rd6672;
	and.b64  	%rd6674, %rd6642, %rd6605;
	or.b64  	%rd6675, %rd6642, %rd6605;
	and.b64  	%rd6676, %rd6675, %rd6568;
	or.b64  	%rd6677, %rd6676, %rd6674;
	add.s64 	%rd6678, %rd6677, %rd6673;
	add.s64 	%rd6679, %rd6678, %rd6667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4606,%dummy}, %rd6618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4607}, %rd6618;
	}
	shf.r.wrap.b32 	%r4608, %r4607, %r4606, 19;
	shf.r.wrap.b32 	%r4609, %r4606, %r4607, 19;
	mov.b64 	%rd6680, {%r4609, %r4608};
	shf.l.wrap.b32 	%r4610, %r4606, %r4607, 3;
	shf.l.wrap.b32 	%r4611, %r4607, %r4606, 3;
	mov.b64 	%rd6681, {%r4611, %r4610};
	xor.b64  	%rd6682, %rd6680, %rd6681;
	shr.u64 	%rd6683, %rd6618, 6;
	xor.b64  	%rd6684, %rd6682, %rd6683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4612,%dummy}, %rd6119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4613}, %rd6119;
	}
	shf.r.wrap.b32 	%r4614, %r4613, %r4612, 1;
	shf.r.wrap.b32 	%r4615, %r4612, %r4613, 1;
	mov.b64 	%rd6685, {%r4615, %r4614};
	shf.r.wrap.b32 	%r4616, %r4613, %r4612, 8;
	shf.r.wrap.b32 	%r4617, %r4612, %r4613, 8;
	mov.b64 	%rd6686, {%r4617, %r4616};
	xor.b64  	%rd6687, %rd6685, %rd6686;
	shr.u64 	%rd6688, %rd6119, 7;
	xor.b64  	%rd6689, %rd6687, %rd6688;
	add.s64 	%rd6690, %rd6689, %rd6117;
	add.s64 	%rd6691, %rd6690, %rd6135;
	add.s64 	%rd6692, %rd6691, %rd6684;
	add.s64 	%rd6693, %rd6692, %rd6557;
	xor.b64  	%rd6694, %rd6631, %rd6594;
	and.b64  	%rd6695, %rd6668, %rd6694;
	xor.b64  	%rd6696, %rd6695, %rd6594;
	add.s64 	%rd6697, %rd6693, %rd6696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4618,%dummy}, %rd6668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4619}, %rd6668;
	}
	shf.r.wrap.b32 	%r4620, %r4619, %r4618, 14;
	shf.r.wrap.b32 	%r4621, %r4618, %r4619, 14;
	mov.b64 	%rd6698, {%r4621, %r4620};
	shf.r.wrap.b32 	%r4622, %r4619, %r4618, 18;
	shf.r.wrap.b32 	%r4623, %r4618, %r4619, 18;
	mov.b64 	%rd6699, {%r4623, %r4622};
	xor.b64  	%rd6700, %rd6698, %rd6699;
	shf.l.wrap.b32 	%r4624, %r4618, %r4619, 23;
	shf.l.wrap.b32 	%r4625, %r4619, %r4618, 23;
	mov.b64 	%rd6701, {%r4625, %r4624};
	xor.b64  	%rd6702, %rd6700, %rd6701;
	add.s64 	%rd6703, %rd6697, %rd6702;
	add.s64 	%rd6704, %rd6703, 3308224258029322869;
	add.s64 	%rd6705, %rd6704, %rd6568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4626,%dummy}, %rd6679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4627}, %rd6679;
	}
	shf.r.wrap.b32 	%r4628, %r4627, %r4626, 28;
	shf.r.wrap.b32 	%r4629, %r4626, %r4627, 28;
	mov.b64 	%rd6706, {%r4629, %r4628};
	shf.l.wrap.b32 	%r4630, %r4626, %r4627, 30;
	shf.l.wrap.b32 	%r4631, %r4627, %r4626, 30;
	mov.b64 	%rd6707, {%r4631, %r4630};
	xor.b64  	%rd6708, %rd6706, %rd6707;
	shf.l.wrap.b32 	%r4632, %r4626, %r4627, 25;
	shf.l.wrap.b32 	%r4633, %r4627, %r4626, 25;
	mov.b64 	%rd6709, {%r4633, %r4632};
	xor.b64  	%rd6710, %rd6708, %rd6709;
	and.b64  	%rd6711, %rd6679, %rd6642;
	or.b64  	%rd6712, %rd6679, %rd6642;
	and.b64  	%rd6713, %rd6712, %rd6605;
	or.b64  	%rd6714, %rd6713, %rd6711;
	add.s64 	%rd6715, %rd6714, %rd6710;
	add.s64 	%rd6716, %rd6715, %rd6704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4634,%dummy}, %rd6655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4635}, %rd6655;
	}
	shf.r.wrap.b32 	%r4636, %r4635, %r4634, 19;
	shf.r.wrap.b32 	%r4637, %r4634, %r4635, 19;
	mov.b64 	%rd6717, {%r4637, %r4636};
	shf.l.wrap.b32 	%r4638, %r4634, %r4635, 3;
	shf.l.wrap.b32 	%r4639, %r4635, %r4634, 3;
	mov.b64 	%rd6718, {%r4639, %r4638};
	xor.b64  	%rd6719, %rd6717, %rd6718;
	shr.u64 	%rd6720, %rd6655, 6;
	xor.b64  	%rd6721, %rd6719, %rd6720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4640,%dummy}, %rd6121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4641}, %rd6121;
	}
	shf.r.wrap.b32 	%r4642, %r4641, %r4640, 1;
	shf.r.wrap.b32 	%r4643, %r4640, %r4641, 1;
	mov.b64 	%rd6722, {%r4643, %r4642};
	shf.r.wrap.b32 	%r4644, %r4641, %r4640, 8;
	shf.r.wrap.b32 	%r4645, %r4640, %r4641, 8;
	mov.b64 	%rd6723, {%r4645, %r4644};
	xor.b64  	%rd6724, %rd6722, %rd6723;
	shr.u64 	%rd6725, %rd6121, 7;
	xor.b64  	%rd6726, %rd6724, %rd6725;
	add.s64 	%rd6727, %rd6726, %rd6119;
	add.s64 	%rd6728, %rd6727, %rd6137;
	add.s64 	%rd6729, %rd6728, %rd6721;
	add.s64 	%rd6730, %rd6729, %rd6594;
	xor.b64  	%rd6731, %rd6668, %rd6631;
	and.b64  	%rd6732, %rd6705, %rd6731;
	xor.b64  	%rd6733, %rd6732, %rd6631;
	add.s64 	%rd6734, %rd6730, %rd6733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4646,%dummy}, %rd6705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4647}, %rd6705;
	}
	shf.r.wrap.b32 	%r4648, %r4647, %r4646, 14;
	shf.r.wrap.b32 	%r4649, %r4646, %r4647, 14;
	mov.b64 	%rd6735, {%r4649, %r4648};
	shf.r.wrap.b32 	%r4650, %r4647, %r4646, 18;
	shf.r.wrap.b32 	%r4651, %r4646, %r4647, 18;
	mov.b64 	%rd6736, {%r4651, %r4650};
	xor.b64  	%rd6737, %rd6735, %rd6736;
	shf.l.wrap.b32 	%r4652, %r4646, %r4647, 23;
	shf.l.wrap.b32 	%r4653, %r4647, %r4646, 23;
	mov.b64 	%rd6738, {%r4653, %r4652};
	xor.b64  	%rd6739, %rd6737, %rd6738;
	add.s64 	%rd6740, %rd6734, %rd6739;
	add.s64 	%rd6741, %rd6740, 5365058923640841347;
	add.s64 	%rd6742, %rd6741, %rd6605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4654,%dummy}, %rd6716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4655}, %rd6716;
	}
	shf.r.wrap.b32 	%r4656, %r4655, %r4654, 28;
	shf.r.wrap.b32 	%r4657, %r4654, %r4655, 28;
	mov.b64 	%rd6743, {%r4657, %r4656};
	shf.l.wrap.b32 	%r4658, %r4654, %r4655, 30;
	shf.l.wrap.b32 	%r4659, %r4655, %r4654, 30;
	mov.b64 	%rd6744, {%r4659, %r4658};
	xor.b64  	%rd6745, %rd6743, %rd6744;
	shf.l.wrap.b32 	%r4660, %r4654, %r4655, 25;
	shf.l.wrap.b32 	%r4661, %r4655, %r4654, 25;
	mov.b64 	%rd6746, {%r4661, %r4660};
	xor.b64  	%rd6747, %rd6745, %rd6746;
	and.b64  	%rd6748, %rd6716, %rd6679;
	or.b64  	%rd6749, %rd6716, %rd6679;
	and.b64  	%rd6750, %rd6749, %rd6642;
	or.b64  	%rd6751, %rd6750, %rd6748;
	add.s64 	%rd6752, %rd6751, %rd6747;
	add.s64 	%rd6753, %rd6752, %rd6741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4662,%dummy}, %rd6692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4663}, %rd6692;
	}
	shf.r.wrap.b32 	%r4664, %r4663, %r4662, 19;
	shf.r.wrap.b32 	%r4665, %r4662, %r4663, 19;
	mov.b64 	%rd6754, {%r4665, %r4664};
	shf.l.wrap.b32 	%r4666, %r4662, %r4663, 3;
	shf.l.wrap.b32 	%r4667, %r4663, %r4662, 3;
	mov.b64 	%rd6755, {%r4667, %r4666};
	xor.b64  	%rd6756, %rd6754, %rd6755;
	shr.u64 	%rd6757, %rd6692, 6;
	xor.b64  	%rd6758, %rd6756, %rd6757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4668,%dummy}, %rd6123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4669}, %rd6123;
	}
	shf.r.wrap.b32 	%r4670, %r4669, %r4668, 1;
	shf.r.wrap.b32 	%r4671, %r4668, %r4669, 1;
	mov.b64 	%rd6759, {%r4671, %r4670};
	shf.r.wrap.b32 	%r4672, %r4669, %r4668, 8;
	shf.r.wrap.b32 	%r4673, %r4668, %r4669, 8;
	mov.b64 	%rd6760, {%r4673, %r4672};
	xor.b64  	%rd6761, %rd6759, %rd6760;
	shr.u64 	%rd6762, %rd6123, 7;
	xor.b64  	%rd6763, %rd6761, %rd6762;
	add.s64 	%rd6764, %rd6763, %rd6121;
	add.s64 	%rd6765, %rd6764, %rd6139;
	add.s64 	%rd6766, %rd6765, %rd6758;
	add.s64 	%rd6767, %rd6766, %rd6631;
	xor.b64  	%rd6768, %rd6705, %rd6668;
	and.b64  	%rd6769, %rd6742, %rd6768;
	xor.b64  	%rd6770, %rd6769, %rd6668;
	add.s64 	%rd6771, %rd6767, %rd6770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4674,%dummy}, %rd6742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4675}, %rd6742;
	}
	shf.r.wrap.b32 	%r4676, %r4675, %r4674, 14;
	shf.r.wrap.b32 	%r4677, %r4674, %r4675, 14;
	mov.b64 	%rd6772, {%r4677, %r4676};
	shf.r.wrap.b32 	%r4678, %r4675, %r4674, 18;
	shf.r.wrap.b32 	%r4679, %r4674, %r4675, 18;
	mov.b64 	%rd6773, {%r4679, %r4678};
	xor.b64  	%rd6774, %rd6772, %rd6773;
	shf.l.wrap.b32 	%r4680, %r4674, %r4675, 23;
	shf.l.wrap.b32 	%r4681, %r4675, %r4674, 23;
	mov.b64 	%rd6775, {%r4681, %r4680};
	xor.b64  	%rd6776, %rd6774, %rd6775;
	add.s64 	%rd6777, %rd6771, %rd6776;
	add.s64 	%rd6778, %rd6777, 6679025012923562964;
	add.s64 	%rd6779, %rd6778, %rd6642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4682,%dummy}, %rd6753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4683}, %rd6753;
	}
	shf.r.wrap.b32 	%r4684, %r4683, %r4682, 28;
	shf.r.wrap.b32 	%r4685, %r4682, %r4683, 28;
	mov.b64 	%rd6780, {%r4685, %r4684};
	shf.l.wrap.b32 	%r4686, %r4682, %r4683, 30;
	shf.l.wrap.b32 	%r4687, %r4683, %r4682, 30;
	mov.b64 	%rd6781, {%r4687, %r4686};
	xor.b64  	%rd6782, %rd6780, %rd6781;
	shf.l.wrap.b32 	%r4688, %r4682, %r4683, 25;
	shf.l.wrap.b32 	%r4689, %r4683, %r4682, 25;
	mov.b64 	%rd6783, {%r4689, %r4688};
	xor.b64  	%rd6784, %rd6782, %rd6783;
	and.b64  	%rd6785, %rd6753, %rd6716;
	or.b64  	%rd6786, %rd6753, %rd6716;
	and.b64  	%rd6787, %rd6786, %rd6679;
	or.b64  	%rd6788, %rd6787, %rd6785;
	add.s64 	%rd6789, %rd6788, %rd6784;
	add.s64 	%rd6790, %rd6789, %rd6778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4690,%dummy}, %rd6729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4691}, %rd6729;
	}
	shf.r.wrap.b32 	%r4692, %r4691, %r4690, 19;
	shf.r.wrap.b32 	%r4693, %r4690, %r4691, 19;
	mov.b64 	%rd6791, {%r4693, %r4692};
	shf.l.wrap.b32 	%r4694, %r4690, %r4691, 3;
	shf.l.wrap.b32 	%r4695, %r4691, %r4690, 3;
	mov.b64 	%rd6792, {%r4695, %r4694};
	xor.b64  	%rd6793, %rd6791, %rd6792;
	shr.u64 	%rd6794, %rd6729, 6;
	xor.b64  	%rd6795, %rd6793, %rd6794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4696,%dummy}, %rd6125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4697}, %rd6125;
	}
	shf.r.wrap.b32 	%r4698, %r4697, %r4696, 1;
	shf.r.wrap.b32 	%r4699, %r4696, %r4697, 1;
	mov.b64 	%rd6796, {%r4699, %r4698};
	shf.r.wrap.b32 	%r4700, %r4697, %r4696, 8;
	shf.r.wrap.b32 	%r4701, %r4696, %r4697, 8;
	mov.b64 	%rd6797, {%r4701, %r4700};
	xor.b64  	%rd6798, %rd6796, %rd6797;
	shr.u64 	%rd6799, %rd6125, 7;
	xor.b64  	%rd6800, %rd6798, %rd6799;
	add.s64 	%rd6801, %rd6800, %rd6123;
	add.s64 	%rd6802, %rd6801, %rd6544;
	add.s64 	%rd6803, %rd6802, %rd6795;
	add.s64 	%rd6804, %rd6803, %rd6668;
	xor.b64  	%rd6805, %rd6742, %rd6705;
	and.b64  	%rd6806, %rd6779, %rd6805;
	xor.b64  	%rd6807, %rd6806, %rd6705;
	add.s64 	%rd6808, %rd6804, %rd6807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4702,%dummy}, %rd6779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4703}, %rd6779;
	}
	shf.r.wrap.b32 	%r4704, %r4703, %r4702, 14;
	shf.r.wrap.b32 	%r4705, %r4702, %r4703, 14;
	mov.b64 	%rd6809, {%r4705, %r4704};
	shf.r.wrap.b32 	%r4706, %r4703, %r4702, 18;
	shf.r.wrap.b32 	%r4707, %r4702, %r4703, 18;
	mov.b64 	%rd6810, {%r4707, %r4706};
	xor.b64  	%rd6811, %rd6809, %rd6810;
	shf.l.wrap.b32 	%r4708, %r4702, %r4703, 23;
	shf.l.wrap.b32 	%r4709, %r4703, %r4702, 23;
	mov.b64 	%rd6812, {%r4709, %r4708};
	xor.b64  	%rd6813, %rd6811, %rd6812;
	add.s64 	%rd6814, %rd6808, %rd6813;
	add.s64 	%rd6815, %rd6814, 8573033837759648693;
	add.s64 	%rd6816, %rd6815, %rd6679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4710,%dummy}, %rd6790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4711}, %rd6790;
	}
	shf.r.wrap.b32 	%r4712, %r4711, %r4710, 28;
	shf.r.wrap.b32 	%r4713, %r4710, %r4711, 28;
	mov.b64 	%rd6817, {%r4713, %r4712};
	shf.l.wrap.b32 	%r4714, %r4710, %r4711, 30;
	shf.l.wrap.b32 	%r4715, %r4711, %r4710, 30;
	mov.b64 	%rd6818, {%r4715, %r4714};
	xor.b64  	%rd6819, %rd6817, %rd6818;
	shf.l.wrap.b32 	%r4716, %r4710, %r4711, 25;
	shf.l.wrap.b32 	%r4717, %r4711, %r4710, 25;
	mov.b64 	%rd6820, {%r4717, %r4716};
	xor.b64  	%rd6821, %rd6819, %rd6820;
	and.b64  	%rd6822, %rd6790, %rd6753;
	or.b64  	%rd6823, %rd6790, %rd6753;
	and.b64  	%rd6824, %rd6823, %rd6716;
	or.b64  	%rd6825, %rd6824, %rd6822;
	add.s64 	%rd6826, %rd6825, %rd6821;
	add.s64 	%rd6827, %rd6826, %rd6815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4718,%dummy}, %rd6766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4719}, %rd6766;
	}
	shf.r.wrap.b32 	%r4720, %r4719, %r4718, 19;
	shf.r.wrap.b32 	%r4721, %r4718, %r4719, 19;
	mov.b64 	%rd6828, {%r4721, %r4720};
	shf.l.wrap.b32 	%r4722, %r4718, %r4719, 3;
	shf.l.wrap.b32 	%r4723, %r4719, %r4718, 3;
	mov.b64 	%rd6829, {%r4723, %r4722};
	xor.b64  	%rd6830, %rd6828, %rd6829;
	shr.u64 	%rd6831, %rd6766, 6;
	xor.b64  	%rd6832, %rd6830, %rd6831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4724,%dummy}, %rd6127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4725}, %rd6127;
	}
	shf.r.wrap.b32 	%r4726, %r4725, %r4724, 1;
	shf.r.wrap.b32 	%r4727, %r4724, %r4725, 1;
	mov.b64 	%rd6833, {%r4727, %r4726};
	shf.r.wrap.b32 	%r4728, %r4725, %r4724, 8;
	shf.r.wrap.b32 	%r4729, %r4724, %r4725, 8;
	mov.b64 	%rd6834, {%r4729, %r4728};
	xor.b64  	%rd6835, %rd6833, %rd6834;
	shr.u64 	%rd6836, %rd6127, 7;
	xor.b64  	%rd6837, %rd6835, %rd6836;
	add.s64 	%rd6838, %rd6837, %rd6125;
	add.s64 	%rd6839, %rd6838, %rd6581;
	add.s64 	%rd6840, %rd6839, %rd6832;
	add.s64 	%rd6841, %rd6840, %rd6705;
	xor.b64  	%rd6842, %rd6779, %rd6742;
	and.b64  	%rd6843, %rd6816, %rd6842;
	xor.b64  	%rd6844, %rd6843, %rd6742;
	add.s64 	%rd6845, %rd6841, %rd6844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4730,%dummy}, %rd6816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4731}, %rd6816;
	}
	shf.r.wrap.b32 	%r4732, %r4731, %r4730, 14;
	shf.r.wrap.b32 	%r4733, %r4730, %r4731, 14;
	mov.b64 	%rd6846, {%r4733, %r4732};
	shf.r.wrap.b32 	%r4734, %r4731, %r4730, 18;
	shf.r.wrap.b32 	%r4735, %r4730, %r4731, 18;
	mov.b64 	%rd6847, {%r4735, %r4734};
	xor.b64  	%rd6848, %rd6846, %rd6847;
	shf.l.wrap.b32 	%r4736, %r4730, %r4731, 23;
	shf.l.wrap.b32 	%r4737, %r4731, %r4730, 23;
	mov.b64 	%rd6849, {%r4737, %r4736};
	xor.b64  	%rd6850, %rd6848, %rd6849;
	add.s64 	%rd6851, %rd6845, %rd6850;
	add.s64 	%rd6852, %rd6851, -7476448914759557205;
	add.s64 	%rd6853, %rd6852, %rd6716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4738,%dummy}, %rd6827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4739}, %rd6827;
	}
	shf.r.wrap.b32 	%r4740, %r4739, %r4738, 28;
	shf.r.wrap.b32 	%r4741, %r4738, %r4739, 28;
	mov.b64 	%rd6854, {%r4741, %r4740};
	shf.l.wrap.b32 	%r4742, %r4738, %r4739, 30;
	shf.l.wrap.b32 	%r4743, %r4739, %r4738, 30;
	mov.b64 	%rd6855, {%r4743, %r4742};
	xor.b64  	%rd6856, %rd6854, %rd6855;
	shf.l.wrap.b32 	%r4744, %r4738, %r4739, 25;
	shf.l.wrap.b32 	%r4745, %r4739, %r4738, 25;
	mov.b64 	%rd6857, {%r4745, %r4744};
	xor.b64  	%rd6858, %rd6856, %rd6857;
	and.b64  	%rd6859, %rd6827, %rd6790;
	or.b64  	%rd6860, %rd6827, %rd6790;
	and.b64  	%rd6861, %rd6860, %rd6753;
	or.b64  	%rd6862, %rd6861, %rd6859;
	add.s64 	%rd6863, %rd6862, %rd6858;
	add.s64 	%rd6864, %rd6863, %rd6852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4746,%dummy}, %rd6803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4747}, %rd6803;
	}
	shf.r.wrap.b32 	%r4748, %r4747, %r4746, 19;
	shf.r.wrap.b32 	%r4749, %r4746, %r4747, 19;
	mov.b64 	%rd6865, {%r4749, %r4748};
	shf.l.wrap.b32 	%r4750, %r4746, %r4747, 3;
	shf.l.wrap.b32 	%r4751, %r4747, %r4746, 3;
	mov.b64 	%rd6866, {%r4751, %r4750};
	xor.b64  	%rd6867, %rd6865, %rd6866;
	shr.u64 	%rd6868, %rd6803, 6;
	xor.b64  	%rd6869, %rd6867, %rd6868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4752,%dummy}, %rd6129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4753}, %rd6129;
	}
	shf.r.wrap.b32 	%r4754, %r4753, %r4752, 1;
	shf.r.wrap.b32 	%r4755, %r4752, %r4753, 1;
	mov.b64 	%rd6870, {%r4755, %r4754};
	shf.r.wrap.b32 	%r4756, %r4753, %r4752, 8;
	shf.r.wrap.b32 	%r4757, %r4752, %r4753, 8;
	mov.b64 	%rd6871, {%r4757, %r4756};
	xor.b64  	%rd6872, %rd6870, %rd6871;
	shr.u64 	%rd6873, %rd6129, 7;
	xor.b64  	%rd6874, %rd6872, %rd6873;
	add.s64 	%rd6875, %rd6874, %rd6127;
	add.s64 	%rd6876, %rd6875, %rd6618;
	add.s64 	%rd6877, %rd6876, %rd6869;
	add.s64 	%rd6878, %rd6877, %rd6742;
	xor.b64  	%rd6879, %rd6816, %rd6779;
	and.b64  	%rd6880, %rd6853, %rd6879;
	xor.b64  	%rd6881, %rd6880, %rd6779;
	add.s64 	%rd6882, %rd6878, %rd6881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4758,%dummy}, %rd6853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4759}, %rd6853;
	}
	shf.r.wrap.b32 	%r4760, %r4759, %r4758, 14;
	shf.r.wrap.b32 	%r4761, %r4758, %r4759, 14;
	mov.b64 	%rd6883, {%r4761, %r4760};
	shf.r.wrap.b32 	%r4762, %r4759, %r4758, 18;
	shf.r.wrap.b32 	%r4763, %r4758, %r4759, 18;
	mov.b64 	%rd6884, {%r4763, %r4762};
	xor.b64  	%rd6885, %rd6883, %rd6884;
	shf.l.wrap.b32 	%r4764, %r4758, %r4759, 23;
	shf.l.wrap.b32 	%r4765, %r4759, %r4758, 23;
	mov.b64 	%rd6886, {%r4765, %r4764};
	xor.b64  	%rd6887, %rd6885, %rd6886;
	add.s64 	%rd6888, %rd6882, %rd6887;
	add.s64 	%rd6889, %rd6888, -6327057829258317296;
	add.s64 	%rd6890, %rd6889, %rd6753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4766,%dummy}, %rd6864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4767}, %rd6864;
	}
	shf.r.wrap.b32 	%r4768, %r4767, %r4766, 28;
	shf.r.wrap.b32 	%r4769, %r4766, %r4767, 28;
	mov.b64 	%rd6891, {%r4769, %r4768};
	shf.l.wrap.b32 	%r4770, %r4766, %r4767, 30;
	shf.l.wrap.b32 	%r4771, %r4767, %r4766, 30;
	mov.b64 	%rd6892, {%r4771, %r4770};
	xor.b64  	%rd6893, %rd6891, %rd6892;
	shf.l.wrap.b32 	%r4772, %r4766, %r4767, 25;
	shf.l.wrap.b32 	%r4773, %r4767, %r4766, 25;
	mov.b64 	%rd6894, {%r4773, %r4772};
	xor.b64  	%rd6895, %rd6893, %rd6894;
	and.b64  	%rd6896, %rd6864, %rd6827;
	or.b64  	%rd6897, %rd6864, %rd6827;
	and.b64  	%rd6898, %rd6897, %rd6790;
	or.b64  	%rd6899, %rd6898, %rd6896;
	add.s64 	%rd6900, %rd6899, %rd6895;
	add.s64 	%rd6901, %rd6900, %rd6889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4774,%dummy}, %rd6840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4775}, %rd6840;
	}
	shf.r.wrap.b32 	%r4776, %r4775, %r4774, 19;
	shf.r.wrap.b32 	%r4777, %r4774, %r4775, 19;
	mov.b64 	%rd6902, {%r4777, %r4776};
	shf.l.wrap.b32 	%r4778, %r4774, %r4775, 3;
	shf.l.wrap.b32 	%r4779, %r4775, %r4774, 3;
	mov.b64 	%rd6903, {%r4779, %r4778};
	xor.b64  	%rd6904, %rd6902, %rd6903;
	shr.u64 	%rd6905, %rd6840, 6;
	xor.b64  	%rd6906, %rd6904, %rd6905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4780,%dummy}, %rd6131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4781}, %rd6131;
	}
	shf.r.wrap.b32 	%r4782, %r4781, %r4780, 1;
	shf.r.wrap.b32 	%r4783, %r4780, %r4781, 1;
	mov.b64 	%rd6907, {%r4783, %r4782};
	shf.r.wrap.b32 	%r4784, %r4781, %r4780, 8;
	shf.r.wrap.b32 	%r4785, %r4780, %r4781, 8;
	mov.b64 	%rd6908, {%r4785, %r4784};
	xor.b64  	%rd6909, %rd6907, %rd6908;
	shr.u64 	%rd6910, %rd6131, 7;
	xor.b64  	%rd6911, %rd6909, %rd6910;
	add.s64 	%rd6912, %rd6911, %rd6129;
	add.s64 	%rd6913, %rd6912, %rd6655;
	add.s64 	%rd6914, %rd6913, %rd6906;
	add.s64 	%rd6915, %rd6914, %rd6779;
	xor.b64  	%rd6916, %rd6853, %rd6816;
	and.b64  	%rd6917, %rd6890, %rd6916;
	xor.b64  	%rd6918, %rd6917, %rd6816;
	add.s64 	%rd6919, %rd6915, %rd6918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4786,%dummy}, %rd6890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4787}, %rd6890;
	}
	shf.r.wrap.b32 	%r4788, %r4787, %r4786, 14;
	shf.r.wrap.b32 	%r4789, %r4786, %r4787, 14;
	mov.b64 	%rd6920, {%r4789, %r4788};
	shf.r.wrap.b32 	%r4790, %r4787, %r4786, 18;
	shf.r.wrap.b32 	%r4791, %r4786, %r4787, 18;
	mov.b64 	%rd6921, {%r4791, %r4790};
	xor.b64  	%rd6922, %rd6920, %rd6921;
	shf.l.wrap.b32 	%r4792, %r4786, %r4787, 23;
	shf.l.wrap.b32 	%r4793, %r4787, %r4786, 23;
	mov.b64 	%rd6923, {%r4793, %r4792};
	xor.b64  	%rd6924, %rd6922, %rd6923;
	add.s64 	%rd6925, %rd6919, %rd6924;
	add.s64 	%rd6926, %rd6925, -5763719355590565569;
	add.s64 	%rd6927, %rd6926, %rd6790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4794,%dummy}, %rd6901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4795}, %rd6901;
	}
	shf.r.wrap.b32 	%r4796, %r4795, %r4794, 28;
	shf.r.wrap.b32 	%r4797, %r4794, %r4795, 28;
	mov.b64 	%rd6928, {%r4797, %r4796};
	shf.l.wrap.b32 	%r4798, %r4794, %r4795, 30;
	shf.l.wrap.b32 	%r4799, %r4795, %r4794, 30;
	mov.b64 	%rd6929, {%r4799, %r4798};
	xor.b64  	%rd6930, %rd6928, %rd6929;
	shf.l.wrap.b32 	%r4800, %r4794, %r4795, 25;
	shf.l.wrap.b32 	%r4801, %r4795, %r4794, 25;
	mov.b64 	%rd6931, {%r4801, %r4800};
	xor.b64  	%rd6932, %rd6930, %rd6931;
	and.b64  	%rd6933, %rd6901, %rd6864;
	or.b64  	%rd6934, %rd6901, %rd6864;
	and.b64  	%rd6935, %rd6934, %rd6827;
	or.b64  	%rd6936, %rd6935, %rd6933;
	add.s64 	%rd6937, %rd6936, %rd6932;
	add.s64 	%rd6938, %rd6937, %rd6926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4802,%dummy}, %rd6877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4803}, %rd6877;
	}
	shf.r.wrap.b32 	%r4804, %r4803, %r4802, 19;
	shf.r.wrap.b32 	%r4805, %r4802, %r4803, 19;
	mov.b64 	%rd6939, {%r4805, %r4804};
	shf.l.wrap.b32 	%r4806, %r4802, %r4803, 3;
	shf.l.wrap.b32 	%r4807, %r4803, %r4802, 3;
	mov.b64 	%rd6940, {%r4807, %r4806};
	xor.b64  	%rd6941, %rd6939, %rd6940;
	shr.u64 	%rd6942, %rd6877, 6;
	xor.b64  	%rd6943, %rd6941, %rd6942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4808,%dummy}, %rd6133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4809}, %rd6133;
	}
	shf.r.wrap.b32 	%r4810, %r4809, %r4808, 1;
	shf.r.wrap.b32 	%r4811, %r4808, %r4809, 1;
	mov.b64 	%rd6944, {%r4811, %r4810};
	shf.r.wrap.b32 	%r4812, %r4809, %r4808, 8;
	shf.r.wrap.b32 	%r4813, %r4808, %r4809, 8;
	mov.b64 	%rd6945, {%r4813, %r4812};
	xor.b64  	%rd6946, %rd6944, %rd6945;
	shr.u64 	%rd6947, %rd6133, 7;
	xor.b64  	%rd6948, %rd6946, %rd6947;
	add.s64 	%rd6949, %rd6948, %rd6131;
	add.s64 	%rd6950, %rd6949, %rd6692;
	add.s64 	%rd6951, %rd6950, %rd6943;
	add.s64 	%rd6952, %rd6951, %rd6816;
	xor.b64  	%rd6953, %rd6890, %rd6853;
	and.b64  	%rd6954, %rd6927, %rd6953;
	xor.b64  	%rd6955, %rd6954, %rd6853;
	add.s64 	%rd6956, %rd6952, %rd6955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4814,%dummy}, %rd6927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4815}, %rd6927;
	}
	shf.r.wrap.b32 	%r4816, %r4815, %r4814, 14;
	shf.r.wrap.b32 	%r4817, %r4814, %r4815, 14;
	mov.b64 	%rd6957, {%r4817, %r4816};
	shf.r.wrap.b32 	%r4818, %r4815, %r4814, 18;
	shf.r.wrap.b32 	%r4819, %r4814, %r4815, 18;
	mov.b64 	%rd6958, {%r4819, %r4818};
	xor.b64  	%rd6959, %rd6957, %rd6958;
	shf.l.wrap.b32 	%r4820, %r4814, %r4815, 23;
	shf.l.wrap.b32 	%r4821, %r4815, %r4814, 23;
	mov.b64 	%rd6960, {%r4821, %r4820};
	xor.b64  	%rd6961, %rd6959, %rd6960;
	add.s64 	%rd6962, %rd6956, %rd6961;
	add.s64 	%rd6963, %rd6962, -4658551843659510044;
	add.s64 	%rd6964, %rd6963, %rd6827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4822,%dummy}, %rd6938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4823}, %rd6938;
	}
	shf.r.wrap.b32 	%r4824, %r4823, %r4822, 28;
	shf.r.wrap.b32 	%r4825, %r4822, %r4823, 28;
	mov.b64 	%rd6965, {%r4825, %r4824};
	shf.l.wrap.b32 	%r4826, %r4822, %r4823, 30;
	shf.l.wrap.b32 	%r4827, %r4823, %r4822, 30;
	mov.b64 	%rd6966, {%r4827, %r4826};
	xor.b64  	%rd6967, %rd6965, %rd6966;
	shf.l.wrap.b32 	%r4828, %r4822, %r4823, 25;
	shf.l.wrap.b32 	%r4829, %r4823, %r4822, 25;
	mov.b64 	%rd6968, {%r4829, %r4828};
	xor.b64  	%rd6969, %rd6967, %rd6968;
	and.b64  	%rd6970, %rd6938, %rd6901;
	or.b64  	%rd6971, %rd6938, %rd6901;
	and.b64  	%rd6972, %rd6971, %rd6864;
	or.b64  	%rd6973, %rd6972, %rd6970;
	add.s64 	%rd6974, %rd6973, %rd6969;
	add.s64 	%rd6975, %rd6974, %rd6963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4830,%dummy}, %rd6914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4831}, %rd6914;
	}
	shf.r.wrap.b32 	%r4832, %r4831, %r4830, 19;
	shf.r.wrap.b32 	%r4833, %r4830, %r4831, 19;
	mov.b64 	%rd6976, {%r4833, %r4832};
	shf.l.wrap.b32 	%r4834, %r4830, %r4831, 3;
	shf.l.wrap.b32 	%r4835, %r4831, %r4830, 3;
	mov.b64 	%rd6977, {%r4835, %r4834};
	xor.b64  	%rd6978, %rd6976, %rd6977;
	shr.u64 	%rd6979, %rd6914, 6;
	xor.b64  	%rd6980, %rd6978, %rd6979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4836,%dummy}, %rd6135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4837}, %rd6135;
	}
	shf.r.wrap.b32 	%r4838, %r4837, %r4836, 1;
	shf.r.wrap.b32 	%r4839, %r4836, %r4837, 1;
	mov.b64 	%rd6981, {%r4839, %r4838};
	shf.r.wrap.b32 	%r4840, %r4837, %r4836, 8;
	shf.r.wrap.b32 	%r4841, %r4836, %r4837, 8;
	mov.b64 	%rd6982, {%r4841, %r4840};
	xor.b64  	%rd6983, %rd6981, %rd6982;
	shr.u64 	%rd6984, %rd6135, 7;
	xor.b64  	%rd6985, %rd6983, %rd6984;
	add.s64 	%rd6986, %rd6985, %rd6133;
	add.s64 	%rd6987, %rd6986, %rd6729;
	add.s64 	%rd6988, %rd6987, %rd6980;
	add.s64 	%rd6989, %rd6988, %rd6853;
	xor.b64  	%rd6990, %rd6927, %rd6890;
	and.b64  	%rd6991, %rd6964, %rd6990;
	xor.b64  	%rd6992, %rd6991, %rd6890;
	add.s64 	%rd6993, %rd6989, %rd6992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4842,%dummy}, %rd6964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4843}, %rd6964;
	}
	shf.r.wrap.b32 	%r4844, %r4843, %r4842, 14;
	shf.r.wrap.b32 	%r4845, %r4842, %r4843, 14;
	mov.b64 	%rd6994, {%r4845, %r4844};
	shf.r.wrap.b32 	%r4846, %r4843, %r4842, 18;
	shf.r.wrap.b32 	%r4847, %r4842, %r4843, 18;
	mov.b64 	%rd6995, {%r4847, %r4846};
	xor.b64  	%rd6996, %rd6994, %rd6995;
	shf.l.wrap.b32 	%r4848, %r4842, %r4843, 23;
	shf.l.wrap.b32 	%r4849, %r4843, %r4842, 23;
	mov.b64 	%rd6997, {%r4849, %r4848};
	xor.b64  	%rd6998, %rd6996, %rd6997;
	add.s64 	%rd6999, %rd6993, %rd6998;
	add.s64 	%rd7000, %rd6999, -4116276920077217854;
	add.s64 	%rd7001, %rd7000, %rd6864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4850,%dummy}, %rd6975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4851}, %rd6975;
	}
	shf.r.wrap.b32 	%r4852, %r4851, %r4850, 28;
	shf.r.wrap.b32 	%r4853, %r4850, %r4851, 28;
	mov.b64 	%rd7002, {%r4853, %r4852};
	shf.l.wrap.b32 	%r4854, %r4850, %r4851, 30;
	shf.l.wrap.b32 	%r4855, %r4851, %r4850, 30;
	mov.b64 	%rd7003, {%r4855, %r4854};
	xor.b64  	%rd7004, %rd7002, %rd7003;
	shf.l.wrap.b32 	%r4856, %r4850, %r4851, 25;
	shf.l.wrap.b32 	%r4857, %r4851, %r4850, 25;
	mov.b64 	%rd7005, {%r4857, %r4856};
	xor.b64  	%rd7006, %rd7004, %rd7005;
	and.b64  	%rd7007, %rd6975, %rd6938;
	or.b64  	%rd7008, %rd6975, %rd6938;
	and.b64  	%rd7009, %rd7008, %rd6901;
	or.b64  	%rd7010, %rd7009, %rd7007;
	add.s64 	%rd7011, %rd7010, %rd7006;
	add.s64 	%rd7012, %rd7011, %rd7000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4858,%dummy}, %rd6951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4859}, %rd6951;
	}
	shf.r.wrap.b32 	%r4860, %r4859, %r4858, 19;
	shf.r.wrap.b32 	%r4861, %r4858, %r4859, 19;
	mov.b64 	%rd7013, {%r4861, %r4860};
	shf.l.wrap.b32 	%r4862, %r4858, %r4859, 3;
	shf.l.wrap.b32 	%r4863, %r4859, %r4858, 3;
	mov.b64 	%rd7014, {%r4863, %r4862};
	xor.b64  	%rd7015, %rd7013, %rd7014;
	shr.u64 	%rd7016, %rd6951, 6;
	xor.b64  	%rd7017, %rd7015, %rd7016;
	shf.r.wrap.b32 	%r4864, %r4495, %r4494, 1;
	shf.r.wrap.b32 	%r4865, %r4494, %r4495, 1;
	mov.b64 	%rd7018, {%r4865, %r4864};
	shf.r.wrap.b32 	%r4866, %r4495, %r4494, 8;
	shf.r.wrap.b32 	%r4867, %r4494, %r4495, 8;
	mov.b64 	%rd7019, {%r4867, %r4866};
	xor.b64  	%rd7020, %rd7018, %rd7019;
	shr.u64 	%rd7021, %rd6137, 7;
	xor.b64  	%rd7022, %rd7020, %rd7021;
	add.s64 	%rd7023, %rd7022, %rd6135;
	add.s64 	%rd7024, %rd7023, %rd6766;
	add.s64 	%rd7025, %rd7024, %rd7017;
	add.s64 	%rd7026, %rd7025, %rd6890;
	xor.b64  	%rd7027, %rd6964, %rd6927;
	and.b64  	%rd7028, %rd7001, %rd7027;
	xor.b64  	%rd7029, %rd7028, %rd6927;
	add.s64 	%rd7030, %rd7026, %rd7029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4868,%dummy}, %rd7001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4869}, %rd7001;
	}
	shf.r.wrap.b32 	%r4870, %r4869, %r4868, 14;
	shf.r.wrap.b32 	%r4871, %r4868, %r4869, 14;
	mov.b64 	%rd7031, {%r4871, %r4870};
	shf.r.wrap.b32 	%r4872, %r4869, %r4868, 18;
	shf.r.wrap.b32 	%r4873, %r4868, %r4869, 18;
	mov.b64 	%rd7032, {%r4873, %r4872};
	xor.b64  	%rd7033, %rd7031, %rd7032;
	shf.l.wrap.b32 	%r4874, %r4868, %r4869, 23;
	shf.l.wrap.b32 	%r4875, %r4869, %r4868, 23;
	mov.b64 	%rd7034, {%r4875, %r4874};
	xor.b64  	%rd7035, %rd7033, %rd7034;
	add.s64 	%rd7036, %rd7030, %rd7035;
	add.s64 	%rd7037, %rd7036, -3051310485924567259;
	add.s64 	%rd7038, %rd7037, %rd6901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4876,%dummy}, %rd7012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4877}, %rd7012;
	}
	shf.r.wrap.b32 	%r4878, %r4877, %r4876, 28;
	shf.r.wrap.b32 	%r4879, %r4876, %r4877, 28;
	mov.b64 	%rd7039, {%r4879, %r4878};
	shf.l.wrap.b32 	%r4880, %r4876, %r4877, 30;
	shf.l.wrap.b32 	%r4881, %r4877, %r4876, 30;
	mov.b64 	%rd7040, {%r4881, %r4880};
	xor.b64  	%rd7041, %rd7039, %rd7040;
	shf.l.wrap.b32 	%r4882, %r4876, %r4877, 25;
	shf.l.wrap.b32 	%r4883, %r4877, %r4876, 25;
	mov.b64 	%rd7042, {%r4883, %r4882};
	xor.b64  	%rd7043, %rd7041, %rd7042;
	and.b64  	%rd7044, %rd7012, %rd6975;
	or.b64  	%rd7045, %rd7012, %rd6975;
	and.b64  	%rd7046, %rd7045, %rd6938;
	or.b64  	%rd7047, %rd7046, %rd7044;
	add.s64 	%rd7048, %rd7047, %rd7043;
	add.s64 	%rd7049, %rd7048, %rd7037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4884,%dummy}, %rd6988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4885}, %rd6988;
	}
	shf.r.wrap.b32 	%r4886, %r4885, %r4884, 19;
	shf.r.wrap.b32 	%r4887, %r4884, %r4885, 19;
	mov.b64 	%rd7050, {%r4887, %r4886};
	shf.l.wrap.b32 	%r4888, %r4884, %r4885, 3;
	shf.l.wrap.b32 	%r4889, %r4885, %r4884, 3;
	mov.b64 	%rd7051, {%r4889, %r4888};
	xor.b64  	%rd7052, %rd7050, %rd7051;
	shr.u64 	%rd7053, %rd6988, 6;
	xor.b64  	%rd7054, %rd7052, %rd7053;
	shf.r.wrap.b32 	%r4890, %r4523, %r4522, 1;
	shf.r.wrap.b32 	%r4891, %r4522, %r4523, 1;
	mov.b64 	%rd7055, {%r4891, %r4890};
	shf.r.wrap.b32 	%r4892, %r4523, %r4522, 8;
	shf.r.wrap.b32 	%r4893, %r4522, %r4523, 8;
	mov.b64 	%rd7056, {%r4893, %r4892};
	xor.b64  	%rd7057, %rd7055, %rd7056;
	shr.u64 	%rd7058, %rd6139, 7;
	xor.b64  	%rd7059, %rd7057, %rd7058;
	add.s64 	%rd7060, %rd7059, %rd6137;
	add.s64 	%rd7061, %rd7060, %rd6803;
	add.s64 	%rd7062, %rd7061, %rd7054;
	add.s64 	%rd7063, %rd7062, %rd6927;
	xor.b64  	%rd7064, %rd7001, %rd6964;
	and.b64  	%rd7065, %rd7038, %rd7064;
	xor.b64  	%rd7066, %rd7065, %rd6964;
	add.s64 	%rd7067, %rd7063, %rd7066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4894,%dummy}, %rd7038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4895}, %rd7038;
	}
	shf.r.wrap.b32 	%r4896, %r4895, %r4894, 14;
	shf.r.wrap.b32 	%r4897, %r4894, %r4895, 14;
	mov.b64 	%rd7068, {%r4897, %r4896};
	shf.r.wrap.b32 	%r4898, %r4895, %r4894, 18;
	shf.r.wrap.b32 	%r4899, %r4894, %r4895, 18;
	mov.b64 	%rd7069, {%r4899, %r4898};
	xor.b64  	%rd7070, %rd7068, %rd7069;
	shf.l.wrap.b32 	%r4900, %r4894, %r4895, 23;
	shf.l.wrap.b32 	%r4901, %r4895, %r4894, 23;
	mov.b64 	%rd7071, {%r4901, %r4900};
	xor.b64  	%rd7072, %rd7070, %rd7071;
	add.s64 	%rd7073, %rd7067, %rd7072;
	add.s64 	%rd7074, %rd7073, 489312712824947311;
	add.s64 	%rd7075, %rd7074, %rd6938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4902,%dummy}, %rd7049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4903}, %rd7049;
	}
	shf.r.wrap.b32 	%r4904, %r4903, %r4902, 28;
	shf.r.wrap.b32 	%r4905, %r4902, %r4903, 28;
	mov.b64 	%rd7076, {%r4905, %r4904};
	shf.l.wrap.b32 	%r4906, %r4902, %r4903, 30;
	shf.l.wrap.b32 	%r4907, %r4903, %r4902, 30;
	mov.b64 	%rd7077, {%r4907, %r4906};
	xor.b64  	%rd7078, %rd7076, %rd7077;
	shf.l.wrap.b32 	%r4908, %r4902, %r4903, 25;
	shf.l.wrap.b32 	%r4909, %r4903, %r4902, 25;
	mov.b64 	%rd7079, {%r4909, %r4908};
	xor.b64  	%rd7080, %rd7078, %rd7079;
	and.b64  	%rd7081, %rd7049, %rd7012;
	or.b64  	%rd7082, %rd7049, %rd7012;
	and.b64  	%rd7083, %rd7082, %rd6975;
	or.b64  	%rd7084, %rd7083, %rd7081;
	add.s64 	%rd7085, %rd7084, %rd7080;
	add.s64 	%rd7086, %rd7085, %rd7074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4910,%dummy}, %rd7025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4911}, %rd7025;
	}
	shf.r.wrap.b32 	%r4912, %r4911, %r4910, 19;
	shf.r.wrap.b32 	%r4913, %r4910, %r4911, 19;
	mov.b64 	%rd7087, {%r4913, %r4912};
	shf.l.wrap.b32 	%r4914, %r4910, %r4911, 3;
	shf.l.wrap.b32 	%r4915, %r4911, %r4910, 3;
	mov.b64 	%rd7088, {%r4915, %r4914};
	xor.b64  	%rd7089, %rd7087, %rd7088;
	shr.u64 	%rd7090, %rd7025, 6;
	xor.b64  	%rd7091, %rd7089, %rd7090;
	shf.r.wrap.b32 	%r4916, %r4551, %r4550, 1;
	shf.r.wrap.b32 	%r4917, %r4550, %r4551, 1;
	mov.b64 	%rd7092, {%r4917, %r4916};
	shf.r.wrap.b32 	%r4918, %r4551, %r4550, 8;
	shf.r.wrap.b32 	%r4919, %r4550, %r4551, 8;
	mov.b64 	%rd7093, {%r4919, %r4918};
	xor.b64  	%rd7094, %rd7092, %rd7093;
	shr.u64 	%rd7095, %rd6544, 7;
	xor.b64  	%rd7096, %rd7094, %rd7095;
	add.s64 	%rd7097, %rd7096, %rd6139;
	add.s64 	%rd7098, %rd7097, %rd6840;
	add.s64 	%rd7099, %rd7098, %rd7091;
	add.s64 	%rd7100, %rd7099, %rd6964;
	xor.b64  	%rd7101, %rd7038, %rd7001;
	and.b64  	%rd7102, %rd7075, %rd7101;
	xor.b64  	%rd7103, %rd7102, %rd7001;
	add.s64 	%rd7104, %rd7100, %rd7103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4920,%dummy}, %rd7075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd7075;
	}
	shf.r.wrap.b32 	%r4922, %r4921, %r4920, 14;
	shf.r.wrap.b32 	%r4923, %r4920, %r4921, 14;
	mov.b64 	%rd7105, {%r4923, %r4922};
	shf.r.wrap.b32 	%r4924, %r4921, %r4920, 18;
	shf.r.wrap.b32 	%r4925, %r4920, %r4921, 18;
	mov.b64 	%rd7106, {%r4925, %r4924};
	xor.b64  	%rd7107, %rd7105, %rd7106;
	shf.l.wrap.b32 	%r4926, %r4920, %r4921, 23;
	shf.l.wrap.b32 	%r4927, %r4921, %r4920, 23;
	mov.b64 	%rd7108, {%r4927, %r4926};
	xor.b64  	%rd7109, %rd7107, %rd7108;
	add.s64 	%rd7110, %rd7104, %rd7109;
	add.s64 	%rd7111, %rd7110, 1452737877330783856;
	add.s64 	%rd7112, %rd7111, %rd6975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4928,%dummy}, %rd7086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4929}, %rd7086;
	}
	shf.r.wrap.b32 	%r4930, %r4929, %r4928, 28;
	shf.r.wrap.b32 	%r4931, %r4928, %r4929, 28;
	mov.b64 	%rd7113, {%r4931, %r4930};
	shf.l.wrap.b32 	%r4932, %r4928, %r4929, 30;
	shf.l.wrap.b32 	%r4933, %r4929, %r4928, 30;
	mov.b64 	%rd7114, {%r4933, %r4932};
	xor.b64  	%rd7115, %rd7113, %rd7114;
	shf.l.wrap.b32 	%r4934, %r4928, %r4929, 25;
	shf.l.wrap.b32 	%r4935, %r4929, %r4928, 25;
	mov.b64 	%rd7116, {%r4935, %r4934};
	xor.b64  	%rd7117, %rd7115, %rd7116;
	and.b64  	%rd7118, %rd7086, %rd7049;
	or.b64  	%rd7119, %rd7086, %rd7049;
	and.b64  	%rd7120, %rd7119, %rd7012;
	or.b64  	%rd7121, %rd7120, %rd7118;
	add.s64 	%rd7122, %rd7121, %rd7117;
	add.s64 	%rd7123, %rd7122, %rd7111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4936,%dummy}, %rd7062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4937}, %rd7062;
	}
	shf.r.wrap.b32 	%r4938, %r4937, %r4936, 19;
	shf.r.wrap.b32 	%r4939, %r4936, %r4937, 19;
	mov.b64 	%rd7124, {%r4939, %r4938};
	shf.l.wrap.b32 	%r4940, %r4936, %r4937, 3;
	shf.l.wrap.b32 	%r4941, %r4937, %r4936, 3;
	mov.b64 	%rd7125, {%r4941, %r4940};
	xor.b64  	%rd7126, %rd7124, %rd7125;
	shr.u64 	%rd7127, %rd7062, 6;
	xor.b64  	%rd7128, %rd7126, %rd7127;
	shf.r.wrap.b32 	%r4942, %r4579, %r4578, 1;
	shf.r.wrap.b32 	%r4943, %r4578, %r4579, 1;
	mov.b64 	%rd7129, {%r4943, %r4942};
	shf.r.wrap.b32 	%r4944, %r4579, %r4578, 8;
	shf.r.wrap.b32 	%r4945, %r4578, %r4579, 8;
	mov.b64 	%rd7130, {%r4945, %r4944};
	xor.b64  	%rd7131, %rd7129, %rd7130;
	shr.u64 	%rd7132, %rd6581, 7;
	xor.b64  	%rd7133, %rd7131, %rd7132;
	add.s64 	%rd7134, %rd7133, %rd6544;
	add.s64 	%rd7135, %rd7134, %rd6877;
	add.s64 	%rd7136, %rd7135, %rd7128;
	add.s64 	%rd7137, %rd7136, %rd7001;
	xor.b64  	%rd7138, %rd7075, %rd7038;
	and.b64  	%rd7139, %rd7112, %rd7138;
	xor.b64  	%rd7140, %rd7139, %rd7038;
	add.s64 	%rd7141, %rd7137, %rd7140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4946,%dummy}, %rd7112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4947}, %rd7112;
	}
	shf.r.wrap.b32 	%r4948, %r4947, %r4946, 14;
	shf.r.wrap.b32 	%r4949, %r4946, %r4947, 14;
	mov.b64 	%rd7142, {%r4949, %r4948};
	shf.r.wrap.b32 	%r4950, %r4947, %r4946, 18;
	shf.r.wrap.b32 	%r4951, %r4946, %r4947, 18;
	mov.b64 	%rd7143, {%r4951, %r4950};
	xor.b64  	%rd7144, %rd7142, %rd7143;
	shf.l.wrap.b32 	%r4952, %r4946, %r4947, 23;
	shf.l.wrap.b32 	%r4953, %r4947, %r4946, 23;
	mov.b64 	%rd7145, {%r4953, %r4952};
	xor.b64  	%rd7146, %rd7144, %rd7145;
	add.s64 	%rd7147, %rd7141, %rd7146;
	add.s64 	%rd7148, %rd7147, 2861767655752347644;
	add.s64 	%rd7149, %rd7148, %rd7012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4954,%dummy}, %rd7123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4955}, %rd7123;
	}
	shf.r.wrap.b32 	%r4956, %r4955, %r4954, 28;
	shf.r.wrap.b32 	%r4957, %r4954, %r4955, 28;
	mov.b64 	%rd7150, {%r4957, %r4956};
	shf.l.wrap.b32 	%r4958, %r4954, %r4955, 30;
	shf.l.wrap.b32 	%r4959, %r4955, %r4954, 30;
	mov.b64 	%rd7151, {%r4959, %r4958};
	xor.b64  	%rd7152, %rd7150, %rd7151;
	shf.l.wrap.b32 	%r4960, %r4954, %r4955, 25;
	shf.l.wrap.b32 	%r4961, %r4955, %r4954, 25;
	mov.b64 	%rd7153, {%r4961, %r4960};
	xor.b64  	%rd7154, %rd7152, %rd7153;
	and.b64  	%rd7155, %rd7123, %rd7086;
	or.b64  	%rd7156, %rd7123, %rd7086;
	and.b64  	%rd7157, %rd7156, %rd7049;
	or.b64  	%rd7158, %rd7157, %rd7155;
	add.s64 	%rd7159, %rd7158, %rd7154;
	add.s64 	%rd7160, %rd7159, %rd7148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4962,%dummy}, %rd7099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4963}, %rd7099;
	}
	shf.r.wrap.b32 	%r4964, %r4963, %r4962, 19;
	shf.r.wrap.b32 	%r4965, %r4962, %r4963, 19;
	mov.b64 	%rd7161, {%r4965, %r4964};
	shf.l.wrap.b32 	%r4966, %r4962, %r4963, 3;
	shf.l.wrap.b32 	%r4967, %r4963, %r4962, 3;
	mov.b64 	%rd7162, {%r4967, %r4966};
	xor.b64  	%rd7163, %rd7161, %rd7162;
	shr.u64 	%rd7164, %rd7099, 6;
	xor.b64  	%rd7165, %rd7163, %rd7164;
	shf.r.wrap.b32 	%r4968, %r4607, %r4606, 1;
	shf.r.wrap.b32 	%r4969, %r4606, %r4607, 1;
	mov.b64 	%rd7166, {%r4969, %r4968};
	shf.r.wrap.b32 	%r4970, %r4607, %r4606, 8;
	shf.r.wrap.b32 	%r4971, %r4606, %r4607, 8;
	mov.b64 	%rd7167, {%r4971, %r4970};
	xor.b64  	%rd7168, %rd7166, %rd7167;
	shr.u64 	%rd7169, %rd6618, 7;
	xor.b64  	%rd7170, %rd7168, %rd7169;
	add.s64 	%rd7171, %rd7170, %rd6581;
	add.s64 	%rd7172, %rd7171, %rd6914;
	add.s64 	%rd7173, %rd7172, %rd7165;
	add.s64 	%rd7174, %rd7173, %rd7038;
	xor.b64  	%rd7175, %rd7112, %rd7075;
	and.b64  	%rd7176, %rd7149, %rd7175;
	xor.b64  	%rd7177, %rd7176, %rd7075;
	add.s64 	%rd7178, %rd7174, %rd7177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4972,%dummy}, %rd7149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4973}, %rd7149;
	}
	shf.r.wrap.b32 	%r4974, %r4973, %r4972, 14;
	shf.r.wrap.b32 	%r4975, %r4972, %r4973, 14;
	mov.b64 	%rd7179, {%r4975, %r4974};
	shf.r.wrap.b32 	%r4976, %r4973, %r4972, 18;
	shf.r.wrap.b32 	%r4977, %r4972, %r4973, 18;
	mov.b64 	%rd7180, {%r4977, %r4976};
	xor.b64  	%rd7181, %rd7179, %rd7180;
	shf.l.wrap.b32 	%r4978, %r4972, %r4973, 23;
	shf.l.wrap.b32 	%r4979, %r4973, %r4972, 23;
	mov.b64 	%rd7182, {%r4979, %r4978};
	xor.b64  	%rd7183, %rd7181, %rd7182;
	add.s64 	%rd7184, %rd7178, %rd7183;
	add.s64 	%rd7185, %rd7184, 3322285676063803686;
	add.s64 	%rd7186, %rd7185, %rd7049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4980,%dummy}, %rd7160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4981}, %rd7160;
	}
	shf.r.wrap.b32 	%r4982, %r4981, %r4980, 28;
	shf.r.wrap.b32 	%r4983, %r4980, %r4981, 28;
	mov.b64 	%rd7187, {%r4983, %r4982};
	shf.l.wrap.b32 	%r4984, %r4980, %r4981, 30;
	shf.l.wrap.b32 	%r4985, %r4981, %r4980, 30;
	mov.b64 	%rd7188, {%r4985, %r4984};
	xor.b64  	%rd7189, %rd7187, %rd7188;
	shf.l.wrap.b32 	%r4986, %r4980, %r4981, 25;
	shf.l.wrap.b32 	%r4987, %r4981, %r4980, 25;
	mov.b64 	%rd7190, {%r4987, %r4986};
	xor.b64  	%rd7191, %rd7189, %rd7190;
	and.b64  	%rd7192, %rd7160, %rd7123;
	or.b64  	%rd7193, %rd7160, %rd7123;
	and.b64  	%rd7194, %rd7193, %rd7086;
	or.b64  	%rd7195, %rd7194, %rd7192;
	add.s64 	%rd7196, %rd7195, %rd7191;
	add.s64 	%rd7197, %rd7196, %rd7185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4988,%dummy}, %rd7136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4989}, %rd7136;
	}
	shf.r.wrap.b32 	%r4990, %r4989, %r4988, 19;
	shf.r.wrap.b32 	%r4991, %r4988, %r4989, 19;
	mov.b64 	%rd7198, {%r4991, %r4990};
	shf.l.wrap.b32 	%r4992, %r4988, %r4989, 3;
	shf.l.wrap.b32 	%r4993, %r4989, %r4988, 3;
	mov.b64 	%rd7199, {%r4993, %r4992};
	xor.b64  	%rd7200, %rd7198, %rd7199;
	shr.u64 	%rd7201, %rd7136, 6;
	xor.b64  	%rd7202, %rd7200, %rd7201;
	shf.r.wrap.b32 	%r4994, %r4635, %r4634, 1;
	shf.r.wrap.b32 	%r4995, %r4634, %r4635, 1;
	mov.b64 	%rd7203, {%r4995, %r4994};
	shf.r.wrap.b32 	%r4996, %r4635, %r4634, 8;
	shf.r.wrap.b32 	%r4997, %r4634, %r4635, 8;
	mov.b64 	%rd7204, {%r4997, %r4996};
	xor.b64  	%rd7205, %rd7203, %rd7204;
	shr.u64 	%rd7206, %rd6655, 7;
	xor.b64  	%rd7207, %rd7205, %rd7206;
	add.s64 	%rd7208, %rd7207, %rd6618;
	add.s64 	%rd7209, %rd7208, %rd6951;
	add.s64 	%rd7210, %rd7209, %rd7202;
	add.s64 	%rd7211, %rd7210, %rd7075;
	xor.b64  	%rd7212, %rd7149, %rd7112;
	and.b64  	%rd7213, %rd7186, %rd7212;
	xor.b64  	%rd7214, %rd7213, %rd7112;
	add.s64 	%rd7215, %rd7211, %rd7214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4998,%dummy}, %rd7186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4999}, %rd7186;
	}
	shf.r.wrap.b32 	%r5000, %r4999, %r4998, 14;
	shf.r.wrap.b32 	%r5001, %r4998, %r4999, 14;
	mov.b64 	%rd7216, {%r5001, %r5000};
	shf.r.wrap.b32 	%r5002, %r4999, %r4998, 18;
	shf.r.wrap.b32 	%r5003, %r4998, %r4999, 18;
	mov.b64 	%rd7217, {%r5003, %r5002};
	xor.b64  	%rd7218, %rd7216, %rd7217;
	shf.l.wrap.b32 	%r5004, %r4998, %r4999, 23;
	shf.l.wrap.b32 	%r5005, %r4999, %r4998, 23;
	mov.b64 	%rd7219, {%r5005, %r5004};
	xor.b64  	%rd7220, %rd7218, %rd7219;
	add.s64 	%rd7221, %rd7215, %rd7220;
	add.s64 	%rd7222, %rd7221, 5560940570517711597;
	add.s64 	%rd7223, %rd7222, %rd7086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5006,%dummy}, %rd7197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5007}, %rd7197;
	}
	shf.r.wrap.b32 	%r5008, %r5007, %r5006, 28;
	shf.r.wrap.b32 	%r5009, %r5006, %r5007, 28;
	mov.b64 	%rd7224, {%r5009, %r5008};
	shf.l.wrap.b32 	%r5010, %r5006, %r5007, 30;
	shf.l.wrap.b32 	%r5011, %r5007, %r5006, 30;
	mov.b64 	%rd7225, {%r5011, %r5010};
	xor.b64  	%rd7226, %rd7224, %rd7225;
	shf.l.wrap.b32 	%r5012, %r5006, %r5007, 25;
	shf.l.wrap.b32 	%r5013, %r5007, %r5006, 25;
	mov.b64 	%rd7227, {%r5013, %r5012};
	xor.b64  	%rd7228, %rd7226, %rd7227;
	and.b64  	%rd7229, %rd7197, %rd7160;
	or.b64  	%rd7230, %rd7197, %rd7160;
	and.b64  	%rd7231, %rd7230, %rd7123;
	or.b64  	%rd7232, %rd7231, %rd7229;
	add.s64 	%rd7233, %rd7232, %rd7228;
	add.s64 	%rd7234, %rd7233, %rd7222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5014,%dummy}, %rd7173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5015}, %rd7173;
	}
	shf.r.wrap.b32 	%r5016, %r5015, %r5014, 19;
	shf.r.wrap.b32 	%r5017, %r5014, %r5015, 19;
	mov.b64 	%rd7235, {%r5017, %r5016};
	shf.l.wrap.b32 	%r5018, %r5014, %r5015, 3;
	shf.l.wrap.b32 	%r5019, %r5015, %r5014, 3;
	mov.b64 	%rd7236, {%r5019, %r5018};
	xor.b64  	%rd7237, %rd7235, %rd7236;
	shr.u64 	%rd7238, %rd7173, 6;
	xor.b64  	%rd7239, %rd7237, %rd7238;
	shf.r.wrap.b32 	%r5020, %r4663, %r4662, 1;
	shf.r.wrap.b32 	%r5021, %r4662, %r4663, 1;
	mov.b64 	%rd7240, {%r5021, %r5020};
	shf.r.wrap.b32 	%r5022, %r4663, %r4662, 8;
	shf.r.wrap.b32 	%r5023, %r4662, %r4663, 8;
	mov.b64 	%rd7241, {%r5023, %r5022};
	xor.b64  	%rd7242, %rd7240, %rd7241;
	shr.u64 	%rd7243, %rd6692, 7;
	xor.b64  	%rd7244, %rd7242, %rd7243;
	add.s64 	%rd7245, %rd7244, %rd6655;
	add.s64 	%rd7246, %rd7245, %rd6988;
	add.s64 	%rd7247, %rd7246, %rd7239;
	add.s64 	%rd7248, %rd7247, %rd7112;
	xor.b64  	%rd7249, %rd7186, %rd7149;
	and.b64  	%rd7250, %rd7223, %rd7249;
	xor.b64  	%rd7251, %rd7250, %rd7149;
	add.s64 	%rd7252, %rd7248, %rd7251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5024,%dummy}, %rd7223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5025}, %rd7223;
	}
	shf.r.wrap.b32 	%r5026, %r5025, %r5024, 14;
	shf.r.wrap.b32 	%r5027, %r5024, %r5025, 14;
	mov.b64 	%rd7253, {%r5027, %r5026};
	shf.r.wrap.b32 	%r5028, %r5025, %r5024, 18;
	shf.r.wrap.b32 	%r5029, %r5024, %r5025, 18;
	mov.b64 	%rd7254, {%r5029, %r5028};
	xor.b64  	%rd7255, %rd7253, %rd7254;
	shf.l.wrap.b32 	%r5030, %r5024, %r5025, 23;
	shf.l.wrap.b32 	%r5031, %r5025, %r5024, 23;
	mov.b64 	%rd7256, {%r5031, %r5030};
	xor.b64  	%rd7257, %rd7255, %rd7256;
	add.s64 	%rd7258, %rd7252, %rd7257;
	add.s64 	%rd7259, %rd7258, 5996557281743188959;
	add.s64 	%rd7260, %rd7259, %rd7123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5032,%dummy}, %rd7234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd7234;
	}
	shf.r.wrap.b32 	%r5034, %r5033, %r5032, 28;
	shf.r.wrap.b32 	%r5035, %r5032, %r5033, 28;
	mov.b64 	%rd7261, {%r5035, %r5034};
	shf.l.wrap.b32 	%r5036, %r5032, %r5033, 30;
	shf.l.wrap.b32 	%r5037, %r5033, %r5032, 30;
	mov.b64 	%rd7262, {%r5037, %r5036};
	xor.b64  	%rd7263, %rd7261, %rd7262;
	shf.l.wrap.b32 	%r5038, %r5032, %r5033, 25;
	shf.l.wrap.b32 	%r5039, %r5033, %r5032, 25;
	mov.b64 	%rd7264, {%r5039, %r5038};
	xor.b64  	%rd7265, %rd7263, %rd7264;
	and.b64  	%rd7266, %rd7234, %rd7197;
	or.b64  	%rd7267, %rd7234, %rd7197;
	and.b64  	%rd7268, %rd7267, %rd7160;
	or.b64  	%rd7269, %rd7268, %rd7266;
	add.s64 	%rd7270, %rd7269, %rd7265;
	add.s64 	%rd7271, %rd7270, %rd7259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5040,%dummy}, %rd7210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5041}, %rd7210;
	}
	shf.r.wrap.b32 	%r5042, %r5041, %r5040, 19;
	shf.r.wrap.b32 	%r5043, %r5040, %r5041, 19;
	mov.b64 	%rd7272, {%r5043, %r5042};
	shf.l.wrap.b32 	%r5044, %r5040, %r5041, 3;
	shf.l.wrap.b32 	%r5045, %r5041, %r5040, 3;
	mov.b64 	%rd7273, {%r5045, %r5044};
	xor.b64  	%rd7274, %rd7272, %rd7273;
	shr.u64 	%rd7275, %rd7210, 6;
	xor.b64  	%rd7276, %rd7274, %rd7275;
	shf.r.wrap.b32 	%r5046, %r4691, %r4690, 1;
	shf.r.wrap.b32 	%r5047, %r4690, %r4691, 1;
	mov.b64 	%rd7277, {%r5047, %r5046};
	shf.r.wrap.b32 	%r5048, %r4691, %r4690, 8;
	shf.r.wrap.b32 	%r5049, %r4690, %r4691, 8;
	mov.b64 	%rd7278, {%r5049, %r5048};
	xor.b64  	%rd7279, %rd7277, %rd7278;
	shr.u64 	%rd7280, %rd6729, 7;
	xor.b64  	%rd7281, %rd7279, %rd7280;
	add.s64 	%rd7282, %rd7281, %rd6692;
	add.s64 	%rd7283, %rd7282, %rd7025;
	add.s64 	%rd7284, %rd7283, %rd7276;
	add.s64 	%rd7285, %rd7284, %rd7149;
	xor.b64  	%rd7286, %rd7223, %rd7186;
	and.b64  	%rd7287, %rd7260, %rd7286;
	xor.b64  	%rd7288, %rd7287, %rd7186;
	add.s64 	%rd7289, %rd7285, %rd7288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5050,%dummy}, %rd7260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5051}, %rd7260;
	}
	shf.r.wrap.b32 	%r5052, %r5051, %r5050, 14;
	shf.r.wrap.b32 	%r5053, %r5050, %r5051, 14;
	mov.b64 	%rd7290, {%r5053, %r5052};
	shf.r.wrap.b32 	%r5054, %r5051, %r5050, 18;
	shf.r.wrap.b32 	%r5055, %r5050, %r5051, 18;
	mov.b64 	%rd7291, {%r5055, %r5054};
	xor.b64  	%rd7292, %rd7290, %rd7291;
	shf.l.wrap.b32 	%r5056, %r5050, %r5051, 23;
	shf.l.wrap.b32 	%r5057, %r5051, %r5050, 23;
	mov.b64 	%rd7293, {%r5057, %r5056};
	xor.b64  	%rd7294, %rd7292, %rd7293;
	add.s64 	%rd7295, %rd7289, %rd7294;
	add.s64 	%rd7296, %rd7295, 7280758554555802590;
	add.s64 	%rd7297, %rd7296, %rd7160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5058,%dummy}, %rd7271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5059}, %rd7271;
	}
	shf.r.wrap.b32 	%r5060, %r5059, %r5058, 28;
	shf.r.wrap.b32 	%r5061, %r5058, %r5059, 28;
	mov.b64 	%rd7298, {%r5061, %r5060};
	shf.l.wrap.b32 	%r5062, %r5058, %r5059, 30;
	shf.l.wrap.b32 	%r5063, %r5059, %r5058, 30;
	mov.b64 	%rd7299, {%r5063, %r5062};
	xor.b64  	%rd7300, %rd7298, %rd7299;
	shf.l.wrap.b32 	%r5064, %r5058, %r5059, 25;
	shf.l.wrap.b32 	%r5065, %r5059, %r5058, 25;
	mov.b64 	%rd7301, {%r5065, %r5064};
	xor.b64  	%rd7302, %rd7300, %rd7301;
	and.b64  	%rd7303, %rd7271, %rd7234;
	or.b64  	%rd7304, %rd7271, %rd7234;
	and.b64  	%rd7305, %rd7304, %rd7197;
	or.b64  	%rd7306, %rd7305, %rd7303;
	add.s64 	%rd7307, %rd7306, %rd7302;
	add.s64 	%rd7308, %rd7307, %rd7296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5066,%dummy}, %rd7247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5067}, %rd7247;
	}
	shf.r.wrap.b32 	%r5068, %r5067, %r5066, 19;
	shf.r.wrap.b32 	%r5069, %r5066, %r5067, 19;
	mov.b64 	%rd7309, {%r5069, %r5068};
	shf.l.wrap.b32 	%r5070, %r5066, %r5067, 3;
	shf.l.wrap.b32 	%r5071, %r5067, %r5066, 3;
	mov.b64 	%rd7310, {%r5071, %r5070};
	xor.b64  	%rd7311, %rd7309, %rd7310;
	shr.u64 	%rd7312, %rd7247, 6;
	xor.b64  	%rd7313, %rd7311, %rd7312;
	shf.r.wrap.b32 	%r5072, %r4719, %r4718, 1;
	shf.r.wrap.b32 	%r5073, %r4718, %r4719, 1;
	mov.b64 	%rd7314, {%r5073, %r5072};
	shf.r.wrap.b32 	%r5074, %r4719, %r4718, 8;
	shf.r.wrap.b32 	%r5075, %r4718, %r4719, 8;
	mov.b64 	%rd7315, {%r5075, %r5074};
	xor.b64  	%rd7316, %rd7314, %rd7315;
	shr.u64 	%rd7317, %rd6766, 7;
	xor.b64  	%rd7318, %rd7316, %rd7317;
	add.s64 	%rd7319, %rd7318, %rd6729;
	add.s64 	%rd7320, %rd7319, %rd7062;
	add.s64 	%rd7321, %rd7320, %rd7313;
	add.s64 	%rd7322, %rd7321, %rd7186;
	xor.b64  	%rd7323, %rd7260, %rd7223;
	and.b64  	%rd7324, %rd7297, %rd7323;
	xor.b64  	%rd7325, %rd7324, %rd7223;
	add.s64 	%rd7326, %rd7322, %rd7325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5076,%dummy}, %rd7297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5077}, %rd7297;
	}
	shf.r.wrap.b32 	%r5078, %r5077, %r5076, 14;
	shf.r.wrap.b32 	%r5079, %r5076, %r5077, 14;
	mov.b64 	%rd7327, {%r5079, %r5078};
	shf.r.wrap.b32 	%r5080, %r5077, %r5076, 18;
	shf.r.wrap.b32 	%r5081, %r5076, %r5077, 18;
	mov.b64 	%rd7328, {%r5081, %r5080};
	xor.b64  	%rd7329, %rd7327, %rd7328;
	shf.l.wrap.b32 	%r5082, %r5076, %r5077, 23;
	shf.l.wrap.b32 	%r5083, %r5077, %r5076, 23;
	mov.b64 	%rd7330, {%r5083, %r5082};
	xor.b64  	%rd7331, %rd7329, %rd7330;
	add.s64 	%rd7332, %rd7326, %rd7331;
	add.s64 	%rd7333, %rd7332, 8532644243296465576;
	add.s64 	%rd7334, %rd7333, %rd7197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5084,%dummy}, %rd7308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5085}, %rd7308;
	}
	shf.r.wrap.b32 	%r5086, %r5085, %r5084, 28;
	shf.r.wrap.b32 	%r5087, %r5084, %r5085, 28;
	mov.b64 	%rd7335, {%r5087, %r5086};
	shf.l.wrap.b32 	%r5088, %r5084, %r5085, 30;
	shf.l.wrap.b32 	%r5089, %r5085, %r5084, 30;
	mov.b64 	%rd7336, {%r5089, %r5088};
	xor.b64  	%rd7337, %rd7335, %rd7336;
	shf.l.wrap.b32 	%r5090, %r5084, %r5085, 25;
	shf.l.wrap.b32 	%r5091, %r5085, %r5084, 25;
	mov.b64 	%rd7338, {%r5091, %r5090};
	xor.b64  	%rd7339, %rd7337, %rd7338;
	and.b64  	%rd7340, %rd7308, %rd7271;
	or.b64  	%rd7341, %rd7308, %rd7271;
	and.b64  	%rd7342, %rd7341, %rd7234;
	or.b64  	%rd7343, %rd7342, %rd7340;
	add.s64 	%rd7344, %rd7343, %rd7339;
	add.s64 	%rd7345, %rd7344, %rd7333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5092,%dummy}, %rd7284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5093}, %rd7284;
	}
	shf.r.wrap.b32 	%r5094, %r5093, %r5092, 19;
	shf.r.wrap.b32 	%r5095, %r5092, %r5093, 19;
	mov.b64 	%rd7346, {%r5095, %r5094};
	shf.l.wrap.b32 	%r5096, %r5092, %r5093, 3;
	shf.l.wrap.b32 	%r5097, %r5093, %r5092, 3;
	mov.b64 	%rd7347, {%r5097, %r5096};
	xor.b64  	%rd7348, %rd7346, %rd7347;
	shr.u64 	%rd7349, %rd7284, 6;
	xor.b64  	%rd7350, %rd7348, %rd7349;
	shf.r.wrap.b32 	%r5098, %r4747, %r4746, 1;
	shf.r.wrap.b32 	%r5099, %r4746, %r4747, 1;
	mov.b64 	%rd7351, {%r5099, %r5098};
	shf.r.wrap.b32 	%r5100, %r4747, %r4746, 8;
	shf.r.wrap.b32 	%r5101, %r4746, %r4747, 8;
	mov.b64 	%rd7352, {%r5101, %r5100};
	xor.b64  	%rd7353, %rd7351, %rd7352;
	shr.u64 	%rd7354, %rd6803, 7;
	xor.b64  	%rd7355, %rd7353, %rd7354;
	add.s64 	%rd7356, %rd7355, %rd6766;
	add.s64 	%rd7357, %rd7356, %rd7099;
	add.s64 	%rd7358, %rd7357, %rd7350;
	add.s64 	%rd7359, %rd7358, %rd7223;
	xor.b64  	%rd7360, %rd7297, %rd7260;
	and.b64  	%rd7361, %rd7334, %rd7360;
	xor.b64  	%rd7362, %rd7361, %rd7260;
	add.s64 	%rd7363, %rd7359, %rd7362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5102,%dummy}, %rd7334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5103}, %rd7334;
	}
	shf.r.wrap.b32 	%r5104, %r5103, %r5102, 14;
	shf.r.wrap.b32 	%r5105, %r5102, %r5103, 14;
	mov.b64 	%rd7364, {%r5105, %r5104};
	shf.r.wrap.b32 	%r5106, %r5103, %r5102, 18;
	shf.r.wrap.b32 	%r5107, %r5102, %r5103, 18;
	mov.b64 	%rd7365, {%r5107, %r5106};
	xor.b64  	%rd7366, %rd7364, %rd7365;
	shf.l.wrap.b32 	%r5108, %r5102, %r5103, 23;
	shf.l.wrap.b32 	%r5109, %r5103, %r5102, 23;
	mov.b64 	%rd7367, {%r5109, %r5108};
	xor.b64  	%rd7368, %rd7366, %rd7367;
	add.s64 	%rd7369, %rd7363, %rd7368;
	add.s64 	%rd7370, %rd7369, -9096487096722542874;
	add.s64 	%rd7371, %rd7370, %rd7234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5110,%dummy}, %rd7345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5111}, %rd7345;
	}
	shf.r.wrap.b32 	%r5112, %r5111, %r5110, 28;
	shf.r.wrap.b32 	%r5113, %r5110, %r5111, 28;
	mov.b64 	%rd7372, {%r5113, %r5112};
	shf.l.wrap.b32 	%r5114, %r5110, %r5111, 30;
	shf.l.wrap.b32 	%r5115, %r5111, %r5110, 30;
	mov.b64 	%rd7373, {%r5115, %r5114};
	xor.b64  	%rd7374, %rd7372, %rd7373;
	shf.l.wrap.b32 	%r5116, %r5110, %r5111, 25;
	shf.l.wrap.b32 	%r5117, %r5111, %r5110, 25;
	mov.b64 	%rd7375, {%r5117, %r5116};
	xor.b64  	%rd7376, %rd7374, %rd7375;
	and.b64  	%rd7377, %rd7345, %rd7308;
	or.b64  	%rd7378, %rd7345, %rd7308;
	and.b64  	%rd7379, %rd7378, %rd7271;
	or.b64  	%rd7380, %rd7379, %rd7377;
	add.s64 	%rd7381, %rd7380, %rd7376;
	add.s64 	%rd7382, %rd7381, %rd7370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5118,%dummy}, %rd7321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5119}, %rd7321;
	}
	shf.r.wrap.b32 	%r5120, %r5119, %r5118, 19;
	shf.r.wrap.b32 	%r5121, %r5118, %r5119, 19;
	mov.b64 	%rd7383, {%r5121, %r5120};
	shf.l.wrap.b32 	%r5122, %r5118, %r5119, 3;
	shf.l.wrap.b32 	%r5123, %r5119, %r5118, 3;
	mov.b64 	%rd7384, {%r5123, %r5122};
	xor.b64  	%rd7385, %rd7383, %rd7384;
	shr.u64 	%rd7386, %rd7321, 6;
	xor.b64  	%rd7387, %rd7385, %rd7386;
	shf.r.wrap.b32 	%r5124, %r4775, %r4774, 1;
	shf.r.wrap.b32 	%r5125, %r4774, %r4775, 1;
	mov.b64 	%rd7388, {%r5125, %r5124};
	shf.r.wrap.b32 	%r5126, %r4775, %r4774, 8;
	shf.r.wrap.b32 	%r5127, %r4774, %r4775, 8;
	mov.b64 	%rd7389, {%r5127, %r5126};
	xor.b64  	%rd7390, %rd7388, %rd7389;
	shr.u64 	%rd7391, %rd6840, 7;
	xor.b64  	%rd7392, %rd7390, %rd7391;
	add.s64 	%rd7393, %rd7392, %rd6803;
	add.s64 	%rd7394, %rd7393, %rd7136;
	add.s64 	%rd7395, %rd7394, %rd7387;
	add.s64 	%rd7396, %rd7395, %rd7260;
	xor.b64  	%rd7397, %rd7334, %rd7297;
	and.b64  	%rd7398, %rd7371, %rd7397;
	xor.b64  	%rd7399, %rd7398, %rd7297;
	add.s64 	%rd7400, %rd7396, %rd7399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5128,%dummy}, %rd7371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5129}, %rd7371;
	}
	shf.r.wrap.b32 	%r5130, %r5129, %r5128, 14;
	shf.r.wrap.b32 	%r5131, %r5128, %r5129, 14;
	mov.b64 	%rd7401, {%r5131, %r5130};
	shf.r.wrap.b32 	%r5132, %r5129, %r5128, 18;
	shf.r.wrap.b32 	%r5133, %r5128, %r5129, 18;
	mov.b64 	%rd7402, {%r5133, %r5132};
	xor.b64  	%rd7403, %rd7401, %rd7402;
	shf.l.wrap.b32 	%r5134, %r5128, %r5129, 23;
	shf.l.wrap.b32 	%r5135, %r5129, %r5128, 23;
	mov.b64 	%rd7404, {%r5135, %r5134};
	xor.b64  	%rd7405, %rd7403, %rd7404;
	add.s64 	%rd7406, %rd7400, %rd7405;
	add.s64 	%rd7407, %rd7406, -7894198246740708037;
	add.s64 	%rd7408, %rd7407, %rd7271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5136,%dummy}, %rd7382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5137}, %rd7382;
	}
	shf.r.wrap.b32 	%r5138, %r5137, %r5136, 28;
	shf.r.wrap.b32 	%r5139, %r5136, %r5137, 28;
	mov.b64 	%rd7409, {%r5139, %r5138};
	shf.l.wrap.b32 	%r5140, %r5136, %r5137, 30;
	shf.l.wrap.b32 	%r5141, %r5137, %r5136, 30;
	mov.b64 	%rd7410, {%r5141, %r5140};
	xor.b64  	%rd7411, %rd7409, %rd7410;
	shf.l.wrap.b32 	%r5142, %r5136, %r5137, 25;
	shf.l.wrap.b32 	%r5143, %r5137, %r5136, 25;
	mov.b64 	%rd7412, {%r5143, %r5142};
	xor.b64  	%rd7413, %rd7411, %rd7412;
	and.b64  	%rd7414, %rd7382, %rd7345;
	or.b64  	%rd7415, %rd7382, %rd7345;
	and.b64  	%rd7416, %rd7415, %rd7308;
	or.b64  	%rd7417, %rd7416, %rd7414;
	add.s64 	%rd7418, %rd7417, %rd7413;
	add.s64 	%rd7419, %rd7418, %rd7407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5144,%dummy}, %rd7358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5145}, %rd7358;
	}
	shf.r.wrap.b32 	%r5146, %r5145, %r5144, 19;
	shf.r.wrap.b32 	%r5147, %r5144, %r5145, 19;
	mov.b64 	%rd7420, {%r5147, %r5146};
	shf.l.wrap.b32 	%r5148, %r5144, %r5145, 3;
	shf.l.wrap.b32 	%r5149, %r5145, %r5144, 3;
	mov.b64 	%rd7421, {%r5149, %r5148};
	xor.b64  	%rd7422, %rd7420, %rd7421;
	shr.u64 	%rd7423, %rd7358, 6;
	xor.b64  	%rd7424, %rd7422, %rd7423;
	shf.r.wrap.b32 	%r5150, %r4803, %r4802, 1;
	shf.r.wrap.b32 	%r5151, %r4802, %r4803, 1;
	mov.b64 	%rd7425, {%r5151, %r5150};
	shf.r.wrap.b32 	%r5152, %r4803, %r4802, 8;
	shf.r.wrap.b32 	%r5153, %r4802, %r4803, 8;
	mov.b64 	%rd7426, {%r5153, %r5152};
	xor.b64  	%rd7427, %rd7425, %rd7426;
	shr.u64 	%rd7428, %rd6877, 7;
	xor.b64  	%rd7429, %rd7427, %rd7428;
	add.s64 	%rd7430, %rd7429, %rd6840;
	add.s64 	%rd7431, %rd7430, %rd7173;
	add.s64 	%rd7432, %rd7431, %rd7424;
	add.s64 	%rd7433, %rd7432, %rd7297;
	xor.b64  	%rd7434, %rd7371, %rd7334;
	and.b64  	%rd7435, %rd7408, %rd7434;
	xor.b64  	%rd7436, %rd7435, %rd7334;
	add.s64 	%rd7437, %rd7433, %rd7436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5154,%dummy}, %rd7408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5155}, %rd7408;
	}
	shf.r.wrap.b32 	%r5156, %r5155, %r5154, 14;
	shf.r.wrap.b32 	%r5157, %r5154, %r5155, 14;
	mov.b64 	%rd7438, {%r5157, %r5156};
	shf.r.wrap.b32 	%r5158, %r5155, %r5154, 18;
	shf.r.wrap.b32 	%r5159, %r5154, %r5155, 18;
	mov.b64 	%rd7439, {%r5159, %r5158};
	xor.b64  	%rd7440, %rd7438, %rd7439;
	shf.l.wrap.b32 	%r5160, %r5154, %r5155, 23;
	shf.l.wrap.b32 	%r5161, %r5155, %r5154, 23;
	mov.b64 	%rd7441, {%r5161, %r5160};
	xor.b64  	%rd7442, %rd7440, %rd7441;
	add.s64 	%rd7443, %rd7437, %rd7442;
	add.s64 	%rd7444, %rd7443, -6719396339535248540;
	add.s64 	%rd7445, %rd7444, %rd7308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5162,%dummy}, %rd7419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5163}, %rd7419;
	}
	shf.r.wrap.b32 	%r5164, %r5163, %r5162, 28;
	shf.r.wrap.b32 	%r5165, %r5162, %r5163, 28;
	mov.b64 	%rd7446, {%r5165, %r5164};
	shf.l.wrap.b32 	%r5166, %r5162, %r5163, 30;
	shf.l.wrap.b32 	%r5167, %r5163, %r5162, 30;
	mov.b64 	%rd7447, {%r5167, %r5166};
	xor.b64  	%rd7448, %rd7446, %rd7447;
	shf.l.wrap.b32 	%r5168, %r5162, %r5163, 25;
	shf.l.wrap.b32 	%r5169, %r5163, %r5162, 25;
	mov.b64 	%rd7449, {%r5169, %r5168};
	xor.b64  	%rd7450, %rd7448, %rd7449;
	and.b64  	%rd7451, %rd7419, %rd7382;
	or.b64  	%rd7452, %rd7419, %rd7382;
	and.b64  	%rd7453, %rd7452, %rd7345;
	or.b64  	%rd7454, %rd7453, %rd7451;
	add.s64 	%rd7455, %rd7454, %rd7450;
	add.s64 	%rd7456, %rd7455, %rd7444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5170,%dummy}, %rd7395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5171}, %rd7395;
	}
	shf.r.wrap.b32 	%r5172, %r5171, %r5170, 19;
	shf.r.wrap.b32 	%r5173, %r5170, %r5171, 19;
	mov.b64 	%rd7457, {%r5173, %r5172};
	shf.l.wrap.b32 	%r5174, %r5170, %r5171, 3;
	shf.l.wrap.b32 	%r5175, %r5171, %r5170, 3;
	mov.b64 	%rd7458, {%r5175, %r5174};
	xor.b64  	%rd7459, %rd7457, %rd7458;
	shr.u64 	%rd7460, %rd7395, 6;
	xor.b64  	%rd7461, %rd7459, %rd7460;
	shf.r.wrap.b32 	%r5176, %r4831, %r4830, 1;
	shf.r.wrap.b32 	%r5177, %r4830, %r4831, 1;
	mov.b64 	%rd7462, {%r5177, %r5176};
	shf.r.wrap.b32 	%r5178, %r4831, %r4830, 8;
	shf.r.wrap.b32 	%r5179, %r4830, %r4831, 8;
	mov.b64 	%rd7463, {%r5179, %r5178};
	xor.b64  	%rd7464, %rd7462, %rd7463;
	shr.u64 	%rd7465, %rd6914, 7;
	xor.b64  	%rd7466, %rd7464, %rd7465;
	add.s64 	%rd7467, %rd7466, %rd6877;
	add.s64 	%rd7468, %rd7467, %rd7210;
	add.s64 	%rd7469, %rd7468, %rd7461;
	add.s64 	%rd7470, %rd7469, %rd7334;
	xor.b64  	%rd7471, %rd7408, %rd7371;
	and.b64  	%rd7472, %rd7445, %rd7471;
	xor.b64  	%rd7473, %rd7472, %rd7371;
	add.s64 	%rd7474, %rd7470, %rd7473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5180,%dummy}, %rd7445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5181}, %rd7445;
	}
	shf.r.wrap.b32 	%r5182, %r5181, %r5180, 14;
	shf.r.wrap.b32 	%r5183, %r5180, %r5181, 14;
	mov.b64 	%rd7475, {%r5183, %r5182};
	shf.r.wrap.b32 	%r5184, %r5181, %r5180, 18;
	shf.r.wrap.b32 	%r5185, %r5180, %r5181, 18;
	mov.b64 	%rd7476, {%r5185, %r5184};
	xor.b64  	%rd7477, %rd7475, %rd7476;
	shf.l.wrap.b32 	%r5186, %r5180, %r5181, 23;
	shf.l.wrap.b32 	%r5187, %r5181, %r5180, 23;
	mov.b64 	%rd7478, {%r5187, %r5186};
	xor.b64  	%rd7479, %rd7477, %rd7478;
	add.s64 	%rd7480, %rd7474, %rd7479;
	add.s64 	%rd7481, %rd7480, -6333637450476146687;
	add.s64 	%rd7482, %rd7481, %rd7345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5188,%dummy}, %rd7456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5189}, %rd7456;
	}
	shf.r.wrap.b32 	%r5190, %r5189, %r5188, 28;
	shf.r.wrap.b32 	%r5191, %r5188, %r5189, 28;
	mov.b64 	%rd7483, {%r5191, %r5190};
	shf.l.wrap.b32 	%r5192, %r5188, %r5189, 30;
	shf.l.wrap.b32 	%r5193, %r5189, %r5188, 30;
	mov.b64 	%rd7484, {%r5193, %r5192};
	xor.b64  	%rd7485, %rd7483, %rd7484;
	shf.l.wrap.b32 	%r5194, %r5188, %r5189, 25;
	shf.l.wrap.b32 	%r5195, %r5189, %r5188, 25;
	mov.b64 	%rd7486, {%r5195, %r5194};
	xor.b64  	%rd7487, %rd7485, %rd7486;
	and.b64  	%rd7488, %rd7456, %rd7419;
	or.b64  	%rd7489, %rd7456, %rd7419;
	and.b64  	%rd7490, %rd7489, %rd7382;
	or.b64  	%rd7491, %rd7490, %rd7488;
	add.s64 	%rd7492, %rd7491, %rd7487;
	add.s64 	%rd7493, %rd7492, %rd7481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5196,%dummy}, %rd7432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5197}, %rd7432;
	}
	shf.r.wrap.b32 	%r5198, %r5197, %r5196, 19;
	shf.r.wrap.b32 	%r5199, %r5196, %r5197, 19;
	mov.b64 	%rd7494, {%r5199, %r5198};
	shf.l.wrap.b32 	%r5200, %r5196, %r5197, 3;
	shf.l.wrap.b32 	%r5201, %r5197, %r5196, 3;
	mov.b64 	%rd7495, {%r5201, %r5200};
	xor.b64  	%rd7496, %rd7494, %rd7495;
	shr.u64 	%rd7497, %rd7432, 6;
	xor.b64  	%rd7498, %rd7496, %rd7497;
	shf.r.wrap.b32 	%r5202, %r4859, %r4858, 1;
	shf.r.wrap.b32 	%r5203, %r4858, %r4859, 1;
	mov.b64 	%rd7499, {%r5203, %r5202};
	shf.r.wrap.b32 	%r5204, %r4859, %r4858, 8;
	shf.r.wrap.b32 	%r5205, %r4858, %r4859, 8;
	mov.b64 	%rd7500, {%r5205, %r5204};
	xor.b64  	%rd7501, %rd7499, %rd7500;
	shr.u64 	%rd7502, %rd6951, 7;
	xor.b64  	%rd7503, %rd7501, %rd7502;
	add.s64 	%rd7504, %rd7503, %rd6914;
	add.s64 	%rd7505, %rd7504, %rd7247;
	add.s64 	%rd7506, %rd7505, %rd7498;
	add.s64 	%rd7507, %rd7506, %rd7371;
	xor.b64  	%rd7508, %rd7445, %rd7408;
	and.b64  	%rd7509, %rd7482, %rd7508;
	xor.b64  	%rd7510, %rd7509, %rd7408;
	add.s64 	%rd7511, %rd7507, %rd7510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5206,%dummy}, %rd7482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5207}, %rd7482;
	}
	shf.r.wrap.b32 	%r5208, %r5207, %r5206, 14;
	shf.r.wrap.b32 	%r5209, %r5206, %r5207, 14;
	mov.b64 	%rd7512, {%r5209, %r5208};
	shf.r.wrap.b32 	%r5210, %r5207, %r5206, 18;
	shf.r.wrap.b32 	%r5211, %r5206, %r5207, 18;
	mov.b64 	%rd7513, {%r5211, %r5210};
	xor.b64  	%rd7514, %rd7512, %rd7513;
	shf.l.wrap.b32 	%r5212, %r5206, %r5207, 23;
	shf.l.wrap.b32 	%r5213, %r5207, %r5206, 23;
	mov.b64 	%rd7515, {%r5213, %r5212};
	xor.b64  	%rd7516, %rd7514, %rd7515;
	add.s64 	%rd7517, %rd7511, %rd7516;
	add.s64 	%rd7518, %rd7517, -4446306890439682159;
	add.s64 	%rd7519, %rd7518, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5214,%dummy}, %rd7493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5215}, %rd7493;
	}
	shf.r.wrap.b32 	%r5216, %r5215, %r5214, 28;
	shf.r.wrap.b32 	%r5217, %r5214, %r5215, 28;
	mov.b64 	%rd7520, {%r5217, %r5216};
	shf.l.wrap.b32 	%r5218, %r5214, %r5215, 30;
	shf.l.wrap.b32 	%r5219, %r5215, %r5214, 30;
	mov.b64 	%rd7521, {%r5219, %r5218};
	xor.b64  	%rd7522, %rd7520, %rd7521;
	shf.l.wrap.b32 	%r5220, %r5214, %r5215, 25;
	shf.l.wrap.b32 	%r5221, %r5215, %r5214, 25;
	mov.b64 	%rd7523, {%r5221, %r5220};
	xor.b64  	%rd7524, %rd7522, %rd7523;
	and.b64  	%rd7525, %rd7493, %rd7456;
	or.b64  	%rd7526, %rd7493, %rd7456;
	and.b64  	%rd7527, %rd7526, %rd7419;
	or.b64  	%rd7528, %rd7527, %rd7525;
	add.s64 	%rd7529, %rd7528, %rd7524;
	add.s64 	%rd7530, %rd7529, %rd7518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5222,%dummy}, %rd7469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5223}, %rd7469;
	}
	shf.r.wrap.b32 	%r5224, %r5223, %r5222, 19;
	shf.r.wrap.b32 	%r5225, %r5222, %r5223, 19;
	mov.b64 	%rd7531, {%r5225, %r5224};
	shf.l.wrap.b32 	%r5226, %r5222, %r5223, 3;
	shf.l.wrap.b32 	%r5227, %r5223, %r5222, 3;
	mov.b64 	%rd7532, {%r5227, %r5226};
	xor.b64  	%rd7533, %rd7531, %rd7532;
	shr.u64 	%rd7534, %rd7469, 6;
	xor.b64  	%rd7535, %rd7533, %rd7534;
	shf.r.wrap.b32 	%r5228, %r4885, %r4884, 1;
	shf.r.wrap.b32 	%r5229, %r4884, %r4885, 1;
	mov.b64 	%rd7536, {%r5229, %r5228};
	shf.r.wrap.b32 	%r5230, %r4885, %r4884, 8;
	shf.r.wrap.b32 	%r5231, %r4884, %r4885, 8;
	mov.b64 	%rd7537, {%r5231, %r5230};
	xor.b64  	%rd7538, %rd7536, %rd7537;
	shr.u64 	%rd7539, %rd6988, 7;
	xor.b64  	%rd7540, %rd7538, %rd7539;
	add.s64 	%rd7541, %rd7540, %rd6951;
	add.s64 	%rd7542, %rd7541, %rd7284;
	add.s64 	%rd7543, %rd7542, %rd7535;
	add.s64 	%rd7544, %rd7543, %rd7408;
	xor.b64  	%rd7545, %rd7482, %rd7445;
	and.b64  	%rd7546, %rd7519, %rd7545;
	xor.b64  	%rd7547, %rd7546, %rd7445;
	add.s64 	%rd7548, %rd7544, %rd7547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5232,%dummy}, %rd7519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5233}, %rd7519;
	}
	shf.r.wrap.b32 	%r5234, %r5233, %r5232, 14;
	shf.r.wrap.b32 	%r5235, %r5232, %r5233, 14;
	mov.b64 	%rd7549, {%r5235, %r5234};
	shf.r.wrap.b32 	%r5236, %r5233, %r5232, 18;
	shf.r.wrap.b32 	%r5237, %r5232, %r5233, 18;
	mov.b64 	%rd7550, {%r5237, %r5236};
	xor.b64  	%rd7551, %rd7549, %rd7550;
	shf.l.wrap.b32 	%r5238, %r5232, %r5233, 23;
	shf.l.wrap.b32 	%r5239, %r5233, %r5232, 23;
	mov.b64 	%rd7552, {%r5239, %r5238};
	xor.b64  	%rd7553, %rd7551, %rd7552;
	add.s64 	%rd7554, %rd7548, %rd7553;
	add.s64 	%rd7555, %rd7554, -4076793802049405392;
	add.s64 	%rd7556, %rd7555, %rd7419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5240,%dummy}, %rd7530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5241}, %rd7530;
	}
	shf.r.wrap.b32 	%r5242, %r5241, %r5240, 28;
	shf.r.wrap.b32 	%r5243, %r5240, %r5241, 28;
	mov.b64 	%rd7557, {%r5243, %r5242};
	shf.l.wrap.b32 	%r5244, %r5240, %r5241, 30;
	shf.l.wrap.b32 	%r5245, %r5241, %r5240, 30;
	mov.b64 	%rd7558, {%r5245, %r5244};
	xor.b64  	%rd7559, %rd7557, %rd7558;
	shf.l.wrap.b32 	%r5246, %r5240, %r5241, 25;
	shf.l.wrap.b32 	%r5247, %r5241, %r5240, 25;
	mov.b64 	%rd7560, {%r5247, %r5246};
	xor.b64  	%rd7561, %rd7559, %rd7560;
	and.b64  	%rd7562, %rd7530, %rd7493;
	or.b64  	%rd7563, %rd7530, %rd7493;
	and.b64  	%rd7564, %rd7563, %rd7456;
	or.b64  	%rd7565, %rd7564, %rd7562;
	add.s64 	%rd7566, %rd7565, %rd7561;
	add.s64 	%rd7567, %rd7566, %rd7555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5248,%dummy}, %rd7506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd7506;
	}
	shf.r.wrap.b32 	%r5250, %r5249, %r5248, 19;
	shf.r.wrap.b32 	%r5251, %r5248, %r5249, 19;
	mov.b64 	%rd7568, {%r5251, %r5250};
	shf.l.wrap.b32 	%r5252, %r5248, %r5249, 3;
	shf.l.wrap.b32 	%r5253, %r5249, %r5248, 3;
	mov.b64 	%rd7569, {%r5253, %r5252};
	xor.b64  	%rd7570, %rd7568, %rd7569;
	shr.u64 	%rd7571, %rd7506, 6;
	xor.b64  	%rd7572, %rd7570, %rd7571;
	shf.r.wrap.b32 	%r5254, %r4911, %r4910, 1;
	shf.r.wrap.b32 	%r5255, %r4910, %r4911, 1;
	mov.b64 	%rd7573, {%r5255, %r5254};
	shf.r.wrap.b32 	%r5256, %r4911, %r4910, 8;
	shf.r.wrap.b32 	%r5257, %r4910, %r4911, 8;
	mov.b64 	%rd7574, {%r5257, %r5256};
	xor.b64  	%rd7575, %rd7573, %rd7574;
	shr.u64 	%rd7576, %rd7025, 7;
	xor.b64  	%rd7577, %rd7575, %rd7576;
	add.s64 	%rd7578, %rd7577, %rd6988;
	add.s64 	%rd7579, %rd7578, %rd7321;
	add.s64 	%rd7580, %rd7579, %rd7572;
	add.s64 	%rd7581, %rd7580, %rd7445;
	xor.b64  	%rd7582, %rd7519, %rd7482;
	and.b64  	%rd7583, %rd7556, %rd7582;
	xor.b64  	%rd7584, %rd7583, %rd7482;
	add.s64 	%rd7585, %rd7581, %rd7584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5258,%dummy}, %rd7556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5259}, %rd7556;
	}
	shf.r.wrap.b32 	%r5260, %r5259, %r5258, 14;
	shf.r.wrap.b32 	%r5261, %r5258, %r5259, 14;
	mov.b64 	%rd7586, {%r5261, %r5260};
	shf.r.wrap.b32 	%r5262, %r5259, %r5258, 18;
	shf.r.wrap.b32 	%r5263, %r5258, %r5259, 18;
	mov.b64 	%rd7587, {%r5263, %r5262};
	xor.b64  	%rd7588, %rd7586, %rd7587;
	shf.l.wrap.b32 	%r5264, %r5258, %r5259, 23;
	shf.l.wrap.b32 	%r5265, %r5259, %r5258, 23;
	mov.b64 	%rd7589, {%r5265, %r5264};
	xor.b64  	%rd7590, %rd7588, %rd7589;
	add.s64 	%rd7591, %rd7585, %rd7590;
	add.s64 	%rd7592, %rd7591, -3345356375505022440;
	add.s64 	%rd7593, %rd7592, %rd7456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5266,%dummy}, %rd7567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5267}, %rd7567;
	}
	shf.r.wrap.b32 	%r5268, %r5267, %r5266, 28;
	shf.r.wrap.b32 	%r5269, %r5266, %r5267, 28;
	mov.b64 	%rd7594, {%r5269, %r5268};
	shf.l.wrap.b32 	%r5270, %r5266, %r5267, 30;
	shf.l.wrap.b32 	%r5271, %r5267, %r5266, 30;
	mov.b64 	%rd7595, {%r5271, %r5270};
	xor.b64  	%rd7596, %rd7594, %rd7595;
	shf.l.wrap.b32 	%r5272, %r5266, %r5267, 25;
	shf.l.wrap.b32 	%r5273, %r5267, %r5266, 25;
	mov.b64 	%rd7597, {%r5273, %r5272};
	xor.b64  	%rd7598, %rd7596, %rd7597;
	and.b64  	%rd7599, %rd7567, %rd7530;
	or.b64  	%rd7600, %rd7567, %rd7530;
	and.b64  	%rd7601, %rd7600, %rd7493;
	or.b64  	%rd7602, %rd7601, %rd7599;
	add.s64 	%rd7603, %rd7602, %rd7598;
	add.s64 	%rd7604, %rd7603, %rd7592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5274,%dummy}, %rd7543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5275}, %rd7543;
	}
	shf.r.wrap.b32 	%r5276, %r5275, %r5274, 19;
	shf.r.wrap.b32 	%r5277, %r5274, %r5275, 19;
	mov.b64 	%rd7605, {%r5277, %r5276};
	shf.l.wrap.b32 	%r5278, %r5274, %r5275, 3;
	shf.l.wrap.b32 	%r5279, %r5275, %r5274, 3;
	mov.b64 	%rd7606, {%r5279, %r5278};
	xor.b64  	%rd7607, %rd7605, %rd7606;
	shr.u64 	%rd7608, %rd7543, 6;
	xor.b64  	%rd7609, %rd7607, %rd7608;
	shf.r.wrap.b32 	%r5280, %r4937, %r4936, 1;
	shf.r.wrap.b32 	%r5281, %r4936, %r4937, 1;
	mov.b64 	%rd7610, {%r5281, %r5280};
	shf.r.wrap.b32 	%r5282, %r4937, %r4936, 8;
	shf.r.wrap.b32 	%r5283, %r4936, %r4937, 8;
	mov.b64 	%rd7611, {%r5283, %r5282};
	xor.b64  	%rd7612, %rd7610, %rd7611;
	shr.u64 	%rd7613, %rd7062, 7;
	xor.b64  	%rd7614, %rd7612, %rd7613;
	add.s64 	%rd7615, %rd7614, %rd7025;
	add.s64 	%rd7616, %rd7615, %rd7358;
	add.s64 	%rd7617, %rd7616, %rd7609;
	add.s64 	%rd7618, %rd7617, %rd7482;
	xor.b64  	%rd7619, %rd7556, %rd7519;
	and.b64  	%rd7620, %rd7593, %rd7619;
	xor.b64  	%rd7621, %rd7620, %rd7519;
	add.s64 	%rd7622, %rd7618, %rd7621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5284,%dummy}, %rd7593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5285}, %rd7593;
	}
	shf.r.wrap.b32 	%r5286, %r5285, %r5284, 14;
	shf.r.wrap.b32 	%r5287, %r5284, %r5285, 14;
	mov.b64 	%rd7623, {%r5287, %r5286};
	shf.r.wrap.b32 	%r5288, %r5285, %r5284, 18;
	shf.r.wrap.b32 	%r5289, %r5284, %r5285, 18;
	mov.b64 	%rd7624, {%r5289, %r5288};
	xor.b64  	%rd7625, %rd7623, %rd7624;
	shf.l.wrap.b32 	%r5290, %r5284, %r5285, 23;
	shf.l.wrap.b32 	%r5291, %r5285, %r5284, 23;
	mov.b64 	%rd7626, {%r5291, %r5290};
	xor.b64  	%rd7627, %rd7625, %rd7626;
	add.s64 	%rd7628, %rd7622, %rd7627;
	add.s64 	%rd7629, %rd7628, -2983346525034927856;
	add.s64 	%rd7630, %rd7629, %rd7493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5292,%dummy}, %rd7604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5293}, %rd7604;
	}
	shf.r.wrap.b32 	%r5294, %r5293, %r5292, 28;
	shf.r.wrap.b32 	%r5295, %r5292, %r5293, 28;
	mov.b64 	%rd7631, {%r5295, %r5294};
	shf.l.wrap.b32 	%r5296, %r5292, %r5293, 30;
	shf.l.wrap.b32 	%r5297, %r5293, %r5292, 30;
	mov.b64 	%rd7632, {%r5297, %r5296};
	xor.b64  	%rd7633, %rd7631, %rd7632;
	shf.l.wrap.b32 	%r5298, %r5292, %r5293, 25;
	shf.l.wrap.b32 	%r5299, %r5293, %r5292, 25;
	mov.b64 	%rd7634, {%r5299, %r5298};
	xor.b64  	%rd7635, %rd7633, %rd7634;
	and.b64  	%rd7636, %rd7604, %rd7567;
	or.b64  	%rd7637, %rd7604, %rd7567;
	and.b64  	%rd7638, %rd7637, %rd7530;
	or.b64  	%rd7639, %rd7638, %rd7636;
	add.s64 	%rd7640, %rd7639, %rd7635;
	add.s64 	%rd7641, %rd7640, %rd7629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5300,%dummy}, %rd7580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5301}, %rd7580;
	}
	shf.r.wrap.b32 	%r5302, %r5301, %r5300, 19;
	shf.r.wrap.b32 	%r5303, %r5300, %r5301, 19;
	mov.b64 	%rd7642, {%r5303, %r5302};
	shf.l.wrap.b32 	%r5304, %r5300, %r5301, 3;
	shf.l.wrap.b32 	%r5305, %r5301, %r5300, 3;
	mov.b64 	%rd7643, {%r5305, %r5304};
	xor.b64  	%rd7644, %rd7642, %rd7643;
	shr.u64 	%rd7645, %rd7580, 6;
	xor.b64  	%rd7646, %rd7644, %rd7645;
	shf.r.wrap.b32 	%r5306, %r4963, %r4962, 1;
	shf.r.wrap.b32 	%r5307, %r4962, %r4963, 1;
	mov.b64 	%rd7647, {%r5307, %r5306};
	shf.r.wrap.b32 	%r5308, %r4963, %r4962, 8;
	shf.r.wrap.b32 	%r5309, %r4962, %r4963, 8;
	mov.b64 	%rd7648, {%r5309, %r5308};
	xor.b64  	%rd7649, %rd7647, %rd7648;
	shr.u64 	%rd7650, %rd7099, 7;
	xor.b64  	%rd7651, %rd7649, %rd7650;
	add.s64 	%rd7652, %rd7651, %rd7062;
	add.s64 	%rd7653, %rd7652, %rd7395;
	add.s64 	%rd7654, %rd7653, %rd7646;
	add.s64 	%rd7655, %rd7654, %rd7519;
	xor.b64  	%rd7656, %rd7593, %rd7556;
	and.b64  	%rd7657, %rd7630, %rd7656;
	xor.b64  	%rd7658, %rd7657, %rd7556;
	add.s64 	%rd7659, %rd7655, %rd7658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5310,%dummy}, %rd7630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5311}, %rd7630;
	}
	shf.r.wrap.b32 	%r5312, %r5311, %r5310, 14;
	shf.r.wrap.b32 	%r5313, %r5310, %r5311, 14;
	mov.b64 	%rd7660, {%r5313, %r5312};
	shf.r.wrap.b32 	%r5314, %r5311, %r5310, 18;
	shf.r.wrap.b32 	%r5315, %r5310, %r5311, 18;
	mov.b64 	%rd7661, {%r5315, %r5314};
	xor.b64  	%rd7662, %rd7660, %rd7661;
	shf.l.wrap.b32 	%r5316, %r5310, %r5311, 23;
	shf.l.wrap.b32 	%r5317, %r5311, %r5310, 23;
	mov.b64 	%rd7663, {%r5317, %r5316};
	xor.b64  	%rd7664, %rd7662, %rd7663;
	add.s64 	%rd7665, %rd7659, %rd7664;
	add.s64 	%rd7666, %rd7665, -860691631967231958;
	add.s64 	%rd7667, %rd7666, %rd7530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5318,%dummy}, %rd7641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5319}, %rd7641;
	}
	shf.r.wrap.b32 	%r5320, %r5319, %r5318, 28;
	shf.r.wrap.b32 	%r5321, %r5318, %r5319, 28;
	mov.b64 	%rd7668, {%r5321, %r5320};
	shf.l.wrap.b32 	%r5322, %r5318, %r5319, 30;
	shf.l.wrap.b32 	%r5323, %r5319, %r5318, 30;
	mov.b64 	%rd7669, {%r5323, %r5322};
	xor.b64  	%rd7670, %rd7668, %rd7669;
	shf.l.wrap.b32 	%r5324, %r5318, %r5319, 25;
	shf.l.wrap.b32 	%r5325, %r5319, %r5318, 25;
	mov.b64 	%rd7671, {%r5325, %r5324};
	xor.b64  	%rd7672, %rd7670, %rd7671;
	and.b64  	%rd7673, %rd7641, %rd7604;
	or.b64  	%rd7674, %rd7641, %rd7604;
	and.b64  	%rd7675, %rd7674, %rd7567;
	or.b64  	%rd7676, %rd7675, %rd7673;
	add.s64 	%rd7677, %rd7676, %rd7672;
	add.s64 	%rd7678, %rd7677, %rd7666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5326,%dummy}, %rd7617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5327}, %rd7617;
	}
	shf.r.wrap.b32 	%r5328, %r5327, %r5326, 19;
	shf.r.wrap.b32 	%r5329, %r5326, %r5327, 19;
	mov.b64 	%rd7679, {%r5329, %r5328};
	shf.l.wrap.b32 	%r5330, %r5326, %r5327, 3;
	shf.l.wrap.b32 	%r5331, %r5327, %r5326, 3;
	mov.b64 	%rd7680, {%r5331, %r5330};
	xor.b64  	%rd7681, %rd7679, %rd7680;
	shr.u64 	%rd7682, %rd7617, 6;
	xor.b64  	%rd7683, %rd7681, %rd7682;
	shf.r.wrap.b32 	%r5332, %r4989, %r4988, 1;
	shf.r.wrap.b32 	%r5333, %r4988, %r4989, 1;
	mov.b64 	%rd7684, {%r5333, %r5332};
	shf.r.wrap.b32 	%r5334, %r4989, %r4988, 8;
	shf.r.wrap.b32 	%r5335, %r4988, %r4989, 8;
	mov.b64 	%rd7685, {%r5335, %r5334};
	xor.b64  	%rd7686, %rd7684, %rd7685;
	shr.u64 	%rd7687, %rd7136, 7;
	xor.b64  	%rd7688, %rd7686, %rd7687;
	add.s64 	%rd7689, %rd7688, %rd7099;
	add.s64 	%rd7690, %rd7689, %rd7432;
	add.s64 	%rd7691, %rd7690, %rd7683;
	add.s64 	%rd7692, %rd7691, %rd7556;
	xor.b64  	%rd7693, %rd7630, %rd7593;
	and.b64  	%rd7694, %rd7667, %rd7693;
	xor.b64  	%rd7695, %rd7694, %rd7593;
	add.s64 	%rd7696, %rd7692, %rd7695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5336,%dummy}, %rd7667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5337}, %rd7667;
	}
	shf.r.wrap.b32 	%r5338, %r5337, %r5336, 14;
	shf.r.wrap.b32 	%r5339, %r5336, %r5337, 14;
	mov.b64 	%rd7697, {%r5339, %r5338};
	shf.r.wrap.b32 	%r5340, %r5337, %r5336, 18;
	shf.r.wrap.b32 	%r5341, %r5336, %r5337, 18;
	mov.b64 	%rd7698, {%r5341, %r5340};
	xor.b64  	%rd7699, %rd7697, %rd7698;
	shf.l.wrap.b32 	%r5342, %r5336, %r5337, 23;
	shf.l.wrap.b32 	%r5343, %r5337, %r5336, 23;
	mov.b64 	%rd7700, {%r5343, %r5342};
	xor.b64  	%rd7701, %rd7699, %rd7700;
	add.s64 	%rd7702, %rd7696, %rd7701;
	add.s64 	%rd7703, %rd7702, 1182934255886127544;
	add.s64 	%rd7704, %rd7703, %rd7567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5344,%dummy}, %rd7678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5345}, %rd7678;
	}
	shf.r.wrap.b32 	%r5346, %r5345, %r5344, 28;
	shf.r.wrap.b32 	%r5347, %r5344, %r5345, 28;
	mov.b64 	%rd7705, {%r5347, %r5346};
	shf.l.wrap.b32 	%r5348, %r5344, %r5345, 30;
	shf.l.wrap.b32 	%r5349, %r5345, %r5344, 30;
	mov.b64 	%rd7706, {%r5349, %r5348};
	xor.b64  	%rd7707, %rd7705, %rd7706;
	shf.l.wrap.b32 	%r5350, %r5344, %r5345, 25;
	shf.l.wrap.b32 	%r5351, %r5345, %r5344, 25;
	mov.b64 	%rd7708, {%r5351, %r5350};
	xor.b64  	%rd7709, %rd7707, %rd7708;
	and.b64  	%rd7710, %rd7678, %rd7641;
	or.b64  	%rd7711, %rd7678, %rd7641;
	and.b64  	%rd7712, %rd7711, %rd7604;
	or.b64  	%rd7713, %rd7712, %rd7710;
	add.s64 	%rd7714, %rd7713, %rd7709;
	add.s64 	%rd7715, %rd7714, %rd7703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5352,%dummy}, %rd7654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5353}, %rd7654;
	}
	shf.r.wrap.b32 	%r5354, %r5353, %r5352, 19;
	shf.r.wrap.b32 	%r5355, %r5352, %r5353, 19;
	mov.b64 	%rd7716, {%r5355, %r5354};
	shf.l.wrap.b32 	%r5356, %r5352, %r5353, 3;
	shf.l.wrap.b32 	%r5357, %r5353, %r5352, 3;
	mov.b64 	%rd7717, {%r5357, %r5356};
	xor.b64  	%rd7718, %rd7716, %rd7717;
	shr.u64 	%rd7719, %rd7654, 6;
	xor.b64  	%rd7720, %rd7718, %rd7719;
	shf.r.wrap.b32 	%r5358, %r5015, %r5014, 1;
	shf.r.wrap.b32 	%r5359, %r5014, %r5015, 1;
	mov.b64 	%rd7721, {%r5359, %r5358};
	shf.r.wrap.b32 	%r5360, %r5015, %r5014, 8;
	shf.r.wrap.b32 	%r5361, %r5014, %r5015, 8;
	mov.b64 	%rd7722, {%r5361, %r5360};
	xor.b64  	%rd7723, %rd7721, %rd7722;
	shr.u64 	%rd7724, %rd7173, 7;
	xor.b64  	%rd7725, %rd7723, %rd7724;
	add.s64 	%rd7726, %rd7725, %rd7136;
	add.s64 	%rd7727, %rd7726, %rd7469;
	add.s64 	%rd7728, %rd7727, %rd7720;
	add.s64 	%rd7729, %rd7728, %rd7593;
	xor.b64  	%rd7730, %rd7667, %rd7630;
	and.b64  	%rd7731, %rd7704, %rd7730;
	xor.b64  	%rd7732, %rd7731, %rd7630;
	add.s64 	%rd7733, %rd7729, %rd7732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5362,%dummy}, %rd7704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5363}, %rd7704;
	}
	shf.r.wrap.b32 	%r5364, %r5363, %r5362, 14;
	shf.r.wrap.b32 	%r5365, %r5362, %r5363, 14;
	mov.b64 	%rd7734, {%r5365, %r5364};
	shf.r.wrap.b32 	%r5366, %r5363, %r5362, 18;
	shf.r.wrap.b32 	%r5367, %r5362, %r5363, 18;
	mov.b64 	%rd7735, {%r5367, %r5366};
	xor.b64  	%rd7736, %rd7734, %rd7735;
	shf.l.wrap.b32 	%r5368, %r5362, %r5363, 23;
	shf.l.wrap.b32 	%r5369, %r5363, %r5362, 23;
	mov.b64 	%rd7737, {%r5369, %r5368};
	xor.b64  	%rd7738, %rd7736, %rd7737;
	add.s64 	%rd7739, %rd7733, %rd7738;
	add.s64 	%rd7740, %rd7739, 1847814050463011016;
	add.s64 	%rd7741, %rd7740, %rd7604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5370,%dummy}, %rd7715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5371}, %rd7715;
	}
	shf.r.wrap.b32 	%r5372, %r5371, %r5370, 28;
	shf.r.wrap.b32 	%r5373, %r5370, %r5371, 28;
	mov.b64 	%rd7742, {%r5373, %r5372};
	shf.l.wrap.b32 	%r5374, %r5370, %r5371, 30;
	shf.l.wrap.b32 	%r5375, %r5371, %r5370, 30;
	mov.b64 	%rd7743, {%r5375, %r5374};
	xor.b64  	%rd7744, %rd7742, %rd7743;
	shf.l.wrap.b32 	%r5376, %r5370, %r5371, 25;
	shf.l.wrap.b32 	%r5377, %r5371, %r5370, 25;
	mov.b64 	%rd7745, {%r5377, %r5376};
	xor.b64  	%rd7746, %rd7744, %rd7745;
	and.b64  	%rd7747, %rd7715, %rd7678;
	or.b64  	%rd7748, %rd7715, %rd7678;
	and.b64  	%rd7749, %rd7748, %rd7641;
	or.b64  	%rd7750, %rd7749, %rd7747;
	add.s64 	%rd7751, %rd7750, %rd7746;
	add.s64 	%rd7752, %rd7751, %rd7740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5378,%dummy}, %rd7691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5379}, %rd7691;
	}
	shf.r.wrap.b32 	%r5380, %r5379, %r5378, 19;
	shf.r.wrap.b32 	%r5381, %r5378, %r5379, 19;
	mov.b64 	%rd7753, {%r5381, %r5380};
	shf.l.wrap.b32 	%r5382, %r5378, %r5379, 3;
	shf.l.wrap.b32 	%r5383, %r5379, %r5378, 3;
	mov.b64 	%rd7754, {%r5383, %r5382};
	xor.b64  	%rd7755, %rd7753, %rd7754;
	shr.u64 	%rd7756, %rd7691, 6;
	xor.b64  	%rd7757, %rd7755, %rd7756;
	shf.r.wrap.b32 	%r5384, %r5041, %r5040, 1;
	shf.r.wrap.b32 	%r5385, %r5040, %r5041, 1;
	mov.b64 	%rd7758, {%r5385, %r5384};
	shf.r.wrap.b32 	%r5386, %r5041, %r5040, 8;
	shf.r.wrap.b32 	%r5387, %r5040, %r5041, 8;
	mov.b64 	%rd7759, {%r5387, %r5386};
	xor.b64  	%rd7760, %rd7758, %rd7759;
	shr.u64 	%rd7761, %rd7210, 7;
	xor.b64  	%rd7762, %rd7760, %rd7761;
	add.s64 	%rd7763, %rd7762, %rd7173;
	add.s64 	%rd7764, %rd7763, %rd7506;
	add.s64 	%rd7765, %rd7764, %rd7757;
	add.s64 	%rd7766, %rd7765, %rd7630;
	xor.b64  	%rd7767, %rd7704, %rd7667;
	and.b64  	%rd7768, %rd7741, %rd7767;
	xor.b64  	%rd7769, %rd7768, %rd7667;
	add.s64 	%rd7770, %rd7766, %rd7769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5388,%dummy}, %rd7741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5389}, %rd7741;
	}
	shf.r.wrap.b32 	%r5390, %r5389, %r5388, 14;
	shf.r.wrap.b32 	%r5391, %r5388, %r5389, 14;
	mov.b64 	%rd7771, {%r5391, %r5390};
	shf.r.wrap.b32 	%r5392, %r5389, %r5388, 18;
	shf.r.wrap.b32 	%r5393, %r5388, %r5389, 18;
	mov.b64 	%rd7772, {%r5393, %r5392};
	xor.b64  	%rd7773, %rd7771, %rd7772;
	shf.l.wrap.b32 	%r5394, %r5388, %r5389, 23;
	shf.l.wrap.b32 	%r5395, %r5389, %r5388, 23;
	mov.b64 	%rd7774, {%r5395, %r5394};
	xor.b64  	%rd7775, %rd7773, %rd7774;
	add.s64 	%rd7776, %rd7770, %rd7775;
	add.s64 	%rd7777, %rd7776, 2177327727835720531;
	add.s64 	%rd7778, %rd7777, %rd7641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5396,%dummy}, %rd7752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5397}, %rd7752;
	}
	shf.r.wrap.b32 	%r5398, %r5397, %r5396, 28;
	shf.r.wrap.b32 	%r5399, %r5396, %r5397, 28;
	mov.b64 	%rd7779, {%r5399, %r5398};
	shf.l.wrap.b32 	%r5400, %r5396, %r5397, 30;
	shf.l.wrap.b32 	%r5401, %r5397, %r5396, 30;
	mov.b64 	%rd7780, {%r5401, %r5400};
	xor.b64  	%rd7781, %rd7779, %rd7780;
	shf.l.wrap.b32 	%r5402, %r5396, %r5397, 25;
	shf.l.wrap.b32 	%r5403, %r5397, %r5396, 25;
	mov.b64 	%rd7782, {%r5403, %r5402};
	xor.b64  	%rd7783, %rd7781, %rd7782;
	and.b64  	%rd7784, %rd7752, %rd7715;
	or.b64  	%rd7785, %rd7752, %rd7715;
	and.b64  	%rd7786, %rd7785, %rd7678;
	or.b64  	%rd7787, %rd7786, %rd7784;
	add.s64 	%rd7788, %rd7787, %rd7783;
	add.s64 	%rd7789, %rd7788, %rd7777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5404,%dummy}, %rd7728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5405}, %rd7728;
	}
	shf.r.wrap.b32 	%r5406, %r5405, %r5404, 19;
	shf.r.wrap.b32 	%r5407, %r5404, %r5405, 19;
	mov.b64 	%rd7790, {%r5407, %r5406};
	shf.l.wrap.b32 	%r5408, %r5404, %r5405, 3;
	shf.l.wrap.b32 	%r5409, %r5405, %r5404, 3;
	mov.b64 	%rd7791, {%r5409, %r5408};
	xor.b64  	%rd7792, %rd7790, %rd7791;
	shr.u64 	%rd7793, %rd7728, 6;
	xor.b64  	%rd7794, %rd7792, %rd7793;
	shf.r.wrap.b32 	%r5410, %r5067, %r5066, 1;
	shf.r.wrap.b32 	%r5411, %r5066, %r5067, 1;
	mov.b64 	%rd7795, {%r5411, %r5410};
	shf.r.wrap.b32 	%r5412, %r5067, %r5066, 8;
	shf.r.wrap.b32 	%r5413, %r5066, %r5067, 8;
	mov.b64 	%rd7796, {%r5413, %r5412};
	xor.b64  	%rd7797, %rd7795, %rd7796;
	shr.u64 	%rd7798, %rd7247, 7;
	xor.b64  	%rd7799, %rd7797, %rd7798;
	add.s64 	%rd7800, %rd7799, %rd7210;
	add.s64 	%rd7801, %rd7800, %rd7543;
	add.s64 	%rd7802, %rd7801, %rd7794;
	add.s64 	%rd7803, %rd7802, %rd7667;
	xor.b64  	%rd7804, %rd7741, %rd7704;
	and.b64  	%rd7805, %rd7778, %rd7804;
	xor.b64  	%rd7806, %rd7805, %rd7704;
	add.s64 	%rd7807, %rd7803, %rd7806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5414,%dummy}, %rd7778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5415}, %rd7778;
	}
	shf.r.wrap.b32 	%r5416, %r5415, %r5414, 14;
	shf.r.wrap.b32 	%r5417, %r5414, %r5415, 14;
	mov.b64 	%rd7808, {%r5417, %r5416};
	shf.r.wrap.b32 	%r5418, %r5415, %r5414, 18;
	shf.r.wrap.b32 	%r5419, %r5414, %r5415, 18;
	mov.b64 	%rd7809, {%r5419, %r5418};
	xor.b64  	%rd7810, %rd7808, %rd7809;
	shf.l.wrap.b32 	%r5420, %r5414, %r5415, 23;
	shf.l.wrap.b32 	%r5421, %r5415, %r5414, 23;
	mov.b64 	%rd7811, {%r5421, %r5420};
	xor.b64  	%rd7812, %rd7810, %rd7811;
	add.s64 	%rd7813, %rd7807, %rd7812;
	add.s64 	%rd7814, %rd7813, 2830643537854262169;
	add.s64 	%rd7815, %rd7814, %rd7678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd7789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5423}, %rd7789;
	}
	shf.r.wrap.b32 	%r5424, %r5423, %r5422, 28;
	shf.r.wrap.b32 	%r5425, %r5422, %r5423, 28;
	mov.b64 	%rd7816, {%r5425, %r5424};
	shf.l.wrap.b32 	%r5426, %r5422, %r5423, 30;
	shf.l.wrap.b32 	%r5427, %r5423, %r5422, 30;
	mov.b64 	%rd7817, {%r5427, %r5426};
	xor.b64  	%rd7818, %rd7816, %rd7817;
	shf.l.wrap.b32 	%r5428, %r5422, %r5423, 25;
	shf.l.wrap.b32 	%r5429, %r5423, %r5422, 25;
	mov.b64 	%rd7819, {%r5429, %r5428};
	xor.b64  	%rd7820, %rd7818, %rd7819;
	and.b64  	%rd7821, %rd7789, %rd7752;
	or.b64  	%rd7822, %rd7789, %rd7752;
	and.b64  	%rd7823, %rd7822, %rd7715;
	or.b64  	%rd7824, %rd7823, %rd7821;
	add.s64 	%rd7825, %rd7824, %rd7820;
	add.s64 	%rd7826, %rd7825, %rd7814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5430,%dummy}, %rd7765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5431}, %rd7765;
	}
	shf.r.wrap.b32 	%r5432, %r5431, %r5430, 19;
	shf.r.wrap.b32 	%r5433, %r5430, %r5431, 19;
	mov.b64 	%rd7827, {%r5433, %r5432};
	shf.l.wrap.b32 	%r5434, %r5430, %r5431, 3;
	shf.l.wrap.b32 	%r5435, %r5431, %r5430, 3;
	mov.b64 	%rd7828, {%r5435, %r5434};
	xor.b64  	%rd7829, %rd7827, %rd7828;
	shr.u64 	%rd7830, %rd7765, 6;
	xor.b64  	%rd7831, %rd7829, %rd7830;
	shf.r.wrap.b32 	%r5436, %r5093, %r5092, 1;
	shf.r.wrap.b32 	%r5437, %r5092, %r5093, 1;
	mov.b64 	%rd7832, {%r5437, %r5436};
	shf.r.wrap.b32 	%r5438, %r5093, %r5092, 8;
	shf.r.wrap.b32 	%r5439, %r5092, %r5093, 8;
	mov.b64 	%rd7833, {%r5439, %r5438};
	xor.b64  	%rd7834, %rd7832, %rd7833;
	shr.u64 	%rd7835, %rd7284, 7;
	xor.b64  	%rd7836, %rd7834, %rd7835;
	add.s64 	%rd7837, %rd7836, %rd7247;
	add.s64 	%rd7838, %rd7837, %rd7580;
	add.s64 	%rd7839, %rd7838, %rd7831;
	add.s64 	%rd7840, %rd7839, %rd7704;
	xor.b64  	%rd7841, %rd7778, %rd7741;
	and.b64  	%rd7842, %rd7815, %rd7841;
	xor.b64  	%rd7843, %rd7842, %rd7741;
	add.s64 	%rd7844, %rd7840, %rd7843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5440,%dummy}, %rd7815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5441}, %rd7815;
	}
	shf.r.wrap.b32 	%r5442, %r5441, %r5440, 14;
	shf.r.wrap.b32 	%r5443, %r5440, %r5441, 14;
	mov.b64 	%rd7845, {%r5443, %r5442};
	shf.r.wrap.b32 	%r5444, %r5441, %r5440, 18;
	shf.r.wrap.b32 	%r5445, %r5440, %r5441, 18;
	mov.b64 	%rd7846, {%r5445, %r5444};
	xor.b64  	%rd7847, %rd7845, %rd7846;
	shf.l.wrap.b32 	%r5446, %r5440, %r5441, 23;
	shf.l.wrap.b32 	%r5447, %r5441, %r5440, 23;
	mov.b64 	%rd7848, {%r5447, %r5446};
	xor.b64  	%rd7849, %rd7847, %rd7848;
	add.s64 	%rd7850, %rd7844, %rd7849;
	add.s64 	%rd7851, %rd7850, 3796741975233480872;
	add.s64 	%rd7852, %rd7851, %rd7715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5448,%dummy}, %rd7826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5449}, %rd7826;
	}
	shf.r.wrap.b32 	%r5450, %r5449, %r5448, 28;
	shf.r.wrap.b32 	%r5451, %r5448, %r5449, 28;
	mov.b64 	%rd7853, {%r5451, %r5450};
	shf.l.wrap.b32 	%r5452, %r5448, %r5449, 30;
	shf.l.wrap.b32 	%r5453, %r5449, %r5448, 30;
	mov.b64 	%rd7854, {%r5453, %r5452};
	xor.b64  	%rd7855, %rd7853, %rd7854;
	shf.l.wrap.b32 	%r5454, %r5448, %r5449, 25;
	shf.l.wrap.b32 	%r5455, %r5449, %r5448, 25;
	mov.b64 	%rd7856, {%r5455, %r5454};
	xor.b64  	%rd7857, %rd7855, %rd7856;
	and.b64  	%rd7858, %rd7826, %rd7789;
	or.b64  	%rd7859, %rd7826, %rd7789;
	and.b64  	%rd7860, %rd7859, %rd7752;
	or.b64  	%rd7861, %rd7860, %rd7858;
	add.s64 	%rd7862, %rd7861, %rd7857;
	add.s64 	%rd7863, %rd7862, %rd7851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5456,%dummy}, %rd7802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5457}, %rd7802;
	}
	shf.r.wrap.b32 	%r5458, %r5457, %r5456, 19;
	shf.r.wrap.b32 	%r5459, %r5456, %r5457, 19;
	mov.b64 	%rd7864, {%r5459, %r5458};
	shf.l.wrap.b32 	%r5460, %r5456, %r5457, 3;
	shf.l.wrap.b32 	%r5461, %r5457, %r5456, 3;
	mov.b64 	%rd7865, {%r5461, %r5460};
	xor.b64  	%rd7866, %rd7864, %rd7865;
	shr.u64 	%rd7867, %rd7802, 6;
	xor.b64  	%rd7868, %rd7866, %rd7867;
	shf.r.wrap.b32 	%r5462, %r5119, %r5118, 1;
	shf.r.wrap.b32 	%r5463, %r5118, %r5119, 1;
	mov.b64 	%rd7869, {%r5463, %r5462};
	shf.r.wrap.b32 	%r5464, %r5119, %r5118, 8;
	shf.r.wrap.b32 	%r5465, %r5118, %r5119, 8;
	mov.b64 	%rd7870, {%r5465, %r5464};
	xor.b64  	%rd7871, %rd7869, %rd7870;
	shr.u64 	%rd7872, %rd7321, 7;
	xor.b64  	%rd7873, %rd7871, %rd7872;
	add.s64 	%rd7874, %rd7873, %rd7284;
	add.s64 	%rd7875, %rd7874, %rd7617;
	add.s64 	%rd7876, %rd7875, %rd7868;
	add.s64 	%rd7877, %rd7876, %rd7741;
	xor.b64  	%rd7878, %rd7815, %rd7778;
	and.b64  	%rd7879, %rd7852, %rd7878;
	xor.b64  	%rd7880, %rd7879, %rd7778;
	add.s64 	%rd7881, %rd7877, %rd7880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5466,%dummy}, %rd7852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5467}, %rd7852;
	}
	shf.r.wrap.b32 	%r5468, %r5467, %r5466, 14;
	shf.r.wrap.b32 	%r5469, %r5466, %r5467, 14;
	mov.b64 	%rd7882, {%r5469, %r5468};
	shf.r.wrap.b32 	%r5470, %r5467, %r5466, 18;
	shf.r.wrap.b32 	%r5471, %r5466, %r5467, 18;
	mov.b64 	%rd7883, {%r5471, %r5470};
	xor.b64  	%rd7884, %rd7882, %rd7883;
	shf.l.wrap.b32 	%r5472, %r5466, %r5467, 23;
	shf.l.wrap.b32 	%r5473, %r5467, %r5466, 23;
	mov.b64 	%rd7885, {%r5473, %r5472};
	xor.b64  	%rd7886, %rd7884, %rd7885;
	add.s64 	%rd7887, %rd7881, %rd7886;
	add.s64 	%rd7888, %rd7887, 4115178125766777443;
	add.s64 	%rd7889, %rd7888, %rd7752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd7863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5475}, %rd7863;
	}
	shf.r.wrap.b32 	%r5476, %r5475, %r5474, 28;
	shf.r.wrap.b32 	%r5477, %r5474, %r5475, 28;
	mov.b64 	%rd7890, {%r5477, %r5476};
	shf.l.wrap.b32 	%r5478, %r5474, %r5475, 30;
	shf.l.wrap.b32 	%r5479, %r5475, %r5474, 30;
	mov.b64 	%rd7891, {%r5479, %r5478};
	xor.b64  	%rd7892, %rd7890, %rd7891;
	shf.l.wrap.b32 	%r5480, %r5474, %r5475, 25;
	shf.l.wrap.b32 	%r5481, %r5475, %r5474, 25;
	mov.b64 	%rd7893, {%r5481, %r5480};
	xor.b64  	%rd7894, %rd7892, %rd7893;
	and.b64  	%rd7895, %rd7863, %rd7826;
	or.b64  	%rd7896, %rd7863, %rd7826;
	and.b64  	%rd7897, %rd7896, %rd7789;
	or.b64  	%rd7898, %rd7897, %rd7895;
	add.s64 	%rd7899, %rd7898, %rd7894;
	add.s64 	%rd7900, %rd7899, %rd7888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd7839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5483}, %rd7839;
	}
	shf.r.wrap.b32 	%r5484, %r5483, %r5482, 19;
	shf.r.wrap.b32 	%r5485, %r5482, %r5483, 19;
	mov.b64 	%rd7901, {%r5485, %r5484};
	shf.l.wrap.b32 	%r5486, %r5482, %r5483, 3;
	shf.l.wrap.b32 	%r5487, %r5483, %r5482, 3;
	mov.b64 	%rd7902, {%r5487, %r5486};
	xor.b64  	%rd7903, %rd7901, %rd7902;
	shr.u64 	%rd7904, %rd7839, 6;
	xor.b64  	%rd7905, %rd7903, %rd7904;
	shf.r.wrap.b32 	%r5488, %r5145, %r5144, 1;
	shf.r.wrap.b32 	%r5489, %r5144, %r5145, 1;
	mov.b64 	%rd7906, {%r5489, %r5488};
	shf.r.wrap.b32 	%r5490, %r5145, %r5144, 8;
	shf.r.wrap.b32 	%r5491, %r5144, %r5145, 8;
	mov.b64 	%rd7907, {%r5491, %r5490};
	xor.b64  	%rd7908, %rd7906, %rd7907;
	shr.u64 	%rd7909, %rd7358, 7;
	xor.b64  	%rd7910, %rd7908, %rd7909;
	add.s64 	%rd7911, %rd7910, %rd7321;
	add.s64 	%rd7912, %rd7911, %rd7654;
	add.s64 	%rd7913, %rd7912, %rd7905;
	add.s64 	%rd7914, %rd7913, %rd7778;
	xor.b64  	%rd7915, %rd7852, %rd7815;
	and.b64  	%rd7916, %rd7889, %rd7915;
	xor.b64  	%rd7917, %rd7916, %rd7815;
	add.s64 	%rd7918, %rd7914, %rd7917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5492,%dummy}, %rd7889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5493}, %rd7889;
	}
	shf.r.wrap.b32 	%r5494, %r5493, %r5492, 14;
	shf.r.wrap.b32 	%r5495, %r5492, %r5493, 14;
	mov.b64 	%rd7919, {%r5495, %r5494};
	shf.r.wrap.b32 	%r5496, %r5493, %r5492, 18;
	shf.r.wrap.b32 	%r5497, %r5492, %r5493, 18;
	mov.b64 	%rd7920, {%r5497, %r5496};
	xor.b64  	%rd7921, %rd7919, %rd7920;
	shf.l.wrap.b32 	%r5498, %r5492, %r5493, 23;
	shf.l.wrap.b32 	%r5499, %r5493, %r5492, 23;
	mov.b64 	%rd7922, {%r5499, %r5498};
	xor.b64  	%rd7923, %rd7921, %rd7922;
	add.s64 	%rd7924, %rd7918, %rd7923;
	add.s64 	%rd7925, %rd7924, 5681478168544905931;
	add.s64 	%rd7926, %rd7925, %rd7789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5500,%dummy}, %rd7900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd7900;
	}
	shf.r.wrap.b32 	%r5502, %r5501, %r5500, 28;
	shf.r.wrap.b32 	%r5503, %r5500, %r5501, 28;
	mov.b64 	%rd7927, {%r5503, %r5502};
	shf.l.wrap.b32 	%r5504, %r5500, %r5501, 30;
	shf.l.wrap.b32 	%r5505, %r5501, %r5500, 30;
	mov.b64 	%rd7928, {%r5505, %r5504};
	xor.b64  	%rd7929, %rd7927, %rd7928;
	shf.l.wrap.b32 	%r5506, %r5500, %r5501, 25;
	shf.l.wrap.b32 	%r5507, %r5501, %r5500, 25;
	mov.b64 	%rd7930, {%r5507, %r5506};
	xor.b64  	%rd7931, %rd7929, %rd7930;
	and.b64  	%rd7932, %rd7900, %rd7863;
	or.b64  	%rd7933, %rd7900, %rd7863;
	and.b64  	%rd7934, %rd7933, %rd7826;
	or.b64  	%rd7935, %rd7934, %rd7932;
	add.s64 	%rd7936, %rd7935, %rd7931;
	add.s64 	%rd7937, %rd7936, %rd7925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5508,%dummy}, %rd7876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5509}, %rd7876;
	}
	shf.r.wrap.b32 	%r5510, %r5509, %r5508, 19;
	shf.r.wrap.b32 	%r5511, %r5508, %r5509, 19;
	mov.b64 	%rd7938, {%r5511, %r5510};
	shf.l.wrap.b32 	%r5512, %r5508, %r5509, 3;
	shf.l.wrap.b32 	%r5513, %r5509, %r5508, 3;
	mov.b64 	%rd7939, {%r5513, %r5512};
	xor.b64  	%rd7940, %rd7938, %rd7939;
	shr.u64 	%rd7941, %rd7876, 6;
	xor.b64  	%rd7942, %rd7940, %rd7941;
	shf.r.wrap.b32 	%r5514, %r5171, %r5170, 1;
	shf.r.wrap.b32 	%r5515, %r5170, %r5171, 1;
	mov.b64 	%rd7943, {%r5515, %r5514};
	shf.r.wrap.b32 	%r5516, %r5171, %r5170, 8;
	shf.r.wrap.b32 	%r5517, %r5170, %r5171, 8;
	mov.b64 	%rd7944, {%r5517, %r5516};
	xor.b64  	%rd7945, %rd7943, %rd7944;
	shr.u64 	%rd7946, %rd7395, 7;
	xor.b64  	%rd7947, %rd7945, %rd7946;
	add.s64 	%rd7948, %rd7947, %rd7358;
	add.s64 	%rd7949, %rd7948, %rd7691;
	add.s64 	%rd7950, %rd7949, %rd7942;
	add.s64 	%rd7951, %rd7950, %rd7815;
	xor.b64  	%rd7952, %rd7889, %rd7852;
	and.b64  	%rd7953, %rd7926, %rd7952;
	xor.b64  	%rd7954, %rd7953, %rd7852;
	add.s64 	%rd7955, %rd7951, %rd7954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5518,%dummy}, %rd7926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5519}, %rd7926;
	}
	shf.r.wrap.b32 	%r5520, %r5519, %r5518, 14;
	shf.r.wrap.b32 	%r5521, %r5518, %r5519, 14;
	mov.b64 	%rd7956, {%r5521, %r5520};
	shf.r.wrap.b32 	%r5522, %r5519, %r5518, 18;
	shf.r.wrap.b32 	%r5523, %r5518, %r5519, 18;
	mov.b64 	%rd7957, {%r5523, %r5522};
	xor.b64  	%rd7958, %rd7956, %rd7957;
	shf.l.wrap.b32 	%r5524, %r5518, %r5519, 23;
	shf.l.wrap.b32 	%r5525, %r5519, %r5518, 23;
	mov.b64 	%rd7959, {%r5525, %r5524};
	xor.b64  	%rd7960, %rd7958, %rd7959;
	add.s64 	%rd7961, %rd7955, %rd7960;
	add.s64 	%rd7962, %rd7961, 6601373596472566643;
	add.s64 	%rd7963, %rd7962, %rd7826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5526,%dummy}, %rd7937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5527}, %rd7937;
	}
	shf.r.wrap.b32 	%r5528, %r5527, %r5526, 28;
	shf.r.wrap.b32 	%r5529, %r5526, %r5527, 28;
	mov.b64 	%rd7964, {%r5529, %r5528};
	shf.l.wrap.b32 	%r5530, %r5526, %r5527, 30;
	shf.l.wrap.b32 	%r5531, %r5527, %r5526, 30;
	mov.b64 	%rd7965, {%r5531, %r5530};
	xor.b64  	%rd7966, %rd7964, %rd7965;
	shf.l.wrap.b32 	%r5532, %r5526, %r5527, 25;
	shf.l.wrap.b32 	%r5533, %r5527, %r5526, 25;
	mov.b64 	%rd7967, {%r5533, %r5532};
	xor.b64  	%rd7968, %rd7966, %rd7967;
	and.b64  	%rd7969, %rd7937, %rd7900;
	or.b64  	%rd7970, %rd7937, %rd7900;
	and.b64  	%rd7971, %rd7970, %rd7863;
	or.b64  	%rd7972, %rd7971, %rd7969;
	add.s64 	%rd7973, %rd7972, %rd7968;
	add.s64 	%rd7974, %rd7973, %rd7962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd7913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5535}, %rd7913;
	}
	shf.r.wrap.b32 	%r5536, %r5535, %r5534, 19;
	shf.r.wrap.b32 	%r5537, %r5534, %r5535, 19;
	mov.b64 	%rd7975, {%r5537, %r5536};
	shf.l.wrap.b32 	%r5538, %r5534, %r5535, 3;
	shf.l.wrap.b32 	%r5539, %r5535, %r5534, 3;
	mov.b64 	%rd7976, {%r5539, %r5538};
	xor.b64  	%rd7977, %rd7975, %rd7976;
	shr.u64 	%rd7978, %rd7913, 6;
	xor.b64  	%rd7979, %rd7977, %rd7978;
	shf.r.wrap.b32 	%r5540, %r5197, %r5196, 1;
	shf.r.wrap.b32 	%r5541, %r5196, %r5197, 1;
	mov.b64 	%rd7980, {%r5541, %r5540};
	shf.r.wrap.b32 	%r5542, %r5197, %r5196, 8;
	shf.r.wrap.b32 	%r5543, %r5196, %r5197, 8;
	mov.b64 	%rd7981, {%r5543, %r5542};
	xor.b64  	%rd7982, %rd7980, %rd7981;
	shr.u64 	%rd7983, %rd7432, 7;
	xor.b64  	%rd7984, %rd7982, %rd7983;
	add.s64 	%rd7985, %rd7984, %rd7395;
	add.s64 	%rd7986, %rd7985, %rd7728;
	add.s64 	%rd7987, %rd7986, %rd7979;
	add.s64 	%rd7988, %rd7987, %rd7852;
	xor.b64  	%rd7989, %rd7926, %rd7889;
	and.b64  	%rd7990, %rd7963, %rd7989;
	xor.b64  	%rd7991, %rd7990, %rd7889;
	add.s64 	%rd7992, %rd7988, %rd7991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5544,%dummy}, %rd7963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd7963;
	}
	shf.r.wrap.b32 	%r5546, %r5545, %r5544, 14;
	shf.r.wrap.b32 	%r5547, %r5544, %r5545, 14;
	mov.b64 	%rd7993, {%r5547, %r5546};
	shf.r.wrap.b32 	%r5548, %r5545, %r5544, 18;
	shf.r.wrap.b32 	%r5549, %r5544, %r5545, 18;
	mov.b64 	%rd7994, {%r5549, %r5548};
	xor.b64  	%rd7995, %rd7993, %rd7994;
	shf.l.wrap.b32 	%r5550, %r5544, %r5545, 23;
	shf.l.wrap.b32 	%r5551, %r5545, %r5544, 23;
	mov.b64 	%rd7996, {%r5551, %r5550};
	xor.b64  	%rd7997, %rd7995, %rd7996;
	add.s64 	%rd7998, %rd7992, %rd7997;
	add.s64 	%rd7999, %rd7998, 7507060721942968483;
	add.s64 	%rd8000, %rd7999, %rd7863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5552,%dummy}, %rd7974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5553}, %rd7974;
	}
	shf.r.wrap.b32 	%r5554, %r5553, %r5552, 28;
	shf.r.wrap.b32 	%r5555, %r5552, %r5553, 28;
	mov.b64 	%rd8001, {%r5555, %r5554};
	shf.l.wrap.b32 	%r5556, %r5552, %r5553, 30;
	shf.l.wrap.b32 	%r5557, %r5553, %r5552, 30;
	mov.b64 	%rd8002, {%r5557, %r5556};
	xor.b64  	%rd8003, %rd8001, %rd8002;
	shf.l.wrap.b32 	%r5558, %r5552, %r5553, 25;
	shf.l.wrap.b32 	%r5559, %r5553, %r5552, 25;
	mov.b64 	%rd8004, {%r5559, %r5558};
	xor.b64  	%rd8005, %rd8003, %rd8004;
	and.b64  	%rd8006, %rd7974, %rd7937;
	or.b64  	%rd8007, %rd7974, %rd7937;
	and.b64  	%rd8008, %rd8007, %rd7900;
	or.b64  	%rd8009, %rd8008, %rd8006;
	add.s64 	%rd8010, %rd8009, %rd8005;
	add.s64 	%rd8011, %rd8010, %rd7999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd7950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd7950;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 19;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 19;
	mov.b64 	%rd8012, {%r5563, %r5562};
	shf.l.wrap.b32 	%r5564, %r5560, %r5561, 3;
	shf.l.wrap.b32 	%r5565, %r5561, %r5560, 3;
	mov.b64 	%rd8013, {%r5565, %r5564};
	xor.b64  	%rd8014, %rd8012, %rd8013;
	shr.u64 	%rd8015, %rd7950, 6;
	xor.b64  	%rd8016, %rd8014, %rd8015;
	shf.r.wrap.b32 	%r5566, %r5223, %r5222, 1;
	shf.r.wrap.b32 	%r5567, %r5222, %r5223, 1;
	mov.b64 	%rd8017, {%r5567, %r5566};
	shf.r.wrap.b32 	%r5568, %r5223, %r5222, 8;
	shf.r.wrap.b32 	%r5569, %r5222, %r5223, 8;
	mov.b64 	%rd8018, {%r5569, %r5568};
	xor.b64  	%rd8019, %rd8017, %rd8018;
	shr.u64 	%rd8020, %rd7469, 7;
	xor.b64  	%rd8021, %rd8019, %rd8020;
	add.s64 	%rd8022, %rd8021, %rd7432;
	add.s64 	%rd8023, %rd8022, %rd7765;
	add.s64 	%rd8024, %rd8023, %rd8016;
	add.s64 	%rd8025, %rd8024, %rd7889;
	xor.b64  	%rd8026, %rd7963, %rd7926;
	and.b64  	%rd8027, %rd8000, %rd8026;
	xor.b64  	%rd8028, %rd8027, %rd7926;
	add.s64 	%rd8029, %rd8025, %rd8028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5570,%dummy}, %rd8000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5571}, %rd8000;
	}
	shf.r.wrap.b32 	%r5572, %r5571, %r5570, 14;
	shf.r.wrap.b32 	%r5573, %r5570, %r5571, 14;
	mov.b64 	%rd8030, {%r5573, %r5572};
	shf.r.wrap.b32 	%r5574, %r5571, %r5570, 18;
	shf.r.wrap.b32 	%r5575, %r5570, %r5571, 18;
	mov.b64 	%rd8031, {%r5575, %r5574};
	xor.b64  	%rd8032, %rd8030, %rd8031;
	shf.l.wrap.b32 	%r5576, %r5570, %r5571, 23;
	shf.l.wrap.b32 	%r5577, %r5571, %r5570, 23;
	mov.b64 	%rd8033, {%r5577, %r5576};
	xor.b64  	%rd8034, %rd8032, %rd8033;
	add.s64 	%rd8035, %rd8029, %rd8034;
	add.s64 	%rd8036, %rd8035, 8399075790359081724;
	add.s64 	%rd8037, %rd8036, %rd7900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5578,%dummy}, %rd8011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5579}, %rd8011;
	}
	shf.r.wrap.b32 	%r5580, %r5579, %r5578, 28;
	shf.r.wrap.b32 	%r5581, %r5578, %r5579, 28;
	mov.b64 	%rd8038, {%r5581, %r5580};
	shf.l.wrap.b32 	%r5582, %r5578, %r5579, 30;
	shf.l.wrap.b32 	%r5583, %r5579, %r5578, 30;
	mov.b64 	%rd8039, {%r5583, %r5582};
	xor.b64  	%rd8040, %rd8038, %rd8039;
	shf.l.wrap.b32 	%r5584, %r5578, %r5579, 25;
	shf.l.wrap.b32 	%r5585, %r5579, %r5578, 25;
	mov.b64 	%rd8041, {%r5585, %r5584};
	xor.b64  	%rd8042, %rd8040, %rd8041;
	and.b64  	%rd8043, %rd8011, %rd7974;
	or.b64  	%rd8044, %rd8011, %rd7974;
	and.b64  	%rd8045, %rd8044, %rd7937;
	or.b64  	%rd8046, %rd8045, %rd8043;
	add.s64 	%rd8047, %rd8046, %rd8042;
	add.s64 	%rd8048, %rd8047, %rd8036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd7987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5587}, %rd7987;
	}
	shf.r.wrap.b32 	%r5588, %r5587, %r5586, 19;
	shf.r.wrap.b32 	%r5589, %r5586, %r5587, 19;
	mov.b64 	%rd8049, {%r5589, %r5588};
	shf.l.wrap.b32 	%r5590, %r5586, %r5587, 3;
	shf.l.wrap.b32 	%r5591, %r5587, %r5586, 3;
	mov.b64 	%rd8050, {%r5591, %r5590};
	xor.b64  	%rd8051, %rd8049, %rd8050;
	shr.u64 	%rd8052, %rd7987, 6;
	xor.b64  	%rd8053, %rd8051, %rd8052;
	shf.r.wrap.b32 	%r5592, %r5249, %r5248, 1;
	shf.r.wrap.b32 	%r5593, %r5248, %r5249, 1;
	mov.b64 	%rd8054, {%r5593, %r5592};
	shf.r.wrap.b32 	%r5594, %r5249, %r5248, 8;
	shf.r.wrap.b32 	%r5595, %r5248, %r5249, 8;
	mov.b64 	%rd8055, {%r5595, %r5594};
	xor.b64  	%rd8056, %rd8054, %rd8055;
	shr.u64 	%rd8057, %rd7506, 7;
	xor.b64  	%rd8058, %rd8056, %rd8057;
	add.s64 	%rd8059, %rd8058, %rd7469;
	add.s64 	%rd8060, %rd8059, %rd7802;
	add.s64 	%rd8061, %rd8060, %rd8053;
	add.s64 	%rd8062, %rd8061, %rd7926;
	xor.b64  	%rd8063, %rd8000, %rd7963;
	and.b64  	%rd8064, %rd8037, %rd8063;
	xor.b64  	%rd8065, %rd8064, %rd7963;
	add.s64 	%rd8066, %rd8062, %rd8065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5596,%dummy}, %rd8037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd8037;
	}
	shf.r.wrap.b32 	%r5598, %r5597, %r5596, 14;
	shf.r.wrap.b32 	%r5599, %r5596, %r5597, 14;
	mov.b64 	%rd8067, {%r5599, %r5598};
	shf.r.wrap.b32 	%r5600, %r5597, %r5596, 18;
	shf.r.wrap.b32 	%r5601, %r5596, %r5597, 18;
	mov.b64 	%rd8068, {%r5601, %r5600};
	xor.b64  	%rd8069, %rd8067, %rd8068;
	shf.l.wrap.b32 	%r5602, %r5596, %r5597, 23;
	shf.l.wrap.b32 	%r5603, %r5597, %r5596, 23;
	mov.b64 	%rd8070, {%r5603, %r5602};
	xor.b64  	%rd8071, %rd8069, %rd8070;
	add.s64 	%rd8072, %rd8066, %rd8071;
	add.s64 	%rd8073, %rd8072, 8693463985226723168;
	add.s64 	%rd8074, %rd8073, %rd7937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5604,%dummy}, %rd8048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5605}, %rd8048;
	}
	shf.r.wrap.b32 	%r5606, %r5605, %r5604, 28;
	shf.r.wrap.b32 	%r5607, %r5604, %r5605, 28;
	mov.b64 	%rd8075, {%r5607, %r5606};
	shf.l.wrap.b32 	%r5608, %r5604, %r5605, 30;
	shf.l.wrap.b32 	%r5609, %r5605, %r5604, 30;
	mov.b64 	%rd8076, {%r5609, %r5608};
	xor.b64  	%rd8077, %rd8075, %rd8076;
	shf.l.wrap.b32 	%r5610, %r5604, %r5605, 25;
	shf.l.wrap.b32 	%r5611, %r5605, %r5604, 25;
	mov.b64 	%rd8078, {%r5611, %r5610};
	xor.b64  	%rd8079, %rd8077, %rd8078;
	and.b64  	%rd8080, %rd8048, %rd8011;
	or.b64  	%rd8081, %rd8048, %rd8011;
	and.b64  	%rd8082, %rd8081, %rd7974;
	or.b64  	%rd8083, %rd8082, %rd8080;
	add.s64 	%rd8084, %rd8083, %rd8079;
	add.s64 	%rd8085, %rd8084, %rd8073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5612,%dummy}, %rd8024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5613}, %rd8024;
	}
	shf.r.wrap.b32 	%r5614, %r5613, %r5612, 19;
	shf.r.wrap.b32 	%r5615, %r5612, %r5613, 19;
	mov.b64 	%rd8086, {%r5615, %r5614};
	shf.l.wrap.b32 	%r5616, %r5612, %r5613, 3;
	shf.l.wrap.b32 	%r5617, %r5613, %r5612, 3;
	mov.b64 	%rd8087, {%r5617, %r5616};
	xor.b64  	%rd8088, %rd8086, %rd8087;
	shr.u64 	%rd8089, %rd8024, 6;
	xor.b64  	%rd8090, %rd8088, %rd8089;
	shf.r.wrap.b32 	%r5618, %r5275, %r5274, 1;
	shf.r.wrap.b32 	%r5619, %r5274, %r5275, 1;
	mov.b64 	%rd8091, {%r5619, %r5618};
	shf.r.wrap.b32 	%r5620, %r5275, %r5274, 8;
	shf.r.wrap.b32 	%r5621, %r5274, %r5275, 8;
	mov.b64 	%rd8092, {%r5621, %r5620};
	xor.b64  	%rd8093, %rd8091, %rd8092;
	shr.u64 	%rd8094, %rd7543, 7;
	xor.b64  	%rd8095, %rd8093, %rd8094;
	add.s64 	%rd8096, %rd8095, %rd7506;
	add.s64 	%rd8097, %rd8096, %rd7839;
	add.s64 	%rd8098, %rd8097, %rd8090;
	add.s64 	%rd8099, %rd8098, %rd7963;
	xor.b64  	%rd8100, %rd8037, %rd8000;
	and.b64  	%rd8101, %rd8074, %rd8100;
	xor.b64  	%rd8102, %rd8101, %rd8000;
	add.s64 	%rd8103, %rd8099, %rd8102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5622,%dummy}, %rd8074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5623}, %rd8074;
	}
	shf.r.wrap.b32 	%r5624, %r5623, %r5622, 14;
	shf.r.wrap.b32 	%r5625, %r5622, %r5623, 14;
	mov.b64 	%rd8104, {%r5625, %r5624};
	shf.r.wrap.b32 	%r5626, %r5623, %r5622, 18;
	shf.r.wrap.b32 	%r5627, %r5622, %r5623, 18;
	mov.b64 	%rd8105, {%r5627, %r5626};
	xor.b64  	%rd8106, %rd8104, %rd8105;
	shf.l.wrap.b32 	%r5628, %r5622, %r5623, 23;
	shf.l.wrap.b32 	%r5629, %r5623, %r5622, 23;
	mov.b64 	%rd8107, {%r5629, %r5628};
	xor.b64  	%rd8108, %rd8106, %rd8107;
	add.s64 	%rd8109, %rd8103, %rd8108;
	add.s64 	%rd8110, %rd8109, -8878714635349349518;
	add.s64 	%rd8111, %rd8110, %rd7974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5630,%dummy}, %rd8085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5631}, %rd8085;
	}
	shf.r.wrap.b32 	%r5632, %r5631, %r5630, 28;
	shf.r.wrap.b32 	%r5633, %r5630, %r5631, 28;
	mov.b64 	%rd8112, {%r5633, %r5632};
	shf.l.wrap.b32 	%r5634, %r5630, %r5631, 30;
	shf.l.wrap.b32 	%r5635, %r5631, %r5630, 30;
	mov.b64 	%rd8113, {%r5635, %r5634};
	xor.b64  	%rd8114, %rd8112, %rd8113;
	shf.l.wrap.b32 	%r5636, %r5630, %r5631, 25;
	shf.l.wrap.b32 	%r5637, %r5631, %r5630, 25;
	mov.b64 	%rd8115, {%r5637, %r5636};
	xor.b64  	%rd8116, %rd8114, %rd8115;
	and.b64  	%rd8117, %rd8085, %rd8048;
	or.b64  	%rd8118, %rd8085, %rd8048;
	and.b64  	%rd8119, %rd8118, %rd8011;
	or.b64  	%rd8120, %rd8119, %rd8117;
	add.s64 	%rd8121, %rd8120, %rd8116;
	add.s64 	%rd8122, %rd8121, %rd8110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5638,%dummy}, %rd8061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5639}, %rd8061;
	}
	shf.r.wrap.b32 	%r5640, %r5639, %r5638, 19;
	shf.r.wrap.b32 	%r5641, %r5638, %r5639, 19;
	mov.b64 	%rd8123, {%r5641, %r5640};
	shf.l.wrap.b32 	%r5642, %r5638, %r5639, 3;
	shf.l.wrap.b32 	%r5643, %r5639, %r5638, 3;
	mov.b64 	%rd8124, {%r5643, %r5642};
	xor.b64  	%rd8125, %rd8123, %rd8124;
	shr.u64 	%rd8126, %rd8061, 6;
	xor.b64  	%rd8127, %rd8125, %rd8126;
	shf.r.wrap.b32 	%r5644, %r5301, %r5300, 1;
	shf.r.wrap.b32 	%r5645, %r5300, %r5301, 1;
	mov.b64 	%rd8128, {%r5645, %r5644};
	shf.r.wrap.b32 	%r5646, %r5301, %r5300, 8;
	shf.r.wrap.b32 	%r5647, %r5300, %r5301, 8;
	mov.b64 	%rd8129, {%r5647, %r5646};
	xor.b64  	%rd8130, %rd8128, %rd8129;
	shr.u64 	%rd8131, %rd7580, 7;
	xor.b64  	%rd8132, %rd8130, %rd8131;
	add.s64 	%rd8133, %rd8132, %rd7543;
	add.s64 	%rd8134, %rd8133, %rd7876;
	add.s64 	%rd8135, %rd8134, %rd8127;
	add.s64 	%rd8136, %rd8135, %rd8000;
	xor.b64  	%rd8137, %rd8074, %rd8037;
	and.b64  	%rd8138, %rd8111, %rd8137;
	xor.b64  	%rd8139, %rd8138, %rd8037;
	add.s64 	%rd8140, %rd8136, %rd8139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5648,%dummy}, %rd8111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd8111;
	}
	shf.r.wrap.b32 	%r5650, %r5649, %r5648, 14;
	shf.r.wrap.b32 	%r5651, %r5648, %r5649, 14;
	mov.b64 	%rd8141, {%r5651, %r5650};
	shf.r.wrap.b32 	%r5652, %r5649, %r5648, 18;
	shf.r.wrap.b32 	%r5653, %r5648, %r5649, 18;
	mov.b64 	%rd8142, {%r5653, %r5652};
	xor.b64  	%rd8143, %rd8141, %rd8142;
	shf.l.wrap.b32 	%r5654, %r5648, %r5649, 23;
	shf.l.wrap.b32 	%r5655, %r5649, %r5648, 23;
	mov.b64 	%rd8144, {%r5655, %r5654};
	xor.b64  	%rd8145, %rd8143, %rd8144;
	add.s64 	%rd8146, %rd8140, %rd8145;
	add.s64 	%rd8147, %rd8146, -8302665154208450068;
	add.s64 	%rd8148, %rd8147, %rd8011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd8122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd8122;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 28;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 28;
	mov.b64 	%rd8149, {%r5659, %r5658};
	shf.l.wrap.b32 	%r5660, %r5656, %r5657, 30;
	shf.l.wrap.b32 	%r5661, %r5657, %r5656, 30;
	mov.b64 	%rd8150, {%r5661, %r5660};
	xor.b64  	%rd8151, %rd8149, %rd8150;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 25;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 25;
	mov.b64 	%rd8152, {%r5663, %r5662};
	xor.b64  	%rd8153, %rd8151, %rd8152;
	and.b64  	%rd8154, %rd8122, %rd8085;
	or.b64  	%rd8155, %rd8122, %rd8085;
	and.b64  	%rd8156, %rd8155, %rd8048;
	or.b64  	%rd8157, %rd8156, %rd8154;
	add.s64 	%rd8158, %rd8157, %rd8153;
	add.s64 	%rd8159, %rd8158, %rd8147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd8098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd8098;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 19;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 19;
	mov.b64 	%rd8160, {%r5667, %r5666};
	shf.l.wrap.b32 	%r5668, %r5664, %r5665, 3;
	shf.l.wrap.b32 	%r5669, %r5665, %r5664, 3;
	mov.b64 	%rd8161, {%r5669, %r5668};
	xor.b64  	%rd8162, %rd8160, %rd8161;
	shr.u64 	%rd8163, %rd8098, 6;
	xor.b64  	%rd8164, %rd8162, %rd8163;
	shf.r.wrap.b32 	%r5670, %r5327, %r5326, 1;
	shf.r.wrap.b32 	%r5671, %r5326, %r5327, 1;
	mov.b64 	%rd8165, {%r5671, %r5670};
	shf.r.wrap.b32 	%r5672, %r5327, %r5326, 8;
	shf.r.wrap.b32 	%r5673, %r5326, %r5327, 8;
	mov.b64 	%rd8166, {%r5673, %r5672};
	xor.b64  	%rd8167, %rd8165, %rd8166;
	shr.u64 	%rd8168, %rd7617, 7;
	xor.b64  	%rd8169, %rd8167, %rd8168;
	add.s64 	%rd8170, %rd8169, %rd7580;
	add.s64 	%rd8171, %rd8170, %rd7913;
	add.s64 	%rd8172, %rd8171, %rd8164;
	add.s64 	%rd8173, %rd8172, %rd8037;
	xor.b64  	%rd8174, %rd8111, %rd8074;
	and.b64  	%rd8175, %rd8148, %rd8174;
	xor.b64  	%rd8176, %rd8175, %rd8074;
	add.s64 	%rd8177, %rd8173, %rd8176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5674,%dummy}, %rd8148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5675}, %rd8148;
	}
	shf.r.wrap.b32 	%r5676, %r5675, %r5674, 14;
	shf.r.wrap.b32 	%r5677, %r5674, %r5675, 14;
	mov.b64 	%rd8178, {%r5677, %r5676};
	shf.r.wrap.b32 	%r5678, %r5675, %r5674, 18;
	shf.r.wrap.b32 	%r5679, %r5674, %r5675, 18;
	mov.b64 	%rd8179, {%r5679, %r5678};
	xor.b64  	%rd8180, %rd8178, %rd8179;
	shf.l.wrap.b32 	%r5680, %r5674, %r5675, 23;
	shf.l.wrap.b32 	%r5681, %r5675, %r5674, 23;
	mov.b64 	%rd8181, {%r5681, %r5680};
	xor.b64  	%rd8182, %rd8180, %rd8181;
	add.s64 	%rd8183, %rd8177, %rd8182;
	add.s64 	%rd8184, %rd8183, -8016688836872298968;
	add.s64 	%rd8185, %rd8184, %rd8048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5682,%dummy}, %rd8159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5683}, %rd8159;
	}
	shf.r.wrap.b32 	%r5684, %r5683, %r5682, 28;
	shf.r.wrap.b32 	%r5685, %r5682, %r5683, 28;
	mov.b64 	%rd8186, {%r5685, %r5684};
	shf.l.wrap.b32 	%r5686, %r5682, %r5683, 30;
	shf.l.wrap.b32 	%r5687, %r5683, %r5682, 30;
	mov.b64 	%rd8187, {%r5687, %r5686};
	xor.b64  	%rd8188, %rd8186, %rd8187;
	shf.l.wrap.b32 	%r5688, %r5682, %r5683, 25;
	shf.l.wrap.b32 	%r5689, %r5683, %r5682, 25;
	mov.b64 	%rd8189, {%r5689, %r5688};
	xor.b64  	%rd8190, %rd8188, %rd8189;
	and.b64  	%rd8191, %rd8159, %rd8122;
	or.b64  	%rd8192, %rd8159, %rd8122;
	and.b64  	%rd8193, %rd8192, %rd8085;
	or.b64  	%rd8194, %rd8193, %rd8191;
	add.s64 	%rd8195, %rd8194, %rd8190;
	add.s64 	%rd8196, %rd8195, %rd8184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5690,%dummy}, %rd8135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5691}, %rd8135;
	}
	shf.r.wrap.b32 	%r5692, %r5691, %r5690, 19;
	shf.r.wrap.b32 	%r5693, %r5690, %r5691, 19;
	mov.b64 	%rd8197, {%r5693, %r5692};
	shf.l.wrap.b32 	%r5694, %r5690, %r5691, 3;
	shf.l.wrap.b32 	%r5695, %r5691, %r5690, 3;
	mov.b64 	%rd8198, {%r5695, %r5694};
	xor.b64  	%rd8199, %rd8197, %rd8198;
	shr.u64 	%rd8200, %rd8135, 6;
	xor.b64  	%rd8201, %rd8199, %rd8200;
	shf.r.wrap.b32 	%r5696, %r5353, %r5352, 1;
	shf.r.wrap.b32 	%r5697, %r5352, %r5353, 1;
	mov.b64 	%rd8202, {%r5697, %r5696};
	shf.r.wrap.b32 	%r5698, %r5353, %r5352, 8;
	shf.r.wrap.b32 	%r5699, %r5352, %r5353, 8;
	mov.b64 	%rd8203, {%r5699, %r5698};
	xor.b64  	%rd8204, %rd8202, %rd8203;
	shr.u64 	%rd8205, %rd7654, 7;
	xor.b64  	%rd8206, %rd8204, %rd8205;
	add.s64 	%rd8207, %rd8206, %rd7617;
	add.s64 	%rd8208, %rd8207, %rd7950;
	add.s64 	%rd8209, %rd8208, %rd8201;
	add.s64 	%rd8210, %rd8209, %rd8074;
	xor.b64  	%rd8211, %rd8148, %rd8111;
	and.b64  	%rd8212, %rd8185, %rd8211;
	xor.b64  	%rd8213, %rd8212, %rd8111;
	add.s64 	%rd8214, %rd8210, %rd8213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5700,%dummy}, %rd8185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5701}, %rd8185;
	}
	shf.r.wrap.b32 	%r5702, %r5701, %r5700, 14;
	shf.r.wrap.b32 	%r5703, %r5700, %r5701, 14;
	mov.b64 	%rd8215, {%r5703, %r5702};
	shf.r.wrap.b32 	%r5704, %r5701, %r5700, 18;
	shf.r.wrap.b32 	%r5705, %r5700, %r5701, 18;
	mov.b64 	%rd8216, {%r5705, %r5704};
	xor.b64  	%rd8217, %rd8215, %rd8216;
	shf.l.wrap.b32 	%r5706, %r5700, %r5701, 23;
	shf.l.wrap.b32 	%r5707, %r5701, %r5700, 23;
	mov.b64 	%rd8218, {%r5707, %r5706};
	xor.b64  	%rd8219, %rd8217, %rd8218;
	add.s64 	%rd8220, %rd8214, %rd8219;
	add.s64 	%rd8221, %rd8220, -6606660893046293015;
	add.s64 	%rd8222, %rd8221, %rd8085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5708,%dummy}, %rd8196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5709}, %rd8196;
	}
	shf.r.wrap.b32 	%r5710, %r5709, %r5708, 28;
	shf.r.wrap.b32 	%r5711, %r5708, %r5709, 28;
	mov.b64 	%rd8223, {%r5711, %r5710};
	shf.l.wrap.b32 	%r5712, %r5708, %r5709, 30;
	shf.l.wrap.b32 	%r5713, %r5709, %r5708, 30;
	mov.b64 	%rd8224, {%r5713, %r5712};
	xor.b64  	%rd8225, %rd8223, %rd8224;
	shf.l.wrap.b32 	%r5714, %r5708, %r5709, 25;
	shf.l.wrap.b32 	%r5715, %r5709, %r5708, 25;
	mov.b64 	%rd8226, {%r5715, %r5714};
	xor.b64  	%rd8227, %rd8225, %rd8226;
	and.b64  	%rd8228, %rd8196, %rd8159;
	or.b64  	%rd8229, %rd8196, %rd8159;
	and.b64  	%rd8230, %rd8229, %rd8122;
	or.b64  	%rd8231, %rd8230, %rd8228;
	add.s64 	%rd8232, %rd8231, %rd8227;
	add.s64 	%rd8233, %rd8232, %rd8221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5716,%dummy}, %rd8172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5717}, %rd8172;
	}
	shf.r.wrap.b32 	%r5718, %r5717, %r5716, 19;
	shf.r.wrap.b32 	%r5719, %r5716, %r5717, 19;
	mov.b64 	%rd8234, {%r5719, %r5718};
	shf.l.wrap.b32 	%r5720, %r5716, %r5717, 3;
	shf.l.wrap.b32 	%r5721, %r5717, %r5716, 3;
	mov.b64 	%rd8235, {%r5721, %r5720};
	xor.b64  	%rd8236, %rd8234, %rd8235;
	shr.u64 	%rd8237, %rd8172, 6;
	xor.b64  	%rd8238, %rd8236, %rd8237;
	shf.r.wrap.b32 	%r5722, %r5379, %r5378, 1;
	shf.r.wrap.b32 	%r5723, %r5378, %r5379, 1;
	mov.b64 	%rd8239, {%r5723, %r5722};
	shf.r.wrap.b32 	%r5724, %r5379, %r5378, 8;
	shf.r.wrap.b32 	%r5725, %r5378, %r5379, 8;
	mov.b64 	%rd8240, {%r5725, %r5724};
	xor.b64  	%rd8241, %rd8239, %rd8240;
	shr.u64 	%rd8242, %rd7691, 7;
	xor.b64  	%rd8243, %rd8241, %rd8242;
	add.s64 	%rd8244, %rd8243, %rd7654;
	add.s64 	%rd8245, %rd8244, %rd7987;
	add.s64 	%rd8246, %rd8245, %rd8238;
	add.s64 	%rd8247, %rd8246, %rd8111;
	xor.b64  	%rd8248, %rd8185, %rd8148;
	and.b64  	%rd8249, %rd8222, %rd8248;
	xor.b64  	%rd8250, %rd8249, %rd8148;
	add.s64 	%rd8251, %rd8247, %rd8250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5726,%dummy}, %rd8222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5727}, %rd8222;
	}
	shf.r.wrap.b32 	%r5728, %r5727, %r5726, 14;
	shf.r.wrap.b32 	%r5729, %r5726, %r5727, 14;
	mov.b64 	%rd8252, {%r5729, %r5728};
	shf.r.wrap.b32 	%r5730, %r5727, %r5726, 18;
	shf.r.wrap.b32 	%r5731, %r5726, %r5727, 18;
	mov.b64 	%rd8253, {%r5731, %r5730};
	xor.b64  	%rd8254, %rd8252, %rd8253;
	shf.l.wrap.b32 	%r5732, %r5726, %r5727, 23;
	shf.l.wrap.b32 	%r5733, %r5727, %r5726, 23;
	mov.b64 	%rd8255, {%r5733, %r5732};
	xor.b64  	%rd8256, %rd8254, %rd8255;
	add.s64 	%rd8257, %rd8251, %rd8256;
	add.s64 	%rd8258, %rd8257, -4685533653050689259;
	add.s64 	%rd8259, %rd8258, %rd8122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5734,%dummy}, %rd8233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5735}, %rd8233;
	}
	shf.r.wrap.b32 	%r5736, %r5735, %r5734, 28;
	shf.r.wrap.b32 	%r5737, %r5734, %r5735, 28;
	mov.b64 	%rd8260, {%r5737, %r5736};
	shf.l.wrap.b32 	%r5738, %r5734, %r5735, 30;
	shf.l.wrap.b32 	%r5739, %r5735, %r5734, 30;
	mov.b64 	%rd8261, {%r5739, %r5738};
	xor.b64  	%rd8262, %rd8260, %rd8261;
	shf.l.wrap.b32 	%r5740, %r5734, %r5735, 25;
	shf.l.wrap.b32 	%r5741, %r5735, %r5734, 25;
	mov.b64 	%rd8263, {%r5741, %r5740};
	xor.b64  	%rd8264, %rd8262, %rd8263;
	and.b64  	%rd8265, %rd8233, %rd8196;
	or.b64  	%rd8266, %rd8233, %rd8196;
	and.b64  	%rd8267, %rd8266, %rd8159;
	or.b64  	%rd8268, %rd8267, %rd8265;
	add.s64 	%rd8269, %rd8268, %rd8264;
	add.s64 	%rd8270, %rd8269, %rd8258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5742,%dummy}, %rd8209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5743}, %rd8209;
	}
	shf.r.wrap.b32 	%r5744, %r5743, %r5742, 19;
	shf.r.wrap.b32 	%r5745, %r5742, %r5743, 19;
	mov.b64 	%rd8271, {%r5745, %r5744};
	shf.l.wrap.b32 	%r5746, %r5742, %r5743, 3;
	shf.l.wrap.b32 	%r5747, %r5743, %r5742, 3;
	mov.b64 	%rd8272, {%r5747, %r5746};
	xor.b64  	%rd8273, %rd8271, %rd8272;
	shr.u64 	%rd8274, %rd8209, 6;
	xor.b64  	%rd8275, %rd8273, %rd8274;
	shf.r.wrap.b32 	%r5748, %r5405, %r5404, 1;
	shf.r.wrap.b32 	%r5749, %r5404, %r5405, 1;
	mov.b64 	%rd8276, {%r5749, %r5748};
	shf.r.wrap.b32 	%r5750, %r5405, %r5404, 8;
	shf.r.wrap.b32 	%r5751, %r5404, %r5405, 8;
	mov.b64 	%rd8277, {%r5751, %r5750};
	xor.b64  	%rd8278, %rd8276, %rd8277;
	shr.u64 	%rd8279, %rd7728, 7;
	xor.b64  	%rd8280, %rd8278, %rd8279;
	add.s64 	%rd8281, %rd8280, %rd7691;
	add.s64 	%rd8282, %rd8281, %rd8024;
	add.s64 	%rd8283, %rd8282, %rd8275;
	add.s64 	%rd8284, %rd8283, %rd8148;
	xor.b64  	%rd8285, %rd8222, %rd8185;
	and.b64  	%rd8286, %rd8259, %rd8285;
	xor.b64  	%rd8287, %rd8286, %rd8185;
	add.s64 	%rd8288, %rd8284, %rd8287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5752,%dummy}, %rd8259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5753}, %rd8259;
	}
	shf.r.wrap.b32 	%r5754, %r5753, %r5752, 14;
	shf.r.wrap.b32 	%r5755, %r5752, %r5753, 14;
	mov.b64 	%rd8289, {%r5755, %r5754};
	shf.r.wrap.b32 	%r5756, %r5753, %r5752, 18;
	shf.r.wrap.b32 	%r5757, %r5752, %r5753, 18;
	mov.b64 	%rd8290, {%r5757, %r5756};
	xor.b64  	%rd8291, %rd8289, %rd8290;
	shf.l.wrap.b32 	%r5758, %r5752, %r5753, 23;
	shf.l.wrap.b32 	%r5759, %r5753, %r5752, 23;
	mov.b64 	%rd8292, {%r5759, %r5758};
	xor.b64  	%rd8293, %rd8291, %rd8292;
	add.s64 	%rd8294, %rd8288, %rd8293;
	add.s64 	%rd8295, %rd8294, -4147400797238176981;
	add.s64 	%rd8296, %rd8295, %rd8159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5760,%dummy}, %rd8270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd8270;
	}
	shf.r.wrap.b32 	%r5762, %r5761, %r5760, 28;
	shf.r.wrap.b32 	%r5763, %r5760, %r5761, 28;
	mov.b64 	%rd8297, {%r5763, %r5762};
	shf.l.wrap.b32 	%r5764, %r5760, %r5761, 30;
	shf.l.wrap.b32 	%r5765, %r5761, %r5760, 30;
	mov.b64 	%rd8298, {%r5765, %r5764};
	xor.b64  	%rd8299, %rd8297, %rd8298;
	shf.l.wrap.b32 	%r5766, %r5760, %r5761, 25;
	shf.l.wrap.b32 	%r5767, %r5761, %r5760, 25;
	mov.b64 	%rd8300, {%r5767, %r5766};
	xor.b64  	%rd8301, %rd8299, %rd8300;
	and.b64  	%rd8302, %rd8270, %rd8233;
	or.b64  	%rd8303, %rd8270, %rd8233;
	and.b64  	%rd8304, %rd8303, %rd8196;
	or.b64  	%rd8305, %rd8304, %rd8302;
	add.s64 	%rd8306, %rd8305, %rd8301;
	add.s64 	%rd8307, %rd8306, %rd8295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd8246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd8246;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 19;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 19;
	mov.b64 	%rd8308, {%r5771, %r5770};
	shf.l.wrap.b32 	%r5772, %r5768, %r5769, 3;
	shf.l.wrap.b32 	%r5773, %r5769, %r5768, 3;
	mov.b64 	%rd8309, {%r5773, %r5772};
	xor.b64  	%rd8310, %rd8308, %rd8309;
	shr.u64 	%rd8311, %rd8246, 6;
	xor.b64  	%rd8312, %rd8310, %rd8311;
	shf.r.wrap.b32 	%r5774, %r5431, %r5430, 1;
	shf.r.wrap.b32 	%r5775, %r5430, %r5431, 1;
	mov.b64 	%rd8313, {%r5775, %r5774};
	shf.r.wrap.b32 	%r5776, %r5431, %r5430, 8;
	shf.r.wrap.b32 	%r5777, %r5430, %r5431, 8;
	mov.b64 	%rd8314, {%r5777, %r5776};
	xor.b64  	%rd8315, %rd8313, %rd8314;
	shr.u64 	%rd8316, %rd7765, 7;
	xor.b64  	%rd8317, %rd8315, %rd8316;
	add.s64 	%rd8318, %rd8317, %rd7728;
	add.s64 	%rd8319, %rd8318, %rd8061;
	add.s64 	%rd8320, %rd8319, %rd8312;
	add.s64 	%rd8321, %rd8320, %rd8185;
	xor.b64  	%rd8322, %rd8259, %rd8222;
	and.b64  	%rd8323, %rd8296, %rd8322;
	xor.b64  	%rd8324, %rd8323, %rd8222;
	add.s64 	%rd8325, %rd8321, %rd8324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5778,%dummy}, %rd8296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5779}, %rd8296;
	}
	shf.r.wrap.b32 	%r5780, %r5779, %r5778, 14;
	shf.r.wrap.b32 	%r5781, %r5778, %r5779, 14;
	mov.b64 	%rd8326, {%r5781, %r5780};
	shf.r.wrap.b32 	%r5782, %r5779, %r5778, 18;
	shf.r.wrap.b32 	%r5783, %r5778, %r5779, 18;
	mov.b64 	%rd8327, {%r5783, %r5782};
	xor.b64  	%rd8328, %rd8326, %rd8327;
	shf.l.wrap.b32 	%r5784, %r5778, %r5779, 23;
	shf.l.wrap.b32 	%r5785, %r5779, %r5778, 23;
	mov.b64 	%rd8329, {%r5785, %r5784};
	xor.b64  	%rd8330, %rd8328, %rd8329;
	add.s64 	%rd8331, %rd8325, %rd8330;
	add.s64 	%rd8332, %rd8331, -3880063495543823972;
	add.s64 	%rd8333, %rd8332, %rd8196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd8307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd8307;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 28;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 28;
	mov.b64 	%rd8334, {%r5789, %r5788};
	shf.l.wrap.b32 	%r5790, %r5786, %r5787, 30;
	shf.l.wrap.b32 	%r5791, %r5787, %r5786, 30;
	mov.b64 	%rd8335, {%r5791, %r5790};
	xor.b64  	%rd8336, %rd8334, %rd8335;
	shf.l.wrap.b32 	%r5792, %r5786, %r5787, 25;
	shf.l.wrap.b32 	%r5793, %r5787, %r5786, 25;
	mov.b64 	%rd8337, {%r5793, %r5792};
	xor.b64  	%rd8338, %rd8336, %rd8337;
	and.b64  	%rd8339, %rd8307, %rd8270;
	or.b64  	%rd8340, %rd8307, %rd8270;
	and.b64  	%rd8341, %rd8340, %rd8233;
	or.b64  	%rd8342, %rd8341, %rd8339;
	add.s64 	%rd8343, %rd8342, %rd8338;
	add.s64 	%rd8344, %rd8343, %rd8332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5794,%dummy}, %rd8283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5795}, %rd8283;
	}
	shf.r.wrap.b32 	%r5796, %r5795, %r5794, 19;
	shf.r.wrap.b32 	%r5797, %r5794, %r5795, 19;
	mov.b64 	%rd8345, {%r5797, %r5796};
	shf.l.wrap.b32 	%r5798, %r5794, %r5795, 3;
	shf.l.wrap.b32 	%r5799, %r5795, %r5794, 3;
	mov.b64 	%rd8346, {%r5799, %r5798};
	xor.b64  	%rd8347, %rd8345, %rd8346;
	shr.u64 	%rd8348, %rd8283, 6;
	xor.b64  	%rd8349, %rd8347, %rd8348;
	shf.r.wrap.b32 	%r5800, %r5457, %r5456, 1;
	shf.r.wrap.b32 	%r5801, %r5456, %r5457, 1;
	mov.b64 	%rd8350, {%r5801, %r5800};
	shf.r.wrap.b32 	%r5802, %r5457, %r5456, 8;
	shf.r.wrap.b32 	%r5803, %r5456, %r5457, 8;
	mov.b64 	%rd8351, {%r5803, %r5802};
	xor.b64  	%rd8352, %rd8350, %rd8351;
	shr.u64 	%rd8353, %rd7802, 7;
	xor.b64  	%rd8354, %rd8352, %rd8353;
	add.s64 	%rd8355, %rd8354, %rd7765;
	add.s64 	%rd8356, %rd8355, %rd8098;
	add.s64 	%rd8357, %rd8356, %rd8349;
	add.s64 	%rd8358, %rd8357, %rd8222;
	xor.b64  	%rd8359, %rd8296, %rd8259;
	and.b64  	%rd8360, %rd8333, %rd8359;
	xor.b64  	%rd8361, %rd8360, %rd8259;
	add.s64 	%rd8362, %rd8358, %rd8361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd8333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd8333;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 14;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 14;
	mov.b64 	%rd8363, {%r5807, %r5806};
	shf.r.wrap.b32 	%r5808, %r5805, %r5804, 18;
	shf.r.wrap.b32 	%r5809, %r5804, %r5805, 18;
	mov.b64 	%rd8364, {%r5809, %r5808};
	xor.b64  	%rd8365, %rd8363, %rd8364;
	shf.l.wrap.b32 	%r5810, %r5804, %r5805, 23;
	shf.l.wrap.b32 	%r5811, %r5805, %r5804, 23;
	mov.b64 	%rd8366, {%r5811, %r5810};
	xor.b64  	%rd8367, %rd8365, %rd8366;
	add.s64 	%rd8368, %rd8362, %rd8367;
	add.s64 	%rd8369, %rd8368, -3348786107499101689;
	add.s64 	%rd8370, %rd8369, %rd8233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5812,%dummy}, %rd8344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5813}, %rd8344;
	}
	shf.r.wrap.b32 	%r5814, %r5813, %r5812, 28;
	shf.r.wrap.b32 	%r5815, %r5812, %r5813, 28;
	mov.b64 	%rd8371, {%r5815, %r5814};
	shf.l.wrap.b32 	%r5816, %r5812, %r5813, 30;
	shf.l.wrap.b32 	%r5817, %r5813, %r5812, 30;
	mov.b64 	%rd8372, {%r5817, %r5816};
	xor.b64  	%rd8373, %rd8371, %rd8372;
	shf.l.wrap.b32 	%r5818, %r5812, %r5813, 25;
	shf.l.wrap.b32 	%r5819, %r5813, %r5812, 25;
	mov.b64 	%rd8374, {%r5819, %r5818};
	xor.b64  	%rd8375, %rd8373, %rd8374;
	and.b64  	%rd8376, %rd8344, %rd8307;
	or.b64  	%rd8377, %rd8344, %rd8307;
	and.b64  	%rd8378, %rd8377, %rd8270;
	or.b64  	%rd8379, %rd8378, %rd8376;
	add.s64 	%rd8380, %rd8379, %rd8375;
	add.s64 	%rd8381, %rd8380, %rd8369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5820,%dummy}, %rd8320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5821}, %rd8320;
	}
	shf.r.wrap.b32 	%r5822, %r5821, %r5820, 19;
	shf.r.wrap.b32 	%r5823, %r5820, %r5821, 19;
	mov.b64 	%rd8382, {%r5823, %r5822};
	shf.l.wrap.b32 	%r5824, %r5820, %r5821, 3;
	shf.l.wrap.b32 	%r5825, %r5821, %r5820, 3;
	mov.b64 	%rd8383, {%r5825, %r5824};
	xor.b64  	%rd8384, %rd8382, %rd8383;
	shr.u64 	%rd8385, %rd8320, 6;
	xor.b64  	%rd8386, %rd8384, %rd8385;
	shf.r.wrap.b32 	%r5826, %r5483, %r5482, 1;
	shf.r.wrap.b32 	%r5827, %r5482, %r5483, 1;
	mov.b64 	%rd8387, {%r5827, %r5826};
	shf.r.wrap.b32 	%r5828, %r5483, %r5482, 8;
	shf.r.wrap.b32 	%r5829, %r5482, %r5483, 8;
	mov.b64 	%rd8388, {%r5829, %r5828};
	xor.b64  	%rd8389, %rd8387, %rd8388;
	shr.u64 	%rd8390, %rd7839, 7;
	xor.b64  	%rd8391, %rd8389, %rd8390;
	add.s64 	%rd8392, %rd8391, %rd7802;
	add.s64 	%rd8393, %rd8392, %rd8135;
	add.s64 	%rd8394, %rd8393, %rd8386;
	add.s64 	%rd8395, %rd8394, %rd8259;
	xor.b64  	%rd8396, %rd8333, %rd8296;
	and.b64  	%rd8397, %rd8370, %rd8396;
	xor.b64  	%rd8398, %rd8397, %rd8296;
	add.s64 	%rd8399, %rd8395, %rd8398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5830,%dummy}, %rd8370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5831}, %rd8370;
	}
	shf.r.wrap.b32 	%r5832, %r5831, %r5830, 14;
	shf.r.wrap.b32 	%r5833, %r5830, %r5831, 14;
	mov.b64 	%rd8400, {%r5833, %r5832};
	shf.r.wrap.b32 	%r5834, %r5831, %r5830, 18;
	shf.r.wrap.b32 	%r5835, %r5830, %r5831, 18;
	mov.b64 	%rd8401, {%r5835, %r5834};
	xor.b64  	%rd8402, %rd8400, %rd8401;
	shf.l.wrap.b32 	%r5836, %r5830, %r5831, 23;
	shf.l.wrap.b32 	%r5837, %r5831, %r5830, 23;
	mov.b64 	%rd8403, {%r5837, %r5836};
	xor.b64  	%rd8404, %rd8402, %rd8403;
	add.s64 	%rd8405, %rd8399, %rd8404;
	add.s64 	%rd8406, %rd8405, -1523767162380948706;
	add.s64 	%rd8407, %rd8406, %rd8270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5838,%dummy}, %rd8381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5839}, %rd8381;
	}
	shf.r.wrap.b32 	%r5840, %r5839, %r5838, 28;
	shf.r.wrap.b32 	%r5841, %r5838, %r5839, 28;
	mov.b64 	%rd8408, {%r5841, %r5840};
	shf.l.wrap.b32 	%r5842, %r5838, %r5839, 30;
	shf.l.wrap.b32 	%r5843, %r5839, %r5838, 30;
	mov.b64 	%rd8409, {%r5843, %r5842};
	xor.b64  	%rd8410, %rd8408, %rd8409;
	shf.l.wrap.b32 	%r5844, %r5838, %r5839, 25;
	shf.l.wrap.b32 	%r5845, %r5839, %r5838, 25;
	mov.b64 	%rd8411, {%r5845, %r5844};
	xor.b64  	%rd8412, %rd8410, %rd8411;
	and.b64  	%rd8413, %rd8381, %rd8344;
	or.b64  	%rd8414, %rd8381, %rd8344;
	and.b64  	%rd8415, %rd8414, %rd8307;
	or.b64  	%rd8416, %rd8415, %rd8413;
	add.s64 	%rd8417, %rd8416, %rd8412;
	add.s64 	%rd8418, %rd8417, %rd8406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd8357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd8357;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 19;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 19;
	mov.b64 	%rd8419, {%r5849, %r5848};
	shf.l.wrap.b32 	%r5850, %r5846, %r5847, 3;
	shf.l.wrap.b32 	%r5851, %r5847, %r5846, 3;
	mov.b64 	%rd8420, {%r5851, %r5850};
	xor.b64  	%rd8421, %rd8419, %rd8420;
	shr.u64 	%rd8422, %rd8357, 6;
	xor.b64  	%rd8423, %rd8421, %rd8422;
	shf.r.wrap.b32 	%r5852, %r5509, %r5508, 1;
	shf.r.wrap.b32 	%r5853, %r5508, %r5509, 1;
	mov.b64 	%rd8424, {%r5853, %r5852};
	shf.r.wrap.b32 	%r5854, %r5509, %r5508, 8;
	shf.r.wrap.b32 	%r5855, %r5508, %r5509, 8;
	mov.b64 	%rd8425, {%r5855, %r5854};
	xor.b64  	%rd8426, %rd8424, %rd8425;
	shr.u64 	%rd8427, %rd7876, 7;
	xor.b64  	%rd8428, %rd8426, %rd8427;
	add.s64 	%rd8429, %rd8428, %rd7839;
	add.s64 	%rd8430, %rd8429, %rd8172;
	add.s64 	%rd8431, %rd8430, %rd8423;
	add.s64 	%rd8432, %rd8431, %rd8296;
	xor.b64  	%rd8433, %rd8370, %rd8333;
	and.b64  	%rd8434, %rd8407, %rd8433;
	xor.b64  	%rd8435, %rd8434, %rd8333;
	add.s64 	%rd8436, %rd8432, %rd8435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5856,%dummy}, %rd8407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5857}, %rd8407;
	}
	shf.r.wrap.b32 	%r5858, %r5857, %r5856, 14;
	shf.r.wrap.b32 	%r5859, %r5856, %r5857, 14;
	mov.b64 	%rd8437, {%r5859, %r5858};
	shf.r.wrap.b32 	%r5860, %r5857, %r5856, 18;
	shf.r.wrap.b32 	%r5861, %r5856, %r5857, 18;
	mov.b64 	%rd8438, {%r5861, %r5860};
	xor.b64  	%rd8439, %rd8437, %rd8438;
	shf.l.wrap.b32 	%r5862, %r5856, %r5857, 23;
	shf.l.wrap.b32 	%r5863, %r5857, %r5856, 23;
	mov.b64 	%rd8440, {%r5863, %r5862};
	xor.b64  	%rd8441, %rd8439, %rd8440;
	add.s64 	%rd8442, %rd8436, %rd8441;
	add.s64 	%rd8443, %rd8442, -757361751448694408;
	add.s64 	%rd8444, %rd8443, %rd8307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd8418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd8418;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 28;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 28;
	mov.b64 	%rd8445, {%r5867, %r5866};
	shf.l.wrap.b32 	%r5868, %r5864, %r5865, 30;
	shf.l.wrap.b32 	%r5869, %r5865, %r5864, 30;
	mov.b64 	%rd8446, {%r5869, %r5868};
	xor.b64  	%rd8447, %rd8445, %rd8446;
	shf.l.wrap.b32 	%r5870, %r5864, %r5865, 25;
	shf.l.wrap.b32 	%r5871, %r5865, %r5864, 25;
	mov.b64 	%rd8448, {%r5871, %r5870};
	xor.b64  	%rd8449, %rd8447, %rd8448;
	and.b64  	%rd8450, %rd8418, %rd8381;
	or.b64  	%rd8451, %rd8418, %rd8381;
	and.b64  	%rd8452, %rd8451, %rd8344;
	or.b64  	%rd8453, %rd8452, %rd8450;
	add.s64 	%rd8454, %rd8453, %rd8449;
	add.s64 	%rd8455, %rd8454, %rd8443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5872,%dummy}, %rd8394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5873}, %rd8394;
	}
	shf.r.wrap.b32 	%r5874, %r5873, %r5872, 19;
	shf.r.wrap.b32 	%r5875, %r5872, %r5873, 19;
	mov.b64 	%rd8456, {%r5875, %r5874};
	shf.l.wrap.b32 	%r5876, %r5872, %r5873, 3;
	shf.l.wrap.b32 	%r5877, %r5873, %r5872, 3;
	mov.b64 	%rd8457, {%r5877, %r5876};
	xor.b64  	%rd8458, %rd8456, %rd8457;
	shr.u64 	%rd8459, %rd8394, 6;
	xor.b64  	%rd8460, %rd8458, %rd8459;
	shf.r.wrap.b32 	%r5878, %r5535, %r5534, 1;
	shf.r.wrap.b32 	%r5879, %r5534, %r5535, 1;
	mov.b64 	%rd8461, {%r5879, %r5878};
	shf.r.wrap.b32 	%r5880, %r5535, %r5534, 8;
	shf.r.wrap.b32 	%r5881, %r5534, %r5535, 8;
	mov.b64 	%rd8462, {%r5881, %r5880};
	xor.b64  	%rd8463, %rd8461, %rd8462;
	shr.u64 	%rd8464, %rd7913, 7;
	xor.b64  	%rd8465, %rd8463, %rd8464;
	add.s64 	%rd8466, %rd8465, %rd7876;
	add.s64 	%rd8467, %rd8466, %rd8209;
	add.s64 	%rd8468, %rd8467, %rd8460;
	add.s64 	%rd8469, %rd8468, %rd8333;
	xor.b64  	%rd8470, %rd8407, %rd8370;
	and.b64  	%rd8471, %rd8444, %rd8470;
	xor.b64  	%rd8472, %rd8471, %rd8370;
	add.s64 	%rd8473, %rd8469, %rd8472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd8444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5883}, %rd8444;
	}
	shf.r.wrap.b32 	%r5884, %r5883, %r5882, 14;
	shf.r.wrap.b32 	%r5885, %r5882, %r5883, 14;
	mov.b64 	%rd8474, {%r5885, %r5884};
	shf.r.wrap.b32 	%r5886, %r5883, %r5882, 18;
	shf.r.wrap.b32 	%r5887, %r5882, %r5883, 18;
	mov.b64 	%rd8475, {%r5887, %r5886};
	xor.b64  	%rd8476, %rd8474, %rd8475;
	shf.l.wrap.b32 	%r5888, %r5882, %r5883, 23;
	shf.l.wrap.b32 	%r5889, %r5883, %r5882, 23;
	mov.b64 	%rd8477, {%r5889, %r5888};
	xor.b64  	%rd8478, %rd8476, %rd8477;
	add.s64 	%rd8479, %rd8473, %rd8478;
	add.s64 	%rd8480, %rd8479, 500013540394364858;
	add.s64 	%rd8481, %rd8480, %rd8344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5890,%dummy}, %rd8455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5891}, %rd8455;
	}
	shf.r.wrap.b32 	%r5892, %r5891, %r5890, 28;
	shf.r.wrap.b32 	%r5893, %r5890, %r5891, 28;
	mov.b64 	%rd8482, {%r5893, %r5892};
	shf.l.wrap.b32 	%r5894, %r5890, %r5891, 30;
	shf.l.wrap.b32 	%r5895, %r5891, %r5890, 30;
	mov.b64 	%rd8483, {%r5895, %r5894};
	xor.b64  	%rd8484, %rd8482, %rd8483;
	shf.l.wrap.b32 	%r5896, %r5890, %r5891, 25;
	shf.l.wrap.b32 	%r5897, %r5891, %r5890, 25;
	mov.b64 	%rd8485, {%r5897, %r5896};
	xor.b64  	%rd8486, %rd8484, %rd8485;
	and.b64  	%rd8487, %rd8455, %rd8418;
	or.b64  	%rd8488, %rd8455, %rd8418;
	and.b64  	%rd8489, %rd8488, %rd8381;
	or.b64  	%rd8490, %rd8489, %rd8487;
	add.s64 	%rd8491, %rd8490, %rd8486;
	add.s64 	%rd8492, %rd8491, %rd8480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5898,%dummy}, %rd8431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5899}, %rd8431;
	}
	shf.r.wrap.b32 	%r5900, %r5899, %r5898, 19;
	shf.r.wrap.b32 	%r5901, %r5898, %r5899, 19;
	mov.b64 	%rd8493, {%r5901, %r5900};
	shf.l.wrap.b32 	%r5902, %r5898, %r5899, 3;
	shf.l.wrap.b32 	%r5903, %r5899, %r5898, 3;
	mov.b64 	%rd8494, {%r5903, %r5902};
	xor.b64  	%rd8495, %rd8493, %rd8494;
	shr.u64 	%rd8496, %rd8431, 6;
	xor.b64  	%rd8497, %rd8495, %rd8496;
	shf.r.wrap.b32 	%r5904, %r5561, %r5560, 1;
	shf.r.wrap.b32 	%r5905, %r5560, %r5561, 1;
	mov.b64 	%rd8498, {%r5905, %r5904};
	shf.r.wrap.b32 	%r5906, %r5561, %r5560, 8;
	shf.r.wrap.b32 	%r5907, %r5560, %r5561, 8;
	mov.b64 	%rd8499, {%r5907, %r5906};
	xor.b64  	%rd8500, %rd8498, %rd8499;
	shr.u64 	%rd8501, %rd7950, 7;
	xor.b64  	%rd8502, %rd8500, %rd8501;
	add.s64 	%rd8503, %rd8502, %rd7913;
	add.s64 	%rd8504, %rd8503, %rd8246;
	add.s64 	%rd8505, %rd8504, %rd8497;
	add.s64 	%rd8506, %rd8505, %rd8370;
	xor.b64  	%rd8507, %rd8444, %rd8407;
	and.b64  	%rd8508, %rd8481, %rd8507;
	xor.b64  	%rd8509, %rd8508, %rd8407;
	add.s64 	%rd8510, %rd8506, %rd8509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5908,%dummy}, %rd8481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5909}, %rd8481;
	}
	shf.r.wrap.b32 	%r5910, %r5909, %r5908, 14;
	shf.r.wrap.b32 	%r5911, %r5908, %r5909, 14;
	mov.b64 	%rd8511, {%r5911, %r5910};
	shf.r.wrap.b32 	%r5912, %r5909, %r5908, 18;
	shf.r.wrap.b32 	%r5913, %r5908, %r5909, 18;
	mov.b64 	%rd8512, {%r5913, %r5912};
	xor.b64  	%rd8513, %rd8511, %rd8512;
	shf.l.wrap.b32 	%r5914, %r5908, %r5909, 23;
	shf.l.wrap.b32 	%r5915, %r5909, %r5908, 23;
	mov.b64 	%rd8514, {%r5915, %r5914};
	xor.b64  	%rd8515, %rd8513, %rd8514;
	add.s64 	%rd8516, %rd8510, %rd8515;
	add.s64 	%rd8517, %rd8516, 748580250866718886;
	add.s64 	%rd8518, %rd8517, %rd8381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5916,%dummy}, %rd8492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5917}, %rd8492;
	}
	shf.r.wrap.b32 	%r5918, %r5917, %r5916, 28;
	shf.r.wrap.b32 	%r5919, %r5916, %r5917, 28;
	mov.b64 	%rd8519, {%r5919, %r5918};
	shf.l.wrap.b32 	%r5920, %r5916, %r5917, 30;
	shf.l.wrap.b32 	%r5921, %r5917, %r5916, 30;
	mov.b64 	%rd8520, {%r5921, %r5920};
	xor.b64  	%rd8521, %rd8519, %rd8520;
	shf.l.wrap.b32 	%r5922, %r5916, %r5917, 25;
	shf.l.wrap.b32 	%r5923, %r5917, %r5916, 25;
	mov.b64 	%rd8522, {%r5923, %r5922};
	xor.b64  	%rd8523, %rd8521, %rd8522;
	and.b64  	%rd8524, %rd8492, %rd8455;
	or.b64  	%rd8525, %rd8492, %rd8455;
	and.b64  	%rd8526, %rd8525, %rd8418;
	or.b64  	%rd8527, %rd8526, %rd8524;
	add.s64 	%rd8528, %rd8527, %rd8523;
	add.s64 	%rd8529, %rd8528, %rd8517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5924,%dummy}, %rd8468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5925}, %rd8468;
	}
	shf.r.wrap.b32 	%r5926, %r5925, %r5924, 19;
	shf.r.wrap.b32 	%r5927, %r5924, %r5925, 19;
	mov.b64 	%rd8530, {%r5927, %r5926};
	shf.l.wrap.b32 	%r5928, %r5924, %r5925, 3;
	shf.l.wrap.b32 	%r5929, %r5925, %r5924, 3;
	mov.b64 	%rd8531, {%r5929, %r5928};
	xor.b64  	%rd8532, %rd8530, %rd8531;
	shr.u64 	%rd8533, %rd8468, 6;
	xor.b64  	%rd8534, %rd8532, %rd8533;
	shf.r.wrap.b32 	%r5930, %r5587, %r5586, 1;
	shf.r.wrap.b32 	%r5931, %r5586, %r5587, 1;
	mov.b64 	%rd8535, {%r5931, %r5930};
	shf.r.wrap.b32 	%r5932, %r5587, %r5586, 8;
	shf.r.wrap.b32 	%r5933, %r5586, %r5587, 8;
	mov.b64 	%rd8536, {%r5933, %r5932};
	xor.b64  	%rd8537, %rd8535, %rd8536;
	shr.u64 	%rd8538, %rd7987, 7;
	xor.b64  	%rd8539, %rd8537, %rd8538;
	add.s64 	%rd8540, %rd8539, %rd7950;
	add.s64 	%rd8541, %rd8540, %rd8283;
	add.s64 	%rd8542, %rd8541, %rd8534;
	add.s64 	%rd8543, %rd8542, %rd8407;
	xor.b64  	%rd8544, %rd8481, %rd8444;
	and.b64  	%rd8545, %rd8518, %rd8544;
	xor.b64  	%rd8546, %rd8545, %rd8444;
	add.s64 	%rd8547, %rd8543, %rd8546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5934,%dummy}, %rd8518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5935}, %rd8518;
	}
	shf.r.wrap.b32 	%r5936, %r5935, %r5934, 14;
	shf.r.wrap.b32 	%r5937, %r5934, %r5935, 14;
	mov.b64 	%rd8548, {%r5937, %r5936};
	shf.r.wrap.b32 	%r5938, %r5935, %r5934, 18;
	shf.r.wrap.b32 	%r5939, %r5934, %r5935, 18;
	mov.b64 	%rd8549, {%r5939, %r5938};
	xor.b64  	%rd8550, %rd8548, %rd8549;
	shf.l.wrap.b32 	%r5940, %r5934, %r5935, 23;
	shf.l.wrap.b32 	%r5941, %r5935, %r5934, 23;
	mov.b64 	%rd8551, {%r5941, %r5940};
	xor.b64  	%rd8552, %rd8550, %rd8551;
	add.s64 	%rd8553, %rd8547, %rd8552;
	add.s64 	%rd8554, %rd8553, 1242879168328830382;
	add.s64 	%rd8555, %rd8554, %rd8418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd8529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5943}, %rd8529;
	}
	shf.r.wrap.b32 	%r5944, %r5943, %r5942, 28;
	shf.r.wrap.b32 	%r5945, %r5942, %r5943, 28;
	mov.b64 	%rd8556, {%r5945, %r5944};
	shf.l.wrap.b32 	%r5946, %r5942, %r5943, 30;
	shf.l.wrap.b32 	%r5947, %r5943, %r5942, 30;
	mov.b64 	%rd8557, {%r5947, %r5946};
	xor.b64  	%rd8558, %rd8556, %rd8557;
	shf.l.wrap.b32 	%r5948, %r5942, %r5943, 25;
	shf.l.wrap.b32 	%r5949, %r5943, %r5942, 25;
	mov.b64 	%rd8559, {%r5949, %r5948};
	xor.b64  	%rd8560, %rd8558, %rd8559;
	and.b64  	%rd8561, %rd8529, %rd8492;
	or.b64  	%rd8562, %rd8529, %rd8492;
	and.b64  	%rd8563, %rd8562, %rd8455;
	or.b64  	%rd8564, %rd8563, %rd8561;
	add.s64 	%rd8565, %rd8564, %rd8560;
	add.s64 	%rd8566, %rd8565, %rd8554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5950,%dummy}, %rd8505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5951}, %rd8505;
	}
	shf.r.wrap.b32 	%r5952, %r5951, %r5950, 19;
	shf.r.wrap.b32 	%r5953, %r5950, %r5951, 19;
	mov.b64 	%rd8567, {%r5953, %r5952};
	shf.l.wrap.b32 	%r5954, %r5950, %r5951, 3;
	shf.l.wrap.b32 	%r5955, %r5951, %r5950, 3;
	mov.b64 	%rd8568, {%r5955, %r5954};
	xor.b64  	%rd8569, %rd8567, %rd8568;
	shr.u64 	%rd8570, %rd8505, 6;
	xor.b64  	%rd8571, %rd8569, %rd8570;
	shf.r.wrap.b32 	%r5956, %r5613, %r5612, 1;
	shf.r.wrap.b32 	%r5957, %r5612, %r5613, 1;
	mov.b64 	%rd8572, {%r5957, %r5956};
	shf.r.wrap.b32 	%r5958, %r5613, %r5612, 8;
	shf.r.wrap.b32 	%r5959, %r5612, %r5613, 8;
	mov.b64 	%rd8573, {%r5959, %r5958};
	xor.b64  	%rd8574, %rd8572, %rd8573;
	shr.u64 	%rd8575, %rd8024, 7;
	xor.b64  	%rd8576, %rd8574, %rd8575;
	add.s64 	%rd8577, %rd8576, %rd7987;
	add.s64 	%rd8578, %rd8577, %rd8320;
	add.s64 	%rd8579, %rd8578, %rd8571;
	add.s64 	%rd8580, %rd8579, %rd8444;
	xor.b64  	%rd8581, %rd8518, %rd8481;
	and.b64  	%rd8582, %rd8555, %rd8581;
	xor.b64  	%rd8583, %rd8582, %rd8481;
	add.s64 	%rd8584, %rd8580, %rd8583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5960,%dummy}, %rd8555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5961}, %rd8555;
	}
	shf.r.wrap.b32 	%r5962, %r5961, %r5960, 14;
	shf.r.wrap.b32 	%r5963, %r5960, %r5961, 14;
	mov.b64 	%rd8585, {%r5963, %r5962};
	shf.r.wrap.b32 	%r5964, %r5961, %r5960, 18;
	shf.r.wrap.b32 	%r5965, %r5960, %r5961, 18;
	mov.b64 	%rd8586, {%r5965, %r5964};
	xor.b64  	%rd8587, %rd8585, %rd8586;
	shf.l.wrap.b32 	%r5966, %r5960, %r5961, 23;
	shf.l.wrap.b32 	%r5967, %r5961, %r5960, 23;
	mov.b64 	%rd8588, {%r5967, %r5966};
	xor.b64  	%rd8589, %rd8587, %rd8588;
	add.s64 	%rd8590, %rd8584, %rd8589;
	add.s64 	%rd8591, %rd8590, 1977374033974150939;
	add.s64 	%rd8592, %rd8591, %rd8455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5968,%dummy}, %rd8566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5969}, %rd8566;
	}
	shf.r.wrap.b32 	%r5970, %r5969, %r5968, 28;
	shf.r.wrap.b32 	%r5971, %r5968, %r5969, 28;
	mov.b64 	%rd8593, {%r5971, %r5970};
	shf.l.wrap.b32 	%r5972, %r5968, %r5969, 30;
	shf.l.wrap.b32 	%r5973, %r5969, %r5968, 30;
	mov.b64 	%rd8594, {%r5973, %r5972};
	xor.b64  	%rd8595, %rd8593, %rd8594;
	shf.l.wrap.b32 	%r5974, %r5968, %r5969, 25;
	shf.l.wrap.b32 	%r5975, %r5969, %r5968, 25;
	mov.b64 	%rd8596, {%r5975, %r5974};
	xor.b64  	%rd8597, %rd8595, %rd8596;
	and.b64  	%rd8598, %rd8566, %rd8529;
	or.b64  	%rd8599, %rd8566, %rd8529;
	and.b64  	%rd8600, %rd8599, %rd8492;
	or.b64  	%rd8601, %rd8600, %rd8598;
	add.s64 	%rd8602, %rd8601, %rd8597;
	add.s64 	%rd8603, %rd8602, %rd8591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5976,%dummy}, %rd8542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5977}, %rd8542;
	}
	shf.r.wrap.b32 	%r5978, %r5977, %r5976, 19;
	shf.r.wrap.b32 	%r5979, %r5976, %r5977, 19;
	mov.b64 	%rd8604, {%r5979, %r5978};
	shf.l.wrap.b32 	%r5980, %r5976, %r5977, 3;
	shf.l.wrap.b32 	%r5981, %r5977, %r5976, 3;
	mov.b64 	%rd8605, {%r5981, %r5980};
	xor.b64  	%rd8606, %rd8604, %rd8605;
	shr.u64 	%rd8607, %rd8542, 6;
	xor.b64  	%rd8608, %rd8606, %rd8607;
	shf.r.wrap.b32 	%r5982, %r5639, %r5638, 1;
	shf.r.wrap.b32 	%r5983, %r5638, %r5639, 1;
	mov.b64 	%rd8609, {%r5983, %r5982};
	shf.r.wrap.b32 	%r5984, %r5639, %r5638, 8;
	shf.r.wrap.b32 	%r5985, %r5638, %r5639, 8;
	mov.b64 	%rd8610, {%r5985, %r5984};
	xor.b64  	%rd8611, %rd8609, %rd8610;
	shr.u64 	%rd8612, %rd8061, 7;
	xor.b64  	%rd8613, %rd8611, %rd8612;
	add.s64 	%rd8614, %rd8613, %rd8024;
	add.s64 	%rd8615, %rd8614, %rd8357;
	add.s64 	%rd8616, %rd8615, %rd8608;
	add.s64 	%rd8617, %rd8616, %rd8481;
	xor.b64  	%rd8618, %rd8555, %rd8518;
	and.b64  	%rd8619, %rd8592, %rd8618;
	xor.b64  	%rd8620, %rd8619, %rd8518;
	add.s64 	%rd8621, %rd8617, %rd8620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd8592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd8592;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 14;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 14;
	mov.b64 	%rd8622, {%r5989, %r5988};
	shf.r.wrap.b32 	%r5990, %r5987, %r5986, 18;
	shf.r.wrap.b32 	%r5991, %r5986, %r5987, 18;
	mov.b64 	%rd8623, {%r5991, %r5990};
	xor.b64  	%rd8624, %rd8622, %rd8623;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 23;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 23;
	mov.b64 	%rd8625, {%r5993, %r5992};
	xor.b64  	%rd8626, %rd8624, %rd8625;
	add.s64 	%rd8627, %rd8621, %rd8626;
	add.s64 	%rd8628, %rd8627, 2944078676154940804;
	add.s64 	%rd8629, %rd8628, %rd8492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd8603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd8603;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 28;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 28;
	mov.b64 	%rd8630, {%r5997, %r5996};
	shf.l.wrap.b32 	%r5998, %r5994, %r5995, 30;
	shf.l.wrap.b32 	%r5999, %r5995, %r5994, 30;
	mov.b64 	%rd8631, {%r5999, %r5998};
	xor.b64  	%rd8632, %rd8630, %rd8631;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 25;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 25;
	mov.b64 	%rd8633, {%r6001, %r6000};
	xor.b64  	%rd8634, %rd8632, %rd8633;
	and.b64  	%rd8635, %rd8603, %rd8566;
	or.b64  	%rd8636, %rd8603, %rd8566;
	and.b64  	%rd8637, %rd8636, %rd8529;
	or.b64  	%rd8638, %rd8637, %rd8635;
	add.s64 	%rd8639, %rd8638, %rd8634;
	add.s64 	%rd8640, %rd8639, %rd8628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd8579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd8579;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 19;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 19;
	mov.b64 	%rd8641, {%r6005, %r6004};
	shf.l.wrap.b32 	%r6006, %r6002, %r6003, 3;
	shf.l.wrap.b32 	%r6007, %r6003, %r6002, 3;
	mov.b64 	%rd8642, {%r6007, %r6006};
	xor.b64  	%rd8643, %rd8641, %rd8642;
	shr.u64 	%rd8644, %rd8579, 6;
	xor.b64  	%rd8645, %rd8643, %rd8644;
	shf.r.wrap.b32 	%r6008, %r5665, %r5664, 1;
	shf.r.wrap.b32 	%r6009, %r5664, %r5665, 1;
	mov.b64 	%rd8646, {%r6009, %r6008};
	shf.r.wrap.b32 	%r6010, %r5665, %r5664, 8;
	shf.r.wrap.b32 	%r6011, %r5664, %r5665, 8;
	mov.b64 	%rd8647, {%r6011, %r6010};
	xor.b64  	%rd8648, %rd8646, %rd8647;
	shr.u64 	%rd8649, %rd8098, 7;
	xor.b64  	%rd8650, %rd8648, %rd8649;
	add.s64 	%rd8651, %rd8650, %rd8061;
	add.s64 	%rd8652, %rd8651, %rd8394;
	add.s64 	%rd8653, %rd8652, %rd8645;
	add.s64 	%rd8654, %rd8653, %rd8518;
	xor.b64  	%rd8655, %rd8592, %rd8555;
	and.b64  	%rd8656, %rd8629, %rd8655;
	xor.b64  	%rd8657, %rd8656, %rd8555;
	add.s64 	%rd8658, %rd8654, %rd8657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6012,%dummy}, %rd8629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6013}, %rd8629;
	}
	shf.r.wrap.b32 	%r6014, %r6013, %r6012, 14;
	shf.r.wrap.b32 	%r6015, %r6012, %r6013, 14;
	mov.b64 	%rd8659, {%r6015, %r6014};
	shf.r.wrap.b32 	%r6016, %r6013, %r6012, 18;
	shf.r.wrap.b32 	%r6017, %r6012, %r6013, 18;
	mov.b64 	%rd8660, {%r6017, %r6016};
	xor.b64  	%rd8661, %rd8659, %rd8660;
	shf.l.wrap.b32 	%r6018, %r6012, %r6013, 23;
	shf.l.wrap.b32 	%r6019, %r6013, %r6012, 23;
	mov.b64 	%rd8662, {%r6019, %r6018};
	xor.b64  	%rd8663, %rd8661, %rd8662;
	add.s64 	%rd8664, %rd8658, %rd8663;
	add.s64 	%rd8665, %rd8664, 3659926193048069267;
	add.s64 	%rd8666, %rd8665, %rd8529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6020,%dummy}, %rd8640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd8640;
	}
	shf.r.wrap.b32 	%r6022, %r6021, %r6020, 28;
	shf.r.wrap.b32 	%r6023, %r6020, %r6021, 28;
	mov.b64 	%rd8667, {%r6023, %r6022};
	shf.l.wrap.b32 	%r6024, %r6020, %r6021, 30;
	shf.l.wrap.b32 	%r6025, %r6021, %r6020, 30;
	mov.b64 	%rd8668, {%r6025, %r6024};
	xor.b64  	%rd8669, %rd8667, %rd8668;
	shf.l.wrap.b32 	%r6026, %r6020, %r6021, 25;
	shf.l.wrap.b32 	%r6027, %r6021, %r6020, 25;
	mov.b64 	%rd8670, {%r6027, %r6026};
	xor.b64  	%rd8671, %rd8669, %rd8670;
	and.b64  	%rd8672, %rd8640, %rd8603;
	or.b64  	%rd8673, %rd8640, %rd8603;
	and.b64  	%rd8674, %rd8673, %rd8566;
	or.b64  	%rd8675, %rd8674, %rd8672;
	add.s64 	%rd8676, %rd8675, %rd8671;
	add.s64 	%rd8677, %rd8676, %rd8665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6028,%dummy}, %rd8616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd8616;
	}
	shf.r.wrap.b32 	%r6030, %r6029, %r6028, 19;
	shf.r.wrap.b32 	%r6031, %r6028, %r6029, 19;
	mov.b64 	%rd8678, {%r6031, %r6030};
	shf.l.wrap.b32 	%r6032, %r6028, %r6029, 3;
	shf.l.wrap.b32 	%r6033, %r6029, %r6028, 3;
	mov.b64 	%rd8679, {%r6033, %r6032};
	xor.b64  	%rd8680, %rd8678, %rd8679;
	shr.u64 	%rd8681, %rd8616, 6;
	xor.b64  	%rd8682, %rd8680, %rd8681;
	shf.r.wrap.b32 	%r6034, %r5691, %r5690, 1;
	shf.r.wrap.b32 	%r6035, %r5690, %r5691, 1;
	mov.b64 	%rd8683, {%r6035, %r6034};
	shf.r.wrap.b32 	%r6036, %r5691, %r5690, 8;
	shf.r.wrap.b32 	%r6037, %r5690, %r5691, 8;
	mov.b64 	%rd8684, {%r6037, %r6036};
	xor.b64  	%rd8685, %rd8683, %rd8684;
	shr.u64 	%rd8686, %rd8135, 7;
	xor.b64  	%rd8687, %rd8685, %rd8686;
	add.s64 	%rd8688, %rd8687, %rd8098;
	add.s64 	%rd8689, %rd8688, %rd8431;
	add.s64 	%rd8690, %rd8689, %rd8682;
	add.s64 	%rd8691, %rd8690, %rd8555;
	xor.b64  	%rd8692, %rd8629, %rd8592;
	and.b64  	%rd8693, %rd8666, %rd8692;
	xor.b64  	%rd8694, %rd8693, %rd8592;
	add.s64 	%rd8695, %rd8691, %rd8694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6038,%dummy}, %rd8666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6039}, %rd8666;
	}
	shf.r.wrap.b32 	%r6040, %r6039, %r6038, 14;
	shf.r.wrap.b32 	%r6041, %r6038, %r6039, 14;
	mov.b64 	%rd8696, {%r6041, %r6040};
	shf.r.wrap.b32 	%r6042, %r6039, %r6038, 18;
	shf.r.wrap.b32 	%r6043, %r6038, %r6039, 18;
	mov.b64 	%rd8697, {%r6043, %r6042};
	xor.b64  	%rd8698, %rd8696, %rd8697;
	shf.l.wrap.b32 	%r6044, %r6038, %r6039, 23;
	shf.l.wrap.b32 	%r6045, %r6039, %r6038, 23;
	mov.b64 	%rd8699, {%r6045, %r6044};
	xor.b64  	%rd8700, %rd8698, %rd8699;
	add.s64 	%rd8701, %rd8695, %rd8700;
	add.s64 	%rd8702, %rd8701, 4368137639120453308;
	add.s64 	%rd8703, %rd8702, %rd8566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6046,%dummy}, %rd8677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6047}, %rd8677;
	}
	shf.r.wrap.b32 	%r6048, %r6047, %r6046, 28;
	shf.r.wrap.b32 	%r6049, %r6046, %r6047, 28;
	mov.b64 	%rd8704, {%r6049, %r6048};
	shf.l.wrap.b32 	%r6050, %r6046, %r6047, 30;
	shf.l.wrap.b32 	%r6051, %r6047, %r6046, 30;
	mov.b64 	%rd8705, {%r6051, %r6050};
	xor.b64  	%rd8706, %rd8704, %rd8705;
	shf.l.wrap.b32 	%r6052, %r6046, %r6047, 25;
	shf.l.wrap.b32 	%r6053, %r6047, %r6046, 25;
	mov.b64 	%rd8707, {%r6053, %r6052};
	xor.b64  	%rd8708, %rd8706, %rd8707;
	and.b64  	%rd8709, %rd8677, %rd8640;
	or.b64  	%rd8710, %rd8677, %rd8640;
	and.b64  	%rd8711, %rd8710, %rd8603;
	or.b64  	%rd8712, %rd8711, %rd8709;
	add.s64 	%rd8713, %rd8712, %rd8708;
	add.s64 	%rd8714, %rd8713, %rd8702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6054,%dummy}, %rd8653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6055}, %rd8653;
	}
	shf.r.wrap.b32 	%r6056, %r6055, %r6054, 19;
	shf.r.wrap.b32 	%r6057, %r6054, %r6055, 19;
	mov.b64 	%rd8715, {%r6057, %r6056};
	shf.l.wrap.b32 	%r6058, %r6054, %r6055, 3;
	shf.l.wrap.b32 	%r6059, %r6055, %r6054, 3;
	mov.b64 	%rd8716, {%r6059, %r6058};
	xor.b64  	%rd8717, %rd8715, %rd8716;
	shr.u64 	%rd8718, %rd8653, 6;
	xor.b64  	%rd8719, %rd8717, %rd8718;
	shf.r.wrap.b32 	%r6060, %r5717, %r5716, 1;
	shf.r.wrap.b32 	%r6061, %r5716, %r5717, 1;
	mov.b64 	%rd8720, {%r6061, %r6060};
	shf.r.wrap.b32 	%r6062, %r5717, %r5716, 8;
	shf.r.wrap.b32 	%r6063, %r5716, %r5717, 8;
	mov.b64 	%rd8721, {%r6063, %r6062};
	xor.b64  	%rd8722, %rd8720, %rd8721;
	shr.u64 	%rd8723, %rd8172, 7;
	xor.b64  	%rd8724, %rd8722, %rd8723;
	add.s64 	%rd8725, %rd8724, %rd8135;
	add.s64 	%rd8726, %rd8725, %rd8468;
	add.s64 	%rd8727, %rd8726, %rd8719;
	add.s64 	%rd8728, %rd8727, %rd8592;
	xor.b64  	%rd8729, %rd8666, %rd8629;
	and.b64  	%rd8730, %rd8703, %rd8729;
	xor.b64  	%rd8731, %rd8730, %rd8629;
	add.s64 	%rd8732, %rd8728, %rd8731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6064,%dummy}, %rd8703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6065}, %rd8703;
	}
	shf.r.wrap.b32 	%r6066, %r6065, %r6064, 14;
	shf.r.wrap.b32 	%r6067, %r6064, %r6065, 14;
	mov.b64 	%rd8733, {%r6067, %r6066};
	shf.r.wrap.b32 	%r6068, %r6065, %r6064, 18;
	shf.r.wrap.b32 	%r6069, %r6064, %r6065, 18;
	mov.b64 	%rd8734, {%r6069, %r6068};
	xor.b64  	%rd8735, %rd8733, %rd8734;
	shf.l.wrap.b32 	%r6070, %r6064, %r6065, 23;
	shf.l.wrap.b32 	%r6071, %r6065, %r6064, 23;
	mov.b64 	%rd8736, {%r6071, %r6070};
	xor.b64  	%rd8737, %rd8735, %rd8736;
	add.s64 	%rd8738, %rd8732, %rd8737;
	add.s64 	%rd8739, %rd8738, 4836135668995329356;
	add.s64 	%rd8740, %rd8739, %rd8603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6072,%dummy}, %rd8714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6073}, %rd8714;
	}
	shf.r.wrap.b32 	%r6074, %r6073, %r6072, 28;
	shf.r.wrap.b32 	%r6075, %r6072, %r6073, 28;
	mov.b64 	%rd8741, {%r6075, %r6074};
	shf.l.wrap.b32 	%r6076, %r6072, %r6073, 30;
	shf.l.wrap.b32 	%r6077, %r6073, %r6072, 30;
	mov.b64 	%rd8742, {%r6077, %r6076};
	xor.b64  	%rd8743, %rd8741, %rd8742;
	shf.l.wrap.b32 	%r6078, %r6072, %r6073, 25;
	shf.l.wrap.b32 	%r6079, %r6073, %r6072, 25;
	mov.b64 	%rd8744, {%r6079, %r6078};
	xor.b64  	%rd8745, %rd8743, %rd8744;
	and.b64  	%rd8746, %rd8714, %rd8677;
	or.b64  	%rd8747, %rd8714, %rd8677;
	and.b64  	%rd8748, %rd8747, %rd8640;
	or.b64  	%rd8749, %rd8748, %rd8746;
	add.s64 	%rd8750, %rd8749, %rd8745;
	add.s64 	%rd8751, %rd8750, %rd8739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6080,%dummy}, %rd8690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6081}, %rd8690;
	}
	shf.r.wrap.b32 	%r6082, %r6081, %r6080, 19;
	shf.r.wrap.b32 	%r6083, %r6080, %r6081, 19;
	mov.b64 	%rd8752, {%r6083, %r6082};
	shf.l.wrap.b32 	%r6084, %r6080, %r6081, 3;
	shf.l.wrap.b32 	%r6085, %r6081, %r6080, 3;
	mov.b64 	%rd8753, {%r6085, %r6084};
	xor.b64  	%rd8754, %rd8752, %rd8753;
	shr.u64 	%rd8755, %rd8690, 6;
	xor.b64  	%rd8756, %rd8754, %rd8755;
	shf.r.wrap.b32 	%r6086, %r5743, %r5742, 1;
	shf.r.wrap.b32 	%r6087, %r5742, %r5743, 1;
	mov.b64 	%rd8757, {%r6087, %r6086};
	shf.r.wrap.b32 	%r6088, %r5743, %r5742, 8;
	shf.r.wrap.b32 	%r6089, %r5742, %r5743, 8;
	mov.b64 	%rd8758, {%r6089, %r6088};
	xor.b64  	%rd8759, %rd8757, %rd8758;
	shr.u64 	%rd8760, %rd8209, 7;
	xor.b64  	%rd8761, %rd8759, %rd8760;
	add.s64 	%rd8762, %rd8761, %rd8172;
	add.s64 	%rd8763, %rd8762, %rd8505;
	add.s64 	%rd8764, %rd8763, %rd8756;
	add.s64 	%rd8765, %rd8764, %rd8629;
	xor.b64  	%rd8766, %rd8703, %rd8666;
	and.b64  	%rd8767, %rd8740, %rd8766;
	xor.b64  	%rd8768, %rd8767, %rd8666;
	add.s64 	%rd8769, %rd8765, %rd8768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6090,%dummy}, %rd8740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6091}, %rd8740;
	}
	shf.r.wrap.b32 	%r6092, %r6091, %r6090, 14;
	shf.r.wrap.b32 	%r6093, %r6090, %r6091, 14;
	mov.b64 	%rd8770, {%r6093, %r6092};
	shf.r.wrap.b32 	%r6094, %r6091, %r6090, 18;
	shf.r.wrap.b32 	%r6095, %r6090, %r6091, 18;
	mov.b64 	%rd8771, {%r6095, %r6094};
	xor.b64  	%rd8772, %rd8770, %rd8771;
	shf.l.wrap.b32 	%r6096, %r6090, %r6091, 23;
	shf.l.wrap.b32 	%r6097, %r6091, %r6090, 23;
	mov.b64 	%rd8773, {%r6097, %r6096};
	xor.b64  	%rd8774, %rd8772, %rd8773;
	add.s64 	%rd8775, %rd8769, %rd8774;
	add.s64 	%rd8776, %rd8775, 5532061633213252278;
	add.s64 	%rd8777, %rd8776, %rd8640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6098,%dummy}, %rd8751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6099}, %rd8751;
	}
	shf.r.wrap.b32 	%r6100, %r6099, %r6098, 28;
	shf.r.wrap.b32 	%r6101, %r6098, %r6099, 28;
	mov.b64 	%rd8778, {%r6101, %r6100};
	shf.l.wrap.b32 	%r6102, %r6098, %r6099, 30;
	shf.l.wrap.b32 	%r6103, %r6099, %r6098, 30;
	mov.b64 	%rd8779, {%r6103, %r6102};
	xor.b64  	%rd8780, %rd8778, %rd8779;
	shf.l.wrap.b32 	%r6104, %r6098, %r6099, 25;
	shf.l.wrap.b32 	%r6105, %r6099, %r6098, 25;
	mov.b64 	%rd8781, {%r6105, %r6104};
	xor.b64  	%rd8782, %rd8780, %rd8781;
	and.b64  	%rd8783, %rd8751, %rd8714;
	or.b64  	%rd8784, %rd8751, %rd8714;
	and.b64  	%rd8785, %rd8784, %rd8677;
	or.b64  	%rd8786, %rd8785, %rd8783;
	add.s64 	%rd8787, %rd8786, %rd8782;
	add.s64 	%rd8788, %rd8787, %rd8776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd8727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6107}, %rd8727;
	}
	shf.r.wrap.b32 	%r6108, %r6107, %r6106, 19;
	shf.r.wrap.b32 	%r6109, %r6106, %r6107, 19;
	mov.b64 	%rd8789, {%r6109, %r6108};
	shf.l.wrap.b32 	%r6110, %r6106, %r6107, 3;
	shf.l.wrap.b32 	%r6111, %r6107, %r6106, 3;
	mov.b64 	%rd8790, {%r6111, %r6110};
	xor.b64  	%rd8791, %rd8789, %rd8790;
	shr.u64 	%rd8792, %rd8727, 6;
	xor.b64  	%rd8793, %rd8791, %rd8792;
	shf.r.wrap.b32 	%r6112, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r6113, %r5768, %r5769, 1;
	mov.b64 	%rd8794, {%r6113, %r6112};
	shf.r.wrap.b32 	%r6114, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r6115, %r5768, %r5769, 8;
	mov.b64 	%rd8795, {%r6115, %r6114};
	xor.b64  	%rd8796, %rd8794, %rd8795;
	shr.u64 	%rd8797, %rd8246, 7;
	xor.b64  	%rd8798, %rd8796, %rd8797;
	add.s64 	%rd8799, %rd8798, %rd8209;
	add.s64 	%rd8800, %rd8799, %rd8542;
	add.s64 	%rd8801, %rd8800, %rd8793;
	add.s64 	%rd8802, %rd8801, %rd8666;
	xor.b64  	%rd8803, %rd8740, %rd8703;
	and.b64  	%rd8804, %rd8777, %rd8803;
	xor.b64  	%rd8805, %rd8804, %rd8703;
	add.s64 	%rd8806, %rd8802, %rd8805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6116,%dummy}, %rd8777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6117}, %rd8777;
	}
	shf.r.wrap.b32 	%r6118, %r6117, %r6116, 14;
	shf.r.wrap.b32 	%r6119, %r6116, %r6117, 14;
	mov.b64 	%rd8807, {%r6119, %r6118};
	shf.r.wrap.b32 	%r6120, %r6117, %r6116, 18;
	shf.r.wrap.b32 	%r6121, %r6116, %r6117, 18;
	mov.b64 	%rd8808, {%r6121, %r6120};
	xor.b64  	%rd8809, %rd8807, %rd8808;
	shf.l.wrap.b32 	%r6122, %r6116, %r6117, 23;
	shf.l.wrap.b32 	%r6123, %r6117, %r6116, 23;
	mov.b64 	%rd8810, {%r6123, %r6122};
	xor.b64  	%rd8811, %rd8809, %rd8810;
	add.s64 	%rd8812, %rd8806, %rd8811;
	add.s64 	%rd8813, %rd8812, 6448918945643986474;
	add.s64 	%rd8814, %rd8813, %rd8677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6124,%dummy}, %rd8788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6125}, %rd8788;
	}
	shf.r.wrap.b32 	%r6126, %r6125, %r6124, 28;
	shf.r.wrap.b32 	%r6127, %r6124, %r6125, 28;
	mov.b64 	%rd8815, {%r6127, %r6126};
	shf.l.wrap.b32 	%r6128, %r6124, %r6125, 30;
	shf.l.wrap.b32 	%r6129, %r6125, %r6124, 30;
	mov.b64 	%rd8816, {%r6129, %r6128};
	xor.b64  	%rd8817, %rd8815, %rd8816;
	shf.l.wrap.b32 	%r6130, %r6124, %r6125, 25;
	shf.l.wrap.b32 	%r6131, %r6125, %r6124, 25;
	mov.b64 	%rd8818, {%r6131, %r6130};
	xor.b64  	%rd8819, %rd8817, %rd8818;
	and.b64  	%rd8820, %rd8788, %rd8751;
	or.b64  	%rd8821, %rd8788, %rd8751;
	and.b64  	%rd8822, %rd8821, %rd8714;
	or.b64  	%rd8823, %rd8822, %rd8820;
	add.s64 	%rd8824, %rd8823, %rd8819;
	add.s64 	%rd8825, %rd8824, %rd8813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6132,%dummy}, %rd8764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6133}, %rd8764;
	}
	shf.r.wrap.b32 	%r6134, %r6133, %r6132, 19;
	shf.r.wrap.b32 	%r6135, %r6132, %r6133, 19;
	mov.b64 	%rd8826, {%r6135, %r6134};
	shf.l.wrap.b32 	%r6136, %r6132, %r6133, 3;
	shf.l.wrap.b32 	%r6137, %r6133, %r6132, 3;
	mov.b64 	%rd8827, {%r6137, %r6136};
	xor.b64  	%rd8828, %rd8826, %rd8827;
	shr.u64 	%rd8829, %rd8764, 6;
	xor.b64  	%rd8830, %rd8828, %rd8829;
	shf.r.wrap.b32 	%r6138, %r5795, %r5794, 1;
	shf.r.wrap.b32 	%r6139, %r5794, %r5795, 1;
	mov.b64 	%rd8831, {%r6139, %r6138};
	shf.r.wrap.b32 	%r6140, %r5795, %r5794, 8;
	shf.r.wrap.b32 	%r6141, %r5794, %r5795, 8;
	mov.b64 	%rd8832, {%r6141, %r6140};
	xor.b64  	%rd8833, %rd8831, %rd8832;
	shr.u64 	%rd8834, %rd8283, 7;
	xor.b64  	%rd8835, %rd8833, %rd8834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6142,%dummy}, %rd8814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6143}, %rd8814;
	}
	shf.r.wrap.b32 	%r6144, %r6143, %r6142, 14;
	shf.r.wrap.b32 	%r6145, %r6142, %r6143, 14;
	mov.b64 	%rd8836, {%r6145, %r6144};
	shf.r.wrap.b32 	%r6146, %r6143, %r6142, 18;
	shf.r.wrap.b32 	%r6147, %r6142, %r6143, 18;
	mov.b64 	%rd8837, {%r6147, %r6146};
	xor.b64  	%rd8838, %rd8836, %rd8837;
	shf.l.wrap.b32 	%r6148, %r6142, %r6143, 23;
	shf.l.wrap.b32 	%r6149, %r6143, %r6142, 23;
	mov.b64 	%rd8839, {%r6149, %r6148};
	xor.b64  	%rd8840, %rd8838, %rd8839;
	xor.b64  	%rd8841, %rd8777, %rd8740;
	and.b64  	%rd8842, %rd8814, %rd8841;
	xor.b64  	%rd8843, %rd8842, %rd8740;
	add.s64 	%rd8844, %rd8246, %rd8835;
	add.s64 	%rd8845, %rd8844, %rd8579;
	add.s64 	%rd8846, %rd8845, %rd8830;
	add.s64 	%rd8847, %rd8846, %rd8703;
	add.s64 	%rd8848, %rd8847, %rd8843;
	add.s64 	%rd8849, %rd8848, %rd8840;
	add.s64 	%rd8850, %rd8849, 6902733635092675308;
	add.s64 	%rd8851, %rd8850, %rd8714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6150,%dummy}, %rd8825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6151}, %rd8825;
	}
	shf.r.wrap.b32 	%r6152, %r6151, %r6150, 28;
	shf.r.wrap.b32 	%r6153, %r6150, %r6151, 28;
	mov.b64 	%rd8852, {%r6153, %r6152};
	shf.l.wrap.b32 	%r6154, %r6150, %r6151, 30;
	shf.l.wrap.b32 	%r6155, %r6151, %r6150, 30;
	mov.b64 	%rd8853, {%r6155, %r6154};
	xor.b64  	%rd8854, %rd8852, %rd8853;
	shf.l.wrap.b32 	%r6156, %r6150, %r6151, 25;
	shf.l.wrap.b32 	%r6157, %r6151, %r6150, 25;
	mov.b64 	%rd8855, {%r6157, %r6156};
	xor.b64  	%rd8856, %rd8854, %rd8855;
	and.b64  	%rd8857, %rd8825, %rd8788;
	or.b64  	%rd8858, %rd8825, %rd8788;
	and.b64  	%rd8859, %rd8858, %rd8751;
	or.b64  	%rd8860, %rd8859, %rd8857;
	add.s64 	%rd8861, %rd8860, %rd8856;
	add.s64 	%rd8862, %rd8861, %rd8850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6158,%dummy}, %rd8801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6159}, %rd8801;
	}
	shf.r.wrap.b32 	%r6160, %r6159, %r6158, 19;
	shf.r.wrap.b32 	%r6161, %r6158, %r6159, 19;
	mov.b64 	%rd8863, {%r6161, %r6160};
	shf.l.wrap.b32 	%r6162, %r6158, %r6159, 3;
	shf.l.wrap.b32 	%r6163, %r6159, %r6158, 3;
	mov.b64 	%rd8864, {%r6163, %r6162};
	xor.b64  	%rd8865, %rd8863, %rd8864;
	shr.u64 	%rd8866, %rd8801, 6;
	xor.b64  	%rd8867, %rd8865, %rd8866;
	shf.r.wrap.b32 	%r6164, %r5821, %r5820, 1;
	shf.r.wrap.b32 	%r6165, %r5820, %r5821, 1;
	mov.b64 	%rd8868, {%r6165, %r6164};
	shf.r.wrap.b32 	%r6166, %r5821, %r5820, 8;
	shf.r.wrap.b32 	%r6167, %r5820, %r5821, 8;
	mov.b64 	%rd8869, {%r6167, %r6166};
	xor.b64  	%rd8870, %rd8868, %rd8869;
	shr.u64 	%rd8871, %rd8320, 7;
	xor.b64  	%rd8872, %rd8870, %rd8871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6168,%dummy}, %rd8851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd8851;
	}
	shf.r.wrap.b32 	%r6170, %r6169, %r6168, 14;
	shf.r.wrap.b32 	%r6171, %r6168, %r6169, 14;
	mov.b64 	%rd8873, {%r6171, %r6170};
	shf.r.wrap.b32 	%r6172, %r6169, %r6168, 18;
	shf.r.wrap.b32 	%r6173, %r6168, %r6169, 18;
	mov.b64 	%rd8874, {%r6173, %r6172};
	xor.b64  	%rd8875, %rd8873, %rd8874;
	shf.l.wrap.b32 	%r6174, %r6168, %r6169, 23;
	shf.l.wrap.b32 	%r6175, %r6169, %r6168, 23;
	mov.b64 	%rd8876, {%r6175, %r6174};
	xor.b64  	%rd8877, %rd8875, %rd8876;
	xor.b64  	%rd8878, %rd8814, %rd8777;
	and.b64  	%rd8879, %rd8851, %rd8878;
	xor.b64  	%rd8880, %rd8879, %rd8777;
	add.s64 	%rd8881, %rd8283, %rd8872;
	add.s64 	%rd8882, %rd8881, %rd8616;
	add.s64 	%rd8883, %rd8882, %rd8867;
	add.s64 	%rd8884, %rd8883, %rd8740;
	add.s64 	%rd8885, %rd8884, %rd8880;
	add.s64 	%rd8886, %rd8885, %rd8877;
	add.s64 	%rd8887, %rd8886, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6176,%dummy}, %rd8862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6177}, %rd8862;
	}
	shf.r.wrap.b32 	%r6178, %r6177, %r6176, 28;
	shf.r.wrap.b32 	%r6179, %r6176, %r6177, 28;
	mov.b64 	%rd8888, {%r6179, %r6178};
	shf.l.wrap.b32 	%r6180, %r6176, %r6177, 30;
	shf.l.wrap.b32 	%r6181, %r6177, %r6176, 30;
	mov.b64 	%rd8889, {%r6181, %r6180};
	xor.b64  	%rd8890, %rd8888, %rd8889;
	shf.l.wrap.b32 	%r6182, %r6176, %r6177, 25;
	shf.l.wrap.b32 	%r6183, %r6177, %r6176, 25;
	mov.b64 	%rd8891, {%r6183, %r6182};
	xor.b64  	%rd8892, %rd8890, %rd8891;
	and.b64  	%rd8893, %rd8862, %rd8825;
	or.b64  	%rd8894, %rd8862, %rd8825;
	and.b64  	%rd8895, %rd8894, %rd8788;
	or.b64  	%rd8896, %rd8895, %rd8893;
	add.s64 	%rd8897, %rd8892, %rd6158;
	add.s64 	%rd8898, %rd8897, %rd8896;
	add.s64 	%rd8899, %rd8898, %rd8887;
	st.local.u64 	[%rd3+8], %rd8899;
	add.s64 	%rd8900, %rd8862, %rd6164;
	st.local.u64 	[%rd3+16], %rd8900;
	add.s64 	%rd8901, %rd8825, %rd6167;
	st.local.u64 	[%rd3+24], %rd8901;
	add.s64 	%rd8902, %rd8788, %rd6156;
	st.local.u64 	[%rd3+32], %rd8902;
	add.s64 	%rd8903, %rd8751, %rd6142;
	add.s64 	%rd8904, %rd8903, %rd8887;
	st.local.u64 	[%rd3+40], %rd8904;
	add.s64 	%rd8905, %rd8851, %rd6150;
	st.local.u64 	[%rd3+48], %rd8905;
	add.s64 	%rd8906, %rd8814, %rd6149;
	st.local.u64 	[%rd3+56], %rd8906;
	add.s64 	%rd8907, %rd8777, %rd6140;
	st.local.u64 	[%rd3+64], %rd8907;
	cvt.u64.u32 	%rd8908, %r48;
	add.s64 	%rd12078, %rd12004, %rd8908;
	add.u64 	%rd8909, %SP, 0;
	add.s64 	%rd12060, %rd8909, %rd8908;
	mov.u32 	%r6184, 16;
	sub.s32 	%r8280, %r6184, %r48;

$L__BB0_42:
	setp.lt.u32 	%p38, %r8280, 128;
	@%p38 bra 	$L__BB0_47;

$L__BB0_43:
	and.b64  	%rd8910, %rd12060, 7;
	setp.eq.s64 	%p39, %rd8910, 0;
	@%p39 bra 	$L__BB0_45;

	ld.local.u8 	%rd8911, [%rd12078];
	shl.b64 	%rd8912, %rd8911, 56;
	ld.local.u8 	%rd8913, [%rd12078+1];
	shl.b64 	%rd8914, %rd8913, 48;
	or.b64  	%rd8915, %rd8914, %rd8912;
	ld.local.u8 	%rd8916, [%rd12078+2];
	shl.b64 	%rd8917, %rd8916, 40;
	or.b64  	%rd8918, %rd8915, %rd8917;
	ld.local.u8 	%rd8919, [%rd12078+3];
	shl.b64 	%rd8920, %rd8919, 32;
	or.b64  	%rd8921, %rd8918, %rd8920;
	ld.local.u8 	%r6185, [%rd12078+4];
	mul.wide.u32 	%rd8922, %r6185, 16777216;
	or.b64  	%rd8923, %rd8921, %rd8922;
	ld.local.u8 	%r6186, [%rd12078+5];
	mul.wide.u32 	%rd8924, %r6186, 65536;
	or.b64  	%rd8925, %rd8923, %rd8924;
	ld.local.u8 	%r6187, [%rd12078+6];
	mul.wide.u32 	%rd8926, %r6187, 256;
	or.b64  	%rd8927, %rd8925, %rd8926;
	ld.local.u8 	%rd8928, [%rd12078+7];
	or.b64  	%rd12077, %rd8927, %rd8928;
	ld.local.u8 	%rd8929, [%rd12078+8];
	shl.b64 	%rd8930, %rd8929, 56;
	ld.local.u8 	%rd8931, [%rd12078+9];
	shl.b64 	%rd8932, %rd8931, 48;
	or.b64  	%rd8933, %rd8932, %rd8930;
	ld.local.u8 	%rd8934, [%rd12078+10];
	shl.b64 	%rd8935, %rd8934, 40;
	or.b64  	%rd8936, %rd8933, %rd8935;
	ld.local.u8 	%rd8937, [%rd12078+11];
	shl.b64 	%rd8938, %rd8937, 32;
	or.b64  	%rd8939, %rd8936, %rd8938;
	ld.local.u8 	%r6188, [%rd12078+12];
	mul.wide.u32 	%rd8940, %r6188, 16777216;
	or.b64  	%rd8941, %rd8939, %rd8940;
	ld.local.u8 	%r6189, [%rd12078+13];
	mul.wide.u32 	%rd8942, %r6189, 65536;
	or.b64  	%rd8943, %rd8941, %rd8942;
	ld.local.u8 	%r6190, [%rd12078+14];
	mul.wide.u32 	%rd8944, %r6190, 256;
	or.b64  	%rd8945, %rd8943, %rd8944;
	ld.local.u8 	%rd8946, [%rd12078+15];
	or.b64  	%rd12076, %rd8945, %rd8946;
	ld.local.u8 	%rd8947, [%rd12078+16];
	shl.b64 	%rd8948, %rd8947, 56;
	ld.local.u8 	%rd8949, [%rd12078+17];
	shl.b64 	%rd8950, %rd8949, 48;
	or.b64  	%rd8951, %rd8950, %rd8948;
	ld.local.u8 	%rd8952, [%rd12078+18];
	shl.b64 	%rd8953, %rd8952, 40;
	or.b64  	%rd8954, %rd8951, %rd8953;
	ld.local.u8 	%rd8955, [%rd12078+19];
	shl.b64 	%rd8956, %rd8955, 32;
	or.b64  	%rd8957, %rd8954, %rd8956;
	ld.local.u8 	%r6191, [%rd12078+20];
	mul.wide.u32 	%rd8958, %r6191, 16777216;
	or.b64  	%rd8959, %rd8957, %rd8958;
	ld.local.u8 	%r6192, [%rd12078+21];
	mul.wide.u32 	%rd8960, %r6192, 65536;
	or.b64  	%rd8961, %rd8959, %rd8960;
	ld.local.u8 	%r6193, [%rd12078+22];
	mul.wide.u32 	%rd8962, %r6193, 256;
	or.b64  	%rd8963, %rd8961, %rd8962;
	ld.local.u8 	%rd8964, [%rd12078+23];
	or.b64  	%rd12075, %rd8963, %rd8964;
	ld.local.u8 	%rd8965, [%rd12078+24];
	shl.b64 	%rd8966, %rd8965, 56;
	ld.local.u8 	%rd8967, [%rd12078+25];
	shl.b64 	%rd8968, %rd8967, 48;
	or.b64  	%rd8969, %rd8968, %rd8966;
	ld.local.u8 	%rd8970, [%rd12078+26];
	shl.b64 	%rd8971, %rd8970, 40;
	or.b64  	%rd8972, %rd8969, %rd8971;
	ld.local.u8 	%rd8973, [%rd12078+27];
	shl.b64 	%rd8974, %rd8973, 32;
	or.b64  	%rd8975, %rd8972, %rd8974;
	ld.local.u8 	%r6194, [%rd12078+28];
	mul.wide.u32 	%rd8976, %r6194, 16777216;
	or.b64  	%rd8977, %rd8975, %rd8976;
	ld.local.u8 	%r6195, [%rd12078+29];
	mul.wide.u32 	%rd8978, %r6195, 65536;
	or.b64  	%rd8979, %rd8977, %rd8978;
	ld.local.u8 	%r6196, [%rd12078+30];
	mul.wide.u32 	%rd8980, %r6196, 256;
	or.b64  	%rd8981, %rd8979, %rd8980;
	ld.local.u8 	%rd8982, [%rd12078+31];
	or.b64  	%rd12074, %rd8981, %rd8982;
	ld.local.u8 	%rd8983, [%rd12078+32];
	shl.b64 	%rd8984, %rd8983, 56;
	ld.local.u8 	%rd8985, [%rd12078+33];
	shl.b64 	%rd8986, %rd8985, 48;
	or.b64  	%rd8987, %rd8986, %rd8984;
	ld.local.u8 	%rd8988, [%rd12078+34];
	shl.b64 	%rd8989, %rd8988, 40;
	or.b64  	%rd8990, %rd8987, %rd8989;
	ld.local.u8 	%rd8991, [%rd12078+35];
	shl.b64 	%rd8992, %rd8991, 32;
	or.b64  	%rd8993, %rd8990, %rd8992;
	ld.local.u8 	%r6197, [%rd12078+36];
	mul.wide.u32 	%rd8994, %r6197, 16777216;
	or.b64  	%rd8995, %rd8993, %rd8994;
	ld.local.u8 	%r6198, [%rd12078+37];
	mul.wide.u32 	%rd8996, %r6198, 65536;
	or.b64  	%rd8997, %rd8995, %rd8996;
	ld.local.u8 	%r6199, [%rd12078+38];
	mul.wide.u32 	%rd8998, %r6199, 256;
	or.b64  	%rd8999, %rd8997, %rd8998;
	ld.local.u8 	%rd9000, [%rd12078+39];
	or.b64  	%rd12073, %rd8999, %rd9000;
	ld.local.u8 	%rd9001, [%rd12078+40];
	shl.b64 	%rd9002, %rd9001, 56;
	ld.local.u8 	%rd9003, [%rd12078+41];
	shl.b64 	%rd9004, %rd9003, 48;
	or.b64  	%rd9005, %rd9004, %rd9002;
	ld.local.u8 	%rd9006, [%rd12078+42];
	shl.b64 	%rd9007, %rd9006, 40;
	or.b64  	%rd9008, %rd9005, %rd9007;
	ld.local.u8 	%rd9009, [%rd12078+43];
	shl.b64 	%rd9010, %rd9009, 32;
	or.b64  	%rd9011, %rd9008, %rd9010;
	ld.local.u8 	%r6200, [%rd12078+44];
	mul.wide.u32 	%rd9012, %r6200, 16777216;
	or.b64  	%rd9013, %rd9011, %rd9012;
	ld.local.u8 	%r6201, [%rd12078+45];
	mul.wide.u32 	%rd9014, %r6201, 65536;
	or.b64  	%rd9015, %rd9013, %rd9014;
	ld.local.u8 	%r6202, [%rd12078+46];
	mul.wide.u32 	%rd9016, %r6202, 256;
	or.b64  	%rd9017, %rd9015, %rd9016;
	ld.local.u8 	%rd9018, [%rd12078+47];
	or.b64  	%rd12072, %rd9017, %rd9018;
	ld.local.u8 	%rd9019, [%rd12078+48];
	shl.b64 	%rd9020, %rd9019, 56;
	ld.local.u8 	%rd9021, [%rd12078+49];
	shl.b64 	%rd9022, %rd9021, 48;
	or.b64  	%rd9023, %rd9022, %rd9020;
	ld.local.u8 	%rd9024, [%rd12078+50];
	shl.b64 	%rd9025, %rd9024, 40;
	or.b64  	%rd9026, %rd9023, %rd9025;
	ld.local.u8 	%rd9027, [%rd12078+51];
	shl.b64 	%rd9028, %rd9027, 32;
	or.b64  	%rd9029, %rd9026, %rd9028;
	ld.local.u8 	%r6203, [%rd12078+52];
	mul.wide.u32 	%rd9030, %r6203, 16777216;
	or.b64  	%rd9031, %rd9029, %rd9030;
	ld.local.u8 	%r6204, [%rd12078+53];
	mul.wide.u32 	%rd9032, %r6204, 65536;
	or.b64  	%rd9033, %rd9031, %rd9032;
	ld.local.u8 	%r6205, [%rd12078+54];
	mul.wide.u32 	%rd9034, %r6205, 256;
	or.b64  	%rd9035, %rd9033, %rd9034;
	ld.local.u8 	%rd9036, [%rd12078+55];
	or.b64  	%rd12071, %rd9035, %rd9036;
	ld.local.u8 	%rd9037, [%rd12078+56];
	shl.b64 	%rd9038, %rd9037, 56;
	ld.local.u8 	%rd9039, [%rd12078+57];
	shl.b64 	%rd9040, %rd9039, 48;
	or.b64  	%rd9041, %rd9040, %rd9038;
	ld.local.u8 	%rd9042, [%rd12078+58];
	shl.b64 	%rd9043, %rd9042, 40;
	or.b64  	%rd9044, %rd9041, %rd9043;
	ld.local.u8 	%rd9045, [%rd12078+59];
	shl.b64 	%rd9046, %rd9045, 32;
	or.b64  	%rd9047, %rd9044, %rd9046;
	ld.local.u8 	%r6206, [%rd12078+60];
	mul.wide.u32 	%rd9048, %r6206, 16777216;
	or.b64  	%rd9049, %rd9047, %rd9048;
	ld.local.u8 	%r6207, [%rd12078+61];
	mul.wide.u32 	%rd9050, %r6207, 65536;
	or.b64  	%rd9051, %rd9049, %rd9050;
	ld.local.u8 	%r6208, [%rd12078+62];
	mul.wide.u32 	%rd9052, %r6208, 256;
	or.b64  	%rd9053, %rd9051, %rd9052;
	ld.local.u8 	%rd9054, [%rd12078+63];
	or.b64  	%rd12070, %rd9053, %rd9054;
	ld.local.u8 	%rd9055, [%rd12078+64];
	shl.b64 	%rd9056, %rd9055, 56;
	ld.local.u8 	%rd9057, [%rd12078+65];
	shl.b64 	%rd9058, %rd9057, 48;
	or.b64  	%rd9059, %rd9058, %rd9056;
	ld.local.u8 	%rd9060, [%rd12078+66];
	shl.b64 	%rd9061, %rd9060, 40;
	or.b64  	%rd9062, %rd9059, %rd9061;
	ld.local.u8 	%rd9063, [%rd12078+67];
	shl.b64 	%rd9064, %rd9063, 32;
	or.b64  	%rd9065, %rd9062, %rd9064;
	ld.local.u8 	%r6209, [%rd12078+68];
	mul.wide.u32 	%rd9066, %r6209, 16777216;
	or.b64  	%rd9067, %rd9065, %rd9066;
	ld.local.u8 	%r6210, [%rd12078+69];
	mul.wide.u32 	%rd9068, %r6210, 65536;
	or.b64  	%rd9069, %rd9067, %rd9068;
	ld.local.u8 	%r6211, [%rd12078+70];
	mul.wide.u32 	%rd9070, %r6211, 256;
	or.b64  	%rd9071, %rd9069, %rd9070;
	ld.local.u8 	%rd9072, [%rd12078+71];
	or.b64  	%rd12069, %rd9071, %rd9072;
	ld.local.u8 	%rd9073, [%rd12078+72];
	shl.b64 	%rd9074, %rd9073, 56;
	ld.local.u8 	%rd9075, [%rd12078+73];
	shl.b64 	%rd9076, %rd9075, 48;
	or.b64  	%rd9077, %rd9076, %rd9074;
	ld.local.u8 	%rd9078, [%rd12078+74];
	shl.b64 	%rd9079, %rd9078, 40;
	or.b64  	%rd9080, %rd9077, %rd9079;
	ld.local.u8 	%rd9081, [%rd12078+75];
	shl.b64 	%rd9082, %rd9081, 32;
	or.b64  	%rd9083, %rd9080, %rd9082;
	ld.local.u8 	%r6212, [%rd12078+76];
	mul.wide.u32 	%rd9084, %r6212, 16777216;
	or.b64  	%rd9085, %rd9083, %rd9084;
	ld.local.u8 	%r6213, [%rd12078+77];
	mul.wide.u32 	%rd9086, %r6213, 65536;
	or.b64  	%rd9087, %rd9085, %rd9086;
	ld.local.u8 	%r6214, [%rd12078+78];
	mul.wide.u32 	%rd9088, %r6214, 256;
	or.b64  	%rd9089, %rd9087, %rd9088;
	ld.local.u8 	%rd9090, [%rd12078+79];
	or.b64  	%rd12068, %rd9089, %rd9090;
	ld.local.u8 	%rd9091, [%rd12078+80];
	shl.b64 	%rd9092, %rd9091, 56;
	ld.local.u8 	%rd9093, [%rd12078+81];
	shl.b64 	%rd9094, %rd9093, 48;
	or.b64  	%rd9095, %rd9094, %rd9092;
	ld.local.u8 	%rd9096, [%rd12078+82];
	shl.b64 	%rd9097, %rd9096, 40;
	or.b64  	%rd9098, %rd9095, %rd9097;
	ld.local.u8 	%rd9099, [%rd12078+83];
	shl.b64 	%rd9100, %rd9099, 32;
	or.b64  	%rd9101, %rd9098, %rd9100;
	ld.local.u8 	%r6215, [%rd12078+84];
	mul.wide.u32 	%rd9102, %r6215, 16777216;
	or.b64  	%rd9103, %rd9101, %rd9102;
	ld.local.u8 	%r6216, [%rd12078+85];
	mul.wide.u32 	%rd9104, %r6216, 65536;
	or.b64  	%rd9105, %rd9103, %rd9104;
	ld.local.u8 	%r6217, [%rd12078+86];
	mul.wide.u32 	%rd9106, %r6217, 256;
	or.b64  	%rd9107, %rd9105, %rd9106;
	ld.local.u8 	%rd9108, [%rd12078+87];
	or.b64  	%rd12067, %rd9107, %rd9108;
	ld.local.u8 	%rd9109, [%rd12078+88];
	shl.b64 	%rd9110, %rd9109, 56;
	ld.local.u8 	%rd9111, [%rd12078+89];
	shl.b64 	%rd9112, %rd9111, 48;
	or.b64  	%rd9113, %rd9112, %rd9110;
	ld.local.u8 	%rd9114, [%rd12078+90];
	shl.b64 	%rd9115, %rd9114, 40;
	or.b64  	%rd9116, %rd9113, %rd9115;
	ld.local.u8 	%rd9117, [%rd12078+91];
	shl.b64 	%rd9118, %rd9117, 32;
	or.b64  	%rd9119, %rd9116, %rd9118;
	ld.local.u8 	%r6218, [%rd12078+92];
	mul.wide.u32 	%rd9120, %r6218, 16777216;
	or.b64  	%rd9121, %rd9119, %rd9120;
	ld.local.u8 	%r6219, [%rd12078+93];
	mul.wide.u32 	%rd9122, %r6219, 65536;
	or.b64  	%rd9123, %rd9121, %rd9122;
	ld.local.u8 	%r6220, [%rd12078+94];
	mul.wide.u32 	%rd9124, %r6220, 256;
	or.b64  	%rd9125, %rd9123, %rd9124;
	ld.local.u8 	%rd9126, [%rd12078+95];
	or.b64  	%rd12066, %rd9125, %rd9126;
	ld.local.u8 	%rd9127, [%rd12078+96];
	shl.b64 	%rd9128, %rd9127, 56;
	ld.local.u8 	%rd9129, [%rd12078+97];
	shl.b64 	%rd9130, %rd9129, 48;
	or.b64  	%rd9131, %rd9130, %rd9128;
	ld.local.u8 	%rd9132, [%rd12078+98];
	shl.b64 	%rd9133, %rd9132, 40;
	or.b64  	%rd9134, %rd9131, %rd9133;
	ld.local.u8 	%rd9135, [%rd12078+99];
	shl.b64 	%rd9136, %rd9135, 32;
	or.b64  	%rd9137, %rd9134, %rd9136;
	ld.local.u8 	%r6221, [%rd12078+100];
	mul.wide.u32 	%rd9138, %r6221, 16777216;
	or.b64  	%rd9139, %rd9137, %rd9138;
	ld.local.u8 	%r6222, [%rd12078+101];
	mul.wide.u32 	%rd9140, %r6222, 65536;
	or.b64  	%rd9141, %rd9139, %rd9140;
	ld.local.u8 	%r6223, [%rd12078+102];
	mul.wide.u32 	%rd9142, %r6223, 256;
	or.b64  	%rd9143, %rd9141, %rd9142;
	ld.local.u8 	%rd9144, [%rd12078+103];
	or.b64  	%rd12065, %rd9143, %rd9144;
	ld.local.u8 	%rd9145, [%rd12078+104];
	shl.b64 	%rd9146, %rd9145, 56;
	ld.local.u8 	%rd9147, [%rd12078+105];
	shl.b64 	%rd9148, %rd9147, 48;
	or.b64  	%rd9149, %rd9148, %rd9146;
	ld.local.u8 	%rd9150, [%rd12078+106];
	shl.b64 	%rd9151, %rd9150, 40;
	or.b64  	%rd9152, %rd9149, %rd9151;
	ld.local.u8 	%rd9153, [%rd12078+107];
	shl.b64 	%rd9154, %rd9153, 32;
	or.b64  	%rd9155, %rd9152, %rd9154;
	ld.local.u8 	%r6224, [%rd12078+108];
	mul.wide.u32 	%rd9156, %r6224, 16777216;
	or.b64  	%rd9157, %rd9155, %rd9156;
	ld.local.u8 	%r6225, [%rd12078+109];
	mul.wide.u32 	%rd9158, %r6225, 65536;
	or.b64  	%rd9159, %rd9157, %rd9158;
	ld.local.u8 	%r6226, [%rd12078+110];
	mul.wide.u32 	%rd9160, %r6226, 256;
	or.b64  	%rd9161, %rd9159, %rd9160;
	ld.local.u8 	%rd9162, [%rd12078+111];
	or.b64  	%rd12064, %rd9161, %rd9162;
	ld.local.u8 	%rd9163, [%rd12078+112];
	shl.b64 	%rd9164, %rd9163, 56;
	ld.local.u8 	%rd9165, [%rd12078+113];
	shl.b64 	%rd9166, %rd9165, 48;
	or.b64  	%rd9167, %rd9166, %rd9164;
	ld.local.u8 	%rd9168, [%rd12078+114];
	shl.b64 	%rd9169, %rd9168, 40;
	or.b64  	%rd9170, %rd9167, %rd9169;
	ld.local.u8 	%rd9171, [%rd12078+115];
	shl.b64 	%rd9172, %rd9171, 32;
	or.b64  	%rd9173, %rd9170, %rd9172;
	ld.local.u8 	%r6227, [%rd12078+116];
	mul.wide.u32 	%rd9174, %r6227, 16777216;
	or.b64  	%rd9175, %rd9173, %rd9174;
	ld.local.u8 	%r6228, [%rd12078+117];
	mul.wide.u32 	%rd9176, %r6228, 65536;
	or.b64  	%rd9177, %rd9175, %rd9176;
	ld.local.u8 	%r6229, [%rd12078+118];
	mul.wide.u32 	%rd9178, %r6229, 256;
	or.b64  	%rd9179, %rd9177, %rd9178;
	ld.local.u8 	%rd9180, [%rd12078+119];
	or.b64  	%rd12063, %rd9179, %rd9180;
	ld.local.u8 	%rd9181, [%rd12078+120];
	ld.local.u8 	%rd9182, [%rd12078+121];
	ld.local.u8 	%rd9183, [%rd12078+122];
	ld.local.u8 	%rd9184, [%rd12078+123];
	ld.local.u8 	%r6230, [%rd12078+124];
	mul.wide.u32 	%rd9185, %r6230, 16777216;
	ld.local.u8 	%r6231, [%rd12078+125];
	mul.wide.u32 	%rd9186, %r6231, 65536;
	ld.local.u8 	%r6232, [%rd12078+126];
	mul.wide.u32 	%rd9187, %r6232, 256;
	ld.local.u8 	%rd9188, [%rd12078+127];
	shl.b64 	%rd9189, %rd9182, 48;
	shl.b64 	%rd9190, %rd9181, 56;
	shl.b64 	%rd9191, %rd9183, 40;
	or.b64  	%rd9192, %rd9189, %rd9190;
	shl.b64 	%rd9193, %rd9184, 32;
	or.b64  	%rd9194, %rd9192, %rd9191;
	or.b64  	%rd9195, %rd9194, %rd9193;
	or.b64  	%rd9196, %rd9195, %rd9185;
	or.b64  	%rd9197, %rd9196, %rd9186;
	or.b64  	%rd9198, %rd9197, %rd9187;
	or.b64  	%rd12062, %rd9198, %rd9188;
	bra.uni 	$L__BB0_46;

$L__BB0_45:
	ld.local.u64 	%rd9199, [%rd12078];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6233, %temp}, %rd9199;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6234}, %rd9199;
	}
	mov.u32 	%r6235, 291;
	mov.u32 	%r6236, 0;
	prmt.b32 	%r6237, %r6233, %r6236, %r6235;
	prmt.b32 	%r6238, %r6234, %r6236, %r6235;
	mov.b64 	%rd12077, {%r6238, %r6237};
	ld.local.u64 	%rd9200, [%rd12078+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6239, %temp}, %rd9200;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6240}, %rd9200;
	}
	prmt.b32 	%r6241, %r6239, %r6236, %r6235;
	prmt.b32 	%r6242, %r6240, %r6236, %r6235;
	mov.b64 	%rd12076, {%r6242, %r6241};
	ld.local.u64 	%rd9201, [%rd12078+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6243, %temp}, %rd9201;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6244}, %rd9201;
	}
	prmt.b32 	%r6245, %r6243, %r6236, %r6235;
	prmt.b32 	%r6246, %r6244, %r6236, %r6235;
	mov.b64 	%rd12075, {%r6246, %r6245};
	ld.local.u64 	%rd9202, [%rd12078+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6247, %temp}, %rd9202;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6248}, %rd9202;
	}
	prmt.b32 	%r6249, %r6247, %r6236, %r6235;
	prmt.b32 	%r6250, %r6248, %r6236, %r6235;
	mov.b64 	%rd12074, {%r6250, %r6249};
	ld.local.u64 	%rd9203, [%rd12078+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6251, %temp}, %rd9203;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6252}, %rd9203;
	}
	prmt.b32 	%r6253, %r6251, %r6236, %r6235;
	prmt.b32 	%r6254, %r6252, %r6236, %r6235;
	mov.b64 	%rd12073, {%r6254, %r6253};
	ld.local.u64 	%rd9204, [%rd12078+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6255, %temp}, %rd9204;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6256}, %rd9204;
	}
	prmt.b32 	%r6257, %r6255, %r6236, %r6235;
	prmt.b32 	%r6258, %r6256, %r6236, %r6235;
	mov.b64 	%rd12072, {%r6258, %r6257};
	ld.local.u64 	%rd9205, [%rd12078+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6259, %temp}, %rd9205;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6260}, %rd9205;
	}
	prmt.b32 	%r6261, %r6259, %r6236, %r6235;
	prmt.b32 	%r6262, %r6260, %r6236, %r6235;
	mov.b64 	%rd12071, {%r6262, %r6261};
	ld.local.u64 	%rd9206, [%rd12078+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6263, %temp}, %rd9206;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6264}, %rd9206;
	}
	prmt.b32 	%r6265, %r6263, %r6236, %r6235;
	prmt.b32 	%r6266, %r6264, %r6236, %r6235;
	mov.b64 	%rd12070, {%r6266, %r6265};
	ld.local.u64 	%rd9207, [%rd12078+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6267, %temp}, %rd9207;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6268}, %rd9207;
	}
	prmt.b32 	%r6269, %r6267, %r6236, %r6235;
	prmt.b32 	%r6270, %r6268, %r6236, %r6235;
	mov.b64 	%rd12069, {%r6270, %r6269};
	ld.local.u64 	%rd9208, [%rd12078+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6271, %temp}, %rd9208;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6272}, %rd9208;
	}
	prmt.b32 	%r6273, %r6271, %r6236, %r6235;
	prmt.b32 	%r6274, %r6272, %r6236, %r6235;
	mov.b64 	%rd12068, {%r6274, %r6273};
	ld.local.u64 	%rd9209, [%rd12078+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6275, %temp}, %rd9209;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6276}, %rd9209;
	}
	prmt.b32 	%r6277, %r6275, %r6236, %r6235;
	prmt.b32 	%r6278, %r6276, %r6236, %r6235;
	mov.b64 	%rd12067, {%r6278, %r6277};
	ld.local.u64 	%rd9210, [%rd12078+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6279, %temp}, %rd9210;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6280}, %rd9210;
	}
	prmt.b32 	%r6281, %r6279, %r6236, %r6235;
	prmt.b32 	%r6282, %r6280, %r6236, %r6235;
	mov.b64 	%rd12066, {%r6282, %r6281};
	ld.local.u64 	%rd9211, [%rd12078+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6283, %temp}, %rd9211;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6284}, %rd9211;
	}
	prmt.b32 	%r6285, %r6283, %r6236, %r6235;
	prmt.b32 	%r6286, %r6284, %r6236, %r6235;
	mov.b64 	%rd12065, {%r6286, %r6285};
	ld.local.u64 	%rd9212, [%rd12078+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6287, %temp}, %rd9212;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6288}, %rd9212;
	}
	prmt.b32 	%r6289, %r6287, %r6236, %r6235;
	prmt.b32 	%r6290, %r6288, %r6236, %r6235;
	mov.b64 	%rd12064, {%r6290, %r6289};
	ld.local.u64 	%rd9213, [%rd12078+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6291, %temp}, %rd9213;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6292}, %rd9213;
	}
	prmt.b32 	%r6293, %r6291, %r6236, %r6235;
	prmt.b32 	%r6294, %r6292, %r6236, %r6235;
	mov.b64 	%rd12063, {%r6294, %r6293};
	ld.local.u64 	%rd9214, [%rd12078+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6295, %temp}, %rd9214;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6296}, %rd9214;
	}
	prmt.b32 	%r6297, %r6295, %r6236, %r6235;
	prmt.b32 	%r6298, %r6296, %r6236, %r6235;
	mov.b64 	%rd12062, {%r6298, %r6297};

$L__BB0_46:
	ld.local.u64 	%rd9215, [%rd3+64];
	add.s64 	%rd9216, %rd12077, %rd9215;
	ld.local.u64 	%rd9217, [%rd3+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6299,%dummy}, %rd9217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6300}, %rd9217;
	}
	shf.r.wrap.b32 	%r6301, %r6300, %r6299, 14;
	shf.r.wrap.b32 	%r6302, %r6299, %r6300, 14;
	mov.b64 	%rd9218, {%r6302, %r6301};
	shf.r.wrap.b32 	%r6303, %r6300, %r6299, 18;
	shf.r.wrap.b32 	%r6304, %r6299, %r6300, 18;
	mov.b64 	%rd9219, {%r6304, %r6303};
	xor.b64  	%rd9220, %rd9218, %rd9219;
	shf.l.wrap.b32 	%r6305, %r6299, %r6300, 23;
	shf.l.wrap.b32 	%r6306, %r6300, %r6299, 23;
	mov.b64 	%rd9221, {%r6306, %r6305};
	xor.b64  	%rd9222, %rd9220, %rd9221;
	add.s64 	%rd9223, %rd9216, %rd9222;
	ld.local.u64 	%rd9224, [%rd3+56];
	ld.local.u64 	%rd9225, [%rd3+48];
	xor.b64  	%rd9226, %rd9224, %rd9225;
	and.b64  	%rd9227, %rd9226, %rd9217;
	xor.b64  	%rd9228, %rd9227, %rd9224;
	add.s64 	%rd9229, %rd9223, %rd9228;
	add.s64 	%rd9230, %rd9229, 4794697086780616226;
	ld.local.u64 	%rd9231, [%rd3+32];
	add.s64 	%rd9232, %rd9230, %rd9231;
	ld.local.u64 	%rd9233, [%rd3+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6307,%dummy}, %rd9233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6308}, %rd9233;
	}
	shf.r.wrap.b32 	%r6309, %r6308, %r6307, 28;
	shf.r.wrap.b32 	%r6310, %r6307, %r6308, 28;
	mov.b64 	%rd9234, {%r6310, %r6309};
	shf.l.wrap.b32 	%r6311, %r6307, %r6308, 30;
	shf.l.wrap.b32 	%r6312, %r6308, %r6307, 30;
	mov.b64 	%rd9235, {%r6312, %r6311};
	xor.b64  	%rd9236, %rd9234, %rd9235;
	shf.l.wrap.b32 	%r6313, %r6307, %r6308, 25;
	shf.l.wrap.b32 	%r6314, %r6308, %r6307, 25;
	mov.b64 	%rd9237, {%r6314, %r6313};
	xor.b64  	%rd9238, %rd9236, %rd9237;
	ld.local.u64 	%rd9239, [%rd3+16];
	and.b64  	%rd9240, %rd9239, %rd9233;
	or.b64  	%rd9241, %rd9239, %rd9233;
	ld.local.u64 	%rd9242, [%rd3+24];
	and.b64  	%rd9243, %rd9242, %rd9241;
	or.b64  	%rd9244, %rd9243, %rd9240;
	add.s64 	%rd9245, %rd9244, %rd9238;
	add.s64 	%rd9246, %rd9245, %rd9230;
	add.s64 	%rd9247, %rd12076, %rd9224;
	xor.b64  	%rd9248, %rd9225, %rd9217;
	and.b64  	%rd9249, %rd9232, %rd9248;
	xor.b64  	%rd9250, %rd9249, %rd9225;
	add.s64 	%rd9251, %rd9247, %rd9250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6315,%dummy}, %rd9232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6316}, %rd9232;
	}
	shf.r.wrap.b32 	%r6317, %r6316, %r6315, 14;
	shf.r.wrap.b32 	%r6318, %r6315, %r6316, 14;
	mov.b64 	%rd9252, {%r6318, %r6317};
	shf.r.wrap.b32 	%r6319, %r6316, %r6315, 18;
	shf.r.wrap.b32 	%r6320, %r6315, %r6316, 18;
	mov.b64 	%rd9253, {%r6320, %r6319};
	xor.b64  	%rd9254, %rd9252, %rd9253;
	shf.l.wrap.b32 	%r6321, %r6315, %r6316, 23;
	shf.l.wrap.b32 	%r6322, %r6316, %r6315, 23;
	mov.b64 	%rd9255, {%r6322, %r6321};
	xor.b64  	%rd9256, %rd9254, %rd9255;
	add.s64 	%rd9257, %rd9251, %rd9256;
	add.s64 	%rd9258, %rd9257, 8158064640168781261;
	add.s64 	%rd9259, %rd9258, %rd9242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6323,%dummy}, %rd9246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6324}, %rd9246;
	}
	shf.r.wrap.b32 	%r6325, %r6324, %r6323, 28;
	shf.r.wrap.b32 	%r6326, %r6323, %r6324, 28;
	mov.b64 	%rd9260, {%r6326, %r6325};
	shf.l.wrap.b32 	%r6327, %r6323, %r6324, 30;
	shf.l.wrap.b32 	%r6328, %r6324, %r6323, 30;
	mov.b64 	%rd9261, {%r6328, %r6327};
	xor.b64  	%rd9262, %rd9260, %rd9261;
	shf.l.wrap.b32 	%r6329, %r6323, %r6324, 25;
	shf.l.wrap.b32 	%r6330, %r6324, %r6323, 25;
	mov.b64 	%rd9263, {%r6330, %r6329};
	xor.b64  	%rd9264, %rd9262, %rd9263;
	and.b64  	%rd9265, %rd9246, %rd9233;
	or.b64  	%rd9266, %rd9246, %rd9233;
	and.b64  	%rd9267, %rd9266, %rd9239;
	or.b64  	%rd9268, %rd9267, %rd9265;
	add.s64 	%rd9269, %rd9268, %rd9264;
	add.s64 	%rd9270, %rd9269, %rd9258;
	add.s64 	%rd9271, %rd12075, %rd9225;
	xor.b64  	%rd9272, %rd9232, %rd9217;
	and.b64  	%rd9273, %rd9259, %rd9272;
	xor.b64  	%rd9274, %rd9273, %rd9217;
	add.s64 	%rd9275, %rd9271, %rd9274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6331,%dummy}, %rd9259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6332}, %rd9259;
	}
	shf.r.wrap.b32 	%r6333, %r6332, %r6331, 14;
	shf.r.wrap.b32 	%r6334, %r6331, %r6332, 14;
	mov.b64 	%rd9276, {%r6334, %r6333};
	shf.r.wrap.b32 	%r6335, %r6332, %r6331, 18;
	shf.r.wrap.b32 	%r6336, %r6331, %r6332, 18;
	mov.b64 	%rd9277, {%r6336, %r6335};
	xor.b64  	%rd9278, %rd9276, %rd9277;
	shf.l.wrap.b32 	%r6337, %r6331, %r6332, 23;
	shf.l.wrap.b32 	%r6338, %r6332, %r6331, 23;
	mov.b64 	%rd9279, {%r6338, %r6337};
	xor.b64  	%rd9280, %rd9278, %rd9279;
	add.s64 	%rd9281, %rd9275, %rd9280;
	add.s64 	%rd9282, %rd9281, -5349999486874862801;
	add.s64 	%rd9283, %rd9282, %rd9239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6339,%dummy}, %rd9270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6340}, %rd9270;
	}
	shf.r.wrap.b32 	%r6341, %r6340, %r6339, 28;
	shf.r.wrap.b32 	%r6342, %r6339, %r6340, 28;
	mov.b64 	%rd9284, {%r6342, %r6341};
	shf.l.wrap.b32 	%r6343, %r6339, %r6340, 30;
	shf.l.wrap.b32 	%r6344, %r6340, %r6339, 30;
	mov.b64 	%rd9285, {%r6344, %r6343};
	xor.b64  	%rd9286, %rd9284, %rd9285;
	shf.l.wrap.b32 	%r6345, %r6339, %r6340, 25;
	shf.l.wrap.b32 	%r6346, %r6340, %r6339, 25;
	mov.b64 	%rd9287, {%r6346, %r6345};
	xor.b64  	%rd9288, %rd9286, %rd9287;
	and.b64  	%rd9289, %rd9270, %rd9246;
	or.b64  	%rd9290, %rd9270, %rd9246;
	and.b64  	%rd9291, %rd9290, %rd9233;
	or.b64  	%rd9292, %rd9291, %rd9289;
	add.s64 	%rd9293, %rd9292, %rd9288;
	add.s64 	%rd9294, %rd9293, %rd9282;
	add.s64 	%rd9295, %rd12074, %rd9217;
	xor.b64  	%rd9296, %rd9259, %rd9232;
	and.b64  	%rd9297, %rd9283, %rd9296;
	xor.b64  	%rd9298, %rd9297, %rd9232;
	add.s64 	%rd9299, %rd9295, %rd9298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6347,%dummy}, %rd9283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6348}, %rd9283;
	}
	shf.r.wrap.b32 	%r6349, %r6348, %r6347, 14;
	shf.r.wrap.b32 	%r6350, %r6347, %r6348, 14;
	mov.b64 	%rd9300, {%r6350, %r6349};
	shf.r.wrap.b32 	%r6351, %r6348, %r6347, 18;
	shf.r.wrap.b32 	%r6352, %r6347, %r6348, 18;
	mov.b64 	%rd9301, {%r6352, %r6351};
	xor.b64  	%rd9302, %rd9300, %rd9301;
	shf.l.wrap.b32 	%r6353, %r6347, %r6348, 23;
	shf.l.wrap.b32 	%r6354, %r6348, %r6347, 23;
	mov.b64 	%rd9303, {%r6354, %r6353};
	xor.b64  	%rd9304, %rd9302, %rd9303;
	add.s64 	%rd9305, %rd9299, %rd9304;
	add.s64 	%rd9306, %rd9305, -1606136188198331460;
	add.s64 	%rd9307, %rd9306, %rd9233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6355,%dummy}, %rd9294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6356}, %rd9294;
	}
	shf.r.wrap.b32 	%r6357, %r6356, %r6355, 28;
	shf.r.wrap.b32 	%r6358, %r6355, %r6356, 28;
	mov.b64 	%rd9308, {%r6358, %r6357};
	shf.l.wrap.b32 	%r6359, %r6355, %r6356, 30;
	shf.l.wrap.b32 	%r6360, %r6356, %r6355, 30;
	mov.b64 	%rd9309, {%r6360, %r6359};
	xor.b64  	%rd9310, %rd9308, %rd9309;
	shf.l.wrap.b32 	%r6361, %r6355, %r6356, 25;
	shf.l.wrap.b32 	%r6362, %r6356, %r6355, 25;
	mov.b64 	%rd9311, {%r6362, %r6361};
	xor.b64  	%rd9312, %rd9310, %rd9311;
	and.b64  	%rd9313, %rd9294, %rd9270;
	or.b64  	%rd9314, %rd9294, %rd9270;
	and.b64  	%rd9315, %rd9314, %rd9246;
	or.b64  	%rd9316, %rd9315, %rd9313;
	add.s64 	%rd9317, %rd9316, %rd9312;
	add.s64 	%rd9318, %rd9317, %rd9306;
	add.s64 	%rd9319, %rd12073, %rd9232;
	xor.b64  	%rd9320, %rd9283, %rd9259;
	and.b64  	%rd9321, %rd9307, %rd9320;
	xor.b64  	%rd9322, %rd9321, %rd9259;
	add.s64 	%rd9323, %rd9319, %rd9322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6363,%dummy}, %rd9307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6364}, %rd9307;
	}
	shf.r.wrap.b32 	%r6365, %r6364, %r6363, 14;
	shf.r.wrap.b32 	%r6366, %r6363, %r6364, 14;
	mov.b64 	%rd9324, {%r6366, %r6365};
	shf.r.wrap.b32 	%r6367, %r6364, %r6363, 18;
	shf.r.wrap.b32 	%r6368, %r6363, %r6364, 18;
	mov.b64 	%rd9325, {%r6368, %r6367};
	xor.b64  	%rd9326, %rd9324, %rd9325;
	shf.l.wrap.b32 	%r6369, %r6363, %r6364, 23;
	shf.l.wrap.b32 	%r6370, %r6364, %r6363, 23;
	mov.b64 	%rd9327, {%r6370, %r6369};
	xor.b64  	%rd9328, %rd9326, %rd9327;
	add.s64 	%rd9329, %rd9323, %rd9328;
	add.s64 	%rd9330, %rd9329, 4131703408338449720;
	add.s64 	%rd9331, %rd9330, %rd9246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6371,%dummy}, %rd9318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6372}, %rd9318;
	}
	shf.r.wrap.b32 	%r6373, %r6372, %r6371, 28;
	shf.r.wrap.b32 	%r6374, %r6371, %r6372, 28;
	mov.b64 	%rd9332, {%r6374, %r6373};
	shf.l.wrap.b32 	%r6375, %r6371, %r6372, 30;
	shf.l.wrap.b32 	%r6376, %r6372, %r6371, 30;
	mov.b64 	%rd9333, {%r6376, %r6375};
	xor.b64  	%rd9334, %rd9332, %rd9333;
	shf.l.wrap.b32 	%r6377, %r6371, %r6372, 25;
	shf.l.wrap.b32 	%r6378, %r6372, %r6371, 25;
	mov.b64 	%rd9335, {%r6378, %r6377};
	xor.b64  	%rd9336, %rd9334, %rd9335;
	and.b64  	%rd9337, %rd9318, %rd9294;
	or.b64  	%rd9338, %rd9318, %rd9294;
	and.b64  	%rd9339, %rd9338, %rd9270;
	or.b64  	%rd9340, %rd9339, %rd9337;
	add.s64 	%rd9341, %rd9340, %rd9336;
	add.s64 	%rd9342, %rd9341, %rd9330;
	add.s64 	%rd9343, %rd12072, %rd9259;
	xor.b64  	%rd9344, %rd9307, %rd9283;
	and.b64  	%rd9345, %rd9331, %rd9344;
	xor.b64  	%rd9346, %rd9345, %rd9283;
	add.s64 	%rd9347, %rd9343, %rd9346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6379,%dummy}, %rd9331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6380}, %rd9331;
	}
	shf.r.wrap.b32 	%r6381, %r6380, %r6379, 14;
	shf.r.wrap.b32 	%r6382, %r6379, %r6380, 14;
	mov.b64 	%rd9348, {%r6382, %r6381};
	shf.r.wrap.b32 	%r6383, %r6380, %r6379, 18;
	shf.r.wrap.b32 	%r6384, %r6379, %r6380, 18;
	mov.b64 	%rd9349, {%r6384, %r6383};
	xor.b64  	%rd9350, %rd9348, %rd9349;
	shf.l.wrap.b32 	%r6385, %r6379, %r6380, 23;
	shf.l.wrap.b32 	%r6386, %r6380, %r6379, 23;
	mov.b64 	%rd9351, {%r6386, %r6385};
	xor.b64  	%rd9352, %rd9350, %rd9351;
	add.s64 	%rd9353, %rd9347, %rd9352;
	add.s64 	%rd9354, %rd9353, 6480981068601479193;
	add.s64 	%rd9355, %rd9354, %rd9270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6387,%dummy}, %rd9342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6388}, %rd9342;
	}
	shf.r.wrap.b32 	%r6389, %r6388, %r6387, 28;
	shf.r.wrap.b32 	%r6390, %r6387, %r6388, 28;
	mov.b64 	%rd9356, {%r6390, %r6389};
	shf.l.wrap.b32 	%r6391, %r6387, %r6388, 30;
	shf.l.wrap.b32 	%r6392, %r6388, %r6387, 30;
	mov.b64 	%rd9357, {%r6392, %r6391};
	xor.b64  	%rd9358, %rd9356, %rd9357;
	shf.l.wrap.b32 	%r6393, %r6387, %r6388, 25;
	shf.l.wrap.b32 	%r6394, %r6388, %r6387, 25;
	mov.b64 	%rd9359, {%r6394, %r6393};
	xor.b64  	%rd9360, %rd9358, %rd9359;
	and.b64  	%rd9361, %rd9342, %rd9318;
	or.b64  	%rd9362, %rd9342, %rd9318;
	and.b64  	%rd9363, %rd9362, %rd9294;
	or.b64  	%rd9364, %rd9363, %rd9361;
	add.s64 	%rd9365, %rd9364, %rd9360;
	add.s64 	%rd9366, %rd9365, %rd9354;
	add.s64 	%rd9367, %rd12071, %rd9283;
	xor.b64  	%rd9368, %rd9331, %rd9307;
	and.b64  	%rd9369, %rd9355, %rd9368;
	xor.b64  	%rd9370, %rd9369, %rd9307;
	add.s64 	%rd9371, %rd9367, %rd9370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6395,%dummy}, %rd9355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6396}, %rd9355;
	}
	shf.r.wrap.b32 	%r6397, %r6396, %r6395, 14;
	shf.r.wrap.b32 	%r6398, %r6395, %r6396, 14;
	mov.b64 	%rd9372, {%r6398, %r6397};
	shf.r.wrap.b32 	%r6399, %r6396, %r6395, 18;
	shf.r.wrap.b32 	%r6400, %r6395, %r6396, 18;
	mov.b64 	%rd9373, {%r6400, %r6399};
	xor.b64  	%rd9374, %rd9372, %rd9373;
	shf.l.wrap.b32 	%r6401, %r6395, %r6396, 23;
	shf.l.wrap.b32 	%r6402, %r6396, %r6395, 23;
	mov.b64 	%rd9375, {%r6402, %r6401};
	xor.b64  	%rd9376, %rd9374, %rd9375;
	add.s64 	%rd9377, %rd9371, %rd9376;
	add.s64 	%rd9378, %rd9377, -7908458776815382629;
	add.s64 	%rd9379, %rd9378, %rd9294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6403,%dummy}, %rd9366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6404}, %rd9366;
	}
	shf.r.wrap.b32 	%r6405, %r6404, %r6403, 28;
	shf.r.wrap.b32 	%r6406, %r6403, %r6404, 28;
	mov.b64 	%rd9380, {%r6406, %r6405};
	shf.l.wrap.b32 	%r6407, %r6403, %r6404, 30;
	shf.l.wrap.b32 	%r6408, %r6404, %r6403, 30;
	mov.b64 	%rd9381, {%r6408, %r6407};
	xor.b64  	%rd9382, %rd9380, %rd9381;
	shf.l.wrap.b32 	%r6409, %r6403, %r6404, 25;
	shf.l.wrap.b32 	%r6410, %r6404, %r6403, 25;
	mov.b64 	%rd9383, {%r6410, %r6409};
	xor.b64  	%rd9384, %rd9382, %rd9383;
	and.b64  	%rd9385, %rd9366, %rd9342;
	or.b64  	%rd9386, %rd9366, %rd9342;
	and.b64  	%rd9387, %rd9386, %rd9318;
	or.b64  	%rd9388, %rd9387, %rd9385;
	add.s64 	%rd9389, %rd9388, %rd9384;
	add.s64 	%rd9390, %rd9389, %rd9378;
	add.s64 	%rd9391, %rd12070, %rd9307;
	xor.b64  	%rd9392, %rd9355, %rd9331;
	and.b64  	%rd9393, %rd9379, %rd9392;
	xor.b64  	%rd9394, %rd9393, %rd9331;
	add.s64 	%rd9395, %rd9391, %rd9394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6411,%dummy}, %rd9379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6412}, %rd9379;
	}
	shf.r.wrap.b32 	%r6413, %r6412, %r6411, 14;
	shf.r.wrap.b32 	%r6414, %r6411, %r6412, 14;
	mov.b64 	%rd9396, {%r6414, %r6413};
	shf.r.wrap.b32 	%r6415, %r6412, %r6411, 18;
	shf.r.wrap.b32 	%r6416, %r6411, %r6412, 18;
	mov.b64 	%rd9397, {%r6416, %r6415};
	xor.b64  	%rd9398, %rd9396, %rd9397;
	shf.l.wrap.b32 	%r6417, %r6411, %r6412, 23;
	shf.l.wrap.b32 	%r6418, %r6412, %r6411, 23;
	mov.b64 	%rd9399, {%r6418, %r6417};
	xor.b64  	%rd9400, %rd9398, %rd9399;
	add.s64 	%rd9401, %rd9395, %rd9400;
	add.s64 	%rd9402, %rd9401, -6116909921290321640;
	add.s64 	%rd9403, %rd9402, %rd9318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6419,%dummy}, %rd9390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6420}, %rd9390;
	}
	shf.r.wrap.b32 	%r6421, %r6420, %r6419, 28;
	shf.r.wrap.b32 	%r6422, %r6419, %r6420, 28;
	mov.b64 	%rd9404, {%r6422, %r6421};
	shf.l.wrap.b32 	%r6423, %r6419, %r6420, 30;
	shf.l.wrap.b32 	%r6424, %r6420, %r6419, 30;
	mov.b64 	%rd9405, {%r6424, %r6423};
	xor.b64  	%rd9406, %rd9404, %rd9405;
	shf.l.wrap.b32 	%r6425, %r6419, %r6420, 25;
	shf.l.wrap.b32 	%r6426, %r6420, %r6419, 25;
	mov.b64 	%rd9407, {%r6426, %r6425};
	xor.b64  	%rd9408, %rd9406, %rd9407;
	and.b64  	%rd9409, %rd9390, %rd9366;
	or.b64  	%rd9410, %rd9390, %rd9366;
	and.b64  	%rd9411, %rd9410, %rd9342;
	or.b64  	%rd9412, %rd9411, %rd9409;
	add.s64 	%rd9413, %rd9412, %rd9408;
	add.s64 	%rd9414, %rd9413, %rd9402;
	add.s64 	%rd9415, %rd12069, %rd9331;
	xor.b64  	%rd9416, %rd9379, %rd9355;
	and.b64  	%rd9417, %rd9403, %rd9416;
	xor.b64  	%rd9418, %rd9417, %rd9355;
	add.s64 	%rd9419, %rd9415, %rd9418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6427,%dummy}, %rd9403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6428}, %rd9403;
	}
	shf.r.wrap.b32 	%r6429, %r6428, %r6427, 14;
	shf.r.wrap.b32 	%r6430, %r6427, %r6428, 14;
	mov.b64 	%rd9420, {%r6430, %r6429};
	shf.r.wrap.b32 	%r6431, %r6428, %r6427, 18;
	shf.r.wrap.b32 	%r6432, %r6427, %r6428, 18;
	mov.b64 	%rd9421, {%r6432, %r6431};
	xor.b64  	%rd9422, %rd9420, %rd9421;
	shf.l.wrap.b32 	%r6433, %r6427, %r6428, 23;
	shf.l.wrap.b32 	%r6434, %r6428, %r6427, 23;
	mov.b64 	%rd9423, {%r6434, %r6433};
	xor.b64  	%rd9424, %rd9422, %rd9423;
	add.s64 	%rd9425, %rd9419, %rd9424;
	add.s64 	%rd9426, %rd9425, -2880145864133508542;
	add.s64 	%rd9427, %rd9426, %rd9342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6435,%dummy}, %rd9414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6436}, %rd9414;
	}
	shf.r.wrap.b32 	%r6437, %r6436, %r6435, 28;
	shf.r.wrap.b32 	%r6438, %r6435, %r6436, 28;
	mov.b64 	%rd9428, {%r6438, %r6437};
	shf.l.wrap.b32 	%r6439, %r6435, %r6436, 30;
	shf.l.wrap.b32 	%r6440, %r6436, %r6435, 30;
	mov.b64 	%rd9429, {%r6440, %r6439};
	xor.b64  	%rd9430, %rd9428, %rd9429;
	shf.l.wrap.b32 	%r6441, %r6435, %r6436, 25;
	shf.l.wrap.b32 	%r6442, %r6436, %r6435, 25;
	mov.b64 	%rd9431, {%r6442, %r6441};
	xor.b64  	%rd9432, %rd9430, %rd9431;
	and.b64  	%rd9433, %rd9414, %rd9390;
	or.b64  	%rd9434, %rd9414, %rd9390;
	and.b64  	%rd9435, %rd9434, %rd9366;
	or.b64  	%rd9436, %rd9435, %rd9433;
	add.s64 	%rd9437, %rd9436, %rd9432;
	add.s64 	%rd9438, %rd9437, %rd9426;
	add.s64 	%rd9439, %rd12068, %rd9355;
	xor.b64  	%rd9440, %rd9403, %rd9379;
	and.b64  	%rd9441, %rd9427, %rd9440;
	xor.b64  	%rd9442, %rd9441, %rd9379;
	add.s64 	%rd9443, %rd9439, %rd9442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6443,%dummy}, %rd9427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6444}, %rd9427;
	}
	shf.r.wrap.b32 	%r6445, %r6444, %r6443, 14;
	shf.r.wrap.b32 	%r6446, %r6443, %r6444, 14;
	mov.b64 	%rd9444, {%r6446, %r6445};
	shf.r.wrap.b32 	%r6447, %r6444, %r6443, 18;
	shf.r.wrap.b32 	%r6448, %r6443, %r6444, 18;
	mov.b64 	%rd9445, {%r6448, %r6447};
	xor.b64  	%rd9446, %rd9444, %rd9445;
	shf.l.wrap.b32 	%r6449, %r6443, %r6444, 23;
	shf.l.wrap.b32 	%r6450, %r6444, %r6443, 23;
	mov.b64 	%rd9447, {%r6450, %r6449};
	xor.b64  	%rd9448, %rd9446, %rd9447;
	add.s64 	%rd9449, %rd9443, %rd9448;
	add.s64 	%rd9450, %rd9449, 1334009975649890238;
	add.s64 	%rd9451, %rd9450, %rd9366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6451,%dummy}, %rd9438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6452}, %rd9438;
	}
	shf.r.wrap.b32 	%r6453, %r6452, %r6451, 28;
	shf.r.wrap.b32 	%r6454, %r6451, %r6452, 28;
	mov.b64 	%rd9452, {%r6454, %r6453};
	shf.l.wrap.b32 	%r6455, %r6451, %r6452, 30;
	shf.l.wrap.b32 	%r6456, %r6452, %r6451, 30;
	mov.b64 	%rd9453, {%r6456, %r6455};
	xor.b64  	%rd9454, %rd9452, %rd9453;
	shf.l.wrap.b32 	%r6457, %r6451, %r6452, 25;
	shf.l.wrap.b32 	%r6458, %r6452, %r6451, 25;
	mov.b64 	%rd9455, {%r6458, %r6457};
	xor.b64  	%rd9456, %rd9454, %rd9455;
	and.b64  	%rd9457, %rd9438, %rd9414;
	or.b64  	%rd9458, %rd9438, %rd9414;
	and.b64  	%rd9459, %rd9458, %rd9390;
	or.b64  	%rd9460, %rd9459, %rd9457;
	add.s64 	%rd9461, %rd9460, %rd9456;
	add.s64 	%rd9462, %rd9461, %rd9450;
	add.s64 	%rd9463, %rd12067, %rd9379;
	xor.b64  	%rd9464, %rd9427, %rd9403;
	and.b64  	%rd9465, %rd9451, %rd9464;
	xor.b64  	%rd9466, %rd9465, %rd9403;
	add.s64 	%rd9467, %rd9463, %rd9466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6459,%dummy}, %rd9451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6460}, %rd9451;
	}
	shf.r.wrap.b32 	%r6461, %r6460, %r6459, 14;
	shf.r.wrap.b32 	%r6462, %r6459, %r6460, 14;
	mov.b64 	%rd9468, {%r6462, %r6461};
	shf.r.wrap.b32 	%r6463, %r6460, %r6459, 18;
	shf.r.wrap.b32 	%r6464, %r6459, %r6460, 18;
	mov.b64 	%rd9469, {%r6464, %r6463};
	xor.b64  	%rd9470, %rd9468, %rd9469;
	shf.l.wrap.b32 	%r6465, %r6459, %r6460, 23;
	shf.l.wrap.b32 	%r6466, %r6460, %r6459, 23;
	mov.b64 	%rd9471, {%r6466, %r6465};
	xor.b64  	%rd9472, %rd9470, %rd9471;
	add.s64 	%rd9473, %rd9467, %rd9472;
	add.s64 	%rd9474, %rd9473, 2608012711638119052;
	add.s64 	%rd9475, %rd9474, %rd9390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd9462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd9462;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 28;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 28;
	mov.b64 	%rd9476, {%r6470, %r6469};
	shf.l.wrap.b32 	%r6471, %r6467, %r6468, 30;
	shf.l.wrap.b32 	%r6472, %r6468, %r6467, 30;
	mov.b64 	%rd9477, {%r6472, %r6471};
	xor.b64  	%rd9478, %rd9476, %rd9477;
	shf.l.wrap.b32 	%r6473, %r6467, %r6468, 25;
	shf.l.wrap.b32 	%r6474, %r6468, %r6467, 25;
	mov.b64 	%rd9479, {%r6474, %r6473};
	xor.b64  	%rd9480, %rd9478, %rd9479;
	and.b64  	%rd9481, %rd9462, %rd9438;
	or.b64  	%rd9482, %rd9462, %rd9438;
	and.b64  	%rd9483, %rd9482, %rd9414;
	or.b64  	%rd9484, %rd9483, %rd9481;
	add.s64 	%rd9485, %rd9484, %rd9480;
	add.s64 	%rd9486, %rd9485, %rd9474;
	add.s64 	%rd9487, %rd12066, %rd9403;
	xor.b64  	%rd9488, %rd9451, %rd9427;
	and.b64  	%rd9489, %rd9475, %rd9488;
	xor.b64  	%rd9490, %rd9489, %rd9427;
	add.s64 	%rd9491, %rd9487, %rd9490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6475,%dummy}, %rd9475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6476}, %rd9475;
	}
	shf.r.wrap.b32 	%r6477, %r6476, %r6475, 14;
	shf.r.wrap.b32 	%r6478, %r6475, %r6476, 14;
	mov.b64 	%rd9492, {%r6478, %r6477};
	shf.r.wrap.b32 	%r6479, %r6476, %r6475, 18;
	shf.r.wrap.b32 	%r6480, %r6475, %r6476, 18;
	mov.b64 	%rd9493, {%r6480, %r6479};
	xor.b64  	%rd9494, %rd9492, %rd9493;
	shf.l.wrap.b32 	%r6481, %r6475, %r6476, 23;
	shf.l.wrap.b32 	%r6482, %r6476, %r6475, 23;
	mov.b64 	%rd9495, {%r6482, %r6481};
	xor.b64  	%rd9496, %rd9494, %rd9495;
	add.s64 	%rd9497, %rd9491, %rd9496;
	add.s64 	%rd9498, %rd9497, 6128411473006802146;
	add.s64 	%rd9499, %rd9498, %rd9414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6483,%dummy}, %rd9486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6484}, %rd9486;
	}
	shf.r.wrap.b32 	%r6485, %r6484, %r6483, 28;
	shf.r.wrap.b32 	%r6486, %r6483, %r6484, 28;
	mov.b64 	%rd9500, {%r6486, %r6485};
	shf.l.wrap.b32 	%r6487, %r6483, %r6484, 30;
	shf.l.wrap.b32 	%r6488, %r6484, %r6483, 30;
	mov.b64 	%rd9501, {%r6488, %r6487};
	xor.b64  	%rd9502, %rd9500, %rd9501;
	shf.l.wrap.b32 	%r6489, %r6483, %r6484, 25;
	shf.l.wrap.b32 	%r6490, %r6484, %r6483, 25;
	mov.b64 	%rd9503, {%r6490, %r6489};
	xor.b64  	%rd9504, %rd9502, %rd9503;
	and.b64  	%rd9505, %rd9486, %rd9462;
	or.b64  	%rd9506, %rd9486, %rd9462;
	and.b64  	%rd9507, %rd9506, %rd9438;
	or.b64  	%rd9508, %rd9507, %rd9505;
	add.s64 	%rd9509, %rd9508, %rd9504;
	add.s64 	%rd9510, %rd9509, %rd9498;
	add.s64 	%rd9511, %rd12065, %rd9427;
	xor.b64  	%rd9512, %rd9475, %rd9451;
	and.b64  	%rd9513, %rd9499, %rd9512;
	xor.b64  	%rd9514, %rd9513, %rd9451;
	add.s64 	%rd9515, %rd9511, %rd9514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6491,%dummy}, %rd9499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6492}, %rd9499;
	}
	shf.r.wrap.b32 	%r6493, %r6492, %r6491, 14;
	shf.r.wrap.b32 	%r6494, %r6491, %r6492, 14;
	mov.b64 	%rd9516, {%r6494, %r6493};
	shf.r.wrap.b32 	%r6495, %r6492, %r6491, 18;
	shf.r.wrap.b32 	%r6496, %r6491, %r6492, 18;
	mov.b64 	%rd9517, {%r6496, %r6495};
	xor.b64  	%rd9518, %rd9516, %rd9517;
	shf.l.wrap.b32 	%r6497, %r6491, %r6492, 23;
	shf.l.wrap.b32 	%r6498, %r6492, %r6491, 23;
	mov.b64 	%rd9519, {%r6498, %r6497};
	xor.b64  	%rd9520, %rd9518, %rd9519;
	add.s64 	%rd9521, %rd9515, %rd9520;
	add.s64 	%rd9522, %rd9521, 8268148722764581231;
	add.s64 	%rd9523, %rd9522, %rd9438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6499,%dummy}, %rd9510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6500}, %rd9510;
	}
	shf.r.wrap.b32 	%r6501, %r6500, %r6499, 28;
	shf.r.wrap.b32 	%r6502, %r6499, %r6500, 28;
	mov.b64 	%rd9524, {%r6502, %r6501};
	shf.l.wrap.b32 	%r6503, %r6499, %r6500, 30;
	shf.l.wrap.b32 	%r6504, %r6500, %r6499, 30;
	mov.b64 	%rd9525, {%r6504, %r6503};
	xor.b64  	%rd9526, %rd9524, %rd9525;
	shf.l.wrap.b32 	%r6505, %r6499, %r6500, 25;
	shf.l.wrap.b32 	%r6506, %r6500, %r6499, 25;
	mov.b64 	%rd9527, {%r6506, %r6505};
	xor.b64  	%rd9528, %rd9526, %rd9527;
	and.b64  	%rd9529, %rd9510, %rd9486;
	or.b64  	%rd9530, %rd9510, %rd9486;
	and.b64  	%rd9531, %rd9530, %rd9462;
	or.b64  	%rd9532, %rd9531, %rd9529;
	add.s64 	%rd9533, %rd9532, %rd9528;
	add.s64 	%rd9534, %rd9533, %rd9522;
	add.s64 	%rd9535, %rd12064, %rd9451;
	xor.b64  	%rd9536, %rd9499, %rd9475;
	and.b64  	%rd9537, %rd9523, %rd9536;
	xor.b64  	%rd9538, %rd9537, %rd9475;
	add.s64 	%rd9539, %rd9535, %rd9538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6507,%dummy}, %rd9523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6508}, %rd9523;
	}
	shf.r.wrap.b32 	%r6509, %r6508, %r6507, 14;
	shf.r.wrap.b32 	%r6510, %r6507, %r6508, 14;
	mov.b64 	%rd9540, {%r6510, %r6509};
	shf.r.wrap.b32 	%r6511, %r6508, %r6507, 18;
	shf.r.wrap.b32 	%r6512, %r6507, %r6508, 18;
	mov.b64 	%rd9541, {%r6512, %r6511};
	xor.b64  	%rd9542, %rd9540, %rd9541;
	shf.l.wrap.b32 	%r6513, %r6507, %r6508, 23;
	shf.l.wrap.b32 	%r6514, %r6508, %r6507, 23;
	mov.b64 	%rd9543, {%r6514, %r6513};
	xor.b64  	%rd9544, %rd9542, %rd9543;
	add.s64 	%rd9545, %rd9539, %rd9544;
	add.s64 	%rd9546, %rd9545, -9160688886553864527;
	add.s64 	%rd9547, %rd9546, %rd9462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6515,%dummy}, %rd9534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6516}, %rd9534;
	}
	shf.r.wrap.b32 	%r6517, %r6516, %r6515, 28;
	shf.r.wrap.b32 	%r6518, %r6515, %r6516, 28;
	mov.b64 	%rd9548, {%r6518, %r6517};
	shf.l.wrap.b32 	%r6519, %r6515, %r6516, 30;
	shf.l.wrap.b32 	%r6520, %r6516, %r6515, 30;
	mov.b64 	%rd9549, {%r6520, %r6519};
	xor.b64  	%rd9550, %rd9548, %rd9549;
	shf.l.wrap.b32 	%r6521, %r6515, %r6516, 25;
	shf.l.wrap.b32 	%r6522, %r6516, %r6515, 25;
	mov.b64 	%rd9551, {%r6522, %r6521};
	xor.b64  	%rd9552, %rd9550, %rd9551;
	and.b64  	%rd9553, %rd9534, %rd9510;
	or.b64  	%rd9554, %rd9534, %rd9510;
	and.b64  	%rd9555, %rd9554, %rd9486;
	or.b64  	%rd9556, %rd9555, %rd9553;
	add.s64 	%rd9557, %rd9556, %rd9552;
	add.s64 	%rd9558, %rd9557, %rd9546;
	add.s64 	%rd9559, %rd12063, %rd9475;
	xor.b64  	%rd9560, %rd9523, %rd9499;
	and.b64  	%rd9561, %rd9547, %rd9560;
	xor.b64  	%rd9562, %rd9561, %rd9499;
	add.s64 	%rd9563, %rd9559, %rd9562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6523,%dummy}, %rd9547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6524}, %rd9547;
	}
	shf.r.wrap.b32 	%r6525, %r6524, %r6523, 14;
	shf.r.wrap.b32 	%r6526, %r6523, %r6524, 14;
	mov.b64 	%rd9564, {%r6526, %r6525};
	shf.r.wrap.b32 	%r6527, %r6524, %r6523, 18;
	shf.r.wrap.b32 	%r6528, %r6523, %r6524, 18;
	mov.b64 	%rd9565, {%r6528, %r6527};
	xor.b64  	%rd9566, %rd9564, %rd9565;
	shf.l.wrap.b32 	%r6529, %r6523, %r6524, 23;
	shf.l.wrap.b32 	%r6530, %r6524, %r6523, 23;
	mov.b64 	%rd9567, {%r6530, %r6529};
	xor.b64  	%rd9568, %rd9566, %rd9567;
	add.s64 	%rd9569, %rd9563, %rd9568;
	add.s64 	%rd9570, %rd9569, -7215885187991268811;
	add.s64 	%rd9571, %rd9570, %rd9486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6531,%dummy}, %rd9558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6532}, %rd9558;
	}
	shf.r.wrap.b32 	%r6533, %r6532, %r6531, 28;
	shf.r.wrap.b32 	%r6534, %r6531, %r6532, 28;
	mov.b64 	%rd9572, {%r6534, %r6533};
	shf.l.wrap.b32 	%r6535, %r6531, %r6532, 30;
	shf.l.wrap.b32 	%r6536, %r6532, %r6531, 30;
	mov.b64 	%rd9573, {%r6536, %r6535};
	xor.b64  	%rd9574, %rd9572, %rd9573;
	shf.l.wrap.b32 	%r6537, %r6531, %r6532, 25;
	shf.l.wrap.b32 	%r6538, %r6532, %r6531, 25;
	mov.b64 	%rd9575, {%r6538, %r6537};
	xor.b64  	%rd9576, %rd9574, %rd9575;
	and.b64  	%rd9577, %rd9558, %rd9534;
	or.b64  	%rd9578, %rd9558, %rd9534;
	and.b64  	%rd9579, %rd9578, %rd9510;
	or.b64  	%rd9580, %rd9579, %rd9577;
	add.s64 	%rd9581, %rd9580, %rd9576;
	add.s64 	%rd9582, %rd9581, %rd9570;
	add.s64 	%rd9583, %rd12062, %rd9499;
	xor.b64  	%rd9584, %rd9547, %rd9523;
	and.b64  	%rd9585, %rd9571, %rd9584;
	xor.b64  	%rd9586, %rd9585, %rd9523;
	add.s64 	%rd9587, %rd9583, %rd9586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6539,%dummy}, %rd9571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6540}, %rd9571;
	}
	shf.r.wrap.b32 	%r6541, %r6540, %r6539, 14;
	shf.r.wrap.b32 	%r6542, %r6539, %r6540, 14;
	mov.b64 	%rd9588, {%r6542, %r6541};
	shf.r.wrap.b32 	%r6543, %r6540, %r6539, 18;
	shf.r.wrap.b32 	%r6544, %r6539, %r6540, 18;
	mov.b64 	%rd9589, {%r6544, %r6543};
	xor.b64  	%rd9590, %rd9588, %rd9589;
	shf.l.wrap.b32 	%r6545, %r6539, %r6540, 23;
	shf.l.wrap.b32 	%r6546, %r6540, %r6539, 23;
	mov.b64 	%rd9591, {%r6546, %r6545};
	xor.b64  	%rd9592, %rd9590, %rd9591;
	add.s64 	%rd9593, %rd9587, %rd9592;
	add.s64 	%rd9594, %rd9593, -4495734319001033068;
	add.s64 	%rd9595, %rd9594, %rd9510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6547,%dummy}, %rd9582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6548}, %rd9582;
	}
	shf.r.wrap.b32 	%r6549, %r6548, %r6547, 28;
	shf.r.wrap.b32 	%r6550, %r6547, %r6548, 28;
	mov.b64 	%rd9596, {%r6550, %r6549};
	shf.l.wrap.b32 	%r6551, %r6547, %r6548, 30;
	shf.l.wrap.b32 	%r6552, %r6548, %r6547, 30;
	mov.b64 	%rd9597, {%r6552, %r6551};
	xor.b64  	%rd9598, %rd9596, %rd9597;
	shf.l.wrap.b32 	%r6553, %r6547, %r6548, 25;
	shf.l.wrap.b32 	%r6554, %r6548, %r6547, 25;
	mov.b64 	%rd9599, {%r6554, %r6553};
	xor.b64  	%rd9600, %rd9598, %rd9599;
	and.b64  	%rd9601, %rd9582, %rd9558;
	or.b64  	%rd9602, %rd9582, %rd9558;
	and.b64  	%rd9603, %rd9602, %rd9534;
	or.b64  	%rd9604, %rd9603, %rd9601;
	add.s64 	%rd9605, %rd9604, %rd9600;
	add.s64 	%rd9606, %rd9605, %rd9594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd12063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6556,%dummy}, %rd12063;
	}
	shf.l.wrap.b32 	%r6557, %r6556, %r6555, 3;
	shf.l.wrap.b32 	%r6558, %r6555, %r6556, 3;
	mov.b64 	%rd9607, {%r6558, %r6557};
	shf.r.wrap.b32 	%r6559, %r6555, %r6556, 19;
	shf.r.wrap.b32 	%r6560, %r6556, %r6555, 19;
	mov.b64 	%rd9608, {%r6560, %r6559};
	xor.b64  	%rd9609, %rd9608, %rd9607;
	shr.u64 	%rd9610, %rd12063, 6;
	xor.b64  	%rd9611, %rd9609, %rd9610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6561,%dummy}, %rd12076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6562}, %rd12076;
	}
	shf.r.wrap.b32 	%r6563, %r6562, %r6561, 8;
	shf.r.wrap.b32 	%r6564, %r6561, %r6562, 8;
	mov.b64 	%rd9612, {%r6564, %r6563};
	shf.r.wrap.b32 	%r6565, %r6562, %r6561, 1;
	shf.r.wrap.b32 	%r6566, %r6561, %r6562, 1;
	mov.b64 	%rd9613, {%r6566, %r6565};
	xor.b64  	%rd9614, %rd9613, %rd9612;
	shr.u64 	%rd9615, %rd12076, 7;
	xor.b64  	%rd9616, %rd9614, %rd9615;
	add.s64 	%rd9617, %rd12068, %rd9611;
	add.s64 	%rd9618, %rd9617, %rd12077;
	add.s64 	%rd9619, %rd9618, %rd9616;
	add.s64 	%rd9620, %rd9619, %rd9523;
	xor.b64  	%rd9621, %rd9571, %rd9547;
	and.b64  	%rd9622, %rd9595, %rd9621;
	xor.b64  	%rd9623, %rd9622, %rd9547;
	add.s64 	%rd9624, %rd9620, %rd9623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6567,%dummy}, %rd9595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6568}, %rd9595;
	}
	shf.r.wrap.b32 	%r6569, %r6568, %r6567, 14;
	shf.r.wrap.b32 	%r6570, %r6567, %r6568, 14;
	mov.b64 	%rd9625, {%r6570, %r6569};
	shf.r.wrap.b32 	%r6571, %r6568, %r6567, 18;
	shf.r.wrap.b32 	%r6572, %r6567, %r6568, 18;
	mov.b64 	%rd9626, {%r6572, %r6571};
	xor.b64  	%rd9627, %rd9625, %rd9626;
	shf.l.wrap.b32 	%r6573, %r6567, %r6568, 23;
	shf.l.wrap.b32 	%r6574, %r6568, %r6567, 23;
	mov.b64 	%rd9628, {%r6574, %r6573};
	xor.b64  	%rd9629, %rd9627, %rd9628;
	add.s64 	%rd9630, %rd9624, %rd9629;
	add.s64 	%rd9631, %rd9630, -1973867731355612462;
	add.s64 	%rd9632, %rd9631, %rd9534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6575,%dummy}, %rd9606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6576}, %rd9606;
	}
	shf.r.wrap.b32 	%r6577, %r6576, %r6575, 28;
	shf.r.wrap.b32 	%r6578, %r6575, %r6576, 28;
	mov.b64 	%rd9633, {%r6578, %r6577};
	shf.l.wrap.b32 	%r6579, %r6575, %r6576, 30;
	shf.l.wrap.b32 	%r6580, %r6576, %r6575, 30;
	mov.b64 	%rd9634, {%r6580, %r6579};
	xor.b64  	%rd9635, %rd9633, %rd9634;
	shf.l.wrap.b32 	%r6581, %r6575, %r6576, 25;
	shf.l.wrap.b32 	%r6582, %r6576, %r6575, 25;
	mov.b64 	%rd9636, {%r6582, %r6581};
	xor.b64  	%rd9637, %rd9635, %rd9636;
	and.b64  	%rd9638, %rd9606, %rd9582;
	or.b64  	%rd9639, %rd9606, %rd9582;
	and.b64  	%rd9640, %rd9639, %rd9558;
	or.b64  	%rd9641, %rd9640, %rd9638;
	add.s64 	%rd9642, %rd9641, %rd9637;
	add.s64 	%rd9643, %rd9642, %rd9631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6583}, %rd12062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6584,%dummy}, %rd12062;
	}
	shf.l.wrap.b32 	%r6585, %r6584, %r6583, 3;
	shf.l.wrap.b32 	%r6586, %r6583, %r6584, 3;
	mov.b64 	%rd9644, {%r6586, %r6585};
	shf.r.wrap.b32 	%r6587, %r6583, %r6584, 19;
	shf.r.wrap.b32 	%r6588, %r6584, %r6583, 19;
	mov.b64 	%rd9645, {%r6588, %r6587};
	xor.b64  	%rd9646, %rd9645, %rd9644;
	shr.u64 	%rd9647, %rd12062, 6;
	xor.b64  	%rd9648, %rd9646, %rd9647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6589,%dummy}, %rd12075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6590}, %rd12075;
	}
	shf.r.wrap.b32 	%r6591, %r6590, %r6589, 8;
	shf.r.wrap.b32 	%r6592, %r6589, %r6590, 8;
	mov.b64 	%rd9649, {%r6592, %r6591};
	shf.r.wrap.b32 	%r6593, %r6590, %r6589, 1;
	shf.r.wrap.b32 	%r6594, %r6589, %r6590, 1;
	mov.b64 	%rd9650, {%r6594, %r6593};
	xor.b64  	%rd9651, %rd9650, %rd9649;
	shr.u64 	%rd9652, %rd12075, 7;
	xor.b64  	%rd9653, %rd9651, %rd9652;
	add.s64 	%rd9654, %rd12067, %rd9648;
	add.s64 	%rd9655, %rd9654, %rd12076;
	add.s64 	%rd9656, %rd9655, %rd9653;
	add.s64 	%rd9657, %rd9656, %rd9547;
	xor.b64  	%rd9658, %rd9595, %rd9571;
	and.b64  	%rd9659, %rd9632, %rd9658;
	xor.b64  	%rd9660, %rd9659, %rd9571;
	add.s64 	%rd9661, %rd9657, %rd9660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6595,%dummy}, %rd9632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6596}, %rd9632;
	}
	shf.r.wrap.b32 	%r6597, %r6596, %r6595, 14;
	shf.r.wrap.b32 	%r6598, %r6595, %r6596, 14;
	mov.b64 	%rd9662, {%r6598, %r6597};
	shf.r.wrap.b32 	%r6599, %r6596, %r6595, 18;
	shf.r.wrap.b32 	%r6600, %r6595, %r6596, 18;
	mov.b64 	%rd9663, {%r6600, %r6599};
	xor.b64  	%rd9664, %rd9662, %rd9663;
	shf.l.wrap.b32 	%r6601, %r6595, %r6596, 23;
	shf.l.wrap.b32 	%r6602, %r6596, %r6595, 23;
	mov.b64 	%rd9665, {%r6602, %r6601};
	xor.b64  	%rd9666, %rd9664, %rd9665;
	add.s64 	%rd9667, %rd9661, %rd9666;
	add.s64 	%rd9668, %rd9667, -1171420211273849373;
	add.s64 	%rd9669, %rd9668, %rd9558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6603,%dummy}, %rd9643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6604}, %rd9643;
	}
	shf.r.wrap.b32 	%r6605, %r6604, %r6603, 28;
	shf.r.wrap.b32 	%r6606, %r6603, %r6604, 28;
	mov.b64 	%rd9670, {%r6606, %r6605};
	shf.l.wrap.b32 	%r6607, %r6603, %r6604, 30;
	shf.l.wrap.b32 	%r6608, %r6604, %r6603, 30;
	mov.b64 	%rd9671, {%r6608, %r6607};
	xor.b64  	%rd9672, %rd9670, %rd9671;
	shf.l.wrap.b32 	%r6609, %r6603, %r6604, 25;
	shf.l.wrap.b32 	%r6610, %r6604, %r6603, 25;
	mov.b64 	%rd9673, {%r6610, %r6609};
	xor.b64  	%rd9674, %rd9672, %rd9673;
	and.b64  	%rd9675, %rd9643, %rd9606;
	or.b64  	%rd9676, %rd9643, %rd9606;
	and.b64  	%rd9677, %rd9676, %rd9582;
	or.b64  	%rd9678, %rd9677, %rd9675;
	add.s64 	%rd9679, %rd9678, %rd9674;
	add.s64 	%rd9680, %rd9679, %rd9668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6611,%dummy}, %rd9619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6612}, %rd9619;
	}
	shf.r.wrap.b32 	%r6613, %r6612, %r6611, 19;
	shf.r.wrap.b32 	%r6614, %r6611, %r6612, 19;
	mov.b64 	%rd9681, {%r6614, %r6613};
	shf.l.wrap.b32 	%r6615, %r6611, %r6612, 3;
	shf.l.wrap.b32 	%r6616, %r6612, %r6611, 3;
	mov.b64 	%rd9682, {%r6616, %r6615};
	xor.b64  	%rd9683, %rd9681, %rd9682;
	shr.u64 	%rd9684, %rd9619, 6;
	xor.b64  	%rd9685, %rd9683, %rd9684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6617,%dummy}, %rd12074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6618}, %rd12074;
	}
	shf.r.wrap.b32 	%r6619, %r6618, %r6617, 8;
	shf.r.wrap.b32 	%r6620, %r6617, %r6618, 8;
	mov.b64 	%rd9686, {%r6620, %r6619};
	shf.r.wrap.b32 	%r6621, %r6618, %r6617, 1;
	shf.r.wrap.b32 	%r6622, %r6617, %r6618, 1;
	mov.b64 	%rd9687, {%r6622, %r6621};
	xor.b64  	%rd9688, %rd9687, %rd9686;
	shr.u64 	%rd9689, %rd12074, 7;
	xor.b64  	%rd9690, %rd9688, %rd9689;
	add.s64 	%rd9691, %rd12075, %rd12066;
	add.s64 	%rd9692, %rd9691, %rd9690;
	add.s64 	%rd9693, %rd9692, %rd9685;
	add.s64 	%rd9694, %rd9693, %rd9571;
	xor.b64  	%rd9695, %rd9632, %rd9595;
	and.b64  	%rd9696, %rd9669, %rd9695;
	xor.b64  	%rd9697, %rd9696, %rd9595;
	add.s64 	%rd9698, %rd9694, %rd9697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6623,%dummy}, %rd9669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6624}, %rd9669;
	}
	shf.r.wrap.b32 	%r6625, %r6624, %r6623, 14;
	shf.r.wrap.b32 	%r6626, %r6623, %r6624, 14;
	mov.b64 	%rd9699, {%r6626, %r6625};
	shf.r.wrap.b32 	%r6627, %r6624, %r6623, 18;
	shf.r.wrap.b32 	%r6628, %r6623, %r6624, 18;
	mov.b64 	%rd9700, {%r6628, %r6627};
	xor.b64  	%rd9701, %rd9699, %rd9700;
	shf.l.wrap.b32 	%r6629, %r6623, %r6624, 23;
	shf.l.wrap.b32 	%r6630, %r6624, %r6623, 23;
	mov.b64 	%rd9702, {%r6630, %r6629};
	xor.b64  	%rd9703, %rd9701, %rd9702;
	add.s64 	%rd9704, %rd9698, %rd9703;
	add.s64 	%rd9705, %rd9704, 1135362057144423861;
	add.s64 	%rd9706, %rd9705, %rd9582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6631,%dummy}, %rd9680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6632}, %rd9680;
	}
	shf.r.wrap.b32 	%r6633, %r6632, %r6631, 28;
	shf.r.wrap.b32 	%r6634, %r6631, %r6632, 28;
	mov.b64 	%rd9707, {%r6634, %r6633};
	shf.l.wrap.b32 	%r6635, %r6631, %r6632, 30;
	shf.l.wrap.b32 	%r6636, %r6632, %r6631, 30;
	mov.b64 	%rd9708, {%r6636, %r6635};
	xor.b64  	%rd9709, %rd9707, %rd9708;
	shf.l.wrap.b32 	%r6637, %r6631, %r6632, 25;
	shf.l.wrap.b32 	%r6638, %r6632, %r6631, 25;
	mov.b64 	%rd9710, {%r6638, %r6637};
	xor.b64  	%rd9711, %rd9709, %rd9710;
	and.b64  	%rd9712, %rd9680, %rd9643;
	or.b64  	%rd9713, %rd9680, %rd9643;
	and.b64  	%rd9714, %rd9713, %rd9606;
	or.b64  	%rd9715, %rd9714, %rd9712;
	add.s64 	%rd9716, %rd9715, %rd9711;
	add.s64 	%rd9717, %rd9716, %rd9705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6639,%dummy}, %rd9656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6640}, %rd9656;
	}
	shf.r.wrap.b32 	%r6641, %r6640, %r6639, 19;
	shf.r.wrap.b32 	%r6642, %r6639, %r6640, 19;
	mov.b64 	%rd9718, {%r6642, %r6641};
	shf.l.wrap.b32 	%r6643, %r6639, %r6640, 3;
	shf.l.wrap.b32 	%r6644, %r6640, %r6639, 3;
	mov.b64 	%rd9719, {%r6644, %r6643};
	xor.b64  	%rd9720, %rd9718, %rd9719;
	shr.u64 	%rd9721, %rd9656, 6;
	xor.b64  	%rd9722, %rd9720, %rd9721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6645,%dummy}, %rd12073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6646}, %rd12073;
	}
	shf.r.wrap.b32 	%r6647, %r6646, %r6645, 8;
	shf.r.wrap.b32 	%r6648, %r6645, %r6646, 8;
	mov.b64 	%rd9723, {%r6648, %r6647};
	shf.r.wrap.b32 	%r6649, %r6646, %r6645, 1;
	shf.r.wrap.b32 	%r6650, %r6645, %r6646, 1;
	mov.b64 	%rd9724, {%r6650, %r6649};
	xor.b64  	%rd9725, %rd9724, %rd9723;
	shr.u64 	%rd9726, %rd12073, 7;
	xor.b64  	%rd9727, %rd9725, %rd9726;
	add.s64 	%rd9728, %rd12074, %rd12065;
	add.s64 	%rd9729, %rd9728, %rd9727;
	add.s64 	%rd9730, %rd9729, %rd9722;
	add.s64 	%rd9731, %rd9730, %rd9595;
	xor.b64  	%rd9732, %rd9669, %rd9632;
	and.b64  	%rd9733, %rd9706, %rd9732;
	xor.b64  	%rd9734, %rd9733, %rd9632;
	add.s64 	%rd9735, %rd9731, %rd9734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6651,%dummy}, %rd9706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6652}, %rd9706;
	}
	shf.r.wrap.b32 	%r6653, %r6652, %r6651, 14;
	shf.r.wrap.b32 	%r6654, %r6651, %r6652, 14;
	mov.b64 	%rd9736, {%r6654, %r6653};
	shf.r.wrap.b32 	%r6655, %r6652, %r6651, 18;
	shf.r.wrap.b32 	%r6656, %r6651, %r6652, 18;
	mov.b64 	%rd9737, {%r6656, %r6655};
	xor.b64  	%rd9738, %rd9736, %rd9737;
	shf.l.wrap.b32 	%r6657, %r6651, %r6652, 23;
	shf.l.wrap.b32 	%r6658, %r6652, %r6651, 23;
	mov.b64 	%rd9739, {%r6658, %r6657};
	xor.b64  	%rd9740, %rd9738, %rd9739;
	add.s64 	%rd9741, %rd9735, %rd9740;
	add.s64 	%rd9742, %rd9741, 2597628984639134821;
	add.s64 	%rd9743, %rd9742, %rd9606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6659,%dummy}, %rd9717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6660}, %rd9717;
	}
	shf.r.wrap.b32 	%r6661, %r6660, %r6659, 28;
	shf.r.wrap.b32 	%r6662, %r6659, %r6660, 28;
	mov.b64 	%rd9744, {%r6662, %r6661};
	shf.l.wrap.b32 	%r6663, %r6659, %r6660, 30;
	shf.l.wrap.b32 	%r6664, %r6660, %r6659, 30;
	mov.b64 	%rd9745, {%r6664, %r6663};
	xor.b64  	%rd9746, %rd9744, %rd9745;
	shf.l.wrap.b32 	%r6665, %r6659, %r6660, 25;
	shf.l.wrap.b32 	%r6666, %r6660, %r6659, 25;
	mov.b64 	%rd9747, {%r6666, %r6665};
	xor.b64  	%rd9748, %rd9746, %rd9747;
	and.b64  	%rd9749, %rd9717, %rd9680;
	or.b64  	%rd9750, %rd9717, %rd9680;
	and.b64  	%rd9751, %rd9750, %rd9643;
	or.b64  	%rd9752, %rd9751, %rd9749;
	add.s64 	%rd9753, %rd9752, %rd9748;
	add.s64 	%rd9754, %rd9753, %rd9742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6667,%dummy}, %rd9693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6668}, %rd9693;
	}
	shf.r.wrap.b32 	%r6669, %r6668, %r6667, 19;
	shf.r.wrap.b32 	%r6670, %r6667, %r6668, 19;
	mov.b64 	%rd9755, {%r6670, %r6669};
	shf.l.wrap.b32 	%r6671, %r6667, %r6668, 3;
	shf.l.wrap.b32 	%r6672, %r6668, %r6667, 3;
	mov.b64 	%rd9756, {%r6672, %r6671};
	xor.b64  	%rd9757, %rd9755, %rd9756;
	shr.u64 	%rd9758, %rd9693, 6;
	xor.b64  	%rd9759, %rd9757, %rd9758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6673,%dummy}, %rd12072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6674}, %rd12072;
	}
	shf.r.wrap.b32 	%r6675, %r6674, %r6673, 8;
	shf.r.wrap.b32 	%r6676, %r6673, %r6674, 8;
	mov.b64 	%rd9760, {%r6676, %r6675};
	shf.r.wrap.b32 	%r6677, %r6674, %r6673, 1;
	shf.r.wrap.b32 	%r6678, %r6673, %r6674, 1;
	mov.b64 	%rd9761, {%r6678, %r6677};
	xor.b64  	%rd9762, %rd9761, %rd9760;
	shr.u64 	%rd9763, %rd12072, 7;
	xor.b64  	%rd9764, %rd9762, %rd9763;
	add.s64 	%rd9765, %rd12073, %rd12064;
	add.s64 	%rd9766, %rd9765, %rd9764;
	add.s64 	%rd9767, %rd9766, %rd9759;
	add.s64 	%rd9768, %rd9767, %rd9632;
	xor.b64  	%rd9769, %rd9706, %rd9669;
	and.b64  	%rd9770, %rd9743, %rd9769;
	xor.b64  	%rd9771, %rd9770, %rd9669;
	add.s64 	%rd9772, %rd9768, %rd9771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6679,%dummy}, %rd9743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6680}, %rd9743;
	}
	shf.r.wrap.b32 	%r6681, %r6680, %r6679, 14;
	shf.r.wrap.b32 	%r6682, %r6679, %r6680, 14;
	mov.b64 	%rd9773, {%r6682, %r6681};
	shf.r.wrap.b32 	%r6683, %r6680, %r6679, 18;
	shf.r.wrap.b32 	%r6684, %r6679, %r6680, 18;
	mov.b64 	%rd9774, {%r6684, %r6683};
	xor.b64  	%rd9775, %rd9773, %rd9774;
	shf.l.wrap.b32 	%r6685, %r6679, %r6680, 23;
	shf.l.wrap.b32 	%r6686, %r6680, %r6679, 23;
	mov.b64 	%rd9776, {%r6686, %r6685};
	xor.b64  	%rd9777, %rd9775, %rd9776;
	add.s64 	%rd9778, %rd9772, %rd9777;
	add.s64 	%rd9779, %rd9778, 3308224258029322869;
	add.s64 	%rd9780, %rd9779, %rd9643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6687,%dummy}, %rd9754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6688}, %rd9754;
	}
	shf.r.wrap.b32 	%r6689, %r6688, %r6687, 28;
	shf.r.wrap.b32 	%r6690, %r6687, %r6688, 28;
	mov.b64 	%rd9781, {%r6690, %r6689};
	shf.l.wrap.b32 	%r6691, %r6687, %r6688, 30;
	shf.l.wrap.b32 	%r6692, %r6688, %r6687, 30;
	mov.b64 	%rd9782, {%r6692, %r6691};
	xor.b64  	%rd9783, %rd9781, %rd9782;
	shf.l.wrap.b32 	%r6693, %r6687, %r6688, 25;
	shf.l.wrap.b32 	%r6694, %r6688, %r6687, 25;
	mov.b64 	%rd9784, {%r6694, %r6693};
	xor.b64  	%rd9785, %rd9783, %rd9784;
	and.b64  	%rd9786, %rd9754, %rd9717;
	or.b64  	%rd9787, %rd9754, %rd9717;
	and.b64  	%rd9788, %rd9787, %rd9680;
	or.b64  	%rd9789, %rd9788, %rd9786;
	add.s64 	%rd9790, %rd9789, %rd9785;
	add.s64 	%rd9791, %rd9790, %rd9779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6695,%dummy}, %rd9730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6696}, %rd9730;
	}
	shf.r.wrap.b32 	%r6697, %r6696, %r6695, 19;
	shf.r.wrap.b32 	%r6698, %r6695, %r6696, 19;
	mov.b64 	%rd9792, {%r6698, %r6697};
	shf.l.wrap.b32 	%r6699, %r6695, %r6696, 3;
	shf.l.wrap.b32 	%r6700, %r6696, %r6695, 3;
	mov.b64 	%rd9793, {%r6700, %r6699};
	xor.b64  	%rd9794, %rd9792, %rd9793;
	shr.u64 	%rd9795, %rd9730, 6;
	xor.b64  	%rd9796, %rd9794, %rd9795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6701,%dummy}, %rd12071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6702}, %rd12071;
	}
	shf.r.wrap.b32 	%r6703, %r6702, %r6701, 8;
	shf.r.wrap.b32 	%r6704, %r6701, %r6702, 8;
	mov.b64 	%rd9797, {%r6704, %r6703};
	shf.r.wrap.b32 	%r6705, %r6702, %r6701, 1;
	shf.r.wrap.b32 	%r6706, %r6701, %r6702, 1;
	mov.b64 	%rd9798, {%r6706, %r6705};
	xor.b64  	%rd9799, %rd9798, %rd9797;
	shr.u64 	%rd9800, %rd12071, 7;
	xor.b64  	%rd9801, %rd9799, %rd9800;
	add.s64 	%rd9802, %rd12072, %rd12063;
	add.s64 	%rd9803, %rd9802, %rd9801;
	add.s64 	%rd9804, %rd9803, %rd9796;
	add.s64 	%rd9805, %rd9804, %rd9669;
	xor.b64  	%rd9806, %rd9743, %rd9706;
	and.b64  	%rd9807, %rd9780, %rd9806;
	xor.b64  	%rd9808, %rd9807, %rd9706;
	add.s64 	%rd9809, %rd9805, %rd9808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6707,%dummy}, %rd9780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6708}, %rd9780;
	}
	shf.r.wrap.b32 	%r6709, %r6708, %r6707, 14;
	shf.r.wrap.b32 	%r6710, %r6707, %r6708, 14;
	mov.b64 	%rd9810, {%r6710, %r6709};
	shf.r.wrap.b32 	%r6711, %r6708, %r6707, 18;
	shf.r.wrap.b32 	%r6712, %r6707, %r6708, 18;
	mov.b64 	%rd9811, {%r6712, %r6711};
	xor.b64  	%rd9812, %rd9810, %rd9811;
	shf.l.wrap.b32 	%r6713, %r6707, %r6708, 23;
	shf.l.wrap.b32 	%r6714, %r6708, %r6707, 23;
	mov.b64 	%rd9813, {%r6714, %r6713};
	xor.b64  	%rd9814, %rd9812, %rd9813;
	add.s64 	%rd9815, %rd9809, %rd9814;
	add.s64 	%rd9816, %rd9815, 5365058923640841347;
	add.s64 	%rd9817, %rd9816, %rd9680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6715,%dummy}, %rd9791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6716}, %rd9791;
	}
	shf.r.wrap.b32 	%r6717, %r6716, %r6715, 28;
	shf.r.wrap.b32 	%r6718, %r6715, %r6716, 28;
	mov.b64 	%rd9818, {%r6718, %r6717};
	shf.l.wrap.b32 	%r6719, %r6715, %r6716, 30;
	shf.l.wrap.b32 	%r6720, %r6716, %r6715, 30;
	mov.b64 	%rd9819, {%r6720, %r6719};
	xor.b64  	%rd9820, %rd9818, %rd9819;
	shf.l.wrap.b32 	%r6721, %r6715, %r6716, 25;
	shf.l.wrap.b32 	%r6722, %r6716, %r6715, 25;
	mov.b64 	%rd9821, {%r6722, %r6721};
	xor.b64  	%rd9822, %rd9820, %rd9821;
	and.b64  	%rd9823, %rd9791, %rd9754;
	or.b64  	%rd9824, %rd9791, %rd9754;
	and.b64  	%rd9825, %rd9824, %rd9717;
	or.b64  	%rd9826, %rd9825, %rd9823;
	add.s64 	%rd9827, %rd9826, %rd9822;
	add.s64 	%rd9828, %rd9827, %rd9816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6723,%dummy}, %rd9767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6724}, %rd9767;
	}
	shf.r.wrap.b32 	%r6725, %r6724, %r6723, 19;
	shf.r.wrap.b32 	%r6726, %r6723, %r6724, 19;
	mov.b64 	%rd9829, {%r6726, %r6725};
	shf.l.wrap.b32 	%r6727, %r6723, %r6724, 3;
	shf.l.wrap.b32 	%r6728, %r6724, %r6723, 3;
	mov.b64 	%rd9830, {%r6728, %r6727};
	xor.b64  	%rd9831, %rd9829, %rd9830;
	shr.u64 	%rd9832, %rd9767, 6;
	xor.b64  	%rd9833, %rd9831, %rd9832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6729,%dummy}, %rd12070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6730}, %rd12070;
	}
	shf.r.wrap.b32 	%r6731, %r6730, %r6729, 8;
	shf.r.wrap.b32 	%r6732, %r6729, %r6730, 8;
	mov.b64 	%rd9834, {%r6732, %r6731};
	shf.r.wrap.b32 	%r6733, %r6730, %r6729, 1;
	shf.r.wrap.b32 	%r6734, %r6729, %r6730, 1;
	mov.b64 	%rd9835, {%r6734, %r6733};
	xor.b64  	%rd9836, %rd9835, %rd9834;
	shr.u64 	%rd9837, %rd12070, 7;
	xor.b64  	%rd9838, %rd9836, %rd9837;
	add.s64 	%rd9839, %rd12071, %rd12062;
	add.s64 	%rd9840, %rd9839, %rd9838;
	add.s64 	%rd9841, %rd9840, %rd9833;
	add.s64 	%rd9842, %rd9841, %rd9706;
	xor.b64  	%rd9843, %rd9780, %rd9743;
	and.b64  	%rd9844, %rd9817, %rd9843;
	xor.b64  	%rd9845, %rd9844, %rd9743;
	add.s64 	%rd9846, %rd9842, %rd9845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6735,%dummy}, %rd9817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6736}, %rd9817;
	}
	shf.r.wrap.b32 	%r6737, %r6736, %r6735, 14;
	shf.r.wrap.b32 	%r6738, %r6735, %r6736, 14;
	mov.b64 	%rd9847, {%r6738, %r6737};
	shf.r.wrap.b32 	%r6739, %r6736, %r6735, 18;
	shf.r.wrap.b32 	%r6740, %r6735, %r6736, 18;
	mov.b64 	%rd9848, {%r6740, %r6739};
	xor.b64  	%rd9849, %rd9847, %rd9848;
	shf.l.wrap.b32 	%r6741, %r6735, %r6736, 23;
	shf.l.wrap.b32 	%r6742, %r6736, %r6735, 23;
	mov.b64 	%rd9850, {%r6742, %r6741};
	xor.b64  	%rd9851, %rd9849, %rd9850;
	add.s64 	%rd9852, %rd9846, %rd9851;
	add.s64 	%rd9853, %rd9852, 6679025012923562964;
	add.s64 	%rd9854, %rd9853, %rd9717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6743,%dummy}, %rd9828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6744}, %rd9828;
	}
	shf.r.wrap.b32 	%r6745, %r6744, %r6743, 28;
	shf.r.wrap.b32 	%r6746, %r6743, %r6744, 28;
	mov.b64 	%rd9855, {%r6746, %r6745};
	shf.l.wrap.b32 	%r6747, %r6743, %r6744, 30;
	shf.l.wrap.b32 	%r6748, %r6744, %r6743, 30;
	mov.b64 	%rd9856, {%r6748, %r6747};
	xor.b64  	%rd9857, %rd9855, %rd9856;
	shf.l.wrap.b32 	%r6749, %r6743, %r6744, 25;
	shf.l.wrap.b32 	%r6750, %r6744, %r6743, 25;
	mov.b64 	%rd9858, {%r6750, %r6749};
	xor.b64  	%rd9859, %rd9857, %rd9858;
	and.b64  	%rd9860, %rd9828, %rd9791;
	or.b64  	%rd9861, %rd9828, %rd9791;
	and.b64  	%rd9862, %rd9861, %rd9754;
	or.b64  	%rd9863, %rd9862, %rd9860;
	add.s64 	%rd9864, %rd9863, %rd9859;
	add.s64 	%rd9865, %rd9864, %rd9853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6751,%dummy}, %rd9804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6752}, %rd9804;
	}
	shf.r.wrap.b32 	%r6753, %r6752, %r6751, 19;
	shf.r.wrap.b32 	%r6754, %r6751, %r6752, 19;
	mov.b64 	%rd9866, {%r6754, %r6753};
	shf.l.wrap.b32 	%r6755, %r6751, %r6752, 3;
	shf.l.wrap.b32 	%r6756, %r6752, %r6751, 3;
	mov.b64 	%rd9867, {%r6756, %r6755};
	xor.b64  	%rd9868, %rd9866, %rd9867;
	shr.u64 	%rd9869, %rd9804, 6;
	xor.b64  	%rd9870, %rd9868, %rd9869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6757,%dummy}, %rd12069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6758}, %rd12069;
	}
	shf.r.wrap.b32 	%r6759, %r6758, %r6757, 8;
	shf.r.wrap.b32 	%r6760, %r6757, %r6758, 8;
	mov.b64 	%rd9871, {%r6760, %r6759};
	shf.r.wrap.b32 	%r6761, %r6758, %r6757, 1;
	shf.r.wrap.b32 	%r6762, %r6757, %r6758, 1;
	mov.b64 	%rd9872, {%r6762, %r6761};
	xor.b64  	%rd9873, %rd9872, %rd9871;
	shr.u64 	%rd9874, %rd12069, 7;
	xor.b64  	%rd9875, %rd9873, %rd9874;
	add.s64 	%rd9876, %rd9875, %rd12070;
	add.s64 	%rd9877, %rd9876, %rd9619;
	add.s64 	%rd9878, %rd9877, %rd9870;
	add.s64 	%rd9879, %rd9878, %rd9743;
	xor.b64  	%rd9880, %rd9817, %rd9780;
	and.b64  	%rd9881, %rd9854, %rd9880;
	xor.b64  	%rd9882, %rd9881, %rd9780;
	add.s64 	%rd9883, %rd9879, %rd9882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6763,%dummy}, %rd9854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6764}, %rd9854;
	}
	shf.r.wrap.b32 	%r6765, %r6764, %r6763, 14;
	shf.r.wrap.b32 	%r6766, %r6763, %r6764, 14;
	mov.b64 	%rd9884, {%r6766, %r6765};
	shf.r.wrap.b32 	%r6767, %r6764, %r6763, 18;
	shf.r.wrap.b32 	%r6768, %r6763, %r6764, 18;
	mov.b64 	%rd9885, {%r6768, %r6767};
	xor.b64  	%rd9886, %rd9884, %rd9885;
	shf.l.wrap.b32 	%r6769, %r6763, %r6764, 23;
	shf.l.wrap.b32 	%r6770, %r6764, %r6763, 23;
	mov.b64 	%rd9887, {%r6770, %r6769};
	xor.b64  	%rd9888, %rd9886, %rd9887;
	add.s64 	%rd9889, %rd9883, %rd9888;
	add.s64 	%rd9890, %rd9889, 8573033837759648693;
	add.s64 	%rd9891, %rd9890, %rd9754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6771,%dummy}, %rd9865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6772}, %rd9865;
	}
	shf.r.wrap.b32 	%r6773, %r6772, %r6771, 28;
	shf.r.wrap.b32 	%r6774, %r6771, %r6772, 28;
	mov.b64 	%rd9892, {%r6774, %r6773};
	shf.l.wrap.b32 	%r6775, %r6771, %r6772, 30;
	shf.l.wrap.b32 	%r6776, %r6772, %r6771, 30;
	mov.b64 	%rd9893, {%r6776, %r6775};
	xor.b64  	%rd9894, %rd9892, %rd9893;
	shf.l.wrap.b32 	%r6777, %r6771, %r6772, 25;
	shf.l.wrap.b32 	%r6778, %r6772, %r6771, 25;
	mov.b64 	%rd9895, {%r6778, %r6777};
	xor.b64  	%rd9896, %rd9894, %rd9895;
	and.b64  	%rd9897, %rd9865, %rd9828;
	or.b64  	%rd9898, %rd9865, %rd9828;
	and.b64  	%rd9899, %rd9898, %rd9791;
	or.b64  	%rd9900, %rd9899, %rd9897;
	add.s64 	%rd9901, %rd9900, %rd9896;
	add.s64 	%rd9902, %rd9901, %rd9890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6779,%dummy}, %rd9841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6780}, %rd9841;
	}
	shf.r.wrap.b32 	%r6781, %r6780, %r6779, 19;
	shf.r.wrap.b32 	%r6782, %r6779, %r6780, 19;
	mov.b64 	%rd9903, {%r6782, %r6781};
	shf.l.wrap.b32 	%r6783, %r6779, %r6780, 3;
	shf.l.wrap.b32 	%r6784, %r6780, %r6779, 3;
	mov.b64 	%rd9904, {%r6784, %r6783};
	xor.b64  	%rd9905, %rd9903, %rd9904;
	shr.u64 	%rd9906, %rd9841, 6;
	xor.b64  	%rd9907, %rd9905, %rd9906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6785,%dummy}, %rd12068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6786}, %rd12068;
	}
	shf.r.wrap.b32 	%r6787, %r6786, %r6785, 8;
	shf.r.wrap.b32 	%r6788, %r6785, %r6786, 8;
	mov.b64 	%rd9908, {%r6788, %r6787};
	shf.r.wrap.b32 	%r6789, %r6786, %r6785, 1;
	shf.r.wrap.b32 	%r6790, %r6785, %r6786, 1;
	mov.b64 	%rd9909, {%r6790, %r6789};
	xor.b64  	%rd9910, %rd9909, %rd9908;
	shr.u64 	%rd9911, %rd12068, 7;
	xor.b64  	%rd9912, %rd9910, %rd9911;
	add.s64 	%rd9913, %rd9912, %rd12069;
	add.s64 	%rd9914, %rd9913, %rd9656;
	add.s64 	%rd9915, %rd9914, %rd9907;
	add.s64 	%rd9916, %rd9915, %rd9780;
	xor.b64  	%rd9917, %rd9854, %rd9817;
	and.b64  	%rd9918, %rd9891, %rd9917;
	xor.b64  	%rd9919, %rd9918, %rd9817;
	add.s64 	%rd9920, %rd9916, %rd9919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6791,%dummy}, %rd9891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6792}, %rd9891;
	}
	shf.r.wrap.b32 	%r6793, %r6792, %r6791, 14;
	shf.r.wrap.b32 	%r6794, %r6791, %r6792, 14;
	mov.b64 	%rd9921, {%r6794, %r6793};
	shf.r.wrap.b32 	%r6795, %r6792, %r6791, 18;
	shf.r.wrap.b32 	%r6796, %r6791, %r6792, 18;
	mov.b64 	%rd9922, {%r6796, %r6795};
	xor.b64  	%rd9923, %rd9921, %rd9922;
	shf.l.wrap.b32 	%r6797, %r6791, %r6792, 23;
	shf.l.wrap.b32 	%r6798, %r6792, %r6791, 23;
	mov.b64 	%rd9924, {%r6798, %r6797};
	xor.b64  	%rd9925, %rd9923, %rd9924;
	add.s64 	%rd9926, %rd9920, %rd9925;
	add.s64 	%rd9927, %rd9926, -7476448914759557205;
	add.s64 	%rd9928, %rd9927, %rd9791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6799,%dummy}, %rd9902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6800}, %rd9902;
	}
	shf.r.wrap.b32 	%r6801, %r6800, %r6799, 28;
	shf.r.wrap.b32 	%r6802, %r6799, %r6800, 28;
	mov.b64 	%rd9929, {%r6802, %r6801};
	shf.l.wrap.b32 	%r6803, %r6799, %r6800, 30;
	shf.l.wrap.b32 	%r6804, %r6800, %r6799, 30;
	mov.b64 	%rd9930, {%r6804, %r6803};
	xor.b64  	%rd9931, %rd9929, %rd9930;
	shf.l.wrap.b32 	%r6805, %r6799, %r6800, 25;
	shf.l.wrap.b32 	%r6806, %r6800, %r6799, 25;
	mov.b64 	%rd9932, {%r6806, %r6805};
	xor.b64  	%rd9933, %rd9931, %rd9932;
	and.b64  	%rd9934, %rd9902, %rd9865;
	or.b64  	%rd9935, %rd9902, %rd9865;
	and.b64  	%rd9936, %rd9935, %rd9828;
	or.b64  	%rd9937, %rd9936, %rd9934;
	add.s64 	%rd9938, %rd9937, %rd9933;
	add.s64 	%rd9939, %rd9938, %rd9927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6807,%dummy}, %rd9878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6808}, %rd9878;
	}
	shf.r.wrap.b32 	%r6809, %r6808, %r6807, 19;
	shf.r.wrap.b32 	%r6810, %r6807, %r6808, 19;
	mov.b64 	%rd9940, {%r6810, %r6809};
	shf.l.wrap.b32 	%r6811, %r6807, %r6808, 3;
	shf.l.wrap.b32 	%r6812, %r6808, %r6807, 3;
	mov.b64 	%rd9941, {%r6812, %r6811};
	xor.b64  	%rd9942, %rd9940, %rd9941;
	shr.u64 	%rd9943, %rd9878, 6;
	xor.b64  	%rd9944, %rd9942, %rd9943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6813,%dummy}, %rd12067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6814}, %rd12067;
	}
	shf.r.wrap.b32 	%r6815, %r6814, %r6813, 8;
	shf.r.wrap.b32 	%r6816, %r6813, %r6814, 8;
	mov.b64 	%rd9945, {%r6816, %r6815};
	shf.r.wrap.b32 	%r6817, %r6814, %r6813, 1;
	shf.r.wrap.b32 	%r6818, %r6813, %r6814, 1;
	mov.b64 	%rd9946, {%r6818, %r6817};
	xor.b64  	%rd9947, %rd9946, %rd9945;
	shr.u64 	%rd9948, %rd12067, 7;
	xor.b64  	%rd9949, %rd9947, %rd9948;
	add.s64 	%rd9950, %rd9949, %rd12068;
	add.s64 	%rd9951, %rd9950, %rd9693;
	add.s64 	%rd9952, %rd9951, %rd9944;
	add.s64 	%rd9953, %rd9952, %rd9817;
	xor.b64  	%rd9954, %rd9891, %rd9854;
	and.b64  	%rd9955, %rd9928, %rd9954;
	xor.b64  	%rd9956, %rd9955, %rd9854;
	add.s64 	%rd9957, %rd9953, %rd9956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6819,%dummy}, %rd9928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6820}, %rd9928;
	}
	shf.r.wrap.b32 	%r6821, %r6820, %r6819, 14;
	shf.r.wrap.b32 	%r6822, %r6819, %r6820, 14;
	mov.b64 	%rd9958, {%r6822, %r6821};
	shf.r.wrap.b32 	%r6823, %r6820, %r6819, 18;
	shf.r.wrap.b32 	%r6824, %r6819, %r6820, 18;
	mov.b64 	%rd9959, {%r6824, %r6823};
	xor.b64  	%rd9960, %rd9958, %rd9959;
	shf.l.wrap.b32 	%r6825, %r6819, %r6820, 23;
	shf.l.wrap.b32 	%r6826, %r6820, %r6819, 23;
	mov.b64 	%rd9961, {%r6826, %r6825};
	xor.b64  	%rd9962, %rd9960, %rd9961;
	add.s64 	%rd9963, %rd9957, %rd9962;
	add.s64 	%rd9964, %rd9963, -6327057829258317296;
	add.s64 	%rd9965, %rd9964, %rd9828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6827,%dummy}, %rd9939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6828}, %rd9939;
	}
	shf.r.wrap.b32 	%r6829, %r6828, %r6827, 28;
	shf.r.wrap.b32 	%r6830, %r6827, %r6828, 28;
	mov.b64 	%rd9966, {%r6830, %r6829};
	shf.l.wrap.b32 	%r6831, %r6827, %r6828, 30;
	shf.l.wrap.b32 	%r6832, %r6828, %r6827, 30;
	mov.b64 	%rd9967, {%r6832, %r6831};
	xor.b64  	%rd9968, %rd9966, %rd9967;
	shf.l.wrap.b32 	%r6833, %r6827, %r6828, 25;
	shf.l.wrap.b32 	%r6834, %r6828, %r6827, 25;
	mov.b64 	%rd9969, {%r6834, %r6833};
	xor.b64  	%rd9970, %rd9968, %rd9969;
	and.b64  	%rd9971, %rd9939, %rd9902;
	or.b64  	%rd9972, %rd9939, %rd9902;
	and.b64  	%rd9973, %rd9972, %rd9865;
	or.b64  	%rd9974, %rd9973, %rd9971;
	add.s64 	%rd9975, %rd9974, %rd9970;
	add.s64 	%rd9976, %rd9975, %rd9964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6835,%dummy}, %rd9915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6836}, %rd9915;
	}
	shf.r.wrap.b32 	%r6837, %r6836, %r6835, 19;
	shf.r.wrap.b32 	%r6838, %r6835, %r6836, 19;
	mov.b64 	%rd9977, {%r6838, %r6837};
	shf.l.wrap.b32 	%r6839, %r6835, %r6836, 3;
	shf.l.wrap.b32 	%r6840, %r6836, %r6835, 3;
	mov.b64 	%rd9978, {%r6840, %r6839};
	xor.b64  	%rd9979, %rd9977, %rd9978;
	shr.u64 	%rd9980, %rd9915, 6;
	xor.b64  	%rd9981, %rd9979, %rd9980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6841,%dummy}, %rd12066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6842}, %rd12066;
	}
	shf.r.wrap.b32 	%r6843, %r6842, %r6841, 8;
	shf.r.wrap.b32 	%r6844, %r6841, %r6842, 8;
	mov.b64 	%rd9982, {%r6844, %r6843};
	shf.r.wrap.b32 	%r6845, %r6842, %r6841, 1;
	shf.r.wrap.b32 	%r6846, %r6841, %r6842, 1;
	mov.b64 	%rd9983, {%r6846, %r6845};
	xor.b64  	%rd9984, %rd9983, %rd9982;
	shr.u64 	%rd9985, %rd12066, 7;
	xor.b64  	%rd9986, %rd9984, %rd9985;
	add.s64 	%rd9987, %rd9986, %rd12067;
	add.s64 	%rd9988, %rd9987, %rd9730;
	add.s64 	%rd9989, %rd9988, %rd9981;
	add.s64 	%rd9990, %rd9989, %rd9854;
	xor.b64  	%rd9991, %rd9928, %rd9891;
	and.b64  	%rd9992, %rd9965, %rd9991;
	xor.b64  	%rd9993, %rd9992, %rd9891;
	add.s64 	%rd9994, %rd9990, %rd9993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6847,%dummy}, %rd9965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6848}, %rd9965;
	}
	shf.r.wrap.b32 	%r6849, %r6848, %r6847, 14;
	shf.r.wrap.b32 	%r6850, %r6847, %r6848, 14;
	mov.b64 	%rd9995, {%r6850, %r6849};
	shf.r.wrap.b32 	%r6851, %r6848, %r6847, 18;
	shf.r.wrap.b32 	%r6852, %r6847, %r6848, 18;
	mov.b64 	%rd9996, {%r6852, %r6851};
	xor.b64  	%rd9997, %rd9995, %rd9996;
	shf.l.wrap.b32 	%r6853, %r6847, %r6848, 23;
	shf.l.wrap.b32 	%r6854, %r6848, %r6847, 23;
	mov.b64 	%rd9998, {%r6854, %r6853};
	xor.b64  	%rd9999, %rd9997, %rd9998;
	add.s64 	%rd10000, %rd9994, %rd9999;
	add.s64 	%rd10001, %rd10000, -5763719355590565569;
	add.s64 	%rd10002, %rd10001, %rd9865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6855,%dummy}, %rd9976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6856}, %rd9976;
	}
	shf.r.wrap.b32 	%r6857, %r6856, %r6855, 28;
	shf.r.wrap.b32 	%r6858, %r6855, %r6856, 28;
	mov.b64 	%rd10003, {%r6858, %r6857};
	shf.l.wrap.b32 	%r6859, %r6855, %r6856, 30;
	shf.l.wrap.b32 	%r6860, %r6856, %r6855, 30;
	mov.b64 	%rd10004, {%r6860, %r6859};
	xor.b64  	%rd10005, %rd10003, %rd10004;
	shf.l.wrap.b32 	%r6861, %r6855, %r6856, 25;
	shf.l.wrap.b32 	%r6862, %r6856, %r6855, 25;
	mov.b64 	%rd10006, {%r6862, %r6861};
	xor.b64  	%rd10007, %rd10005, %rd10006;
	and.b64  	%rd10008, %rd9976, %rd9939;
	or.b64  	%rd10009, %rd9976, %rd9939;
	and.b64  	%rd10010, %rd10009, %rd9902;
	or.b64  	%rd10011, %rd10010, %rd10008;
	add.s64 	%rd10012, %rd10011, %rd10007;
	add.s64 	%rd10013, %rd10012, %rd10001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6863,%dummy}, %rd9952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6864}, %rd9952;
	}
	shf.r.wrap.b32 	%r6865, %r6864, %r6863, 19;
	shf.r.wrap.b32 	%r6866, %r6863, %r6864, 19;
	mov.b64 	%rd10014, {%r6866, %r6865};
	shf.l.wrap.b32 	%r6867, %r6863, %r6864, 3;
	shf.l.wrap.b32 	%r6868, %r6864, %r6863, 3;
	mov.b64 	%rd10015, {%r6868, %r6867};
	xor.b64  	%rd10016, %rd10014, %rd10015;
	shr.u64 	%rd10017, %rd9952, 6;
	xor.b64  	%rd10018, %rd10016, %rd10017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6869,%dummy}, %rd12065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6870}, %rd12065;
	}
	shf.r.wrap.b32 	%r6871, %r6870, %r6869, 8;
	shf.r.wrap.b32 	%r6872, %r6869, %r6870, 8;
	mov.b64 	%rd10019, {%r6872, %r6871};
	shf.r.wrap.b32 	%r6873, %r6870, %r6869, 1;
	shf.r.wrap.b32 	%r6874, %r6869, %r6870, 1;
	mov.b64 	%rd10020, {%r6874, %r6873};
	xor.b64  	%rd10021, %rd10020, %rd10019;
	shr.u64 	%rd10022, %rd12065, 7;
	xor.b64  	%rd10023, %rd10021, %rd10022;
	add.s64 	%rd10024, %rd10023, %rd12066;
	add.s64 	%rd10025, %rd10024, %rd9767;
	add.s64 	%rd10026, %rd10025, %rd10018;
	add.s64 	%rd10027, %rd10026, %rd9891;
	xor.b64  	%rd10028, %rd9965, %rd9928;
	and.b64  	%rd10029, %rd10002, %rd10028;
	xor.b64  	%rd10030, %rd10029, %rd9928;
	add.s64 	%rd10031, %rd10027, %rd10030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6875,%dummy}, %rd10002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6876}, %rd10002;
	}
	shf.r.wrap.b32 	%r6877, %r6876, %r6875, 14;
	shf.r.wrap.b32 	%r6878, %r6875, %r6876, 14;
	mov.b64 	%rd10032, {%r6878, %r6877};
	shf.r.wrap.b32 	%r6879, %r6876, %r6875, 18;
	shf.r.wrap.b32 	%r6880, %r6875, %r6876, 18;
	mov.b64 	%rd10033, {%r6880, %r6879};
	xor.b64  	%rd10034, %rd10032, %rd10033;
	shf.l.wrap.b32 	%r6881, %r6875, %r6876, 23;
	shf.l.wrap.b32 	%r6882, %r6876, %r6875, 23;
	mov.b64 	%rd10035, {%r6882, %r6881};
	xor.b64  	%rd10036, %rd10034, %rd10035;
	add.s64 	%rd10037, %rd10031, %rd10036;
	add.s64 	%rd10038, %rd10037, -4658551843659510044;
	add.s64 	%rd10039, %rd10038, %rd9902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6883,%dummy}, %rd10013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6884}, %rd10013;
	}
	shf.r.wrap.b32 	%r6885, %r6884, %r6883, 28;
	shf.r.wrap.b32 	%r6886, %r6883, %r6884, 28;
	mov.b64 	%rd10040, {%r6886, %r6885};
	shf.l.wrap.b32 	%r6887, %r6883, %r6884, 30;
	shf.l.wrap.b32 	%r6888, %r6884, %r6883, 30;
	mov.b64 	%rd10041, {%r6888, %r6887};
	xor.b64  	%rd10042, %rd10040, %rd10041;
	shf.l.wrap.b32 	%r6889, %r6883, %r6884, 25;
	shf.l.wrap.b32 	%r6890, %r6884, %r6883, 25;
	mov.b64 	%rd10043, {%r6890, %r6889};
	xor.b64  	%rd10044, %rd10042, %rd10043;
	and.b64  	%rd10045, %rd10013, %rd9976;
	or.b64  	%rd10046, %rd10013, %rd9976;
	and.b64  	%rd10047, %rd10046, %rd9939;
	or.b64  	%rd10048, %rd10047, %rd10045;
	add.s64 	%rd10049, %rd10048, %rd10044;
	add.s64 	%rd10050, %rd10049, %rd10038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6891,%dummy}, %rd9989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6892}, %rd9989;
	}
	shf.r.wrap.b32 	%r6893, %r6892, %r6891, 19;
	shf.r.wrap.b32 	%r6894, %r6891, %r6892, 19;
	mov.b64 	%rd10051, {%r6894, %r6893};
	shf.l.wrap.b32 	%r6895, %r6891, %r6892, 3;
	shf.l.wrap.b32 	%r6896, %r6892, %r6891, 3;
	mov.b64 	%rd10052, {%r6896, %r6895};
	xor.b64  	%rd10053, %rd10051, %rd10052;
	shr.u64 	%rd10054, %rd9989, 6;
	xor.b64  	%rd10055, %rd10053, %rd10054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6897,%dummy}, %rd12064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6898}, %rd12064;
	}
	shf.r.wrap.b32 	%r6899, %r6898, %r6897, 8;
	shf.r.wrap.b32 	%r6900, %r6897, %r6898, 8;
	mov.b64 	%rd10056, {%r6900, %r6899};
	shf.r.wrap.b32 	%r6901, %r6898, %r6897, 1;
	shf.r.wrap.b32 	%r6902, %r6897, %r6898, 1;
	mov.b64 	%rd10057, {%r6902, %r6901};
	xor.b64  	%rd10058, %rd10057, %rd10056;
	shr.u64 	%rd10059, %rd12064, 7;
	xor.b64  	%rd10060, %rd10058, %rd10059;
	add.s64 	%rd10061, %rd10060, %rd12065;
	add.s64 	%rd10062, %rd10061, %rd9804;
	add.s64 	%rd10063, %rd10062, %rd10055;
	add.s64 	%rd10064, %rd10063, %rd9928;
	xor.b64  	%rd10065, %rd10002, %rd9965;
	and.b64  	%rd10066, %rd10039, %rd10065;
	xor.b64  	%rd10067, %rd10066, %rd9965;
	add.s64 	%rd10068, %rd10064, %rd10067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6903,%dummy}, %rd10039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6904}, %rd10039;
	}
	shf.r.wrap.b32 	%r6905, %r6904, %r6903, 14;
	shf.r.wrap.b32 	%r6906, %r6903, %r6904, 14;
	mov.b64 	%rd10069, {%r6906, %r6905};
	shf.r.wrap.b32 	%r6907, %r6904, %r6903, 18;
	shf.r.wrap.b32 	%r6908, %r6903, %r6904, 18;
	mov.b64 	%rd10070, {%r6908, %r6907};
	xor.b64  	%rd10071, %rd10069, %rd10070;
	shf.l.wrap.b32 	%r6909, %r6903, %r6904, 23;
	shf.l.wrap.b32 	%r6910, %r6904, %r6903, 23;
	mov.b64 	%rd10072, {%r6910, %r6909};
	xor.b64  	%rd10073, %rd10071, %rd10072;
	add.s64 	%rd10074, %rd10068, %rd10073;
	add.s64 	%rd10075, %rd10074, -4116276920077217854;
	add.s64 	%rd10076, %rd10075, %rd9939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6911,%dummy}, %rd10050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6912}, %rd10050;
	}
	shf.r.wrap.b32 	%r6913, %r6912, %r6911, 28;
	shf.r.wrap.b32 	%r6914, %r6911, %r6912, 28;
	mov.b64 	%rd10077, {%r6914, %r6913};
	shf.l.wrap.b32 	%r6915, %r6911, %r6912, 30;
	shf.l.wrap.b32 	%r6916, %r6912, %r6911, 30;
	mov.b64 	%rd10078, {%r6916, %r6915};
	xor.b64  	%rd10079, %rd10077, %rd10078;
	shf.l.wrap.b32 	%r6917, %r6911, %r6912, 25;
	shf.l.wrap.b32 	%r6918, %r6912, %r6911, 25;
	mov.b64 	%rd10080, {%r6918, %r6917};
	xor.b64  	%rd10081, %rd10079, %rd10080;
	and.b64  	%rd10082, %rd10050, %rd10013;
	or.b64  	%rd10083, %rd10050, %rd10013;
	and.b64  	%rd10084, %rd10083, %rd9976;
	or.b64  	%rd10085, %rd10084, %rd10082;
	add.s64 	%rd10086, %rd10085, %rd10081;
	add.s64 	%rd10087, %rd10086, %rd10075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6919,%dummy}, %rd10026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6920}, %rd10026;
	}
	shf.r.wrap.b32 	%r6921, %r6920, %r6919, 19;
	shf.r.wrap.b32 	%r6922, %r6919, %r6920, 19;
	mov.b64 	%rd10088, {%r6922, %r6921};
	shf.l.wrap.b32 	%r6923, %r6919, %r6920, 3;
	shf.l.wrap.b32 	%r6924, %r6920, %r6919, 3;
	mov.b64 	%rd10089, {%r6924, %r6923};
	xor.b64  	%rd10090, %rd10088, %rd10089;
	shr.u64 	%rd10091, %rd10026, 6;
	xor.b64  	%rd10092, %rd10090, %rd10091;
	shf.r.wrap.b32 	%r6925, %r6555, %r6556, 8;
	shf.r.wrap.b32 	%r6926, %r6556, %r6555, 8;
	mov.b64 	%rd10093, {%r6926, %r6925};
	shf.r.wrap.b32 	%r6927, %r6555, %r6556, 1;
	shf.r.wrap.b32 	%r6928, %r6556, %r6555, 1;
	mov.b64 	%rd10094, {%r6928, %r6927};
	xor.b64  	%rd10095, %rd10094, %rd10093;
	shr.u64 	%rd10096, %rd12063, 7;
	xor.b64  	%rd10097, %rd10095, %rd10096;
	add.s64 	%rd10098, %rd10097, %rd12064;
	add.s64 	%rd10099, %rd10098, %rd9841;
	add.s64 	%rd10100, %rd10099, %rd10092;
	add.s64 	%rd10101, %rd10100, %rd9965;
	xor.b64  	%rd10102, %rd10039, %rd10002;
	and.b64  	%rd10103, %rd10076, %rd10102;
	xor.b64  	%rd10104, %rd10103, %rd10002;
	add.s64 	%rd10105, %rd10101, %rd10104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6929,%dummy}, %rd10076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6930}, %rd10076;
	}
	shf.r.wrap.b32 	%r6931, %r6930, %r6929, 14;
	shf.r.wrap.b32 	%r6932, %r6929, %r6930, 14;
	mov.b64 	%rd10106, {%r6932, %r6931};
	shf.r.wrap.b32 	%r6933, %r6930, %r6929, 18;
	shf.r.wrap.b32 	%r6934, %r6929, %r6930, 18;
	mov.b64 	%rd10107, {%r6934, %r6933};
	xor.b64  	%rd10108, %rd10106, %rd10107;
	shf.l.wrap.b32 	%r6935, %r6929, %r6930, 23;
	shf.l.wrap.b32 	%r6936, %r6930, %r6929, 23;
	mov.b64 	%rd10109, {%r6936, %r6935};
	xor.b64  	%rd10110, %rd10108, %rd10109;
	add.s64 	%rd10111, %rd10105, %rd10110;
	add.s64 	%rd10112, %rd10111, -3051310485924567259;
	add.s64 	%rd10113, %rd10112, %rd9976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6937,%dummy}, %rd10087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6938}, %rd10087;
	}
	shf.r.wrap.b32 	%r6939, %r6938, %r6937, 28;
	shf.r.wrap.b32 	%r6940, %r6937, %r6938, 28;
	mov.b64 	%rd10114, {%r6940, %r6939};
	shf.l.wrap.b32 	%r6941, %r6937, %r6938, 30;
	shf.l.wrap.b32 	%r6942, %r6938, %r6937, 30;
	mov.b64 	%rd10115, {%r6942, %r6941};
	xor.b64  	%rd10116, %rd10114, %rd10115;
	shf.l.wrap.b32 	%r6943, %r6937, %r6938, 25;
	shf.l.wrap.b32 	%r6944, %r6938, %r6937, 25;
	mov.b64 	%rd10117, {%r6944, %r6943};
	xor.b64  	%rd10118, %rd10116, %rd10117;
	and.b64  	%rd10119, %rd10087, %rd10050;
	or.b64  	%rd10120, %rd10087, %rd10050;
	and.b64  	%rd10121, %rd10120, %rd10013;
	or.b64  	%rd10122, %rd10121, %rd10119;
	add.s64 	%rd10123, %rd10122, %rd10118;
	add.s64 	%rd10124, %rd10123, %rd10112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6945,%dummy}, %rd10063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6946}, %rd10063;
	}
	shf.r.wrap.b32 	%r6947, %r6946, %r6945, 19;
	shf.r.wrap.b32 	%r6948, %r6945, %r6946, 19;
	mov.b64 	%rd10125, {%r6948, %r6947};
	shf.l.wrap.b32 	%r6949, %r6945, %r6946, 3;
	shf.l.wrap.b32 	%r6950, %r6946, %r6945, 3;
	mov.b64 	%rd10126, {%r6950, %r6949};
	xor.b64  	%rd10127, %rd10125, %rd10126;
	shr.u64 	%rd10128, %rd10063, 6;
	xor.b64  	%rd10129, %rd10127, %rd10128;
	shf.r.wrap.b32 	%r6951, %r6583, %r6584, 8;
	shf.r.wrap.b32 	%r6952, %r6584, %r6583, 8;
	mov.b64 	%rd10130, {%r6952, %r6951};
	shf.r.wrap.b32 	%r6953, %r6583, %r6584, 1;
	shf.r.wrap.b32 	%r6954, %r6584, %r6583, 1;
	mov.b64 	%rd10131, {%r6954, %r6953};
	xor.b64  	%rd10132, %rd10131, %rd10130;
	shr.u64 	%rd10133, %rd12062, 7;
	xor.b64  	%rd10134, %rd10132, %rd10133;
	add.s64 	%rd10135, %rd10134, %rd12063;
	add.s64 	%rd10136, %rd10135, %rd9878;
	add.s64 	%rd10137, %rd10136, %rd10129;
	add.s64 	%rd10138, %rd10137, %rd10002;
	xor.b64  	%rd10139, %rd10076, %rd10039;
	and.b64  	%rd10140, %rd10113, %rd10139;
	xor.b64  	%rd10141, %rd10140, %rd10039;
	add.s64 	%rd10142, %rd10138, %rd10141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6955,%dummy}, %rd10113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6956}, %rd10113;
	}
	shf.r.wrap.b32 	%r6957, %r6956, %r6955, 14;
	shf.r.wrap.b32 	%r6958, %r6955, %r6956, 14;
	mov.b64 	%rd10143, {%r6958, %r6957};
	shf.r.wrap.b32 	%r6959, %r6956, %r6955, 18;
	shf.r.wrap.b32 	%r6960, %r6955, %r6956, 18;
	mov.b64 	%rd10144, {%r6960, %r6959};
	xor.b64  	%rd10145, %rd10143, %rd10144;
	shf.l.wrap.b32 	%r6961, %r6955, %r6956, 23;
	shf.l.wrap.b32 	%r6962, %r6956, %r6955, 23;
	mov.b64 	%rd10146, {%r6962, %r6961};
	xor.b64  	%rd10147, %rd10145, %rd10146;
	add.s64 	%rd10148, %rd10142, %rd10147;
	add.s64 	%rd10149, %rd10148, 489312712824947311;
	add.s64 	%rd10150, %rd10149, %rd10013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6963,%dummy}, %rd10124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6964}, %rd10124;
	}
	shf.r.wrap.b32 	%r6965, %r6964, %r6963, 28;
	shf.r.wrap.b32 	%r6966, %r6963, %r6964, 28;
	mov.b64 	%rd10151, {%r6966, %r6965};
	shf.l.wrap.b32 	%r6967, %r6963, %r6964, 30;
	shf.l.wrap.b32 	%r6968, %r6964, %r6963, 30;
	mov.b64 	%rd10152, {%r6968, %r6967};
	xor.b64  	%rd10153, %rd10151, %rd10152;
	shf.l.wrap.b32 	%r6969, %r6963, %r6964, 25;
	shf.l.wrap.b32 	%r6970, %r6964, %r6963, 25;
	mov.b64 	%rd10154, {%r6970, %r6969};
	xor.b64  	%rd10155, %rd10153, %rd10154;
	and.b64  	%rd10156, %rd10124, %rd10087;
	or.b64  	%rd10157, %rd10124, %rd10087;
	and.b64  	%rd10158, %rd10157, %rd10050;
	or.b64  	%rd10159, %rd10158, %rd10156;
	add.s64 	%rd10160, %rd10159, %rd10155;
	add.s64 	%rd10161, %rd10160, %rd10149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6971,%dummy}, %rd10100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6972}, %rd10100;
	}
	shf.r.wrap.b32 	%r6973, %r6972, %r6971, 19;
	shf.r.wrap.b32 	%r6974, %r6971, %r6972, 19;
	mov.b64 	%rd10162, {%r6974, %r6973};
	shf.l.wrap.b32 	%r6975, %r6971, %r6972, 3;
	shf.l.wrap.b32 	%r6976, %r6972, %r6971, 3;
	mov.b64 	%rd10163, {%r6976, %r6975};
	xor.b64  	%rd10164, %rd10162, %rd10163;
	shr.u64 	%rd10165, %rd10100, 6;
	xor.b64  	%rd10166, %rd10164, %rd10165;
	shf.r.wrap.b32 	%r6977, %r6612, %r6611, 1;
	shf.r.wrap.b32 	%r6978, %r6611, %r6612, 1;
	mov.b64 	%rd10167, {%r6978, %r6977};
	shf.r.wrap.b32 	%r6979, %r6612, %r6611, 8;
	shf.r.wrap.b32 	%r6980, %r6611, %r6612, 8;
	mov.b64 	%rd10168, {%r6980, %r6979};
	xor.b64  	%rd10169, %rd10167, %rd10168;
	shr.u64 	%rd10170, %rd9619, 7;
	xor.b64  	%rd10171, %rd10169, %rd10170;
	add.s64 	%rd10172, %rd10171, %rd12062;
	add.s64 	%rd10173, %rd10172, %rd9915;
	add.s64 	%rd10174, %rd10173, %rd10166;
	add.s64 	%rd10175, %rd10174, %rd10039;
	xor.b64  	%rd10176, %rd10113, %rd10076;
	and.b64  	%rd10177, %rd10150, %rd10176;
	xor.b64  	%rd10178, %rd10177, %rd10076;
	add.s64 	%rd10179, %rd10175, %rd10178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6981,%dummy}, %rd10150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6982}, %rd10150;
	}
	shf.r.wrap.b32 	%r6983, %r6982, %r6981, 14;
	shf.r.wrap.b32 	%r6984, %r6981, %r6982, 14;
	mov.b64 	%rd10180, {%r6984, %r6983};
	shf.r.wrap.b32 	%r6985, %r6982, %r6981, 18;
	shf.r.wrap.b32 	%r6986, %r6981, %r6982, 18;
	mov.b64 	%rd10181, {%r6986, %r6985};
	xor.b64  	%rd10182, %rd10180, %rd10181;
	shf.l.wrap.b32 	%r6987, %r6981, %r6982, 23;
	shf.l.wrap.b32 	%r6988, %r6982, %r6981, 23;
	mov.b64 	%rd10183, {%r6988, %r6987};
	xor.b64  	%rd10184, %rd10182, %rd10183;
	add.s64 	%rd10185, %rd10179, %rd10184;
	add.s64 	%rd10186, %rd10185, 1452737877330783856;
	add.s64 	%rd10187, %rd10186, %rd10050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6989,%dummy}, %rd10161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6990}, %rd10161;
	}
	shf.r.wrap.b32 	%r6991, %r6990, %r6989, 28;
	shf.r.wrap.b32 	%r6992, %r6989, %r6990, 28;
	mov.b64 	%rd10188, {%r6992, %r6991};
	shf.l.wrap.b32 	%r6993, %r6989, %r6990, 30;
	shf.l.wrap.b32 	%r6994, %r6990, %r6989, 30;
	mov.b64 	%rd10189, {%r6994, %r6993};
	xor.b64  	%rd10190, %rd10188, %rd10189;
	shf.l.wrap.b32 	%r6995, %r6989, %r6990, 25;
	shf.l.wrap.b32 	%r6996, %r6990, %r6989, 25;
	mov.b64 	%rd10191, {%r6996, %r6995};
	xor.b64  	%rd10192, %rd10190, %rd10191;
	and.b64  	%rd10193, %rd10161, %rd10124;
	or.b64  	%rd10194, %rd10161, %rd10124;
	and.b64  	%rd10195, %rd10194, %rd10087;
	or.b64  	%rd10196, %rd10195, %rd10193;
	add.s64 	%rd10197, %rd10196, %rd10192;
	add.s64 	%rd10198, %rd10197, %rd10186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6997,%dummy}, %rd10137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6998}, %rd10137;
	}
	shf.r.wrap.b32 	%r6999, %r6998, %r6997, 19;
	shf.r.wrap.b32 	%r7000, %r6997, %r6998, 19;
	mov.b64 	%rd10199, {%r7000, %r6999};
	shf.l.wrap.b32 	%r7001, %r6997, %r6998, 3;
	shf.l.wrap.b32 	%r7002, %r6998, %r6997, 3;
	mov.b64 	%rd10200, {%r7002, %r7001};
	xor.b64  	%rd10201, %rd10199, %rd10200;
	shr.u64 	%rd10202, %rd10137, 6;
	xor.b64  	%rd10203, %rd10201, %rd10202;
	shf.r.wrap.b32 	%r7003, %r6640, %r6639, 1;
	shf.r.wrap.b32 	%r7004, %r6639, %r6640, 1;
	mov.b64 	%rd10204, {%r7004, %r7003};
	shf.r.wrap.b32 	%r7005, %r6640, %r6639, 8;
	shf.r.wrap.b32 	%r7006, %r6639, %r6640, 8;
	mov.b64 	%rd10205, {%r7006, %r7005};
	xor.b64  	%rd10206, %rd10204, %rd10205;
	shr.u64 	%rd10207, %rd9656, 7;
	xor.b64  	%rd10208, %rd10206, %rd10207;
	add.s64 	%rd10209, %rd10208, %rd9619;
	add.s64 	%rd10210, %rd10209, %rd9952;
	add.s64 	%rd10211, %rd10210, %rd10203;
	add.s64 	%rd10212, %rd10211, %rd10076;
	xor.b64  	%rd10213, %rd10150, %rd10113;
	and.b64  	%rd10214, %rd10187, %rd10213;
	xor.b64  	%rd10215, %rd10214, %rd10113;
	add.s64 	%rd10216, %rd10212, %rd10215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7007,%dummy}, %rd10187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7008}, %rd10187;
	}
	shf.r.wrap.b32 	%r7009, %r7008, %r7007, 14;
	shf.r.wrap.b32 	%r7010, %r7007, %r7008, 14;
	mov.b64 	%rd10217, {%r7010, %r7009};
	shf.r.wrap.b32 	%r7011, %r7008, %r7007, 18;
	shf.r.wrap.b32 	%r7012, %r7007, %r7008, 18;
	mov.b64 	%rd10218, {%r7012, %r7011};
	xor.b64  	%rd10219, %rd10217, %rd10218;
	shf.l.wrap.b32 	%r7013, %r7007, %r7008, 23;
	shf.l.wrap.b32 	%r7014, %r7008, %r7007, 23;
	mov.b64 	%rd10220, {%r7014, %r7013};
	xor.b64  	%rd10221, %rd10219, %rd10220;
	add.s64 	%rd10222, %rd10216, %rd10221;
	add.s64 	%rd10223, %rd10222, 2861767655752347644;
	add.s64 	%rd10224, %rd10223, %rd10087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7015,%dummy}, %rd10198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7016}, %rd10198;
	}
	shf.r.wrap.b32 	%r7017, %r7016, %r7015, 28;
	shf.r.wrap.b32 	%r7018, %r7015, %r7016, 28;
	mov.b64 	%rd10225, {%r7018, %r7017};
	shf.l.wrap.b32 	%r7019, %r7015, %r7016, 30;
	shf.l.wrap.b32 	%r7020, %r7016, %r7015, 30;
	mov.b64 	%rd10226, {%r7020, %r7019};
	xor.b64  	%rd10227, %rd10225, %rd10226;
	shf.l.wrap.b32 	%r7021, %r7015, %r7016, 25;
	shf.l.wrap.b32 	%r7022, %r7016, %r7015, 25;
	mov.b64 	%rd10228, {%r7022, %r7021};
	xor.b64  	%rd10229, %rd10227, %rd10228;
	and.b64  	%rd10230, %rd10198, %rd10161;
	or.b64  	%rd10231, %rd10198, %rd10161;
	and.b64  	%rd10232, %rd10231, %rd10124;
	or.b64  	%rd10233, %rd10232, %rd10230;
	add.s64 	%rd10234, %rd10233, %rd10229;
	add.s64 	%rd10235, %rd10234, %rd10223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7023,%dummy}, %rd10174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7024}, %rd10174;
	}
	shf.r.wrap.b32 	%r7025, %r7024, %r7023, 19;
	shf.r.wrap.b32 	%r7026, %r7023, %r7024, 19;
	mov.b64 	%rd10236, {%r7026, %r7025};
	shf.l.wrap.b32 	%r7027, %r7023, %r7024, 3;
	shf.l.wrap.b32 	%r7028, %r7024, %r7023, 3;
	mov.b64 	%rd10237, {%r7028, %r7027};
	xor.b64  	%rd10238, %rd10236, %rd10237;
	shr.u64 	%rd10239, %rd10174, 6;
	xor.b64  	%rd10240, %rd10238, %rd10239;
	shf.r.wrap.b32 	%r7029, %r6668, %r6667, 1;
	shf.r.wrap.b32 	%r7030, %r6667, %r6668, 1;
	mov.b64 	%rd10241, {%r7030, %r7029};
	shf.r.wrap.b32 	%r7031, %r6668, %r6667, 8;
	shf.r.wrap.b32 	%r7032, %r6667, %r6668, 8;
	mov.b64 	%rd10242, {%r7032, %r7031};
	xor.b64  	%rd10243, %rd10241, %rd10242;
	shr.u64 	%rd10244, %rd9693, 7;
	xor.b64  	%rd10245, %rd10243, %rd10244;
	add.s64 	%rd10246, %rd10245, %rd9656;
	add.s64 	%rd10247, %rd10246, %rd9989;
	add.s64 	%rd10248, %rd10247, %rd10240;
	add.s64 	%rd10249, %rd10248, %rd10113;
	xor.b64  	%rd10250, %rd10187, %rd10150;
	and.b64  	%rd10251, %rd10224, %rd10250;
	xor.b64  	%rd10252, %rd10251, %rd10150;
	add.s64 	%rd10253, %rd10249, %rd10252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7033,%dummy}, %rd10224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7034}, %rd10224;
	}
	shf.r.wrap.b32 	%r7035, %r7034, %r7033, 14;
	shf.r.wrap.b32 	%r7036, %r7033, %r7034, 14;
	mov.b64 	%rd10254, {%r7036, %r7035};
	shf.r.wrap.b32 	%r7037, %r7034, %r7033, 18;
	shf.r.wrap.b32 	%r7038, %r7033, %r7034, 18;
	mov.b64 	%rd10255, {%r7038, %r7037};
	xor.b64  	%rd10256, %rd10254, %rd10255;
	shf.l.wrap.b32 	%r7039, %r7033, %r7034, 23;
	shf.l.wrap.b32 	%r7040, %r7034, %r7033, 23;
	mov.b64 	%rd10257, {%r7040, %r7039};
	xor.b64  	%rd10258, %rd10256, %rd10257;
	add.s64 	%rd10259, %rd10253, %rd10258;
	add.s64 	%rd10260, %rd10259, 3322285676063803686;
	add.s64 	%rd10261, %rd10260, %rd10124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7041,%dummy}, %rd10235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7042}, %rd10235;
	}
	shf.r.wrap.b32 	%r7043, %r7042, %r7041, 28;
	shf.r.wrap.b32 	%r7044, %r7041, %r7042, 28;
	mov.b64 	%rd10262, {%r7044, %r7043};
	shf.l.wrap.b32 	%r7045, %r7041, %r7042, 30;
	shf.l.wrap.b32 	%r7046, %r7042, %r7041, 30;
	mov.b64 	%rd10263, {%r7046, %r7045};
	xor.b64  	%rd10264, %rd10262, %rd10263;
	shf.l.wrap.b32 	%r7047, %r7041, %r7042, 25;
	shf.l.wrap.b32 	%r7048, %r7042, %r7041, 25;
	mov.b64 	%rd10265, {%r7048, %r7047};
	xor.b64  	%rd10266, %rd10264, %rd10265;
	and.b64  	%rd10267, %rd10235, %rd10198;
	or.b64  	%rd10268, %rd10235, %rd10198;
	and.b64  	%rd10269, %rd10268, %rd10161;
	or.b64  	%rd10270, %rd10269, %rd10267;
	add.s64 	%rd10271, %rd10270, %rd10266;
	add.s64 	%rd10272, %rd10271, %rd10260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7049,%dummy}, %rd10211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7050}, %rd10211;
	}
	shf.r.wrap.b32 	%r7051, %r7050, %r7049, 19;
	shf.r.wrap.b32 	%r7052, %r7049, %r7050, 19;
	mov.b64 	%rd10273, {%r7052, %r7051};
	shf.l.wrap.b32 	%r7053, %r7049, %r7050, 3;
	shf.l.wrap.b32 	%r7054, %r7050, %r7049, 3;
	mov.b64 	%rd10274, {%r7054, %r7053};
	xor.b64  	%rd10275, %rd10273, %rd10274;
	shr.u64 	%rd10276, %rd10211, 6;
	xor.b64  	%rd10277, %rd10275, %rd10276;
	shf.r.wrap.b32 	%r7055, %r6696, %r6695, 1;
	shf.r.wrap.b32 	%r7056, %r6695, %r6696, 1;
	mov.b64 	%rd10278, {%r7056, %r7055};
	shf.r.wrap.b32 	%r7057, %r6696, %r6695, 8;
	shf.r.wrap.b32 	%r7058, %r6695, %r6696, 8;
	mov.b64 	%rd10279, {%r7058, %r7057};
	xor.b64  	%rd10280, %rd10278, %rd10279;
	shr.u64 	%rd10281, %rd9730, 7;
	xor.b64  	%rd10282, %rd10280, %rd10281;
	add.s64 	%rd10283, %rd10282, %rd9693;
	add.s64 	%rd10284, %rd10283, %rd10026;
	add.s64 	%rd10285, %rd10284, %rd10277;
	add.s64 	%rd10286, %rd10285, %rd10150;
	xor.b64  	%rd10287, %rd10224, %rd10187;
	and.b64  	%rd10288, %rd10261, %rd10287;
	xor.b64  	%rd10289, %rd10288, %rd10187;
	add.s64 	%rd10290, %rd10286, %rd10289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7059,%dummy}, %rd10261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7060}, %rd10261;
	}
	shf.r.wrap.b32 	%r7061, %r7060, %r7059, 14;
	shf.r.wrap.b32 	%r7062, %r7059, %r7060, 14;
	mov.b64 	%rd10291, {%r7062, %r7061};
	shf.r.wrap.b32 	%r7063, %r7060, %r7059, 18;
	shf.r.wrap.b32 	%r7064, %r7059, %r7060, 18;
	mov.b64 	%rd10292, {%r7064, %r7063};
	xor.b64  	%rd10293, %rd10291, %rd10292;
	shf.l.wrap.b32 	%r7065, %r7059, %r7060, 23;
	shf.l.wrap.b32 	%r7066, %r7060, %r7059, 23;
	mov.b64 	%rd10294, {%r7066, %r7065};
	xor.b64  	%rd10295, %rd10293, %rd10294;
	add.s64 	%rd10296, %rd10290, %rd10295;
	add.s64 	%rd10297, %rd10296, 5560940570517711597;
	add.s64 	%rd10298, %rd10297, %rd10161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7067,%dummy}, %rd10272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7068}, %rd10272;
	}
	shf.r.wrap.b32 	%r7069, %r7068, %r7067, 28;
	shf.r.wrap.b32 	%r7070, %r7067, %r7068, 28;
	mov.b64 	%rd10299, {%r7070, %r7069};
	shf.l.wrap.b32 	%r7071, %r7067, %r7068, 30;
	shf.l.wrap.b32 	%r7072, %r7068, %r7067, 30;
	mov.b64 	%rd10300, {%r7072, %r7071};
	xor.b64  	%rd10301, %rd10299, %rd10300;
	shf.l.wrap.b32 	%r7073, %r7067, %r7068, 25;
	shf.l.wrap.b32 	%r7074, %r7068, %r7067, 25;
	mov.b64 	%rd10302, {%r7074, %r7073};
	xor.b64  	%rd10303, %rd10301, %rd10302;
	and.b64  	%rd10304, %rd10272, %rd10235;
	or.b64  	%rd10305, %rd10272, %rd10235;
	and.b64  	%rd10306, %rd10305, %rd10198;
	or.b64  	%rd10307, %rd10306, %rd10304;
	add.s64 	%rd10308, %rd10307, %rd10303;
	add.s64 	%rd10309, %rd10308, %rd10297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7075,%dummy}, %rd10248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7076}, %rd10248;
	}
	shf.r.wrap.b32 	%r7077, %r7076, %r7075, 19;
	shf.r.wrap.b32 	%r7078, %r7075, %r7076, 19;
	mov.b64 	%rd10310, {%r7078, %r7077};
	shf.l.wrap.b32 	%r7079, %r7075, %r7076, 3;
	shf.l.wrap.b32 	%r7080, %r7076, %r7075, 3;
	mov.b64 	%rd10311, {%r7080, %r7079};
	xor.b64  	%rd10312, %rd10310, %rd10311;
	shr.u64 	%rd10313, %rd10248, 6;
	xor.b64  	%rd10314, %rd10312, %rd10313;
	shf.r.wrap.b32 	%r7081, %r6724, %r6723, 1;
	shf.r.wrap.b32 	%r7082, %r6723, %r6724, 1;
	mov.b64 	%rd10315, {%r7082, %r7081};
	shf.r.wrap.b32 	%r7083, %r6724, %r6723, 8;
	shf.r.wrap.b32 	%r7084, %r6723, %r6724, 8;
	mov.b64 	%rd10316, {%r7084, %r7083};
	xor.b64  	%rd10317, %rd10315, %rd10316;
	shr.u64 	%rd10318, %rd9767, 7;
	xor.b64  	%rd10319, %rd10317, %rd10318;
	add.s64 	%rd10320, %rd10319, %rd9730;
	add.s64 	%rd10321, %rd10320, %rd10063;
	add.s64 	%rd10322, %rd10321, %rd10314;
	add.s64 	%rd10323, %rd10322, %rd10187;
	xor.b64  	%rd10324, %rd10261, %rd10224;
	and.b64  	%rd10325, %rd10298, %rd10324;
	xor.b64  	%rd10326, %rd10325, %rd10224;
	add.s64 	%rd10327, %rd10323, %rd10326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7085,%dummy}, %rd10298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7086}, %rd10298;
	}
	shf.r.wrap.b32 	%r7087, %r7086, %r7085, 14;
	shf.r.wrap.b32 	%r7088, %r7085, %r7086, 14;
	mov.b64 	%rd10328, {%r7088, %r7087};
	shf.r.wrap.b32 	%r7089, %r7086, %r7085, 18;
	shf.r.wrap.b32 	%r7090, %r7085, %r7086, 18;
	mov.b64 	%rd10329, {%r7090, %r7089};
	xor.b64  	%rd10330, %rd10328, %rd10329;
	shf.l.wrap.b32 	%r7091, %r7085, %r7086, 23;
	shf.l.wrap.b32 	%r7092, %r7086, %r7085, 23;
	mov.b64 	%rd10331, {%r7092, %r7091};
	xor.b64  	%rd10332, %rd10330, %rd10331;
	add.s64 	%rd10333, %rd10327, %rd10332;
	add.s64 	%rd10334, %rd10333, 5996557281743188959;
	add.s64 	%rd10335, %rd10334, %rd10198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd10309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7094}, %rd10309;
	}
	shf.r.wrap.b32 	%r7095, %r7094, %r7093, 28;
	shf.r.wrap.b32 	%r7096, %r7093, %r7094, 28;
	mov.b64 	%rd10336, {%r7096, %r7095};
	shf.l.wrap.b32 	%r7097, %r7093, %r7094, 30;
	shf.l.wrap.b32 	%r7098, %r7094, %r7093, 30;
	mov.b64 	%rd10337, {%r7098, %r7097};
	xor.b64  	%rd10338, %rd10336, %rd10337;
	shf.l.wrap.b32 	%r7099, %r7093, %r7094, 25;
	shf.l.wrap.b32 	%r7100, %r7094, %r7093, 25;
	mov.b64 	%rd10339, {%r7100, %r7099};
	xor.b64  	%rd10340, %rd10338, %rd10339;
	and.b64  	%rd10341, %rd10309, %rd10272;
	or.b64  	%rd10342, %rd10309, %rd10272;
	and.b64  	%rd10343, %rd10342, %rd10235;
	or.b64  	%rd10344, %rd10343, %rd10341;
	add.s64 	%rd10345, %rd10344, %rd10340;
	add.s64 	%rd10346, %rd10345, %rd10334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7101,%dummy}, %rd10285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7102}, %rd10285;
	}
	shf.r.wrap.b32 	%r7103, %r7102, %r7101, 19;
	shf.r.wrap.b32 	%r7104, %r7101, %r7102, 19;
	mov.b64 	%rd10347, {%r7104, %r7103};
	shf.l.wrap.b32 	%r7105, %r7101, %r7102, 3;
	shf.l.wrap.b32 	%r7106, %r7102, %r7101, 3;
	mov.b64 	%rd10348, {%r7106, %r7105};
	xor.b64  	%rd10349, %rd10347, %rd10348;
	shr.u64 	%rd10350, %rd10285, 6;
	xor.b64  	%rd10351, %rd10349, %rd10350;
	shf.r.wrap.b32 	%r7107, %r6752, %r6751, 1;
	shf.r.wrap.b32 	%r7108, %r6751, %r6752, 1;
	mov.b64 	%rd10352, {%r7108, %r7107};
	shf.r.wrap.b32 	%r7109, %r6752, %r6751, 8;
	shf.r.wrap.b32 	%r7110, %r6751, %r6752, 8;
	mov.b64 	%rd10353, {%r7110, %r7109};
	xor.b64  	%rd10354, %rd10352, %rd10353;
	shr.u64 	%rd10355, %rd9804, 7;
	xor.b64  	%rd10356, %rd10354, %rd10355;
	add.s64 	%rd10357, %rd10356, %rd9767;
	add.s64 	%rd10358, %rd10357, %rd10100;
	add.s64 	%rd10359, %rd10358, %rd10351;
	add.s64 	%rd10360, %rd10359, %rd10224;
	xor.b64  	%rd10361, %rd10298, %rd10261;
	and.b64  	%rd10362, %rd10335, %rd10361;
	xor.b64  	%rd10363, %rd10362, %rd10261;
	add.s64 	%rd10364, %rd10360, %rd10363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7111,%dummy}, %rd10335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7112}, %rd10335;
	}
	shf.r.wrap.b32 	%r7113, %r7112, %r7111, 14;
	shf.r.wrap.b32 	%r7114, %r7111, %r7112, 14;
	mov.b64 	%rd10365, {%r7114, %r7113};
	shf.r.wrap.b32 	%r7115, %r7112, %r7111, 18;
	shf.r.wrap.b32 	%r7116, %r7111, %r7112, 18;
	mov.b64 	%rd10366, {%r7116, %r7115};
	xor.b64  	%rd10367, %rd10365, %rd10366;
	shf.l.wrap.b32 	%r7117, %r7111, %r7112, 23;
	shf.l.wrap.b32 	%r7118, %r7112, %r7111, 23;
	mov.b64 	%rd10368, {%r7118, %r7117};
	xor.b64  	%rd10369, %rd10367, %rd10368;
	add.s64 	%rd10370, %rd10364, %rd10369;
	add.s64 	%rd10371, %rd10370, 7280758554555802590;
	add.s64 	%rd10372, %rd10371, %rd10235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7119,%dummy}, %rd10346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7120}, %rd10346;
	}
	shf.r.wrap.b32 	%r7121, %r7120, %r7119, 28;
	shf.r.wrap.b32 	%r7122, %r7119, %r7120, 28;
	mov.b64 	%rd10373, {%r7122, %r7121};
	shf.l.wrap.b32 	%r7123, %r7119, %r7120, 30;
	shf.l.wrap.b32 	%r7124, %r7120, %r7119, 30;
	mov.b64 	%rd10374, {%r7124, %r7123};
	xor.b64  	%rd10375, %rd10373, %rd10374;
	shf.l.wrap.b32 	%r7125, %r7119, %r7120, 25;
	shf.l.wrap.b32 	%r7126, %r7120, %r7119, 25;
	mov.b64 	%rd10376, {%r7126, %r7125};
	xor.b64  	%rd10377, %rd10375, %rd10376;
	and.b64  	%rd10378, %rd10346, %rd10309;
	or.b64  	%rd10379, %rd10346, %rd10309;
	and.b64  	%rd10380, %rd10379, %rd10272;
	or.b64  	%rd10381, %rd10380, %rd10378;
	add.s64 	%rd10382, %rd10381, %rd10377;
	add.s64 	%rd10383, %rd10382, %rd10371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7127,%dummy}, %rd10322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7128}, %rd10322;
	}
	shf.r.wrap.b32 	%r7129, %r7128, %r7127, 19;
	shf.r.wrap.b32 	%r7130, %r7127, %r7128, 19;
	mov.b64 	%rd10384, {%r7130, %r7129};
	shf.l.wrap.b32 	%r7131, %r7127, %r7128, 3;
	shf.l.wrap.b32 	%r7132, %r7128, %r7127, 3;
	mov.b64 	%rd10385, {%r7132, %r7131};
	xor.b64  	%rd10386, %rd10384, %rd10385;
	shr.u64 	%rd10387, %rd10322, 6;
	xor.b64  	%rd10388, %rd10386, %rd10387;
	shf.r.wrap.b32 	%r7133, %r6780, %r6779, 1;
	shf.r.wrap.b32 	%r7134, %r6779, %r6780, 1;
	mov.b64 	%rd10389, {%r7134, %r7133};
	shf.r.wrap.b32 	%r7135, %r6780, %r6779, 8;
	shf.r.wrap.b32 	%r7136, %r6779, %r6780, 8;
	mov.b64 	%rd10390, {%r7136, %r7135};
	xor.b64  	%rd10391, %rd10389, %rd10390;
	shr.u64 	%rd10392, %rd9841, 7;
	xor.b64  	%rd10393, %rd10391, %rd10392;
	add.s64 	%rd10394, %rd10393, %rd9804;
	add.s64 	%rd10395, %rd10394, %rd10137;
	add.s64 	%rd10396, %rd10395, %rd10388;
	add.s64 	%rd10397, %rd10396, %rd10261;
	xor.b64  	%rd10398, %rd10335, %rd10298;
	and.b64  	%rd10399, %rd10372, %rd10398;
	xor.b64  	%rd10400, %rd10399, %rd10298;
	add.s64 	%rd10401, %rd10397, %rd10400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7137,%dummy}, %rd10372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7138}, %rd10372;
	}
	shf.r.wrap.b32 	%r7139, %r7138, %r7137, 14;
	shf.r.wrap.b32 	%r7140, %r7137, %r7138, 14;
	mov.b64 	%rd10402, {%r7140, %r7139};
	shf.r.wrap.b32 	%r7141, %r7138, %r7137, 18;
	shf.r.wrap.b32 	%r7142, %r7137, %r7138, 18;
	mov.b64 	%rd10403, {%r7142, %r7141};
	xor.b64  	%rd10404, %rd10402, %rd10403;
	shf.l.wrap.b32 	%r7143, %r7137, %r7138, 23;
	shf.l.wrap.b32 	%r7144, %r7138, %r7137, 23;
	mov.b64 	%rd10405, {%r7144, %r7143};
	xor.b64  	%rd10406, %rd10404, %rd10405;
	add.s64 	%rd10407, %rd10401, %rd10406;
	add.s64 	%rd10408, %rd10407, 8532644243296465576;
	add.s64 	%rd10409, %rd10408, %rd10272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7145,%dummy}, %rd10383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7146}, %rd10383;
	}
	shf.r.wrap.b32 	%r7147, %r7146, %r7145, 28;
	shf.r.wrap.b32 	%r7148, %r7145, %r7146, 28;
	mov.b64 	%rd10410, {%r7148, %r7147};
	shf.l.wrap.b32 	%r7149, %r7145, %r7146, 30;
	shf.l.wrap.b32 	%r7150, %r7146, %r7145, 30;
	mov.b64 	%rd10411, {%r7150, %r7149};
	xor.b64  	%rd10412, %rd10410, %rd10411;
	shf.l.wrap.b32 	%r7151, %r7145, %r7146, 25;
	shf.l.wrap.b32 	%r7152, %r7146, %r7145, 25;
	mov.b64 	%rd10413, {%r7152, %r7151};
	xor.b64  	%rd10414, %rd10412, %rd10413;
	and.b64  	%rd10415, %rd10383, %rd10346;
	or.b64  	%rd10416, %rd10383, %rd10346;
	and.b64  	%rd10417, %rd10416, %rd10309;
	or.b64  	%rd10418, %rd10417, %rd10415;
	add.s64 	%rd10419, %rd10418, %rd10414;
	add.s64 	%rd10420, %rd10419, %rd10408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7153,%dummy}, %rd10359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7154}, %rd10359;
	}
	shf.r.wrap.b32 	%r7155, %r7154, %r7153, 19;
	shf.r.wrap.b32 	%r7156, %r7153, %r7154, 19;
	mov.b64 	%rd10421, {%r7156, %r7155};
	shf.l.wrap.b32 	%r7157, %r7153, %r7154, 3;
	shf.l.wrap.b32 	%r7158, %r7154, %r7153, 3;
	mov.b64 	%rd10422, {%r7158, %r7157};
	xor.b64  	%rd10423, %rd10421, %rd10422;
	shr.u64 	%rd10424, %rd10359, 6;
	xor.b64  	%rd10425, %rd10423, %rd10424;
	shf.r.wrap.b32 	%r7159, %r6808, %r6807, 1;
	shf.r.wrap.b32 	%r7160, %r6807, %r6808, 1;
	mov.b64 	%rd10426, {%r7160, %r7159};
	shf.r.wrap.b32 	%r7161, %r6808, %r6807, 8;
	shf.r.wrap.b32 	%r7162, %r6807, %r6808, 8;
	mov.b64 	%rd10427, {%r7162, %r7161};
	xor.b64  	%rd10428, %rd10426, %rd10427;
	shr.u64 	%rd10429, %rd9878, 7;
	xor.b64  	%rd10430, %rd10428, %rd10429;
	add.s64 	%rd10431, %rd10430, %rd9841;
	add.s64 	%rd10432, %rd10431, %rd10174;
	add.s64 	%rd10433, %rd10432, %rd10425;
	add.s64 	%rd10434, %rd10433, %rd10298;
	xor.b64  	%rd10435, %rd10372, %rd10335;
	and.b64  	%rd10436, %rd10409, %rd10435;
	xor.b64  	%rd10437, %rd10436, %rd10335;
	add.s64 	%rd10438, %rd10434, %rd10437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7163,%dummy}, %rd10409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7164}, %rd10409;
	}
	shf.r.wrap.b32 	%r7165, %r7164, %r7163, 14;
	shf.r.wrap.b32 	%r7166, %r7163, %r7164, 14;
	mov.b64 	%rd10439, {%r7166, %r7165};
	shf.r.wrap.b32 	%r7167, %r7164, %r7163, 18;
	shf.r.wrap.b32 	%r7168, %r7163, %r7164, 18;
	mov.b64 	%rd10440, {%r7168, %r7167};
	xor.b64  	%rd10441, %rd10439, %rd10440;
	shf.l.wrap.b32 	%r7169, %r7163, %r7164, 23;
	shf.l.wrap.b32 	%r7170, %r7164, %r7163, 23;
	mov.b64 	%rd10442, {%r7170, %r7169};
	xor.b64  	%rd10443, %rd10441, %rd10442;
	add.s64 	%rd10444, %rd10438, %rd10443;
	add.s64 	%rd10445, %rd10444, -9096487096722542874;
	add.s64 	%rd10446, %rd10445, %rd10309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7171,%dummy}, %rd10420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7172}, %rd10420;
	}
	shf.r.wrap.b32 	%r7173, %r7172, %r7171, 28;
	shf.r.wrap.b32 	%r7174, %r7171, %r7172, 28;
	mov.b64 	%rd10447, {%r7174, %r7173};
	shf.l.wrap.b32 	%r7175, %r7171, %r7172, 30;
	shf.l.wrap.b32 	%r7176, %r7172, %r7171, 30;
	mov.b64 	%rd10448, {%r7176, %r7175};
	xor.b64  	%rd10449, %rd10447, %rd10448;
	shf.l.wrap.b32 	%r7177, %r7171, %r7172, 25;
	shf.l.wrap.b32 	%r7178, %r7172, %r7171, 25;
	mov.b64 	%rd10450, {%r7178, %r7177};
	xor.b64  	%rd10451, %rd10449, %rd10450;
	and.b64  	%rd10452, %rd10420, %rd10383;
	or.b64  	%rd10453, %rd10420, %rd10383;
	and.b64  	%rd10454, %rd10453, %rd10346;
	or.b64  	%rd10455, %rd10454, %rd10452;
	add.s64 	%rd10456, %rd10455, %rd10451;
	add.s64 	%rd10457, %rd10456, %rd10445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7179,%dummy}, %rd10396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7180}, %rd10396;
	}
	shf.r.wrap.b32 	%r7181, %r7180, %r7179, 19;
	shf.r.wrap.b32 	%r7182, %r7179, %r7180, 19;
	mov.b64 	%rd10458, {%r7182, %r7181};
	shf.l.wrap.b32 	%r7183, %r7179, %r7180, 3;
	shf.l.wrap.b32 	%r7184, %r7180, %r7179, 3;
	mov.b64 	%rd10459, {%r7184, %r7183};
	xor.b64  	%rd10460, %rd10458, %rd10459;
	shr.u64 	%rd10461, %rd10396, 6;
	xor.b64  	%rd10462, %rd10460, %rd10461;
	shf.r.wrap.b32 	%r7185, %r6836, %r6835, 1;
	shf.r.wrap.b32 	%r7186, %r6835, %r6836, 1;
	mov.b64 	%rd10463, {%r7186, %r7185};
	shf.r.wrap.b32 	%r7187, %r6836, %r6835, 8;
	shf.r.wrap.b32 	%r7188, %r6835, %r6836, 8;
	mov.b64 	%rd10464, {%r7188, %r7187};
	xor.b64  	%rd10465, %rd10463, %rd10464;
	shr.u64 	%rd10466, %rd9915, 7;
	xor.b64  	%rd10467, %rd10465, %rd10466;
	add.s64 	%rd10468, %rd10467, %rd9878;
	add.s64 	%rd10469, %rd10468, %rd10211;
	add.s64 	%rd10470, %rd10469, %rd10462;
	add.s64 	%rd10471, %rd10470, %rd10335;
	xor.b64  	%rd10472, %rd10409, %rd10372;
	and.b64  	%rd10473, %rd10446, %rd10472;
	xor.b64  	%rd10474, %rd10473, %rd10372;
	add.s64 	%rd10475, %rd10471, %rd10474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7189,%dummy}, %rd10446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7190}, %rd10446;
	}
	shf.r.wrap.b32 	%r7191, %r7190, %r7189, 14;
	shf.r.wrap.b32 	%r7192, %r7189, %r7190, 14;
	mov.b64 	%rd10476, {%r7192, %r7191};
	shf.r.wrap.b32 	%r7193, %r7190, %r7189, 18;
	shf.r.wrap.b32 	%r7194, %r7189, %r7190, 18;
	mov.b64 	%rd10477, {%r7194, %r7193};
	xor.b64  	%rd10478, %rd10476, %rd10477;
	shf.l.wrap.b32 	%r7195, %r7189, %r7190, 23;
	shf.l.wrap.b32 	%r7196, %r7190, %r7189, 23;
	mov.b64 	%rd10479, {%r7196, %r7195};
	xor.b64  	%rd10480, %rd10478, %rd10479;
	add.s64 	%rd10481, %rd10475, %rd10480;
	add.s64 	%rd10482, %rd10481, -7894198246740708037;
	add.s64 	%rd10483, %rd10482, %rd10346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7197,%dummy}, %rd10457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7198}, %rd10457;
	}
	shf.r.wrap.b32 	%r7199, %r7198, %r7197, 28;
	shf.r.wrap.b32 	%r7200, %r7197, %r7198, 28;
	mov.b64 	%rd10484, {%r7200, %r7199};
	shf.l.wrap.b32 	%r7201, %r7197, %r7198, 30;
	shf.l.wrap.b32 	%r7202, %r7198, %r7197, 30;
	mov.b64 	%rd10485, {%r7202, %r7201};
	xor.b64  	%rd10486, %rd10484, %rd10485;
	shf.l.wrap.b32 	%r7203, %r7197, %r7198, 25;
	shf.l.wrap.b32 	%r7204, %r7198, %r7197, 25;
	mov.b64 	%rd10487, {%r7204, %r7203};
	xor.b64  	%rd10488, %rd10486, %rd10487;
	and.b64  	%rd10489, %rd10457, %rd10420;
	or.b64  	%rd10490, %rd10457, %rd10420;
	and.b64  	%rd10491, %rd10490, %rd10383;
	or.b64  	%rd10492, %rd10491, %rd10489;
	add.s64 	%rd10493, %rd10492, %rd10488;
	add.s64 	%rd10494, %rd10493, %rd10482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7205,%dummy}, %rd10433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7206}, %rd10433;
	}
	shf.r.wrap.b32 	%r7207, %r7206, %r7205, 19;
	shf.r.wrap.b32 	%r7208, %r7205, %r7206, 19;
	mov.b64 	%rd10495, {%r7208, %r7207};
	shf.l.wrap.b32 	%r7209, %r7205, %r7206, 3;
	shf.l.wrap.b32 	%r7210, %r7206, %r7205, 3;
	mov.b64 	%rd10496, {%r7210, %r7209};
	xor.b64  	%rd10497, %rd10495, %rd10496;
	shr.u64 	%rd10498, %rd10433, 6;
	xor.b64  	%rd10499, %rd10497, %rd10498;
	shf.r.wrap.b32 	%r7211, %r6864, %r6863, 1;
	shf.r.wrap.b32 	%r7212, %r6863, %r6864, 1;
	mov.b64 	%rd10500, {%r7212, %r7211};
	shf.r.wrap.b32 	%r7213, %r6864, %r6863, 8;
	shf.r.wrap.b32 	%r7214, %r6863, %r6864, 8;
	mov.b64 	%rd10501, {%r7214, %r7213};
	xor.b64  	%rd10502, %rd10500, %rd10501;
	shr.u64 	%rd10503, %rd9952, 7;
	xor.b64  	%rd10504, %rd10502, %rd10503;
	add.s64 	%rd10505, %rd10504, %rd9915;
	add.s64 	%rd10506, %rd10505, %rd10248;
	add.s64 	%rd10507, %rd10506, %rd10499;
	add.s64 	%rd10508, %rd10507, %rd10372;
	xor.b64  	%rd10509, %rd10446, %rd10409;
	and.b64  	%rd10510, %rd10483, %rd10509;
	xor.b64  	%rd10511, %rd10510, %rd10409;
	add.s64 	%rd10512, %rd10508, %rd10511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7215,%dummy}, %rd10483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7216}, %rd10483;
	}
	shf.r.wrap.b32 	%r7217, %r7216, %r7215, 14;
	shf.r.wrap.b32 	%r7218, %r7215, %r7216, 14;
	mov.b64 	%rd10513, {%r7218, %r7217};
	shf.r.wrap.b32 	%r7219, %r7216, %r7215, 18;
	shf.r.wrap.b32 	%r7220, %r7215, %r7216, 18;
	mov.b64 	%rd10514, {%r7220, %r7219};
	xor.b64  	%rd10515, %rd10513, %rd10514;
	shf.l.wrap.b32 	%r7221, %r7215, %r7216, 23;
	shf.l.wrap.b32 	%r7222, %r7216, %r7215, 23;
	mov.b64 	%rd10516, {%r7222, %r7221};
	xor.b64  	%rd10517, %rd10515, %rd10516;
	add.s64 	%rd10518, %rd10512, %rd10517;
	add.s64 	%rd10519, %rd10518, -6719396339535248540;
	add.s64 	%rd10520, %rd10519, %rd10383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7223,%dummy}, %rd10494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7224}, %rd10494;
	}
	shf.r.wrap.b32 	%r7225, %r7224, %r7223, 28;
	shf.r.wrap.b32 	%r7226, %r7223, %r7224, 28;
	mov.b64 	%rd10521, {%r7226, %r7225};
	shf.l.wrap.b32 	%r7227, %r7223, %r7224, 30;
	shf.l.wrap.b32 	%r7228, %r7224, %r7223, 30;
	mov.b64 	%rd10522, {%r7228, %r7227};
	xor.b64  	%rd10523, %rd10521, %rd10522;
	shf.l.wrap.b32 	%r7229, %r7223, %r7224, 25;
	shf.l.wrap.b32 	%r7230, %r7224, %r7223, 25;
	mov.b64 	%rd10524, {%r7230, %r7229};
	xor.b64  	%rd10525, %rd10523, %rd10524;
	and.b64  	%rd10526, %rd10494, %rd10457;
	or.b64  	%rd10527, %rd10494, %rd10457;
	and.b64  	%rd10528, %rd10527, %rd10420;
	or.b64  	%rd10529, %rd10528, %rd10526;
	add.s64 	%rd10530, %rd10529, %rd10525;
	add.s64 	%rd10531, %rd10530, %rd10519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7231,%dummy}, %rd10470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7232}, %rd10470;
	}
	shf.r.wrap.b32 	%r7233, %r7232, %r7231, 19;
	shf.r.wrap.b32 	%r7234, %r7231, %r7232, 19;
	mov.b64 	%rd10532, {%r7234, %r7233};
	shf.l.wrap.b32 	%r7235, %r7231, %r7232, 3;
	shf.l.wrap.b32 	%r7236, %r7232, %r7231, 3;
	mov.b64 	%rd10533, {%r7236, %r7235};
	xor.b64  	%rd10534, %rd10532, %rd10533;
	shr.u64 	%rd10535, %rd10470, 6;
	xor.b64  	%rd10536, %rd10534, %rd10535;
	shf.r.wrap.b32 	%r7237, %r6892, %r6891, 1;
	shf.r.wrap.b32 	%r7238, %r6891, %r6892, 1;
	mov.b64 	%rd10537, {%r7238, %r7237};
	shf.r.wrap.b32 	%r7239, %r6892, %r6891, 8;
	shf.r.wrap.b32 	%r7240, %r6891, %r6892, 8;
	mov.b64 	%rd10538, {%r7240, %r7239};
	xor.b64  	%rd10539, %rd10537, %rd10538;
	shr.u64 	%rd10540, %rd9989, 7;
	xor.b64  	%rd10541, %rd10539, %rd10540;
	add.s64 	%rd10542, %rd10541, %rd9952;
	add.s64 	%rd10543, %rd10542, %rd10285;
	add.s64 	%rd10544, %rd10543, %rd10536;
	add.s64 	%rd10545, %rd10544, %rd10409;
	xor.b64  	%rd10546, %rd10483, %rd10446;
	and.b64  	%rd10547, %rd10520, %rd10546;
	xor.b64  	%rd10548, %rd10547, %rd10446;
	add.s64 	%rd10549, %rd10545, %rd10548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7241,%dummy}, %rd10520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7242}, %rd10520;
	}
	shf.r.wrap.b32 	%r7243, %r7242, %r7241, 14;
	shf.r.wrap.b32 	%r7244, %r7241, %r7242, 14;
	mov.b64 	%rd10550, {%r7244, %r7243};
	shf.r.wrap.b32 	%r7245, %r7242, %r7241, 18;
	shf.r.wrap.b32 	%r7246, %r7241, %r7242, 18;
	mov.b64 	%rd10551, {%r7246, %r7245};
	xor.b64  	%rd10552, %rd10550, %rd10551;
	shf.l.wrap.b32 	%r7247, %r7241, %r7242, 23;
	shf.l.wrap.b32 	%r7248, %r7242, %r7241, 23;
	mov.b64 	%rd10553, {%r7248, %r7247};
	xor.b64  	%rd10554, %rd10552, %rd10553;
	add.s64 	%rd10555, %rd10549, %rd10554;
	add.s64 	%rd10556, %rd10555, -6333637450476146687;
	add.s64 	%rd10557, %rd10556, %rd10420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7249,%dummy}, %rd10531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7250}, %rd10531;
	}
	shf.r.wrap.b32 	%r7251, %r7250, %r7249, 28;
	shf.r.wrap.b32 	%r7252, %r7249, %r7250, 28;
	mov.b64 	%rd10558, {%r7252, %r7251};
	shf.l.wrap.b32 	%r7253, %r7249, %r7250, 30;
	shf.l.wrap.b32 	%r7254, %r7250, %r7249, 30;
	mov.b64 	%rd10559, {%r7254, %r7253};
	xor.b64  	%rd10560, %rd10558, %rd10559;
	shf.l.wrap.b32 	%r7255, %r7249, %r7250, 25;
	shf.l.wrap.b32 	%r7256, %r7250, %r7249, 25;
	mov.b64 	%rd10561, {%r7256, %r7255};
	xor.b64  	%rd10562, %rd10560, %rd10561;
	and.b64  	%rd10563, %rd10531, %rd10494;
	or.b64  	%rd10564, %rd10531, %rd10494;
	and.b64  	%rd10565, %rd10564, %rd10457;
	or.b64  	%rd10566, %rd10565, %rd10563;
	add.s64 	%rd10567, %rd10566, %rd10562;
	add.s64 	%rd10568, %rd10567, %rd10556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7257,%dummy}, %rd10507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7258}, %rd10507;
	}
	shf.r.wrap.b32 	%r7259, %r7258, %r7257, 19;
	shf.r.wrap.b32 	%r7260, %r7257, %r7258, 19;
	mov.b64 	%rd10569, {%r7260, %r7259};
	shf.l.wrap.b32 	%r7261, %r7257, %r7258, 3;
	shf.l.wrap.b32 	%r7262, %r7258, %r7257, 3;
	mov.b64 	%rd10570, {%r7262, %r7261};
	xor.b64  	%rd10571, %rd10569, %rd10570;
	shr.u64 	%rd10572, %rd10507, 6;
	xor.b64  	%rd10573, %rd10571, %rd10572;
	shf.r.wrap.b32 	%r7263, %r6920, %r6919, 1;
	shf.r.wrap.b32 	%r7264, %r6919, %r6920, 1;
	mov.b64 	%rd10574, {%r7264, %r7263};
	shf.r.wrap.b32 	%r7265, %r6920, %r6919, 8;
	shf.r.wrap.b32 	%r7266, %r6919, %r6920, 8;
	mov.b64 	%rd10575, {%r7266, %r7265};
	xor.b64  	%rd10576, %rd10574, %rd10575;
	shr.u64 	%rd10577, %rd10026, 7;
	xor.b64  	%rd10578, %rd10576, %rd10577;
	add.s64 	%rd10579, %rd10578, %rd9989;
	add.s64 	%rd10580, %rd10579, %rd10322;
	add.s64 	%rd10581, %rd10580, %rd10573;
	add.s64 	%rd10582, %rd10581, %rd10446;
	xor.b64  	%rd10583, %rd10520, %rd10483;
	and.b64  	%rd10584, %rd10557, %rd10583;
	xor.b64  	%rd10585, %rd10584, %rd10483;
	add.s64 	%rd10586, %rd10582, %rd10585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7267,%dummy}, %rd10557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7268}, %rd10557;
	}
	shf.r.wrap.b32 	%r7269, %r7268, %r7267, 14;
	shf.r.wrap.b32 	%r7270, %r7267, %r7268, 14;
	mov.b64 	%rd10587, {%r7270, %r7269};
	shf.r.wrap.b32 	%r7271, %r7268, %r7267, 18;
	shf.r.wrap.b32 	%r7272, %r7267, %r7268, 18;
	mov.b64 	%rd10588, {%r7272, %r7271};
	xor.b64  	%rd10589, %rd10587, %rd10588;
	shf.l.wrap.b32 	%r7273, %r7267, %r7268, 23;
	shf.l.wrap.b32 	%r7274, %r7268, %r7267, 23;
	mov.b64 	%rd10590, {%r7274, %r7273};
	xor.b64  	%rd10591, %rd10589, %rd10590;
	add.s64 	%rd10592, %rd10586, %rd10591;
	add.s64 	%rd10593, %rd10592, -4446306890439682159;
	add.s64 	%rd10594, %rd10593, %rd10457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7275,%dummy}, %rd10568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7276}, %rd10568;
	}
	shf.r.wrap.b32 	%r7277, %r7276, %r7275, 28;
	shf.r.wrap.b32 	%r7278, %r7275, %r7276, 28;
	mov.b64 	%rd10595, {%r7278, %r7277};
	shf.l.wrap.b32 	%r7279, %r7275, %r7276, 30;
	shf.l.wrap.b32 	%r7280, %r7276, %r7275, 30;
	mov.b64 	%rd10596, {%r7280, %r7279};
	xor.b64  	%rd10597, %rd10595, %rd10596;
	shf.l.wrap.b32 	%r7281, %r7275, %r7276, 25;
	shf.l.wrap.b32 	%r7282, %r7276, %r7275, 25;
	mov.b64 	%rd10598, {%r7282, %r7281};
	xor.b64  	%rd10599, %rd10597, %rd10598;
	and.b64  	%rd10600, %rd10568, %rd10531;
	or.b64  	%rd10601, %rd10568, %rd10531;
	and.b64  	%rd10602, %rd10601, %rd10494;
	or.b64  	%rd10603, %rd10602, %rd10600;
	add.s64 	%rd10604, %rd10603, %rd10599;
	add.s64 	%rd10605, %rd10604, %rd10593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7283,%dummy}, %rd10544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7284}, %rd10544;
	}
	shf.r.wrap.b32 	%r7285, %r7284, %r7283, 19;
	shf.r.wrap.b32 	%r7286, %r7283, %r7284, 19;
	mov.b64 	%rd10606, {%r7286, %r7285};
	shf.l.wrap.b32 	%r7287, %r7283, %r7284, 3;
	shf.l.wrap.b32 	%r7288, %r7284, %r7283, 3;
	mov.b64 	%rd10607, {%r7288, %r7287};
	xor.b64  	%rd10608, %rd10606, %rd10607;
	shr.u64 	%rd10609, %rd10544, 6;
	xor.b64  	%rd10610, %rd10608, %rd10609;
	shf.r.wrap.b32 	%r7289, %r6946, %r6945, 1;
	shf.r.wrap.b32 	%r7290, %r6945, %r6946, 1;
	mov.b64 	%rd10611, {%r7290, %r7289};
	shf.r.wrap.b32 	%r7291, %r6946, %r6945, 8;
	shf.r.wrap.b32 	%r7292, %r6945, %r6946, 8;
	mov.b64 	%rd10612, {%r7292, %r7291};
	xor.b64  	%rd10613, %rd10611, %rd10612;
	shr.u64 	%rd10614, %rd10063, 7;
	xor.b64  	%rd10615, %rd10613, %rd10614;
	add.s64 	%rd10616, %rd10615, %rd10026;
	add.s64 	%rd10617, %rd10616, %rd10359;
	add.s64 	%rd10618, %rd10617, %rd10610;
	add.s64 	%rd10619, %rd10618, %rd10483;
	xor.b64  	%rd10620, %rd10557, %rd10520;
	and.b64  	%rd10621, %rd10594, %rd10620;
	xor.b64  	%rd10622, %rd10621, %rd10520;
	add.s64 	%rd10623, %rd10619, %rd10622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7293,%dummy}, %rd10594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7294}, %rd10594;
	}
	shf.r.wrap.b32 	%r7295, %r7294, %r7293, 14;
	shf.r.wrap.b32 	%r7296, %r7293, %r7294, 14;
	mov.b64 	%rd10624, {%r7296, %r7295};
	shf.r.wrap.b32 	%r7297, %r7294, %r7293, 18;
	shf.r.wrap.b32 	%r7298, %r7293, %r7294, 18;
	mov.b64 	%rd10625, {%r7298, %r7297};
	xor.b64  	%rd10626, %rd10624, %rd10625;
	shf.l.wrap.b32 	%r7299, %r7293, %r7294, 23;
	shf.l.wrap.b32 	%r7300, %r7294, %r7293, 23;
	mov.b64 	%rd10627, {%r7300, %r7299};
	xor.b64  	%rd10628, %rd10626, %rd10627;
	add.s64 	%rd10629, %rd10623, %rd10628;
	add.s64 	%rd10630, %rd10629, -4076793802049405392;
	add.s64 	%rd10631, %rd10630, %rd10494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7301,%dummy}, %rd10605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7302}, %rd10605;
	}
	shf.r.wrap.b32 	%r7303, %r7302, %r7301, 28;
	shf.r.wrap.b32 	%r7304, %r7301, %r7302, 28;
	mov.b64 	%rd10632, {%r7304, %r7303};
	shf.l.wrap.b32 	%r7305, %r7301, %r7302, 30;
	shf.l.wrap.b32 	%r7306, %r7302, %r7301, 30;
	mov.b64 	%rd10633, {%r7306, %r7305};
	xor.b64  	%rd10634, %rd10632, %rd10633;
	shf.l.wrap.b32 	%r7307, %r7301, %r7302, 25;
	shf.l.wrap.b32 	%r7308, %r7302, %r7301, 25;
	mov.b64 	%rd10635, {%r7308, %r7307};
	xor.b64  	%rd10636, %rd10634, %rd10635;
	and.b64  	%rd10637, %rd10605, %rd10568;
	or.b64  	%rd10638, %rd10605, %rd10568;
	and.b64  	%rd10639, %rd10638, %rd10531;
	or.b64  	%rd10640, %rd10639, %rd10637;
	add.s64 	%rd10641, %rd10640, %rd10636;
	add.s64 	%rd10642, %rd10641, %rd10630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7309,%dummy}, %rd10581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7310}, %rd10581;
	}
	shf.r.wrap.b32 	%r7311, %r7310, %r7309, 19;
	shf.r.wrap.b32 	%r7312, %r7309, %r7310, 19;
	mov.b64 	%rd10643, {%r7312, %r7311};
	shf.l.wrap.b32 	%r7313, %r7309, %r7310, 3;
	shf.l.wrap.b32 	%r7314, %r7310, %r7309, 3;
	mov.b64 	%rd10644, {%r7314, %r7313};
	xor.b64  	%rd10645, %rd10643, %rd10644;
	shr.u64 	%rd10646, %rd10581, 6;
	xor.b64  	%rd10647, %rd10645, %rd10646;
	shf.r.wrap.b32 	%r7315, %r6972, %r6971, 1;
	shf.r.wrap.b32 	%r7316, %r6971, %r6972, 1;
	mov.b64 	%rd10648, {%r7316, %r7315};
	shf.r.wrap.b32 	%r7317, %r6972, %r6971, 8;
	shf.r.wrap.b32 	%r7318, %r6971, %r6972, 8;
	mov.b64 	%rd10649, {%r7318, %r7317};
	xor.b64  	%rd10650, %rd10648, %rd10649;
	shr.u64 	%rd10651, %rd10100, 7;
	xor.b64  	%rd10652, %rd10650, %rd10651;
	add.s64 	%rd10653, %rd10652, %rd10063;
	add.s64 	%rd10654, %rd10653, %rd10396;
	add.s64 	%rd10655, %rd10654, %rd10647;
	add.s64 	%rd10656, %rd10655, %rd10520;
	xor.b64  	%rd10657, %rd10594, %rd10557;
	and.b64  	%rd10658, %rd10631, %rd10657;
	xor.b64  	%rd10659, %rd10658, %rd10557;
	add.s64 	%rd10660, %rd10656, %rd10659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7319,%dummy}, %rd10631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7320}, %rd10631;
	}
	shf.r.wrap.b32 	%r7321, %r7320, %r7319, 14;
	shf.r.wrap.b32 	%r7322, %r7319, %r7320, 14;
	mov.b64 	%rd10661, {%r7322, %r7321};
	shf.r.wrap.b32 	%r7323, %r7320, %r7319, 18;
	shf.r.wrap.b32 	%r7324, %r7319, %r7320, 18;
	mov.b64 	%rd10662, {%r7324, %r7323};
	xor.b64  	%rd10663, %rd10661, %rd10662;
	shf.l.wrap.b32 	%r7325, %r7319, %r7320, 23;
	shf.l.wrap.b32 	%r7326, %r7320, %r7319, 23;
	mov.b64 	%rd10664, {%r7326, %r7325};
	xor.b64  	%rd10665, %rd10663, %rd10664;
	add.s64 	%rd10666, %rd10660, %rd10665;
	add.s64 	%rd10667, %rd10666, -3345356375505022440;
	add.s64 	%rd10668, %rd10667, %rd10531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7327,%dummy}, %rd10642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7328}, %rd10642;
	}
	shf.r.wrap.b32 	%r7329, %r7328, %r7327, 28;
	shf.r.wrap.b32 	%r7330, %r7327, %r7328, 28;
	mov.b64 	%rd10669, {%r7330, %r7329};
	shf.l.wrap.b32 	%r7331, %r7327, %r7328, 30;
	shf.l.wrap.b32 	%r7332, %r7328, %r7327, 30;
	mov.b64 	%rd10670, {%r7332, %r7331};
	xor.b64  	%rd10671, %rd10669, %rd10670;
	shf.l.wrap.b32 	%r7333, %r7327, %r7328, 25;
	shf.l.wrap.b32 	%r7334, %r7328, %r7327, 25;
	mov.b64 	%rd10672, {%r7334, %r7333};
	xor.b64  	%rd10673, %rd10671, %rd10672;
	and.b64  	%rd10674, %rd10642, %rd10605;
	or.b64  	%rd10675, %rd10642, %rd10605;
	and.b64  	%rd10676, %rd10675, %rd10568;
	or.b64  	%rd10677, %rd10676, %rd10674;
	add.s64 	%rd10678, %rd10677, %rd10673;
	add.s64 	%rd10679, %rd10678, %rd10667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7335,%dummy}, %rd10618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7336}, %rd10618;
	}
	shf.r.wrap.b32 	%r7337, %r7336, %r7335, 19;
	shf.r.wrap.b32 	%r7338, %r7335, %r7336, 19;
	mov.b64 	%rd10680, {%r7338, %r7337};
	shf.l.wrap.b32 	%r7339, %r7335, %r7336, 3;
	shf.l.wrap.b32 	%r7340, %r7336, %r7335, 3;
	mov.b64 	%rd10681, {%r7340, %r7339};
	xor.b64  	%rd10682, %rd10680, %rd10681;
	shr.u64 	%rd10683, %rd10618, 6;
	xor.b64  	%rd10684, %rd10682, %rd10683;
	shf.r.wrap.b32 	%r7341, %r6998, %r6997, 1;
	shf.r.wrap.b32 	%r7342, %r6997, %r6998, 1;
	mov.b64 	%rd10685, {%r7342, %r7341};
	shf.r.wrap.b32 	%r7343, %r6998, %r6997, 8;
	shf.r.wrap.b32 	%r7344, %r6997, %r6998, 8;
	mov.b64 	%rd10686, {%r7344, %r7343};
	xor.b64  	%rd10687, %rd10685, %rd10686;
	shr.u64 	%rd10688, %rd10137, 7;
	xor.b64  	%rd10689, %rd10687, %rd10688;
	add.s64 	%rd10690, %rd10689, %rd10100;
	add.s64 	%rd10691, %rd10690, %rd10433;
	add.s64 	%rd10692, %rd10691, %rd10684;
	add.s64 	%rd10693, %rd10692, %rd10557;
	xor.b64  	%rd10694, %rd10631, %rd10594;
	and.b64  	%rd10695, %rd10668, %rd10694;
	xor.b64  	%rd10696, %rd10695, %rd10594;
	add.s64 	%rd10697, %rd10693, %rd10696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7345,%dummy}, %rd10668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7346}, %rd10668;
	}
	shf.r.wrap.b32 	%r7347, %r7346, %r7345, 14;
	shf.r.wrap.b32 	%r7348, %r7345, %r7346, 14;
	mov.b64 	%rd10698, {%r7348, %r7347};
	shf.r.wrap.b32 	%r7349, %r7346, %r7345, 18;
	shf.r.wrap.b32 	%r7350, %r7345, %r7346, 18;
	mov.b64 	%rd10699, {%r7350, %r7349};
	xor.b64  	%rd10700, %rd10698, %rd10699;
	shf.l.wrap.b32 	%r7351, %r7345, %r7346, 23;
	shf.l.wrap.b32 	%r7352, %r7346, %r7345, 23;
	mov.b64 	%rd10701, {%r7352, %r7351};
	xor.b64  	%rd10702, %rd10700, %rd10701;
	add.s64 	%rd10703, %rd10697, %rd10702;
	add.s64 	%rd10704, %rd10703, -2983346525034927856;
	add.s64 	%rd10705, %rd10704, %rd10568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7353,%dummy}, %rd10679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7354}, %rd10679;
	}
	shf.r.wrap.b32 	%r7355, %r7354, %r7353, 28;
	shf.r.wrap.b32 	%r7356, %r7353, %r7354, 28;
	mov.b64 	%rd10706, {%r7356, %r7355};
	shf.l.wrap.b32 	%r7357, %r7353, %r7354, 30;
	shf.l.wrap.b32 	%r7358, %r7354, %r7353, 30;
	mov.b64 	%rd10707, {%r7358, %r7357};
	xor.b64  	%rd10708, %rd10706, %rd10707;
	shf.l.wrap.b32 	%r7359, %r7353, %r7354, 25;
	shf.l.wrap.b32 	%r7360, %r7354, %r7353, 25;
	mov.b64 	%rd10709, {%r7360, %r7359};
	xor.b64  	%rd10710, %rd10708, %rd10709;
	and.b64  	%rd10711, %rd10679, %rd10642;
	or.b64  	%rd10712, %rd10679, %rd10642;
	and.b64  	%rd10713, %rd10712, %rd10605;
	or.b64  	%rd10714, %rd10713, %rd10711;
	add.s64 	%rd10715, %rd10714, %rd10710;
	add.s64 	%rd10716, %rd10715, %rd10704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7361,%dummy}, %rd10655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7362}, %rd10655;
	}
	shf.r.wrap.b32 	%r7363, %r7362, %r7361, 19;
	shf.r.wrap.b32 	%r7364, %r7361, %r7362, 19;
	mov.b64 	%rd10717, {%r7364, %r7363};
	shf.l.wrap.b32 	%r7365, %r7361, %r7362, 3;
	shf.l.wrap.b32 	%r7366, %r7362, %r7361, 3;
	mov.b64 	%rd10718, {%r7366, %r7365};
	xor.b64  	%rd10719, %rd10717, %rd10718;
	shr.u64 	%rd10720, %rd10655, 6;
	xor.b64  	%rd10721, %rd10719, %rd10720;
	shf.r.wrap.b32 	%r7367, %r7024, %r7023, 1;
	shf.r.wrap.b32 	%r7368, %r7023, %r7024, 1;
	mov.b64 	%rd10722, {%r7368, %r7367};
	shf.r.wrap.b32 	%r7369, %r7024, %r7023, 8;
	shf.r.wrap.b32 	%r7370, %r7023, %r7024, 8;
	mov.b64 	%rd10723, {%r7370, %r7369};
	xor.b64  	%rd10724, %rd10722, %rd10723;
	shr.u64 	%rd10725, %rd10174, 7;
	xor.b64  	%rd10726, %rd10724, %rd10725;
	add.s64 	%rd10727, %rd10726, %rd10137;
	add.s64 	%rd10728, %rd10727, %rd10470;
	add.s64 	%rd10729, %rd10728, %rd10721;
	add.s64 	%rd10730, %rd10729, %rd10594;
	xor.b64  	%rd10731, %rd10668, %rd10631;
	and.b64  	%rd10732, %rd10705, %rd10731;
	xor.b64  	%rd10733, %rd10732, %rd10631;
	add.s64 	%rd10734, %rd10730, %rd10733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7371,%dummy}, %rd10705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7372}, %rd10705;
	}
	shf.r.wrap.b32 	%r7373, %r7372, %r7371, 14;
	shf.r.wrap.b32 	%r7374, %r7371, %r7372, 14;
	mov.b64 	%rd10735, {%r7374, %r7373};
	shf.r.wrap.b32 	%r7375, %r7372, %r7371, 18;
	shf.r.wrap.b32 	%r7376, %r7371, %r7372, 18;
	mov.b64 	%rd10736, {%r7376, %r7375};
	xor.b64  	%rd10737, %rd10735, %rd10736;
	shf.l.wrap.b32 	%r7377, %r7371, %r7372, 23;
	shf.l.wrap.b32 	%r7378, %r7372, %r7371, 23;
	mov.b64 	%rd10738, {%r7378, %r7377};
	xor.b64  	%rd10739, %rd10737, %rd10738;
	add.s64 	%rd10740, %rd10734, %rd10739;
	add.s64 	%rd10741, %rd10740, -860691631967231958;
	add.s64 	%rd10742, %rd10741, %rd10605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7379,%dummy}, %rd10716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7380}, %rd10716;
	}
	shf.r.wrap.b32 	%r7381, %r7380, %r7379, 28;
	shf.r.wrap.b32 	%r7382, %r7379, %r7380, 28;
	mov.b64 	%rd10743, {%r7382, %r7381};
	shf.l.wrap.b32 	%r7383, %r7379, %r7380, 30;
	shf.l.wrap.b32 	%r7384, %r7380, %r7379, 30;
	mov.b64 	%rd10744, {%r7384, %r7383};
	xor.b64  	%rd10745, %rd10743, %rd10744;
	shf.l.wrap.b32 	%r7385, %r7379, %r7380, 25;
	shf.l.wrap.b32 	%r7386, %r7380, %r7379, 25;
	mov.b64 	%rd10746, {%r7386, %r7385};
	xor.b64  	%rd10747, %rd10745, %rd10746;
	and.b64  	%rd10748, %rd10716, %rd10679;
	or.b64  	%rd10749, %rd10716, %rd10679;
	and.b64  	%rd10750, %rd10749, %rd10642;
	or.b64  	%rd10751, %rd10750, %rd10748;
	add.s64 	%rd10752, %rd10751, %rd10747;
	add.s64 	%rd10753, %rd10752, %rd10741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7387,%dummy}, %rd10692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7388}, %rd10692;
	}
	shf.r.wrap.b32 	%r7389, %r7388, %r7387, 19;
	shf.r.wrap.b32 	%r7390, %r7387, %r7388, 19;
	mov.b64 	%rd10754, {%r7390, %r7389};
	shf.l.wrap.b32 	%r7391, %r7387, %r7388, 3;
	shf.l.wrap.b32 	%r7392, %r7388, %r7387, 3;
	mov.b64 	%rd10755, {%r7392, %r7391};
	xor.b64  	%rd10756, %rd10754, %rd10755;
	shr.u64 	%rd10757, %rd10692, 6;
	xor.b64  	%rd10758, %rd10756, %rd10757;
	shf.r.wrap.b32 	%r7393, %r7050, %r7049, 1;
	shf.r.wrap.b32 	%r7394, %r7049, %r7050, 1;
	mov.b64 	%rd10759, {%r7394, %r7393};
	shf.r.wrap.b32 	%r7395, %r7050, %r7049, 8;
	shf.r.wrap.b32 	%r7396, %r7049, %r7050, 8;
	mov.b64 	%rd10760, {%r7396, %r7395};
	xor.b64  	%rd10761, %rd10759, %rd10760;
	shr.u64 	%rd10762, %rd10211, 7;
	xor.b64  	%rd10763, %rd10761, %rd10762;
	add.s64 	%rd10764, %rd10763, %rd10174;
	add.s64 	%rd10765, %rd10764, %rd10507;
	add.s64 	%rd10766, %rd10765, %rd10758;
	add.s64 	%rd10767, %rd10766, %rd10631;
	xor.b64  	%rd10768, %rd10705, %rd10668;
	and.b64  	%rd10769, %rd10742, %rd10768;
	xor.b64  	%rd10770, %rd10769, %rd10668;
	add.s64 	%rd10771, %rd10767, %rd10770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7397,%dummy}, %rd10742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7398}, %rd10742;
	}
	shf.r.wrap.b32 	%r7399, %r7398, %r7397, 14;
	shf.r.wrap.b32 	%r7400, %r7397, %r7398, 14;
	mov.b64 	%rd10772, {%r7400, %r7399};
	shf.r.wrap.b32 	%r7401, %r7398, %r7397, 18;
	shf.r.wrap.b32 	%r7402, %r7397, %r7398, 18;
	mov.b64 	%rd10773, {%r7402, %r7401};
	xor.b64  	%rd10774, %rd10772, %rd10773;
	shf.l.wrap.b32 	%r7403, %r7397, %r7398, 23;
	shf.l.wrap.b32 	%r7404, %r7398, %r7397, 23;
	mov.b64 	%rd10775, {%r7404, %r7403};
	xor.b64  	%rd10776, %rd10774, %rd10775;
	add.s64 	%rd10777, %rd10771, %rd10776;
	add.s64 	%rd10778, %rd10777, 1182934255886127544;
	add.s64 	%rd10779, %rd10778, %rd10642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7405,%dummy}, %rd10753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7406}, %rd10753;
	}
	shf.r.wrap.b32 	%r7407, %r7406, %r7405, 28;
	shf.r.wrap.b32 	%r7408, %r7405, %r7406, 28;
	mov.b64 	%rd10780, {%r7408, %r7407};
	shf.l.wrap.b32 	%r7409, %r7405, %r7406, 30;
	shf.l.wrap.b32 	%r7410, %r7406, %r7405, 30;
	mov.b64 	%rd10781, {%r7410, %r7409};
	xor.b64  	%rd10782, %rd10780, %rd10781;
	shf.l.wrap.b32 	%r7411, %r7405, %r7406, 25;
	shf.l.wrap.b32 	%r7412, %r7406, %r7405, 25;
	mov.b64 	%rd10783, {%r7412, %r7411};
	xor.b64  	%rd10784, %rd10782, %rd10783;
	and.b64  	%rd10785, %rd10753, %rd10716;
	or.b64  	%rd10786, %rd10753, %rd10716;
	and.b64  	%rd10787, %rd10786, %rd10679;
	or.b64  	%rd10788, %rd10787, %rd10785;
	add.s64 	%rd10789, %rd10788, %rd10784;
	add.s64 	%rd10790, %rd10789, %rd10778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7413,%dummy}, %rd10729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7414}, %rd10729;
	}
	shf.r.wrap.b32 	%r7415, %r7414, %r7413, 19;
	shf.r.wrap.b32 	%r7416, %r7413, %r7414, 19;
	mov.b64 	%rd10791, {%r7416, %r7415};
	shf.l.wrap.b32 	%r7417, %r7413, %r7414, 3;
	shf.l.wrap.b32 	%r7418, %r7414, %r7413, 3;
	mov.b64 	%rd10792, {%r7418, %r7417};
	xor.b64  	%rd10793, %rd10791, %rd10792;
	shr.u64 	%rd10794, %rd10729, 6;
	xor.b64  	%rd10795, %rd10793, %rd10794;
	shf.r.wrap.b32 	%r7419, %r7076, %r7075, 1;
	shf.r.wrap.b32 	%r7420, %r7075, %r7076, 1;
	mov.b64 	%rd10796, {%r7420, %r7419};
	shf.r.wrap.b32 	%r7421, %r7076, %r7075, 8;
	shf.r.wrap.b32 	%r7422, %r7075, %r7076, 8;
	mov.b64 	%rd10797, {%r7422, %r7421};
	xor.b64  	%rd10798, %rd10796, %rd10797;
	shr.u64 	%rd10799, %rd10248, 7;
	xor.b64  	%rd10800, %rd10798, %rd10799;
	add.s64 	%rd10801, %rd10800, %rd10211;
	add.s64 	%rd10802, %rd10801, %rd10544;
	add.s64 	%rd10803, %rd10802, %rd10795;
	add.s64 	%rd10804, %rd10803, %rd10668;
	xor.b64  	%rd10805, %rd10742, %rd10705;
	and.b64  	%rd10806, %rd10779, %rd10805;
	xor.b64  	%rd10807, %rd10806, %rd10705;
	add.s64 	%rd10808, %rd10804, %rd10807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7423,%dummy}, %rd10779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7424}, %rd10779;
	}
	shf.r.wrap.b32 	%r7425, %r7424, %r7423, 14;
	shf.r.wrap.b32 	%r7426, %r7423, %r7424, 14;
	mov.b64 	%rd10809, {%r7426, %r7425};
	shf.r.wrap.b32 	%r7427, %r7424, %r7423, 18;
	shf.r.wrap.b32 	%r7428, %r7423, %r7424, 18;
	mov.b64 	%rd10810, {%r7428, %r7427};
	xor.b64  	%rd10811, %rd10809, %rd10810;
	shf.l.wrap.b32 	%r7429, %r7423, %r7424, 23;
	shf.l.wrap.b32 	%r7430, %r7424, %r7423, 23;
	mov.b64 	%rd10812, {%r7430, %r7429};
	xor.b64  	%rd10813, %rd10811, %rd10812;
	add.s64 	%rd10814, %rd10808, %rd10813;
	add.s64 	%rd10815, %rd10814, 1847814050463011016;
	add.s64 	%rd10816, %rd10815, %rd10679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7431,%dummy}, %rd10790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7432}, %rd10790;
	}
	shf.r.wrap.b32 	%r7433, %r7432, %r7431, 28;
	shf.r.wrap.b32 	%r7434, %r7431, %r7432, 28;
	mov.b64 	%rd10817, {%r7434, %r7433};
	shf.l.wrap.b32 	%r7435, %r7431, %r7432, 30;
	shf.l.wrap.b32 	%r7436, %r7432, %r7431, 30;
	mov.b64 	%rd10818, {%r7436, %r7435};
	xor.b64  	%rd10819, %rd10817, %rd10818;
	shf.l.wrap.b32 	%r7437, %r7431, %r7432, 25;
	shf.l.wrap.b32 	%r7438, %r7432, %r7431, 25;
	mov.b64 	%rd10820, {%r7438, %r7437};
	xor.b64  	%rd10821, %rd10819, %rd10820;
	and.b64  	%rd10822, %rd10790, %rd10753;
	or.b64  	%rd10823, %rd10790, %rd10753;
	and.b64  	%rd10824, %rd10823, %rd10716;
	or.b64  	%rd10825, %rd10824, %rd10822;
	add.s64 	%rd10826, %rd10825, %rd10821;
	add.s64 	%rd10827, %rd10826, %rd10815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7439,%dummy}, %rd10766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7440}, %rd10766;
	}
	shf.r.wrap.b32 	%r7441, %r7440, %r7439, 19;
	shf.r.wrap.b32 	%r7442, %r7439, %r7440, 19;
	mov.b64 	%rd10828, {%r7442, %r7441};
	shf.l.wrap.b32 	%r7443, %r7439, %r7440, 3;
	shf.l.wrap.b32 	%r7444, %r7440, %r7439, 3;
	mov.b64 	%rd10829, {%r7444, %r7443};
	xor.b64  	%rd10830, %rd10828, %rd10829;
	shr.u64 	%rd10831, %rd10766, 6;
	xor.b64  	%rd10832, %rd10830, %rd10831;
	shf.r.wrap.b32 	%r7445, %r7102, %r7101, 1;
	shf.r.wrap.b32 	%r7446, %r7101, %r7102, 1;
	mov.b64 	%rd10833, {%r7446, %r7445};
	shf.r.wrap.b32 	%r7447, %r7102, %r7101, 8;
	shf.r.wrap.b32 	%r7448, %r7101, %r7102, 8;
	mov.b64 	%rd10834, {%r7448, %r7447};
	xor.b64  	%rd10835, %rd10833, %rd10834;
	shr.u64 	%rd10836, %rd10285, 7;
	xor.b64  	%rd10837, %rd10835, %rd10836;
	add.s64 	%rd10838, %rd10837, %rd10248;
	add.s64 	%rd10839, %rd10838, %rd10581;
	add.s64 	%rd10840, %rd10839, %rd10832;
	add.s64 	%rd10841, %rd10840, %rd10705;
	xor.b64  	%rd10842, %rd10779, %rd10742;
	and.b64  	%rd10843, %rd10816, %rd10842;
	xor.b64  	%rd10844, %rd10843, %rd10742;
	add.s64 	%rd10845, %rd10841, %rd10844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7449,%dummy}, %rd10816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7450}, %rd10816;
	}
	shf.r.wrap.b32 	%r7451, %r7450, %r7449, 14;
	shf.r.wrap.b32 	%r7452, %r7449, %r7450, 14;
	mov.b64 	%rd10846, {%r7452, %r7451};
	shf.r.wrap.b32 	%r7453, %r7450, %r7449, 18;
	shf.r.wrap.b32 	%r7454, %r7449, %r7450, 18;
	mov.b64 	%rd10847, {%r7454, %r7453};
	xor.b64  	%rd10848, %rd10846, %rd10847;
	shf.l.wrap.b32 	%r7455, %r7449, %r7450, 23;
	shf.l.wrap.b32 	%r7456, %r7450, %r7449, 23;
	mov.b64 	%rd10849, {%r7456, %r7455};
	xor.b64  	%rd10850, %rd10848, %rd10849;
	add.s64 	%rd10851, %rd10845, %rd10850;
	add.s64 	%rd10852, %rd10851, 2177327727835720531;
	add.s64 	%rd10853, %rd10852, %rd10716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7457,%dummy}, %rd10827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7458}, %rd10827;
	}
	shf.r.wrap.b32 	%r7459, %r7458, %r7457, 28;
	shf.r.wrap.b32 	%r7460, %r7457, %r7458, 28;
	mov.b64 	%rd10854, {%r7460, %r7459};
	shf.l.wrap.b32 	%r7461, %r7457, %r7458, 30;
	shf.l.wrap.b32 	%r7462, %r7458, %r7457, 30;
	mov.b64 	%rd10855, {%r7462, %r7461};
	xor.b64  	%rd10856, %rd10854, %rd10855;
	shf.l.wrap.b32 	%r7463, %r7457, %r7458, 25;
	shf.l.wrap.b32 	%r7464, %r7458, %r7457, 25;
	mov.b64 	%rd10857, {%r7464, %r7463};
	xor.b64  	%rd10858, %rd10856, %rd10857;
	and.b64  	%rd10859, %rd10827, %rd10790;
	or.b64  	%rd10860, %rd10827, %rd10790;
	and.b64  	%rd10861, %rd10860, %rd10753;
	or.b64  	%rd10862, %rd10861, %rd10859;
	add.s64 	%rd10863, %rd10862, %rd10858;
	add.s64 	%rd10864, %rd10863, %rd10852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7465,%dummy}, %rd10803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7466}, %rd10803;
	}
	shf.r.wrap.b32 	%r7467, %r7466, %r7465, 19;
	shf.r.wrap.b32 	%r7468, %r7465, %r7466, 19;
	mov.b64 	%rd10865, {%r7468, %r7467};
	shf.l.wrap.b32 	%r7469, %r7465, %r7466, 3;
	shf.l.wrap.b32 	%r7470, %r7466, %r7465, 3;
	mov.b64 	%rd10866, {%r7470, %r7469};
	xor.b64  	%rd10867, %rd10865, %rd10866;
	shr.u64 	%rd10868, %rd10803, 6;
	xor.b64  	%rd10869, %rd10867, %rd10868;
	shf.r.wrap.b32 	%r7471, %r7128, %r7127, 1;
	shf.r.wrap.b32 	%r7472, %r7127, %r7128, 1;
	mov.b64 	%rd10870, {%r7472, %r7471};
	shf.r.wrap.b32 	%r7473, %r7128, %r7127, 8;
	shf.r.wrap.b32 	%r7474, %r7127, %r7128, 8;
	mov.b64 	%rd10871, {%r7474, %r7473};
	xor.b64  	%rd10872, %rd10870, %rd10871;
	shr.u64 	%rd10873, %rd10322, 7;
	xor.b64  	%rd10874, %rd10872, %rd10873;
	add.s64 	%rd10875, %rd10874, %rd10285;
	add.s64 	%rd10876, %rd10875, %rd10618;
	add.s64 	%rd10877, %rd10876, %rd10869;
	add.s64 	%rd10878, %rd10877, %rd10742;
	xor.b64  	%rd10879, %rd10816, %rd10779;
	and.b64  	%rd10880, %rd10853, %rd10879;
	xor.b64  	%rd10881, %rd10880, %rd10779;
	add.s64 	%rd10882, %rd10878, %rd10881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7475,%dummy}, %rd10853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7476}, %rd10853;
	}
	shf.r.wrap.b32 	%r7477, %r7476, %r7475, 14;
	shf.r.wrap.b32 	%r7478, %r7475, %r7476, 14;
	mov.b64 	%rd10883, {%r7478, %r7477};
	shf.r.wrap.b32 	%r7479, %r7476, %r7475, 18;
	shf.r.wrap.b32 	%r7480, %r7475, %r7476, 18;
	mov.b64 	%rd10884, {%r7480, %r7479};
	xor.b64  	%rd10885, %rd10883, %rd10884;
	shf.l.wrap.b32 	%r7481, %r7475, %r7476, 23;
	shf.l.wrap.b32 	%r7482, %r7476, %r7475, 23;
	mov.b64 	%rd10886, {%r7482, %r7481};
	xor.b64  	%rd10887, %rd10885, %rd10886;
	add.s64 	%rd10888, %rd10882, %rd10887;
	add.s64 	%rd10889, %rd10888, 2830643537854262169;
	add.s64 	%rd10890, %rd10889, %rd10753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7483,%dummy}, %rd10864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7484}, %rd10864;
	}
	shf.r.wrap.b32 	%r7485, %r7484, %r7483, 28;
	shf.r.wrap.b32 	%r7486, %r7483, %r7484, 28;
	mov.b64 	%rd10891, {%r7486, %r7485};
	shf.l.wrap.b32 	%r7487, %r7483, %r7484, 30;
	shf.l.wrap.b32 	%r7488, %r7484, %r7483, 30;
	mov.b64 	%rd10892, {%r7488, %r7487};
	xor.b64  	%rd10893, %rd10891, %rd10892;
	shf.l.wrap.b32 	%r7489, %r7483, %r7484, 25;
	shf.l.wrap.b32 	%r7490, %r7484, %r7483, 25;
	mov.b64 	%rd10894, {%r7490, %r7489};
	xor.b64  	%rd10895, %rd10893, %rd10894;
	and.b64  	%rd10896, %rd10864, %rd10827;
	or.b64  	%rd10897, %rd10864, %rd10827;
	and.b64  	%rd10898, %rd10897, %rd10790;
	or.b64  	%rd10899, %rd10898, %rd10896;
	add.s64 	%rd10900, %rd10899, %rd10895;
	add.s64 	%rd10901, %rd10900, %rd10889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7491,%dummy}, %rd10840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7492}, %rd10840;
	}
	shf.r.wrap.b32 	%r7493, %r7492, %r7491, 19;
	shf.r.wrap.b32 	%r7494, %r7491, %r7492, 19;
	mov.b64 	%rd10902, {%r7494, %r7493};
	shf.l.wrap.b32 	%r7495, %r7491, %r7492, 3;
	shf.l.wrap.b32 	%r7496, %r7492, %r7491, 3;
	mov.b64 	%rd10903, {%r7496, %r7495};
	xor.b64  	%rd10904, %rd10902, %rd10903;
	shr.u64 	%rd10905, %rd10840, 6;
	xor.b64  	%rd10906, %rd10904, %rd10905;
	shf.r.wrap.b32 	%r7497, %r7154, %r7153, 1;
	shf.r.wrap.b32 	%r7498, %r7153, %r7154, 1;
	mov.b64 	%rd10907, {%r7498, %r7497};
	shf.r.wrap.b32 	%r7499, %r7154, %r7153, 8;
	shf.r.wrap.b32 	%r7500, %r7153, %r7154, 8;
	mov.b64 	%rd10908, {%r7500, %r7499};
	xor.b64  	%rd10909, %rd10907, %rd10908;
	shr.u64 	%rd10910, %rd10359, 7;
	xor.b64  	%rd10911, %rd10909, %rd10910;
	add.s64 	%rd10912, %rd10911, %rd10322;
	add.s64 	%rd10913, %rd10912, %rd10655;
	add.s64 	%rd10914, %rd10913, %rd10906;
	add.s64 	%rd10915, %rd10914, %rd10779;
	xor.b64  	%rd10916, %rd10853, %rd10816;
	and.b64  	%rd10917, %rd10890, %rd10916;
	xor.b64  	%rd10918, %rd10917, %rd10816;
	add.s64 	%rd10919, %rd10915, %rd10918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7501,%dummy}, %rd10890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7502}, %rd10890;
	}
	shf.r.wrap.b32 	%r7503, %r7502, %r7501, 14;
	shf.r.wrap.b32 	%r7504, %r7501, %r7502, 14;
	mov.b64 	%rd10920, {%r7504, %r7503};
	shf.r.wrap.b32 	%r7505, %r7502, %r7501, 18;
	shf.r.wrap.b32 	%r7506, %r7501, %r7502, 18;
	mov.b64 	%rd10921, {%r7506, %r7505};
	xor.b64  	%rd10922, %rd10920, %rd10921;
	shf.l.wrap.b32 	%r7507, %r7501, %r7502, 23;
	shf.l.wrap.b32 	%r7508, %r7502, %r7501, 23;
	mov.b64 	%rd10923, {%r7508, %r7507};
	xor.b64  	%rd10924, %rd10922, %rd10923;
	add.s64 	%rd10925, %rd10919, %rd10924;
	add.s64 	%rd10926, %rd10925, 3796741975233480872;
	add.s64 	%rd10927, %rd10926, %rd10790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7509,%dummy}, %rd10901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7510}, %rd10901;
	}
	shf.r.wrap.b32 	%r7511, %r7510, %r7509, 28;
	shf.r.wrap.b32 	%r7512, %r7509, %r7510, 28;
	mov.b64 	%rd10928, {%r7512, %r7511};
	shf.l.wrap.b32 	%r7513, %r7509, %r7510, 30;
	shf.l.wrap.b32 	%r7514, %r7510, %r7509, 30;
	mov.b64 	%rd10929, {%r7514, %r7513};
	xor.b64  	%rd10930, %rd10928, %rd10929;
	shf.l.wrap.b32 	%r7515, %r7509, %r7510, 25;
	shf.l.wrap.b32 	%r7516, %r7510, %r7509, 25;
	mov.b64 	%rd10931, {%r7516, %r7515};
	xor.b64  	%rd10932, %rd10930, %rd10931;
	and.b64  	%rd10933, %rd10901, %rd10864;
	or.b64  	%rd10934, %rd10901, %rd10864;
	and.b64  	%rd10935, %rd10934, %rd10827;
	or.b64  	%rd10936, %rd10935, %rd10933;
	add.s64 	%rd10937, %rd10936, %rd10932;
	add.s64 	%rd10938, %rd10937, %rd10926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7517,%dummy}, %rd10877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7518}, %rd10877;
	}
	shf.r.wrap.b32 	%r7519, %r7518, %r7517, 19;
	shf.r.wrap.b32 	%r7520, %r7517, %r7518, 19;
	mov.b64 	%rd10939, {%r7520, %r7519};
	shf.l.wrap.b32 	%r7521, %r7517, %r7518, 3;
	shf.l.wrap.b32 	%r7522, %r7518, %r7517, 3;
	mov.b64 	%rd10940, {%r7522, %r7521};
	xor.b64  	%rd10941, %rd10939, %rd10940;
	shr.u64 	%rd10942, %rd10877, 6;
	xor.b64  	%rd10943, %rd10941, %rd10942;
	shf.r.wrap.b32 	%r7523, %r7180, %r7179, 1;
	shf.r.wrap.b32 	%r7524, %r7179, %r7180, 1;
	mov.b64 	%rd10944, {%r7524, %r7523};
	shf.r.wrap.b32 	%r7525, %r7180, %r7179, 8;
	shf.r.wrap.b32 	%r7526, %r7179, %r7180, 8;
	mov.b64 	%rd10945, {%r7526, %r7525};
	xor.b64  	%rd10946, %rd10944, %rd10945;
	shr.u64 	%rd10947, %rd10396, 7;
	xor.b64  	%rd10948, %rd10946, %rd10947;
	add.s64 	%rd10949, %rd10948, %rd10359;
	add.s64 	%rd10950, %rd10949, %rd10692;
	add.s64 	%rd10951, %rd10950, %rd10943;
	add.s64 	%rd10952, %rd10951, %rd10816;
	xor.b64  	%rd10953, %rd10890, %rd10853;
	and.b64  	%rd10954, %rd10927, %rd10953;
	xor.b64  	%rd10955, %rd10954, %rd10853;
	add.s64 	%rd10956, %rd10952, %rd10955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7527,%dummy}, %rd10927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7528}, %rd10927;
	}
	shf.r.wrap.b32 	%r7529, %r7528, %r7527, 14;
	shf.r.wrap.b32 	%r7530, %r7527, %r7528, 14;
	mov.b64 	%rd10957, {%r7530, %r7529};
	shf.r.wrap.b32 	%r7531, %r7528, %r7527, 18;
	shf.r.wrap.b32 	%r7532, %r7527, %r7528, 18;
	mov.b64 	%rd10958, {%r7532, %r7531};
	xor.b64  	%rd10959, %rd10957, %rd10958;
	shf.l.wrap.b32 	%r7533, %r7527, %r7528, 23;
	shf.l.wrap.b32 	%r7534, %r7528, %r7527, 23;
	mov.b64 	%rd10960, {%r7534, %r7533};
	xor.b64  	%rd10961, %rd10959, %rd10960;
	add.s64 	%rd10962, %rd10956, %rd10961;
	add.s64 	%rd10963, %rd10962, 4115178125766777443;
	add.s64 	%rd10964, %rd10963, %rd10827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7535,%dummy}, %rd10938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7536}, %rd10938;
	}
	shf.r.wrap.b32 	%r7537, %r7536, %r7535, 28;
	shf.r.wrap.b32 	%r7538, %r7535, %r7536, 28;
	mov.b64 	%rd10965, {%r7538, %r7537};
	shf.l.wrap.b32 	%r7539, %r7535, %r7536, 30;
	shf.l.wrap.b32 	%r7540, %r7536, %r7535, 30;
	mov.b64 	%rd10966, {%r7540, %r7539};
	xor.b64  	%rd10967, %rd10965, %rd10966;
	shf.l.wrap.b32 	%r7541, %r7535, %r7536, 25;
	shf.l.wrap.b32 	%r7542, %r7536, %r7535, 25;
	mov.b64 	%rd10968, {%r7542, %r7541};
	xor.b64  	%rd10969, %rd10967, %rd10968;
	and.b64  	%rd10970, %rd10938, %rd10901;
	or.b64  	%rd10971, %rd10938, %rd10901;
	and.b64  	%rd10972, %rd10971, %rd10864;
	or.b64  	%rd10973, %rd10972, %rd10970;
	add.s64 	%rd10974, %rd10973, %rd10969;
	add.s64 	%rd10975, %rd10974, %rd10963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7543,%dummy}, %rd10914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7544}, %rd10914;
	}
	shf.r.wrap.b32 	%r7545, %r7544, %r7543, 19;
	shf.r.wrap.b32 	%r7546, %r7543, %r7544, 19;
	mov.b64 	%rd10976, {%r7546, %r7545};
	shf.l.wrap.b32 	%r7547, %r7543, %r7544, 3;
	shf.l.wrap.b32 	%r7548, %r7544, %r7543, 3;
	mov.b64 	%rd10977, {%r7548, %r7547};
	xor.b64  	%rd10978, %rd10976, %rd10977;
	shr.u64 	%rd10979, %rd10914, 6;
	xor.b64  	%rd10980, %rd10978, %rd10979;
	shf.r.wrap.b32 	%r7549, %r7206, %r7205, 1;
	shf.r.wrap.b32 	%r7550, %r7205, %r7206, 1;
	mov.b64 	%rd10981, {%r7550, %r7549};
	shf.r.wrap.b32 	%r7551, %r7206, %r7205, 8;
	shf.r.wrap.b32 	%r7552, %r7205, %r7206, 8;
	mov.b64 	%rd10982, {%r7552, %r7551};
	xor.b64  	%rd10983, %rd10981, %rd10982;
	shr.u64 	%rd10984, %rd10433, 7;
	xor.b64  	%rd10985, %rd10983, %rd10984;
	add.s64 	%rd10986, %rd10985, %rd10396;
	add.s64 	%rd10987, %rd10986, %rd10729;
	add.s64 	%rd10988, %rd10987, %rd10980;
	add.s64 	%rd10989, %rd10988, %rd10853;
	xor.b64  	%rd10990, %rd10927, %rd10890;
	and.b64  	%rd10991, %rd10964, %rd10990;
	xor.b64  	%rd10992, %rd10991, %rd10890;
	add.s64 	%rd10993, %rd10989, %rd10992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7553,%dummy}, %rd10964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7554}, %rd10964;
	}
	shf.r.wrap.b32 	%r7555, %r7554, %r7553, 14;
	shf.r.wrap.b32 	%r7556, %r7553, %r7554, 14;
	mov.b64 	%rd10994, {%r7556, %r7555};
	shf.r.wrap.b32 	%r7557, %r7554, %r7553, 18;
	shf.r.wrap.b32 	%r7558, %r7553, %r7554, 18;
	mov.b64 	%rd10995, {%r7558, %r7557};
	xor.b64  	%rd10996, %rd10994, %rd10995;
	shf.l.wrap.b32 	%r7559, %r7553, %r7554, 23;
	shf.l.wrap.b32 	%r7560, %r7554, %r7553, 23;
	mov.b64 	%rd10997, {%r7560, %r7559};
	xor.b64  	%rd10998, %rd10996, %rd10997;
	add.s64 	%rd10999, %rd10993, %rd10998;
	add.s64 	%rd11000, %rd10999, 5681478168544905931;
	add.s64 	%rd11001, %rd11000, %rd10864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7561,%dummy}, %rd10975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7562}, %rd10975;
	}
	shf.r.wrap.b32 	%r7563, %r7562, %r7561, 28;
	shf.r.wrap.b32 	%r7564, %r7561, %r7562, 28;
	mov.b64 	%rd11002, {%r7564, %r7563};
	shf.l.wrap.b32 	%r7565, %r7561, %r7562, 30;
	shf.l.wrap.b32 	%r7566, %r7562, %r7561, 30;
	mov.b64 	%rd11003, {%r7566, %r7565};
	xor.b64  	%rd11004, %rd11002, %rd11003;
	shf.l.wrap.b32 	%r7567, %r7561, %r7562, 25;
	shf.l.wrap.b32 	%r7568, %r7562, %r7561, 25;
	mov.b64 	%rd11005, {%r7568, %r7567};
	xor.b64  	%rd11006, %rd11004, %rd11005;
	and.b64  	%rd11007, %rd10975, %rd10938;
	or.b64  	%rd11008, %rd10975, %rd10938;
	and.b64  	%rd11009, %rd11008, %rd10901;
	or.b64  	%rd11010, %rd11009, %rd11007;
	add.s64 	%rd11011, %rd11010, %rd11006;
	add.s64 	%rd11012, %rd11011, %rd11000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7569,%dummy}, %rd10951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7570}, %rd10951;
	}
	shf.r.wrap.b32 	%r7571, %r7570, %r7569, 19;
	shf.r.wrap.b32 	%r7572, %r7569, %r7570, 19;
	mov.b64 	%rd11013, {%r7572, %r7571};
	shf.l.wrap.b32 	%r7573, %r7569, %r7570, 3;
	shf.l.wrap.b32 	%r7574, %r7570, %r7569, 3;
	mov.b64 	%rd11014, {%r7574, %r7573};
	xor.b64  	%rd11015, %rd11013, %rd11014;
	shr.u64 	%rd11016, %rd10951, 6;
	xor.b64  	%rd11017, %rd11015, %rd11016;
	shf.r.wrap.b32 	%r7575, %r7232, %r7231, 1;
	shf.r.wrap.b32 	%r7576, %r7231, %r7232, 1;
	mov.b64 	%rd11018, {%r7576, %r7575};
	shf.r.wrap.b32 	%r7577, %r7232, %r7231, 8;
	shf.r.wrap.b32 	%r7578, %r7231, %r7232, 8;
	mov.b64 	%rd11019, {%r7578, %r7577};
	xor.b64  	%rd11020, %rd11018, %rd11019;
	shr.u64 	%rd11021, %rd10470, 7;
	xor.b64  	%rd11022, %rd11020, %rd11021;
	add.s64 	%rd11023, %rd11022, %rd10433;
	add.s64 	%rd11024, %rd11023, %rd10766;
	add.s64 	%rd11025, %rd11024, %rd11017;
	add.s64 	%rd11026, %rd11025, %rd10890;
	xor.b64  	%rd11027, %rd10964, %rd10927;
	and.b64  	%rd11028, %rd11001, %rd11027;
	xor.b64  	%rd11029, %rd11028, %rd10927;
	add.s64 	%rd11030, %rd11026, %rd11029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7579,%dummy}, %rd11001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7580}, %rd11001;
	}
	shf.r.wrap.b32 	%r7581, %r7580, %r7579, 14;
	shf.r.wrap.b32 	%r7582, %r7579, %r7580, 14;
	mov.b64 	%rd11031, {%r7582, %r7581};
	shf.r.wrap.b32 	%r7583, %r7580, %r7579, 18;
	shf.r.wrap.b32 	%r7584, %r7579, %r7580, 18;
	mov.b64 	%rd11032, {%r7584, %r7583};
	xor.b64  	%rd11033, %rd11031, %rd11032;
	shf.l.wrap.b32 	%r7585, %r7579, %r7580, 23;
	shf.l.wrap.b32 	%r7586, %r7580, %r7579, 23;
	mov.b64 	%rd11034, {%r7586, %r7585};
	xor.b64  	%rd11035, %rd11033, %rd11034;
	add.s64 	%rd11036, %rd11030, %rd11035;
	add.s64 	%rd11037, %rd11036, 6601373596472566643;
	add.s64 	%rd11038, %rd11037, %rd10901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7587,%dummy}, %rd11012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7588}, %rd11012;
	}
	shf.r.wrap.b32 	%r7589, %r7588, %r7587, 28;
	shf.r.wrap.b32 	%r7590, %r7587, %r7588, 28;
	mov.b64 	%rd11039, {%r7590, %r7589};
	shf.l.wrap.b32 	%r7591, %r7587, %r7588, 30;
	shf.l.wrap.b32 	%r7592, %r7588, %r7587, 30;
	mov.b64 	%rd11040, {%r7592, %r7591};
	xor.b64  	%rd11041, %rd11039, %rd11040;
	shf.l.wrap.b32 	%r7593, %r7587, %r7588, 25;
	shf.l.wrap.b32 	%r7594, %r7588, %r7587, 25;
	mov.b64 	%rd11042, {%r7594, %r7593};
	xor.b64  	%rd11043, %rd11041, %rd11042;
	and.b64  	%rd11044, %rd11012, %rd10975;
	or.b64  	%rd11045, %rd11012, %rd10975;
	and.b64  	%rd11046, %rd11045, %rd10938;
	or.b64  	%rd11047, %rd11046, %rd11044;
	add.s64 	%rd11048, %rd11047, %rd11043;
	add.s64 	%rd11049, %rd11048, %rd11037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7595,%dummy}, %rd10988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7596}, %rd10988;
	}
	shf.r.wrap.b32 	%r7597, %r7596, %r7595, 19;
	shf.r.wrap.b32 	%r7598, %r7595, %r7596, 19;
	mov.b64 	%rd11050, {%r7598, %r7597};
	shf.l.wrap.b32 	%r7599, %r7595, %r7596, 3;
	shf.l.wrap.b32 	%r7600, %r7596, %r7595, 3;
	mov.b64 	%rd11051, {%r7600, %r7599};
	xor.b64  	%rd11052, %rd11050, %rd11051;
	shr.u64 	%rd11053, %rd10988, 6;
	xor.b64  	%rd11054, %rd11052, %rd11053;
	shf.r.wrap.b32 	%r7601, %r7258, %r7257, 1;
	shf.r.wrap.b32 	%r7602, %r7257, %r7258, 1;
	mov.b64 	%rd11055, {%r7602, %r7601};
	shf.r.wrap.b32 	%r7603, %r7258, %r7257, 8;
	shf.r.wrap.b32 	%r7604, %r7257, %r7258, 8;
	mov.b64 	%rd11056, {%r7604, %r7603};
	xor.b64  	%rd11057, %rd11055, %rd11056;
	shr.u64 	%rd11058, %rd10507, 7;
	xor.b64  	%rd11059, %rd11057, %rd11058;
	add.s64 	%rd11060, %rd11059, %rd10470;
	add.s64 	%rd11061, %rd11060, %rd10803;
	add.s64 	%rd11062, %rd11061, %rd11054;
	add.s64 	%rd11063, %rd11062, %rd10927;
	xor.b64  	%rd11064, %rd11001, %rd10964;
	and.b64  	%rd11065, %rd11038, %rd11064;
	xor.b64  	%rd11066, %rd11065, %rd10964;
	add.s64 	%rd11067, %rd11063, %rd11066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7605,%dummy}, %rd11038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7606}, %rd11038;
	}
	shf.r.wrap.b32 	%r7607, %r7606, %r7605, 14;
	shf.r.wrap.b32 	%r7608, %r7605, %r7606, 14;
	mov.b64 	%rd11068, {%r7608, %r7607};
	shf.r.wrap.b32 	%r7609, %r7606, %r7605, 18;
	shf.r.wrap.b32 	%r7610, %r7605, %r7606, 18;
	mov.b64 	%rd11069, {%r7610, %r7609};
	xor.b64  	%rd11070, %rd11068, %rd11069;
	shf.l.wrap.b32 	%r7611, %r7605, %r7606, 23;
	shf.l.wrap.b32 	%r7612, %r7606, %r7605, 23;
	mov.b64 	%rd11071, {%r7612, %r7611};
	xor.b64  	%rd11072, %rd11070, %rd11071;
	add.s64 	%rd11073, %rd11067, %rd11072;
	add.s64 	%rd11074, %rd11073, 7507060721942968483;
	add.s64 	%rd11075, %rd11074, %rd10938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7613,%dummy}, %rd11049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7614}, %rd11049;
	}
	shf.r.wrap.b32 	%r7615, %r7614, %r7613, 28;
	shf.r.wrap.b32 	%r7616, %r7613, %r7614, 28;
	mov.b64 	%rd11076, {%r7616, %r7615};
	shf.l.wrap.b32 	%r7617, %r7613, %r7614, 30;
	shf.l.wrap.b32 	%r7618, %r7614, %r7613, 30;
	mov.b64 	%rd11077, {%r7618, %r7617};
	xor.b64  	%rd11078, %rd11076, %rd11077;
	shf.l.wrap.b32 	%r7619, %r7613, %r7614, 25;
	shf.l.wrap.b32 	%r7620, %r7614, %r7613, 25;
	mov.b64 	%rd11079, {%r7620, %r7619};
	xor.b64  	%rd11080, %rd11078, %rd11079;
	and.b64  	%rd11081, %rd11049, %rd11012;
	or.b64  	%rd11082, %rd11049, %rd11012;
	and.b64  	%rd11083, %rd11082, %rd10975;
	or.b64  	%rd11084, %rd11083, %rd11081;
	add.s64 	%rd11085, %rd11084, %rd11080;
	add.s64 	%rd11086, %rd11085, %rd11074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7621,%dummy}, %rd11025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7622}, %rd11025;
	}
	shf.r.wrap.b32 	%r7623, %r7622, %r7621, 19;
	shf.r.wrap.b32 	%r7624, %r7621, %r7622, 19;
	mov.b64 	%rd11087, {%r7624, %r7623};
	shf.l.wrap.b32 	%r7625, %r7621, %r7622, 3;
	shf.l.wrap.b32 	%r7626, %r7622, %r7621, 3;
	mov.b64 	%rd11088, {%r7626, %r7625};
	xor.b64  	%rd11089, %rd11087, %rd11088;
	shr.u64 	%rd11090, %rd11025, 6;
	xor.b64  	%rd11091, %rd11089, %rd11090;
	shf.r.wrap.b32 	%r7627, %r7284, %r7283, 1;
	shf.r.wrap.b32 	%r7628, %r7283, %r7284, 1;
	mov.b64 	%rd11092, {%r7628, %r7627};
	shf.r.wrap.b32 	%r7629, %r7284, %r7283, 8;
	shf.r.wrap.b32 	%r7630, %r7283, %r7284, 8;
	mov.b64 	%rd11093, {%r7630, %r7629};
	xor.b64  	%rd11094, %rd11092, %rd11093;
	shr.u64 	%rd11095, %rd10544, 7;
	xor.b64  	%rd11096, %rd11094, %rd11095;
	add.s64 	%rd11097, %rd11096, %rd10507;
	add.s64 	%rd11098, %rd11097, %rd10840;
	add.s64 	%rd11099, %rd11098, %rd11091;
	add.s64 	%rd11100, %rd11099, %rd10964;
	xor.b64  	%rd11101, %rd11038, %rd11001;
	and.b64  	%rd11102, %rd11075, %rd11101;
	xor.b64  	%rd11103, %rd11102, %rd11001;
	add.s64 	%rd11104, %rd11100, %rd11103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7631,%dummy}, %rd11075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7632}, %rd11075;
	}
	shf.r.wrap.b32 	%r7633, %r7632, %r7631, 14;
	shf.r.wrap.b32 	%r7634, %r7631, %r7632, 14;
	mov.b64 	%rd11105, {%r7634, %r7633};
	shf.r.wrap.b32 	%r7635, %r7632, %r7631, 18;
	shf.r.wrap.b32 	%r7636, %r7631, %r7632, 18;
	mov.b64 	%rd11106, {%r7636, %r7635};
	xor.b64  	%rd11107, %rd11105, %rd11106;
	shf.l.wrap.b32 	%r7637, %r7631, %r7632, 23;
	shf.l.wrap.b32 	%r7638, %r7632, %r7631, 23;
	mov.b64 	%rd11108, {%r7638, %r7637};
	xor.b64  	%rd11109, %rd11107, %rd11108;
	add.s64 	%rd11110, %rd11104, %rd11109;
	add.s64 	%rd11111, %rd11110, 8399075790359081724;
	add.s64 	%rd11112, %rd11111, %rd10975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7639,%dummy}, %rd11086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7640}, %rd11086;
	}
	shf.r.wrap.b32 	%r7641, %r7640, %r7639, 28;
	shf.r.wrap.b32 	%r7642, %r7639, %r7640, 28;
	mov.b64 	%rd11113, {%r7642, %r7641};
	shf.l.wrap.b32 	%r7643, %r7639, %r7640, 30;
	shf.l.wrap.b32 	%r7644, %r7640, %r7639, 30;
	mov.b64 	%rd11114, {%r7644, %r7643};
	xor.b64  	%rd11115, %rd11113, %rd11114;
	shf.l.wrap.b32 	%r7645, %r7639, %r7640, 25;
	shf.l.wrap.b32 	%r7646, %r7640, %r7639, 25;
	mov.b64 	%rd11116, {%r7646, %r7645};
	xor.b64  	%rd11117, %rd11115, %rd11116;
	and.b64  	%rd11118, %rd11086, %rd11049;
	or.b64  	%rd11119, %rd11086, %rd11049;
	and.b64  	%rd11120, %rd11119, %rd11012;
	or.b64  	%rd11121, %rd11120, %rd11118;
	add.s64 	%rd11122, %rd11121, %rd11117;
	add.s64 	%rd11123, %rd11122, %rd11111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7647,%dummy}, %rd11062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7648}, %rd11062;
	}
	shf.r.wrap.b32 	%r7649, %r7648, %r7647, 19;
	shf.r.wrap.b32 	%r7650, %r7647, %r7648, 19;
	mov.b64 	%rd11124, {%r7650, %r7649};
	shf.l.wrap.b32 	%r7651, %r7647, %r7648, 3;
	shf.l.wrap.b32 	%r7652, %r7648, %r7647, 3;
	mov.b64 	%rd11125, {%r7652, %r7651};
	xor.b64  	%rd11126, %rd11124, %rd11125;
	shr.u64 	%rd11127, %rd11062, 6;
	xor.b64  	%rd11128, %rd11126, %rd11127;
	shf.r.wrap.b32 	%r7653, %r7310, %r7309, 1;
	shf.r.wrap.b32 	%r7654, %r7309, %r7310, 1;
	mov.b64 	%rd11129, {%r7654, %r7653};
	shf.r.wrap.b32 	%r7655, %r7310, %r7309, 8;
	shf.r.wrap.b32 	%r7656, %r7309, %r7310, 8;
	mov.b64 	%rd11130, {%r7656, %r7655};
	xor.b64  	%rd11131, %rd11129, %rd11130;
	shr.u64 	%rd11132, %rd10581, 7;
	xor.b64  	%rd11133, %rd11131, %rd11132;
	add.s64 	%rd11134, %rd11133, %rd10544;
	add.s64 	%rd11135, %rd11134, %rd10877;
	add.s64 	%rd11136, %rd11135, %rd11128;
	add.s64 	%rd11137, %rd11136, %rd11001;
	xor.b64  	%rd11138, %rd11075, %rd11038;
	and.b64  	%rd11139, %rd11112, %rd11138;
	xor.b64  	%rd11140, %rd11139, %rd11038;
	add.s64 	%rd11141, %rd11137, %rd11140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7657,%dummy}, %rd11112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7658}, %rd11112;
	}
	shf.r.wrap.b32 	%r7659, %r7658, %r7657, 14;
	shf.r.wrap.b32 	%r7660, %r7657, %r7658, 14;
	mov.b64 	%rd11142, {%r7660, %r7659};
	shf.r.wrap.b32 	%r7661, %r7658, %r7657, 18;
	shf.r.wrap.b32 	%r7662, %r7657, %r7658, 18;
	mov.b64 	%rd11143, {%r7662, %r7661};
	xor.b64  	%rd11144, %rd11142, %rd11143;
	shf.l.wrap.b32 	%r7663, %r7657, %r7658, 23;
	shf.l.wrap.b32 	%r7664, %r7658, %r7657, 23;
	mov.b64 	%rd11145, {%r7664, %r7663};
	xor.b64  	%rd11146, %rd11144, %rd11145;
	add.s64 	%rd11147, %rd11141, %rd11146;
	add.s64 	%rd11148, %rd11147, 8693463985226723168;
	add.s64 	%rd11149, %rd11148, %rd11012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7665,%dummy}, %rd11123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7666}, %rd11123;
	}
	shf.r.wrap.b32 	%r7667, %r7666, %r7665, 28;
	shf.r.wrap.b32 	%r7668, %r7665, %r7666, 28;
	mov.b64 	%rd11150, {%r7668, %r7667};
	shf.l.wrap.b32 	%r7669, %r7665, %r7666, 30;
	shf.l.wrap.b32 	%r7670, %r7666, %r7665, 30;
	mov.b64 	%rd11151, {%r7670, %r7669};
	xor.b64  	%rd11152, %rd11150, %rd11151;
	shf.l.wrap.b32 	%r7671, %r7665, %r7666, 25;
	shf.l.wrap.b32 	%r7672, %r7666, %r7665, 25;
	mov.b64 	%rd11153, {%r7672, %r7671};
	xor.b64  	%rd11154, %rd11152, %rd11153;
	and.b64  	%rd11155, %rd11123, %rd11086;
	or.b64  	%rd11156, %rd11123, %rd11086;
	and.b64  	%rd11157, %rd11156, %rd11049;
	or.b64  	%rd11158, %rd11157, %rd11155;
	add.s64 	%rd11159, %rd11158, %rd11154;
	add.s64 	%rd11160, %rd11159, %rd11148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7673,%dummy}, %rd11099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7674}, %rd11099;
	}
	shf.r.wrap.b32 	%r7675, %r7674, %r7673, 19;
	shf.r.wrap.b32 	%r7676, %r7673, %r7674, 19;
	mov.b64 	%rd11161, {%r7676, %r7675};
	shf.l.wrap.b32 	%r7677, %r7673, %r7674, 3;
	shf.l.wrap.b32 	%r7678, %r7674, %r7673, 3;
	mov.b64 	%rd11162, {%r7678, %r7677};
	xor.b64  	%rd11163, %rd11161, %rd11162;
	shr.u64 	%rd11164, %rd11099, 6;
	xor.b64  	%rd11165, %rd11163, %rd11164;
	shf.r.wrap.b32 	%r7679, %r7336, %r7335, 1;
	shf.r.wrap.b32 	%r7680, %r7335, %r7336, 1;
	mov.b64 	%rd11166, {%r7680, %r7679};
	shf.r.wrap.b32 	%r7681, %r7336, %r7335, 8;
	shf.r.wrap.b32 	%r7682, %r7335, %r7336, 8;
	mov.b64 	%rd11167, {%r7682, %r7681};
	xor.b64  	%rd11168, %rd11166, %rd11167;
	shr.u64 	%rd11169, %rd10618, 7;
	xor.b64  	%rd11170, %rd11168, %rd11169;
	add.s64 	%rd11171, %rd11170, %rd10581;
	add.s64 	%rd11172, %rd11171, %rd10914;
	add.s64 	%rd11173, %rd11172, %rd11165;
	add.s64 	%rd11174, %rd11173, %rd11038;
	xor.b64  	%rd11175, %rd11112, %rd11075;
	and.b64  	%rd11176, %rd11149, %rd11175;
	xor.b64  	%rd11177, %rd11176, %rd11075;
	add.s64 	%rd11178, %rd11174, %rd11177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7683,%dummy}, %rd11149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7684}, %rd11149;
	}
	shf.r.wrap.b32 	%r7685, %r7684, %r7683, 14;
	shf.r.wrap.b32 	%r7686, %r7683, %r7684, 14;
	mov.b64 	%rd11179, {%r7686, %r7685};
	shf.r.wrap.b32 	%r7687, %r7684, %r7683, 18;
	shf.r.wrap.b32 	%r7688, %r7683, %r7684, 18;
	mov.b64 	%rd11180, {%r7688, %r7687};
	xor.b64  	%rd11181, %rd11179, %rd11180;
	shf.l.wrap.b32 	%r7689, %r7683, %r7684, 23;
	shf.l.wrap.b32 	%r7690, %r7684, %r7683, 23;
	mov.b64 	%rd11182, {%r7690, %r7689};
	xor.b64  	%rd11183, %rd11181, %rd11182;
	add.s64 	%rd11184, %rd11178, %rd11183;
	add.s64 	%rd11185, %rd11184, -8878714635349349518;
	add.s64 	%rd11186, %rd11185, %rd11049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7691,%dummy}, %rd11160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7692}, %rd11160;
	}
	shf.r.wrap.b32 	%r7693, %r7692, %r7691, 28;
	shf.r.wrap.b32 	%r7694, %r7691, %r7692, 28;
	mov.b64 	%rd11187, {%r7694, %r7693};
	shf.l.wrap.b32 	%r7695, %r7691, %r7692, 30;
	shf.l.wrap.b32 	%r7696, %r7692, %r7691, 30;
	mov.b64 	%rd11188, {%r7696, %r7695};
	xor.b64  	%rd11189, %rd11187, %rd11188;
	shf.l.wrap.b32 	%r7697, %r7691, %r7692, 25;
	shf.l.wrap.b32 	%r7698, %r7692, %r7691, 25;
	mov.b64 	%rd11190, {%r7698, %r7697};
	xor.b64  	%rd11191, %rd11189, %rd11190;
	and.b64  	%rd11192, %rd11160, %rd11123;
	or.b64  	%rd11193, %rd11160, %rd11123;
	and.b64  	%rd11194, %rd11193, %rd11086;
	or.b64  	%rd11195, %rd11194, %rd11192;
	add.s64 	%rd11196, %rd11195, %rd11191;
	add.s64 	%rd11197, %rd11196, %rd11185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7699,%dummy}, %rd11136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7700}, %rd11136;
	}
	shf.r.wrap.b32 	%r7701, %r7700, %r7699, 19;
	shf.r.wrap.b32 	%r7702, %r7699, %r7700, 19;
	mov.b64 	%rd11198, {%r7702, %r7701};
	shf.l.wrap.b32 	%r7703, %r7699, %r7700, 3;
	shf.l.wrap.b32 	%r7704, %r7700, %r7699, 3;
	mov.b64 	%rd11199, {%r7704, %r7703};
	xor.b64  	%rd11200, %rd11198, %rd11199;
	shr.u64 	%rd11201, %rd11136, 6;
	xor.b64  	%rd11202, %rd11200, %rd11201;
	shf.r.wrap.b32 	%r7705, %r7362, %r7361, 1;
	shf.r.wrap.b32 	%r7706, %r7361, %r7362, 1;
	mov.b64 	%rd11203, {%r7706, %r7705};
	shf.r.wrap.b32 	%r7707, %r7362, %r7361, 8;
	shf.r.wrap.b32 	%r7708, %r7361, %r7362, 8;
	mov.b64 	%rd11204, {%r7708, %r7707};
	xor.b64  	%rd11205, %rd11203, %rd11204;
	shr.u64 	%rd11206, %rd10655, 7;
	xor.b64  	%rd11207, %rd11205, %rd11206;
	add.s64 	%rd11208, %rd11207, %rd10618;
	add.s64 	%rd11209, %rd11208, %rd10951;
	add.s64 	%rd11210, %rd11209, %rd11202;
	add.s64 	%rd11211, %rd11210, %rd11075;
	xor.b64  	%rd11212, %rd11149, %rd11112;
	and.b64  	%rd11213, %rd11186, %rd11212;
	xor.b64  	%rd11214, %rd11213, %rd11112;
	add.s64 	%rd11215, %rd11211, %rd11214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7709,%dummy}, %rd11186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7710}, %rd11186;
	}
	shf.r.wrap.b32 	%r7711, %r7710, %r7709, 14;
	shf.r.wrap.b32 	%r7712, %r7709, %r7710, 14;
	mov.b64 	%rd11216, {%r7712, %r7711};
	shf.r.wrap.b32 	%r7713, %r7710, %r7709, 18;
	shf.r.wrap.b32 	%r7714, %r7709, %r7710, 18;
	mov.b64 	%rd11217, {%r7714, %r7713};
	xor.b64  	%rd11218, %rd11216, %rd11217;
	shf.l.wrap.b32 	%r7715, %r7709, %r7710, 23;
	shf.l.wrap.b32 	%r7716, %r7710, %r7709, 23;
	mov.b64 	%rd11219, {%r7716, %r7715};
	xor.b64  	%rd11220, %rd11218, %rd11219;
	add.s64 	%rd11221, %rd11215, %rd11220;
	add.s64 	%rd11222, %rd11221, -8302665154208450068;
	add.s64 	%rd11223, %rd11222, %rd11086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7717,%dummy}, %rd11197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7718}, %rd11197;
	}
	shf.r.wrap.b32 	%r7719, %r7718, %r7717, 28;
	shf.r.wrap.b32 	%r7720, %r7717, %r7718, 28;
	mov.b64 	%rd11224, {%r7720, %r7719};
	shf.l.wrap.b32 	%r7721, %r7717, %r7718, 30;
	shf.l.wrap.b32 	%r7722, %r7718, %r7717, 30;
	mov.b64 	%rd11225, {%r7722, %r7721};
	xor.b64  	%rd11226, %rd11224, %rd11225;
	shf.l.wrap.b32 	%r7723, %r7717, %r7718, 25;
	shf.l.wrap.b32 	%r7724, %r7718, %r7717, 25;
	mov.b64 	%rd11227, {%r7724, %r7723};
	xor.b64  	%rd11228, %rd11226, %rd11227;
	and.b64  	%rd11229, %rd11197, %rd11160;
	or.b64  	%rd11230, %rd11197, %rd11160;
	and.b64  	%rd11231, %rd11230, %rd11123;
	or.b64  	%rd11232, %rd11231, %rd11229;
	add.s64 	%rd11233, %rd11232, %rd11228;
	add.s64 	%rd11234, %rd11233, %rd11222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7725,%dummy}, %rd11173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7726}, %rd11173;
	}
	shf.r.wrap.b32 	%r7727, %r7726, %r7725, 19;
	shf.r.wrap.b32 	%r7728, %r7725, %r7726, 19;
	mov.b64 	%rd11235, {%r7728, %r7727};
	shf.l.wrap.b32 	%r7729, %r7725, %r7726, 3;
	shf.l.wrap.b32 	%r7730, %r7726, %r7725, 3;
	mov.b64 	%rd11236, {%r7730, %r7729};
	xor.b64  	%rd11237, %rd11235, %rd11236;
	shr.u64 	%rd11238, %rd11173, 6;
	xor.b64  	%rd11239, %rd11237, %rd11238;
	shf.r.wrap.b32 	%r7731, %r7388, %r7387, 1;
	shf.r.wrap.b32 	%r7732, %r7387, %r7388, 1;
	mov.b64 	%rd11240, {%r7732, %r7731};
	shf.r.wrap.b32 	%r7733, %r7388, %r7387, 8;
	shf.r.wrap.b32 	%r7734, %r7387, %r7388, 8;
	mov.b64 	%rd11241, {%r7734, %r7733};
	xor.b64  	%rd11242, %rd11240, %rd11241;
	shr.u64 	%rd11243, %rd10692, 7;
	xor.b64  	%rd11244, %rd11242, %rd11243;
	add.s64 	%rd11245, %rd11244, %rd10655;
	add.s64 	%rd11246, %rd11245, %rd10988;
	add.s64 	%rd11247, %rd11246, %rd11239;
	add.s64 	%rd11248, %rd11247, %rd11112;
	xor.b64  	%rd11249, %rd11186, %rd11149;
	and.b64  	%rd11250, %rd11223, %rd11249;
	xor.b64  	%rd11251, %rd11250, %rd11149;
	add.s64 	%rd11252, %rd11248, %rd11251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7735,%dummy}, %rd11223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7736}, %rd11223;
	}
	shf.r.wrap.b32 	%r7737, %r7736, %r7735, 14;
	shf.r.wrap.b32 	%r7738, %r7735, %r7736, 14;
	mov.b64 	%rd11253, {%r7738, %r7737};
	shf.r.wrap.b32 	%r7739, %r7736, %r7735, 18;
	shf.r.wrap.b32 	%r7740, %r7735, %r7736, 18;
	mov.b64 	%rd11254, {%r7740, %r7739};
	xor.b64  	%rd11255, %rd11253, %rd11254;
	shf.l.wrap.b32 	%r7741, %r7735, %r7736, 23;
	shf.l.wrap.b32 	%r7742, %r7736, %r7735, 23;
	mov.b64 	%rd11256, {%r7742, %r7741};
	xor.b64  	%rd11257, %rd11255, %rd11256;
	add.s64 	%rd11258, %rd11252, %rd11257;
	add.s64 	%rd11259, %rd11258, -8016688836872298968;
	add.s64 	%rd11260, %rd11259, %rd11123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7743,%dummy}, %rd11234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7744}, %rd11234;
	}
	shf.r.wrap.b32 	%r7745, %r7744, %r7743, 28;
	shf.r.wrap.b32 	%r7746, %r7743, %r7744, 28;
	mov.b64 	%rd11261, {%r7746, %r7745};
	shf.l.wrap.b32 	%r7747, %r7743, %r7744, 30;
	shf.l.wrap.b32 	%r7748, %r7744, %r7743, 30;
	mov.b64 	%rd11262, {%r7748, %r7747};
	xor.b64  	%rd11263, %rd11261, %rd11262;
	shf.l.wrap.b32 	%r7749, %r7743, %r7744, 25;
	shf.l.wrap.b32 	%r7750, %r7744, %r7743, 25;
	mov.b64 	%rd11264, {%r7750, %r7749};
	xor.b64  	%rd11265, %rd11263, %rd11264;
	and.b64  	%rd11266, %rd11234, %rd11197;
	or.b64  	%rd11267, %rd11234, %rd11197;
	and.b64  	%rd11268, %rd11267, %rd11160;
	or.b64  	%rd11269, %rd11268, %rd11266;
	add.s64 	%rd11270, %rd11269, %rd11265;
	add.s64 	%rd11271, %rd11270, %rd11259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7751,%dummy}, %rd11210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7752}, %rd11210;
	}
	shf.r.wrap.b32 	%r7753, %r7752, %r7751, 19;
	shf.r.wrap.b32 	%r7754, %r7751, %r7752, 19;
	mov.b64 	%rd11272, {%r7754, %r7753};
	shf.l.wrap.b32 	%r7755, %r7751, %r7752, 3;
	shf.l.wrap.b32 	%r7756, %r7752, %r7751, 3;
	mov.b64 	%rd11273, {%r7756, %r7755};
	xor.b64  	%rd11274, %rd11272, %rd11273;
	shr.u64 	%rd11275, %rd11210, 6;
	xor.b64  	%rd11276, %rd11274, %rd11275;
	shf.r.wrap.b32 	%r7757, %r7414, %r7413, 1;
	shf.r.wrap.b32 	%r7758, %r7413, %r7414, 1;
	mov.b64 	%rd11277, {%r7758, %r7757};
	shf.r.wrap.b32 	%r7759, %r7414, %r7413, 8;
	shf.r.wrap.b32 	%r7760, %r7413, %r7414, 8;
	mov.b64 	%rd11278, {%r7760, %r7759};
	xor.b64  	%rd11279, %rd11277, %rd11278;
	shr.u64 	%rd11280, %rd10729, 7;
	xor.b64  	%rd11281, %rd11279, %rd11280;
	add.s64 	%rd11282, %rd11281, %rd10692;
	add.s64 	%rd11283, %rd11282, %rd11025;
	add.s64 	%rd11284, %rd11283, %rd11276;
	add.s64 	%rd11285, %rd11284, %rd11149;
	xor.b64  	%rd11286, %rd11223, %rd11186;
	and.b64  	%rd11287, %rd11260, %rd11286;
	xor.b64  	%rd11288, %rd11287, %rd11186;
	add.s64 	%rd11289, %rd11285, %rd11288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7761,%dummy}, %rd11260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7762}, %rd11260;
	}
	shf.r.wrap.b32 	%r7763, %r7762, %r7761, 14;
	shf.r.wrap.b32 	%r7764, %r7761, %r7762, 14;
	mov.b64 	%rd11290, {%r7764, %r7763};
	shf.r.wrap.b32 	%r7765, %r7762, %r7761, 18;
	shf.r.wrap.b32 	%r7766, %r7761, %r7762, 18;
	mov.b64 	%rd11291, {%r7766, %r7765};
	xor.b64  	%rd11292, %rd11290, %rd11291;
	shf.l.wrap.b32 	%r7767, %r7761, %r7762, 23;
	shf.l.wrap.b32 	%r7768, %r7762, %r7761, 23;
	mov.b64 	%rd11293, {%r7768, %r7767};
	xor.b64  	%rd11294, %rd11292, %rd11293;
	add.s64 	%rd11295, %rd11289, %rd11294;
	add.s64 	%rd11296, %rd11295, -6606660893046293015;
	add.s64 	%rd11297, %rd11296, %rd11160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7769,%dummy}, %rd11271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7770}, %rd11271;
	}
	shf.r.wrap.b32 	%r7771, %r7770, %r7769, 28;
	shf.r.wrap.b32 	%r7772, %r7769, %r7770, 28;
	mov.b64 	%rd11298, {%r7772, %r7771};
	shf.l.wrap.b32 	%r7773, %r7769, %r7770, 30;
	shf.l.wrap.b32 	%r7774, %r7770, %r7769, 30;
	mov.b64 	%rd11299, {%r7774, %r7773};
	xor.b64  	%rd11300, %rd11298, %rd11299;
	shf.l.wrap.b32 	%r7775, %r7769, %r7770, 25;
	shf.l.wrap.b32 	%r7776, %r7770, %r7769, 25;
	mov.b64 	%rd11301, {%r7776, %r7775};
	xor.b64  	%rd11302, %rd11300, %rd11301;
	and.b64  	%rd11303, %rd11271, %rd11234;
	or.b64  	%rd11304, %rd11271, %rd11234;
	and.b64  	%rd11305, %rd11304, %rd11197;
	or.b64  	%rd11306, %rd11305, %rd11303;
	add.s64 	%rd11307, %rd11306, %rd11302;
	add.s64 	%rd11308, %rd11307, %rd11296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7777,%dummy}, %rd11247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7778}, %rd11247;
	}
	shf.r.wrap.b32 	%r7779, %r7778, %r7777, 19;
	shf.r.wrap.b32 	%r7780, %r7777, %r7778, 19;
	mov.b64 	%rd11309, {%r7780, %r7779};
	shf.l.wrap.b32 	%r7781, %r7777, %r7778, 3;
	shf.l.wrap.b32 	%r7782, %r7778, %r7777, 3;
	mov.b64 	%rd11310, {%r7782, %r7781};
	xor.b64  	%rd11311, %rd11309, %rd11310;
	shr.u64 	%rd11312, %rd11247, 6;
	xor.b64  	%rd11313, %rd11311, %rd11312;
	shf.r.wrap.b32 	%r7783, %r7440, %r7439, 1;
	shf.r.wrap.b32 	%r7784, %r7439, %r7440, 1;
	mov.b64 	%rd11314, {%r7784, %r7783};
	shf.r.wrap.b32 	%r7785, %r7440, %r7439, 8;
	shf.r.wrap.b32 	%r7786, %r7439, %r7440, 8;
	mov.b64 	%rd11315, {%r7786, %r7785};
	xor.b64  	%rd11316, %rd11314, %rd11315;
	shr.u64 	%rd11317, %rd10766, 7;
	xor.b64  	%rd11318, %rd11316, %rd11317;
	add.s64 	%rd11319, %rd11318, %rd10729;
	add.s64 	%rd11320, %rd11319, %rd11062;
	add.s64 	%rd11321, %rd11320, %rd11313;
	add.s64 	%rd11322, %rd11321, %rd11186;
	xor.b64  	%rd11323, %rd11260, %rd11223;
	and.b64  	%rd11324, %rd11297, %rd11323;
	xor.b64  	%rd11325, %rd11324, %rd11223;
	add.s64 	%rd11326, %rd11322, %rd11325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7787,%dummy}, %rd11297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7788}, %rd11297;
	}
	shf.r.wrap.b32 	%r7789, %r7788, %r7787, 14;
	shf.r.wrap.b32 	%r7790, %r7787, %r7788, 14;
	mov.b64 	%rd11327, {%r7790, %r7789};
	shf.r.wrap.b32 	%r7791, %r7788, %r7787, 18;
	shf.r.wrap.b32 	%r7792, %r7787, %r7788, 18;
	mov.b64 	%rd11328, {%r7792, %r7791};
	xor.b64  	%rd11329, %rd11327, %rd11328;
	shf.l.wrap.b32 	%r7793, %r7787, %r7788, 23;
	shf.l.wrap.b32 	%r7794, %r7788, %r7787, 23;
	mov.b64 	%rd11330, {%r7794, %r7793};
	xor.b64  	%rd11331, %rd11329, %rd11330;
	add.s64 	%rd11332, %rd11326, %rd11331;
	add.s64 	%rd11333, %rd11332, -4685533653050689259;
	add.s64 	%rd11334, %rd11333, %rd11197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7795,%dummy}, %rd11308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7796}, %rd11308;
	}
	shf.r.wrap.b32 	%r7797, %r7796, %r7795, 28;
	shf.r.wrap.b32 	%r7798, %r7795, %r7796, 28;
	mov.b64 	%rd11335, {%r7798, %r7797};
	shf.l.wrap.b32 	%r7799, %r7795, %r7796, 30;
	shf.l.wrap.b32 	%r7800, %r7796, %r7795, 30;
	mov.b64 	%rd11336, {%r7800, %r7799};
	xor.b64  	%rd11337, %rd11335, %rd11336;
	shf.l.wrap.b32 	%r7801, %r7795, %r7796, 25;
	shf.l.wrap.b32 	%r7802, %r7796, %r7795, 25;
	mov.b64 	%rd11338, {%r7802, %r7801};
	xor.b64  	%rd11339, %rd11337, %rd11338;
	and.b64  	%rd11340, %rd11308, %rd11271;
	or.b64  	%rd11341, %rd11308, %rd11271;
	and.b64  	%rd11342, %rd11341, %rd11234;
	or.b64  	%rd11343, %rd11342, %rd11340;
	add.s64 	%rd11344, %rd11343, %rd11339;
	add.s64 	%rd11345, %rd11344, %rd11333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7803,%dummy}, %rd11284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7804}, %rd11284;
	}
	shf.r.wrap.b32 	%r7805, %r7804, %r7803, 19;
	shf.r.wrap.b32 	%r7806, %r7803, %r7804, 19;
	mov.b64 	%rd11346, {%r7806, %r7805};
	shf.l.wrap.b32 	%r7807, %r7803, %r7804, 3;
	shf.l.wrap.b32 	%r7808, %r7804, %r7803, 3;
	mov.b64 	%rd11347, {%r7808, %r7807};
	xor.b64  	%rd11348, %rd11346, %rd11347;
	shr.u64 	%rd11349, %rd11284, 6;
	xor.b64  	%rd11350, %rd11348, %rd11349;
	shf.r.wrap.b32 	%r7809, %r7466, %r7465, 1;
	shf.r.wrap.b32 	%r7810, %r7465, %r7466, 1;
	mov.b64 	%rd11351, {%r7810, %r7809};
	shf.r.wrap.b32 	%r7811, %r7466, %r7465, 8;
	shf.r.wrap.b32 	%r7812, %r7465, %r7466, 8;
	mov.b64 	%rd11352, {%r7812, %r7811};
	xor.b64  	%rd11353, %rd11351, %rd11352;
	shr.u64 	%rd11354, %rd10803, 7;
	xor.b64  	%rd11355, %rd11353, %rd11354;
	add.s64 	%rd11356, %rd11355, %rd10766;
	add.s64 	%rd11357, %rd11356, %rd11099;
	add.s64 	%rd11358, %rd11357, %rd11350;
	add.s64 	%rd11359, %rd11358, %rd11223;
	xor.b64  	%rd11360, %rd11297, %rd11260;
	and.b64  	%rd11361, %rd11334, %rd11360;
	xor.b64  	%rd11362, %rd11361, %rd11260;
	add.s64 	%rd11363, %rd11359, %rd11362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7813,%dummy}, %rd11334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7814}, %rd11334;
	}
	shf.r.wrap.b32 	%r7815, %r7814, %r7813, 14;
	shf.r.wrap.b32 	%r7816, %r7813, %r7814, 14;
	mov.b64 	%rd11364, {%r7816, %r7815};
	shf.r.wrap.b32 	%r7817, %r7814, %r7813, 18;
	shf.r.wrap.b32 	%r7818, %r7813, %r7814, 18;
	mov.b64 	%rd11365, {%r7818, %r7817};
	xor.b64  	%rd11366, %rd11364, %rd11365;
	shf.l.wrap.b32 	%r7819, %r7813, %r7814, 23;
	shf.l.wrap.b32 	%r7820, %r7814, %r7813, 23;
	mov.b64 	%rd11367, {%r7820, %r7819};
	xor.b64  	%rd11368, %rd11366, %rd11367;
	add.s64 	%rd11369, %rd11363, %rd11368;
	add.s64 	%rd11370, %rd11369, -4147400797238176981;
	add.s64 	%rd11371, %rd11370, %rd11234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7821,%dummy}, %rd11345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7822}, %rd11345;
	}
	shf.r.wrap.b32 	%r7823, %r7822, %r7821, 28;
	shf.r.wrap.b32 	%r7824, %r7821, %r7822, 28;
	mov.b64 	%rd11372, {%r7824, %r7823};
	shf.l.wrap.b32 	%r7825, %r7821, %r7822, 30;
	shf.l.wrap.b32 	%r7826, %r7822, %r7821, 30;
	mov.b64 	%rd11373, {%r7826, %r7825};
	xor.b64  	%rd11374, %rd11372, %rd11373;
	shf.l.wrap.b32 	%r7827, %r7821, %r7822, 25;
	shf.l.wrap.b32 	%r7828, %r7822, %r7821, 25;
	mov.b64 	%rd11375, {%r7828, %r7827};
	xor.b64  	%rd11376, %rd11374, %rd11375;
	and.b64  	%rd11377, %rd11345, %rd11308;
	or.b64  	%rd11378, %rd11345, %rd11308;
	and.b64  	%rd11379, %rd11378, %rd11271;
	or.b64  	%rd11380, %rd11379, %rd11377;
	add.s64 	%rd11381, %rd11380, %rd11376;
	add.s64 	%rd11382, %rd11381, %rd11370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7829,%dummy}, %rd11321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7830}, %rd11321;
	}
	shf.r.wrap.b32 	%r7831, %r7830, %r7829, 19;
	shf.r.wrap.b32 	%r7832, %r7829, %r7830, 19;
	mov.b64 	%rd11383, {%r7832, %r7831};
	shf.l.wrap.b32 	%r7833, %r7829, %r7830, 3;
	shf.l.wrap.b32 	%r7834, %r7830, %r7829, 3;
	mov.b64 	%rd11384, {%r7834, %r7833};
	xor.b64  	%rd11385, %rd11383, %rd11384;
	shr.u64 	%rd11386, %rd11321, 6;
	xor.b64  	%rd11387, %rd11385, %rd11386;
	shf.r.wrap.b32 	%r7835, %r7492, %r7491, 1;
	shf.r.wrap.b32 	%r7836, %r7491, %r7492, 1;
	mov.b64 	%rd11388, {%r7836, %r7835};
	shf.r.wrap.b32 	%r7837, %r7492, %r7491, 8;
	shf.r.wrap.b32 	%r7838, %r7491, %r7492, 8;
	mov.b64 	%rd11389, {%r7838, %r7837};
	xor.b64  	%rd11390, %rd11388, %rd11389;
	shr.u64 	%rd11391, %rd10840, 7;
	xor.b64  	%rd11392, %rd11390, %rd11391;
	add.s64 	%rd11393, %rd11392, %rd10803;
	add.s64 	%rd11394, %rd11393, %rd11136;
	add.s64 	%rd11395, %rd11394, %rd11387;
	add.s64 	%rd11396, %rd11395, %rd11260;
	xor.b64  	%rd11397, %rd11334, %rd11297;
	and.b64  	%rd11398, %rd11371, %rd11397;
	xor.b64  	%rd11399, %rd11398, %rd11297;
	add.s64 	%rd11400, %rd11396, %rd11399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7839,%dummy}, %rd11371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7840}, %rd11371;
	}
	shf.r.wrap.b32 	%r7841, %r7840, %r7839, 14;
	shf.r.wrap.b32 	%r7842, %r7839, %r7840, 14;
	mov.b64 	%rd11401, {%r7842, %r7841};
	shf.r.wrap.b32 	%r7843, %r7840, %r7839, 18;
	shf.r.wrap.b32 	%r7844, %r7839, %r7840, 18;
	mov.b64 	%rd11402, {%r7844, %r7843};
	xor.b64  	%rd11403, %rd11401, %rd11402;
	shf.l.wrap.b32 	%r7845, %r7839, %r7840, 23;
	shf.l.wrap.b32 	%r7846, %r7840, %r7839, 23;
	mov.b64 	%rd11404, {%r7846, %r7845};
	xor.b64  	%rd11405, %rd11403, %rd11404;
	add.s64 	%rd11406, %rd11400, %rd11405;
	add.s64 	%rd11407, %rd11406, -3880063495543823972;
	add.s64 	%rd11408, %rd11407, %rd11271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7847,%dummy}, %rd11382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7848}, %rd11382;
	}
	shf.r.wrap.b32 	%r7849, %r7848, %r7847, 28;
	shf.r.wrap.b32 	%r7850, %r7847, %r7848, 28;
	mov.b64 	%rd11409, {%r7850, %r7849};
	shf.l.wrap.b32 	%r7851, %r7847, %r7848, 30;
	shf.l.wrap.b32 	%r7852, %r7848, %r7847, 30;
	mov.b64 	%rd11410, {%r7852, %r7851};
	xor.b64  	%rd11411, %rd11409, %rd11410;
	shf.l.wrap.b32 	%r7853, %r7847, %r7848, 25;
	shf.l.wrap.b32 	%r7854, %r7848, %r7847, 25;
	mov.b64 	%rd11412, {%r7854, %r7853};
	xor.b64  	%rd11413, %rd11411, %rd11412;
	and.b64  	%rd11414, %rd11382, %rd11345;
	or.b64  	%rd11415, %rd11382, %rd11345;
	and.b64  	%rd11416, %rd11415, %rd11308;
	or.b64  	%rd11417, %rd11416, %rd11414;
	add.s64 	%rd11418, %rd11417, %rd11413;
	add.s64 	%rd11419, %rd11418, %rd11407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7855,%dummy}, %rd11358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7856}, %rd11358;
	}
	shf.r.wrap.b32 	%r7857, %r7856, %r7855, 19;
	shf.r.wrap.b32 	%r7858, %r7855, %r7856, 19;
	mov.b64 	%rd11420, {%r7858, %r7857};
	shf.l.wrap.b32 	%r7859, %r7855, %r7856, 3;
	shf.l.wrap.b32 	%r7860, %r7856, %r7855, 3;
	mov.b64 	%rd11421, {%r7860, %r7859};
	xor.b64  	%rd11422, %rd11420, %rd11421;
	shr.u64 	%rd11423, %rd11358, 6;
	xor.b64  	%rd11424, %rd11422, %rd11423;
	shf.r.wrap.b32 	%r7861, %r7518, %r7517, 1;
	shf.r.wrap.b32 	%r7862, %r7517, %r7518, 1;
	mov.b64 	%rd11425, {%r7862, %r7861};
	shf.r.wrap.b32 	%r7863, %r7518, %r7517, 8;
	shf.r.wrap.b32 	%r7864, %r7517, %r7518, 8;
	mov.b64 	%rd11426, {%r7864, %r7863};
	xor.b64  	%rd11427, %rd11425, %rd11426;
	shr.u64 	%rd11428, %rd10877, 7;
	xor.b64  	%rd11429, %rd11427, %rd11428;
	add.s64 	%rd11430, %rd11429, %rd10840;
	add.s64 	%rd11431, %rd11430, %rd11173;
	add.s64 	%rd11432, %rd11431, %rd11424;
	add.s64 	%rd11433, %rd11432, %rd11297;
	xor.b64  	%rd11434, %rd11371, %rd11334;
	and.b64  	%rd11435, %rd11408, %rd11434;
	xor.b64  	%rd11436, %rd11435, %rd11334;
	add.s64 	%rd11437, %rd11433, %rd11436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7865,%dummy}, %rd11408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7866}, %rd11408;
	}
	shf.r.wrap.b32 	%r7867, %r7866, %r7865, 14;
	shf.r.wrap.b32 	%r7868, %r7865, %r7866, 14;
	mov.b64 	%rd11438, {%r7868, %r7867};
	shf.r.wrap.b32 	%r7869, %r7866, %r7865, 18;
	shf.r.wrap.b32 	%r7870, %r7865, %r7866, 18;
	mov.b64 	%rd11439, {%r7870, %r7869};
	xor.b64  	%rd11440, %rd11438, %rd11439;
	shf.l.wrap.b32 	%r7871, %r7865, %r7866, 23;
	shf.l.wrap.b32 	%r7872, %r7866, %r7865, 23;
	mov.b64 	%rd11441, {%r7872, %r7871};
	xor.b64  	%rd11442, %rd11440, %rd11441;
	add.s64 	%rd11443, %rd11437, %rd11442;
	add.s64 	%rd11444, %rd11443, -3348786107499101689;
	add.s64 	%rd11445, %rd11444, %rd11308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7873,%dummy}, %rd11419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7874}, %rd11419;
	}
	shf.r.wrap.b32 	%r7875, %r7874, %r7873, 28;
	shf.r.wrap.b32 	%r7876, %r7873, %r7874, 28;
	mov.b64 	%rd11446, {%r7876, %r7875};
	shf.l.wrap.b32 	%r7877, %r7873, %r7874, 30;
	shf.l.wrap.b32 	%r7878, %r7874, %r7873, 30;
	mov.b64 	%rd11447, {%r7878, %r7877};
	xor.b64  	%rd11448, %rd11446, %rd11447;
	shf.l.wrap.b32 	%r7879, %r7873, %r7874, 25;
	shf.l.wrap.b32 	%r7880, %r7874, %r7873, 25;
	mov.b64 	%rd11449, {%r7880, %r7879};
	xor.b64  	%rd11450, %rd11448, %rd11449;
	and.b64  	%rd11451, %rd11419, %rd11382;
	or.b64  	%rd11452, %rd11419, %rd11382;
	and.b64  	%rd11453, %rd11452, %rd11345;
	or.b64  	%rd11454, %rd11453, %rd11451;
	add.s64 	%rd11455, %rd11454, %rd11450;
	add.s64 	%rd11456, %rd11455, %rd11444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7881,%dummy}, %rd11395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7882}, %rd11395;
	}
	shf.r.wrap.b32 	%r7883, %r7882, %r7881, 19;
	shf.r.wrap.b32 	%r7884, %r7881, %r7882, 19;
	mov.b64 	%rd11457, {%r7884, %r7883};
	shf.l.wrap.b32 	%r7885, %r7881, %r7882, 3;
	shf.l.wrap.b32 	%r7886, %r7882, %r7881, 3;
	mov.b64 	%rd11458, {%r7886, %r7885};
	xor.b64  	%rd11459, %rd11457, %rd11458;
	shr.u64 	%rd11460, %rd11395, 6;
	xor.b64  	%rd11461, %rd11459, %rd11460;
	shf.r.wrap.b32 	%r7887, %r7544, %r7543, 1;
	shf.r.wrap.b32 	%r7888, %r7543, %r7544, 1;
	mov.b64 	%rd11462, {%r7888, %r7887};
	shf.r.wrap.b32 	%r7889, %r7544, %r7543, 8;
	shf.r.wrap.b32 	%r7890, %r7543, %r7544, 8;
	mov.b64 	%rd11463, {%r7890, %r7889};
	xor.b64  	%rd11464, %rd11462, %rd11463;
	shr.u64 	%rd11465, %rd10914, 7;
	xor.b64  	%rd11466, %rd11464, %rd11465;
	add.s64 	%rd11467, %rd11466, %rd10877;
	add.s64 	%rd11468, %rd11467, %rd11210;
	add.s64 	%rd11469, %rd11468, %rd11461;
	add.s64 	%rd11470, %rd11469, %rd11334;
	xor.b64  	%rd11471, %rd11408, %rd11371;
	and.b64  	%rd11472, %rd11445, %rd11471;
	xor.b64  	%rd11473, %rd11472, %rd11371;
	add.s64 	%rd11474, %rd11470, %rd11473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7891,%dummy}, %rd11445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7892}, %rd11445;
	}
	shf.r.wrap.b32 	%r7893, %r7892, %r7891, 14;
	shf.r.wrap.b32 	%r7894, %r7891, %r7892, 14;
	mov.b64 	%rd11475, {%r7894, %r7893};
	shf.r.wrap.b32 	%r7895, %r7892, %r7891, 18;
	shf.r.wrap.b32 	%r7896, %r7891, %r7892, 18;
	mov.b64 	%rd11476, {%r7896, %r7895};
	xor.b64  	%rd11477, %rd11475, %rd11476;
	shf.l.wrap.b32 	%r7897, %r7891, %r7892, 23;
	shf.l.wrap.b32 	%r7898, %r7892, %r7891, 23;
	mov.b64 	%rd11478, {%r7898, %r7897};
	xor.b64  	%rd11479, %rd11477, %rd11478;
	add.s64 	%rd11480, %rd11474, %rd11479;
	add.s64 	%rd11481, %rd11480, -1523767162380948706;
	add.s64 	%rd11482, %rd11481, %rd11345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7899,%dummy}, %rd11456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7900}, %rd11456;
	}
	shf.r.wrap.b32 	%r7901, %r7900, %r7899, 28;
	shf.r.wrap.b32 	%r7902, %r7899, %r7900, 28;
	mov.b64 	%rd11483, {%r7902, %r7901};
	shf.l.wrap.b32 	%r7903, %r7899, %r7900, 30;
	shf.l.wrap.b32 	%r7904, %r7900, %r7899, 30;
	mov.b64 	%rd11484, {%r7904, %r7903};
	xor.b64  	%rd11485, %rd11483, %rd11484;
	shf.l.wrap.b32 	%r7905, %r7899, %r7900, 25;
	shf.l.wrap.b32 	%r7906, %r7900, %r7899, 25;
	mov.b64 	%rd11486, {%r7906, %r7905};
	xor.b64  	%rd11487, %rd11485, %rd11486;
	and.b64  	%rd11488, %rd11456, %rd11419;
	or.b64  	%rd11489, %rd11456, %rd11419;
	and.b64  	%rd11490, %rd11489, %rd11382;
	or.b64  	%rd11491, %rd11490, %rd11488;
	add.s64 	%rd11492, %rd11491, %rd11487;
	add.s64 	%rd11493, %rd11492, %rd11481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7907,%dummy}, %rd11432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7908}, %rd11432;
	}
	shf.r.wrap.b32 	%r7909, %r7908, %r7907, 19;
	shf.r.wrap.b32 	%r7910, %r7907, %r7908, 19;
	mov.b64 	%rd11494, {%r7910, %r7909};
	shf.l.wrap.b32 	%r7911, %r7907, %r7908, 3;
	shf.l.wrap.b32 	%r7912, %r7908, %r7907, 3;
	mov.b64 	%rd11495, {%r7912, %r7911};
	xor.b64  	%rd11496, %rd11494, %rd11495;
	shr.u64 	%rd11497, %rd11432, 6;
	xor.b64  	%rd11498, %rd11496, %rd11497;
	shf.r.wrap.b32 	%r7913, %r7570, %r7569, 1;
	shf.r.wrap.b32 	%r7914, %r7569, %r7570, 1;
	mov.b64 	%rd11499, {%r7914, %r7913};
	shf.r.wrap.b32 	%r7915, %r7570, %r7569, 8;
	shf.r.wrap.b32 	%r7916, %r7569, %r7570, 8;
	mov.b64 	%rd11500, {%r7916, %r7915};
	xor.b64  	%rd11501, %rd11499, %rd11500;
	shr.u64 	%rd11502, %rd10951, 7;
	xor.b64  	%rd11503, %rd11501, %rd11502;
	add.s64 	%rd11504, %rd11503, %rd10914;
	add.s64 	%rd11505, %rd11504, %rd11247;
	add.s64 	%rd11506, %rd11505, %rd11498;
	add.s64 	%rd11507, %rd11506, %rd11371;
	xor.b64  	%rd11508, %rd11445, %rd11408;
	and.b64  	%rd11509, %rd11482, %rd11508;
	xor.b64  	%rd11510, %rd11509, %rd11408;
	add.s64 	%rd11511, %rd11507, %rd11510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7917,%dummy}, %rd11482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7918}, %rd11482;
	}
	shf.r.wrap.b32 	%r7919, %r7918, %r7917, 14;
	shf.r.wrap.b32 	%r7920, %r7917, %r7918, 14;
	mov.b64 	%rd11512, {%r7920, %r7919};
	shf.r.wrap.b32 	%r7921, %r7918, %r7917, 18;
	shf.r.wrap.b32 	%r7922, %r7917, %r7918, 18;
	mov.b64 	%rd11513, {%r7922, %r7921};
	xor.b64  	%rd11514, %rd11512, %rd11513;
	shf.l.wrap.b32 	%r7923, %r7917, %r7918, 23;
	shf.l.wrap.b32 	%r7924, %r7918, %r7917, 23;
	mov.b64 	%rd11515, {%r7924, %r7923};
	xor.b64  	%rd11516, %rd11514, %rd11515;
	add.s64 	%rd11517, %rd11511, %rd11516;
	add.s64 	%rd11518, %rd11517, -757361751448694408;
	add.s64 	%rd11519, %rd11518, %rd11382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7925,%dummy}, %rd11493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7926}, %rd11493;
	}
	shf.r.wrap.b32 	%r7927, %r7926, %r7925, 28;
	shf.r.wrap.b32 	%r7928, %r7925, %r7926, 28;
	mov.b64 	%rd11520, {%r7928, %r7927};
	shf.l.wrap.b32 	%r7929, %r7925, %r7926, 30;
	shf.l.wrap.b32 	%r7930, %r7926, %r7925, 30;
	mov.b64 	%rd11521, {%r7930, %r7929};
	xor.b64  	%rd11522, %rd11520, %rd11521;
	shf.l.wrap.b32 	%r7931, %r7925, %r7926, 25;
	shf.l.wrap.b32 	%r7932, %r7926, %r7925, 25;
	mov.b64 	%rd11523, {%r7932, %r7931};
	xor.b64  	%rd11524, %rd11522, %rd11523;
	and.b64  	%rd11525, %rd11493, %rd11456;
	or.b64  	%rd11526, %rd11493, %rd11456;
	and.b64  	%rd11527, %rd11526, %rd11419;
	or.b64  	%rd11528, %rd11527, %rd11525;
	add.s64 	%rd11529, %rd11528, %rd11524;
	add.s64 	%rd11530, %rd11529, %rd11518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7933,%dummy}, %rd11469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7934}, %rd11469;
	}
	shf.r.wrap.b32 	%r7935, %r7934, %r7933, 19;
	shf.r.wrap.b32 	%r7936, %r7933, %r7934, 19;
	mov.b64 	%rd11531, {%r7936, %r7935};
	shf.l.wrap.b32 	%r7937, %r7933, %r7934, 3;
	shf.l.wrap.b32 	%r7938, %r7934, %r7933, 3;
	mov.b64 	%rd11532, {%r7938, %r7937};
	xor.b64  	%rd11533, %rd11531, %rd11532;
	shr.u64 	%rd11534, %rd11469, 6;
	xor.b64  	%rd11535, %rd11533, %rd11534;
	shf.r.wrap.b32 	%r7939, %r7596, %r7595, 1;
	shf.r.wrap.b32 	%r7940, %r7595, %r7596, 1;
	mov.b64 	%rd11536, {%r7940, %r7939};
	shf.r.wrap.b32 	%r7941, %r7596, %r7595, 8;
	shf.r.wrap.b32 	%r7942, %r7595, %r7596, 8;
	mov.b64 	%rd11537, {%r7942, %r7941};
	xor.b64  	%rd11538, %rd11536, %rd11537;
	shr.u64 	%rd11539, %rd10988, 7;
	xor.b64  	%rd11540, %rd11538, %rd11539;
	add.s64 	%rd11541, %rd11540, %rd10951;
	add.s64 	%rd11542, %rd11541, %rd11284;
	add.s64 	%rd11543, %rd11542, %rd11535;
	add.s64 	%rd11544, %rd11543, %rd11408;
	xor.b64  	%rd11545, %rd11482, %rd11445;
	and.b64  	%rd11546, %rd11519, %rd11545;
	xor.b64  	%rd11547, %rd11546, %rd11445;
	add.s64 	%rd11548, %rd11544, %rd11547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7943,%dummy}, %rd11519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7944}, %rd11519;
	}
	shf.r.wrap.b32 	%r7945, %r7944, %r7943, 14;
	shf.r.wrap.b32 	%r7946, %r7943, %r7944, 14;
	mov.b64 	%rd11549, {%r7946, %r7945};
	shf.r.wrap.b32 	%r7947, %r7944, %r7943, 18;
	shf.r.wrap.b32 	%r7948, %r7943, %r7944, 18;
	mov.b64 	%rd11550, {%r7948, %r7947};
	xor.b64  	%rd11551, %rd11549, %rd11550;
	shf.l.wrap.b32 	%r7949, %r7943, %r7944, 23;
	shf.l.wrap.b32 	%r7950, %r7944, %r7943, 23;
	mov.b64 	%rd11552, {%r7950, %r7949};
	xor.b64  	%rd11553, %rd11551, %rd11552;
	add.s64 	%rd11554, %rd11548, %rd11553;
	add.s64 	%rd11555, %rd11554, 500013540394364858;
	add.s64 	%rd11556, %rd11555, %rd11419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7951,%dummy}, %rd11530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7952}, %rd11530;
	}
	shf.r.wrap.b32 	%r7953, %r7952, %r7951, 28;
	shf.r.wrap.b32 	%r7954, %r7951, %r7952, 28;
	mov.b64 	%rd11557, {%r7954, %r7953};
	shf.l.wrap.b32 	%r7955, %r7951, %r7952, 30;
	shf.l.wrap.b32 	%r7956, %r7952, %r7951, 30;
	mov.b64 	%rd11558, {%r7956, %r7955};
	xor.b64  	%rd11559, %rd11557, %rd11558;
	shf.l.wrap.b32 	%r7957, %r7951, %r7952, 25;
	shf.l.wrap.b32 	%r7958, %r7952, %r7951, 25;
	mov.b64 	%rd11560, {%r7958, %r7957};
	xor.b64  	%rd11561, %rd11559, %rd11560;
	and.b64  	%rd11562, %rd11530, %rd11493;
	or.b64  	%rd11563, %rd11530, %rd11493;
	and.b64  	%rd11564, %rd11563, %rd11456;
	or.b64  	%rd11565, %rd11564, %rd11562;
	add.s64 	%rd11566, %rd11565, %rd11561;
	add.s64 	%rd11567, %rd11566, %rd11555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7959,%dummy}, %rd11506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7960}, %rd11506;
	}
	shf.r.wrap.b32 	%r7961, %r7960, %r7959, 19;
	shf.r.wrap.b32 	%r7962, %r7959, %r7960, 19;
	mov.b64 	%rd11568, {%r7962, %r7961};
	shf.l.wrap.b32 	%r7963, %r7959, %r7960, 3;
	shf.l.wrap.b32 	%r7964, %r7960, %r7959, 3;
	mov.b64 	%rd11569, {%r7964, %r7963};
	xor.b64  	%rd11570, %rd11568, %rd11569;
	shr.u64 	%rd11571, %rd11506, 6;
	xor.b64  	%rd11572, %rd11570, %rd11571;
	shf.r.wrap.b32 	%r7965, %r7622, %r7621, 1;
	shf.r.wrap.b32 	%r7966, %r7621, %r7622, 1;
	mov.b64 	%rd11573, {%r7966, %r7965};
	shf.r.wrap.b32 	%r7967, %r7622, %r7621, 8;
	shf.r.wrap.b32 	%r7968, %r7621, %r7622, 8;
	mov.b64 	%rd11574, {%r7968, %r7967};
	xor.b64  	%rd11575, %rd11573, %rd11574;
	shr.u64 	%rd11576, %rd11025, 7;
	xor.b64  	%rd11577, %rd11575, %rd11576;
	add.s64 	%rd11578, %rd11577, %rd10988;
	add.s64 	%rd11579, %rd11578, %rd11321;
	add.s64 	%rd11580, %rd11579, %rd11572;
	add.s64 	%rd11581, %rd11580, %rd11445;
	xor.b64  	%rd11582, %rd11519, %rd11482;
	and.b64  	%rd11583, %rd11556, %rd11582;
	xor.b64  	%rd11584, %rd11583, %rd11482;
	add.s64 	%rd11585, %rd11581, %rd11584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7969,%dummy}, %rd11556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7970}, %rd11556;
	}
	shf.r.wrap.b32 	%r7971, %r7970, %r7969, 14;
	shf.r.wrap.b32 	%r7972, %r7969, %r7970, 14;
	mov.b64 	%rd11586, {%r7972, %r7971};
	shf.r.wrap.b32 	%r7973, %r7970, %r7969, 18;
	shf.r.wrap.b32 	%r7974, %r7969, %r7970, 18;
	mov.b64 	%rd11587, {%r7974, %r7973};
	xor.b64  	%rd11588, %rd11586, %rd11587;
	shf.l.wrap.b32 	%r7975, %r7969, %r7970, 23;
	shf.l.wrap.b32 	%r7976, %r7970, %r7969, 23;
	mov.b64 	%rd11589, {%r7976, %r7975};
	xor.b64  	%rd11590, %rd11588, %rd11589;
	add.s64 	%rd11591, %rd11585, %rd11590;
	add.s64 	%rd11592, %rd11591, 748580250866718886;
	add.s64 	%rd11593, %rd11592, %rd11456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7977,%dummy}, %rd11567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7978}, %rd11567;
	}
	shf.r.wrap.b32 	%r7979, %r7978, %r7977, 28;
	shf.r.wrap.b32 	%r7980, %r7977, %r7978, 28;
	mov.b64 	%rd11594, {%r7980, %r7979};
	shf.l.wrap.b32 	%r7981, %r7977, %r7978, 30;
	shf.l.wrap.b32 	%r7982, %r7978, %r7977, 30;
	mov.b64 	%rd11595, {%r7982, %r7981};
	xor.b64  	%rd11596, %rd11594, %rd11595;
	shf.l.wrap.b32 	%r7983, %r7977, %r7978, 25;
	shf.l.wrap.b32 	%r7984, %r7978, %r7977, 25;
	mov.b64 	%rd11597, {%r7984, %r7983};
	xor.b64  	%rd11598, %rd11596, %rd11597;
	and.b64  	%rd11599, %rd11567, %rd11530;
	or.b64  	%rd11600, %rd11567, %rd11530;
	and.b64  	%rd11601, %rd11600, %rd11493;
	or.b64  	%rd11602, %rd11601, %rd11599;
	add.s64 	%rd11603, %rd11602, %rd11598;
	add.s64 	%rd11604, %rd11603, %rd11592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7985,%dummy}, %rd11543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7986}, %rd11543;
	}
	shf.r.wrap.b32 	%r7987, %r7986, %r7985, 19;
	shf.r.wrap.b32 	%r7988, %r7985, %r7986, 19;
	mov.b64 	%rd11605, {%r7988, %r7987};
	shf.l.wrap.b32 	%r7989, %r7985, %r7986, 3;
	shf.l.wrap.b32 	%r7990, %r7986, %r7985, 3;
	mov.b64 	%rd11606, {%r7990, %r7989};
	xor.b64  	%rd11607, %rd11605, %rd11606;
	shr.u64 	%rd11608, %rd11543, 6;
	xor.b64  	%rd11609, %rd11607, %rd11608;
	shf.r.wrap.b32 	%r7991, %r7648, %r7647, 1;
	shf.r.wrap.b32 	%r7992, %r7647, %r7648, 1;
	mov.b64 	%rd11610, {%r7992, %r7991};
	shf.r.wrap.b32 	%r7993, %r7648, %r7647, 8;
	shf.r.wrap.b32 	%r7994, %r7647, %r7648, 8;
	mov.b64 	%rd11611, {%r7994, %r7993};
	xor.b64  	%rd11612, %rd11610, %rd11611;
	shr.u64 	%rd11613, %rd11062, 7;
	xor.b64  	%rd11614, %rd11612, %rd11613;
	add.s64 	%rd11615, %rd11614, %rd11025;
	add.s64 	%rd11616, %rd11615, %rd11358;
	add.s64 	%rd11617, %rd11616, %rd11609;
	add.s64 	%rd11618, %rd11617, %rd11482;
	xor.b64  	%rd11619, %rd11556, %rd11519;
	and.b64  	%rd11620, %rd11593, %rd11619;
	xor.b64  	%rd11621, %rd11620, %rd11519;
	add.s64 	%rd11622, %rd11618, %rd11621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7995,%dummy}, %rd11593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7996}, %rd11593;
	}
	shf.r.wrap.b32 	%r7997, %r7996, %r7995, 14;
	shf.r.wrap.b32 	%r7998, %r7995, %r7996, 14;
	mov.b64 	%rd11623, {%r7998, %r7997};
	shf.r.wrap.b32 	%r7999, %r7996, %r7995, 18;
	shf.r.wrap.b32 	%r8000, %r7995, %r7996, 18;
	mov.b64 	%rd11624, {%r8000, %r7999};
	xor.b64  	%rd11625, %rd11623, %rd11624;
	shf.l.wrap.b32 	%r8001, %r7995, %r7996, 23;
	shf.l.wrap.b32 	%r8002, %r7996, %r7995, 23;
	mov.b64 	%rd11626, {%r8002, %r8001};
	xor.b64  	%rd11627, %rd11625, %rd11626;
	add.s64 	%rd11628, %rd11622, %rd11627;
	add.s64 	%rd11629, %rd11628, 1242879168328830382;
	add.s64 	%rd11630, %rd11629, %rd11493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8003,%dummy}, %rd11604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8004}, %rd11604;
	}
	shf.r.wrap.b32 	%r8005, %r8004, %r8003, 28;
	shf.r.wrap.b32 	%r8006, %r8003, %r8004, 28;
	mov.b64 	%rd11631, {%r8006, %r8005};
	shf.l.wrap.b32 	%r8007, %r8003, %r8004, 30;
	shf.l.wrap.b32 	%r8008, %r8004, %r8003, 30;
	mov.b64 	%rd11632, {%r8008, %r8007};
	xor.b64  	%rd11633, %rd11631, %rd11632;
	shf.l.wrap.b32 	%r8009, %r8003, %r8004, 25;
	shf.l.wrap.b32 	%r8010, %r8004, %r8003, 25;
	mov.b64 	%rd11634, {%r8010, %r8009};
	xor.b64  	%rd11635, %rd11633, %rd11634;
	and.b64  	%rd11636, %rd11604, %rd11567;
	or.b64  	%rd11637, %rd11604, %rd11567;
	and.b64  	%rd11638, %rd11637, %rd11530;
	or.b64  	%rd11639, %rd11638, %rd11636;
	add.s64 	%rd11640, %rd11639, %rd11635;
	add.s64 	%rd11641, %rd11640, %rd11629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8011,%dummy}, %rd11580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8012}, %rd11580;
	}
	shf.r.wrap.b32 	%r8013, %r8012, %r8011, 19;
	shf.r.wrap.b32 	%r8014, %r8011, %r8012, 19;
	mov.b64 	%rd11642, {%r8014, %r8013};
	shf.l.wrap.b32 	%r8015, %r8011, %r8012, 3;
	shf.l.wrap.b32 	%r8016, %r8012, %r8011, 3;
	mov.b64 	%rd11643, {%r8016, %r8015};
	xor.b64  	%rd11644, %rd11642, %rd11643;
	shr.u64 	%rd11645, %rd11580, 6;
	xor.b64  	%rd11646, %rd11644, %rd11645;
	shf.r.wrap.b32 	%r8017, %r7674, %r7673, 1;
	shf.r.wrap.b32 	%r8018, %r7673, %r7674, 1;
	mov.b64 	%rd11647, {%r8018, %r8017};
	shf.r.wrap.b32 	%r8019, %r7674, %r7673, 8;
	shf.r.wrap.b32 	%r8020, %r7673, %r7674, 8;
	mov.b64 	%rd11648, {%r8020, %r8019};
	xor.b64  	%rd11649, %rd11647, %rd11648;
	shr.u64 	%rd11650, %rd11099, 7;
	xor.b64  	%rd11651, %rd11649, %rd11650;
	add.s64 	%rd11652, %rd11651, %rd11062;
	add.s64 	%rd11653, %rd11652, %rd11395;
	add.s64 	%rd11654, %rd11653, %rd11646;
	add.s64 	%rd11655, %rd11654, %rd11519;
	xor.b64  	%rd11656, %rd11593, %rd11556;
	and.b64  	%rd11657, %rd11630, %rd11656;
	xor.b64  	%rd11658, %rd11657, %rd11556;
	add.s64 	%rd11659, %rd11655, %rd11658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8021,%dummy}, %rd11630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8022}, %rd11630;
	}
	shf.r.wrap.b32 	%r8023, %r8022, %r8021, 14;
	shf.r.wrap.b32 	%r8024, %r8021, %r8022, 14;
	mov.b64 	%rd11660, {%r8024, %r8023};
	shf.r.wrap.b32 	%r8025, %r8022, %r8021, 18;
	shf.r.wrap.b32 	%r8026, %r8021, %r8022, 18;
	mov.b64 	%rd11661, {%r8026, %r8025};
	xor.b64  	%rd11662, %rd11660, %rd11661;
	shf.l.wrap.b32 	%r8027, %r8021, %r8022, 23;
	shf.l.wrap.b32 	%r8028, %r8022, %r8021, 23;
	mov.b64 	%rd11663, {%r8028, %r8027};
	xor.b64  	%rd11664, %rd11662, %rd11663;
	add.s64 	%rd11665, %rd11659, %rd11664;
	add.s64 	%rd11666, %rd11665, 1977374033974150939;
	add.s64 	%rd11667, %rd11666, %rd11530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8029,%dummy}, %rd11641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8030}, %rd11641;
	}
	shf.r.wrap.b32 	%r8031, %r8030, %r8029, 28;
	shf.r.wrap.b32 	%r8032, %r8029, %r8030, 28;
	mov.b64 	%rd11668, {%r8032, %r8031};
	shf.l.wrap.b32 	%r8033, %r8029, %r8030, 30;
	shf.l.wrap.b32 	%r8034, %r8030, %r8029, 30;
	mov.b64 	%rd11669, {%r8034, %r8033};
	xor.b64  	%rd11670, %rd11668, %rd11669;
	shf.l.wrap.b32 	%r8035, %r8029, %r8030, 25;
	shf.l.wrap.b32 	%r8036, %r8030, %r8029, 25;
	mov.b64 	%rd11671, {%r8036, %r8035};
	xor.b64  	%rd11672, %rd11670, %rd11671;
	and.b64  	%rd11673, %rd11641, %rd11604;
	or.b64  	%rd11674, %rd11641, %rd11604;
	and.b64  	%rd11675, %rd11674, %rd11567;
	or.b64  	%rd11676, %rd11675, %rd11673;
	add.s64 	%rd11677, %rd11676, %rd11672;
	add.s64 	%rd11678, %rd11677, %rd11666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8037,%dummy}, %rd11617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8038}, %rd11617;
	}
	shf.r.wrap.b32 	%r8039, %r8038, %r8037, 19;
	shf.r.wrap.b32 	%r8040, %r8037, %r8038, 19;
	mov.b64 	%rd11679, {%r8040, %r8039};
	shf.l.wrap.b32 	%r8041, %r8037, %r8038, 3;
	shf.l.wrap.b32 	%r8042, %r8038, %r8037, 3;
	mov.b64 	%rd11680, {%r8042, %r8041};
	xor.b64  	%rd11681, %rd11679, %rd11680;
	shr.u64 	%rd11682, %rd11617, 6;
	xor.b64  	%rd11683, %rd11681, %rd11682;
	shf.r.wrap.b32 	%r8043, %r7700, %r7699, 1;
	shf.r.wrap.b32 	%r8044, %r7699, %r7700, 1;
	mov.b64 	%rd11684, {%r8044, %r8043};
	shf.r.wrap.b32 	%r8045, %r7700, %r7699, 8;
	shf.r.wrap.b32 	%r8046, %r7699, %r7700, 8;
	mov.b64 	%rd11685, {%r8046, %r8045};
	xor.b64  	%rd11686, %rd11684, %rd11685;
	shr.u64 	%rd11687, %rd11136, 7;
	xor.b64  	%rd11688, %rd11686, %rd11687;
	add.s64 	%rd11689, %rd11688, %rd11099;
	add.s64 	%rd11690, %rd11689, %rd11432;
	add.s64 	%rd11691, %rd11690, %rd11683;
	add.s64 	%rd11692, %rd11691, %rd11556;
	xor.b64  	%rd11693, %rd11630, %rd11593;
	and.b64  	%rd11694, %rd11667, %rd11693;
	xor.b64  	%rd11695, %rd11694, %rd11593;
	add.s64 	%rd11696, %rd11692, %rd11695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8047,%dummy}, %rd11667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8048}, %rd11667;
	}
	shf.r.wrap.b32 	%r8049, %r8048, %r8047, 14;
	shf.r.wrap.b32 	%r8050, %r8047, %r8048, 14;
	mov.b64 	%rd11697, {%r8050, %r8049};
	shf.r.wrap.b32 	%r8051, %r8048, %r8047, 18;
	shf.r.wrap.b32 	%r8052, %r8047, %r8048, 18;
	mov.b64 	%rd11698, {%r8052, %r8051};
	xor.b64  	%rd11699, %rd11697, %rd11698;
	shf.l.wrap.b32 	%r8053, %r8047, %r8048, 23;
	shf.l.wrap.b32 	%r8054, %r8048, %r8047, 23;
	mov.b64 	%rd11700, {%r8054, %r8053};
	xor.b64  	%rd11701, %rd11699, %rd11700;
	add.s64 	%rd11702, %rd11696, %rd11701;
	add.s64 	%rd11703, %rd11702, 2944078676154940804;
	add.s64 	%rd11704, %rd11703, %rd11567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8055,%dummy}, %rd11678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8056}, %rd11678;
	}
	shf.r.wrap.b32 	%r8057, %r8056, %r8055, 28;
	shf.r.wrap.b32 	%r8058, %r8055, %r8056, 28;
	mov.b64 	%rd11705, {%r8058, %r8057};
	shf.l.wrap.b32 	%r8059, %r8055, %r8056, 30;
	shf.l.wrap.b32 	%r8060, %r8056, %r8055, 30;
	mov.b64 	%rd11706, {%r8060, %r8059};
	xor.b64  	%rd11707, %rd11705, %rd11706;
	shf.l.wrap.b32 	%r8061, %r8055, %r8056, 25;
	shf.l.wrap.b32 	%r8062, %r8056, %r8055, 25;
	mov.b64 	%rd11708, {%r8062, %r8061};
	xor.b64  	%rd11709, %rd11707, %rd11708;
	and.b64  	%rd11710, %rd11678, %rd11641;
	or.b64  	%rd11711, %rd11678, %rd11641;
	and.b64  	%rd11712, %rd11711, %rd11604;
	or.b64  	%rd11713, %rd11712, %rd11710;
	add.s64 	%rd11714, %rd11713, %rd11709;
	add.s64 	%rd11715, %rd11714, %rd11703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8063,%dummy}, %rd11654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8064}, %rd11654;
	}
	shf.r.wrap.b32 	%r8065, %r8064, %r8063, 19;
	shf.r.wrap.b32 	%r8066, %r8063, %r8064, 19;
	mov.b64 	%rd11716, {%r8066, %r8065};
	shf.l.wrap.b32 	%r8067, %r8063, %r8064, 3;
	shf.l.wrap.b32 	%r8068, %r8064, %r8063, 3;
	mov.b64 	%rd11717, {%r8068, %r8067};
	xor.b64  	%rd11718, %rd11716, %rd11717;
	shr.u64 	%rd11719, %rd11654, 6;
	xor.b64  	%rd11720, %rd11718, %rd11719;
	shf.r.wrap.b32 	%r8069, %r7726, %r7725, 1;
	shf.r.wrap.b32 	%r8070, %r7725, %r7726, 1;
	mov.b64 	%rd11721, {%r8070, %r8069};
	shf.r.wrap.b32 	%r8071, %r7726, %r7725, 8;
	shf.r.wrap.b32 	%r8072, %r7725, %r7726, 8;
	mov.b64 	%rd11722, {%r8072, %r8071};
	xor.b64  	%rd11723, %rd11721, %rd11722;
	shr.u64 	%rd11724, %rd11173, 7;
	xor.b64  	%rd11725, %rd11723, %rd11724;
	add.s64 	%rd11726, %rd11725, %rd11136;
	add.s64 	%rd11727, %rd11726, %rd11469;
	add.s64 	%rd11728, %rd11727, %rd11720;
	add.s64 	%rd11729, %rd11728, %rd11593;
	xor.b64  	%rd11730, %rd11667, %rd11630;
	and.b64  	%rd11731, %rd11704, %rd11730;
	xor.b64  	%rd11732, %rd11731, %rd11630;
	add.s64 	%rd11733, %rd11729, %rd11732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8073,%dummy}, %rd11704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8074}, %rd11704;
	}
	shf.r.wrap.b32 	%r8075, %r8074, %r8073, 14;
	shf.r.wrap.b32 	%r8076, %r8073, %r8074, 14;
	mov.b64 	%rd11734, {%r8076, %r8075};
	shf.r.wrap.b32 	%r8077, %r8074, %r8073, 18;
	shf.r.wrap.b32 	%r8078, %r8073, %r8074, 18;
	mov.b64 	%rd11735, {%r8078, %r8077};
	xor.b64  	%rd11736, %rd11734, %rd11735;
	shf.l.wrap.b32 	%r8079, %r8073, %r8074, 23;
	shf.l.wrap.b32 	%r8080, %r8074, %r8073, 23;
	mov.b64 	%rd11737, {%r8080, %r8079};
	xor.b64  	%rd11738, %rd11736, %rd11737;
	add.s64 	%rd11739, %rd11733, %rd11738;
	add.s64 	%rd11740, %rd11739, 3659926193048069267;
	add.s64 	%rd11741, %rd11740, %rd11604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8081,%dummy}, %rd11715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8082}, %rd11715;
	}
	shf.r.wrap.b32 	%r8083, %r8082, %r8081, 28;
	shf.r.wrap.b32 	%r8084, %r8081, %r8082, 28;
	mov.b64 	%rd11742, {%r8084, %r8083};
	shf.l.wrap.b32 	%r8085, %r8081, %r8082, 30;
	shf.l.wrap.b32 	%r8086, %r8082, %r8081, 30;
	mov.b64 	%rd11743, {%r8086, %r8085};
	xor.b64  	%rd11744, %rd11742, %rd11743;
	shf.l.wrap.b32 	%r8087, %r8081, %r8082, 25;
	shf.l.wrap.b32 	%r8088, %r8082, %r8081, 25;
	mov.b64 	%rd11745, {%r8088, %r8087};
	xor.b64  	%rd11746, %rd11744, %rd11745;
	and.b64  	%rd11747, %rd11715, %rd11678;
	or.b64  	%rd11748, %rd11715, %rd11678;
	and.b64  	%rd11749, %rd11748, %rd11641;
	or.b64  	%rd11750, %rd11749, %rd11747;
	add.s64 	%rd11751, %rd11750, %rd11746;
	add.s64 	%rd11752, %rd11751, %rd11740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8089,%dummy}, %rd11691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8090}, %rd11691;
	}
	shf.r.wrap.b32 	%r8091, %r8090, %r8089, 19;
	shf.r.wrap.b32 	%r8092, %r8089, %r8090, 19;
	mov.b64 	%rd11753, {%r8092, %r8091};
	shf.l.wrap.b32 	%r8093, %r8089, %r8090, 3;
	shf.l.wrap.b32 	%r8094, %r8090, %r8089, 3;
	mov.b64 	%rd11754, {%r8094, %r8093};
	xor.b64  	%rd11755, %rd11753, %rd11754;
	shr.u64 	%rd11756, %rd11691, 6;
	xor.b64  	%rd11757, %rd11755, %rd11756;
	shf.r.wrap.b32 	%r8095, %r7752, %r7751, 1;
	shf.r.wrap.b32 	%r8096, %r7751, %r7752, 1;
	mov.b64 	%rd11758, {%r8096, %r8095};
	shf.r.wrap.b32 	%r8097, %r7752, %r7751, 8;
	shf.r.wrap.b32 	%r8098, %r7751, %r7752, 8;
	mov.b64 	%rd11759, {%r8098, %r8097};
	xor.b64  	%rd11760, %rd11758, %rd11759;
	shr.u64 	%rd11761, %rd11210, 7;
	xor.b64  	%rd11762, %rd11760, %rd11761;
	add.s64 	%rd11763, %rd11762, %rd11173;
	add.s64 	%rd11764, %rd11763, %rd11506;
	add.s64 	%rd11765, %rd11764, %rd11757;
	add.s64 	%rd11766, %rd11765, %rd11630;
	xor.b64  	%rd11767, %rd11704, %rd11667;
	and.b64  	%rd11768, %rd11741, %rd11767;
	xor.b64  	%rd11769, %rd11768, %rd11667;
	add.s64 	%rd11770, %rd11766, %rd11769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8099,%dummy}, %rd11741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8100}, %rd11741;
	}
	shf.r.wrap.b32 	%r8101, %r8100, %r8099, 14;
	shf.r.wrap.b32 	%r8102, %r8099, %r8100, 14;
	mov.b64 	%rd11771, {%r8102, %r8101};
	shf.r.wrap.b32 	%r8103, %r8100, %r8099, 18;
	shf.r.wrap.b32 	%r8104, %r8099, %r8100, 18;
	mov.b64 	%rd11772, {%r8104, %r8103};
	xor.b64  	%rd11773, %rd11771, %rd11772;
	shf.l.wrap.b32 	%r8105, %r8099, %r8100, 23;
	shf.l.wrap.b32 	%r8106, %r8100, %r8099, 23;
	mov.b64 	%rd11774, {%r8106, %r8105};
	xor.b64  	%rd11775, %rd11773, %rd11774;
	add.s64 	%rd11776, %rd11770, %rd11775;
	add.s64 	%rd11777, %rd11776, 4368137639120453308;
	add.s64 	%rd11778, %rd11777, %rd11641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8107,%dummy}, %rd11752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8108}, %rd11752;
	}
	shf.r.wrap.b32 	%r8109, %r8108, %r8107, 28;
	shf.r.wrap.b32 	%r8110, %r8107, %r8108, 28;
	mov.b64 	%rd11779, {%r8110, %r8109};
	shf.l.wrap.b32 	%r8111, %r8107, %r8108, 30;
	shf.l.wrap.b32 	%r8112, %r8108, %r8107, 30;
	mov.b64 	%rd11780, {%r8112, %r8111};
	xor.b64  	%rd11781, %rd11779, %rd11780;
	shf.l.wrap.b32 	%r8113, %r8107, %r8108, 25;
	shf.l.wrap.b32 	%r8114, %r8108, %r8107, 25;
	mov.b64 	%rd11782, {%r8114, %r8113};
	xor.b64  	%rd11783, %rd11781, %rd11782;
	and.b64  	%rd11784, %rd11752, %rd11715;
	or.b64  	%rd11785, %rd11752, %rd11715;
	and.b64  	%rd11786, %rd11785, %rd11678;
	or.b64  	%rd11787, %rd11786, %rd11784;
	add.s64 	%rd11788, %rd11787, %rd11783;
	add.s64 	%rd11789, %rd11788, %rd11777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8115,%dummy}, %rd11728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8116}, %rd11728;
	}
	shf.r.wrap.b32 	%r8117, %r8116, %r8115, 19;
	shf.r.wrap.b32 	%r8118, %r8115, %r8116, 19;
	mov.b64 	%rd11790, {%r8118, %r8117};
	shf.l.wrap.b32 	%r8119, %r8115, %r8116, 3;
	shf.l.wrap.b32 	%r8120, %r8116, %r8115, 3;
	mov.b64 	%rd11791, {%r8120, %r8119};
	xor.b64  	%rd11792, %rd11790, %rd11791;
	shr.u64 	%rd11793, %rd11728, 6;
	xor.b64  	%rd11794, %rd11792, %rd11793;
	shf.r.wrap.b32 	%r8121, %r7778, %r7777, 1;
	shf.r.wrap.b32 	%r8122, %r7777, %r7778, 1;
	mov.b64 	%rd11795, {%r8122, %r8121};
	shf.r.wrap.b32 	%r8123, %r7778, %r7777, 8;
	shf.r.wrap.b32 	%r8124, %r7777, %r7778, 8;
	mov.b64 	%rd11796, {%r8124, %r8123};
	xor.b64  	%rd11797, %rd11795, %rd11796;
	shr.u64 	%rd11798, %rd11247, 7;
	xor.b64  	%rd11799, %rd11797, %rd11798;
	add.s64 	%rd11800, %rd11799, %rd11210;
	add.s64 	%rd11801, %rd11800, %rd11543;
	add.s64 	%rd11802, %rd11801, %rd11794;
	add.s64 	%rd11803, %rd11802, %rd11667;
	xor.b64  	%rd11804, %rd11741, %rd11704;
	and.b64  	%rd11805, %rd11778, %rd11804;
	xor.b64  	%rd11806, %rd11805, %rd11704;
	add.s64 	%rd11807, %rd11803, %rd11806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8125,%dummy}, %rd11778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8126}, %rd11778;
	}
	shf.r.wrap.b32 	%r8127, %r8126, %r8125, 14;
	shf.r.wrap.b32 	%r8128, %r8125, %r8126, 14;
	mov.b64 	%rd11808, {%r8128, %r8127};
	shf.r.wrap.b32 	%r8129, %r8126, %r8125, 18;
	shf.r.wrap.b32 	%r8130, %r8125, %r8126, 18;
	mov.b64 	%rd11809, {%r8130, %r8129};
	xor.b64  	%rd11810, %rd11808, %rd11809;
	shf.l.wrap.b32 	%r8131, %r8125, %r8126, 23;
	shf.l.wrap.b32 	%r8132, %r8126, %r8125, 23;
	mov.b64 	%rd11811, {%r8132, %r8131};
	xor.b64  	%rd11812, %rd11810, %rd11811;
	add.s64 	%rd11813, %rd11807, %rd11812;
	add.s64 	%rd11814, %rd11813, 4836135668995329356;
	add.s64 	%rd11815, %rd11814, %rd11678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8133,%dummy}, %rd11789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8134}, %rd11789;
	}
	shf.r.wrap.b32 	%r8135, %r8134, %r8133, 28;
	shf.r.wrap.b32 	%r8136, %r8133, %r8134, 28;
	mov.b64 	%rd11816, {%r8136, %r8135};
	shf.l.wrap.b32 	%r8137, %r8133, %r8134, 30;
	shf.l.wrap.b32 	%r8138, %r8134, %r8133, 30;
	mov.b64 	%rd11817, {%r8138, %r8137};
	xor.b64  	%rd11818, %rd11816, %rd11817;
	shf.l.wrap.b32 	%r8139, %r8133, %r8134, 25;
	shf.l.wrap.b32 	%r8140, %r8134, %r8133, 25;
	mov.b64 	%rd11819, {%r8140, %r8139};
	xor.b64  	%rd11820, %rd11818, %rd11819;
	and.b64  	%rd11821, %rd11789, %rd11752;
	or.b64  	%rd11822, %rd11789, %rd11752;
	and.b64  	%rd11823, %rd11822, %rd11715;
	or.b64  	%rd11824, %rd11823, %rd11821;
	add.s64 	%rd11825, %rd11824, %rd11820;
	add.s64 	%rd11826, %rd11825, %rd11814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8141,%dummy}, %rd11765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8142}, %rd11765;
	}
	shf.r.wrap.b32 	%r8143, %r8142, %r8141, 19;
	shf.r.wrap.b32 	%r8144, %r8141, %r8142, 19;
	mov.b64 	%rd11827, {%r8144, %r8143};
	shf.l.wrap.b32 	%r8145, %r8141, %r8142, 3;
	shf.l.wrap.b32 	%r8146, %r8142, %r8141, 3;
	mov.b64 	%rd11828, {%r8146, %r8145};
	xor.b64  	%rd11829, %rd11827, %rd11828;
	shr.u64 	%rd11830, %rd11765, 6;
	xor.b64  	%rd11831, %rd11829, %rd11830;
	shf.r.wrap.b32 	%r8147, %r7804, %r7803, 1;
	shf.r.wrap.b32 	%r8148, %r7803, %r7804, 1;
	mov.b64 	%rd11832, {%r8148, %r8147};
	shf.r.wrap.b32 	%r8149, %r7804, %r7803, 8;
	shf.r.wrap.b32 	%r8150, %r7803, %r7804, 8;
	mov.b64 	%rd11833, {%r8150, %r8149};
	xor.b64  	%rd11834, %rd11832, %rd11833;
	shr.u64 	%rd11835, %rd11284, 7;
	xor.b64  	%rd11836, %rd11834, %rd11835;
	add.s64 	%rd11837, %rd11836, %rd11247;
	add.s64 	%rd11838, %rd11837, %rd11580;
	add.s64 	%rd11839, %rd11838, %rd11831;
	add.s64 	%rd11840, %rd11839, %rd11704;
	xor.b64  	%rd11841, %rd11778, %rd11741;
	and.b64  	%rd11842, %rd11815, %rd11841;
	xor.b64  	%rd11843, %rd11842, %rd11741;
	add.s64 	%rd11844, %rd11840, %rd11843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8151,%dummy}, %rd11815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8152}, %rd11815;
	}
	shf.r.wrap.b32 	%r8153, %r8152, %r8151, 14;
	shf.r.wrap.b32 	%r8154, %r8151, %r8152, 14;
	mov.b64 	%rd11845, {%r8154, %r8153};
	shf.r.wrap.b32 	%r8155, %r8152, %r8151, 18;
	shf.r.wrap.b32 	%r8156, %r8151, %r8152, 18;
	mov.b64 	%rd11846, {%r8156, %r8155};
	xor.b64  	%rd11847, %rd11845, %rd11846;
	shf.l.wrap.b32 	%r8157, %r8151, %r8152, 23;
	shf.l.wrap.b32 	%r8158, %r8152, %r8151, 23;
	mov.b64 	%rd11848, {%r8158, %r8157};
	xor.b64  	%rd11849, %rd11847, %rd11848;
	add.s64 	%rd11850, %rd11844, %rd11849;
	add.s64 	%rd11851, %rd11850, 5532061633213252278;
	add.s64 	%rd11852, %rd11851, %rd11715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8159,%dummy}, %rd11826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8160}, %rd11826;
	}
	shf.r.wrap.b32 	%r8161, %r8160, %r8159, 28;
	shf.r.wrap.b32 	%r8162, %r8159, %r8160, 28;
	mov.b64 	%rd11853, {%r8162, %r8161};
	shf.l.wrap.b32 	%r8163, %r8159, %r8160, 30;
	shf.l.wrap.b32 	%r8164, %r8160, %r8159, 30;
	mov.b64 	%rd11854, {%r8164, %r8163};
	xor.b64  	%rd11855, %rd11853, %rd11854;
	shf.l.wrap.b32 	%r8165, %r8159, %r8160, 25;
	shf.l.wrap.b32 	%r8166, %r8160, %r8159, 25;
	mov.b64 	%rd11856, {%r8166, %r8165};
	xor.b64  	%rd11857, %rd11855, %rd11856;
	and.b64  	%rd11858, %rd11826, %rd11789;
	or.b64  	%rd11859, %rd11826, %rd11789;
	and.b64  	%rd11860, %rd11859, %rd11752;
	or.b64  	%rd11861, %rd11860, %rd11858;
	add.s64 	%rd11862, %rd11861, %rd11857;
	add.s64 	%rd11863, %rd11862, %rd11851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8167,%dummy}, %rd11802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8168}, %rd11802;
	}
	shf.r.wrap.b32 	%r8169, %r8168, %r8167, 19;
	shf.r.wrap.b32 	%r8170, %r8167, %r8168, 19;
	mov.b64 	%rd11864, {%r8170, %r8169};
	shf.l.wrap.b32 	%r8171, %r8167, %r8168, 3;
	shf.l.wrap.b32 	%r8172, %r8168, %r8167, 3;
	mov.b64 	%rd11865, {%r8172, %r8171};
	xor.b64  	%rd11866, %rd11864, %rd11865;
	shr.u64 	%rd11867, %rd11802, 6;
	xor.b64  	%rd11868, %rd11866, %rd11867;
	shf.r.wrap.b32 	%r8173, %r7830, %r7829, 1;
	shf.r.wrap.b32 	%r8174, %r7829, %r7830, 1;
	mov.b64 	%rd11869, {%r8174, %r8173};
	shf.r.wrap.b32 	%r8175, %r7830, %r7829, 8;
	shf.r.wrap.b32 	%r8176, %r7829, %r7830, 8;
	mov.b64 	%rd11870, {%r8176, %r8175};
	xor.b64  	%rd11871, %rd11869, %rd11870;
	shr.u64 	%rd11872, %rd11321, 7;
	xor.b64  	%rd11873, %rd11871, %rd11872;
	add.s64 	%rd11874, %rd11873, %rd11284;
	add.s64 	%rd11875, %rd11874, %rd11617;
	add.s64 	%rd11876, %rd11875, %rd11868;
	add.s64 	%rd11877, %rd11876, %rd11741;
	xor.b64  	%rd11878, %rd11815, %rd11778;
	and.b64  	%rd11879, %rd11852, %rd11878;
	xor.b64  	%rd11880, %rd11879, %rd11778;
	add.s64 	%rd11881, %rd11877, %rd11880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8177,%dummy}, %rd11852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8178}, %rd11852;
	}
	shf.r.wrap.b32 	%r8179, %r8178, %r8177, 14;
	shf.r.wrap.b32 	%r8180, %r8177, %r8178, 14;
	mov.b64 	%rd11882, {%r8180, %r8179};
	shf.r.wrap.b32 	%r8181, %r8178, %r8177, 18;
	shf.r.wrap.b32 	%r8182, %r8177, %r8178, 18;
	mov.b64 	%rd11883, {%r8182, %r8181};
	xor.b64  	%rd11884, %rd11882, %rd11883;
	shf.l.wrap.b32 	%r8183, %r8177, %r8178, 23;
	shf.l.wrap.b32 	%r8184, %r8178, %r8177, 23;
	mov.b64 	%rd11885, {%r8184, %r8183};
	xor.b64  	%rd11886, %rd11884, %rd11885;
	add.s64 	%rd11887, %rd11881, %rd11886;
	add.s64 	%rd11888, %rd11887, 6448918945643986474;
	add.s64 	%rd11889, %rd11888, %rd11752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8185,%dummy}, %rd11863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8186}, %rd11863;
	}
	shf.r.wrap.b32 	%r8187, %r8186, %r8185, 28;
	shf.r.wrap.b32 	%r8188, %r8185, %r8186, 28;
	mov.b64 	%rd11890, {%r8188, %r8187};
	shf.l.wrap.b32 	%r8189, %r8185, %r8186, 30;
	shf.l.wrap.b32 	%r8190, %r8186, %r8185, 30;
	mov.b64 	%rd11891, {%r8190, %r8189};
	xor.b64  	%rd11892, %rd11890, %rd11891;
	shf.l.wrap.b32 	%r8191, %r8185, %r8186, 25;
	shf.l.wrap.b32 	%r8192, %r8186, %r8185, 25;
	mov.b64 	%rd11893, {%r8192, %r8191};
	xor.b64  	%rd11894, %rd11892, %rd11893;
	and.b64  	%rd11895, %rd11863, %rd11826;
	or.b64  	%rd11896, %rd11863, %rd11826;
	and.b64  	%rd11897, %rd11896, %rd11789;
	or.b64  	%rd11898, %rd11897, %rd11895;
	add.s64 	%rd11899, %rd11898, %rd11894;
	add.s64 	%rd11900, %rd11899, %rd11888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8193,%dummy}, %rd11839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8194}, %rd11839;
	}
	shf.r.wrap.b32 	%r8195, %r8194, %r8193, 19;
	shf.r.wrap.b32 	%r8196, %r8193, %r8194, 19;
	mov.b64 	%rd11901, {%r8196, %r8195};
	shf.l.wrap.b32 	%r8197, %r8193, %r8194, 3;
	shf.l.wrap.b32 	%r8198, %r8194, %r8193, 3;
	mov.b64 	%rd11902, {%r8198, %r8197};
	xor.b64  	%rd11903, %rd11901, %rd11902;
	shr.u64 	%rd11904, %rd11839, 6;
	xor.b64  	%rd11905, %rd11903, %rd11904;
	shf.r.wrap.b32 	%r8199, %r7856, %r7855, 1;
	shf.r.wrap.b32 	%r8200, %r7855, %r7856, 1;
	mov.b64 	%rd11906, {%r8200, %r8199};
	shf.r.wrap.b32 	%r8201, %r7856, %r7855, 8;
	shf.r.wrap.b32 	%r8202, %r7855, %r7856, 8;
	mov.b64 	%rd11907, {%r8202, %r8201};
	xor.b64  	%rd11908, %rd11906, %rd11907;
	shr.u64 	%rd11909, %rd11358, 7;
	xor.b64  	%rd11910, %rd11908, %rd11909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8203,%dummy}, %rd11889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8204}, %rd11889;
	}
	shf.r.wrap.b32 	%r8205, %r8204, %r8203, 14;
	shf.r.wrap.b32 	%r8206, %r8203, %r8204, 14;
	mov.b64 	%rd11911, {%r8206, %r8205};
	shf.r.wrap.b32 	%r8207, %r8204, %r8203, 18;
	shf.r.wrap.b32 	%r8208, %r8203, %r8204, 18;
	mov.b64 	%rd11912, {%r8208, %r8207};
	xor.b64  	%rd11913, %rd11911, %rd11912;
	shf.l.wrap.b32 	%r8209, %r8203, %r8204, 23;
	shf.l.wrap.b32 	%r8210, %r8204, %r8203, 23;
	mov.b64 	%rd11914, {%r8210, %r8209};
	xor.b64  	%rd11915, %rd11913, %rd11914;
	xor.b64  	%rd11916, %rd11852, %rd11815;
	and.b64  	%rd11917, %rd11889, %rd11916;
	xor.b64  	%rd11918, %rd11917, %rd11815;
	add.s64 	%rd11919, %rd11321, %rd11910;
	add.s64 	%rd11920, %rd11919, %rd11654;
	add.s64 	%rd11921, %rd11920, %rd11905;
	add.s64 	%rd11922, %rd11921, %rd11778;
	add.s64 	%rd11923, %rd11922, %rd11918;
	add.s64 	%rd11924, %rd11923, %rd11915;
	add.s64 	%rd11925, %rd11924, 6902733635092675308;
	add.s64 	%rd11926, %rd11925, %rd11789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8211,%dummy}, %rd11900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8212}, %rd11900;
	}
	shf.r.wrap.b32 	%r8213, %r8212, %r8211, 28;
	shf.r.wrap.b32 	%r8214, %r8211, %r8212, 28;
	mov.b64 	%rd11927, {%r8214, %r8213};
	shf.l.wrap.b32 	%r8215, %r8211, %r8212, 30;
	shf.l.wrap.b32 	%r8216, %r8212, %r8211, 30;
	mov.b64 	%rd11928, {%r8216, %r8215};
	xor.b64  	%rd11929, %rd11927, %rd11928;
	shf.l.wrap.b32 	%r8217, %r8211, %r8212, 25;
	shf.l.wrap.b32 	%r8218, %r8212, %r8211, 25;
	mov.b64 	%rd11930, {%r8218, %r8217};
	xor.b64  	%rd11931, %rd11929, %rd11930;
	and.b64  	%rd11932, %rd11900, %rd11863;
	or.b64  	%rd11933, %rd11900, %rd11863;
	and.b64  	%rd11934, %rd11933, %rd11826;
	or.b64  	%rd11935, %rd11934, %rd11932;
	add.s64 	%rd11936, %rd11935, %rd11931;
	add.s64 	%rd11937, %rd11936, %rd11925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8219,%dummy}, %rd11876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8220}, %rd11876;
	}
	shf.r.wrap.b32 	%r8221, %r8220, %r8219, 19;
	shf.r.wrap.b32 	%r8222, %r8219, %r8220, 19;
	mov.b64 	%rd11938, {%r8222, %r8221};
	shf.l.wrap.b32 	%r8223, %r8219, %r8220, 3;
	shf.l.wrap.b32 	%r8224, %r8220, %r8219, 3;
	mov.b64 	%rd11939, {%r8224, %r8223};
	xor.b64  	%rd11940, %rd11938, %rd11939;
	shr.u64 	%rd11941, %rd11876, 6;
	xor.b64  	%rd11942, %rd11940, %rd11941;
	shf.r.wrap.b32 	%r8225, %r7882, %r7881, 1;
	shf.r.wrap.b32 	%r8226, %r7881, %r7882, 1;
	mov.b64 	%rd11943, {%r8226, %r8225};
	shf.r.wrap.b32 	%r8227, %r7882, %r7881, 8;
	shf.r.wrap.b32 	%r8228, %r7881, %r7882, 8;
	mov.b64 	%rd11944, {%r8228, %r8227};
	xor.b64  	%rd11945, %rd11943, %rd11944;
	shr.u64 	%rd11946, %rd11395, 7;
	xor.b64  	%rd11947, %rd11945, %rd11946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8229,%dummy}, %rd11926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8230}, %rd11926;
	}
	shf.r.wrap.b32 	%r8231, %r8230, %r8229, 14;
	shf.r.wrap.b32 	%r8232, %r8229, %r8230, 14;
	mov.b64 	%rd11948, {%r8232, %r8231};
	shf.r.wrap.b32 	%r8233, %r8230, %r8229, 18;
	shf.r.wrap.b32 	%r8234, %r8229, %r8230, 18;
	mov.b64 	%rd11949, {%r8234, %r8233};
	xor.b64  	%rd11950, %rd11948, %rd11949;
	shf.l.wrap.b32 	%r8235, %r8229, %r8230, 23;
	shf.l.wrap.b32 	%r8236, %r8230, %r8229, 23;
	mov.b64 	%rd11951, {%r8236, %r8235};
	xor.b64  	%rd11952, %rd11950, %rd11951;
	xor.b64  	%rd11953, %rd11889, %rd11852;
	and.b64  	%rd11954, %rd11926, %rd11953;
	xor.b64  	%rd11955, %rd11954, %rd11852;
	add.s64 	%rd11956, %rd11358, %rd11947;
	add.s64 	%rd11957, %rd11956, %rd11691;
	add.s64 	%rd11958, %rd11957, %rd11942;
	add.s64 	%rd11959, %rd11958, %rd11815;
	add.s64 	%rd11960, %rd11959, %rd11955;
	add.s64 	%rd11961, %rd11960, %rd11952;
	add.s64 	%rd11962, %rd11961, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8237,%dummy}, %rd11937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8238}, %rd11937;
	}
	shf.r.wrap.b32 	%r8239, %r8238, %r8237, 28;
	shf.r.wrap.b32 	%r8240, %r8237, %r8238, 28;
	mov.b64 	%rd11963, {%r8240, %r8239};
	shf.l.wrap.b32 	%r8241, %r8237, %r8238, 30;
	shf.l.wrap.b32 	%r8242, %r8238, %r8237, 30;
	mov.b64 	%rd11964, {%r8242, %r8241};
	xor.b64  	%rd11965, %rd11963, %rd11964;
	shf.l.wrap.b32 	%r8243, %r8237, %r8238, 25;
	shf.l.wrap.b32 	%r8244, %r8238, %r8237, 25;
	mov.b64 	%rd11966, {%r8244, %r8243};
	xor.b64  	%rd11967, %rd11965, %rd11966;
	and.b64  	%rd11968, %rd11937, %rd11900;
	or.b64  	%rd11969, %rd11937, %rd11900;
	and.b64  	%rd11970, %rd11969, %rd11863;
	or.b64  	%rd11971, %rd11970, %rd11968;
	add.s64 	%rd11972, %rd11967, %rd9233;
	add.s64 	%rd11973, %rd11972, %rd11971;
	add.s64 	%rd11974, %rd11973, %rd11962;
	st.local.u64 	[%rd3+8], %rd11974;
	add.s64 	%rd11975, %rd11937, %rd9239;
	st.local.u64 	[%rd3+16], %rd11975;
	add.s64 	%rd11976, %rd11900, %rd9242;
	st.local.u64 	[%rd3+24], %rd11976;
	add.s64 	%rd11977, %rd11863, %rd9231;
	st.local.u64 	[%rd3+32], %rd11977;
	add.s64 	%rd11978, %rd11826, %rd9217;
	add.s64 	%rd11979, %rd11978, %rd11962;
	st.local.u64 	[%rd3+40], %rd11979;
	add.s64 	%rd11980, %rd11926, %rd9225;
	st.local.u64 	[%rd3+48], %rd11980;
	add.s64 	%rd11981, %rd11889, %rd9224;
	st.local.u64 	[%rd3+56], %rd11981;
	add.s64 	%rd11982, %rd11852, %rd9215;
	st.local.u64 	[%rd3+64], %rd11982;
	add.s64 	%rd12078, %rd12078, 128;
	add.s64 	%rd12060, %rd12060, 128;
	add.s32 	%r8280, %r8280, -128;
	setp.gt.u32 	%p40, %r8280, 127;
	@%p40 bra 	$L__BB0_43;

$L__BB0_47:
	setp.eq.s32 	%p41, %r8280, 0;
	@%p41 bra 	$L__BB0_53;

	cvt.u64.u32 	%rd11983, %r8277;
	add.s64 	%rd11984, %rd3, %rd11983;
	add.s64 	%rd12083, %rd11984, 72;
	and.b32  	%r8282, %r8280, 3;
	setp.eq.s32 	%p42, %r8282, 0;
	mov.u32 	%r8283, %r8280;
	@%p42 bra 	$L__BB0_51;

	mov.u64 	%rd12079, %rd12083;
	mov.u64 	%rd12080, %rd12078;
	mov.u32 	%r8283, %r8280;

$L__BB0_50:
	.pragma "nounroll";
	add.s32 	%r8283, %r8283, -1;
	add.s64 	%rd12078, %rd12080, 1;
	ld.local.u8 	%rs33, [%rd12080];
	add.s64 	%rd12083, %rd12079, 1;
	st.local.u8 	[%rd12079], %rs33;
	add.s32 	%r8282, %r8282, -1;
	setp.ne.s32 	%p43, %r8282, 0;
	mov.u64 	%rd12079, %rd12083;
	mov.u64 	%rd12080, %rd12078;
	@%p43 bra 	$L__BB0_50;

$L__BB0_51:
	add.s32 	%r8245, %r8280, -1;
	setp.lt.u32 	%p44, %r8245, 3;
	@%p44 bra 	$L__BB0_53;

$L__BB0_52:
	ld.local.u8 	%rs34, [%rd12078];
	st.local.u8 	[%rd12083], %rs34;
	ld.local.u8 	%rs35, [%rd12078+1];
	st.local.u8 	[%rd12083+1], %rs35;
	ld.local.u8 	%rs36, [%rd12078+2];
	st.local.u8 	[%rd12083+2], %rs36;
	add.s64 	%rd200, %rd12078, 4;
	ld.local.u8 	%rs37, [%rd12078+3];
	add.s64 	%rd201, %rd12083, 4;
	st.local.u8 	[%rd12083+3], %rs37;
	add.s32 	%r8283, %r8283, -4;
	setp.ne.s32 	%p45, %r8283, 0;
	mov.u64 	%rd12083, %rd201;
	mov.u64 	%rd12078, %rd200;
	@%p45 bra 	$L__BB0_52;

$L__BB0_53:
	mov.b32 	%r8251, %envreg3;
	mov.u32 	%r8250, %tid.x;
	add.s32 	%r8249, %r8250, %r8251;
	mov.u32 	%r8248, %ctaid.x;
	mov.u32 	%r8247, %ntid.x;
	mad.lo.s32 	%r8246, %r8247, %r8248, %r8249;
	cvt.u64.u32 	%rd11997, %r8246;
	ld.param.u64 	%rd11996, [bitcoin_init_param_2];
	ld.local.u64 	%rd11985, [%rd3+8];
	ld.local.u64 	%rd11986, [%rd3+16];
	ld.local.u64 	%rd11987, [%rd3+24];
	ld.local.u64 	%rd11988, [%rd3+32];
	ld.local.u64 	%rd11989, [%rd3+40];
	ld.local.u64 	%rd11990, [%rd3+48];
	ld.local.u64 	%rd11991, [%rd3+56];
	ld.local.u64 	%rd11992, [%rd3+64];
	shl.b64 	%rd11993, %rd11997, 6;
	add.s64 	%rd11994, %rd11996, %rd11993;
	st.global.u64 	[%rd11994], %rd11985;
	st.global.u64 	[%rd11994+8], %rd11986;
	st.global.u64 	[%rd11994+16], %rd11987;
	st.global.u64 	[%rd11994+24], %rd11988;
	st.global.u64 	[%rd11994+32], %rd11989;
	st.global.u64 	[%rd11994+40], %rd11990;
	st.global.u64 	[%rd11994+48], %rd11991;
	st.global.u64 	[%rd11994+56], %rd11992;
	ret;

}
.func SHA512_Update(
	.param .b64 SHA512_Update_param_0,
	.param .b64 SHA512_Update_param_1,
	.param .b32 SHA512_Update_param_2
)
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<4164>;
	.reg .b64 	%rd<6335>;


	ld.param.u64 	%rd132, [SHA512_Update_param_0];
	ld.param.u64 	%rd6311, [SHA512_Update_param_1];
	ld.param.u32 	%r4159, [SHA512_Update_param_2];
	cvta.to.local.u64 	%rd6328, %rd6311;
	cvta.to.local.u64 	%rd2, %rd132;
	setp.eq.s32 	%p1, %r4159, 0;
	@%p1 bra 	$L__BB1_23;

	ld.local.u32 	%r26, [%rd2];
	and.b32  	%r4156, %r26, 127;
	mov.u32 	%r27, 128;
	sub.s32 	%r2, %r27, %r4156;
	add.s32 	%r28, %r26, %r4159;
	st.local.u32 	[%rd2], %r28;
	setp.eq.s32 	%p2, %r4156, 0;
	setp.gt.u32 	%p3, %r2, %r4159;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB1_12;

	setp.eq.s32 	%p5, %r2, 0;
	@%p5 bra 	$L__BB1_8;

	cvt.u64.u32 	%rd134, %r4156;
	add.s64 	%rd135, %rd2, %rd134;
	add.s64 	%rd6290, %rd135, 72;
	and.b32  	%r4153, %r2, 3;
	setp.eq.s32 	%p6, %r4153, 0;
	mov.u64 	%rd6291, %rd6328;
	mov.u32 	%r4154, %r2;
	@%p6 bra 	$L__BB1_6;

	mov.u64 	%rd6286, %rd6290;
	mov.u64 	%rd6287, %rd6328;
	mov.u32 	%r4154, %r2;

$L__BB1_5:
	.pragma "nounroll";
	add.s32 	%r4154, %r4154, -1;
	add.s64 	%rd6291, %rd6287, 1;
	ld.local.u8 	%rs1, [%rd6287];
	add.s64 	%rd6290, %rd6286, 1;
	st.local.u8 	[%rd6286], %rs1;
	add.s32 	%r4153, %r4153, -1;
	setp.ne.s32 	%p7, %r4153, 0;
	mov.u64 	%rd6286, %rd6290;
	mov.u64 	%rd6287, %rd6291;
	@%p7 bra 	$L__BB1_5;

$L__BB1_6:
	xor.b32  	%r29, %r4156, 127;
	setp.lt.u32 	%p8, %r29, 3;
	@%p8 bra 	$L__BB1_8;

$L__BB1_7:
	ld.local.u8 	%rs2, [%rd6291];
	st.local.u8 	[%rd6290], %rs2;
	ld.local.u8 	%rs3, [%rd6291+1];
	st.local.u8 	[%rd6290+1], %rs3;
	ld.local.u8 	%rs4, [%rd6291+2];
	st.local.u8 	[%rd6290+2], %rs4;
	add.s64 	%rd13, %rd6291, 4;
	ld.local.u8 	%rs5, [%rd6291+3];
	add.s64 	%rd14, %rd6290, 4;
	st.local.u8 	[%rd6290+3], %rs5;
	add.s32 	%r4154, %r4154, -4;
	setp.ne.s32 	%p9, %r4154, 0;
	mov.u64 	%rd6290, %rd14;
	mov.u64 	%rd6291, %rd13;
	@%p9 bra 	$L__BB1_7;

$L__BB1_8:
	add.s64 	%rd136, %rd132, 72;
	and.b64  	%rd137, %rd136, 7;
	setp.eq.s64 	%p10, %rd137, 0;
	@%p10 bra 	$L__BB1_10;

	ld.local.u8 	%rd138, [%rd2+72];
	shl.b64 	%rd139, %rd138, 56;
	ld.local.u8 	%rd140, [%rd2+73];
	shl.b64 	%rd141, %rd140, 48;
	or.b64  	%rd142, %rd141, %rd139;
	ld.local.u8 	%rd143, [%rd2+74];
	shl.b64 	%rd144, %rd143, 40;
	or.b64  	%rd145, %rd142, %rd144;
	ld.local.u8 	%rd146, [%rd2+75];
	shl.b64 	%rd147, %rd146, 32;
	or.b64  	%rd148, %rd145, %rd147;
	ld.local.u8 	%r30, [%rd2+76];
	mul.wide.u32 	%rd149, %r30, 16777216;
	or.b64  	%rd150, %rd148, %rd149;
	ld.local.u8 	%r31, [%rd2+77];
	mul.wide.u32 	%rd151, %r31, 65536;
	or.b64  	%rd152, %rd150, %rd151;
	ld.local.u8 	%r32, [%rd2+78];
	mul.wide.u32 	%rd153, %r32, 256;
	or.b64  	%rd154, %rd152, %rd153;
	ld.local.u8 	%rd155, [%rd2+79];
	or.b64  	%rd6307, %rd154, %rd155;
	ld.local.u8 	%rd156, [%rd2+80];
	shl.b64 	%rd157, %rd156, 56;
	ld.local.u8 	%rd158, [%rd2+81];
	shl.b64 	%rd159, %rd158, 48;
	or.b64  	%rd160, %rd159, %rd157;
	ld.local.u8 	%rd161, [%rd2+82];
	shl.b64 	%rd162, %rd161, 40;
	or.b64  	%rd163, %rd160, %rd162;
	ld.local.u8 	%rd164, [%rd2+83];
	shl.b64 	%rd165, %rd164, 32;
	or.b64  	%rd166, %rd163, %rd165;
	ld.local.u8 	%r33, [%rd2+84];
	mul.wide.u32 	%rd167, %r33, 16777216;
	or.b64  	%rd168, %rd166, %rd167;
	ld.local.u8 	%r34, [%rd2+85];
	mul.wide.u32 	%rd169, %r34, 65536;
	or.b64  	%rd170, %rd168, %rd169;
	ld.local.u8 	%r35, [%rd2+86];
	mul.wide.u32 	%rd171, %r35, 256;
	or.b64  	%rd172, %rd170, %rd171;
	ld.local.u8 	%rd173, [%rd2+87];
	or.b64  	%rd6306, %rd172, %rd173;
	ld.local.u8 	%rd174, [%rd2+88];
	shl.b64 	%rd175, %rd174, 56;
	ld.local.u8 	%rd176, [%rd2+89];
	shl.b64 	%rd177, %rd176, 48;
	or.b64  	%rd178, %rd177, %rd175;
	ld.local.u8 	%rd179, [%rd2+90];
	shl.b64 	%rd180, %rd179, 40;
	or.b64  	%rd181, %rd178, %rd180;
	ld.local.u8 	%rd182, [%rd2+91];
	shl.b64 	%rd183, %rd182, 32;
	or.b64  	%rd184, %rd181, %rd183;
	ld.local.u8 	%r36, [%rd2+92];
	mul.wide.u32 	%rd185, %r36, 16777216;
	or.b64  	%rd186, %rd184, %rd185;
	ld.local.u8 	%r37, [%rd2+93];
	mul.wide.u32 	%rd187, %r37, 65536;
	or.b64  	%rd188, %rd186, %rd187;
	ld.local.u8 	%r38, [%rd2+94];
	mul.wide.u32 	%rd189, %r38, 256;
	or.b64  	%rd190, %rd188, %rd189;
	ld.local.u8 	%rd191, [%rd2+95];
	or.b64  	%rd6305, %rd190, %rd191;
	ld.local.u8 	%rd192, [%rd2+96];
	shl.b64 	%rd193, %rd192, 56;
	ld.local.u8 	%rd194, [%rd2+97];
	shl.b64 	%rd195, %rd194, 48;
	or.b64  	%rd196, %rd195, %rd193;
	ld.local.u8 	%rd197, [%rd2+98];
	shl.b64 	%rd198, %rd197, 40;
	or.b64  	%rd199, %rd196, %rd198;
	ld.local.u8 	%rd200, [%rd2+99];
	shl.b64 	%rd201, %rd200, 32;
	or.b64  	%rd202, %rd199, %rd201;
	ld.local.u8 	%r39, [%rd2+100];
	mul.wide.u32 	%rd203, %r39, 16777216;
	or.b64  	%rd204, %rd202, %rd203;
	ld.local.u8 	%r40, [%rd2+101];
	mul.wide.u32 	%rd205, %r40, 65536;
	or.b64  	%rd206, %rd204, %rd205;
	ld.local.u8 	%r41, [%rd2+102];
	mul.wide.u32 	%rd207, %r41, 256;
	or.b64  	%rd208, %rd206, %rd207;
	ld.local.u8 	%rd209, [%rd2+103];
	or.b64  	%rd6304, %rd208, %rd209;
	ld.local.u8 	%rd210, [%rd2+104];
	shl.b64 	%rd211, %rd210, 56;
	ld.local.u8 	%rd212, [%rd2+105];
	shl.b64 	%rd213, %rd212, 48;
	or.b64  	%rd214, %rd213, %rd211;
	ld.local.u8 	%rd215, [%rd2+106];
	shl.b64 	%rd216, %rd215, 40;
	or.b64  	%rd217, %rd214, %rd216;
	ld.local.u8 	%rd218, [%rd2+107];
	shl.b64 	%rd219, %rd218, 32;
	or.b64  	%rd220, %rd217, %rd219;
	ld.local.u8 	%r42, [%rd2+108];
	mul.wide.u32 	%rd221, %r42, 16777216;
	or.b64  	%rd222, %rd220, %rd221;
	ld.local.u8 	%r43, [%rd2+109];
	mul.wide.u32 	%rd223, %r43, 65536;
	or.b64  	%rd224, %rd222, %rd223;
	ld.local.u8 	%r44, [%rd2+110];
	mul.wide.u32 	%rd225, %r44, 256;
	or.b64  	%rd226, %rd224, %rd225;
	ld.local.u8 	%rd227, [%rd2+111];
	or.b64  	%rd6303, %rd226, %rd227;
	ld.local.u8 	%rd228, [%rd2+112];
	shl.b64 	%rd229, %rd228, 56;
	ld.local.u8 	%rd230, [%rd2+113];
	shl.b64 	%rd231, %rd230, 48;
	or.b64  	%rd232, %rd231, %rd229;
	ld.local.u8 	%rd233, [%rd2+114];
	shl.b64 	%rd234, %rd233, 40;
	or.b64  	%rd235, %rd232, %rd234;
	ld.local.u8 	%rd236, [%rd2+115];
	shl.b64 	%rd237, %rd236, 32;
	or.b64  	%rd238, %rd235, %rd237;
	ld.local.u8 	%r45, [%rd2+116];
	mul.wide.u32 	%rd239, %r45, 16777216;
	or.b64  	%rd240, %rd238, %rd239;
	ld.local.u8 	%r46, [%rd2+117];
	mul.wide.u32 	%rd241, %r46, 65536;
	or.b64  	%rd242, %rd240, %rd241;
	ld.local.u8 	%r47, [%rd2+118];
	mul.wide.u32 	%rd243, %r47, 256;
	or.b64  	%rd244, %rd242, %rd243;
	ld.local.u8 	%rd245, [%rd2+119];
	or.b64  	%rd6302, %rd244, %rd245;
	ld.local.u8 	%rd246, [%rd2+120];
	shl.b64 	%rd247, %rd246, 56;
	ld.local.u8 	%rd248, [%rd2+121];
	shl.b64 	%rd249, %rd248, 48;
	or.b64  	%rd250, %rd249, %rd247;
	ld.local.u8 	%rd251, [%rd2+122];
	shl.b64 	%rd252, %rd251, 40;
	or.b64  	%rd253, %rd250, %rd252;
	ld.local.u8 	%rd254, [%rd2+123];
	shl.b64 	%rd255, %rd254, 32;
	or.b64  	%rd256, %rd253, %rd255;
	ld.local.u8 	%r48, [%rd2+124];
	mul.wide.u32 	%rd257, %r48, 16777216;
	or.b64  	%rd258, %rd256, %rd257;
	ld.local.u8 	%r49, [%rd2+125];
	mul.wide.u32 	%rd259, %r49, 65536;
	or.b64  	%rd260, %rd258, %rd259;
	ld.local.u8 	%r50, [%rd2+126];
	mul.wide.u32 	%rd261, %r50, 256;
	or.b64  	%rd262, %rd260, %rd261;
	ld.local.u8 	%rd263, [%rd2+127];
	or.b64  	%rd6301, %rd262, %rd263;
	ld.local.u8 	%rd264, [%rd2+128];
	shl.b64 	%rd265, %rd264, 56;
	ld.local.u8 	%rd266, [%rd2+129];
	shl.b64 	%rd267, %rd266, 48;
	or.b64  	%rd268, %rd267, %rd265;
	ld.local.u8 	%rd269, [%rd2+130];
	shl.b64 	%rd270, %rd269, 40;
	or.b64  	%rd271, %rd268, %rd270;
	ld.local.u8 	%rd272, [%rd2+131];
	shl.b64 	%rd273, %rd272, 32;
	or.b64  	%rd274, %rd271, %rd273;
	ld.local.u8 	%r51, [%rd2+132];
	mul.wide.u32 	%rd275, %r51, 16777216;
	or.b64  	%rd276, %rd274, %rd275;
	ld.local.u8 	%r52, [%rd2+133];
	mul.wide.u32 	%rd277, %r52, 65536;
	or.b64  	%rd278, %rd276, %rd277;
	ld.local.u8 	%r53, [%rd2+134];
	mul.wide.u32 	%rd279, %r53, 256;
	or.b64  	%rd280, %rd278, %rd279;
	ld.local.u8 	%rd281, [%rd2+135];
	or.b64  	%rd6300, %rd280, %rd281;
	ld.local.u8 	%rd282, [%rd2+136];
	shl.b64 	%rd283, %rd282, 56;
	ld.local.u8 	%rd284, [%rd2+137];
	shl.b64 	%rd285, %rd284, 48;
	or.b64  	%rd286, %rd285, %rd283;
	ld.local.u8 	%rd287, [%rd2+138];
	shl.b64 	%rd288, %rd287, 40;
	or.b64  	%rd289, %rd286, %rd288;
	ld.local.u8 	%rd290, [%rd2+139];
	shl.b64 	%rd291, %rd290, 32;
	or.b64  	%rd292, %rd289, %rd291;
	ld.local.u8 	%r54, [%rd2+140];
	mul.wide.u32 	%rd293, %r54, 16777216;
	or.b64  	%rd294, %rd292, %rd293;
	ld.local.u8 	%r55, [%rd2+141];
	mul.wide.u32 	%rd295, %r55, 65536;
	or.b64  	%rd296, %rd294, %rd295;
	ld.local.u8 	%r56, [%rd2+142];
	mul.wide.u32 	%rd297, %r56, 256;
	or.b64  	%rd298, %rd296, %rd297;
	ld.local.u8 	%rd299, [%rd2+143];
	or.b64  	%rd6299, %rd298, %rd299;
	ld.local.u8 	%rd300, [%rd2+144];
	shl.b64 	%rd301, %rd300, 56;
	ld.local.u8 	%rd302, [%rd2+145];
	shl.b64 	%rd303, %rd302, 48;
	or.b64  	%rd304, %rd303, %rd301;
	ld.local.u8 	%rd305, [%rd2+146];
	shl.b64 	%rd306, %rd305, 40;
	or.b64  	%rd307, %rd304, %rd306;
	ld.local.u8 	%rd308, [%rd2+147];
	shl.b64 	%rd309, %rd308, 32;
	or.b64  	%rd310, %rd307, %rd309;
	ld.local.u8 	%r57, [%rd2+148];
	mul.wide.u32 	%rd311, %r57, 16777216;
	or.b64  	%rd312, %rd310, %rd311;
	ld.local.u8 	%r58, [%rd2+149];
	mul.wide.u32 	%rd313, %r58, 65536;
	or.b64  	%rd314, %rd312, %rd313;
	ld.local.u8 	%r59, [%rd2+150];
	mul.wide.u32 	%rd315, %r59, 256;
	or.b64  	%rd316, %rd314, %rd315;
	ld.local.u8 	%rd317, [%rd2+151];
	or.b64  	%rd6298, %rd316, %rd317;
	ld.local.u8 	%rd318, [%rd2+152];
	shl.b64 	%rd319, %rd318, 56;
	ld.local.u8 	%rd320, [%rd2+153];
	shl.b64 	%rd321, %rd320, 48;
	or.b64  	%rd322, %rd321, %rd319;
	ld.local.u8 	%rd323, [%rd2+154];
	shl.b64 	%rd324, %rd323, 40;
	or.b64  	%rd325, %rd322, %rd324;
	ld.local.u8 	%rd326, [%rd2+155];
	shl.b64 	%rd327, %rd326, 32;
	or.b64  	%rd328, %rd325, %rd327;
	ld.local.u8 	%r60, [%rd2+156];
	mul.wide.u32 	%rd329, %r60, 16777216;
	or.b64  	%rd330, %rd328, %rd329;
	ld.local.u8 	%r61, [%rd2+157];
	mul.wide.u32 	%rd331, %r61, 65536;
	or.b64  	%rd332, %rd330, %rd331;
	ld.local.u8 	%r62, [%rd2+158];
	mul.wide.u32 	%rd333, %r62, 256;
	or.b64  	%rd334, %rd332, %rd333;
	ld.local.u8 	%rd335, [%rd2+159];
	or.b64  	%rd6297, %rd334, %rd335;
	ld.local.u8 	%rd336, [%rd2+160];
	shl.b64 	%rd337, %rd336, 56;
	ld.local.u8 	%rd338, [%rd2+161];
	shl.b64 	%rd339, %rd338, 48;
	or.b64  	%rd340, %rd339, %rd337;
	ld.local.u8 	%rd341, [%rd2+162];
	shl.b64 	%rd342, %rd341, 40;
	or.b64  	%rd343, %rd340, %rd342;
	ld.local.u8 	%rd344, [%rd2+163];
	shl.b64 	%rd345, %rd344, 32;
	or.b64  	%rd346, %rd343, %rd345;
	ld.local.u8 	%r63, [%rd2+164];
	mul.wide.u32 	%rd347, %r63, 16777216;
	or.b64  	%rd348, %rd346, %rd347;
	ld.local.u8 	%r64, [%rd2+165];
	mul.wide.u32 	%rd349, %r64, 65536;
	or.b64  	%rd350, %rd348, %rd349;
	ld.local.u8 	%r65, [%rd2+166];
	mul.wide.u32 	%rd351, %r65, 256;
	or.b64  	%rd352, %rd350, %rd351;
	ld.local.u8 	%rd353, [%rd2+167];
	or.b64  	%rd6296, %rd352, %rd353;
	ld.local.u8 	%rd354, [%rd2+168];
	shl.b64 	%rd355, %rd354, 56;
	ld.local.u8 	%rd356, [%rd2+169];
	shl.b64 	%rd357, %rd356, 48;
	or.b64  	%rd358, %rd357, %rd355;
	ld.local.u8 	%rd359, [%rd2+170];
	shl.b64 	%rd360, %rd359, 40;
	or.b64  	%rd361, %rd358, %rd360;
	ld.local.u8 	%rd362, [%rd2+171];
	shl.b64 	%rd363, %rd362, 32;
	or.b64  	%rd364, %rd361, %rd363;
	ld.local.u8 	%r66, [%rd2+172];
	mul.wide.u32 	%rd365, %r66, 16777216;
	or.b64  	%rd366, %rd364, %rd365;
	ld.local.u8 	%r67, [%rd2+173];
	mul.wide.u32 	%rd367, %r67, 65536;
	or.b64  	%rd368, %rd366, %rd367;
	ld.local.u8 	%r68, [%rd2+174];
	mul.wide.u32 	%rd369, %r68, 256;
	or.b64  	%rd370, %rd368, %rd369;
	ld.local.u8 	%rd371, [%rd2+175];
	or.b64  	%rd6295, %rd370, %rd371;
	ld.local.u8 	%rd372, [%rd2+176];
	shl.b64 	%rd373, %rd372, 56;
	ld.local.u8 	%rd374, [%rd2+177];
	shl.b64 	%rd375, %rd374, 48;
	or.b64  	%rd376, %rd375, %rd373;
	ld.local.u8 	%rd377, [%rd2+178];
	shl.b64 	%rd378, %rd377, 40;
	or.b64  	%rd379, %rd376, %rd378;
	ld.local.u8 	%rd380, [%rd2+179];
	shl.b64 	%rd381, %rd380, 32;
	or.b64  	%rd382, %rd379, %rd381;
	ld.local.u8 	%r69, [%rd2+180];
	mul.wide.u32 	%rd383, %r69, 16777216;
	or.b64  	%rd384, %rd382, %rd383;
	ld.local.u8 	%r70, [%rd2+181];
	mul.wide.u32 	%rd385, %r70, 65536;
	or.b64  	%rd386, %rd384, %rd385;
	ld.local.u8 	%r71, [%rd2+182];
	mul.wide.u32 	%rd387, %r71, 256;
	or.b64  	%rd388, %rd386, %rd387;
	ld.local.u8 	%rd389, [%rd2+183];
	or.b64  	%rd6294, %rd388, %rd389;
	ld.local.u8 	%rd390, [%rd2+184];
	shl.b64 	%rd391, %rd390, 56;
	ld.local.u8 	%rd392, [%rd2+185];
	shl.b64 	%rd393, %rd392, 48;
	or.b64  	%rd394, %rd393, %rd391;
	ld.local.u8 	%rd395, [%rd2+186];
	shl.b64 	%rd396, %rd395, 40;
	or.b64  	%rd397, %rd394, %rd396;
	ld.local.u8 	%rd398, [%rd2+187];
	shl.b64 	%rd399, %rd398, 32;
	or.b64  	%rd400, %rd397, %rd399;
	ld.local.u8 	%r72, [%rd2+188];
	mul.wide.u32 	%rd401, %r72, 16777216;
	or.b64  	%rd402, %rd400, %rd401;
	ld.local.u8 	%r73, [%rd2+189];
	mul.wide.u32 	%rd403, %r73, 65536;
	or.b64  	%rd404, %rd402, %rd403;
	ld.local.u8 	%r74, [%rd2+190];
	mul.wide.u32 	%rd405, %r74, 256;
	or.b64  	%rd406, %rd404, %rd405;
	ld.local.u8 	%rd407, [%rd2+191];
	or.b64  	%rd6293, %rd406, %rd407;
	ld.local.u8 	%rd408, [%rd2+192];
	ld.local.u8 	%rd409, [%rd2+193];
	ld.local.u8 	%rd410, [%rd2+194];
	ld.local.u8 	%rd411, [%rd2+195];
	ld.local.u8 	%r75, [%rd2+196];
	mul.wide.u32 	%rd412, %r75, 16777216;
	ld.local.u8 	%r76, [%rd2+197];
	mul.wide.u32 	%rd413, %r76, 65536;
	ld.local.u8 	%r77, [%rd2+198];
	mul.wide.u32 	%rd414, %r77, 256;
	ld.local.u8 	%rd415, [%rd2+199];
	shl.b64 	%rd416, %rd409, 48;
	shl.b64 	%rd417, %rd408, 56;
	shl.b64 	%rd418, %rd410, 40;
	or.b64  	%rd419, %rd416, %rd417;
	shl.b64 	%rd420, %rd411, 32;
	or.b64  	%rd421, %rd419, %rd418;
	or.b64  	%rd422, %rd421, %rd420;
	or.b64  	%rd423, %rd422, %rd412;
	or.b64  	%rd424, %rd423, %rd413;
	or.b64  	%rd425, %rd424, %rd414;
	or.b64  	%rd6292, %rd425, %rd415;
	bra.uni 	$L__BB1_11;

$L__BB1_10:
	ld.local.u64 	%rd426, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %rd426;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r79}, %rd426;
	}
	mov.u32 	%r80, 291;
	mov.u32 	%r81, 0;
	prmt.b32 	%r82, %r78, %r81, %r80;
	prmt.b32 	%r83, %r79, %r81, %r80;
	mov.b64 	%rd6307, {%r83, %r82};
	ld.local.u64 	%rd427, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r84, %temp}, %rd427;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r85}, %rd427;
	}
	prmt.b32 	%r86, %r84, %r81, %r80;
	prmt.b32 	%r87, %r85, %r81, %r80;
	mov.b64 	%rd6306, {%r87, %r86};
	ld.local.u64 	%rd428, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r88, %temp}, %rd428;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r89}, %rd428;
	}
	prmt.b32 	%r90, %r88, %r81, %r80;
	prmt.b32 	%r91, %r89, %r81, %r80;
	mov.b64 	%rd6305, {%r91, %r90};
	ld.local.u64 	%rd429, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r92, %temp}, %rd429;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r93}, %rd429;
	}
	prmt.b32 	%r94, %r92, %r81, %r80;
	prmt.b32 	%r95, %r93, %r81, %r80;
	mov.b64 	%rd6304, {%r95, %r94};
	ld.local.u64 	%rd430, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r96, %temp}, %rd430;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r97}, %rd430;
	}
	prmt.b32 	%r98, %r96, %r81, %r80;
	prmt.b32 	%r99, %r97, %r81, %r80;
	mov.b64 	%rd6303, {%r99, %r98};
	ld.local.u64 	%rd431, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %rd431;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r101}, %rd431;
	}
	prmt.b32 	%r102, %r100, %r81, %r80;
	prmt.b32 	%r103, %r101, %r81, %r80;
	mov.b64 	%rd6302, {%r103, %r102};
	ld.local.u64 	%rd432, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r104, %temp}, %rd432;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r105}, %rd432;
	}
	prmt.b32 	%r106, %r104, %r81, %r80;
	prmt.b32 	%r107, %r105, %r81, %r80;
	mov.b64 	%rd6301, {%r107, %r106};
	ld.local.u64 	%rd433, [%rd2+128];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r108, %temp}, %rd433;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r109}, %rd433;
	}
	prmt.b32 	%r110, %r108, %r81, %r80;
	prmt.b32 	%r111, %r109, %r81, %r80;
	mov.b64 	%rd6300, {%r111, %r110};
	ld.local.u64 	%rd434, [%rd2+136];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r112, %temp}, %rd434;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r113}, %rd434;
	}
	prmt.b32 	%r114, %r112, %r81, %r80;
	prmt.b32 	%r115, %r113, %r81, %r80;
	mov.b64 	%rd6299, {%r115, %r114};
	ld.local.u64 	%rd435, [%rd2+144];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r116, %temp}, %rd435;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r117}, %rd435;
	}
	prmt.b32 	%r118, %r116, %r81, %r80;
	prmt.b32 	%r119, %r117, %r81, %r80;
	mov.b64 	%rd6298, {%r119, %r118};
	ld.local.u64 	%rd436, [%rd2+152];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r120, %temp}, %rd436;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r121}, %rd436;
	}
	prmt.b32 	%r122, %r120, %r81, %r80;
	prmt.b32 	%r123, %r121, %r81, %r80;
	mov.b64 	%rd6297, {%r123, %r122};
	ld.local.u64 	%rd437, [%rd2+160];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r124, %temp}, %rd437;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r125}, %rd437;
	}
	prmt.b32 	%r126, %r124, %r81, %r80;
	prmt.b32 	%r127, %r125, %r81, %r80;
	mov.b64 	%rd6296, {%r127, %r126};
	ld.local.u64 	%rd438, [%rd2+168];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r128, %temp}, %rd438;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r129}, %rd438;
	}
	prmt.b32 	%r130, %r128, %r81, %r80;
	prmt.b32 	%r131, %r129, %r81, %r80;
	mov.b64 	%rd6295, {%r131, %r130};
	ld.local.u64 	%rd439, [%rd2+176];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r132, %temp}, %rd439;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r133}, %rd439;
	}
	prmt.b32 	%r134, %r132, %r81, %r80;
	prmt.b32 	%r135, %r133, %r81, %r80;
	mov.b64 	%rd6294, {%r135, %r134};
	ld.local.u64 	%rd440, [%rd2+184];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r136, %temp}, %rd440;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r137}, %rd440;
	}
	prmt.b32 	%r138, %r136, %r81, %r80;
	prmt.b32 	%r139, %r137, %r81, %r80;
	mov.b64 	%rd6293, {%r139, %r138};
	ld.local.u64 	%rd441, [%rd2+192];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r140, %temp}, %rd441;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r141}, %rd441;
	}
	prmt.b32 	%r142, %r140, %r81, %r80;
	prmt.b32 	%r143, %r141, %r81, %r80;
	mov.b64 	%rd6292, {%r143, %r142};

$L__BB1_11:
	ld.local.u64 	%rd442, [%rd2+64];
	add.s64 	%rd443, %rd6307, %rd442;
	ld.local.u64 	%rd444, [%rd2+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd444;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 14;
	shf.r.wrap.b32 	%r148, %r145, %r146, 14;
	mov.b64 	%rd445, {%r148, %r147};
	shf.r.wrap.b32 	%r149, %r146, %r145, 18;
	shf.r.wrap.b32 	%r150, %r145, %r146, 18;
	mov.b64 	%rd446, {%r150, %r149};
	xor.b64  	%rd447, %rd445, %rd446;
	shf.l.wrap.b32 	%r151, %r145, %r146, 23;
	shf.l.wrap.b32 	%r152, %r146, %r145, 23;
	mov.b64 	%rd448, {%r152, %r151};
	xor.b64  	%rd449, %rd447, %rd448;
	add.s64 	%rd450, %rd443, %rd449;
	ld.local.u64 	%rd451, [%rd2+56];
	ld.local.u64 	%rd452, [%rd2+48];
	xor.b64  	%rd453, %rd451, %rd452;
	and.b64  	%rd454, %rd453, %rd444;
	xor.b64  	%rd455, %rd454, %rd451;
	add.s64 	%rd456, %rd450, %rd455;
	add.s64 	%rd457, %rd456, 4794697086780616226;
	ld.local.u64 	%rd458, [%rd2+32];
	add.s64 	%rd459, %rd457, %rd458;
	ld.local.u64 	%rd460, [%rd2+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd460;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 28;
	shf.r.wrap.b32 	%r156, %r153, %r154, 28;
	mov.b64 	%rd461, {%r156, %r155};
	shf.l.wrap.b32 	%r157, %r153, %r154, 30;
	shf.l.wrap.b32 	%r158, %r154, %r153, 30;
	mov.b64 	%rd462, {%r158, %r157};
	xor.b64  	%rd463, %rd461, %rd462;
	shf.l.wrap.b32 	%r159, %r153, %r154, 25;
	shf.l.wrap.b32 	%r160, %r154, %r153, 25;
	mov.b64 	%rd464, {%r160, %r159};
	xor.b64  	%rd465, %rd463, %rd464;
	ld.local.u64 	%rd466, [%rd2+16];
	and.b64  	%rd467, %rd466, %rd460;
	or.b64  	%rd468, %rd466, %rd460;
	ld.local.u64 	%rd469, [%rd2+24];
	and.b64  	%rd470, %rd469, %rd468;
	or.b64  	%rd471, %rd470, %rd467;
	add.s64 	%rd472, %rd471, %rd465;
	add.s64 	%rd473, %rd472, %rd457;
	add.s64 	%rd474, %rd6306, %rd451;
	xor.b64  	%rd475, %rd452, %rd444;
	and.b64  	%rd476, %rd459, %rd475;
	xor.b64  	%rd477, %rd476, %rd452;
	add.s64 	%rd478, %rd474, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd459;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 14;
	shf.r.wrap.b32 	%r164, %r161, %r162, 14;
	mov.b64 	%rd479, {%r164, %r163};
	shf.r.wrap.b32 	%r165, %r162, %r161, 18;
	shf.r.wrap.b32 	%r166, %r161, %r162, 18;
	mov.b64 	%rd480, {%r166, %r165};
	xor.b64  	%rd481, %rd479, %rd480;
	shf.l.wrap.b32 	%r167, %r161, %r162, 23;
	shf.l.wrap.b32 	%r168, %r162, %r161, 23;
	mov.b64 	%rd482, {%r168, %r167};
	xor.b64  	%rd483, %rd481, %rd482;
	add.s64 	%rd484, %rd478, %rd483;
	add.s64 	%rd485, %rd484, 8158064640168781261;
	add.s64 	%rd486, %rd485, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd473;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 28;
	shf.r.wrap.b32 	%r172, %r169, %r170, 28;
	mov.b64 	%rd487, {%r172, %r171};
	shf.l.wrap.b32 	%r173, %r169, %r170, 30;
	shf.l.wrap.b32 	%r174, %r170, %r169, 30;
	mov.b64 	%rd488, {%r174, %r173};
	xor.b64  	%rd489, %rd487, %rd488;
	shf.l.wrap.b32 	%r175, %r169, %r170, 25;
	shf.l.wrap.b32 	%r176, %r170, %r169, 25;
	mov.b64 	%rd490, {%r176, %r175};
	xor.b64  	%rd491, %rd489, %rd490;
	and.b64  	%rd492, %rd473, %rd460;
	or.b64  	%rd493, %rd473, %rd460;
	and.b64  	%rd494, %rd493, %rd466;
	or.b64  	%rd495, %rd494, %rd492;
	add.s64 	%rd496, %rd495, %rd491;
	add.s64 	%rd497, %rd496, %rd485;
	add.s64 	%rd498, %rd6305, %rd452;
	xor.b64  	%rd499, %rd459, %rd444;
	and.b64  	%rd500, %rd486, %rd499;
	xor.b64  	%rd501, %rd500, %rd444;
	add.s64 	%rd502, %rd498, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd486;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 14;
	shf.r.wrap.b32 	%r180, %r177, %r178, 14;
	mov.b64 	%rd503, {%r180, %r179};
	shf.r.wrap.b32 	%r181, %r178, %r177, 18;
	shf.r.wrap.b32 	%r182, %r177, %r178, 18;
	mov.b64 	%rd504, {%r182, %r181};
	xor.b64  	%rd505, %rd503, %rd504;
	shf.l.wrap.b32 	%r183, %r177, %r178, 23;
	shf.l.wrap.b32 	%r184, %r178, %r177, 23;
	mov.b64 	%rd506, {%r184, %r183};
	xor.b64  	%rd507, %rd505, %rd506;
	add.s64 	%rd508, %rd502, %rd507;
	add.s64 	%rd509, %rd508, -5349999486874862801;
	add.s64 	%rd510, %rd509, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd497;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 28;
	shf.r.wrap.b32 	%r188, %r185, %r186, 28;
	mov.b64 	%rd511, {%r188, %r187};
	shf.l.wrap.b32 	%r189, %r185, %r186, 30;
	shf.l.wrap.b32 	%r190, %r186, %r185, 30;
	mov.b64 	%rd512, {%r190, %r189};
	xor.b64  	%rd513, %rd511, %rd512;
	shf.l.wrap.b32 	%r191, %r185, %r186, 25;
	shf.l.wrap.b32 	%r192, %r186, %r185, 25;
	mov.b64 	%rd514, {%r192, %r191};
	xor.b64  	%rd515, %rd513, %rd514;
	and.b64  	%rd516, %rd497, %rd473;
	or.b64  	%rd517, %rd497, %rd473;
	and.b64  	%rd518, %rd517, %rd460;
	or.b64  	%rd519, %rd518, %rd516;
	add.s64 	%rd520, %rd519, %rd515;
	add.s64 	%rd521, %rd520, %rd509;
	add.s64 	%rd522, %rd6304, %rd444;
	xor.b64  	%rd523, %rd486, %rd459;
	and.b64  	%rd524, %rd510, %rd523;
	xor.b64  	%rd525, %rd524, %rd459;
	add.s64 	%rd526, %rd522, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd510;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 14;
	shf.r.wrap.b32 	%r196, %r193, %r194, 14;
	mov.b64 	%rd527, {%r196, %r195};
	shf.r.wrap.b32 	%r197, %r194, %r193, 18;
	shf.r.wrap.b32 	%r198, %r193, %r194, 18;
	mov.b64 	%rd528, {%r198, %r197};
	xor.b64  	%rd529, %rd527, %rd528;
	shf.l.wrap.b32 	%r199, %r193, %r194, 23;
	shf.l.wrap.b32 	%r200, %r194, %r193, 23;
	mov.b64 	%rd530, {%r200, %r199};
	xor.b64  	%rd531, %rd529, %rd530;
	add.s64 	%rd532, %rd526, %rd531;
	add.s64 	%rd533, %rd532, -1606136188198331460;
	add.s64 	%rd534, %rd533, %rd460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd521;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 28;
	shf.r.wrap.b32 	%r204, %r201, %r202, 28;
	mov.b64 	%rd535, {%r204, %r203};
	shf.l.wrap.b32 	%r205, %r201, %r202, 30;
	shf.l.wrap.b32 	%r206, %r202, %r201, 30;
	mov.b64 	%rd536, {%r206, %r205};
	xor.b64  	%rd537, %rd535, %rd536;
	shf.l.wrap.b32 	%r207, %r201, %r202, 25;
	shf.l.wrap.b32 	%r208, %r202, %r201, 25;
	mov.b64 	%rd538, {%r208, %r207};
	xor.b64  	%rd539, %rd537, %rd538;
	and.b64  	%rd540, %rd521, %rd497;
	or.b64  	%rd541, %rd521, %rd497;
	and.b64  	%rd542, %rd541, %rd473;
	or.b64  	%rd543, %rd542, %rd540;
	add.s64 	%rd544, %rd543, %rd539;
	add.s64 	%rd545, %rd544, %rd533;
	add.s64 	%rd546, %rd6303, %rd459;
	xor.b64  	%rd547, %rd510, %rd486;
	and.b64  	%rd548, %rd534, %rd547;
	xor.b64  	%rd549, %rd548, %rd486;
	add.s64 	%rd550, %rd546, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd534;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 14;
	shf.r.wrap.b32 	%r212, %r209, %r210, 14;
	mov.b64 	%rd551, {%r212, %r211};
	shf.r.wrap.b32 	%r213, %r210, %r209, 18;
	shf.r.wrap.b32 	%r214, %r209, %r210, 18;
	mov.b64 	%rd552, {%r214, %r213};
	xor.b64  	%rd553, %rd551, %rd552;
	shf.l.wrap.b32 	%r215, %r209, %r210, 23;
	shf.l.wrap.b32 	%r216, %r210, %r209, 23;
	mov.b64 	%rd554, {%r216, %r215};
	xor.b64  	%rd555, %rd553, %rd554;
	add.s64 	%rd556, %rd550, %rd555;
	add.s64 	%rd557, %rd556, 4131703408338449720;
	add.s64 	%rd558, %rd557, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd545;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 28;
	shf.r.wrap.b32 	%r220, %r217, %r218, 28;
	mov.b64 	%rd559, {%r220, %r219};
	shf.l.wrap.b32 	%r221, %r217, %r218, 30;
	shf.l.wrap.b32 	%r222, %r218, %r217, 30;
	mov.b64 	%rd560, {%r222, %r221};
	xor.b64  	%rd561, %rd559, %rd560;
	shf.l.wrap.b32 	%r223, %r217, %r218, 25;
	shf.l.wrap.b32 	%r224, %r218, %r217, 25;
	mov.b64 	%rd562, {%r224, %r223};
	xor.b64  	%rd563, %rd561, %rd562;
	and.b64  	%rd564, %rd545, %rd521;
	or.b64  	%rd565, %rd545, %rd521;
	and.b64  	%rd566, %rd565, %rd497;
	or.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd567, %rd563;
	add.s64 	%rd569, %rd568, %rd557;
	add.s64 	%rd570, %rd6302, %rd486;
	xor.b64  	%rd571, %rd534, %rd510;
	and.b64  	%rd572, %rd558, %rd571;
	xor.b64  	%rd573, %rd572, %rd510;
	add.s64 	%rd574, %rd570, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd558;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 14;
	shf.r.wrap.b32 	%r228, %r225, %r226, 14;
	mov.b64 	%rd575, {%r228, %r227};
	shf.r.wrap.b32 	%r229, %r226, %r225, 18;
	shf.r.wrap.b32 	%r230, %r225, %r226, 18;
	mov.b64 	%rd576, {%r230, %r229};
	xor.b64  	%rd577, %rd575, %rd576;
	shf.l.wrap.b32 	%r231, %r225, %r226, 23;
	shf.l.wrap.b32 	%r232, %r226, %r225, 23;
	mov.b64 	%rd578, {%r232, %r231};
	xor.b64  	%rd579, %rd577, %rd578;
	add.s64 	%rd580, %rd574, %rd579;
	add.s64 	%rd581, %rd580, 6480981068601479193;
	add.s64 	%rd582, %rd581, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd569;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 28;
	shf.r.wrap.b32 	%r236, %r233, %r234, 28;
	mov.b64 	%rd583, {%r236, %r235};
	shf.l.wrap.b32 	%r237, %r233, %r234, 30;
	shf.l.wrap.b32 	%r238, %r234, %r233, 30;
	mov.b64 	%rd584, {%r238, %r237};
	xor.b64  	%rd585, %rd583, %rd584;
	shf.l.wrap.b32 	%r239, %r233, %r234, 25;
	shf.l.wrap.b32 	%r240, %r234, %r233, 25;
	mov.b64 	%rd586, {%r240, %r239};
	xor.b64  	%rd587, %rd585, %rd586;
	and.b64  	%rd588, %rd569, %rd545;
	or.b64  	%rd589, %rd569, %rd545;
	and.b64  	%rd590, %rd589, %rd521;
	or.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd591, %rd587;
	add.s64 	%rd593, %rd592, %rd581;
	add.s64 	%rd594, %rd6301, %rd510;
	xor.b64  	%rd595, %rd558, %rd534;
	and.b64  	%rd596, %rd582, %rd595;
	xor.b64  	%rd597, %rd596, %rd534;
	add.s64 	%rd598, %rd594, %rd597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd582;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 14;
	shf.r.wrap.b32 	%r244, %r241, %r242, 14;
	mov.b64 	%rd599, {%r244, %r243};
	shf.r.wrap.b32 	%r245, %r242, %r241, 18;
	shf.r.wrap.b32 	%r246, %r241, %r242, 18;
	mov.b64 	%rd600, {%r246, %r245};
	xor.b64  	%rd601, %rd599, %rd600;
	shf.l.wrap.b32 	%r247, %r241, %r242, 23;
	shf.l.wrap.b32 	%r248, %r242, %r241, 23;
	mov.b64 	%rd602, {%r248, %r247};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd598, %rd603;
	add.s64 	%rd605, %rd604, -7908458776815382629;
	add.s64 	%rd606, %rd605, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd593;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 28;
	shf.r.wrap.b32 	%r252, %r249, %r250, 28;
	mov.b64 	%rd607, {%r252, %r251};
	shf.l.wrap.b32 	%r253, %r249, %r250, 30;
	shf.l.wrap.b32 	%r254, %r250, %r249, 30;
	mov.b64 	%rd608, {%r254, %r253};
	xor.b64  	%rd609, %rd607, %rd608;
	shf.l.wrap.b32 	%r255, %r249, %r250, 25;
	shf.l.wrap.b32 	%r256, %r250, %r249, 25;
	mov.b64 	%rd610, {%r256, %r255};
	xor.b64  	%rd611, %rd609, %rd610;
	and.b64  	%rd612, %rd593, %rd569;
	or.b64  	%rd613, %rd593, %rd569;
	and.b64  	%rd614, %rd613, %rd545;
	or.b64  	%rd615, %rd614, %rd612;
	add.s64 	%rd616, %rd615, %rd611;
	add.s64 	%rd617, %rd616, %rd605;
	add.s64 	%rd618, %rd6300, %rd534;
	xor.b64  	%rd619, %rd582, %rd558;
	and.b64  	%rd620, %rd606, %rd619;
	xor.b64  	%rd621, %rd620, %rd558;
	add.s64 	%rd622, %rd618, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd606;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 14;
	shf.r.wrap.b32 	%r260, %r257, %r258, 14;
	mov.b64 	%rd623, {%r260, %r259};
	shf.r.wrap.b32 	%r261, %r258, %r257, 18;
	shf.r.wrap.b32 	%r262, %r257, %r258, 18;
	mov.b64 	%rd624, {%r262, %r261};
	xor.b64  	%rd625, %rd623, %rd624;
	shf.l.wrap.b32 	%r263, %r257, %r258, 23;
	shf.l.wrap.b32 	%r264, %r258, %r257, 23;
	mov.b64 	%rd626, {%r264, %r263};
	xor.b64  	%rd627, %rd625, %rd626;
	add.s64 	%rd628, %rd622, %rd627;
	add.s64 	%rd629, %rd628, -6116909921290321640;
	add.s64 	%rd630, %rd629, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd617;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 28;
	shf.r.wrap.b32 	%r268, %r265, %r266, 28;
	mov.b64 	%rd631, {%r268, %r267};
	shf.l.wrap.b32 	%r269, %r265, %r266, 30;
	shf.l.wrap.b32 	%r270, %r266, %r265, 30;
	mov.b64 	%rd632, {%r270, %r269};
	xor.b64  	%rd633, %rd631, %rd632;
	shf.l.wrap.b32 	%r271, %r265, %r266, 25;
	shf.l.wrap.b32 	%r272, %r266, %r265, 25;
	mov.b64 	%rd634, {%r272, %r271};
	xor.b64  	%rd635, %rd633, %rd634;
	and.b64  	%rd636, %rd617, %rd593;
	or.b64  	%rd637, %rd617, %rd593;
	and.b64  	%rd638, %rd637, %rd569;
	or.b64  	%rd639, %rd638, %rd636;
	add.s64 	%rd640, %rd639, %rd635;
	add.s64 	%rd641, %rd640, %rd629;
	add.s64 	%rd642, %rd6299, %rd558;
	xor.b64  	%rd643, %rd606, %rd582;
	and.b64  	%rd644, %rd630, %rd643;
	xor.b64  	%rd645, %rd644, %rd582;
	add.s64 	%rd646, %rd642, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd630;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 14;
	shf.r.wrap.b32 	%r276, %r273, %r274, 14;
	mov.b64 	%rd647, {%r276, %r275};
	shf.r.wrap.b32 	%r277, %r274, %r273, 18;
	shf.r.wrap.b32 	%r278, %r273, %r274, 18;
	mov.b64 	%rd648, {%r278, %r277};
	xor.b64  	%rd649, %rd647, %rd648;
	shf.l.wrap.b32 	%r279, %r273, %r274, 23;
	shf.l.wrap.b32 	%r280, %r274, %r273, 23;
	mov.b64 	%rd650, {%r280, %r279};
	xor.b64  	%rd651, %rd649, %rd650;
	add.s64 	%rd652, %rd646, %rd651;
	add.s64 	%rd653, %rd652, -2880145864133508542;
	add.s64 	%rd654, %rd653, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd641;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 28;
	shf.r.wrap.b32 	%r284, %r281, %r282, 28;
	mov.b64 	%rd655, {%r284, %r283};
	shf.l.wrap.b32 	%r285, %r281, %r282, 30;
	shf.l.wrap.b32 	%r286, %r282, %r281, 30;
	mov.b64 	%rd656, {%r286, %r285};
	xor.b64  	%rd657, %rd655, %rd656;
	shf.l.wrap.b32 	%r287, %r281, %r282, 25;
	shf.l.wrap.b32 	%r288, %r282, %r281, 25;
	mov.b64 	%rd658, {%r288, %r287};
	xor.b64  	%rd659, %rd657, %rd658;
	and.b64  	%rd660, %rd641, %rd617;
	or.b64  	%rd661, %rd641, %rd617;
	and.b64  	%rd662, %rd661, %rd593;
	or.b64  	%rd663, %rd662, %rd660;
	add.s64 	%rd664, %rd663, %rd659;
	add.s64 	%rd665, %rd664, %rd653;
	add.s64 	%rd666, %rd6298, %rd582;
	xor.b64  	%rd667, %rd630, %rd606;
	and.b64  	%rd668, %rd654, %rd667;
	xor.b64  	%rd669, %rd668, %rd606;
	add.s64 	%rd670, %rd666, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd654;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 14;
	shf.r.wrap.b32 	%r292, %r289, %r290, 14;
	mov.b64 	%rd671, {%r292, %r291};
	shf.r.wrap.b32 	%r293, %r290, %r289, 18;
	shf.r.wrap.b32 	%r294, %r289, %r290, 18;
	mov.b64 	%rd672, {%r294, %r293};
	xor.b64  	%rd673, %rd671, %rd672;
	shf.l.wrap.b32 	%r295, %r289, %r290, 23;
	shf.l.wrap.b32 	%r296, %r290, %r289, 23;
	mov.b64 	%rd674, {%r296, %r295};
	xor.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd670, %rd675;
	add.s64 	%rd677, %rd676, 1334009975649890238;
	add.s64 	%rd678, %rd677, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r298}, %rd665;
	}
	shf.r.wrap.b32 	%r299, %r298, %r297, 28;
	shf.r.wrap.b32 	%r300, %r297, %r298, 28;
	mov.b64 	%rd679, {%r300, %r299};
	shf.l.wrap.b32 	%r301, %r297, %r298, 30;
	shf.l.wrap.b32 	%r302, %r298, %r297, 30;
	mov.b64 	%rd680, {%r302, %r301};
	xor.b64  	%rd681, %rd679, %rd680;
	shf.l.wrap.b32 	%r303, %r297, %r298, 25;
	shf.l.wrap.b32 	%r304, %r298, %r297, 25;
	mov.b64 	%rd682, {%r304, %r303};
	xor.b64  	%rd683, %rd681, %rd682;
	and.b64  	%rd684, %rd665, %rd641;
	or.b64  	%rd685, %rd665, %rd641;
	and.b64  	%rd686, %rd685, %rd617;
	or.b64  	%rd687, %rd686, %rd684;
	add.s64 	%rd688, %rd687, %rd683;
	add.s64 	%rd689, %rd688, %rd677;
	add.s64 	%rd690, %rd6297, %rd606;
	xor.b64  	%rd691, %rd654, %rd630;
	and.b64  	%rd692, %rd678, %rd691;
	xor.b64  	%rd693, %rd692, %rd630;
	add.s64 	%rd694, %rd690, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd678;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 14;
	shf.r.wrap.b32 	%r308, %r305, %r306, 14;
	mov.b64 	%rd695, {%r308, %r307};
	shf.r.wrap.b32 	%r309, %r306, %r305, 18;
	shf.r.wrap.b32 	%r310, %r305, %r306, 18;
	mov.b64 	%rd696, {%r310, %r309};
	xor.b64  	%rd697, %rd695, %rd696;
	shf.l.wrap.b32 	%r311, %r305, %r306, 23;
	shf.l.wrap.b32 	%r312, %r306, %r305, 23;
	mov.b64 	%rd698, {%r312, %r311};
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd694, %rd699;
	add.s64 	%rd701, %rd700, 2608012711638119052;
	add.s64 	%rd702, %rd701, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd689;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 28;
	shf.r.wrap.b32 	%r316, %r313, %r314, 28;
	mov.b64 	%rd703, {%r316, %r315};
	shf.l.wrap.b32 	%r317, %r313, %r314, 30;
	shf.l.wrap.b32 	%r318, %r314, %r313, 30;
	mov.b64 	%rd704, {%r318, %r317};
	xor.b64  	%rd705, %rd703, %rd704;
	shf.l.wrap.b32 	%r319, %r313, %r314, 25;
	shf.l.wrap.b32 	%r320, %r314, %r313, 25;
	mov.b64 	%rd706, {%r320, %r319};
	xor.b64  	%rd707, %rd705, %rd706;
	and.b64  	%rd708, %rd689, %rd665;
	or.b64  	%rd709, %rd689, %rd665;
	and.b64  	%rd710, %rd709, %rd641;
	or.b64  	%rd711, %rd710, %rd708;
	add.s64 	%rd712, %rd711, %rd707;
	add.s64 	%rd713, %rd712, %rd701;
	add.s64 	%rd714, %rd6296, %rd630;
	xor.b64  	%rd715, %rd678, %rd654;
	and.b64  	%rd716, %rd702, %rd715;
	xor.b64  	%rd717, %rd716, %rd654;
	add.s64 	%rd718, %rd714, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r321,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r322}, %rd702;
	}
	shf.r.wrap.b32 	%r323, %r322, %r321, 14;
	shf.r.wrap.b32 	%r324, %r321, %r322, 14;
	mov.b64 	%rd719, {%r324, %r323};
	shf.r.wrap.b32 	%r325, %r322, %r321, 18;
	shf.r.wrap.b32 	%r326, %r321, %r322, 18;
	mov.b64 	%rd720, {%r326, %r325};
	xor.b64  	%rd721, %rd719, %rd720;
	shf.l.wrap.b32 	%r327, %r321, %r322, 23;
	shf.l.wrap.b32 	%r328, %r322, %r321, 23;
	mov.b64 	%rd722, {%r328, %r327};
	xor.b64  	%rd723, %rd721, %rd722;
	add.s64 	%rd724, %rd718, %rd723;
	add.s64 	%rd725, %rd724, 6128411473006802146;
	add.s64 	%rd726, %rd725, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd713;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 28;
	shf.r.wrap.b32 	%r332, %r329, %r330, 28;
	mov.b64 	%rd727, {%r332, %r331};
	shf.l.wrap.b32 	%r333, %r329, %r330, 30;
	shf.l.wrap.b32 	%r334, %r330, %r329, 30;
	mov.b64 	%rd728, {%r334, %r333};
	xor.b64  	%rd729, %rd727, %rd728;
	shf.l.wrap.b32 	%r335, %r329, %r330, 25;
	shf.l.wrap.b32 	%r336, %r330, %r329, 25;
	mov.b64 	%rd730, {%r336, %r335};
	xor.b64  	%rd731, %rd729, %rd730;
	and.b64  	%rd732, %rd713, %rd689;
	or.b64  	%rd733, %rd713, %rd689;
	and.b64  	%rd734, %rd733, %rd665;
	or.b64  	%rd735, %rd734, %rd732;
	add.s64 	%rd736, %rd735, %rd731;
	add.s64 	%rd737, %rd736, %rd725;
	add.s64 	%rd738, %rd6295, %rd654;
	xor.b64  	%rd739, %rd702, %rd678;
	and.b64  	%rd740, %rd726, %rd739;
	xor.b64  	%rd741, %rd740, %rd678;
	add.s64 	%rd742, %rd738, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd726;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 14;
	shf.r.wrap.b32 	%r340, %r337, %r338, 14;
	mov.b64 	%rd743, {%r340, %r339};
	shf.r.wrap.b32 	%r341, %r338, %r337, 18;
	shf.r.wrap.b32 	%r342, %r337, %r338, 18;
	mov.b64 	%rd744, {%r342, %r341};
	xor.b64  	%rd745, %rd743, %rd744;
	shf.l.wrap.b32 	%r343, %r337, %r338, 23;
	shf.l.wrap.b32 	%r344, %r338, %r337, 23;
	mov.b64 	%rd746, {%r344, %r343};
	xor.b64  	%rd747, %rd745, %rd746;
	add.s64 	%rd748, %rd742, %rd747;
	add.s64 	%rd749, %rd748, 8268148722764581231;
	add.s64 	%rd750, %rd749, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r346}, %rd737;
	}
	shf.r.wrap.b32 	%r347, %r346, %r345, 28;
	shf.r.wrap.b32 	%r348, %r345, %r346, 28;
	mov.b64 	%rd751, {%r348, %r347};
	shf.l.wrap.b32 	%r349, %r345, %r346, 30;
	shf.l.wrap.b32 	%r350, %r346, %r345, 30;
	mov.b64 	%rd752, {%r350, %r349};
	xor.b64  	%rd753, %rd751, %rd752;
	shf.l.wrap.b32 	%r351, %r345, %r346, 25;
	shf.l.wrap.b32 	%r352, %r346, %r345, 25;
	mov.b64 	%rd754, {%r352, %r351};
	xor.b64  	%rd755, %rd753, %rd754;
	and.b64  	%rd756, %rd737, %rd713;
	or.b64  	%rd757, %rd737, %rd713;
	and.b64  	%rd758, %rd757, %rd689;
	or.b64  	%rd759, %rd758, %rd756;
	add.s64 	%rd760, %rd759, %rd755;
	add.s64 	%rd761, %rd760, %rd749;
	add.s64 	%rd762, %rd6294, %rd678;
	xor.b64  	%rd763, %rd726, %rd702;
	and.b64  	%rd764, %rd750, %rd763;
	xor.b64  	%rd765, %rd764, %rd702;
	add.s64 	%rd766, %rd762, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd750;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 14;
	shf.r.wrap.b32 	%r356, %r353, %r354, 14;
	mov.b64 	%rd767, {%r356, %r355};
	shf.r.wrap.b32 	%r357, %r354, %r353, 18;
	shf.r.wrap.b32 	%r358, %r353, %r354, 18;
	mov.b64 	%rd768, {%r358, %r357};
	xor.b64  	%rd769, %rd767, %rd768;
	shf.l.wrap.b32 	%r359, %r353, %r354, 23;
	shf.l.wrap.b32 	%r360, %r354, %r353, 23;
	mov.b64 	%rd770, {%r360, %r359};
	xor.b64  	%rd771, %rd769, %rd770;
	add.s64 	%rd772, %rd766, %rd771;
	add.s64 	%rd773, %rd772, -9160688886553864527;
	add.s64 	%rd774, %rd773, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd761;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 28;
	shf.r.wrap.b32 	%r364, %r361, %r362, 28;
	mov.b64 	%rd775, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 30;
	shf.l.wrap.b32 	%r366, %r362, %r361, 30;
	mov.b64 	%rd776, {%r366, %r365};
	xor.b64  	%rd777, %rd775, %rd776;
	shf.l.wrap.b32 	%r367, %r361, %r362, 25;
	shf.l.wrap.b32 	%r368, %r362, %r361, 25;
	mov.b64 	%rd778, {%r368, %r367};
	xor.b64  	%rd779, %rd777, %rd778;
	and.b64  	%rd780, %rd761, %rd737;
	or.b64  	%rd781, %rd761, %rd737;
	and.b64  	%rd782, %rd781, %rd713;
	or.b64  	%rd783, %rd782, %rd780;
	add.s64 	%rd784, %rd783, %rd779;
	add.s64 	%rd785, %rd784, %rd773;
	add.s64 	%rd786, %rd6293, %rd702;
	xor.b64  	%rd787, %rd750, %rd726;
	and.b64  	%rd788, %rd774, %rd787;
	xor.b64  	%rd789, %rd788, %rd726;
	add.s64 	%rd790, %rd786, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd774;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 14;
	shf.r.wrap.b32 	%r372, %r369, %r370, 14;
	mov.b64 	%rd791, {%r372, %r371};
	shf.r.wrap.b32 	%r373, %r370, %r369, 18;
	shf.r.wrap.b32 	%r374, %r369, %r370, 18;
	mov.b64 	%rd792, {%r374, %r373};
	xor.b64  	%rd793, %rd791, %rd792;
	shf.l.wrap.b32 	%r375, %r369, %r370, 23;
	shf.l.wrap.b32 	%r376, %r370, %r369, 23;
	mov.b64 	%rd794, {%r376, %r375};
	xor.b64  	%rd795, %rd793, %rd794;
	add.s64 	%rd796, %rd790, %rd795;
	add.s64 	%rd797, %rd796, -7215885187991268811;
	add.s64 	%rd798, %rd797, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd785;
	}
	shf.r.wrap.b32 	%r379, %r378, %r377, 28;
	shf.r.wrap.b32 	%r380, %r377, %r378, 28;
	mov.b64 	%rd799, {%r380, %r379};
	shf.l.wrap.b32 	%r381, %r377, %r378, 30;
	shf.l.wrap.b32 	%r382, %r378, %r377, 30;
	mov.b64 	%rd800, {%r382, %r381};
	xor.b64  	%rd801, %rd799, %rd800;
	shf.l.wrap.b32 	%r383, %r377, %r378, 25;
	shf.l.wrap.b32 	%r384, %r378, %r377, 25;
	mov.b64 	%rd802, {%r384, %r383};
	xor.b64  	%rd803, %rd801, %rd802;
	and.b64  	%rd804, %rd785, %rd761;
	or.b64  	%rd805, %rd785, %rd761;
	and.b64  	%rd806, %rd805, %rd737;
	or.b64  	%rd807, %rd806, %rd804;
	add.s64 	%rd808, %rd807, %rd803;
	add.s64 	%rd809, %rd808, %rd797;
	add.s64 	%rd810, %rd6292, %rd726;
	xor.b64  	%rd811, %rd774, %rd750;
	and.b64  	%rd812, %rd798, %rd811;
	xor.b64  	%rd813, %rd812, %rd750;
	add.s64 	%rd814, %rd810, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd798;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 14;
	shf.r.wrap.b32 	%r388, %r385, %r386, 14;
	mov.b64 	%rd815, {%r388, %r387};
	shf.r.wrap.b32 	%r389, %r386, %r385, 18;
	shf.r.wrap.b32 	%r390, %r385, %r386, 18;
	mov.b64 	%rd816, {%r390, %r389};
	xor.b64  	%rd817, %rd815, %rd816;
	shf.l.wrap.b32 	%r391, %r385, %r386, 23;
	shf.l.wrap.b32 	%r392, %r386, %r385, 23;
	mov.b64 	%rd818, {%r392, %r391};
	xor.b64  	%rd819, %rd817, %rd818;
	add.s64 	%rd820, %rd814, %rd819;
	add.s64 	%rd821, %rd820, -4495734319001033068;
	add.s64 	%rd822, %rd821, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd809;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 28;
	shf.r.wrap.b32 	%r396, %r393, %r394, 28;
	mov.b64 	%rd823, {%r396, %r395};
	shf.l.wrap.b32 	%r397, %r393, %r394, 30;
	shf.l.wrap.b32 	%r398, %r394, %r393, 30;
	mov.b64 	%rd824, {%r398, %r397};
	xor.b64  	%rd825, %rd823, %rd824;
	shf.l.wrap.b32 	%r399, %r393, %r394, 25;
	shf.l.wrap.b32 	%r400, %r394, %r393, 25;
	mov.b64 	%rd826, {%r400, %r399};
	xor.b64  	%rd827, %rd825, %rd826;
	and.b64  	%rd828, %rd809, %rd785;
	or.b64  	%rd829, %rd809, %rd785;
	and.b64  	%rd830, %rd829, %rd761;
	or.b64  	%rd831, %rd830, %rd828;
	add.s64 	%rd832, %rd831, %rd827;
	add.s64 	%rd833, %rd832, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd6293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd6293;
	}
	shf.l.wrap.b32 	%r403, %r402, %r401, 3;
	shf.l.wrap.b32 	%r404, %r401, %r402, 3;
	mov.b64 	%rd834, {%r404, %r403};
	shf.r.wrap.b32 	%r405, %r401, %r402, 19;
	shf.r.wrap.b32 	%r406, %r402, %r401, 19;
	mov.b64 	%rd835, {%r406, %r405};
	xor.b64  	%rd836, %rd835, %rd834;
	shr.u64 	%rd837, %rd6293, 6;
	xor.b64  	%rd838, %rd836, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd6306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd6306;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 8;
	shf.r.wrap.b32 	%r410, %r407, %r408, 8;
	mov.b64 	%rd839, {%r410, %r409};
	shf.r.wrap.b32 	%r411, %r408, %r407, 1;
	shf.r.wrap.b32 	%r412, %r407, %r408, 1;
	mov.b64 	%rd840, {%r412, %r411};
	xor.b64  	%rd841, %rd840, %rd839;
	shr.u64 	%rd842, %rd6306, 7;
	xor.b64  	%rd843, %rd841, %rd842;
	add.s64 	%rd844, %rd6298, %rd838;
	add.s64 	%rd845, %rd844, %rd6307;
	add.s64 	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd846, %rd750;
	xor.b64  	%rd848, %rd798, %rd774;
	and.b64  	%rd849, %rd822, %rd848;
	xor.b64  	%rd850, %rd849, %rd774;
	add.s64 	%rd851, %rd847, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd822;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 14;
	shf.r.wrap.b32 	%r416, %r413, %r414, 14;
	mov.b64 	%rd852, {%r416, %r415};
	shf.r.wrap.b32 	%r417, %r414, %r413, 18;
	shf.r.wrap.b32 	%r418, %r413, %r414, 18;
	mov.b64 	%rd853, {%r418, %r417};
	xor.b64  	%rd854, %rd852, %rd853;
	shf.l.wrap.b32 	%r419, %r413, %r414, 23;
	shf.l.wrap.b32 	%r420, %r414, %r413, 23;
	mov.b64 	%rd855, {%r420, %r419};
	xor.b64  	%rd856, %rd854, %rd855;
	add.s64 	%rd857, %rd851, %rd856;
	add.s64 	%rd858, %rd857, -1973867731355612462;
	add.s64 	%rd859, %rd858, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd833;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 28;
	shf.r.wrap.b32 	%r424, %r421, %r422, 28;
	mov.b64 	%rd860, {%r424, %r423};
	shf.l.wrap.b32 	%r425, %r421, %r422, 30;
	shf.l.wrap.b32 	%r426, %r422, %r421, 30;
	mov.b64 	%rd861, {%r426, %r425};
	xor.b64  	%rd862, %rd860, %rd861;
	shf.l.wrap.b32 	%r427, %r421, %r422, 25;
	shf.l.wrap.b32 	%r428, %r422, %r421, 25;
	mov.b64 	%rd863, {%r428, %r427};
	xor.b64  	%rd864, %rd862, %rd863;
	and.b64  	%rd865, %rd833, %rd809;
	or.b64  	%rd866, %rd833, %rd809;
	and.b64  	%rd867, %rd866, %rd785;
	or.b64  	%rd868, %rd867, %rd865;
	add.s64 	%rd869, %rd868, %rd864;
	add.s64 	%rd870, %rd869, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd6292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd6292;
	}
	shf.l.wrap.b32 	%r431, %r430, %r429, 3;
	shf.l.wrap.b32 	%r432, %r429, %r430, 3;
	mov.b64 	%rd871, {%r432, %r431};
	shf.r.wrap.b32 	%r433, %r429, %r430, 19;
	shf.r.wrap.b32 	%r434, %r430, %r429, 19;
	mov.b64 	%rd872, {%r434, %r433};
	xor.b64  	%rd873, %rd872, %rd871;
	shr.u64 	%rd874, %rd6292, 6;
	xor.b64  	%rd875, %rd873, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd6305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd6305;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 8;
	shf.r.wrap.b32 	%r438, %r435, %r436, 8;
	mov.b64 	%rd876, {%r438, %r437};
	shf.r.wrap.b32 	%r439, %r436, %r435, 1;
	shf.r.wrap.b32 	%r440, %r435, %r436, 1;
	mov.b64 	%rd877, {%r440, %r439};
	xor.b64  	%rd878, %rd877, %rd876;
	shr.u64 	%rd879, %rd6305, 7;
	xor.b64  	%rd880, %rd878, %rd879;
	add.s64 	%rd881, %rd6297, %rd875;
	add.s64 	%rd882, %rd881, %rd6306;
	add.s64 	%rd883, %rd882, %rd880;
	add.s64 	%rd884, %rd883, %rd774;
	xor.b64  	%rd885, %rd822, %rd798;
	and.b64  	%rd886, %rd859, %rd885;
	xor.b64  	%rd887, %rd886, %rd798;
	add.s64 	%rd888, %rd884, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd859;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 14;
	shf.r.wrap.b32 	%r444, %r441, %r442, 14;
	mov.b64 	%rd889, {%r444, %r443};
	shf.r.wrap.b32 	%r445, %r442, %r441, 18;
	shf.r.wrap.b32 	%r446, %r441, %r442, 18;
	mov.b64 	%rd890, {%r446, %r445};
	xor.b64  	%rd891, %rd889, %rd890;
	shf.l.wrap.b32 	%r447, %r441, %r442, 23;
	shf.l.wrap.b32 	%r448, %r442, %r441, 23;
	mov.b64 	%rd892, {%r448, %r447};
	xor.b64  	%rd893, %rd891, %rd892;
	add.s64 	%rd894, %rd888, %rd893;
	add.s64 	%rd895, %rd894, -1171420211273849373;
	add.s64 	%rd896, %rd895, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd870;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 28;
	shf.r.wrap.b32 	%r452, %r449, %r450, 28;
	mov.b64 	%rd897, {%r452, %r451};
	shf.l.wrap.b32 	%r453, %r449, %r450, 30;
	shf.l.wrap.b32 	%r454, %r450, %r449, 30;
	mov.b64 	%rd898, {%r454, %r453};
	xor.b64  	%rd899, %rd897, %rd898;
	shf.l.wrap.b32 	%r455, %r449, %r450, 25;
	shf.l.wrap.b32 	%r456, %r450, %r449, 25;
	mov.b64 	%rd900, {%r456, %r455};
	xor.b64  	%rd901, %rd899, %rd900;
	and.b64  	%rd902, %rd870, %rd833;
	or.b64  	%rd903, %rd870, %rd833;
	and.b64  	%rd904, %rd903, %rd809;
	or.b64  	%rd905, %rd904, %rd902;
	add.s64 	%rd906, %rd905, %rd901;
	add.s64 	%rd907, %rd906, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd846;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 19;
	shf.r.wrap.b32 	%r460, %r457, %r458, 19;
	mov.b64 	%rd908, {%r460, %r459};
	shf.l.wrap.b32 	%r461, %r457, %r458, 3;
	shf.l.wrap.b32 	%r462, %r458, %r457, 3;
	mov.b64 	%rd909, {%r462, %r461};
	xor.b64  	%rd910, %rd908, %rd909;
	shr.u64 	%rd911, %rd846, 6;
	xor.b64  	%rd912, %rd910, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd6304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd6304;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 8;
	shf.r.wrap.b32 	%r466, %r463, %r464, 8;
	mov.b64 	%rd913, {%r466, %r465};
	shf.r.wrap.b32 	%r467, %r464, %r463, 1;
	shf.r.wrap.b32 	%r468, %r463, %r464, 1;
	mov.b64 	%rd914, {%r468, %r467};
	xor.b64  	%rd915, %rd914, %rd913;
	shr.u64 	%rd916, %rd6304, 7;
	xor.b64  	%rd917, %rd915, %rd916;
	add.s64 	%rd918, %rd6305, %rd6296;
	add.s64 	%rd919, %rd918, %rd917;
	add.s64 	%rd920, %rd919, %rd912;
	add.s64 	%rd921, %rd920, %rd798;
	xor.b64  	%rd922, %rd859, %rd822;
	and.b64  	%rd923, %rd896, %rd922;
	xor.b64  	%rd924, %rd923, %rd822;
	add.s64 	%rd925, %rd921, %rd924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd896;
	}
	shf.r.wrap.b32 	%r471, %r470, %r469, 14;
	shf.r.wrap.b32 	%r472, %r469, %r470, 14;
	mov.b64 	%rd926, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r470, %r469, 18;
	shf.r.wrap.b32 	%r474, %r469, %r470, 18;
	mov.b64 	%rd927, {%r474, %r473};
	xor.b64  	%rd928, %rd926, %rd927;
	shf.l.wrap.b32 	%r475, %r469, %r470, 23;
	shf.l.wrap.b32 	%r476, %r470, %r469, 23;
	mov.b64 	%rd929, {%r476, %r475};
	xor.b64  	%rd930, %rd928, %rd929;
	add.s64 	%rd931, %rd925, %rd930;
	add.s64 	%rd932, %rd931, 1135362057144423861;
	add.s64 	%rd933, %rd932, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd907;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 28;
	shf.r.wrap.b32 	%r480, %r477, %r478, 28;
	mov.b64 	%rd934, {%r480, %r479};
	shf.l.wrap.b32 	%r481, %r477, %r478, 30;
	shf.l.wrap.b32 	%r482, %r478, %r477, 30;
	mov.b64 	%rd935, {%r482, %r481};
	xor.b64  	%rd936, %rd934, %rd935;
	shf.l.wrap.b32 	%r483, %r477, %r478, 25;
	shf.l.wrap.b32 	%r484, %r478, %r477, 25;
	mov.b64 	%rd937, {%r484, %r483};
	xor.b64  	%rd938, %rd936, %rd937;
	and.b64  	%rd939, %rd907, %rd870;
	or.b64  	%rd940, %rd907, %rd870;
	and.b64  	%rd941, %rd940, %rd833;
	or.b64  	%rd942, %rd941, %rd939;
	add.s64 	%rd943, %rd942, %rd938;
	add.s64 	%rd944, %rd943, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd883;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 19;
	shf.r.wrap.b32 	%r488, %r485, %r486, 19;
	mov.b64 	%rd945, {%r488, %r487};
	shf.l.wrap.b32 	%r489, %r485, %r486, 3;
	shf.l.wrap.b32 	%r490, %r486, %r485, 3;
	mov.b64 	%rd946, {%r490, %r489};
	xor.b64  	%rd947, %rd945, %rd946;
	shr.u64 	%rd948, %rd883, 6;
	xor.b64  	%rd949, %rd947, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd6303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd6303;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 8;
	shf.r.wrap.b32 	%r494, %r491, %r492, 8;
	mov.b64 	%rd950, {%r494, %r493};
	shf.r.wrap.b32 	%r495, %r492, %r491, 1;
	shf.r.wrap.b32 	%r496, %r491, %r492, 1;
	mov.b64 	%rd951, {%r496, %r495};
	xor.b64  	%rd952, %rd951, %rd950;
	shr.u64 	%rd953, %rd6303, 7;
	xor.b64  	%rd954, %rd952, %rd953;
	add.s64 	%rd955, %rd6304, %rd6295;
	add.s64 	%rd956, %rd955, %rd954;
	add.s64 	%rd957, %rd956, %rd949;
	add.s64 	%rd958, %rd957, %rd822;
	xor.b64  	%rd959, %rd896, %rd859;
	and.b64  	%rd960, %rd933, %rd959;
	xor.b64  	%rd961, %rd960, %rd859;
	add.s64 	%rd962, %rd958, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd933;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 14;
	shf.r.wrap.b32 	%r500, %r497, %r498, 14;
	mov.b64 	%rd963, {%r500, %r499};
	shf.r.wrap.b32 	%r501, %r498, %r497, 18;
	shf.r.wrap.b32 	%r502, %r497, %r498, 18;
	mov.b64 	%rd964, {%r502, %r501};
	xor.b64  	%rd965, %rd963, %rd964;
	shf.l.wrap.b32 	%r503, %r497, %r498, 23;
	shf.l.wrap.b32 	%r504, %r498, %r497, 23;
	mov.b64 	%rd966, {%r504, %r503};
	xor.b64  	%rd967, %rd965, %rd966;
	add.s64 	%rd968, %rd962, %rd967;
	add.s64 	%rd969, %rd968, 2597628984639134821;
	add.s64 	%rd970, %rd969, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd944;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 28;
	shf.r.wrap.b32 	%r508, %r505, %r506, 28;
	mov.b64 	%rd971, {%r508, %r507};
	shf.l.wrap.b32 	%r509, %r505, %r506, 30;
	shf.l.wrap.b32 	%r510, %r506, %r505, 30;
	mov.b64 	%rd972, {%r510, %r509};
	xor.b64  	%rd973, %rd971, %rd972;
	shf.l.wrap.b32 	%r511, %r505, %r506, 25;
	shf.l.wrap.b32 	%r512, %r506, %r505, 25;
	mov.b64 	%rd974, {%r512, %r511};
	xor.b64  	%rd975, %rd973, %rd974;
	and.b64  	%rd976, %rd944, %rd907;
	or.b64  	%rd977, %rd944, %rd907;
	and.b64  	%rd978, %rd977, %rd870;
	or.b64  	%rd979, %rd978, %rd976;
	add.s64 	%rd980, %rd979, %rd975;
	add.s64 	%rd981, %rd980, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd920;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 19;
	shf.r.wrap.b32 	%r516, %r513, %r514, 19;
	mov.b64 	%rd982, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 3;
	shf.l.wrap.b32 	%r518, %r514, %r513, 3;
	mov.b64 	%rd983, {%r518, %r517};
	xor.b64  	%rd984, %rd982, %rd983;
	shr.u64 	%rd985, %rd920, 6;
	xor.b64  	%rd986, %rd984, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd6302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd6302;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 8;
	shf.r.wrap.b32 	%r522, %r519, %r520, 8;
	mov.b64 	%rd987, {%r522, %r521};
	shf.r.wrap.b32 	%r523, %r520, %r519, 1;
	shf.r.wrap.b32 	%r524, %r519, %r520, 1;
	mov.b64 	%rd988, {%r524, %r523};
	xor.b64  	%rd989, %rd988, %rd987;
	shr.u64 	%rd990, %rd6302, 7;
	xor.b64  	%rd991, %rd989, %rd990;
	add.s64 	%rd992, %rd6303, %rd6294;
	add.s64 	%rd993, %rd992, %rd991;
	add.s64 	%rd994, %rd993, %rd986;
	add.s64 	%rd995, %rd994, %rd859;
	xor.b64  	%rd996, %rd933, %rd896;
	and.b64  	%rd997, %rd970, %rd996;
	xor.b64  	%rd998, %rd997, %rd896;
	add.s64 	%rd999, %rd995, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd970;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 14;
	shf.r.wrap.b32 	%r528, %r525, %r526, 14;
	mov.b64 	%rd1000, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 18;
	shf.r.wrap.b32 	%r530, %r525, %r526, 18;
	mov.b64 	%rd1001, {%r530, %r529};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	shf.l.wrap.b32 	%r531, %r525, %r526, 23;
	shf.l.wrap.b32 	%r532, %r526, %r525, 23;
	mov.b64 	%rd1003, {%r532, %r531};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	add.s64 	%rd1005, %rd999, %rd1004;
	add.s64 	%rd1006, %rd1005, 3308224258029322869;
	add.s64 	%rd1007, %rd1006, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd981;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 28;
	shf.r.wrap.b32 	%r536, %r533, %r534, 28;
	mov.b64 	%rd1008, {%r536, %r535};
	shf.l.wrap.b32 	%r537, %r533, %r534, 30;
	shf.l.wrap.b32 	%r538, %r534, %r533, 30;
	mov.b64 	%rd1009, {%r538, %r537};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	shf.l.wrap.b32 	%r539, %r533, %r534, 25;
	shf.l.wrap.b32 	%r540, %r534, %r533, 25;
	mov.b64 	%rd1011, {%r540, %r539};
	xor.b64  	%rd1012, %rd1010, %rd1011;
	and.b64  	%rd1013, %rd981, %rd944;
	or.b64  	%rd1014, %rd981, %rd944;
	and.b64  	%rd1015, %rd1014, %rd907;
	or.b64  	%rd1016, %rd1015, %rd1013;
	add.s64 	%rd1017, %rd1016, %rd1012;
	add.s64 	%rd1018, %rd1017, %rd1006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd957;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 19;
	shf.r.wrap.b32 	%r544, %r541, %r542, 19;
	mov.b64 	%rd1019, {%r544, %r543};
	shf.l.wrap.b32 	%r545, %r541, %r542, 3;
	shf.l.wrap.b32 	%r546, %r542, %r541, 3;
	mov.b64 	%rd1020, {%r546, %r545};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	shr.u64 	%rd1022, %rd957, 6;
	xor.b64  	%rd1023, %rd1021, %rd1022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd6301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd6301;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 8;
	shf.r.wrap.b32 	%r550, %r547, %r548, 8;
	mov.b64 	%rd1024, {%r550, %r549};
	shf.r.wrap.b32 	%r551, %r548, %r547, 1;
	shf.r.wrap.b32 	%r552, %r547, %r548, 1;
	mov.b64 	%rd1025, {%r552, %r551};
	xor.b64  	%rd1026, %rd1025, %rd1024;
	shr.u64 	%rd1027, %rd6301, 7;
	xor.b64  	%rd1028, %rd1026, %rd1027;
	add.s64 	%rd1029, %rd6302, %rd6293;
	add.s64 	%rd1030, %rd1029, %rd1028;
	add.s64 	%rd1031, %rd1030, %rd1023;
	add.s64 	%rd1032, %rd1031, %rd896;
	xor.b64  	%rd1033, %rd970, %rd933;
	and.b64  	%rd1034, %rd1007, %rd1033;
	xor.b64  	%rd1035, %rd1034, %rd933;
	add.s64 	%rd1036, %rd1032, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd1007;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd1037, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd1038, {%r558, %r557};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd1040, {%r560, %r559};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	add.s64 	%rd1042, %rd1036, %rd1041;
	add.s64 	%rd1043, %rd1042, 5365058923640841347;
	add.s64 	%rd1044, %rd1043, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd1018;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd1045, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd1046, {%r566, %r565};
	xor.b64  	%rd1047, %rd1045, %rd1046;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd1048, {%r568, %r567};
	xor.b64  	%rd1049, %rd1047, %rd1048;
	and.b64  	%rd1050, %rd1018, %rd981;
	or.b64  	%rd1051, %rd1018, %rd981;
	and.b64  	%rd1052, %rd1051, %rd944;
	or.b64  	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd1053, %rd1049;
	add.s64 	%rd1055, %rd1054, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd994;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 19;
	shf.r.wrap.b32 	%r572, %r569, %r570, 19;
	mov.b64 	%rd1056, {%r572, %r571};
	shf.l.wrap.b32 	%r573, %r569, %r570, 3;
	shf.l.wrap.b32 	%r574, %r570, %r569, 3;
	mov.b64 	%rd1057, {%r574, %r573};
	xor.b64  	%rd1058, %rd1056, %rd1057;
	shr.u64 	%rd1059, %rd994, 6;
	xor.b64  	%rd1060, %rd1058, %rd1059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd6300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd6300;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 8;
	shf.r.wrap.b32 	%r578, %r575, %r576, 8;
	mov.b64 	%rd1061, {%r578, %r577};
	shf.r.wrap.b32 	%r579, %r576, %r575, 1;
	shf.r.wrap.b32 	%r580, %r575, %r576, 1;
	mov.b64 	%rd1062, {%r580, %r579};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shr.u64 	%rd1064, %rd6300, 7;
	xor.b64  	%rd1065, %rd1063, %rd1064;
	add.s64 	%rd1066, %rd6301, %rd6292;
	add.s64 	%rd1067, %rd1066, %rd1065;
	add.s64 	%rd1068, %rd1067, %rd1060;
	add.s64 	%rd1069, %rd1068, %rd933;
	xor.b64  	%rd1070, %rd1007, %rd970;
	and.b64  	%rd1071, %rd1044, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd970;
	add.s64 	%rd1073, %rd1069, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd1044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd1044;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 14;
	shf.r.wrap.b32 	%r584, %r581, %r582, 14;
	mov.b64 	%rd1074, {%r584, %r583};
	shf.r.wrap.b32 	%r585, %r582, %r581, 18;
	shf.r.wrap.b32 	%r586, %r581, %r582, 18;
	mov.b64 	%rd1075, {%r586, %r585};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	shf.l.wrap.b32 	%r587, %r581, %r582, 23;
	shf.l.wrap.b32 	%r588, %r582, %r581, 23;
	mov.b64 	%rd1077, {%r588, %r587};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	add.s64 	%rd1079, %rd1073, %rd1078;
	add.s64 	%rd1080, %rd1079, 6679025012923562964;
	add.s64 	%rd1081, %rd1080, %rd944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd1055;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 28;
	shf.r.wrap.b32 	%r592, %r589, %r590, 28;
	mov.b64 	%rd1082, {%r592, %r591};
	shf.l.wrap.b32 	%r593, %r589, %r590, 30;
	shf.l.wrap.b32 	%r594, %r590, %r589, 30;
	mov.b64 	%rd1083, {%r594, %r593};
	xor.b64  	%rd1084, %rd1082, %rd1083;
	shf.l.wrap.b32 	%r595, %r589, %r590, 25;
	shf.l.wrap.b32 	%r596, %r590, %r589, 25;
	mov.b64 	%rd1085, {%r596, %r595};
	xor.b64  	%rd1086, %rd1084, %rd1085;
	and.b64  	%rd1087, %rd1055, %rd1018;
	or.b64  	%rd1088, %rd1055, %rd1018;
	and.b64  	%rd1089, %rd1088, %rd981;
	or.b64  	%rd1090, %rd1089, %rd1087;
	add.s64 	%rd1091, %rd1090, %rd1086;
	add.s64 	%rd1092, %rd1091, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd1031;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 19;
	shf.r.wrap.b32 	%r600, %r597, %r598, 19;
	mov.b64 	%rd1093, {%r600, %r599};
	shf.l.wrap.b32 	%r601, %r597, %r598, 3;
	shf.l.wrap.b32 	%r602, %r598, %r597, 3;
	mov.b64 	%rd1094, {%r602, %r601};
	xor.b64  	%rd1095, %rd1093, %rd1094;
	shr.u64 	%rd1096, %rd1031, 6;
	xor.b64  	%rd1097, %rd1095, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd6299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd6299;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 8;
	shf.r.wrap.b32 	%r606, %r603, %r604, 8;
	mov.b64 	%rd1098, {%r606, %r605};
	shf.r.wrap.b32 	%r607, %r604, %r603, 1;
	shf.r.wrap.b32 	%r608, %r603, %r604, 1;
	mov.b64 	%rd1099, {%r608, %r607};
	xor.b64  	%rd1100, %rd1099, %rd1098;
	shr.u64 	%rd1101, %rd6299, 7;
	xor.b64  	%rd1102, %rd1100, %rd1101;
	add.s64 	%rd1103, %rd1102, %rd6300;
	add.s64 	%rd1104, %rd1103, %rd846;
	add.s64 	%rd1105, %rd1104, %rd1097;
	add.s64 	%rd1106, %rd1105, %rd970;
	xor.b64  	%rd1107, %rd1044, %rd1007;
	and.b64  	%rd1108, %rd1081, %rd1107;
	xor.b64  	%rd1109, %rd1108, %rd1007;
	add.s64 	%rd1110, %rd1106, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd1081;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 14;
	shf.r.wrap.b32 	%r612, %r609, %r610, 14;
	mov.b64 	%rd1111, {%r612, %r611};
	shf.r.wrap.b32 	%r613, %r610, %r609, 18;
	shf.r.wrap.b32 	%r614, %r609, %r610, 18;
	mov.b64 	%rd1112, {%r614, %r613};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	shf.l.wrap.b32 	%r615, %r609, %r610, 23;
	shf.l.wrap.b32 	%r616, %r610, %r609, 23;
	mov.b64 	%rd1114, {%r616, %r615};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	add.s64 	%rd1116, %rd1110, %rd1115;
	add.s64 	%rd1117, %rd1116, 8573033837759648693;
	add.s64 	%rd1118, %rd1117, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd1092;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 28;
	shf.r.wrap.b32 	%r620, %r617, %r618, 28;
	mov.b64 	%rd1119, {%r620, %r619};
	shf.l.wrap.b32 	%r621, %r617, %r618, 30;
	shf.l.wrap.b32 	%r622, %r618, %r617, 30;
	mov.b64 	%rd1120, {%r622, %r621};
	xor.b64  	%rd1121, %rd1119, %rd1120;
	shf.l.wrap.b32 	%r623, %r617, %r618, 25;
	shf.l.wrap.b32 	%r624, %r618, %r617, 25;
	mov.b64 	%rd1122, {%r624, %r623};
	xor.b64  	%rd1123, %rd1121, %rd1122;
	and.b64  	%rd1124, %rd1092, %rd1055;
	or.b64  	%rd1125, %rd1092, %rd1055;
	and.b64  	%rd1126, %rd1125, %rd1018;
	or.b64  	%rd1127, %rd1126, %rd1124;
	add.s64 	%rd1128, %rd1127, %rd1123;
	add.s64 	%rd1129, %rd1128, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd1068;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 19;
	shf.r.wrap.b32 	%r628, %r625, %r626, 19;
	mov.b64 	%rd1130, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 3;
	shf.l.wrap.b32 	%r630, %r626, %r625, 3;
	mov.b64 	%rd1131, {%r630, %r629};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	shr.u64 	%rd1133, %rd1068, 6;
	xor.b64  	%rd1134, %rd1132, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd6298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd6298;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 8;
	shf.r.wrap.b32 	%r634, %r631, %r632, 8;
	mov.b64 	%rd1135, {%r634, %r633};
	shf.r.wrap.b32 	%r635, %r632, %r631, 1;
	shf.r.wrap.b32 	%r636, %r631, %r632, 1;
	mov.b64 	%rd1136, {%r636, %r635};
	xor.b64  	%rd1137, %rd1136, %rd1135;
	shr.u64 	%rd1138, %rd6298, 7;
	xor.b64  	%rd1139, %rd1137, %rd1138;
	add.s64 	%rd1140, %rd1139, %rd6299;
	add.s64 	%rd1141, %rd1140, %rd883;
	add.s64 	%rd1142, %rd1141, %rd1134;
	add.s64 	%rd1143, %rd1142, %rd1007;
	xor.b64  	%rd1144, %rd1081, %rd1044;
	and.b64  	%rd1145, %rd1118, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1044;
	add.s64 	%rd1147, %rd1143, %rd1146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd1118;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 14;
	shf.r.wrap.b32 	%r640, %r637, %r638, 14;
	mov.b64 	%rd1148, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 18;
	shf.r.wrap.b32 	%r642, %r637, %r638, 18;
	mov.b64 	%rd1149, {%r642, %r641};
	xor.b64  	%rd1150, %rd1148, %rd1149;
	shf.l.wrap.b32 	%r643, %r637, %r638, 23;
	shf.l.wrap.b32 	%r644, %r638, %r637, 23;
	mov.b64 	%rd1151, {%r644, %r643};
	xor.b64  	%rd1152, %rd1150, %rd1151;
	add.s64 	%rd1153, %rd1147, %rd1152;
	add.s64 	%rd1154, %rd1153, -7476448914759557205;
	add.s64 	%rd1155, %rd1154, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1129;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 28;
	shf.r.wrap.b32 	%r648, %r645, %r646, 28;
	mov.b64 	%rd1156, {%r648, %r647};
	shf.l.wrap.b32 	%r649, %r645, %r646, 30;
	shf.l.wrap.b32 	%r650, %r646, %r645, 30;
	mov.b64 	%rd1157, {%r650, %r649};
	xor.b64  	%rd1158, %rd1156, %rd1157;
	shf.l.wrap.b32 	%r651, %r645, %r646, 25;
	shf.l.wrap.b32 	%r652, %r646, %r645, 25;
	mov.b64 	%rd1159, {%r652, %r651};
	xor.b64  	%rd1160, %rd1158, %rd1159;
	and.b64  	%rd1161, %rd1129, %rd1092;
	or.b64  	%rd1162, %rd1129, %rd1092;
	and.b64  	%rd1163, %rd1162, %rd1055;
	or.b64  	%rd1164, %rd1163, %rd1161;
	add.s64 	%rd1165, %rd1164, %rd1160;
	add.s64 	%rd1166, %rd1165, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd1105;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 19;
	shf.r.wrap.b32 	%r656, %r653, %r654, 19;
	mov.b64 	%rd1167, {%r656, %r655};
	shf.l.wrap.b32 	%r657, %r653, %r654, 3;
	shf.l.wrap.b32 	%r658, %r654, %r653, 3;
	mov.b64 	%rd1168, {%r658, %r657};
	xor.b64  	%rd1169, %rd1167, %rd1168;
	shr.u64 	%rd1170, %rd1105, 6;
	xor.b64  	%rd1171, %rd1169, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd6297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd6297;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 8;
	shf.r.wrap.b32 	%r662, %r659, %r660, 8;
	mov.b64 	%rd1172, {%r662, %r661};
	shf.r.wrap.b32 	%r663, %r660, %r659, 1;
	shf.r.wrap.b32 	%r664, %r659, %r660, 1;
	mov.b64 	%rd1173, {%r664, %r663};
	xor.b64  	%rd1174, %rd1173, %rd1172;
	shr.u64 	%rd1175, %rd6297, 7;
	xor.b64  	%rd1176, %rd1174, %rd1175;
	add.s64 	%rd1177, %rd1176, %rd6298;
	add.s64 	%rd1178, %rd1177, %rd920;
	add.s64 	%rd1179, %rd1178, %rd1171;
	add.s64 	%rd1180, %rd1179, %rd1044;
	xor.b64  	%rd1181, %rd1118, %rd1081;
	and.b64  	%rd1182, %rd1155, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1081;
	add.s64 	%rd1184, %rd1180, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd1155;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 14;
	shf.r.wrap.b32 	%r668, %r665, %r666, 14;
	mov.b64 	%rd1185, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 18;
	shf.r.wrap.b32 	%r670, %r665, %r666, 18;
	mov.b64 	%rd1186, {%r670, %r669};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	shf.l.wrap.b32 	%r671, %r665, %r666, 23;
	shf.l.wrap.b32 	%r672, %r666, %r665, 23;
	mov.b64 	%rd1188, {%r672, %r671};
	xor.b64  	%rd1189, %rd1187, %rd1188;
	add.s64 	%rd1190, %rd1184, %rd1189;
	add.s64 	%rd1191, %rd1190, -6327057829258317296;
	add.s64 	%rd1192, %rd1191, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd1166;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 28;
	shf.r.wrap.b32 	%r676, %r673, %r674, 28;
	mov.b64 	%rd1193, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 30;
	shf.l.wrap.b32 	%r678, %r674, %r673, 30;
	mov.b64 	%rd1194, {%r678, %r677};
	xor.b64  	%rd1195, %rd1193, %rd1194;
	shf.l.wrap.b32 	%r679, %r673, %r674, 25;
	shf.l.wrap.b32 	%r680, %r674, %r673, 25;
	mov.b64 	%rd1196, {%r680, %r679};
	xor.b64  	%rd1197, %rd1195, %rd1196;
	and.b64  	%rd1198, %rd1166, %rd1129;
	or.b64  	%rd1199, %rd1166, %rd1129;
	and.b64  	%rd1200, %rd1199, %rd1092;
	or.b64  	%rd1201, %rd1200, %rd1198;
	add.s64 	%rd1202, %rd1201, %rd1197;
	add.s64 	%rd1203, %rd1202, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1142;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 19;
	shf.r.wrap.b32 	%r684, %r681, %r682, 19;
	mov.b64 	%rd1204, {%r684, %r683};
	shf.l.wrap.b32 	%r685, %r681, %r682, 3;
	shf.l.wrap.b32 	%r686, %r682, %r681, 3;
	mov.b64 	%rd1205, {%r686, %r685};
	xor.b64  	%rd1206, %rd1204, %rd1205;
	shr.u64 	%rd1207, %rd1142, 6;
	xor.b64  	%rd1208, %rd1206, %rd1207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd6296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd6296;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 8;
	shf.r.wrap.b32 	%r690, %r687, %r688, 8;
	mov.b64 	%rd1209, {%r690, %r689};
	shf.r.wrap.b32 	%r691, %r688, %r687, 1;
	shf.r.wrap.b32 	%r692, %r687, %r688, 1;
	mov.b64 	%rd1210, {%r692, %r691};
	xor.b64  	%rd1211, %rd1210, %rd1209;
	shr.u64 	%rd1212, %rd6296, 7;
	xor.b64  	%rd1213, %rd1211, %rd1212;
	add.s64 	%rd1214, %rd1213, %rd6297;
	add.s64 	%rd1215, %rd1214, %rd957;
	add.s64 	%rd1216, %rd1215, %rd1208;
	add.s64 	%rd1217, %rd1216, %rd1081;
	xor.b64  	%rd1218, %rd1155, %rd1118;
	and.b64  	%rd1219, %rd1192, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1118;
	add.s64 	%rd1221, %rd1217, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd1192;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 14;
	shf.r.wrap.b32 	%r696, %r693, %r694, 14;
	mov.b64 	%rd1222, {%r696, %r695};
	shf.r.wrap.b32 	%r697, %r694, %r693, 18;
	shf.r.wrap.b32 	%r698, %r693, %r694, 18;
	mov.b64 	%rd1223, {%r698, %r697};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	shf.l.wrap.b32 	%r699, %r693, %r694, 23;
	shf.l.wrap.b32 	%r700, %r694, %r693, 23;
	mov.b64 	%rd1225, {%r700, %r699};
	xor.b64  	%rd1226, %rd1224, %rd1225;
	add.s64 	%rd1227, %rd1221, %rd1226;
	add.s64 	%rd1228, %rd1227, -5763719355590565569;
	add.s64 	%rd1229, %rd1228, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd1203;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 28;
	shf.r.wrap.b32 	%r704, %r701, %r702, 28;
	mov.b64 	%rd1230, {%r704, %r703};
	shf.l.wrap.b32 	%r705, %r701, %r702, 30;
	shf.l.wrap.b32 	%r706, %r702, %r701, 30;
	mov.b64 	%rd1231, {%r706, %r705};
	xor.b64  	%rd1232, %rd1230, %rd1231;
	shf.l.wrap.b32 	%r707, %r701, %r702, 25;
	shf.l.wrap.b32 	%r708, %r702, %r701, 25;
	mov.b64 	%rd1233, {%r708, %r707};
	xor.b64  	%rd1234, %rd1232, %rd1233;
	and.b64  	%rd1235, %rd1203, %rd1166;
	or.b64  	%rd1236, %rd1203, %rd1166;
	and.b64  	%rd1237, %rd1236, %rd1129;
	or.b64  	%rd1238, %rd1237, %rd1235;
	add.s64 	%rd1239, %rd1238, %rd1234;
	add.s64 	%rd1240, %rd1239, %rd1228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1179;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 19;
	shf.r.wrap.b32 	%r712, %r709, %r710, 19;
	mov.b64 	%rd1241, {%r712, %r711};
	shf.l.wrap.b32 	%r713, %r709, %r710, 3;
	shf.l.wrap.b32 	%r714, %r710, %r709, 3;
	mov.b64 	%rd1242, {%r714, %r713};
	xor.b64  	%rd1243, %rd1241, %rd1242;
	shr.u64 	%rd1244, %rd1179, 6;
	xor.b64  	%rd1245, %rd1243, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd6295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd6295;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 8;
	shf.r.wrap.b32 	%r718, %r715, %r716, 8;
	mov.b64 	%rd1246, {%r718, %r717};
	shf.r.wrap.b32 	%r719, %r716, %r715, 1;
	shf.r.wrap.b32 	%r720, %r715, %r716, 1;
	mov.b64 	%rd1247, {%r720, %r719};
	xor.b64  	%rd1248, %rd1247, %rd1246;
	shr.u64 	%rd1249, %rd6295, 7;
	xor.b64  	%rd1250, %rd1248, %rd1249;
	add.s64 	%rd1251, %rd1250, %rd6296;
	add.s64 	%rd1252, %rd1251, %rd994;
	add.s64 	%rd1253, %rd1252, %rd1245;
	add.s64 	%rd1254, %rd1253, %rd1118;
	xor.b64  	%rd1255, %rd1192, %rd1155;
	and.b64  	%rd1256, %rd1229, %rd1255;
	xor.b64  	%rd1257, %rd1256, %rd1155;
	add.s64 	%rd1258, %rd1254, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1229;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 14;
	shf.r.wrap.b32 	%r724, %r721, %r722, 14;
	mov.b64 	%rd1259, {%r724, %r723};
	shf.r.wrap.b32 	%r725, %r722, %r721, 18;
	shf.r.wrap.b32 	%r726, %r721, %r722, 18;
	mov.b64 	%rd1260, {%r726, %r725};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	shf.l.wrap.b32 	%r727, %r721, %r722, 23;
	shf.l.wrap.b32 	%r728, %r722, %r721, 23;
	mov.b64 	%rd1262, {%r728, %r727};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	add.s64 	%rd1264, %rd1258, %rd1263;
	add.s64 	%rd1265, %rd1264, -4658551843659510044;
	add.s64 	%rd1266, %rd1265, %rd1129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1240;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 28;
	shf.r.wrap.b32 	%r732, %r729, %r730, 28;
	mov.b64 	%rd1267, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 30;
	shf.l.wrap.b32 	%r734, %r730, %r729, 30;
	mov.b64 	%rd1268, {%r734, %r733};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	shf.l.wrap.b32 	%r735, %r729, %r730, 25;
	shf.l.wrap.b32 	%r736, %r730, %r729, 25;
	mov.b64 	%rd1270, {%r736, %r735};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	and.b64  	%rd1272, %rd1240, %rd1203;
	or.b64  	%rd1273, %rd1240, %rd1203;
	and.b64  	%rd1274, %rd1273, %rd1166;
	or.b64  	%rd1275, %rd1274, %rd1272;
	add.s64 	%rd1276, %rd1275, %rd1271;
	add.s64 	%rd1277, %rd1276, %rd1265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1216;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 19;
	shf.r.wrap.b32 	%r740, %r737, %r738, 19;
	mov.b64 	%rd1278, {%r740, %r739};
	shf.l.wrap.b32 	%r741, %r737, %r738, 3;
	shf.l.wrap.b32 	%r742, %r738, %r737, 3;
	mov.b64 	%rd1279, {%r742, %r741};
	xor.b64  	%rd1280, %rd1278, %rd1279;
	shr.u64 	%rd1281, %rd1216, 6;
	xor.b64  	%rd1282, %rd1280, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r743,%dummy}, %rd6294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd6294;
	}
	shf.r.wrap.b32 	%r745, %r744, %r743, 8;
	shf.r.wrap.b32 	%r746, %r743, %r744, 8;
	mov.b64 	%rd1283, {%r746, %r745};
	shf.r.wrap.b32 	%r747, %r744, %r743, 1;
	shf.r.wrap.b32 	%r748, %r743, %r744, 1;
	mov.b64 	%rd1284, {%r748, %r747};
	xor.b64  	%rd1285, %rd1284, %rd1283;
	shr.u64 	%rd1286, %rd6294, 7;
	xor.b64  	%rd1287, %rd1285, %rd1286;
	add.s64 	%rd1288, %rd1287, %rd6295;
	add.s64 	%rd1289, %rd1288, %rd1031;
	add.s64 	%rd1290, %rd1289, %rd1282;
	add.s64 	%rd1291, %rd1290, %rd1155;
	xor.b64  	%rd1292, %rd1229, %rd1192;
	and.b64  	%rd1293, %rd1266, %rd1292;
	xor.b64  	%rd1294, %rd1293, %rd1192;
	add.s64 	%rd1295, %rd1291, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1266;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 14;
	shf.r.wrap.b32 	%r752, %r749, %r750, 14;
	mov.b64 	%rd1296, {%r752, %r751};
	shf.r.wrap.b32 	%r753, %r750, %r749, 18;
	shf.r.wrap.b32 	%r754, %r749, %r750, 18;
	mov.b64 	%rd1297, {%r754, %r753};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shf.l.wrap.b32 	%r755, %r749, %r750, 23;
	shf.l.wrap.b32 	%r756, %r750, %r749, 23;
	mov.b64 	%rd1299, {%r756, %r755};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	add.s64 	%rd1301, %rd1295, %rd1300;
	add.s64 	%rd1302, %rd1301, -4116276920077217854;
	add.s64 	%rd1303, %rd1302, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1277;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 28;
	shf.r.wrap.b32 	%r760, %r757, %r758, 28;
	mov.b64 	%rd1304, {%r760, %r759};
	shf.l.wrap.b32 	%r761, %r757, %r758, 30;
	shf.l.wrap.b32 	%r762, %r758, %r757, 30;
	mov.b64 	%rd1305, {%r762, %r761};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	shf.l.wrap.b32 	%r763, %r757, %r758, 25;
	shf.l.wrap.b32 	%r764, %r758, %r757, 25;
	mov.b64 	%rd1307, {%r764, %r763};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	and.b64  	%rd1309, %rd1277, %rd1240;
	or.b64  	%rd1310, %rd1277, %rd1240;
	and.b64  	%rd1311, %rd1310, %rd1203;
	or.b64  	%rd1312, %rd1311, %rd1309;
	add.s64 	%rd1313, %rd1312, %rd1308;
	add.s64 	%rd1314, %rd1313, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd1253;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 19;
	shf.r.wrap.b32 	%r768, %r765, %r766, 19;
	mov.b64 	%rd1315, {%r768, %r767};
	shf.l.wrap.b32 	%r769, %r765, %r766, 3;
	shf.l.wrap.b32 	%r770, %r766, %r765, 3;
	mov.b64 	%rd1316, {%r770, %r769};
	xor.b64  	%rd1317, %rd1315, %rd1316;
	shr.u64 	%rd1318, %rd1253, 6;
	xor.b64  	%rd1319, %rd1317, %rd1318;
	shf.r.wrap.b32 	%r771, %r401, %r402, 8;
	shf.r.wrap.b32 	%r772, %r402, %r401, 8;
	mov.b64 	%rd1320, {%r772, %r771};
	shf.r.wrap.b32 	%r773, %r401, %r402, 1;
	shf.r.wrap.b32 	%r774, %r402, %r401, 1;
	mov.b64 	%rd1321, {%r774, %r773};
	xor.b64  	%rd1322, %rd1321, %rd1320;
	shr.u64 	%rd1323, %rd6293, 7;
	xor.b64  	%rd1324, %rd1322, %rd1323;
	add.s64 	%rd1325, %rd1324, %rd6294;
	add.s64 	%rd1326, %rd1325, %rd1068;
	add.s64 	%rd1327, %rd1326, %rd1319;
	add.s64 	%rd1328, %rd1327, %rd1192;
	xor.b64  	%rd1329, %rd1266, %rd1229;
	and.b64  	%rd1330, %rd1303, %rd1329;
	xor.b64  	%rd1331, %rd1330, %rd1229;
	add.s64 	%rd1332, %rd1328, %rd1331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r775,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r776}, %rd1303;
	}
	shf.r.wrap.b32 	%r777, %r776, %r775, 14;
	shf.r.wrap.b32 	%r778, %r775, %r776, 14;
	mov.b64 	%rd1333, {%r778, %r777};
	shf.r.wrap.b32 	%r779, %r776, %r775, 18;
	shf.r.wrap.b32 	%r780, %r775, %r776, 18;
	mov.b64 	%rd1334, {%r780, %r779};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	shf.l.wrap.b32 	%r781, %r775, %r776, 23;
	shf.l.wrap.b32 	%r782, %r776, %r775, 23;
	mov.b64 	%rd1336, {%r782, %r781};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	add.s64 	%rd1338, %rd1332, %rd1337;
	add.s64 	%rd1339, %rd1338, -3051310485924567259;
	add.s64 	%rd1340, %rd1339, %rd1203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd1314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd1314;
	}
	shf.r.wrap.b32 	%r785, %r784, %r783, 28;
	shf.r.wrap.b32 	%r786, %r783, %r784, 28;
	mov.b64 	%rd1341, {%r786, %r785};
	shf.l.wrap.b32 	%r787, %r783, %r784, 30;
	shf.l.wrap.b32 	%r788, %r784, %r783, 30;
	mov.b64 	%rd1342, {%r788, %r787};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	shf.l.wrap.b32 	%r789, %r783, %r784, 25;
	shf.l.wrap.b32 	%r790, %r784, %r783, 25;
	mov.b64 	%rd1344, {%r790, %r789};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	and.b64  	%rd1346, %rd1314, %rd1277;
	or.b64  	%rd1347, %rd1314, %rd1277;
	and.b64  	%rd1348, %rd1347, %rd1240;
	or.b64  	%rd1349, %rd1348, %rd1346;
	add.s64 	%rd1350, %rd1349, %rd1345;
	add.s64 	%rd1351, %rd1350, %rd1339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r791,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r792}, %rd1290;
	}
	shf.r.wrap.b32 	%r793, %r792, %r791, 19;
	shf.r.wrap.b32 	%r794, %r791, %r792, 19;
	mov.b64 	%rd1352, {%r794, %r793};
	shf.l.wrap.b32 	%r795, %r791, %r792, 3;
	shf.l.wrap.b32 	%r796, %r792, %r791, 3;
	mov.b64 	%rd1353, {%r796, %r795};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	shr.u64 	%rd1355, %rd1290, 6;
	xor.b64  	%rd1356, %rd1354, %rd1355;
	shf.r.wrap.b32 	%r797, %r429, %r430, 8;
	shf.r.wrap.b32 	%r798, %r430, %r429, 8;
	mov.b64 	%rd1357, {%r798, %r797};
	shf.r.wrap.b32 	%r799, %r429, %r430, 1;
	shf.r.wrap.b32 	%r800, %r430, %r429, 1;
	mov.b64 	%rd1358, {%r800, %r799};
	xor.b64  	%rd1359, %rd1358, %rd1357;
	shr.u64 	%rd1360, %rd6292, 7;
	xor.b64  	%rd1361, %rd1359, %rd1360;
	add.s64 	%rd1362, %rd1361, %rd6293;
	add.s64 	%rd1363, %rd1362, %rd1105;
	add.s64 	%rd1364, %rd1363, %rd1356;
	add.s64 	%rd1365, %rd1364, %rd1229;
	xor.b64  	%rd1366, %rd1303, %rd1266;
	and.b64  	%rd1367, %rd1340, %rd1366;
	xor.b64  	%rd1368, %rd1367, %rd1266;
	add.s64 	%rd1369, %rd1365, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r802}, %rd1340;
	}
	shf.r.wrap.b32 	%r803, %r802, %r801, 14;
	shf.r.wrap.b32 	%r804, %r801, %r802, 14;
	mov.b64 	%rd1370, {%r804, %r803};
	shf.r.wrap.b32 	%r805, %r802, %r801, 18;
	shf.r.wrap.b32 	%r806, %r801, %r802, 18;
	mov.b64 	%rd1371, {%r806, %r805};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	shf.l.wrap.b32 	%r807, %r801, %r802, 23;
	shf.l.wrap.b32 	%r808, %r802, %r801, 23;
	mov.b64 	%rd1373, {%r808, %r807};
	xor.b64  	%rd1374, %rd1372, %rd1373;
	add.s64 	%rd1375, %rd1369, %rd1374;
	add.s64 	%rd1376, %rd1375, 489312712824947311;
	add.s64 	%rd1377, %rd1376, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r810}, %rd1351;
	}
	shf.r.wrap.b32 	%r811, %r810, %r809, 28;
	shf.r.wrap.b32 	%r812, %r809, %r810, 28;
	mov.b64 	%rd1378, {%r812, %r811};
	shf.l.wrap.b32 	%r813, %r809, %r810, 30;
	shf.l.wrap.b32 	%r814, %r810, %r809, 30;
	mov.b64 	%rd1379, {%r814, %r813};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	shf.l.wrap.b32 	%r815, %r809, %r810, 25;
	shf.l.wrap.b32 	%r816, %r810, %r809, 25;
	mov.b64 	%rd1381, {%r816, %r815};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	and.b64  	%rd1383, %rd1351, %rd1314;
	or.b64  	%rd1384, %rd1351, %rd1314;
	and.b64  	%rd1385, %rd1384, %rd1277;
	or.b64  	%rd1386, %rd1385, %rd1383;
	add.s64 	%rd1387, %rd1386, %rd1382;
	add.s64 	%rd1388, %rd1387, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd1327;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 19;
	shf.r.wrap.b32 	%r820, %r817, %r818, 19;
	mov.b64 	%rd1389, {%r820, %r819};
	shf.l.wrap.b32 	%r821, %r817, %r818, 3;
	shf.l.wrap.b32 	%r822, %r818, %r817, 3;
	mov.b64 	%rd1390, {%r822, %r821};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	shr.u64 	%rd1392, %rd1327, 6;
	xor.b64  	%rd1393, %rd1391, %rd1392;
	shf.r.wrap.b32 	%r823, %r458, %r457, 1;
	shf.r.wrap.b32 	%r824, %r457, %r458, 1;
	mov.b64 	%rd1394, {%r824, %r823};
	shf.r.wrap.b32 	%r825, %r458, %r457, 8;
	shf.r.wrap.b32 	%r826, %r457, %r458, 8;
	mov.b64 	%rd1395, {%r826, %r825};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	shr.u64 	%rd1397, %rd846, 7;
	xor.b64  	%rd1398, %rd1396, %rd1397;
	add.s64 	%rd1399, %rd1398, %rd6292;
	add.s64 	%rd1400, %rd1399, %rd1142;
	add.s64 	%rd1401, %rd1400, %rd1393;
	add.s64 	%rd1402, %rd1401, %rd1266;
	xor.b64  	%rd1403, %rd1340, %rd1303;
	and.b64  	%rd1404, %rd1377, %rd1403;
	xor.b64  	%rd1405, %rd1404, %rd1303;
	add.s64 	%rd1406, %rd1402, %rd1405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd1377;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 14;
	shf.r.wrap.b32 	%r830, %r827, %r828, 14;
	mov.b64 	%rd1407, {%r830, %r829};
	shf.r.wrap.b32 	%r831, %r828, %r827, 18;
	shf.r.wrap.b32 	%r832, %r827, %r828, 18;
	mov.b64 	%rd1408, {%r832, %r831};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	shf.l.wrap.b32 	%r833, %r827, %r828, 23;
	shf.l.wrap.b32 	%r834, %r828, %r827, 23;
	mov.b64 	%rd1410, {%r834, %r833};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	add.s64 	%rd1412, %rd1406, %rd1411;
	add.s64 	%rd1413, %rd1412, 1452737877330783856;
	add.s64 	%rd1414, %rd1413, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1388;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 28;
	shf.r.wrap.b32 	%r838, %r835, %r836, 28;
	mov.b64 	%rd1415, {%r838, %r837};
	shf.l.wrap.b32 	%r839, %r835, %r836, 30;
	shf.l.wrap.b32 	%r840, %r836, %r835, 30;
	mov.b64 	%rd1416, {%r840, %r839};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	shf.l.wrap.b32 	%r841, %r835, %r836, 25;
	shf.l.wrap.b32 	%r842, %r836, %r835, 25;
	mov.b64 	%rd1418, {%r842, %r841};
	xor.b64  	%rd1419, %rd1417, %rd1418;
	and.b64  	%rd1420, %rd1388, %rd1351;
	or.b64  	%rd1421, %rd1388, %rd1351;
	and.b64  	%rd1422, %rd1421, %rd1314;
	or.b64  	%rd1423, %rd1422, %rd1420;
	add.s64 	%rd1424, %rd1423, %rd1419;
	add.s64 	%rd1425, %rd1424, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd1364;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 19;
	shf.r.wrap.b32 	%r846, %r843, %r844, 19;
	mov.b64 	%rd1426, {%r846, %r845};
	shf.l.wrap.b32 	%r847, %r843, %r844, 3;
	shf.l.wrap.b32 	%r848, %r844, %r843, 3;
	mov.b64 	%rd1427, {%r848, %r847};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	shr.u64 	%rd1429, %rd1364, 6;
	xor.b64  	%rd1430, %rd1428, %rd1429;
	shf.r.wrap.b32 	%r849, %r486, %r485, 1;
	shf.r.wrap.b32 	%r850, %r485, %r486, 1;
	mov.b64 	%rd1431, {%r850, %r849};
	shf.r.wrap.b32 	%r851, %r486, %r485, 8;
	shf.r.wrap.b32 	%r852, %r485, %r486, 8;
	mov.b64 	%rd1432, {%r852, %r851};
	xor.b64  	%rd1433, %rd1431, %rd1432;
	shr.u64 	%rd1434, %rd883, 7;
	xor.b64  	%rd1435, %rd1433, %rd1434;
	add.s64 	%rd1436, %rd1435, %rd846;
	add.s64 	%rd1437, %rd1436, %rd1179;
	add.s64 	%rd1438, %rd1437, %rd1430;
	add.s64 	%rd1439, %rd1438, %rd1303;
	xor.b64  	%rd1440, %rd1377, %rd1340;
	and.b64  	%rd1441, %rd1414, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1340;
	add.s64 	%rd1443, %rd1439, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1414;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 14;
	shf.r.wrap.b32 	%r856, %r853, %r854, 14;
	mov.b64 	%rd1444, {%r856, %r855};
	shf.r.wrap.b32 	%r857, %r854, %r853, 18;
	shf.r.wrap.b32 	%r858, %r853, %r854, 18;
	mov.b64 	%rd1445, {%r858, %r857};
	xor.b64  	%rd1446, %rd1444, %rd1445;
	shf.l.wrap.b32 	%r859, %r853, %r854, 23;
	shf.l.wrap.b32 	%r860, %r854, %r853, 23;
	mov.b64 	%rd1447, {%r860, %r859};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	add.s64 	%rd1449, %rd1443, %rd1448;
	add.s64 	%rd1450, %rd1449, 2861767655752347644;
	add.s64 	%rd1451, %rd1450, %rd1314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1425;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 28;
	shf.r.wrap.b32 	%r864, %r861, %r862, 28;
	mov.b64 	%rd1452, {%r864, %r863};
	shf.l.wrap.b32 	%r865, %r861, %r862, 30;
	shf.l.wrap.b32 	%r866, %r862, %r861, 30;
	mov.b64 	%rd1453, {%r866, %r865};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	shf.l.wrap.b32 	%r867, %r861, %r862, 25;
	shf.l.wrap.b32 	%r868, %r862, %r861, 25;
	mov.b64 	%rd1455, {%r868, %r867};
	xor.b64  	%rd1456, %rd1454, %rd1455;
	and.b64  	%rd1457, %rd1425, %rd1388;
	or.b64  	%rd1458, %rd1425, %rd1388;
	and.b64  	%rd1459, %rd1458, %rd1351;
	or.b64  	%rd1460, %rd1459, %rd1457;
	add.s64 	%rd1461, %rd1460, %rd1456;
	add.s64 	%rd1462, %rd1461, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1401;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 19;
	shf.r.wrap.b32 	%r872, %r869, %r870, 19;
	mov.b64 	%rd1463, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 3;
	shf.l.wrap.b32 	%r874, %r870, %r869, 3;
	mov.b64 	%rd1464, {%r874, %r873};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	shr.u64 	%rd1466, %rd1401, 6;
	xor.b64  	%rd1467, %rd1465, %rd1466;
	shf.r.wrap.b32 	%r875, %r514, %r513, 1;
	shf.r.wrap.b32 	%r876, %r513, %r514, 1;
	mov.b64 	%rd1468, {%r876, %r875};
	shf.r.wrap.b32 	%r877, %r514, %r513, 8;
	shf.r.wrap.b32 	%r878, %r513, %r514, 8;
	mov.b64 	%rd1469, {%r878, %r877};
	xor.b64  	%rd1470, %rd1468, %rd1469;
	shr.u64 	%rd1471, %rd920, 7;
	xor.b64  	%rd1472, %rd1470, %rd1471;
	add.s64 	%rd1473, %rd1472, %rd883;
	add.s64 	%rd1474, %rd1473, %rd1216;
	add.s64 	%rd1475, %rd1474, %rd1467;
	add.s64 	%rd1476, %rd1475, %rd1340;
	xor.b64  	%rd1477, %rd1414, %rd1377;
	and.b64  	%rd1478, %rd1451, %rd1477;
	xor.b64  	%rd1479, %rd1478, %rd1377;
	add.s64 	%rd1480, %rd1476, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1451;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 14;
	shf.r.wrap.b32 	%r882, %r879, %r880, 14;
	mov.b64 	%rd1481, {%r882, %r881};
	shf.r.wrap.b32 	%r883, %r880, %r879, 18;
	shf.r.wrap.b32 	%r884, %r879, %r880, 18;
	mov.b64 	%rd1482, {%r884, %r883};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	shf.l.wrap.b32 	%r885, %r879, %r880, 23;
	shf.l.wrap.b32 	%r886, %r880, %r879, 23;
	mov.b64 	%rd1484, {%r886, %r885};
	xor.b64  	%rd1485, %rd1483, %rd1484;
	add.s64 	%rd1486, %rd1480, %rd1485;
	add.s64 	%rd1487, %rd1486, 3322285676063803686;
	add.s64 	%rd1488, %rd1487, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1462;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 28;
	shf.r.wrap.b32 	%r890, %r887, %r888, 28;
	mov.b64 	%rd1489, {%r890, %r889};
	shf.l.wrap.b32 	%r891, %r887, %r888, 30;
	shf.l.wrap.b32 	%r892, %r888, %r887, 30;
	mov.b64 	%rd1490, {%r892, %r891};
	xor.b64  	%rd1491, %rd1489, %rd1490;
	shf.l.wrap.b32 	%r893, %r887, %r888, 25;
	shf.l.wrap.b32 	%r894, %r888, %r887, 25;
	mov.b64 	%rd1492, {%r894, %r893};
	xor.b64  	%rd1493, %rd1491, %rd1492;
	and.b64  	%rd1494, %rd1462, %rd1425;
	or.b64  	%rd1495, %rd1462, %rd1425;
	and.b64  	%rd1496, %rd1495, %rd1388;
	or.b64  	%rd1497, %rd1496, %rd1494;
	add.s64 	%rd1498, %rd1497, %rd1493;
	add.s64 	%rd1499, %rd1498, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1438;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 19;
	shf.r.wrap.b32 	%r898, %r895, %r896, 19;
	mov.b64 	%rd1500, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 3;
	shf.l.wrap.b32 	%r900, %r896, %r895, 3;
	mov.b64 	%rd1501, {%r900, %r899};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	shr.u64 	%rd1503, %rd1438, 6;
	xor.b64  	%rd1504, %rd1502, %rd1503;
	shf.r.wrap.b32 	%r901, %r542, %r541, 1;
	shf.r.wrap.b32 	%r902, %r541, %r542, 1;
	mov.b64 	%rd1505, {%r902, %r901};
	shf.r.wrap.b32 	%r903, %r542, %r541, 8;
	shf.r.wrap.b32 	%r904, %r541, %r542, 8;
	mov.b64 	%rd1506, {%r904, %r903};
	xor.b64  	%rd1507, %rd1505, %rd1506;
	shr.u64 	%rd1508, %rd957, 7;
	xor.b64  	%rd1509, %rd1507, %rd1508;
	add.s64 	%rd1510, %rd1509, %rd920;
	add.s64 	%rd1511, %rd1510, %rd1253;
	add.s64 	%rd1512, %rd1511, %rd1504;
	add.s64 	%rd1513, %rd1512, %rd1377;
	xor.b64  	%rd1514, %rd1451, %rd1414;
	and.b64  	%rd1515, %rd1488, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1414;
	add.s64 	%rd1517, %rd1513, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r905,%dummy}, %rd1488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r906}, %rd1488;
	}
	shf.r.wrap.b32 	%r907, %r906, %r905, 14;
	shf.r.wrap.b32 	%r908, %r905, %r906, 14;
	mov.b64 	%rd1518, {%r908, %r907};
	shf.r.wrap.b32 	%r909, %r906, %r905, 18;
	shf.r.wrap.b32 	%r910, %r905, %r906, 18;
	mov.b64 	%rd1519, {%r910, %r909};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	shf.l.wrap.b32 	%r911, %r905, %r906, 23;
	shf.l.wrap.b32 	%r912, %r906, %r905, 23;
	mov.b64 	%rd1521, {%r912, %r911};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	add.s64 	%rd1523, %rd1517, %rd1522;
	add.s64 	%rd1524, %rd1523, 5560940570517711597;
	add.s64 	%rd1525, %rd1524, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1499;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 28;
	shf.r.wrap.b32 	%r916, %r913, %r914, 28;
	mov.b64 	%rd1526, {%r916, %r915};
	shf.l.wrap.b32 	%r917, %r913, %r914, 30;
	shf.l.wrap.b32 	%r918, %r914, %r913, 30;
	mov.b64 	%rd1527, {%r918, %r917};
	xor.b64  	%rd1528, %rd1526, %rd1527;
	shf.l.wrap.b32 	%r919, %r913, %r914, 25;
	shf.l.wrap.b32 	%r920, %r914, %r913, 25;
	mov.b64 	%rd1529, {%r920, %r919};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	and.b64  	%rd1531, %rd1499, %rd1462;
	or.b64  	%rd1532, %rd1499, %rd1462;
	and.b64  	%rd1533, %rd1532, %rd1425;
	or.b64  	%rd1534, %rd1533, %rd1531;
	add.s64 	%rd1535, %rd1534, %rd1530;
	add.s64 	%rd1536, %rd1535, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r921,%dummy}, %rd1475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r922}, %rd1475;
	}
	shf.r.wrap.b32 	%r923, %r922, %r921, 19;
	shf.r.wrap.b32 	%r924, %r921, %r922, 19;
	mov.b64 	%rd1537, {%r924, %r923};
	shf.l.wrap.b32 	%r925, %r921, %r922, 3;
	shf.l.wrap.b32 	%r926, %r922, %r921, 3;
	mov.b64 	%rd1538, {%r926, %r925};
	xor.b64  	%rd1539, %rd1537, %rd1538;
	shr.u64 	%rd1540, %rd1475, 6;
	xor.b64  	%rd1541, %rd1539, %rd1540;
	shf.r.wrap.b32 	%r927, %r570, %r569, 1;
	shf.r.wrap.b32 	%r928, %r569, %r570, 1;
	mov.b64 	%rd1542, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r570, %r569, 8;
	shf.r.wrap.b32 	%r930, %r569, %r570, 8;
	mov.b64 	%rd1543, {%r930, %r929};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	shr.u64 	%rd1545, %rd994, 7;
	xor.b64  	%rd1546, %rd1544, %rd1545;
	add.s64 	%rd1547, %rd1546, %rd957;
	add.s64 	%rd1548, %rd1547, %rd1290;
	add.s64 	%rd1549, %rd1548, %rd1541;
	add.s64 	%rd1550, %rd1549, %rd1414;
	xor.b64  	%rd1551, %rd1488, %rd1451;
	and.b64  	%rd1552, %rd1525, %rd1551;
	xor.b64  	%rd1553, %rd1552, %rd1451;
	add.s64 	%rd1554, %rd1550, %rd1553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r931,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd1525;
	}
	shf.r.wrap.b32 	%r933, %r932, %r931, 14;
	shf.r.wrap.b32 	%r934, %r931, %r932, 14;
	mov.b64 	%rd1555, {%r934, %r933};
	shf.r.wrap.b32 	%r935, %r932, %r931, 18;
	shf.r.wrap.b32 	%r936, %r931, %r932, 18;
	mov.b64 	%rd1556, {%r936, %r935};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shf.l.wrap.b32 	%r937, %r931, %r932, 23;
	shf.l.wrap.b32 	%r938, %r932, %r931, 23;
	mov.b64 	%rd1558, {%r938, %r937};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	add.s64 	%rd1560, %rd1554, %rd1559;
	add.s64 	%rd1561, %rd1560, 5996557281743188959;
	add.s64 	%rd1562, %rd1561, %rd1425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd1536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd1536;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 28;
	shf.r.wrap.b32 	%r942, %r939, %r940, 28;
	mov.b64 	%rd1563, {%r942, %r941};
	shf.l.wrap.b32 	%r943, %r939, %r940, 30;
	shf.l.wrap.b32 	%r944, %r940, %r939, 30;
	mov.b64 	%rd1564, {%r944, %r943};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	shf.l.wrap.b32 	%r945, %r939, %r940, 25;
	shf.l.wrap.b32 	%r946, %r940, %r939, 25;
	mov.b64 	%rd1566, {%r946, %r945};
	xor.b64  	%rd1567, %rd1565, %rd1566;
	and.b64  	%rd1568, %rd1536, %rd1499;
	or.b64  	%rd1569, %rd1536, %rd1499;
	and.b64  	%rd1570, %rd1569, %rd1462;
	or.b64  	%rd1571, %rd1570, %rd1568;
	add.s64 	%rd1572, %rd1571, %rd1567;
	add.s64 	%rd1573, %rd1572, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd1512;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 19;
	shf.r.wrap.b32 	%r950, %r947, %r948, 19;
	mov.b64 	%rd1574, {%r950, %r949};
	shf.l.wrap.b32 	%r951, %r947, %r948, 3;
	shf.l.wrap.b32 	%r952, %r948, %r947, 3;
	mov.b64 	%rd1575, {%r952, %r951};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	shr.u64 	%rd1577, %rd1512, 6;
	xor.b64  	%rd1578, %rd1576, %rd1577;
	shf.r.wrap.b32 	%r953, %r598, %r597, 1;
	shf.r.wrap.b32 	%r954, %r597, %r598, 1;
	mov.b64 	%rd1579, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r598, %r597, 8;
	shf.r.wrap.b32 	%r956, %r597, %r598, 8;
	mov.b64 	%rd1580, {%r956, %r955};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	shr.u64 	%rd1582, %rd1031, 7;
	xor.b64  	%rd1583, %rd1581, %rd1582;
	add.s64 	%rd1584, %rd1583, %rd994;
	add.s64 	%rd1585, %rd1584, %rd1327;
	add.s64 	%rd1586, %rd1585, %rd1578;
	add.s64 	%rd1587, %rd1586, %rd1451;
	xor.b64  	%rd1588, %rd1525, %rd1488;
	and.b64  	%rd1589, %rd1562, %rd1588;
	xor.b64  	%rd1590, %rd1589, %rd1488;
	add.s64 	%rd1591, %rd1587, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1562;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 14;
	shf.r.wrap.b32 	%r960, %r957, %r958, 14;
	mov.b64 	%rd1592, {%r960, %r959};
	shf.r.wrap.b32 	%r961, %r958, %r957, 18;
	shf.r.wrap.b32 	%r962, %r957, %r958, 18;
	mov.b64 	%rd1593, {%r962, %r961};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	shf.l.wrap.b32 	%r963, %r957, %r958, 23;
	shf.l.wrap.b32 	%r964, %r958, %r957, 23;
	mov.b64 	%rd1595, {%r964, %r963};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	add.s64 	%rd1597, %rd1591, %rd1596;
	add.s64 	%rd1598, %rd1597, 7280758554555802590;
	add.s64 	%rd1599, %rd1598, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1573;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 28;
	shf.r.wrap.b32 	%r968, %r965, %r966, 28;
	mov.b64 	%rd1600, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 30;
	shf.l.wrap.b32 	%r970, %r966, %r965, 30;
	mov.b64 	%rd1601, {%r970, %r969};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	shf.l.wrap.b32 	%r971, %r965, %r966, 25;
	shf.l.wrap.b32 	%r972, %r966, %r965, 25;
	mov.b64 	%rd1603, {%r972, %r971};
	xor.b64  	%rd1604, %rd1602, %rd1603;
	and.b64  	%rd1605, %rd1573, %rd1536;
	or.b64  	%rd1606, %rd1573, %rd1536;
	and.b64  	%rd1607, %rd1606, %rd1499;
	or.b64  	%rd1608, %rd1607, %rd1605;
	add.s64 	%rd1609, %rd1608, %rd1604;
	add.s64 	%rd1610, %rd1609, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1549;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 19;
	shf.r.wrap.b32 	%r976, %r973, %r974, 19;
	mov.b64 	%rd1611, {%r976, %r975};
	shf.l.wrap.b32 	%r977, %r973, %r974, 3;
	shf.l.wrap.b32 	%r978, %r974, %r973, 3;
	mov.b64 	%rd1612, {%r978, %r977};
	xor.b64  	%rd1613, %rd1611, %rd1612;
	shr.u64 	%rd1614, %rd1549, 6;
	xor.b64  	%rd1615, %rd1613, %rd1614;
	shf.r.wrap.b32 	%r979, %r626, %r625, 1;
	shf.r.wrap.b32 	%r980, %r625, %r626, 1;
	mov.b64 	%rd1616, {%r980, %r979};
	shf.r.wrap.b32 	%r981, %r626, %r625, 8;
	shf.r.wrap.b32 	%r982, %r625, %r626, 8;
	mov.b64 	%rd1617, {%r982, %r981};
	xor.b64  	%rd1618, %rd1616, %rd1617;
	shr.u64 	%rd1619, %rd1068, 7;
	xor.b64  	%rd1620, %rd1618, %rd1619;
	add.s64 	%rd1621, %rd1620, %rd1031;
	add.s64 	%rd1622, %rd1621, %rd1364;
	add.s64 	%rd1623, %rd1622, %rd1615;
	add.s64 	%rd1624, %rd1623, %rd1488;
	xor.b64  	%rd1625, %rd1562, %rd1525;
	and.b64  	%rd1626, %rd1599, %rd1625;
	xor.b64  	%rd1627, %rd1626, %rd1525;
	add.s64 	%rd1628, %rd1624, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1599;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 14;
	shf.r.wrap.b32 	%r986, %r983, %r984, 14;
	mov.b64 	%rd1629, {%r986, %r985};
	shf.r.wrap.b32 	%r987, %r984, %r983, 18;
	shf.r.wrap.b32 	%r988, %r983, %r984, 18;
	mov.b64 	%rd1630, {%r988, %r987};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	shf.l.wrap.b32 	%r989, %r983, %r984, 23;
	shf.l.wrap.b32 	%r990, %r984, %r983, 23;
	mov.b64 	%rd1632, {%r990, %r989};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	add.s64 	%rd1634, %rd1628, %rd1633;
	add.s64 	%rd1635, %rd1634, 8532644243296465576;
	add.s64 	%rd1636, %rd1635, %rd1499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1610;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 28;
	shf.r.wrap.b32 	%r994, %r991, %r992, 28;
	mov.b64 	%rd1637, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 30;
	shf.l.wrap.b32 	%r996, %r992, %r991, 30;
	mov.b64 	%rd1638, {%r996, %r995};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	shf.l.wrap.b32 	%r997, %r991, %r992, 25;
	shf.l.wrap.b32 	%r998, %r992, %r991, 25;
	mov.b64 	%rd1640, {%r998, %r997};
	xor.b64  	%rd1641, %rd1639, %rd1640;
	and.b64  	%rd1642, %rd1610, %rd1573;
	or.b64  	%rd1643, %rd1610, %rd1573;
	and.b64  	%rd1644, %rd1643, %rd1536;
	or.b64  	%rd1645, %rd1644, %rd1642;
	add.s64 	%rd1646, %rd1645, %rd1641;
	add.s64 	%rd1647, %rd1646, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1586;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 19;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 19;
	mov.b64 	%rd1648, {%r1002, %r1001};
	shf.l.wrap.b32 	%r1003, %r999, %r1000, 3;
	shf.l.wrap.b32 	%r1004, %r1000, %r999, 3;
	mov.b64 	%rd1649, {%r1004, %r1003};
	xor.b64  	%rd1650, %rd1648, %rd1649;
	shr.u64 	%rd1651, %rd1586, 6;
	xor.b64  	%rd1652, %rd1650, %rd1651;
	shf.r.wrap.b32 	%r1005, %r654, %r653, 1;
	shf.r.wrap.b32 	%r1006, %r653, %r654, 1;
	mov.b64 	%rd1653, {%r1006, %r1005};
	shf.r.wrap.b32 	%r1007, %r654, %r653, 8;
	shf.r.wrap.b32 	%r1008, %r653, %r654, 8;
	mov.b64 	%rd1654, {%r1008, %r1007};
	xor.b64  	%rd1655, %rd1653, %rd1654;
	shr.u64 	%rd1656, %rd1105, 7;
	xor.b64  	%rd1657, %rd1655, %rd1656;
	add.s64 	%rd1658, %rd1657, %rd1068;
	add.s64 	%rd1659, %rd1658, %rd1401;
	add.s64 	%rd1660, %rd1659, %rd1652;
	add.s64 	%rd1661, %rd1660, %rd1525;
	xor.b64  	%rd1662, %rd1599, %rd1562;
	and.b64  	%rd1663, %rd1636, %rd1662;
	xor.b64  	%rd1664, %rd1663, %rd1562;
	add.s64 	%rd1665, %rd1661, %rd1664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd1636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd1636;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 14;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 14;
	mov.b64 	%rd1666, {%r1012, %r1011};
	shf.r.wrap.b32 	%r1013, %r1010, %r1009, 18;
	shf.r.wrap.b32 	%r1014, %r1009, %r1010, 18;
	mov.b64 	%rd1667, {%r1014, %r1013};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	shf.l.wrap.b32 	%r1015, %r1009, %r1010, 23;
	shf.l.wrap.b32 	%r1016, %r1010, %r1009, 23;
	mov.b64 	%rd1669, {%r1016, %r1015};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	add.s64 	%rd1671, %rd1665, %rd1670;
	add.s64 	%rd1672, %rd1671, -9096487096722542874;
	add.s64 	%rd1673, %rd1672, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd1647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd1647;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 28;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 28;
	mov.b64 	%rd1674, {%r1020, %r1019};
	shf.l.wrap.b32 	%r1021, %r1017, %r1018, 30;
	shf.l.wrap.b32 	%r1022, %r1018, %r1017, 30;
	mov.b64 	%rd1675, {%r1022, %r1021};
	xor.b64  	%rd1676, %rd1674, %rd1675;
	shf.l.wrap.b32 	%r1023, %r1017, %r1018, 25;
	shf.l.wrap.b32 	%r1024, %r1018, %r1017, 25;
	mov.b64 	%rd1677, {%r1024, %r1023};
	xor.b64  	%rd1678, %rd1676, %rd1677;
	and.b64  	%rd1679, %rd1647, %rd1610;
	or.b64  	%rd1680, %rd1647, %rd1610;
	and.b64  	%rd1681, %rd1680, %rd1573;
	or.b64  	%rd1682, %rd1681, %rd1679;
	add.s64 	%rd1683, %rd1682, %rd1678;
	add.s64 	%rd1684, %rd1683, %rd1672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd1623;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 19;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 19;
	mov.b64 	%rd1685, {%r1028, %r1027};
	shf.l.wrap.b32 	%r1029, %r1025, %r1026, 3;
	shf.l.wrap.b32 	%r1030, %r1026, %r1025, 3;
	mov.b64 	%rd1686, {%r1030, %r1029};
	xor.b64  	%rd1687, %rd1685, %rd1686;
	shr.u64 	%rd1688, %rd1623, 6;
	xor.b64  	%rd1689, %rd1687, %rd1688;
	shf.r.wrap.b32 	%r1031, %r682, %r681, 1;
	shf.r.wrap.b32 	%r1032, %r681, %r682, 1;
	mov.b64 	%rd1690, {%r1032, %r1031};
	shf.r.wrap.b32 	%r1033, %r682, %r681, 8;
	shf.r.wrap.b32 	%r1034, %r681, %r682, 8;
	mov.b64 	%rd1691, {%r1034, %r1033};
	xor.b64  	%rd1692, %rd1690, %rd1691;
	shr.u64 	%rd1693, %rd1142, 7;
	xor.b64  	%rd1694, %rd1692, %rd1693;
	add.s64 	%rd1695, %rd1694, %rd1105;
	add.s64 	%rd1696, %rd1695, %rd1438;
	add.s64 	%rd1697, %rd1696, %rd1689;
	add.s64 	%rd1698, %rd1697, %rd1562;
	xor.b64  	%rd1699, %rd1636, %rd1599;
	and.b64  	%rd1700, %rd1673, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1599;
	add.s64 	%rd1702, %rd1698, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd1673;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 14;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 14;
	mov.b64 	%rd1703, {%r1038, %r1037};
	shf.r.wrap.b32 	%r1039, %r1036, %r1035, 18;
	shf.r.wrap.b32 	%r1040, %r1035, %r1036, 18;
	mov.b64 	%rd1704, {%r1040, %r1039};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	shf.l.wrap.b32 	%r1041, %r1035, %r1036, 23;
	shf.l.wrap.b32 	%r1042, %r1036, %r1035, 23;
	mov.b64 	%rd1706, {%r1042, %r1041};
	xor.b64  	%rd1707, %rd1705, %rd1706;
	add.s64 	%rd1708, %rd1702, %rd1707;
	add.s64 	%rd1709, %rd1708, -7894198246740708037;
	add.s64 	%rd1710, %rd1709, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd1684;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 28;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 28;
	mov.b64 	%rd1711, {%r1046, %r1045};
	shf.l.wrap.b32 	%r1047, %r1043, %r1044, 30;
	shf.l.wrap.b32 	%r1048, %r1044, %r1043, 30;
	mov.b64 	%rd1712, {%r1048, %r1047};
	xor.b64  	%rd1713, %rd1711, %rd1712;
	shf.l.wrap.b32 	%r1049, %r1043, %r1044, 25;
	shf.l.wrap.b32 	%r1050, %r1044, %r1043, 25;
	mov.b64 	%rd1714, {%r1050, %r1049};
	xor.b64  	%rd1715, %rd1713, %rd1714;
	and.b64  	%rd1716, %rd1684, %rd1647;
	or.b64  	%rd1717, %rd1684, %rd1647;
	and.b64  	%rd1718, %rd1717, %rd1610;
	or.b64  	%rd1719, %rd1718, %rd1716;
	add.s64 	%rd1720, %rd1719, %rd1715;
	add.s64 	%rd1721, %rd1720, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd1660;
	}
	shf.r.wrap.b32 	%r1053, %r1052, %r1051, 19;
	shf.r.wrap.b32 	%r1054, %r1051, %r1052, 19;
	mov.b64 	%rd1722, {%r1054, %r1053};
	shf.l.wrap.b32 	%r1055, %r1051, %r1052, 3;
	shf.l.wrap.b32 	%r1056, %r1052, %r1051, 3;
	mov.b64 	%rd1723, {%r1056, %r1055};
	xor.b64  	%rd1724, %rd1722, %rd1723;
	shr.u64 	%rd1725, %rd1660, 6;
	xor.b64  	%rd1726, %rd1724, %rd1725;
	shf.r.wrap.b32 	%r1057, %r710, %r709, 1;
	shf.r.wrap.b32 	%r1058, %r709, %r710, 1;
	mov.b64 	%rd1727, {%r1058, %r1057};
	shf.r.wrap.b32 	%r1059, %r710, %r709, 8;
	shf.r.wrap.b32 	%r1060, %r709, %r710, 8;
	mov.b64 	%rd1728, {%r1060, %r1059};
	xor.b64  	%rd1729, %rd1727, %rd1728;
	shr.u64 	%rd1730, %rd1179, 7;
	xor.b64  	%rd1731, %rd1729, %rd1730;
	add.s64 	%rd1732, %rd1731, %rd1142;
	add.s64 	%rd1733, %rd1732, %rd1475;
	add.s64 	%rd1734, %rd1733, %rd1726;
	add.s64 	%rd1735, %rd1734, %rd1599;
	xor.b64  	%rd1736, %rd1673, %rd1636;
	and.b64  	%rd1737, %rd1710, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1636;
	add.s64 	%rd1739, %rd1735, %rd1738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd1710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd1710;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 14;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 14;
	mov.b64 	%rd1740, {%r1064, %r1063};
	shf.r.wrap.b32 	%r1065, %r1062, %r1061, 18;
	shf.r.wrap.b32 	%r1066, %r1061, %r1062, 18;
	mov.b64 	%rd1741, {%r1066, %r1065};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 23;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 23;
	mov.b64 	%rd1743, {%r1068, %r1067};
	xor.b64  	%rd1744, %rd1742, %rd1743;
	add.s64 	%rd1745, %rd1739, %rd1744;
	add.s64 	%rd1746, %rd1745, -6719396339535248540;
	add.s64 	%rd1747, %rd1746, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1721;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 28;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 28;
	mov.b64 	%rd1748, {%r1072, %r1071};
	shf.l.wrap.b32 	%r1073, %r1069, %r1070, 30;
	shf.l.wrap.b32 	%r1074, %r1070, %r1069, 30;
	mov.b64 	%rd1749, {%r1074, %r1073};
	xor.b64  	%rd1750, %rd1748, %rd1749;
	shf.l.wrap.b32 	%r1075, %r1069, %r1070, 25;
	shf.l.wrap.b32 	%r1076, %r1070, %r1069, 25;
	mov.b64 	%rd1751, {%r1076, %r1075};
	xor.b64  	%rd1752, %rd1750, %rd1751;
	and.b64  	%rd1753, %rd1721, %rd1684;
	or.b64  	%rd1754, %rd1721, %rd1684;
	and.b64  	%rd1755, %rd1754, %rd1647;
	or.b64  	%rd1756, %rd1755, %rd1753;
	add.s64 	%rd1757, %rd1756, %rd1752;
	add.s64 	%rd1758, %rd1757, %rd1746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd1697;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 19;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 19;
	mov.b64 	%rd1759, {%r1080, %r1079};
	shf.l.wrap.b32 	%r1081, %r1077, %r1078, 3;
	shf.l.wrap.b32 	%r1082, %r1078, %r1077, 3;
	mov.b64 	%rd1760, {%r1082, %r1081};
	xor.b64  	%rd1761, %rd1759, %rd1760;
	shr.u64 	%rd1762, %rd1697, 6;
	xor.b64  	%rd1763, %rd1761, %rd1762;
	shf.r.wrap.b32 	%r1083, %r738, %r737, 1;
	shf.r.wrap.b32 	%r1084, %r737, %r738, 1;
	mov.b64 	%rd1764, {%r1084, %r1083};
	shf.r.wrap.b32 	%r1085, %r738, %r737, 8;
	shf.r.wrap.b32 	%r1086, %r737, %r738, 8;
	mov.b64 	%rd1765, {%r1086, %r1085};
	xor.b64  	%rd1766, %rd1764, %rd1765;
	shr.u64 	%rd1767, %rd1216, 7;
	xor.b64  	%rd1768, %rd1766, %rd1767;
	add.s64 	%rd1769, %rd1768, %rd1179;
	add.s64 	%rd1770, %rd1769, %rd1512;
	add.s64 	%rd1771, %rd1770, %rd1763;
	add.s64 	%rd1772, %rd1771, %rd1636;
	xor.b64  	%rd1773, %rd1710, %rd1673;
	and.b64  	%rd1774, %rd1747, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1673;
	add.s64 	%rd1776, %rd1772, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1747;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 14;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 14;
	mov.b64 	%rd1777, {%r1090, %r1089};
	shf.r.wrap.b32 	%r1091, %r1088, %r1087, 18;
	shf.r.wrap.b32 	%r1092, %r1087, %r1088, 18;
	mov.b64 	%rd1778, {%r1092, %r1091};
	xor.b64  	%rd1779, %rd1777, %rd1778;
	shf.l.wrap.b32 	%r1093, %r1087, %r1088, 23;
	shf.l.wrap.b32 	%r1094, %r1088, %r1087, 23;
	mov.b64 	%rd1780, {%r1094, %r1093};
	xor.b64  	%rd1781, %rd1779, %rd1780;
	add.s64 	%rd1782, %rd1776, %rd1781;
	add.s64 	%rd1783, %rd1782, -6333637450476146687;
	add.s64 	%rd1784, %rd1783, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1758;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 28;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 28;
	mov.b64 	%rd1785, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 30;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 30;
	mov.b64 	%rd1786, {%r1100, %r1099};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	shf.l.wrap.b32 	%r1101, %r1095, %r1096, 25;
	shf.l.wrap.b32 	%r1102, %r1096, %r1095, 25;
	mov.b64 	%rd1788, {%r1102, %r1101};
	xor.b64  	%rd1789, %rd1787, %rd1788;
	and.b64  	%rd1790, %rd1758, %rd1721;
	or.b64  	%rd1791, %rd1758, %rd1721;
	and.b64  	%rd1792, %rd1791, %rd1684;
	or.b64  	%rd1793, %rd1792, %rd1790;
	add.s64 	%rd1794, %rd1793, %rd1789;
	add.s64 	%rd1795, %rd1794, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1103,%dummy}, %rd1734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd1734;
	}
	shf.r.wrap.b32 	%r1105, %r1104, %r1103, 19;
	shf.r.wrap.b32 	%r1106, %r1103, %r1104, 19;
	mov.b64 	%rd1796, {%r1106, %r1105};
	shf.l.wrap.b32 	%r1107, %r1103, %r1104, 3;
	shf.l.wrap.b32 	%r1108, %r1104, %r1103, 3;
	mov.b64 	%rd1797, {%r1108, %r1107};
	xor.b64  	%rd1798, %rd1796, %rd1797;
	shr.u64 	%rd1799, %rd1734, 6;
	xor.b64  	%rd1800, %rd1798, %rd1799;
	shf.r.wrap.b32 	%r1109, %r766, %r765, 1;
	shf.r.wrap.b32 	%r1110, %r765, %r766, 1;
	mov.b64 	%rd1801, {%r1110, %r1109};
	shf.r.wrap.b32 	%r1111, %r766, %r765, 8;
	shf.r.wrap.b32 	%r1112, %r765, %r766, 8;
	mov.b64 	%rd1802, {%r1112, %r1111};
	xor.b64  	%rd1803, %rd1801, %rd1802;
	shr.u64 	%rd1804, %rd1253, 7;
	xor.b64  	%rd1805, %rd1803, %rd1804;
	add.s64 	%rd1806, %rd1805, %rd1216;
	add.s64 	%rd1807, %rd1806, %rd1549;
	add.s64 	%rd1808, %rd1807, %rd1800;
	add.s64 	%rd1809, %rd1808, %rd1673;
	xor.b64  	%rd1810, %rd1747, %rd1710;
	and.b64  	%rd1811, %rd1784, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1710;
	add.s64 	%rd1813, %rd1809, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd1784;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 14;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 14;
	mov.b64 	%rd1814, {%r1116, %r1115};
	shf.r.wrap.b32 	%r1117, %r1114, %r1113, 18;
	shf.r.wrap.b32 	%r1118, %r1113, %r1114, 18;
	mov.b64 	%rd1815, {%r1118, %r1117};
	xor.b64  	%rd1816, %rd1814, %rd1815;
	shf.l.wrap.b32 	%r1119, %r1113, %r1114, 23;
	shf.l.wrap.b32 	%r1120, %r1114, %r1113, 23;
	mov.b64 	%rd1817, {%r1120, %r1119};
	xor.b64  	%rd1818, %rd1816, %rd1817;
	add.s64 	%rd1819, %rd1813, %rd1818;
	add.s64 	%rd1820, %rd1819, -4446306890439682159;
	add.s64 	%rd1821, %rd1820, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd1795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd1795;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 28;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 28;
	mov.b64 	%rd1822, {%r1124, %r1123};
	shf.l.wrap.b32 	%r1125, %r1121, %r1122, 30;
	shf.l.wrap.b32 	%r1126, %r1122, %r1121, 30;
	mov.b64 	%rd1823, {%r1126, %r1125};
	xor.b64  	%rd1824, %rd1822, %rd1823;
	shf.l.wrap.b32 	%r1127, %r1121, %r1122, 25;
	shf.l.wrap.b32 	%r1128, %r1122, %r1121, 25;
	mov.b64 	%rd1825, {%r1128, %r1127};
	xor.b64  	%rd1826, %rd1824, %rd1825;
	and.b64  	%rd1827, %rd1795, %rd1758;
	or.b64  	%rd1828, %rd1795, %rd1758;
	and.b64  	%rd1829, %rd1828, %rd1721;
	or.b64  	%rd1830, %rd1829, %rd1827;
	add.s64 	%rd1831, %rd1830, %rd1826;
	add.s64 	%rd1832, %rd1831, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd1771;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 19;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 19;
	mov.b64 	%rd1833, {%r1132, %r1131};
	shf.l.wrap.b32 	%r1133, %r1129, %r1130, 3;
	shf.l.wrap.b32 	%r1134, %r1130, %r1129, 3;
	mov.b64 	%rd1834, {%r1134, %r1133};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	shr.u64 	%rd1836, %rd1771, 6;
	xor.b64  	%rd1837, %rd1835, %rd1836;
	shf.r.wrap.b32 	%r1135, %r792, %r791, 1;
	shf.r.wrap.b32 	%r1136, %r791, %r792, 1;
	mov.b64 	%rd1838, {%r1136, %r1135};
	shf.r.wrap.b32 	%r1137, %r792, %r791, 8;
	shf.r.wrap.b32 	%r1138, %r791, %r792, 8;
	mov.b64 	%rd1839, {%r1138, %r1137};
	xor.b64  	%rd1840, %rd1838, %rd1839;
	shr.u64 	%rd1841, %rd1290, 7;
	xor.b64  	%rd1842, %rd1840, %rd1841;
	add.s64 	%rd1843, %rd1842, %rd1253;
	add.s64 	%rd1844, %rd1843, %rd1586;
	add.s64 	%rd1845, %rd1844, %rd1837;
	add.s64 	%rd1846, %rd1845, %rd1710;
	xor.b64  	%rd1847, %rd1784, %rd1747;
	and.b64  	%rd1848, %rd1821, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd1747;
	add.s64 	%rd1850, %rd1846, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd1821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1821;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 14;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 14;
	mov.b64 	%rd1851, {%r1142, %r1141};
	shf.r.wrap.b32 	%r1143, %r1140, %r1139, 18;
	shf.r.wrap.b32 	%r1144, %r1139, %r1140, 18;
	mov.b64 	%rd1852, {%r1144, %r1143};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	shf.l.wrap.b32 	%r1145, %r1139, %r1140, 23;
	shf.l.wrap.b32 	%r1146, %r1140, %r1139, 23;
	mov.b64 	%rd1854, {%r1146, %r1145};
	xor.b64  	%rd1855, %rd1853, %rd1854;
	add.s64 	%rd1856, %rd1850, %rd1855;
	add.s64 	%rd1857, %rd1856, -4076793802049405392;
	add.s64 	%rd1858, %rd1857, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd1832;
	}
	shf.r.wrap.b32 	%r1149, %r1148, %r1147, 28;
	shf.r.wrap.b32 	%r1150, %r1147, %r1148, 28;
	mov.b64 	%rd1859, {%r1150, %r1149};
	shf.l.wrap.b32 	%r1151, %r1147, %r1148, 30;
	shf.l.wrap.b32 	%r1152, %r1148, %r1147, 30;
	mov.b64 	%rd1860, {%r1152, %r1151};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	shf.l.wrap.b32 	%r1153, %r1147, %r1148, 25;
	shf.l.wrap.b32 	%r1154, %r1148, %r1147, 25;
	mov.b64 	%rd1862, {%r1154, %r1153};
	xor.b64  	%rd1863, %rd1861, %rd1862;
	and.b64  	%rd1864, %rd1832, %rd1795;
	or.b64  	%rd1865, %rd1832, %rd1795;
	and.b64  	%rd1866, %rd1865, %rd1758;
	or.b64  	%rd1867, %rd1866, %rd1864;
	add.s64 	%rd1868, %rd1867, %rd1863;
	add.s64 	%rd1869, %rd1868, %rd1857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd1808;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 19;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 19;
	mov.b64 	%rd1870, {%r1158, %r1157};
	shf.l.wrap.b32 	%r1159, %r1155, %r1156, 3;
	shf.l.wrap.b32 	%r1160, %r1156, %r1155, 3;
	mov.b64 	%rd1871, {%r1160, %r1159};
	xor.b64  	%rd1872, %rd1870, %rd1871;
	shr.u64 	%rd1873, %rd1808, 6;
	xor.b64  	%rd1874, %rd1872, %rd1873;
	shf.r.wrap.b32 	%r1161, %r818, %r817, 1;
	shf.r.wrap.b32 	%r1162, %r817, %r818, 1;
	mov.b64 	%rd1875, {%r1162, %r1161};
	shf.r.wrap.b32 	%r1163, %r818, %r817, 8;
	shf.r.wrap.b32 	%r1164, %r817, %r818, 8;
	mov.b64 	%rd1876, {%r1164, %r1163};
	xor.b64  	%rd1877, %rd1875, %rd1876;
	shr.u64 	%rd1878, %rd1327, 7;
	xor.b64  	%rd1879, %rd1877, %rd1878;
	add.s64 	%rd1880, %rd1879, %rd1290;
	add.s64 	%rd1881, %rd1880, %rd1623;
	add.s64 	%rd1882, %rd1881, %rd1874;
	add.s64 	%rd1883, %rd1882, %rd1747;
	xor.b64  	%rd1884, %rd1821, %rd1784;
	and.b64  	%rd1885, %rd1858, %rd1884;
	xor.b64  	%rd1886, %rd1885, %rd1784;
	add.s64 	%rd1887, %rd1883, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1858;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 14;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 14;
	mov.b64 	%rd1888, {%r1168, %r1167};
	shf.r.wrap.b32 	%r1169, %r1166, %r1165, 18;
	shf.r.wrap.b32 	%r1170, %r1165, %r1166, 18;
	mov.b64 	%rd1889, {%r1170, %r1169};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 23;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 23;
	mov.b64 	%rd1891, {%r1172, %r1171};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	add.s64 	%rd1893, %rd1887, %rd1892;
	add.s64 	%rd1894, %rd1893, -3345356375505022440;
	add.s64 	%rd1895, %rd1894, %rd1758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1869;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 28;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 28;
	mov.b64 	%rd1896, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 30;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 30;
	mov.b64 	%rd1897, {%r1178, %r1177};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 25;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 25;
	mov.b64 	%rd1899, {%r1180, %r1179};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	and.b64  	%rd1901, %rd1869, %rd1832;
	or.b64  	%rd1902, %rd1869, %rd1832;
	and.b64  	%rd1903, %rd1902, %rd1795;
	or.b64  	%rd1904, %rd1903, %rd1901;
	add.s64 	%rd1905, %rd1904, %rd1900;
	add.s64 	%rd1906, %rd1905, %rd1894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1845;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 19;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 19;
	mov.b64 	%rd1907, {%r1184, %r1183};
	shf.l.wrap.b32 	%r1185, %r1181, %r1182, 3;
	shf.l.wrap.b32 	%r1186, %r1182, %r1181, 3;
	mov.b64 	%rd1908, {%r1186, %r1185};
	xor.b64  	%rd1909, %rd1907, %rd1908;
	shr.u64 	%rd1910, %rd1845, 6;
	xor.b64  	%rd1911, %rd1909, %rd1910;
	shf.r.wrap.b32 	%r1187, %r844, %r843, 1;
	shf.r.wrap.b32 	%r1188, %r843, %r844, 1;
	mov.b64 	%rd1912, {%r1188, %r1187};
	shf.r.wrap.b32 	%r1189, %r844, %r843, 8;
	shf.r.wrap.b32 	%r1190, %r843, %r844, 8;
	mov.b64 	%rd1913, {%r1190, %r1189};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	shr.u64 	%rd1915, %rd1364, 7;
	xor.b64  	%rd1916, %rd1914, %rd1915;
	add.s64 	%rd1917, %rd1916, %rd1327;
	add.s64 	%rd1918, %rd1917, %rd1660;
	add.s64 	%rd1919, %rd1918, %rd1911;
	add.s64 	%rd1920, %rd1919, %rd1784;
	xor.b64  	%rd1921, %rd1858, %rd1821;
	and.b64  	%rd1922, %rd1895, %rd1921;
	xor.b64  	%rd1923, %rd1922, %rd1821;
	add.s64 	%rd1924, %rd1920, %rd1923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1895;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 14;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 14;
	mov.b64 	%rd1925, {%r1194, %r1193};
	shf.r.wrap.b32 	%r1195, %r1192, %r1191, 18;
	shf.r.wrap.b32 	%r1196, %r1191, %r1192, 18;
	mov.b64 	%rd1926, {%r1196, %r1195};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	shf.l.wrap.b32 	%r1197, %r1191, %r1192, 23;
	shf.l.wrap.b32 	%r1198, %r1192, %r1191, 23;
	mov.b64 	%rd1928, {%r1198, %r1197};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	add.s64 	%rd1930, %rd1924, %rd1929;
	add.s64 	%rd1931, %rd1930, -2983346525034927856;
	add.s64 	%rd1932, %rd1931, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1906;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 28;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 28;
	mov.b64 	%rd1933, {%r1202, %r1201};
	shf.l.wrap.b32 	%r1203, %r1199, %r1200, 30;
	shf.l.wrap.b32 	%r1204, %r1200, %r1199, 30;
	mov.b64 	%rd1934, {%r1204, %r1203};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	shf.l.wrap.b32 	%r1205, %r1199, %r1200, 25;
	shf.l.wrap.b32 	%r1206, %r1200, %r1199, 25;
	mov.b64 	%rd1936, {%r1206, %r1205};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	and.b64  	%rd1938, %rd1906, %rd1869;
	or.b64  	%rd1939, %rd1906, %rd1869;
	and.b64  	%rd1940, %rd1939, %rd1832;
	or.b64  	%rd1941, %rd1940, %rd1938;
	add.s64 	%rd1942, %rd1941, %rd1937;
	add.s64 	%rd1943, %rd1942, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1207,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1208}, %rd1882;
	}
	shf.r.wrap.b32 	%r1209, %r1208, %r1207, 19;
	shf.r.wrap.b32 	%r1210, %r1207, %r1208, 19;
	mov.b64 	%rd1944, {%r1210, %r1209};
	shf.l.wrap.b32 	%r1211, %r1207, %r1208, 3;
	shf.l.wrap.b32 	%r1212, %r1208, %r1207, 3;
	mov.b64 	%rd1945, {%r1212, %r1211};
	xor.b64  	%rd1946, %rd1944, %rd1945;
	shr.u64 	%rd1947, %rd1882, 6;
	xor.b64  	%rd1948, %rd1946, %rd1947;
	shf.r.wrap.b32 	%r1213, %r870, %r869, 1;
	shf.r.wrap.b32 	%r1214, %r869, %r870, 1;
	mov.b64 	%rd1949, {%r1214, %r1213};
	shf.r.wrap.b32 	%r1215, %r870, %r869, 8;
	shf.r.wrap.b32 	%r1216, %r869, %r870, 8;
	mov.b64 	%rd1950, {%r1216, %r1215};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	shr.u64 	%rd1952, %rd1401, 7;
	xor.b64  	%rd1953, %rd1951, %rd1952;
	add.s64 	%rd1954, %rd1953, %rd1364;
	add.s64 	%rd1955, %rd1954, %rd1697;
	add.s64 	%rd1956, %rd1955, %rd1948;
	add.s64 	%rd1957, %rd1956, %rd1821;
	xor.b64  	%rd1958, %rd1895, %rd1858;
	and.b64  	%rd1959, %rd1932, %rd1958;
	xor.b64  	%rd1960, %rd1959, %rd1858;
	add.s64 	%rd1961, %rd1957, %rd1960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd1932;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 14;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 14;
	mov.b64 	%rd1962, {%r1220, %r1219};
	shf.r.wrap.b32 	%r1221, %r1218, %r1217, 18;
	shf.r.wrap.b32 	%r1222, %r1217, %r1218, 18;
	mov.b64 	%rd1963, {%r1222, %r1221};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	shf.l.wrap.b32 	%r1223, %r1217, %r1218, 23;
	shf.l.wrap.b32 	%r1224, %r1218, %r1217, 23;
	mov.b64 	%rd1965, {%r1224, %r1223};
	xor.b64  	%rd1966, %rd1964, %rd1965;
	add.s64 	%rd1967, %rd1961, %rd1966;
	add.s64 	%rd1968, %rd1967, -860691631967231958;
	add.s64 	%rd1969, %rd1968, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1943;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 28;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 28;
	mov.b64 	%rd1970, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 30;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 30;
	mov.b64 	%rd1971, {%r1230, %r1229};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	shf.l.wrap.b32 	%r1231, %r1225, %r1226, 25;
	shf.l.wrap.b32 	%r1232, %r1226, %r1225, 25;
	mov.b64 	%rd1973, {%r1232, %r1231};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	and.b64  	%rd1975, %rd1943, %rd1906;
	or.b64  	%rd1976, %rd1943, %rd1906;
	and.b64  	%rd1977, %rd1976, %rd1869;
	or.b64  	%rd1978, %rd1977, %rd1975;
	add.s64 	%rd1979, %rd1978, %rd1974;
	add.s64 	%rd1980, %rd1979, %rd1968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd1919;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 19;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 19;
	mov.b64 	%rd1981, {%r1236, %r1235};
	shf.l.wrap.b32 	%r1237, %r1233, %r1234, 3;
	shf.l.wrap.b32 	%r1238, %r1234, %r1233, 3;
	mov.b64 	%rd1982, {%r1238, %r1237};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	shr.u64 	%rd1984, %rd1919, 6;
	xor.b64  	%rd1985, %rd1983, %rd1984;
	shf.r.wrap.b32 	%r1239, %r896, %r895, 1;
	shf.r.wrap.b32 	%r1240, %r895, %r896, 1;
	mov.b64 	%rd1986, {%r1240, %r1239};
	shf.r.wrap.b32 	%r1241, %r896, %r895, 8;
	shf.r.wrap.b32 	%r1242, %r895, %r896, 8;
	mov.b64 	%rd1987, {%r1242, %r1241};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	shr.u64 	%rd1989, %rd1438, 7;
	xor.b64  	%rd1990, %rd1988, %rd1989;
	add.s64 	%rd1991, %rd1990, %rd1401;
	add.s64 	%rd1992, %rd1991, %rd1734;
	add.s64 	%rd1993, %rd1992, %rd1985;
	add.s64 	%rd1994, %rd1993, %rd1858;
	xor.b64  	%rd1995, %rd1932, %rd1895;
	and.b64  	%rd1996, %rd1969, %rd1995;
	xor.b64  	%rd1997, %rd1996, %rd1895;
	add.s64 	%rd1998, %rd1994, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1243,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd1969;
	}
	shf.r.wrap.b32 	%r1245, %r1244, %r1243, 14;
	shf.r.wrap.b32 	%r1246, %r1243, %r1244, 14;
	mov.b64 	%rd1999, {%r1246, %r1245};
	shf.r.wrap.b32 	%r1247, %r1244, %r1243, 18;
	shf.r.wrap.b32 	%r1248, %r1243, %r1244, 18;
	mov.b64 	%rd2000, {%r1248, %r1247};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	shf.l.wrap.b32 	%r1249, %r1243, %r1244, 23;
	shf.l.wrap.b32 	%r1250, %r1244, %r1243, 23;
	mov.b64 	%rd2002, {%r1250, %r1249};
	xor.b64  	%rd2003, %rd2001, %rd2002;
	add.s64 	%rd2004, %rd1998, %rd2003;
	add.s64 	%rd2005, %rd2004, 1182934255886127544;
	add.s64 	%rd2006, %rd2005, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1251,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1252}, %rd1980;
	}
	shf.r.wrap.b32 	%r1253, %r1252, %r1251, 28;
	shf.r.wrap.b32 	%r1254, %r1251, %r1252, 28;
	mov.b64 	%rd2007, {%r1254, %r1253};
	shf.l.wrap.b32 	%r1255, %r1251, %r1252, 30;
	shf.l.wrap.b32 	%r1256, %r1252, %r1251, 30;
	mov.b64 	%rd2008, {%r1256, %r1255};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	shf.l.wrap.b32 	%r1257, %r1251, %r1252, 25;
	shf.l.wrap.b32 	%r1258, %r1252, %r1251, 25;
	mov.b64 	%rd2010, {%r1258, %r1257};
	xor.b64  	%rd2011, %rd2009, %rd2010;
	and.b64  	%rd2012, %rd1980, %rd1943;
	or.b64  	%rd2013, %rd1980, %rd1943;
	and.b64  	%rd2014, %rd2013, %rd1906;
	or.b64  	%rd2015, %rd2014, %rd2012;
	add.s64 	%rd2016, %rd2015, %rd2011;
	add.s64 	%rd2017, %rd2016, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1259,%dummy}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1260}, %rd1956;
	}
	shf.r.wrap.b32 	%r1261, %r1260, %r1259, 19;
	shf.r.wrap.b32 	%r1262, %r1259, %r1260, 19;
	mov.b64 	%rd2018, {%r1262, %r1261};
	shf.l.wrap.b32 	%r1263, %r1259, %r1260, 3;
	shf.l.wrap.b32 	%r1264, %r1260, %r1259, 3;
	mov.b64 	%rd2019, {%r1264, %r1263};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	shr.u64 	%rd2021, %rd1956, 6;
	xor.b64  	%rd2022, %rd2020, %rd2021;
	shf.r.wrap.b32 	%r1265, %r922, %r921, 1;
	shf.r.wrap.b32 	%r1266, %r921, %r922, 1;
	mov.b64 	%rd2023, {%r1266, %r1265};
	shf.r.wrap.b32 	%r1267, %r922, %r921, 8;
	shf.r.wrap.b32 	%r1268, %r921, %r922, 8;
	mov.b64 	%rd2024, {%r1268, %r1267};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	shr.u64 	%rd2026, %rd1475, 7;
	xor.b64  	%rd2027, %rd2025, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd1438;
	add.s64 	%rd2029, %rd2028, %rd1771;
	add.s64 	%rd2030, %rd2029, %rd2022;
	add.s64 	%rd2031, %rd2030, %rd1895;
	xor.b64  	%rd2032, %rd1969, %rd1932;
	and.b64  	%rd2033, %rd2006, %rd2032;
	xor.b64  	%rd2034, %rd2033, %rd1932;
	add.s64 	%rd2035, %rd2031, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd2006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd2006;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 14;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 14;
	mov.b64 	%rd2036, {%r1272, %r1271};
	shf.r.wrap.b32 	%r1273, %r1270, %r1269, 18;
	shf.r.wrap.b32 	%r1274, %r1269, %r1270, 18;
	mov.b64 	%rd2037, {%r1274, %r1273};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 23;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 23;
	mov.b64 	%rd2039, {%r1276, %r1275};
	xor.b64  	%rd2040, %rd2038, %rd2039;
	add.s64 	%rd2041, %rd2035, %rd2040;
	add.s64 	%rd2042, %rd2041, 1847814050463011016;
	add.s64 	%rd2043, %rd2042, %rd1906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd2017;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 28;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 28;
	mov.b64 	%rd2044, {%r1280, %r1279};
	shf.l.wrap.b32 	%r1281, %r1277, %r1278, 30;
	shf.l.wrap.b32 	%r1282, %r1278, %r1277, 30;
	mov.b64 	%rd2045, {%r1282, %r1281};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 25;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 25;
	mov.b64 	%rd2047, {%r1284, %r1283};
	xor.b64  	%rd2048, %rd2046, %rd2047;
	and.b64  	%rd2049, %rd2017, %rd1980;
	or.b64  	%rd2050, %rd2017, %rd1980;
	and.b64  	%rd2051, %rd2050, %rd1943;
	or.b64  	%rd2052, %rd2051, %rd2049;
	add.s64 	%rd2053, %rd2052, %rd2048;
	add.s64 	%rd2054, %rd2053, %rd2042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1993;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 19;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 19;
	mov.b64 	%rd2055, {%r1288, %r1287};
	shf.l.wrap.b32 	%r1289, %r1285, %r1286, 3;
	shf.l.wrap.b32 	%r1290, %r1286, %r1285, 3;
	mov.b64 	%rd2056, {%r1290, %r1289};
	xor.b64  	%rd2057, %rd2055, %rd2056;
	shr.u64 	%rd2058, %rd1993, 6;
	xor.b64  	%rd2059, %rd2057, %rd2058;
	shf.r.wrap.b32 	%r1291, %r948, %r947, 1;
	shf.r.wrap.b32 	%r1292, %r947, %r948, 1;
	mov.b64 	%rd2060, {%r1292, %r1291};
	shf.r.wrap.b32 	%r1293, %r948, %r947, 8;
	shf.r.wrap.b32 	%r1294, %r947, %r948, 8;
	mov.b64 	%rd2061, {%r1294, %r1293};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	shr.u64 	%rd2063, %rd1512, 7;
	xor.b64  	%rd2064, %rd2062, %rd2063;
	add.s64 	%rd2065, %rd2064, %rd1475;
	add.s64 	%rd2066, %rd2065, %rd1808;
	add.s64 	%rd2067, %rd2066, %rd2059;
	add.s64 	%rd2068, %rd2067, %rd1932;
	xor.b64  	%rd2069, %rd2006, %rd1969;
	and.b64  	%rd2070, %rd2043, %rd2069;
	xor.b64  	%rd2071, %rd2070, %rd1969;
	add.s64 	%rd2072, %rd2068, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd2043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd2043;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 14;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 14;
	mov.b64 	%rd2073, {%r1298, %r1297};
	shf.r.wrap.b32 	%r1299, %r1296, %r1295, 18;
	shf.r.wrap.b32 	%r1300, %r1295, %r1296, 18;
	mov.b64 	%rd2074, {%r1300, %r1299};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 23;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 23;
	mov.b64 	%rd2076, {%r1302, %r1301};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	add.s64 	%rd2078, %rd2072, %rd2077;
	add.s64 	%rd2079, %rd2078, 2177327727835720531;
	add.s64 	%rd2080, %rd2079, %rd1943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd2054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd2054;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 28;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 28;
	mov.b64 	%rd2081, {%r1306, %r1305};
	shf.l.wrap.b32 	%r1307, %r1303, %r1304, 30;
	shf.l.wrap.b32 	%r1308, %r1304, %r1303, 30;
	mov.b64 	%rd2082, {%r1308, %r1307};
	xor.b64  	%rd2083, %rd2081, %rd2082;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 25;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 25;
	mov.b64 	%rd2084, {%r1310, %r1309};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	and.b64  	%rd2086, %rd2054, %rd2017;
	or.b64  	%rd2087, %rd2054, %rd2017;
	and.b64  	%rd2088, %rd2087, %rd1980;
	or.b64  	%rd2089, %rd2088, %rd2086;
	add.s64 	%rd2090, %rd2089, %rd2085;
	add.s64 	%rd2091, %rd2090, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd2030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd2030;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 19;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 19;
	mov.b64 	%rd2092, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 3;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 3;
	mov.b64 	%rd2093, {%r1316, %r1315};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	shr.u64 	%rd2095, %rd2030, 6;
	xor.b64  	%rd2096, %rd2094, %rd2095;
	shf.r.wrap.b32 	%r1317, %r974, %r973, 1;
	shf.r.wrap.b32 	%r1318, %r973, %r974, 1;
	mov.b64 	%rd2097, {%r1318, %r1317};
	shf.r.wrap.b32 	%r1319, %r974, %r973, 8;
	shf.r.wrap.b32 	%r1320, %r973, %r974, 8;
	mov.b64 	%rd2098, {%r1320, %r1319};
	xor.b64  	%rd2099, %rd2097, %rd2098;
	shr.u64 	%rd2100, %rd1549, 7;
	xor.b64  	%rd2101, %rd2099, %rd2100;
	add.s64 	%rd2102, %rd2101, %rd1512;
	add.s64 	%rd2103, %rd2102, %rd1845;
	add.s64 	%rd2104, %rd2103, %rd2096;
	add.s64 	%rd2105, %rd2104, %rd1969;
	xor.b64  	%rd2106, %rd2043, %rd2006;
	and.b64  	%rd2107, %rd2080, %rd2106;
	xor.b64  	%rd2108, %rd2107, %rd2006;
	add.s64 	%rd2109, %rd2105, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1321,%dummy}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd2080;
	}
	shf.r.wrap.b32 	%r1323, %r1322, %r1321, 14;
	shf.r.wrap.b32 	%r1324, %r1321, %r1322, 14;
	mov.b64 	%rd2110, {%r1324, %r1323};
	shf.r.wrap.b32 	%r1325, %r1322, %r1321, 18;
	shf.r.wrap.b32 	%r1326, %r1321, %r1322, 18;
	mov.b64 	%rd2111, {%r1326, %r1325};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	shf.l.wrap.b32 	%r1327, %r1321, %r1322, 23;
	shf.l.wrap.b32 	%r1328, %r1322, %r1321, 23;
	mov.b64 	%rd2113, {%r1328, %r1327};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	add.s64 	%rd2115, %rd2109, %rd2114;
	add.s64 	%rd2116, %rd2115, 2830643537854262169;
	add.s64 	%rd2117, %rd2116, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd2091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd2091;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 28;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 28;
	mov.b64 	%rd2118, {%r1332, %r1331};
	shf.l.wrap.b32 	%r1333, %r1329, %r1330, 30;
	shf.l.wrap.b32 	%r1334, %r1330, %r1329, 30;
	mov.b64 	%rd2119, {%r1334, %r1333};
	xor.b64  	%rd2120, %rd2118, %rd2119;
	shf.l.wrap.b32 	%r1335, %r1329, %r1330, 25;
	shf.l.wrap.b32 	%r1336, %r1330, %r1329, 25;
	mov.b64 	%rd2121, {%r1336, %r1335};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	and.b64  	%rd2123, %rd2091, %rd2054;
	or.b64  	%rd2124, %rd2091, %rd2054;
	and.b64  	%rd2125, %rd2124, %rd2017;
	or.b64  	%rd2126, %rd2125, %rd2123;
	add.s64 	%rd2127, %rd2126, %rd2122;
	add.s64 	%rd2128, %rd2127, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd2067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd2067;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 19;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 19;
	mov.b64 	%rd2129, {%r1340, %r1339};
	shf.l.wrap.b32 	%r1341, %r1337, %r1338, 3;
	shf.l.wrap.b32 	%r1342, %r1338, %r1337, 3;
	mov.b64 	%rd2130, {%r1342, %r1341};
	xor.b64  	%rd2131, %rd2129, %rd2130;
	shr.u64 	%rd2132, %rd2067, 6;
	xor.b64  	%rd2133, %rd2131, %rd2132;
	shf.r.wrap.b32 	%r1343, %r1000, %r999, 1;
	shf.r.wrap.b32 	%r1344, %r999, %r1000, 1;
	mov.b64 	%rd2134, {%r1344, %r1343};
	shf.r.wrap.b32 	%r1345, %r1000, %r999, 8;
	shf.r.wrap.b32 	%r1346, %r999, %r1000, 8;
	mov.b64 	%rd2135, {%r1346, %r1345};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	shr.u64 	%rd2137, %rd1586, 7;
	xor.b64  	%rd2138, %rd2136, %rd2137;
	add.s64 	%rd2139, %rd2138, %rd1549;
	add.s64 	%rd2140, %rd2139, %rd1882;
	add.s64 	%rd2141, %rd2140, %rd2133;
	add.s64 	%rd2142, %rd2141, %rd2006;
	xor.b64  	%rd2143, %rd2080, %rd2043;
	and.b64  	%rd2144, %rd2117, %rd2143;
	xor.b64  	%rd2145, %rd2144, %rd2043;
	add.s64 	%rd2146, %rd2142, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1347,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1348}, %rd2117;
	}
	shf.r.wrap.b32 	%r1349, %r1348, %r1347, 14;
	shf.r.wrap.b32 	%r1350, %r1347, %r1348, 14;
	mov.b64 	%rd2147, {%r1350, %r1349};
	shf.r.wrap.b32 	%r1351, %r1348, %r1347, 18;
	shf.r.wrap.b32 	%r1352, %r1347, %r1348, 18;
	mov.b64 	%rd2148, {%r1352, %r1351};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	shf.l.wrap.b32 	%r1353, %r1347, %r1348, 23;
	shf.l.wrap.b32 	%r1354, %r1348, %r1347, 23;
	mov.b64 	%rd2150, {%r1354, %r1353};
	xor.b64  	%rd2151, %rd2149, %rd2150;
	add.s64 	%rd2152, %rd2146, %rd2151;
	add.s64 	%rd2153, %rd2152, 3796741975233480872;
	add.s64 	%rd2154, %rd2153, %rd2017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1355,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1356}, %rd2128;
	}
	shf.r.wrap.b32 	%r1357, %r1356, %r1355, 28;
	shf.r.wrap.b32 	%r1358, %r1355, %r1356, 28;
	mov.b64 	%rd2155, {%r1358, %r1357};
	shf.l.wrap.b32 	%r1359, %r1355, %r1356, 30;
	shf.l.wrap.b32 	%r1360, %r1356, %r1355, 30;
	mov.b64 	%rd2156, {%r1360, %r1359};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	shf.l.wrap.b32 	%r1361, %r1355, %r1356, 25;
	shf.l.wrap.b32 	%r1362, %r1356, %r1355, 25;
	mov.b64 	%rd2158, {%r1362, %r1361};
	xor.b64  	%rd2159, %rd2157, %rd2158;
	and.b64  	%rd2160, %rd2128, %rd2091;
	or.b64  	%rd2161, %rd2128, %rd2091;
	and.b64  	%rd2162, %rd2161, %rd2054;
	or.b64  	%rd2163, %rd2162, %rd2160;
	add.s64 	%rd2164, %rd2163, %rd2159;
	add.s64 	%rd2165, %rd2164, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd2104;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 19;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 19;
	mov.b64 	%rd2166, {%r1366, %r1365};
	shf.l.wrap.b32 	%r1367, %r1363, %r1364, 3;
	shf.l.wrap.b32 	%r1368, %r1364, %r1363, 3;
	mov.b64 	%rd2167, {%r1368, %r1367};
	xor.b64  	%rd2168, %rd2166, %rd2167;
	shr.u64 	%rd2169, %rd2104, 6;
	xor.b64  	%rd2170, %rd2168, %rd2169;
	shf.r.wrap.b32 	%r1369, %r1026, %r1025, 1;
	shf.r.wrap.b32 	%r1370, %r1025, %r1026, 1;
	mov.b64 	%rd2171, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r1026, %r1025, 8;
	shf.r.wrap.b32 	%r1372, %r1025, %r1026, 8;
	mov.b64 	%rd2172, {%r1372, %r1371};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	shr.u64 	%rd2174, %rd1623, 7;
	xor.b64  	%rd2175, %rd2173, %rd2174;
	add.s64 	%rd2176, %rd2175, %rd1586;
	add.s64 	%rd2177, %rd2176, %rd1919;
	add.s64 	%rd2178, %rd2177, %rd2170;
	add.s64 	%rd2179, %rd2178, %rd2043;
	xor.b64  	%rd2180, %rd2117, %rd2080;
	and.b64  	%rd2181, %rd2154, %rd2180;
	xor.b64  	%rd2182, %rd2181, %rd2080;
	add.s64 	%rd2183, %rd2179, %rd2182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd2154;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 14;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 14;
	mov.b64 	%rd2184, {%r1376, %r1375};
	shf.r.wrap.b32 	%r1377, %r1374, %r1373, 18;
	shf.r.wrap.b32 	%r1378, %r1373, %r1374, 18;
	mov.b64 	%rd2185, {%r1378, %r1377};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 23;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 23;
	mov.b64 	%rd2187, {%r1380, %r1379};
	xor.b64  	%rd2188, %rd2186, %rd2187;
	add.s64 	%rd2189, %rd2183, %rd2188;
	add.s64 	%rd2190, %rd2189, 4115178125766777443;
	add.s64 	%rd2191, %rd2190, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd2165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd2165;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 28;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 28;
	mov.b64 	%rd2192, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 30;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 30;
	mov.b64 	%rd2193, {%r1386, %r1385};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 25;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 25;
	mov.b64 	%rd2195, {%r1388, %r1387};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	and.b64  	%rd2197, %rd2165, %rd2128;
	or.b64  	%rd2198, %rd2165, %rd2128;
	and.b64  	%rd2199, %rd2198, %rd2091;
	or.b64  	%rd2200, %rd2199, %rd2197;
	add.s64 	%rd2201, %rd2200, %rd2196;
	add.s64 	%rd2202, %rd2201, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd2141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd2141;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 19;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 19;
	mov.b64 	%rd2203, {%r1392, %r1391};
	shf.l.wrap.b32 	%r1393, %r1389, %r1390, 3;
	shf.l.wrap.b32 	%r1394, %r1390, %r1389, 3;
	mov.b64 	%rd2204, {%r1394, %r1393};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	shr.u64 	%rd2206, %rd2141, 6;
	xor.b64  	%rd2207, %rd2205, %rd2206;
	shf.r.wrap.b32 	%r1395, %r1052, %r1051, 1;
	shf.r.wrap.b32 	%r1396, %r1051, %r1052, 1;
	mov.b64 	%rd2208, {%r1396, %r1395};
	shf.r.wrap.b32 	%r1397, %r1052, %r1051, 8;
	shf.r.wrap.b32 	%r1398, %r1051, %r1052, 8;
	mov.b64 	%rd2209, {%r1398, %r1397};
	xor.b64  	%rd2210, %rd2208, %rd2209;
	shr.u64 	%rd2211, %rd1660, 7;
	xor.b64  	%rd2212, %rd2210, %rd2211;
	add.s64 	%rd2213, %rd2212, %rd1623;
	add.s64 	%rd2214, %rd2213, %rd1956;
	add.s64 	%rd2215, %rd2214, %rd2207;
	add.s64 	%rd2216, %rd2215, %rd2080;
	xor.b64  	%rd2217, %rd2154, %rd2117;
	and.b64  	%rd2218, %rd2191, %rd2217;
	xor.b64  	%rd2219, %rd2218, %rd2117;
	add.s64 	%rd2220, %rd2216, %rd2219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2191;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 14;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 14;
	mov.b64 	%rd2221, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 18;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 18;
	mov.b64 	%rd2222, {%r1404, %r1403};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 23;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 23;
	mov.b64 	%rd2224, {%r1406, %r1405};
	xor.b64  	%rd2225, %rd2223, %rd2224;
	add.s64 	%rd2226, %rd2220, %rd2225;
	add.s64 	%rd2227, %rd2226, 5681478168544905931;
	add.s64 	%rd2228, %rd2227, %rd2091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2202;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 28;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 28;
	mov.b64 	%rd2229, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 30;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 30;
	mov.b64 	%rd2230, {%r1412, %r1411};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 25;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 25;
	mov.b64 	%rd2232, {%r1414, %r1413};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	and.b64  	%rd2234, %rd2202, %rd2165;
	or.b64  	%rd2235, %rd2202, %rd2165;
	and.b64  	%rd2236, %rd2235, %rd2128;
	or.b64  	%rd2237, %rd2236, %rd2234;
	add.s64 	%rd2238, %rd2237, %rd2233;
	add.s64 	%rd2239, %rd2238, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2178;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 19;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 19;
	mov.b64 	%rd2240, {%r1418, %r1417};
	shf.l.wrap.b32 	%r1419, %r1415, %r1416, 3;
	shf.l.wrap.b32 	%r1420, %r1416, %r1415, 3;
	mov.b64 	%rd2241, {%r1420, %r1419};
	xor.b64  	%rd2242, %rd2240, %rd2241;
	shr.u64 	%rd2243, %rd2178, 6;
	xor.b64  	%rd2244, %rd2242, %rd2243;
	shf.r.wrap.b32 	%r1421, %r1078, %r1077, 1;
	shf.r.wrap.b32 	%r1422, %r1077, %r1078, 1;
	mov.b64 	%rd2245, {%r1422, %r1421};
	shf.r.wrap.b32 	%r1423, %r1078, %r1077, 8;
	shf.r.wrap.b32 	%r1424, %r1077, %r1078, 8;
	mov.b64 	%rd2246, {%r1424, %r1423};
	xor.b64  	%rd2247, %rd2245, %rd2246;
	shr.u64 	%rd2248, %rd1697, 7;
	xor.b64  	%rd2249, %rd2247, %rd2248;
	add.s64 	%rd2250, %rd2249, %rd1660;
	add.s64 	%rd2251, %rd2250, %rd1993;
	add.s64 	%rd2252, %rd2251, %rd2244;
	add.s64 	%rd2253, %rd2252, %rd2117;
	xor.b64  	%rd2254, %rd2191, %rd2154;
	and.b64  	%rd2255, %rd2228, %rd2254;
	xor.b64  	%rd2256, %rd2255, %rd2154;
	add.s64 	%rd2257, %rd2253, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd2228;
	}
	shf.r.wrap.b32 	%r1427, %r1426, %r1425, 14;
	shf.r.wrap.b32 	%r1428, %r1425, %r1426, 14;
	mov.b64 	%rd2258, {%r1428, %r1427};
	shf.r.wrap.b32 	%r1429, %r1426, %r1425, 18;
	shf.r.wrap.b32 	%r1430, %r1425, %r1426, 18;
	mov.b64 	%rd2259, {%r1430, %r1429};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	shf.l.wrap.b32 	%r1431, %r1425, %r1426, 23;
	shf.l.wrap.b32 	%r1432, %r1426, %r1425, 23;
	mov.b64 	%rd2261, {%r1432, %r1431};
	xor.b64  	%rd2262, %rd2260, %rd2261;
	add.s64 	%rd2263, %rd2257, %rd2262;
	add.s64 	%rd2264, %rd2263, 6601373596472566643;
	add.s64 	%rd2265, %rd2264, %rd2128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd2239;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 28;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 28;
	mov.b64 	%rd2266, {%r1436, %r1435};
	shf.l.wrap.b32 	%r1437, %r1433, %r1434, 30;
	shf.l.wrap.b32 	%r1438, %r1434, %r1433, 30;
	mov.b64 	%rd2267, {%r1438, %r1437};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	shf.l.wrap.b32 	%r1439, %r1433, %r1434, 25;
	shf.l.wrap.b32 	%r1440, %r1434, %r1433, 25;
	mov.b64 	%rd2269, {%r1440, %r1439};
	xor.b64  	%rd2270, %rd2268, %rd2269;
	and.b64  	%rd2271, %rd2239, %rd2202;
	or.b64  	%rd2272, %rd2239, %rd2202;
	and.b64  	%rd2273, %rd2272, %rd2165;
	or.b64  	%rd2274, %rd2273, %rd2271;
	add.s64 	%rd2275, %rd2274, %rd2270;
	add.s64 	%rd2276, %rd2275, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd2215;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 19;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 19;
	mov.b64 	%rd2277, {%r1444, %r1443};
	shf.l.wrap.b32 	%r1445, %r1441, %r1442, 3;
	shf.l.wrap.b32 	%r1446, %r1442, %r1441, 3;
	mov.b64 	%rd2278, {%r1446, %r1445};
	xor.b64  	%rd2279, %rd2277, %rd2278;
	shr.u64 	%rd2280, %rd2215, 6;
	xor.b64  	%rd2281, %rd2279, %rd2280;
	shf.r.wrap.b32 	%r1447, %r1104, %r1103, 1;
	shf.r.wrap.b32 	%r1448, %r1103, %r1104, 1;
	mov.b64 	%rd2282, {%r1448, %r1447};
	shf.r.wrap.b32 	%r1449, %r1104, %r1103, 8;
	shf.r.wrap.b32 	%r1450, %r1103, %r1104, 8;
	mov.b64 	%rd2283, {%r1450, %r1449};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	shr.u64 	%rd2285, %rd1734, 7;
	xor.b64  	%rd2286, %rd2284, %rd2285;
	add.s64 	%rd2287, %rd2286, %rd1697;
	add.s64 	%rd2288, %rd2287, %rd2030;
	add.s64 	%rd2289, %rd2288, %rd2281;
	add.s64 	%rd2290, %rd2289, %rd2154;
	xor.b64  	%rd2291, %rd2228, %rd2191;
	and.b64  	%rd2292, %rd2265, %rd2291;
	xor.b64  	%rd2293, %rd2292, %rd2191;
	add.s64 	%rd2294, %rd2290, %rd2293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1451,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1452}, %rd2265;
	}
	shf.r.wrap.b32 	%r1453, %r1452, %r1451, 14;
	shf.r.wrap.b32 	%r1454, %r1451, %r1452, 14;
	mov.b64 	%rd2295, {%r1454, %r1453};
	shf.r.wrap.b32 	%r1455, %r1452, %r1451, 18;
	shf.r.wrap.b32 	%r1456, %r1451, %r1452, 18;
	mov.b64 	%rd2296, {%r1456, %r1455};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	shf.l.wrap.b32 	%r1457, %r1451, %r1452, 23;
	shf.l.wrap.b32 	%r1458, %r1452, %r1451, 23;
	mov.b64 	%rd2298, {%r1458, %r1457};
	xor.b64  	%rd2299, %rd2297, %rd2298;
	add.s64 	%rd2300, %rd2294, %rd2299;
	add.s64 	%rd2301, %rd2300, 7507060721942968483;
	add.s64 	%rd2302, %rd2301, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1459,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1460}, %rd2276;
	}
	shf.r.wrap.b32 	%r1461, %r1460, %r1459, 28;
	shf.r.wrap.b32 	%r1462, %r1459, %r1460, 28;
	mov.b64 	%rd2303, {%r1462, %r1461};
	shf.l.wrap.b32 	%r1463, %r1459, %r1460, 30;
	shf.l.wrap.b32 	%r1464, %r1460, %r1459, 30;
	mov.b64 	%rd2304, {%r1464, %r1463};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	shf.l.wrap.b32 	%r1465, %r1459, %r1460, 25;
	shf.l.wrap.b32 	%r1466, %r1460, %r1459, 25;
	mov.b64 	%rd2306, {%r1466, %r1465};
	xor.b64  	%rd2307, %rd2305, %rd2306;
	and.b64  	%rd2308, %rd2276, %rd2239;
	or.b64  	%rd2309, %rd2276, %rd2239;
	and.b64  	%rd2310, %rd2309, %rd2202;
	or.b64  	%rd2311, %rd2310, %rd2308;
	add.s64 	%rd2312, %rd2311, %rd2307;
	add.s64 	%rd2313, %rd2312, %rd2301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1467,%dummy}, %rd2252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1468}, %rd2252;
	}
	shf.r.wrap.b32 	%r1469, %r1468, %r1467, 19;
	shf.r.wrap.b32 	%r1470, %r1467, %r1468, 19;
	mov.b64 	%rd2314, {%r1470, %r1469};
	shf.l.wrap.b32 	%r1471, %r1467, %r1468, 3;
	shf.l.wrap.b32 	%r1472, %r1468, %r1467, 3;
	mov.b64 	%rd2315, {%r1472, %r1471};
	xor.b64  	%rd2316, %rd2314, %rd2315;
	shr.u64 	%rd2317, %rd2252, 6;
	xor.b64  	%rd2318, %rd2316, %rd2317;
	shf.r.wrap.b32 	%r1473, %r1130, %r1129, 1;
	shf.r.wrap.b32 	%r1474, %r1129, %r1130, 1;
	mov.b64 	%rd2319, {%r1474, %r1473};
	shf.r.wrap.b32 	%r1475, %r1130, %r1129, 8;
	shf.r.wrap.b32 	%r1476, %r1129, %r1130, 8;
	mov.b64 	%rd2320, {%r1476, %r1475};
	xor.b64  	%rd2321, %rd2319, %rd2320;
	shr.u64 	%rd2322, %rd1771, 7;
	xor.b64  	%rd2323, %rd2321, %rd2322;
	add.s64 	%rd2324, %rd2323, %rd1734;
	add.s64 	%rd2325, %rd2324, %rd2067;
	add.s64 	%rd2326, %rd2325, %rd2318;
	add.s64 	%rd2327, %rd2326, %rd2191;
	xor.b64  	%rd2328, %rd2265, %rd2228;
	and.b64  	%rd2329, %rd2302, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2228;
	add.s64 	%rd2331, %rd2327, %rd2330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd2302;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 14;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 14;
	mov.b64 	%rd2332, {%r1480, %r1479};
	shf.r.wrap.b32 	%r1481, %r1478, %r1477, 18;
	shf.r.wrap.b32 	%r1482, %r1477, %r1478, 18;
	mov.b64 	%rd2333, {%r1482, %r1481};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	shf.l.wrap.b32 	%r1483, %r1477, %r1478, 23;
	shf.l.wrap.b32 	%r1484, %r1478, %r1477, 23;
	mov.b64 	%rd2335, {%r1484, %r1483};
	xor.b64  	%rd2336, %rd2334, %rd2335;
	add.s64 	%rd2337, %rd2331, %rd2336;
	add.s64 	%rd2338, %rd2337, 8399075790359081724;
	add.s64 	%rd2339, %rd2338, %rd2202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd2313;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 28;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 28;
	mov.b64 	%rd2340, {%r1488, %r1487};
	shf.l.wrap.b32 	%r1489, %r1485, %r1486, 30;
	shf.l.wrap.b32 	%r1490, %r1486, %r1485, 30;
	mov.b64 	%rd2341, {%r1490, %r1489};
	xor.b64  	%rd2342, %rd2340, %rd2341;
	shf.l.wrap.b32 	%r1491, %r1485, %r1486, 25;
	shf.l.wrap.b32 	%r1492, %r1486, %r1485, 25;
	mov.b64 	%rd2343, {%r1492, %r1491};
	xor.b64  	%rd2344, %rd2342, %rd2343;
	and.b64  	%rd2345, %rd2313, %rd2276;
	or.b64  	%rd2346, %rd2313, %rd2276;
	and.b64  	%rd2347, %rd2346, %rd2239;
	or.b64  	%rd2348, %rd2347, %rd2345;
	add.s64 	%rd2349, %rd2348, %rd2344;
	add.s64 	%rd2350, %rd2349, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2289;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 19;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 19;
	mov.b64 	%rd2351, {%r1496, %r1495};
	shf.l.wrap.b32 	%r1497, %r1493, %r1494, 3;
	shf.l.wrap.b32 	%r1498, %r1494, %r1493, 3;
	mov.b64 	%rd2352, {%r1498, %r1497};
	xor.b64  	%rd2353, %rd2351, %rd2352;
	shr.u64 	%rd2354, %rd2289, 6;
	xor.b64  	%rd2355, %rd2353, %rd2354;
	shf.r.wrap.b32 	%r1499, %r1156, %r1155, 1;
	shf.r.wrap.b32 	%r1500, %r1155, %r1156, 1;
	mov.b64 	%rd2356, {%r1500, %r1499};
	shf.r.wrap.b32 	%r1501, %r1156, %r1155, 8;
	shf.r.wrap.b32 	%r1502, %r1155, %r1156, 8;
	mov.b64 	%rd2357, {%r1502, %r1501};
	xor.b64  	%rd2358, %rd2356, %rd2357;
	shr.u64 	%rd2359, %rd1808, 7;
	xor.b64  	%rd2360, %rd2358, %rd2359;
	add.s64 	%rd2361, %rd2360, %rd1771;
	add.s64 	%rd2362, %rd2361, %rd2104;
	add.s64 	%rd2363, %rd2362, %rd2355;
	add.s64 	%rd2364, %rd2363, %rd2228;
	xor.b64  	%rd2365, %rd2302, %rd2265;
	and.b64  	%rd2366, %rd2339, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2265;
	add.s64 	%rd2368, %rd2364, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd2339;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 14;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 14;
	mov.b64 	%rd2369, {%r1506, %r1505};
	shf.r.wrap.b32 	%r1507, %r1504, %r1503, 18;
	shf.r.wrap.b32 	%r1508, %r1503, %r1504, 18;
	mov.b64 	%rd2370, {%r1508, %r1507};
	xor.b64  	%rd2371, %rd2369, %rd2370;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 23;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 23;
	mov.b64 	%rd2372, {%r1510, %r1509};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	add.s64 	%rd2374, %rd2368, %rd2373;
	add.s64 	%rd2375, %rd2374, 8693463985226723168;
	add.s64 	%rd2376, %rd2375, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd2350;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 28;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 28;
	mov.b64 	%rd2377, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 30;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 30;
	mov.b64 	%rd2378, {%r1516, %r1515};
	xor.b64  	%rd2379, %rd2377, %rd2378;
	shf.l.wrap.b32 	%r1517, %r1511, %r1512, 25;
	shf.l.wrap.b32 	%r1518, %r1512, %r1511, 25;
	mov.b64 	%rd2380, {%r1518, %r1517};
	xor.b64  	%rd2381, %rd2379, %rd2380;
	and.b64  	%rd2382, %rd2350, %rd2313;
	or.b64  	%rd2383, %rd2350, %rd2313;
	and.b64  	%rd2384, %rd2383, %rd2276;
	or.b64  	%rd2385, %rd2384, %rd2382;
	add.s64 	%rd2386, %rd2385, %rd2381;
	add.s64 	%rd2387, %rd2386, %rd2375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd2326;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 19;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 19;
	mov.b64 	%rd2388, {%r1522, %r1521};
	shf.l.wrap.b32 	%r1523, %r1519, %r1520, 3;
	shf.l.wrap.b32 	%r1524, %r1520, %r1519, 3;
	mov.b64 	%rd2389, {%r1524, %r1523};
	xor.b64  	%rd2390, %rd2388, %rd2389;
	shr.u64 	%rd2391, %rd2326, 6;
	xor.b64  	%rd2392, %rd2390, %rd2391;
	shf.r.wrap.b32 	%r1525, %r1182, %r1181, 1;
	shf.r.wrap.b32 	%r1526, %r1181, %r1182, 1;
	mov.b64 	%rd2393, {%r1526, %r1525};
	shf.r.wrap.b32 	%r1527, %r1182, %r1181, 8;
	shf.r.wrap.b32 	%r1528, %r1181, %r1182, 8;
	mov.b64 	%rd2394, {%r1528, %r1527};
	xor.b64  	%rd2395, %rd2393, %rd2394;
	shr.u64 	%rd2396, %rd1845, 7;
	xor.b64  	%rd2397, %rd2395, %rd2396;
	add.s64 	%rd2398, %rd2397, %rd1808;
	add.s64 	%rd2399, %rd2398, %rd2141;
	add.s64 	%rd2400, %rd2399, %rd2392;
	add.s64 	%rd2401, %rd2400, %rd2265;
	xor.b64  	%rd2402, %rd2339, %rd2302;
	and.b64  	%rd2403, %rd2376, %rd2402;
	xor.b64  	%rd2404, %rd2403, %rd2302;
	add.s64 	%rd2405, %rd2401, %rd2404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd2376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1530}, %rd2376;
	}
	shf.r.wrap.b32 	%r1531, %r1530, %r1529, 14;
	shf.r.wrap.b32 	%r1532, %r1529, %r1530, 14;
	mov.b64 	%rd2406, {%r1532, %r1531};
	shf.r.wrap.b32 	%r1533, %r1530, %r1529, 18;
	shf.r.wrap.b32 	%r1534, %r1529, %r1530, 18;
	mov.b64 	%rd2407, {%r1534, %r1533};
	xor.b64  	%rd2408, %rd2406, %rd2407;
	shf.l.wrap.b32 	%r1535, %r1529, %r1530, 23;
	shf.l.wrap.b32 	%r1536, %r1530, %r1529, 23;
	mov.b64 	%rd2409, {%r1536, %r1535};
	xor.b64  	%rd2410, %rd2408, %rd2409;
	add.s64 	%rd2411, %rd2405, %rd2410;
	add.s64 	%rd2412, %rd2411, -8878714635349349518;
	add.s64 	%rd2413, %rd2412, %rd2276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd2387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd2387;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 28;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 28;
	mov.b64 	%rd2414, {%r1540, %r1539};
	shf.l.wrap.b32 	%r1541, %r1537, %r1538, 30;
	shf.l.wrap.b32 	%r1542, %r1538, %r1537, 30;
	mov.b64 	%rd2415, {%r1542, %r1541};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	shf.l.wrap.b32 	%r1543, %r1537, %r1538, 25;
	shf.l.wrap.b32 	%r1544, %r1538, %r1537, 25;
	mov.b64 	%rd2417, {%r1544, %r1543};
	xor.b64  	%rd2418, %rd2416, %rd2417;
	and.b64  	%rd2419, %rd2387, %rd2350;
	or.b64  	%rd2420, %rd2387, %rd2350;
	and.b64  	%rd2421, %rd2420, %rd2313;
	or.b64  	%rd2422, %rd2421, %rd2419;
	add.s64 	%rd2423, %rd2422, %rd2418;
	add.s64 	%rd2424, %rd2423, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1545,%dummy}, %rd2363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1546}, %rd2363;
	}
	shf.r.wrap.b32 	%r1547, %r1546, %r1545, 19;
	shf.r.wrap.b32 	%r1548, %r1545, %r1546, 19;
	mov.b64 	%rd2425, {%r1548, %r1547};
	shf.l.wrap.b32 	%r1549, %r1545, %r1546, 3;
	shf.l.wrap.b32 	%r1550, %r1546, %r1545, 3;
	mov.b64 	%rd2426, {%r1550, %r1549};
	xor.b64  	%rd2427, %rd2425, %rd2426;
	shr.u64 	%rd2428, %rd2363, 6;
	xor.b64  	%rd2429, %rd2427, %rd2428;
	shf.r.wrap.b32 	%r1551, %r1208, %r1207, 1;
	shf.r.wrap.b32 	%r1552, %r1207, %r1208, 1;
	mov.b64 	%rd2430, {%r1552, %r1551};
	shf.r.wrap.b32 	%r1553, %r1208, %r1207, 8;
	shf.r.wrap.b32 	%r1554, %r1207, %r1208, 8;
	mov.b64 	%rd2431, {%r1554, %r1553};
	xor.b64  	%rd2432, %rd2430, %rd2431;
	shr.u64 	%rd2433, %rd1882, 7;
	xor.b64  	%rd2434, %rd2432, %rd2433;
	add.s64 	%rd2435, %rd2434, %rd1845;
	add.s64 	%rd2436, %rd2435, %rd2178;
	add.s64 	%rd2437, %rd2436, %rd2429;
	add.s64 	%rd2438, %rd2437, %rd2302;
	xor.b64  	%rd2439, %rd2376, %rd2339;
	and.b64  	%rd2440, %rd2413, %rd2439;
	xor.b64  	%rd2441, %rd2440, %rd2339;
	add.s64 	%rd2442, %rd2438, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd2413;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 14;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 14;
	mov.b64 	%rd2443, {%r1558, %r1557};
	shf.r.wrap.b32 	%r1559, %r1556, %r1555, 18;
	shf.r.wrap.b32 	%r1560, %r1555, %r1556, 18;
	mov.b64 	%rd2444, {%r1560, %r1559};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	shf.l.wrap.b32 	%r1561, %r1555, %r1556, 23;
	shf.l.wrap.b32 	%r1562, %r1556, %r1555, 23;
	mov.b64 	%rd2446, {%r1562, %r1561};
	xor.b64  	%rd2447, %rd2445, %rd2446;
	add.s64 	%rd2448, %rd2442, %rd2447;
	add.s64 	%rd2449, %rd2448, -8302665154208450068;
	add.s64 	%rd2450, %rd2449, %rd2313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd2424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd2424;
	}
	shf.r.wrap.b32 	%r1565, %r1564, %r1563, 28;
	shf.r.wrap.b32 	%r1566, %r1563, %r1564, 28;
	mov.b64 	%rd2451, {%r1566, %r1565};
	shf.l.wrap.b32 	%r1567, %r1563, %r1564, 30;
	shf.l.wrap.b32 	%r1568, %r1564, %r1563, 30;
	mov.b64 	%rd2452, {%r1568, %r1567};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	shf.l.wrap.b32 	%r1569, %r1563, %r1564, 25;
	shf.l.wrap.b32 	%r1570, %r1564, %r1563, 25;
	mov.b64 	%rd2454, {%r1570, %r1569};
	xor.b64  	%rd2455, %rd2453, %rd2454;
	and.b64  	%rd2456, %rd2424, %rd2387;
	or.b64  	%rd2457, %rd2424, %rd2387;
	and.b64  	%rd2458, %rd2457, %rd2350;
	or.b64  	%rd2459, %rd2458, %rd2456;
	add.s64 	%rd2460, %rd2459, %rd2455;
	add.s64 	%rd2461, %rd2460, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1571,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd2400;
	}
	shf.r.wrap.b32 	%r1573, %r1572, %r1571, 19;
	shf.r.wrap.b32 	%r1574, %r1571, %r1572, 19;
	mov.b64 	%rd2462, {%r1574, %r1573};
	shf.l.wrap.b32 	%r1575, %r1571, %r1572, 3;
	shf.l.wrap.b32 	%r1576, %r1572, %r1571, 3;
	mov.b64 	%rd2463, {%r1576, %r1575};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	shr.u64 	%rd2465, %rd2400, 6;
	xor.b64  	%rd2466, %rd2464, %rd2465;
	shf.r.wrap.b32 	%r1577, %r1234, %r1233, 1;
	shf.r.wrap.b32 	%r1578, %r1233, %r1234, 1;
	mov.b64 	%rd2467, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1234, %r1233, 8;
	shf.r.wrap.b32 	%r1580, %r1233, %r1234, 8;
	mov.b64 	%rd2468, {%r1580, %r1579};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	shr.u64 	%rd2470, %rd1919, 7;
	xor.b64  	%rd2471, %rd2469, %rd2470;
	add.s64 	%rd2472, %rd2471, %rd1882;
	add.s64 	%rd2473, %rd2472, %rd2215;
	add.s64 	%rd2474, %rd2473, %rd2466;
	add.s64 	%rd2475, %rd2474, %rd2339;
	xor.b64  	%rd2476, %rd2413, %rd2376;
	and.b64  	%rd2477, %rd2450, %rd2476;
	xor.b64  	%rd2478, %rd2477, %rd2376;
	add.s64 	%rd2479, %rd2475, %rd2478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd2450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd2450;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 14;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 14;
	mov.b64 	%rd2480, {%r1584, %r1583};
	shf.r.wrap.b32 	%r1585, %r1582, %r1581, 18;
	shf.r.wrap.b32 	%r1586, %r1581, %r1582, 18;
	mov.b64 	%rd2481, {%r1586, %r1585};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	shf.l.wrap.b32 	%r1587, %r1581, %r1582, 23;
	shf.l.wrap.b32 	%r1588, %r1582, %r1581, 23;
	mov.b64 	%rd2483, {%r1588, %r1587};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	add.s64 	%rd2485, %rd2479, %rd2484;
	add.s64 	%rd2486, %rd2485, -8016688836872298968;
	add.s64 	%rd2487, %rd2486, %rd2350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd2461;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 28;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 28;
	mov.b64 	%rd2488, {%r1592, %r1591};
	shf.l.wrap.b32 	%r1593, %r1589, %r1590, 30;
	shf.l.wrap.b32 	%r1594, %r1590, %r1589, 30;
	mov.b64 	%rd2489, {%r1594, %r1593};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	shf.l.wrap.b32 	%r1595, %r1589, %r1590, 25;
	shf.l.wrap.b32 	%r1596, %r1590, %r1589, 25;
	mov.b64 	%rd2491, {%r1596, %r1595};
	xor.b64  	%rd2492, %rd2490, %rd2491;
	and.b64  	%rd2493, %rd2461, %rd2424;
	or.b64  	%rd2494, %rd2461, %rd2424;
	and.b64  	%rd2495, %rd2494, %rd2387;
	or.b64  	%rd2496, %rd2495, %rd2493;
	add.s64 	%rd2497, %rd2496, %rd2492;
	add.s64 	%rd2498, %rd2497, %rd2486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd2437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd2437;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 19;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 19;
	mov.b64 	%rd2499, {%r1600, %r1599};
	shf.l.wrap.b32 	%r1601, %r1597, %r1598, 3;
	shf.l.wrap.b32 	%r1602, %r1598, %r1597, 3;
	mov.b64 	%rd2500, {%r1602, %r1601};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	shr.u64 	%rd2502, %rd2437, 6;
	xor.b64  	%rd2503, %rd2501, %rd2502;
	shf.r.wrap.b32 	%r1603, %r1260, %r1259, 1;
	shf.r.wrap.b32 	%r1604, %r1259, %r1260, 1;
	mov.b64 	%rd2504, {%r1604, %r1603};
	shf.r.wrap.b32 	%r1605, %r1260, %r1259, 8;
	shf.r.wrap.b32 	%r1606, %r1259, %r1260, 8;
	mov.b64 	%rd2505, {%r1606, %r1605};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	shr.u64 	%rd2507, %rd1956, 7;
	xor.b64  	%rd2508, %rd2506, %rd2507;
	add.s64 	%rd2509, %rd2508, %rd1919;
	add.s64 	%rd2510, %rd2509, %rd2252;
	add.s64 	%rd2511, %rd2510, %rd2503;
	add.s64 	%rd2512, %rd2511, %rd2376;
	xor.b64  	%rd2513, %rd2450, %rd2413;
	and.b64  	%rd2514, %rd2487, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2413;
	add.s64 	%rd2516, %rd2512, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd2487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd2487;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 14;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 14;
	mov.b64 	%rd2517, {%r1610, %r1609};
	shf.r.wrap.b32 	%r1611, %r1608, %r1607, 18;
	shf.r.wrap.b32 	%r1612, %r1607, %r1608, 18;
	mov.b64 	%rd2518, {%r1612, %r1611};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	shf.l.wrap.b32 	%r1613, %r1607, %r1608, 23;
	shf.l.wrap.b32 	%r1614, %r1608, %r1607, 23;
	mov.b64 	%rd2520, {%r1614, %r1613};
	xor.b64  	%rd2521, %rd2519, %rd2520;
	add.s64 	%rd2522, %rd2516, %rd2521;
	add.s64 	%rd2523, %rd2522, -6606660893046293015;
	add.s64 	%rd2524, %rd2523, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd2498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd2498;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 28;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 28;
	mov.b64 	%rd2525, {%r1618, %r1617};
	shf.l.wrap.b32 	%r1619, %r1615, %r1616, 30;
	shf.l.wrap.b32 	%r1620, %r1616, %r1615, 30;
	mov.b64 	%rd2526, {%r1620, %r1619};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	shf.l.wrap.b32 	%r1621, %r1615, %r1616, 25;
	shf.l.wrap.b32 	%r1622, %r1616, %r1615, 25;
	mov.b64 	%rd2528, {%r1622, %r1621};
	xor.b64  	%rd2529, %rd2527, %rd2528;
	and.b64  	%rd2530, %rd2498, %rd2461;
	or.b64  	%rd2531, %rd2498, %rd2461;
	and.b64  	%rd2532, %rd2531, %rd2424;
	or.b64  	%rd2533, %rd2532, %rd2530;
	add.s64 	%rd2534, %rd2533, %rd2529;
	add.s64 	%rd2535, %rd2534, %rd2523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd2474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd2474;
	}
	shf.r.wrap.b32 	%r1625, %r1624, %r1623, 19;
	shf.r.wrap.b32 	%r1626, %r1623, %r1624, 19;
	mov.b64 	%rd2536, {%r1626, %r1625};
	shf.l.wrap.b32 	%r1627, %r1623, %r1624, 3;
	shf.l.wrap.b32 	%r1628, %r1624, %r1623, 3;
	mov.b64 	%rd2537, {%r1628, %r1627};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	shr.u64 	%rd2539, %rd2474, 6;
	xor.b64  	%rd2540, %rd2538, %rd2539;
	shf.r.wrap.b32 	%r1629, %r1286, %r1285, 1;
	shf.r.wrap.b32 	%r1630, %r1285, %r1286, 1;
	mov.b64 	%rd2541, {%r1630, %r1629};
	shf.r.wrap.b32 	%r1631, %r1286, %r1285, 8;
	shf.r.wrap.b32 	%r1632, %r1285, %r1286, 8;
	mov.b64 	%rd2542, {%r1632, %r1631};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	shr.u64 	%rd2544, %rd1993, 7;
	xor.b64  	%rd2545, %rd2543, %rd2544;
	add.s64 	%rd2546, %rd2545, %rd1956;
	add.s64 	%rd2547, %rd2546, %rd2289;
	add.s64 	%rd2548, %rd2547, %rd2540;
	add.s64 	%rd2549, %rd2548, %rd2413;
	xor.b64  	%rd2550, %rd2487, %rd2450;
	and.b64  	%rd2551, %rd2524, %rd2550;
	xor.b64  	%rd2552, %rd2551, %rd2450;
	add.s64 	%rd2553, %rd2549, %rd2552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1633,%dummy}, %rd2524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1634}, %rd2524;
	}
	shf.r.wrap.b32 	%r1635, %r1634, %r1633, 14;
	shf.r.wrap.b32 	%r1636, %r1633, %r1634, 14;
	mov.b64 	%rd2554, {%r1636, %r1635};
	shf.r.wrap.b32 	%r1637, %r1634, %r1633, 18;
	shf.r.wrap.b32 	%r1638, %r1633, %r1634, 18;
	mov.b64 	%rd2555, {%r1638, %r1637};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	shf.l.wrap.b32 	%r1639, %r1633, %r1634, 23;
	shf.l.wrap.b32 	%r1640, %r1634, %r1633, 23;
	mov.b64 	%rd2557, {%r1640, %r1639};
	xor.b64  	%rd2558, %rd2556, %rd2557;
	add.s64 	%rd2559, %rd2553, %rd2558;
	add.s64 	%rd2560, %rd2559, -4685533653050689259;
	add.s64 	%rd2561, %rd2560, %rd2424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1641,%dummy}, %rd2535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd2535;
	}
	shf.r.wrap.b32 	%r1643, %r1642, %r1641, 28;
	shf.r.wrap.b32 	%r1644, %r1641, %r1642, 28;
	mov.b64 	%rd2562, {%r1644, %r1643};
	shf.l.wrap.b32 	%r1645, %r1641, %r1642, 30;
	shf.l.wrap.b32 	%r1646, %r1642, %r1641, 30;
	mov.b64 	%rd2563, {%r1646, %r1645};
	xor.b64  	%rd2564, %rd2562, %rd2563;
	shf.l.wrap.b32 	%r1647, %r1641, %r1642, 25;
	shf.l.wrap.b32 	%r1648, %r1642, %r1641, 25;
	mov.b64 	%rd2565, {%r1648, %r1647};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	and.b64  	%rd2567, %rd2535, %rd2498;
	or.b64  	%rd2568, %rd2535, %rd2498;
	and.b64  	%rd2569, %rd2568, %rd2461;
	or.b64  	%rd2570, %rd2569, %rd2567;
	add.s64 	%rd2571, %rd2570, %rd2566;
	add.s64 	%rd2572, %rd2571, %rd2560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1649,%dummy}, %rd2511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1650}, %rd2511;
	}
	shf.r.wrap.b32 	%r1651, %r1650, %r1649, 19;
	shf.r.wrap.b32 	%r1652, %r1649, %r1650, 19;
	mov.b64 	%rd2573, {%r1652, %r1651};
	shf.l.wrap.b32 	%r1653, %r1649, %r1650, 3;
	shf.l.wrap.b32 	%r1654, %r1650, %r1649, 3;
	mov.b64 	%rd2574, {%r1654, %r1653};
	xor.b64  	%rd2575, %rd2573, %rd2574;
	shr.u64 	%rd2576, %rd2511, 6;
	xor.b64  	%rd2577, %rd2575, %rd2576;
	shf.r.wrap.b32 	%r1655, %r1312, %r1311, 1;
	shf.r.wrap.b32 	%r1656, %r1311, %r1312, 1;
	mov.b64 	%rd2578, {%r1656, %r1655};
	shf.r.wrap.b32 	%r1657, %r1312, %r1311, 8;
	shf.r.wrap.b32 	%r1658, %r1311, %r1312, 8;
	mov.b64 	%rd2579, {%r1658, %r1657};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	shr.u64 	%rd2581, %rd2030, 7;
	xor.b64  	%rd2582, %rd2580, %rd2581;
	add.s64 	%rd2583, %rd2582, %rd1993;
	add.s64 	%rd2584, %rd2583, %rd2326;
	add.s64 	%rd2585, %rd2584, %rd2577;
	add.s64 	%rd2586, %rd2585, %rd2450;
	xor.b64  	%rd2587, %rd2524, %rd2487;
	and.b64  	%rd2588, %rd2561, %rd2587;
	xor.b64  	%rd2589, %rd2588, %rd2487;
	add.s64 	%rd2590, %rd2586, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd2561;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 14;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 14;
	mov.b64 	%rd2591, {%r1662, %r1661};
	shf.r.wrap.b32 	%r1663, %r1660, %r1659, 18;
	shf.r.wrap.b32 	%r1664, %r1659, %r1660, 18;
	mov.b64 	%rd2592, {%r1664, %r1663};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	shf.l.wrap.b32 	%r1665, %r1659, %r1660, 23;
	shf.l.wrap.b32 	%r1666, %r1660, %r1659, 23;
	mov.b64 	%rd2594, {%r1666, %r1665};
	xor.b64  	%rd2595, %rd2593, %rd2594;
	add.s64 	%rd2596, %rd2590, %rd2595;
	add.s64 	%rd2597, %rd2596, -4147400797238176981;
	add.s64 	%rd2598, %rd2597, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd2572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1668}, %rd2572;
	}
	shf.r.wrap.b32 	%r1669, %r1668, %r1667, 28;
	shf.r.wrap.b32 	%r1670, %r1667, %r1668, 28;
	mov.b64 	%rd2599, {%r1670, %r1669};
	shf.l.wrap.b32 	%r1671, %r1667, %r1668, 30;
	shf.l.wrap.b32 	%r1672, %r1668, %r1667, 30;
	mov.b64 	%rd2600, {%r1672, %r1671};
	xor.b64  	%rd2601, %rd2599, %rd2600;
	shf.l.wrap.b32 	%r1673, %r1667, %r1668, 25;
	shf.l.wrap.b32 	%r1674, %r1668, %r1667, 25;
	mov.b64 	%rd2602, {%r1674, %r1673};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	and.b64  	%rd2604, %rd2572, %rd2535;
	or.b64  	%rd2605, %rd2572, %rd2535;
	and.b64  	%rd2606, %rd2605, %rd2498;
	or.b64  	%rd2607, %rd2606, %rd2604;
	add.s64 	%rd2608, %rd2607, %rd2603;
	add.s64 	%rd2609, %rd2608, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1675,%dummy}, %rd2548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1676}, %rd2548;
	}
	shf.r.wrap.b32 	%r1677, %r1676, %r1675, 19;
	shf.r.wrap.b32 	%r1678, %r1675, %r1676, 19;
	mov.b64 	%rd2610, {%r1678, %r1677};
	shf.l.wrap.b32 	%r1679, %r1675, %r1676, 3;
	shf.l.wrap.b32 	%r1680, %r1676, %r1675, 3;
	mov.b64 	%rd2611, {%r1680, %r1679};
	xor.b64  	%rd2612, %rd2610, %rd2611;
	shr.u64 	%rd2613, %rd2548, 6;
	xor.b64  	%rd2614, %rd2612, %rd2613;
	shf.r.wrap.b32 	%r1681, %r1338, %r1337, 1;
	shf.r.wrap.b32 	%r1682, %r1337, %r1338, 1;
	mov.b64 	%rd2615, {%r1682, %r1681};
	shf.r.wrap.b32 	%r1683, %r1338, %r1337, 8;
	shf.r.wrap.b32 	%r1684, %r1337, %r1338, 8;
	mov.b64 	%rd2616, {%r1684, %r1683};
	xor.b64  	%rd2617, %rd2615, %rd2616;
	shr.u64 	%rd2618, %rd2067, 7;
	xor.b64  	%rd2619, %rd2617, %rd2618;
	add.s64 	%rd2620, %rd2619, %rd2030;
	add.s64 	%rd2621, %rd2620, %rd2363;
	add.s64 	%rd2622, %rd2621, %rd2614;
	add.s64 	%rd2623, %rd2622, %rd2487;
	xor.b64  	%rd2624, %rd2561, %rd2524;
	and.b64  	%rd2625, %rd2598, %rd2624;
	xor.b64  	%rd2626, %rd2625, %rd2524;
	add.s64 	%rd2627, %rd2623, %rd2626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd2598;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 14;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 14;
	mov.b64 	%rd2628, {%r1688, %r1687};
	shf.r.wrap.b32 	%r1689, %r1686, %r1685, 18;
	shf.r.wrap.b32 	%r1690, %r1685, %r1686, 18;
	mov.b64 	%rd2629, {%r1690, %r1689};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	shf.l.wrap.b32 	%r1691, %r1685, %r1686, 23;
	shf.l.wrap.b32 	%r1692, %r1686, %r1685, 23;
	mov.b64 	%rd2631, {%r1692, %r1691};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	add.s64 	%rd2633, %rd2627, %rd2632;
	add.s64 	%rd2634, %rd2633, -3880063495543823972;
	add.s64 	%rd2635, %rd2634, %rd2498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2609;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 28;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 28;
	mov.b64 	%rd2636, {%r1696, %r1695};
	shf.l.wrap.b32 	%r1697, %r1693, %r1694, 30;
	shf.l.wrap.b32 	%r1698, %r1694, %r1693, 30;
	mov.b64 	%rd2637, {%r1698, %r1697};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	shf.l.wrap.b32 	%r1699, %r1693, %r1694, 25;
	shf.l.wrap.b32 	%r1700, %r1694, %r1693, 25;
	mov.b64 	%rd2639, {%r1700, %r1699};
	xor.b64  	%rd2640, %rd2638, %rd2639;
	and.b64  	%rd2641, %rd2609, %rd2572;
	or.b64  	%rd2642, %rd2609, %rd2572;
	and.b64  	%rd2643, %rd2642, %rd2535;
	or.b64  	%rd2644, %rd2643, %rd2641;
	add.s64 	%rd2645, %rd2644, %rd2640;
	add.s64 	%rd2646, %rd2645, %rd2634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd2585;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 19;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 19;
	mov.b64 	%rd2647, {%r1704, %r1703};
	shf.l.wrap.b32 	%r1705, %r1701, %r1702, 3;
	shf.l.wrap.b32 	%r1706, %r1702, %r1701, 3;
	mov.b64 	%rd2648, {%r1706, %r1705};
	xor.b64  	%rd2649, %rd2647, %rd2648;
	shr.u64 	%rd2650, %rd2585, 6;
	xor.b64  	%rd2651, %rd2649, %rd2650;
	shf.r.wrap.b32 	%r1707, %r1364, %r1363, 1;
	shf.r.wrap.b32 	%r1708, %r1363, %r1364, 1;
	mov.b64 	%rd2652, {%r1708, %r1707};
	shf.r.wrap.b32 	%r1709, %r1364, %r1363, 8;
	shf.r.wrap.b32 	%r1710, %r1363, %r1364, 8;
	mov.b64 	%rd2653, {%r1710, %r1709};
	xor.b64  	%rd2654, %rd2652, %rd2653;
	shr.u64 	%rd2655, %rd2104, 7;
	xor.b64  	%rd2656, %rd2654, %rd2655;
	add.s64 	%rd2657, %rd2656, %rd2067;
	add.s64 	%rd2658, %rd2657, %rd2400;
	add.s64 	%rd2659, %rd2658, %rd2651;
	add.s64 	%rd2660, %rd2659, %rd2524;
	xor.b64  	%rd2661, %rd2598, %rd2561;
	and.b64  	%rd2662, %rd2635, %rd2661;
	xor.b64  	%rd2663, %rd2662, %rd2561;
	add.s64 	%rd2664, %rd2660, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2635;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 14;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 14;
	mov.b64 	%rd2665, {%r1714, %r1713};
	shf.r.wrap.b32 	%r1715, %r1712, %r1711, 18;
	shf.r.wrap.b32 	%r1716, %r1711, %r1712, 18;
	mov.b64 	%rd2666, {%r1716, %r1715};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 23;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 23;
	mov.b64 	%rd2668, {%r1718, %r1717};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	add.s64 	%rd2670, %rd2664, %rd2669;
	add.s64 	%rd2671, %rd2670, -3348786107499101689;
	add.s64 	%rd2672, %rd2671, %rd2535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2646;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 28;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 28;
	mov.b64 	%rd2673, {%r1722, %r1721};
	shf.l.wrap.b32 	%r1723, %r1719, %r1720, 30;
	shf.l.wrap.b32 	%r1724, %r1720, %r1719, 30;
	mov.b64 	%rd2674, {%r1724, %r1723};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 25;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 25;
	mov.b64 	%rd2676, {%r1726, %r1725};
	xor.b64  	%rd2677, %rd2675, %rd2676;
	and.b64  	%rd2678, %rd2646, %rd2609;
	or.b64  	%rd2679, %rd2646, %rd2609;
	and.b64  	%rd2680, %rd2679, %rd2572;
	or.b64  	%rd2681, %rd2680, %rd2678;
	add.s64 	%rd2682, %rd2681, %rd2677;
	add.s64 	%rd2683, %rd2682, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2622;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 19;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 19;
	mov.b64 	%rd2684, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 3;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 3;
	mov.b64 	%rd2685, {%r1732, %r1731};
	xor.b64  	%rd2686, %rd2684, %rd2685;
	shr.u64 	%rd2687, %rd2622, 6;
	xor.b64  	%rd2688, %rd2686, %rd2687;
	shf.r.wrap.b32 	%r1733, %r1390, %r1389, 1;
	shf.r.wrap.b32 	%r1734, %r1389, %r1390, 1;
	mov.b64 	%rd2689, {%r1734, %r1733};
	shf.r.wrap.b32 	%r1735, %r1390, %r1389, 8;
	shf.r.wrap.b32 	%r1736, %r1389, %r1390, 8;
	mov.b64 	%rd2690, {%r1736, %r1735};
	xor.b64  	%rd2691, %rd2689, %rd2690;
	shr.u64 	%rd2692, %rd2141, 7;
	xor.b64  	%rd2693, %rd2691, %rd2692;
	add.s64 	%rd2694, %rd2693, %rd2104;
	add.s64 	%rd2695, %rd2694, %rd2437;
	add.s64 	%rd2696, %rd2695, %rd2688;
	add.s64 	%rd2697, %rd2696, %rd2561;
	xor.b64  	%rd2698, %rd2635, %rd2598;
	and.b64  	%rd2699, %rd2672, %rd2698;
	xor.b64  	%rd2700, %rd2699, %rd2598;
	add.s64 	%rd2701, %rd2697, %rd2700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd2672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd2672;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 14;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 14;
	mov.b64 	%rd2702, {%r1740, %r1739};
	shf.r.wrap.b32 	%r1741, %r1738, %r1737, 18;
	shf.r.wrap.b32 	%r1742, %r1737, %r1738, 18;
	mov.b64 	%rd2703, {%r1742, %r1741};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	shf.l.wrap.b32 	%r1743, %r1737, %r1738, 23;
	shf.l.wrap.b32 	%r1744, %r1738, %r1737, 23;
	mov.b64 	%rd2705, {%r1744, %r1743};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	add.s64 	%rd2707, %rd2701, %rd2706;
	add.s64 	%rd2708, %rd2707, -1523767162380948706;
	add.s64 	%rd2709, %rd2708, %rd2572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd2683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd2683;
	}
	shf.r.wrap.b32 	%r1747, %r1746, %r1745, 28;
	shf.r.wrap.b32 	%r1748, %r1745, %r1746, 28;
	mov.b64 	%rd2710, {%r1748, %r1747};
	shf.l.wrap.b32 	%r1749, %r1745, %r1746, 30;
	shf.l.wrap.b32 	%r1750, %r1746, %r1745, 30;
	mov.b64 	%rd2711, {%r1750, %r1749};
	xor.b64  	%rd2712, %rd2710, %rd2711;
	shf.l.wrap.b32 	%r1751, %r1745, %r1746, 25;
	shf.l.wrap.b32 	%r1752, %r1746, %r1745, 25;
	mov.b64 	%rd2713, {%r1752, %r1751};
	xor.b64  	%rd2714, %rd2712, %rd2713;
	and.b64  	%rd2715, %rd2683, %rd2646;
	or.b64  	%rd2716, %rd2683, %rd2646;
	and.b64  	%rd2717, %rd2716, %rd2609;
	or.b64  	%rd2718, %rd2717, %rd2715;
	add.s64 	%rd2719, %rd2718, %rd2714;
	add.s64 	%rd2720, %rd2719, %rd2708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1753,%dummy}, %rd2659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1754}, %rd2659;
	}
	shf.r.wrap.b32 	%r1755, %r1754, %r1753, 19;
	shf.r.wrap.b32 	%r1756, %r1753, %r1754, 19;
	mov.b64 	%rd2721, {%r1756, %r1755};
	shf.l.wrap.b32 	%r1757, %r1753, %r1754, 3;
	shf.l.wrap.b32 	%r1758, %r1754, %r1753, 3;
	mov.b64 	%rd2722, {%r1758, %r1757};
	xor.b64  	%rd2723, %rd2721, %rd2722;
	shr.u64 	%rd2724, %rd2659, 6;
	xor.b64  	%rd2725, %rd2723, %rd2724;
	shf.r.wrap.b32 	%r1759, %r1416, %r1415, 1;
	shf.r.wrap.b32 	%r1760, %r1415, %r1416, 1;
	mov.b64 	%rd2726, {%r1760, %r1759};
	shf.r.wrap.b32 	%r1761, %r1416, %r1415, 8;
	shf.r.wrap.b32 	%r1762, %r1415, %r1416, 8;
	mov.b64 	%rd2727, {%r1762, %r1761};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	shr.u64 	%rd2729, %rd2178, 7;
	xor.b64  	%rd2730, %rd2728, %rd2729;
	add.s64 	%rd2731, %rd2730, %rd2141;
	add.s64 	%rd2732, %rd2731, %rd2474;
	add.s64 	%rd2733, %rd2732, %rd2725;
	add.s64 	%rd2734, %rd2733, %rd2598;
	xor.b64  	%rd2735, %rd2672, %rd2635;
	and.b64  	%rd2736, %rd2709, %rd2735;
	xor.b64  	%rd2737, %rd2736, %rd2635;
	add.s64 	%rd2738, %rd2734, %rd2737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd2709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd2709;
	}
	shf.r.wrap.b32 	%r1765, %r1764, %r1763, 14;
	shf.r.wrap.b32 	%r1766, %r1763, %r1764, 14;
	mov.b64 	%rd2739, {%r1766, %r1765};
	shf.r.wrap.b32 	%r1767, %r1764, %r1763, 18;
	shf.r.wrap.b32 	%r1768, %r1763, %r1764, 18;
	mov.b64 	%rd2740, {%r1768, %r1767};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	shf.l.wrap.b32 	%r1769, %r1763, %r1764, 23;
	shf.l.wrap.b32 	%r1770, %r1764, %r1763, 23;
	mov.b64 	%rd2742, {%r1770, %r1769};
	xor.b64  	%rd2743, %rd2741, %rd2742;
	add.s64 	%rd2744, %rd2738, %rd2743;
	add.s64 	%rd2745, %rd2744, -757361751448694408;
	add.s64 	%rd2746, %rd2745, %rd2609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd2720;
	}
	shf.r.wrap.b32 	%r1773, %r1772, %r1771, 28;
	shf.r.wrap.b32 	%r1774, %r1771, %r1772, 28;
	mov.b64 	%rd2747, {%r1774, %r1773};
	shf.l.wrap.b32 	%r1775, %r1771, %r1772, 30;
	shf.l.wrap.b32 	%r1776, %r1772, %r1771, 30;
	mov.b64 	%rd2748, {%r1776, %r1775};
	xor.b64  	%rd2749, %rd2747, %rd2748;
	shf.l.wrap.b32 	%r1777, %r1771, %r1772, 25;
	shf.l.wrap.b32 	%r1778, %r1772, %r1771, 25;
	mov.b64 	%rd2750, {%r1778, %r1777};
	xor.b64  	%rd2751, %rd2749, %rd2750;
	and.b64  	%rd2752, %rd2720, %rd2683;
	or.b64  	%rd2753, %rd2720, %rd2683;
	and.b64  	%rd2754, %rd2753, %rd2646;
	or.b64  	%rd2755, %rd2754, %rd2752;
	add.s64 	%rd2756, %rd2755, %rd2751;
	add.s64 	%rd2757, %rd2756, %rd2745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1779,%dummy}, %rd2696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd2696;
	}
	shf.r.wrap.b32 	%r1781, %r1780, %r1779, 19;
	shf.r.wrap.b32 	%r1782, %r1779, %r1780, 19;
	mov.b64 	%rd2758, {%r1782, %r1781};
	shf.l.wrap.b32 	%r1783, %r1779, %r1780, 3;
	shf.l.wrap.b32 	%r1784, %r1780, %r1779, 3;
	mov.b64 	%rd2759, {%r1784, %r1783};
	xor.b64  	%rd2760, %rd2758, %rd2759;
	shr.u64 	%rd2761, %rd2696, 6;
	xor.b64  	%rd2762, %rd2760, %rd2761;
	shf.r.wrap.b32 	%r1785, %r1442, %r1441, 1;
	shf.r.wrap.b32 	%r1786, %r1441, %r1442, 1;
	mov.b64 	%rd2763, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1442, %r1441, 8;
	shf.r.wrap.b32 	%r1788, %r1441, %r1442, 8;
	mov.b64 	%rd2764, {%r1788, %r1787};
	xor.b64  	%rd2765, %rd2763, %rd2764;
	shr.u64 	%rd2766, %rd2215, 7;
	xor.b64  	%rd2767, %rd2765, %rd2766;
	add.s64 	%rd2768, %rd2767, %rd2178;
	add.s64 	%rd2769, %rd2768, %rd2511;
	add.s64 	%rd2770, %rd2769, %rd2762;
	add.s64 	%rd2771, %rd2770, %rd2635;
	xor.b64  	%rd2772, %rd2709, %rd2672;
	and.b64  	%rd2773, %rd2746, %rd2772;
	xor.b64  	%rd2774, %rd2773, %rd2672;
	add.s64 	%rd2775, %rd2771, %rd2774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1789,%dummy}, %rd2746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1790}, %rd2746;
	}
	shf.r.wrap.b32 	%r1791, %r1790, %r1789, 14;
	shf.r.wrap.b32 	%r1792, %r1789, %r1790, 14;
	mov.b64 	%rd2776, {%r1792, %r1791};
	shf.r.wrap.b32 	%r1793, %r1790, %r1789, 18;
	shf.r.wrap.b32 	%r1794, %r1789, %r1790, 18;
	mov.b64 	%rd2777, {%r1794, %r1793};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	shf.l.wrap.b32 	%r1795, %r1789, %r1790, 23;
	shf.l.wrap.b32 	%r1796, %r1790, %r1789, 23;
	mov.b64 	%rd2779, {%r1796, %r1795};
	xor.b64  	%rd2780, %rd2778, %rd2779;
	add.s64 	%rd2781, %rd2775, %rd2780;
	add.s64 	%rd2782, %rd2781, 500013540394364858;
	add.s64 	%rd2783, %rd2782, %rd2646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd2757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd2757;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 28;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 28;
	mov.b64 	%rd2784, {%r1800, %r1799};
	shf.l.wrap.b32 	%r1801, %r1797, %r1798, 30;
	shf.l.wrap.b32 	%r1802, %r1798, %r1797, 30;
	mov.b64 	%rd2785, {%r1802, %r1801};
	xor.b64  	%rd2786, %rd2784, %rd2785;
	shf.l.wrap.b32 	%r1803, %r1797, %r1798, 25;
	shf.l.wrap.b32 	%r1804, %r1798, %r1797, 25;
	mov.b64 	%rd2787, {%r1804, %r1803};
	xor.b64  	%rd2788, %rd2786, %rd2787;
	and.b64  	%rd2789, %rd2757, %rd2720;
	or.b64  	%rd2790, %rd2757, %rd2720;
	and.b64  	%rd2791, %rd2790, %rd2683;
	or.b64  	%rd2792, %rd2791, %rd2789;
	add.s64 	%rd2793, %rd2792, %rd2788;
	add.s64 	%rd2794, %rd2793, %rd2782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd2733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd2733;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 19;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 19;
	mov.b64 	%rd2795, {%r1808, %r1807};
	shf.l.wrap.b32 	%r1809, %r1805, %r1806, 3;
	shf.l.wrap.b32 	%r1810, %r1806, %r1805, 3;
	mov.b64 	%rd2796, {%r1810, %r1809};
	xor.b64  	%rd2797, %rd2795, %rd2796;
	shr.u64 	%rd2798, %rd2733, 6;
	xor.b64  	%rd2799, %rd2797, %rd2798;
	shf.r.wrap.b32 	%r1811, %r1468, %r1467, 1;
	shf.r.wrap.b32 	%r1812, %r1467, %r1468, 1;
	mov.b64 	%rd2800, {%r1812, %r1811};
	shf.r.wrap.b32 	%r1813, %r1468, %r1467, 8;
	shf.r.wrap.b32 	%r1814, %r1467, %r1468, 8;
	mov.b64 	%rd2801, {%r1814, %r1813};
	xor.b64  	%rd2802, %rd2800, %rd2801;
	shr.u64 	%rd2803, %rd2252, 7;
	xor.b64  	%rd2804, %rd2802, %rd2803;
	add.s64 	%rd2805, %rd2804, %rd2215;
	add.s64 	%rd2806, %rd2805, %rd2548;
	add.s64 	%rd2807, %rd2806, %rd2799;
	add.s64 	%rd2808, %rd2807, %rd2672;
	xor.b64  	%rd2809, %rd2746, %rd2709;
	and.b64  	%rd2810, %rd2783, %rd2809;
	xor.b64  	%rd2811, %rd2810, %rd2709;
	add.s64 	%rd2812, %rd2808, %rd2811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2783;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 14;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 14;
	mov.b64 	%rd2813, {%r1818, %r1817};
	shf.r.wrap.b32 	%r1819, %r1816, %r1815, 18;
	shf.r.wrap.b32 	%r1820, %r1815, %r1816, 18;
	mov.b64 	%rd2814, {%r1820, %r1819};
	xor.b64  	%rd2815, %rd2813, %rd2814;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 23;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 23;
	mov.b64 	%rd2816, {%r1822, %r1821};
	xor.b64  	%rd2817, %rd2815, %rd2816;
	add.s64 	%rd2818, %rd2812, %rd2817;
	add.s64 	%rd2819, %rd2818, 748580250866718886;
	add.s64 	%rd2820, %rd2819, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2794;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 28;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 28;
	mov.b64 	%rd2821, {%r1826, %r1825};
	shf.l.wrap.b32 	%r1827, %r1823, %r1824, 30;
	shf.l.wrap.b32 	%r1828, %r1824, %r1823, 30;
	mov.b64 	%rd2822, {%r1828, %r1827};
	xor.b64  	%rd2823, %rd2821, %rd2822;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 25;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 25;
	mov.b64 	%rd2824, {%r1830, %r1829};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	and.b64  	%rd2826, %rd2794, %rd2757;
	or.b64  	%rd2827, %rd2794, %rd2757;
	and.b64  	%rd2828, %rd2827, %rd2720;
	or.b64  	%rd2829, %rd2828, %rd2826;
	add.s64 	%rd2830, %rd2829, %rd2825;
	add.s64 	%rd2831, %rd2830, %rd2819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2770;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 19;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 19;
	mov.b64 	%rd2832, {%r1834, %r1833};
	shf.l.wrap.b32 	%r1835, %r1831, %r1832, 3;
	shf.l.wrap.b32 	%r1836, %r1832, %r1831, 3;
	mov.b64 	%rd2833, {%r1836, %r1835};
	xor.b64  	%rd2834, %rd2832, %rd2833;
	shr.u64 	%rd2835, %rd2770, 6;
	xor.b64  	%rd2836, %rd2834, %rd2835;
	shf.r.wrap.b32 	%r1837, %r1494, %r1493, 1;
	shf.r.wrap.b32 	%r1838, %r1493, %r1494, 1;
	mov.b64 	%rd2837, {%r1838, %r1837};
	shf.r.wrap.b32 	%r1839, %r1494, %r1493, 8;
	shf.r.wrap.b32 	%r1840, %r1493, %r1494, 8;
	mov.b64 	%rd2838, {%r1840, %r1839};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	shr.u64 	%rd2840, %rd2289, 7;
	xor.b64  	%rd2841, %rd2839, %rd2840;
	add.s64 	%rd2842, %rd2841, %rd2252;
	add.s64 	%rd2843, %rd2842, %rd2585;
	add.s64 	%rd2844, %rd2843, %rd2836;
	add.s64 	%rd2845, %rd2844, %rd2709;
	xor.b64  	%rd2846, %rd2783, %rd2746;
	and.b64  	%rd2847, %rd2820, %rd2846;
	xor.b64  	%rd2848, %rd2847, %rd2746;
	add.s64 	%rd2849, %rd2845, %rd2848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd2820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd2820;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 14;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 14;
	mov.b64 	%rd2850, {%r1844, %r1843};
	shf.r.wrap.b32 	%r1845, %r1842, %r1841, 18;
	shf.r.wrap.b32 	%r1846, %r1841, %r1842, 18;
	mov.b64 	%rd2851, {%r1846, %r1845};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	shf.l.wrap.b32 	%r1847, %r1841, %r1842, 23;
	shf.l.wrap.b32 	%r1848, %r1842, %r1841, 23;
	mov.b64 	%rd2853, {%r1848, %r1847};
	xor.b64  	%rd2854, %rd2852, %rd2853;
	add.s64 	%rd2855, %rd2849, %rd2854;
	add.s64 	%rd2856, %rd2855, 1242879168328830382;
	add.s64 	%rd2857, %rd2856, %rd2720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd2831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd2831;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 28;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 28;
	mov.b64 	%rd2858, {%r1852, %r1851};
	shf.l.wrap.b32 	%r1853, %r1849, %r1850, 30;
	shf.l.wrap.b32 	%r1854, %r1850, %r1849, 30;
	mov.b64 	%rd2859, {%r1854, %r1853};
	xor.b64  	%rd2860, %rd2858, %rd2859;
	shf.l.wrap.b32 	%r1855, %r1849, %r1850, 25;
	shf.l.wrap.b32 	%r1856, %r1850, %r1849, 25;
	mov.b64 	%rd2861, {%r1856, %r1855};
	xor.b64  	%rd2862, %rd2860, %rd2861;
	and.b64  	%rd2863, %rd2831, %rd2794;
	or.b64  	%rd2864, %rd2831, %rd2794;
	and.b64  	%rd2865, %rd2864, %rd2757;
	or.b64  	%rd2866, %rd2865, %rd2863;
	add.s64 	%rd2867, %rd2866, %rd2862;
	add.s64 	%rd2868, %rd2867, %rd2856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd2807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd2807;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 19;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 19;
	mov.b64 	%rd2869, {%r1860, %r1859};
	shf.l.wrap.b32 	%r1861, %r1857, %r1858, 3;
	shf.l.wrap.b32 	%r1862, %r1858, %r1857, 3;
	mov.b64 	%rd2870, {%r1862, %r1861};
	xor.b64  	%rd2871, %rd2869, %rd2870;
	shr.u64 	%rd2872, %rd2807, 6;
	xor.b64  	%rd2873, %rd2871, %rd2872;
	shf.r.wrap.b32 	%r1863, %r1520, %r1519, 1;
	shf.r.wrap.b32 	%r1864, %r1519, %r1520, 1;
	mov.b64 	%rd2874, {%r1864, %r1863};
	shf.r.wrap.b32 	%r1865, %r1520, %r1519, 8;
	shf.r.wrap.b32 	%r1866, %r1519, %r1520, 8;
	mov.b64 	%rd2875, {%r1866, %r1865};
	xor.b64  	%rd2876, %rd2874, %rd2875;
	shr.u64 	%rd2877, %rd2326, 7;
	xor.b64  	%rd2878, %rd2876, %rd2877;
	add.s64 	%rd2879, %rd2878, %rd2289;
	add.s64 	%rd2880, %rd2879, %rd2622;
	add.s64 	%rd2881, %rd2880, %rd2873;
	add.s64 	%rd2882, %rd2881, %rd2746;
	xor.b64  	%rd2883, %rd2820, %rd2783;
	and.b64  	%rd2884, %rd2857, %rd2883;
	xor.b64  	%rd2885, %rd2884, %rd2783;
	add.s64 	%rd2886, %rd2882, %rd2885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1867,%dummy}, %rd2857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1868}, %rd2857;
	}
	shf.r.wrap.b32 	%r1869, %r1868, %r1867, 14;
	shf.r.wrap.b32 	%r1870, %r1867, %r1868, 14;
	mov.b64 	%rd2887, {%r1870, %r1869};
	shf.r.wrap.b32 	%r1871, %r1868, %r1867, 18;
	shf.r.wrap.b32 	%r1872, %r1867, %r1868, 18;
	mov.b64 	%rd2888, {%r1872, %r1871};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	shf.l.wrap.b32 	%r1873, %r1867, %r1868, 23;
	shf.l.wrap.b32 	%r1874, %r1868, %r1867, 23;
	mov.b64 	%rd2890, {%r1874, %r1873};
	xor.b64  	%rd2891, %rd2889, %rd2890;
	add.s64 	%rd2892, %rd2886, %rd2891;
	add.s64 	%rd2893, %rd2892, 1977374033974150939;
	add.s64 	%rd2894, %rd2893, %rd2757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1875,%dummy}, %rd2868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1876}, %rd2868;
	}
	shf.r.wrap.b32 	%r1877, %r1876, %r1875, 28;
	shf.r.wrap.b32 	%r1878, %r1875, %r1876, 28;
	mov.b64 	%rd2895, {%r1878, %r1877};
	shf.l.wrap.b32 	%r1879, %r1875, %r1876, 30;
	shf.l.wrap.b32 	%r1880, %r1876, %r1875, 30;
	mov.b64 	%rd2896, {%r1880, %r1879};
	xor.b64  	%rd2897, %rd2895, %rd2896;
	shf.l.wrap.b32 	%r1881, %r1875, %r1876, 25;
	shf.l.wrap.b32 	%r1882, %r1876, %r1875, 25;
	mov.b64 	%rd2898, {%r1882, %r1881};
	xor.b64  	%rd2899, %rd2897, %rd2898;
	and.b64  	%rd2900, %rd2868, %rd2831;
	or.b64  	%rd2901, %rd2868, %rd2831;
	and.b64  	%rd2902, %rd2901, %rd2794;
	or.b64  	%rd2903, %rd2902, %rd2900;
	add.s64 	%rd2904, %rd2903, %rd2899;
	add.s64 	%rd2905, %rd2904, %rd2893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1883,%dummy}, %rd2844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1884}, %rd2844;
	}
	shf.r.wrap.b32 	%r1885, %r1884, %r1883, 19;
	shf.r.wrap.b32 	%r1886, %r1883, %r1884, 19;
	mov.b64 	%rd2906, {%r1886, %r1885};
	shf.l.wrap.b32 	%r1887, %r1883, %r1884, 3;
	shf.l.wrap.b32 	%r1888, %r1884, %r1883, 3;
	mov.b64 	%rd2907, {%r1888, %r1887};
	xor.b64  	%rd2908, %rd2906, %rd2907;
	shr.u64 	%rd2909, %rd2844, 6;
	xor.b64  	%rd2910, %rd2908, %rd2909;
	shf.r.wrap.b32 	%r1889, %r1546, %r1545, 1;
	shf.r.wrap.b32 	%r1890, %r1545, %r1546, 1;
	mov.b64 	%rd2911, {%r1890, %r1889};
	shf.r.wrap.b32 	%r1891, %r1546, %r1545, 8;
	shf.r.wrap.b32 	%r1892, %r1545, %r1546, 8;
	mov.b64 	%rd2912, {%r1892, %r1891};
	xor.b64  	%rd2913, %rd2911, %rd2912;
	shr.u64 	%rd2914, %rd2363, 7;
	xor.b64  	%rd2915, %rd2913, %rd2914;
	add.s64 	%rd2916, %rd2915, %rd2326;
	add.s64 	%rd2917, %rd2916, %rd2659;
	add.s64 	%rd2918, %rd2917, %rd2910;
	add.s64 	%rd2919, %rd2918, %rd2783;
	xor.b64  	%rd2920, %rd2857, %rd2820;
	and.b64  	%rd2921, %rd2894, %rd2920;
	xor.b64  	%rd2922, %rd2921, %rd2820;
	add.s64 	%rd2923, %rd2919, %rd2922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1893,%dummy}, %rd2894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1894}, %rd2894;
	}
	shf.r.wrap.b32 	%r1895, %r1894, %r1893, 14;
	shf.r.wrap.b32 	%r1896, %r1893, %r1894, 14;
	mov.b64 	%rd2924, {%r1896, %r1895};
	shf.r.wrap.b32 	%r1897, %r1894, %r1893, 18;
	shf.r.wrap.b32 	%r1898, %r1893, %r1894, 18;
	mov.b64 	%rd2925, {%r1898, %r1897};
	xor.b64  	%rd2926, %rd2924, %rd2925;
	shf.l.wrap.b32 	%r1899, %r1893, %r1894, 23;
	shf.l.wrap.b32 	%r1900, %r1894, %r1893, 23;
	mov.b64 	%rd2927, {%r1900, %r1899};
	xor.b64  	%rd2928, %rd2926, %rd2927;
	add.s64 	%rd2929, %rd2923, %rd2928;
	add.s64 	%rd2930, %rd2929, 2944078676154940804;
	add.s64 	%rd2931, %rd2930, %rd2794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1901,%dummy}, %rd2905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1902}, %rd2905;
	}
	shf.r.wrap.b32 	%r1903, %r1902, %r1901, 28;
	shf.r.wrap.b32 	%r1904, %r1901, %r1902, 28;
	mov.b64 	%rd2932, {%r1904, %r1903};
	shf.l.wrap.b32 	%r1905, %r1901, %r1902, 30;
	shf.l.wrap.b32 	%r1906, %r1902, %r1901, 30;
	mov.b64 	%rd2933, {%r1906, %r1905};
	xor.b64  	%rd2934, %rd2932, %rd2933;
	shf.l.wrap.b32 	%r1907, %r1901, %r1902, 25;
	shf.l.wrap.b32 	%r1908, %r1902, %r1901, 25;
	mov.b64 	%rd2935, {%r1908, %r1907};
	xor.b64  	%rd2936, %rd2934, %rd2935;
	and.b64  	%rd2937, %rd2905, %rd2868;
	or.b64  	%rd2938, %rd2905, %rd2868;
	and.b64  	%rd2939, %rd2938, %rd2831;
	or.b64  	%rd2940, %rd2939, %rd2937;
	add.s64 	%rd2941, %rd2940, %rd2936;
	add.s64 	%rd2942, %rd2941, %rd2930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd2881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd2881;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 19;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 19;
	mov.b64 	%rd2943, {%r1912, %r1911};
	shf.l.wrap.b32 	%r1913, %r1909, %r1910, 3;
	shf.l.wrap.b32 	%r1914, %r1910, %r1909, 3;
	mov.b64 	%rd2944, {%r1914, %r1913};
	xor.b64  	%rd2945, %rd2943, %rd2944;
	shr.u64 	%rd2946, %rd2881, 6;
	xor.b64  	%rd2947, %rd2945, %rd2946;
	shf.r.wrap.b32 	%r1915, %r1572, %r1571, 1;
	shf.r.wrap.b32 	%r1916, %r1571, %r1572, 1;
	mov.b64 	%rd2948, {%r1916, %r1915};
	shf.r.wrap.b32 	%r1917, %r1572, %r1571, 8;
	shf.r.wrap.b32 	%r1918, %r1571, %r1572, 8;
	mov.b64 	%rd2949, {%r1918, %r1917};
	xor.b64  	%rd2950, %rd2948, %rd2949;
	shr.u64 	%rd2951, %rd2400, 7;
	xor.b64  	%rd2952, %rd2950, %rd2951;
	add.s64 	%rd2953, %rd2952, %rd2363;
	add.s64 	%rd2954, %rd2953, %rd2696;
	add.s64 	%rd2955, %rd2954, %rd2947;
	add.s64 	%rd2956, %rd2955, %rd2820;
	xor.b64  	%rd2957, %rd2894, %rd2857;
	and.b64  	%rd2958, %rd2931, %rd2957;
	xor.b64  	%rd2959, %rd2958, %rd2857;
	add.s64 	%rd2960, %rd2956, %rd2959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd2931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd2931;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 14;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 14;
	mov.b64 	%rd2961, {%r1922, %r1921};
	shf.r.wrap.b32 	%r1923, %r1920, %r1919, 18;
	shf.r.wrap.b32 	%r1924, %r1919, %r1920, 18;
	mov.b64 	%rd2962, {%r1924, %r1923};
	xor.b64  	%rd2963, %rd2961, %rd2962;
	shf.l.wrap.b32 	%r1925, %r1919, %r1920, 23;
	shf.l.wrap.b32 	%r1926, %r1920, %r1919, 23;
	mov.b64 	%rd2964, {%r1926, %r1925};
	xor.b64  	%rd2965, %rd2963, %rd2964;
	add.s64 	%rd2966, %rd2960, %rd2965;
	add.s64 	%rd2967, %rd2966, 3659926193048069267;
	add.s64 	%rd2968, %rd2967, %rd2831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1927,%dummy}, %rd2942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1928}, %rd2942;
	}
	shf.r.wrap.b32 	%r1929, %r1928, %r1927, 28;
	shf.r.wrap.b32 	%r1930, %r1927, %r1928, 28;
	mov.b64 	%rd2969, {%r1930, %r1929};
	shf.l.wrap.b32 	%r1931, %r1927, %r1928, 30;
	shf.l.wrap.b32 	%r1932, %r1928, %r1927, 30;
	mov.b64 	%rd2970, {%r1932, %r1931};
	xor.b64  	%rd2971, %rd2969, %rd2970;
	shf.l.wrap.b32 	%r1933, %r1927, %r1928, 25;
	shf.l.wrap.b32 	%r1934, %r1928, %r1927, 25;
	mov.b64 	%rd2972, {%r1934, %r1933};
	xor.b64  	%rd2973, %rd2971, %rd2972;
	and.b64  	%rd2974, %rd2942, %rd2905;
	or.b64  	%rd2975, %rd2942, %rd2905;
	and.b64  	%rd2976, %rd2975, %rd2868;
	or.b64  	%rd2977, %rd2976, %rd2974;
	add.s64 	%rd2978, %rd2977, %rd2973;
	add.s64 	%rd2979, %rd2978, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1935,%dummy}, %rd2918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1936}, %rd2918;
	}
	shf.r.wrap.b32 	%r1937, %r1936, %r1935, 19;
	shf.r.wrap.b32 	%r1938, %r1935, %r1936, 19;
	mov.b64 	%rd2980, {%r1938, %r1937};
	shf.l.wrap.b32 	%r1939, %r1935, %r1936, 3;
	shf.l.wrap.b32 	%r1940, %r1936, %r1935, 3;
	mov.b64 	%rd2981, {%r1940, %r1939};
	xor.b64  	%rd2982, %rd2980, %rd2981;
	shr.u64 	%rd2983, %rd2918, 6;
	xor.b64  	%rd2984, %rd2982, %rd2983;
	shf.r.wrap.b32 	%r1941, %r1598, %r1597, 1;
	shf.r.wrap.b32 	%r1942, %r1597, %r1598, 1;
	mov.b64 	%rd2985, {%r1942, %r1941};
	shf.r.wrap.b32 	%r1943, %r1598, %r1597, 8;
	shf.r.wrap.b32 	%r1944, %r1597, %r1598, 8;
	mov.b64 	%rd2986, {%r1944, %r1943};
	xor.b64  	%rd2987, %rd2985, %rd2986;
	shr.u64 	%rd2988, %rd2437, 7;
	xor.b64  	%rd2989, %rd2987, %rd2988;
	add.s64 	%rd2990, %rd2989, %rd2400;
	add.s64 	%rd2991, %rd2990, %rd2733;
	add.s64 	%rd2992, %rd2991, %rd2984;
	add.s64 	%rd2993, %rd2992, %rd2857;
	xor.b64  	%rd2994, %rd2931, %rd2894;
	and.b64  	%rd2995, %rd2968, %rd2994;
	xor.b64  	%rd2996, %rd2995, %rd2894;
	add.s64 	%rd2997, %rd2993, %rd2996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1945,%dummy}, %rd2968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1946}, %rd2968;
	}
	shf.r.wrap.b32 	%r1947, %r1946, %r1945, 14;
	shf.r.wrap.b32 	%r1948, %r1945, %r1946, 14;
	mov.b64 	%rd2998, {%r1948, %r1947};
	shf.r.wrap.b32 	%r1949, %r1946, %r1945, 18;
	shf.r.wrap.b32 	%r1950, %r1945, %r1946, 18;
	mov.b64 	%rd2999, {%r1950, %r1949};
	xor.b64  	%rd3000, %rd2998, %rd2999;
	shf.l.wrap.b32 	%r1951, %r1945, %r1946, 23;
	shf.l.wrap.b32 	%r1952, %r1946, %r1945, 23;
	mov.b64 	%rd3001, {%r1952, %r1951};
	xor.b64  	%rd3002, %rd3000, %rd3001;
	add.s64 	%rd3003, %rd2997, %rd3002;
	add.s64 	%rd3004, %rd3003, 4368137639120453308;
	add.s64 	%rd3005, %rd3004, %rd2868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd2979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1954}, %rd2979;
	}
	shf.r.wrap.b32 	%r1955, %r1954, %r1953, 28;
	shf.r.wrap.b32 	%r1956, %r1953, %r1954, 28;
	mov.b64 	%rd3006, {%r1956, %r1955};
	shf.l.wrap.b32 	%r1957, %r1953, %r1954, 30;
	shf.l.wrap.b32 	%r1958, %r1954, %r1953, 30;
	mov.b64 	%rd3007, {%r1958, %r1957};
	xor.b64  	%rd3008, %rd3006, %rd3007;
	shf.l.wrap.b32 	%r1959, %r1953, %r1954, 25;
	shf.l.wrap.b32 	%r1960, %r1954, %r1953, 25;
	mov.b64 	%rd3009, {%r1960, %r1959};
	xor.b64  	%rd3010, %rd3008, %rd3009;
	and.b64  	%rd3011, %rd2979, %rd2942;
	or.b64  	%rd3012, %rd2979, %rd2942;
	and.b64  	%rd3013, %rd3012, %rd2905;
	or.b64  	%rd3014, %rd3013, %rd3011;
	add.s64 	%rd3015, %rd3014, %rd3010;
	add.s64 	%rd3016, %rd3015, %rd3004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1961,%dummy}, %rd2955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1962}, %rd2955;
	}
	shf.r.wrap.b32 	%r1963, %r1962, %r1961, 19;
	shf.r.wrap.b32 	%r1964, %r1961, %r1962, 19;
	mov.b64 	%rd3017, {%r1964, %r1963};
	shf.l.wrap.b32 	%r1965, %r1961, %r1962, 3;
	shf.l.wrap.b32 	%r1966, %r1962, %r1961, 3;
	mov.b64 	%rd3018, {%r1966, %r1965};
	xor.b64  	%rd3019, %rd3017, %rd3018;
	shr.u64 	%rd3020, %rd2955, 6;
	xor.b64  	%rd3021, %rd3019, %rd3020;
	shf.r.wrap.b32 	%r1967, %r1624, %r1623, 1;
	shf.r.wrap.b32 	%r1968, %r1623, %r1624, 1;
	mov.b64 	%rd3022, {%r1968, %r1967};
	shf.r.wrap.b32 	%r1969, %r1624, %r1623, 8;
	shf.r.wrap.b32 	%r1970, %r1623, %r1624, 8;
	mov.b64 	%rd3023, {%r1970, %r1969};
	xor.b64  	%rd3024, %rd3022, %rd3023;
	shr.u64 	%rd3025, %rd2474, 7;
	xor.b64  	%rd3026, %rd3024, %rd3025;
	add.s64 	%rd3027, %rd3026, %rd2437;
	add.s64 	%rd3028, %rd3027, %rd2770;
	add.s64 	%rd3029, %rd3028, %rd3021;
	add.s64 	%rd3030, %rd3029, %rd2894;
	xor.b64  	%rd3031, %rd2968, %rd2931;
	and.b64  	%rd3032, %rd3005, %rd3031;
	xor.b64  	%rd3033, %rd3032, %rd2931;
	add.s64 	%rd3034, %rd3030, %rd3033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd3005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd3005;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 14;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 14;
	mov.b64 	%rd3035, {%r1974, %r1973};
	shf.r.wrap.b32 	%r1975, %r1972, %r1971, 18;
	shf.r.wrap.b32 	%r1976, %r1971, %r1972, 18;
	mov.b64 	%rd3036, {%r1976, %r1975};
	xor.b64  	%rd3037, %rd3035, %rd3036;
	shf.l.wrap.b32 	%r1977, %r1971, %r1972, 23;
	shf.l.wrap.b32 	%r1978, %r1972, %r1971, 23;
	mov.b64 	%rd3038, {%r1978, %r1977};
	xor.b64  	%rd3039, %rd3037, %rd3038;
	add.s64 	%rd3040, %rd3034, %rd3039;
	add.s64 	%rd3041, %rd3040, 4836135668995329356;
	add.s64 	%rd3042, %rd3041, %rd2905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1979,%dummy}, %rd3016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1980}, %rd3016;
	}
	shf.r.wrap.b32 	%r1981, %r1980, %r1979, 28;
	shf.r.wrap.b32 	%r1982, %r1979, %r1980, 28;
	mov.b64 	%rd3043, {%r1982, %r1981};
	shf.l.wrap.b32 	%r1983, %r1979, %r1980, 30;
	shf.l.wrap.b32 	%r1984, %r1980, %r1979, 30;
	mov.b64 	%rd3044, {%r1984, %r1983};
	xor.b64  	%rd3045, %rd3043, %rd3044;
	shf.l.wrap.b32 	%r1985, %r1979, %r1980, 25;
	shf.l.wrap.b32 	%r1986, %r1980, %r1979, 25;
	mov.b64 	%rd3046, {%r1986, %r1985};
	xor.b64  	%rd3047, %rd3045, %rd3046;
	and.b64  	%rd3048, %rd3016, %rd2979;
	or.b64  	%rd3049, %rd3016, %rd2979;
	and.b64  	%rd3050, %rd3049, %rd2942;
	or.b64  	%rd3051, %rd3050, %rd3048;
	add.s64 	%rd3052, %rd3051, %rd3047;
	add.s64 	%rd3053, %rd3052, %rd3041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1987,%dummy}, %rd2992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1988}, %rd2992;
	}
	shf.r.wrap.b32 	%r1989, %r1988, %r1987, 19;
	shf.r.wrap.b32 	%r1990, %r1987, %r1988, 19;
	mov.b64 	%rd3054, {%r1990, %r1989};
	shf.l.wrap.b32 	%r1991, %r1987, %r1988, 3;
	shf.l.wrap.b32 	%r1992, %r1988, %r1987, 3;
	mov.b64 	%rd3055, {%r1992, %r1991};
	xor.b64  	%rd3056, %rd3054, %rd3055;
	shr.u64 	%rd3057, %rd2992, 6;
	xor.b64  	%rd3058, %rd3056, %rd3057;
	shf.r.wrap.b32 	%r1993, %r1650, %r1649, 1;
	shf.r.wrap.b32 	%r1994, %r1649, %r1650, 1;
	mov.b64 	%rd3059, {%r1994, %r1993};
	shf.r.wrap.b32 	%r1995, %r1650, %r1649, 8;
	shf.r.wrap.b32 	%r1996, %r1649, %r1650, 8;
	mov.b64 	%rd3060, {%r1996, %r1995};
	xor.b64  	%rd3061, %rd3059, %rd3060;
	shr.u64 	%rd3062, %rd2511, 7;
	xor.b64  	%rd3063, %rd3061, %rd3062;
	add.s64 	%rd3064, %rd3063, %rd2474;
	add.s64 	%rd3065, %rd3064, %rd2807;
	add.s64 	%rd3066, %rd3065, %rd3058;
	add.s64 	%rd3067, %rd3066, %rd2931;
	xor.b64  	%rd3068, %rd3005, %rd2968;
	and.b64  	%rd3069, %rd3042, %rd3068;
	xor.b64  	%rd3070, %rd3069, %rd2968;
	add.s64 	%rd3071, %rd3067, %rd3070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1997,%dummy}, %rd3042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1998}, %rd3042;
	}
	shf.r.wrap.b32 	%r1999, %r1998, %r1997, 14;
	shf.r.wrap.b32 	%r2000, %r1997, %r1998, 14;
	mov.b64 	%rd3072, {%r2000, %r1999};
	shf.r.wrap.b32 	%r2001, %r1998, %r1997, 18;
	shf.r.wrap.b32 	%r2002, %r1997, %r1998, 18;
	mov.b64 	%rd3073, {%r2002, %r2001};
	xor.b64  	%rd3074, %rd3072, %rd3073;
	shf.l.wrap.b32 	%r2003, %r1997, %r1998, 23;
	shf.l.wrap.b32 	%r2004, %r1998, %r1997, 23;
	mov.b64 	%rd3075, {%r2004, %r2003};
	xor.b64  	%rd3076, %rd3074, %rd3075;
	add.s64 	%rd3077, %rd3071, %rd3076;
	add.s64 	%rd3078, %rd3077, 5532061633213252278;
	add.s64 	%rd3079, %rd3078, %rd2942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2005,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2006}, %rd3053;
	}
	shf.r.wrap.b32 	%r2007, %r2006, %r2005, 28;
	shf.r.wrap.b32 	%r2008, %r2005, %r2006, 28;
	mov.b64 	%rd3080, {%r2008, %r2007};
	shf.l.wrap.b32 	%r2009, %r2005, %r2006, 30;
	shf.l.wrap.b32 	%r2010, %r2006, %r2005, 30;
	mov.b64 	%rd3081, {%r2010, %r2009};
	xor.b64  	%rd3082, %rd3080, %rd3081;
	shf.l.wrap.b32 	%r2011, %r2005, %r2006, 25;
	shf.l.wrap.b32 	%r2012, %r2006, %r2005, 25;
	mov.b64 	%rd3083, {%r2012, %r2011};
	xor.b64  	%rd3084, %rd3082, %rd3083;
	and.b64  	%rd3085, %rd3053, %rd3016;
	or.b64  	%rd3086, %rd3053, %rd3016;
	and.b64  	%rd3087, %rd3086, %rd2979;
	or.b64  	%rd3088, %rd3087, %rd3085;
	add.s64 	%rd3089, %rd3088, %rd3084;
	add.s64 	%rd3090, %rd3089, %rd3078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd3029;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 19;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 19;
	mov.b64 	%rd3091, {%r2016, %r2015};
	shf.l.wrap.b32 	%r2017, %r2013, %r2014, 3;
	shf.l.wrap.b32 	%r2018, %r2014, %r2013, 3;
	mov.b64 	%rd3092, {%r2018, %r2017};
	xor.b64  	%rd3093, %rd3091, %rd3092;
	shr.u64 	%rd3094, %rd3029, 6;
	xor.b64  	%rd3095, %rd3093, %rd3094;
	shf.r.wrap.b32 	%r2019, %r1676, %r1675, 1;
	shf.r.wrap.b32 	%r2020, %r1675, %r1676, 1;
	mov.b64 	%rd3096, {%r2020, %r2019};
	shf.r.wrap.b32 	%r2021, %r1676, %r1675, 8;
	shf.r.wrap.b32 	%r2022, %r1675, %r1676, 8;
	mov.b64 	%rd3097, {%r2022, %r2021};
	xor.b64  	%rd3098, %rd3096, %rd3097;
	shr.u64 	%rd3099, %rd2548, 7;
	xor.b64  	%rd3100, %rd3098, %rd3099;
	add.s64 	%rd3101, %rd3100, %rd2511;
	add.s64 	%rd3102, %rd3101, %rd2844;
	add.s64 	%rd3103, %rd3102, %rd3095;
	add.s64 	%rd3104, %rd3103, %rd2968;
	xor.b64  	%rd3105, %rd3042, %rd3005;
	and.b64  	%rd3106, %rd3079, %rd3105;
	xor.b64  	%rd3107, %rd3106, %rd3005;
	add.s64 	%rd3108, %rd3104, %rd3107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2023,%dummy}, %rd3079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2024}, %rd3079;
	}
	shf.r.wrap.b32 	%r2025, %r2024, %r2023, 14;
	shf.r.wrap.b32 	%r2026, %r2023, %r2024, 14;
	mov.b64 	%rd3109, {%r2026, %r2025};
	shf.r.wrap.b32 	%r2027, %r2024, %r2023, 18;
	shf.r.wrap.b32 	%r2028, %r2023, %r2024, 18;
	mov.b64 	%rd3110, {%r2028, %r2027};
	xor.b64  	%rd3111, %rd3109, %rd3110;
	shf.l.wrap.b32 	%r2029, %r2023, %r2024, 23;
	shf.l.wrap.b32 	%r2030, %r2024, %r2023, 23;
	mov.b64 	%rd3112, {%r2030, %r2029};
	xor.b64  	%rd3113, %rd3111, %rd3112;
	add.s64 	%rd3114, %rd3108, %rd3113;
	add.s64 	%rd3115, %rd3114, 6448918945643986474;
	add.s64 	%rd3116, %rd3115, %rd2979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2031,%dummy}, %rd3090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2032}, %rd3090;
	}
	shf.r.wrap.b32 	%r2033, %r2032, %r2031, 28;
	shf.r.wrap.b32 	%r2034, %r2031, %r2032, 28;
	mov.b64 	%rd3117, {%r2034, %r2033};
	shf.l.wrap.b32 	%r2035, %r2031, %r2032, 30;
	shf.l.wrap.b32 	%r2036, %r2032, %r2031, 30;
	mov.b64 	%rd3118, {%r2036, %r2035};
	xor.b64  	%rd3119, %rd3117, %rd3118;
	shf.l.wrap.b32 	%r2037, %r2031, %r2032, 25;
	shf.l.wrap.b32 	%r2038, %r2032, %r2031, 25;
	mov.b64 	%rd3120, {%r2038, %r2037};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	and.b64  	%rd3122, %rd3090, %rd3053;
	or.b64  	%rd3123, %rd3090, %rd3053;
	and.b64  	%rd3124, %rd3123, %rd3016;
	or.b64  	%rd3125, %rd3124, %rd3122;
	add.s64 	%rd3126, %rd3125, %rd3121;
	add.s64 	%rd3127, %rd3126, %rd3115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2039,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2040}, %rd3066;
	}
	shf.r.wrap.b32 	%r2041, %r2040, %r2039, 19;
	shf.r.wrap.b32 	%r2042, %r2039, %r2040, 19;
	mov.b64 	%rd3128, {%r2042, %r2041};
	shf.l.wrap.b32 	%r2043, %r2039, %r2040, 3;
	shf.l.wrap.b32 	%r2044, %r2040, %r2039, 3;
	mov.b64 	%rd3129, {%r2044, %r2043};
	xor.b64  	%rd3130, %rd3128, %rd3129;
	shr.u64 	%rd3131, %rd3066, 6;
	xor.b64  	%rd3132, %rd3130, %rd3131;
	shf.r.wrap.b32 	%r2045, %r1702, %r1701, 1;
	shf.r.wrap.b32 	%r2046, %r1701, %r1702, 1;
	mov.b64 	%rd3133, {%r2046, %r2045};
	shf.r.wrap.b32 	%r2047, %r1702, %r1701, 8;
	shf.r.wrap.b32 	%r2048, %r1701, %r1702, 8;
	mov.b64 	%rd3134, {%r2048, %r2047};
	xor.b64  	%rd3135, %rd3133, %rd3134;
	shr.u64 	%rd3136, %rd2585, 7;
	xor.b64  	%rd3137, %rd3135, %rd3136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2049,%dummy}, %rd3116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2050}, %rd3116;
	}
	shf.r.wrap.b32 	%r2051, %r2050, %r2049, 14;
	shf.r.wrap.b32 	%r2052, %r2049, %r2050, 14;
	mov.b64 	%rd3138, {%r2052, %r2051};
	shf.r.wrap.b32 	%r2053, %r2050, %r2049, 18;
	shf.r.wrap.b32 	%r2054, %r2049, %r2050, 18;
	mov.b64 	%rd3139, {%r2054, %r2053};
	xor.b64  	%rd3140, %rd3138, %rd3139;
	shf.l.wrap.b32 	%r2055, %r2049, %r2050, 23;
	shf.l.wrap.b32 	%r2056, %r2050, %r2049, 23;
	mov.b64 	%rd3141, {%r2056, %r2055};
	xor.b64  	%rd3142, %rd3140, %rd3141;
	xor.b64  	%rd3143, %rd3079, %rd3042;
	and.b64  	%rd3144, %rd3116, %rd3143;
	xor.b64  	%rd3145, %rd3144, %rd3042;
	add.s64 	%rd3146, %rd2548, %rd3137;
	add.s64 	%rd3147, %rd3146, %rd2881;
	add.s64 	%rd3148, %rd3147, %rd3132;
	add.s64 	%rd3149, %rd3148, %rd3005;
	add.s64 	%rd3150, %rd3149, %rd3145;
	add.s64 	%rd3151, %rd3150, %rd3142;
	add.s64 	%rd3152, %rd3151, 6902733635092675308;
	add.s64 	%rd3153, %rd3152, %rd3016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2057,%dummy}, %rd3127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2058}, %rd3127;
	}
	shf.r.wrap.b32 	%r2059, %r2058, %r2057, 28;
	shf.r.wrap.b32 	%r2060, %r2057, %r2058, 28;
	mov.b64 	%rd3154, {%r2060, %r2059};
	shf.l.wrap.b32 	%r2061, %r2057, %r2058, 30;
	shf.l.wrap.b32 	%r2062, %r2058, %r2057, 30;
	mov.b64 	%rd3155, {%r2062, %r2061};
	xor.b64  	%rd3156, %rd3154, %rd3155;
	shf.l.wrap.b32 	%r2063, %r2057, %r2058, 25;
	shf.l.wrap.b32 	%r2064, %r2058, %r2057, 25;
	mov.b64 	%rd3157, {%r2064, %r2063};
	xor.b64  	%rd3158, %rd3156, %rd3157;
	and.b64  	%rd3159, %rd3127, %rd3090;
	or.b64  	%rd3160, %rd3127, %rd3090;
	and.b64  	%rd3161, %rd3160, %rd3053;
	or.b64  	%rd3162, %rd3161, %rd3159;
	add.s64 	%rd3163, %rd3162, %rd3158;
	add.s64 	%rd3164, %rd3163, %rd3152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2065,%dummy}, %rd3103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2066}, %rd3103;
	}
	shf.r.wrap.b32 	%r2067, %r2066, %r2065, 19;
	shf.r.wrap.b32 	%r2068, %r2065, %r2066, 19;
	mov.b64 	%rd3165, {%r2068, %r2067};
	shf.l.wrap.b32 	%r2069, %r2065, %r2066, 3;
	shf.l.wrap.b32 	%r2070, %r2066, %r2065, 3;
	mov.b64 	%rd3166, {%r2070, %r2069};
	xor.b64  	%rd3167, %rd3165, %rd3166;
	shr.u64 	%rd3168, %rd3103, 6;
	xor.b64  	%rd3169, %rd3167, %rd3168;
	shf.r.wrap.b32 	%r2071, %r1728, %r1727, 1;
	shf.r.wrap.b32 	%r2072, %r1727, %r1728, 1;
	mov.b64 	%rd3170, {%r2072, %r2071};
	shf.r.wrap.b32 	%r2073, %r1728, %r1727, 8;
	shf.r.wrap.b32 	%r2074, %r1727, %r1728, 8;
	mov.b64 	%rd3171, {%r2074, %r2073};
	xor.b64  	%rd3172, %rd3170, %rd3171;
	shr.u64 	%rd3173, %rd2622, 7;
	xor.b64  	%rd3174, %rd3172, %rd3173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd3153;
	}
	shf.r.wrap.b32 	%r2077, %r2076, %r2075, 14;
	shf.r.wrap.b32 	%r2078, %r2075, %r2076, 14;
	mov.b64 	%rd3175, {%r2078, %r2077};
	shf.r.wrap.b32 	%r2079, %r2076, %r2075, 18;
	shf.r.wrap.b32 	%r2080, %r2075, %r2076, 18;
	mov.b64 	%rd3176, {%r2080, %r2079};
	xor.b64  	%rd3177, %rd3175, %rd3176;
	shf.l.wrap.b32 	%r2081, %r2075, %r2076, 23;
	shf.l.wrap.b32 	%r2082, %r2076, %r2075, 23;
	mov.b64 	%rd3178, {%r2082, %r2081};
	xor.b64  	%rd3179, %rd3177, %rd3178;
	xor.b64  	%rd3180, %rd3116, %rd3079;
	and.b64  	%rd3181, %rd3153, %rd3180;
	xor.b64  	%rd3182, %rd3181, %rd3079;
	add.s64 	%rd3183, %rd2585, %rd3174;
	add.s64 	%rd3184, %rd3183, %rd2918;
	add.s64 	%rd3185, %rd3184, %rd3169;
	add.s64 	%rd3186, %rd3185, %rd3042;
	add.s64 	%rd3187, %rd3186, %rd3182;
	add.s64 	%rd3188, %rd3187, %rd3179;
	add.s64 	%rd3189, %rd3188, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2083,%dummy}, %rd3164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2084}, %rd3164;
	}
	shf.r.wrap.b32 	%r2085, %r2084, %r2083, 28;
	shf.r.wrap.b32 	%r2086, %r2083, %r2084, 28;
	mov.b64 	%rd3190, {%r2086, %r2085};
	shf.l.wrap.b32 	%r2087, %r2083, %r2084, 30;
	shf.l.wrap.b32 	%r2088, %r2084, %r2083, 30;
	mov.b64 	%rd3191, {%r2088, %r2087};
	xor.b64  	%rd3192, %rd3190, %rd3191;
	shf.l.wrap.b32 	%r2089, %r2083, %r2084, 25;
	shf.l.wrap.b32 	%r2090, %r2084, %r2083, 25;
	mov.b64 	%rd3193, {%r2090, %r2089};
	xor.b64  	%rd3194, %rd3192, %rd3193;
	and.b64  	%rd3195, %rd3164, %rd3127;
	or.b64  	%rd3196, %rd3164, %rd3127;
	and.b64  	%rd3197, %rd3196, %rd3090;
	or.b64  	%rd3198, %rd3197, %rd3195;
	add.s64 	%rd3199, %rd3194, %rd460;
	add.s64 	%rd3200, %rd3199, %rd3198;
	add.s64 	%rd3201, %rd3200, %rd3189;
	st.local.u64 	[%rd2+8], %rd3201;
	add.s64 	%rd3202, %rd3164, %rd466;
	st.local.u64 	[%rd2+16], %rd3202;
	add.s64 	%rd3203, %rd3127, %rd469;
	st.local.u64 	[%rd2+24], %rd3203;
	add.s64 	%rd3204, %rd3090, %rd458;
	st.local.u64 	[%rd2+32], %rd3204;
	add.s64 	%rd3205, %rd3053, %rd444;
	add.s64 	%rd3206, %rd3205, %rd3189;
	st.local.u64 	[%rd2+40], %rd3206;
	add.s64 	%rd3207, %rd3153, %rd452;
	st.local.u64 	[%rd2+48], %rd3207;
	add.s64 	%rd3208, %rd3116, %rd451;
	st.local.u64 	[%rd2+56], %rd3208;
	add.s64 	%rd3209, %rd3079, %rd442;
	st.local.u64 	[%rd2+64], %rd3209;
	cvt.u64.u32 	%rd3210, %r2;
	add.s64 	%rd6328, %rd6328, %rd3210;
	add.s64 	%rd6311, %rd6311, %rd3210;
	sub.s32 	%r4159, %r4159, %r2;
	mov.u32 	%r4156, 0;

$L__BB1_12:
	setp.lt.u32 	%p11, %r4159, 128;
	@%p11 bra 	$L__BB1_17;

$L__BB1_13:
	and.b64  	%rd3211, %rd6311, 7;
	setp.eq.s64 	%p12, %rd3211, 0;
	@%p12 bra 	$L__BB1_15;

	ld.local.u8 	%rd3212, [%rd6328];
	shl.b64 	%rd3213, %rd3212, 56;
	ld.local.u8 	%rd3214, [%rd6328+1];
	shl.b64 	%rd3215, %rd3214, 48;
	or.b64  	%rd3216, %rd3215, %rd3213;
	ld.local.u8 	%rd3217, [%rd6328+2];
	shl.b64 	%rd3218, %rd3217, 40;
	or.b64  	%rd3219, %rd3216, %rd3218;
	ld.local.u8 	%rd3220, [%rd6328+3];
	shl.b64 	%rd3221, %rd3220, 32;
	or.b64  	%rd3222, %rd3219, %rd3221;
	ld.local.u8 	%r2091, [%rd6328+4];
	mul.wide.u32 	%rd3223, %r2091, 16777216;
	or.b64  	%rd3224, %rd3222, %rd3223;
	ld.local.u8 	%r2092, [%rd6328+5];
	mul.wide.u32 	%rd3225, %r2092, 65536;
	or.b64  	%rd3226, %rd3224, %rd3225;
	ld.local.u8 	%r2093, [%rd6328+6];
	mul.wide.u32 	%rd3227, %r2093, 256;
	or.b64  	%rd3228, %rd3226, %rd3227;
	ld.local.u8 	%rd3229, [%rd6328+7];
	or.b64  	%rd6327, %rd3228, %rd3229;
	ld.local.u8 	%rd3230, [%rd6328+8];
	shl.b64 	%rd3231, %rd3230, 56;
	ld.local.u8 	%rd3232, [%rd6328+9];
	shl.b64 	%rd3233, %rd3232, 48;
	or.b64  	%rd3234, %rd3233, %rd3231;
	ld.local.u8 	%rd3235, [%rd6328+10];
	shl.b64 	%rd3236, %rd3235, 40;
	or.b64  	%rd3237, %rd3234, %rd3236;
	ld.local.u8 	%rd3238, [%rd6328+11];
	shl.b64 	%rd3239, %rd3238, 32;
	or.b64  	%rd3240, %rd3237, %rd3239;
	ld.local.u8 	%r2094, [%rd6328+12];
	mul.wide.u32 	%rd3241, %r2094, 16777216;
	or.b64  	%rd3242, %rd3240, %rd3241;
	ld.local.u8 	%r2095, [%rd6328+13];
	mul.wide.u32 	%rd3243, %r2095, 65536;
	or.b64  	%rd3244, %rd3242, %rd3243;
	ld.local.u8 	%r2096, [%rd6328+14];
	mul.wide.u32 	%rd3245, %r2096, 256;
	or.b64  	%rd3246, %rd3244, %rd3245;
	ld.local.u8 	%rd3247, [%rd6328+15];
	or.b64  	%rd6326, %rd3246, %rd3247;
	ld.local.u8 	%rd3248, [%rd6328+16];
	shl.b64 	%rd3249, %rd3248, 56;
	ld.local.u8 	%rd3250, [%rd6328+17];
	shl.b64 	%rd3251, %rd3250, 48;
	or.b64  	%rd3252, %rd3251, %rd3249;
	ld.local.u8 	%rd3253, [%rd6328+18];
	shl.b64 	%rd3254, %rd3253, 40;
	or.b64  	%rd3255, %rd3252, %rd3254;
	ld.local.u8 	%rd3256, [%rd6328+19];
	shl.b64 	%rd3257, %rd3256, 32;
	or.b64  	%rd3258, %rd3255, %rd3257;
	ld.local.u8 	%r2097, [%rd6328+20];
	mul.wide.u32 	%rd3259, %r2097, 16777216;
	or.b64  	%rd3260, %rd3258, %rd3259;
	ld.local.u8 	%r2098, [%rd6328+21];
	mul.wide.u32 	%rd3261, %r2098, 65536;
	or.b64  	%rd3262, %rd3260, %rd3261;
	ld.local.u8 	%r2099, [%rd6328+22];
	mul.wide.u32 	%rd3263, %r2099, 256;
	or.b64  	%rd3264, %rd3262, %rd3263;
	ld.local.u8 	%rd3265, [%rd6328+23];
	or.b64  	%rd6325, %rd3264, %rd3265;
	ld.local.u8 	%rd3266, [%rd6328+24];
	shl.b64 	%rd3267, %rd3266, 56;
	ld.local.u8 	%rd3268, [%rd6328+25];
	shl.b64 	%rd3269, %rd3268, 48;
	or.b64  	%rd3270, %rd3269, %rd3267;
	ld.local.u8 	%rd3271, [%rd6328+26];
	shl.b64 	%rd3272, %rd3271, 40;
	or.b64  	%rd3273, %rd3270, %rd3272;
	ld.local.u8 	%rd3274, [%rd6328+27];
	shl.b64 	%rd3275, %rd3274, 32;
	or.b64  	%rd3276, %rd3273, %rd3275;
	ld.local.u8 	%r2100, [%rd6328+28];
	mul.wide.u32 	%rd3277, %r2100, 16777216;
	or.b64  	%rd3278, %rd3276, %rd3277;
	ld.local.u8 	%r2101, [%rd6328+29];
	mul.wide.u32 	%rd3279, %r2101, 65536;
	or.b64  	%rd3280, %rd3278, %rd3279;
	ld.local.u8 	%r2102, [%rd6328+30];
	mul.wide.u32 	%rd3281, %r2102, 256;
	or.b64  	%rd3282, %rd3280, %rd3281;
	ld.local.u8 	%rd3283, [%rd6328+31];
	or.b64  	%rd6324, %rd3282, %rd3283;
	ld.local.u8 	%rd3284, [%rd6328+32];
	shl.b64 	%rd3285, %rd3284, 56;
	ld.local.u8 	%rd3286, [%rd6328+33];
	shl.b64 	%rd3287, %rd3286, 48;
	or.b64  	%rd3288, %rd3287, %rd3285;
	ld.local.u8 	%rd3289, [%rd6328+34];
	shl.b64 	%rd3290, %rd3289, 40;
	or.b64  	%rd3291, %rd3288, %rd3290;
	ld.local.u8 	%rd3292, [%rd6328+35];
	shl.b64 	%rd3293, %rd3292, 32;
	or.b64  	%rd3294, %rd3291, %rd3293;
	ld.local.u8 	%r2103, [%rd6328+36];
	mul.wide.u32 	%rd3295, %r2103, 16777216;
	or.b64  	%rd3296, %rd3294, %rd3295;
	ld.local.u8 	%r2104, [%rd6328+37];
	mul.wide.u32 	%rd3297, %r2104, 65536;
	or.b64  	%rd3298, %rd3296, %rd3297;
	ld.local.u8 	%r2105, [%rd6328+38];
	mul.wide.u32 	%rd3299, %r2105, 256;
	or.b64  	%rd3300, %rd3298, %rd3299;
	ld.local.u8 	%rd3301, [%rd6328+39];
	or.b64  	%rd6323, %rd3300, %rd3301;
	ld.local.u8 	%rd3302, [%rd6328+40];
	shl.b64 	%rd3303, %rd3302, 56;
	ld.local.u8 	%rd3304, [%rd6328+41];
	shl.b64 	%rd3305, %rd3304, 48;
	or.b64  	%rd3306, %rd3305, %rd3303;
	ld.local.u8 	%rd3307, [%rd6328+42];
	shl.b64 	%rd3308, %rd3307, 40;
	or.b64  	%rd3309, %rd3306, %rd3308;
	ld.local.u8 	%rd3310, [%rd6328+43];
	shl.b64 	%rd3311, %rd3310, 32;
	or.b64  	%rd3312, %rd3309, %rd3311;
	ld.local.u8 	%r2106, [%rd6328+44];
	mul.wide.u32 	%rd3313, %r2106, 16777216;
	or.b64  	%rd3314, %rd3312, %rd3313;
	ld.local.u8 	%r2107, [%rd6328+45];
	mul.wide.u32 	%rd3315, %r2107, 65536;
	or.b64  	%rd3316, %rd3314, %rd3315;
	ld.local.u8 	%r2108, [%rd6328+46];
	mul.wide.u32 	%rd3317, %r2108, 256;
	or.b64  	%rd3318, %rd3316, %rd3317;
	ld.local.u8 	%rd3319, [%rd6328+47];
	or.b64  	%rd6322, %rd3318, %rd3319;
	ld.local.u8 	%rd3320, [%rd6328+48];
	shl.b64 	%rd3321, %rd3320, 56;
	ld.local.u8 	%rd3322, [%rd6328+49];
	shl.b64 	%rd3323, %rd3322, 48;
	or.b64  	%rd3324, %rd3323, %rd3321;
	ld.local.u8 	%rd3325, [%rd6328+50];
	shl.b64 	%rd3326, %rd3325, 40;
	or.b64  	%rd3327, %rd3324, %rd3326;
	ld.local.u8 	%rd3328, [%rd6328+51];
	shl.b64 	%rd3329, %rd3328, 32;
	or.b64  	%rd3330, %rd3327, %rd3329;
	ld.local.u8 	%r2109, [%rd6328+52];
	mul.wide.u32 	%rd3331, %r2109, 16777216;
	or.b64  	%rd3332, %rd3330, %rd3331;
	ld.local.u8 	%r2110, [%rd6328+53];
	mul.wide.u32 	%rd3333, %r2110, 65536;
	or.b64  	%rd3334, %rd3332, %rd3333;
	ld.local.u8 	%r2111, [%rd6328+54];
	mul.wide.u32 	%rd3335, %r2111, 256;
	or.b64  	%rd3336, %rd3334, %rd3335;
	ld.local.u8 	%rd3337, [%rd6328+55];
	or.b64  	%rd6321, %rd3336, %rd3337;
	ld.local.u8 	%rd3338, [%rd6328+56];
	shl.b64 	%rd3339, %rd3338, 56;
	ld.local.u8 	%rd3340, [%rd6328+57];
	shl.b64 	%rd3341, %rd3340, 48;
	or.b64  	%rd3342, %rd3341, %rd3339;
	ld.local.u8 	%rd3343, [%rd6328+58];
	shl.b64 	%rd3344, %rd3343, 40;
	or.b64  	%rd3345, %rd3342, %rd3344;
	ld.local.u8 	%rd3346, [%rd6328+59];
	shl.b64 	%rd3347, %rd3346, 32;
	or.b64  	%rd3348, %rd3345, %rd3347;
	ld.local.u8 	%r2112, [%rd6328+60];
	mul.wide.u32 	%rd3349, %r2112, 16777216;
	or.b64  	%rd3350, %rd3348, %rd3349;
	ld.local.u8 	%r2113, [%rd6328+61];
	mul.wide.u32 	%rd3351, %r2113, 65536;
	or.b64  	%rd3352, %rd3350, %rd3351;
	ld.local.u8 	%r2114, [%rd6328+62];
	mul.wide.u32 	%rd3353, %r2114, 256;
	or.b64  	%rd3354, %rd3352, %rd3353;
	ld.local.u8 	%rd3355, [%rd6328+63];
	or.b64  	%rd6320, %rd3354, %rd3355;
	ld.local.u8 	%rd3356, [%rd6328+64];
	shl.b64 	%rd3357, %rd3356, 56;
	ld.local.u8 	%rd3358, [%rd6328+65];
	shl.b64 	%rd3359, %rd3358, 48;
	or.b64  	%rd3360, %rd3359, %rd3357;
	ld.local.u8 	%rd3361, [%rd6328+66];
	shl.b64 	%rd3362, %rd3361, 40;
	or.b64  	%rd3363, %rd3360, %rd3362;
	ld.local.u8 	%rd3364, [%rd6328+67];
	shl.b64 	%rd3365, %rd3364, 32;
	or.b64  	%rd3366, %rd3363, %rd3365;
	ld.local.u8 	%r2115, [%rd6328+68];
	mul.wide.u32 	%rd3367, %r2115, 16777216;
	or.b64  	%rd3368, %rd3366, %rd3367;
	ld.local.u8 	%r2116, [%rd6328+69];
	mul.wide.u32 	%rd3369, %r2116, 65536;
	or.b64  	%rd3370, %rd3368, %rd3369;
	ld.local.u8 	%r2117, [%rd6328+70];
	mul.wide.u32 	%rd3371, %r2117, 256;
	or.b64  	%rd3372, %rd3370, %rd3371;
	ld.local.u8 	%rd3373, [%rd6328+71];
	or.b64  	%rd6319, %rd3372, %rd3373;
	ld.local.u8 	%rd3374, [%rd6328+72];
	shl.b64 	%rd3375, %rd3374, 56;
	ld.local.u8 	%rd3376, [%rd6328+73];
	shl.b64 	%rd3377, %rd3376, 48;
	or.b64  	%rd3378, %rd3377, %rd3375;
	ld.local.u8 	%rd3379, [%rd6328+74];
	shl.b64 	%rd3380, %rd3379, 40;
	or.b64  	%rd3381, %rd3378, %rd3380;
	ld.local.u8 	%rd3382, [%rd6328+75];
	shl.b64 	%rd3383, %rd3382, 32;
	or.b64  	%rd3384, %rd3381, %rd3383;
	ld.local.u8 	%r2118, [%rd6328+76];
	mul.wide.u32 	%rd3385, %r2118, 16777216;
	or.b64  	%rd3386, %rd3384, %rd3385;
	ld.local.u8 	%r2119, [%rd6328+77];
	mul.wide.u32 	%rd3387, %r2119, 65536;
	or.b64  	%rd3388, %rd3386, %rd3387;
	ld.local.u8 	%r2120, [%rd6328+78];
	mul.wide.u32 	%rd3389, %r2120, 256;
	or.b64  	%rd3390, %rd3388, %rd3389;
	ld.local.u8 	%rd3391, [%rd6328+79];
	or.b64  	%rd6318, %rd3390, %rd3391;
	ld.local.u8 	%rd3392, [%rd6328+80];
	shl.b64 	%rd3393, %rd3392, 56;
	ld.local.u8 	%rd3394, [%rd6328+81];
	shl.b64 	%rd3395, %rd3394, 48;
	or.b64  	%rd3396, %rd3395, %rd3393;
	ld.local.u8 	%rd3397, [%rd6328+82];
	shl.b64 	%rd3398, %rd3397, 40;
	or.b64  	%rd3399, %rd3396, %rd3398;
	ld.local.u8 	%rd3400, [%rd6328+83];
	shl.b64 	%rd3401, %rd3400, 32;
	or.b64  	%rd3402, %rd3399, %rd3401;
	ld.local.u8 	%r2121, [%rd6328+84];
	mul.wide.u32 	%rd3403, %r2121, 16777216;
	or.b64  	%rd3404, %rd3402, %rd3403;
	ld.local.u8 	%r2122, [%rd6328+85];
	mul.wide.u32 	%rd3405, %r2122, 65536;
	or.b64  	%rd3406, %rd3404, %rd3405;
	ld.local.u8 	%r2123, [%rd6328+86];
	mul.wide.u32 	%rd3407, %r2123, 256;
	or.b64  	%rd3408, %rd3406, %rd3407;
	ld.local.u8 	%rd3409, [%rd6328+87];
	or.b64  	%rd6317, %rd3408, %rd3409;
	ld.local.u8 	%rd3410, [%rd6328+88];
	shl.b64 	%rd3411, %rd3410, 56;
	ld.local.u8 	%rd3412, [%rd6328+89];
	shl.b64 	%rd3413, %rd3412, 48;
	or.b64  	%rd3414, %rd3413, %rd3411;
	ld.local.u8 	%rd3415, [%rd6328+90];
	shl.b64 	%rd3416, %rd3415, 40;
	or.b64  	%rd3417, %rd3414, %rd3416;
	ld.local.u8 	%rd3418, [%rd6328+91];
	shl.b64 	%rd3419, %rd3418, 32;
	or.b64  	%rd3420, %rd3417, %rd3419;
	ld.local.u8 	%r2124, [%rd6328+92];
	mul.wide.u32 	%rd3421, %r2124, 16777216;
	or.b64  	%rd3422, %rd3420, %rd3421;
	ld.local.u8 	%r2125, [%rd6328+93];
	mul.wide.u32 	%rd3423, %r2125, 65536;
	or.b64  	%rd3424, %rd3422, %rd3423;
	ld.local.u8 	%r2126, [%rd6328+94];
	mul.wide.u32 	%rd3425, %r2126, 256;
	or.b64  	%rd3426, %rd3424, %rd3425;
	ld.local.u8 	%rd3427, [%rd6328+95];
	or.b64  	%rd6316, %rd3426, %rd3427;
	ld.local.u8 	%rd3428, [%rd6328+96];
	shl.b64 	%rd3429, %rd3428, 56;
	ld.local.u8 	%rd3430, [%rd6328+97];
	shl.b64 	%rd3431, %rd3430, 48;
	or.b64  	%rd3432, %rd3431, %rd3429;
	ld.local.u8 	%rd3433, [%rd6328+98];
	shl.b64 	%rd3434, %rd3433, 40;
	or.b64  	%rd3435, %rd3432, %rd3434;
	ld.local.u8 	%rd3436, [%rd6328+99];
	shl.b64 	%rd3437, %rd3436, 32;
	or.b64  	%rd3438, %rd3435, %rd3437;
	ld.local.u8 	%r2127, [%rd6328+100];
	mul.wide.u32 	%rd3439, %r2127, 16777216;
	or.b64  	%rd3440, %rd3438, %rd3439;
	ld.local.u8 	%r2128, [%rd6328+101];
	mul.wide.u32 	%rd3441, %r2128, 65536;
	or.b64  	%rd3442, %rd3440, %rd3441;
	ld.local.u8 	%r2129, [%rd6328+102];
	mul.wide.u32 	%rd3443, %r2129, 256;
	or.b64  	%rd3444, %rd3442, %rd3443;
	ld.local.u8 	%rd3445, [%rd6328+103];
	or.b64  	%rd6315, %rd3444, %rd3445;
	ld.local.u8 	%rd3446, [%rd6328+104];
	shl.b64 	%rd3447, %rd3446, 56;
	ld.local.u8 	%rd3448, [%rd6328+105];
	shl.b64 	%rd3449, %rd3448, 48;
	or.b64  	%rd3450, %rd3449, %rd3447;
	ld.local.u8 	%rd3451, [%rd6328+106];
	shl.b64 	%rd3452, %rd3451, 40;
	or.b64  	%rd3453, %rd3450, %rd3452;
	ld.local.u8 	%rd3454, [%rd6328+107];
	shl.b64 	%rd3455, %rd3454, 32;
	or.b64  	%rd3456, %rd3453, %rd3455;
	ld.local.u8 	%r2130, [%rd6328+108];
	mul.wide.u32 	%rd3457, %r2130, 16777216;
	or.b64  	%rd3458, %rd3456, %rd3457;
	ld.local.u8 	%r2131, [%rd6328+109];
	mul.wide.u32 	%rd3459, %r2131, 65536;
	or.b64  	%rd3460, %rd3458, %rd3459;
	ld.local.u8 	%r2132, [%rd6328+110];
	mul.wide.u32 	%rd3461, %r2132, 256;
	or.b64  	%rd3462, %rd3460, %rd3461;
	ld.local.u8 	%rd3463, [%rd6328+111];
	or.b64  	%rd6314, %rd3462, %rd3463;
	ld.local.u8 	%rd3464, [%rd6328+112];
	shl.b64 	%rd3465, %rd3464, 56;
	ld.local.u8 	%rd3466, [%rd6328+113];
	shl.b64 	%rd3467, %rd3466, 48;
	or.b64  	%rd3468, %rd3467, %rd3465;
	ld.local.u8 	%rd3469, [%rd6328+114];
	shl.b64 	%rd3470, %rd3469, 40;
	or.b64  	%rd3471, %rd3468, %rd3470;
	ld.local.u8 	%rd3472, [%rd6328+115];
	shl.b64 	%rd3473, %rd3472, 32;
	or.b64  	%rd3474, %rd3471, %rd3473;
	ld.local.u8 	%r2133, [%rd6328+116];
	mul.wide.u32 	%rd3475, %r2133, 16777216;
	or.b64  	%rd3476, %rd3474, %rd3475;
	ld.local.u8 	%r2134, [%rd6328+117];
	mul.wide.u32 	%rd3477, %r2134, 65536;
	or.b64  	%rd3478, %rd3476, %rd3477;
	ld.local.u8 	%r2135, [%rd6328+118];
	mul.wide.u32 	%rd3479, %r2135, 256;
	or.b64  	%rd3480, %rd3478, %rd3479;
	ld.local.u8 	%rd3481, [%rd6328+119];
	or.b64  	%rd6313, %rd3480, %rd3481;
	ld.local.u8 	%rd3482, [%rd6328+120];
	ld.local.u8 	%rd3483, [%rd6328+121];
	ld.local.u8 	%rd3484, [%rd6328+122];
	ld.local.u8 	%rd3485, [%rd6328+123];
	ld.local.u8 	%r2136, [%rd6328+124];
	mul.wide.u32 	%rd3486, %r2136, 16777216;
	ld.local.u8 	%r2137, [%rd6328+125];
	mul.wide.u32 	%rd3487, %r2137, 65536;
	ld.local.u8 	%r2138, [%rd6328+126];
	mul.wide.u32 	%rd3488, %r2138, 256;
	ld.local.u8 	%rd3489, [%rd6328+127];
	shl.b64 	%rd3490, %rd3483, 48;
	shl.b64 	%rd3491, %rd3482, 56;
	shl.b64 	%rd3492, %rd3484, 40;
	or.b64  	%rd3493, %rd3490, %rd3491;
	shl.b64 	%rd3494, %rd3485, 32;
	or.b64  	%rd3495, %rd3493, %rd3492;
	or.b64  	%rd3496, %rd3495, %rd3494;
	or.b64  	%rd3497, %rd3496, %rd3486;
	or.b64  	%rd3498, %rd3497, %rd3487;
	or.b64  	%rd3499, %rd3498, %rd3488;
	or.b64  	%rd6312, %rd3499, %rd3489;
	bra.uni 	$L__BB1_16;

$L__BB1_15:
	ld.local.u64 	%rd3500, [%rd6328];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2139, %temp}, %rd3500;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2140}, %rd3500;
	}
	mov.u32 	%r2141, 291;
	mov.u32 	%r2142, 0;
	prmt.b32 	%r2143, %r2139, %r2142, %r2141;
	prmt.b32 	%r2144, %r2140, %r2142, %r2141;
	mov.b64 	%rd6327, {%r2144, %r2143};
	ld.local.u64 	%rd3501, [%rd6328+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2145, %temp}, %rd3501;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2146}, %rd3501;
	}
	prmt.b32 	%r2147, %r2145, %r2142, %r2141;
	prmt.b32 	%r2148, %r2146, %r2142, %r2141;
	mov.b64 	%rd6326, {%r2148, %r2147};
	ld.local.u64 	%rd3502, [%rd6328+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2149, %temp}, %rd3502;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2150}, %rd3502;
	}
	prmt.b32 	%r2151, %r2149, %r2142, %r2141;
	prmt.b32 	%r2152, %r2150, %r2142, %r2141;
	mov.b64 	%rd6325, {%r2152, %r2151};
	ld.local.u64 	%rd3503, [%rd6328+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2153, %temp}, %rd3503;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2154}, %rd3503;
	}
	prmt.b32 	%r2155, %r2153, %r2142, %r2141;
	prmt.b32 	%r2156, %r2154, %r2142, %r2141;
	mov.b64 	%rd6324, {%r2156, %r2155};
	ld.local.u64 	%rd3504, [%rd6328+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2157, %temp}, %rd3504;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2158}, %rd3504;
	}
	prmt.b32 	%r2159, %r2157, %r2142, %r2141;
	prmt.b32 	%r2160, %r2158, %r2142, %r2141;
	mov.b64 	%rd6323, {%r2160, %r2159};
	ld.local.u64 	%rd3505, [%rd6328+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2161, %temp}, %rd3505;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2162}, %rd3505;
	}
	prmt.b32 	%r2163, %r2161, %r2142, %r2141;
	prmt.b32 	%r2164, %r2162, %r2142, %r2141;
	mov.b64 	%rd6322, {%r2164, %r2163};
	ld.local.u64 	%rd3506, [%rd6328+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2165, %temp}, %rd3506;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2166}, %rd3506;
	}
	prmt.b32 	%r2167, %r2165, %r2142, %r2141;
	prmt.b32 	%r2168, %r2166, %r2142, %r2141;
	mov.b64 	%rd6321, {%r2168, %r2167};
	ld.local.u64 	%rd3507, [%rd6328+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2169, %temp}, %rd3507;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2170}, %rd3507;
	}
	prmt.b32 	%r2171, %r2169, %r2142, %r2141;
	prmt.b32 	%r2172, %r2170, %r2142, %r2141;
	mov.b64 	%rd6320, {%r2172, %r2171};
	ld.local.u64 	%rd3508, [%rd6328+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2173, %temp}, %rd3508;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2174}, %rd3508;
	}
	prmt.b32 	%r2175, %r2173, %r2142, %r2141;
	prmt.b32 	%r2176, %r2174, %r2142, %r2141;
	mov.b64 	%rd6319, {%r2176, %r2175};
	ld.local.u64 	%rd3509, [%rd6328+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2177, %temp}, %rd3509;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2178}, %rd3509;
	}
	prmt.b32 	%r2179, %r2177, %r2142, %r2141;
	prmt.b32 	%r2180, %r2178, %r2142, %r2141;
	mov.b64 	%rd6318, {%r2180, %r2179};
	ld.local.u64 	%rd3510, [%rd6328+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2181, %temp}, %rd3510;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2182}, %rd3510;
	}
	prmt.b32 	%r2183, %r2181, %r2142, %r2141;
	prmt.b32 	%r2184, %r2182, %r2142, %r2141;
	mov.b64 	%rd6317, {%r2184, %r2183};
	ld.local.u64 	%rd3511, [%rd6328+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2185, %temp}, %rd3511;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2186}, %rd3511;
	}
	prmt.b32 	%r2187, %r2185, %r2142, %r2141;
	prmt.b32 	%r2188, %r2186, %r2142, %r2141;
	mov.b64 	%rd6316, {%r2188, %r2187};
	ld.local.u64 	%rd3512, [%rd6328+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2189, %temp}, %rd3512;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2190}, %rd3512;
	}
	prmt.b32 	%r2191, %r2189, %r2142, %r2141;
	prmt.b32 	%r2192, %r2190, %r2142, %r2141;
	mov.b64 	%rd6315, {%r2192, %r2191};
	ld.local.u64 	%rd3513, [%rd6328+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2193, %temp}, %rd3513;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2194}, %rd3513;
	}
	prmt.b32 	%r2195, %r2193, %r2142, %r2141;
	prmt.b32 	%r2196, %r2194, %r2142, %r2141;
	mov.b64 	%rd6314, {%r2196, %r2195};
	ld.local.u64 	%rd3514, [%rd6328+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2197, %temp}, %rd3514;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2198}, %rd3514;
	}
	prmt.b32 	%r2199, %r2197, %r2142, %r2141;
	prmt.b32 	%r2200, %r2198, %r2142, %r2141;
	mov.b64 	%rd6313, {%r2200, %r2199};
	ld.local.u64 	%rd3515, [%rd6328+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2201, %temp}, %rd3515;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2202}, %rd3515;
	}
	prmt.b32 	%r2203, %r2201, %r2142, %r2141;
	prmt.b32 	%r2204, %r2202, %r2142, %r2141;
	mov.b64 	%rd6312, {%r2204, %r2203};

$L__BB1_16:
	ld.local.u64 	%rd3516, [%rd2+64];
	add.s64 	%rd3517, %rd6327, %rd3516;
	ld.local.u64 	%rd3518, [%rd2+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd3518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2206}, %rd3518;
	}
	shf.r.wrap.b32 	%r2207, %r2206, %r2205, 14;
	shf.r.wrap.b32 	%r2208, %r2205, %r2206, 14;
	mov.b64 	%rd3519, {%r2208, %r2207};
	shf.r.wrap.b32 	%r2209, %r2206, %r2205, 18;
	shf.r.wrap.b32 	%r2210, %r2205, %r2206, 18;
	mov.b64 	%rd3520, {%r2210, %r2209};
	xor.b64  	%rd3521, %rd3519, %rd3520;
	shf.l.wrap.b32 	%r2211, %r2205, %r2206, 23;
	shf.l.wrap.b32 	%r2212, %r2206, %r2205, 23;
	mov.b64 	%rd3522, {%r2212, %r2211};
	xor.b64  	%rd3523, %rd3521, %rd3522;
	add.s64 	%rd3524, %rd3517, %rd3523;
	ld.local.u64 	%rd3525, [%rd2+56];
	ld.local.u64 	%rd3526, [%rd2+48];
	xor.b64  	%rd3527, %rd3525, %rd3526;
	and.b64  	%rd3528, %rd3527, %rd3518;
	xor.b64  	%rd3529, %rd3528, %rd3525;
	add.s64 	%rd3530, %rd3524, %rd3529;
	add.s64 	%rd3531, %rd3530, 4794697086780616226;
	ld.local.u64 	%rd3532, [%rd2+32];
	add.s64 	%rd3533, %rd3531, %rd3532;
	ld.local.u64 	%rd3534, [%rd2+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd3534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd3534;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 28;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 28;
	mov.b64 	%rd3535, {%r2216, %r2215};
	shf.l.wrap.b32 	%r2217, %r2213, %r2214, 30;
	shf.l.wrap.b32 	%r2218, %r2214, %r2213, 30;
	mov.b64 	%rd3536, {%r2218, %r2217};
	xor.b64  	%rd3537, %rd3535, %rd3536;
	shf.l.wrap.b32 	%r2219, %r2213, %r2214, 25;
	shf.l.wrap.b32 	%r2220, %r2214, %r2213, 25;
	mov.b64 	%rd3538, {%r2220, %r2219};
	xor.b64  	%rd3539, %rd3537, %rd3538;
	ld.local.u64 	%rd3540, [%rd2+16];
	and.b64  	%rd3541, %rd3540, %rd3534;
	or.b64  	%rd3542, %rd3540, %rd3534;
	ld.local.u64 	%rd3543, [%rd2+24];
	and.b64  	%rd3544, %rd3543, %rd3542;
	or.b64  	%rd3545, %rd3544, %rd3541;
	add.s64 	%rd3546, %rd3545, %rd3539;
	add.s64 	%rd3547, %rd3546, %rd3531;
	add.s64 	%rd3548, %rd6326, %rd3525;
	xor.b64  	%rd3549, %rd3526, %rd3518;
	and.b64  	%rd3550, %rd3533, %rd3549;
	xor.b64  	%rd3551, %rd3550, %rd3526;
	add.s64 	%rd3552, %rd3548, %rd3551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2221,%dummy}, %rd3533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd3533;
	}
	shf.r.wrap.b32 	%r2223, %r2222, %r2221, 14;
	shf.r.wrap.b32 	%r2224, %r2221, %r2222, 14;
	mov.b64 	%rd3553, {%r2224, %r2223};
	shf.r.wrap.b32 	%r2225, %r2222, %r2221, 18;
	shf.r.wrap.b32 	%r2226, %r2221, %r2222, 18;
	mov.b64 	%rd3554, {%r2226, %r2225};
	xor.b64  	%rd3555, %rd3553, %rd3554;
	shf.l.wrap.b32 	%r2227, %r2221, %r2222, 23;
	shf.l.wrap.b32 	%r2228, %r2222, %r2221, 23;
	mov.b64 	%rd3556, {%r2228, %r2227};
	xor.b64  	%rd3557, %rd3555, %rd3556;
	add.s64 	%rd3558, %rd3552, %rd3557;
	add.s64 	%rd3559, %rd3558, 8158064640168781261;
	add.s64 	%rd3560, %rd3559, %rd3543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd3547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2230}, %rd3547;
	}
	shf.r.wrap.b32 	%r2231, %r2230, %r2229, 28;
	shf.r.wrap.b32 	%r2232, %r2229, %r2230, 28;
	mov.b64 	%rd3561, {%r2232, %r2231};
	shf.l.wrap.b32 	%r2233, %r2229, %r2230, 30;
	shf.l.wrap.b32 	%r2234, %r2230, %r2229, 30;
	mov.b64 	%rd3562, {%r2234, %r2233};
	xor.b64  	%rd3563, %rd3561, %rd3562;
	shf.l.wrap.b32 	%r2235, %r2229, %r2230, 25;
	shf.l.wrap.b32 	%r2236, %r2230, %r2229, 25;
	mov.b64 	%rd3564, {%r2236, %r2235};
	xor.b64  	%rd3565, %rd3563, %rd3564;
	and.b64  	%rd3566, %rd3547, %rd3534;
	or.b64  	%rd3567, %rd3547, %rd3534;
	and.b64  	%rd3568, %rd3567, %rd3540;
	or.b64  	%rd3569, %rd3568, %rd3566;
	add.s64 	%rd3570, %rd3569, %rd3565;
	add.s64 	%rd3571, %rd3570, %rd3559;
	add.s64 	%rd3572, %rd6325, %rd3526;
	xor.b64  	%rd3573, %rd3533, %rd3518;
	and.b64  	%rd3574, %rd3560, %rd3573;
	xor.b64  	%rd3575, %rd3574, %rd3518;
	add.s64 	%rd3576, %rd3572, %rd3575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd3560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd3560;
	}
	shf.r.wrap.b32 	%r2239, %r2238, %r2237, 14;
	shf.r.wrap.b32 	%r2240, %r2237, %r2238, 14;
	mov.b64 	%rd3577, {%r2240, %r2239};
	shf.r.wrap.b32 	%r2241, %r2238, %r2237, 18;
	shf.r.wrap.b32 	%r2242, %r2237, %r2238, 18;
	mov.b64 	%rd3578, {%r2242, %r2241};
	xor.b64  	%rd3579, %rd3577, %rd3578;
	shf.l.wrap.b32 	%r2243, %r2237, %r2238, 23;
	shf.l.wrap.b32 	%r2244, %r2238, %r2237, 23;
	mov.b64 	%rd3580, {%r2244, %r2243};
	xor.b64  	%rd3581, %rd3579, %rd3580;
	add.s64 	%rd3582, %rd3576, %rd3581;
	add.s64 	%rd3583, %rd3582, -5349999486874862801;
	add.s64 	%rd3584, %rd3583, %rd3540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd3571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd3571;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3585, {%r2248, %r2247};
	shf.l.wrap.b32 	%r2249, %r2245, %r2246, 30;
	shf.l.wrap.b32 	%r2250, %r2246, %r2245, 30;
	mov.b64 	%rd3586, {%r2250, %r2249};
	xor.b64  	%rd3587, %rd3585, %rd3586;
	shf.l.wrap.b32 	%r2251, %r2245, %r2246, 25;
	shf.l.wrap.b32 	%r2252, %r2246, %r2245, 25;
	mov.b64 	%rd3588, {%r2252, %r2251};
	xor.b64  	%rd3589, %rd3587, %rd3588;
	and.b64  	%rd3590, %rd3571, %rd3547;
	or.b64  	%rd3591, %rd3571, %rd3547;
	and.b64  	%rd3592, %rd3591, %rd3534;
	or.b64  	%rd3593, %rd3592, %rd3590;
	add.s64 	%rd3594, %rd3593, %rd3589;
	add.s64 	%rd3595, %rd3594, %rd3583;
	add.s64 	%rd3596, %rd6324, %rd3518;
	xor.b64  	%rd3597, %rd3560, %rd3533;
	and.b64  	%rd3598, %rd3584, %rd3597;
	xor.b64  	%rd3599, %rd3598, %rd3533;
	add.s64 	%rd3600, %rd3596, %rd3599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd3584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd3584;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 14;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 14;
	mov.b64 	%rd3601, {%r2256, %r2255};
	shf.r.wrap.b32 	%r2257, %r2254, %r2253, 18;
	shf.r.wrap.b32 	%r2258, %r2253, %r2254, 18;
	mov.b64 	%rd3602, {%r2258, %r2257};
	xor.b64  	%rd3603, %rd3601, %rd3602;
	shf.l.wrap.b32 	%r2259, %r2253, %r2254, 23;
	shf.l.wrap.b32 	%r2260, %r2254, %r2253, 23;
	mov.b64 	%rd3604, {%r2260, %r2259};
	xor.b64  	%rd3605, %rd3603, %rd3604;
	add.s64 	%rd3606, %rd3600, %rd3605;
	add.s64 	%rd3607, %rd3606, -1606136188198331460;
	add.s64 	%rd3608, %rd3607, %rd3534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd3595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3595;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 28;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 28;
	mov.b64 	%rd3609, {%r2264, %r2263};
	shf.l.wrap.b32 	%r2265, %r2261, %r2262, 30;
	shf.l.wrap.b32 	%r2266, %r2262, %r2261, 30;
	mov.b64 	%rd3610, {%r2266, %r2265};
	xor.b64  	%rd3611, %rd3609, %rd3610;
	shf.l.wrap.b32 	%r2267, %r2261, %r2262, 25;
	shf.l.wrap.b32 	%r2268, %r2262, %r2261, 25;
	mov.b64 	%rd3612, {%r2268, %r2267};
	xor.b64  	%rd3613, %rd3611, %rd3612;
	and.b64  	%rd3614, %rd3595, %rd3571;
	or.b64  	%rd3615, %rd3595, %rd3571;
	and.b64  	%rd3616, %rd3615, %rd3547;
	or.b64  	%rd3617, %rd3616, %rd3614;
	add.s64 	%rd3618, %rd3617, %rd3613;
	add.s64 	%rd3619, %rd3618, %rd3607;
	add.s64 	%rd3620, %rd6323, %rd3533;
	xor.b64  	%rd3621, %rd3584, %rd3560;
	and.b64  	%rd3622, %rd3608, %rd3621;
	xor.b64  	%rd3623, %rd3622, %rd3560;
	add.s64 	%rd3624, %rd3620, %rd3623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd3608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd3608;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 14;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 14;
	mov.b64 	%rd3625, {%r2272, %r2271};
	shf.r.wrap.b32 	%r2273, %r2270, %r2269, 18;
	shf.r.wrap.b32 	%r2274, %r2269, %r2270, 18;
	mov.b64 	%rd3626, {%r2274, %r2273};
	xor.b64  	%rd3627, %rd3625, %rd3626;
	shf.l.wrap.b32 	%r2275, %r2269, %r2270, 23;
	shf.l.wrap.b32 	%r2276, %r2270, %r2269, 23;
	mov.b64 	%rd3628, {%r2276, %r2275};
	xor.b64  	%rd3629, %rd3627, %rd3628;
	add.s64 	%rd3630, %rd3624, %rd3629;
	add.s64 	%rd3631, %rd3630, 4131703408338449720;
	add.s64 	%rd3632, %rd3631, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd3619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd3619;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 28;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 28;
	mov.b64 	%rd3633, {%r2280, %r2279};
	shf.l.wrap.b32 	%r2281, %r2277, %r2278, 30;
	shf.l.wrap.b32 	%r2282, %r2278, %r2277, 30;
	mov.b64 	%rd3634, {%r2282, %r2281};
	xor.b64  	%rd3635, %rd3633, %rd3634;
	shf.l.wrap.b32 	%r2283, %r2277, %r2278, 25;
	shf.l.wrap.b32 	%r2284, %r2278, %r2277, 25;
	mov.b64 	%rd3636, {%r2284, %r2283};
	xor.b64  	%rd3637, %rd3635, %rd3636;
	and.b64  	%rd3638, %rd3619, %rd3595;
	or.b64  	%rd3639, %rd3619, %rd3595;
	and.b64  	%rd3640, %rd3639, %rd3571;
	or.b64  	%rd3641, %rd3640, %rd3638;
	add.s64 	%rd3642, %rd3641, %rd3637;
	add.s64 	%rd3643, %rd3642, %rd3631;
	add.s64 	%rd3644, %rd6322, %rd3560;
	xor.b64  	%rd3645, %rd3608, %rd3584;
	and.b64  	%rd3646, %rd3632, %rd3645;
	xor.b64  	%rd3647, %rd3646, %rd3584;
	add.s64 	%rd3648, %rd3644, %rd3647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2285,%dummy}, %rd3632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2286}, %rd3632;
	}
	shf.r.wrap.b32 	%r2287, %r2286, %r2285, 14;
	shf.r.wrap.b32 	%r2288, %r2285, %r2286, 14;
	mov.b64 	%rd3649, {%r2288, %r2287};
	shf.r.wrap.b32 	%r2289, %r2286, %r2285, 18;
	shf.r.wrap.b32 	%r2290, %r2285, %r2286, 18;
	mov.b64 	%rd3650, {%r2290, %r2289};
	xor.b64  	%rd3651, %rd3649, %rd3650;
	shf.l.wrap.b32 	%r2291, %r2285, %r2286, 23;
	shf.l.wrap.b32 	%r2292, %r2286, %r2285, 23;
	mov.b64 	%rd3652, {%r2292, %r2291};
	xor.b64  	%rd3653, %rd3651, %rd3652;
	add.s64 	%rd3654, %rd3648, %rd3653;
	add.s64 	%rd3655, %rd3654, 6480981068601479193;
	add.s64 	%rd3656, %rd3655, %rd3571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd3643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd3643;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 28;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 28;
	mov.b64 	%rd3657, {%r2296, %r2295};
	shf.l.wrap.b32 	%r2297, %r2293, %r2294, 30;
	shf.l.wrap.b32 	%r2298, %r2294, %r2293, 30;
	mov.b64 	%rd3658, {%r2298, %r2297};
	xor.b64  	%rd3659, %rd3657, %rd3658;
	shf.l.wrap.b32 	%r2299, %r2293, %r2294, 25;
	shf.l.wrap.b32 	%r2300, %r2294, %r2293, 25;
	mov.b64 	%rd3660, {%r2300, %r2299};
	xor.b64  	%rd3661, %rd3659, %rd3660;
	and.b64  	%rd3662, %rd3643, %rd3619;
	or.b64  	%rd3663, %rd3643, %rd3619;
	and.b64  	%rd3664, %rd3663, %rd3595;
	or.b64  	%rd3665, %rd3664, %rd3662;
	add.s64 	%rd3666, %rd3665, %rd3661;
	add.s64 	%rd3667, %rd3666, %rd3655;
	add.s64 	%rd3668, %rd6321, %rd3584;
	xor.b64  	%rd3669, %rd3632, %rd3608;
	and.b64  	%rd3670, %rd3656, %rd3669;
	xor.b64  	%rd3671, %rd3670, %rd3608;
	add.s64 	%rd3672, %rd3668, %rd3671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd3656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd3656;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 14;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 14;
	mov.b64 	%rd3673, {%r2304, %r2303};
	shf.r.wrap.b32 	%r2305, %r2302, %r2301, 18;
	shf.r.wrap.b32 	%r2306, %r2301, %r2302, 18;
	mov.b64 	%rd3674, {%r2306, %r2305};
	xor.b64  	%rd3675, %rd3673, %rd3674;
	shf.l.wrap.b32 	%r2307, %r2301, %r2302, 23;
	shf.l.wrap.b32 	%r2308, %r2302, %r2301, 23;
	mov.b64 	%rd3676, {%r2308, %r2307};
	xor.b64  	%rd3677, %rd3675, %rd3676;
	add.s64 	%rd3678, %rd3672, %rd3677;
	add.s64 	%rd3679, %rd3678, -7908458776815382629;
	add.s64 	%rd3680, %rd3679, %rd3595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2309,%dummy}, %rd3667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2310}, %rd3667;
	}
	shf.r.wrap.b32 	%r2311, %r2310, %r2309, 28;
	shf.r.wrap.b32 	%r2312, %r2309, %r2310, 28;
	mov.b64 	%rd3681, {%r2312, %r2311};
	shf.l.wrap.b32 	%r2313, %r2309, %r2310, 30;
	shf.l.wrap.b32 	%r2314, %r2310, %r2309, 30;
	mov.b64 	%rd3682, {%r2314, %r2313};
	xor.b64  	%rd3683, %rd3681, %rd3682;
	shf.l.wrap.b32 	%r2315, %r2309, %r2310, 25;
	shf.l.wrap.b32 	%r2316, %r2310, %r2309, 25;
	mov.b64 	%rd3684, {%r2316, %r2315};
	xor.b64  	%rd3685, %rd3683, %rd3684;
	and.b64  	%rd3686, %rd3667, %rd3643;
	or.b64  	%rd3687, %rd3667, %rd3643;
	and.b64  	%rd3688, %rd3687, %rd3619;
	or.b64  	%rd3689, %rd3688, %rd3686;
	add.s64 	%rd3690, %rd3689, %rd3685;
	add.s64 	%rd3691, %rd3690, %rd3679;
	add.s64 	%rd3692, %rd6320, %rd3608;
	xor.b64  	%rd3693, %rd3656, %rd3632;
	and.b64  	%rd3694, %rd3680, %rd3693;
	xor.b64  	%rd3695, %rd3694, %rd3632;
	add.s64 	%rd3696, %rd3692, %rd3695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2317,%dummy}, %rd3680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2318}, %rd3680;
	}
	shf.r.wrap.b32 	%r2319, %r2318, %r2317, 14;
	shf.r.wrap.b32 	%r2320, %r2317, %r2318, 14;
	mov.b64 	%rd3697, {%r2320, %r2319};
	shf.r.wrap.b32 	%r2321, %r2318, %r2317, 18;
	shf.r.wrap.b32 	%r2322, %r2317, %r2318, 18;
	mov.b64 	%rd3698, {%r2322, %r2321};
	xor.b64  	%rd3699, %rd3697, %rd3698;
	shf.l.wrap.b32 	%r2323, %r2317, %r2318, 23;
	shf.l.wrap.b32 	%r2324, %r2318, %r2317, 23;
	mov.b64 	%rd3700, {%r2324, %r2323};
	xor.b64  	%rd3701, %rd3699, %rd3700;
	add.s64 	%rd3702, %rd3696, %rd3701;
	add.s64 	%rd3703, %rd3702, -6116909921290321640;
	add.s64 	%rd3704, %rd3703, %rd3619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd3691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd3691;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 28;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 28;
	mov.b64 	%rd3705, {%r2328, %r2327};
	shf.l.wrap.b32 	%r2329, %r2325, %r2326, 30;
	shf.l.wrap.b32 	%r2330, %r2326, %r2325, 30;
	mov.b64 	%rd3706, {%r2330, %r2329};
	xor.b64  	%rd3707, %rd3705, %rd3706;
	shf.l.wrap.b32 	%r2331, %r2325, %r2326, 25;
	shf.l.wrap.b32 	%r2332, %r2326, %r2325, 25;
	mov.b64 	%rd3708, {%r2332, %r2331};
	xor.b64  	%rd3709, %rd3707, %rd3708;
	and.b64  	%rd3710, %rd3691, %rd3667;
	or.b64  	%rd3711, %rd3691, %rd3667;
	and.b64  	%rd3712, %rd3711, %rd3643;
	or.b64  	%rd3713, %rd3712, %rd3710;
	add.s64 	%rd3714, %rd3713, %rd3709;
	add.s64 	%rd3715, %rd3714, %rd3703;
	add.s64 	%rd3716, %rd6319, %rd3632;
	xor.b64  	%rd3717, %rd3680, %rd3656;
	and.b64  	%rd3718, %rd3704, %rd3717;
	xor.b64  	%rd3719, %rd3718, %rd3656;
	add.s64 	%rd3720, %rd3716, %rd3719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd3704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd3704;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 14;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 14;
	mov.b64 	%rd3721, {%r2336, %r2335};
	shf.r.wrap.b32 	%r2337, %r2334, %r2333, 18;
	shf.r.wrap.b32 	%r2338, %r2333, %r2334, 18;
	mov.b64 	%rd3722, {%r2338, %r2337};
	xor.b64  	%rd3723, %rd3721, %rd3722;
	shf.l.wrap.b32 	%r2339, %r2333, %r2334, 23;
	shf.l.wrap.b32 	%r2340, %r2334, %r2333, 23;
	mov.b64 	%rd3724, {%r2340, %r2339};
	xor.b64  	%rd3725, %rd3723, %rd3724;
	add.s64 	%rd3726, %rd3720, %rd3725;
	add.s64 	%rd3727, %rd3726, -2880145864133508542;
	add.s64 	%rd3728, %rd3727, %rd3643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2341,%dummy}, %rd3715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2342}, %rd3715;
	}
	shf.r.wrap.b32 	%r2343, %r2342, %r2341, 28;
	shf.r.wrap.b32 	%r2344, %r2341, %r2342, 28;
	mov.b64 	%rd3729, {%r2344, %r2343};
	shf.l.wrap.b32 	%r2345, %r2341, %r2342, 30;
	shf.l.wrap.b32 	%r2346, %r2342, %r2341, 30;
	mov.b64 	%rd3730, {%r2346, %r2345};
	xor.b64  	%rd3731, %rd3729, %rd3730;
	shf.l.wrap.b32 	%r2347, %r2341, %r2342, 25;
	shf.l.wrap.b32 	%r2348, %r2342, %r2341, 25;
	mov.b64 	%rd3732, {%r2348, %r2347};
	xor.b64  	%rd3733, %rd3731, %rd3732;
	and.b64  	%rd3734, %rd3715, %rd3691;
	or.b64  	%rd3735, %rd3715, %rd3691;
	and.b64  	%rd3736, %rd3735, %rd3667;
	or.b64  	%rd3737, %rd3736, %rd3734;
	add.s64 	%rd3738, %rd3737, %rd3733;
	add.s64 	%rd3739, %rd3738, %rd3727;
	add.s64 	%rd3740, %rd6318, %rd3656;
	xor.b64  	%rd3741, %rd3704, %rd3680;
	and.b64  	%rd3742, %rd3728, %rd3741;
	xor.b64  	%rd3743, %rd3742, %rd3680;
	add.s64 	%rd3744, %rd3740, %rd3743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2349,%dummy}, %rd3728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2350}, %rd3728;
	}
	shf.r.wrap.b32 	%r2351, %r2350, %r2349, 14;
	shf.r.wrap.b32 	%r2352, %r2349, %r2350, 14;
	mov.b64 	%rd3745, {%r2352, %r2351};
	shf.r.wrap.b32 	%r2353, %r2350, %r2349, 18;
	shf.r.wrap.b32 	%r2354, %r2349, %r2350, 18;
	mov.b64 	%rd3746, {%r2354, %r2353};
	xor.b64  	%rd3747, %rd3745, %rd3746;
	shf.l.wrap.b32 	%r2355, %r2349, %r2350, 23;
	shf.l.wrap.b32 	%r2356, %r2350, %r2349, 23;
	mov.b64 	%rd3748, {%r2356, %r2355};
	xor.b64  	%rd3749, %rd3747, %rd3748;
	add.s64 	%rd3750, %rd3744, %rd3749;
	add.s64 	%rd3751, %rd3750, 1334009975649890238;
	add.s64 	%rd3752, %rd3751, %rd3667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd3739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd3739;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 28;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 28;
	mov.b64 	%rd3753, {%r2360, %r2359};
	shf.l.wrap.b32 	%r2361, %r2357, %r2358, 30;
	shf.l.wrap.b32 	%r2362, %r2358, %r2357, 30;
	mov.b64 	%rd3754, {%r2362, %r2361};
	xor.b64  	%rd3755, %rd3753, %rd3754;
	shf.l.wrap.b32 	%r2363, %r2357, %r2358, 25;
	shf.l.wrap.b32 	%r2364, %r2358, %r2357, 25;
	mov.b64 	%rd3756, {%r2364, %r2363};
	xor.b64  	%rd3757, %rd3755, %rd3756;
	and.b64  	%rd3758, %rd3739, %rd3715;
	or.b64  	%rd3759, %rd3739, %rd3715;
	and.b64  	%rd3760, %rd3759, %rd3691;
	or.b64  	%rd3761, %rd3760, %rd3758;
	add.s64 	%rd3762, %rd3761, %rd3757;
	add.s64 	%rd3763, %rd3762, %rd3751;
	add.s64 	%rd3764, %rd6317, %rd3680;
	xor.b64  	%rd3765, %rd3728, %rd3704;
	and.b64  	%rd3766, %rd3752, %rd3765;
	xor.b64  	%rd3767, %rd3766, %rd3704;
	add.s64 	%rd3768, %rd3764, %rd3767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2365,%dummy}, %rd3752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2366}, %rd3752;
	}
	shf.r.wrap.b32 	%r2367, %r2366, %r2365, 14;
	shf.r.wrap.b32 	%r2368, %r2365, %r2366, 14;
	mov.b64 	%rd3769, {%r2368, %r2367};
	shf.r.wrap.b32 	%r2369, %r2366, %r2365, 18;
	shf.r.wrap.b32 	%r2370, %r2365, %r2366, 18;
	mov.b64 	%rd3770, {%r2370, %r2369};
	xor.b64  	%rd3771, %rd3769, %rd3770;
	shf.l.wrap.b32 	%r2371, %r2365, %r2366, 23;
	shf.l.wrap.b32 	%r2372, %r2366, %r2365, 23;
	mov.b64 	%rd3772, {%r2372, %r2371};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	add.s64 	%rd3774, %rd3768, %rd3773;
	add.s64 	%rd3775, %rd3774, 2608012711638119052;
	add.s64 	%rd3776, %rd3775, %rd3691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd3763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd3763;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 28;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 28;
	mov.b64 	%rd3777, {%r2376, %r2375};
	shf.l.wrap.b32 	%r2377, %r2373, %r2374, 30;
	shf.l.wrap.b32 	%r2378, %r2374, %r2373, 30;
	mov.b64 	%rd3778, {%r2378, %r2377};
	xor.b64  	%rd3779, %rd3777, %rd3778;
	shf.l.wrap.b32 	%r2379, %r2373, %r2374, 25;
	shf.l.wrap.b32 	%r2380, %r2374, %r2373, 25;
	mov.b64 	%rd3780, {%r2380, %r2379};
	xor.b64  	%rd3781, %rd3779, %rd3780;
	and.b64  	%rd3782, %rd3763, %rd3739;
	or.b64  	%rd3783, %rd3763, %rd3739;
	and.b64  	%rd3784, %rd3783, %rd3715;
	or.b64  	%rd3785, %rd3784, %rd3782;
	add.s64 	%rd3786, %rd3785, %rd3781;
	add.s64 	%rd3787, %rd3786, %rd3775;
	add.s64 	%rd3788, %rd6316, %rd3704;
	xor.b64  	%rd3789, %rd3752, %rd3728;
	and.b64  	%rd3790, %rd3776, %rd3789;
	xor.b64  	%rd3791, %rd3790, %rd3728;
	add.s64 	%rd3792, %rd3788, %rd3791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2381,%dummy}, %rd3776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2382}, %rd3776;
	}
	shf.r.wrap.b32 	%r2383, %r2382, %r2381, 14;
	shf.r.wrap.b32 	%r2384, %r2381, %r2382, 14;
	mov.b64 	%rd3793, {%r2384, %r2383};
	shf.r.wrap.b32 	%r2385, %r2382, %r2381, 18;
	shf.r.wrap.b32 	%r2386, %r2381, %r2382, 18;
	mov.b64 	%rd3794, {%r2386, %r2385};
	xor.b64  	%rd3795, %rd3793, %rd3794;
	shf.l.wrap.b32 	%r2387, %r2381, %r2382, 23;
	shf.l.wrap.b32 	%r2388, %r2382, %r2381, 23;
	mov.b64 	%rd3796, {%r2388, %r2387};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	add.s64 	%rd3798, %rd3792, %rd3797;
	add.s64 	%rd3799, %rd3798, 6128411473006802146;
	add.s64 	%rd3800, %rd3799, %rd3715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2389,%dummy}, %rd3787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2390}, %rd3787;
	}
	shf.r.wrap.b32 	%r2391, %r2390, %r2389, 28;
	shf.r.wrap.b32 	%r2392, %r2389, %r2390, 28;
	mov.b64 	%rd3801, {%r2392, %r2391};
	shf.l.wrap.b32 	%r2393, %r2389, %r2390, 30;
	shf.l.wrap.b32 	%r2394, %r2390, %r2389, 30;
	mov.b64 	%rd3802, {%r2394, %r2393};
	xor.b64  	%rd3803, %rd3801, %rd3802;
	shf.l.wrap.b32 	%r2395, %r2389, %r2390, 25;
	shf.l.wrap.b32 	%r2396, %r2390, %r2389, 25;
	mov.b64 	%rd3804, {%r2396, %r2395};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	and.b64  	%rd3806, %rd3787, %rd3763;
	or.b64  	%rd3807, %rd3787, %rd3763;
	and.b64  	%rd3808, %rd3807, %rd3739;
	or.b64  	%rd3809, %rd3808, %rd3806;
	add.s64 	%rd3810, %rd3809, %rd3805;
	add.s64 	%rd3811, %rd3810, %rd3799;
	add.s64 	%rd3812, %rd6315, %rd3728;
	xor.b64  	%rd3813, %rd3776, %rd3752;
	and.b64  	%rd3814, %rd3800, %rd3813;
	xor.b64  	%rd3815, %rd3814, %rd3752;
	add.s64 	%rd3816, %rd3812, %rd3815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2397,%dummy}, %rd3800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2398}, %rd3800;
	}
	shf.r.wrap.b32 	%r2399, %r2398, %r2397, 14;
	shf.r.wrap.b32 	%r2400, %r2397, %r2398, 14;
	mov.b64 	%rd3817, {%r2400, %r2399};
	shf.r.wrap.b32 	%r2401, %r2398, %r2397, 18;
	shf.r.wrap.b32 	%r2402, %r2397, %r2398, 18;
	mov.b64 	%rd3818, {%r2402, %r2401};
	xor.b64  	%rd3819, %rd3817, %rd3818;
	shf.l.wrap.b32 	%r2403, %r2397, %r2398, 23;
	shf.l.wrap.b32 	%r2404, %r2398, %r2397, 23;
	mov.b64 	%rd3820, {%r2404, %r2403};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	add.s64 	%rd3822, %rd3816, %rd3821;
	add.s64 	%rd3823, %rd3822, 8268148722764581231;
	add.s64 	%rd3824, %rd3823, %rd3739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2405,%dummy}, %rd3811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2406}, %rd3811;
	}
	shf.r.wrap.b32 	%r2407, %r2406, %r2405, 28;
	shf.r.wrap.b32 	%r2408, %r2405, %r2406, 28;
	mov.b64 	%rd3825, {%r2408, %r2407};
	shf.l.wrap.b32 	%r2409, %r2405, %r2406, 30;
	shf.l.wrap.b32 	%r2410, %r2406, %r2405, 30;
	mov.b64 	%rd3826, {%r2410, %r2409};
	xor.b64  	%rd3827, %rd3825, %rd3826;
	shf.l.wrap.b32 	%r2411, %r2405, %r2406, 25;
	shf.l.wrap.b32 	%r2412, %r2406, %r2405, 25;
	mov.b64 	%rd3828, {%r2412, %r2411};
	xor.b64  	%rd3829, %rd3827, %rd3828;
	and.b64  	%rd3830, %rd3811, %rd3787;
	or.b64  	%rd3831, %rd3811, %rd3787;
	and.b64  	%rd3832, %rd3831, %rd3763;
	or.b64  	%rd3833, %rd3832, %rd3830;
	add.s64 	%rd3834, %rd3833, %rd3829;
	add.s64 	%rd3835, %rd3834, %rd3823;
	add.s64 	%rd3836, %rd6314, %rd3752;
	xor.b64  	%rd3837, %rd3800, %rd3776;
	and.b64  	%rd3838, %rd3824, %rd3837;
	xor.b64  	%rd3839, %rd3838, %rd3776;
	add.s64 	%rd3840, %rd3836, %rd3839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2413,%dummy}, %rd3824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2414}, %rd3824;
	}
	shf.r.wrap.b32 	%r2415, %r2414, %r2413, 14;
	shf.r.wrap.b32 	%r2416, %r2413, %r2414, 14;
	mov.b64 	%rd3841, {%r2416, %r2415};
	shf.r.wrap.b32 	%r2417, %r2414, %r2413, 18;
	shf.r.wrap.b32 	%r2418, %r2413, %r2414, 18;
	mov.b64 	%rd3842, {%r2418, %r2417};
	xor.b64  	%rd3843, %rd3841, %rd3842;
	shf.l.wrap.b32 	%r2419, %r2413, %r2414, 23;
	shf.l.wrap.b32 	%r2420, %r2414, %r2413, 23;
	mov.b64 	%rd3844, {%r2420, %r2419};
	xor.b64  	%rd3845, %rd3843, %rd3844;
	add.s64 	%rd3846, %rd3840, %rd3845;
	add.s64 	%rd3847, %rd3846, -9160688886553864527;
	add.s64 	%rd3848, %rd3847, %rd3763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2421,%dummy}, %rd3835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2422}, %rd3835;
	}
	shf.r.wrap.b32 	%r2423, %r2422, %r2421, 28;
	shf.r.wrap.b32 	%r2424, %r2421, %r2422, 28;
	mov.b64 	%rd3849, {%r2424, %r2423};
	shf.l.wrap.b32 	%r2425, %r2421, %r2422, 30;
	shf.l.wrap.b32 	%r2426, %r2422, %r2421, 30;
	mov.b64 	%rd3850, {%r2426, %r2425};
	xor.b64  	%rd3851, %rd3849, %rd3850;
	shf.l.wrap.b32 	%r2427, %r2421, %r2422, 25;
	shf.l.wrap.b32 	%r2428, %r2422, %r2421, 25;
	mov.b64 	%rd3852, {%r2428, %r2427};
	xor.b64  	%rd3853, %rd3851, %rd3852;
	and.b64  	%rd3854, %rd3835, %rd3811;
	or.b64  	%rd3855, %rd3835, %rd3811;
	and.b64  	%rd3856, %rd3855, %rd3787;
	or.b64  	%rd3857, %rd3856, %rd3854;
	add.s64 	%rd3858, %rd3857, %rd3853;
	add.s64 	%rd3859, %rd3858, %rd3847;
	add.s64 	%rd3860, %rd6313, %rd3776;
	xor.b64  	%rd3861, %rd3824, %rd3800;
	and.b64  	%rd3862, %rd3848, %rd3861;
	xor.b64  	%rd3863, %rd3862, %rd3800;
	add.s64 	%rd3864, %rd3860, %rd3863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2429,%dummy}, %rd3848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2430}, %rd3848;
	}
	shf.r.wrap.b32 	%r2431, %r2430, %r2429, 14;
	shf.r.wrap.b32 	%r2432, %r2429, %r2430, 14;
	mov.b64 	%rd3865, {%r2432, %r2431};
	shf.r.wrap.b32 	%r2433, %r2430, %r2429, 18;
	shf.r.wrap.b32 	%r2434, %r2429, %r2430, 18;
	mov.b64 	%rd3866, {%r2434, %r2433};
	xor.b64  	%rd3867, %rd3865, %rd3866;
	shf.l.wrap.b32 	%r2435, %r2429, %r2430, 23;
	shf.l.wrap.b32 	%r2436, %r2430, %r2429, 23;
	mov.b64 	%rd3868, {%r2436, %r2435};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	add.s64 	%rd3870, %rd3864, %rd3869;
	add.s64 	%rd3871, %rd3870, -7215885187991268811;
	add.s64 	%rd3872, %rd3871, %rd3787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2437,%dummy}, %rd3859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2438}, %rd3859;
	}
	shf.r.wrap.b32 	%r2439, %r2438, %r2437, 28;
	shf.r.wrap.b32 	%r2440, %r2437, %r2438, 28;
	mov.b64 	%rd3873, {%r2440, %r2439};
	shf.l.wrap.b32 	%r2441, %r2437, %r2438, 30;
	shf.l.wrap.b32 	%r2442, %r2438, %r2437, 30;
	mov.b64 	%rd3874, {%r2442, %r2441};
	xor.b64  	%rd3875, %rd3873, %rd3874;
	shf.l.wrap.b32 	%r2443, %r2437, %r2438, 25;
	shf.l.wrap.b32 	%r2444, %r2438, %r2437, 25;
	mov.b64 	%rd3876, {%r2444, %r2443};
	xor.b64  	%rd3877, %rd3875, %rd3876;
	and.b64  	%rd3878, %rd3859, %rd3835;
	or.b64  	%rd3879, %rd3859, %rd3835;
	and.b64  	%rd3880, %rd3879, %rd3811;
	or.b64  	%rd3881, %rd3880, %rd3878;
	add.s64 	%rd3882, %rd3881, %rd3877;
	add.s64 	%rd3883, %rd3882, %rd3871;
	add.s64 	%rd3884, %rd6312, %rd3800;
	xor.b64  	%rd3885, %rd3848, %rd3824;
	and.b64  	%rd3886, %rd3872, %rd3885;
	xor.b64  	%rd3887, %rd3886, %rd3824;
	add.s64 	%rd3888, %rd3884, %rd3887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2445,%dummy}, %rd3872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2446}, %rd3872;
	}
	shf.r.wrap.b32 	%r2447, %r2446, %r2445, 14;
	shf.r.wrap.b32 	%r2448, %r2445, %r2446, 14;
	mov.b64 	%rd3889, {%r2448, %r2447};
	shf.r.wrap.b32 	%r2449, %r2446, %r2445, 18;
	shf.r.wrap.b32 	%r2450, %r2445, %r2446, 18;
	mov.b64 	%rd3890, {%r2450, %r2449};
	xor.b64  	%rd3891, %rd3889, %rd3890;
	shf.l.wrap.b32 	%r2451, %r2445, %r2446, 23;
	shf.l.wrap.b32 	%r2452, %r2446, %r2445, 23;
	mov.b64 	%rd3892, {%r2452, %r2451};
	xor.b64  	%rd3893, %rd3891, %rd3892;
	add.s64 	%rd3894, %rd3888, %rd3893;
	add.s64 	%rd3895, %rd3894, -4495734319001033068;
	add.s64 	%rd3896, %rd3895, %rd3811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2453,%dummy}, %rd3883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2454}, %rd3883;
	}
	shf.r.wrap.b32 	%r2455, %r2454, %r2453, 28;
	shf.r.wrap.b32 	%r2456, %r2453, %r2454, 28;
	mov.b64 	%rd3897, {%r2456, %r2455};
	shf.l.wrap.b32 	%r2457, %r2453, %r2454, 30;
	shf.l.wrap.b32 	%r2458, %r2454, %r2453, 30;
	mov.b64 	%rd3898, {%r2458, %r2457};
	xor.b64  	%rd3899, %rd3897, %rd3898;
	shf.l.wrap.b32 	%r2459, %r2453, %r2454, 25;
	shf.l.wrap.b32 	%r2460, %r2454, %r2453, 25;
	mov.b64 	%rd3900, {%r2460, %r2459};
	xor.b64  	%rd3901, %rd3899, %rd3900;
	and.b64  	%rd3902, %rd3883, %rd3859;
	or.b64  	%rd3903, %rd3883, %rd3859;
	and.b64  	%rd3904, %rd3903, %rd3835;
	or.b64  	%rd3905, %rd3904, %rd3902;
	add.s64 	%rd3906, %rd3905, %rd3901;
	add.s64 	%rd3907, %rd3906, %rd3895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd6313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2462,%dummy}, %rd6313;
	}
	shf.l.wrap.b32 	%r2463, %r2462, %r2461, 3;
	shf.l.wrap.b32 	%r2464, %r2461, %r2462, 3;
	mov.b64 	%rd3908, {%r2464, %r2463};
	shf.r.wrap.b32 	%r2465, %r2461, %r2462, 19;
	shf.r.wrap.b32 	%r2466, %r2462, %r2461, 19;
	mov.b64 	%rd3909, {%r2466, %r2465};
	xor.b64  	%rd3910, %rd3909, %rd3908;
	shr.u64 	%rd3911, %rd6313, 6;
	xor.b64  	%rd3912, %rd3910, %rd3911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2467,%dummy}, %rd6326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2468}, %rd6326;
	}
	shf.r.wrap.b32 	%r2469, %r2468, %r2467, 8;
	shf.r.wrap.b32 	%r2470, %r2467, %r2468, 8;
	mov.b64 	%rd3913, {%r2470, %r2469};
	shf.r.wrap.b32 	%r2471, %r2468, %r2467, 1;
	shf.r.wrap.b32 	%r2472, %r2467, %r2468, 1;
	mov.b64 	%rd3914, {%r2472, %r2471};
	xor.b64  	%rd3915, %rd3914, %rd3913;
	shr.u64 	%rd3916, %rd6326, 7;
	xor.b64  	%rd3917, %rd3915, %rd3916;
	add.s64 	%rd3918, %rd6318, %rd3912;
	add.s64 	%rd3919, %rd3918, %rd6327;
	add.s64 	%rd3920, %rd3919, %rd3917;
	add.s64 	%rd3921, %rd3920, %rd3824;
	xor.b64  	%rd3922, %rd3872, %rd3848;
	and.b64  	%rd3923, %rd3896, %rd3922;
	xor.b64  	%rd3924, %rd3923, %rd3848;
	add.s64 	%rd3925, %rd3921, %rd3924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2473,%dummy}, %rd3896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2474}, %rd3896;
	}
	shf.r.wrap.b32 	%r2475, %r2474, %r2473, 14;
	shf.r.wrap.b32 	%r2476, %r2473, %r2474, 14;
	mov.b64 	%rd3926, {%r2476, %r2475};
	shf.r.wrap.b32 	%r2477, %r2474, %r2473, 18;
	shf.r.wrap.b32 	%r2478, %r2473, %r2474, 18;
	mov.b64 	%rd3927, {%r2478, %r2477};
	xor.b64  	%rd3928, %rd3926, %rd3927;
	shf.l.wrap.b32 	%r2479, %r2473, %r2474, 23;
	shf.l.wrap.b32 	%r2480, %r2474, %r2473, 23;
	mov.b64 	%rd3929, {%r2480, %r2479};
	xor.b64  	%rd3930, %rd3928, %rd3929;
	add.s64 	%rd3931, %rd3925, %rd3930;
	add.s64 	%rd3932, %rd3931, -1973867731355612462;
	add.s64 	%rd3933, %rd3932, %rd3835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2481,%dummy}, %rd3907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2482}, %rd3907;
	}
	shf.r.wrap.b32 	%r2483, %r2482, %r2481, 28;
	shf.r.wrap.b32 	%r2484, %r2481, %r2482, 28;
	mov.b64 	%rd3934, {%r2484, %r2483};
	shf.l.wrap.b32 	%r2485, %r2481, %r2482, 30;
	shf.l.wrap.b32 	%r2486, %r2482, %r2481, 30;
	mov.b64 	%rd3935, {%r2486, %r2485};
	xor.b64  	%rd3936, %rd3934, %rd3935;
	shf.l.wrap.b32 	%r2487, %r2481, %r2482, 25;
	shf.l.wrap.b32 	%r2488, %r2482, %r2481, 25;
	mov.b64 	%rd3937, {%r2488, %r2487};
	xor.b64  	%rd3938, %rd3936, %rd3937;
	and.b64  	%rd3939, %rd3907, %rd3883;
	or.b64  	%rd3940, %rd3907, %rd3883;
	and.b64  	%rd3941, %rd3940, %rd3859;
	or.b64  	%rd3942, %rd3941, %rd3939;
	add.s64 	%rd3943, %rd3942, %rd3938;
	add.s64 	%rd3944, %rd3943, %rd3932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd6312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2490,%dummy}, %rd6312;
	}
	shf.l.wrap.b32 	%r2491, %r2490, %r2489, 3;
	shf.l.wrap.b32 	%r2492, %r2489, %r2490, 3;
	mov.b64 	%rd3945, {%r2492, %r2491};
	shf.r.wrap.b32 	%r2493, %r2489, %r2490, 19;
	shf.r.wrap.b32 	%r2494, %r2490, %r2489, 19;
	mov.b64 	%rd3946, {%r2494, %r2493};
	xor.b64  	%rd3947, %rd3946, %rd3945;
	shr.u64 	%rd3948, %rd6312, 6;
	xor.b64  	%rd3949, %rd3947, %rd3948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2495,%dummy}, %rd6325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2496}, %rd6325;
	}
	shf.r.wrap.b32 	%r2497, %r2496, %r2495, 8;
	shf.r.wrap.b32 	%r2498, %r2495, %r2496, 8;
	mov.b64 	%rd3950, {%r2498, %r2497};
	shf.r.wrap.b32 	%r2499, %r2496, %r2495, 1;
	shf.r.wrap.b32 	%r2500, %r2495, %r2496, 1;
	mov.b64 	%rd3951, {%r2500, %r2499};
	xor.b64  	%rd3952, %rd3951, %rd3950;
	shr.u64 	%rd3953, %rd6325, 7;
	xor.b64  	%rd3954, %rd3952, %rd3953;
	add.s64 	%rd3955, %rd6317, %rd3949;
	add.s64 	%rd3956, %rd3955, %rd6326;
	add.s64 	%rd3957, %rd3956, %rd3954;
	add.s64 	%rd3958, %rd3957, %rd3848;
	xor.b64  	%rd3959, %rd3896, %rd3872;
	and.b64  	%rd3960, %rd3933, %rd3959;
	xor.b64  	%rd3961, %rd3960, %rd3872;
	add.s64 	%rd3962, %rd3958, %rd3961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2501,%dummy}, %rd3933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2502}, %rd3933;
	}
	shf.r.wrap.b32 	%r2503, %r2502, %r2501, 14;
	shf.r.wrap.b32 	%r2504, %r2501, %r2502, 14;
	mov.b64 	%rd3963, {%r2504, %r2503};
	shf.r.wrap.b32 	%r2505, %r2502, %r2501, 18;
	shf.r.wrap.b32 	%r2506, %r2501, %r2502, 18;
	mov.b64 	%rd3964, {%r2506, %r2505};
	xor.b64  	%rd3965, %rd3963, %rd3964;
	shf.l.wrap.b32 	%r2507, %r2501, %r2502, 23;
	shf.l.wrap.b32 	%r2508, %r2502, %r2501, 23;
	mov.b64 	%rd3966, {%r2508, %r2507};
	xor.b64  	%rd3967, %rd3965, %rd3966;
	add.s64 	%rd3968, %rd3962, %rd3967;
	add.s64 	%rd3969, %rd3968, -1171420211273849373;
	add.s64 	%rd3970, %rd3969, %rd3859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2509,%dummy}, %rd3944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2510}, %rd3944;
	}
	shf.r.wrap.b32 	%r2511, %r2510, %r2509, 28;
	shf.r.wrap.b32 	%r2512, %r2509, %r2510, 28;
	mov.b64 	%rd3971, {%r2512, %r2511};
	shf.l.wrap.b32 	%r2513, %r2509, %r2510, 30;
	shf.l.wrap.b32 	%r2514, %r2510, %r2509, 30;
	mov.b64 	%rd3972, {%r2514, %r2513};
	xor.b64  	%rd3973, %rd3971, %rd3972;
	shf.l.wrap.b32 	%r2515, %r2509, %r2510, 25;
	shf.l.wrap.b32 	%r2516, %r2510, %r2509, 25;
	mov.b64 	%rd3974, {%r2516, %r2515};
	xor.b64  	%rd3975, %rd3973, %rd3974;
	and.b64  	%rd3976, %rd3944, %rd3907;
	or.b64  	%rd3977, %rd3944, %rd3907;
	and.b64  	%rd3978, %rd3977, %rd3883;
	or.b64  	%rd3979, %rd3978, %rd3976;
	add.s64 	%rd3980, %rd3979, %rd3975;
	add.s64 	%rd3981, %rd3980, %rd3969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2517,%dummy}, %rd3920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2518}, %rd3920;
	}
	shf.r.wrap.b32 	%r2519, %r2518, %r2517, 19;
	shf.r.wrap.b32 	%r2520, %r2517, %r2518, 19;
	mov.b64 	%rd3982, {%r2520, %r2519};
	shf.l.wrap.b32 	%r2521, %r2517, %r2518, 3;
	shf.l.wrap.b32 	%r2522, %r2518, %r2517, 3;
	mov.b64 	%rd3983, {%r2522, %r2521};
	xor.b64  	%rd3984, %rd3982, %rd3983;
	shr.u64 	%rd3985, %rd3920, 6;
	xor.b64  	%rd3986, %rd3984, %rd3985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2523,%dummy}, %rd6324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2524}, %rd6324;
	}
	shf.r.wrap.b32 	%r2525, %r2524, %r2523, 8;
	shf.r.wrap.b32 	%r2526, %r2523, %r2524, 8;
	mov.b64 	%rd3987, {%r2526, %r2525};
	shf.r.wrap.b32 	%r2527, %r2524, %r2523, 1;
	shf.r.wrap.b32 	%r2528, %r2523, %r2524, 1;
	mov.b64 	%rd3988, {%r2528, %r2527};
	xor.b64  	%rd3989, %rd3988, %rd3987;
	shr.u64 	%rd3990, %rd6324, 7;
	xor.b64  	%rd3991, %rd3989, %rd3990;
	add.s64 	%rd3992, %rd6325, %rd6316;
	add.s64 	%rd3993, %rd3992, %rd3991;
	add.s64 	%rd3994, %rd3993, %rd3986;
	add.s64 	%rd3995, %rd3994, %rd3872;
	xor.b64  	%rd3996, %rd3933, %rd3896;
	and.b64  	%rd3997, %rd3970, %rd3996;
	xor.b64  	%rd3998, %rd3997, %rd3896;
	add.s64 	%rd3999, %rd3995, %rd3998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2529,%dummy}, %rd3970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2530}, %rd3970;
	}
	shf.r.wrap.b32 	%r2531, %r2530, %r2529, 14;
	shf.r.wrap.b32 	%r2532, %r2529, %r2530, 14;
	mov.b64 	%rd4000, {%r2532, %r2531};
	shf.r.wrap.b32 	%r2533, %r2530, %r2529, 18;
	shf.r.wrap.b32 	%r2534, %r2529, %r2530, 18;
	mov.b64 	%rd4001, {%r2534, %r2533};
	xor.b64  	%rd4002, %rd4000, %rd4001;
	shf.l.wrap.b32 	%r2535, %r2529, %r2530, 23;
	shf.l.wrap.b32 	%r2536, %r2530, %r2529, 23;
	mov.b64 	%rd4003, {%r2536, %r2535};
	xor.b64  	%rd4004, %rd4002, %rd4003;
	add.s64 	%rd4005, %rd3999, %rd4004;
	add.s64 	%rd4006, %rd4005, 1135362057144423861;
	add.s64 	%rd4007, %rd4006, %rd3883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2537,%dummy}, %rd3981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2538}, %rd3981;
	}
	shf.r.wrap.b32 	%r2539, %r2538, %r2537, 28;
	shf.r.wrap.b32 	%r2540, %r2537, %r2538, 28;
	mov.b64 	%rd4008, {%r2540, %r2539};
	shf.l.wrap.b32 	%r2541, %r2537, %r2538, 30;
	shf.l.wrap.b32 	%r2542, %r2538, %r2537, 30;
	mov.b64 	%rd4009, {%r2542, %r2541};
	xor.b64  	%rd4010, %rd4008, %rd4009;
	shf.l.wrap.b32 	%r2543, %r2537, %r2538, 25;
	shf.l.wrap.b32 	%r2544, %r2538, %r2537, 25;
	mov.b64 	%rd4011, {%r2544, %r2543};
	xor.b64  	%rd4012, %rd4010, %rd4011;
	and.b64  	%rd4013, %rd3981, %rd3944;
	or.b64  	%rd4014, %rd3981, %rd3944;
	and.b64  	%rd4015, %rd4014, %rd3907;
	or.b64  	%rd4016, %rd4015, %rd4013;
	add.s64 	%rd4017, %rd4016, %rd4012;
	add.s64 	%rd4018, %rd4017, %rd4006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2545,%dummy}, %rd3957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2546}, %rd3957;
	}
	shf.r.wrap.b32 	%r2547, %r2546, %r2545, 19;
	shf.r.wrap.b32 	%r2548, %r2545, %r2546, 19;
	mov.b64 	%rd4019, {%r2548, %r2547};
	shf.l.wrap.b32 	%r2549, %r2545, %r2546, 3;
	shf.l.wrap.b32 	%r2550, %r2546, %r2545, 3;
	mov.b64 	%rd4020, {%r2550, %r2549};
	xor.b64  	%rd4021, %rd4019, %rd4020;
	shr.u64 	%rd4022, %rd3957, 6;
	xor.b64  	%rd4023, %rd4021, %rd4022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd6323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd6323;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 8;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 8;
	mov.b64 	%rd4024, {%r2554, %r2553};
	shf.r.wrap.b32 	%r2555, %r2552, %r2551, 1;
	shf.r.wrap.b32 	%r2556, %r2551, %r2552, 1;
	mov.b64 	%rd4025, {%r2556, %r2555};
	xor.b64  	%rd4026, %rd4025, %rd4024;
	shr.u64 	%rd4027, %rd6323, 7;
	xor.b64  	%rd4028, %rd4026, %rd4027;
	add.s64 	%rd4029, %rd6324, %rd6315;
	add.s64 	%rd4030, %rd4029, %rd4028;
	add.s64 	%rd4031, %rd4030, %rd4023;
	add.s64 	%rd4032, %rd4031, %rd3896;
	xor.b64  	%rd4033, %rd3970, %rd3933;
	and.b64  	%rd4034, %rd4007, %rd4033;
	xor.b64  	%rd4035, %rd4034, %rd3933;
	add.s64 	%rd4036, %rd4032, %rd4035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2557,%dummy}, %rd4007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2558}, %rd4007;
	}
	shf.r.wrap.b32 	%r2559, %r2558, %r2557, 14;
	shf.r.wrap.b32 	%r2560, %r2557, %r2558, 14;
	mov.b64 	%rd4037, {%r2560, %r2559};
	shf.r.wrap.b32 	%r2561, %r2558, %r2557, 18;
	shf.r.wrap.b32 	%r2562, %r2557, %r2558, 18;
	mov.b64 	%rd4038, {%r2562, %r2561};
	xor.b64  	%rd4039, %rd4037, %rd4038;
	shf.l.wrap.b32 	%r2563, %r2557, %r2558, 23;
	shf.l.wrap.b32 	%r2564, %r2558, %r2557, 23;
	mov.b64 	%rd4040, {%r2564, %r2563};
	xor.b64  	%rd4041, %rd4039, %rd4040;
	add.s64 	%rd4042, %rd4036, %rd4041;
	add.s64 	%rd4043, %rd4042, 2597628984639134821;
	add.s64 	%rd4044, %rd4043, %rd3907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd4018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2566}, %rd4018;
	}
	shf.r.wrap.b32 	%r2567, %r2566, %r2565, 28;
	shf.r.wrap.b32 	%r2568, %r2565, %r2566, 28;
	mov.b64 	%rd4045, {%r2568, %r2567};
	shf.l.wrap.b32 	%r2569, %r2565, %r2566, 30;
	shf.l.wrap.b32 	%r2570, %r2566, %r2565, 30;
	mov.b64 	%rd4046, {%r2570, %r2569};
	xor.b64  	%rd4047, %rd4045, %rd4046;
	shf.l.wrap.b32 	%r2571, %r2565, %r2566, 25;
	shf.l.wrap.b32 	%r2572, %r2566, %r2565, 25;
	mov.b64 	%rd4048, {%r2572, %r2571};
	xor.b64  	%rd4049, %rd4047, %rd4048;
	and.b64  	%rd4050, %rd4018, %rd3981;
	or.b64  	%rd4051, %rd4018, %rd3981;
	and.b64  	%rd4052, %rd4051, %rd3944;
	or.b64  	%rd4053, %rd4052, %rd4050;
	add.s64 	%rd4054, %rd4053, %rd4049;
	add.s64 	%rd4055, %rd4054, %rd4043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2573,%dummy}, %rd3994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2574}, %rd3994;
	}
	shf.r.wrap.b32 	%r2575, %r2574, %r2573, 19;
	shf.r.wrap.b32 	%r2576, %r2573, %r2574, 19;
	mov.b64 	%rd4056, {%r2576, %r2575};
	shf.l.wrap.b32 	%r2577, %r2573, %r2574, 3;
	shf.l.wrap.b32 	%r2578, %r2574, %r2573, 3;
	mov.b64 	%rd4057, {%r2578, %r2577};
	xor.b64  	%rd4058, %rd4056, %rd4057;
	shr.u64 	%rd4059, %rd3994, 6;
	xor.b64  	%rd4060, %rd4058, %rd4059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2579,%dummy}, %rd6322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2580}, %rd6322;
	}
	shf.r.wrap.b32 	%r2581, %r2580, %r2579, 8;
	shf.r.wrap.b32 	%r2582, %r2579, %r2580, 8;
	mov.b64 	%rd4061, {%r2582, %r2581};
	shf.r.wrap.b32 	%r2583, %r2580, %r2579, 1;
	shf.r.wrap.b32 	%r2584, %r2579, %r2580, 1;
	mov.b64 	%rd4062, {%r2584, %r2583};
	xor.b64  	%rd4063, %rd4062, %rd4061;
	shr.u64 	%rd4064, %rd6322, 7;
	xor.b64  	%rd4065, %rd4063, %rd4064;
	add.s64 	%rd4066, %rd6323, %rd6314;
	add.s64 	%rd4067, %rd4066, %rd4065;
	add.s64 	%rd4068, %rd4067, %rd4060;
	add.s64 	%rd4069, %rd4068, %rd3933;
	xor.b64  	%rd4070, %rd4007, %rd3970;
	and.b64  	%rd4071, %rd4044, %rd4070;
	xor.b64  	%rd4072, %rd4071, %rd3970;
	add.s64 	%rd4073, %rd4069, %rd4072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2585,%dummy}, %rd4044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2586}, %rd4044;
	}
	shf.r.wrap.b32 	%r2587, %r2586, %r2585, 14;
	shf.r.wrap.b32 	%r2588, %r2585, %r2586, 14;
	mov.b64 	%rd4074, {%r2588, %r2587};
	shf.r.wrap.b32 	%r2589, %r2586, %r2585, 18;
	shf.r.wrap.b32 	%r2590, %r2585, %r2586, 18;
	mov.b64 	%rd4075, {%r2590, %r2589};
	xor.b64  	%rd4076, %rd4074, %rd4075;
	shf.l.wrap.b32 	%r2591, %r2585, %r2586, 23;
	shf.l.wrap.b32 	%r2592, %r2586, %r2585, 23;
	mov.b64 	%rd4077, {%r2592, %r2591};
	xor.b64  	%rd4078, %rd4076, %rd4077;
	add.s64 	%rd4079, %rd4073, %rd4078;
	add.s64 	%rd4080, %rd4079, 3308224258029322869;
	add.s64 	%rd4081, %rd4080, %rd3944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2593,%dummy}, %rd4055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2594}, %rd4055;
	}
	shf.r.wrap.b32 	%r2595, %r2594, %r2593, 28;
	shf.r.wrap.b32 	%r2596, %r2593, %r2594, 28;
	mov.b64 	%rd4082, {%r2596, %r2595};
	shf.l.wrap.b32 	%r2597, %r2593, %r2594, 30;
	shf.l.wrap.b32 	%r2598, %r2594, %r2593, 30;
	mov.b64 	%rd4083, {%r2598, %r2597};
	xor.b64  	%rd4084, %rd4082, %rd4083;
	shf.l.wrap.b32 	%r2599, %r2593, %r2594, 25;
	shf.l.wrap.b32 	%r2600, %r2594, %r2593, 25;
	mov.b64 	%rd4085, {%r2600, %r2599};
	xor.b64  	%rd4086, %rd4084, %rd4085;
	and.b64  	%rd4087, %rd4055, %rd4018;
	or.b64  	%rd4088, %rd4055, %rd4018;
	and.b64  	%rd4089, %rd4088, %rd3981;
	or.b64  	%rd4090, %rd4089, %rd4087;
	add.s64 	%rd4091, %rd4090, %rd4086;
	add.s64 	%rd4092, %rd4091, %rd4080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2601,%dummy}, %rd4031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2602}, %rd4031;
	}
	shf.r.wrap.b32 	%r2603, %r2602, %r2601, 19;
	shf.r.wrap.b32 	%r2604, %r2601, %r2602, 19;
	mov.b64 	%rd4093, {%r2604, %r2603};
	shf.l.wrap.b32 	%r2605, %r2601, %r2602, 3;
	shf.l.wrap.b32 	%r2606, %r2602, %r2601, 3;
	mov.b64 	%rd4094, {%r2606, %r2605};
	xor.b64  	%rd4095, %rd4093, %rd4094;
	shr.u64 	%rd4096, %rd4031, 6;
	xor.b64  	%rd4097, %rd4095, %rd4096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd6321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd6321;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 8;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 8;
	mov.b64 	%rd4098, {%r2610, %r2609};
	shf.r.wrap.b32 	%r2611, %r2608, %r2607, 1;
	shf.r.wrap.b32 	%r2612, %r2607, %r2608, 1;
	mov.b64 	%rd4099, {%r2612, %r2611};
	xor.b64  	%rd4100, %rd4099, %rd4098;
	shr.u64 	%rd4101, %rd6321, 7;
	xor.b64  	%rd4102, %rd4100, %rd4101;
	add.s64 	%rd4103, %rd6322, %rd6313;
	add.s64 	%rd4104, %rd4103, %rd4102;
	add.s64 	%rd4105, %rd4104, %rd4097;
	add.s64 	%rd4106, %rd4105, %rd3970;
	xor.b64  	%rd4107, %rd4044, %rd4007;
	and.b64  	%rd4108, %rd4081, %rd4107;
	xor.b64  	%rd4109, %rd4108, %rd4007;
	add.s64 	%rd4110, %rd4106, %rd4109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2613,%dummy}, %rd4081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2614}, %rd4081;
	}
	shf.r.wrap.b32 	%r2615, %r2614, %r2613, 14;
	shf.r.wrap.b32 	%r2616, %r2613, %r2614, 14;
	mov.b64 	%rd4111, {%r2616, %r2615};
	shf.r.wrap.b32 	%r2617, %r2614, %r2613, 18;
	shf.r.wrap.b32 	%r2618, %r2613, %r2614, 18;
	mov.b64 	%rd4112, {%r2618, %r2617};
	xor.b64  	%rd4113, %rd4111, %rd4112;
	shf.l.wrap.b32 	%r2619, %r2613, %r2614, 23;
	shf.l.wrap.b32 	%r2620, %r2614, %r2613, 23;
	mov.b64 	%rd4114, {%r2620, %r2619};
	xor.b64  	%rd4115, %rd4113, %rd4114;
	add.s64 	%rd4116, %rd4110, %rd4115;
	add.s64 	%rd4117, %rd4116, 5365058923640841347;
	add.s64 	%rd4118, %rd4117, %rd3981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2621,%dummy}, %rd4092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2622}, %rd4092;
	}
	shf.r.wrap.b32 	%r2623, %r2622, %r2621, 28;
	shf.r.wrap.b32 	%r2624, %r2621, %r2622, 28;
	mov.b64 	%rd4119, {%r2624, %r2623};
	shf.l.wrap.b32 	%r2625, %r2621, %r2622, 30;
	shf.l.wrap.b32 	%r2626, %r2622, %r2621, 30;
	mov.b64 	%rd4120, {%r2626, %r2625};
	xor.b64  	%rd4121, %rd4119, %rd4120;
	shf.l.wrap.b32 	%r2627, %r2621, %r2622, 25;
	shf.l.wrap.b32 	%r2628, %r2622, %r2621, 25;
	mov.b64 	%rd4122, {%r2628, %r2627};
	xor.b64  	%rd4123, %rd4121, %rd4122;
	and.b64  	%rd4124, %rd4092, %rd4055;
	or.b64  	%rd4125, %rd4092, %rd4055;
	and.b64  	%rd4126, %rd4125, %rd4018;
	or.b64  	%rd4127, %rd4126, %rd4124;
	add.s64 	%rd4128, %rd4127, %rd4123;
	add.s64 	%rd4129, %rd4128, %rd4117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2629,%dummy}, %rd4068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2630}, %rd4068;
	}
	shf.r.wrap.b32 	%r2631, %r2630, %r2629, 19;
	shf.r.wrap.b32 	%r2632, %r2629, %r2630, 19;
	mov.b64 	%rd4130, {%r2632, %r2631};
	shf.l.wrap.b32 	%r2633, %r2629, %r2630, 3;
	shf.l.wrap.b32 	%r2634, %r2630, %r2629, 3;
	mov.b64 	%rd4131, {%r2634, %r2633};
	xor.b64  	%rd4132, %rd4130, %rd4131;
	shr.u64 	%rd4133, %rd4068, 6;
	xor.b64  	%rd4134, %rd4132, %rd4133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2635,%dummy}, %rd6320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2636}, %rd6320;
	}
	shf.r.wrap.b32 	%r2637, %r2636, %r2635, 8;
	shf.r.wrap.b32 	%r2638, %r2635, %r2636, 8;
	mov.b64 	%rd4135, {%r2638, %r2637};
	shf.r.wrap.b32 	%r2639, %r2636, %r2635, 1;
	shf.r.wrap.b32 	%r2640, %r2635, %r2636, 1;
	mov.b64 	%rd4136, {%r2640, %r2639};
	xor.b64  	%rd4137, %rd4136, %rd4135;
	shr.u64 	%rd4138, %rd6320, 7;
	xor.b64  	%rd4139, %rd4137, %rd4138;
	add.s64 	%rd4140, %rd6321, %rd6312;
	add.s64 	%rd4141, %rd4140, %rd4139;
	add.s64 	%rd4142, %rd4141, %rd4134;
	add.s64 	%rd4143, %rd4142, %rd4007;
	xor.b64  	%rd4144, %rd4081, %rd4044;
	and.b64  	%rd4145, %rd4118, %rd4144;
	xor.b64  	%rd4146, %rd4145, %rd4044;
	add.s64 	%rd4147, %rd4143, %rd4146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2641,%dummy}, %rd4118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2642}, %rd4118;
	}
	shf.r.wrap.b32 	%r2643, %r2642, %r2641, 14;
	shf.r.wrap.b32 	%r2644, %r2641, %r2642, 14;
	mov.b64 	%rd4148, {%r2644, %r2643};
	shf.r.wrap.b32 	%r2645, %r2642, %r2641, 18;
	shf.r.wrap.b32 	%r2646, %r2641, %r2642, 18;
	mov.b64 	%rd4149, {%r2646, %r2645};
	xor.b64  	%rd4150, %rd4148, %rd4149;
	shf.l.wrap.b32 	%r2647, %r2641, %r2642, 23;
	shf.l.wrap.b32 	%r2648, %r2642, %r2641, 23;
	mov.b64 	%rd4151, {%r2648, %r2647};
	xor.b64  	%rd4152, %rd4150, %rd4151;
	add.s64 	%rd4153, %rd4147, %rd4152;
	add.s64 	%rd4154, %rd4153, 6679025012923562964;
	add.s64 	%rd4155, %rd4154, %rd4018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd4129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2650}, %rd4129;
	}
	shf.r.wrap.b32 	%r2651, %r2650, %r2649, 28;
	shf.r.wrap.b32 	%r2652, %r2649, %r2650, 28;
	mov.b64 	%rd4156, {%r2652, %r2651};
	shf.l.wrap.b32 	%r2653, %r2649, %r2650, 30;
	shf.l.wrap.b32 	%r2654, %r2650, %r2649, 30;
	mov.b64 	%rd4157, {%r2654, %r2653};
	xor.b64  	%rd4158, %rd4156, %rd4157;
	shf.l.wrap.b32 	%r2655, %r2649, %r2650, 25;
	shf.l.wrap.b32 	%r2656, %r2650, %r2649, 25;
	mov.b64 	%rd4159, {%r2656, %r2655};
	xor.b64  	%rd4160, %rd4158, %rd4159;
	and.b64  	%rd4161, %rd4129, %rd4092;
	or.b64  	%rd4162, %rd4129, %rd4092;
	and.b64  	%rd4163, %rd4162, %rd4055;
	or.b64  	%rd4164, %rd4163, %rd4161;
	add.s64 	%rd4165, %rd4164, %rd4160;
	add.s64 	%rd4166, %rd4165, %rd4154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2657,%dummy}, %rd4105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2658}, %rd4105;
	}
	shf.r.wrap.b32 	%r2659, %r2658, %r2657, 19;
	shf.r.wrap.b32 	%r2660, %r2657, %r2658, 19;
	mov.b64 	%rd4167, {%r2660, %r2659};
	shf.l.wrap.b32 	%r2661, %r2657, %r2658, 3;
	shf.l.wrap.b32 	%r2662, %r2658, %r2657, 3;
	mov.b64 	%rd4168, {%r2662, %r2661};
	xor.b64  	%rd4169, %rd4167, %rd4168;
	shr.u64 	%rd4170, %rd4105, 6;
	xor.b64  	%rd4171, %rd4169, %rd4170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2663,%dummy}, %rd6319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd6319;
	}
	shf.r.wrap.b32 	%r2665, %r2664, %r2663, 8;
	shf.r.wrap.b32 	%r2666, %r2663, %r2664, 8;
	mov.b64 	%rd4172, {%r2666, %r2665};
	shf.r.wrap.b32 	%r2667, %r2664, %r2663, 1;
	shf.r.wrap.b32 	%r2668, %r2663, %r2664, 1;
	mov.b64 	%rd4173, {%r2668, %r2667};
	xor.b64  	%rd4174, %rd4173, %rd4172;
	shr.u64 	%rd4175, %rd6319, 7;
	xor.b64  	%rd4176, %rd4174, %rd4175;
	add.s64 	%rd4177, %rd4176, %rd6320;
	add.s64 	%rd4178, %rd4177, %rd3920;
	add.s64 	%rd4179, %rd4178, %rd4171;
	add.s64 	%rd4180, %rd4179, %rd4044;
	xor.b64  	%rd4181, %rd4118, %rd4081;
	and.b64  	%rd4182, %rd4155, %rd4181;
	xor.b64  	%rd4183, %rd4182, %rd4081;
	add.s64 	%rd4184, %rd4180, %rd4183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2669,%dummy}, %rd4155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2670}, %rd4155;
	}
	shf.r.wrap.b32 	%r2671, %r2670, %r2669, 14;
	shf.r.wrap.b32 	%r2672, %r2669, %r2670, 14;
	mov.b64 	%rd4185, {%r2672, %r2671};
	shf.r.wrap.b32 	%r2673, %r2670, %r2669, 18;
	shf.r.wrap.b32 	%r2674, %r2669, %r2670, 18;
	mov.b64 	%rd4186, {%r2674, %r2673};
	xor.b64  	%rd4187, %rd4185, %rd4186;
	shf.l.wrap.b32 	%r2675, %r2669, %r2670, 23;
	shf.l.wrap.b32 	%r2676, %r2670, %r2669, 23;
	mov.b64 	%rd4188, {%r2676, %r2675};
	xor.b64  	%rd4189, %rd4187, %rd4188;
	add.s64 	%rd4190, %rd4184, %rd4189;
	add.s64 	%rd4191, %rd4190, 8573033837759648693;
	add.s64 	%rd4192, %rd4191, %rd4055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2677,%dummy}, %rd4166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2678}, %rd4166;
	}
	shf.r.wrap.b32 	%r2679, %r2678, %r2677, 28;
	shf.r.wrap.b32 	%r2680, %r2677, %r2678, 28;
	mov.b64 	%rd4193, {%r2680, %r2679};
	shf.l.wrap.b32 	%r2681, %r2677, %r2678, 30;
	shf.l.wrap.b32 	%r2682, %r2678, %r2677, 30;
	mov.b64 	%rd4194, {%r2682, %r2681};
	xor.b64  	%rd4195, %rd4193, %rd4194;
	shf.l.wrap.b32 	%r2683, %r2677, %r2678, 25;
	shf.l.wrap.b32 	%r2684, %r2678, %r2677, 25;
	mov.b64 	%rd4196, {%r2684, %r2683};
	xor.b64  	%rd4197, %rd4195, %rd4196;
	and.b64  	%rd4198, %rd4166, %rd4129;
	or.b64  	%rd4199, %rd4166, %rd4129;
	and.b64  	%rd4200, %rd4199, %rd4092;
	or.b64  	%rd4201, %rd4200, %rd4198;
	add.s64 	%rd4202, %rd4201, %rd4197;
	add.s64 	%rd4203, %rd4202, %rd4191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2685,%dummy}, %rd4142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2686}, %rd4142;
	}
	shf.r.wrap.b32 	%r2687, %r2686, %r2685, 19;
	shf.r.wrap.b32 	%r2688, %r2685, %r2686, 19;
	mov.b64 	%rd4204, {%r2688, %r2687};
	shf.l.wrap.b32 	%r2689, %r2685, %r2686, 3;
	shf.l.wrap.b32 	%r2690, %r2686, %r2685, 3;
	mov.b64 	%rd4205, {%r2690, %r2689};
	xor.b64  	%rd4206, %rd4204, %rd4205;
	shr.u64 	%rd4207, %rd4142, 6;
	xor.b64  	%rd4208, %rd4206, %rd4207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2691,%dummy}, %rd6318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2692}, %rd6318;
	}
	shf.r.wrap.b32 	%r2693, %r2692, %r2691, 8;
	shf.r.wrap.b32 	%r2694, %r2691, %r2692, 8;
	mov.b64 	%rd4209, {%r2694, %r2693};
	shf.r.wrap.b32 	%r2695, %r2692, %r2691, 1;
	shf.r.wrap.b32 	%r2696, %r2691, %r2692, 1;
	mov.b64 	%rd4210, {%r2696, %r2695};
	xor.b64  	%rd4211, %rd4210, %rd4209;
	shr.u64 	%rd4212, %rd6318, 7;
	xor.b64  	%rd4213, %rd4211, %rd4212;
	add.s64 	%rd4214, %rd4213, %rd6319;
	add.s64 	%rd4215, %rd4214, %rd3957;
	add.s64 	%rd4216, %rd4215, %rd4208;
	add.s64 	%rd4217, %rd4216, %rd4081;
	xor.b64  	%rd4218, %rd4155, %rd4118;
	and.b64  	%rd4219, %rd4192, %rd4218;
	xor.b64  	%rd4220, %rd4219, %rd4118;
	add.s64 	%rd4221, %rd4217, %rd4220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2697,%dummy}, %rd4192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2698}, %rd4192;
	}
	shf.r.wrap.b32 	%r2699, %r2698, %r2697, 14;
	shf.r.wrap.b32 	%r2700, %r2697, %r2698, 14;
	mov.b64 	%rd4222, {%r2700, %r2699};
	shf.r.wrap.b32 	%r2701, %r2698, %r2697, 18;
	shf.r.wrap.b32 	%r2702, %r2697, %r2698, 18;
	mov.b64 	%rd4223, {%r2702, %r2701};
	xor.b64  	%rd4224, %rd4222, %rd4223;
	shf.l.wrap.b32 	%r2703, %r2697, %r2698, 23;
	shf.l.wrap.b32 	%r2704, %r2698, %r2697, 23;
	mov.b64 	%rd4225, {%r2704, %r2703};
	xor.b64  	%rd4226, %rd4224, %rd4225;
	add.s64 	%rd4227, %rd4221, %rd4226;
	add.s64 	%rd4228, %rd4227, -7476448914759557205;
	add.s64 	%rd4229, %rd4228, %rd4092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2705,%dummy}, %rd4203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2706}, %rd4203;
	}
	shf.r.wrap.b32 	%r2707, %r2706, %r2705, 28;
	shf.r.wrap.b32 	%r2708, %r2705, %r2706, 28;
	mov.b64 	%rd4230, {%r2708, %r2707};
	shf.l.wrap.b32 	%r2709, %r2705, %r2706, 30;
	shf.l.wrap.b32 	%r2710, %r2706, %r2705, 30;
	mov.b64 	%rd4231, {%r2710, %r2709};
	xor.b64  	%rd4232, %rd4230, %rd4231;
	shf.l.wrap.b32 	%r2711, %r2705, %r2706, 25;
	shf.l.wrap.b32 	%r2712, %r2706, %r2705, 25;
	mov.b64 	%rd4233, {%r2712, %r2711};
	xor.b64  	%rd4234, %rd4232, %rd4233;
	and.b64  	%rd4235, %rd4203, %rd4166;
	or.b64  	%rd4236, %rd4203, %rd4166;
	and.b64  	%rd4237, %rd4236, %rd4129;
	or.b64  	%rd4238, %rd4237, %rd4235;
	add.s64 	%rd4239, %rd4238, %rd4234;
	add.s64 	%rd4240, %rd4239, %rd4228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2713,%dummy}, %rd4179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2714}, %rd4179;
	}
	shf.r.wrap.b32 	%r2715, %r2714, %r2713, 19;
	shf.r.wrap.b32 	%r2716, %r2713, %r2714, 19;
	mov.b64 	%rd4241, {%r2716, %r2715};
	shf.l.wrap.b32 	%r2717, %r2713, %r2714, 3;
	shf.l.wrap.b32 	%r2718, %r2714, %r2713, 3;
	mov.b64 	%rd4242, {%r2718, %r2717};
	xor.b64  	%rd4243, %rd4241, %rd4242;
	shr.u64 	%rd4244, %rd4179, 6;
	xor.b64  	%rd4245, %rd4243, %rd4244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd6317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd6317;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 8;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 8;
	mov.b64 	%rd4246, {%r2722, %r2721};
	shf.r.wrap.b32 	%r2723, %r2720, %r2719, 1;
	shf.r.wrap.b32 	%r2724, %r2719, %r2720, 1;
	mov.b64 	%rd4247, {%r2724, %r2723};
	xor.b64  	%rd4248, %rd4247, %rd4246;
	shr.u64 	%rd4249, %rd6317, 7;
	xor.b64  	%rd4250, %rd4248, %rd4249;
	add.s64 	%rd4251, %rd4250, %rd6318;
	add.s64 	%rd4252, %rd4251, %rd3994;
	add.s64 	%rd4253, %rd4252, %rd4245;
	add.s64 	%rd4254, %rd4253, %rd4118;
	xor.b64  	%rd4255, %rd4192, %rd4155;
	and.b64  	%rd4256, %rd4229, %rd4255;
	xor.b64  	%rd4257, %rd4256, %rd4155;
	add.s64 	%rd4258, %rd4254, %rd4257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2725,%dummy}, %rd4229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2726}, %rd4229;
	}
	shf.r.wrap.b32 	%r2727, %r2726, %r2725, 14;
	shf.r.wrap.b32 	%r2728, %r2725, %r2726, 14;
	mov.b64 	%rd4259, {%r2728, %r2727};
	shf.r.wrap.b32 	%r2729, %r2726, %r2725, 18;
	shf.r.wrap.b32 	%r2730, %r2725, %r2726, 18;
	mov.b64 	%rd4260, {%r2730, %r2729};
	xor.b64  	%rd4261, %rd4259, %rd4260;
	shf.l.wrap.b32 	%r2731, %r2725, %r2726, 23;
	shf.l.wrap.b32 	%r2732, %r2726, %r2725, 23;
	mov.b64 	%rd4262, {%r2732, %r2731};
	xor.b64  	%rd4263, %rd4261, %rd4262;
	add.s64 	%rd4264, %rd4258, %rd4263;
	add.s64 	%rd4265, %rd4264, -6327057829258317296;
	add.s64 	%rd4266, %rd4265, %rd4129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2733,%dummy}, %rd4240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2734}, %rd4240;
	}
	shf.r.wrap.b32 	%r2735, %r2734, %r2733, 28;
	shf.r.wrap.b32 	%r2736, %r2733, %r2734, 28;
	mov.b64 	%rd4267, {%r2736, %r2735};
	shf.l.wrap.b32 	%r2737, %r2733, %r2734, 30;
	shf.l.wrap.b32 	%r2738, %r2734, %r2733, 30;
	mov.b64 	%rd4268, {%r2738, %r2737};
	xor.b64  	%rd4269, %rd4267, %rd4268;
	shf.l.wrap.b32 	%r2739, %r2733, %r2734, 25;
	shf.l.wrap.b32 	%r2740, %r2734, %r2733, 25;
	mov.b64 	%rd4270, {%r2740, %r2739};
	xor.b64  	%rd4271, %rd4269, %rd4270;
	and.b64  	%rd4272, %rd4240, %rd4203;
	or.b64  	%rd4273, %rd4240, %rd4203;
	and.b64  	%rd4274, %rd4273, %rd4166;
	or.b64  	%rd4275, %rd4274, %rd4272;
	add.s64 	%rd4276, %rd4275, %rd4271;
	add.s64 	%rd4277, %rd4276, %rd4265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2741,%dummy}, %rd4216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2742}, %rd4216;
	}
	shf.r.wrap.b32 	%r2743, %r2742, %r2741, 19;
	shf.r.wrap.b32 	%r2744, %r2741, %r2742, 19;
	mov.b64 	%rd4278, {%r2744, %r2743};
	shf.l.wrap.b32 	%r2745, %r2741, %r2742, 3;
	shf.l.wrap.b32 	%r2746, %r2742, %r2741, 3;
	mov.b64 	%rd4279, {%r2746, %r2745};
	xor.b64  	%rd4280, %rd4278, %rd4279;
	shr.u64 	%rd4281, %rd4216, 6;
	xor.b64  	%rd4282, %rd4280, %rd4281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2747,%dummy}, %rd6316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2748}, %rd6316;
	}
	shf.r.wrap.b32 	%r2749, %r2748, %r2747, 8;
	shf.r.wrap.b32 	%r2750, %r2747, %r2748, 8;
	mov.b64 	%rd4283, {%r2750, %r2749};
	shf.r.wrap.b32 	%r2751, %r2748, %r2747, 1;
	shf.r.wrap.b32 	%r2752, %r2747, %r2748, 1;
	mov.b64 	%rd4284, {%r2752, %r2751};
	xor.b64  	%rd4285, %rd4284, %rd4283;
	shr.u64 	%rd4286, %rd6316, 7;
	xor.b64  	%rd4287, %rd4285, %rd4286;
	add.s64 	%rd4288, %rd4287, %rd6317;
	add.s64 	%rd4289, %rd4288, %rd4031;
	add.s64 	%rd4290, %rd4289, %rd4282;
	add.s64 	%rd4291, %rd4290, %rd4155;
	xor.b64  	%rd4292, %rd4229, %rd4192;
	and.b64  	%rd4293, %rd4266, %rd4292;
	xor.b64  	%rd4294, %rd4293, %rd4192;
	add.s64 	%rd4295, %rd4291, %rd4294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd4266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2754}, %rd4266;
	}
	shf.r.wrap.b32 	%r2755, %r2754, %r2753, 14;
	shf.r.wrap.b32 	%r2756, %r2753, %r2754, 14;
	mov.b64 	%rd4296, {%r2756, %r2755};
	shf.r.wrap.b32 	%r2757, %r2754, %r2753, 18;
	shf.r.wrap.b32 	%r2758, %r2753, %r2754, 18;
	mov.b64 	%rd4297, {%r2758, %r2757};
	xor.b64  	%rd4298, %rd4296, %rd4297;
	shf.l.wrap.b32 	%r2759, %r2753, %r2754, 23;
	shf.l.wrap.b32 	%r2760, %r2754, %r2753, 23;
	mov.b64 	%rd4299, {%r2760, %r2759};
	xor.b64  	%rd4300, %rd4298, %rd4299;
	add.s64 	%rd4301, %rd4295, %rd4300;
	add.s64 	%rd4302, %rd4301, -5763719355590565569;
	add.s64 	%rd4303, %rd4302, %rd4166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2761,%dummy}, %rd4277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2762}, %rd4277;
	}
	shf.r.wrap.b32 	%r2763, %r2762, %r2761, 28;
	shf.r.wrap.b32 	%r2764, %r2761, %r2762, 28;
	mov.b64 	%rd4304, {%r2764, %r2763};
	shf.l.wrap.b32 	%r2765, %r2761, %r2762, 30;
	shf.l.wrap.b32 	%r2766, %r2762, %r2761, 30;
	mov.b64 	%rd4305, {%r2766, %r2765};
	xor.b64  	%rd4306, %rd4304, %rd4305;
	shf.l.wrap.b32 	%r2767, %r2761, %r2762, 25;
	shf.l.wrap.b32 	%r2768, %r2762, %r2761, 25;
	mov.b64 	%rd4307, {%r2768, %r2767};
	xor.b64  	%rd4308, %rd4306, %rd4307;
	and.b64  	%rd4309, %rd4277, %rd4240;
	or.b64  	%rd4310, %rd4277, %rd4240;
	and.b64  	%rd4311, %rd4310, %rd4203;
	or.b64  	%rd4312, %rd4311, %rd4309;
	add.s64 	%rd4313, %rd4312, %rd4308;
	add.s64 	%rd4314, %rd4313, %rd4302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd4253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2770}, %rd4253;
	}
	shf.r.wrap.b32 	%r2771, %r2770, %r2769, 19;
	shf.r.wrap.b32 	%r2772, %r2769, %r2770, 19;
	mov.b64 	%rd4315, {%r2772, %r2771};
	shf.l.wrap.b32 	%r2773, %r2769, %r2770, 3;
	shf.l.wrap.b32 	%r2774, %r2770, %r2769, 3;
	mov.b64 	%rd4316, {%r2774, %r2773};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	shr.u64 	%rd4318, %rd4253, 6;
	xor.b64  	%rd4319, %rd4317, %rd4318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2775,%dummy}, %rd6315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2776}, %rd6315;
	}
	shf.r.wrap.b32 	%r2777, %r2776, %r2775, 8;
	shf.r.wrap.b32 	%r2778, %r2775, %r2776, 8;
	mov.b64 	%rd4320, {%r2778, %r2777};
	shf.r.wrap.b32 	%r2779, %r2776, %r2775, 1;
	shf.r.wrap.b32 	%r2780, %r2775, %r2776, 1;
	mov.b64 	%rd4321, {%r2780, %r2779};
	xor.b64  	%rd4322, %rd4321, %rd4320;
	shr.u64 	%rd4323, %rd6315, 7;
	xor.b64  	%rd4324, %rd4322, %rd4323;
	add.s64 	%rd4325, %rd4324, %rd6316;
	add.s64 	%rd4326, %rd4325, %rd4068;
	add.s64 	%rd4327, %rd4326, %rd4319;
	add.s64 	%rd4328, %rd4327, %rd4192;
	xor.b64  	%rd4329, %rd4266, %rd4229;
	and.b64  	%rd4330, %rd4303, %rd4329;
	xor.b64  	%rd4331, %rd4330, %rd4229;
	add.s64 	%rd4332, %rd4328, %rd4331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2781,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2782}, %rd4303;
	}
	shf.r.wrap.b32 	%r2783, %r2782, %r2781, 14;
	shf.r.wrap.b32 	%r2784, %r2781, %r2782, 14;
	mov.b64 	%rd4333, {%r2784, %r2783};
	shf.r.wrap.b32 	%r2785, %r2782, %r2781, 18;
	shf.r.wrap.b32 	%r2786, %r2781, %r2782, 18;
	mov.b64 	%rd4334, {%r2786, %r2785};
	xor.b64  	%rd4335, %rd4333, %rd4334;
	shf.l.wrap.b32 	%r2787, %r2781, %r2782, 23;
	shf.l.wrap.b32 	%r2788, %r2782, %r2781, 23;
	mov.b64 	%rd4336, {%r2788, %r2787};
	xor.b64  	%rd4337, %rd4335, %rd4336;
	add.s64 	%rd4338, %rd4332, %rd4337;
	add.s64 	%rd4339, %rd4338, -4658551843659510044;
	add.s64 	%rd4340, %rd4339, %rd4203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2789,%dummy}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2790}, %rd4314;
	}
	shf.r.wrap.b32 	%r2791, %r2790, %r2789, 28;
	shf.r.wrap.b32 	%r2792, %r2789, %r2790, 28;
	mov.b64 	%rd4341, {%r2792, %r2791};
	shf.l.wrap.b32 	%r2793, %r2789, %r2790, 30;
	shf.l.wrap.b32 	%r2794, %r2790, %r2789, 30;
	mov.b64 	%rd4342, {%r2794, %r2793};
	xor.b64  	%rd4343, %rd4341, %rd4342;
	shf.l.wrap.b32 	%r2795, %r2789, %r2790, 25;
	shf.l.wrap.b32 	%r2796, %r2790, %r2789, 25;
	mov.b64 	%rd4344, {%r2796, %r2795};
	xor.b64  	%rd4345, %rd4343, %rd4344;
	and.b64  	%rd4346, %rd4314, %rd4277;
	or.b64  	%rd4347, %rd4314, %rd4277;
	and.b64  	%rd4348, %rd4347, %rd4240;
	or.b64  	%rd4349, %rd4348, %rd4346;
	add.s64 	%rd4350, %rd4349, %rd4345;
	add.s64 	%rd4351, %rd4350, %rd4339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2797,%dummy}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2798}, %rd4290;
	}
	shf.r.wrap.b32 	%r2799, %r2798, %r2797, 19;
	shf.r.wrap.b32 	%r2800, %r2797, %r2798, 19;
	mov.b64 	%rd4352, {%r2800, %r2799};
	shf.l.wrap.b32 	%r2801, %r2797, %r2798, 3;
	shf.l.wrap.b32 	%r2802, %r2798, %r2797, 3;
	mov.b64 	%rd4353, {%r2802, %r2801};
	xor.b64  	%rd4354, %rd4352, %rd4353;
	shr.u64 	%rd4355, %rd4290, 6;
	xor.b64  	%rd4356, %rd4354, %rd4355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2803,%dummy}, %rd6314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2804}, %rd6314;
	}
	shf.r.wrap.b32 	%r2805, %r2804, %r2803, 8;
	shf.r.wrap.b32 	%r2806, %r2803, %r2804, 8;
	mov.b64 	%rd4357, {%r2806, %r2805};
	shf.r.wrap.b32 	%r2807, %r2804, %r2803, 1;
	shf.r.wrap.b32 	%r2808, %r2803, %r2804, 1;
	mov.b64 	%rd4358, {%r2808, %r2807};
	xor.b64  	%rd4359, %rd4358, %rd4357;
	shr.u64 	%rd4360, %rd6314, 7;
	xor.b64  	%rd4361, %rd4359, %rd4360;
	add.s64 	%rd4362, %rd4361, %rd6315;
	add.s64 	%rd4363, %rd4362, %rd4105;
	add.s64 	%rd4364, %rd4363, %rd4356;
	add.s64 	%rd4365, %rd4364, %rd4229;
	xor.b64  	%rd4366, %rd4303, %rd4266;
	and.b64  	%rd4367, %rd4340, %rd4366;
	xor.b64  	%rd4368, %rd4367, %rd4266;
	add.s64 	%rd4369, %rd4365, %rd4368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2809,%dummy}, %rd4340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2810}, %rd4340;
	}
	shf.r.wrap.b32 	%r2811, %r2810, %r2809, 14;
	shf.r.wrap.b32 	%r2812, %r2809, %r2810, 14;
	mov.b64 	%rd4370, {%r2812, %r2811};
	shf.r.wrap.b32 	%r2813, %r2810, %r2809, 18;
	shf.r.wrap.b32 	%r2814, %r2809, %r2810, 18;
	mov.b64 	%rd4371, {%r2814, %r2813};
	xor.b64  	%rd4372, %rd4370, %rd4371;
	shf.l.wrap.b32 	%r2815, %r2809, %r2810, 23;
	shf.l.wrap.b32 	%r2816, %r2810, %r2809, 23;
	mov.b64 	%rd4373, {%r2816, %r2815};
	xor.b64  	%rd4374, %rd4372, %rd4373;
	add.s64 	%rd4375, %rd4369, %rd4374;
	add.s64 	%rd4376, %rd4375, -4116276920077217854;
	add.s64 	%rd4377, %rd4376, %rd4240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2817,%dummy}, %rd4351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2818}, %rd4351;
	}
	shf.r.wrap.b32 	%r2819, %r2818, %r2817, 28;
	shf.r.wrap.b32 	%r2820, %r2817, %r2818, 28;
	mov.b64 	%rd4378, {%r2820, %r2819};
	shf.l.wrap.b32 	%r2821, %r2817, %r2818, 30;
	shf.l.wrap.b32 	%r2822, %r2818, %r2817, 30;
	mov.b64 	%rd4379, {%r2822, %r2821};
	xor.b64  	%rd4380, %rd4378, %rd4379;
	shf.l.wrap.b32 	%r2823, %r2817, %r2818, 25;
	shf.l.wrap.b32 	%r2824, %r2818, %r2817, 25;
	mov.b64 	%rd4381, {%r2824, %r2823};
	xor.b64  	%rd4382, %rd4380, %rd4381;
	and.b64  	%rd4383, %rd4351, %rd4314;
	or.b64  	%rd4384, %rd4351, %rd4314;
	and.b64  	%rd4385, %rd4384, %rd4277;
	or.b64  	%rd4386, %rd4385, %rd4383;
	add.s64 	%rd4387, %rd4386, %rd4382;
	add.s64 	%rd4388, %rd4387, %rd4376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2825,%dummy}, %rd4327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2826}, %rd4327;
	}
	shf.r.wrap.b32 	%r2827, %r2826, %r2825, 19;
	shf.r.wrap.b32 	%r2828, %r2825, %r2826, 19;
	mov.b64 	%rd4389, {%r2828, %r2827};
	shf.l.wrap.b32 	%r2829, %r2825, %r2826, 3;
	shf.l.wrap.b32 	%r2830, %r2826, %r2825, 3;
	mov.b64 	%rd4390, {%r2830, %r2829};
	xor.b64  	%rd4391, %rd4389, %rd4390;
	shr.u64 	%rd4392, %rd4327, 6;
	xor.b64  	%rd4393, %rd4391, %rd4392;
	shf.r.wrap.b32 	%r2831, %r2461, %r2462, 8;
	shf.r.wrap.b32 	%r2832, %r2462, %r2461, 8;
	mov.b64 	%rd4394, {%r2832, %r2831};
	shf.r.wrap.b32 	%r2833, %r2461, %r2462, 1;
	shf.r.wrap.b32 	%r2834, %r2462, %r2461, 1;
	mov.b64 	%rd4395, {%r2834, %r2833};
	xor.b64  	%rd4396, %rd4395, %rd4394;
	shr.u64 	%rd4397, %rd6313, 7;
	xor.b64  	%rd4398, %rd4396, %rd4397;
	add.s64 	%rd4399, %rd4398, %rd6314;
	add.s64 	%rd4400, %rd4399, %rd4142;
	add.s64 	%rd4401, %rd4400, %rd4393;
	add.s64 	%rd4402, %rd4401, %rd4266;
	xor.b64  	%rd4403, %rd4340, %rd4303;
	and.b64  	%rd4404, %rd4377, %rd4403;
	xor.b64  	%rd4405, %rd4404, %rd4303;
	add.s64 	%rd4406, %rd4402, %rd4405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2835,%dummy}, %rd4377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2836}, %rd4377;
	}
	shf.r.wrap.b32 	%r2837, %r2836, %r2835, 14;
	shf.r.wrap.b32 	%r2838, %r2835, %r2836, 14;
	mov.b64 	%rd4407, {%r2838, %r2837};
	shf.r.wrap.b32 	%r2839, %r2836, %r2835, 18;
	shf.r.wrap.b32 	%r2840, %r2835, %r2836, 18;
	mov.b64 	%rd4408, {%r2840, %r2839};
	xor.b64  	%rd4409, %rd4407, %rd4408;
	shf.l.wrap.b32 	%r2841, %r2835, %r2836, 23;
	shf.l.wrap.b32 	%r2842, %r2836, %r2835, 23;
	mov.b64 	%rd4410, {%r2842, %r2841};
	xor.b64  	%rd4411, %rd4409, %rd4410;
	add.s64 	%rd4412, %rd4406, %rd4411;
	add.s64 	%rd4413, %rd4412, -3051310485924567259;
	add.s64 	%rd4414, %rd4413, %rd4277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2843,%dummy}, %rd4388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2844}, %rd4388;
	}
	shf.r.wrap.b32 	%r2845, %r2844, %r2843, 28;
	shf.r.wrap.b32 	%r2846, %r2843, %r2844, 28;
	mov.b64 	%rd4415, {%r2846, %r2845};
	shf.l.wrap.b32 	%r2847, %r2843, %r2844, 30;
	shf.l.wrap.b32 	%r2848, %r2844, %r2843, 30;
	mov.b64 	%rd4416, {%r2848, %r2847};
	xor.b64  	%rd4417, %rd4415, %rd4416;
	shf.l.wrap.b32 	%r2849, %r2843, %r2844, 25;
	shf.l.wrap.b32 	%r2850, %r2844, %r2843, 25;
	mov.b64 	%rd4418, {%r2850, %r2849};
	xor.b64  	%rd4419, %rd4417, %rd4418;
	and.b64  	%rd4420, %rd4388, %rd4351;
	or.b64  	%rd4421, %rd4388, %rd4351;
	and.b64  	%rd4422, %rd4421, %rd4314;
	or.b64  	%rd4423, %rd4422, %rd4420;
	add.s64 	%rd4424, %rd4423, %rd4419;
	add.s64 	%rd4425, %rd4424, %rd4413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2851,%dummy}, %rd4364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2852}, %rd4364;
	}
	shf.r.wrap.b32 	%r2853, %r2852, %r2851, 19;
	shf.r.wrap.b32 	%r2854, %r2851, %r2852, 19;
	mov.b64 	%rd4426, {%r2854, %r2853};
	shf.l.wrap.b32 	%r2855, %r2851, %r2852, 3;
	shf.l.wrap.b32 	%r2856, %r2852, %r2851, 3;
	mov.b64 	%rd4427, {%r2856, %r2855};
	xor.b64  	%rd4428, %rd4426, %rd4427;
	shr.u64 	%rd4429, %rd4364, 6;
	xor.b64  	%rd4430, %rd4428, %rd4429;
	shf.r.wrap.b32 	%r2857, %r2489, %r2490, 8;
	shf.r.wrap.b32 	%r2858, %r2490, %r2489, 8;
	mov.b64 	%rd4431, {%r2858, %r2857};
	shf.r.wrap.b32 	%r2859, %r2489, %r2490, 1;
	shf.r.wrap.b32 	%r2860, %r2490, %r2489, 1;
	mov.b64 	%rd4432, {%r2860, %r2859};
	xor.b64  	%rd4433, %rd4432, %rd4431;
	shr.u64 	%rd4434, %rd6312, 7;
	xor.b64  	%rd4435, %rd4433, %rd4434;
	add.s64 	%rd4436, %rd4435, %rd6313;
	add.s64 	%rd4437, %rd4436, %rd4179;
	add.s64 	%rd4438, %rd4437, %rd4430;
	add.s64 	%rd4439, %rd4438, %rd4303;
	xor.b64  	%rd4440, %rd4377, %rd4340;
	and.b64  	%rd4441, %rd4414, %rd4440;
	xor.b64  	%rd4442, %rd4441, %rd4340;
	add.s64 	%rd4443, %rd4439, %rd4442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2861,%dummy}, %rd4414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2862}, %rd4414;
	}
	shf.r.wrap.b32 	%r2863, %r2862, %r2861, 14;
	shf.r.wrap.b32 	%r2864, %r2861, %r2862, 14;
	mov.b64 	%rd4444, {%r2864, %r2863};
	shf.r.wrap.b32 	%r2865, %r2862, %r2861, 18;
	shf.r.wrap.b32 	%r2866, %r2861, %r2862, 18;
	mov.b64 	%rd4445, {%r2866, %r2865};
	xor.b64  	%rd4446, %rd4444, %rd4445;
	shf.l.wrap.b32 	%r2867, %r2861, %r2862, 23;
	shf.l.wrap.b32 	%r2868, %r2862, %r2861, 23;
	mov.b64 	%rd4447, {%r2868, %r2867};
	xor.b64  	%rd4448, %rd4446, %rd4447;
	add.s64 	%rd4449, %rd4443, %rd4448;
	add.s64 	%rd4450, %rd4449, 489312712824947311;
	add.s64 	%rd4451, %rd4450, %rd4314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2869,%dummy}, %rd4425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2870}, %rd4425;
	}
	shf.r.wrap.b32 	%r2871, %r2870, %r2869, 28;
	shf.r.wrap.b32 	%r2872, %r2869, %r2870, 28;
	mov.b64 	%rd4452, {%r2872, %r2871};
	shf.l.wrap.b32 	%r2873, %r2869, %r2870, 30;
	shf.l.wrap.b32 	%r2874, %r2870, %r2869, 30;
	mov.b64 	%rd4453, {%r2874, %r2873};
	xor.b64  	%rd4454, %rd4452, %rd4453;
	shf.l.wrap.b32 	%r2875, %r2869, %r2870, 25;
	shf.l.wrap.b32 	%r2876, %r2870, %r2869, 25;
	mov.b64 	%rd4455, {%r2876, %r2875};
	xor.b64  	%rd4456, %rd4454, %rd4455;
	and.b64  	%rd4457, %rd4425, %rd4388;
	or.b64  	%rd4458, %rd4425, %rd4388;
	and.b64  	%rd4459, %rd4458, %rd4351;
	or.b64  	%rd4460, %rd4459, %rd4457;
	add.s64 	%rd4461, %rd4460, %rd4456;
	add.s64 	%rd4462, %rd4461, %rd4450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2877,%dummy}, %rd4401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2878}, %rd4401;
	}
	shf.r.wrap.b32 	%r2879, %r2878, %r2877, 19;
	shf.r.wrap.b32 	%r2880, %r2877, %r2878, 19;
	mov.b64 	%rd4463, {%r2880, %r2879};
	shf.l.wrap.b32 	%r2881, %r2877, %r2878, 3;
	shf.l.wrap.b32 	%r2882, %r2878, %r2877, 3;
	mov.b64 	%rd4464, {%r2882, %r2881};
	xor.b64  	%rd4465, %rd4463, %rd4464;
	shr.u64 	%rd4466, %rd4401, 6;
	xor.b64  	%rd4467, %rd4465, %rd4466;
	shf.r.wrap.b32 	%r2883, %r2518, %r2517, 1;
	shf.r.wrap.b32 	%r2884, %r2517, %r2518, 1;
	mov.b64 	%rd4468, {%r2884, %r2883};
	shf.r.wrap.b32 	%r2885, %r2518, %r2517, 8;
	shf.r.wrap.b32 	%r2886, %r2517, %r2518, 8;
	mov.b64 	%rd4469, {%r2886, %r2885};
	xor.b64  	%rd4470, %rd4468, %rd4469;
	shr.u64 	%rd4471, %rd3920, 7;
	xor.b64  	%rd4472, %rd4470, %rd4471;
	add.s64 	%rd4473, %rd4472, %rd6312;
	add.s64 	%rd4474, %rd4473, %rd4216;
	add.s64 	%rd4475, %rd4474, %rd4467;
	add.s64 	%rd4476, %rd4475, %rd4340;
	xor.b64  	%rd4477, %rd4414, %rd4377;
	and.b64  	%rd4478, %rd4451, %rd4477;
	xor.b64  	%rd4479, %rd4478, %rd4377;
	add.s64 	%rd4480, %rd4476, %rd4479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2887,%dummy}, %rd4451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2888}, %rd4451;
	}
	shf.r.wrap.b32 	%r2889, %r2888, %r2887, 14;
	shf.r.wrap.b32 	%r2890, %r2887, %r2888, 14;
	mov.b64 	%rd4481, {%r2890, %r2889};
	shf.r.wrap.b32 	%r2891, %r2888, %r2887, 18;
	shf.r.wrap.b32 	%r2892, %r2887, %r2888, 18;
	mov.b64 	%rd4482, {%r2892, %r2891};
	xor.b64  	%rd4483, %rd4481, %rd4482;
	shf.l.wrap.b32 	%r2893, %r2887, %r2888, 23;
	shf.l.wrap.b32 	%r2894, %r2888, %r2887, 23;
	mov.b64 	%rd4484, {%r2894, %r2893};
	xor.b64  	%rd4485, %rd4483, %rd4484;
	add.s64 	%rd4486, %rd4480, %rd4485;
	add.s64 	%rd4487, %rd4486, 1452737877330783856;
	add.s64 	%rd4488, %rd4487, %rd4351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2895,%dummy}, %rd4462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2896}, %rd4462;
	}
	shf.r.wrap.b32 	%r2897, %r2896, %r2895, 28;
	shf.r.wrap.b32 	%r2898, %r2895, %r2896, 28;
	mov.b64 	%rd4489, {%r2898, %r2897};
	shf.l.wrap.b32 	%r2899, %r2895, %r2896, 30;
	shf.l.wrap.b32 	%r2900, %r2896, %r2895, 30;
	mov.b64 	%rd4490, {%r2900, %r2899};
	xor.b64  	%rd4491, %rd4489, %rd4490;
	shf.l.wrap.b32 	%r2901, %r2895, %r2896, 25;
	shf.l.wrap.b32 	%r2902, %r2896, %r2895, 25;
	mov.b64 	%rd4492, {%r2902, %r2901};
	xor.b64  	%rd4493, %rd4491, %rd4492;
	and.b64  	%rd4494, %rd4462, %rd4425;
	or.b64  	%rd4495, %rd4462, %rd4425;
	and.b64  	%rd4496, %rd4495, %rd4388;
	or.b64  	%rd4497, %rd4496, %rd4494;
	add.s64 	%rd4498, %rd4497, %rd4493;
	add.s64 	%rd4499, %rd4498, %rd4487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2903,%dummy}, %rd4438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2904}, %rd4438;
	}
	shf.r.wrap.b32 	%r2905, %r2904, %r2903, 19;
	shf.r.wrap.b32 	%r2906, %r2903, %r2904, 19;
	mov.b64 	%rd4500, {%r2906, %r2905};
	shf.l.wrap.b32 	%r2907, %r2903, %r2904, 3;
	shf.l.wrap.b32 	%r2908, %r2904, %r2903, 3;
	mov.b64 	%rd4501, {%r2908, %r2907};
	xor.b64  	%rd4502, %rd4500, %rd4501;
	shr.u64 	%rd4503, %rd4438, 6;
	xor.b64  	%rd4504, %rd4502, %rd4503;
	shf.r.wrap.b32 	%r2909, %r2546, %r2545, 1;
	shf.r.wrap.b32 	%r2910, %r2545, %r2546, 1;
	mov.b64 	%rd4505, {%r2910, %r2909};
	shf.r.wrap.b32 	%r2911, %r2546, %r2545, 8;
	shf.r.wrap.b32 	%r2912, %r2545, %r2546, 8;
	mov.b64 	%rd4506, {%r2912, %r2911};
	xor.b64  	%rd4507, %rd4505, %rd4506;
	shr.u64 	%rd4508, %rd3957, 7;
	xor.b64  	%rd4509, %rd4507, %rd4508;
	add.s64 	%rd4510, %rd4509, %rd3920;
	add.s64 	%rd4511, %rd4510, %rd4253;
	add.s64 	%rd4512, %rd4511, %rd4504;
	add.s64 	%rd4513, %rd4512, %rd4377;
	xor.b64  	%rd4514, %rd4451, %rd4414;
	and.b64  	%rd4515, %rd4488, %rd4514;
	xor.b64  	%rd4516, %rd4515, %rd4414;
	add.s64 	%rd4517, %rd4513, %rd4516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2913,%dummy}, %rd4488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2914}, %rd4488;
	}
	shf.r.wrap.b32 	%r2915, %r2914, %r2913, 14;
	shf.r.wrap.b32 	%r2916, %r2913, %r2914, 14;
	mov.b64 	%rd4518, {%r2916, %r2915};
	shf.r.wrap.b32 	%r2917, %r2914, %r2913, 18;
	shf.r.wrap.b32 	%r2918, %r2913, %r2914, 18;
	mov.b64 	%rd4519, {%r2918, %r2917};
	xor.b64  	%rd4520, %rd4518, %rd4519;
	shf.l.wrap.b32 	%r2919, %r2913, %r2914, 23;
	shf.l.wrap.b32 	%r2920, %r2914, %r2913, 23;
	mov.b64 	%rd4521, {%r2920, %r2919};
	xor.b64  	%rd4522, %rd4520, %rd4521;
	add.s64 	%rd4523, %rd4517, %rd4522;
	add.s64 	%rd4524, %rd4523, 2861767655752347644;
	add.s64 	%rd4525, %rd4524, %rd4388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2921,%dummy}, %rd4499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2922}, %rd4499;
	}
	shf.r.wrap.b32 	%r2923, %r2922, %r2921, 28;
	shf.r.wrap.b32 	%r2924, %r2921, %r2922, 28;
	mov.b64 	%rd4526, {%r2924, %r2923};
	shf.l.wrap.b32 	%r2925, %r2921, %r2922, 30;
	shf.l.wrap.b32 	%r2926, %r2922, %r2921, 30;
	mov.b64 	%rd4527, {%r2926, %r2925};
	xor.b64  	%rd4528, %rd4526, %rd4527;
	shf.l.wrap.b32 	%r2927, %r2921, %r2922, 25;
	shf.l.wrap.b32 	%r2928, %r2922, %r2921, 25;
	mov.b64 	%rd4529, {%r2928, %r2927};
	xor.b64  	%rd4530, %rd4528, %rd4529;
	and.b64  	%rd4531, %rd4499, %rd4462;
	or.b64  	%rd4532, %rd4499, %rd4462;
	and.b64  	%rd4533, %rd4532, %rd4425;
	or.b64  	%rd4534, %rd4533, %rd4531;
	add.s64 	%rd4535, %rd4534, %rd4530;
	add.s64 	%rd4536, %rd4535, %rd4524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2929,%dummy}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2930}, %rd4475;
	}
	shf.r.wrap.b32 	%r2931, %r2930, %r2929, 19;
	shf.r.wrap.b32 	%r2932, %r2929, %r2930, 19;
	mov.b64 	%rd4537, {%r2932, %r2931};
	shf.l.wrap.b32 	%r2933, %r2929, %r2930, 3;
	shf.l.wrap.b32 	%r2934, %r2930, %r2929, 3;
	mov.b64 	%rd4538, {%r2934, %r2933};
	xor.b64  	%rd4539, %rd4537, %rd4538;
	shr.u64 	%rd4540, %rd4475, 6;
	xor.b64  	%rd4541, %rd4539, %rd4540;
	shf.r.wrap.b32 	%r2935, %r2574, %r2573, 1;
	shf.r.wrap.b32 	%r2936, %r2573, %r2574, 1;
	mov.b64 	%rd4542, {%r2936, %r2935};
	shf.r.wrap.b32 	%r2937, %r2574, %r2573, 8;
	shf.r.wrap.b32 	%r2938, %r2573, %r2574, 8;
	mov.b64 	%rd4543, {%r2938, %r2937};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	shr.u64 	%rd4545, %rd3994, 7;
	xor.b64  	%rd4546, %rd4544, %rd4545;
	add.s64 	%rd4547, %rd4546, %rd3957;
	add.s64 	%rd4548, %rd4547, %rd4290;
	add.s64 	%rd4549, %rd4548, %rd4541;
	add.s64 	%rd4550, %rd4549, %rd4414;
	xor.b64  	%rd4551, %rd4488, %rd4451;
	and.b64  	%rd4552, %rd4525, %rd4551;
	xor.b64  	%rd4553, %rd4552, %rd4451;
	add.s64 	%rd4554, %rd4550, %rd4553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2939,%dummy}, %rd4525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2940}, %rd4525;
	}
	shf.r.wrap.b32 	%r2941, %r2940, %r2939, 14;
	shf.r.wrap.b32 	%r2942, %r2939, %r2940, 14;
	mov.b64 	%rd4555, {%r2942, %r2941};
	shf.r.wrap.b32 	%r2943, %r2940, %r2939, 18;
	shf.r.wrap.b32 	%r2944, %r2939, %r2940, 18;
	mov.b64 	%rd4556, {%r2944, %r2943};
	xor.b64  	%rd4557, %rd4555, %rd4556;
	shf.l.wrap.b32 	%r2945, %r2939, %r2940, 23;
	shf.l.wrap.b32 	%r2946, %r2940, %r2939, 23;
	mov.b64 	%rd4558, {%r2946, %r2945};
	xor.b64  	%rd4559, %rd4557, %rd4558;
	add.s64 	%rd4560, %rd4554, %rd4559;
	add.s64 	%rd4561, %rd4560, 3322285676063803686;
	add.s64 	%rd4562, %rd4561, %rd4425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2947,%dummy}, %rd4536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2948}, %rd4536;
	}
	shf.r.wrap.b32 	%r2949, %r2948, %r2947, 28;
	shf.r.wrap.b32 	%r2950, %r2947, %r2948, 28;
	mov.b64 	%rd4563, {%r2950, %r2949};
	shf.l.wrap.b32 	%r2951, %r2947, %r2948, 30;
	shf.l.wrap.b32 	%r2952, %r2948, %r2947, 30;
	mov.b64 	%rd4564, {%r2952, %r2951};
	xor.b64  	%rd4565, %rd4563, %rd4564;
	shf.l.wrap.b32 	%r2953, %r2947, %r2948, 25;
	shf.l.wrap.b32 	%r2954, %r2948, %r2947, 25;
	mov.b64 	%rd4566, {%r2954, %r2953};
	xor.b64  	%rd4567, %rd4565, %rd4566;
	and.b64  	%rd4568, %rd4536, %rd4499;
	or.b64  	%rd4569, %rd4536, %rd4499;
	and.b64  	%rd4570, %rd4569, %rd4462;
	or.b64  	%rd4571, %rd4570, %rd4568;
	add.s64 	%rd4572, %rd4571, %rd4567;
	add.s64 	%rd4573, %rd4572, %rd4561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2955,%dummy}, %rd4512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2956}, %rd4512;
	}
	shf.r.wrap.b32 	%r2957, %r2956, %r2955, 19;
	shf.r.wrap.b32 	%r2958, %r2955, %r2956, 19;
	mov.b64 	%rd4574, {%r2958, %r2957};
	shf.l.wrap.b32 	%r2959, %r2955, %r2956, 3;
	shf.l.wrap.b32 	%r2960, %r2956, %r2955, 3;
	mov.b64 	%rd4575, {%r2960, %r2959};
	xor.b64  	%rd4576, %rd4574, %rd4575;
	shr.u64 	%rd4577, %rd4512, 6;
	xor.b64  	%rd4578, %rd4576, %rd4577;
	shf.r.wrap.b32 	%r2961, %r2602, %r2601, 1;
	shf.r.wrap.b32 	%r2962, %r2601, %r2602, 1;
	mov.b64 	%rd4579, {%r2962, %r2961};
	shf.r.wrap.b32 	%r2963, %r2602, %r2601, 8;
	shf.r.wrap.b32 	%r2964, %r2601, %r2602, 8;
	mov.b64 	%rd4580, {%r2964, %r2963};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	shr.u64 	%rd4582, %rd4031, 7;
	xor.b64  	%rd4583, %rd4581, %rd4582;
	add.s64 	%rd4584, %rd4583, %rd3994;
	add.s64 	%rd4585, %rd4584, %rd4327;
	add.s64 	%rd4586, %rd4585, %rd4578;
	add.s64 	%rd4587, %rd4586, %rd4451;
	xor.b64  	%rd4588, %rd4525, %rd4488;
	and.b64  	%rd4589, %rd4562, %rd4588;
	xor.b64  	%rd4590, %rd4589, %rd4488;
	add.s64 	%rd4591, %rd4587, %rd4590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2965,%dummy}, %rd4562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2966}, %rd4562;
	}
	shf.r.wrap.b32 	%r2967, %r2966, %r2965, 14;
	shf.r.wrap.b32 	%r2968, %r2965, %r2966, 14;
	mov.b64 	%rd4592, {%r2968, %r2967};
	shf.r.wrap.b32 	%r2969, %r2966, %r2965, 18;
	shf.r.wrap.b32 	%r2970, %r2965, %r2966, 18;
	mov.b64 	%rd4593, {%r2970, %r2969};
	xor.b64  	%rd4594, %rd4592, %rd4593;
	shf.l.wrap.b32 	%r2971, %r2965, %r2966, 23;
	shf.l.wrap.b32 	%r2972, %r2966, %r2965, 23;
	mov.b64 	%rd4595, {%r2972, %r2971};
	xor.b64  	%rd4596, %rd4594, %rd4595;
	add.s64 	%rd4597, %rd4591, %rd4596;
	add.s64 	%rd4598, %rd4597, 5560940570517711597;
	add.s64 	%rd4599, %rd4598, %rd4462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2973,%dummy}, %rd4573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2974}, %rd4573;
	}
	shf.r.wrap.b32 	%r2975, %r2974, %r2973, 28;
	shf.r.wrap.b32 	%r2976, %r2973, %r2974, 28;
	mov.b64 	%rd4600, {%r2976, %r2975};
	shf.l.wrap.b32 	%r2977, %r2973, %r2974, 30;
	shf.l.wrap.b32 	%r2978, %r2974, %r2973, 30;
	mov.b64 	%rd4601, {%r2978, %r2977};
	xor.b64  	%rd4602, %rd4600, %rd4601;
	shf.l.wrap.b32 	%r2979, %r2973, %r2974, 25;
	shf.l.wrap.b32 	%r2980, %r2974, %r2973, 25;
	mov.b64 	%rd4603, {%r2980, %r2979};
	xor.b64  	%rd4604, %rd4602, %rd4603;
	and.b64  	%rd4605, %rd4573, %rd4536;
	or.b64  	%rd4606, %rd4573, %rd4536;
	and.b64  	%rd4607, %rd4606, %rd4499;
	or.b64  	%rd4608, %rd4607, %rd4605;
	add.s64 	%rd4609, %rd4608, %rd4604;
	add.s64 	%rd4610, %rd4609, %rd4598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2981,%dummy}, %rd4549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2982}, %rd4549;
	}
	shf.r.wrap.b32 	%r2983, %r2982, %r2981, 19;
	shf.r.wrap.b32 	%r2984, %r2981, %r2982, 19;
	mov.b64 	%rd4611, {%r2984, %r2983};
	shf.l.wrap.b32 	%r2985, %r2981, %r2982, 3;
	shf.l.wrap.b32 	%r2986, %r2982, %r2981, 3;
	mov.b64 	%rd4612, {%r2986, %r2985};
	xor.b64  	%rd4613, %rd4611, %rd4612;
	shr.u64 	%rd4614, %rd4549, 6;
	xor.b64  	%rd4615, %rd4613, %rd4614;
	shf.r.wrap.b32 	%r2987, %r2630, %r2629, 1;
	shf.r.wrap.b32 	%r2988, %r2629, %r2630, 1;
	mov.b64 	%rd4616, {%r2988, %r2987};
	shf.r.wrap.b32 	%r2989, %r2630, %r2629, 8;
	shf.r.wrap.b32 	%r2990, %r2629, %r2630, 8;
	mov.b64 	%rd4617, {%r2990, %r2989};
	xor.b64  	%rd4618, %rd4616, %rd4617;
	shr.u64 	%rd4619, %rd4068, 7;
	xor.b64  	%rd4620, %rd4618, %rd4619;
	add.s64 	%rd4621, %rd4620, %rd4031;
	add.s64 	%rd4622, %rd4621, %rd4364;
	add.s64 	%rd4623, %rd4622, %rd4615;
	add.s64 	%rd4624, %rd4623, %rd4488;
	xor.b64  	%rd4625, %rd4562, %rd4525;
	and.b64  	%rd4626, %rd4599, %rd4625;
	xor.b64  	%rd4627, %rd4626, %rd4525;
	add.s64 	%rd4628, %rd4624, %rd4627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2991,%dummy}, %rd4599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2992}, %rd4599;
	}
	shf.r.wrap.b32 	%r2993, %r2992, %r2991, 14;
	shf.r.wrap.b32 	%r2994, %r2991, %r2992, 14;
	mov.b64 	%rd4629, {%r2994, %r2993};
	shf.r.wrap.b32 	%r2995, %r2992, %r2991, 18;
	shf.r.wrap.b32 	%r2996, %r2991, %r2992, 18;
	mov.b64 	%rd4630, {%r2996, %r2995};
	xor.b64  	%rd4631, %rd4629, %rd4630;
	shf.l.wrap.b32 	%r2997, %r2991, %r2992, 23;
	shf.l.wrap.b32 	%r2998, %r2992, %r2991, 23;
	mov.b64 	%rd4632, {%r2998, %r2997};
	xor.b64  	%rd4633, %rd4631, %rd4632;
	add.s64 	%rd4634, %rd4628, %rd4633;
	add.s64 	%rd4635, %rd4634, 5996557281743188959;
	add.s64 	%rd4636, %rd4635, %rd4499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2999,%dummy}, %rd4610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3000}, %rd4610;
	}
	shf.r.wrap.b32 	%r3001, %r3000, %r2999, 28;
	shf.r.wrap.b32 	%r3002, %r2999, %r3000, 28;
	mov.b64 	%rd4637, {%r3002, %r3001};
	shf.l.wrap.b32 	%r3003, %r2999, %r3000, 30;
	shf.l.wrap.b32 	%r3004, %r3000, %r2999, 30;
	mov.b64 	%rd4638, {%r3004, %r3003};
	xor.b64  	%rd4639, %rd4637, %rd4638;
	shf.l.wrap.b32 	%r3005, %r2999, %r3000, 25;
	shf.l.wrap.b32 	%r3006, %r3000, %r2999, 25;
	mov.b64 	%rd4640, {%r3006, %r3005};
	xor.b64  	%rd4641, %rd4639, %rd4640;
	and.b64  	%rd4642, %rd4610, %rd4573;
	or.b64  	%rd4643, %rd4610, %rd4573;
	and.b64  	%rd4644, %rd4643, %rd4536;
	or.b64  	%rd4645, %rd4644, %rd4642;
	add.s64 	%rd4646, %rd4645, %rd4641;
	add.s64 	%rd4647, %rd4646, %rd4635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3007,%dummy}, %rd4586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3008}, %rd4586;
	}
	shf.r.wrap.b32 	%r3009, %r3008, %r3007, 19;
	shf.r.wrap.b32 	%r3010, %r3007, %r3008, 19;
	mov.b64 	%rd4648, {%r3010, %r3009};
	shf.l.wrap.b32 	%r3011, %r3007, %r3008, 3;
	shf.l.wrap.b32 	%r3012, %r3008, %r3007, 3;
	mov.b64 	%rd4649, {%r3012, %r3011};
	xor.b64  	%rd4650, %rd4648, %rd4649;
	shr.u64 	%rd4651, %rd4586, 6;
	xor.b64  	%rd4652, %rd4650, %rd4651;
	shf.r.wrap.b32 	%r3013, %r2658, %r2657, 1;
	shf.r.wrap.b32 	%r3014, %r2657, %r2658, 1;
	mov.b64 	%rd4653, {%r3014, %r3013};
	shf.r.wrap.b32 	%r3015, %r2658, %r2657, 8;
	shf.r.wrap.b32 	%r3016, %r2657, %r2658, 8;
	mov.b64 	%rd4654, {%r3016, %r3015};
	xor.b64  	%rd4655, %rd4653, %rd4654;
	shr.u64 	%rd4656, %rd4105, 7;
	xor.b64  	%rd4657, %rd4655, %rd4656;
	add.s64 	%rd4658, %rd4657, %rd4068;
	add.s64 	%rd4659, %rd4658, %rd4401;
	add.s64 	%rd4660, %rd4659, %rd4652;
	add.s64 	%rd4661, %rd4660, %rd4525;
	xor.b64  	%rd4662, %rd4599, %rd4562;
	and.b64  	%rd4663, %rd4636, %rd4662;
	xor.b64  	%rd4664, %rd4663, %rd4562;
	add.s64 	%rd4665, %rd4661, %rd4664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3017,%dummy}, %rd4636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3018}, %rd4636;
	}
	shf.r.wrap.b32 	%r3019, %r3018, %r3017, 14;
	shf.r.wrap.b32 	%r3020, %r3017, %r3018, 14;
	mov.b64 	%rd4666, {%r3020, %r3019};
	shf.r.wrap.b32 	%r3021, %r3018, %r3017, 18;
	shf.r.wrap.b32 	%r3022, %r3017, %r3018, 18;
	mov.b64 	%rd4667, {%r3022, %r3021};
	xor.b64  	%rd4668, %rd4666, %rd4667;
	shf.l.wrap.b32 	%r3023, %r3017, %r3018, 23;
	shf.l.wrap.b32 	%r3024, %r3018, %r3017, 23;
	mov.b64 	%rd4669, {%r3024, %r3023};
	xor.b64  	%rd4670, %rd4668, %rd4669;
	add.s64 	%rd4671, %rd4665, %rd4670;
	add.s64 	%rd4672, %rd4671, 7280758554555802590;
	add.s64 	%rd4673, %rd4672, %rd4536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3025,%dummy}, %rd4647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3026}, %rd4647;
	}
	shf.r.wrap.b32 	%r3027, %r3026, %r3025, 28;
	shf.r.wrap.b32 	%r3028, %r3025, %r3026, 28;
	mov.b64 	%rd4674, {%r3028, %r3027};
	shf.l.wrap.b32 	%r3029, %r3025, %r3026, 30;
	shf.l.wrap.b32 	%r3030, %r3026, %r3025, 30;
	mov.b64 	%rd4675, {%r3030, %r3029};
	xor.b64  	%rd4676, %rd4674, %rd4675;
	shf.l.wrap.b32 	%r3031, %r3025, %r3026, 25;
	shf.l.wrap.b32 	%r3032, %r3026, %r3025, 25;
	mov.b64 	%rd4677, {%r3032, %r3031};
	xor.b64  	%rd4678, %rd4676, %rd4677;
	and.b64  	%rd4679, %rd4647, %rd4610;
	or.b64  	%rd4680, %rd4647, %rd4610;
	and.b64  	%rd4681, %rd4680, %rd4573;
	or.b64  	%rd4682, %rd4681, %rd4679;
	add.s64 	%rd4683, %rd4682, %rd4678;
	add.s64 	%rd4684, %rd4683, %rd4672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3033,%dummy}, %rd4623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3034}, %rd4623;
	}
	shf.r.wrap.b32 	%r3035, %r3034, %r3033, 19;
	shf.r.wrap.b32 	%r3036, %r3033, %r3034, 19;
	mov.b64 	%rd4685, {%r3036, %r3035};
	shf.l.wrap.b32 	%r3037, %r3033, %r3034, 3;
	shf.l.wrap.b32 	%r3038, %r3034, %r3033, 3;
	mov.b64 	%rd4686, {%r3038, %r3037};
	xor.b64  	%rd4687, %rd4685, %rd4686;
	shr.u64 	%rd4688, %rd4623, 6;
	xor.b64  	%rd4689, %rd4687, %rd4688;
	shf.r.wrap.b32 	%r3039, %r2686, %r2685, 1;
	shf.r.wrap.b32 	%r3040, %r2685, %r2686, 1;
	mov.b64 	%rd4690, {%r3040, %r3039};
	shf.r.wrap.b32 	%r3041, %r2686, %r2685, 8;
	shf.r.wrap.b32 	%r3042, %r2685, %r2686, 8;
	mov.b64 	%rd4691, {%r3042, %r3041};
	xor.b64  	%rd4692, %rd4690, %rd4691;
	shr.u64 	%rd4693, %rd4142, 7;
	xor.b64  	%rd4694, %rd4692, %rd4693;
	add.s64 	%rd4695, %rd4694, %rd4105;
	add.s64 	%rd4696, %rd4695, %rd4438;
	add.s64 	%rd4697, %rd4696, %rd4689;
	add.s64 	%rd4698, %rd4697, %rd4562;
	xor.b64  	%rd4699, %rd4636, %rd4599;
	and.b64  	%rd4700, %rd4673, %rd4699;
	xor.b64  	%rd4701, %rd4700, %rd4599;
	add.s64 	%rd4702, %rd4698, %rd4701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3043,%dummy}, %rd4673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3044}, %rd4673;
	}
	shf.r.wrap.b32 	%r3045, %r3044, %r3043, 14;
	shf.r.wrap.b32 	%r3046, %r3043, %r3044, 14;
	mov.b64 	%rd4703, {%r3046, %r3045};
	shf.r.wrap.b32 	%r3047, %r3044, %r3043, 18;
	shf.r.wrap.b32 	%r3048, %r3043, %r3044, 18;
	mov.b64 	%rd4704, {%r3048, %r3047};
	xor.b64  	%rd4705, %rd4703, %rd4704;
	shf.l.wrap.b32 	%r3049, %r3043, %r3044, 23;
	shf.l.wrap.b32 	%r3050, %r3044, %r3043, 23;
	mov.b64 	%rd4706, {%r3050, %r3049};
	xor.b64  	%rd4707, %rd4705, %rd4706;
	add.s64 	%rd4708, %rd4702, %rd4707;
	add.s64 	%rd4709, %rd4708, 8532644243296465576;
	add.s64 	%rd4710, %rd4709, %rd4573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3051,%dummy}, %rd4684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3052}, %rd4684;
	}
	shf.r.wrap.b32 	%r3053, %r3052, %r3051, 28;
	shf.r.wrap.b32 	%r3054, %r3051, %r3052, 28;
	mov.b64 	%rd4711, {%r3054, %r3053};
	shf.l.wrap.b32 	%r3055, %r3051, %r3052, 30;
	shf.l.wrap.b32 	%r3056, %r3052, %r3051, 30;
	mov.b64 	%rd4712, {%r3056, %r3055};
	xor.b64  	%rd4713, %rd4711, %rd4712;
	shf.l.wrap.b32 	%r3057, %r3051, %r3052, 25;
	shf.l.wrap.b32 	%r3058, %r3052, %r3051, 25;
	mov.b64 	%rd4714, {%r3058, %r3057};
	xor.b64  	%rd4715, %rd4713, %rd4714;
	and.b64  	%rd4716, %rd4684, %rd4647;
	or.b64  	%rd4717, %rd4684, %rd4647;
	and.b64  	%rd4718, %rd4717, %rd4610;
	or.b64  	%rd4719, %rd4718, %rd4716;
	add.s64 	%rd4720, %rd4719, %rd4715;
	add.s64 	%rd4721, %rd4720, %rd4709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3059,%dummy}, %rd4660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3060}, %rd4660;
	}
	shf.r.wrap.b32 	%r3061, %r3060, %r3059, 19;
	shf.r.wrap.b32 	%r3062, %r3059, %r3060, 19;
	mov.b64 	%rd4722, {%r3062, %r3061};
	shf.l.wrap.b32 	%r3063, %r3059, %r3060, 3;
	shf.l.wrap.b32 	%r3064, %r3060, %r3059, 3;
	mov.b64 	%rd4723, {%r3064, %r3063};
	xor.b64  	%rd4724, %rd4722, %rd4723;
	shr.u64 	%rd4725, %rd4660, 6;
	xor.b64  	%rd4726, %rd4724, %rd4725;
	shf.r.wrap.b32 	%r3065, %r2714, %r2713, 1;
	shf.r.wrap.b32 	%r3066, %r2713, %r2714, 1;
	mov.b64 	%rd4727, {%r3066, %r3065};
	shf.r.wrap.b32 	%r3067, %r2714, %r2713, 8;
	shf.r.wrap.b32 	%r3068, %r2713, %r2714, 8;
	mov.b64 	%rd4728, {%r3068, %r3067};
	xor.b64  	%rd4729, %rd4727, %rd4728;
	shr.u64 	%rd4730, %rd4179, 7;
	xor.b64  	%rd4731, %rd4729, %rd4730;
	add.s64 	%rd4732, %rd4731, %rd4142;
	add.s64 	%rd4733, %rd4732, %rd4475;
	add.s64 	%rd4734, %rd4733, %rd4726;
	add.s64 	%rd4735, %rd4734, %rd4599;
	xor.b64  	%rd4736, %rd4673, %rd4636;
	and.b64  	%rd4737, %rd4710, %rd4736;
	xor.b64  	%rd4738, %rd4737, %rd4636;
	add.s64 	%rd4739, %rd4735, %rd4738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3069,%dummy}, %rd4710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3070}, %rd4710;
	}
	shf.r.wrap.b32 	%r3071, %r3070, %r3069, 14;
	shf.r.wrap.b32 	%r3072, %r3069, %r3070, 14;
	mov.b64 	%rd4740, {%r3072, %r3071};
	shf.r.wrap.b32 	%r3073, %r3070, %r3069, 18;
	shf.r.wrap.b32 	%r3074, %r3069, %r3070, 18;
	mov.b64 	%rd4741, {%r3074, %r3073};
	xor.b64  	%rd4742, %rd4740, %rd4741;
	shf.l.wrap.b32 	%r3075, %r3069, %r3070, 23;
	shf.l.wrap.b32 	%r3076, %r3070, %r3069, 23;
	mov.b64 	%rd4743, {%r3076, %r3075};
	xor.b64  	%rd4744, %rd4742, %rd4743;
	add.s64 	%rd4745, %rd4739, %rd4744;
	add.s64 	%rd4746, %rd4745, -9096487096722542874;
	add.s64 	%rd4747, %rd4746, %rd4610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3077,%dummy}, %rd4721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3078}, %rd4721;
	}
	shf.r.wrap.b32 	%r3079, %r3078, %r3077, 28;
	shf.r.wrap.b32 	%r3080, %r3077, %r3078, 28;
	mov.b64 	%rd4748, {%r3080, %r3079};
	shf.l.wrap.b32 	%r3081, %r3077, %r3078, 30;
	shf.l.wrap.b32 	%r3082, %r3078, %r3077, 30;
	mov.b64 	%rd4749, {%r3082, %r3081};
	xor.b64  	%rd4750, %rd4748, %rd4749;
	shf.l.wrap.b32 	%r3083, %r3077, %r3078, 25;
	shf.l.wrap.b32 	%r3084, %r3078, %r3077, 25;
	mov.b64 	%rd4751, {%r3084, %r3083};
	xor.b64  	%rd4752, %rd4750, %rd4751;
	and.b64  	%rd4753, %rd4721, %rd4684;
	or.b64  	%rd4754, %rd4721, %rd4684;
	and.b64  	%rd4755, %rd4754, %rd4647;
	or.b64  	%rd4756, %rd4755, %rd4753;
	add.s64 	%rd4757, %rd4756, %rd4752;
	add.s64 	%rd4758, %rd4757, %rd4746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3085,%dummy}, %rd4697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3086}, %rd4697;
	}
	shf.r.wrap.b32 	%r3087, %r3086, %r3085, 19;
	shf.r.wrap.b32 	%r3088, %r3085, %r3086, 19;
	mov.b64 	%rd4759, {%r3088, %r3087};
	shf.l.wrap.b32 	%r3089, %r3085, %r3086, 3;
	shf.l.wrap.b32 	%r3090, %r3086, %r3085, 3;
	mov.b64 	%rd4760, {%r3090, %r3089};
	xor.b64  	%rd4761, %rd4759, %rd4760;
	shr.u64 	%rd4762, %rd4697, 6;
	xor.b64  	%rd4763, %rd4761, %rd4762;
	shf.r.wrap.b32 	%r3091, %r2742, %r2741, 1;
	shf.r.wrap.b32 	%r3092, %r2741, %r2742, 1;
	mov.b64 	%rd4764, {%r3092, %r3091};
	shf.r.wrap.b32 	%r3093, %r2742, %r2741, 8;
	shf.r.wrap.b32 	%r3094, %r2741, %r2742, 8;
	mov.b64 	%rd4765, {%r3094, %r3093};
	xor.b64  	%rd4766, %rd4764, %rd4765;
	shr.u64 	%rd4767, %rd4216, 7;
	xor.b64  	%rd4768, %rd4766, %rd4767;
	add.s64 	%rd4769, %rd4768, %rd4179;
	add.s64 	%rd4770, %rd4769, %rd4512;
	add.s64 	%rd4771, %rd4770, %rd4763;
	add.s64 	%rd4772, %rd4771, %rd4636;
	xor.b64  	%rd4773, %rd4710, %rd4673;
	and.b64  	%rd4774, %rd4747, %rd4773;
	xor.b64  	%rd4775, %rd4774, %rd4673;
	add.s64 	%rd4776, %rd4772, %rd4775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3095,%dummy}, %rd4747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3096}, %rd4747;
	}
	shf.r.wrap.b32 	%r3097, %r3096, %r3095, 14;
	shf.r.wrap.b32 	%r3098, %r3095, %r3096, 14;
	mov.b64 	%rd4777, {%r3098, %r3097};
	shf.r.wrap.b32 	%r3099, %r3096, %r3095, 18;
	shf.r.wrap.b32 	%r3100, %r3095, %r3096, 18;
	mov.b64 	%rd4778, {%r3100, %r3099};
	xor.b64  	%rd4779, %rd4777, %rd4778;
	shf.l.wrap.b32 	%r3101, %r3095, %r3096, 23;
	shf.l.wrap.b32 	%r3102, %r3096, %r3095, 23;
	mov.b64 	%rd4780, {%r3102, %r3101};
	xor.b64  	%rd4781, %rd4779, %rd4780;
	add.s64 	%rd4782, %rd4776, %rd4781;
	add.s64 	%rd4783, %rd4782, -7894198246740708037;
	add.s64 	%rd4784, %rd4783, %rd4647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3103,%dummy}, %rd4758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3104}, %rd4758;
	}
	shf.r.wrap.b32 	%r3105, %r3104, %r3103, 28;
	shf.r.wrap.b32 	%r3106, %r3103, %r3104, 28;
	mov.b64 	%rd4785, {%r3106, %r3105};
	shf.l.wrap.b32 	%r3107, %r3103, %r3104, 30;
	shf.l.wrap.b32 	%r3108, %r3104, %r3103, 30;
	mov.b64 	%rd4786, {%r3108, %r3107};
	xor.b64  	%rd4787, %rd4785, %rd4786;
	shf.l.wrap.b32 	%r3109, %r3103, %r3104, 25;
	shf.l.wrap.b32 	%r3110, %r3104, %r3103, 25;
	mov.b64 	%rd4788, {%r3110, %r3109};
	xor.b64  	%rd4789, %rd4787, %rd4788;
	and.b64  	%rd4790, %rd4758, %rd4721;
	or.b64  	%rd4791, %rd4758, %rd4721;
	and.b64  	%rd4792, %rd4791, %rd4684;
	or.b64  	%rd4793, %rd4792, %rd4790;
	add.s64 	%rd4794, %rd4793, %rd4789;
	add.s64 	%rd4795, %rd4794, %rd4783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3111,%dummy}, %rd4734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3112}, %rd4734;
	}
	shf.r.wrap.b32 	%r3113, %r3112, %r3111, 19;
	shf.r.wrap.b32 	%r3114, %r3111, %r3112, 19;
	mov.b64 	%rd4796, {%r3114, %r3113};
	shf.l.wrap.b32 	%r3115, %r3111, %r3112, 3;
	shf.l.wrap.b32 	%r3116, %r3112, %r3111, 3;
	mov.b64 	%rd4797, {%r3116, %r3115};
	xor.b64  	%rd4798, %rd4796, %rd4797;
	shr.u64 	%rd4799, %rd4734, 6;
	xor.b64  	%rd4800, %rd4798, %rd4799;
	shf.r.wrap.b32 	%r3117, %r2770, %r2769, 1;
	shf.r.wrap.b32 	%r3118, %r2769, %r2770, 1;
	mov.b64 	%rd4801, {%r3118, %r3117};
	shf.r.wrap.b32 	%r3119, %r2770, %r2769, 8;
	shf.r.wrap.b32 	%r3120, %r2769, %r2770, 8;
	mov.b64 	%rd4802, {%r3120, %r3119};
	xor.b64  	%rd4803, %rd4801, %rd4802;
	shr.u64 	%rd4804, %rd4253, 7;
	xor.b64  	%rd4805, %rd4803, %rd4804;
	add.s64 	%rd4806, %rd4805, %rd4216;
	add.s64 	%rd4807, %rd4806, %rd4549;
	add.s64 	%rd4808, %rd4807, %rd4800;
	add.s64 	%rd4809, %rd4808, %rd4673;
	xor.b64  	%rd4810, %rd4747, %rd4710;
	and.b64  	%rd4811, %rd4784, %rd4810;
	xor.b64  	%rd4812, %rd4811, %rd4710;
	add.s64 	%rd4813, %rd4809, %rd4812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3121,%dummy}, %rd4784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3122}, %rd4784;
	}
	shf.r.wrap.b32 	%r3123, %r3122, %r3121, 14;
	shf.r.wrap.b32 	%r3124, %r3121, %r3122, 14;
	mov.b64 	%rd4814, {%r3124, %r3123};
	shf.r.wrap.b32 	%r3125, %r3122, %r3121, 18;
	shf.r.wrap.b32 	%r3126, %r3121, %r3122, 18;
	mov.b64 	%rd4815, {%r3126, %r3125};
	xor.b64  	%rd4816, %rd4814, %rd4815;
	shf.l.wrap.b32 	%r3127, %r3121, %r3122, 23;
	shf.l.wrap.b32 	%r3128, %r3122, %r3121, 23;
	mov.b64 	%rd4817, {%r3128, %r3127};
	xor.b64  	%rd4818, %rd4816, %rd4817;
	add.s64 	%rd4819, %rd4813, %rd4818;
	add.s64 	%rd4820, %rd4819, -6719396339535248540;
	add.s64 	%rd4821, %rd4820, %rd4684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3129,%dummy}, %rd4795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3130}, %rd4795;
	}
	shf.r.wrap.b32 	%r3131, %r3130, %r3129, 28;
	shf.r.wrap.b32 	%r3132, %r3129, %r3130, 28;
	mov.b64 	%rd4822, {%r3132, %r3131};
	shf.l.wrap.b32 	%r3133, %r3129, %r3130, 30;
	shf.l.wrap.b32 	%r3134, %r3130, %r3129, 30;
	mov.b64 	%rd4823, {%r3134, %r3133};
	xor.b64  	%rd4824, %rd4822, %rd4823;
	shf.l.wrap.b32 	%r3135, %r3129, %r3130, 25;
	shf.l.wrap.b32 	%r3136, %r3130, %r3129, 25;
	mov.b64 	%rd4825, {%r3136, %r3135};
	xor.b64  	%rd4826, %rd4824, %rd4825;
	and.b64  	%rd4827, %rd4795, %rd4758;
	or.b64  	%rd4828, %rd4795, %rd4758;
	and.b64  	%rd4829, %rd4828, %rd4721;
	or.b64  	%rd4830, %rd4829, %rd4827;
	add.s64 	%rd4831, %rd4830, %rd4826;
	add.s64 	%rd4832, %rd4831, %rd4820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3137,%dummy}, %rd4771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3138}, %rd4771;
	}
	shf.r.wrap.b32 	%r3139, %r3138, %r3137, 19;
	shf.r.wrap.b32 	%r3140, %r3137, %r3138, 19;
	mov.b64 	%rd4833, {%r3140, %r3139};
	shf.l.wrap.b32 	%r3141, %r3137, %r3138, 3;
	shf.l.wrap.b32 	%r3142, %r3138, %r3137, 3;
	mov.b64 	%rd4834, {%r3142, %r3141};
	xor.b64  	%rd4835, %rd4833, %rd4834;
	shr.u64 	%rd4836, %rd4771, 6;
	xor.b64  	%rd4837, %rd4835, %rd4836;
	shf.r.wrap.b32 	%r3143, %r2798, %r2797, 1;
	shf.r.wrap.b32 	%r3144, %r2797, %r2798, 1;
	mov.b64 	%rd4838, {%r3144, %r3143};
	shf.r.wrap.b32 	%r3145, %r2798, %r2797, 8;
	shf.r.wrap.b32 	%r3146, %r2797, %r2798, 8;
	mov.b64 	%rd4839, {%r3146, %r3145};
	xor.b64  	%rd4840, %rd4838, %rd4839;
	shr.u64 	%rd4841, %rd4290, 7;
	xor.b64  	%rd4842, %rd4840, %rd4841;
	add.s64 	%rd4843, %rd4842, %rd4253;
	add.s64 	%rd4844, %rd4843, %rd4586;
	add.s64 	%rd4845, %rd4844, %rd4837;
	add.s64 	%rd4846, %rd4845, %rd4710;
	xor.b64  	%rd4847, %rd4784, %rd4747;
	and.b64  	%rd4848, %rd4821, %rd4847;
	xor.b64  	%rd4849, %rd4848, %rd4747;
	add.s64 	%rd4850, %rd4846, %rd4849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3147,%dummy}, %rd4821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3148}, %rd4821;
	}
	shf.r.wrap.b32 	%r3149, %r3148, %r3147, 14;
	shf.r.wrap.b32 	%r3150, %r3147, %r3148, 14;
	mov.b64 	%rd4851, {%r3150, %r3149};
	shf.r.wrap.b32 	%r3151, %r3148, %r3147, 18;
	shf.r.wrap.b32 	%r3152, %r3147, %r3148, 18;
	mov.b64 	%rd4852, {%r3152, %r3151};
	xor.b64  	%rd4853, %rd4851, %rd4852;
	shf.l.wrap.b32 	%r3153, %r3147, %r3148, 23;
	shf.l.wrap.b32 	%r3154, %r3148, %r3147, 23;
	mov.b64 	%rd4854, {%r3154, %r3153};
	xor.b64  	%rd4855, %rd4853, %rd4854;
	add.s64 	%rd4856, %rd4850, %rd4855;
	add.s64 	%rd4857, %rd4856, -6333637450476146687;
	add.s64 	%rd4858, %rd4857, %rd4721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3155,%dummy}, %rd4832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3156}, %rd4832;
	}
	shf.r.wrap.b32 	%r3157, %r3156, %r3155, 28;
	shf.r.wrap.b32 	%r3158, %r3155, %r3156, 28;
	mov.b64 	%rd4859, {%r3158, %r3157};
	shf.l.wrap.b32 	%r3159, %r3155, %r3156, 30;
	shf.l.wrap.b32 	%r3160, %r3156, %r3155, 30;
	mov.b64 	%rd4860, {%r3160, %r3159};
	xor.b64  	%rd4861, %rd4859, %rd4860;
	shf.l.wrap.b32 	%r3161, %r3155, %r3156, 25;
	shf.l.wrap.b32 	%r3162, %r3156, %r3155, 25;
	mov.b64 	%rd4862, {%r3162, %r3161};
	xor.b64  	%rd4863, %rd4861, %rd4862;
	and.b64  	%rd4864, %rd4832, %rd4795;
	or.b64  	%rd4865, %rd4832, %rd4795;
	and.b64  	%rd4866, %rd4865, %rd4758;
	or.b64  	%rd4867, %rd4866, %rd4864;
	add.s64 	%rd4868, %rd4867, %rd4863;
	add.s64 	%rd4869, %rd4868, %rd4857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3163,%dummy}, %rd4808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3164}, %rd4808;
	}
	shf.r.wrap.b32 	%r3165, %r3164, %r3163, 19;
	shf.r.wrap.b32 	%r3166, %r3163, %r3164, 19;
	mov.b64 	%rd4870, {%r3166, %r3165};
	shf.l.wrap.b32 	%r3167, %r3163, %r3164, 3;
	shf.l.wrap.b32 	%r3168, %r3164, %r3163, 3;
	mov.b64 	%rd4871, {%r3168, %r3167};
	xor.b64  	%rd4872, %rd4870, %rd4871;
	shr.u64 	%rd4873, %rd4808, 6;
	xor.b64  	%rd4874, %rd4872, %rd4873;
	shf.r.wrap.b32 	%r3169, %r2826, %r2825, 1;
	shf.r.wrap.b32 	%r3170, %r2825, %r2826, 1;
	mov.b64 	%rd4875, {%r3170, %r3169};
	shf.r.wrap.b32 	%r3171, %r2826, %r2825, 8;
	shf.r.wrap.b32 	%r3172, %r2825, %r2826, 8;
	mov.b64 	%rd4876, {%r3172, %r3171};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	shr.u64 	%rd4878, %rd4327, 7;
	xor.b64  	%rd4879, %rd4877, %rd4878;
	add.s64 	%rd4880, %rd4879, %rd4290;
	add.s64 	%rd4881, %rd4880, %rd4623;
	add.s64 	%rd4882, %rd4881, %rd4874;
	add.s64 	%rd4883, %rd4882, %rd4747;
	xor.b64  	%rd4884, %rd4821, %rd4784;
	and.b64  	%rd4885, %rd4858, %rd4884;
	xor.b64  	%rd4886, %rd4885, %rd4784;
	add.s64 	%rd4887, %rd4883, %rd4886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3173,%dummy}, %rd4858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3174}, %rd4858;
	}
	shf.r.wrap.b32 	%r3175, %r3174, %r3173, 14;
	shf.r.wrap.b32 	%r3176, %r3173, %r3174, 14;
	mov.b64 	%rd4888, {%r3176, %r3175};
	shf.r.wrap.b32 	%r3177, %r3174, %r3173, 18;
	shf.r.wrap.b32 	%r3178, %r3173, %r3174, 18;
	mov.b64 	%rd4889, {%r3178, %r3177};
	xor.b64  	%rd4890, %rd4888, %rd4889;
	shf.l.wrap.b32 	%r3179, %r3173, %r3174, 23;
	shf.l.wrap.b32 	%r3180, %r3174, %r3173, 23;
	mov.b64 	%rd4891, {%r3180, %r3179};
	xor.b64  	%rd4892, %rd4890, %rd4891;
	add.s64 	%rd4893, %rd4887, %rd4892;
	add.s64 	%rd4894, %rd4893, -4446306890439682159;
	add.s64 	%rd4895, %rd4894, %rd4758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3181,%dummy}, %rd4869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3182}, %rd4869;
	}
	shf.r.wrap.b32 	%r3183, %r3182, %r3181, 28;
	shf.r.wrap.b32 	%r3184, %r3181, %r3182, 28;
	mov.b64 	%rd4896, {%r3184, %r3183};
	shf.l.wrap.b32 	%r3185, %r3181, %r3182, 30;
	shf.l.wrap.b32 	%r3186, %r3182, %r3181, 30;
	mov.b64 	%rd4897, {%r3186, %r3185};
	xor.b64  	%rd4898, %rd4896, %rd4897;
	shf.l.wrap.b32 	%r3187, %r3181, %r3182, 25;
	shf.l.wrap.b32 	%r3188, %r3182, %r3181, 25;
	mov.b64 	%rd4899, {%r3188, %r3187};
	xor.b64  	%rd4900, %rd4898, %rd4899;
	and.b64  	%rd4901, %rd4869, %rd4832;
	or.b64  	%rd4902, %rd4869, %rd4832;
	and.b64  	%rd4903, %rd4902, %rd4795;
	or.b64  	%rd4904, %rd4903, %rd4901;
	add.s64 	%rd4905, %rd4904, %rd4900;
	add.s64 	%rd4906, %rd4905, %rd4894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3189,%dummy}, %rd4845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3190}, %rd4845;
	}
	shf.r.wrap.b32 	%r3191, %r3190, %r3189, 19;
	shf.r.wrap.b32 	%r3192, %r3189, %r3190, 19;
	mov.b64 	%rd4907, {%r3192, %r3191};
	shf.l.wrap.b32 	%r3193, %r3189, %r3190, 3;
	shf.l.wrap.b32 	%r3194, %r3190, %r3189, 3;
	mov.b64 	%rd4908, {%r3194, %r3193};
	xor.b64  	%rd4909, %rd4907, %rd4908;
	shr.u64 	%rd4910, %rd4845, 6;
	xor.b64  	%rd4911, %rd4909, %rd4910;
	shf.r.wrap.b32 	%r3195, %r2852, %r2851, 1;
	shf.r.wrap.b32 	%r3196, %r2851, %r2852, 1;
	mov.b64 	%rd4912, {%r3196, %r3195};
	shf.r.wrap.b32 	%r3197, %r2852, %r2851, 8;
	shf.r.wrap.b32 	%r3198, %r2851, %r2852, 8;
	mov.b64 	%rd4913, {%r3198, %r3197};
	xor.b64  	%rd4914, %rd4912, %rd4913;
	shr.u64 	%rd4915, %rd4364, 7;
	xor.b64  	%rd4916, %rd4914, %rd4915;
	add.s64 	%rd4917, %rd4916, %rd4327;
	add.s64 	%rd4918, %rd4917, %rd4660;
	add.s64 	%rd4919, %rd4918, %rd4911;
	add.s64 	%rd4920, %rd4919, %rd4784;
	xor.b64  	%rd4921, %rd4858, %rd4821;
	and.b64  	%rd4922, %rd4895, %rd4921;
	xor.b64  	%rd4923, %rd4922, %rd4821;
	add.s64 	%rd4924, %rd4920, %rd4923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3199,%dummy}, %rd4895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3200}, %rd4895;
	}
	shf.r.wrap.b32 	%r3201, %r3200, %r3199, 14;
	shf.r.wrap.b32 	%r3202, %r3199, %r3200, 14;
	mov.b64 	%rd4925, {%r3202, %r3201};
	shf.r.wrap.b32 	%r3203, %r3200, %r3199, 18;
	shf.r.wrap.b32 	%r3204, %r3199, %r3200, 18;
	mov.b64 	%rd4926, {%r3204, %r3203};
	xor.b64  	%rd4927, %rd4925, %rd4926;
	shf.l.wrap.b32 	%r3205, %r3199, %r3200, 23;
	shf.l.wrap.b32 	%r3206, %r3200, %r3199, 23;
	mov.b64 	%rd4928, {%r3206, %r3205};
	xor.b64  	%rd4929, %rd4927, %rd4928;
	add.s64 	%rd4930, %rd4924, %rd4929;
	add.s64 	%rd4931, %rd4930, -4076793802049405392;
	add.s64 	%rd4932, %rd4931, %rd4795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3207,%dummy}, %rd4906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3208}, %rd4906;
	}
	shf.r.wrap.b32 	%r3209, %r3208, %r3207, 28;
	shf.r.wrap.b32 	%r3210, %r3207, %r3208, 28;
	mov.b64 	%rd4933, {%r3210, %r3209};
	shf.l.wrap.b32 	%r3211, %r3207, %r3208, 30;
	shf.l.wrap.b32 	%r3212, %r3208, %r3207, 30;
	mov.b64 	%rd4934, {%r3212, %r3211};
	xor.b64  	%rd4935, %rd4933, %rd4934;
	shf.l.wrap.b32 	%r3213, %r3207, %r3208, 25;
	shf.l.wrap.b32 	%r3214, %r3208, %r3207, 25;
	mov.b64 	%rd4936, {%r3214, %r3213};
	xor.b64  	%rd4937, %rd4935, %rd4936;
	and.b64  	%rd4938, %rd4906, %rd4869;
	or.b64  	%rd4939, %rd4906, %rd4869;
	and.b64  	%rd4940, %rd4939, %rd4832;
	or.b64  	%rd4941, %rd4940, %rd4938;
	add.s64 	%rd4942, %rd4941, %rd4937;
	add.s64 	%rd4943, %rd4942, %rd4931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3215,%dummy}, %rd4882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3216}, %rd4882;
	}
	shf.r.wrap.b32 	%r3217, %r3216, %r3215, 19;
	shf.r.wrap.b32 	%r3218, %r3215, %r3216, 19;
	mov.b64 	%rd4944, {%r3218, %r3217};
	shf.l.wrap.b32 	%r3219, %r3215, %r3216, 3;
	shf.l.wrap.b32 	%r3220, %r3216, %r3215, 3;
	mov.b64 	%rd4945, {%r3220, %r3219};
	xor.b64  	%rd4946, %rd4944, %rd4945;
	shr.u64 	%rd4947, %rd4882, 6;
	xor.b64  	%rd4948, %rd4946, %rd4947;
	shf.r.wrap.b32 	%r3221, %r2878, %r2877, 1;
	shf.r.wrap.b32 	%r3222, %r2877, %r2878, 1;
	mov.b64 	%rd4949, {%r3222, %r3221};
	shf.r.wrap.b32 	%r3223, %r2878, %r2877, 8;
	shf.r.wrap.b32 	%r3224, %r2877, %r2878, 8;
	mov.b64 	%rd4950, {%r3224, %r3223};
	xor.b64  	%rd4951, %rd4949, %rd4950;
	shr.u64 	%rd4952, %rd4401, 7;
	xor.b64  	%rd4953, %rd4951, %rd4952;
	add.s64 	%rd4954, %rd4953, %rd4364;
	add.s64 	%rd4955, %rd4954, %rd4697;
	add.s64 	%rd4956, %rd4955, %rd4948;
	add.s64 	%rd4957, %rd4956, %rd4821;
	xor.b64  	%rd4958, %rd4895, %rd4858;
	and.b64  	%rd4959, %rd4932, %rd4958;
	xor.b64  	%rd4960, %rd4959, %rd4858;
	add.s64 	%rd4961, %rd4957, %rd4960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3225,%dummy}, %rd4932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3226}, %rd4932;
	}
	shf.r.wrap.b32 	%r3227, %r3226, %r3225, 14;
	shf.r.wrap.b32 	%r3228, %r3225, %r3226, 14;
	mov.b64 	%rd4962, {%r3228, %r3227};
	shf.r.wrap.b32 	%r3229, %r3226, %r3225, 18;
	shf.r.wrap.b32 	%r3230, %r3225, %r3226, 18;
	mov.b64 	%rd4963, {%r3230, %r3229};
	xor.b64  	%rd4964, %rd4962, %rd4963;
	shf.l.wrap.b32 	%r3231, %r3225, %r3226, 23;
	shf.l.wrap.b32 	%r3232, %r3226, %r3225, 23;
	mov.b64 	%rd4965, {%r3232, %r3231};
	xor.b64  	%rd4966, %rd4964, %rd4965;
	add.s64 	%rd4967, %rd4961, %rd4966;
	add.s64 	%rd4968, %rd4967, -3345356375505022440;
	add.s64 	%rd4969, %rd4968, %rd4832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3233,%dummy}, %rd4943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3234}, %rd4943;
	}
	shf.r.wrap.b32 	%r3235, %r3234, %r3233, 28;
	shf.r.wrap.b32 	%r3236, %r3233, %r3234, 28;
	mov.b64 	%rd4970, {%r3236, %r3235};
	shf.l.wrap.b32 	%r3237, %r3233, %r3234, 30;
	shf.l.wrap.b32 	%r3238, %r3234, %r3233, 30;
	mov.b64 	%rd4971, {%r3238, %r3237};
	xor.b64  	%rd4972, %rd4970, %rd4971;
	shf.l.wrap.b32 	%r3239, %r3233, %r3234, 25;
	shf.l.wrap.b32 	%r3240, %r3234, %r3233, 25;
	mov.b64 	%rd4973, {%r3240, %r3239};
	xor.b64  	%rd4974, %rd4972, %rd4973;
	and.b64  	%rd4975, %rd4943, %rd4906;
	or.b64  	%rd4976, %rd4943, %rd4906;
	and.b64  	%rd4977, %rd4976, %rd4869;
	or.b64  	%rd4978, %rd4977, %rd4975;
	add.s64 	%rd4979, %rd4978, %rd4974;
	add.s64 	%rd4980, %rd4979, %rd4968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3241,%dummy}, %rd4919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3242}, %rd4919;
	}
	shf.r.wrap.b32 	%r3243, %r3242, %r3241, 19;
	shf.r.wrap.b32 	%r3244, %r3241, %r3242, 19;
	mov.b64 	%rd4981, {%r3244, %r3243};
	shf.l.wrap.b32 	%r3245, %r3241, %r3242, 3;
	shf.l.wrap.b32 	%r3246, %r3242, %r3241, 3;
	mov.b64 	%rd4982, {%r3246, %r3245};
	xor.b64  	%rd4983, %rd4981, %rd4982;
	shr.u64 	%rd4984, %rd4919, 6;
	xor.b64  	%rd4985, %rd4983, %rd4984;
	shf.r.wrap.b32 	%r3247, %r2904, %r2903, 1;
	shf.r.wrap.b32 	%r3248, %r2903, %r2904, 1;
	mov.b64 	%rd4986, {%r3248, %r3247};
	shf.r.wrap.b32 	%r3249, %r2904, %r2903, 8;
	shf.r.wrap.b32 	%r3250, %r2903, %r2904, 8;
	mov.b64 	%rd4987, {%r3250, %r3249};
	xor.b64  	%rd4988, %rd4986, %rd4987;
	shr.u64 	%rd4989, %rd4438, 7;
	xor.b64  	%rd4990, %rd4988, %rd4989;
	add.s64 	%rd4991, %rd4990, %rd4401;
	add.s64 	%rd4992, %rd4991, %rd4734;
	add.s64 	%rd4993, %rd4992, %rd4985;
	add.s64 	%rd4994, %rd4993, %rd4858;
	xor.b64  	%rd4995, %rd4932, %rd4895;
	and.b64  	%rd4996, %rd4969, %rd4995;
	xor.b64  	%rd4997, %rd4996, %rd4895;
	add.s64 	%rd4998, %rd4994, %rd4997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3251,%dummy}, %rd4969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3252}, %rd4969;
	}
	shf.r.wrap.b32 	%r3253, %r3252, %r3251, 14;
	shf.r.wrap.b32 	%r3254, %r3251, %r3252, 14;
	mov.b64 	%rd4999, {%r3254, %r3253};
	shf.r.wrap.b32 	%r3255, %r3252, %r3251, 18;
	shf.r.wrap.b32 	%r3256, %r3251, %r3252, 18;
	mov.b64 	%rd5000, {%r3256, %r3255};
	xor.b64  	%rd5001, %rd4999, %rd5000;
	shf.l.wrap.b32 	%r3257, %r3251, %r3252, 23;
	shf.l.wrap.b32 	%r3258, %r3252, %r3251, 23;
	mov.b64 	%rd5002, {%r3258, %r3257};
	xor.b64  	%rd5003, %rd5001, %rd5002;
	add.s64 	%rd5004, %rd4998, %rd5003;
	add.s64 	%rd5005, %rd5004, -2983346525034927856;
	add.s64 	%rd5006, %rd5005, %rd4869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3259,%dummy}, %rd4980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3260}, %rd4980;
	}
	shf.r.wrap.b32 	%r3261, %r3260, %r3259, 28;
	shf.r.wrap.b32 	%r3262, %r3259, %r3260, 28;
	mov.b64 	%rd5007, {%r3262, %r3261};
	shf.l.wrap.b32 	%r3263, %r3259, %r3260, 30;
	shf.l.wrap.b32 	%r3264, %r3260, %r3259, 30;
	mov.b64 	%rd5008, {%r3264, %r3263};
	xor.b64  	%rd5009, %rd5007, %rd5008;
	shf.l.wrap.b32 	%r3265, %r3259, %r3260, 25;
	shf.l.wrap.b32 	%r3266, %r3260, %r3259, 25;
	mov.b64 	%rd5010, {%r3266, %r3265};
	xor.b64  	%rd5011, %rd5009, %rd5010;
	and.b64  	%rd5012, %rd4980, %rd4943;
	or.b64  	%rd5013, %rd4980, %rd4943;
	and.b64  	%rd5014, %rd5013, %rd4906;
	or.b64  	%rd5015, %rd5014, %rd5012;
	add.s64 	%rd5016, %rd5015, %rd5011;
	add.s64 	%rd5017, %rd5016, %rd5005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3267,%dummy}, %rd4956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3268}, %rd4956;
	}
	shf.r.wrap.b32 	%r3269, %r3268, %r3267, 19;
	shf.r.wrap.b32 	%r3270, %r3267, %r3268, 19;
	mov.b64 	%rd5018, {%r3270, %r3269};
	shf.l.wrap.b32 	%r3271, %r3267, %r3268, 3;
	shf.l.wrap.b32 	%r3272, %r3268, %r3267, 3;
	mov.b64 	%rd5019, {%r3272, %r3271};
	xor.b64  	%rd5020, %rd5018, %rd5019;
	shr.u64 	%rd5021, %rd4956, 6;
	xor.b64  	%rd5022, %rd5020, %rd5021;
	shf.r.wrap.b32 	%r3273, %r2930, %r2929, 1;
	shf.r.wrap.b32 	%r3274, %r2929, %r2930, 1;
	mov.b64 	%rd5023, {%r3274, %r3273};
	shf.r.wrap.b32 	%r3275, %r2930, %r2929, 8;
	shf.r.wrap.b32 	%r3276, %r2929, %r2930, 8;
	mov.b64 	%rd5024, {%r3276, %r3275};
	xor.b64  	%rd5025, %rd5023, %rd5024;
	shr.u64 	%rd5026, %rd4475, 7;
	xor.b64  	%rd5027, %rd5025, %rd5026;
	add.s64 	%rd5028, %rd5027, %rd4438;
	add.s64 	%rd5029, %rd5028, %rd4771;
	add.s64 	%rd5030, %rd5029, %rd5022;
	add.s64 	%rd5031, %rd5030, %rd4895;
	xor.b64  	%rd5032, %rd4969, %rd4932;
	and.b64  	%rd5033, %rd5006, %rd5032;
	xor.b64  	%rd5034, %rd5033, %rd4932;
	add.s64 	%rd5035, %rd5031, %rd5034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3277,%dummy}, %rd5006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3278}, %rd5006;
	}
	shf.r.wrap.b32 	%r3279, %r3278, %r3277, 14;
	shf.r.wrap.b32 	%r3280, %r3277, %r3278, 14;
	mov.b64 	%rd5036, {%r3280, %r3279};
	shf.r.wrap.b32 	%r3281, %r3278, %r3277, 18;
	shf.r.wrap.b32 	%r3282, %r3277, %r3278, 18;
	mov.b64 	%rd5037, {%r3282, %r3281};
	xor.b64  	%rd5038, %rd5036, %rd5037;
	shf.l.wrap.b32 	%r3283, %r3277, %r3278, 23;
	shf.l.wrap.b32 	%r3284, %r3278, %r3277, 23;
	mov.b64 	%rd5039, {%r3284, %r3283};
	xor.b64  	%rd5040, %rd5038, %rd5039;
	add.s64 	%rd5041, %rd5035, %rd5040;
	add.s64 	%rd5042, %rd5041, -860691631967231958;
	add.s64 	%rd5043, %rd5042, %rd4906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3285,%dummy}, %rd5017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3286}, %rd5017;
	}
	shf.r.wrap.b32 	%r3287, %r3286, %r3285, 28;
	shf.r.wrap.b32 	%r3288, %r3285, %r3286, 28;
	mov.b64 	%rd5044, {%r3288, %r3287};
	shf.l.wrap.b32 	%r3289, %r3285, %r3286, 30;
	shf.l.wrap.b32 	%r3290, %r3286, %r3285, 30;
	mov.b64 	%rd5045, {%r3290, %r3289};
	xor.b64  	%rd5046, %rd5044, %rd5045;
	shf.l.wrap.b32 	%r3291, %r3285, %r3286, 25;
	shf.l.wrap.b32 	%r3292, %r3286, %r3285, 25;
	mov.b64 	%rd5047, {%r3292, %r3291};
	xor.b64  	%rd5048, %rd5046, %rd5047;
	and.b64  	%rd5049, %rd5017, %rd4980;
	or.b64  	%rd5050, %rd5017, %rd4980;
	and.b64  	%rd5051, %rd5050, %rd4943;
	or.b64  	%rd5052, %rd5051, %rd5049;
	add.s64 	%rd5053, %rd5052, %rd5048;
	add.s64 	%rd5054, %rd5053, %rd5042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3293,%dummy}, %rd4993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3294}, %rd4993;
	}
	shf.r.wrap.b32 	%r3295, %r3294, %r3293, 19;
	shf.r.wrap.b32 	%r3296, %r3293, %r3294, 19;
	mov.b64 	%rd5055, {%r3296, %r3295};
	shf.l.wrap.b32 	%r3297, %r3293, %r3294, 3;
	shf.l.wrap.b32 	%r3298, %r3294, %r3293, 3;
	mov.b64 	%rd5056, {%r3298, %r3297};
	xor.b64  	%rd5057, %rd5055, %rd5056;
	shr.u64 	%rd5058, %rd4993, 6;
	xor.b64  	%rd5059, %rd5057, %rd5058;
	shf.r.wrap.b32 	%r3299, %r2956, %r2955, 1;
	shf.r.wrap.b32 	%r3300, %r2955, %r2956, 1;
	mov.b64 	%rd5060, {%r3300, %r3299};
	shf.r.wrap.b32 	%r3301, %r2956, %r2955, 8;
	shf.r.wrap.b32 	%r3302, %r2955, %r2956, 8;
	mov.b64 	%rd5061, {%r3302, %r3301};
	xor.b64  	%rd5062, %rd5060, %rd5061;
	shr.u64 	%rd5063, %rd4512, 7;
	xor.b64  	%rd5064, %rd5062, %rd5063;
	add.s64 	%rd5065, %rd5064, %rd4475;
	add.s64 	%rd5066, %rd5065, %rd4808;
	add.s64 	%rd5067, %rd5066, %rd5059;
	add.s64 	%rd5068, %rd5067, %rd4932;
	xor.b64  	%rd5069, %rd5006, %rd4969;
	and.b64  	%rd5070, %rd5043, %rd5069;
	xor.b64  	%rd5071, %rd5070, %rd4969;
	add.s64 	%rd5072, %rd5068, %rd5071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3303,%dummy}, %rd5043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3304}, %rd5043;
	}
	shf.r.wrap.b32 	%r3305, %r3304, %r3303, 14;
	shf.r.wrap.b32 	%r3306, %r3303, %r3304, 14;
	mov.b64 	%rd5073, {%r3306, %r3305};
	shf.r.wrap.b32 	%r3307, %r3304, %r3303, 18;
	shf.r.wrap.b32 	%r3308, %r3303, %r3304, 18;
	mov.b64 	%rd5074, {%r3308, %r3307};
	xor.b64  	%rd5075, %rd5073, %rd5074;
	shf.l.wrap.b32 	%r3309, %r3303, %r3304, 23;
	shf.l.wrap.b32 	%r3310, %r3304, %r3303, 23;
	mov.b64 	%rd5076, {%r3310, %r3309};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	add.s64 	%rd5078, %rd5072, %rd5077;
	add.s64 	%rd5079, %rd5078, 1182934255886127544;
	add.s64 	%rd5080, %rd5079, %rd4943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3311,%dummy}, %rd5054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3312}, %rd5054;
	}
	shf.r.wrap.b32 	%r3313, %r3312, %r3311, 28;
	shf.r.wrap.b32 	%r3314, %r3311, %r3312, 28;
	mov.b64 	%rd5081, {%r3314, %r3313};
	shf.l.wrap.b32 	%r3315, %r3311, %r3312, 30;
	shf.l.wrap.b32 	%r3316, %r3312, %r3311, 30;
	mov.b64 	%rd5082, {%r3316, %r3315};
	xor.b64  	%rd5083, %rd5081, %rd5082;
	shf.l.wrap.b32 	%r3317, %r3311, %r3312, 25;
	shf.l.wrap.b32 	%r3318, %r3312, %r3311, 25;
	mov.b64 	%rd5084, {%r3318, %r3317};
	xor.b64  	%rd5085, %rd5083, %rd5084;
	and.b64  	%rd5086, %rd5054, %rd5017;
	or.b64  	%rd5087, %rd5054, %rd5017;
	and.b64  	%rd5088, %rd5087, %rd4980;
	or.b64  	%rd5089, %rd5088, %rd5086;
	add.s64 	%rd5090, %rd5089, %rd5085;
	add.s64 	%rd5091, %rd5090, %rd5079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3319,%dummy}, %rd5030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3320}, %rd5030;
	}
	shf.r.wrap.b32 	%r3321, %r3320, %r3319, 19;
	shf.r.wrap.b32 	%r3322, %r3319, %r3320, 19;
	mov.b64 	%rd5092, {%r3322, %r3321};
	shf.l.wrap.b32 	%r3323, %r3319, %r3320, 3;
	shf.l.wrap.b32 	%r3324, %r3320, %r3319, 3;
	mov.b64 	%rd5093, {%r3324, %r3323};
	xor.b64  	%rd5094, %rd5092, %rd5093;
	shr.u64 	%rd5095, %rd5030, 6;
	xor.b64  	%rd5096, %rd5094, %rd5095;
	shf.r.wrap.b32 	%r3325, %r2982, %r2981, 1;
	shf.r.wrap.b32 	%r3326, %r2981, %r2982, 1;
	mov.b64 	%rd5097, {%r3326, %r3325};
	shf.r.wrap.b32 	%r3327, %r2982, %r2981, 8;
	shf.r.wrap.b32 	%r3328, %r2981, %r2982, 8;
	mov.b64 	%rd5098, {%r3328, %r3327};
	xor.b64  	%rd5099, %rd5097, %rd5098;
	shr.u64 	%rd5100, %rd4549, 7;
	xor.b64  	%rd5101, %rd5099, %rd5100;
	add.s64 	%rd5102, %rd5101, %rd4512;
	add.s64 	%rd5103, %rd5102, %rd4845;
	add.s64 	%rd5104, %rd5103, %rd5096;
	add.s64 	%rd5105, %rd5104, %rd4969;
	xor.b64  	%rd5106, %rd5043, %rd5006;
	and.b64  	%rd5107, %rd5080, %rd5106;
	xor.b64  	%rd5108, %rd5107, %rd5006;
	add.s64 	%rd5109, %rd5105, %rd5108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3329,%dummy}, %rd5080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3330}, %rd5080;
	}
	shf.r.wrap.b32 	%r3331, %r3330, %r3329, 14;
	shf.r.wrap.b32 	%r3332, %r3329, %r3330, 14;
	mov.b64 	%rd5110, {%r3332, %r3331};
	shf.r.wrap.b32 	%r3333, %r3330, %r3329, 18;
	shf.r.wrap.b32 	%r3334, %r3329, %r3330, 18;
	mov.b64 	%rd5111, {%r3334, %r3333};
	xor.b64  	%rd5112, %rd5110, %rd5111;
	shf.l.wrap.b32 	%r3335, %r3329, %r3330, 23;
	shf.l.wrap.b32 	%r3336, %r3330, %r3329, 23;
	mov.b64 	%rd5113, {%r3336, %r3335};
	xor.b64  	%rd5114, %rd5112, %rd5113;
	add.s64 	%rd5115, %rd5109, %rd5114;
	add.s64 	%rd5116, %rd5115, 1847814050463011016;
	add.s64 	%rd5117, %rd5116, %rd4980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3337,%dummy}, %rd5091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3338}, %rd5091;
	}
	shf.r.wrap.b32 	%r3339, %r3338, %r3337, 28;
	shf.r.wrap.b32 	%r3340, %r3337, %r3338, 28;
	mov.b64 	%rd5118, {%r3340, %r3339};
	shf.l.wrap.b32 	%r3341, %r3337, %r3338, 30;
	shf.l.wrap.b32 	%r3342, %r3338, %r3337, 30;
	mov.b64 	%rd5119, {%r3342, %r3341};
	xor.b64  	%rd5120, %rd5118, %rd5119;
	shf.l.wrap.b32 	%r3343, %r3337, %r3338, 25;
	shf.l.wrap.b32 	%r3344, %r3338, %r3337, 25;
	mov.b64 	%rd5121, {%r3344, %r3343};
	xor.b64  	%rd5122, %rd5120, %rd5121;
	and.b64  	%rd5123, %rd5091, %rd5054;
	or.b64  	%rd5124, %rd5091, %rd5054;
	and.b64  	%rd5125, %rd5124, %rd5017;
	or.b64  	%rd5126, %rd5125, %rd5123;
	add.s64 	%rd5127, %rd5126, %rd5122;
	add.s64 	%rd5128, %rd5127, %rd5116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3345,%dummy}, %rd5067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3346}, %rd5067;
	}
	shf.r.wrap.b32 	%r3347, %r3346, %r3345, 19;
	shf.r.wrap.b32 	%r3348, %r3345, %r3346, 19;
	mov.b64 	%rd5129, {%r3348, %r3347};
	shf.l.wrap.b32 	%r3349, %r3345, %r3346, 3;
	shf.l.wrap.b32 	%r3350, %r3346, %r3345, 3;
	mov.b64 	%rd5130, {%r3350, %r3349};
	xor.b64  	%rd5131, %rd5129, %rd5130;
	shr.u64 	%rd5132, %rd5067, 6;
	xor.b64  	%rd5133, %rd5131, %rd5132;
	shf.r.wrap.b32 	%r3351, %r3008, %r3007, 1;
	shf.r.wrap.b32 	%r3352, %r3007, %r3008, 1;
	mov.b64 	%rd5134, {%r3352, %r3351};
	shf.r.wrap.b32 	%r3353, %r3008, %r3007, 8;
	shf.r.wrap.b32 	%r3354, %r3007, %r3008, 8;
	mov.b64 	%rd5135, {%r3354, %r3353};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	shr.u64 	%rd5137, %rd4586, 7;
	xor.b64  	%rd5138, %rd5136, %rd5137;
	add.s64 	%rd5139, %rd5138, %rd4549;
	add.s64 	%rd5140, %rd5139, %rd4882;
	add.s64 	%rd5141, %rd5140, %rd5133;
	add.s64 	%rd5142, %rd5141, %rd5006;
	xor.b64  	%rd5143, %rd5080, %rd5043;
	and.b64  	%rd5144, %rd5117, %rd5143;
	xor.b64  	%rd5145, %rd5144, %rd5043;
	add.s64 	%rd5146, %rd5142, %rd5145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3355,%dummy}, %rd5117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3356}, %rd5117;
	}
	shf.r.wrap.b32 	%r3357, %r3356, %r3355, 14;
	shf.r.wrap.b32 	%r3358, %r3355, %r3356, 14;
	mov.b64 	%rd5147, {%r3358, %r3357};
	shf.r.wrap.b32 	%r3359, %r3356, %r3355, 18;
	shf.r.wrap.b32 	%r3360, %r3355, %r3356, 18;
	mov.b64 	%rd5148, {%r3360, %r3359};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	shf.l.wrap.b32 	%r3361, %r3355, %r3356, 23;
	shf.l.wrap.b32 	%r3362, %r3356, %r3355, 23;
	mov.b64 	%rd5150, {%r3362, %r3361};
	xor.b64  	%rd5151, %rd5149, %rd5150;
	add.s64 	%rd5152, %rd5146, %rd5151;
	add.s64 	%rd5153, %rd5152, 2177327727835720531;
	add.s64 	%rd5154, %rd5153, %rd5017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3363,%dummy}, %rd5128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3364}, %rd5128;
	}
	shf.r.wrap.b32 	%r3365, %r3364, %r3363, 28;
	shf.r.wrap.b32 	%r3366, %r3363, %r3364, 28;
	mov.b64 	%rd5155, {%r3366, %r3365};
	shf.l.wrap.b32 	%r3367, %r3363, %r3364, 30;
	shf.l.wrap.b32 	%r3368, %r3364, %r3363, 30;
	mov.b64 	%rd5156, {%r3368, %r3367};
	xor.b64  	%rd5157, %rd5155, %rd5156;
	shf.l.wrap.b32 	%r3369, %r3363, %r3364, 25;
	shf.l.wrap.b32 	%r3370, %r3364, %r3363, 25;
	mov.b64 	%rd5158, {%r3370, %r3369};
	xor.b64  	%rd5159, %rd5157, %rd5158;
	and.b64  	%rd5160, %rd5128, %rd5091;
	or.b64  	%rd5161, %rd5128, %rd5091;
	and.b64  	%rd5162, %rd5161, %rd5054;
	or.b64  	%rd5163, %rd5162, %rd5160;
	add.s64 	%rd5164, %rd5163, %rd5159;
	add.s64 	%rd5165, %rd5164, %rd5153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3371,%dummy}, %rd5104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3372}, %rd5104;
	}
	shf.r.wrap.b32 	%r3373, %r3372, %r3371, 19;
	shf.r.wrap.b32 	%r3374, %r3371, %r3372, 19;
	mov.b64 	%rd5166, {%r3374, %r3373};
	shf.l.wrap.b32 	%r3375, %r3371, %r3372, 3;
	shf.l.wrap.b32 	%r3376, %r3372, %r3371, 3;
	mov.b64 	%rd5167, {%r3376, %r3375};
	xor.b64  	%rd5168, %rd5166, %rd5167;
	shr.u64 	%rd5169, %rd5104, 6;
	xor.b64  	%rd5170, %rd5168, %rd5169;
	shf.r.wrap.b32 	%r3377, %r3034, %r3033, 1;
	shf.r.wrap.b32 	%r3378, %r3033, %r3034, 1;
	mov.b64 	%rd5171, {%r3378, %r3377};
	shf.r.wrap.b32 	%r3379, %r3034, %r3033, 8;
	shf.r.wrap.b32 	%r3380, %r3033, %r3034, 8;
	mov.b64 	%rd5172, {%r3380, %r3379};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	shr.u64 	%rd5174, %rd4623, 7;
	xor.b64  	%rd5175, %rd5173, %rd5174;
	add.s64 	%rd5176, %rd5175, %rd4586;
	add.s64 	%rd5177, %rd5176, %rd4919;
	add.s64 	%rd5178, %rd5177, %rd5170;
	add.s64 	%rd5179, %rd5178, %rd5043;
	xor.b64  	%rd5180, %rd5117, %rd5080;
	and.b64  	%rd5181, %rd5154, %rd5180;
	xor.b64  	%rd5182, %rd5181, %rd5080;
	add.s64 	%rd5183, %rd5179, %rd5182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3381,%dummy}, %rd5154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3382}, %rd5154;
	}
	shf.r.wrap.b32 	%r3383, %r3382, %r3381, 14;
	shf.r.wrap.b32 	%r3384, %r3381, %r3382, 14;
	mov.b64 	%rd5184, {%r3384, %r3383};
	shf.r.wrap.b32 	%r3385, %r3382, %r3381, 18;
	shf.r.wrap.b32 	%r3386, %r3381, %r3382, 18;
	mov.b64 	%rd5185, {%r3386, %r3385};
	xor.b64  	%rd5186, %rd5184, %rd5185;
	shf.l.wrap.b32 	%r3387, %r3381, %r3382, 23;
	shf.l.wrap.b32 	%r3388, %r3382, %r3381, 23;
	mov.b64 	%rd5187, {%r3388, %r3387};
	xor.b64  	%rd5188, %rd5186, %rd5187;
	add.s64 	%rd5189, %rd5183, %rd5188;
	add.s64 	%rd5190, %rd5189, 2830643537854262169;
	add.s64 	%rd5191, %rd5190, %rd5054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3389,%dummy}, %rd5165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3390}, %rd5165;
	}
	shf.r.wrap.b32 	%r3391, %r3390, %r3389, 28;
	shf.r.wrap.b32 	%r3392, %r3389, %r3390, 28;
	mov.b64 	%rd5192, {%r3392, %r3391};
	shf.l.wrap.b32 	%r3393, %r3389, %r3390, 30;
	shf.l.wrap.b32 	%r3394, %r3390, %r3389, 30;
	mov.b64 	%rd5193, {%r3394, %r3393};
	xor.b64  	%rd5194, %rd5192, %rd5193;
	shf.l.wrap.b32 	%r3395, %r3389, %r3390, 25;
	shf.l.wrap.b32 	%r3396, %r3390, %r3389, 25;
	mov.b64 	%rd5195, {%r3396, %r3395};
	xor.b64  	%rd5196, %rd5194, %rd5195;
	and.b64  	%rd5197, %rd5165, %rd5128;
	or.b64  	%rd5198, %rd5165, %rd5128;
	and.b64  	%rd5199, %rd5198, %rd5091;
	or.b64  	%rd5200, %rd5199, %rd5197;
	add.s64 	%rd5201, %rd5200, %rd5196;
	add.s64 	%rd5202, %rd5201, %rd5190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3397,%dummy}, %rd5141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3398}, %rd5141;
	}
	shf.r.wrap.b32 	%r3399, %r3398, %r3397, 19;
	shf.r.wrap.b32 	%r3400, %r3397, %r3398, 19;
	mov.b64 	%rd5203, {%r3400, %r3399};
	shf.l.wrap.b32 	%r3401, %r3397, %r3398, 3;
	shf.l.wrap.b32 	%r3402, %r3398, %r3397, 3;
	mov.b64 	%rd5204, {%r3402, %r3401};
	xor.b64  	%rd5205, %rd5203, %rd5204;
	shr.u64 	%rd5206, %rd5141, 6;
	xor.b64  	%rd5207, %rd5205, %rd5206;
	shf.r.wrap.b32 	%r3403, %r3060, %r3059, 1;
	shf.r.wrap.b32 	%r3404, %r3059, %r3060, 1;
	mov.b64 	%rd5208, {%r3404, %r3403};
	shf.r.wrap.b32 	%r3405, %r3060, %r3059, 8;
	shf.r.wrap.b32 	%r3406, %r3059, %r3060, 8;
	mov.b64 	%rd5209, {%r3406, %r3405};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	shr.u64 	%rd5211, %rd4660, 7;
	xor.b64  	%rd5212, %rd5210, %rd5211;
	add.s64 	%rd5213, %rd5212, %rd4623;
	add.s64 	%rd5214, %rd5213, %rd4956;
	add.s64 	%rd5215, %rd5214, %rd5207;
	add.s64 	%rd5216, %rd5215, %rd5080;
	xor.b64  	%rd5217, %rd5154, %rd5117;
	and.b64  	%rd5218, %rd5191, %rd5217;
	xor.b64  	%rd5219, %rd5218, %rd5117;
	add.s64 	%rd5220, %rd5216, %rd5219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3407,%dummy}, %rd5191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3408}, %rd5191;
	}
	shf.r.wrap.b32 	%r3409, %r3408, %r3407, 14;
	shf.r.wrap.b32 	%r3410, %r3407, %r3408, 14;
	mov.b64 	%rd5221, {%r3410, %r3409};
	shf.r.wrap.b32 	%r3411, %r3408, %r3407, 18;
	shf.r.wrap.b32 	%r3412, %r3407, %r3408, 18;
	mov.b64 	%rd5222, {%r3412, %r3411};
	xor.b64  	%rd5223, %rd5221, %rd5222;
	shf.l.wrap.b32 	%r3413, %r3407, %r3408, 23;
	shf.l.wrap.b32 	%r3414, %r3408, %r3407, 23;
	mov.b64 	%rd5224, {%r3414, %r3413};
	xor.b64  	%rd5225, %rd5223, %rd5224;
	add.s64 	%rd5226, %rd5220, %rd5225;
	add.s64 	%rd5227, %rd5226, 3796741975233480872;
	add.s64 	%rd5228, %rd5227, %rd5091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3415,%dummy}, %rd5202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3416}, %rd5202;
	}
	shf.r.wrap.b32 	%r3417, %r3416, %r3415, 28;
	shf.r.wrap.b32 	%r3418, %r3415, %r3416, 28;
	mov.b64 	%rd5229, {%r3418, %r3417};
	shf.l.wrap.b32 	%r3419, %r3415, %r3416, 30;
	shf.l.wrap.b32 	%r3420, %r3416, %r3415, 30;
	mov.b64 	%rd5230, {%r3420, %r3419};
	xor.b64  	%rd5231, %rd5229, %rd5230;
	shf.l.wrap.b32 	%r3421, %r3415, %r3416, 25;
	shf.l.wrap.b32 	%r3422, %r3416, %r3415, 25;
	mov.b64 	%rd5232, {%r3422, %r3421};
	xor.b64  	%rd5233, %rd5231, %rd5232;
	and.b64  	%rd5234, %rd5202, %rd5165;
	or.b64  	%rd5235, %rd5202, %rd5165;
	and.b64  	%rd5236, %rd5235, %rd5128;
	or.b64  	%rd5237, %rd5236, %rd5234;
	add.s64 	%rd5238, %rd5237, %rd5233;
	add.s64 	%rd5239, %rd5238, %rd5227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3423,%dummy}, %rd5178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3424}, %rd5178;
	}
	shf.r.wrap.b32 	%r3425, %r3424, %r3423, 19;
	shf.r.wrap.b32 	%r3426, %r3423, %r3424, 19;
	mov.b64 	%rd5240, {%r3426, %r3425};
	shf.l.wrap.b32 	%r3427, %r3423, %r3424, 3;
	shf.l.wrap.b32 	%r3428, %r3424, %r3423, 3;
	mov.b64 	%rd5241, {%r3428, %r3427};
	xor.b64  	%rd5242, %rd5240, %rd5241;
	shr.u64 	%rd5243, %rd5178, 6;
	xor.b64  	%rd5244, %rd5242, %rd5243;
	shf.r.wrap.b32 	%r3429, %r3086, %r3085, 1;
	shf.r.wrap.b32 	%r3430, %r3085, %r3086, 1;
	mov.b64 	%rd5245, {%r3430, %r3429};
	shf.r.wrap.b32 	%r3431, %r3086, %r3085, 8;
	shf.r.wrap.b32 	%r3432, %r3085, %r3086, 8;
	mov.b64 	%rd5246, {%r3432, %r3431};
	xor.b64  	%rd5247, %rd5245, %rd5246;
	shr.u64 	%rd5248, %rd4697, 7;
	xor.b64  	%rd5249, %rd5247, %rd5248;
	add.s64 	%rd5250, %rd5249, %rd4660;
	add.s64 	%rd5251, %rd5250, %rd4993;
	add.s64 	%rd5252, %rd5251, %rd5244;
	add.s64 	%rd5253, %rd5252, %rd5117;
	xor.b64  	%rd5254, %rd5191, %rd5154;
	and.b64  	%rd5255, %rd5228, %rd5254;
	xor.b64  	%rd5256, %rd5255, %rd5154;
	add.s64 	%rd5257, %rd5253, %rd5256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3433,%dummy}, %rd5228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3434}, %rd5228;
	}
	shf.r.wrap.b32 	%r3435, %r3434, %r3433, 14;
	shf.r.wrap.b32 	%r3436, %r3433, %r3434, 14;
	mov.b64 	%rd5258, {%r3436, %r3435};
	shf.r.wrap.b32 	%r3437, %r3434, %r3433, 18;
	shf.r.wrap.b32 	%r3438, %r3433, %r3434, 18;
	mov.b64 	%rd5259, {%r3438, %r3437};
	xor.b64  	%rd5260, %rd5258, %rd5259;
	shf.l.wrap.b32 	%r3439, %r3433, %r3434, 23;
	shf.l.wrap.b32 	%r3440, %r3434, %r3433, 23;
	mov.b64 	%rd5261, {%r3440, %r3439};
	xor.b64  	%rd5262, %rd5260, %rd5261;
	add.s64 	%rd5263, %rd5257, %rd5262;
	add.s64 	%rd5264, %rd5263, 4115178125766777443;
	add.s64 	%rd5265, %rd5264, %rd5128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3441,%dummy}, %rd5239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3442}, %rd5239;
	}
	shf.r.wrap.b32 	%r3443, %r3442, %r3441, 28;
	shf.r.wrap.b32 	%r3444, %r3441, %r3442, 28;
	mov.b64 	%rd5266, {%r3444, %r3443};
	shf.l.wrap.b32 	%r3445, %r3441, %r3442, 30;
	shf.l.wrap.b32 	%r3446, %r3442, %r3441, 30;
	mov.b64 	%rd5267, {%r3446, %r3445};
	xor.b64  	%rd5268, %rd5266, %rd5267;
	shf.l.wrap.b32 	%r3447, %r3441, %r3442, 25;
	shf.l.wrap.b32 	%r3448, %r3442, %r3441, 25;
	mov.b64 	%rd5269, {%r3448, %r3447};
	xor.b64  	%rd5270, %rd5268, %rd5269;
	and.b64  	%rd5271, %rd5239, %rd5202;
	or.b64  	%rd5272, %rd5239, %rd5202;
	and.b64  	%rd5273, %rd5272, %rd5165;
	or.b64  	%rd5274, %rd5273, %rd5271;
	add.s64 	%rd5275, %rd5274, %rd5270;
	add.s64 	%rd5276, %rd5275, %rd5264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3449,%dummy}, %rd5215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3450}, %rd5215;
	}
	shf.r.wrap.b32 	%r3451, %r3450, %r3449, 19;
	shf.r.wrap.b32 	%r3452, %r3449, %r3450, 19;
	mov.b64 	%rd5277, {%r3452, %r3451};
	shf.l.wrap.b32 	%r3453, %r3449, %r3450, 3;
	shf.l.wrap.b32 	%r3454, %r3450, %r3449, 3;
	mov.b64 	%rd5278, {%r3454, %r3453};
	xor.b64  	%rd5279, %rd5277, %rd5278;
	shr.u64 	%rd5280, %rd5215, 6;
	xor.b64  	%rd5281, %rd5279, %rd5280;
	shf.r.wrap.b32 	%r3455, %r3112, %r3111, 1;
	shf.r.wrap.b32 	%r3456, %r3111, %r3112, 1;
	mov.b64 	%rd5282, {%r3456, %r3455};
	shf.r.wrap.b32 	%r3457, %r3112, %r3111, 8;
	shf.r.wrap.b32 	%r3458, %r3111, %r3112, 8;
	mov.b64 	%rd5283, {%r3458, %r3457};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	shr.u64 	%rd5285, %rd4734, 7;
	xor.b64  	%rd5286, %rd5284, %rd5285;
	add.s64 	%rd5287, %rd5286, %rd4697;
	add.s64 	%rd5288, %rd5287, %rd5030;
	add.s64 	%rd5289, %rd5288, %rd5281;
	add.s64 	%rd5290, %rd5289, %rd5154;
	xor.b64  	%rd5291, %rd5228, %rd5191;
	and.b64  	%rd5292, %rd5265, %rd5291;
	xor.b64  	%rd5293, %rd5292, %rd5191;
	add.s64 	%rd5294, %rd5290, %rd5293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3459,%dummy}, %rd5265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3460}, %rd5265;
	}
	shf.r.wrap.b32 	%r3461, %r3460, %r3459, 14;
	shf.r.wrap.b32 	%r3462, %r3459, %r3460, 14;
	mov.b64 	%rd5295, {%r3462, %r3461};
	shf.r.wrap.b32 	%r3463, %r3460, %r3459, 18;
	shf.r.wrap.b32 	%r3464, %r3459, %r3460, 18;
	mov.b64 	%rd5296, {%r3464, %r3463};
	xor.b64  	%rd5297, %rd5295, %rd5296;
	shf.l.wrap.b32 	%r3465, %r3459, %r3460, 23;
	shf.l.wrap.b32 	%r3466, %r3460, %r3459, 23;
	mov.b64 	%rd5298, {%r3466, %r3465};
	xor.b64  	%rd5299, %rd5297, %rd5298;
	add.s64 	%rd5300, %rd5294, %rd5299;
	add.s64 	%rd5301, %rd5300, 5681478168544905931;
	add.s64 	%rd5302, %rd5301, %rd5165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3467,%dummy}, %rd5276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3468}, %rd5276;
	}
	shf.r.wrap.b32 	%r3469, %r3468, %r3467, 28;
	shf.r.wrap.b32 	%r3470, %r3467, %r3468, 28;
	mov.b64 	%rd5303, {%r3470, %r3469};
	shf.l.wrap.b32 	%r3471, %r3467, %r3468, 30;
	shf.l.wrap.b32 	%r3472, %r3468, %r3467, 30;
	mov.b64 	%rd5304, {%r3472, %r3471};
	xor.b64  	%rd5305, %rd5303, %rd5304;
	shf.l.wrap.b32 	%r3473, %r3467, %r3468, 25;
	shf.l.wrap.b32 	%r3474, %r3468, %r3467, 25;
	mov.b64 	%rd5306, {%r3474, %r3473};
	xor.b64  	%rd5307, %rd5305, %rd5306;
	and.b64  	%rd5308, %rd5276, %rd5239;
	or.b64  	%rd5309, %rd5276, %rd5239;
	and.b64  	%rd5310, %rd5309, %rd5202;
	or.b64  	%rd5311, %rd5310, %rd5308;
	add.s64 	%rd5312, %rd5311, %rd5307;
	add.s64 	%rd5313, %rd5312, %rd5301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3475,%dummy}, %rd5252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3476}, %rd5252;
	}
	shf.r.wrap.b32 	%r3477, %r3476, %r3475, 19;
	shf.r.wrap.b32 	%r3478, %r3475, %r3476, 19;
	mov.b64 	%rd5314, {%r3478, %r3477};
	shf.l.wrap.b32 	%r3479, %r3475, %r3476, 3;
	shf.l.wrap.b32 	%r3480, %r3476, %r3475, 3;
	mov.b64 	%rd5315, {%r3480, %r3479};
	xor.b64  	%rd5316, %rd5314, %rd5315;
	shr.u64 	%rd5317, %rd5252, 6;
	xor.b64  	%rd5318, %rd5316, %rd5317;
	shf.r.wrap.b32 	%r3481, %r3138, %r3137, 1;
	shf.r.wrap.b32 	%r3482, %r3137, %r3138, 1;
	mov.b64 	%rd5319, {%r3482, %r3481};
	shf.r.wrap.b32 	%r3483, %r3138, %r3137, 8;
	shf.r.wrap.b32 	%r3484, %r3137, %r3138, 8;
	mov.b64 	%rd5320, {%r3484, %r3483};
	xor.b64  	%rd5321, %rd5319, %rd5320;
	shr.u64 	%rd5322, %rd4771, 7;
	xor.b64  	%rd5323, %rd5321, %rd5322;
	add.s64 	%rd5324, %rd5323, %rd4734;
	add.s64 	%rd5325, %rd5324, %rd5067;
	add.s64 	%rd5326, %rd5325, %rd5318;
	add.s64 	%rd5327, %rd5326, %rd5191;
	xor.b64  	%rd5328, %rd5265, %rd5228;
	and.b64  	%rd5329, %rd5302, %rd5328;
	xor.b64  	%rd5330, %rd5329, %rd5228;
	add.s64 	%rd5331, %rd5327, %rd5330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3485,%dummy}, %rd5302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3486}, %rd5302;
	}
	shf.r.wrap.b32 	%r3487, %r3486, %r3485, 14;
	shf.r.wrap.b32 	%r3488, %r3485, %r3486, 14;
	mov.b64 	%rd5332, {%r3488, %r3487};
	shf.r.wrap.b32 	%r3489, %r3486, %r3485, 18;
	shf.r.wrap.b32 	%r3490, %r3485, %r3486, 18;
	mov.b64 	%rd5333, {%r3490, %r3489};
	xor.b64  	%rd5334, %rd5332, %rd5333;
	shf.l.wrap.b32 	%r3491, %r3485, %r3486, 23;
	shf.l.wrap.b32 	%r3492, %r3486, %r3485, 23;
	mov.b64 	%rd5335, {%r3492, %r3491};
	xor.b64  	%rd5336, %rd5334, %rd5335;
	add.s64 	%rd5337, %rd5331, %rd5336;
	add.s64 	%rd5338, %rd5337, 6601373596472566643;
	add.s64 	%rd5339, %rd5338, %rd5202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3493,%dummy}, %rd5313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3494}, %rd5313;
	}
	shf.r.wrap.b32 	%r3495, %r3494, %r3493, 28;
	shf.r.wrap.b32 	%r3496, %r3493, %r3494, 28;
	mov.b64 	%rd5340, {%r3496, %r3495};
	shf.l.wrap.b32 	%r3497, %r3493, %r3494, 30;
	shf.l.wrap.b32 	%r3498, %r3494, %r3493, 30;
	mov.b64 	%rd5341, {%r3498, %r3497};
	xor.b64  	%rd5342, %rd5340, %rd5341;
	shf.l.wrap.b32 	%r3499, %r3493, %r3494, 25;
	shf.l.wrap.b32 	%r3500, %r3494, %r3493, 25;
	mov.b64 	%rd5343, {%r3500, %r3499};
	xor.b64  	%rd5344, %rd5342, %rd5343;
	and.b64  	%rd5345, %rd5313, %rd5276;
	or.b64  	%rd5346, %rd5313, %rd5276;
	and.b64  	%rd5347, %rd5346, %rd5239;
	or.b64  	%rd5348, %rd5347, %rd5345;
	add.s64 	%rd5349, %rd5348, %rd5344;
	add.s64 	%rd5350, %rd5349, %rd5338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3501,%dummy}, %rd5289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3502}, %rd5289;
	}
	shf.r.wrap.b32 	%r3503, %r3502, %r3501, 19;
	shf.r.wrap.b32 	%r3504, %r3501, %r3502, 19;
	mov.b64 	%rd5351, {%r3504, %r3503};
	shf.l.wrap.b32 	%r3505, %r3501, %r3502, 3;
	shf.l.wrap.b32 	%r3506, %r3502, %r3501, 3;
	mov.b64 	%rd5352, {%r3506, %r3505};
	xor.b64  	%rd5353, %rd5351, %rd5352;
	shr.u64 	%rd5354, %rd5289, 6;
	xor.b64  	%rd5355, %rd5353, %rd5354;
	shf.r.wrap.b32 	%r3507, %r3164, %r3163, 1;
	shf.r.wrap.b32 	%r3508, %r3163, %r3164, 1;
	mov.b64 	%rd5356, {%r3508, %r3507};
	shf.r.wrap.b32 	%r3509, %r3164, %r3163, 8;
	shf.r.wrap.b32 	%r3510, %r3163, %r3164, 8;
	mov.b64 	%rd5357, {%r3510, %r3509};
	xor.b64  	%rd5358, %rd5356, %rd5357;
	shr.u64 	%rd5359, %rd4808, 7;
	xor.b64  	%rd5360, %rd5358, %rd5359;
	add.s64 	%rd5361, %rd5360, %rd4771;
	add.s64 	%rd5362, %rd5361, %rd5104;
	add.s64 	%rd5363, %rd5362, %rd5355;
	add.s64 	%rd5364, %rd5363, %rd5228;
	xor.b64  	%rd5365, %rd5302, %rd5265;
	and.b64  	%rd5366, %rd5339, %rd5365;
	xor.b64  	%rd5367, %rd5366, %rd5265;
	add.s64 	%rd5368, %rd5364, %rd5367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3511,%dummy}, %rd5339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3512}, %rd5339;
	}
	shf.r.wrap.b32 	%r3513, %r3512, %r3511, 14;
	shf.r.wrap.b32 	%r3514, %r3511, %r3512, 14;
	mov.b64 	%rd5369, {%r3514, %r3513};
	shf.r.wrap.b32 	%r3515, %r3512, %r3511, 18;
	shf.r.wrap.b32 	%r3516, %r3511, %r3512, 18;
	mov.b64 	%rd5370, {%r3516, %r3515};
	xor.b64  	%rd5371, %rd5369, %rd5370;
	shf.l.wrap.b32 	%r3517, %r3511, %r3512, 23;
	shf.l.wrap.b32 	%r3518, %r3512, %r3511, 23;
	mov.b64 	%rd5372, {%r3518, %r3517};
	xor.b64  	%rd5373, %rd5371, %rd5372;
	add.s64 	%rd5374, %rd5368, %rd5373;
	add.s64 	%rd5375, %rd5374, 7507060721942968483;
	add.s64 	%rd5376, %rd5375, %rd5239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3519,%dummy}, %rd5350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3520}, %rd5350;
	}
	shf.r.wrap.b32 	%r3521, %r3520, %r3519, 28;
	shf.r.wrap.b32 	%r3522, %r3519, %r3520, 28;
	mov.b64 	%rd5377, {%r3522, %r3521};
	shf.l.wrap.b32 	%r3523, %r3519, %r3520, 30;
	shf.l.wrap.b32 	%r3524, %r3520, %r3519, 30;
	mov.b64 	%rd5378, {%r3524, %r3523};
	xor.b64  	%rd5379, %rd5377, %rd5378;
	shf.l.wrap.b32 	%r3525, %r3519, %r3520, 25;
	shf.l.wrap.b32 	%r3526, %r3520, %r3519, 25;
	mov.b64 	%rd5380, {%r3526, %r3525};
	xor.b64  	%rd5381, %rd5379, %rd5380;
	and.b64  	%rd5382, %rd5350, %rd5313;
	or.b64  	%rd5383, %rd5350, %rd5313;
	and.b64  	%rd5384, %rd5383, %rd5276;
	or.b64  	%rd5385, %rd5384, %rd5382;
	add.s64 	%rd5386, %rd5385, %rd5381;
	add.s64 	%rd5387, %rd5386, %rd5375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3527,%dummy}, %rd5326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3528}, %rd5326;
	}
	shf.r.wrap.b32 	%r3529, %r3528, %r3527, 19;
	shf.r.wrap.b32 	%r3530, %r3527, %r3528, 19;
	mov.b64 	%rd5388, {%r3530, %r3529};
	shf.l.wrap.b32 	%r3531, %r3527, %r3528, 3;
	shf.l.wrap.b32 	%r3532, %r3528, %r3527, 3;
	mov.b64 	%rd5389, {%r3532, %r3531};
	xor.b64  	%rd5390, %rd5388, %rd5389;
	shr.u64 	%rd5391, %rd5326, 6;
	xor.b64  	%rd5392, %rd5390, %rd5391;
	shf.r.wrap.b32 	%r3533, %r3190, %r3189, 1;
	shf.r.wrap.b32 	%r3534, %r3189, %r3190, 1;
	mov.b64 	%rd5393, {%r3534, %r3533};
	shf.r.wrap.b32 	%r3535, %r3190, %r3189, 8;
	shf.r.wrap.b32 	%r3536, %r3189, %r3190, 8;
	mov.b64 	%rd5394, {%r3536, %r3535};
	xor.b64  	%rd5395, %rd5393, %rd5394;
	shr.u64 	%rd5396, %rd4845, 7;
	xor.b64  	%rd5397, %rd5395, %rd5396;
	add.s64 	%rd5398, %rd5397, %rd4808;
	add.s64 	%rd5399, %rd5398, %rd5141;
	add.s64 	%rd5400, %rd5399, %rd5392;
	add.s64 	%rd5401, %rd5400, %rd5265;
	xor.b64  	%rd5402, %rd5339, %rd5302;
	and.b64  	%rd5403, %rd5376, %rd5402;
	xor.b64  	%rd5404, %rd5403, %rd5302;
	add.s64 	%rd5405, %rd5401, %rd5404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3537,%dummy}, %rd5376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3538}, %rd5376;
	}
	shf.r.wrap.b32 	%r3539, %r3538, %r3537, 14;
	shf.r.wrap.b32 	%r3540, %r3537, %r3538, 14;
	mov.b64 	%rd5406, {%r3540, %r3539};
	shf.r.wrap.b32 	%r3541, %r3538, %r3537, 18;
	shf.r.wrap.b32 	%r3542, %r3537, %r3538, 18;
	mov.b64 	%rd5407, {%r3542, %r3541};
	xor.b64  	%rd5408, %rd5406, %rd5407;
	shf.l.wrap.b32 	%r3543, %r3537, %r3538, 23;
	shf.l.wrap.b32 	%r3544, %r3538, %r3537, 23;
	mov.b64 	%rd5409, {%r3544, %r3543};
	xor.b64  	%rd5410, %rd5408, %rd5409;
	add.s64 	%rd5411, %rd5405, %rd5410;
	add.s64 	%rd5412, %rd5411, 8399075790359081724;
	add.s64 	%rd5413, %rd5412, %rd5276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3545,%dummy}, %rd5387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3546}, %rd5387;
	}
	shf.r.wrap.b32 	%r3547, %r3546, %r3545, 28;
	shf.r.wrap.b32 	%r3548, %r3545, %r3546, 28;
	mov.b64 	%rd5414, {%r3548, %r3547};
	shf.l.wrap.b32 	%r3549, %r3545, %r3546, 30;
	shf.l.wrap.b32 	%r3550, %r3546, %r3545, 30;
	mov.b64 	%rd5415, {%r3550, %r3549};
	xor.b64  	%rd5416, %rd5414, %rd5415;
	shf.l.wrap.b32 	%r3551, %r3545, %r3546, 25;
	shf.l.wrap.b32 	%r3552, %r3546, %r3545, 25;
	mov.b64 	%rd5417, {%r3552, %r3551};
	xor.b64  	%rd5418, %rd5416, %rd5417;
	and.b64  	%rd5419, %rd5387, %rd5350;
	or.b64  	%rd5420, %rd5387, %rd5350;
	and.b64  	%rd5421, %rd5420, %rd5313;
	or.b64  	%rd5422, %rd5421, %rd5419;
	add.s64 	%rd5423, %rd5422, %rd5418;
	add.s64 	%rd5424, %rd5423, %rd5412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3553,%dummy}, %rd5363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3554}, %rd5363;
	}
	shf.r.wrap.b32 	%r3555, %r3554, %r3553, 19;
	shf.r.wrap.b32 	%r3556, %r3553, %r3554, 19;
	mov.b64 	%rd5425, {%r3556, %r3555};
	shf.l.wrap.b32 	%r3557, %r3553, %r3554, 3;
	shf.l.wrap.b32 	%r3558, %r3554, %r3553, 3;
	mov.b64 	%rd5426, {%r3558, %r3557};
	xor.b64  	%rd5427, %rd5425, %rd5426;
	shr.u64 	%rd5428, %rd5363, 6;
	xor.b64  	%rd5429, %rd5427, %rd5428;
	shf.r.wrap.b32 	%r3559, %r3216, %r3215, 1;
	shf.r.wrap.b32 	%r3560, %r3215, %r3216, 1;
	mov.b64 	%rd5430, {%r3560, %r3559};
	shf.r.wrap.b32 	%r3561, %r3216, %r3215, 8;
	shf.r.wrap.b32 	%r3562, %r3215, %r3216, 8;
	mov.b64 	%rd5431, {%r3562, %r3561};
	xor.b64  	%rd5432, %rd5430, %rd5431;
	shr.u64 	%rd5433, %rd4882, 7;
	xor.b64  	%rd5434, %rd5432, %rd5433;
	add.s64 	%rd5435, %rd5434, %rd4845;
	add.s64 	%rd5436, %rd5435, %rd5178;
	add.s64 	%rd5437, %rd5436, %rd5429;
	add.s64 	%rd5438, %rd5437, %rd5302;
	xor.b64  	%rd5439, %rd5376, %rd5339;
	and.b64  	%rd5440, %rd5413, %rd5439;
	xor.b64  	%rd5441, %rd5440, %rd5339;
	add.s64 	%rd5442, %rd5438, %rd5441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3563,%dummy}, %rd5413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3564}, %rd5413;
	}
	shf.r.wrap.b32 	%r3565, %r3564, %r3563, 14;
	shf.r.wrap.b32 	%r3566, %r3563, %r3564, 14;
	mov.b64 	%rd5443, {%r3566, %r3565};
	shf.r.wrap.b32 	%r3567, %r3564, %r3563, 18;
	shf.r.wrap.b32 	%r3568, %r3563, %r3564, 18;
	mov.b64 	%rd5444, {%r3568, %r3567};
	xor.b64  	%rd5445, %rd5443, %rd5444;
	shf.l.wrap.b32 	%r3569, %r3563, %r3564, 23;
	shf.l.wrap.b32 	%r3570, %r3564, %r3563, 23;
	mov.b64 	%rd5446, {%r3570, %r3569};
	xor.b64  	%rd5447, %rd5445, %rd5446;
	add.s64 	%rd5448, %rd5442, %rd5447;
	add.s64 	%rd5449, %rd5448, 8693463985226723168;
	add.s64 	%rd5450, %rd5449, %rd5313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3571,%dummy}, %rd5424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3572}, %rd5424;
	}
	shf.r.wrap.b32 	%r3573, %r3572, %r3571, 28;
	shf.r.wrap.b32 	%r3574, %r3571, %r3572, 28;
	mov.b64 	%rd5451, {%r3574, %r3573};
	shf.l.wrap.b32 	%r3575, %r3571, %r3572, 30;
	shf.l.wrap.b32 	%r3576, %r3572, %r3571, 30;
	mov.b64 	%rd5452, {%r3576, %r3575};
	xor.b64  	%rd5453, %rd5451, %rd5452;
	shf.l.wrap.b32 	%r3577, %r3571, %r3572, 25;
	shf.l.wrap.b32 	%r3578, %r3572, %r3571, 25;
	mov.b64 	%rd5454, {%r3578, %r3577};
	xor.b64  	%rd5455, %rd5453, %rd5454;
	and.b64  	%rd5456, %rd5424, %rd5387;
	or.b64  	%rd5457, %rd5424, %rd5387;
	and.b64  	%rd5458, %rd5457, %rd5350;
	or.b64  	%rd5459, %rd5458, %rd5456;
	add.s64 	%rd5460, %rd5459, %rd5455;
	add.s64 	%rd5461, %rd5460, %rd5449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3579,%dummy}, %rd5400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3580}, %rd5400;
	}
	shf.r.wrap.b32 	%r3581, %r3580, %r3579, 19;
	shf.r.wrap.b32 	%r3582, %r3579, %r3580, 19;
	mov.b64 	%rd5462, {%r3582, %r3581};
	shf.l.wrap.b32 	%r3583, %r3579, %r3580, 3;
	shf.l.wrap.b32 	%r3584, %r3580, %r3579, 3;
	mov.b64 	%rd5463, {%r3584, %r3583};
	xor.b64  	%rd5464, %rd5462, %rd5463;
	shr.u64 	%rd5465, %rd5400, 6;
	xor.b64  	%rd5466, %rd5464, %rd5465;
	shf.r.wrap.b32 	%r3585, %r3242, %r3241, 1;
	shf.r.wrap.b32 	%r3586, %r3241, %r3242, 1;
	mov.b64 	%rd5467, {%r3586, %r3585};
	shf.r.wrap.b32 	%r3587, %r3242, %r3241, 8;
	shf.r.wrap.b32 	%r3588, %r3241, %r3242, 8;
	mov.b64 	%rd5468, {%r3588, %r3587};
	xor.b64  	%rd5469, %rd5467, %rd5468;
	shr.u64 	%rd5470, %rd4919, 7;
	xor.b64  	%rd5471, %rd5469, %rd5470;
	add.s64 	%rd5472, %rd5471, %rd4882;
	add.s64 	%rd5473, %rd5472, %rd5215;
	add.s64 	%rd5474, %rd5473, %rd5466;
	add.s64 	%rd5475, %rd5474, %rd5339;
	xor.b64  	%rd5476, %rd5413, %rd5376;
	and.b64  	%rd5477, %rd5450, %rd5476;
	xor.b64  	%rd5478, %rd5477, %rd5376;
	add.s64 	%rd5479, %rd5475, %rd5478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3589,%dummy}, %rd5450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3590}, %rd5450;
	}
	shf.r.wrap.b32 	%r3591, %r3590, %r3589, 14;
	shf.r.wrap.b32 	%r3592, %r3589, %r3590, 14;
	mov.b64 	%rd5480, {%r3592, %r3591};
	shf.r.wrap.b32 	%r3593, %r3590, %r3589, 18;
	shf.r.wrap.b32 	%r3594, %r3589, %r3590, 18;
	mov.b64 	%rd5481, {%r3594, %r3593};
	xor.b64  	%rd5482, %rd5480, %rd5481;
	shf.l.wrap.b32 	%r3595, %r3589, %r3590, 23;
	shf.l.wrap.b32 	%r3596, %r3590, %r3589, 23;
	mov.b64 	%rd5483, {%r3596, %r3595};
	xor.b64  	%rd5484, %rd5482, %rd5483;
	add.s64 	%rd5485, %rd5479, %rd5484;
	add.s64 	%rd5486, %rd5485, -8878714635349349518;
	add.s64 	%rd5487, %rd5486, %rd5350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3597,%dummy}, %rd5461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3598}, %rd5461;
	}
	shf.r.wrap.b32 	%r3599, %r3598, %r3597, 28;
	shf.r.wrap.b32 	%r3600, %r3597, %r3598, 28;
	mov.b64 	%rd5488, {%r3600, %r3599};
	shf.l.wrap.b32 	%r3601, %r3597, %r3598, 30;
	shf.l.wrap.b32 	%r3602, %r3598, %r3597, 30;
	mov.b64 	%rd5489, {%r3602, %r3601};
	xor.b64  	%rd5490, %rd5488, %rd5489;
	shf.l.wrap.b32 	%r3603, %r3597, %r3598, 25;
	shf.l.wrap.b32 	%r3604, %r3598, %r3597, 25;
	mov.b64 	%rd5491, {%r3604, %r3603};
	xor.b64  	%rd5492, %rd5490, %rd5491;
	and.b64  	%rd5493, %rd5461, %rd5424;
	or.b64  	%rd5494, %rd5461, %rd5424;
	and.b64  	%rd5495, %rd5494, %rd5387;
	or.b64  	%rd5496, %rd5495, %rd5493;
	add.s64 	%rd5497, %rd5496, %rd5492;
	add.s64 	%rd5498, %rd5497, %rd5486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3605,%dummy}, %rd5437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3606}, %rd5437;
	}
	shf.r.wrap.b32 	%r3607, %r3606, %r3605, 19;
	shf.r.wrap.b32 	%r3608, %r3605, %r3606, 19;
	mov.b64 	%rd5499, {%r3608, %r3607};
	shf.l.wrap.b32 	%r3609, %r3605, %r3606, 3;
	shf.l.wrap.b32 	%r3610, %r3606, %r3605, 3;
	mov.b64 	%rd5500, {%r3610, %r3609};
	xor.b64  	%rd5501, %rd5499, %rd5500;
	shr.u64 	%rd5502, %rd5437, 6;
	xor.b64  	%rd5503, %rd5501, %rd5502;
	shf.r.wrap.b32 	%r3611, %r3268, %r3267, 1;
	shf.r.wrap.b32 	%r3612, %r3267, %r3268, 1;
	mov.b64 	%rd5504, {%r3612, %r3611};
	shf.r.wrap.b32 	%r3613, %r3268, %r3267, 8;
	shf.r.wrap.b32 	%r3614, %r3267, %r3268, 8;
	mov.b64 	%rd5505, {%r3614, %r3613};
	xor.b64  	%rd5506, %rd5504, %rd5505;
	shr.u64 	%rd5507, %rd4956, 7;
	xor.b64  	%rd5508, %rd5506, %rd5507;
	add.s64 	%rd5509, %rd5508, %rd4919;
	add.s64 	%rd5510, %rd5509, %rd5252;
	add.s64 	%rd5511, %rd5510, %rd5503;
	add.s64 	%rd5512, %rd5511, %rd5376;
	xor.b64  	%rd5513, %rd5450, %rd5413;
	and.b64  	%rd5514, %rd5487, %rd5513;
	xor.b64  	%rd5515, %rd5514, %rd5413;
	add.s64 	%rd5516, %rd5512, %rd5515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3615,%dummy}, %rd5487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3616}, %rd5487;
	}
	shf.r.wrap.b32 	%r3617, %r3616, %r3615, 14;
	shf.r.wrap.b32 	%r3618, %r3615, %r3616, 14;
	mov.b64 	%rd5517, {%r3618, %r3617};
	shf.r.wrap.b32 	%r3619, %r3616, %r3615, 18;
	shf.r.wrap.b32 	%r3620, %r3615, %r3616, 18;
	mov.b64 	%rd5518, {%r3620, %r3619};
	xor.b64  	%rd5519, %rd5517, %rd5518;
	shf.l.wrap.b32 	%r3621, %r3615, %r3616, 23;
	shf.l.wrap.b32 	%r3622, %r3616, %r3615, 23;
	mov.b64 	%rd5520, {%r3622, %r3621};
	xor.b64  	%rd5521, %rd5519, %rd5520;
	add.s64 	%rd5522, %rd5516, %rd5521;
	add.s64 	%rd5523, %rd5522, -8302665154208450068;
	add.s64 	%rd5524, %rd5523, %rd5387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3623,%dummy}, %rd5498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3624}, %rd5498;
	}
	shf.r.wrap.b32 	%r3625, %r3624, %r3623, 28;
	shf.r.wrap.b32 	%r3626, %r3623, %r3624, 28;
	mov.b64 	%rd5525, {%r3626, %r3625};
	shf.l.wrap.b32 	%r3627, %r3623, %r3624, 30;
	shf.l.wrap.b32 	%r3628, %r3624, %r3623, 30;
	mov.b64 	%rd5526, {%r3628, %r3627};
	xor.b64  	%rd5527, %rd5525, %rd5526;
	shf.l.wrap.b32 	%r3629, %r3623, %r3624, 25;
	shf.l.wrap.b32 	%r3630, %r3624, %r3623, 25;
	mov.b64 	%rd5528, {%r3630, %r3629};
	xor.b64  	%rd5529, %rd5527, %rd5528;
	and.b64  	%rd5530, %rd5498, %rd5461;
	or.b64  	%rd5531, %rd5498, %rd5461;
	and.b64  	%rd5532, %rd5531, %rd5424;
	or.b64  	%rd5533, %rd5532, %rd5530;
	add.s64 	%rd5534, %rd5533, %rd5529;
	add.s64 	%rd5535, %rd5534, %rd5523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3631,%dummy}, %rd5474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3632}, %rd5474;
	}
	shf.r.wrap.b32 	%r3633, %r3632, %r3631, 19;
	shf.r.wrap.b32 	%r3634, %r3631, %r3632, 19;
	mov.b64 	%rd5536, {%r3634, %r3633};
	shf.l.wrap.b32 	%r3635, %r3631, %r3632, 3;
	shf.l.wrap.b32 	%r3636, %r3632, %r3631, 3;
	mov.b64 	%rd5537, {%r3636, %r3635};
	xor.b64  	%rd5538, %rd5536, %rd5537;
	shr.u64 	%rd5539, %rd5474, 6;
	xor.b64  	%rd5540, %rd5538, %rd5539;
	shf.r.wrap.b32 	%r3637, %r3294, %r3293, 1;
	shf.r.wrap.b32 	%r3638, %r3293, %r3294, 1;
	mov.b64 	%rd5541, {%r3638, %r3637};
	shf.r.wrap.b32 	%r3639, %r3294, %r3293, 8;
	shf.r.wrap.b32 	%r3640, %r3293, %r3294, 8;
	mov.b64 	%rd5542, {%r3640, %r3639};
	xor.b64  	%rd5543, %rd5541, %rd5542;
	shr.u64 	%rd5544, %rd4993, 7;
	xor.b64  	%rd5545, %rd5543, %rd5544;
	add.s64 	%rd5546, %rd5545, %rd4956;
	add.s64 	%rd5547, %rd5546, %rd5289;
	add.s64 	%rd5548, %rd5547, %rd5540;
	add.s64 	%rd5549, %rd5548, %rd5413;
	xor.b64  	%rd5550, %rd5487, %rd5450;
	and.b64  	%rd5551, %rd5524, %rd5550;
	xor.b64  	%rd5552, %rd5551, %rd5450;
	add.s64 	%rd5553, %rd5549, %rd5552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3641,%dummy}, %rd5524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3642}, %rd5524;
	}
	shf.r.wrap.b32 	%r3643, %r3642, %r3641, 14;
	shf.r.wrap.b32 	%r3644, %r3641, %r3642, 14;
	mov.b64 	%rd5554, {%r3644, %r3643};
	shf.r.wrap.b32 	%r3645, %r3642, %r3641, 18;
	shf.r.wrap.b32 	%r3646, %r3641, %r3642, 18;
	mov.b64 	%rd5555, {%r3646, %r3645};
	xor.b64  	%rd5556, %rd5554, %rd5555;
	shf.l.wrap.b32 	%r3647, %r3641, %r3642, 23;
	shf.l.wrap.b32 	%r3648, %r3642, %r3641, 23;
	mov.b64 	%rd5557, {%r3648, %r3647};
	xor.b64  	%rd5558, %rd5556, %rd5557;
	add.s64 	%rd5559, %rd5553, %rd5558;
	add.s64 	%rd5560, %rd5559, -8016688836872298968;
	add.s64 	%rd5561, %rd5560, %rd5424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3649,%dummy}, %rd5535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3650}, %rd5535;
	}
	shf.r.wrap.b32 	%r3651, %r3650, %r3649, 28;
	shf.r.wrap.b32 	%r3652, %r3649, %r3650, 28;
	mov.b64 	%rd5562, {%r3652, %r3651};
	shf.l.wrap.b32 	%r3653, %r3649, %r3650, 30;
	shf.l.wrap.b32 	%r3654, %r3650, %r3649, 30;
	mov.b64 	%rd5563, {%r3654, %r3653};
	xor.b64  	%rd5564, %rd5562, %rd5563;
	shf.l.wrap.b32 	%r3655, %r3649, %r3650, 25;
	shf.l.wrap.b32 	%r3656, %r3650, %r3649, 25;
	mov.b64 	%rd5565, {%r3656, %r3655};
	xor.b64  	%rd5566, %rd5564, %rd5565;
	and.b64  	%rd5567, %rd5535, %rd5498;
	or.b64  	%rd5568, %rd5535, %rd5498;
	and.b64  	%rd5569, %rd5568, %rd5461;
	or.b64  	%rd5570, %rd5569, %rd5567;
	add.s64 	%rd5571, %rd5570, %rd5566;
	add.s64 	%rd5572, %rd5571, %rd5560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3657,%dummy}, %rd5511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3658}, %rd5511;
	}
	shf.r.wrap.b32 	%r3659, %r3658, %r3657, 19;
	shf.r.wrap.b32 	%r3660, %r3657, %r3658, 19;
	mov.b64 	%rd5573, {%r3660, %r3659};
	shf.l.wrap.b32 	%r3661, %r3657, %r3658, 3;
	shf.l.wrap.b32 	%r3662, %r3658, %r3657, 3;
	mov.b64 	%rd5574, {%r3662, %r3661};
	xor.b64  	%rd5575, %rd5573, %rd5574;
	shr.u64 	%rd5576, %rd5511, 6;
	xor.b64  	%rd5577, %rd5575, %rd5576;
	shf.r.wrap.b32 	%r3663, %r3320, %r3319, 1;
	shf.r.wrap.b32 	%r3664, %r3319, %r3320, 1;
	mov.b64 	%rd5578, {%r3664, %r3663};
	shf.r.wrap.b32 	%r3665, %r3320, %r3319, 8;
	shf.r.wrap.b32 	%r3666, %r3319, %r3320, 8;
	mov.b64 	%rd5579, {%r3666, %r3665};
	xor.b64  	%rd5580, %rd5578, %rd5579;
	shr.u64 	%rd5581, %rd5030, 7;
	xor.b64  	%rd5582, %rd5580, %rd5581;
	add.s64 	%rd5583, %rd5582, %rd4993;
	add.s64 	%rd5584, %rd5583, %rd5326;
	add.s64 	%rd5585, %rd5584, %rd5577;
	add.s64 	%rd5586, %rd5585, %rd5450;
	xor.b64  	%rd5587, %rd5524, %rd5487;
	and.b64  	%rd5588, %rd5561, %rd5587;
	xor.b64  	%rd5589, %rd5588, %rd5487;
	add.s64 	%rd5590, %rd5586, %rd5589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3667,%dummy}, %rd5561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3668}, %rd5561;
	}
	shf.r.wrap.b32 	%r3669, %r3668, %r3667, 14;
	shf.r.wrap.b32 	%r3670, %r3667, %r3668, 14;
	mov.b64 	%rd5591, {%r3670, %r3669};
	shf.r.wrap.b32 	%r3671, %r3668, %r3667, 18;
	shf.r.wrap.b32 	%r3672, %r3667, %r3668, 18;
	mov.b64 	%rd5592, {%r3672, %r3671};
	xor.b64  	%rd5593, %rd5591, %rd5592;
	shf.l.wrap.b32 	%r3673, %r3667, %r3668, 23;
	shf.l.wrap.b32 	%r3674, %r3668, %r3667, 23;
	mov.b64 	%rd5594, {%r3674, %r3673};
	xor.b64  	%rd5595, %rd5593, %rd5594;
	add.s64 	%rd5596, %rd5590, %rd5595;
	add.s64 	%rd5597, %rd5596, -6606660893046293015;
	add.s64 	%rd5598, %rd5597, %rd5461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3675,%dummy}, %rd5572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3676}, %rd5572;
	}
	shf.r.wrap.b32 	%r3677, %r3676, %r3675, 28;
	shf.r.wrap.b32 	%r3678, %r3675, %r3676, 28;
	mov.b64 	%rd5599, {%r3678, %r3677};
	shf.l.wrap.b32 	%r3679, %r3675, %r3676, 30;
	shf.l.wrap.b32 	%r3680, %r3676, %r3675, 30;
	mov.b64 	%rd5600, {%r3680, %r3679};
	xor.b64  	%rd5601, %rd5599, %rd5600;
	shf.l.wrap.b32 	%r3681, %r3675, %r3676, 25;
	shf.l.wrap.b32 	%r3682, %r3676, %r3675, 25;
	mov.b64 	%rd5602, {%r3682, %r3681};
	xor.b64  	%rd5603, %rd5601, %rd5602;
	and.b64  	%rd5604, %rd5572, %rd5535;
	or.b64  	%rd5605, %rd5572, %rd5535;
	and.b64  	%rd5606, %rd5605, %rd5498;
	or.b64  	%rd5607, %rd5606, %rd5604;
	add.s64 	%rd5608, %rd5607, %rd5603;
	add.s64 	%rd5609, %rd5608, %rd5597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3683,%dummy}, %rd5548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3684}, %rd5548;
	}
	shf.r.wrap.b32 	%r3685, %r3684, %r3683, 19;
	shf.r.wrap.b32 	%r3686, %r3683, %r3684, 19;
	mov.b64 	%rd5610, {%r3686, %r3685};
	shf.l.wrap.b32 	%r3687, %r3683, %r3684, 3;
	shf.l.wrap.b32 	%r3688, %r3684, %r3683, 3;
	mov.b64 	%rd5611, {%r3688, %r3687};
	xor.b64  	%rd5612, %rd5610, %rd5611;
	shr.u64 	%rd5613, %rd5548, 6;
	xor.b64  	%rd5614, %rd5612, %rd5613;
	shf.r.wrap.b32 	%r3689, %r3346, %r3345, 1;
	shf.r.wrap.b32 	%r3690, %r3345, %r3346, 1;
	mov.b64 	%rd5615, {%r3690, %r3689};
	shf.r.wrap.b32 	%r3691, %r3346, %r3345, 8;
	shf.r.wrap.b32 	%r3692, %r3345, %r3346, 8;
	mov.b64 	%rd5616, {%r3692, %r3691};
	xor.b64  	%rd5617, %rd5615, %rd5616;
	shr.u64 	%rd5618, %rd5067, 7;
	xor.b64  	%rd5619, %rd5617, %rd5618;
	add.s64 	%rd5620, %rd5619, %rd5030;
	add.s64 	%rd5621, %rd5620, %rd5363;
	add.s64 	%rd5622, %rd5621, %rd5614;
	add.s64 	%rd5623, %rd5622, %rd5487;
	xor.b64  	%rd5624, %rd5561, %rd5524;
	and.b64  	%rd5625, %rd5598, %rd5624;
	xor.b64  	%rd5626, %rd5625, %rd5524;
	add.s64 	%rd5627, %rd5623, %rd5626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3693,%dummy}, %rd5598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3694}, %rd5598;
	}
	shf.r.wrap.b32 	%r3695, %r3694, %r3693, 14;
	shf.r.wrap.b32 	%r3696, %r3693, %r3694, 14;
	mov.b64 	%rd5628, {%r3696, %r3695};
	shf.r.wrap.b32 	%r3697, %r3694, %r3693, 18;
	shf.r.wrap.b32 	%r3698, %r3693, %r3694, 18;
	mov.b64 	%rd5629, {%r3698, %r3697};
	xor.b64  	%rd5630, %rd5628, %rd5629;
	shf.l.wrap.b32 	%r3699, %r3693, %r3694, 23;
	shf.l.wrap.b32 	%r3700, %r3694, %r3693, 23;
	mov.b64 	%rd5631, {%r3700, %r3699};
	xor.b64  	%rd5632, %rd5630, %rd5631;
	add.s64 	%rd5633, %rd5627, %rd5632;
	add.s64 	%rd5634, %rd5633, -4685533653050689259;
	add.s64 	%rd5635, %rd5634, %rd5498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3701,%dummy}, %rd5609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3702}, %rd5609;
	}
	shf.r.wrap.b32 	%r3703, %r3702, %r3701, 28;
	shf.r.wrap.b32 	%r3704, %r3701, %r3702, 28;
	mov.b64 	%rd5636, {%r3704, %r3703};
	shf.l.wrap.b32 	%r3705, %r3701, %r3702, 30;
	shf.l.wrap.b32 	%r3706, %r3702, %r3701, 30;
	mov.b64 	%rd5637, {%r3706, %r3705};
	xor.b64  	%rd5638, %rd5636, %rd5637;
	shf.l.wrap.b32 	%r3707, %r3701, %r3702, 25;
	shf.l.wrap.b32 	%r3708, %r3702, %r3701, 25;
	mov.b64 	%rd5639, {%r3708, %r3707};
	xor.b64  	%rd5640, %rd5638, %rd5639;
	and.b64  	%rd5641, %rd5609, %rd5572;
	or.b64  	%rd5642, %rd5609, %rd5572;
	and.b64  	%rd5643, %rd5642, %rd5535;
	or.b64  	%rd5644, %rd5643, %rd5641;
	add.s64 	%rd5645, %rd5644, %rd5640;
	add.s64 	%rd5646, %rd5645, %rd5634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3709,%dummy}, %rd5585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3710}, %rd5585;
	}
	shf.r.wrap.b32 	%r3711, %r3710, %r3709, 19;
	shf.r.wrap.b32 	%r3712, %r3709, %r3710, 19;
	mov.b64 	%rd5647, {%r3712, %r3711};
	shf.l.wrap.b32 	%r3713, %r3709, %r3710, 3;
	shf.l.wrap.b32 	%r3714, %r3710, %r3709, 3;
	mov.b64 	%rd5648, {%r3714, %r3713};
	xor.b64  	%rd5649, %rd5647, %rd5648;
	shr.u64 	%rd5650, %rd5585, 6;
	xor.b64  	%rd5651, %rd5649, %rd5650;
	shf.r.wrap.b32 	%r3715, %r3372, %r3371, 1;
	shf.r.wrap.b32 	%r3716, %r3371, %r3372, 1;
	mov.b64 	%rd5652, {%r3716, %r3715};
	shf.r.wrap.b32 	%r3717, %r3372, %r3371, 8;
	shf.r.wrap.b32 	%r3718, %r3371, %r3372, 8;
	mov.b64 	%rd5653, {%r3718, %r3717};
	xor.b64  	%rd5654, %rd5652, %rd5653;
	shr.u64 	%rd5655, %rd5104, 7;
	xor.b64  	%rd5656, %rd5654, %rd5655;
	add.s64 	%rd5657, %rd5656, %rd5067;
	add.s64 	%rd5658, %rd5657, %rd5400;
	add.s64 	%rd5659, %rd5658, %rd5651;
	add.s64 	%rd5660, %rd5659, %rd5524;
	xor.b64  	%rd5661, %rd5598, %rd5561;
	and.b64  	%rd5662, %rd5635, %rd5661;
	xor.b64  	%rd5663, %rd5662, %rd5561;
	add.s64 	%rd5664, %rd5660, %rd5663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3719,%dummy}, %rd5635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3720}, %rd5635;
	}
	shf.r.wrap.b32 	%r3721, %r3720, %r3719, 14;
	shf.r.wrap.b32 	%r3722, %r3719, %r3720, 14;
	mov.b64 	%rd5665, {%r3722, %r3721};
	shf.r.wrap.b32 	%r3723, %r3720, %r3719, 18;
	shf.r.wrap.b32 	%r3724, %r3719, %r3720, 18;
	mov.b64 	%rd5666, {%r3724, %r3723};
	xor.b64  	%rd5667, %rd5665, %rd5666;
	shf.l.wrap.b32 	%r3725, %r3719, %r3720, 23;
	shf.l.wrap.b32 	%r3726, %r3720, %r3719, 23;
	mov.b64 	%rd5668, {%r3726, %r3725};
	xor.b64  	%rd5669, %rd5667, %rd5668;
	add.s64 	%rd5670, %rd5664, %rd5669;
	add.s64 	%rd5671, %rd5670, -4147400797238176981;
	add.s64 	%rd5672, %rd5671, %rd5535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3727,%dummy}, %rd5646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3728}, %rd5646;
	}
	shf.r.wrap.b32 	%r3729, %r3728, %r3727, 28;
	shf.r.wrap.b32 	%r3730, %r3727, %r3728, 28;
	mov.b64 	%rd5673, {%r3730, %r3729};
	shf.l.wrap.b32 	%r3731, %r3727, %r3728, 30;
	shf.l.wrap.b32 	%r3732, %r3728, %r3727, 30;
	mov.b64 	%rd5674, {%r3732, %r3731};
	xor.b64  	%rd5675, %rd5673, %rd5674;
	shf.l.wrap.b32 	%r3733, %r3727, %r3728, 25;
	shf.l.wrap.b32 	%r3734, %r3728, %r3727, 25;
	mov.b64 	%rd5676, {%r3734, %r3733};
	xor.b64  	%rd5677, %rd5675, %rd5676;
	and.b64  	%rd5678, %rd5646, %rd5609;
	or.b64  	%rd5679, %rd5646, %rd5609;
	and.b64  	%rd5680, %rd5679, %rd5572;
	or.b64  	%rd5681, %rd5680, %rd5678;
	add.s64 	%rd5682, %rd5681, %rd5677;
	add.s64 	%rd5683, %rd5682, %rd5671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3735,%dummy}, %rd5622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3736}, %rd5622;
	}
	shf.r.wrap.b32 	%r3737, %r3736, %r3735, 19;
	shf.r.wrap.b32 	%r3738, %r3735, %r3736, 19;
	mov.b64 	%rd5684, {%r3738, %r3737};
	shf.l.wrap.b32 	%r3739, %r3735, %r3736, 3;
	shf.l.wrap.b32 	%r3740, %r3736, %r3735, 3;
	mov.b64 	%rd5685, {%r3740, %r3739};
	xor.b64  	%rd5686, %rd5684, %rd5685;
	shr.u64 	%rd5687, %rd5622, 6;
	xor.b64  	%rd5688, %rd5686, %rd5687;
	shf.r.wrap.b32 	%r3741, %r3398, %r3397, 1;
	shf.r.wrap.b32 	%r3742, %r3397, %r3398, 1;
	mov.b64 	%rd5689, {%r3742, %r3741};
	shf.r.wrap.b32 	%r3743, %r3398, %r3397, 8;
	shf.r.wrap.b32 	%r3744, %r3397, %r3398, 8;
	mov.b64 	%rd5690, {%r3744, %r3743};
	xor.b64  	%rd5691, %rd5689, %rd5690;
	shr.u64 	%rd5692, %rd5141, 7;
	xor.b64  	%rd5693, %rd5691, %rd5692;
	add.s64 	%rd5694, %rd5693, %rd5104;
	add.s64 	%rd5695, %rd5694, %rd5437;
	add.s64 	%rd5696, %rd5695, %rd5688;
	add.s64 	%rd5697, %rd5696, %rd5561;
	xor.b64  	%rd5698, %rd5635, %rd5598;
	and.b64  	%rd5699, %rd5672, %rd5698;
	xor.b64  	%rd5700, %rd5699, %rd5598;
	add.s64 	%rd5701, %rd5697, %rd5700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3745,%dummy}, %rd5672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3746}, %rd5672;
	}
	shf.r.wrap.b32 	%r3747, %r3746, %r3745, 14;
	shf.r.wrap.b32 	%r3748, %r3745, %r3746, 14;
	mov.b64 	%rd5702, {%r3748, %r3747};
	shf.r.wrap.b32 	%r3749, %r3746, %r3745, 18;
	shf.r.wrap.b32 	%r3750, %r3745, %r3746, 18;
	mov.b64 	%rd5703, {%r3750, %r3749};
	xor.b64  	%rd5704, %rd5702, %rd5703;
	shf.l.wrap.b32 	%r3751, %r3745, %r3746, 23;
	shf.l.wrap.b32 	%r3752, %r3746, %r3745, 23;
	mov.b64 	%rd5705, {%r3752, %r3751};
	xor.b64  	%rd5706, %rd5704, %rd5705;
	add.s64 	%rd5707, %rd5701, %rd5706;
	add.s64 	%rd5708, %rd5707, -3880063495543823972;
	add.s64 	%rd5709, %rd5708, %rd5572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3753,%dummy}, %rd5683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3754}, %rd5683;
	}
	shf.r.wrap.b32 	%r3755, %r3754, %r3753, 28;
	shf.r.wrap.b32 	%r3756, %r3753, %r3754, 28;
	mov.b64 	%rd5710, {%r3756, %r3755};
	shf.l.wrap.b32 	%r3757, %r3753, %r3754, 30;
	shf.l.wrap.b32 	%r3758, %r3754, %r3753, 30;
	mov.b64 	%rd5711, {%r3758, %r3757};
	xor.b64  	%rd5712, %rd5710, %rd5711;
	shf.l.wrap.b32 	%r3759, %r3753, %r3754, 25;
	shf.l.wrap.b32 	%r3760, %r3754, %r3753, 25;
	mov.b64 	%rd5713, {%r3760, %r3759};
	xor.b64  	%rd5714, %rd5712, %rd5713;
	and.b64  	%rd5715, %rd5683, %rd5646;
	or.b64  	%rd5716, %rd5683, %rd5646;
	and.b64  	%rd5717, %rd5716, %rd5609;
	or.b64  	%rd5718, %rd5717, %rd5715;
	add.s64 	%rd5719, %rd5718, %rd5714;
	add.s64 	%rd5720, %rd5719, %rd5708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3761,%dummy}, %rd5659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3762}, %rd5659;
	}
	shf.r.wrap.b32 	%r3763, %r3762, %r3761, 19;
	shf.r.wrap.b32 	%r3764, %r3761, %r3762, 19;
	mov.b64 	%rd5721, {%r3764, %r3763};
	shf.l.wrap.b32 	%r3765, %r3761, %r3762, 3;
	shf.l.wrap.b32 	%r3766, %r3762, %r3761, 3;
	mov.b64 	%rd5722, {%r3766, %r3765};
	xor.b64  	%rd5723, %rd5721, %rd5722;
	shr.u64 	%rd5724, %rd5659, 6;
	xor.b64  	%rd5725, %rd5723, %rd5724;
	shf.r.wrap.b32 	%r3767, %r3424, %r3423, 1;
	shf.r.wrap.b32 	%r3768, %r3423, %r3424, 1;
	mov.b64 	%rd5726, {%r3768, %r3767};
	shf.r.wrap.b32 	%r3769, %r3424, %r3423, 8;
	shf.r.wrap.b32 	%r3770, %r3423, %r3424, 8;
	mov.b64 	%rd5727, {%r3770, %r3769};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	shr.u64 	%rd5729, %rd5178, 7;
	xor.b64  	%rd5730, %rd5728, %rd5729;
	add.s64 	%rd5731, %rd5730, %rd5141;
	add.s64 	%rd5732, %rd5731, %rd5474;
	add.s64 	%rd5733, %rd5732, %rd5725;
	add.s64 	%rd5734, %rd5733, %rd5598;
	xor.b64  	%rd5735, %rd5672, %rd5635;
	and.b64  	%rd5736, %rd5709, %rd5735;
	xor.b64  	%rd5737, %rd5736, %rd5635;
	add.s64 	%rd5738, %rd5734, %rd5737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3771,%dummy}, %rd5709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3772}, %rd5709;
	}
	shf.r.wrap.b32 	%r3773, %r3772, %r3771, 14;
	shf.r.wrap.b32 	%r3774, %r3771, %r3772, 14;
	mov.b64 	%rd5739, {%r3774, %r3773};
	shf.r.wrap.b32 	%r3775, %r3772, %r3771, 18;
	shf.r.wrap.b32 	%r3776, %r3771, %r3772, 18;
	mov.b64 	%rd5740, {%r3776, %r3775};
	xor.b64  	%rd5741, %rd5739, %rd5740;
	shf.l.wrap.b32 	%r3777, %r3771, %r3772, 23;
	shf.l.wrap.b32 	%r3778, %r3772, %r3771, 23;
	mov.b64 	%rd5742, {%r3778, %r3777};
	xor.b64  	%rd5743, %rd5741, %rd5742;
	add.s64 	%rd5744, %rd5738, %rd5743;
	add.s64 	%rd5745, %rd5744, -3348786107499101689;
	add.s64 	%rd5746, %rd5745, %rd5609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3779,%dummy}, %rd5720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3780}, %rd5720;
	}
	shf.r.wrap.b32 	%r3781, %r3780, %r3779, 28;
	shf.r.wrap.b32 	%r3782, %r3779, %r3780, 28;
	mov.b64 	%rd5747, {%r3782, %r3781};
	shf.l.wrap.b32 	%r3783, %r3779, %r3780, 30;
	shf.l.wrap.b32 	%r3784, %r3780, %r3779, 30;
	mov.b64 	%rd5748, {%r3784, %r3783};
	xor.b64  	%rd5749, %rd5747, %rd5748;
	shf.l.wrap.b32 	%r3785, %r3779, %r3780, 25;
	shf.l.wrap.b32 	%r3786, %r3780, %r3779, 25;
	mov.b64 	%rd5750, {%r3786, %r3785};
	xor.b64  	%rd5751, %rd5749, %rd5750;
	and.b64  	%rd5752, %rd5720, %rd5683;
	or.b64  	%rd5753, %rd5720, %rd5683;
	and.b64  	%rd5754, %rd5753, %rd5646;
	or.b64  	%rd5755, %rd5754, %rd5752;
	add.s64 	%rd5756, %rd5755, %rd5751;
	add.s64 	%rd5757, %rd5756, %rd5745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3787,%dummy}, %rd5696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3788}, %rd5696;
	}
	shf.r.wrap.b32 	%r3789, %r3788, %r3787, 19;
	shf.r.wrap.b32 	%r3790, %r3787, %r3788, 19;
	mov.b64 	%rd5758, {%r3790, %r3789};
	shf.l.wrap.b32 	%r3791, %r3787, %r3788, 3;
	shf.l.wrap.b32 	%r3792, %r3788, %r3787, 3;
	mov.b64 	%rd5759, {%r3792, %r3791};
	xor.b64  	%rd5760, %rd5758, %rd5759;
	shr.u64 	%rd5761, %rd5696, 6;
	xor.b64  	%rd5762, %rd5760, %rd5761;
	shf.r.wrap.b32 	%r3793, %r3450, %r3449, 1;
	shf.r.wrap.b32 	%r3794, %r3449, %r3450, 1;
	mov.b64 	%rd5763, {%r3794, %r3793};
	shf.r.wrap.b32 	%r3795, %r3450, %r3449, 8;
	shf.r.wrap.b32 	%r3796, %r3449, %r3450, 8;
	mov.b64 	%rd5764, {%r3796, %r3795};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	shr.u64 	%rd5766, %rd5215, 7;
	xor.b64  	%rd5767, %rd5765, %rd5766;
	add.s64 	%rd5768, %rd5767, %rd5178;
	add.s64 	%rd5769, %rd5768, %rd5511;
	add.s64 	%rd5770, %rd5769, %rd5762;
	add.s64 	%rd5771, %rd5770, %rd5635;
	xor.b64  	%rd5772, %rd5709, %rd5672;
	and.b64  	%rd5773, %rd5746, %rd5772;
	xor.b64  	%rd5774, %rd5773, %rd5672;
	add.s64 	%rd5775, %rd5771, %rd5774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3797,%dummy}, %rd5746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3798}, %rd5746;
	}
	shf.r.wrap.b32 	%r3799, %r3798, %r3797, 14;
	shf.r.wrap.b32 	%r3800, %r3797, %r3798, 14;
	mov.b64 	%rd5776, {%r3800, %r3799};
	shf.r.wrap.b32 	%r3801, %r3798, %r3797, 18;
	shf.r.wrap.b32 	%r3802, %r3797, %r3798, 18;
	mov.b64 	%rd5777, {%r3802, %r3801};
	xor.b64  	%rd5778, %rd5776, %rd5777;
	shf.l.wrap.b32 	%r3803, %r3797, %r3798, 23;
	shf.l.wrap.b32 	%r3804, %r3798, %r3797, 23;
	mov.b64 	%rd5779, {%r3804, %r3803};
	xor.b64  	%rd5780, %rd5778, %rd5779;
	add.s64 	%rd5781, %rd5775, %rd5780;
	add.s64 	%rd5782, %rd5781, -1523767162380948706;
	add.s64 	%rd5783, %rd5782, %rd5646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3805,%dummy}, %rd5757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3806}, %rd5757;
	}
	shf.r.wrap.b32 	%r3807, %r3806, %r3805, 28;
	shf.r.wrap.b32 	%r3808, %r3805, %r3806, 28;
	mov.b64 	%rd5784, {%r3808, %r3807};
	shf.l.wrap.b32 	%r3809, %r3805, %r3806, 30;
	shf.l.wrap.b32 	%r3810, %r3806, %r3805, 30;
	mov.b64 	%rd5785, {%r3810, %r3809};
	xor.b64  	%rd5786, %rd5784, %rd5785;
	shf.l.wrap.b32 	%r3811, %r3805, %r3806, 25;
	shf.l.wrap.b32 	%r3812, %r3806, %r3805, 25;
	mov.b64 	%rd5787, {%r3812, %r3811};
	xor.b64  	%rd5788, %rd5786, %rd5787;
	and.b64  	%rd5789, %rd5757, %rd5720;
	or.b64  	%rd5790, %rd5757, %rd5720;
	and.b64  	%rd5791, %rd5790, %rd5683;
	or.b64  	%rd5792, %rd5791, %rd5789;
	add.s64 	%rd5793, %rd5792, %rd5788;
	add.s64 	%rd5794, %rd5793, %rd5782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd5733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd5733;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 19;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 19;
	mov.b64 	%rd5795, {%r3816, %r3815};
	shf.l.wrap.b32 	%r3817, %r3813, %r3814, 3;
	shf.l.wrap.b32 	%r3818, %r3814, %r3813, 3;
	mov.b64 	%rd5796, {%r3818, %r3817};
	xor.b64  	%rd5797, %rd5795, %rd5796;
	shr.u64 	%rd5798, %rd5733, 6;
	xor.b64  	%rd5799, %rd5797, %rd5798;
	shf.r.wrap.b32 	%r3819, %r3476, %r3475, 1;
	shf.r.wrap.b32 	%r3820, %r3475, %r3476, 1;
	mov.b64 	%rd5800, {%r3820, %r3819};
	shf.r.wrap.b32 	%r3821, %r3476, %r3475, 8;
	shf.r.wrap.b32 	%r3822, %r3475, %r3476, 8;
	mov.b64 	%rd5801, {%r3822, %r3821};
	xor.b64  	%rd5802, %rd5800, %rd5801;
	shr.u64 	%rd5803, %rd5252, 7;
	xor.b64  	%rd5804, %rd5802, %rd5803;
	add.s64 	%rd5805, %rd5804, %rd5215;
	add.s64 	%rd5806, %rd5805, %rd5548;
	add.s64 	%rd5807, %rd5806, %rd5799;
	add.s64 	%rd5808, %rd5807, %rd5672;
	xor.b64  	%rd5809, %rd5746, %rd5709;
	and.b64  	%rd5810, %rd5783, %rd5809;
	xor.b64  	%rd5811, %rd5810, %rd5709;
	add.s64 	%rd5812, %rd5808, %rd5811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3823,%dummy}, %rd5783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3824}, %rd5783;
	}
	shf.r.wrap.b32 	%r3825, %r3824, %r3823, 14;
	shf.r.wrap.b32 	%r3826, %r3823, %r3824, 14;
	mov.b64 	%rd5813, {%r3826, %r3825};
	shf.r.wrap.b32 	%r3827, %r3824, %r3823, 18;
	shf.r.wrap.b32 	%r3828, %r3823, %r3824, 18;
	mov.b64 	%rd5814, {%r3828, %r3827};
	xor.b64  	%rd5815, %rd5813, %rd5814;
	shf.l.wrap.b32 	%r3829, %r3823, %r3824, 23;
	shf.l.wrap.b32 	%r3830, %r3824, %r3823, 23;
	mov.b64 	%rd5816, {%r3830, %r3829};
	xor.b64  	%rd5817, %rd5815, %rd5816;
	add.s64 	%rd5818, %rd5812, %rd5817;
	add.s64 	%rd5819, %rd5818, -757361751448694408;
	add.s64 	%rd5820, %rd5819, %rd5683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3831,%dummy}, %rd5794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3832}, %rd5794;
	}
	shf.r.wrap.b32 	%r3833, %r3832, %r3831, 28;
	shf.r.wrap.b32 	%r3834, %r3831, %r3832, 28;
	mov.b64 	%rd5821, {%r3834, %r3833};
	shf.l.wrap.b32 	%r3835, %r3831, %r3832, 30;
	shf.l.wrap.b32 	%r3836, %r3832, %r3831, 30;
	mov.b64 	%rd5822, {%r3836, %r3835};
	xor.b64  	%rd5823, %rd5821, %rd5822;
	shf.l.wrap.b32 	%r3837, %r3831, %r3832, 25;
	shf.l.wrap.b32 	%r3838, %r3832, %r3831, 25;
	mov.b64 	%rd5824, {%r3838, %r3837};
	xor.b64  	%rd5825, %rd5823, %rd5824;
	and.b64  	%rd5826, %rd5794, %rd5757;
	or.b64  	%rd5827, %rd5794, %rd5757;
	and.b64  	%rd5828, %rd5827, %rd5720;
	or.b64  	%rd5829, %rd5828, %rd5826;
	add.s64 	%rd5830, %rd5829, %rd5825;
	add.s64 	%rd5831, %rd5830, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3839,%dummy}, %rd5770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3840}, %rd5770;
	}
	shf.r.wrap.b32 	%r3841, %r3840, %r3839, 19;
	shf.r.wrap.b32 	%r3842, %r3839, %r3840, 19;
	mov.b64 	%rd5832, {%r3842, %r3841};
	shf.l.wrap.b32 	%r3843, %r3839, %r3840, 3;
	shf.l.wrap.b32 	%r3844, %r3840, %r3839, 3;
	mov.b64 	%rd5833, {%r3844, %r3843};
	xor.b64  	%rd5834, %rd5832, %rd5833;
	shr.u64 	%rd5835, %rd5770, 6;
	xor.b64  	%rd5836, %rd5834, %rd5835;
	shf.r.wrap.b32 	%r3845, %r3502, %r3501, 1;
	shf.r.wrap.b32 	%r3846, %r3501, %r3502, 1;
	mov.b64 	%rd5837, {%r3846, %r3845};
	shf.r.wrap.b32 	%r3847, %r3502, %r3501, 8;
	shf.r.wrap.b32 	%r3848, %r3501, %r3502, 8;
	mov.b64 	%rd5838, {%r3848, %r3847};
	xor.b64  	%rd5839, %rd5837, %rd5838;
	shr.u64 	%rd5840, %rd5289, 7;
	xor.b64  	%rd5841, %rd5839, %rd5840;
	add.s64 	%rd5842, %rd5841, %rd5252;
	add.s64 	%rd5843, %rd5842, %rd5585;
	add.s64 	%rd5844, %rd5843, %rd5836;
	add.s64 	%rd5845, %rd5844, %rd5709;
	xor.b64  	%rd5846, %rd5783, %rd5746;
	and.b64  	%rd5847, %rd5820, %rd5846;
	xor.b64  	%rd5848, %rd5847, %rd5746;
	add.s64 	%rd5849, %rd5845, %rd5848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3849,%dummy}, %rd5820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3850}, %rd5820;
	}
	shf.r.wrap.b32 	%r3851, %r3850, %r3849, 14;
	shf.r.wrap.b32 	%r3852, %r3849, %r3850, 14;
	mov.b64 	%rd5850, {%r3852, %r3851};
	shf.r.wrap.b32 	%r3853, %r3850, %r3849, 18;
	shf.r.wrap.b32 	%r3854, %r3849, %r3850, 18;
	mov.b64 	%rd5851, {%r3854, %r3853};
	xor.b64  	%rd5852, %rd5850, %rd5851;
	shf.l.wrap.b32 	%r3855, %r3849, %r3850, 23;
	shf.l.wrap.b32 	%r3856, %r3850, %r3849, 23;
	mov.b64 	%rd5853, {%r3856, %r3855};
	xor.b64  	%rd5854, %rd5852, %rd5853;
	add.s64 	%rd5855, %rd5849, %rd5854;
	add.s64 	%rd5856, %rd5855, 500013540394364858;
	add.s64 	%rd5857, %rd5856, %rd5720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3857,%dummy}, %rd5831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3858}, %rd5831;
	}
	shf.r.wrap.b32 	%r3859, %r3858, %r3857, 28;
	shf.r.wrap.b32 	%r3860, %r3857, %r3858, 28;
	mov.b64 	%rd5858, {%r3860, %r3859};
	shf.l.wrap.b32 	%r3861, %r3857, %r3858, 30;
	shf.l.wrap.b32 	%r3862, %r3858, %r3857, 30;
	mov.b64 	%rd5859, {%r3862, %r3861};
	xor.b64  	%rd5860, %rd5858, %rd5859;
	shf.l.wrap.b32 	%r3863, %r3857, %r3858, 25;
	shf.l.wrap.b32 	%r3864, %r3858, %r3857, 25;
	mov.b64 	%rd5861, {%r3864, %r3863};
	xor.b64  	%rd5862, %rd5860, %rd5861;
	and.b64  	%rd5863, %rd5831, %rd5794;
	or.b64  	%rd5864, %rd5831, %rd5794;
	and.b64  	%rd5865, %rd5864, %rd5757;
	or.b64  	%rd5866, %rd5865, %rd5863;
	add.s64 	%rd5867, %rd5866, %rd5862;
	add.s64 	%rd5868, %rd5867, %rd5856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3865,%dummy}, %rd5807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3866}, %rd5807;
	}
	shf.r.wrap.b32 	%r3867, %r3866, %r3865, 19;
	shf.r.wrap.b32 	%r3868, %r3865, %r3866, 19;
	mov.b64 	%rd5869, {%r3868, %r3867};
	shf.l.wrap.b32 	%r3869, %r3865, %r3866, 3;
	shf.l.wrap.b32 	%r3870, %r3866, %r3865, 3;
	mov.b64 	%rd5870, {%r3870, %r3869};
	xor.b64  	%rd5871, %rd5869, %rd5870;
	shr.u64 	%rd5872, %rd5807, 6;
	xor.b64  	%rd5873, %rd5871, %rd5872;
	shf.r.wrap.b32 	%r3871, %r3528, %r3527, 1;
	shf.r.wrap.b32 	%r3872, %r3527, %r3528, 1;
	mov.b64 	%rd5874, {%r3872, %r3871};
	shf.r.wrap.b32 	%r3873, %r3528, %r3527, 8;
	shf.r.wrap.b32 	%r3874, %r3527, %r3528, 8;
	mov.b64 	%rd5875, {%r3874, %r3873};
	xor.b64  	%rd5876, %rd5874, %rd5875;
	shr.u64 	%rd5877, %rd5326, 7;
	xor.b64  	%rd5878, %rd5876, %rd5877;
	add.s64 	%rd5879, %rd5878, %rd5289;
	add.s64 	%rd5880, %rd5879, %rd5622;
	add.s64 	%rd5881, %rd5880, %rd5873;
	add.s64 	%rd5882, %rd5881, %rd5746;
	xor.b64  	%rd5883, %rd5820, %rd5783;
	and.b64  	%rd5884, %rd5857, %rd5883;
	xor.b64  	%rd5885, %rd5884, %rd5783;
	add.s64 	%rd5886, %rd5882, %rd5885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3875,%dummy}, %rd5857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3876}, %rd5857;
	}
	shf.r.wrap.b32 	%r3877, %r3876, %r3875, 14;
	shf.r.wrap.b32 	%r3878, %r3875, %r3876, 14;
	mov.b64 	%rd5887, {%r3878, %r3877};
	shf.r.wrap.b32 	%r3879, %r3876, %r3875, 18;
	shf.r.wrap.b32 	%r3880, %r3875, %r3876, 18;
	mov.b64 	%rd5888, {%r3880, %r3879};
	xor.b64  	%rd5889, %rd5887, %rd5888;
	shf.l.wrap.b32 	%r3881, %r3875, %r3876, 23;
	shf.l.wrap.b32 	%r3882, %r3876, %r3875, 23;
	mov.b64 	%rd5890, {%r3882, %r3881};
	xor.b64  	%rd5891, %rd5889, %rd5890;
	add.s64 	%rd5892, %rd5886, %rd5891;
	add.s64 	%rd5893, %rd5892, 748580250866718886;
	add.s64 	%rd5894, %rd5893, %rd5757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd5868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd5868;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 28;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 28;
	mov.b64 	%rd5895, {%r3886, %r3885};
	shf.l.wrap.b32 	%r3887, %r3883, %r3884, 30;
	shf.l.wrap.b32 	%r3888, %r3884, %r3883, 30;
	mov.b64 	%rd5896, {%r3888, %r3887};
	xor.b64  	%rd5897, %rd5895, %rd5896;
	shf.l.wrap.b32 	%r3889, %r3883, %r3884, 25;
	shf.l.wrap.b32 	%r3890, %r3884, %r3883, 25;
	mov.b64 	%rd5898, {%r3890, %r3889};
	xor.b64  	%rd5899, %rd5897, %rd5898;
	and.b64  	%rd5900, %rd5868, %rd5831;
	or.b64  	%rd5901, %rd5868, %rd5831;
	and.b64  	%rd5902, %rd5901, %rd5794;
	or.b64  	%rd5903, %rd5902, %rd5900;
	add.s64 	%rd5904, %rd5903, %rd5899;
	add.s64 	%rd5905, %rd5904, %rd5893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd5844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd5844;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 19;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 19;
	mov.b64 	%rd5906, {%r3894, %r3893};
	shf.l.wrap.b32 	%r3895, %r3891, %r3892, 3;
	shf.l.wrap.b32 	%r3896, %r3892, %r3891, 3;
	mov.b64 	%rd5907, {%r3896, %r3895};
	xor.b64  	%rd5908, %rd5906, %rd5907;
	shr.u64 	%rd5909, %rd5844, 6;
	xor.b64  	%rd5910, %rd5908, %rd5909;
	shf.r.wrap.b32 	%r3897, %r3554, %r3553, 1;
	shf.r.wrap.b32 	%r3898, %r3553, %r3554, 1;
	mov.b64 	%rd5911, {%r3898, %r3897};
	shf.r.wrap.b32 	%r3899, %r3554, %r3553, 8;
	shf.r.wrap.b32 	%r3900, %r3553, %r3554, 8;
	mov.b64 	%rd5912, {%r3900, %r3899};
	xor.b64  	%rd5913, %rd5911, %rd5912;
	shr.u64 	%rd5914, %rd5363, 7;
	xor.b64  	%rd5915, %rd5913, %rd5914;
	add.s64 	%rd5916, %rd5915, %rd5326;
	add.s64 	%rd5917, %rd5916, %rd5659;
	add.s64 	%rd5918, %rd5917, %rd5910;
	add.s64 	%rd5919, %rd5918, %rd5783;
	xor.b64  	%rd5920, %rd5857, %rd5820;
	and.b64  	%rd5921, %rd5894, %rd5920;
	xor.b64  	%rd5922, %rd5921, %rd5820;
	add.s64 	%rd5923, %rd5919, %rd5922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3901,%dummy}, %rd5894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3902}, %rd5894;
	}
	shf.r.wrap.b32 	%r3903, %r3902, %r3901, 14;
	shf.r.wrap.b32 	%r3904, %r3901, %r3902, 14;
	mov.b64 	%rd5924, {%r3904, %r3903};
	shf.r.wrap.b32 	%r3905, %r3902, %r3901, 18;
	shf.r.wrap.b32 	%r3906, %r3901, %r3902, 18;
	mov.b64 	%rd5925, {%r3906, %r3905};
	xor.b64  	%rd5926, %rd5924, %rd5925;
	shf.l.wrap.b32 	%r3907, %r3901, %r3902, 23;
	shf.l.wrap.b32 	%r3908, %r3902, %r3901, 23;
	mov.b64 	%rd5927, {%r3908, %r3907};
	xor.b64  	%rd5928, %rd5926, %rd5927;
	add.s64 	%rd5929, %rd5923, %rd5928;
	add.s64 	%rd5930, %rd5929, 1242879168328830382;
	add.s64 	%rd5931, %rd5930, %rd5794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3909,%dummy}, %rd5905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3910}, %rd5905;
	}
	shf.r.wrap.b32 	%r3911, %r3910, %r3909, 28;
	shf.r.wrap.b32 	%r3912, %r3909, %r3910, 28;
	mov.b64 	%rd5932, {%r3912, %r3911};
	shf.l.wrap.b32 	%r3913, %r3909, %r3910, 30;
	shf.l.wrap.b32 	%r3914, %r3910, %r3909, 30;
	mov.b64 	%rd5933, {%r3914, %r3913};
	xor.b64  	%rd5934, %rd5932, %rd5933;
	shf.l.wrap.b32 	%r3915, %r3909, %r3910, 25;
	shf.l.wrap.b32 	%r3916, %r3910, %r3909, 25;
	mov.b64 	%rd5935, {%r3916, %r3915};
	xor.b64  	%rd5936, %rd5934, %rd5935;
	and.b64  	%rd5937, %rd5905, %rd5868;
	or.b64  	%rd5938, %rd5905, %rd5868;
	and.b64  	%rd5939, %rd5938, %rd5831;
	or.b64  	%rd5940, %rd5939, %rd5937;
	add.s64 	%rd5941, %rd5940, %rd5936;
	add.s64 	%rd5942, %rd5941, %rd5930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3917,%dummy}, %rd5881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3918}, %rd5881;
	}
	shf.r.wrap.b32 	%r3919, %r3918, %r3917, 19;
	shf.r.wrap.b32 	%r3920, %r3917, %r3918, 19;
	mov.b64 	%rd5943, {%r3920, %r3919};
	shf.l.wrap.b32 	%r3921, %r3917, %r3918, 3;
	shf.l.wrap.b32 	%r3922, %r3918, %r3917, 3;
	mov.b64 	%rd5944, {%r3922, %r3921};
	xor.b64  	%rd5945, %rd5943, %rd5944;
	shr.u64 	%rd5946, %rd5881, 6;
	xor.b64  	%rd5947, %rd5945, %rd5946;
	shf.r.wrap.b32 	%r3923, %r3580, %r3579, 1;
	shf.r.wrap.b32 	%r3924, %r3579, %r3580, 1;
	mov.b64 	%rd5948, {%r3924, %r3923};
	shf.r.wrap.b32 	%r3925, %r3580, %r3579, 8;
	shf.r.wrap.b32 	%r3926, %r3579, %r3580, 8;
	mov.b64 	%rd5949, {%r3926, %r3925};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	shr.u64 	%rd5951, %rd5400, 7;
	xor.b64  	%rd5952, %rd5950, %rd5951;
	add.s64 	%rd5953, %rd5952, %rd5363;
	add.s64 	%rd5954, %rd5953, %rd5696;
	add.s64 	%rd5955, %rd5954, %rd5947;
	add.s64 	%rd5956, %rd5955, %rd5820;
	xor.b64  	%rd5957, %rd5894, %rd5857;
	and.b64  	%rd5958, %rd5931, %rd5957;
	xor.b64  	%rd5959, %rd5958, %rd5857;
	add.s64 	%rd5960, %rd5956, %rd5959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3927,%dummy}, %rd5931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3928}, %rd5931;
	}
	shf.r.wrap.b32 	%r3929, %r3928, %r3927, 14;
	shf.r.wrap.b32 	%r3930, %r3927, %r3928, 14;
	mov.b64 	%rd5961, {%r3930, %r3929};
	shf.r.wrap.b32 	%r3931, %r3928, %r3927, 18;
	shf.r.wrap.b32 	%r3932, %r3927, %r3928, 18;
	mov.b64 	%rd5962, {%r3932, %r3931};
	xor.b64  	%rd5963, %rd5961, %rd5962;
	shf.l.wrap.b32 	%r3933, %r3927, %r3928, 23;
	shf.l.wrap.b32 	%r3934, %r3928, %r3927, 23;
	mov.b64 	%rd5964, {%r3934, %r3933};
	xor.b64  	%rd5965, %rd5963, %rd5964;
	add.s64 	%rd5966, %rd5960, %rd5965;
	add.s64 	%rd5967, %rd5966, 1977374033974150939;
	add.s64 	%rd5968, %rd5967, %rd5831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3935,%dummy}, %rd5942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3936}, %rd5942;
	}
	shf.r.wrap.b32 	%r3937, %r3936, %r3935, 28;
	shf.r.wrap.b32 	%r3938, %r3935, %r3936, 28;
	mov.b64 	%rd5969, {%r3938, %r3937};
	shf.l.wrap.b32 	%r3939, %r3935, %r3936, 30;
	shf.l.wrap.b32 	%r3940, %r3936, %r3935, 30;
	mov.b64 	%rd5970, {%r3940, %r3939};
	xor.b64  	%rd5971, %rd5969, %rd5970;
	shf.l.wrap.b32 	%r3941, %r3935, %r3936, 25;
	shf.l.wrap.b32 	%r3942, %r3936, %r3935, 25;
	mov.b64 	%rd5972, {%r3942, %r3941};
	xor.b64  	%rd5973, %rd5971, %rd5972;
	and.b64  	%rd5974, %rd5942, %rd5905;
	or.b64  	%rd5975, %rd5942, %rd5905;
	and.b64  	%rd5976, %rd5975, %rd5868;
	or.b64  	%rd5977, %rd5976, %rd5974;
	add.s64 	%rd5978, %rd5977, %rd5973;
	add.s64 	%rd5979, %rd5978, %rd5967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3943,%dummy}, %rd5918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3944}, %rd5918;
	}
	shf.r.wrap.b32 	%r3945, %r3944, %r3943, 19;
	shf.r.wrap.b32 	%r3946, %r3943, %r3944, 19;
	mov.b64 	%rd5980, {%r3946, %r3945};
	shf.l.wrap.b32 	%r3947, %r3943, %r3944, 3;
	shf.l.wrap.b32 	%r3948, %r3944, %r3943, 3;
	mov.b64 	%rd5981, {%r3948, %r3947};
	xor.b64  	%rd5982, %rd5980, %rd5981;
	shr.u64 	%rd5983, %rd5918, 6;
	xor.b64  	%rd5984, %rd5982, %rd5983;
	shf.r.wrap.b32 	%r3949, %r3606, %r3605, 1;
	shf.r.wrap.b32 	%r3950, %r3605, %r3606, 1;
	mov.b64 	%rd5985, {%r3950, %r3949};
	shf.r.wrap.b32 	%r3951, %r3606, %r3605, 8;
	shf.r.wrap.b32 	%r3952, %r3605, %r3606, 8;
	mov.b64 	%rd5986, {%r3952, %r3951};
	xor.b64  	%rd5987, %rd5985, %rd5986;
	shr.u64 	%rd5988, %rd5437, 7;
	xor.b64  	%rd5989, %rd5987, %rd5988;
	add.s64 	%rd5990, %rd5989, %rd5400;
	add.s64 	%rd5991, %rd5990, %rd5733;
	add.s64 	%rd5992, %rd5991, %rd5984;
	add.s64 	%rd5993, %rd5992, %rd5857;
	xor.b64  	%rd5994, %rd5931, %rd5894;
	and.b64  	%rd5995, %rd5968, %rd5994;
	xor.b64  	%rd5996, %rd5995, %rd5894;
	add.s64 	%rd5997, %rd5993, %rd5996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3953,%dummy}, %rd5968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3954}, %rd5968;
	}
	shf.r.wrap.b32 	%r3955, %r3954, %r3953, 14;
	shf.r.wrap.b32 	%r3956, %r3953, %r3954, 14;
	mov.b64 	%rd5998, {%r3956, %r3955};
	shf.r.wrap.b32 	%r3957, %r3954, %r3953, 18;
	shf.r.wrap.b32 	%r3958, %r3953, %r3954, 18;
	mov.b64 	%rd5999, {%r3958, %r3957};
	xor.b64  	%rd6000, %rd5998, %rd5999;
	shf.l.wrap.b32 	%r3959, %r3953, %r3954, 23;
	shf.l.wrap.b32 	%r3960, %r3954, %r3953, 23;
	mov.b64 	%rd6001, {%r3960, %r3959};
	xor.b64  	%rd6002, %rd6000, %rd6001;
	add.s64 	%rd6003, %rd5997, %rd6002;
	add.s64 	%rd6004, %rd6003, 2944078676154940804;
	add.s64 	%rd6005, %rd6004, %rd5868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3961,%dummy}, %rd5979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3962}, %rd5979;
	}
	shf.r.wrap.b32 	%r3963, %r3962, %r3961, 28;
	shf.r.wrap.b32 	%r3964, %r3961, %r3962, 28;
	mov.b64 	%rd6006, {%r3964, %r3963};
	shf.l.wrap.b32 	%r3965, %r3961, %r3962, 30;
	shf.l.wrap.b32 	%r3966, %r3962, %r3961, 30;
	mov.b64 	%rd6007, {%r3966, %r3965};
	xor.b64  	%rd6008, %rd6006, %rd6007;
	shf.l.wrap.b32 	%r3967, %r3961, %r3962, 25;
	shf.l.wrap.b32 	%r3968, %r3962, %r3961, 25;
	mov.b64 	%rd6009, {%r3968, %r3967};
	xor.b64  	%rd6010, %rd6008, %rd6009;
	and.b64  	%rd6011, %rd5979, %rd5942;
	or.b64  	%rd6012, %rd5979, %rd5942;
	and.b64  	%rd6013, %rd6012, %rd5905;
	or.b64  	%rd6014, %rd6013, %rd6011;
	add.s64 	%rd6015, %rd6014, %rd6010;
	add.s64 	%rd6016, %rd6015, %rd6004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3969,%dummy}, %rd5955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3970}, %rd5955;
	}
	shf.r.wrap.b32 	%r3971, %r3970, %r3969, 19;
	shf.r.wrap.b32 	%r3972, %r3969, %r3970, 19;
	mov.b64 	%rd6017, {%r3972, %r3971};
	shf.l.wrap.b32 	%r3973, %r3969, %r3970, 3;
	shf.l.wrap.b32 	%r3974, %r3970, %r3969, 3;
	mov.b64 	%rd6018, {%r3974, %r3973};
	xor.b64  	%rd6019, %rd6017, %rd6018;
	shr.u64 	%rd6020, %rd5955, 6;
	xor.b64  	%rd6021, %rd6019, %rd6020;
	shf.r.wrap.b32 	%r3975, %r3632, %r3631, 1;
	shf.r.wrap.b32 	%r3976, %r3631, %r3632, 1;
	mov.b64 	%rd6022, {%r3976, %r3975};
	shf.r.wrap.b32 	%r3977, %r3632, %r3631, 8;
	shf.r.wrap.b32 	%r3978, %r3631, %r3632, 8;
	mov.b64 	%rd6023, {%r3978, %r3977};
	xor.b64  	%rd6024, %rd6022, %rd6023;
	shr.u64 	%rd6025, %rd5474, 7;
	xor.b64  	%rd6026, %rd6024, %rd6025;
	add.s64 	%rd6027, %rd6026, %rd5437;
	add.s64 	%rd6028, %rd6027, %rd5770;
	add.s64 	%rd6029, %rd6028, %rd6021;
	add.s64 	%rd6030, %rd6029, %rd5894;
	xor.b64  	%rd6031, %rd5968, %rd5931;
	and.b64  	%rd6032, %rd6005, %rd6031;
	xor.b64  	%rd6033, %rd6032, %rd5931;
	add.s64 	%rd6034, %rd6030, %rd6033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3979,%dummy}, %rd6005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3980}, %rd6005;
	}
	shf.r.wrap.b32 	%r3981, %r3980, %r3979, 14;
	shf.r.wrap.b32 	%r3982, %r3979, %r3980, 14;
	mov.b64 	%rd6035, {%r3982, %r3981};
	shf.r.wrap.b32 	%r3983, %r3980, %r3979, 18;
	shf.r.wrap.b32 	%r3984, %r3979, %r3980, 18;
	mov.b64 	%rd6036, {%r3984, %r3983};
	xor.b64  	%rd6037, %rd6035, %rd6036;
	shf.l.wrap.b32 	%r3985, %r3979, %r3980, 23;
	shf.l.wrap.b32 	%r3986, %r3980, %r3979, 23;
	mov.b64 	%rd6038, {%r3986, %r3985};
	xor.b64  	%rd6039, %rd6037, %rd6038;
	add.s64 	%rd6040, %rd6034, %rd6039;
	add.s64 	%rd6041, %rd6040, 3659926193048069267;
	add.s64 	%rd6042, %rd6041, %rd5905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3987,%dummy}, %rd6016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3988}, %rd6016;
	}
	shf.r.wrap.b32 	%r3989, %r3988, %r3987, 28;
	shf.r.wrap.b32 	%r3990, %r3987, %r3988, 28;
	mov.b64 	%rd6043, {%r3990, %r3989};
	shf.l.wrap.b32 	%r3991, %r3987, %r3988, 30;
	shf.l.wrap.b32 	%r3992, %r3988, %r3987, 30;
	mov.b64 	%rd6044, {%r3992, %r3991};
	xor.b64  	%rd6045, %rd6043, %rd6044;
	shf.l.wrap.b32 	%r3993, %r3987, %r3988, 25;
	shf.l.wrap.b32 	%r3994, %r3988, %r3987, 25;
	mov.b64 	%rd6046, {%r3994, %r3993};
	xor.b64  	%rd6047, %rd6045, %rd6046;
	and.b64  	%rd6048, %rd6016, %rd5979;
	or.b64  	%rd6049, %rd6016, %rd5979;
	and.b64  	%rd6050, %rd6049, %rd5942;
	or.b64  	%rd6051, %rd6050, %rd6048;
	add.s64 	%rd6052, %rd6051, %rd6047;
	add.s64 	%rd6053, %rd6052, %rd6041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3995,%dummy}, %rd5992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3996}, %rd5992;
	}
	shf.r.wrap.b32 	%r3997, %r3996, %r3995, 19;
	shf.r.wrap.b32 	%r3998, %r3995, %r3996, 19;
	mov.b64 	%rd6054, {%r3998, %r3997};
	shf.l.wrap.b32 	%r3999, %r3995, %r3996, 3;
	shf.l.wrap.b32 	%r4000, %r3996, %r3995, 3;
	mov.b64 	%rd6055, {%r4000, %r3999};
	xor.b64  	%rd6056, %rd6054, %rd6055;
	shr.u64 	%rd6057, %rd5992, 6;
	xor.b64  	%rd6058, %rd6056, %rd6057;
	shf.r.wrap.b32 	%r4001, %r3658, %r3657, 1;
	shf.r.wrap.b32 	%r4002, %r3657, %r3658, 1;
	mov.b64 	%rd6059, {%r4002, %r4001};
	shf.r.wrap.b32 	%r4003, %r3658, %r3657, 8;
	shf.r.wrap.b32 	%r4004, %r3657, %r3658, 8;
	mov.b64 	%rd6060, {%r4004, %r4003};
	xor.b64  	%rd6061, %rd6059, %rd6060;
	shr.u64 	%rd6062, %rd5511, 7;
	xor.b64  	%rd6063, %rd6061, %rd6062;
	add.s64 	%rd6064, %rd6063, %rd5474;
	add.s64 	%rd6065, %rd6064, %rd5807;
	add.s64 	%rd6066, %rd6065, %rd6058;
	add.s64 	%rd6067, %rd6066, %rd5931;
	xor.b64  	%rd6068, %rd6005, %rd5968;
	and.b64  	%rd6069, %rd6042, %rd6068;
	xor.b64  	%rd6070, %rd6069, %rd5968;
	add.s64 	%rd6071, %rd6067, %rd6070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd6042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd6042;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 14;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 14;
	mov.b64 	%rd6072, {%r4008, %r4007};
	shf.r.wrap.b32 	%r4009, %r4006, %r4005, 18;
	shf.r.wrap.b32 	%r4010, %r4005, %r4006, 18;
	mov.b64 	%rd6073, {%r4010, %r4009};
	xor.b64  	%rd6074, %rd6072, %rd6073;
	shf.l.wrap.b32 	%r4011, %r4005, %r4006, 23;
	shf.l.wrap.b32 	%r4012, %r4006, %r4005, 23;
	mov.b64 	%rd6075, {%r4012, %r4011};
	xor.b64  	%rd6076, %rd6074, %rd6075;
	add.s64 	%rd6077, %rd6071, %rd6076;
	add.s64 	%rd6078, %rd6077, 4368137639120453308;
	add.s64 	%rd6079, %rd6078, %rd5942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4013,%dummy}, %rd6053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4014}, %rd6053;
	}
	shf.r.wrap.b32 	%r4015, %r4014, %r4013, 28;
	shf.r.wrap.b32 	%r4016, %r4013, %r4014, 28;
	mov.b64 	%rd6080, {%r4016, %r4015};
	shf.l.wrap.b32 	%r4017, %r4013, %r4014, 30;
	shf.l.wrap.b32 	%r4018, %r4014, %r4013, 30;
	mov.b64 	%rd6081, {%r4018, %r4017};
	xor.b64  	%rd6082, %rd6080, %rd6081;
	shf.l.wrap.b32 	%r4019, %r4013, %r4014, 25;
	shf.l.wrap.b32 	%r4020, %r4014, %r4013, 25;
	mov.b64 	%rd6083, {%r4020, %r4019};
	xor.b64  	%rd6084, %rd6082, %rd6083;
	and.b64  	%rd6085, %rd6053, %rd6016;
	or.b64  	%rd6086, %rd6053, %rd6016;
	and.b64  	%rd6087, %rd6086, %rd5979;
	or.b64  	%rd6088, %rd6087, %rd6085;
	add.s64 	%rd6089, %rd6088, %rd6084;
	add.s64 	%rd6090, %rd6089, %rd6078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4021,%dummy}, %rd6029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4022}, %rd6029;
	}
	shf.r.wrap.b32 	%r4023, %r4022, %r4021, 19;
	shf.r.wrap.b32 	%r4024, %r4021, %r4022, 19;
	mov.b64 	%rd6091, {%r4024, %r4023};
	shf.l.wrap.b32 	%r4025, %r4021, %r4022, 3;
	shf.l.wrap.b32 	%r4026, %r4022, %r4021, 3;
	mov.b64 	%rd6092, {%r4026, %r4025};
	xor.b64  	%rd6093, %rd6091, %rd6092;
	shr.u64 	%rd6094, %rd6029, 6;
	xor.b64  	%rd6095, %rd6093, %rd6094;
	shf.r.wrap.b32 	%r4027, %r3684, %r3683, 1;
	shf.r.wrap.b32 	%r4028, %r3683, %r3684, 1;
	mov.b64 	%rd6096, {%r4028, %r4027};
	shf.r.wrap.b32 	%r4029, %r3684, %r3683, 8;
	shf.r.wrap.b32 	%r4030, %r3683, %r3684, 8;
	mov.b64 	%rd6097, {%r4030, %r4029};
	xor.b64  	%rd6098, %rd6096, %rd6097;
	shr.u64 	%rd6099, %rd5548, 7;
	xor.b64  	%rd6100, %rd6098, %rd6099;
	add.s64 	%rd6101, %rd6100, %rd5511;
	add.s64 	%rd6102, %rd6101, %rd5844;
	add.s64 	%rd6103, %rd6102, %rd6095;
	add.s64 	%rd6104, %rd6103, %rd5968;
	xor.b64  	%rd6105, %rd6042, %rd6005;
	and.b64  	%rd6106, %rd6079, %rd6105;
	xor.b64  	%rd6107, %rd6106, %rd6005;
	add.s64 	%rd6108, %rd6104, %rd6107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4031,%dummy}, %rd6079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4032}, %rd6079;
	}
	shf.r.wrap.b32 	%r4033, %r4032, %r4031, 14;
	shf.r.wrap.b32 	%r4034, %r4031, %r4032, 14;
	mov.b64 	%rd6109, {%r4034, %r4033};
	shf.r.wrap.b32 	%r4035, %r4032, %r4031, 18;
	shf.r.wrap.b32 	%r4036, %r4031, %r4032, 18;
	mov.b64 	%rd6110, {%r4036, %r4035};
	xor.b64  	%rd6111, %rd6109, %rd6110;
	shf.l.wrap.b32 	%r4037, %r4031, %r4032, 23;
	shf.l.wrap.b32 	%r4038, %r4032, %r4031, 23;
	mov.b64 	%rd6112, {%r4038, %r4037};
	xor.b64  	%rd6113, %rd6111, %rd6112;
	add.s64 	%rd6114, %rd6108, %rd6113;
	add.s64 	%rd6115, %rd6114, 4836135668995329356;
	add.s64 	%rd6116, %rd6115, %rd5979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4039,%dummy}, %rd6090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4040}, %rd6090;
	}
	shf.r.wrap.b32 	%r4041, %r4040, %r4039, 28;
	shf.r.wrap.b32 	%r4042, %r4039, %r4040, 28;
	mov.b64 	%rd6117, {%r4042, %r4041};
	shf.l.wrap.b32 	%r4043, %r4039, %r4040, 30;
	shf.l.wrap.b32 	%r4044, %r4040, %r4039, 30;
	mov.b64 	%rd6118, {%r4044, %r4043};
	xor.b64  	%rd6119, %rd6117, %rd6118;
	shf.l.wrap.b32 	%r4045, %r4039, %r4040, 25;
	shf.l.wrap.b32 	%r4046, %r4040, %r4039, 25;
	mov.b64 	%rd6120, {%r4046, %r4045};
	xor.b64  	%rd6121, %rd6119, %rd6120;
	and.b64  	%rd6122, %rd6090, %rd6053;
	or.b64  	%rd6123, %rd6090, %rd6053;
	and.b64  	%rd6124, %rd6123, %rd6016;
	or.b64  	%rd6125, %rd6124, %rd6122;
	add.s64 	%rd6126, %rd6125, %rd6121;
	add.s64 	%rd6127, %rd6126, %rd6115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4047,%dummy}, %rd6066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4048}, %rd6066;
	}
	shf.r.wrap.b32 	%r4049, %r4048, %r4047, 19;
	shf.r.wrap.b32 	%r4050, %r4047, %r4048, 19;
	mov.b64 	%rd6128, {%r4050, %r4049};
	shf.l.wrap.b32 	%r4051, %r4047, %r4048, 3;
	shf.l.wrap.b32 	%r4052, %r4048, %r4047, 3;
	mov.b64 	%rd6129, {%r4052, %r4051};
	xor.b64  	%rd6130, %rd6128, %rd6129;
	shr.u64 	%rd6131, %rd6066, 6;
	xor.b64  	%rd6132, %rd6130, %rd6131;
	shf.r.wrap.b32 	%r4053, %r3710, %r3709, 1;
	shf.r.wrap.b32 	%r4054, %r3709, %r3710, 1;
	mov.b64 	%rd6133, {%r4054, %r4053};
	shf.r.wrap.b32 	%r4055, %r3710, %r3709, 8;
	shf.r.wrap.b32 	%r4056, %r3709, %r3710, 8;
	mov.b64 	%rd6134, {%r4056, %r4055};
	xor.b64  	%rd6135, %rd6133, %rd6134;
	shr.u64 	%rd6136, %rd5585, 7;
	xor.b64  	%rd6137, %rd6135, %rd6136;
	add.s64 	%rd6138, %rd6137, %rd5548;
	add.s64 	%rd6139, %rd6138, %rd5881;
	add.s64 	%rd6140, %rd6139, %rd6132;
	add.s64 	%rd6141, %rd6140, %rd6005;
	xor.b64  	%rd6142, %rd6079, %rd6042;
	and.b64  	%rd6143, %rd6116, %rd6142;
	xor.b64  	%rd6144, %rd6143, %rd6042;
	add.s64 	%rd6145, %rd6141, %rd6144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4057,%dummy}, %rd6116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4058}, %rd6116;
	}
	shf.r.wrap.b32 	%r4059, %r4058, %r4057, 14;
	shf.r.wrap.b32 	%r4060, %r4057, %r4058, 14;
	mov.b64 	%rd6146, {%r4060, %r4059};
	shf.r.wrap.b32 	%r4061, %r4058, %r4057, 18;
	shf.r.wrap.b32 	%r4062, %r4057, %r4058, 18;
	mov.b64 	%rd6147, {%r4062, %r4061};
	xor.b64  	%rd6148, %rd6146, %rd6147;
	shf.l.wrap.b32 	%r4063, %r4057, %r4058, 23;
	shf.l.wrap.b32 	%r4064, %r4058, %r4057, 23;
	mov.b64 	%rd6149, {%r4064, %r4063};
	xor.b64  	%rd6150, %rd6148, %rd6149;
	add.s64 	%rd6151, %rd6145, %rd6150;
	add.s64 	%rd6152, %rd6151, 5532061633213252278;
	add.s64 	%rd6153, %rd6152, %rd6016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4065,%dummy}, %rd6127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4066}, %rd6127;
	}
	shf.r.wrap.b32 	%r4067, %r4066, %r4065, 28;
	shf.r.wrap.b32 	%r4068, %r4065, %r4066, 28;
	mov.b64 	%rd6154, {%r4068, %r4067};
	shf.l.wrap.b32 	%r4069, %r4065, %r4066, 30;
	shf.l.wrap.b32 	%r4070, %r4066, %r4065, 30;
	mov.b64 	%rd6155, {%r4070, %r4069};
	xor.b64  	%rd6156, %rd6154, %rd6155;
	shf.l.wrap.b32 	%r4071, %r4065, %r4066, 25;
	shf.l.wrap.b32 	%r4072, %r4066, %r4065, 25;
	mov.b64 	%rd6157, {%r4072, %r4071};
	xor.b64  	%rd6158, %rd6156, %rd6157;
	and.b64  	%rd6159, %rd6127, %rd6090;
	or.b64  	%rd6160, %rd6127, %rd6090;
	and.b64  	%rd6161, %rd6160, %rd6053;
	or.b64  	%rd6162, %rd6161, %rd6159;
	add.s64 	%rd6163, %rd6162, %rd6158;
	add.s64 	%rd6164, %rd6163, %rd6152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4073,%dummy}, %rd6103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4074}, %rd6103;
	}
	shf.r.wrap.b32 	%r4075, %r4074, %r4073, 19;
	shf.r.wrap.b32 	%r4076, %r4073, %r4074, 19;
	mov.b64 	%rd6165, {%r4076, %r4075};
	shf.l.wrap.b32 	%r4077, %r4073, %r4074, 3;
	shf.l.wrap.b32 	%r4078, %r4074, %r4073, 3;
	mov.b64 	%rd6166, {%r4078, %r4077};
	xor.b64  	%rd6167, %rd6165, %rd6166;
	shr.u64 	%rd6168, %rd6103, 6;
	xor.b64  	%rd6169, %rd6167, %rd6168;
	shf.r.wrap.b32 	%r4079, %r3736, %r3735, 1;
	shf.r.wrap.b32 	%r4080, %r3735, %r3736, 1;
	mov.b64 	%rd6170, {%r4080, %r4079};
	shf.r.wrap.b32 	%r4081, %r3736, %r3735, 8;
	shf.r.wrap.b32 	%r4082, %r3735, %r3736, 8;
	mov.b64 	%rd6171, {%r4082, %r4081};
	xor.b64  	%rd6172, %rd6170, %rd6171;
	shr.u64 	%rd6173, %rd5622, 7;
	xor.b64  	%rd6174, %rd6172, %rd6173;
	add.s64 	%rd6175, %rd6174, %rd5585;
	add.s64 	%rd6176, %rd6175, %rd5918;
	add.s64 	%rd6177, %rd6176, %rd6169;
	add.s64 	%rd6178, %rd6177, %rd6042;
	xor.b64  	%rd6179, %rd6116, %rd6079;
	and.b64  	%rd6180, %rd6153, %rd6179;
	xor.b64  	%rd6181, %rd6180, %rd6079;
	add.s64 	%rd6182, %rd6178, %rd6181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4083,%dummy}, %rd6153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4084}, %rd6153;
	}
	shf.r.wrap.b32 	%r4085, %r4084, %r4083, 14;
	shf.r.wrap.b32 	%r4086, %r4083, %r4084, 14;
	mov.b64 	%rd6183, {%r4086, %r4085};
	shf.r.wrap.b32 	%r4087, %r4084, %r4083, 18;
	shf.r.wrap.b32 	%r4088, %r4083, %r4084, 18;
	mov.b64 	%rd6184, {%r4088, %r4087};
	xor.b64  	%rd6185, %rd6183, %rd6184;
	shf.l.wrap.b32 	%r4089, %r4083, %r4084, 23;
	shf.l.wrap.b32 	%r4090, %r4084, %r4083, 23;
	mov.b64 	%rd6186, {%r4090, %r4089};
	xor.b64  	%rd6187, %rd6185, %rd6186;
	add.s64 	%rd6188, %rd6182, %rd6187;
	add.s64 	%rd6189, %rd6188, 6448918945643986474;
	add.s64 	%rd6190, %rd6189, %rd6053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4091,%dummy}, %rd6164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4092}, %rd6164;
	}
	shf.r.wrap.b32 	%r4093, %r4092, %r4091, 28;
	shf.r.wrap.b32 	%r4094, %r4091, %r4092, 28;
	mov.b64 	%rd6191, {%r4094, %r4093};
	shf.l.wrap.b32 	%r4095, %r4091, %r4092, 30;
	shf.l.wrap.b32 	%r4096, %r4092, %r4091, 30;
	mov.b64 	%rd6192, {%r4096, %r4095};
	xor.b64  	%rd6193, %rd6191, %rd6192;
	shf.l.wrap.b32 	%r4097, %r4091, %r4092, 25;
	shf.l.wrap.b32 	%r4098, %r4092, %r4091, 25;
	mov.b64 	%rd6194, {%r4098, %r4097};
	xor.b64  	%rd6195, %rd6193, %rd6194;
	and.b64  	%rd6196, %rd6164, %rd6127;
	or.b64  	%rd6197, %rd6164, %rd6127;
	and.b64  	%rd6198, %rd6197, %rd6090;
	or.b64  	%rd6199, %rd6198, %rd6196;
	add.s64 	%rd6200, %rd6199, %rd6195;
	add.s64 	%rd6201, %rd6200, %rd6189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4099,%dummy}, %rd6140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4100}, %rd6140;
	}
	shf.r.wrap.b32 	%r4101, %r4100, %r4099, 19;
	shf.r.wrap.b32 	%r4102, %r4099, %r4100, 19;
	mov.b64 	%rd6202, {%r4102, %r4101};
	shf.l.wrap.b32 	%r4103, %r4099, %r4100, 3;
	shf.l.wrap.b32 	%r4104, %r4100, %r4099, 3;
	mov.b64 	%rd6203, {%r4104, %r4103};
	xor.b64  	%rd6204, %rd6202, %rd6203;
	shr.u64 	%rd6205, %rd6140, 6;
	xor.b64  	%rd6206, %rd6204, %rd6205;
	shf.r.wrap.b32 	%r4105, %r3762, %r3761, 1;
	shf.r.wrap.b32 	%r4106, %r3761, %r3762, 1;
	mov.b64 	%rd6207, {%r4106, %r4105};
	shf.r.wrap.b32 	%r4107, %r3762, %r3761, 8;
	shf.r.wrap.b32 	%r4108, %r3761, %r3762, 8;
	mov.b64 	%rd6208, {%r4108, %r4107};
	xor.b64  	%rd6209, %rd6207, %rd6208;
	shr.u64 	%rd6210, %rd5659, 7;
	xor.b64  	%rd6211, %rd6209, %rd6210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4109,%dummy}, %rd6190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4110}, %rd6190;
	}
	shf.r.wrap.b32 	%r4111, %r4110, %r4109, 14;
	shf.r.wrap.b32 	%r4112, %r4109, %r4110, 14;
	mov.b64 	%rd6212, {%r4112, %r4111};
	shf.r.wrap.b32 	%r4113, %r4110, %r4109, 18;
	shf.r.wrap.b32 	%r4114, %r4109, %r4110, 18;
	mov.b64 	%rd6213, {%r4114, %r4113};
	xor.b64  	%rd6214, %rd6212, %rd6213;
	shf.l.wrap.b32 	%r4115, %r4109, %r4110, 23;
	shf.l.wrap.b32 	%r4116, %r4110, %r4109, 23;
	mov.b64 	%rd6215, {%r4116, %r4115};
	xor.b64  	%rd6216, %rd6214, %rd6215;
	xor.b64  	%rd6217, %rd6153, %rd6116;
	and.b64  	%rd6218, %rd6190, %rd6217;
	xor.b64  	%rd6219, %rd6218, %rd6116;
	add.s64 	%rd6220, %rd5622, %rd6211;
	add.s64 	%rd6221, %rd6220, %rd5955;
	add.s64 	%rd6222, %rd6221, %rd6206;
	add.s64 	%rd6223, %rd6222, %rd6079;
	add.s64 	%rd6224, %rd6223, %rd6219;
	add.s64 	%rd6225, %rd6224, %rd6216;
	add.s64 	%rd6226, %rd6225, 6902733635092675308;
	add.s64 	%rd6227, %rd6226, %rd6090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4117,%dummy}, %rd6201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4118}, %rd6201;
	}
	shf.r.wrap.b32 	%r4119, %r4118, %r4117, 28;
	shf.r.wrap.b32 	%r4120, %r4117, %r4118, 28;
	mov.b64 	%rd6228, {%r4120, %r4119};
	shf.l.wrap.b32 	%r4121, %r4117, %r4118, 30;
	shf.l.wrap.b32 	%r4122, %r4118, %r4117, 30;
	mov.b64 	%rd6229, {%r4122, %r4121};
	xor.b64  	%rd6230, %rd6228, %rd6229;
	shf.l.wrap.b32 	%r4123, %r4117, %r4118, 25;
	shf.l.wrap.b32 	%r4124, %r4118, %r4117, 25;
	mov.b64 	%rd6231, {%r4124, %r4123};
	xor.b64  	%rd6232, %rd6230, %rd6231;
	and.b64  	%rd6233, %rd6201, %rd6164;
	or.b64  	%rd6234, %rd6201, %rd6164;
	and.b64  	%rd6235, %rd6234, %rd6127;
	or.b64  	%rd6236, %rd6235, %rd6233;
	add.s64 	%rd6237, %rd6236, %rd6232;
	add.s64 	%rd6238, %rd6237, %rd6226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd6177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd6177;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 19;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 19;
	mov.b64 	%rd6239, {%r4128, %r4127};
	shf.l.wrap.b32 	%r4129, %r4125, %r4126, 3;
	shf.l.wrap.b32 	%r4130, %r4126, %r4125, 3;
	mov.b64 	%rd6240, {%r4130, %r4129};
	xor.b64  	%rd6241, %rd6239, %rd6240;
	shr.u64 	%rd6242, %rd6177, 6;
	xor.b64  	%rd6243, %rd6241, %rd6242;
	shf.r.wrap.b32 	%r4131, %r3788, %r3787, 1;
	shf.r.wrap.b32 	%r4132, %r3787, %r3788, 1;
	mov.b64 	%rd6244, {%r4132, %r4131};
	shf.r.wrap.b32 	%r4133, %r3788, %r3787, 8;
	shf.r.wrap.b32 	%r4134, %r3787, %r3788, 8;
	mov.b64 	%rd6245, {%r4134, %r4133};
	xor.b64  	%rd6246, %rd6244, %rd6245;
	shr.u64 	%rd6247, %rd5696, 7;
	xor.b64  	%rd6248, %rd6246, %rd6247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4135,%dummy}, %rd6227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4136}, %rd6227;
	}
	shf.r.wrap.b32 	%r4137, %r4136, %r4135, 14;
	shf.r.wrap.b32 	%r4138, %r4135, %r4136, 14;
	mov.b64 	%rd6249, {%r4138, %r4137};
	shf.r.wrap.b32 	%r4139, %r4136, %r4135, 18;
	shf.r.wrap.b32 	%r4140, %r4135, %r4136, 18;
	mov.b64 	%rd6250, {%r4140, %r4139};
	xor.b64  	%rd6251, %rd6249, %rd6250;
	shf.l.wrap.b32 	%r4141, %r4135, %r4136, 23;
	shf.l.wrap.b32 	%r4142, %r4136, %r4135, 23;
	mov.b64 	%rd6252, {%r4142, %r4141};
	xor.b64  	%rd6253, %rd6251, %rd6252;
	xor.b64  	%rd6254, %rd6190, %rd6153;
	and.b64  	%rd6255, %rd6227, %rd6254;
	xor.b64  	%rd6256, %rd6255, %rd6153;
	add.s64 	%rd6257, %rd5659, %rd6248;
	add.s64 	%rd6258, %rd6257, %rd5992;
	add.s64 	%rd6259, %rd6258, %rd6243;
	add.s64 	%rd6260, %rd6259, %rd6116;
	add.s64 	%rd6261, %rd6260, %rd6256;
	add.s64 	%rd6262, %rd6261, %rd6253;
	add.s64 	%rd6263, %rd6262, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4143,%dummy}, %rd6238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4144}, %rd6238;
	}
	shf.r.wrap.b32 	%r4145, %r4144, %r4143, 28;
	shf.r.wrap.b32 	%r4146, %r4143, %r4144, 28;
	mov.b64 	%rd6264, {%r4146, %r4145};
	shf.l.wrap.b32 	%r4147, %r4143, %r4144, 30;
	shf.l.wrap.b32 	%r4148, %r4144, %r4143, 30;
	mov.b64 	%rd6265, {%r4148, %r4147};
	xor.b64  	%rd6266, %rd6264, %rd6265;
	shf.l.wrap.b32 	%r4149, %r4143, %r4144, 25;
	shf.l.wrap.b32 	%r4150, %r4144, %r4143, 25;
	mov.b64 	%rd6267, {%r4150, %r4149};
	xor.b64  	%rd6268, %rd6266, %rd6267;
	and.b64  	%rd6269, %rd6238, %rd6201;
	or.b64  	%rd6270, %rd6238, %rd6201;
	and.b64  	%rd6271, %rd6270, %rd6164;
	or.b64  	%rd6272, %rd6271, %rd6269;
	add.s64 	%rd6273, %rd6268, %rd3534;
	add.s64 	%rd6274, %rd6273, %rd6272;
	add.s64 	%rd6275, %rd6274, %rd6263;
	st.local.u64 	[%rd2+8], %rd6275;
	add.s64 	%rd6276, %rd6238, %rd3540;
	st.local.u64 	[%rd2+16], %rd6276;
	add.s64 	%rd6277, %rd6201, %rd3543;
	st.local.u64 	[%rd2+24], %rd6277;
	add.s64 	%rd6278, %rd6164, %rd3532;
	st.local.u64 	[%rd2+32], %rd6278;
	add.s64 	%rd6279, %rd6127, %rd3518;
	add.s64 	%rd6280, %rd6279, %rd6263;
	st.local.u64 	[%rd2+40], %rd6280;
	add.s64 	%rd6281, %rd6227, %rd3526;
	st.local.u64 	[%rd2+48], %rd6281;
	add.s64 	%rd6282, %rd6190, %rd3525;
	st.local.u64 	[%rd2+56], %rd6282;
	add.s64 	%rd6283, %rd6153, %rd3516;
	st.local.u64 	[%rd2+64], %rd6283;
	add.s64 	%rd6328, %rd6328, 128;
	add.s64 	%rd6311, %rd6311, 128;
	add.s32 	%r4159, %r4159, -128;
	setp.gt.u32 	%p13, %r4159, 127;
	@%p13 bra 	$L__BB1_13;

$L__BB1_17:
	setp.eq.s32 	%p14, %r4159, 0;
	@%p14 bra 	$L__BB1_23;

	cvt.u64.u32 	%rd6284, %r4156;
	add.s64 	%rd6285, %rd2, %rd6284;
	add.s64 	%rd6333, %rd6285, 72;
	and.b32  	%r4161, %r4159, 3;
	setp.eq.s32 	%p15, %r4161, 0;
	mov.u32 	%r4162, %r4159;
	@%p15 bra 	$L__BB1_21;

	mov.u64 	%rd6329, %rd6333;
	mov.u64 	%rd6330, %rd6328;
	mov.u32 	%r4162, %r4159;

$L__BB1_20:
	.pragma "nounroll";
	add.s32 	%r4162, %r4162, -1;
	add.s64 	%rd6328, %rd6330, 1;
	ld.local.u8 	%rs6, [%rd6330];
	add.s64 	%rd6333, %rd6329, 1;
	st.local.u8 	[%rd6329], %rs6;
	add.s32 	%r4161, %r4161, -1;
	setp.ne.s32 	%p16, %r4161, 0;
	mov.u64 	%rd6329, %rd6333;
	mov.u64 	%rd6330, %rd6328;
	@%p16 bra 	$L__BB1_20;

$L__BB1_21:
	add.s32 	%r4151, %r4159, -1;
	setp.lt.u32 	%p17, %r4151, 3;
	@%p17 bra 	$L__BB1_23;

$L__BB1_22:
	ld.local.u8 	%rs7, [%rd6328];
	st.local.u8 	[%rd6333], %rs7;
	ld.local.u8 	%rs8, [%rd6328+1];
	st.local.u8 	[%rd6333+1], %rs8;
	ld.local.u8 	%rs9, [%rd6328+2];
	st.local.u8 	[%rd6333+2], %rs9;
	add.s64 	%rd130, %rd6328, 4;
	ld.local.u8 	%rs10, [%rd6328+3];
	add.s64 	%rd131, %rd6333, 4;
	st.local.u8 	[%rd6333+3], %rs10;
	add.s32 	%r4162, %r4162, -4;
	setp.ne.s32 	%p18, %r4162, 0;
	mov.u64 	%rd6333, %rd131;
	mov.u64 	%rd6328, %rd130;
	@%p18 bra 	$L__BB1_22;

$L__BB1_23:
	ret;

}
	// .globl	loop_sha512
.entry loop_sha512(
	.param .u64 .ptr .global .align 8 loop_sha512_param_0,
	.param .u32 loop_sha512_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<1133>;
	.reg .b64 	%rd<1629>;


	ld.param.u64 	%rd116, [loop_sha512_param_0];
	ld.param.u32 	%r5, [loop_sha512_param_1];
	mov.b32 	%r6, %envreg3;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r10, %r9, %r6;
	mad.lo.s32 	%r11, %r8, %r7, %r10;
	mul.wide.u32 	%rd117, %r11, 64;
	add.s64 	%rd1, %rd116, %rd117;
	ld.global.u64 	%rd1628, [%rd1];
	ld.global.u64 	%rd1627, [%rd1+8];
	ld.global.u64 	%rd1626, [%rd1+16];
	ld.global.u64 	%rd1625, [%rd1+24];
	ld.global.u64 	%rd1624, [%rd1+32];
	ld.global.u64 	%rd1623, [%rd1+40];
	ld.global.u64 	%rd1622, [%rd1+48];
	ld.global.u64 	%rd1621, [%rd1+56];
	setp.eq.s32 	%p1, %r5, 0;
	@%p1 bra 	$L__BB2_5;

	mov.u64 	%rd118, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14}, %rd118;
	}
	shf.r.wrap.b32 	%r15, %r14, %r13, 14;
	shf.r.wrap.b32 	%r16, %r13, %r14, 14;
	mov.b64 	%rd119, {%r16, %r15};
	shf.r.wrap.b32 	%r17, %r14, %r13, 18;
	shf.r.wrap.b32 	%r18, %r13, %r14, 18;
	mov.b64 	%rd120, {%r18, %r17};
	xor.b64  	%rd121, %rd119, %rd120;
	shf.l.wrap.b32 	%r19, %r13, %r14, 23;
	shf.l.wrap.b32 	%r20, %r14, %r13, 23;
	mov.b64 	%rd122, {%r20, %r19};
	xor.b64  	%rd123, %rd121, %rd122;
	add.s64 	%rd10, %rd123, -7031530027109396581;
	mov.u64 	%rd124, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r21}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r22,%dummy}, %rd124;
	}
	shf.l.wrap.b32 	%r23, %r22, %r21, 30;
	shf.l.wrap.b32 	%r24, %r21, %r22, 30;
	mov.b64 	%rd125, {%r24, %r23};
	shf.r.wrap.b32 	%r25, %r21, %r22, 28;
	shf.r.wrap.b32 	%r26, %r22, %r21, 28;
	mov.b64 	%rd126, {%r26, %r25};
	xor.b64  	%rd127, %rd126, %rd125;
	shf.l.wrap.b32 	%r27, %r22, %r21, 25;
	shf.l.wrap.b32 	%r28, %r21, %r22, 25;
	mov.b64 	%rd128, {%r28, %r27};
	xor.b64  	%rd129, %rd127, %rd128;
	add.s64 	%rd11, %rd129, 6482280703085258342;
	mov.u64 	%rd130, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r30,%dummy}, %rd130;
	}
	shf.l.wrap.b32 	%r31, %r30, %r29, 3;
	shf.l.wrap.b32 	%r32, %r29, %r30, 3;
	mov.b64 	%rd131, {%r32, %r31};
	shf.r.wrap.b32 	%r33, %r29, %r30, 19;
	shf.r.wrap.b32 	%r34, %r30, %r29, 19;
	mov.b64 	%rd132, {%r34, %r33};
	xor.b64  	%rd12, %rd132, %rd131;
	shf.r.wrap.b32 	%r35, %r29, %r30, 8;
	shf.r.wrap.b32 	%r36, %r30, %r29, 8;
	mov.b64 	%rd133, {%r36, %r35};
	shf.r.wrap.b32 	%r37, %r29, %r30, 1;
	shf.r.wrap.b32 	%r38, %r30, %r29, 1;
	mov.b64 	%rd134, {%r38, %r37};
	xor.b64  	%rd13, %rd134, %rd133;
	mov.u64 	%rd135, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39}, %rd135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r40,%dummy}, %rd135;
	}
	shf.l.wrap.b32 	%r41, %r40, %r39, 3;
	shf.l.wrap.b32 	%r42, %r39, %r40, 3;
	mov.b64 	%rd136, {%r42, %r41};
	shf.r.wrap.b32 	%r43, %r39, %r40, 19;
	shf.r.wrap.b32 	%r44, %r40, %r39, 19;
	mov.b64 	%rd137, {%r44, %r43};
	xor.b64  	%rd138, %rd137, %rd136;
	xor.b64  	%rd14, %rd138, 8;
	mov.u64 	%rd139, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r45,%dummy}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r46}, %rd139;
	}
	shf.r.wrap.b32 	%r47, %r46, %r45, 8;
	shf.r.wrap.b32 	%r48, %r45, %r46, 8;
	mov.b64 	%rd140, {%r48, %r47};
	shf.r.wrap.b32 	%r49, %r46, %r45, 1;
	shf.r.wrap.b32 	%r50, %r45, %r46, 1;
	mov.b64 	%rd141, {%r50, %r49};
	xor.b64  	%rd142, %rd141, %rd140;
	xor.b64  	%rd15, %rd142, 72057594037927936;
	xor.b64  	%rd16, %rd13, -9223372036854775808;
	shf.r.wrap.b32 	%r51, %r39, %r40, 8;
	shf.r.wrap.b32 	%r52, %r40, %r39, 8;
	mov.b64 	%rd143, {%r52, %r51};
	shf.r.wrap.b32 	%r53, %r39, %r40, 1;
	shf.r.wrap.b32 	%r54, %r40, %r39, 1;
	mov.b64 	%rd144, {%r54, %r53};
	xor.b64  	%rd145, %rd144, %rd143;
	xor.b64  	%rd17, %rd145, 4;
	mov.u32 	%r1131, 0;

$L__BB2_2:
	add.s64 	%rd147, %rd10, %rd1628;
	add.s64 	%rd148, %rd147, -4263291710961585108;
	add.s64 	%rd149, %rd11, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r56,%dummy}, %rd148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r57}, %rd148;
	}
	shf.r.wrap.b32 	%r58, %r57, %r56, 14;
	shf.r.wrap.b32 	%r59, %r56, %r57, 14;
	mov.b64 	%rd150, {%r59, %r58};
	shf.r.wrap.b32 	%r60, %r57, %r56, 18;
	shf.r.wrap.b32 	%r61, %r56, %r57, 18;
	mov.b64 	%rd151, {%r61, %r60};
	xor.b64  	%rd152, %rd150, %rd151;
	shf.l.wrap.b32 	%r62, %r56, %r57, 23;
	shf.l.wrap.b32 	%r63, %r57, %r56, 23;
	mov.b64 	%rd153, {%r63, %r62};
	xor.b64  	%rd154, %rd152, %rd153;
	and.b64  	%rd155, %rd148, -3887949035690463538;
	xor.b64  	%rd156, %rd155, -7276294671716946913;
	add.s64 	%rd157, %rd1627, %rd156;
	add.s64 	%rd158, %rd157, %rd154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd149;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 28;
	shf.r.wrap.b32 	%r67, %r64, %r65, 28;
	mov.b64 	%rd159, {%r67, %r66};
	shf.l.wrap.b32 	%r68, %r64, %r65, 30;
	shf.l.wrap.b32 	%r69, %r65, %r64, 30;
	mov.b64 	%rd160, {%r69, %r68};
	xor.b64  	%rd161, %rd159, %rd160;
	shf.l.wrap.b32 	%r70, %r64, %r65, 25;
	shf.l.wrap.b32 	%r71, %r65, %r64, 25;
	mov.b64 	%rd162, {%r71, %r70};
	xor.b64  	%rd163, %rd161, %rd162;
	and.b64  	%rd164, %rd149, -3355664534840381901;
	or.b64  	%rd165, %rd164, 3026882967131160840;
	add.s64 	%rd166, %rd165, %rd163;
	add.s64 	%rd167, %rd166, %rd158;
	add.s64 	%rd168, %rd158, -3663095898801038493;
	add.s64 	%rd169, %rd167, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd168;
	}
	shf.r.wrap.b32 	%r74, %r73, %r72, 14;
	shf.r.wrap.b32 	%r75, %r72, %r73, 14;
	mov.b64 	%rd170, {%r75, %r74};
	shf.r.wrap.b32 	%r76, %r73, %r72, 18;
	shf.r.wrap.b32 	%r77, %r72, %r73, 18;
	mov.b64 	%rd171, {%r77, %r76};
	xor.b64  	%rd172, %rd170, %rd171;
	shf.l.wrap.b32 	%r78, %r72, %r73, 23;
	shf.l.wrap.b32 	%r79, %r73, %r72, 23;
	mov.b64 	%rd173, {%r79, %r78};
	xor.b64  	%rd174, %rd172, %rd173;
	xor.b64  	%rd175, %rd148, 5840696475078001361;
	and.b64  	%rd176, %rd168, %rd175;
	xor.b64  	%rd177, %rd176, 5840696475078001361;
	add.s64 	%rd178, %rd1626, %rd177;
	add.s64 	%rd179, %rd178, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd169;
	}
	shf.r.wrap.b32 	%r82, %r81, %r80, 28;
	shf.r.wrap.b32 	%r83, %r80, %r81, 28;
	mov.b64 	%rd180, {%r83, %r82};
	shf.l.wrap.b32 	%r84, %r80, %r81, 30;
	shf.l.wrap.b32 	%r85, %r81, %r80, 30;
	mov.b64 	%rd181, {%r85, %r84};
	xor.b64  	%rd182, %rd180, %rd181;
	shf.l.wrap.b32 	%r86, %r80, %r81, 25;
	shf.l.wrap.b32 	%r87, %r81, %r80, 25;
	mov.b64 	%rd183, {%r87, %r86};
	xor.b64  	%rd184, %rd182, %rd183;
	and.b64  	%rd185, %rd169, %rd149;
	or.b64  	%rd186, %rd169, %rd149;
	and.b64  	%rd187, %rd186, 7640891576956012808;
	or.b64  	%rd188, %rd187, %rd185;
	add.s64 	%rd189, %rd188, %rd184;
	add.s64 	%rd190, %rd189, %rd179;
	add.s64 	%rd191, %rd179, 877659737583668873;
	add.s64 	%rd192, %rd190, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd191;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 14;
	shf.r.wrap.b32 	%r91, %r88, %r89, 14;
	mov.b64 	%rd193, {%r91, %r90};
	shf.r.wrap.b32 	%r92, %r89, %r88, 18;
	shf.r.wrap.b32 	%r93, %r88, %r89, 18;
	mov.b64 	%rd194, {%r93, %r92};
	xor.b64  	%rd195, %rd193, %rd194;
	shf.l.wrap.b32 	%r94, %r88, %r89, 23;
	shf.l.wrap.b32 	%r95, %r89, %r88, 23;
	mov.b64 	%rd196, {%r95, %r94};
	xor.b64  	%rd197, %rd195, %rd196;
	xor.b64  	%rd198, %rd168, %rd148;
	and.b64  	%rd199, %rd191, %rd198;
	xor.b64  	%rd200, %rd199, %rd148;
	add.s64 	%rd201, %rd1625, %rd200;
	add.s64 	%rd202, %rd201, %rd197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r96,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r97}, %rd192;
	}
	shf.r.wrap.b32 	%r98, %r97, %r96, 28;
	shf.r.wrap.b32 	%r99, %r96, %r97, 28;
	mov.b64 	%rd203, {%r99, %r98};
	shf.l.wrap.b32 	%r100, %r96, %r97, 30;
	shf.l.wrap.b32 	%r101, %r97, %r96, 30;
	mov.b64 	%rd204, {%r101, %r100};
	xor.b64  	%rd205, %rd203, %rd204;
	shf.l.wrap.b32 	%r102, %r96, %r97, 25;
	shf.l.wrap.b32 	%r103, %r97, %r96, 25;
	mov.b64 	%rd206, {%r103, %r102};
	xor.b64  	%rd207, %rd205, %rd206;
	and.b64  	%rd208, %rd192, %rd169;
	or.b64  	%rd209, %rd192, %rd169;
	and.b64  	%rd210, %rd209, %rd149;
	or.b64  	%rd211, %rd210, %rd208;
	add.s64 	%rd212, %rd211, %rd207;
	add.s64 	%rd213, %rd212, %rd202;
	add.s64 	%rd214, %rd202, -6571292209873868907;
	add.s64 	%rd215, %rd213, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r104,%dummy}, %rd214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd214;
	}
	shf.r.wrap.b32 	%r106, %r105, %r104, 14;
	shf.r.wrap.b32 	%r107, %r104, %r105, 14;
	mov.b64 	%rd216, {%r107, %r106};
	shf.r.wrap.b32 	%r108, %r105, %r104, 18;
	shf.r.wrap.b32 	%r109, %r104, %r105, 18;
	mov.b64 	%rd217, {%r109, %r108};
	xor.b64  	%rd218, %rd216, %rd217;
	shf.l.wrap.b32 	%r110, %r104, %r105, 23;
	shf.l.wrap.b32 	%r111, %r105, %r104, 23;
	mov.b64 	%rd219, {%r111, %r110};
	xor.b64  	%rd220, %rd218, %rd219;
	xor.b64  	%rd221, %rd191, %rd168;
	and.b64  	%rd222, %rd214, %rd221;
	xor.b64  	%rd223, %rd222, %rd168;
	add.s64 	%rd224, %rd147, %rd1624;
	add.s64 	%rd225, %rd224, %rd223;
	add.s64 	%rd226, %rd225, %rd220;
	add.s64 	%rd227, %rd226, -131588302623135388;
	add.s64 	%rd228, %rd227, %rd149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd215;
	}
	shf.r.wrap.b32 	%r114, %r113, %r112, 28;
	shf.r.wrap.b32 	%r115, %r112, %r113, 28;
	mov.b64 	%rd229, {%r115, %r114};
	shf.l.wrap.b32 	%r116, %r112, %r113, 30;
	shf.l.wrap.b32 	%r117, %r113, %r112, 30;
	mov.b64 	%rd230, {%r117, %r116};
	xor.b64  	%rd231, %rd229, %rd230;
	shf.l.wrap.b32 	%r118, %r112, %r113, 25;
	shf.l.wrap.b32 	%r119, %r113, %r112, 25;
	mov.b64 	%rd232, {%r119, %r118};
	xor.b64  	%rd233, %rd231, %rd232;
	and.b64  	%rd234, %rd215, %rd192;
	or.b64  	%rd235, %rd215, %rd192;
	and.b64  	%rd236, %rd235, %rd169;
	or.b64  	%rd237, %rd236, %rd234;
	add.s64 	%rd238, %rd237, %rd233;
	add.s64 	%rd239, %rd238, %rd227;
	add.s64 	%rd240, %rd1623, %rd168;
	xor.b64  	%rd241, %rd214, %rd191;
	and.b64  	%rd242, %rd228, %rd241;
	xor.b64  	%rd243, %rd242, %rd191;
	add.s64 	%rd244, %rd240, %rd243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r120,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd228;
	}
	shf.r.wrap.b32 	%r122, %r121, %r120, 14;
	shf.r.wrap.b32 	%r123, %r120, %r121, 14;
	mov.b64 	%rd245, {%r123, %r122};
	shf.r.wrap.b32 	%r124, %r121, %r120, 18;
	shf.r.wrap.b32 	%r125, %r120, %r121, 18;
	mov.b64 	%rd246, {%r125, %r124};
	xor.b64  	%rd247, %rd245, %rd246;
	shf.l.wrap.b32 	%r126, %r120, %r121, 23;
	shf.l.wrap.b32 	%r127, %r121, %r120, 23;
	mov.b64 	%rd248, {%r127, %r126};
	xor.b64  	%rd249, %rd247, %rd248;
	add.s64 	%rd250, %rd244, %rd249;
	add.s64 	%rd251, %rd250, 6480981068601479193;
	add.s64 	%rd252, %rd251, %rd169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd239;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 28;
	shf.r.wrap.b32 	%r131, %r128, %r129, 28;
	mov.b64 	%rd253, {%r131, %r130};
	shf.l.wrap.b32 	%r132, %r128, %r129, 30;
	shf.l.wrap.b32 	%r133, %r129, %r128, 30;
	mov.b64 	%rd254, {%r133, %r132};
	xor.b64  	%rd255, %rd253, %rd254;
	shf.l.wrap.b32 	%r134, %r128, %r129, 25;
	shf.l.wrap.b32 	%r135, %r129, %r128, 25;
	mov.b64 	%rd256, {%r135, %r134};
	xor.b64  	%rd257, %rd255, %rd256;
	and.b64  	%rd258, %rd239, %rd215;
	or.b64  	%rd259, %rd239, %rd215;
	and.b64  	%rd260, %rd259, %rd192;
	or.b64  	%rd261, %rd260, %rd258;
	add.s64 	%rd262, %rd261, %rd257;
	add.s64 	%rd263, %rd262, %rd251;
	add.s64 	%rd264, %rd1622, %rd191;
	xor.b64  	%rd265, %rd228, %rd214;
	and.b64  	%rd266, %rd252, %rd265;
	xor.b64  	%rd267, %rd266, %rd214;
	add.s64 	%rd268, %rd264, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r136,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd252;
	}
	shf.r.wrap.b32 	%r138, %r137, %r136, 14;
	shf.r.wrap.b32 	%r139, %r136, %r137, 14;
	mov.b64 	%rd269, {%r139, %r138};
	shf.r.wrap.b32 	%r140, %r137, %r136, 18;
	shf.r.wrap.b32 	%r141, %r136, %r137, 18;
	mov.b64 	%rd270, {%r141, %r140};
	xor.b64  	%rd271, %rd269, %rd270;
	shf.l.wrap.b32 	%r142, %r136, %r137, 23;
	shf.l.wrap.b32 	%r143, %r137, %r136, 23;
	mov.b64 	%rd272, {%r143, %r142};
	xor.b64  	%rd273, %rd271, %rd272;
	add.s64 	%rd274, %rd268, %rd273;
	add.s64 	%rd275, %rd274, -7908458776815382629;
	add.s64 	%rd276, %rd275, %rd192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r144,%dummy}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd263;
	}
	shf.r.wrap.b32 	%r146, %r145, %r144, 28;
	shf.r.wrap.b32 	%r147, %r144, %r145, 28;
	mov.b64 	%rd277, {%r147, %r146};
	shf.l.wrap.b32 	%r148, %r144, %r145, 30;
	shf.l.wrap.b32 	%r149, %r145, %r144, 30;
	mov.b64 	%rd278, {%r149, %r148};
	xor.b64  	%rd279, %rd277, %rd278;
	shf.l.wrap.b32 	%r150, %r144, %r145, 25;
	shf.l.wrap.b32 	%r151, %r145, %r144, 25;
	mov.b64 	%rd280, {%r151, %r150};
	xor.b64  	%rd281, %rd279, %rd280;
	and.b64  	%rd282, %rd263, %rd239;
	or.b64  	%rd283, %rd263, %rd239;
	and.b64  	%rd284, %rd283, %rd215;
	or.b64  	%rd285, %rd284, %rd282;
	add.s64 	%rd286, %rd285, %rd281;
	add.s64 	%rd287, %rd286, %rd275;
	add.s64 	%rd288, %rd1621, %rd214;
	xor.b64  	%rd289, %rd252, %rd228;
	and.b64  	%rd290, %rd276, %rd289;
	xor.b64  	%rd291, %rd290, %rd228;
	add.s64 	%rd292, %rd288, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r152,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd276;
	}
	shf.r.wrap.b32 	%r154, %r153, %r152, 14;
	shf.r.wrap.b32 	%r155, %r152, %r153, 14;
	mov.b64 	%rd293, {%r155, %r154};
	shf.r.wrap.b32 	%r156, %r153, %r152, 18;
	shf.r.wrap.b32 	%r157, %r152, %r153, 18;
	mov.b64 	%rd294, {%r157, %r156};
	xor.b64  	%rd295, %rd293, %rd294;
	shf.l.wrap.b32 	%r158, %r152, %r153, 23;
	shf.l.wrap.b32 	%r159, %r153, %r152, 23;
	mov.b64 	%rd296, {%r159, %r158};
	xor.b64  	%rd297, %rd295, %rd296;
	add.s64 	%rd298, %rd292, %rd297;
	add.s64 	%rd299, %rd298, -6116909921290321640;
	add.s64 	%rd300, %rd299, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd287;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 28;
	shf.r.wrap.b32 	%r163, %r160, %r161, 28;
	mov.b64 	%rd301, {%r163, %r162};
	shf.l.wrap.b32 	%r164, %r160, %r161, 30;
	shf.l.wrap.b32 	%r165, %r161, %r160, 30;
	mov.b64 	%rd302, {%r165, %r164};
	xor.b64  	%rd303, %rd301, %rd302;
	shf.l.wrap.b32 	%r166, %r160, %r161, 25;
	shf.l.wrap.b32 	%r167, %r161, %r160, 25;
	mov.b64 	%rd304, {%r167, %r166};
	xor.b64  	%rd305, %rd303, %rd304;
	and.b64  	%rd306, %rd287, %rd263;
	or.b64  	%rd307, %rd287, %rd263;
	and.b64  	%rd308, %rd307, %rd239;
	or.b64  	%rd309, %rd308, %rd306;
	add.s64 	%rd310, %rd309, %rd305;
	add.s64 	%rd311, %rd310, %rd299;
	xor.b64  	%rd312, %rd276, %rd252;
	and.b64  	%rd313, %rd300, %rd312;
	xor.b64  	%rd314, %rd313, %rd252;
	add.s64 	%rd315, %rd228, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r168,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd300;
	}
	shf.r.wrap.b32 	%r170, %r169, %r168, 14;
	shf.r.wrap.b32 	%r171, %r168, %r169, 14;
	mov.b64 	%rd316, {%r171, %r170};
	shf.r.wrap.b32 	%r172, %r169, %r168, 18;
	shf.r.wrap.b32 	%r173, %r168, %r169, 18;
	mov.b64 	%rd317, {%r173, %r172};
	xor.b64  	%rd318, %rd316, %rd317;
	shf.l.wrap.b32 	%r174, %r168, %r169, 23;
	shf.l.wrap.b32 	%r175, %r169, %r168, 23;
	mov.b64 	%rd319, {%r175, %r174};
	xor.b64  	%rd320, %rd318, %rd319;
	add.s64 	%rd321, %rd315, %rd320;
	add.s64 	%rd322, %rd321, 6343226172721267266;
	add.s64 	%rd323, %rd322, %rd239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd311;
	}
	shf.r.wrap.b32 	%r178, %r177, %r176, 28;
	shf.r.wrap.b32 	%r179, %r176, %r177, 28;
	mov.b64 	%rd324, {%r179, %r178};
	shf.l.wrap.b32 	%r180, %r176, %r177, 30;
	shf.l.wrap.b32 	%r181, %r177, %r176, 30;
	mov.b64 	%rd325, {%r181, %r180};
	xor.b64  	%rd326, %rd324, %rd325;
	shf.l.wrap.b32 	%r182, %r176, %r177, 25;
	shf.l.wrap.b32 	%r183, %r177, %r176, 25;
	mov.b64 	%rd327, {%r183, %r182};
	xor.b64  	%rd328, %rd326, %rd327;
	and.b64  	%rd329, %rd311, %rd287;
	or.b64  	%rd330, %rd311, %rd287;
	and.b64  	%rd331, %rd330, %rd263;
	or.b64  	%rd332, %rd331, %rd329;
	add.s64 	%rd333, %rd332, %rd328;
	add.s64 	%rd334, %rd333, %rd322;
	xor.b64  	%rd335, %rd300, %rd276;
	and.b64  	%rd336, %rd323, %rd335;
	xor.b64  	%rd337, %rd336, %rd276;
	add.s64 	%rd338, %rd252, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd323;
	}
	shf.r.wrap.b32 	%r186, %r185, %r184, 14;
	shf.r.wrap.b32 	%r187, %r184, %r185, 14;
	mov.b64 	%rd339, {%r187, %r186};
	shf.r.wrap.b32 	%r188, %r185, %r184, 18;
	shf.r.wrap.b32 	%r189, %r184, %r185, 18;
	mov.b64 	%rd340, {%r189, %r188};
	xor.b64  	%rd341, %rd339, %rd340;
	shf.l.wrap.b32 	%r190, %r184, %r185, 23;
	shf.l.wrap.b32 	%r191, %r185, %r184, 23;
	mov.b64 	%rd342, {%r191, %r190};
	xor.b64  	%rd343, %rd341, %rd342;
	add.s64 	%rd344, %rd338, %rd343;
	add.s64 	%rd345, %rd344, 1334009975649890238;
	add.s64 	%rd346, %rd345, %rd263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r192,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd334;
	}
	shf.r.wrap.b32 	%r194, %r193, %r192, 28;
	shf.r.wrap.b32 	%r195, %r192, %r193, 28;
	mov.b64 	%rd347, {%r195, %r194};
	shf.l.wrap.b32 	%r196, %r192, %r193, 30;
	shf.l.wrap.b32 	%r197, %r193, %r192, 30;
	mov.b64 	%rd348, {%r197, %r196};
	xor.b64  	%rd349, %rd347, %rd348;
	shf.l.wrap.b32 	%r198, %r192, %r193, 25;
	shf.l.wrap.b32 	%r199, %r193, %r192, 25;
	mov.b64 	%rd350, {%r199, %r198};
	xor.b64  	%rd351, %rd349, %rd350;
	and.b64  	%rd352, %rd334, %rd311;
	or.b64  	%rd353, %rd334, %rd311;
	and.b64  	%rd354, %rd353, %rd287;
	or.b64  	%rd355, %rd354, %rd352;
	add.s64 	%rd356, %rd355, %rd351;
	add.s64 	%rd357, %rd356, %rd345;
	xor.b64  	%rd358, %rd323, %rd300;
	and.b64  	%rd359, %rd346, %rd358;
	xor.b64  	%rd360, %rd359, %rd300;
	add.s64 	%rd361, %rd276, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r200,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd346;
	}
	shf.r.wrap.b32 	%r202, %r201, %r200, 14;
	shf.r.wrap.b32 	%r203, %r200, %r201, 14;
	mov.b64 	%rd362, {%r203, %r202};
	shf.r.wrap.b32 	%r204, %r201, %r200, 18;
	shf.r.wrap.b32 	%r205, %r200, %r201, 18;
	mov.b64 	%rd363, {%r205, %r204};
	xor.b64  	%rd364, %rd362, %rd363;
	shf.l.wrap.b32 	%r206, %r200, %r201, 23;
	shf.l.wrap.b32 	%r207, %r201, %r200, 23;
	mov.b64 	%rd365, {%r207, %r206};
	xor.b64  	%rd366, %rd364, %rd365;
	add.s64 	%rd367, %rd361, %rd366;
	add.s64 	%rd368, %rd367, 2608012711638119052;
	add.s64 	%rd369, %rd368, %rd287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd357;
	}
	shf.r.wrap.b32 	%r210, %r209, %r208, 28;
	shf.r.wrap.b32 	%r211, %r208, %r209, 28;
	mov.b64 	%rd370, {%r211, %r210};
	shf.l.wrap.b32 	%r212, %r208, %r209, 30;
	shf.l.wrap.b32 	%r213, %r209, %r208, 30;
	mov.b64 	%rd371, {%r213, %r212};
	xor.b64  	%rd372, %rd370, %rd371;
	shf.l.wrap.b32 	%r214, %r208, %r209, 25;
	shf.l.wrap.b32 	%r215, %r209, %r208, 25;
	mov.b64 	%rd373, {%r215, %r214};
	xor.b64  	%rd374, %rd372, %rd373;
	and.b64  	%rd375, %rd357, %rd334;
	or.b64  	%rd376, %rd357, %rd334;
	and.b64  	%rd377, %rd376, %rd311;
	or.b64  	%rd378, %rd377, %rd375;
	add.s64 	%rd379, %rd378, %rd374;
	add.s64 	%rd380, %rd379, %rd368;
	xor.b64  	%rd381, %rd346, %rd323;
	and.b64  	%rd382, %rd369, %rd381;
	xor.b64  	%rd383, %rd382, %rd323;
	add.s64 	%rd384, %rd300, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd369;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 14;
	shf.r.wrap.b32 	%r219, %r216, %r217, 14;
	mov.b64 	%rd385, {%r219, %r218};
	shf.r.wrap.b32 	%r220, %r217, %r216, 18;
	shf.r.wrap.b32 	%r221, %r216, %r217, 18;
	mov.b64 	%rd386, {%r221, %r220};
	xor.b64  	%rd387, %rd385, %rd386;
	shf.l.wrap.b32 	%r222, %r216, %r217, 23;
	shf.l.wrap.b32 	%r223, %r217, %r216, 23;
	mov.b64 	%rd388, {%r223, %r222};
	xor.b64  	%rd389, %rd387, %rd388;
	add.s64 	%rd390, %rd384, %rd389;
	add.s64 	%rd391, %rd390, 6128411473006802146;
	add.s64 	%rd392, %rd391, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd380;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 28;
	shf.r.wrap.b32 	%r227, %r224, %r225, 28;
	mov.b64 	%rd393, {%r227, %r226};
	shf.l.wrap.b32 	%r228, %r224, %r225, 30;
	shf.l.wrap.b32 	%r229, %r225, %r224, 30;
	mov.b64 	%rd394, {%r229, %r228};
	xor.b64  	%rd395, %rd393, %rd394;
	shf.l.wrap.b32 	%r230, %r224, %r225, 25;
	shf.l.wrap.b32 	%r231, %r225, %r224, 25;
	mov.b64 	%rd396, {%r231, %r230};
	xor.b64  	%rd397, %rd395, %rd396;
	and.b64  	%rd398, %rd380, %rd357;
	or.b64  	%rd399, %rd380, %rd357;
	and.b64  	%rd400, %rd399, %rd334;
	or.b64  	%rd401, %rd400, %rd398;
	add.s64 	%rd402, %rd401, %rd397;
	add.s64 	%rd403, %rd402, %rd391;
	xor.b64  	%rd404, %rd369, %rd346;
	and.b64  	%rd405, %rd392, %rd404;
	xor.b64  	%rd406, %rd405, %rd346;
	add.s64 	%rd407, %rd323, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd392;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 14;
	shf.r.wrap.b32 	%r235, %r232, %r233, 14;
	mov.b64 	%rd408, {%r235, %r234};
	shf.r.wrap.b32 	%r236, %r233, %r232, 18;
	shf.r.wrap.b32 	%r237, %r232, %r233, 18;
	mov.b64 	%rd409, {%r237, %r236};
	xor.b64  	%rd410, %rd408, %rd409;
	shf.l.wrap.b32 	%r238, %r232, %r233, 23;
	shf.l.wrap.b32 	%r239, %r233, %r232, 23;
	mov.b64 	%rd411, {%r239, %r238};
	xor.b64  	%rd412, %rd410, %rd411;
	add.s64 	%rd413, %rd407, %rd412;
	add.s64 	%rd414, %rd413, 8268148722764581231;
	add.s64 	%rd415, %rd414, %rd334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd403;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 28;
	shf.r.wrap.b32 	%r243, %r240, %r241, 28;
	mov.b64 	%rd416, {%r243, %r242};
	shf.l.wrap.b32 	%r244, %r240, %r241, 30;
	shf.l.wrap.b32 	%r245, %r241, %r240, 30;
	mov.b64 	%rd417, {%r245, %r244};
	xor.b64  	%rd418, %rd416, %rd417;
	shf.l.wrap.b32 	%r246, %r240, %r241, 25;
	shf.l.wrap.b32 	%r247, %r241, %r240, 25;
	mov.b64 	%rd419, {%r247, %r246};
	xor.b64  	%rd420, %rd418, %rd419;
	and.b64  	%rd421, %rd403, %rd380;
	or.b64  	%rd422, %rd403, %rd380;
	and.b64  	%rd423, %rd422, %rd357;
	or.b64  	%rd424, %rd423, %rd421;
	add.s64 	%rd425, %rd424, %rd420;
	add.s64 	%rd426, %rd425, %rd414;
	xor.b64  	%rd427, %rd392, %rd369;
	and.b64  	%rd428, %rd415, %rd427;
	xor.b64  	%rd429, %rd428, %rd369;
	add.s64 	%rd430, %rd346, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd415;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 14;
	shf.r.wrap.b32 	%r251, %r248, %r249, 14;
	mov.b64 	%rd431, {%r251, %r250};
	shf.r.wrap.b32 	%r252, %r249, %r248, 18;
	shf.r.wrap.b32 	%r253, %r248, %r249, 18;
	mov.b64 	%rd432, {%r253, %r252};
	xor.b64  	%rd433, %rd431, %rd432;
	shf.l.wrap.b32 	%r254, %r248, %r249, 23;
	shf.l.wrap.b32 	%r255, %r249, %r248, 23;
	mov.b64 	%rd434, {%r255, %r254};
	xor.b64  	%rd435, %rd433, %rd434;
	add.s64 	%rd436, %rd430, %rd435;
	add.s64 	%rd437, %rd436, -9160688886553864527;
	add.s64 	%rd438, %rd437, %rd357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd426;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 28;
	shf.r.wrap.b32 	%r259, %r256, %r257, 28;
	mov.b64 	%rd439, {%r259, %r258};
	shf.l.wrap.b32 	%r260, %r256, %r257, 30;
	shf.l.wrap.b32 	%r261, %r257, %r256, 30;
	mov.b64 	%rd440, {%r261, %r260};
	xor.b64  	%rd441, %rd439, %rd440;
	shf.l.wrap.b32 	%r262, %r256, %r257, 25;
	shf.l.wrap.b32 	%r263, %r257, %r256, 25;
	mov.b64 	%rd442, {%r263, %r262};
	xor.b64  	%rd443, %rd441, %rd442;
	and.b64  	%rd444, %rd426, %rd403;
	or.b64  	%rd445, %rd426, %rd403;
	and.b64  	%rd446, %rd445, %rd380;
	or.b64  	%rd447, %rd446, %rd444;
	add.s64 	%rd448, %rd447, %rd443;
	add.s64 	%rd449, %rd448, %rd437;
	xor.b64  	%rd450, %rd415, %rd392;
	and.b64  	%rd451, %rd438, %rd450;
	xor.b64  	%rd452, %rd451, %rd392;
	add.s64 	%rd453, %rd369, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd438;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 14;
	shf.r.wrap.b32 	%r267, %r264, %r265, 14;
	mov.b64 	%rd454, {%r267, %r266};
	shf.r.wrap.b32 	%r268, %r265, %r264, 18;
	shf.r.wrap.b32 	%r269, %r264, %r265, 18;
	mov.b64 	%rd455, {%r269, %r268};
	xor.b64  	%rd456, %rd454, %rd455;
	shf.l.wrap.b32 	%r270, %r264, %r265, 23;
	shf.l.wrap.b32 	%r271, %r265, %r264, 23;
	mov.b64 	%rd457, {%r271, %r270};
	xor.b64  	%rd458, %rd456, %rd457;
	add.s64 	%rd459, %rd453, %rd458;
	add.s64 	%rd460, %rd459, -7215885187991268811;
	add.s64 	%rd461, %rd460, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd449;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 28;
	shf.r.wrap.b32 	%r275, %r272, %r273, 28;
	mov.b64 	%rd462, {%r275, %r274};
	shf.l.wrap.b32 	%r276, %r272, %r273, 30;
	shf.l.wrap.b32 	%r277, %r273, %r272, 30;
	mov.b64 	%rd463, {%r277, %r276};
	xor.b64  	%rd464, %rd462, %rd463;
	shf.l.wrap.b32 	%r278, %r272, %r273, 25;
	shf.l.wrap.b32 	%r279, %r273, %r272, 25;
	mov.b64 	%rd465, {%r279, %r278};
	xor.b64  	%rd466, %rd464, %rd465;
	and.b64  	%rd467, %rd449, %rd426;
	or.b64  	%rd468, %rd449, %rd426;
	and.b64  	%rd469, %rd468, %rd403;
	or.b64  	%rd470, %rd469, %rd467;
	add.s64 	%rd471, %rd470, %rd466;
	add.s64 	%rd472, %rd471, %rd460;
	xor.b64  	%rd473, %rd438, %rd415;
	and.b64  	%rd474, %rd461, %rd473;
	xor.b64  	%rd475, %rd474, %rd415;
	add.s64 	%rd476, %rd392, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd461;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 14;
	shf.r.wrap.b32 	%r283, %r280, %r281, 14;
	mov.b64 	%rd477, {%r283, %r282};
	shf.r.wrap.b32 	%r284, %r281, %r280, 18;
	shf.r.wrap.b32 	%r285, %r280, %r281, 18;
	mov.b64 	%rd478, {%r285, %r284};
	xor.b64  	%rd479, %rd477, %rd478;
	shf.l.wrap.b32 	%r286, %r280, %r281, 23;
	shf.l.wrap.b32 	%r287, %r281, %r280, 23;
	mov.b64 	%rd480, {%r287, %r286};
	xor.b64  	%rd481, %rd479, %rd480;
	add.s64 	%rd482, %rd476, %rd481;
	add.s64 	%rd483, %rd482, -4495734319001032556;
	add.s64 	%rd484, %rd483, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd472;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 28;
	shf.r.wrap.b32 	%r291, %r288, %r289, 28;
	mov.b64 	%rd485, {%r291, %r290};
	shf.l.wrap.b32 	%r292, %r288, %r289, 30;
	shf.l.wrap.b32 	%r293, %r289, %r288, 30;
	mov.b64 	%rd486, {%r293, %r292};
	xor.b64  	%rd487, %rd485, %rd486;
	shf.l.wrap.b32 	%r294, %r288, %r289, 25;
	shf.l.wrap.b32 	%r295, %r289, %r288, 25;
	mov.b64 	%rd488, {%r295, %r294};
	xor.b64  	%rd489, %rd487, %rd488;
	and.b64  	%rd490, %rd472, %rd449;
	or.b64  	%rd491, %rd472, %rd449;
	and.b64  	%rd492, %rd491, %rd426;
	or.b64  	%rd493, %rd492, %rd490;
	add.s64 	%rd494, %rd493, %rd489;
	add.s64 	%rd495, %rd494, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r296,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r297}, %rd1627;
	}
	shf.r.wrap.b32 	%r298, %r297, %r296, 8;
	shf.r.wrap.b32 	%r299, %r296, %r297, 8;
	mov.b64 	%rd496, {%r299, %r298};
	shf.r.wrap.b32 	%r300, %r297, %r296, 1;
	shf.r.wrap.b32 	%r301, %r296, %r297, 1;
	mov.b64 	%rd497, {%r301, %r300};
	xor.b64  	%rd498, %rd497, %rd496;
	shr.u64 	%rd499, %rd1627, 7;
	xor.b64  	%rd500, %rd498, %rd499;
	add.s64 	%rd501, %rd1628, %rd12;
	add.s64 	%rd1610, %rd501, %rd500;
	add.s64 	%rd502, %rd1610, %rd415;
	xor.b64  	%rd503, %rd461, %rd438;
	and.b64  	%rd504, %rd484, %rd503;
	xor.b64  	%rd505, %rd504, %rd438;
	add.s64 	%rd506, %rd502, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r302,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r303}, %rd484;
	}
	shf.r.wrap.b32 	%r304, %r303, %r302, 14;
	shf.r.wrap.b32 	%r305, %r302, %r303, 14;
	mov.b64 	%rd507, {%r305, %r304};
	shf.r.wrap.b32 	%r306, %r303, %r302, 18;
	shf.r.wrap.b32 	%r307, %r302, %r303, 18;
	mov.b64 	%rd508, {%r307, %r306};
	xor.b64  	%rd509, %rd507, %rd508;
	shf.l.wrap.b32 	%r308, %r302, %r303, 23;
	shf.l.wrap.b32 	%r309, %r303, %r302, 23;
	mov.b64 	%rd510, {%r309, %r308};
	xor.b64  	%rd511, %rd509, %rd510;
	add.s64 	%rd512, %rd506, %rd511;
	add.s64 	%rd513, %rd512, -1973867731355612462;
	add.s64 	%rd514, %rd513, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r310,%dummy}, %rd495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r311}, %rd495;
	}
	shf.r.wrap.b32 	%r312, %r311, %r310, 28;
	shf.r.wrap.b32 	%r313, %r310, %r311, 28;
	mov.b64 	%rd515, {%r313, %r312};
	shf.l.wrap.b32 	%r314, %r310, %r311, 30;
	shf.l.wrap.b32 	%r315, %r311, %r310, 30;
	mov.b64 	%rd516, {%r315, %r314};
	xor.b64  	%rd517, %rd515, %rd516;
	shf.l.wrap.b32 	%r316, %r310, %r311, 25;
	shf.l.wrap.b32 	%r317, %r311, %r310, 25;
	mov.b64 	%rd518, {%r317, %r316};
	xor.b64  	%rd519, %rd517, %rd518;
	and.b64  	%rd520, %rd495, %rd472;
	or.b64  	%rd521, %rd495, %rd472;
	and.b64  	%rd522, %rd521, %rd449;
	or.b64  	%rd523, %rd522, %rd520;
	add.s64 	%rd524, %rd523, %rd519;
	add.s64 	%rd525, %rd524, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd1626;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 8;
	shf.r.wrap.b32 	%r321, %r318, %r319, 8;
	mov.b64 	%rd526, {%r321, %r320};
	shf.r.wrap.b32 	%r322, %r319, %r318, 1;
	shf.r.wrap.b32 	%r323, %r318, %r319, 1;
	mov.b64 	%rd527, {%r323, %r322};
	xor.b64  	%rd528, %rd527, %rd526;
	shr.u64 	%rd529, %rd1626, 7;
	xor.b64  	%rd530, %rd528, %rd529;
	add.s64 	%rd531, %rd14, %rd1627;
	add.s64 	%rd1611, %rd531, %rd530;
	add.s64 	%rd532, %rd1611, %rd438;
	xor.b64  	%rd533, %rd484, %rd461;
	and.b64  	%rd534, %rd514, %rd533;
	xor.b64  	%rd535, %rd534, %rd461;
	add.s64 	%rd536, %rd532, %rd535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd514;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 14;
	shf.r.wrap.b32 	%r327, %r324, %r325, 14;
	mov.b64 	%rd537, {%r327, %r326};
	shf.r.wrap.b32 	%r328, %r325, %r324, 18;
	shf.r.wrap.b32 	%r329, %r324, %r325, 18;
	mov.b64 	%rd538, {%r329, %r328};
	xor.b64  	%rd539, %rd537, %rd538;
	shf.l.wrap.b32 	%r330, %r324, %r325, 23;
	shf.l.wrap.b32 	%r331, %r325, %r324, 23;
	mov.b64 	%rd540, {%r331, %r330};
	xor.b64  	%rd541, %rd539, %rd540;
	add.s64 	%rd542, %rd536, %rd541;
	add.s64 	%rd543, %rd542, -1171420211273849373;
	add.s64 	%rd544, %rd543, %rd449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r332,%dummy}, %rd525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd525;
	}
	shf.r.wrap.b32 	%r334, %r333, %r332, 28;
	shf.r.wrap.b32 	%r335, %r332, %r333, 28;
	mov.b64 	%rd545, {%r335, %r334};
	shf.l.wrap.b32 	%r336, %r332, %r333, 30;
	shf.l.wrap.b32 	%r337, %r333, %r332, 30;
	mov.b64 	%rd546, {%r337, %r336};
	xor.b64  	%rd547, %rd545, %rd546;
	shf.l.wrap.b32 	%r338, %r332, %r333, 25;
	shf.l.wrap.b32 	%r339, %r333, %r332, 25;
	mov.b64 	%rd548, {%r339, %r338};
	xor.b64  	%rd549, %rd547, %rd548;
	and.b64  	%rd550, %rd525, %rd495;
	or.b64  	%rd551, %rd525, %rd495;
	and.b64  	%rd552, %rd551, %rd472;
	or.b64  	%rd553, %rd552, %rd550;
	add.s64 	%rd554, %rd553, %rd549;
	add.s64 	%rd555, %rd554, %rd543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd1610;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 19;
	shf.r.wrap.b32 	%r343, %r340, %r341, 19;
	mov.b64 	%rd556, {%r343, %r342};
	shf.l.wrap.b32 	%r344, %r340, %r341, 3;
	shf.l.wrap.b32 	%r345, %r341, %r340, 3;
	mov.b64 	%rd557, {%r345, %r344};
	xor.b64  	%rd558, %rd556, %rd557;
	shr.u64 	%rd559, %rd1610, 6;
	xor.b64  	%rd560, %rd558, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd1625;
	}
	shf.r.wrap.b32 	%r348, %r347, %r346, 8;
	shf.r.wrap.b32 	%r349, %r346, %r347, 8;
	mov.b64 	%rd561, {%r349, %r348};
	shf.r.wrap.b32 	%r350, %r347, %r346, 1;
	shf.r.wrap.b32 	%r351, %r346, %r347, 1;
	mov.b64 	%rd562, {%r351, %r350};
	xor.b64  	%rd563, %rd562, %rd561;
	shr.u64 	%rd564, %rd1625, 7;
	xor.b64  	%rd565, %rd563, %rd564;
	add.s64 	%rd566, %rd560, %rd1626;
	add.s64 	%rd1607, %rd566, %rd565;
	add.s64 	%rd567, %rd1607, %rd461;
	xor.b64  	%rd568, %rd514, %rd484;
	and.b64  	%rd569, %rd544, %rd568;
	xor.b64  	%rd570, %rd569, %rd484;
	add.s64 	%rd571, %rd567, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r352,%dummy}, %rd544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd544;
	}
	shf.r.wrap.b32 	%r354, %r353, %r352, 14;
	shf.r.wrap.b32 	%r355, %r352, %r353, 14;
	mov.b64 	%rd572, {%r355, %r354};
	shf.r.wrap.b32 	%r356, %r353, %r352, 18;
	shf.r.wrap.b32 	%r357, %r352, %r353, 18;
	mov.b64 	%rd573, {%r357, %r356};
	xor.b64  	%rd574, %rd572, %rd573;
	shf.l.wrap.b32 	%r358, %r352, %r353, 23;
	shf.l.wrap.b32 	%r359, %r353, %r352, 23;
	mov.b64 	%rd575, {%r359, %r358};
	xor.b64  	%rd576, %rd574, %rd575;
	add.s64 	%rd577, %rd571, %rd576;
	add.s64 	%rd578, %rd577, 1135362057144423861;
	add.s64 	%rd579, %rd578, %rd472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd555;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 28;
	shf.r.wrap.b32 	%r363, %r360, %r361, 28;
	mov.b64 	%rd580, {%r363, %r362};
	shf.l.wrap.b32 	%r364, %r360, %r361, 30;
	shf.l.wrap.b32 	%r365, %r361, %r360, 30;
	mov.b64 	%rd581, {%r365, %r364};
	xor.b64  	%rd582, %rd580, %rd581;
	shf.l.wrap.b32 	%r366, %r360, %r361, 25;
	shf.l.wrap.b32 	%r367, %r361, %r360, 25;
	mov.b64 	%rd583, {%r367, %r366};
	xor.b64  	%rd584, %rd582, %rd583;
	and.b64  	%rd585, %rd555, %rd525;
	or.b64  	%rd586, %rd555, %rd525;
	and.b64  	%rd587, %rd586, %rd495;
	or.b64  	%rd588, %rd587, %rd585;
	add.s64 	%rd589, %rd588, %rd584;
	add.s64 	%rd590, %rd589, %rd578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd1611;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 19;
	shf.r.wrap.b32 	%r371, %r368, %r369, 19;
	mov.b64 	%rd591, {%r371, %r370};
	shf.l.wrap.b32 	%r372, %r368, %r369, 3;
	shf.l.wrap.b32 	%r373, %r369, %r368, 3;
	mov.b64 	%rd592, {%r373, %r372};
	xor.b64  	%rd593, %rd591, %rd592;
	shr.u64 	%rd594, %rd1611, 6;
	xor.b64  	%rd595, %rd593, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r375}, %rd1624;
	}
	shf.r.wrap.b32 	%r376, %r375, %r374, 8;
	shf.r.wrap.b32 	%r377, %r374, %r375, 8;
	mov.b64 	%rd596, {%r377, %r376};
	shf.r.wrap.b32 	%r378, %r375, %r374, 1;
	shf.r.wrap.b32 	%r379, %r374, %r375, 1;
	mov.b64 	%rd597, {%r379, %r378};
	xor.b64  	%rd598, %rd597, %rd596;
	shr.u64 	%rd599, %rd1624, 7;
	xor.b64  	%rd600, %rd598, %rd599;
	add.s64 	%rd601, %rd595, %rd1625;
	add.s64 	%rd1605, %rd601, %rd600;
	add.s64 	%rd602, %rd1605, %rd484;
	xor.b64  	%rd603, %rd544, %rd514;
	and.b64  	%rd604, %rd579, %rd603;
	xor.b64  	%rd605, %rd604, %rd514;
	add.s64 	%rd606, %rd602, %rd605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd579;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 14;
	shf.r.wrap.b32 	%r383, %r380, %r381, 14;
	mov.b64 	%rd607, {%r383, %r382};
	shf.r.wrap.b32 	%r384, %r381, %r380, 18;
	shf.r.wrap.b32 	%r385, %r380, %r381, 18;
	mov.b64 	%rd608, {%r385, %r384};
	xor.b64  	%rd609, %rd607, %rd608;
	shf.l.wrap.b32 	%r386, %r380, %r381, 23;
	shf.l.wrap.b32 	%r387, %r381, %r380, 23;
	mov.b64 	%rd610, {%r387, %r386};
	xor.b64  	%rd611, %rd609, %rd610;
	add.s64 	%rd612, %rd606, %rd611;
	add.s64 	%rd613, %rd612, 2597628984639134821;
	add.s64 	%rd614, %rd613, %rd495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r388,%dummy}, %rd590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r389}, %rd590;
	}
	shf.r.wrap.b32 	%r390, %r389, %r388, 28;
	shf.r.wrap.b32 	%r391, %r388, %r389, 28;
	mov.b64 	%rd615, {%r391, %r390};
	shf.l.wrap.b32 	%r392, %r388, %r389, 30;
	shf.l.wrap.b32 	%r393, %r389, %r388, 30;
	mov.b64 	%rd616, {%r393, %r392};
	xor.b64  	%rd617, %rd615, %rd616;
	shf.l.wrap.b32 	%r394, %r388, %r389, 25;
	shf.l.wrap.b32 	%r395, %r389, %r388, 25;
	mov.b64 	%rd618, {%r395, %r394};
	xor.b64  	%rd619, %rd617, %rd618;
	and.b64  	%rd620, %rd590, %rd555;
	or.b64  	%rd621, %rd590, %rd555;
	and.b64  	%rd622, %rd621, %rd525;
	or.b64  	%rd623, %rd622, %rd620;
	add.s64 	%rd624, %rd623, %rd619;
	add.s64 	%rd625, %rd624, %rd613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd1607;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 19;
	shf.r.wrap.b32 	%r399, %r396, %r397, 19;
	mov.b64 	%rd626, {%r399, %r398};
	shf.l.wrap.b32 	%r400, %r396, %r397, 3;
	shf.l.wrap.b32 	%r401, %r397, %r396, 3;
	mov.b64 	%rd627, {%r401, %r400};
	xor.b64  	%rd628, %rd626, %rd627;
	shr.u64 	%rd629, %rd1607, 6;
	xor.b64  	%rd630, %rd628, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd1623;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 8;
	shf.r.wrap.b32 	%r405, %r402, %r403, 8;
	mov.b64 	%rd631, {%r405, %r404};
	shf.r.wrap.b32 	%r406, %r403, %r402, 1;
	shf.r.wrap.b32 	%r407, %r402, %r403, 1;
	mov.b64 	%rd632, {%r407, %r406};
	xor.b64  	%rd633, %rd632, %rd631;
	shr.u64 	%rd634, %rd1623, 7;
	xor.b64  	%rd635, %rd633, %rd634;
	add.s64 	%rd636, %rd630, %rd1624;
	add.s64 	%rd1603, %rd636, %rd635;
	add.s64 	%rd637, %rd1603, %rd514;
	xor.b64  	%rd638, %rd579, %rd544;
	and.b64  	%rd639, %rd614, %rd638;
	xor.b64  	%rd640, %rd639, %rd544;
	add.s64 	%rd641, %rd637, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd614;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 14;
	shf.r.wrap.b32 	%r411, %r408, %r409, 14;
	mov.b64 	%rd642, {%r411, %r410};
	shf.r.wrap.b32 	%r412, %r409, %r408, 18;
	shf.r.wrap.b32 	%r413, %r408, %r409, 18;
	mov.b64 	%rd643, {%r413, %r412};
	xor.b64  	%rd644, %rd642, %rd643;
	shf.l.wrap.b32 	%r414, %r408, %r409, 23;
	shf.l.wrap.b32 	%r415, %r409, %r408, 23;
	mov.b64 	%rd645, {%r415, %r414};
	xor.b64  	%rd646, %rd644, %rd645;
	add.s64 	%rd647, %rd641, %rd646;
	add.s64 	%rd648, %rd647, 3308224258029322869;
	add.s64 	%rd649, %rd648, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd625;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 28;
	shf.r.wrap.b32 	%r419, %r416, %r417, 28;
	mov.b64 	%rd650, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 30;
	shf.l.wrap.b32 	%r421, %r417, %r416, 30;
	mov.b64 	%rd651, {%r421, %r420};
	xor.b64  	%rd652, %rd650, %rd651;
	shf.l.wrap.b32 	%r422, %r416, %r417, 25;
	shf.l.wrap.b32 	%r423, %r417, %r416, 25;
	mov.b64 	%rd653, {%r423, %r422};
	xor.b64  	%rd654, %rd652, %rd653;
	and.b64  	%rd655, %rd625, %rd590;
	or.b64  	%rd656, %rd625, %rd590;
	and.b64  	%rd657, %rd656, %rd555;
	or.b64  	%rd658, %rd657, %rd655;
	add.s64 	%rd659, %rd658, %rd654;
	add.s64 	%rd660, %rd659, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r424,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd1605;
	}
	shf.r.wrap.b32 	%r426, %r425, %r424, 19;
	shf.r.wrap.b32 	%r427, %r424, %r425, 19;
	mov.b64 	%rd661, {%r427, %r426};
	shf.l.wrap.b32 	%r428, %r424, %r425, 3;
	shf.l.wrap.b32 	%r429, %r425, %r424, 3;
	mov.b64 	%rd662, {%r429, %r428};
	xor.b64  	%rd663, %rd661, %rd662;
	shr.u64 	%rd664, %rd1605, 6;
	xor.b64  	%rd665, %rd663, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r431}, %rd1622;
	}
	shf.r.wrap.b32 	%r432, %r431, %r430, 8;
	shf.r.wrap.b32 	%r433, %r430, %r431, 8;
	mov.b64 	%rd666, {%r433, %r432};
	shf.r.wrap.b32 	%r434, %r431, %r430, 1;
	shf.r.wrap.b32 	%r435, %r430, %r431, 1;
	mov.b64 	%rd667, {%r435, %r434};
	xor.b64  	%rd668, %rd667, %rd666;
	shr.u64 	%rd669, %rd1622, 7;
	xor.b64  	%rd670, %rd668, %rd669;
	add.s64 	%rd671, %rd665, %rd1623;
	add.s64 	%rd1601, %rd671, %rd670;
	add.s64 	%rd672, %rd1601, %rd544;
	xor.b64  	%rd673, %rd614, %rd579;
	and.b64  	%rd674, %rd649, %rd673;
	xor.b64  	%rd675, %rd674, %rd579;
	add.s64 	%rd676, %rd672, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd649;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 14;
	shf.r.wrap.b32 	%r439, %r436, %r437, 14;
	mov.b64 	%rd677, {%r439, %r438};
	shf.r.wrap.b32 	%r440, %r437, %r436, 18;
	shf.r.wrap.b32 	%r441, %r436, %r437, 18;
	mov.b64 	%rd678, {%r441, %r440};
	xor.b64  	%rd679, %rd677, %rd678;
	shf.l.wrap.b32 	%r442, %r436, %r437, 23;
	shf.l.wrap.b32 	%r443, %r437, %r436, 23;
	mov.b64 	%rd680, {%r443, %r442};
	xor.b64  	%rd681, %rd679, %rd680;
	add.s64 	%rd682, %rd676, %rd681;
	add.s64 	%rd683, %rd682, 5365058923640841347;
	add.s64 	%rd684, %rd683, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd660;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 28;
	shf.r.wrap.b32 	%r447, %r444, %r445, 28;
	mov.b64 	%rd685, {%r447, %r446};
	shf.l.wrap.b32 	%r448, %r444, %r445, 30;
	shf.l.wrap.b32 	%r449, %r445, %r444, 30;
	mov.b64 	%rd686, {%r449, %r448};
	xor.b64  	%rd687, %rd685, %rd686;
	shf.l.wrap.b32 	%r450, %r444, %r445, 25;
	shf.l.wrap.b32 	%r451, %r445, %r444, 25;
	mov.b64 	%rd688, {%r451, %r450};
	xor.b64  	%rd689, %rd687, %rd688;
	and.b64  	%rd690, %rd660, %rd625;
	or.b64  	%rd691, %rd660, %rd625;
	and.b64  	%rd692, %rd691, %rd590;
	or.b64  	%rd693, %rd692, %rd690;
	add.s64 	%rd694, %rd693, %rd689;
	add.s64 	%rd695, %rd694, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd1603;
	}
	shf.r.wrap.b32 	%r454, %r453, %r452, 19;
	shf.r.wrap.b32 	%r455, %r452, %r453, 19;
	mov.b64 	%rd696, {%r455, %r454};
	shf.l.wrap.b32 	%r456, %r452, %r453, 3;
	shf.l.wrap.b32 	%r457, %r453, %r452, 3;
	mov.b64 	%rd697, {%r457, %r456};
	xor.b64  	%rd698, %rd696, %rd697;
	shr.u64 	%rd699, %rd1603, 6;
	xor.b64  	%rd700, %rd698, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd1621;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 8;
	shf.r.wrap.b32 	%r461, %r458, %r459, 8;
	mov.b64 	%rd701, {%r461, %r460};
	shf.r.wrap.b32 	%r462, %r459, %r458, 1;
	shf.r.wrap.b32 	%r463, %r458, %r459, 1;
	mov.b64 	%rd702, {%r463, %r462};
	xor.b64  	%rd703, %rd702, %rd701;
	shr.u64 	%rd704, %rd1621, 7;
	xor.b64  	%rd705, %rd703, %rd704;
	add.s64 	%rd706, %rd700, %rd1622;
	add.s64 	%rd707, %rd706, %rd705;
	add.s64 	%rd1599, %rd707, 512;
	add.s64 	%rd708, %rd1599, %rd579;
	xor.b64  	%rd709, %rd649, %rd614;
	and.b64  	%rd710, %rd684, %rd709;
	xor.b64  	%rd711, %rd710, %rd614;
	add.s64 	%rd712, %rd708, %rd711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd684;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 14;
	shf.r.wrap.b32 	%r467, %r464, %r465, 14;
	mov.b64 	%rd713, {%r467, %r466};
	shf.r.wrap.b32 	%r468, %r465, %r464, 18;
	shf.r.wrap.b32 	%r469, %r464, %r465, 18;
	mov.b64 	%rd714, {%r469, %r468};
	xor.b64  	%rd715, %rd713, %rd714;
	shf.l.wrap.b32 	%r470, %r464, %r465, 23;
	shf.l.wrap.b32 	%r471, %r465, %r464, 23;
	mov.b64 	%rd716, {%r471, %r470};
	xor.b64  	%rd717, %rd715, %rd716;
	add.s64 	%rd718, %rd712, %rd717;
	add.s64 	%rd719, %rd718, 6679025012923562964;
	add.s64 	%rd720, %rd719, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd695;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 28;
	shf.r.wrap.b32 	%r475, %r472, %r473, 28;
	mov.b64 	%rd721, {%r475, %r474};
	shf.l.wrap.b32 	%r476, %r472, %r473, 30;
	shf.l.wrap.b32 	%r477, %r473, %r472, 30;
	mov.b64 	%rd722, {%r477, %r476};
	xor.b64  	%rd723, %rd721, %rd722;
	shf.l.wrap.b32 	%r478, %r472, %r473, 25;
	shf.l.wrap.b32 	%r479, %r473, %r472, 25;
	mov.b64 	%rd724, {%r479, %r478};
	xor.b64  	%rd725, %rd723, %rd724;
	and.b64  	%rd726, %rd695, %rd660;
	or.b64  	%rd727, %rd695, %rd660;
	and.b64  	%rd728, %rd727, %rd625;
	or.b64  	%rd729, %rd728, %rd726;
	add.s64 	%rd730, %rd729, %rd725;
	add.s64 	%rd731, %rd730, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r480,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd1601;
	}
	shf.r.wrap.b32 	%r482, %r481, %r480, 19;
	shf.r.wrap.b32 	%r483, %r480, %r481, 19;
	mov.b64 	%rd732, {%r483, %r482};
	shf.l.wrap.b32 	%r484, %r480, %r481, 3;
	shf.l.wrap.b32 	%r485, %r481, %r480, 3;
	mov.b64 	%rd733, {%r485, %r484};
	xor.b64  	%rd734, %rd732, %rd733;
	shr.u64 	%rd735, %rd1601, 6;
	xor.b64  	%rd736, %rd734, %rd735;
	add.s64 	%rd737, %rd736, %rd1621;
	add.s64 	%rd738, %rd737, %rd1610;
	add.s64 	%rd1598, %rd738, %rd15;
	add.s64 	%rd739, %rd1598, %rd614;
	xor.b64  	%rd740, %rd684, %rd649;
	and.b64  	%rd741, %rd720, %rd740;
	xor.b64  	%rd742, %rd741, %rd649;
	add.s64 	%rd743, %rd739, %rd742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r486,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r487}, %rd720;
	}
	shf.r.wrap.b32 	%r488, %r487, %r486, 14;
	shf.r.wrap.b32 	%r489, %r486, %r487, 14;
	mov.b64 	%rd744, {%r489, %r488};
	shf.r.wrap.b32 	%r490, %r487, %r486, 18;
	shf.r.wrap.b32 	%r491, %r486, %r487, 18;
	mov.b64 	%rd745, {%r491, %r490};
	xor.b64  	%rd746, %rd744, %rd745;
	shf.l.wrap.b32 	%r492, %r486, %r487, 23;
	shf.l.wrap.b32 	%r493, %r487, %r486, 23;
	mov.b64 	%rd747, {%r493, %r492};
	xor.b64  	%rd748, %rd746, %rd747;
	add.s64 	%rd749, %rd743, %rd748;
	add.s64 	%rd750, %rd749, 8573033837759648693;
	add.s64 	%rd751, %rd750, %rd625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r494,%dummy}, %rd731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r495}, %rd731;
	}
	shf.r.wrap.b32 	%r496, %r495, %r494, 28;
	shf.r.wrap.b32 	%r497, %r494, %r495, 28;
	mov.b64 	%rd752, {%r497, %r496};
	shf.l.wrap.b32 	%r498, %r494, %r495, 30;
	shf.l.wrap.b32 	%r499, %r495, %r494, 30;
	mov.b64 	%rd753, {%r499, %r498};
	xor.b64  	%rd754, %rd752, %rd753;
	shf.l.wrap.b32 	%r500, %r494, %r495, 25;
	shf.l.wrap.b32 	%r501, %r495, %r494, 25;
	mov.b64 	%rd755, {%r501, %r500};
	xor.b64  	%rd756, %rd754, %rd755;
	and.b64  	%rd757, %rd731, %rd695;
	or.b64  	%rd758, %rd731, %rd695;
	and.b64  	%rd759, %rd758, %rd660;
	or.b64  	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd760, %rd756;
	add.s64 	%rd762, %rd761, %rd750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r502,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r503}, %rd1599;
	}
	shf.r.wrap.b32 	%r504, %r503, %r502, 19;
	shf.r.wrap.b32 	%r505, %r502, %r503, 19;
	mov.b64 	%rd763, {%r505, %r504};
	shf.l.wrap.b32 	%r506, %r502, %r503, 3;
	shf.l.wrap.b32 	%r507, %r503, %r502, 3;
	mov.b64 	%rd764, {%r507, %r506};
	xor.b64  	%rd765, %rd763, %rd764;
	shr.u64 	%rd766, %rd1599, 6;
	xor.b64  	%rd767, %rd765, %rd766;
	add.s64 	%rd768, %rd16, %rd1611;
	add.s64 	%rd1597, %rd768, %rd767;
	add.s64 	%rd769, %rd1597, %rd649;
	xor.b64  	%rd770, %rd720, %rd684;
	and.b64  	%rd771, %rd751, %rd770;
	xor.b64  	%rd772, %rd771, %rd684;
	add.s64 	%rd773, %rd769, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd751;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 14;
	shf.r.wrap.b32 	%r511, %r508, %r509, 14;
	mov.b64 	%rd774, {%r511, %r510};
	shf.r.wrap.b32 	%r512, %r509, %r508, 18;
	shf.r.wrap.b32 	%r513, %r508, %r509, 18;
	mov.b64 	%rd775, {%r513, %r512};
	xor.b64  	%rd776, %rd774, %rd775;
	shf.l.wrap.b32 	%r514, %r508, %r509, 23;
	shf.l.wrap.b32 	%r515, %r509, %r508, 23;
	mov.b64 	%rd777, {%r515, %r514};
	xor.b64  	%rd778, %rd776, %rd777;
	add.s64 	%rd779, %rd773, %rd778;
	add.s64 	%rd780, %rd779, -7476448914759557205;
	add.s64 	%rd781, %rd780, %rd660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd762;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 28;
	shf.r.wrap.b32 	%r519, %r516, %r517, 28;
	mov.b64 	%rd782, {%r519, %r518};
	shf.l.wrap.b32 	%r520, %r516, %r517, 30;
	shf.l.wrap.b32 	%r521, %r517, %r516, 30;
	mov.b64 	%rd783, {%r521, %r520};
	xor.b64  	%rd784, %rd782, %rd783;
	shf.l.wrap.b32 	%r522, %r516, %r517, 25;
	shf.l.wrap.b32 	%r523, %r517, %r516, 25;
	mov.b64 	%rd785, {%r523, %r522};
	xor.b64  	%rd786, %rd784, %rd785;
	and.b64  	%rd787, %rd762, %rd731;
	or.b64  	%rd788, %rd762, %rd731;
	and.b64  	%rd789, %rd788, %rd695;
	or.b64  	%rd790, %rd789, %rd787;
	add.s64 	%rd791, %rd790, %rd786;
	add.s64 	%rd792, %rd791, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r524,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r525}, %rd1598;
	}
	shf.r.wrap.b32 	%r526, %r525, %r524, 19;
	shf.r.wrap.b32 	%r527, %r524, %r525, 19;
	mov.b64 	%rd793, {%r527, %r526};
	shf.l.wrap.b32 	%r528, %r524, %r525, 3;
	shf.l.wrap.b32 	%r529, %r525, %r524, 3;
	mov.b64 	%rd794, {%r529, %r528};
	xor.b64  	%rd795, %rd793, %rd794;
	shr.u64 	%rd796, %rd1598, 6;
	xor.b64  	%rd797, %rd795, %rd796;
	add.s64 	%rd798, %rd1607, %rd13;
	add.s64 	%rd1609, %rd798, %rd797;
	add.s64 	%rd799, %rd1609, %rd684;
	xor.b64  	%rd800, %rd751, %rd720;
	and.b64  	%rd801, %rd781, %rd800;
	xor.b64  	%rd802, %rd801, %rd720;
	add.s64 	%rd803, %rd799, %rd802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd781;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 14;
	shf.r.wrap.b32 	%r533, %r530, %r531, 14;
	mov.b64 	%rd804, {%r533, %r532};
	shf.r.wrap.b32 	%r534, %r531, %r530, 18;
	shf.r.wrap.b32 	%r535, %r530, %r531, 18;
	mov.b64 	%rd805, {%r535, %r534};
	xor.b64  	%rd806, %rd804, %rd805;
	shf.l.wrap.b32 	%r536, %r530, %r531, 23;
	shf.l.wrap.b32 	%r537, %r531, %r530, 23;
	mov.b64 	%rd807, {%r537, %r536};
	xor.b64  	%rd808, %rd806, %rd807;
	add.s64 	%rd809, %rd803, %rd808;
	add.s64 	%rd810, %rd809, -6327057829258317296;
	add.s64 	%rd811, %rd810, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd792;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 28;
	shf.r.wrap.b32 	%r541, %r538, %r539, 28;
	mov.b64 	%rd812, {%r541, %r540};
	shf.l.wrap.b32 	%r542, %r538, %r539, 30;
	shf.l.wrap.b32 	%r543, %r539, %r538, 30;
	mov.b64 	%rd813, {%r543, %r542};
	xor.b64  	%rd814, %rd812, %rd813;
	shf.l.wrap.b32 	%r544, %r538, %r539, 25;
	shf.l.wrap.b32 	%r545, %r539, %r538, 25;
	mov.b64 	%rd815, {%r545, %r544};
	xor.b64  	%rd816, %rd814, %rd815;
	and.b64  	%rd817, %rd792, %rd762;
	or.b64  	%rd818, %rd792, %rd762;
	and.b64  	%rd819, %rd818, %rd731;
	or.b64  	%rd820, %rd819, %rd817;
	add.s64 	%rd821, %rd820, %rd816;
	add.s64 	%rd822, %rd821, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd1597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd1597;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 19;
	shf.r.wrap.b32 	%r549, %r546, %r547, 19;
	mov.b64 	%rd823, {%r549, %r548};
	shf.l.wrap.b32 	%r550, %r546, %r547, 3;
	shf.l.wrap.b32 	%r551, %r547, %r546, 3;
	mov.b64 	%rd824, {%r551, %r550};
	xor.b64  	%rd825, %rd823, %rd824;
	shr.u64 	%rd826, %rd1597, 6;
	xor.b64  	%rd827, %rd825, %rd826;
	add.s64 	%rd828, %rd1605, %rd13;
	add.s64 	%rd1606, %rd828, %rd827;
	add.s64 	%rd829, %rd1606, %rd720;
	xor.b64  	%rd830, %rd781, %rd751;
	and.b64  	%rd831, %rd811, %rd830;
	xor.b64  	%rd832, %rd831, %rd751;
	add.s64 	%rd833, %rd829, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r552,%dummy}, %rd811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd811;
	}
	shf.r.wrap.b32 	%r554, %r553, %r552, 14;
	shf.r.wrap.b32 	%r555, %r552, %r553, 14;
	mov.b64 	%rd834, {%r555, %r554};
	shf.r.wrap.b32 	%r556, %r553, %r552, 18;
	shf.r.wrap.b32 	%r557, %r552, %r553, 18;
	mov.b64 	%rd835, {%r557, %r556};
	xor.b64  	%rd836, %rd834, %rd835;
	shf.l.wrap.b32 	%r558, %r552, %r553, 23;
	shf.l.wrap.b32 	%r559, %r553, %r552, 23;
	mov.b64 	%rd837, {%r559, %r558};
	xor.b64  	%rd838, %rd836, %rd837;
	add.s64 	%rd839, %rd833, %rd838;
	add.s64 	%rd840, %rd839, -5763719355590565569;
	add.s64 	%rd841, %rd840, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r561}, %rd822;
	}
	shf.r.wrap.b32 	%r562, %r561, %r560, 28;
	shf.r.wrap.b32 	%r563, %r560, %r561, 28;
	mov.b64 	%rd842, {%r563, %r562};
	shf.l.wrap.b32 	%r564, %r560, %r561, 30;
	shf.l.wrap.b32 	%r565, %r561, %r560, 30;
	mov.b64 	%rd843, {%r565, %r564};
	xor.b64  	%rd844, %rd842, %rd843;
	shf.l.wrap.b32 	%r566, %r560, %r561, 25;
	shf.l.wrap.b32 	%r567, %r561, %r560, 25;
	mov.b64 	%rd845, {%r567, %r566};
	xor.b64  	%rd846, %rd844, %rd845;
	and.b64  	%rd847, %rd822, %rd792;
	or.b64  	%rd848, %rd822, %rd792;
	and.b64  	%rd849, %rd848, %rd762;
	or.b64  	%rd850, %rd849, %rd847;
	add.s64 	%rd851, %rd850, %rd846;
	add.s64 	%rd852, %rd851, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd1609;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 19;
	shf.r.wrap.b32 	%r571, %r568, %r569, 19;
	mov.b64 	%rd853, {%r571, %r570};
	shf.l.wrap.b32 	%r572, %r568, %r569, 3;
	shf.l.wrap.b32 	%r573, %r569, %r568, 3;
	mov.b64 	%rd854, {%r573, %r572};
	xor.b64  	%rd855, %rd853, %rd854;
	shr.u64 	%rd856, %rd1609, 6;
	xor.b64  	%rd857, %rd855, %rd856;
	add.s64 	%rd858, %rd1603, %rd13;
	add.s64 	%rd1604, %rd858, %rd857;
	add.s64 	%rd859, %rd1604, %rd751;
	xor.b64  	%rd860, %rd811, %rd781;
	and.b64  	%rd861, %rd841, %rd860;
	xor.b64  	%rd862, %rd861, %rd781;
	add.s64 	%rd863, %rd859, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r574,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r575}, %rd841;
	}
	shf.r.wrap.b32 	%r576, %r575, %r574, 14;
	shf.r.wrap.b32 	%r577, %r574, %r575, 14;
	mov.b64 	%rd864, {%r577, %r576};
	shf.r.wrap.b32 	%r578, %r575, %r574, 18;
	shf.r.wrap.b32 	%r579, %r574, %r575, 18;
	mov.b64 	%rd865, {%r579, %r578};
	xor.b64  	%rd866, %rd864, %rd865;
	shf.l.wrap.b32 	%r580, %r574, %r575, 23;
	shf.l.wrap.b32 	%r581, %r575, %r574, 23;
	mov.b64 	%rd867, {%r581, %r580};
	xor.b64  	%rd868, %rd866, %rd867;
	add.s64 	%rd869, %rd863, %rd868;
	add.s64 	%rd870, %rd869, -4658551843659510044;
	add.s64 	%rd871, %rd870, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r582,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r583}, %rd852;
	}
	shf.r.wrap.b32 	%r584, %r583, %r582, 28;
	shf.r.wrap.b32 	%r585, %r582, %r583, 28;
	mov.b64 	%rd872, {%r585, %r584};
	shf.l.wrap.b32 	%r586, %r582, %r583, 30;
	shf.l.wrap.b32 	%r587, %r583, %r582, 30;
	mov.b64 	%rd873, {%r587, %r586};
	xor.b64  	%rd874, %rd872, %rd873;
	shf.l.wrap.b32 	%r588, %r582, %r583, 25;
	shf.l.wrap.b32 	%r589, %r583, %r582, 25;
	mov.b64 	%rd875, {%r589, %r588};
	xor.b64  	%rd876, %rd874, %rd875;
	and.b64  	%rd877, %rd852, %rd822;
	or.b64  	%rd878, %rd852, %rd822;
	and.b64  	%rd879, %rd878, %rd792;
	or.b64  	%rd880, %rd879, %rd877;
	add.s64 	%rd881, %rd880, %rd876;
	add.s64 	%rd882, %rd881, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd1606;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 19;
	shf.r.wrap.b32 	%r593, %r590, %r591, 19;
	mov.b64 	%rd883, {%r593, %r592};
	shf.l.wrap.b32 	%r594, %r590, %r591, 3;
	shf.l.wrap.b32 	%r595, %r591, %r590, 3;
	mov.b64 	%rd884, {%r595, %r594};
	xor.b64  	%rd885, %rd883, %rd884;
	shr.u64 	%rd886, %rd1606, 6;
	xor.b64  	%rd887, %rd885, %rd886;
	add.s64 	%rd888, %rd1601, %rd13;
	add.s64 	%rd1602, %rd888, %rd887;
	add.s64 	%rd889, %rd1602, %rd781;
	xor.b64  	%rd890, %rd841, %rd811;
	and.b64  	%rd891, %rd871, %rd890;
	xor.b64  	%rd892, %rd891, %rd811;
	add.s64 	%rd893, %rd889, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd871;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd894, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd895, {%r601, %r600};
	xor.b64  	%rd896, %rd894, %rd895;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd897, {%r603, %r602};
	xor.b64  	%rd898, %rd896, %rd897;
	add.s64 	%rd899, %rd893, %rd898;
	add.s64 	%rd900, %rd899, -4116276920077217854;
	add.s64 	%rd1620, %rd900, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd882;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd901, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd902, {%r609, %r608};
	xor.b64  	%rd903, %rd901, %rd902;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd904, {%r611, %r610};
	xor.b64  	%rd905, %rd903, %rd904;
	and.b64  	%rd906, %rd882, %rd852;
	or.b64  	%rd907, %rd882, %rd852;
	and.b64  	%rd908, %rd907, %rd822;
	or.b64  	%rd909, %rd908, %rd906;
	add.s64 	%rd910, %rd909, %rd905;
	add.s64 	%rd1616, %rd910, %rd900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd1604;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 19;
	shf.r.wrap.b32 	%r615, %r612, %r613, 19;
	mov.b64 	%rd911, {%r615, %r614};
	shf.l.wrap.b32 	%r616, %r612, %r613, 3;
	shf.l.wrap.b32 	%r617, %r613, %r612, 3;
	mov.b64 	%rd912, {%r617, %r616};
	xor.b64  	%rd913, %rd911, %rd912;
	shr.u64 	%rd914, %rd1604, 6;
	xor.b64  	%rd915, %rd913, %rd914;
	add.s64 	%rd916, %rd1599, %rd13;
	add.s64 	%rd1600, %rd916, %rd915;
	add.s64 	%rd917, %rd1600, %rd811;
	xor.b64  	%rd918, %rd871, %rd841;
	and.b64  	%rd919, %rd1620, %rd918;
	xor.b64  	%rd920, %rd919, %rd841;
	add.s64 	%rd921, %rd917, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd1620;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 14;
	shf.r.wrap.b32 	%r621, %r618, %r619, 14;
	mov.b64 	%rd922, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 18;
	shf.r.wrap.b32 	%r623, %r618, %r619, 18;
	mov.b64 	%rd923, {%r623, %r622};
	xor.b64  	%rd924, %rd922, %rd923;
	shf.l.wrap.b32 	%r624, %r618, %r619, 23;
	shf.l.wrap.b32 	%r625, %r619, %r618, 23;
	mov.b64 	%rd925, {%r625, %r624};
	xor.b64  	%rd926, %rd924, %rd925;
	add.s64 	%rd927, %rd921, %rd926;
	add.s64 	%rd928, %rd927, -3051310485924567259;
	add.s64 	%rd1619, %rd928, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd1616;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 28;
	shf.r.wrap.b32 	%r629, %r626, %r627, 28;
	mov.b64 	%rd929, {%r629, %r628};
	shf.l.wrap.b32 	%r630, %r626, %r627, 30;
	shf.l.wrap.b32 	%r631, %r627, %r626, 30;
	mov.b64 	%rd930, {%r631, %r630};
	xor.b64  	%rd931, %rd929, %rd930;
	shf.l.wrap.b32 	%r632, %r626, %r627, 25;
	shf.l.wrap.b32 	%r633, %r627, %r626, 25;
	mov.b64 	%rd932, {%r633, %r632};
	xor.b64  	%rd933, %rd931, %rd932;
	and.b64  	%rd934, %rd1616, %rd882;
	or.b64  	%rd935, %rd1616, %rd882;
	and.b64  	%rd936, %rd935, %rd852;
	or.b64  	%rd937, %rd936, %rd934;
	add.s64 	%rd938, %rd937, %rd933;
	add.s64 	%rd1615, %rd938, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd1602;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 19;
	shf.r.wrap.b32 	%r637, %r634, %r635, 19;
	mov.b64 	%rd939, {%r637, %r636};
	shf.l.wrap.b32 	%r638, %r634, %r635, 3;
	shf.l.wrap.b32 	%r639, %r635, %r634, 3;
	mov.b64 	%rd940, {%r639, %r638};
	xor.b64  	%rd941, %rd939, %rd940;
	shr.u64 	%rd942, %rd1602, 6;
	xor.b64  	%rd943, %rd941, %rd942;
	add.s64 	%rd944, %rd943, %rd1598;
	add.s64 	%rd1612, %rd944, %rd17;
	add.s64 	%rd945, %rd1612, %rd841;
	xor.b64  	%rd946, %rd1620, %rd871;
	and.b64  	%rd947, %rd1619, %rd946;
	xor.b64  	%rd948, %rd947, %rd871;
	add.s64 	%rd949, %rd945, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd1619;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 14;
	shf.r.wrap.b32 	%r643, %r640, %r641, 14;
	mov.b64 	%rd950, {%r643, %r642};
	shf.r.wrap.b32 	%r644, %r641, %r640, 18;
	shf.r.wrap.b32 	%r645, %r640, %r641, 18;
	mov.b64 	%rd951, {%r645, %r644};
	xor.b64  	%rd952, %rd950, %rd951;
	shf.l.wrap.b32 	%r646, %r640, %r641, 23;
	shf.l.wrap.b32 	%r647, %r641, %r640, 23;
	mov.b64 	%rd953, {%r647, %r646};
	xor.b64  	%rd954, %rd952, %rd953;
	add.s64 	%rd955, %rd949, %rd954;
	add.s64 	%rd956, %rd955, 489312712824947311;
	add.s64 	%rd1618, %rd956, %rd852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd1615;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 28;
	shf.r.wrap.b32 	%r651, %r648, %r649, 28;
	mov.b64 	%rd957, {%r651, %r650};
	shf.l.wrap.b32 	%r652, %r648, %r649, 30;
	shf.l.wrap.b32 	%r653, %r649, %r648, 30;
	mov.b64 	%rd958, {%r653, %r652};
	xor.b64  	%rd959, %rd957, %rd958;
	shf.l.wrap.b32 	%r654, %r648, %r649, 25;
	shf.l.wrap.b32 	%r655, %r649, %r648, 25;
	mov.b64 	%rd960, {%r655, %r654};
	xor.b64  	%rd961, %rd959, %rd960;
	and.b64  	%rd962, %rd1615, %rd1616;
	or.b64  	%rd963, %rd1615, %rd1616;
	and.b64  	%rd964, %rd963, %rd882;
	or.b64  	%rd965, %rd964, %rd962;
	add.s64 	%rd966, %rd965, %rd961;
	add.s64 	%rd1614, %rd966, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r656,%dummy}, %rd1600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd1600;
	}
	shf.r.wrap.b32 	%r658, %r657, %r656, 19;
	shf.r.wrap.b32 	%r659, %r656, %r657, 19;
	mov.b64 	%rd967, {%r659, %r658};
	shf.l.wrap.b32 	%r660, %r656, %r657, 3;
	shf.l.wrap.b32 	%r661, %r657, %r656, 3;
	mov.b64 	%rd968, {%r661, %r660};
	xor.b64  	%rd969, %rd967, %rd968;
	shr.u64 	%rd970, %rd1600, 6;
	xor.b64  	%rd971, %rd969, %rd970;
	shf.r.wrap.b32 	%r662, %r341, %r340, 1;
	shf.r.wrap.b32 	%r663, %r340, %r341, 1;
	mov.b64 	%rd972, {%r663, %r662};
	shf.r.wrap.b32 	%r664, %r341, %r340, 8;
	shf.r.wrap.b32 	%r665, %r340, %r341, 8;
	mov.b64 	%rd973, {%r665, %r664};
	xor.b64  	%rd974, %rd972, %rd973;
	shr.u64 	%rd975, %rd1610, 7;
	xor.b64  	%rd976, %rd974, %rd975;
	add.s64 	%rd977, %rd971, %rd1597;
	add.s64 	%rd978, %rd977, %rd976;
	add.s64 	%rd1608, %rd978, 512;
	add.s64 	%rd979, %rd1608, %rd871;
	xor.b64  	%rd980, %rd1619, %rd1620;
	and.b64  	%rd981, %rd1618, %rd980;
	xor.b64  	%rd982, %rd981, %rd1620;
	add.s64 	%rd983, %rd979, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd1618;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 14;
	shf.r.wrap.b32 	%r669, %r666, %r667, 14;
	mov.b64 	%rd984, {%r669, %r668};
	shf.r.wrap.b32 	%r670, %r667, %r666, 18;
	shf.r.wrap.b32 	%r671, %r666, %r667, 18;
	mov.b64 	%rd985, {%r671, %r670};
	xor.b64  	%rd986, %rd984, %rd985;
	shf.l.wrap.b32 	%r672, %r666, %r667, 23;
	shf.l.wrap.b32 	%r673, %r667, %r666, 23;
	mov.b64 	%rd987, {%r673, %r672};
	xor.b64  	%rd988, %rd986, %rd987;
	add.s64 	%rd989, %rd983, %rd988;
	add.s64 	%rd990, %rd989, 1452737877330783856;
	add.s64 	%rd1617, %rd990, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd1614;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 28;
	shf.r.wrap.b32 	%r677, %r674, %r675, 28;
	mov.b64 	%rd991, {%r677, %r676};
	shf.l.wrap.b32 	%r678, %r674, %r675, 30;
	shf.l.wrap.b32 	%r679, %r675, %r674, 30;
	mov.b64 	%rd992, {%r679, %r678};
	xor.b64  	%rd993, %rd991, %rd992;
	shf.l.wrap.b32 	%r680, %r674, %r675, 25;
	shf.l.wrap.b32 	%r681, %r675, %r674, 25;
	mov.b64 	%rd994, {%r681, %r680};
	xor.b64  	%rd995, %rd993, %rd994;
	and.b64  	%rd996, %rd1614, %rd1615;
	or.b64  	%rd997, %rd1614, %rd1615;
	and.b64  	%rd998, %rd997, %rd1616;
	or.b64  	%rd999, %rd998, %rd996;
	add.s64 	%rd1000, %rd999, %rd995;
	add.s64 	%rd1613, %rd1000, %rd990;
	mov.u32 	%r1132, 32;
	mov.u64 	%rd1596, K;

$L__BB2_3:
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r683,%dummy}, %rd1612;
	}
	shf.l.wrap.b32 	%r684, %r683, %r682, 3;
	shf.l.wrap.b32 	%r685, %r682, %r683, 3;
	mov.b64 	%rd1001, {%r685, %r684};
	shf.r.wrap.b32 	%r686, %r682, %r683, 19;
	shf.r.wrap.b32 	%r687, %r683, %r682, 19;
	mov.b64 	%rd1002, {%r687, %r686};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shr.u64 	%rd1004, %rd1612, 6;
	xor.b64  	%rd1005, %rd1003, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd1611;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 8;
	shf.r.wrap.b32 	%r691, %r688, %r689, 8;
	mov.b64 	%rd1006, {%r691, %r690};
	shf.r.wrap.b32 	%r692, %r689, %r688, 1;
	shf.r.wrap.b32 	%r693, %r688, %r689, 1;
	mov.b64 	%rd1007, {%r693, %r692};
	xor.b64  	%rd1008, %rd1007, %rd1006;
	shr.u64 	%rd1009, %rd1611, 7;
	xor.b64  	%rd1010, %rd1008, %rd1009;
	add.s64 	%rd1011, %rd1005, %rd1610;
	add.s64 	%rd1012, %rd1011, %rd1609;
	add.s64 	%rd1610, %rd1012, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r694,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r695}, %rd1617;
	}
	shf.r.wrap.b32 	%r696, %r695, %r694, 18;
	shf.r.wrap.b32 	%r697, %r694, %r695, 18;
	mov.b64 	%rd1013, {%r697, %r696};
	shf.r.wrap.b32 	%r698, %r695, %r694, 14;
	shf.r.wrap.b32 	%r699, %r694, %r695, 14;
	mov.b64 	%rd1014, {%r699, %r698};
	xor.b64  	%rd1015, %rd1014, %rd1013;
	shf.l.wrap.b32 	%r700, %r694, %r695, 23;
	shf.l.wrap.b32 	%r701, %r695, %r694, 23;
	mov.b64 	%rd1016, {%r701, %r700};
	xor.b64  	%rd1017, %rd1015, %rd1016;
	xor.b64  	%rd1018, %rd1618, %rd1619;
	and.b64  	%rd1019, %rd1617, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd1619;
	add.s64 	%rd1021, %rd1020, %rd1620;
	add.s64 	%rd1022, %rd1021, %rd1017;
	ld.const.u64 	%rd1023, [%rd1596+256];
	add.s64 	%rd1024, %rd1022, %rd1023;
	add.s64 	%rd1025, %rd1024, %rd1610;
	add.s64 	%rd1026, %rd1025, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1613;
	}
	shf.l.wrap.b32 	%r704, %r703, %r702, 30;
	shf.l.wrap.b32 	%r705, %r702, %r703, 30;
	mov.b64 	%rd1027, {%r705, %r704};
	shf.r.wrap.b32 	%r706, %r702, %r703, 28;
	shf.r.wrap.b32 	%r707, %r703, %r702, 28;
	mov.b64 	%rd1028, {%r707, %r706};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r708, %r703, %r702, 25;
	shf.l.wrap.b32 	%r709, %r702, %r703, 25;
	mov.b64 	%rd1030, {%r709, %r708};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	or.b64  	%rd1032, %rd1613, %rd1614;
	and.b64  	%rd1033, %rd1032, %rd1615;
	and.b64  	%rd1034, %rd1613, %rd1614;
	or.b64  	%rd1035, %rd1033, %rd1034;
	add.s64 	%rd1036, %rd1035, %rd1031;
	add.s64 	%rd1037, %rd1036, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd1608;
	}
	shf.l.wrap.b32 	%r712, %r711, %r710, 3;
	shf.l.wrap.b32 	%r713, %r710, %r711, 3;
	mov.b64 	%rd1038, {%r713, %r712};
	shf.r.wrap.b32 	%r714, %r710, %r711, 19;
	shf.r.wrap.b32 	%r715, %r711, %r710, 19;
	mov.b64 	%rd1039, {%r715, %r714};
	xor.b64  	%rd1040, %rd1039, %rd1038;
	shr.u64 	%rd1041, %rd1608, 6;
	xor.b64  	%rd1042, %rd1040, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1607;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 8;
	shf.r.wrap.b32 	%r719, %r716, %r717, 8;
	mov.b64 	%rd1043, {%r719, %r718};
	shf.r.wrap.b32 	%r720, %r717, %r716, 1;
	shf.r.wrap.b32 	%r721, %r716, %r717, 1;
	mov.b64 	%rd1044, {%r721, %r720};
	xor.b64  	%rd1045, %rd1044, %rd1043;
	shr.u64 	%rd1046, %rd1607, 7;
	xor.b64  	%rd1047, %rd1045, %rd1046;
	add.s64 	%rd1048, %rd1042, %rd1611;
	add.s64 	%rd1049, %rd1048, %rd1606;
	add.s64 	%rd1611, %rd1049, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r723}, %rd1026;
	}
	shf.r.wrap.b32 	%r724, %r723, %r722, 14;
	shf.r.wrap.b32 	%r725, %r722, %r723, 14;
	mov.b64 	%rd1050, {%r725, %r724};
	shf.r.wrap.b32 	%r726, %r723, %r722, 18;
	shf.r.wrap.b32 	%r727, %r722, %r723, 18;
	mov.b64 	%rd1051, {%r727, %r726};
	xor.b64  	%rd1052, %rd1050, %rd1051;
	shf.l.wrap.b32 	%r728, %r722, %r723, 23;
	shf.l.wrap.b32 	%r729, %r723, %r722, 23;
	mov.b64 	%rd1053, {%r729, %r728};
	xor.b64  	%rd1054, %rd1052, %rd1053;
	xor.b64  	%rd1055, %rd1617, %rd1618;
	and.b64  	%rd1056, %rd1026, %rd1055;
	xor.b64  	%rd1057, %rd1056, %rd1618;
	ld.const.u64 	%rd1058, [%rd1596+264];
	add.s64 	%rd1059, %rd1058, %rd1619;
	add.s64 	%rd1060, %rd1059, %rd1611;
	add.s64 	%rd1061, %rd1060, %rd1057;
	add.s64 	%rd1062, %rd1061, %rd1054;
	add.s64 	%rd1063, %rd1062, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd1037;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 28;
	shf.r.wrap.b32 	%r733, %r730, %r731, 28;
	mov.b64 	%rd1064, {%r733, %r732};
	shf.l.wrap.b32 	%r734, %r730, %r731, 30;
	shf.l.wrap.b32 	%r735, %r731, %r730, 30;
	mov.b64 	%rd1065, {%r735, %r734};
	xor.b64  	%rd1066, %rd1064, %rd1065;
	shf.l.wrap.b32 	%r736, %r730, %r731, 25;
	shf.l.wrap.b32 	%r737, %r731, %r730, 25;
	mov.b64 	%rd1067, {%r737, %r736};
	xor.b64  	%rd1068, %rd1066, %rd1067;
	and.b64  	%rd1069, %rd1037, %rd1613;
	or.b64  	%rd1070, %rd1037, %rd1613;
	and.b64  	%rd1071, %rd1070, %rd1614;
	or.b64  	%rd1072, %rd1071, %rd1069;
	add.s64 	%rd1073, %rd1072, %rd1068;
	add.s64 	%rd1074, %rd1073, %rd1062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r738,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r739}, %rd1610;
	}
	shf.r.wrap.b32 	%r740, %r739, %r738, 19;
	shf.r.wrap.b32 	%r741, %r738, %r739, 19;
	mov.b64 	%rd1075, {%r741, %r740};
	shf.l.wrap.b32 	%r742, %r738, %r739, 3;
	shf.l.wrap.b32 	%r743, %r739, %r738, 3;
	mov.b64 	%rd1076, {%r743, %r742};
	xor.b64  	%rd1077, %rd1075, %rd1076;
	shr.u64 	%rd1078, %rd1610, 6;
	xor.b64  	%rd1079, %rd1077, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r744,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1605;
	}
	shf.r.wrap.b32 	%r746, %r745, %r744, 8;
	shf.r.wrap.b32 	%r747, %r744, %r745, 8;
	mov.b64 	%rd1080, {%r747, %r746};
	shf.r.wrap.b32 	%r748, %r745, %r744, 1;
	shf.r.wrap.b32 	%r749, %r744, %r745, 1;
	mov.b64 	%rd1081, {%r749, %r748};
	xor.b64  	%rd1082, %rd1081, %rd1080;
	shr.u64 	%rd1083, %rd1605, 7;
	xor.b64  	%rd1084, %rd1082, %rd1083;
	add.s64 	%rd1085, %rd1079, %rd1607;
	add.s64 	%rd1086, %rd1085, %rd1604;
	add.s64 	%rd1607, %rd1086, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r750,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r751}, %rd1063;
	}
	shf.r.wrap.b32 	%r752, %r751, %r750, 14;
	shf.r.wrap.b32 	%r753, %r750, %r751, 14;
	mov.b64 	%rd1087, {%r753, %r752};
	shf.r.wrap.b32 	%r754, %r751, %r750, 18;
	shf.r.wrap.b32 	%r755, %r750, %r751, 18;
	mov.b64 	%rd1088, {%r755, %r754};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	shf.l.wrap.b32 	%r756, %r750, %r751, 23;
	shf.l.wrap.b32 	%r757, %r751, %r750, 23;
	mov.b64 	%rd1090, {%r757, %r756};
	xor.b64  	%rd1091, %rd1089, %rd1090;
	xor.b64  	%rd1092, %rd1026, %rd1617;
	and.b64  	%rd1093, %rd1063, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1617;
	ld.const.u64 	%rd1095, [%rd1596+272];
	add.s64 	%rd1096, %rd1095, %rd1618;
	add.s64 	%rd1097, %rd1096, %rd1607;
	add.s64 	%rd1098, %rd1097, %rd1094;
	add.s64 	%rd1099, %rd1098, %rd1091;
	add.s64 	%rd1100, %rd1099, %rd1614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r758,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r759}, %rd1074;
	}
	shf.r.wrap.b32 	%r760, %r759, %r758, 28;
	shf.r.wrap.b32 	%r761, %r758, %r759, 28;
	mov.b64 	%rd1101, {%r761, %r760};
	shf.l.wrap.b32 	%r762, %r758, %r759, 30;
	shf.l.wrap.b32 	%r763, %r759, %r758, 30;
	mov.b64 	%rd1102, {%r763, %r762};
	xor.b64  	%rd1103, %rd1101, %rd1102;
	shf.l.wrap.b32 	%r764, %r758, %r759, 25;
	shf.l.wrap.b32 	%r765, %r759, %r758, 25;
	mov.b64 	%rd1104, {%r765, %r764};
	xor.b64  	%rd1105, %rd1103, %rd1104;
	and.b64  	%rd1106, %rd1074, %rd1037;
	or.b64  	%rd1107, %rd1074, %rd1037;
	and.b64  	%rd1108, %rd1107, %rd1613;
	or.b64  	%rd1109, %rd1108, %rd1106;
	add.s64 	%rd1110, %rd1109, %rd1105;
	add.s64 	%rd1111, %rd1110, %rd1099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r766,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r767}, %rd1611;
	}
	shf.r.wrap.b32 	%r768, %r767, %r766, 19;
	shf.r.wrap.b32 	%r769, %r766, %r767, 19;
	mov.b64 	%rd1112, {%r769, %r768};
	shf.l.wrap.b32 	%r770, %r766, %r767, 3;
	shf.l.wrap.b32 	%r771, %r767, %r766, 3;
	mov.b64 	%rd1113, {%r771, %r770};
	xor.b64  	%rd1114, %rd1112, %rd1113;
	shr.u64 	%rd1115, %rd1611, 6;
	xor.b64  	%rd1116, %rd1114, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1603;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 8;
	shf.r.wrap.b32 	%r775, %r772, %r773, 8;
	mov.b64 	%rd1117, {%r775, %r774};
	shf.r.wrap.b32 	%r776, %r773, %r772, 1;
	shf.r.wrap.b32 	%r777, %r772, %r773, 1;
	mov.b64 	%rd1118, {%r777, %r776};
	xor.b64  	%rd1119, %rd1118, %rd1117;
	shr.u64 	%rd1120, %rd1603, 7;
	xor.b64  	%rd1121, %rd1119, %rd1120;
	add.s64 	%rd1122, %rd1116, %rd1605;
	add.s64 	%rd1123, %rd1122, %rd1602;
	add.s64 	%rd1605, %rd1123, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r779}, %rd1100;
	}
	shf.r.wrap.b32 	%r780, %r779, %r778, 14;
	shf.r.wrap.b32 	%r781, %r778, %r779, 14;
	mov.b64 	%rd1124, {%r781, %r780};
	shf.r.wrap.b32 	%r782, %r779, %r778, 18;
	shf.r.wrap.b32 	%r783, %r778, %r779, 18;
	mov.b64 	%rd1125, {%r783, %r782};
	xor.b64  	%rd1126, %rd1124, %rd1125;
	shf.l.wrap.b32 	%r784, %r778, %r779, 23;
	shf.l.wrap.b32 	%r785, %r779, %r778, 23;
	mov.b64 	%rd1127, {%r785, %r784};
	xor.b64  	%rd1128, %rd1126, %rd1127;
	xor.b64  	%rd1129, %rd1063, %rd1026;
	and.b64  	%rd1130, %rd1100, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1026;
	ld.const.u64 	%rd1132, [%rd1596+280];
	add.s64 	%rd1133, %rd1132, %rd1617;
	add.s64 	%rd1134, %rd1133, %rd1605;
	add.s64 	%rd1135, %rd1134, %rd1131;
	add.s64 	%rd1136, %rd1135, %rd1128;
	add.s64 	%rd1137, %rd1136, %rd1613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r787}, %rd1111;
	}
	shf.r.wrap.b32 	%r788, %r787, %r786, 28;
	shf.r.wrap.b32 	%r789, %r786, %r787, 28;
	mov.b64 	%rd1138, {%r789, %r788};
	shf.l.wrap.b32 	%r790, %r786, %r787, 30;
	shf.l.wrap.b32 	%r791, %r787, %r786, 30;
	mov.b64 	%rd1139, {%r791, %r790};
	xor.b64  	%rd1140, %rd1138, %rd1139;
	shf.l.wrap.b32 	%r792, %r786, %r787, 25;
	shf.l.wrap.b32 	%r793, %r787, %r786, 25;
	mov.b64 	%rd1141, {%r793, %r792};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	and.b64  	%rd1143, %rd1111, %rd1074;
	or.b64  	%rd1144, %rd1111, %rd1074;
	and.b64  	%rd1145, %rd1144, %rd1037;
	or.b64  	%rd1146, %rd1145, %rd1143;
	add.s64 	%rd1147, %rd1146, %rd1142;
	add.s64 	%rd1148, %rd1147, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r794,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r795}, %rd1607;
	}
	shf.r.wrap.b32 	%r796, %r795, %r794, 19;
	shf.r.wrap.b32 	%r797, %r794, %r795, 19;
	mov.b64 	%rd1149, {%r797, %r796};
	shf.l.wrap.b32 	%r798, %r794, %r795, 3;
	shf.l.wrap.b32 	%r799, %r795, %r794, 3;
	mov.b64 	%rd1150, {%r799, %r798};
	xor.b64  	%rd1151, %rd1149, %rd1150;
	shr.u64 	%rd1152, %rd1607, 6;
	xor.b64  	%rd1153, %rd1151, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r800,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r801}, %rd1601;
	}
	shf.r.wrap.b32 	%r802, %r801, %r800, 8;
	shf.r.wrap.b32 	%r803, %r800, %r801, 8;
	mov.b64 	%rd1154, {%r803, %r802};
	shf.r.wrap.b32 	%r804, %r801, %r800, 1;
	shf.r.wrap.b32 	%r805, %r800, %r801, 1;
	mov.b64 	%rd1155, {%r805, %r804};
	xor.b64  	%rd1156, %rd1155, %rd1154;
	shr.u64 	%rd1157, %rd1601, 7;
	xor.b64  	%rd1158, %rd1156, %rd1157;
	add.s64 	%rd1159, %rd1153, %rd1603;
	add.s64 	%rd1160, %rd1159, %rd1600;
	add.s64 	%rd1603, %rd1160, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd1137;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 14;
	shf.r.wrap.b32 	%r809, %r806, %r807, 14;
	mov.b64 	%rd1161, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r807, %r806, 18;
	shf.r.wrap.b32 	%r811, %r806, %r807, 18;
	mov.b64 	%rd1162, {%r811, %r810};
	xor.b64  	%rd1163, %rd1161, %rd1162;
	shf.l.wrap.b32 	%r812, %r806, %r807, 23;
	shf.l.wrap.b32 	%r813, %r807, %r806, 23;
	mov.b64 	%rd1164, {%r813, %r812};
	xor.b64  	%rd1165, %rd1163, %rd1164;
	xor.b64  	%rd1166, %rd1100, %rd1063;
	and.b64  	%rd1167, %rd1137, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1063;
	ld.const.u64 	%rd1169, [%rd1596+288];
	add.s64 	%rd1170, %rd1169, %rd1026;
	add.s64 	%rd1171, %rd1170, %rd1603;
	add.s64 	%rd1172, %rd1171, %rd1168;
	add.s64 	%rd1173, %rd1172, %rd1165;
	add.s64 	%rd1174, %rd1173, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd1148;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 28;
	shf.r.wrap.b32 	%r817, %r814, %r815, 28;
	mov.b64 	%rd1175, {%r817, %r816};
	shf.l.wrap.b32 	%r818, %r814, %r815, 30;
	shf.l.wrap.b32 	%r819, %r815, %r814, 30;
	mov.b64 	%rd1176, {%r819, %r818};
	xor.b64  	%rd1177, %rd1175, %rd1176;
	shf.l.wrap.b32 	%r820, %r814, %r815, 25;
	shf.l.wrap.b32 	%r821, %r815, %r814, 25;
	mov.b64 	%rd1178, {%r821, %r820};
	xor.b64  	%rd1179, %rd1177, %rd1178;
	and.b64  	%rd1180, %rd1148, %rd1111;
	or.b64  	%rd1181, %rd1148, %rd1111;
	and.b64  	%rd1182, %rd1181, %rd1074;
	or.b64  	%rd1183, %rd1182, %rd1180;
	add.s64 	%rd1184, %rd1183, %rd1179;
	add.s64 	%rd1185, %rd1184, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd1605;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 19;
	shf.r.wrap.b32 	%r825, %r822, %r823, 19;
	mov.b64 	%rd1186, {%r825, %r824};
	shf.l.wrap.b32 	%r826, %r822, %r823, 3;
	shf.l.wrap.b32 	%r827, %r823, %r822, 3;
	mov.b64 	%rd1187, {%r827, %r826};
	xor.b64  	%rd1188, %rd1186, %rd1187;
	shr.u64 	%rd1189, %rd1605, 6;
	xor.b64  	%rd1190, %rd1188, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r828,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd1599;
	}
	shf.r.wrap.b32 	%r830, %r829, %r828, 8;
	shf.r.wrap.b32 	%r831, %r828, %r829, 8;
	mov.b64 	%rd1191, {%r831, %r830};
	shf.r.wrap.b32 	%r832, %r829, %r828, 1;
	shf.r.wrap.b32 	%r833, %r828, %r829, 1;
	mov.b64 	%rd1192, {%r833, %r832};
	xor.b64  	%rd1193, %rd1192, %rd1191;
	shr.u64 	%rd1194, %rd1599, 7;
	xor.b64  	%rd1195, %rd1193, %rd1194;
	add.s64 	%rd1196, %rd1190, %rd1601;
	add.s64 	%rd1197, %rd1196, %rd1612;
	add.s64 	%rd1601, %rd1197, %rd1195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r834,%dummy}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r835}, %rd1174;
	}
	shf.r.wrap.b32 	%r836, %r835, %r834, 14;
	shf.r.wrap.b32 	%r837, %r834, %r835, 14;
	mov.b64 	%rd1198, {%r837, %r836};
	shf.r.wrap.b32 	%r838, %r835, %r834, 18;
	shf.r.wrap.b32 	%r839, %r834, %r835, 18;
	mov.b64 	%rd1199, {%r839, %r838};
	xor.b64  	%rd1200, %rd1198, %rd1199;
	shf.l.wrap.b32 	%r840, %r834, %r835, 23;
	shf.l.wrap.b32 	%r841, %r835, %r834, 23;
	mov.b64 	%rd1201, {%r841, %r840};
	xor.b64  	%rd1202, %rd1200, %rd1201;
	xor.b64  	%rd1203, %rd1137, %rd1100;
	and.b64  	%rd1204, %rd1174, %rd1203;
	xor.b64  	%rd1205, %rd1204, %rd1100;
	ld.const.u64 	%rd1206, [%rd1596+296];
	add.s64 	%rd1207, %rd1206, %rd1063;
	add.s64 	%rd1208, %rd1207, %rd1601;
	add.s64 	%rd1209, %rd1208, %rd1205;
	add.s64 	%rd1210, %rd1209, %rd1202;
	add.s64 	%rd1211, %rd1210, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r843}, %rd1185;
	}
	shf.r.wrap.b32 	%r844, %r843, %r842, 28;
	shf.r.wrap.b32 	%r845, %r842, %r843, 28;
	mov.b64 	%rd1212, {%r845, %r844};
	shf.l.wrap.b32 	%r846, %r842, %r843, 30;
	shf.l.wrap.b32 	%r847, %r843, %r842, 30;
	mov.b64 	%rd1213, {%r847, %r846};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	shf.l.wrap.b32 	%r848, %r842, %r843, 25;
	shf.l.wrap.b32 	%r849, %r843, %r842, 25;
	mov.b64 	%rd1215, {%r849, %r848};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	and.b64  	%rd1217, %rd1185, %rd1148;
	or.b64  	%rd1218, %rd1185, %rd1148;
	and.b64  	%rd1219, %rd1218, %rd1111;
	or.b64  	%rd1220, %rd1219, %rd1217;
	add.s64 	%rd1221, %rd1220, %rd1216;
	add.s64 	%rd1222, %rd1221, %rd1210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r851}, %rd1603;
	}
	shf.r.wrap.b32 	%r852, %r851, %r850, 19;
	shf.r.wrap.b32 	%r853, %r850, %r851, 19;
	mov.b64 	%rd1223, {%r853, %r852};
	shf.l.wrap.b32 	%r854, %r850, %r851, 3;
	shf.l.wrap.b32 	%r855, %r851, %r850, 3;
	mov.b64 	%rd1224, {%r855, %r854};
	xor.b64  	%rd1225, %rd1223, %rd1224;
	shr.u64 	%rd1226, %rd1603, 6;
	xor.b64  	%rd1227, %rd1225, %rd1226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd1598;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 8;
	shf.r.wrap.b32 	%r859, %r856, %r857, 8;
	mov.b64 	%rd1228, {%r859, %r858};
	shf.r.wrap.b32 	%r860, %r857, %r856, 1;
	shf.r.wrap.b32 	%r861, %r856, %r857, 1;
	mov.b64 	%rd1229, {%r861, %r860};
	xor.b64  	%rd1230, %rd1229, %rd1228;
	shr.u64 	%rd1231, %rd1598, 7;
	xor.b64  	%rd1232, %rd1230, %rd1231;
	add.s64 	%rd1233, %rd1227, %rd1599;
	add.s64 	%rd1234, %rd1233, %rd1608;
	add.s64 	%rd1599, %rd1234, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd1211;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 14;
	shf.r.wrap.b32 	%r865, %r862, %r863, 14;
	mov.b64 	%rd1235, {%r865, %r864};
	shf.r.wrap.b32 	%r866, %r863, %r862, 18;
	shf.r.wrap.b32 	%r867, %r862, %r863, 18;
	mov.b64 	%rd1236, {%r867, %r866};
	xor.b64  	%rd1237, %rd1235, %rd1236;
	shf.l.wrap.b32 	%r868, %r862, %r863, 23;
	shf.l.wrap.b32 	%r869, %r863, %r862, 23;
	mov.b64 	%rd1238, {%r869, %r868};
	xor.b64  	%rd1239, %rd1237, %rd1238;
	xor.b64  	%rd1240, %rd1174, %rd1137;
	and.b64  	%rd1241, %rd1211, %rd1240;
	xor.b64  	%rd1242, %rd1241, %rd1137;
	ld.const.u64 	%rd1243, [%rd1596+304];
	add.s64 	%rd1244, %rd1243, %rd1100;
	add.s64 	%rd1245, %rd1244, %rd1599;
	add.s64 	%rd1246, %rd1245, %rd1242;
	add.s64 	%rd1247, %rd1246, %rd1239;
	add.s64 	%rd1248, %rd1247, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd1222;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 28;
	shf.r.wrap.b32 	%r873, %r870, %r871, 28;
	mov.b64 	%rd1249, {%r873, %r872};
	shf.l.wrap.b32 	%r874, %r870, %r871, 30;
	shf.l.wrap.b32 	%r875, %r871, %r870, 30;
	mov.b64 	%rd1250, {%r875, %r874};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	shf.l.wrap.b32 	%r876, %r870, %r871, 25;
	shf.l.wrap.b32 	%r877, %r871, %r870, 25;
	mov.b64 	%rd1252, {%r877, %r876};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	and.b64  	%rd1254, %rd1222, %rd1185;
	or.b64  	%rd1255, %rd1222, %rd1185;
	and.b64  	%rd1256, %rd1255, %rd1148;
	or.b64  	%rd1257, %rd1256, %rd1254;
	add.s64 	%rd1258, %rd1257, %rd1253;
	add.s64 	%rd1259, %rd1258, %rd1247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd1601;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 19;
	shf.r.wrap.b32 	%r881, %r878, %r879, 19;
	mov.b64 	%rd1260, {%r881, %r880};
	shf.l.wrap.b32 	%r882, %r878, %r879, 3;
	shf.l.wrap.b32 	%r883, %r879, %r878, 3;
	mov.b64 	%rd1261, {%r883, %r882};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	shr.u64 	%rd1263, %rd1601, 6;
	xor.b64  	%rd1264, %rd1262, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd1597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1597;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 8;
	shf.r.wrap.b32 	%r887, %r884, %r885, 8;
	mov.b64 	%rd1265, {%r887, %r886};
	shf.r.wrap.b32 	%r888, %r885, %r884, 1;
	shf.r.wrap.b32 	%r889, %r884, %r885, 1;
	mov.b64 	%rd1266, {%r889, %r888};
	xor.b64  	%rd1267, %rd1266, %rd1265;
	shr.u64 	%rd1268, %rd1597, 7;
	xor.b64  	%rd1269, %rd1267, %rd1268;
	add.s64 	%rd1270, %rd1264, %rd1598;
	add.s64 	%rd1271, %rd1270, %rd1610;
	add.s64 	%rd1598, %rd1271, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r891}, %rd1248;
	}
	shf.r.wrap.b32 	%r892, %r891, %r890, 14;
	shf.r.wrap.b32 	%r893, %r890, %r891, 14;
	mov.b64 	%rd1272, {%r893, %r892};
	shf.r.wrap.b32 	%r894, %r891, %r890, 18;
	shf.r.wrap.b32 	%r895, %r890, %r891, 18;
	mov.b64 	%rd1273, {%r895, %r894};
	xor.b64  	%rd1274, %rd1272, %rd1273;
	shf.l.wrap.b32 	%r896, %r890, %r891, 23;
	shf.l.wrap.b32 	%r897, %r891, %r890, 23;
	mov.b64 	%rd1275, {%r897, %r896};
	xor.b64  	%rd1276, %rd1274, %rd1275;
	xor.b64  	%rd1277, %rd1211, %rd1174;
	and.b64  	%rd1278, %rd1248, %rd1277;
	xor.b64  	%rd1279, %rd1278, %rd1174;
	ld.const.u64 	%rd1280, [%rd1596+312];
	add.s64 	%rd1281, %rd1280, %rd1137;
	add.s64 	%rd1282, %rd1281, %rd1598;
	add.s64 	%rd1283, %rd1282, %rd1279;
	add.s64 	%rd1284, %rd1283, %rd1276;
	add.s64 	%rd1285, %rd1284, %rd1148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r899}, %rd1259;
	}
	shf.r.wrap.b32 	%r900, %r899, %r898, 28;
	shf.r.wrap.b32 	%r901, %r898, %r899, 28;
	mov.b64 	%rd1286, {%r901, %r900};
	shf.l.wrap.b32 	%r902, %r898, %r899, 30;
	shf.l.wrap.b32 	%r903, %r899, %r898, 30;
	mov.b64 	%rd1287, {%r903, %r902};
	xor.b64  	%rd1288, %rd1286, %rd1287;
	shf.l.wrap.b32 	%r904, %r898, %r899, 25;
	shf.l.wrap.b32 	%r905, %r899, %r898, 25;
	mov.b64 	%rd1289, {%r905, %r904};
	xor.b64  	%rd1290, %rd1288, %rd1289;
	and.b64  	%rd1291, %rd1259, %rd1222;
	or.b64  	%rd1292, %rd1259, %rd1222;
	and.b64  	%rd1293, %rd1292, %rd1185;
	or.b64  	%rd1294, %rd1293, %rd1291;
	add.s64 	%rd1295, %rd1294, %rd1290;
	add.s64 	%rd1296, %rd1295, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r907}, %rd1599;
	}
	shf.r.wrap.b32 	%r908, %r907, %r906, 19;
	shf.r.wrap.b32 	%r909, %r906, %r907, 19;
	mov.b64 	%rd1297, {%r909, %r908};
	shf.l.wrap.b32 	%r910, %r906, %r907, 3;
	shf.l.wrap.b32 	%r911, %r907, %r906, 3;
	mov.b64 	%rd1298, {%r911, %r910};
	xor.b64  	%rd1299, %rd1297, %rd1298;
	shr.u64 	%rd1300, %rd1599, 6;
	xor.b64  	%rd1301, %rd1299, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r912,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r913}, %rd1609;
	}
	shf.r.wrap.b32 	%r914, %r913, %r912, 8;
	shf.r.wrap.b32 	%r915, %r912, %r913, 8;
	mov.b64 	%rd1302, {%r915, %r914};
	shf.r.wrap.b32 	%r916, %r913, %r912, 1;
	shf.r.wrap.b32 	%r917, %r912, %r913, 1;
	mov.b64 	%rd1303, {%r917, %r916};
	xor.b64  	%rd1304, %rd1303, %rd1302;
	shr.u64 	%rd1305, %rd1609, 7;
	xor.b64  	%rd1306, %rd1304, %rd1305;
	add.s64 	%rd1307, %rd1301, %rd1597;
	add.s64 	%rd1308, %rd1307, %rd1611;
	add.s64 	%rd1597, %rd1308, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd1285;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 14;
	shf.r.wrap.b32 	%r921, %r918, %r919, 14;
	mov.b64 	%rd1309, {%r921, %r920};
	shf.r.wrap.b32 	%r922, %r919, %r918, 18;
	shf.r.wrap.b32 	%r923, %r918, %r919, 18;
	mov.b64 	%rd1310, {%r923, %r922};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	shf.l.wrap.b32 	%r924, %r918, %r919, 23;
	shf.l.wrap.b32 	%r925, %r919, %r918, 23;
	mov.b64 	%rd1312, {%r925, %r924};
	xor.b64  	%rd1313, %rd1311, %rd1312;
	xor.b64  	%rd1314, %rd1248, %rd1211;
	and.b64  	%rd1315, %rd1285, %rd1314;
	xor.b64  	%rd1316, %rd1315, %rd1211;
	ld.const.u64 	%rd1317, [%rd1596+320];
	add.s64 	%rd1318, %rd1317, %rd1174;
	add.s64 	%rd1319, %rd1318, %rd1597;
	add.s64 	%rd1320, %rd1319, %rd1316;
	add.s64 	%rd1321, %rd1320, %rd1313;
	add.s64 	%rd1322, %rd1321, %rd1185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd1296;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 28;
	shf.r.wrap.b32 	%r929, %r926, %r927, 28;
	mov.b64 	%rd1323, {%r929, %r928};
	shf.l.wrap.b32 	%r930, %r926, %r927, 30;
	shf.l.wrap.b32 	%r931, %r927, %r926, 30;
	mov.b64 	%rd1324, {%r931, %r930};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	shf.l.wrap.b32 	%r932, %r926, %r927, 25;
	shf.l.wrap.b32 	%r933, %r927, %r926, 25;
	mov.b64 	%rd1326, {%r933, %r932};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	and.b64  	%rd1328, %rd1296, %rd1259;
	or.b64  	%rd1329, %rd1296, %rd1259;
	and.b64  	%rd1330, %rd1329, %rd1222;
	or.b64  	%rd1331, %rd1330, %rd1328;
	add.s64 	%rd1332, %rd1331, %rd1327;
	add.s64 	%rd1333, %rd1332, %rd1321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd1598;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 19;
	shf.r.wrap.b32 	%r937, %r934, %r935, 19;
	mov.b64 	%rd1334, {%r937, %r936};
	shf.l.wrap.b32 	%r938, %r934, %r935, 3;
	shf.l.wrap.b32 	%r939, %r935, %r934, 3;
	mov.b64 	%rd1335, {%r939, %r938};
	xor.b64  	%rd1336, %rd1334, %rd1335;
	shr.u64 	%rd1337, %rd1598, 6;
	xor.b64  	%rd1338, %rd1336, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd1606;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 8;
	shf.r.wrap.b32 	%r943, %r940, %r941, 8;
	mov.b64 	%rd1339, {%r943, %r942};
	shf.r.wrap.b32 	%r944, %r941, %r940, 1;
	shf.r.wrap.b32 	%r945, %r940, %r941, 1;
	mov.b64 	%rd1340, {%r945, %r944};
	xor.b64  	%rd1341, %rd1340, %rd1339;
	shr.u64 	%rd1342, %rd1606, 7;
	xor.b64  	%rd1343, %rd1341, %rd1342;
	add.s64 	%rd1344, %rd1338, %rd1609;
	add.s64 	%rd1345, %rd1344, %rd1607;
	add.s64 	%rd1609, %rd1345, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd1322;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 14;
	shf.r.wrap.b32 	%r949, %r946, %r947, 14;
	mov.b64 	%rd1346, {%r949, %r948};
	shf.r.wrap.b32 	%r950, %r947, %r946, 18;
	shf.r.wrap.b32 	%r951, %r946, %r947, 18;
	mov.b64 	%rd1347, {%r951, %r950};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	shf.l.wrap.b32 	%r952, %r946, %r947, 23;
	shf.l.wrap.b32 	%r953, %r947, %r946, 23;
	mov.b64 	%rd1349, {%r953, %r952};
	xor.b64  	%rd1350, %rd1348, %rd1349;
	xor.b64  	%rd1351, %rd1285, %rd1248;
	and.b64  	%rd1352, %rd1322, %rd1351;
	xor.b64  	%rd1353, %rd1352, %rd1248;
	ld.const.u64 	%rd1354, [%rd1596+328];
	add.s64 	%rd1355, %rd1354, %rd1211;
	add.s64 	%rd1356, %rd1355, %rd1609;
	add.s64 	%rd1357, %rd1356, %rd1353;
	add.s64 	%rd1358, %rd1357, %rd1350;
	add.s64 	%rd1359, %rd1358, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd1333;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 28;
	shf.r.wrap.b32 	%r957, %r954, %r955, 28;
	mov.b64 	%rd1360, {%r957, %r956};
	shf.l.wrap.b32 	%r958, %r954, %r955, 30;
	shf.l.wrap.b32 	%r959, %r955, %r954, 30;
	mov.b64 	%rd1361, {%r959, %r958};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	shf.l.wrap.b32 	%r960, %r954, %r955, 25;
	shf.l.wrap.b32 	%r961, %r955, %r954, 25;
	mov.b64 	%rd1363, {%r961, %r960};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	and.b64  	%rd1365, %rd1333, %rd1296;
	or.b64  	%rd1366, %rd1333, %rd1296;
	and.b64  	%rd1367, %rd1366, %rd1259;
	or.b64  	%rd1368, %rd1367, %rd1365;
	add.s64 	%rd1369, %rd1368, %rd1364;
	add.s64 	%rd1370, %rd1369, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd1597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd1597;
	}
	shf.r.wrap.b32 	%r964, %r963, %r962, 19;
	shf.r.wrap.b32 	%r965, %r962, %r963, 19;
	mov.b64 	%rd1371, {%r965, %r964};
	shf.l.wrap.b32 	%r966, %r962, %r963, 3;
	shf.l.wrap.b32 	%r967, %r963, %r962, 3;
	mov.b64 	%rd1372, {%r967, %r966};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	shr.u64 	%rd1374, %rd1597, 6;
	xor.b64  	%rd1375, %rd1373, %rd1374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r968,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r969}, %rd1604;
	}
	shf.r.wrap.b32 	%r970, %r969, %r968, 8;
	shf.r.wrap.b32 	%r971, %r968, %r969, 8;
	mov.b64 	%rd1376, {%r971, %r970};
	shf.r.wrap.b32 	%r972, %r969, %r968, 1;
	shf.r.wrap.b32 	%r973, %r968, %r969, 1;
	mov.b64 	%rd1377, {%r973, %r972};
	xor.b64  	%rd1378, %rd1377, %rd1376;
	shr.u64 	%rd1379, %rd1604, 7;
	xor.b64  	%rd1380, %rd1378, %rd1379;
	add.s64 	%rd1381, %rd1375, %rd1606;
	add.s64 	%rd1382, %rd1381, %rd1605;
	add.s64 	%rd1606, %rd1382, %rd1380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd1359;
	}
	shf.r.wrap.b32 	%r976, %r975, %r974, 14;
	shf.r.wrap.b32 	%r977, %r974, %r975, 14;
	mov.b64 	%rd1383, {%r977, %r976};
	shf.r.wrap.b32 	%r978, %r975, %r974, 18;
	shf.r.wrap.b32 	%r979, %r974, %r975, 18;
	mov.b64 	%rd1384, {%r979, %r978};
	xor.b64  	%rd1385, %rd1383, %rd1384;
	shf.l.wrap.b32 	%r980, %r974, %r975, 23;
	shf.l.wrap.b32 	%r981, %r975, %r974, 23;
	mov.b64 	%rd1386, {%r981, %r980};
	xor.b64  	%rd1387, %rd1385, %rd1386;
	xor.b64  	%rd1388, %rd1322, %rd1285;
	and.b64  	%rd1389, %rd1359, %rd1388;
	xor.b64  	%rd1390, %rd1389, %rd1285;
	ld.const.u64 	%rd1391, [%rd1596+336];
	add.s64 	%rd1392, %rd1391, %rd1248;
	add.s64 	%rd1393, %rd1392, %rd1606;
	add.s64 	%rd1394, %rd1393, %rd1390;
	add.s64 	%rd1395, %rd1394, %rd1387;
	add.s64 	%rd1396, %rd1395, %rd1259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r982,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd1370;
	}
	shf.r.wrap.b32 	%r984, %r983, %r982, 28;
	shf.r.wrap.b32 	%r985, %r982, %r983, 28;
	mov.b64 	%rd1397, {%r985, %r984};
	shf.l.wrap.b32 	%r986, %r982, %r983, 30;
	shf.l.wrap.b32 	%r987, %r983, %r982, 30;
	mov.b64 	%rd1398, {%r987, %r986};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	shf.l.wrap.b32 	%r988, %r982, %r983, 25;
	shf.l.wrap.b32 	%r989, %r983, %r982, 25;
	mov.b64 	%rd1400, {%r989, %r988};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	and.b64  	%rd1402, %rd1370, %rd1333;
	or.b64  	%rd1403, %rd1370, %rd1333;
	and.b64  	%rd1404, %rd1403, %rd1296;
	or.b64  	%rd1405, %rd1404, %rd1402;
	add.s64 	%rd1406, %rd1405, %rd1401;
	add.s64 	%rd1407, %rd1406, %rd1395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r991}, %rd1609;
	}
	shf.r.wrap.b32 	%r992, %r991, %r990, 19;
	shf.r.wrap.b32 	%r993, %r990, %r991, 19;
	mov.b64 	%rd1408, {%r993, %r992};
	shf.l.wrap.b32 	%r994, %r990, %r991, 3;
	shf.l.wrap.b32 	%r995, %r991, %r990, 3;
	mov.b64 	%rd1409, {%r995, %r994};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	shr.u64 	%rd1411, %rd1609, 6;
	xor.b64  	%rd1412, %rd1410, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd1602;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 8;
	shf.r.wrap.b32 	%r999, %r996, %r997, 8;
	mov.b64 	%rd1413, {%r999, %r998};
	shf.r.wrap.b32 	%r1000, %r997, %r996, 1;
	shf.r.wrap.b32 	%r1001, %r996, %r997, 1;
	mov.b64 	%rd1414, {%r1001, %r1000};
	xor.b64  	%rd1415, %rd1414, %rd1413;
	shr.u64 	%rd1416, %rd1602, 7;
	xor.b64  	%rd1417, %rd1415, %rd1416;
	add.s64 	%rd1418, %rd1412, %rd1604;
	add.s64 	%rd1419, %rd1418, %rd1603;
	add.s64 	%rd1604, %rd1419, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1003}, %rd1396;
	}
	shf.r.wrap.b32 	%r1004, %r1003, %r1002, 14;
	shf.r.wrap.b32 	%r1005, %r1002, %r1003, 14;
	mov.b64 	%rd1420, {%r1005, %r1004};
	shf.r.wrap.b32 	%r1006, %r1003, %r1002, 18;
	shf.r.wrap.b32 	%r1007, %r1002, %r1003, 18;
	mov.b64 	%rd1421, {%r1007, %r1006};
	xor.b64  	%rd1422, %rd1420, %rd1421;
	shf.l.wrap.b32 	%r1008, %r1002, %r1003, 23;
	shf.l.wrap.b32 	%r1009, %r1003, %r1002, 23;
	mov.b64 	%rd1423, {%r1009, %r1008};
	xor.b64  	%rd1424, %rd1422, %rd1423;
	xor.b64  	%rd1425, %rd1359, %rd1322;
	and.b64  	%rd1426, %rd1396, %rd1425;
	xor.b64  	%rd1427, %rd1426, %rd1322;
	ld.const.u64 	%rd1428, [%rd1596+344];
	add.s64 	%rd1429, %rd1428, %rd1285;
	add.s64 	%rd1430, %rd1429, %rd1604;
	add.s64 	%rd1431, %rd1430, %rd1427;
	add.s64 	%rd1432, %rd1431, %rd1424;
	add.s64 	%rd1433, %rd1432, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd1407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd1407;
	}
	shf.r.wrap.b32 	%r1012, %r1011, %r1010, 28;
	shf.r.wrap.b32 	%r1013, %r1010, %r1011, 28;
	mov.b64 	%rd1434, {%r1013, %r1012};
	shf.l.wrap.b32 	%r1014, %r1010, %r1011, 30;
	shf.l.wrap.b32 	%r1015, %r1011, %r1010, 30;
	mov.b64 	%rd1435, {%r1015, %r1014};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	shf.l.wrap.b32 	%r1016, %r1010, %r1011, 25;
	shf.l.wrap.b32 	%r1017, %r1011, %r1010, 25;
	mov.b64 	%rd1437, {%r1017, %r1016};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	and.b64  	%rd1439, %rd1407, %rd1370;
	or.b64  	%rd1440, %rd1407, %rd1370;
	and.b64  	%rd1441, %rd1440, %rd1333;
	or.b64  	%rd1442, %rd1441, %rd1439;
	add.s64 	%rd1443, %rd1442, %rd1438;
	add.s64 	%rd1444, %rd1443, %rd1432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1019}, %rd1606;
	}
	shf.r.wrap.b32 	%r1020, %r1019, %r1018, 19;
	shf.r.wrap.b32 	%r1021, %r1018, %r1019, 19;
	mov.b64 	%rd1445, {%r1021, %r1020};
	shf.l.wrap.b32 	%r1022, %r1018, %r1019, 3;
	shf.l.wrap.b32 	%r1023, %r1019, %r1018, 3;
	mov.b64 	%rd1446, {%r1023, %r1022};
	xor.b64  	%rd1447, %rd1445, %rd1446;
	shr.u64 	%rd1448, %rd1606, 6;
	xor.b64  	%rd1449, %rd1447, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1024,%dummy}, %rd1600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1025}, %rd1600;
	}
	shf.r.wrap.b32 	%r1026, %r1025, %r1024, 8;
	shf.r.wrap.b32 	%r1027, %r1024, %r1025, 8;
	mov.b64 	%rd1450, {%r1027, %r1026};
	shf.r.wrap.b32 	%r1028, %r1025, %r1024, 1;
	shf.r.wrap.b32 	%r1029, %r1024, %r1025, 1;
	mov.b64 	%rd1451, {%r1029, %r1028};
	xor.b64  	%rd1452, %rd1451, %rd1450;
	shr.u64 	%rd1453, %rd1600, 7;
	xor.b64  	%rd1454, %rd1452, %rd1453;
	add.s64 	%rd1455, %rd1449, %rd1602;
	add.s64 	%rd1456, %rd1455, %rd1601;
	add.s64 	%rd1602, %rd1456, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1030,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd1433;
	}
	shf.r.wrap.b32 	%r1032, %r1031, %r1030, 14;
	shf.r.wrap.b32 	%r1033, %r1030, %r1031, 14;
	mov.b64 	%rd1457, {%r1033, %r1032};
	shf.r.wrap.b32 	%r1034, %r1031, %r1030, 18;
	shf.r.wrap.b32 	%r1035, %r1030, %r1031, 18;
	mov.b64 	%rd1458, {%r1035, %r1034};
	xor.b64  	%rd1459, %rd1457, %rd1458;
	shf.l.wrap.b32 	%r1036, %r1030, %r1031, 23;
	shf.l.wrap.b32 	%r1037, %r1031, %r1030, 23;
	mov.b64 	%rd1460, {%r1037, %r1036};
	xor.b64  	%rd1461, %rd1459, %rd1460;
	xor.b64  	%rd1462, %rd1396, %rd1359;
	and.b64  	%rd1463, %rd1433, %rd1462;
	xor.b64  	%rd1464, %rd1463, %rd1359;
	ld.const.u64 	%rd1465, [%rd1596+352];
	add.s64 	%rd1466, %rd1465, %rd1322;
	add.s64 	%rd1467, %rd1466, %rd1602;
	add.s64 	%rd1468, %rd1467, %rd1464;
	add.s64 	%rd1469, %rd1468, %rd1461;
	add.s64 	%rd1620, %rd1469, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd1444;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 28;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 28;
	mov.b64 	%rd1470, {%r1041, %r1040};
	shf.l.wrap.b32 	%r1042, %r1038, %r1039, 30;
	shf.l.wrap.b32 	%r1043, %r1039, %r1038, 30;
	mov.b64 	%rd1471, {%r1043, %r1042};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 25;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 25;
	mov.b64 	%rd1473, {%r1045, %r1044};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	and.b64  	%rd1475, %rd1444, %rd1407;
	or.b64  	%rd1476, %rd1444, %rd1407;
	and.b64  	%rd1477, %rd1476, %rd1370;
	or.b64  	%rd1478, %rd1477, %rd1475;
	add.s64 	%rd1479, %rd1478, %rd1474;
	add.s64 	%rd1616, %rd1479, %rd1469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd1604;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 19;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 19;
	mov.b64 	%rd1480, {%r1049, %r1048};
	shf.l.wrap.b32 	%r1050, %r1046, %r1047, 3;
	shf.l.wrap.b32 	%r1051, %r1047, %r1046, 3;
	mov.b64 	%rd1481, {%r1051, %r1050};
	xor.b64  	%rd1482, %rd1480, %rd1481;
	shr.u64 	%rd1483, %rd1604, 6;
	xor.b64  	%rd1484, %rd1482, %rd1483;
	shf.r.wrap.b32 	%r1052, %r682, %r683, 8;
	shf.r.wrap.b32 	%r1053, %r683, %r682, 8;
	mov.b64 	%rd1485, {%r1053, %r1052};
	shf.r.wrap.b32 	%r1054, %r682, %r683, 1;
	shf.r.wrap.b32 	%r1055, %r683, %r682, 1;
	mov.b64 	%rd1486, {%r1055, %r1054};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	shr.u64 	%rd1488, %rd1612, 7;
	xor.b64  	%rd1489, %rd1487, %rd1488;
	add.s64 	%rd1490, %rd1484, %rd1600;
	add.s64 	%rd1491, %rd1490, %rd1599;
	add.s64 	%rd1600, %rd1491, %rd1489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1056,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1057}, %rd1620;
	}
	shf.r.wrap.b32 	%r1058, %r1057, %r1056, 14;
	shf.r.wrap.b32 	%r1059, %r1056, %r1057, 14;
	mov.b64 	%rd1492, {%r1059, %r1058};
	shf.r.wrap.b32 	%r1060, %r1057, %r1056, 18;
	shf.r.wrap.b32 	%r1061, %r1056, %r1057, 18;
	mov.b64 	%rd1493, {%r1061, %r1060};
	xor.b64  	%rd1494, %rd1492, %rd1493;
	shf.l.wrap.b32 	%r1062, %r1056, %r1057, 23;
	shf.l.wrap.b32 	%r1063, %r1057, %r1056, 23;
	mov.b64 	%rd1495, {%r1063, %r1062};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	xor.b64  	%rd1497, %rd1433, %rd1396;
	and.b64  	%rd1498, %rd1620, %rd1497;
	xor.b64  	%rd1499, %rd1498, %rd1396;
	ld.const.u64 	%rd1500, [%rd1596+360];
	add.s64 	%rd1501, %rd1500, %rd1359;
	add.s64 	%rd1502, %rd1501, %rd1600;
	add.s64 	%rd1503, %rd1502, %rd1499;
	add.s64 	%rd1504, %rd1503, %rd1496;
	add.s64 	%rd1619, %rd1504, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd1616;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 28;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 28;
	mov.b64 	%rd1505, {%r1067, %r1066};
	shf.l.wrap.b32 	%r1068, %r1064, %r1065, 30;
	shf.l.wrap.b32 	%r1069, %r1065, %r1064, 30;
	mov.b64 	%rd1506, {%r1069, %r1068};
	xor.b64  	%rd1507, %rd1505, %rd1506;
	shf.l.wrap.b32 	%r1070, %r1064, %r1065, 25;
	shf.l.wrap.b32 	%r1071, %r1065, %r1064, 25;
	mov.b64 	%rd1508, {%r1071, %r1070};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	and.b64  	%rd1510, %rd1616, %rd1444;
	or.b64  	%rd1511, %rd1616, %rd1444;
	and.b64  	%rd1512, %rd1511, %rd1407;
	or.b64  	%rd1513, %rd1512, %rd1510;
	add.s64 	%rd1514, %rd1513, %rd1509;
	add.s64 	%rd1615, %rd1514, %rd1504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1602;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 19;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 19;
	mov.b64 	%rd1515, {%r1075, %r1074};
	shf.l.wrap.b32 	%r1076, %r1072, %r1073, 3;
	shf.l.wrap.b32 	%r1077, %r1073, %r1072, 3;
	mov.b64 	%rd1516, {%r1077, %r1076};
	xor.b64  	%rd1517, %rd1515, %rd1516;
	shr.u64 	%rd1518, %rd1602, 6;
	xor.b64  	%rd1519, %rd1517, %rd1518;
	shf.r.wrap.b32 	%r1078, %r710, %r711, 8;
	shf.r.wrap.b32 	%r1079, %r711, %r710, 8;
	mov.b64 	%rd1520, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r710, %r711, 1;
	shf.r.wrap.b32 	%r1081, %r711, %r710, 1;
	mov.b64 	%rd1521, {%r1081, %r1080};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	shr.u64 	%rd1523, %rd1608, 7;
	xor.b64  	%rd1524, %rd1522, %rd1523;
	add.s64 	%rd1525, %rd1519, %rd1612;
	add.s64 	%rd1526, %rd1525, %rd1598;
	add.s64 	%rd1612, %rd1526, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd1619;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 14;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 14;
	mov.b64 	%rd1527, {%r1085, %r1084};
	shf.r.wrap.b32 	%r1086, %r1083, %r1082, 18;
	shf.r.wrap.b32 	%r1087, %r1082, %r1083, 18;
	mov.b64 	%rd1528, {%r1087, %r1086};
	xor.b64  	%rd1529, %rd1527, %rd1528;
	shf.l.wrap.b32 	%r1088, %r1082, %r1083, 23;
	shf.l.wrap.b32 	%r1089, %r1083, %r1082, 23;
	mov.b64 	%rd1530, {%r1089, %r1088};
	xor.b64  	%rd1531, %rd1529, %rd1530;
	xor.b64  	%rd1532, %rd1620, %rd1433;
	and.b64  	%rd1533, %rd1619, %rd1532;
	xor.b64  	%rd1534, %rd1533, %rd1433;
	ld.const.u64 	%rd1535, [%rd1596+368];
	add.s64 	%rd1536, %rd1535, %rd1396;
	add.s64 	%rd1537, %rd1536, %rd1612;
	add.s64 	%rd1538, %rd1537, %rd1534;
	add.s64 	%rd1539, %rd1538, %rd1531;
	add.s64 	%rd1618, %rd1539, %rd1407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd1615;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 28;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 28;
	mov.b64 	%rd1540, {%r1093, %r1092};
	shf.l.wrap.b32 	%r1094, %r1090, %r1091, 30;
	shf.l.wrap.b32 	%r1095, %r1091, %r1090, 30;
	mov.b64 	%rd1541, {%r1095, %r1094};
	xor.b64  	%rd1542, %rd1540, %rd1541;
	shf.l.wrap.b32 	%r1096, %r1090, %r1091, 25;
	shf.l.wrap.b32 	%r1097, %r1091, %r1090, 25;
	mov.b64 	%rd1543, {%r1097, %r1096};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	and.b64  	%rd1545, %rd1615, %rd1616;
	or.b64  	%rd1546, %rd1615, %rd1616;
	and.b64  	%rd1547, %rd1546, %rd1444;
	or.b64  	%rd1548, %rd1547, %rd1545;
	add.s64 	%rd1549, %rd1548, %rd1544;
	add.s64 	%rd1614, %rd1549, %rd1539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd1600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd1600;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 19;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 19;
	mov.b64 	%rd1550, {%r1101, %r1100};
	shf.l.wrap.b32 	%r1102, %r1098, %r1099, 3;
	shf.l.wrap.b32 	%r1103, %r1099, %r1098, 3;
	mov.b64 	%rd1551, {%r1103, %r1102};
	xor.b64  	%rd1552, %rd1550, %rd1551;
	shr.u64 	%rd1553, %rd1600, 6;
	xor.b64  	%rd1554, %rd1552, %rd1553;
	shf.r.wrap.b32 	%r1104, %r739, %r738, 1;
	shf.r.wrap.b32 	%r1105, %r738, %r739, 1;
	mov.b64 	%rd1555, {%r1105, %r1104};
	shf.r.wrap.b32 	%r1106, %r739, %r738, 8;
	shf.r.wrap.b32 	%r1107, %r738, %r739, 8;
	mov.b64 	%rd1556, {%r1107, %r1106};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shr.u64 	%rd1558, %rd1610, 7;
	xor.b64  	%rd1559, %rd1557, %rd1558;
	add.s64 	%rd1560, %rd1554, %rd1608;
	add.s64 	%rd1561, %rd1560, %rd1597;
	add.s64 	%rd1608, %rd1561, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1108,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1109}, %rd1618;
	}
	shf.r.wrap.b32 	%r1110, %r1109, %r1108, 14;
	shf.r.wrap.b32 	%r1111, %r1108, %r1109, 14;
	mov.b64 	%rd1562, {%r1111, %r1110};
	shf.r.wrap.b32 	%r1112, %r1109, %r1108, 18;
	shf.r.wrap.b32 	%r1113, %r1108, %r1109, 18;
	mov.b64 	%rd1563, {%r1113, %r1112};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	shf.l.wrap.b32 	%r1114, %r1108, %r1109, 23;
	shf.l.wrap.b32 	%r1115, %r1109, %r1108, 23;
	mov.b64 	%rd1565, {%r1115, %r1114};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	xor.b64  	%rd1567, %rd1619, %rd1620;
	and.b64  	%rd1568, %rd1618, %rd1567;
	xor.b64  	%rd1569, %rd1568, %rd1620;
	ld.const.u64 	%rd1570, [%rd1596+376];
	add.s64 	%rd1571, %rd1570, %rd1433;
	add.s64 	%rd1572, %rd1571, %rd1608;
	add.s64 	%rd1573, %rd1572, %rd1569;
	add.s64 	%rd1574, %rd1573, %rd1566;
	add.s64 	%rd1617, %rd1574, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd1614;
	}
	shf.r.wrap.b32 	%r1118, %r1117, %r1116, 28;
	shf.r.wrap.b32 	%r1119, %r1116, %r1117, 28;
	mov.b64 	%rd1575, {%r1119, %r1118};
	shf.l.wrap.b32 	%r1120, %r1116, %r1117, 30;
	shf.l.wrap.b32 	%r1121, %r1117, %r1116, 30;
	mov.b64 	%rd1576, {%r1121, %r1120};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	shf.l.wrap.b32 	%r1122, %r1116, %r1117, 25;
	shf.l.wrap.b32 	%r1123, %r1117, %r1116, 25;
	mov.b64 	%rd1578, {%r1123, %r1122};
	xor.b64  	%rd1579, %rd1577, %rd1578;
	and.b64  	%rd1580, %rd1614, %rd1615;
	or.b64  	%rd1581, %rd1614, %rd1615;
	and.b64  	%rd1582, %rd1581, %rd1616;
	or.b64  	%rd1583, %rd1582, %rd1580;
	add.s64 	%rd1584, %rd1583, %rd1579;
	add.s64 	%rd1613, %rd1584, %rd1574;
	add.s64 	%rd1596, %rd1596, 128;
	add.s32 	%r1132, %r1132, 16;
	setp.lt.u32 	%p2, %r1132, 65;
	@%p2 bra 	$L__BB2_3;

	ld.param.u32 	%r1124, [loop_sha512_param_1];
	add.s64 	%rd1628, %rd1613, 7640891576956012808;
	add.s64 	%rd1627, %rd1614, -4942790177534073029;
	add.s64 	%rd1626, %rd1615, 4354685564936845355;
	add.s64 	%rd1625, %rd1616, -6534734903238641935;
	add.s64 	%rd1624, %rd1617, 5840696475078001361;
	add.s64 	%rd1623, %rd1618, -7276294671716946913;
	add.s64 	%rd1622, %rd1619, 2270897969802886507;
	add.s64 	%rd1621, %rd1620, 6620516959819538809;
	add.s32 	%r1131, %r1131, 1;
	setp.lt.u32 	%p3, %r1131, %r1124;
	@%p3 bra 	$L__BB2_2;

$L__BB2_5:
	mov.b32 	%r1130, %envreg3;
	mov.u32 	%r1129, %tid.x;
	add.s32 	%r1128, %r1129, %r1130;
	mov.u32 	%r1127, %ctaid.x;
	mov.u32 	%r1126, %ntid.x;
	mad.lo.s32 	%r1125, %r1126, %r1127, %r1128;
	mul.wide.u32 	%rd1587, %r1125, 64;
	ld.param.u64 	%rd1586, [loop_sha512_param_0];
	add.s64 	%rd1585, %rd1586, %rd1587;
	st.global.u64 	[%rd1585], %rd1628;
	st.global.u64 	[%rd1585+8], %rd1627;
	st.global.u64 	[%rd1585+16], %rd1626;
	st.global.u64 	[%rd1585+24], %rd1625;
	st.global.u64 	[%rd1585+32], %rd1624;
	st.global.u64 	[%rd1585+40], %rd1623;
	st.global.u64 	[%rd1585+48], %rd1622;
	st.global.u64 	[%rd1585+56], %rd1621;
	ret;

}
	// .globl	bitcoin_final
.entry bitcoin_final(
	.param .u64 .ptr .const .align 4 bitcoin_final_param_0,
	.param .u64 .ptr .global .align 8 bitcoin_final_param_1,
	.param .u64 .ptr .global .align 4 bitcoin_final_param_2
)
{
	.local .align 16 .b8 	__local_depot3[992];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<93>;
	.reg .b32 	%r<3389>;
	.reg .b64 	%rd<73>;


	mov.u64 	%SPL, __local_depot3;
	ld.param.u64 	%rd16, [bitcoin_final_param_1];
	mov.u32 	%r55, %ctaid.x;
	mov.u32 	%r56, %ntid.x;
	mov.u32 	%r57, %tid.x;
	mov.b32 	%r58, %envreg3;
	add.s32 	%r59, %r57, %r58;
	mad.lo.s32 	%r60, %r56, %r55, %r59;
	add.u64 	%rd70, %SPL, 0;
	cvt.u64.u32 	%rd6, %r60;
	mul.wide.u32 	%rd22, %r60, 64;
	add.s64 	%rd23, %rd16, %rd22;
	ld.global.u64 	%rd24, [%rd23];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r61, %temp}, %rd24;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r62}, %rd24;
	}
	mov.u32 	%r63, 291;
	mov.u32 	%r3373, 0;
	prmt.b32 	%r64, %r61, %r3373, %r63;
	prmt.b32 	%r65, %r62, %r3373, %r63;
	mov.b64 	%rd25, {%r65, %r64};
	st.global.u64 	[%rd23], %rd25;
	ld.global.u64 	%rd26, [%rd23+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r66, %temp}, %rd26;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r67}, %rd26;
	}
	prmt.b32 	%r68, %r66, %r3373, %r63;
	prmt.b32 	%r69, %r67, %r3373, %r63;
	mov.b64 	%rd27, {%r69, %r68};
	st.global.u64 	[%rd23+8], %rd27;
	ld.global.u64 	%rd28, [%rd23+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r70, %temp}, %rd28;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r71}, %rd28;
	}
	prmt.b32 	%r72, %r70, %r3373, %r63;
	prmt.b32 	%r73, %r71, %r3373, %r63;
	mov.b64 	%rd29, {%r73, %r72};
	st.global.u64 	[%rd23+16], %rd29;
	ld.global.u64 	%rd30, [%rd23+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %rd30;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r75}, %rd30;
	}
	prmt.b32 	%r76, %r74, %r3373, %r63;
	prmt.b32 	%r77, %r75, %r3373, %r63;
	mov.b64 	%rd31, {%r77, %r76};
	st.global.u64 	[%rd23+24], %rd31;
	ld.global.u64 	%rd32, [%rd23+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %rd32;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r79}, %rd32;
	}
	prmt.b32 	%r80, %r78, %r3373, %r63;
	prmt.b32 	%r81, %r79, %r3373, %r63;
	mov.b64 	%rd33, {%r81, %r80};
	st.global.u64 	[%rd23+32], %rd33;
	ld.global.u64 	%rd34, [%rd23+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r82, %temp}, %rd34;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r83}, %rd34;
	}
	prmt.b32 	%r84, %r82, %r3373, %r63;
	prmt.b32 	%r85, %r83, %r3373, %r63;
	mov.b64 	%rd35, {%r85, %r84};
	st.global.u64 	[%rd23+40], %rd35;
	ld.global.u64 	%rd36, [%rd23+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r86, %temp}, %rd36;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r87}, %rd36;
	}
	prmt.b32 	%r88, %r86, %r3373, %r63;
	prmt.b32 	%r89, %r87, %r3373, %r63;
	mov.b64 	%rd37, {%r89, %r88};
	st.global.u64 	[%rd23+48], %rd37;
	ld.global.u64 	%rd38, [%rd23+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r90, %temp}, %rd38;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r91}, %rd38;
	}
	prmt.b32 	%r92, %r90, %r3373, %r63;
	prmt.b32 	%r93, %r91, %r3373, %r63;
	mov.b64 	%rd39, {%r93, %r92};
	st.global.u64 	[%rd23+56], %rd39;
	cvt.u32.u64 	%r94, %rd25;
	and.b32  	%r95, %r94, 255;
	ld.global.u8 	%r96, [%rd23+1];
	prmt.b32 	%r97, %r96, %r95, 30212;
	ld.global.v2.u8 	{%rs18, %rs19}, [%rd23+2];
	cvt.u32.u16 	%r98, %rs18;
	prmt.b32 	%r99, %r98, %r97, 28756;
	cvt.u32.u16 	%r100, %rs19;
	cvt.u32.u64 	%r101, %rd27;
	and.b32  	%r102, %r101, 255;
	mov.b32 	{%rs22, %rs23}, %r101;
	shr.u16 	%rs24, %rs22, 8;
	shr.u16 	%rs25, %rs23, 8;
	cvt.u32.u16 	%r103, %rs24;
	prmt.b32 	%r104, %r103, %r102, 30212;
	cvt.u32.u16 	%r105, %rs23;
	prmt.b32 	%r106, %r105, %r104, 28756;
	cvt.u32.u16 	%r107, %rs25;
	prmt.b32 	%r108, %r107, %r106, 1620;
	prmt.b32 	%r109, %r100, %r99, 1620;
	ld.global.u32 	%r110, [%rd23+12];
	ld.global.u32 	%r111, [%rd23+4];
	st.local.v4.u32 	[%rd70], {%r109, %r111, %r108, %r110};
	cvt.u32.u64 	%r112, %rd29;
	and.b32  	%r113, %r112, 255;
	mov.b32 	{%rs26, %rs27}, %r112;
	shr.u16 	%rs28, %rs26, 8;
	shr.u16 	%rs29, %rs27, 8;
	cvt.u32.u16 	%r114, %rs28;
	prmt.b32 	%r115, %r114, %r113, 30212;
	cvt.u32.u16 	%r116, %rs27;
	prmt.b32 	%r117, %r116, %r115, 28756;
	cvt.u32.u16 	%r118, %rs29;
	cvt.u32.u64 	%r119, %rd31;
	and.b32  	%r120, %r119, 255;
	mov.b32 	{%rs30, %rs31}, %r119;
	shr.u16 	%rs32, %rs30, 8;
	shr.u16 	%rs33, %rs31, 8;
	cvt.u32.u16 	%r121, %rs32;
	prmt.b32 	%r122, %r121, %r120, 30212;
	cvt.u32.u16 	%r123, %rs31;
	prmt.b32 	%r124, %r123, %r122, 28756;
	cvt.u32.u16 	%r125, %rs33;
	ld.global.u32 	%r3377, [%rd23+28];
	prmt.b32 	%r126, %r125, %r124, 1620;
	prmt.b32 	%r127, %r118, %r117, 1620;
	ld.global.u32 	%r128, [%rd23+20];
	st.local.v4.u32 	[%rd70+16], {%r127, %r128, %r126, %r3377};
	mov.u32 	%r3375, %r3373;
	mov.u32 	%r3376, %r3373;

$L__BB3_1:
	setp.eq.s32 	%p1, %r3376, 0;
	@%p1 bra 	$L__BB3_4;

	setp.ne.s32 	%p2, %r3376, 4;
	@%p2 bra 	$L__BB3_5;

	and.b32  	%r129, %r3377, 1431655765;
	shl.b32 	%r130, %r3377, 1;
	and.b32  	%r131, %r130, -1431655766;
	or.b32  	%r132, %r131, %r129;
	and.b32  	%r133, %r3377, -1431655766;
	shr.u32 	%r134, %r133, 1;
	or.b32  	%r135, %r134, %r133;
	and.b32  	%r136, %r132, 858993459;
	shl.b32 	%r137, %r132, 2;
	and.b32  	%r138, %r137, -858993460;
	or.b32  	%r139, %r138, %r136;
	and.b32  	%r140, %r132, -858993460;
	shr.u32 	%r141, %r140, 2;
	or.b32  	%r142, %r141, %r140;
	and.b32  	%r143, %r135, 858993459;
	shl.b32 	%r144, %r135, 2;
	and.b32  	%r145, %r144, -858993460;
	or.b32  	%r146, %r145, %r143;
	and.b32  	%r147, %r135, -858993460;
	shr.u32 	%r148, %r147, 2;
	or.b32  	%r149, %r148, %r147;
	and.b32  	%r150, %r139, 252645135;
	shl.b32 	%r151, %r139, 4;
	and.b32  	%r152, %r151, -252645136;
	or.b32  	%r153, %r152, %r150;
	and.b32  	%r154, %r139, -252645136;
	shr.u32 	%r155, %r154, 4;
	or.b32  	%r156, %r155, %r154;
	and.b32  	%r157, %r146, 252645135;
	shl.b32 	%r158, %r146, 4;
	and.b32  	%r159, %r158, -252645136;
	or.b32  	%r160, %r159, %r157;
	and.b32  	%r161, %r146, -252645136;
	shr.u32 	%r162, %r161, 4;
	or.b32  	%r163, %r162, %r161;
	and.b32  	%r164, %r142, 252645135;
	shl.b32 	%r165, %r142, 4;
	and.b32  	%r166, %r165, -252645136;
	or.b32  	%r167, %r166, %r164;
	and.b32  	%r168, %r142, -252645136;
	shr.u32 	%r169, %r168, 4;
	or.b32  	%r170, %r169, %r168;
	and.b32  	%r171, %r149, 252645135;
	shl.b32 	%r172, %r149, 4;
	and.b32  	%r173, %r172, -252645136;
	or.b32  	%r174, %r173, %r171;
	and.b32  	%r175, %r149, -252645136;
	shr.u32 	%r176, %r175, 4;
	or.b32  	%r177, %r176, %r175;
	xor.b32  	%r178, %r167, %r156;
	xor.b32  	%r179, %r160, %r177;
	xor.b32  	%r180, %r156, %r177;
	xor.b32  	%r181, %r167, %r177;
	xor.b32  	%r182, %r163, %r170;
	xor.b32  	%r183, %r153, %r182;
	xor.b32  	%r184, %r183, %r156;
	xor.b32  	%r185, %r179, %r178;
	xor.b32  	%r186, %r183, %r177;
	xor.b32  	%r187, %r183, %r160;
	xor.b32  	%r188, %r187, %r181;
	xor.b32  	%r189, %r185, %r174;
	xor.b32  	%r190, %r189, %r167;
	xor.b32  	%r191, %r189, %r170;
	xor.b32  	%r192, %r190, %r153;
	xor.b32  	%r193, %r190, %r182;
	xor.b32  	%r194, %r191, %r180;
	xor.b32  	%r195, %r194, %r153;
	xor.b32  	%r196, %r193, %r194;
	xor.b32  	%r197, %r194, %r182;
	and.b32  	%r198, %r190, %r185;
	and.b32  	%r199, %r192, %r188;
	and.b32  	%r200, %r184, %r153;
	and.b32  	%r201, %r197, %r179;
	and.b32  	%r202, %r187, %r183;
	and.b32  	%r203, %r195, %r186;
	and.b32  	%r204, %r194, %r180;
	and.b32  	%r205, %r196, %r178;
	xor.b32  	%r206, %r205, %r204;
	and.b32  	%r207, %r193, %r181;
	xor.b32  	%r208, %r207, %r204;
	xor.b32  	%r209, %r198, %r191;
	xor.b32  	%r210, %r209, %r199;
	xor.b32  	%r211, %r210, %r206;
	xor.b32  	%r212, %r200, %r181;
	xor.b32  	%r213, %r212, %r193;
	xor.b32  	%r214, %r213, %r198;
	xor.b32  	%r215, %r214, %r208;
	xor.b32  	%r216, %r202, %r179;
	xor.b32  	%r217, %r216, %r197;
	xor.b32  	%r218, %r217, %r201;
	xor.b32  	%r219, %r218, %r206;
	xor.b32  	%r220, %r197, %r177;
	xor.b32  	%r221, %r220, %r201;
	xor.b32  	%r222, %r221, %r203;
	xor.b32  	%r223, %r222, %r208;
	xor.b32  	%r224, %r211, %r215;
	and.b32  	%r225, %r211, %r219;
	xor.b32  	%r226, %r225, %r223;
	and.b32  	%r227, %r226, %r224;
	xor.b32  	%r228, %r227, %r215;
	xor.b32  	%r229, %r219, %r223;
	xor.b32  	%r230, %r225, %r215;
	and.b32  	%r231, %r230, %r229;
	xor.b32  	%r232, %r231, %r223;
	xor.b32  	%r233, %r232, %r219;
	xor.b32  	%r234, %r231, %r225;
	and.b32  	%r235, %r234, %r223;
	xor.b32  	%r236, %r233, %r235;
	xor.b32  	%r237, %r235, %r226;
	and.b32  	%r238, %r237, %r228;
	xor.b32  	%r239, %r238, %r224;
	xor.b32  	%r240, %r239, %r236;
	xor.b32  	%r241, %r228, %r232;
	xor.b32  	%r242, %r239, %r228;
	xor.b32  	%r243, %r235, %r219;
	xor.b32  	%r244, %r240, %r241;
	and.b32  	%r245, %r243, %r190;
	and.b32  	%r246, %r236, %r192;
	and.b32  	%r247, %r232, %r153;
	and.b32  	%r248, %r242, %r197;
	and.b32  	%r249, %r239, %r183;
	and.b32  	%r250, %r228, %r195;
	and.b32  	%r251, %r241, %r194;
	and.b32  	%r252, %r244, %r196;
	and.b32  	%r253, %r240, %r193;
	and.b32  	%r254, %r243, %r185;
	and.b32  	%r255, %r236, %r188;
	and.b32  	%r256, %r232, %r184;
	and.b32  	%r257, %r242, %r179;
	and.b32  	%r258, %r239, %r187;
	and.b32  	%r259, %r228, %r186;
	and.b32  	%r260, %r241, %r180;
	and.b32  	%r261, %r244, %r178;
	and.b32  	%r262, %r240, %r181;
	xor.b32  	%r263, %r261, %r260;
	xor.b32  	%r264, %r255, %r256;
	xor.b32  	%r265, %r258, %r250;
	xor.b32  	%r266, %r254, %r255;
	xor.b32  	%r267, %r257, %r247;
	xor.b32  	%r268, %r247, %r250;
	xor.b32  	%r269, %r252, %r253;
	xor.b32  	%r270, %r248, %r245;
	xor.b32  	%r271, %r267, %r270;
	xor.b32  	%r272, %r263, %r249;
	xor.b32  	%r273, %r248, %r251;
	xor.b32  	%r274, %r273, %r252;
	xor.b32  	%r275, %r271, %r259;
	xor.b32  	%r276, %r269, %r272;
	xor.b32  	%r277, %r266, %r272;
	xor.b32  	%r278, %r274, %r249;
	xor.b32  	%r279, %r275, %r276;
	xor.b32  	%r280, %r277, %r246;
	xor.b32  	%r281, %r277, %r274;
	xor.b32  	%r282, %r265, 16843009;
	xor.b32  	%r283, %r257, %r282;
	xor.b32  	%r284, %r283, %r276;
	xor.b32  	%r285, %r271, %r282;
	xor.b32  	%r286, %r285, %r263;
	xor.b32  	%r287, %r280, %r270;
	xor.b32  	%r288, %r268, %r280;
	xor.b32  	%r289, %r264, %r279;
	xor.b32  	%r290, %r287, %r278;
	not.b32 	%r291, %r290;
	xor.b32  	%r292, %r261, %r262;
	xor.b32  	%r293, %r292, %r278;
	xor.b32  	%r294, %r293, %r279;
	and.b32  	%r295, %r286, 16843009;
	shl.b32 	%r296, %r284, 1;
	and.b32  	%r297, %r296, 33686018;
	or.b32  	%r298, %r297, %r295;
	and.b32  	%r299, %r289, 16843009;
	shl.b32 	%r300, %r288, 1;
	and.b32  	%r301, %r300, 33686018;
	or.b32  	%r302, %r301, %r299;
	and.b32  	%r303, %r287, 16843009;
	shl.b32 	%r304, %r294, 1;
	not.b32 	%r305, %r304;
	and.b32  	%r306, %r305, 33686018;
	or.b32  	%r307, %r306, %r303;
	and.b32  	%r308, %r291, 16843009;
	shl.b32 	%r309, %r281, 1;
	and.b32  	%r310, %r309, 33686018;
	or.b32  	%r311, %r310, %r308;
	shl.b32 	%r312, %r302, 2;
	or.b32  	%r313, %r312, %r298;
	shl.b32 	%r314, %r311, 2;
	or.b32  	%r315, %r314, %r307;
	shl.b32 	%r316, %r315, 4;
	or.b32  	%r3377, %r316, %r313;
	bra.uni 	$L__BB3_5;

$L__BB3_4:
	shf.l.wrap.b32 	%r317, %r3377, %r3377, 24;
	and.b32  	%r318, %r317, 1431655765;
	shl.b32 	%r319, %r317, 1;
	and.b32  	%r320, %r319, -1431655766;
	or.b32  	%r321, %r320, %r318;
	and.b32  	%r322, %r317, -1431655766;
	shr.u32 	%r323, %r322, 1;
	or.b32  	%r324, %r323, %r322;
	and.b32  	%r325, %r321, 858993459;
	shl.b32 	%r326, %r321, 2;
	and.b32  	%r327, %r326, -858993460;
	or.b32  	%r328, %r327, %r325;
	and.b32  	%r329, %r321, -858993460;
	shr.u32 	%r330, %r329, 2;
	or.b32  	%r331, %r330, %r329;
	and.b32  	%r332, %r324, 858993459;
	shl.b32 	%r333, %r324, 2;
	and.b32  	%r334, %r333, -858993460;
	or.b32  	%r335, %r334, %r332;
	and.b32  	%r336, %r324, -858993460;
	shr.u32 	%r337, %r336, 2;
	or.b32  	%r338, %r337, %r336;
	and.b32  	%r339, %r328, 252645135;
	shl.b32 	%r340, %r328, 4;
	and.b32  	%r341, %r340, -252645136;
	or.b32  	%r342, %r341, %r339;
	and.b32  	%r343, %r328, -252645136;
	shr.u32 	%r344, %r343, 4;
	or.b32  	%r345, %r344, %r343;
	and.b32  	%r346, %r335, 252645135;
	shl.b32 	%r347, %r335, 4;
	and.b32  	%r348, %r347, -252645136;
	or.b32  	%r349, %r348, %r346;
	and.b32  	%r350, %r335, -252645136;
	shr.u32 	%r351, %r350, 4;
	or.b32  	%r352, %r351, %r350;
	and.b32  	%r353, %r331, 252645135;
	shl.b32 	%r354, %r331, 4;
	and.b32  	%r355, %r354, -252645136;
	or.b32  	%r356, %r355, %r353;
	and.b32  	%r357, %r331, -252645136;
	shr.u32 	%r358, %r357, 4;
	or.b32  	%r359, %r358, %r357;
	and.b32  	%r360, %r338, 252645135;
	shl.b32 	%r361, %r338, 4;
	and.b32  	%r362, %r361, -252645136;
	or.b32  	%r363, %r362, %r360;
	and.b32  	%r364, %r338, -252645136;
	shr.u32 	%r365, %r364, 4;
	or.b32  	%r366, %r365, %r364;
	xor.b32  	%r367, %r356, %r345;
	xor.b32  	%r368, %r349, %r366;
	xor.b32  	%r369, %r345, %r366;
	xor.b32  	%r370, %r356, %r366;
	xor.b32  	%r371, %r352, %r359;
	xor.b32  	%r372, %r342, %r371;
	xor.b32  	%r373, %r372, %r345;
	xor.b32  	%r374, %r368, %r367;
	xor.b32  	%r375, %r372, %r366;
	xor.b32  	%r376, %r372, %r349;
	xor.b32  	%r377, %r376, %r370;
	xor.b32  	%r378, %r374, %r363;
	xor.b32  	%r379, %r378, %r356;
	xor.b32  	%r380, %r378, %r359;
	xor.b32  	%r381, %r379, %r342;
	xor.b32  	%r382, %r379, %r371;
	xor.b32  	%r383, %r380, %r369;
	xor.b32  	%r384, %r383, %r342;
	xor.b32  	%r385, %r382, %r383;
	xor.b32  	%r386, %r383, %r371;
	and.b32  	%r387, %r379, %r374;
	and.b32  	%r388, %r381, %r377;
	and.b32  	%r389, %r373, %r342;
	and.b32  	%r390, %r386, %r368;
	and.b32  	%r391, %r376, %r372;
	and.b32  	%r392, %r384, %r375;
	and.b32  	%r393, %r383, %r369;
	and.b32  	%r394, %r385, %r367;
	xor.b32  	%r395, %r394, %r393;
	and.b32  	%r396, %r382, %r370;
	xor.b32  	%r397, %r396, %r393;
	xor.b32  	%r398, %r387, %r380;
	xor.b32  	%r399, %r398, %r388;
	xor.b32  	%r400, %r399, %r395;
	xor.b32  	%r401, %r389, %r370;
	xor.b32  	%r402, %r401, %r382;
	xor.b32  	%r403, %r402, %r387;
	xor.b32  	%r404, %r403, %r397;
	xor.b32  	%r405, %r391, %r368;
	xor.b32  	%r406, %r405, %r386;
	xor.b32  	%r407, %r406, %r390;
	xor.b32  	%r408, %r407, %r395;
	xor.b32  	%r409, %r386, %r366;
	xor.b32  	%r410, %r409, %r390;
	xor.b32  	%r411, %r410, %r392;
	xor.b32  	%r412, %r411, %r397;
	xor.b32  	%r413, %r400, %r404;
	and.b32  	%r414, %r400, %r408;
	xor.b32  	%r415, %r414, %r412;
	and.b32  	%r416, %r415, %r413;
	xor.b32  	%r417, %r416, %r404;
	xor.b32  	%r418, %r408, %r412;
	xor.b32  	%r419, %r414, %r404;
	and.b32  	%r420, %r419, %r418;
	xor.b32  	%r421, %r420, %r412;
	xor.b32  	%r422, %r421, %r408;
	xor.b32  	%r423, %r420, %r414;
	and.b32  	%r424, %r423, %r412;
	xor.b32  	%r425, %r422, %r424;
	xor.b32  	%r426, %r424, %r415;
	and.b32  	%r427, %r426, %r417;
	xor.b32  	%r428, %r427, %r413;
	xor.b32  	%r429, %r428, %r425;
	xor.b32  	%r430, %r417, %r421;
	xor.b32  	%r431, %r428, %r417;
	xor.b32  	%r432, %r424, %r408;
	xor.b32  	%r433, %r429, %r430;
	and.b32  	%r434, %r432, %r379;
	and.b32  	%r435, %r425, %r381;
	and.b32  	%r436, %r421, %r342;
	and.b32  	%r437, %r431, %r386;
	and.b32  	%r438, %r428, %r372;
	and.b32  	%r439, %r417, %r384;
	and.b32  	%r440, %r430, %r383;
	and.b32  	%r441, %r433, %r385;
	and.b32  	%r442, %r429, %r382;
	and.b32  	%r443, %r432, %r374;
	and.b32  	%r444, %r425, %r377;
	and.b32  	%r445, %r421, %r373;
	and.b32  	%r446, %r431, %r368;
	and.b32  	%r447, %r428, %r376;
	and.b32  	%r448, %r417, %r375;
	and.b32  	%r449, %r430, %r369;
	and.b32  	%r450, %r433, %r367;
	and.b32  	%r451, %r429, %r370;
	xor.b32  	%r452, %r450, %r449;
	xor.b32  	%r453, %r444, %r445;
	xor.b32  	%r454, %r447, %r439;
	xor.b32  	%r455, %r443, %r444;
	xor.b32  	%r456, %r446, %r436;
	xor.b32  	%r457, %r436, %r439;
	xor.b32  	%r458, %r441, %r442;
	xor.b32  	%r459, %r437, %r434;
	xor.b32  	%r460, %r456, %r459;
	xor.b32  	%r461, %r452, %r438;
	xor.b32  	%r462, %r437, %r440;
	xor.b32  	%r463, %r462, %r441;
	xor.b32  	%r464, %r460, %r448;
	xor.b32  	%r465, %r458, %r461;
	xor.b32  	%r466, %r455, %r461;
	xor.b32  	%r467, %r463, %r438;
	xor.b32  	%r468, %r464, %r465;
	xor.b32  	%r469, %r466, %r435;
	xor.b32  	%r470, %r466, %r463;
	xor.b32  	%r471, %r454, 16843009;
	xor.b32  	%r472, %r446, %r471;
	xor.b32  	%r473, %r472, %r465;
	xor.b32  	%r474, %r460, %r471;
	xor.b32  	%r475, %r474, %r452;
	xor.b32  	%r476, %r469, %r459;
	xor.b32  	%r477, %r457, %r469;
	xor.b32  	%r478, %r453, %r468;
	xor.b32  	%r479, %r476, %r467;
	not.b32 	%r480, %r479;
	xor.b32  	%r481, %r450, %r451;
	xor.b32  	%r482, %r481, %r467;
	xor.b32  	%r483, %r482, %r468;
	and.b32  	%r484, %r475, 16843009;
	shl.b32 	%r485, %r473, 1;
	and.b32  	%r486, %r485, 33686018;
	or.b32  	%r487, %r486, %r484;
	and.b32  	%r488, %r478, 16843009;
	shl.b32 	%r489, %r477, 1;
	and.b32  	%r490, %r489, 33686018;
	or.b32  	%r491, %r490, %r488;
	and.b32  	%r492, %r476, 16843009;
	shl.b32 	%r493, %r483, 1;
	not.b32 	%r494, %r493;
	and.b32  	%r495, %r494, 33686018;
	or.b32  	%r496, %r495, %r492;
	and.b32  	%r497, %r480, 16843009;
	shl.b32 	%r498, %r470, 1;
	and.b32  	%r499, %r498, 33686018;
	or.b32  	%r500, %r499, %r497;
	shl.b32 	%r501, %r491, 2;
	or.b32  	%r502, %r501, %r487;
	shl.b32 	%r503, %r500, 2;
	or.b32  	%r504, %r503, %r496;
	shl.b32 	%r505, %r504, 4;
	or.b32  	%r506, %r505, %r502;
	cvt.s64.s32 	%rd40, %r3375;
	mov.u64 	%rd41, aes_keysched_base_$_Rcon;
	add.s64 	%rd42, %rd41, %rd40;
	ld.const.u8 	%r507, [%rd42];
	xor.b32  	%r3377, %r506, %r507;

$L__BB3_5:
	ld.local.u32 	%r508, [%rd70];
	xor.b32  	%r3377, %r508, %r3377;
	st.local.u32 	[%rd70+32], %r3377;
	add.s32 	%r509, %r3376, 1;
	setp.eq.s32 	%p3, %r509, 8;
	selp.b32 	%r3376, 0, %r509, %p3;
	selp.u32 	%r510, 1, 0, %p3;
	add.s32 	%r3375, %r3375, %r510;
	add.s64 	%rd70, %rd70, 4;
	add.s32 	%r3373, %r3373, 1;
	setp.ne.s32 	%p4, %r3373, 52;
	@%p4 bra 	$L__BB3_1;

	ld.param.u64 	%rd66, [bitcoin_final_param_0];
	ld.const.s32 	%rd65, [%rd66+128];
	add.s64 	%rd64, %rd66, %rd65;
	add.s64 	%rd63, %rd64, -32;
	add.u64 	%rd71, %SPL, 256;
	add.u64 	%rd56, %SPL, 0;
	ld.local.v4.u32 	{%r512, %r513, %r514, %r515}, [%rd56];
	mov.u32 	%r3378, 0;
	and.b32  	%r520, %r512, 1431655765;
	shl.b32 	%r521, %r512, 1;
	and.b32  	%r522, %r521, -1431655766;
	or.b32  	%r523, %r522, %r520;
	and.b32  	%r524, %r512, -1431655766;
	shr.u32 	%r525, %r524, 1;
	or.b32  	%r526, %r525, %r524;
	and.b32  	%r527, %r513, 1431655765;
	shl.b32 	%r528, %r513, 1;
	and.b32  	%r529, %r528, -1431655766;
	or.b32  	%r530, %r529, %r527;
	and.b32  	%r531, %r513, -1431655766;
	shr.u32 	%r532, %r531, 1;
	or.b32  	%r533, %r532, %r531;
	and.b32  	%r534, %r514, 1431655765;
	shl.b32 	%r535, %r514, 1;
	and.b32  	%r536, %r535, -1431655766;
	or.b32  	%r537, %r536, %r534;
	and.b32  	%r538, %r514, -1431655766;
	shr.u32 	%r539, %r538, 1;
	or.b32  	%r540, %r539, %r538;
	and.b32  	%r541, %r515, 1431655765;
	shl.b32 	%r542, %r515, 1;
	and.b32  	%r543, %r542, -1431655766;
	or.b32  	%r544, %r543, %r541;
	and.b32  	%r545, %r515, -1431655766;
	shr.u32 	%r546, %r545, 1;
	or.b32  	%r547, %r546, %r545;
	and.b32  	%r548, %r523, 858993459;
	shl.b32 	%r549, %r530, 2;
	and.b32  	%r550, %r549, -858993460;
	or.b32  	%r551, %r550, %r548;
	and.b32  	%r552, %r523, -858993460;
	shr.u32 	%r553, %r552, 2;
	and.b32  	%r554, %r530, -858993460;
	or.b32  	%r555, %r553, %r554;
	and.b32  	%r556, %r526, 858993459;
	shl.b32 	%r557, %r533, 2;
	and.b32  	%r558, %r557, -858993460;
	or.b32  	%r559, %r558, %r556;
	and.b32  	%r560, %r526, -858993460;
	shr.u32 	%r561, %r560, 2;
	and.b32  	%r562, %r533, -858993460;
	or.b32  	%r563, %r561, %r562;
	and.b32  	%r564, %r537, 858993459;
	shl.b32 	%r565, %r544, 2;
	and.b32  	%r566, %r565, -858993460;
	or.b32  	%r567, %r566, %r564;
	and.b32  	%r568, %r537, -858993460;
	shr.u32 	%r569, %r568, 2;
	and.b32  	%r570, %r544, -858993460;
	or.b32  	%r571, %r569, %r570;
	and.b32  	%r572, %r540, 858993459;
	shl.b32 	%r573, %r547, 2;
	and.b32  	%r574, %r573, -858993460;
	or.b32  	%r575, %r574, %r572;
	and.b32  	%r576, %r540, -858993460;
	shr.u32 	%r577, %r576, 2;
	and.b32  	%r578, %r547, -858993460;
	or.b32  	%r579, %r577, %r578;
	and.b32  	%r580, %r551, 84215045;
	shl.b32 	%r581, %r567, 4;
	and.b32  	%r582, %r581, 1347440720;
	and.b32  	%r583, %r551, 1347440720;
	and.b32  	%r584, %r567, 1347440720;
	and.b32  	%r585, %r559, 168430090;
	shl.b32 	%r586, %r575, 4;
	and.b32  	%r587, %r586, -1600085856;
	and.b32  	%r588, %r559, -1600085856;
	and.b32  	%r589, %r575, -1600085856;
	and.b32  	%r590, %r555, 84215045;
	shl.b32 	%r591, %r571, 4;
	and.b32  	%r592, %r591, 1347440720;
	and.b32  	%r593, %r555, 1347440720;
	and.b32  	%r594, %r571, 1347440720;
	and.b32  	%r595, %r563, 168430090;
	shl.b32 	%r596, %r579, 4;
	and.b32  	%r597, %r596, -1600085856;
	and.b32  	%r598, %r563, -1600085856;
	and.b32  	%r599, %r579, -1600085856;
	or.b32  	%r600, %r585, %r580;
	or.b32  	%r13, %r600, %r582;
	or.b32  	%r601, %r13, %r587;
	st.local.u32 	[%rd71], %r601;
	or.b32  	%r602, %r595, %r590;
	or.b32  	%r14, %r602, %r592;
	or.b32  	%r603, %r14, %r597;
	st.local.u32 	[%rd71+4], %r603;
	or.b32  	%r604, %r588, %r583;
	shr.u32 	%r605, %r604, 4;
	or.b32  	%r15, %r605, %r584;
	or.b32  	%r606, %r15, %r589;
	st.local.u32 	[%rd71+8], %r606;
	or.b32  	%r607, %r598, %r593;
	shr.u32 	%r608, %r607, 4;
	or.b32  	%r16, %r608, %r594;
	or.b32  	%r609, %r16, %r599;
	st.local.u32 	[%rd71+12], %r609;
	ld.local.v4.u32 	{%r610, %r611, %r612, %r613}, [%rd56+16];
	and.b32  	%r618, %r610, 1431655765;
	shl.b32 	%r619, %r610, 1;
	and.b32  	%r620, %r619, -1431655766;
	or.b32  	%r621, %r620, %r618;
	and.b32  	%r622, %r610, -1431655766;
	shr.u32 	%r623, %r622, 1;
	or.b32  	%r624, %r623, %r622;
	and.b32  	%r625, %r611, 1431655765;
	shl.b32 	%r626, %r611, 1;
	and.b32  	%r627, %r626, -1431655766;
	or.b32  	%r628, %r627, %r625;
	and.b32  	%r629, %r611, -1431655766;
	shr.u32 	%r630, %r629, 1;
	or.b32  	%r631, %r630, %r629;
	and.b32  	%r632, %r612, 1431655765;
	shl.b32 	%r633, %r612, 1;
	and.b32  	%r634, %r633, -1431655766;
	or.b32  	%r635, %r634, %r632;
	and.b32  	%r636, %r612, -1431655766;
	shr.u32 	%r637, %r636, 1;
	or.b32  	%r638, %r637, %r636;
	and.b32  	%r639, %r613, 1431655765;
	shl.b32 	%r640, %r613, 1;
	and.b32  	%r641, %r640, -1431655766;
	or.b32  	%r642, %r641, %r639;
	and.b32  	%r643, %r613, -1431655766;
	shr.u32 	%r644, %r643, 1;
	or.b32  	%r645, %r644, %r643;
	and.b32  	%r646, %r621, 858993459;
	shl.b32 	%r647, %r628, 2;
	and.b32  	%r648, %r647, -858993460;
	or.b32  	%r649, %r648, %r646;
	and.b32  	%r650, %r621, -858993460;
	shr.u32 	%r651, %r650, 2;
	and.b32  	%r652, %r628, -858993460;
	or.b32  	%r653, %r651, %r652;
	and.b32  	%r654, %r624, 858993459;
	shl.b32 	%r655, %r631, 2;
	and.b32  	%r656, %r655, -858993460;
	or.b32  	%r657, %r656, %r654;
	and.b32  	%r658, %r624, -858993460;
	shr.u32 	%r659, %r658, 2;
	and.b32  	%r660, %r631, -858993460;
	or.b32  	%r661, %r659, %r660;
	and.b32  	%r662, %r635, 858993459;
	shl.b32 	%r663, %r642, 2;
	and.b32  	%r664, %r663, -858993460;
	or.b32  	%r665, %r664, %r662;
	and.b32  	%r666, %r635, -858993460;
	shr.u32 	%r667, %r666, 2;
	and.b32  	%r668, %r642, -858993460;
	or.b32  	%r669, %r667, %r668;
	and.b32  	%r670, %r638, 858993459;
	shl.b32 	%r671, %r645, 2;
	and.b32  	%r672, %r671, -858993460;
	or.b32  	%r673, %r672, %r670;
	and.b32  	%r674, %r638, -858993460;
	shr.u32 	%r675, %r674, 2;
	and.b32  	%r676, %r645, -858993460;
	or.b32  	%r677, %r675, %r676;
	and.b32  	%r678, %r649, 84215045;
	shl.b32 	%r679, %r665, 4;
	and.b32  	%r680, %r679, 1347440720;
	and.b32  	%r681, %r649, 1347440720;
	and.b32  	%r682, %r665, 1347440720;
	and.b32  	%r683, %r657, 168430090;
	shl.b32 	%r684, %r673, 4;
	and.b32  	%r685, %r684, -1600085856;
	and.b32  	%r686, %r657, -1600085856;
	and.b32  	%r687, %r673, -1600085856;
	and.b32  	%r688, %r653, 84215045;
	shl.b32 	%r689, %r669, 4;
	and.b32  	%r690, %r689, 1347440720;
	and.b32  	%r691, %r653, 1347440720;
	and.b32  	%r692, %r669, 1347440720;
	and.b32  	%r693, %r661, 168430090;
	shl.b32 	%r694, %r677, 4;
	and.b32  	%r695, %r694, -1600085856;
	and.b32  	%r696, %r661, -1600085856;
	and.b32  	%r697, %r677, -1600085856;
	or.b32  	%r698, %r683, %r678;
	or.b32  	%r699, %r698, %r680;
	or.b32  	%r700, %r699, %r685;
	st.local.u32 	[%rd71+16], %r700;
	or.b32  	%r701, %r693, %r688;
	or.b32  	%r702, %r701, %r690;
	or.b32  	%r703, %r702, %r695;
	st.local.u32 	[%rd71+20], %r703;
	or.b32  	%r704, %r686, %r681;
	shr.u32 	%r705, %r704, 4;
	or.b32  	%r706, %r705, %r682;
	or.b32  	%r707, %r706, %r687;
	st.local.u32 	[%rd71+24], %r707;
	or.b32  	%r708, %r696, %r691;
	shr.u32 	%r709, %r708, 4;
	or.b32  	%r710, %r709, %r692;
	or.b32  	%r711, %r710, %r697;
	st.local.u32 	[%rd71+28], %r711;
	ld.local.v4.u32 	{%r712, %r713, %r714, %r715}, [%rd56+32];
	and.b32  	%r720, %r712, 1431655765;
	shl.b32 	%r721, %r712, 1;
	and.b32  	%r722, %r721, -1431655766;
	or.b32  	%r723, %r722, %r720;
	and.b32  	%r724, %r712, -1431655766;
	shr.u32 	%r725, %r724, 1;
	or.b32  	%r726, %r725, %r724;
	and.b32  	%r727, %r713, 1431655765;
	shl.b32 	%r728, %r713, 1;
	and.b32  	%r729, %r728, -1431655766;
	or.b32  	%r730, %r729, %r727;
	and.b32  	%r731, %r713, -1431655766;
	shr.u32 	%r732, %r731, 1;
	or.b32  	%r733, %r732, %r731;
	and.b32  	%r734, %r714, 1431655765;
	shl.b32 	%r735, %r714, 1;
	and.b32  	%r736, %r735, -1431655766;
	or.b32  	%r737, %r736, %r734;
	and.b32  	%r738, %r714, -1431655766;
	shr.u32 	%r739, %r738, 1;
	or.b32  	%r740, %r739, %r738;
	and.b32  	%r741, %r715, 1431655765;
	shl.b32 	%r742, %r715, 1;
	and.b32  	%r743, %r742, -1431655766;
	or.b32  	%r744, %r743, %r741;
	and.b32  	%r745, %r715, -1431655766;
	shr.u32 	%r746, %r745, 1;
	or.b32  	%r747, %r746, %r745;
	and.b32  	%r748, %r723, 858993459;
	shl.b32 	%r749, %r730, 2;
	and.b32  	%r750, %r749, -858993460;
	or.b32  	%r751, %r750, %r748;
	and.b32  	%r752, %r723, -858993460;
	shr.u32 	%r753, %r752, 2;
	and.b32  	%r754, %r730, -858993460;
	or.b32  	%r755, %r753, %r754;
	and.b32  	%r756, %r726, 858993459;
	shl.b32 	%r757, %r733, 2;
	and.b32  	%r758, %r757, -858993460;
	or.b32  	%r759, %r758, %r756;
	and.b32  	%r760, %r726, -858993460;
	shr.u32 	%r761, %r760, 2;
	and.b32  	%r762, %r733, -858993460;
	or.b32  	%r763, %r761, %r762;
	and.b32  	%r764, %r737, 858993459;
	shl.b32 	%r765, %r744, 2;
	and.b32  	%r766, %r765, -858993460;
	or.b32  	%r767, %r766, %r764;
	and.b32  	%r768, %r737, -858993460;
	shr.u32 	%r769, %r768, 2;
	and.b32  	%r770, %r744, -858993460;
	or.b32  	%r771, %r769, %r770;
	and.b32  	%r772, %r740, 858993459;
	shl.b32 	%r773, %r747, 2;
	and.b32  	%r774, %r773, -858993460;
	or.b32  	%r775, %r774, %r772;
	and.b32  	%r776, %r740, -858993460;
	shr.u32 	%r777, %r776, 2;
	and.b32  	%r778, %r747, -858993460;
	or.b32  	%r779, %r777, %r778;
	and.b32  	%r780, %r751, 84215045;
	shl.b32 	%r781, %r767, 4;
	and.b32  	%r782, %r781, 1347440720;
	and.b32  	%r783, %r751, 1347440720;
	and.b32  	%r784, %r767, 1347440720;
	and.b32  	%r785, %r759, 168430090;
	shl.b32 	%r786, %r775, 4;
	and.b32  	%r787, %r786, -1600085856;
	and.b32  	%r788, %r759, -1600085856;
	and.b32  	%r789, %r775, -1600085856;
	and.b32  	%r790, %r755, 84215045;
	shl.b32 	%r791, %r771, 4;
	and.b32  	%r792, %r791, 1347440720;
	and.b32  	%r793, %r755, 1347440720;
	and.b32  	%r794, %r771, 1347440720;
	and.b32  	%r795, %r763, 168430090;
	shl.b32 	%r796, %r779, 4;
	and.b32  	%r797, %r796, -1600085856;
	and.b32  	%r798, %r763, -1600085856;
	and.b32  	%r799, %r779, -1600085856;
	or.b32  	%r800, %r785, %r780;
	or.b32  	%r801, %r800, %r782;
	or.b32  	%r802, %r801, %r787;
	st.local.u32 	[%rd71+32], %r802;
	or.b32  	%r803, %r795, %r790;
	or.b32  	%r804, %r803, %r792;
	or.b32  	%r805, %r804, %r797;
	st.local.u32 	[%rd71+36], %r805;
	or.b32  	%r806, %r788, %r783;
	shr.u32 	%r807, %r806, 4;
	or.b32  	%r808, %r807, %r784;
	or.b32  	%r809, %r808, %r789;
	st.local.u32 	[%rd71+40], %r809;
	or.b32  	%r810, %r798, %r793;
	shr.u32 	%r811, %r810, 4;
	or.b32  	%r812, %r811, %r794;
	or.b32  	%r813, %r812, %r799;
	st.local.u32 	[%rd71+44], %r813;
	ld.local.v4.u32 	{%r814, %r815, %r816, %r817}, [%rd56+48];
	and.b32  	%r822, %r814, 1431655765;
	shl.b32 	%r823, %r814, 1;
	and.b32  	%r824, %r823, -1431655766;
	or.b32  	%r825, %r824, %r822;
	and.b32  	%r826, %r814, -1431655766;
	shr.u32 	%r827, %r826, 1;
	or.b32  	%r828, %r827, %r826;
	and.b32  	%r829, %r815, 1431655765;
	shl.b32 	%r830, %r815, 1;
	and.b32  	%r831, %r830, -1431655766;
	or.b32  	%r832, %r831, %r829;
	and.b32  	%r833, %r815, -1431655766;
	shr.u32 	%r834, %r833, 1;
	or.b32  	%r835, %r834, %r833;
	and.b32  	%r836, %r816, 1431655765;
	shl.b32 	%r837, %r816, 1;
	and.b32  	%r838, %r837, -1431655766;
	or.b32  	%r839, %r838, %r836;
	and.b32  	%r840, %r816, -1431655766;
	shr.u32 	%r841, %r840, 1;
	or.b32  	%r842, %r841, %r840;
	and.b32  	%r843, %r817, 1431655765;
	shl.b32 	%r844, %r817, 1;
	and.b32  	%r845, %r844, -1431655766;
	or.b32  	%r846, %r845, %r843;
	and.b32  	%r847, %r817, -1431655766;
	shr.u32 	%r848, %r847, 1;
	or.b32  	%r849, %r848, %r847;
	and.b32  	%r850, %r825, 858993459;
	shl.b32 	%r851, %r832, 2;
	and.b32  	%r852, %r851, -858993460;
	or.b32  	%r853, %r852, %r850;
	and.b32  	%r854, %r825, -858993460;
	shr.u32 	%r855, %r854, 2;
	and.b32  	%r856, %r832, -858993460;
	or.b32  	%r857, %r855, %r856;
	and.b32  	%r858, %r828, 858993459;
	shl.b32 	%r859, %r835, 2;
	and.b32  	%r860, %r859, -858993460;
	or.b32  	%r861, %r860, %r858;
	and.b32  	%r862, %r828, -858993460;
	shr.u32 	%r863, %r862, 2;
	and.b32  	%r864, %r835, -858993460;
	or.b32  	%r865, %r863, %r864;
	and.b32  	%r866, %r839, 858993459;
	shl.b32 	%r867, %r846, 2;
	and.b32  	%r868, %r867, -858993460;
	or.b32  	%r869, %r868, %r866;
	and.b32  	%r870, %r839, -858993460;
	shr.u32 	%r871, %r870, 2;
	and.b32  	%r872, %r846, -858993460;
	or.b32  	%r873, %r871, %r872;
	and.b32  	%r874, %r842, 858993459;
	shl.b32 	%r875, %r849, 2;
	and.b32  	%r876, %r875, -858993460;
	or.b32  	%r877, %r876, %r874;
	and.b32  	%r878, %r842, -858993460;
	shr.u32 	%r879, %r878, 2;
	and.b32  	%r880, %r849, -858993460;
	or.b32  	%r881, %r879, %r880;
	and.b32  	%r882, %r853, 84215045;
	shl.b32 	%r883, %r869, 4;
	and.b32  	%r884, %r883, 1347440720;
	and.b32  	%r885, %r853, 1347440720;
	and.b32  	%r886, %r869, 1347440720;
	and.b32  	%r887, %r861, 168430090;
	shl.b32 	%r888, %r877, 4;
	and.b32  	%r889, %r888, -1600085856;
	and.b32  	%r890, %r861, -1600085856;
	and.b32  	%r891, %r877, -1600085856;
	and.b32  	%r892, %r857, 84215045;
	shl.b32 	%r893, %r873, 4;
	and.b32  	%r894, %r893, 1347440720;
	and.b32  	%r895, %r857, 1347440720;
	and.b32  	%r896, %r873, 1347440720;
	and.b32  	%r897, %r865, 168430090;
	shl.b32 	%r898, %r881, 4;
	and.b32  	%r899, %r898, -1600085856;
	and.b32  	%r900, %r865, -1600085856;
	and.b32  	%r901, %r881, -1600085856;
	or.b32  	%r902, %r887, %r882;
	or.b32  	%r903, %r902, %r884;
	or.b32  	%r904, %r903, %r889;
	st.local.u32 	[%rd71+48], %r904;
	or.b32  	%r905, %r897, %r892;
	or.b32  	%r906, %r905, %r894;
	or.b32  	%r907, %r906, %r899;
	st.local.u32 	[%rd71+52], %r907;
	or.b32  	%r908, %r890, %r885;
	shr.u32 	%r909, %r908, 4;
	or.b32  	%r910, %r909, %r886;
	or.b32  	%r911, %r910, %r891;
	st.local.u32 	[%rd71+56], %r911;
	or.b32  	%r912, %r900, %r895;
	shr.u32 	%r913, %r912, 4;
	or.b32  	%r914, %r913, %r896;
	or.b32  	%r915, %r914, %r901;
	st.local.u32 	[%rd71+60], %r915;
	ld.local.v4.u32 	{%r916, %r917, %r918, %r919}, [%rd56+64];
	and.b32  	%r924, %r916, 1431655765;
	shl.b32 	%r925, %r916, 1;
	and.b32  	%r926, %r925, -1431655766;
	or.b32  	%r927, %r926, %r924;
	and.b32  	%r928, %r916, -1431655766;
	shr.u32 	%r929, %r928, 1;
	or.b32  	%r930, %r929, %r928;
	and.b32  	%r931, %r917, 1431655765;
	shl.b32 	%r932, %r917, 1;
	and.b32  	%r933, %r932, -1431655766;
	or.b32  	%r934, %r933, %r931;
	and.b32  	%r935, %r917, -1431655766;
	shr.u32 	%r936, %r935, 1;
	or.b32  	%r937, %r936, %r935;
	and.b32  	%r938, %r918, 1431655765;
	shl.b32 	%r939, %r918, 1;
	and.b32  	%r940, %r939, -1431655766;
	or.b32  	%r941, %r940, %r938;
	and.b32  	%r942, %r918, -1431655766;
	shr.u32 	%r943, %r942, 1;
	or.b32  	%r944, %r943, %r942;
	and.b32  	%r945, %r919, 1431655765;
	shl.b32 	%r946, %r919, 1;
	and.b32  	%r947, %r946, -1431655766;
	or.b32  	%r948, %r947, %r945;
	and.b32  	%r949, %r919, -1431655766;
	shr.u32 	%r950, %r949, 1;
	or.b32  	%r951, %r950, %r949;
	and.b32  	%r952, %r927, 858993459;
	shl.b32 	%r953, %r934, 2;
	and.b32  	%r954, %r953, -858993460;
	or.b32  	%r955, %r954, %r952;
	and.b32  	%r956, %r927, -858993460;
	shr.u32 	%r957, %r956, 2;
	and.b32  	%r958, %r934, -858993460;
	or.b32  	%r959, %r957, %r958;
	and.b32  	%r960, %r930, 858993459;
	shl.b32 	%r961, %r937, 2;
	and.b32  	%r962, %r961, -858993460;
	or.b32  	%r963, %r962, %r960;
	and.b32  	%r964, %r930, -858993460;
	shr.u32 	%r965, %r964, 2;
	and.b32  	%r966, %r937, -858993460;
	or.b32  	%r967, %r965, %r966;
	and.b32  	%r968, %r941, 858993459;
	shl.b32 	%r969, %r948, 2;
	and.b32  	%r970, %r969, -858993460;
	or.b32  	%r971, %r970, %r968;
	and.b32  	%r972, %r941, -858993460;
	shr.u32 	%r973, %r972, 2;
	and.b32  	%r974, %r948, -858993460;
	or.b32  	%r975, %r973, %r974;
	and.b32  	%r976, %r944, 858993459;
	shl.b32 	%r977, %r951, 2;
	and.b32  	%r978, %r977, -858993460;
	or.b32  	%r979, %r978, %r976;
	and.b32  	%r980, %r944, -858993460;
	shr.u32 	%r981, %r980, 2;
	and.b32  	%r982, %r951, -858993460;
	or.b32  	%r983, %r981, %r982;
	and.b32  	%r984, %r955, 84215045;
	shl.b32 	%r985, %r971, 4;
	and.b32  	%r986, %r985, 1347440720;
	and.b32  	%r987, %r955, 1347440720;
	and.b32  	%r988, %r971, 1347440720;
	and.b32  	%r989, %r963, 168430090;
	shl.b32 	%r990, %r979, 4;
	and.b32  	%r991, %r990, -1600085856;
	and.b32  	%r992, %r963, -1600085856;
	and.b32  	%r993, %r979, -1600085856;
	and.b32  	%r994, %r959, 84215045;
	shl.b32 	%r995, %r975, 4;
	and.b32  	%r996, %r995, 1347440720;
	and.b32  	%r997, %r959, 1347440720;
	and.b32  	%r998, %r975, 1347440720;
	and.b32  	%r999, %r967, 168430090;
	shl.b32 	%r1000, %r983, 4;
	and.b32  	%r1001, %r1000, -1600085856;
	and.b32  	%r1002, %r967, -1600085856;
	and.b32  	%r1003, %r983, -1600085856;
	or.b32  	%r1004, %r989, %r984;
	or.b32  	%r1005, %r1004, %r986;
	or.b32  	%r1006, %r1005, %r991;
	st.local.u32 	[%rd71+64], %r1006;
	or.b32  	%r1007, %r999, %r994;
	or.b32  	%r1008, %r1007, %r996;
	or.b32  	%r1009, %r1008, %r1001;
	st.local.u32 	[%rd71+68], %r1009;
	or.b32  	%r1010, %r992, %r987;
	shr.u32 	%r1011, %r1010, 4;
	or.b32  	%r1012, %r1011, %r988;
	or.b32  	%r1013, %r1012, %r993;
	st.local.u32 	[%rd71+72], %r1013;
	or.b32  	%r1014, %r1002, %r997;
	shr.u32 	%r1015, %r1014, 4;
	or.b32  	%r1016, %r1015, %r998;
	or.b32  	%r1017, %r1016, %r1003;
	st.local.u32 	[%rd71+76], %r1017;
	ld.local.v4.u32 	{%r1018, %r1019, %r1020, %r1021}, [%rd56+80];
	and.b32  	%r1026, %r1018, 1431655765;
	shl.b32 	%r1027, %r1018, 1;
	and.b32  	%r1028, %r1027, -1431655766;
	or.b32  	%r1029, %r1028, %r1026;
	and.b32  	%r1030, %r1018, -1431655766;
	shr.u32 	%r1031, %r1030, 1;
	or.b32  	%r1032, %r1031, %r1030;
	and.b32  	%r1033, %r1019, 1431655765;
	shl.b32 	%r1034, %r1019, 1;
	and.b32  	%r1035, %r1034, -1431655766;
	or.b32  	%r1036, %r1035, %r1033;
	and.b32  	%r1037, %r1019, -1431655766;
	shr.u32 	%r1038, %r1037, 1;
	or.b32  	%r1039, %r1038, %r1037;
	and.b32  	%r1040, %r1020, 1431655765;
	shl.b32 	%r1041, %r1020, 1;
	and.b32  	%r1042, %r1041, -1431655766;
	or.b32  	%r1043, %r1042, %r1040;
	and.b32  	%r1044, %r1020, -1431655766;
	shr.u32 	%r1045, %r1044, 1;
	or.b32  	%r1046, %r1045, %r1044;
	and.b32  	%r1047, %r1021, 1431655765;
	shl.b32 	%r1048, %r1021, 1;
	and.b32  	%r1049, %r1048, -1431655766;
	or.b32  	%r1050, %r1049, %r1047;
	and.b32  	%r1051, %r1021, -1431655766;
	shr.u32 	%r1052, %r1051, 1;
	or.b32  	%r1053, %r1052, %r1051;
	and.b32  	%r1054, %r1029, 858993459;
	shl.b32 	%r1055, %r1036, 2;
	and.b32  	%r1056, %r1055, -858993460;
	or.b32  	%r1057, %r1056, %r1054;
	and.b32  	%r1058, %r1029, -858993460;
	shr.u32 	%r1059, %r1058, 2;
	and.b32  	%r1060, %r1036, -858993460;
	or.b32  	%r1061, %r1059, %r1060;
	and.b32  	%r1062, %r1032, 858993459;
	shl.b32 	%r1063, %r1039, 2;
	and.b32  	%r1064, %r1063, -858993460;
	or.b32  	%r1065, %r1064, %r1062;
	and.b32  	%r1066, %r1032, -858993460;
	shr.u32 	%r1067, %r1066, 2;
	and.b32  	%r1068, %r1039, -858993460;
	or.b32  	%r1069, %r1067, %r1068;
	and.b32  	%r1070, %r1043, 858993459;
	shl.b32 	%r1071, %r1050, 2;
	and.b32  	%r1072, %r1071, -858993460;
	or.b32  	%r1073, %r1072, %r1070;
	and.b32  	%r1074, %r1043, -858993460;
	shr.u32 	%r1075, %r1074, 2;
	and.b32  	%r1076, %r1050, -858993460;
	or.b32  	%r1077, %r1075, %r1076;
	and.b32  	%r1078, %r1046, 858993459;
	shl.b32 	%r1079, %r1053, 2;
	and.b32  	%r1080, %r1079, -858993460;
	or.b32  	%r1081, %r1080, %r1078;
	and.b32  	%r1082, %r1046, -858993460;
	shr.u32 	%r1083, %r1082, 2;
	and.b32  	%r1084, %r1053, -858993460;
	or.b32  	%r1085, %r1083, %r1084;
	and.b32  	%r1086, %r1057, 84215045;
	shl.b32 	%r1087, %r1073, 4;
	and.b32  	%r1088, %r1087, 1347440720;
	and.b32  	%r1089, %r1057, 1347440720;
	and.b32  	%r1090, %r1073, 1347440720;
	and.b32  	%r1091, %r1065, 168430090;
	shl.b32 	%r1092, %r1081, 4;
	and.b32  	%r1093, %r1092, -1600085856;
	and.b32  	%r1094, %r1065, -1600085856;
	and.b32  	%r1095, %r1081, -1600085856;
	and.b32  	%r1096, %r1061, 84215045;
	shl.b32 	%r1097, %r1077, 4;
	and.b32  	%r1098, %r1097, 1347440720;
	and.b32  	%r1099, %r1061, 1347440720;
	and.b32  	%r1100, %r1077, 1347440720;
	and.b32  	%r1101, %r1069, 168430090;
	shl.b32 	%r1102, %r1085, 4;
	and.b32  	%r1103, %r1102, -1600085856;
	and.b32  	%r1104, %r1069, -1600085856;
	and.b32  	%r1105, %r1085, -1600085856;
	or.b32  	%r1106, %r1091, %r1086;
	or.b32  	%r1107, %r1106, %r1088;
	or.b32  	%r1108, %r1107, %r1093;
	st.local.u32 	[%rd71+80], %r1108;
	or.b32  	%r1109, %r1101, %r1096;
	or.b32  	%r1110, %r1109, %r1098;
	or.b32  	%r1111, %r1110, %r1103;
	st.local.u32 	[%rd71+84], %r1111;
	or.b32  	%r1112, %r1094, %r1089;
	shr.u32 	%r1113, %r1112, 4;
	or.b32  	%r1114, %r1113, %r1090;
	or.b32  	%r1115, %r1114, %r1095;
	st.local.u32 	[%rd71+88], %r1115;
	or.b32  	%r1116, %r1104, %r1099;
	shr.u32 	%r1117, %r1116, 4;
	or.b32  	%r1118, %r1117, %r1100;
	or.b32  	%r1119, %r1118, %r1105;
	st.local.u32 	[%rd71+92], %r1119;
	ld.local.v4.u32 	{%r1120, %r1121, %r1122, %r1123}, [%rd56+96];
	and.b32  	%r1128, %r1120, 1431655765;
	shl.b32 	%r1129, %r1120, 1;
	and.b32  	%r1130, %r1129, -1431655766;
	or.b32  	%r1131, %r1130, %r1128;
	and.b32  	%r1132, %r1120, -1431655766;
	shr.u32 	%r1133, %r1132, 1;
	or.b32  	%r1134, %r1133, %r1132;
	and.b32  	%r1135, %r1121, 1431655765;
	shl.b32 	%r1136, %r1121, 1;
	and.b32  	%r1137, %r1136, -1431655766;
	or.b32  	%r1138, %r1137, %r1135;
	and.b32  	%r1139, %r1121, -1431655766;
	shr.u32 	%r1140, %r1139, 1;
	or.b32  	%r1141, %r1140, %r1139;
	and.b32  	%r1142, %r1122, 1431655765;
	shl.b32 	%r1143, %r1122, 1;
	and.b32  	%r1144, %r1143, -1431655766;
	or.b32  	%r1145, %r1144, %r1142;
	and.b32  	%r1146, %r1122, -1431655766;
	shr.u32 	%r1147, %r1146, 1;
	or.b32  	%r1148, %r1147, %r1146;
	and.b32  	%r1149, %r1123, 1431655765;
	shl.b32 	%r1150, %r1123, 1;
	and.b32  	%r1151, %r1150, -1431655766;
	or.b32  	%r1152, %r1151, %r1149;
	and.b32  	%r1153, %r1123, -1431655766;
	shr.u32 	%r1154, %r1153, 1;
	or.b32  	%r1155, %r1154, %r1153;
	and.b32  	%r1156, %r1131, 858993459;
	shl.b32 	%r1157, %r1138, 2;
	and.b32  	%r1158, %r1157, -858993460;
	or.b32  	%r1159, %r1158, %r1156;
	and.b32  	%r1160, %r1131, -858993460;
	shr.u32 	%r1161, %r1160, 2;
	and.b32  	%r1162, %r1138, -858993460;
	or.b32  	%r1163, %r1161, %r1162;
	and.b32  	%r1164, %r1134, 858993459;
	shl.b32 	%r1165, %r1141, 2;
	and.b32  	%r1166, %r1165, -858993460;
	or.b32  	%r1167, %r1166, %r1164;
	and.b32  	%r1168, %r1134, -858993460;
	shr.u32 	%r1169, %r1168, 2;
	and.b32  	%r1170, %r1141, -858993460;
	or.b32  	%r1171, %r1169, %r1170;
	and.b32  	%r1172, %r1145, 858993459;
	shl.b32 	%r1173, %r1152, 2;
	and.b32  	%r1174, %r1173, -858993460;
	or.b32  	%r1175, %r1174, %r1172;
	and.b32  	%r1176, %r1145, -858993460;
	shr.u32 	%r1177, %r1176, 2;
	and.b32  	%r1178, %r1152, -858993460;
	or.b32  	%r1179, %r1177, %r1178;
	and.b32  	%r1180, %r1148, 858993459;
	shl.b32 	%r1181, %r1155, 2;
	and.b32  	%r1182, %r1181, -858993460;
	or.b32  	%r1183, %r1182, %r1180;
	and.b32  	%r1184, %r1148, -858993460;
	shr.u32 	%r1185, %r1184, 2;
	and.b32  	%r1186, %r1155, -858993460;
	or.b32  	%r1187, %r1185, %r1186;
	and.b32  	%r1188, %r1159, 84215045;
	shl.b32 	%r1189, %r1175, 4;
	and.b32  	%r1190, %r1189, 1347440720;
	and.b32  	%r1191, %r1159, 1347440720;
	and.b32  	%r1192, %r1175, 1347440720;
	and.b32  	%r1193, %r1167, 168430090;
	shl.b32 	%r1194, %r1183, 4;
	and.b32  	%r1195, %r1194, -1600085856;
	and.b32  	%r1196, %r1167, -1600085856;
	and.b32  	%r1197, %r1183, -1600085856;
	and.b32  	%r1198, %r1163, 84215045;
	shl.b32 	%r1199, %r1179, 4;
	and.b32  	%r1200, %r1199, 1347440720;
	and.b32  	%r1201, %r1163, 1347440720;
	and.b32  	%r1202, %r1179, 1347440720;
	and.b32  	%r1203, %r1171, 168430090;
	shl.b32 	%r1204, %r1187, 4;
	and.b32  	%r1205, %r1204, -1600085856;
	and.b32  	%r1206, %r1171, -1600085856;
	and.b32  	%r1207, %r1187, -1600085856;
	or.b32  	%r1208, %r1193, %r1188;
	or.b32  	%r1209, %r1208, %r1190;
	or.b32  	%r1210, %r1209, %r1195;
	st.local.u32 	[%rd71+96], %r1210;
	or.b32  	%r1211, %r1203, %r1198;
	or.b32  	%r1212, %r1211, %r1200;
	or.b32  	%r1213, %r1212, %r1205;
	st.local.u32 	[%rd71+100], %r1213;
	or.b32  	%r1214, %r1196, %r1191;
	shr.u32 	%r1215, %r1214, 4;
	or.b32  	%r1216, %r1215, %r1192;
	or.b32  	%r1217, %r1216, %r1197;
	st.local.u32 	[%rd71+104], %r1217;
	or.b32  	%r1218, %r1206, %r1201;
	shr.u32 	%r1219, %r1218, 4;
	or.b32  	%r1220, %r1219, %r1202;
	or.b32  	%r1221, %r1220, %r1207;
	st.local.u32 	[%rd71+108], %r1221;
	ld.local.v4.u32 	{%r1222, %r1223, %r1224, %r1225}, [%rd56+112];
	and.b32  	%r1230, %r1222, 1431655765;
	shl.b32 	%r1231, %r1222, 1;
	and.b32  	%r1232, %r1231, -1431655766;
	or.b32  	%r1233, %r1232, %r1230;
	and.b32  	%r1234, %r1222, -1431655766;
	shr.u32 	%r1235, %r1234, 1;
	or.b32  	%r1236, %r1235, %r1234;
	and.b32  	%r1237, %r1223, 1431655765;
	shl.b32 	%r1238, %r1223, 1;
	and.b32  	%r1239, %r1238, -1431655766;
	or.b32  	%r1240, %r1239, %r1237;
	and.b32  	%r1241, %r1223, -1431655766;
	shr.u32 	%r1242, %r1241, 1;
	or.b32  	%r1243, %r1242, %r1241;
	and.b32  	%r1244, %r1224, 1431655765;
	shl.b32 	%r1245, %r1224, 1;
	and.b32  	%r1246, %r1245, -1431655766;
	or.b32  	%r1247, %r1246, %r1244;
	and.b32  	%r1248, %r1224, -1431655766;
	shr.u32 	%r1249, %r1248, 1;
	or.b32  	%r1250, %r1249, %r1248;
	and.b32  	%r1251, %r1225, 1431655765;
	shl.b32 	%r1252, %r1225, 1;
	and.b32  	%r1253, %r1252, -1431655766;
	or.b32  	%r1254, %r1253, %r1251;
	and.b32  	%r1255, %r1225, -1431655766;
	shr.u32 	%r1256, %r1255, 1;
	or.b32  	%r1257, %r1256, %r1255;
	and.b32  	%r1258, %r1233, 858993459;
	shl.b32 	%r1259, %r1240, 2;
	and.b32  	%r1260, %r1259, -858993460;
	or.b32  	%r1261, %r1260, %r1258;
	and.b32  	%r1262, %r1233, -858993460;
	shr.u32 	%r1263, %r1262, 2;
	and.b32  	%r1264, %r1240, -858993460;
	or.b32  	%r1265, %r1263, %r1264;
	and.b32  	%r1266, %r1236, 858993459;
	shl.b32 	%r1267, %r1243, 2;
	and.b32  	%r1268, %r1267, -858993460;
	or.b32  	%r1269, %r1268, %r1266;
	and.b32  	%r1270, %r1236, -858993460;
	shr.u32 	%r1271, %r1270, 2;
	and.b32  	%r1272, %r1243, -858993460;
	or.b32  	%r1273, %r1271, %r1272;
	and.b32  	%r1274, %r1247, 858993459;
	shl.b32 	%r1275, %r1254, 2;
	and.b32  	%r1276, %r1275, -858993460;
	or.b32  	%r1277, %r1276, %r1274;
	and.b32  	%r1278, %r1247, -858993460;
	shr.u32 	%r1279, %r1278, 2;
	and.b32  	%r1280, %r1254, -858993460;
	or.b32  	%r1281, %r1279, %r1280;
	and.b32  	%r1282, %r1250, 858993459;
	shl.b32 	%r1283, %r1257, 2;
	and.b32  	%r1284, %r1283, -858993460;
	or.b32  	%r1285, %r1284, %r1282;
	and.b32  	%r1286, %r1250, -858993460;
	shr.u32 	%r1287, %r1286, 2;
	and.b32  	%r1288, %r1257, -858993460;
	or.b32  	%r1289, %r1287, %r1288;
	and.b32  	%r1290, %r1261, 84215045;
	shl.b32 	%r1291, %r1277, 4;
	and.b32  	%r1292, %r1291, 1347440720;
	and.b32  	%r1293, %r1261, 1347440720;
	and.b32  	%r1294, %r1277, 1347440720;
	and.b32  	%r1295, %r1269, 168430090;
	shl.b32 	%r1296, %r1285, 4;
	and.b32  	%r1297, %r1296, -1600085856;
	and.b32  	%r1298, %r1269, -1600085856;
	and.b32  	%r1299, %r1285, -1600085856;
	and.b32  	%r1300, %r1265, 84215045;
	shl.b32 	%r1301, %r1281, 4;
	and.b32  	%r1302, %r1301, 1347440720;
	and.b32  	%r1303, %r1265, 1347440720;
	and.b32  	%r1304, %r1281, 1347440720;
	and.b32  	%r1305, %r1273, 168430090;
	shl.b32 	%r1306, %r1289, 4;
	and.b32  	%r1307, %r1306, -1600085856;
	and.b32  	%r1308, %r1273, -1600085856;
	and.b32  	%r1309, %r1289, -1600085856;
	or.b32  	%r1310, %r1295, %r1290;
	or.b32  	%r1311, %r1310, %r1292;
	or.b32  	%r1312, %r1311, %r1297;
	st.local.u32 	[%rd71+112], %r1312;
	or.b32  	%r1313, %r1305, %r1300;
	or.b32  	%r1314, %r1313, %r1302;
	or.b32  	%r1315, %r1314, %r1307;
	st.local.u32 	[%rd71+116], %r1315;
	or.b32  	%r1316, %r1298, %r1293;
	shr.u32 	%r1317, %r1316, 4;
	or.b32  	%r1318, %r1317, %r1294;
	or.b32  	%r1319, %r1318, %r1299;
	st.local.u32 	[%rd71+120], %r1319;
	or.b32  	%r1320, %r1308, %r1303;
	shr.u32 	%r1321, %r1320, 4;
	or.b32  	%r1322, %r1321, %r1304;
	or.b32  	%r1323, %r1322, %r1309;
	st.local.u32 	[%rd71+124], %r1323;
	ld.local.v4.u32 	{%r1324, %r1325, %r1326, %r1327}, [%rd56+128];
	and.b32  	%r1332, %r1324, 1431655765;
	shl.b32 	%r1333, %r1324, 1;
	and.b32  	%r1334, %r1333, -1431655766;
	or.b32  	%r1335, %r1334, %r1332;
	and.b32  	%r1336, %r1324, -1431655766;
	shr.u32 	%r1337, %r1336, 1;
	or.b32  	%r1338, %r1337, %r1336;
	and.b32  	%r1339, %r1325, 1431655765;
	shl.b32 	%r1340, %r1325, 1;
	and.b32  	%r1341, %r1340, -1431655766;
	or.b32  	%r1342, %r1341, %r1339;
	and.b32  	%r1343, %r1325, -1431655766;
	shr.u32 	%r1344, %r1343, 1;
	or.b32  	%r1345, %r1344, %r1343;
	and.b32  	%r1346, %r1326, 1431655765;
	shl.b32 	%r1347, %r1326, 1;
	and.b32  	%r1348, %r1347, -1431655766;
	or.b32  	%r1349, %r1348, %r1346;
	and.b32  	%r1350, %r1326, -1431655766;
	shr.u32 	%r1351, %r1350, 1;
	or.b32  	%r1352, %r1351, %r1350;
	and.b32  	%r1353, %r1327, 1431655765;
	shl.b32 	%r1354, %r1327, 1;
	and.b32  	%r1355, %r1354, -1431655766;
	or.b32  	%r1356, %r1355, %r1353;
	and.b32  	%r1357, %r1327, -1431655766;
	shr.u32 	%r1358, %r1357, 1;
	or.b32  	%r1359, %r1358, %r1357;
	and.b32  	%r1360, %r1335, 858993459;
	shl.b32 	%r1361, %r1342, 2;
	and.b32  	%r1362, %r1361, -858993460;
	or.b32  	%r1363, %r1362, %r1360;
	and.b32  	%r1364, %r1335, -858993460;
	shr.u32 	%r1365, %r1364, 2;
	and.b32  	%r1366, %r1342, -858993460;
	or.b32  	%r1367, %r1365, %r1366;
	and.b32  	%r1368, %r1338, 858993459;
	shl.b32 	%r1369, %r1345, 2;
	and.b32  	%r1370, %r1369, -858993460;
	or.b32  	%r1371, %r1370, %r1368;
	and.b32  	%r1372, %r1338, -858993460;
	shr.u32 	%r1373, %r1372, 2;
	and.b32  	%r1374, %r1345, -858993460;
	or.b32  	%r1375, %r1373, %r1374;
	and.b32  	%r1376, %r1349, 858993459;
	shl.b32 	%r1377, %r1356, 2;
	and.b32  	%r1378, %r1377, -858993460;
	or.b32  	%r1379, %r1378, %r1376;
	and.b32  	%r1380, %r1349, -858993460;
	shr.u32 	%r1381, %r1380, 2;
	and.b32  	%r1382, %r1356, -858993460;
	or.b32  	%r1383, %r1381, %r1382;
	and.b32  	%r1384, %r1352, 858993459;
	shl.b32 	%r1385, %r1359, 2;
	and.b32  	%r1386, %r1385, -858993460;
	or.b32  	%r1387, %r1386, %r1384;
	and.b32  	%r1388, %r1352, -858993460;
	shr.u32 	%r1389, %r1388, 2;
	and.b32  	%r1390, %r1359, -858993460;
	or.b32  	%r1391, %r1389, %r1390;
	and.b32  	%r1392, %r1363, 84215045;
	shl.b32 	%r1393, %r1379, 4;
	and.b32  	%r1394, %r1393, 1347440720;
	and.b32  	%r1395, %r1363, 1347440720;
	and.b32  	%r1396, %r1379, 1347440720;
	and.b32  	%r1397, %r1371, 168430090;
	shl.b32 	%r1398, %r1387, 4;
	and.b32  	%r1399, %r1398, -1600085856;
	and.b32  	%r1400, %r1371, -1600085856;
	and.b32  	%r1401, %r1387, -1600085856;
	and.b32  	%r1402, %r1367, 84215045;
	shl.b32 	%r1403, %r1383, 4;
	and.b32  	%r1404, %r1403, 1347440720;
	and.b32  	%r1405, %r1367, 1347440720;
	and.b32  	%r1406, %r1383, 1347440720;
	and.b32  	%r1407, %r1375, 168430090;
	shl.b32 	%r1408, %r1391, 4;
	and.b32  	%r1409, %r1408, -1600085856;
	and.b32  	%r1410, %r1375, -1600085856;
	and.b32  	%r1411, %r1391, -1600085856;
	or.b32  	%r1412, %r1397, %r1392;
	or.b32  	%r1413, %r1412, %r1394;
	or.b32  	%r1414, %r1413, %r1399;
	st.local.u32 	[%rd71+128], %r1414;
	or.b32  	%r1415, %r1407, %r1402;
	or.b32  	%r1416, %r1415, %r1404;
	or.b32  	%r1417, %r1416, %r1409;
	st.local.u32 	[%rd71+132], %r1417;
	or.b32  	%r1418, %r1400, %r1395;
	shr.u32 	%r1419, %r1418, 4;
	or.b32  	%r1420, %r1419, %r1396;
	or.b32  	%r1421, %r1420, %r1401;
	st.local.u32 	[%rd71+136], %r1421;
	or.b32  	%r1422, %r1410, %r1405;
	shr.u32 	%r1423, %r1422, 4;
	or.b32  	%r1424, %r1423, %r1406;
	or.b32  	%r1425, %r1424, %r1411;
	st.local.u32 	[%rd71+140], %r1425;
	ld.local.v4.u32 	{%r1426, %r1427, %r1428, %r1429}, [%rd56+144];
	and.b32  	%r1434, %r1426, 1431655765;
	shl.b32 	%r1435, %r1426, 1;
	and.b32  	%r1436, %r1435, -1431655766;
	or.b32  	%r1437, %r1436, %r1434;
	and.b32  	%r1438, %r1426, -1431655766;
	shr.u32 	%r1439, %r1438, 1;
	or.b32  	%r1440, %r1439, %r1438;
	and.b32  	%r1441, %r1427, 1431655765;
	shl.b32 	%r1442, %r1427, 1;
	and.b32  	%r1443, %r1442, -1431655766;
	or.b32  	%r1444, %r1443, %r1441;
	and.b32  	%r1445, %r1427, -1431655766;
	shr.u32 	%r1446, %r1445, 1;
	or.b32  	%r1447, %r1446, %r1445;
	and.b32  	%r1448, %r1428, 1431655765;
	shl.b32 	%r1449, %r1428, 1;
	and.b32  	%r1450, %r1449, -1431655766;
	or.b32  	%r1451, %r1450, %r1448;
	and.b32  	%r1452, %r1428, -1431655766;
	shr.u32 	%r1453, %r1452, 1;
	or.b32  	%r1454, %r1453, %r1452;
	and.b32  	%r1455, %r1429, 1431655765;
	shl.b32 	%r1456, %r1429, 1;
	and.b32  	%r1457, %r1456, -1431655766;
	or.b32  	%r1458, %r1457, %r1455;
	and.b32  	%r1459, %r1429, -1431655766;
	shr.u32 	%r1460, %r1459, 1;
	or.b32  	%r1461, %r1460, %r1459;
	and.b32  	%r1462, %r1437, 858993459;
	shl.b32 	%r1463, %r1444, 2;
	and.b32  	%r1464, %r1463, -858993460;
	or.b32  	%r1465, %r1464, %r1462;
	and.b32  	%r1466, %r1437, -858993460;
	shr.u32 	%r1467, %r1466, 2;
	and.b32  	%r1468, %r1444, -858993460;
	or.b32  	%r1469, %r1467, %r1468;
	and.b32  	%r1470, %r1440, 858993459;
	shl.b32 	%r1471, %r1447, 2;
	and.b32  	%r1472, %r1471, -858993460;
	or.b32  	%r1473, %r1472, %r1470;
	and.b32  	%r1474, %r1440, -858993460;
	shr.u32 	%r1475, %r1474, 2;
	and.b32  	%r1476, %r1447, -858993460;
	or.b32  	%r1477, %r1475, %r1476;
	and.b32  	%r1478, %r1451, 858993459;
	shl.b32 	%r1479, %r1458, 2;
	and.b32  	%r1480, %r1479, -858993460;
	or.b32  	%r1481, %r1480, %r1478;
	and.b32  	%r1482, %r1451, -858993460;
	shr.u32 	%r1483, %r1482, 2;
	and.b32  	%r1484, %r1458, -858993460;
	or.b32  	%r1485, %r1483, %r1484;
	and.b32  	%r1486, %r1454, 858993459;
	shl.b32 	%r1487, %r1461, 2;
	and.b32  	%r1488, %r1487, -858993460;
	or.b32  	%r1489, %r1488, %r1486;
	and.b32  	%r1490, %r1454, -858993460;
	shr.u32 	%r1491, %r1490, 2;
	and.b32  	%r1492, %r1461, -858993460;
	or.b32  	%r1493, %r1491, %r1492;
	and.b32  	%r1494, %r1465, 84215045;
	shl.b32 	%r1495, %r1481, 4;
	and.b32  	%r1496, %r1495, 1347440720;
	and.b32  	%r1497, %r1465, 1347440720;
	and.b32  	%r1498, %r1481, 1347440720;
	and.b32  	%r1499, %r1473, 168430090;
	shl.b32 	%r1500, %r1489, 4;
	and.b32  	%r1501, %r1500, -1600085856;
	and.b32  	%r1502, %r1473, -1600085856;
	and.b32  	%r1503, %r1489, -1600085856;
	and.b32  	%r1504, %r1469, 84215045;
	shl.b32 	%r1505, %r1485, 4;
	and.b32  	%r1506, %r1505, 1347440720;
	and.b32  	%r1507, %r1469, 1347440720;
	and.b32  	%r1508, %r1485, 1347440720;
	and.b32  	%r1509, %r1477, 168430090;
	shl.b32 	%r1510, %r1493, 4;
	and.b32  	%r1511, %r1510, -1600085856;
	and.b32  	%r1512, %r1477, -1600085856;
	and.b32  	%r1513, %r1493, -1600085856;
	or.b32  	%r1514, %r1499, %r1494;
	or.b32  	%r1515, %r1514, %r1496;
	or.b32  	%r1516, %r1515, %r1501;
	st.local.u32 	[%rd71+144], %r1516;
	or.b32  	%r1517, %r1509, %r1504;
	or.b32  	%r1518, %r1517, %r1506;
	or.b32  	%r1519, %r1518, %r1511;
	st.local.u32 	[%rd71+148], %r1519;
	or.b32  	%r1520, %r1502, %r1497;
	shr.u32 	%r1521, %r1520, 4;
	or.b32  	%r1522, %r1521, %r1498;
	or.b32  	%r1523, %r1522, %r1503;
	st.local.u32 	[%rd71+152], %r1523;
	or.b32  	%r1524, %r1512, %r1507;
	shr.u32 	%r1525, %r1524, 4;
	or.b32  	%r1526, %r1525, %r1508;
	or.b32  	%r1527, %r1526, %r1513;
	st.local.u32 	[%rd71+156], %r1527;
	ld.local.v4.u32 	{%r1528, %r1529, %r1530, %r1531}, [%rd56+160];
	and.b32  	%r1536, %r1528, 1431655765;
	shl.b32 	%r1537, %r1528, 1;
	and.b32  	%r1538, %r1537, -1431655766;
	or.b32  	%r1539, %r1538, %r1536;
	and.b32  	%r1540, %r1528, -1431655766;
	shr.u32 	%r1541, %r1540, 1;
	or.b32  	%r1542, %r1541, %r1540;
	and.b32  	%r1543, %r1529, 1431655765;
	shl.b32 	%r1544, %r1529, 1;
	and.b32  	%r1545, %r1544, -1431655766;
	or.b32  	%r1546, %r1545, %r1543;
	and.b32  	%r1547, %r1529, -1431655766;
	shr.u32 	%r1548, %r1547, 1;
	or.b32  	%r1549, %r1548, %r1547;
	and.b32  	%r1550, %r1530, 1431655765;
	shl.b32 	%r1551, %r1530, 1;
	and.b32  	%r1552, %r1551, -1431655766;
	or.b32  	%r1553, %r1552, %r1550;
	and.b32  	%r1554, %r1530, -1431655766;
	shr.u32 	%r1555, %r1554, 1;
	or.b32  	%r1556, %r1555, %r1554;
	and.b32  	%r1557, %r1531, 1431655765;
	shl.b32 	%r1558, %r1531, 1;
	and.b32  	%r1559, %r1558, -1431655766;
	or.b32  	%r1560, %r1559, %r1557;
	and.b32  	%r1561, %r1531, -1431655766;
	shr.u32 	%r1562, %r1561, 1;
	or.b32  	%r1563, %r1562, %r1561;
	and.b32  	%r1564, %r1539, 858993459;
	shl.b32 	%r1565, %r1546, 2;
	and.b32  	%r1566, %r1565, -858993460;
	or.b32  	%r1567, %r1566, %r1564;
	and.b32  	%r1568, %r1539, -858993460;
	shr.u32 	%r1569, %r1568, 2;
	and.b32  	%r1570, %r1546, -858993460;
	or.b32  	%r1571, %r1569, %r1570;
	and.b32  	%r1572, %r1542, 858993459;
	shl.b32 	%r1573, %r1549, 2;
	and.b32  	%r1574, %r1573, -858993460;
	or.b32  	%r1575, %r1574, %r1572;
	and.b32  	%r1576, %r1542, -858993460;
	shr.u32 	%r1577, %r1576, 2;
	and.b32  	%r1578, %r1549, -858993460;
	or.b32  	%r1579, %r1577, %r1578;
	and.b32  	%r1580, %r1553, 858993459;
	shl.b32 	%r1581, %r1560, 2;
	and.b32  	%r1582, %r1581, -858993460;
	or.b32  	%r1583, %r1582, %r1580;
	and.b32  	%r1584, %r1553, -858993460;
	shr.u32 	%r1585, %r1584, 2;
	and.b32  	%r1586, %r1560, -858993460;
	or.b32  	%r1587, %r1585, %r1586;
	and.b32  	%r1588, %r1556, 858993459;
	shl.b32 	%r1589, %r1563, 2;
	and.b32  	%r1590, %r1589, -858993460;
	or.b32  	%r1591, %r1590, %r1588;
	and.b32  	%r1592, %r1556, -858993460;
	shr.u32 	%r1593, %r1592, 2;
	and.b32  	%r1594, %r1563, -858993460;
	or.b32  	%r1595, %r1593, %r1594;
	and.b32  	%r1596, %r1567, 84215045;
	shl.b32 	%r1597, %r1583, 4;
	and.b32  	%r1598, %r1597, 1347440720;
	and.b32  	%r1599, %r1567, 1347440720;
	and.b32  	%r1600, %r1583, 1347440720;
	and.b32  	%r1601, %r1575, 168430090;
	shl.b32 	%r1602, %r1591, 4;
	and.b32  	%r1603, %r1602, -1600085856;
	and.b32  	%r1604, %r1575, -1600085856;
	and.b32  	%r1605, %r1591, -1600085856;
	and.b32  	%r1606, %r1571, 84215045;
	shl.b32 	%r1607, %r1587, 4;
	and.b32  	%r1608, %r1607, 1347440720;
	and.b32  	%r1609, %r1571, 1347440720;
	and.b32  	%r1610, %r1587, 1347440720;
	and.b32  	%r1611, %r1579, 168430090;
	shl.b32 	%r1612, %r1595, 4;
	and.b32  	%r1613, %r1612, -1600085856;
	and.b32  	%r1614, %r1579, -1600085856;
	and.b32  	%r1615, %r1595, -1600085856;
	or.b32  	%r1616, %r1601, %r1596;
	or.b32  	%r1617, %r1616, %r1598;
	or.b32  	%r1618, %r1617, %r1603;
	st.local.u32 	[%rd71+160], %r1618;
	or.b32  	%r1619, %r1611, %r1606;
	or.b32  	%r1620, %r1619, %r1608;
	or.b32  	%r1621, %r1620, %r1613;
	st.local.u32 	[%rd71+164], %r1621;
	or.b32  	%r1622, %r1604, %r1599;
	shr.u32 	%r1623, %r1622, 4;
	or.b32  	%r1624, %r1623, %r1600;
	or.b32  	%r1625, %r1624, %r1605;
	st.local.u32 	[%rd71+168], %r1625;
	or.b32  	%r1626, %r1614, %r1609;
	shr.u32 	%r1627, %r1626, 4;
	or.b32  	%r1628, %r1627, %r1610;
	or.b32  	%r1629, %r1628, %r1615;
	st.local.u32 	[%rd71+172], %r1629;
	ld.local.v4.u32 	{%r1630, %r1631, %r1632, %r1633}, [%rd56+176];
	and.b32  	%r1638, %r1630, 1431655765;
	shl.b32 	%r1639, %r1630, 1;
	and.b32  	%r1640, %r1639, -1431655766;
	or.b32  	%r1641, %r1640, %r1638;
	and.b32  	%r1642, %r1630, -1431655766;
	shr.u32 	%r1643, %r1642, 1;
	or.b32  	%r1644, %r1643, %r1642;
	and.b32  	%r1645, %r1631, 1431655765;
	shl.b32 	%r1646, %r1631, 1;
	and.b32  	%r1647, %r1646, -1431655766;
	or.b32  	%r1648, %r1647, %r1645;
	and.b32  	%r1649, %r1631, -1431655766;
	shr.u32 	%r1650, %r1649, 1;
	or.b32  	%r1651, %r1650, %r1649;
	and.b32  	%r1652, %r1632, 1431655765;
	shl.b32 	%r1653, %r1632, 1;
	and.b32  	%r1654, %r1653, -1431655766;
	or.b32  	%r1655, %r1654, %r1652;
	and.b32  	%r1656, %r1632, -1431655766;
	shr.u32 	%r1657, %r1656, 1;
	or.b32  	%r1658, %r1657, %r1656;
	and.b32  	%r1659, %r1633, 1431655765;
	shl.b32 	%r1660, %r1633, 1;
	and.b32  	%r1661, %r1660, -1431655766;
	or.b32  	%r1662, %r1661, %r1659;
	and.b32  	%r1663, %r1633, -1431655766;
	shr.u32 	%r1664, %r1663, 1;
	or.b32  	%r1665, %r1664, %r1663;
	and.b32  	%r1666, %r1641, 858993459;
	shl.b32 	%r1667, %r1648, 2;
	and.b32  	%r1668, %r1667, -858993460;
	or.b32  	%r1669, %r1668, %r1666;
	and.b32  	%r1670, %r1641, -858993460;
	shr.u32 	%r1671, %r1670, 2;
	and.b32  	%r1672, %r1648, -858993460;
	or.b32  	%r1673, %r1671, %r1672;
	and.b32  	%r1674, %r1644, 858993459;
	shl.b32 	%r1675, %r1651, 2;
	and.b32  	%r1676, %r1675, -858993460;
	or.b32  	%r1677, %r1676, %r1674;
	and.b32  	%r1678, %r1644, -858993460;
	shr.u32 	%r1679, %r1678, 2;
	and.b32  	%r1680, %r1651, -858993460;
	or.b32  	%r1681, %r1679, %r1680;
	and.b32  	%r1682, %r1655, 858993459;
	shl.b32 	%r1683, %r1662, 2;
	and.b32  	%r1684, %r1683, -858993460;
	or.b32  	%r1685, %r1684, %r1682;
	and.b32  	%r1686, %r1655, -858993460;
	shr.u32 	%r1687, %r1686, 2;
	and.b32  	%r1688, %r1662, -858993460;
	or.b32  	%r1689, %r1687, %r1688;
	and.b32  	%r1690, %r1658, 858993459;
	shl.b32 	%r1691, %r1665, 2;
	and.b32  	%r1692, %r1691, -858993460;
	or.b32  	%r1693, %r1692, %r1690;
	and.b32  	%r1694, %r1658, -858993460;
	shr.u32 	%r1695, %r1694, 2;
	and.b32  	%r1696, %r1665, -858993460;
	or.b32  	%r1697, %r1695, %r1696;
	and.b32  	%r1698, %r1669, 84215045;
	shl.b32 	%r1699, %r1685, 4;
	and.b32  	%r1700, %r1699, 1347440720;
	and.b32  	%r1701, %r1669, 1347440720;
	and.b32  	%r1702, %r1685, 1347440720;
	and.b32  	%r1703, %r1677, 168430090;
	shl.b32 	%r1704, %r1693, 4;
	and.b32  	%r1705, %r1704, -1600085856;
	and.b32  	%r1706, %r1677, -1600085856;
	and.b32  	%r1707, %r1693, -1600085856;
	and.b32  	%r1708, %r1673, 84215045;
	shl.b32 	%r1709, %r1689, 4;
	and.b32  	%r1710, %r1709, 1347440720;
	and.b32  	%r1711, %r1673, 1347440720;
	and.b32  	%r1712, %r1689, 1347440720;
	and.b32  	%r1713, %r1681, 168430090;
	shl.b32 	%r1714, %r1697, 4;
	and.b32  	%r1715, %r1714, -1600085856;
	and.b32  	%r1716, %r1681, -1600085856;
	and.b32  	%r1717, %r1697, -1600085856;
	or.b32  	%r1718, %r1703, %r1698;
	or.b32  	%r1719, %r1718, %r1700;
	or.b32  	%r1720, %r1719, %r1705;
	st.local.u32 	[%rd71+176], %r1720;
	or.b32  	%r1721, %r1713, %r1708;
	or.b32  	%r1722, %r1721, %r1710;
	or.b32  	%r1723, %r1722, %r1715;
	st.local.u32 	[%rd71+180], %r1723;
	or.b32  	%r1724, %r1706, %r1701;
	shr.u32 	%r1725, %r1724, 4;
	or.b32  	%r1726, %r1725, %r1702;
	or.b32  	%r1727, %r1726, %r1707;
	st.local.u32 	[%rd71+184], %r1727;
	or.b32  	%r1728, %r1716, %r1711;
	shr.u32 	%r1729, %r1728, 4;
	or.b32  	%r1730, %r1729, %r1712;
	or.b32  	%r1731, %r1730, %r1717;
	st.local.u32 	[%rd71+188], %r1731;
	ld.local.v4.u32 	{%r1732, %r1733, %r1734, %r1735}, [%rd56+192];
	and.b32  	%r1740, %r1732, 1431655765;
	shl.b32 	%r1741, %r1732, 1;
	and.b32  	%r1742, %r1741, -1431655766;
	or.b32  	%r1743, %r1742, %r1740;
	and.b32  	%r1744, %r1732, -1431655766;
	shr.u32 	%r1745, %r1744, 1;
	or.b32  	%r1746, %r1745, %r1744;
	and.b32  	%r1747, %r1733, 1431655765;
	shl.b32 	%r1748, %r1733, 1;
	and.b32  	%r1749, %r1748, -1431655766;
	or.b32  	%r1750, %r1749, %r1747;
	and.b32  	%r1751, %r1733, -1431655766;
	shr.u32 	%r1752, %r1751, 1;
	or.b32  	%r1753, %r1752, %r1751;
	and.b32  	%r1754, %r1734, 1431655765;
	shl.b32 	%r1755, %r1734, 1;
	and.b32  	%r1756, %r1755, -1431655766;
	or.b32  	%r1757, %r1756, %r1754;
	and.b32  	%r1758, %r1734, -1431655766;
	shr.u32 	%r1759, %r1758, 1;
	or.b32  	%r1760, %r1759, %r1758;
	and.b32  	%r1761, %r1735, 1431655765;
	shl.b32 	%r1762, %r1735, 1;
	and.b32  	%r1763, %r1762, -1431655766;
	or.b32  	%r1764, %r1763, %r1761;
	and.b32  	%r1765, %r1735, -1431655766;
	shr.u32 	%r1766, %r1765, 1;
	or.b32  	%r1767, %r1766, %r1765;
	and.b32  	%r1768, %r1743, 858993459;
	shl.b32 	%r1769, %r1750, 2;
	and.b32  	%r1770, %r1769, -858993460;
	or.b32  	%r1771, %r1770, %r1768;
	and.b32  	%r1772, %r1743, -858993460;
	shr.u32 	%r1773, %r1772, 2;
	and.b32  	%r1774, %r1750, -858993460;
	or.b32  	%r1775, %r1773, %r1774;
	and.b32  	%r1776, %r1746, 858993459;
	shl.b32 	%r1777, %r1753, 2;
	and.b32  	%r1778, %r1777, -858993460;
	or.b32  	%r1779, %r1778, %r1776;
	and.b32  	%r1780, %r1746, -858993460;
	shr.u32 	%r1781, %r1780, 2;
	and.b32  	%r1782, %r1753, -858993460;
	or.b32  	%r1783, %r1781, %r1782;
	and.b32  	%r1784, %r1757, 858993459;
	shl.b32 	%r1785, %r1764, 2;
	and.b32  	%r1786, %r1785, -858993460;
	or.b32  	%r1787, %r1786, %r1784;
	and.b32  	%r1788, %r1757, -858993460;
	shr.u32 	%r1789, %r1788, 2;
	and.b32  	%r1790, %r1764, -858993460;
	or.b32  	%r1791, %r1789, %r1790;
	and.b32  	%r1792, %r1760, 858993459;
	shl.b32 	%r1793, %r1767, 2;
	and.b32  	%r1794, %r1793, -858993460;
	or.b32  	%r1795, %r1794, %r1792;
	and.b32  	%r1796, %r1760, -858993460;
	shr.u32 	%r1797, %r1796, 2;
	and.b32  	%r1798, %r1767, -858993460;
	or.b32  	%r1799, %r1797, %r1798;
	and.b32  	%r1800, %r1771, 84215045;
	shl.b32 	%r1801, %r1787, 4;
	and.b32  	%r1802, %r1801, 1347440720;
	and.b32  	%r1803, %r1771, 1347440720;
	and.b32  	%r1804, %r1787, 1347440720;
	and.b32  	%r1805, %r1779, 168430090;
	shl.b32 	%r1806, %r1795, 4;
	and.b32  	%r1807, %r1806, -1600085856;
	and.b32  	%r1808, %r1779, -1600085856;
	and.b32  	%r1809, %r1795, -1600085856;
	and.b32  	%r1810, %r1775, 84215045;
	shl.b32 	%r1811, %r1791, 4;
	and.b32  	%r1812, %r1811, 1347440720;
	and.b32  	%r1813, %r1775, 1347440720;
	and.b32  	%r1814, %r1791, 1347440720;
	and.b32  	%r1815, %r1783, 168430090;
	shl.b32 	%r1816, %r1799, 4;
	and.b32  	%r1817, %r1816, -1600085856;
	and.b32  	%r1818, %r1783, -1600085856;
	and.b32  	%r1819, %r1799, -1600085856;
	or.b32  	%r1820, %r1805, %r1800;
	or.b32  	%r1821, %r1820, %r1802;
	or.b32  	%r1822, %r1821, %r1807;
	st.local.u32 	[%rd71+192], %r1822;
	or.b32  	%r1823, %r1815, %r1810;
	or.b32  	%r1824, %r1823, %r1812;
	or.b32  	%r1825, %r1824, %r1817;
	st.local.u32 	[%rd71+196], %r1825;
	or.b32  	%r1826, %r1808, %r1803;
	shr.u32 	%r1827, %r1826, 4;
	or.b32  	%r1828, %r1827, %r1804;
	or.b32  	%r1829, %r1828, %r1809;
	st.local.u32 	[%rd71+200], %r1829;
	or.b32  	%r1830, %r1818, %r1813;
	shr.u32 	%r1831, %r1830, 4;
	or.b32  	%r1832, %r1831, %r1814;
	or.b32  	%r1833, %r1832, %r1819;
	st.local.u32 	[%rd71+204], %r1833;
	ld.local.v4.u32 	{%r1834, %r1835, %r1836, %r1837}, [%rd56+208];
	and.b32  	%r1842, %r1834, 1431655765;
	shl.b32 	%r1843, %r1834, 1;
	and.b32  	%r1844, %r1843, -1431655766;
	or.b32  	%r1845, %r1844, %r1842;
	and.b32  	%r1846, %r1834, -1431655766;
	shr.u32 	%r1847, %r1846, 1;
	or.b32  	%r1848, %r1847, %r1846;
	and.b32  	%r1849, %r1835, 1431655765;
	shl.b32 	%r1850, %r1835, 1;
	and.b32  	%r1851, %r1850, -1431655766;
	or.b32  	%r1852, %r1851, %r1849;
	and.b32  	%r1853, %r1835, -1431655766;
	shr.u32 	%r1854, %r1853, 1;
	or.b32  	%r1855, %r1854, %r1853;
	and.b32  	%r1856, %r1836, 1431655765;
	shl.b32 	%r1857, %r1836, 1;
	and.b32  	%r1858, %r1857, -1431655766;
	or.b32  	%r1859, %r1858, %r1856;
	and.b32  	%r1860, %r1836, -1431655766;
	shr.u32 	%r1861, %r1860, 1;
	or.b32  	%r1862, %r1861, %r1860;
	and.b32  	%r1863, %r1837, 1431655765;
	shl.b32 	%r1864, %r1837, 1;
	and.b32  	%r1865, %r1864, -1431655766;
	or.b32  	%r1866, %r1865, %r1863;
	and.b32  	%r1867, %r1837, -1431655766;
	shr.u32 	%r1868, %r1867, 1;
	or.b32  	%r1869, %r1868, %r1867;
	and.b32  	%r1870, %r1845, 858993459;
	shl.b32 	%r1871, %r1852, 2;
	and.b32  	%r1872, %r1871, -858993460;
	or.b32  	%r1873, %r1872, %r1870;
	and.b32  	%r1874, %r1845, -858993460;
	shr.u32 	%r1875, %r1874, 2;
	and.b32  	%r1876, %r1852, -858993460;
	or.b32  	%r1877, %r1875, %r1876;
	and.b32  	%r1878, %r1848, 858993459;
	shl.b32 	%r1879, %r1855, 2;
	and.b32  	%r1880, %r1879, -858993460;
	or.b32  	%r1881, %r1880, %r1878;
	and.b32  	%r1882, %r1848, -858993460;
	shr.u32 	%r1883, %r1882, 2;
	and.b32  	%r1884, %r1855, -858993460;
	or.b32  	%r1885, %r1883, %r1884;
	and.b32  	%r1886, %r1859, 858993459;
	shl.b32 	%r1887, %r1866, 2;
	and.b32  	%r1888, %r1887, -858993460;
	or.b32  	%r1889, %r1888, %r1886;
	and.b32  	%r1890, %r1859, -858993460;
	shr.u32 	%r1891, %r1890, 2;
	and.b32  	%r1892, %r1866, -858993460;
	or.b32  	%r1893, %r1891, %r1892;
	and.b32  	%r1894, %r1862, 858993459;
	shl.b32 	%r1895, %r1869, 2;
	and.b32  	%r1896, %r1895, -858993460;
	or.b32  	%r1897, %r1896, %r1894;
	and.b32  	%r1898, %r1862, -858993460;
	shr.u32 	%r1899, %r1898, 2;
	and.b32  	%r1900, %r1869, -858993460;
	or.b32  	%r1901, %r1899, %r1900;
	and.b32  	%r1902, %r1873, 84215045;
	shl.b32 	%r1903, %r1889, 4;
	and.b32  	%r1904, %r1903, 1347440720;
	and.b32  	%r1905, %r1873, 1347440720;
	and.b32  	%r1906, %r1889, 1347440720;
	and.b32  	%r1907, %r1881, 168430090;
	shl.b32 	%r1908, %r1897, 4;
	and.b32  	%r1909, %r1908, -1600085856;
	and.b32  	%r1910, %r1881, -1600085856;
	and.b32  	%r1911, %r1897, -1600085856;
	and.b32  	%r1912, %r1877, 84215045;
	shl.b32 	%r1913, %r1893, 4;
	and.b32  	%r1914, %r1913, 1347440720;
	and.b32  	%r1915, %r1877, 1347440720;
	and.b32  	%r1916, %r1893, 1347440720;
	and.b32  	%r1917, %r1885, 168430090;
	shl.b32 	%r1918, %r1901, 4;
	and.b32  	%r1919, %r1918, -1600085856;
	and.b32  	%r1920, %r1885, -1600085856;
	and.b32  	%r1921, %r1901, -1600085856;
	or.b32  	%r1922, %r1907, %r1902;
	or.b32  	%r1923, %r1922, %r1904;
	or.b32  	%r1924, %r1923, %r1909;
	st.local.u32 	[%rd71+208], %r1924;
	or.b32  	%r1925, %r1917, %r1912;
	or.b32  	%r1926, %r1925, %r1914;
	or.b32  	%r1927, %r1926, %r1919;
	st.local.u32 	[%rd71+212], %r1927;
	or.b32  	%r1928, %r1910, %r1905;
	shr.u32 	%r1929, %r1928, 4;
	or.b32  	%r1930, %r1929, %r1906;
	or.b32  	%r1931, %r1930, %r1911;
	st.local.u32 	[%rd71+216], %r1931;
	or.b32  	%r1932, %r1920, %r1915;
	shr.u32 	%r1933, %r1932, 4;
	or.b32  	%r1934, %r1933, %r1916;
	or.b32  	%r1935, %r1934, %r1921;
	st.local.u32 	[%rd71+220], %r1935;
	ld.local.v4.u32 	{%r1936, %r1937, %r1938, %r1939}, [%rd56+224];
	and.b32  	%r1944, %r1936, 1431655765;
	shl.b32 	%r1945, %r1936, 1;
	and.b32  	%r1946, %r1945, -1431655766;
	or.b32  	%r1947, %r1946, %r1944;
	and.b32  	%r1948, %r1936, -1431655766;
	shr.u32 	%r1949, %r1948, 1;
	or.b32  	%r1950, %r1949, %r1948;
	and.b32  	%r1951, %r1937, 1431655765;
	shl.b32 	%r1952, %r1937, 1;
	and.b32  	%r1953, %r1952, -1431655766;
	or.b32  	%r1954, %r1953, %r1951;
	and.b32  	%r1955, %r1937, -1431655766;
	shr.u32 	%r1956, %r1955, 1;
	or.b32  	%r1957, %r1956, %r1955;
	and.b32  	%r1958, %r1938, 1431655765;
	shl.b32 	%r1959, %r1938, 1;
	and.b32  	%r1960, %r1959, -1431655766;
	or.b32  	%r1961, %r1960, %r1958;
	and.b32  	%r1962, %r1938, -1431655766;
	shr.u32 	%r1963, %r1962, 1;
	or.b32  	%r1964, %r1963, %r1962;
	and.b32  	%r1965, %r1939, 1431655765;
	shl.b32 	%r1966, %r1939, 1;
	and.b32  	%r1967, %r1966, -1431655766;
	or.b32  	%r1968, %r1967, %r1965;
	and.b32  	%r1969, %r1939, -1431655766;
	shr.u32 	%r1970, %r1969, 1;
	or.b32  	%r1971, %r1970, %r1969;
	and.b32  	%r1972, %r1947, 858993459;
	shl.b32 	%r1973, %r1954, 2;
	and.b32  	%r1974, %r1973, -858993460;
	or.b32  	%r1975, %r1974, %r1972;
	and.b32  	%r1976, %r1947, -858993460;
	shr.u32 	%r1977, %r1976, 2;
	and.b32  	%r1978, %r1954, -858993460;
	or.b32  	%r1979, %r1977, %r1978;
	and.b32  	%r1980, %r1950, 858993459;
	shl.b32 	%r1981, %r1957, 2;
	and.b32  	%r1982, %r1981, -858993460;
	or.b32  	%r1983, %r1982, %r1980;
	and.b32  	%r1984, %r1950, -858993460;
	shr.u32 	%r1985, %r1984, 2;
	and.b32  	%r1986, %r1957, -858993460;
	or.b32  	%r1987, %r1985, %r1986;
	and.b32  	%r1988, %r1961, 858993459;
	shl.b32 	%r1989, %r1968, 2;
	and.b32  	%r1990, %r1989, -858993460;
	or.b32  	%r1991, %r1990, %r1988;
	and.b32  	%r1992, %r1961, -858993460;
	shr.u32 	%r1993, %r1992, 2;
	and.b32  	%r1994, %r1968, -858993460;
	or.b32  	%r1995, %r1993, %r1994;
	and.b32  	%r1996, %r1964, 858993459;
	shl.b32 	%r1997, %r1971, 2;
	and.b32  	%r1998, %r1997, -858993460;
	or.b32  	%r1999, %r1998, %r1996;
	and.b32  	%r2000, %r1964, -858993460;
	shr.u32 	%r2001, %r2000, 2;
	and.b32  	%r2002, %r1971, -858993460;
	or.b32  	%r2003, %r2001, %r2002;
	and.b32  	%r2004, %r1975, 84215045;
	shl.b32 	%r2005, %r1991, 4;
	and.b32  	%r2006, %r2005, 1347440720;
	and.b32  	%r2007, %r1975, 1347440720;
	and.b32  	%r2008, %r1991, 1347440720;
	and.b32  	%r2009, %r1983, 168430090;
	shl.b32 	%r2010, %r1999, 4;
	and.b32  	%r2011, %r2010, -1600085856;
	and.b32  	%r2012, %r1983, -1600085856;
	and.b32  	%r2013, %r1999, -1600085856;
	and.b32  	%r2014, %r1979, 84215045;
	shl.b32 	%r2015, %r1995, 4;
	and.b32  	%r2016, %r2015, 1347440720;
	and.b32  	%r2017, %r1979, 1347440720;
	and.b32  	%r2018, %r1995, 1347440720;
	and.b32  	%r2019, %r1987, 168430090;
	shl.b32 	%r2020, %r2003, 4;
	and.b32  	%r2021, %r2020, -1600085856;
	and.b32  	%r2022, %r1987, -1600085856;
	and.b32  	%r2023, %r2003, -1600085856;
	or.b32  	%r2024, %r2009, %r2004;
	or.b32  	%r2025, %r2024, %r2006;
	or.b32  	%r2026, %r2025, %r2011;
	st.local.u32 	[%rd71+224], %r2026;
	or.b32  	%r2027, %r2019, %r2014;
	or.b32  	%r2028, %r2027, %r2016;
	or.b32  	%r2029, %r2028, %r2021;
	st.local.u32 	[%rd71+228], %r2029;
	or.b32  	%r2030, %r2012, %r2007;
	shr.u32 	%r2031, %r2030, 4;
	or.b32  	%r2032, %r2031, %r2008;
	or.b32  	%r2033, %r2032, %r2013;
	st.local.u32 	[%rd71+232], %r2033;
	or.b32  	%r2034, %r2022, %r2017;
	shr.u32 	%r2035, %r2034, 4;
	or.b32  	%r2036, %r2035, %r2018;
	or.b32  	%r2037, %r2036, %r2023;
	st.local.u32 	[%rd71+236], %r2037;
	mov.u32 	%r2038, 14;
	st.local.u32 	[%rd71+720], %r2038;
	and.b32  	%r2039, %r13, 1431655765;
	shl.b32 	%r2040, %r13, 1;
	and.b32  	%r2041, %r2040, -1431655766;
	or.b32  	%r2042, %r2041, %r2039;
	st.local.u32 	[%rd71+240], %r2042;
	and.b32  	%r2043, %r601, -1431655766;
	shr.u32 	%r17, %r2043, 1;
	or.b32  	%r2044, %r17, %r2043;
	st.local.u32 	[%rd71+244], %r2044;
	and.b32  	%r2045, %r14, 1431655765;
	shl.b32 	%r2046, %r14, 1;
	and.b32  	%r2047, %r2046, -1431655766;
	or.b32  	%r2048, %r2047, %r2045;
	st.local.u32 	[%rd71+248], %r2048;
	and.b32  	%r2049, %r603, -1431655766;
	shr.u32 	%r18, %r2049, 1;
	or.b32  	%r2050, %r18, %r2049;
	st.local.u32 	[%rd71+252], %r2050;
	and.b32  	%r2051, %r15, 1431655765;
	shl.b32 	%r2052, %r15, 1;
	and.b32  	%r2053, %r2052, -1431655766;
	or.b32  	%r2054, %r2053, %r2051;
	st.local.u32 	[%rd71+256], %r2054;
	and.b32  	%r2055, %r606, -1431655766;
	shr.u32 	%r19, %r2055, 1;
	or.b32  	%r2056, %r19, %r2055;
	st.local.u32 	[%rd71+260], %r2056;
	and.b32  	%r2057, %r16, 1431655765;
	shl.b32 	%r2058, %r16, 1;
	and.b32  	%r2059, %r2058, -1431655766;
	or.b32  	%r2060, %r2059, %r2057;
	st.local.u32 	[%rd71+264], %r2060;
	and.b32  	%r2061, %r609, -1431655766;
	shr.u32 	%r20, %r2061, 1;
	or.b32  	%r2062, %r20, %r2061;
	st.local.u32 	[%rd71+268], %r2062;
	and.b32  	%r2063, %r699, 1431655765;
	shl.b32 	%r2064, %r699, 1;
	and.b32  	%r2065, %r2064, -1431655766;
	or.b32  	%r2066, %r2065, %r2063;
	st.local.u32 	[%rd71+272], %r2066;
	and.b32  	%r2067, %r700, -1431655766;
	shr.u32 	%r2068, %r2067, 1;
	or.b32  	%r2069, %r2068, %r2067;
	st.local.u32 	[%rd71+276], %r2069;
	and.b32  	%r2070, %r702, 1431655765;
	shl.b32 	%r2071, %r702, 1;
	and.b32  	%r2072, %r2071, -1431655766;
	or.b32  	%r2073, %r2072, %r2070;
	st.local.u32 	[%rd71+280], %r2073;
	and.b32  	%r2074, %r703, -1431655766;
	shr.u32 	%r2075, %r2074, 1;
	or.b32  	%r2076, %r2075, %r2074;
	st.local.u32 	[%rd71+284], %r2076;
	and.b32  	%r2077, %r706, 1431655765;
	shl.b32 	%r2078, %r706, 1;
	and.b32  	%r2079, %r2078, -1431655766;
	or.b32  	%r2080, %r2079, %r2077;
	st.local.u32 	[%rd71+288], %r2080;
	and.b32  	%r2081, %r707, -1431655766;
	shr.u32 	%r2082, %r2081, 1;
	or.b32  	%r2083, %r2082, %r2081;
	st.local.u32 	[%rd71+292], %r2083;
	and.b32  	%r2084, %r710, 1431655765;
	shl.b32 	%r2085, %r710, 1;
	and.b32  	%r2086, %r2085, -1431655766;
	or.b32  	%r2087, %r2086, %r2084;
	st.local.u32 	[%rd71+296], %r2087;
	and.b32  	%r2088, %r711, -1431655766;
	shr.u32 	%r2089, %r2088, 1;
	or.b32  	%r2090, %r2089, %r2088;
	st.local.u32 	[%rd71+300], %r2090;
	and.b32  	%r2091, %r801, 1431655765;
	shl.b32 	%r2092, %r801, 1;
	and.b32  	%r2093, %r2092, -1431655766;
	or.b32  	%r2094, %r2093, %r2091;
	st.local.u32 	[%rd71+304], %r2094;
	and.b32  	%r2095, %r802, -1431655766;
	shr.u32 	%r2096, %r2095, 1;
	or.b32  	%r2097, %r2096, %r2095;
	st.local.u32 	[%rd71+308], %r2097;
	and.b32  	%r2098, %r804, 1431655765;
	shl.b32 	%r2099, %r804, 1;
	and.b32  	%r2100, %r2099, -1431655766;
	or.b32  	%r2101, %r2100, %r2098;
	st.local.u32 	[%rd71+312], %r2101;
	and.b32  	%r2102, %r805, -1431655766;
	shr.u32 	%r2103, %r2102, 1;
	or.b32  	%r2104, %r2103, %r2102;
	st.local.u32 	[%rd71+316], %r2104;
	and.b32  	%r2105, %r808, 1431655765;
	shl.b32 	%r2106, %r808, 1;
	and.b32  	%r2107, %r2106, -1431655766;
	or.b32  	%r2108, %r2107, %r2105;
	st.local.u32 	[%rd71+320], %r2108;
	and.b32  	%r2109, %r809, -1431655766;
	shr.u32 	%r2110, %r2109, 1;
	or.b32  	%r2111, %r2110, %r2109;
	st.local.u32 	[%rd71+324], %r2111;
	and.b32  	%r2112, %r812, 1431655765;
	shl.b32 	%r2113, %r812, 1;
	and.b32  	%r2114, %r2113, -1431655766;
	or.b32  	%r2115, %r2114, %r2112;
	st.local.u32 	[%rd71+328], %r2115;
	and.b32  	%r2116, %r813, -1431655766;
	shr.u32 	%r2117, %r2116, 1;
	or.b32  	%r2118, %r2117, %r2116;
	st.local.u32 	[%rd71+332], %r2118;
	and.b32  	%r2119, %r903, 1431655765;
	shl.b32 	%r2120, %r903, 1;
	and.b32  	%r2121, %r2120, -1431655766;
	or.b32  	%r2122, %r2121, %r2119;
	st.local.u32 	[%rd71+336], %r2122;
	and.b32  	%r2123, %r904, -1431655766;
	shr.u32 	%r2124, %r2123, 1;
	or.b32  	%r2125, %r2124, %r2123;
	st.local.u32 	[%rd71+340], %r2125;
	and.b32  	%r2126, %r906, 1431655765;
	shl.b32 	%r2127, %r906, 1;
	and.b32  	%r2128, %r2127, -1431655766;
	or.b32  	%r2129, %r2128, %r2126;
	st.local.u32 	[%rd71+344], %r2129;
	and.b32  	%r2130, %r907, -1431655766;
	shr.u32 	%r2131, %r2130, 1;
	or.b32  	%r2132, %r2131, %r2130;
	st.local.u32 	[%rd71+348], %r2132;
	and.b32  	%r2133, %r910, 1431655765;
	shl.b32 	%r2134, %r910, 1;
	and.b32  	%r2135, %r2134, -1431655766;
	or.b32  	%r2136, %r2135, %r2133;
	st.local.u32 	[%rd71+352], %r2136;
	and.b32  	%r2137, %r911, -1431655766;
	shr.u32 	%r2138, %r2137, 1;
	or.b32  	%r2139, %r2138, %r2137;
	st.local.u32 	[%rd71+356], %r2139;
	and.b32  	%r2140, %r914, 1431655765;
	shl.b32 	%r2141, %r914, 1;
	and.b32  	%r2142, %r2141, -1431655766;
	or.b32  	%r2143, %r2142, %r2140;
	st.local.u32 	[%rd71+360], %r2143;
	and.b32  	%r2144, %r915, -1431655766;
	shr.u32 	%r2145, %r2144, 1;
	or.b32  	%r2146, %r2145, %r2144;
	st.local.u32 	[%rd71+364], %r2146;
	and.b32  	%r2147, %r1005, 1431655765;
	shl.b32 	%r2148, %r1005, 1;
	and.b32  	%r2149, %r2148, -1431655766;
	or.b32  	%r2150, %r2149, %r2147;
	st.local.u32 	[%rd71+368], %r2150;
	and.b32  	%r2151, %r1006, -1431655766;
	shr.u32 	%r2152, %r2151, 1;
	or.b32  	%r2153, %r2152, %r2151;
	st.local.u32 	[%rd71+372], %r2153;
	and.b32  	%r2154, %r1008, 1431655765;
	shl.b32 	%r2155, %r1008, 1;
	and.b32  	%r2156, %r2155, -1431655766;
	or.b32  	%r2157, %r2156, %r2154;
	st.local.u32 	[%rd71+376], %r2157;
	and.b32  	%r2158, %r1009, -1431655766;
	shr.u32 	%r2159, %r2158, 1;
	or.b32  	%r2160, %r2159, %r2158;
	st.local.u32 	[%rd71+380], %r2160;
	and.b32  	%r2161, %r1012, 1431655765;
	shl.b32 	%r2162, %r1012, 1;
	and.b32  	%r2163, %r2162, -1431655766;
	or.b32  	%r2164, %r2163, %r2161;
	st.local.u32 	[%rd71+384], %r2164;
	and.b32  	%r2165, %r1013, -1431655766;
	shr.u32 	%r2166, %r2165, 1;
	or.b32  	%r2167, %r2166, %r2165;
	st.local.u32 	[%rd71+388], %r2167;
	and.b32  	%r2168, %r1016, 1431655765;
	shl.b32 	%r2169, %r1016, 1;
	and.b32  	%r2170, %r2169, -1431655766;
	or.b32  	%r2171, %r2170, %r2168;
	st.local.u32 	[%rd71+392], %r2171;
	and.b32  	%r2172, %r1017, -1431655766;
	shr.u32 	%r2173, %r2172, 1;
	or.b32  	%r2174, %r2173, %r2172;
	st.local.u32 	[%rd71+396], %r2174;
	and.b32  	%r2175, %r1107, 1431655765;
	shl.b32 	%r2176, %r1107, 1;
	and.b32  	%r2177, %r2176, -1431655766;
	or.b32  	%r2178, %r2177, %r2175;
	st.local.u32 	[%rd71+400], %r2178;
	and.b32  	%r2179, %r1108, -1431655766;
	shr.u32 	%r2180, %r2179, 1;
	or.b32  	%r2181, %r2180, %r2179;
	st.local.u32 	[%rd71+404], %r2181;
	and.b32  	%r2182, %r1110, 1431655765;
	shl.b32 	%r2183, %r1110, 1;
	and.b32  	%r2184, %r2183, -1431655766;
	or.b32  	%r2185, %r2184, %r2182;
	st.local.u32 	[%rd71+408], %r2185;
	and.b32  	%r2186, %r1111, -1431655766;
	shr.u32 	%r2187, %r2186, 1;
	or.b32  	%r2188, %r2187, %r2186;
	st.local.u32 	[%rd71+412], %r2188;
	and.b32  	%r2189, %r1114, 1431655765;
	shl.b32 	%r2190, %r1114, 1;
	and.b32  	%r2191, %r2190, -1431655766;
	or.b32  	%r2192, %r2191, %r2189;
	st.local.u32 	[%rd71+416], %r2192;
	and.b32  	%r2193, %r1115, -1431655766;
	shr.u32 	%r2194, %r2193, 1;
	or.b32  	%r2195, %r2194, %r2193;
	st.local.u32 	[%rd71+420], %r2195;
	and.b32  	%r2196, %r1118, 1431655765;
	shl.b32 	%r2197, %r1118, 1;
	and.b32  	%r2198, %r2197, -1431655766;
	or.b32  	%r2199, %r2198, %r2196;
	st.local.u32 	[%rd71+424], %r2199;
	and.b32  	%r2200, %r1119, -1431655766;
	shr.u32 	%r2201, %r2200, 1;
	or.b32  	%r2202, %r2201, %r2200;
	st.local.u32 	[%rd71+428], %r2202;
	and.b32  	%r2203, %r1209, 1431655765;
	shl.b32 	%r2204, %r1209, 1;
	and.b32  	%r2205, %r2204, -1431655766;
	or.b32  	%r2206, %r2205, %r2203;
	st.local.u32 	[%rd71+432], %r2206;
	and.b32  	%r2207, %r1210, -1431655766;
	shr.u32 	%r2208, %r2207, 1;
	or.b32  	%r2209, %r2208, %r2207;
	st.local.u32 	[%rd71+436], %r2209;
	and.b32  	%r2210, %r1212, 1431655765;
	shl.b32 	%r2211, %r1212, 1;
	and.b32  	%r2212, %r2211, -1431655766;
	or.b32  	%r2213, %r2212, %r2210;
	st.local.u32 	[%rd71+440], %r2213;
	and.b32  	%r2214, %r1213, -1431655766;
	shr.u32 	%r2215, %r2214, 1;
	or.b32  	%r2216, %r2215, %r2214;
	st.local.u32 	[%rd71+444], %r2216;
	and.b32  	%r2217, %r1216, 1431655765;
	shl.b32 	%r2218, %r1216, 1;
	and.b32  	%r2219, %r2218, -1431655766;
	or.b32  	%r2220, %r2219, %r2217;
	st.local.u32 	[%rd71+448], %r2220;
	and.b32  	%r2221, %r1217, -1431655766;
	shr.u32 	%r2222, %r2221, 1;
	or.b32  	%r2223, %r2222, %r2221;
	st.local.u32 	[%rd71+452], %r2223;
	and.b32  	%r2224, %r1220, 1431655765;
	shl.b32 	%r2225, %r1220, 1;
	and.b32  	%r2226, %r2225, -1431655766;
	or.b32  	%r2227, %r2226, %r2224;
	st.local.u32 	[%rd71+456], %r2227;
	and.b32  	%r2228, %r1221, -1431655766;
	shr.u32 	%r2229, %r2228, 1;
	or.b32  	%r2230, %r2229, %r2228;
	st.local.u32 	[%rd71+460], %r2230;
	and.b32  	%r2231, %r1311, 1431655765;
	shl.b32 	%r2232, %r1311, 1;
	and.b32  	%r2233, %r2232, -1431655766;
	or.b32  	%r2234, %r2233, %r2231;
	st.local.u32 	[%rd71+464], %r2234;
	and.b32  	%r2235, %r1312, -1431655766;
	shr.u32 	%r2236, %r2235, 1;
	or.b32  	%r2237, %r2236, %r2235;
	st.local.u32 	[%rd71+468], %r2237;
	and.b32  	%r2238, %r1314, 1431655765;
	shl.b32 	%r2239, %r1314, 1;
	and.b32  	%r2240, %r2239, -1431655766;
	or.b32  	%r2241, %r2240, %r2238;
	st.local.u32 	[%rd71+472], %r2241;
	and.b32  	%r2242, %r1315, -1431655766;
	shr.u32 	%r2243, %r2242, 1;
	or.b32  	%r2244, %r2243, %r2242;
	st.local.u32 	[%rd71+476], %r2244;
	and.b32  	%r2245, %r1318, 1431655765;
	shl.b32 	%r2246, %r1318, 1;
	and.b32  	%r2247, %r2246, -1431655766;
	or.b32  	%r2248, %r2247, %r2245;
	st.local.u32 	[%rd71+480], %r2248;
	and.b32  	%r2249, %r1319, -1431655766;
	shr.u32 	%r2250, %r2249, 1;
	or.b32  	%r2251, %r2250, %r2249;
	st.local.u32 	[%rd71+484], %r2251;
	and.b32  	%r2252, %r1322, 1431655765;
	shl.b32 	%r2253, %r1322, 1;
	and.b32  	%r2254, %r2253, -1431655766;
	or.b32  	%r2255, %r2254, %r2252;
	st.local.u32 	[%rd71+488], %r2255;
	and.b32  	%r2256, %r1323, -1431655766;
	shr.u32 	%r2257, %r2256, 1;
	or.b32  	%r2258, %r2257, %r2256;
	st.local.u32 	[%rd71+492], %r2258;
	and.b32  	%r2259, %r1413, 1431655765;
	shl.b32 	%r2260, %r1413, 1;
	and.b32  	%r2261, %r2260, -1431655766;
	or.b32  	%r2262, %r2261, %r2259;
	st.local.u32 	[%rd71+496], %r2262;
	and.b32  	%r2263, %r1414, -1431655766;
	shr.u32 	%r2264, %r2263, 1;
	or.b32  	%r2265, %r2264, %r2263;
	st.local.u32 	[%rd71+500], %r2265;
	and.b32  	%r2266, %r1416, 1431655765;
	shl.b32 	%r2267, %r1416, 1;
	and.b32  	%r2268, %r2267, -1431655766;
	or.b32  	%r2269, %r2268, %r2266;
	st.local.u32 	[%rd71+504], %r2269;
	and.b32  	%r2270, %r1417, -1431655766;
	shr.u32 	%r2271, %r2270, 1;
	or.b32  	%r2272, %r2271, %r2270;
	st.local.u32 	[%rd71+508], %r2272;
	and.b32  	%r2273, %r1420, 1431655765;
	shl.b32 	%r2274, %r1420, 1;
	and.b32  	%r2275, %r2274, -1431655766;
	or.b32  	%r2276, %r2275, %r2273;
	st.local.u32 	[%rd71+512], %r2276;
	and.b32  	%r2277, %r1421, -1431655766;
	shr.u32 	%r2278, %r2277, 1;
	or.b32  	%r2279, %r2278, %r2277;
	st.local.u32 	[%rd71+516], %r2279;
	and.b32  	%r2280, %r1424, 1431655765;
	shl.b32 	%r2281, %r1424, 1;
	and.b32  	%r2282, %r2281, -1431655766;
	or.b32  	%r2283, %r2282, %r2280;
	st.local.u32 	[%rd71+520], %r2283;
	and.b32  	%r2284, %r1425, -1431655766;
	shr.u32 	%r2285, %r2284, 1;
	or.b32  	%r2286, %r2285, %r2284;
	st.local.u32 	[%rd71+524], %r2286;
	and.b32  	%r2287, %r1515, 1431655765;
	shl.b32 	%r2288, %r1515, 1;
	and.b32  	%r2289, %r2288, -1431655766;
	or.b32  	%r2290, %r2289, %r2287;
	st.local.u32 	[%rd71+528], %r2290;
	and.b32  	%r2291, %r1516, -1431655766;
	shr.u32 	%r2292, %r2291, 1;
	or.b32  	%r2293, %r2292, %r2291;
	st.local.u32 	[%rd71+532], %r2293;
	and.b32  	%r2294, %r1518, 1431655765;
	shl.b32 	%r2295, %r1518, 1;
	and.b32  	%r2296, %r2295, -1431655766;
	or.b32  	%r2297, %r2296, %r2294;
	st.local.u32 	[%rd71+536], %r2297;
	and.b32  	%r2298, %r1519, -1431655766;
	shr.u32 	%r2299, %r2298, 1;
	or.b32  	%r2300, %r2299, %r2298;
	st.local.u32 	[%rd71+540], %r2300;
	and.b32  	%r2301, %r1522, 1431655765;
	shl.b32 	%r2302, %r1522, 1;
	and.b32  	%r2303, %r2302, -1431655766;
	or.b32  	%r2304, %r2303, %r2301;
	st.local.u32 	[%rd71+544], %r2304;
	and.b32  	%r2305, %r1523, -1431655766;
	shr.u32 	%r2306, %r2305, 1;
	or.b32  	%r2307, %r2306, %r2305;
	st.local.u32 	[%rd71+548], %r2307;
	and.b32  	%r2308, %r1526, 1431655765;
	shl.b32 	%r2309, %r1526, 1;
	and.b32  	%r2310, %r2309, -1431655766;
	or.b32  	%r2311, %r2310, %r2308;
	st.local.u32 	[%rd71+552], %r2311;
	and.b32  	%r2312, %r1527, -1431655766;
	shr.u32 	%r2313, %r2312, 1;
	or.b32  	%r2314, %r2313, %r2312;
	st.local.u32 	[%rd71+556], %r2314;
	and.b32  	%r2315, %r1617, 1431655765;
	shl.b32 	%r2316, %r1617, 1;
	and.b32  	%r2317, %r2316, -1431655766;
	or.b32  	%r2318, %r2317, %r2315;
	st.local.u32 	[%rd71+560], %r2318;
	and.b32  	%r2319, %r1618, -1431655766;
	shr.u32 	%r2320, %r2319, 1;
	or.b32  	%r2321, %r2320, %r2319;
	st.local.u32 	[%rd71+564], %r2321;
	and.b32  	%r2322, %r1620, 1431655765;
	shl.b32 	%r2323, %r1620, 1;
	and.b32  	%r2324, %r2323, -1431655766;
	or.b32  	%r2325, %r2324, %r2322;
	st.local.u32 	[%rd71+568], %r2325;
	and.b32  	%r2326, %r1621, -1431655766;
	shr.u32 	%r2327, %r2326, 1;
	or.b32  	%r2328, %r2327, %r2326;
	st.local.u32 	[%rd71+572], %r2328;
	and.b32  	%r2329, %r1624, 1431655765;
	shl.b32 	%r2330, %r1624, 1;
	and.b32  	%r2331, %r2330, -1431655766;
	or.b32  	%r2332, %r2331, %r2329;
	st.local.u32 	[%rd71+576], %r2332;
	and.b32  	%r2333, %r1625, -1431655766;
	shr.u32 	%r2334, %r2333, 1;
	or.b32  	%r2335, %r2334, %r2333;
	st.local.u32 	[%rd71+580], %r2335;
	and.b32  	%r2336, %r1628, 1431655765;
	shl.b32 	%r2337, %r1628, 1;
	and.b32  	%r2338, %r2337, -1431655766;
	or.b32  	%r2339, %r2338, %r2336;
	st.local.u32 	[%rd71+584], %r2339;
	and.b32  	%r2340, %r1629, -1431655766;
	shr.u32 	%r2341, %r2340, 1;
	or.b32  	%r2342, %r2341, %r2340;
	st.local.u32 	[%rd71+588], %r2342;
	and.b32  	%r2343, %r1719, 1431655765;
	shl.b32 	%r2344, %r1719, 1;
	and.b32  	%r2345, %r2344, -1431655766;
	or.b32  	%r2346, %r2345, %r2343;
	st.local.u32 	[%rd71+592], %r2346;
	and.b32  	%r2347, %r1720, -1431655766;
	shr.u32 	%r2348, %r2347, 1;
	or.b32  	%r2349, %r2348, %r2347;
	st.local.u32 	[%rd71+596], %r2349;
	and.b32  	%r2350, %r1722, 1431655765;
	shl.b32 	%r2351, %r1722, 1;
	and.b32  	%r2352, %r2351, -1431655766;
	or.b32  	%r2353, %r2352, %r2350;
	st.local.u32 	[%rd71+600], %r2353;
	and.b32  	%r2354, %r1723, -1431655766;
	shr.u32 	%r2355, %r2354, 1;
	or.b32  	%r2356, %r2355, %r2354;
	st.local.u32 	[%rd71+604], %r2356;
	and.b32  	%r2357, %r1726, 1431655765;
	shl.b32 	%r2358, %r1726, 1;
	and.b32  	%r2359, %r2358, -1431655766;
	or.b32  	%r2360, %r2359, %r2357;
	st.local.u32 	[%rd71+608], %r2360;
	and.b32  	%r2361, %r1727, -1431655766;
	shr.u32 	%r2362, %r2361, 1;
	or.b32  	%r2363, %r2362, %r2361;
	st.local.u32 	[%rd71+612], %r2363;
	and.b32  	%r2364, %r1730, 1431655765;
	shl.b32 	%r2365, %r1730, 1;
	and.b32  	%r2366, %r2365, -1431655766;
	or.b32  	%r2367, %r2366, %r2364;
	st.local.u32 	[%rd71+616], %r2367;
	and.b32  	%r2368, %r1731, -1431655766;
	shr.u32 	%r2369, %r2368, 1;
	or.b32  	%r2370, %r2369, %r2368;
	st.local.u32 	[%rd71+620], %r2370;
	and.b32  	%r2371, %r1821, 1431655765;
	shl.b32 	%r2372, %r1821, 1;
	and.b32  	%r2373, %r2372, -1431655766;
	or.b32  	%r2374, %r2373, %r2371;
	st.local.u32 	[%rd71+624], %r2374;
	and.b32  	%r2375, %r1822, -1431655766;
	shr.u32 	%r2376, %r2375, 1;
	or.b32  	%r2377, %r2376, %r2375;
	st.local.u32 	[%rd71+628], %r2377;
	and.b32  	%r2378, %r1824, 1431655765;
	shl.b32 	%r2379, %r1824, 1;
	and.b32  	%r2380, %r2379, -1431655766;
	or.b32  	%r2381, %r2380, %r2378;
	st.local.u32 	[%rd71+632], %r2381;
	and.b32  	%r2382, %r1825, -1431655766;
	shr.u32 	%r2383, %r2382, 1;
	or.b32  	%r2384, %r2383, %r2382;
	st.local.u32 	[%rd71+636], %r2384;
	and.b32  	%r2385, %r1828, 1431655765;
	shl.b32 	%r2386, %r1828, 1;
	and.b32  	%r2387, %r2386, -1431655766;
	or.b32  	%r2388, %r2387, %r2385;
	st.local.u32 	[%rd71+640], %r2388;
	and.b32  	%r2389, %r1829, -1431655766;
	shr.u32 	%r2390, %r2389, 1;
	or.b32  	%r2391, %r2390, %r2389;
	st.local.u32 	[%rd71+644], %r2391;
	and.b32  	%r2392, %r1832, 1431655765;
	shl.b32 	%r2393, %r1832, 1;
	and.b32  	%r2394, %r2393, -1431655766;
	or.b32  	%r2395, %r2394, %r2392;
	st.local.u32 	[%rd71+648], %r2395;
	and.b32  	%r2396, %r1833, -1431655766;
	shr.u32 	%r2397, %r2396, 1;
	or.b32  	%r2398, %r2397, %r2396;
	st.local.u32 	[%rd71+652], %r2398;
	and.b32  	%r2399, %r1923, 1431655765;
	shl.b32 	%r2400, %r1923, 1;
	and.b32  	%r2401, %r2400, -1431655766;
	or.b32  	%r2402, %r2401, %r2399;
	st.local.u32 	[%rd71+656], %r2402;
	and.b32  	%r2403, %r1924, -1431655766;
	shr.u32 	%r2404, %r2403, 1;
	or.b32  	%r2405, %r2404, %r2403;
	st.local.u32 	[%rd71+660], %r2405;
	and.b32  	%r2406, %r1926, 1431655765;
	shl.b32 	%r2407, %r1926, 1;
	and.b32  	%r2408, %r2407, -1431655766;
	or.b32  	%r2409, %r2408, %r2406;
	st.local.u32 	[%rd71+664], %r2409;
	and.b32  	%r2410, %r1927, -1431655766;
	shr.u32 	%r2411, %r2410, 1;
	or.b32  	%r2412, %r2411, %r2410;
	st.local.u32 	[%rd71+668], %r2412;
	and.b32  	%r2413, %r1930, 1431655765;
	shl.b32 	%r2414, %r1930, 1;
	and.b32  	%r2415, %r2414, -1431655766;
	or.b32  	%r2416, %r2415, %r2413;
	st.local.u32 	[%rd71+672], %r2416;
	and.b32  	%r2417, %r1931, -1431655766;
	shr.u32 	%r2418, %r2417, 1;
	or.b32  	%r2419, %r2418, %r2417;
	st.local.u32 	[%rd71+676], %r2419;
	and.b32  	%r2420, %r1934, 1431655765;
	shl.b32 	%r2421, %r1934, 1;
	and.b32  	%r2422, %r2421, -1431655766;
	or.b32  	%r2423, %r2422, %r2420;
	st.local.u32 	[%rd71+680], %r2423;
	and.b32  	%r2424, %r1935, -1431655766;
	shr.u32 	%r2425, %r2424, 1;
	or.b32  	%r2426, %r2425, %r2424;
	st.local.u32 	[%rd71+684], %r2426;
	and.b32  	%r2427, %r2025, 1431655765;
	shl.b32 	%r2428, %r2025, 1;
	and.b32  	%r2429, %r2428, -1431655766;
	or.b32  	%r2430, %r2429, %r2427;
	st.local.u32 	[%rd71+688], %r2430;
	and.b32  	%r2431, %r2026, -1431655766;
	shr.u32 	%r2432, %r2431, 1;
	or.b32  	%r2433, %r2432, %r2431;
	st.local.u32 	[%rd71+692], %r2433;
	and.b32  	%r2434, %r2028, 1431655765;
	shl.b32 	%r2435, %r2028, 1;
	and.b32  	%r2436, %r2435, -1431655766;
	or.b32  	%r2437, %r2436, %r2434;
	st.local.u32 	[%rd71+696], %r2437;
	and.b32  	%r2438, %r2029, -1431655766;
	shr.u32 	%r2439, %r2438, 1;
	or.b32  	%r2440, %r2439, %r2438;
	st.local.u32 	[%rd71+700], %r2440;
	and.b32  	%r2441, %r2032, 1431655765;
	shl.b32 	%r2442, %r2032, 1;
	and.b32  	%r2443, %r2442, -1431655766;
	or.b32  	%r2444, %r2443, %r2441;
	st.local.u32 	[%rd71+704], %r2444;
	and.b32  	%r2445, %r2033, -1431655766;
	shr.u32 	%r2446, %r2445, 1;
	or.b32  	%r2447, %r2446, %r2445;
	st.local.u32 	[%rd71+708], %r2447;
	and.b32  	%r2448, %r2036, 1431655765;
	shl.b32 	%r2449, %r2036, 1;
	and.b32  	%r2450, %r2449, -1431655766;
	or.b32  	%r2451, %r2450, %r2448;
	st.local.u32 	[%rd71+712], %r2451;
	and.b32  	%r2452, %r2037, -1431655766;
	shr.u32 	%r2453, %r2452, 1;
	or.b32  	%r2454, %r2453, %r2452;
	st.local.u32 	[%rd71+716], %r2454;
	ld.const.u8 	%r2455, [%rd63+16];
	ld.const.u8 	%r2456, [%rd63+17];
	prmt.b32 	%r2457, %r2456, %r2455, 30212;
	ld.const.u8 	%r2458, [%rd63+18];
	prmt.b32 	%r2459, %r2458, %r2457, 28756;
	ld.const.u8 	%r2460, [%rd63+19];
	prmt.b32 	%r2461, %r2460, %r2459, 1620;
	ld.const.u8 	%r2462, [%rd63+20];
	ld.const.u8 	%r2463, [%rd63+21];
	prmt.b32 	%r2464, %r2463, %r2462, 30212;
	ld.const.u8 	%r2465, [%rd63+22];
	prmt.b32 	%r2466, %r2465, %r2464, 28756;
	ld.const.u8 	%r2467, [%rd63+23];
	prmt.b32 	%r2468, %r2467, %r2466, 1620;
	ld.const.u8 	%r2469, [%rd63+24];
	ld.const.u8 	%r2470, [%rd63+25];
	prmt.b32 	%r2471, %r2470, %r2469, 30212;
	ld.const.u8 	%r2472, [%rd63+26];
	prmt.b32 	%r2473, %r2472, %r2471, 28756;
	ld.const.u8 	%r2474, [%rd63+27];
	prmt.b32 	%r2475, %r2474, %r2473, 1620;
	ld.const.u8 	%r2476, [%rd63+28];
	ld.const.u8 	%r2477, [%rd63+29];
	prmt.b32 	%r2478, %r2477, %r2476, 30212;
	ld.const.u8 	%r2479, [%rd63+30];
	prmt.b32 	%r2480, %r2479, %r2478, 28756;
	ld.const.u8 	%r2481, [%rd63+31];
	prmt.b32 	%r2482, %r2481, %r2480, 1620;
	and.b32  	%r2483, %r2461, -1431655766;
	shr.u32 	%r2484, %r2483, 3;
	shr.u32 	%r2485, %r2483, 1;
	and.b32  	%r2486, %r2468, -2004318072;
	and.b32  	%r2487, %r2475, -1431655766;
	shr.u32 	%r2488, %r2487, 3;
	shr.u32 	%r2489, %r2487, 1;
	and.b32  	%r2490, %r2482, -2004318072;
	and.b32  	%r2491, %r2461, 286331153;
	shl.b32 	%r2492, %r2468, 2;
	and.b32  	%r2493, %r2492, 1145324612;
	or.b32  	%r2494, %r2493, %r2491;
	and.b32  	%r2495, %r2461, 1145324612;
	shr.u32 	%r2496, %r2495, 2;
	and.b32  	%r2497, %r2468, 1145324612;
	or.b32  	%r2498, %r2496, %r2497;
	and.b32  	%r2499, %r2485, 286331153;
	shl.b32 	%r2500, %r2468, 1;
	and.b32  	%r2501, %r2500, 1145324612;
	or.b32  	%r2502, %r2501, %r2499;
	and.b32  	%r2503, %r2484, 286331153;
	shr.u32 	%r2504, %r2486, 1;
	or.b32  	%r2505, %r2503, %r2504;
	and.b32  	%r2506, %r2475, 286331153;
	shl.b32 	%r2507, %r2482, 2;
	and.b32  	%r2508, %r2507, 1145324612;
	or.b32  	%r2509, %r2508, %r2506;
	and.b32  	%r2510, %r2475, 1145324612;
	shr.u32 	%r2511, %r2510, 2;
	and.b32  	%r2512, %r2482, 1145324612;
	or.b32  	%r2513, %r2511, %r2512;
	and.b32  	%r2514, %r2489, 286331153;
	shl.b32 	%r2515, %r2482, 1;
	and.b32  	%r2516, %r2515, 1145324612;
	or.b32  	%r2517, %r2516, %r2514;
	and.b32  	%r2518, %r2488, 286331153;
	shr.u32 	%r2519, %r2490, 1;
	or.b32  	%r2520, %r2518, %r2519;
	and.b32  	%r2521, %r2494, 84215045;
	shl.b32 	%r2522, %r2509, 4;
	and.b32  	%r2523, %r2522, 1347440720;
	or.b32  	%r2524, %r2523, %r2521;
	and.b32  	%r2525, %r2494, 1347440720;
	shr.u32 	%r2526, %r2525, 4;
	and.b32  	%r2527, %r2509, 1347440720;
	or.b32  	%r2528, %r2526, %r2527;
	and.b32  	%r2529, %r2502, 84215045;
	shl.b32 	%r2530, %r2517, 4;
	and.b32  	%r2531, %r2530, 1347440720;
	or.b32  	%r2532, %r2531, %r2529;
	and.b32  	%r2533, %r2502, 1347440720;
	shr.u32 	%r2534, %r2533, 4;
	and.b32  	%r2535, %r2517, 1347440720;
	or.b32  	%r2536, %r2534, %r2535;
	and.b32  	%r2537, %r2498, 84215045;
	shl.b32 	%r2538, %r2513, 4;
	and.b32  	%r2539, %r2538, 1347440720;
	or.b32  	%r2540, %r2539, %r2537;
	and.b32  	%r2541, %r2498, 1347440720;
	shr.u32 	%r2542, %r2541, 4;
	and.b32  	%r2543, %r2513, 1347440720;
	or.b32  	%r2544, %r2542, %r2543;
	and.b32  	%r2545, %r2505, 84215045;
	shl.b32 	%r2546, %r2520, 4;
	and.b32  	%r2547, %r2546, 1347440720;
	or.b32  	%r2548, %r2547, %r2545;
	and.b32  	%r2549, %r2505, 1347440720;
	shr.u32 	%r2550, %r2549, 4;
	and.b32  	%r2551, %r2520, 1347440720;
	or.b32  	%r2552, %r2550, %r2551;
	xor.b32  	%r3386, %r2524, %r2430;
	xor.b32  	%r3385, %r2532, %r2433;
	xor.b32  	%r3384, %r2540, %r2437;
	xor.b32  	%r3383, %r2548, %r2440;
	xor.b32  	%r3382, %r2528, %r2444;
	xor.b32  	%r3381, %r2536, %r2447;
	xor.b32  	%r3380, %r2544, %r2451;
	xor.b32  	%r3379, %r2552, %r2454;

$L__BB3_7:
	shl.b32 	%r2553, %r3386, 2;
	and.b32  	%r2554, %r2553, 64512;
	and.b32  	%r2555, %r3386, 255;
	or.b32  	%r2556, %r2554, %r2555;
	and.b32  	%r2557, %r3386, 49152;
	shr.u32 	%r2558, %r2557, 6;
	or.b32  	%r2559, %r2556, %r2558;
	shl.b32 	%r2560, %r3386, 4;
	and.b32  	%r2561, %r2560, 15728640;
	or.b32  	%r2562, %r2559, %r2561;
	and.b32  	%r2563, %r3386, 15728640;
	shr.u32 	%r2564, %r2563, 4;
	or.b32  	%r2565, %r2562, %r2564;
	shl.b32 	%r2566, %r3386, 6;
	and.b32  	%r2567, %r2566, -1073741824;
	or.b32  	%r2568, %r2565, %r2567;
	and.b32  	%r2569, %r3386, -67108864;
	shr.u32 	%r2570, %r2569, 2;
	or.b32  	%r2571, %r2568, %r2570;
	shl.b32 	%r2572, %r3385, 2;
	and.b32  	%r2573, %r2572, 64512;
	and.b32  	%r2574, %r3385, 255;
	or.b32  	%r2575, %r2573, %r2574;
	and.b32  	%r2576, %r3385, 49152;
	shr.u32 	%r2577, %r2576, 6;
	or.b32  	%r2578, %r2575, %r2577;
	shl.b32 	%r2579, %r3385, 4;
	and.b32  	%r2580, %r2579, 15728640;
	or.b32  	%r2581, %r2578, %r2580;
	and.b32  	%r2582, %r3385, 15728640;
	shr.u32 	%r2583, %r2582, 4;
	or.b32  	%r2584, %r2581, %r2583;
	shl.b32 	%r2585, %r3385, 6;
	and.b32  	%r2586, %r2585, -1073741824;
	or.b32  	%r2587, %r2584, %r2586;
	and.b32  	%r2588, %r3385, -67108864;
	shr.u32 	%r2589, %r2588, 2;
	or.b32  	%r2590, %r2587, %r2589;
	shl.b32 	%r2591, %r3384, 2;
	and.b32  	%r2592, %r2591, 64512;
	and.b32  	%r2593, %r3384, 255;
	or.b32  	%r2594, %r2592, %r2593;
	and.b32  	%r2595, %r3384, 49152;
	shr.u32 	%r2596, %r2595, 6;
	or.b32  	%r2597, %r2594, %r2596;
	shl.b32 	%r2598, %r3384, 4;
	and.b32  	%r2599, %r2598, 15728640;
	or.b32  	%r2600, %r2597, %r2599;
	and.b32  	%r2601, %r3384, 15728640;
	shr.u32 	%r2602, %r2601, 4;
	or.b32  	%r2603, %r2600, %r2602;
	shl.b32 	%r2604, %r3384, 6;
	and.b32  	%r2605, %r2604, -1073741824;
	or.b32  	%r2606, %r2603, %r2605;
	and.b32  	%r2607, %r3384, -67108864;
	shr.u32 	%r2608, %r2607, 2;
	or.b32  	%r2609, %r2606, %r2608;
	shl.b32 	%r2610, %r3383, 2;
	and.b32  	%r2611, %r2610, 64512;
	and.b32  	%r2612, %r3383, 255;
	or.b32  	%r2613, %r2611, %r2612;
	and.b32  	%r2614, %r3383, 49152;
	shr.u32 	%r2615, %r2614, 6;
	or.b32  	%r2616, %r2613, %r2615;
	shl.b32 	%r2617, %r3383, 4;
	and.b32  	%r2618, %r2617, 15728640;
	or.b32  	%r2619, %r2616, %r2618;
	and.b32  	%r2620, %r3383, 15728640;
	shr.u32 	%r2621, %r2620, 4;
	or.b32  	%r2622, %r2619, %r2621;
	shl.b32 	%r2623, %r3383, 6;
	and.b32  	%r2624, %r2623, -1073741824;
	or.b32  	%r2625, %r2622, %r2624;
	and.b32  	%r2626, %r3383, -67108864;
	shr.u32 	%r2627, %r2626, 2;
	or.b32  	%r2628, %r2625, %r2627;
	shl.b32 	%r2629, %r3382, 2;
	and.b32  	%r2630, %r2629, 64512;
	and.b32  	%r2631, %r3382, 255;
	or.b32  	%r2632, %r2630, %r2631;
	and.b32  	%r2633, %r3382, 49152;
	shr.u32 	%r2634, %r2633, 6;
	or.b32  	%r2635, %r2632, %r2634;
	shl.b32 	%r2636, %r3382, 4;
	and.b32  	%r2637, %r2636, 15728640;
	or.b32  	%r2638, %r2635, %r2637;
	and.b32  	%r2639, %r3382, 15728640;
	shr.u32 	%r2640, %r2639, 4;
	or.b32  	%r2641, %r2638, %r2640;
	shl.b32 	%r2642, %r3382, 6;
	and.b32  	%r2643, %r2642, -1073741824;
	or.b32  	%r2644, %r2641, %r2643;
	and.b32  	%r2645, %r3382, -67108864;
	shr.u32 	%r2646, %r2645, 2;
	or.b32  	%r2647, %r2644, %r2646;
	shl.b32 	%r2648, %r3381, 2;
	and.b32  	%r2649, %r2648, 64512;
	and.b32  	%r2650, %r3381, 255;
	or.b32  	%r2651, %r2649, %r2650;
	and.b32  	%r2652, %r3381, 49152;
	shr.u32 	%r2653, %r2652, 6;
	or.b32  	%r2654, %r2651, %r2653;
	shl.b32 	%r2655, %r3381, 4;
	and.b32  	%r2656, %r2655, 15728640;
	or.b32  	%r2657, %r2654, %r2656;
	and.b32  	%r2658, %r3381, 15728640;
	shr.u32 	%r2659, %r2658, 4;
	or.b32  	%r2660, %r2657, %r2659;
	shl.b32 	%r2661, %r3381, 6;
	and.b32  	%r2662, %r2661, -1073741824;
	or.b32  	%r2663, %r2660, %r2662;
	and.b32  	%r2664, %r3381, -67108864;
	shr.u32 	%r2665, %r2664, 2;
	or.b32  	%r2666, %r2663, %r2665;
	shl.b32 	%r2667, %r3380, 2;
	and.b32  	%r2668, %r2667, 64512;
	and.b32  	%r2669, %r3380, 255;
	or.b32  	%r2670, %r2668, %r2669;
	and.b32  	%r2671, %r3380, 49152;
	shr.u32 	%r2672, %r2671, 6;
	or.b32  	%r2673, %r2670, %r2672;
	shl.b32 	%r2674, %r3380, 4;
	and.b32  	%r2675, %r2674, 15728640;
	or.b32  	%r2676, %r2673, %r2675;
	and.b32  	%r2677, %r3380, 15728640;
	shr.u32 	%r2678, %r2677, 4;
	or.b32  	%r2679, %r2676, %r2678;
	shl.b32 	%r2680, %r3380, 6;
	and.b32  	%r2681, %r2680, -1073741824;
	or.b32  	%r2682, %r2679, %r2681;
	and.b32  	%r2683, %r3380, -67108864;
	shr.u32 	%r2684, %r2683, 2;
	or.b32  	%r2685, %r2682, %r2684;
	shl.b32 	%r2686, %r3379, 2;
	and.b32  	%r2687, %r2686, 64512;
	and.b32  	%r2688, %r3379, 255;
	or.b32  	%r2689, %r2687, %r2688;
	and.b32  	%r2690, %r3379, 49152;
	shr.u32 	%r2691, %r2690, 6;
	or.b32  	%r2692, %r2689, %r2691;
	shl.b32 	%r2693, %r3379, 4;
	and.b32  	%r2694, %r2693, 15728640;
	or.b32  	%r2695, %r2692, %r2694;
	and.b32  	%r2696, %r3379, 15728640;
	shr.u32 	%r2697, %r2696, 4;
	or.b32  	%r2698, %r2695, %r2697;
	shl.b32 	%r2699, %r3379, 6;
	and.b32  	%r2700, %r2699, -1073741824;
	or.b32  	%r2701, %r2698, %r2700;
	and.b32  	%r2702, %r3379, -67108864;
	shr.u32 	%r2703, %r2702, 2;
	or.b32  	%r2704, %r2701, %r2703;
	xor.b32  	%r2705, %r2628, %r2571;
	xor.b32  	%r2706, %r2647, %r2590;
	not.b32 	%r2707, %r2666;
	not.b32 	%r2708, %r2685;
	not.b32 	%r2709, %r2706;
	xor.b32  	%r2710, %r2709, %r2708;
	not.b32 	%r2711, %r2705;
	xor.b32  	%r2712, %r2711, %r2707;
	xor.b32  	%r2713, %r2647, %r2609;
	xor.b32  	%r2714, %r2713, %r2704;
	xor.b32  	%r2715, %r2628, %r2590;
	xor.b32  	%r2716, %r2715, %r2685;
	xor.b32  	%r2717, %r2609, %r2571;
	xor.b32  	%r2718, %r2717, %r2666;
	xor.b32  	%r2719, %r2709, %r2704;
	xor.b32  	%r2720, %r2711, %r2708;
	xor.b32  	%r2721, %r2609, %r2707;
	xor.b32  	%r2722, %r2721, %r2704;
	xor.b32  	%r2723, %r2719, %r2716;
	xor.b32  	%r2724, %r2711, %r2709;
	xor.b32  	%r2725, %r2716, %r2710;
	xor.b32  	%r2726, %r2704, %r2708;
	xor.b32  	%r2727, %r2714, %r2712;
	xor.b32  	%r2728, %r2722, %r2727;
	xor.b32  	%r2729, %r2728, %r2716;
	xor.b32  	%r2730, %r2724, %r2723;
	xor.b32  	%r2731, %r2728, %r2710;
	xor.b32  	%r2732, %r2728, %r2720;
	xor.b32  	%r2733, %r2732, %r2726;
	xor.b32  	%r2734, %r2730, %r2718;
	xor.b32  	%r2735, %r2734, %r2719;
	xor.b32  	%r2736, %r2734, %r2712;
	xor.b32  	%r2737, %r2735, %r2722;
	xor.b32  	%r2738, %r2735, %r2727;
	xor.b32  	%r2739, %r2736, %r2725;
	xor.b32  	%r2740, %r2739, %r2722;
	xor.b32  	%r2741, %r2738, %r2739;
	xor.b32  	%r2742, %r2739, %r2727;
	and.b32  	%r2743, %r2735, %r2730;
	and.b32  	%r2744, %r2737, %r2733;
	and.b32  	%r2745, %r2729, %r2722;
	and.b32  	%r2746, %r2742, %r2724;
	and.b32  	%r2747, %r2732, %r2728;
	and.b32  	%r2748, %r2740, %r2731;
	and.b32  	%r2749, %r2739, %r2725;
	and.b32  	%r2750, %r2741, %r2723;
	xor.b32  	%r2751, %r2750, %r2749;
	and.b32  	%r2752, %r2738, %r2726;
	xor.b32  	%r2753, %r2752, %r2749;
	xor.b32  	%r2754, %r2743, %r2736;
	xor.b32  	%r2755, %r2754, %r2744;
	xor.b32  	%r2756, %r2755, %r2751;
	xor.b32  	%r2757, %r2745, %r2726;
	xor.b32  	%r2758, %r2757, %r2738;
	xor.b32  	%r2759, %r2758, %r2743;
	xor.b32  	%r2760, %r2759, %r2753;
	xor.b32  	%r2761, %r2747, %r2724;
	xor.b32  	%r2762, %r2761, %r2742;
	xor.b32  	%r2763, %r2762, %r2746;
	xor.b32  	%r2764, %r2763, %r2751;
	xor.b32  	%r2765, %r2742, %r2710;
	xor.b32  	%r2766, %r2765, %r2746;
	xor.b32  	%r2767, %r2766, %r2748;
	xor.b32  	%r2768, %r2767, %r2753;
	xor.b32  	%r2769, %r2756, %r2760;
	and.b32  	%r2770, %r2756, %r2764;
	xor.b32  	%r2771, %r2770, %r2768;
	and.b32  	%r2772, %r2771, %r2769;
	xor.b32  	%r2773, %r2772, %r2760;
	xor.b32  	%r2774, %r2764, %r2768;
	xor.b32  	%r2775, %r2770, %r2760;
	and.b32  	%r2776, %r2775, %r2774;
	xor.b32  	%r2777, %r2776, %r2768;
	xor.b32  	%r2778, %r2777, %r2764;
	xor.b32  	%r2779, %r2776, %r2770;
	and.b32  	%r2780, %r2779, %r2768;
	xor.b32  	%r2781, %r2778, %r2780;
	xor.b32  	%r2782, %r2780, %r2771;
	and.b32  	%r2783, %r2782, %r2773;
	xor.b32  	%r2784, %r2783, %r2769;
	xor.b32  	%r2785, %r2784, %r2781;
	xor.b32  	%r2786, %r2773, %r2777;
	xor.b32  	%r2787, %r2784, %r2773;
	xor.b32  	%r2788, %r2780, %r2764;
	xor.b32  	%r2789, %r2785, %r2786;
	and.b32  	%r2790, %r2788, %r2735;
	and.b32  	%r2791, %r2781, %r2737;
	and.b32  	%r2792, %r2777, %r2722;
	and.b32  	%r2793, %r2787, %r2742;
	and.b32  	%r2794, %r2784, %r2728;
	and.b32  	%r2795, %r2773, %r2740;
	and.b32  	%r2796, %r2786, %r2739;
	and.b32  	%r2797, %r2789, %r2741;
	and.b32  	%r2798, %r2785, %r2738;
	and.b32  	%r2799, %r2788, %r2730;
	and.b32  	%r2800, %r2781, %r2733;
	and.b32  	%r2801, %r2777, %r2729;
	and.b32  	%r2802, %r2787, %r2724;
	and.b32  	%r2803, %r2784, %r2732;
	and.b32  	%r2804, %r2773, %r2731;
	and.b32  	%r2805, %r2786, %r2725;
	and.b32  	%r2806, %r2789, %r2723;
	and.b32  	%r2807, %r2785, %r2726;
	xor.b32  	%r2808, %r2806, %r2805;
	xor.b32  	%r2809, %r2800, %r2801;
	xor.b32  	%r2810, %r2803, %r2795;
	xor.b32  	%r2811, %r2799, %r2800;
	xor.b32  	%r2812, %r2802, %r2792;
	xor.b32  	%r2813, %r2792, %r2795;
	xor.b32  	%r2814, %r2797, %r2798;
	xor.b32  	%r2815, %r2793, %r2790;
	xor.b32  	%r2816, %r2802, %r2810;
	xor.b32  	%r2817, %r2812, %r2815;
	xor.b32  	%r2818, %r2808, %r2794;
	xor.b32  	%r2819, %r2793, %r2796;
	xor.b32  	%r2820, %r2819, %r2797;
	xor.b32  	%r2821, %r2808, %r2817;
	xor.b32  	%r2822, %r2817, %r2804;
	xor.b32  	%r2823, %r2814, %r2818;
	xor.b32  	%r2824, %r2811, %r2818;
	xor.b32  	%r2825, %r2820, %r2794;
	xor.b32  	%r2826, %r2822, %r2823;
	xor.b32  	%r2827, %r2824, %r2791;
	xor.b32  	%r2828, %r2824, %r2820;
	xor.b32  	%r2829, %r2827, %r2815;
	xor.b32  	%r2830, %r2823, %r2816;
	xor.b32  	%r2831, %r2829, %r2825;
	xor.b32  	%r2832, %r2830, %r2831;
	xor.b32  	%r2833, %r2809, %r2826;
	xor.b32  	%r2834, %r2806, %r2807;
	xor.b32  	%r2835, %r2834, %r2825;
	xor.b32  	%r2836, %r2821, %r2810;
	xor.b32  	%r2837, %r2835, %r2826;
	xor.b32  	%r2838, %r2836, %r2837;
	xor.b32  	%r2839, %r2838, %r2833;
	xor.b32  	%r2840, %r2813, %r2827;
	xor.b32  	%r2841, %r2832, %r2840;
	xor.b32  	%r2842, %r2825, %r2830;
	xor.b32  	%r2843, %r2838, %r2840;
	xor.b32  	%r2844, %r2828, %r2829;
	xor.b32  	%r2845, %r2844, %r2833;
	xor.b32  	%r2846, %r2844, %r2830;
	xor.b32  	%r2847, %r2836, %r2831;
	xor.b32  	%r2848, %r2847, %r2840;
	xor.b32  	%r2849, %r2828, %r2837;
	xor.b32  	%r2850, %r2849, %r2833;
	ld.local.u32 	%r2851, [%rd71+656];
	xor.b32  	%r2852, %r2850, %r2851;
	ld.local.u32 	%r2853, [%rd71+660];
	xor.b32  	%r2854, %r2848, %r2853;
	ld.local.u32 	%r2855, [%rd71+664];
	xor.b32  	%r2856, %r2846, %r2855;
	ld.local.u32 	%r2857, [%rd71+668];
	xor.b32  	%r2858, %r2839, %r2857;
	ld.local.u32 	%r2859, [%rd71+672];
	xor.b32  	%r2860, %r2841, %r2859;
	ld.local.u32 	%r2861, [%rd71+676];
	xor.b32  	%r2862, %r2845, %r2861;
	ld.local.u32 	%r2863, [%rd71+680];
	xor.b32  	%r2864, %r2843, %r2863;
	ld.local.u32 	%r2865, [%rd71+684];
	xor.b32  	%r2866, %r2842, %r2865;
	shf.l.wrap.b32 	%r2867, %r2852, %r2852, 24;
	shf.l.wrap.b32 	%r2868, %r2854, %r2854, 24;
	shf.l.wrap.b32 	%r2869, %r2856, %r2856, 24;
	shf.l.wrap.b32 	%r2870, %r2858, %r2858, 24;
	shf.l.wrap.b32 	%r2871, %r2860, %r2860, 24;
	shf.l.wrap.b32 	%r2872, %r2862, %r2862, 24;
	shf.l.wrap.b32 	%r2873, %r2864, %r2864, 24;
	shf.l.wrap.b32 	%r2874, %r2866, %r2866, 24;
	xor.b32  	%r2875, %r2862, %r2852;
	xor.b32  	%r2876, %r2864, %r2867;
	xor.b32  	%r2877, %r2876, %r2875;
	xor.b32  	%r2878, %r2877, %r2872;
	shf.l.wrap.b32 	%r2879, %r2878, %r2878, 16;
	xor.b32  	%r2880, %r2862, %r2867;
	xor.b32  	%r2881, %r2880, %r2864;
	xor.b32  	%r2882, %r2881, %r2866;
	xor.b32  	%r2883, %r2882, %r2872;
	xor.b32  	%r2884, %r2883, %r2874;
	xor.b32  	%r3386, %r2884, %r2879;
	xor.b32  	%r2885, %r2868, %r2854;
	xor.b32  	%r2886, %r2885, %r2862;
	xor.b32  	%r2887, %r2886, %r2866;
	xor.b32  	%r2888, %r2887, %r2872;
	xor.b32  	%r2889, %r2888, %r2873;
	shf.l.wrap.b32 	%r2890, %r2889, %r2889, 16;
	xor.b32  	%r2891, %r2868, %r2867;
	xor.b32  	%r2892, %r2891, %r2875;
	xor.b32  	%r2893, %r2892, %r2872;
	xor.b32  	%r2894, %r2893, %r2873;
	xor.b32  	%r2895, %r2894, %r2874;
	xor.b32  	%r3385, %r2895, %r2890;
	xor.b32  	%r2896, %r2854, %r2852;
	xor.b32  	%r2897, %r2856, %r2852;
	xor.b32  	%r2898, %r2897, %r2869;
	xor.b32  	%r2899, %r2898, %r2864;
	xor.b32  	%r2900, %r2899, %r2873;
	xor.b32  	%r2901, %r2900, %r2874;
	shf.l.wrap.b32 	%r2902, %r2901, %r2901, 16;
	xor.b32  	%r2903, %r2868, %r2896;
	xor.b32  	%r2904, %r2903, %r2869;
	xor.b32  	%r2905, %r2904, %r2864;
	xor.b32  	%r2906, %r2905, %r2873;
	xor.b32  	%r2907, %r2906, %r2874;
	xor.b32  	%r3384, %r2907, %r2902;
	xor.b32  	%r2908, %r2896, %r2856;
	xor.b32  	%r2909, %r2867, %r2896;
	xor.b32  	%r2910, %r2909, %r2858;
	xor.b32  	%r2911, %r2910, %r2862;
	xor.b32  	%r2912, %r2911, %r2870;
	xor.b32  	%r2913, %r2912, %r2864;
	xor.b32  	%r2914, %r2913, %r2866;
	xor.b32  	%r2915, %r2914, %r2872;
	xor.b32  	%r2916, %r2915, %r2874;
	shf.l.wrap.b32 	%r2917, %r2916, %r2916, 16;
	xor.b32  	%r2918, %r2908, %r2867;
	xor.b32  	%r2919, %r2918, %r2869;
	xor.b32  	%r2920, %r2919, %r2862;
	xor.b32  	%r2921, %r2920, %r2870;
	xor.b32  	%r2922, %r2921, %r2864;
	xor.b32  	%r2923, %r2922, %r2872;
	xor.b32  	%r3383, %r2923, %r2917;
	xor.b32  	%r2924, %r2856, %r2854;
	xor.b32  	%r2925, %r2924, %r2858;
	xor.b32  	%r2926, %r2868, %r2924;
	xor.b32  	%r2927, %r2926, %r2860;
	xor.b32  	%r2928, %r2927, %r2862;
	xor.b32  	%r2929, %r2928, %r2871;
	xor.b32  	%r2930, %r2929, %r2866;
	xor.b32  	%r2931, %r2930, %r2872;
	xor.b32  	%r2932, %r2931, %r2873;
	shf.l.wrap.b32 	%r2933, %r2932, %r2932, 16;
	xor.b32  	%r2934, %r2925, %r2868;
	xor.b32  	%r2935, %r2934, %r2862;
	xor.b32  	%r2936, %r2935, %r2870;
	xor.b32  	%r2937, %r2936, %r2871;
	xor.b32  	%r2938, %r2937, %r2872;
	xor.b32  	%r2939, %r2938, %r2873;
	xor.b32  	%r2940, %r2939, %r2874;
	xor.b32  	%r3382, %r2940, %r2933;
	xor.b32  	%r2941, %r2858, %r2856;
	xor.b32  	%r2942, %r2941, %r2860;
	xor.b32  	%r2943, %r2869, %r2941;
	xor.b32  	%r2944, %r2943, %r2862;
	xor.b32  	%r2945, %r2944, %r2864;
	xor.b32  	%r2946, %r2945, %r2872;
	xor.b32  	%r2947, %r2946, %r2873;
	xor.b32  	%r2948, %r2947, %r2874;
	shf.l.wrap.b32 	%r2949, %r2948, %r2948, 16;
	xor.b32  	%r2950, %r2942, %r2869;
	xor.b32  	%r2951, %r2950, %r2864;
	xor.b32  	%r2952, %r2951, %r2871;
	xor.b32  	%r2953, %r2952, %r2872;
	xor.b32  	%r2954, %r2953, %r2873;
	xor.b32  	%r2955, %r2954, %r2874;
	xor.b32  	%r3381, %r2955, %r2949;
	xor.b32  	%r2956, %r2860, %r2858;
	xor.b32  	%r2957, %r2956, %r2862;
	xor.b32  	%r2958, %r2870, %r2956;
	xor.b32  	%r2959, %r2958, %r2864;
	xor.b32  	%r2960, %r2959, %r2866;
	xor.b32  	%r2961, %r2960, %r2873;
	xor.b32  	%r2962, %r2961, %r2874;
	shf.l.wrap.b32 	%r2963, %r2962, %r2962, 16;
	xor.b32  	%r2964, %r2957, %r2870;
	xor.b32  	%r2965, %r2964, %r2866;
	xor.b32  	%r2966, %r2965, %r2872;
	xor.b32  	%r2967, %r2966, %r2873;
	xor.b32  	%r2968, %r2967, %r2874;
	xor.b32  	%r3380, %r2968, %r2963;
	xor.b32  	%r2969, %r2862, %r2860;
	xor.b32  	%r2970, %r2969, %r2864;
	xor.b32  	%r2971, %r2970, %r2871;
	xor.b32  	%r2972, %r2971, %r2873;
	xor.b32  	%r2973, %r2972, %r2874;
	xor.b32  	%r2974, %r2871, %r2969;
	xor.b32  	%r2975, %r2974, %r2866;
	xor.b32  	%r2976, %r2975, %r2874;
	shf.l.wrap.b32 	%r2977, %r2976, %r2976, 16;
	xor.b32  	%r3379, %r2973, %r2977;
	add.s64 	%rd71, %rd71, -32;
	add.s32 	%r3378, %r3378, -1;
	setp.ne.s32 	%p5, %r3378, -13;
	@%p5 bra 	$L__BB3_7;

	ld.param.u64 	%rd69, [bitcoin_final_param_0];
	ld.const.s32 	%rd68, [%rd69+128];
	add.s64 	%rd67, %rd69, %rd68;
	ld.const.u8 	%rs92, [%rd67+-20];
	ld.const.u8 	%rs91, [%rd67+-17];
	ld.param.u64 	%rd62, [bitcoin_final_param_0];
	ld.const.s32 	%rd61, [%rd62+128];
	add.s64 	%rd60, %rd62, %rd61;
	ld.const.u8 	%rs90, [%rd60+-19];
	ld.param.u64 	%rd50, [bitcoin_final_param_0];
	ld.const.s32 	%rd49, [%rd50+128];
	add.s64 	%rd48, %rd50, %rd49;
	add.u64 	%rd46, %SPL, 240;
	ld.const.u8 	%rs89, [%rd48+-30];
	ld.const.u8 	%rs88, [%rd48+-29];
	ld.const.u8 	%rs87, [%rd48+-31];
	ld.const.u8 	%rs86, [%rd48+-32];
	ld.const.u8 	%rs85, [%rd48+-22];
	ld.const.u8 	%rs84, [%rd48+-21];
	ld.const.u8 	%rs83, [%rd48+-23];
	ld.const.u8 	%rs82, [%rd48+-24];
	ld.const.u8 	%rs81, [%rd48+-26];
	ld.const.u8 	%rs80, [%rd48+-25];
	ld.const.u8 	%rs79, [%rd48+-27];
	ld.const.u8 	%rs78, [%rd48+-28];
	ld.const.u8 	%rs77, [%rd48+-18];
	and.b32  	%r2979, %r3386, 255;
	shl.b32 	%r2980, %r3386, 2;
	and.b32  	%r2981, %r2980, 64512;
	or.b32  	%r2982, %r2981, %r2979;
	and.b32  	%r2983, %r3386, 49152;
	shr.u32 	%r2984, %r2983, 6;
	or.b32  	%r2985, %r2982, %r2984;
	shl.b32 	%r2986, %r3386, 4;
	and.b32  	%r2987, %r2986, 15728640;
	or.b32  	%r2988, %r2985, %r2987;
	and.b32  	%r2989, %r3386, 15728640;
	shr.u32 	%r2990, %r2989, 4;
	or.b32  	%r2991, %r2988, %r2990;
	shl.b32 	%r2992, %r3386, 6;
	and.b32  	%r2993, %r2992, -1073741824;
	or.b32  	%r2994, %r2991, %r2993;
	and.b32  	%r2995, %r3386, -67108864;
	shr.u32 	%r2996, %r2995, 2;
	or.b32  	%r2997, %r2994, %r2996;
	shl.b32 	%r2998, %r3385, 2;
	and.b32  	%r2999, %r2998, 64512;
	and.b32  	%r3000, %r3385, 255;
	or.b32  	%r3001, %r2999, %r3000;
	and.b32  	%r3002, %r3385, 49152;
	shr.u32 	%r3003, %r3002, 6;
	or.b32  	%r3004, %r3001, %r3003;
	shl.b32 	%r3005, %r3385, 4;
	and.b32  	%r3006, %r3005, 15728640;
	or.b32  	%r3007, %r3004, %r3006;
	and.b32  	%r3008, %r3385, 15728640;
	shr.u32 	%r3009, %r3008, 4;
	or.b32  	%r3010, %r3007, %r3009;
	shl.b32 	%r3011, %r3385, 6;
	and.b32  	%r3012, %r3011, -1073741824;
	or.b32  	%r3013, %r3010, %r3012;
	and.b32  	%r3014, %r3385, -67108864;
	shr.u32 	%r3015, %r3014, 2;
	or.b32  	%r3016, %r3013, %r3015;
	shl.b32 	%r3017, %r3384, 2;
	and.b32  	%r3018, %r3017, 64512;
	and.b32  	%r3019, %r3384, 255;
	or.b32  	%r3020, %r3018, %r3019;
	and.b32  	%r3021, %r3384, 49152;
	shr.u32 	%r3022, %r3021, 6;
	or.b32  	%r3023, %r3020, %r3022;
	shl.b32 	%r3024, %r3384, 4;
	and.b32  	%r3025, %r3024, 15728640;
	or.b32  	%r3026, %r3023, %r3025;
	and.b32  	%r3027, %r3384, 15728640;
	shr.u32 	%r3028, %r3027, 4;
	or.b32  	%r3029, %r3026, %r3028;
	shl.b32 	%r3030, %r3384, 6;
	and.b32  	%r3031, %r3030, -1073741824;
	or.b32  	%r3032, %r3029, %r3031;
	and.b32  	%r3033, %r3384, -67108864;
	shr.u32 	%r3034, %r3033, 2;
	or.b32  	%r3035, %r3032, %r3034;
	shl.b32 	%r3036, %r3383, 2;
	and.b32  	%r3037, %r3036, 64512;
	and.b32  	%r3038, %r3383, 255;
	or.b32  	%r3039, %r3037, %r3038;
	and.b32  	%r3040, %r3383, 49152;
	shr.u32 	%r3041, %r3040, 6;
	or.b32  	%r3042, %r3039, %r3041;
	shl.b32 	%r3043, %r3383, 4;
	and.b32  	%r3044, %r3043, 15728640;
	or.b32  	%r3045, %r3042, %r3044;
	and.b32  	%r3046, %r3383, 15728640;
	shr.u32 	%r3047, %r3046, 4;
	or.b32  	%r3048, %r3045, %r3047;
	shl.b32 	%r3049, %r3383, 6;
	and.b32  	%r3050, %r3049, -1073741824;
	or.b32  	%r3051, %r3048, %r3050;
	and.b32  	%r3052, %r3383, -67108864;
	shr.u32 	%r3053, %r3052, 2;
	or.b32  	%r3054, %r3051, %r3053;
	shl.b32 	%r3055, %r3382, 2;
	and.b32  	%r3056, %r3055, 64512;
	and.b32  	%r3057, %r3382, 255;
	or.b32  	%r3058, %r3056, %r3057;
	and.b32  	%r3059, %r3382, 49152;
	shr.u32 	%r3060, %r3059, 6;
	or.b32  	%r3061, %r3058, %r3060;
	shl.b32 	%r3062, %r3382, 4;
	and.b32  	%r3063, %r3062, 15728640;
	or.b32  	%r3064, %r3061, %r3063;
	and.b32  	%r3065, %r3382, 15728640;
	shr.u32 	%r3066, %r3065, 4;
	or.b32  	%r3067, %r3064, %r3066;
	shl.b32 	%r3068, %r3382, 6;
	and.b32  	%r3069, %r3068, -1073741824;
	or.b32  	%r3070, %r3067, %r3069;
	and.b32  	%r3071, %r3382, -67108864;
	shr.u32 	%r3072, %r3071, 2;
	or.b32  	%r3073, %r3070, %r3072;
	shl.b32 	%r3074, %r3381, 2;
	and.b32  	%r3075, %r3074, 64512;
	and.b32  	%r3076, %r3381, 255;
	or.b32  	%r3077, %r3075, %r3076;
	and.b32  	%r3078, %r3381, 49152;
	shr.u32 	%r3079, %r3078, 6;
	or.b32  	%r3080, %r3077, %r3079;
	shl.b32 	%r3081, %r3381, 4;
	and.b32  	%r3082, %r3081, 15728640;
	or.b32  	%r3083, %r3080, %r3082;
	and.b32  	%r3084, %r3381, 15728640;
	shr.u32 	%r3085, %r3084, 4;
	or.b32  	%r3086, %r3083, %r3085;
	shl.b32 	%r3087, %r3381, 6;
	and.b32  	%r3088, %r3087, -1073741824;
	or.b32  	%r3089, %r3086, %r3088;
	and.b32  	%r3090, %r3381, -67108864;
	shr.u32 	%r3091, %r3090, 2;
	or.b32  	%r3092, %r3089, %r3091;
	shl.b32 	%r3093, %r3380, 2;
	and.b32  	%r3094, %r3093, 64512;
	and.b32  	%r3095, %r3380, 255;
	or.b32  	%r3096, %r3094, %r3095;
	and.b32  	%r3097, %r3380, 49152;
	shr.u32 	%r3098, %r3097, 6;
	or.b32  	%r3099, %r3096, %r3098;
	shl.b32 	%r3100, %r3380, 4;
	and.b32  	%r3101, %r3100, 15728640;
	or.b32  	%r3102, %r3099, %r3101;
	and.b32  	%r3103, %r3380, 15728640;
	shr.u32 	%r3104, %r3103, 4;
	or.b32  	%r3105, %r3102, %r3104;
	shl.b32 	%r3106, %r3380, 6;
	and.b32  	%r3107, %r3106, -1073741824;
	or.b32  	%r3108, %r3105, %r3107;
	and.b32  	%r3109, %r3380, -67108864;
	shr.u32 	%r3110, %r3109, 2;
	or.b32  	%r3111, %r3108, %r3110;
	shl.b32 	%r3112, %r3379, 2;
	and.b32  	%r3113, %r3112, 64512;
	and.b32  	%r3114, %r3379, 255;
	or.b32  	%r3115, %r3113, %r3114;
	and.b32  	%r3116, %r3379, 49152;
	shr.u32 	%r3117, %r3116, 6;
	or.b32  	%r3118, %r3115, %r3117;
	shl.b32 	%r3119, %r3379, 4;
	and.b32  	%r3120, %r3119, 15728640;
	or.b32  	%r3121, %r3118, %r3120;
	and.b32  	%r3122, %r3379, 15728640;
	shr.u32 	%r3123, %r3122, 4;
	or.b32  	%r3124, %r3121, %r3123;
	shl.b32 	%r3125, %r3379, 6;
	and.b32  	%r3126, %r3125, -1073741824;
	or.b32  	%r3127, %r3124, %r3126;
	and.b32  	%r3128, %r3379, -67108864;
	shr.u32 	%r3129, %r3128, 2;
	or.b32  	%r3130, %r3127, %r3129;
	xor.b32  	%r3131, %r3054, %r2997;
	mov.u32 	%r2978, -1;
	xor.b32  	%r3132, %r3073, %r3016;
	not.b32 	%r3133, %r3092;
	not.b32 	%r3134, %r3111;
	not.b32 	%r3135, %r3132;
	xor.b32  	%r3136, %r3135, %r3134;
	not.b32 	%r3137, %r3131;
	xor.b32  	%r3138, %r3137, %r3133;
	xor.b32  	%r3139, %r3073, %r3035;
	xor.b32  	%r3140, %r3139, %r3130;
	xor.b32  	%r3141, %r3054, %r3016;
	xor.b32  	%r3142, %r3141, %r3111;
	xor.b32  	%r3143, %r3035, %r2997;
	xor.b32  	%r3144, %r3143, %r3092;
	xor.b32  	%r3145, %r3135, %r3130;
	xor.b32  	%r3146, %r3137, %r3134;
	xor.b32  	%r3147, %r3035, %r3133;
	xor.b32  	%r3148, %r3147, %r3130;
	xor.b32  	%r3149, %r3145, %r3142;
	xor.b32  	%r3150, %r3137, %r3135;
	xor.b32  	%r3151, %r3142, %r3136;
	xor.b32  	%r3152, %r3130, %r3134;
	xor.b32  	%r3153, %r3140, %r3138;
	xor.b32  	%r3154, %r3148, %r3153;
	xor.b32  	%r3155, %r3154, %r3142;
	xor.b32  	%r3156, %r3150, %r3149;
	xor.b32  	%r3157, %r3154, %r3136;
	xor.b32  	%r3158, %r3154, %r3146;
	xor.b32  	%r3159, %r3158, %r3152;
	xor.b32  	%r3160, %r3156, %r3144;
	xor.b32  	%r3161, %r3160, %r3145;
	xor.b32  	%r3162, %r3160, %r3138;
	xor.b32  	%r3163, %r3161, %r3148;
	xor.b32  	%r3164, %r3161, %r3153;
	xor.b32  	%r3165, %r3162, %r3151;
	xor.b32  	%r3166, %r3165, %r3148;
	xor.b32  	%r3167, %r3164, %r3165;
	xor.b32  	%r3168, %r3165, %r3153;
	and.b32  	%r3169, %r3161, %r3156;
	and.b32  	%r3170, %r3163, %r3159;
	and.b32  	%r3171, %r3155, %r3148;
	and.b32  	%r3172, %r3168, %r3150;
	and.b32  	%r3173, %r3158, %r3154;
	and.b32  	%r3174, %r3166, %r3157;
	and.b32  	%r3175, %r3165, %r3151;
	and.b32  	%r3176, %r3167, %r3149;
	xor.b32  	%r3177, %r3176, %r3175;
	and.b32  	%r3178, %r3164, %r3152;
	xor.b32  	%r3179, %r3178, %r3175;
	xor.b32  	%r3180, %r3169, %r3162;
	xor.b32  	%r3181, %r3180, %r3170;
	xor.b32  	%r3182, %r3181, %r3177;
	xor.b32  	%r3183, %r3171, %r3152;
	xor.b32  	%r3184, %r3183, %r3164;
	xor.b32  	%r3185, %r3184, %r3169;
	xor.b32  	%r3186, %r3185, %r3179;
	xor.b32  	%r3187, %r3173, %r3150;
	xor.b32  	%r3188, %r3187, %r3168;
	xor.b32  	%r3189, %r3188, %r3172;
	xor.b32  	%r3190, %r3189, %r3177;
	xor.b32  	%r3191, %r3168, %r3136;
	xor.b32  	%r3192, %r3191, %r3172;
	xor.b32  	%r3193, %r3192, %r3174;
	xor.b32  	%r3194, %r3193, %r3179;
	xor.b32  	%r3195, %r3182, %r3186;
	and.b32  	%r3196, %r3182, %r3190;
	xor.b32  	%r3197, %r3196, %r3194;
	and.b32  	%r3198, %r3197, %r3195;
	xor.b32  	%r3199, %r3198, %r3186;
	xor.b32  	%r3200, %r3190, %r3194;
	xor.b32  	%r3201, %r3196, %r3186;
	and.b32  	%r3202, %r3201, %r3200;
	xor.b32  	%r3203, %r3202, %r3194;
	xor.b32  	%r3204, %r3203, %r3190;
	xor.b32  	%r3205, %r3202, %r3196;
	and.b32  	%r3206, %r3205, %r3194;
	xor.b32  	%r3207, %r3204, %r3206;
	xor.b32  	%r3208, %r3206, %r3197;
	and.b32  	%r3209, %r3208, %r3199;
	xor.b32  	%r3210, %r3209, %r3195;
	xor.b32  	%r3211, %r3210, %r3207;
	xor.b32  	%r3212, %r3199, %r3203;
	xor.b32  	%r3213, %r3210, %r3199;
	xor.b32  	%r3214, %r3206, %r3190;
	xor.b32  	%r3215, %r3211, %r3212;
	and.b32  	%r3216, %r3214, %r3161;
	and.b32  	%r3217, %r3207, %r3163;
	and.b32  	%r3218, %r3203, %r3148;
	and.b32  	%r3219, %r3213, %r3168;
	and.b32  	%r3220, %r3210, %r3154;
	and.b32  	%r3221, %r3199, %r3166;
	and.b32  	%r3222, %r3212, %r3165;
	and.b32  	%r3223, %r3215, %r3167;
	and.b32  	%r3224, %r3211, %r3164;
	and.b32  	%r3225, %r3214, %r3156;
	and.b32  	%r3226, %r3207, %r3159;
	and.b32  	%r3227, %r3203, %r3155;
	and.b32  	%r3228, %r3213, %r3150;
	and.b32  	%r3229, %r3210, %r3158;
	and.b32  	%r3230, %r3199, %r3157;
	and.b32  	%r3231, %r3212, %r3151;
	and.b32  	%r3232, %r3215, %r3149;
	and.b32  	%r3233, %r3211, %r3152;
	xor.b32  	%r3234, %r3232, %r3231;
	xor.b32  	%r3235, %r3226, %r3227;
	xor.b32  	%r3236, %r3229, %r3221;
	xor.b32  	%r3237, %r3225, %r3226;
	xor.b32  	%r3238, %r3228, %r3218;
	xor.b32  	%r3239, %r3218, %r3221;
	xor.b32  	%r3240, %r3223, %r3224;
	xor.b32  	%r3241, %r3219, %r3216;
	xor.b32  	%r3242, %r3228, %r3236;
	xor.b32  	%r3243, %r3238, %r3241;
	xor.b32  	%r3244, %r3234, %r3220;
	xor.b32  	%r3245, %r3219, %r3222;
	xor.b32  	%r3246, %r3245, %r3223;
	xor.b32  	%r3247, %r3234, %r3243;
	xor.b32  	%r3248, %r3243, %r3230;
	xor.b32  	%r3249, %r3240, %r3244;
	xor.b32  	%r3250, %r3237, %r3244;
	xor.b32  	%r3251, %r3246, %r3220;
	xor.b32  	%r3252, %r3248, %r3249;
	xor.b32  	%r3253, %r3250, %r3217;
	xor.b32  	%r3254, %r3250, %r3246;
	xor.b32  	%r3255, %r3253, %r3241;
	xor.b32  	%r3256, %r3249, %r3242;
	xor.b32  	%r3257, %r3255, %r3251;
	xor.b32  	%r3258, %r3256, %r3257;
	xor.b32  	%r3259, %r3239, %r3253;
	xor.b32  	%r3260, %r3235, %r3252;
	xor.b32  	%r3261, %r3258, %r3259;
	xor.b32  	%r3262, %r3232, %r3233;
	xor.b32  	%r3263, %r3262, %r3251;
	xor.b32  	%r3264, %r3247, %r3236;
	xor.b32  	%r3265, %r3263, %r3252;
	xor.b32  	%r3266, %r3251, %r3256;
	xor.b32  	%r3267, %r3264, %r3265;
	xor.b32  	%r3268, %r3267, %r3259;
	xor.b32  	%r3269, %r3254, %r3255;
	xor.b32  	%r3270, %r3269, %r3260;
	xor.b32  	%r3271, %r3267, %r3260;
	xor.b32  	%r3272, %r3269, %r3256;
	xor.b32  	%r3273, %r3264, %r3257;
	xor.b32  	%r3274, %r3273, %r3259;
	xor.b32  	%r3275, %r3254, %r3265;
	xor.b32  	%r3276, %r3275, %r3260;
	xor.b32  	%r3277, %r3276, %r13;
	xor.b32  	%r3278, %r3272, %r14;
	xor.b32  	%r3279, %r3261, %r15;
	xor.b32  	%r3280, %r3268, %r16;
	and.b32  	%r3281, %r3277, 1431655765;
	and.b32  	%r3282, %r3274, 1431655765;
	xor.b32  	%r3283, %r3282, %r17;
	shl.b32 	%r3284, %r3283, 1;
	or.b32  	%r3285, %r3284, %r3281;
	and.b32  	%r3286, %r3278, 1431655765;
	and.b32  	%r3287, %r3271, 1431655765;
	xor.b32  	%r3288, %r3287, %r18;
	shl.b32 	%r3289, %r3288, 1;
	or.b32  	%r3290, %r3289, %r3286;
	and.b32  	%r3291, %r3279, 1431655765;
	and.b32  	%r3292, %r3270, 1431655765;
	xor.b32  	%r3293, %r3292, %r19;
	shl.b32 	%r3294, %r3293, 1;
	or.b32  	%r3295, %r3294, %r3291;
	and.b32  	%r3296, %r3280, 1431655765;
	and.b32  	%r3297, %r3266, 1431655765;
	xor.b32  	%r3298, %r3297, %r20;
	shl.b32 	%r3299, %r3298, 1;
	or.b32  	%r3300, %r3299, %r3296;
	and.b32  	%r3301, %r3285, 858993459;
	shl.b32 	%r3302, %r3290, 2;
	and.b32  	%r3303, %r3302, -858993460;
	or.b32  	%r3304, %r3303, %r3301;
	and.b32  	%r3305, %r3285, -858993460;
	shr.u32 	%r3306, %r3305, 2;
	and.b32  	%r3307, %r3290, -858993460;
	or.b32  	%r3308, %r3306, %r3307;
	and.b32  	%r3309, %r3295, 858993459;
	shl.b32 	%r3310, %r3300, 2;
	and.b32  	%r3311, %r3310, -858993460;
	or.b32  	%r3312, %r3311, %r3309;
	and.b32  	%r3313, %r3295, -858993460;
	shr.u32 	%r3314, %r3313, 2;
	and.b32  	%r3315, %r3300, -858993460;
	or.b32  	%r3316, %r3314, %r3315;
	and.b32  	%r3317, %r3304, 252645135;
	shl.b32 	%r3318, %r3312, 4;
	and.b32  	%r3319, %r3318, -252645136;
	or.b32  	%r3320, %r3319, %r3317;
	and.b32  	%r3321, %r3304, -252645136;
	shr.u32 	%r3322, %r3321, 4;
	and.b32  	%r3323, %r3312, -252645136;
	or.b32  	%r3324, %r3322, %r3323;
	and.b32  	%r3325, %r3308, 252645135;
	shl.b32 	%r3326, %r3316, 4;
	and.b32  	%r3327, %r3326, -252645136;
	or.b32  	%r3328, %r3327, %r3325;
	and.b32  	%r3329, %r3308, -252645136;
	shr.u32 	%r3330, %r3329, 4;
	and.b32  	%r3331, %r3316, -252645136;
	or.b32  	%r3332, %r3330, %r3331;
	cvt.u16.u32 	%rs34, %r3320;
	shr.u16 	%rs35, %rs34, 8;
	shr.u32 	%r3333, %r3320, 16;
	cvt.u16.u32 	%rs36, %r3333;
	shr.u32 	%r3334, %r3320, 24;
	cvt.u16.u32 	%rs37, %r3334;
	cvt.u16.u32 	%rs38, %r3328;
	shr.u16 	%rs39, %rs38, 8;
	shr.u32 	%r3335, %r3328, 16;
	cvt.u16.u32 	%rs40, %r3335;
	shr.u32 	%r3336, %r3328, 24;
	cvt.u16.u32 	%rs41, %r3336;
	cvt.u16.u32 	%rs42, %r3324;
	shr.u16 	%rs43, %rs42, 8;
	shr.u32 	%r3337, %r3324, 16;
	cvt.u16.u32 	%rs44, %r3337;
	shr.u32 	%r3338, %r3324, 24;
	cvt.u16.u32 	%rs45, %r3338;
	cvt.u16.u32 	%rs46, %r3332;
	shr.u16 	%rs47, %rs46, 8;
	shr.u32 	%r3339, %r3332, 16;
	cvt.u16.u32 	%rs48, %r3339;
	shr.u32 	%r3340, %r3332, 24;
	cvt.u16.u32 	%rs49, %r3340;
	xor.b16  	%rs17, %rs91, %rs49;
	xor.b16  	%rs50, %rs92, %rs46;
	and.b16  	%rs51, %rs50, 255;
	cvt.u32.u16 	%r3341, %rs51;
	xor.b16  	%rs52, %rs90, %rs47;
	cvt.u32.u16 	%r3342, %rs52;
	prmt.b32 	%r3343, %r3342, %r3341, 30212;
	xor.b16  	%rs53, %rs77, %rs48;
	and.b16  	%rs54, %rs53, 255;
	cvt.u32.u16 	%r3344, %rs54;
	cvt.u32.u16 	%r3345, %rs17;
	prmt.b32 	%r3346, %r3345, %r3344, 30212;
	xor.b16  	%rs55, %rs78, %rs38;
	and.b16  	%rs56, %rs55, 255;
	cvt.u32.u16 	%r3347, %rs56;
	xor.b16  	%rs57, %rs79, %rs39;
	cvt.u32.u16 	%r3348, %rs57;
	prmt.b32 	%r3349, %r3348, %r3347, 30212;
	xor.b16  	%rs58, %rs80, %rs41;
	cvt.u32.u16 	%r3350, %rs58;
	xor.b16  	%rs59, %rs81, %rs40;
	and.b16  	%rs60, %rs59, 255;
	cvt.u32.u16 	%r3351, %rs60;
	prmt.b32 	%r3352, %r3350, %r3351, 30212;
	xor.b16  	%rs61, %rs82, %rs42;
	and.b16  	%rs62, %rs61, 255;
	cvt.u32.u16 	%r3353, %rs62;
	xor.b16  	%rs63, %rs83, %rs43;
	cvt.u32.u16 	%r3354, %rs63;
	prmt.b32 	%r3355, %r3354, %r3353, 30212;
	xor.b16  	%rs64, %rs84, %rs45;
	cvt.u32.u16 	%r3356, %rs64;
	xor.b16  	%rs65, %rs85, %rs44;
	and.b16  	%rs66, %rs65, 255;
	cvt.u32.u16 	%r3357, %rs66;
	prmt.b32 	%r3358, %r3356, %r3357, 30212;
	xor.b16  	%rs67, %rs86, %rs34;
	and.b16  	%rs68, %rs67, 255;
	cvt.u32.u16 	%r3359, %rs68;
	xor.b16  	%rs69, %rs87, %rs35;
	cvt.u32.u16 	%r3360, %rs69;
	prmt.b32 	%r3361, %r3360, %r3359, 30212;
	xor.b16  	%rs70, %rs88, %rs37;
	cvt.u32.u16 	%r3362, %rs70;
	xor.b16  	%rs71, %rs89, %rs36;
	and.b16  	%rs72, %rs71, 255;
	cvt.u32.u16 	%r3363, %rs72;
	prmt.b32 	%r3364, %r3362, %r3363, 30212;
	prmt.b32 	%r3365, %r3364, %r3361, 4180;
	prmt.b32 	%r3366, %r3358, %r3355, 4180;
	prmt.b32 	%r3367, %r3352, %r3349, 4180;
	prmt.b32 	%r3368, %r3346, %r3343, 4180;
	st.local.v4.u32 	[%rd46], {%r3365, %r3367, %r3366, %r3368};
	and.b32  	%r3387, %r3345, 255;
	add.s16 	%rs73, %rs17, -1;
	and.b16  	%rs74, %rs73, 255;
	setp.gt.u16 	%p6, %rs74, 15;
	mov.u32 	%r3388, %r2978;
	@%p6 bra 	$L__BB3_12;

	add.u64 	%rd51, %SPL, 240;
	mov.u32 	%r3369, 16;
	sub.s32 	%r48, %r3369, %r3387;
	cvt.s64.s32 	%rd43, %r48;
	add.s64 	%rd72, %rd51, %rd43;

$L__BB3_10:
	setp.eq.s32 	%p7, %r3387, 0;
	mov.u32 	%r3388, %r48;
	@%p7 bra 	$L__BB3_12;

	add.s32 	%r3387, %r3387, -1;
	add.s64 	%rd13, %rd72, 1;
	ld.local.u8 	%rs75, [%rd72];
	and.b16  	%rs76, %rs17, 255;
	setp.eq.s16 	%p8, %rs75, %rs76;
	mov.u64 	%rd72, %rd13;
	mov.u32 	%r3388, %r2978;
	@%p8 bra 	$L__BB3_10;

$L__BB3_12:
	ld.param.u64 	%rd55, [bitcoin_final_param_2];
	ld.param.u64 	%rd54, [bitcoin_final_param_0];
	add.s64 	%rd53, %rd54, 128;
	ld.const.u32 	%r3371, [%rd53+140];
	setp.eq.s32 	%p9, %r3388, %r3371;
	selp.u32 	%r3372, 1, 0, %p9;
	shl.b64 	%rd44, %rd6, 2;
	add.s64 	%rd45, %rd55, %rd44;
	st.global.u32 	[%rd45], %r3372;
	ret;

}

  