//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	sha1
// sha1_$_s_bitmaps has been demoted

.entry sha1(
	.param .u64 .ptr .global .align 4 sha1_param_0,
	.param .u64 .ptr .global .align 4 sha1_param_1,
	.param .u64 .ptr .global .align 4 sha1_param_2,
	.param .u64 .ptr .const .align 4 sha1_param_3,
	.param .u64 .ptr .const .align 1 sha1_param_4,
	.param .u64 .ptr .global .align 4 sha1_param_5,
	.param .u64 .ptr .global .align 4 sha1_param_6,
	.param .u64 .ptr .global .align 4 sha1_param_7,
	.param .u64 .ptr .global .align 4 sha1_param_8,
	.param .u64 .ptr .global .align 4 sha1_param_9,
	.param .u64 .ptr .global .align 4 sha1_param_10
)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<20>;
	.reg .b32 	%r<1332>;
	.reg .b64 	%rd<100>;
	// demoted variable
	.shared .align 4 .b8 sha1_$_s_bitmaps[16384];

	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd9, [sha1_param_0];
	ld.param.u64 	%rd16, [sha1_param_1];
	ld.param.u64 	%rd4, [sha1_param_4];
	ld.param.u64 	%rd10, [sha1_param_5];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r1330, %tid.x;
	mov.b32 	%r17, %envreg3;
	add.s32 	%r18, %r1330, %r17;
	mad.lo.s32 	%r3, %r1, %r16, %r18;
	mul.wide.u32 	%rd18, %r3, 4;
	add.s64 	%rd19, %rd16, %rd18;
	ld.global.u32 	%r4, [%rd19];
	mov.u32 	%r1331, 0;
	st.local.v4.u32 	[%rd1], {%r1331, %r1331, %r1331, %r1331};
	st.local.v4.u32 	[%rd1+16], {%r1331, %r1331, %r1331, %r1331};
	st.local.v4.u32 	[%rd1+32], {%r1331, %r1331, %r1331, %r1331};
	st.local.v4.u32 	[%rd1+48], {%r1331, %r1331, %r1331, %r1331};
	and.b32  	%r5, %r4, 63;
	ld.const.u8 	%rs1, [%rd4+16];
	setp.gt.u32 	%p1, %r1330, 4095;
	@%p1 bra 	$L__BB0_2;

$L__BB0_1:
	mul.wide.u32 	%rd20, %r1330, 4;
	add.s64 	%rd21, %rd10, %rd20;
	ld.global.u32 	%r20, [%rd21];
	mov.u64 	%rd22, sha1_$_s_bitmaps;
	add.s64 	%rd23, %rd22, %rd20;
	st.shared.u32 	[%rd23], %r20;
	add.s32 	%r1330, %r1330, %r1;
	setp.lt.u32 	%p2, %r1330, 4096;
	@%p2 bra 	$L__BB0_1;

$L__BB0_2:
	bar.sync 	0;
	add.s32 	%r8, %r5, 3;
	and.b32  	%r22, %r8, 124;
	setp.eq.s32 	%p3, %r22, 0;
	@%p3 bra 	$L__BB0_19;

	shr.u32 	%r24, %r4, 6;
	mul.wide.u32 	%rd24, %r24, 4;
	add.s64 	%rd5, %rd9, %rd24;
	ld.global.u32 	%r25, [%rd5];
	shf.l.wrap.b32 	%r26, %r25, %r25, 16;
	shl.b32 	%r27, %r26, 8;
	and.b32  	%r28, %r27, -16711936;
	shr.u32 	%r29, %r26, 8;
	and.b32  	%r30, %r29, 16711935;
	or.b32  	%r31, %r28, %r30;
	st.local.u32 	[%rd1], %r31;
	setp.lt.u32 	%p4, %r8, 8;
	mov.u32 	%r1331, 1;
	@%p4 bra 	$L__BB0_19;

	ld.global.u32 	%r33, [%rd5+4];
	shf.l.wrap.b32 	%r34, %r33, %r33, 16;
	shl.b32 	%r35, %r34, 8;
	and.b32  	%r36, %r35, -16711936;
	shr.u32 	%r37, %r34, 8;
	and.b32  	%r38, %r37, 16711935;
	or.b32  	%r39, %r36, %r38;
	st.local.u32 	[%rd1+4], %r39;
	setp.lt.u32 	%p5, %r8, 12;
	mov.u32 	%r1331, 2;
	@%p5 bra 	$L__BB0_19;

	ld.global.u32 	%r41, [%rd5+8];
	shf.l.wrap.b32 	%r42, %r41, %r41, 16;
	shl.b32 	%r43, %r42, 8;
	and.b32  	%r44, %r43, -16711936;
	shr.u32 	%r45, %r42, 8;
	and.b32  	%r46, %r45, 16711935;
	or.b32  	%r47, %r44, %r46;
	st.local.u32 	[%rd1+8], %r47;
	setp.lt.u32 	%p6, %r8, 16;
	mov.u32 	%r1331, 3;
	@%p6 bra 	$L__BB0_19;

	ld.global.u32 	%r49, [%rd5+12];
	shf.l.wrap.b32 	%r50, %r49, %r49, 16;
	shl.b32 	%r51, %r50, 8;
	and.b32  	%r52, %r51, -16711936;
	shr.u32 	%r53, %r50, 8;
	and.b32  	%r54, %r53, 16711935;
	or.b32  	%r55, %r52, %r54;
	st.local.u32 	[%rd1+12], %r55;
	setp.lt.u32 	%p7, %r8, 20;
	mov.u32 	%r1331, 4;
	@%p7 bra 	$L__BB0_19;

	ld.global.u32 	%r57, [%rd5+16];
	shf.l.wrap.b32 	%r58, %r57, %r57, 16;
	shl.b32 	%r59, %r58, 8;
	and.b32  	%r60, %r59, -16711936;
	shr.u32 	%r61, %r58, 8;
	and.b32  	%r62, %r61, 16711935;
	or.b32  	%r63, %r60, %r62;
	st.local.u32 	[%rd1+16], %r63;
	setp.lt.u32 	%p8, %r8, 24;
	mov.u32 	%r1331, 5;
	@%p8 bra 	$L__BB0_19;

	ld.global.u32 	%r65, [%rd5+20];
	shf.l.wrap.b32 	%r66, %r65, %r65, 16;
	shl.b32 	%r67, %r66, 8;
	and.b32  	%r68, %r67, -16711936;
	shr.u32 	%r69, %r66, 8;
	and.b32  	%r70, %r69, 16711935;
	or.b32  	%r71, %r68, %r70;
	st.local.u32 	[%rd1+20], %r71;
	setp.lt.u32 	%p9, %r8, 28;
	mov.u32 	%r1331, 6;
	@%p9 bra 	$L__BB0_19;

	ld.global.u32 	%r73, [%rd5+24];
	shf.l.wrap.b32 	%r74, %r73, %r73, 16;
	shl.b32 	%r75, %r74, 8;
	and.b32  	%r76, %r75, -16711936;
	shr.u32 	%r77, %r74, 8;
	and.b32  	%r78, %r77, 16711935;
	or.b32  	%r79, %r76, %r78;
	st.local.u32 	[%rd1+24], %r79;
	setp.lt.u32 	%p10, %r8, 32;
	mov.u32 	%r1331, 7;
	@%p10 bra 	$L__BB0_19;

	ld.global.u32 	%r81, [%rd5+28];
	shf.l.wrap.b32 	%r82, %r81, %r81, 16;
	shl.b32 	%r83, %r82, 8;
	and.b32  	%r84, %r83, -16711936;
	mov.u32 	%r1331, 8;
	shr.u32 	%r85, %r82, 8;
	and.b32  	%r86, %r85, 16711935;
	or.b32  	%r87, %r84, %r86;
	st.local.u32 	[%rd1+28], %r87;
	setp.lt.u32 	%p11, %r8, 36;
	@%p11 bra 	$L__BB0_19;

	ld.global.u32 	%r89, [%rd5+32];
	shf.l.wrap.b32 	%r90, %r89, %r89, 16;
	shl.b32 	%r91, %r90, 8;
	and.b32  	%r92, %r91, -16711936;
	shr.u32 	%r93, %r90, 8;
	and.b32  	%r94, %r93, 16711935;
	or.b32  	%r95, %r92, %r94;
	st.local.u32 	[%rd1+32], %r95;
	setp.lt.u32 	%p12, %r8, 40;
	mov.u32 	%r1331, 9;
	@%p12 bra 	$L__BB0_19;

	ld.global.u32 	%r97, [%rd5+36];
	shf.l.wrap.b32 	%r98, %r97, %r97, 16;
	shl.b32 	%r99, %r98, 8;
	and.b32  	%r100, %r99, -16711936;
	shr.u32 	%r101, %r98, 8;
	and.b32  	%r102, %r101, 16711935;
	or.b32  	%r103, %r100, %r102;
	st.local.u32 	[%rd1+36], %r103;
	setp.lt.u32 	%p13, %r8, 44;
	mov.u32 	%r1331, 10;
	@%p13 bra 	$L__BB0_19;

	ld.global.u32 	%r105, [%rd5+40];
	shf.l.wrap.b32 	%r106, %r105, %r105, 16;
	shl.b32 	%r107, %r106, 8;
	and.b32  	%r108, %r107, -16711936;
	shr.u32 	%r109, %r106, 8;
	and.b32  	%r110, %r109, 16711935;
	or.b32  	%r111, %r108, %r110;
	st.local.u32 	[%rd1+40], %r111;
	setp.lt.u32 	%p14, %r8, 48;
	mov.u32 	%r1331, 11;
	@%p14 bra 	$L__BB0_19;

	ld.global.u32 	%r113, [%rd5+44];
	shf.l.wrap.b32 	%r114, %r113, %r113, 16;
	shl.b32 	%r115, %r114, 8;
	and.b32  	%r116, %r115, -16711936;
	shr.u32 	%r117, %r114, 8;
	and.b32  	%r118, %r117, 16711935;
	or.b32  	%r119, %r116, %r118;
	st.local.u32 	[%rd1+44], %r119;
	setp.lt.u32 	%p15, %r8, 52;
	mov.u32 	%r1331, 12;
	@%p15 bra 	$L__BB0_19;

	ld.global.u32 	%r121, [%rd5+48];
	shf.l.wrap.b32 	%r122, %r121, %r121, 16;
	shl.b32 	%r123, %r122, 8;
	and.b32  	%r124, %r123, -16711936;
	shr.u32 	%r125, %r122, 8;
	and.b32  	%r126, %r125, 16711935;
	or.b32  	%r127, %r124, %r126;
	st.local.u32 	[%rd1+48], %r127;
	setp.lt.u32 	%p16, %r8, 56;
	mov.u32 	%r1331, 13;
	@%p16 bra 	$L__BB0_19;

	ld.global.u32 	%r129, [%rd5+52];
	shf.l.wrap.b32 	%r130, %r129, %r129, 16;
	shl.b32 	%r131, %r130, 8;
	and.b32  	%r132, %r131, -16711936;
	shr.u32 	%r133, %r130, 8;
	and.b32  	%r134, %r133, 16711935;
	or.b32  	%r135, %r132, %r134;
	st.local.u32 	[%rd1+52], %r135;
	setp.lt.u32 	%p17, %r8, 60;
	mov.u32 	%r1331, 14;
	@%p17 bra 	$L__BB0_19;

	ld.global.u32 	%r137, [%rd5+56];
	shf.l.wrap.b32 	%r138, %r137, %r137, 16;
	shl.b32 	%r139, %r138, 8;
	and.b32  	%r140, %r139, -16711936;
	shr.u32 	%r141, %r138, 8;
	and.b32  	%r142, %r141, 16711935;
	or.b32  	%r143, %r140, %r142;
	st.local.u32 	[%rd1+56], %r143;
	setp.lt.u32 	%p18, %r8, 64;
	mov.u32 	%r1331, 15;
	@%p18 bra 	$L__BB0_19;

	ld.global.u32 	%r145, [%rd5+60];
	shf.l.wrap.b32 	%r146, %r145, %r145, 16;
	mov.u32 	%r1331, 16;
	shl.b32 	%r147, %r146, 8;
	and.b32  	%r148, %r147, -16711936;
	shr.u32 	%r149, %r146, 8;
	and.b32  	%r150, %r149, 16711935;
	or.b32  	%r151, %r148, %r150;
	st.local.u32 	[%rd1+60], %r151;

$L__BB0_19:
	cvt.u16.u32 	%rs3, %r4;
	and.b16  	%rs2, %rs3, 3;
	add.s32 	%r152, %r1331, -1;
	mul.wide.u32 	%rd25, %r152, 4;
	add.s64 	%rd6, %rd1, %rd25;
	mul.wide.u32 	%rd26, %r1331, 4;
	add.s64 	%rd7, %rd1, %rd26;
	setp.eq.s16 	%p19, %rs2, 1;
	@%p19 bra 	$L__BB0_24;

	setp.eq.s16 	%p20, %rs2, 2;
	@%p20 bra 	$L__BB0_23;

	setp.ne.s16 	%p21, %rs2, 3;
	@%p21 bra 	$L__BB0_25;

	ld.const.u8 	%r153, [%rd4];
	ld.local.u32 	%r154, [%rd6];
	or.b32  	%r155, %r154, %r153;
	st.local.u32 	[%rd6], %r155;
	ld.const.u8 	%r156, [%rd4+1];
	shl.b32 	%r157, %r156, 24;
	ld.const.u8 	%r158, [%rd4+2];
	shl.b32 	%r159, %r158, 16;
	or.b32  	%r160, %r159, %r157;
	ld.const.u8 	%rs4, [%rd4+3];
	mul.wide.u16 	%r161, %rs4, 256;
	or.b32  	%r162, %r160, %r161;
	ld.const.u8 	%r163, [%rd4+4];
	or.b32  	%r164, %r162, %r163;
	st.local.u32 	[%rd7], %r164;
	ld.const.u8 	%r165, [%rd4+5];
	shl.b32 	%r166, %r165, 24;
	ld.const.u8 	%r167, [%rd4+6];
	shl.b32 	%r168, %r167, 16;
	or.b32  	%r169, %r168, %r166;
	ld.const.u8 	%rs5, [%rd4+7];
	mul.wide.u16 	%r170, %rs5, 256;
	or.b32  	%r171, %r169, %r170;
	ld.const.u8 	%r172, [%rd4+8];
	or.b32  	%r173, %r171, %r172;
	st.local.u32 	[%rd7+4], %r173;
	ld.const.u8 	%r174, [%rd4+9];
	shl.b32 	%r175, %r174, 24;
	ld.const.u8 	%r176, [%rd4+10];
	shl.b32 	%r177, %r176, 16;
	or.b32  	%r178, %r177, %r175;
	ld.const.u8 	%rs6, [%rd4+11];
	mul.wide.u16 	%r179, %rs6, 256;
	or.b32  	%r180, %r178, %r179;
	ld.const.u8 	%r181, [%rd4+12];
	or.b32  	%r182, %r180, %r181;
	st.local.u32 	[%rd7+8], %r182;
	ld.const.u8 	%r183, [%rd4+13];
	shl.b32 	%r184, %r183, 24;
	ld.const.u8 	%r185, [%rd4+14];
	shl.b32 	%r186, %r185, 16;
	or.b32  	%r187, %r186, %r184;
	ld.const.u8 	%rs7, [%rd4+15];
	mul.wide.u16 	%r188, %rs7, 256;
	or.b32  	%r189, %r187, %r188;
	st.local.u32 	[%rd7+12], %r189;
	bra.uni 	$L__BB0_26;

$L__BB0_24:
	ld.const.u8 	%r227, [%rd4];
	shl.b32 	%r228, %r227, 16;
	ld.const.u8 	%rs11, [%rd4+1];
	mul.wide.u16 	%r229, %rs11, 256;
	or.b32  	%r230, %r229, %r228;
	ld.const.u8 	%r231, [%rd4+2];
	or.b32  	%r232, %r230, %r231;
	ld.local.u32 	%r233, [%rd6];
	or.b32  	%r234, %r232, %r233;
	st.local.u32 	[%rd6], %r234;
	ld.const.u8 	%r235, [%rd4+3];
	shl.b32 	%r236, %r235, 24;
	ld.const.u8 	%r237, [%rd4+4];
	shl.b32 	%r238, %r237, 16;
	or.b32  	%r239, %r238, %r236;
	ld.const.u8 	%rs12, [%rd4+5];
	mul.wide.u16 	%r240, %rs12, 256;
	or.b32  	%r241, %r239, %r240;
	ld.const.u8 	%r242, [%rd4+6];
	or.b32  	%r243, %r241, %r242;
	st.local.u32 	[%rd7], %r243;
	ld.const.u8 	%r244, [%rd4+7];
	shl.b32 	%r245, %r244, 24;
	ld.const.u8 	%r246, [%rd4+8];
	shl.b32 	%r247, %r246, 16;
	or.b32  	%r248, %r247, %r245;
	ld.const.u8 	%rs13, [%rd4+9];
	mul.wide.u16 	%r249, %rs13, 256;
	or.b32  	%r250, %r248, %r249;
	ld.const.u8 	%r251, [%rd4+10];
	or.b32  	%r252, %r250, %r251;
	st.local.u32 	[%rd7+4], %r252;
	ld.const.u8 	%r253, [%rd4+11];
	shl.b32 	%r254, %r253, 24;
	ld.const.u8 	%r255, [%rd4+12];
	shl.b32 	%r256, %r255, 16;
	or.b32  	%r257, %r256, %r254;
	ld.const.u8 	%rs14, [%rd4+13];
	mul.wide.u16 	%r258, %rs14, 256;
	or.b32  	%r259, %r257, %r258;
	ld.const.u8 	%r260, [%rd4+14];
	or.b32  	%r261, %r259, %r260;
	st.local.u32 	[%rd7+8], %r261;
	ld.const.u8 	%r262, [%rd4+15];
	shl.b32 	%r263, %r262, 24;
	st.local.u32 	[%rd7+12], %r263;
	bra.uni 	$L__BB0_26;

$L__BB0_23:
	ld.const.u8 	%r190, [%rd4];
	ld.const.u8 	%r191, [%rd4+1];
	prmt.b32 	%r192, %r190, %r191, 30212;
	ld.local.u32 	%r193, [%rd6];
	or.b32  	%r194, %r192, %r193;
	st.local.u32 	[%rd6], %r194;
	ld.const.u8 	%r195, [%rd4+2];
	shl.b32 	%r196, %r195, 24;
	ld.const.u8 	%r197, [%rd4+3];
	shl.b32 	%r198, %r197, 16;
	or.b32  	%r199, %r198, %r196;
	ld.const.u8 	%rs8, [%rd4+4];
	mul.wide.u16 	%r200, %rs8, 256;
	or.b32  	%r201, %r199, %r200;
	ld.const.u8 	%r202, [%rd4+5];
	or.b32  	%r203, %r201, %r202;
	st.local.u32 	[%rd7], %r203;
	ld.const.u8 	%r204, [%rd4+6];
	shl.b32 	%r205, %r204, 24;
	ld.const.u8 	%r206, [%rd4+7];
	shl.b32 	%r207, %r206, 16;
	or.b32  	%r208, %r207, %r205;
	ld.const.u8 	%rs9, [%rd4+8];
	mul.wide.u16 	%r209, %rs9, 256;
	or.b32  	%r210, %r208, %r209;
	ld.const.u8 	%r211, [%rd4+9];
	or.b32  	%r212, %r210, %r211;
	st.local.u32 	[%rd7+4], %r212;
	ld.const.u8 	%r213, [%rd4+10];
	shl.b32 	%r214, %r213, 24;
	ld.const.u8 	%r215, [%rd4+11];
	shl.b32 	%r216, %r215, 16;
	or.b32  	%r217, %r216, %r214;
	ld.const.u8 	%rs10, [%rd4+12];
	mul.wide.u16 	%r218, %rs10, 256;
	or.b32  	%r219, %r217, %r218;
	ld.const.u8 	%r220, [%rd4+13];
	or.b32  	%r221, %r219, %r220;
	st.local.u32 	[%rd7+8], %r221;
	ld.const.u8 	%r222, [%rd4+14];
	shl.b32 	%r223, %r222, 24;
	ld.const.u8 	%r224, [%rd4+15];
	shl.b32 	%r225, %r224, 16;
	or.b32  	%r226, %r225, %r223;
	st.local.u32 	[%rd7+12], %r226;
	bra.uni 	$L__BB0_26;

$L__BB0_25:
	ld.const.u8 	%r264, [%rd4];
	shl.b32 	%r265, %r264, 24;
	ld.const.u8 	%r266, [%rd4+1];
	shl.b32 	%r267, %r266, 16;
	or.b32  	%r268, %r267, %r265;
	ld.const.u8 	%rs15, [%rd4+2];
	mul.wide.u16 	%r269, %rs15, 256;
	or.b32  	%r270, %r268, %r269;
	ld.const.u8 	%r271, [%rd4+3];
	or.b32  	%r272, %r270, %r271;
	st.local.u32 	[%rd7], %r272;
	ld.const.u8 	%r273, [%rd4+4];
	shl.b32 	%r274, %r273, 24;
	ld.const.u8 	%r275, [%rd4+5];
	shl.b32 	%r276, %r275, 16;
	or.b32  	%r277, %r276, %r274;
	ld.const.u8 	%rs16, [%rd4+6];
	mul.wide.u16 	%r278, %rs16, 256;
	or.b32  	%r279, %r277, %r278;
	ld.const.u8 	%r280, [%rd4+7];
	or.b32  	%r281, %r279, %r280;
	st.local.u32 	[%rd7+4], %r281;
	ld.const.u8 	%r282, [%rd4+8];
	shl.b32 	%r283, %r282, 24;
	ld.const.u8 	%r284, [%rd4+9];
	shl.b32 	%r285, %r284, 16;
	or.b32  	%r286, %r285, %r283;
	ld.const.u8 	%rs17, [%rd4+10];
	mul.wide.u16 	%r287, %rs17, 256;
	or.b32  	%r288, %r286, %r287;
	ld.const.u8 	%r289, [%rd4+11];
	or.b32  	%r290, %r288, %r289;
	st.local.u32 	[%rd7+8], %r290;
	ld.const.u8 	%r291, [%rd4+12];
	shl.b32 	%r292, %r291, 24;
	ld.const.u8 	%r293, [%rd4+13];
	shl.b32 	%r294, %r293, 16;
	or.b32  	%r295, %r294, %r292;
	ld.const.u8 	%rs18, [%rd4+14];
	mul.wide.u16 	%r296, %rs18, 256;
	or.b32  	%r297, %r295, %r296;
	ld.const.u8 	%r298, [%rd4+15];
	or.b32  	%r299, %r297, %r298;
	st.local.u32 	[%rd7+12], %r299;

$L__BB0_26:
	cvt.u32.u16 	%r620, %rs1;
	and.b32  	%r621, %r620, 255;
	add.s32 	%r622, %r5, %r621;
	xor.b32  	%r623, %r622, 3;
	cvt.u64.u32 	%rd27, %r623;
	add.s64 	%rd28, %rd1, %rd27;
	mov.u16 	%rs19, 128;
	st.local.u8 	[%rd28], %rs19;
	shl.b32 	%r624, %r622, 3;
	st.local.u32 	[%rd1+60], %r624;
	ld.local.v4.u32 	{%r625, %r626, %r627, %r628}, [%rd1];
	mov.u32 	%r305, 1732584193;
	shf.l.wrap.b32 	%r633, %r305, %r305, 5;
	mov.u32 	%r301, -271733879;
	mov.u32 	%r307, -1732584194;
	mov.u32 	%r303, 271733878;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 202;
	// end inline asm
	add.s32 	%r634, %r633, %r300;
	add.s32 	%r635, %r634, %r625;
	add.s32 	%r309, %r635, 508910473;
	shf.l.wrap.b32 	%r636, %r309, %r309, 5;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 202;
	// end inline asm
	add.s32 	%r637, %r304, %r626;
	add.s32 	%r638, %r637, %r636;
	add.s32 	%r313, %r638, 1790234127;
	shf.l.wrap.b32 	%r639, %r313, %r313, 5;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 202;
	// end inline asm
	add.s32 	%r640, %r308, %r627;
	add.s32 	%r641, %r640, %r639;
	add.s32 	%r317, %r641, -214083945;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r642, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 202;
	// end inline asm
	add.s32 	%r643, %r311, %r312;
	add.s32 	%r644, %r643, %r628;
	add.s32 	%r645, %r644, %r642;
	add.s32 	%r321, %r645, 1518500249;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r646, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 202;
	// end inline asm
	ld.local.v4.u32 	{%r647, %r648, %r649, %r650}, [%rd1+16];
	add.s32 	%r655, %r315, %r316;
	add.s32 	%r656, %r655, %r647;
	add.s32 	%r657, %r656, %r646;
	add.s32 	%r325, %r657, 1518500249;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r658, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 202;
	// end inline asm
	add.s32 	%r659, %r319, %r320;
	add.s32 	%r660, %r659, %r648;
	add.s32 	%r661, %r660, %r658;
	add.s32 	%r329, %r661, 1518500249;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r662, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 202;
	// end inline asm
	add.s32 	%r663, %r323, %r324;
	add.s32 	%r664, %r663, %r649;
	add.s32 	%r665, %r664, %r662;
	add.s32 	%r333, %r665, 1518500249;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r666, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 202;
	// end inline asm
	add.s32 	%r667, %r328, %r650;
	add.s32 	%r668, %r667, %r327;
	add.s32 	%r669, %r668, %r666;
	add.s32 	%r337, %r669, 1518500249;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r670, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 202;
	// end inline asm
	ld.local.v4.u32 	{%r671, %r672, %r673, %r674}, [%rd1+32];
	add.s32 	%r679, %r332, %r671;
	add.s32 	%r680, %r679, %r331;
	add.s32 	%r681, %r680, %r670;
	add.s32 	%r341, %r681, 1518500249;
	shf.l.wrap.b32 	%r343, %r333, %r333, 30;
	shf.l.wrap.b32 	%r682, %r341, %r341, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r343, %r339, 202;
	// end inline asm
	add.s32 	%r683, %r336, %r672;
	add.s32 	%r684, %r683, %r335;
	add.s32 	%r685, %r684, %r682;
	add.s32 	%r345, %r685, 1518500249;
	shf.l.wrap.b32 	%r347, %r337, %r337, 30;
	shf.l.wrap.b32 	%r686, %r345, %r345, 5;
	// begin inline asm
	lop3.b32 %r340, %r341, %r347, %r343, 202;
	// end inline asm
	add.s32 	%r687, %r340, %r673;
	add.s32 	%r688, %r687, %r339;
	add.s32 	%r689, %r688, %r686;
	add.s32 	%r349, %r689, 1518500249;
	shf.l.wrap.b32 	%r351, %r341, %r341, 30;
	shf.l.wrap.b32 	%r690, %r349, %r349, 5;
	// begin inline asm
	lop3.b32 %r344, %r345, %r351, %r347, 202;
	// end inline asm
	add.s32 	%r691, %r344, %r674;
	add.s32 	%r692, %r691, %r343;
	add.s32 	%r693, %r692, %r690;
	add.s32 	%r353, %r693, 1518500249;
	shf.l.wrap.b32 	%r355, %r345, %r345, 30;
	shf.l.wrap.b32 	%r694, %r353, %r353, 5;
	// begin inline asm
	lop3.b32 %r348, %r349, %r355, %r351, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r695, %r696, %r697, %r698}, [%rd1+48];
	add.s32 	%r702, %r348, %r695;
	add.s32 	%r703, %r702, %r347;
	add.s32 	%r704, %r703, %r694;
	add.s32 	%r357, %r704, 1518500249;
	shf.l.wrap.b32 	%r359, %r349, %r349, 30;
	shf.l.wrap.b32 	%r705, %r357, %r357, 5;
	// begin inline asm
	lop3.b32 %r352, %r353, %r359, %r355, 202;
	// end inline asm
	add.s32 	%r706, %r352, %r696;
	add.s32 	%r707, %r706, %r351;
	add.s32 	%r708, %r707, %r705;
	add.s32 	%r361, %r708, 1518500249;
	shf.l.wrap.b32 	%r363, %r353, %r353, 30;
	shf.l.wrap.b32 	%r709, %r361, %r361, 5;
	// begin inline asm
	lop3.b32 %r356, %r357, %r363, %r359, 202;
	// end inline asm
	add.s32 	%r710, %r356, %r697;
	add.s32 	%r711, %r710, %r355;
	add.s32 	%r712, %r711, %r709;
	add.s32 	%r365, %r712, 1518500249;
	shf.l.wrap.b32 	%r367, %r357, %r357, 30;
	shf.l.wrap.b32 	%r713, %r365, %r365, 5;
	// begin inline asm
	lop3.b32 %r360, %r361, %r367, %r363, 202;
	// end inline asm
	add.s32 	%r714, %r360, %r624;
	add.s32 	%r715, %r714, %r359;
	add.s32 	%r716, %r715, %r713;
	add.s32 	%r369, %r716, 1518500249;
	shf.l.wrap.b32 	%r371, %r361, %r361, 30;
	shf.l.wrap.b32 	%r717, %r369, %r369, 5;
	// begin inline asm
	lop3.b32 %r364, %r365, %r371, %r367, 202;
	// end inline asm
	xor.b32  	%r718, %r671, %r696;
	xor.b32  	%r719, %r718, %r627;
	xor.b32  	%r720, %r719, %r625;
	shf.l.wrap.b32 	%r721, %r720, %r720, 1;
	add.s32 	%r722, %r364, %r721;
	add.s32 	%r723, %r722, %r363;
	add.s32 	%r724, %r723, %r717;
	add.s32 	%r373, %r724, 1518500249;
	shf.l.wrap.b32 	%r375, %r365, %r365, 30;
	shf.l.wrap.b32 	%r725, %r373, %r373, 5;
	// begin inline asm
	lop3.b32 %r368, %r369, %r375, %r371, 202;
	// end inline asm
	xor.b32  	%r726, %r672, %r697;
	xor.b32  	%r727, %r726, %r628;
	xor.b32  	%r728, %r727, %r626;
	shf.l.wrap.b32 	%r729, %r728, %r728, 1;
	add.s32 	%r730, %r368, %r729;
	add.s32 	%r731, %r730, %r367;
	add.s32 	%r732, %r731, %r725;
	add.s32 	%r377, %r732, 1518500249;
	shf.l.wrap.b32 	%r379, %r369, %r369, 30;
	shf.l.wrap.b32 	%r733, %r377, %r377, 5;
	// begin inline asm
	lop3.b32 %r372, %r373, %r379, %r375, 202;
	// end inline asm
	xor.b32  	%r734, %r673, %r624;
	xor.b32  	%r735, %r734, %r647;
	xor.b32  	%r736, %r735, %r627;
	shf.l.wrap.b32 	%r737, %r736, %r736, 1;
	add.s32 	%r738, %r372, %r737;
	add.s32 	%r739, %r738, %r371;
	add.s32 	%r740, %r739, %r733;
	add.s32 	%r381, %r740, 1518500249;
	shf.l.wrap.b32 	%r383, %r373, %r373, 30;
	shf.l.wrap.b32 	%r741, %r381, %r381, 5;
	// begin inline asm
	lop3.b32 %r376, %r377, %r383, %r379, 202;
	// end inline asm
	xor.b32  	%r742, %r674, %r721;
	xor.b32  	%r743, %r742, %r648;
	xor.b32  	%r744, %r743, %r628;
	shf.l.wrap.b32 	%r745, %r744, %r744, 1;
	add.s32 	%r746, %r376, %r745;
	add.s32 	%r747, %r746, %r375;
	add.s32 	%r748, %r747, %r741;
	add.s32 	%r385, %r748, 1518500249;
	shf.l.wrap.b32 	%r387, %r377, %r377, 30;
	shf.l.wrap.b32 	%r749, %r385, %r385, 5;
	// begin inline asm
	lop3.b32 %r380, %r381, %r387, %r383, 150;
	// end inline asm
	xor.b32  	%r750, %r695, %r729;
	xor.b32  	%r751, %r750, %r649;
	xor.b32  	%r752, %r751, %r647;
	shf.l.wrap.b32 	%r753, %r752, %r752, 1;
	add.s32 	%r754, %r380, %r753;
	add.s32 	%r755, %r754, %r379;
	add.s32 	%r756, %r755, %r749;
	add.s32 	%r389, %r756, 1859775393;
	shf.l.wrap.b32 	%r391, %r381, %r381, 30;
	shf.l.wrap.b32 	%r757, %r389, %r389, 5;
	// begin inline asm
	lop3.b32 %r384, %r385, %r391, %r387, 150;
	// end inline asm
	xor.b32  	%r758, %r696, %r737;
	xor.b32  	%r759, %r758, %r650;
	xor.b32  	%r760, %r759, %r648;
	shf.l.wrap.b32 	%r761, %r760, %r760, 1;
	add.s32 	%r762, %r384, %r761;
	add.s32 	%r763, %r762, %r383;
	add.s32 	%r764, %r763, %r757;
	add.s32 	%r393, %r764, 1859775393;
	shf.l.wrap.b32 	%r395, %r385, %r385, 30;
	shf.l.wrap.b32 	%r765, %r393, %r393, 5;
	// begin inline asm
	lop3.b32 %r388, %r389, %r395, %r391, 150;
	// end inline asm
	xor.b32  	%r766, %r697, %r745;
	xor.b32  	%r767, %r766, %r671;
	xor.b32  	%r768, %r767, %r649;
	shf.l.wrap.b32 	%r769, %r768, %r768, 1;
	add.s32 	%r770, %r388, %r769;
	add.s32 	%r771, %r770, %r387;
	add.s32 	%r772, %r771, %r765;
	add.s32 	%r397, %r772, 1859775393;
	shf.l.wrap.b32 	%r399, %r389, %r389, 30;
	shf.l.wrap.b32 	%r773, %r397, %r397, 5;
	// begin inline asm
	lop3.b32 %r392, %r393, %r399, %r395, 150;
	// end inline asm
	xor.b32  	%r774, %r624, %r753;
	xor.b32  	%r775, %r774, %r672;
	xor.b32  	%r776, %r775, %r650;
	shf.l.wrap.b32 	%r777, %r776, %r776, 1;
	add.s32 	%r778, %r392, %r777;
	add.s32 	%r779, %r778, %r391;
	add.s32 	%r780, %r779, %r773;
	add.s32 	%r401, %r780, 1859775393;
	shf.l.wrap.b32 	%r403, %r393, %r393, 30;
	shf.l.wrap.b32 	%r781, %r401, %r401, 5;
	// begin inline asm
	lop3.b32 %r396, %r397, %r403, %r399, 150;
	// end inline asm
	xor.b32  	%r782, %r761, %r721;
	xor.b32  	%r783, %r782, %r673;
	xor.b32  	%r784, %r783, %r671;
	shf.l.wrap.b32 	%r785, %r784, %r784, 1;
	add.s32 	%r786, %r396, %r785;
	add.s32 	%r787, %r786, %r395;
	add.s32 	%r788, %r787, %r781;
	add.s32 	%r405, %r788, 1859775393;
	shf.l.wrap.b32 	%r407, %r397, %r397, 30;
	shf.l.wrap.b32 	%r789, %r405, %r405, 5;
	// begin inline asm
	lop3.b32 %r400, %r401, %r407, %r403, 150;
	// end inline asm
	xor.b32  	%r790, %r769, %r729;
	xor.b32  	%r791, %r790, %r674;
	xor.b32  	%r792, %r791, %r672;
	shf.l.wrap.b32 	%r793, %r792, %r792, 1;
	add.s32 	%r794, %r400, %r793;
	add.s32 	%r795, %r794, %r399;
	add.s32 	%r796, %r795, %r789;
	add.s32 	%r409, %r796, 1859775393;
	shf.l.wrap.b32 	%r411, %r401, %r401, 30;
	shf.l.wrap.b32 	%r797, %r409, %r409, 5;
	// begin inline asm
	lop3.b32 %r404, %r405, %r411, %r407, 150;
	// end inline asm
	xor.b32  	%r798, %r777, %r737;
	xor.b32  	%r799, %r798, %r695;
	xor.b32  	%r800, %r799, %r673;
	shf.l.wrap.b32 	%r801, %r800, %r800, 1;
	add.s32 	%r802, %r404, %r801;
	add.s32 	%r803, %r802, %r403;
	add.s32 	%r804, %r803, %r797;
	add.s32 	%r413, %r804, 1859775393;
	shf.l.wrap.b32 	%r415, %r405, %r405, 30;
	shf.l.wrap.b32 	%r805, %r413, %r413, 5;
	// begin inline asm
	lop3.b32 %r408, %r409, %r415, %r411, 150;
	// end inline asm
	xor.b32  	%r806, %r785, %r745;
	xor.b32  	%r807, %r806, %r696;
	xor.b32  	%r808, %r807, %r674;
	shf.l.wrap.b32 	%r809, %r808, %r808, 1;
	add.s32 	%r810, %r408, %r809;
	add.s32 	%r811, %r810, %r407;
	add.s32 	%r812, %r811, %r805;
	add.s32 	%r417, %r812, 1859775393;
	shf.l.wrap.b32 	%r419, %r409, %r409, 30;
	shf.l.wrap.b32 	%r813, %r417, %r417, 5;
	// begin inline asm
	lop3.b32 %r412, %r413, %r419, %r415, 150;
	// end inline asm
	xor.b32  	%r814, %r793, %r753;
	xor.b32  	%r815, %r814, %r697;
	xor.b32  	%r816, %r815, %r695;
	shf.l.wrap.b32 	%r817, %r816, %r816, 1;
	add.s32 	%r818, %r412, %r817;
	add.s32 	%r819, %r818, %r411;
	add.s32 	%r820, %r819, %r813;
	add.s32 	%r421, %r820, 1859775393;
	shf.l.wrap.b32 	%r423, %r413, %r413, 30;
	shf.l.wrap.b32 	%r821, %r421, %r421, 5;
	// begin inline asm
	lop3.b32 %r416, %r417, %r423, %r419, 150;
	// end inline asm
	xor.b32  	%r822, %r801, %r761;
	xor.b32  	%r823, %r822, %r624;
	xor.b32  	%r824, %r823, %r696;
	shf.l.wrap.b32 	%r825, %r824, %r824, 1;
	add.s32 	%r826, %r416, %r825;
	add.s32 	%r827, %r826, %r415;
	add.s32 	%r828, %r827, %r821;
	add.s32 	%r425, %r828, 1859775393;
	shf.l.wrap.b32 	%r427, %r417, %r417, 30;
	shf.l.wrap.b32 	%r829, %r425, %r425, 5;
	// begin inline asm
	lop3.b32 %r420, %r421, %r427, %r423, 150;
	// end inline asm
	xor.b32  	%r830, %r769, %r721;
	xor.b32  	%r831, %r830, %r809;
	xor.b32  	%r832, %r831, %r697;
	shf.l.wrap.b32 	%r833, %r832, %r832, 1;
	add.s32 	%r834, %r420, %r833;
	add.s32 	%r835, %r834, %r419;
	add.s32 	%r836, %r835, %r829;
	add.s32 	%r429, %r836, 1859775393;
	shf.l.wrap.b32 	%r431, %r421, %r421, 30;
	shf.l.wrap.b32 	%r837, %r429, %r429, 5;
	// begin inline asm
	lop3.b32 %r424, %r425, %r431, %r427, 150;
	// end inline asm
	xor.b32  	%r838, %r777, %r729;
	xor.b32  	%r839, %r838, %r817;
	xor.b32  	%r840, %r839, %r624;
	shf.l.wrap.b32 	%r841, %r840, %r840, 1;
	add.s32 	%r842, %r424, %r841;
	add.s32 	%r843, %r842, %r423;
	add.s32 	%r844, %r843, %r837;
	add.s32 	%r433, %r844, 1859775393;
	shf.l.wrap.b32 	%r435, %r425, %r425, 30;
	shf.l.wrap.b32 	%r845, %r433, %r433, 5;
	// begin inline asm
	lop3.b32 %r428, %r429, %r435, %r431, 150;
	// end inline asm
	xor.b32  	%r846, %r737, %r721;
	xor.b32  	%r847, %r846, %r785;
	xor.b32  	%r848, %r847, %r825;
	shf.l.wrap.b32 	%r849, %r848, %r848, 1;
	add.s32 	%r850, %r428, %r849;
	add.s32 	%r851, %r850, %r427;
	add.s32 	%r852, %r851, %r845;
	add.s32 	%r437, %r852, 1859775393;
	shf.l.wrap.b32 	%r439, %r429, %r429, 30;
	shf.l.wrap.b32 	%r853, %r437, %r437, 5;
	// begin inline asm
	lop3.b32 %r432, %r433, %r439, %r435, 150;
	// end inline asm
	xor.b32  	%r854, %r745, %r729;
	xor.b32  	%r855, %r854, %r793;
	xor.b32  	%r856, %r855, %r833;
	shf.l.wrap.b32 	%r857, %r856, %r856, 1;
	add.s32 	%r858, %r432, %r857;
	add.s32 	%r859, %r858, %r431;
	add.s32 	%r860, %r859, %r853;
	add.s32 	%r441, %r860, 1859775393;
	shf.l.wrap.b32 	%r443, %r433, %r433, 30;
	shf.l.wrap.b32 	%r861, %r441, %r441, 5;
	// begin inline asm
	lop3.b32 %r436, %r437, %r443, %r439, 150;
	// end inline asm
	xor.b32  	%r862, %r753, %r737;
	xor.b32  	%r863, %r862, %r801;
	xor.b32  	%r864, %r863, %r841;
	shf.l.wrap.b32 	%r865, %r864, %r864, 1;
	add.s32 	%r866, %r436, %r865;
	add.s32 	%r867, %r866, %r435;
	add.s32 	%r868, %r867, %r861;
	add.s32 	%r445, %r868, 1859775393;
	shf.l.wrap.b32 	%r447, %r437, %r437, 30;
	shf.l.wrap.b32 	%r869, %r445, %r445, 5;
	// begin inline asm
	lop3.b32 %r440, %r441, %r447, %r443, 150;
	// end inline asm
	xor.b32  	%r870, %r761, %r745;
	xor.b32  	%r871, %r870, %r809;
	xor.b32  	%r872, %r871, %r849;
	shf.l.wrap.b32 	%r873, %r872, %r872, 1;
	add.s32 	%r874, %r440, %r873;
	add.s32 	%r875, %r874, %r439;
	add.s32 	%r876, %r875, %r869;
	add.s32 	%r449, %r876, 1859775393;
	shf.l.wrap.b32 	%r451, %r441, %r441, 30;
	shf.l.wrap.b32 	%r877, %r449, %r449, 5;
	// begin inline asm
	lop3.b32 %r444, %r445, %r451, %r447, 150;
	// end inline asm
	xor.b32  	%r878, %r769, %r753;
	xor.b32  	%r879, %r878, %r817;
	xor.b32  	%r880, %r879, %r857;
	shf.l.wrap.b32 	%r881, %r880, %r880, 1;
	add.s32 	%r882, %r444, %r881;
	add.s32 	%r883, %r882, %r443;
	add.s32 	%r884, %r883, %r877;
	add.s32 	%r453, %r884, 1859775393;
	shf.l.wrap.b32 	%r455, %r445, %r445, 30;
	shf.l.wrap.b32 	%r885, %r453, %r453, 5;
	// begin inline asm
	lop3.b32 %r448, %r449, %r455, %r451, 150;
	// end inline asm
	xor.b32  	%r886, %r777, %r761;
	xor.b32  	%r887, %r886, %r825;
	xor.b32  	%r888, %r887, %r865;
	shf.l.wrap.b32 	%r889, %r888, %r888, 1;
	add.s32 	%r890, %r448, %r889;
	add.s32 	%r891, %r890, %r447;
	add.s32 	%r892, %r891, %r885;
	add.s32 	%r457, %r892, 1859775393;
	shf.l.wrap.b32 	%r459, %r449, %r449, 30;
	shf.l.wrap.b32 	%r893, %r457, %r457, 5;
	// begin inline asm
	lop3.b32 %r452, %r453, %r459, %r455, 150;
	// end inline asm
	xor.b32  	%r894, %r785, %r769;
	xor.b32  	%r895, %r894, %r833;
	xor.b32  	%r896, %r895, %r873;
	shf.l.wrap.b32 	%r897, %r896, %r896, 1;
	add.s32 	%r898, %r452, %r897;
	add.s32 	%r899, %r898, %r451;
	add.s32 	%r900, %r899, %r893;
	add.s32 	%r461, %r900, 1859775393;
	shf.l.wrap.b32 	%r463, %r453, %r453, 30;
	shf.l.wrap.b32 	%r901, %r461, %r461, 5;
	// begin inline asm
	lop3.b32 %r456, %r457, %r463, %r459, 150;
	// end inline asm
	xor.b32  	%r902, %r793, %r777;
	xor.b32  	%r903, %r902, %r841;
	xor.b32  	%r904, %r903, %r881;
	shf.l.wrap.b32 	%r905, %r904, %r904, 1;
	add.s32 	%r906, %r456, %r905;
	add.s32 	%r907, %r906, %r455;
	add.s32 	%r908, %r907, %r901;
	add.s32 	%r465, %r908, 1859775393;
	shf.l.wrap.b32 	%r467, %r457, %r457, 30;
	shf.l.wrap.b32 	%r909, %r465, %r465, 5;
	// begin inline asm
	lop3.b32 %r460, %r461, %r467, %r463, 232;
	// end inline asm
	xor.b32  	%r910, %r801, %r785;
	xor.b32  	%r911, %r910, %r849;
	xor.b32  	%r912, %r911, %r889;
	shf.l.wrap.b32 	%r913, %r912, %r912, 1;
	add.s32 	%r914, %r460, %r913;
	add.s32 	%r915, %r914, %r459;
	add.s32 	%r916, %r915, %r909;
	add.s32 	%r469, %r916, -1894007588;
	shf.l.wrap.b32 	%r471, %r461, %r461, 30;
	shf.l.wrap.b32 	%r917, %r469, %r469, 5;
	// begin inline asm
	lop3.b32 %r464, %r465, %r471, %r467, 232;
	// end inline asm
	xor.b32  	%r918, %r809, %r793;
	xor.b32  	%r919, %r918, %r857;
	xor.b32  	%r920, %r919, %r897;
	shf.l.wrap.b32 	%r921, %r920, %r920, 1;
	add.s32 	%r922, %r464, %r921;
	add.s32 	%r923, %r922, %r463;
	add.s32 	%r924, %r923, %r917;
	add.s32 	%r473, %r924, -1894007588;
	shf.l.wrap.b32 	%r475, %r465, %r465, 30;
	shf.l.wrap.b32 	%r925, %r473, %r473, 5;
	// begin inline asm
	lop3.b32 %r468, %r469, %r475, %r471, 232;
	// end inline asm
	xor.b32  	%r926, %r817, %r801;
	xor.b32  	%r927, %r926, %r865;
	xor.b32  	%r928, %r927, %r905;
	shf.l.wrap.b32 	%r929, %r928, %r928, 1;
	add.s32 	%r930, %r468, %r929;
	add.s32 	%r931, %r930, %r467;
	add.s32 	%r932, %r931, %r925;
	add.s32 	%r477, %r932, -1894007588;
	shf.l.wrap.b32 	%r479, %r469, %r469, 30;
	shf.l.wrap.b32 	%r933, %r477, %r477, 5;
	// begin inline asm
	lop3.b32 %r472, %r473, %r479, %r475, 232;
	// end inline asm
	xor.b32  	%r934, %r825, %r809;
	xor.b32  	%r935, %r934, %r873;
	xor.b32  	%r936, %r935, %r913;
	shf.l.wrap.b32 	%r937, %r936, %r936, 1;
	add.s32 	%r938, %r472, %r937;
	add.s32 	%r939, %r938, %r471;
	add.s32 	%r940, %r939, %r933;
	add.s32 	%r481, %r940, -1894007588;
	shf.l.wrap.b32 	%r483, %r473, %r473, 30;
	shf.l.wrap.b32 	%r941, %r481, %r481, 5;
	// begin inline asm
	lop3.b32 %r476, %r477, %r483, %r479, 232;
	// end inline asm
	xor.b32  	%r942, %r833, %r817;
	xor.b32  	%r943, %r942, %r881;
	xor.b32  	%r944, %r943, %r921;
	shf.l.wrap.b32 	%r945, %r944, %r944, 1;
	add.s32 	%r946, %r476, %r945;
	add.s32 	%r947, %r946, %r475;
	add.s32 	%r948, %r947, %r941;
	add.s32 	%r485, %r948, -1894007588;
	shf.l.wrap.b32 	%r487, %r477, %r477, 30;
	shf.l.wrap.b32 	%r949, %r485, %r485, 5;
	// begin inline asm
	lop3.b32 %r480, %r481, %r487, %r483, 232;
	// end inline asm
	xor.b32  	%r950, %r841, %r825;
	xor.b32  	%r951, %r950, %r889;
	xor.b32  	%r952, %r951, %r929;
	shf.l.wrap.b32 	%r953, %r952, %r952, 1;
	add.s32 	%r954, %r480, %r953;
	add.s32 	%r955, %r954, %r479;
	add.s32 	%r956, %r955, %r949;
	add.s32 	%r489, %r956, -1894007588;
	shf.l.wrap.b32 	%r491, %r481, %r481, 30;
	shf.l.wrap.b32 	%r957, %r489, %r489, 5;
	// begin inline asm
	lop3.b32 %r484, %r485, %r491, %r487, 232;
	// end inline asm
	xor.b32  	%r958, %r849, %r833;
	xor.b32  	%r959, %r958, %r897;
	xor.b32  	%r960, %r959, %r937;
	shf.l.wrap.b32 	%r961, %r960, %r960, 1;
	add.s32 	%r962, %r484, %r961;
	add.s32 	%r963, %r962, %r483;
	add.s32 	%r964, %r963, %r957;
	add.s32 	%r493, %r964, -1894007588;
	shf.l.wrap.b32 	%r495, %r485, %r485, 30;
	shf.l.wrap.b32 	%r965, %r493, %r493, 5;
	// begin inline asm
	lop3.b32 %r488, %r489, %r495, %r491, 232;
	// end inline asm
	xor.b32  	%r966, %r857, %r841;
	xor.b32  	%r967, %r966, %r905;
	xor.b32  	%r968, %r967, %r945;
	shf.l.wrap.b32 	%r969, %r968, %r968, 1;
	add.s32 	%r970, %r488, %r969;
	add.s32 	%r971, %r970, %r487;
	add.s32 	%r972, %r971, %r965;
	add.s32 	%r497, %r972, -1894007588;
	shf.l.wrap.b32 	%r499, %r489, %r489, 30;
	shf.l.wrap.b32 	%r973, %r497, %r497, 5;
	// begin inline asm
	lop3.b32 %r492, %r493, %r499, %r495, 232;
	// end inline asm
	xor.b32  	%r974, %r865, %r849;
	xor.b32  	%r975, %r974, %r913;
	xor.b32  	%r976, %r975, %r953;
	shf.l.wrap.b32 	%r977, %r976, %r976, 1;
	add.s32 	%r978, %r492, %r977;
	add.s32 	%r979, %r978, %r491;
	add.s32 	%r980, %r979, %r973;
	add.s32 	%r501, %r980, -1894007588;
	shf.l.wrap.b32 	%r503, %r493, %r493, 30;
	shf.l.wrap.b32 	%r981, %r501, %r501, 5;
	// begin inline asm
	lop3.b32 %r496, %r497, %r503, %r499, 232;
	// end inline asm
	xor.b32  	%r982, %r873, %r857;
	xor.b32  	%r983, %r982, %r921;
	xor.b32  	%r984, %r983, %r961;
	shf.l.wrap.b32 	%r985, %r984, %r984, 1;
	add.s32 	%r986, %r496, %r985;
	add.s32 	%r987, %r986, %r495;
	add.s32 	%r988, %r987, %r981;
	add.s32 	%r505, %r988, -1894007588;
	shf.l.wrap.b32 	%r507, %r497, %r497, 30;
	shf.l.wrap.b32 	%r989, %r505, %r505, 5;
	// begin inline asm
	lop3.b32 %r500, %r501, %r507, %r503, 232;
	// end inline asm
	xor.b32  	%r990, %r881, %r865;
	xor.b32  	%r991, %r990, %r929;
	xor.b32  	%r992, %r991, %r969;
	shf.l.wrap.b32 	%r993, %r992, %r992, 1;
	add.s32 	%r994, %r500, %r993;
	add.s32 	%r995, %r994, %r499;
	add.s32 	%r996, %r995, %r989;
	add.s32 	%r509, %r996, -1894007588;
	shf.l.wrap.b32 	%r511, %r501, %r501, 30;
	shf.l.wrap.b32 	%r997, %r509, %r509, 5;
	// begin inline asm
	lop3.b32 %r504, %r505, %r511, %r507, 232;
	// end inline asm
	xor.b32  	%r998, %r889, %r873;
	xor.b32  	%r999, %r998, %r937;
	xor.b32  	%r1000, %r999, %r977;
	shf.l.wrap.b32 	%r1001, %r1000, %r1000, 1;
	add.s32 	%r1002, %r504, %r1001;
	add.s32 	%r1003, %r1002, %r503;
	add.s32 	%r1004, %r1003, %r997;
	add.s32 	%r513, %r1004, -1894007588;
	shf.l.wrap.b32 	%r515, %r505, %r505, 30;
	shf.l.wrap.b32 	%r1005, %r513, %r513, 5;
	// begin inline asm
	lop3.b32 %r508, %r509, %r515, %r511, 232;
	// end inline asm
	xor.b32  	%r1006, %r897, %r881;
	xor.b32  	%r1007, %r1006, %r945;
	xor.b32  	%r1008, %r1007, %r985;
	shf.l.wrap.b32 	%r1009, %r1008, %r1008, 1;
	add.s32 	%r1010, %r508, %r1009;
	add.s32 	%r1011, %r1010, %r507;
	add.s32 	%r1012, %r1011, %r1005;
	add.s32 	%r517, %r1012, -1894007588;
	shf.l.wrap.b32 	%r519, %r509, %r509, 30;
	shf.l.wrap.b32 	%r1013, %r517, %r517, 5;
	// begin inline asm
	lop3.b32 %r512, %r513, %r519, %r515, 232;
	// end inline asm
	xor.b32  	%r1014, %r905, %r889;
	xor.b32  	%r1015, %r1014, %r953;
	xor.b32  	%r1016, %r1015, %r993;
	shf.l.wrap.b32 	%r1017, %r1016, %r1016, 1;
	add.s32 	%r1018, %r512, %r1017;
	add.s32 	%r1019, %r1018, %r511;
	add.s32 	%r1020, %r1019, %r1013;
	add.s32 	%r521, %r1020, -1894007588;
	shf.l.wrap.b32 	%r523, %r513, %r513, 30;
	shf.l.wrap.b32 	%r1021, %r521, %r521, 5;
	// begin inline asm
	lop3.b32 %r516, %r517, %r523, %r519, 232;
	// end inline asm
	xor.b32  	%r1022, %r913, %r897;
	xor.b32  	%r1023, %r1022, %r961;
	xor.b32  	%r1024, %r1023, %r1001;
	shf.l.wrap.b32 	%r1025, %r1024, %r1024, 1;
	add.s32 	%r1026, %r516, %r1025;
	add.s32 	%r1027, %r1026, %r515;
	add.s32 	%r1028, %r1027, %r1021;
	add.s32 	%r525, %r1028, -1894007588;
	shf.l.wrap.b32 	%r527, %r517, %r517, 30;
	shf.l.wrap.b32 	%r1029, %r525, %r525, 5;
	// begin inline asm
	lop3.b32 %r520, %r521, %r527, %r523, 232;
	// end inline asm
	xor.b32  	%r1030, %r921, %r905;
	xor.b32  	%r1031, %r1030, %r969;
	xor.b32  	%r1032, %r1031, %r1009;
	shf.l.wrap.b32 	%r1033, %r1032, %r1032, 1;
	add.s32 	%r1034, %r520, %r1033;
	add.s32 	%r1035, %r1034, %r519;
	add.s32 	%r1036, %r1035, %r1029;
	add.s32 	%r529, %r1036, -1894007588;
	shf.l.wrap.b32 	%r531, %r521, %r521, 30;
	shf.l.wrap.b32 	%r1037, %r529, %r529, 5;
	// begin inline asm
	lop3.b32 %r524, %r525, %r531, %r527, 232;
	// end inline asm
	xor.b32  	%r1038, %r929, %r913;
	xor.b32  	%r1039, %r1038, %r977;
	xor.b32  	%r1040, %r1039, %r1017;
	shf.l.wrap.b32 	%r1041, %r1040, %r1040, 1;
	add.s32 	%r1042, %r524, %r1041;
	add.s32 	%r1043, %r1042, %r523;
	add.s32 	%r1044, %r1043, %r1037;
	add.s32 	%r533, %r1044, -1894007588;
	shf.l.wrap.b32 	%r535, %r525, %r525, 30;
	shf.l.wrap.b32 	%r1045, %r533, %r533, 5;
	// begin inline asm
	lop3.b32 %r528, %r529, %r535, %r531, 232;
	// end inline asm
	xor.b32  	%r1046, %r937, %r921;
	xor.b32  	%r1047, %r1046, %r985;
	xor.b32  	%r1048, %r1047, %r1025;
	shf.l.wrap.b32 	%r1049, %r1048, %r1048, 1;
	add.s32 	%r1050, %r528, %r1049;
	add.s32 	%r1051, %r1050, %r527;
	add.s32 	%r1052, %r1051, %r1045;
	add.s32 	%r537, %r1052, -1894007588;
	shf.l.wrap.b32 	%r539, %r529, %r529, 30;
	shf.l.wrap.b32 	%r1053, %r537, %r537, 5;
	// begin inline asm
	lop3.b32 %r532, %r533, %r539, %r535, 232;
	// end inline asm
	xor.b32  	%r1054, %r945, %r929;
	xor.b32  	%r1055, %r1054, %r993;
	xor.b32  	%r1056, %r1055, %r1033;
	shf.l.wrap.b32 	%r1057, %r1056, %r1056, 1;
	add.s32 	%r1058, %r532, %r1057;
	add.s32 	%r1059, %r1058, %r531;
	add.s32 	%r1060, %r1059, %r1053;
	add.s32 	%r541, %r1060, -1894007588;
	shf.l.wrap.b32 	%r543, %r533, %r533, 30;
	shf.l.wrap.b32 	%r1061, %r541, %r541, 5;
	// begin inline asm
	lop3.b32 %r536, %r537, %r543, %r539, 232;
	// end inline asm
	xor.b32  	%r1062, %r953, %r937;
	xor.b32  	%r1063, %r1062, %r1001;
	xor.b32  	%r1064, %r1063, %r1041;
	shf.l.wrap.b32 	%r1065, %r1064, %r1064, 1;
	add.s32 	%r1066, %r536, %r1065;
	add.s32 	%r1067, %r1066, %r535;
	add.s32 	%r1068, %r1067, %r1061;
	add.s32 	%r545, %r1068, -1894007588;
	shf.l.wrap.b32 	%r547, %r537, %r537, 30;
	shf.l.wrap.b32 	%r1069, %r545, %r545, 5;
	// begin inline asm
	lop3.b32 %r540, %r541, %r547, %r543, 150;
	// end inline asm
	xor.b32  	%r1070, %r961, %r945;
	xor.b32  	%r1071, %r1070, %r1009;
	xor.b32  	%r1072, %r1071, %r1049;
	shf.l.wrap.b32 	%r1073, %r1072, %r1072, 1;
	add.s32 	%r1074, %r540, %r1073;
	add.s32 	%r1075, %r1074, %r539;
	add.s32 	%r1076, %r1075, %r1069;
	add.s32 	%r549, %r1076, -899497514;
	shf.l.wrap.b32 	%r551, %r541, %r541, 30;
	shf.l.wrap.b32 	%r1077, %r549, %r549, 5;
	// begin inline asm
	lop3.b32 %r544, %r545, %r551, %r547, 150;
	// end inline asm
	xor.b32  	%r1078, %r969, %r953;
	xor.b32  	%r1079, %r1078, %r1017;
	xor.b32  	%r1080, %r1079, %r1057;
	shf.l.wrap.b32 	%r1081, %r1080, %r1080, 1;
	add.s32 	%r1082, %r544, %r1081;
	add.s32 	%r1083, %r1082, %r543;
	add.s32 	%r1084, %r1083, %r1077;
	add.s32 	%r553, %r1084, -899497514;
	shf.l.wrap.b32 	%r555, %r545, %r545, 30;
	shf.l.wrap.b32 	%r1085, %r553, %r553, 5;
	// begin inline asm
	lop3.b32 %r548, %r549, %r555, %r551, 150;
	// end inline asm
	xor.b32  	%r1086, %r977, %r961;
	xor.b32  	%r1087, %r1086, %r1025;
	xor.b32  	%r1088, %r1087, %r1065;
	shf.l.wrap.b32 	%r1089, %r1088, %r1088, 1;
	add.s32 	%r1090, %r548, %r1089;
	add.s32 	%r1091, %r1090, %r547;
	add.s32 	%r1092, %r1091, %r1085;
	add.s32 	%r557, %r1092, -899497514;
	shf.l.wrap.b32 	%r559, %r549, %r549, 30;
	shf.l.wrap.b32 	%r1093, %r557, %r557, 5;
	// begin inline asm
	lop3.b32 %r552, %r553, %r559, %r555, 150;
	// end inline asm
	xor.b32  	%r1094, %r985, %r969;
	xor.b32  	%r1095, %r1094, %r1033;
	xor.b32  	%r1096, %r1095, %r1073;
	shf.l.wrap.b32 	%r1097, %r1096, %r1096, 1;
	add.s32 	%r1098, %r552, %r1097;
	add.s32 	%r1099, %r1098, %r551;
	add.s32 	%r1100, %r1099, %r1093;
	add.s32 	%r561, %r1100, -899497514;
	shf.l.wrap.b32 	%r563, %r553, %r553, 30;
	shf.l.wrap.b32 	%r1101, %r561, %r561, 5;
	// begin inline asm
	lop3.b32 %r556, %r557, %r563, %r559, 150;
	// end inline asm
	xor.b32  	%r1102, %r993, %r977;
	xor.b32  	%r1103, %r1102, %r1041;
	xor.b32  	%r1104, %r1103, %r1081;
	shf.l.wrap.b32 	%r1105, %r1104, %r1104, 1;
	add.s32 	%r1106, %r556, %r1105;
	add.s32 	%r1107, %r1106, %r555;
	add.s32 	%r1108, %r1107, %r1101;
	add.s32 	%r565, %r1108, -899497514;
	shf.l.wrap.b32 	%r567, %r557, %r557, 30;
	shf.l.wrap.b32 	%r1109, %r565, %r565, 5;
	// begin inline asm
	lop3.b32 %r560, %r561, %r567, %r563, 150;
	// end inline asm
	xor.b32  	%r1110, %r1001, %r985;
	xor.b32  	%r1111, %r1110, %r1049;
	xor.b32  	%r1112, %r1111, %r1089;
	shf.l.wrap.b32 	%r1113, %r1112, %r1112, 1;
	add.s32 	%r1114, %r560, %r1113;
	add.s32 	%r1115, %r1114, %r559;
	add.s32 	%r1116, %r1115, %r1109;
	add.s32 	%r569, %r1116, -899497514;
	shf.l.wrap.b32 	%r571, %r561, %r561, 30;
	shf.l.wrap.b32 	%r1117, %r569, %r569, 5;
	// begin inline asm
	lop3.b32 %r564, %r565, %r571, %r567, 150;
	// end inline asm
	xor.b32  	%r1118, %r1009, %r993;
	xor.b32  	%r1119, %r1118, %r1057;
	xor.b32  	%r1120, %r1119, %r1097;
	shf.l.wrap.b32 	%r1121, %r1120, %r1120, 1;
	add.s32 	%r1122, %r564, %r1121;
	add.s32 	%r1123, %r1122, %r563;
	add.s32 	%r1124, %r1123, %r1117;
	add.s32 	%r573, %r1124, -899497514;
	shf.l.wrap.b32 	%r575, %r565, %r565, 30;
	shf.l.wrap.b32 	%r1125, %r573, %r573, 5;
	// begin inline asm
	lop3.b32 %r568, %r569, %r575, %r571, 150;
	// end inline asm
	xor.b32  	%r1126, %r1017, %r1001;
	xor.b32  	%r1127, %r1126, %r1065;
	xor.b32  	%r1128, %r1127, %r1105;
	shf.l.wrap.b32 	%r1129, %r1128, %r1128, 1;
	add.s32 	%r1130, %r568, %r1129;
	add.s32 	%r1131, %r1130, %r567;
	add.s32 	%r1132, %r1131, %r1125;
	add.s32 	%r577, %r1132, -899497514;
	shf.l.wrap.b32 	%r579, %r569, %r569, 30;
	shf.l.wrap.b32 	%r1133, %r577, %r577, 5;
	// begin inline asm
	lop3.b32 %r572, %r573, %r579, %r575, 150;
	// end inline asm
	xor.b32  	%r1134, %r1025, %r1009;
	xor.b32  	%r1135, %r1134, %r1073;
	xor.b32  	%r1136, %r1135, %r1113;
	shf.l.wrap.b32 	%r1137, %r1136, %r1136, 1;
	add.s32 	%r1138, %r572, %r1137;
	add.s32 	%r1139, %r1138, %r571;
	add.s32 	%r1140, %r1139, %r1133;
	add.s32 	%r581, %r1140, -899497514;
	shf.l.wrap.b32 	%r583, %r573, %r573, 30;
	shf.l.wrap.b32 	%r1141, %r581, %r581, 5;
	// begin inline asm
	lop3.b32 %r576, %r577, %r583, %r579, 150;
	// end inline asm
	xor.b32  	%r1142, %r1033, %r1017;
	xor.b32  	%r1143, %r1142, %r1081;
	xor.b32  	%r1144, %r1143, %r1121;
	shf.l.wrap.b32 	%r1145, %r1144, %r1144, 1;
	add.s32 	%r1146, %r576, %r1145;
	add.s32 	%r1147, %r1146, %r575;
	add.s32 	%r1148, %r1147, %r1141;
	add.s32 	%r585, %r1148, -899497514;
	shf.l.wrap.b32 	%r587, %r577, %r577, 30;
	shf.l.wrap.b32 	%r1149, %r585, %r585, 5;
	// begin inline asm
	lop3.b32 %r580, %r581, %r587, %r583, 150;
	// end inline asm
	xor.b32  	%r1150, %r1041, %r1025;
	xor.b32  	%r1151, %r1150, %r1089;
	xor.b32  	%r1152, %r1151, %r1129;
	shf.l.wrap.b32 	%r1153, %r1152, %r1152, 1;
	add.s32 	%r1154, %r580, %r1153;
	add.s32 	%r1155, %r1154, %r579;
	add.s32 	%r1156, %r1155, %r1149;
	add.s32 	%r589, %r1156, -899497514;
	shf.l.wrap.b32 	%r591, %r581, %r581, 30;
	shf.l.wrap.b32 	%r1157, %r589, %r589, 5;
	// begin inline asm
	lop3.b32 %r584, %r585, %r591, %r587, 150;
	// end inline asm
	xor.b32  	%r1158, %r1049, %r1033;
	xor.b32  	%r1159, %r1158, %r1097;
	xor.b32  	%r1160, %r1159, %r1137;
	shf.l.wrap.b32 	%r1161, %r1160, %r1160, 1;
	add.s32 	%r1162, %r584, %r1161;
	add.s32 	%r1163, %r1162, %r583;
	add.s32 	%r1164, %r1163, %r1157;
	add.s32 	%r593, %r1164, -899497514;
	shf.l.wrap.b32 	%r595, %r585, %r585, 30;
	shf.l.wrap.b32 	%r1165, %r593, %r593, 5;
	// begin inline asm
	lop3.b32 %r588, %r589, %r595, %r591, 150;
	// end inline asm
	xor.b32  	%r1166, %r1057, %r1041;
	xor.b32  	%r1167, %r1166, %r1105;
	xor.b32  	%r1168, %r1167, %r1145;
	shf.l.wrap.b32 	%r1169, %r1168, %r1168, 1;
	add.s32 	%r1170, %r588, %r1169;
	add.s32 	%r1171, %r1170, %r587;
	add.s32 	%r1172, %r1171, %r1165;
	add.s32 	%r597, %r1172, -899497514;
	shf.l.wrap.b32 	%r599, %r589, %r589, 30;
	shf.l.wrap.b32 	%r1173, %r597, %r597, 5;
	// begin inline asm
	lop3.b32 %r592, %r593, %r599, %r595, 150;
	// end inline asm
	xor.b32  	%r1174, %r1065, %r1049;
	xor.b32  	%r1175, %r1174, %r1113;
	xor.b32  	%r1176, %r1175, %r1153;
	shf.l.wrap.b32 	%r1177, %r1176, %r1176, 1;
	add.s32 	%r1178, %r592, %r1177;
	add.s32 	%r1179, %r1178, %r591;
	add.s32 	%r1180, %r1179, %r1173;
	add.s32 	%r601, %r1180, -899497514;
	shf.l.wrap.b32 	%r603, %r593, %r593, 30;
	shf.l.wrap.b32 	%r1181, %r601, %r601, 5;
	// begin inline asm
	lop3.b32 %r596, %r597, %r603, %r599, 150;
	// end inline asm
	xor.b32  	%r1182, %r1073, %r1057;
	xor.b32  	%r1183, %r1182, %r1121;
	xor.b32  	%r1184, %r1183, %r1161;
	shf.l.wrap.b32 	%r1185, %r1184, %r1184, 1;
	add.s32 	%r1186, %r596, %r1185;
	add.s32 	%r1187, %r1186, %r595;
	add.s32 	%r1188, %r1187, %r1181;
	add.s32 	%r605, %r1188, -899497514;
	shf.l.wrap.b32 	%r607, %r597, %r597, 30;
	shf.l.wrap.b32 	%r1189, %r605, %r605, 5;
	// begin inline asm
	lop3.b32 %r600, %r601, %r607, %r603, 150;
	// end inline asm
	xor.b32  	%r1190, %r1081, %r1065;
	xor.b32  	%r1191, %r1190, %r1129;
	xor.b32  	%r1192, %r1191, %r1169;
	shf.l.wrap.b32 	%r1193, %r1192, %r1192, 1;
	add.s32 	%r1194, %r600, %r1193;
	add.s32 	%r1195, %r1194, %r599;
	add.s32 	%r1196, %r1195, %r1189;
	add.s32 	%r609, %r1196, -899497514;
	shf.l.wrap.b32 	%r611, %r601, %r601, 30;
	shf.l.wrap.b32 	%r1197, %r609, %r609, 5;
	// begin inline asm
	lop3.b32 %r604, %r605, %r611, %r607, 150;
	// end inline asm
	xor.b32  	%r1198, %r1089, %r1073;
	xor.b32  	%r1199, %r1198, %r1137;
	xor.b32  	%r1200, %r1199, %r1177;
	shf.l.wrap.b32 	%r1201, %r1200, %r1200, 1;
	add.s32 	%r1202, %r604, %r1201;
	add.s32 	%r1203, %r1202, %r603;
	add.s32 	%r1204, %r1203, %r1197;
	add.s32 	%r613, %r1204, -899497514;
	shf.l.wrap.b32 	%r615, %r605, %r605, 30;
	shf.l.wrap.b32 	%r1205, %r613, %r613, 5;
	// begin inline asm
	lop3.b32 %r608, %r609, %r615, %r611, 150;
	// end inline asm
	xor.b32  	%r1206, %r1097, %r1081;
	xor.b32  	%r1207, %r1206, %r1145;
	xor.b32  	%r1208, %r1207, %r1185;
	shf.l.wrap.b32 	%r1209, %r1208, %r1208, 1;
	add.s32 	%r1210, %r608, %r1209;
	add.s32 	%r1211, %r1210, %r607;
	add.s32 	%r1212, %r1211, %r1205;
	add.s32 	%r617, %r1212, -899497514;
	shf.l.wrap.b32 	%r619, %r609, %r609, 30;
	shf.l.wrap.b32 	%r1213, %r617, %r617, 5;
	// begin inline asm
	lop3.b32 %r612, %r613, %r619, %r615, 150;
	// end inline asm
	xor.b32  	%r1214, %r1105, %r1089;
	xor.b32  	%r1215, %r1214, %r1153;
	xor.b32  	%r1216, %r1215, %r1193;
	shf.l.wrap.b32 	%r1217, %r1216, %r1216, 1;
	add.s32 	%r1218, %r612, %r1217;
	add.s32 	%r1219, %r1218, %r611;
	add.s32 	%r1220, %r1219, %r1213;
	add.s32 	%r1221, %r1220, -899497514;
	shf.l.wrap.b32 	%r618, %r613, %r613, 30;
	shf.l.wrap.b32 	%r1222, %r1221, %r1221, 5;
	// begin inline asm
	lop3.b32 %r616, %r617, %r618, %r619, 150;
	// end inline asm
	xor.b32  	%r1223, %r1113, %r1097;
	xor.b32  	%r1224, %r1223, %r1161;
	xor.b32  	%r1225, %r1224, %r1201;
	shf.l.wrap.b32 	%r1226, %r1225, %r1225, 1;
	shf.l.wrap.b32 	%r1227, %r617, %r617, 30;
	add.s32 	%r1228, %r616, %r1226;
	add.s32 	%r1229, %r1228, %r615;
	add.s32 	%r1230, %r1229, %r1222;
	add.s32 	%r1231, %r1230, 833086679;
	add.s32 	%r1232, %r1220, -1171231393;
	add.s32 	%r1233, %r1227, -1732584194;
	add.s32 	%r1234, %r618, 271733878;
	add.s32 	%r1235, %r619, -1009589776;
	shf.l.wrap.b32 	%r1236, %r1231, %r1231, 16;
	shl.b32 	%r1237, %r1236, 8;
	and.b32  	%r1238, %r1237, -16711936;
	shr.u32 	%r1239, %r1236, 8;
	and.b32  	%r1240, %r1239, 16711935;
	or.b32  	%r10, %r1238, %r1240;
	shf.l.wrap.b32 	%r1241, %r1232, %r1232, 16;
	shl.b32 	%r1242, %r1241, 8;
	and.b32  	%r1243, %r1242, -16711936;
	shr.u32 	%r1244, %r1241, 8;
	and.b32  	%r1245, %r1244, 16711935;
	or.b32  	%r11, %r1243, %r1245;
	shf.l.wrap.b32 	%r1246, %r1233, %r1233, 16;
	shl.b32 	%r1247, %r1246, 8;
	and.b32  	%r1248, %r1247, -16711936;
	shr.u32 	%r1249, %r1246, 8;
	and.b32  	%r1250, %r1249, 16711935;
	or.b32  	%r12, %r1248, %r1250;
	shf.l.wrap.b32 	%r1251, %r1234, %r1234, 16;
	shl.b32 	%r1252, %r1251, 8;
	and.b32  	%r1253, %r1252, -16711936;
	shr.u32 	%r1254, %r1251, 8;
	and.b32  	%r1255, %r1254, 16711935;
	or.b32  	%r13, %r1253, %r1255;
	shf.l.wrap.b32 	%r14, %r1235, %r1235, 16;
	and.b32  	%r1256, %r13, 32736;
	shr.u32 	%r1257, %r1256, 5;
	mul.wide.u32 	%rd29, %r1257, 4;
	mov.u64 	%rd30, sha1_$_s_bitmaps;
	add.s64 	%rd31, %rd30, %rd29;
	and.b32  	%r1258, %r13, 31;
	ld.shared.u32 	%r1259, [%rd31];
	shr.u32 	%r1260, %r1259, %r1258;
	and.b32  	%r1261, %r12, 32736;
	shr.u32 	%r1262, %r1261, 5;
	or.b32  	%r1263, %r1262, 1024;
	mul.wide.u32 	%rd32, %r1263, 4;
	add.s64 	%rd33, %rd30, %rd32;
	and.b32  	%r1264, %r12, 31;
	ld.shared.u32 	%r1265, [%rd33];
	shr.u32 	%r1266, %r1265, %r1264;
	and.b32  	%r1267, %r11, 32736;
	shr.u32 	%r1268, %r1267, 5;
	or.b32  	%r1269, %r1268, 2048;
	mul.wide.u32 	%rd34, %r1269, 4;
	add.s64 	%rd35, %rd30, %rd34;
	and.b32  	%r1270, %r11, 31;
	ld.shared.u32 	%r1271, [%rd35];
	shr.u32 	%r1272, %r1271, %r1270;
	and.b32  	%r1273, %r10, 32736;
	shr.u32 	%r1274, %r1273, 5;
	or.b32  	%r1275, %r1274, 3072;
	mul.wide.u32 	%rd36, %r1275, 4;
	add.s64 	%rd37, %rd30, %rd36;
	and.b32  	%r1276, %r10, 31;
	ld.shared.u32 	%r1277, [%rd37];
	shr.u32 	%r1278, %r1277, %r1276;
	and.b32  	%r1279, %r1260, 1;
	setp.eq.b32 	%p22, %r1279, 1;
	and.b32  	%r1280, %r1266, 1;
	setp.eq.b32 	%p23, %r1280, 1;
	and.pred  	%p24, %p22, %p23;
	and.b32  	%r1281, %r1272, 1;
	setp.eq.b32 	%p25, %r1281, 1;
	and.pred  	%p26, %p24, %p25;
	and.b32  	%r1282, %r1278, 1;
	setp.eq.b32 	%p27, %r1282, 1;
	and.pred  	%p28, %p26, %p27;
	mov.pred 	%p29, 0;
	xor.pred  	%p30, %p28, %p29;
	not.pred 	%p31, %p30;
	@%p31 bra 	$L__BB0_31;

	ld.param.u64 	%rd96, [sha1_param_7];
	ld.param.u64 	%rd95, [sha1_param_6];
	shr.u32 	%r1283, %r14, 8;
	and.b32  	%r1284, %r1283, 16711935;
	shl.b32 	%r1285, %r14, 8;
	and.b32  	%r1286, %r1285, -16711936;
	or.b32  	%r1287, %r1286, %r1284;
	cvt.u64.u32 	%rd38, %r13;
	cvt.u64.u32 	%rd39, %r12;
	bfi.b64 	%rd40, %rd38, %rd39, 32, 32;
	cvt.u64.u32 	%rd41, %r11;
	cvt.u64.u32 	%rd42, %r10;
	bfi.b64 	%rd43, %rd41, %rd42, 32, 32;
	mul.wide.u32 	%rd44, %r1287, -1356305461;
	shr.u64 	%rd45, %rd44, 32;
	cvt.u32.u64 	%r1288, %rd45;
	sub.s32 	%r1289, %r1287, %r1288;
	shr.u32 	%r1290, %r1289, 1;
	add.s32 	%r1291, %r1290, %r1288;
	shr.u32 	%r1292, %r1291, 4;
	mul.lo.s32 	%r1293, %r1292, 19;
	sub.s32 	%r1294, %r1287, %r1293;
	shl.b32 	%r1295, %r1294, 2;
	cvt.u64.u32 	%rd46, %r1295;
	mul.hi.u64 	%rd47, %rd40, -2912643801112034465;
	shr.u64 	%rd48, %rd47, 4;
	mul.lo.s64 	%rd49, %rd48, 19;
	sub.s64 	%rd50, %rd40, %rd49;
	mul.lo.s64 	%rd51, %rd50, 17;
	add.s64 	%rd52, %rd51, %rd46;
	mul.hi.u64 	%rd53, %rd43, -2912643801112034465;
	shr.u64 	%rd54, %rd53, 4;
	mul.lo.s64 	%rd55, %rd54, 19;
	sub.s64 	%rd56, %rd43, %rd55;
	add.s64 	%rd57, %rd52, %rd56;
	cvt.u32.u64 	%r1296, %rd57;
	mul.wide.u32 	%rd58, %r1296, -1356305461;
	shr.u64 	%rd59, %rd58, 32;
	cvt.u32.u64 	%r1297, %rd59;
	sub.s32 	%r1298, %r1296, %r1297;
	shr.u32 	%r1299, %r1298, 1;
	add.s32 	%r1300, %r1299, %r1297;
	shr.u32 	%r1301, %r1300, 4;
	mul.lo.s32 	%r1302, %r1301, 19;
	sub.s32 	%r1303, %r1296, %r1302;
	mul.wide.u32 	%rd60, %r1303, 4;
	add.s64 	%rd61, %rd95, %rd60;
	ld.global.u32 	%rd62, [%rd61];
	add.s64 	%rd63, %rd43, %rd62;
	mul.wide.u32 	%rd64, %r1287, 1374389535;
	shr.u64 	%rd65, %rd64, 35;
	cvt.u32.u64 	%r1304, %rd65;
	mul.lo.s32 	%r1305, %r1304, 25;
	sub.s32 	%r1306, %r1287, %r1305;
	mul.lo.s32 	%r1307, %r1306, 6;
	cvt.u64.u32 	%rd66, %r1307;
	mul.hi.u64 	%rd67, %rd40, 5165088340638674453;
	sub.s64 	%rd68, %rd40, %rd67;
	shr.u64 	%rd69, %rd68, 1;
	add.s64 	%rd70, %rd69, %rd67;
	shr.u64 	%rd71, %rd70, 4;
	mul.lo.s64 	%rd72, %rd71, 25;
	sub.s64 	%rd73, %rd40, %rd72;
	shl.b64 	%rd74, %rd73, 4;
	add.s64 	%rd75, %rd74, %rd66;
	mul.hi.u64 	%rd76, %rd63, 5165088340638674453;
	sub.s64 	%rd77, %rd63, %rd76;
	shr.u64 	%rd78, %rd77, 1;
	add.s64 	%rd79, %rd78, %rd76;
	shr.u64 	%rd80, %rd79, 4;
	mul.lo.s64 	%rd81, %rd80, 25;
	sub.s64 	%rd82, %rd63, %rd81;
	add.s64 	%rd83, %rd75, %rd82;
	cvt.u32.u64 	%r1308, %rd83;
	mul.wide.u32 	%rd84, %r1308, 1374389535;
	shr.u64 	%rd85, %rd84, 35;
	cvt.u32.u64 	%r1309, %rd85;
	mul.lo.s32 	%r1310, %r1309, 25;
	sub.s32 	%r15, %r1308, %r1310;
	mul.wide.u32 	%rd86, %r15, 4;
	add.s64 	%rd8, %rd96, %rd86;
	ld.global.u32 	%r1311, [%rd8];
	setp.ne.s32 	%p32, %r1311, %r10;
	@%p32 bra 	$L__BB0_31;

	ld.global.u32 	%r1312, [%rd8+100];
	setp.ne.s32 	%p33, %r1312, %r11;
	@%p33 bra 	$L__BB0_31;

	ld.param.u64 	%rd97, [sha1_param_10];
	mov.u32 	%r1313, 1;
	shl.b32 	%r1314, %r1313, %r15;
	atom.global.or.b32 	%r1315, [%rd97], %r1314;
	and.b32  	%r1316, %r1315, %r1314;
	setp.ne.s32 	%p34, %r1316, 0;
	@%p34 bra 	$L__BB0_31;

	mov.b32 	%r1329, %envreg3;
	mov.u32 	%r1328, %tid.x;
	add.s32 	%r1327, %r1328, %r1329;
	mov.u32 	%r1326, %ctaid.x;
	mov.u32 	%r1325, %ntid.x;
	mad.lo.s32 	%r1324, %r1325, %r1326, %r1327;
	ld.param.u64 	%rd99, [sha1_param_8];
	ld.param.u64 	%rd98, [sha1_param_9];
	atom.global.add.u32 	%r1317, [%rd98], 1;
	mul.lo.s32 	%r1318, %r1317, 3;
	add.s32 	%r1319, %r1318, 1;
	mul.wide.u32 	%rd87, %r1319, 4;
	add.s64 	%rd88, %rd98, %rd87;
	st.volatile.global.u32 	[%rd88], %r1324;
	add.s32 	%r1320, %r1318, 2;
	mul.wide.u32 	%rd89, %r1320, 4;
	add.s64 	%rd90, %rd98, %rd89;
	mov.u32 	%r1321, 0;
	st.volatile.global.u32 	[%rd90], %r1321;
	add.s32 	%r1322, %r1318, 3;
	mul.wide.u32 	%rd91, %r1322, 4;
	add.s64 	%rd92, %rd98, %rd91;
	st.volatile.global.u32 	[%rd92], %r15;
	shl.b32 	%r1323, %r1317, 1;
	mul.wide.u32 	%rd93, %r1323, 4;
	add.s64 	%rd94, %rd99, %rd93;
	st.global.u32 	[%rd94], %r12;
	st.global.u32 	[%rd94+4], %r13;

$L__BB0_31:
	ret;

}

  