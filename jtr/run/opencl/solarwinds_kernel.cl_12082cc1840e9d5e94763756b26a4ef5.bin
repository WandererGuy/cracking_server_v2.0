//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	pbkdf2_init
.const .align 4 .b8 h[32] = {103, 230, 9, 106, 133, 174, 103, 187, 114, 243, 110, 60, 58, 245, 79, 165, 127, 82, 14, 81, 140, 104, 5, 155, 171, 217, 131, 31, 25, 205, 224, 91};
.const .align 4 .b8 k[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry pbkdf2_init(
	.param .u64 .ptr .global .align 4 pbkdf2_init_param_0,
	.param .u64 .ptr .global .align 4 pbkdf2_init_param_1,
	.param .u64 .ptr .global .align 4 pbkdf2_init_param_2
)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<12>;
	.reg .b32 	%r<5637>;
	.reg .b64 	%rd<49>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd5, [pbkdf2_init_param_0];
	ld.param.u64 	%rd4, [pbkdf2_init_param_1];
	ld.param.u64 	%rd6, [pbkdf2_init_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r694, %ctaid.x;
	mov.u32 	%r695, %ntid.x;
	mov.u32 	%r696, %tid.x;
	mov.b32 	%r697, %envreg3;
	add.s32 	%r698, %r696, %r697;
	mad.lo.s32 	%r699, %r695, %r694, %r698;
	mul.wide.s32 	%rd8, %r699, 16;
	shl.b64 	%rd9, %rd8, 2;
	and.b64  	%rd10, %rd9, 17179869120;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.u32 	%r700, [%rd11];
	xor.b32  	%r701, %r700, 909522486;
	ld.global.u32 	%r702, [%rd11+4];
	xor.b32  	%r703, %r702, 909522486;
	ld.global.u32 	%r704, [%rd11+8];
	xor.b32  	%r705, %r704, 909522486;
	ld.global.u32 	%r706, [%rd11+12];
	xor.b32  	%r707, %r706, 909522486;
	ld.global.u32 	%r708, [%rd11+16];
	xor.b32  	%r709, %r708, 909522486;
	ld.global.u32 	%r710, [%rd11+20];
	xor.b32  	%r711, %r710, 909522486;
	ld.global.u32 	%r712, [%rd11+24];
	xor.b32  	%r713, %r712, 909522486;
	ld.global.u32 	%r714, [%rd11+28];
	xor.b32  	%r715, %r714, 909522486;
	ld.global.u32 	%r716, [%rd11+32];
	xor.b32  	%r717, %r716, 909522486;
	ld.global.u32 	%r718, [%rd11+36];
	xor.b32  	%r719, %r718, 909522486;
	ld.global.u32 	%r720, [%rd11+40];
	xor.b32  	%r721, %r720, 909522486;
	ld.global.u32 	%r722, [%rd11+44];
	xor.b32  	%r723, %r722, 909522486;
	ld.global.u32 	%r724, [%rd11+48];
	xor.b32  	%r725, %r724, 909522486;
	ld.global.u32 	%r726, [%rd11+52];
	xor.b32  	%r727, %r726, 909522486;
	ld.global.u32 	%r728, [%rd11+56];
	xor.b32  	%r729, %r728, 909522486;
	ld.global.u32 	%r730, [%rd11+60];
	xor.b32  	%r731, %r730, 909522486;
	mov.u32 	%r67, 1732584193;
	shf.l.wrap.b32 	%r732, %r67, %r67, 5;
	mov.u32 	%r63, -271733879;
	mov.u32 	%r69, -1732584194;
	mov.u32 	%r65, 271733878;
	// begin inline asm
	lop3.b32 %r62, %r63, %r69, %r65, 202;
	// end inline asm
	add.s32 	%r733, %r732, %r62;
	add.s32 	%r734, %r733, 1518500249;
	add.s32 	%r735, %r701, %r734;
	add.s32 	%r71, %r735, -1009589776;
	shf.l.wrap.b32 	%r736, %r71, %r71, 5;
	shf.l.wrap.b32 	%r385, %r63, %r63, 30;
	// begin inline asm
	lop3.b32 %r66, %r67, %r385, %r69, 202;
	// end inline asm
	add.s32 	%r737, %r66, 1790234127;
	add.s32 	%r738, %r737, %r703;
	add.s32 	%r75, %r738, %r736;
	shf.l.wrap.b32 	%r739, %r75, %r75, 5;
	shf.l.wrap.b32 	%r389, %r67, %r67, 30;
	// begin inline asm
	lop3.b32 %r70, %r71, %r389, %r385, 202;
	// end inline asm
	add.s32 	%r740, %r70, %r705;
	add.s32 	%r741, %r740, %r739;
	add.s32 	%r79, %r741, -214083945;
	shf.l.wrap.b32 	%r81, %r71, %r71, 30;
	shf.l.wrap.b32 	%r742, %r79, %r79, 5;
	// begin inline asm
	lop3.b32 %r74, %r75, %r81, %r389, 202;
	// end inline asm
	add.s32 	%r743, %r385, 1518500249;
	add.s32 	%r744, %r743, %r74;
	add.s32 	%r745, %r744, %r707;
	add.s32 	%r83, %r745, %r742;
	shf.l.wrap.b32 	%r85, %r75, %r75, 30;
	shf.l.wrap.b32 	%r746, %r83, %r83, 5;
	// begin inline asm
	lop3.b32 %r78, %r79, %r85, %r81, 202;
	// end inline asm
	add.s32 	%r747, %r389, 1518500249;
	add.s32 	%r748, %r747, %r78;
	add.s32 	%r749, %r748, %r709;
	add.s32 	%r87, %r749, %r746;
	shf.l.wrap.b32 	%r89, %r79, %r79, 30;
	shf.l.wrap.b32 	%r750, %r87, %r87, 5;
	// begin inline asm
	lop3.b32 %r82, %r83, %r89, %r85, 202;
	// end inline asm
	add.s32 	%r751, %r81, %r82;
	add.s32 	%r752, %r751, %r711;
	add.s32 	%r753, %r752, %r750;
	add.s32 	%r91, %r753, 1518500249;
	shf.l.wrap.b32 	%r93, %r83, %r83, 30;
	shf.l.wrap.b32 	%r754, %r91, %r91, 5;
	// begin inline asm
	lop3.b32 %r86, %r87, %r93, %r89, 202;
	// end inline asm
	add.s32 	%r755, %r85, %r86;
	add.s32 	%r756, %r755, %r713;
	add.s32 	%r757, %r756, %r754;
	add.s32 	%r95, %r757, 1518500249;
	shf.l.wrap.b32 	%r97, %r87, %r87, 30;
	shf.l.wrap.b32 	%r758, %r95, %r95, 5;
	// begin inline asm
	lop3.b32 %r90, %r91, %r97, %r93, 202;
	// end inline asm
	add.s32 	%r759, %r90, %r89;
	add.s32 	%r760, %r759, %r715;
	add.s32 	%r761, %r760, %r758;
	add.s32 	%r99, %r761, 1518500249;
	shf.l.wrap.b32 	%r101, %r91, %r91, 30;
	shf.l.wrap.b32 	%r762, %r99, %r99, 5;
	// begin inline asm
	lop3.b32 %r94, %r95, %r101, %r97, 202;
	// end inline asm
	add.s32 	%r763, %r94, %r717;
	add.s32 	%r764, %r763, %r93;
	add.s32 	%r765, %r764, %r762;
	add.s32 	%r103, %r765, 1518500249;
	shf.l.wrap.b32 	%r105, %r95, %r95, 30;
	shf.l.wrap.b32 	%r766, %r103, %r103, 5;
	// begin inline asm
	lop3.b32 %r98, %r99, %r105, %r101, 202;
	// end inline asm
	add.s32 	%r767, %r98, %r719;
	add.s32 	%r768, %r767, %r97;
	add.s32 	%r769, %r768, %r766;
	add.s32 	%r107, %r769, 1518500249;
	shf.l.wrap.b32 	%r109, %r99, %r99, 30;
	shf.l.wrap.b32 	%r770, %r107, %r107, 5;
	// begin inline asm
	lop3.b32 %r102, %r103, %r109, %r105, 202;
	// end inline asm
	add.s32 	%r771, %r102, %r721;
	add.s32 	%r772, %r771, %r101;
	add.s32 	%r773, %r772, %r770;
	add.s32 	%r111, %r773, 1518500249;
	shf.l.wrap.b32 	%r113, %r103, %r103, 30;
	shf.l.wrap.b32 	%r774, %r111, %r111, 5;
	// begin inline asm
	lop3.b32 %r106, %r107, %r113, %r109, 202;
	// end inline asm
	add.s32 	%r775, %r106, %r723;
	add.s32 	%r776, %r775, %r105;
	add.s32 	%r777, %r776, %r774;
	add.s32 	%r115, %r777, 1518500249;
	shf.l.wrap.b32 	%r117, %r107, %r107, 30;
	shf.l.wrap.b32 	%r778, %r115, %r115, 5;
	// begin inline asm
	lop3.b32 %r110, %r111, %r117, %r113, 202;
	// end inline asm
	add.s32 	%r779, %r110, %r725;
	add.s32 	%r780, %r779, %r109;
	add.s32 	%r781, %r780, %r778;
	add.s32 	%r119, %r781, 1518500249;
	shf.l.wrap.b32 	%r121, %r111, %r111, 30;
	shf.l.wrap.b32 	%r782, %r119, %r119, 5;
	// begin inline asm
	lop3.b32 %r114, %r115, %r121, %r117, 202;
	// end inline asm
	add.s32 	%r783, %r114, %r727;
	add.s32 	%r784, %r783, %r113;
	add.s32 	%r785, %r784, %r782;
	add.s32 	%r123, %r785, 1518500249;
	shf.l.wrap.b32 	%r125, %r115, %r115, 30;
	shf.l.wrap.b32 	%r786, %r123, %r123, 5;
	// begin inline asm
	lop3.b32 %r118, %r119, %r125, %r121, 202;
	// end inline asm
	add.s32 	%r787, %r118, %r729;
	add.s32 	%r788, %r787, %r117;
	add.s32 	%r789, %r788, %r786;
	add.s32 	%r127, %r789, 1518500249;
	shf.l.wrap.b32 	%r129, %r119, %r119, 30;
	shf.l.wrap.b32 	%r790, %r127, %r127, 5;
	// begin inline asm
	lop3.b32 %r122, %r123, %r129, %r125, 202;
	// end inline asm
	add.s32 	%r791, %r122, %r731;
	add.s32 	%r792, %r791, %r121;
	add.s32 	%r793, %r792, %r790;
	add.s32 	%r131, %r793, 1518500249;
	shf.l.wrap.b32 	%r133, %r123, %r123, 30;
	shf.l.wrap.b32 	%r794, %r131, %r131, 5;
	// begin inline asm
	lop3.b32 %r126, %r127, %r133, %r129, 202;
	// end inline asm
	xor.b32  	%r795, %r716, %r726;
	xor.b32  	%r796, %r795, %r705;
	xor.b32  	%r797, %r796, %r701;
	shf.l.wrap.b32 	%r798, %r797, %r797, 1;
	add.s32 	%r799, %r126, %r798;
	add.s32 	%r800, %r799, %r125;
	add.s32 	%r801, %r800, %r794;
	add.s32 	%r135, %r801, 1518500249;
	shf.l.wrap.b32 	%r137, %r127, %r127, 30;
	shf.l.wrap.b32 	%r802, %r135, %r135, 5;
	// begin inline asm
	lop3.b32 %r130, %r131, %r137, %r133, 202;
	// end inline asm
	xor.b32  	%r803, %r718, %r728;
	xor.b32  	%r804, %r803, %r707;
	xor.b32  	%r805, %r804, %r703;
	shf.l.wrap.b32 	%r806, %r805, %r805, 1;
	add.s32 	%r807, %r130, %r806;
	add.s32 	%r808, %r807, %r129;
	add.s32 	%r809, %r808, %r802;
	add.s32 	%r139, %r809, 1518500249;
	shf.l.wrap.b32 	%r141, %r131, %r131, 30;
	shf.l.wrap.b32 	%r810, %r139, %r139, 5;
	// begin inline asm
	lop3.b32 %r134, %r135, %r141, %r137, 202;
	// end inline asm
	xor.b32  	%r811, %r720, %r730;
	xor.b32  	%r812, %r811, %r709;
	xor.b32  	%r813, %r812, %r705;
	shf.l.wrap.b32 	%r814, %r813, %r813, 1;
	add.s32 	%r815, %r134, %r814;
	add.s32 	%r816, %r815, %r133;
	add.s32 	%r817, %r816, %r810;
	add.s32 	%r143, %r817, 1518500249;
	shf.l.wrap.b32 	%r145, %r135, %r135, 30;
	shf.l.wrap.b32 	%r818, %r143, %r143, 5;
	// begin inline asm
	lop3.b32 %r138, %r139, %r145, %r141, 202;
	// end inline asm
	xor.b32  	%r819, %r723, %r798;
	xor.b32  	%r820, %r819, %r711;
	xor.b32  	%r821, %r820, %r707;
	shf.l.wrap.b32 	%r822, %r821, %r821, 1;
	add.s32 	%r823, %r138, %r822;
	add.s32 	%r824, %r823, %r137;
	add.s32 	%r825, %r824, %r818;
	add.s32 	%r147, %r825, 1518500249;
	shf.l.wrap.b32 	%r149, %r139, %r139, 30;
	shf.l.wrap.b32 	%r826, %r147, %r147, 5;
	// begin inline asm
	lop3.b32 %r142, %r143, %r149, %r145, 150;
	// end inline asm
	xor.b32  	%r827, %r725, %r806;
	xor.b32  	%r828, %r827, %r713;
	xor.b32  	%r829, %r828, %r709;
	shf.l.wrap.b32 	%r830, %r829, %r829, 1;
	add.s32 	%r831, %r142, %r830;
	add.s32 	%r832, %r831, %r141;
	add.s32 	%r833, %r832, %r826;
	add.s32 	%r151, %r833, 1859775393;
	shf.l.wrap.b32 	%r153, %r143, %r143, 30;
	shf.l.wrap.b32 	%r834, %r151, %r151, 5;
	// begin inline asm
	lop3.b32 %r146, %r147, %r153, %r149, 150;
	// end inline asm
	xor.b32  	%r835, %r727, %r814;
	xor.b32  	%r836, %r835, %r715;
	xor.b32  	%r837, %r836, %r711;
	shf.l.wrap.b32 	%r838, %r837, %r837, 1;
	add.s32 	%r839, %r146, %r838;
	add.s32 	%r840, %r839, %r145;
	add.s32 	%r841, %r840, %r834;
	add.s32 	%r155, %r841, 1859775393;
	shf.l.wrap.b32 	%r157, %r147, %r147, 30;
	shf.l.wrap.b32 	%r842, %r155, %r155, 5;
	// begin inline asm
	lop3.b32 %r150, %r151, %r157, %r153, 150;
	// end inline asm
	xor.b32  	%r843, %r729, %r822;
	xor.b32  	%r844, %r843, %r717;
	xor.b32  	%r845, %r844, %r713;
	shf.l.wrap.b32 	%r846, %r845, %r845, 1;
	add.s32 	%r847, %r150, %r846;
	add.s32 	%r848, %r847, %r149;
	add.s32 	%r849, %r848, %r842;
	add.s32 	%r159, %r849, 1859775393;
	shf.l.wrap.b32 	%r161, %r151, %r151, 30;
	shf.l.wrap.b32 	%r850, %r159, %r159, 5;
	// begin inline asm
	lop3.b32 %r154, %r155, %r161, %r157, 150;
	// end inline asm
	xor.b32  	%r851, %r731, %r830;
	xor.b32  	%r852, %r851, %r719;
	xor.b32  	%r853, %r852, %r715;
	shf.l.wrap.b32 	%r854, %r853, %r853, 1;
	add.s32 	%r855, %r154, %r854;
	add.s32 	%r856, %r855, %r153;
	add.s32 	%r857, %r856, %r850;
	add.s32 	%r163, %r857, 1859775393;
	shf.l.wrap.b32 	%r165, %r155, %r155, 30;
	shf.l.wrap.b32 	%r858, %r163, %r163, 5;
	// begin inline asm
	lop3.b32 %r158, %r159, %r165, %r161, 150;
	// end inline asm
	xor.b32  	%r859, %r838, %r798;
	xor.b32  	%r860, %r859, %r721;
	xor.b32  	%r861, %r860, %r717;
	shf.l.wrap.b32 	%r862, %r861, %r861, 1;
	add.s32 	%r863, %r158, %r862;
	add.s32 	%r864, %r863, %r157;
	add.s32 	%r865, %r864, %r858;
	add.s32 	%r167, %r865, 1859775393;
	shf.l.wrap.b32 	%r169, %r159, %r159, 30;
	shf.l.wrap.b32 	%r866, %r167, %r167, 5;
	// begin inline asm
	lop3.b32 %r162, %r163, %r169, %r165, 150;
	// end inline asm
	xor.b32  	%r867, %r846, %r806;
	xor.b32  	%r868, %r867, %r723;
	xor.b32  	%r869, %r868, %r719;
	shf.l.wrap.b32 	%r870, %r869, %r869, 1;
	add.s32 	%r871, %r162, %r870;
	add.s32 	%r872, %r871, %r161;
	add.s32 	%r873, %r872, %r866;
	add.s32 	%r171, %r873, 1859775393;
	shf.l.wrap.b32 	%r173, %r163, %r163, 30;
	shf.l.wrap.b32 	%r874, %r171, %r171, 5;
	// begin inline asm
	lop3.b32 %r166, %r167, %r173, %r169, 150;
	// end inline asm
	xor.b32  	%r875, %r854, %r814;
	xor.b32  	%r876, %r875, %r725;
	xor.b32  	%r877, %r876, %r721;
	shf.l.wrap.b32 	%r878, %r877, %r877, 1;
	add.s32 	%r879, %r166, %r878;
	add.s32 	%r880, %r879, %r165;
	add.s32 	%r881, %r880, %r874;
	add.s32 	%r175, %r881, 1859775393;
	shf.l.wrap.b32 	%r177, %r167, %r167, 30;
	shf.l.wrap.b32 	%r882, %r175, %r175, 5;
	// begin inline asm
	lop3.b32 %r170, %r171, %r177, %r173, 150;
	// end inline asm
	xor.b32  	%r883, %r862, %r822;
	xor.b32  	%r884, %r883, %r727;
	xor.b32  	%r885, %r884, %r723;
	shf.l.wrap.b32 	%r886, %r885, %r885, 1;
	add.s32 	%r887, %r170, %r886;
	add.s32 	%r888, %r887, %r169;
	add.s32 	%r889, %r888, %r882;
	add.s32 	%r179, %r889, 1859775393;
	shf.l.wrap.b32 	%r181, %r171, %r171, 30;
	shf.l.wrap.b32 	%r890, %r179, %r179, 5;
	// begin inline asm
	lop3.b32 %r174, %r175, %r181, %r177, 150;
	// end inline asm
	xor.b32  	%r891, %r870, %r830;
	xor.b32  	%r892, %r891, %r729;
	xor.b32  	%r893, %r892, %r725;
	shf.l.wrap.b32 	%r894, %r893, %r893, 1;
	add.s32 	%r895, %r174, %r894;
	add.s32 	%r896, %r895, %r173;
	add.s32 	%r897, %r896, %r890;
	add.s32 	%r183, %r897, 1859775393;
	shf.l.wrap.b32 	%r185, %r175, %r175, 30;
	shf.l.wrap.b32 	%r898, %r183, %r183, 5;
	// begin inline asm
	lop3.b32 %r178, %r179, %r185, %r181, 150;
	// end inline asm
	xor.b32  	%r899, %r878, %r838;
	xor.b32  	%r900, %r899, %r731;
	xor.b32  	%r901, %r900, %r727;
	shf.l.wrap.b32 	%r902, %r901, %r901, 1;
	add.s32 	%r903, %r178, %r902;
	add.s32 	%r904, %r903, %r177;
	add.s32 	%r905, %r904, %r898;
	add.s32 	%r187, %r905, 1859775393;
	shf.l.wrap.b32 	%r189, %r179, %r179, 30;
	shf.l.wrap.b32 	%r906, %r187, %r187, 5;
	// begin inline asm
	lop3.b32 %r182, %r183, %r189, %r185, 150;
	// end inline asm
	xor.b32  	%r907, %r846, %r798;
	xor.b32  	%r908, %r907, %r886;
	xor.b32  	%r909, %r908, %r729;
	shf.l.wrap.b32 	%r910, %r909, %r909, 1;
	add.s32 	%r911, %r182, %r910;
	add.s32 	%r912, %r911, %r181;
	add.s32 	%r913, %r912, %r906;
	add.s32 	%r191, %r913, 1859775393;
	shf.l.wrap.b32 	%r193, %r183, %r183, 30;
	shf.l.wrap.b32 	%r914, %r191, %r191, 5;
	// begin inline asm
	lop3.b32 %r186, %r187, %r193, %r189, 150;
	// end inline asm
	xor.b32  	%r915, %r854, %r806;
	xor.b32  	%r916, %r915, %r894;
	xor.b32  	%r917, %r916, %r731;
	shf.l.wrap.b32 	%r918, %r917, %r917, 1;
	add.s32 	%r919, %r186, %r918;
	add.s32 	%r920, %r919, %r185;
	add.s32 	%r921, %r920, %r914;
	add.s32 	%r195, %r921, 1859775393;
	shf.l.wrap.b32 	%r197, %r187, %r187, 30;
	shf.l.wrap.b32 	%r922, %r195, %r195, 5;
	// begin inline asm
	lop3.b32 %r190, %r191, %r197, %r193, 150;
	// end inline asm
	xor.b32  	%r923, %r814, %r798;
	xor.b32  	%r924, %r923, %r862;
	xor.b32  	%r925, %r924, %r902;
	shf.l.wrap.b32 	%r926, %r925, %r925, 1;
	add.s32 	%r927, %r190, %r926;
	add.s32 	%r928, %r927, %r189;
	add.s32 	%r929, %r928, %r922;
	add.s32 	%r199, %r929, 1859775393;
	shf.l.wrap.b32 	%r201, %r191, %r191, 30;
	shf.l.wrap.b32 	%r930, %r199, %r199, 5;
	// begin inline asm
	lop3.b32 %r194, %r195, %r201, %r197, 150;
	// end inline asm
	xor.b32  	%r931, %r822, %r806;
	xor.b32  	%r932, %r931, %r870;
	xor.b32  	%r933, %r932, %r910;
	shf.l.wrap.b32 	%r934, %r933, %r933, 1;
	add.s32 	%r935, %r194, %r934;
	add.s32 	%r936, %r935, %r193;
	add.s32 	%r937, %r936, %r930;
	add.s32 	%r203, %r937, 1859775393;
	shf.l.wrap.b32 	%r205, %r195, %r195, 30;
	shf.l.wrap.b32 	%r938, %r203, %r203, 5;
	// begin inline asm
	lop3.b32 %r198, %r199, %r205, %r201, 150;
	// end inline asm
	xor.b32  	%r939, %r830, %r814;
	xor.b32  	%r940, %r939, %r878;
	xor.b32  	%r941, %r940, %r918;
	shf.l.wrap.b32 	%r942, %r941, %r941, 1;
	add.s32 	%r943, %r198, %r942;
	add.s32 	%r944, %r943, %r197;
	add.s32 	%r945, %r944, %r938;
	add.s32 	%r207, %r945, 1859775393;
	shf.l.wrap.b32 	%r209, %r199, %r199, 30;
	shf.l.wrap.b32 	%r946, %r207, %r207, 5;
	// begin inline asm
	lop3.b32 %r202, %r203, %r209, %r205, 150;
	// end inline asm
	xor.b32  	%r947, %r838, %r822;
	xor.b32  	%r948, %r947, %r886;
	xor.b32  	%r949, %r948, %r926;
	shf.l.wrap.b32 	%r950, %r949, %r949, 1;
	add.s32 	%r951, %r202, %r950;
	add.s32 	%r952, %r951, %r201;
	add.s32 	%r953, %r952, %r946;
	add.s32 	%r211, %r953, 1859775393;
	shf.l.wrap.b32 	%r213, %r203, %r203, 30;
	shf.l.wrap.b32 	%r954, %r211, %r211, 5;
	// begin inline asm
	lop3.b32 %r206, %r207, %r213, %r209, 150;
	// end inline asm
	xor.b32  	%r955, %r846, %r830;
	xor.b32  	%r956, %r955, %r894;
	xor.b32  	%r957, %r956, %r934;
	shf.l.wrap.b32 	%r958, %r957, %r957, 1;
	add.s32 	%r959, %r206, %r958;
	add.s32 	%r960, %r959, %r205;
	add.s32 	%r961, %r960, %r954;
	add.s32 	%r215, %r961, 1859775393;
	shf.l.wrap.b32 	%r217, %r207, %r207, 30;
	shf.l.wrap.b32 	%r962, %r215, %r215, 5;
	// begin inline asm
	lop3.b32 %r210, %r211, %r217, %r213, 150;
	// end inline asm
	xor.b32  	%r963, %r854, %r838;
	xor.b32  	%r964, %r963, %r902;
	xor.b32  	%r965, %r964, %r942;
	shf.l.wrap.b32 	%r966, %r965, %r965, 1;
	add.s32 	%r967, %r210, %r966;
	add.s32 	%r968, %r967, %r209;
	add.s32 	%r969, %r968, %r962;
	add.s32 	%r219, %r969, 1859775393;
	shf.l.wrap.b32 	%r221, %r211, %r211, 30;
	shf.l.wrap.b32 	%r970, %r219, %r219, 5;
	// begin inline asm
	lop3.b32 %r214, %r215, %r221, %r217, 150;
	// end inline asm
	xor.b32  	%r971, %r862, %r846;
	xor.b32  	%r972, %r971, %r910;
	xor.b32  	%r973, %r972, %r950;
	shf.l.wrap.b32 	%r974, %r973, %r973, 1;
	add.s32 	%r975, %r214, %r974;
	add.s32 	%r976, %r975, %r213;
	add.s32 	%r977, %r976, %r970;
	add.s32 	%r223, %r977, 1859775393;
	shf.l.wrap.b32 	%r225, %r215, %r215, 30;
	shf.l.wrap.b32 	%r978, %r223, %r223, 5;
	// begin inline asm
	lop3.b32 %r218, %r219, %r225, %r221, 150;
	// end inline asm
	xor.b32  	%r979, %r870, %r854;
	xor.b32  	%r980, %r979, %r918;
	xor.b32  	%r981, %r980, %r958;
	shf.l.wrap.b32 	%r982, %r981, %r981, 1;
	add.s32 	%r983, %r218, %r982;
	add.s32 	%r984, %r983, %r217;
	add.s32 	%r985, %r984, %r978;
	add.s32 	%r227, %r985, 1859775393;
	shf.l.wrap.b32 	%r229, %r219, %r219, 30;
	shf.l.wrap.b32 	%r986, %r227, %r227, 5;
	// begin inline asm
	lop3.b32 %r222, %r223, %r229, %r225, 232;
	// end inline asm
	xor.b32  	%r987, %r878, %r862;
	xor.b32  	%r988, %r987, %r926;
	xor.b32  	%r989, %r988, %r966;
	shf.l.wrap.b32 	%r990, %r989, %r989, 1;
	add.s32 	%r991, %r222, %r990;
	add.s32 	%r992, %r991, %r221;
	add.s32 	%r993, %r992, %r986;
	add.s32 	%r231, %r993, -1894007588;
	shf.l.wrap.b32 	%r233, %r223, %r223, 30;
	shf.l.wrap.b32 	%r994, %r231, %r231, 5;
	// begin inline asm
	lop3.b32 %r226, %r227, %r233, %r229, 232;
	// end inline asm
	xor.b32  	%r995, %r886, %r870;
	xor.b32  	%r996, %r995, %r934;
	xor.b32  	%r997, %r996, %r974;
	shf.l.wrap.b32 	%r998, %r997, %r997, 1;
	add.s32 	%r999, %r226, %r998;
	add.s32 	%r1000, %r999, %r225;
	add.s32 	%r1001, %r1000, %r994;
	add.s32 	%r235, %r1001, -1894007588;
	shf.l.wrap.b32 	%r237, %r227, %r227, 30;
	shf.l.wrap.b32 	%r1002, %r235, %r235, 5;
	// begin inline asm
	lop3.b32 %r230, %r231, %r237, %r233, 232;
	// end inline asm
	xor.b32  	%r1003, %r894, %r878;
	xor.b32  	%r1004, %r1003, %r942;
	xor.b32  	%r1005, %r1004, %r982;
	shf.l.wrap.b32 	%r1006, %r1005, %r1005, 1;
	add.s32 	%r1007, %r230, %r1006;
	add.s32 	%r1008, %r1007, %r229;
	add.s32 	%r1009, %r1008, %r1002;
	add.s32 	%r239, %r1009, -1894007588;
	shf.l.wrap.b32 	%r241, %r231, %r231, 30;
	shf.l.wrap.b32 	%r1010, %r239, %r239, 5;
	// begin inline asm
	lop3.b32 %r234, %r235, %r241, %r237, 232;
	// end inline asm
	xor.b32  	%r1011, %r902, %r886;
	xor.b32  	%r1012, %r1011, %r950;
	xor.b32  	%r1013, %r1012, %r990;
	shf.l.wrap.b32 	%r1014, %r1013, %r1013, 1;
	add.s32 	%r1015, %r234, %r1014;
	add.s32 	%r1016, %r1015, %r233;
	add.s32 	%r1017, %r1016, %r1010;
	add.s32 	%r243, %r1017, -1894007588;
	shf.l.wrap.b32 	%r245, %r235, %r235, 30;
	shf.l.wrap.b32 	%r1018, %r243, %r243, 5;
	// begin inline asm
	lop3.b32 %r238, %r239, %r245, %r241, 232;
	// end inline asm
	xor.b32  	%r1019, %r910, %r894;
	xor.b32  	%r1020, %r1019, %r958;
	xor.b32  	%r1021, %r1020, %r998;
	shf.l.wrap.b32 	%r1022, %r1021, %r1021, 1;
	add.s32 	%r1023, %r238, %r1022;
	add.s32 	%r1024, %r1023, %r237;
	add.s32 	%r1025, %r1024, %r1018;
	add.s32 	%r247, %r1025, -1894007588;
	shf.l.wrap.b32 	%r249, %r239, %r239, 30;
	shf.l.wrap.b32 	%r1026, %r247, %r247, 5;
	// begin inline asm
	lop3.b32 %r242, %r243, %r249, %r245, 232;
	// end inline asm
	xor.b32  	%r1027, %r918, %r902;
	xor.b32  	%r1028, %r1027, %r966;
	xor.b32  	%r1029, %r1028, %r1006;
	shf.l.wrap.b32 	%r1030, %r1029, %r1029, 1;
	add.s32 	%r1031, %r242, %r1030;
	add.s32 	%r1032, %r1031, %r241;
	add.s32 	%r1033, %r1032, %r1026;
	add.s32 	%r251, %r1033, -1894007588;
	shf.l.wrap.b32 	%r253, %r243, %r243, 30;
	shf.l.wrap.b32 	%r1034, %r251, %r251, 5;
	// begin inline asm
	lop3.b32 %r246, %r247, %r253, %r249, 232;
	// end inline asm
	xor.b32  	%r1035, %r926, %r910;
	xor.b32  	%r1036, %r1035, %r974;
	xor.b32  	%r1037, %r1036, %r1014;
	shf.l.wrap.b32 	%r1038, %r1037, %r1037, 1;
	add.s32 	%r1039, %r246, %r1038;
	add.s32 	%r1040, %r1039, %r245;
	add.s32 	%r1041, %r1040, %r1034;
	add.s32 	%r255, %r1041, -1894007588;
	shf.l.wrap.b32 	%r257, %r247, %r247, 30;
	shf.l.wrap.b32 	%r1042, %r255, %r255, 5;
	// begin inline asm
	lop3.b32 %r250, %r251, %r257, %r253, 232;
	// end inline asm
	xor.b32  	%r1043, %r934, %r918;
	xor.b32  	%r1044, %r1043, %r982;
	xor.b32  	%r1045, %r1044, %r1022;
	shf.l.wrap.b32 	%r1046, %r1045, %r1045, 1;
	add.s32 	%r1047, %r250, %r1046;
	add.s32 	%r1048, %r1047, %r249;
	add.s32 	%r1049, %r1048, %r1042;
	add.s32 	%r259, %r1049, -1894007588;
	shf.l.wrap.b32 	%r261, %r251, %r251, 30;
	shf.l.wrap.b32 	%r1050, %r259, %r259, 5;
	// begin inline asm
	lop3.b32 %r254, %r255, %r261, %r257, 232;
	// end inline asm
	xor.b32  	%r1051, %r942, %r926;
	xor.b32  	%r1052, %r1051, %r990;
	xor.b32  	%r1053, %r1052, %r1030;
	shf.l.wrap.b32 	%r1054, %r1053, %r1053, 1;
	add.s32 	%r1055, %r254, %r1054;
	add.s32 	%r1056, %r1055, %r253;
	add.s32 	%r1057, %r1056, %r1050;
	add.s32 	%r263, %r1057, -1894007588;
	shf.l.wrap.b32 	%r265, %r255, %r255, 30;
	shf.l.wrap.b32 	%r1058, %r263, %r263, 5;
	// begin inline asm
	lop3.b32 %r258, %r259, %r265, %r261, 232;
	// end inline asm
	xor.b32  	%r1059, %r950, %r934;
	xor.b32  	%r1060, %r1059, %r998;
	xor.b32  	%r1061, %r1060, %r1038;
	shf.l.wrap.b32 	%r1062, %r1061, %r1061, 1;
	add.s32 	%r1063, %r258, %r1062;
	add.s32 	%r1064, %r1063, %r257;
	add.s32 	%r1065, %r1064, %r1058;
	add.s32 	%r267, %r1065, -1894007588;
	shf.l.wrap.b32 	%r269, %r259, %r259, 30;
	shf.l.wrap.b32 	%r1066, %r267, %r267, 5;
	// begin inline asm
	lop3.b32 %r262, %r263, %r269, %r265, 232;
	// end inline asm
	xor.b32  	%r1067, %r958, %r942;
	xor.b32  	%r1068, %r1067, %r1006;
	xor.b32  	%r1069, %r1068, %r1046;
	shf.l.wrap.b32 	%r1070, %r1069, %r1069, 1;
	add.s32 	%r1071, %r262, %r1070;
	add.s32 	%r1072, %r1071, %r261;
	add.s32 	%r1073, %r1072, %r1066;
	add.s32 	%r271, %r1073, -1894007588;
	shf.l.wrap.b32 	%r273, %r263, %r263, 30;
	shf.l.wrap.b32 	%r1074, %r271, %r271, 5;
	// begin inline asm
	lop3.b32 %r266, %r267, %r273, %r269, 232;
	// end inline asm
	xor.b32  	%r1075, %r966, %r950;
	xor.b32  	%r1076, %r1075, %r1014;
	xor.b32  	%r1077, %r1076, %r1054;
	shf.l.wrap.b32 	%r1078, %r1077, %r1077, 1;
	add.s32 	%r1079, %r266, %r1078;
	add.s32 	%r1080, %r1079, %r265;
	add.s32 	%r1081, %r1080, %r1074;
	add.s32 	%r275, %r1081, -1894007588;
	shf.l.wrap.b32 	%r277, %r267, %r267, 30;
	shf.l.wrap.b32 	%r1082, %r275, %r275, 5;
	// begin inline asm
	lop3.b32 %r270, %r271, %r277, %r273, 232;
	// end inline asm
	xor.b32  	%r1083, %r974, %r958;
	xor.b32  	%r1084, %r1083, %r1022;
	xor.b32  	%r1085, %r1084, %r1062;
	shf.l.wrap.b32 	%r1086, %r1085, %r1085, 1;
	add.s32 	%r1087, %r270, %r1086;
	add.s32 	%r1088, %r1087, %r269;
	add.s32 	%r1089, %r1088, %r1082;
	add.s32 	%r279, %r1089, -1894007588;
	shf.l.wrap.b32 	%r281, %r271, %r271, 30;
	shf.l.wrap.b32 	%r1090, %r279, %r279, 5;
	// begin inline asm
	lop3.b32 %r274, %r275, %r281, %r277, 232;
	// end inline asm
	xor.b32  	%r1091, %r982, %r966;
	xor.b32  	%r1092, %r1091, %r1030;
	xor.b32  	%r1093, %r1092, %r1070;
	shf.l.wrap.b32 	%r1094, %r1093, %r1093, 1;
	add.s32 	%r1095, %r274, %r1094;
	add.s32 	%r1096, %r1095, %r273;
	add.s32 	%r1097, %r1096, %r1090;
	add.s32 	%r283, %r1097, -1894007588;
	shf.l.wrap.b32 	%r285, %r275, %r275, 30;
	shf.l.wrap.b32 	%r1098, %r283, %r283, 5;
	// begin inline asm
	lop3.b32 %r278, %r279, %r285, %r281, 232;
	// end inline asm
	xor.b32  	%r1099, %r990, %r974;
	xor.b32  	%r1100, %r1099, %r1038;
	xor.b32  	%r1101, %r1100, %r1078;
	shf.l.wrap.b32 	%r1102, %r1101, %r1101, 1;
	add.s32 	%r1103, %r278, %r1102;
	add.s32 	%r1104, %r1103, %r277;
	add.s32 	%r1105, %r1104, %r1098;
	add.s32 	%r287, %r1105, -1894007588;
	shf.l.wrap.b32 	%r289, %r279, %r279, 30;
	shf.l.wrap.b32 	%r1106, %r287, %r287, 5;
	// begin inline asm
	lop3.b32 %r282, %r283, %r289, %r285, 232;
	// end inline asm
	xor.b32  	%r1107, %r998, %r982;
	xor.b32  	%r1108, %r1107, %r1046;
	xor.b32  	%r1109, %r1108, %r1086;
	shf.l.wrap.b32 	%r1110, %r1109, %r1109, 1;
	add.s32 	%r1111, %r282, %r1110;
	add.s32 	%r1112, %r1111, %r281;
	add.s32 	%r1113, %r1112, %r1106;
	add.s32 	%r291, %r1113, -1894007588;
	shf.l.wrap.b32 	%r293, %r283, %r283, 30;
	shf.l.wrap.b32 	%r1114, %r291, %r291, 5;
	// begin inline asm
	lop3.b32 %r286, %r287, %r293, %r289, 232;
	// end inline asm
	xor.b32  	%r1115, %r1006, %r990;
	xor.b32  	%r1116, %r1115, %r1054;
	xor.b32  	%r1117, %r1116, %r1094;
	shf.l.wrap.b32 	%r1118, %r1117, %r1117, 1;
	add.s32 	%r1119, %r286, %r1118;
	add.s32 	%r1120, %r1119, %r285;
	add.s32 	%r1121, %r1120, %r1114;
	add.s32 	%r295, %r1121, -1894007588;
	shf.l.wrap.b32 	%r297, %r287, %r287, 30;
	shf.l.wrap.b32 	%r1122, %r295, %r295, 5;
	// begin inline asm
	lop3.b32 %r290, %r291, %r297, %r293, 232;
	// end inline asm
	xor.b32  	%r1123, %r1014, %r998;
	xor.b32  	%r1124, %r1123, %r1062;
	xor.b32  	%r1125, %r1124, %r1102;
	shf.l.wrap.b32 	%r1126, %r1125, %r1125, 1;
	add.s32 	%r1127, %r290, %r1126;
	add.s32 	%r1128, %r1127, %r289;
	add.s32 	%r1129, %r1128, %r1122;
	add.s32 	%r299, %r1129, -1894007588;
	shf.l.wrap.b32 	%r301, %r291, %r291, 30;
	shf.l.wrap.b32 	%r1130, %r299, %r299, 5;
	// begin inline asm
	lop3.b32 %r294, %r295, %r301, %r297, 232;
	// end inline asm
	xor.b32  	%r1131, %r1022, %r1006;
	xor.b32  	%r1132, %r1131, %r1070;
	xor.b32  	%r1133, %r1132, %r1110;
	shf.l.wrap.b32 	%r1134, %r1133, %r1133, 1;
	add.s32 	%r1135, %r294, %r1134;
	add.s32 	%r1136, %r1135, %r293;
	add.s32 	%r1137, %r1136, %r1130;
	add.s32 	%r303, %r1137, -1894007588;
	shf.l.wrap.b32 	%r305, %r295, %r295, 30;
	shf.l.wrap.b32 	%r1138, %r303, %r303, 5;
	// begin inline asm
	lop3.b32 %r298, %r299, %r305, %r301, 232;
	// end inline asm
	xor.b32  	%r1139, %r1030, %r1014;
	xor.b32  	%r1140, %r1139, %r1078;
	xor.b32  	%r1141, %r1140, %r1118;
	shf.l.wrap.b32 	%r1142, %r1141, %r1141, 1;
	add.s32 	%r1143, %r298, %r1142;
	add.s32 	%r1144, %r1143, %r297;
	add.s32 	%r1145, %r1144, %r1138;
	add.s32 	%r307, %r1145, -1894007588;
	shf.l.wrap.b32 	%r309, %r299, %r299, 30;
	shf.l.wrap.b32 	%r1146, %r307, %r307, 5;
	// begin inline asm
	lop3.b32 %r302, %r303, %r309, %r305, 150;
	// end inline asm
	xor.b32  	%r1147, %r1038, %r1022;
	xor.b32  	%r1148, %r1147, %r1086;
	xor.b32  	%r1149, %r1148, %r1126;
	shf.l.wrap.b32 	%r1150, %r1149, %r1149, 1;
	add.s32 	%r1151, %r302, %r1150;
	add.s32 	%r1152, %r1151, %r301;
	add.s32 	%r1153, %r1152, %r1146;
	add.s32 	%r311, %r1153, -899497514;
	shf.l.wrap.b32 	%r313, %r303, %r303, 30;
	shf.l.wrap.b32 	%r1154, %r311, %r311, 5;
	// begin inline asm
	lop3.b32 %r306, %r307, %r313, %r309, 150;
	// end inline asm
	xor.b32  	%r1155, %r1046, %r1030;
	xor.b32  	%r1156, %r1155, %r1094;
	xor.b32  	%r1157, %r1156, %r1134;
	shf.l.wrap.b32 	%r1158, %r1157, %r1157, 1;
	add.s32 	%r1159, %r306, %r1158;
	add.s32 	%r1160, %r1159, %r305;
	add.s32 	%r1161, %r1160, %r1154;
	add.s32 	%r315, %r1161, -899497514;
	shf.l.wrap.b32 	%r317, %r307, %r307, 30;
	shf.l.wrap.b32 	%r1162, %r315, %r315, 5;
	// begin inline asm
	lop3.b32 %r310, %r311, %r317, %r313, 150;
	// end inline asm
	xor.b32  	%r1163, %r1054, %r1038;
	xor.b32  	%r1164, %r1163, %r1102;
	xor.b32  	%r1165, %r1164, %r1142;
	shf.l.wrap.b32 	%r1166, %r1165, %r1165, 1;
	add.s32 	%r1167, %r310, %r1166;
	add.s32 	%r1168, %r1167, %r309;
	add.s32 	%r1169, %r1168, %r1162;
	add.s32 	%r319, %r1169, -899497514;
	shf.l.wrap.b32 	%r321, %r311, %r311, 30;
	shf.l.wrap.b32 	%r1170, %r319, %r319, 5;
	// begin inline asm
	lop3.b32 %r314, %r315, %r321, %r317, 150;
	// end inline asm
	xor.b32  	%r1171, %r1062, %r1046;
	xor.b32  	%r1172, %r1171, %r1110;
	xor.b32  	%r1173, %r1172, %r1150;
	shf.l.wrap.b32 	%r1174, %r1173, %r1173, 1;
	add.s32 	%r1175, %r314, %r1174;
	add.s32 	%r1176, %r1175, %r313;
	add.s32 	%r1177, %r1176, %r1170;
	add.s32 	%r323, %r1177, -899497514;
	shf.l.wrap.b32 	%r325, %r315, %r315, 30;
	shf.l.wrap.b32 	%r1178, %r323, %r323, 5;
	// begin inline asm
	lop3.b32 %r318, %r319, %r325, %r321, 150;
	// end inline asm
	xor.b32  	%r1179, %r1070, %r1054;
	xor.b32  	%r1180, %r1179, %r1118;
	xor.b32  	%r1181, %r1180, %r1158;
	shf.l.wrap.b32 	%r1182, %r1181, %r1181, 1;
	add.s32 	%r1183, %r318, %r1182;
	add.s32 	%r1184, %r1183, %r317;
	add.s32 	%r1185, %r1184, %r1178;
	add.s32 	%r327, %r1185, -899497514;
	shf.l.wrap.b32 	%r329, %r319, %r319, 30;
	shf.l.wrap.b32 	%r1186, %r327, %r327, 5;
	// begin inline asm
	lop3.b32 %r322, %r323, %r329, %r325, 150;
	// end inline asm
	xor.b32  	%r1187, %r1078, %r1062;
	xor.b32  	%r1188, %r1187, %r1126;
	xor.b32  	%r1189, %r1188, %r1166;
	shf.l.wrap.b32 	%r1190, %r1189, %r1189, 1;
	add.s32 	%r1191, %r322, %r1190;
	add.s32 	%r1192, %r1191, %r321;
	add.s32 	%r1193, %r1192, %r1186;
	add.s32 	%r331, %r1193, -899497514;
	shf.l.wrap.b32 	%r333, %r323, %r323, 30;
	shf.l.wrap.b32 	%r1194, %r331, %r331, 5;
	// begin inline asm
	lop3.b32 %r326, %r327, %r333, %r329, 150;
	// end inline asm
	xor.b32  	%r1195, %r1086, %r1070;
	xor.b32  	%r1196, %r1195, %r1134;
	xor.b32  	%r1197, %r1196, %r1174;
	shf.l.wrap.b32 	%r1198, %r1197, %r1197, 1;
	add.s32 	%r1199, %r326, %r1198;
	add.s32 	%r1200, %r1199, %r325;
	add.s32 	%r1201, %r1200, %r1194;
	add.s32 	%r335, %r1201, -899497514;
	shf.l.wrap.b32 	%r337, %r327, %r327, 30;
	shf.l.wrap.b32 	%r1202, %r335, %r335, 5;
	// begin inline asm
	lop3.b32 %r330, %r331, %r337, %r333, 150;
	// end inline asm
	xor.b32  	%r1203, %r1094, %r1078;
	xor.b32  	%r1204, %r1203, %r1142;
	xor.b32  	%r1205, %r1204, %r1182;
	shf.l.wrap.b32 	%r1206, %r1205, %r1205, 1;
	add.s32 	%r1207, %r330, %r1206;
	add.s32 	%r1208, %r1207, %r329;
	add.s32 	%r1209, %r1208, %r1202;
	add.s32 	%r339, %r1209, -899497514;
	shf.l.wrap.b32 	%r341, %r331, %r331, 30;
	shf.l.wrap.b32 	%r1210, %r339, %r339, 5;
	// begin inline asm
	lop3.b32 %r334, %r335, %r341, %r337, 150;
	// end inline asm
	xor.b32  	%r1211, %r1102, %r1086;
	xor.b32  	%r1212, %r1211, %r1150;
	xor.b32  	%r1213, %r1212, %r1190;
	shf.l.wrap.b32 	%r1214, %r1213, %r1213, 1;
	add.s32 	%r1215, %r334, %r1214;
	add.s32 	%r1216, %r1215, %r333;
	add.s32 	%r1217, %r1216, %r1210;
	add.s32 	%r343, %r1217, -899497514;
	shf.l.wrap.b32 	%r345, %r335, %r335, 30;
	shf.l.wrap.b32 	%r1218, %r343, %r343, 5;
	// begin inline asm
	lop3.b32 %r338, %r339, %r345, %r341, 150;
	// end inline asm
	xor.b32  	%r1219, %r1110, %r1094;
	xor.b32  	%r1220, %r1219, %r1158;
	xor.b32  	%r1221, %r1220, %r1198;
	shf.l.wrap.b32 	%r1222, %r1221, %r1221, 1;
	add.s32 	%r1223, %r338, %r1222;
	add.s32 	%r1224, %r1223, %r337;
	add.s32 	%r1225, %r1224, %r1218;
	add.s32 	%r347, %r1225, -899497514;
	shf.l.wrap.b32 	%r349, %r339, %r339, 30;
	shf.l.wrap.b32 	%r1226, %r347, %r347, 5;
	// begin inline asm
	lop3.b32 %r342, %r343, %r349, %r345, 150;
	// end inline asm
	xor.b32  	%r1227, %r1118, %r1102;
	xor.b32  	%r1228, %r1227, %r1166;
	xor.b32  	%r1229, %r1228, %r1206;
	shf.l.wrap.b32 	%r1230, %r1229, %r1229, 1;
	add.s32 	%r1231, %r342, %r1230;
	add.s32 	%r1232, %r1231, %r341;
	add.s32 	%r1233, %r1232, %r1226;
	add.s32 	%r351, %r1233, -899497514;
	shf.l.wrap.b32 	%r353, %r343, %r343, 30;
	shf.l.wrap.b32 	%r1234, %r351, %r351, 5;
	// begin inline asm
	lop3.b32 %r346, %r347, %r353, %r349, 150;
	// end inline asm
	xor.b32  	%r1235, %r1126, %r1110;
	xor.b32  	%r1236, %r1235, %r1174;
	xor.b32  	%r1237, %r1236, %r1214;
	shf.l.wrap.b32 	%r1238, %r1237, %r1237, 1;
	add.s32 	%r1239, %r346, %r1238;
	add.s32 	%r1240, %r1239, %r345;
	add.s32 	%r1241, %r1240, %r1234;
	add.s32 	%r355, %r1241, -899497514;
	shf.l.wrap.b32 	%r357, %r347, %r347, 30;
	shf.l.wrap.b32 	%r1242, %r355, %r355, 5;
	// begin inline asm
	lop3.b32 %r350, %r351, %r357, %r353, 150;
	// end inline asm
	xor.b32  	%r1243, %r1134, %r1118;
	xor.b32  	%r1244, %r1243, %r1182;
	xor.b32  	%r1245, %r1244, %r1222;
	shf.l.wrap.b32 	%r1246, %r1245, %r1245, 1;
	add.s32 	%r1247, %r350, %r1246;
	add.s32 	%r1248, %r1247, %r349;
	add.s32 	%r1249, %r1248, %r1242;
	add.s32 	%r359, %r1249, -899497514;
	shf.l.wrap.b32 	%r361, %r351, %r351, 30;
	shf.l.wrap.b32 	%r1250, %r359, %r359, 5;
	// begin inline asm
	lop3.b32 %r354, %r355, %r361, %r357, 150;
	// end inline asm
	xor.b32  	%r1251, %r1142, %r1126;
	xor.b32  	%r1252, %r1251, %r1190;
	xor.b32  	%r1253, %r1252, %r1230;
	shf.l.wrap.b32 	%r1254, %r1253, %r1253, 1;
	add.s32 	%r1255, %r354, %r1254;
	add.s32 	%r1256, %r1255, %r353;
	add.s32 	%r1257, %r1256, %r1250;
	add.s32 	%r363, %r1257, -899497514;
	shf.l.wrap.b32 	%r365, %r355, %r355, 30;
	shf.l.wrap.b32 	%r1258, %r363, %r363, 5;
	// begin inline asm
	lop3.b32 %r358, %r359, %r365, %r361, 150;
	// end inline asm
	xor.b32  	%r1259, %r1150, %r1134;
	xor.b32  	%r1260, %r1259, %r1198;
	xor.b32  	%r1261, %r1260, %r1238;
	shf.l.wrap.b32 	%r1262, %r1261, %r1261, 1;
	add.s32 	%r1263, %r358, %r1262;
	add.s32 	%r1264, %r1263, %r357;
	add.s32 	%r1265, %r1264, %r1258;
	add.s32 	%r367, %r1265, -899497514;
	shf.l.wrap.b32 	%r369, %r359, %r359, 30;
	shf.l.wrap.b32 	%r1266, %r367, %r367, 5;
	// begin inline asm
	lop3.b32 %r362, %r363, %r369, %r365, 150;
	// end inline asm
	xor.b32  	%r1267, %r1158, %r1142;
	xor.b32  	%r1268, %r1267, %r1206;
	xor.b32  	%r1269, %r1268, %r1246;
	shf.l.wrap.b32 	%r1270, %r1269, %r1269, 1;
	add.s32 	%r1271, %r362, %r1270;
	add.s32 	%r1272, %r1271, %r361;
	add.s32 	%r1273, %r1272, %r1266;
	add.s32 	%r371, %r1273, -899497514;
	shf.l.wrap.b32 	%r373, %r363, %r363, 30;
	shf.l.wrap.b32 	%r1274, %r371, %r371, 5;
	// begin inline asm
	lop3.b32 %r366, %r367, %r373, %r369, 150;
	// end inline asm
	xor.b32  	%r1275, %r1166, %r1150;
	xor.b32  	%r1276, %r1275, %r1214;
	xor.b32  	%r1277, %r1276, %r1254;
	shf.l.wrap.b32 	%r1278, %r1277, %r1277, 1;
	add.s32 	%r1279, %r366, %r1278;
	add.s32 	%r1280, %r1279, %r365;
	add.s32 	%r1281, %r1280, %r1274;
	add.s32 	%r375, %r1281, -899497514;
	shf.l.wrap.b32 	%r377, %r367, %r367, 30;
	shf.l.wrap.b32 	%r1282, %r375, %r375, 5;
	// begin inline asm
	lop3.b32 %r370, %r371, %r377, %r373, 150;
	// end inline asm
	xor.b32  	%r1283, %r1174, %r1158;
	xor.b32  	%r1284, %r1283, %r1222;
	xor.b32  	%r1285, %r1284, %r1262;
	shf.l.wrap.b32 	%r1286, %r1285, %r1285, 1;
	add.s32 	%r1287, %r370, %r1286;
	add.s32 	%r1288, %r1287, %r369;
	add.s32 	%r1289, %r1288, %r1282;
	add.s32 	%r379, %r1289, -899497514;
	shf.l.wrap.b32 	%r381, %r371, %r371, 30;
	shf.l.wrap.b32 	%r1290, %r379, %r379, 5;
	// begin inline asm
	lop3.b32 %r374, %r375, %r381, %r377, 150;
	// end inline asm
	xor.b32  	%r1291, %r1182, %r1166;
	xor.b32  	%r1292, %r1291, %r1230;
	xor.b32  	%r1293, %r1292, %r1270;
	shf.l.wrap.b32 	%r1294, %r1293, %r1293, 1;
	add.s32 	%r1295, %r374, %r1294;
	add.s32 	%r1296, %r1295, %r373;
	add.s32 	%r1297, %r1296, %r1290;
	add.s32 	%r1298, %r1297, -899497514;
	shf.l.wrap.b32 	%r380, %r375, %r375, 30;
	shf.l.wrap.b32 	%r1299, %r1298, %r1298, 5;
	// begin inline asm
	lop3.b32 %r378, %r379, %r380, %r381, 150;
	// end inline asm
	xor.b32  	%r1300, %r1190, %r1174;
	xor.b32  	%r1301, %r1300, %r1238;
	xor.b32  	%r1302, %r1301, %r1278;
	shf.l.wrap.b32 	%r1303, %r1302, %r1302, 1;
	shf.l.wrap.b32 	%r1304, %r379, %r379, 30;
	add.s32 	%r1305, %r378, %r1303;
	add.s32 	%r1306, %r1305, %r377;
	add.s32 	%r1307, %r1306, %r1299;
	add.s32 	%r5621, %r1307, 833086679;
	add.s32 	%r5620, %r1297, -1171231393;
	add.s32 	%r5619, %r1304, -1732584194;
	add.s32 	%r5618, %r380, 271733878;
	add.s32 	%r5617, %r381, -1009589776;
	mul.wide.u32 	%rd12, %r699, 84;
	add.s64 	%rd13, %rd6, %rd12;
	add.s64 	%rd2, %rd13, 20;
	st.global.u32 	[%rd13+20], %r5621;
	st.global.u32 	[%rd13+24], %r5620;
	st.global.u32 	[%rd13+28], %r5619;
	st.global.u32 	[%rd13+32], %r5618;
	st.global.u32 	[%rd13+36], %r5617;
	ld.global.u32 	%r1308, [%rd11];
	xor.b32  	%r1309, %r1308, 1549556828;
	ld.global.u32 	%r1310, [%rd11+4];
	xor.b32  	%r1311, %r1310, 1549556828;
	ld.global.u32 	%r1312, [%rd11+8];
	xor.b32  	%r1313, %r1312, 1549556828;
	ld.global.u32 	%r1314, [%rd11+12];
	xor.b32  	%r1315, %r1314, 1549556828;
	ld.global.u32 	%r1316, [%rd11+16];
	xor.b32  	%r1317, %r1316, 1549556828;
	ld.global.u32 	%r1318, [%rd11+20];
	xor.b32  	%r1319, %r1318, 1549556828;
	ld.global.u32 	%r1320, [%rd11+24];
	xor.b32  	%r1321, %r1320, 1549556828;
	ld.global.u32 	%r1322, [%rd11+28];
	xor.b32  	%r1323, %r1322, 1549556828;
	ld.global.u32 	%r1324, [%rd11+32];
	xor.b32  	%r1325, %r1324, 1549556828;
	ld.global.u32 	%r1326, [%rd11+36];
	xor.b32  	%r1327, %r1326, 1549556828;
	ld.global.u32 	%r1328, [%rd11+40];
	xor.b32  	%r1329, %r1328, 1549556828;
	ld.global.u32 	%r1330, [%rd11+44];
	xor.b32  	%r1331, %r1330, 1549556828;
	ld.global.u32 	%r1332, [%rd11+48];
	xor.b32  	%r1333, %r1332, 1549556828;
	ld.global.u32 	%r1334, [%rd11+52];
	xor.b32  	%r1335, %r1334, 1549556828;
	ld.global.u32 	%r1336, [%rd11+56];
	xor.b32  	%r1337, %r1336, 1549556828;
	ld.global.u32 	%r1338, [%rd11+60];
	xor.b32  	%r1339, %r1338, 1549556828;
	add.s32 	%r1340, %r734, %r1309;
	add.s32 	%r383, %r1340, -1009589776;
	shf.l.wrap.b32 	%r1341, %r383, %r383, 5;
	add.s32 	%r1342, %r737, %r1311;
	add.s32 	%r387, %r1342, %r1341;
	shf.l.wrap.b32 	%r1343, %r387, %r387, 5;
	// begin inline asm
	lop3.b32 %r382, %r383, %r389, %r385, 202;
	// end inline asm
	add.s32 	%r1344, %r382, %r1313;
	add.s32 	%r1345, %r1344, %r1343;
	add.s32 	%r391, %r1345, -214083945;
	shf.l.wrap.b32 	%r393, %r383, %r383, 30;
	shf.l.wrap.b32 	%r1346, %r391, %r391, 5;
	// begin inline asm
	lop3.b32 %r386, %r387, %r393, %r389, 202;
	// end inline asm
	add.s32 	%r1347, %r743, %r386;
	add.s32 	%r1348, %r1347, %r1315;
	add.s32 	%r395, %r1348, %r1346;
	shf.l.wrap.b32 	%r397, %r387, %r387, 30;
	shf.l.wrap.b32 	%r1349, %r395, %r395, 5;
	// begin inline asm
	lop3.b32 %r390, %r391, %r397, %r393, 202;
	// end inline asm
	add.s32 	%r1350, %r747, %r390;
	add.s32 	%r1351, %r1350, %r1317;
	add.s32 	%r399, %r1351, %r1349;
	shf.l.wrap.b32 	%r401, %r391, %r391, 30;
	shf.l.wrap.b32 	%r1352, %r399, %r399, 5;
	// begin inline asm
	lop3.b32 %r394, %r395, %r401, %r397, 202;
	// end inline asm
	add.s32 	%r1353, %r393, %r394;
	add.s32 	%r1354, %r1353, %r1319;
	add.s32 	%r1355, %r1354, %r1352;
	add.s32 	%r403, %r1355, 1518500249;
	shf.l.wrap.b32 	%r405, %r395, %r395, 30;
	shf.l.wrap.b32 	%r1356, %r403, %r403, 5;
	// begin inline asm
	lop3.b32 %r398, %r399, %r405, %r401, 202;
	// end inline asm
	add.s32 	%r1357, %r397, %r398;
	add.s32 	%r1358, %r1357, %r1321;
	add.s32 	%r1359, %r1358, %r1356;
	add.s32 	%r407, %r1359, 1518500249;
	shf.l.wrap.b32 	%r409, %r399, %r399, 30;
	shf.l.wrap.b32 	%r1360, %r407, %r407, 5;
	// begin inline asm
	lop3.b32 %r402, %r403, %r409, %r405, 202;
	// end inline asm
	add.s32 	%r1361, %r402, %r401;
	add.s32 	%r1362, %r1361, %r1323;
	add.s32 	%r1363, %r1362, %r1360;
	add.s32 	%r411, %r1363, 1518500249;
	shf.l.wrap.b32 	%r413, %r403, %r403, 30;
	shf.l.wrap.b32 	%r1364, %r411, %r411, 5;
	// begin inline asm
	lop3.b32 %r406, %r407, %r413, %r409, 202;
	// end inline asm
	add.s32 	%r1365, %r406, %r1325;
	add.s32 	%r1366, %r1365, %r405;
	add.s32 	%r1367, %r1366, %r1364;
	add.s32 	%r415, %r1367, 1518500249;
	shf.l.wrap.b32 	%r417, %r407, %r407, 30;
	shf.l.wrap.b32 	%r1368, %r415, %r415, 5;
	// begin inline asm
	lop3.b32 %r410, %r411, %r417, %r413, 202;
	// end inline asm
	add.s32 	%r1369, %r410, %r1327;
	add.s32 	%r1370, %r1369, %r409;
	add.s32 	%r1371, %r1370, %r1368;
	add.s32 	%r419, %r1371, 1518500249;
	shf.l.wrap.b32 	%r421, %r411, %r411, 30;
	shf.l.wrap.b32 	%r1372, %r419, %r419, 5;
	// begin inline asm
	lop3.b32 %r414, %r415, %r421, %r417, 202;
	// end inline asm
	add.s32 	%r1373, %r414, %r1329;
	add.s32 	%r1374, %r1373, %r413;
	add.s32 	%r1375, %r1374, %r1372;
	add.s32 	%r423, %r1375, 1518500249;
	shf.l.wrap.b32 	%r425, %r415, %r415, 30;
	shf.l.wrap.b32 	%r1376, %r423, %r423, 5;
	// begin inline asm
	lop3.b32 %r418, %r419, %r425, %r421, 202;
	// end inline asm
	add.s32 	%r1377, %r418, %r1331;
	add.s32 	%r1378, %r1377, %r417;
	add.s32 	%r1379, %r1378, %r1376;
	add.s32 	%r427, %r1379, 1518500249;
	shf.l.wrap.b32 	%r429, %r419, %r419, 30;
	shf.l.wrap.b32 	%r1380, %r427, %r427, 5;
	// begin inline asm
	lop3.b32 %r422, %r423, %r429, %r425, 202;
	// end inline asm
	add.s32 	%r1381, %r422, %r1333;
	add.s32 	%r1382, %r1381, %r421;
	add.s32 	%r1383, %r1382, %r1380;
	add.s32 	%r431, %r1383, 1518500249;
	shf.l.wrap.b32 	%r433, %r423, %r423, 30;
	shf.l.wrap.b32 	%r1384, %r431, %r431, 5;
	// begin inline asm
	lop3.b32 %r426, %r427, %r433, %r429, 202;
	// end inline asm
	add.s32 	%r1385, %r426, %r1335;
	add.s32 	%r1386, %r1385, %r425;
	add.s32 	%r1387, %r1386, %r1384;
	add.s32 	%r435, %r1387, 1518500249;
	shf.l.wrap.b32 	%r437, %r427, %r427, 30;
	shf.l.wrap.b32 	%r1388, %r435, %r435, 5;
	// begin inline asm
	lop3.b32 %r430, %r431, %r437, %r433, 202;
	// end inline asm
	add.s32 	%r1389, %r430, %r1337;
	add.s32 	%r1390, %r1389, %r429;
	add.s32 	%r1391, %r1390, %r1388;
	add.s32 	%r439, %r1391, 1518500249;
	shf.l.wrap.b32 	%r441, %r431, %r431, 30;
	shf.l.wrap.b32 	%r1392, %r439, %r439, 5;
	// begin inline asm
	lop3.b32 %r434, %r435, %r441, %r437, 202;
	// end inline asm
	add.s32 	%r1393, %r434, %r1339;
	add.s32 	%r1394, %r1393, %r433;
	add.s32 	%r1395, %r1394, %r1392;
	add.s32 	%r443, %r1395, 1518500249;
	shf.l.wrap.b32 	%r445, %r435, %r435, 30;
	shf.l.wrap.b32 	%r1396, %r443, %r443, 5;
	// begin inline asm
	lop3.b32 %r438, %r439, %r445, %r441, 202;
	// end inline asm
	xor.b32  	%r1397, %r1324, %r1334;
	xor.b32  	%r1398, %r1397, %r1313;
	xor.b32  	%r1399, %r1398, %r1309;
	shf.l.wrap.b32 	%r1400, %r1399, %r1399, 1;
	add.s32 	%r1401, %r438, %r1400;
	add.s32 	%r1402, %r1401, %r437;
	add.s32 	%r1403, %r1402, %r1396;
	add.s32 	%r447, %r1403, 1518500249;
	shf.l.wrap.b32 	%r449, %r439, %r439, 30;
	shf.l.wrap.b32 	%r1404, %r447, %r447, 5;
	// begin inline asm
	lop3.b32 %r442, %r443, %r449, %r445, 202;
	// end inline asm
	xor.b32  	%r1405, %r1326, %r1336;
	xor.b32  	%r1406, %r1405, %r1315;
	xor.b32  	%r1407, %r1406, %r1311;
	shf.l.wrap.b32 	%r1408, %r1407, %r1407, 1;
	add.s32 	%r1409, %r442, %r1408;
	add.s32 	%r1410, %r1409, %r441;
	add.s32 	%r1411, %r1410, %r1404;
	add.s32 	%r451, %r1411, 1518500249;
	shf.l.wrap.b32 	%r453, %r443, %r443, 30;
	shf.l.wrap.b32 	%r1412, %r451, %r451, 5;
	// begin inline asm
	lop3.b32 %r446, %r447, %r453, %r449, 202;
	// end inline asm
	xor.b32  	%r1413, %r1328, %r1338;
	xor.b32  	%r1414, %r1413, %r1317;
	xor.b32  	%r1415, %r1414, %r1313;
	shf.l.wrap.b32 	%r1416, %r1415, %r1415, 1;
	add.s32 	%r1417, %r446, %r1416;
	add.s32 	%r1418, %r1417, %r445;
	add.s32 	%r1419, %r1418, %r1412;
	add.s32 	%r455, %r1419, 1518500249;
	shf.l.wrap.b32 	%r457, %r447, %r447, 30;
	shf.l.wrap.b32 	%r1420, %r455, %r455, 5;
	// begin inline asm
	lop3.b32 %r450, %r451, %r457, %r453, 202;
	// end inline asm
	xor.b32  	%r1421, %r1331, %r1400;
	xor.b32  	%r1422, %r1421, %r1319;
	xor.b32  	%r1423, %r1422, %r1315;
	shf.l.wrap.b32 	%r1424, %r1423, %r1423, 1;
	add.s32 	%r1425, %r450, %r1424;
	add.s32 	%r1426, %r1425, %r449;
	add.s32 	%r1427, %r1426, %r1420;
	add.s32 	%r459, %r1427, 1518500249;
	shf.l.wrap.b32 	%r461, %r451, %r451, 30;
	shf.l.wrap.b32 	%r1428, %r459, %r459, 5;
	// begin inline asm
	lop3.b32 %r454, %r455, %r461, %r457, 150;
	// end inline asm
	xor.b32  	%r1429, %r1333, %r1408;
	xor.b32  	%r1430, %r1429, %r1321;
	xor.b32  	%r1431, %r1430, %r1317;
	shf.l.wrap.b32 	%r1432, %r1431, %r1431, 1;
	add.s32 	%r1433, %r454, %r1432;
	add.s32 	%r1434, %r1433, %r453;
	add.s32 	%r1435, %r1434, %r1428;
	add.s32 	%r463, %r1435, 1859775393;
	shf.l.wrap.b32 	%r465, %r455, %r455, 30;
	shf.l.wrap.b32 	%r1436, %r463, %r463, 5;
	// begin inline asm
	lop3.b32 %r458, %r459, %r465, %r461, 150;
	// end inline asm
	xor.b32  	%r1437, %r1335, %r1416;
	xor.b32  	%r1438, %r1437, %r1323;
	xor.b32  	%r1439, %r1438, %r1319;
	shf.l.wrap.b32 	%r1440, %r1439, %r1439, 1;
	add.s32 	%r1441, %r458, %r1440;
	add.s32 	%r1442, %r1441, %r457;
	add.s32 	%r1443, %r1442, %r1436;
	add.s32 	%r467, %r1443, 1859775393;
	shf.l.wrap.b32 	%r469, %r459, %r459, 30;
	shf.l.wrap.b32 	%r1444, %r467, %r467, 5;
	// begin inline asm
	lop3.b32 %r462, %r463, %r469, %r465, 150;
	// end inline asm
	xor.b32  	%r1445, %r1337, %r1424;
	xor.b32  	%r1446, %r1445, %r1325;
	xor.b32  	%r1447, %r1446, %r1321;
	shf.l.wrap.b32 	%r1448, %r1447, %r1447, 1;
	add.s32 	%r1449, %r462, %r1448;
	add.s32 	%r1450, %r1449, %r461;
	add.s32 	%r1451, %r1450, %r1444;
	add.s32 	%r471, %r1451, 1859775393;
	shf.l.wrap.b32 	%r473, %r463, %r463, 30;
	shf.l.wrap.b32 	%r1452, %r471, %r471, 5;
	// begin inline asm
	lop3.b32 %r466, %r467, %r473, %r469, 150;
	// end inline asm
	xor.b32  	%r1453, %r1339, %r1432;
	xor.b32  	%r1454, %r1453, %r1327;
	xor.b32  	%r1455, %r1454, %r1323;
	shf.l.wrap.b32 	%r1456, %r1455, %r1455, 1;
	add.s32 	%r1457, %r466, %r1456;
	add.s32 	%r1458, %r1457, %r465;
	add.s32 	%r1459, %r1458, %r1452;
	add.s32 	%r475, %r1459, 1859775393;
	shf.l.wrap.b32 	%r477, %r467, %r467, 30;
	shf.l.wrap.b32 	%r1460, %r475, %r475, 5;
	// begin inline asm
	lop3.b32 %r470, %r471, %r477, %r473, 150;
	// end inline asm
	xor.b32  	%r1461, %r1440, %r1400;
	xor.b32  	%r1462, %r1461, %r1329;
	xor.b32  	%r1463, %r1462, %r1325;
	shf.l.wrap.b32 	%r1464, %r1463, %r1463, 1;
	add.s32 	%r1465, %r470, %r1464;
	add.s32 	%r1466, %r1465, %r469;
	add.s32 	%r1467, %r1466, %r1460;
	add.s32 	%r479, %r1467, 1859775393;
	shf.l.wrap.b32 	%r481, %r471, %r471, 30;
	shf.l.wrap.b32 	%r1468, %r479, %r479, 5;
	// begin inline asm
	lop3.b32 %r474, %r475, %r481, %r477, 150;
	// end inline asm
	xor.b32  	%r1469, %r1448, %r1408;
	xor.b32  	%r1470, %r1469, %r1331;
	xor.b32  	%r1471, %r1470, %r1327;
	shf.l.wrap.b32 	%r1472, %r1471, %r1471, 1;
	add.s32 	%r1473, %r474, %r1472;
	add.s32 	%r1474, %r1473, %r473;
	add.s32 	%r1475, %r1474, %r1468;
	add.s32 	%r483, %r1475, 1859775393;
	shf.l.wrap.b32 	%r485, %r475, %r475, 30;
	shf.l.wrap.b32 	%r1476, %r483, %r483, 5;
	// begin inline asm
	lop3.b32 %r478, %r479, %r485, %r481, 150;
	// end inline asm
	xor.b32  	%r1477, %r1456, %r1416;
	xor.b32  	%r1478, %r1477, %r1333;
	xor.b32  	%r1479, %r1478, %r1329;
	shf.l.wrap.b32 	%r1480, %r1479, %r1479, 1;
	add.s32 	%r1481, %r478, %r1480;
	add.s32 	%r1482, %r1481, %r477;
	add.s32 	%r1483, %r1482, %r1476;
	add.s32 	%r487, %r1483, 1859775393;
	shf.l.wrap.b32 	%r489, %r479, %r479, 30;
	shf.l.wrap.b32 	%r1484, %r487, %r487, 5;
	// begin inline asm
	lop3.b32 %r482, %r483, %r489, %r485, 150;
	// end inline asm
	xor.b32  	%r1485, %r1464, %r1424;
	xor.b32  	%r1486, %r1485, %r1335;
	xor.b32  	%r1487, %r1486, %r1331;
	shf.l.wrap.b32 	%r1488, %r1487, %r1487, 1;
	add.s32 	%r1489, %r482, %r1488;
	add.s32 	%r1490, %r1489, %r481;
	add.s32 	%r1491, %r1490, %r1484;
	add.s32 	%r491, %r1491, 1859775393;
	shf.l.wrap.b32 	%r493, %r483, %r483, 30;
	shf.l.wrap.b32 	%r1492, %r491, %r491, 5;
	// begin inline asm
	lop3.b32 %r486, %r487, %r493, %r489, 150;
	// end inline asm
	xor.b32  	%r1493, %r1472, %r1432;
	xor.b32  	%r1494, %r1493, %r1337;
	xor.b32  	%r1495, %r1494, %r1333;
	shf.l.wrap.b32 	%r1496, %r1495, %r1495, 1;
	add.s32 	%r1497, %r486, %r1496;
	add.s32 	%r1498, %r1497, %r485;
	add.s32 	%r1499, %r1498, %r1492;
	add.s32 	%r495, %r1499, 1859775393;
	shf.l.wrap.b32 	%r497, %r487, %r487, 30;
	shf.l.wrap.b32 	%r1500, %r495, %r495, 5;
	// begin inline asm
	lop3.b32 %r490, %r491, %r497, %r493, 150;
	// end inline asm
	xor.b32  	%r1501, %r1480, %r1440;
	xor.b32  	%r1502, %r1501, %r1339;
	xor.b32  	%r1503, %r1502, %r1335;
	shf.l.wrap.b32 	%r1504, %r1503, %r1503, 1;
	add.s32 	%r1505, %r490, %r1504;
	add.s32 	%r1506, %r1505, %r489;
	add.s32 	%r1507, %r1506, %r1500;
	add.s32 	%r499, %r1507, 1859775393;
	shf.l.wrap.b32 	%r501, %r491, %r491, 30;
	shf.l.wrap.b32 	%r1508, %r499, %r499, 5;
	// begin inline asm
	lop3.b32 %r494, %r495, %r501, %r497, 150;
	// end inline asm
	xor.b32  	%r1509, %r1448, %r1400;
	xor.b32  	%r1510, %r1509, %r1488;
	xor.b32  	%r1511, %r1510, %r1337;
	shf.l.wrap.b32 	%r1512, %r1511, %r1511, 1;
	add.s32 	%r1513, %r494, %r1512;
	add.s32 	%r1514, %r1513, %r493;
	add.s32 	%r1515, %r1514, %r1508;
	add.s32 	%r503, %r1515, 1859775393;
	shf.l.wrap.b32 	%r505, %r495, %r495, 30;
	shf.l.wrap.b32 	%r1516, %r503, %r503, 5;
	// begin inline asm
	lop3.b32 %r498, %r499, %r505, %r501, 150;
	// end inline asm
	xor.b32  	%r1517, %r1456, %r1408;
	xor.b32  	%r1518, %r1517, %r1496;
	xor.b32  	%r1519, %r1518, %r1339;
	shf.l.wrap.b32 	%r1520, %r1519, %r1519, 1;
	add.s32 	%r1521, %r498, %r1520;
	add.s32 	%r1522, %r1521, %r497;
	add.s32 	%r1523, %r1522, %r1516;
	add.s32 	%r507, %r1523, 1859775393;
	shf.l.wrap.b32 	%r509, %r499, %r499, 30;
	shf.l.wrap.b32 	%r1524, %r507, %r507, 5;
	// begin inline asm
	lop3.b32 %r502, %r503, %r509, %r505, 150;
	// end inline asm
	xor.b32  	%r1525, %r1416, %r1400;
	xor.b32  	%r1526, %r1525, %r1464;
	xor.b32  	%r1527, %r1526, %r1504;
	shf.l.wrap.b32 	%r1528, %r1527, %r1527, 1;
	add.s32 	%r1529, %r502, %r1528;
	add.s32 	%r1530, %r1529, %r501;
	add.s32 	%r1531, %r1530, %r1524;
	add.s32 	%r511, %r1531, 1859775393;
	shf.l.wrap.b32 	%r513, %r503, %r503, 30;
	shf.l.wrap.b32 	%r1532, %r511, %r511, 5;
	// begin inline asm
	lop3.b32 %r506, %r507, %r513, %r509, 150;
	// end inline asm
	xor.b32  	%r1533, %r1424, %r1408;
	xor.b32  	%r1534, %r1533, %r1472;
	xor.b32  	%r1535, %r1534, %r1512;
	shf.l.wrap.b32 	%r1536, %r1535, %r1535, 1;
	add.s32 	%r1537, %r506, %r1536;
	add.s32 	%r1538, %r1537, %r505;
	add.s32 	%r1539, %r1538, %r1532;
	add.s32 	%r515, %r1539, 1859775393;
	shf.l.wrap.b32 	%r517, %r507, %r507, 30;
	shf.l.wrap.b32 	%r1540, %r515, %r515, 5;
	// begin inline asm
	lop3.b32 %r510, %r511, %r517, %r513, 150;
	// end inline asm
	xor.b32  	%r1541, %r1432, %r1416;
	xor.b32  	%r1542, %r1541, %r1480;
	xor.b32  	%r1543, %r1542, %r1520;
	shf.l.wrap.b32 	%r1544, %r1543, %r1543, 1;
	add.s32 	%r1545, %r510, %r1544;
	add.s32 	%r1546, %r1545, %r509;
	add.s32 	%r1547, %r1546, %r1540;
	add.s32 	%r519, %r1547, 1859775393;
	shf.l.wrap.b32 	%r521, %r511, %r511, 30;
	shf.l.wrap.b32 	%r1548, %r519, %r519, 5;
	// begin inline asm
	lop3.b32 %r514, %r515, %r521, %r517, 150;
	// end inline asm
	xor.b32  	%r1549, %r1440, %r1424;
	xor.b32  	%r1550, %r1549, %r1488;
	xor.b32  	%r1551, %r1550, %r1528;
	shf.l.wrap.b32 	%r1552, %r1551, %r1551, 1;
	add.s32 	%r1553, %r514, %r1552;
	add.s32 	%r1554, %r1553, %r513;
	add.s32 	%r1555, %r1554, %r1548;
	add.s32 	%r523, %r1555, 1859775393;
	shf.l.wrap.b32 	%r525, %r515, %r515, 30;
	shf.l.wrap.b32 	%r1556, %r523, %r523, 5;
	// begin inline asm
	lop3.b32 %r518, %r519, %r525, %r521, 150;
	// end inline asm
	xor.b32  	%r1557, %r1448, %r1432;
	xor.b32  	%r1558, %r1557, %r1496;
	xor.b32  	%r1559, %r1558, %r1536;
	shf.l.wrap.b32 	%r1560, %r1559, %r1559, 1;
	add.s32 	%r1561, %r518, %r1560;
	add.s32 	%r1562, %r1561, %r517;
	add.s32 	%r1563, %r1562, %r1556;
	add.s32 	%r527, %r1563, 1859775393;
	shf.l.wrap.b32 	%r529, %r519, %r519, 30;
	shf.l.wrap.b32 	%r1564, %r527, %r527, 5;
	// begin inline asm
	lop3.b32 %r522, %r523, %r529, %r525, 150;
	// end inline asm
	xor.b32  	%r1565, %r1456, %r1440;
	xor.b32  	%r1566, %r1565, %r1504;
	xor.b32  	%r1567, %r1566, %r1544;
	shf.l.wrap.b32 	%r1568, %r1567, %r1567, 1;
	add.s32 	%r1569, %r522, %r1568;
	add.s32 	%r1570, %r1569, %r521;
	add.s32 	%r1571, %r1570, %r1564;
	add.s32 	%r531, %r1571, 1859775393;
	shf.l.wrap.b32 	%r533, %r523, %r523, 30;
	shf.l.wrap.b32 	%r1572, %r531, %r531, 5;
	// begin inline asm
	lop3.b32 %r526, %r527, %r533, %r529, 150;
	// end inline asm
	xor.b32  	%r1573, %r1464, %r1448;
	xor.b32  	%r1574, %r1573, %r1512;
	xor.b32  	%r1575, %r1574, %r1552;
	shf.l.wrap.b32 	%r1576, %r1575, %r1575, 1;
	add.s32 	%r1577, %r526, %r1576;
	add.s32 	%r1578, %r1577, %r525;
	add.s32 	%r1579, %r1578, %r1572;
	add.s32 	%r535, %r1579, 1859775393;
	shf.l.wrap.b32 	%r537, %r527, %r527, 30;
	shf.l.wrap.b32 	%r1580, %r535, %r535, 5;
	// begin inline asm
	lop3.b32 %r530, %r531, %r537, %r533, 150;
	// end inline asm
	xor.b32  	%r1581, %r1472, %r1456;
	xor.b32  	%r1582, %r1581, %r1520;
	xor.b32  	%r1583, %r1582, %r1560;
	shf.l.wrap.b32 	%r1584, %r1583, %r1583, 1;
	add.s32 	%r1585, %r530, %r1584;
	add.s32 	%r1586, %r1585, %r529;
	add.s32 	%r1587, %r1586, %r1580;
	add.s32 	%r539, %r1587, 1859775393;
	shf.l.wrap.b32 	%r541, %r531, %r531, 30;
	shf.l.wrap.b32 	%r1588, %r539, %r539, 5;
	// begin inline asm
	lop3.b32 %r534, %r535, %r541, %r537, 232;
	// end inline asm
	xor.b32  	%r1589, %r1480, %r1464;
	xor.b32  	%r1590, %r1589, %r1528;
	xor.b32  	%r1591, %r1590, %r1568;
	shf.l.wrap.b32 	%r1592, %r1591, %r1591, 1;
	add.s32 	%r1593, %r534, %r1592;
	add.s32 	%r1594, %r1593, %r533;
	add.s32 	%r1595, %r1594, %r1588;
	add.s32 	%r543, %r1595, -1894007588;
	shf.l.wrap.b32 	%r545, %r535, %r535, 30;
	shf.l.wrap.b32 	%r1596, %r543, %r543, 5;
	// begin inline asm
	lop3.b32 %r538, %r539, %r545, %r541, 232;
	// end inline asm
	xor.b32  	%r1597, %r1488, %r1472;
	xor.b32  	%r1598, %r1597, %r1536;
	xor.b32  	%r1599, %r1598, %r1576;
	shf.l.wrap.b32 	%r1600, %r1599, %r1599, 1;
	add.s32 	%r1601, %r538, %r1600;
	add.s32 	%r1602, %r1601, %r537;
	add.s32 	%r1603, %r1602, %r1596;
	add.s32 	%r547, %r1603, -1894007588;
	shf.l.wrap.b32 	%r549, %r539, %r539, 30;
	shf.l.wrap.b32 	%r1604, %r547, %r547, 5;
	// begin inline asm
	lop3.b32 %r542, %r543, %r549, %r545, 232;
	// end inline asm
	xor.b32  	%r1605, %r1496, %r1480;
	xor.b32  	%r1606, %r1605, %r1544;
	xor.b32  	%r1607, %r1606, %r1584;
	shf.l.wrap.b32 	%r1608, %r1607, %r1607, 1;
	add.s32 	%r1609, %r542, %r1608;
	add.s32 	%r1610, %r1609, %r541;
	add.s32 	%r1611, %r1610, %r1604;
	add.s32 	%r551, %r1611, -1894007588;
	shf.l.wrap.b32 	%r553, %r543, %r543, 30;
	shf.l.wrap.b32 	%r1612, %r551, %r551, 5;
	// begin inline asm
	lop3.b32 %r546, %r547, %r553, %r549, 232;
	// end inline asm
	xor.b32  	%r1613, %r1504, %r1488;
	xor.b32  	%r1614, %r1613, %r1552;
	xor.b32  	%r1615, %r1614, %r1592;
	shf.l.wrap.b32 	%r1616, %r1615, %r1615, 1;
	add.s32 	%r1617, %r546, %r1616;
	add.s32 	%r1618, %r1617, %r545;
	add.s32 	%r1619, %r1618, %r1612;
	add.s32 	%r555, %r1619, -1894007588;
	shf.l.wrap.b32 	%r557, %r547, %r547, 30;
	shf.l.wrap.b32 	%r1620, %r555, %r555, 5;
	// begin inline asm
	lop3.b32 %r550, %r551, %r557, %r553, 232;
	// end inline asm
	xor.b32  	%r1621, %r1512, %r1496;
	xor.b32  	%r1622, %r1621, %r1560;
	xor.b32  	%r1623, %r1622, %r1600;
	shf.l.wrap.b32 	%r1624, %r1623, %r1623, 1;
	add.s32 	%r1625, %r550, %r1624;
	add.s32 	%r1626, %r1625, %r549;
	add.s32 	%r1627, %r1626, %r1620;
	add.s32 	%r559, %r1627, -1894007588;
	shf.l.wrap.b32 	%r561, %r551, %r551, 30;
	shf.l.wrap.b32 	%r1628, %r559, %r559, 5;
	// begin inline asm
	lop3.b32 %r554, %r555, %r561, %r557, 232;
	// end inline asm
	xor.b32  	%r1629, %r1520, %r1504;
	xor.b32  	%r1630, %r1629, %r1568;
	xor.b32  	%r1631, %r1630, %r1608;
	shf.l.wrap.b32 	%r1632, %r1631, %r1631, 1;
	add.s32 	%r1633, %r554, %r1632;
	add.s32 	%r1634, %r1633, %r553;
	add.s32 	%r1635, %r1634, %r1628;
	add.s32 	%r563, %r1635, -1894007588;
	shf.l.wrap.b32 	%r565, %r555, %r555, 30;
	shf.l.wrap.b32 	%r1636, %r563, %r563, 5;
	// begin inline asm
	lop3.b32 %r558, %r559, %r565, %r561, 232;
	// end inline asm
	xor.b32  	%r1637, %r1528, %r1512;
	xor.b32  	%r1638, %r1637, %r1576;
	xor.b32  	%r1639, %r1638, %r1616;
	shf.l.wrap.b32 	%r1640, %r1639, %r1639, 1;
	add.s32 	%r1641, %r558, %r1640;
	add.s32 	%r1642, %r1641, %r557;
	add.s32 	%r1643, %r1642, %r1636;
	add.s32 	%r567, %r1643, -1894007588;
	shf.l.wrap.b32 	%r569, %r559, %r559, 30;
	shf.l.wrap.b32 	%r1644, %r567, %r567, 5;
	// begin inline asm
	lop3.b32 %r562, %r563, %r569, %r565, 232;
	// end inline asm
	xor.b32  	%r1645, %r1536, %r1520;
	xor.b32  	%r1646, %r1645, %r1584;
	xor.b32  	%r1647, %r1646, %r1624;
	shf.l.wrap.b32 	%r1648, %r1647, %r1647, 1;
	add.s32 	%r1649, %r562, %r1648;
	add.s32 	%r1650, %r1649, %r561;
	add.s32 	%r1651, %r1650, %r1644;
	add.s32 	%r571, %r1651, -1894007588;
	shf.l.wrap.b32 	%r573, %r563, %r563, 30;
	shf.l.wrap.b32 	%r1652, %r571, %r571, 5;
	// begin inline asm
	lop3.b32 %r566, %r567, %r573, %r569, 232;
	// end inline asm
	xor.b32  	%r1653, %r1544, %r1528;
	xor.b32  	%r1654, %r1653, %r1592;
	xor.b32  	%r1655, %r1654, %r1632;
	shf.l.wrap.b32 	%r1656, %r1655, %r1655, 1;
	add.s32 	%r1657, %r566, %r1656;
	add.s32 	%r1658, %r1657, %r565;
	add.s32 	%r1659, %r1658, %r1652;
	add.s32 	%r575, %r1659, -1894007588;
	shf.l.wrap.b32 	%r577, %r567, %r567, 30;
	shf.l.wrap.b32 	%r1660, %r575, %r575, 5;
	// begin inline asm
	lop3.b32 %r570, %r571, %r577, %r573, 232;
	// end inline asm
	xor.b32  	%r1661, %r1552, %r1536;
	xor.b32  	%r1662, %r1661, %r1600;
	xor.b32  	%r1663, %r1662, %r1640;
	shf.l.wrap.b32 	%r1664, %r1663, %r1663, 1;
	add.s32 	%r1665, %r570, %r1664;
	add.s32 	%r1666, %r1665, %r569;
	add.s32 	%r1667, %r1666, %r1660;
	add.s32 	%r579, %r1667, -1894007588;
	shf.l.wrap.b32 	%r581, %r571, %r571, 30;
	shf.l.wrap.b32 	%r1668, %r579, %r579, 5;
	// begin inline asm
	lop3.b32 %r574, %r575, %r581, %r577, 232;
	// end inline asm
	xor.b32  	%r1669, %r1560, %r1544;
	xor.b32  	%r1670, %r1669, %r1608;
	xor.b32  	%r1671, %r1670, %r1648;
	shf.l.wrap.b32 	%r1672, %r1671, %r1671, 1;
	add.s32 	%r1673, %r574, %r1672;
	add.s32 	%r1674, %r1673, %r573;
	add.s32 	%r1675, %r1674, %r1668;
	add.s32 	%r583, %r1675, -1894007588;
	shf.l.wrap.b32 	%r585, %r575, %r575, 30;
	shf.l.wrap.b32 	%r1676, %r583, %r583, 5;
	// begin inline asm
	lop3.b32 %r578, %r579, %r585, %r581, 232;
	// end inline asm
	xor.b32  	%r1677, %r1568, %r1552;
	xor.b32  	%r1678, %r1677, %r1616;
	xor.b32  	%r1679, %r1678, %r1656;
	shf.l.wrap.b32 	%r1680, %r1679, %r1679, 1;
	add.s32 	%r1681, %r578, %r1680;
	add.s32 	%r1682, %r1681, %r577;
	add.s32 	%r1683, %r1682, %r1676;
	add.s32 	%r587, %r1683, -1894007588;
	shf.l.wrap.b32 	%r589, %r579, %r579, 30;
	shf.l.wrap.b32 	%r1684, %r587, %r587, 5;
	// begin inline asm
	lop3.b32 %r582, %r583, %r589, %r585, 232;
	// end inline asm
	xor.b32  	%r1685, %r1576, %r1560;
	xor.b32  	%r1686, %r1685, %r1624;
	xor.b32  	%r1687, %r1686, %r1664;
	shf.l.wrap.b32 	%r1688, %r1687, %r1687, 1;
	add.s32 	%r1689, %r582, %r1688;
	add.s32 	%r1690, %r1689, %r581;
	add.s32 	%r1691, %r1690, %r1684;
	add.s32 	%r591, %r1691, -1894007588;
	shf.l.wrap.b32 	%r593, %r583, %r583, 30;
	shf.l.wrap.b32 	%r1692, %r591, %r591, 5;
	// begin inline asm
	lop3.b32 %r586, %r587, %r593, %r589, 232;
	// end inline asm
	xor.b32  	%r1693, %r1584, %r1568;
	xor.b32  	%r1694, %r1693, %r1632;
	xor.b32  	%r1695, %r1694, %r1672;
	shf.l.wrap.b32 	%r1696, %r1695, %r1695, 1;
	add.s32 	%r1697, %r586, %r1696;
	add.s32 	%r1698, %r1697, %r585;
	add.s32 	%r1699, %r1698, %r1692;
	add.s32 	%r595, %r1699, -1894007588;
	shf.l.wrap.b32 	%r597, %r587, %r587, 30;
	shf.l.wrap.b32 	%r1700, %r595, %r595, 5;
	// begin inline asm
	lop3.b32 %r590, %r591, %r597, %r593, 232;
	// end inline asm
	xor.b32  	%r1701, %r1592, %r1576;
	xor.b32  	%r1702, %r1701, %r1640;
	xor.b32  	%r1703, %r1702, %r1680;
	shf.l.wrap.b32 	%r1704, %r1703, %r1703, 1;
	add.s32 	%r1705, %r590, %r1704;
	add.s32 	%r1706, %r1705, %r589;
	add.s32 	%r1707, %r1706, %r1700;
	add.s32 	%r599, %r1707, -1894007588;
	shf.l.wrap.b32 	%r601, %r591, %r591, 30;
	shf.l.wrap.b32 	%r1708, %r599, %r599, 5;
	// begin inline asm
	lop3.b32 %r594, %r595, %r601, %r597, 232;
	// end inline asm
	xor.b32  	%r1709, %r1600, %r1584;
	xor.b32  	%r1710, %r1709, %r1648;
	xor.b32  	%r1711, %r1710, %r1688;
	shf.l.wrap.b32 	%r1712, %r1711, %r1711, 1;
	add.s32 	%r1713, %r594, %r1712;
	add.s32 	%r1714, %r1713, %r593;
	add.s32 	%r1715, %r1714, %r1708;
	add.s32 	%r603, %r1715, -1894007588;
	shf.l.wrap.b32 	%r605, %r595, %r595, 30;
	shf.l.wrap.b32 	%r1716, %r603, %r603, 5;
	// begin inline asm
	lop3.b32 %r598, %r599, %r605, %r601, 232;
	// end inline asm
	xor.b32  	%r1717, %r1608, %r1592;
	xor.b32  	%r1718, %r1717, %r1656;
	xor.b32  	%r1719, %r1718, %r1696;
	shf.l.wrap.b32 	%r1720, %r1719, %r1719, 1;
	add.s32 	%r1721, %r598, %r1720;
	add.s32 	%r1722, %r1721, %r597;
	add.s32 	%r1723, %r1722, %r1716;
	add.s32 	%r607, %r1723, -1894007588;
	shf.l.wrap.b32 	%r609, %r599, %r599, 30;
	shf.l.wrap.b32 	%r1724, %r607, %r607, 5;
	// begin inline asm
	lop3.b32 %r602, %r603, %r609, %r605, 232;
	// end inline asm
	xor.b32  	%r1725, %r1616, %r1600;
	xor.b32  	%r1726, %r1725, %r1664;
	xor.b32  	%r1727, %r1726, %r1704;
	shf.l.wrap.b32 	%r1728, %r1727, %r1727, 1;
	add.s32 	%r1729, %r602, %r1728;
	add.s32 	%r1730, %r1729, %r601;
	add.s32 	%r1731, %r1730, %r1724;
	add.s32 	%r611, %r1731, -1894007588;
	shf.l.wrap.b32 	%r613, %r603, %r603, 30;
	shf.l.wrap.b32 	%r1732, %r611, %r611, 5;
	// begin inline asm
	lop3.b32 %r606, %r607, %r613, %r609, 232;
	// end inline asm
	xor.b32  	%r1733, %r1624, %r1608;
	xor.b32  	%r1734, %r1733, %r1672;
	xor.b32  	%r1735, %r1734, %r1712;
	shf.l.wrap.b32 	%r1736, %r1735, %r1735, 1;
	add.s32 	%r1737, %r606, %r1736;
	add.s32 	%r1738, %r1737, %r605;
	add.s32 	%r1739, %r1738, %r1732;
	add.s32 	%r615, %r1739, -1894007588;
	shf.l.wrap.b32 	%r617, %r607, %r607, 30;
	shf.l.wrap.b32 	%r1740, %r615, %r615, 5;
	// begin inline asm
	lop3.b32 %r610, %r611, %r617, %r613, 232;
	// end inline asm
	xor.b32  	%r1741, %r1632, %r1616;
	xor.b32  	%r1742, %r1741, %r1680;
	xor.b32  	%r1743, %r1742, %r1720;
	shf.l.wrap.b32 	%r1744, %r1743, %r1743, 1;
	add.s32 	%r1745, %r610, %r1744;
	add.s32 	%r1746, %r1745, %r609;
	add.s32 	%r1747, %r1746, %r1740;
	add.s32 	%r619, %r1747, -1894007588;
	shf.l.wrap.b32 	%r621, %r611, %r611, 30;
	shf.l.wrap.b32 	%r1748, %r619, %r619, 5;
	// begin inline asm
	lop3.b32 %r614, %r615, %r621, %r617, 150;
	// end inline asm
	xor.b32  	%r1749, %r1640, %r1624;
	xor.b32  	%r1750, %r1749, %r1688;
	xor.b32  	%r1751, %r1750, %r1728;
	shf.l.wrap.b32 	%r1752, %r1751, %r1751, 1;
	add.s32 	%r1753, %r614, %r1752;
	add.s32 	%r1754, %r1753, %r613;
	add.s32 	%r1755, %r1754, %r1748;
	add.s32 	%r623, %r1755, -899497514;
	shf.l.wrap.b32 	%r625, %r615, %r615, 30;
	shf.l.wrap.b32 	%r1756, %r623, %r623, 5;
	// begin inline asm
	lop3.b32 %r618, %r619, %r625, %r621, 150;
	// end inline asm
	xor.b32  	%r1757, %r1648, %r1632;
	xor.b32  	%r1758, %r1757, %r1696;
	xor.b32  	%r1759, %r1758, %r1736;
	shf.l.wrap.b32 	%r1760, %r1759, %r1759, 1;
	add.s32 	%r1761, %r618, %r1760;
	add.s32 	%r1762, %r1761, %r617;
	add.s32 	%r1763, %r1762, %r1756;
	add.s32 	%r627, %r1763, -899497514;
	shf.l.wrap.b32 	%r629, %r619, %r619, 30;
	shf.l.wrap.b32 	%r1764, %r627, %r627, 5;
	// begin inline asm
	lop3.b32 %r622, %r623, %r629, %r625, 150;
	// end inline asm
	xor.b32  	%r1765, %r1656, %r1640;
	xor.b32  	%r1766, %r1765, %r1704;
	xor.b32  	%r1767, %r1766, %r1744;
	shf.l.wrap.b32 	%r1768, %r1767, %r1767, 1;
	add.s32 	%r1769, %r622, %r1768;
	add.s32 	%r1770, %r1769, %r621;
	add.s32 	%r1771, %r1770, %r1764;
	add.s32 	%r631, %r1771, -899497514;
	shf.l.wrap.b32 	%r633, %r623, %r623, 30;
	shf.l.wrap.b32 	%r1772, %r631, %r631, 5;
	// begin inline asm
	lop3.b32 %r626, %r627, %r633, %r629, 150;
	// end inline asm
	xor.b32  	%r1773, %r1664, %r1648;
	xor.b32  	%r1774, %r1773, %r1712;
	xor.b32  	%r1775, %r1774, %r1752;
	shf.l.wrap.b32 	%r1776, %r1775, %r1775, 1;
	add.s32 	%r1777, %r626, %r1776;
	add.s32 	%r1778, %r1777, %r625;
	add.s32 	%r1779, %r1778, %r1772;
	add.s32 	%r635, %r1779, -899497514;
	shf.l.wrap.b32 	%r637, %r627, %r627, 30;
	shf.l.wrap.b32 	%r1780, %r635, %r635, 5;
	// begin inline asm
	lop3.b32 %r630, %r631, %r637, %r633, 150;
	// end inline asm
	xor.b32  	%r1781, %r1672, %r1656;
	xor.b32  	%r1782, %r1781, %r1720;
	xor.b32  	%r1783, %r1782, %r1760;
	shf.l.wrap.b32 	%r1784, %r1783, %r1783, 1;
	add.s32 	%r1785, %r630, %r1784;
	add.s32 	%r1786, %r1785, %r629;
	add.s32 	%r1787, %r1786, %r1780;
	add.s32 	%r639, %r1787, -899497514;
	shf.l.wrap.b32 	%r641, %r631, %r631, 30;
	shf.l.wrap.b32 	%r1788, %r639, %r639, 5;
	// begin inline asm
	lop3.b32 %r634, %r635, %r641, %r637, 150;
	// end inline asm
	xor.b32  	%r1789, %r1680, %r1664;
	xor.b32  	%r1790, %r1789, %r1728;
	xor.b32  	%r1791, %r1790, %r1768;
	shf.l.wrap.b32 	%r1792, %r1791, %r1791, 1;
	add.s32 	%r1793, %r634, %r1792;
	add.s32 	%r1794, %r1793, %r633;
	add.s32 	%r1795, %r1794, %r1788;
	add.s32 	%r643, %r1795, -899497514;
	shf.l.wrap.b32 	%r645, %r635, %r635, 30;
	shf.l.wrap.b32 	%r1796, %r643, %r643, 5;
	// begin inline asm
	lop3.b32 %r638, %r639, %r645, %r641, 150;
	// end inline asm
	xor.b32  	%r1797, %r1688, %r1672;
	xor.b32  	%r1798, %r1797, %r1736;
	xor.b32  	%r1799, %r1798, %r1776;
	shf.l.wrap.b32 	%r1800, %r1799, %r1799, 1;
	add.s32 	%r1801, %r638, %r1800;
	add.s32 	%r1802, %r1801, %r637;
	add.s32 	%r1803, %r1802, %r1796;
	add.s32 	%r647, %r1803, -899497514;
	shf.l.wrap.b32 	%r649, %r639, %r639, 30;
	shf.l.wrap.b32 	%r1804, %r647, %r647, 5;
	// begin inline asm
	lop3.b32 %r642, %r643, %r649, %r645, 150;
	// end inline asm
	xor.b32  	%r1805, %r1696, %r1680;
	xor.b32  	%r1806, %r1805, %r1744;
	xor.b32  	%r1807, %r1806, %r1784;
	shf.l.wrap.b32 	%r1808, %r1807, %r1807, 1;
	add.s32 	%r1809, %r642, %r1808;
	add.s32 	%r1810, %r1809, %r641;
	add.s32 	%r1811, %r1810, %r1804;
	add.s32 	%r651, %r1811, -899497514;
	shf.l.wrap.b32 	%r653, %r643, %r643, 30;
	shf.l.wrap.b32 	%r1812, %r651, %r651, 5;
	// begin inline asm
	lop3.b32 %r646, %r647, %r653, %r649, 150;
	// end inline asm
	xor.b32  	%r1813, %r1704, %r1688;
	xor.b32  	%r1814, %r1813, %r1752;
	xor.b32  	%r1815, %r1814, %r1792;
	shf.l.wrap.b32 	%r1816, %r1815, %r1815, 1;
	add.s32 	%r1817, %r646, %r1816;
	add.s32 	%r1818, %r1817, %r645;
	add.s32 	%r1819, %r1818, %r1812;
	add.s32 	%r655, %r1819, -899497514;
	shf.l.wrap.b32 	%r657, %r647, %r647, 30;
	shf.l.wrap.b32 	%r1820, %r655, %r655, 5;
	// begin inline asm
	lop3.b32 %r650, %r651, %r657, %r653, 150;
	// end inline asm
	xor.b32  	%r1821, %r1712, %r1696;
	xor.b32  	%r1822, %r1821, %r1760;
	xor.b32  	%r1823, %r1822, %r1800;
	shf.l.wrap.b32 	%r1824, %r1823, %r1823, 1;
	add.s32 	%r1825, %r650, %r1824;
	add.s32 	%r1826, %r1825, %r649;
	add.s32 	%r1827, %r1826, %r1820;
	add.s32 	%r659, %r1827, -899497514;
	shf.l.wrap.b32 	%r661, %r651, %r651, 30;
	shf.l.wrap.b32 	%r1828, %r659, %r659, 5;
	// begin inline asm
	lop3.b32 %r654, %r655, %r661, %r657, 150;
	// end inline asm
	xor.b32  	%r1829, %r1720, %r1704;
	xor.b32  	%r1830, %r1829, %r1768;
	xor.b32  	%r1831, %r1830, %r1808;
	shf.l.wrap.b32 	%r1832, %r1831, %r1831, 1;
	add.s32 	%r1833, %r654, %r1832;
	add.s32 	%r1834, %r1833, %r653;
	add.s32 	%r1835, %r1834, %r1828;
	add.s32 	%r663, %r1835, -899497514;
	shf.l.wrap.b32 	%r665, %r655, %r655, 30;
	shf.l.wrap.b32 	%r1836, %r663, %r663, 5;
	// begin inline asm
	lop3.b32 %r658, %r659, %r665, %r661, 150;
	// end inline asm
	xor.b32  	%r1837, %r1728, %r1712;
	xor.b32  	%r1838, %r1837, %r1776;
	xor.b32  	%r1839, %r1838, %r1816;
	shf.l.wrap.b32 	%r1840, %r1839, %r1839, 1;
	add.s32 	%r1841, %r658, %r1840;
	add.s32 	%r1842, %r1841, %r657;
	add.s32 	%r1843, %r1842, %r1836;
	add.s32 	%r667, %r1843, -899497514;
	shf.l.wrap.b32 	%r669, %r659, %r659, 30;
	shf.l.wrap.b32 	%r1844, %r667, %r667, 5;
	// begin inline asm
	lop3.b32 %r662, %r663, %r669, %r665, 150;
	// end inline asm
	xor.b32  	%r1845, %r1736, %r1720;
	xor.b32  	%r1846, %r1845, %r1784;
	xor.b32  	%r1847, %r1846, %r1824;
	shf.l.wrap.b32 	%r1848, %r1847, %r1847, 1;
	add.s32 	%r1849, %r662, %r1848;
	add.s32 	%r1850, %r1849, %r661;
	add.s32 	%r1851, %r1850, %r1844;
	add.s32 	%r671, %r1851, -899497514;
	shf.l.wrap.b32 	%r673, %r663, %r663, 30;
	shf.l.wrap.b32 	%r1852, %r671, %r671, 5;
	// begin inline asm
	lop3.b32 %r666, %r667, %r673, %r669, 150;
	// end inline asm
	xor.b32  	%r1853, %r1744, %r1728;
	xor.b32  	%r1854, %r1853, %r1792;
	xor.b32  	%r1855, %r1854, %r1832;
	shf.l.wrap.b32 	%r1856, %r1855, %r1855, 1;
	add.s32 	%r1857, %r666, %r1856;
	add.s32 	%r1858, %r1857, %r665;
	add.s32 	%r1859, %r1858, %r1852;
	add.s32 	%r675, %r1859, -899497514;
	shf.l.wrap.b32 	%r677, %r667, %r667, 30;
	shf.l.wrap.b32 	%r1860, %r675, %r675, 5;
	// begin inline asm
	lop3.b32 %r670, %r671, %r677, %r673, 150;
	// end inline asm
	xor.b32  	%r1861, %r1752, %r1736;
	xor.b32  	%r1862, %r1861, %r1800;
	xor.b32  	%r1863, %r1862, %r1840;
	shf.l.wrap.b32 	%r1864, %r1863, %r1863, 1;
	add.s32 	%r1865, %r670, %r1864;
	add.s32 	%r1866, %r1865, %r669;
	add.s32 	%r1867, %r1866, %r1860;
	add.s32 	%r679, %r1867, -899497514;
	shf.l.wrap.b32 	%r681, %r671, %r671, 30;
	shf.l.wrap.b32 	%r1868, %r679, %r679, 5;
	// begin inline asm
	lop3.b32 %r674, %r675, %r681, %r677, 150;
	// end inline asm
	xor.b32  	%r1869, %r1760, %r1744;
	xor.b32  	%r1870, %r1869, %r1808;
	xor.b32  	%r1871, %r1870, %r1848;
	shf.l.wrap.b32 	%r1872, %r1871, %r1871, 1;
	add.s32 	%r1873, %r674, %r1872;
	add.s32 	%r1874, %r1873, %r673;
	add.s32 	%r1875, %r1874, %r1868;
	add.s32 	%r683, %r1875, -899497514;
	shf.l.wrap.b32 	%r685, %r675, %r675, 30;
	shf.l.wrap.b32 	%r1876, %r683, %r683, 5;
	// begin inline asm
	lop3.b32 %r678, %r679, %r685, %r681, 150;
	// end inline asm
	xor.b32  	%r1877, %r1768, %r1752;
	xor.b32  	%r1878, %r1877, %r1816;
	xor.b32  	%r1879, %r1878, %r1856;
	shf.l.wrap.b32 	%r1880, %r1879, %r1879, 1;
	add.s32 	%r1881, %r678, %r1880;
	add.s32 	%r1882, %r1881, %r677;
	add.s32 	%r1883, %r1882, %r1876;
	add.s32 	%r687, %r1883, -899497514;
	shf.l.wrap.b32 	%r689, %r679, %r679, 30;
	shf.l.wrap.b32 	%r1884, %r687, %r687, 5;
	// begin inline asm
	lop3.b32 %r682, %r683, %r689, %r685, 150;
	// end inline asm
	xor.b32  	%r1885, %r1776, %r1760;
	xor.b32  	%r1886, %r1885, %r1824;
	xor.b32  	%r1887, %r1886, %r1864;
	shf.l.wrap.b32 	%r1888, %r1887, %r1887, 1;
	add.s32 	%r1889, %r682, %r1888;
	add.s32 	%r1890, %r1889, %r681;
	add.s32 	%r1891, %r1890, %r1884;
	add.s32 	%r691, %r1891, -899497514;
	shf.l.wrap.b32 	%r693, %r683, %r683, 30;
	shf.l.wrap.b32 	%r1892, %r691, %r691, 5;
	// begin inline asm
	lop3.b32 %r686, %r687, %r693, %r689, 150;
	// end inline asm
	xor.b32  	%r1893, %r1784, %r1768;
	xor.b32  	%r1894, %r1893, %r1832;
	xor.b32  	%r1895, %r1894, %r1872;
	shf.l.wrap.b32 	%r1896, %r1895, %r1895, 1;
	add.s32 	%r1897, %r686, %r1896;
	add.s32 	%r1898, %r1897, %r685;
	add.s32 	%r1899, %r1898, %r1892;
	add.s32 	%r1900, %r1899, -899497514;
	shf.l.wrap.b32 	%r692, %r687, %r687, 30;
	shf.l.wrap.b32 	%r1901, %r1900, %r1900, 5;
	// begin inline asm
	lop3.b32 %r690, %r691, %r692, %r693, 150;
	// end inline asm
	xor.b32  	%r1902, %r1792, %r1776;
	xor.b32  	%r1903, %r1902, %r1840;
	xor.b32  	%r1904, %r1903, %r1880;
	shf.l.wrap.b32 	%r1905, %r1904, %r1904, 1;
	shf.l.wrap.b32 	%r7, %r691, %r691, 30;
	add.s32 	%r1906, %r690, %r1905;
	add.s32 	%r1907, %r1906, %r689;
	add.s32 	%r1908, %r1907, %r1901;
	add.s32 	%r8, %r1908, 833086679;
	add.s32 	%r9, %r1899, -1171231393;
	add.s32 	%r10, %r7, -1732584194;
	add.s32 	%r11, %r692, 271733878;
	add.s32 	%r12, %r693, -1009589776;
	st.global.u32 	[%rd13+40], %r8;
	st.global.u32 	[%rd13+44], %r9;
	st.global.u32 	[%rd13+48], %r10;
	st.global.u32 	[%rd13+52], %r11;
	st.global.u32 	[%rd13+56], %r12;
	ld.global.u32 	%r13, [%rd4];
	setp.lt.u32 	%p1, %r13, 64;
	@%p1 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;

$L__BB0_3:
	mov.u32 	%r5628, 0;
	mov.u32 	%r5623, %r13;
	bra.uni 	$L__BB0_4;

$L__BB0_1:
	mov.u32 	%r1909, 0;
	mov.u32 	%r5623, %r13;
	mov.u32 	%r5616, %r1909;

$L__BB0_2:
	cvt.u64.u32 	%rd14, %r5616;
	add.s64 	%rd15, %rd4, %rd14;
	ld.global.u32 	%r2230, [%rd15+12];
	mov.u32 	%r2231, 291;
	ld.global.u32 	%r2233, [%rd15+16];
	ld.global.u32 	%r2234, [%rd15+20];
	ld.global.u32 	%r2235, [%rd15+24];
	prmt.b32 	%r2236, %r2235, %r1909, %r2231;
	prmt.b32 	%r2237, %r2234, %r1909, %r2231;
	prmt.b32 	%r2238, %r2233, %r1909, %r2231;
	prmt.b32 	%r2239, %r2230, %r1909, %r2231;
	st.local.v4.u32 	[%rd1], {%r2239, %r2238, %r2237, %r2236};
	ld.global.u32 	%r2240, [%rd15+28];
	ld.global.u32 	%r2241, [%rd15+32];
	ld.global.u32 	%r2242, [%rd15+36];
	ld.global.u32 	%r2243, [%rd15+40];
	prmt.b32 	%r2244, %r2243, %r1909, %r2231;
	prmt.b32 	%r2245, %r2242, %r1909, %r2231;
	prmt.b32 	%r2246, %r2241, %r1909, %r2231;
	prmt.b32 	%r2247, %r2240, %r1909, %r2231;
	st.local.v4.u32 	[%rd1+16], {%r2247, %r2246, %r2245, %r2244};
	ld.global.u32 	%r2248, [%rd15+44];
	ld.global.u32 	%r2249, [%rd15+48];
	ld.global.u32 	%r2250, [%rd15+52];
	ld.global.u32 	%r2251, [%rd15+56];
	prmt.b32 	%r2252, %r2251, %r1909, %r2231;
	prmt.b32 	%r2253, %r2250, %r1909, %r2231;
	prmt.b32 	%r2254, %r2249, %r1909, %r2231;
	prmt.b32 	%r2255, %r2248, %r1909, %r2231;
	st.local.v4.u32 	[%rd1+32], {%r2255, %r2254, %r2253, %r2252};
	ld.global.u32 	%r2256, [%rd15+60];
	ld.global.u32 	%r2257, [%rd15+64];
	ld.global.u32 	%r2258, [%rd15+68];
	ld.global.u32 	%r2259, [%rd15+72];
	prmt.b32 	%r2260, %r2259, %r1909, %r2231;
	prmt.b32 	%r2261, %r2258, %r1909, %r2231;
	prmt.b32 	%r2262, %r2257, %r1909, %r2231;
	prmt.b32 	%r2263, %r2256, %r1909, %r2231;
	st.local.v4.u32 	[%rd1+48], {%r2263, %r2262, %r2261, %r2260};
	add.s32 	%r5628, %r5616, 64;
	add.s32 	%r5623, %r5623, -64;
	shf.l.wrap.b32 	%r2264, %r5621, %r5621, 5;
	add.s32 	%r2265, %r2264, %r5617;
	// begin inline asm
	lop3.b32 %r1910, %r5620, %r5619, %r5618, 202;
	// end inline asm
	add.s32 	%r2266, %r2265, %r1910;
	add.s32 	%r2267, %r2266, %r2239;
	add.s32 	%r1919, %r2267, 1518500249;
	shf.l.wrap.b32 	%r2268, %r1919, %r1919, 5;
	shf.l.wrap.b32 	%r1921, %r5620, %r5620, 30;
	// begin inline asm
	lop3.b32 %r1914, %r5621, %r1921, %r5619, 202;
	// end inline asm
	add.s32 	%r2269, %r5618, %r1914;
	add.s32 	%r2270, %r2269, %r2238;
	add.s32 	%r2271, %r2270, %r2268;
	add.s32 	%r1923, %r2271, 1518500249;
	shf.l.wrap.b32 	%r2272, %r1923, %r1923, 5;
	shf.l.wrap.b32 	%r1925, %r5621, %r5621, 30;
	// begin inline asm
	lop3.b32 %r1918, %r1919, %r1925, %r1921, 202;
	// end inline asm
	add.s32 	%r2273, %r5619, %r1918;
	add.s32 	%r2274, %r2273, %r2237;
	add.s32 	%r2275, %r2274, %r2272;
	add.s32 	%r1927, %r2275, 1518500249;
	shf.l.wrap.b32 	%r1929, %r1919, %r1919, 30;
	shf.l.wrap.b32 	%r2276, %r1927, %r1927, 5;
	// begin inline asm
	lop3.b32 %r1922, %r1923, %r1929, %r1925, 202;
	// end inline asm
	add.s32 	%r2277, %r1921, %r1922;
	add.s32 	%r2278, %r2277, %r2236;
	add.s32 	%r2279, %r2278, %r2276;
	add.s32 	%r1931, %r2279, 1518500249;
	shf.l.wrap.b32 	%r1933, %r1923, %r1923, 30;
	shf.l.wrap.b32 	%r2280, %r1931, %r1931, 5;
	// begin inline asm
	lop3.b32 %r1926, %r1927, %r1933, %r1929, 202;
	// end inline asm
	add.s32 	%r2281, %r1925, %r1926;
	add.s32 	%r2282, %r2281, %r2247;
	add.s32 	%r2283, %r2282, %r2280;
	add.s32 	%r1935, %r2283, 1518500249;
	shf.l.wrap.b32 	%r1937, %r1927, %r1927, 30;
	shf.l.wrap.b32 	%r2284, %r1935, %r1935, 5;
	// begin inline asm
	lop3.b32 %r1930, %r1931, %r1937, %r1933, 202;
	// end inline asm
	add.s32 	%r2285, %r1929, %r1930;
	add.s32 	%r2286, %r2285, %r2246;
	add.s32 	%r2287, %r2286, %r2284;
	add.s32 	%r1939, %r2287, 1518500249;
	shf.l.wrap.b32 	%r1941, %r1931, %r1931, 30;
	shf.l.wrap.b32 	%r2288, %r1939, %r1939, 5;
	// begin inline asm
	lop3.b32 %r1934, %r1935, %r1941, %r1937, 202;
	// end inline asm
	add.s32 	%r2289, %r1933, %r1934;
	add.s32 	%r2290, %r2289, %r2245;
	add.s32 	%r2291, %r2290, %r2288;
	add.s32 	%r1943, %r2291, 1518500249;
	shf.l.wrap.b32 	%r1945, %r1935, %r1935, 30;
	shf.l.wrap.b32 	%r2292, %r1943, %r1943, 5;
	// begin inline asm
	lop3.b32 %r1938, %r1939, %r1945, %r1941, 202;
	// end inline asm
	add.s32 	%r2293, %r1938, %r2244;
	add.s32 	%r2294, %r2293, %r1937;
	add.s32 	%r2295, %r2294, %r2292;
	add.s32 	%r1947, %r2295, 1518500249;
	shf.l.wrap.b32 	%r1949, %r1939, %r1939, 30;
	shf.l.wrap.b32 	%r2296, %r1947, %r1947, 5;
	// begin inline asm
	lop3.b32 %r1942, %r1943, %r1949, %r1945, 202;
	// end inline asm
	add.s32 	%r2297, %r1942, %r2255;
	add.s32 	%r2298, %r2297, %r1941;
	add.s32 	%r2299, %r2298, %r2296;
	add.s32 	%r1951, %r2299, 1518500249;
	shf.l.wrap.b32 	%r1953, %r1943, %r1943, 30;
	shf.l.wrap.b32 	%r2300, %r1951, %r1951, 5;
	// begin inline asm
	lop3.b32 %r1946, %r1947, %r1953, %r1949, 202;
	// end inline asm
	add.s32 	%r2301, %r1946, %r2254;
	add.s32 	%r2302, %r2301, %r1945;
	add.s32 	%r2303, %r2302, %r2300;
	add.s32 	%r1955, %r2303, 1518500249;
	shf.l.wrap.b32 	%r1957, %r1947, %r1947, 30;
	shf.l.wrap.b32 	%r2304, %r1955, %r1955, 5;
	// begin inline asm
	lop3.b32 %r1950, %r1951, %r1957, %r1953, 202;
	// end inline asm
	add.s32 	%r2305, %r1950, %r2253;
	add.s32 	%r2306, %r2305, %r1949;
	add.s32 	%r2307, %r2306, %r2304;
	add.s32 	%r1959, %r2307, 1518500249;
	shf.l.wrap.b32 	%r1961, %r1951, %r1951, 30;
	shf.l.wrap.b32 	%r2308, %r1959, %r1959, 5;
	// begin inline asm
	lop3.b32 %r1954, %r1955, %r1961, %r1957, 202;
	// end inline asm
	add.s32 	%r2309, %r1954, %r2252;
	add.s32 	%r2310, %r2309, %r1953;
	add.s32 	%r2311, %r2310, %r2308;
	add.s32 	%r1963, %r2311, 1518500249;
	shf.l.wrap.b32 	%r1965, %r1955, %r1955, 30;
	shf.l.wrap.b32 	%r2312, %r1963, %r1963, 5;
	// begin inline asm
	lop3.b32 %r1958, %r1959, %r1965, %r1961, 202;
	// end inline asm
	add.s32 	%r2313, %r1958, %r2263;
	add.s32 	%r2314, %r2313, %r1957;
	add.s32 	%r2315, %r2314, %r2312;
	add.s32 	%r1967, %r2315, 1518500249;
	shf.l.wrap.b32 	%r1969, %r1959, %r1959, 30;
	shf.l.wrap.b32 	%r2316, %r1967, %r1967, 5;
	// begin inline asm
	lop3.b32 %r1962, %r1963, %r1969, %r1965, 202;
	// end inline asm
	add.s32 	%r2317, %r1962, %r2262;
	add.s32 	%r2318, %r2317, %r1961;
	add.s32 	%r2319, %r2318, %r2316;
	add.s32 	%r1971, %r2319, 1518500249;
	shf.l.wrap.b32 	%r1973, %r1963, %r1963, 30;
	shf.l.wrap.b32 	%r2320, %r1971, %r1971, 5;
	// begin inline asm
	lop3.b32 %r1966, %r1967, %r1973, %r1969, 202;
	// end inline asm
	add.s32 	%r2321, %r1966, %r2261;
	add.s32 	%r2322, %r2321, %r1965;
	add.s32 	%r2323, %r2322, %r2320;
	add.s32 	%r1975, %r2323, 1518500249;
	shf.l.wrap.b32 	%r1977, %r1967, %r1967, 30;
	shf.l.wrap.b32 	%r2324, %r1975, %r1975, 5;
	// begin inline asm
	lop3.b32 %r1970, %r1971, %r1977, %r1973, 202;
	// end inline asm
	add.s32 	%r2325, %r1970, %r2260;
	add.s32 	%r2326, %r2325, %r1969;
	add.s32 	%r2327, %r2326, %r2324;
	add.s32 	%r1979, %r2327, 1518500249;
	shf.l.wrap.b32 	%r1981, %r1971, %r1971, 30;
	shf.l.wrap.b32 	%r2328, %r1979, %r1979, 5;
	// begin inline asm
	lop3.b32 %r1974, %r1975, %r1981, %r1977, 202;
	// end inline asm
	xor.b32  	%r2329, %r2255, %r2262;
	xor.b32  	%r2330, %r2329, %r2237;
	xor.b32  	%r2331, %r2330, %r2239;
	shf.l.wrap.b32 	%r2332, %r2331, %r2331, 1;
	add.s32 	%r2333, %r1974, %r2332;
	add.s32 	%r2334, %r2333, %r1973;
	add.s32 	%r2335, %r2334, %r2328;
	add.s32 	%r1983, %r2335, 1518500249;
	shf.l.wrap.b32 	%r1985, %r1975, %r1975, 30;
	shf.l.wrap.b32 	%r2336, %r1983, %r1983, 5;
	// begin inline asm
	lop3.b32 %r1978, %r1979, %r1985, %r1981, 202;
	// end inline asm
	xor.b32  	%r2337, %r2254, %r2261;
	xor.b32  	%r2338, %r2337, %r2236;
	xor.b32  	%r2339, %r2338, %r2238;
	shf.l.wrap.b32 	%r2340, %r2339, %r2339, 1;
	add.s32 	%r2341, %r1978, %r2340;
	add.s32 	%r2342, %r2341, %r1977;
	add.s32 	%r2343, %r2342, %r2336;
	add.s32 	%r1987, %r2343, 1518500249;
	shf.l.wrap.b32 	%r1989, %r1979, %r1979, 30;
	shf.l.wrap.b32 	%r2344, %r1987, %r1987, 5;
	// begin inline asm
	lop3.b32 %r1982, %r1983, %r1989, %r1985, 202;
	// end inline asm
	xor.b32  	%r2345, %r2253, %r2260;
	xor.b32  	%r2346, %r2345, %r2247;
	xor.b32  	%r2347, %r2346, %r2237;
	shf.l.wrap.b32 	%r2348, %r2347, %r2347, 1;
	add.s32 	%r2349, %r1982, %r2348;
	add.s32 	%r2350, %r2349, %r1981;
	add.s32 	%r2351, %r2350, %r2344;
	add.s32 	%r1991, %r2351, 1518500249;
	shf.l.wrap.b32 	%r1993, %r1983, %r1983, 30;
	shf.l.wrap.b32 	%r2352, %r1991, %r1991, 5;
	// begin inline asm
	lop3.b32 %r1986, %r1987, %r1993, %r1989, 202;
	// end inline asm
	xor.b32  	%r2353, %r2252, %r2332;
	xor.b32  	%r2354, %r2353, %r2246;
	xor.b32  	%r2355, %r2354, %r2236;
	shf.l.wrap.b32 	%r2356, %r2355, %r2355, 1;
	add.s32 	%r2357, %r1986, %r2356;
	add.s32 	%r2358, %r2357, %r1985;
	add.s32 	%r2359, %r2358, %r2352;
	add.s32 	%r1995, %r2359, 1518500249;
	shf.l.wrap.b32 	%r1997, %r1987, %r1987, 30;
	shf.l.wrap.b32 	%r2360, %r1995, %r1995, 5;
	// begin inline asm
	lop3.b32 %r1990, %r1991, %r1997, %r1993, 150;
	// end inline asm
	xor.b32  	%r2361, %r2263, %r2340;
	xor.b32  	%r2362, %r2361, %r2245;
	xor.b32  	%r2363, %r2362, %r2247;
	shf.l.wrap.b32 	%r2364, %r2363, %r2363, 1;
	add.s32 	%r2365, %r1990, %r2364;
	add.s32 	%r2366, %r2365, %r1989;
	add.s32 	%r2367, %r2366, %r2360;
	add.s32 	%r1999, %r2367, 1859775393;
	shf.l.wrap.b32 	%r2001, %r1991, %r1991, 30;
	shf.l.wrap.b32 	%r2368, %r1999, %r1999, 5;
	// begin inline asm
	lop3.b32 %r1994, %r1995, %r2001, %r1997, 150;
	// end inline asm
	xor.b32  	%r2369, %r2262, %r2348;
	xor.b32  	%r2370, %r2369, %r2244;
	xor.b32  	%r2371, %r2370, %r2246;
	shf.l.wrap.b32 	%r2372, %r2371, %r2371, 1;
	add.s32 	%r2373, %r1994, %r2372;
	add.s32 	%r2374, %r2373, %r1993;
	add.s32 	%r2375, %r2374, %r2368;
	add.s32 	%r2003, %r2375, 1859775393;
	shf.l.wrap.b32 	%r2005, %r1995, %r1995, 30;
	shf.l.wrap.b32 	%r2376, %r2003, %r2003, 5;
	// begin inline asm
	lop3.b32 %r1998, %r1999, %r2005, %r2001, 150;
	// end inline asm
	xor.b32  	%r2377, %r2261, %r2356;
	xor.b32  	%r2378, %r2377, %r2255;
	xor.b32  	%r2379, %r2378, %r2245;
	shf.l.wrap.b32 	%r2380, %r2379, %r2379, 1;
	add.s32 	%r2381, %r1998, %r2380;
	add.s32 	%r2382, %r2381, %r1997;
	add.s32 	%r2383, %r2382, %r2376;
	add.s32 	%r2007, %r2383, 1859775393;
	shf.l.wrap.b32 	%r2009, %r1999, %r1999, 30;
	shf.l.wrap.b32 	%r2384, %r2007, %r2007, 5;
	// begin inline asm
	lop3.b32 %r2002, %r2003, %r2009, %r2005, 150;
	// end inline asm
	xor.b32  	%r2385, %r2260, %r2364;
	xor.b32  	%r2386, %r2385, %r2254;
	xor.b32  	%r2387, %r2386, %r2244;
	shf.l.wrap.b32 	%r2388, %r2387, %r2387, 1;
	add.s32 	%r2389, %r2002, %r2388;
	add.s32 	%r2390, %r2389, %r2001;
	add.s32 	%r2391, %r2390, %r2384;
	add.s32 	%r2011, %r2391, 1859775393;
	shf.l.wrap.b32 	%r2013, %r2003, %r2003, 30;
	shf.l.wrap.b32 	%r2392, %r2011, %r2011, 5;
	// begin inline asm
	lop3.b32 %r2006, %r2007, %r2013, %r2009, 150;
	// end inline asm
	xor.b32  	%r2393, %r2372, %r2332;
	xor.b32  	%r2394, %r2393, %r2253;
	xor.b32  	%r2395, %r2394, %r2255;
	shf.l.wrap.b32 	%r2396, %r2395, %r2395, 1;
	add.s32 	%r2397, %r2006, %r2396;
	add.s32 	%r2398, %r2397, %r2005;
	add.s32 	%r2399, %r2398, %r2392;
	add.s32 	%r2015, %r2399, 1859775393;
	shf.l.wrap.b32 	%r2017, %r2007, %r2007, 30;
	shf.l.wrap.b32 	%r2400, %r2015, %r2015, 5;
	// begin inline asm
	lop3.b32 %r2010, %r2011, %r2017, %r2013, 150;
	// end inline asm
	xor.b32  	%r2401, %r2380, %r2340;
	xor.b32  	%r2402, %r2401, %r2252;
	xor.b32  	%r2403, %r2402, %r2254;
	shf.l.wrap.b32 	%r2404, %r2403, %r2403, 1;
	add.s32 	%r2405, %r2010, %r2404;
	add.s32 	%r2406, %r2405, %r2009;
	add.s32 	%r2407, %r2406, %r2400;
	add.s32 	%r2019, %r2407, 1859775393;
	shf.l.wrap.b32 	%r2021, %r2011, %r2011, 30;
	shf.l.wrap.b32 	%r2408, %r2019, %r2019, 5;
	// begin inline asm
	lop3.b32 %r2014, %r2015, %r2021, %r2017, 150;
	// end inline asm
	xor.b32  	%r2409, %r2388, %r2348;
	xor.b32  	%r2410, %r2409, %r2263;
	xor.b32  	%r2411, %r2410, %r2253;
	shf.l.wrap.b32 	%r2412, %r2411, %r2411, 1;
	add.s32 	%r2413, %r2014, %r2412;
	add.s32 	%r2414, %r2413, %r2013;
	add.s32 	%r2415, %r2414, %r2408;
	add.s32 	%r2023, %r2415, 1859775393;
	shf.l.wrap.b32 	%r2025, %r2015, %r2015, 30;
	shf.l.wrap.b32 	%r2416, %r2023, %r2023, 5;
	// begin inline asm
	lop3.b32 %r2018, %r2019, %r2025, %r2021, 150;
	// end inline asm
	xor.b32  	%r2417, %r2396, %r2356;
	xor.b32  	%r2418, %r2417, %r2262;
	xor.b32  	%r2419, %r2418, %r2252;
	shf.l.wrap.b32 	%r2420, %r2419, %r2419, 1;
	add.s32 	%r2421, %r2018, %r2420;
	add.s32 	%r2422, %r2421, %r2017;
	add.s32 	%r2423, %r2422, %r2416;
	add.s32 	%r2027, %r2423, 1859775393;
	shf.l.wrap.b32 	%r2029, %r2019, %r2019, 30;
	shf.l.wrap.b32 	%r2424, %r2027, %r2027, 5;
	// begin inline asm
	lop3.b32 %r2022, %r2023, %r2029, %r2025, 150;
	// end inline asm
	xor.b32  	%r2425, %r2404, %r2364;
	xor.b32  	%r2426, %r2425, %r2261;
	xor.b32  	%r2427, %r2426, %r2263;
	shf.l.wrap.b32 	%r2428, %r2427, %r2427, 1;
	add.s32 	%r2429, %r2022, %r2428;
	add.s32 	%r2430, %r2429, %r2021;
	add.s32 	%r2431, %r2430, %r2424;
	add.s32 	%r2031, %r2431, 1859775393;
	shf.l.wrap.b32 	%r2033, %r2023, %r2023, 30;
	shf.l.wrap.b32 	%r2432, %r2031, %r2031, 5;
	// begin inline asm
	lop3.b32 %r2026, %r2027, %r2033, %r2029, 150;
	// end inline asm
	xor.b32  	%r2433, %r2412, %r2372;
	xor.b32  	%r2434, %r2433, %r2260;
	xor.b32  	%r2435, %r2434, %r2262;
	shf.l.wrap.b32 	%r2436, %r2435, %r2435, 1;
	add.s32 	%r2437, %r2026, %r2436;
	add.s32 	%r2438, %r2437, %r2025;
	add.s32 	%r2439, %r2438, %r2432;
	add.s32 	%r2035, %r2439, 1859775393;
	shf.l.wrap.b32 	%r2037, %r2027, %r2027, 30;
	shf.l.wrap.b32 	%r2440, %r2035, %r2035, 5;
	// begin inline asm
	lop3.b32 %r2030, %r2031, %r2037, %r2033, 150;
	// end inline asm
	xor.b32  	%r2441, %r2380, %r2332;
	xor.b32  	%r2442, %r2441, %r2420;
	xor.b32  	%r2443, %r2442, %r2261;
	shf.l.wrap.b32 	%r2444, %r2443, %r2443, 1;
	add.s32 	%r2445, %r2030, %r2444;
	add.s32 	%r2446, %r2445, %r2029;
	add.s32 	%r2447, %r2446, %r2440;
	add.s32 	%r2039, %r2447, 1859775393;
	shf.l.wrap.b32 	%r2041, %r2031, %r2031, 30;
	shf.l.wrap.b32 	%r2448, %r2039, %r2039, 5;
	// begin inline asm
	lop3.b32 %r2034, %r2035, %r2041, %r2037, 150;
	// end inline asm
	xor.b32  	%r2449, %r2388, %r2340;
	xor.b32  	%r2450, %r2449, %r2428;
	xor.b32  	%r2451, %r2450, %r2260;
	shf.l.wrap.b32 	%r2452, %r2451, %r2451, 1;
	add.s32 	%r2453, %r2034, %r2452;
	add.s32 	%r2454, %r2453, %r2033;
	add.s32 	%r2455, %r2454, %r2448;
	add.s32 	%r2043, %r2455, 1859775393;
	shf.l.wrap.b32 	%r2045, %r2035, %r2035, 30;
	shf.l.wrap.b32 	%r2456, %r2043, %r2043, 5;
	// begin inline asm
	lop3.b32 %r2038, %r2039, %r2045, %r2041, 150;
	// end inline asm
	xor.b32  	%r2457, %r2348, %r2332;
	xor.b32  	%r2458, %r2457, %r2396;
	xor.b32  	%r2459, %r2458, %r2436;
	shf.l.wrap.b32 	%r2460, %r2459, %r2459, 1;
	add.s32 	%r2461, %r2038, %r2460;
	add.s32 	%r2462, %r2461, %r2037;
	add.s32 	%r2463, %r2462, %r2456;
	add.s32 	%r2047, %r2463, 1859775393;
	shf.l.wrap.b32 	%r2049, %r2039, %r2039, 30;
	shf.l.wrap.b32 	%r2464, %r2047, %r2047, 5;
	// begin inline asm
	lop3.b32 %r2042, %r2043, %r2049, %r2045, 150;
	// end inline asm
	xor.b32  	%r2465, %r2356, %r2340;
	xor.b32  	%r2466, %r2465, %r2404;
	xor.b32  	%r2467, %r2466, %r2444;
	shf.l.wrap.b32 	%r2468, %r2467, %r2467, 1;
	add.s32 	%r2469, %r2042, %r2468;
	add.s32 	%r2470, %r2469, %r2041;
	add.s32 	%r2471, %r2470, %r2464;
	add.s32 	%r2051, %r2471, 1859775393;
	shf.l.wrap.b32 	%r2053, %r2043, %r2043, 30;
	shf.l.wrap.b32 	%r2472, %r2051, %r2051, 5;
	// begin inline asm
	lop3.b32 %r2046, %r2047, %r2053, %r2049, 150;
	// end inline asm
	xor.b32  	%r2473, %r2364, %r2348;
	xor.b32  	%r2474, %r2473, %r2412;
	xor.b32  	%r2475, %r2474, %r2452;
	shf.l.wrap.b32 	%r2476, %r2475, %r2475, 1;
	add.s32 	%r2477, %r2046, %r2476;
	add.s32 	%r2478, %r2477, %r2045;
	add.s32 	%r2479, %r2478, %r2472;
	add.s32 	%r2055, %r2479, 1859775393;
	shf.l.wrap.b32 	%r2057, %r2047, %r2047, 30;
	shf.l.wrap.b32 	%r2480, %r2055, %r2055, 5;
	// begin inline asm
	lop3.b32 %r2050, %r2051, %r2057, %r2053, 150;
	// end inline asm
	xor.b32  	%r2481, %r2372, %r2356;
	xor.b32  	%r2482, %r2481, %r2420;
	xor.b32  	%r2483, %r2482, %r2460;
	shf.l.wrap.b32 	%r2484, %r2483, %r2483, 1;
	add.s32 	%r2485, %r2050, %r2484;
	add.s32 	%r2486, %r2485, %r2049;
	add.s32 	%r2487, %r2486, %r2480;
	add.s32 	%r2059, %r2487, 1859775393;
	shf.l.wrap.b32 	%r2061, %r2051, %r2051, 30;
	shf.l.wrap.b32 	%r2488, %r2059, %r2059, 5;
	// begin inline asm
	lop3.b32 %r2054, %r2055, %r2061, %r2057, 150;
	// end inline asm
	xor.b32  	%r2489, %r2380, %r2364;
	xor.b32  	%r2490, %r2489, %r2428;
	xor.b32  	%r2491, %r2490, %r2468;
	shf.l.wrap.b32 	%r2492, %r2491, %r2491, 1;
	add.s32 	%r2493, %r2054, %r2492;
	add.s32 	%r2494, %r2493, %r2053;
	add.s32 	%r2495, %r2494, %r2488;
	add.s32 	%r2063, %r2495, 1859775393;
	shf.l.wrap.b32 	%r2065, %r2055, %r2055, 30;
	shf.l.wrap.b32 	%r2496, %r2063, %r2063, 5;
	// begin inline asm
	lop3.b32 %r2058, %r2059, %r2065, %r2061, 150;
	// end inline asm
	xor.b32  	%r2497, %r2388, %r2372;
	xor.b32  	%r2498, %r2497, %r2436;
	xor.b32  	%r2499, %r2498, %r2476;
	shf.l.wrap.b32 	%r2500, %r2499, %r2499, 1;
	add.s32 	%r2501, %r2058, %r2500;
	add.s32 	%r2502, %r2501, %r2057;
	add.s32 	%r2503, %r2502, %r2496;
	add.s32 	%r2067, %r2503, 1859775393;
	shf.l.wrap.b32 	%r2069, %r2059, %r2059, 30;
	shf.l.wrap.b32 	%r2504, %r2067, %r2067, 5;
	// begin inline asm
	lop3.b32 %r2062, %r2063, %r2069, %r2065, 150;
	// end inline asm
	xor.b32  	%r2505, %r2396, %r2380;
	xor.b32  	%r2506, %r2505, %r2444;
	xor.b32  	%r2507, %r2506, %r2484;
	shf.l.wrap.b32 	%r2508, %r2507, %r2507, 1;
	add.s32 	%r2509, %r2062, %r2508;
	add.s32 	%r2510, %r2509, %r2061;
	add.s32 	%r2511, %r2510, %r2504;
	add.s32 	%r2071, %r2511, 1859775393;
	shf.l.wrap.b32 	%r2073, %r2063, %r2063, 30;
	shf.l.wrap.b32 	%r2512, %r2071, %r2071, 5;
	// begin inline asm
	lop3.b32 %r2066, %r2067, %r2073, %r2069, 150;
	// end inline asm
	xor.b32  	%r2513, %r2404, %r2388;
	xor.b32  	%r2514, %r2513, %r2452;
	xor.b32  	%r2515, %r2514, %r2492;
	shf.l.wrap.b32 	%r2516, %r2515, %r2515, 1;
	add.s32 	%r2517, %r2066, %r2516;
	add.s32 	%r2518, %r2517, %r2065;
	add.s32 	%r2519, %r2518, %r2512;
	add.s32 	%r2075, %r2519, 1859775393;
	shf.l.wrap.b32 	%r2077, %r2067, %r2067, 30;
	shf.l.wrap.b32 	%r2520, %r2075, %r2075, 5;
	// begin inline asm
	lop3.b32 %r2070, %r2071, %r2077, %r2073, 232;
	// end inline asm
	xor.b32  	%r2521, %r2412, %r2396;
	xor.b32  	%r2522, %r2521, %r2460;
	xor.b32  	%r2523, %r2522, %r2500;
	shf.l.wrap.b32 	%r2524, %r2523, %r2523, 1;
	add.s32 	%r2525, %r2070, %r2524;
	add.s32 	%r2526, %r2525, %r2069;
	add.s32 	%r2527, %r2526, %r2520;
	add.s32 	%r2079, %r2527, -1894007588;
	shf.l.wrap.b32 	%r2081, %r2071, %r2071, 30;
	shf.l.wrap.b32 	%r2528, %r2079, %r2079, 5;
	// begin inline asm
	lop3.b32 %r2074, %r2075, %r2081, %r2077, 232;
	// end inline asm
	xor.b32  	%r2529, %r2420, %r2404;
	xor.b32  	%r2530, %r2529, %r2468;
	xor.b32  	%r2531, %r2530, %r2508;
	shf.l.wrap.b32 	%r2532, %r2531, %r2531, 1;
	add.s32 	%r2533, %r2074, %r2532;
	add.s32 	%r2534, %r2533, %r2073;
	add.s32 	%r2535, %r2534, %r2528;
	add.s32 	%r2083, %r2535, -1894007588;
	shf.l.wrap.b32 	%r2085, %r2075, %r2075, 30;
	shf.l.wrap.b32 	%r2536, %r2083, %r2083, 5;
	// begin inline asm
	lop3.b32 %r2078, %r2079, %r2085, %r2081, 232;
	// end inline asm
	xor.b32  	%r2537, %r2428, %r2412;
	xor.b32  	%r2538, %r2537, %r2476;
	xor.b32  	%r2539, %r2538, %r2516;
	shf.l.wrap.b32 	%r2540, %r2539, %r2539, 1;
	add.s32 	%r2541, %r2078, %r2540;
	add.s32 	%r2542, %r2541, %r2077;
	add.s32 	%r2543, %r2542, %r2536;
	add.s32 	%r2087, %r2543, -1894007588;
	shf.l.wrap.b32 	%r2089, %r2079, %r2079, 30;
	shf.l.wrap.b32 	%r2544, %r2087, %r2087, 5;
	// begin inline asm
	lop3.b32 %r2082, %r2083, %r2089, %r2085, 232;
	// end inline asm
	xor.b32  	%r2545, %r2436, %r2420;
	xor.b32  	%r2546, %r2545, %r2484;
	xor.b32  	%r2547, %r2546, %r2524;
	shf.l.wrap.b32 	%r2548, %r2547, %r2547, 1;
	add.s32 	%r2549, %r2082, %r2548;
	add.s32 	%r2550, %r2549, %r2081;
	add.s32 	%r2551, %r2550, %r2544;
	add.s32 	%r2091, %r2551, -1894007588;
	shf.l.wrap.b32 	%r2093, %r2083, %r2083, 30;
	shf.l.wrap.b32 	%r2552, %r2091, %r2091, 5;
	// begin inline asm
	lop3.b32 %r2086, %r2087, %r2093, %r2089, 232;
	// end inline asm
	xor.b32  	%r2553, %r2444, %r2428;
	xor.b32  	%r2554, %r2553, %r2492;
	xor.b32  	%r2555, %r2554, %r2532;
	shf.l.wrap.b32 	%r2556, %r2555, %r2555, 1;
	add.s32 	%r2557, %r2086, %r2556;
	add.s32 	%r2558, %r2557, %r2085;
	add.s32 	%r2559, %r2558, %r2552;
	add.s32 	%r2095, %r2559, -1894007588;
	shf.l.wrap.b32 	%r2097, %r2087, %r2087, 30;
	shf.l.wrap.b32 	%r2560, %r2095, %r2095, 5;
	// begin inline asm
	lop3.b32 %r2090, %r2091, %r2097, %r2093, 232;
	// end inline asm
	xor.b32  	%r2561, %r2452, %r2436;
	xor.b32  	%r2562, %r2561, %r2500;
	xor.b32  	%r2563, %r2562, %r2540;
	shf.l.wrap.b32 	%r2564, %r2563, %r2563, 1;
	add.s32 	%r2565, %r2090, %r2564;
	add.s32 	%r2566, %r2565, %r2089;
	add.s32 	%r2567, %r2566, %r2560;
	add.s32 	%r2099, %r2567, -1894007588;
	shf.l.wrap.b32 	%r2101, %r2091, %r2091, 30;
	shf.l.wrap.b32 	%r2568, %r2099, %r2099, 5;
	// begin inline asm
	lop3.b32 %r2094, %r2095, %r2101, %r2097, 232;
	// end inline asm
	xor.b32  	%r2569, %r2460, %r2444;
	xor.b32  	%r2570, %r2569, %r2508;
	xor.b32  	%r2571, %r2570, %r2548;
	shf.l.wrap.b32 	%r2572, %r2571, %r2571, 1;
	add.s32 	%r2573, %r2094, %r2572;
	add.s32 	%r2574, %r2573, %r2093;
	add.s32 	%r2575, %r2574, %r2568;
	add.s32 	%r2103, %r2575, -1894007588;
	shf.l.wrap.b32 	%r2105, %r2095, %r2095, 30;
	shf.l.wrap.b32 	%r2576, %r2103, %r2103, 5;
	// begin inline asm
	lop3.b32 %r2098, %r2099, %r2105, %r2101, 232;
	// end inline asm
	xor.b32  	%r2577, %r2468, %r2452;
	xor.b32  	%r2578, %r2577, %r2516;
	xor.b32  	%r2579, %r2578, %r2556;
	shf.l.wrap.b32 	%r2580, %r2579, %r2579, 1;
	add.s32 	%r2581, %r2098, %r2580;
	add.s32 	%r2582, %r2581, %r2097;
	add.s32 	%r2583, %r2582, %r2576;
	add.s32 	%r2107, %r2583, -1894007588;
	shf.l.wrap.b32 	%r2109, %r2099, %r2099, 30;
	shf.l.wrap.b32 	%r2584, %r2107, %r2107, 5;
	// begin inline asm
	lop3.b32 %r2102, %r2103, %r2109, %r2105, 232;
	// end inline asm
	xor.b32  	%r2585, %r2476, %r2460;
	xor.b32  	%r2586, %r2585, %r2524;
	xor.b32  	%r2587, %r2586, %r2564;
	shf.l.wrap.b32 	%r2588, %r2587, %r2587, 1;
	add.s32 	%r2589, %r2102, %r2588;
	add.s32 	%r2590, %r2589, %r2101;
	add.s32 	%r2591, %r2590, %r2584;
	add.s32 	%r2111, %r2591, -1894007588;
	shf.l.wrap.b32 	%r2113, %r2103, %r2103, 30;
	shf.l.wrap.b32 	%r2592, %r2111, %r2111, 5;
	// begin inline asm
	lop3.b32 %r2106, %r2107, %r2113, %r2109, 232;
	// end inline asm
	xor.b32  	%r2593, %r2484, %r2468;
	xor.b32  	%r2594, %r2593, %r2532;
	xor.b32  	%r2595, %r2594, %r2572;
	shf.l.wrap.b32 	%r2596, %r2595, %r2595, 1;
	add.s32 	%r2597, %r2106, %r2596;
	add.s32 	%r2598, %r2597, %r2105;
	add.s32 	%r2599, %r2598, %r2592;
	add.s32 	%r2115, %r2599, -1894007588;
	shf.l.wrap.b32 	%r2117, %r2107, %r2107, 30;
	shf.l.wrap.b32 	%r2600, %r2115, %r2115, 5;
	// begin inline asm
	lop3.b32 %r2110, %r2111, %r2117, %r2113, 232;
	// end inline asm
	xor.b32  	%r2601, %r2492, %r2476;
	xor.b32  	%r2602, %r2601, %r2540;
	xor.b32  	%r2603, %r2602, %r2580;
	shf.l.wrap.b32 	%r2604, %r2603, %r2603, 1;
	add.s32 	%r2605, %r2110, %r2604;
	add.s32 	%r2606, %r2605, %r2109;
	add.s32 	%r2607, %r2606, %r2600;
	add.s32 	%r2119, %r2607, -1894007588;
	shf.l.wrap.b32 	%r2121, %r2111, %r2111, 30;
	shf.l.wrap.b32 	%r2608, %r2119, %r2119, 5;
	// begin inline asm
	lop3.b32 %r2114, %r2115, %r2121, %r2117, 232;
	// end inline asm
	xor.b32  	%r2609, %r2500, %r2484;
	xor.b32  	%r2610, %r2609, %r2548;
	xor.b32  	%r2611, %r2610, %r2588;
	shf.l.wrap.b32 	%r2612, %r2611, %r2611, 1;
	add.s32 	%r2613, %r2114, %r2612;
	add.s32 	%r2614, %r2613, %r2113;
	add.s32 	%r2615, %r2614, %r2608;
	add.s32 	%r2123, %r2615, -1894007588;
	shf.l.wrap.b32 	%r2125, %r2115, %r2115, 30;
	shf.l.wrap.b32 	%r2616, %r2123, %r2123, 5;
	// begin inline asm
	lop3.b32 %r2118, %r2119, %r2125, %r2121, 232;
	// end inline asm
	xor.b32  	%r2617, %r2508, %r2492;
	xor.b32  	%r2618, %r2617, %r2556;
	xor.b32  	%r2619, %r2618, %r2596;
	shf.l.wrap.b32 	%r2620, %r2619, %r2619, 1;
	add.s32 	%r2621, %r2118, %r2620;
	add.s32 	%r2622, %r2621, %r2117;
	add.s32 	%r2623, %r2622, %r2616;
	add.s32 	%r2127, %r2623, -1894007588;
	shf.l.wrap.b32 	%r2129, %r2119, %r2119, 30;
	shf.l.wrap.b32 	%r2624, %r2127, %r2127, 5;
	// begin inline asm
	lop3.b32 %r2122, %r2123, %r2129, %r2125, 232;
	// end inline asm
	xor.b32  	%r2625, %r2516, %r2500;
	xor.b32  	%r2626, %r2625, %r2564;
	xor.b32  	%r2627, %r2626, %r2604;
	shf.l.wrap.b32 	%r2628, %r2627, %r2627, 1;
	add.s32 	%r2629, %r2122, %r2628;
	add.s32 	%r2630, %r2629, %r2121;
	add.s32 	%r2631, %r2630, %r2624;
	add.s32 	%r2131, %r2631, -1894007588;
	shf.l.wrap.b32 	%r2133, %r2123, %r2123, 30;
	shf.l.wrap.b32 	%r2632, %r2131, %r2131, 5;
	// begin inline asm
	lop3.b32 %r2126, %r2127, %r2133, %r2129, 232;
	// end inline asm
	xor.b32  	%r2633, %r2524, %r2508;
	xor.b32  	%r2634, %r2633, %r2572;
	xor.b32  	%r2635, %r2634, %r2612;
	shf.l.wrap.b32 	%r2636, %r2635, %r2635, 1;
	add.s32 	%r2637, %r2126, %r2636;
	add.s32 	%r2638, %r2637, %r2125;
	add.s32 	%r2639, %r2638, %r2632;
	add.s32 	%r2135, %r2639, -1894007588;
	shf.l.wrap.b32 	%r2137, %r2127, %r2127, 30;
	shf.l.wrap.b32 	%r2640, %r2135, %r2135, 5;
	// begin inline asm
	lop3.b32 %r2130, %r2131, %r2137, %r2133, 232;
	// end inline asm
	xor.b32  	%r2641, %r2532, %r2516;
	xor.b32  	%r2642, %r2641, %r2580;
	xor.b32  	%r2643, %r2642, %r2620;
	shf.l.wrap.b32 	%r2644, %r2643, %r2643, 1;
	add.s32 	%r2645, %r2130, %r2644;
	add.s32 	%r2646, %r2645, %r2129;
	add.s32 	%r2647, %r2646, %r2640;
	add.s32 	%r2139, %r2647, -1894007588;
	shf.l.wrap.b32 	%r2141, %r2131, %r2131, 30;
	shf.l.wrap.b32 	%r2648, %r2139, %r2139, 5;
	// begin inline asm
	lop3.b32 %r2134, %r2135, %r2141, %r2137, 232;
	// end inline asm
	xor.b32  	%r2649, %r2540, %r2524;
	xor.b32  	%r2650, %r2649, %r2588;
	xor.b32  	%r2651, %r2650, %r2628;
	shf.l.wrap.b32 	%r2652, %r2651, %r2651, 1;
	add.s32 	%r2653, %r2134, %r2652;
	add.s32 	%r2654, %r2653, %r2133;
	add.s32 	%r2655, %r2654, %r2648;
	add.s32 	%r2143, %r2655, -1894007588;
	shf.l.wrap.b32 	%r2145, %r2135, %r2135, 30;
	shf.l.wrap.b32 	%r2656, %r2143, %r2143, 5;
	// begin inline asm
	lop3.b32 %r2138, %r2139, %r2145, %r2141, 232;
	// end inline asm
	xor.b32  	%r2657, %r2548, %r2532;
	xor.b32  	%r2658, %r2657, %r2596;
	xor.b32  	%r2659, %r2658, %r2636;
	shf.l.wrap.b32 	%r2660, %r2659, %r2659, 1;
	add.s32 	%r2661, %r2138, %r2660;
	add.s32 	%r2662, %r2661, %r2137;
	add.s32 	%r2663, %r2662, %r2656;
	add.s32 	%r2147, %r2663, -1894007588;
	shf.l.wrap.b32 	%r2149, %r2139, %r2139, 30;
	shf.l.wrap.b32 	%r2664, %r2147, %r2147, 5;
	// begin inline asm
	lop3.b32 %r2142, %r2143, %r2149, %r2145, 232;
	// end inline asm
	xor.b32  	%r2665, %r2556, %r2540;
	xor.b32  	%r2666, %r2665, %r2604;
	xor.b32  	%r2667, %r2666, %r2644;
	shf.l.wrap.b32 	%r2668, %r2667, %r2667, 1;
	add.s32 	%r2669, %r2142, %r2668;
	add.s32 	%r2670, %r2669, %r2141;
	add.s32 	%r2671, %r2670, %r2664;
	add.s32 	%r2151, %r2671, -1894007588;
	shf.l.wrap.b32 	%r2153, %r2143, %r2143, 30;
	shf.l.wrap.b32 	%r2672, %r2151, %r2151, 5;
	// begin inline asm
	lop3.b32 %r2146, %r2147, %r2153, %r2149, 232;
	// end inline asm
	xor.b32  	%r2673, %r2564, %r2548;
	xor.b32  	%r2674, %r2673, %r2612;
	xor.b32  	%r2675, %r2674, %r2652;
	shf.l.wrap.b32 	%r2676, %r2675, %r2675, 1;
	add.s32 	%r2677, %r2146, %r2676;
	add.s32 	%r2678, %r2677, %r2145;
	add.s32 	%r2679, %r2678, %r2672;
	add.s32 	%r2155, %r2679, -1894007588;
	shf.l.wrap.b32 	%r2157, %r2147, %r2147, 30;
	shf.l.wrap.b32 	%r2680, %r2155, %r2155, 5;
	// begin inline asm
	lop3.b32 %r2150, %r2151, %r2157, %r2153, 150;
	// end inline asm
	xor.b32  	%r2681, %r2572, %r2556;
	xor.b32  	%r2682, %r2681, %r2620;
	xor.b32  	%r2683, %r2682, %r2660;
	shf.l.wrap.b32 	%r2684, %r2683, %r2683, 1;
	add.s32 	%r2685, %r2150, %r2684;
	add.s32 	%r2686, %r2685, %r2149;
	add.s32 	%r2687, %r2686, %r2680;
	add.s32 	%r2159, %r2687, -899497514;
	shf.l.wrap.b32 	%r2161, %r2151, %r2151, 30;
	shf.l.wrap.b32 	%r2688, %r2159, %r2159, 5;
	// begin inline asm
	lop3.b32 %r2154, %r2155, %r2161, %r2157, 150;
	// end inline asm
	xor.b32  	%r2689, %r2580, %r2564;
	xor.b32  	%r2690, %r2689, %r2628;
	xor.b32  	%r2691, %r2690, %r2668;
	shf.l.wrap.b32 	%r2692, %r2691, %r2691, 1;
	add.s32 	%r2693, %r2154, %r2692;
	add.s32 	%r2694, %r2693, %r2153;
	add.s32 	%r2695, %r2694, %r2688;
	add.s32 	%r2163, %r2695, -899497514;
	shf.l.wrap.b32 	%r2165, %r2155, %r2155, 30;
	shf.l.wrap.b32 	%r2696, %r2163, %r2163, 5;
	// begin inline asm
	lop3.b32 %r2158, %r2159, %r2165, %r2161, 150;
	// end inline asm
	xor.b32  	%r2697, %r2588, %r2572;
	xor.b32  	%r2698, %r2697, %r2636;
	xor.b32  	%r2699, %r2698, %r2676;
	shf.l.wrap.b32 	%r2700, %r2699, %r2699, 1;
	add.s32 	%r2701, %r2158, %r2700;
	add.s32 	%r2702, %r2701, %r2157;
	add.s32 	%r2703, %r2702, %r2696;
	add.s32 	%r2167, %r2703, -899497514;
	shf.l.wrap.b32 	%r2169, %r2159, %r2159, 30;
	shf.l.wrap.b32 	%r2704, %r2167, %r2167, 5;
	// begin inline asm
	lop3.b32 %r2162, %r2163, %r2169, %r2165, 150;
	// end inline asm
	xor.b32  	%r2705, %r2596, %r2580;
	xor.b32  	%r2706, %r2705, %r2644;
	xor.b32  	%r2707, %r2706, %r2684;
	shf.l.wrap.b32 	%r2708, %r2707, %r2707, 1;
	add.s32 	%r2709, %r2162, %r2708;
	add.s32 	%r2710, %r2709, %r2161;
	add.s32 	%r2711, %r2710, %r2704;
	add.s32 	%r2171, %r2711, -899497514;
	shf.l.wrap.b32 	%r2173, %r2163, %r2163, 30;
	shf.l.wrap.b32 	%r2712, %r2171, %r2171, 5;
	// begin inline asm
	lop3.b32 %r2166, %r2167, %r2173, %r2169, 150;
	// end inline asm
	xor.b32  	%r2713, %r2604, %r2588;
	xor.b32  	%r2714, %r2713, %r2652;
	xor.b32  	%r2715, %r2714, %r2692;
	shf.l.wrap.b32 	%r2716, %r2715, %r2715, 1;
	add.s32 	%r2717, %r2166, %r2716;
	add.s32 	%r2718, %r2717, %r2165;
	add.s32 	%r2719, %r2718, %r2712;
	add.s32 	%r2175, %r2719, -899497514;
	shf.l.wrap.b32 	%r2177, %r2167, %r2167, 30;
	shf.l.wrap.b32 	%r2720, %r2175, %r2175, 5;
	// begin inline asm
	lop3.b32 %r2170, %r2171, %r2177, %r2173, 150;
	// end inline asm
	xor.b32  	%r2721, %r2612, %r2596;
	xor.b32  	%r2722, %r2721, %r2660;
	xor.b32  	%r2723, %r2722, %r2700;
	shf.l.wrap.b32 	%r2724, %r2723, %r2723, 1;
	add.s32 	%r2725, %r2170, %r2724;
	add.s32 	%r2726, %r2725, %r2169;
	add.s32 	%r2727, %r2726, %r2720;
	add.s32 	%r2179, %r2727, -899497514;
	shf.l.wrap.b32 	%r2181, %r2171, %r2171, 30;
	shf.l.wrap.b32 	%r2728, %r2179, %r2179, 5;
	// begin inline asm
	lop3.b32 %r2174, %r2175, %r2181, %r2177, 150;
	// end inline asm
	xor.b32  	%r2729, %r2620, %r2604;
	xor.b32  	%r2730, %r2729, %r2668;
	xor.b32  	%r2731, %r2730, %r2708;
	shf.l.wrap.b32 	%r2732, %r2731, %r2731, 1;
	add.s32 	%r2733, %r2174, %r2732;
	add.s32 	%r2734, %r2733, %r2173;
	add.s32 	%r2735, %r2734, %r2728;
	add.s32 	%r2183, %r2735, -899497514;
	shf.l.wrap.b32 	%r2185, %r2175, %r2175, 30;
	shf.l.wrap.b32 	%r2736, %r2183, %r2183, 5;
	// begin inline asm
	lop3.b32 %r2178, %r2179, %r2185, %r2181, 150;
	// end inline asm
	xor.b32  	%r2737, %r2628, %r2612;
	xor.b32  	%r2738, %r2737, %r2676;
	xor.b32  	%r2739, %r2738, %r2716;
	shf.l.wrap.b32 	%r2740, %r2739, %r2739, 1;
	add.s32 	%r2741, %r2178, %r2740;
	add.s32 	%r2742, %r2741, %r2177;
	add.s32 	%r2743, %r2742, %r2736;
	add.s32 	%r2187, %r2743, -899497514;
	shf.l.wrap.b32 	%r2189, %r2179, %r2179, 30;
	shf.l.wrap.b32 	%r2744, %r2187, %r2187, 5;
	// begin inline asm
	lop3.b32 %r2182, %r2183, %r2189, %r2185, 150;
	// end inline asm
	xor.b32  	%r2745, %r2636, %r2620;
	xor.b32  	%r2746, %r2745, %r2684;
	xor.b32  	%r2747, %r2746, %r2724;
	shf.l.wrap.b32 	%r2748, %r2747, %r2747, 1;
	add.s32 	%r2749, %r2182, %r2748;
	add.s32 	%r2750, %r2749, %r2181;
	add.s32 	%r2751, %r2750, %r2744;
	add.s32 	%r2191, %r2751, -899497514;
	shf.l.wrap.b32 	%r2193, %r2183, %r2183, 30;
	shf.l.wrap.b32 	%r2752, %r2191, %r2191, 5;
	// begin inline asm
	lop3.b32 %r2186, %r2187, %r2193, %r2189, 150;
	// end inline asm
	xor.b32  	%r2753, %r2644, %r2628;
	xor.b32  	%r2754, %r2753, %r2692;
	xor.b32  	%r2755, %r2754, %r2732;
	shf.l.wrap.b32 	%r2756, %r2755, %r2755, 1;
	add.s32 	%r2757, %r2186, %r2756;
	add.s32 	%r2758, %r2757, %r2185;
	add.s32 	%r2759, %r2758, %r2752;
	add.s32 	%r2195, %r2759, -899497514;
	shf.l.wrap.b32 	%r2197, %r2187, %r2187, 30;
	shf.l.wrap.b32 	%r2760, %r2195, %r2195, 5;
	// begin inline asm
	lop3.b32 %r2190, %r2191, %r2197, %r2193, 150;
	// end inline asm
	xor.b32  	%r2761, %r2652, %r2636;
	xor.b32  	%r2762, %r2761, %r2700;
	xor.b32  	%r2763, %r2762, %r2740;
	shf.l.wrap.b32 	%r2764, %r2763, %r2763, 1;
	add.s32 	%r2765, %r2190, %r2764;
	add.s32 	%r2766, %r2765, %r2189;
	add.s32 	%r2767, %r2766, %r2760;
	add.s32 	%r2199, %r2767, -899497514;
	shf.l.wrap.b32 	%r2201, %r2191, %r2191, 30;
	shf.l.wrap.b32 	%r2768, %r2199, %r2199, 5;
	// begin inline asm
	lop3.b32 %r2194, %r2195, %r2201, %r2197, 150;
	// end inline asm
	xor.b32  	%r2769, %r2660, %r2644;
	xor.b32  	%r2770, %r2769, %r2708;
	xor.b32  	%r2771, %r2770, %r2748;
	shf.l.wrap.b32 	%r2772, %r2771, %r2771, 1;
	add.s32 	%r2773, %r2194, %r2772;
	add.s32 	%r2774, %r2773, %r2193;
	add.s32 	%r2775, %r2774, %r2768;
	add.s32 	%r2203, %r2775, -899497514;
	shf.l.wrap.b32 	%r2205, %r2195, %r2195, 30;
	shf.l.wrap.b32 	%r2776, %r2203, %r2203, 5;
	// begin inline asm
	lop3.b32 %r2198, %r2199, %r2205, %r2201, 150;
	// end inline asm
	xor.b32  	%r2777, %r2668, %r2652;
	xor.b32  	%r2778, %r2777, %r2716;
	xor.b32  	%r2779, %r2778, %r2756;
	shf.l.wrap.b32 	%r2780, %r2779, %r2779, 1;
	add.s32 	%r2781, %r2198, %r2780;
	add.s32 	%r2782, %r2781, %r2197;
	add.s32 	%r2783, %r2782, %r2776;
	add.s32 	%r2207, %r2783, -899497514;
	shf.l.wrap.b32 	%r2209, %r2199, %r2199, 30;
	shf.l.wrap.b32 	%r2784, %r2207, %r2207, 5;
	// begin inline asm
	lop3.b32 %r2202, %r2203, %r2209, %r2205, 150;
	// end inline asm
	xor.b32  	%r2785, %r2676, %r2660;
	xor.b32  	%r2786, %r2785, %r2724;
	xor.b32  	%r2787, %r2786, %r2764;
	shf.l.wrap.b32 	%r2788, %r2787, %r2787, 1;
	add.s32 	%r2789, %r2202, %r2788;
	add.s32 	%r2790, %r2789, %r2201;
	add.s32 	%r2791, %r2790, %r2784;
	add.s32 	%r2211, %r2791, -899497514;
	shf.l.wrap.b32 	%r2213, %r2203, %r2203, 30;
	shf.l.wrap.b32 	%r2792, %r2211, %r2211, 5;
	// begin inline asm
	lop3.b32 %r2206, %r2207, %r2213, %r2209, 150;
	// end inline asm
	xor.b32  	%r2793, %r2684, %r2668;
	xor.b32  	%r2794, %r2793, %r2732;
	xor.b32  	%r2795, %r2794, %r2772;
	shf.l.wrap.b32 	%r2796, %r2795, %r2795, 1;
	add.s32 	%r2797, %r2206, %r2796;
	add.s32 	%r2798, %r2797, %r2205;
	add.s32 	%r2799, %r2798, %r2792;
	add.s32 	%r2215, %r2799, -899497514;
	shf.l.wrap.b32 	%r2217, %r2207, %r2207, 30;
	shf.l.wrap.b32 	%r2800, %r2215, %r2215, 5;
	// begin inline asm
	lop3.b32 %r2210, %r2211, %r2217, %r2213, 150;
	// end inline asm
	xor.b32  	%r2801, %r2692, %r2676;
	xor.b32  	%r2802, %r2801, %r2740;
	xor.b32  	%r2803, %r2802, %r2780;
	shf.l.wrap.b32 	%r2804, %r2803, %r2803, 1;
	add.s32 	%r2805, %r2210, %r2804;
	add.s32 	%r2806, %r2805, %r2209;
	add.s32 	%r2807, %r2806, %r2800;
	add.s32 	%r2219, %r2807, -899497514;
	shf.l.wrap.b32 	%r2221, %r2211, %r2211, 30;
	shf.l.wrap.b32 	%r2808, %r2219, %r2219, 5;
	// begin inline asm
	lop3.b32 %r2214, %r2215, %r2221, %r2217, 150;
	// end inline asm
	xor.b32  	%r2809, %r2700, %r2684;
	xor.b32  	%r2810, %r2809, %r2748;
	xor.b32  	%r2811, %r2810, %r2788;
	shf.l.wrap.b32 	%r2812, %r2811, %r2811, 1;
	add.s32 	%r2813, %r2214, %r2812;
	add.s32 	%r2814, %r2813, %r2213;
	add.s32 	%r2815, %r2814, %r2808;
	add.s32 	%r2223, %r2815, -899497514;
	shf.l.wrap.b32 	%r2225, %r2215, %r2215, 30;
	shf.l.wrap.b32 	%r2816, %r2223, %r2223, 5;
	// begin inline asm
	lop3.b32 %r2218, %r2219, %r2225, %r2221, 150;
	// end inline asm
	xor.b32  	%r2817, %r2708, %r2692;
	xor.b32  	%r2818, %r2817, %r2756;
	xor.b32  	%r2819, %r2818, %r2796;
	shf.l.wrap.b32 	%r2820, %r2819, %r2819, 1;
	add.s32 	%r2821, %r2218, %r2820;
	add.s32 	%r2822, %r2821, %r2217;
	add.s32 	%r2823, %r2822, %r2816;
	add.s32 	%r2227, %r2823, -899497514;
	shf.l.wrap.b32 	%r2229, %r2219, %r2219, 30;
	shf.l.wrap.b32 	%r2824, %r2227, %r2227, 5;
	// begin inline asm
	lop3.b32 %r2222, %r2223, %r2229, %r2225, 150;
	// end inline asm
	xor.b32  	%r2825, %r2716, %r2700;
	xor.b32  	%r2826, %r2825, %r2764;
	xor.b32  	%r2827, %r2826, %r2804;
	shf.l.wrap.b32 	%r2828, %r2827, %r2827, 1;
	add.s32 	%r2829, %r2222, %r2828;
	add.s32 	%r2830, %r2829, %r2221;
	add.s32 	%r2831, %r2830, %r2824;
	add.s32 	%r2832, %r2831, -899497514;
	shf.l.wrap.b32 	%r2228, %r2223, %r2223, 30;
	shf.l.wrap.b32 	%r2833, %r2832, %r2832, 5;
	// begin inline asm
	lop3.b32 %r2226, %r2227, %r2228, %r2229, 150;
	// end inline asm
	xor.b32  	%r2834, %r2724, %r2708;
	xor.b32  	%r2835, %r2834, %r2772;
	xor.b32  	%r2836, %r2835, %r2812;
	shf.l.wrap.b32 	%r2837, %r2836, %r2836, 1;
	shf.l.wrap.b32 	%r2838, %r2227, %r2227, 30;
	add.s32 	%r2839, %r5621, %r2226;
	add.s32 	%r2840, %r2839, %r2837;
	add.s32 	%r2841, %r2840, %r2225;
	add.s32 	%r2842, %r2841, %r2833;
	add.s32 	%r5621, %r2842, -899497514;
	add.s32 	%r5620, %r2832, %r5620;
	add.s32 	%r5619, %r2838, %r5619;
	add.s32 	%r5618, %r2228, %r5618;
	add.s32 	%r5617, %r2229, %r5617;
	add.s32 	%r2843, %r5616, 128;
	setp.gt.u32 	%p2, %r2843, %r13;
	mov.u32 	%r5616, %r5628;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_2;

$L__BB0_4:
	mov.u32 	%r5627, 0;
	st.local.v4.u32 	[%rd1], {%r5627, %r5627, %r5627, %r5627};
	st.local.v4.u32 	[%rd1+16], {%r5627, %r5627, %r5627, %r5627};
	st.local.v4.u32 	[%rd1+32], {%r5627, %r5627, %r5627, %r5627};
	st.local.v4.u32 	[%rd1+48], {%r5627, %r5627, %r5627, %r5627};
	setp.le.u32 	%p3, %r13, %r5628;
	@%p3 bra 	$L__BB0_10;

	sub.s32 	%r35, %r13, %r5628;
	not.b32 	%r2847, %r5628;
	add.s32 	%r2848, %r13, %r2847;
	and.b32  	%r5631, %r35, 3;
	setp.lt.u32 	%p4, %r2848, 3;
	@%p4 bra 	$L__BB0_8;

	sub.s32 	%r5626, %r35, %r5631;
	mov.u32 	%r5627, 0;
	add.s64 	%rd17, %rd4, 12;

$L__BB0_7:
	cvt.u64.u32 	%rd16, %r5628;
	add.s64 	%rd18, %rd17, %rd16;
	ld.global.u8 	%rs1, [%rd18];
	or.b32  	%r2850, %r5627, 3;
	cvt.u64.u32 	%rd19, %r2850;
	add.s64 	%rd20, %rd1, %rd19;
	st.local.u8 	[%rd20], %rs1;
	add.s32 	%r2851, %r5628, 1;
	cvt.u64.u32 	%rd21, %r2851;
	add.s64 	%rd22, %rd17, %rd21;
	ld.global.u8 	%rs2, [%rd22];
	add.s32 	%r2852, %r5627, 1;
	xor.b32  	%r2853, %r2852, 3;
	cvt.u64.u32 	%rd23, %r2853;
	add.s64 	%rd24, %rd1, %rd23;
	st.local.u8 	[%rd24], %rs2;
	add.s32 	%r2854, %r5628, 2;
	cvt.u64.u32 	%rd25, %r2854;
	add.s64 	%rd26, %rd17, %rd25;
	ld.global.u8 	%rs3, [%rd26];
	add.s32 	%r2855, %r5627, 2;
	xor.b32  	%r2856, %r2855, 3;
	cvt.u64.u32 	%rd27, %r2856;
	add.s64 	%rd28, %rd1, %rd27;
	st.local.u8 	[%rd28], %rs3;
	add.s32 	%r2857, %r5628, 3;
	cvt.u64.u32 	%rd29, %r2857;
	add.s64 	%rd30, %rd17, %rd29;
	ld.global.u8 	%rs4, [%rd30];
	add.s32 	%r2858, %r5627, 3;
	and.b32  	%r2859, %r2858, -4;
	cvt.u64.u32 	%rd31, %r2859;
	add.s64 	%rd32, %rd1, %rd31;
	st.local.u8 	[%rd32], %rs4;
	add.s32 	%r5627, %r5627, 4;
	add.s32 	%r5628, %r5628, 4;
	add.s32 	%r5626, %r5626, -4;
	setp.ne.s32 	%p5, %r5626, 0;
	@%p5 bra 	$L__BB0_7;

$L__BB0_8:
	setp.eq.s32 	%p6, %r5631, 0;
	@%p6 bra 	$L__BB0_10;

$L__BB0_9:
	.pragma "nounroll";
	cvt.u64.u32 	%rd33, %r5628;
	add.s64 	%rd34, %rd4, %rd33;
	ld.global.u8 	%rs5, [%rd34+12];
	xor.b32  	%r2860, %r5627, 3;
	cvt.u64.u32 	%rd35, %r2860;
	add.s64 	%rd36, %rd1, %rd35;
	st.local.u8 	[%rd36], %rs5;
	add.s32 	%r5627, %r5627, 1;
	add.s32 	%r5628, %r5628, 1;
	add.s32 	%r5631, %r5631, -1;
	setp.ne.s32 	%p7, %r5631, 0;
	@%p7 bra 	$L__BB0_9;

$L__BB0_10:
	setp.lt.u32 	%p8, %r5623, 52;
	@%p8 bra 	$L__BB0_19;
	bra.uni 	$L__BB0_11;

$L__BB0_19:
	add.s32 	%r3801, %r5623, 3;
	xor.b32  	%r3802, %r3801, 3;
	cvt.u64.u32 	%rd45, %r3802;
	add.s64 	%rd46, %rd1, %rd45;
	mov.u16 	%rs10, 1;
	st.local.u8 	[%rd46], %rs10;
	add.s32 	%r3803, %r5623, 4;
	xor.b32  	%r3804, %r3803, 3;
	cvt.u64.u32 	%rd47, %r3804;
	add.s64 	%rd48, %rd1, %rd47;
	mov.u16 	%rs11, 128;
	st.local.u8 	[%rd48], %rs11;
	bra.uni 	$L__BB0_20;

$L__BB0_11:
	setp.gt.u32 	%p9, %r5623, 60;
	@%p9 bra 	$L__BB0_13;

	add.s32 	%r2861, %r5623, 3;
	xor.b32  	%r2862, %r2861, 3;
	cvt.u64.u32 	%rd37, %r2862;
	add.s64 	%rd38, %rd1, %rd37;
	mov.u16 	%rs6, 1;
	st.local.u8 	[%rd38], %rs6;

$L__BB0_13:
	setp.gt.u32 	%p10, %r5623, 59;
	@%p10 bra 	$L__BB0_15;

	add.s32 	%r2863, %r5623, 4;
	xor.b32  	%r2864, %r2863, 3;
	cvt.u64.u32 	%rd39, %r2864;
	add.s64 	%rd40, %rd1, %rd39;
	mov.u16 	%rs7, 128;
	st.local.u8 	[%rd40], %rs7;

$L__BB0_15:
	shf.l.wrap.b32 	%r3185, %r5621, %r5621, 5;
	ld.local.v4.u32 	{%r3186, %r3187, %r3188, %r3189}, [%rd1];
	add.s32 	%r3194, %r3185, %r5617;
	// begin inline asm
	lop3.b32 %r2865, %r5620, %r5619, %r5618, 202;
	// end inline asm
	add.s32 	%r3195, %r3194, %r2865;
	add.s32 	%r3196, %r3195, %r3186;
	add.s32 	%r2874, %r3196, 1518500249;
	shf.l.wrap.b32 	%r3197, %r2874, %r2874, 5;
	shf.l.wrap.b32 	%r2876, %r5620, %r5620, 30;
	// begin inline asm
	lop3.b32 %r2869, %r5621, %r2876, %r5619, 202;
	// end inline asm
	add.s32 	%r3198, %r5618, %r2869;
	add.s32 	%r3199, %r3198, %r3187;
	add.s32 	%r3200, %r3199, %r3197;
	add.s32 	%r2878, %r3200, 1518500249;
	shf.l.wrap.b32 	%r3201, %r2878, %r2878, 5;
	shf.l.wrap.b32 	%r2880, %r5621, %r5621, 30;
	// begin inline asm
	lop3.b32 %r2873, %r2874, %r2880, %r2876, 202;
	// end inline asm
	add.s32 	%r3202, %r5619, %r2873;
	add.s32 	%r3203, %r3202, %r3188;
	add.s32 	%r3204, %r3203, %r3201;
	add.s32 	%r2882, %r3204, 1518500249;
	shf.l.wrap.b32 	%r2884, %r2874, %r2874, 30;
	shf.l.wrap.b32 	%r3205, %r2882, %r2882, 5;
	// begin inline asm
	lop3.b32 %r2877, %r2878, %r2884, %r2880, 202;
	// end inline asm
	add.s32 	%r3206, %r2876, %r2877;
	add.s32 	%r3207, %r3206, %r3189;
	add.s32 	%r3208, %r3207, %r3205;
	add.s32 	%r2886, %r3208, 1518500249;
	shf.l.wrap.b32 	%r2888, %r2878, %r2878, 30;
	shf.l.wrap.b32 	%r3209, %r2886, %r2886, 5;
	// begin inline asm
	lop3.b32 %r2881, %r2882, %r2888, %r2884, 202;
	// end inline asm
	ld.local.v4.u32 	{%r3210, %r3211, %r3212, %r3213}, [%rd1+16];
	add.s32 	%r3218, %r2880, %r2881;
	add.s32 	%r3219, %r3218, %r3210;
	add.s32 	%r3220, %r3219, %r3209;
	add.s32 	%r2890, %r3220, 1518500249;
	shf.l.wrap.b32 	%r2892, %r2882, %r2882, 30;
	shf.l.wrap.b32 	%r3221, %r2890, %r2890, 5;
	// begin inline asm
	lop3.b32 %r2885, %r2886, %r2892, %r2888, 202;
	// end inline asm
	add.s32 	%r3222, %r2884, %r2885;
	add.s32 	%r3223, %r3222, %r3211;
	add.s32 	%r3224, %r3223, %r3221;
	add.s32 	%r2894, %r3224, 1518500249;
	shf.l.wrap.b32 	%r2896, %r2886, %r2886, 30;
	shf.l.wrap.b32 	%r3225, %r2894, %r2894, 5;
	// begin inline asm
	lop3.b32 %r2889, %r2890, %r2896, %r2892, 202;
	// end inline asm
	add.s32 	%r3226, %r2888, %r2889;
	add.s32 	%r3227, %r3226, %r3212;
	add.s32 	%r3228, %r3227, %r3225;
	add.s32 	%r2898, %r3228, 1518500249;
	shf.l.wrap.b32 	%r2900, %r2890, %r2890, 30;
	shf.l.wrap.b32 	%r3229, %r2898, %r2898, 5;
	// begin inline asm
	lop3.b32 %r2893, %r2894, %r2900, %r2896, 202;
	// end inline asm
	add.s32 	%r3230, %r2893, %r3213;
	add.s32 	%r3231, %r3230, %r2892;
	add.s32 	%r3232, %r3231, %r3229;
	add.s32 	%r2902, %r3232, 1518500249;
	shf.l.wrap.b32 	%r2904, %r2894, %r2894, 30;
	shf.l.wrap.b32 	%r3233, %r2902, %r2902, 5;
	// begin inline asm
	lop3.b32 %r2897, %r2898, %r2904, %r2900, 202;
	// end inline asm
	ld.local.v4.u32 	{%r3234, %r3235, %r3236, %r3237}, [%rd1+32];
	add.s32 	%r3242, %r2897, %r3234;
	add.s32 	%r3243, %r3242, %r2896;
	add.s32 	%r3244, %r3243, %r3233;
	add.s32 	%r2906, %r3244, 1518500249;
	shf.l.wrap.b32 	%r2908, %r2898, %r2898, 30;
	shf.l.wrap.b32 	%r3245, %r2906, %r2906, 5;
	// begin inline asm
	lop3.b32 %r2901, %r2902, %r2908, %r2904, 202;
	// end inline asm
	add.s32 	%r3246, %r2901, %r3235;
	add.s32 	%r3247, %r3246, %r2900;
	add.s32 	%r3248, %r3247, %r3245;
	add.s32 	%r2910, %r3248, 1518500249;
	shf.l.wrap.b32 	%r2912, %r2902, %r2902, 30;
	shf.l.wrap.b32 	%r3249, %r2910, %r2910, 5;
	// begin inline asm
	lop3.b32 %r2905, %r2906, %r2912, %r2908, 202;
	// end inline asm
	add.s32 	%r3250, %r2905, %r3236;
	add.s32 	%r3251, %r3250, %r2904;
	add.s32 	%r3252, %r3251, %r3249;
	add.s32 	%r2914, %r3252, 1518500249;
	shf.l.wrap.b32 	%r2916, %r2906, %r2906, 30;
	shf.l.wrap.b32 	%r3253, %r2914, %r2914, 5;
	// begin inline asm
	lop3.b32 %r2909, %r2910, %r2916, %r2912, 202;
	// end inline asm
	add.s32 	%r3254, %r2909, %r3237;
	add.s32 	%r3255, %r3254, %r2908;
	add.s32 	%r3256, %r3255, %r3253;
	add.s32 	%r2918, %r3256, 1518500249;
	shf.l.wrap.b32 	%r2920, %r2910, %r2910, 30;
	shf.l.wrap.b32 	%r3257, %r2918, %r2918, 5;
	// begin inline asm
	lop3.b32 %r2913, %r2914, %r2920, %r2916, 202;
	// end inline asm
	ld.local.v4.u32 	{%r3258, %r3259, %r3260, %r3261}, [%rd1+48];
	add.s32 	%r3266, %r2913, %r3258;
	add.s32 	%r3267, %r3266, %r2912;
	add.s32 	%r3268, %r3267, %r3257;
	add.s32 	%r2922, %r3268, 1518500249;
	shf.l.wrap.b32 	%r2924, %r2914, %r2914, 30;
	shf.l.wrap.b32 	%r3269, %r2922, %r2922, 5;
	// begin inline asm
	lop3.b32 %r2917, %r2918, %r2924, %r2920, 202;
	// end inline asm
	add.s32 	%r3270, %r2917, %r3259;
	add.s32 	%r3271, %r3270, %r2916;
	add.s32 	%r3272, %r3271, %r3269;
	add.s32 	%r2926, %r3272, 1518500249;
	shf.l.wrap.b32 	%r2928, %r2918, %r2918, 30;
	shf.l.wrap.b32 	%r3273, %r2926, %r2926, 5;
	// begin inline asm
	lop3.b32 %r2921, %r2922, %r2928, %r2924, 202;
	// end inline asm
	add.s32 	%r3274, %r2921, %r3260;
	add.s32 	%r3275, %r3274, %r2920;
	add.s32 	%r3276, %r3275, %r3273;
	add.s32 	%r2930, %r3276, 1518500249;
	shf.l.wrap.b32 	%r2932, %r2922, %r2922, 30;
	shf.l.wrap.b32 	%r3277, %r2930, %r2930, 5;
	// begin inline asm
	lop3.b32 %r2925, %r2926, %r2932, %r2928, 202;
	// end inline asm
	add.s32 	%r3278, %r2925, %r3261;
	add.s32 	%r3279, %r3278, %r2924;
	add.s32 	%r3280, %r3279, %r3277;
	add.s32 	%r2934, %r3280, 1518500249;
	shf.l.wrap.b32 	%r2936, %r2926, %r2926, 30;
	shf.l.wrap.b32 	%r3281, %r2934, %r2934, 5;
	// begin inline asm
	lop3.b32 %r2929, %r2930, %r2936, %r2932, 202;
	// end inline asm
	xor.b32  	%r3282, %r3234, %r3259;
	xor.b32  	%r3283, %r3282, %r3188;
	xor.b32  	%r3284, %r3283, %r3186;
	shf.l.wrap.b32 	%r3285, %r3284, %r3284, 1;
	add.s32 	%r3286, %r2929, %r3285;
	add.s32 	%r3287, %r3286, %r2928;
	add.s32 	%r3288, %r3287, %r3281;
	add.s32 	%r2938, %r3288, 1518500249;
	shf.l.wrap.b32 	%r2940, %r2930, %r2930, 30;
	shf.l.wrap.b32 	%r3289, %r2938, %r2938, 5;
	// begin inline asm
	lop3.b32 %r2933, %r2934, %r2940, %r2936, 202;
	// end inline asm
	xor.b32  	%r3290, %r3235, %r3260;
	xor.b32  	%r3291, %r3290, %r3189;
	xor.b32  	%r3292, %r3291, %r3187;
	shf.l.wrap.b32 	%r3293, %r3292, %r3292, 1;
	add.s32 	%r3294, %r2933, %r3293;
	add.s32 	%r3295, %r3294, %r2932;
	add.s32 	%r3296, %r3295, %r3289;
	add.s32 	%r2942, %r3296, 1518500249;
	shf.l.wrap.b32 	%r2944, %r2934, %r2934, 30;
	shf.l.wrap.b32 	%r3297, %r2942, %r2942, 5;
	// begin inline asm
	lop3.b32 %r2937, %r2938, %r2944, %r2940, 202;
	// end inline asm
	xor.b32  	%r3298, %r3236, %r3261;
	xor.b32  	%r3299, %r3298, %r3210;
	xor.b32  	%r3300, %r3299, %r3188;
	shf.l.wrap.b32 	%r3301, %r3300, %r3300, 1;
	add.s32 	%r3302, %r2937, %r3301;
	add.s32 	%r3303, %r3302, %r2936;
	add.s32 	%r3304, %r3303, %r3297;
	add.s32 	%r2946, %r3304, 1518500249;
	shf.l.wrap.b32 	%r2948, %r2938, %r2938, 30;
	shf.l.wrap.b32 	%r3305, %r2946, %r2946, 5;
	// begin inline asm
	lop3.b32 %r2941, %r2942, %r2948, %r2944, 202;
	// end inline asm
	xor.b32  	%r3306, %r3237, %r3285;
	xor.b32  	%r3307, %r3306, %r3211;
	xor.b32  	%r3308, %r3307, %r3189;
	shf.l.wrap.b32 	%r3309, %r3308, %r3308, 1;
	add.s32 	%r3310, %r2941, %r3309;
	add.s32 	%r3311, %r3310, %r2940;
	add.s32 	%r3312, %r3311, %r3305;
	add.s32 	%r2950, %r3312, 1518500249;
	shf.l.wrap.b32 	%r2952, %r2942, %r2942, 30;
	shf.l.wrap.b32 	%r3313, %r2950, %r2950, 5;
	// begin inline asm
	lop3.b32 %r2945, %r2946, %r2952, %r2948, 150;
	// end inline asm
	xor.b32  	%r3314, %r3258, %r3293;
	xor.b32  	%r3315, %r3314, %r3212;
	xor.b32  	%r3316, %r3315, %r3210;
	shf.l.wrap.b32 	%r3317, %r3316, %r3316, 1;
	add.s32 	%r3318, %r2945, %r3317;
	add.s32 	%r3319, %r3318, %r2944;
	add.s32 	%r3320, %r3319, %r3313;
	add.s32 	%r2954, %r3320, 1859775393;
	shf.l.wrap.b32 	%r2956, %r2946, %r2946, 30;
	shf.l.wrap.b32 	%r3321, %r2954, %r2954, 5;
	// begin inline asm
	lop3.b32 %r2949, %r2950, %r2956, %r2952, 150;
	// end inline asm
	xor.b32  	%r3322, %r3259, %r3301;
	xor.b32  	%r3323, %r3322, %r3213;
	xor.b32  	%r3324, %r3323, %r3211;
	shf.l.wrap.b32 	%r3325, %r3324, %r3324, 1;
	add.s32 	%r3326, %r2949, %r3325;
	add.s32 	%r3327, %r3326, %r2948;
	add.s32 	%r3328, %r3327, %r3321;
	add.s32 	%r2958, %r3328, 1859775393;
	shf.l.wrap.b32 	%r2960, %r2950, %r2950, 30;
	shf.l.wrap.b32 	%r3329, %r2958, %r2958, 5;
	// begin inline asm
	lop3.b32 %r2953, %r2954, %r2960, %r2956, 150;
	// end inline asm
	xor.b32  	%r3330, %r3260, %r3309;
	xor.b32  	%r3331, %r3330, %r3234;
	xor.b32  	%r3332, %r3331, %r3212;
	shf.l.wrap.b32 	%r3333, %r3332, %r3332, 1;
	add.s32 	%r3334, %r2953, %r3333;
	add.s32 	%r3335, %r3334, %r2952;
	add.s32 	%r3336, %r3335, %r3329;
	add.s32 	%r2962, %r3336, 1859775393;
	shf.l.wrap.b32 	%r2964, %r2954, %r2954, 30;
	shf.l.wrap.b32 	%r3337, %r2962, %r2962, 5;
	// begin inline asm
	lop3.b32 %r2957, %r2958, %r2964, %r2960, 150;
	// end inline asm
	xor.b32  	%r3338, %r3261, %r3317;
	xor.b32  	%r3339, %r3338, %r3235;
	xor.b32  	%r3340, %r3339, %r3213;
	shf.l.wrap.b32 	%r3341, %r3340, %r3340, 1;
	add.s32 	%r3342, %r2957, %r3341;
	add.s32 	%r3343, %r3342, %r2956;
	add.s32 	%r3344, %r3343, %r3337;
	add.s32 	%r2966, %r3344, 1859775393;
	shf.l.wrap.b32 	%r2968, %r2958, %r2958, 30;
	shf.l.wrap.b32 	%r3345, %r2966, %r2966, 5;
	// begin inline asm
	lop3.b32 %r2961, %r2962, %r2968, %r2964, 150;
	// end inline asm
	xor.b32  	%r3346, %r3325, %r3285;
	xor.b32  	%r3347, %r3346, %r3236;
	xor.b32  	%r3348, %r3347, %r3234;
	shf.l.wrap.b32 	%r3349, %r3348, %r3348, 1;
	add.s32 	%r3350, %r2961, %r3349;
	add.s32 	%r3351, %r3350, %r2960;
	add.s32 	%r3352, %r3351, %r3345;
	add.s32 	%r2970, %r3352, 1859775393;
	shf.l.wrap.b32 	%r2972, %r2962, %r2962, 30;
	shf.l.wrap.b32 	%r3353, %r2970, %r2970, 5;
	// begin inline asm
	lop3.b32 %r2965, %r2966, %r2972, %r2968, 150;
	// end inline asm
	xor.b32  	%r3354, %r3333, %r3293;
	xor.b32  	%r3355, %r3354, %r3237;
	xor.b32  	%r3356, %r3355, %r3235;
	shf.l.wrap.b32 	%r3357, %r3356, %r3356, 1;
	add.s32 	%r3358, %r2965, %r3357;
	add.s32 	%r3359, %r3358, %r2964;
	add.s32 	%r3360, %r3359, %r3353;
	add.s32 	%r2974, %r3360, 1859775393;
	shf.l.wrap.b32 	%r2976, %r2966, %r2966, 30;
	shf.l.wrap.b32 	%r3361, %r2974, %r2974, 5;
	// begin inline asm
	lop3.b32 %r2969, %r2970, %r2976, %r2972, 150;
	// end inline asm
	xor.b32  	%r3362, %r3341, %r3301;
	xor.b32  	%r3363, %r3362, %r3258;
	xor.b32  	%r3364, %r3363, %r3236;
	shf.l.wrap.b32 	%r3365, %r3364, %r3364, 1;
	add.s32 	%r3366, %r2969, %r3365;
	add.s32 	%r3367, %r3366, %r2968;
	add.s32 	%r3368, %r3367, %r3361;
	add.s32 	%r2978, %r3368, 1859775393;
	shf.l.wrap.b32 	%r2980, %r2970, %r2970, 30;
	shf.l.wrap.b32 	%r3369, %r2978, %r2978, 5;
	// begin inline asm
	lop3.b32 %r2973, %r2974, %r2980, %r2976, 150;
	// end inline asm
	xor.b32  	%r3370, %r3349, %r3309;
	xor.b32  	%r3371, %r3370, %r3259;
	xor.b32  	%r3372, %r3371, %r3237;
	shf.l.wrap.b32 	%r3373, %r3372, %r3372, 1;
	add.s32 	%r3374, %r2973, %r3373;
	add.s32 	%r3375, %r3374, %r2972;
	add.s32 	%r3376, %r3375, %r3369;
	add.s32 	%r2982, %r3376, 1859775393;
	shf.l.wrap.b32 	%r2984, %r2974, %r2974, 30;
	shf.l.wrap.b32 	%r3377, %r2982, %r2982, 5;
	// begin inline asm
	lop3.b32 %r2977, %r2978, %r2984, %r2980, 150;
	// end inline asm
	xor.b32  	%r3378, %r3357, %r3317;
	xor.b32  	%r3379, %r3378, %r3260;
	xor.b32  	%r3380, %r3379, %r3258;
	shf.l.wrap.b32 	%r3381, %r3380, %r3380, 1;
	add.s32 	%r3382, %r2977, %r3381;
	add.s32 	%r3383, %r3382, %r2976;
	add.s32 	%r3384, %r3383, %r3377;
	add.s32 	%r2986, %r3384, 1859775393;
	shf.l.wrap.b32 	%r2988, %r2978, %r2978, 30;
	shf.l.wrap.b32 	%r3385, %r2986, %r2986, 5;
	// begin inline asm
	lop3.b32 %r2981, %r2982, %r2988, %r2984, 150;
	// end inline asm
	xor.b32  	%r3386, %r3365, %r3325;
	xor.b32  	%r3387, %r3386, %r3261;
	xor.b32  	%r3388, %r3387, %r3259;
	shf.l.wrap.b32 	%r3389, %r3388, %r3388, 1;
	add.s32 	%r3390, %r2981, %r3389;
	add.s32 	%r3391, %r3390, %r2980;
	add.s32 	%r3392, %r3391, %r3385;
	add.s32 	%r2990, %r3392, 1859775393;
	shf.l.wrap.b32 	%r2992, %r2982, %r2982, 30;
	shf.l.wrap.b32 	%r3393, %r2990, %r2990, 5;
	// begin inline asm
	lop3.b32 %r2985, %r2986, %r2992, %r2988, 150;
	// end inline asm
	xor.b32  	%r3394, %r3333, %r3285;
	xor.b32  	%r3395, %r3394, %r3373;
	xor.b32  	%r3396, %r3395, %r3260;
	shf.l.wrap.b32 	%r3397, %r3396, %r3396, 1;
	add.s32 	%r3398, %r2985, %r3397;
	add.s32 	%r3399, %r3398, %r2984;
	add.s32 	%r3400, %r3399, %r3393;
	add.s32 	%r2994, %r3400, 1859775393;
	shf.l.wrap.b32 	%r2996, %r2986, %r2986, 30;
	shf.l.wrap.b32 	%r3401, %r2994, %r2994, 5;
	// begin inline asm
	lop3.b32 %r2989, %r2990, %r2996, %r2992, 150;
	// end inline asm
	xor.b32  	%r3402, %r3341, %r3293;
	xor.b32  	%r3403, %r3402, %r3381;
	xor.b32  	%r3404, %r3403, %r3261;
	shf.l.wrap.b32 	%r3405, %r3404, %r3404, 1;
	add.s32 	%r3406, %r2989, %r3405;
	add.s32 	%r3407, %r3406, %r2988;
	add.s32 	%r3408, %r3407, %r3401;
	add.s32 	%r2998, %r3408, 1859775393;
	shf.l.wrap.b32 	%r3000, %r2990, %r2990, 30;
	shf.l.wrap.b32 	%r3409, %r2998, %r2998, 5;
	// begin inline asm
	lop3.b32 %r2993, %r2994, %r3000, %r2996, 150;
	// end inline asm
	xor.b32  	%r3410, %r3301, %r3285;
	xor.b32  	%r3411, %r3410, %r3349;
	xor.b32  	%r3412, %r3411, %r3389;
	shf.l.wrap.b32 	%r3413, %r3412, %r3412, 1;
	add.s32 	%r3414, %r2993, %r3413;
	add.s32 	%r3415, %r3414, %r2992;
	add.s32 	%r3416, %r3415, %r3409;
	add.s32 	%r3002, %r3416, 1859775393;
	shf.l.wrap.b32 	%r3004, %r2994, %r2994, 30;
	shf.l.wrap.b32 	%r3417, %r3002, %r3002, 5;
	// begin inline asm
	lop3.b32 %r2997, %r2998, %r3004, %r3000, 150;
	// end inline asm
	xor.b32  	%r3418, %r3309, %r3293;
	xor.b32  	%r3419, %r3418, %r3357;
	xor.b32  	%r3420, %r3419, %r3397;
	shf.l.wrap.b32 	%r3421, %r3420, %r3420, 1;
	add.s32 	%r3422, %r2997, %r3421;
	add.s32 	%r3423, %r3422, %r2996;
	add.s32 	%r3424, %r3423, %r3417;
	add.s32 	%r3006, %r3424, 1859775393;
	shf.l.wrap.b32 	%r3008, %r2998, %r2998, 30;
	shf.l.wrap.b32 	%r3425, %r3006, %r3006, 5;
	// begin inline asm
	lop3.b32 %r3001, %r3002, %r3008, %r3004, 150;
	// end inline asm
	xor.b32  	%r3426, %r3317, %r3301;
	xor.b32  	%r3427, %r3426, %r3365;
	xor.b32  	%r3428, %r3427, %r3405;
	shf.l.wrap.b32 	%r3429, %r3428, %r3428, 1;
	add.s32 	%r3430, %r3001, %r3429;
	add.s32 	%r3431, %r3430, %r3000;
	add.s32 	%r3432, %r3431, %r3425;
	add.s32 	%r3010, %r3432, 1859775393;
	shf.l.wrap.b32 	%r3012, %r3002, %r3002, 30;
	shf.l.wrap.b32 	%r3433, %r3010, %r3010, 5;
	// begin inline asm
	lop3.b32 %r3005, %r3006, %r3012, %r3008, 150;
	// end inline asm
	xor.b32  	%r3434, %r3325, %r3309;
	xor.b32  	%r3435, %r3434, %r3373;
	xor.b32  	%r3436, %r3435, %r3413;
	shf.l.wrap.b32 	%r3437, %r3436, %r3436, 1;
	add.s32 	%r3438, %r3005, %r3437;
	add.s32 	%r3439, %r3438, %r3004;
	add.s32 	%r3440, %r3439, %r3433;
	add.s32 	%r3014, %r3440, 1859775393;
	shf.l.wrap.b32 	%r3016, %r3006, %r3006, 30;
	shf.l.wrap.b32 	%r3441, %r3014, %r3014, 5;
	// begin inline asm
	lop3.b32 %r3009, %r3010, %r3016, %r3012, 150;
	// end inline asm
	xor.b32  	%r3442, %r3333, %r3317;
	xor.b32  	%r3443, %r3442, %r3381;
	xor.b32  	%r3444, %r3443, %r3421;
	shf.l.wrap.b32 	%r3445, %r3444, %r3444, 1;
	add.s32 	%r3446, %r3009, %r3445;
	add.s32 	%r3447, %r3446, %r3008;
	add.s32 	%r3448, %r3447, %r3441;
	add.s32 	%r3018, %r3448, 1859775393;
	shf.l.wrap.b32 	%r3020, %r3010, %r3010, 30;
	shf.l.wrap.b32 	%r3449, %r3018, %r3018, 5;
	// begin inline asm
	lop3.b32 %r3013, %r3014, %r3020, %r3016, 150;
	// end inline asm
	xor.b32  	%r3450, %r3341, %r3325;
	xor.b32  	%r3451, %r3450, %r3389;
	xor.b32  	%r3452, %r3451, %r3429;
	shf.l.wrap.b32 	%r3453, %r3452, %r3452, 1;
	add.s32 	%r3454, %r3013, %r3453;
	add.s32 	%r3455, %r3454, %r3012;
	add.s32 	%r3456, %r3455, %r3449;
	add.s32 	%r3022, %r3456, 1859775393;
	shf.l.wrap.b32 	%r3024, %r3014, %r3014, 30;
	shf.l.wrap.b32 	%r3457, %r3022, %r3022, 5;
	// begin inline asm
	lop3.b32 %r3017, %r3018, %r3024, %r3020, 150;
	// end inline asm
	xor.b32  	%r3458, %r3349, %r3333;
	xor.b32  	%r3459, %r3458, %r3397;
	xor.b32  	%r3460, %r3459, %r3437;
	shf.l.wrap.b32 	%r3461, %r3460, %r3460, 1;
	add.s32 	%r3462, %r3017, %r3461;
	add.s32 	%r3463, %r3462, %r3016;
	add.s32 	%r3464, %r3463, %r3457;
	add.s32 	%r3026, %r3464, 1859775393;
	shf.l.wrap.b32 	%r3028, %r3018, %r3018, 30;
	shf.l.wrap.b32 	%r3465, %r3026, %r3026, 5;
	// begin inline asm
	lop3.b32 %r3021, %r3022, %r3028, %r3024, 150;
	// end inline asm
	xor.b32  	%r3466, %r3357, %r3341;
	xor.b32  	%r3467, %r3466, %r3405;
	xor.b32  	%r3468, %r3467, %r3445;
	shf.l.wrap.b32 	%r3469, %r3468, %r3468, 1;
	add.s32 	%r3470, %r3021, %r3469;
	add.s32 	%r3471, %r3470, %r3020;
	add.s32 	%r3472, %r3471, %r3465;
	add.s32 	%r3030, %r3472, 1859775393;
	shf.l.wrap.b32 	%r3032, %r3022, %r3022, 30;
	shf.l.wrap.b32 	%r3473, %r3030, %r3030, 5;
	// begin inline asm
	lop3.b32 %r3025, %r3026, %r3032, %r3028, 232;
	// end inline asm
	xor.b32  	%r3474, %r3365, %r3349;
	xor.b32  	%r3475, %r3474, %r3413;
	xor.b32  	%r3476, %r3475, %r3453;
	shf.l.wrap.b32 	%r3477, %r3476, %r3476, 1;
	add.s32 	%r3478, %r3025, %r3477;
	add.s32 	%r3479, %r3478, %r3024;
	add.s32 	%r3480, %r3479, %r3473;
	add.s32 	%r3034, %r3480, -1894007588;
	shf.l.wrap.b32 	%r3036, %r3026, %r3026, 30;
	shf.l.wrap.b32 	%r3481, %r3034, %r3034, 5;
	// begin inline asm
	lop3.b32 %r3029, %r3030, %r3036, %r3032, 232;
	// end inline asm
	xor.b32  	%r3482, %r3373, %r3357;
	xor.b32  	%r3483, %r3482, %r3421;
	xor.b32  	%r3484, %r3483, %r3461;
	shf.l.wrap.b32 	%r3485, %r3484, %r3484, 1;
	add.s32 	%r3486, %r3029, %r3485;
	add.s32 	%r3487, %r3486, %r3028;
	add.s32 	%r3488, %r3487, %r3481;
	add.s32 	%r3038, %r3488, -1894007588;
	shf.l.wrap.b32 	%r3040, %r3030, %r3030, 30;
	shf.l.wrap.b32 	%r3489, %r3038, %r3038, 5;
	// begin inline asm
	lop3.b32 %r3033, %r3034, %r3040, %r3036, 232;
	// end inline asm
	xor.b32  	%r3490, %r3381, %r3365;
	xor.b32  	%r3491, %r3490, %r3429;
	xor.b32  	%r3492, %r3491, %r3469;
	shf.l.wrap.b32 	%r3493, %r3492, %r3492, 1;
	add.s32 	%r3494, %r3033, %r3493;
	add.s32 	%r3495, %r3494, %r3032;
	add.s32 	%r3496, %r3495, %r3489;
	add.s32 	%r3042, %r3496, -1894007588;
	shf.l.wrap.b32 	%r3044, %r3034, %r3034, 30;
	shf.l.wrap.b32 	%r3497, %r3042, %r3042, 5;
	// begin inline asm
	lop3.b32 %r3037, %r3038, %r3044, %r3040, 232;
	// end inline asm
	xor.b32  	%r3498, %r3389, %r3373;
	xor.b32  	%r3499, %r3498, %r3437;
	xor.b32  	%r3500, %r3499, %r3477;
	shf.l.wrap.b32 	%r3501, %r3500, %r3500, 1;
	add.s32 	%r3502, %r3037, %r3501;
	add.s32 	%r3503, %r3502, %r3036;
	add.s32 	%r3504, %r3503, %r3497;
	add.s32 	%r3046, %r3504, -1894007588;
	shf.l.wrap.b32 	%r3048, %r3038, %r3038, 30;
	shf.l.wrap.b32 	%r3505, %r3046, %r3046, 5;
	// begin inline asm
	lop3.b32 %r3041, %r3042, %r3048, %r3044, 232;
	// end inline asm
	xor.b32  	%r3506, %r3397, %r3381;
	xor.b32  	%r3507, %r3506, %r3445;
	xor.b32  	%r3508, %r3507, %r3485;
	shf.l.wrap.b32 	%r3509, %r3508, %r3508, 1;
	add.s32 	%r3510, %r3041, %r3509;
	add.s32 	%r3511, %r3510, %r3040;
	add.s32 	%r3512, %r3511, %r3505;
	add.s32 	%r3050, %r3512, -1894007588;
	shf.l.wrap.b32 	%r3052, %r3042, %r3042, 30;
	shf.l.wrap.b32 	%r3513, %r3050, %r3050, 5;
	// begin inline asm
	lop3.b32 %r3045, %r3046, %r3052, %r3048, 232;
	// end inline asm
	xor.b32  	%r3514, %r3405, %r3389;
	xor.b32  	%r3515, %r3514, %r3453;
	xor.b32  	%r3516, %r3515, %r3493;
	shf.l.wrap.b32 	%r3517, %r3516, %r3516, 1;
	add.s32 	%r3518, %r3045, %r3517;
	add.s32 	%r3519, %r3518, %r3044;
	add.s32 	%r3520, %r3519, %r3513;
	add.s32 	%r3054, %r3520, -1894007588;
	shf.l.wrap.b32 	%r3056, %r3046, %r3046, 30;
	shf.l.wrap.b32 	%r3521, %r3054, %r3054, 5;
	// begin inline asm
	lop3.b32 %r3049, %r3050, %r3056, %r3052, 232;
	// end inline asm
	xor.b32  	%r3522, %r3413, %r3397;
	xor.b32  	%r3523, %r3522, %r3461;
	xor.b32  	%r3524, %r3523, %r3501;
	shf.l.wrap.b32 	%r3525, %r3524, %r3524, 1;
	add.s32 	%r3526, %r3049, %r3525;
	add.s32 	%r3527, %r3526, %r3048;
	add.s32 	%r3528, %r3527, %r3521;
	add.s32 	%r3058, %r3528, -1894007588;
	shf.l.wrap.b32 	%r3060, %r3050, %r3050, 30;
	shf.l.wrap.b32 	%r3529, %r3058, %r3058, 5;
	// begin inline asm
	lop3.b32 %r3053, %r3054, %r3060, %r3056, 232;
	// end inline asm
	xor.b32  	%r3530, %r3421, %r3405;
	xor.b32  	%r3531, %r3530, %r3469;
	xor.b32  	%r3532, %r3531, %r3509;
	shf.l.wrap.b32 	%r3533, %r3532, %r3532, 1;
	add.s32 	%r3534, %r3053, %r3533;
	add.s32 	%r3535, %r3534, %r3052;
	add.s32 	%r3536, %r3535, %r3529;
	add.s32 	%r3062, %r3536, -1894007588;
	shf.l.wrap.b32 	%r3064, %r3054, %r3054, 30;
	shf.l.wrap.b32 	%r3537, %r3062, %r3062, 5;
	// begin inline asm
	lop3.b32 %r3057, %r3058, %r3064, %r3060, 232;
	// end inline asm
	xor.b32  	%r3538, %r3429, %r3413;
	xor.b32  	%r3539, %r3538, %r3477;
	xor.b32  	%r3540, %r3539, %r3517;
	shf.l.wrap.b32 	%r3541, %r3540, %r3540, 1;
	add.s32 	%r3542, %r3057, %r3541;
	add.s32 	%r3543, %r3542, %r3056;
	add.s32 	%r3544, %r3543, %r3537;
	add.s32 	%r3066, %r3544, -1894007588;
	shf.l.wrap.b32 	%r3068, %r3058, %r3058, 30;
	shf.l.wrap.b32 	%r3545, %r3066, %r3066, 5;
	// begin inline asm
	lop3.b32 %r3061, %r3062, %r3068, %r3064, 232;
	// end inline asm
	xor.b32  	%r3546, %r3437, %r3421;
	xor.b32  	%r3547, %r3546, %r3485;
	xor.b32  	%r3548, %r3547, %r3525;
	shf.l.wrap.b32 	%r3549, %r3548, %r3548, 1;
	add.s32 	%r3550, %r3061, %r3549;
	add.s32 	%r3551, %r3550, %r3060;
	add.s32 	%r3552, %r3551, %r3545;
	add.s32 	%r3070, %r3552, -1894007588;
	shf.l.wrap.b32 	%r3072, %r3062, %r3062, 30;
	shf.l.wrap.b32 	%r3553, %r3070, %r3070, 5;
	// begin inline asm
	lop3.b32 %r3065, %r3066, %r3072, %r3068, 232;
	// end inline asm
	xor.b32  	%r3554, %r3445, %r3429;
	xor.b32  	%r3555, %r3554, %r3493;
	xor.b32  	%r3556, %r3555, %r3533;
	shf.l.wrap.b32 	%r3557, %r3556, %r3556, 1;
	add.s32 	%r3558, %r3065, %r3557;
	add.s32 	%r3559, %r3558, %r3064;
	add.s32 	%r3560, %r3559, %r3553;
	add.s32 	%r3074, %r3560, -1894007588;
	shf.l.wrap.b32 	%r3076, %r3066, %r3066, 30;
	shf.l.wrap.b32 	%r3561, %r3074, %r3074, 5;
	// begin inline asm
	lop3.b32 %r3069, %r3070, %r3076, %r3072, 232;
	// end inline asm
	xor.b32  	%r3562, %r3453, %r3437;
	xor.b32  	%r3563, %r3562, %r3501;
	xor.b32  	%r3564, %r3563, %r3541;
	shf.l.wrap.b32 	%r3565, %r3564, %r3564, 1;
	add.s32 	%r3566, %r3069, %r3565;
	add.s32 	%r3567, %r3566, %r3068;
	add.s32 	%r3568, %r3567, %r3561;
	add.s32 	%r3078, %r3568, -1894007588;
	shf.l.wrap.b32 	%r3080, %r3070, %r3070, 30;
	shf.l.wrap.b32 	%r3569, %r3078, %r3078, 5;
	// begin inline asm
	lop3.b32 %r3073, %r3074, %r3080, %r3076, 232;
	// end inline asm
	xor.b32  	%r3570, %r3461, %r3445;
	xor.b32  	%r3571, %r3570, %r3509;
	xor.b32  	%r3572, %r3571, %r3549;
	shf.l.wrap.b32 	%r3573, %r3572, %r3572, 1;
	add.s32 	%r3574, %r3073, %r3573;
	add.s32 	%r3575, %r3574, %r3072;
	add.s32 	%r3576, %r3575, %r3569;
	add.s32 	%r3082, %r3576, -1894007588;
	shf.l.wrap.b32 	%r3084, %r3074, %r3074, 30;
	shf.l.wrap.b32 	%r3577, %r3082, %r3082, 5;
	// begin inline asm
	lop3.b32 %r3077, %r3078, %r3084, %r3080, 232;
	// end inline asm
	xor.b32  	%r3578, %r3469, %r3453;
	xor.b32  	%r3579, %r3578, %r3517;
	xor.b32  	%r3580, %r3579, %r3557;
	shf.l.wrap.b32 	%r3581, %r3580, %r3580, 1;
	add.s32 	%r3582, %r3077, %r3581;
	add.s32 	%r3583, %r3582, %r3076;
	add.s32 	%r3584, %r3583, %r3577;
	add.s32 	%r3086, %r3584, -1894007588;
	shf.l.wrap.b32 	%r3088, %r3078, %r3078, 30;
	shf.l.wrap.b32 	%r3585, %r3086, %r3086, 5;
	// begin inline asm
	lop3.b32 %r3081, %r3082, %r3088, %r3084, 232;
	// end inline asm
	xor.b32  	%r3586, %r3477, %r3461;
	xor.b32  	%r3587, %r3586, %r3525;
	xor.b32  	%r3588, %r3587, %r3565;
	shf.l.wrap.b32 	%r3589, %r3588, %r3588, 1;
	add.s32 	%r3590, %r3081, %r3589;
	add.s32 	%r3591, %r3590, %r3080;
	add.s32 	%r3592, %r3591, %r3585;
	add.s32 	%r3090, %r3592, -1894007588;
	shf.l.wrap.b32 	%r3092, %r3082, %r3082, 30;
	shf.l.wrap.b32 	%r3593, %r3090, %r3090, 5;
	// begin inline asm
	lop3.b32 %r3085, %r3086, %r3092, %r3088, 232;
	// end inline asm
	xor.b32  	%r3594, %r3485, %r3469;
	xor.b32  	%r3595, %r3594, %r3533;
	xor.b32  	%r3596, %r3595, %r3573;
	shf.l.wrap.b32 	%r3597, %r3596, %r3596, 1;
	add.s32 	%r3598, %r3085, %r3597;
	add.s32 	%r3599, %r3598, %r3084;
	add.s32 	%r3600, %r3599, %r3593;
	add.s32 	%r3094, %r3600, -1894007588;
	shf.l.wrap.b32 	%r3096, %r3086, %r3086, 30;
	shf.l.wrap.b32 	%r3601, %r3094, %r3094, 5;
	// begin inline asm
	lop3.b32 %r3089, %r3090, %r3096, %r3092, 232;
	// end inline asm
	xor.b32  	%r3602, %r3493, %r3477;
	xor.b32  	%r3603, %r3602, %r3541;
	xor.b32  	%r3604, %r3603, %r3581;
	shf.l.wrap.b32 	%r3605, %r3604, %r3604, 1;
	add.s32 	%r3606, %r3089, %r3605;
	add.s32 	%r3607, %r3606, %r3088;
	add.s32 	%r3608, %r3607, %r3601;
	add.s32 	%r3098, %r3608, -1894007588;
	shf.l.wrap.b32 	%r3100, %r3090, %r3090, 30;
	shf.l.wrap.b32 	%r3609, %r3098, %r3098, 5;
	// begin inline asm
	lop3.b32 %r3093, %r3094, %r3100, %r3096, 232;
	// end inline asm
	xor.b32  	%r3610, %r3501, %r3485;
	xor.b32  	%r3611, %r3610, %r3549;
	xor.b32  	%r3612, %r3611, %r3589;
	shf.l.wrap.b32 	%r3613, %r3612, %r3612, 1;
	add.s32 	%r3614, %r3093, %r3613;
	add.s32 	%r3615, %r3614, %r3092;
	add.s32 	%r3616, %r3615, %r3609;
	add.s32 	%r3102, %r3616, -1894007588;
	shf.l.wrap.b32 	%r3104, %r3094, %r3094, 30;
	shf.l.wrap.b32 	%r3617, %r3102, %r3102, 5;
	// begin inline asm
	lop3.b32 %r3097, %r3098, %r3104, %r3100, 232;
	// end inline asm
	xor.b32  	%r3618, %r3509, %r3493;
	xor.b32  	%r3619, %r3618, %r3557;
	xor.b32  	%r3620, %r3619, %r3597;
	shf.l.wrap.b32 	%r3621, %r3620, %r3620, 1;
	add.s32 	%r3622, %r3097, %r3621;
	add.s32 	%r3623, %r3622, %r3096;
	add.s32 	%r3624, %r3623, %r3617;
	add.s32 	%r3106, %r3624, -1894007588;
	shf.l.wrap.b32 	%r3108, %r3098, %r3098, 30;
	shf.l.wrap.b32 	%r3625, %r3106, %r3106, 5;
	// begin inline asm
	lop3.b32 %r3101, %r3102, %r3108, %r3104, 232;
	// end inline asm
	xor.b32  	%r3626, %r3517, %r3501;
	xor.b32  	%r3627, %r3626, %r3565;
	xor.b32  	%r3628, %r3627, %r3605;
	shf.l.wrap.b32 	%r3629, %r3628, %r3628, 1;
	add.s32 	%r3630, %r3101, %r3629;
	add.s32 	%r3631, %r3630, %r3100;
	add.s32 	%r3632, %r3631, %r3625;
	add.s32 	%r3110, %r3632, -1894007588;
	shf.l.wrap.b32 	%r3112, %r3102, %r3102, 30;
	shf.l.wrap.b32 	%r3633, %r3110, %r3110, 5;
	// begin inline asm
	lop3.b32 %r3105, %r3106, %r3112, %r3108, 150;
	// end inline asm
	xor.b32  	%r3634, %r3525, %r3509;
	xor.b32  	%r3635, %r3634, %r3573;
	xor.b32  	%r3636, %r3635, %r3613;
	shf.l.wrap.b32 	%r3637, %r3636, %r3636, 1;
	add.s32 	%r3638, %r3105, %r3637;
	add.s32 	%r3639, %r3638, %r3104;
	add.s32 	%r3640, %r3639, %r3633;
	add.s32 	%r3114, %r3640, -899497514;
	shf.l.wrap.b32 	%r3116, %r3106, %r3106, 30;
	shf.l.wrap.b32 	%r3641, %r3114, %r3114, 5;
	// begin inline asm
	lop3.b32 %r3109, %r3110, %r3116, %r3112, 150;
	// end inline asm
	xor.b32  	%r3642, %r3533, %r3517;
	xor.b32  	%r3643, %r3642, %r3581;
	xor.b32  	%r3644, %r3643, %r3621;
	shf.l.wrap.b32 	%r3645, %r3644, %r3644, 1;
	add.s32 	%r3646, %r3109, %r3645;
	add.s32 	%r3647, %r3646, %r3108;
	add.s32 	%r3648, %r3647, %r3641;
	add.s32 	%r3118, %r3648, -899497514;
	shf.l.wrap.b32 	%r3120, %r3110, %r3110, 30;
	shf.l.wrap.b32 	%r3649, %r3118, %r3118, 5;
	// begin inline asm
	lop3.b32 %r3113, %r3114, %r3120, %r3116, 150;
	// end inline asm
	xor.b32  	%r3650, %r3541, %r3525;
	xor.b32  	%r3651, %r3650, %r3589;
	xor.b32  	%r3652, %r3651, %r3629;
	shf.l.wrap.b32 	%r3653, %r3652, %r3652, 1;
	add.s32 	%r3654, %r3113, %r3653;
	add.s32 	%r3655, %r3654, %r3112;
	add.s32 	%r3656, %r3655, %r3649;
	add.s32 	%r3122, %r3656, -899497514;
	shf.l.wrap.b32 	%r3124, %r3114, %r3114, 30;
	shf.l.wrap.b32 	%r3657, %r3122, %r3122, 5;
	// begin inline asm
	lop3.b32 %r3117, %r3118, %r3124, %r3120, 150;
	// end inline asm
	xor.b32  	%r3658, %r3549, %r3533;
	xor.b32  	%r3659, %r3658, %r3597;
	xor.b32  	%r3660, %r3659, %r3637;
	shf.l.wrap.b32 	%r3661, %r3660, %r3660, 1;
	add.s32 	%r3662, %r3117, %r3661;
	add.s32 	%r3663, %r3662, %r3116;
	add.s32 	%r3664, %r3663, %r3657;
	add.s32 	%r3126, %r3664, -899497514;
	shf.l.wrap.b32 	%r3128, %r3118, %r3118, 30;
	shf.l.wrap.b32 	%r3665, %r3126, %r3126, 5;
	// begin inline asm
	lop3.b32 %r3121, %r3122, %r3128, %r3124, 150;
	// end inline asm
	xor.b32  	%r3666, %r3557, %r3541;
	xor.b32  	%r3667, %r3666, %r3605;
	xor.b32  	%r3668, %r3667, %r3645;
	shf.l.wrap.b32 	%r3669, %r3668, %r3668, 1;
	add.s32 	%r3670, %r3121, %r3669;
	add.s32 	%r3671, %r3670, %r3120;
	add.s32 	%r3672, %r3671, %r3665;
	add.s32 	%r3130, %r3672, -899497514;
	shf.l.wrap.b32 	%r3132, %r3122, %r3122, 30;
	shf.l.wrap.b32 	%r3673, %r3130, %r3130, 5;
	// begin inline asm
	lop3.b32 %r3125, %r3126, %r3132, %r3128, 150;
	// end inline asm
	xor.b32  	%r3674, %r3565, %r3549;
	xor.b32  	%r3675, %r3674, %r3613;
	xor.b32  	%r3676, %r3675, %r3653;
	shf.l.wrap.b32 	%r3677, %r3676, %r3676, 1;
	add.s32 	%r3678, %r3125, %r3677;
	add.s32 	%r3679, %r3678, %r3124;
	add.s32 	%r3680, %r3679, %r3673;
	add.s32 	%r3134, %r3680, -899497514;
	shf.l.wrap.b32 	%r3136, %r3126, %r3126, 30;
	shf.l.wrap.b32 	%r3681, %r3134, %r3134, 5;
	// begin inline asm
	lop3.b32 %r3129, %r3130, %r3136, %r3132, 150;
	// end inline asm
	xor.b32  	%r3682, %r3573, %r3557;
	xor.b32  	%r3683, %r3682, %r3621;
	xor.b32  	%r3684, %r3683, %r3661;
	shf.l.wrap.b32 	%r3685, %r3684, %r3684, 1;
	add.s32 	%r3686, %r3129, %r3685;
	add.s32 	%r3687, %r3686, %r3128;
	add.s32 	%r3688, %r3687, %r3681;
	add.s32 	%r3138, %r3688, -899497514;
	shf.l.wrap.b32 	%r3140, %r3130, %r3130, 30;
	shf.l.wrap.b32 	%r3689, %r3138, %r3138, 5;
	// begin inline asm
	lop3.b32 %r3133, %r3134, %r3140, %r3136, 150;
	// end inline asm
	xor.b32  	%r3690, %r3581, %r3565;
	xor.b32  	%r3691, %r3690, %r3629;
	xor.b32  	%r3692, %r3691, %r3669;
	shf.l.wrap.b32 	%r3693, %r3692, %r3692, 1;
	add.s32 	%r3694, %r3133, %r3693;
	add.s32 	%r3695, %r3694, %r3132;
	add.s32 	%r3696, %r3695, %r3689;
	add.s32 	%r3142, %r3696, -899497514;
	shf.l.wrap.b32 	%r3144, %r3134, %r3134, 30;
	shf.l.wrap.b32 	%r3697, %r3142, %r3142, 5;
	// begin inline asm
	lop3.b32 %r3137, %r3138, %r3144, %r3140, 150;
	// end inline asm
	xor.b32  	%r3698, %r3589, %r3573;
	xor.b32  	%r3699, %r3698, %r3637;
	xor.b32  	%r3700, %r3699, %r3677;
	shf.l.wrap.b32 	%r3701, %r3700, %r3700, 1;
	add.s32 	%r3702, %r3137, %r3701;
	add.s32 	%r3703, %r3702, %r3136;
	add.s32 	%r3704, %r3703, %r3697;
	add.s32 	%r3146, %r3704, -899497514;
	shf.l.wrap.b32 	%r3148, %r3138, %r3138, 30;
	shf.l.wrap.b32 	%r3705, %r3146, %r3146, 5;
	// begin inline asm
	lop3.b32 %r3141, %r3142, %r3148, %r3144, 150;
	// end inline asm
	xor.b32  	%r3706, %r3597, %r3581;
	xor.b32  	%r3707, %r3706, %r3645;
	xor.b32  	%r3708, %r3707, %r3685;
	shf.l.wrap.b32 	%r3709, %r3708, %r3708, 1;
	add.s32 	%r3710, %r3141, %r3709;
	add.s32 	%r3711, %r3710, %r3140;
	add.s32 	%r3712, %r3711, %r3705;
	add.s32 	%r3150, %r3712, -899497514;
	shf.l.wrap.b32 	%r3152, %r3142, %r3142, 30;
	shf.l.wrap.b32 	%r3713, %r3150, %r3150, 5;
	// begin inline asm
	lop3.b32 %r3145, %r3146, %r3152, %r3148, 150;
	// end inline asm
	xor.b32  	%r3714, %r3605, %r3589;
	xor.b32  	%r3715, %r3714, %r3653;
	xor.b32  	%r3716, %r3715, %r3693;
	shf.l.wrap.b32 	%r3717, %r3716, %r3716, 1;
	add.s32 	%r3718, %r3145, %r3717;
	add.s32 	%r3719, %r3718, %r3144;
	add.s32 	%r3720, %r3719, %r3713;
	add.s32 	%r3154, %r3720, -899497514;
	shf.l.wrap.b32 	%r3156, %r3146, %r3146, 30;
	shf.l.wrap.b32 	%r3721, %r3154, %r3154, 5;
	// begin inline asm
	lop3.b32 %r3149, %r3150, %r3156, %r3152, 150;
	// end inline asm
	xor.b32  	%r3722, %r3613, %r3597;
	xor.b32  	%r3723, %r3722, %r3661;
	xor.b32  	%r3724, %r3723, %r3701;
	shf.l.wrap.b32 	%r3725, %r3724, %r3724, 1;
	add.s32 	%r3726, %r3149, %r3725;
	add.s32 	%r3727, %r3726, %r3148;
	add.s32 	%r3728, %r3727, %r3721;
	add.s32 	%r3158, %r3728, -899497514;
	shf.l.wrap.b32 	%r3160, %r3150, %r3150, 30;
	shf.l.wrap.b32 	%r3729, %r3158, %r3158, 5;
	// begin inline asm
	lop3.b32 %r3153, %r3154, %r3160, %r3156, 150;
	// end inline asm
	xor.b32  	%r3730, %r3621, %r3605;
	xor.b32  	%r3731, %r3730, %r3669;
	xor.b32  	%r3732, %r3731, %r3709;
	shf.l.wrap.b32 	%r3733, %r3732, %r3732, 1;
	add.s32 	%r3734, %r3153, %r3733;
	add.s32 	%r3735, %r3734, %r3152;
	add.s32 	%r3736, %r3735, %r3729;
	add.s32 	%r3162, %r3736, -899497514;
	shf.l.wrap.b32 	%r3164, %r3154, %r3154, 30;
	shf.l.wrap.b32 	%r3737, %r3162, %r3162, 5;
	// begin inline asm
	lop3.b32 %r3157, %r3158, %r3164, %r3160, 150;
	// end inline asm
	xor.b32  	%r3738, %r3629, %r3613;
	xor.b32  	%r3739, %r3738, %r3677;
	xor.b32  	%r3740, %r3739, %r3717;
	shf.l.wrap.b32 	%r3741, %r3740, %r3740, 1;
	add.s32 	%r3742, %r3157, %r3741;
	add.s32 	%r3743, %r3742, %r3156;
	add.s32 	%r3744, %r3743, %r3737;
	add.s32 	%r3166, %r3744, -899497514;
	shf.l.wrap.b32 	%r3168, %r3158, %r3158, 30;
	shf.l.wrap.b32 	%r3745, %r3166, %r3166, 5;
	// begin inline asm
	lop3.b32 %r3161, %r3162, %r3168, %r3164, 150;
	// end inline asm
	xor.b32  	%r3746, %r3637, %r3621;
	xor.b32  	%r3747, %r3746, %r3685;
	xor.b32  	%r3748, %r3747, %r3725;
	shf.l.wrap.b32 	%r3749, %r3748, %r3748, 1;
	add.s32 	%r3750, %r3161, %r3749;
	add.s32 	%r3751, %r3750, %r3160;
	add.s32 	%r3752, %r3751, %r3745;
	add.s32 	%r3170, %r3752, -899497514;
	shf.l.wrap.b32 	%r3172, %r3162, %r3162, 30;
	shf.l.wrap.b32 	%r3753, %r3170, %r3170, 5;
	// begin inline asm
	lop3.b32 %r3165, %r3166, %r3172, %r3168, 150;
	// end inline asm
	xor.b32  	%r3754, %r3645, %r3629;
	xor.b32  	%r3755, %r3754, %r3693;
	xor.b32  	%r3756, %r3755, %r3733;
	shf.l.wrap.b32 	%r3757, %r3756, %r3756, 1;
	add.s32 	%r3758, %r3165, %r3757;
	add.s32 	%r3759, %r3758, %r3164;
	add.s32 	%r3760, %r3759, %r3753;
	add.s32 	%r3174, %r3760, -899497514;
	shf.l.wrap.b32 	%r3176, %r3166, %r3166, 30;
	shf.l.wrap.b32 	%r3761, %r3174, %r3174, 5;
	// begin inline asm
	lop3.b32 %r3169, %r3170, %r3176, %r3172, 150;
	// end inline asm
	xor.b32  	%r3762, %r3653, %r3637;
	xor.b32  	%r3763, %r3762, %r3701;
	xor.b32  	%r3764, %r3763, %r3741;
	shf.l.wrap.b32 	%r3765, %r3764, %r3764, 1;
	add.s32 	%r3766, %r3169, %r3765;
	add.s32 	%r3767, %r3766, %r3168;
	add.s32 	%r3768, %r3767, %r3761;
	add.s32 	%r3178, %r3768, -899497514;
	shf.l.wrap.b32 	%r3180, %r3170, %r3170, 30;
	shf.l.wrap.b32 	%r3769, %r3178, %r3178, 5;
	// begin inline asm
	lop3.b32 %r3173, %r3174, %r3180, %r3176, 150;
	// end inline asm
	xor.b32  	%r3770, %r3661, %r3645;
	xor.b32  	%r3771, %r3770, %r3709;
	xor.b32  	%r3772, %r3771, %r3749;
	shf.l.wrap.b32 	%r3773, %r3772, %r3772, 1;
	add.s32 	%r3774, %r3173, %r3773;
	add.s32 	%r3775, %r3774, %r3172;
	add.s32 	%r3776, %r3775, %r3769;
	add.s32 	%r3182, %r3776, -899497514;
	shf.l.wrap.b32 	%r3184, %r3174, %r3174, 30;
	shf.l.wrap.b32 	%r3777, %r3182, %r3182, 5;
	// begin inline asm
	lop3.b32 %r3177, %r3178, %r3184, %r3180, 150;
	// end inline asm
	xor.b32  	%r3778, %r3669, %r3653;
	xor.b32  	%r3779, %r3778, %r3717;
	xor.b32  	%r3780, %r3779, %r3757;
	shf.l.wrap.b32 	%r3781, %r3780, %r3780, 1;
	add.s32 	%r3782, %r3177, %r3781;
	add.s32 	%r3783, %r3782, %r3176;
	add.s32 	%r3784, %r3783, %r3777;
	add.s32 	%r3785, %r3784, -899497514;
	shf.l.wrap.b32 	%r3183, %r3178, %r3178, 30;
	shf.l.wrap.b32 	%r3786, %r3785, %r3785, 5;
	// begin inline asm
	lop3.b32 %r3181, %r3182, %r3183, %r3184, 150;
	// end inline asm
	xor.b32  	%r3787, %r3677, %r3661;
	xor.b32  	%r3788, %r3787, %r3725;
	xor.b32  	%r3789, %r3788, %r3765;
	shf.l.wrap.b32 	%r3790, %r3789, %r3789, 1;
	shf.l.wrap.b32 	%r3791, %r3182, %r3182, 30;
	add.s32 	%r3792, %r5621, %r3181;
	add.s32 	%r3793, %r3792, %r3790;
	add.s32 	%r3794, %r3793, %r3180;
	add.s32 	%r3795, %r3794, %r3786;
	add.s32 	%r5621, %r3795, -899497514;
	add.s32 	%r5620, %r3785, %r5620;
	add.s32 	%r5619, %r3791, %r5619;
	add.s32 	%r5618, %r3183, %r5618;
	add.s32 	%r5617, %r3184, %r5617;
	mov.u32 	%r3796, 0;
	st.local.v4.u32 	[%rd1], {%r3796, %r3796, %r3796, %r3796};
	st.local.v4.u32 	[%rd1+16], {%r3796, %r3796, %r3796, %r3796};
	st.local.v4.u32 	[%rd1+32], {%r3796, %r3796, %r3796, %r3796};
	st.local.v2.u32 	[%rd1+48], {%r3796, %r3796};
	st.local.u32 	[%rd1+56], %r3796;
	setp.lt.u32 	%p11, %r5623, 61;
	@%p11 bra 	$L__BB0_17;

	add.s32 	%r3797, %r5623, -61;
	xor.b32  	%r3798, %r3797, 3;
	cvt.u64.u32 	%rd41, %r3798;
	add.s64 	%rd42, %rd1, %rd41;
	mov.u16 	%rs8, 1;
	st.local.u8 	[%rd42], %rs8;

$L__BB0_17:
	setp.lt.u32 	%p12, %r5623, 60;
	@%p12 bra 	$L__BB0_20;

	add.s32 	%r3799, %r5623, -60;
	xor.b32  	%r3800, %r3799, 3;
	cvt.u64.u32 	%rd43, %r3800;
	add.s64 	%rd44, %rd1, %rd43;
	mov.u16 	%rs9, 128;
	st.local.u8 	[%rd44], %rs9;

$L__BB0_20:
	shl.b32 	%r4445, %r13, 3;
	add.s32 	%r4446, %r4445, 544;
	ld.local.v4.u32 	{%r4447, %r4448, %r4449, %r4450}, [%rd1];
	mov.u32 	%r4452, 0;
	shf.l.wrap.b32 	%r4456, %r5621, %r5621, 5;
	add.s32 	%r4457, %r4456, %r5617;
	// begin inline asm
	lop3.b32 %r3805, %r5620, %r5619, %r5618, 202;
	// end inline asm
	add.s32 	%r4458, %r4457, %r3805;
	add.s32 	%r4459, %r4458, %r4447;
	add.s32 	%r3814, %r4459, 1518500249;
	shf.l.wrap.b32 	%r4460, %r3814, %r3814, 5;
	shf.l.wrap.b32 	%r3816, %r5620, %r5620, 30;
	// begin inline asm
	lop3.b32 %r3809, %r5621, %r3816, %r5619, 202;
	// end inline asm
	add.s32 	%r4461, %r5618, %r3809;
	add.s32 	%r4462, %r4461, %r4448;
	add.s32 	%r4463, %r4462, %r4460;
	add.s32 	%r3818, %r4463, 1518500249;
	shf.l.wrap.b32 	%r4464, %r3818, %r3818, 5;
	shf.l.wrap.b32 	%r3820, %r5621, %r5621, 30;
	// begin inline asm
	lop3.b32 %r3813, %r3814, %r3820, %r3816, 202;
	// end inline asm
	add.s32 	%r4465, %r5619, %r3813;
	add.s32 	%r4466, %r4465, %r4449;
	add.s32 	%r4467, %r4466, %r4464;
	add.s32 	%r3822, %r4467, 1518500249;
	shf.l.wrap.b32 	%r3824, %r3814, %r3814, 30;
	shf.l.wrap.b32 	%r4468, %r3822, %r3822, 5;
	// begin inline asm
	lop3.b32 %r3817, %r3818, %r3824, %r3820, 202;
	// end inline asm
	add.s32 	%r4469, %r3816, %r3817;
	add.s32 	%r4470, %r4469, %r4450;
	add.s32 	%r4471, %r4470, %r4468;
	add.s32 	%r3826, %r4471, 1518500249;
	shf.l.wrap.b32 	%r3828, %r3818, %r3818, 30;
	shf.l.wrap.b32 	%r4472, %r3826, %r3826, 5;
	// begin inline asm
	lop3.b32 %r3821, %r3822, %r3828, %r3824, 202;
	// end inline asm
	ld.local.v4.u32 	{%r4473, %r4474, %r4475, %r4476}, [%rd1+16];
	add.s32 	%r4481, %r3820, %r3821;
	add.s32 	%r4482, %r4481, %r4473;
	add.s32 	%r4483, %r4482, %r4472;
	add.s32 	%r3830, %r4483, 1518500249;
	shf.l.wrap.b32 	%r3832, %r3822, %r3822, 30;
	shf.l.wrap.b32 	%r4484, %r3830, %r3830, 5;
	// begin inline asm
	lop3.b32 %r3825, %r3826, %r3832, %r3828, 202;
	// end inline asm
	add.s32 	%r4485, %r3824, %r3825;
	add.s32 	%r4486, %r4485, %r4474;
	add.s32 	%r4487, %r4486, %r4484;
	add.s32 	%r3834, %r4487, 1518500249;
	shf.l.wrap.b32 	%r3836, %r3826, %r3826, 30;
	shf.l.wrap.b32 	%r4488, %r3834, %r3834, 5;
	// begin inline asm
	lop3.b32 %r3829, %r3830, %r3836, %r3832, 202;
	// end inline asm
	add.s32 	%r4489, %r3828, %r3829;
	add.s32 	%r4490, %r4489, %r4475;
	add.s32 	%r4491, %r4490, %r4488;
	add.s32 	%r3838, %r4491, 1518500249;
	shf.l.wrap.b32 	%r3840, %r3830, %r3830, 30;
	shf.l.wrap.b32 	%r4492, %r3838, %r3838, 5;
	// begin inline asm
	lop3.b32 %r3833, %r3834, %r3840, %r3836, 202;
	// end inline asm
	add.s32 	%r4493, %r3833, %r4476;
	add.s32 	%r4494, %r4493, %r3832;
	add.s32 	%r4495, %r4494, %r4492;
	add.s32 	%r3842, %r4495, 1518500249;
	shf.l.wrap.b32 	%r3844, %r3834, %r3834, 30;
	shf.l.wrap.b32 	%r4496, %r3842, %r3842, 5;
	// begin inline asm
	lop3.b32 %r3837, %r3838, %r3844, %r3840, 202;
	// end inline asm
	ld.local.v4.u32 	{%r4497, %r4498, %r4499, %r4500}, [%rd1+32];
	add.s32 	%r4505, %r3837, %r4497;
	add.s32 	%r4506, %r4505, %r3836;
	add.s32 	%r4507, %r4506, %r4496;
	add.s32 	%r3846, %r4507, 1518500249;
	shf.l.wrap.b32 	%r3848, %r3838, %r3838, 30;
	shf.l.wrap.b32 	%r4508, %r3846, %r3846, 5;
	// begin inline asm
	lop3.b32 %r3841, %r3842, %r3848, %r3844, 202;
	// end inline asm
	add.s32 	%r4509, %r3841, %r4498;
	add.s32 	%r4510, %r4509, %r3840;
	add.s32 	%r4511, %r4510, %r4508;
	add.s32 	%r3850, %r4511, 1518500249;
	shf.l.wrap.b32 	%r3852, %r3842, %r3842, 30;
	shf.l.wrap.b32 	%r4512, %r3850, %r3850, 5;
	// begin inline asm
	lop3.b32 %r3845, %r3846, %r3852, %r3848, 202;
	// end inline asm
	add.s32 	%r4513, %r3845, %r4499;
	add.s32 	%r4514, %r4513, %r3844;
	add.s32 	%r4515, %r4514, %r4512;
	add.s32 	%r3854, %r4515, 1518500249;
	shf.l.wrap.b32 	%r3856, %r3846, %r3846, 30;
	shf.l.wrap.b32 	%r4516, %r3854, %r3854, 5;
	// begin inline asm
	lop3.b32 %r3849, %r3850, %r3856, %r3852, 202;
	// end inline asm
	add.s32 	%r4517, %r3849, %r4500;
	add.s32 	%r4518, %r4517, %r3848;
	add.s32 	%r4519, %r4518, %r4516;
	add.s32 	%r3858, %r4519, 1518500249;
	shf.l.wrap.b32 	%r3860, %r3850, %r3850, 30;
	shf.l.wrap.b32 	%r4520, %r3858, %r3858, 5;
	// begin inline asm
	lop3.b32 %r3853, %r3854, %r3860, %r3856, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r4521, %r4522, %r4523, %r4524}, [%rd1+48];
	add.s32 	%r4528, %r3853, %r4521;
	add.s32 	%r4529, %r4528, %r3852;
	add.s32 	%r4530, %r4529, %r4520;
	add.s32 	%r3862, %r4530, 1518500249;
	shf.l.wrap.b32 	%r3864, %r3854, %r3854, 30;
	shf.l.wrap.b32 	%r4531, %r3862, %r3862, 5;
	// begin inline asm
	lop3.b32 %r3857, %r3858, %r3864, %r3860, 202;
	// end inline asm
	add.s32 	%r4532, %r3857, %r4522;
	add.s32 	%r4533, %r4532, %r3856;
	add.s32 	%r4534, %r4533, %r4531;
	add.s32 	%r3866, %r4534, 1518500249;
	shf.l.wrap.b32 	%r3868, %r3858, %r3858, 30;
	shf.l.wrap.b32 	%r4535, %r3866, %r3866, 5;
	// begin inline asm
	lop3.b32 %r3861, %r3862, %r3868, %r3864, 202;
	// end inline asm
	add.s32 	%r4536, %r3861, %r4523;
	add.s32 	%r4537, %r4536, %r3860;
	add.s32 	%r4538, %r4537, %r4535;
	add.s32 	%r3870, %r4538, 1518500249;
	shf.l.wrap.b32 	%r3872, %r3862, %r3862, 30;
	shf.l.wrap.b32 	%r4539, %r3870, %r3870, 5;
	// begin inline asm
	lop3.b32 %r3865, %r3866, %r3872, %r3868, 202;
	// end inline asm
	add.s32 	%r4540, %r3865, %r4446;
	add.s32 	%r4541, %r4540, %r3864;
	add.s32 	%r4542, %r4541, %r4539;
	add.s32 	%r3874, %r4542, 1518500249;
	shf.l.wrap.b32 	%r3876, %r3866, %r3866, 30;
	shf.l.wrap.b32 	%r4543, %r3874, %r3874, 5;
	// begin inline asm
	lop3.b32 %r3869, %r3870, %r3876, %r3872, 202;
	// end inline asm
	xor.b32  	%r4544, %r4497, %r4522;
	xor.b32  	%r4545, %r4544, %r4449;
	xor.b32  	%r4546, %r4545, %r4447;
	shf.l.wrap.b32 	%r4547, %r4546, %r4546, 1;
	add.s32 	%r4548, %r3869, %r4547;
	add.s32 	%r4549, %r4548, %r3868;
	add.s32 	%r4550, %r4549, %r4543;
	add.s32 	%r3878, %r4550, 1518500249;
	shf.l.wrap.b32 	%r3880, %r3870, %r3870, 30;
	shf.l.wrap.b32 	%r4551, %r3878, %r3878, 5;
	// begin inline asm
	lop3.b32 %r3873, %r3874, %r3880, %r3876, 202;
	// end inline asm
	xor.b32  	%r4552, %r4498, %r4523;
	xor.b32  	%r4553, %r4552, %r4450;
	xor.b32  	%r4554, %r4553, %r4448;
	shf.l.wrap.b32 	%r4555, %r4554, %r4554, 1;
	add.s32 	%r4556, %r3873, %r4555;
	add.s32 	%r4557, %r4556, %r3872;
	add.s32 	%r4558, %r4557, %r4551;
	add.s32 	%r3882, %r4558, 1518500249;
	shf.l.wrap.b32 	%r3884, %r3874, %r3874, 30;
	shf.l.wrap.b32 	%r4559, %r3882, %r3882, 5;
	// begin inline asm
	lop3.b32 %r3877, %r3878, %r3884, %r3880, 202;
	// end inline asm
	xor.b32  	%r4560, %r4499, %r4446;
	xor.b32  	%r4561, %r4560, %r4473;
	xor.b32  	%r4562, %r4561, %r4449;
	shf.l.wrap.b32 	%r4563, %r4562, %r4562, 1;
	add.s32 	%r4564, %r3877, %r4563;
	add.s32 	%r4565, %r4564, %r3876;
	add.s32 	%r4566, %r4565, %r4559;
	add.s32 	%r3886, %r4566, 1518500249;
	shf.l.wrap.b32 	%r3888, %r3878, %r3878, 30;
	shf.l.wrap.b32 	%r4567, %r3886, %r3886, 5;
	// begin inline asm
	lop3.b32 %r3881, %r3882, %r3888, %r3884, 202;
	// end inline asm
	xor.b32  	%r4568, %r4500, %r4547;
	xor.b32  	%r4569, %r4568, %r4474;
	xor.b32  	%r4570, %r4569, %r4450;
	shf.l.wrap.b32 	%r4571, %r4570, %r4570, 1;
	add.s32 	%r4572, %r3881, %r4571;
	add.s32 	%r4573, %r4572, %r3880;
	add.s32 	%r4574, %r4573, %r4567;
	add.s32 	%r3890, %r4574, 1518500249;
	shf.l.wrap.b32 	%r3892, %r3882, %r3882, 30;
	shf.l.wrap.b32 	%r4575, %r3890, %r3890, 5;
	// begin inline asm
	lop3.b32 %r3885, %r3886, %r3892, %r3888, 150;
	// end inline asm
	xor.b32  	%r4576, %r4521, %r4555;
	xor.b32  	%r4577, %r4576, %r4475;
	xor.b32  	%r4578, %r4577, %r4473;
	shf.l.wrap.b32 	%r4579, %r4578, %r4578, 1;
	add.s32 	%r4580, %r3885, %r4579;
	add.s32 	%r4581, %r4580, %r3884;
	add.s32 	%r4582, %r4581, %r4575;
	add.s32 	%r3894, %r4582, 1859775393;
	shf.l.wrap.b32 	%r3896, %r3886, %r3886, 30;
	shf.l.wrap.b32 	%r4583, %r3894, %r3894, 5;
	// begin inline asm
	lop3.b32 %r3889, %r3890, %r3896, %r3892, 150;
	// end inline asm
	xor.b32  	%r4584, %r4522, %r4563;
	xor.b32  	%r4585, %r4584, %r4476;
	xor.b32  	%r4586, %r4585, %r4474;
	shf.l.wrap.b32 	%r4587, %r4586, %r4586, 1;
	add.s32 	%r4588, %r3889, %r4587;
	add.s32 	%r4589, %r4588, %r3888;
	add.s32 	%r4590, %r4589, %r4583;
	add.s32 	%r3898, %r4590, 1859775393;
	shf.l.wrap.b32 	%r3900, %r3890, %r3890, 30;
	shf.l.wrap.b32 	%r4591, %r3898, %r3898, 5;
	// begin inline asm
	lop3.b32 %r3893, %r3894, %r3900, %r3896, 150;
	// end inline asm
	xor.b32  	%r4592, %r4523, %r4571;
	xor.b32  	%r4593, %r4592, %r4497;
	xor.b32  	%r4594, %r4593, %r4475;
	shf.l.wrap.b32 	%r4595, %r4594, %r4594, 1;
	add.s32 	%r4596, %r3893, %r4595;
	add.s32 	%r4597, %r4596, %r3892;
	add.s32 	%r4598, %r4597, %r4591;
	add.s32 	%r3902, %r4598, 1859775393;
	shf.l.wrap.b32 	%r3904, %r3894, %r3894, 30;
	shf.l.wrap.b32 	%r4599, %r3902, %r3902, 5;
	// begin inline asm
	lop3.b32 %r3897, %r3898, %r3904, %r3900, 150;
	// end inline asm
	xor.b32  	%r4600, %r4446, %r4579;
	xor.b32  	%r4601, %r4600, %r4498;
	xor.b32  	%r4602, %r4601, %r4476;
	shf.l.wrap.b32 	%r4603, %r4602, %r4602, 1;
	add.s32 	%r4604, %r3897, %r4603;
	add.s32 	%r4605, %r4604, %r3896;
	add.s32 	%r4606, %r4605, %r4599;
	add.s32 	%r3906, %r4606, 1859775393;
	shf.l.wrap.b32 	%r3908, %r3898, %r3898, 30;
	shf.l.wrap.b32 	%r4607, %r3906, %r3906, 5;
	// begin inline asm
	lop3.b32 %r3901, %r3902, %r3908, %r3904, 150;
	// end inline asm
	xor.b32  	%r4608, %r4587, %r4547;
	xor.b32  	%r4609, %r4608, %r4499;
	xor.b32  	%r4610, %r4609, %r4497;
	shf.l.wrap.b32 	%r4611, %r4610, %r4610, 1;
	add.s32 	%r4612, %r3901, %r4611;
	add.s32 	%r4613, %r4612, %r3900;
	add.s32 	%r4614, %r4613, %r4607;
	add.s32 	%r3910, %r4614, 1859775393;
	shf.l.wrap.b32 	%r3912, %r3902, %r3902, 30;
	shf.l.wrap.b32 	%r4615, %r3910, %r3910, 5;
	// begin inline asm
	lop3.b32 %r3905, %r3906, %r3912, %r3908, 150;
	// end inline asm
	xor.b32  	%r4616, %r4595, %r4555;
	xor.b32  	%r4617, %r4616, %r4500;
	xor.b32  	%r4618, %r4617, %r4498;
	shf.l.wrap.b32 	%r4619, %r4618, %r4618, 1;
	add.s32 	%r4620, %r3905, %r4619;
	add.s32 	%r4621, %r4620, %r3904;
	add.s32 	%r4622, %r4621, %r4615;
	add.s32 	%r3914, %r4622, 1859775393;
	shf.l.wrap.b32 	%r3916, %r3906, %r3906, 30;
	shf.l.wrap.b32 	%r4623, %r3914, %r3914, 5;
	// begin inline asm
	lop3.b32 %r3909, %r3910, %r3916, %r3912, 150;
	// end inline asm
	xor.b32  	%r4624, %r4603, %r4563;
	xor.b32  	%r4625, %r4624, %r4521;
	xor.b32  	%r4626, %r4625, %r4499;
	shf.l.wrap.b32 	%r4627, %r4626, %r4626, 1;
	add.s32 	%r4628, %r3909, %r4627;
	add.s32 	%r4629, %r4628, %r3908;
	add.s32 	%r4630, %r4629, %r4623;
	add.s32 	%r3918, %r4630, 1859775393;
	shf.l.wrap.b32 	%r3920, %r3910, %r3910, 30;
	shf.l.wrap.b32 	%r4631, %r3918, %r3918, 5;
	// begin inline asm
	lop3.b32 %r3913, %r3914, %r3920, %r3916, 150;
	// end inline asm
	xor.b32  	%r4632, %r4611, %r4571;
	xor.b32  	%r4633, %r4632, %r4522;
	xor.b32  	%r4634, %r4633, %r4500;
	shf.l.wrap.b32 	%r4635, %r4634, %r4634, 1;
	add.s32 	%r4636, %r3913, %r4635;
	add.s32 	%r4637, %r4636, %r3912;
	add.s32 	%r4638, %r4637, %r4631;
	add.s32 	%r3922, %r4638, 1859775393;
	shf.l.wrap.b32 	%r3924, %r3914, %r3914, 30;
	shf.l.wrap.b32 	%r4639, %r3922, %r3922, 5;
	// begin inline asm
	lop3.b32 %r3917, %r3918, %r3924, %r3920, 150;
	// end inline asm
	xor.b32  	%r4640, %r4619, %r4579;
	xor.b32  	%r4641, %r4640, %r4523;
	xor.b32  	%r4642, %r4641, %r4521;
	shf.l.wrap.b32 	%r4643, %r4642, %r4642, 1;
	add.s32 	%r4644, %r3917, %r4643;
	add.s32 	%r4645, %r4644, %r3916;
	add.s32 	%r4646, %r4645, %r4639;
	add.s32 	%r3926, %r4646, 1859775393;
	shf.l.wrap.b32 	%r3928, %r3918, %r3918, 30;
	shf.l.wrap.b32 	%r4647, %r3926, %r3926, 5;
	// begin inline asm
	lop3.b32 %r3921, %r3922, %r3928, %r3924, 150;
	// end inline asm
	xor.b32  	%r4648, %r4627, %r4587;
	xor.b32  	%r4649, %r4648, %r4446;
	xor.b32  	%r4650, %r4649, %r4522;
	shf.l.wrap.b32 	%r4651, %r4650, %r4650, 1;
	add.s32 	%r4652, %r3921, %r4651;
	add.s32 	%r4653, %r4652, %r3920;
	add.s32 	%r4654, %r4653, %r4647;
	add.s32 	%r3930, %r4654, 1859775393;
	shf.l.wrap.b32 	%r3932, %r3922, %r3922, 30;
	shf.l.wrap.b32 	%r4655, %r3930, %r3930, 5;
	// begin inline asm
	lop3.b32 %r3925, %r3926, %r3932, %r3928, 150;
	// end inline asm
	xor.b32  	%r4656, %r4595, %r4547;
	xor.b32  	%r4657, %r4656, %r4635;
	xor.b32  	%r4658, %r4657, %r4523;
	shf.l.wrap.b32 	%r4659, %r4658, %r4658, 1;
	add.s32 	%r4660, %r3925, %r4659;
	add.s32 	%r4661, %r4660, %r3924;
	add.s32 	%r4662, %r4661, %r4655;
	add.s32 	%r3934, %r4662, 1859775393;
	shf.l.wrap.b32 	%r3936, %r3926, %r3926, 30;
	shf.l.wrap.b32 	%r4663, %r3934, %r3934, 5;
	// begin inline asm
	lop3.b32 %r3929, %r3930, %r3936, %r3932, 150;
	// end inline asm
	xor.b32  	%r4664, %r4603, %r4555;
	xor.b32  	%r4665, %r4664, %r4643;
	xor.b32  	%r4666, %r4665, %r4446;
	shf.l.wrap.b32 	%r4667, %r4666, %r4666, 1;
	add.s32 	%r4668, %r3929, %r4667;
	add.s32 	%r4669, %r4668, %r3928;
	add.s32 	%r4670, %r4669, %r4663;
	add.s32 	%r3938, %r4670, 1859775393;
	shf.l.wrap.b32 	%r3940, %r3930, %r3930, 30;
	shf.l.wrap.b32 	%r4671, %r3938, %r3938, 5;
	// begin inline asm
	lop3.b32 %r3933, %r3934, %r3940, %r3936, 150;
	// end inline asm
	xor.b32  	%r4672, %r4563, %r4547;
	xor.b32  	%r4673, %r4672, %r4611;
	xor.b32  	%r4674, %r4673, %r4651;
	shf.l.wrap.b32 	%r4675, %r4674, %r4674, 1;
	add.s32 	%r4676, %r3933, %r4675;
	add.s32 	%r4677, %r4676, %r3932;
	add.s32 	%r4678, %r4677, %r4671;
	add.s32 	%r3942, %r4678, 1859775393;
	shf.l.wrap.b32 	%r3944, %r3934, %r3934, 30;
	shf.l.wrap.b32 	%r4679, %r3942, %r3942, 5;
	// begin inline asm
	lop3.b32 %r3937, %r3938, %r3944, %r3940, 150;
	// end inline asm
	xor.b32  	%r4680, %r4571, %r4555;
	xor.b32  	%r4681, %r4680, %r4619;
	xor.b32  	%r4682, %r4681, %r4659;
	shf.l.wrap.b32 	%r4683, %r4682, %r4682, 1;
	add.s32 	%r4684, %r3937, %r4683;
	add.s32 	%r4685, %r4684, %r3936;
	add.s32 	%r4686, %r4685, %r4679;
	add.s32 	%r3946, %r4686, 1859775393;
	shf.l.wrap.b32 	%r3948, %r3938, %r3938, 30;
	shf.l.wrap.b32 	%r4687, %r3946, %r3946, 5;
	// begin inline asm
	lop3.b32 %r3941, %r3942, %r3948, %r3944, 150;
	// end inline asm
	xor.b32  	%r4688, %r4579, %r4563;
	xor.b32  	%r4689, %r4688, %r4627;
	xor.b32  	%r4690, %r4689, %r4667;
	shf.l.wrap.b32 	%r4691, %r4690, %r4690, 1;
	add.s32 	%r4692, %r3941, %r4691;
	add.s32 	%r4693, %r4692, %r3940;
	add.s32 	%r4694, %r4693, %r4687;
	add.s32 	%r3950, %r4694, 1859775393;
	shf.l.wrap.b32 	%r3952, %r3942, %r3942, 30;
	shf.l.wrap.b32 	%r4695, %r3950, %r3950, 5;
	// begin inline asm
	lop3.b32 %r3945, %r3946, %r3952, %r3948, 150;
	// end inline asm
	xor.b32  	%r4696, %r4587, %r4571;
	xor.b32  	%r4697, %r4696, %r4635;
	xor.b32  	%r4698, %r4697, %r4675;
	shf.l.wrap.b32 	%r4699, %r4698, %r4698, 1;
	add.s32 	%r4700, %r3945, %r4699;
	add.s32 	%r4701, %r4700, %r3944;
	add.s32 	%r4702, %r4701, %r4695;
	add.s32 	%r3954, %r4702, 1859775393;
	shf.l.wrap.b32 	%r3956, %r3946, %r3946, 30;
	shf.l.wrap.b32 	%r4703, %r3954, %r3954, 5;
	// begin inline asm
	lop3.b32 %r3949, %r3950, %r3956, %r3952, 150;
	// end inline asm
	xor.b32  	%r4704, %r4595, %r4579;
	xor.b32  	%r4705, %r4704, %r4643;
	xor.b32  	%r4706, %r4705, %r4683;
	shf.l.wrap.b32 	%r4707, %r4706, %r4706, 1;
	add.s32 	%r4708, %r3949, %r4707;
	add.s32 	%r4709, %r4708, %r3948;
	add.s32 	%r4710, %r4709, %r4703;
	add.s32 	%r3958, %r4710, 1859775393;
	shf.l.wrap.b32 	%r3960, %r3950, %r3950, 30;
	shf.l.wrap.b32 	%r4711, %r3958, %r3958, 5;
	// begin inline asm
	lop3.b32 %r3953, %r3954, %r3960, %r3956, 150;
	// end inline asm
	xor.b32  	%r4712, %r4603, %r4587;
	xor.b32  	%r4713, %r4712, %r4651;
	xor.b32  	%r4714, %r4713, %r4691;
	shf.l.wrap.b32 	%r4715, %r4714, %r4714, 1;
	add.s32 	%r4716, %r3953, %r4715;
	add.s32 	%r4717, %r4716, %r3952;
	add.s32 	%r4718, %r4717, %r4711;
	add.s32 	%r3962, %r4718, 1859775393;
	shf.l.wrap.b32 	%r3964, %r3954, %r3954, 30;
	shf.l.wrap.b32 	%r4719, %r3962, %r3962, 5;
	// begin inline asm
	lop3.b32 %r3957, %r3958, %r3964, %r3960, 150;
	// end inline asm
	xor.b32  	%r4720, %r4611, %r4595;
	xor.b32  	%r4721, %r4720, %r4659;
	xor.b32  	%r4722, %r4721, %r4699;
	shf.l.wrap.b32 	%r4723, %r4722, %r4722, 1;
	add.s32 	%r4724, %r3957, %r4723;
	add.s32 	%r4725, %r4724, %r3956;
	add.s32 	%r4726, %r4725, %r4719;
	add.s32 	%r3966, %r4726, 1859775393;
	shf.l.wrap.b32 	%r3968, %r3958, %r3958, 30;
	shf.l.wrap.b32 	%r4727, %r3966, %r3966, 5;
	// begin inline asm
	lop3.b32 %r3961, %r3962, %r3968, %r3964, 150;
	// end inline asm
	xor.b32  	%r4728, %r4619, %r4603;
	xor.b32  	%r4729, %r4728, %r4667;
	xor.b32  	%r4730, %r4729, %r4707;
	shf.l.wrap.b32 	%r4731, %r4730, %r4730, 1;
	add.s32 	%r4732, %r3961, %r4731;
	add.s32 	%r4733, %r4732, %r3960;
	add.s32 	%r4734, %r4733, %r4727;
	add.s32 	%r3970, %r4734, 1859775393;
	shf.l.wrap.b32 	%r3972, %r3962, %r3962, 30;
	shf.l.wrap.b32 	%r4735, %r3970, %r3970, 5;
	// begin inline asm
	lop3.b32 %r3965, %r3966, %r3972, %r3968, 232;
	// end inline asm
	xor.b32  	%r4736, %r4627, %r4611;
	xor.b32  	%r4737, %r4736, %r4675;
	xor.b32  	%r4738, %r4737, %r4715;
	shf.l.wrap.b32 	%r4739, %r4738, %r4738, 1;
	add.s32 	%r4740, %r3965, %r4739;
	add.s32 	%r4741, %r4740, %r3964;
	add.s32 	%r4742, %r4741, %r4735;
	add.s32 	%r3974, %r4742, -1894007588;
	shf.l.wrap.b32 	%r3976, %r3966, %r3966, 30;
	shf.l.wrap.b32 	%r4743, %r3974, %r3974, 5;
	// begin inline asm
	lop3.b32 %r3969, %r3970, %r3976, %r3972, 232;
	// end inline asm
	xor.b32  	%r4744, %r4635, %r4619;
	xor.b32  	%r4745, %r4744, %r4683;
	xor.b32  	%r4746, %r4745, %r4723;
	shf.l.wrap.b32 	%r4747, %r4746, %r4746, 1;
	add.s32 	%r4748, %r3969, %r4747;
	add.s32 	%r4749, %r4748, %r3968;
	add.s32 	%r4750, %r4749, %r4743;
	add.s32 	%r3978, %r4750, -1894007588;
	shf.l.wrap.b32 	%r3980, %r3970, %r3970, 30;
	shf.l.wrap.b32 	%r4751, %r3978, %r3978, 5;
	// begin inline asm
	lop3.b32 %r3973, %r3974, %r3980, %r3976, 232;
	// end inline asm
	xor.b32  	%r4752, %r4643, %r4627;
	xor.b32  	%r4753, %r4752, %r4691;
	xor.b32  	%r4754, %r4753, %r4731;
	shf.l.wrap.b32 	%r4755, %r4754, %r4754, 1;
	add.s32 	%r4756, %r3973, %r4755;
	add.s32 	%r4757, %r4756, %r3972;
	add.s32 	%r4758, %r4757, %r4751;
	add.s32 	%r3982, %r4758, -1894007588;
	shf.l.wrap.b32 	%r3984, %r3974, %r3974, 30;
	shf.l.wrap.b32 	%r4759, %r3982, %r3982, 5;
	// begin inline asm
	lop3.b32 %r3977, %r3978, %r3984, %r3980, 232;
	// end inline asm
	xor.b32  	%r4760, %r4651, %r4635;
	xor.b32  	%r4761, %r4760, %r4699;
	xor.b32  	%r4762, %r4761, %r4739;
	shf.l.wrap.b32 	%r4763, %r4762, %r4762, 1;
	add.s32 	%r4764, %r3977, %r4763;
	add.s32 	%r4765, %r4764, %r3976;
	add.s32 	%r4766, %r4765, %r4759;
	add.s32 	%r3986, %r4766, -1894007588;
	shf.l.wrap.b32 	%r3988, %r3978, %r3978, 30;
	shf.l.wrap.b32 	%r4767, %r3986, %r3986, 5;
	// begin inline asm
	lop3.b32 %r3981, %r3982, %r3988, %r3984, 232;
	// end inline asm
	xor.b32  	%r4768, %r4659, %r4643;
	xor.b32  	%r4769, %r4768, %r4707;
	xor.b32  	%r4770, %r4769, %r4747;
	shf.l.wrap.b32 	%r4771, %r4770, %r4770, 1;
	add.s32 	%r4772, %r3981, %r4771;
	add.s32 	%r4773, %r4772, %r3980;
	add.s32 	%r4774, %r4773, %r4767;
	add.s32 	%r3990, %r4774, -1894007588;
	shf.l.wrap.b32 	%r3992, %r3982, %r3982, 30;
	shf.l.wrap.b32 	%r4775, %r3990, %r3990, 5;
	// begin inline asm
	lop3.b32 %r3985, %r3986, %r3992, %r3988, 232;
	// end inline asm
	xor.b32  	%r4776, %r4667, %r4651;
	xor.b32  	%r4777, %r4776, %r4715;
	xor.b32  	%r4778, %r4777, %r4755;
	shf.l.wrap.b32 	%r4779, %r4778, %r4778, 1;
	add.s32 	%r4780, %r3985, %r4779;
	add.s32 	%r4781, %r4780, %r3984;
	add.s32 	%r4782, %r4781, %r4775;
	add.s32 	%r3994, %r4782, -1894007588;
	shf.l.wrap.b32 	%r3996, %r3986, %r3986, 30;
	shf.l.wrap.b32 	%r4783, %r3994, %r3994, 5;
	// begin inline asm
	lop3.b32 %r3989, %r3990, %r3996, %r3992, 232;
	// end inline asm
	xor.b32  	%r4784, %r4675, %r4659;
	xor.b32  	%r4785, %r4784, %r4723;
	xor.b32  	%r4786, %r4785, %r4763;
	shf.l.wrap.b32 	%r4787, %r4786, %r4786, 1;
	add.s32 	%r4788, %r3989, %r4787;
	add.s32 	%r4789, %r4788, %r3988;
	add.s32 	%r4790, %r4789, %r4783;
	add.s32 	%r3998, %r4790, -1894007588;
	shf.l.wrap.b32 	%r4000, %r3990, %r3990, 30;
	shf.l.wrap.b32 	%r4791, %r3998, %r3998, 5;
	// begin inline asm
	lop3.b32 %r3993, %r3994, %r4000, %r3996, 232;
	// end inline asm
	xor.b32  	%r4792, %r4683, %r4667;
	xor.b32  	%r4793, %r4792, %r4731;
	xor.b32  	%r4794, %r4793, %r4771;
	shf.l.wrap.b32 	%r4795, %r4794, %r4794, 1;
	add.s32 	%r4796, %r3993, %r4795;
	add.s32 	%r4797, %r4796, %r3992;
	add.s32 	%r4798, %r4797, %r4791;
	add.s32 	%r4002, %r4798, -1894007588;
	shf.l.wrap.b32 	%r4004, %r3994, %r3994, 30;
	shf.l.wrap.b32 	%r4799, %r4002, %r4002, 5;
	// begin inline asm
	lop3.b32 %r3997, %r3998, %r4004, %r4000, 232;
	// end inline asm
	xor.b32  	%r4800, %r4691, %r4675;
	xor.b32  	%r4801, %r4800, %r4739;
	xor.b32  	%r4802, %r4801, %r4779;
	shf.l.wrap.b32 	%r4803, %r4802, %r4802, 1;
	add.s32 	%r4804, %r3997, %r4803;
	add.s32 	%r4805, %r4804, %r3996;
	add.s32 	%r4806, %r4805, %r4799;
	add.s32 	%r4006, %r4806, -1894007588;
	shf.l.wrap.b32 	%r4008, %r3998, %r3998, 30;
	shf.l.wrap.b32 	%r4807, %r4006, %r4006, 5;
	// begin inline asm
	lop3.b32 %r4001, %r4002, %r4008, %r4004, 232;
	// end inline asm
	xor.b32  	%r4808, %r4699, %r4683;
	xor.b32  	%r4809, %r4808, %r4747;
	xor.b32  	%r4810, %r4809, %r4787;
	shf.l.wrap.b32 	%r4811, %r4810, %r4810, 1;
	add.s32 	%r4812, %r4001, %r4811;
	add.s32 	%r4813, %r4812, %r4000;
	add.s32 	%r4814, %r4813, %r4807;
	add.s32 	%r4010, %r4814, -1894007588;
	shf.l.wrap.b32 	%r4012, %r4002, %r4002, 30;
	shf.l.wrap.b32 	%r4815, %r4010, %r4010, 5;
	// begin inline asm
	lop3.b32 %r4005, %r4006, %r4012, %r4008, 232;
	// end inline asm
	xor.b32  	%r4816, %r4707, %r4691;
	xor.b32  	%r4817, %r4816, %r4755;
	xor.b32  	%r4818, %r4817, %r4795;
	shf.l.wrap.b32 	%r4819, %r4818, %r4818, 1;
	add.s32 	%r4820, %r4005, %r4819;
	add.s32 	%r4821, %r4820, %r4004;
	add.s32 	%r4822, %r4821, %r4815;
	add.s32 	%r4014, %r4822, -1894007588;
	shf.l.wrap.b32 	%r4016, %r4006, %r4006, 30;
	shf.l.wrap.b32 	%r4823, %r4014, %r4014, 5;
	// begin inline asm
	lop3.b32 %r4009, %r4010, %r4016, %r4012, 232;
	// end inline asm
	xor.b32  	%r4824, %r4715, %r4699;
	xor.b32  	%r4825, %r4824, %r4763;
	xor.b32  	%r4826, %r4825, %r4803;
	shf.l.wrap.b32 	%r4827, %r4826, %r4826, 1;
	add.s32 	%r4828, %r4009, %r4827;
	add.s32 	%r4829, %r4828, %r4008;
	add.s32 	%r4830, %r4829, %r4823;
	add.s32 	%r4018, %r4830, -1894007588;
	shf.l.wrap.b32 	%r4020, %r4010, %r4010, 30;
	shf.l.wrap.b32 	%r4831, %r4018, %r4018, 5;
	// begin inline asm
	lop3.b32 %r4013, %r4014, %r4020, %r4016, 232;
	// end inline asm
	xor.b32  	%r4832, %r4723, %r4707;
	xor.b32  	%r4833, %r4832, %r4771;
	xor.b32  	%r4834, %r4833, %r4811;
	shf.l.wrap.b32 	%r4835, %r4834, %r4834, 1;
	add.s32 	%r4836, %r4013, %r4835;
	add.s32 	%r4837, %r4836, %r4012;
	add.s32 	%r4838, %r4837, %r4831;
	add.s32 	%r4022, %r4838, -1894007588;
	shf.l.wrap.b32 	%r4024, %r4014, %r4014, 30;
	shf.l.wrap.b32 	%r4839, %r4022, %r4022, 5;
	// begin inline asm
	lop3.b32 %r4017, %r4018, %r4024, %r4020, 232;
	// end inline asm
	xor.b32  	%r4840, %r4731, %r4715;
	xor.b32  	%r4841, %r4840, %r4779;
	xor.b32  	%r4842, %r4841, %r4819;
	shf.l.wrap.b32 	%r4843, %r4842, %r4842, 1;
	add.s32 	%r4844, %r4017, %r4843;
	add.s32 	%r4845, %r4844, %r4016;
	add.s32 	%r4846, %r4845, %r4839;
	add.s32 	%r4026, %r4846, -1894007588;
	shf.l.wrap.b32 	%r4028, %r4018, %r4018, 30;
	shf.l.wrap.b32 	%r4847, %r4026, %r4026, 5;
	// begin inline asm
	lop3.b32 %r4021, %r4022, %r4028, %r4024, 232;
	// end inline asm
	xor.b32  	%r4848, %r4739, %r4723;
	xor.b32  	%r4849, %r4848, %r4787;
	xor.b32  	%r4850, %r4849, %r4827;
	shf.l.wrap.b32 	%r4851, %r4850, %r4850, 1;
	add.s32 	%r4852, %r4021, %r4851;
	add.s32 	%r4853, %r4852, %r4020;
	add.s32 	%r4854, %r4853, %r4847;
	add.s32 	%r4030, %r4854, -1894007588;
	shf.l.wrap.b32 	%r4032, %r4022, %r4022, 30;
	shf.l.wrap.b32 	%r4855, %r4030, %r4030, 5;
	// begin inline asm
	lop3.b32 %r4025, %r4026, %r4032, %r4028, 232;
	// end inline asm
	xor.b32  	%r4856, %r4747, %r4731;
	xor.b32  	%r4857, %r4856, %r4795;
	xor.b32  	%r4858, %r4857, %r4835;
	shf.l.wrap.b32 	%r4859, %r4858, %r4858, 1;
	add.s32 	%r4860, %r4025, %r4859;
	add.s32 	%r4861, %r4860, %r4024;
	add.s32 	%r4862, %r4861, %r4855;
	add.s32 	%r4034, %r4862, -1894007588;
	shf.l.wrap.b32 	%r4036, %r4026, %r4026, 30;
	shf.l.wrap.b32 	%r4863, %r4034, %r4034, 5;
	// begin inline asm
	lop3.b32 %r4029, %r4030, %r4036, %r4032, 232;
	// end inline asm
	xor.b32  	%r4864, %r4755, %r4739;
	xor.b32  	%r4865, %r4864, %r4803;
	xor.b32  	%r4866, %r4865, %r4843;
	shf.l.wrap.b32 	%r4867, %r4866, %r4866, 1;
	add.s32 	%r4868, %r4029, %r4867;
	add.s32 	%r4869, %r4868, %r4028;
	add.s32 	%r4870, %r4869, %r4863;
	add.s32 	%r4038, %r4870, -1894007588;
	shf.l.wrap.b32 	%r4040, %r4030, %r4030, 30;
	shf.l.wrap.b32 	%r4871, %r4038, %r4038, 5;
	// begin inline asm
	lop3.b32 %r4033, %r4034, %r4040, %r4036, 232;
	// end inline asm
	xor.b32  	%r4872, %r4763, %r4747;
	xor.b32  	%r4873, %r4872, %r4811;
	xor.b32  	%r4874, %r4873, %r4851;
	shf.l.wrap.b32 	%r4875, %r4874, %r4874, 1;
	add.s32 	%r4876, %r4033, %r4875;
	add.s32 	%r4877, %r4876, %r4032;
	add.s32 	%r4878, %r4877, %r4871;
	add.s32 	%r4042, %r4878, -1894007588;
	shf.l.wrap.b32 	%r4044, %r4034, %r4034, 30;
	shf.l.wrap.b32 	%r4879, %r4042, %r4042, 5;
	// begin inline asm
	lop3.b32 %r4037, %r4038, %r4044, %r4040, 232;
	// end inline asm
	xor.b32  	%r4880, %r4771, %r4755;
	xor.b32  	%r4881, %r4880, %r4819;
	xor.b32  	%r4882, %r4881, %r4859;
	shf.l.wrap.b32 	%r4883, %r4882, %r4882, 1;
	add.s32 	%r4884, %r4037, %r4883;
	add.s32 	%r4885, %r4884, %r4036;
	add.s32 	%r4886, %r4885, %r4879;
	add.s32 	%r4046, %r4886, -1894007588;
	shf.l.wrap.b32 	%r4048, %r4038, %r4038, 30;
	shf.l.wrap.b32 	%r4887, %r4046, %r4046, 5;
	// begin inline asm
	lop3.b32 %r4041, %r4042, %r4048, %r4044, 232;
	// end inline asm
	xor.b32  	%r4888, %r4779, %r4763;
	xor.b32  	%r4889, %r4888, %r4827;
	xor.b32  	%r4890, %r4889, %r4867;
	shf.l.wrap.b32 	%r4891, %r4890, %r4890, 1;
	add.s32 	%r4892, %r4041, %r4891;
	add.s32 	%r4893, %r4892, %r4040;
	add.s32 	%r4894, %r4893, %r4887;
	add.s32 	%r4050, %r4894, -1894007588;
	shf.l.wrap.b32 	%r4052, %r4042, %r4042, 30;
	shf.l.wrap.b32 	%r4895, %r4050, %r4050, 5;
	// begin inline asm
	lop3.b32 %r4045, %r4046, %r4052, %r4048, 150;
	// end inline asm
	xor.b32  	%r4896, %r4787, %r4771;
	xor.b32  	%r4897, %r4896, %r4835;
	xor.b32  	%r4898, %r4897, %r4875;
	shf.l.wrap.b32 	%r4899, %r4898, %r4898, 1;
	add.s32 	%r4900, %r4045, %r4899;
	add.s32 	%r4901, %r4900, %r4044;
	add.s32 	%r4902, %r4901, %r4895;
	add.s32 	%r4054, %r4902, -899497514;
	shf.l.wrap.b32 	%r4056, %r4046, %r4046, 30;
	shf.l.wrap.b32 	%r4903, %r4054, %r4054, 5;
	// begin inline asm
	lop3.b32 %r4049, %r4050, %r4056, %r4052, 150;
	// end inline asm
	xor.b32  	%r4904, %r4795, %r4779;
	xor.b32  	%r4905, %r4904, %r4843;
	xor.b32  	%r4906, %r4905, %r4883;
	shf.l.wrap.b32 	%r4907, %r4906, %r4906, 1;
	add.s32 	%r4908, %r4049, %r4907;
	add.s32 	%r4909, %r4908, %r4048;
	add.s32 	%r4910, %r4909, %r4903;
	add.s32 	%r4058, %r4910, -899497514;
	shf.l.wrap.b32 	%r4060, %r4050, %r4050, 30;
	shf.l.wrap.b32 	%r4911, %r4058, %r4058, 5;
	// begin inline asm
	lop3.b32 %r4053, %r4054, %r4060, %r4056, 150;
	// end inline asm
	xor.b32  	%r4912, %r4803, %r4787;
	xor.b32  	%r4913, %r4912, %r4851;
	xor.b32  	%r4914, %r4913, %r4891;
	shf.l.wrap.b32 	%r4915, %r4914, %r4914, 1;
	add.s32 	%r4916, %r4053, %r4915;
	add.s32 	%r4917, %r4916, %r4052;
	add.s32 	%r4918, %r4917, %r4911;
	add.s32 	%r4062, %r4918, -899497514;
	shf.l.wrap.b32 	%r4064, %r4054, %r4054, 30;
	shf.l.wrap.b32 	%r4919, %r4062, %r4062, 5;
	// begin inline asm
	lop3.b32 %r4057, %r4058, %r4064, %r4060, 150;
	// end inline asm
	xor.b32  	%r4920, %r4811, %r4795;
	xor.b32  	%r4921, %r4920, %r4859;
	xor.b32  	%r4922, %r4921, %r4899;
	shf.l.wrap.b32 	%r4923, %r4922, %r4922, 1;
	add.s32 	%r4924, %r4057, %r4923;
	add.s32 	%r4925, %r4924, %r4056;
	add.s32 	%r4926, %r4925, %r4919;
	add.s32 	%r4066, %r4926, -899497514;
	shf.l.wrap.b32 	%r4068, %r4058, %r4058, 30;
	shf.l.wrap.b32 	%r4927, %r4066, %r4066, 5;
	// begin inline asm
	lop3.b32 %r4061, %r4062, %r4068, %r4064, 150;
	// end inline asm
	xor.b32  	%r4928, %r4819, %r4803;
	xor.b32  	%r4929, %r4928, %r4867;
	xor.b32  	%r4930, %r4929, %r4907;
	shf.l.wrap.b32 	%r4931, %r4930, %r4930, 1;
	add.s32 	%r4932, %r4061, %r4931;
	add.s32 	%r4933, %r4932, %r4060;
	add.s32 	%r4934, %r4933, %r4927;
	add.s32 	%r4070, %r4934, -899497514;
	shf.l.wrap.b32 	%r4072, %r4062, %r4062, 30;
	shf.l.wrap.b32 	%r4935, %r4070, %r4070, 5;
	// begin inline asm
	lop3.b32 %r4065, %r4066, %r4072, %r4068, 150;
	// end inline asm
	xor.b32  	%r4936, %r4827, %r4811;
	xor.b32  	%r4937, %r4936, %r4875;
	xor.b32  	%r4938, %r4937, %r4915;
	shf.l.wrap.b32 	%r4939, %r4938, %r4938, 1;
	add.s32 	%r4940, %r4065, %r4939;
	add.s32 	%r4941, %r4940, %r4064;
	add.s32 	%r4942, %r4941, %r4935;
	add.s32 	%r4074, %r4942, -899497514;
	shf.l.wrap.b32 	%r4076, %r4066, %r4066, 30;
	shf.l.wrap.b32 	%r4943, %r4074, %r4074, 5;
	// begin inline asm
	lop3.b32 %r4069, %r4070, %r4076, %r4072, 150;
	// end inline asm
	xor.b32  	%r4944, %r4835, %r4819;
	xor.b32  	%r4945, %r4944, %r4883;
	xor.b32  	%r4946, %r4945, %r4923;
	shf.l.wrap.b32 	%r4947, %r4946, %r4946, 1;
	add.s32 	%r4948, %r4069, %r4947;
	add.s32 	%r4949, %r4948, %r4068;
	add.s32 	%r4950, %r4949, %r4943;
	add.s32 	%r4078, %r4950, -899497514;
	shf.l.wrap.b32 	%r4080, %r4070, %r4070, 30;
	shf.l.wrap.b32 	%r4951, %r4078, %r4078, 5;
	// begin inline asm
	lop3.b32 %r4073, %r4074, %r4080, %r4076, 150;
	// end inline asm
	xor.b32  	%r4952, %r4843, %r4827;
	xor.b32  	%r4953, %r4952, %r4891;
	xor.b32  	%r4954, %r4953, %r4931;
	shf.l.wrap.b32 	%r4955, %r4954, %r4954, 1;
	add.s32 	%r4956, %r4073, %r4955;
	add.s32 	%r4957, %r4956, %r4072;
	add.s32 	%r4958, %r4957, %r4951;
	add.s32 	%r4082, %r4958, -899497514;
	shf.l.wrap.b32 	%r4084, %r4074, %r4074, 30;
	shf.l.wrap.b32 	%r4959, %r4082, %r4082, 5;
	// begin inline asm
	lop3.b32 %r4077, %r4078, %r4084, %r4080, 150;
	// end inline asm
	xor.b32  	%r4960, %r4851, %r4835;
	xor.b32  	%r4961, %r4960, %r4899;
	xor.b32  	%r4962, %r4961, %r4939;
	shf.l.wrap.b32 	%r4963, %r4962, %r4962, 1;
	add.s32 	%r4964, %r4077, %r4963;
	add.s32 	%r4965, %r4964, %r4076;
	add.s32 	%r4966, %r4965, %r4959;
	add.s32 	%r4086, %r4966, -899497514;
	shf.l.wrap.b32 	%r4088, %r4078, %r4078, 30;
	shf.l.wrap.b32 	%r4967, %r4086, %r4086, 5;
	// begin inline asm
	lop3.b32 %r4081, %r4082, %r4088, %r4084, 150;
	// end inline asm
	xor.b32  	%r4968, %r4859, %r4843;
	xor.b32  	%r4969, %r4968, %r4907;
	xor.b32  	%r4970, %r4969, %r4947;
	shf.l.wrap.b32 	%r4971, %r4970, %r4970, 1;
	add.s32 	%r4972, %r4081, %r4971;
	add.s32 	%r4973, %r4972, %r4080;
	add.s32 	%r4974, %r4973, %r4967;
	add.s32 	%r4090, %r4974, -899497514;
	shf.l.wrap.b32 	%r4092, %r4082, %r4082, 30;
	shf.l.wrap.b32 	%r4975, %r4090, %r4090, 5;
	// begin inline asm
	lop3.b32 %r4085, %r4086, %r4092, %r4088, 150;
	// end inline asm
	xor.b32  	%r4976, %r4867, %r4851;
	xor.b32  	%r4977, %r4976, %r4915;
	xor.b32  	%r4978, %r4977, %r4955;
	shf.l.wrap.b32 	%r4979, %r4978, %r4978, 1;
	add.s32 	%r4980, %r4085, %r4979;
	add.s32 	%r4981, %r4980, %r4084;
	add.s32 	%r4982, %r4981, %r4975;
	add.s32 	%r4094, %r4982, -899497514;
	shf.l.wrap.b32 	%r4096, %r4086, %r4086, 30;
	shf.l.wrap.b32 	%r4983, %r4094, %r4094, 5;
	// begin inline asm
	lop3.b32 %r4089, %r4090, %r4096, %r4092, 150;
	// end inline asm
	xor.b32  	%r4984, %r4875, %r4859;
	xor.b32  	%r4985, %r4984, %r4923;
	xor.b32  	%r4986, %r4985, %r4963;
	shf.l.wrap.b32 	%r4987, %r4986, %r4986, 1;
	add.s32 	%r4988, %r4089, %r4987;
	add.s32 	%r4989, %r4988, %r4088;
	add.s32 	%r4990, %r4989, %r4983;
	add.s32 	%r4098, %r4990, -899497514;
	shf.l.wrap.b32 	%r4100, %r4090, %r4090, 30;
	shf.l.wrap.b32 	%r4991, %r4098, %r4098, 5;
	// begin inline asm
	lop3.b32 %r4093, %r4094, %r4100, %r4096, 150;
	// end inline asm
	xor.b32  	%r4992, %r4883, %r4867;
	xor.b32  	%r4993, %r4992, %r4931;
	xor.b32  	%r4994, %r4993, %r4971;
	shf.l.wrap.b32 	%r4995, %r4994, %r4994, 1;
	add.s32 	%r4996, %r4093, %r4995;
	add.s32 	%r4997, %r4996, %r4092;
	add.s32 	%r4998, %r4997, %r4991;
	add.s32 	%r4102, %r4998, -899497514;
	shf.l.wrap.b32 	%r4104, %r4094, %r4094, 30;
	shf.l.wrap.b32 	%r4999, %r4102, %r4102, 5;
	// begin inline asm
	lop3.b32 %r4097, %r4098, %r4104, %r4100, 150;
	// end inline asm
	xor.b32  	%r5000, %r4891, %r4875;
	xor.b32  	%r5001, %r5000, %r4939;
	xor.b32  	%r5002, %r5001, %r4979;
	shf.l.wrap.b32 	%r5003, %r5002, %r5002, 1;
	add.s32 	%r5004, %r4097, %r5003;
	add.s32 	%r5005, %r5004, %r4096;
	add.s32 	%r5006, %r5005, %r4999;
	add.s32 	%r4106, %r5006, -899497514;
	shf.l.wrap.b32 	%r4108, %r4098, %r4098, 30;
	shf.l.wrap.b32 	%r5007, %r4106, %r4106, 5;
	// begin inline asm
	lop3.b32 %r4101, %r4102, %r4108, %r4104, 150;
	// end inline asm
	xor.b32  	%r5008, %r4899, %r4883;
	xor.b32  	%r5009, %r5008, %r4947;
	xor.b32  	%r5010, %r5009, %r4987;
	shf.l.wrap.b32 	%r5011, %r5010, %r5010, 1;
	add.s32 	%r5012, %r4101, %r5011;
	add.s32 	%r5013, %r5012, %r4100;
	add.s32 	%r5014, %r5013, %r5007;
	add.s32 	%r4110, %r5014, -899497514;
	shf.l.wrap.b32 	%r4112, %r4102, %r4102, 30;
	shf.l.wrap.b32 	%r5015, %r4110, %r4110, 5;
	// begin inline asm
	lop3.b32 %r4105, %r4106, %r4112, %r4108, 150;
	// end inline asm
	xor.b32  	%r5016, %r4907, %r4891;
	xor.b32  	%r5017, %r5016, %r4955;
	xor.b32  	%r5018, %r5017, %r4995;
	shf.l.wrap.b32 	%r5019, %r5018, %r5018, 1;
	add.s32 	%r5020, %r4105, %r5019;
	add.s32 	%r5021, %r5020, %r4104;
	add.s32 	%r5022, %r5021, %r5015;
	add.s32 	%r4114, %r5022, -899497514;
	shf.l.wrap.b32 	%r4116, %r4106, %r4106, 30;
	shf.l.wrap.b32 	%r5023, %r4114, %r4114, 5;
	// begin inline asm
	lop3.b32 %r4109, %r4110, %r4116, %r4112, 150;
	// end inline asm
	xor.b32  	%r5024, %r4915, %r4899;
	xor.b32  	%r5025, %r5024, %r4963;
	xor.b32  	%r5026, %r5025, %r5003;
	shf.l.wrap.b32 	%r5027, %r5026, %r5026, 1;
	add.s32 	%r5028, %r4109, %r5027;
	add.s32 	%r5029, %r5028, %r4108;
	add.s32 	%r5030, %r5029, %r5023;
	add.s32 	%r4118, %r5030, -899497514;
	shf.l.wrap.b32 	%r4120, %r4110, %r4110, 30;
	shf.l.wrap.b32 	%r5031, %r4118, %r4118, 5;
	// begin inline asm
	lop3.b32 %r4113, %r4114, %r4120, %r4116, 150;
	// end inline asm
	xor.b32  	%r5032, %r4923, %r4907;
	xor.b32  	%r5033, %r5032, %r4971;
	xor.b32  	%r5034, %r5033, %r5011;
	shf.l.wrap.b32 	%r5035, %r5034, %r5034, 1;
	add.s32 	%r5036, %r4113, %r5035;
	add.s32 	%r5037, %r5036, %r4112;
	add.s32 	%r5038, %r5037, %r5031;
	add.s32 	%r4122, %r5038, -899497514;
	shf.l.wrap.b32 	%r4124, %r4114, %r4114, 30;
	shf.l.wrap.b32 	%r5039, %r4122, %r4122, 5;
	// begin inline asm
	lop3.b32 %r4117, %r4118, %r4124, %r4120, 150;
	// end inline asm
	xor.b32  	%r5040, %r4931, %r4915;
	xor.b32  	%r5041, %r5040, %r4979;
	xor.b32  	%r5042, %r5041, %r5019;
	shf.l.wrap.b32 	%r5043, %r5042, %r5042, 1;
	add.s32 	%r5044, %r4117, %r5043;
	add.s32 	%r5045, %r5044, %r4116;
	add.s32 	%r5046, %r5045, %r5039;
	add.s32 	%r5047, %r5046, -899497514;
	shf.l.wrap.b32 	%r4123, %r4118, %r4118, 30;
	shf.l.wrap.b32 	%r5048, %r5047, %r5047, 5;
	// begin inline asm
	lop3.b32 %r4121, %r4122, %r4123, %r4124, 150;
	// end inline asm
	xor.b32  	%r5049, %r4939, %r4923;
	xor.b32  	%r5050, %r5049, %r4987;
	xor.b32  	%r5051, %r5050, %r5027;
	shf.l.wrap.b32 	%r5052, %r5051, %r5051, 1;
	shf.l.wrap.b32 	%r5053, %r4122, %r4122, 30;
	add.s32 	%r5054, %r5621, %r4121;
	add.s32 	%r5055, %r5054, %r5052;
	add.s32 	%r5056, %r5055, %r4120;
	add.s32 	%r5057, %r5056, %r5048;
	add.s32 	%r5058, %r5057, -899497514;
	add.s32 	%r5059, %r5047, %r5620;
	add.s32 	%r5060, %r5053, %r5619;
	add.s32 	%r5061, %r4123, %r5618;
	add.s32 	%r5062, %r4124, %r5617;
	shf.l.wrap.b32 	%r5063, %r8, %r8, 5;
	add.s32 	%r5064, %r5063, %r12;
	// begin inline asm
	lop3.b32 %r4125, %r9, %r10, %r11, 202;
	// end inline asm
	add.s32 	%r5065, %r5064, %r4125;
	add.s32 	%r5066, %r5065, %r5058;
	add.s32 	%r4134, %r5066, 1518500249;
	shf.l.wrap.b32 	%r5067, %r4134, %r4134, 5;
	shf.l.wrap.b32 	%r4136, %r9, %r9, 30;
	// begin inline asm
	lop3.b32 %r4129, %r8, %r4136, %r10, 202;
	// end inline asm
	add.s32 	%r5068, %r692, %r4129;
	add.s32 	%r5069, %r5068, %r5059;
	add.s32 	%r5070, %r5069, %r5067;
	add.s32 	%r4138, %r5070, 1790234127;
	shf.l.wrap.b32 	%r5071, %r4138, %r4138, 5;
	shf.l.wrap.b32 	%r4140, %r8, %r8, 30;
	// begin inline asm
	lop3.b32 %r4133, %r4134, %r4140, %r4136, 202;
	// end inline asm
	add.s32 	%r5072, %r7, %r4133;
	add.s32 	%r5073, %r5072, %r5060;
	add.s32 	%r5074, %r5073, %r5071;
	add.s32 	%r4142, %r5074, -214083945;
	shf.l.wrap.b32 	%r4144, %r4134, %r4134, 30;
	shf.l.wrap.b32 	%r5075, %r4142, %r4142, 5;
	// begin inline asm
	lop3.b32 %r4137, %r4138, %r4144, %r4140, 202;
	// end inline asm
	add.s32 	%r5076, %r4136, %r4137;
	add.s32 	%r5077, %r5076, %r5061;
	add.s32 	%r5078, %r5077, %r5075;
	add.s32 	%r4146, %r5078, 1518500249;
	shf.l.wrap.b32 	%r4148, %r4138, %r4138, 30;
	shf.l.wrap.b32 	%r5079, %r4146, %r4146, 5;
	// begin inline asm
	lop3.b32 %r4141, %r4142, %r4148, %r4144, 202;
	// end inline asm
	add.s32 	%r5080, %r4140, %r4141;
	add.s32 	%r5081, %r5080, %r5062;
	add.s32 	%r5082, %r5081, %r5079;
	add.s32 	%r4150, %r5082, 1518500249;
	shf.l.wrap.b32 	%r4152, %r4142, %r4142, 30;
	shf.l.wrap.b32 	%r5083, %r4150, %r4150, 5;
	// begin inline asm
	lop3.b32 %r4145, %r4146, %r4152, %r4148, 202;
	// end inline asm
	add.s32 	%r5084, %r4144, %r4145;
	add.s32 	%r5085, %r5084, 1518500249;
	xor.b32  	%r5086, %r5085, -2147483648;
	add.s32 	%r4154, %r5086, %r5083;
	shf.l.wrap.b32 	%r4156, %r4146, %r4146, 30;
	shf.l.wrap.b32 	%r5087, %r4154, %r4154, 5;
	// begin inline asm
	lop3.b32 %r4149, %r4150, %r4156, %r4152, 202;
	// end inline asm
	add.s32 	%r5088, %r4148, %r4149;
	add.s32 	%r5089, %r5088, %r5087;
	add.s32 	%r4158, %r5089, 1518500249;
	shf.l.wrap.b32 	%r4160, %r4150, %r4150, 30;
	shf.l.wrap.b32 	%r5090, %r4158, %r4158, 5;
	// begin inline asm
	lop3.b32 %r4153, %r4154, %r4160, %r4156, 202;
	// end inline asm
	add.s32 	%r5091, %r4153, %r4152;
	add.s32 	%r5092, %r5091, %r5090;
	add.s32 	%r4162, %r5092, 1518500249;
	shf.l.wrap.b32 	%r4164, %r4154, %r4154, 30;
	shf.l.wrap.b32 	%r5093, %r4162, %r4162, 5;
	// begin inline asm
	lop3.b32 %r4157, %r4158, %r4164, %r4160, 202;
	// end inline asm
	add.s32 	%r5094, %r4157, %r4156;
	add.s32 	%r5095, %r5094, %r5093;
	add.s32 	%r4166, %r5095, 1518500249;
	shf.l.wrap.b32 	%r4168, %r4158, %r4158, 30;
	shf.l.wrap.b32 	%r5096, %r4166, %r4166, 5;
	// begin inline asm
	lop3.b32 %r4161, %r4162, %r4168, %r4164, 202;
	// end inline asm
	add.s32 	%r5097, %r4161, %r4160;
	add.s32 	%r5098, %r5097, %r5096;
	add.s32 	%r4170, %r5098, 1518500249;
	shf.l.wrap.b32 	%r4172, %r4162, %r4162, 30;
	shf.l.wrap.b32 	%r5099, %r4170, %r4170, 5;
	// begin inline asm
	lop3.b32 %r4165, %r4166, %r4172, %r4168, 202;
	// end inline asm
	add.s32 	%r5100, %r4165, %r4164;
	add.s32 	%r5101, %r5100, %r5099;
	add.s32 	%r4174, %r5101, 1518500249;
	shf.l.wrap.b32 	%r4176, %r4166, %r4166, 30;
	shf.l.wrap.b32 	%r5102, %r4174, %r4174, 5;
	// begin inline asm
	lop3.b32 %r4169, %r4170, %r4176, %r4172, 202;
	// end inline asm
	add.s32 	%r5103, %r4169, %r4168;
	add.s32 	%r5104, %r5103, %r5102;
	add.s32 	%r4178, %r5104, 1518500249;
	shf.l.wrap.b32 	%r4180, %r4170, %r4170, 30;
	shf.l.wrap.b32 	%r5105, %r4178, %r4178, 5;
	// begin inline asm
	lop3.b32 %r4173, %r4174, %r4180, %r4176, 202;
	// end inline asm
	add.s32 	%r5106, %r4173, %r4172;
	add.s32 	%r5107, %r5106, %r5105;
	add.s32 	%r4182, %r5107, 1518500249;
	shf.l.wrap.b32 	%r4184, %r4174, %r4174, 30;
	shf.l.wrap.b32 	%r5108, %r4182, %r4182, 5;
	// begin inline asm
	lop3.b32 %r4177, %r4178, %r4184, %r4180, 202;
	// end inline asm
	add.s32 	%r5109, %r4177, %r4176;
	add.s32 	%r5110, %r5109, %r5108;
	add.s32 	%r4186, %r5110, 1518500249;
	shf.l.wrap.b32 	%r4188, %r4178, %r4178, 30;
	shf.l.wrap.b32 	%r5111, %r4186, %r4186, 5;
	// begin inline asm
	lop3.b32 %r4181, %r4182, %r4188, %r4184, 202;
	// end inline asm
	add.s32 	%r5112, %r4181, %r4180;
	add.s32 	%r5113, %r5112, %r5111;
	add.s32 	%r4190, %r5113, 1518500249;
	shf.l.wrap.b32 	%r4192, %r4182, %r4182, 30;
	shf.l.wrap.b32 	%r5114, %r4190, %r4190, 5;
	// begin inline asm
	lop3.b32 %r4185, %r4186, %r4192, %r4188, 202;
	// end inline asm
	add.s32 	%r5115, %r4185, %r4184;
	add.s32 	%r5116, %r5115, %r5114;
	add.s32 	%r4194, %r5116, 1518500921;
	shf.l.wrap.b32 	%r4196, %r4186, %r4186, 30;
	shf.l.wrap.b32 	%r5117, %r4194, %r4194, 5;
	// begin inline asm
	lop3.b32 %r4189, %r4190, %r4196, %r4192, 202;
	// end inline asm
	xor.b32  	%r5118, %r5058, %r5060;
	shf.l.wrap.b32 	%r5119, %r5118, %r5118, 1;
	add.s32 	%r5120, %r4189, %r5119;
	add.s32 	%r5121, %r5120, %r4188;
	add.s32 	%r5122, %r5121, %r5117;
	add.s32 	%r4198, %r5122, 1518500249;
	shf.l.wrap.b32 	%r4200, %r4190, %r4190, 30;
	shf.l.wrap.b32 	%r5123, %r4198, %r4198, 5;
	// begin inline asm
	lop3.b32 %r4193, %r4194, %r4200, %r4196, 202;
	// end inline asm
	xor.b32  	%r5124, %r5059, %r5061;
	shf.l.wrap.b32 	%r5125, %r5124, %r5124, 1;
	add.s32 	%r5126, %r4193, %r5125;
	add.s32 	%r5127, %r5126, %r4192;
	add.s32 	%r5128, %r5127, %r5123;
	add.s32 	%r4202, %r5128, 1518500249;
	shf.l.wrap.b32 	%r4204, %r4194, %r4194, 30;
	shf.l.wrap.b32 	%r5129, %r4202, %r4202, 5;
	// begin inline asm
	lop3.b32 %r4197, %r4198, %r4204, %r4200, 202;
	// end inline asm
	xor.b32  	%r5130, %r5062, %r5060;
	xor.b32  	%r5131, %r5130, 672;
	shf.l.wrap.b32 	%r5132, %r5131, %r5131, 1;
	add.s32 	%r5133, %r4197, %r5132;
	add.s32 	%r5134, %r5133, %r4196;
	add.s32 	%r5135, %r5134, %r5129;
	add.s32 	%r4206, %r5135, 1518500249;
	shf.l.wrap.b32 	%r4208, %r4198, %r4198, 30;
	shf.l.wrap.b32 	%r5136, %r4206, %r4206, 5;
	// begin inline asm
	lop3.b32 %r4201, %r4202, %r4208, %r4204, 202;
	// end inline asm
	xor.b32  	%r5137, %r5119, %r5061;
	xor.b32  	%r5138, %r5137, -2147483648;
	shf.l.wrap.b32 	%r5139, %r5138, %r5138, 1;
	add.s32 	%r5140, %r4201, %r5139;
	add.s32 	%r5141, %r5140, %r4200;
	add.s32 	%r5142, %r5141, %r5136;
	add.s32 	%r4210, %r5142, 1518500249;
	shf.l.wrap.b32 	%r4212, %r4202, %r4202, 30;
	shf.l.wrap.b32 	%r5143, %r4210, %r4210, 5;
	// begin inline asm
	lop3.b32 %r4205, %r4206, %r4212, %r4208, 150;
	// end inline asm
	xor.b32  	%r5144, %r5062, %r5125;
	shf.l.wrap.b32 	%r5145, %r5144, %r5144, 1;
	add.s32 	%r5146, %r4205, %r5145;
	add.s32 	%r5147, %r5146, %r4204;
	add.s32 	%r5148, %r5147, %r5143;
	add.s32 	%r4214, %r5148, 1859775393;
	shf.l.wrap.b32 	%r4216, %r4206, %r4206, 30;
	shf.l.wrap.b32 	%r5149, %r4214, %r4214, 5;
	// begin inline asm
	lop3.b32 %r4209, %r4210, %r4216, %r4212, 150;
	// end inline asm
	xor.b32  	%r5150, %r5132, -2147483648;
	shf.l.wrap.b32 	%r5151, %r5150, %r5150, 1;
	add.s32 	%r5152, %r4209, %r5151;
	add.s32 	%r5153, %r5152, %r4208;
	add.s32 	%r5154, %r5153, %r5149;
	add.s32 	%r4218, %r5154, 1859775393;
	shf.l.wrap.b32 	%r4220, %r4210, %r4210, 30;
	shf.l.wrap.b32 	%r5155, %r4218, %r4218, 5;
	// begin inline asm
	lop3.b32 %r4213, %r4214, %r4220, %r4216, 150;
	// end inline asm
	shf.l.wrap.b32 	%r5156, %r5139, %r5139, 1;
	add.s32 	%r5157, %r4213, %r5156;
	add.s32 	%r5158, %r5157, %r4212;
	add.s32 	%r5159, %r5158, %r5155;
	add.s32 	%r4222, %r5159, 1859775393;
	shf.l.wrap.b32 	%r4224, %r4214, %r4214, 30;
	shf.l.wrap.b32 	%r5160, %r4222, %r4222, 5;
	// begin inline asm
	lop3.b32 %r4217, %r4218, %r4224, %r4220, 150;
	// end inline asm
	xor.b32  	%r5161, %r5145, 672;
	shf.l.wrap.b32 	%r5162, %r5161, %r5161, 1;
	add.s32 	%r5163, %r4217, %r5162;
	add.s32 	%r5164, %r5163, %r4216;
	add.s32 	%r5165, %r5164, %r5160;
	add.s32 	%r4226, %r5165, 1859775393;
	shf.l.wrap.b32 	%r4228, %r4218, %r4218, 30;
	shf.l.wrap.b32 	%r5166, %r4226, %r4226, 5;
	// begin inline asm
	lop3.b32 %r4221, %r4222, %r4228, %r4224, 150;
	// end inline asm
	xor.b32  	%r5167, %r5119, %r5151;
	shf.l.wrap.b32 	%r5168, %r5167, %r5167, 1;
	add.s32 	%r5169, %r4221, %r5168;
	add.s32 	%r5170, %r5169, %r4220;
	add.s32 	%r5171, %r5170, %r5166;
	add.s32 	%r4230, %r5171, 1859775393;
	shf.l.wrap.b32 	%r4232, %r4222, %r4222, 30;
	shf.l.wrap.b32 	%r5172, %r4230, %r4230, 5;
	// begin inline asm
	lop3.b32 %r4225, %r4226, %r4232, %r4228, 150;
	// end inline asm
	xor.b32  	%r5173, %r5125, %r5156;
	shf.l.wrap.b32 	%r5174, %r5173, %r5173, 1;
	add.s32 	%r5175, %r4225, %r5174;
	add.s32 	%r5176, %r5175, %r4224;
	add.s32 	%r5177, %r5176, %r5172;
	add.s32 	%r4234, %r5177, 1859775393;
	shf.l.wrap.b32 	%r4236, %r4226, %r4226, 30;
	shf.l.wrap.b32 	%r5178, %r4234, %r4234, 5;
	// begin inline asm
	lop3.b32 %r4229, %r4230, %r4236, %r4232, 150;
	// end inline asm
	xor.b32  	%r5179, %r5132, %r5162;
	shf.l.wrap.b32 	%r5180, %r5179, %r5179, 1;
	add.s32 	%r5181, %r4229, %r5180;
	add.s32 	%r5182, %r5181, %r4228;
	add.s32 	%r5183, %r5182, %r5178;
	add.s32 	%r4238, %r5183, 1859775393;
	shf.l.wrap.b32 	%r4240, %r4230, %r4230, 30;
	shf.l.wrap.b32 	%r5184, %r4238, %r4238, 5;
	// begin inline asm
	lop3.b32 %r4233, %r4234, %r4240, %r4236, 150;
	// end inline asm
	xor.b32  	%r5185, %r5139, %r5168;
	shf.l.wrap.b32 	%r5186, %r5185, %r5185, 1;
	add.s32 	%r5187, %r4233, %r5186;
	add.s32 	%r5188, %r5187, %r4232;
	add.s32 	%r5189, %r5188, %r5184;
	add.s32 	%r4242, %r5189, 1859775393;
	shf.l.wrap.b32 	%r4244, %r4234, %r4234, 30;
	shf.l.wrap.b32 	%r5190, %r4242, %r4242, 5;
	// begin inline asm
	lop3.b32 %r4237, %r4238, %r4244, %r4240, 150;
	// end inline asm
	xor.b32  	%r5191, %r5145, %r5174;
	shf.l.wrap.b32 	%r5192, %r5191, %r5191, 1;
	add.s32 	%r5193, %r4237, %r5192;
	add.s32 	%r5194, %r5193, %r4236;
	add.s32 	%r5195, %r5194, %r5190;
	add.s32 	%r4246, %r5195, 1859775393;
	shf.l.wrap.b32 	%r4248, %r4238, %r4238, 30;
	shf.l.wrap.b32 	%r5196, %r4246, %r4246, 5;
	// begin inline asm
	lop3.b32 %r4241, %r4242, %r4248, %r4244, 150;
	// end inline asm
	xor.b32  	%r5197, %r5151, %r5180;
	xor.b32  	%r5198, %r5197, 672;
	shf.l.wrap.b32 	%r5199, %r5198, %r5198, 1;
	add.s32 	%r5200, %r4241, %r5199;
	add.s32 	%r5201, %r5200, %r4240;
	add.s32 	%r5202, %r5201, %r5196;
	add.s32 	%r4250, %r5202, 1859775393;
	shf.l.wrap.b32 	%r4252, %r4242, %r4242, 30;
	shf.l.wrap.b32 	%r5203, %r4250, %r4250, 5;
	// begin inline asm
	lop3.b32 %r4245, %r4246, %r4252, %r4248, 150;
	// end inline asm
	xor.b32  	%r5204, %r5156, %r5186;
	xor.b32  	%r5205, %r5204, %r5119;
	shf.l.wrap.b32 	%r5206, %r5205, %r5205, 1;
	add.s32 	%r5207, %r4245, %r5206;
	add.s32 	%r5208, %r5207, %r4244;
	add.s32 	%r5209, %r5208, %r5203;
	add.s32 	%r4254, %r5209, 1859775393;
	shf.l.wrap.b32 	%r4256, %r4246, %r4246, 30;
	shf.l.wrap.b32 	%r5210, %r4254, %r4254, 5;
	// begin inline asm
	lop3.b32 %r4249, %r4250, %r4256, %r4252, 150;
	// end inline asm
	xor.b32  	%r5211, %r5162, %r5192;
	xor.b32  	%r5212, %r5211, %r5125;
	xor.b32  	%r5213, %r5212, 672;
	shf.l.wrap.b32 	%r5214, %r5213, %r5213, 1;
	add.s32 	%r5215, %r4249, %r5214;
	add.s32 	%r5216, %r5215, %r4248;
	add.s32 	%r5217, %r5216, %r5210;
	add.s32 	%r4258, %r5217, 1859775393;
	shf.l.wrap.b32 	%r4260, %r4250, %r4250, 30;
	shf.l.wrap.b32 	%r5218, %r4258, %r4258, 5;
	// begin inline asm
	lop3.b32 %r4253, %r4254, %r4260, %r4256, 150;
	// end inline asm
	xor.b32  	%r5219, %r5168, %r5199;
	xor.b32  	%r5220, %r5219, %r5132;
	xor.b32  	%r5221, %r5220, %r5119;
	shf.l.wrap.b32 	%r5222, %r5221, %r5221, 1;
	add.s32 	%r5223, %r4253, %r5222;
	add.s32 	%r5224, %r5223, %r4252;
	add.s32 	%r5225, %r5224, %r5218;
	add.s32 	%r4262, %r5225, 1859775393;
	shf.l.wrap.b32 	%r4264, %r4254, %r4254, 30;
	shf.l.wrap.b32 	%r5226, %r4262, %r4262, 5;
	// begin inline asm
	lop3.b32 %r4257, %r4258, %r4264, %r4260, 150;
	// end inline asm
	xor.b32  	%r5227, %r5174, %r5206;
	xor.b32  	%r5228, %r5227, %r5139;
	xor.b32  	%r5229, %r5228, %r5125;
	shf.l.wrap.b32 	%r5230, %r5229, %r5229, 1;
	add.s32 	%r5231, %r4257, %r5230;
	add.s32 	%r5232, %r5231, %r4256;
	add.s32 	%r5233, %r5232, %r5226;
	add.s32 	%r4266, %r5233, 1859775393;
	shf.l.wrap.b32 	%r4268, %r4258, %r4258, 30;
	shf.l.wrap.b32 	%r5234, %r4266, %r4266, 5;
	// begin inline asm
	lop3.b32 %r4261, %r4262, %r4268, %r4264, 150;
	// end inline asm
	xor.b32  	%r5235, %r5180, %r5214;
	xor.b32  	%r5236, %r5235, %r5145;
	xor.b32  	%r5237, %r5236, %r5132;
	shf.l.wrap.b32 	%r5238, %r5237, %r5237, 1;
	add.s32 	%r5239, %r4261, %r5238;
	add.s32 	%r5240, %r5239, %r4260;
	add.s32 	%r5241, %r5240, %r5234;
	add.s32 	%r4270, %r5241, 1859775393;
	shf.l.wrap.b32 	%r4272, %r4262, %r4262, 30;
	shf.l.wrap.b32 	%r5242, %r4270, %r4270, 5;
	// begin inline asm
	lop3.b32 %r4265, %r4266, %r4272, %r4268, 150;
	// end inline asm
	xor.b32  	%r5243, %r5186, %r5222;
	xor.b32  	%r5244, %r5243, %r5151;
	xor.b32  	%r5245, %r5244, %r5139;
	shf.l.wrap.b32 	%r5246, %r5245, %r5245, 1;
	add.s32 	%r5247, %r4265, %r5246;
	add.s32 	%r5248, %r5247, %r4264;
	add.s32 	%r5249, %r5248, %r5242;
	add.s32 	%r4274, %r5249, 1859775393;
	shf.l.wrap.b32 	%r4276, %r4266, %r4266, 30;
	shf.l.wrap.b32 	%r5250, %r4274, %r4274, 5;
	// begin inline asm
	lop3.b32 %r4269, %r4270, %r4276, %r4272, 150;
	// end inline asm
	xor.b32  	%r5251, %r5192, %r5230;
	xor.b32  	%r5252, %r5251, %r5156;
	xor.b32  	%r5253, %r5252, %r5145;
	shf.l.wrap.b32 	%r5254, %r5253, %r5253, 1;
	add.s32 	%r5255, %r4269, %r5254;
	add.s32 	%r5256, %r5255, %r4268;
	add.s32 	%r5257, %r5256, %r5250;
	add.s32 	%r4278, %r5257, 1859775393;
	shf.l.wrap.b32 	%r4280, %r4270, %r4270, 30;
	shf.l.wrap.b32 	%r5258, %r4278, %r4278, 5;
	// begin inline asm
	lop3.b32 %r4273, %r4274, %r4280, %r4276, 150;
	// end inline asm
	xor.b32  	%r5259, %r5199, %r5238;
	xor.b32  	%r5260, %r5259, %r5162;
	xor.b32  	%r5261, %r5260, %r5151;
	shf.l.wrap.b32 	%r5262, %r5261, %r5261, 1;
	add.s32 	%r5263, %r4273, %r5262;
	add.s32 	%r5264, %r5263, %r4272;
	add.s32 	%r5265, %r5264, %r5258;
	add.s32 	%r4282, %r5265, 1859775393;
	shf.l.wrap.b32 	%r4284, %r4274, %r4274, 30;
	shf.l.wrap.b32 	%r5266, %r4282, %r4282, 5;
	// begin inline asm
	lop3.b32 %r4277, %r4278, %r4284, %r4280, 150;
	// end inline asm
	xor.b32  	%r5267, %r5206, %r5246;
	xor.b32  	%r5268, %r5267, %r5168;
	xor.b32  	%r5269, %r5268, %r5156;
	shf.l.wrap.b32 	%r5270, %r5269, %r5269, 1;
	add.s32 	%r5271, %r4277, %r5270;
	add.s32 	%r5272, %r5271, %r4276;
	add.s32 	%r5273, %r5272, %r5266;
	add.s32 	%r4286, %r5273, 1859775393;
	shf.l.wrap.b32 	%r4288, %r4278, %r4278, 30;
	shf.l.wrap.b32 	%r5274, %r4286, %r4286, 5;
	// begin inline asm
	lop3.b32 %r4281, %r4282, %r4288, %r4284, 150;
	// end inline asm
	xor.b32  	%r5275, %r5214, %r5254;
	xor.b32  	%r5276, %r5275, %r5174;
	xor.b32  	%r5277, %r5276, %r5162;
	shf.l.wrap.b32 	%r5278, %r5277, %r5277, 1;
	add.s32 	%r5279, %r4281, %r5278;
	add.s32 	%r5280, %r5279, %r4280;
	add.s32 	%r5281, %r5280, %r5274;
	add.s32 	%r4290, %r5281, 1859775393;
	shf.l.wrap.b32 	%r4292, %r4282, %r4282, 30;
	shf.l.wrap.b32 	%r5282, %r4290, %r4290, 5;
	// begin inline asm
	lop3.b32 %r4285, %r4286, %r4292, %r4288, 232;
	// end inline asm
	xor.b32  	%r5283, %r5222, %r5262;
	xor.b32  	%r5284, %r5283, %r5180;
	xor.b32  	%r5285, %r5284, %r5168;
	shf.l.wrap.b32 	%r5286, %r5285, %r5285, 1;
	add.s32 	%r5287, %r4285, %r5286;
	add.s32 	%r5288, %r5287, %r4284;
	add.s32 	%r5289, %r5288, %r5282;
	add.s32 	%r4294, %r5289, -1894007588;
	shf.l.wrap.b32 	%r4296, %r4286, %r4286, 30;
	shf.l.wrap.b32 	%r5290, %r4294, %r4294, 5;
	// begin inline asm
	lop3.b32 %r4289, %r4290, %r4296, %r4292, 232;
	// end inline asm
	xor.b32  	%r5291, %r5230, %r5270;
	xor.b32  	%r5292, %r5291, %r5186;
	xor.b32  	%r5293, %r5292, %r5174;
	shf.l.wrap.b32 	%r5294, %r5293, %r5293, 1;
	add.s32 	%r5295, %r4289, %r5294;
	add.s32 	%r5296, %r5295, %r4288;
	add.s32 	%r5297, %r5296, %r5290;
	add.s32 	%r4298, %r5297, -1894007588;
	shf.l.wrap.b32 	%r4300, %r4290, %r4290, 30;
	shf.l.wrap.b32 	%r5298, %r4298, %r4298, 5;
	// begin inline asm
	lop3.b32 %r4293, %r4294, %r4300, %r4296, 232;
	// end inline asm
	xor.b32  	%r5299, %r5238, %r5278;
	xor.b32  	%r5300, %r5299, %r5192;
	xor.b32  	%r5301, %r5300, %r5180;
	shf.l.wrap.b32 	%r5302, %r5301, %r5301, 1;
	add.s32 	%r5303, %r4293, %r5302;
	add.s32 	%r5304, %r5303, %r4292;
	add.s32 	%r5305, %r5304, %r5298;
	add.s32 	%r4302, %r5305, -1894007588;
	shf.l.wrap.b32 	%r4304, %r4294, %r4294, 30;
	shf.l.wrap.b32 	%r5306, %r4302, %r4302, 5;
	// begin inline asm
	lop3.b32 %r4297, %r4298, %r4304, %r4300, 232;
	// end inline asm
	xor.b32  	%r5307, %r5246, %r5286;
	xor.b32  	%r5308, %r5307, %r5199;
	xor.b32  	%r5309, %r5308, %r5186;
	shf.l.wrap.b32 	%r5310, %r5309, %r5309, 1;
	add.s32 	%r5311, %r4297, %r5310;
	add.s32 	%r5312, %r5311, %r4296;
	add.s32 	%r5313, %r5312, %r5306;
	add.s32 	%r4306, %r5313, -1894007588;
	shf.l.wrap.b32 	%r4308, %r4298, %r4298, 30;
	shf.l.wrap.b32 	%r5314, %r4306, %r4306, 5;
	// begin inline asm
	lop3.b32 %r4301, %r4302, %r4308, %r4304, 232;
	// end inline asm
	xor.b32  	%r5315, %r5254, %r5294;
	xor.b32  	%r5316, %r5315, %r5206;
	xor.b32  	%r5317, %r5316, %r5192;
	shf.l.wrap.b32 	%r5318, %r5317, %r5317, 1;
	add.s32 	%r5319, %r4301, %r5318;
	add.s32 	%r5320, %r5319, %r4300;
	add.s32 	%r5321, %r5320, %r5314;
	add.s32 	%r4310, %r5321, -1894007588;
	shf.l.wrap.b32 	%r4312, %r4302, %r4302, 30;
	shf.l.wrap.b32 	%r5322, %r4310, %r4310, 5;
	// begin inline asm
	lop3.b32 %r4305, %r4306, %r4312, %r4308, 232;
	// end inline asm
	xor.b32  	%r5323, %r5262, %r5302;
	xor.b32  	%r5324, %r5323, %r5214;
	xor.b32  	%r5325, %r5324, %r5199;
	shf.l.wrap.b32 	%r5326, %r5325, %r5325, 1;
	add.s32 	%r5327, %r4305, %r5326;
	add.s32 	%r5328, %r5327, %r4304;
	add.s32 	%r5329, %r5328, %r5322;
	add.s32 	%r4314, %r5329, -1894007588;
	shf.l.wrap.b32 	%r4316, %r4306, %r4306, 30;
	shf.l.wrap.b32 	%r5330, %r4314, %r4314, 5;
	// begin inline asm
	lop3.b32 %r4309, %r4310, %r4316, %r4312, 232;
	// end inline asm
	xor.b32  	%r5331, %r5270, %r5310;
	xor.b32  	%r5332, %r5331, %r5222;
	xor.b32  	%r5333, %r5332, %r5206;
	shf.l.wrap.b32 	%r5334, %r5333, %r5333, 1;
	add.s32 	%r5335, %r4309, %r5334;
	add.s32 	%r5336, %r5335, %r4308;
	add.s32 	%r5337, %r5336, %r5330;
	add.s32 	%r4318, %r5337, -1894007588;
	shf.l.wrap.b32 	%r4320, %r4310, %r4310, 30;
	shf.l.wrap.b32 	%r5338, %r4318, %r4318, 5;
	// begin inline asm
	lop3.b32 %r4313, %r4314, %r4320, %r4316, 232;
	// end inline asm
	xor.b32  	%r5339, %r5278, %r5318;
	xor.b32  	%r5340, %r5339, %r5230;
	xor.b32  	%r5341, %r5340, %r5214;
	shf.l.wrap.b32 	%r5342, %r5341, %r5341, 1;
	add.s32 	%r5343, %r4313, %r5342;
	add.s32 	%r5344, %r5343, %r4312;
	add.s32 	%r5345, %r5344, %r5338;
	add.s32 	%r4322, %r5345, -1894007588;
	shf.l.wrap.b32 	%r4324, %r4314, %r4314, 30;
	shf.l.wrap.b32 	%r5346, %r4322, %r4322, 5;
	// begin inline asm
	lop3.b32 %r4317, %r4318, %r4324, %r4320, 232;
	// end inline asm
	xor.b32  	%r5347, %r5286, %r5326;
	xor.b32  	%r5348, %r5347, %r5238;
	xor.b32  	%r5349, %r5348, %r5222;
	shf.l.wrap.b32 	%r5350, %r5349, %r5349, 1;
	add.s32 	%r5351, %r4317, %r5350;
	add.s32 	%r5352, %r5351, %r4316;
	add.s32 	%r5353, %r5352, %r5346;
	add.s32 	%r4326, %r5353, -1894007588;
	shf.l.wrap.b32 	%r4328, %r4318, %r4318, 30;
	shf.l.wrap.b32 	%r5354, %r4326, %r4326, 5;
	// begin inline asm
	lop3.b32 %r4321, %r4322, %r4328, %r4324, 232;
	// end inline asm
	xor.b32  	%r5355, %r5294, %r5334;
	xor.b32  	%r5356, %r5355, %r5246;
	xor.b32  	%r5357, %r5356, %r5230;
	shf.l.wrap.b32 	%r5358, %r5357, %r5357, 1;
	add.s32 	%r5359, %r4321, %r5358;
	add.s32 	%r5360, %r5359, %r4320;
	add.s32 	%r5361, %r5360, %r5354;
	add.s32 	%r4330, %r5361, -1894007588;
	shf.l.wrap.b32 	%r4332, %r4322, %r4322, 30;
	shf.l.wrap.b32 	%r5362, %r4330, %r4330, 5;
	// begin inline asm
	lop3.b32 %r4325, %r4326, %r4332, %r4328, 232;
	// end inline asm
	xor.b32  	%r5363, %r5302, %r5342;
	xor.b32  	%r5364, %r5363, %r5254;
	xor.b32  	%r5365, %r5364, %r5238;
	shf.l.wrap.b32 	%r5366, %r5365, %r5365, 1;
	add.s32 	%r5367, %r4325, %r5366;
	add.s32 	%r5368, %r5367, %r4324;
	add.s32 	%r5369, %r5368, %r5362;
	add.s32 	%r4334, %r5369, -1894007588;
	shf.l.wrap.b32 	%r4336, %r4326, %r4326, 30;
	shf.l.wrap.b32 	%r5370, %r4334, %r4334, 5;
	// begin inline asm
	lop3.b32 %r4329, %r4330, %r4336, %r4332, 232;
	// end inline asm
	xor.b32  	%r5371, %r5310, %r5350;
	xor.b32  	%r5372, %r5371, %r5262;
	xor.b32  	%r5373, %r5372, %r5246;
	shf.l.wrap.b32 	%r5374, %r5373, %r5373, 1;
	add.s32 	%r5375, %r4329, %r5374;
	add.s32 	%r5376, %r5375, %r4328;
	add.s32 	%r5377, %r5376, %r5370;
	add.s32 	%r4338, %r5377, -1894007588;
	shf.l.wrap.b32 	%r4340, %r4330, %r4330, 30;
	shf.l.wrap.b32 	%r5378, %r4338, %r4338, 5;
	// begin inline asm
	lop3.b32 %r4333, %r4334, %r4340, %r4336, 232;
	// end inline asm
	xor.b32  	%r5379, %r5318, %r5358;
	xor.b32  	%r5380, %r5379, %r5270;
	xor.b32  	%r5381, %r5380, %r5254;
	shf.l.wrap.b32 	%r5382, %r5381, %r5381, 1;
	add.s32 	%r5383, %r4333, %r5382;
	add.s32 	%r5384, %r5383, %r4332;
	add.s32 	%r5385, %r5384, %r5378;
	add.s32 	%r4342, %r5385, -1894007588;
	shf.l.wrap.b32 	%r4344, %r4334, %r4334, 30;
	shf.l.wrap.b32 	%r5386, %r4342, %r4342, 5;
	// begin inline asm
	lop3.b32 %r4337, %r4338, %r4344, %r4340, 232;
	// end inline asm
	xor.b32  	%r5387, %r5326, %r5366;
	xor.b32  	%r5388, %r5387, %r5278;
	xor.b32  	%r5389, %r5388, %r5262;
	shf.l.wrap.b32 	%r5390, %r5389, %r5389, 1;
	add.s32 	%r5391, %r4337, %r5390;
	add.s32 	%r5392, %r5391, %r4336;
	add.s32 	%r5393, %r5392, %r5386;
	add.s32 	%r4346, %r5393, -1894007588;
	shf.l.wrap.b32 	%r4348, %r4338, %r4338, 30;
	shf.l.wrap.b32 	%r5394, %r4346, %r4346, 5;
	// begin inline asm
	lop3.b32 %r4341, %r4342, %r4348, %r4344, 232;
	// end inline asm
	xor.b32  	%r5395, %r5334, %r5374;
	xor.b32  	%r5396, %r5395, %r5286;
	xor.b32  	%r5397, %r5396, %r5270;
	shf.l.wrap.b32 	%r5398, %r5397, %r5397, 1;
	add.s32 	%r5399, %r4341, %r5398;
	add.s32 	%r5400, %r5399, %r4340;
	add.s32 	%r5401, %r5400, %r5394;
	add.s32 	%r4350, %r5401, -1894007588;
	shf.l.wrap.b32 	%r4352, %r4342, %r4342, 30;
	shf.l.wrap.b32 	%r5402, %r4350, %r4350, 5;
	// begin inline asm
	lop3.b32 %r4345, %r4346, %r4352, %r4348, 232;
	// end inline asm
	xor.b32  	%r5403, %r5342, %r5382;
	xor.b32  	%r5404, %r5403, %r5294;
	xor.b32  	%r5405, %r5404, %r5278;
	shf.l.wrap.b32 	%r5406, %r5405, %r5405, 1;
	add.s32 	%r5407, %r4345, %r5406;
	add.s32 	%r5408, %r5407, %r4344;
	add.s32 	%r5409, %r5408, %r5402;
	add.s32 	%r4354, %r5409, -1894007588;
	shf.l.wrap.b32 	%r4356, %r4346, %r4346, 30;
	shf.l.wrap.b32 	%r5410, %r4354, %r4354, 5;
	// begin inline asm
	lop3.b32 %r4349, %r4350, %r4356, %r4352, 232;
	// end inline asm
	xor.b32  	%r5411, %r5350, %r5390;
	xor.b32  	%r5412, %r5411, %r5302;
	xor.b32  	%r5413, %r5412, %r5286;
	shf.l.wrap.b32 	%r5414, %r5413, %r5413, 1;
	add.s32 	%r5415, %r4349, %r5414;
	add.s32 	%r5416, %r5415, %r4348;
	add.s32 	%r5417, %r5416, %r5410;
	add.s32 	%r4358, %r5417, -1894007588;
	shf.l.wrap.b32 	%r4360, %r4350, %r4350, 30;
	shf.l.wrap.b32 	%r5418, %r4358, %r4358, 5;
	// begin inline asm
	lop3.b32 %r4353, %r4354, %r4360, %r4356, 232;
	// end inline asm
	xor.b32  	%r5419, %r5358, %r5398;
	xor.b32  	%r5420, %r5419, %r5310;
	xor.b32  	%r5421, %r5420, %r5294;
	shf.l.wrap.b32 	%r5422, %r5421, %r5421, 1;
	add.s32 	%r5423, %r4353, %r5422;
	add.s32 	%r5424, %r5423, %r4352;
	add.s32 	%r5425, %r5424, %r5418;
	add.s32 	%r4362, %r5425, -1894007588;
	shf.l.wrap.b32 	%r4364, %r4354, %r4354, 30;
	shf.l.wrap.b32 	%r5426, %r4362, %r4362, 5;
	// begin inline asm
	lop3.b32 %r4357, %r4358, %r4364, %r4360, 232;
	// end inline asm
	xor.b32  	%r5427, %r5366, %r5406;
	xor.b32  	%r5428, %r5427, %r5318;
	xor.b32  	%r5429, %r5428, %r5302;
	shf.l.wrap.b32 	%r5430, %r5429, %r5429, 1;
	add.s32 	%r5431, %r4357, %r5430;
	add.s32 	%r5432, %r5431, %r4356;
	add.s32 	%r5433, %r5432, %r5426;
	add.s32 	%r4366, %r5433, -1894007588;
	shf.l.wrap.b32 	%r4368, %r4358, %r4358, 30;
	shf.l.wrap.b32 	%r5434, %r4366, %r4366, 5;
	// begin inline asm
	lop3.b32 %r4361, %r4362, %r4368, %r4364, 232;
	// end inline asm
	xor.b32  	%r5435, %r5374, %r5414;
	xor.b32  	%r5436, %r5435, %r5326;
	xor.b32  	%r5437, %r5436, %r5310;
	shf.l.wrap.b32 	%r5438, %r5437, %r5437, 1;
	add.s32 	%r5439, %r4361, %r5438;
	add.s32 	%r5440, %r5439, %r4360;
	add.s32 	%r5441, %r5440, %r5434;
	add.s32 	%r4370, %r5441, -1894007588;
	shf.l.wrap.b32 	%r4372, %r4362, %r4362, 30;
	shf.l.wrap.b32 	%r5442, %r4370, %r4370, 5;
	// begin inline asm
	lop3.b32 %r4365, %r4366, %r4372, %r4368, 150;
	// end inline asm
	xor.b32  	%r5443, %r5382, %r5422;
	xor.b32  	%r5444, %r5443, %r5334;
	xor.b32  	%r5445, %r5444, %r5318;
	shf.l.wrap.b32 	%r5446, %r5445, %r5445, 1;
	add.s32 	%r5447, %r4365, %r5446;
	add.s32 	%r5448, %r5447, %r4364;
	add.s32 	%r5449, %r5448, %r5442;
	add.s32 	%r4374, %r5449, -899497514;
	shf.l.wrap.b32 	%r4376, %r4366, %r4366, 30;
	shf.l.wrap.b32 	%r5450, %r4374, %r4374, 5;
	// begin inline asm
	lop3.b32 %r4369, %r4370, %r4376, %r4372, 150;
	// end inline asm
	xor.b32  	%r5451, %r5390, %r5430;
	xor.b32  	%r5452, %r5451, %r5342;
	xor.b32  	%r5453, %r5452, %r5326;
	shf.l.wrap.b32 	%r5454, %r5453, %r5453, 1;
	add.s32 	%r5455, %r4369, %r5454;
	add.s32 	%r5456, %r5455, %r4368;
	add.s32 	%r5457, %r5456, %r5450;
	add.s32 	%r4378, %r5457, -899497514;
	shf.l.wrap.b32 	%r4380, %r4370, %r4370, 30;
	shf.l.wrap.b32 	%r5458, %r4378, %r4378, 5;
	// begin inline asm
	lop3.b32 %r4373, %r4374, %r4380, %r4376, 150;
	// end inline asm
	xor.b32  	%r5459, %r5398, %r5438;
	xor.b32  	%r5460, %r5459, %r5350;
	xor.b32  	%r5461, %r5460, %r5334;
	shf.l.wrap.b32 	%r5462, %r5461, %r5461, 1;
	add.s32 	%r5463, %r4373, %r5462;
	add.s32 	%r5464, %r5463, %r4372;
	add.s32 	%r5465, %r5464, %r5458;
	add.s32 	%r4382, %r5465, -899497514;
	shf.l.wrap.b32 	%r4384, %r4374, %r4374, 30;
	shf.l.wrap.b32 	%r5466, %r4382, %r4382, 5;
	// begin inline asm
	lop3.b32 %r4377, %r4378, %r4384, %r4380, 150;
	// end inline asm
	xor.b32  	%r5467, %r5406, %r5446;
	xor.b32  	%r5468, %r5467, %r5358;
	xor.b32  	%r5469, %r5468, %r5342;
	shf.l.wrap.b32 	%r5470, %r5469, %r5469, 1;
	add.s32 	%r5471, %r4377, %r5470;
	add.s32 	%r5472, %r5471, %r4376;
	add.s32 	%r5473, %r5472, %r5466;
	add.s32 	%r4386, %r5473, -899497514;
	shf.l.wrap.b32 	%r4388, %r4378, %r4378, 30;
	shf.l.wrap.b32 	%r5474, %r4386, %r4386, 5;
	// begin inline asm
	lop3.b32 %r4381, %r4382, %r4388, %r4384, 150;
	// end inline asm
	xor.b32  	%r5475, %r5414, %r5454;
	xor.b32  	%r5476, %r5475, %r5366;
	xor.b32  	%r5477, %r5476, %r5350;
	shf.l.wrap.b32 	%r5478, %r5477, %r5477, 1;
	add.s32 	%r5479, %r4381, %r5478;
	add.s32 	%r5480, %r5479, %r4380;
	add.s32 	%r5481, %r5480, %r5474;
	add.s32 	%r4390, %r5481, -899497514;
	shf.l.wrap.b32 	%r4392, %r4382, %r4382, 30;
	shf.l.wrap.b32 	%r5482, %r4390, %r4390, 5;
	// begin inline asm
	lop3.b32 %r4385, %r4386, %r4392, %r4388, 150;
	// end inline asm
	xor.b32  	%r5483, %r5422, %r5462;
	xor.b32  	%r5484, %r5483, %r5374;
	xor.b32  	%r5485, %r5484, %r5358;
	shf.l.wrap.b32 	%r5486, %r5485, %r5485, 1;
	add.s32 	%r5487, %r4385, %r5486;
	add.s32 	%r5488, %r5487, %r4384;
	add.s32 	%r5489, %r5488, %r5482;
	add.s32 	%r4394, %r5489, -899497514;
	shf.l.wrap.b32 	%r4396, %r4386, %r4386, 30;
	shf.l.wrap.b32 	%r5490, %r4394, %r4394, 5;
	// begin inline asm
	lop3.b32 %r4389, %r4390, %r4396, %r4392, 150;
	// end inline asm
	xor.b32  	%r5491, %r5430, %r5470;
	xor.b32  	%r5492, %r5491, %r5382;
	xor.b32  	%r5493, %r5492, %r5366;
	shf.l.wrap.b32 	%r5494, %r5493, %r5493, 1;
	add.s32 	%r5495, %r4389, %r4388;
	add.s32 	%r5496, %r5495, %r5494;
	add.s32 	%r5497, %r5496, %r5490;
	add.s32 	%r4398, %r5497, -899497514;
	shf.l.wrap.b32 	%r4400, %r4390, %r4390, 30;
	shf.l.wrap.b32 	%r5498, %r4398, %r4398, 5;
	// begin inline asm
	lop3.b32 %r4393, %r4394, %r4400, %r4396, 150;
	// end inline asm
	xor.b32  	%r5499, %r5438, %r5478;
	xor.b32  	%r5500, %r5499, %r5390;
	xor.b32  	%r5501, %r5500, %r5374;
	shf.l.wrap.b32 	%r5502, %r5501, %r5501, 1;
	add.s32 	%r5503, %r4393, %r4392;
	add.s32 	%r5504, %r5503, %r5502;
	add.s32 	%r5505, %r5504, %r5498;
	add.s32 	%r4402, %r5505, -899497514;
	shf.l.wrap.b32 	%r4404, %r4394, %r4394, 30;
	shf.l.wrap.b32 	%r5506, %r4402, %r4402, 5;
	// begin inline asm
	lop3.b32 %r4397, %r4398, %r4404, %r4400, 150;
	// end inline asm
	xor.b32  	%r5507, %r5446, %r5486;
	xor.b32  	%r5508, %r5507, %r5398;
	xor.b32  	%r5509, %r5508, %r5382;
	shf.l.wrap.b32 	%r5510, %r5509, %r5509, 1;
	add.s32 	%r5511, %r4397, %r4396;
	add.s32 	%r5512, %r5511, %r5510;
	add.s32 	%r5513, %r5512, %r5506;
	add.s32 	%r4406, %r5513, -899497514;
	shf.l.wrap.b32 	%r4408, %r4398, %r4398, 30;
	shf.l.wrap.b32 	%r5514, %r4406, %r4406, 5;
	// begin inline asm
	lop3.b32 %r4401, %r4402, %r4408, %r4404, 150;
	// end inline asm
	xor.b32  	%r5515, %r5454, %r5494;
	xor.b32  	%r5516, %r5515, %r5406;
	xor.b32  	%r5517, %r5516, %r5390;
	shf.l.wrap.b32 	%r5518, %r5517, %r5517, 1;
	add.s32 	%r5519, %r4401, %r4400;
	add.s32 	%r5520, %r5519, %r5518;
	add.s32 	%r5521, %r5520, %r5514;
	add.s32 	%r4410, %r5521, -899497514;
	shf.l.wrap.b32 	%r4412, %r4402, %r4402, 30;
	shf.l.wrap.b32 	%r5522, %r4410, %r4410, 5;
	// begin inline asm
	lop3.b32 %r4405, %r4406, %r4412, %r4408, 150;
	// end inline asm
	xor.b32  	%r5523, %r5462, %r5502;
	xor.b32  	%r5524, %r5523, %r5414;
	xor.b32  	%r5525, %r5524, %r5398;
	shf.l.wrap.b32 	%r5526, %r5525, %r5525, 1;
	add.s32 	%r5527, %r4405, %r4404;
	add.s32 	%r5528, %r5527, %r5526;
	add.s32 	%r5529, %r5528, %r5522;
	add.s32 	%r4414, %r5529, -899497514;
	shf.l.wrap.b32 	%r4416, %r4406, %r4406, 30;
	shf.l.wrap.b32 	%r5530, %r4414, %r4414, 5;
	// begin inline asm
	lop3.b32 %r4409, %r4410, %r4416, %r4412, 150;
	// end inline asm
	xor.b32  	%r5531, %r5470, %r5510;
	xor.b32  	%r5532, %r5531, %r5422;
	xor.b32  	%r5533, %r5532, %r5406;
	shf.l.wrap.b32 	%r5534, %r5533, %r5533, 1;
	add.s32 	%r5535, %r4409, %r4408;
	add.s32 	%r5536, %r5535, %r5534;
	add.s32 	%r5537, %r5536, %r5530;
	add.s32 	%r4418, %r5537, -899497514;
	shf.l.wrap.b32 	%r4420, %r4410, %r4410, 30;
	shf.l.wrap.b32 	%r5538, %r4418, %r4418, 5;
	// begin inline asm
	lop3.b32 %r4413, %r4414, %r4420, %r4416, 150;
	// end inline asm
	xor.b32  	%r5539, %r5478, %r5518;
	xor.b32  	%r5540, %r5539, %r5430;
	xor.b32  	%r5541, %r5540, %r5414;
	shf.l.wrap.b32 	%r5542, %r5541, %r5541, 1;
	add.s32 	%r5543, %r4412, %r4413;
	add.s32 	%r5544, %r5543, %r5542;
	add.s32 	%r5545, %r5544, %r5538;
	add.s32 	%r4422, %r5545, -899497514;
	shf.l.wrap.b32 	%r4424, %r4414, %r4414, 30;
	shf.l.wrap.b32 	%r5546, %r4422, %r4422, 5;
	// begin inline asm
	lop3.b32 %r4417, %r4418, %r4424, %r4420, 150;
	// end inline asm
	xor.b32  	%r5547, %r5486, %r5526;
	xor.b32  	%r5548, %r5547, %r5438;
	xor.b32  	%r5549, %r5548, %r5422;
	shf.l.wrap.b32 	%r5550, %r5549, %r5549, 1;
	add.s32 	%r5551, %r4416, %r4417;
	add.s32 	%r5552, %r5551, %r5550;
	add.s32 	%r5553, %r5552, %r5546;
	add.s32 	%r4426, %r5553, -899497514;
	shf.l.wrap.b32 	%r4428, %r4418, %r4418, 30;
	shf.l.wrap.b32 	%r5554, %r4426, %r4426, 5;
	// begin inline asm
	lop3.b32 %r4421, %r4422, %r4428, %r4424, 150;
	// end inline asm
	xor.b32  	%r5555, %r5494, %r5534;
	xor.b32  	%r5556, %r5555, %r5446;
	xor.b32  	%r5557, %r5556, %r5430;
	shf.l.wrap.b32 	%r5558, %r5557, %r5557, 1;
	add.s32 	%r5559, %r4420, %r4421;
	add.s32 	%r5560, %r5559, %r5558;
	add.s32 	%r5561, %r5560, %r5554;
	add.s32 	%r4430, %r5561, -899497514;
	shf.l.wrap.b32 	%r4432, %r4422, %r4422, 30;
	shf.l.wrap.b32 	%r5562, %r4430, %r4430, 5;
	// begin inline asm
	lop3.b32 %r4425, %r4426, %r4432, %r4428, 150;
	// end inline asm
	xor.b32  	%r5563, %r5502, %r5542;
	xor.b32  	%r5564, %r5563, %r5454;
	xor.b32  	%r5565, %r5564, %r5438;
	shf.l.wrap.b32 	%r5566, %r5565, %r5565, 1;
	add.s32 	%r5567, %r4424, %r4425;
	add.s32 	%r5568, %r5567, %r5566;
	add.s32 	%r5569, %r5568, %r5562;
	add.s32 	%r4434, %r5569, -899497514;
	shf.l.wrap.b32 	%r4436, %r4426, %r4426, 30;
	shf.l.wrap.b32 	%r5570, %r4434, %r4434, 5;
	// begin inline asm
	lop3.b32 %r4429, %r4430, %r4436, %r4432, 150;
	// end inline asm
	xor.b32  	%r5571, %r5510, %r5550;
	xor.b32  	%r5572, %r5571, %r5462;
	xor.b32  	%r5573, %r5572, %r5446;
	shf.l.wrap.b32 	%r5574, %r5573, %r5573, 1;
	add.s32 	%r5575, %r4428, %r4429;
	add.s32 	%r5576, %r5575, %r5574;
	add.s32 	%r5577, %r5576, %r5570;
	add.s32 	%r4438, %r5577, -899497514;
	shf.l.wrap.b32 	%r4440, %r4430, %r4430, 30;
	shf.l.wrap.b32 	%r5578, %r4438, %r4438, 5;
	// begin inline asm
	lop3.b32 %r4433, %r4434, %r4440, %r4436, 150;
	// end inline asm
	xor.b32  	%r5579, %r5518, %r5558;
	xor.b32  	%r5580, %r5579, %r5470;
	xor.b32  	%r5581, %r5580, %r5454;
	shf.l.wrap.b32 	%r5582, %r5581, %r5581, 1;
	add.s32 	%r5583, %r4432, %r4433;
	add.s32 	%r5584, %r5583, %r5582;
	add.s32 	%r5585, %r5584, %r5578;
	add.s32 	%r4442, %r5585, -899497514;
	shf.l.wrap.b32 	%r4444, %r4434, %r4434, 30;
	shf.l.wrap.b32 	%r5586, %r4442, %r4442, 5;
	// begin inline asm
	lop3.b32 %r4437, %r4438, %r4444, %r4440, 150;
	// end inline asm
	xor.b32  	%r5587, %r5526, %r5566;
	xor.b32  	%r5588, %r5587, %r5478;
	xor.b32  	%r5589, %r5588, %r5462;
	shf.l.wrap.b32 	%r5590, %r5589, %r5589, 1;
	add.s32 	%r5591, %r4436, %r4437;
	add.s32 	%r5592, %r5591, %r5590;
	add.s32 	%r5593, %r5592, %r5586;
	add.s32 	%r5594, %r5593, -899497514;
	shf.l.wrap.b32 	%r4443, %r4438, %r4438, 30;
	shf.l.wrap.b32 	%r5595, %r5594, %r5594, 5;
	// begin inline asm
	lop3.b32 %r4441, %r4442, %r4443, %r4444, 150;
	// end inline asm
	xor.b32  	%r5596, %r5534, %r5574;
	xor.b32  	%r5597, %r5596, %r5486;
	xor.b32  	%r5598, %r5597, %r5470;
	shf.l.wrap.b32 	%r5599, %r5598, %r5598, 1;
	shf.l.wrap.b32 	%r5600, %r4442, %r4442, 30;
	add.s32 	%r5601, %r8, %r4440;
	add.s32 	%r5602, %r5601, %r4441;
	add.s32 	%r5603, %r5602, %r5599;
	add.s32 	%r5604, %r5603, %r5595;
	add.s32 	%r5605, %r5604, -899497514;
	add.s32 	%r5606, %r5594, %r9;
	add.s32 	%r5607, %r5600, %r10;
	add.s32 	%r5608, %r4443, %r11;
	add.s32 	%r5609, %r4444, %r12;
	st.global.u32 	[%rd2+40], %r5605;
	st.global.u32 	[%rd2+44], %r5606;
	st.global.u32 	[%rd2+48], %r5607;
	st.global.u32 	[%rd2+52], %r5608;
	st.global.u32 	[%rd2+56], %r5609;
	st.global.u32 	[%rd2+-20], %r5605;
	st.global.u32 	[%rd2+-16], %r5606;
	st.global.u32 	[%rd2+-12], %r5607;
	st.global.u32 	[%rd2+-8], %r5608;
	st.global.u32 	[%rd2+-4], %r5609;
	st.global.u32 	[%rd2+60], %r4452;
	ret;

}
	// .globl	pbkdf2_loop
.entry pbkdf2_loop(
	.param .u64 .ptr .global .align 4 pbkdf2_loop_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<1792>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd2, [pbkdf2_loop_param_0];
	mov.b32 	%r74, %envreg3;
	mov.u32 	%r75, %ctaid.x;
	mov.u32 	%r76, %ntid.x;
	mov.u32 	%r77, %tid.x;
	add.s32 	%r78, %r77, %r74;
	mad.lo.s32 	%r79, %r76, %r75, %r78;
	mul.wide.u32 	%rd3, %r79, 84;
	add.s64 	%rd1, %rd2, %rd3;
	ld.global.u32 	%r1781, [%rd1];
	ld.global.u32 	%r1782, [%rd1+4];
	ld.global.u32 	%r1783, [%rd1+8];
	ld.global.u32 	%r1784, [%rd1+12];
	ld.global.u32 	%r1785, [%rd1+16];
	ld.global.u32 	%r1790, [%rd1+60];
	ld.global.u32 	%r1789, [%rd1+64];
	ld.global.u32 	%r1788, [%rd1+68];
	ld.global.u32 	%r1787, [%rd1+72];
	ld.global.u32 	%r1786, [%rd1+76];
	ld.global.u32 	%r62, [%rd1+20];
	shf.l.wrap.b32 	%r80, %r62, %r62, 5;
	ld.global.u32 	%r11, [%rd1+32];
	ld.global.u32 	%r12, [%rd1+28];
	ld.global.u32 	%r13, [%rd1+24];
	// begin inline asm
	lop3.b32 %r57, %r13, %r12, %r11, 202;
	// end inline asm
	ld.global.u32 	%r14, [%rd1+36];
	add.s32 	%r81, %r80, %r14;
	add.s32 	%r82, %r81, %r57;
	add.s32 	%r15, %r82, 1518500249;
	shf.l.wrap.b32 	%r63, %r13, %r13, 30;
	// begin inline asm
	lop3.b32 %r61, %r62, %r63, %r12, 202;
	// end inline asm
	add.s32 	%r83, %r11, %r61;
	add.s32 	%r17, %r83, 1518500249;
	shf.l.wrap.b32 	%r18, %r62, %r62, 30;
	add.s32 	%r19, %r12, 1518500249;
	add.s32 	%r20, %r63, 1518500249;
	add.s32 	%r21, %r18, 1518500249;
	add.s32 	%r22, %r62, -899497514;
	ld.global.u32 	%r70, [%rd1+40];
	shf.l.wrap.b32 	%r84, %r70, %r70, 5;
	ld.global.u32 	%r23, [%rd1+52];
	ld.global.u32 	%r24, [%rd1+48];
	ld.global.u32 	%r25, [%rd1+44];
	// begin inline asm
	lop3.b32 %r65, %r25, %r24, %r23, 202;
	// end inline asm
	ld.global.u32 	%r26, [%rd1+56];
	add.s32 	%r85, %r84, %r26;
	add.s32 	%r86, %r85, %r65;
	add.s32 	%r27, %r86, 1518500249;
	shf.l.wrap.b32 	%r71, %r25, %r25, 30;
	// begin inline asm
	lop3.b32 %r69, %r70, %r71, %r24, 202;
	// end inline asm
	add.s32 	%r87, %r23, %r69;
	add.s32 	%r29, %r87, 1518500249;
	shf.l.wrap.b32 	%r30, %r70, %r70, 30;
	add.s32 	%r31, %r24, 1518500249;
	add.s32 	%r32, %r71, 1518500249;
	add.s32 	%r33, %r30, 1518500249;
	add.s32 	%r34, %r70, -899497514;
	mov.u32 	%r1791, 0;

$L__BB1_1:
	add.s32 	%r89, %r15, %r1781;
	shf.l.wrap.b32 	%r712, %r89, %r89, 5;
	add.s32 	%r713, %r17, %r1782;
	add.s32 	%r93, %r713, %r712;
	shf.l.wrap.b32 	%r714, %r93, %r93, 5;
	// begin inline asm
	lop3.b32 %r88, %r89, %r18, %r63, 202;
	// end inline asm
	add.s32 	%r715, %r19, %r88;
	add.s32 	%r716, %r715, %r1783;
	add.s32 	%r97, %r716, %r714;
	shf.l.wrap.b32 	%r99, %r89, %r89, 30;
	shf.l.wrap.b32 	%r717, %r97, %r97, 5;
	// begin inline asm
	lop3.b32 %r92, %r93, %r99, %r18, 202;
	// end inline asm
	add.s32 	%r718, %r20, %r92;
	add.s32 	%r719, %r718, %r1784;
	add.s32 	%r101, %r719, %r717;
	shf.l.wrap.b32 	%r103, %r93, %r93, 30;
	shf.l.wrap.b32 	%r720, %r101, %r101, 5;
	// begin inline asm
	lop3.b32 %r96, %r97, %r103, %r99, 202;
	// end inline asm
	add.s32 	%r721, %r21, %r96;
	add.s32 	%r722, %r721, %r1785;
	add.s32 	%r105, %r722, %r720;
	shf.l.wrap.b32 	%r107, %r97, %r97, 30;
	shf.l.wrap.b32 	%r723, %r105, %r105, 5;
	// begin inline asm
	lop3.b32 %r100, %r101, %r107, %r103, 202;
	// end inline asm
	add.s32 	%r724, %r99, %r100;
	add.s32 	%r725, %r724, 1518500249;
	xor.b32  	%r726, %r725, -2147483648;
	add.s32 	%r109, %r726, %r723;
	shf.l.wrap.b32 	%r111, %r101, %r101, 30;
	shf.l.wrap.b32 	%r727, %r109, %r109, 5;
	// begin inline asm
	lop3.b32 %r104, %r105, %r111, %r107, 202;
	// end inline asm
	add.s32 	%r728, %r103, %r104;
	add.s32 	%r729, %r728, %r727;
	add.s32 	%r113, %r729, 1518500249;
	shf.l.wrap.b32 	%r115, %r105, %r105, 30;
	shf.l.wrap.b32 	%r730, %r113, %r113, 5;
	// begin inline asm
	lop3.b32 %r108, %r109, %r115, %r111, 202;
	// end inline asm
	add.s32 	%r731, %r108, %r107;
	add.s32 	%r732, %r731, %r730;
	add.s32 	%r117, %r732, 1518500249;
	shf.l.wrap.b32 	%r119, %r109, %r109, 30;
	shf.l.wrap.b32 	%r733, %r117, %r117, 5;
	// begin inline asm
	lop3.b32 %r112, %r113, %r119, %r115, 202;
	// end inline asm
	add.s32 	%r734, %r112, %r111;
	add.s32 	%r735, %r734, %r733;
	add.s32 	%r121, %r735, 1518500249;
	shf.l.wrap.b32 	%r123, %r113, %r113, 30;
	shf.l.wrap.b32 	%r736, %r121, %r121, 5;
	// begin inline asm
	lop3.b32 %r116, %r117, %r123, %r119, 202;
	// end inline asm
	add.s32 	%r737, %r116, %r115;
	add.s32 	%r738, %r737, %r736;
	add.s32 	%r125, %r738, 1518500249;
	shf.l.wrap.b32 	%r127, %r117, %r117, 30;
	shf.l.wrap.b32 	%r739, %r125, %r125, 5;
	// begin inline asm
	lop3.b32 %r120, %r121, %r127, %r123, 202;
	// end inline asm
	add.s32 	%r740, %r120, %r119;
	add.s32 	%r741, %r740, %r739;
	add.s32 	%r129, %r741, 1518500249;
	shf.l.wrap.b32 	%r131, %r121, %r121, 30;
	shf.l.wrap.b32 	%r742, %r129, %r129, 5;
	// begin inline asm
	lop3.b32 %r124, %r125, %r131, %r127, 202;
	// end inline asm
	add.s32 	%r743, %r124, %r123;
	add.s32 	%r744, %r743, %r742;
	add.s32 	%r133, %r744, 1518500249;
	shf.l.wrap.b32 	%r135, %r125, %r125, 30;
	shf.l.wrap.b32 	%r745, %r133, %r133, 5;
	// begin inline asm
	lop3.b32 %r128, %r129, %r135, %r131, 202;
	// end inline asm
	add.s32 	%r746, %r128, %r127;
	add.s32 	%r747, %r746, %r745;
	add.s32 	%r137, %r747, 1518500249;
	shf.l.wrap.b32 	%r139, %r129, %r129, 30;
	shf.l.wrap.b32 	%r748, %r137, %r137, 5;
	// begin inline asm
	lop3.b32 %r132, %r133, %r139, %r135, 202;
	// end inline asm
	add.s32 	%r749, %r132, %r131;
	add.s32 	%r750, %r749, %r748;
	add.s32 	%r141, %r750, 1518500249;
	shf.l.wrap.b32 	%r143, %r133, %r133, 30;
	shf.l.wrap.b32 	%r751, %r141, %r141, 5;
	// begin inline asm
	lop3.b32 %r136, %r137, %r143, %r139, 202;
	// end inline asm
	add.s32 	%r752, %r136, %r135;
	add.s32 	%r753, %r752, %r751;
	add.s32 	%r145, %r753, 1518500249;
	shf.l.wrap.b32 	%r147, %r137, %r137, 30;
	shf.l.wrap.b32 	%r754, %r145, %r145, 5;
	// begin inline asm
	lop3.b32 %r140, %r141, %r147, %r143, 202;
	// end inline asm
	add.s32 	%r755, %r140, %r139;
	add.s32 	%r756, %r755, %r754;
	add.s32 	%r149, %r756, 1518500921;
	shf.l.wrap.b32 	%r151, %r141, %r141, 30;
	shf.l.wrap.b32 	%r757, %r149, %r149, 5;
	// begin inline asm
	lop3.b32 %r144, %r145, %r151, %r147, 202;
	// end inline asm
	xor.b32  	%r758, %r1781, %r1783;
	shf.l.wrap.b32 	%r759, %r758, %r758, 1;
	add.s32 	%r760, %r144, %r759;
	add.s32 	%r761, %r760, %r143;
	add.s32 	%r762, %r761, %r757;
	add.s32 	%r153, %r762, 1518500249;
	shf.l.wrap.b32 	%r155, %r145, %r145, 30;
	shf.l.wrap.b32 	%r763, %r153, %r153, 5;
	// begin inline asm
	lop3.b32 %r148, %r149, %r155, %r151, 202;
	// end inline asm
	xor.b32  	%r764, %r1782, %r1784;
	shf.l.wrap.b32 	%r765, %r764, %r764, 1;
	add.s32 	%r766, %r148, %r765;
	add.s32 	%r767, %r766, %r147;
	add.s32 	%r768, %r767, %r763;
	add.s32 	%r157, %r768, 1518500249;
	shf.l.wrap.b32 	%r159, %r149, %r149, 30;
	shf.l.wrap.b32 	%r769, %r157, %r157, 5;
	// begin inline asm
	lop3.b32 %r152, %r153, %r159, %r155, 202;
	// end inline asm
	xor.b32  	%r770, %r1785, %r1783;
	xor.b32  	%r771, %r770, 672;
	shf.l.wrap.b32 	%r772, %r771, %r771, 1;
	add.s32 	%r773, %r152, %r772;
	add.s32 	%r774, %r773, %r151;
	add.s32 	%r775, %r774, %r769;
	add.s32 	%r161, %r775, 1518500249;
	shf.l.wrap.b32 	%r163, %r153, %r153, 30;
	shf.l.wrap.b32 	%r776, %r161, %r161, 5;
	// begin inline asm
	lop3.b32 %r156, %r157, %r163, %r159, 202;
	// end inline asm
	xor.b32  	%r777, %r759, %r1784;
	xor.b32  	%r778, %r777, -2147483648;
	shf.l.wrap.b32 	%r779, %r778, %r778, 1;
	add.s32 	%r780, %r156, %r779;
	add.s32 	%r781, %r780, %r155;
	add.s32 	%r782, %r781, %r776;
	add.s32 	%r165, %r782, 1518500249;
	shf.l.wrap.b32 	%r167, %r157, %r157, 30;
	shf.l.wrap.b32 	%r783, %r165, %r165, 5;
	// begin inline asm
	lop3.b32 %r160, %r161, %r167, %r163, 150;
	// end inline asm
	xor.b32  	%r784, %r1785, %r765;
	shf.l.wrap.b32 	%r785, %r784, %r784, 1;
	add.s32 	%r786, %r160, %r785;
	add.s32 	%r787, %r786, %r159;
	add.s32 	%r788, %r787, %r783;
	add.s32 	%r169, %r788, 1859775393;
	shf.l.wrap.b32 	%r171, %r161, %r161, 30;
	shf.l.wrap.b32 	%r789, %r169, %r169, 5;
	// begin inline asm
	lop3.b32 %r164, %r165, %r171, %r167, 150;
	// end inline asm
	xor.b32  	%r790, %r772, -2147483648;
	shf.l.wrap.b32 	%r791, %r790, %r790, 1;
	add.s32 	%r792, %r164, %r791;
	add.s32 	%r793, %r792, %r163;
	add.s32 	%r794, %r793, %r789;
	add.s32 	%r173, %r794, 1859775393;
	shf.l.wrap.b32 	%r175, %r165, %r165, 30;
	shf.l.wrap.b32 	%r795, %r173, %r173, 5;
	// begin inline asm
	lop3.b32 %r168, %r169, %r175, %r171, 150;
	// end inline asm
	shf.l.wrap.b32 	%r796, %r779, %r779, 1;
	add.s32 	%r797, %r168, %r796;
	add.s32 	%r798, %r797, %r167;
	add.s32 	%r799, %r798, %r795;
	add.s32 	%r177, %r799, 1859775393;
	shf.l.wrap.b32 	%r179, %r169, %r169, 30;
	shf.l.wrap.b32 	%r800, %r177, %r177, 5;
	// begin inline asm
	lop3.b32 %r172, %r173, %r179, %r175, 150;
	// end inline asm
	xor.b32  	%r801, %r785, 672;
	shf.l.wrap.b32 	%r802, %r801, %r801, 1;
	add.s32 	%r803, %r172, %r802;
	add.s32 	%r804, %r803, %r171;
	add.s32 	%r805, %r804, %r800;
	add.s32 	%r181, %r805, 1859775393;
	shf.l.wrap.b32 	%r183, %r173, %r173, 30;
	shf.l.wrap.b32 	%r806, %r181, %r181, 5;
	// begin inline asm
	lop3.b32 %r176, %r177, %r183, %r179, 150;
	// end inline asm
	xor.b32  	%r807, %r759, %r791;
	shf.l.wrap.b32 	%r808, %r807, %r807, 1;
	add.s32 	%r809, %r176, %r808;
	add.s32 	%r810, %r809, %r175;
	add.s32 	%r811, %r810, %r806;
	add.s32 	%r185, %r811, 1859775393;
	shf.l.wrap.b32 	%r187, %r177, %r177, 30;
	shf.l.wrap.b32 	%r812, %r185, %r185, 5;
	// begin inline asm
	lop3.b32 %r180, %r181, %r187, %r183, 150;
	// end inline asm
	xor.b32  	%r813, %r765, %r796;
	shf.l.wrap.b32 	%r814, %r813, %r813, 1;
	add.s32 	%r815, %r180, %r814;
	add.s32 	%r816, %r815, %r179;
	add.s32 	%r817, %r816, %r812;
	add.s32 	%r189, %r817, 1859775393;
	shf.l.wrap.b32 	%r191, %r181, %r181, 30;
	shf.l.wrap.b32 	%r818, %r189, %r189, 5;
	// begin inline asm
	lop3.b32 %r184, %r185, %r191, %r187, 150;
	// end inline asm
	xor.b32  	%r819, %r772, %r802;
	shf.l.wrap.b32 	%r820, %r819, %r819, 1;
	add.s32 	%r821, %r184, %r820;
	add.s32 	%r822, %r821, %r183;
	add.s32 	%r823, %r822, %r818;
	add.s32 	%r193, %r823, 1859775393;
	shf.l.wrap.b32 	%r195, %r185, %r185, 30;
	shf.l.wrap.b32 	%r824, %r193, %r193, 5;
	// begin inline asm
	lop3.b32 %r188, %r189, %r195, %r191, 150;
	// end inline asm
	xor.b32  	%r825, %r779, %r808;
	shf.l.wrap.b32 	%r826, %r825, %r825, 1;
	add.s32 	%r827, %r188, %r826;
	add.s32 	%r828, %r827, %r187;
	add.s32 	%r829, %r828, %r824;
	add.s32 	%r197, %r829, 1859775393;
	shf.l.wrap.b32 	%r199, %r189, %r189, 30;
	shf.l.wrap.b32 	%r830, %r197, %r197, 5;
	// begin inline asm
	lop3.b32 %r192, %r193, %r199, %r195, 150;
	// end inline asm
	xor.b32  	%r831, %r785, %r814;
	shf.l.wrap.b32 	%r832, %r831, %r831, 1;
	add.s32 	%r833, %r192, %r832;
	add.s32 	%r834, %r833, %r191;
	add.s32 	%r835, %r834, %r830;
	add.s32 	%r201, %r835, 1859775393;
	shf.l.wrap.b32 	%r203, %r193, %r193, 30;
	shf.l.wrap.b32 	%r836, %r201, %r201, 5;
	// begin inline asm
	lop3.b32 %r196, %r197, %r203, %r199, 150;
	// end inline asm
	xor.b32  	%r837, %r791, %r820;
	xor.b32  	%r838, %r837, 672;
	shf.l.wrap.b32 	%r839, %r838, %r838, 1;
	add.s32 	%r840, %r196, %r839;
	add.s32 	%r841, %r840, %r195;
	add.s32 	%r842, %r841, %r836;
	add.s32 	%r205, %r842, 1859775393;
	shf.l.wrap.b32 	%r207, %r197, %r197, 30;
	shf.l.wrap.b32 	%r843, %r205, %r205, 5;
	// begin inline asm
	lop3.b32 %r200, %r201, %r207, %r203, 150;
	// end inline asm
	xor.b32  	%r844, %r796, %r826;
	xor.b32  	%r845, %r844, %r759;
	shf.l.wrap.b32 	%r846, %r845, %r845, 1;
	add.s32 	%r847, %r200, %r846;
	add.s32 	%r848, %r847, %r199;
	add.s32 	%r849, %r848, %r843;
	add.s32 	%r209, %r849, 1859775393;
	shf.l.wrap.b32 	%r211, %r201, %r201, 30;
	shf.l.wrap.b32 	%r850, %r209, %r209, 5;
	// begin inline asm
	lop3.b32 %r204, %r205, %r211, %r207, 150;
	// end inline asm
	xor.b32  	%r851, %r802, %r832;
	xor.b32  	%r852, %r851, %r765;
	xor.b32  	%r853, %r852, 672;
	shf.l.wrap.b32 	%r854, %r853, %r853, 1;
	add.s32 	%r855, %r204, %r854;
	add.s32 	%r856, %r855, %r203;
	add.s32 	%r857, %r856, %r850;
	add.s32 	%r213, %r857, 1859775393;
	shf.l.wrap.b32 	%r215, %r205, %r205, 30;
	shf.l.wrap.b32 	%r858, %r213, %r213, 5;
	// begin inline asm
	lop3.b32 %r208, %r209, %r215, %r211, 150;
	// end inline asm
	xor.b32  	%r859, %r808, %r839;
	xor.b32  	%r860, %r859, %r772;
	xor.b32  	%r861, %r860, %r759;
	shf.l.wrap.b32 	%r862, %r861, %r861, 1;
	add.s32 	%r863, %r208, %r862;
	add.s32 	%r864, %r863, %r207;
	add.s32 	%r865, %r864, %r858;
	add.s32 	%r217, %r865, 1859775393;
	shf.l.wrap.b32 	%r219, %r209, %r209, 30;
	shf.l.wrap.b32 	%r866, %r217, %r217, 5;
	// begin inline asm
	lop3.b32 %r212, %r213, %r219, %r215, 150;
	// end inline asm
	xor.b32  	%r867, %r814, %r846;
	xor.b32  	%r868, %r867, %r779;
	xor.b32  	%r869, %r868, %r765;
	shf.l.wrap.b32 	%r870, %r869, %r869, 1;
	add.s32 	%r871, %r212, %r870;
	add.s32 	%r872, %r871, %r211;
	add.s32 	%r873, %r872, %r866;
	add.s32 	%r221, %r873, 1859775393;
	shf.l.wrap.b32 	%r223, %r213, %r213, 30;
	shf.l.wrap.b32 	%r874, %r221, %r221, 5;
	// begin inline asm
	lop3.b32 %r216, %r217, %r223, %r219, 150;
	// end inline asm
	xor.b32  	%r875, %r820, %r854;
	xor.b32  	%r876, %r875, %r785;
	xor.b32  	%r877, %r876, %r772;
	shf.l.wrap.b32 	%r878, %r877, %r877, 1;
	add.s32 	%r879, %r216, %r878;
	add.s32 	%r880, %r879, %r215;
	add.s32 	%r881, %r880, %r874;
	add.s32 	%r225, %r881, 1859775393;
	shf.l.wrap.b32 	%r227, %r217, %r217, 30;
	shf.l.wrap.b32 	%r882, %r225, %r225, 5;
	// begin inline asm
	lop3.b32 %r220, %r221, %r227, %r223, 150;
	// end inline asm
	xor.b32  	%r883, %r826, %r862;
	xor.b32  	%r884, %r883, %r791;
	xor.b32  	%r885, %r884, %r779;
	shf.l.wrap.b32 	%r886, %r885, %r885, 1;
	add.s32 	%r887, %r220, %r886;
	add.s32 	%r888, %r887, %r219;
	add.s32 	%r889, %r888, %r882;
	add.s32 	%r229, %r889, 1859775393;
	shf.l.wrap.b32 	%r231, %r221, %r221, 30;
	shf.l.wrap.b32 	%r890, %r229, %r229, 5;
	// begin inline asm
	lop3.b32 %r224, %r225, %r231, %r227, 150;
	// end inline asm
	xor.b32  	%r891, %r832, %r870;
	xor.b32  	%r892, %r891, %r796;
	xor.b32  	%r893, %r892, %r785;
	shf.l.wrap.b32 	%r894, %r893, %r893, 1;
	add.s32 	%r895, %r224, %r894;
	add.s32 	%r896, %r895, %r223;
	add.s32 	%r897, %r896, %r890;
	add.s32 	%r233, %r897, 1859775393;
	shf.l.wrap.b32 	%r235, %r225, %r225, 30;
	shf.l.wrap.b32 	%r898, %r233, %r233, 5;
	// begin inline asm
	lop3.b32 %r228, %r229, %r235, %r231, 150;
	// end inline asm
	xor.b32  	%r899, %r839, %r878;
	xor.b32  	%r900, %r899, %r802;
	xor.b32  	%r901, %r900, %r791;
	shf.l.wrap.b32 	%r902, %r901, %r901, 1;
	add.s32 	%r903, %r228, %r902;
	add.s32 	%r904, %r903, %r227;
	add.s32 	%r905, %r904, %r898;
	add.s32 	%r237, %r905, 1859775393;
	shf.l.wrap.b32 	%r239, %r229, %r229, 30;
	shf.l.wrap.b32 	%r906, %r237, %r237, 5;
	// begin inline asm
	lop3.b32 %r232, %r233, %r239, %r235, 150;
	// end inline asm
	xor.b32  	%r907, %r846, %r886;
	xor.b32  	%r908, %r907, %r808;
	xor.b32  	%r909, %r908, %r796;
	shf.l.wrap.b32 	%r910, %r909, %r909, 1;
	add.s32 	%r911, %r232, %r910;
	add.s32 	%r912, %r911, %r231;
	add.s32 	%r913, %r912, %r906;
	add.s32 	%r241, %r913, 1859775393;
	shf.l.wrap.b32 	%r243, %r233, %r233, 30;
	shf.l.wrap.b32 	%r914, %r241, %r241, 5;
	// begin inline asm
	lop3.b32 %r236, %r237, %r243, %r239, 150;
	// end inline asm
	xor.b32  	%r915, %r854, %r894;
	xor.b32  	%r916, %r915, %r814;
	xor.b32  	%r917, %r916, %r802;
	shf.l.wrap.b32 	%r918, %r917, %r917, 1;
	add.s32 	%r919, %r236, %r918;
	add.s32 	%r920, %r919, %r235;
	add.s32 	%r921, %r920, %r914;
	add.s32 	%r245, %r921, 1859775393;
	shf.l.wrap.b32 	%r247, %r237, %r237, 30;
	shf.l.wrap.b32 	%r922, %r245, %r245, 5;
	// begin inline asm
	lop3.b32 %r240, %r241, %r247, %r243, 232;
	// end inline asm
	xor.b32  	%r923, %r862, %r902;
	xor.b32  	%r924, %r923, %r820;
	xor.b32  	%r925, %r924, %r808;
	shf.l.wrap.b32 	%r926, %r925, %r925, 1;
	add.s32 	%r927, %r240, %r926;
	add.s32 	%r928, %r927, %r239;
	add.s32 	%r929, %r928, %r922;
	add.s32 	%r249, %r929, -1894007588;
	shf.l.wrap.b32 	%r251, %r241, %r241, 30;
	shf.l.wrap.b32 	%r930, %r249, %r249, 5;
	// begin inline asm
	lop3.b32 %r244, %r245, %r251, %r247, 232;
	// end inline asm
	xor.b32  	%r931, %r870, %r910;
	xor.b32  	%r932, %r931, %r826;
	xor.b32  	%r933, %r932, %r814;
	shf.l.wrap.b32 	%r934, %r933, %r933, 1;
	add.s32 	%r935, %r244, %r934;
	add.s32 	%r936, %r935, %r243;
	add.s32 	%r937, %r936, %r930;
	add.s32 	%r253, %r937, -1894007588;
	shf.l.wrap.b32 	%r255, %r245, %r245, 30;
	shf.l.wrap.b32 	%r938, %r253, %r253, 5;
	// begin inline asm
	lop3.b32 %r248, %r249, %r255, %r251, 232;
	// end inline asm
	xor.b32  	%r939, %r878, %r918;
	xor.b32  	%r940, %r939, %r832;
	xor.b32  	%r941, %r940, %r820;
	shf.l.wrap.b32 	%r942, %r941, %r941, 1;
	add.s32 	%r943, %r248, %r942;
	add.s32 	%r944, %r943, %r247;
	add.s32 	%r945, %r944, %r938;
	add.s32 	%r257, %r945, -1894007588;
	shf.l.wrap.b32 	%r259, %r249, %r249, 30;
	shf.l.wrap.b32 	%r946, %r257, %r257, 5;
	// begin inline asm
	lop3.b32 %r252, %r253, %r259, %r255, 232;
	// end inline asm
	xor.b32  	%r947, %r886, %r926;
	xor.b32  	%r948, %r947, %r839;
	xor.b32  	%r949, %r948, %r826;
	shf.l.wrap.b32 	%r950, %r949, %r949, 1;
	add.s32 	%r951, %r252, %r950;
	add.s32 	%r952, %r951, %r251;
	add.s32 	%r953, %r952, %r946;
	add.s32 	%r261, %r953, -1894007588;
	shf.l.wrap.b32 	%r263, %r253, %r253, 30;
	shf.l.wrap.b32 	%r954, %r261, %r261, 5;
	// begin inline asm
	lop3.b32 %r256, %r257, %r263, %r259, 232;
	// end inline asm
	xor.b32  	%r955, %r894, %r934;
	xor.b32  	%r956, %r955, %r846;
	xor.b32  	%r957, %r956, %r832;
	shf.l.wrap.b32 	%r958, %r957, %r957, 1;
	add.s32 	%r959, %r256, %r958;
	add.s32 	%r960, %r959, %r255;
	add.s32 	%r961, %r960, %r954;
	add.s32 	%r265, %r961, -1894007588;
	shf.l.wrap.b32 	%r267, %r257, %r257, 30;
	shf.l.wrap.b32 	%r962, %r265, %r265, 5;
	// begin inline asm
	lop3.b32 %r260, %r261, %r267, %r263, 232;
	// end inline asm
	xor.b32  	%r963, %r902, %r942;
	xor.b32  	%r964, %r963, %r854;
	xor.b32  	%r965, %r964, %r839;
	shf.l.wrap.b32 	%r966, %r965, %r965, 1;
	add.s32 	%r967, %r260, %r966;
	add.s32 	%r968, %r967, %r259;
	add.s32 	%r969, %r968, %r962;
	add.s32 	%r269, %r969, -1894007588;
	shf.l.wrap.b32 	%r271, %r261, %r261, 30;
	shf.l.wrap.b32 	%r970, %r269, %r269, 5;
	// begin inline asm
	lop3.b32 %r264, %r265, %r271, %r267, 232;
	// end inline asm
	xor.b32  	%r971, %r910, %r950;
	xor.b32  	%r972, %r971, %r862;
	xor.b32  	%r973, %r972, %r846;
	shf.l.wrap.b32 	%r974, %r973, %r973, 1;
	add.s32 	%r975, %r264, %r974;
	add.s32 	%r976, %r975, %r263;
	add.s32 	%r977, %r976, %r970;
	add.s32 	%r273, %r977, -1894007588;
	shf.l.wrap.b32 	%r275, %r265, %r265, 30;
	shf.l.wrap.b32 	%r978, %r273, %r273, 5;
	// begin inline asm
	lop3.b32 %r268, %r269, %r275, %r271, 232;
	// end inline asm
	xor.b32  	%r979, %r918, %r958;
	xor.b32  	%r980, %r979, %r870;
	xor.b32  	%r981, %r980, %r854;
	shf.l.wrap.b32 	%r982, %r981, %r981, 1;
	add.s32 	%r983, %r268, %r982;
	add.s32 	%r984, %r983, %r267;
	add.s32 	%r985, %r984, %r978;
	add.s32 	%r277, %r985, -1894007588;
	shf.l.wrap.b32 	%r279, %r269, %r269, 30;
	shf.l.wrap.b32 	%r986, %r277, %r277, 5;
	// begin inline asm
	lop3.b32 %r272, %r273, %r279, %r275, 232;
	// end inline asm
	xor.b32  	%r987, %r926, %r966;
	xor.b32  	%r988, %r987, %r878;
	xor.b32  	%r989, %r988, %r862;
	shf.l.wrap.b32 	%r990, %r989, %r989, 1;
	add.s32 	%r991, %r272, %r990;
	add.s32 	%r992, %r991, %r271;
	add.s32 	%r993, %r992, %r986;
	add.s32 	%r281, %r993, -1894007588;
	shf.l.wrap.b32 	%r283, %r273, %r273, 30;
	shf.l.wrap.b32 	%r994, %r281, %r281, 5;
	// begin inline asm
	lop3.b32 %r276, %r277, %r283, %r279, 232;
	// end inline asm
	xor.b32  	%r995, %r934, %r974;
	xor.b32  	%r996, %r995, %r886;
	xor.b32  	%r997, %r996, %r870;
	shf.l.wrap.b32 	%r998, %r997, %r997, 1;
	add.s32 	%r999, %r276, %r998;
	add.s32 	%r1000, %r999, %r275;
	add.s32 	%r1001, %r1000, %r994;
	add.s32 	%r285, %r1001, -1894007588;
	shf.l.wrap.b32 	%r287, %r277, %r277, 30;
	shf.l.wrap.b32 	%r1002, %r285, %r285, 5;
	// begin inline asm
	lop3.b32 %r280, %r281, %r287, %r283, 232;
	// end inline asm
	xor.b32  	%r1003, %r942, %r982;
	xor.b32  	%r1004, %r1003, %r894;
	xor.b32  	%r1005, %r1004, %r878;
	shf.l.wrap.b32 	%r1006, %r1005, %r1005, 1;
	add.s32 	%r1007, %r280, %r1006;
	add.s32 	%r1008, %r1007, %r279;
	add.s32 	%r1009, %r1008, %r1002;
	add.s32 	%r289, %r1009, -1894007588;
	shf.l.wrap.b32 	%r291, %r281, %r281, 30;
	shf.l.wrap.b32 	%r1010, %r289, %r289, 5;
	// begin inline asm
	lop3.b32 %r284, %r285, %r291, %r287, 232;
	// end inline asm
	xor.b32  	%r1011, %r950, %r990;
	xor.b32  	%r1012, %r1011, %r902;
	xor.b32  	%r1013, %r1012, %r886;
	shf.l.wrap.b32 	%r1014, %r1013, %r1013, 1;
	add.s32 	%r1015, %r284, %r1014;
	add.s32 	%r1016, %r1015, %r283;
	add.s32 	%r1017, %r1016, %r1010;
	add.s32 	%r293, %r1017, -1894007588;
	shf.l.wrap.b32 	%r295, %r285, %r285, 30;
	shf.l.wrap.b32 	%r1018, %r293, %r293, 5;
	// begin inline asm
	lop3.b32 %r288, %r289, %r295, %r291, 232;
	// end inline asm
	xor.b32  	%r1019, %r958, %r998;
	xor.b32  	%r1020, %r1019, %r910;
	xor.b32  	%r1021, %r1020, %r894;
	shf.l.wrap.b32 	%r1022, %r1021, %r1021, 1;
	add.s32 	%r1023, %r288, %r1022;
	add.s32 	%r1024, %r1023, %r287;
	add.s32 	%r1025, %r1024, %r1018;
	add.s32 	%r297, %r1025, -1894007588;
	shf.l.wrap.b32 	%r299, %r289, %r289, 30;
	shf.l.wrap.b32 	%r1026, %r297, %r297, 5;
	// begin inline asm
	lop3.b32 %r292, %r293, %r299, %r295, 232;
	// end inline asm
	xor.b32  	%r1027, %r966, %r1006;
	xor.b32  	%r1028, %r1027, %r918;
	xor.b32  	%r1029, %r1028, %r902;
	shf.l.wrap.b32 	%r1030, %r1029, %r1029, 1;
	add.s32 	%r1031, %r292, %r1030;
	add.s32 	%r1032, %r1031, %r291;
	add.s32 	%r1033, %r1032, %r1026;
	add.s32 	%r301, %r1033, -1894007588;
	shf.l.wrap.b32 	%r303, %r293, %r293, 30;
	shf.l.wrap.b32 	%r1034, %r301, %r301, 5;
	// begin inline asm
	lop3.b32 %r296, %r297, %r303, %r299, 232;
	// end inline asm
	xor.b32  	%r1035, %r974, %r1014;
	xor.b32  	%r1036, %r1035, %r926;
	xor.b32  	%r1037, %r1036, %r910;
	shf.l.wrap.b32 	%r1038, %r1037, %r1037, 1;
	add.s32 	%r1039, %r296, %r1038;
	add.s32 	%r1040, %r1039, %r295;
	add.s32 	%r1041, %r1040, %r1034;
	add.s32 	%r305, %r1041, -1894007588;
	shf.l.wrap.b32 	%r307, %r297, %r297, 30;
	shf.l.wrap.b32 	%r1042, %r305, %r305, 5;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 232;
	// end inline asm
	xor.b32  	%r1043, %r982, %r1022;
	xor.b32  	%r1044, %r1043, %r934;
	xor.b32  	%r1045, %r1044, %r918;
	shf.l.wrap.b32 	%r1046, %r1045, %r1045, 1;
	add.s32 	%r1047, %r300, %r1046;
	add.s32 	%r1048, %r1047, %r299;
	add.s32 	%r1049, %r1048, %r1042;
	add.s32 	%r309, %r1049, -1894007588;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	shf.l.wrap.b32 	%r1050, %r309, %r309, 5;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 232;
	// end inline asm
	xor.b32  	%r1051, %r990, %r1030;
	xor.b32  	%r1052, %r1051, %r942;
	xor.b32  	%r1053, %r1052, %r926;
	shf.l.wrap.b32 	%r1054, %r1053, %r1053, 1;
	add.s32 	%r1055, %r304, %r1054;
	add.s32 	%r1056, %r1055, %r303;
	add.s32 	%r1057, %r1056, %r1050;
	add.s32 	%r313, %r1057, -1894007588;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	shf.l.wrap.b32 	%r1058, %r313, %r313, 5;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 232;
	// end inline asm
	xor.b32  	%r1059, %r998, %r1038;
	xor.b32  	%r1060, %r1059, %r950;
	xor.b32  	%r1061, %r1060, %r934;
	shf.l.wrap.b32 	%r1062, %r1061, %r1061, 1;
	add.s32 	%r1063, %r308, %r1062;
	add.s32 	%r1064, %r1063, %r307;
	add.s32 	%r1065, %r1064, %r1058;
	add.s32 	%r317, %r1065, -1894007588;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r1066, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 232;
	// end inline asm
	xor.b32  	%r1067, %r1006, %r1046;
	xor.b32  	%r1068, %r1067, %r958;
	xor.b32  	%r1069, %r1068, %r942;
	shf.l.wrap.b32 	%r1070, %r1069, %r1069, 1;
	add.s32 	%r1071, %r312, %r1070;
	add.s32 	%r1072, %r1071, %r311;
	add.s32 	%r1073, %r1072, %r1066;
	add.s32 	%r321, %r1073, -1894007588;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r1074, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 232;
	// end inline asm
	xor.b32  	%r1075, %r1014, %r1054;
	xor.b32  	%r1076, %r1075, %r966;
	xor.b32  	%r1077, %r1076, %r950;
	shf.l.wrap.b32 	%r1078, %r1077, %r1077, 1;
	add.s32 	%r1079, %r316, %r1078;
	add.s32 	%r1080, %r1079, %r315;
	add.s32 	%r1081, %r1080, %r1074;
	add.s32 	%r325, %r1081, -1894007588;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r1082, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 150;
	// end inline asm
	xor.b32  	%r1083, %r1022, %r1062;
	xor.b32  	%r1084, %r1083, %r974;
	xor.b32  	%r1085, %r1084, %r958;
	shf.l.wrap.b32 	%r1086, %r1085, %r1085, 1;
	add.s32 	%r1087, %r320, %r1086;
	add.s32 	%r1088, %r1087, %r319;
	add.s32 	%r1089, %r1088, %r1082;
	add.s32 	%r329, %r1089, -899497514;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r1090, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 150;
	// end inline asm
	xor.b32  	%r1091, %r1030, %r1070;
	xor.b32  	%r1092, %r1091, %r982;
	xor.b32  	%r1093, %r1092, %r966;
	shf.l.wrap.b32 	%r1094, %r1093, %r1093, 1;
	add.s32 	%r1095, %r324, %r1094;
	add.s32 	%r1096, %r1095, %r323;
	add.s32 	%r1097, %r1096, %r1090;
	add.s32 	%r333, %r1097, -899497514;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r1098, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 150;
	// end inline asm
	xor.b32  	%r1099, %r1038, %r1078;
	xor.b32  	%r1100, %r1099, %r990;
	xor.b32  	%r1101, %r1100, %r974;
	shf.l.wrap.b32 	%r1102, %r1101, %r1101, 1;
	add.s32 	%r1103, %r328, %r1102;
	add.s32 	%r1104, %r1103, %r327;
	add.s32 	%r1105, %r1104, %r1098;
	add.s32 	%r337, %r1105, -899497514;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r1106, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 150;
	// end inline asm
	xor.b32  	%r1107, %r1046, %r1086;
	xor.b32  	%r1108, %r1107, %r998;
	xor.b32  	%r1109, %r1108, %r982;
	shf.l.wrap.b32 	%r1110, %r1109, %r1109, 1;
	add.s32 	%r1111, %r332, %r1110;
	add.s32 	%r1112, %r1111, %r331;
	add.s32 	%r1113, %r1112, %r1106;
	add.s32 	%r341, %r1113, -899497514;
	shf.l.wrap.b32 	%r343, %r333, %r333, 30;
	shf.l.wrap.b32 	%r1114, %r341, %r341, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r343, %r339, 150;
	// end inline asm
	xor.b32  	%r1115, %r1054, %r1094;
	xor.b32  	%r1116, %r1115, %r1006;
	xor.b32  	%r1117, %r1116, %r990;
	shf.l.wrap.b32 	%r1118, %r1117, %r1117, 1;
	add.s32 	%r1119, %r336, %r1118;
	add.s32 	%r1120, %r1119, %r335;
	add.s32 	%r1121, %r1120, %r1114;
	add.s32 	%r345, %r1121, -899497514;
	shf.l.wrap.b32 	%r347, %r337, %r337, 30;
	shf.l.wrap.b32 	%r1122, %r345, %r345, 5;
	// begin inline asm
	lop3.b32 %r340, %r341, %r347, %r343, 150;
	// end inline asm
	xor.b32  	%r1123, %r1062, %r1102;
	xor.b32  	%r1124, %r1123, %r1014;
	xor.b32  	%r1125, %r1124, %r998;
	shf.l.wrap.b32 	%r1126, %r1125, %r1125, 1;
	add.s32 	%r1127, %r340, %r1126;
	add.s32 	%r1128, %r1127, %r339;
	add.s32 	%r1129, %r1128, %r1122;
	add.s32 	%r349, %r1129, -899497514;
	shf.l.wrap.b32 	%r351, %r341, %r341, 30;
	shf.l.wrap.b32 	%r1130, %r349, %r349, 5;
	// begin inline asm
	lop3.b32 %r344, %r345, %r351, %r347, 150;
	// end inline asm
	xor.b32  	%r1131, %r1070, %r1110;
	xor.b32  	%r1132, %r1131, %r1022;
	xor.b32  	%r1133, %r1132, %r1006;
	shf.l.wrap.b32 	%r1134, %r1133, %r1133, 1;
	add.s32 	%r1135, %r344, %r343;
	add.s32 	%r1136, %r1135, %r1134;
	add.s32 	%r1137, %r1136, %r1130;
	add.s32 	%r353, %r1137, -899497514;
	shf.l.wrap.b32 	%r355, %r345, %r345, 30;
	shf.l.wrap.b32 	%r1138, %r353, %r353, 5;
	// begin inline asm
	lop3.b32 %r348, %r349, %r355, %r351, 150;
	// end inline asm
	xor.b32  	%r1139, %r1078, %r1118;
	xor.b32  	%r1140, %r1139, %r1030;
	xor.b32  	%r1141, %r1140, %r1014;
	shf.l.wrap.b32 	%r1142, %r1141, %r1141, 1;
	add.s32 	%r1143, %r348, %r347;
	add.s32 	%r1144, %r1143, %r1142;
	add.s32 	%r1145, %r1144, %r1138;
	add.s32 	%r357, %r1145, -899497514;
	shf.l.wrap.b32 	%r359, %r349, %r349, 30;
	shf.l.wrap.b32 	%r1146, %r357, %r357, 5;
	// begin inline asm
	lop3.b32 %r352, %r353, %r359, %r355, 150;
	// end inline asm
	xor.b32  	%r1147, %r1086, %r1126;
	xor.b32  	%r1148, %r1147, %r1038;
	xor.b32  	%r1149, %r1148, %r1022;
	shf.l.wrap.b32 	%r1150, %r1149, %r1149, 1;
	add.s32 	%r1151, %r352, %r351;
	add.s32 	%r1152, %r1151, %r1150;
	add.s32 	%r1153, %r1152, %r1146;
	add.s32 	%r361, %r1153, -899497514;
	shf.l.wrap.b32 	%r363, %r353, %r353, 30;
	shf.l.wrap.b32 	%r1154, %r361, %r361, 5;
	// begin inline asm
	lop3.b32 %r356, %r357, %r363, %r359, 150;
	// end inline asm
	xor.b32  	%r1155, %r1094, %r1134;
	xor.b32  	%r1156, %r1155, %r1046;
	xor.b32  	%r1157, %r1156, %r1030;
	shf.l.wrap.b32 	%r1158, %r1157, %r1157, 1;
	add.s32 	%r1159, %r356, %r355;
	add.s32 	%r1160, %r1159, %r1158;
	add.s32 	%r1161, %r1160, %r1154;
	add.s32 	%r365, %r1161, -899497514;
	shf.l.wrap.b32 	%r367, %r357, %r357, 30;
	shf.l.wrap.b32 	%r1162, %r365, %r365, 5;
	// begin inline asm
	lop3.b32 %r360, %r361, %r367, %r363, 150;
	// end inline asm
	xor.b32  	%r1163, %r1102, %r1142;
	xor.b32  	%r1164, %r1163, %r1054;
	xor.b32  	%r1165, %r1164, %r1038;
	shf.l.wrap.b32 	%r1166, %r1165, %r1165, 1;
	add.s32 	%r1167, %r360, %r359;
	add.s32 	%r1168, %r1167, %r1166;
	add.s32 	%r1169, %r1168, %r1162;
	add.s32 	%r369, %r1169, -899497514;
	shf.l.wrap.b32 	%r371, %r361, %r361, 30;
	shf.l.wrap.b32 	%r1170, %r369, %r369, 5;
	// begin inline asm
	lop3.b32 %r364, %r365, %r371, %r367, 150;
	// end inline asm
	xor.b32  	%r1171, %r1110, %r1150;
	xor.b32  	%r1172, %r1171, %r1062;
	xor.b32  	%r1173, %r1172, %r1046;
	shf.l.wrap.b32 	%r1174, %r1173, %r1173, 1;
	add.s32 	%r1175, %r364, %r363;
	add.s32 	%r1176, %r1175, %r1174;
	add.s32 	%r1177, %r1176, %r1170;
	add.s32 	%r373, %r1177, -899497514;
	shf.l.wrap.b32 	%r375, %r365, %r365, 30;
	shf.l.wrap.b32 	%r1178, %r373, %r373, 5;
	// begin inline asm
	lop3.b32 %r368, %r369, %r375, %r371, 150;
	// end inline asm
	xor.b32  	%r1179, %r1118, %r1158;
	xor.b32  	%r1180, %r1179, %r1070;
	xor.b32  	%r1181, %r1180, %r1054;
	shf.l.wrap.b32 	%r1182, %r1181, %r1181, 1;
	add.s32 	%r1183, %r367, %r368;
	add.s32 	%r1184, %r1183, %r1182;
	add.s32 	%r1185, %r1184, %r1178;
	add.s32 	%r377, %r1185, -899497514;
	shf.l.wrap.b32 	%r379, %r369, %r369, 30;
	shf.l.wrap.b32 	%r1186, %r377, %r377, 5;
	// begin inline asm
	lop3.b32 %r372, %r373, %r379, %r375, 150;
	// end inline asm
	xor.b32  	%r1187, %r1126, %r1166;
	xor.b32  	%r1188, %r1187, %r1078;
	xor.b32  	%r1189, %r1188, %r1062;
	shf.l.wrap.b32 	%r1190, %r1189, %r1189, 1;
	add.s32 	%r1191, %r371, %r372;
	add.s32 	%r1192, %r1191, %r1190;
	add.s32 	%r1193, %r1192, %r1186;
	add.s32 	%r381, %r1193, -899497514;
	shf.l.wrap.b32 	%r383, %r373, %r373, 30;
	shf.l.wrap.b32 	%r1194, %r381, %r381, 5;
	// begin inline asm
	lop3.b32 %r376, %r377, %r383, %r379, 150;
	// end inline asm
	xor.b32  	%r1195, %r1134, %r1174;
	xor.b32  	%r1196, %r1195, %r1086;
	xor.b32  	%r1197, %r1196, %r1070;
	shf.l.wrap.b32 	%r1198, %r1197, %r1197, 1;
	add.s32 	%r1199, %r375, %r376;
	add.s32 	%r1200, %r1199, %r1198;
	add.s32 	%r1201, %r1200, %r1194;
	add.s32 	%r385, %r1201, -899497514;
	shf.l.wrap.b32 	%r387, %r377, %r377, 30;
	shf.l.wrap.b32 	%r1202, %r385, %r385, 5;
	// begin inline asm
	lop3.b32 %r380, %r381, %r387, %r383, 150;
	// end inline asm
	xor.b32  	%r1203, %r1142, %r1182;
	xor.b32  	%r1204, %r1203, %r1094;
	xor.b32  	%r1205, %r1204, %r1078;
	shf.l.wrap.b32 	%r1206, %r1205, %r1205, 1;
	add.s32 	%r1207, %r379, %r380;
	add.s32 	%r1208, %r1207, %r1206;
	add.s32 	%r1209, %r1208, %r1202;
	add.s32 	%r389, %r1209, -899497514;
	shf.l.wrap.b32 	%r391, %r381, %r381, 30;
	shf.l.wrap.b32 	%r1210, %r389, %r389, 5;
	// begin inline asm
	lop3.b32 %r384, %r385, %r391, %r387, 150;
	// end inline asm
	xor.b32  	%r1211, %r1150, %r1190;
	xor.b32  	%r1212, %r1211, %r1102;
	xor.b32  	%r1213, %r1212, %r1086;
	shf.l.wrap.b32 	%r1214, %r1213, %r1213, 1;
	add.s32 	%r1215, %r383, %r384;
	add.s32 	%r1216, %r1215, %r1214;
	add.s32 	%r1217, %r1216, %r1210;
	add.s32 	%r393, %r1217, -899497514;
	shf.l.wrap.b32 	%r395, %r385, %r385, 30;
	shf.l.wrap.b32 	%r1218, %r393, %r393, 5;
	// begin inline asm
	lop3.b32 %r388, %r389, %r395, %r391, 150;
	// end inline asm
	xor.b32  	%r1219, %r1158, %r1198;
	xor.b32  	%r1220, %r1219, %r1110;
	xor.b32  	%r1221, %r1220, %r1094;
	shf.l.wrap.b32 	%r1222, %r1221, %r1221, 1;
	add.s32 	%r1223, %r387, %r388;
	add.s32 	%r1224, %r1223, %r1222;
	add.s32 	%r1225, %r1224, %r1218;
	add.s32 	%r397, %r1225, -899497514;
	shf.l.wrap.b32 	%r399, %r389, %r389, 30;
	shf.l.wrap.b32 	%r1226, %r397, %r397, 5;
	// begin inline asm
	lop3.b32 %r392, %r393, %r399, %r395, 150;
	// end inline asm
	xor.b32  	%r1227, %r1166, %r1206;
	xor.b32  	%r1228, %r1227, %r1118;
	xor.b32  	%r1229, %r1228, %r1102;
	shf.l.wrap.b32 	%r1230, %r1229, %r1229, 1;
	add.s32 	%r1231, %r391, %r392;
	add.s32 	%r1232, %r1231, %r1230;
	add.s32 	%r1233, %r1232, %r1226;
	add.s32 	%r1234, %r1233, -899497514;
	shf.l.wrap.b32 	%r398, %r393, %r393, 30;
	shf.l.wrap.b32 	%r1235, %r1234, %r1234, 5;
	// begin inline asm
	lop3.b32 %r396, %r397, %r398, %r399, 150;
	// end inline asm
	xor.b32  	%r1236, %r1174, %r1214;
	xor.b32  	%r1237, %r1236, %r1126;
	xor.b32  	%r1238, %r1237, %r1110;
	shf.l.wrap.b32 	%r1239, %r1238, %r1238, 1;
	shf.l.wrap.b32 	%r1240, %r397, %r397, 30;
	add.s32 	%r1241, %r22, %r395;
	add.s32 	%r1242, %r1241, %r396;
	add.s32 	%r1243, %r1242, %r1239;
	add.s32 	%r1244, %r1243, %r1235;
	add.s32 	%r1245, %r1234, %r13;
	add.s32 	%r1246, %r1240, %r12;
	add.s32 	%r1247, %r398, %r11;
	add.s32 	%r1248, %r399, %r14;
	add.s32 	%r401, %r27, %r1244;
	shf.l.wrap.b32 	%r1249, %r401, %r401, 5;
	add.s32 	%r1250, %r29, %r1245;
	add.s32 	%r405, %r1250, %r1249;
	shf.l.wrap.b32 	%r1251, %r405, %r405, 5;
	// begin inline asm
	lop3.b32 %r400, %r401, %r30, %r71, 202;
	// end inline asm
	add.s32 	%r1252, %r31, %r400;
	add.s32 	%r1253, %r1252, %r1246;
	add.s32 	%r409, %r1253, %r1251;
	shf.l.wrap.b32 	%r411, %r401, %r401, 30;
	shf.l.wrap.b32 	%r1254, %r409, %r409, 5;
	// begin inline asm
	lop3.b32 %r404, %r405, %r411, %r30, 202;
	// end inline asm
	add.s32 	%r1255, %r32, %r404;
	add.s32 	%r1256, %r1255, %r1247;
	add.s32 	%r413, %r1256, %r1254;
	shf.l.wrap.b32 	%r415, %r405, %r405, 30;
	shf.l.wrap.b32 	%r1257, %r413, %r413, 5;
	// begin inline asm
	lop3.b32 %r408, %r409, %r415, %r411, 202;
	// end inline asm
	add.s32 	%r1258, %r33, %r408;
	add.s32 	%r1259, %r1258, %r1248;
	add.s32 	%r417, %r1259, %r1257;
	shf.l.wrap.b32 	%r419, %r409, %r409, 30;
	shf.l.wrap.b32 	%r1260, %r417, %r417, 5;
	// begin inline asm
	lop3.b32 %r412, %r413, %r419, %r415, 202;
	// end inline asm
	add.s32 	%r1261, %r411, %r412;
	add.s32 	%r1262, %r1261, 1518500249;
	xor.b32  	%r1263, %r1262, -2147483648;
	add.s32 	%r421, %r1263, %r1260;
	shf.l.wrap.b32 	%r423, %r413, %r413, 30;
	shf.l.wrap.b32 	%r1264, %r421, %r421, 5;
	// begin inline asm
	lop3.b32 %r416, %r417, %r423, %r419, 202;
	// end inline asm
	add.s32 	%r1265, %r415, %r416;
	add.s32 	%r1266, %r1265, %r1264;
	add.s32 	%r425, %r1266, 1518500249;
	shf.l.wrap.b32 	%r427, %r417, %r417, 30;
	shf.l.wrap.b32 	%r1267, %r425, %r425, 5;
	// begin inline asm
	lop3.b32 %r420, %r421, %r427, %r423, 202;
	// end inline asm
	add.s32 	%r1268, %r420, %r419;
	add.s32 	%r1269, %r1268, %r1267;
	add.s32 	%r429, %r1269, 1518500249;
	shf.l.wrap.b32 	%r431, %r421, %r421, 30;
	shf.l.wrap.b32 	%r1270, %r429, %r429, 5;
	// begin inline asm
	lop3.b32 %r424, %r425, %r431, %r427, 202;
	// end inline asm
	add.s32 	%r1271, %r424, %r423;
	add.s32 	%r1272, %r1271, %r1270;
	add.s32 	%r433, %r1272, 1518500249;
	shf.l.wrap.b32 	%r435, %r425, %r425, 30;
	shf.l.wrap.b32 	%r1273, %r433, %r433, 5;
	// begin inline asm
	lop3.b32 %r428, %r429, %r435, %r431, 202;
	// end inline asm
	add.s32 	%r1274, %r428, %r427;
	add.s32 	%r1275, %r1274, %r1273;
	add.s32 	%r437, %r1275, 1518500249;
	shf.l.wrap.b32 	%r439, %r429, %r429, 30;
	shf.l.wrap.b32 	%r1276, %r437, %r437, 5;
	// begin inline asm
	lop3.b32 %r432, %r433, %r439, %r435, 202;
	// end inline asm
	add.s32 	%r1277, %r432, %r431;
	add.s32 	%r1278, %r1277, %r1276;
	add.s32 	%r441, %r1278, 1518500249;
	shf.l.wrap.b32 	%r443, %r433, %r433, 30;
	shf.l.wrap.b32 	%r1279, %r441, %r441, 5;
	// begin inline asm
	lop3.b32 %r436, %r437, %r443, %r439, 202;
	// end inline asm
	add.s32 	%r1280, %r436, %r435;
	add.s32 	%r1281, %r1280, %r1279;
	add.s32 	%r445, %r1281, 1518500249;
	shf.l.wrap.b32 	%r447, %r437, %r437, 30;
	shf.l.wrap.b32 	%r1282, %r445, %r445, 5;
	// begin inline asm
	lop3.b32 %r440, %r441, %r447, %r443, 202;
	// end inline asm
	add.s32 	%r1283, %r440, %r439;
	add.s32 	%r1284, %r1283, %r1282;
	add.s32 	%r449, %r1284, 1518500249;
	shf.l.wrap.b32 	%r451, %r441, %r441, 30;
	shf.l.wrap.b32 	%r1285, %r449, %r449, 5;
	// begin inline asm
	lop3.b32 %r444, %r445, %r451, %r447, 202;
	// end inline asm
	add.s32 	%r1286, %r444, %r443;
	add.s32 	%r1287, %r1286, %r1285;
	add.s32 	%r453, %r1287, 1518500249;
	shf.l.wrap.b32 	%r455, %r445, %r445, 30;
	shf.l.wrap.b32 	%r1288, %r453, %r453, 5;
	// begin inline asm
	lop3.b32 %r448, %r449, %r455, %r451, 202;
	// end inline asm
	add.s32 	%r1289, %r448, %r447;
	add.s32 	%r1290, %r1289, %r1288;
	add.s32 	%r457, %r1290, 1518500249;
	shf.l.wrap.b32 	%r459, %r449, %r449, 30;
	shf.l.wrap.b32 	%r1291, %r457, %r457, 5;
	// begin inline asm
	lop3.b32 %r452, %r453, %r459, %r455, 202;
	// end inline asm
	add.s32 	%r1292, %r452, %r451;
	add.s32 	%r1293, %r1292, %r1291;
	add.s32 	%r461, %r1293, 1518500921;
	shf.l.wrap.b32 	%r463, %r453, %r453, 30;
	shf.l.wrap.b32 	%r1294, %r461, %r461, 5;
	// begin inline asm
	lop3.b32 %r456, %r457, %r463, %r459, 202;
	// end inline asm
	xor.b32  	%r1295, %r1244, %r1246;
	shf.l.wrap.b32 	%r1296, %r1295, %r1295, 1;
	add.s32 	%r1297, %r456, %r1296;
	add.s32 	%r1298, %r1297, %r455;
	add.s32 	%r1299, %r1298, %r1294;
	add.s32 	%r465, %r1299, 1518500249;
	shf.l.wrap.b32 	%r467, %r457, %r457, 30;
	shf.l.wrap.b32 	%r1300, %r465, %r465, 5;
	// begin inline asm
	lop3.b32 %r460, %r461, %r467, %r463, 202;
	// end inline asm
	xor.b32  	%r1301, %r1245, %r1247;
	shf.l.wrap.b32 	%r1302, %r1301, %r1301, 1;
	add.s32 	%r1303, %r460, %r1302;
	add.s32 	%r1304, %r1303, %r459;
	add.s32 	%r1305, %r1304, %r1300;
	add.s32 	%r469, %r1305, 1518500249;
	shf.l.wrap.b32 	%r471, %r461, %r461, 30;
	shf.l.wrap.b32 	%r1306, %r469, %r469, 5;
	// begin inline asm
	lop3.b32 %r464, %r465, %r471, %r467, 202;
	// end inline asm
	xor.b32  	%r1307, %r1248, %r1246;
	xor.b32  	%r1308, %r1307, 672;
	shf.l.wrap.b32 	%r1309, %r1308, %r1308, 1;
	add.s32 	%r1310, %r464, %r1309;
	add.s32 	%r1311, %r1310, %r463;
	add.s32 	%r1312, %r1311, %r1306;
	add.s32 	%r473, %r1312, 1518500249;
	shf.l.wrap.b32 	%r475, %r465, %r465, 30;
	shf.l.wrap.b32 	%r1313, %r473, %r473, 5;
	// begin inline asm
	lop3.b32 %r468, %r469, %r475, %r471, 202;
	// end inline asm
	xor.b32  	%r1314, %r1296, %r1247;
	xor.b32  	%r1315, %r1314, -2147483648;
	shf.l.wrap.b32 	%r1316, %r1315, %r1315, 1;
	add.s32 	%r1317, %r468, %r1316;
	add.s32 	%r1318, %r1317, %r467;
	add.s32 	%r1319, %r1318, %r1313;
	add.s32 	%r477, %r1319, 1518500249;
	shf.l.wrap.b32 	%r479, %r469, %r469, 30;
	shf.l.wrap.b32 	%r1320, %r477, %r477, 5;
	// begin inline asm
	lop3.b32 %r472, %r473, %r479, %r475, 150;
	// end inline asm
	xor.b32  	%r1321, %r1248, %r1302;
	shf.l.wrap.b32 	%r1322, %r1321, %r1321, 1;
	add.s32 	%r1323, %r472, %r1322;
	add.s32 	%r1324, %r1323, %r471;
	add.s32 	%r1325, %r1324, %r1320;
	add.s32 	%r481, %r1325, 1859775393;
	shf.l.wrap.b32 	%r483, %r473, %r473, 30;
	shf.l.wrap.b32 	%r1326, %r481, %r481, 5;
	// begin inline asm
	lop3.b32 %r476, %r477, %r483, %r479, 150;
	// end inline asm
	xor.b32  	%r1327, %r1309, -2147483648;
	shf.l.wrap.b32 	%r1328, %r1327, %r1327, 1;
	add.s32 	%r1329, %r476, %r1328;
	add.s32 	%r1330, %r1329, %r475;
	add.s32 	%r1331, %r1330, %r1326;
	add.s32 	%r485, %r1331, 1859775393;
	shf.l.wrap.b32 	%r487, %r477, %r477, 30;
	shf.l.wrap.b32 	%r1332, %r485, %r485, 5;
	// begin inline asm
	lop3.b32 %r480, %r481, %r487, %r483, 150;
	// end inline asm
	shf.l.wrap.b32 	%r1333, %r1316, %r1316, 1;
	add.s32 	%r1334, %r480, %r1333;
	add.s32 	%r1335, %r1334, %r479;
	add.s32 	%r1336, %r1335, %r1332;
	add.s32 	%r489, %r1336, 1859775393;
	shf.l.wrap.b32 	%r491, %r481, %r481, 30;
	shf.l.wrap.b32 	%r1337, %r489, %r489, 5;
	// begin inline asm
	lop3.b32 %r484, %r485, %r491, %r487, 150;
	// end inline asm
	xor.b32  	%r1338, %r1322, 672;
	shf.l.wrap.b32 	%r1339, %r1338, %r1338, 1;
	add.s32 	%r1340, %r484, %r1339;
	add.s32 	%r1341, %r1340, %r483;
	add.s32 	%r1342, %r1341, %r1337;
	add.s32 	%r493, %r1342, 1859775393;
	shf.l.wrap.b32 	%r495, %r485, %r485, 30;
	shf.l.wrap.b32 	%r1343, %r493, %r493, 5;
	// begin inline asm
	lop3.b32 %r488, %r489, %r495, %r491, 150;
	// end inline asm
	xor.b32  	%r1344, %r1296, %r1328;
	shf.l.wrap.b32 	%r1345, %r1344, %r1344, 1;
	add.s32 	%r1346, %r488, %r1345;
	add.s32 	%r1347, %r1346, %r487;
	add.s32 	%r1348, %r1347, %r1343;
	add.s32 	%r497, %r1348, 1859775393;
	shf.l.wrap.b32 	%r499, %r489, %r489, 30;
	shf.l.wrap.b32 	%r1349, %r497, %r497, 5;
	// begin inline asm
	lop3.b32 %r492, %r493, %r499, %r495, 150;
	// end inline asm
	xor.b32  	%r1350, %r1302, %r1333;
	shf.l.wrap.b32 	%r1351, %r1350, %r1350, 1;
	add.s32 	%r1352, %r492, %r1351;
	add.s32 	%r1353, %r1352, %r491;
	add.s32 	%r1354, %r1353, %r1349;
	add.s32 	%r501, %r1354, 1859775393;
	shf.l.wrap.b32 	%r503, %r493, %r493, 30;
	shf.l.wrap.b32 	%r1355, %r501, %r501, 5;
	// begin inline asm
	lop3.b32 %r496, %r497, %r503, %r499, 150;
	// end inline asm
	xor.b32  	%r1356, %r1309, %r1339;
	shf.l.wrap.b32 	%r1357, %r1356, %r1356, 1;
	add.s32 	%r1358, %r496, %r1357;
	add.s32 	%r1359, %r1358, %r495;
	add.s32 	%r1360, %r1359, %r1355;
	add.s32 	%r505, %r1360, 1859775393;
	shf.l.wrap.b32 	%r507, %r497, %r497, 30;
	shf.l.wrap.b32 	%r1361, %r505, %r505, 5;
	// begin inline asm
	lop3.b32 %r500, %r501, %r507, %r503, 150;
	// end inline asm
	xor.b32  	%r1362, %r1316, %r1345;
	shf.l.wrap.b32 	%r1363, %r1362, %r1362, 1;
	add.s32 	%r1364, %r500, %r1363;
	add.s32 	%r1365, %r1364, %r499;
	add.s32 	%r1366, %r1365, %r1361;
	add.s32 	%r509, %r1366, 1859775393;
	shf.l.wrap.b32 	%r511, %r501, %r501, 30;
	shf.l.wrap.b32 	%r1367, %r509, %r509, 5;
	// begin inline asm
	lop3.b32 %r504, %r505, %r511, %r507, 150;
	// end inline asm
	xor.b32  	%r1368, %r1322, %r1351;
	shf.l.wrap.b32 	%r1369, %r1368, %r1368, 1;
	add.s32 	%r1370, %r504, %r1369;
	add.s32 	%r1371, %r1370, %r503;
	add.s32 	%r1372, %r1371, %r1367;
	add.s32 	%r513, %r1372, 1859775393;
	shf.l.wrap.b32 	%r515, %r505, %r505, 30;
	shf.l.wrap.b32 	%r1373, %r513, %r513, 5;
	// begin inline asm
	lop3.b32 %r508, %r509, %r515, %r511, 150;
	// end inline asm
	xor.b32  	%r1374, %r1328, %r1357;
	xor.b32  	%r1375, %r1374, 672;
	shf.l.wrap.b32 	%r1376, %r1375, %r1375, 1;
	add.s32 	%r1377, %r508, %r1376;
	add.s32 	%r1378, %r1377, %r507;
	add.s32 	%r1379, %r1378, %r1373;
	add.s32 	%r517, %r1379, 1859775393;
	shf.l.wrap.b32 	%r519, %r509, %r509, 30;
	shf.l.wrap.b32 	%r1380, %r517, %r517, 5;
	// begin inline asm
	lop3.b32 %r512, %r513, %r519, %r515, 150;
	// end inline asm
	xor.b32  	%r1381, %r1333, %r1363;
	xor.b32  	%r1382, %r1381, %r1296;
	shf.l.wrap.b32 	%r1383, %r1382, %r1382, 1;
	add.s32 	%r1384, %r512, %r1383;
	add.s32 	%r1385, %r1384, %r511;
	add.s32 	%r1386, %r1385, %r1380;
	add.s32 	%r521, %r1386, 1859775393;
	shf.l.wrap.b32 	%r523, %r513, %r513, 30;
	shf.l.wrap.b32 	%r1387, %r521, %r521, 5;
	// begin inline asm
	lop3.b32 %r516, %r517, %r523, %r519, 150;
	// end inline asm
	xor.b32  	%r1388, %r1339, %r1369;
	xor.b32  	%r1389, %r1388, %r1302;
	xor.b32  	%r1390, %r1389, 672;
	shf.l.wrap.b32 	%r1391, %r1390, %r1390, 1;
	add.s32 	%r1392, %r516, %r1391;
	add.s32 	%r1393, %r1392, %r515;
	add.s32 	%r1394, %r1393, %r1387;
	add.s32 	%r525, %r1394, 1859775393;
	shf.l.wrap.b32 	%r527, %r517, %r517, 30;
	shf.l.wrap.b32 	%r1395, %r525, %r525, 5;
	// begin inline asm
	lop3.b32 %r520, %r521, %r527, %r523, 150;
	// end inline asm
	xor.b32  	%r1396, %r1345, %r1376;
	xor.b32  	%r1397, %r1396, %r1309;
	xor.b32  	%r1398, %r1397, %r1296;
	shf.l.wrap.b32 	%r1399, %r1398, %r1398, 1;
	add.s32 	%r1400, %r520, %r1399;
	add.s32 	%r1401, %r1400, %r519;
	add.s32 	%r1402, %r1401, %r1395;
	add.s32 	%r529, %r1402, 1859775393;
	shf.l.wrap.b32 	%r531, %r521, %r521, 30;
	shf.l.wrap.b32 	%r1403, %r529, %r529, 5;
	// begin inline asm
	lop3.b32 %r524, %r525, %r531, %r527, 150;
	// end inline asm
	xor.b32  	%r1404, %r1351, %r1383;
	xor.b32  	%r1405, %r1404, %r1316;
	xor.b32  	%r1406, %r1405, %r1302;
	shf.l.wrap.b32 	%r1407, %r1406, %r1406, 1;
	add.s32 	%r1408, %r524, %r1407;
	add.s32 	%r1409, %r1408, %r523;
	add.s32 	%r1410, %r1409, %r1403;
	add.s32 	%r533, %r1410, 1859775393;
	shf.l.wrap.b32 	%r535, %r525, %r525, 30;
	shf.l.wrap.b32 	%r1411, %r533, %r533, 5;
	// begin inline asm
	lop3.b32 %r528, %r529, %r535, %r531, 150;
	// end inline asm
	xor.b32  	%r1412, %r1357, %r1391;
	xor.b32  	%r1413, %r1412, %r1322;
	xor.b32  	%r1414, %r1413, %r1309;
	shf.l.wrap.b32 	%r1415, %r1414, %r1414, 1;
	add.s32 	%r1416, %r528, %r1415;
	add.s32 	%r1417, %r1416, %r527;
	add.s32 	%r1418, %r1417, %r1411;
	add.s32 	%r537, %r1418, 1859775393;
	shf.l.wrap.b32 	%r539, %r529, %r529, 30;
	shf.l.wrap.b32 	%r1419, %r537, %r537, 5;
	// begin inline asm
	lop3.b32 %r532, %r533, %r539, %r535, 150;
	// end inline asm
	xor.b32  	%r1420, %r1363, %r1399;
	xor.b32  	%r1421, %r1420, %r1328;
	xor.b32  	%r1422, %r1421, %r1316;
	shf.l.wrap.b32 	%r1423, %r1422, %r1422, 1;
	add.s32 	%r1424, %r532, %r1423;
	add.s32 	%r1425, %r1424, %r531;
	add.s32 	%r1426, %r1425, %r1419;
	add.s32 	%r541, %r1426, 1859775393;
	shf.l.wrap.b32 	%r543, %r533, %r533, 30;
	shf.l.wrap.b32 	%r1427, %r541, %r541, 5;
	// begin inline asm
	lop3.b32 %r536, %r537, %r543, %r539, 150;
	// end inline asm
	xor.b32  	%r1428, %r1369, %r1407;
	xor.b32  	%r1429, %r1428, %r1333;
	xor.b32  	%r1430, %r1429, %r1322;
	shf.l.wrap.b32 	%r1431, %r1430, %r1430, 1;
	add.s32 	%r1432, %r536, %r1431;
	add.s32 	%r1433, %r1432, %r535;
	add.s32 	%r1434, %r1433, %r1427;
	add.s32 	%r545, %r1434, 1859775393;
	shf.l.wrap.b32 	%r547, %r537, %r537, 30;
	shf.l.wrap.b32 	%r1435, %r545, %r545, 5;
	// begin inline asm
	lop3.b32 %r540, %r541, %r547, %r543, 150;
	// end inline asm
	xor.b32  	%r1436, %r1376, %r1415;
	xor.b32  	%r1437, %r1436, %r1339;
	xor.b32  	%r1438, %r1437, %r1328;
	shf.l.wrap.b32 	%r1439, %r1438, %r1438, 1;
	add.s32 	%r1440, %r540, %r1439;
	add.s32 	%r1441, %r1440, %r539;
	add.s32 	%r1442, %r1441, %r1435;
	add.s32 	%r549, %r1442, 1859775393;
	shf.l.wrap.b32 	%r551, %r541, %r541, 30;
	shf.l.wrap.b32 	%r1443, %r549, %r549, 5;
	// begin inline asm
	lop3.b32 %r544, %r545, %r551, %r547, 150;
	// end inline asm
	xor.b32  	%r1444, %r1383, %r1423;
	xor.b32  	%r1445, %r1444, %r1345;
	xor.b32  	%r1446, %r1445, %r1333;
	shf.l.wrap.b32 	%r1447, %r1446, %r1446, 1;
	add.s32 	%r1448, %r544, %r1447;
	add.s32 	%r1449, %r1448, %r543;
	add.s32 	%r1450, %r1449, %r1443;
	add.s32 	%r553, %r1450, 1859775393;
	shf.l.wrap.b32 	%r555, %r545, %r545, 30;
	shf.l.wrap.b32 	%r1451, %r553, %r553, 5;
	// begin inline asm
	lop3.b32 %r548, %r549, %r555, %r551, 150;
	// end inline asm
	xor.b32  	%r1452, %r1391, %r1431;
	xor.b32  	%r1453, %r1452, %r1351;
	xor.b32  	%r1454, %r1453, %r1339;
	shf.l.wrap.b32 	%r1455, %r1454, %r1454, 1;
	add.s32 	%r1456, %r548, %r1455;
	add.s32 	%r1457, %r1456, %r547;
	add.s32 	%r1458, %r1457, %r1451;
	add.s32 	%r557, %r1458, 1859775393;
	shf.l.wrap.b32 	%r559, %r549, %r549, 30;
	shf.l.wrap.b32 	%r1459, %r557, %r557, 5;
	// begin inline asm
	lop3.b32 %r552, %r553, %r559, %r555, 232;
	// end inline asm
	xor.b32  	%r1460, %r1399, %r1439;
	xor.b32  	%r1461, %r1460, %r1357;
	xor.b32  	%r1462, %r1461, %r1345;
	shf.l.wrap.b32 	%r1463, %r1462, %r1462, 1;
	add.s32 	%r1464, %r552, %r1463;
	add.s32 	%r1465, %r1464, %r551;
	add.s32 	%r1466, %r1465, %r1459;
	add.s32 	%r561, %r1466, -1894007588;
	shf.l.wrap.b32 	%r563, %r553, %r553, 30;
	shf.l.wrap.b32 	%r1467, %r561, %r561, 5;
	// begin inline asm
	lop3.b32 %r556, %r557, %r563, %r559, 232;
	// end inline asm
	xor.b32  	%r1468, %r1407, %r1447;
	xor.b32  	%r1469, %r1468, %r1363;
	xor.b32  	%r1470, %r1469, %r1351;
	shf.l.wrap.b32 	%r1471, %r1470, %r1470, 1;
	add.s32 	%r1472, %r556, %r1471;
	add.s32 	%r1473, %r1472, %r555;
	add.s32 	%r1474, %r1473, %r1467;
	add.s32 	%r565, %r1474, -1894007588;
	shf.l.wrap.b32 	%r567, %r557, %r557, 30;
	shf.l.wrap.b32 	%r1475, %r565, %r565, 5;
	// begin inline asm
	lop3.b32 %r560, %r561, %r567, %r563, 232;
	// end inline asm
	xor.b32  	%r1476, %r1415, %r1455;
	xor.b32  	%r1477, %r1476, %r1369;
	xor.b32  	%r1478, %r1477, %r1357;
	shf.l.wrap.b32 	%r1479, %r1478, %r1478, 1;
	add.s32 	%r1480, %r560, %r1479;
	add.s32 	%r1481, %r1480, %r559;
	add.s32 	%r1482, %r1481, %r1475;
	add.s32 	%r569, %r1482, -1894007588;
	shf.l.wrap.b32 	%r571, %r561, %r561, 30;
	shf.l.wrap.b32 	%r1483, %r569, %r569, 5;
	// begin inline asm
	lop3.b32 %r564, %r565, %r571, %r567, 232;
	// end inline asm
	xor.b32  	%r1484, %r1423, %r1463;
	xor.b32  	%r1485, %r1484, %r1376;
	xor.b32  	%r1486, %r1485, %r1363;
	shf.l.wrap.b32 	%r1487, %r1486, %r1486, 1;
	add.s32 	%r1488, %r564, %r1487;
	add.s32 	%r1489, %r1488, %r563;
	add.s32 	%r1490, %r1489, %r1483;
	add.s32 	%r573, %r1490, -1894007588;
	shf.l.wrap.b32 	%r575, %r565, %r565, 30;
	shf.l.wrap.b32 	%r1491, %r573, %r573, 5;
	// begin inline asm
	lop3.b32 %r568, %r569, %r575, %r571, 232;
	// end inline asm
	xor.b32  	%r1492, %r1431, %r1471;
	xor.b32  	%r1493, %r1492, %r1383;
	xor.b32  	%r1494, %r1493, %r1369;
	shf.l.wrap.b32 	%r1495, %r1494, %r1494, 1;
	add.s32 	%r1496, %r568, %r1495;
	add.s32 	%r1497, %r1496, %r567;
	add.s32 	%r1498, %r1497, %r1491;
	add.s32 	%r577, %r1498, -1894007588;
	shf.l.wrap.b32 	%r579, %r569, %r569, 30;
	shf.l.wrap.b32 	%r1499, %r577, %r577, 5;
	// begin inline asm
	lop3.b32 %r572, %r573, %r579, %r575, 232;
	// end inline asm
	xor.b32  	%r1500, %r1439, %r1479;
	xor.b32  	%r1501, %r1500, %r1391;
	xor.b32  	%r1502, %r1501, %r1376;
	shf.l.wrap.b32 	%r1503, %r1502, %r1502, 1;
	add.s32 	%r1504, %r572, %r1503;
	add.s32 	%r1505, %r1504, %r571;
	add.s32 	%r1506, %r1505, %r1499;
	add.s32 	%r581, %r1506, -1894007588;
	shf.l.wrap.b32 	%r583, %r573, %r573, 30;
	shf.l.wrap.b32 	%r1507, %r581, %r581, 5;
	// begin inline asm
	lop3.b32 %r576, %r577, %r583, %r579, 232;
	// end inline asm
	xor.b32  	%r1508, %r1447, %r1487;
	xor.b32  	%r1509, %r1508, %r1399;
	xor.b32  	%r1510, %r1509, %r1383;
	shf.l.wrap.b32 	%r1511, %r1510, %r1510, 1;
	add.s32 	%r1512, %r576, %r1511;
	add.s32 	%r1513, %r1512, %r575;
	add.s32 	%r1514, %r1513, %r1507;
	add.s32 	%r585, %r1514, -1894007588;
	shf.l.wrap.b32 	%r587, %r577, %r577, 30;
	shf.l.wrap.b32 	%r1515, %r585, %r585, 5;
	// begin inline asm
	lop3.b32 %r580, %r581, %r587, %r583, 232;
	// end inline asm
	xor.b32  	%r1516, %r1455, %r1495;
	xor.b32  	%r1517, %r1516, %r1407;
	xor.b32  	%r1518, %r1517, %r1391;
	shf.l.wrap.b32 	%r1519, %r1518, %r1518, 1;
	add.s32 	%r1520, %r580, %r1519;
	add.s32 	%r1521, %r1520, %r579;
	add.s32 	%r1522, %r1521, %r1515;
	add.s32 	%r589, %r1522, -1894007588;
	shf.l.wrap.b32 	%r591, %r581, %r581, 30;
	shf.l.wrap.b32 	%r1523, %r589, %r589, 5;
	// begin inline asm
	lop3.b32 %r584, %r585, %r591, %r587, 232;
	// end inline asm
	xor.b32  	%r1524, %r1463, %r1503;
	xor.b32  	%r1525, %r1524, %r1415;
	xor.b32  	%r1526, %r1525, %r1399;
	shf.l.wrap.b32 	%r1527, %r1526, %r1526, 1;
	add.s32 	%r1528, %r584, %r1527;
	add.s32 	%r1529, %r1528, %r583;
	add.s32 	%r1530, %r1529, %r1523;
	add.s32 	%r593, %r1530, -1894007588;
	shf.l.wrap.b32 	%r595, %r585, %r585, 30;
	shf.l.wrap.b32 	%r1531, %r593, %r593, 5;
	// begin inline asm
	lop3.b32 %r588, %r589, %r595, %r591, 232;
	// end inline asm
	xor.b32  	%r1532, %r1471, %r1511;
	xor.b32  	%r1533, %r1532, %r1423;
	xor.b32  	%r1534, %r1533, %r1407;
	shf.l.wrap.b32 	%r1535, %r1534, %r1534, 1;
	add.s32 	%r1536, %r588, %r1535;
	add.s32 	%r1537, %r1536, %r587;
	add.s32 	%r1538, %r1537, %r1531;
	add.s32 	%r597, %r1538, -1894007588;
	shf.l.wrap.b32 	%r599, %r589, %r589, 30;
	shf.l.wrap.b32 	%r1539, %r597, %r597, 5;
	// begin inline asm
	lop3.b32 %r592, %r593, %r599, %r595, 232;
	// end inline asm
	xor.b32  	%r1540, %r1479, %r1519;
	xor.b32  	%r1541, %r1540, %r1431;
	xor.b32  	%r1542, %r1541, %r1415;
	shf.l.wrap.b32 	%r1543, %r1542, %r1542, 1;
	add.s32 	%r1544, %r592, %r1543;
	add.s32 	%r1545, %r1544, %r591;
	add.s32 	%r1546, %r1545, %r1539;
	add.s32 	%r601, %r1546, -1894007588;
	shf.l.wrap.b32 	%r603, %r593, %r593, 30;
	shf.l.wrap.b32 	%r1547, %r601, %r601, 5;
	// begin inline asm
	lop3.b32 %r596, %r597, %r603, %r599, 232;
	// end inline asm
	xor.b32  	%r1548, %r1487, %r1527;
	xor.b32  	%r1549, %r1548, %r1439;
	xor.b32  	%r1550, %r1549, %r1423;
	shf.l.wrap.b32 	%r1551, %r1550, %r1550, 1;
	add.s32 	%r1552, %r596, %r1551;
	add.s32 	%r1553, %r1552, %r595;
	add.s32 	%r1554, %r1553, %r1547;
	add.s32 	%r605, %r1554, -1894007588;
	shf.l.wrap.b32 	%r607, %r597, %r597, 30;
	shf.l.wrap.b32 	%r1555, %r605, %r605, 5;
	// begin inline asm
	lop3.b32 %r600, %r601, %r607, %r603, 232;
	// end inline asm
	xor.b32  	%r1556, %r1495, %r1535;
	xor.b32  	%r1557, %r1556, %r1447;
	xor.b32  	%r1558, %r1557, %r1431;
	shf.l.wrap.b32 	%r1559, %r1558, %r1558, 1;
	add.s32 	%r1560, %r600, %r1559;
	add.s32 	%r1561, %r1560, %r599;
	add.s32 	%r1562, %r1561, %r1555;
	add.s32 	%r609, %r1562, -1894007588;
	shf.l.wrap.b32 	%r611, %r601, %r601, 30;
	shf.l.wrap.b32 	%r1563, %r609, %r609, 5;
	// begin inline asm
	lop3.b32 %r604, %r605, %r611, %r607, 232;
	// end inline asm
	xor.b32  	%r1564, %r1503, %r1543;
	xor.b32  	%r1565, %r1564, %r1455;
	xor.b32  	%r1566, %r1565, %r1439;
	shf.l.wrap.b32 	%r1567, %r1566, %r1566, 1;
	add.s32 	%r1568, %r604, %r1567;
	add.s32 	%r1569, %r1568, %r603;
	add.s32 	%r1570, %r1569, %r1563;
	add.s32 	%r613, %r1570, -1894007588;
	shf.l.wrap.b32 	%r615, %r605, %r605, 30;
	shf.l.wrap.b32 	%r1571, %r613, %r613, 5;
	// begin inline asm
	lop3.b32 %r608, %r609, %r615, %r611, 232;
	// end inline asm
	xor.b32  	%r1572, %r1511, %r1551;
	xor.b32  	%r1573, %r1572, %r1463;
	xor.b32  	%r1574, %r1573, %r1447;
	shf.l.wrap.b32 	%r1575, %r1574, %r1574, 1;
	add.s32 	%r1576, %r608, %r1575;
	add.s32 	%r1577, %r1576, %r607;
	add.s32 	%r1578, %r1577, %r1571;
	add.s32 	%r617, %r1578, -1894007588;
	shf.l.wrap.b32 	%r619, %r609, %r609, 30;
	shf.l.wrap.b32 	%r1579, %r617, %r617, 5;
	// begin inline asm
	lop3.b32 %r612, %r613, %r619, %r615, 232;
	// end inline asm
	xor.b32  	%r1580, %r1519, %r1559;
	xor.b32  	%r1581, %r1580, %r1471;
	xor.b32  	%r1582, %r1581, %r1455;
	shf.l.wrap.b32 	%r1583, %r1582, %r1582, 1;
	add.s32 	%r1584, %r612, %r1583;
	add.s32 	%r1585, %r1584, %r611;
	add.s32 	%r1586, %r1585, %r1579;
	add.s32 	%r621, %r1586, -1894007588;
	shf.l.wrap.b32 	%r623, %r613, %r613, 30;
	shf.l.wrap.b32 	%r1587, %r621, %r621, 5;
	// begin inline asm
	lop3.b32 %r616, %r617, %r623, %r619, 232;
	// end inline asm
	xor.b32  	%r1588, %r1527, %r1567;
	xor.b32  	%r1589, %r1588, %r1479;
	xor.b32  	%r1590, %r1589, %r1463;
	shf.l.wrap.b32 	%r1591, %r1590, %r1590, 1;
	add.s32 	%r1592, %r616, %r1591;
	add.s32 	%r1593, %r1592, %r615;
	add.s32 	%r1594, %r1593, %r1587;
	add.s32 	%r625, %r1594, -1894007588;
	shf.l.wrap.b32 	%r627, %r617, %r617, 30;
	shf.l.wrap.b32 	%r1595, %r625, %r625, 5;
	// begin inline asm
	lop3.b32 %r620, %r621, %r627, %r623, 232;
	// end inline asm
	xor.b32  	%r1596, %r1535, %r1575;
	xor.b32  	%r1597, %r1596, %r1487;
	xor.b32  	%r1598, %r1597, %r1471;
	shf.l.wrap.b32 	%r1599, %r1598, %r1598, 1;
	add.s32 	%r1600, %r620, %r1599;
	add.s32 	%r1601, %r1600, %r619;
	add.s32 	%r1602, %r1601, %r1595;
	add.s32 	%r629, %r1602, -1894007588;
	shf.l.wrap.b32 	%r631, %r621, %r621, 30;
	shf.l.wrap.b32 	%r1603, %r629, %r629, 5;
	// begin inline asm
	lop3.b32 %r624, %r625, %r631, %r627, 232;
	// end inline asm
	xor.b32  	%r1604, %r1543, %r1583;
	xor.b32  	%r1605, %r1604, %r1495;
	xor.b32  	%r1606, %r1605, %r1479;
	shf.l.wrap.b32 	%r1607, %r1606, %r1606, 1;
	add.s32 	%r1608, %r624, %r1607;
	add.s32 	%r1609, %r1608, %r623;
	add.s32 	%r1610, %r1609, %r1603;
	add.s32 	%r633, %r1610, -1894007588;
	shf.l.wrap.b32 	%r635, %r625, %r625, 30;
	shf.l.wrap.b32 	%r1611, %r633, %r633, 5;
	// begin inline asm
	lop3.b32 %r628, %r629, %r635, %r631, 232;
	// end inline asm
	xor.b32  	%r1612, %r1551, %r1591;
	xor.b32  	%r1613, %r1612, %r1503;
	xor.b32  	%r1614, %r1613, %r1487;
	shf.l.wrap.b32 	%r1615, %r1614, %r1614, 1;
	add.s32 	%r1616, %r628, %r1615;
	add.s32 	%r1617, %r1616, %r627;
	add.s32 	%r1618, %r1617, %r1611;
	add.s32 	%r637, %r1618, -1894007588;
	shf.l.wrap.b32 	%r639, %r629, %r629, 30;
	shf.l.wrap.b32 	%r1619, %r637, %r637, 5;
	// begin inline asm
	lop3.b32 %r632, %r633, %r639, %r635, 150;
	// end inline asm
	xor.b32  	%r1620, %r1559, %r1599;
	xor.b32  	%r1621, %r1620, %r1511;
	xor.b32  	%r1622, %r1621, %r1495;
	shf.l.wrap.b32 	%r1623, %r1622, %r1622, 1;
	add.s32 	%r1624, %r632, %r1623;
	add.s32 	%r1625, %r1624, %r631;
	add.s32 	%r1626, %r1625, %r1619;
	add.s32 	%r641, %r1626, -899497514;
	shf.l.wrap.b32 	%r643, %r633, %r633, 30;
	shf.l.wrap.b32 	%r1627, %r641, %r641, 5;
	// begin inline asm
	lop3.b32 %r636, %r637, %r643, %r639, 150;
	// end inline asm
	xor.b32  	%r1628, %r1567, %r1607;
	xor.b32  	%r1629, %r1628, %r1519;
	xor.b32  	%r1630, %r1629, %r1503;
	shf.l.wrap.b32 	%r1631, %r1630, %r1630, 1;
	add.s32 	%r1632, %r636, %r1631;
	add.s32 	%r1633, %r1632, %r635;
	add.s32 	%r1634, %r1633, %r1627;
	add.s32 	%r645, %r1634, -899497514;
	shf.l.wrap.b32 	%r647, %r637, %r637, 30;
	shf.l.wrap.b32 	%r1635, %r645, %r645, 5;
	// begin inline asm
	lop3.b32 %r640, %r641, %r647, %r643, 150;
	// end inline asm
	xor.b32  	%r1636, %r1575, %r1615;
	xor.b32  	%r1637, %r1636, %r1527;
	xor.b32  	%r1638, %r1637, %r1511;
	shf.l.wrap.b32 	%r1639, %r1638, %r1638, 1;
	add.s32 	%r1640, %r640, %r1639;
	add.s32 	%r1641, %r1640, %r639;
	add.s32 	%r1642, %r1641, %r1635;
	add.s32 	%r649, %r1642, -899497514;
	shf.l.wrap.b32 	%r651, %r641, %r641, 30;
	shf.l.wrap.b32 	%r1643, %r649, %r649, 5;
	// begin inline asm
	lop3.b32 %r644, %r645, %r651, %r647, 150;
	// end inline asm
	xor.b32  	%r1644, %r1583, %r1623;
	xor.b32  	%r1645, %r1644, %r1535;
	xor.b32  	%r1646, %r1645, %r1519;
	shf.l.wrap.b32 	%r1647, %r1646, %r1646, 1;
	add.s32 	%r1648, %r644, %r1647;
	add.s32 	%r1649, %r1648, %r643;
	add.s32 	%r1650, %r1649, %r1643;
	add.s32 	%r653, %r1650, -899497514;
	shf.l.wrap.b32 	%r655, %r645, %r645, 30;
	shf.l.wrap.b32 	%r1651, %r653, %r653, 5;
	// begin inline asm
	lop3.b32 %r648, %r649, %r655, %r651, 150;
	// end inline asm
	xor.b32  	%r1652, %r1591, %r1631;
	xor.b32  	%r1653, %r1652, %r1543;
	xor.b32  	%r1654, %r1653, %r1527;
	shf.l.wrap.b32 	%r1655, %r1654, %r1654, 1;
	add.s32 	%r1656, %r648, %r1655;
	add.s32 	%r1657, %r1656, %r647;
	add.s32 	%r1658, %r1657, %r1651;
	add.s32 	%r657, %r1658, -899497514;
	shf.l.wrap.b32 	%r659, %r649, %r649, 30;
	shf.l.wrap.b32 	%r1659, %r657, %r657, 5;
	// begin inline asm
	lop3.b32 %r652, %r653, %r659, %r655, 150;
	// end inline asm
	xor.b32  	%r1660, %r1599, %r1639;
	xor.b32  	%r1661, %r1660, %r1551;
	xor.b32  	%r1662, %r1661, %r1535;
	shf.l.wrap.b32 	%r1663, %r1662, %r1662, 1;
	add.s32 	%r1664, %r652, %r1663;
	add.s32 	%r1665, %r1664, %r651;
	add.s32 	%r1666, %r1665, %r1659;
	add.s32 	%r661, %r1666, -899497514;
	shf.l.wrap.b32 	%r663, %r653, %r653, 30;
	shf.l.wrap.b32 	%r1667, %r661, %r661, 5;
	// begin inline asm
	lop3.b32 %r656, %r657, %r663, %r659, 150;
	// end inline asm
	xor.b32  	%r1668, %r1607, %r1647;
	xor.b32  	%r1669, %r1668, %r1559;
	xor.b32  	%r1670, %r1669, %r1543;
	shf.l.wrap.b32 	%r1671, %r1670, %r1670, 1;
	add.s32 	%r1672, %r656, %r655;
	add.s32 	%r1673, %r1672, %r1671;
	add.s32 	%r1674, %r1673, %r1667;
	add.s32 	%r665, %r1674, -899497514;
	shf.l.wrap.b32 	%r667, %r657, %r657, 30;
	shf.l.wrap.b32 	%r1675, %r665, %r665, 5;
	// begin inline asm
	lop3.b32 %r660, %r661, %r667, %r663, 150;
	// end inline asm
	xor.b32  	%r1676, %r1615, %r1655;
	xor.b32  	%r1677, %r1676, %r1567;
	xor.b32  	%r1678, %r1677, %r1551;
	shf.l.wrap.b32 	%r1679, %r1678, %r1678, 1;
	add.s32 	%r1680, %r660, %r659;
	add.s32 	%r1681, %r1680, %r1679;
	add.s32 	%r1682, %r1681, %r1675;
	add.s32 	%r669, %r1682, -899497514;
	shf.l.wrap.b32 	%r671, %r661, %r661, 30;
	shf.l.wrap.b32 	%r1683, %r669, %r669, 5;
	// begin inline asm
	lop3.b32 %r664, %r665, %r671, %r667, 150;
	// end inline asm
	xor.b32  	%r1684, %r1623, %r1663;
	xor.b32  	%r1685, %r1684, %r1575;
	xor.b32  	%r1686, %r1685, %r1559;
	shf.l.wrap.b32 	%r1687, %r1686, %r1686, 1;
	add.s32 	%r1688, %r664, %r663;
	add.s32 	%r1689, %r1688, %r1687;
	add.s32 	%r1690, %r1689, %r1683;
	add.s32 	%r673, %r1690, -899497514;
	shf.l.wrap.b32 	%r675, %r665, %r665, 30;
	shf.l.wrap.b32 	%r1691, %r673, %r673, 5;
	// begin inline asm
	lop3.b32 %r668, %r669, %r675, %r671, 150;
	// end inline asm
	xor.b32  	%r1692, %r1631, %r1671;
	xor.b32  	%r1693, %r1692, %r1583;
	xor.b32  	%r1694, %r1693, %r1567;
	shf.l.wrap.b32 	%r1695, %r1694, %r1694, 1;
	add.s32 	%r1696, %r668, %r667;
	add.s32 	%r1697, %r1696, %r1695;
	add.s32 	%r1698, %r1697, %r1691;
	add.s32 	%r677, %r1698, -899497514;
	shf.l.wrap.b32 	%r679, %r669, %r669, 30;
	shf.l.wrap.b32 	%r1699, %r677, %r677, 5;
	// begin inline asm
	lop3.b32 %r672, %r673, %r679, %r675, 150;
	// end inline asm
	xor.b32  	%r1700, %r1639, %r1679;
	xor.b32  	%r1701, %r1700, %r1591;
	xor.b32  	%r1702, %r1701, %r1575;
	shf.l.wrap.b32 	%r1703, %r1702, %r1702, 1;
	add.s32 	%r1704, %r672, %r671;
	add.s32 	%r1705, %r1704, %r1703;
	add.s32 	%r1706, %r1705, %r1699;
	add.s32 	%r681, %r1706, -899497514;
	shf.l.wrap.b32 	%r683, %r673, %r673, 30;
	shf.l.wrap.b32 	%r1707, %r681, %r681, 5;
	// begin inline asm
	lop3.b32 %r676, %r677, %r683, %r679, 150;
	// end inline asm
	xor.b32  	%r1708, %r1647, %r1687;
	xor.b32  	%r1709, %r1708, %r1599;
	xor.b32  	%r1710, %r1709, %r1583;
	shf.l.wrap.b32 	%r1711, %r1710, %r1710, 1;
	add.s32 	%r1712, %r676, %r675;
	add.s32 	%r1713, %r1712, %r1711;
	add.s32 	%r1714, %r1713, %r1707;
	add.s32 	%r685, %r1714, -899497514;
	shf.l.wrap.b32 	%r687, %r677, %r677, 30;
	shf.l.wrap.b32 	%r1715, %r685, %r685, 5;
	// begin inline asm
	lop3.b32 %r680, %r681, %r687, %r683, 150;
	// end inline asm
	xor.b32  	%r1716, %r1655, %r1695;
	xor.b32  	%r1717, %r1716, %r1607;
	xor.b32  	%r1718, %r1717, %r1591;
	shf.l.wrap.b32 	%r1719, %r1718, %r1718, 1;
	add.s32 	%r1720, %r679, %r680;
	add.s32 	%r1721, %r1720, %r1719;
	add.s32 	%r1722, %r1721, %r1715;
	add.s32 	%r689, %r1722, -899497514;
	shf.l.wrap.b32 	%r691, %r681, %r681, 30;
	shf.l.wrap.b32 	%r1723, %r689, %r689, 5;
	// begin inline asm
	lop3.b32 %r684, %r685, %r691, %r687, 150;
	// end inline asm
	xor.b32  	%r1724, %r1663, %r1703;
	xor.b32  	%r1725, %r1724, %r1615;
	xor.b32  	%r1726, %r1725, %r1599;
	shf.l.wrap.b32 	%r1727, %r1726, %r1726, 1;
	add.s32 	%r1728, %r683, %r684;
	add.s32 	%r1729, %r1728, %r1727;
	add.s32 	%r1730, %r1729, %r1723;
	add.s32 	%r693, %r1730, -899497514;
	shf.l.wrap.b32 	%r695, %r685, %r685, 30;
	shf.l.wrap.b32 	%r1731, %r693, %r693, 5;
	// begin inline asm
	lop3.b32 %r688, %r689, %r695, %r691, 150;
	// end inline asm
	xor.b32  	%r1732, %r1671, %r1711;
	xor.b32  	%r1733, %r1732, %r1623;
	xor.b32  	%r1734, %r1733, %r1607;
	shf.l.wrap.b32 	%r1735, %r1734, %r1734, 1;
	add.s32 	%r1736, %r687, %r688;
	add.s32 	%r1737, %r1736, %r1735;
	add.s32 	%r1738, %r1737, %r1731;
	add.s32 	%r697, %r1738, -899497514;
	shf.l.wrap.b32 	%r699, %r689, %r689, 30;
	shf.l.wrap.b32 	%r1739, %r697, %r697, 5;
	// begin inline asm
	lop3.b32 %r692, %r693, %r699, %r695, 150;
	// end inline asm
	xor.b32  	%r1740, %r1679, %r1719;
	xor.b32  	%r1741, %r1740, %r1631;
	xor.b32  	%r1742, %r1741, %r1615;
	shf.l.wrap.b32 	%r1743, %r1742, %r1742, 1;
	add.s32 	%r1744, %r691, %r692;
	add.s32 	%r1745, %r1744, %r1743;
	add.s32 	%r1746, %r1745, %r1739;
	add.s32 	%r701, %r1746, -899497514;
	shf.l.wrap.b32 	%r703, %r693, %r693, 30;
	shf.l.wrap.b32 	%r1747, %r701, %r701, 5;
	// begin inline asm
	lop3.b32 %r696, %r697, %r703, %r699, 150;
	// end inline asm
	xor.b32  	%r1748, %r1687, %r1727;
	xor.b32  	%r1749, %r1748, %r1639;
	xor.b32  	%r1750, %r1749, %r1623;
	shf.l.wrap.b32 	%r1751, %r1750, %r1750, 1;
	add.s32 	%r1752, %r695, %r696;
	add.s32 	%r1753, %r1752, %r1751;
	add.s32 	%r1754, %r1753, %r1747;
	add.s32 	%r705, %r1754, -899497514;
	shf.l.wrap.b32 	%r707, %r697, %r697, 30;
	shf.l.wrap.b32 	%r1755, %r705, %r705, 5;
	// begin inline asm
	lop3.b32 %r700, %r701, %r707, %r703, 150;
	// end inline asm
	xor.b32  	%r1756, %r1695, %r1735;
	xor.b32  	%r1757, %r1756, %r1647;
	xor.b32  	%r1758, %r1757, %r1631;
	shf.l.wrap.b32 	%r1759, %r1758, %r1758, 1;
	add.s32 	%r1760, %r699, %r700;
	add.s32 	%r1761, %r1760, %r1759;
	add.s32 	%r1762, %r1761, %r1755;
	add.s32 	%r709, %r1762, -899497514;
	shf.l.wrap.b32 	%r711, %r701, %r701, 30;
	shf.l.wrap.b32 	%r1763, %r709, %r709, 5;
	// begin inline asm
	lop3.b32 %r704, %r705, %r711, %r707, 150;
	// end inline asm
	xor.b32  	%r1764, %r1703, %r1743;
	xor.b32  	%r1765, %r1764, %r1655;
	xor.b32  	%r1766, %r1765, %r1639;
	shf.l.wrap.b32 	%r1767, %r1766, %r1766, 1;
	add.s32 	%r1768, %r703, %r704;
	add.s32 	%r1769, %r1768, %r1767;
	add.s32 	%r1770, %r1769, %r1763;
	add.s32 	%r1771, %r1770, -899497514;
	shf.l.wrap.b32 	%r710, %r705, %r705, 30;
	shf.l.wrap.b32 	%r1772, %r1771, %r1771, 5;
	// begin inline asm
	lop3.b32 %r708, %r709, %r710, %r711, 150;
	// end inline asm
	xor.b32  	%r1773, %r1711, %r1751;
	xor.b32  	%r1774, %r1773, %r1663;
	xor.b32  	%r1775, %r1774, %r1647;
	shf.l.wrap.b32 	%r1776, %r1775, %r1775, 1;
	shf.l.wrap.b32 	%r1777, %r709, %r709, 30;
	add.s32 	%r1778, %r34, %r707;
	add.s32 	%r1779, %r1778, %r708;
	add.s32 	%r1780, %r1779, %r1776;
	add.s32 	%r1781, %r1780, %r1772;
	add.s32 	%r1782, %r1771, %r25;
	add.s32 	%r1783, %r1777, %r24;
	add.s32 	%r1784, %r710, %r23;
	add.s32 	%r1785, %r711, %r26;
	xor.b32  	%r1790, %r1790, %r1781;
	xor.b32  	%r1789, %r1789, %r1782;
	xor.b32  	%r1788, %r1788, %r1783;
	xor.b32  	%r1787, %r1787, %r1784;
	xor.b32  	%r1786, %r1786, %r1785;
	add.s32 	%r1791, %r1791, 1;
	setp.ne.s32 	%p1, %r1791, 333;
	@%p1 bra 	$L__BB1_1;

	st.global.u32 	[%rd1], %r1781;
	st.global.u32 	[%rd1+4], %r1782;
	st.global.u32 	[%rd1+8], %r1783;
	st.global.u32 	[%rd1+12], %r1784;
	st.global.u32 	[%rd1+16], %r1785;
	st.global.u32 	[%rd1+60], %r1790;
	st.global.u32 	[%rd1+64], %r1789;
	st.global.u32 	[%rd1+68], %r1788;
	st.global.u32 	[%rd1+72], %r1787;
	st.global.u32 	[%rd1+76], %r1786;
	ret;

}
	// .globl	pbkdf2_final
.entry pbkdf2_final(
	.param .u64 .ptr .global .align 4 pbkdf2_final_param_0,
	.param .u64 .ptr .global .align 4 pbkdf2_final_param_1,
	.param .u64 .ptr .global .align 4 pbkdf2_final_param_2
)
{
	.local .align 16 .b8 	__local_depot2[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<3833>;
	.reg .b64 	%rd<57>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u64 	%rd4, [pbkdf2_final_param_0];
	ld.param.u64 	%rd5, [pbkdf2_final_param_1];
	ld.param.u64 	%rd6, [pbkdf2_final_param_2];
	mov.u32 	%r56, %ctaid.x;
	mov.u32 	%r57, %ntid.x;
	mov.u32 	%r58, %tid.x;
	mov.b32 	%r59, %envreg3;
	add.s32 	%r60, %r58, %r59;
	mad.lo.s32 	%r61, %r57, %r56, %r60;
	mul.wide.u32 	%rd7, %r61, 84;
	add.s64 	%rd8, %rd6, %rd7;
	add.s64 	%rd1, %rd8, 80;
	ld.global.u32 	%r62, [%rd8+80];
	add.s32 	%r1, %r62, 1;
	st.global.u32 	[%rd8+80], %r1;
	mul.lo.s32 	%r63, %r62, 5;
	ld.global.u32 	%r64, [%rd8+60];
	shf.l.wrap.b32 	%r65, %r64, %r64, 16;
	shl.b32 	%r66, %r65, 8;
	and.b32  	%r67, %r66, -16711936;
	shr.u32 	%r68, %r65, 8;
	and.b32  	%r69, %r68, 16711935;
	or.b32  	%r70, %r67, %r69;
	mul.wide.u32 	%rd9, %r61, 1040;
	add.s64 	%rd10, %rd5, %rd9;
	mul.wide.u32 	%rd11, %r63, 4;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.u32 	[%rd12], %r70;
	ld.global.u32 	%r71, [%rd8+64];
	shf.l.wrap.b32 	%r72, %r71, %r71, 16;
	shl.b32 	%r73, %r72, 8;
	and.b32  	%r74, %r73, -16711936;
	shr.u32 	%r75, %r72, 8;
	and.b32  	%r76, %r75, 16711935;
	or.b32  	%r77, %r74, %r76;
	shl.b32 	%r78, %r62, 2;
	add.s32 	%r79, %r1, %r78;
	mul.wide.u32 	%rd13, %r79, 4;
	add.s64 	%rd14, %rd10, %rd13;
	st.global.u32 	[%rd14], %r77;
	ld.global.u32 	%r80, [%rd8+68];
	shf.l.wrap.b32 	%r81, %r80, %r80, 16;
	shl.b32 	%r82, %r81, 8;
	and.b32  	%r83, %r82, -16711936;
	shr.u32 	%r84, %r81, 8;
	and.b32  	%r85, %r84, 16711935;
	or.b32  	%r86, %r83, %r85;
	add.s32 	%r87, %r63, 2;
	mul.wide.u32 	%rd15, %r87, 4;
	add.s64 	%rd16, %rd10, %rd15;
	st.global.u32 	[%rd16], %r86;
	ld.global.u32 	%r88, [%rd8+72];
	shf.l.wrap.b32 	%r89, %r88, %r88, 16;
	shl.b32 	%r90, %r89, 8;
	and.b32  	%r91, %r90, -16711936;
	shr.u32 	%r92, %r89, 8;
	and.b32  	%r93, %r92, 16711935;
	or.b32  	%r94, %r91, %r93;
	add.s32 	%r95, %r63, 3;
	mul.wide.u32 	%rd17, %r95, 4;
	add.s64 	%rd18, %rd10, %rd17;
	st.global.u32 	[%rd18], %r94;
	ld.global.u32 	%r96, [%rd8+76];
	shf.l.wrap.b32 	%r97, %r96, %r96, 16;
	shl.b32 	%r98, %r97, 8;
	and.b32  	%r99, %r98, -16711936;
	shr.u32 	%r100, %r97, 8;
	and.b32  	%r101, %r100, 16711935;
	or.b32  	%r102, %r99, %r101;
	add.s32 	%r103, %r63, 4;
	mul.wide.u32 	%rd19, %r103, 4;
	add.s64 	%rd20, %rd10, %rd19;
	st.global.u32 	[%rd20], %r102;
	add.u64 	%rd2, %SPL, 0;
	mad.lo.s32 	%r104, %r62, 20, 20;
	setp.gt.u32 	%p1, %r104, 1023;
	@%p1 bra 	$L__BB2_22;

	ld.global.u32 	%r2, [%rd4];
	ld.global.u32 	%r3817, [%rd1+-60];
	ld.global.u32 	%r3816, [%rd1+-56];
	ld.global.u32 	%r3815, [%rd1+-52];
	ld.global.u32 	%r3814, [%rd1+-48];
	ld.global.u32 	%r3813, [%rd1+-44];
	cvt.u16.u32 	%rs2, %r1;
	add.s16 	%rs1, %rs2, 1;
	setp.lt.u32 	%p2, %r2, 64;
	@%p2 bra 	$L__BB2_4;
	bra.uni 	$L__BB2_2;

$L__BB2_4:
	mov.u32 	%r3824, 0;
	mov.u32 	%r3819, %r2;
	bra.uni 	$L__BB2_5;

$L__BB2_2:
	mov.u32 	%r105, 0;
	mov.u32 	%r3819, %r2;
	mov.u32 	%r3812, %r105;

$L__BB2_3:
	cvt.u64.u32 	%rd22, %r3812;
	add.s64 	%rd23, %rd4, %rd22;
	ld.global.u32 	%r426, [%rd23+12];
	mov.u32 	%r427, 291;
	ld.global.u32 	%r429, [%rd23+16];
	ld.global.u32 	%r430, [%rd23+20];
	ld.global.u32 	%r431, [%rd23+24];
	prmt.b32 	%r432, %r431, %r105, %r427;
	prmt.b32 	%r433, %r430, %r105, %r427;
	prmt.b32 	%r434, %r429, %r105, %r427;
	prmt.b32 	%r435, %r426, %r105, %r427;
	st.local.v4.u32 	[%rd2], {%r435, %r434, %r433, %r432};
	ld.global.u32 	%r436, [%rd23+28];
	ld.global.u32 	%r437, [%rd23+32];
	ld.global.u32 	%r438, [%rd23+36];
	ld.global.u32 	%r439, [%rd23+40];
	prmt.b32 	%r440, %r439, %r105, %r427;
	prmt.b32 	%r441, %r438, %r105, %r427;
	prmt.b32 	%r442, %r437, %r105, %r427;
	prmt.b32 	%r443, %r436, %r105, %r427;
	st.local.v4.u32 	[%rd2+16], {%r443, %r442, %r441, %r440};
	ld.global.u32 	%r444, [%rd23+44];
	ld.global.u32 	%r445, [%rd23+48];
	ld.global.u32 	%r446, [%rd23+52];
	ld.global.u32 	%r447, [%rd23+56];
	prmt.b32 	%r448, %r447, %r105, %r427;
	prmt.b32 	%r449, %r446, %r105, %r427;
	prmt.b32 	%r450, %r445, %r105, %r427;
	prmt.b32 	%r451, %r444, %r105, %r427;
	st.local.v4.u32 	[%rd2+32], {%r451, %r450, %r449, %r448};
	ld.global.u32 	%r452, [%rd23+60];
	ld.global.u32 	%r453, [%rd23+64];
	ld.global.u32 	%r454, [%rd23+68];
	ld.global.u32 	%r455, [%rd23+72];
	prmt.b32 	%r456, %r455, %r105, %r427;
	prmt.b32 	%r457, %r454, %r105, %r427;
	prmt.b32 	%r458, %r453, %r105, %r427;
	prmt.b32 	%r459, %r452, %r105, %r427;
	st.local.v4.u32 	[%rd2+48], {%r459, %r458, %r457, %r456};
	add.s32 	%r3824, %r3812, 64;
	add.s32 	%r3819, %r3819, -64;
	shf.l.wrap.b32 	%r460, %r3817, %r3817, 5;
	add.s32 	%r461, %r460, %r3813;
	// begin inline asm
	lop3.b32 %r106, %r3816, %r3815, %r3814, 202;
	// end inline asm
	add.s32 	%r462, %r461, %r106;
	add.s32 	%r463, %r462, %r435;
	add.s32 	%r115, %r463, 1518500249;
	shf.l.wrap.b32 	%r464, %r115, %r115, 5;
	shf.l.wrap.b32 	%r117, %r3816, %r3816, 30;
	// begin inline asm
	lop3.b32 %r110, %r3817, %r117, %r3815, 202;
	// end inline asm
	add.s32 	%r465, %r3814, %r110;
	add.s32 	%r466, %r465, %r434;
	add.s32 	%r467, %r466, %r464;
	add.s32 	%r119, %r467, 1518500249;
	shf.l.wrap.b32 	%r468, %r119, %r119, 5;
	shf.l.wrap.b32 	%r121, %r3817, %r3817, 30;
	// begin inline asm
	lop3.b32 %r114, %r115, %r121, %r117, 202;
	// end inline asm
	add.s32 	%r469, %r3815, %r114;
	add.s32 	%r470, %r469, %r433;
	add.s32 	%r471, %r470, %r468;
	add.s32 	%r123, %r471, 1518500249;
	shf.l.wrap.b32 	%r125, %r115, %r115, 30;
	shf.l.wrap.b32 	%r472, %r123, %r123, 5;
	// begin inline asm
	lop3.b32 %r118, %r119, %r125, %r121, 202;
	// end inline asm
	add.s32 	%r473, %r117, %r118;
	add.s32 	%r474, %r473, %r432;
	add.s32 	%r475, %r474, %r472;
	add.s32 	%r127, %r475, 1518500249;
	shf.l.wrap.b32 	%r129, %r119, %r119, 30;
	shf.l.wrap.b32 	%r476, %r127, %r127, 5;
	// begin inline asm
	lop3.b32 %r122, %r123, %r129, %r125, 202;
	// end inline asm
	add.s32 	%r477, %r121, %r122;
	add.s32 	%r478, %r477, %r443;
	add.s32 	%r479, %r478, %r476;
	add.s32 	%r131, %r479, 1518500249;
	shf.l.wrap.b32 	%r133, %r123, %r123, 30;
	shf.l.wrap.b32 	%r480, %r131, %r131, 5;
	// begin inline asm
	lop3.b32 %r126, %r127, %r133, %r129, 202;
	// end inline asm
	add.s32 	%r481, %r125, %r126;
	add.s32 	%r482, %r481, %r442;
	add.s32 	%r483, %r482, %r480;
	add.s32 	%r135, %r483, 1518500249;
	shf.l.wrap.b32 	%r137, %r127, %r127, 30;
	shf.l.wrap.b32 	%r484, %r135, %r135, 5;
	// begin inline asm
	lop3.b32 %r130, %r131, %r137, %r133, 202;
	// end inline asm
	add.s32 	%r485, %r129, %r130;
	add.s32 	%r486, %r485, %r441;
	add.s32 	%r487, %r486, %r484;
	add.s32 	%r139, %r487, 1518500249;
	shf.l.wrap.b32 	%r141, %r131, %r131, 30;
	shf.l.wrap.b32 	%r488, %r139, %r139, 5;
	// begin inline asm
	lop3.b32 %r134, %r135, %r141, %r137, 202;
	// end inline asm
	add.s32 	%r489, %r134, %r440;
	add.s32 	%r490, %r489, %r133;
	add.s32 	%r491, %r490, %r488;
	add.s32 	%r143, %r491, 1518500249;
	shf.l.wrap.b32 	%r145, %r135, %r135, 30;
	shf.l.wrap.b32 	%r492, %r143, %r143, 5;
	// begin inline asm
	lop3.b32 %r138, %r139, %r145, %r141, 202;
	// end inline asm
	add.s32 	%r493, %r138, %r451;
	add.s32 	%r494, %r493, %r137;
	add.s32 	%r495, %r494, %r492;
	add.s32 	%r147, %r495, 1518500249;
	shf.l.wrap.b32 	%r149, %r139, %r139, 30;
	shf.l.wrap.b32 	%r496, %r147, %r147, 5;
	// begin inline asm
	lop3.b32 %r142, %r143, %r149, %r145, 202;
	// end inline asm
	add.s32 	%r497, %r142, %r450;
	add.s32 	%r498, %r497, %r141;
	add.s32 	%r499, %r498, %r496;
	add.s32 	%r151, %r499, 1518500249;
	shf.l.wrap.b32 	%r153, %r143, %r143, 30;
	shf.l.wrap.b32 	%r500, %r151, %r151, 5;
	// begin inline asm
	lop3.b32 %r146, %r147, %r153, %r149, 202;
	// end inline asm
	add.s32 	%r501, %r146, %r449;
	add.s32 	%r502, %r501, %r145;
	add.s32 	%r503, %r502, %r500;
	add.s32 	%r155, %r503, 1518500249;
	shf.l.wrap.b32 	%r157, %r147, %r147, 30;
	shf.l.wrap.b32 	%r504, %r155, %r155, 5;
	// begin inline asm
	lop3.b32 %r150, %r151, %r157, %r153, 202;
	// end inline asm
	add.s32 	%r505, %r150, %r448;
	add.s32 	%r506, %r505, %r149;
	add.s32 	%r507, %r506, %r504;
	add.s32 	%r159, %r507, 1518500249;
	shf.l.wrap.b32 	%r161, %r151, %r151, 30;
	shf.l.wrap.b32 	%r508, %r159, %r159, 5;
	// begin inline asm
	lop3.b32 %r154, %r155, %r161, %r157, 202;
	// end inline asm
	add.s32 	%r509, %r154, %r459;
	add.s32 	%r510, %r509, %r153;
	add.s32 	%r511, %r510, %r508;
	add.s32 	%r163, %r511, 1518500249;
	shf.l.wrap.b32 	%r165, %r155, %r155, 30;
	shf.l.wrap.b32 	%r512, %r163, %r163, 5;
	// begin inline asm
	lop3.b32 %r158, %r159, %r165, %r161, 202;
	// end inline asm
	add.s32 	%r513, %r158, %r458;
	add.s32 	%r514, %r513, %r157;
	add.s32 	%r515, %r514, %r512;
	add.s32 	%r167, %r515, 1518500249;
	shf.l.wrap.b32 	%r169, %r159, %r159, 30;
	shf.l.wrap.b32 	%r516, %r167, %r167, 5;
	// begin inline asm
	lop3.b32 %r162, %r163, %r169, %r165, 202;
	// end inline asm
	add.s32 	%r517, %r162, %r457;
	add.s32 	%r518, %r517, %r161;
	add.s32 	%r519, %r518, %r516;
	add.s32 	%r171, %r519, 1518500249;
	shf.l.wrap.b32 	%r173, %r163, %r163, 30;
	shf.l.wrap.b32 	%r520, %r171, %r171, 5;
	// begin inline asm
	lop3.b32 %r166, %r167, %r173, %r169, 202;
	// end inline asm
	add.s32 	%r521, %r166, %r456;
	add.s32 	%r522, %r521, %r165;
	add.s32 	%r523, %r522, %r520;
	add.s32 	%r175, %r523, 1518500249;
	shf.l.wrap.b32 	%r177, %r167, %r167, 30;
	shf.l.wrap.b32 	%r524, %r175, %r175, 5;
	// begin inline asm
	lop3.b32 %r170, %r171, %r177, %r173, 202;
	// end inline asm
	xor.b32  	%r525, %r451, %r458;
	xor.b32  	%r526, %r525, %r433;
	xor.b32  	%r527, %r526, %r435;
	shf.l.wrap.b32 	%r528, %r527, %r527, 1;
	add.s32 	%r529, %r170, %r528;
	add.s32 	%r530, %r529, %r169;
	add.s32 	%r531, %r530, %r524;
	add.s32 	%r179, %r531, 1518500249;
	shf.l.wrap.b32 	%r181, %r171, %r171, 30;
	shf.l.wrap.b32 	%r532, %r179, %r179, 5;
	// begin inline asm
	lop3.b32 %r174, %r175, %r181, %r177, 202;
	// end inline asm
	xor.b32  	%r533, %r450, %r457;
	xor.b32  	%r534, %r533, %r432;
	xor.b32  	%r535, %r534, %r434;
	shf.l.wrap.b32 	%r536, %r535, %r535, 1;
	add.s32 	%r537, %r174, %r536;
	add.s32 	%r538, %r537, %r173;
	add.s32 	%r539, %r538, %r532;
	add.s32 	%r183, %r539, 1518500249;
	shf.l.wrap.b32 	%r185, %r175, %r175, 30;
	shf.l.wrap.b32 	%r540, %r183, %r183, 5;
	// begin inline asm
	lop3.b32 %r178, %r179, %r185, %r181, 202;
	// end inline asm
	xor.b32  	%r541, %r449, %r456;
	xor.b32  	%r542, %r541, %r443;
	xor.b32  	%r543, %r542, %r433;
	shf.l.wrap.b32 	%r544, %r543, %r543, 1;
	add.s32 	%r545, %r178, %r544;
	add.s32 	%r546, %r545, %r177;
	add.s32 	%r547, %r546, %r540;
	add.s32 	%r187, %r547, 1518500249;
	shf.l.wrap.b32 	%r189, %r179, %r179, 30;
	shf.l.wrap.b32 	%r548, %r187, %r187, 5;
	// begin inline asm
	lop3.b32 %r182, %r183, %r189, %r185, 202;
	// end inline asm
	xor.b32  	%r549, %r448, %r528;
	xor.b32  	%r550, %r549, %r442;
	xor.b32  	%r551, %r550, %r432;
	shf.l.wrap.b32 	%r552, %r551, %r551, 1;
	add.s32 	%r553, %r182, %r552;
	add.s32 	%r554, %r553, %r181;
	add.s32 	%r555, %r554, %r548;
	add.s32 	%r191, %r555, 1518500249;
	shf.l.wrap.b32 	%r193, %r183, %r183, 30;
	shf.l.wrap.b32 	%r556, %r191, %r191, 5;
	// begin inline asm
	lop3.b32 %r186, %r187, %r193, %r189, 150;
	// end inline asm
	xor.b32  	%r557, %r459, %r536;
	xor.b32  	%r558, %r557, %r441;
	xor.b32  	%r559, %r558, %r443;
	shf.l.wrap.b32 	%r560, %r559, %r559, 1;
	add.s32 	%r561, %r186, %r560;
	add.s32 	%r562, %r561, %r185;
	add.s32 	%r563, %r562, %r556;
	add.s32 	%r195, %r563, 1859775393;
	shf.l.wrap.b32 	%r197, %r187, %r187, 30;
	shf.l.wrap.b32 	%r564, %r195, %r195, 5;
	// begin inline asm
	lop3.b32 %r190, %r191, %r197, %r193, 150;
	// end inline asm
	xor.b32  	%r565, %r458, %r544;
	xor.b32  	%r566, %r565, %r440;
	xor.b32  	%r567, %r566, %r442;
	shf.l.wrap.b32 	%r568, %r567, %r567, 1;
	add.s32 	%r569, %r190, %r568;
	add.s32 	%r570, %r569, %r189;
	add.s32 	%r571, %r570, %r564;
	add.s32 	%r199, %r571, 1859775393;
	shf.l.wrap.b32 	%r201, %r191, %r191, 30;
	shf.l.wrap.b32 	%r572, %r199, %r199, 5;
	// begin inline asm
	lop3.b32 %r194, %r195, %r201, %r197, 150;
	// end inline asm
	xor.b32  	%r573, %r457, %r552;
	xor.b32  	%r574, %r573, %r451;
	xor.b32  	%r575, %r574, %r441;
	shf.l.wrap.b32 	%r576, %r575, %r575, 1;
	add.s32 	%r577, %r194, %r576;
	add.s32 	%r578, %r577, %r193;
	add.s32 	%r579, %r578, %r572;
	add.s32 	%r203, %r579, 1859775393;
	shf.l.wrap.b32 	%r205, %r195, %r195, 30;
	shf.l.wrap.b32 	%r580, %r203, %r203, 5;
	// begin inline asm
	lop3.b32 %r198, %r199, %r205, %r201, 150;
	// end inline asm
	xor.b32  	%r581, %r456, %r560;
	xor.b32  	%r582, %r581, %r450;
	xor.b32  	%r583, %r582, %r440;
	shf.l.wrap.b32 	%r584, %r583, %r583, 1;
	add.s32 	%r585, %r198, %r584;
	add.s32 	%r586, %r585, %r197;
	add.s32 	%r587, %r586, %r580;
	add.s32 	%r207, %r587, 1859775393;
	shf.l.wrap.b32 	%r209, %r199, %r199, 30;
	shf.l.wrap.b32 	%r588, %r207, %r207, 5;
	// begin inline asm
	lop3.b32 %r202, %r203, %r209, %r205, 150;
	// end inline asm
	xor.b32  	%r589, %r568, %r528;
	xor.b32  	%r590, %r589, %r449;
	xor.b32  	%r591, %r590, %r451;
	shf.l.wrap.b32 	%r592, %r591, %r591, 1;
	add.s32 	%r593, %r202, %r592;
	add.s32 	%r594, %r593, %r201;
	add.s32 	%r595, %r594, %r588;
	add.s32 	%r211, %r595, 1859775393;
	shf.l.wrap.b32 	%r213, %r203, %r203, 30;
	shf.l.wrap.b32 	%r596, %r211, %r211, 5;
	// begin inline asm
	lop3.b32 %r206, %r207, %r213, %r209, 150;
	// end inline asm
	xor.b32  	%r597, %r576, %r536;
	xor.b32  	%r598, %r597, %r448;
	xor.b32  	%r599, %r598, %r450;
	shf.l.wrap.b32 	%r600, %r599, %r599, 1;
	add.s32 	%r601, %r206, %r600;
	add.s32 	%r602, %r601, %r205;
	add.s32 	%r603, %r602, %r596;
	add.s32 	%r215, %r603, 1859775393;
	shf.l.wrap.b32 	%r217, %r207, %r207, 30;
	shf.l.wrap.b32 	%r604, %r215, %r215, 5;
	// begin inline asm
	lop3.b32 %r210, %r211, %r217, %r213, 150;
	// end inline asm
	xor.b32  	%r605, %r584, %r544;
	xor.b32  	%r606, %r605, %r459;
	xor.b32  	%r607, %r606, %r449;
	shf.l.wrap.b32 	%r608, %r607, %r607, 1;
	add.s32 	%r609, %r210, %r608;
	add.s32 	%r610, %r609, %r209;
	add.s32 	%r611, %r610, %r604;
	add.s32 	%r219, %r611, 1859775393;
	shf.l.wrap.b32 	%r221, %r211, %r211, 30;
	shf.l.wrap.b32 	%r612, %r219, %r219, 5;
	// begin inline asm
	lop3.b32 %r214, %r215, %r221, %r217, 150;
	// end inline asm
	xor.b32  	%r613, %r592, %r552;
	xor.b32  	%r614, %r613, %r458;
	xor.b32  	%r615, %r614, %r448;
	shf.l.wrap.b32 	%r616, %r615, %r615, 1;
	add.s32 	%r617, %r214, %r616;
	add.s32 	%r618, %r617, %r213;
	add.s32 	%r619, %r618, %r612;
	add.s32 	%r223, %r619, 1859775393;
	shf.l.wrap.b32 	%r225, %r215, %r215, 30;
	shf.l.wrap.b32 	%r620, %r223, %r223, 5;
	// begin inline asm
	lop3.b32 %r218, %r219, %r225, %r221, 150;
	// end inline asm
	xor.b32  	%r621, %r600, %r560;
	xor.b32  	%r622, %r621, %r457;
	xor.b32  	%r623, %r622, %r459;
	shf.l.wrap.b32 	%r624, %r623, %r623, 1;
	add.s32 	%r625, %r218, %r624;
	add.s32 	%r626, %r625, %r217;
	add.s32 	%r627, %r626, %r620;
	add.s32 	%r227, %r627, 1859775393;
	shf.l.wrap.b32 	%r229, %r219, %r219, 30;
	shf.l.wrap.b32 	%r628, %r227, %r227, 5;
	// begin inline asm
	lop3.b32 %r222, %r223, %r229, %r225, 150;
	// end inline asm
	xor.b32  	%r629, %r608, %r568;
	xor.b32  	%r630, %r629, %r456;
	xor.b32  	%r631, %r630, %r458;
	shf.l.wrap.b32 	%r632, %r631, %r631, 1;
	add.s32 	%r633, %r222, %r632;
	add.s32 	%r634, %r633, %r221;
	add.s32 	%r635, %r634, %r628;
	add.s32 	%r231, %r635, 1859775393;
	shf.l.wrap.b32 	%r233, %r223, %r223, 30;
	shf.l.wrap.b32 	%r636, %r231, %r231, 5;
	// begin inline asm
	lop3.b32 %r226, %r227, %r233, %r229, 150;
	// end inline asm
	xor.b32  	%r637, %r576, %r528;
	xor.b32  	%r638, %r637, %r616;
	xor.b32  	%r639, %r638, %r457;
	shf.l.wrap.b32 	%r640, %r639, %r639, 1;
	add.s32 	%r641, %r226, %r640;
	add.s32 	%r642, %r641, %r225;
	add.s32 	%r643, %r642, %r636;
	add.s32 	%r235, %r643, 1859775393;
	shf.l.wrap.b32 	%r237, %r227, %r227, 30;
	shf.l.wrap.b32 	%r644, %r235, %r235, 5;
	// begin inline asm
	lop3.b32 %r230, %r231, %r237, %r233, 150;
	// end inline asm
	xor.b32  	%r645, %r584, %r536;
	xor.b32  	%r646, %r645, %r624;
	xor.b32  	%r647, %r646, %r456;
	shf.l.wrap.b32 	%r648, %r647, %r647, 1;
	add.s32 	%r649, %r230, %r648;
	add.s32 	%r650, %r649, %r229;
	add.s32 	%r651, %r650, %r644;
	add.s32 	%r239, %r651, 1859775393;
	shf.l.wrap.b32 	%r241, %r231, %r231, 30;
	shf.l.wrap.b32 	%r652, %r239, %r239, 5;
	// begin inline asm
	lop3.b32 %r234, %r235, %r241, %r237, 150;
	// end inline asm
	xor.b32  	%r653, %r544, %r528;
	xor.b32  	%r654, %r653, %r592;
	xor.b32  	%r655, %r654, %r632;
	shf.l.wrap.b32 	%r656, %r655, %r655, 1;
	add.s32 	%r657, %r234, %r656;
	add.s32 	%r658, %r657, %r233;
	add.s32 	%r659, %r658, %r652;
	add.s32 	%r243, %r659, 1859775393;
	shf.l.wrap.b32 	%r245, %r235, %r235, 30;
	shf.l.wrap.b32 	%r660, %r243, %r243, 5;
	// begin inline asm
	lop3.b32 %r238, %r239, %r245, %r241, 150;
	// end inline asm
	xor.b32  	%r661, %r552, %r536;
	xor.b32  	%r662, %r661, %r600;
	xor.b32  	%r663, %r662, %r640;
	shf.l.wrap.b32 	%r664, %r663, %r663, 1;
	add.s32 	%r665, %r238, %r664;
	add.s32 	%r666, %r665, %r237;
	add.s32 	%r667, %r666, %r660;
	add.s32 	%r247, %r667, 1859775393;
	shf.l.wrap.b32 	%r249, %r239, %r239, 30;
	shf.l.wrap.b32 	%r668, %r247, %r247, 5;
	// begin inline asm
	lop3.b32 %r242, %r243, %r249, %r245, 150;
	// end inline asm
	xor.b32  	%r669, %r560, %r544;
	xor.b32  	%r670, %r669, %r608;
	xor.b32  	%r671, %r670, %r648;
	shf.l.wrap.b32 	%r672, %r671, %r671, 1;
	add.s32 	%r673, %r242, %r672;
	add.s32 	%r674, %r673, %r241;
	add.s32 	%r675, %r674, %r668;
	add.s32 	%r251, %r675, 1859775393;
	shf.l.wrap.b32 	%r253, %r243, %r243, 30;
	shf.l.wrap.b32 	%r676, %r251, %r251, 5;
	// begin inline asm
	lop3.b32 %r246, %r247, %r253, %r249, 150;
	// end inline asm
	xor.b32  	%r677, %r568, %r552;
	xor.b32  	%r678, %r677, %r616;
	xor.b32  	%r679, %r678, %r656;
	shf.l.wrap.b32 	%r680, %r679, %r679, 1;
	add.s32 	%r681, %r246, %r680;
	add.s32 	%r682, %r681, %r245;
	add.s32 	%r683, %r682, %r676;
	add.s32 	%r255, %r683, 1859775393;
	shf.l.wrap.b32 	%r257, %r247, %r247, 30;
	shf.l.wrap.b32 	%r684, %r255, %r255, 5;
	// begin inline asm
	lop3.b32 %r250, %r251, %r257, %r253, 150;
	// end inline asm
	xor.b32  	%r685, %r576, %r560;
	xor.b32  	%r686, %r685, %r624;
	xor.b32  	%r687, %r686, %r664;
	shf.l.wrap.b32 	%r688, %r687, %r687, 1;
	add.s32 	%r689, %r250, %r688;
	add.s32 	%r690, %r689, %r249;
	add.s32 	%r691, %r690, %r684;
	add.s32 	%r259, %r691, 1859775393;
	shf.l.wrap.b32 	%r261, %r251, %r251, 30;
	shf.l.wrap.b32 	%r692, %r259, %r259, 5;
	// begin inline asm
	lop3.b32 %r254, %r255, %r261, %r257, 150;
	// end inline asm
	xor.b32  	%r693, %r584, %r568;
	xor.b32  	%r694, %r693, %r632;
	xor.b32  	%r695, %r694, %r672;
	shf.l.wrap.b32 	%r696, %r695, %r695, 1;
	add.s32 	%r697, %r254, %r696;
	add.s32 	%r698, %r697, %r253;
	add.s32 	%r699, %r698, %r692;
	add.s32 	%r263, %r699, 1859775393;
	shf.l.wrap.b32 	%r265, %r255, %r255, 30;
	shf.l.wrap.b32 	%r700, %r263, %r263, 5;
	// begin inline asm
	lop3.b32 %r258, %r259, %r265, %r261, 150;
	// end inline asm
	xor.b32  	%r701, %r592, %r576;
	xor.b32  	%r702, %r701, %r640;
	xor.b32  	%r703, %r702, %r680;
	shf.l.wrap.b32 	%r704, %r703, %r703, 1;
	add.s32 	%r705, %r258, %r704;
	add.s32 	%r706, %r705, %r257;
	add.s32 	%r707, %r706, %r700;
	add.s32 	%r267, %r707, 1859775393;
	shf.l.wrap.b32 	%r269, %r259, %r259, 30;
	shf.l.wrap.b32 	%r708, %r267, %r267, 5;
	// begin inline asm
	lop3.b32 %r262, %r263, %r269, %r265, 150;
	// end inline asm
	xor.b32  	%r709, %r600, %r584;
	xor.b32  	%r710, %r709, %r648;
	xor.b32  	%r711, %r710, %r688;
	shf.l.wrap.b32 	%r712, %r711, %r711, 1;
	add.s32 	%r713, %r262, %r712;
	add.s32 	%r714, %r713, %r261;
	add.s32 	%r715, %r714, %r708;
	add.s32 	%r271, %r715, 1859775393;
	shf.l.wrap.b32 	%r273, %r263, %r263, 30;
	shf.l.wrap.b32 	%r716, %r271, %r271, 5;
	// begin inline asm
	lop3.b32 %r266, %r267, %r273, %r269, 232;
	// end inline asm
	xor.b32  	%r717, %r608, %r592;
	xor.b32  	%r718, %r717, %r656;
	xor.b32  	%r719, %r718, %r696;
	shf.l.wrap.b32 	%r720, %r719, %r719, 1;
	add.s32 	%r721, %r266, %r720;
	add.s32 	%r722, %r721, %r265;
	add.s32 	%r723, %r722, %r716;
	add.s32 	%r275, %r723, -1894007588;
	shf.l.wrap.b32 	%r277, %r267, %r267, 30;
	shf.l.wrap.b32 	%r724, %r275, %r275, 5;
	// begin inline asm
	lop3.b32 %r270, %r271, %r277, %r273, 232;
	// end inline asm
	xor.b32  	%r725, %r616, %r600;
	xor.b32  	%r726, %r725, %r664;
	xor.b32  	%r727, %r726, %r704;
	shf.l.wrap.b32 	%r728, %r727, %r727, 1;
	add.s32 	%r729, %r270, %r728;
	add.s32 	%r730, %r729, %r269;
	add.s32 	%r731, %r730, %r724;
	add.s32 	%r279, %r731, -1894007588;
	shf.l.wrap.b32 	%r281, %r271, %r271, 30;
	shf.l.wrap.b32 	%r732, %r279, %r279, 5;
	// begin inline asm
	lop3.b32 %r274, %r275, %r281, %r277, 232;
	// end inline asm
	xor.b32  	%r733, %r624, %r608;
	xor.b32  	%r734, %r733, %r672;
	xor.b32  	%r735, %r734, %r712;
	shf.l.wrap.b32 	%r736, %r735, %r735, 1;
	add.s32 	%r737, %r274, %r736;
	add.s32 	%r738, %r737, %r273;
	add.s32 	%r739, %r738, %r732;
	add.s32 	%r283, %r739, -1894007588;
	shf.l.wrap.b32 	%r285, %r275, %r275, 30;
	shf.l.wrap.b32 	%r740, %r283, %r283, 5;
	// begin inline asm
	lop3.b32 %r278, %r279, %r285, %r281, 232;
	// end inline asm
	xor.b32  	%r741, %r632, %r616;
	xor.b32  	%r742, %r741, %r680;
	xor.b32  	%r743, %r742, %r720;
	shf.l.wrap.b32 	%r744, %r743, %r743, 1;
	add.s32 	%r745, %r278, %r744;
	add.s32 	%r746, %r745, %r277;
	add.s32 	%r747, %r746, %r740;
	add.s32 	%r287, %r747, -1894007588;
	shf.l.wrap.b32 	%r289, %r279, %r279, 30;
	shf.l.wrap.b32 	%r748, %r287, %r287, 5;
	// begin inline asm
	lop3.b32 %r282, %r283, %r289, %r285, 232;
	// end inline asm
	xor.b32  	%r749, %r640, %r624;
	xor.b32  	%r750, %r749, %r688;
	xor.b32  	%r751, %r750, %r728;
	shf.l.wrap.b32 	%r752, %r751, %r751, 1;
	add.s32 	%r753, %r282, %r752;
	add.s32 	%r754, %r753, %r281;
	add.s32 	%r755, %r754, %r748;
	add.s32 	%r291, %r755, -1894007588;
	shf.l.wrap.b32 	%r293, %r283, %r283, 30;
	shf.l.wrap.b32 	%r756, %r291, %r291, 5;
	// begin inline asm
	lop3.b32 %r286, %r287, %r293, %r289, 232;
	// end inline asm
	xor.b32  	%r757, %r648, %r632;
	xor.b32  	%r758, %r757, %r696;
	xor.b32  	%r759, %r758, %r736;
	shf.l.wrap.b32 	%r760, %r759, %r759, 1;
	add.s32 	%r761, %r286, %r760;
	add.s32 	%r762, %r761, %r285;
	add.s32 	%r763, %r762, %r756;
	add.s32 	%r295, %r763, -1894007588;
	shf.l.wrap.b32 	%r297, %r287, %r287, 30;
	shf.l.wrap.b32 	%r764, %r295, %r295, 5;
	// begin inline asm
	lop3.b32 %r290, %r291, %r297, %r293, 232;
	// end inline asm
	xor.b32  	%r765, %r656, %r640;
	xor.b32  	%r766, %r765, %r704;
	xor.b32  	%r767, %r766, %r744;
	shf.l.wrap.b32 	%r768, %r767, %r767, 1;
	add.s32 	%r769, %r290, %r768;
	add.s32 	%r770, %r769, %r289;
	add.s32 	%r771, %r770, %r764;
	add.s32 	%r299, %r771, -1894007588;
	shf.l.wrap.b32 	%r301, %r291, %r291, 30;
	shf.l.wrap.b32 	%r772, %r299, %r299, 5;
	// begin inline asm
	lop3.b32 %r294, %r295, %r301, %r297, 232;
	// end inline asm
	xor.b32  	%r773, %r664, %r648;
	xor.b32  	%r774, %r773, %r712;
	xor.b32  	%r775, %r774, %r752;
	shf.l.wrap.b32 	%r776, %r775, %r775, 1;
	add.s32 	%r777, %r294, %r776;
	add.s32 	%r778, %r777, %r293;
	add.s32 	%r779, %r778, %r772;
	add.s32 	%r303, %r779, -1894007588;
	shf.l.wrap.b32 	%r305, %r295, %r295, 30;
	shf.l.wrap.b32 	%r780, %r303, %r303, 5;
	// begin inline asm
	lop3.b32 %r298, %r299, %r305, %r301, 232;
	// end inline asm
	xor.b32  	%r781, %r672, %r656;
	xor.b32  	%r782, %r781, %r720;
	xor.b32  	%r783, %r782, %r760;
	shf.l.wrap.b32 	%r784, %r783, %r783, 1;
	add.s32 	%r785, %r298, %r784;
	add.s32 	%r786, %r785, %r297;
	add.s32 	%r787, %r786, %r780;
	add.s32 	%r307, %r787, -1894007588;
	shf.l.wrap.b32 	%r309, %r299, %r299, 30;
	shf.l.wrap.b32 	%r788, %r307, %r307, 5;
	// begin inline asm
	lop3.b32 %r302, %r303, %r309, %r305, 232;
	// end inline asm
	xor.b32  	%r789, %r680, %r664;
	xor.b32  	%r790, %r789, %r728;
	xor.b32  	%r791, %r790, %r768;
	shf.l.wrap.b32 	%r792, %r791, %r791, 1;
	add.s32 	%r793, %r302, %r792;
	add.s32 	%r794, %r793, %r301;
	add.s32 	%r795, %r794, %r788;
	add.s32 	%r311, %r795, -1894007588;
	shf.l.wrap.b32 	%r313, %r303, %r303, 30;
	shf.l.wrap.b32 	%r796, %r311, %r311, 5;
	// begin inline asm
	lop3.b32 %r306, %r307, %r313, %r309, 232;
	// end inline asm
	xor.b32  	%r797, %r688, %r672;
	xor.b32  	%r798, %r797, %r736;
	xor.b32  	%r799, %r798, %r776;
	shf.l.wrap.b32 	%r800, %r799, %r799, 1;
	add.s32 	%r801, %r306, %r800;
	add.s32 	%r802, %r801, %r305;
	add.s32 	%r803, %r802, %r796;
	add.s32 	%r315, %r803, -1894007588;
	shf.l.wrap.b32 	%r317, %r307, %r307, 30;
	shf.l.wrap.b32 	%r804, %r315, %r315, 5;
	// begin inline asm
	lop3.b32 %r310, %r311, %r317, %r313, 232;
	// end inline asm
	xor.b32  	%r805, %r696, %r680;
	xor.b32  	%r806, %r805, %r744;
	xor.b32  	%r807, %r806, %r784;
	shf.l.wrap.b32 	%r808, %r807, %r807, 1;
	add.s32 	%r809, %r310, %r808;
	add.s32 	%r810, %r809, %r309;
	add.s32 	%r811, %r810, %r804;
	add.s32 	%r319, %r811, -1894007588;
	shf.l.wrap.b32 	%r321, %r311, %r311, 30;
	shf.l.wrap.b32 	%r812, %r319, %r319, 5;
	// begin inline asm
	lop3.b32 %r314, %r315, %r321, %r317, 232;
	// end inline asm
	xor.b32  	%r813, %r704, %r688;
	xor.b32  	%r814, %r813, %r752;
	xor.b32  	%r815, %r814, %r792;
	shf.l.wrap.b32 	%r816, %r815, %r815, 1;
	add.s32 	%r817, %r314, %r816;
	add.s32 	%r818, %r817, %r313;
	add.s32 	%r819, %r818, %r812;
	add.s32 	%r323, %r819, -1894007588;
	shf.l.wrap.b32 	%r325, %r315, %r315, 30;
	shf.l.wrap.b32 	%r820, %r323, %r323, 5;
	// begin inline asm
	lop3.b32 %r318, %r319, %r325, %r321, 232;
	// end inline asm
	xor.b32  	%r821, %r712, %r696;
	xor.b32  	%r822, %r821, %r760;
	xor.b32  	%r823, %r822, %r800;
	shf.l.wrap.b32 	%r824, %r823, %r823, 1;
	add.s32 	%r825, %r318, %r824;
	add.s32 	%r826, %r825, %r317;
	add.s32 	%r827, %r826, %r820;
	add.s32 	%r327, %r827, -1894007588;
	shf.l.wrap.b32 	%r329, %r319, %r319, 30;
	shf.l.wrap.b32 	%r828, %r327, %r327, 5;
	// begin inline asm
	lop3.b32 %r322, %r323, %r329, %r325, 232;
	// end inline asm
	xor.b32  	%r829, %r720, %r704;
	xor.b32  	%r830, %r829, %r768;
	xor.b32  	%r831, %r830, %r808;
	shf.l.wrap.b32 	%r832, %r831, %r831, 1;
	add.s32 	%r833, %r322, %r832;
	add.s32 	%r834, %r833, %r321;
	add.s32 	%r835, %r834, %r828;
	add.s32 	%r331, %r835, -1894007588;
	shf.l.wrap.b32 	%r333, %r323, %r323, 30;
	shf.l.wrap.b32 	%r836, %r331, %r331, 5;
	// begin inline asm
	lop3.b32 %r326, %r327, %r333, %r329, 232;
	// end inline asm
	xor.b32  	%r837, %r728, %r712;
	xor.b32  	%r838, %r837, %r776;
	xor.b32  	%r839, %r838, %r816;
	shf.l.wrap.b32 	%r840, %r839, %r839, 1;
	add.s32 	%r841, %r326, %r840;
	add.s32 	%r842, %r841, %r325;
	add.s32 	%r843, %r842, %r836;
	add.s32 	%r335, %r843, -1894007588;
	shf.l.wrap.b32 	%r337, %r327, %r327, 30;
	shf.l.wrap.b32 	%r844, %r335, %r335, 5;
	// begin inline asm
	lop3.b32 %r330, %r331, %r337, %r333, 232;
	// end inline asm
	xor.b32  	%r845, %r736, %r720;
	xor.b32  	%r846, %r845, %r784;
	xor.b32  	%r847, %r846, %r824;
	shf.l.wrap.b32 	%r848, %r847, %r847, 1;
	add.s32 	%r849, %r330, %r848;
	add.s32 	%r850, %r849, %r329;
	add.s32 	%r851, %r850, %r844;
	add.s32 	%r339, %r851, -1894007588;
	shf.l.wrap.b32 	%r341, %r331, %r331, 30;
	shf.l.wrap.b32 	%r852, %r339, %r339, 5;
	// begin inline asm
	lop3.b32 %r334, %r335, %r341, %r337, 232;
	// end inline asm
	xor.b32  	%r853, %r744, %r728;
	xor.b32  	%r854, %r853, %r792;
	xor.b32  	%r855, %r854, %r832;
	shf.l.wrap.b32 	%r856, %r855, %r855, 1;
	add.s32 	%r857, %r334, %r856;
	add.s32 	%r858, %r857, %r333;
	add.s32 	%r859, %r858, %r852;
	add.s32 	%r343, %r859, -1894007588;
	shf.l.wrap.b32 	%r345, %r335, %r335, 30;
	shf.l.wrap.b32 	%r860, %r343, %r343, 5;
	// begin inline asm
	lop3.b32 %r338, %r339, %r345, %r341, 232;
	// end inline asm
	xor.b32  	%r861, %r752, %r736;
	xor.b32  	%r862, %r861, %r800;
	xor.b32  	%r863, %r862, %r840;
	shf.l.wrap.b32 	%r864, %r863, %r863, 1;
	add.s32 	%r865, %r338, %r864;
	add.s32 	%r866, %r865, %r337;
	add.s32 	%r867, %r866, %r860;
	add.s32 	%r347, %r867, -1894007588;
	shf.l.wrap.b32 	%r349, %r339, %r339, 30;
	shf.l.wrap.b32 	%r868, %r347, %r347, 5;
	// begin inline asm
	lop3.b32 %r342, %r343, %r349, %r345, 232;
	// end inline asm
	xor.b32  	%r869, %r760, %r744;
	xor.b32  	%r870, %r869, %r808;
	xor.b32  	%r871, %r870, %r848;
	shf.l.wrap.b32 	%r872, %r871, %r871, 1;
	add.s32 	%r873, %r342, %r872;
	add.s32 	%r874, %r873, %r341;
	add.s32 	%r875, %r874, %r868;
	add.s32 	%r351, %r875, -1894007588;
	shf.l.wrap.b32 	%r353, %r343, %r343, 30;
	shf.l.wrap.b32 	%r876, %r351, %r351, 5;
	// begin inline asm
	lop3.b32 %r346, %r347, %r353, %r349, 150;
	// end inline asm
	xor.b32  	%r877, %r768, %r752;
	xor.b32  	%r878, %r877, %r816;
	xor.b32  	%r879, %r878, %r856;
	shf.l.wrap.b32 	%r880, %r879, %r879, 1;
	add.s32 	%r881, %r346, %r880;
	add.s32 	%r882, %r881, %r345;
	add.s32 	%r883, %r882, %r876;
	add.s32 	%r355, %r883, -899497514;
	shf.l.wrap.b32 	%r357, %r347, %r347, 30;
	shf.l.wrap.b32 	%r884, %r355, %r355, 5;
	// begin inline asm
	lop3.b32 %r350, %r351, %r357, %r353, 150;
	// end inline asm
	xor.b32  	%r885, %r776, %r760;
	xor.b32  	%r886, %r885, %r824;
	xor.b32  	%r887, %r886, %r864;
	shf.l.wrap.b32 	%r888, %r887, %r887, 1;
	add.s32 	%r889, %r350, %r888;
	add.s32 	%r890, %r889, %r349;
	add.s32 	%r891, %r890, %r884;
	add.s32 	%r359, %r891, -899497514;
	shf.l.wrap.b32 	%r361, %r351, %r351, 30;
	shf.l.wrap.b32 	%r892, %r359, %r359, 5;
	// begin inline asm
	lop3.b32 %r354, %r355, %r361, %r357, 150;
	// end inline asm
	xor.b32  	%r893, %r784, %r768;
	xor.b32  	%r894, %r893, %r832;
	xor.b32  	%r895, %r894, %r872;
	shf.l.wrap.b32 	%r896, %r895, %r895, 1;
	add.s32 	%r897, %r354, %r896;
	add.s32 	%r898, %r897, %r353;
	add.s32 	%r899, %r898, %r892;
	add.s32 	%r363, %r899, -899497514;
	shf.l.wrap.b32 	%r365, %r355, %r355, 30;
	shf.l.wrap.b32 	%r900, %r363, %r363, 5;
	// begin inline asm
	lop3.b32 %r358, %r359, %r365, %r361, 150;
	// end inline asm
	xor.b32  	%r901, %r792, %r776;
	xor.b32  	%r902, %r901, %r840;
	xor.b32  	%r903, %r902, %r880;
	shf.l.wrap.b32 	%r904, %r903, %r903, 1;
	add.s32 	%r905, %r358, %r904;
	add.s32 	%r906, %r905, %r357;
	add.s32 	%r907, %r906, %r900;
	add.s32 	%r367, %r907, -899497514;
	shf.l.wrap.b32 	%r369, %r359, %r359, 30;
	shf.l.wrap.b32 	%r908, %r367, %r367, 5;
	// begin inline asm
	lop3.b32 %r362, %r363, %r369, %r365, 150;
	// end inline asm
	xor.b32  	%r909, %r800, %r784;
	xor.b32  	%r910, %r909, %r848;
	xor.b32  	%r911, %r910, %r888;
	shf.l.wrap.b32 	%r912, %r911, %r911, 1;
	add.s32 	%r913, %r362, %r912;
	add.s32 	%r914, %r913, %r361;
	add.s32 	%r915, %r914, %r908;
	add.s32 	%r371, %r915, -899497514;
	shf.l.wrap.b32 	%r373, %r363, %r363, 30;
	shf.l.wrap.b32 	%r916, %r371, %r371, 5;
	// begin inline asm
	lop3.b32 %r366, %r367, %r373, %r369, 150;
	// end inline asm
	xor.b32  	%r917, %r808, %r792;
	xor.b32  	%r918, %r917, %r856;
	xor.b32  	%r919, %r918, %r896;
	shf.l.wrap.b32 	%r920, %r919, %r919, 1;
	add.s32 	%r921, %r366, %r920;
	add.s32 	%r922, %r921, %r365;
	add.s32 	%r923, %r922, %r916;
	add.s32 	%r375, %r923, -899497514;
	shf.l.wrap.b32 	%r377, %r367, %r367, 30;
	shf.l.wrap.b32 	%r924, %r375, %r375, 5;
	// begin inline asm
	lop3.b32 %r370, %r371, %r377, %r373, 150;
	// end inline asm
	xor.b32  	%r925, %r816, %r800;
	xor.b32  	%r926, %r925, %r864;
	xor.b32  	%r927, %r926, %r904;
	shf.l.wrap.b32 	%r928, %r927, %r927, 1;
	add.s32 	%r929, %r370, %r928;
	add.s32 	%r930, %r929, %r369;
	add.s32 	%r931, %r930, %r924;
	add.s32 	%r379, %r931, -899497514;
	shf.l.wrap.b32 	%r381, %r371, %r371, 30;
	shf.l.wrap.b32 	%r932, %r379, %r379, 5;
	// begin inline asm
	lop3.b32 %r374, %r375, %r381, %r377, 150;
	// end inline asm
	xor.b32  	%r933, %r824, %r808;
	xor.b32  	%r934, %r933, %r872;
	xor.b32  	%r935, %r934, %r912;
	shf.l.wrap.b32 	%r936, %r935, %r935, 1;
	add.s32 	%r937, %r374, %r936;
	add.s32 	%r938, %r937, %r373;
	add.s32 	%r939, %r938, %r932;
	add.s32 	%r383, %r939, -899497514;
	shf.l.wrap.b32 	%r385, %r375, %r375, 30;
	shf.l.wrap.b32 	%r940, %r383, %r383, 5;
	// begin inline asm
	lop3.b32 %r378, %r379, %r385, %r381, 150;
	// end inline asm
	xor.b32  	%r941, %r832, %r816;
	xor.b32  	%r942, %r941, %r880;
	xor.b32  	%r943, %r942, %r920;
	shf.l.wrap.b32 	%r944, %r943, %r943, 1;
	add.s32 	%r945, %r378, %r944;
	add.s32 	%r946, %r945, %r377;
	add.s32 	%r947, %r946, %r940;
	add.s32 	%r387, %r947, -899497514;
	shf.l.wrap.b32 	%r389, %r379, %r379, 30;
	shf.l.wrap.b32 	%r948, %r387, %r387, 5;
	// begin inline asm
	lop3.b32 %r382, %r383, %r389, %r385, 150;
	// end inline asm
	xor.b32  	%r949, %r840, %r824;
	xor.b32  	%r950, %r949, %r888;
	xor.b32  	%r951, %r950, %r928;
	shf.l.wrap.b32 	%r952, %r951, %r951, 1;
	add.s32 	%r953, %r382, %r952;
	add.s32 	%r954, %r953, %r381;
	add.s32 	%r955, %r954, %r948;
	add.s32 	%r391, %r955, -899497514;
	shf.l.wrap.b32 	%r393, %r383, %r383, 30;
	shf.l.wrap.b32 	%r956, %r391, %r391, 5;
	// begin inline asm
	lop3.b32 %r386, %r387, %r393, %r389, 150;
	// end inline asm
	xor.b32  	%r957, %r848, %r832;
	xor.b32  	%r958, %r957, %r896;
	xor.b32  	%r959, %r958, %r936;
	shf.l.wrap.b32 	%r960, %r959, %r959, 1;
	add.s32 	%r961, %r386, %r960;
	add.s32 	%r962, %r961, %r385;
	add.s32 	%r963, %r962, %r956;
	add.s32 	%r395, %r963, -899497514;
	shf.l.wrap.b32 	%r397, %r387, %r387, 30;
	shf.l.wrap.b32 	%r964, %r395, %r395, 5;
	// begin inline asm
	lop3.b32 %r390, %r391, %r397, %r393, 150;
	// end inline asm
	xor.b32  	%r965, %r856, %r840;
	xor.b32  	%r966, %r965, %r904;
	xor.b32  	%r967, %r966, %r944;
	shf.l.wrap.b32 	%r968, %r967, %r967, 1;
	add.s32 	%r969, %r390, %r968;
	add.s32 	%r970, %r969, %r389;
	add.s32 	%r971, %r970, %r964;
	add.s32 	%r399, %r971, -899497514;
	shf.l.wrap.b32 	%r401, %r391, %r391, 30;
	shf.l.wrap.b32 	%r972, %r399, %r399, 5;
	// begin inline asm
	lop3.b32 %r394, %r395, %r401, %r397, 150;
	// end inline asm
	xor.b32  	%r973, %r864, %r848;
	xor.b32  	%r974, %r973, %r912;
	xor.b32  	%r975, %r974, %r952;
	shf.l.wrap.b32 	%r976, %r975, %r975, 1;
	add.s32 	%r977, %r394, %r976;
	add.s32 	%r978, %r977, %r393;
	add.s32 	%r979, %r978, %r972;
	add.s32 	%r403, %r979, -899497514;
	shf.l.wrap.b32 	%r405, %r395, %r395, 30;
	shf.l.wrap.b32 	%r980, %r403, %r403, 5;
	// begin inline asm
	lop3.b32 %r398, %r399, %r405, %r401, 150;
	// end inline asm
	xor.b32  	%r981, %r872, %r856;
	xor.b32  	%r982, %r981, %r920;
	xor.b32  	%r983, %r982, %r960;
	shf.l.wrap.b32 	%r984, %r983, %r983, 1;
	add.s32 	%r985, %r398, %r984;
	add.s32 	%r986, %r985, %r397;
	add.s32 	%r987, %r986, %r980;
	add.s32 	%r407, %r987, -899497514;
	shf.l.wrap.b32 	%r409, %r399, %r399, 30;
	shf.l.wrap.b32 	%r988, %r407, %r407, 5;
	// begin inline asm
	lop3.b32 %r402, %r403, %r409, %r405, 150;
	// end inline asm
	xor.b32  	%r989, %r880, %r864;
	xor.b32  	%r990, %r989, %r928;
	xor.b32  	%r991, %r990, %r968;
	shf.l.wrap.b32 	%r992, %r991, %r991, 1;
	add.s32 	%r993, %r402, %r992;
	add.s32 	%r994, %r993, %r401;
	add.s32 	%r995, %r994, %r988;
	add.s32 	%r411, %r995, -899497514;
	shf.l.wrap.b32 	%r413, %r403, %r403, 30;
	shf.l.wrap.b32 	%r996, %r411, %r411, 5;
	// begin inline asm
	lop3.b32 %r406, %r407, %r413, %r409, 150;
	// end inline asm
	xor.b32  	%r997, %r888, %r872;
	xor.b32  	%r998, %r997, %r936;
	xor.b32  	%r999, %r998, %r976;
	shf.l.wrap.b32 	%r1000, %r999, %r999, 1;
	add.s32 	%r1001, %r406, %r1000;
	add.s32 	%r1002, %r1001, %r405;
	add.s32 	%r1003, %r1002, %r996;
	add.s32 	%r415, %r1003, -899497514;
	shf.l.wrap.b32 	%r417, %r407, %r407, 30;
	shf.l.wrap.b32 	%r1004, %r415, %r415, 5;
	// begin inline asm
	lop3.b32 %r410, %r411, %r417, %r413, 150;
	// end inline asm
	xor.b32  	%r1005, %r896, %r880;
	xor.b32  	%r1006, %r1005, %r944;
	xor.b32  	%r1007, %r1006, %r984;
	shf.l.wrap.b32 	%r1008, %r1007, %r1007, 1;
	add.s32 	%r1009, %r410, %r1008;
	add.s32 	%r1010, %r1009, %r409;
	add.s32 	%r1011, %r1010, %r1004;
	add.s32 	%r419, %r1011, -899497514;
	shf.l.wrap.b32 	%r421, %r411, %r411, 30;
	shf.l.wrap.b32 	%r1012, %r419, %r419, 5;
	// begin inline asm
	lop3.b32 %r414, %r415, %r421, %r417, 150;
	// end inline asm
	xor.b32  	%r1013, %r904, %r888;
	xor.b32  	%r1014, %r1013, %r952;
	xor.b32  	%r1015, %r1014, %r992;
	shf.l.wrap.b32 	%r1016, %r1015, %r1015, 1;
	add.s32 	%r1017, %r414, %r1016;
	add.s32 	%r1018, %r1017, %r413;
	add.s32 	%r1019, %r1018, %r1012;
	add.s32 	%r423, %r1019, -899497514;
	shf.l.wrap.b32 	%r425, %r415, %r415, 30;
	shf.l.wrap.b32 	%r1020, %r423, %r423, 5;
	// begin inline asm
	lop3.b32 %r418, %r419, %r425, %r421, 150;
	// end inline asm
	xor.b32  	%r1021, %r912, %r896;
	xor.b32  	%r1022, %r1021, %r960;
	xor.b32  	%r1023, %r1022, %r1000;
	shf.l.wrap.b32 	%r1024, %r1023, %r1023, 1;
	add.s32 	%r1025, %r418, %r1024;
	add.s32 	%r1026, %r1025, %r417;
	add.s32 	%r1027, %r1026, %r1020;
	add.s32 	%r1028, %r1027, -899497514;
	shf.l.wrap.b32 	%r424, %r419, %r419, 30;
	shf.l.wrap.b32 	%r1029, %r1028, %r1028, 5;
	// begin inline asm
	lop3.b32 %r422, %r423, %r424, %r425, 150;
	// end inline asm
	xor.b32  	%r1030, %r920, %r904;
	xor.b32  	%r1031, %r1030, %r968;
	xor.b32  	%r1032, %r1031, %r1008;
	shf.l.wrap.b32 	%r1033, %r1032, %r1032, 1;
	shf.l.wrap.b32 	%r1034, %r423, %r423, 30;
	add.s32 	%r1035, %r3817, %r422;
	add.s32 	%r1036, %r1035, %r1033;
	add.s32 	%r1037, %r1036, %r421;
	add.s32 	%r1038, %r1037, %r1029;
	add.s32 	%r3817, %r1038, -899497514;
	add.s32 	%r3816, %r1028, %r3816;
	add.s32 	%r3815, %r1034, %r3815;
	add.s32 	%r3814, %r424, %r3814;
	add.s32 	%r3813, %r425, %r3813;
	add.s32 	%r1039, %r3812, 128;
	setp.gt.u32 	%p3, %r1039, %r2;
	mov.u32 	%r3812, %r3824;
	@%p3 bra 	$L__BB2_5;
	bra.uni 	$L__BB2_3;

$L__BB2_5:
	mov.u32 	%r3823, 0;
	st.local.v4.u32 	[%rd2], {%r3823, %r3823, %r3823, %r3823};
	st.local.v4.u32 	[%rd2+16], {%r3823, %r3823, %r3823, %r3823};
	st.local.v4.u32 	[%rd2+32], {%r3823, %r3823, %r3823, %r3823};
	st.local.v4.u32 	[%rd2+48], {%r3823, %r3823, %r3823, %r3823};
	setp.le.u32 	%p4, %r2, %r3824;
	@%p4 bra 	$L__BB2_11;

	sub.s32 	%r29, %r2, %r3824;
	not.b32 	%r1043, %r3824;
	add.s32 	%r1044, %r2, %r1043;
	and.b32  	%r3827, %r29, 3;
	setp.lt.u32 	%p5, %r1044, 3;
	@%p5 bra 	$L__BB2_9;

	sub.s32 	%r3822, %r29, %r3827;
	mov.u32 	%r3823, 0;
	add.s64 	%rd25, %rd4, 12;

$L__BB2_8:
	cvt.u64.u32 	%rd24, %r3824;
	add.s64 	%rd26, %rd25, %rd24;
	ld.global.u8 	%rs3, [%rd26];
	or.b32  	%r1046, %r3823, 3;
	cvt.u64.u32 	%rd27, %r1046;
	add.s64 	%rd28, %rd2, %rd27;
	st.local.u8 	[%rd28], %rs3;
	add.s32 	%r1047, %r3824, 1;
	cvt.u64.u32 	%rd29, %r1047;
	add.s64 	%rd30, %rd25, %rd29;
	ld.global.u8 	%rs4, [%rd30];
	add.s32 	%r1048, %r3823, 1;
	xor.b32  	%r1049, %r1048, 3;
	cvt.u64.u32 	%rd31, %r1049;
	add.s64 	%rd32, %rd2, %rd31;
	st.local.u8 	[%rd32], %rs4;
	add.s32 	%r1050, %r3824, 2;
	cvt.u64.u32 	%rd33, %r1050;
	add.s64 	%rd34, %rd25, %rd33;
	ld.global.u8 	%rs5, [%rd34];
	add.s32 	%r1051, %r3823, 2;
	xor.b32  	%r1052, %r1051, 3;
	cvt.u64.u32 	%rd35, %r1052;
	add.s64 	%rd36, %rd2, %rd35;
	st.local.u8 	[%rd36], %rs5;
	add.s32 	%r1053, %r3824, 3;
	cvt.u64.u32 	%rd37, %r1053;
	add.s64 	%rd38, %rd25, %rd37;
	ld.global.u8 	%rs6, [%rd38];
	add.s32 	%r1054, %r3823, 3;
	and.b32  	%r1055, %r1054, -4;
	cvt.u64.u32 	%rd39, %r1055;
	add.s64 	%rd40, %rd2, %rd39;
	st.local.u8 	[%rd40], %rs6;
	add.s32 	%r3823, %r3823, 4;
	add.s32 	%r3824, %r3824, 4;
	add.s32 	%r3822, %r3822, -4;
	setp.ne.s32 	%p6, %r3822, 0;
	@%p6 bra 	$L__BB2_8;

$L__BB2_9:
	setp.eq.s32 	%p7, %r3827, 0;
	@%p7 bra 	$L__BB2_11;

$L__BB2_10:
	.pragma "nounroll";
	cvt.u64.u32 	%rd41, %r3824;
	add.s64 	%rd42, %rd4, %rd41;
	ld.global.u8 	%rs7, [%rd42+12];
	xor.b32  	%r1056, %r3823, 3;
	cvt.u64.u32 	%rd43, %r1056;
	add.s64 	%rd44, %rd2, %rd43;
	st.local.u8 	[%rd44], %rs7;
	add.s32 	%r3823, %r3823, 1;
	add.s32 	%r3824, %r3824, 1;
	add.s32 	%r3827, %r3827, -1;
	setp.ne.s32 	%p8, %r3827, 0;
	@%p8 bra 	$L__BB2_10;

$L__BB2_11:
	setp.lt.u32 	%p9, %r3819, 52;
	@%p9 bra 	$L__BB2_20;
	bra.uni 	$L__BB2_12;

$L__BB2_20:
	add.s32 	%r1997, %r3819, 3;
	xor.b32  	%r1998, %r1997, 3;
	cvt.u64.u32 	%rd53, %r1998;
	add.s64 	%rd54, %rd2, %rd53;
	st.local.u8 	[%rd54], %rs1;
	add.s32 	%r1999, %r3819, 4;
	xor.b32  	%r2000, %r1999, 3;
	cvt.u64.u32 	%rd55, %r2000;
	add.s64 	%rd56, %rd2, %rd55;
	mov.u16 	%rs10, 128;
	st.local.u8 	[%rd56], %rs10;
	bra.uni 	$L__BB2_21;

$L__BB2_12:
	setp.gt.u32 	%p10, %r3819, 60;
	@%p10 bra 	$L__BB2_14;

	add.s32 	%r1057, %r3819, 3;
	xor.b32  	%r1058, %r1057, 3;
	cvt.u64.u32 	%rd45, %r1058;
	add.s64 	%rd46, %rd2, %rd45;
	st.local.u8 	[%rd46], %rs1;

$L__BB2_14:
	setp.gt.u32 	%p11, %r3819, 59;
	@%p11 bra 	$L__BB2_16;

	add.s32 	%r1059, %r3819, 4;
	xor.b32  	%r1060, %r1059, 3;
	cvt.u64.u32 	%rd47, %r1060;
	add.s64 	%rd48, %rd2, %rd47;
	mov.u16 	%rs8, 128;
	st.local.u8 	[%rd48], %rs8;

$L__BB2_16:
	shf.l.wrap.b32 	%r1381, %r3817, %r3817, 5;
	ld.local.v4.u32 	{%r1382, %r1383, %r1384, %r1385}, [%rd2];
	add.s32 	%r1390, %r1381, %r3813;
	// begin inline asm
	lop3.b32 %r1061, %r3816, %r3815, %r3814, 202;
	// end inline asm
	add.s32 	%r1391, %r1390, %r1061;
	add.s32 	%r1392, %r1391, %r1382;
	add.s32 	%r1070, %r1392, 1518500249;
	shf.l.wrap.b32 	%r1393, %r1070, %r1070, 5;
	shf.l.wrap.b32 	%r1072, %r3816, %r3816, 30;
	// begin inline asm
	lop3.b32 %r1065, %r3817, %r1072, %r3815, 202;
	// end inline asm
	add.s32 	%r1394, %r3814, %r1065;
	add.s32 	%r1395, %r1394, %r1383;
	add.s32 	%r1396, %r1395, %r1393;
	add.s32 	%r1074, %r1396, 1518500249;
	shf.l.wrap.b32 	%r1397, %r1074, %r1074, 5;
	shf.l.wrap.b32 	%r1076, %r3817, %r3817, 30;
	// begin inline asm
	lop3.b32 %r1069, %r1070, %r1076, %r1072, 202;
	// end inline asm
	add.s32 	%r1398, %r3815, %r1069;
	add.s32 	%r1399, %r1398, %r1384;
	add.s32 	%r1400, %r1399, %r1397;
	add.s32 	%r1078, %r1400, 1518500249;
	shf.l.wrap.b32 	%r1080, %r1070, %r1070, 30;
	shf.l.wrap.b32 	%r1401, %r1078, %r1078, 5;
	// begin inline asm
	lop3.b32 %r1073, %r1074, %r1080, %r1076, 202;
	// end inline asm
	add.s32 	%r1402, %r1072, %r1073;
	add.s32 	%r1403, %r1402, %r1385;
	add.s32 	%r1404, %r1403, %r1401;
	add.s32 	%r1082, %r1404, 1518500249;
	shf.l.wrap.b32 	%r1084, %r1074, %r1074, 30;
	shf.l.wrap.b32 	%r1405, %r1082, %r1082, 5;
	// begin inline asm
	lop3.b32 %r1077, %r1078, %r1084, %r1080, 202;
	// end inline asm
	ld.local.v4.u32 	{%r1406, %r1407, %r1408, %r1409}, [%rd2+16];
	add.s32 	%r1414, %r1076, %r1077;
	add.s32 	%r1415, %r1414, %r1406;
	add.s32 	%r1416, %r1415, %r1405;
	add.s32 	%r1086, %r1416, 1518500249;
	shf.l.wrap.b32 	%r1088, %r1078, %r1078, 30;
	shf.l.wrap.b32 	%r1417, %r1086, %r1086, 5;
	// begin inline asm
	lop3.b32 %r1081, %r1082, %r1088, %r1084, 202;
	// end inline asm
	add.s32 	%r1418, %r1080, %r1081;
	add.s32 	%r1419, %r1418, %r1407;
	add.s32 	%r1420, %r1419, %r1417;
	add.s32 	%r1090, %r1420, 1518500249;
	shf.l.wrap.b32 	%r1092, %r1082, %r1082, 30;
	shf.l.wrap.b32 	%r1421, %r1090, %r1090, 5;
	// begin inline asm
	lop3.b32 %r1085, %r1086, %r1092, %r1088, 202;
	// end inline asm
	add.s32 	%r1422, %r1084, %r1085;
	add.s32 	%r1423, %r1422, %r1408;
	add.s32 	%r1424, %r1423, %r1421;
	add.s32 	%r1094, %r1424, 1518500249;
	shf.l.wrap.b32 	%r1096, %r1086, %r1086, 30;
	shf.l.wrap.b32 	%r1425, %r1094, %r1094, 5;
	// begin inline asm
	lop3.b32 %r1089, %r1090, %r1096, %r1092, 202;
	// end inline asm
	add.s32 	%r1426, %r1089, %r1409;
	add.s32 	%r1427, %r1426, %r1088;
	add.s32 	%r1428, %r1427, %r1425;
	add.s32 	%r1098, %r1428, 1518500249;
	shf.l.wrap.b32 	%r1100, %r1090, %r1090, 30;
	shf.l.wrap.b32 	%r1429, %r1098, %r1098, 5;
	// begin inline asm
	lop3.b32 %r1093, %r1094, %r1100, %r1096, 202;
	// end inline asm
	ld.local.v4.u32 	{%r1430, %r1431, %r1432, %r1433}, [%rd2+32];
	add.s32 	%r1438, %r1093, %r1430;
	add.s32 	%r1439, %r1438, %r1092;
	add.s32 	%r1440, %r1439, %r1429;
	add.s32 	%r1102, %r1440, 1518500249;
	shf.l.wrap.b32 	%r1104, %r1094, %r1094, 30;
	shf.l.wrap.b32 	%r1441, %r1102, %r1102, 5;
	// begin inline asm
	lop3.b32 %r1097, %r1098, %r1104, %r1100, 202;
	// end inline asm
	add.s32 	%r1442, %r1097, %r1431;
	add.s32 	%r1443, %r1442, %r1096;
	add.s32 	%r1444, %r1443, %r1441;
	add.s32 	%r1106, %r1444, 1518500249;
	shf.l.wrap.b32 	%r1108, %r1098, %r1098, 30;
	shf.l.wrap.b32 	%r1445, %r1106, %r1106, 5;
	// begin inline asm
	lop3.b32 %r1101, %r1102, %r1108, %r1104, 202;
	// end inline asm
	add.s32 	%r1446, %r1101, %r1432;
	add.s32 	%r1447, %r1446, %r1100;
	add.s32 	%r1448, %r1447, %r1445;
	add.s32 	%r1110, %r1448, 1518500249;
	shf.l.wrap.b32 	%r1112, %r1102, %r1102, 30;
	shf.l.wrap.b32 	%r1449, %r1110, %r1110, 5;
	// begin inline asm
	lop3.b32 %r1105, %r1106, %r1112, %r1108, 202;
	// end inline asm
	add.s32 	%r1450, %r1105, %r1433;
	add.s32 	%r1451, %r1450, %r1104;
	add.s32 	%r1452, %r1451, %r1449;
	add.s32 	%r1114, %r1452, 1518500249;
	shf.l.wrap.b32 	%r1116, %r1106, %r1106, 30;
	shf.l.wrap.b32 	%r1453, %r1114, %r1114, 5;
	// begin inline asm
	lop3.b32 %r1109, %r1110, %r1116, %r1112, 202;
	// end inline asm
	ld.local.v4.u32 	{%r1454, %r1455, %r1456, %r1457}, [%rd2+48];
	add.s32 	%r1462, %r1109, %r1454;
	add.s32 	%r1463, %r1462, %r1108;
	add.s32 	%r1464, %r1463, %r1453;
	add.s32 	%r1118, %r1464, 1518500249;
	shf.l.wrap.b32 	%r1120, %r1110, %r1110, 30;
	shf.l.wrap.b32 	%r1465, %r1118, %r1118, 5;
	// begin inline asm
	lop3.b32 %r1113, %r1114, %r1120, %r1116, 202;
	// end inline asm
	add.s32 	%r1466, %r1113, %r1455;
	add.s32 	%r1467, %r1466, %r1112;
	add.s32 	%r1468, %r1467, %r1465;
	add.s32 	%r1122, %r1468, 1518500249;
	shf.l.wrap.b32 	%r1124, %r1114, %r1114, 30;
	shf.l.wrap.b32 	%r1469, %r1122, %r1122, 5;
	// begin inline asm
	lop3.b32 %r1117, %r1118, %r1124, %r1120, 202;
	// end inline asm
	add.s32 	%r1470, %r1117, %r1456;
	add.s32 	%r1471, %r1470, %r1116;
	add.s32 	%r1472, %r1471, %r1469;
	add.s32 	%r1126, %r1472, 1518500249;
	shf.l.wrap.b32 	%r1128, %r1118, %r1118, 30;
	shf.l.wrap.b32 	%r1473, %r1126, %r1126, 5;
	// begin inline asm
	lop3.b32 %r1121, %r1122, %r1128, %r1124, 202;
	// end inline asm
	add.s32 	%r1474, %r1121, %r1457;
	add.s32 	%r1475, %r1474, %r1120;
	add.s32 	%r1476, %r1475, %r1473;
	add.s32 	%r1130, %r1476, 1518500249;
	shf.l.wrap.b32 	%r1132, %r1122, %r1122, 30;
	shf.l.wrap.b32 	%r1477, %r1130, %r1130, 5;
	// begin inline asm
	lop3.b32 %r1125, %r1126, %r1132, %r1128, 202;
	// end inline asm
	xor.b32  	%r1478, %r1430, %r1455;
	xor.b32  	%r1479, %r1478, %r1384;
	xor.b32  	%r1480, %r1479, %r1382;
	shf.l.wrap.b32 	%r1481, %r1480, %r1480, 1;
	add.s32 	%r1482, %r1125, %r1481;
	add.s32 	%r1483, %r1482, %r1124;
	add.s32 	%r1484, %r1483, %r1477;
	add.s32 	%r1134, %r1484, 1518500249;
	shf.l.wrap.b32 	%r1136, %r1126, %r1126, 30;
	shf.l.wrap.b32 	%r1485, %r1134, %r1134, 5;
	// begin inline asm
	lop3.b32 %r1129, %r1130, %r1136, %r1132, 202;
	// end inline asm
	xor.b32  	%r1486, %r1431, %r1456;
	xor.b32  	%r1487, %r1486, %r1385;
	xor.b32  	%r1488, %r1487, %r1383;
	shf.l.wrap.b32 	%r1489, %r1488, %r1488, 1;
	add.s32 	%r1490, %r1129, %r1489;
	add.s32 	%r1491, %r1490, %r1128;
	add.s32 	%r1492, %r1491, %r1485;
	add.s32 	%r1138, %r1492, 1518500249;
	shf.l.wrap.b32 	%r1140, %r1130, %r1130, 30;
	shf.l.wrap.b32 	%r1493, %r1138, %r1138, 5;
	// begin inline asm
	lop3.b32 %r1133, %r1134, %r1140, %r1136, 202;
	// end inline asm
	xor.b32  	%r1494, %r1432, %r1457;
	xor.b32  	%r1495, %r1494, %r1406;
	xor.b32  	%r1496, %r1495, %r1384;
	shf.l.wrap.b32 	%r1497, %r1496, %r1496, 1;
	add.s32 	%r1498, %r1133, %r1497;
	add.s32 	%r1499, %r1498, %r1132;
	add.s32 	%r1500, %r1499, %r1493;
	add.s32 	%r1142, %r1500, 1518500249;
	shf.l.wrap.b32 	%r1144, %r1134, %r1134, 30;
	shf.l.wrap.b32 	%r1501, %r1142, %r1142, 5;
	// begin inline asm
	lop3.b32 %r1137, %r1138, %r1144, %r1140, 202;
	// end inline asm
	xor.b32  	%r1502, %r1433, %r1481;
	xor.b32  	%r1503, %r1502, %r1407;
	xor.b32  	%r1504, %r1503, %r1385;
	shf.l.wrap.b32 	%r1505, %r1504, %r1504, 1;
	add.s32 	%r1506, %r1137, %r1505;
	add.s32 	%r1507, %r1506, %r1136;
	add.s32 	%r1508, %r1507, %r1501;
	add.s32 	%r1146, %r1508, 1518500249;
	shf.l.wrap.b32 	%r1148, %r1138, %r1138, 30;
	shf.l.wrap.b32 	%r1509, %r1146, %r1146, 5;
	// begin inline asm
	lop3.b32 %r1141, %r1142, %r1148, %r1144, 150;
	// end inline asm
	xor.b32  	%r1510, %r1454, %r1489;
	xor.b32  	%r1511, %r1510, %r1408;
	xor.b32  	%r1512, %r1511, %r1406;
	shf.l.wrap.b32 	%r1513, %r1512, %r1512, 1;
	add.s32 	%r1514, %r1141, %r1513;
	add.s32 	%r1515, %r1514, %r1140;
	add.s32 	%r1516, %r1515, %r1509;
	add.s32 	%r1150, %r1516, 1859775393;
	shf.l.wrap.b32 	%r1152, %r1142, %r1142, 30;
	shf.l.wrap.b32 	%r1517, %r1150, %r1150, 5;
	// begin inline asm
	lop3.b32 %r1145, %r1146, %r1152, %r1148, 150;
	// end inline asm
	xor.b32  	%r1518, %r1455, %r1497;
	xor.b32  	%r1519, %r1518, %r1409;
	xor.b32  	%r1520, %r1519, %r1407;
	shf.l.wrap.b32 	%r1521, %r1520, %r1520, 1;
	add.s32 	%r1522, %r1145, %r1521;
	add.s32 	%r1523, %r1522, %r1144;
	add.s32 	%r1524, %r1523, %r1517;
	add.s32 	%r1154, %r1524, 1859775393;
	shf.l.wrap.b32 	%r1156, %r1146, %r1146, 30;
	shf.l.wrap.b32 	%r1525, %r1154, %r1154, 5;
	// begin inline asm
	lop3.b32 %r1149, %r1150, %r1156, %r1152, 150;
	// end inline asm
	xor.b32  	%r1526, %r1456, %r1505;
	xor.b32  	%r1527, %r1526, %r1430;
	xor.b32  	%r1528, %r1527, %r1408;
	shf.l.wrap.b32 	%r1529, %r1528, %r1528, 1;
	add.s32 	%r1530, %r1149, %r1529;
	add.s32 	%r1531, %r1530, %r1148;
	add.s32 	%r1532, %r1531, %r1525;
	add.s32 	%r1158, %r1532, 1859775393;
	shf.l.wrap.b32 	%r1160, %r1150, %r1150, 30;
	shf.l.wrap.b32 	%r1533, %r1158, %r1158, 5;
	// begin inline asm
	lop3.b32 %r1153, %r1154, %r1160, %r1156, 150;
	// end inline asm
	xor.b32  	%r1534, %r1457, %r1513;
	xor.b32  	%r1535, %r1534, %r1431;
	xor.b32  	%r1536, %r1535, %r1409;
	shf.l.wrap.b32 	%r1537, %r1536, %r1536, 1;
	add.s32 	%r1538, %r1153, %r1537;
	add.s32 	%r1539, %r1538, %r1152;
	add.s32 	%r1540, %r1539, %r1533;
	add.s32 	%r1162, %r1540, 1859775393;
	shf.l.wrap.b32 	%r1164, %r1154, %r1154, 30;
	shf.l.wrap.b32 	%r1541, %r1162, %r1162, 5;
	// begin inline asm
	lop3.b32 %r1157, %r1158, %r1164, %r1160, 150;
	// end inline asm
	xor.b32  	%r1542, %r1521, %r1481;
	xor.b32  	%r1543, %r1542, %r1432;
	xor.b32  	%r1544, %r1543, %r1430;
	shf.l.wrap.b32 	%r1545, %r1544, %r1544, 1;
	add.s32 	%r1546, %r1157, %r1545;
	add.s32 	%r1547, %r1546, %r1156;
	add.s32 	%r1548, %r1547, %r1541;
	add.s32 	%r1166, %r1548, 1859775393;
	shf.l.wrap.b32 	%r1168, %r1158, %r1158, 30;
	shf.l.wrap.b32 	%r1549, %r1166, %r1166, 5;
	// begin inline asm
	lop3.b32 %r1161, %r1162, %r1168, %r1164, 150;
	// end inline asm
	xor.b32  	%r1550, %r1529, %r1489;
	xor.b32  	%r1551, %r1550, %r1433;
	xor.b32  	%r1552, %r1551, %r1431;
	shf.l.wrap.b32 	%r1553, %r1552, %r1552, 1;
	add.s32 	%r1554, %r1161, %r1553;
	add.s32 	%r1555, %r1554, %r1160;
	add.s32 	%r1556, %r1555, %r1549;
	add.s32 	%r1170, %r1556, 1859775393;
	shf.l.wrap.b32 	%r1172, %r1162, %r1162, 30;
	shf.l.wrap.b32 	%r1557, %r1170, %r1170, 5;
	// begin inline asm
	lop3.b32 %r1165, %r1166, %r1172, %r1168, 150;
	// end inline asm
	xor.b32  	%r1558, %r1537, %r1497;
	xor.b32  	%r1559, %r1558, %r1454;
	xor.b32  	%r1560, %r1559, %r1432;
	shf.l.wrap.b32 	%r1561, %r1560, %r1560, 1;
	add.s32 	%r1562, %r1165, %r1561;
	add.s32 	%r1563, %r1562, %r1164;
	add.s32 	%r1564, %r1563, %r1557;
	add.s32 	%r1174, %r1564, 1859775393;
	shf.l.wrap.b32 	%r1176, %r1166, %r1166, 30;
	shf.l.wrap.b32 	%r1565, %r1174, %r1174, 5;
	// begin inline asm
	lop3.b32 %r1169, %r1170, %r1176, %r1172, 150;
	// end inline asm
	xor.b32  	%r1566, %r1545, %r1505;
	xor.b32  	%r1567, %r1566, %r1455;
	xor.b32  	%r1568, %r1567, %r1433;
	shf.l.wrap.b32 	%r1569, %r1568, %r1568, 1;
	add.s32 	%r1570, %r1169, %r1569;
	add.s32 	%r1571, %r1570, %r1168;
	add.s32 	%r1572, %r1571, %r1565;
	add.s32 	%r1178, %r1572, 1859775393;
	shf.l.wrap.b32 	%r1180, %r1170, %r1170, 30;
	shf.l.wrap.b32 	%r1573, %r1178, %r1178, 5;
	// begin inline asm
	lop3.b32 %r1173, %r1174, %r1180, %r1176, 150;
	// end inline asm
	xor.b32  	%r1574, %r1553, %r1513;
	xor.b32  	%r1575, %r1574, %r1456;
	xor.b32  	%r1576, %r1575, %r1454;
	shf.l.wrap.b32 	%r1577, %r1576, %r1576, 1;
	add.s32 	%r1578, %r1173, %r1577;
	add.s32 	%r1579, %r1578, %r1172;
	add.s32 	%r1580, %r1579, %r1573;
	add.s32 	%r1182, %r1580, 1859775393;
	shf.l.wrap.b32 	%r1184, %r1174, %r1174, 30;
	shf.l.wrap.b32 	%r1581, %r1182, %r1182, 5;
	// begin inline asm
	lop3.b32 %r1177, %r1178, %r1184, %r1180, 150;
	// end inline asm
	xor.b32  	%r1582, %r1561, %r1521;
	xor.b32  	%r1583, %r1582, %r1457;
	xor.b32  	%r1584, %r1583, %r1455;
	shf.l.wrap.b32 	%r1585, %r1584, %r1584, 1;
	add.s32 	%r1586, %r1177, %r1585;
	add.s32 	%r1587, %r1586, %r1176;
	add.s32 	%r1588, %r1587, %r1581;
	add.s32 	%r1186, %r1588, 1859775393;
	shf.l.wrap.b32 	%r1188, %r1178, %r1178, 30;
	shf.l.wrap.b32 	%r1589, %r1186, %r1186, 5;
	// begin inline asm
	lop3.b32 %r1181, %r1182, %r1188, %r1184, 150;
	// end inline asm
	xor.b32  	%r1590, %r1529, %r1481;
	xor.b32  	%r1591, %r1590, %r1569;
	xor.b32  	%r1592, %r1591, %r1456;
	shf.l.wrap.b32 	%r1593, %r1592, %r1592, 1;
	add.s32 	%r1594, %r1181, %r1593;
	add.s32 	%r1595, %r1594, %r1180;
	add.s32 	%r1596, %r1595, %r1589;
	add.s32 	%r1190, %r1596, 1859775393;
	shf.l.wrap.b32 	%r1192, %r1182, %r1182, 30;
	shf.l.wrap.b32 	%r1597, %r1190, %r1190, 5;
	// begin inline asm
	lop3.b32 %r1185, %r1186, %r1192, %r1188, 150;
	// end inline asm
	xor.b32  	%r1598, %r1537, %r1489;
	xor.b32  	%r1599, %r1598, %r1577;
	xor.b32  	%r1600, %r1599, %r1457;
	shf.l.wrap.b32 	%r1601, %r1600, %r1600, 1;
	add.s32 	%r1602, %r1185, %r1601;
	add.s32 	%r1603, %r1602, %r1184;
	add.s32 	%r1604, %r1603, %r1597;
	add.s32 	%r1194, %r1604, 1859775393;
	shf.l.wrap.b32 	%r1196, %r1186, %r1186, 30;
	shf.l.wrap.b32 	%r1605, %r1194, %r1194, 5;
	// begin inline asm
	lop3.b32 %r1189, %r1190, %r1196, %r1192, 150;
	// end inline asm
	xor.b32  	%r1606, %r1497, %r1481;
	xor.b32  	%r1607, %r1606, %r1545;
	xor.b32  	%r1608, %r1607, %r1585;
	shf.l.wrap.b32 	%r1609, %r1608, %r1608, 1;
	add.s32 	%r1610, %r1189, %r1609;
	add.s32 	%r1611, %r1610, %r1188;
	add.s32 	%r1612, %r1611, %r1605;
	add.s32 	%r1198, %r1612, 1859775393;
	shf.l.wrap.b32 	%r1200, %r1190, %r1190, 30;
	shf.l.wrap.b32 	%r1613, %r1198, %r1198, 5;
	// begin inline asm
	lop3.b32 %r1193, %r1194, %r1200, %r1196, 150;
	// end inline asm
	xor.b32  	%r1614, %r1505, %r1489;
	xor.b32  	%r1615, %r1614, %r1553;
	xor.b32  	%r1616, %r1615, %r1593;
	shf.l.wrap.b32 	%r1617, %r1616, %r1616, 1;
	add.s32 	%r1618, %r1193, %r1617;
	add.s32 	%r1619, %r1618, %r1192;
	add.s32 	%r1620, %r1619, %r1613;
	add.s32 	%r1202, %r1620, 1859775393;
	shf.l.wrap.b32 	%r1204, %r1194, %r1194, 30;
	shf.l.wrap.b32 	%r1621, %r1202, %r1202, 5;
	// begin inline asm
	lop3.b32 %r1197, %r1198, %r1204, %r1200, 150;
	// end inline asm
	xor.b32  	%r1622, %r1513, %r1497;
	xor.b32  	%r1623, %r1622, %r1561;
	xor.b32  	%r1624, %r1623, %r1601;
	shf.l.wrap.b32 	%r1625, %r1624, %r1624, 1;
	add.s32 	%r1626, %r1197, %r1625;
	add.s32 	%r1627, %r1626, %r1196;
	add.s32 	%r1628, %r1627, %r1621;
	add.s32 	%r1206, %r1628, 1859775393;
	shf.l.wrap.b32 	%r1208, %r1198, %r1198, 30;
	shf.l.wrap.b32 	%r1629, %r1206, %r1206, 5;
	// begin inline asm
	lop3.b32 %r1201, %r1202, %r1208, %r1204, 150;
	// end inline asm
	xor.b32  	%r1630, %r1521, %r1505;
	xor.b32  	%r1631, %r1630, %r1569;
	xor.b32  	%r1632, %r1631, %r1609;
	shf.l.wrap.b32 	%r1633, %r1632, %r1632, 1;
	add.s32 	%r1634, %r1201, %r1633;
	add.s32 	%r1635, %r1634, %r1200;
	add.s32 	%r1636, %r1635, %r1629;
	add.s32 	%r1210, %r1636, 1859775393;
	shf.l.wrap.b32 	%r1212, %r1202, %r1202, 30;
	shf.l.wrap.b32 	%r1637, %r1210, %r1210, 5;
	// begin inline asm
	lop3.b32 %r1205, %r1206, %r1212, %r1208, 150;
	// end inline asm
	xor.b32  	%r1638, %r1529, %r1513;
	xor.b32  	%r1639, %r1638, %r1577;
	xor.b32  	%r1640, %r1639, %r1617;
	shf.l.wrap.b32 	%r1641, %r1640, %r1640, 1;
	add.s32 	%r1642, %r1205, %r1641;
	add.s32 	%r1643, %r1642, %r1204;
	add.s32 	%r1644, %r1643, %r1637;
	add.s32 	%r1214, %r1644, 1859775393;
	shf.l.wrap.b32 	%r1216, %r1206, %r1206, 30;
	shf.l.wrap.b32 	%r1645, %r1214, %r1214, 5;
	// begin inline asm
	lop3.b32 %r1209, %r1210, %r1216, %r1212, 150;
	// end inline asm
	xor.b32  	%r1646, %r1537, %r1521;
	xor.b32  	%r1647, %r1646, %r1585;
	xor.b32  	%r1648, %r1647, %r1625;
	shf.l.wrap.b32 	%r1649, %r1648, %r1648, 1;
	add.s32 	%r1650, %r1209, %r1649;
	add.s32 	%r1651, %r1650, %r1208;
	add.s32 	%r1652, %r1651, %r1645;
	add.s32 	%r1218, %r1652, 1859775393;
	shf.l.wrap.b32 	%r1220, %r1210, %r1210, 30;
	shf.l.wrap.b32 	%r1653, %r1218, %r1218, 5;
	// begin inline asm
	lop3.b32 %r1213, %r1214, %r1220, %r1216, 150;
	// end inline asm
	xor.b32  	%r1654, %r1545, %r1529;
	xor.b32  	%r1655, %r1654, %r1593;
	xor.b32  	%r1656, %r1655, %r1633;
	shf.l.wrap.b32 	%r1657, %r1656, %r1656, 1;
	add.s32 	%r1658, %r1213, %r1657;
	add.s32 	%r1659, %r1658, %r1212;
	add.s32 	%r1660, %r1659, %r1653;
	add.s32 	%r1222, %r1660, 1859775393;
	shf.l.wrap.b32 	%r1224, %r1214, %r1214, 30;
	shf.l.wrap.b32 	%r1661, %r1222, %r1222, 5;
	// begin inline asm
	lop3.b32 %r1217, %r1218, %r1224, %r1220, 150;
	// end inline asm
	xor.b32  	%r1662, %r1553, %r1537;
	xor.b32  	%r1663, %r1662, %r1601;
	xor.b32  	%r1664, %r1663, %r1641;
	shf.l.wrap.b32 	%r1665, %r1664, %r1664, 1;
	add.s32 	%r1666, %r1217, %r1665;
	add.s32 	%r1667, %r1666, %r1216;
	add.s32 	%r1668, %r1667, %r1661;
	add.s32 	%r1226, %r1668, 1859775393;
	shf.l.wrap.b32 	%r1228, %r1218, %r1218, 30;
	shf.l.wrap.b32 	%r1669, %r1226, %r1226, 5;
	// begin inline asm
	lop3.b32 %r1221, %r1222, %r1228, %r1224, 232;
	// end inline asm
	xor.b32  	%r1670, %r1561, %r1545;
	xor.b32  	%r1671, %r1670, %r1609;
	xor.b32  	%r1672, %r1671, %r1649;
	shf.l.wrap.b32 	%r1673, %r1672, %r1672, 1;
	add.s32 	%r1674, %r1221, %r1673;
	add.s32 	%r1675, %r1674, %r1220;
	add.s32 	%r1676, %r1675, %r1669;
	add.s32 	%r1230, %r1676, -1894007588;
	shf.l.wrap.b32 	%r1232, %r1222, %r1222, 30;
	shf.l.wrap.b32 	%r1677, %r1230, %r1230, 5;
	// begin inline asm
	lop3.b32 %r1225, %r1226, %r1232, %r1228, 232;
	// end inline asm
	xor.b32  	%r1678, %r1569, %r1553;
	xor.b32  	%r1679, %r1678, %r1617;
	xor.b32  	%r1680, %r1679, %r1657;
	shf.l.wrap.b32 	%r1681, %r1680, %r1680, 1;
	add.s32 	%r1682, %r1225, %r1681;
	add.s32 	%r1683, %r1682, %r1224;
	add.s32 	%r1684, %r1683, %r1677;
	add.s32 	%r1234, %r1684, -1894007588;
	shf.l.wrap.b32 	%r1236, %r1226, %r1226, 30;
	shf.l.wrap.b32 	%r1685, %r1234, %r1234, 5;
	// begin inline asm
	lop3.b32 %r1229, %r1230, %r1236, %r1232, 232;
	// end inline asm
	xor.b32  	%r1686, %r1577, %r1561;
	xor.b32  	%r1687, %r1686, %r1625;
	xor.b32  	%r1688, %r1687, %r1665;
	shf.l.wrap.b32 	%r1689, %r1688, %r1688, 1;
	add.s32 	%r1690, %r1229, %r1689;
	add.s32 	%r1691, %r1690, %r1228;
	add.s32 	%r1692, %r1691, %r1685;
	add.s32 	%r1238, %r1692, -1894007588;
	shf.l.wrap.b32 	%r1240, %r1230, %r1230, 30;
	shf.l.wrap.b32 	%r1693, %r1238, %r1238, 5;
	// begin inline asm
	lop3.b32 %r1233, %r1234, %r1240, %r1236, 232;
	// end inline asm
	xor.b32  	%r1694, %r1585, %r1569;
	xor.b32  	%r1695, %r1694, %r1633;
	xor.b32  	%r1696, %r1695, %r1673;
	shf.l.wrap.b32 	%r1697, %r1696, %r1696, 1;
	add.s32 	%r1698, %r1233, %r1697;
	add.s32 	%r1699, %r1698, %r1232;
	add.s32 	%r1700, %r1699, %r1693;
	add.s32 	%r1242, %r1700, -1894007588;
	shf.l.wrap.b32 	%r1244, %r1234, %r1234, 30;
	shf.l.wrap.b32 	%r1701, %r1242, %r1242, 5;
	// begin inline asm
	lop3.b32 %r1237, %r1238, %r1244, %r1240, 232;
	// end inline asm
	xor.b32  	%r1702, %r1593, %r1577;
	xor.b32  	%r1703, %r1702, %r1641;
	xor.b32  	%r1704, %r1703, %r1681;
	shf.l.wrap.b32 	%r1705, %r1704, %r1704, 1;
	add.s32 	%r1706, %r1237, %r1705;
	add.s32 	%r1707, %r1706, %r1236;
	add.s32 	%r1708, %r1707, %r1701;
	add.s32 	%r1246, %r1708, -1894007588;
	shf.l.wrap.b32 	%r1248, %r1238, %r1238, 30;
	shf.l.wrap.b32 	%r1709, %r1246, %r1246, 5;
	// begin inline asm
	lop3.b32 %r1241, %r1242, %r1248, %r1244, 232;
	// end inline asm
	xor.b32  	%r1710, %r1601, %r1585;
	xor.b32  	%r1711, %r1710, %r1649;
	xor.b32  	%r1712, %r1711, %r1689;
	shf.l.wrap.b32 	%r1713, %r1712, %r1712, 1;
	add.s32 	%r1714, %r1241, %r1713;
	add.s32 	%r1715, %r1714, %r1240;
	add.s32 	%r1716, %r1715, %r1709;
	add.s32 	%r1250, %r1716, -1894007588;
	shf.l.wrap.b32 	%r1252, %r1242, %r1242, 30;
	shf.l.wrap.b32 	%r1717, %r1250, %r1250, 5;
	// begin inline asm
	lop3.b32 %r1245, %r1246, %r1252, %r1248, 232;
	// end inline asm
	xor.b32  	%r1718, %r1609, %r1593;
	xor.b32  	%r1719, %r1718, %r1657;
	xor.b32  	%r1720, %r1719, %r1697;
	shf.l.wrap.b32 	%r1721, %r1720, %r1720, 1;
	add.s32 	%r1722, %r1245, %r1721;
	add.s32 	%r1723, %r1722, %r1244;
	add.s32 	%r1724, %r1723, %r1717;
	add.s32 	%r1254, %r1724, -1894007588;
	shf.l.wrap.b32 	%r1256, %r1246, %r1246, 30;
	shf.l.wrap.b32 	%r1725, %r1254, %r1254, 5;
	// begin inline asm
	lop3.b32 %r1249, %r1250, %r1256, %r1252, 232;
	// end inline asm
	xor.b32  	%r1726, %r1617, %r1601;
	xor.b32  	%r1727, %r1726, %r1665;
	xor.b32  	%r1728, %r1727, %r1705;
	shf.l.wrap.b32 	%r1729, %r1728, %r1728, 1;
	add.s32 	%r1730, %r1249, %r1729;
	add.s32 	%r1731, %r1730, %r1248;
	add.s32 	%r1732, %r1731, %r1725;
	add.s32 	%r1258, %r1732, -1894007588;
	shf.l.wrap.b32 	%r1260, %r1250, %r1250, 30;
	shf.l.wrap.b32 	%r1733, %r1258, %r1258, 5;
	// begin inline asm
	lop3.b32 %r1253, %r1254, %r1260, %r1256, 232;
	// end inline asm
	xor.b32  	%r1734, %r1625, %r1609;
	xor.b32  	%r1735, %r1734, %r1673;
	xor.b32  	%r1736, %r1735, %r1713;
	shf.l.wrap.b32 	%r1737, %r1736, %r1736, 1;
	add.s32 	%r1738, %r1253, %r1737;
	add.s32 	%r1739, %r1738, %r1252;
	add.s32 	%r1740, %r1739, %r1733;
	add.s32 	%r1262, %r1740, -1894007588;
	shf.l.wrap.b32 	%r1264, %r1254, %r1254, 30;
	shf.l.wrap.b32 	%r1741, %r1262, %r1262, 5;
	// begin inline asm
	lop3.b32 %r1257, %r1258, %r1264, %r1260, 232;
	// end inline asm
	xor.b32  	%r1742, %r1633, %r1617;
	xor.b32  	%r1743, %r1742, %r1681;
	xor.b32  	%r1744, %r1743, %r1721;
	shf.l.wrap.b32 	%r1745, %r1744, %r1744, 1;
	add.s32 	%r1746, %r1257, %r1745;
	add.s32 	%r1747, %r1746, %r1256;
	add.s32 	%r1748, %r1747, %r1741;
	add.s32 	%r1266, %r1748, -1894007588;
	shf.l.wrap.b32 	%r1268, %r1258, %r1258, 30;
	shf.l.wrap.b32 	%r1749, %r1266, %r1266, 5;
	// begin inline asm
	lop3.b32 %r1261, %r1262, %r1268, %r1264, 232;
	// end inline asm
	xor.b32  	%r1750, %r1641, %r1625;
	xor.b32  	%r1751, %r1750, %r1689;
	xor.b32  	%r1752, %r1751, %r1729;
	shf.l.wrap.b32 	%r1753, %r1752, %r1752, 1;
	add.s32 	%r1754, %r1261, %r1753;
	add.s32 	%r1755, %r1754, %r1260;
	add.s32 	%r1756, %r1755, %r1749;
	add.s32 	%r1270, %r1756, -1894007588;
	shf.l.wrap.b32 	%r1272, %r1262, %r1262, 30;
	shf.l.wrap.b32 	%r1757, %r1270, %r1270, 5;
	// begin inline asm
	lop3.b32 %r1265, %r1266, %r1272, %r1268, 232;
	// end inline asm
	xor.b32  	%r1758, %r1649, %r1633;
	xor.b32  	%r1759, %r1758, %r1697;
	xor.b32  	%r1760, %r1759, %r1737;
	shf.l.wrap.b32 	%r1761, %r1760, %r1760, 1;
	add.s32 	%r1762, %r1265, %r1761;
	add.s32 	%r1763, %r1762, %r1264;
	add.s32 	%r1764, %r1763, %r1757;
	add.s32 	%r1274, %r1764, -1894007588;
	shf.l.wrap.b32 	%r1276, %r1266, %r1266, 30;
	shf.l.wrap.b32 	%r1765, %r1274, %r1274, 5;
	// begin inline asm
	lop3.b32 %r1269, %r1270, %r1276, %r1272, 232;
	// end inline asm
	xor.b32  	%r1766, %r1657, %r1641;
	xor.b32  	%r1767, %r1766, %r1705;
	xor.b32  	%r1768, %r1767, %r1745;
	shf.l.wrap.b32 	%r1769, %r1768, %r1768, 1;
	add.s32 	%r1770, %r1269, %r1769;
	add.s32 	%r1771, %r1770, %r1268;
	add.s32 	%r1772, %r1771, %r1765;
	add.s32 	%r1278, %r1772, -1894007588;
	shf.l.wrap.b32 	%r1280, %r1270, %r1270, 30;
	shf.l.wrap.b32 	%r1773, %r1278, %r1278, 5;
	// begin inline asm
	lop3.b32 %r1273, %r1274, %r1280, %r1276, 232;
	// end inline asm
	xor.b32  	%r1774, %r1665, %r1649;
	xor.b32  	%r1775, %r1774, %r1713;
	xor.b32  	%r1776, %r1775, %r1753;
	shf.l.wrap.b32 	%r1777, %r1776, %r1776, 1;
	add.s32 	%r1778, %r1273, %r1777;
	add.s32 	%r1779, %r1778, %r1272;
	add.s32 	%r1780, %r1779, %r1773;
	add.s32 	%r1282, %r1780, -1894007588;
	shf.l.wrap.b32 	%r1284, %r1274, %r1274, 30;
	shf.l.wrap.b32 	%r1781, %r1282, %r1282, 5;
	// begin inline asm
	lop3.b32 %r1277, %r1278, %r1284, %r1280, 232;
	// end inline asm
	xor.b32  	%r1782, %r1673, %r1657;
	xor.b32  	%r1783, %r1782, %r1721;
	xor.b32  	%r1784, %r1783, %r1761;
	shf.l.wrap.b32 	%r1785, %r1784, %r1784, 1;
	add.s32 	%r1786, %r1277, %r1785;
	add.s32 	%r1787, %r1786, %r1276;
	add.s32 	%r1788, %r1787, %r1781;
	add.s32 	%r1286, %r1788, -1894007588;
	shf.l.wrap.b32 	%r1288, %r1278, %r1278, 30;
	shf.l.wrap.b32 	%r1789, %r1286, %r1286, 5;
	// begin inline asm
	lop3.b32 %r1281, %r1282, %r1288, %r1284, 232;
	// end inline asm
	xor.b32  	%r1790, %r1681, %r1665;
	xor.b32  	%r1791, %r1790, %r1729;
	xor.b32  	%r1792, %r1791, %r1769;
	shf.l.wrap.b32 	%r1793, %r1792, %r1792, 1;
	add.s32 	%r1794, %r1281, %r1793;
	add.s32 	%r1795, %r1794, %r1280;
	add.s32 	%r1796, %r1795, %r1789;
	add.s32 	%r1290, %r1796, -1894007588;
	shf.l.wrap.b32 	%r1292, %r1282, %r1282, 30;
	shf.l.wrap.b32 	%r1797, %r1290, %r1290, 5;
	// begin inline asm
	lop3.b32 %r1285, %r1286, %r1292, %r1288, 232;
	// end inline asm
	xor.b32  	%r1798, %r1689, %r1673;
	xor.b32  	%r1799, %r1798, %r1737;
	xor.b32  	%r1800, %r1799, %r1777;
	shf.l.wrap.b32 	%r1801, %r1800, %r1800, 1;
	add.s32 	%r1802, %r1285, %r1801;
	add.s32 	%r1803, %r1802, %r1284;
	add.s32 	%r1804, %r1803, %r1797;
	add.s32 	%r1294, %r1804, -1894007588;
	shf.l.wrap.b32 	%r1296, %r1286, %r1286, 30;
	shf.l.wrap.b32 	%r1805, %r1294, %r1294, 5;
	// begin inline asm
	lop3.b32 %r1289, %r1290, %r1296, %r1292, 232;
	// end inline asm
	xor.b32  	%r1806, %r1697, %r1681;
	xor.b32  	%r1807, %r1806, %r1745;
	xor.b32  	%r1808, %r1807, %r1785;
	shf.l.wrap.b32 	%r1809, %r1808, %r1808, 1;
	add.s32 	%r1810, %r1289, %r1809;
	add.s32 	%r1811, %r1810, %r1288;
	add.s32 	%r1812, %r1811, %r1805;
	add.s32 	%r1298, %r1812, -1894007588;
	shf.l.wrap.b32 	%r1300, %r1290, %r1290, 30;
	shf.l.wrap.b32 	%r1813, %r1298, %r1298, 5;
	// begin inline asm
	lop3.b32 %r1293, %r1294, %r1300, %r1296, 232;
	// end inline asm
	xor.b32  	%r1814, %r1705, %r1689;
	xor.b32  	%r1815, %r1814, %r1753;
	xor.b32  	%r1816, %r1815, %r1793;
	shf.l.wrap.b32 	%r1817, %r1816, %r1816, 1;
	add.s32 	%r1818, %r1293, %r1817;
	add.s32 	%r1819, %r1818, %r1292;
	add.s32 	%r1820, %r1819, %r1813;
	add.s32 	%r1302, %r1820, -1894007588;
	shf.l.wrap.b32 	%r1304, %r1294, %r1294, 30;
	shf.l.wrap.b32 	%r1821, %r1302, %r1302, 5;
	// begin inline asm
	lop3.b32 %r1297, %r1298, %r1304, %r1300, 232;
	// end inline asm
	xor.b32  	%r1822, %r1713, %r1697;
	xor.b32  	%r1823, %r1822, %r1761;
	xor.b32  	%r1824, %r1823, %r1801;
	shf.l.wrap.b32 	%r1825, %r1824, %r1824, 1;
	add.s32 	%r1826, %r1297, %r1825;
	add.s32 	%r1827, %r1826, %r1296;
	add.s32 	%r1828, %r1827, %r1821;
	add.s32 	%r1306, %r1828, -1894007588;
	shf.l.wrap.b32 	%r1308, %r1298, %r1298, 30;
	shf.l.wrap.b32 	%r1829, %r1306, %r1306, 5;
	// begin inline asm
	lop3.b32 %r1301, %r1302, %r1308, %r1304, 150;
	// end inline asm
	xor.b32  	%r1830, %r1721, %r1705;
	xor.b32  	%r1831, %r1830, %r1769;
	xor.b32  	%r1832, %r1831, %r1809;
	shf.l.wrap.b32 	%r1833, %r1832, %r1832, 1;
	add.s32 	%r1834, %r1301, %r1833;
	add.s32 	%r1835, %r1834, %r1300;
	add.s32 	%r1836, %r1835, %r1829;
	add.s32 	%r1310, %r1836, -899497514;
	shf.l.wrap.b32 	%r1312, %r1302, %r1302, 30;
	shf.l.wrap.b32 	%r1837, %r1310, %r1310, 5;
	// begin inline asm
	lop3.b32 %r1305, %r1306, %r1312, %r1308, 150;
	// end inline asm
	xor.b32  	%r1838, %r1729, %r1713;
	xor.b32  	%r1839, %r1838, %r1777;
	xor.b32  	%r1840, %r1839, %r1817;
	shf.l.wrap.b32 	%r1841, %r1840, %r1840, 1;
	add.s32 	%r1842, %r1305, %r1841;
	add.s32 	%r1843, %r1842, %r1304;
	add.s32 	%r1844, %r1843, %r1837;
	add.s32 	%r1314, %r1844, -899497514;
	shf.l.wrap.b32 	%r1316, %r1306, %r1306, 30;
	shf.l.wrap.b32 	%r1845, %r1314, %r1314, 5;
	// begin inline asm
	lop3.b32 %r1309, %r1310, %r1316, %r1312, 150;
	// end inline asm
	xor.b32  	%r1846, %r1737, %r1721;
	xor.b32  	%r1847, %r1846, %r1785;
	xor.b32  	%r1848, %r1847, %r1825;
	shf.l.wrap.b32 	%r1849, %r1848, %r1848, 1;
	add.s32 	%r1850, %r1309, %r1849;
	add.s32 	%r1851, %r1850, %r1308;
	add.s32 	%r1852, %r1851, %r1845;
	add.s32 	%r1318, %r1852, -899497514;
	shf.l.wrap.b32 	%r1320, %r1310, %r1310, 30;
	shf.l.wrap.b32 	%r1853, %r1318, %r1318, 5;
	// begin inline asm
	lop3.b32 %r1313, %r1314, %r1320, %r1316, 150;
	// end inline asm
	xor.b32  	%r1854, %r1745, %r1729;
	xor.b32  	%r1855, %r1854, %r1793;
	xor.b32  	%r1856, %r1855, %r1833;
	shf.l.wrap.b32 	%r1857, %r1856, %r1856, 1;
	add.s32 	%r1858, %r1313, %r1857;
	add.s32 	%r1859, %r1858, %r1312;
	add.s32 	%r1860, %r1859, %r1853;
	add.s32 	%r1322, %r1860, -899497514;
	shf.l.wrap.b32 	%r1324, %r1314, %r1314, 30;
	shf.l.wrap.b32 	%r1861, %r1322, %r1322, 5;
	// begin inline asm
	lop3.b32 %r1317, %r1318, %r1324, %r1320, 150;
	// end inline asm
	xor.b32  	%r1862, %r1753, %r1737;
	xor.b32  	%r1863, %r1862, %r1801;
	xor.b32  	%r1864, %r1863, %r1841;
	shf.l.wrap.b32 	%r1865, %r1864, %r1864, 1;
	add.s32 	%r1866, %r1317, %r1865;
	add.s32 	%r1867, %r1866, %r1316;
	add.s32 	%r1868, %r1867, %r1861;
	add.s32 	%r1326, %r1868, -899497514;
	shf.l.wrap.b32 	%r1328, %r1318, %r1318, 30;
	shf.l.wrap.b32 	%r1869, %r1326, %r1326, 5;
	// begin inline asm
	lop3.b32 %r1321, %r1322, %r1328, %r1324, 150;
	// end inline asm
	xor.b32  	%r1870, %r1761, %r1745;
	xor.b32  	%r1871, %r1870, %r1809;
	xor.b32  	%r1872, %r1871, %r1849;
	shf.l.wrap.b32 	%r1873, %r1872, %r1872, 1;
	add.s32 	%r1874, %r1321, %r1873;
	add.s32 	%r1875, %r1874, %r1320;
	add.s32 	%r1876, %r1875, %r1869;
	add.s32 	%r1330, %r1876, -899497514;
	shf.l.wrap.b32 	%r1332, %r1322, %r1322, 30;
	shf.l.wrap.b32 	%r1877, %r1330, %r1330, 5;
	// begin inline asm
	lop3.b32 %r1325, %r1326, %r1332, %r1328, 150;
	// end inline asm
	xor.b32  	%r1878, %r1769, %r1753;
	xor.b32  	%r1879, %r1878, %r1817;
	xor.b32  	%r1880, %r1879, %r1857;
	shf.l.wrap.b32 	%r1881, %r1880, %r1880, 1;
	add.s32 	%r1882, %r1325, %r1881;
	add.s32 	%r1883, %r1882, %r1324;
	add.s32 	%r1884, %r1883, %r1877;
	add.s32 	%r1334, %r1884, -899497514;
	shf.l.wrap.b32 	%r1336, %r1326, %r1326, 30;
	shf.l.wrap.b32 	%r1885, %r1334, %r1334, 5;
	// begin inline asm
	lop3.b32 %r1329, %r1330, %r1336, %r1332, 150;
	// end inline asm
	xor.b32  	%r1886, %r1777, %r1761;
	xor.b32  	%r1887, %r1886, %r1825;
	xor.b32  	%r1888, %r1887, %r1865;
	shf.l.wrap.b32 	%r1889, %r1888, %r1888, 1;
	add.s32 	%r1890, %r1329, %r1889;
	add.s32 	%r1891, %r1890, %r1328;
	add.s32 	%r1892, %r1891, %r1885;
	add.s32 	%r1338, %r1892, -899497514;
	shf.l.wrap.b32 	%r1340, %r1330, %r1330, 30;
	shf.l.wrap.b32 	%r1893, %r1338, %r1338, 5;
	// begin inline asm
	lop3.b32 %r1333, %r1334, %r1340, %r1336, 150;
	// end inline asm
	xor.b32  	%r1894, %r1785, %r1769;
	xor.b32  	%r1895, %r1894, %r1833;
	xor.b32  	%r1896, %r1895, %r1873;
	shf.l.wrap.b32 	%r1897, %r1896, %r1896, 1;
	add.s32 	%r1898, %r1333, %r1897;
	add.s32 	%r1899, %r1898, %r1332;
	add.s32 	%r1900, %r1899, %r1893;
	add.s32 	%r1342, %r1900, -899497514;
	shf.l.wrap.b32 	%r1344, %r1334, %r1334, 30;
	shf.l.wrap.b32 	%r1901, %r1342, %r1342, 5;
	// begin inline asm
	lop3.b32 %r1337, %r1338, %r1344, %r1340, 150;
	// end inline asm
	xor.b32  	%r1902, %r1793, %r1777;
	xor.b32  	%r1903, %r1902, %r1841;
	xor.b32  	%r1904, %r1903, %r1881;
	shf.l.wrap.b32 	%r1905, %r1904, %r1904, 1;
	add.s32 	%r1906, %r1337, %r1905;
	add.s32 	%r1907, %r1906, %r1336;
	add.s32 	%r1908, %r1907, %r1901;
	add.s32 	%r1346, %r1908, -899497514;
	shf.l.wrap.b32 	%r1348, %r1338, %r1338, 30;
	shf.l.wrap.b32 	%r1909, %r1346, %r1346, 5;
	// begin inline asm
	lop3.b32 %r1341, %r1342, %r1348, %r1344, 150;
	// end inline asm
	xor.b32  	%r1910, %r1801, %r1785;
	xor.b32  	%r1911, %r1910, %r1849;
	xor.b32  	%r1912, %r1911, %r1889;
	shf.l.wrap.b32 	%r1913, %r1912, %r1912, 1;
	add.s32 	%r1914, %r1341, %r1913;
	add.s32 	%r1915, %r1914, %r1340;
	add.s32 	%r1916, %r1915, %r1909;
	add.s32 	%r1350, %r1916, -899497514;
	shf.l.wrap.b32 	%r1352, %r1342, %r1342, 30;
	shf.l.wrap.b32 	%r1917, %r1350, %r1350, 5;
	// begin inline asm
	lop3.b32 %r1345, %r1346, %r1352, %r1348, 150;
	// end inline asm
	xor.b32  	%r1918, %r1809, %r1793;
	xor.b32  	%r1919, %r1918, %r1857;
	xor.b32  	%r1920, %r1919, %r1897;
	shf.l.wrap.b32 	%r1921, %r1920, %r1920, 1;
	add.s32 	%r1922, %r1345, %r1921;
	add.s32 	%r1923, %r1922, %r1344;
	add.s32 	%r1924, %r1923, %r1917;
	add.s32 	%r1354, %r1924, -899497514;
	shf.l.wrap.b32 	%r1356, %r1346, %r1346, 30;
	shf.l.wrap.b32 	%r1925, %r1354, %r1354, 5;
	// begin inline asm
	lop3.b32 %r1349, %r1350, %r1356, %r1352, 150;
	// end inline asm
	xor.b32  	%r1926, %r1817, %r1801;
	xor.b32  	%r1927, %r1926, %r1865;
	xor.b32  	%r1928, %r1927, %r1905;
	shf.l.wrap.b32 	%r1929, %r1928, %r1928, 1;
	add.s32 	%r1930, %r1349, %r1929;
	add.s32 	%r1931, %r1930, %r1348;
	add.s32 	%r1932, %r1931, %r1925;
	add.s32 	%r1358, %r1932, -899497514;
	shf.l.wrap.b32 	%r1360, %r1350, %r1350, 30;
	shf.l.wrap.b32 	%r1933, %r1358, %r1358, 5;
	// begin inline asm
	lop3.b32 %r1353, %r1354, %r1360, %r1356, 150;
	// end inline asm
	xor.b32  	%r1934, %r1825, %r1809;
	xor.b32  	%r1935, %r1934, %r1873;
	xor.b32  	%r1936, %r1935, %r1913;
	shf.l.wrap.b32 	%r1937, %r1936, %r1936, 1;
	add.s32 	%r1938, %r1353, %r1937;
	add.s32 	%r1939, %r1938, %r1352;
	add.s32 	%r1940, %r1939, %r1933;
	add.s32 	%r1362, %r1940, -899497514;
	shf.l.wrap.b32 	%r1364, %r1354, %r1354, 30;
	shf.l.wrap.b32 	%r1941, %r1362, %r1362, 5;
	// begin inline asm
	lop3.b32 %r1357, %r1358, %r1364, %r1360, 150;
	// end inline asm
	xor.b32  	%r1942, %r1833, %r1817;
	xor.b32  	%r1943, %r1942, %r1881;
	xor.b32  	%r1944, %r1943, %r1921;
	shf.l.wrap.b32 	%r1945, %r1944, %r1944, 1;
	add.s32 	%r1946, %r1357, %r1945;
	add.s32 	%r1947, %r1946, %r1356;
	add.s32 	%r1948, %r1947, %r1941;
	add.s32 	%r1366, %r1948, -899497514;
	shf.l.wrap.b32 	%r1368, %r1358, %r1358, 30;
	shf.l.wrap.b32 	%r1949, %r1366, %r1366, 5;
	// begin inline asm
	lop3.b32 %r1361, %r1362, %r1368, %r1364, 150;
	// end inline asm
	xor.b32  	%r1950, %r1841, %r1825;
	xor.b32  	%r1951, %r1950, %r1889;
	xor.b32  	%r1952, %r1951, %r1929;
	shf.l.wrap.b32 	%r1953, %r1952, %r1952, 1;
	add.s32 	%r1954, %r1361, %r1953;
	add.s32 	%r1955, %r1954, %r1360;
	add.s32 	%r1956, %r1955, %r1949;
	add.s32 	%r1370, %r1956, -899497514;
	shf.l.wrap.b32 	%r1372, %r1362, %r1362, 30;
	shf.l.wrap.b32 	%r1957, %r1370, %r1370, 5;
	// begin inline asm
	lop3.b32 %r1365, %r1366, %r1372, %r1368, 150;
	// end inline asm
	xor.b32  	%r1958, %r1849, %r1833;
	xor.b32  	%r1959, %r1958, %r1897;
	xor.b32  	%r1960, %r1959, %r1937;
	shf.l.wrap.b32 	%r1961, %r1960, %r1960, 1;
	add.s32 	%r1962, %r1365, %r1961;
	add.s32 	%r1963, %r1962, %r1364;
	add.s32 	%r1964, %r1963, %r1957;
	add.s32 	%r1374, %r1964, -899497514;
	shf.l.wrap.b32 	%r1376, %r1366, %r1366, 30;
	shf.l.wrap.b32 	%r1965, %r1374, %r1374, 5;
	// begin inline asm
	lop3.b32 %r1369, %r1370, %r1376, %r1372, 150;
	// end inline asm
	xor.b32  	%r1966, %r1857, %r1841;
	xor.b32  	%r1967, %r1966, %r1905;
	xor.b32  	%r1968, %r1967, %r1945;
	shf.l.wrap.b32 	%r1969, %r1968, %r1968, 1;
	add.s32 	%r1970, %r1369, %r1969;
	add.s32 	%r1971, %r1970, %r1368;
	add.s32 	%r1972, %r1971, %r1965;
	add.s32 	%r1378, %r1972, -899497514;
	shf.l.wrap.b32 	%r1380, %r1370, %r1370, 30;
	shf.l.wrap.b32 	%r1973, %r1378, %r1378, 5;
	// begin inline asm
	lop3.b32 %r1373, %r1374, %r1380, %r1376, 150;
	// end inline asm
	xor.b32  	%r1974, %r1865, %r1849;
	xor.b32  	%r1975, %r1974, %r1913;
	xor.b32  	%r1976, %r1975, %r1953;
	shf.l.wrap.b32 	%r1977, %r1976, %r1976, 1;
	add.s32 	%r1978, %r1373, %r1977;
	add.s32 	%r1979, %r1978, %r1372;
	add.s32 	%r1980, %r1979, %r1973;
	add.s32 	%r1981, %r1980, -899497514;
	shf.l.wrap.b32 	%r1379, %r1374, %r1374, 30;
	shf.l.wrap.b32 	%r1982, %r1981, %r1981, 5;
	// begin inline asm
	lop3.b32 %r1377, %r1378, %r1379, %r1380, 150;
	// end inline asm
	xor.b32  	%r1983, %r1873, %r1857;
	xor.b32  	%r1984, %r1983, %r1921;
	xor.b32  	%r1985, %r1984, %r1961;
	shf.l.wrap.b32 	%r1986, %r1985, %r1985, 1;
	shf.l.wrap.b32 	%r1987, %r1378, %r1378, 30;
	add.s32 	%r1988, %r3817, %r1377;
	add.s32 	%r1989, %r1988, %r1986;
	add.s32 	%r1990, %r1989, %r1376;
	add.s32 	%r1991, %r1990, %r1982;
	add.s32 	%r3817, %r1991, -899497514;
	add.s32 	%r3816, %r1981, %r3816;
	add.s32 	%r3815, %r1987, %r3815;
	add.s32 	%r3814, %r1379, %r3814;
	add.s32 	%r3813, %r1380, %r3813;
	mov.u32 	%r1992, 0;
	st.local.v4.u32 	[%rd2], {%r1992, %r1992, %r1992, %r1992};
	st.local.v4.u32 	[%rd2+16], {%r1992, %r1992, %r1992, %r1992};
	st.local.v4.u32 	[%rd2+32], {%r1992, %r1992, %r1992, %r1992};
	st.local.v2.u32 	[%rd2+48], {%r1992, %r1992};
	st.local.u32 	[%rd2+56], %r1992;
	setp.lt.u32 	%p12, %r3819, 61;
	@%p12 bra 	$L__BB2_18;

	add.s32 	%r1993, %r3819, -61;
	xor.b32  	%r1994, %r1993, 3;
	cvt.u64.u32 	%rd49, %r1994;
	add.s64 	%rd50, %rd2, %rd49;
	st.local.u8 	[%rd50], %rs1;

$L__BB2_18:
	setp.lt.u32 	%p13, %r3819, 60;
	@%p13 bra 	$L__BB2_21;

	add.s32 	%r1995, %r3819, -60;
	xor.b32  	%r1996, %r1995, 3;
	cvt.u64.u32 	%rd51, %r1996;
	add.s64 	%rd52, %rd2, %rd51;
	mov.u16 	%rs9, 128;
	st.local.u8 	[%rd52], %rs9;

$L__BB2_21:
	shl.b32 	%r2641, %r2, 3;
	add.s32 	%r2642, %r2641, 544;
	ld.local.v4.u32 	{%r2643, %r2644, %r2645, %r2646}, [%rd2];
	shf.l.wrap.b32 	%r2651, %r3817, %r3817, 5;
	add.s32 	%r2652, %r2651, %r3813;
	// begin inline asm
	lop3.b32 %r2001, %r3816, %r3815, %r3814, 202;
	// end inline asm
	add.s32 	%r2653, %r2652, %r2001;
	add.s32 	%r2654, %r2653, %r2643;
	add.s32 	%r2010, %r2654, 1518500249;
	shf.l.wrap.b32 	%r2655, %r2010, %r2010, 5;
	shf.l.wrap.b32 	%r2012, %r3816, %r3816, 30;
	// begin inline asm
	lop3.b32 %r2005, %r3817, %r2012, %r3815, 202;
	// end inline asm
	add.s32 	%r2656, %r3814, %r2005;
	add.s32 	%r2657, %r2656, %r2644;
	add.s32 	%r2658, %r2657, %r2655;
	add.s32 	%r2014, %r2658, 1518500249;
	shf.l.wrap.b32 	%r2659, %r2014, %r2014, 5;
	shf.l.wrap.b32 	%r2016, %r3817, %r3817, 30;
	// begin inline asm
	lop3.b32 %r2009, %r2010, %r2016, %r2012, 202;
	// end inline asm
	add.s32 	%r2660, %r3815, %r2009;
	add.s32 	%r2661, %r2660, %r2645;
	add.s32 	%r2662, %r2661, %r2659;
	add.s32 	%r2018, %r2662, 1518500249;
	shf.l.wrap.b32 	%r2020, %r2010, %r2010, 30;
	shf.l.wrap.b32 	%r2663, %r2018, %r2018, 5;
	// begin inline asm
	lop3.b32 %r2013, %r2014, %r2020, %r2016, 202;
	// end inline asm
	add.s32 	%r2664, %r2012, %r2013;
	add.s32 	%r2665, %r2664, %r2646;
	add.s32 	%r2666, %r2665, %r2663;
	add.s32 	%r2022, %r2666, 1518500249;
	shf.l.wrap.b32 	%r2024, %r2014, %r2014, 30;
	shf.l.wrap.b32 	%r2667, %r2022, %r2022, 5;
	// begin inline asm
	lop3.b32 %r2017, %r2018, %r2024, %r2020, 202;
	// end inline asm
	ld.local.v4.u32 	{%r2668, %r2669, %r2670, %r2671}, [%rd2+16];
	add.s32 	%r2676, %r2016, %r2017;
	add.s32 	%r2677, %r2676, %r2668;
	add.s32 	%r2678, %r2677, %r2667;
	add.s32 	%r2026, %r2678, 1518500249;
	shf.l.wrap.b32 	%r2028, %r2018, %r2018, 30;
	shf.l.wrap.b32 	%r2679, %r2026, %r2026, 5;
	// begin inline asm
	lop3.b32 %r2021, %r2022, %r2028, %r2024, 202;
	// end inline asm
	add.s32 	%r2680, %r2020, %r2021;
	add.s32 	%r2681, %r2680, %r2669;
	add.s32 	%r2682, %r2681, %r2679;
	add.s32 	%r2030, %r2682, 1518500249;
	shf.l.wrap.b32 	%r2032, %r2022, %r2022, 30;
	shf.l.wrap.b32 	%r2683, %r2030, %r2030, 5;
	// begin inline asm
	lop3.b32 %r2025, %r2026, %r2032, %r2028, 202;
	// end inline asm
	add.s32 	%r2684, %r2024, %r2025;
	add.s32 	%r2685, %r2684, %r2670;
	add.s32 	%r2686, %r2685, %r2683;
	add.s32 	%r2034, %r2686, 1518500249;
	shf.l.wrap.b32 	%r2036, %r2026, %r2026, 30;
	shf.l.wrap.b32 	%r2687, %r2034, %r2034, 5;
	// begin inline asm
	lop3.b32 %r2029, %r2030, %r2036, %r2032, 202;
	// end inline asm
	add.s32 	%r2688, %r2029, %r2671;
	add.s32 	%r2689, %r2688, %r2028;
	add.s32 	%r2690, %r2689, %r2687;
	add.s32 	%r2038, %r2690, 1518500249;
	shf.l.wrap.b32 	%r2040, %r2030, %r2030, 30;
	shf.l.wrap.b32 	%r2691, %r2038, %r2038, 5;
	// begin inline asm
	lop3.b32 %r2033, %r2034, %r2040, %r2036, 202;
	// end inline asm
	ld.local.v4.u32 	{%r2692, %r2693, %r2694, %r2695}, [%rd2+32];
	add.s32 	%r2700, %r2033, %r2692;
	add.s32 	%r2701, %r2700, %r2032;
	add.s32 	%r2702, %r2701, %r2691;
	add.s32 	%r2042, %r2702, 1518500249;
	shf.l.wrap.b32 	%r2044, %r2034, %r2034, 30;
	shf.l.wrap.b32 	%r2703, %r2042, %r2042, 5;
	// begin inline asm
	lop3.b32 %r2037, %r2038, %r2044, %r2040, 202;
	// end inline asm
	add.s32 	%r2704, %r2037, %r2693;
	add.s32 	%r2705, %r2704, %r2036;
	add.s32 	%r2706, %r2705, %r2703;
	add.s32 	%r2046, %r2706, 1518500249;
	shf.l.wrap.b32 	%r2048, %r2038, %r2038, 30;
	shf.l.wrap.b32 	%r2707, %r2046, %r2046, 5;
	// begin inline asm
	lop3.b32 %r2041, %r2042, %r2048, %r2044, 202;
	// end inline asm
	add.s32 	%r2708, %r2041, %r2694;
	add.s32 	%r2709, %r2708, %r2040;
	add.s32 	%r2710, %r2709, %r2707;
	add.s32 	%r2050, %r2710, 1518500249;
	shf.l.wrap.b32 	%r2052, %r2042, %r2042, 30;
	shf.l.wrap.b32 	%r2711, %r2050, %r2050, 5;
	// begin inline asm
	lop3.b32 %r2045, %r2046, %r2052, %r2048, 202;
	// end inline asm
	add.s32 	%r2712, %r2045, %r2695;
	add.s32 	%r2713, %r2712, %r2044;
	add.s32 	%r2714, %r2713, %r2711;
	add.s32 	%r2054, %r2714, 1518500249;
	shf.l.wrap.b32 	%r2056, %r2046, %r2046, 30;
	shf.l.wrap.b32 	%r2715, %r2054, %r2054, 5;
	// begin inline asm
	lop3.b32 %r2049, %r2050, %r2056, %r2052, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r2716, %r2717, %r2718, %r2719}, [%rd2+48];
	add.s32 	%r2723, %r2049, %r2716;
	add.s32 	%r2724, %r2723, %r2048;
	add.s32 	%r2725, %r2724, %r2715;
	add.s32 	%r2058, %r2725, 1518500249;
	shf.l.wrap.b32 	%r2060, %r2050, %r2050, 30;
	shf.l.wrap.b32 	%r2726, %r2058, %r2058, 5;
	// begin inline asm
	lop3.b32 %r2053, %r2054, %r2060, %r2056, 202;
	// end inline asm
	add.s32 	%r2727, %r2053, %r2717;
	add.s32 	%r2728, %r2727, %r2052;
	add.s32 	%r2729, %r2728, %r2726;
	add.s32 	%r2062, %r2729, 1518500249;
	shf.l.wrap.b32 	%r2064, %r2054, %r2054, 30;
	shf.l.wrap.b32 	%r2730, %r2062, %r2062, 5;
	// begin inline asm
	lop3.b32 %r2057, %r2058, %r2064, %r2060, 202;
	// end inline asm
	add.s32 	%r2731, %r2057, %r2718;
	add.s32 	%r2732, %r2731, %r2056;
	add.s32 	%r2733, %r2732, %r2730;
	add.s32 	%r2066, %r2733, 1518500249;
	shf.l.wrap.b32 	%r2068, %r2058, %r2058, 30;
	shf.l.wrap.b32 	%r2734, %r2066, %r2066, 5;
	// begin inline asm
	lop3.b32 %r2061, %r2062, %r2068, %r2064, 202;
	// end inline asm
	add.s32 	%r2735, %r2061, %r2642;
	add.s32 	%r2736, %r2735, %r2060;
	add.s32 	%r2737, %r2736, %r2734;
	add.s32 	%r2070, %r2737, 1518500249;
	shf.l.wrap.b32 	%r2072, %r2062, %r2062, 30;
	shf.l.wrap.b32 	%r2738, %r2070, %r2070, 5;
	// begin inline asm
	lop3.b32 %r2065, %r2066, %r2072, %r2068, 202;
	// end inline asm
	xor.b32  	%r2739, %r2692, %r2717;
	xor.b32  	%r2740, %r2739, %r2645;
	xor.b32  	%r2741, %r2740, %r2643;
	shf.l.wrap.b32 	%r2742, %r2741, %r2741, 1;
	add.s32 	%r2743, %r2065, %r2742;
	add.s32 	%r2744, %r2743, %r2064;
	add.s32 	%r2745, %r2744, %r2738;
	add.s32 	%r2074, %r2745, 1518500249;
	shf.l.wrap.b32 	%r2076, %r2066, %r2066, 30;
	shf.l.wrap.b32 	%r2746, %r2074, %r2074, 5;
	// begin inline asm
	lop3.b32 %r2069, %r2070, %r2076, %r2072, 202;
	// end inline asm
	xor.b32  	%r2747, %r2693, %r2718;
	xor.b32  	%r2748, %r2747, %r2646;
	xor.b32  	%r2749, %r2748, %r2644;
	shf.l.wrap.b32 	%r2750, %r2749, %r2749, 1;
	add.s32 	%r2751, %r2069, %r2750;
	add.s32 	%r2752, %r2751, %r2068;
	add.s32 	%r2753, %r2752, %r2746;
	add.s32 	%r2078, %r2753, 1518500249;
	shf.l.wrap.b32 	%r2080, %r2070, %r2070, 30;
	shf.l.wrap.b32 	%r2754, %r2078, %r2078, 5;
	// begin inline asm
	lop3.b32 %r2073, %r2074, %r2080, %r2076, 202;
	// end inline asm
	xor.b32  	%r2755, %r2694, %r2642;
	xor.b32  	%r2756, %r2755, %r2668;
	xor.b32  	%r2757, %r2756, %r2645;
	shf.l.wrap.b32 	%r2758, %r2757, %r2757, 1;
	add.s32 	%r2759, %r2073, %r2758;
	add.s32 	%r2760, %r2759, %r2072;
	add.s32 	%r2761, %r2760, %r2754;
	add.s32 	%r2082, %r2761, 1518500249;
	shf.l.wrap.b32 	%r2084, %r2074, %r2074, 30;
	shf.l.wrap.b32 	%r2762, %r2082, %r2082, 5;
	// begin inline asm
	lop3.b32 %r2077, %r2078, %r2084, %r2080, 202;
	// end inline asm
	xor.b32  	%r2763, %r2695, %r2742;
	xor.b32  	%r2764, %r2763, %r2669;
	xor.b32  	%r2765, %r2764, %r2646;
	shf.l.wrap.b32 	%r2766, %r2765, %r2765, 1;
	add.s32 	%r2767, %r2077, %r2766;
	add.s32 	%r2768, %r2767, %r2076;
	add.s32 	%r2769, %r2768, %r2762;
	add.s32 	%r2086, %r2769, 1518500249;
	shf.l.wrap.b32 	%r2088, %r2078, %r2078, 30;
	shf.l.wrap.b32 	%r2770, %r2086, %r2086, 5;
	// begin inline asm
	lop3.b32 %r2081, %r2082, %r2088, %r2084, 150;
	// end inline asm
	xor.b32  	%r2771, %r2716, %r2750;
	xor.b32  	%r2772, %r2771, %r2670;
	xor.b32  	%r2773, %r2772, %r2668;
	shf.l.wrap.b32 	%r2774, %r2773, %r2773, 1;
	add.s32 	%r2775, %r2081, %r2774;
	add.s32 	%r2776, %r2775, %r2080;
	add.s32 	%r2777, %r2776, %r2770;
	add.s32 	%r2090, %r2777, 1859775393;
	shf.l.wrap.b32 	%r2092, %r2082, %r2082, 30;
	shf.l.wrap.b32 	%r2778, %r2090, %r2090, 5;
	// begin inline asm
	lop3.b32 %r2085, %r2086, %r2092, %r2088, 150;
	// end inline asm
	xor.b32  	%r2779, %r2717, %r2758;
	xor.b32  	%r2780, %r2779, %r2671;
	xor.b32  	%r2781, %r2780, %r2669;
	shf.l.wrap.b32 	%r2782, %r2781, %r2781, 1;
	add.s32 	%r2783, %r2085, %r2782;
	add.s32 	%r2784, %r2783, %r2084;
	add.s32 	%r2785, %r2784, %r2778;
	add.s32 	%r2094, %r2785, 1859775393;
	shf.l.wrap.b32 	%r2096, %r2086, %r2086, 30;
	shf.l.wrap.b32 	%r2786, %r2094, %r2094, 5;
	// begin inline asm
	lop3.b32 %r2089, %r2090, %r2096, %r2092, 150;
	// end inline asm
	xor.b32  	%r2787, %r2718, %r2766;
	xor.b32  	%r2788, %r2787, %r2692;
	xor.b32  	%r2789, %r2788, %r2670;
	shf.l.wrap.b32 	%r2790, %r2789, %r2789, 1;
	add.s32 	%r2791, %r2089, %r2790;
	add.s32 	%r2792, %r2791, %r2088;
	add.s32 	%r2793, %r2792, %r2786;
	add.s32 	%r2098, %r2793, 1859775393;
	shf.l.wrap.b32 	%r2100, %r2090, %r2090, 30;
	shf.l.wrap.b32 	%r2794, %r2098, %r2098, 5;
	// begin inline asm
	lop3.b32 %r2093, %r2094, %r2100, %r2096, 150;
	// end inline asm
	xor.b32  	%r2795, %r2642, %r2774;
	xor.b32  	%r2796, %r2795, %r2693;
	xor.b32  	%r2797, %r2796, %r2671;
	shf.l.wrap.b32 	%r2798, %r2797, %r2797, 1;
	add.s32 	%r2799, %r2093, %r2798;
	add.s32 	%r2800, %r2799, %r2092;
	add.s32 	%r2801, %r2800, %r2794;
	add.s32 	%r2102, %r2801, 1859775393;
	shf.l.wrap.b32 	%r2104, %r2094, %r2094, 30;
	shf.l.wrap.b32 	%r2802, %r2102, %r2102, 5;
	// begin inline asm
	lop3.b32 %r2097, %r2098, %r2104, %r2100, 150;
	// end inline asm
	xor.b32  	%r2803, %r2782, %r2742;
	xor.b32  	%r2804, %r2803, %r2694;
	xor.b32  	%r2805, %r2804, %r2692;
	shf.l.wrap.b32 	%r2806, %r2805, %r2805, 1;
	add.s32 	%r2807, %r2097, %r2806;
	add.s32 	%r2808, %r2807, %r2096;
	add.s32 	%r2809, %r2808, %r2802;
	add.s32 	%r2106, %r2809, 1859775393;
	shf.l.wrap.b32 	%r2108, %r2098, %r2098, 30;
	shf.l.wrap.b32 	%r2810, %r2106, %r2106, 5;
	// begin inline asm
	lop3.b32 %r2101, %r2102, %r2108, %r2104, 150;
	// end inline asm
	xor.b32  	%r2811, %r2790, %r2750;
	xor.b32  	%r2812, %r2811, %r2695;
	xor.b32  	%r2813, %r2812, %r2693;
	shf.l.wrap.b32 	%r2814, %r2813, %r2813, 1;
	add.s32 	%r2815, %r2101, %r2814;
	add.s32 	%r2816, %r2815, %r2100;
	add.s32 	%r2817, %r2816, %r2810;
	add.s32 	%r2110, %r2817, 1859775393;
	shf.l.wrap.b32 	%r2112, %r2102, %r2102, 30;
	shf.l.wrap.b32 	%r2818, %r2110, %r2110, 5;
	// begin inline asm
	lop3.b32 %r2105, %r2106, %r2112, %r2108, 150;
	// end inline asm
	xor.b32  	%r2819, %r2798, %r2758;
	xor.b32  	%r2820, %r2819, %r2716;
	xor.b32  	%r2821, %r2820, %r2694;
	shf.l.wrap.b32 	%r2822, %r2821, %r2821, 1;
	add.s32 	%r2823, %r2105, %r2822;
	add.s32 	%r2824, %r2823, %r2104;
	add.s32 	%r2825, %r2824, %r2818;
	add.s32 	%r2114, %r2825, 1859775393;
	shf.l.wrap.b32 	%r2116, %r2106, %r2106, 30;
	shf.l.wrap.b32 	%r2826, %r2114, %r2114, 5;
	// begin inline asm
	lop3.b32 %r2109, %r2110, %r2116, %r2112, 150;
	// end inline asm
	xor.b32  	%r2827, %r2806, %r2766;
	xor.b32  	%r2828, %r2827, %r2717;
	xor.b32  	%r2829, %r2828, %r2695;
	shf.l.wrap.b32 	%r2830, %r2829, %r2829, 1;
	add.s32 	%r2831, %r2109, %r2830;
	add.s32 	%r2832, %r2831, %r2108;
	add.s32 	%r2833, %r2832, %r2826;
	add.s32 	%r2118, %r2833, 1859775393;
	shf.l.wrap.b32 	%r2120, %r2110, %r2110, 30;
	shf.l.wrap.b32 	%r2834, %r2118, %r2118, 5;
	// begin inline asm
	lop3.b32 %r2113, %r2114, %r2120, %r2116, 150;
	// end inline asm
	xor.b32  	%r2835, %r2814, %r2774;
	xor.b32  	%r2836, %r2835, %r2718;
	xor.b32  	%r2837, %r2836, %r2716;
	shf.l.wrap.b32 	%r2838, %r2837, %r2837, 1;
	add.s32 	%r2839, %r2113, %r2838;
	add.s32 	%r2840, %r2839, %r2112;
	add.s32 	%r2841, %r2840, %r2834;
	add.s32 	%r2122, %r2841, 1859775393;
	shf.l.wrap.b32 	%r2124, %r2114, %r2114, 30;
	shf.l.wrap.b32 	%r2842, %r2122, %r2122, 5;
	// begin inline asm
	lop3.b32 %r2117, %r2118, %r2124, %r2120, 150;
	// end inline asm
	xor.b32  	%r2843, %r2822, %r2782;
	xor.b32  	%r2844, %r2843, %r2642;
	xor.b32  	%r2845, %r2844, %r2717;
	shf.l.wrap.b32 	%r2846, %r2845, %r2845, 1;
	add.s32 	%r2847, %r2117, %r2846;
	add.s32 	%r2848, %r2847, %r2116;
	add.s32 	%r2849, %r2848, %r2842;
	add.s32 	%r2126, %r2849, 1859775393;
	shf.l.wrap.b32 	%r2128, %r2118, %r2118, 30;
	shf.l.wrap.b32 	%r2850, %r2126, %r2126, 5;
	// begin inline asm
	lop3.b32 %r2121, %r2122, %r2128, %r2124, 150;
	// end inline asm
	xor.b32  	%r2851, %r2790, %r2742;
	xor.b32  	%r2852, %r2851, %r2830;
	xor.b32  	%r2853, %r2852, %r2718;
	shf.l.wrap.b32 	%r2854, %r2853, %r2853, 1;
	add.s32 	%r2855, %r2121, %r2854;
	add.s32 	%r2856, %r2855, %r2120;
	add.s32 	%r2857, %r2856, %r2850;
	add.s32 	%r2130, %r2857, 1859775393;
	shf.l.wrap.b32 	%r2132, %r2122, %r2122, 30;
	shf.l.wrap.b32 	%r2858, %r2130, %r2130, 5;
	// begin inline asm
	lop3.b32 %r2125, %r2126, %r2132, %r2128, 150;
	// end inline asm
	xor.b32  	%r2859, %r2798, %r2750;
	xor.b32  	%r2860, %r2859, %r2838;
	xor.b32  	%r2861, %r2860, %r2642;
	shf.l.wrap.b32 	%r2862, %r2861, %r2861, 1;
	add.s32 	%r2863, %r2125, %r2862;
	add.s32 	%r2864, %r2863, %r2124;
	add.s32 	%r2865, %r2864, %r2858;
	add.s32 	%r2134, %r2865, 1859775393;
	shf.l.wrap.b32 	%r2136, %r2126, %r2126, 30;
	shf.l.wrap.b32 	%r2866, %r2134, %r2134, 5;
	// begin inline asm
	lop3.b32 %r2129, %r2130, %r2136, %r2132, 150;
	// end inline asm
	xor.b32  	%r2867, %r2758, %r2742;
	xor.b32  	%r2868, %r2867, %r2806;
	xor.b32  	%r2869, %r2868, %r2846;
	shf.l.wrap.b32 	%r2870, %r2869, %r2869, 1;
	add.s32 	%r2871, %r2129, %r2870;
	add.s32 	%r2872, %r2871, %r2128;
	add.s32 	%r2873, %r2872, %r2866;
	add.s32 	%r2138, %r2873, 1859775393;
	shf.l.wrap.b32 	%r2140, %r2130, %r2130, 30;
	shf.l.wrap.b32 	%r2874, %r2138, %r2138, 5;
	// begin inline asm
	lop3.b32 %r2133, %r2134, %r2140, %r2136, 150;
	// end inline asm
	xor.b32  	%r2875, %r2766, %r2750;
	xor.b32  	%r2876, %r2875, %r2814;
	xor.b32  	%r2877, %r2876, %r2854;
	shf.l.wrap.b32 	%r2878, %r2877, %r2877, 1;
	add.s32 	%r2879, %r2133, %r2878;
	add.s32 	%r2880, %r2879, %r2132;
	add.s32 	%r2881, %r2880, %r2874;
	add.s32 	%r2142, %r2881, 1859775393;
	shf.l.wrap.b32 	%r2144, %r2134, %r2134, 30;
	shf.l.wrap.b32 	%r2882, %r2142, %r2142, 5;
	// begin inline asm
	lop3.b32 %r2137, %r2138, %r2144, %r2140, 150;
	// end inline asm
	xor.b32  	%r2883, %r2774, %r2758;
	xor.b32  	%r2884, %r2883, %r2822;
	xor.b32  	%r2885, %r2884, %r2862;
	shf.l.wrap.b32 	%r2886, %r2885, %r2885, 1;
	add.s32 	%r2887, %r2137, %r2886;
	add.s32 	%r2888, %r2887, %r2136;
	add.s32 	%r2889, %r2888, %r2882;
	add.s32 	%r2146, %r2889, 1859775393;
	shf.l.wrap.b32 	%r2148, %r2138, %r2138, 30;
	shf.l.wrap.b32 	%r2890, %r2146, %r2146, 5;
	// begin inline asm
	lop3.b32 %r2141, %r2142, %r2148, %r2144, 150;
	// end inline asm
	xor.b32  	%r2891, %r2782, %r2766;
	xor.b32  	%r2892, %r2891, %r2830;
	xor.b32  	%r2893, %r2892, %r2870;
	shf.l.wrap.b32 	%r2894, %r2893, %r2893, 1;
	add.s32 	%r2895, %r2141, %r2894;
	add.s32 	%r2896, %r2895, %r2140;
	add.s32 	%r2897, %r2896, %r2890;
	add.s32 	%r2150, %r2897, 1859775393;
	shf.l.wrap.b32 	%r2152, %r2142, %r2142, 30;
	shf.l.wrap.b32 	%r2898, %r2150, %r2150, 5;
	// begin inline asm
	lop3.b32 %r2145, %r2146, %r2152, %r2148, 150;
	// end inline asm
	xor.b32  	%r2899, %r2790, %r2774;
	xor.b32  	%r2900, %r2899, %r2838;
	xor.b32  	%r2901, %r2900, %r2878;
	shf.l.wrap.b32 	%r2902, %r2901, %r2901, 1;
	add.s32 	%r2903, %r2145, %r2902;
	add.s32 	%r2904, %r2903, %r2144;
	add.s32 	%r2905, %r2904, %r2898;
	add.s32 	%r2154, %r2905, 1859775393;
	shf.l.wrap.b32 	%r2156, %r2146, %r2146, 30;
	shf.l.wrap.b32 	%r2906, %r2154, %r2154, 5;
	// begin inline asm
	lop3.b32 %r2149, %r2150, %r2156, %r2152, 150;
	// end inline asm
	xor.b32  	%r2907, %r2798, %r2782;
	xor.b32  	%r2908, %r2907, %r2846;
	xor.b32  	%r2909, %r2908, %r2886;
	shf.l.wrap.b32 	%r2910, %r2909, %r2909, 1;
	add.s32 	%r2911, %r2149, %r2910;
	add.s32 	%r2912, %r2911, %r2148;
	add.s32 	%r2913, %r2912, %r2906;
	add.s32 	%r2158, %r2913, 1859775393;
	shf.l.wrap.b32 	%r2160, %r2150, %r2150, 30;
	shf.l.wrap.b32 	%r2914, %r2158, %r2158, 5;
	// begin inline asm
	lop3.b32 %r2153, %r2154, %r2160, %r2156, 150;
	// end inline asm
	xor.b32  	%r2915, %r2806, %r2790;
	xor.b32  	%r2916, %r2915, %r2854;
	xor.b32  	%r2917, %r2916, %r2894;
	shf.l.wrap.b32 	%r2918, %r2917, %r2917, 1;
	add.s32 	%r2919, %r2153, %r2918;
	add.s32 	%r2920, %r2919, %r2152;
	add.s32 	%r2921, %r2920, %r2914;
	add.s32 	%r2162, %r2921, 1859775393;
	shf.l.wrap.b32 	%r2164, %r2154, %r2154, 30;
	shf.l.wrap.b32 	%r2922, %r2162, %r2162, 5;
	// begin inline asm
	lop3.b32 %r2157, %r2158, %r2164, %r2160, 150;
	// end inline asm
	xor.b32  	%r2923, %r2814, %r2798;
	xor.b32  	%r2924, %r2923, %r2862;
	xor.b32  	%r2925, %r2924, %r2902;
	shf.l.wrap.b32 	%r2926, %r2925, %r2925, 1;
	add.s32 	%r2927, %r2157, %r2926;
	add.s32 	%r2928, %r2927, %r2156;
	add.s32 	%r2929, %r2928, %r2922;
	add.s32 	%r2166, %r2929, 1859775393;
	shf.l.wrap.b32 	%r2168, %r2158, %r2158, 30;
	shf.l.wrap.b32 	%r2930, %r2166, %r2166, 5;
	// begin inline asm
	lop3.b32 %r2161, %r2162, %r2168, %r2164, 232;
	// end inline asm
	xor.b32  	%r2931, %r2822, %r2806;
	xor.b32  	%r2932, %r2931, %r2870;
	xor.b32  	%r2933, %r2932, %r2910;
	shf.l.wrap.b32 	%r2934, %r2933, %r2933, 1;
	add.s32 	%r2935, %r2161, %r2934;
	add.s32 	%r2936, %r2935, %r2160;
	add.s32 	%r2937, %r2936, %r2930;
	add.s32 	%r2170, %r2937, -1894007588;
	shf.l.wrap.b32 	%r2172, %r2162, %r2162, 30;
	shf.l.wrap.b32 	%r2938, %r2170, %r2170, 5;
	// begin inline asm
	lop3.b32 %r2165, %r2166, %r2172, %r2168, 232;
	// end inline asm
	xor.b32  	%r2939, %r2830, %r2814;
	xor.b32  	%r2940, %r2939, %r2878;
	xor.b32  	%r2941, %r2940, %r2918;
	shf.l.wrap.b32 	%r2942, %r2941, %r2941, 1;
	add.s32 	%r2943, %r2165, %r2942;
	add.s32 	%r2944, %r2943, %r2164;
	add.s32 	%r2945, %r2944, %r2938;
	add.s32 	%r2174, %r2945, -1894007588;
	shf.l.wrap.b32 	%r2176, %r2166, %r2166, 30;
	shf.l.wrap.b32 	%r2946, %r2174, %r2174, 5;
	// begin inline asm
	lop3.b32 %r2169, %r2170, %r2176, %r2172, 232;
	// end inline asm
	xor.b32  	%r2947, %r2838, %r2822;
	xor.b32  	%r2948, %r2947, %r2886;
	xor.b32  	%r2949, %r2948, %r2926;
	shf.l.wrap.b32 	%r2950, %r2949, %r2949, 1;
	add.s32 	%r2951, %r2169, %r2950;
	add.s32 	%r2952, %r2951, %r2168;
	add.s32 	%r2953, %r2952, %r2946;
	add.s32 	%r2178, %r2953, -1894007588;
	shf.l.wrap.b32 	%r2180, %r2170, %r2170, 30;
	shf.l.wrap.b32 	%r2954, %r2178, %r2178, 5;
	// begin inline asm
	lop3.b32 %r2173, %r2174, %r2180, %r2176, 232;
	// end inline asm
	xor.b32  	%r2955, %r2846, %r2830;
	xor.b32  	%r2956, %r2955, %r2894;
	xor.b32  	%r2957, %r2956, %r2934;
	shf.l.wrap.b32 	%r2958, %r2957, %r2957, 1;
	add.s32 	%r2959, %r2173, %r2958;
	add.s32 	%r2960, %r2959, %r2172;
	add.s32 	%r2961, %r2960, %r2954;
	add.s32 	%r2182, %r2961, -1894007588;
	shf.l.wrap.b32 	%r2184, %r2174, %r2174, 30;
	shf.l.wrap.b32 	%r2962, %r2182, %r2182, 5;
	// begin inline asm
	lop3.b32 %r2177, %r2178, %r2184, %r2180, 232;
	// end inline asm
	xor.b32  	%r2963, %r2854, %r2838;
	xor.b32  	%r2964, %r2963, %r2902;
	xor.b32  	%r2965, %r2964, %r2942;
	shf.l.wrap.b32 	%r2966, %r2965, %r2965, 1;
	add.s32 	%r2967, %r2177, %r2966;
	add.s32 	%r2968, %r2967, %r2176;
	add.s32 	%r2969, %r2968, %r2962;
	add.s32 	%r2186, %r2969, -1894007588;
	shf.l.wrap.b32 	%r2188, %r2178, %r2178, 30;
	shf.l.wrap.b32 	%r2970, %r2186, %r2186, 5;
	// begin inline asm
	lop3.b32 %r2181, %r2182, %r2188, %r2184, 232;
	// end inline asm
	xor.b32  	%r2971, %r2862, %r2846;
	xor.b32  	%r2972, %r2971, %r2910;
	xor.b32  	%r2973, %r2972, %r2950;
	shf.l.wrap.b32 	%r2974, %r2973, %r2973, 1;
	add.s32 	%r2975, %r2181, %r2974;
	add.s32 	%r2976, %r2975, %r2180;
	add.s32 	%r2977, %r2976, %r2970;
	add.s32 	%r2190, %r2977, -1894007588;
	shf.l.wrap.b32 	%r2192, %r2182, %r2182, 30;
	shf.l.wrap.b32 	%r2978, %r2190, %r2190, 5;
	// begin inline asm
	lop3.b32 %r2185, %r2186, %r2192, %r2188, 232;
	// end inline asm
	xor.b32  	%r2979, %r2870, %r2854;
	xor.b32  	%r2980, %r2979, %r2918;
	xor.b32  	%r2981, %r2980, %r2958;
	shf.l.wrap.b32 	%r2982, %r2981, %r2981, 1;
	add.s32 	%r2983, %r2185, %r2982;
	add.s32 	%r2984, %r2983, %r2184;
	add.s32 	%r2985, %r2984, %r2978;
	add.s32 	%r2194, %r2985, -1894007588;
	shf.l.wrap.b32 	%r2196, %r2186, %r2186, 30;
	shf.l.wrap.b32 	%r2986, %r2194, %r2194, 5;
	// begin inline asm
	lop3.b32 %r2189, %r2190, %r2196, %r2192, 232;
	// end inline asm
	xor.b32  	%r2987, %r2878, %r2862;
	xor.b32  	%r2988, %r2987, %r2926;
	xor.b32  	%r2989, %r2988, %r2966;
	shf.l.wrap.b32 	%r2990, %r2989, %r2989, 1;
	add.s32 	%r2991, %r2189, %r2990;
	add.s32 	%r2992, %r2991, %r2188;
	add.s32 	%r2993, %r2992, %r2986;
	add.s32 	%r2198, %r2993, -1894007588;
	shf.l.wrap.b32 	%r2200, %r2190, %r2190, 30;
	shf.l.wrap.b32 	%r2994, %r2198, %r2198, 5;
	// begin inline asm
	lop3.b32 %r2193, %r2194, %r2200, %r2196, 232;
	// end inline asm
	xor.b32  	%r2995, %r2886, %r2870;
	xor.b32  	%r2996, %r2995, %r2934;
	xor.b32  	%r2997, %r2996, %r2974;
	shf.l.wrap.b32 	%r2998, %r2997, %r2997, 1;
	add.s32 	%r2999, %r2193, %r2998;
	add.s32 	%r3000, %r2999, %r2192;
	add.s32 	%r3001, %r3000, %r2994;
	add.s32 	%r2202, %r3001, -1894007588;
	shf.l.wrap.b32 	%r2204, %r2194, %r2194, 30;
	shf.l.wrap.b32 	%r3002, %r2202, %r2202, 5;
	// begin inline asm
	lop3.b32 %r2197, %r2198, %r2204, %r2200, 232;
	// end inline asm
	xor.b32  	%r3003, %r2894, %r2878;
	xor.b32  	%r3004, %r3003, %r2942;
	xor.b32  	%r3005, %r3004, %r2982;
	shf.l.wrap.b32 	%r3006, %r3005, %r3005, 1;
	add.s32 	%r3007, %r2197, %r3006;
	add.s32 	%r3008, %r3007, %r2196;
	add.s32 	%r3009, %r3008, %r3002;
	add.s32 	%r2206, %r3009, -1894007588;
	shf.l.wrap.b32 	%r2208, %r2198, %r2198, 30;
	shf.l.wrap.b32 	%r3010, %r2206, %r2206, 5;
	// begin inline asm
	lop3.b32 %r2201, %r2202, %r2208, %r2204, 232;
	// end inline asm
	xor.b32  	%r3011, %r2902, %r2886;
	xor.b32  	%r3012, %r3011, %r2950;
	xor.b32  	%r3013, %r3012, %r2990;
	shf.l.wrap.b32 	%r3014, %r3013, %r3013, 1;
	add.s32 	%r3015, %r2201, %r3014;
	add.s32 	%r3016, %r3015, %r2200;
	add.s32 	%r3017, %r3016, %r3010;
	add.s32 	%r2210, %r3017, -1894007588;
	shf.l.wrap.b32 	%r2212, %r2202, %r2202, 30;
	shf.l.wrap.b32 	%r3018, %r2210, %r2210, 5;
	// begin inline asm
	lop3.b32 %r2205, %r2206, %r2212, %r2208, 232;
	// end inline asm
	xor.b32  	%r3019, %r2910, %r2894;
	xor.b32  	%r3020, %r3019, %r2958;
	xor.b32  	%r3021, %r3020, %r2998;
	shf.l.wrap.b32 	%r3022, %r3021, %r3021, 1;
	add.s32 	%r3023, %r2205, %r3022;
	add.s32 	%r3024, %r3023, %r2204;
	add.s32 	%r3025, %r3024, %r3018;
	add.s32 	%r2214, %r3025, -1894007588;
	shf.l.wrap.b32 	%r2216, %r2206, %r2206, 30;
	shf.l.wrap.b32 	%r3026, %r2214, %r2214, 5;
	// begin inline asm
	lop3.b32 %r2209, %r2210, %r2216, %r2212, 232;
	// end inline asm
	xor.b32  	%r3027, %r2918, %r2902;
	xor.b32  	%r3028, %r3027, %r2966;
	xor.b32  	%r3029, %r3028, %r3006;
	shf.l.wrap.b32 	%r3030, %r3029, %r3029, 1;
	add.s32 	%r3031, %r2209, %r3030;
	add.s32 	%r3032, %r3031, %r2208;
	add.s32 	%r3033, %r3032, %r3026;
	add.s32 	%r2218, %r3033, -1894007588;
	shf.l.wrap.b32 	%r2220, %r2210, %r2210, 30;
	shf.l.wrap.b32 	%r3034, %r2218, %r2218, 5;
	// begin inline asm
	lop3.b32 %r2213, %r2214, %r2220, %r2216, 232;
	// end inline asm
	xor.b32  	%r3035, %r2926, %r2910;
	xor.b32  	%r3036, %r3035, %r2974;
	xor.b32  	%r3037, %r3036, %r3014;
	shf.l.wrap.b32 	%r3038, %r3037, %r3037, 1;
	add.s32 	%r3039, %r2213, %r3038;
	add.s32 	%r3040, %r3039, %r2212;
	add.s32 	%r3041, %r3040, %r3034;
	add.s32 	%r2222, %r3041, -1894007588;
	shf.l.wrap.b32 	%r2224, %r2214, %r2214, 30;
	shf.l.wrap.b32 	%r3042, %r2222, %r2222, 5;
	// begin inline asm
	lop3.b32 %r2217, %r2218, %r2224, %r2220, 232;
	// end inline asm
	xor.b32  	%r3043, %r2934, %r2918;
	xor.b32  	%r3044, %r3043, %r2982;
	xor.b32  	%r3045, %r3044, %r3022;
	shf.l.wrap.b32 	%r3046, %r3045, %r3045, 1;
	add.s32 	%r3047, %r2217, %r3046;
	add.s32 	%r3048, %r3047, %r2216;
	add.s32 	%r3049, %r3048, %r3042;
	add.s32 	%r2226, %r3049, -1894007588;
	shf.l.wrap.b32 	%r2228, %r2218, %r2218, 30;
	shf.l.wrap.b32 	%r3050, %r2226, %r2226, 5;
	// begin inline asm
	lop3.b32 %r2221, %r2222, %r2228, %r2224, 232;
	// end inline asm
	xor.b32  	%r3051, %r2942, %r2926;
	xor.b32  	%r3052, %r3051, %r2990;
	xor.b32  	%r3053, %r3052, %r3030;
	shf.l.wrap.b32 	%r3054, %r3053, %r3053, 1;
	add.s32 	%r3055, %r2221, %r3054;
	add.s32 	%r3056, %r3055, %r2220;
	add.s32 	%r3057, %r3056, %r3050;
	add.s32 	%r2230, %r3057, -1894007588;
	shf.l.wrap.b32 	%r2232, %r2222, %r2222, 30;
	shf.l.wrap.b32 	%r3058, %r2230, %r2230, 5;
	// begin inline asm
	lop3.b32 %r2225, %r2226, %r2232, %r2228, 232;
	// end inline asm
	xor.b32  	%r3059, %r2950, %r2934;
	xor.b32  	%r3060, %r3059, %r2998;
	xor.b32  	%r3061, %r3060, %r3038;
	shf.l.wrap.b32 	%r3062, %r3061, %r3061, 1;
	add.s32 	%r3063, %r2225, %r3062;
	add.s32 	%r3064, %r3063, %r2224;
	add.s32 	%r3065, %r3064, %r3058;
	add.s32 	%r2234, %r3065, -1894007588;
	shf.l.wrap.b32 	%r2236, %r2226, %r2226, 30;
	shf.l.wrap.b32 	%r3066, %r2234, %r2234, 5;
	// begin inline asm
	lop3.b32 %r2229, %r2230, %r2236, %r2232, 232;
	// end inline asm
	xor.b32  	%r3067, %r2958, %r2942;
	xor.b32  	%r3068, %r3067, %r3006;
	xor.b32  	%r3069, %r3068, %r3046;
	shf.l.wrap.b32 	%r3070, %r3069, %r3069, 1;
	add.s32 	%r3071, %r2229, %r3070;
	add.s32 	%r3072, %r3071, %r2228;
	add.s32 	%r3073, %r3072, %r3066;
	add.s32 	%r2238, %r3073, -1894007588;
	shf.l.wrap.b32 	%r2240, %r2230, %r2230, 30;
	shf.l.wrap.b32 	%r3074, %r2238, %r2238, 5;
	// begin inline asm
	lop3.b32 %r2233, %r2234, %r2240, %r2236, 232;
	// end inline asm
	xor.b32  	%r3075, %r2966, %r2950;
	xor.b32  	%r3076, %r3075, %r3014;
	xor.b32  	%r3077, %r3076, %r3054;
	shf.l.wrap.b32 	%r3078, %r3077, %r3077, 1;
	add.s32 	%r3079, %r2233, %r3078;
	add.s32 	%r3080, %r3079, %r2232;
	add.s32 	%r3081, %r3080, %r3074;
	add.s32 	%r2242, %r3081, -1894007588;
	shf.l.wrap.b32 	%r2244, %r2234, %r2234, 30;
	shf.l.wrap.b32 	%r3082, %r2242, %r2242, 5;
	// begin inline asm
	lop3.b32 %r2237, %r2238, %r2244, %r2240, 232;
	// end inline asm
	xor.b32  	%r3083, %r2974, %r2958;
	xor.b32  	%r3084, %r3083, %r3022;
	xor.b32  	%r3085, %r3084, %r3062;
	shf.l.wrap.b32 	%r3086, %r3085, %r3085, 1;
	add.s32 	%r3087, %r2237, %r3086;
	add.s32 	%r3088, %r3087, %r2236;
	add.s32 	%r3089, %r3088, %r3082;
	add.s32 	%r2246, %r3089, -1894007588;
	shf.l.wrap.b32 	%r2248, %r2238, %r2238, 30;
	shf.l.wrap.b32 	%r3090, %r2246, %r2246, 5;
	// begin inline asm
	lop3.b32 %r2241, %r2242, %r2248, %r2244, 150;
	// end inline asm
	xor.b32  	%r3091, %r2982, %r2966;
	xor.b32  	%r3092, %r3091, %r3030;
	xor.b32  	%r3093, %r3092, %r3070;
	shf.l.wrap.b32 	%r3094, %r3093, %r3093, 1;
	add.s32 	%r3095, %r2241, %r3094;
	add.s32 	%r3096, %r3095, %r2240;
	add.s32 	%r3097, %r3096, %r3090;
	add.s32 	%r2250, %r3097, -899497514;
	shf.l.wrap.b32 	%r2252, %r2242, %r2242, 30;
	shf.l.wrap.b32 	%r3098, %r2250, %r2250, 5;
	// begin inline asm
	lop3.b32 %r2245, %r2246, %r2252, %r2248, 150;
	// end inline asm
	xor.b32  	%r3099, %r2990, %r2974;
	xor.b32  	%r3100, %r3099, %r3038;
	xor.b32  	%r3101, %r3100, %r3078;
	shf.l.wrap.b32 	%r3102, %r3101, %r3101, 1;
	add.s32 	%r3103, %r2245, %r3102;
	add.s32 	%r3104, %r3103, %r2244;
	add.s32 	%r3105, %r3104, %r3098;
	add.s32 	%r2254, %r3105, -899497514;
	shf.l.wrap.b32 	%r2256, %r2246, %r2246, 30;
	shf.l.wrap.b32 	%r3106, %r2254, %r2254, 5;
	// begin inline asm
	lop3.b32 %r2249, %r2250, %r2256, %r2252, 150;
	// end inline asm
	xor.b32  	%r3107, %r2998, %r2982;
	xor.b32  	%r3108, %r3107, %r3046;
	xor.b32  	%r3109, %r3108, %r3086;
	shf.l.wrap.b32 	%r3110, %r3109, %r3109, 1;
	add.s32 	%r3111, %r2249, %r3110;
	add.s32 	%r3112, %r3111, %r2248;
	add.s32 	%r3113, %r3112, %r3106;
	add.s32 	%r2258, %r3113, -899497514;
	shf.l.wrap.b32 	%r2260, %r2250, %r2250, 30;
	shf.l.wrap.b32 	%r3114, %r2258, %r2258, 5;
	// begin inline asm
	lop3.b32 %r2253, %r2254, %r2260, %r2256, 150;
	// end inline asm
	xor.b32  	%r3115, %r3006, %r2990;
	xor.b32  	%r3116, %r3115, %r3054;
	xor.b32  	%r3117, %r3116, %r3094;
	shf.l.wrap.b32 	%r3118, %r3117, %r3117, 1;
	add.s32 	%r3119, %r2253, %r3118;
	add.s32 	%r3120, %r3119, %r2252;
	add.s32 	%r3121, %r3120, %r3114;
	add.s32 	%r2262, %r3121, -899497514;
	shf.l.wrap.b32 	%r2264, %r2254, %r2254, 30;
	shf.l.wrap.b32 	%r3122, %r2262, %r2262, 5;
	// begin inline asm
	lop3.b32 %r2257, %r2258, %r2264, %r2260, 150;
	// end inline asm
	xor.b32  	%r3123, %r3014, %r2998;
	xor.b32  	%r3124, %r3123, %r3062;
	xor.b32  	%r3125, %r3124, %r3102;
	shf.l.wrap.b32 	%r3126, %r3125, %r3125, 1;
	add.s32 	%r3127, %r2257, %r3126;
	add.s32 	%r3128, %r3127, %r2256;
	add.s32 	%r3129, %r3128, %r3122;
	add.s32 	%r2266, %r3129, -899497514;
	shf.l.wrap.b32 	%r2268, %r2258, %r2258, 30;
	shf.l.wrap.b32 	%r3130, %r2266, %r2266, 5;
	// begin inline asm
	lop3.b32 %r2261, %r2262, %r2268, %r2264, 150;
	// end inline asm
	xor.b32  	%r3131, %r3022, %r3006;
	xor.b32  	%r3132, %r3131, %r3070;
	xor.b32  	%r3133, %r3132, %r3110;
	shf.l.wrap.b32 	%r3134, %r3133, %r3133, 1;
	add.s32 	%r3135, %r2261, %r3134;
	add.s32 	%r3136, %r3135, %r2260;
	add.s32 	%r3137, %r3136, %r3130;
	add.s32 	%r2270, %r3137, -899497514;
	shf.l.wrap.b32 	%r2272, %r2262, %r2262, 30;
	shf.l.wrap.b32 	%r3138, %r2270, %r2270, 5;
	// begin inline asm
	lop3.b32 %r2265, %r2266, %r2272, %r2268, 150;
	// end inline asm
	xor.b32  	%r3139, %r3030, %r3014;
	xor.b32  	%r3140, %r3139, %r3078;
	xor.b32  	%r3141, %r3140, %r3118;
	shf.l.wrap.b32 	%r3142, %r3141, %r3141, 1;
	add.s32 	%r3143, %r2265, %r3142;
	add.s32 	%r3144, %r3143, %r2264;
	add.s32 	%r3145, %r3144, %r3138;
	add.s32 	%r2274, %r3145, -899497514;
	shf.l.wrap.b32 	%r2276, %r2266, %r2266, 30;
	shf.l.wrap.b32 	%r3146, %r2274, %r2274, 5;
	// begin inline asm
	lop3.b32 %r2269, %r2270, %r2276, %r2272, 150;
	// end inline asm
	xor.b32  	%r3147, %r3038, %r3022;
	xor.b32  	%r3148, %r3147, %r3086;
	xor.b32  	%r3149, %r3148, %r3126;
	shf.l.wrap.b32 	%r3150, %r3149, %r3149, 1;
	add.s32 	%r3151, %r2269, %r3150;
	add.s32 	%r3152, %r3151, %r2268;
	add.s32 	%r3153, %r3152, %r3146;
	add.s32 	%r2278, %r3153, -899497514;
	shf.l.wrap.b32 	%r2280, %r2270, %r2270, 30;
	shf.l.wrap.b32 	%r3154, %r2278, %r2278, 5;
	// begin inline asm
	lop3.b32 %r2273, %r2274, %r2280, %r2276, 150;
	// end inline asm
	xor.b32  	%r3155, %r3046, %r3030;
	xor.b32  	%r3156, %r3155, %r3094;
	xor.b32  	%r3157, %r3156, %r3134;
	shf.l.wrap.b32 	%r3158, %r3157, %r3157, 1;
	add.s32 	%r3159, %r2273, %r3158;
	add.s32 	%r3160, %r3159, %r2272;
	add.s32 	%r3161, %r3160, %r3154;
	add.s32 	%r2282, %r3161, -899497514;
	shf.l.wrap.b32 	%r2284, %r2274, %r2274, 30;
	shf.l.wrap.b32 	%r3162, %r2282, %r2282, 5;
	// begin inline asm
	lop3.b32 %r2277, %r2278, %r2284, %r2280, 150;
	// end inline asm
	xor.b32  	%r3163, %r3054, %r3038;
	xor.b32  	%r3164, %r3163, %r3102;
	xor.b32  	%r3165, %r3164, %r3142;
	shf.l.wrap.b32 	%r3166, %r3165, %r3165, 1;
	add.s32 	%r3167, %r2277, %r3166;
	add.s32 	%r3168, %r3167, %r2276;
	add.s32 	%r3169, %r3168, %r3162;
	add.s32 	%r2286, %r3169, -899497514;
	shf.l.wrap.b32 	%r2288, %r2278, %r2278, 30;
	shf.l.wrap.b32 	%r3170, %r2286, %r2286, 5;
	// begin inline asm
	lop3.b32 %r2281, %r2282, %r2288, %r2284, 150;
	// end inline asm
	xor.b32  	%r3171, %r3062, %r3046;
	xor.b32  	%r3172, %r3171, %r3110;
	xor.b32  	%r3173, %r3172, %r3150;
	shf.l.wrap.b32 	%r3174, %r3173, %r3173, 1;
	add.s32 	%r3175, %r2281, %r3174;
	add.s32 	%r3176, %r3175, %r2280;
	add.s32 	%r3177, %r3176, %r3170;
	add.s32 	%r2290, %r3177, -899497514;
	shf.l.wrap.b32 	%r2292, %r2282, %r2282, 30;
	shf.l.wrap.b32 	%r3178, %r2290, %r2290, 5;
	// begin inline asm
	lop3.b32 %r2285, %r2286, %r2292, %r2288, 150;
	// end inline asm
	xor.b32  	%r3179, %r3070, %r3054;
	xor.b32  	%r3180, %r3179, %r3118;
	xor.b32  	%r3181, %r3180, %r3158;
	shf.l.wrap.b32 	%r3182, %r3181, %r3181, 1;
	add.s32 	%r3183, %r2285, %r3182;
	add.s32 	%r3184, %r3183, %r2284;
	add.s32 	%r3185, %r3184, %r3178;
	add.s32 	%r2294, %r3185, -899497514;
	shf.l.wrap.b32 	%r2296, %r2286, %r2286, 30;
	shf.l.wrap.b32 	%r3186, %r2294, %r2294, 5;
	// begin inline asm
	lop3.b32 %r2289, %r2290, %r2296, %r2292, 150;
	// end inline asm
	xor.b32  	%r3187, %r3078, %r3062;
	xor.b32  	%r3188, %r3187, %r3126;
	xor.b32  	%r3189, %r3188, %r3166;
	shf.l.wrap.b32 	%r3190, %r3189, %r3189, 1;
	add.s32 	%r3191, %r2289, %r3190;
	add.s32 	%r3192, %r3191, %r2288;
	add.s32 	%r3193, %r3192, %r3186;
	add.s32 	%r2298, %r3193, -899497514;
	shf.l.wrap.b32 	%r2300, %r2290, %r2290, 30;
	shf.l.wrap.b32 	%r3194, %r2298, %r2298, 5;
	// begin inline asm
	lop3.b32 %r2293, %r2294, %r2300, %r2296, 150;
	// end inline asm
	xor.b32  	%r3195, %r3086, %r3070;
	xor.b32  	%r3196, %r3195, %r3134;
	xor.b32  	%r3197, %r3196, %r3174;
	shf.l.wrap.b32 	%r3198, %r3197, %r3197, 1;
	add.s32 	%r3199, %r2293, %r3198;
	add.s32 	%r3200, %r3199, %r2292;
	add.s32 	%r3201, %r3200, %r3194;
	add.s32 	%r2302, %r3201, -899497514;
	shf.l.wrap.b32 	%r2304, %r2294, %r2294, 30;
	shf.l.wrap.b32 	%r3202, %r2302, %r2302, 5;
	// begin inline asm
	lop3.b32 %r2297, %r2298, %r2304, %r2300, 150;
	// end inline asm
	xor.b32  	%r3203, %r3094, %r3078;
	xor.b32  	%r3204, %r3203, %r3142;
	xor.b32  	%r3205, %r3204, %r3182;
	shf.l.wrap.b32 	%r3206, %r3205, %r3205, 1;
	add.s32 	%r3207, %r2297, %r3206;
	add.s32 	%r3208, %r3207, %r2296;
	add.s32 	%r3209, %r3208, %r3202;
	add.s32 	%r2306, %r3209, -899497514;
	shf.l.wrap.b32 	%r2308, %r2298, %r2298, 30;
	shf.l.wrap.b32 	%r3210, %r2306, %r2306, 5;
	// begin inline asm
	lop3.b32 %r2301, %r2302, %r2308, %r2304, 150;
	// end inline asm
	xor.b32  	%r3211, %r3102, %r3086;
	xor.b32  	%r3212, %r3211, %r3150;
	xor.b32  	%r3213, %r3212, %r3190;
	shf.l.wrap.b32 	%r3214, %r3213, %r3213, 1;
	add.s32 	%r3215, %r2301, %r3214;
	add.s32 	%r3216, %r3215, %r2300;
	add.s32 	%r3217, %r3216, %r3210;
	add.s32 	%r2310, %r3217, -899497514;
	shf.l.wrap.b32 	%r2312, %r2302, %r2302, 30;
	shf.l.wrap.b32 	%r3218, %r2310, %r2310, 5;
	// begin inline asm
	lop3.b32 %r2305, %r2306, %r2312, %r2308, 150;
	// end inline asm
	xor.b32  	%r3219, %r3110, %r3094;
	xor.b32  	%r3220, %r3219, %r3158;
	xor.b32  	%r3221, %r3220, %r3198;
	shf.l.wrap.b32 	%r3222, %r3221, %r3221, 1;
	add.s32 	%r3223, %r2305, %r3222;
	add.s32 	%r3224, %r3223, %r2304;
	add.s32 	%r3225, %r3224, %r3218;
	add.s32 	%r2314, %r3225, -899497514;
	shf.l.wrap.b32 	%r2316, %r2306, %r2306, 30;
	shf.l.wrap.b32 	%r3226, %r2314, %r2314, 5;
	// begin inline asm
	lop3.b32 %r2309, %r2310, %r2316, %r2312, 150;
	// end inline asm
	xor.b32  	%r3227, %r3118, %r3102;
	xor.b32  	%r3228, %r3227, %r3166;
	xor.b32  	%r3229, %r3228, %r3206;
	shf.l.wrap.b32 	%r3230, %r3229, %r3229, 1;
	add.s32 	%r3231, %r2309, %r3230;
	add.s32 	%r3232, %r3231, %r2308;
	add.s32 	%r3233, %r3232, %r3226;
	add.s32 	%r2318, %r3233, -899497514;
	shf.l.wrap.b32 	%r2320, %r2310, %r2310, 30;
	shf.l.wrap.b32 	%r3234, %r2318, %r2318, 5;
	// begin inline asm
	lop3.b32 %r2313, %r2314, %r2320, %r2316, 150;
	// end inline asm
	xor.b32  	%r3235, %r3126, %r3110;
	xor.b32  	%r3236, %r3235, %r3174;
	xor.b32  	%r3237, %r3236, %r3214;
	shf.l.wrap.b32 	%r3238, %r3237, %r3237, 1;
	add.s32 	%r3239, %r2313, %r3238;
	add.s32 	%r3240, %r3239, %r2312;
	add.s32 	%r3241, %r3240, %r3234;
	add.s32 	%r3242, %r3241, -899497514;
	shf.l.wrap.b32 	%r2319, %r2314, %r2314, 30;
	shf.l.wrap.b32 	%r3243, %r3242, %r3242, 5;
	// begin inline asm
	lop3.b32 %r2317, %r2318, %r2319, %r2320, 150;
	// end inline asm
	xor.b32  	%r3244, %r3134, %r3118;
	xor.b32  	%r3245, %r3244, %r3182;
	xor.b32  	%r3246, %r3245, %r3222;
	shf.l.wrap.b32 	%r3247, %r3246, %r3246, 1;
	shf.l.wrap.b32 	%r3248, %r2318, %r2318, 30;
	add.s32 	%r3249, %r3817, %r2317;
	add.s32 	%r3250, %r3249, %r3247;
	add.s32 	%r3251, %r3250, %r2316;
	add.s32 	%r3252, %r3251, %r3243;
	add.s32 	%r3253, %r3252, -899497514;
	add.s32 	%r3254, %r3242, %r3816;
	add.s32 	%r3255, %r3248, %r3815;
	add.s32 	%r3256, %r2319, %r3814;
	add.s32 	%r3257, %r2320, %r3813;
	ld.global.u32 	%r2326, [%rd1+-40];
	shf.l.wrap.b32 	%r3258, %r2326, %r2326, 5;
	ld.global.u32 	%r2324, [%rd1+-28];
	ld.global.u32 	%r2323, [%rd1+-32];
	ld.global.u32 	%r2322, [%rd1+-36];
	// begin inline asm
	lop3.b32 %r2321, %r2322, %r2323, %r2324, 202;
	// end inline asm
	ld.global.u32 	%r3259, [%rd1+-24];
	add.s32 	%r3260, %r3258, %r3259;
	add.s32 	%r3261, %r3260, %r2321;
	add.s32 	%r3262, %r3261, %r3253;
	add.s32 	%r2330, %r3262, 1518500249;
	shf.l.wrap.b32 	%r2332, %r2322, %r2322, 30;
	shf.l.wrap.b32 	%r3263, %r2330, %r2330, 5;
	// begin inline asm
	lop3.b32 %r2325, %r2326, %r2332, %r2323, 202;
	// end inline asm
	add.s32 	%r3264, %r2324, %r2325;
	add.s32 	%r3265, %r3264, %r3254;
	add.s32 	%r3266, %r3265, %r3263;
	add.s32 	%r2334, %r3266, 1518500249;
	shf.l.wrap.b32 	%r2336, %r2326, %r2326, 30;
	shf.l.wrap.b32 	%r3267, %r2334, %r2334, 5;
	// begin inline asm
	lop3.b32 %r2329, %r2330, %r2336, %r2332, 202;
	// end inline asm
	add.s32 	%r3268, %r2323, %r2329;
	add.s32 	%r3269, %r3268, %r3255;
	add.s32 	%r3270, %r3269, %r3267;
	add.s32 	%r2338, %r3270, 1518500249;
	shf.l.wrap.b32 	%r2340, %r2330, %r2330, 30;
	shf.l.wrap.b32 	%r3271, %r2338, %r2338, 5;
	// begin inline asm
	lop3.b32 %r2333, %r2334, %r2340, %r2336, 202;
	// end inline asm
	add.s32 	%r3272, %r2332, %r2333;
	add.s32 	%r3273, %r3272, %r3256;
	add.s32 	%r3274, %r3273, %r3271;
	add.s32 	%r2342, %r3274, 1518500249;
	shf.l.wrap.b32 	%r2344, %r2334, %r2334, 30;
	shf.l.wrap.b32 	%r3275, %r2342, %r2342, 5;
	// begin inline asm
	lop3.b32 %r2337, %r2338, %r2344, %r2340, 202;
	// end inline asm
	add.s32 	%r3276, %r2336, %r2337;
	add.s32 	%r3277, %r3276, %r3257;
	add.s32 	%r3278, %r3277, %r3275;
	add.s32 	%r2346, %r3278, 1518500249;
	shf.l.wrap.b32 	%r2348, %r2338, %r2338, 30;
	shf.l.wrap.b32 	%r3279, %r2346, %r2346, 5;
	// begin inline asm
	lop3.b32 %r2341, %r2342, %r2348, %r2344, 202;
	// end inline asm
	add.s32 	%r3280, %r2340, %r2341;
	add.s32 	%r3281, %r3280, 1518500249;
	xor.b32  	%r3282, %r3281, -2147483648;
	add.s32 	%r2350, %r3282, %r3279;
	shf.l.wrap.b32 	%r2352, %r2342, %r2342, 30;
	shf.l.wrap.b32 	%r3283, %r2350, %r2350, 5;
	// begin inline asm
	lop3.b32 %r2345, %r2346, %r2352, %r2348, 202;
	// end inline asm
	add.s32 	%r3284, %r2344, %r2345;
	add.s32 	%r3285, %r3284, %r3283;
	add.s32 	%r2354, %r3285, 1518500249;
	shf.l.wrap.b32 	%r2356, %r2346, %r2346, 30;
	shf.l.wrap.b32 	%r3286, %r2354, %r2354, 5;
	// begin inline asm
	lop3.b32 %r2349, %r2350, %r2356, %r2352, 202;
	// end inline asm
	add.s32 	%r3287, %r2349, %r2348;
	add.s32 	%r3288, %r3287, %r3286;
	add.s32 	%r2358, %r3288, 1518500249;
	shf.l.wrap.b32 	%r2360, %r2350, %r2350, 30;
	shf.l.wrap.b32 	%r3289, %r2358, %r2358, 5;
	// begin inline asm
	lop3.b32 %r2353, %r2354, %r2360, %r2356, 202;
	// end inline asm
	add.s32 	%r3290, %r2353, %r2352;
	add.s32 	%r3291, %r3290, %r3289;
	add.s32 	%r2362, %r3291, 1518500249;
	shf.l.wrap.b32 	%r2364, %r2354, %r2354, 30;
	shf.l.wrap.b32 	%r3292, %r2362, %r2362, 5;
	// begin inline asm
	lop3.b32 %r2357, %r2358, %r2364, %r2360, 202;
	// end inline asm
	add.s32 	%r3293, %r2357, %r2356;
	add.s32 	%r3294, %r3293, %r3292;
	add.s32 	%r2366, %r3294, 1518500249;
	shf.l.wrap.b32 	%r2368, %r2358, %r2358, 30;
	shf.l.wrap.b32 	%r3295, %r2366, %r2366, 5;
	// begin inline asm
	lop3.b32 %r2361, %r2362, %r2368, %r2364, 202;
	// end inline asm
	add.s32 	%r3296, %r2361, %r2360;
	add.s32 	%r3297, %r3296, %r3295;
	add.s32 	%r2370, %r3297, 1518500249;
	shf.l.wrap.b32 	%r2372, %r2362, %r2362, 30;
	shf.l.wrap.b32 	%r3298, %r2370, %r2370, 5;
	// begin inline asm
	lop3.b32 %r2365, %r2366, %r2372, %r2368, 202;
	// end inline asm
	add.s32 	%r3299, %r2365, %r2364;
	add.s32 	%r3300, %r3299, %r3298;
	add.s32 	%r2374, %r3300, 1518500249;
	shf.l.wrap.b32 	%r2376, %r2366, %r2366, 30;
	shf.l.wrap.b32 	%r3301, %r2374, %r2374, 5;
	// begin inline asm
	lop3.b32 %r2369, %r2370, %r2376, %r2372, 202;
	// end inline asm
	add.s32 	%r3302, %r2369, %r2368;
	add.s32 	%r3303, %r3302, %r3301;
	add.s32 	%r2378, %r3303, 1518500249;
	shf.l.wrap.b32 	%r2380, %r2370, %r2370, 30;
	shf.l.wrap.b32 	%r3304, %r2378, %r2378, 5;
	// begin inline asm
	lop3.b32 %r2373, %r2374, %r2380, %r2376, 202;
	// end inline asm
	add.s32 	%r3305, %r2373, %r2372;
	add.s32 	%r3306, %r3305, %r3304;
	add.s32 	%r2382, %r3306, 1518500249;
	shf.l.wrap.b32 	%r2384, %r2374, %r2374, 30;
	shf.l.wrap.b32 	%r3307, %r2382, %r2382, 5;
	// begin inline asm
	lop3.b32 %r2377, %r2378, %r2384, %r2380, 202;
	// end inline asm
	add.s32 	%r3308, %r2377, %r2376;
	add.s32 	%r3309, %r3308, %r3307;
	add.s32 	%r2386, %r3309, 1518500249;
	shf.l.wrap.b32 	%r2388, %r2378, %r2378, 30;
	shf.l.wrap.b32 	%r3310, %r2386, %r2386, 5;
	// begin inline asm
	lop3.b32 %r2381, %r2382, %r2388, %r2384, 202;
	// end inline asm
	add.s32 	%r3311, %r2381, %r2380;
	add.s32 	%r3312, %r3311, %r3310;
	add.s32 	%r2390, %r3312, 1518500921;
	shf.l.wrap.b32 	%r2392, %r2382, %r2382, 30;
	shf.l.wrap.b32 	%r3313, %r2390, %r2390, 5;
	// begin inline asm
	lop3.b32 %r2385, %r2386, %r2392, %r2388, 202;
	// end inline asm
	xor.b32  	%r3314, %r3253, %r3255;
	shf.l.wrap.b32 	%r3315, %r3314, %r3314, 1;
	add.s32 	%r3316, %r2385, %r3315;
	add.s32 	%r3317, %r3316, %r2384;
	add.s32 	%r3318, %r3317, %r3313;
	add.s32 	%r2394, %r3318, 1518500249;
	shf.l.wrap.b32 	%r2396, %r2386, %r2386, 30;
	shf.l.wrap.b32 	%r3319, %r2394, %r2394, 5;
	// begin inline asm
	lop3.b32 %r2389, %r2390, %r2396, %r2392, 202;
	// end inline asm
	xor.b32  	%r3320, %r3254, %r3256;
	shf.l.wrap.b32 	%r3321, %r3320, %r3320, 1;
	add.s32 	%r3322, %r2389, %r3321;
	add.s32 	%r3323, %r3322, %r2388;
	add.s32 	%r3324, %r3323, %r3319;
	add.s32 	%r2398, %r3324, 1518500249;
	shf.l.wrap.b32 	%r2400, %r2390, %r2390, 30;
	shf.l.wrap.b32 	%r3325, %r2398, %r2398, 5;
	// begin inline asm
	lop3.b32 %r2393, %r2394, %r2400, %r2396, 202;
	// end inline asm
	xor.b32  	%r3326, %r3257, %r3255;
	xor.b32  	%r3327, %r3326, 672;
	shf.l.wrap.b32 	%r3328, %r3327, %r3327, 1;
	add.s32 	%r3329, %r2393, %r3328;
	add.s32 	%r3330, %r3329, %r2392;
	add.s32 	%r3331, %r3330, %r3325;
	add.s32 	%r2402, %r3331, 1518500249;
	shf.l.wrap.b32 	%r2404, %r2394, %r2394, 30;
	shf.l.wrap.b32 	%r3332, %r2402, %r2402, 5;
	// begin inline asm
	lop3.b32 %r2397, %r2398, %r2404, %r2400, 202;
	// end inline asm
	xor.b32  	%r3333, %r3315, %r3256;
	xor.b32  	%r3334, %r3333, -2147483648;
	shf.l.wrap.b32 	%r3335, %r3334, %r3334, 1;
	add.s32 	%r3336, %r2397, %r3335;
	add.s32 	%r3337, %r3336, %r2396;
	add.s32 	%r3338, %r3337, %r3332;
	add.s32 	%r2406, %r3338, 1518500249;
	shf.l.wrap.b32 	%r2408, %r2398, %r2398, 30;
	shf.l.wrap.b32 	%r3339, %r2406, %r2406, 5;
	// begin inline asm
	lop3.b32 %r2401, %r2402, %r2408, %r2404, 150;
	// end inline asm
	xor.b32  	%r3340, %r3257, %r3321;
	shf.l.wrap.b32 	%r3341, %r3340, %r3340, 1;
	add.s32 	%r3342, %r2401, %r3341;
	add.s32 	%r3343, %r3342, %r2400;
	add.s32 	%r3344, %r3343, %r3339;
	add.s32 	%r2410, %r3344, 1859775393;
	shf.l.wrap.b32 	%r2412, %r2402, %r2402, 30;
	shf.l.wrap.b32 	%r3345, %r2410, %r2410, 5;
	// begin inline asm
	lop3.b32 %r2405, %r2406, %r2412, %r2408, 150;
	// end inline asm
	xor.b32  	%r3346, %r3328, -2147483648;
	shf.l.wrap.b32 	%r3347, %r3346, %r3346, 1;
	add.s32 	%r3348, %r2405, %r3347;
	add.s32 	%r3349, %r3348, %r2404;
	add.s32 	%r3350, %r3349, %r3345;
	add.s32 	%r2414, %r3350, 1859775393;
	shf.l.wrap.b32 	%r2416, %r2406, %r2406, 30;
	shf.l.wrap.b32 	%r3351, %r2414, %r2414, 5;
	// begin inline asm
	lop3.b32 %r2409, %r2410, %r2416, %r2412, 150;
	// end inline asm
	shf.l.wrap.b32 	%r3352, %r3335, %r3335, 1;
	add.s32 	%r3353, %r2409, %r3352;
	add.s32 	%r3354, %r3353, %r2408;
	add.s32 	%r3355, %r3354, %r3351;
	add.s32 	%r2418, %r3355, 1859775393;
	shf.l.wrap.b32 	%r2420, %r2410, %r2410, 30;
	shf.l.wrap.b32 	%r3356, %r2418, %r2418, 5;
	// begin inline asm
	lop3.b32 %r2413, %r2414, %r2420, %r2416, 150;
	// end inline asm
	xor.b32  	%r3357, %r3341, 672;
	shf.l.wrap.b32 	%r3358, %r3357, %r3357, 1;
	add.s32 	%r3359, %r2413, %r3358;
	add.s32 	%r3360, %r3359, %r2412;
	add.s32 	%r3361, %r3360, %r3356;
	add.s32 	%r2422, %r3361, 1859775393;
	shf.l.wrap.b32 	%r2424, %r2414, %r2414, 30;
	shf.l.wrap.b32 	%r3362, %r2422, %r2422, 5;
	// begin inline asm
	lop3.b32 %r2417, %r2418, %r2424, %r2420, 150;
	// end inline asm
	xor.b32  	%r3363, %r3315, %r3347;
	shf.l.wrap.b32 	%r3364, %r3363, %r3363, 1;
	add.s32 	%r3365, %r2417, %r3364;
	add.s32 	%r3366, %r3365, %r2416;
	add.s32 	%r3367, %r3366, %r3362;
	add.s32 	%r2426, %r3367, 1859775393;
	shf.l.wrap.b32 	%r2428, %r2418, %r2418, 30;
	shf.l.wrap.b32 	%r3368, %r2426, %r2426, 5;
	// begin inline asm
	lop3.b32 %r2421, %r2422, %r2428, %r2424, 150;
	// end inline asm
	xor.b32  	%r3369, %r3321, %r3352;
	shf.l.wrap.b32 	%r3370, %r3369, %r3369, 1;
	add.s32 	%r3371, %r2421, %r3370;
	add.s32 	%r3372, %r3371, %r2420;
	add.s32 	%r3373, %r3372, %r3368;
	add.s32 	%r2430, %r3373, 1859775393;
	shf.l.wrap.b32 	%r2432, %r2422, %r2422, 30;
	shf.l.wrap.b32 	%r3374, %r2430, %r2430, 5;
	// begin inline asm
	lop3.b32 %r2425, %r2426, %r2432, %r2428, 150;
	// end inline asm
	xor.b32  	%r3375, %r3328, %r3358;
	shf.l.wrap.b32 	%r3376, %r3375, %r3375, 1;
	add.s32 	%r3377, %r2425, %r3376;
	add.s32 	%r3378, %r3377, %r2424;
	add.s32 	%r3379, %r3378, %r3374;
	add.s32 	%r2434, %r3379, 1859775393;
	shf.l.wrap.b32 	%r2436, %r2426, %r2426, 30;
	shf.l.wrap.b32 	%r3380, %r2434, %r2434, 5;
	// begin inline asm
	lop3.b32 %r2429, %r2430, %r2436, %r2432, 150;
	// end inline asm
	xor.b32  	%r3381, %r3335, %r3364;
	shf.l.wrap.b32 	%r3382, %r3381, %r3381, 1;
	add.s32 	%r3383, %r2429, %r3382;
	add.s32 	%r3384, %r3383, %r2428;
	add.s32 	%r3385, %r3384, %r3380;
	add.s32 	%r2438, %r3385, 1859775393;
	shf.l.wrap.b32 	%r2440, %r2430, %r2430, 30;
	shf.l.wrap.b32 	%r3386, %r2438, %r2438, 5;
	// begin inline asm
	lop3.b32 %r2433, %r2434, %r2440, %r2436, 150;
	// end inline asm
	xor.b32  	%r3387, %r3341, %r3370;
	shf.l.wrap.b32 	%r3388, %r3387, %r3387, 1;
	add.s32 	%r3389, %r2433, %r3388;
	add.s32 	%r3390, %r3389, %r2432;
	add.s32 	%r3391, %r3390, %r3386;
	add.s32 	%r2442, %r3391, 1859775393;
	shf.l.wrap.b32 	%r2444, %r2434, %r2434, 30;
	shf.l.wrap.b32 	%r3392, %r2442, %r2442, 5;
	// begin inline asm
	lop3.b32 %r2437, %r2438, %r2444, %r2440, 150;
	// end inline asm
	xor.b32  	%r3393, %r3347, %r3376;
	xor.b32  	%r3394, %r3393, 672;
	shf.l.wrap.b32 	%r3395, %r3394, %r3394, 1;
	add.s32 	%r3396, %r2437, %r3395;
	add.s32 	%r3397, %r3396, %r2436;
	add.s32 	%r3398, %r3397, %r3392;
	add.s32 	%r2446, %r3398, 1859775393;
	shf.l.wrap.b32 	%r2448, %r2438, %r2438, 30;
	shf.l.wrap.b32 	%r3399, %r2446, %r2446, 5;
	// begin inline asm
	lop3.b32 %r2441, %r2442, %r2448, %r2444, 150;
	// end inline asm
	xor.b32  	%r3400, %r3352, %r3382;
	xor.b32  	%r3401, %r3400, %r3315;
	shf.l.wrap.b32 	%r3402, %r3401, %r3401, 1;
	add.s32 	%r3403, %r2441, %r3402;
	add.s32 	%r3404, %r3403, %r2440;
	add.s32 	%r3405, %r3404, %r3399;
	add.s32 	%r2450, %r3405, 1859775393;
	shf.l.wrap.b32 	%r2452, %r2442, %r2442, 30;
	shf.l.wrap.b32 	%r3406, %r2450, %r2450, 5;
	// begin inline asm
	lop3.b32 %r2445, %r2446, %r2452, %r2448, 150;
	// end inline asm
	xor.b32  	%r3407, %r3358, %r3388;
	xor.b32  	%r3408, %r3407, %r3321;
	xor.b32  	%r3409, %r3408, 672;
	shf.l.wrap.b32 	%r3410, %r3409, %r3409, 1;
	add.s32 	%r3411, %r2445, %r3410;
	add.s32 	%r3412, %r3411, %r2444;
	add.s32 	%r3413, %r3412, %r3406;
	add.s32 	%r2454, %r3413, 1859775393;
	shf.l.wrap.b32 	%r2456, %r2446, %r2446, 30;
	shf.l.wrap.b32 	%r3414, %r2454, %r2454, 5;
	// begin inline asm
	lop3.b32 %r2449, %r2450, %r2456, %r2452, 150;
	// end inline asm
	xor.b32  	%r3415, %r3364, %r3395;
	xor.b32  	%r3416, %r3415, %r3328;
	xor.b32  	%r3417, %r3416, %r3315;
	shf.l.wrap.b32 	%r3418, %r3417, %r3417, 1;
	add.s32 	%r3419, %r2449, %r3418;
	add.s32 	%r3420, %r3419, %r2448;
	add.s32 	%r3421, %r3420, %r3414;
	add.s32 	%r2458, %r3421, 1859775393;
	shf.l.wrap.b32 	%r2460, %r2450, %r2450, 30;
	shf.l.wrap.b32 	%r3422, %r2458, %r2458, 5;
	// begin inline asm
	lop3.b32 %r2453, %r2454, %r2460, %r2456, 150;
	// end inline asm
	xor.b32  	%r3423, %r3370, %r3402;
	xor.b32  	%r3424, %r3423, %r3335;
	xor.b32  	%r3425, %r3424, %r3321;
	shf.l.wrap.b32 	%r3426, %r3425, %r3425, 1;
	add.s32 	%r3427, %r2453, %r3426;
	add.s32 	%r3428, %r3427, %r2452;
	add.s32 	%r3429, %r3428, %r3422;
	add.s32 	%r2462, %r3429, 1859775393;
	shf.l.wrap.b32 	%r2464, %r2454, %r2454, 30;
	shf.l.wrap.b32 	%r3430, %r2462, %r2462, 5;
	// begin inline asm
	lop3.b32 %r2457, %r2458, %r2464, %r2460, 150;
	// end inline asm
	xor.b32  	%r3431, %r3376, %r3410;
	xor.b32  	%r3432, %r3431, %r3341;
	xor.b32  	%r3433, %r3432, %r3328;
	shf.l.wrap.b32 	%r3434, %r3433, %r3433, 1;
	add.s32 	%r3435, %r2457, %r3434;
	add.s32 	%r3436, %r3435, %r2456;
	add.s32 	%r3437, %r3436, %r3430;
	add.s32 	%r2466, %r3437, 1859775393;
	shf.l.wrap.b32 	%r2468, %r2458, %r2458, 30;
	shf.l.wrap.b32 	%r3438, %r2466, %r2466, 5;
	// begin inline asm
	lop3.b32 %r2461, %r2462, %r2468, %r2464, 150;
	// end inline asm
	xor.b32  	%r3439, %r3382, %r3418;
	xor.b32  	%r3440, %r3439, %r3347;
	xor.b32  	%r3441, %r3440, %r3335;
	shf.l.wrap.b32 	%r3442, %r3441, %r3441, 1;
	add.s32 	%r3443, %r2461, %r3442;
	add.s32 	%r3444, %r3443, %r2460;
	add.s32 	%r3445, %r3444, %r3438;
	add.s32 	%r2470, %r3445, 1859775393;
	shf.l.wrap.b32 	%r2472, %r2462, %r2462, 30;
	shf.l.wrap.b32 	%r3446, %r2470, %r2470, 5;
	// begin inline asm
	lop3.b32 %r2465, %r2466, %r2472, %r2468, 150;
	// end inline asm
	xor.b32  	%r3447, %r3388, %r3426;
	xor.b32  	%r3448, %r3447, %r3352;
	xor.b32  	%r3449, %r3448, %r3341;
	shf.l.wrap.b32 	%r3450, %r3449, %r3449, 1;
	add.s32 	%r3451, %r2465, %r3450;
	add.s32 	%r3452, %r3451, %r2464;
	add.s32 	%r3453, %r3452, %r3446;
	add.s32 	%r2474, %r3453, 1859775393;
	shf.l.wrap.b32 	%r2476, %r2466, %r2466, 30;
	shf.l.wrap.b32 	%r3454, %r2474, %r2474, 5;
	// begin inline asm
	lop3.b32 %r2469, %r2470, %r2476, %r2472, 150;
	// end inline asm
	xor.b32  	%r3455, %r3395, %r3434;
	xor.b32  	%r3456, %r3455, %r3358;
	xor.b32  	%r3457, %r3456, %r3347;
	shf.l.wrap.b32 	%r3458, %r3457, %r3457, 1;
	add.s32 	%r3459, %r2469, %r3458;
	add.s32 	%r3460, %r3459, %r2468;
	add.s32 	%r3461, %r3460, %r3454;
	add.s32 	%r2478, %r3461, 1859775393;
	shf.l.wrap.b32 	%r2480, %r2470, %r2470, 30;
	shf.l.wrap.b32 	%r3462, %r2478, %r2478, 5;
	// begin inline asm
	lop3.b32 %r2473, %r2474, %r2480, %r2476, 150;
	// end inline asm
	xor.b32  	%r3463, %r3402, %r3442;
	xor.b32  	%r3464, %r3463, %r3364;
	xor.b32  	%r3465, %r3464, %r3352;
	shf.l.wrap.b32 	%r3466, %r3465, %r3465, 1;
	add.s32 	%r3467, %r2473, %r3466;
	add.s32 	%r3468, %r3467, %r2472;
	add.s32 	%r3469, %r3468, %r3462;
	add.s32 	%r2482, %r3469, 1859775393;
	shf.l.wrap.b32 	%r2484, %r2474, %r2474, 30;
	shf.l.wrap.b32 	%r3470, %r2482, %r2482, 5;
	// begin inline asm
	lop3.b32 %r2477, %r2478, %r2484, %r2480, 150;
	// end inline asm
	xor.b32  	%r3471, %r3410, %r3450;
	xor.b32  	%r3472, %r3471, %r3370;
	xor.b32  	%r3473, %r3472, %r3358;
	shf.l.wrap.b32 	%r3474, %r3473, %r3473, 1;
	add.s32 	%r3475, %r2477, %r3474;
	add.s32 	%r3476, %r3475, %r2476;
	add.s32 	%r3477, %r3476, %r3470;
	add.s32 	%r2486, %r3477, 1859775393;
	shf.l.wrap.b32 	%r2488, %r2478, %r2478, 30;
	shf.l.wrap.b32 	%r3478, %r2486, %r2486, 5;
	// begin inline asm
	lop3.b32 %r2481, %r2482, %r2488, %r2484, 232;
	// end inline asm
	xor.b32  	%r3479, %r3418, %r3458;
	xor.b32  	%r3480, %r3479, %r3376;
	xor.b32  	%r3481, %r3480, %r3364;
	shf.l.wrap.b32 	%r3482, %r3481, %r3481, 1;
	add.s32 	%r3483, %r2481, %r3482;
	add.s32 	%r3484, %r3483, %r2480;
	add.s32 	%r3485, %r3484, %r3478;
	add.s32 	%r2490, %r3485, -1894007588;
	shf.l.wrap.b32 	%r2492, %r2482, %r2482, 30;
	shf.l.wrap.b32 	%r3486, %r2490, %r2490, 5;
	// begin inline asm
	lop3.b32 %r2485, %r2486, %r2492, %r2488, 232;
	// end inline asm
	xor.b32  	%r3487, %r3426, %r3466;
	xor.b32  	%r3488, %r3487, %r3382;
	xor.b32  	%r3489, %r3488, %r3370;
	shf.l.wrap.b32 	%r3490, %r3489, %r3489, 1;
	add.s32 	%r3491, %r2485, %r3490;
	add.s32 	%r3492, %r3491, %r2484;
	add.s32 	%r3493, %r3492, %r3486;
	add.s32 	%r2494, %r3493, -1894007588;
	shf.l.wrap.b32 	%r2496, %r2486, %r2486, 30;
	shf.l.wrap.b32 	%r3494, %r2494, %r2494, 5;
	// begin inline asm
	lop3.b32 %r2489, %r2490, %r2496, %r2492, 232;
	// end inline asm
	xor.b32  	%r3495, %r3434, %r3474;
	xor.b32  	%r3496, %r3495, %r3388;
	xor.b32  	%r3497, %r3496, %r3376;
	shf.l.wrap.b32 	%r3498, %r3497, %r3497, 1;
	add.s32 	%r3499, %r2489, %r3498;
	add.s32 	%r3500, %r3499, %r2488;
	add.s32 	%r3501, %r3500, %r3494;
	add.s32 	%r2498, %r3501, -1894007588;
	shf.l.wrap.b32 	%r2500, %r2490, %r2490, 30;
	shf.l.wrap.b32 	%r3502, %r2498, %r2498, 5;
	// begin inline asm
	lop3.b32 %r2493, %r2494, %r2500, %r2496, 232;
	// end inline asm
	xor.b32  	%r3503, %r3442, %r3482;
	xor.b32  	%r3504, %r3503, %r3395;
	xor.b32  	%r3505, %r3504, %r3382;
	shf.l.wrap.b32 	%r3506, %r3505, %r3505, 1;
	add.s32 	%r3507, %r2493, %r3506;
	add.s32 	%r3508, %r3507, %r2492;
	add.s32 	%r3509, %r3508, %r3502;
	add.s32 	%r2502, %r3509, -1894007588;
	shf.l.wrap.b32 	%r2504, %r2494, %r2494, 30;
	shf.l.wrap.b32 	%r3510, %r2502, %r2502, 5;
	// begin inline asm
	lop3.b32 %r2497, %r2498, %r2504, %r2500, 232;
	// end inline asm
	xor.b32  	%r3511, %r3450, %r3490;
	xor.b32  	%r3512, %r3511, %r3402;
	xor.b32  	%r3513, %r3512, %r3388;
	shf.l.wrap.b32 	%r3514, %r3513, %r3513, 1;
	add.s32 	%r3515, %r2497, %r3514;
	add.s32 	%r3516, %r3515, %r2496;
	add.s32 	%r3517, %r3516, %r3510;
	add.s32 	%r2506, %r3517, -1894007588;
	shf.l.wrap.b32 	%r2508, %r2498, %r2498, 30;
	shf.l.wrap.b32 	%r3518, %r2506, %r2506, 5;
	// begin inline asm
	lop3.b32 %r2501, %r2502, %r2508, %r2504, 232;
	// end inline asm
	xor.b32  	%r3519, %r3458, %r3498;
	xor.b32  	%r3520, %r3519, %r3410;
	xor.b32  	%r3521, %r3520, %r3395;
	shf.l.wrap.b32 	%r3522, %r3521, %r3521, 1;
	add.s32 	%r3523, %r2501, %r3522;
	add.s32 	%r3524, %r3523, %r2500;
	add.s32 	%r3525, %r3524, %r3518;
	add.s32 	%r2510, %r3525, -1894007588;
	shf.l.wrap.b32 	%r2512, %r2502, %r2502, 30;
	shf.l.wrap.b32 	%r3526, %r2510, %r2510, 5;
	// begin inline asm
	lop3.b32 %r2505, %r2506, %r2512, %r2508, 232;
	// end inline asm
	xor.b32  	%r3527, %r3466, %r3506;
	xor.b32  	%r3528, %r3527, %r3418;
	xor.b32  	%r3529, %r3528, %r3402;
	shf.l.wrap.b32 	%r3530, %r3529, %r3529, 1;
	add.s32 	%r3531, %r2505, %r3530;
	add.s32 	%r3532, %r3531, %r2504;
	add.s32 	%r3533, %r3532, %r3526;
	add.s32 	%r2514, %r3533, -1894007588;
	shf.l.wrap.b32 	%r2516, %r2506, %r2506, 30;
	shf.l.wrap.b32 	%r3534, %r2514, %r2514, 5;
	// begin inline asm
	lop3.b32 %r2509, %r2510, %r2516, %r2512, 232;
	// end inline asm
	xor.b32  	%r3535, %r3474, %r3514;
	xor.b32  	%r3536, %r3535, %r3426;
	xor.b32  	%r3537, %r3536, %r3410;
	shf.l.wrap.b32 	%r3538, %r3537, %r3537, 1;
	add.s32 	%r3539, %r2509, %r3538;
	add.s32 	%r3540, %r3539, %r2508;
	add.s32 	%r3541, %r3540, %r3534;
	add.s32 	%r2518, %r3541, -1894007588;
	shf.l.wrap.b32 	%r2520, %r2510, %r2510, 30;
	shf.l.wrap.b32 	%r3542, %r2518, %r2518, 5;
	// begin inline asm
	lop3.b32 %r2513, %r2514, %r2520, %r2516, 232;
	// end inline asm
	xor.b32  	%r3543, %r3482, %r3522;
	xor.b32  	%r3544, %r3543, %r3434;
	xor.b32  	%r3545, %r3544, %r3418;
	shf.l.wrap.b32 	%r3546, %r3545, %r3545, 1;
	add.s32 	%r3547, %r2513, %r3546;
	add.s32 	%r3548, %r3547, %r2512;
	add.s32 	%r3549, %r3548, %r3542;
	add.s32 	%r2522, %r3549, -1894007588;
	shf.l.wrap.b32 	%r2524, %r2514, %r2514, 30;
	shf.l.wrap.b32 	%r3550, %r2522, %r2522, 5;
	// begin inline asm
	lop3.b32 %r2517, %r2518, %r2524, %r2520, 232;
	// end inline asm
	xor.b32  	%r3551, %r3490, %r3530;
	xor.b32  	%r3552, %r3551, %r3442;
	xor.b32  	%r3553, %r3552, %r3426;
	shf.l.wrap.b32 	%r3554, %r3553, %r3553, 1;
	add.s32 	%r3555, %r2517, %r3554;
	add.s32 	%r3556, %r3555, %r2516;
	add.s32 	%r3557, %r3556, %r3550;
	add.s32 	%r2526, %r3557, -1894007588;
	shf.l.wrap.b32 	%r2528, %r2518, %r2518, 30;
	shf.l.wrap.b32 	%r3558, %r2526, %r2526, 5;
	// begin inline asm
	lop3.b32 %r2521, %r2522, %r2528, %r2524, 232;
	// end inline asm
	xor.b32  	%r3559, %r3498, %r3538;
	xor.b32  	%r3560, %r3559, %r3450;
	xor.b32  	%r3561, %r3560, %r3434;
	shf.l.wrap.b32 	%r3562, %r3561, %r3561, 1;
	add.s32 	%r3563, %r2521, %r3562;
	add.s32 	%r3564, %r3563, %r2520;
	add.s32 	%r3565, %r3564, %r3558;
	add.s32 	%r2530, %r3565, -1894007588;
	shf.l.wrap.b32 	%r2532, %r2522, %r2522, 30;
	shf.l.wrap.b32 	%r3566, %r2530, %r2530, 5;
	// begin inline asm
	lop3.b32 %r2525, %r2526, %r2532, %r2528, 232;
	// end inline asm
	xor.b32  	%r3567, %r3506, %r3546;
	xor.b32  	%r3568, %r3567, %r3458;
	xor.b32  	%r3569, %r3568, %r3442;
	shf.l.wrap.b32 	%r3570, %r3569, %r3569, 1;
	add.s32 	%r3571, %r2525, %r3570;
	add.s32 	%r3572, %r3571, %r2524;
	add.s32 	%r3573, %r3572, %r3566;
	add.s32 	%r2534, %r3573, -1894007588;
	shf.l.wrap.b32 	%r2536, %r2526, %r2526, 30;
	shf.l.wrap.b32 	%r3574, %r2534, %r2534, 5;
	// begin inline asm
	lop3.b32 %r2529, %r2530, %r2536, %r2532, 232;
	// end inline asm
	xor.b32  	%r3575, %r3514, %r3554;
	xor.b32  	%r3576, %r3575, %r3466;
	xor.b32  	%r3577, %r3576, %r3450;
	shf.l.wrap.b32 	%r3578, %r3577, %r3577, 1;
	add.s32 	%r3579, %r2529, %r3578;
	add.s32 	%r3580, %r3579, %r2528;
	add.s32 	%r3581, %r3580, %r3574;
	add.s32 	%r2538, %r3581, -1894007588;
	shf.l.wrap.b32 	%r2540, %r2530, %r2530, 30;
	shf.l.wrap.b32 	%r3582, %r2538, %r2538, 5;
	// begin inline asm
	lop3.b32 %r2533, %r2534, %r2540, %r2536, 232;
	// end inline asm
	xor.b32  	%r3583, %r3522, %r3562;
	xor.b32  	%r3584, %r3583, %r3474;
	xor.b32  	%r3585, %r3584, %r3458;
	shf.l.wrap.b32 	%r3586, %r3585, %r3585, 1;
	add.s32 	%r3587, %r2533, %r3586;
	add.s32 	%r3588, %r3587, %r2532;
	add.s32 	%r3589, %r3588, %r3582;
	add.s32 	%r2542, %r3589, -1894007588;
	shf.l.wrap.b32 	%r2544, %r2534, %r2534, 30;
	shf.l.wrap.b32 	%r3590, %r2542, %r2542, 5;
	// begin inline asm
	lop3.b32 %r2537, %r2538, %r2544, %r2540, 232;
	// end inline asm
	xor.b32  	%r3591, %r3530, %r3570;
	xor.b32  	%r3592, %r3591, %r3482;
	xor.b32  	%r3593, %r3592, %r3466;
	shf.l.wrap.b32 	%r3594, %r3593, %r3593, 1;
	add.s32 	%r3595, %r2537, %r3594;
	add.s32 	%r3596, %r3595, %r2536;
	add.s32 	%r3597, %r3596, %r3590;
	add.s32 	%r2546, %r3597, -1894007588;
	shf.l.wrap.b32 	%r2548, %r2538, %r2538, 30;
	shf.l.wrap.b32 	%r3598, %r2546, %r2546, 5;
	// begin inline asm
	lop3.b32 %r2541, %r2542, %r2548, %r2544, 232;
	// end inline asm
	xor.b32  	%r3599, %r3538, %r3578;
	xor.b32  	%r3600, %r3599, %r3490;
	xor.b32  	%r3601, %r3600, %r3474;
	shf.l.wrap.b32 	%r3602, %r3601, %r3601, 1;
	add.s32 	%r3603, %r2541, %r3602;
	add.s32 	%r3604, %r3603, %r2540;
	add.s32 	%r3605, %r3604, %r3598;
	add.s32 	%r2550, %r3605, -1894007588;
	shf.l.wrap.b32 	%r2552, %r2542, %r2542, 30;
	shf.l.wrap.b32 	%r3606, %r2550, %r2550, 5;
	// begin inline asm
	lop3.b32 %r2545, %r2546, %r2552, %r2548, 232;
	// end inline asm
	xor.b32  	%r3607, %r3546, %r3586;
	xor.b32  	%r3608, %r3607, %r3498;
	xor.b32  	%r3609, %r3608, %r3482;
	shf.l.wrap.b32 	%r3610, %r3609, %r3609, 1;
	add.s32 	%r3611, %r2545, %r3610;
	add.s32 	%r3612, %r3611, %r2544;
	add.s32 	%r3613, %r3612, %r3606;
	add.s32 	%r2554, %r3613, -1894007588;
	shf.l.wrap.b32 	%r2556, %r2546, %r2546, 30;
	shf.l.wrap.b32 	%r3614, %r2554, %r2554, 5;
	// begin inline asm
	lop3.b32 %r2549, %r2550, %r2556, %r2552, 232;
	// end inline asm
	xor.b32  	%r3615, %r3554, %r3594;
	xor.b32  	%r3616, %r3615, %r3506;
	xor.b32  	%r3617, %r3616, %r3490;
	shf.l.wrap.b32 	%r3618, %r3617, %r3617, 1;
	add.s32 	%r3619, %r2549, %r3618;
	add.s32 	%r3620, %r3619, %r2548;
	add.s32 	%r3621, %r3620, %r3614;
	add.s32 	%r2558, %r3621, -1894007588;
	shf.l.wrap.b32 	%r2560, %r2550, %r2550, 30;
	shf.l.wrap.b32 	%r3622, %r2558, %r2558, 5;
	// begin inline asm
	lop3.b32 %r2553, %r2554, %r2560, %r2556, 232;
	// end inline asm
	xor.b32  	%r3623, %r3562, %r3602;
	xor.b32  	%r3624, %r3623, %r3514;
	xor.b32  	%r3625, %r3624, %r3498;
	shf.l.wrap.b32 	%r3626, %r3625, %r3625, 1;
	add.s32 	%r3627, %r2553, %r3626;
	add.s32 	%r3628, %r3627, %r2552;
	add.s32 	%r3629, %r3628, %r3622;
	add.s32 	%r2562, %r3629, -1894007588;
	shf.l.wrap.b32 	%r2564, %r2554, %r2554, 30;
	shf.l.wrap.b32 	%r3630, %r2562, %r2562, 5;
	// begin inline asm
	lop3.b32 %r2557, %r2558, %r2564, %r2560, 232;
	// end inline asm
	xor.b32  	%r3631, %r3570, %r3610;
	xor.b32  	%r3632, %r3631, %r3522;
	xor.b32  	%r3633, %r3632, %r3506;
	shf.l.wrap.b32 	%r3634, %r3633, %r3633, 1;
	add.s32 	%r3635, %r2557, %r3634;
	add.s32 	%r3636, %r3635, %r2556;
	add.s32 	%r3637, %r3636, %r3630;
	add.s32 	%r2566, %r3637, -1894007588;
	shf.l.wrap.b32 	%r2568, %r2558, %r2558, 30;
	shf.l.wrap.b32 	%r3638, %r2566, %r2566, 5;
	// begin inline asm
	lop3.b32 %r2561, %r2562, %r2568, %r2564, 150;
	// end inline asm
	xor.b32  	%r3639, %r3578, %r3618;
	xor.b32  	%r3640, %r3639, %r3530;
	xor.b32  	%r3641, %r3640, %r3514;
	shf.l.wrap.b32 	%r3642, %r3641, %r3641, 1;
	add.s32 	%r3643, %r2561, %r3642;
	add.s32 	%r3644, %r3643, %r2560;
	add.s32 	%r3645, %r3644, %r3638;
	add.s32 	%r2570, %r3645, -899497514;
	shf.l.wrap.b32 	%r2572, %r2562, %r2562, 30;
	shf.l.wrap.b32 	%r3646, %r2570, %r2570, 5;
	// begin inline asm
	lop3.b32 %r2565, %r2566, %r2572, %r2568, 150;
	// end inline asm
	xor.b32  	%r3647, %r3586, %r3626;
	xor.b32  	%r3648, %r3647, %r3538;
	xor.b32  	%r3649, %r3648, %r3522;
	shf.l.wrap.b32 	%r3650, %r3649, %r3649, 1;
	add.s32 	%r3651, %r2565, %r3650;
	add.s32 	%r3652, %r3651, %r2564;
	add.s32 	%r3653, %r3652, %r3646;
	add.s32 	%r2574, %r3653, -899497514;
	shf.l.wrap.b32 	%r2576, %r2566, %r2566, 30;
	shf.l.wrap.b32 	%r3654, %r2574, %r2574, 5;
	// begin inline asm
	lop3.b32 %r2569, %r2570, %r2576, %r2572, 150;
	// end inline asm
	xor.b32  	%r3655, %r3594, %r3634;
	xor.b32  	%r3656, %r3655, %r3546;
	xor.b32  	%r3657, %r3656, %r3530;
	shf.l.wrap.b32 	%r3658, %r3657, %r3657, 1;
	add.s32 	%r3659, %r2569, %r3658;
	add.s32 	%r3660, %r3659, %r2568;
	add.s32 	%r3661, %r3660, %r3654;
	add.s32 	%r2578, %r3661, -899497514;
	shf.l.wrap.b32 	%r2580, %r2570, %r2570, 30;
	shf.l.wrap.b32 	%r3662, %r2578, %r2578, 5;
	// begin inline asm
	lop3.b32 %r2573, %r2574, %r2580, %r2576, 150;
	// end inline asm
	xor.b32  	%r3663, %r3602, %r3642;
	xor.b32  	%r3664, %r3663, %r3554;
	xor.b32  	%r3665, %r3664, %r3538;
	shf.l.wrap.b32 	%r3666, %r3665, %r3665, 1;
	add.s32 	%r3667, %r2573, %r3666;
	add.s32 	%r3668, %r3667, %r2572;
	add.s32 	%r3669, %r3668, %r3662;
	add.s32 	%r2582, %r3669, -899497514;
	shf.l.wrap.b32 	%r2584, %r2574, %r2574, 30;
	shf.l.wrap.b32 	%r3670, %r2582, %r2582, 5;
	// begin inline asm
	lop3.b32 %r2577, %r2578, %r2584, %r2580, 150;
	// end inline asm
	xor.b32  	%r3671, %r3610, %r3650;
	xor.b32  	%r3672, %r3671, %r3562;
	xor.b32  	%r3673, %r3672, %r3546;
	shf.l.wrap.b32 	%r3674, %r3673, %r3673, 1;
	add.s32 	%r3675, %r2577, %r3674;
	add.s32 	%r3676, %r3675, %r2576;
	add.s32 	%r3677, %r3676, %r3670;
	add.s32 	%r2586, %r3677, -899497514;
	shf.l.wrap.b32 	%r2588, %r2578, %r2578, 30;
	shf.l.wrap.b32 	%r3678, %r2586, %r2586, 5;
	// begin inline asm
	lop3.b32 %r2581, %r2582, %r2588, %r2584, 150;
	// end inline asm
	xor.b32  	%r3679, %r3618, %r3658;
	xor.b32  	%r3680, %r3679, %r3570;
	xor.b32  	%r3681, %r3680, %r3554;
	shf.l.wrap.b32 	%r3682, %r3681, %r3681, 1;
	add.s32 	%r3683, %r2581, %r3682;
	add.s32 	%r3684, %r3683, %r2580;
	add.s32 	%r3685, %r3684, %r3678;
	add.s32 	%r2590, %r3685, -899497514;
	shf.l.wrap.b32 	%r2592, %r2582, %r2582, 30;
	shf.l.wrap.b32 	%r3686, %r2590, %r2590, 5;
	// begin inline asm
	lop3.b32 %r2585, %r2586, %r2592, %r2588, 150;
	// end inline asm
	xor.b32  	%r3687, %r3626, %r3666;
	xor.b32  	%r3688, %r3687, %r3578;
	xor.b32  	%r3689, %r3688, %r3562;
	shf.l.wrap.b32 	%r3690, %r3689, %r3689, 1;
	add.s32 	%r3691, %r2585, %r2584;
	add.s32 	%r3692, %r3691, %r3690;
	add.s32 	%r3693, %r3692, %r3686;
	add.s32 	%r2594, %r3693, -899497514;
	shf.l.wrap.b32 	%r2596, %r2586, %r2586, 30;
	shf.l.wrap.b32 	%r3694, %r2594, %r2594, 5;
	// begin inline asm
	lop3.b32 %r2589, %r2590, %r2596, %r2592, 150;
	// end inline asm
	xor.b32  	%r3695, %r3634, %r3674;
	xor.b32  	%r3696, %r3695, %r3586;
	xor.b32  	%r3697, %r3696, %r3570;
	shf.l.wrap.b32 	%r3698, %r3697, %r3697, 1;
	add.s32 	%r3699, %r2589, %r2588;
	add.s32 	%r3700, %r3699, %r3698;
	add.s32 	%r3701, %r3700, %r3694;
	add.s32 	%r2598, %r3701, -899497514;
	shf.l.wrap.b32 	%r2600, %r2590, %r2590, 30;
	shf.l.wrap.b32 	%r3702, %r2598, %r2598, 5;
	// begin inline asm
	lop3.b32 %r2593, %r2594, %r2600, %r2596, 150;
	// end inline asm
	xor.b32  	%r3703, %r3642, %r3682;
	xor.b32  	%r3704, %r3703, %r3594;
	xor.b32  	%r3705, %r3704, %r3578;
	shf.l.wrap.b32 	%r3706, %r3705, %r3705, 1;
	add.s32 	%r3707, %r2593, %r2592;
	add.s32 	%r3708, %r3707, %r3706;
	add.s32 	%r3709, %r3708, %r3702;
	add.s32 	%r2602, %r3709, -899497514;
	shf.l.wrap.b32 	%r2604, %r2594, %r2594, 30;
	shf.l.wrap.b32 	%r3710, %r2602, %r2602, 5;
	// begin inline asm
	lop3.b32 %r2597, %r2598, %r2604, %r2600, 150;
	// end inline asm
	xor.b32  	%r3711, %r3650, %r3690;
	xor.b32  	%r3712, %r3711, %r3602;
	xor.b32  	%r3713, %r3712, %r3586;
	shf.l.wrap.b32 	%r3714, %r3713, %r3713, 1;
	add.s32 	%r3715, %r2597, %r2596;
	add.s32 	%r3716, %r3715, %r3714;
	add.s32 	%r3717, %r3716, %r3710;
	add.s32 	%r2606, %r3717, -899497514;
	shf.l.wrap.b32 	%r2608, %r2598, %r2598, 30;
	shf.l.wrap.b32 	%r3718, %r2606, %r2606, 5;
	// begin inline asm
	lop3.b32 %r2601, %r2602, %r2608, %r2604, 150;
	// end inline asm
	xor.b32  	%r3719, %r3658, %r3698;
	xor.b32  	%r3720, %r3719, %r3610;
	xor.b32  	%r3721, %r3720, %r3594;
	shf.l.wrap.b32 	%r3722, %r3721, %r3721, 1;
	add.s32 	%r3723, %r2601, %r2600;
	add.s32 	%r3724, %r3723, %r3722;
	add.s32 	%r3725, %r3724, %r3718;
	add.s32 	%r2610, %r3725, -899497514;
	shf.l.wrap.b32 	%r2612, %r2602, %r2602, 30;
	shf.l.wrap.b32 	%r3726, %r2610, %r2610, 5;
	// begin inline asm
	lop3.b32 %r2605, %r2606, %r2612, %r2608, 150;
	// end inline asm
	xor.b32  	%r3727, %r3666, %r3706;
	xor.b32  	%r3728, %r3727, %r3618;
	xor.b32  	%r3729, %r3728, %r3602;
	shf.l.wrap.b32 	%r3730, %r3729, %r3729, 1;
	add.s32 	%r3731, %r2605, %r2604;
	add.s32 	%r3732, %r3731, %r3730;
	add.s32 	%r3733, %r3732, %r3726;
	add.s32 	%r2614, %r3733, -899497514;
	shf.l.wrap.b32 	%r2616, %r2606, %r2606, 30;
	shf.l.wrap.b32 	%r3734, %r2614, %r2614, 5;
	// begin inline asm
	lop3.b32 %r2609, %r2610, %r2616, %r2612, 150;
	// end inline asm
	xor.b32  	%r3735, %r3674, %r3714;
	xor.b32  	%r3736, %r3735, %r3626;
	xor.b32  	%r3737, %r3736, %r3610;
	shf.l.wrap.b32 	%r3738, %r3737, %r3737, 1;
	add.s32 	%r3739, %r2608, %r2609;
	add.s32 	%r3740, %r3739, %r3738;
	add.s32 	%r3741, %r3740, %r3734;
	add.s32 	%r2618, %r3741, -899497514;
	shf.l.wrap.b32 	%r2620, %r2610, %r2610, 30;
	shf.l.wrap.b32 	%r3742, %r2618, %r2618, 5;
	// begin inline asm
	lop3.b32 %r2613, %r2614, %r2620, %r2616, 150;
	// end inline asm
	xor.b32  	%r3743, %r3682, %r3722;
	xor.b32  	%r3744, %r3743, %r3634;
	xor.b32  	%r3745, %r3744, %r3618;
	shf.l.wrap.b32 	%r3746, %r3745, %r3745, 1;
	add.s32 	%r3747, %r2612, %r2613;
	add.s32 	%r3748, %r3747, %r3746;
	add.s32 	%r3749, %r3748, %r3742;
	add.s32 	%r2622, %r3749, -899497514;
	shf.l.wrap.b32 	%r2624, %r2614, %r2614, 30;
	shf.l.wrap.b32 	%r3750, %r2622, %r2622, 5;
	// begin inline asm
	lop3.b32 %r2617, %r2618, %r2624, %r2620, 150;
	// end inline asm
	xor.b32  	%r3751, %r3690, %r3730;
	xor.b32  	%r3752, %r3751, %r3642;
	xor.b32  	%r3753, %r3752, %r3626;
	shf.l.wrap.b32 	%r3754, %r3753, %r3753, 1;
	add.s32 	%r3755, %r2616, %r2617;
	add.s32 	%r3756, %r3755, %r3754;
	add.s32 	%r3757, %r3756, %r3750;
	add.s32 	%r2626, %r3757, -899497514;
	shf.l.wrap.b32 	%r2628, %r2618, %r2618, 30;
	shf.l.wrap.b32 	%r3758, %r2626, %r2626, 5;
	// begin inline asm
	lop3.b32 %r2621, %r2622, %r2628, %r2624, 150;
	// end inline asm
	xor.b32  	%r3759, %r3698, %r3738;
	xor.b32  	%r3760, %r3759, %r3650;
	xor.b32  	%r3761, %r3760, %r3634;
	shf.l.wrap.b32 	%r3762, %r3761, %r3761, 1;
	add.s32 	%r3763, %r2620, %r2621;
	add.s32 	%r3764, %r3763, %r3762;
	add.s32 	%r3765, %r3764, %r3758;
	add.s32 	%r2630, %r3765, -899497514;
	shf.l.wrap.b32 	%r2632, %r2622, %r2622, 30;
	shf.l.wrap.b32 	%r3766, %r2630, %r2630, 5;
	// begin inline asm
	lop3.b32 %r2625, %r2626, %r2632, %r2628, 150;
	// end inline asm
	xor.b32  	%r3767, %r3706, %r3746;
	xor.b32  	%r3768, %r3767, %r3658;
	xor.b32  	%r3769, %r3768, %r3642;
	shf.l.wrap.b32 	%r3770, %r3769, %r3769, 1;
	add.s32 	%r3771, %r2624, %r2625;
	add.s32 	%r3772, %r3771, %r3770;
	add.s32 	%r3773, %r3772, %r3766;
	add.s32 	%r2634, %r3773, -899497514;
	shf.l.wrap.b32 	%r2636, %r2626, %r2626, 30;
	shf.l.wrap.b32 	%r3774, %r2634, %r2634, 5;
	// begin inline asm
	lop3.b32 %r2629, %r2630, %r2636, %r2632, 150;
	// end inline asm
	xor.b32  	%r3775, %r3714, %r3754;
	xor.b32  	%r3776, %r3775, %r3666;
	xor.b32  	%r3777, %r3776, %r3650;
	shf.l.wrap.b32 	%r3778, %r3777, %r3777, 1;
	add.s32 	%r3779, %r2628, %r2629;
	add.s32 	%r3780, %r3779, %r3778;
	add.s32 	%r3781, %r3780, %r3774;
	add.s32 	%r2638, %r3781, -899497514;
	shf.l.wrap.b32 	%r2640, %r2630, %r2630, 30;
	shf.l.wrap.b32 	%r3782, %r2638, %r2638, 5;
	// begin inline asm
	lop3.b32 %r2633, %r2634, %r2640, %r2636, 150;
	// end inline asm
	xor.b32  	%r3783, %r3722, %r3762;
	xor.b32  	%r3784, %r3783, %r3674;
	xor.b32  	%r3785, %r3784, %r3658;
	shf.l.wrap.b32 	%r3786, %r3785, %r3785, 1;
	add.s32 	%r3787, %r2632, %r2633;
	add.s32 	%r3788, %r3787, %r3786;
	add.s32 	%r3789, %r3788, %r3782;
	add.s32 	%r3790, %r3789, -899497514;
	shf.l.wrap.b32 	%r2639, %r2634, %r2634, 30;
	shf.l.wrap.b32 	%r3791, %r3790, %r3790, 5;
	// begin inline asm
	lop3.b32 %r2637, %r2638, %r2639, %r2640, 150;
	// end inline asm
	xor.b32  	%r3792, %r3730, %r3770;
	xor.b32  	%r3793, %r3792, %r3682;
	xor.b32  	%r3794, %r3793, %r3666;
	shf.l.wrap.b32 	%r3795, %r3794, %r3794, 1;
	shf.l.wrap.b32 	%r3796, %r2638, %r2638, 30;
	add.s32 	%r3797, %r2326, %r2636;
	add.s32 	%r3798, %r3797, %r2637;
	add.s32 	%r3799, %r3798, %r3795;
	add.s32 	%r3800, %r3799, %r3791;
	add.s32 	%r3801, %r3800, -899497514;
	add.s32 	%r3802, %r3790, %r2322;
	add.s32 	%r3803, %r3796, %r2323;
	add.s32 	%r3804, %r2639, %r2324;
	add.s32 	%r3805, %r2640, %r3259;
	st.global.u32 	[%rd1+-20], %r3801;
	st.global.u32 	[%rd1+-16], %r3802;
	st.global.u32 	[%rd1+-12], %r3803;
	st.global.u32 	[%rd1+-8], %r3804;
	st.global.u32 	[%rd1+-4], %r3805;
	st.global.u32 	[%rd1+-80], %r3801;
	st.global.u32 	[%rd1+-76], %r3802;
	st.global.u32 	[%rd1+-72], %r3803;
	st.global.u32 	[%rd1+-68], %r3804;
	st.global.u32 	[%rd1+-64], %r3805;

$L__BB2_22:
	ret;

}
	// .globl	solarwinds_loop
.entry solarwinds_loop(
	.param .u64 .ptr .global .align 4 solarwinds_loop_param_0,
	.param .u64 .ptr .global .align 4 solarwinds_loop_param_1,
	.param .u64 .ptr .global .align 4 solarwinds_loop_param_2
)
{
	.local .align 16 .b8 	__local_depot3[1376];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<34>;
	.reg .b16 	%rs<235>;
	.reg .b32 	%r<10313>;
	.reg .b64 	%rd<9315>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd172, [solarwinds_loop_param_0];
	ld.param.u64 	%rd173, [solarwinds_loop_param_1];
	ld.param.u64 	%rd174, [solarwinds_loop_param_2];
	add.u64 	%rd1, %SPL, 144;
	mov.u32 	%r86, %ctaid.x;
	mov.u32 	%r87, %ntid.x;
	mov.u32 	%r88, %tid.x;
	mov.b32 	%r89, %envreg3;
	add.s32 	%r90, %r88, %r89;
	mad.lo.s32 	%r91, %r87, %r86, %r90;
	cvt.u64.u32 	%rd2, %r91;
	mul.wide.u32 	%rd176, %r91, 84;
	add.s64 	%rd177, %rd174, %rd176;
	add.s64 	%rd3, %rd177, 80;
	ld.global.u32 	%r92, [%rd177+80];
	add.s32 	%r1, %r92, 1;
	st.global.u32 	[%rd177+80], %r1;
	mul.lo.s32 	%r93, %r92, 5;
	ld.global.u32 	%r94, [%rd177+60];
	shf.l.wrap.b32 	%r95, %r94, %r94, 16;
	shl.b32 	%r96, %r95, 8;
	and.b32  	%r97, %r96, -16711936;
	shr.u32 	%r98, %r95, 8;
	and.b32  	%r99, %r98, 16711935;
	or.b32  	%r100, %r97, %r99;
	mul.wide.u32 	%rd178, %r91, 1040;
	add.s64 	%rd179, %rd173, %rd178;
	mul.wide.u32 	%rd180, %r93, 4;
	add.s64 	%rd181, %rd179, %rd180;
	st.global.u32 	[%rd181], %r100;
	ld.global.u32 	%r101, [%rd177+64];
	shf.l.wrap.b32 	%r102, %r101, %r101, 16;
	shl.b32 	%r103, %r102, 8;
	and.b32  	%r104, %r103, -16711936;
	shr.u32 	%r105, %r102, 8;
	and.b32  	%r106, %r105, 16711935;
	or.b32  	%r107, %r104, %r106;
	shl.b32 	%r108, %r92, 2;
	add.s32 	%r109, %r1, %r108;
	mul.wide.u32 	%rd182, %r109, 4;
	add.s64 	%rd183, %rd179, %rd182;
	st.global.u32 	[%rd183], %r107;
	ld.global.u32 	%r110, [%rd177+68];
	shf.l.wrap.b32 	%r111, %r110, %r110, 16;
	shl.b32 	%r112, %r111, 8;
	and.b32  	%r113, %r112, -16711936;
	shr.u32 	%r114, %r111, 8;
	and.b32  	%r115, %r114, 16711935;
	or.b32  	%r116, %r113, %r115;
	add.s32 	%r117, %r93, 2;
	mul.wide.u32 	%rd184, %r117, 4;
	add.s64 	%rd185, %rd179, %rd184;
	st.global.u32 	[%rd185], %r116;
	ld.global.u32 	%r118, [%rd177+72];
	shf.l.wrap.b32 	%r119, %r118, %r118, 16;
	shl.b32 	%r120, %r119, 8;
	and.b32  	%r121, %r120, -16711936;
	shr.u32 	%r122, %r119, 8;
	and.b32  	%r123, %r122, 16711935;
	or.b32  	%r124, %r121, %r123;
	add.s32 	%r125, %r93, 3;
	mul.wide.u32 	%rd186, %r125, 4;
	add.s64 	%rd187, %rd179, %rd186;
	st.global.u32 	[%rd187], %r124;
	ld.global.u32 	%r126, [%rd177+76];
	shf.l.wrap.b32 	%r127, %r126, %r126, 16;
	shl.b32 	%r128, %r127, 8;
	and.b32  	%r129, %r128, -16711936;
	shr.u32 	%r130, %r127, 8;
	and.b32  	%r131, %r130, 16711935;
	or.b32  	%r132, %r129, %r131;
	add.s32 	%r133, %r93, 4;
	mul.wide.u32 	%rd188, %r133, 4;
	add.s64 	%rd189, %rd179, %rd188;
	st.global.u32 	[%rd189], %r132;
	add.u64 	%rd9261, %SP, 352;
	cvta.to.local.u64 	%rd9262, %rd9261;
	mad.lo.s32 	%r134, %r92, 20, 20;
	setp.lt.u32 	%p1, %r134, 1024;
	@%p1 bra 	$L__BB3_30;
	bra.uni 	$L__BB3_1;

$L__BB3_30:
	ld.global.u32 	%r32, [%rd172];
	ld.global.u32 	%r10293, [%rd3+-60];
	ld.global.u32 	%r10294, [%rd3+-56];
	ld.global.u32 	%r10295, [%rd3+-52];
	ld.global.u32 	%r10296, [%rd3+-48];
	ld.global.u32 	%r10297, [%rd3+-44];
	cvt.u16.u32 	%rs226, %r1;
	add.s16 	%rs1, %rs226, 1;
	setp.lt.u32 	%p22, %r32, 64;
	@%p22 bra 	$L__BB3_33;
	bra.uni 	$L__BB3_31;

$L__BB3_33:
	mov.u32 	%r10304, 0;
	mov.u32 	%r10299, %r32;
	bra.uni 	$L__BB3_34;

$L__BB3_1:
	mul.lo.s64 	%rd199, %rd2, 1040;
	add.s64 	%rd6, %rd173, %rd199;
	ld.global.u32 	%r136, [%rd6];
	st.local.u32 	[%rd9262], %r136;
	ld.global.u32 	%r137, [%rd6+4];
	st.local.u32 	[%rd9262+4], %r137;
	ld.global.u32 	%r138, [%rd6+8];
	st.local.u32 	[%rd9262+8], %r138;
	ld.global.u32 	%r139, [%rd6+12];
	st.local.u32 	[%rd9262+12], %r139;
	ld.global.u32 	%r140, [%rd6+16];
	st.local.u32 	[%rd9262+16], %r140;
	ld.global.u32 	%r141, [%rd6+20];
	st.local.u32 	[%rd9262+20], %r141;
	ld.global.u32 	%r142, [%rd6+24];
	st.local.u32 	[%rd9262+24], %r142;
	ld.global.u32 	%r143, [%rd6+28];
	st.local.u32 	[%rd9262+28], %r143;
	ld.global.u32 	%r144, [%rd6+32];
	st.local.u32 	[%rd9262+32], %r144;
	ld.global.u32 	%r145, [%rd6+36];
	st.local.u32 	[%rd9262+36], %r145;
	ld.global.u32 	%r146, [%rd6+40];
	st.local.u32 	[%rd9262+40], %r146;
	ld.global.u32 	%r147, [%rd6+44];
	st.local.u32 	[%rd9262+44], %r147;
	ld.global.u32 	%r148, [%rd6+48];
	st.local.u32 	[%rd9262+48], %r148;
	ld.global.u32 	%r149, [%rd6+52];
	st.local.u32 	[%rd9262+52], %r149;
	ld.global.u32 	%r150, [%rd6+56];
	st.local.u32 	[%rd9262+56], %r150;
	ld.global.u32 	%r151, [%rd6+60];
	st.local.u32 	[%rd9262+60], %r151;
	ld.global.u32 	%r152, [%rd6+64];
	st.local.u32 	[%rd9262+64], %r152;
	ld.global.u32 	%r153, [%rd6+68];
	st.local.u32 	[%rd9262+68], %r153;
	ld.global.u32 	%r154, [%rd6+72];
	st.local.u32 	[%rd9262+72], %r154;
	ld.global.u32 	%r155, [%rd6+76];
	st.local.u32 	[%rd9262+76], %r155;
	ld.global.u32 	%r156, [%rd6+80];
	st.local.u32 	[%rd9262+80], %r156;
	ld.global.u32 	%r157, [%rd6+84];
	st.local.u32 	[%rd9262+84], %r157;
	ld.global.u32 	%r158, [%rd6+88];
	st.local.u32 	[%rd9262+88], %r158;
	ld.global.u32 	%r159, [%rd6+92];
	st.local.u32 	[%rd9262+92], %r159;
	ld.global.u32 	%r160, [%rd6+96];
	st.local.u32 	[%rd9262+96], %r160;
	ld.global.u32 	%r161, [%rd6+100];
	st.local.u32 	[%rd9262+100], %r161;
	ld.global.u32 	%r162, [%rd6+104];
	st.local.u32 	[%rd9262+104], %r162;
	ld.global.u32 	%r163, [%rd6+108];
	st.local.u32 	[%rd9262+108], %r163;
	ld.global.u32 	%r164, [%rd6+112];
	st.local.u32 	[%rd9262+112], %r164;
	ld.global.u32 	%r165, [%rd6+116];
	st.local.u32 	[%rd9262+116], %r165;
	ld.global.u32 	%r166, [%rd6+120];
	st.local.u32 	[%rd9262+120], %r166;
	ld.global.u32 	%r167, [%rd6+124];
	st.local.u32 	[%rd9262+124], %r167;
	ld.global.u32 	%r168, [%rd6+128];
	st.local.u32 	[%rd9262+128], %r168;
	ld.global.u32 	%r169, [%rd6+132];
	st.local.u32 	[%rd9262+132], %r169;
	ld.global.u32 	%r170, [%rd6+136];
	st.local.u32 	[%rd9262+136], %r170;
	ld.global.u32 	%r171, [%rd6+140];
	st.local.u32 	[%rd9262+140], %r171;
	ld.global.u32 	%r172, [%rd6+144];
	st.local.u32 	[%rd9262+144], %r172;
	ld.global.u32 	%r173, [%rd6+148];
	st.local.u32 	[%rd9262+148], %r173;
	ld.global.u32 	%r174, [%rd6+152];
	st.local.u32 	[%rd9262+152], %r174;
	ld.global.u32 	%r175, [%rd6+156];
	st.local.u32 	[%rd9262+156], %r175;
	ld.global.u32 	%r176, [%rd6+160];
	st.local.u32 	[%rd9262+160], %r176;
	ld.global.u32 	%r177, [%rd6+164];
	st.local.u32 	[%rd9262+164], %r177;
	ld.global.u32 	%r178, [%rd6+168];
	st.local.u32 	[%rd9262+168], %r178;
	ld.global.u32 	%r179, [%rd6+172];
	st.local.u32 	[%rd9262+172], %r179;
	ld.global.u32 	%r180, [%rd6+176];
	st.local.u32 	[%rd9262+176], %r180;
	ld.global.u32 	%r181, [%rd6+180];
	st.local.u32 	[%rd9262+180], %r181;
	ld.global.u32 	%r182, [%rd6+184];
	st.local.u32 	[%rd9262+184], %r182;
	ld.global.u32 	%r183, [%rd6+188];
	st.local.u32 	[%rd9262+188], %r183;
	ld.global.u32 	%r184, [%rd6+192];
	st.local.u32 	[%rd9262+192], %r184;
	ld.global.u32 	%r185, [%rd6+196];
	st.local.u32 	[%rd9262+196], %r185;
	ld.global.u32 	%r186, [%rd6+200];
	st.local.u32 	[%rd9262+200], %r186;
	ld.global.u32 	%r187, [%rd6+204];
	st.local.u32 	[%rd9262+204], %r187;
	ld.global.u32 	%r188, [%rd6+208];
	st.local.u32 	[%rd9262+208], %r188;
	ld.global.u32 	%r189, [%rd6+212];
	st.local.u32 	[%rd9262+212], %r189;
	ld.global.u32 	%r190, [%rd6+216];
	st.local.u32 	[%rd9262+216], %r190;
	ld.global.u32 	%r191, [%rd6+220];
	st.local.u32 	[%rd9262+220], %r191;
	ld.global.u32 	%r192, [%rd6+224];
	st.local.u32 	[%rd9262+224], %r192;
	ld.global.u32 	%r193, [%rd6+228];
	st.local.u32 	[%rd9262+228], %r193;
	ld.global.u32 	%r194, [%rd6+232];
	st.local.u32 	[%rd9262+232], %r194;
	ld.global.u32 	%r195, [%rd6+236];
	st.local.u32 	[%rd9262+236], %r195;
	ld.global.u32 	%r196, [%rd6+240];
	st.local.u32 	[%rd9262+240], %r196;
	ld.global.u32 	%r197, [%rd6+244];
	st.local.u32 	[%rd9262+244], %r197;
	ld.global.u32 	%r198, [%rd6+248];
	st.local.u32 	[%rd9262+248], %r198;
	ld.global.u32 	%r199, [%rd6+252];
	st.local.u32 	[%rd9262+252], %r199;
	ld.global.u32 	%r200, [%rd6+256];
	st.local.u32 	[%rd9262+256], %r200;
	ld.global.u32 	%r201, [%rd6+260];
	st.local.u32 	[%rd9262+260], %r201;
	ld.global.u32 	%r202, [%rd6+264];
	st.local.u32 	[%rd9262+264], %r202;
	ld.global.u32 	%r203, [%rd6+268];
	st.local.u32 	[%rd9262+268], %r203;
	ld.global.u32 	%r204, [%rd6+272];
	st.local.u32 	[%rd9262+272], %r204;
	ld.global.u32 	%r205, [%rd6+276];
	st.local.u32 	[%rd9262+276], %r205;
	ld.global.u32 	%r206, [%rd6+280];
	st.local.u32 	[%rd9262+280], %r206;
	ld.global.u32 	%r207, [%rd6+284];
	st.local.u32 	[%rd9262+284], %r207;
	ld.global.u32 	%r208, [%rd6+288];
	st.local.u32 	[%rd9262+288], %r208;
	ld.global.u32 	%r209, [%rd6+292];
	st.local.u32 	[%rd9262+292], %r209;
	ld.global.u32 	%r210, [%rd6+296];
	st.local.u32 	[%rd9262+296], %r210;
	ld.global.u32 	%r211, [%rd6+300];
	st.local.u32 	[%rd9262+300], %r211;
	ld.global.u32 	%r212, [%rd6+304];
	st.local.u32 	[%rd9262+304], %r212;
	ld.global.u32 	%r213, [%rd6+308];
	st.local.u32 	[%rd9262+308], %r213;
	ld.global.u32 	%r214, [%rd6+312];
	st.local.u32 	[%rd9262+312], %r214;
	ld.global.u32 	%r215, [%rd6+316];
	st.local.u32 	[%rd9262+316], %r215;
	ld.global.u32 	%r216, [%rd6+320];
	st.local.u32 	[%rd9262+320], %r216;
	ld.global.u32 	%r217, [%rd6+324];
	st.local.u32 	[%rd9262+324], %r217;
	ld.global.u32 	%r218, [%rd6+328];
	st.local.u32 	[%rd9262+328], %r218;
	ld.global.u32 	%r219, [%rd6+332];
	st.local.u32 	[%rd9262+332], %r219;
	ld.global.u32 	%r220, [%rd6+336];
	st.local.u32 	[%rd9262+336], %r220;
	ld.global.u32 	%r221, [%rd6+340];
	st.local.u32 	[%rd9262+340], %r221;
	ld.global.u32 	%r222, [%rd6+344];
	st.local.u32 	[%rd9262+344], %r222;
	ld.global.u32 	%r223, [%rd6+348];
	st.local.u32 	[%rd9262+348], %r223;
	ld.global.u32 	%r224, [%rd6+352];
	st.local.u32 	[%rd9262+352], %r224;
	ld.global.u32 	%r225, [%rd6+356];
	st.local.u32 	[%rd9262+356], %r225;
	ld.global.u32 	%r226, [%rd6+360];
	st.local.u32 	[%rd9262+360], %r226;
	ld.global.u32 	%r227, [%rd6+364];
	st.local.u32 	[%rd9262+364], %r227;
	ld.global.u32 	%r228, [%rd6+368];
	st.local.u32 	[%rd9262+368], %r228;
	ld.global.u32 	%r229, [%rd6+372];
	st.local.u32 	[%rd9262+372], %r229;
	ld.global.u32 	%r230, [%rd6+376];
	st.local.u32 	[%rd9262+376], %r230;
	ld.global.u32 	%r231, [%rd6+380];
	st.local.u32 	[%rd9262+380], %r231;
	ld.global.u32 	%r232, [%rd6+384];
	st.local.u32 	[%rd9262+384], %r232;
	ld.global.u32 	%r233, [%rd6+388];
	st.local.u32 	[%rd9262+388], %r233;
	ld.global.u32 	%r234, [%rd6+392];
	st.local.u32 	[%rd9262+392], %r234;
	ld.global.u32 	%r235, [%rd6+396];
	st.local.u32 	[%rd9262+396], %r235;
	ld.global.u32 	%r236, [%rd6+400];
	st.local.u32 	[%rd9262+400], %r236;
	ld.global.u32 	%r237, [%rd6+404];
	st.local.u32 	[%rd9262+404], %r237;
	ld.global.u32 	%r238, [%rd6+408];
	st.local.u32 	[%rd9262+408], %r238;
	ld.global.u32 	%r239, [%rd6+412];
	st.local.u32 	[%rd9262+412], %r239;
	ld.global.u32 	%r240, [%rd6+416];
	st.local.u32 	[%rd9262+416], %r240;
	ld.global.u32 	%r241, [%rd6+420];
	st.local.u32 	[%rd9262+420], %r241;
	ld.global.u32 	%r242, [%rd6+424];
	st.local.u32 	[%rd9262+424], %r242;
	ld.global.u32 	%r243, [%rd6+428];
	st.local.u32 	[%rd9262+428], %r243;
	ld.global.u32 	%r244, [%rd6+432];
	st.local.u32 	[%rd9262+432], %r244;
	ld.global.u32 	%r245, [%rd6+436];
	st.local.u32 	[%rd9262+436], %r245;
	ld.global.u32 	%r246, [%rd6+440];
	st.local.u32 	[%rd9262+440], %r246;
	ld.global.u32 	%r247, [%rd6+444];
	st.local.u32 	[%rd9262+444], %r247;
	ld.global.u32 	%r248, [%rd6+448];
	st.local.u32 	[%rd9262+448], %r248;
	ld.global.u32 	%r249, [%rd6+452];
	st.local.u32 	[%rd9262+452], %r249;
	ld.global.u32 	%r250, [%rd6+456];
	st.local.u32 	[%rd9262+456], %r250;
	ld.global.u32 	%r251, [%rd6+460];
	st.local.u32 	[%rd9262+460], %r251;
	ld.global.u32 	%r252, [%rd6+464];
	st.local.u32 	[%rd9262+464], %r252;
	ld.global.u32 	%r253, [%rd6+468];
	st.local.u32 	[%rd9262+468], %r253;
	ld.global.u32 	%r254, [%rd6+472];
	st.local.u32 	[%rd9262+472], %r254;
	ld.global.u32 	%r255, [%rd6+476];
	st.local.u32 	[%rd9262+476], %r255;
	ld.global.u32 	%r256, [%rd6+480];
	st.local.u32 	[%rd9262+480], %r256;
	ld.global.u32 	%r257, [%rd6+484];
	st.local.u32 	[%rd9262+484], %r257;
	ld.global.u32 	%r258, [%rd6+488];
	st.local.u32 	[%rd9262+488], %r258;
	ld.global.u32 	%r259, [%rd6+492];
	st.local.u32 	[%rd9262+492], %r259;
	ld.global.u32 	%r260, [%rd6+496];
	st.local.u32 	[%rd9262+496], %r260;
	ld.global.u32 	%r261, [%rd6+500];
	st.local.u32 	[%rd9262+500], %r261;
	ld.global.u32 	%r262, [%rd6+504];
	st.local.u32 	[%rd9262+504], %r262;
	ld.global.u32 	%r263, [%rd6+508];
	st.local.u32 	[%rd9262+508], %r263;
	ld.global.u32 	%r264, [%rd6+512];
	st.local.u32 	[%rd9262+512], %r264;
	ld.global.u32 	%r265, [%rd6+516];
	st.local.u32 	[%rd9262+516], %r265;
	ld.global.u32 	%r266, [%rd6+520];
	st.local.u32 	[%rd9262+520], %r266;
	ld.global.u32 	%r267, [%rd6+524];
	st.local.u32 	[%rd9262+524], %r267;
	ld.global.u32 	%r268, [%rd6+528];
	st.local.u32 	[%rd9262+528], %r268;
	ld.global.u32 	%r269, [%rd6+532];
	st.local.u32 	[%rd9262+532], %r269;
	ld.global.u32 	%r270, [%rd6+536];
	st.local.u32 	[%rd9262+536], %r270;
	ld.global.u32 	%r271, [%rd6+540];
	st.local.u32 	[%rd9262+540], %r271;
	ld.global.u32 	%r272, [%rd6+544];
	st.local.u32 	[%rd9262+544], %r272;
	ld.global.u32 	%r273, [%rd6+548];
	st.local.u32 	[%rd9262+548], %r273;
	ld.global.u32 	%r274, [%rd6+552];
	st.local.u32 	[%rd9262+552], %r274;
	ld.global.u32 	%r275, [%rd6+556];
	st.local.u32 	[%rd9262+556], %r275;
	ld.global.u32 	%r276, [%rd6+560];
	st.local.u32 	[%rd9262+560], %r276;
	ld.global.u32 	%r277, [%rd6+564];
	st.local.u32 	[%rd9262+564], %r277;
	ld.global.u32 	%r278, [%rd6+568];
	st.local.u32 	[%rd9262+568], %r278;
	ld.global.u32 	%r279, [%rd6+572];
	st.local.u32 	[%rd9262+572], %r279;
	ld.global.u32 	%r280, [%rd6+576];
	st.local.u32 	[%rd9262+576], %r280;
	ld.global.u32 	%r281, [%rd6+580];
	st.local.u32 	[%rd9262+580], %r281;
	ld.global.u32 	%r282, [%rd6+584];
	st.local.u32 	[%rd9262+584], %r282;
	ld.global.u32 	%r283, [%rd6+588];
	st.local.u32 	[%rd9262+588], %r283;
	ld.global.u32 	%r284, [%rd6+592];
	st.local.u32 	[%rd9262+592], %r284;
	ld.global.u32 	%r285, [%rd6+596];
	st.local.u32 	[%rd9262+596], %r285;
	ld.global.u32 	%r286, [%rd6+600];
	st.local.u32 	[%rd9262+600], %r286;
	ld.global.u32 	%r287, [%rd6+604];
	st.local.u32 	[%rd9262+604], %r287;
	ld.global.u32 	%r288, [%rd6+608];
	st.local.u32 	[%rd9262+608], %r288;
	ld.global.u32 	%r289, [%rd6+612];
	st.local.u32 	[%rd9262+612], %r289;
	ld.global.u32 	%r290, [%rd6+616];
	st.local.u32 	[%rd9262+616], %r290;
	ld.global.u32 	%r291, [%rd6+620];
	st.local.u32 	[%rd9262+620], %r291;
	ld.global.u32 	%r292, [%rd6+624];
	st.local.u32 	[%rd9262+624], %r292;
	ld.global.u32 	%r293, [%rd6+628];
	st.local.u32 	[%rd9262+628], %r293;
	ld.global.u32 	%r294, [%rd6+632];
	st.local.u32 	[%rd9262+632], %r294;
	ld.global.u32 	%r295, [%rd6+636];
	st.local.u32 	[%rd9262+636], %r295;
	ld.global.u32 	%r296, [%rd6+640];
	st.local.u32 	[%rd9262+640], %r296;
	ld.global.u32 	%r297, [%rd6+644];
	st.local.u32 	[%rd9262+644], %r297;
	ld.global.u32 	%r298, [%rd6+648];
	st.local.u32 	[%rd9262+648], %r298;
	ld.global.u32 	%r299, [%rd6+652];
	st.local.u32 	[%rd9262+652], %r299;
	ld.global.u32 	%r300, [%rd6+656];
	st.local.u32 	[%rd9262+656], %r300;
	ld.global.u32 	%r301, [%rd6+660];
	st.local.u32 	[%rd9262+660], %r301;
	ld.global.u32 	%r302, [%rd6+664];
	st.local.u32 	[%rd9262+664], %r302;
	ld.global.u32 	%r303, [%rd6+668];
	st.local.u32 	[%rd9262+668], %r303;
	ld.global.u32 	%r304, [%rd6+672];
	st.local.u32 	[%rd9262+672], %r304;
	ld.global.u32 	%r305, [%rd6+676];
	st.local.u32 	[%rd9262+676], %r305;
	ld.global.u32 	%r306, [%rd6+680];
	st.local.u32 	[%rd9262+680], %r306;
	ld.global.u32 	%r307, [%rd6+684];
	st.local.u32 	[%rd9262+684], %r307;
	ld.global.u32 	%r308, [%rd6+688];
	st.local.u32 	[%rd9262+688], %r308;
	ld.global.u32 	%r309, [%rd6+692];
	st.local.u32 	[%rd9262+692], %r309;
	ld.global.u32 	%r310, [%rd6+696];
	st.local.u32 	[%rd9262+696], %r310;
	ld.global.u32 	%r311, [%rd6+700];
	st.local.u32 	[%rd9262+700], %r311;
	ld.global.u32 	%r312, [%rd6+704];
	st.local.u32 	[%rd9262+704], %r312;
	ld.global.u32 	%r313, [%rd6+708];
	st.local.u32 	[%rd9262+708], %r313;
	ld.global.u32 	%r314, [%rd6+712];
	st.local.u32 	[%rd9262+712], %r314;
	ld.global.u32 	%r315, [%rd6+716];
	st.local.u32 	[%rd9262+716], %r315;
	ld.global.u32 	%r316, [%rd6+720];
	st.local.u32 	[%rd9262+720], %r316;
	ld.global.u32 	%r317, [%rd6+724];
	st.local.u32 	[%rd9262+724], %r317;
	ld.global.u32 	%r318, [%rd6+728];
	st.local.u32 	[%rd9262+728], %r318;
	ld.global.u32 	%r319, [%rd6+732];
	st.local.u32 	[%rd9262+732], %r319;
	ld.global.u32 	%r320, [%rd6+736];
	st.local.u32 	[%rd9262+736], %r320;
	ld.global.u32 	%r321, [%rd6+740];
	st.local.u32 	[%rd9262+740], %r321;
	ld.global.u32 	%r322, [%rd6+744];
	st.local.u32 	[%rd9262+744], %r322;
	ld.global.u32 	%r323, [%rd6+748];
	st.local.u32 	[%rd9262+748], %r323;
	ld.global.u32 	%r324, [%rd6+752];
	st.local.u32 	[%rd9262+752], %r324;
	ld.global.u32 	%r325, [%rd6+756];
	st.local.u32 	[%rd9262+756], %r325;
	ld.global.u32 	%r326, [%rd6+760];
	st.local.u32 	[%rd9262+760], %r326;
	ld.global.u32 	%r327, [%rd6+764];
	st.local.u32 	[%rd9262+764], %r327;
	ld.global.u32 	%r328, [%rd6+768];
	st.local.u32 	[%rd9262+768], %r328;
	ld.global.u32 	%r329, [%rd6+772];
	st.local.u32 	[%rd9262+772], %r329;
	ld.global.u32 	%r330, [%rd6+776];
	st.local.u32 	[%rd9262+776], %r330;
	ld.global.u32 	%r331, [%rd6+780];
	st.local.u32 	[%rd9262+780], %r331;
	ld.global.u32 	%r332, [%rd6+784];
	st.local.u32 	[%rd9262+784], %r332;
	ld.global.u32 	%r333, [%rd6+788];
	st.local.u32 	[%rd9262+788], %r333;
	ld.global.u32 	%r334, [%rd6+792];
	st.local.u32 	[%rd9262+792], %r334;
	ld.global.u32 	%r335, [%rd6+796];
	st.local.u32 	[%rd9262+796], %r335;
	ld.global.u32 	%r336, [%rd6+800];
	st.local.u32 	[%rd9262+800], %r336;
	ld.global.u32 	%r337, [%rd6+804];
	st.local.u32 	[%rd9262+804], %r337;
	ld.global.u32 	%r338, [%rd6+808];
	st.local.u32 	[%rd9262+808], %r338;
	ld.global.u32 	%r339, [%rd6+812];
	st.local.u32 	[%rd9262+812], %r339;
	ld.global.u32 	%r340, [%rd6+816];
	st.local.u32 	[%rd9262+816], %r340;
	ld.global.u32 	%r341, [%rd6+820];
	st.local.u32 	[%rd9262+820], %r341;
	ld.global.u32 	%r342, [%rd6+824];
	st.local.u32 	[%rd9262+824], %r342;
	ld.global.u32 	%r343, [%rd6+828];
	st.local.u32 	[%rd9262+828], %r343;
	ld.global.u32 	%r344, [%rd6+832];
	st.local.u32 	[%rd9262+832], %r344;
	ld.global.u32 	%r345, [%rd6+836];
	st.local.u32 	[%rd9262+836], %r345;
	ld.global.u32 	%r346, [%rd6+840];
	st.local.u32 	[%rd9262+840], %r346;
	ld.global.u32 	%r347, [%rd6+844];
	st.local.u32 	[%rd9262+844], %r347;
	ld.global.u32 	%r348, [%rd6+848];
	st.local.u32 	[%rd9262+848], %r348;
	ld.global.u32 	%r349, [%rd6+852];
	st.local.u32 	[%rd9262+852], %r349;
	ld.global.u32 	%r350, [%rd6+856];
	st.local.u32 	[%rd9262+856], %r350;
	ld.global.u32 	%r351, [%rd6+860];
	st.local.u32 	[%rd9262+860], %r351;
	ld.global.u32 	%r352, [%rd6+864];
	st.local.u32 	[%rd9262+864], %r352;
	ld.global.u32 	%r353, [%rd6+868];
	st.local.u32 	[%rd9262+868], %r353;
	ld.global.u32 	%r354, [%rd6+872];
	st.local.u32 	[%rd9262+872], %r354;
	ld.global.u32 	%r355, [%rd6+876];
	st.local.u32 	[%rd9262+876], %r355;
	ld.global.u32 	%r356, [%rd6+880];
	st.local.u32 	[%rd9262+880], %r356;
	ld.global.u32 	%r357, [%rd6+884];
	st.local.u32 	[%rd9262+884], %r357;
	ld.global.u32 	%r358, [%rd6+888];
	st.local.u32 	[%rd9262+888], %r358;
	ld.global.u32 	%r359, [%rd6+892];
	st.local.u32 	[%rd9262+892], %r359;
	ld.global.u32 	%r360, [%rd6+896];
	st.local.u32 	[%rd9262+896], %r360;
	ld.global.u32 	%r361, [%rd6+900];
	st.local.u32 	[%rd9262+900], %r361;
	ld.global.u32 	%r362, [%rd6+904];
	st.local.u32 	[%rd9262+904], %r362;
	ld.global.u32 	%r363, [%rd6+908];
	st.local.u32 	[%rd9262+908], %r363;
	ld.global.u32 	%r364, [%rd6+912];
	st.local.u32 	[%rd9262+912], %r364;
	ld.global.u32 	%r365, [%rd6+916];
	st.local.u32 	[%rd9262+916], %r365;
	ld.global.u32 	%r366, [%rd6+920];
	st.local.u32 	[%rd9262+920], %r366;
	ld.global.u32 	%r367, [%rd6+924];
	st.local.u32 	[%rd9262+924], %r367;
	ld.global.u32 	%r368, [%rd6+928];
	st.local.u32 	[%rd9262+928], %r368;
	ld.global.u32 	%r369, [%rd6+932];
	st.local.u32 	[%rd9262+932], %r369;
	ld.global.u32 	%r370, [%rd6+936];
	st.local.u32 	[%rd9262+936], %r370;
	ld.global.u32 	%r371, [%rd6+940];
	st.local.u32 	[%rd9262+940], %r371;
	ld.global.u32 	%r372, [%rd6+944];
	st.local.u32 	[%rd9262+944], %r372;
	ld.global.u32 	%r373, [%rd6+948];
	st.local.u32 	[%rd9262+948], %r373;
	ld.global.u32 	%r374, [%rd6+952];
	st.local.u32 	[%rd9262+952], %r374;
	ld.global.u32 	%r375, [%rd6+956];
	st.local.u32 	[%rd9262+956], %r375;
	ld.global.u32 	%r376, [%rd6+960];
	st.local.u32 	[%rd9262+960], %r376;
	ld.global.u32 	%r377, [%rd6+964];
	st.local.u32 	[%rd9262+964], %r377;
	ld.global.u32 	%r378, [%rd6+968];
	st.local.u32 	[%rd9262+968], %r378;
	ld.global.u32 	%r379, [%rd6+972];
	st.local.u32 	[%rd9262+972], %r379;
	ld.global.u32 	%r380, [%rd6+976];
	st.local.u32 	[%rd9262+976], %r380;
	ld.global.u32 	%r381, [%rd6+980];
	st.local.u32 	[%rd9262+980], %r381;
	ld.global.u32 	%r382, [%rd6+984];
	st.local.u32 	[%rd9262+984], %r382;
	ld.global.u32 	%r383, [%rd6+988];
	st.local.u32 	[%rd9262+988], %r383;
	ld.global.u32 	%r384, [%rd6+992];
	st.local.u32 	[%rd9262+992], %r384;
	ld.global.u32 	%r385, [%rd6+996];
	st.local.u32 	[%rd9262+996], %r385;
	ld.global.u32 	%r386, [%rd6+1000];
	st.local.u32 	[%rd9262+1000], %r386;
	ld.global.u32 	%r387, [%rd6+1004];
	st.local.u32 	[%rd9262+1004], %r387;
	ld.global.u32 	%r388, [%rd6+1008];
	st.local.u32 	[%rd9262+1008], %r388;
	ld.global.u32 	%r389, [%rd6+1012];
	st.local.u32 	[%rd9262+1012], %r389;
	ld.global.u32 	%r390, [%rd6+1016];
	st.local.u32 	[%rd9262+1016], %r390;
	ld.global.u32 	%r391, [%rd6+1020];
	st.local.u32 	[%rd9262+1020], %r391;
	add.s64 	%rd7, %rd1, 8;
	mov.u64 	%rd9260, 7640891576956012808;
	st.local.u64 	[%rd1+8], %rd9260;
	mov.u64 	%rd9259, -4942790177534073029;
	st.local.u64 	[%rd1+16], %rd9259;
	mov.u64 	%rd9258, 4354685564936845355;
	st.local.u64 	[%rd1+24], %rd9258;
	mov.u64 	%rd9257, -6534734903238641935;
	st.local.u64 	[%rd1+32], %rd9257;
	mov.u64 	%rd9256, 5840696475078001361;
	st.local.u64 	[%rd1+40], %rd9256;
	mov.u64 	%rd9255, -7276294671716946913;
	st.local.u64 	[%rd1+48], %rd9255;
	mov.u64 	%rd9254, 2270897969802886507;
	st.local.u64 	[%rd1+56], %rd9254;
	mov.u64 	%rd9253, 6620516959819538809;
	st.local.u64 	[%rd1+64], %rd9253;
	mov.u32 	%r10271, 1024;
	st.local.u32 	[%rd1], %r10271;

$L__BB3_2:
	and.b64  	%rd200, %rd9261, 7;
	setp.eq.s64 	%p2, %rd200, 0;
	@%p2 bra 	$L__BB3_4;

	ld.local.v4.u8 	{%rs2, %rs3, %rs4, %rs5}, [%rd9262];
	cvt.u64.u16 	%rd201, %rs2;
	shl.b64 	%rd202, %rd201, 56;
	cvt.u64.u16 	%rd203, %rs3;
	shl.b64 	%rd204, %rd203, 48;
	or.b64  	%rd205, %rd204, %rd202;
	cvt.u64.u16 	%rd206, %rs4;
	shl.b64 	%rd207, %rd206, 40;
	or.b64  	%rd208, %rd205, %rd207;
	cvt.u64.u16 	%rd209, %rs5;
	shl.b64 	%rd210, %rd209, 32;
	or.b64  	%rd211, %rd208, %rd210;
	ld.local.v4.u8 	{%rs7, %rs8, %rs9, %rs10}, [%rd9262+4];
	cvt.u32.u16 	%r392, %rs7;
	mul.wide.u32 	%rd212, %r392, 16777216;
	or.b64  	%rd213, %rd211, %rd212;
	cvt.u32.u16 	%r393, %rs8;
	mul.wide.u32 	%rd214, %r393, 65536;
	or.b64  	%rd215, %rd213, %rd214;
	cvt.u32.u16 	%r394, %rs9;
	mul.wide.u32 	%rd216, %r394, 256;
	or.b64  	%rd217, %rd215, %rd216;
	cvt.u64.u16 	%rd218, %rs10;
	or.b64  	%rd9263, %rd217, %rd218;
	ld.local.v4.u8 	{%rs11, %rs12, %rs13, %rs14}, [%rd9262+8];
	cvt.u64.u16 	%rd219, %rs11;
	shl.b64 	%rd220, %rd219, 56;
	cvt.u64.u16 	%rd221, %rs12;
	shl.b64 	%rd222, %rd221, 48;
	or.b64  	%rd223, %rd222, %rd220;
	cvt.u64.u16 	%rd224, %rs13;
	shl.b64 	%rd225, %rd224, 40;
	or.b64  	%rd226, %rd223, %rd225;
	cvt.u64.u16 	%rd227, %rs14;
	shl.b64 	%rd228, %rd227, 32;
	or.b64  	%rd229, %rd226, %rd228;
	ld.local.v4.u8 	{%rs16, %rs17, %rs18, %rs19}, [%rd9262+12];
	cvt.u32.u16 	%r395, %rs16;
	mul.wide.u32 	%rd230, %r395, 16777216;
	or.b64  	%rd231, %rd229, %rd230;
	cvt.u32.u16 	%r396, %rs17;
	mul.wide.u32 	%rd232, %r396, 65536;
	or.b64  	%rd233, %rd231, %rd232;
	cvt.u32.u16 	%r397, %rs18;
	mul.wide.u32 	%rd234, %r397, 256;
	or.b64  	%rd235, %rd233, %rd234;
	cvt.u64.u16 	%rd236, %rs19;
	or.b64  	%rd9264, %rd235, %rd236;
	ld.local.v4.u8 	{%rs20, %rs21, %rs22, %rs23}, [%rd9262+16];
	cvt.u64.u16 	%rd237, %rs20;
	shl.b64 	%rd238, %rd237, 56;
	cvt.u64.u16 	%rd239, %rs21;
	shl.b64 	%rd240, %rd239, 48;
	or.b64  	%rd241, %rd240, %rd238;
	cvt.u64.u16 	%rd242, %rs22;
	shl.b64 	%rd243, %rd242, 40;
	or.b64  	%rd244, %rd241, %rd243;
	cvt.u64.u16 	%rd245, %rs23;
	shl.b64 	%rd246, %rd245, 32;
	or.b64  	%rd247, %rd244, %rd246;
	ld.local.v4.u8 	{%rs25, %rs26, %rs27, %rs28}, [%rd9262+20];
	cvt.u32.u16 	%r398, %rs25;
	mul.wide.u32 	%rd248, %r398, 16777216;
	or.b64  	%rd249, %rd247, %rd248;
	cvt.u32.u16 	%r399, %rs26;
	mul.wide.u32 	%rd250, %r399, 65536;
	or.b64  	%rd251, %rd249, %rd250;
	cvt.u32.u16 	%r400, %rs27;
	mul.wide.u32 	%rd252, %r400, 256;
	or.b64  	%rd253, %rd251, %rd252;
	cvt.u64.u16 	%rd254, %rs28;
	or.b64  	%rd9265, %rd253, %rd254;
	ld.local.v4.u8 	{%rs29, %rs30, %rs31, %rs32}, [%rd9262+24];
	cvt.u64.u16 	%rd255, %rs29;
	shl.b64 	%rd256, %rd255, 56;
	cvt.u64.u16 	%rd257, %rs30;
	shl.b64 	%rd258, %rd257, 48;
	or.b64  	%rd259, %rd258, %rd256;
	cvt.u64.u16 	%rd260, %rs31;
	shl.b64 	%rd261, %rd260, 40;
	or.b64  	%rd262, %rd259, %rd261;
	cvt.u64.u16 	%rd263, %rs32;
	shl.b64 	%rd264, %rd263, 32;
	or.b64  	%rd265, %rd262, %rd264;
	ld.local.v4.u8 	{%rs34, %rs35, %rs36, %rs37}, [%rd9262+28];
	cvt.u32.u16 	%r401, %rs34;
	mul.wide.u32 	%rd266, %r401, 16777216;
	or.b64  	%rd267, %rd265, %rd266;
	cvt.u32.u16 	%r402, %rs35;
	mul.wide.u32 	%rd268, %r402, 65536;
	or.b64  	%rd269, %rd267, %rd268;
	cvt.u32.u16 	%r403, %rs36;
	mul.wide.u32 	%rd270, %r403, 256;
	or.b64  	%rd271, %rd269, %rd270;
	cvt.u64.u16 	%rd272, %rs37;
	or.b64  	%rd9266, %rd271, %rd272;
	ld.local.v4.u8 	{%rs38, %rs39, %rs40, %rs41}, [%rd9262+32];
	cvt.u64.u16 	%rd273, %rs38;
	shl.b64 	%rd274, %rd273, 56;
	cvt.u64.u16 	%rd275, %rs39;
	shl.b64 	%rd276, %rd275, 48;
	or.b64  	%rd277, %rd276, %rd274;
	cvt.u64.u16 	%rd278, %rs40;
	shl.b64 	%rd279, %rd278, 40;
	or.b64  	%rd280, %rd277, %rd279;
	cvt.u64.u16 	%rd281, %rs41;
	shl.b64 	%rd282, %rd281, 32;
	or.b64  	%rd283, %rd280, %rd282;
	ld.local.v4.u8 	{%rs43, %rs44, %rs45, %rs46}, [%rd9262+36];
	cvt.u32.u16 	%r404, %rs43;
	mul.wide.u32 	%rd284, %r404, 16777216;
	or.b64  	%rd285, %rd283, %rd284;
	cvt.u32.u16 	%r405, %rs44;
	mul.wide.u32 	%rd286, %r405, 65536;
	or.b64  	%rd287, %rd285, %rd286;
	cvt.u32.u16 	%r406, %rs45;
	mul.wide.u32 	%rd288, %r406, 256;
	or.b64  	%rd289, %rd287, %rd288;
	cvt.u64.u16 	%rd290, %rs46;
	or.b64  	%rd9267, %rd289, %rd290;
	ld.local.v4.u8 	{%rs47, %rs48, %rs49, %rs50}, [%rd9262+40];
	cvt.u64.u16 	%rd291, %rs47;
	shl.b64 	%rd292, %rd291, 56;
	cvt.u64.u16 	%rd293, %rs48;
	shl.b64 	%rd294, %rd293, 48;
	or.b64  	%rd295, %rd294, %rd292;
	cvt.u64.u16 	%rd296, %rs49;
	shl.b64 	%rd297, %rd296, 40;
	or.b64  	%rd298, %rd295, %rd297;
	cvt.u64.u16 	%rd299, %rs50;
	shl.b64 	%rd300, %rd299, 32;
	or.b64  	%rd301, %rd298, %rd300;
	ld.local.v4.u8 	{%rs52, %rs53, %rs54, %rs55}, [%rd9262+44];
	cvt.u32.u16 	%r407, %rs52;
	mul.wide.u32 	%rd302, %r407, 16777216;
	or.b64  	%rd303, %rd301, %rd302;
	cvt.u32.u16 	%r408, %rs53;
	mul.wide.u32 	%rd304, %r408, 65536;
	or.b64  	%rd305, %rd303, %rd304;
	cvt.u32.u16 	%r409, %rs54;
	mul.wide.u32 	%rd306, %r409, 256;
	or.b64  	%rd307, %rd305, %rd306;
	cvt.u64.u16 	%rd308, %rs55;
	or.b64  	%rd9268, %rd307, %rd308;
	ld.local.v4.u8 	{%rs56, %rs57, %rs58, %rs59}, [%rd9262+48];
	cvt.u64.u16 	%rd309, %rs56;
	shl.b64 	%rd310, %rd309, 56;
	cvt.u64.u16 	%rd311, %rs57;
	shl.b64 	%rd312, %rd311, 48;
	or.b64  	%rd313, %rd312, %rd310;
	cvt.u64.u16 	%rd314, %rs58;
	shl.b64 	%rd315, %rd314, 40;
	or.b64  	%rd316, %rd313, %rd315;
	cvt.u64.u16 	%rd317, %rs59;
	shl.b64 	%rd318, %rd317, 32;
	or.b64  	%rd319, %rd316, %rd318;
	ld.local.v4.u8 	{%rs61, %rs62, %rs63, %rs64}, [%rd9262+52];
	cvt.u32.u16 	%r410, %rs61;
	mul.wide.u32 	%rd320, %r410, 16777216;
	or.b64  	%rd321, %rd319, %rd320;
	cvt.u32.u16 	%r411, %rs62;
	mul.wide.u32 	%rd322, %r411, 65536;
	or.b64  	%rd323, %rd321, %rd322;
	cvt.u32.u16 	%r412, %rs63;
	mul.wide.u32 	%rd324, %r412, 256;
	or.b64  	%rd325, %rd323, %rd324;
	cvt.u64.u16 	%rd326, %rs64;
	or.b64  	%rd9269, %rd325, %rd326;
	ld.local.v4.u8 	{%rs65, %rs66, %rs67, %rs68}, [%rd9262+56];
	cvt.u64.u16 	%rd327, %rs65;
	shl.b64 	%rd328, %rd327, 56;
	cvt.u64.u16 	%rd329, %rs66;
	shl.b64 	%rd330, %rd329, 48;
	or.b64  	%rd331, %rd330, %rd328;
	cvt.u64.u16 	%rd332, %rs67;
	shl.b64 	%rd333, %rd332, 40;
	or.b64  	%rd334, %rd331, %rd333;
	cvt.u64.u16 	%rd335, %rs68;
	shl.b64 	%rd336, %rd335, 32;
	or.b64  	%rd337, %rd334, %rd336;
	ld.local.v4.u8 	{%rs70, %rs71, %rs72, %rs73}, [%rd9262+60];
	cvt.u32.u16 	%r413, %rs70;
	mul.wide.u32 	%rd338, %r413, 16777216;
	or.b64  	%rd339, %rd337, %rd338;
	cvt.u32.u16 	%r414, %rs71;
	mul.wide.u32 	%rd340, %r414, 65536;
	or.b64  	%rd341, %rd339, %rd340;
	cvt.u32.u16 	%r415, %rs72;
	mul.wide.u32 	%rd342, %r415, 256;
	or.b64  	%rd343, %rd341, %rd342;
	cvt.u64.u16 	%rd344, %rs73;
	or.b64  	%rd9270, %rd343, %rd344;
	ld.local.v4.u8 	{%rs74, %rs75, %rs76, %rs77}, [%rd9262+64];
	cvt.u64.u16 	%rd345, %rs74;
	shl.b64 	%rd346, %rd345, 56;
	cvt.u64.u16 	%rd347, %rs75;
	shl.b64 	%rd348, %rd347, 48;
	or.b64  	%rd349, %rd348, %rd346;
	cvt.u64.u16 	%rd350, %rs76;
	shl.b64 	%rd351, %rd350, 40;
	or.b64  	%rd352, %rd349, %rd351;
	cvt.u64.u16 	%rd353, %rs77;
	shl.b64 	%rd354, %rd353, 32;
	or.b64  	%rd355, %rd352, %rd354;
	ld.local.v4.u8 	{%rs79, %rs80, %rs81, %rs82}, [%rd9262+68];
	cvt.u32.u16 	%r416, %rs79;
	mul.wide.u32 	%rd356, %r416, 16777216;
	or.b64  	%rd357, %rd355, %rd356;
	cvt.u32.u16 	%r417, %rs80;
	mul.wide.u32 	%rd358, %r417, 65536;
	or.b64  	%rd359, %rd357, %rd358;
	cvt.u32.u16 	%r418, %rs81;
	mul.wide.u32 	%rd360, %r418, 256;
	or.b64  	%rd361, %rd359, %rd360;
	cvt.u64.u16 	%rd362, %rs82;
	or.b64  	%rd9271, %rd361, %rd362;
	ld.local.v4.u8 	{%rs83, %rs84, %rs85, %rs86}, [%rd9262+72];
	cvt.u64.u16 	%rd363, %rs83;
	shl.b64 	%rd364, %rd363, 56;
	cvt.u64.u16 	%rd365, %rs84;
	shl.b64 	%rd366, %rd365, 48;
	or.b64  	%rd367, %rd366, %rd364;
	cvt.u64.u16 	%rd368, %rs85;
	shl.b64 	%rd369, %rd368, 40;
	or.b64  	%rd370, %rd367, %rd369;
	cvt.u64.u16 	%rd371, %rs86;
	shl.b64 	%rd372, %rd371, 32;
	or.b64  	%rd373, %rd370, %rd372;
	ld.local.v4.u8 	{%rs88, %rs89, %rs90, %rs91}, [%rd9262+76];
	cvt.u32.u16 	%r419, %rs88;
	mul.wide.u32 	%rd374, %r419, 16777216;
	or.b64  	%rd375, %rd373, %rd374;
	cvt.u32.u16 	%r420, %rs89;
	mul.wide.u32 	%rd376, %r420, 65536;
	or.b64  	%rd377, %rd375, %rd376;
	cvt.u32.u16 	%r421, %rs90;
	mul.wide.u32 	%rd378, %r421, 256;
	or.b64  	%rd379, %rd377, %rd378;
	cvt.u64.u16 	%rd380, %rs91;
	or.b64  	%rd9272, %rd379, %rd380;
	ld.local.v4.u8 	{%rs92, %rs93, %rs94, %rs95}, [%rd9262+80];
	cvt.u64.u16 	%rd381, %rs92;
	shl.b64 	%rd382, %rd381, 56;
	cvt.u64.u16 	%rd383, %rs93;
	shl.b64 	%rd384, %rd383, 48;
	or.b64  	%rd385, %rd384, %rd382;
	cvt.u64.u16 	%rd386, %rs94;
	shl.b64 	%rd387, %rd386, 40;
	or.b64  	%rd388, %rd385, %rd387;
	cvt.u64.u16 	%rd389, %rs95;
	shl.b64 	%rd390, %rd389, 32;
	or.b64  	%rd391, %rd388, %rd390;
	ld.local.v4.u8 	{%rs97, %rs98, %rs99, %rs100}, [%rd9262+84];
	cvt.u32.u16 	%r422, %rs97;
	mul.wide.u32 	%rd392, %r422, 16777216;
	or.b64  	%rd393, %rd391, %rd392;
	cvt.u32.u16 	%r423, %rs98;
	mul.wide.u32 	%rd394, %r423, 65536;
	or.b64  	%rd395, %rd393, %rd394;
	cvt.u32.u16 	%r424, %rs99;
	mul.wide.u32 	%rd396, %r424, 256;
	or.b64  	%rd397, %rd395, %rd396;
	cvt.u64.u16 	%rd398, %rs100;
	or.b64  	%rd9273, %rd397, %rd398;
	ld.local.v4.u8 	{%rs101, %rs102, %rs103, %rs104}, [%rd9262+88];
	cvt.u64.u16 	%rd399, %rs101;
	shl.b64 	%rd400, %rd399, 56;
	cvt.u64.u16 	%rd401, %rs102;
	shl.b64 	%rd402, %rd401, 48;
	or.b64  	%rd403, %rd402, %rd400;
	cvt.u64.u16 	%rd404, %rs103;
	shl.b64 	%rd405, %rd404, 40;
	or.b64  	%rd406, %rd403, %rd405;
	cvt.u64.u16 	%rd407, %rs104;
	shl.b64 	%rd408, %rd407, 32;
	or.b64  	%rd409, %rd406, %rd408;
	ld.local.v4.u8 	{%rs106, %rs107, %rs108, %rs109}, [%rd9262+92];
	cvt.u32.u16 	%r425, %rs106;
	mul.wide.u32 	%rd410, %r425, 16777216;
	or.b64  	%rd411, %rd409, %rd410;
	cvt.u32.u16 	%r426, %rs107;
	mul.wide.u32 	%rd412, %r426, 65536;
	or.b64  	%rd413, %rd411, %rd412;
	cvt.u32.u16 	%r427, %rs108;
	mul.wide.u32 	%rd414, %r427, 256;
	or.b64  	%rd415, %rd413, %rd414;
	cvt.u64.u16 	%rd416, %rs109;
	or.b64  	%rd9274, %rd415, %rd416;
	ld.local.v4.u8 	{%rs110, %rs111, %rs112, %rs113}, [%rd9262+96];
	cvt.u64.u16 	%rd417, %rs110;
	shl.b64 	%rd418, %rd417, 56;
	cvt.u64.u16 	%rd419, %rs111;
	shl.b64 	%rd420, %rd419, 48;
	or.b64  	%rd421, %rd420, %rd418;
	cvt.u64.u16 	%rd422, %rs112;
	shl.b64 	%rd423, %rd422, 40;
	or.b64  	%rd424, %rd421, %rd423;
	cvt.u64.u16 	%rd425, %rs113;
	shl.b64 	%rd426, %rd425, 32;
	or.b64  	%rd427, %rd424, %rd426;
	ld.local.v4.u8 	{%rs115, %rs116, %rs117, %rs118}, [%rd9262+100];
	cvt.u32.u16 	%r428, %rs115;
	mul.wide.u32 	%rd428, %r428, 16777216;
	or.b64  	%rd429, %rd427, %rd428;
	cvt.u32.u16 	%r429, %rs116;
	mul.wide.u32 	%rd430, %r429, 65536;
	or.b64  	%rd431, %rd429, %rd430;
	cvt.u32.u16 	%r430, %rs117;
	mul.wide.u32 	%rd432, %r430, 256;
	or.b64  	%rd433, %rd431, %rd432;
	cvt.u64.u16 	%rd434, %rs118;
	or.b64  	%rd9275, %rd433, %rd434;
	ld.local.v4.u8 	{%rs119, %rs120, %rs121, %rs122}, [%rd9262+104];
	cvt.u64.u16 	%rd435, %rs119;
	shl.b64 	%rd436, %rd435, 56;
	cvt.u64.u16 	%rd437, %rs120;
	shl.b64 	%rd438, %rd437, 48;
	or.b64  	%rd439, %rd438, %rd436;
	cvt.u64.u16 	%rd440, %rs121;
	shl.b64 	%rd441, %rd440, 40;
	or.b64  	%rd442, %rd439, %rd441;
	cvt.u64.u16 	%rd443, %rs122;
	shl.b64 	%rd444, %rd443, 32;
	or.b64  	%rd445, %rd442, %rd444;
	ld.local.v4.u8 	{%rs124, %rs125, %rs126, %rs127}, [%rd9262+108];
	cvt.u32.u16 	%r431, %rs124;
	mul.wide.u32 	%rd446, %r431, 16777216;
	or.b64  	%rd447, %rd445, %rd446;
	cvt.u32.u16 	%r432, %rs125;
	mul.wide.u32 	%rd448, %r432, 65536;
	or.b64  	%rd449, %rd447, %rd448;
	cvt.u32.u16 	%r433, %rs126;
	mul.wide.u32 	%rd450, %r433, 256;
	or.b64  	%rd451, %rd449, %rd450;
	cvt.u64.u16 	%rd452, %rs127;
	or.b64  	%rd9276, %rd451, %rd452;
	ld.local.v4.u8 	{%rs128, %rs129, %rs130, %rs131}, [%rd9262+112];
	cvt.u64.u16 	%rd453, %rs128;
	shl.b64 	%rd454, %rd453, 56;
	cvt.u64.u16 	%rd455, %rs129;
	shl.b64 	%rd456, %rd455, 48;
	or.b64  	%rd457, %rd456, %rd454;
	cvt.u64.u16 	%rd458, %rs130;
	shl.b64 	%rd459, %rd458, 40;
	or.b64  	%rd460, %rd457, %rd459;
	cvt.u64.u16 	%rd461, %rs131;
	shl.b64 	%rd462, %rd461, 32;
	or.b64  	%rd463, %rd460, %rd462;
	ld.local.v4.u8 	{%rs133, %rs134, %rs135, %rs136}, [%rd9262+116];
	cvt.u32.u16 	%r434, %rs133;
	mul.wide.u32 	%rd464, %r434, 16777216;
	or.b64  	%rd465, %rd463, %rd464;
	cvt.u32.u16 	%r435, %rs134;
	mul.wide.u32 	%rd466, %r435, 65536;
	or.b64  	%rd467, %rd465, %rd466;
	cvt.u32.u16 	%r436, %rs135;
	mul.wide.u32 	%rd468, %r436, 256;
	or.b64  	%rd469, %rd467, %rd468;
	cvt.u64.u16 	%rd470, %rs136;
	or.b64  	%rd9277, %rd469, %rd470;
	ld.local.v4.u8 	{%rs137, %rs138, %rs139, %rs140}, [%rd9262+120];
	cvt.u64.u16 	%rd471, %rs137;
	cvt.u64.u16 	%rd472, %rs138;
	cvt.u64.u16 	%rd473, %rs139;
	cvt.u64.u16 	%rd474, %rs140;
	ld.local.v4.u8 	{%rs142, %rs143, %rs144, %rs145}, [%rd9262+124];
	cvt.u32.u16 	%r437, %rs142;
	mul.wide.u32 	%rd475, %r437, 16777216;
	cvt.u32.u16 	%r438, %rs143;
	mul.wide.u32 	%rd476, %r438, 65536;
	cvt.u32.u16 	%r439, %rs144;
	mul.wide.u32 	%rd477, %r439, 256;
	cvt.u64.u16 	%rd478, %rs145;
	shl.b64 	%rd479, %rd472, 48;
	shl.b64 	%rd480, %rd471, 56;
	shl.b64 	%rd481, %rd473, 40;
	or.b64  	%rd482, %rd479, %rd480;
	shl.b64 	%rd483, %rd474, 32;
	or.b64  	%rd484, %rd482, %rd481;
	or.b64  	%rd485, %rd484, %rd483;
	or.b64  	%rd486, %rd485, %rd475;
	or.b64  	%rd487, %rd486, %rd476;
	or.b64  	%rd488, %rd487, %rd477;
	or.b64  	%rd9278, %rd488, %rd478;
	bra.uni 	$L__BB3_5;

$L__BB3_4:
	ld.local.u64 	%rd489, [%rd9262];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r440, %temp}, %rd489;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r441}, %rd489;
	}
	mov.u32 	%r442, 291;
	mov.u32 	%r443, 0;
	prmt.b32 	%r444, %r440, %r443, %r442;
	prmt.b32 	%r445, %r441, %r443, %r442;
	mov.b64 	%rd9263, {%r445, %r444};
	ld.local.u64 	%rd490, [%rd9262+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r446, %temp}, %rd490;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r447}, %rd490;
	}
	prmt.b32 	%r448, %r446, %r443, %r442;
	prmt.b32 	%r449, %r447, %r443, %r442;
	mov.b64 	%rd9264, {%r449, %r448};
	ld.local.u64 	%rd491, [%rd9262+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r450, %temp}, %rd491;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r451}, %rd491;
	}
	prmt.b32 	%r452, %r450, %r443, %r442;
	prmt.b32 	%r453, %r451, %r443, %r442;
	mov.b64 	%rd9265, {%r453, %r452};
	ld.local.u64 	%rd492, [%rd9262+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r454, %temp}, %rd492;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r455}, %rd492;
	}
	prmt.b32 	%r456, %r454, %r443, %r442;
	prmt.b32 	%r457, %r455, %r443, %r442;
	mov.b64 	%rd9266, {%r457, %r456};
	ld.local.u64 	%rd493, [%rd9262+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r458, %temp}, %rd493;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r459}, %rd493;
	}
	prmt.b32 	%r460, %r458, %r443, %r442;
	prmt.b32 	%r461, %r459, %r443, %r442;
	mov.b64 	%rd9267, {%r461, %r460};
	ld.local.u64 	%rd494, [%rd9262+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r462, %temp}, %rd494;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r463}, %rd494;
	}
	prmt.b32 	%r464, %r462, %r443, %r442;
	prmt.b32 	%r465, %r463, %r443, %r442;
	mov.b64 	%rd9268, {%r465, %r464};
	ld.local.u64 	%rd495, [%rd9262+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r466, %temp}, %rd495;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r467}, %rd495;
	}
	prmt.b32 	%r468, %r466, %r443, %r442;
	prmt.b32 	%r469, %r467, %r443, %r442;
	mov.b64 	%rd9269, {%r469, %r468};
	ld.local.u64 	%rd496, [%rd9262+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r470, %temp}, %rd496;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r471}, %rd496;
	}
	prmt.b32 	%r472, %r470, %r443, %r442;
	prmt.b32 	%r473, %r471, %r443, %r442;
	mov.b64 	%rd9270, {%r473, %r472};
	ld.local.u64 	%rd497, [%rd9262+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r474, %temp}, %rd497;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r475}, %rd497;
	}
	prmt.b32 	%r476, %r474, %r443, %r442;
	prmt.b32 	%r477, %r475, %r443, %r442;
	mov.b64 	%rd9271, {%r477, %r476};
	ld.local.u64 	%rd498, [%rd9262+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r478, %temp}, %rd498;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r479}, %rd498;
	}
	prmt.b32 	%r480, %r478, %r443, %r442;
	prmt.b32 	%r481, %r479, %r443, %r442;
	mov.b64 	%rd9272, {%r481, %r480};
	ld.local.u64 	%rd499, [%rd9262+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r482, %temp}, %rd499;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r483}, %rd499;
	}
	prmt.b32 	%r484, %r482, %r443, %r442;
	prmt.b32 	%r485, %r483, %r443, %r442;
	mov.b64 	%rd9273, {%r485, %r484};
	ld.local.u64 	%rd500, [%rd9262+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r486, %temp}, %rd500;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r487}, %rd500;
	}
	prmt.b32 	%r488, %r486, %r443, %r442;
	prmt.b32 	%r489, %r487, %r443, %r442;
	mov.b64 	%rd9274, {%r489, %r488};
	ld.local.u64 	%rd501, [%rd9262+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r490, %temp}, %rd501;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r491}, %rd501;
	}
	prmt.b32 	%r492, %r490, %r443, %r442;
	prmt.b32 	%r493, %r491, %r443, %r442;
	mov.b64 	%rd9275, {%r493, %r492};
	ld.local.u64 	%rd502, [%rd9262+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r494, %temp}, %rd502;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r495}, %rd502;
	}
	prmt.b32 	%r496, %r494, %r443, %r442;
	prmt.b32 	%r497, %r495, %r443, %r442;
	mov.b64 	%rd9276, {%r497, %r496};
	ld.local.u64 	%rd503, [%rd9262+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r498, %temp}, %rd503;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r499}, %rd503;
	}
	prmt.b32 	%r500, %r498, %r443, %r442;
	prmt.b32 	%r501, %r499, %r443, %r442;
	mov.b64 	%rd9277, {%r501, %r500};
	ld.local.u64 	%rd504, [%rd9262+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r502, %temp}, %rd504;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r503}, %rd504;
	}
	prmt.b32 	%r504, %r502, %r443, %r442;
	prmt.b32 	%r505, %r503, %r443, %r442;
	mov.b64 	%rd9278, {%r505, %r504};

$L__BB3_5:
	add.s64 	%rd505, %rd9263, %rd9253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd9256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd9256;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 18;
	shf.r.wrap.b32 	%r509, %r506, %r507, 18;
	mov.b64 	%rd506, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 14;
	shf.r.wrap.b32 	%r511, %r506, %r507, 14;
	mov.b64 	%rd507, {%r511, %r510};
	xor.b64  	%rd508, %rd507, %rd506;
	shf.l.wrap.b32 	%r512, %r506, %r507, 23;
	shf.l.wrap.b32 	%r513, %r507, %r506, 23;
	mov.b64 	%rd509, {%r513, %r512};
	xor.b64  	%rd510, %rd508, %rd509;
	add.s64 	%rd511, %rd505, %rd510;
	xor.b64  	%rd512, %rd9254, %rd9255;
	and.b64  	%rd513, %rd512, %rd9256;
	xor.b64  	%rd514, %rd513, %rd9254;
	add.s64 	%rd515, %rd511, %rd514;
	add.s64 	%rd516, %rd515, 4794697086780616226;
	add.s64 	%rd517, %rd516, %rd9257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd9260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd9260;
	}
	shf.l.wrap.b32 	%r516, %r515, %r514, 30;
	shf.l.wrap.b32 	%r517, %r514, %r515, 30;
	mov.b64 	%rd518, {%r517, %r516};
	shf.r.wrap.b32 	%r518, %r514, %r515, 28;
	shf.r.wrap.b32 	%r519, %r515, %r514, 28;
	mov.b64 	%rd519, {%r519, %r518};
	xor.b64  	%rd520, %rd519, %rd518;
	shf.l.wrap.b32 	%r520, %r515, %r514, 25;
	shf.l.wrap.b32 	%r521, %r514, %r515, 25;
	mov.b64 	%rd521, {%r521, %r520};
	xor.b64  	%rd522, %rd520, %rd521;
	or.b64  	%rd523, %rd9259, %rd9260;
	and.b64  	%rd524, %rd9258, %rd523;
	and.b64  	%rd525, %rd9259, %rd9260;
	or.b64  	%rd526, %rd524, %rd525;
	add.s64 	%rd527, %rd526, %rd522;
	add.s64 	%rd528, %rd527, %rd516;
	add.s64 	%rd529, %rd9264, %rd9254;
	xor.b64  	%rd530, %rd9255, %rd9256;
	and.b64  	%rd531, %rd517, %rd530;
	xor.b64  	%rd532, %rd531, %rd9255;
	add.s64 	%rd533, %rd529, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd517;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 14;
	shf.r.wrap.b32 	%r525, %r522, %r523, 14;
	mov.b64 	%rd534, {%r525, %r524};
	shf.r.wrap.b32 	%r526, %r523, %r522, 18;
	shf.r.wrap.b32 	%r527, %r522, %r523, 18;
	mov.b64 	%rd535, {%r527, %r526};
	xor.b64  	%rd536, %rd534, %rd535;
	shf.l.wrap.b32 	%r528, %r522, %r523, 23;
	shf.l.wrap.b32 	%r529, %r523, %r522, 23;
	mov.b64 	%rd537, {%r529, %r528};
	xor.b64  	%rd538, %rd536, %rd537;
	add.s64 	%rd539, %rd533, %rd538;
	add.s64 	%rd540, %rd539, 8158064640168781261;
	add.s64 	%rd541, %rd540, %rd9258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd528;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 28;
	shf.r.wrap.b32 	%r533, %r530, %r531, 28;
	mov.b64 	%rd542, {%r533, %r532};
	shf.l.wrap.b32 	%r534, %r530, %r531, 30;
	shf.l.wrap.b32 	%r535, %r531, %r530, 30;
	mov.b64 	%rd543, {%r535, %r534};
	xor.b64  	%rd544, %rd542, %rd543;
	shf.l.wrap.b32 	%r536, %r530, %r531, 25;
	shf.l.wrap.b32 	%r537, %r531, %r530, 25;
	mov.b64 	%rd545, {%r537, %r536};
	xor.b64  	%rd546, %rd544, %rd545;
	and.b64  	%rd547, %rd528, %rd9260;
	or.b64  	%rd548, %rd528, %rd9260;
	and.b64  	%rd549, %rd548, %rd9259;
	or.b64  	%rd550, %rd549, %rd547;
	add.s64 	%rd551, %rd550, %rd546;
	add.s64 	%rd552, %rd551, %rd540;
	add.s64 	%rd553, %rd9265, %rd9255;
	xor.b64  	%rd554, %rd517, %rd9256;
	and.b64  	%rd555, %rd541, %rd554;
	xor.b64  	%rd556, %rd555, %rd9256;
	add.s64 	%rd557, %rd553, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd541;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 14;
	shf.r.wrap.b32 	%r541, %r538, %r539, 14;
	mov.b64 	%rd558, {%r541, %r540};
	shf.r.wrap.b32 	%r542, %r539, %r538, 18;
	shf.r.wrap.b32 	%r543, %r538, %r539, 18;
	mov.b64 	%rd559, {%r543, %r542};
	xor.b64  	%rd560, %rd558, %rd559;
	shf.l.wrap.b32 	%r544, %r538, %r539, 23;
	shf.l.wrap.b32 	%r545, %r539, %r538, 23;
	mov.b64 	%rd561, {%r545, %r544};
	xor.b64  	%rd562, %rd560, %rd561;
	add.s64 	%rd563, %rd557, %rd562;
	add.s64 	%rd564, %rd563, -5349999486874862801;
	add.s64 	%rd565, %rd564, %rd9259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd552;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 28;
	shf.r.wrap.b32 	%r549, %r546, %r547, 28;
	mov.b64 	%rd566, {%r549, %r548};
	shf.l.wrap.b32 	%r550, %r546, %r547, 30;
	shf.l.wrap.b32 	%r551, %r547, %r546, 30;
	mov.b64 	%rd567, {%r551, %r550};
	xor.b64  	%rd568, %rd566, %rd567;
	shf.l.wrap.b32 	%r552, %r546, %r547, 25;
	shf.l.wrap.b32 	%r553, %r547, %r546, 25;
	mov.b64 	%rd569, {%r553, %r552};
	xor.b64  	%rd570, %rd568, %rd569;
	and.b64  	%rd571, %rd552, %rd528;
	or.b64  	%rd572, %rd552, %rd528;
	and.b64  	%rd573, %rd572, %rd9260;
	or.b64  	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd574, %rd570;
	add.s64 	%rd576, %rd575, %rd564;
	add.s64 	%rd577, %rd9266, %rd9256;
	xor.b64  	%rd578, %rd541, %rd517;
	and.b64  	%rd579, %rd565, %rd578;
	xor.b64  	%rd580, %rd579, %rd517;
	add.s64 	%rd581, %rd577, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd565;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 14;
	shf.r.wrap.b32 	%r557, %r554, %r555, 14;
	mov.b64 	%rd582, {%r557, %r556};
	shf.r.wrap.b32 	%r558, %r555, %r554, 18;
	shf.r.wrap.b32 	%r559, %r554, %r555, 18;
	mov.b64 	%rd583, {%r559, %r558};
	xor.b64  	%rd584, %rd582, %rd583;
	shf.l.wrap.b32 	%r560, %r554, %r555, 23;
	shf.l.wrap.b32 	%r561, %r555, %r554, 23;
	mov.b64 	%rd585, {%r561, %r560};
	xor.b64  	%rd586, %rd584, %rd585;
	add.s64 	%rd587, %rd581, %rd586;
	add.s64 	%rd588, %rd587, -1606136188198331460;
	add.s64 	%rd589, %rd588, %rd9260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd576;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 28;
	shf.r.wrap.b32 	%r565, %r562, %r563, 28;
	mov.b64 	%rd590, {%r565, %r564};
	shf.l.wrap.b32 	%r566, %r562, %r563, 30;
	shf.l.wrap.b32 	%r567, %r563, %r562, 30;
	mov.b64 	%rd591, {%r567, %r566};
	xor.b64  	%rd592, %rd590, %rd591;
	shf.l.wrap.b32 	%r568, %r562, %r563, 25;
	shf.l.wrap.b32 	%r569, %r563, %r562, 25;
	mov.b64 	%rd593, {%r569, %r568};
	xor.b64  	%rd594, %rd592, %rd593;
	and.b64  	%rd595, %rd576, %rd552;
	or.b64  	%rd596, %rd576, %rd552;
	and.b64  	%rd597, %rd596, %rd528;
	or.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd598, %rd594;
	add.s64 	%rd600, %rd599, %rd588;
	add.s64 	%rd601, %rd9267, %rd517;
	xor.b64  	%rd602, %rd565, %rd541;
	and.b64  	%rd603, %rd589, %rd602;
	xor.b64  	%rd604, %rd603, %rd541;
	add.s64 	%rd605, %rd601, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd589;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 14;
	shf.r.wrap.b32 	%r573, %r570, %r571, 14;
	mov.b64 	%rd606, {%r573, %r572};
	shf.r.wrap.b32 	%r574, %r571, %r570, 18;
	shf.r.wrap.b32 	%r575, %r570, %r571, 18;
	mov.b64 	%rd607, {%r575, %r574};
	xor.b64  	%rd608, %rd606, %rd607;
	shf.l.wrap.b32 	%r576, %r570, %r571, 23;
	shf.l.wrap.b32 	%r577, %r571, %r570, 23;
	mov.b64 	%rd609, {%r577, %r576};
	xor.b64  	%rd610, %rd608, %rd609;
	add.s64 	%rd611, %rd605, %rd610;
	add.s64 	%rd612, %rd611, 4131703408338449720;
	add.s64 	%rd613, %rd612, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd600;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 28;
	shf.r.wrap.b32 	%r581, %r578, %r579, 28;
	mov.b64 	%rd614, {%r581, %r580};
	shf.l.wrap.b32 	%r582, %r578, %r579, 30;
	shf.l.wrap.b32 	%r583, %r579, %r578, 30;
	mov.b64 	%rd615, {%r583, %r582};
	xor.b64  	%rd616, %rd614, %rd615;
	shf.l.wrap.b32 	%r584, %r578, %r579, 25;
	shf.l.wrap.b32 	%r585, %r579, %r578, 25;
	mov.b64 	%rd617, {%r585, %r584};
	xor.b64  	%rd618, %rd616, %rd617;
	and.b64  	%rd619, %rd600, %rd576;
	or.b64  	%rd620, %rd600, %rd576;
	and.b64  	%rd621, %rd620, %rd552;
	or.b64  	%rd622, %rd621, %rd619;
	add.s64 	%rd623, %rd622, %rd618;
	add.s64 	%rd624, %rd623, %rd612;
	add.s64 	%rd625, %rd9268, %rd541;
	xor.b64  	%rd626, %rd589, %rd565;
	and.b64  	%rd627, %rd613, %rd626;
	xor.b64  	%rd628, %rd627, %rd565;
	add.s64 	%rd629, %rd625, %rd628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd613;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 14;
	shf.r.wrap.b32 	%r589, %r586, %r587, 14;
	mov.b64 	%rd630, {%r589, %r588};
	shf.r.wrap.b32 	%r590, %r587, %r586, 18;
	shf.r.wrap.b32 	%r591, %r586, %r587, 18;
	mov.b64 	%rd631, {%r591, %r590};
	xor.b64  	%rd632, %rd630, %rd631;
	shf.l.wrap.b32 	%r592, %r586, %r587, 23;
	shf.l.wrap.b32 	%r593, %r587, %r586, 23;
	mov.b64 	%rd633, {%r593, %r592};
	xor.b64  	%rd634, %rd632, %rd633;
	add.s64 	%rd635, %rd629, %rd634;
	add.s64 	%rd636, %rd635, 6480981068601479193;
	add.s64 	%rd637, %rd636, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd624;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 28;
	shf.r.wrap.b32 	%r597, %r594, %r595, 28;
	mov.b64 	%rd638, {%r597, %r596};
	shf.l.wrap.b32 	%r598, %r594, %r595, 30;
	shf.l.wrap.b32 	%r599, %r595, %r594, 30;
	mov.b64 	%rd639, {%r599, %r598};
	xor.b64  	%rd640, %rd638, %rd639;
	shf.l.wrap.b32 	%r600, %r594, %r595, 25;
	shf.l.wrap.b32 	%r601, %r595, %r594, 25;
	mov.b64 	%rd641, {%r601, %r600};
	xor.b64  	%rd642, %rd640, %rd641;
	and.b64  	%rd643, %rd624, %rd600;
	or.b64  	%rd644, %rd624, %rd600;
	and.b64  	%rd645, %rd644, %rd576;
	or.b64  	%rd646, %rd645, %rd643;
	add.s64 	%rd647, %rd646, %rd642;
	add.s64 	%rd648, %rd647, %rd636;
	add.s64 	%rd649, %rd9269, %rd565;
	xor.b64  	%rd650, %rd613, %rd589;
	and.b64  	%rd651, %rd637, %rd650;
	xor.b64  	%rd652, %rd651, %rd589;
	add.s64 	%rd653, %rd649, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd637;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 14;
	shf.r.wrap.b32 	%r605, %r602, %r603, 14;
	mov.b64 	%rd654, {%r605, %r604};
	shf.r.wrap.b32 	%r606, %r603, %r602, 18;
	shf.r.wrap.b32 	%r607, %r602, %r603, 18;
	mov.b64 	%rd655, {%r607, %r606};
	xor.b64  	%rd656, %rd654, %rd655;
	shf.l.wrap.b32 	%r608, %r602, %r603, 23;
	shf.l.wrap.b32 	%r609, %r603, %r602, 23;
	mov.b64 	%rd657, {%r609, %r608};
	xor.b64  	%rd658, %rd656, %rd657;
	add.s64 	%rd659, %rd653, %rd658;
	add.s64 	%rd660, %rd659, -7908458776815382629;
	add.s64 	%rd661, %rd660, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd648;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 28;
	shf.r.wrap.b32 	%r613, %r610, %r611, 28;
	mov.b64 	%rd662, {%r613, %r612};
	shf.l.wrap.b32 	%r614, %r610, %r611, 30;
	shf.l.wrap.b32 	%r615, %r611, %r610, 30;
	mov.b64 	%rd663, {%r615, %r614};
	xor.b64  	%rd664, %rd662, %rd663;
	shf.l.wrap.b32 	%r616, %r610, %r611, 25;
	shf.l.wrap.b32 	%r617, %r611, %r610, 25;
	mov.b64 	%rd665, {%r617, %r616};
	xor.b64  	%rd666, %rd664, %rd665;
	and.b64  	%rd667, %rd648, %rd624;
	or.b64  	%rd668, %rd648, %rd624;
	and.b64  	%rd669, %rd668, %rd600;
	or.b64  	%rd670, %rd669, %rd667;
	add.s64 	%rd671, %rd670, %rd666;
	add.s64 	%rd672, %rd671, %rd660;
	add.s64 	%rd673, %rd9270, %rd589;
	xor.b64  	%rd674, %rd637, %rd613;
	and.b64  	%rd675, %rd661, %rd674;
	xor.b64  	%rd676, %rd675, %rd613;
	add.s64 	%rd677, %rd673, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd661;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 14;
	shf.r.wrap.b32 	%r621, %r618, %r619, 14;
	mov.b64 	%rd678, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 18;
	shf.r.wrap.b32 	%r623, %r618, %r619, 18;
	mov.b64 	%rd679, {%r623, %r622};
	xor.b64  	%rd680, %rd678, %rd679;
	shf.l.wrap.b32 	%r624, %r618, %r619, 23;
	shf.l.wrap.b32 	%r625, %r619, %r618, 23;
	mov.b64 	%rd681, {%r625, %r624};
	xor.b64  	%rd682, %rd680, %rd681;
	add.s64 	%rd683, %rd677, %rd682;
	add.s64 	%rd684, %rd683, -6116909921290321640;
	add.s64 	%rd685, %rd684, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd672;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 28;
	shf.r.wrap.b32 	%r629, %r626, %r627, 28;
	mov.b64 	%rd686, {%r629, %r628};
	shf.l.wrap.b32 	%r630, %r626, %r627, 30;
	shf.l.wrap.b32 	%r631, %r627, %r626, 30;
	mov.b64 	%rd687, {%r631, %r630};
	xor.b64  	%rd688, %rd686, %rd687;
	shf.l.wrap.b32 	%r632, %r626, %r627, 25;
	shf.l.wrap.b32 	%r633, %r627, %r626, 25;
	mov.b64 	%rd689, {%r633, %r632};
	xor.b64  	%rd690, %rd688, %rd689;
	and.b64  	%rd691, %rd672, %rd648;
	or.b64  	%rd692, %rd672, %rd648;
	and.b64  	%rd693, %rd692, %rd624;
	or.b64  	%rd694, %rd693, %rd691;
	add.s64 	%rd695, %rd694, %rd690;
	add.s64 	%rd696, %rd695, %rd684;
	add.s64 	%rd697, %rd9271, %rd613;
	xor.b64  	%rd698, %rd661, %rd637;
	and.b64  	%rd699, %rd685, %rd698;
	xor.b64  	%rd700, %rd699, %rd637;
	add.s64 	%rd701, %rd697, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd685;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 14;
	shf.r.wrap.b32 	%r637, %r634, %r635, 14;
	mov.b64 	%rd702, {%r637, %r636};
	shf.r.wrap.b32 	%r638, %r635, %r634, 18;
	shf.r.wrap.b32 	%r639, %r634, %r635, 18;
	mov.b64 	%rd703, {%r639, %r638};
	xor.b64  	%rd704, %rd702, %rd703;
	shf.l.wrap.b32 	%r640, %r634, %r635, 23;
	shf.l.wrap.b32 	%r641, %r635, %r634, 23;
	mov.b64 	%rd705, {%r641, %r640};
	xor.b64  	%rd706, %rd704, %rd705;
	add.s64 	%rd707, %rd701, %rd706;
	add.s64 	%rd708, %rd707, -2880145864133508542;
	add.s64 	%rd709, %rd708, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd696;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 28;
	shf.r.wrap.b32 	%r645, %r642, %r643, 28;
	mov.b64 	%rd710, {%r645, %r644};
	shf.l.wrap.b32 	%r646, %r642, %r643, 30;
	shf.l.wrap.b32 	%r647, %r643, %r642, 30;
	mov.b64 	%rd711, {%r647, %r646};
	xor.b64  	%rd712, %rd710, %rd711;
	shf.l.wrap.b32 	%r648, %r642, %r643, 25;
	shf.l.wrap.b32 	%r649, %r643, %r642, 25;
	mov.b64 	%rd713, {%r649, %r648};
	xor.b64  	%rd714, %rd712, %rd713;
	and.b64  	%rd715, %rd696, %rd672;
	or.b64  	%rd716, %rd696, %rd672;
	and.b64  	%rd717, %rd716, %rd648;
	or.b64  	%rd718, %rd717, %rd715;
	add.s64 	%rd719, %rd718, %rd714;
	add.s64 	%rd720, %rd719, %rd708;
	add.s64 	%rd721, %rd9272, %rd637;
	xor.b64  	%rd722, %rd685, %rd661;
	and.b64  	%rd723, %rd709, %rd722;
	xor.b64  	%rd724, %rd723, %rd661;
	add.s64 	%rd725, %rd721, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd709;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 14;
	shf.r.wrap.b32 	%r653, %r650, %r651, 14;
	mov.b64 	%rd726, {%r653, %r652};
	shf.r.wrap.b32 	%r654, %r651, %r650, 18;
	shf.r.wrap.b32 	%r655, %r650, %r651, 18;
	mov.b64 	%rd727, {%r655, %r654};
	xor.b64  	%rd728, %rd726, %rd727;
	shf.l.wrap.b32 	%r656, %r650, %r651, 23;
	shf.l.wrap.b32 	%r657, %r651, %r650, 23;
	mov.b64 	%rd729, {%r657, %r656};
	xor.b64  	%rd730, %rd728, %rd729;
	add.s64 	%rd731, %rd725, %rd730;
	add.s64 	%rd732, %rd731, 1334009975649890238;
	add.s64 	%rd733, %rd732, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r659}, %rd720;
	}
	shf.r.wrap.b32 	%r660, %r659, %r658, 28;
	shf.r.wrap.b32 	%r661, %r658, %r659, 28;
	mov.b64 	%rd734, {%r661, %r660};
	shf.l.wrap.b32 	%r662, %r658, %r659, 30;
	shf.l.wrap.b32 	%r663, %r659, %r658, 30;
	mov.b64 	%rd735, {%r663, %r662};
	xor.b64  	%rd736, %rd734, %rd735;
	shf.l.wrap.b32 	%r664, %r658, %r659, 25;
	shf.l.wrap.b32 	%r665, %r659, %r658, 25;
	mov.b64 	%rd737, {%r665, %r664};
	xor.b64  	%rd738, %rd736, %rd737;
	and.b64  	%rd739, %rd720, %rd696;
	or.b64  	%rd740, %rd720, %rd696;
	and.b64  	%rd741, %rd740, %rd672;
	or.b64  	%rd742, %rd741, %rd739;
	add.s64 	%rd743, %rd742, %rd738;
	add.s64 	%rd744, %rd743, %rd732;
	add.s64 	%rd745, %rd9273, %rd661;
	xor.b64  	%rd746, %rd709, %rd685;
	and.b64  	%rd747, %rd733, %rd746;
	xor.b64  	%rd748, %rd747, %rd685;
	add.s64 	%rd749, %rd745, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd733;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 14;
	shf.r.wrap.b32 	%r669, %r666, %r667, 14;
	mov.b64 	%rd750, {%r669, %r668};
	shf.r.wrap.b32 	%r670, %r667, %r666, 18;
	shf.r.wrap.b32 	%r671, %r666, %r667, 18;
	mov.b64 	%rd751, {%r671, %r670};
	xor.b64  	%rd752, %rd750, %rd751;
	shf.l.wrap.b32 	%r672, %r666, %r667, 23;
	shf.l.wrap.b32 	%r673, %r667, %r666, 23;
	mov.b64 	%rd753, {%r673, %r672};
	xor.b64  	%rd754, %rd752, %rd753;
	add.s64 	%rd755, %rd749, %rd754;
	add.s64 	%rd756, %rd755, 2608012711638119052;
	add.s64 	%rd757, %rd756, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd744;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 28;
	shf.r.wrap.b32 	%r677, %r674, %r675, 28;
	mov.b64 	%rd758, {%r677, %r676};
	shf.l.wrap.b32 	%r678, %r674, %r675, 30;
	shf.l.wrap.b32 	%r679, %r675, %r674, 30;
	mov.b64 	%rd759, {%r679, %r678};
	xor.b64  	%rd760, %rd758, %rd759;
	shf.l.wrap.b32 	%r680, %r674, %r675, 25;
	shf.l.wrap.b32 	%r681, %r675, %r674, 25;
	mov.b64 	%rd761, {%r681, %r680};
	xor.b64  	%rd762, %rd760, %rd761;
	and.b64  	%rd763, %rd744, %rd720;
	or.b64  	%rd764, %rd744, %rd720;
	and.b64  	%rd765, %rd764, %rd696;
	or.b64  	%rd766, %rd765, %rd763;
	add.s64 	%rd767, %rd766, %rd762;
	add.s64 	%rd768, %rd767, %rd756;
	add.s64 	%rd769, %rd9274, %rd685;
	xor.b64  	%rd770, %rd733, %rd709;
	and.b64  	%rd771, %rd757, %rd770;
	xor.b64  	%rd772, %rd771, %rd709;
	add.s64 	%rd773, %rd769, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd757;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 14;
	shf.r.wrap.b32 	%r685, %r682, %r683, 14;
	mov.b64 	%rd774, {%r685, %r684};
	shf.r.wrap.b32 	%r686, %r683, %r682, 18;
	shf.r.wrap.b32 	%r687, %r682, %r683, 18;
	mov.b64 	%rd775, {%r687, %r686};
	xor.b64  	%rd776, %rd774, %rd775;
	shf.l.wrap.b32 	%r688, %r682, %r683, 23;
	shf.l.wrap.b32 	%r689, %r683, %r682, 23;
	mov.b64 	%rd777, {%r689, %r688};
	xor.b64  	%rd778, %rd776, %rd777;
	add.s64 	%rd779, %rd773, %rd778;
	add.s64 	%rd780, %rd779, 6128411473006802146;
	add.s64 	%rd781, %rd780, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd768;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 28;
	shf.r.wrap.b32 	%r693, %r690, %r691, 28;
	mov.b64 	%rd782, {%r693, %r692};
	shf.l.wrap.b32 	%r694, %r690, %r691, 30;
	shf.l.wrap.b32 	%r695, %r691, %r690, 30;
	mov.b64 	%rd783, {%r695, %r694};
	xor.b64  	%rd784, %rd782, %rd783;
	shf.l.wrap.b32 	%r696, %r690, %r691, 25;
	shf.l.wrap.b32 	%r697, %r691, %r690, 25;
	mov.b64 	%rd785, {%r697, %r696};
	xor.b64  	%rd786, %rd784, %rd785;
	and.b64  	%rd787, %rd768, %rd744;
	or.b64  	%rd788, %rd768, %rd744;
	and.b64  	%rd789, %rd788, %rd720;
	or.b64  	%rd790, %rd789, %rd787;
	add.s64 	%rd791, %rd790, %rd786;
	add.s64 	%rd792, %rd791, %rd780;
	add.s64 	%rd793, %rd9275, %rd709;
	xor.b64  	%rd794, %rd757, %rd733;
	and.b64  	%rd795, %rd781, %rd794;
	xor.b64  	%rd796, %rd795, %rd733;
	add.s64 	%rd797, %rd793, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd781;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 14;
	shf.r.wrap.b32 	%r701, %r698, %r699, 14;
	mov.b64 	%rd798, {%r701, %r700};
	shf.r.wrap.b32 	%r702, %r699, %r698, 18;
	shf.r.wrap.b32 	%r703, %r698, %r699, 18;
	mov.b64 	%rd799, {%r703, %r702};
	xor.b64  	%rd800, %rd798, %rd799;
	shf.l.wrap.b32 	%r704, %r698, %r699, 23;
	shf.l.wrap.b32 	%r705, %r699, %r698, 23;
	mov.b64 	%rd801, {%r705, %r704};
	xor.b64  	%rd802, %rd800, %rd801;
	add.s64 	%rd803, %rd797, %rd802;
	add.s64 	%rd804, %rd803, 8268148722764581231;
	add.s64 	%rd805, %rd804, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r706,%dummy}, %rd792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r707}, %rd792;
	}
	shf.r.wrap.b32 	%r708, %r707, %r706, 28;
	shf.r.wrap.b32 	%r709, %r706, %r707, 28;
	mov.b64 	%rd806, {%r709, %r708};
	shf.l.wrap.b32 	%r710, %r706, %r707, 30;
	shf.l.wrap.b32 	%r711, %r707, %r706, 30;
	mov.b64 	%rd807, {%r711, %r710};
	xor.b64  	%rd808, %rd806, %rd807;
	shf.l.wrap.b32 	%r712, %r706, %r707, 25;
	shf.l.wrap.b32 	%r713, %r707, %r706, 25;
	mov.b64 	%rd809, {%r713, %r712};
	xor.b64  	%rd810, %rd808, %rd809;
	and.b64  	%rd811, %rd792, %rd768;
	or.b64  	%rd812, %rd792, %rd768;
	and.b64  	%rd813, %rd812, %rd744;
	or.b64  	%rd814, %rd813, %rd811;
	add.s64 	%rd815, %rd814, %rd810;
	add.s64 	%rd816, %rd815, %rd804;
	add.s64 	%rd817, %rd9276, %rd733;
	xor.b64  	%rd818, %rd781, %rd757;
	and.b64  	%rd819, %rd805, %rd818;
	xor.b64  	%rd820, %rd819, %rd757;
	add.s64 	%rd821, %rd817, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r715}, %rd805;
	}
	shf.r.wrap.b32 	%r716, %r715, %r714, 14;
	shf.r.wrap.b32 	%r717, %r714, %r715, 14;
	mov.b64 	%rd822, {%r717, %r716};
	shf.r.wrap.b32 	%r718, %r715, %r714, 18;
	shf.r.wrap.b32 	%r719, %r714, %r715, 18;
	mov.b64 	%rd823, {%r719, %r718};
	xor.b64  	%rd824, %rd822, %rd823;
	shf.l.wrap.b32 	%r720, %r714, %r715, 23;
	shf.l.wrap.b32 	%r721, %r715, %r714, 23;
	mov.b64 	%rd825, {%r721, %r720};
	xor.b64  	%rd826, %rd824, %rd825;
	add.s64 	%rd827, %rd821, %rd826;
	add.s64 	%rd828, %rd827, -9160688886553864527;
	add.s64 	%rd829, %rd828, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r723}, %rd816;
	}
	shf.r.wrap.b32 	%r724, %r723, %r722, 28;
	shf.r.wrap.b32 	%r725, %r722, %r723, 28;
	mov.b64 	%rd830, {%r725, %r724};
	shf.l.wrap.b32 	%r726, %r722, %r723, 30;
	shf.l.wrap.b32 	%r727, %r723, %r722, 30;
	mov.b64 	%rd831, {%r727, %r726};
	xor.b64  	%rd832, %rd830, %rd831;
	shf.l.wrap.b32 	%r728, %r722, %r723, 25;
	shf.l.wrap.b32 	%r729, %r723, %r722, 25;
	mov.b64 	%rd833, {%r729, %r728};
	xor.b64  	%rd834, %rd832, %rd833;
	and.b64  	%rd835, %rd816, %rd792;
	or.b64  	%rd836, %rd816, %rd792;
	and.b64  	%rd837, %rd836, %rd768;
	or.b64  	%rd838, %rd837, %rd835;
	add.s64 	%rd839, %rd838, %rd834;
	add.s64 	%rd840, %rd839, %rd828;
	add.s64 	%rd841, %rd9277, %rd757;
	xor.b64  	%rd842, %rd805, %rd781;
	and.b64  	%rd843, %rd829, %rd842;
	xor.b64  	%rd844, %rd843, %rd781;
	add.s64 	%rd845, %rd841, %rd844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd829;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 14;
	shf.r.wrap.b32 	%r733, %r730, %r731, 14;
	mov.b64 	%rd846, {%r733, %r732};
	shf.r.wrap.b32 	%r734, %r731, %r730, 18;
	shf.r.wrap.b32 	%r735, %r730, %r731, 18;
	mov.b64 	%rd847, {%r735, %r734};
	xor.b64  	%rd848, %rd846, %rd847;
	shf.l.wrap.b32 	%r736, %r730, %r731, 23;
	shf.l.wrap.b32 	%r737, %r731, %r730, 23;
	mov.b64 	%rd849, {%r737, %r736};
	xor.b64  	%rd850, %rd848, %rd849;
	add.s64 	%rd851, %rd845, %rd850;
	add.s64 	%rd852, %rd851, -7215885187991268811;
	add.s64 	%rd853, %rd852, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r738,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r739}, %rd840;
	}
	shf.r.wrap.b32 	%r740, %r739, %r738, 28;
	shf.r.wrap.b32 	%r741, %r738, %r739, 28;
	mov.b64 	%rd854, {%r741, %r740};
	shf.l.wrap.b32 	%r742, %r738, %r739, 30;
	shf.l.wrap.b32 	%r743, %r739, %r738, 30;
	mov.b64 	%rd855, {%r743, %r742};
	xor.b64  	%rd856, %rd854, %rd855;
	shf.l.wrap.b32 	%r744, %r738, %r739, 25;
	shf.l.wrap.b32 	%r745, %r739, %r738, 25;
	mov.b64 	%rd857, {%r745, %r744};
	xor.b64  	%rd858, %rd856, %rd857;
	and.b64  	%rd859, %rd840, %rd816;
	or.b64  	%rd860, %rd840, %rd816;
	and.b64  	%rd861, %rd860, %rd792;
	or.b64  	%rd862, %rd861, %rd859;
	add.s64 	%rd863, %rd862, %rd858;
	add.s64 	%rd864, %rd863, %rd852;
	add.s64 	%rd865, %rd9278, %rd781;
	xor.b64  	%rd866, %rd829, %rd805;
	and.b64  	%rd867, %rd853, %rd866;
	xor.b64  	%rd868, %rd867, %rd805;
	add.s64 	%rd869, %rd865, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r746,%dummy}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r747}, %rd853;
	}
	shf.r.wrap.b32 	%r748, %r747, %r746, 14;
	shf.r.wrap.b32 	%r749, %r746, %r747, 14;
	mov.b64 	%rd870, {%r749, %r748};
	shf.r.wrap.b32 	%r750, %r747, %r746, 18;
	shf.r.wrap.b32 	%r751, %r746, %r747, 18;
	mov.b64 	%rd871, {%r751, %r750};
	xor.b64  	%rd872, %rd870, %rd871;
	shf.l.wrap.b32 	%r752, %r746, %r747, 23;
	shf.l.wrap.b32 	%r753, %r747, %r746, 23;
	mov.b64 	%rd873, {%r753, %r752};
	xor.b64  	%rd874, %rd872, %rd873;
	add.s64 	%rd875, %rd869, %rd874;
	add.s64 	%rd876, %rd875, -4495734319001033068;
	add.s64 	%rd877, %rd876, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd864;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 28;
	shf.r.wrap.b32 	%r757, %r754, %r755, 28;
	mov.b64 	%rd878, {%r757, %r756};
	shf.l.wrap.b32 	%r758, %r754, %r755, 30;
	shf.l.wrap.b32 	%r759, %r755, %r754, 30;
	mov.b64 	%rd879, {%r759, %r758};
	xor.b64  	%rd880, %rd878, %rd879;
	shf.l.wrap.b32 	%r760, %r754, %r755, 25;
	shf.l.wrap.b32 	%r761, %r755, %r754, 25;
	mov.b64 	%rd881, {%r761, %r760};
	xor.b64  	%rd882, %rd880, %rd881;
	and.b64  	%rd883, %rd864, %rd840;
	or.b64  	%rd884, %rd864, %rd840;
	and.b64  	%rd885, %rd884, %rd816;
	or.b64  	%rd886, %rd885, %rd883;
	add.s64 	%rd887, %rd886, %rd882;
	add.s64 	%rd888, %rd887, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r762}, %rd9277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd9277;
	}
	shf.l.wrap.b32 	%r764, %r763, %r762, 3;
	shf.l.wrap.b32 	%r765, %r762, %r763, 3;
	mov.b64 	%rd889, {%r765, %r764};
	shf.r.wrap.b32 	%r766, %r762, %r763, 19;
	shf.r.wrap.b32 	%r767, %r763, %r762, 19;
	mov.b64 	%rd890, {%r767, %r766};
	xor.b64  	%rd891, %rd890, %rd889;
	shr.u64 	%rd892, %rd9277, 6;
	xor.b64  	%rd893, %rd891, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r768,%dummy}, %rd9264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r769}, %rd9264;
	}
	shf.r.wrap.b32 	%r770, %r769, %r768, 8;
	shf.r.wrap.b32 	%r771, %r768, %r769, 8;
	mov.b64 	%rd894, {%r771, %r770};
	shf.r.wrap.b32 	%r772, %r769, %r768, 1;
	shf.r.wrap.b32 	%r773, %r768, %r769, 1;
	mov.b64 	%rd895, {%r773, %r772};
	xor.b64  	%rd896, %rd895, %rd894;
	shr.u64 	%rd897, %rd9264, 7;
	xor.b64  	%rd898, %rd896, %rd897;
	add.s64 	%rd899, %rd898, %rd9263;
	add.s64 	%rd900, %rd899, %rd9272;
	add.s64 	%rd901, %rd900, %rd893;
	add.s64 	%rd902, %rd901, %rd805;
	xor.b64  	%rd903, %rd853, %rd829;
	and.b64  	%rd904, %rd877, %rd903;
	xor.b64  	%rd905, %rd904, %rd829;
	add.s64 	%rd906, %rd902, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd877;
	}
	shf.r.wrap.b32 	%r776, %r775, %r774, 14;
	shf.r.wrap.b32 	%r777, %r774, %r775, 14;
	mov.b64 	%rd907, {%r777, %r776};
	shf.r.wrap.b32 	%r778, %r775, %r774, 18;
	shf.r.wrap.b32 	%r779, %r774, %r775, 18;
	mov.b64 	%rd908, {%r779, %r778};
	xor.b64  	%rd909, %rd907, %rd908;
	shf.l.wrap.b32 	%r780, %r774, %r775, 23;
	shf.l.wrap.b32 	%r781, %r775, %r774, 23;
	mov.b64 	%rd910, {%r781, %r780};
	xor.b64  	%rd911, %rd909, %rd910;
	add.s64 	%rd912, %rd906, %rd911;
	add.s64 	%rd913, %rd912, -1973867731355612462;
	add.s64 	%rd914, %rd913, %rd816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r783}, %rd888;
	}
	shf.r.wrap.b32 	%r784, %r783, %r782, 28;
	shf.r.wrap.b32 	%r785, %r782, %r783, 28;
	mov.b64 	%rd915, {%r785, %r784};
	shf.l.wrap.b32 	%r786, %r782, %r783, 30;
	shf.l.wrap.b32 	%r787, %r783, %r782, 30;
	mov.b64 	%rd916, {%r787, %r786};
	xor.b64  	%rd917, %rd915, %rd916;
	shf.l.wrap.b32 	%r788, %r782, %r783, 25;
	shf.l.wrap.b32 	%r789, %r783, %r782, 25;
	mov.b64 	%rd918, {%r789, %r788};
	xor.b64  	%rd919, %rd917, %rd918;
	and.b64  	%rd920, %rd888, %rd864;
	or.b64  	%rd921, %rd888, %rd864;
	and.b64  	%rd922, %rd921, %rd840;
	or.b64  	%rd923, %rd922, %rd920;
	add.s64 	%rd924, %rd923, %rd919;
	add.s64 	%rd925, %rd924, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd9278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r791,%dummy}, %rd9278;
	}
	shf.l.wrap.b32 	%r792, %r791, %r790, 3;
	shf.l.wrap.b32 	%r793, %r790, %r791, 3;
	mov.b64 	%rd926, {%r793, %r792};
	shf.r.wrap.b32 	%r794, %r790, %r791, 19;
	shf.r.wrap.b32 	%r795, %r791, %r790, 19;
	mov.b64 	%rd927, {%r795, %r794};
	xor.b64  	%rd928, %rd927, %rd926;
	shr.u64 	%rd929, %rd9278, 6;
	xor.b64  	%rd930, %rd928, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd9265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd9265;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 8;
	shf.r.wrap.b32 	%r799, %r796, %r797, 8;
	mov.b64 	%rd931, {%r799, %r798};
	shf.r.wrap.b32 	%r800, %r797, %r796, 1;
	shf.r.wrap.b32 	%r801, %r796, %r797, 1;
	mov.b64 	%rd932, {%r801, %r800};
	xor.b64  	%rd933, %rd932, %rd931;
	shr.u64 	%rd934, %rd9265, 7;
	xor.b64  	%rd935, %rd933, %rd934;
	add.s64 	%rd936, %rd935, %rd9264;
	add.s64 	%rd937, %rd936, %rd9273;
	add.s64 	%rd938, %rd937, %rd930;
	add.s64 	%rd939, %rd938, %rd829;
	xor.b64  	%rd940, %rd877, %rd853;
	and.b64  	%rd941, %rd914, %rd940;
	xor.b64  	%rd942, %rd941, %rd853;
	add.s64 	%rd943, %rd939, %rd942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd914;
	}
	shf.r.wrap.b32 	%r804, %r803, %r802, 14;
	shf.r.wrap.b32 	%r805, %r802, %r803, 14;
	mov.b64 	%rd944, {%r805, %r804};
	shf.r.wrap.b32 	%r806, %r803, %r802, 18;
	shf.r.wrap.b32 	%r807, %r802, %r803, 18;
	mov.b64 	%rd945, {%r807, %r806};
	xor.b64  	%rd946, %rd944, %rd945;
	shf.l.wrap.b32 	%r808, %r802, %r803, 23;
	shf.l.wrap.b32 	%r809, %r803, %r802, 23;
	mov.b64 	%rd947, {%r809, %r808};
	xor.b64  	%rd948, %rd946, %rd947;
	add.s64 	%rd949, %rd943, %rd948;
	add.s64 	%rd950, %rd949, -1171420211273849373;
	add.s64 	%rd951, %rd950, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r811}, %rd925;
	}
	shf.r.wrap.b32 	%r812, %r811, %r810, 28;
	shf.r.wrap.b32 	%r813, %r810, %r811, 28;
	mov.b64 	%rd952, {%r813, %r812};
	shf.l.wrap.b32 	%r814, %r810, %r811, 30;
	shf.l.wrap.b32 	%r815, %r811, %r810, 30;
	mov.b64 	%rd953, {%r815, %r814};
	xor.b64  	%rd954, %rd952, %rd953;
	shf.l.wrap.b32 	%r816, %r810, %r811, 25;
	shf.l.wrap.b32 	%r817, %r811, %r810, 25;
	mov.b64 	%rd955, {%r817, %r816};
	xor.b64  	%rd956, %rd954, %rd955;
	and.b64  	%rd957, %rd925, %rd888;
	or.b64  	%rd958, %rd925, %rd888;
	and.b64  	%rd959, %rd958, %rd864;
	or.b64  	%rd960, %rd959, %rd957;
	add.s64 	%rd961, %rd960, %rd956;
	add.s64 	%rd962, %rd961, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r818,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r819}, %rd901;
	}
	shf.r.wrap.b32 	%r820, %r819, %r818, 19;
	shf.r.wrap.b32 	%r821, %r818, %r819, 19;
	mov.b64 	%rd963, {%r821, %r820};
	shf.l.wrap.b32 	%r822, %r818, %r819, 3;
	shf.l.wrap.b32 	%r823, %r819, %r818, 3;
	mov.b64 	%rd964, {%r823, %r822};
	xor.b64  	%rd965, %rd963, %rd964;
	shr.u64 	%rd966, %rd901, 6;
	xor.b64  	%rd967, %rd965, %rd966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r824,%dummy}, %rd9266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r825}, %rd9266;
	}
	shf.r.wrap.b32 	%r826, %r825, %r824, 8;
	shf.r.wrap.b32 	%r827, %r824, %r825, 8;
	mov.b64 	%rd968, {%r827, %r826};
	shf.r.wrap.b32 	%r828, %r825, %r824, 1;
	shf.r.wrap.b32 	%r829, %r824, %r825, 1;
	mov.b64 	%rd969, {%r829, %r828};
	xor.b64  	%rd970, %rd969, %rd968;
	shr.u64 	%rd971, %rd9266, 7;
	xor.b64  	%rd972, %rd970, %rd971;
	add.s64 	%rd973, %rd972, %rd9265;
	add.s64 	%rd974, %rd973, %rd9274;
	add.s64 	%rd975, %rd974, %rd967;
	add.s64 	%rd976, %rd975, %rd853;
	xor.b64  	%rd977, %rd914, %rd877;
	and.b64  	%rd978, %rd951, %rd977;
	xor.b64  	%rd979, %rd978, %rd877;
	add.s64 	%rd980, %rd976, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd951;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 14;
	shf.r.wrap.b32 	%r833, %r830, %r831, 14;
	mov.b64 	%rd981, {%r833, %r832};
	shf.r.wrap.b32 	%r834, %r831, %r830, 18;
	shf.r.wrap.b32 	%r835, %r830, %r831, 18;
	mov.b64 	%rd982, {%r835, %r834};
	xor.b64  	%rd983, %rd981, %rd982;
	shf.l.wrap.b32 	%r836, %r830, %r831, 23;
	shf.l.wrap.b32 	%r837, %r831, %r830, 23;
	mov.b64 	%rd984, {%r837, %r836};
	xor.b64  	%rd985, %rd983, %rd984;
	add.s64 	%rd986, %rd980, %rd985;
	add.s64 	%rd987, %rd986, 1135362057144423861;
	add.s64 	%rd988, %rd987, %rd864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd962;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 28;
	shf.r.wrap.b32 	%r841, %r838, %r839, 28;
	mov.b64 	%rd989, {%r841, %r840};
	shf.l.wrap.b32 	%r842, %r838, %r839, 30;
	shf.l.wrap.b32 	%r843, %r839, %r838, 30;
	mov.b64 	%rd990, {%r843, %r842};
	xor.b64  	%rd991, %rd989, %rd990;
	shf.l.wrap.b32 	%r844, %r838, %r839, 25;
	shf.l.wrap.b32 	%r845, %r839, %r838, 25;
	mov.b64 	%rd992, {%r845, %r844};
	xor.b64  	%rd993, %rd991, %rd992;
	and.b64  	%rd994, %rd962, %rd925;
	or.b64  	%rd995, %rd962, %rd925;
	and.b64  	%rd996, %rd995, %rd888;
	or.b64  	%rd997, %rd996, %rd994;
	add.s64 	%rd998, %rd997, %rd993;
	add.s64 	%rd999, %rd998, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd938;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 19;
	shf.r.wrap.b32 	%r849, %r846, %r847, 19;
	mov.b64 	%rd1000, {%r849, %r848};
	shf.l.wrap.b32 	%r850, %r846, %r847, 3;
	shf.l.wrap.b32 	%r851, %r847, %r846, 3;
	mov.b64 	%rd1001, {%r851, %r850};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	shr.u64 	%rd1003, %rd938, 6;
	xor.b64  	%rd1004, %rd1002, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd9267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd9267;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 8;
	shf.r.wrap.b32 	%r855, %r852, %r853, 8;
	mov.b64 	%rd1005, {%r855, %r854};
	shf.r.wrap.b32 	%r856, %r853, %r852, 1;
	shf.r.wrap.b32 	%r857, %r852, %r853, 1;
	mov.b64 	%rd1006, {%r857, %r856};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shr.u64 	%rd1008, %rd9267, 7;
	xor.b64  	%rd1009, %rd1007, %rd1008;
	add.s64 	%rd1010, %rd1009, %rd9266;
	add.s64 	%rd1011, %rd1010, %rd9275;
	add.s64 	%rd1012, %rd1011, %rd1004;
	add.s64 	%rd1013, %rd1012, %rd877;
	xor.b64  	%rd1014, %rd951, %rd914;
	and.b64  	%rd1015, %rd988, %rd1014;
	xor.b64  	%rd1016, %rd1015, %rd914;
	add.s64 	%rd1017, %rd1013, %rd1016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r859}, %rd988;
	}
	shf.r.wrap.b32 	%r860, %r859, %r858, 14;
	shf.r.wrap.b32 	%r861, %r858, %r859, 14;
	mov.b64 	%rd1018, {%r861, %r860};
	shf.r.wrap.b32 	%r862, %r859, %r858, 18;
	shf.r.wrap.b32 	%r863, %r858, %r859, 18;
	mov.b64 	%rd1019, {%r863, %r862};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	shf.l.wrap.b32 	%r864, %r858, %r859, 23;
	shf.l.wrap.b32 	%r865, %r859, %r858, 23;
	mov.b64 	%rd1021, {%r865, %r864};
	xor.b64  	%rd1022, %rd1020, %rd1021;
	add.s64 	%rd1023, %rd1017, %rd1022;
	add.s64 	%rd1024, %rd1023, 2597628984639134821;
	add.s64 	%rd1025, %rd1024, %rd888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r866,%dummy}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r867}, %rd999;
	}
	shf.r.wrap.b32 	%r868, %r867, %r866, 28;
	shf.r.wrap.b32 	%r869, %r866, %r867, 28;
	mov.b64 	%rd1026, {%r869, %r868};
	shf.l.wrap.b32 	%r870, %r866, %r867, 30;
	shf.l.wrap.b32 	%r871, %r867, %r866, 30;
	mov.b64 	%rd1027, {%r871, %r870};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	shf.l.wrap.b32 	%r872, %r866, %r867, 25;
	shf.l.wrap.b32 	%r873, %r867, %r866, 25;
	mov.b64 	%rd1029, {%r873, %r872};
	xor.b64  	%rd1030, %rd1028, %rd1029;
	and.b64  	%rd1031, %rd999, %rd962;
	or.b64  	%rd1032, %rd999, %rd962;
	and.b64  	%rd1033, %rd1032, %rd925;
	or.b64  	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd1034, %rd1030;
	add.s64 	%rd1036, %rd1035, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r874,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r875}, %rd975;
	}
	shf.r.wrap.b32 	%r876, %r875, %r874, 19;
	shf.r.wrap.b32 	%r877, %r874, %r875, 19;
	mov.b64 	%rd1037, {%r877, %r876};
	shf.l.wrap.b32 	%r878, %r874, %r875, 3;
	shf.l.wrap.b32 	%r879, %r875, %r874, 3;
	mov.b64 	%rd1038, {%r879, %r878};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	shr.u64 	%rd1040, %rd975, 6;
	xor.b64  	%rd1041, %rd1039, %rd1040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r880,%dummy}, %rd9268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r881}, %rd9268;
	}
	shf.r.wrap.b32 	%r882, %r881, %r880, 8;
	shf.r.wrap.b32 	%r883, %r880, %r881, 8;
	mov.b64 	%rd1042, {%r883, %r882};
	shf.r.wrap.b32 	%r884, %r881, %r880, 1;
	shf.r.wrap.b32 	%r885, %r880, %r881, 1;
	mov.b64 	%rd1043, {%r885, %r884};
	xor.b64  	%rd1044, %rd1043, %rd1042;
	shr.u64 	%rd1045, %rd9268, 7;
	xor.b64  	%rd1046, %rd1044, %rd1045;
	add.s64 	%rd1047, %rd1046, %rd9267;
	add.s64 	%rd1048, %rd1047, %rd9276;
	add.s64 	%rd1049, %rd1048, %rd1041;
	add.s64 	%rd1050, %rd1049, %rd914;
	xor.b64  	%rd1051, %rd988, %rd951;
	and.b64  	%rd1052, %rd1025, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd951;
	add.s64 	%rd1054, %rd1050, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd1025;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 14;
	shf.r.wrap.b32 	%r889, %r886, %r887, 14;
	mov.b64 	%rd1055, {%r889, %r888};
	shf.r.wrap.b32 	%r890, %r887, %r886, 18;
	shf.r.wrap.b32 	%r891, %r886, %r887, 18;
	mov.b64 	%rd1056, {%r891, %r890};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	shf.l.wrap.b32 	%r892, %r886, %r887, 23;
	shf.l.wrap.b32 	%r893, %r887, %r886, 23;
	mov.b64 	%rd1058, {%r893, %r892};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	add.s64 	%rd1060, %rd1054, %rd1059;
	add.s64 	%rd1061, %rd1060, 3308224258029322869;
	add.s64 	%rd1062, %rd1061, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd1036;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 28;
	shf.r.wrap.b32 	%r897, %r894, %r895, 28;
	mov.b64 	%rd1063, {%r897, %r896};
	shf.l.wrap.b32 	%r898, %r894, %r895, 30;
	shf.l.wrap.b32 	%r899, %r895, %r894, 30;
	mov.b64 	%rd1064, {%r899, %r898};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	shf.l.wrap.b32 	%r900, %r894, %r895, 25;
	shf.l.wrap.b32 	%r901, %r895, %r894, 25;
	mov.b64 	%rd1066, {%r901, %r900};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	and.b64  	%rd1068, %rd1036, %rd999;
	or.b64  	%rd1069, %rd1036, %rd999;
	and.b64  	%rd1070, %rd1069, %rd962;
	or.b64  	%rd1071, %rd1070, %rd1068;
	add.s64 	%rd1072, %rd1071, %rd1067;
	add.s64 	%rd1073, %rd1072, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1012;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 19;
	shf.r.wrap.b32 	%r905, %r902, %r903, 19;
	mov.b64 	%rd1074, {%r905, %r904};
	shf.l.wrap.b32 	%r906, %r902, %r903, 3;
	shf.l.wrap.b32 	%r907, %r903, %r902, 3;
	mov.b64 	%rd1075, {%r907, %r906};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	shr.u64 	%rd1077, %rd1012, 6;
	xor.b64  	%rd1078, %rd1076, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd9269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd9269;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 8;
	shf.r.wrap.b32 	%r911, %r908, %r909, 8;
	mov.b64 	%rd1079, {%r911, %r910};
	shf.r.wrap.b32 	%r912, %r909, %r908, 1;
	shf.r.wrap.b32 	%r913, %r908, %r909, 1;
	mov.b64 	%rd1080, {%r913, %r912};
	xor.b64  	%rd1081, %rd1080, %rd1079;
	shr.u64 	%rd1082, %rd9269, 7;
	xor.b64  	%rd1083, %rd1081, %rd1082;
	add.s64 	%rd1084, %rd1083, %rd9268;
	add.s64 	%rd1085, %rd1084, %rd9277;
	add.s64 	%rd1086, %rd1085, %rd1078;
	add.s64 	%rd1087, %rd1086, %rd951;
	xor.b64  	%rd1088, %rd1025, %rd988;
	and.b64  	%rd1089, %rd1062, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd988;
	add.s64 	%rd1091, %rd1087, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r914,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r915}, %rd1062;
	}
	shf.r.wrap.b32 	%r916, %r915, %r914, 14;
	shf.r.wrap.b32 	%r917, %r914, %r915, 14;
	mov.b64 	%rd1092, {%r917, %r916};
	shf.r.wrap.b32 	%r918, %r915, %r914, 18;
	shf.r.wrap.b32 	%r919, %r914, %r915, 18;
	mov.b64 	%rd1093, {%r919, %r918};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	shf.l.wrap.b32 	%r920, %r914, %r915, 23;
	shf.l.wrap.b32 	%r921, %r915, %r914, 23;
	mov.b64 	%rd1095, {%r921, %r920};
	xor.b64  	%rd1096, %rd1094, %rd1095;
	add.s64 	%rd1097, %rd1091, %rd1096;
	add.s64 	%rd1098, %rd1097, 5365058923640841347;
	add.s64 	%rd1099, %rd1098, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r922,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r923}, %rd1073;
	}
	shf.r.wrap.b32 	%r924, %r923, %r922, 28;
	shf.r.wrap.b32 	%r925, %r922, %r923, 28;
	mov.b64 	%rd1100, {%r925, %r924};
	shf.l.wrap.b32 	%r926, %r922, %r923, 30;
	shf.l.wrap.b32 	%r927, %r923, %r922, 30;
	mov.b64 	%rd1101, {%r927, %r926};
	xor.b64  	%rd1102, %rd1100, %rd1101;
	shf.l.wrap.b32 	%r928, %r922, %r923, 25;
	shf.l.wrap.b32 	%r929, %r923, %r922, 25;
	mov.b64 	%rd1103, {%r929, %r928};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	and.b64  	%rd1105, %rd1073, %rd1036;
	or.b64  	%rd1106, %rd1073, %rd1036;
	and.b64  	%rd1107, %rd1106, %rd999;
	or.b64  	%rd1108, %rd1107, %rd1105;
	add.s64 	%rd1109, %rd1108, %rd1104;
	add.s64 	%rd1110, %rd1109, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd1049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r931}, %rd1049;
	}
	shf.r.wrap.b32 	%r932, %r931, %r930, 19;
	shf.r.wrap.b32 	%r933, %r930, %r931, 19;
	mov.b64 	%rd1111, {%r933, %r932};
	shf.l.wrap.b32 	%r934, %r930, %r931, 3;
	shf.l.wrap.b32 	%r935, %r931, %r930, 3;
	mov.b64 	%rd1112, {%r935, %r934};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	shr.u64 	%rd1114, %rd1049, 6;
	xor.b64  	%rd1115, %rd1113, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd9270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd9270;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 8;
	shf.r.wrap.b32 	%r939, %r936, %r937, 8;
	mov.b64 	%rd1116, {%r939, %r938};
	shf.r.wrap.b32 	%r940, %r937, %r936, 1;
	shf.r.wrap.b32 	%r941, %r936, %r937, 1;
	mov.b64 	%rd1117, {%r941, %r940};
	xor.b64  	%rd1118, %rd1117, %rd1116;
	shr.u64 	%rd1119, %rd9270, 7;
	xor.b64  	%rd1120, %rd1118, %rd1119;
	add.s64 	%rd1121, %rd1120, %rd9269;
	add.s64 	%rd1122, %rd1121, %rd9278;
	add.s64 	%rd1123, %rd1122, %rd1115;
	add.s64 	%rd1124, %rd1123, %rd988;
	xor.b64  	%rd1125, %rd1062, %rd1025;
	and.b64  	%rd1126, %rd1099, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1025;
	add.s64 	%rd1128, %rd1124, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1099;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 14;
	shf.r.wrap.b32 	%r945, %r942, %r943, 14;
	mov.b64 	%rd1129, {%r945, %r944};
	shf.r.wrap.b32 	%r946, %r943, %r942, 18;
	shf.r.wrap.b32 	%r947, %r942, %r943, 18;
	mov.b64 	%rd1130, {%r947, %r946};
	xor.b64  	%rd1131, %rd1129, %rd1130;
	shf.l.wrap.b32 	%r948, %r942, %r943, 23;
	shf.l.wrap.b32 	%r949, %r943, %r942, 23;
	mov.b64 	%rd1132, {%r949, %r948};
	xor.b64  	%rd1133, %rd1131, %rd1132;
	add.s64 	%rd1134, %rd1128, %rd1133;
	add.s64 	%rd1135, %rd1134, 6679025012923562964;
	add.s64 	%rd1136, %rd1135, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1110;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 28;
	shf.r.wrap.b32 	%r953, %r950, %r951, 28;
	mov.b64 	%rd1137, {%r953, %r952};
	shf.l.wrap.b32 	%r954, %r950, %r951, 30;
	shf.l.wrap.b32 	%r955, %r951, %r950, 30;
	mov.b64 	%rd1138, {%r955, %r954};
	xor.b64  	%rd1139, %rd1137, %rd1138;
	shf.l.wrap.b32 	%r956, %r950, %r951, 25;
	shf.l.wrap.b32 	%r957, %r951, %r950, 25;
	mov.b64 	%rd1140, {%r957, %r956};
	xor.b64  	%rd1141, %rd1139, %rd1140;
	and.b64  	%rd1142, %rd1110, %rd1073;
	or.b64  	%rd1143, %rd1110, %rd1073;
	and.b64  	%rd1144, %rd1143, %rd1036;
	or.b64  	%rd1145, %rd1144, %rd1142;
	add.s64 	%rd1146, %rd1145, %rd1141;
	add.s64 	%rd1147, %rd1146, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd1086;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 19;
	shf.r.wrap.b32 	%r961, %r958, %r959, 19;
	mov.b64 	%rd1148, {%r961, %r960};
	shf.l.wrap.b32 	%r962, %r958, %r959, 3;
	shf.l.wrap.b32 	%r963, %r959, %r958, 3;
	mov.b64 	%rd1149, {%r963, %r962};
	xor.b64  	%rd1150, %rd1148, %rd1149;
	shr.u64 	%rd1151, %rd1086, 6;
	xor.b64  	%rd1152, %rd1150, %rd1151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd9271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd9271;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 8;
	shf.r.wrap.b32 	%r967, %r964, %r965, 8;
	mov.b64 	%rd1153, {%r967, %r966};
	shf.r.wrap.b32 	%r968, %r965, %r964, 1;
	shf.r.wrap.b32 	%r969, %r964, %r965, 1;
	mov.b64 	%rd1154, {%r969, %r968};
	xor.b64  	%rd1155, %rd1154, %rd1153;
	shr.u64 	%rd1156, %rd9271, 7;
	xor.b64  	%rd1157, %rd1155, %rd1156;
	add.s64 	%rd1158, %rd1157, %rd9270;
	add.s64 	%rd1159, %rd1158, %rd901;
	add.s64 	%rd1160, %rd1159, %rd1152;
	add.s64 	%rd1161, %rd1160, %rd1025;
	xor.b64  	%rd1162, %rd1099, %rd1062;
	and.b64  	%rd1163, %rd1136, %rd1162;
	xor.b64  	%rd1164, %rd1163, %rd1062;
	add.s64 	%rd1165, %rd1161, %rd1164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r970,%dummy}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r971}, %rd1136;
	}
	shf.r.wrap.b32 	%r972, %r971, %r970, 14;
	shf.r.wrap.b32 	%r973, %r970, %r971, 14;
	mov.b64 	%rd1166, {%r973, %r972};
	shf.r.wrap.b32 	%r974, %r971, %r970, 18;
	shf.r.wrap.b32 	%r975, %r970, %r971, 18;
	mov.b64 	%rd1167, {%r975, %r974};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	shf.l.wrap.b32 	%r976, %r970, %r971, 23;
	shf.l.wrap.b32 	%r977, %r971, %r970, 23;
	mov.b64 	%rd1169, {%r977, %r976};
	xor.b64  	%rd1170, %rd1168, %rd1169;
	add.s64 	%rd1171, %rd1165, %rd1170;
	add.s64 	%rd1172, %rd1171, 8573033837759648693;
	add.s64 	%rd1173, %rd1172, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r979}, %rd1147;
	}
	shf.r.wrap.b32 	%r980, %r979, %r978, 28;
	shf.r.wrap.b32 	%r981, %r978, %r979, 28;
	mov.b64 	%rd1174, {%r981, %r980};
	shf.l.wrap.b32 	%r982, %r978, %r979, 30;
	shf.l.wrap.b32 	%r983, %r979, %r978, 30;
	mov.b64 	%rd1175, {%r983, %r982};
	xor.b64  	%rd1176, %rd1174, %rd1175;
	shf.l.wrap.b32 	%r984, %r978, %r979, 25;
	shf.l.wrap.b32 	%r985, %r979, %r978, 25;
	mov.b64 	%rd1177, {%r985, %r984};
	xor.b64  	%rd1178, %rd1176, %rd1177;
	and.b64  	%rd1179, %rd1147, %rd1110;
	or.b64  	%rd1180, %rd1147, %rd1110;
	and.b64  	%rd1181, %rd1180, %rd1073;
	or.b64  	%rd1182, %rd1181, %rd1179;
	add.s64 	%rd1183, %rd1182, %rd1178;
	add.s64 	%rd1184, %rd1183, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r986,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r987}, %rd1123;
	}
	shf.r.wrap.b32 	%r988, %r987, %r986, 19;
	shf.r.wrap.b32 	%r989, %r986, %r987, 19;
	mov.b64 	%rd1185, {%r989, %r988};
	shf.l.wrap.b32 	%r990, %r986, %r987, 3;
	shf.l.wrap.b32 	%r991, %r987, %r986, 3;
	mov.b64 	%rd1186, {%r991, %r990};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	shr.u64 	%rd1188, %rd1123, 6;
	xor.b64  	%rd1189, %rd1187, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r992,%dummy}, %rd9272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r993}, %rd9272;
	}
	shf.r.wrap.b32 	%r994, %r993, %r992, 8;
	shf.r.wrap.b32 	%r995, %r992, %r993, 8;
	mov.b64 	%rd1190, {%r995, %r994};
	shf.r.wrap.b32 	%r996, %r993, %r992, 1;
	shf.r.wrap.b32 	%r997, %r992, %r993, 1;
	mov.b64 	%rd1191, {%r997, %r996};
	xor.b64  	%rd1192, %rd1191, %rd1190;
	shr.u64 	%rd1193, %rd9272, 7;
	xor.b64  	%rd1194, %rd1192, %rd1193;
	add.s64 	%rd1195, %rd1194, %rd9271;
	add.s64 	%rd1196, %rd1195, %rd938;
	add.s64 	%rd1197, %rd1196, %rd1189;
	add.s64 	%rd1198, %rd1197, %rd1062;
	xor.b64  	%rd1199, %rd1136, %rd1099;
	and.b64  	%rd1200, %rd1173, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1099;
	add.s64 	%rd1202, %rd1198, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd1173;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 14;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 14;
	mov.b64 	%rd1203, {%r1001, %r1000};
	shf.r.wrap.b32 	%r1002, %r999, %r998, 18;
	shf.r.wrap.b32 	%r1003, %r998, %r999, 18;
	mov.b64 	%rd1204, {%r1003, %r1002};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	shf.l.wrap.b32 	%r1004, %r998, %r999, 23;
	shf.l.wrap.b32 	%r1005, %r999, %r998, 23;
	mov.b64 	%rd1206, {%r1005, %r1004};
	xor.b64  	%rd1207, %rd1205, %rd1206;
	add.s64 	%rd1208, %rd1202, %rd1207;
	add.s64 	%rd1209, %rd1208, -7476448914759557205;
	add.s64 	%rd1210, %rd1209, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd1184;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 28;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 28;
	mov.b64 	%rd1211, {%r1009, %r1008};
	shf.l.wrap.b32 	%r1010, %r1006, %r1007, 30;
	shf.l.wrap.b32 	%r1011, %r1007, %r1006, 30;
	mov.b64 	%rd1212, {%r1011, %r1010};
	xor.b64  	%rd1213, %rd1211, %rd1212;
	shf.l.wrap.b32 	%r1012, %r1006, %r1007, 25;
	shf.l.wrap.b32 	%r1013, %r1007, %r1006, 25;
	mov.b64 	%rd1214, {%r1013, %r1012};
	xor.b64  	%rd1215, %rd1213, %rd1214;
	and.b64  	%rd1216, %rd1184, %rd1147;
	or.b64  	%rd1217, %rd1184, %rd1147;
	and.b64  	%rd1218, %rd1217, %rd1110;
	or.b64  	%rd1219, %rd1218, %rd1216;
	add.s64 	%rd1220, %rd1219, %rd1215;
	add.s64 	%rd1221, %rd1220, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd1160;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 19;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 19;
	mov.b64 	%rd1222, {%r1017, %r1016};
	shf.l.wrap.b32 	%r1018, %r1014, %r1015, 3;
	shf.l.wrap.b32 	%r1019, %r1015, %r1014, 3;
	mov.b64 	%rd1223, {%r1019, %r1018};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	shr.u64 	%rd1225, %rd1160, 6;
	xor.b64  	%rd1226, %rd1224, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1020,%dummy}, %rd9273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd9273;
	}
	shf.r.wrap.b32 	%r1022, %r1021, %r1020, 8;
	shf.r.wrap.b32 	%r1023, %r1020, %r1021, 8;
	mov.b64 	%rd1227, {%r1023, %r1022};
	shf.r.wrap.b32 	%r1024, %r1021, %r1020, 1;
	shf.r.wrap.b32 	%r1025, %r1020, %r1021, 1;
	mov.b64 	%rd1228, {%r1025, %r1024};
	xor.b64  	%rd1229, %rd1228, %rd1227;
	shr.u64 	%rd1230, %rd9273, 7;
	xor.b64  	%rd1231, %rd1229, %rd1230;
	add.s64 	%rd1232, %rd1231, %rd9272;
	add.s64 	%rd1233, %rd1232, %rd975;
	add.s64 	%rd1234, %rd1233, %rd1226;
	add.s64 	%rd1235, %rd1234, %rd1099;
	xor.b64  	%rd1236, %rd1173, %rd1136;
	and.b64  	%rd1237, %rd1210, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1136;
	add.s64 	%rd1239, %rd1235, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1026,%dummy}, %rd1210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1027}, %rd1210;
	}
	shf.r.wrap.b32 	%r1028, %r1027, %r1026, 14;
	shf.r.wrap.b32 	%r1029, %r1026, %r1027, 14;
	mov.b64 	%rd1240, {%r1029, %r1028};
	shf.r.wrap.b32 	%r1030, %r1027, %r1026, 18;
	shf.r.wrap.b32 	%r1031, %r1026, %r1027, 18;
	mov.b64 	%rd1241, {%r1031, %r1030};
	xor.b64  	%rd1242, %rd1240, %rd1241;
	shf.l.wrap.b32 	%r1032, %r1026, %r1027, 23;
	shf.l.wrap.b32 	%r1033, %r1027, %r1026, 23;
	mov.b64 	%rd1243, {%r1033, %r1032};
	xor.b64  	%rd1244, %rd1242, %rd1243;
	add.s64 	%rd1245, %rd1239, %rd1244;
	add.s64 	%rd1246, %rd1245, -6327057829258317296;
	add.s64 	%rd1247, %rd1246, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1035}, %rd1221;
	}
	shf.r.wrap.b32 	%r1036, %r1035, %r1034, 28;
	shf.r.wrap.b32 	%r1037, %r1034, %r1035, 28;
	mov.b64 	%rd1248, {%r1037, %r1036};
	shf.l.wrap.b32 	%r1038, %r1034, %r1035, 30;
	shf.l.wrap.b32 	%r1039, %r1035, %r1034, 30;
	mov.b64 	%rd1249, {%r1039, %r1038};
	xor.b64  	%rd1250, %rd1248, %rd1249;
	shf.l.wrap.b32 	%r1040, %r1034, %r1035, 25;
	shf.l.wrap.b32 	%r1041, %r1035, %r1034, 25;
	mov.b64 	%rd1251, {%r1041, %r1040};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	and.b64  	%rd1253, %rd1221, %rd1184;
	or.b64  	%rd1254, %rd1221, %rd1184;
	and.b64  	%rd1255, %rd1254, %rd1147;
	or.b64  	%rd1256, %rd1255, %rd1253;
	add.s64 	%rd1257, %rd1256, %rd1252;
	add.s64 	%rd1258, %rd1257, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1042,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1043}, %rd1197;
	}
	shf.r.wrap.b32 	%r1044, %r1043, %r1042, 19;
	shf.r.wrap.b32 	%r1045, %r1042, %r1043, 19;
	mov.b64 	%rd1259, {%r1045, %r1044};
	shf.l.wrap.b32 	%r1046, %r1042, %r1043, 3;
	shf.l.wrap.b32 	%r1047, %r1043, %r1042, 3;
	mov.b64 	%rd1260, {%r1047, %r1046};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	shr.u64 	%rd1262, %rd1197, 6;
	xor.b64  	%rd1263, %rd1261, %rd1262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1048,%dummy}, %rd9274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1049}, %rd9274;
	}
	shf.r.wrap.b32 	%r1050, %r1049, %r1048, 8;
	shf.r.wrap.b32 	%r1051, %r1048, %r1049, 8;
	mov.b64 	%rd1264, {%r1051, %r1050};
	shf.r.wrap.b32 	%r1052, %r1049, %r1048, 1;
	shf.r.wrap.b32 	%r1053, %r1048, %r1049, 1;
	mov.b64 	%rd1265, {%r1053, %r1052};
	xor.b64  	%rd1266, %rd1265, %rd1264;
	shr.u64 	%rd1267, %rd9274, 7;
	xor.b64  	%rd1268, %rd1266, %rd1267;
	add.s64 	%rd1269, %rd1268, %rd9273;
	add.s64 	%rd1270, %rd1269, %rd1012;
	add.s64 	%rd1271, %rd1270, %rd1263;
	add.s64 	%rd1272, %rd1271, %rd1136;
	xor.b64  	%rd1273, %rd1210, %rd1173;
	and.b64  	%rd1274, %rd1247, %rd1273;
	xor.b64  	%rd1275, %rd1274, %rd1173;
	add.s64 	%rd1276, %rd1272, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd1247;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 14;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 14;
	mov.b64 	%rd1277, {%r1057, %r1056};
	shf.r.wrap.b32 	%r1058, %r1055, %r1054, 18;
	shf.r.wrap.b32 	%r1059, %r1054, %r1055, 18;
	mov.b64 	%rd1278, {%r1059, %r1058};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	shf.l.wrap.b32 	%r1060, %r1054, %r1055, 23;
	shf.l.wrap.b32 	%r1061, %r1055, %r1054, 23;
	mov.b64 	%rd1280, {%r1061, %r1060};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	add.s64 	%rd1282, %rd1276, %rd1281;
	add.s64 	%rd1283, %rd1282, -5763719355590565569;
	add.s64 	%rd1284, %rd1283, %rd1147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1063}, %rd1258;
	}
	shf.r.wrap.b32 	%r1064, %r1063, %r1062, 28;
	shf.r.wrap.b32 	%r1065, %r1062, %r1063, 28;
	mov.b64 	%rd1285, {%r1065, %r1064};
	shf.l.wrap.b32 	%r1066, %r1062, %r1063, 30;
	shf.l.wrap.b32 	%r1067, %r1063, %r1062, 30;
	mov.b64 	%rd1286, {%r1067, %r1066};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	shf.l.wrap.b32 	%r1068, %r1062, %r1063, 25;
	shf.l.wrap.b32 	%r1069, %r1063, %r1062, 25;
	mov.b64 	%rd1288, {%r1069, %r1068};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	and.b64  	%rd1290, %rd1258, %rd1221;
	or.b64  	%rd1291, %rd1258, %rd1221;
	and.b64  	%rd1292, %rd1291, %rd1184;
	or.b64  	%rd1293, %rd1292, %rd1290;
	add.s64 	%rd1294, %rd1293, %rd1289;
	add.s64 	%rd1295, %rd1294, %rd1283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd1234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd1234;
	}
	shf.r.wrap.b32 	%r1072, %r1071, %r1070, 19;
	shf.r.wrap.b32 	%r1073, %r1070, %r1071, 19;
	mov.b64 	%rd1296, {%r1073, %r1072};
	shf.l.wrap.b32 	%r1074, %r1070, %r1071, 3;
	shf.l.wrap.b32 	%r1075, %r1071, %r1070, 3;
	mov.b64 	%rd1297, {%r1075, %r1074};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shr.u64 	%rd1299, %rd1234, 6;
	xor.b64  	%rd1300, %rd1298, %rd1299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd9275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd9275;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 8;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 8;
	mov.b64 	%rd1301, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 1;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 1;
	mov.b64 	%rd1302, {%r1081, %r1080};
	xor.b64  	%rd1303, %rd1302, %rd1301;
	shr.u64 	%rd1304, %rd9275, 7;
	xor.b64  	%rd1305, %rd1303, %rd1304;
	add.s64 	%rd1306, %rd1305, %rd9274;
	add.s64 	%rd1307, %rd1306, %rd1049;
	add.s64 	%rd1308, %rd1307, %rd1300;
	add.s64 	%rd1309, %rd1308, %rd1173;
	xor.b64  	%rd1310, %rd1247, %rd1210;
	and.b64  	%rd1311, %rd1284, %rd1310;
	xor.b64  	%rd1312, %rd1311, %rd1210;
	add.s64 	%rd1313, %rd1309, %rd1312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd1284;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 14;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 14;
	mov.b64 	%rd1314, {%r1085, %r1084};
	shf.r.wrap.b32 	%r1086, %r1083, %r1082, 18;
	shf.r.wrap.b32 	%r1087, %r1082, %r1083, 18;
	mov.b64 	%rd1315, {%r1087, %r1086};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	shf.l.wrap.b32 	%r1088, %r1082, %r1083, 23;
	shf.l.wrap.b32 	%r1089, %r1083, %r1082, 23;
	mov.b64 	%rd1317, {%r1089, %r1088};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	add.s64 	%rd1319, %rd1313, %rd1318;
	add.s64 	%rd1320, %rd1319, -4658551843659510044;
	add.s64 	%rd1321, %rd1320, %rd1184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd1295;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 28;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 28;
	mov.b64 	%rd1322, {%r1093, %r1092};
	shf.l.wrap.b32 	%r1094, %r1090, %r1091, 30;
	shf.l.wrap.b32 	%r1095, %r1091, %r1090, 30;
	mov.b64 	%rd1323, {%r1095, %r1094};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	shf.l.wrap.b32 	%r1096, %r1090, %r1091, 25;
	shf.l.wrap.b32 	%r1097, %r1091, %r1090, 25;
	mov.b64 	%rd1325, {%r1097, %r1096};
	xor.b64  	%rd1326, %rd1324, %rd1325;
	and.b64  	%rd1327, %rd1295, %rd1258;
	or.b64  	%rd1328, %rd1295, %rd1258;
	and.b64  	%rd1329, %rd1328, %rd1221;
	or.b64  	%rd1330, %rd1329, %rd1327;
	add.s64 	%rd1331, %rd1330, %rd1326;
	add.s64 	%rd1332, %rd1331, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd1271;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 19;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 19;
	mov.b64 	%rd1333, {%r1101, %r1100};
	shf.l.wrap.b32 	%r1102, %r1098, %r1099, 3;
	shf.l.wrap.b32 	%r1103, %r1099, %r1098, 3;
	mov.b64 	%rd1334, {%r1103, %r1102};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	shr.u64 	%rd1336, %rd1271, 6;
	xor.b64  	%rd1337, %rd1335, %rd1336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1104,%dummy}, %rd9276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1105}, %rd9276;
	}
	shf.r.wrap.b32 	%r1106, %r1105, %r1104, 8;
	shf.r.wrap.b32 	%r1107, %r1104, %r1105, 8;
	mov.b64 	%rd1338, {%r1107, %r1106};
	shf.r.wrap.b32 	%r1108, %r1105, %r1104, 1;
	shf.r.wrap.b32 	%r1109, %r1104, %r1105, 1;
	mov.b64 	%rd1339, {%r1109, %r1108};
	xor.b64  	%rd1340, %rd1339, %rd1338;
	shr.u64 	%rd1341, %rd9276, 7;
	xor.b64  	%rd1342, %rd1340, %rd1341;
	add.s64 	%rd1343, %rd1342, %rd9275;
	add.s64 	%rd1344, %rd1343, %rd1086;
	add.s64 	%rd1345, %rd1344, %rd1337;
	add.s64 	%rd1346, %rd1345, %rd1210;
	xor.b64  	%rd1347, %rd1284, %rd1247;
	and.b64  	%rd1348, %rd1321, %rd1347;
	xor.b64  	%rd1349, %rd1348, %rd1247;
	add.s64 	%rd1350, %rd1346, %rd1349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd1321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1111}, %rd1321;
	}
	shf.r.wrap.b32 	%r1112, %r1111, %r1110, 14;
	shf.r.wrap.b32 	%r1113, %r1110, %r1111, 14;
	mov.b64 	%rd1351, {%r1113, %r1112};
	shf.r.wrap.b32 	%r1114, %r1111, %r1110, 18;
	shf.r.wrap.b32 	%r1115, %r1110, %r1111, 18;
	mov.b64 	%rd1352, {%r1115, %r1114};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	shf.l.wrap.b32 	%r1116, %r1110, %r1111, 23;
	shf.l.wrap.b32 	%r1117, %r1111, %r1110, 23;
	mov.b64 	%rd1354, {%r1117, %r1116};
	xor.b64  	%rd1355, %rd1353, %rd1354;
	add.s64 	%rd1356, %rd1350, %rd1355;
	add.s64 	%rd1357, %rd1356, -4116276920077217854;
	add.s64 	%rd1358, %rd1357, %rd1221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd1332;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 28;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 28;
	mov.b64 	%rd1359, {%r1121, %r1120};
	shf.l.wrap.b32 	%r1122, %r1118, %r1119, 30;
	shf.l.wrap.b32 	%r1123, %r1119, %r1118, 30;
	mov.b64 	%rd1360, {%r1123, %r1122};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	shf.l.wrap.b32 	%r1124, %r1118, %r1119, 25;
	shf.l.wrap.b32 	%r1125, %r1119, %r1118, 25;
	mov.b64 	%rd1362, {%r1125, %r1124};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	and.b64  	%rd1364, %rd1332, %rd1295;
	or.b64  	%rd1365, %rd1332, %rd1295;
	and.b64  	%rd1366, %rd1365, %rd1258;
	or.b64  	%rd1367, %rd1366, %rd1364;
	add.s64 	%rd1368, %rd1367, %rd1363;
	add.s64 	%rd1369, %rd1368, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1127}, %rd1308;
	}
	shf.r.wrap.b32 	%r1128, %r1127, %r1126, 19;
	shf.r.wrap.b32 	%r1129, %r1126, %r1127, 19;
	mov.b64 	%rd1370, {%r1129, %r1128};
	shf.l.wrap.b32 	%r1130, %r1126, %r1127, 3;
	shf.l.wrap.b32 	%r1131, %r1127, %r1126, 3;
	mov.b64 	%rd1371, {%r1131, %r1130};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	shr.u64 	%rd1373, %rd1308, 6;
	xor.b64  	%rd1374, %rd1372, %rd1373;
	shf.r.wrap.b32 	%r1132, %r762, %r763, 8;
	shf.r.wrap.b32 	%r1133, %r763, %r762, 8;
	mov.b64 	%rd1375, {%r1133, %r1132};
	shf.r.wrap.b32 	%r1134, %r762, %r763, 1;
	shf.r.wrap.b32 	%r1135, %r763, %r762, 1;
	mov.b64 	%rd1376, {%r1135, %r1134};
	xor.b64  	%rd1377, %rd1376, %rd1375;
	shr.u64 	%rd1378, %rd9277, 7;
	xor.b64  	%rd1379, %rd1377, %rd1378;
	add.s64 	%rd1380, %rd1379, %rd9276;
	add.s64 	%rd1381, %rd1380, %rd1123;
	add.s64 	%rd1382, %rd1381, %rd1374;
	add.s64 	%rd1383, %rd1382, %rd1247;
	xor.b64  	%rd1384, %rd1321, %rd1284;
	and.b64  	%rd1385, %rd1358, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd1284;
	add.s64 	%rd1387, %rd1383, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1358;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 14;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 14;
	mov.b64 	%rd1388, {%r1139, %r1138};
	shf.r.wrap.b32 	%r1140, %r1137, %r1136, 18;
	shf.r.wrap.b32 	%r1141, %r1136, %r1137, 18;
	mov.b64 	%rd1389, {%r1141, %r1140};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	shf.l.wrap.b32 	%r1142, %r1136, %r1137, 23;
	shf.l.wrap.b32 	%r1143, %r1137, %r1136, 23;
	mov.b64 	%rd1391, {%r1143, %r1142};
	xor.b64  	%rd1392, %rd1390, %rd1391;
	add.s64 	%rd1393, %rd1387, %rd1392;
	add.s64 	%rd1394, %rd1393, -3051310485924567259;
	add.s64 	%rd1395, %rd1394, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1144,%dummy}, %rd1369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd1369;
	}
	shf.r.wrap.b32 	%r1146, %r1145, %r1144, 28;
	shf.r.wrap.b32 	%r1147, %r1144, %r1145, 28;
	mov.b64 	%rd1396, {%r1147, %r1146};
	shf.l.wrap.b32 	%r1148, %r1144, %r1145, 30;
	shf.l.wrap.b32 	%r1149, %r1145, %r1144, 30;
	mov.b64 	%rd1397, {%r1149, %r1148};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	shf.l.wrap.b32 	%r1150, %r1144, %r1145, 25;
	shf.l.wrap.b32 	%r1151, %r1145, %r1144, 25;
	mov.b64 	%rd1399, {%r1151, %r1150};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	and.b64  	%rd1401, %rd1369, %rd1332;
	or.b64  	%rd1402, %rd1369, %rd1332;
	and.b64  	%rd1403, %rd1402, %rd1295;
	or.b64  	%rd1404, %rd1403, %rd1401;
	add.s64 	%rd1405, %rd1404, %rd1400;
	add.s64 	%rd1406, %rd1405, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1152,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd1345;
	}
	shf.r.wrap.b32 	%r1154, %r1153, %r1152, 19;
	shf.r.wrap.b32 	%r1155, %r1152, %r1153, 19;
	mov.b64 	%rd1407, {%r1155, %r1154};
	shf.l.wrap.b32 	%r1156, %r1152, %r1153, 3;
	shf.l.wrap.b32 	%r1157, %r1153, %r1152, 3;
	mov.b64 	%rd1408, {%r1157, %r1156};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	shr.u64 	%rd1410, %rd1345, 6;
	xor.b64  	%rd1411, %rd1409, %rd1410;
	shf.r.wrap.b32 	%r1158, %r790, %r791, 8;
	shf.r.wrap.b32 	%r1159, %r791, %r790, 8;
	mov.b64 	%rd1412, {%r1159, %r1158};
	shf.r.wrap.b32 	%r1160, %r790, %r791, 1;
	shf.r.wrap.b32 	%r1161, %r791, %r790, 1;
	mov.b64 	%rd1413, {%r1161, %r1160};
	xor.b64  	%rd1414, %rd1413, %rd1412;
	shr.u64 	%rd1415, %rd9278, 7;
	xor.b64  	%rd1416, %rd1414, %rd1415;
	add.s64 	%rd1417, %rd1416, %rd9277;
	add.s64 	%rd1418, %rd1417, %rd1160;
	add.s64 	%rd1419, %rd1418, %rd1411;
	add.s64 	%rd1420, %rd1419, %rd1284;
	xor.b64  	%rd1421, %rd1358, %rd1321;
	and.b64  	%rd1422, %rd1395, %rd1421;
	xor.b64  	%rd1423, %rd1422, %rd1321;
	add.s64 	%rd1424, %rd1420, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd1395;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 14;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 14;
	mov.b64 	%rd1425, {%r1165, %r1164};
	shf.r.wrap.b32 	%r1166, %r1163, %r1162, 18;
	shf.r.wrap.b32 	%r1167, %r1162, %r1163, 18;
	mov.b64 	%rd1426, {%r1167, %r1166};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	shf.l.wrap.b32 	%r1168, %r1162, %r1163, 23;
	shf.l.wrap.b32 	%r1169, %r1163, %r1162, 23;
	mov.b64 	%rd1428, {%r1169, %r1168};
	xor.b64  	%rd1429, %rd1427, %rd1428;
	add.s64 	%rd1430, %rd1424, %rd1429;
	add.s64 	%rd1431, %rd1430, 489312712824947311;
	add.s64 	%rd1432, %rd1431, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd1406;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 28;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 28;
	mov.b64 	%rd1433, {%r1173, %r1172};
	shf.l.wrap.b32 	%r1174, %r1170, %r1171, 30;
	shf.l.wrap.b32 	%r1175, %r1171, %r1170, 30;
	mov.b64 	%rd1434, {%r1175, %r1174};
	xor.b64  	%rd1435, %rd1433, %rd1434;
	shf.l.wrap.b32 	%r1176, %r1170, %r1171, 25;
	shf.l.wrap.b32 	%r1177, %r1171, %r1170, 25;
	mov.b64 	%rd1436, {%r1177, %r1176};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	and.b64  	%rd1438, %rd1406, %rd1369;
	or.b64  	%rd1439, %rd1406, %rd1369;
	and.b64  	%rd1440, %rd1439, %rd1332;
	or.b64  	%rd1441, %rd1440, %rd1438;
	add.s64 	%rd1442, %rd1441, %rd1437;
	add.s64 	%rd1443, %rd1442, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd1382;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 19;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 19;
	mov.b64 	%rd1444, {%r1181, %r1180};
	shf.l.wrap.b32 	%r1182, %r1178, %r1179, 3;
	shf.l.wrap.b32 	%r1183, %r1179, %r1178, 3;
	mov.b64 	%rd1445, {%r1183, %r1182};
	xor.b64  	%rd1446, %rd1444, %rd1445;
	shr.u64 	%rd1447, %rd1382, 6;
	xor.b64  	%rd1448, %rd1446, %rd1447;
	shf.r.wrap.b32 	%r1184, %r819, %r818, 1;
	shf.r.wrap.b32 	%r1185, %r818, %r819, 1;
	mov.b64 	%rd1449, {%r1185, %r1184};
	shf.r.wrap.b32 	%r1186, %r819, %r818, 8;
	shf.r.wrap.b32 	%r1187, %r818, %r819, 8;
	mov.b64 	%rd1450, {%r1187, %r1186};
	xor.b64  	%rd1451, %rd1449, %rd1450;
	shr.u64 	%rd1452, %rd901, 7;
	xor.b64  	%rd1453, %rd1451, %rd1452;
	add.s64 	%rd1454, %rd1453, %rd9278;
	add.s64 	%rd1455, %rd1454, %rd1197;
	add.s64 	%rd1456, %rd1455, %rd1448;
	add.s64 	%rd1457, %rd1456, %rd1321;
	xor.b64  	%rd1458, %rd1395, %rd1358;
	and.b64  	%rd1459, %rd1432, %rd1458;
	xor.b64  	%rd1460, %rd1459, %rd1358;
	add.s64 	%rd1461, %rd1457, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd1432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1432;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 14;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 14;
	mov.b64 	%rd1462, {%r1191, %r1190};
	shf.r.wrap.b32 	%r1192, %r1189, %r1188, 18;
	shf.r.wrap.b32 	%r1193, %r1188, %r1189, 18;
	mov.b64 	%rd1463, {%r1193, %r1192};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	shf.l.wrap.b32 	%r1194, %r1188, %r1189, 23;
	shf.l.wrap.b32 	%r1195, %r1189, %r1188, 23;
	mov.b64 	%rd1465, {%r1195, %r1194};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	add.s64 	%rd1467, %rd1461, %rd1466;
	add.s64 	%rd1468, %rd1467, 1452737877330783856;
	add.s64 	%rd1469, %rd1468, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1443;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 28;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 28;
	mov.b64 	%rd1470, {%r1199, %r1198};
	shf.l.wrap.b32 	%r1200, %r1196, %r1197, 30;
	shf.l.wrap.b32 	%r1201, %r1197, %r1196, 30;
	mov.b64 	%rd1471, {%r1201, %r1200};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	shf.l.wrap.b32 	%r1202, %r1196, %r1197, 25;
	shf.l.wrap.b32 	%r1203, %r1197, %r1196, 25;
	mov.b64 	%rd1473, {%r1203, %r1202};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	and.b64  	%rd1475, %rd1443, %rd1406;
	or.b64  	%rd1476, %rd1443, %rd1406;
	and.b64  	%rd1477, %rd1476, %rd1369;
	or.b64  	%rd1478, %rd1477, %rd1475;
	add.s64 	%rd1479, %rd1478, %rd1474;
	add.s64 	%rd1480, %rd1479, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd1419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd1419;
	}
	shf.r.wrap.b32 	%r1206, %r1205, %r1204, 19;
	shf.r.wrap.b32 	%r1207, %r1204, %r1205, 19;
	mov.b64 	%rd1481, {%r1207, %r1206};
	shf.l.wrap.b32 	%r1208, %r1204, %r1205, 3;
	shf.l.wrap.b32 	%r1209, %r1205, %r1204, 3;
	mov.b64 	%rd1482, {%r1209, %r1208};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	shr.u64 	%rd1484, %rd1419, 6;
	xor.b64  	%rd1485, %rd1483, %rd1484;
	shf.r.wrap.b32 	%r1210, %r847, %r846, 1;
	shf.r.wrap.b32 	%r1211, %r846, %r847, 1;
	mov.b64 	%rd1486, {%r1211, %r1210};
	shf.r.wrap.b32 	%r1212, %r847, %r846, 8;
	shf.r.wrap.b32 	%r1213, %r846, %r847, 8;
	mov.b64 	%rd1487, {%r1213, %r1212};
	xor.b64  	%rd1488, %rd1486, %rd1487;
	shr.u64 	%rd1489, %rd938, 7;
	xor.b64  	%rd1490, %rd1488, %rd1489;
	add.s64 	%rd1491, %rd1490, %rd901;
	add.s64 	%rd1492, %rd1491, %rd1234;
	add.s64 	%rd1493, %rd1492, %rd1485;
	add.s64 	%rd1494, %rd1493, %rd1358;
	xor.b64  	%rd1495, %rd1432, %rd1395;
	and.b64  	%rd1496, %rd1469, %rd1495;
	xor.b64  	%rd1497, %rd1496, %rd1395;
	add.s64 	%rd1498, %rd1494, %rd1497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1214,%dummy}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1215}, %rd1469;
	}
	shf.r.wrap.b32 	%r1216, %r1215, %r1214, 14;
	shf.r.wrap.b32 	%r1217, %r1214, %r1215, 14;
	mov.b64 	%rd1499, {%r1217, %r1216};
	shf.r.wrap.b32 	%r1218, %r1215, %r1214, 18;
	shf.r.wrap.b32 	%r1219, %r1214, %r1215, 18;
	mov.b64 	%rd1500, {%r1219, %r1218};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	shf.l.wrap.b32 	%r1220, %r1214, %r1215, 23;
	shf.l.wrap.b32 	%r1221, %r1215, %r1214, 23;
	mov.b64 	%rd1502, {%r1221, %r1220};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	add.s64 	%rd1504, %rd1498, %rd1503;
	add.s64 	%rd1505, %rd1504, 2861767655752347644;
	add.s64 	%rd1506, %rd1505, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd1480;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 28;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 28;
	mov.b64 	%rd1507, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 30;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 30;
	mov.b64 	%rd1508, {%r1227, %r1226};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	shf.l.wrap.b32 	%r1228, %r1222, %r1223, 25;
	shf.l.wrap.b32 	%r1229, %r1223, %r1222, 25;
	mov.b64 	%rd1510, {%r1229, %r1228};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	and.b64  	%rd1512, %rd1480, %rd1443;
	or.b64  	%rd1513, %rd1480, %rd1443;
	and.b64  	%rd1514, %rd1513, %rd1406;
	or.b64  	%rd1515, %rd1514, %rd1512;
	add.s64 	%rd1516, %rd1515, %rd1511;
	add.s64 	%rd1517, %rd1516, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd1456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd1456;
	}
	shf.r.wrap.b32 	%r1232, %r1231, %r1230, 19;
	shf.r.wrap.b32 	%r1233, %r1230, %r1231, 19;
	mov.b64 	%rd1518, {%r1233, %r1232};
	shf.l.wrap.b32 	%r1234, %r1230, %r1231, 3;
	shf.l.wrap.b32 	%r1235, %r1231, %r1230, 3;
	mov.b64 	%rd1519, {%r1235, %r1234};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	shr.u64 	%rd1521, %rd1456, 6;
	xor.b64  	%rd1522, %rd1520, %rd1521;
	shf.r.wrap.b32 	%r1236, %r875, %r874, 1;
	shf.r.wrap.b32 	%r1237, %r874, %r875, 1;
	mov.b64 	%rd1523, {%r1237, %r1236};
	shf.r.wrap.b32 	%r1238, %r875, %r874, 8;
	shf.r.wrap.b32 	%r1239, %r874, %r875, 8;
	mov.b64 	%rd1524, {%r1239, %r1238};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	shr.u64 	%rd1526, %rd975, 7;
	xor.b64  	%rd1527, %rd1525, %rd1526;
	add.s64 	%rd1528, %rd1527, %rd938;
	add.s64 	%rd1529, %rd1528, %rd1271;
	add.s64 	%rd1530, %rd1529, %rd1522;
	add.s64 	%rd1531, %rd1530, %rd1395;
	xor.b64  	%rd1532, %rd1469, %rd1432;
	and.b64  	%rd1533, %rd1506, %rd1532;
	xor.b64  	%rd1534, %rd1533, %rd1432;
	add.s64 	%rd1535, %rd1531, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1506;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 14;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 14;
	mov.b64 	%rd1536, {%r1243, %r1242};
	shf.r.wrap.b32 	%r1244, %r1241, %r1240, 18;
	shf.r.wrap.b32 	%r1245, %r1240, %r1241, 18;
	mov.b64 	%rd1537, {%r1245, %r1244};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	shf.l.wrap.b32 	%r1246, %r1240, %r1241, 23;
	shf.l.wrap.b32 	%r1247, %r1241, %r1240, 23;
	mov.b64 	%rd1539, {%r1247, %r1246};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	add.s64 	%rd1541, %rd1535, %rd1540;
	add.s64 	%rd1542, %rd1541, 3322285676063803686;
	add.s64 	%rd1543, %rd1542, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1517;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 28;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 28;
	mov.b64 	%rd1544, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 30;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 30;
	mov.b64 	%rd1545, {%r1253, %r1252};
	xor.b64  	%rd1546, %rd1544, %rd1545;
	shf.l.wrap.b32 	%r1254, %r1248, %r1249, 25;
	shf.l.wrap.b32 	%r1255, %r1249, %r1248, 25;
	mov.b64 	%rd1547, {%r1255, %r1254};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	and.b64  	%rd1549, %rd1517, %rd1480;
	or.b64  	%rd1550, %rd1517, %rd1480;
	and.b64  	%rd1551, %rd1550, %rd1443;
	or.b64  	%rd1552, %rd1551, %rd1549;
	add.s64 	%rd1553, %rd1552, %rd1548;
	add.s64 	%rd1554, %rd1553, %rd1542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1256,%dummy}, %rd1493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1257}, %rd1493;
	}
	shf.r.wrap.b32 	%r1258, %r1257, %r1256, 19;
	shf.r.wrap.b32 	%r1259, %r1256, %r1257, 19;
	mov.b64 	%rd1555, {%r1259, %r1258};
	shf.l.wrap.b32 	%r1260, %r1256, %r1257, 3;
	shf.l.wrap.b32 	%r1261, %r1257, %r1256, 3;
	mov.b64 	%rd1556, {%r1261, %r1260};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shr.u64 	%rd1558, %rd1493, 6;
	xor.b64  	%rd1559, %rd1557, %rd1558;
	shf.r.wrap.b32 	%r1262, %r903, %r902, 1;
	shf.r.wrap.b32 	%r1263, %r902, %r903, 1;
	mov.b64 	%rd1560, {%r1263, %r1262};
	shf.r.wrap.b32 	%r1264, %r903, %r902, 8;
	shf.r.wrap.b32 	%r1265, %r902, %r903, 8;
	mov.b64 	%rd1561, {%r1265, %r1264};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	shr.u64 	%rd1563, %rd1012, 7;
	xor.b64  	%rd1564, %rd1562, %rd1563;
	add.s64 	%rd1565, %rd1564, %rd975;
	add.s64 	%rd1566, %rd1565, %rd1308;
	add.s64 	%rd1567, %rd1566, %rd1559;
	add.s64 	%rd1568, %rd1567, %rd1432;
	xor.b64  	%rd1569, %rd1506, %rd1469;
	and.b64  	%rd1570, %rd1543, %rd1569;
	xor.b64  	%rd1571, %rd1570, %rd1469;
	add.s64 	%rd1572, %rd1568, %rd1571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd1543;
	}
	shf.r.wrap.b32 	%r1268, %r1267, %r1266, 14;
	shf.r.wrap.b32 	%r1269, %r1266, %r1267, 14;
	mov.b64 	%rd1573, {%r1269, %r1268};
	shf.r.wrap.b32 	%r1270, %r1267, %r1266, 18;
	shf.r.wrap.b32 	%r1271, %r1266, %r1267, 18;
	mov.b64 	%rd1574, {%r1271, %r1270};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	shf.l.wrap.b32 	%r1272, %r1266, %r1267, 23;
	shf.l.wrap.b32 	%r1273, %r1267, %r1266, 23;
	mov.b64 	%rd1576, {%r1273, %r1272};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	add.s64 	%rd1578, %rd1572, %rd1577;
	add.s64 	%rd1579, %rd1578, 5560940570517711597;
	add.s64 	%rd1580, %rd1579, %rd1443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd1554;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 28;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 28;
	mov.b64 	%rd1581, {%r1277, %r1276};
	shf.l.wrap.b32 	%r1278, %r1274, %r1275, 30;
	shf.l.wrap.b32 	%r1279, %r1275, %r1274, 30;
	mov.b64 	%rd1582, {%r1279, %r1278};
	xor.b64  	%rd1583, %rd1581, %rd1582;
	shf.l.wrap.b32 	%r1280, %r1274, %r1275, 25;
	shf.l.wrap.b32 	%r1281, %r1275, %r1274, 25;
	mov.b64 	%rd1584, {%r1281, %r1280};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	and.b64  	%rd1586, %rd1554, %rd1517;
	or.b64  	%rd1587, %rd1554, %rd1517;
	and.b64  	%rd1588, %rd1587, %rd1480;
	or.b64  	%rd1589, %rd1588, %rd1586;
	add.s64 	%rd1590, %rd1589, %rd1585;
	add.s64 	%rd1591, %rd1590, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd1530;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 19;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 19;
	mov.b64 	%rd1592, {%r1285, %r1284};
	shf.l.wrap.b32 	%r1286, %r1282, %r1283, 3;
	shf.l.wrap.b32 	%r1287, %r1283, %r1282, 3;
	mov.b64 	%rd1593, {%r1287, %r1286};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	shr.u64 	%rd1595, %rd1530, 6;
	xor.b64  	%rd1596, %rd1594, %rd1595;
	shf.r.wrap.b32 	%r1288, %r931, %r930, 1;
	shf.r.wrap.b32 	%r1289, %r930, %r931, 1;
	mov.b64 	%rd1597, {%r1289, %r1288};
	shf.r.wrap.b32 	%r1290, %r931, %r930, 8;
	shf.r.wrap.b32 	%r1291, %r930, %r931, 8;
	mov.b64 	%rd1598, {%r1291, %r1290};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	shr.u64 	%rd1600, %rd1049, 7;
	xor.b64  	%rd1601, %rd1599, %rd1600;
	add.s64 	%rd1602, %rd1601, %rd1012;
	add.s64 	%rd1603, %rd1602, %rd1345;
	add.s64 	%rd1604, %rd1603, %rd1596;
	add.s64 	%rd1605, %rd1604, %rd1469;
	xor.b64  	%rd1606, %rd1543, %rd1506;
	and.b64  	%rd1607, %rd1580, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1506;
	add.s64 	%rd1609, %rd1605, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1580;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 14;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 14;
	mov.b64 	%rd1610, {%r1295, %r1294};
	shf.r.wrap.b32 	%r1296, %r1293, %r1292, 18;
	shf.r.wrap.b32 	%r1297, %r1292, %r1293, 18;
	mov.b64 	%rd1611, {%r1297, %r1296};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 23;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 23;
	mov.b64 	%rd1613, {%r1299, %r1298};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	add.s64 	%rd1615, %rd1609, %rd1614;
	add.s64 	%rd1616, %rd1615, 5996557281743188959;
	add.s64 	%rd1617, %rd1616, %rd1480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1591;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 28;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 28;
	mov.b64 	%rd1618, {%r1303, %r1302};
	shf.l.wrap.b32 	%r1304, %r1300, %r1301, 30;
	shf.l.wrap.b32 	%r1305, %r1301, %r1300, 30;
	mov.b64 	%rd1619, {%r1305, %r1304};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	shf.l.wrap.b32 	%r1306, %r1300, %r1301, 25;
	shf.l.wrap.b32 	%r1307, %r1301, %r1300, 25;
	mov.b64 	%rd1621, {%r1307, %r1306};
	xor.b64  	%rd1622, %rd1620, %rd1621;
	and.b64  	%rd1623, %rd1591, %rd1554;
	or.b64  	%rd1624, %rd1591, %rd1554;
	and.b64  	%rd1625, %rd1624, %rd1517;
	or.b64  	%rd1626, %rd1625, %rd1623;
	add.s64 	%rd1627, %rd1626, %rd1622;
	add.s64 	%rd1628, %rd1627, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1567;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 19;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 19;
	mov.b64 	%rd1629, {%r1311, %r1310};
	shf.l.wrap.b32 	%r1312, %r1308, %r1309, 3;
	shf.l.wrap.b32 	%r1313, %r1309, %r1308, 3;
	mov.b64 	%rd1630, {%r1313, %r1312};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	shr.u64 	%rd1632, %rd1567, 6;
	xor.b64  	%rd1633, %rd1631, %rd1632;
	shf.r.wrap.b32 	%r1314, %r959, %r958, 1;
	shf.r.wrap.b32 	%r1315, %r958, %r959, 1;
	mov.b64 	%rd1634, {%r1315, %r1314};
	shf.r.wrap.b32 	%r1316, %r959, %r958, 8;
	shf.r.wrap.b32 	%r1317, %r958, %r959, 8;
	mov.b64 	%rd1635, {%r1317, %r1316};
	xor.b64  	%rd1636, %rd1634, %rd1635;
	shr.u64 	%rd1637, %rd1086, 7;
	xor.b64  	%rd1638, %rd1636, %rd1637;
	add.s64 	%rd1639, %rd1638, %rd1049;
	add.s64 	%rd1640, %rd1639, %rd1382;
	add.s64 	%rd1641, %rd1640, %rd1633;
	add.s64 	%rd1642, %rd1641, %rd1506;
	xor.b64  	%rd1643, %rd1580, %rd1543;
	and.b64  	%rd1644, %rd1617, %rd1643;
	xor.b64  	%rd1645, %rd1644, %rd1543;
	add.s64 	%rd1646, %rd1642, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1617;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 14;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 14;
	mov.b64 	%rd1647, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r1319, %r1318, 18;
	shf.r.wrap.b32 	%r1323, %r1318, %r1319, 18;
	mov.b64 	%rd1648, {%r1323, %r1322};
	xor.b64  	%rd1649, %rd1647, %rd1648;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 23;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 23;
	mov.b64 	%rd1650, {%r1325, %r1324};
	xor.b64  	%rd1651, %rd1649, %rd1650;
	add.s64 	%rd1652, %rd1646, %rd1651;
	add.s64 	%rd1653, %rd1652, 7280758554555802590;
	add.s64 	%rd1654, %rd1653, %rd1517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1628;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 28;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 28;
	mov.b64 	%rd1655, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 30;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 30;
	mov.b64 	%rd1656, {%r1331, %r1330};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 25;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 25;
	mov.b64 	%rd1658, {%r1333, %r1332};
	xor.b64  	%rd1659, %rd1657, %rd1658;
	and.b64  	%rd1660, %rd1628, %rd1591;
	or.b64  	%rd1661, %rd1628, %rd1591;
	and.b64  	%rd1662, %rd1661, %rd1554;
	or.b64  	%rd1663, %rd1662, %rd1660;
	add.s64 	%rd1664, %rd1663, %rd1659;
	add.s64 	%rd1665, %rd1664, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1604;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 19;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 19;
	mov.b64 	%rd1666, {%r1337, %r1336};
	shf.l.wrap.b32 	%r1338, %r1334, %r1335, 3;
	shf.l.wrap.b32 	%r1339, %r1335, %r1334, 3;
	mov.b64 	%rd1667, {%r1339, %r1338};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	shr.u64 	%rd1669, %rd1604, 6;
	xor.b64  	%rd1670, %rd1668, %rd1669;
	shf.r.wrap.b32 	%r1340, %r987, %r986, 1;
	shf.r.wrap.b32 	%r1341, %r986, %r987, 1;
	mov.b64 	%rd1671, {%r1341, %r1340};
	shf.r.wrap.b32 	%r1342, %r987, %r986, 8;
	shf.r.wrap.b32 	%r1343, %r986, %r987, 8;
	mov.b64 	%rd1672, {%r1343, %r1342};
	xor.b64  	%rd1673, %rd1671, %rd1672;
	shr.u64 	%rd1674, %rd1123, 7;
	xor.b64  	%rd1675, %rd1673, %rd1674;
	add.s64 	%rd1676, %rd1675, %rd1086;
	add.s64 	%rd1677, %rd1676, %rd1419;
	add.s64 	%rd1678, %rd1677, %rd1670;
	add.s64 	%rd1679, %rd1678, %rd1543;
	xor.b64  	%rd1680, %rd1617, %rd1580;
	and.b64  	%rd1681, %rd1654, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1580;
	add.s64 	%rd1683, %rd1679, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1344,%dummy}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1345}, %rd1654;
	}
	shf.r.wrap.b32 	%r1346, %r1345, %r1344, 14;
	shf.r.wrap.b32 	%r1347, %r1344, %r1345, 14;
	mov.b64 	%rd1684, {%r1347, %r1346};
	shf.r.wrap.b32 	%r1348, %r1345, %r1344, 18;
	shf.r.wrap.b32 	%r1349, %r1344, %r1345, 18;
	mov.b64 	%rd1685, {%r1349, %r1348};
	xor.b64  	%rd1686, %rd1684, %rd1685;
	shf.l.wrap.b32 	%r1350, %r1344, %r1345, 23;
	shf.l.wrap.b32 	%r1351, %r1345, %r1344, 23;
	mov.b64 	%rd1687, {%r1351, %r1350};
	xor.b64  	%rd1688, %rd1686, %rd1687;
	add.s64 	%rd1689, %rd1683, %rd1688;
	add.s64 	%rd1690, %rd1689, 8532644243296465576;
	add.s64 	%rd1691, %rd1690, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd1665;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 28;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 28;
	mov.b64 	%rd1692, {%r1355, %r1354};
	shf.l.wrap.b32 	%r1356, %r1352, %r1353, 30;
	shf.l.wrap.b32 	%r1357, %r1353, %r1352, 30;
	mov.b64 	%rd1693, {%r1357, %r1356};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	shf.l.wrap.b32 	%r1358, %r1352, %r1353, 25;
	shf.l.wrap.b32 	%r1359, %r1353, %r1352, 25;
	mov.b64 	%rd1695, {%r1359, %r1358};
	xor.b64  	%rd1696, %rd1694, %rd1695;
	and.b64  	%rd1697, %rd1665, %rd1628;
	or.b64  	%rd1698, %rd1665, %rd1628;
	and.b64  	%rd1699, %rd1698, %rd1591;
	or.b64  	%rd1700, %rd1699, %rd1697;
	add.s64 	%rd1701, %rd1700, %rd1696;
	add.s64 	%rd1702, %rd1701, %rd1690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1360,%dummy}, %rd1641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd1641;
	}
	shf.r.wrap.b32 	%r1362, %r1361, %r1360, 19;
	shf.r.wrap.b32 	%r1363, %r1360, %r1361, 19;
	mov.b64 	%rd1703, {%r1363, %r1362};
	shf.l.wrap.b32 	%r1364, %r1360, %r1361, 3;
	shf.l.wrap.b32 	%r1365, %r1361, %r1360, 3;
	mov.b64 	%rd1704, {%r1365, %r1364};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	shr.u64 	%rd1706, %rd1641, 6;
	xor.b64  	%rd1707, %rd1705, %rd1706;
	shf.r.wrap.b32 	%r1366, %r1015, %r1014, 1;
	shf.r.wrap.b32 	%r1367, %r1014, %r1015, 1;
	mov.b64 	%rd1708, {%r1367, %r1366};
	shf.r.wrap.b32 	%r1368, %r1015, %r1014, 8;
	shf.r.wrap.b32 	%r1369, %r1014, %r1015, 8;
	mov.b64 	%rd1709, {%r1369, %r1368};
	xor.b64  	%rd1710, %rd1708, %rd1709;
	shr.u64 	%rd1711, %rd1160, 7;
	xor.b64  	%rd1712, %rd1710, %rd1711;
	add.s64 	%rd1713, %rd1712, %rd1123;
	add.s64 	%rd1714, %rd1713, %rd1456;
	add.s64 	%rd1715, %rd1714, %rd1707;
	add.s64 	%rd1716, %rd1715, %rd1580;
	xor.b64  	%rd1717, %rd1654, %rd1617;
	and.b64  	%rd1718, %rd1691, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1617;
	add.s64 	%rd1720, %rd1716, %rd1719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd1691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd1691;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 14;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 14;
	mov.b64 	%rd1721, {%r1373, %r1372};
	shf.r.wrap.b32 	%r1374, %r1371, %r1370, 18;
	shf.r.wrap.b32 	%r1375, %r1370, %r1371, 18;
	mov.b64 	%rd1722, {%r1375, %r1374};
	xor.b64  	%rd1723, %rd1721, %rd1722;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 23;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 23;
	mov.b64 	%rd1724, {%r1377, %r1376};
	xor.b64  	%rd1725, %rd1723, %rd1724;
	add.s64 	%rd1726, %rd1720, %rd1725;
	add.s64 	%rd1727, %rd1726, -9096487096722542874;
	add.s64 	%rd1728, %rd1727, %rd1591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd1702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd1702;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 28;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 28;
	mov.b64 	%rd1729, {%r1381, %r1380};
	shf.l.wrap.b32 	%r1382, %r1378, %r1379, 30;
	shf.l.wrap.b32 	%r1383, %r1379, %r1378, 30;
	mov.b64 	%rd1730, {%r1383, %r1382};
	xor.b64  	%rd1731, %rd1729, %rd1730;
	shf.l.wrap.b32 	%r1384, %r1378, %r1379, 25;
	shf.l.wrap.b32 	%r1385, %r1379, %r1378, 25;
	mov.b64 	%rd1732, {%r1385, %r1384};
	xor.b64  	%rd1733, %rd1731, %rd1732;
	and.b64  	%rd1734, %rd1702, %rd1665;
	or.b64  	%rd1735, %rd1702, %rd1665;
	and.b64  	%rd1736, %rd1735, %rd1628;
	or.b64  	%rd1737, %rd1736, %rd1734;
	add.s64 	%rd1738, %rd1737, %rd1733;
	add.s64 	%rd1739, %rd1738, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd1678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1387}, %rd1678;
	}
	shf.r.wrap.b32 	%r1388, %r1387, %r1386, 19;
	shf.r.wrap.b32 	%r1389, %r1386, %r1387, 19;
	mov.b64 	%rd1740, {%r1389, %r1388};
	shf.l.wrap.b32 	%r1390, %r1386, %r1387, 3;
	shf.l.wrap.b32 	%r1391, %r1387, %r1386, 3;
	mov.b64 	%rd1741, {%r1391, %r1390};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	shr.u64 	%rd1743, %rd1678, 6;
	xor.b64  	%rd1744, %rd1742, %rd1743;
	shf.r.wrap.b32 	%r1392, %r1043, %r1042, 1;
	shf.r.wrap.b32 	%r1393, %r1042, %r1043, 1;
	mov.b64 	%rd1745, {%r1393, %r1392};
	shf.r.wrap.b32 	%r1394, %r1043, %r1042, 8;
	shf.r.wrap.b32 	%r1395, %r1042, %r1043, 8;
	mov.b64 	%rd1746, {%r1395, %r1394};
	xor.b64  	%rd1747, %rd1745, %rd1746;
	shr.u64 	%rd1748, %rd1197, 7;
	xor.b64  	%rd1749, %rd1747, %rd1748;
	add.s64 	%rd1750, %rd1749, %rd1160;
	add.s64 	%rd1751, %rd1750, %rd1493;
	add.s64 	%rd1752, %rd1751, %rd1744;
	add.s64 	%rd1753, %rd1752, %rd1617;
	xor.b64  	%rd1754, %rd1691, %rd1654;
	and.b64  	%rd1755, %rd1728, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1654;
	add.s64 	%rd1757, %rd1753, %rd1756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd1728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd1728;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 14;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 14;
	mov.b64 	%rd1758, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1397, %r1396, 18;
	shf.r.wrap.b32 	%r1401, %r1396, %r1397, 18;
	mov.b64 	%rd1759, {%r1401, %r1400};
	xor.b64  	%rd1760, %rd1758, %rd1759;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 23;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 23;
	mov.b64 	%rd1761, {%r1403, %r1402};
	xor.b64  	%rd1762, %rd1760, %rd1761;
	add.s64 	%rd1763, %rd1757, %rd1762;
	add.s64 	%rd1764, %rd1763, -7894198246740708037;
	add.s64 	%rd1765, %rd1764, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd1739;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 28;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 28;
	mov.b64 	%rd1766, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 30;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 30;
	mov.b64 	%rd1767, {%r1409, %r1408};
	xor.b64  	%rd1768, %rd1766, %rd1767;
	shf.l.wrap.b32 	%r1410, %r1404, %r1405, 25;
	shf.l.wrap.b32 	%r1411, %r1405, %r1404, 25;
	mov.b64 	%rd1769, {%r1411, %r1410};
	xor.b64  	%rd1770, %rd1768, %rd1769;
	and.b64  	%rd1771, %rd1739, %rd1702;
	or.b64  	%rd1772, %rd1739, %rd1702;
	and.b64  	%rd1773, %rd1772, %rd1665;
	or.b64  	%rd1774, %rd1773, %rd1771;
	add.s64 	%rd1775, %rd1774, %rd1770;
	add.s64 	%rd1776, %rd1775, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd1715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd1715;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 19;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 19;
	mov.b64 	%rd1777, {%r1415, %r1414};
	shf.l.wrap.b32 	%r1416, %r1412, %r1413, 3;
	shf.l.wrap.b32 	%r1417, %r1413, %r1412, 3;
	mov.b64 	%rd1778, {%r1417, %r1416};
	xor.b64  	%rd1779, %rd1777, %rd1778;
	shr.u64 	%rd1780, %rd1715, 6;
	xor.b64  	%rd1781, %rd1779, %rd1780;
	shf.r.wrap.b32 	%r1418, %r1071, %r1070, 1;
	shf.r.wrap.b32 	%r1419, %r1070, %r1071, 1;
	mov.b64 	%rd1782, {%r1419, %r1418};
	shf.r.wrap.b32 	%r1420, %r1071, %r1070, 8;
	shf.r.wrap.b32 	%r1421, %r1070, %r1071, 8;
	mov.b64 	%rd1783, {%r1421, %r1420};
	xor.b64  	%rd1784, %rd1782, %rd1783;
	shr.u64 	%rd1785, %rd1234, 7;
	xor.b64  	%rd1786, %rd1784, %rd1785;
	add.s64 	%rd1787, %rd1786, %rd1197;
	add.s64 	%rd1788, %rd1787, %rd1530;
	add.s64 	%rd1789, %rd1788, %rd1781;
	add.s64 	%rd1790, %rd1789, %rd1654;
	xor.b64  	%rd1791, %rd1728, %rd1691;
	and.b64  	%rd1792, %rd1765, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1691;
	add.s64 	%rd1794, %rd1790, %rd1793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd1765;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 14;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 14;
	mov.b64 	%rd1795, {%r1425, %r1424};
	shf.r.wrap.b32 	%r1426, %r1423, %r1422, 18;
	shf.r.wrap.b32 	%r1427, %r1422, %r1423, 18;
	mov.b64 	%rd1796, {%r1427, %r1426};
	xor.b64  	%rd1797, %rd1795, %rd1796;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 23;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 23;
	mov.b64 	%rd1798, {%r1429, %r1428};
	xor.b64  	%rd1799, %rd1797, %rd1798;
	add.s64 	%rd1800, %rd1794, %rd1799;
	add.s64 	%rd1801, %rd1800, -6719396339535248540;
	add.s64 	%rd1802, %rd1801, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd1776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd1776;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 28;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 28;
	mov.b64 	%rd1803, {%r1433, %r1432};
	shf.l.wrap.b32 	%r1434, %r1430, %r1431, 30;
	shf.l.wrap.b32 	%r1435, %r1431, %r1430, 30;
	mov.b64 	%rd1804, {%r1435, %r1434};
	xor.b64  	%rd1805, %rd1803, %rd1804;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 25;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 25;
	mov.b64 	%rd1806, {%r1437, %r1436};
	xor.b64  	%rd1807, %rd1805, %rd1806;
	and.b64  	%rd1808, %rd1776, %rd1739;
	or.b64  	%rd1809, %rd1776, %rd1739;
	and.b64  	%rd1810, %rd1809, %rd1702;
	or.b64  	%rd1811, %rd1810, %rd1808;
	add.s64 	%rd1812, %rd1811, %rd1807;
	add.s64 	%rd1813, %rd1812, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd1752;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 19;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 19;
	mov.b64 	%rd1814, {%r1441, %r1440};
	shf.l.wrap.b32 	%r1442, %r1438, %r1439, 3;
	shf.l.wrap.b32 	%r1443, %r1439, %r1438, 3;
	mov.b64 	%rd1815, {%r1443, %r1442};
	xor.b64  	%rd1816, %rd1814, %rd1815;
	shr.u64 	%rd1817, %rd1752, 6;
	xor.b64  	%rd1818, %rd1816, %rd1817;
	shf.r.wrap.b32 	%r1444, %r1099, %r1098, 1;
	shf.r.wrap.b32 	%r1445, %r1098, %r1099, 1;
	mov.b64 	%rd1819, {%r1445, %r1444};
	shf.r.wrap.b32 	%r1446, %r1099, %r1098, 8;
	shf.r.wrap.b32 	%r1447, %r1098, %r1099, 8;
	mov.b64 	%rd1820, {%r1447, %r1446};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	shr.u64 	%rd1822, %rd1271, 7;
	xor.b64  	%rd1823, %rd1821, %rd1822;
	add.s64 	%rd1824, %rd1823, %rd1234;
	add.s64 	%rd1825, %rd1824, %rd1567;
	add.s64 	%rd1826, %rd1825, %rd1818;
	add.s64 	%rd1827, %rd1826, %rd1691;
	xor.b64  	%rd1828, %rd1765, %rd1728;
	and.b64  	%rd1829, %rd1802, %rd1828;
	xor.b64  	%rd1830, %rd1829, %rd1728;
	add.s64 	%rd1831, %rd1827, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1448,%dummy}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd1802;
	}
	shf.r.wrap.b32 	%r1450, %r1449, %r1448, 14;
	shf.r.wrap.b32 	%r1451, %r1448, %r1449, 14;
	mov.b64 	%rd1832, {%r1451, %r1450};
	shf.r.wrap.b32 	%r1452, %r1449, %r1448, 18;
	shf.r.wrap.b32 	%r1453, %r1448, %r1449, 18;
	mov.b64 	%rd1833, {%r1453, %r1452};
	xor.b64  	%rd1834, %rd1832, %rd1833;
	shf.l.wrap.b32 	%r1454, %r1448, %r1449, 23;
	shf.l.wrap.b32 	%r1455, %r1449, %r1448, 23;
	mov.b64 	%rd1835, {%r1455, %r1454};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	add.s64 	%rd1837, %rd1831, %rd1836;
	add.s64 	%rd1838, %rd1837, -6333637450476146687;
	add.s64 	%rd1839, %rd1838, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1456,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1457}, %rd1813;
	}
	shf.r.wrap.b32 	%r1458, %r1457, %r1456, 28;
	shf.r.wrap.b32 	%r1459, %r1456, %r1457, 28;
	mov.b64 	%rd1840, {%r1459, %r1458};
	shf.l.wrap.b32 	%r1460, %r1456, %r1457, 30;
	shf.l.wrap.b32 	%r1461, %r1457, %r1456, 30;
	mov.b64 	%rd1841, {%r1461, %r1460};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	shf.l.wrap.b32 	%r1462, %r1456, %r1457, 25;
	shf.l.wrap.b32 	%r1463, %r1457, %r1456, 25;
	mov.b64 	%rd1843, {%r1463, %r1462};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	and.b64  	%rd1845, %rd1813, %rd1776;
	or.b64  	%rd1846, %rd1813, %rd1776;
	and.b64  	%rd1847, %rd1846, %rd1739;
	or.b64  	%rd1848, %rd1847, %rd1845;
	add.s64 	%rd1849, %rd1848, %rd1844;
	add.s64 	%rd1850, %rd1849, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1464,%dummy}, %rd1789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1465}, %rd1789;
	}
	shf.r.wrap.b32 	%r1466, %r1465, %r1464, 19;
	shf.r.wrap.b32 	%r1467, %r1464, %r1465, 19;
	mov.b64 	%rd1851, {%r1467, %r1466};
	shf.l.wrap.b32 	%r1468, %r1464, %r1465, 3;
	shf.l.wrap.b32 	%r1469, %r1465, %r1464, 3;
	mov.b64 	%rd1852, {%r1469, %r1468};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	shr.u64 	%rd1854, %rd1789, 6;
	xor.b64  	%rd1855, %rd1853, %rd1854;
	shf.r.wrap.b32 	%r1470, %r1127, %r1126, 1;
	shf.r.wrap.b32 	%r1471, %r1126, %r1127, 1;
	mov.b64 	%rd1856, {%r1471, %r1470};
	shf.r.wrap.b32 	%r1472, %r1127, %r1126, 8;
	shf.r.wrap.b32 	%r1473, %r1126, %r1127, 8;
	mov.b64 	%rd1857, {%r1473, %r1472};
	xor.b64  	%rd1858, %rd1856, %rd1857;
	shr.u64 	%rd1859, %rd1308, 7;
	xor.b64  	%rd1860, %rd1858, %rd1859;
	add.s64 	%rd1861, %rd1860, %rd1271;
	add.s64 	%rd1862, %rd1861, %rd1604;
	add.s64 	%rd1863, %rd1862, %rd1855;
	add.s64 	%rd1864, %rd1863, %rd1728;
	xor.b64  	%rd1865, %rd1802, %rd1765;
	and.b64  	%rd1866, %rd1839, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1765;
	add.s64 	%rd1868, %rd1864, %rd1867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd1839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd1839;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 14;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 14;
	mov.b64 	%rd1869, {%r1477, %r1476};
	shf.r.wrap.b32 	%r1478, %r1475, %r1474, 18;
	shf.r.wrap.b32 	%r1479, %r1474, %r1475, 18;
	mov.b64 	%rd1870, {%r1479, %r1478};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 23;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 23;
	mov.b64 	%rd1872, {%r1481, %r1480};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	add.s64 	%rd1874, %rd1868, %rd1873;
	add.s64 	%rd1875, %rd1874, -4446306890439682159;
	add.s64 	%rd1876, %rd1875, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd1850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd1850;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 28;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 28;
	mov.b64 	%rd1877, {%r1485, %r1484};
	shf.l.wrap.b32 	%r1486, %r1482, %r1483, 30;
	shf.l.wrap.b32 	%r1487, %r1483, %r1482, 30;
	mov.b64 	%rd1878, {%r1487, %r1486};
	xor.b64  	%rd1879, %rd1877, %rd1878;
	shf.l.wrap.b32 	%r1488, %r1482, %r1483, 25;
	shf.l.wrap.b32 	%r1489, %r1483, %r1482, 25;
	mov.b64 	%rd1880, {%r1489, %r1488};
	xor.b64  	%rd1881, %rd1879, %rd1880;
	and.b64  	%rd1882, %rd1850, %rd1813;
	or.b64  	%rd1883, %rd1850, %rd1813;
	and.b64  	%rd1884, %rd1883, %rd1776;
	or.b64  	%rd1885, %rd1884, %rd1882;
	add.s64 	%rd1886, %rd1885, %rd1881;
	add.s64 	%rd1887, %rd1886, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1490,%dummy}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1491}, %rd1826;
	}
	shf.r.wrap.b32 	%r1492, %r1491, %r1490, 19;
	shf.r.wrap.b32 	%r1493, %r1490, %r1491, 19;
	mov.b64 	%rd1888, {%r1493, %r1492};
	shf.l.wrap.b32 	%r1494, %r1490, %r1491, 3;
	shf.l.wrap.b32 	%r1495, %r1491, %r1490, 3;
	mov.b64 	%rd1889, {%r1495, %r1494};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	shr.u64 	%rd1891, %rd1826, 6;
	xor.b64  	%rd1892, %rd1890, %rd1891;
	shf.r.wrap.b32 	%r1496, %r1153, %r1152, 1;
	shf.r.wrap.b32 	%r1497, %r1152, %r1153, 1;
	mov.b64 	%rd1893, {%r1497, %r1496};
	shf.r.wrap.b32 	%r1498, %r1153, %r1152, 8;
	shf.r.wrap.b32 	%r1499, %r1152, %r1153, 8;
	mov.b64 	%rd1894, {%r1499, %r1498};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	shr.u64 	%rd1896, %rd1345, 7;
	xor.b64  	%rd1897, %rd1895, %rd1896;
	add.s64 	%rd1898, %rd1897, %rd1308;
	add.s64 	%rd1899, %rd1898, %rd1641;
	add.s64 	%rd1900, %rd1899, %rd1892;
	add.s64 	%rd1901, %rd1900, %rd1765;
	xor.b64  	%rd1902, %rd1839, %rd1802;
	and.b64  	%rd1903, %rd1876, %rd1902;
	xor.b64  	%rd1904, %rd1903, %rd1802;
	add.s64 	%rd1905, %rd1901, %rd1904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd1876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd1876;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 14;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 14;
	mov.b64 	%rd1906, {%r1503, %r1502};
	shf.r.wrap.b32 	%r1504, %r1501, %r1500, 18;
	shf.r.wrap.b32 	%r1505, %r1500, %r1501, 18;
	mov.b64 	%rd1907, {%r1505, %r1504};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 23;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 23;
	mov.b64 	%rd1909, {%r1507, %r1506};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	add.s64 	%rd1911, %rd1905, %rd1910;
	add.s64 	%rd1912, %rd1911, -4076793802049405392;
	add.s64 	%rd1913, %rd1912, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd1887;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 28;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 28;
	mov.b64 	%rd1914, {%r1511, %r1510};
	shf.l.wrap.b32 	%r1512, %r1508, %r1509, 30;
	shf.l.wrap.b32 	%r1513, %r1509, %r1508, 30;
	mov.b64 	%rd1915, {%r1513, %r1512};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	shf.l.wrap.b32 	%r1514, %r1508, %r1509, 25;
	shf.l.wrap.b32 	%r1515, %r1509, %r1508, 25;
	mov.b64 	%rd1917, {%r1515, %r1514};
	xor.b64  	%rd1918, %rd1916, %rd1917;
	and.b64  	%rd1919, %rd1887, %rd1850;
	or.b64  	%rd1920, %rd1887, %rd1850;
	and.b64  	%rd1921, %rd1920, %rd1813;
	or.b64  	%rd1922, %rd1921, %rd1919;
	add.s64 	%rd1923, %rd1922, %rd1918;
	add.s64 	%rd1924, %rd1923, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd1863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd1863;
	}
	shf.r.wrap.b32 	%r1518, %r1517, %r1516, 19;
	shf.r.wrap.b32 	%r1519, %r1516, %r1517, 19;
	mov.b64 	%rd1925, {%r1519, %r1518};
	shf.l.wrap.b32 	%r1520, %r1516, %r1517, 3;
	shf.l.wrap.b32 	%r1521, %r1517, %r1516, 3;
	mov.b64 	%rd1926, {%r1521, %r1520};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	shr.u64 	%rd1928, %rd1863, 6;
	xor.b64  	%rd1929, %rd1927, %rd1928;
	shf.r.wrap.b32 	%r1522, %r1179, %r1178, 1;
	shf.r.wrap.b32 	%r1523, %r1178, %r1179, 1;
	mov.b64 	%rd1930, {%r1523, %r1522};
	shf.r.wrap.b32 	%r1524, %r1179, %r1178, 8;
	shf.r.wrap.b32 	%r1525, %r1178, %r1179, 8;
	mov.b64 	%rd1931, {%r1525, %r1524};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	shr.u64 	%rd1933, %rd1382, 7;
	xor.b64  	%rd1934, %rd1932, %rd1933;
	add.s64 	%rd1935, %rd1934, %rd1345;
	add.s64 	%rd1936, %rd1935, %rd1678;
	add.s64 	%rd1937, %rd1936, %rd1929;
	add.s64 	%rd1938, %rd1937, %rd1802;
	xor.b64  	%rd1939, %rd1876, %rd1839;
	and.b64  	%rd1940, %rd1913, %rd1939;
	xor.b64  	%rd1941, %rd1940, %rd1839;
	add.s64 	%rd1942, %rd1938, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd1913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd1913;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 14;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 14;
	mov.b64 	%rd1943, {%r1529, %r1528};
	shf.r.wrap.b32 	%r1530, %r1527, %r1526, 18;
	shf.r.wrap.b32 	%r1531, %r1526, %r1527, 18;
	mov.b64 	%rd1944, {%r1531, %r1530};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	shf.l.wrap.b32 	%r1532, %r1526, %r1527, 23;
	shf.l.wrap.b32 	%r1533, %r1527, %r1526, 23;
	mov.b64 	%rd1946, {%r1533, %r1532};
	xor.b64  	%rd1947, %rd1945, %rd1946;
	add.s64 	%rd1948, %rd1942, %rd1947;
	add.s64 	%rd1949, %rd1948, -3345356375505022440;
	add.s64 	%rd1950, %rd1949, %rd1813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd1924;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 28;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 28;
	mov.b64 	%rd1951, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 30;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 30;
	mov.b64 	%rd1952, {%r1539, %r1538};
	xor.b64  	%rd1953, %rd1951, %rd1952;
	shf.l.wrap.b32 	%r1540, %r1534, %r1535, 25;
	shf.l.wrap.b32 	%r1541, %r1535, %r1534, 25;
	mov.b64 	%rd1954, {%r1541, %r1540};
	xor.b64  	%rd1955, %rd1953, %rd1954;
	and.b64  	%rd1956, %rd1924, %rd1887;
	or.b64  	%rd1957, %rd1924, %rd1887;
	and.b64  	%rd1958, %rd1957, %rd1850;
	or.b64  	%rd1959, %rd1958, %rd1956;
	add.s64 	%rd1960, %rd1959, %rd1955;
	add.s64 	%rd1961, %rd1960, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd1900;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 19;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 19;
	mov.b64 	%rd1962, {%r1545, %r1544};
	shf.l.wrap.b32 	%r1546, %r1542, %r1543, 3;
	shf.l.wrap.b32 	%r1547, %r1543, %r1542, 3;
	mov.b64 	%rd1963, {%r1547, %r1546};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	shr.u64 	%rd1965, %rd1900, 6;
	xor.b64  	%rd1966, %rd1964, %rd1965;
	shf.r.wrap.b32 	%r1548, %r1205, %r1204, 1;
	shf.r.wrap.b32 	%r1549, %r1204, %r1205, 1;
	mov.b64 	%rd1967, {%r1549, %r1548};
	shf.r.wrap.b32 	%r1550, %r1205, %r1204, 8;
	shf.r.wrap.b32 	%r1551, %r1204, %r1205, 8;
	mov.b64 	%rd1968, {%r1551, %r1550};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	shr.u64 	%rd1970, %rd1419, 7;
	xor.b64  	%rd1971, %rd1969, %rd1970;
	add.s64 	%rd1972, %rd1971, %rd1382;
	add.s64 	%rd1973, %rd1972, %rd1715;
	add.s64 	%rd1974, %rd1973, %rd1966;
	add.s64 	%rd1975, %rd1974, %rd1839;
	xor.b64  	%rd1976, %rd1913, %rd1876;
	and.b64  	%rd1977, %rd1950, %rd1976;
	xor.b64  	%rd1978, %rd1977, %rd1876;
	add.s64 	%rd1979, %rd1975, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd1950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd1950;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 14;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 14;
	mov.b64 	%rd1980, {%r1555, %r1554};
	shf.r.wrap.b32 	%r1556, %r1553, %r1552, 18;
	shf.r.wrap.b32 	%r1557, %r1552, %r1553, 18;
	mov.b64 	%rd1981, {%r1557, %r1556};
	xor.b64  	%rd1982, %rd1980, %rd1981;
	shf.l.wrap.b32 	%r1558, %r1552, %r1553, 23;
	shf.l.wrap.b32 	%r1559, %r1553, %r1552, 23;
	mov.b64 	%rd1983, {%r1559, %r1558};
	xor.b64  	%rd1984, %rd1982, %rd1983;
	add.s64 	%rd1985, %rd1979, %rd1984;
	add.s64 	%rd1986, %rd1985, -2983346525034927856;
	add.s64 	%rd1987, %rd1986, %rd1850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd1961;
	}
	shf.r.wrap.b32 	%r1562, %r1561, %r1560, 28;
	shf.r.wrap.b32 	%r1563, %r1560, %r1561, 28;
	mov.b64 	%rd1988, {%r1563, %r1562};
	shf.l.wrap.b32 	%r1564, %r1560, %r1561, 30;
	shf.l.wrap.b32 	%r1565, %r1561, %r1560, 30;
	mov.b64 	%rd1989, {%r1565, %r1564};
	xor.b64  	%rd1990, %rd1988, %rd1989;
	shf.l.wrap.b32 	%r1566, %r1560, %r1561, 25;
	shf.l.wrap.b32 	%r1567, %r1561, %r1560, 25;
	mov.b64 	%rd1991, {%r1567, %r1566};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	and.b64  	%rd1993, %rd1961, %rd1924;
	or.b64  	%rd1994, %rd1961, %rd1924;
	and.b64  	%rd1995, %rd1994, %rd1887;
	or.b64  	%rd1996, %rd1995, %rd1993;
	add.s64 	%rd1997, %rd1996, %rd1992;
	add.s64 	%rd1998, %rd1997, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1568,%dummy}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1569}, %rd1937;
	}
	shf.r.wrap.b32 	%r1570, %r1569, %r1568, 19;
	shf.r.wrap.b32 	%r1571, %r1568, %r1569, 19;
	mov.b64 	%rd1999, {%r1571, %r1570};
	shf.l.wrap.b32 	%r1572, %r1568, %r1569, 3;
	shf.l.wrap.b32 	%r1573, %r1569, %r1568, 3;
	mov.b64 	%rd2000, {%r1573, %r1572};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	shr.u64 	%rd2002, %rd1937, 6;
	xor.b64  	%rd2003, %rd2001, %rd2002;
	shf.r.wrap.b32 	%r1574, %r1231, %r1230, 1;
	shf.r.wrap.b32 	%r1575, %r1230, %r1231, 1;
	mov.b64 	%rd2004, {%r1575, %r1574};
	shf.r.wrap.b32 	%r1576, %r1231, %r1230, 8;
	shf.r.wrap.b32 	%r1577, %r1230, %r1231, 8;
	mov.b64 	%rd2005, {%r1577, %r1576};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	shr.u64 	%rd2007, %rd1456, 7;
	xor.b64  	%rd2008, %rd2006, %rd2007;
	add.s64 	%rd2009, %rd2008, %rd1419;
	add.s64 	%rd2010, %rd2009, %rd1752;
	add.s64 	%rd2011, %rd2010, %rd2003;
	add.s64 	%rd2012, %rd2011, %rd1876;
	xor.b64  	%rd2013, %rd1950, %rd1913;
	and.b64  	%rd2014, %rd1987, %rd2013;
	xor.b64  	%rd2015, %rd2014, %rd1913;
	add.s64 	%rd2016, %rd2012, %rd2015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd1987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd1987;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 14;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 14;
	mov.b64 	%rd2017, {%r1581, %r1580};
	shf.r.wrap.b32 	%r1582, %r1579, %r1578, 18;
	shf.r.wrap.b32 	%r1583, %r1578, %r1579, 18;
	mov.b64 	%rd2018, {%r1583, %r1582};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	shf.l.wrap.b32 	%r1584, %r1578, %r1579, 23;
	shf.l.wrap.b32 	%r1585, %r1579, %r1578, 23;
	mov.b64 	%rd2020, {%r1585, %r1584};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	add.s64 	%rd2022, %rd2016, %rd2021;
	add.s64 	%rd2023, %rd2022, -860691631967231958;
	add.s64 	%rd2024, %rd2023, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd1998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd1998;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 28;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 28;
	mov.b64 	%rd2025, {%r1589, %r1588};
	shf.l.wrap.b32 	%r1590, %r1586, %r1587, 30;
	shf.l.wrap.b32 	%r1591, %r1587, %r1586, 30;
	mov.b64 	%rd2026, {%r1591, %r1590};
	xor.b64  	%rd2027, %rd2025, %rd2026;
	shf.l.wrap.b32 	%r1592, %r1586, %r1587, 25;
	shf.l.wrap.b32 	%r1593, %r1587, %r1586, 25;
	mov.b64 	%rd2028, {%r1593, %r1592};
	xor.b64  	%rd2029, %rd2027, %rd2028;
	and.b64  	%rd2030, %rd1998, %rd1961;
	or.b64  	%rd2031, %rd1998, %rd1961;
	and.b64  	%rd2032, %rd2031, %rd1924;
	or.b64  	%rd2033, %rd2032, %rd2030;
	add.s64 	%rd2034, %rd2033, %rd2029;
	add.s64 	%rd2035, %rd2034, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd1974;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 19;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 19;
	mov.b64 	%rd2036, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 3;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 3;
	mov.b64 	%rd2037, {%r1599, %r1598};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	shr.u64 	%rd2039, %rd1974, 6;
	xor.b64  	%rd2040, %rd2038, %rd2039;
	shf.r.wrap.b32 	%r1600, %r1257, %r1256, 1;
	shf.r.wrap.b32 	%r1601, %r1256, %r1257, 1;
	mov.b64 	%rd2041, {%r1601, %r1600};
	shf.r.wrap.b32 	%r1602, %r1257, %r1256, 8;
	shf.r.wrap.b32 	%r1603, %r1256, %r1257, 8;
	mov.b64 	%rd2042, {%r1603, %r1602};
	xor.b64  	%rd2043, %rd2041, %rd2042;
	shr.u64 	%rd2044, %rd1493, 7;
	xor.b64  	%rd2045, %rd2043, %rd2044;
	add.s64 	%rd2046, %rd2045, %rd1456;
	add.s64 	%rd2047, %rd2046, %rd1789;
	add.s64 	%rd2048, %rd2047, %rd2040;
	add.s64 	%rd2049, %rd2048, %rd1913;
	xor.b64  	%rd2050, %rd1987, %rd1950;
	and.b64  	%rd2051, %rd2024, %rd2050;
	xor.b64  	%rd2052, %rd2051, %rd1950;
	add.s64 	%rd2053, %rd2049, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd2024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd2024;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 14;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 14;
	mov.b64 	%rd2054, {%r1607, %r1606};
	shf.r.wrap.b32 	%r1608, %r1605, %r1604, 18;
	shf.r.wrap.b32 	%r1609, %r1604, %r1605, 18;
	mov.b64 	%rd2055, {%r1609, %r1608};
	xor.b64  	%rd2056, %rd2054, %rd2055;
	shf.l.wrap.b32 	%r1610, %r1604, %r1605, 23;
	shf.l.wrap.b32 	%r1611, %r1605, %r1604, 23;
	mov.b64 	%rd2057, {%r1611, %r1610};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	add.s64 	%rd2059, %rd2053, %rd2058;
	add.s64 	%rd2060, %rd2059, 1182934255886127544;
	add.s64 	%rd2061, %rd2060, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1612,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd2035;
	}
	shf.r.wrap.b32 	%r1614, %r1613, %r1612, 28;
	shf.r.wrap.b32 	%r1615, %r1612, %r1613, 28;
	mov.b64 	%rd2062, {%r1615, %r1614};
	shf.l.wrap.b32 	%r1616, %r1612, %r1613, 30;
	shf.l.wrap.b32 	%r1617, %r1613, %r1612, 30;
	mov.b64 	%rd2063, {%r1617, %r1616};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	shf.l.wrap.b32 	%r1618, %r1612, %r1613, 25;
	shf.l.wrap.b32 	%r1619, %r1613, %r1612, 25;
	mov.b64 	%rd2065, {%r1619, %r1618};
	xor.b64  	%rd2066, %rd2064, %rd2065;
	and.b64  	%rd2067, %rd2035, %rd1998;
	or.b64  	%rd2068, %rd2035, %rd1998;
	and.b64  	%rd2069, %rd2068, %rd1961;
	or.b64  	%rd2070, %rd2069, %rd2067;
	add.s64 	%rd2071, %rd2070, %rd2066;
	add.s64 	%rd2072, %rd2071, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1620,%dummy}, %rd2011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1621}, %rd2011;
	}
	shf.r.wrap.b32 	%r1622, %r1621, %r1620, 19;
	shf.r.wrap.b32 	%r1623, %r1620, %r1621, 19;
	mov.b64 	%rd2073, {%r1623, %r1622};
	shf.l.wrap.b32 	%r1624, %r1620, %r1621, 3;
	shf.l.wrap.b32 	%r1625, %r1621, %r1620, 3;
	mov.b64 	%rd2074, {%r1625, %r1624};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	shr.u64 	%rd2076, %rd2011, 6;
	xor.b64  	%rd2077, %rd2075, %rd2076;
	shf.r.wrap.b32 	%r1626, %r1283, %r1282, 1;
	shf.r.wrap.b32 	%r1627, %r1282, %r1283, 1;
	mov.b64 	%rd2078, {%r1627, %r1626};
	shf.r.wrap.b32 	%r1628, %r1283, %r1282, 8;
	shf.r.wrap.b32 	%r1629, %r1282, %r1283, 8;
	mov.b64 	%rd2079, {%r1629, %r1628};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	shr.u64 	%rd2081, %rd1530, 7;
	xor.b64  	%rd2082, %rd2080, %rd2081;
	add.s64 	%rd2083, %rd2082, %rd1493;
	add.s64 	%rd2084, %rd2083, %rd1826;
	add.s64 	%rd2085, %rd2084, %rd2077;
	add.s64 	%rd2086, %rd2085, %rd1950;
	xor.b64  	%rd2087, %rd2024, %rd1987;
	and.b64  	%rd2088, %rd2061, %rd2087;
	xor.b64  	%rd2089, %rd2088, %rd1987;
	add.s64 	%rd2090, %rd2086, %rd2089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1630,%dummy}, %rd2061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1631}, %rd2061;
	}
	shf.r.wrap.b32 	%r1632, %r1631, %r1630, 14;
	shf.r.wrap.b32 	%r1633, %r1630, %r1631, 14;
	mov.b64 	%rd2091, {%r1633, %r1632};
	shf.r.wrap.b32 	%r1634, %r1631, %r1630, 18;
	shf.r.wrap.b32 	%r1635, %r1630, %r1631, 18;
	mov.b64 	%rd2092, {%r1635, %r1634};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	shf.l.wrap.b32 	%r1636, %r1630, %r1631, 23;
	shf.l.wrap.b32 	%r1637, %r1631, %r1630, 23;
	mov.b64 	%rd2094, {%r1637, %r1636};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	add.s64 	%rd2096, %rd2090, %rd2095;
	add.s64 	%rd2097, %rd2096, 1847814050463011016;
	add.s64 	%rd2098, %rd2097, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd2072;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 28;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 28;
	mov.b64 	%rd2099, {%r1641, %r1640};
	shf.l.wrap.b32 	%r1642, %r1638, %r1639, 30;
	shf.l.wrap.b32 	%r1643, %r1639, %r1638, 30;
	mov.b64 	%rd2100, {%r1643, %r1642};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	shf.l.wrap.b32 	%r1644, %r1638, %r1639, 25;
	shf.l.wrap.b32 	%r1645, %r1639, %r1638, 25;
	mov.b64 	%rd2102, {%r1645, %r1644};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	and.b64  	%rd2104, %rd2072, %rd2035;
	or.b64  	%rd2105, %rd2072, %rd2035;
	and.b64  	%rd2106, %rd2105, %rd1998;
	or.b64  	%rd2107, %rd2106, %rd2104;
	add.s64 	%rd2108, %rd2107, %rd2103;
	add.s64 	%rd2109, %rd2108, %rd2097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1646,%dummy}, %rd2048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1647}, %rd2048;
	}
	shf.r.wrap.b32 	%r1648, %r1647, %r1646, 19;
	shf.r.wrap.b32 	%r1649, %r1646, %r1647, 19;
	mov.b64 	%rd2110, {%r1649, %r1648};
	shf.l.wrap.b32 	%r1650, %r1646, %r1647, 3;
	shf.l.wrap.b32 	%r1651, %r1647, %r1646, 3;
	mov.b64 	%rd2111, {%r1651, %r1650};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	shr.u64 	%rd2113, %rd2048, 6;
	xor.b64  	%rd2114, %rd2112, %rd2113;
	shf.r.wrap.b32 	%r1652, %r1309, %r1308, 1;
	shf.r.wrap.b32 	%r1653, %r1308, %r1309, 1;
	mov.b64 	%rd2115, {%r1653, %r1652};
	shf.r.wrap.b32 	%r1654, %r1309, %r1308, 8;
	shf.r.wrap.b32 	%r1655, %r1308, %r1309, 8;
	mov.b64 	%rd2116, {%r1655, %r1654};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	shr.u64 	%rd2118, %rd1567, 7;
	xor.b64  	%rd2119, %rd2117, %rd2118;
	add.s64 	%rd2120, %rd2119, %rd1530;
	add.s64 	%rd2121, %rd2120, %rd1863;
	add.s64 	%rd2122, %rd2121, %rd2114;
	add.s64 	%rd2123, %rd2122, %rd1987;
	xor.b64  	%rd2124, %rd2061, %rd2024;
	and.b64  	%rd2125, %rd2098, %rd2124;
	xor.b64  	%rd2126, %rd2125, %rd2024;
	add.s64 	%rd2127, %rd2123, %rd2126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2098;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 14;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 14;
	mov.b64 	%rd2128, {%r1659, %r1658};
	shf.r.wrap.b32 	%r1660, %r1657, %r1656, 18;
	shf.r.wrap.b32 	%r1661, %r1656, %r1657, 18;
	mov.b64 	%rd2129, {%r1661, %r1660};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 23;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 23;
	mov.b64 	%rd2131, {%r1663, %r1662};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	add.s64 	%rd2133, %rd2127, %rd2132;
	add.s64 	%rd2134, %rd2133, 2177327727835720531;
	add.s64 	%rd2135, %rd2134, %rd1998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2109;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 28;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 28;
	mov.b64 	%rd2136, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 30;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 30;
	mov.b64 	%rd2137, {%r1669, %r1668};
	xor.b64  	%rd2138, %rd2136, %rd2137;
	shf.l.wrap.b32 	%r1670, %r1664, %r1665, 25;
	shf.l.wrap.b32 	%r1671, %r1665, %r1664, 25;
	mov.b64 	%rd2139, {%r1671, %r1670};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	and.b64  	%rd2141, %rd2109, %rd2072;
	or.b64  	%rd2142, %rd2109, %rd2072;
	and.b64  	%rd2143, %rd2142, %rd2035;
	or.b64  	%rd2144, %rd2143, %rd2141;
	add.s64 	%rd2145, %rd2144, %rd2140;
	add.s64 	%rd2146, %rd2145, %rd2134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1672,%dummy}, %rd2085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2085;
	}
	shf.r.wrap.b32 	%r1674, %r1673, %r1672, 19;
	shf.r.wrap.b32 	%r1675, %r1672, %r1673, 19;
	mov.b64 	%rd2147, {%r1675, %r1674};
	shf.l.wrap.b32 	%r1676, %r1672, %r1673, 3;
	shf.l.wrap.b32 	%r1677, %r1673, %r1672, 3;
	mov.b64 	%rd2148, {%r1677, %r1676};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	shr.u64 	%rd2150, %rd2085, 6;
	xor.b64  	%rd2151, %rd2149, %rd2150;
	shf.r.wrap.b32 	%r1678, %r1335, %r1334, 1;
	shf.r.wrap.b32 	%r1679, %r1334, %r1335, 1;
	mov.b64 	%rd2152, {%r1679, %r1678};
	shf.r.wrap.b32 	%r1680, %r1335, %r1334, 8;
	shf.r.wrap.b32 	%r1681, %r1334, %r1335, 8;
	mov.b64 	%rd2153, {%r1681, %r1680};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	shr.u64 	%rd2155, %rd1604, 7;
	xor.b64  	%rd2156, %rd2154, %rd2155;
	add.s64 	%rd2157, %rd2156, %rd1567;
	add.s64 	%rd2158, %rd2157, %rd1900;
	add.s64 	%rd2159, %rd2158, %rd2151;
	add.s64 	%rd2160, %rd2159, %rd2024;
	xor.b64  	%rd2161, %rd2098, %rd2061;
	and.b64  	%rd2162, %rd2135, %rd2161;
	xor.b64  	%rd2163, %rd2162, %rd2061;
	add.s64 	%rd2164, %rd2160, %rd2163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1682,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1683}, %rd2135;
	}
	shf.r.wrap.b32 	%r1684, %r1683, %r1682, 14;
	shf.r.wrap.b32 	%r1685, %r1682, %r1683, 14;
	mov.b64 	%rd2165, {%r1685, %r1684};
	shf.r.wrap.b32 	%r1686, %r1683, %r1682, 18;
	shf.r.wrap.b32 	%r1687, %r1682, %r1683, 18;
	mov.b64 	%rd2166, {%r1687, %r1686};
	xor.b64  	%rd2167, %rd2165, %rd2166;
	shf.l.wrap.b32 	%r1688, %r1682, %r1683, 23;
	shf.l.wrap.b32 	%r1689, %r1683, %r1682, 23;
	mov.b64 	%rd2168, {%r1689, %r1688};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	add.s64 	%rd2170, %rd2164, %rd2169;
	add.s64 	%rd2171, %rd2170, 2830643537854262169;
	add.s64 	%rd2172, %rd2171, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1690,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1691}, %rd2146;
	}
	shf.r.wrap.b32 	%r1692, %r1691, %r1690, 28;
	shf.r.wrap.b32 	%r1693, %r1690, %r1691, 28;
	mov.b64 	%rd2173, {%r1693, %r1692};
	shf.l.wrap.b32 	%r1694, %r1690, %r1691, 30;
	shf.l.wrap.b32 	%r1695, %r1691, %r1690, 30;
	mov.b64 	%rd2174, {%r1695, %r1694};
	xor.b64  	%rd2175, %rd2173, %rd2174;
	shf.l.wrap.b32 	%r1696, %r1690, %r1691, 25;
	shf.l.wrap.b32 	%r1697, %r1691, %r1690, 25;
	mov.b64 	%rd2176, {%r1697, %r1696};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	and.b64  	%rd2178, %rd2146, %rd2109;
	or.b64  	%rd2179, %rd2146, %rd2109;
	and.b64  	%rd2180, %rd2179, %rd2072;
	or.b64  	%rd2181, %rd2180, %rd2178;
	add.s64 	%rd2182, %rd2181, %rd2177;
	add.s64 	%rd2183, %rd2182, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd2122;
	}
	shf.r.wrap.b32 	%r1700, %r1699, %r1698, 19;
	shf.r.wrap.b32 	%r1701, %r1698, %r1699, 19;
	mov.b64 	%rd2184, {%r1701, %r1700};
	shf.l.wrap.b32 	%r1702, %r1698, %r1699, 3;
	shf.l.wrap.b32 	%r1703, %r1699, %r1698, 3;
	mov.b64 	%rd2185, {%r1703, %r1702};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	shr.u64 	%rd2187, %rd2122, 6;
	xor.b64  	%rd2188, %rd2186, %rd2187;
	shf.r.wrap.b32 	%r1704, %r1361, %r1360, 1;
	shf.r.wrap.b32 	%r1705, %r1360, %r1361, 1;
	mov.b64 	%rd2189, {%r1705, %r1704};
	shf.r.wrap.b32 	%r1706, %r1361, %r1360, 8;
	shf.r.wrap.b32 	%r1707, %r1360, %r1361, 8;
	mov.b64 	%rd2190, {%r1707, %r1706};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	shr.u64 	%rd2192, %rd1641, 7;
	xor.b64  	%rd2193, %rd2191, %rd2192;
	add.s64 	%rd2194, %rd2193, %rd1604;
	add.s64 	%rd2195, %rd2194, %rd1937;
	add.s64 	%rd2196, %rd2195, %rd2188;
	add.s64 	%rd2197, %rd2196, %rd2061;
	xor.b64  	%rd2198, %rd2135, %rd2098;
	and.b64  	%rd2199, %rd2172, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2098;
	add.s64 	%rd2201, %rd2197, %rd2200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1708,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd2172;
	}
	shf.r.wrap.b32 	%r1710, %r1709, %r1708, 14;
	shf.r.wrap.b32 	%r1711, %r1708, %r1709, 14;
	mov.b64 	%rd2202, {%r1711, %r1710};
	shf.r.wrap.b32 	%r1712, %r1709, %r1708, 18;
	shf.r.wrap.b32 	%r1713, %r1708, %r1709, 18;
	mov.b64 	%rd2203, {%r1713, %r1712};
	xor.b64  	%rd2204, %rd2202, %rd2203;
	shf.l.wrap.b32 	%r1714, %r1708, %r1709, 23;
	shf.l.wrap.b32 	%r1715, %r1709, %r1708, 23;
	mov.b64 	%rd2205, {%r1715, %r1714};
	xor.b64  	%rd2206, %rd2204, %rd2205;
	add.s64 	%rd2207, %rd2201, %rd2206;
	add.s64 	%rd2208, %rd2207, 3796741975233480872;
	add.s64 	%rd2209, %rd2208, %rd2072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd2183;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 28;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 28;
	mov.b64 	%rd2210, {%r1719, %r1718};
	shf.l.wrap.b32 	%r1720, %r1716, %r1717, 30;
	shf.l.wrap.b32 	%r1721, %r1717, %r1716, 30;
	mov.b64 	%rd2211, {%r1721, %r1720};
	xor.b64  	%rd2212, %rd2210, %rd2211;
	shf.l.wrap.b32 	%r1722, %r1716, %r1717, 25;
	shf.l.wrap.b32 	%r1723, %r1717, %r1716, 25;
	mov.b64 	%rd2213, {%r1723, %r1722};
	xor.b64  	%rd2214, %rd2212, %rd2213;
	and.b64  	%rd2215, %rd2183, %rd2146;
	or.b64  	%rd2216, %rd2183, %rd2146;
	and.b64  	%rd2217, %rd2216, %rd2109;
	or.b64  	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd2218, %rd2214;
	add.s64 	%rd2220, %rd2219, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1724,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1725}, %rd2159;
	}
	shf.r.wrap.b32 	%r1726, %r1725, %r1724, 19;
	shf.r.wrap.b32 	%r1727, %r1724, %r1725, 19;
	mov.b64 	%rd2221, {%r1727, %r1726};
	shf.l.wrap.b32 	%r1728, %r1724, %r1725, 3;
	shf.l.wrap.b32 	%r1729, %r1725, %r1724, 3;
	mov.b64 	%rd2222, {%r1729, %r1728};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	shr.u64 	%rd2224, %rd2159, 6;
	xor.b64  	%rd2225, %rd2223, %rd2224;
	shf.r.wrap.b32 	%r1730, %r1387, %r1386, 1;
	shf.r.wrap.b32 	%r1731, %r1386, %r1387, 1;
	mov.b64 	%rd2226, {%r1731, %r1730};
	shf.r.wrap.b32 	%r1732, %r1387, %r1386, 8;
	shf.r.wrap.b32 	%r1733, %r1386, %r1387, 8;
	mov.b64 	%rd2227, {%r1733, %r1732};
	xor.b64  	%rd2228, %rd2226, %rd2227;
	shr.u64 	%rd2229, %rd1678, 7;
	xor.b64  	%rd2230, %rd2228, %rd2229;
	add.s64 	%rd2231, %rd2230, %rd1641;
	add.s64 	%rd2232, %rd2231, %rd1974;
	add.s64 	%rd2233, %rd2232, %rd2225;
	add.s64 	%rd2234, %rd2233, %rd2098;
	xor.b64  	%rd2235, %rd2172, %rd2135;
	and.b64  	%rd2236, %rd2209, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2135;
	add.s64 	%rd2238, %rd2234, %rd2237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd2209;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 14;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 14;
	mov.b64 	%rd2239, {%r1737, %r1736};
	shf.r.wrap.b32 	%r1738, %r1735, %r1734, 18;
	shf.r.wrap.b32 	%r1739, %r1734, %r1735, 18;
	mov.b64 	%rd2240, {%r1739, %r1738};
	xor.b64  	%rd2241, %rd2239, %rd2240;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 23;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 23;
	mov.b64 	%rd2242, {%r1741, %r1740};
	xor.b64  	%rd2243, %rd2241, %rd2242;
	add.s64 	%rd2244, %rd2238, %rd2243;
	add.s64 	%rd2245, %rd2244, 4115178125766777443;
	add.s64 	%rd2246, %rd2245, %rd2109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd2220;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 28;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 28;
	mov.b64 	%rd2247, {%r1745, %r1744};
	shf.l.wrap.b32 	%r1746, %r1742, %r1743, 30;
	shf.l.wrap.b32 	%r1747, %r1743, %r1742, 30;
	mov.b64 	%rd2248, {%r1747, %r1746};
	xor.b64  	%rd2249, %rd2247, %rd2248;
	shf.l.wrap.b32 	%r1748, %r1742, %r1743, 25;
	shf.l.wrap.b32 	%r1749, %r1743, %r1742, 25;
	mov.b64 	%rd2250, {%r1749, %r1748};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	and.b64  	%rd2252, %rd2220, %rd2183;
	or.b64  	%rd2253, %rd2220, %rd2183;
	and.b64  	%rd2254, %rd2253, %rd2146;
	or.b64  	%rd2255, %rd2254, %rd2252;
	add.s64 	%rd2256, %rd2255, %rd2251;
	add.s64 	%rd2257, %rd2256, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1750,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1751}, %rd2196;
	}
	shf.r.wrap.b32 	%r1752, %r1751, %r1750, 19;
	shf.r.wrap.b32 	%r1753, %r1750, %r1751, 19;
	mov.b64 	%rd2258, {%r1753, %r1752};
	shf.l.wrap.b32 	%r1754, %r1750, %r1751, 3;
	shf.l.wrap.b32 	%r1755, %r1751, %r1750, 3;
	mov.b64 	%rd2259, {%r1755, %r1754};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	shr.u64 	%rd2261, %rd2196, 6;
	xor.b64  	%rd2262, %rd2260, %rd2261;
	shf.r.wrap.b32 	%r1756, %r1413, %r1412, 1;
	shf.r.wrap.b32 	%r1757, %r1412, %r1413, 1;
	mov.b64 	%rd2263, {%r1757, %r1756};
	shf.r.wrap.b32 	%r1758, %r1413, %r1412, 8;
	shf.r.wrap.b32 	%r1759, %r1412, %r1413, 8;
	mov.b64 	%rd2264, {%r1759, %r1758};
	xor.b64  	%rd2265, %rd2263, %rd2264;
	shr.u64 	%rd2266, %rd1715, 7;
	xor.b64  	%rd2267, %rd2265, %rd2266;
	add.s64 	%rd2268, %rd2267, %rd1678;
	add.s64 	%rd2269, %rd2268, %rd2011;
	add.s64 	%rd2270, %rd2269, %rd2262;
	add.s64 	%rd2271, %rd2270, %rd2135;
	xor.b64  	%rd2272, %rd2209, %rd2172;
	and.b64  	%rd2273, %rd2246, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2172;
	add.s64 	%rd2275, %rd2271, %rd2274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2246;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 14;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 14;
	mov.b64 	%rd2276, {%r1763, %r1762};
	shf.r.wrap.b32 	%r1764, %r1761, %r1760, 18;
	shf.r.wrap.b32 	%r1765, %r1760, %r1761, 18;
	mov.b64 	%rd2277, {%r1765, %r1764};
	xor.b64  	%rd2278, %rd2276, %rd2277;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 23;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 23;
	mov.b64 	%rd2279, {%r1767, %r1766};
	xor.b64  	%rd2280, %rd2278, %rd2279;
	add.s64 	%rd2281, %rd2275, %rd2280;
	add.s64 	%rd2282, %rd2281, 5681478168544905931;
	add.s64 	%rd2283, %rd2282, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2257;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 28;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 28;
	mov.b64 	%rd2284, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 30;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 30;
	mov.b64 	%rd2285, {%r1773, %r1772};
	xor.b64  	%rd2286, %rd2284, %rd2285;
	shf.l.wrap.b32 	%r1774, %r1768, %r1769, 25;
	shf.l.wrap.b32 	%r1775, %r1769, %r1768, 25;
	mov.b64 	%rd2287, {%r1775, %r1774};
	xor.b64  	%rd2288, %rd2286, %rd2287;
	and.b64  	%rd2289, %rd2257, %rd2220;
	or.b64  	%rd2290, %rd2257, %rd2220;
	and.b64  	%rd2291, %rd2290, %rd2183;
	or.b64  	%rd2292, %rd2291, %rd2289;
	add.s64 	%rd2293, %rd2292, %rd2288;
	add.s64 	%rd2294, %rd2293, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd2233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2233;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 19;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 19;
	mov.b64 	%rd2295, {%r1779, %r1778};
	shf.l.wrap.b32 	%r1780, %r1776, %r1777, 3;
	shf.l.wrap.b32 	%r1781, %r1777, %r1776, 3;
	mov.b64 	%rd2296, {%r1781, %r1780};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	shr.u64 	%rd2298, %rd2233, 6;
	xor.b64  	%rd2299, %rd2297, %rd2298;
	shf.r.wrap.b32 	%r1782, %r1439, %r1438, 1;
	shf.r.wrap.b32 	%r1783, %r1438, %r1439, 1;
	mov.b64 	%rd2300, {%r1783, %r1782};
	shf.r.wrap.b32 	%r1784, %r1439, %r1438, 8;
	shf.r.wrap.b32 	%r1785, %r1438, %r1439, 8;
	mov.b64 	%rd2301, {%r1785, %r1784};
	xor.b64  	%rd2302, %rd2300, %rd2301;
	shr.u64 	%rd2303, %rd1752, 7;
	xor.b64  	%rd2304, %rd2302, %rd2303;
	add.s64 	%rd2305, %rd2304, %rd1715;
	add.s64 	%rd2306, %rd2305, %rd2048;
	add.s64 	%rd2307, %rd2306, %rd2299;
	add.s64 	%rd2308, %rd2307, %rd2172;
	xor.b64  	%rd2309, %rd2246, %rd2209;
	and.b64  	%rd2310, %rd2283, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2209;
	add.s64 	%rd2312, %rd2308, %rd2311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1787}, %rd2283;
	}
	shf.r.wrap.b32 	%r1788, %r1787, %r1786, 14;
	shf.r.wrap.b32 	%r1789, %r1786, %r1787, 14;
	mov.b64 	%rd2313, {%r1789, %r1788};
	shf.r.wrap.b32 	%r1790, %r1787, %r1786, 18;
	shf.r.wrap.b32 	%r1791, %r1786, %r1787, 18;
	mov.b64 	%rd2314, {%r1791, %r1790};
	xor.b64  	%rd2315, %rd2313, %rd2314;
	shf.l.wrap.b32 	%r1792, %r1786, %r1787, 23;
	shf.l.wrap.b32 	%r1793, %r1787, %r1786, 23;
	mov.b64 	%rd2316, {%r1793, %r1792};
	xor.b64  	%rd2317, %rd2315, %rd2316;
	add.s64 	%rd2318, %rd2312, %rd2317;
	add.s64 	%rd2319, %rd2318, 6601373596472566643;
	add.s64 	%rd2320, %rd2319, %rd2183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1794,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1795}, %rd2294;
	}
	shf.r.wrap.b32 	%r1796, %r1795, %r1794, 28;
	shf.r.wrap.b32 	%r1797, %r1794, %r1795, 28;
	mov.b64 	%rd2321, {%r1797, %r1796};
	shf.l.wrap.b32 	%r1798, %r1794, %r1795, 30;
	shf.l.wrap.b32 	%r1799, %r1795, %r1794, 30;
	mov.b64 	%rd2322, {%r1799, %r1798};
	xor.b64  	%rd2323, %rd2321, %rd2322;
	shf.l.wrap.b32 	%r1800, %r1794, %r1795, 25;
	shf.l.wrap.b32 	%r1801, %r1795, %r1794, 25;
	mov.b64 	%rd2324, {%r1801, %r1800};
	xor.b64  	%rd2325, %rd2323, %rd2324;
	and.b64  	%rd2326, %rd2294, %rd2257;
	or.b64  	%rd2327, %rd2294, %rd2257;
	and.b64  	%rd2328, %rd2327, %rd2220;
	or.b64  	%rd2329, %rd2328, %rd2326;
	add.s64 	%rd2330, %rd2329, %rd2325;
	add.s64 	%rd2331, %rd2330, %rd2319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1802,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1803}, %rd2270;
	}
	shf.r.wrap.b32 	%r1804, %r1803, %r1802, 19;
	shf.r.wrap.b32 	%r1805, %r1802, %r1803, 19;
	mov.b64 	%rd2332, {%r1805, %r1804};
	shf.l.wrap.b32 	%r1806, %r1802, %r1803, 3;
	shf.l.wrap.b32 	%r1807, %r1803, %r1802, 3;
	mov.b64 	%rd2333, {%r1807, %r1806};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	shr.u64 	%rd2335, %rd2270, 6;
	xor.b64  	%rd2336, %rd2334, %rd2335;
	shf.r.wrap.b32 	%r1808, %r1465, %r1464, 1;
	shf.r.wrap.b32 	%r1809, %r1464, %r1465, 1;
	mov.b64 	%rd2337, {%r1809, %r1808};
	shf.r.wrap.b32 	%r1810, %r1465, %r1464, 8;
	shf.r.wrap.b32 	%r1811, %r1464, %r1465, 8;
	mov.b64 	%rd2338, {%r1811, %r1810};
	xor.b64  	%rd2339, %rd2337, %rd2338;
	shr.u64 	%rd2340, %rd1789, 7;
	xor.b64  	%rd2341, %rd2339, %rd2340;
	add.s64 	%rd2342, %rd2341, %rd1752;
	add.s64 	%rd2343, %rd2342, %rd2085;
	add.s64 	%rd2344, %rd2343, %rd2336;
	add.s64 	%rd2345, %rd2344, %rd2209;
	xor.b64  	%rd2346, %rd2283, %rd2246;
	and.b64  	%rd2347, %rd2320, %rd2346;
	xor.b64  	%rd2348, %rd2347, %rd2246;
	add.s64 	%rd2349, %rd2345, %rd2348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1812,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd2320;
	}
	shf.r.wrap.b32 	%r1814, %r1813, %r1812, 14;
	shf.r.wrap.b32 	%r1815, %r1812, %r1813, 14;
	mov.b64 	%rd2350, {%r1815, %r1814};
	shf.r.wrap.b32 	%r1816, %r1813, %r1812, 18;
	shf.r.wrap.b32 	%r1817, %r1812, %r1813, 18;
	mov.b64 	%rd2351, {%r1817, %r1816};
	xor.b64  	%rd2352, %rd2350, %rd2351;
	shf.l.wrap.b32 	%r1818, %r1812, %r1813, 23;
	shf.l.wrap.b32 	%r1819, %r1813, %r1812, 23;
	mov.b64 	%rd2353, {%r1819, %r1818};
	xor.b64  	%rd2354, %rd2352, %rd2353;
	add.s64 	%rd2355, %rd2349, %rd2354;
	add.s64 	%rd2356, %rd2355, 7507060721942968483;
	add.s64 	%rd2357, %rd2356, %rd2220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1820,%dummy}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd2331;
	}
	shf.r.wrap.b32 	%r1822, %r1821, %r1820, 28;
	shf.r.wrap.b32 	%r1823, %r1820, %r1821, 28;
	mov.b64 	%rd2358, {%r1823, %r1822};
	shf.l.wrap.b32 	%r1824, %r1820, %r1821, 30;
	shf.l.wrap.b32 	%r1825, %r1821, %r1820, 30;
	mov.b64 	%rd2359, {%r1825, %r1824};
	xor.b64  	%rd2360, %rd2358, %rd2359;
	shf.l.wrap.b32 	%r1826, %r1820, %r1821, 25;
	shf.l.wrap.b32 	%r1827, %r1821, %r1820, 25;
	mov.b64 	%rd2361, {%r1827, %r1826};
	xor.b64  	%rd2362, %rd2360, %rd2361;
	and.b64  	%rd2363, %rd2331, %rd2294;
	or.b64  	%rd2364, %rd2331, %rd2294;
	and.b64  	%rd2365, %rd2364, %rd2257;
	or.b64  	%rd2366, %rd2365, %rd2363;
	add.s64 	%rd2367, %rd2366, %rd2362;
	add.s64 	%rd2368, %rd2367, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1828,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1829}, %rd2307;
	}
	shf.r.wrap.b32 	%r1830, %r1829, %r1828, 19;
	shf.r.wrap.b32 	%r1831, %r1828, %r1829, 19;
	mov.b64 	%rd2369, {%r1831, %r1830};
	shf.l.wrap.b32 	%r1832, %r1828, %r1829, 3;
	shf.l.wrap.b32 	%r1833, %r1829, %r1828, 3;
	mov.b64 	%rd2370, {%r1833, %r1832};
	xor.b64  	%rd2371, %rd2369, %rd2370;
	shr.u64 	%rd2372, %rd2307, 6;
	xor.b64  	%rd2373, %rd2371, %rd2372;
	shf.r.wrap.b32 	%r1834, %r1491, %r1490, 1;
	shf.r.wrap.b32 	%r1835, %r1490, %r1491, 1;
	mov.b64 	%rd2374, {%r1835, %r1834};
	shf.r.wrap.b32 	%r1836, %r1491, %r1490, 8;
	shf.r.wrap.b32 	%r1837, %r1490, %r1491, 8;
	mov.b64 	%rd2375, {%r1837, %r1836};
	xor.b64  	%rd2376, %rd2374, %rd2375;
	shr.u64 	%rd2377, %rd1826, 7;
	xor.b64  	%rd2378, %rd2376, %rd2377;
	add.s64 	%rd2379, %rd2378, %rd1789;
	add.s64 	%rd2380, %rd2379, %rd2122;
	add.s64 	%rd2381, %rd2380, %rd2373;
	add.s64 	%rd2382, %rd2381, %rd2246;
	xor.b64  	%rd2383, %rd2320, %rd2283;
	and.b64  	%rd2384, %rd2357, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2283;
	add.s64 	%rd2386, %rd2382, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd2357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd2357;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 14;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 14;
	mov.b64 	%rd2387, {%r1841, %r1840};
	shf.r.wrap.b32 	%r1842, %r1839, %r1838, 18;
	shf.r.wrap.b32 	%r1843, %r1838, %r1839, 18;
	mov.b64 	%rd2388, {%r1843, %r1842};
	xor.b64  	%rd2389, %rd2387, %rd2388;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 23;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 23;
	mov.b64 	%rd2390, {%r1845, %r1844};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	add.s64 	%rd2392, %rd2386, %rd2391;
	add.s64 	%rd2393, %rd2392, 8399075790359081724;
	add.s64 	%rd2394, %rd2393, %rd2257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd2368;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 28;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 28;
	mov.b64 	%rd2395, {%r1849, %r1848};
	shf.l.wrap.b32 	%r1850, %r1846, %r1847, 30;
	shf.l.wrap.b32 	%r1851, %r1847, %r1846, 30;
	mov.b64 	%rd2396, {%r1851, %r1850};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	shf.l.wrap.b32 	%r1852, %r1846, %r1847, 25;
	shf.l.wrap.b32 	%r1853, %r1847, %r1846, 25;
	mov.b64 	%rd2398, {%r1853, %r1852};
	xor.b64  	%rd2399, %rd2397, %rd2398;
	and.b64  	%rd2400, %rd2368, %rd2331;
	or.b64  	%rd2401, %rd2368, %rd2331;
	and.b64  	%rd2402, %rd2401, %rd2294;
	or.b64  	%rd2403, %rd2402, %rd2400;
	add.s64 	%rd2404, %rd2403, %rd2399;
	add.s64 	%rd2405, %rd2404, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd2344;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 19;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 19;
	mov.b64 	%rd2406, {%r1857, %r1856};
	shf.l.wrap.b32 	%r1858, %r1854, %r1855, 3;
	shf.l.wrap.b32 	%r1859, %r1855, %r1854, 3;
	mov.b64 	%rd2407, {%r1859, %r1858};
	xor.b64  	%rd2408, %rd2406, %rd2407;
	shr.u64 	%rd2409, %rd2344, 6;
	xor.b64  	%rd2410, %rd2408, %rd2409;
	shf.r.wrap.b32 	%r1860, %r1517, %r1516, 1;
	shf.r.wrap.b32 	%r1861, %r1516, %r1517, 1;
	mov.b64 	%rd2411, {%r1861, %r1860};
	shf.r.wrap.b32 	%r1862, %r1517, %r1516, 8;
	shf.r.wrap.b32 	%r1863, %r1516, %r1517, 8;
	mov.b64 	%rd2412, {%r1863, %r1862};
	xor.b64  	%rd2413, %rd2411, %rd2412;
	shr.u64 	%rd2414, %rd1863, 7;
	xor.b64  	%rd2415, %rd2413, %rd2414;
	add.s64 	%rd2416, %rd2415, %rd1826;
	add.s64 	%rd2417, %rd2416, %rd2159;
	add.s64 	%rd2418, %rd2417, %rd2410;
	add.s64 	%rd2419, %rd2418, %rd2283;
	xor.b64  	%rd2420, %rd2357, %rd2320;
	and.b64  	%rd2421, %rd2394, %rd2420;
	xor.b64  	%rd2422, %rd2421, %rd2320;
	add.s64 	%rd2423, %rd2419, %rd2422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1864,%dummy}, %rd2394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd2394;
	}
	shf.r.wrap.b32 	%r1866, %r1865, %r1864, 14;
	shf.r.wrap.b32 	%r1867, %r1864, %r1865, 14;
	mov.b64 	%rd2424, {%r1867, %r1866};
	shf.r.wrap.b32 	%r1868, %r1865, %r1864, 18;
	shf.r.wrap.b32 	%r1869, %r1864, %r1865, 18;
	mov.b64 	%rd2425, {%r1869, %r1868};
	xor.b64  	%rd2426, %rd2424, %rd2425;
	shf.l.wrap.b32 	%r1870, %r1864, %r1865, 23;
	shf.l.wrap.b32 	%r1871, %r1865, %r1864, 23;
	mov.b64 	%rd2427, {%r1871, %r1870};
	xor.b64  	%rd2428, %rd2426, %rd2427;
	add.s64 	%rd2429, %rd2423, %rd2428;
	add.s64 	%rd2430, %rd2429, 8693463985226723168;
	add.s64 	%rd2431, %rd2430, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1872,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1873}, %rd2405;
	}
	shf.r.wrap.b32 	%r1874, %r1873, %r1872, 28;
	shf.r.wrap.b32 	%r1875, %r1872, %r1873, 28;
	mov.b64 	%rd2432, {%r1875, %r1874};
	shf.l.wrap.b32 	%r1876, %r1872, %r1873, 30;
	shf.l.wrap.b32 	%r1877, %r1873, %r1872, 30;
	mov.b64 	%rd2433, {%r1877, %r1876};
	xor.b64  	%rd2434, %rd2432, %rd2433;
	shf.l.wrap.b32 	%r1878, %r1872, %r1873, 25;
	shf.l.wrap.b32 	%r1879, %r1873, %r1872, 25;
	mov.b64 	%rd2435, {%r1879, %r1878};
	xor.b64  	%rd2436, %rd2434, %rd2435;
	and.b64  	%rd2437, %rd2405, %rd2368;
	or.b64  	%rd2438, %rd2405, %rd2368;
	and.b64  	%rd2439, %rd2438, %rd2331;
	or.b64  	%rd2440, %rd2439, %rd2437;
	add.s64 	%rd2441, %rd2440, %rd2436;
	add.s64 	%rd2442, %rd2441, %rd2430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1880,%dummy}, %rd2381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1881}, %rd2381;
	}
	shf.r.wrap.b32 	%r1882, %r1881, %r1880, 19;
	shf.r.wrap.b32 	%r1883, %r1880, %r1881, 19;
	mov.b64 	%rd2443, {%r1883, %r1882};
	shf.l.wrap.b32 	%r1884, %r1880, %r1881, 3;
	shf.l.wrap.b32 	%r1885, %r1881, %r1880, 3;
	mov.b64 	%rd2444, {%r1885, %r1884};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	shr.u64 	%rd2446, %rd2381, 6;
	xor.b64  	%rd2447, %rd2445, %rd2446;
	shf.r.wrap.b32 	%r1886, %r1543, %r1542, 1;
	shf.r.wrap.b32 	%r1887, %r1542, %r1543, 1;
	mov.b64 	%rd2448, {%r1887, %r1886};
	shf.r.wrap.b32 	%r1888, %r1543, %r1542, 8;
	shf.r.wrap.b32 	%r1889, %r1542, %r1543, 8;
	mov.b64 	%rd2449, {%r1889, %r1888};
	xor.b64  	%rd2450, %rd2448, %rd2449;
	shr.u64 	%rd2451, %rd1900, 7;
	xor.b64  	%rd2452, %rd2450, %rd2451;
	add.s64 	%rd2453, %rd2452, %rd1863;
	add.s64 	%rd2454, %rd2453, %rd2196;
	add.s64 	%rd2455, %rd2454, %rd2447;
	add.s64 	%rd2456, %rd2455, %rd2320;
	xor.b64  	%rd2457, %rd2394, %rd2357;
	and.b64  	%rd2458, %rd2431, %rd2457;
	xor.b64  	%rd2459, %rd2458, %rd2357;
	add.s64 	%rd2460, %rd2456, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1891}, %rd2431;
	}
	shf.r.wrap.b32 	%r1892, %r1891, %r1890, 14;
	shf.r.wrap.b32 	%r1893, %r1890, %r1891, 14;
	mov.b64 	%rd2461, {%r1893, %r1892};
	shf.r.wrap.b32 	%r1894, %r1891, %r1890, 18;
	shf.r.wrap.b32 	%r1895, %r1890, %r1891, 18;
	mov.b64 	%rd2462, {%r1895, %r1894};
	xor.b64  	%rd2463, %rd2461, %rd2462;
	shf.l.wrap.b32 	%r1896, %r1890, %r1891, 23;
	shf.l.wrap.b32 	%r1897, %r1891, %r1890, 23;
	mov.b64 	%rd2464, {%r1897, %r1896};
	xor.b64  	%rd2465, %rd2463, %rd2464;
	add.s64 	%rd2466, %rd2460, %rd2465;
	add.s64 	%rd2467, %rd2466, -8878714635349349518;
	add.s64 	%rd2468, %rd2467, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1898,%dummy}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1899}, %rd2442;
	}
	shf.r.wrap.b32 	%r1900, %r1899, %r1898, 28;
	shf.r.wrap.b32 	%r1901, %r1898, %r1899, 28;
	mov.b64 	%rd2469, {%r1901, %r1900};
	shf.l.wrap.b32 	%r1902, %r1898, %r1899, 30;
	shf.l.wrap.b32 	%r1903, %r1899, %r1898, 30;
	mov.b64 	%rd2470, {%r1903, %r1902};
	xor.b64  	%rd2471, %rd2469, %rd2470;
	shf.l.wrap.b32 	%r1904, %r1898, %r1899, 25;
	shf.l.wrap.b32 	%r1905, %r1899, %r1898, 25;
	mov.b64 	%rd2472, {%r1905, %r1904};
	xor.b64  	%rd2473, %rd2471, %rd2472;
	and.b64  	%rd2474, %rd2442, %rd2405;
	or.b64  	%rd2475, %rd2442, %rd2405;
	and.b64  	%rd2476, %rd2475, %rd2368;
	or.b64  	%rd2477, %rd2476, %rd2474;
	add.s64 	%rd2478, %rd2477, %rd2473;
	add.s64 	%rd2479, %rd2478, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd2418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1907}, %rd2418;
	}
	shf.r.wrap.b32 	%r1908, %r1907, %r1906, 19;
	shf.r.wrap.b32 	%r1909, %r1906, %r1907, 19;
	mov.b64 	%rd2480, {%r1909, %r1908};
	shf.l.wrap.b32 	%r1910, %r1906, %r1907, 3;
	shf.l.wrap.b32 	%r1911, %r1907, %r1906, 3;
	mov.b64 	%rd2481, {%r1911, %r1910};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	shr.u64 	%rd2483, %rd2418, 6;
	xor.b64  	%rd2484, %rd2482, %rd2483;
	shf.r.wrap.b32 	%r1912, %r1569, %r1568, 1;
	shf.r.wrap.b32 	%r1913, %r1568, %r1569, 1;
	mov.b64 	%rd2485, {%r1913, %r1912};
	shf.r.wrap.b32 	%r1914, %r1569, %r1568, 8;
	shf.r.wrap.b32 	%r1915, %r1568, %r1569, 8;
	mov.b64 	%rd2486, {%r1915, %r1914};
	xor.b64  	%rd2487, %rd2485, %rd2486;
	shr.u64 	%rd2488, %rd1937, 7;
	xor.b64  	%rd2489, %rd2487, %rd2488;
	add.s64 	%rd2490, %rd2489, %rd1900;
	add.s64 	%rd2491, %rd2490, %rd2233;
	add.s64 	%rd2492, %rd2491, %rd2484;
	add.s64 	%rd2493, %rd2492, %rd2357;
	xor.b64  	%rd2494, %rd2431, %rd2394;
	and.b64  	%rd2495, %rd2468, %rd2494;
	xor.b64  	%rd2496, %rd2495, %rd2394;
	add.s64 	%rd2497, %rd2493, %rd2496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd2468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd2468;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 14;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 14;
	mov.b64 	%rd2498, {%r1919, %r1918};
	shf.r.wrap.b32 	%r1920, %r1917, %r1916, 18;
	shf.r.wrap.b32 	%r1921, %r1916, %r1917, 18;
	mov.b64 	%rd2499, {%r1921, %r1920};
	xor.b64  	%rd2500, %rd2498, %rd2499;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 23;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 23;
	mov.b64 	%rd2501, {%r1923, %r1922};
	xor.b64  	%rd2502, %rd2500, %rd2501;
	add.s64 	%rd2503, %rd2497, %rd2502;
	add.s64 	%rd2504, %rd2503, -8302665154208450068;
	add.s64 	%rd2505, %rd2504, %rd2368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2479;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 28;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 28;
	mov.b64 	%rd2506, {%r1927, %r1926};
	shf.l.wrap.b32 	%r1928, %r1924, %r1925, 30;
	shf.l.wrap.b32 	%r1929, %r1925, %r1924, 30;
	mov.b64 	%rd2507, {%r1929, %r1928};
	xor.b64  	%rd2508, %rd2506, %rd2507;
	shf.l.wrap.b32 	%r1930, %r1924, %r1925, 25;
	shf.l.wrap.b32 	%r1931, %r1925, %r1924, 25;
	mov.b64 	%rd2509, {%r1931, %r1930};
	xor.b64  	%rd2510, %rd2508, %rd2509;
	and.b64  	%rd2511, %rd2479, %rd2442;
	or.b64  	%rd2512, %rd2479, %rd2442;
	and.b64  	%rd2513, %rd2512, %rd2405;
	or.b64  	%rd2514, %rd2513, %rd2511;
	add.s64 	%rd2515, %rd2514, %rd2510;
	add.s64 	%rd2516, %rd2515, %rd2504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd2455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd2455;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 19;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 19;
	mov.b64 	%rd2517, {%r1935, %r1934};
	shf.l.wrap.b32 	%r1936, %r1932, %r1933, 3;
	shf.l.wrap.b32 	%r1937, %r1933, %r1932, 3;
	mov.b64 	%rd2518, {%r1937, %r1936};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	shr.u64 	%rd2520, %rd2455, 6;
	xor.b64  	%rd2521, %rd2519, %rd2520;
	shf.r.wrap.b32 	%r1938, %r1595, %r1594, 1;
	shf.r.wrap.b32 	%r1939, %r1594, %r1595, 1;
	mov.b64 	%rd2522, {%r1939, %r1938};
	shf.r.wrap.b32 	%r1940, %r1595, %r1594, 8;
	shf.r.wrap.b32 	%r1941, %r1594, %r1595, 8;
	mov.b64 	%rd2523, {%r1941, %r1940};
	xor.b64  	%rd2524, %rd2522, %rd2523;
	shr.u64 	%rd2525, %rd1974, 7;
	xor.b64  	%rd2526, %rd2524, %rd2525;
	add.s64 	%rd2527, %rd2526, %rd1937;
	add.s64 	%rd2528, %rd2527, %rd2270;
	add.s64 	%rd2529, %rd2528, %rd2521;
	add.s64 	%rd2530, %rd2529, %rd2394;
	xor.b64  	%rd2531, %rd2468, %rd2431;
	and.b64  	%rd2532, %rd2505, %rd2531;
	xor.b64  	%rd2533, %rd2532, %rd2431;
	add.s64 	%rd2534, %rd2530, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd2505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd2505;
	}
	shf.r.wrap.b32 	%r1944, %r1943, %r1942, 14;
	shf.r.wrap.b32 	%r1945, %r1942, %r1943, 14;
	mov.b64 	%rd2535, {%r1945, %r1944};
	shf.r.wrap.b32 	%r1946, %r1943, %r1942, 18;
	shf.r.wrap.b32 	%r1947, %r1942, %r1943, 18;
	mov.b64 	%rd2536, {%r1947, %r1946};
	xor.b64  	%rd2537, %rd2535, %rd2536;
	shf.l.wrap.b32 	%r1948, %r1942, %r1943, 23;
	shf.l.wrap.b32 	%r1949, %r1943, %r1942, 23;
	mov.b64 	%rd2538, {%r1949, %r1948};
	xor.b64  	%rd2539, %rd2537, %rd2538;
	add.s64 	%rd2540, %rd2534, %rd2539;
	add.s64 	%rd2541, %rd2540, -8016688836872298968;
	add.s64 	%rd2542, %rd2541, %rd2405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd2516;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 28;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 28;
	mov.b64 	%rd2543, {%r1953, %r1952};
	shf.l.wrap.b32 	%r1954, %r1950, %r1951, 30;
	shf.l.wrap.b32 	%r1955, %r1951, %r1950, 30;
	mov.b64 	%rd2544, {%r1955, %r1954};
	xor.b64  	%rd2545, %rd2543, %rd2544;
	shf.l.wrap.b32 	%r1956, %r1950, %r1951, 25;
	shf.l.wrap.b32 	%r1957, %r1951, %r1950, 25;
	mov.b64 	%rd2546, {%r1957, %r1956};
	xor.b64  	%rd2547, %rd2545, %rd2546;
	and.b64  	%rd2548, %rd2516, %rd2479;
	or.b64  	%rd2549, %rd2516, %rd2479;
	and.b64  	%rd2550, %rd2549, %rd2442;
	or.b64  	%rd2551, %rd2550, %rd2548;
	add.s64 	%rd2552, %rd2551, %rd2547;
	add.s64 	%rd2553, %rd2552, %rd2541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1958,%dummy}, %rd2492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1959}, %rd2492;
	}
	shf.r.wrap.b32 	%r1960, %r1959, %r1958, 19;
	shf.r.wrap.b32 	%r1961, %r1958, %r1959, 19;
	mov.b64 	%rd2554, {%r1961, %r1960};
	shf.l.wrap.b32 	%r1962, %r1958, %r1959, 3;
	shf.l.wrap.b32 	%r1963, %r1959, %r1958, 3;
	mov.b64 	%rd2555, {%r1963, %r1962};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	shr.u64 	%rd2557, %rd2492, 6;
	xor.b64  	%rd2558, %rd2556, %rd2557;
	shf.r.wrap.b32 	%r1964, %r1621, %r1620, 1;
	shf.r.wrap.b32 	%r1965, %r1620, %r1621, 1;
	mov.b64 	%rd2559, {%r1965, %r1964};
	shf.r.wrap.b32 	%r1966, %r1621, %r1620, 8;
	shf.r.wrap.b32 	%r1967, %r1620, %r1621, 8;
	mov.b64 	%rd2560, {%r1967, %r1966};
	xor.b64  	%rd2561, %rd2559, %rd2560;
	shr.u64 	%rd2562, %rd2011, 7;
	xor.b64  	%rd2563, %rd2561, %rd2562;
	add.s64 	%rd2564, %rd2563, %rd1974;
	add.s64 	%rd2565, %rd2564, %rd2307;
	add.s64 	%rd2566, %rd2565, %rd2558;
	add.s64 	%rd2567, %rd2566, %rd2431;
	xor.b64  	%rd2568, %rd2505, %rd2468;
	and.b64  	%rd2569, %rd2542, %rd2568;
	xor.b64  	%rd2570, %rd2569, %rd2468;
	add.s64 	%rd2571, %rd2567, %rd2570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1968,%dummy}, %rd2542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd2542;
	}
	shf.r.wrap.b32 	%r1970, %r1969, %r1968, 14;
	shf.r.wrap.b32 	%r1971, %r1968, %r1969, 14;
	mov.b64 	%rd2572, {%r1971, %r1970};
	shf.r.wrap.b32 	%r1972, %r1969, %r1968, 18;
	shf.r.wrap.b32 	%r1973, %r1968, %r1969, 18;
	mov.b64 	%rd2573, {%r1973, %r1972};
	xor.b64  	%rd2574, %rd2572, %rd2573;
	shf.l.wrap.b32 	%r1974, %r1968, %r1969, 23;
	shf.l.wrap.b32 	%r1975, %r1969, %r1968, 23;
	mov.b64 	%rd2575, {%r1975, %r1974};
	xor.b64  	%rd2576, %rd2574, %rd2575;
	add.s64 	%rd2577, %rd2571, %rd2576;
	add.s64 	%rd2578, %rd2577, -6606660893046293015;
	add.s64 	%rd2579, %rd2578, %rd2442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1976,%dummy}, %rd2553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd2553;
	}
	shf.r.wrap.b32 	%r1978, %r1977, %r1976, 28;
	shf.r.wrap.b32 	%r1979, %r1976, %r1977, 28;
	mov.b64 	%rd2580, {%r1979, %r1978};
	shf.l.wrap.b32 	%r1980, %r1976, %r1977, 30;
	shf.l.wrap.b32 	%r1981, %r1977, %r1976, 30;
	mov.b64 	%rd2581, {%r1981, %r1980};
	xor.b64  	%rd2582, %rd2580, %rd2581;
	shf.l.wrap.b32 	%r1982, %r1976, %r1977, 25;
	shf.l.wrap.b32 	%r1983, %r1977, %r1976, 25;
	mov.b64 	%rd2583, {%r1983, %r1982};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	and.b64  	%rd2585, %rd2553, %rd2516;
	or.b64  	%rd2586, %rd2553, %rd2516;
	and.b64  	%rd2587, %rd2586, %rd2479;
	or.b64  	%rd2588, %rd2587, %rd2585;
	add.s64 	%rd2589, %rd2588, %rd2584;
	add.s64 	%rd2590, %rd2589, %rd2578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1984,%dummy}, %rd2529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1985}, %rd2529;
	}
	shf.r.wrap.b32 	%r1986, %r1985, %r1984, 19;
	shf.r.wrap.b32 	%r1987, %r1984, %r1985, 19;
	mov.b64 	%rd2591, {%r1987, %r1986};
	shf.l.wrap.b32 	%r1988, %r1984, %r1985, 3;
	shf.l.wrap.b32 	%r1989, %r1985, %r1984, 3;
	mov.b64 	%rd2592, {%r1989, %r1988};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	shr.u64 	%rd2594, %rd2529, 6;
	xor.b64  	%rd2595, %rd2593, %rd2594;
	shf.r.wrap.b32 	%r1990, %r1647, %r1646, 1;
	shf.r.wrap.b32 	%r1991, %r1646, %r1647, 1;
	mov.b64 	%rd2596, {%r1991, %r1990};
	shf.r.wrap.b32 	%r1992, %r1647, %r1646, 8;
	shf.r.wrap.b32 	%r1993, %r1646, %r1647, 8;
	mov.b64 	%rd2597, {%r1993, %r1992};
	xor.b64  	%rd2598, %rd2596, %rd2597;
	shr.u64 	%rd2599, %rd2048, 7;
	xor.b64  	%rd2600, %rd2598, %rd2599;
	add.s64 	%rd2601, %rd2600, %rd2011;
	add.s64 	%rd2602, %rd2601, %rd2344;
	add.s64 	%rd2603, %rd2602, %rd2595;
	add.s64 	%rd2604, %rd2603, %rd2468;
	xor.b64  	%rd2605, %rd2542, %rd2505;
	and.b64  	%rd2606, %rd2579, %rd2605;
	xor.b64  	%rd2607, %rd2606, %rd2505;
	add.s64 	%rd2608, %rd2604, %rd2607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd2579;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 14;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 14;
	mov.b64 	%rd2609, {%r1997, %r1996};
	shf.r.wrap.b32 	%r1998, %r1995, %r1994, 18;
	shf.r.wrap.b32 	%r1999, %r1994, %r1995, 18;
	mov.b64 	%rd2610, {%r1999, %r1998};
	xor.b64  	%rd2611, %rd2609, %rd2610;
	shf.l.wrap.b32 	%r2000, %r1994, %r1995, 23;
	shf.l.wrap.b32 	%r2001, %r1995, %r1994, 23;
	mov.b64 	%rd2612, {%r2001, %r2000};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	add.s64 	%rd2614, %rd2608, %rd2613;
	add.s64 	%rd2615, %rd2614, -4685533653050689259;
	add.s64 	%rd2616, %rd2615, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd2590;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 28;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 28;
	mov.b64 	%rd2617, {%r2005, %r2004};
	shf.l.wrap.b32 	%r2006, %r2002, %r2003, 30;
	shf.l.wrap.b32 	%r2007, %r2003, %r2002, 30;
	mov.b64 	%rd2618, {%r2007, %r2006};
	xor.b64  	%rd2619, %rd2617, %rd2618;
	shf.l.wrap.b32 	%r2008, %r2002, %r2003, 25;
	shf.l.wrap.b32 	%r2009, %r2003, %r2002, 25;
	mov.b64 	%rd2620, {%r2009, %r2008};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	and.b64  	%rd2622, %rd2590, %rd2553;
	or.b64  	%rd2623, %rd2590, %rd2553;
	and.b64  	%rd2624, %rd2623, %rd2516;
	or.b64  	%rd2625, %rd2624, %rd2622;
	add.s64 	%rd2626, %rd2625, %rd2621;
	add.s64 	%rd2627, %rd2626, %rd2615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd2566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd2566;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 19;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 19;
	mov.b64 	%rd2628, {%r2013, %r2012};
	shf.l.wrap.b32 	%r2014, %r2010, %r2011, 3;
	shf.l.wrap.b32 	%r2015, %r2011, %r2010, 3;
	mov.b64 	%rd2629, {%r2015, %r2014};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	shr.u64 	%rd2631, %rd2566, 6;
	xor.b64  	%rd2632, %rd2630, %rd2631;
	shf.r.wrap.b32 	%r2016, %r1673, %r1672, 1;
	shf.r.wrap.b32 	%r2017, %r1672, %r1673, 1;
	mov.b64 	%rd2633, {%r2017, %r2016};
	shf.r.wrap.b32 	%r2018, %r1673, %r1672, 8;
	shf.r.wrap.b32 	%r2019, %r1672, %r1673, 8;
	mov.b64 	%rd2634, {%r2019, %r2018};
	xor.b64  	%rd2635, %rd2633, %rd2634;
	shr.u64 	%rd2636, %rd2085, 7;
	xor.b64  	%rd2637, %rd2635, %rd2636;
	add.s64 	%rd2638, %rd2637, %rd2048;
	add.s64 	%rd2639, %rd2638, %rd2381;
	add.s64 	%rd2640, %rd2639, %rd2632;
	add.s64 	%rd2641, %rd2640, %rd2505;
	xor.b64  	%rd2642, %rd2579, %rd2542;
	and.b64  	%rd2643, %rd2616, %rd2642;
	xor.b64  	%rd2644, %rd2643, %rd2542;
	add.s64 	%rd2645, %rd2641, %rd2644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd2616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd2616;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 14;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 14;
	mov.b64 	%rd2646, {%r2023, %r2022};
	shf.r.wrap.b32 	%r2024, %r2021, %r2020, 18;
	shf.r.wrap.b32 	%r2025, %r2020, %r2021, 18;
	mov.b64 	%rd2647, {%r2025, %r2024};
	xor.b64  	%rd2648, %rd2646, %rd2647;
	shf.l.wrap.b32 	%r2026, %r2020, %r2021, 23;
	shf.l.wrap.b32 	%r2027, %r2021, %r2020, 23;
	mov.b64 	%rd2649, {%r2027, %r2026};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	add.s64 	%rd2651, %rd2645, %rd2650;
	add.s64 	%rd2652, %rd2651, -4147400797238176981;
	add.s64 	%rd2653, %rd2652, %rd2516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd2627;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 28;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 28;
	mov.b64 	%rd2654, {%r2031, %r2030};
	shf.l.wrap.b32 	%r2032, %r2028, %r2029, 30;
	shf.l.wrap.b32 	%r2033, %r2029, %r2028, 30;
	mov.b64 	%rd2655, {%r2033, %r2032};
	xor.b64  	%rd2656, %rd2654, %rd2655;
	shf.l.wrap.b32 	%r2034, %r2028, %r2029, 25;
	shf.l.wrap.b32 	%r2035, %r2029, %r2028, 25;
	mov.b64 	%rd2657, {%r2035, %r2034};
	xor.b64  	%rd2658, %rd2656, %rd2657;
	and.b64  	%rd2659, %rd2627, %rd2590;
	or.b64  	%rd2660, %rd2627, %rd2590;
	and.b64  	%rd2661, %rd2660, %rd2553;
	or.b64  	%rd2662, %rd2661, %rd2659;
	add.s64 	%rd2663, %rd2662, %rd2658;
	add.s64 	%rd2664, %rd2663, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2037}, %rd2603;
	}
	shf.r.wrap.b32 	%r2038, %r2037, %r2036, 19;
	shf.r.wrap.b32 	%r2039, %r2036, %r2037, 19;
	mov.b64 	%rd2665, {%r2039, %r2038};
	shf.l.wrap.b32 	%r2040, %r2036, %r2037, 3;
	shf.l.wrap.b32 	%r2041, %r2037, %r2036, 3;
	mov.b64 	%rd2666, {%r2041, %r2040};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	shr.u64 	%rd2668, %rd2603, 6;
	xor.b64  	%rd2669, %rd2667, %rd2668;
	shf.r.wrap.b32 	%r2042, %r1699, %r1698, 1;
	shf.r.wrap.b32 	%r2043, %r1698, %r1699, 1;
	mov.b64 	%rd2670, {%r2043, %r2042};
	shf.r.wrap.b32 	%r2044, %r1699, %r1698, 8;
	shf.r.wrap.b32 	%r2045, %r1698, %r1699, 8;
	mov.b64 	%rd2671, {%r2045, %r2044};
	xor.b64  	%rd2672, %rd2670, %rd2671;
	shr.u64 	%rd2673, %rd2122, 7;
	xor.b64  	%rd2674, %rd2672, %rd2673;
	add.s64 	%rd2675, %rd2674, %rd2085;
	add.s64 	%rd2676, %rd2675, %rd2418;
	add.s64 	%rd2677, %rd2676, %rd2669;
	add.s64 	%rd2678, %rd2677, %rd2542;
	xor.b64  	%rd2679, %rd2616, %rd2579;
	and.b64  	%rd2680, %rd2653, %rd2679;
	xor.b64  	%rd2681, %rd2680, %rd2579;
	add.s64 	%rd2682, %rd2678, %rd2681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2046,%dummy}, %rd2653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2047}, %rd2653;
	}
	shf.r.wrap.b32 	%r2048, %r2047, %r2046, 14;
	shf.r.wrap.b32 	%r2049, %r2046, %r2047, 14;
	mov.b64 	%rd2683, {%r2049, %r2048};
	shf.r.wrap.b32 	%r2050, %r2047, %r2046, 18;
	shf.r.wrap.b32 	%r2051, %r2046, %r2047, 18;
	mov.b64 	%rd2684, {%r2051, %r2050};
	xor.b64  	%rd2685, %rd2683, %rd2684;
	shf.l.wrap.b32 	%r2052, %r2046, %r2047, 23;
	shf.l.wrap.b32 	%r2053, %r2047, %r2046, 23;
	mov.b64 	%rd2686, {%r2053, %r2052};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	add.s64 	%rd2688, %rd2682, %rd2687;
	add.s64 	%rd2689, %rd2688, -3880063495543823972;
	add.s64 	%rd2690, %rd2689, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd2664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2055}, %rd2664;
	}
	shf.r.wrap.b32 	%r2056, %r2055, %r2054, 28;
	shf.r.wrap.b32 	%r2057, %r2054, %r2055, 28;
	mov.b64 	%rd2691, {%r2057, %r2056};
	shf.l.wrap.b32 	%r2058, %r2054, %r2055, 30;
	shf.l.wrap.b32 	%r2059, %r2055, %r2054, 30;
	mov.b64 	%rd2692, {%r2059, %r2058};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	shf.l.wrap.b32 	%r2060, %r2054, %r2055, 25;
	shf.l.wrap.b32 	%r2061, %r2055, %r2054, 25;
	mov.b64 	%rd2694, {%r2061, %r2060};
	xor.b64  	%rd2695, %rd2693, %rd2694;
	and.b64  	%rd2696, %rd2664, %rd2627;
	or.b64  	%rd2697, %rd2664, %rd2627;
	and.b64  	%rd2698, %rd2697, %rd2590;
	or.b64  	%rd2699, %rd2698, %rd2696;
	add.s64 	%rd2700, %rd2699, %rd2695;
	add.s64 	%rd2701, %rd2700, %rd2689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2062,%dummy}, %rd2640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2063}, %rd2640;
	}
	shf.r.wrap.b32 	%r2064, %r2063, %r2062, 19;
	shf.r.wrap.b32 	%r2065, %r2062, %r2063, 19;
	mov.b64 	%rd2702, {%r2065, %r2064};
	shf.l.wrap.b32 	%r2066, %r2062, %r2063, 3;
	shf.l.wrap.b32 	%r2067, %r2063, %r2062, 3;
	mov.b64 	%rd2703, {%r2067, %r2066};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	shr.u64 	%rd2705, %rd2640, 6;
	xor.b64  	%rd2706, %rd2704, %rd2705;
	shf.r.wrap.b32 	%r2068, %r1725, %r1724, 1;
	shf.r.wrap.b32 	%r2069, %r1724, %r1725, 1;
	mov.b64 	%rd2707, {%r2069, %r2068};
	shf.r.wrap.b32 	%r2070, %r1725, %r1724, 8;
	shf.r.wrap.b32 	%r2071, %r1724, %r1725, 8;
	mov.b64 	%rd2708, {%r2071, %r2070};
	xor.b64  	%rd2709, %rd2707, %rd2708;
	shr.u64 	%rd2710, %rd2159, 7;
	xor.b64  	%rd2711, %rd2709, %rd2710;
	add.s64 	%rd2712, %rd2711, %rd2122;
	add.s64 	%rd2713, %rd2712, %rd2455;
	add.s64 	%rd2714, %rd2713, %rd2706;
	add.s64 	%rd2715, %rd2714, %rd2579;
	xor.b64  	%rd2716, %rd2653, %rd2616;
	and.b64  	%rd2717, %rd2690, %rd2716;
	xor.b64  	%rd2718, %rd2717, %rd2616;
	add.s64 	%rd2719, %rd2715, %rd2718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2072,%dummy}, %rd2690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2073}, %rd2690;
	}
	shf.r.wrap.b32 	%r2074, %r2073, %r2072, 14;
	shf.r.wrap.b32 	%r2075, %r2072, %r2073, 14;
	mov.b64 	%rd2720, {%r2075, %r2074};
	shf.r.wrap.b32 	%r2076, %r2073, %r2072, 18;
	shf.r.wrap.b32 	%r2077, %r2072, %r2073, 18;
	mov.b64 	%rd2721, {%r2077, %r2076};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	shf.l.wrap.b32 	%r2078, %r2072, %r2073, 23;
	shf.l.wrap.b32 	%r2079, %r2073, %r2072, 23;
	mov.b64 	%rd2723, {%r2079, %r2078};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	add.s64 	%rd2725, %rd2719, %rd2724;
	add.s64 	%rd2726, %rd2725, -3348786107499101689;
	add.s64 	%rd2727, %rd2726, %rd2590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd2701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd2701;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 28;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 28;
	mov.b64 	%rd2728, {%r2083, %r2082};
	shf.l.wrap.b32 	%r2084, %r2080, %r2081, 30;
	shf.l.wrap.b32 	%r2085, %r2081, %r2080, 30;
	mov.b64 	%rd2729, {%r2085, %r2084};
	xor.b64  	%rd2730, %rd2728, %rd2729;
	shf.l.wrap.b32 	%r2086, %r2080, %r2081, 25;
	shf.l.wrap.b32 	%r2087, %r2081, %r2080, 25;
	mov.b64 	%rd2731, {%r2087, %r2086};
	xor.b64  	%rd2732, %rd2730, %rd2731;
	and.b64  	%rd2733, %rd2701, %rd2664;
	or.b64  	%rd2734, %rd2701, %rd2664;
	and.b64  	%rd2735, %rd2734, %rd2627;
	or.b64  	%rd2736, %rd2735, %rd2733;
	add.s64 	%rd2737, %rd2736, %rd2732;
	add.s64 	%rd2738, %rd2737, %rd2726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2088,%dummy}, %rd2677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2089}, %rd2677;
	}
	shf.r.wrap.b32 	%r2090, %r2089, %r2088, 19;
	shf.r.wrap.b32 	%r2091, %r2088, %r2089, 19;
	mov.b64 	%rd2739, {%r2091, %r2090};
	shf.l.wrap.b32 	%r2092, %r2088, %r2089, 3;
	shf.l.wrap.b32 	%r2093, %r2089, %r2088, 3;
	mov.b64 	%rd2740, {%r2093, %r2092};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	shr.u64 	%rd2742, %rd2677, 6;
	xor.b64  	%rd2743, %rd2741, %rd2742;
	shf.r.wrap.b32 	%r2094, %r1751, %r1750, 1;
	shf.r.wrap.b32 	%r2095, %r1750, %r1751, 1;
	mov.b64 	%rd2744, {%r2095, %r2094};
	shf.r.wrap.b32 	%r2096, %r1751, %r1750, 8;
	shf.r.wrap.b32 	%r2097, %r1750, %r1751, 8;
	mov.b64 	%rd2745, {%r2097, %r2096};
	xor.b64  	%rd2746, %rd2744, %rd2745;
	shr.u64 	%rd2747, %rd2196, 7;
	xor.b64  	%rd2748, %rd2746, %rd2747;
	add.s64 	%rd2749, %rd2748, %rd2159;
	add.s64 	%rd2750, %rd2749, %rd2492;
	add.s64 	%rd2751, %rd2750, %rd2743;
	add.s64 	%rd2752, %rd2751, %rd2616;
	xor.b64  	%rd2753, %rd2690, %rd2653;
	and.b64  	%rd2754, %rd2727, %rd2753;
	xor.b64  	%rd2755, %rd2754, %rd2653;
	add.s64 	%rd2756, %rd2752, %rd2755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd2727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd2727;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 14;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 14;
	mov.b64 	%rd2757, {%r2101, %r2100};
	shf.r.wrap.b32 	%r2102, %r2099, %r2098, 18;
	shf.r.wrap.b32 	%r2103, %r2098, %r2099, 18;
	mov.b64 	%rd2758, {%r2103, %r2102};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 23;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 23;
	mov.b64 	%rd2760, {%r2105, %r2104};
	xor.b64  	%rd2761, %rd2759, %rd2760;
	add.s64 	%rd2762, %rd2756, %rd2761;
	add.s64 	%rd2763, %rd2762, -1523767162380948706;
	add.s64 	%rd2764, %rd2763, %rd2627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd2738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd2738;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 28;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 28;
	mov.b64 	%rd2765, {%r2109, %r2108};
	shf.l.wrap.b32 	%r2110, %r2106, %r2107, 30;
	shf.l.wrap.b32 	%r2111, %r2107, %r2106, 30;
	mov.b64 	%rd2766, {%r2111, %r2110};
	xor.b64  	%rd2767, %rd2765, %rd2766;
	shf.l.wrap.b32 	%r2112, %r2106, %r2107, 25;
	shf.l.wrap.b32 	%r2113, %r2107, %r2106, 25;
	mov.b64 	%rd2768, {%r2113, %r2112};
	xor.b64  	%rd2769, %rd2767, %rd2768;
	and.b64  	%rd2770, %rd2738, %rd2701;
	or.b64  	%rd2771, %rd2738, %rd2701;
	and.b64  	%rd2772, %rd2771, %rd2664;
	or.b64  	%rd2773, %rd2772, %rd2770;
	add.s64 	%rd2774, %rd2773, %rd2769;
	add.s64 	%rd2775, %rd2774, %rd2763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd2714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd2714;
	}
	shf.r.wrap.b32 	%r2116, %r2115, %r2114, 19;
	shf.r.wrap.b32 	%r2117, %r2114, %r2115, 19;
	mov.b64 	%rd2776, {%r2117, %r2116};
	shf.l.wrap.b32 	%r2118, %r2114, %r2115, 3;
	shf.l.wrap.b32 	%r2119, %r2115, %r2114, 3;
	mov.b64 	%rd2777, {%r2119, %r2118};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	shr.u64 	%rd2779, %rd2714, 6;
	xor.b64  	%rd2780, %rd2778, %rd2779;
	shf.r.wrap.b32 	%r2120, %r1777, %r1776, 1;
	shf.r.wrap.b32 	%r2121, %r1776, %r1777, 1;
	mov.b64 	%rd2781, {%r2121, %r2120};
	shf.r.wrap.b32 	%r2122, %r1777, %r1776, 8;
	shf.r.wrap.b32 	%r2123, %r1776, %r1777, 8;
	mov.b64 	%rd2782, {%r2123, %r2122};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	shr.u64 	%rd2784, %rd2233, 7;
	xor.b64  	%rd2785, %rd2783, %rd2784;
	add.s64 	%rd2786, %rd2785, %rd2196;
	add.s64 	%rd2787, %rd2786, %rd2529;
	add.s64 	%rd2788, %rd2787, %rd2780;
	add.s64 	%rd2789, %rd2788, %rd2653;
	xor.b64  	%rd2790, %rd2727, %rd2690;
	and.b64  	%rd2791, %rd2764, %rd2790;
	xor.b64  	%rd2792, %rd2791, %rd2690;
	add.s64 	%rd2793, %rd2789, %rd2792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2124,%dummy}, %rd2764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2125}, %rd2764;
	}
	shf.r.wrap.b32 	%r2126, %r2125, %r2124, 14;
	shf.r.wrap.b32 	%r2127, %r2124, %r2125, 14;
	mov.b64 	%rd2794, {%r2127, %r2126};
	shf.r.wrap.b32 	%r2128, %r2125, %r2124, 18;
	shf.r.wrap.b32 	%r2129, %r2124, %r2125, 18;
	mov.b64 	%rd2795, {%r2129, %r2128};
	xor.b64  	%rd2796, %rd2794, %rd2795;
	shf.l.wrap.b32 	%r2130, %r2124, %r2125, 23;
	shf.l.wrap.b32 	%r2131, %r2125, %r2124, 23;
	mov.b64 	%rd2797, {%r2131, %r2130};
	xor.b64  	%rd2798, %rd2796, %rd2797;
	add.s64 	%rd2799, %rd2793, %rd2798;
	add.s64 	%rd2800, %rd2799, -757361751448694408;
	add.s64 	%rd2801, %rd2800, %rd2664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2132,%dummy}, %rd2775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2133}, %rd2775;
	}
	shf.r.wrap.b32 	%r2134, %r2133, %r2132, 28;
	shf.r.wrap.b32 	%r2135, %r2132, %r2133, 28;
	mov.b64 	%rd2802, {%r2135, %r2134};
	shf.l.wrap.b32 	%r2136, %r2132, %r2133, 30;
	shf.l.wrap.b32 	%r2137, %r2133, %r2132, 30;
	mov.b64 	%rd2803, {%r2137, %r2136};
	xor.b64  	%rd2804, %rd2802, %rd2803;
	shf.l.wrap.b32 	%r2138, %r2132, %r2133, 25;
	shf.l.wrap.b32 	%r2139, %r2133, %r2132, 25;
	mov.b64 	%rd2805, {%r2139, %r2138};
	xor.b64  	%rd2806, %rd2804, %rd2805;
	and.b64  	%rd2807, %rd2775, %rd2738;
	or.b64  	%rd2808, %rd2775, %rd2738;
	and.b64  	%rd2809, %rd2808, %rd2701;
	or.b64  	%rd2810, %rd2809, %rd2807;
	add.s64 	%rd2811, %rd2810, %rd2806;
	add.s64 	%rd2812, %rd2811, %rd2800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2140,%dummy}, %rd2751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2141}, %rd2751;
	}
	shf.r.wrap.b32 	%r2142, %r2141, %r2140, 19;
	shf.r.wrap.b32 	%r2143, %r2140, %r2141, 19;
	mov.b64 	%rd2813, {%r2143, %r2142};
	shf.l.wrap.b32 	%r2144, %r2140, %r2141, 3;
	shf.l.wrap.b32 	%r2145, %r2141, %r2140, 3;
	mov.b64 	%rd2814, {%r2145, %r2144};
	xor.b64  	%rd2815, %rd2813, %rd2814;
	shr.u64 	%rd2816, %rd2751, 6;
	xor.b64  	%rd2817, %rd2815, %rd2816;
	shf.r.wrap.b32 	%r2146, %r1803, %r1802, 1;
	shf.r.wrap.b32 	%r2147, %r1802, %r1803, 1;
	mov.b64 	%rd2818, {%r2147, %r2146};
	shf.r.wrap.b32 	%r2148, %r1803, %r1802, 8;
	shf.r.wrap.b32 	%r2149, %r1802, %r1803, 8;
	mov.b64 	%rd2819, {%r2149, %r2148};
	xor.b64  	%rd2820, %rd2818, %rd2819;
	shr.u64 	%rd2821, %rd2270, 7;
	xor.b64  	%rd2822, %rd2820, %rd2821;
	add.s64 	%rd2823, %rd2822, %rd2233;
	add.s64 	%rd2824, %rd2823, %rd2566;
	add.s64 	%rd2825, %rd2824, %rd2817;
	add.s64 	%rd2826, %rd2825, %rd2690;
	xor.b64  	%rd2827, %rd2764, %rd2727;
	and.b64  	%rd2828, %rd2801, %rd2827;
	xor.b64  	%rd2829, %rd2828, %rd2727;
	add.s64 	%rd2830, %rd2826, %rd2829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2150,%dummy}, %rd2801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd2801;
	}
	shf.r.wrap.b32 	%r2152, %r2151, %r2150, 14;
	shf.r.wrap.b32 	%r2153, %r2150, %r2151, 14;
	mov.b64 	%rd2831, {%r2153, %r2152};
	shf.r.wrap.b32 	%r2154, %r2151, %r2150, 18;
	shf.r.wrap.b32 	%r2155, %r2150, %r2151, 18;
	mov.b64 	%rd2832, {%r2155, %r2154};
	xor.b64  	%rd2833, %rd2831, %rd2832;
	shf.l.wrap.b32 	%r2156, %r2150, %r2151, 23;
	shf.l.wrap.b32 	%r2157, %r2151, %r2150, 23;
	mov.b64 	%rd2834, {%r2157, %r2156};
	xor.b64  	%rd2835, %rd2833, %rd2834;
	add.s64 	%rd2836, %rd2830, %rd2835;
	add.s64 	%rd2837, %rd2836, 500013540394364858;
	add.s64 	%rd2838, %rd2837, %rd2701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd2812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd2812;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 28;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 28;
	mov.b64 	%rd2839, {%r2161, %r2160};
	shf.l.wrap.b32 	%r2162, %r2158, %r2159, 30;
	shf.l.wrap.b32 	%r2163, %r2159, %r2158, 30;
	mov.b64 	%rd2840, {%r2163, %r2162};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	shf.l.wrap.b32 	%r2164, %r2158, %r2159, 25;
	shf.l.wrap.b32 	%r2165, %r2159, %r2158, 25;
	mov.b64 	%rd2842, {%r2165, %r2164};
	xor.b64  	%rd2843, %rd2841, %rd2842;
	and.b64  	%rd2844, %rd2812, %rd2775;
	or.b64  	%rd2845, %rd2812, %rd2775;
	and.b64  	%rd2846, %rd2845, %rd2738;
	or.b64  	%rd2847, %rd2846, %rd2844;
	add.s64 	%rd2848, %rd2847, %rd2843;
	add.s64 	%rd2849, %rd2848, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd2788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2167}, %rd2788;
	}
	shf.r.wrap.b32 	%r2168, %r2167, %r2166, 19;
	shf.r.wrap.b32 	%r2169, %r2166, %r2167, 19;
	mov.b64 	%rd2850, {%r2169, %r2168};
	shf.l.wrap.b32 	%r2170, %r2166, %r2167, 3;
	shf.l.wrap.b32 	%r2171, %r2167, %r2166, 3;
	mov.b64 	%rd2851, {%r2171, %r2170};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	shr.u64 	%rd2853, %rd2788, 6;
	xor.b64  	%rd2854, %rd2852, %rd2853;
	shf.r.wrap.b32 	%r2172, %r1829, %r1828, 1;
	shf.r.wrap.b32 	%r2173, %r1828, %r1829, 1;
	mov.b64 	%rd2855, {%r2173, %r2172};
	shf.r.wrap.b32 	%r2174, %r1829, %r1828, 8;
	shf.r.wrap.b32 	%r2175, %r1828, %r1829, 8;
	mov.b64 	%rd2856, {%r2175, %r2174};
	xor.b64  	%rd2857, %rd2855, %rd2856;
	shr.u64 	%rd2858, %rd2307, 7;
	xor.b64  	%rd2859, %rd2857, %rd2858;
	add.s64 	%rd2860, %rd2859, %rd2270;
	add.s64 	%rd2861, %rd2860, %rd2603;
	add.s64 	%rd2862, %rd2861, %rd2854;
	add.s64 	%rd2863, %rd2862, %rd2727;
	xor.b64  	%rd2864, %rd2801, %rd2764;
	and.b64  	%rd2865, %rd2838, %rd2864;
	xor.b64  	%rd2866, %rd2865, %rd2764;
	add.s64 	%rd2867, %rd2863, %rd2866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2176,%dummy}, %rd2838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2177}, %rd2838;
	}
	shf.r.wrap.b32 	%r2178, %r2177, %r2176, 14;
	shf.r.wrap.b32 	%r2179, %r2176, %r2177, 14;
	mov.b64 	%rd2868, {%r2179, %r2178};
	shf.r.wrap.b32 	%r2180, %r2177, %r2176, 18;
	shf.r.wrap.b32 	%r2181, %r2176, %r2177, 18;
	mov.b64 	%rd2869, {%r2181, %r2180};
	xor.b64  	%rd2870, %rd2868, %rd2869;
	shf.l.wrap.b32 	%r2182, %r2176, %r2177, 23;
	shf.l.wrap.b32 	%r2183, %r2177, %r2176, 23;
	mov.b64 	%rd2871, {%r2183, %r2182};
	xor.b64  	%rd2872, %rd2870, %rd2871;
	add.s64 	%rd2873, %rd2867, %rd2872;
	add.s64 	%rd2874, %rd2873, 748580250866718886;
	add.s64 	%rd2875, %rd2874, %rd2738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2184,%dummy}, %rd2849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2185}, %rd2849;
	}
	shf.r.wrap.b32 	%r2186, %r2185, %r2184, 28;
	shf.r.wrap.b32 	%r2187, %r2184, %r2185, 28;
	mov.b64 	%rd2876, {%r2187, %r2186};
	shf.l.wrap.b32 	%r2188, %r2184, %r2185, 30;
	shf.l.wrap.b32 	%r2189, %r2185, %r2184, 30;
	mov.b64 	%rd2877, {%r2189, %r2188};
	xor.b64  	%rd2878, %rd2876, %rd2877;
	shf.l.wrap.b32 	%r2190, %r2184, %r2185, 25;
	shf.l.wrap.b32 	%r2191, %r2185, %r2184, 25;
	mov.b64 	%rd2879, {%r2191, %r2190};
	xor.b64  	%rd2880, %rd2878, %rd2879;
	and.b64  	%rd2881, %rd2849, %rd2812;
	or.b64  	%rd2882, %rd2849, %rd2812;
	and.b64  	%rd2883, %rd2882, %rd2775;
	or.b64  	%rd2884, %rd2883, %rd2881;
	add.s64 	%rd2885, %rd2884, %rd2880;
	add.s64 	%rd2886, %rd2885, %rd2874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2192,%dummy}, %rd2825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2193}, %rd2825;
	}
	shf.r.wrap.b32 	%r2194, %r2193, %r2192, 19;
	shf.r.wrap.b32 	%r2195, %r2192, %r2193, 19;
	mov.b64 	%rd2887, {%r2195, %r2194};
	shf.l.wrap.b32 	%r2196, %r2192, %r2193, 3;
	shf.l.wrap.b32 	%r2197, %r2193, %r2192, 3;
	mov.b64 	%rd2888, {%r2197, %r2196};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	shr.u64 	%rd2890, %rd2825, 6;
	xor.b64  	%rd2891, %rd2889, %rd2890;
	shf.r.wrap.b32 	%r2198, %r1855, %r1854, 1;
	shf.r.wrap.b32 	%r2199, %r1854, %r1855, 1;
	mov.b64 	%rd2892, {%r2199, %r2198};
	shf.r.wrap.b32 	%r2200, %r1855, %r1854, 8;
	shf.r.wrap.b32 	%r2201, %r1854, %r1855, 8;
	mov.b64 	%rd2893, {%r2201, %r2200};
	xor.b64  	%rd2894, %rd2892, %rd2893;
	shr.u64 	%rd2895, %rd2344, 7;
	xor.b64  	%rd2896, %rd2894, %rd2895;
	add.s64 	%rd2897, %rd2896, %rd2307;
	add.s64 	%rd2898, %rd2897, %rd2640;
	add.s64 	%rd2899, %rd2898, %rd2891;
	add.s64 	%rd2900, %rd2899, %rd2764;
	xor.b64  	%rd2901, %rd2838, %rd2801;
	and.b64  	%rd2902, %rd2875, %rd2901;
	xor.b64  	%rd2903, %rd2902, %rd2801;
	add.s64 	%rd2904, %rd2900, %rd2903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2202,%dummy}, %rd2875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2203}, %rd2875;
	}
	shf.r.wrap.b32 	%r2204, %r2203, %r2202, 14;
	shf.r.wrap.b32 	%r2205, %r2202, %r2203, 14;
	mov.b64 	%rd2905, {%r2205, %r2204};
	shf.r.wrap.b32 	%r2206, %r2203, %r2202, 18;
	shf.r.wrap.b32 	%r2207, %r2202, %r2203, 18;
	mov.b64 	%rd2906, {%r2207, %r2206};
	xor.b64  	%rd2907, %rd2905, %rd2906;
	shf.l.wrap.b32 	%r2208, %r2202, %r2203, 23;
	shf.l.wrap.b32 	%r2209, %r2203, %r2202, 23;
	mov.b64 	%rd2908, {%r2209, %r2208};
	xor.b64  	%rd2909, %rd2907, %rd2908;
	add.s64 	%rd2910, %rd2904, %rd2909;
	add.s64 	%rd2911, %rd2910, 1242879168328830382;
	add.s64 	%rd2912, %rd2911, %rd2775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd2886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd2886;
	}
	shf.r.wrap.b32 	%r2212, %r2211, %r2210, 28;
	shf.r.wrap.b32 	%r2213, %r2210, %r2211, 28;
	mov.b64 	%rd2913, {%r2213, %r2212};
	shf.l.wrap.b32 	%r2214, %r2210, %r2211, 30;
	shf.l.wrap.b32 	%r2215, %r2211, %r2210, 30;
	mov.b64 	%rd2914, {%r2215, %r2214};
	xor.b64  	%rd2915, %rd2913, %rd2914;
	shf.l.wrap.b32 	%r2216, %r2210, %r2211, 25;
	shf.l.wrap.b32 	%r2217, %r2211, %r2210, 25;
	mov.b64 	%rd2916, {%r2217, %r2216};
	xor.b64  	%rd2917, %rd2915, %rd2916;
	and.b64  	%rd2918, %rd2886, %rd2849;
	or.b64  	%rd2919, %rd2886, %rd2849;
	and.b64  	%rd2920, %rd2919, %rd2812;
	or.b64  	%rd2921, %rd2920, %rd2918;
	add.s64 	%rd2922, %rd2921, %rd2917;
	add.s64 	%rd2923, %rd2922, %rd2911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2218,%dummy}, %rd2862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd2862;
	}
	shf.r.wrap.b32 	%r2220, %r2219, %r2218, 19;
	shf.r.wrap.b32 	%r2221, %r2218, %r2219, 19;
	mov.b64 	%rd2924, {%r2221, %r2220};
	shf.l.wrap.b32 	%r2222, %r2218, %r2219, 3;
	shf.l.wrap.b32 	%r2223, %r2219, %r2218, 3;
	mov.b64 	%rd2925, {%r2223, %r2222};
	xor.b64  	%rd2926, %rd2924, %rd2925;
	shr.u64 	%rd2927, %rd2862, 6;
	xor.b64  	%rd2928, %rd2926, %rd2927;
	shf.r.wrap.b32 	%r2224, %r1881, %r1880, 1;
	shf.r.wrap.b32 	%r2225, %r1880, %r1881, 1;
	mov.b64 	%rd2929, {%r2225, %r2224};
	shf.r.wrap.b32 	%r2226, %r1881, %r1880, 8;
	shf.r.wrap.b32 	%r2227, %r1880, %r1881, 8;
	mov.b64 	%rd2930, {%r2227, %r2226};
	xor.b64  	%rd2931, %rd2929, %rd2930;
	shr.u64 	%rd2932, %rd2381, 7;
	xor.b64  	%rd2933, %rd2931, %rd2932;
	add.s64 	%rd2934, %rd2933, %rd2344;
	add.s64 	%rd2935, %rd2934, %rd2677;
	add.s64 	%rd2936, %rd2935, %rd2928;
	add.s64 	%rd2937, %rd2936, %rd2801;
	xor.b64  	%rd2938, %rd2875, %rd2838;
	and.b64  	%rd2939, %rd2912, %rd2938;
	xor.b64  	%rd2940, %rd2939, %rd2838;
	add.s64 	%rd2941, %rd2937, %rd2940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2228,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2229}, %rd2912;
	}
	shf.r.wrap.b32 	%r2230, %r2229, %r2228, 14;
	shf.r.wrap.b32 	%r2231, %r2228, %r2229, 14;
	mov.b64 	%rd2942, {%r2231, %r2230};
	shf.r.wrap.b32 	%r2232, %r2229, %r2228, 18;
	shf.r.wrap.b32 	%r2233, %r2228, %r2229, 18;
	mov.b64 	%rd2943, {%r2233, %r2232};
	xor.b64  	%rd2944, %rd2942, %rd2943;
	shf.l.wrap.b32 	%r2234, %r2228, %r2229, 23;
	shf.l.wrap.b32 	%r2235, %r2229, %r2228, 23;
	mov.b64 	%rd2945, {%r2235, %r2234};
	xor.b64  	%rd2946, %rd2944, %rd2945;
	add.s64 	%rd2947, %rd2941, %rd2946;
	add.s64 	%rd2948, %rd2947, 1977374033974150939;
	add.s64 	%rd2949, %rd2948, %rd2812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2236,%dummy}, %rd2923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2237}, %rd2923;
	}
	shf.r.wrap.b32 	%r2238, %r2237, %r2236, 28;
	shf.r.wrap.b32 	%r2239, %r2236, %r2237, 28;
	mov.b64 	%rd2950, {%r2239, %r2238};
	shf.l.wrap.b32 	%r2240, %r2236, %r2237, 30;
	shf.l.wrap.b32 	%r2241, %r2237, %r2236, 30;
	mov.b64 	%rd2951, {%r2241, %r2240};
	xor.b64  	%rd2952, %rd2950, %rd2951;
	shf.l.wrap.b32 	%r2242, %r2236, %r2237, 25;
	shf.l.wrap.b32 	%r2243, %r2237, %r2236, 25;
	mov.b64 	%rd2953, {%r2243, %r2242};
	xor.b64  	%rd2954, %rd2952, %rd2953;
	and.b64  	%rd2955, %rd2923, %rd2886;
	or.b64  	%rd2956, %rd2923, %rd2886;
	and.b64  	%rd2957, %rd2956, %rd2849;
	or.b64  	%rd2958, %rd2957, %rd2955;
	add.s64 	%rd2959, %rd2958, %rd2954;
	add.s64 	%rd2960, %rd2959, %rd2948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd2899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2245}, %rd2899;
	}
	shf.r.wrap.b32 	%r2246, %r2245, %r2244, 19;
	shf.r.wrap.b32 	%r2247, %r2244, %r2245, 19;
	mov.b64 	%rd2961, {%r2247, %r2246};
	shf.l.wrap.b32 	%r2248, %r2244, %r2245, 3;
	shf.l.wrap.b32 	%r2249, %r2245, %r2244, 3;
	mov.b64 	%rd2962, {%r2249, %r2248};
	xor.b64  	%rd2963, %rd2961, %rd2962;
	shr.u64 	%rd2964, %rd2899, 6;
	xor.b64  	%rd2965, %rd2963, %rd2964;
	shf.r.wrap.b32 	%r2250, %r1907, %r1906, 1;
	shf.r.wrap.b32 	%r2251, %r1906, %r1907, 1;
	mov.b64 	%rd2966, {%r2251, %r2250};
	shf.r.wrap.b32 	%r2252, %r1907, %r1906, 8;
	shf.r.wrap.b32 	%r2253, %r1906, %r1907, 8;
	mov.b64 	%rd2967, {%r2253, %r2252};
	xor.b64  	%rd2968, %rd2966, %rd2967;
	shr.u64 	%rd2969, %rd2418, 7;
	xor.b64  	%rd2970, %rd2968, %rd2969;
	add.s64 	%rd2971, %rd2970, %rd2381;
	add.s64 	%rd2972, %rd2971, %rd2714;
	add.s64 	%rd2973, %rd2972, %rd2965;
	add.s64 	%rd2974, %rd2973, %rd2838;
	xor.b64  	%rd2975, %rd2912, %rd2875;
	and.b64  	%rd2976, %rd2949, %rd2975;
	xor.b64  	%rd2977, %rd2976, %rd2875;
	add.s64 	%rd2978, %rd2974, %rd2977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd2949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd2949;
	}
	shf.r.wrap.b32 	%r2256, %r2255, %r2254, 14;
	shf.r.wrap.b32 	%r2257, %r2254, %r2255, 14;
	mov.b64 	%rd2979, {%r2257, %r2256};
	shf.r.wrap.b32 	%r2258, %r2255, %r2254, 18;
	shf.r.wrap.b32 	%r2259, %r2254, %r2255, 18;
	mov.b64 	%rd2980, {%r2259, %r2258};
	xor.b64  	%rd2981, %rd2979, %rd2980;
	shf.l.wrap.b32 	%r2260, %r2254, %r2255, 23;
	shf.l.wrap.b32 	%r2261, %r2255, %r2254, 23;
	mov.b64 	%rd2982, {%r2261, %r2260};
	xor.b64  	%rd2983, %rd2981, %rd2982;
	add.s64 	%rd2984, %rd2978, %rd2983;
	add.s64 	%rd2985, %rd2984, 2944078676154940804;
	add.s64 	%rd2986, %rd2985, %rd2849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2262,%dummy}, %rd2960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2263}, %rd2960;
	}
	shf.r.wrap.b32 	%r2264, %r2263, %r2262, 28;
	shf.r.wrap.b32 	%r2265, %r2262, %r2263, 28;
	mov.b64 	%rd2987, {%r2265, %r2264};
	shf.l.wrap.b32 	%r2266, %r2262, %r2263, 30;
	shf.l.wrap.b32 	%r2267, %r2263, %r2262, 30;
	mov.b64 	%rd2988, {%r2267, %r2266};
	xor.b64  	%rd2989, %rd2987, %rd2988;
	shf.l.wrap.b32 	%r2268, %r2262, %r2263, 25;
	shf.l.wrap.b32 	%r2269, %r2263, %r2262, 25;
	mov.b64 	%rd2990, {%r2269, %r2268};
	xor.b64  	%rd2991, %rd2989, %rd2990;
	and.b64  	%rd2992, %rd2960, %rd2923;
	or.b64  	%rd2993, %rd2960, %rd2923;
	and.b64  	%rd2994, %rd2993, %rd2886;
	or.b64  	%rd2995, %rd2994, %rd2992;
	add.s64 	%rd2996, %rd2995, %rd2991;
	add.s64 	%rd2997, %rd2996, %rd2985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd2936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd2936;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 19;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 19;
	mov.b64 	%rd2998, {%r2273, %r2272};
	shf.l.wrap.b32 	%r2274, %r2270, %r2271, 3;
	shf.l.wrap.b32 	%r2275, %r2271, %r2270, 3;
	mov.b64 	%rd2999, {%r2275, %r2274};
	xor.b64  	%rd3000, %rd2998, %rd2999;
	shr.u64 	%rd3001, %rd2936, 6;
	xor.b64  	%rd3002, %rd3000, %rd3001;
	shf.r.wrap.b32 	%r2276, %r1933, %r1932, 1;
	shf.r.wrap.b32 	%r2277, %r1932, %r1933, 1;
	mov.b64 	%rd3003, {%r2277, %r2276};
	shf.r.wrap.b32 	%r2278, %r1933, %r1932, 8;
	shf.r.wrap.b32 	%r2279, %r1932, %r1933, 8;
	mov.b64 	%rd3004, {%r2279, %r2278};
	xor.b64  	%rd3005, %rd3003, %rd3004;
	shr.u64 	%rd3006, %rd2455, 7;
	xor.b64  	%rd3007, %rd3005, %rd3006;
	add.s64 	%rd3008, %rd3007, %rd2418;
	add.s64 	%rd3009, %rd3008, %rd2751;
	add.s64 	%rd3010, %rd3009, %rd3002;
	add.s64 	%rd3011, %rd3010, %rd2875;
	xor.b64  	%rd3012, %rd2949, %rd2912;
	and.b64  	%rd3013, %rd2986, %rd3012;
	xor.b64  	%rd3014, %rd3013, %rd2912;
	add.s64 	%rd3015, %rd3011, %rd3014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2280,%dummy}, %rd2986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2281}, %rd2986;
	}
	shf.r.wrap.b32 	%r2282, %r2281, %r2280, 14;
	shf.r.wrap.b32 	%r2283, %r2280, %r2281, 14;
	mov.b64 	%rd3016, {%r2283, %r2282};
	shf.r.wrap.b32 	%r2284, %r2281, %r2280, 18;
	shf.r.wrap.b32 	%r2285, %r2280, %r2281, 18;
	mov.b64 	%rd3017, {%r2285, %r2284};
	xor.b64  	%rd3018, %rd3016, %rd3017;
	shf.l.wrap.b32 	%r2286, %r2280, %r2281, 23;
	shf.l.wrap.b32 	%r2287, %r2281, %r2280, 23;
	mov.b64 	%rd3019, {%r2287, %r2286};
	xor.b64  	%rd3020, %rd3018, %rd3019;
	add.s64 	%rd3021, %rd3015, %rd3020;
	add.s64 	%rd3022, %rd3021, 3659926193048069267;
	add.s64 	%rd3023, %rd3022, %rd2886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2288,%dummy}, %rd2997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2289}, %rd2997;
	}
	shf.r.wrap.b32 	%r2290, %r2289, %r2288, 28;
	shf.r.wrap.b32 	%r2291, %r2288, %r2289, 28;
	mov.b64 	%rd3024, {%r2291, %r2290};
	shf.l.wrap.b32 	%r2292, %r2288, %r2289, 30;
	shf.l.wrap.b32 	%r2293, %r2289, %r2288, 30;
	mov.b64 	%rd3025, {%r2293, %r2292};
	xor.b64  	%rd3026, %rd3024, %rd3025;
	shf.l.wrap.b32 	%r2294, %r2288, %r2289, 25;
	shf.l.wrap.b32 	%r2295, %r2289, %r2288, 25;
	mov.b64 	%rd3027, {%r2295, %r2294};
	xor.b64  	%rd3028, %rd3026, %rd3027;
	and.b64  	%rd3029, %rd2997, %rd2960;
	or.b64  	%rd3030, %rd2997, %rd2960;
	and.b64  	%rd3031, %rd3030, %rd2923;
	or.b64  	%rd3032, %rd3031, %rd3029;
	add.s64 	%rd3033, %rd3032, %rd3028;
	add.s64 	%rd3034, %rd3033, %rd3022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2296,%dummy}, %rd2973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2297}, %rd2973;
	}
	shf.r.wrap.b32 	%r2298, %r2297, %r2296, 19;
	shf.r.wrap.b32 	%r2299, %r2296, %r2297, 19;
	mov.b64 	%rd3035, {%r2299, %r2298};
	shf.l.wrap.b32 	%r2300, %r2296, %r2297, 3;
	shf.l.wrap.b32 	%r2301, %r2297, %r2296, 3;
	mov.b64 	%rd3036, {%r2301, %r2300};
	xor.b64  	%rd3037, %rd3035, %rd3036;
	shr.u64 	%rd3038, %rd2973, 6;
	xor.b64  	%rd3039, %rd3037, %rd3038;
	shf.r.wrap.b32 	%r2302, %r1959, %r1958, 1;
	shf.r.wrap.b32 	%r2303, %r1958, %r1959, 1;
	mov.b64 	%rd3040, {%r2303, %r2302};
	shf.r.wrap.b32 	%r2304, %r1959, %r1958, 8;
	shf.r.wrap.b32 	%r2305, %r1958, %r1959, 8;
	mov.b64 	%rd3041, {%r2305, %r2304};
	xor.b64  	%rd3042, %rd3040, %rd3041;
	shr.u64 	%rd3043, %rd2492, 7;
	xor.b64  	%rd3044, %rd3042, %rd3043;
	add.s64 	%rd3045, %rd3044, %rd2455;
	add.s64 	%rd3046, %rd3045, %rd2788;
	add.s64 	%rd3047, %rd3046, %rd3039;
	add.s64 	%rd3048, %rd3047, %rd2912;
	xor.b64  	%rd3049, %rd2986, %rd2949;
	and.b64  	%rd3050, %rd3023, %rd3049;
	xor.b64  	%rd3051, %rd3050, %rd2949;
	add.s64 	%rd3052, %rd3048, %rd3051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2306,%dummy}, %rd3023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2307}, %rd3023;
	}
	shf.r.wrap.b32 	%r2308, %r2307, %r2306, 14;
	shf.r.wrap.b32 	%r2309, %r2306, %r2307, 14;
	mov.b64 	%rd3053, {%r2309, %r2308};
	shf.r.wrap.b32 	%r2310, %r2307, %r2306, 18;
	shf.r.wrap.b32 	%r2311, %r2306, %r2307, 18;
	mov.b64 	%rd3054, {%r2311, %r2310};
	xor.b64  	%rd3055, %rd3053, %rd3054;
	shf.l.wrap.b32 	%r2312, %r2306, %r2307, 23;
	shf.l.wrap.b32 	%r2313, %r2307, %r2306, 23;
	mov.b64 	%rd3056, {%r2313, %r2312};
	xor.b64  	%rd3057, %rd3055, %rd3056;
	add.s64 	%rd3058, %rd3052, %rd3057;
	add.s64 	%rd3059, %rd3058, 4368137639120453308;
	add.s64 	%rd3060, %rd3059, %rd2923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2314,%dummy}, %rd3034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2315}, %rd3034;
	}
	shf.r.wrap.b32 	%r2316, %r2315, %r2314, 28;
	shf.r.wrap.b32 	%r2317, %r2314, %r2315, 28;
	mov.b64 	%rd3061, {%r2317, %r2316};
	shf.l.wrap.b32 	%r2318, %r2314, %r2315, 30;
	shf.l.wrap.b32 	%r2319, %r2315, %r2314, 30;
	mov.b64 	%rd3062, {%r2319, %r2318};
	xor.b64  	%rd3063, %rd3061, %rd3062;
	shf.l.wrap.b32 	%r2320, %r2314, %r2315, 25;
	shf.l.wrap.b32 	%r2321, %r2315, %r2314, 25;
	mov.b64 	%rd3064, {%r2321, %r2320};
	xor.b64  	%rd3065, %rd3063, %rd3064;
	and.b64  	%rd3066, %rd3034, %rd2997;
	or.b64  	%rd3067, %rd3034, %rd2997;
	and.b64  	%rd3068, %rd3067, %rd2960;
	or.b64  	%rd3069, %rd3068, %rd3066;
	add.s64 	%rd3070, %rd3069, %rd3065;
	add.s64 	%rd3071, %rd3070, %rd3059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2322,%dummy}, %rd3010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2323}, %rd3010;
	}
	shf.r.wrap.b32 	%r2324, %r2323, %r2322, 19;
	shf.r.wrap.b32 	%r2325, %r2322, %r2323, 19;
	mov.b64 	%rd3072, {%r2325, %r2324};
	shf.l.wrap.b32 	%r2326, %r2322, %r2323, 3;
	shf.l.wrap.b32 	%r2327, %r2323, %r2322, 3;
	mov.b64 	%rd3073, {%r2327, %r2326};
	xor.b64  	%rd3074, %rd3072, %rd3073;
	shr.u64 	%rd3075, %rd3010, 6;
	xor.b64  	%rd3076, %rd3074, %rd3075;
	shf.r.wrap.b32 	%r2328, %r1985, %r1984, 1;
	shf.r.wrap.b32 	%r2329, %r1984, %r1985, 1;
	mov.b64 	%rd3077, {%r2329, %r2328};
	shf.r.wrap.b32 	%r2330, %r1985, %r1984, 8;
	shf.r.wrap.b32 	%r2331, %r1984, %r1985, 8;
	mov.b64 	%rd3078, {%r2331, %r2330};
	xor.b64  	%rd3079, %rd3077, %rd3078;
	shr.u64 	%rd3080, %rd2529, 7;
	xor.b64  	%rd3081, %rd3079, %rd3080;
	add.s64 	%rd3082, %rd3081, %rd2492;
	add.s64 	%rd3083, %rd3082, %rd2825;
	add.s64 	%rd3084, %rd3083, %rd3076;
	add.s64 	%rd3085, %rd3084, %rd2949;
	xor.b64  	%rd3086, %rd3023, %rd2986;
	and.b64  	%rd3087, %rd3060, %rd3086;
	xor.b64  	%rd3088, %rd3087, %rd2986;
	add.s64 	%rd3089, %rd3085, %rd3088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2332,%dummy}, %rd3060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2333}, %rd3060;
	}
	shf.r.wrap.b32 	%r2334, %r2333, %r2332, 14;
	shf.r.wrap.b32 	%r2335, %r2332, %r2333, 14;
	mov.b64 	%rd3090, {%r2335, %r2334};
	shf.r.wrap.b32 	%r2336, %r2333, %r2332, 18;
	shf.r.wrap.b32 	%r2337, %r2332, %r2333, 18;
	mov.b64 	%rd3091, {%r2337, %r2336};
	xor.b64  	%rd3092, %rd3090, %rd3091;
	shf.l.wrap.b32 	%r2338, %r2332, %r2333, 23;
	shf.l.wrap.b32 	%r2339, %r2333, %r2332, 23;
	mov.b64 	%rd3093, {%r2339, %r2338};
	xor.b64  	%rd3094, %rd3092, %rd3093;
	add.s64 	%rd3095, %rd3089, %rd3094;
	add.s64 	%rd3096, %rd3095, 4836135668995329356;
	add.s64 	%rd3097, %rd3096, %rd2960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2340,%dummy}, %rd3071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2341}, %rd3071;
	}
	shf.r.wrap.b32 	%r2342, %r2341, %r2340, 28;
	shf.r.wrap.b32 	%r2343, %r2340, %r2341, 28;
	mov.b64 	%rd3098, {%r2343, %r2342};
	shf.l.wrap.b32 	%r2344, %r2340, %r2341, 30;
	shf.l.wrap.b32 	%r2345, %r2341, %r2340, 30;
	mov.b64 	%rd3099, {%r2345, %r2344};
	xor.b64  	%rd3100, %rd3098, %rd3099;
	shf.l.wrap.b32 	%r2346, %r2340, %r2341, 25;
	shf.l.wrap.b32 	%r2347, %r2341, %r2340, 25;
	mov.b64 	%rd3101, {%r2347, %r2346};
	xor.b64  	%rd3102, %rd3100, %rd3101;
	and.b64  	%rd3103, %rd3071, %rd3034;
	or.b64  	%rd3104, %rd3071, %rd3034;
	and.b64  	%rd3105, %rd3104, %rd2997;
	or.b64  	%rd3106, %rd3105, %rd3103;
	add.s64 	%rd3107, %rd3106, %rd3102;
	add.s64 	%rd3108, %rd3107, %rd3096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2348,%dummy}, %rd3047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd3047;
	}
	shf.r.wrap.b32 	%r2350, %r2349, %r2348, 19;
	shf.r.wrap.b32 	%r2351, %r2348, %r2349, 19;
	mov.b64 	%rd3109, {%r2351, %r2350};
	shf.l.wrap.b32 	%r2352, %r2348, %r2349, 3;
	shf.l.wrap.b32 	%r2353, %r2349, %r2348, 3;
	mov.b64 	%rd3110, {%r2353, %r2352};
	xor.b64  	%rd3111, %rd3109, %rd3110;
	shr.u64 	%rd3112, %rd3047, 6;
	xor.b64  	%rd3113, %rd3111, %rd3112;
	shf.r.wrap.b32 	%r2354, %r2011, %r2010, 1;
	shf.r.wrap.b32 	%r2355, %r2010, %r2011, 1;
	mov.b64 	%rd3114, {%r2355, %r2354};
	shf.r.wrap.b32 	%r2356, %r2011, %r2010, 8;
	shf.r.wrap.b32 	%r2357, %r2010, %r2011, 8;
	mov.b64 	%rd3115, {%r2357, %r2356};
	xor.b64  	%rd3116, %rd3114, %rd3115;
	shr.u64 	%rd3117, %rd2566, 7;
	xor.b64  	%rd3118, %rd3116, %rd3117;
	add.s64 	%rd3119, %rd3118, %rd2529;
	add.s64 	%rd3120, %rd3119, %rd2862;
	add.s64 	%rd3121, %rd3120, %rd3113;
	add.s64 	%rd3122, %rd3121, %rd2986;
	xor.b64  	%rd3123, %rd3060, %rd3023;
	and.b64  	%rd3124, %rd3097, %rd3123;
	xor.b64  	%rd3125, %rd3124, %rd3023;
	add.s64 	%rd3126, %rd3122, %rd3125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2358,%dummy}, %rd3097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2359}, %rd3097;
	}
	shf.r.wrap.b32 	%r2360, %r2359, %r2358, 14;
	shf.r.wrap.b32 	%r2361, %r2358, %r2359, 14;
	mov.b64 	%rd3127, {%r2361, %r2360};
	shf.r.wrap.b32 	%r2362, %r2359, %r2358, 18;
	shf.r.wrap.b32 	%r2363, %r2358, %r2359, 18;
	mov.b64 	%rd3128, {%r2363, %r2362};
	xor.b64  	%rd3129, %rd3127, %rd3128;
	shf.l.wrap.b32 	%r2364, %r2358, %r2359, 23;
	shf.l.wrap.b32 	%r2365, %r2359, %r2358, 23;
	mov.b64 	%rd3130, {%r2365, %r2364};
	xor.b64  	%rd3131, %rd3129, %rd3130;
	add.s64 	%rd3132, %rd3126, %rd3131;
	add.s64 	%rd3133, %rd3132, 5532061633213252278;
	add.s64 	%rd3134, %rd3133, %rd2997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd3108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2367}, %rd3108;
	}
	shf.r.wrap.b32 	%r2368, %r2367, %r2366, 28;
	shf.r.wrap.b32 	%r2369, %r2366, %r2367, 28;
	mov.b64 	%rd3135, {%r2369, %r2368};
	shf.l.wrap.b32 	%r2370, %r2366, %r2367, 30;
	shf.l.wrap.b32 	%r2371, %r2367, %r2366, 30;
	mov.b64 	%rd3136, {%r2371, %r2370};
	xor.b64  	%rd3137, %rd3135, %rd3136;
	shf.l.wrap.b32 	%r2372, %r2366, %r2367, 25;
	shf.l.wrap.b32 	%r2373, %r2367, %r2366, 25;
	mov.b64 	%rd3138, {%r2373, %r2372};
	xor.b64  	%rd3139, %rd3137, %rd3138;
	and.b64  	%rd3140, %rd3108, %rd3071;
	or.b64  	%rd3141, %rd3108, %rd3071;
	and.b64  	%rd3142, %rd3141, %rd3034;
	or.b64  	%rd3143, %rd3142, %rd3140;
	add.s64 	%rd3144, %rd3143, %rd3139;
	add.s64 	%rd3145, %rd3144, %rd3133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2374,%dummy}, %rd3084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2375}, %rd3084;
	}
	shf.r.wrap.b32 	%r2376, %r2375, %r2374, 19;
	shf.r.wrap.b32 	%r2377, %r2374, %r2375, 19;
	mov.b64 	%rd3146, {%r2377, %r2376};
	shf.l.wrap.b32 	%r2378, %r2374, %r2375, 3;
	shf.l.wrap.b32 	%r2379, %r2375, %r2374, 3;
	mov.b64 	%rd3147, {%r2379, %r2378};
	xor.b64  	%rd3148, %rd3146, %rd3147;
	shr.u64 	%rd3149, %rd3084, 6;
	xor.b64  	%rd3150, %rd3148, %rd3149;
	shf.r.wrap.b32 	%r2380, %r2037, %r2036, 1;
	shf.r.wrap.b32 	%r2381, %r2036, %r2037, 1;
	mov.b64 	%rd3151, {%r2381, %r2380};
	shf.r.wrap.b32 	%r2382, %r2037, %r2036, 8;
	shf.r.wrap.b32 	%r2383, %r2036, %r2037, 8;
	mov.b64 	%rd3152, {%r2383, %r2382};
	xor.b64  	%rd3153, %rd3151, %rd3152;
	shr.u64 	%rd3154, %rd2603, 7;
	xor.b64  	%rd3155, %rd3153, %rd3154;
	add.s64 	%rd3156, %rd3155, %rd2566;
	add.s64 	%rd3157, %rd3156, %rd2899;
	add.s64 	%rd3158, %rd3157, %rd3150;
	add.s64 	%rd3159, %rd3158, %rd3023;
	xor.b64  	%rd3160, %rd3097, %rd3060;
	and.b64  	%rd3161, %rd3134, %rd3160;
	xor.b64  	%rd3162, %rd3161, %rd3060;
	add.s64 	%rd3163, %rd3159, %rd3162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2384,%dummy}, %rd3134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2385}, %rd3134;
	}
	shf.r.wrap.b32 	%r2386, %r2385, %r2384, 14;
	shf.r.wrap.b32 	%r2387, %r2384, %r2385, 14;
	mov.b64 	%rd3164, {%r2387, %r2386};
	shf.r.wrap.b32 	%r2388, %r2385, %r2384, 18;
	shf.r.wrap.b32 	%r2389, %r2384, %r2385, 18;
	mov.b64 	%rd3165, {%r2389, %r2388};
	xor.b64  	%rd3166, %rd3164, %rd3165;
	shf.l.wrap.b32 	%r2390, %r2384, %r2385, 23;
	shf.l.wrap.b32 	%r2391, %r2385, %r2384, 23;
	mov.b64 	%rd3167, {%r2391, %r2390};
	xor.b64  	%rd3168, %rd3166, %rd3167;
	add.s64 	%rd3169, %rd3163, %rd3168;
	add.s64 	%rd3170, %rd3169, 6448918945643986474;
	add.s64 	%rd3171, %rd3170, %rd3034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2392,%dummy}, %rd3145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2393}, %rd3145;
	}
	shf.r.wrap.b32 	%r2394, %r2393, %r2392, 28;
	shf.r.wrap.b32 	%r2395, %r2392, %r2393, 28;
	mov.b64 	%rd3172, {%r2395, %r2394};
	shf.l.wrap.b32 	%r2396, %r2392, %r2393, 30;
	shf.l.wrap.b32 	%r2397, %r2393, %r2392, 30;
	mov.b64 	%rd3173, {%r2397, %r2396};
	xor.b64  	%rd3174, %rd3172, %rd3173;
	shf.l.wrap.b32 	%r2398, %r2392, %r2393, 25;
	shf.l.wrap.b32 	%r2399, %r2393, %r2392, 25;
	mov.b64 	%rd3175, {%r2399, %r2398};
	xor.b64  	%rd3176, %rd3174, %rd3175;
	and.b64  	%rd3177, %rd3145, %rd3108;
	or.b64  	%rd3178, %rd3145, %rd3108;
	and.b64  	%rd3179, %rd3178, %rd3071;
	or.b64  	%rd3180, %rd3179, %rd3177;
	add.s64 	%rd3181, %rd3180, %rd3176;
	add.s64 	%rd3182, %rd3181, %rd3170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2400,%dummy}, %rd3121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd3121;
	}
	shf.r.wrap.b32 	%r2402, %r2401, %r2400, 19;
	shf.r.wrap.b32 	%r2403, %r2400, %r2401, 19;
	mov.b64 	%rd3183, {%r2403, %r2402};
	shf.l.wrap.b32 	%r2404, %r2400, %r2401, 3;
	shf.l.wrap.b32 	%r2405, %r2401, %r2400, 3;
	mov.b64 	%rd3184, {%r2405, %r2404};
	xor.b64  	%rd3185, %rd3183, %rd3184;
	shr.u64 	%rd3186, %rd3121, 6;
	xor.b64  	%rd3187, %rd3185, %rd3186;
	shf.r.wrap.b32 	%r2406, %r2063, %r2062, 1;
	shf.r.wrap.b32 	%r2407, %r2062, %r2063, 1;
	mov.b64 	%rd3188, {%r2407, %r2406};
	shf.r.wrap.b32 	%r2408, %r2063, %r2062, 8;
	shf.r.wrap.b32 	%r2409, %r2062, %r2063, 8;
	mov.b64 	%rd3189, {%r2409, %r2408};
	xor.b64  	%rd3190, %rd3188, %rd3189;
	shr.u64 	%rd3191, %rd2640, 7;
	xor.b64  	%rd3192, %rd3190, %rd3191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2410,%dummy}, %rd3171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2411}, %rd3171;
	}
	shf.r.wrap.b32 	%r2412, %r2411, %r2410, 14;
	shf.r.wrap.b32 	%r2413, %r2410, %r2411, 14;
	mov.b64 	%rd3193, {%r2413, %r2412};
	shf.r.wrap.b32 	%r2414, %r2411, %r2410, 18;
	shf.r.wrap.b32 	%r2415, %r2410, %r2411, 18;
	mov.b64 	%rd3194, {%r2415, %r2414};
	xor.b64  	%rd3195, %rd3193, %rd3194;
	shf.l.wrap.b32 	%r2416, %r2410, %r2411, 23;
	shf.l.wrap.b32 	%r2417, %r2411, %r2410, 23;
	mov.b64 	%rd3196, {%r2417, %r2416};
	xor.b64  	%rd3197, %rd3195, %rd3196;
	xor.b64  	%rd3198, %rd3134, %rd3097;
	and.b64  	%rd3199, %rd3171, %rd3198;
	xor.b64  	%rd3200, %rd3199, %rd3097;
	add.s64 	%rd3201, %rd2603, %rd3192;
	add.s64 	%rd3202, %rd3201, %rd2936;
	add.s64 	%rd3203, %rd3202, %rd3187;
	add.s64 	%rd3204, %rd3203, %rd3060;
	add.s64 	%rd3205, %rd3204, %rd3200;
	add.s64 	%rd3206, %rd3205, %rd3197;
	add.s64 	%rd3207, %rd3206, 6902733635092675308;
	add.s64 	%rd3208, %rd3207, %rd3071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2418,%dummy}, %rd3182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2419}, %rd3182;
	}
	shf.r.wrap.b32 	%r2420, %r2419, %r2418, 28;
	shf.r.wrap.b32 	%r2421, %r2418, %r2419, 28;
	mov.b64 	%rd3209, {%r2421, %r2420};
	shf.l.wrap.b32 	%r2422, %r2418, %r2419, 30;
	shf.l.wrap.b32 	%r2423, %r2419, %r2418, 30;
	mov.b64 	%rd3210, {%r2423, %r2422};
	xor.b64  	%rd3211, %rd3209, %rd3210;
	shf.l.wrap.b32 	%r2424, %r2418, %r2419, 25;
	shf.l.wrap.b32 	%r2425, %r2419, %r2418, 25;
	mov.b64 	%rd3212, {%r2425, %r2424};
	xor.b64  	%rd3213, %rd3211, %rd3212;
	and.b64  	%rd3214, %rd3182, %rd3145;
	or.b64  	%rd3215, %rd3182, %rd3145;
	and.b64  	%rd3216, %rd3215, %rd3108;
	or.b64  	%rd3217, %rd3216, %rd3214;
	add.s64 	%rd3218, %rd3217, %rd3213;
	add.s64 	%rd3219, %rd3218, %rd3207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2426,%dummy}, %rd3158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2427}, %rd3158;
	}
	shf.r.wrap.b32 	%r2428, %r2427, %r2426, 19;
	shf.r.wrap.b32 	%r2429, %r2426, %r2427, 19;
	mov.b64 	%rd3220, {%r2429, %r2428};
	shf.l.wrap.b32 	%r2430, %r2426, %r2427, 3;
	shf.l.wrap.b32 	%r2431, %r2427, %r2426, 3;
	mov.b64 	%rd3221, {%r2431, %r2430};
	xor.b64  	%rd3222, %rd3220, %rd3221;
	shr.u64 	%rd3223, %rd3158, 6;
	xor.b64  	%rd3224, %rd3222, %rd3223;
	shf.r.wrap.b32 	%r2432, %r2089, %r2088, 1;
	shf.r.wrap.b32 	%r2433, %r2088, %r2089, 1;
	mov.b64 	%rd3225, {%r2433, %r2432};
	shf.r.wrap.b32 	%r2434, %r2089, %r2088, 8;
	shf.r.wrap.b32 	%r2435, %r2088, %r2089, 8;
	mov.b64 	%rd3226, {%r2435, %r2434};
	xor.b64  	%rd3227, %rd3225, %rd3226;
	shr.u64 	%rd3228, %rd2677, 7;
	xor.b64  	%rd3229, %rd3227, %rd3228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd3208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd3208;
	}
	shf.r.wrap.b32 	%r2438, %r2437, %r2436, 14;
	shf.r.wrap.b32 	%r2439, %r2436, %r2437, 14;
	mov.b64 	%rd3230, {%r2439, %r2438};
	shf.r.wrap.b32 	%r2440, %r2437, %r2436, 18;
	shf.r.wrap.b32 	%r2441, %r2436, %r2437, 18;
	mov.b64 	%rd3231, {%r2441, %r2440};
	xor.b64  	%rd3232, %rd3230, %rd3231;
	shf.l.wrap.b32 	%r2442, %r2436, %r2437, 23;
	shf.l.wrap.b32 	%r2443, %r2437, %r2436, 23;
	mov.b64 	%rd3233, {%r2443, %r2442};
	xor.b64  	%rd3234, %rd3232, %rd3233;
	xor.b64  	%rd3235, %rd3171, %rd3134;
	and.b64  	%rd3236, %rd3208, %rd3235;
	xor.b64  	%rd3237, %rd3236, %rd3134;
	add.s64 	%rd3238, %rd2640, %rd3229;
	add.s64 	%rd3239, %rd3238, %rd2973;
	add.s64 	%rd3240, %rd3239, %rd3224;
	add.s64 	%rd3241, %rd3240, %rd3097;
	add.s64 	%rd3242, %rd3241, %rd3237;
	add.s64 	%rd3243, %rd3242, %rd3234;
	add.s64 	%rd3244, %rd3243, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2444,%dummy}, %rd3219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2445}, %rd3219;
	}
	shf.r.wrap.b32 	%r2446, %r2445, %r2444, 28;
	shf.r.wrap.b32 	%r2447, %r2444, %r2445, 28;
	mov.b64 	%rd3245, {%r2447, %r2446};
	shf.l.wrap.b32 	%r2448, %r2444, %r2445, 30;
	shf.l.wrap.b32 	%r2449, %r2445, %r2444, 30;
	mov.b64 	%rd3246, {%r2449, %r2448};
	xor.b64  	%rd3247, %rd3245, %rd3246;
	shf.l.wrap.b32 	%r2450, %r2444, %r2445, 25;
	shf.l.wrap.b32 	%r2451, %r2445, %r2444, 25;
	mov.b64 	%rd3248, {%r2451, %r2450};
	xor.b64  	%rd3249, %rd3247, %rd3248;
	and.b64  	%rd3250, %rd3219, %rd3182;
	or.b64  	%rd3251, %rd3219, %rd3182;
	and.b64  	%rd3252, %rd3251, %rd3145;
	or.b64  	%rd3253, %rd3252, %rd3250;
	add.s64 	%rd3254, %rd3249, %rd9260;
	add.s64 	%rd3255, %rd3254, %rd3253;
	add.s64 	%rd9260, %rd3255, %rd3244;
	st.local.u64 	[%rd7], %rd9260;
	add.s64 	%rd9259, %rd3219, %rd9259;
	st.local.u64 	[%rd7+8], %rd9259;
	add.s64 	%rd9258, %rd3182, %rd9258;
	st.local.u64 	[%rd7+16], %rd9258;
	add.s64 	%rd9257, %rd3145, %rd9257;
	st.local.u64 	[%rd7+24], %rd9257;
	add.s64 	%rd3256, %rd3108, %rd9256;
	add.s64 	%rd9256, %rd3256, %rd3244;
	st.local.u64 	[%rd7+32], %rd9256;
	add.s64 	%rd9255, %rd3208, %rd9255;
	st.local.u64 	[%rd7+40], %rd9255;
	add.s64 	%rd9254, %rd3171, %rd9254;
	st.local.u64 	[%rd7+48], %rd9254;
	add.s64 	%rd9253, %rd3134, %rd9253;
	st.local.u64 	[%rd7+56], %rd9253;
	add.s64 	%rd9262, %rd9262, 128;
	add.s64 	%rd9261, %rd9261, 128;
	add.s32 	%r10271, %r10271, -128;
	setp.ne.s32 	%p3, %r10271, 0;
	@%p3 bra 	$L__BB3_2;

	add.u64 	%rd9290, %SP, 0;
	cvta.to.local.u64 	%rd9308, %rd9290;
	add.u64 	%rd9281, %SPL, 16;
	add.s64 	%rd79, %rd9281, 1;
	mov.u64 	%rd9279, 0;
	mov.u32 	%r10272, 0;

$L__BB3_7:
	add.s64 	%rd3260, %rd79, %rd9279;
	mov.u16 	%rs146, 0;
	st.local.u8 	[%rd3260], %rs146;
	add.s64 	%rd9279, %rd9279, 1;
	add.s32 	%r10272, %r10272, 1;
	setp.lt.u32 	%p4, %r10272, 127;
	@%p4 bra 	$L__BB3_7;

	mov.u16 	%rs147, 128;
	st.local.u8 	[%rd9281], %rs147;
	mov.u32 	%r2453, 2097152;
	mov.u32 	%r2454, 0;
	st.local.v4.u32 	[%rd9308], {%r2454, %r2454, %r2454, %r2453};
	mov.u32 	%r2455, 1136;
	st.local.u32 	[%rd7+-8], %r2455;
	add.u64 	%rd9280, %SPL, 144;
	mov.u32 	%r10273, 0;

$L__BB3_9:
	ld.local.u8 	%rs148, [%rd9281];
	st.local.u8 	[%rd9280+72], %rs148;
	ld.local.u8 	%rs149, [%rd9281+1];
	st.local.u8 	[%rd9280+73], %rs149;
	ld.local.u8 	%rs150, [%rd9281+2];
	st.local.u8 	[%rd9280+74], %rs150;
	ld.local.u8 	%rs151, [%rd9281+3];
	st.local.u8 	[%rd9280+75], %rs151;
	add.s64 	%rd9280, %rd9280, 4;
	add.s32 	%r10273, %r10273, -4;
	setp.ne.s32 	%p5, %r10273, -112;
	add.s64 	%rd9281, %rd9281, 4;
	@%p5 bra 	$L__BB3_9;

	ld.local.u32 	%r2458, [%rd7+-8];
	and.b32  	%r10278, %r2458, 127;
	mov.u32 	%r2459, 128;
	sub.s32 	%r9, %r2459, %r10278;
	add.s32 	%r2460, %r2458, 16;
	mov.u32 	%r10281, 16;
	st.local.u32 	[%rd7+-8], %r2460;
	setp.eq.s32 	%p6, %r10278, 0;
	setp.gt.u32 	%p7, %r9, 16;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB3_18;

	setp.eq.s32 	%p9, %r9, 0;
	@%p9 bra 	$L__BB3_17;

	add.u64 	%rd9251, %SPL, 144;
	cvt.u64.u32 	%rd3261, %r10278;
	add.s64 	%rd3262, %rd9251, %rd3261;
	add.s64 	%rd9286, %rd3262, 72;
	and.b32  	%r10275, %r9, 3;
	setp.eq.s32 	%p10, %r10275, 0;
	mov.u64 	%rd9287, %rd9308;
	mov.u32 	%r10276, %r9;
	@%p10 bra 	$L__BB3_15;

	mov.u64 	%rd9282, %rd9286;
	mov.u64 	%rd9283, %rd9308;
	mov.u32 	%r10276, %r9;

$L__BB3_14:
	.pragma "nounroll";
	add.s32 	%r10276, %r10276, -1;
	add.s64 	%rd9287, %rd9283, 1;
	ld.local.u8 	%rs152, [%rd9283];
	add.s64 	%rd9286, %rd9282, 1;
	st.local.u8 	[%rd9282], %rs152;
	add.s32 	%r10275, %r10275, -1;
	setp.ne.s32 	%p11, %r10275, 0;
	mov.u64 	%rd9282, %rd9286;
	mov.u64 	%rd9283, %rd9287;
	@%p11 bra 	$L__BB3_14;

$L__BB3_15:
	xor.b32  	%r2461, %r10278, 127;
	setp.lt.u32 	%p12, %r2461, 3;
	@%p12 bra 	$L__BB3_17;

$L__BB3_16:
	ld.local.u8 	%rs153, [%rd9287];
	st.local.u8 	[%rd9286], %rs153;
	ld.local.u8 	%rs154, [%rd9287+1];
	st.local.u8 	[%rd9286+1], %rs154;
	ld.local.u8 	%rs155, [%rd9287+2];
	st.local.u8 	[%rd9286+2], %rs155;
	add.s64 	%rd100, %rd9287, 4;
	ld.local.u8 	%rs156, [%rd9287+3];
	add.s64 	%rd101, %rd9286, 4;
	st.local.u8 	[%rd9286+3], %rs156;
	add.s32 	%r10276, %r10276, -4;
	setp.ne.s32 	%p13, %r10276, 0;
	mov.u64 	%rd9286, %rd101;
	mov.u64 	%rd9287, %rd100;
	@%p13 bra 	$L__BB3_16;

$L__BB3_17:
	ld.local.u64 	%rd3263, [%rd7+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2463, %temp}, %rd3263;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2464}, %rd3263;
	}
	mov.u32 	%r2465, 291;
	mov.u32 	%r10278, 0;
	prmt.b32 	%r2466, %r2463, %r10278, %r2465;
	prmt.b32 	%r2467, %r2464, %r10278, %r2465;
	mov.b64 	%rd3264, {%r2467, %r2466};
	ld.local.u64 	%rd3265, [%rd7+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2468, %temp}, %rd3265;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2469}, %rd3265;
	}
	prmt.b32 	%r2470, %r2468, %r10278, %r2465;
	prmt.b32 	%r2471, %r2469, %r10278, %r2465;
	mov.b64 	%rd3266, {%r2471, %r2470};
	ld.local.u64 	%rd3267, [%rd7+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2472, %temp}, %rd3267;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2473}, %rd3267;
	}
	prmt.b32 	%r2474, %r2472, %r10278, %r2465;
	prmt.b32 	%r2475, %r2473, %r10278, %r2465;
	mov.b64 	%rd3268, {%r2475, %r2474};
	ld.local.u64 	%rd3269, [%rd7+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2476, %temp}, %rd3269;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2477}, %rd3269;
	}
	prmt.b32 	%r2478, %r2476, %r10278, %r2465;
	prmt.b32 	%r2479, %r2477, %r10278, %r2465;
	mov.b64 	%rd3270, {%r2479, %r2478};
	ld.local.u64 	%rd3271, [%rd7+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2480, %temp}, %rd3271;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2481}, %rd3271;
	}
	prmt.b32 	%r2482, %r2480, %r10278, %r2465;
	prmt.b32 	%r2483, %r2481, %r10278, %r2465;
	mov.b64 	%rd3272, {%r2483, %r2482};
	ld.local.u64 	%rd3273, [%rd7+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2484, %temp}, %rd3273;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2485}, %rd3273;
	}
	prmt.b32 	%r2486, %r2484, %r10278, %r2465;
	prmt.b32 	%r2487, %r2485, %r10278, %r2465;
	mov.b64 	%rd3274, {%r2487, %r2486};
	ld.local.u64 	%rd3275, [%rd7+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2488, %temp}, %rd3275;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2489}, %rd3275;
	}
	prmt.b32 	%r2490, %r2488, %r10278, %r2465;
	prmt.b32 	%r2491, %r2489, %r10278, %r2465;
	mov.b64 	%rd3276, {%r2491, %r2490};
	ld.local.u64 	%rd3277, [%rd7+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2492, %temp}, %rd3277;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2493}, %rd3277;
	}
	prmt.b32 	%r2494, %r2492, %r10278, %r2465;
	prmt.b32 	%r2495, %r2493, %r10278, %r2465;
	mov.b64 	%rd3278, {%r2495, %r2494};
	ld.local.u64 	%rd3279, [%rd7+128];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2496, %temp}, %rd3279;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2497}, %rd3279;
	}
	prmt.b32 	%r2498, %r2496, %r10278, %r2465;
	prmt.b32 	%r2499, %r2497, %r10278, %r2465;
	mov.b64 	%rd3280, {%r2499, %r2498};
	ld.local.u64 	%rd3281, [%rd7+136];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2500, %temp}, %rd3281;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2501}, %rd3281;
	}
	prmt.b32 	%r2502, %r2500, %r10278, %r2465;
	prmt.b32 	%r2503, %r2501, %r10278, %r2465;
	mov.b64 	%rd3282, {%r2503, %r2502};
	ld.local.u64 	%rd3283, [%rd7+144];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2504, %temp}, %rd3283;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2505}, %rd3283;
	}
	prmt.b32 	%r2506, %r2504, %r10278, %r2465;
	prmt.b32 	%r2507, %r2505, %r10278, %r2465;
	mov.b64 	%rd3284, {%r2507, %r2506};
	ld.local.u64 	%rd3285, [%rd7+152];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2508, %temp}, %rd3285;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2509}, %rd3285;
	}
	prmt.b32 	%r2510, %r2508, %r10278, %r2465;
	prmt.b32 	%r2511, %r2509, %r10278, %r2465;
	mov.b64 	%rd3286, {%r2511, %r2510};
	ld.local.u64 	%rd3287, [%rd7+160];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2512, %temp}, %rd3287;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2513}, %rd3287;
	}
	prmt.b32 	%r2514, %r2512, %r10278, %r2465;
	prmt.b32 	%r2515, %r2513, %r10278, %r2465;
	mov.b64 	%rd3288, {%r2515, %r2514};
	ld.local.u64 	%rd3289, [%rd7+168];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2516, %temp}, %rd3289;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2517}, %rd3289;
	}
	prmt.b32 	%r2518, %r2516, %r10278, %r2465;
	prmt.b32 	%r2519, %r2517, %r10278, %r2465;
	mov.b64 	%rd3290, {%r2519, %r2518};
	ld.local.u64 	%rd3291, [%rd7+176];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2520, %temp}, %rd3291;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2521}, %rd3291;
	}
	prmt.b32 	%r2522, %r2520, %r10278, %r2465;
	prmt.b32 	%r2523, %r2521, %r10278, %r2465;
	mov.b64 	%rd3292, {%r2523, %r2522};
	ld.local.u64 	%rd3293, [%rd7+184];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2524, %temp}, %rd3293;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2525}, %rd3293;
	}
	prmt.b32 	%r2526, %r2524, %r10278, %r2465;
	prmt.b32 	%r2527, %r2525, %r10278, %r2465;
	mov.b64 	%rd3294, {%r2527, %r2526};
	ld.local.u64 	%rd3295, [%rd7+56];
	add.s64 	%rd3296, %rd3264, %rd3295;
	ld.local.u64 	%rd3297, [%rd7+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2528,%dummy}, %rd3297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2529}, %rd3297;
	}
	shf.r.wrap.b32 	%r2530, %r2529, %r2528, 14;
	shf.r.wrap.b32 	%r2531, %r2528, %r2529, 14;
	mov.b64 	%rd3298, {%r2531, %r2530};
	shf.r.wrap.b32 	%r2532, %r2529, %r2528, 18;
	shf.r.wrap.b32 	%r2533, %r2528, %r2529, 18;
	mov.b64 	%rd3299, {%r2533, %r2532};
	xor.b64  	%rd3300, %rd3298, %rd3299;
	shf.l.wrap.b32 	%r2534, %r2528, %r2529, 23;
	shf.l.wrap.b32 	%r2535, %r2529, %r2528, 23;
	mov.b64 	%rd3301, {%r2535, %r2534};
	xor.b64  	%rd3302, %rd3300, %rd3301;
	add.s64 	%rd3303, %rd3296, %rd3302;
	ld.local.u64 	%rd3304, [%rd7+48];
	ld.local.u64 	%rd3305, [%rd7+40];
	xor.b64  	%rd3306, %rd3304, %rd3305;
	and.b64  	%rd3307, %rd3306, %rd3297;
	xor.b64  	%rd3308, %rd3307, %rd3304;
	add.s64 	%rd3309, %rd3303, %rd3308;
	add.s64 	%rd3310, %rd3309, 4794697086780616226;
	ld.local.u64 	%rd3311, [%rd7+24];
	add.s64 	%rd3312, %rd3310, %rd3311;
	ld.local.u64 	%rd3313, [%rd7];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2536,%dummy}, %rd3313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2537}, %rd3313;
	}
	shf.r.wrap.b32 	%r2538, %r2537, %r2536, 28;
	shf.r.wrap.b32 	%r2539, %r2536, %r2537, 28;
	mov.b64 	%rd3314, {%r2539, %r2538};
	shf.l.wrap.b32 	%r2540, %r2536, %r2537, 30;
	shf.l.wrap.b32 	%r2541, %r2537, %r2536, 30;
	mov.b64 	%rd3315, {%r2541, %r2540};
	xor.b64  	%rd3316, %rd3314, %rd3315;
	shf.l.wrap.b32 	%r2542, %r2536, %r2537, 25;
	shf.l.wrap.b32 	%r2543, %r2537, %r2536, 25;
	mov.b64 	%rd3317, {%r2543, %r2542};
	xor.b64  	%rd3318, %rd3316, %rd3317;
	ld.local.u64 	%rd3319, [%rd7+8];
	and.b64  	%rd3320, %rd3319, %rd3313;
	or.b64  	%rd3321, %rd3319, %rd3313;
	ld.local.u64 	%rd3322, [%rd7+16];
	and.b64  	%rd3323, %rd3322, %rd3321;
	or.b64  	%rd3324, %rd3323, %rd3320;
	add.s64 	%rd3325, %rd3324, %rd3318;
	add.s64 	%rd3326, %rd3325, %rd3310;
	add.s64 	%rd3327, %rd3266, %rd3304;
	xor.b64  	%rd3328, %rd3305, %rd3297;
	and.b64  	%rd3329, %rd3312, %rd3328;
	xor.b64  	%rd3330, %rd3329, %rd3305;
	add.s64 	%rd3331, %rd3327, %rd3330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2544,%dummy}, %rd3312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd3312;
	}
	shf.r.wrap.b32 	%r2546, %r2545, %r2544, 14;
	shf.r.wrap.b32 	%r2547, %r2544, %r2545, 14;
	mov.b64 	%rd3332, {%r2547, %r2546};
	shf.r.wrap.b32 	%r2548, %r2545, %r2544, 18;
	shf.r.wrap.b32 	%r2549, %r2544, %r2545, 18;
	mov.b64 	%rd3333, {%r2549, %r2548};
	xor.b64  	%rd3334, %rd3332, %rd3333;
	shf.l.wrap.b32 	%r2550, %r2544, %r2545, 23;
	shf.l.wrap.b32 	%r2551, %r2545, %r2544, 23;
	mov.b64 	%rd3335, {%r2551, %r2550};
	xor.b64  	%rd3336, %rd3334, %rd3335;
	add.s64 	%rd3337, %rd3331, %rd3336;
	add.s64 	%rd3338, %rd3337, 8158064640168781261;
	add.s64 	%rd3339, %rd3338, %rd3322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2552,%dummy}, %rd3326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd3326;
	}
	shf.r.wrap.b32 	%r2554, %r2553, %r2552, 28;
	shf.r.wrap.b32 	%r2555, %r2552, %r2553, 28;
	mov.b64 	%rd3340, {%r2555, %r2554};
	shf.l.wrap.b32 	%r2556, %r2552, %r2553, 30;
	shf.l.wrap.b32 	%r2557, %r2553, %r2552, 30;
	mov.b64 	%rd3341, {%r2557, %r2556};
	xor.b64  	%rd3342, %rd3340, %rd3341;
	shf.l.wrap.b32 	%r2558, %r2552, %r2553, 25;
	shf.l.wrap.b32 	%r2559, %r2553, %r2552, 25;
	mov.b64 	%rd3343, {%r2559, %r2558};
	xor.b64  	%rd3344, %rd3342, %rd3343;
	and.b64  	%rd3345, %rd3326, %rd3313;
	or.b64  	%rd3346, %rd3326, %rd3313;
	and.b64  	%rd3347, %rd3346, %rd3319;
	or.b64  	%rd3348, %rd3347, %rd3345;
	add.s64 	%rd3349, %rd3348, %rd3344;
	add.s64 	%rd3350, %rd3349, %rd3338;
	add.s64 	%rd3351, %rd3268, %rd3305;
	xor.b64  	%rd3352, %rd3312, %rd3297;
	and.b64  	%rd3353, %rd3339, %rd3352;
	xor.b64  	%rd3354, %rd3353, %rd3297;
	add.s64 	%rd3355, %rd3351, %rd3354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd3339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd3339;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 14;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 14;
	mov.b64 	%rd3356, {%r2563, %r2562};
	shf.r.wrap.b32 	%r2564, %r2561, %r2560, 18;
	shf.r.wrap.b32 	%r2565, %r2560, %r2561, 18;
	mov.b64 	%rd3357, {%r2565, %r2564};
	xor.b64  	%rd3358, %rd3356, %rd3357;
	shf.l.wrap.b32 	%r2566, %r2560, %r2561, 23;
	shf.l.wrap.b32 	%r2567, %r2561, %r2560, 23;
	mov.b64 	%rd3359, {%r2567, %r2566};
	xor.b64  	%rd3360, %rd3358, %rd3359;
	add.s64 	%rd3361, %rd3355, %rd3360;
	add.s64 	%rd3362, %rd3361, -5349999486874862801;
	add.s64 	%rd3363, %rd3362, %rd3319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2568,%dummy}, %rd3350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd3350;
	}
	shf.r.wrap.b32 	%r2570, %r2569, %r2568, 28;
	shf.r.wrap.b32 	%r2571, %r2568, %r2569, 28;
	mov.b64 	%rd3364, {%r2571, %r2570};
	shf.l.wrap.b32 	%r2572, %r2568, %r2569, 30;
	shf.l.wrap.b32 	%r2573, %r2569, %r2568, 30;
	mov.b64 	%rd3365, {%r2573, %r2572};
	xor.b64  	%rd3366, %rd3364, %rd3365;
	shf.l.wrap.b32 	%r2574, %r2568, %r2569, 25;
	shf.l.wrap.b32 	%r2575, %r2569, %r2568, 25;
	mov.b64 	%rd3367, {%r2575, %r2574};
	xor.b64  	%rd3368, %rd3366, %rd3367;
	and.b64  	%rd3369, %rd3350, %rd3326;
	or.b64  	%rd3370, %rd3350, %rd3326;
	and.b64  	%rd3371, %rd3370, %rd3313;
	or.b64  	%rd3372, %rd3371, %rd3369;
	add.s64 	%rd3373, %rd3372, %rd3368;
	add.s64 	%rd3374, %rd3373, %rd3362;
	add.s64 	%rd3375, %rd3270, %rd3297;
	xor.b64  	%rd3376, %rd3339, %rd3312;
	and.b64  	%rd3377, %rd3363, %rd3376;
	xor.b64  	%rd3378, %rd3377, %rd3312;
	add.s64 	%rd3379, %rd3375, %rd3378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2576,%dummy}, %rd3363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2577}, %rd3363;
	}
	shf.r.wrap.b32 	%r2578, %r2577, %r2576, 14;
	shf.r.wrap.b32 	%r2579, %r2576, %r2577, 14;
	mov.b64 	%rd3380, {%r2579, %r2578};
	shf.r.wrap.b32 	%r2580, %r2577, %r2576, 18;
	shf.r.wrap.b32 	%r2581, %r2576, %r2577, 18;
	mov.b64 	%rd3381, {%r2581, %r2580};
	xor.b64  	%rd3382, %rd3380, %rd3381;
	shf.l.wrap.b32 	%r2582, %r2576, %r2577, 23;
	shf.l.wrap.b32 	%r2583, %r2577, %r2576, 23;
	mov.b64 	%rd3383, {%r2583, %r2582};
	xor.b64  	%rd3384, %rd3382, %rd3383;
	add.s64 	%rd3385, %rd3379, %rd3384;
	add.s64 	%rd3386, %rd3385, -1606136188198331460;
	add.s64 	%rd3387, %rd3386, %rd3313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2584,%dummy}, %rd3374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2585}, %rd3374;
	}
	shf.r.wrap.b32 	%r2586, %r2585, %r2584, 28;
	shf.r.wrap.b32 	%r2587, %r2584, %r2585, 28;
	mov.b64 	%rd3388, {%r2587, %r2586};
	shf.l.wrap.b32 	%r2588, %r2584, %r2585, 30;
	shf.l.wrap.b32 	%r2589, %r2585, %r2584, 30;
	mov.b64 	%rd3389, {%r2589, %r2588};
	xor.b64  	%rd3390, %rd3388, %rd3389;
	shf.l.wrap.b32 	%r2590, %r2584, %r2585, 25;
	shf.l.wrap.b32 	%r2591, %r2585, %r2584, 25;
	mov.b64 	%rd3391, {%r2591, %r2590};
	xor.b64  	%rd3392, %rd3390, %rd3391;
	and.b64  	%rd3393, %rd3374, %rd3350;
	or.b64  	%rd3394, %rd3374, %rd3350;
	and.b64  	%rd3395, %rd3394, %rd3326;
	or.b64  	%rd3396, %rd3395, %rd3393;
	add.s64 	%rd3397, %rd3396, %rd3392;
	add.s64 	%rd3398, %rd3397, %rd3386;
	add.s64 	%rd3399, %rd3272, %rd3312;
	xor.b64  	%rd3400, %rd3363, %rd3339;
	and.b64  	%rd3401, %rd3387, %rd3400;
	xor.b64  	%rd3402, %rd3401, %rd3339;
	add.s64 	%rd3403, %rd3399, %rd3402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2592,%dummy}, %rd3387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2593}, %rd3387;
	}
	shf.r.wrap.b32 	%r2594, %r2593, %r2592, 14;
	shf.r.wrap.b32 	%r2595, %r2592, %r2593, 14;
	mov.b64 	%rd3404, {%r2595, %r2594};
	shf.r.wrap.b32 	%r2596, %r2593, %r2592, 18;
	shf.r.wrap.b32 	%r2597, %r2592, %r2593, 18;
	mov.b64 	%rd3405, {%r2597, %r2596};
	xor.b64  	%rd3406, %rd3404, %rd3405;
	shf.l.wrap.b32 	%r2598, %r2592, %r2593, 23;
	shf.l.wrap.b32 	%r2599, %r2593, %r2592, 23;
	mov.b64 	%rd3407, {%r2599, %r2598};
	xor.b64  	%rd3408, %rd3406, %rd3407;
	add.s64 	%rd3409, %rd3403, %rd3408;
	add.s64 	%rd3410, %rd3409, 4131703408338449720;
	add.s64 	%rd3411, %rd3410, %rd3326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2600,%dummy}, %rd3398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2601}, %rd3398;
	}
	shf.r.wrap.b32 	%r2602, %r2601, %r2600, 28;
	shf.r.wrap.b32 	%r2603, %r2600, %r2601, 28;
	mov.b64 	%rd3412, {%r2603, %r2602};
	shf.l.wrap.b32 	%r2604, %r2600, %r2601, 30;
	shf.l.wrap.b32 	%r2605, %r2601, %r2600, 30;
	mov.b64 	%rd3413, {%r2605, %r2604};
	xor.b64  	%rd3414, %rd3412, %rd3413;
	shf.l.wrap.b32 	%r2606, %r2600, %r2601, 25;
	shf.l.wrap.b32 	%r2607, %r2601, %r2600, 25;
	mov.b64 	%rd3415, {%r2607, %r2606};
	xor.b64  	%rd3416, %rd3414, %rd3415;
	and.b64  	%rd3417, %rd3398, %rd3374;
	or.b64  	%rd3418, %rd3398, %rd3374;
	and.b64  	%rd3419, %rd3418, %rd3350;
	or.b64  	%rd3420, %rd3419, %rd3417;
	add.s64 	%rd3421, %rd3420, %rd3416;
	add.s64 	%rd3422, %rd3421, %rd3410;
	add.s64 	%rd3423, %rd3274, %rd3339;
	xor.b64  	%rd3424, %rd3387, %rd3363;
	and.b64  	%rd3425, %rd3411, %rd3424;
	xor.b64  	%rd3426, %rd3425, %rd3363;
	add.s64 	%rd3427, %rd3423, %rd3426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd3411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2609}, %rd3411;
	}
	shf.r.wrap.b32 	%r2610, %r2609, %r2608, 14;
	shf.r.wrap.b32 	%r2611, %r2608, %r2609, 14;
	mov.b64 	%rd3428, {%r2611, %r2610};
	shf.r.wrap.b32 	%r2612, %r2609, %r2608, 18;
	shf.r.wrap.b32 	%r2613, %r2608, %r2609, 18;
	mov.b64 	%rd3429, {%r2613, %r2612};
	xor.b64  	%rd3430, %rd3428, %rd3429;
	shf.l.wrap.b32 	%r2614, %r2608, %r2609, 23;
	shf.l.wrap.b32 	%r2615, %r2609, %r2608, 23;
	mov.b64 	%rd3431, {%r2615, %r2614};
	xor.b64  	%rd3432, %rd3430, %rd3431;
	add.s64 	%rd3433, %rd3427, %rd3432;
	add.s64 	%rd3434, %rd3433, 6480981068601479193;
	add.s64 	%rd3435, %rd3434, %rd3350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2616,%dummy}, %rd3422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2617}, %rd3422;
	}
	shf.r.wrap.b32 	%r2618, %r2617, %r2616, 28;
	shf.r.wrap.b32 	%r2619, %r2616, %r2617, 28;
	mov.b64 	%rd3436, {%r2619, %r2618};
	shf.l.wrap.b32 	%r2620, %r2616, %r2617, 30;
	shf.l.wrap.b32 	%r2621, %r2617, %r2616, 30;
	mov.b64 	%rd3437, {%r2621, %r2620};
	xor.b64  	%rd3438, %rd3436, %rd3437;
	shf.l.wrap.b32 	%r2622, %r2616, %r2617, 25;
	shf.l.wrap.b32 	%r2623, %r2617, %r2616, 25;
	mov.b64 	%rd3439, {%r2623, %r2622};
	xor.b64  	%rd3440, %rd3438, %rd3439;
	and.b64  	%rd3441, %rd3422, %rd3398;
	or.b64  	%rd3442, %rd3422, %rd3398;
	and.b64  	%rd3443, %rd3442, %rd3374;
	or.b64  	%rd3444, %rd3443, %rd3441;
	add.s64 	%rd3445, %rd3444, %rd3440;
	add.s64 	%rd3446, %rd3445, %rd3434;
	add.s64 	%rd3447, %rd3276, %rd3363;
	xor.b64  	%rd3448, %rd3411, %rd3387;
	and.b64  	%rd3449, %rd3435, %rd3448;
	xor.b64  	%rd3450, %rd3449, %rd3387;
	add.s64 	%rd3451, %rd3447, %rd3450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2624,%dummy}, %rd3435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2625}, %rd3435;
	}
	shf.r.wrap.b32 	%r2626, %r2625, %r2624, 14;
	shf.r.wrap.b32 	%r2627, %r2624, %r2625, 14;
	mov.b64 	%rd3452, {%r2627, %r2626};
	shf.r.wrap.b32 	%r2628, %r2625, %r2624, 18;
	shf.r.wrap.b32 	%r2629, %r2624, %r2625, 18;
	mov.b64 	%rd3453, {%r2629, %r2628};
	xor.b64  	%rd3454, %rd3452, %rd3453;
	shf.l.wrap.b32 	%r2630, %r2624, %r2625, 23;
	shf.l.wrap.b32 	%r2631, %r2625, %r2624, 23;
	mov.b64 	%rd3455, {%r2631, %r2630};
	xor.b64  	%rd3456, %rd3454, %rd3455;
	add.s64 	%rd3457, %rd3451, %rd3456;
	add.s64 	%rd3458, %rd3457, -7908458776815382629;
	add.s64 	%rd3459, %rd3458, %rd3374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2632,%dummy}, %rd3446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2633}, %rd3446;
	}
	shf.r.wrap.b32 	%r2634, %r2633, %r2632, 28;
	shf.r.wrap.b32 	%r2635, %r2632, %r2633, 28;
	mov.b64 	%rd3460, {%r2635, %r2634};
	shf.l.wrap.b32 	%r2636, %r2632, %r2633, 30;
	shf.l.wrap.b32 	%r2637, %r2633, %r2632, 30;
	mov.b64 	%rd3461, {%r2637, %r2636};
	xor.b64  	%rd3462, %rd3460, %rd3461;
	shf.l.wrap.b32 	%r2638, %r2632, %r2633, 25;
	shf.l.wrap.b32 	%r2639, %r2633, %r2632, 25;
	mov.b64 	%rd3463, {%r2639, %r2638};
	xor.b64  	%rd3464, %rd3462, %rd3463;
	and.b64  	%rd3465, %rd3446, %rd3422;
	or.b64  	%rd3466, %rd3446, %rd3422;
	and.b64  	%rd3467, %rd3466, %rd3398;
	or.b64  	%rd3468, %rd3467, %rd3465;
	add.s64 	%rd3469, %rd3468, %rd3464;
	add.s64 	%rd3470, %rd3469, %rd3458;
	add.s64 	%rd3471, %rd3278, %rd3387;
	xor.b64  	%rd3472, %rd3435, %rd3411;
	and.b64  	%rd3473, %rd3459, %rd3472;
	xor.b64  	%rd3474, %rd3473, %rd3411;
	add.s64 	%rd3475, %rd3471, %rd3474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2640,%dummy}, %rd3459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2641}, %rd3459;
	}
	shf.r.wrap.b32 	%r2642, %r2641, %r2640, 14;
	shf.r.wrap.b32 	%r2643, %r2640, %r2641, 14;
	mov.b64 	%rd3476, {%r2643, %r2642};
	shf.r.wrap.b32 	%r2644, %r2641, %r2640, 18;
	shf.r.wrap.b32 	%r2645, %r2640, %r2641, 18;
	mov.b64 	%rd3477, {%r2645, %r2644};
	xor.b64  	%rd3478, %rd3476, %rd3477;
	shf.l.wrap.b32 	%r2646, %r2640, %r2641, 23;
	shf.l.wrap.b32 	%r2647, %r2641, %r2640, 23;
	mov.b64 	%rd3479, {%r2647, %r2646};
	xor.b64  	%rd3480, %rd3478, %rd3479;
	add.s64 	%rd3481, %rd3475, %rd3480;
	add.s64 	%rd3482, %rd3481, -6116909921290321640;
	add.s64 	%rd3483, %rd3482, %rd3398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2648,%dummy}, %rd3470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2649}, %rd3470;
	}
	shf.r.wrap.b32 	%r2650, %r2649, %r2648, 28;
	shf.r.wrap.b32 	%r2651, %r2648, %r2649, 28;
	mov.b64 	%rd3484, {%r2651, %r2650};
	shf.l.wrap.b32 	%r2652, %r2648, %r2649, 30;
	shf.l.wrap.b32 	%r2653, %r2649, %r2648, 30;
	mov.b64 	%rd3485, {%r2653, %r2652};
	xor.b64  	%rd3486, %rd3484, %rd3485;
	shf.l.wrap.b32 	%r2654, %r2648, %r2649, 25;
	shf.l.wrap.b32 	%r2655, %r2649, %r2648, 25;
	mov.b64 	%rd3487, {%r2655, %r2654};
	xor.b64  	%rd3488, %rd3486, %rd3487;
	and.b64  	%rd3489, %rd3470, %rd3446;
	or.b64  	%rd3490, %rd3470, %rd3446;
	and.b64  	%rd3491, %rd3490, %rd3422;
	or.b64  	%rd3492, %rd3491, %rd3489;
	add.s64 	%rd3493, %rd3492, %rd3488;
	add.s64 	%rd3494, %rd3493, %rd3482;
	add.s64 	%rd3495, %rd3280, %rd3411;
	xor.b64  	%rd3496, %rd3459, %rd3435;
	and.b64  	%rd3497, %rd3483, %rd3496;
	xor.b64  	%rd3498, %rd3497, %rd3435;
	add.s64 	%rd3499, %rd3495, %rd3498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2656,%dummy}, %rd3483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd3483;
	}
	shf.r.wrap.b32 	%r2658, %r2657, %r2656, 14;
	shf.r.wrap.b32 	%r2659, %r2656, %r2657, 14;
	mov.b64 	%rd3500, {%r2659, %r2658};
	shf.r.wrap.b32 	%r2660, %r2657, %r2656, 18;
	shf.r.wrap.b32 	%r2661, %r2656, %r2657, 18;
	mov.b64 	%rd3501, {%r2661, %r2660};
	xor.b64  	%rd3502, %rd3500, %rd3501;
	shf.l.wrap.b32 	%r2662, %r2656, %r2657, 23;
	shf.l.wrap.b32 	%r2663, %r2657, %r2656, 23;
	mov.b64 	%rd3503, {%r2663, %r2662};
	xor.b64  	%rd3504, %rd3502, %rd3503;
	add.s64 	%rd3505, %rd3499, %rd3504;
	add.s64 	%rd3506, %rd3505, -2880145864133508542;
	add.s64 	%rd3507, %rd3506, %rd3422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2664,%dummy}, %rd3494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd3494;
	}
	shf.r.wrap.b32 	%r2666, %r2665, %r2664, 28;
	shf.r.wrap.b32 	%r2667, %r2664, %r2665, 28;
	mov.b64 	%rd3508, {%r2667, %r2666};
	shf.l.wrap.b32 	%r2668, %r2664, %r2665, 30;
	shf.l.wrap.b32 	%r2669, %r2665, %r2664, 30;
	mov.b64 	%rd3509, {%r2669, %r2668};
	xor.b64  	%rd3510, %rd3508, %rd3509;
	shf.l.wrap.b32 	%r2670, %r2664, %r2665, 25;
	shf.l.wrap.b32 	%r2671, %r2665, %r2664, 25;
	mov.b64 	%rd3511, {%r2671, %r2670};
	xor.b64  	%rd3512, %rd3510, %rd3511;
	and.b64  	%rd3513, %rd3494, %rd3470;
	or.b64  	%rd3514, %rd3494, %rd3470;
	and.b64  	%rd3515, %rd3514, %rd3446;
	or.b64  	%rd3516, %rd3515, %rd3513;
	add.s64 	%rd3517, %rd3516, %rd3512;
	add.s64 	%rd3518, %rd3517, %rd3506;
	add.s64 	%rd3519, %rd3282, %rd3435;
	xor.b64  	%rd3520, %rd3483, %rd3459;
	and.b64  	%rd3521, %rd3507, %rd3520;
	xor.b64  	%rd3522, %rd3521, %rd3459;
	add.s64 	%rd3523, %rd3519, %rd3522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2672,%dummy}, %rd3507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2673}, %rd3507;
	}
	shf.r.wrap.b32 	%r2674, %r2673, %r2672, 14;
	shf.r.wrap.b32 	%r2675, %r2672, %r2673, 14;
	mov.b64 	%rd3524, {%r2675, %r2674};
	shf.r.wrap.b32 	%r2676, %r2673, %r2672, 18;
	shf.r.wrap.b32 	%r2677, %r2672, %r2673, 18;
	mov.b64 	%rd3525, {%r2677, %r2676};
	xor.b64  	%rd3526, %rd3524, %rd3525;
	shf.l.wrap.b32 	%r2678, %r2672, %r2673, 23;
	shf.l.wrap.b32 	%r2679, %r2673, %r2672, 23;
	mov.b64 	%rd3527, {%r2679, %r2678};
	xor.b64  	%rd3528, %rd3526, %rd3527;
	add.s64 	%rd3529, %rd3523, %rd3528;
	add.s64 	%rd3530, %rd3529, 1334009975649890238;
	add.s64 	%rd3531, %rd3530, %rd3446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2680,%dummy}, %rd3518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2681}, %rd3518;
	}
	shf.r.wrap.b32 	%r2682, %r2681, %r2680, 28;
	shf.r.wrap.b32 	%r2683, %r2680, %r2681, 28;
	mov.b64 	%rd3532, {%r2683, %r2682};
	shf.l.wrap.b32 	%r2684, %r2680, %r2681, 30;
	shf.l.wrap.b32 	%r2685, %r2681, %r2680, 30;
	mov.b64 	%rd3533, {%r2685, %r2684};
	xor.b64  	%rd3534, %rd3532, %rd3533;
	shf.l.wrap.b32 	%r2686, %r2680, %r2681, 25;
	shf.l.wrap.b32 	%r2687, %r2681, %r2680, 25;
	mov.b64 	%rd3535, {%r2687, %r2686};
	xor.b64  	%rd3536, %rd3534, %rd3535;
	and.b64  	%rd3537, %rd3518, %rd3494;
	or.b64  	%rd3538, %rd3518, %rd3494;
	and.b64  	%rd3539, %rd3538, %rd3470;
	or.b64  	%rd3540, %rd3539, %rd3537;
	add.s64 	%rd3541, %rd3540, %rd3536;
	add.s64 	%rd3542, %rd3541, %rd3530;
	add.s64 	%rd3543, %rd3284, %rd3459;
	xor.b64  	%rd3544, %rd3507, %rd3483;
	and.b64  	%rd3545, %rd3531, %rd3544;
	xor.b64  	%rd3546, %rd3545, %rd3483;
	add.s64 	%rd3547, %rd3543, %rd3546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2688,%dummy}, %rd3531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2689}, %rd3531;
	}
	shf.r.wrap.b32 	%r2690, %r2689, %r2688, 14;
	shf.r.wrap.b32 	%r2691, %r2688, %r2689, 14;
	mov.b64 	%rd3548, {%r2691, %r2690};
	shf.r.wrap.b32 	%r2692, %r2689, %r2688, 18;
	shf.r.wrap.b32 	%r2693, %r2688, %r2689, 18;
	mov.b64 	%rd3549, {%r2693, %r2692};
	xor.b64  	%rd3550, %rd3548, %rd3549;
	shf.l.wrap.b32 	%r2694, %r2688, %r2689, 23;
	shf.l.wrap.b32 	%r2695, %r2689, %r2688, 23;
	mov.b64 	%rd3551, {%r2695, %r2694};
	xor.b64  	%rd3552, %rd3550, %rd3551;
	add.s64 	%rd3553, %rd3547, %rd3552;
	add.s64 	%rd3554, %rd3553, 2608012711638119052;
	add.s64 	%rd3555, %rd3554, %rd3470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2696,%dummy}, %rd3542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2697}, %rd3542;
	}
	shf.r.wrap.b32 	%r2698, %r2697, %r2696, 28;
	shf.r.wrap.b32 	%r2699, %r2696, %r2697, 28;
	mov.b64 	%rd3556, {%r2699, %r2698};
	shf.l.wrap.b32 	%r2700, %r2696, %r2697, 30;
	shf.l.wrap.b32 	%r2701, %r2697, %r2696, 30;
	mov.b64 	%rd3557, {%r2701, %r2700};
	xor.b64  	%rd3558, %rd3556, %rd3557;
	shf.l.wrap.b32 	%r2702, %r2696, %r2697, 25;
	shf.l.wrap.b32 	%r2703, %r2697, %r2696, 25;
	mov.b64 	%rd3559, {%r2703, %r2702};
	xor.b64  	%rd3560, %rd3558, %rd3559;
	and.b64  	%rd3561, %rd3542, %rd3518;
	or.b64  	%rd3562, %rd3542, %rd3518;
	and.b64  	%rd3563, %rd3562, %rd3494;
	or.b64  	%rd3564, %rd3563, %rd3561;
	add.s64 	%rd3565, %rd3564, %rd3560;
	add.s64 	%rd3566, %rd3565, %rd3554;
	add.s64 	%rd3567, %rd3286, %rd3483;
	xor.b64  	%rd3568, %rd3531, %rd3507;
	and.b64  	%rd3569, %rd3555, %rd3568;
	xor.b64  	%rd3570, %rd3569, %rd3507;
	add.s64 	%rd3571, %rd3567, %rd3570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd3555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd3555;
	}
	shf.r.wrap.b32 	%r2706, %r2705, %r2704, 14;
	shf.r.wrap.b32 	%r2707, %r2704, %r2705, 14;
	mov.b64 	%rd3572, {%r2707, %r2706};
	shf.r.wrap.b32 	%r2708, %r2705, %r2704, 18;
	shf.r.wrap.b32 	%r2709, %r2704, %r2705, 18;
	mov.b64 	%rd3573, {%r2709, %r2708};
	xor.b64  	%rd3574, %rd3572, %rd3573;
	shf.l.wrap.b32 	%r2710, %r2704, %r2705, 23;
	shf.l.wrap.b32 	%r2711, %r2705, %r2704, 23;
	mov.b64 	%rd3575, {%r2711, %r2710};
	xor.b64  	%rd3576, %rd3574, %rd3575;
	add.s64 	%rd3577, %rd3571, %rd3576;
	add.s64 	%rd3578, %rd3577, 6128411473006802146;
	add.s64 	%rd3579, %rd3578, %rd3494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2712,%dummy}, %rd3566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd3566;
	}
	shf.r.wrap.b32 	%r2714, %r2713, %r2712, 28;
	shf.r.wrap.b32 	%r2715, %r2712, %r2713, 28;
	mov.b64 	%rd3580, {%r2715, %r2714};
	shf.l.wrap.b32 	%r2716, %r2712, %r2713, 30;
	shf.l.wrap.b32 	%r2717, %r2713, %r2712, 30;
	mov.b64 	%rd3581, {%r2717, %r2716};
	xor.b64  	%rd3582, %rd3580, %rd3581;
	shf.l.wrap.b32 	%r2718, %r2712, %r2713, 25;
	shf.l.wrap.b32 	%r2719, %r2713, %r2712, 25;
	mov.b64 	%rd3583, {%r2719, %r2718};
	xor.b64  	%rd3584, %rd3582, %rd3583;
	and.b64  	%rd3585, %rd3566, %rd3542;
	or.b64  	%rd3586, %rd3566, %rd3542;
	and.b64  	%rd3587, %rd3586, %rd3518;
	or.b64  	%rd3588, %rd3587, %rd3585;
	add.s64 	%rd3589, %rd3588, %rd3584;
	add.s64 	%rd3590, %rd3589, %rd3578;
	add.s64 	%rd3591, %rd3288, %rd3507;
	xor.b64  	%rd3592, %rd3555, %rd3531;
	and.b64  	%rd3593, %rd3579, %rd3592;
	xor.b64  	%rd3594, %rd3593, %rd3531;
	add.s64 	%rd3595, %rd3591, %rd3594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd3579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd3579;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 14;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 14;
	mov.b64 	%rd3596, {%r2723, %r2722};
	shf.r.wrap.b32 	%r2724, %r2721, %r2720, 18;
	shf.r.wrap.b32 	%r2725, %r2720, %r2721, 18;
	mov.b64 	%rd3597, {%r2725, %r2724};
	xor.b64  	%rd3598, %rd3596, %rd3597;
	shf.l.wrap.b32 	%r2726, %r2720, %r2721, 23;
	shf.l.wrap.b32 	%r2727, %r2721, %r2720, 23;
	mov.b64 	%rd3599, {%r2727, %r2726};
	xor.b64  	%rd3600, %rd3598, %rd3599;
	add.s64 	%rd3601, %rd3595, %rd3600;
	add.s64 	%rd3602, %rd3601, 8268148722764581231;
	add.s64 	%rd3603, %rd3602, %rd3518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd3590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd3590;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 28;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 28;
	mov.b64 	%rd3604, {%r2731, %r2730};
	shf.l.wrap.b32 	%r2732, %r2728, %r2729, 30;
	shf.l.wrap.b32 	%r2733, %r2729, %r2728, 30;
	mov.b64 	%rd3605, {%r2733, %r2732};
	xor.b64  	%rd3606, %rd3604, %rd3605;
	shf.l.wrap.b32 	%r2734, %r2728, %r2729, 25;
	shf.l.wrap.b32 	%r2735, %r2729, %r2728, 25;
	mov.b64 	%rd3607, {%r2735, %r2734};
	xor.b64  	%rd3608, %rd3606, %rd3607;
	and.b64  	%rd3609, %rd3590, %rd3566;
	or.b64  	%rd3610, %rd3590, %rd3566;
	and.b64  	%rd3611, %rd3610, %rd3542;
	or.b64  	%rd3612, %rd3611, %rd3609;
	add.s64 	%rd3613, %rd3612, %rd3608;
	add.s64 	%rd3614, %rd3613, %rd3602;
	add.s64 	%rd3615, %rd3290, %rd3531;
	xor.b64  	%rd3616, %rd3579, %rd3555;
	and.b64  	%rd3617, %rd3603, %rd3616;
	xor.b64  	%rd3618, %rd3617, %rd3555;
	add.s64 	%rd3619, %rd3615, %rd3618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2736,%dummy}, %rd3603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2737}, %rd3603;
	}
	shf.r.wrap.b32 	%r2738, %r2737, %r2736, 14;
	shf.r.wrap.b32 	%r2739, %r2736, %r2737, 14;
	mov.b64 	%rd3620, {%r2739, %r2738};
	shf.r.wrap.b32 	%r2740, %r2737, %r2736, 18;
	shf.r.wrap.b32 	%r2741, %r2736, %r2737, 18;
	mov.b64 	%rd3621, {%r2741, %r2740};
	xor.b64  	%rd3622, %rd3620, %rd3621;
	shf.l.wrap.b32 	%r2742, %r2736, %r2737, 23;
	shf.l.wrap.b32 	%r2743, %r2737, %r2736, 23;
	mov.b64 	%rd3623, {%r2743, %r2742};
	xor.b64  	%rd3624, %rd3622, %rd3623;
	add.s64 	%rd3625, %rd3619, %rd3624;
	add.s64 	%rd3626, %rd3625, -9160688886553864527;
	add.s64 	%rd3627, %rd3626, %rd3542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2744,%dummy}, %rd3614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2745}, %rd3614;
	}
	shf.r.wrap.b32 	%r2746, %r2745, %r2744, 28;
	shf.r.wrap.b32 	%r2747, %r2744, %r2745, 28;
	mov.b64 	%rd3628, {%r2747, %r2746};
	shf.l.wrap.b32 	%r2748, %r2744, %r2745, 30;
	shf.l.wrap.b32 	%r2749, %r2745, %r2744, 30;
	mov.b64 	%rd3629, {%r2749, %r2748};
	xor.b64  	%rd3630, %rd3628, %rd3629;
	shf.l.wrap.b32 	%r2750, %r2744, %r2745, 25;
	shf.l.wrap.b32 	%r2751, %r2745, %r2744, 25;
	mov.b64 	%rd3631, {%r2751, %r2750};
	xor.b64  	%rd3632, %rd3630, %rd3631;
	and.b64  	%rd3633, %rd3614, %rd3590;
	or.b64  	%rd3634, %rd3614, %rd3590;
	and.b64  	%rd3635, %rd3634, %rd3566;
	or.b64  	%rd3636, %rd3635, %rd3633;
	add.s64 	%rd3637, %rd3636, %rd3632;
	add.s64 	%rd3638, %rd3637, %rd3626;
	add.s64 	%rd3639, %rd3292, %rd3555;
	xor.b64  	%rd3640, %rd3603, %rd3579;
	and.b64  	%rd3641, %rd3627, %rd3640;
	xor.b64  	%rd3642, %rd3641, %rd3579;
	add.s64 	%rd3643, %rd3639, %rd3642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2752,%dummy}, %rd3627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2753}, %rd3627;
	}
	shf.r.wrap.b32 	%r2754, %r2753, %r2752, 14;
	shf.r.wrap.b32 	%r2755, %r2752, %r2753, 14;
	mov.b64 	%rd3644, {%r2755, %r2754};
	shf.r.wrap.b32 	%r2756, %r2753, %r2752, 18;
	shf.r.wrap.b32 	%r2757, %r2752, %r2753, 18;
	mov.b64 	%rd3645, {%r2757, %r2756};
	xor.b64  	%rd3646, %rd3644, %rd3645;
	shf.l.wrap.b32 	%r2758, %r2752, %r2753, 23;
	shf.l.wrap.b32 	%r2759, %r2753, %r2752, 23;
	mov.b64 	%rd3647, {%r2759, %r2758};
	xor.b64  	%rd3648, %rd3646, %rd3647;
	add.s64 	%rd3649, %rd3643, %rd3648;
	add.s64 	%rd3650, %rd3649, -7215885187991268811;
	add.s64 	%rd3651, %rd3650, %rd3566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2760,%dummy}, %rd3638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2761}, %rd3638;
	}
	shf.r.wrap.b32 	%r2762, %r2761, %r2760, 28;
	shf.r.wrap.b32 	%r2763, %r2760, %r2761, 28;
	mov.b64 	%rd3652, {%r2763, %r2762};
	shf.l.wrap.b32 	%r2764, %r2760, %r2761, 30;
	shf.l.wrap.b32 	%r2765, %r2761, %r2760, 30;
	mov.b64 	%rd3653, {%r2765, %r2764};
	xor.b64  	%rd3654, %rd3652, %rd3653;
	shf.l.wrap.b32 	%r2766, %r2760, %r2761, 25;
	shf.l.wrap.b32 	%r2767, %r2761, %r2760, 25;
	mov.b64 	%rd3655, {%r2767, %r2766};
	xor.b64  	%rd3656, %rd3654, %rd3655;
	and.b64  	%rd3657, %rd3638, %rd3614;
	or.b64  	%rd3658, %rd3638, %rd3614;
	and.b64  	%rd3659, %rd3658, %rd3590;
	or.b64  	%rd3660, %rd3659, %rd3657;
	add.s64 	%rd3661, %rd3660, %rd3656;
	add.s64 	%rd3662, %rd3661, %rd3650;
	add.s64 	%rd3663, %rd3294, %rd3579;
	xor.b64  	%rd3664, %rd3627, %rd3603;
	and.b64  	%rd3665, %rd3651, %rd3664;
	xor.b64  	%rd3666, %rd3665, %rd3603;
	add.s64 	%rd3667, %rd3663, %rd3666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2768,%dummy}, %rd3651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2769}, %rd3651;
	}
	shf.r.wrap.b32 	%r2770, %r2769, %r2768, 14;
	shf.r.wrap.b32 	%r2771, %r2768, %r2769, 14;
	mov.b64 	%rd3668, {%r2771, %r2770};
	shf.r.wrap.b32 	%r2772, %r2769, %r2768, 18;
	shf.r.wrap.b32 	%r2773, %r2768, %r2769, 18;
	mov.b64 	%rd3669, {%r2773, %r2772};
	xor.b64  	%rd3670, %rd3668, %rd3669;
	shf.l.wrap.b32 	%r2774, %r2768, %r2769, 23;
	shf.l.wrap.b32 	%r2775, %r2769, %r2768, 23;
	mov.b64 	%rd3671, {%r2775, %r2774};
	xor.b64  	%rd3672, %rd3670, %rd3671;
	add.s64 	%rd3673, %rd3667, %rd3672;
	add.s64 	%rd3674, %rd3673, -4495734319001033068;
	add.s64 	%rd3675, %rd3674, %rd3590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2776,%dummy}, %rd3662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2777}, %rd3662;
	}
	shf.r.wrap.b32 	%r2778, %r2777, %r2776, 28;
	shf.r.wrap.b32 	%r2779, %r2776, %r2777, 28;
	mov.b64 	%rd3676, {%r2779, %r2778};
	shf.l.wrap.b32 	%r2780, %r2776, %r2777, 30;
	shf.l.wrap.b32 	%r2781, %r2777, %r2776, 30;
	mov.b64 	%rd3677, {%r2781, %r2780};
	xor.b64  	%rd3678, %rd3676, %rd3677;
	shf.l.wrap.b32 	%r2782, %r2776, %r2777, 25;
	shf.l.wrap.b32 	%r2783, %r2777, %r2776, 25;
	mov.b64 	%rd3679, {%r2783, %r2782};
	xor.b64  	%rd3680, %rd3678, %rd3679;
	and.b64  	%rd3681, %rd3662, %rd3638;
	or.b64  	%rd3682, %rd3662, %rd3638;
	and.b64  	%rd3683, %rd3682, %rd3614;
	or.b64  	%rd3684, %rd3683, %rd3681;
	add.s64 	%rd3685, %rd3684, %rd3680;
	add.s64 	%rd3686, %rd3685, %rd3674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2784,%dummy}, %rd3292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2785}, %rd3292;
	}
	shf.r.wrap.b32 	%r2786, %r2785, %r2784, 19;
	shf.r.wrap.b32 	%r2787, %r2784, %r2785, 19;
	mov.b64 	%rd3687, {%r2787, %r2786};
	shf.l.wrap.b32 	%r2788, %r2784, %r2785, 3;
	shf.l.wrap.b32 	%r2789, %r2785, %r2784, 3;
	mov.b64 	%rd3688, {%r2789, %r2788};
	xor.b64  	%rd3689, %rd3687, %rd3688;
	shr.u64 	%rd3690, %rd3292, 6;
	xor.b64  	%rd3691, %rd3689, %rd3690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2790,%dummy}, %rd3266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2791}, %rd3266;
	}
	shf.r.wrap.b32 	%r2792, %r2791, %r2790, 1;
	shf.r.wrap.b32 	%r2793, %r2790, %r2791, 1;
	mov.b64 	%rd3692, {%r2793, %r2792};
	shf.r.wrap.b32 	%r2794, %r2791, %r2790, 8;
	shf.r.wrap.b32 	%r2795, %r2790, %r2791, 8;
	mov.b64 	%rd3693, {%r2795, %r2794};
	xor.b64  	%rd3694, %rd3692, %rd3693;
	shr.u64 	%rd3695, %rd3266, 7;
	xor.b64  	%rd3696, %rd3694, %rd3695;
	add.s64 	%rd3697, %rd3696, %rd3264;
	add.s64 	%rd3698, %rd3697, %rd3282;
	add.s64 	%rd3699, %rd3698, %rd3691;
	add.s64 	%rd3700, %rd3699, %rd3603;
	xor.b64  	%rd3701, %rd3651, %rd3627;
	and.b64  	%rd3702, %rd3675, %rd3701;
	xor.b64  	%rd3703, %rd3702, %rd3627;
	add.s64 	%rd3704, %rd3700, %rd3703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2796,%dummy}, %rd3675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2797}, %rd3675;
	}
	shf.r.wrap.b32 	%r2798, %r2797, %r2796, 14;
	shf.r.wrap.b32 	%r2799, %r2796, %r2797, 14;
	mov.b64 	%rd3705, {%r2799, %r2798};
	shf.r.wrap.b32 	%r2800, %r2797, %r2796, 18;
	shf.r.wrap.b32 	%r2801, %r2796, %r2797, 18;
	mov.b64 	%rd3706, {%r2801, %r2800};
	xor.b64  	%rd3707, %rd3705, %rd3706;
	shf.l.wrap.b32 	%r2802, %r2796, %r2797, 23;
	shf.l.wrap.b32 	%r2803, %r2797, %r2796, 23;
	mov.b64 	%rd3708, {%r2803, %r2802};
	xor.b64  	%rd3709, %rd3707, %rd3708;
	add.s64 	%rd3710, %rd3704, %rd3709;
	add.s64 	%rd3711, %rd3710, -1973867731355612462;
	add.s64 	%rd3712, %rd3711, %rd3614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2804,%dummy}, %rd3686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd3686;
	}
	shf.r.wrap.b32 	%r2806, %r2805, %r2804, 28;
	shf.r.wrap.b32 	%r2807, %r2804, %r2805, 28;
	mov.b64 	%rd3713, {%r2807, %r2806};
	shf.l.wrap.b32 	%r2808, %r2804, %r2805, 30;
	shf.l.wrap.b32 	%r2809, %r2805, %r2804, 30;
	mov.b64 	%rd3714, {%r2809, %r2808};
	xor.b64  	%rd3715, %rd3713, %rd3714;
	shf.l.wrap.b32 	%r2810, %r2804, %r2805, 25;
	shf.l.wrap.b32 	%r2811, %r2805, %r2804, 25;
	mov.b64 	%rd3716, {%r2811, %r2810};
	xor.b64  	%rd3717, %rd3715, %rd3716;
	and.b64  	%rd3718, %rd3686, %rd3662;
	or.b64  	%rd3719, %rd3686, %rd3662;
	and.b64  	%rd3720, %rd3719, %rd3638;
	or.b64  	%rd3721, %rd3720, %rd3718;
	add.s64 	%rd3722, %rd3721, %rd3717;
	add.s64 	%rd3723, %rd3722, %rd3711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2812,%dummy}, %rd3294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2813}, %rd3294;
	}
	shf.r.wrap.b32 	%r2814, %r2813, %r2812, 19;
	shf.r.wrap.b32 	%r2815, %r2812, %r2813, 19;
	mov.b64 	%rd3724, {%r2815, %r2814};
	shf.l.wrap.b32 	%r2816, %r2812, %r2813, 3;
	shf.l.wrap.b32 	%r2817, %r2813, %r2812, 3;
	mov.b64 	%rd3725, {%r2817, %r2816};
	xor.b64  	%rd3726, %rd3724, %rd3725;
	shr.u64 	%rd3727, %rd3294, 6;
	xor.b64  	%rd3728, %rd3726, %rd3727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd3268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd3268;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 1;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 1;
	mov.b64 	%rd3729, {%r2821, %r2820};
	shf.r.wrap.b32 	%r2822, %r2819, %r2818, 8;
	shf.r.wrap.b32 	%r2823, %r2818, %r2819, 8;
	mov.b64 	%rd3730, {%r2823, %r2822};
	xor.b64  	%rd3731, %rd3729, %rd3730;
	shr.u64 	%rd3732, %rd3268, 7;
	xor.b64  	%rd3733, %rd3731, %rd3732;
	add.s64 	%rd3734, %rd3733, %rd3266;
	add.s64 	%rd3735, %rd3734, %rd3284;
	add.s64 	%rd3736, %rd3735, %rd3728;
	add.s64 	%rd3737, %rd3736, %rd3627;
	xor.b64  	%rd3738, %rd3675, %rd3651;
	and.b64  	%rd3739, %rd3712, %rd3738;
	xor.b64  	%rd3740, %rd3739, %rd3651;
	add.s64 	%rd3741, %rd3737, %rd3740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2824,%dummy}, %rd3712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2825}, %rd3712;
	}
	shf.r.wrap.b32 	%r2826, %r2825, %r2824, 14;
	shf.r.wrap.b32 	%r2827, %r2824, %r2825, 14;
	mov.b64 	%rd3742, {%r2827, %r2826};
	shf.r.wrap.b32 	%r2828, %r2825, %r2824, 18;
	shf.r.wrap.b32 	%r2829, %r2824, %r2825, 18;
	mov.b64 	%rd3743, {%r2829, %r2828};
	xor.b64  	%rd3744, %rd3742, %rd3743;
	shf.l.wrap.b32 	%r2830, %r2824, %r2825, 23;
	shf.l.wrap.b32 	%r2831, %r2825, %r2824, 23;
	mov.b64 	%rd3745, {%r2831, %r2830};
	xor.b64  	%rd3746, %rd3744, %rd3745;
	add.s64 	%rd3747, %rd3741, %rd3746;
	add.s64 	%rd3748, %rd3747, -1171420211273849373;
	add.s64 	%rd3749, %rd3748, %rd3638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2832,%dummy}, %rd3723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2833}, %rd3723;
	}
	shf.r.wrap.b32 	%r2834, %r2833, %r2832, 28;
	shf.r.wrap.b32 	%r2835, %r2832, %r2833, 28;
	mov.b64 	%rd3750, {%r2835, %r2834};
	shf.l.wrap.b32 	%r2836, %r2832, %r2833, 30;
	shf.l.wrap.b32 	%r2837, %r2833, %r2832, 30;
	mov.b64 	%rd3751, {%r2837, %r2836};
	xor.b64  	%rd3752, %rd3750, %rd3751;
	shf.l.wrap.b32 	%r2838, %r2832, %r2833, 25;
	shf.l.wrap.b32 	%r2839, %r2833, %r2832, 25;
	mov.b64 	%rd3753, {%r2839, %r2838};
	xor.b64  	%rd3754, %rd3752, %rd3753;
	and.b64  	%rd3755, %rd3723, %rd3686;
	or.b64  	%rd3756, %rd3723, %rd3686;
	and.b64  	%rd3757, %rd3756, %rd3662;
	or.b64  	%rd3758, %rd3757, %rd3755;
	add.s64 	%rd3759, %rd3758, %rd3754;
	add.s64 	%rd3760, %rd3759, %rd3748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2840,%dummy}, %rd3699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2841}, %rd3699;
	}
	shf.r.wrap.b32 	%r2842, %r2841, %r2840, 19;
	shf.r.wrap.b32 	%r2843, %r2840, %r2841, 19;
	mov.b64 	%rd3761, {%r2843, %r2842};
	shf.l.wrap.b32 	%r2844, %r2840, %r2841, 3;
	shf.l.wrap.b32 	%r2845, %r2841, %r2840, 3;
	mov.b64 	%rd3762, {%r2845, %r2844};
	xor.b64  	%rd3763, %rd3761, %rd3762;
	shr.u64 	%rd3764, %rd3699, 6;
	xor.b64  	%rd3765, %rd3763, %rd3764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2846,%dummy}, %rd3270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2847}, %rd3270;
	}
	shf.r.wrap.b32 	%r2848, %r2847, %r2846, 1;
	shf.r.wrap.b32 	%r2849, %r2846, %r2847, 1;
	mov.b64 	%rd3766, {%r2849, %r2848};
	shf.r.wrap.b32 	%r2850, %r2847, %r2846, 8;
	shf.r.wrap.b32 	%r2851, %r2846, %r2847, 8;
	mov.b64 	%rd3767, {%r2851, %r2850};
	xor.b64  	%rd3768, %rd3766, %rd3767;
	shr.u64 	%rd3769, %rd3270, 7;
	xor.b64  	%rd3770, %rd3768, %rd3769;
	add.s64 	%rd3771, %rd3770, %rd3268;
	add.s64 	%rd3772, %rd3771, %rd3286;
	add.s64 	%rd3773, %rd3772, %rd3765;
	add.s64 	%rd3774, %rd3773, %rd3651;
	xor.b64  	%rd3775, %rd3712, %rd3675;
	and.b64  	%rd3776, %rd3749, %rd3775;
	xor.b64  	%rd3777, %rd3776, %rd3675;
	add.s64 	%rd3778, %rd3774, %rd3777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2852,%dummy}, %rd3749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2853}, %rd3749;
	}
	shf.r.wrap.b32 	%r2854, %r2853, %r2852, 14;
	shf.r.wrap.b32 	%r2855, %r2852, %r2853, 14;
	mov.b64 	%rd3779, {%r2855, %r2854};
	shf.r.wrap.b32 	%r2856, %r2853, %r2852, 18;
	shf.r.wrap.b32 	%r2857, %r2852, %r2853, 18;
	mov.b64 	%rd3780, {%r2857, %r2856};
	xor.b64  	%rd3781, %rd3779, %rd3780;
	shf.l.wrap.b32 	%r2858, %r2852, %r2853, 23;
	shf.l.wrap.b32 	%r2859, %r2853, %r2852, 23;
	mov.b64 	%rd3782, {%r2859, %r2858};
	xor.b64  	%rd3783, %rd3781, %rd3782;
	add.s64 	%rd3784, %rd3778, %rd3783;
	add.s64 	%rd3785, %rd3784, 1135362057144423861;
	add.s64 	%rd3786, %rd3785, %rd3662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2860,%dummy}, %rd3760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2861}, %rd3760;
	}
	shf.r.wrap.b32 	%r2862, %r2861, %r2860, 28;
	shf.r.wrap.b32 	%r2863, %r2860, %r2861, 28;
	mov.b64 	%rd3787, {%r2863, %r2862};
	shf.l.wrap.b32 	%r2864, %r2860, %r2861, 30;
	shf.l.wrap.b32 	%r2865, %r2861, %r2860, 30;
	mov.b64 	%rd3788, {%r2865, %r2864};
	xor.b64  	%rd3789, %rd3787, %rd3788;
	shf.l.wrap.b32 	%r2866, %r2860, %r2861, 25;
	shf.l.wrap.b32 	%r2867, %r2861, %r2860, 25;
	mov.b64 	%rd3790, {%r2867, %r2866};
	xor.b64  	%rd3791, %rd3789, %rd3790;
	and.b64  	%rd3792, %rd3760, %rd3723;
	or.b64  	%rd3793, %rd3760, %rd3723;
	and.b64  	%rd3794, %rd3793, %rd3686;
	or.b64  	%rd3795, %rd3794, %rd3792;
	add.s64 	%rd3796, %rd3795, %rd3791;
	add.s64 	%rd3797, %rd3796, %rd3785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2868,%dummy}, %rd3736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2869}, %rd3736;
	}
	shf.r.wrap.b32 	%r2870, %r2869, %r2868, 19;
	shf.r.wrap.b32 	%r2871, %r2868, %r2869, 19;
	mov.b64 	%rd3798, {%r2871, %r2870};
	shf.l.wrap.b32 	%r2872, %r2868, %r2869, 3;
	shf.l.wrap.b32 	%r2873, %r2869, %r2868, 3;
	mov.b64 	%rd3799, {%r2873, %r2872};
	xor.b64  	%rd3800, %rd3798, %rd3799;
	shr.u64 	%rd3801, %rd3736, 6;
	xor.b64  	%rd3802, %rd3800, %rd3801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd3272;
	}
	shf.r.wrap.b32 	%r2876, %r2875, %r2874, 1;
	shf.r.wrap.b32 	%r2877, %r2874, %r2875, 1;
	mov.b64 	%rd3803, {%r2877, %r2876};
	shf.r.wrap.b32 	%r2878, %r2875, %r2874, 8;
	shf.r.wrap.b32 	%r2879, %r2874, %r2875, 8;
	mov.b64 	%rd3804, {%r2879, %r2878};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	shr.u64 	%rd3806, %rd3272, 7;
	xor.b64  	%rd3807, %rd3805, %rd3806;
	add.s64 	%rd3808, %rd3807, %rd3270;
	add.s64 	%rd3809, %rd3808, %rd3288;
	add.s64 	%rd3810, %rd3809, %rd3802;
	add.s64 	%rd3811, %rd3810, %rd3675;
	xor.b64  	%rd3812, %rd3749, %rd3712;
	and.b64  	%rd3813, %rd3786, %rd3812;
	xor.b64  	%rd3814, %rd3813, %rd3712;
	add.s64 	%rd3815, %rd3811, %rd3814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2880,%dummy}, %rd3786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2881}, %rd3786;
	}
	shf.r.wrap.b32 	%r2882, %r2881, %r2880, 14;
	shf.r.wrap.b32 	%r2883, %r2880, %r2881, 14;
	mov.b64 	%rd3816, {%r2883, %r2882};
	shf.r.wrap.b32 	%r2884, %r2881, %r2880, 18;
	shf.r.wrap.b32 	%r2885, %r2880, %r2881, 18;
	mov.b64 	%rd3817, {%r2885, %r2884};
	xor.b64  	%rd3818, %rd3816, %rd3817;
	shf.l.wrap.b32 	%r2886, %r2880, %r2881, 23;
	shf.l.wrap.b32 	%r2887, %r2881, %r2880, 23;
	mov.b64 	%rd3819, {%r2887, %r2886};
	xor.b64  	%rd3820, %rd3818, %rd3819;
	add.s64 	%rd3821, %rd3815, %rd3820;
	add.s64 	%rd3822, %rd3821, 2597628984639134821;
	add.s64 	%rd3823, %rd3822, %rd3686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2888,%dummy}, %rd3797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2889}, %rd3797;
	}
	shf.r.wrap.b32 	%r2890, %r2889, %r2888, 28;
	shf.r.wrap.b32 	%r2891, %r2888, %r2889, 28;
	mov.b64 	%rd3824, {%r2891, %r2890};
	shf.l.wrap.b32 	%r2892, %r2888, %r2889, 30;
	shf.l.wrap.b32 	%r2893, %r2889, %r2888, 30;
	mov.b64 	%rd3825, {%r2893, %r2892};
	xor.b64  	%rd3826, %rd3824, %rd3825;
	shf.l.wrap.b32 	%r2894, %r2888, %r2889, 25;
	shf.l.wrap.b32 	%r2895, %r2889, %r2888, 25;
	mov.b64 	%rd3827, {%r2895, %r2894};
	xor.b64  	%rd3828, %rd3826, %rd3827;
	and.b64  	%rd3829, %rd3797, %rd3760;
	or.b64  	%rd3830, %rd3797, %rd3760;
	and.b64  	%rd3831, %rd3830, %rd3723;
	or.b64  	%rd3832, %rd3831, %rd3829;
	add.s64 	%rd3833, %rd3832, %rd3828;
	add.s64 	%rd3834, %rd3833, %rd3822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2896,%dummy}, %rd3773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2897}, %rd3773;
	}
	shf.r.wrap.b32 	%r2898, %r2897, %r2896, 19;
	shf.r.wrap.b32 	%r2899, %r2896, %r2897, 19;
	mov.b64 	%rd3835, {%r2899, %r2898};
	shf.l.wrap.b32 	%r2900, %r2896, %r2897, 3;
	shf.l.wrap.b32 	%r2901, %r2897, %r2896, 3;
	mov.b64 	%rd3836, {%r2901, %r2900};
	xor.b64  	%rd3837, %rd3835, %rd3836;
	shr.u64 	%rd3838, %rd3773, 6;
	xor.b64  	%rd3839, %rd3837, %rd3838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2902,%dummy}, %rd3274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2903}, %rd3274;
	}
	shf.r.wrap.b32 	%r2904, %r2903, %r2902, 1;
	shf.r.wrap.b32 	%r2905, %r2902, %r2903, 1;
	mov.b64 	%rd3840, {%r2905, %r2904};
	shf.r.wrap.b32 	%r2906, %r2903, %r2902, 8;
	shf.r.wrap.b32 	%r2907, %r2902, %r2903, 8;
	mov.b64 	%rd3841, {%r2907, %r2906};
	xor.b64  	%rd3842, %rd3840, %rd3841;
	shr.u64 	%rd3843, %rd3274, 7;
	xor.b64  	%rd3844, %rd3842, %rd3843;
	add.s64 	%rd3845, %rd3844, %rd3272;
	add.s64 	%rd3846, %rd3845, %rd3290;
	add.s64 	%rd3847, %rd3846, %rd3839;
	add.s64 	%rd3848, %rd3847, %rd3712;
	xor.b64  	%rd3849, %rd3786, %rd3749;
	and.b64  	%rd3850, %rd3823, %rd3849;
	xor.b64  	%rd3851, %rd3850, %rd3749;
	add.s64 	%rd3852, %rd3848, %rd3851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2908,%dummy}, %rd3823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2909}, %rd3823;
	}
	shf.r.wrap.b32 	%r2910, %r2909, %r2908, 14;
	shf.r.wrap.b32 	%r2911, %r2908, %r2909, 14;
	mov.b64 	%rd3853, {%r2911, %r2910};
	shf.r.wrap.b32 	%r2912, %r2909, %r2908, 18;
	shf.r.wrap.b32 	%r2913, %r2908, %r2909, 18;
	mov.b64 	%rd3854, {%r2913, %r2912};
	xor.b64  	%rd3855, %rd3853, %rd3854;
	shf.l.wrap.b32 	%r2914, %r2908, %r2909, 23;
	shf.l.wrap.b32 	%r2915, %r2909, %r2908, 23;
	mov.b64 	%rd3856, {%r2915, %r2914};
	xor.b64  	%rd3857, %rd3855, %rd3856;
	add.s64 	%rd3858, %rd3852, %rd3857;
	add.s64 	%rd3859, %rd3858, 3308224258029322869;
	add.s64 	%rd3860, %rd3859, %rd3723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2916,%dummy}, %rd3834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2917}, %rd3834;
	}
	shf.r.wrap.b32 	%r2918, %r2917, %r2916, 28;
	shf.r.wrap.b32 	%r2919, %r2916, %r2917, 28;
	mov.b64 	%rd3861, {%r2919, %r2918};
	shf.l.wrap.b32 	%r2920, %r2916, %r2917, 30;
	shf.l.wrap.b32 	%r2921, %r2917, %r2916, 30;
	mov.b64 	%rd3862, {%r2921, %r2920};
	xor.b64  	%rd3863, %rd3861, %rd3862;
	shf.l.wrap.b32 	%r2922, %r2916, %r2917, 25;
	shf.l.wrap.b32 	%r2923, %r2917, %r2916, 25;
	mov.b64 	%rd3864, {%r2923, %r2922};
	xor.b64  	%rd3865, %rd3863, %rd3864;
	and.b64  	%rd3866, %rd3834, %rd3797;
	or.b64  	%rd3867, %rd3834, %rd3797;
	and.b64  	%rd3868, %rd3867, %rd3760;
	or.b64  	%rd3869, %rd3868, %rd3866;
	add.s64 	%rd3870, %rd3869, %rd3865;
	add.s64 	%rd3871, %rd3870, %rd3859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2924,%dummy}, %rd3810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2925}, %rd3810;
	}
	shf.r.wrap.b32 	%r2926, %r2925, %r2924, 19;
	shf.r.wrap.b32 	%r2927, %r2924, %r2925, 19;
	mov.b64 	%rd3872, {%r2927, %r2926};
	shf.l.wrap.b32 	%r2928, %r2924, %r2925, 3;
	shf.l.wrap.b32 	%r2929, %r2925, %r2924, 3;
	mov.b64 	%rd3873, {%r2929, %r2928};
	xor.b64  	%rd3874, %rd3872, %rd3873;
	shr.u64 	%rd3875, %rd3810, 6;
	xor.b64  	%rd3876, %rd3874, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd3276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2931}, %rd3276;
	}
	shf.r.wrap.b32 	%r2932, %r2931, %r2930, 1;
	shf.r.wrap.b32 	%r2933, %r2930, %r2931, 1;
	mov.b64 	%rd3877, {%r2933, %r2932};
	shf.r.wrap.b32 	%r2934, %r2931, %r2930, 8;
	shf.r.wrap.b32 	%r2935, %r2930, %r2931, 8;
	mov.b64 	%rd3878, {%r2935, %r2934};
	xor.b64  	%rd3879, %rd3877, %rd3878;
	shr.u64 	%rd3880, %rd3276, 7;
	xor.b64  	%rd3881, %rd3879, %rd3880;
	add.s64 	%rd3882, %rd3881, %rd3274;
	add.s64 	%rd3883, %rd3882, %rd3292;
	add.s64 	%rd3884, %rd3883, %rd3876;
	add.s64 	%rd3885, %rd3884, %rd3749;
	xor.b64  	%rd3886, %rd3823, %rd3786;
	and.b64  	%rd3887, %rd3860, %rd3886;
	xor.b64  	%rd3888, %rd3887, %rd3786;
	add.s64 	%rd3889, %rd3885, %rd3888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2936,%dummy}, %rd3860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2937}, %rd3860;
	}
	shf.r.wrap.b32 	%r2938, %r2937, %r2936, 14;
	shf.r.wrap.b32 	%r2939, %r2936, %r2937, 14;
	mov.b64 	%rd3890, {%r2939, %r2938};
	shf.r.wrap.b32 	%r2940, %r2937, %r2936, 18;
	shf.r.wrap.b32 	%r2941, %r2936, %r2937, 18;
	mov.b64 	%rd3891, {%r2941, %r2940};
	xor.b64  	%rd3892, %rd3890, %rd3891;
	shf.l.wrap.b32 	%r2942, %r2936, %r2937, 23;
	shf.l.wrap.b32 	%r2943, %r2937, %r2936, 23;
	mov.b64 	%rd3893, {%r2943, %r2942};
	xor.b64  	%rd3894, %rd3892, %rd3893;
	add.s64 	%rd3895, %rd3889, %rd3894;
	add.s64 	%rd3896, %rd3895, 5365058923640841347;
	add.s64 	%rd3897, %rd3896, %rd3760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2944,%dummy}, %rd3871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd3871;
	}
	shf.r.wrap.b32 	%r2946, %r2945, %r2944, 28;
	shf.r.wrap.b32 	%r2947, %r2944, %r2945, 28;
	mov.b64 	%rd3898, {%r2947, %r2946};
	shf.l.wrap.b32 	%r2948, %r2944, %r2945, 30;
	shf.l.wrap.b32 	%r2949, %r2945, %r2944, 30;
	mov.b64 	%rd3899, {%r2949, %r2948};
	xor.b64  	%rd3900, %rd3898, %rd3899;
	shf.l.wrap.b32 	%r2950, %r2944, %r2945, 25;
	shf.l.wrap.b32 	%r2951, %r2945, %r2944, 25;
	mov.b64 	%rd3901, {%r2951, %r2950};
	xor.b64  	%rd3902, %rd3900, %rd3901;
	and.b64  	%rd3903, %rd3871, %rd3834;
	or.b64  	%rd3904, %rd3871, %rd3834;
	and.b64  	%rd3905, %rd3904, %rd3797;
	or.b64  	%rd3906, %rd3905, %rd3903;
	add.s64 	%rd3907, %rd3906, %rd3902;
	add.s64 	%rd3908, %rd3907, %rd3896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2952,%dummy}, %rd3847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2953}, %rd3847;
	}
	shf.r.wrap.b32 	%r2954, %r2953, %r2952, 19;
	shf.r.wrap.b32 	%r2955, %r2952, %r2953, 19;
	mov.b64 	%rd3909, {%r2955, %r2954};
	shf.l.wrap.b32 	%r2956, %r2952, %r2953, 3;
	shf.l.wrap.b32 	%r2957, %r2953, %r2952, 3;
	mov.b64 	%rd3910, {%r2957, %r2956};
	xor.b64  	%rd3911, %rd3909, %rd3910;
	shr.u64 	%rd3912, %rd3847, 6;
	xor.b64  	%rd3913, %rd3911, %rd3912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2958,%dummy}, %rd3278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2959}, %rd3278;
	}
	shf.r.wrap.b32 	%r2960, %r2959, %r2958, 1;
	shf.r.wrap.b32 	%r2961, %r2958, %r2959, 1;
	mov.b64 	%rd3914, {%r2961, %r2960};
	shf.r.wrap.b32 	%r2962, %r2959, %r2958, 8;
	shf.r.wrap.b32 	%r2963, %r2958, %r2959, 8;
	mov.b64 	%rd3915, {%r2963, %r2962};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	shr.u64 	%rd3917, %rd3278, 7;
	xor.b64  	%rd3918, %rd3916, %rd3917;
	add.s64 	%rd3919, %rd3918, %rd3276;
	add.s64 	%rd3920, %rd3919, %rd3294;
	add.s64 	%rd3921, %rd3920, %rd3913;
	add.s64 	%rd3922, %rd3921, %rd3786;
	xor.b64  	%rd3923, %rd3860, %rd3823;
	and.b64  	%rd3924, %rd3897, %rd3923;
	xor.b64  	%rd3925, %rd3924, %rd3823;
	add.s64 	%rd3926, %rd3922, %rd3925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2964,%dummy}, %rd3897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2965}, %rd3897;
	}
	shf.r.wrap.b32 	%r2966, %r2965, %r2964, 14;
	shf.r.wrap.b32 	%r2967, %r2964, %r2965, 14;
	mov.b64 	%rd3927, {%r2967, %r2966};
	shf.r.wrap.b32 	%r2968, %r2965, %r2964, 18;
	shf.r.wrap.b32 	%r2969, %r2964, %r2965, 18;
	mov.b64 	%rd3928, {%r2969, %r2968};
	xor.b64  	%rd3929, %rd3927, %rd3928;
	shf.l.wrap.b32 	%r2970, %r2964, %r2965, 23;
	shf.l.wrap.b32 	%r2971, %r2965, %r2964, 23;
	mov.b64 	%rd3930, {%r2971, %r2970};
	xor.b64  	%rd3931, %rd3929, %rd3930;
	add.s64 	%rd3932, %rd3926, %rd3931;
	add.s64 	%rd3933, %rd3932, 6679025012923562964;
	add.s64 	%rd3934, %rd3933, %rd3797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2972,%dummy}, %rd3908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2973}, %rd3908;
	}
	shf.r.wrap.b32 	%r2974, %r2973, %r2972, 28;
	shf.r.wrap.b32 	%r2975, %r2972, %r2973, 28;
	mov.b64 	%rd3935, {%r2975, %r2974};
	shf.l.wrap.b32 	%r2976, %r2972, %r2973, 30;
	shf.l.wrap.b32 	%r2977, %r2973, %r2972, 30;
	mov.b64 	%rd3936, {%r2977, %r2976};
	xor.b64  	%rd3937, %rd3935, %rd3936;
	shf.l.wrap.b32 	%r2978, %r2972, %r2973, 25;
	shf.l.wrap.b32 	%r2979, %r2973, %r2972, 25;
	mov.b64 	%rd3938, {%r2979, %r2978};
	xor.b64  	%rd3939, %rd3937, %rd3938;
	and.b64  	%rd3940, %rd3908, %rd3871;
	or.b64  	%rd3941, %rd3908, %rd3871;
	and.b64  	%rd3942, %rd3941, %rd3834;
	or.b64  	%rd3943, %rd3942, %rd3940;
	add.s64 	%rd3944, %rd3943, %rd3939;
	add.s64 	%rd3945, %rd3944, %rd3933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2980,%dummy}, %rd3884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd3884;
	}
	shf.r.wrap.b32 	%r2982, %r2981, %r2980, 19;
	shf.r.wrap.b32 	%r2983, %r2980, %r2981, 19;
	mov.b64 	%rd3946, {%r2983, %r2982};
	shf.l.wrap.b32 	%r2984, %r2980, %r2981, 3;
	shf.l.wrap.b32 	%r2985, %r2981, %r2980, 3;
	mov.b64 	%rd3947, {%r2985, %r2984};
	xor.b64  	%rd3948, %rd3946, %rd3947;
	shr.u64 	%rd3949, %rd3884, 6;
	xor.b64  	%rd3950, %rd3948, %rd3949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd3280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2987}, %rd3280;
	}
	shf.r.wrap.b32 	%r2988, %r2987, %r2986, 1;
	shf.r.wrap.b32 	%r2989, %r2986, %r2987, 1;
	mov.b64 	%rd3951, {%r2989, %r2988};
	shf.r.wrap.b32 	%r2990, %r2987, %r2986, 8;
	shf.r.wrap.b32 	%r2991, %r2986, %r2987, 8;
	mov.b64 	%rd3952, {%r2991, %r2990};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	shr.u64 	%rd3954, %rd3280, 7;
	xor.b64  	%rd3955, %rd3953, %rd3954;
	add.s64 	%rd3956, %rd3955, %rd3278;
	add.s64 	%rd3957, %rd3956, %rd3699;
	add.s64 	%rd3958, %rd3957, %rd3950;
	add.s64 	%rd3959, %rd3958, %rd3823;
	xor.b64  	%rd3960, %rd3897, %rd3860;
	and.b64  	%rd3961, %rd3934, %rd3960;
	xor.b64  	%rd3962, %rd3961, %rd3860;
	add.s64 	%rd3963, %rd3959, %rd3962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2992,%dummy}, %rd3934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2993}, %rd3934;
	}
	shf.r.wrap.b32 	%r2994, %r2993, %r2992, 14;
	shf.r.wrap.b32 	%r2995, %r2992, %r2993, 14;
	mov.b64 	%rd3964, {%r2995, %r2994};
	shf.r.wrap.b32 	%r2996, %r2993, %r2992, 18;
	shf.r.wrap.b32 	%r2997, %r2992, %r2993, 18;
	mov.b64 	%rd3965, {%r2997, %r2996};
	xor.b64  	%rd3966, %rd3964, %rd3965;
	shf.l.wrap.b32 	%r2998, %r2992, %r2993, 23;
	shf.l.wrap.b32 	%r2999, %r2993, %r2992, 23;
	mov.b64 	%rd3967, {%r2999, %r2998};
	xor.b64  	%rd3968, %rd3966, %rd3967;
	add.s64 	%rd3969, %rd3963, %rd3968;
	add.s64 	%rd3970, %rd3969, 8573033837759648693;
	add.s64 	%rd3971, %rd3970, %rd3834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3000,%dummy}, %rd3945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3001}, %rd3945;
	}
	shf.r.wrap.b32 	%r3002, %r3001, %r3000, 28;
	shf.r.wrap.b32 	%r3003, %r3000, %r3001, 28;
	mov.b64 	%rd3972, {%r3003, %r3002};
	shf.l.wrap.b32 	%r3004, %r3000, %r3001, 30;
	shf.l.wrap.b32 	%r3005, %r3001, %r3000, 30;
	mov.b64 	%rd3973, {%r3005, %r3004};
	xor.b64  	%rd3974, %rd3972, %rd3973;
	shf.l.wrap.b32 	%r3006, %r3000, %r3001, 25;
	shf.l.wrap.b32 	%r3007, %r3001, %r3000, 25;
	mov.b64 	%rd3975, {%r3007, %r3006};
	xor.b64  	%rd3976, %rd3974, %rd3975;
	and.b64  	%rd3977, %rd3945, %rd3908;
	or.b64  	%rd3978, %rd3945, %rd3908;
	and.b64  	%rd3979, %rd3978, %rd3871;
	or.b64  	%rd3980, %rd3979, %rd3977;
	add.s64 	%rd3981, %rd3980, %rd3976;
	add.s64 	%rd3982, %rd3981, %rd3970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3008,%dummy}, %rd3921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3009}, %rd3921;
	}
	shf.r.wrap.b32 	%r3010, %r3009, %r3008, 19;
	shf.r.wrap.b32 	%r3011, %r3008, %r3009, 19;
	mov.b64 	%rd3983, {%r3011, %r3010};
	shf.l.wrap.b32 	%r3012, %r3008, %r3009, 3;
	shf.l.wrap.b32 	%r3013, %r3009, %r3008, 3;
	mov.b64 	%rd3984, {%r3013, %r3012};
	xor.b64  	%rd3985, %rd3983, %rd3984;
	shr.u64 	%rd3986, %rd3921, 6;
	xor.b64  	%rd3987, %rd3985, %rd3986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3014,%dummy}, %rd3282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3015}, %rd3282;
	}
	shf.r.wrap.b32 	%r3016, %r3015, %r3014, 1;
	shf.r.wrap.b32 	%r3017, %r3014, %r3015, 1;
	mov.b64 	%rd3988, {%r3017, %r3016};
	shf.r.wrap.b32 	%r3018, %r3015, %r3014, 8;
	shf.r.wrap.b32 	%r3019, %r3014, %r3015, 8;
	mov.b64 	%rd3989, {%r3019, %r3018};
	xor.b64  	%rd3990, %rd3988, %rd3989;
	shr.u64 	%rd3991, %rd3282, 7;
	xor.b64  	%rd3992, %rd3990, %rd3991;
	add.s64 	%rd3993, %rd3992, %rd3280;
	add.s64 	%rd3994, %rd3993, %rd3736;
	add.s64 	%rd3995, %rd3994, %rd3987;
	add.s64 	%rd3996, %rd3995, %rd3860;
	xor.b64  	%rd3997, %rd3934, %rd3897;
	and.b64  	%rd3998, %rd3971, %rd3997;
	xor.b64  	%rd3999, %rd3998, %rd3897;
	add.s64 	%rd4000, %rd3996, %rd3999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3020,%dummy}, %rd3971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3021}, %rd3971;
	}
	shf.r.wrap.b32 	%r3022, %r3021, %r3020, 14;
	shf.r.wrap.b32 	%r3023, %r3020, %r3021, 14;
	mov.b64 	%rd4001, {%r3023, %r3022};
	shf.r.wrap.b32 	%r3024, %r3021, %r3020, 18;
	shf.r.wrap.b32 	%r3025, %r3020, %r3021, 18;
	mov.b64 	%rd4002, {%r3025, %r3024};
	xor.b64  	%rd4003, %rd4001, %rd4002;
	shf.l.wrap.b32 	%r3026, %r3020, %r3021, 23;
	shf.l.wrap.b32 	%r3027, %r3021, %r3020, 23;
	mov.b64 	%rd4004, {%r3027, %r3026};
	xor.b64  	%rd4005, %rd4003, %rd4004;
	add.s64 	%rd4006, %rd4000, %rd4005;
	add.s64 	%rd4007, %rd4006, -7476448914759557205;
	add.s64 	%rd4008, %rd4007, %rd3871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3028,%dummy}, %rd3982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3029}, %rd3982;
	}
	shf.r.wrap.b32 	%r3030, %r3029, %r3028, 28;
	shf.r.wrap.b32 	%r3031, %r3028, %r3029, 28;
	mov.b64 	%rd4009, {%r3031, %r3030};
	shf.l.wrap.b32 	%r3032, %r3028, %r3029, 30;
	shf.l.wrap.b32 	%r3033, %r3029, %r3028, 30;
	mov.b64 	%rd4010, {%r3033, %r3032};
	xor.b64  	%rd4011, %rd4009, %rd4010;
	shf.l.wrap.b32 	%r3034, %r3028, %r3029, 25;
	shf.l.wrap.b32 	%r3035, %r3029, %r3028, 25;
	mov.b64 	%rd4012, {%r3035, %r3034};
	xor.b64  	%rd4013, %rd4011, %rd4012;
	and.b64  	%rd4014, %rd3982, %rd3945;
	or.b64  	%rd4015, %rd3982, %rd3945;
	and.b64  	%rd4016, %rd4015, %rd3908;
	or.b64  	%rd4017, %rd4016, %rd4014;
	add.s64 	%rd4018, %rd4017, %rd4013;
	add.s64 	%rd4019, %rd4018, %rd4007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3036,%dummy}, %rd3958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3037}, %rd3958;
	}
	shf.r.wrap.b32 	%r3038, %r3037, %r3036, 19;
	shf.r.wrap.b32 	%r3039, %r3036, %r3037, 19;
	mov.b64 	%rd4020, {%r3039, %r3038};
	shf.l.wrap.b32 	%r3040, %r3036, %r3037, 3;
	shf.l.wrap.b32 	%r3041, %r3037, %r3036, 3;
	mov.b64 	%rd4021, {%r3041, %r3040};
	xor.b64  	%rd4022, %rd4020, %rd4021;
	shr.u64 	%rd4023, %rd3958, 6;
	xor.b64  	%rd4024, %rd4022, %rd4023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd3284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3043}, %rd3284;
	}
	shf.r.wrap.b32 	%r3044, %r3043, %r3042, 1;
	shf.r.wrap.b32 	%r3045, %r3042, %r3043, 1;
	mov.b64 	%rd4025, {%r3045, %r3044};
	shf.r.wrap.b32 	%r3046, %r3043, %r3042, 8;
	shf.r.wrap.b32 	%r3047, %r3042, %r3043, 8;
	mov.b64 	%rd4026, {%r3047, %r3046};
	xor.b64  	%rd4027, %rd4025, %rd4026;
	shr.u64 	%rd4028, %rd3284, 7;
	xor.b64  	%rd4029, %rd4027, %rd4028;
	add.s64 	%rd4030, %rd4029, %rd3282;
	add.s64 	%rd4031, %rd4030, %rd3773;
	add.s64 	%rd4032, %rd4031, %rd4024;
	add.s64 	%rd4033, %rd4032, %rd3897;
	xor.b64  	%rd4034, %rd3971, %rd3934;
	and.b64  	%rd4035, %rd4008, %rd4034;
	xor.b64  	%rd4036, %rd4035, %rd3934;
	add.s64 	%rd4037, %rd4033, %rd4036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3048,%dummy}, %rd4008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd4008;
	}
	shf.r.wrap.b32 	%r3050, %r3049, %r3048, 14;
	shf.r.wrap.b32 	%r3051, %r3048, %r3049, 14;
	mov.b64 	%rd4038, {%r3051, %r3050};
	shf.r.wrap.b32 	%r3052, %r3049, %r3048, 18;
	shf.r.wrap.b32 	%r3053, %r3048, %r3049, 18;
	mov.b64 	%rd4039, {%r3053, %r3052};
	xor.b64  	%rd4040, %rd4038, %rd4039;
	shf.l.wrap.b32 	%r3054, %r3048, %r3049, 23;
	shf.l.wrap.b32 	%r3055, %r3049, %r3048, 23;
	mov.b64 	%rd4041, {%r3055, %r3054};
	xor.b64  	%rd4042, %rd4040, %rd4041;
	add.s64 	%rd4043, %rd4037, %rd4042;
	add.s64 	%rd4044, %rd4043, -6327057829258317296;
	add.s64 	%rd4045, %rd4044, %rd3908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3056,%dummy}, %rd4019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3057}, %rd4019;
	}
	shf.r.wrap.b32 	%r3058, %r3057, %r3056, 28;
	shf.r.wrap.b32 	%r3059, %r3056, %r3057, 28;
	mov.b64 	%rd4046, {%r3059, %r3058};
	shf.l.wrap.b32 	%r3060, %r3056, %r3057, 30;
	shf.l.wrap.b32 	%r3061, %r3057, %r3056, 30;
	mov.b64 	%rd4047, {%r3061, %r3060};
	xor.b64  	%rd4048, %rd4046, %rd4047;
	shf.l.wrap.b32 	%r3062, %r3056, %r3057, 25;
	shf.l.wrap.b32 	%r3063, %r3057, %r3056, 25;
	mov.b64 	%rd4049, {%r3063, %r3062};
	xor.b64  	%rd4050, %rd4048, %rd4049;
	and.b64  	%rd4051, %rd4019, %rd3982;
	or.b64  	%rd4052, %rd4019, %rd3982;
	and.b64  	%rd4053, %rd4052, %rd3945;
	or.b64  	%rd4054, %rd4053, %rd4051;
	add.s64 	%rd4055, %rd4054, %rd4050;
	add.s64 	%rd4056, %rd4055, %rd4044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3064,%dummy}, %rd3995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3065}, %rd3995;
	}
	shf.r.wrap.b32 	%r3066, %r3065, %r3064, 19;
	shf.r.wrap.b32 	%r3067, %r3064, %r3065, 19;
	mov.b64 	%rd4057, {%r3067, %r3066};
	shf.l.wrap.b32 	%r3068, %r3064, %r3065, 3;
	shf.l.wrap.b32 	%r3069, %r3065, %r3064, 3;
	mov.b64 	%rd4058, {%r3069, %r3068};
	xor.b64  	%rd4059, %rd4057, %rd4058;
	shr.u64 	%rd4060, %rd3995, 6;
	xor.b64  	%rd4061, %rd4059, %rd4060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3070,%dummy}, %rd3286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3071}, %rd3286;
	}
	shf.r.wrap.b32 	%r3072, %r3071, %r3070, 1;
	shf.r.wrap.b32 	%r3073, %r3070, %r3071, 1;
	mov.b64 	%rd4062, {%r3073, %r3072};
	shf.r.wrap.b32 	%r3074, %r3071, %r3070, 8;
	shf.r.wrap.b32 	%r3075, %r3070, %r3071, 8;
	mov.b64 	%rd4063, {%r3075, %r3074};
	xor.b64  	%rd4064, %rd4062, %rd4063;
	shr.u64 	%rd4065, %rd3286, 7;
	xor.b64  	%rd4066, %rd4064, %rd4065;
	add.s64 	%rd4067, %rd4066, %rd3284;
	add.s64 	%rd4068, %rd4067, %rd3810;
	add.s64 	%rd4069, %rd4068, %rd4061;
	add.s64 	%rd4070, %rd4069, %rd3934;
	xor.b64  	%rd4071, %rd4008, %rd3971;
	and.b64  	%rd4072, %rd4045, %rd4071;
	xor.b64  	%rd4073, %rd4072, %rd3971;
	add.s64 	%rd4074, %rd4070, %rd4073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3076,%dummy}, %rd4045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3077}, %rd4045;
	}
	shf.r.wrap.b32 	%r3078, %r3077, %r3076, 14;
	shf.r.wrap.b32 	%r3079, %r3076, %r3077, 14;
	mov.b64 	%rd4075, {%r3079, %r3078};
	shf.r.wrap.b32 	%r3080, %r3077, %r3076, 18;
	shf.r.wrap.b32 	%r3081, %r3076, %r3077, 18;
	mov.b64 	%rd4076, {%r3081, %r3080};
	xor.b64  	%rd4077, %rd4075, %rd4076;
	shf.l.wrap.b32 	%r3082, %r3076, %r3077, 23;
	shf.l.wrap.b32 	%r3083, %r3077, %r3076, 23;
	mov.b64 	%rd4078, {%r3083, %r3082};
	xor.b64  	%rd4079, %rd4077, %rd4078;
	add.s64 	%rd4080, %rd4074, %rd4079;
	add.s64 	%rd4081, %rd4080, -5763719355590565569;
	add.s64 	%rd4082, %rd4081, %rd3945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3084,%dummy}, %rd4056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3085}, %rd4056;
	}
	shf.r.wrap.b32 	%r3086, %r3085, %r3084, 28;
	shf.r.wrap.b32 	%r3087, %r3084, %r3085, 28;
	mov.b64 	%rd4083, {%r3087, %r3086};
	shf.l.wrap.b32 	%r3088, %r3084, %r3085, 30;
	shf.l.wrap.b32 	%r3089, %r3085, %r3084, 30;
	mov.b64 	%rd4084, {%r3089, %r3088};
	xor.b64  	%rd4085, %rd4083, %rd4084;
	shf.l.wrap.b32 	%r3090, %r3084, %r3085, 25;
	shf.l.wrap.b32 	%r3091, %r3085, %r3084, 25;
	mov.b64 	%rd4086, {%r3091, %r3090};
	xor.b64  	%rd4087, %rd4085, %rd4086;
	and.b64  	%rd4088, %rd4056, %rd4019;
	or.b64  	%rd4089, %rd4056, %rd4019;
	and.b64  	%rd4090, %rd4089, %rd3982;
	or.b64  	%rd4091, %rd4090, %rd4088;
	add.s64 	%rd4092, %rd4091, %rd4087;
	add.s64 	%rd4093, %rd4092, %rd4081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3092,%dummy}, %rd4032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3093}, %rd4032;
	}
	shf.r.wrap.b32 	%r3094, %r3093, %r3092, 19;
	shf.r.wrap.b32 	%r3095, %r3092, %r3093, 19;
	mov.b64 	%rd4094, {%r3095, %r3094};
	shf.l.wrap.b32 	%r3096, %r3092, %r3093, 3;
	shf.l.wrap.b32 	%r3097, %r3093, %r3092, 3;
	mov.b64 	%rd4095, {%r3097, %r3096};
	xor.b64  	%rd4096, %rd4094, %rd4095;
	shr.u64 	%rd4097, %rd4032, 6;
	xor.b64  	%rd4098, %rd4096, %rd4097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd3288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3099}, %rd3288;
	}
	shf.r.wrap.b32 	%r3100, %r3099, %r3098, 1;
	shf.r.wrap.b32 	%r3101, %r3098, %r3099, 1;
	mov.b64 	%rd4099, {%r3101, %r3100};
	shf.r.wrap.b32 	%r3102, %r3099, %r3098, 8;
	shf.r.wrap.b32 	%r3103, %r3098, %r3099, 8;
	mov.b64 	%rd4100, {%r3103, %r3102};
	xor.b64  	%rd4101, %rd4099, %rd4100;
	shr.u64 	%rd4102, %rd3288, 7;
	xor.b64  	%rd4103, %rd4101, %rd4102;
	add.s64 	%rd4104, %rd4103, %rd3286;
	add.s64 	%rd4105, %rd4104, %rd3847;
	add.s64 	%rd4106, %rd4105, %rd4098;
	add.s64 	%rd4107, %rd4106, %rd3971;
	xor.b64  	%rd4108, %rd4045, %rd4008;
	and.b64  	%rd4109, %rd4082, %rd4108;
	xor.b64  	%rd4110, %rd4109, %rd4008;
	add.s64 	%rd4111, %rd4107, %rd4110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3104,%dummy}, %rd4082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3105}, %rd4082;
	}
	shf.r.wrap.b32 	%r3106, %r3105, %r3104, 14;
	shf.r.wrap.b32 	%r3107, %r3104, %r3105, 14;
	mov.b64 	%rd4112, {%r3107, %r3106};
	shf.r.wrap.b32 	%r3108, %r3105, %r3104, 18;
	shf.r.wrap.b32 	%r3109, %r3104, %r3105, 18;
	mov.b64 	%rd4113, {%r3109, %r3108};
	xor.b64  	%rd4114, %rd4112, %rd4113;
	shf.l.wrap.b32 	%r3110, %r3104, %r3105, 23;
	shf.l.wrap.b32 	%r3111, %r3105, %r3104, 23;
	mov.b64 	%rd4115, {%r3111, %r3110};
	xor.b64  	%rd4116, %rd4114, %rd4115;
	add.s64 	%rd4117, %rd4111, %rd4116;
	add.s64 	%rd4118, %rd4117, -4658551843659510044;
	add.s64 	%rd4119, %rd4118, %rd3982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3112,%dummy}, %rd4093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3113}, %rd4093;
	}
	shf.r.wrap.b32 	%r3114, %r3113, %r3112, 28;
	shf.r.wrap.b32 	%r3115, %r3112, %r3113, 28;
	mov.b64 	%rd4120, {%r3115, %r3114};
	shf.l.wrap.b32 	%r3116, %r3112, %r3113, 30;
	shf.l.wrap.b32 	%r3117, %r3113, %r3112, 30;
	mov.b64 	%rd4121, {%r3117, %r3116};
	xor.b64  	%rd4122, %rd4120, %rd4121;
	shf.l.wrap.b32 	%r3118, %r3112, %r3113, 25;
	shf.l.wrap.b32 	%r3119, %r3113, %r3112, 25;
	mov.b64 	%rd4123, {%r3119, %r3118};
	xor.b64  	%rd4124, %rd4122, %rd4123;
	and.b64  	%rd4125, %rd4093, %rd4056;
	or.b64  	%rd4126, %rd4093, %rd4056;
	and.b64  	%rd4127, %rd4126, %rd4019;
	or.b64  	%rd4128, %rd4127, %rd4125;
	add.s64 	%rd4129, %rd4128, %rd4124;
	add.s64 	%rd4130, %rd4129, %rd4118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3120,%dummy}, %rd4069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3121}, %rd4069;
	}
	shf.r.wrap.b32 	%r3122, %r3121, %r3120, 19;
	shf.r.wrap.b32 	%r3123, %r3120, %r3121, 19;
	mov.b64 	%rd4131, {%r3123, %r3122};
	shf.l.wrap.b32 	%r3124, %r3120, %r3121, 3;
	shf.l.wrap.b32 	%r3125, %r3121, %r3120, 3;
	mov.b64 	%rd4132, {%r3125, %r3124};
	xor.b64  	%rd4133, %rd4131, %rd4132;
	shr.u64 	%rd4134, %rd4069, 6;
	xor.b64  	%rd4135, %rd4133, %rd4134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd3290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd3290;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 1;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 1;
	mov.b64 	%rd4136, {%r3129, %r3128};
	shf.r.wrap.b32 	%r3130, %r3127, %r3126, 8;
	shf.r.wrap.b32 	%r3131, %r3126, %r3127, 8;
	mov.b64 	%rd4137, {%r3131, %r3130};
	xor.b64  	%rd4138, %rd4136, %rd4137;
	shr.u64 	%rd4139, %rd3290, 7;
	xor.b64  	%rd4140, %rd4138, %rd4139;
	add.s64 	%rd4141, %rd4140, %rd3288;
	add.s64 	%rd4142, %rd4141, %rd3884;
	add.s64 	%rd4143, %rd4142, %rd4135;
	add.s64 	%rd4144, %rd4143, %rd4008;
	xor.b64  	%rd4145, %rd4082, %rd4045;
	and.b64  	%rd4146, %rd4119, %rd4145;
	xor.b64  	%rd4147, %rd4146, %rd4045;
	add.s64 	%rd4148, %rd4144, %rd4147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3132,%dummy}, %rd4119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3133}, %rd4119;
	}
	shf.r.wrap.b32 	%r3134, %r3133, %r3132, 14;
	shf.r.wrap.b32 	%r3135, %r3132, %r3133, 14;
	mov.b64 	%rd4149, {%r3135, %r3134};
	shf.r.wrap.b32 	%r3136, %r3133, %r3132, 18;
	shf.r.wrap.b32 	%r3137, %r3132, %r3133, 18;
	mov.b64 	%rd4150, {%r3137, %r3136};
	xor.b64  	%rd4151, %rd4149, %rd4150;
	shf.l.wrap.b32 	%r3138, %r3132, %r3133, 23;
	shf.l.wrap.b32 	%r3139, %r3133, %r3132, 23;
	mov.b64 	%rd4152, {%r3139, %r3138};
	xor.b64  	%rd4153, %rd4151, %rd4152;
	add.s64 	%rd4154, %rd4148, %rd4153;
	add.s64 	%rd4155, %rd4154, -4116276920077217854;
	add.s64 	%rd4156, %rd4155, %rd4019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3140,%dummy}, %rd4130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3141}, %rd4130;
	}
	shf.r.wrap.b32 	%r3142, %r3141, %r3140, 28;
	shf.r.wrap.b32 	%r3143, %r3140, %r3141, 28;
	mov.b64 	%rd4157, {%r3143, %r3142};
	shf.l.wrap.b32 	%r3144, %r3140, %r3141, 30;
	shf.l.wrap.b32 	%r3145, %r3141, %r3140, 30;
	mov.b64 	%rd4158, {%r3145, %r3144};
	xor.b64  	%rd4159, %rd4157, %rd4158;
	shf.l.wrap.b32 	%r3146, %r3140, %r3141, 25;
	shf.l.wrap.b32 	%r3147, %r3141, %r3140, 25;
	mov.b64 	%rd4160, {%r3147, %r3146};
	xor.b64  	%rd4161, %rd4159, %rd4160;
	and.b64  	%rd4162, %rd4130, %rd4093;
	or.b64  	%rd4163, %rd4130, %rd4093;
	and.b64  	%rd4164, %rd4163, %rd4056;
	or.b64  	%rd4165, %rd4164, %rd4162;
	add.s64 	%rd4166, %rd4165, %rd4161;
	add.s64 	%rd4167, %rd4166, %rd4155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3148,%dummy}, %rd4106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3149}, %rd4106;
	}
	shf.r.wrap.b32 	%r3150, %r3149, %r3148, 19;
	shf.r.wrap.b32 	%r3151, %r3148, %r3149, 19;
	mov.b64 	%rd4168, {%r3151, %r3150};
	shf.l.wrap.b32 	%r3152, %r3148, %r3149, 3;
	shf.l.wrap.b32 	%r3153, %r3149, %r3148, 3;
	mov.b64 	%rd4169, {%r3153, %r3152};
	xor.b64  	%rd4170, %rd4168, %rd4169;
	shr.u64 	%rd4171, %rd4106, 6;
	xor.b64  	%rd4172, %rd4170, %rd4171;
	shf.r.wrap.b32 	%r3154, %r2785, %r2784, 1;
	shf.r.wrap.b32 	%r3155, %r2784, %r2785, 1;
	mov.b64 	%rd4173, {%r3155, %r3154};
	shf.r.wrap.b32 	%r3156, %r2785, %r2784, 8;
	shf.r.wrap.b32 	%r3157, %r2784, %r2785, 8;
	mov.b64 	%rd4174, {%r3157, %r3156};
	xor.b64  	%rd4175, %rd4173, %rd4174;
	shr.u64 	%rd4176, %rd3292, 7;
	xor.b64  	%rd4177, %rd4175, %rd4176;
	add.s64 	%rd4178, %rd4177, %rd3290;
	add.s64 	%rd4179, %rd4178, %rd3921;
	add.s64 	%rd4180, %rd4179, %rd4172;
	add.s64 	%rd4181, %rd4180, %rd4045;
	xor.b64  	%rd4182, %rd4119, %rd4082;
	and.b64  	%rd4183, %rd4156, %rd4182;
	xor.b64  	%rd4184, %rd4183, %rd4082;
	add.s64 	%rd4185, %rd4181, %rd4184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3158,%dummy}, %rd4156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3159}, %rd4156;
	}
	shf.r.wrap.b32 	%r3160, %r3159, %r3158, 14;
	shf.r.wrap.b32 	%r3161, %r3158, %r3159, 14;
	mov.b64 	%rd4186, {%r3161, %r3160};
	shf.r.wrap.b32 	%r3162, %r3159, %r3158, 18;
	shf.r.wrap.b32 	%r3163, %r3158, %r3159, 18;
	mov.b64 	%rd4187, {%r3163, %r3162};
	xor.b64  	%rd4188, %rd4186, %rd4187;
	shf.l.wrap.b32 	%r3164, %r3158, %r3159, 23;
	shf.l.wrap.b32 	%r3165, %r3159, %r3158, 23;
	mov.b64 	%rd4189, {%r3165, %r3164};
	xor.b64  	%rd4190, %rd4188, %rd4189;
	add.s64 	%rd4191, %rd4185, %rd4190;
	add.s64 	%rd4192, %rd4191, -3051310485924567259;
	add.s64 	%rd4193, %rd4192, %rd4056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3166,%dummy}, %rd4167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3167}, %rd4167;
	}
	shf.r.wrap.b32 	%r3168, %r3167, %r3166, 28;
	shf.r.wrap.b32 	%r3169, %r3166, %r3167, 28;
	mov.b64 	%rd4194, {%r3169, %r3168};
	shf.l.wrap.b32 	%r3170, %r3166, %r3167, 30;
	shf.l.wrap.b32 	%r3171, %r3167, %r3166, 30;
	mov.b64 	%rd4195, {%r3171, %r3170};
	xor.b64  	%rd4196, %rd4194, %rd4195;
	shf.l.wrap.b32 	%r3172, %r3166, %r3167, 25;
	shf.l.wrap.b32 	%r3173, %r3167, %r3166, 25;
	mov.b64 	%rd4197, {%r3173, %r3172};
	xor.b64  	%rd4198, %rd4196, %rd4197;
	and.b64  	%rd4199, %rd4167, %rd4130;
	or.b64  	%rd4200, %rd4167, %rd4130;
	and.b64  	%rd4201, %rd4200, %rd4093;
	or.b64  	%rd4202, %rd4201, %rd4199;
	add.s64 	%rd4203, %rd4202, %rd4198;
	add.s64 	%rd4204, %rd4203, %rd4192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3174,%dummy}, %rd4143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3175}, %rd4143;
	}
	shf.r.wrap.b32 	%r3176, %r3175, %r3174, 19;
	shf.r.wrap.b32 	%r3177, %r3174, %r3175, 19;
	mov.b64 	%rd4205, {%r3177, %r3176};
	shf.l.wrap.b32 	%r3178, %r3174, %r3175, 3;
	shf.l.wrap.b32 	%r3179, %r3175, %r3174, 3;
	mov.b64 	%rd4206, {%r3179, %r3178};
	xor.b64  	%rd4207, %rd4205, %rd4206;
	shr.u64 	%rd4208, %rd4143, 6;
	xor.b64  	%rd4209, %rd4207, %rd4208;
	shf.r.wrap.b32 	%r3180, %r2813, %r2812, 1;
	shf.r.wrap.b32 	%r3181, %r2812, %r2813, 1;
	mov.b64 	%rd4210, {%r3181, %r3180};
	shf.r.wrap.b32 	%r3182, %r2813, %r2812, 8;
	shf.r.wrap.b32 	%r3183, %r2812, %r2813, 8;
	mov.b64 	%rd4211, {%r3183, %r3182};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	shr.u64 	%rd4213, %rd3294, 7;
	xor.b64  	%rd4214, %rd4212, %rd4213;
	add.s64 	%rd4215, %rd4214, %rd3292;
	add.s64 	%rd4216, %rd4215, %rd3958;
	add.s64 	%rd4217, %rd4216, %rd4209;
	add.s64 	%rd4218, %rd4217, %rd4082;
	xor.b64  	%rd4219, %rd4156, %rd4119;
	and.b64  	%rd4220, %rd4193, %rd4219;
	xor.b64  	%rd4221, %rd4220, %rd4119;
	add.s64 	%rd4222, %rd4218, %rd4221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3184,%dummy}, %rd4193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3185}, %rd4193;
	}
	shf.r.wrap.b32 	%r3186, %r3185, %r3184, 14;
	shf.r.wrap.b32 	%r3187, %r3184, %r3185, 14;
	mov.b64 	%rd4223, {%r3187, %r3186};
	shf.r.wrap.b32 	%r3188, %r3185, %r3184, 18;
	shf.r.wrap.b32 	%r3189, %r3184, %r3185, 18;
	mov.b64 	%rd4224, {%r3189, %r3188};
	xor.b64  	%rd4225, %rd4223, %rd4224;
	shf.l.wrap.b32 	%r3190, %r3184, %r3185, 23;
	shf.l.wrap.b32 	%r3191, %r3185, %r3184, 23;
	mov.b64 	%rd4226, {%r3191, %r3190};
	xor.b64  	%rd4227, %rd4225, %rd4226;
	add.s64 	%rd4228, %rd4222, %rd4227;
	add.s64 	%rd4229, %rd4228, 489312712824947311;
	add.s64 	%rd4230, %rd4229, %rd4093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3192,%dummy}, %rd4204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3193}, %rd4204;
	}
	shf.r.wrap.b32 	%r3194, %r3193, %r3192, 28;
	shf.r.wrap.b32 	%r3195, %r3192, %r3193, 28;
	mov.b64 	%rd4231, {%r3195, %r3194};
	shf.l.wrap.b32 	%r3196, %r3192, %r3193, 30;
	shf.l.wrap.b32 	%r3197, %r3193, %r3192, 30;
	mov.b64 	%rd4232, {%r3197, %r3196};
	xor.b64  	%rd4233, %rd4231, %rd4232;
	shf.l.wrap.b32 	%r3198, %r3192, %r3193, 25;
	shf.l.wrap.b32 	%r3199, %r3193, %r3192, 25;
	mov.b64 	%rd4234, {%r3199, %r3198};
	xor.b64  	%rd4235, %rd4233, %rd4234;
	and.b64  	%rd4236, %rd4204, %rd4167;
	or.b64  	%rd4237, %rd4204, %rd4167;
	and.b64  	%rd4238, %rd4237, %rd4130;
	or.b64  	%rd4239, %rd4238, %rd4236;
	add.s64 	%rd4240, %rd4239, %rd4235;
	add.s64 	%rd4241, %rd4240, %rd4229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3200,%dummy}, %rd4180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3201}, %rd4180;
	}
	shf.r.wrap.b32 	%r3202, %r3201, %r3200, 19;
	shf.r.wrap.b32 	%r3203, %r3200, %r3201, 19;
	mov.b64 	%rd4242, {%r3203, %r3202};
	shf.l.wrap.b32 	%r3204, %r3200, %r3201, 3;
	shf.l.wrap.b32 	%r3205, %r3201, %r3200, 3;
	mov.b64 	%rd4243, {%r3205, %r3204};
	xor.b64  	%rd4244, %rd4242, %rd4243;
	shr.u64 	%rd4245, %rd4180, 6;
	xor.b64  	%rd4246, %rd4244, %rd4245;
	shf.r.wrap.b32 	%r3206, %r2841, %r2840, 1;
	shf.r.wrap.b32 	%r3207, %r2840, %r2841, 1;
	mov.b64 	%rd4247, {%r3207, %r3206};
	shf.r.wrap.b32 	%r3208, %r2841, %r2840, 8;
	shf.r.wrap.b32 	%r3209, %r2840, %r2841, 8;
	mov.b64 	%rd4248, {%r3209, %r3208};
	xor.b64  	%rd4249, %rd4247, %rd4248;
	shr.u64 	%rd4250, %rd3699, 7;
	xor.b64  	%rd4251, %rd4249, %rd4250;
	add.s64 	%rd4252, %rd4251, %rd3294;
	add.s64 	%rd4253, %rd4252, %rd3995;
	add.s64 	%rd4254, %rd4253, %rd4246;
	add.s64 	%rd4255, %rd4254, %rd4119;
	xor.b64  	%rd4256, %rd4193, %rd4156;
	and.b64  	%rd4257, %rd4230, %rd4256;
	xor.b64  	%rd4258, %rd4257, %rd4156;
	add.s64 	%rd4259, %rd4255, %rd4258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd4230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3211}, %rd4230;
	}
	shf.r.wrap.b32 	%r3212, %r3211, %r3210, 14;
	shf.r.wrap.b32 	%r3213, %r3210, %r3211, 14;
	mov.b64 	%rd4260, {%r3213, %r3212};
	shf.r.wrap.b32 	%r3214, %r3211, %r3210, 18;
	shf.r.wrap.b32 	%r3215, %r3210, %r3211, 18;
	mov.b64 	%rd4261, {%r3215, %r3214};
	xor.b64  	%rd4262, %rd4260, %rd4261;
	shf.l.wrap.b32 	%r3216, %r3210, %r3211, 23;
	shf.l.wrap.b32 	%r3217, %r3211, %r3210, 23;
	mov.b64 	%rd4263, {%r3217, %r3216};
	xor.b64  	%rd4264, %rd4262, %rd4263;
	add.s64 	%rd4265, %rd4259, %rd4264;
	add.s64 	%rd4266, %rd4265, 1452737877330783856;
	add.s64 	%rd4267, %rd4266, %rd4130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd4241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3219}, %rd4241;
	}
	shf.r.wrap.b32 	%r3220, %r3219, %r3218, 28;
	shf.r.wrap.b32 	%r3221, %r3218, %r3219, 28;
	mov.b64 	%rd4268, {%r3221, %r3220};
	shf.l.wrap.b32 	%r3222, %r3218, %r3219, 30;
	shf.l.wrap.b32 	%r3223, %r3219, %r3218, 30;
	mov.b64 	%rd4269, {%r3223, %r3222};
	xor.b64  	%rd4270, %rd4268, %rd4269;
	shf.l.wrap.b32 	%r3224, %r3218, %r3219, 25;
	shf.l.wrap.b32 	%r3225, %r3219, %r3218, 25;
	mov.b64 	%rd4271, {%r3225, %r3224};
	xor.b64  	%rd4272, %rd4270, %rd4271;
	and.b64  	%rd4273, %rd4241, %rd4204;
	or.b64  	%rd4274, %rd4241, %rd4204;
	and.b64  	%rd4275, %rd4274, %rd4167;
	or.b64  	%rd4276, %rd4275, %rd4273;
	add.s64 	%rd4277, %rd4276, %rd4272;
	add.s64 	%rd4278, %rd4277, %rd4266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3226,%dummy}, %rd4217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3227}, %rd4217;
	}
	shf.r.wrap.b32 	%r3228, %r3227, %r3226, 19;
	shf.r.wrap.b32 	%r3229, %r3226, %r3227, 19;
	mov.b64 	%rd4279, {%r3229, %r3228};
	shf.l.wrap.b32 	%r3230, %r3226, %r3227, 3;
	shf.l.wrap.b32 	%r3231, %r3227, %r3226, 3;
	mov.b64 	%rd4280, {%r3231, %r3230};
	xor.b64  	%rd4281, %rd4279, %rd4280;
	shr.u64 	%rd4282, %rd4217, 6;
	xor.b64  	%rd4283, %rd4281, %rd4282;
	shf.r.wrap.b32 	%r3232, %r2869, %r2868, 1;
	shf.r.wrap.b32 	%r3233, %r2868, %r2869, 1;
	mov.b64 	%rd4284, {%r3233, %r3232};
	shf.r.wrap.b32 	%r3234, %r2869, %r2868, 8;
	shf.r.wrap.b32 	%r3235, %r2868, %r2869, 8;
	mov.b64 	%rd4285, {%r3235, %r3234};
	xor.b64  	%rd4286, %rd4284, %rd4285;
	shr.u64 	%rd4287, %rd3736, 7;
	xor.b64  	%rd4288, %rd4286, %rd4287;
	add.s64 	%rd4289, %rd4288, %rd3699;
	add.s64 	%rd4290, %rd4289, %rd4032;
	add.s64 	%rd4291, %rd4290, %rd4283;
	add.s64 	%rd4292, %rd4291, %rd4156;
	xor.b64  	%rd4293, %rd4230, %rd4193;
	and.b64  	%rd4294, %rd4267, %rd4293;
	xor.b64  	%rd4295, %rd4294, %rd4193;
	add.s64 	%rd4296, %rd4292, %rd4295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3236,%dummy}, %rd4267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3237}, %rd4267;
	}
	shf.r.wrap.b32 	%r3238, %r3237, %r3236, 14;
	shf.r.wrap.b32 	%r3239, %r3236, %r3237, 14;
	mov.b64 	%rd4297, {%r3239, %r3238};
	shf.r.wrap.b32 	%r3240, %r3237, %r3236, 18;
	shf.r.wrap.b32 	%r3241, %r3236, %r3237, 18;
	mov.b64 	%rd4298, {%r3241, %r3240};
	xor.b64  	%rd4299, %rd4297, %rd4298;
	shf.l.wrap.b32 	%r3242, %r3236, %r3237, 23;
	shf.l.wrap.b32 	%r3243, %r3237, %r3236, 23;
	mov.b64 	%rd4300, {%r3243, %r3242};
	xor.b64  	%rd4301, %rd4299, %rd4300;
	add.s64 	%rd4302, %rd4296, %rd4301;
	add.s64 	%rd4303, %rd4302, 2861767655752347644;
	add.s64 	%rd4304, %rd4303, %rd4167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3244,%dummy}, %rd4278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3245}, %rd4278;
	}
	shf.r.wrap.b32 	%r3246, %r3245, %r3244, 28;
	shf.r.wrap.b32 	%r3247, %r3244, %r3245, 28;
	mov.b64 	%rd4305, {%r3247, %r3246};
	shf.l.wrap.b32 	%r3248, %r3244, %r3245, 30;
	shf.l.wrap.b32 	%r3249, %r3245, %r3244, 30;
	mov.b64 	%rd4306, {%r3249, %r3248};
	xor.b64  	%rd4307, %rd4305, %rd4306;
	shf.l.wrap.b32 	%r3250, %r3244, %r3245, 25;
	shf.l.wrap.b32 	%r3251, %r3245, %r3244, 25;
	mov.b64 	%rd4308, {%r3251, %r3250};
	xor.b64  	%rd4309, %rd4307, %rd4308;
	and.b64  	%rd4310, %rd4278, %rd4241;
	or.b64  	%rd4311, %rd4278, %rd4241;
	and.b64  	%rd4312, %rd4311, %rd4204;
	or.b64  	%rd4313, %rd4312, %rd4310;
	add.s64 	%rd4314, %rd4313, %rd4309;
	add.s64 	%rd4315, %rd4314, %rd4303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3252,%dummy}, %rd4254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3253}, %rd4254;
	}
	shf.r.wrap.b32 	%r3254, %r3253, %r3252, 19;
	shf.r.wrap.b32 	%r3255, %r3252, %r3253, 19;
	mov.b64 	%rd4316, {%r3255, %r3254};
	shf.l.wrap.b32 	%r3256, %r3252, %r3253, 3;
	shf.l.wrap.b32 	%r3257, %r3253, %r3252, 3;
	mov.b64 	%rd4317, {%r3257, %r3256};
	xor.b64  	%rd4318, %rd4316, %rd4317;
	shr.u64 	%rd4319, %rd4254, 6;
	xor.b64  	%rd4320, %rd4318, %rd4319;
	shf.r.wrap.b32 	%r3258, %r2897, %r2896, 1;
	shf.r.wrap.b32 	%r3259, %r2896, %r2897, 1;
	mov.b64 	%rd4321, {%r3259, %r3258};
	shf.r.wrap.b32 	%r3260, %r2897, %r2896, 8;
	shf.r.wrap.b32 	%r3261, %r2896, %r2897, 8;
	mov.b64 	%rd4322, {%r3261, %r3260};
	xor.b64  	%rd4323, %rd4321, %rd4322;
	shr.u64 	%rd4324, %rd3773, 7;
	xor.b64  	%rd4325, %rd4323, %rd4324;
	add.s64 	%rd4326, %rd4325, %rd3736;
	add.s64 	%rd4327, %rd4326, %rd4069;
	add.s64 	%rd4328, %rd4327, %rd4320;
	add.s64 	%rd4329, %rd4328, %rd4193;
	xor.b64  	%rd4330, %rd4267, %rd4230;
	and.b64  	%rd4331, %rd4304, %rd4330;
	xor.b64  	%rd4332, %rd4331, %rd4230;
	add.s64 	%rd4333, %rd4329, %rd4332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3262,%dummy}, %rd4304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3263}, %rd4304;
	}
	shf.r.wrap.b32 	%r3264, %r3263, %r3262, 14;
	shf.r.wrap.b32 	%r3265, %r3262, %r3263, 14;
	mov.b64 	%rd4334, {%r3265, %r3264};
	shf.r.wrap.b32 	%r3266, %r3263, %r3262, 18;
	shf.r.wrap.b32 	%r3267, %r3262, %r3263, 18;
	mov.b64 	%rd4335, {%r3267, %r3266};
	xor.b64  	%rd4336, %rd4334, %rd4335;
	shf.l.wrap.b32 	%r3268, %r3262, %r3263, 23;
	shf.l.wrap.b32 	%r3269, %r3263, %r3262, 23;
	mov.b64 	%rd4337, {%r3269, %r3268};
	xor.b64  	%rd4338, %rd4336, %rd4337;
	add.s64 	%rd4339, %rd4333, %rd4338;
	add.s64 	%rd4340, %rd4339, 3322285676063803686;
	add.s64 	%rd4341, %rd4340, %rd4204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3270,%dummy}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3271}, %rd4315;
	}
	shf.r.wrap.b32 	%r3272, %r3271, %r3270, 28;
	shf.r.wrap.b32 	%r3273, %r3270, %r3271, 28;
	mov.b64 	%rd4342, {%r3273, %r3272};
	shf.l.wrap.b32 	%r3274, %r3270, %r3271, 30;
	shf.l.wrap.b32 	%r3275, %r3271, %r3270, 30;
	mov.b64 	%rd4343, {%r3275, %r3274};
	xor.b64  	%rd4344, %rd4342, %rd4343;
	shf.l.wrap.b32 	%r3276, %r3270, %r3271, 25;
	shf.l.wrap.b32 	%r3277, %r3271, %r3270, 25;
	mov.b64 	%rd4345, {%r3277, %r3276};
	xor.b64  	%rd4346, %rd4344, %rd4345;
	and.b64  	%rd4347, %rd4315, %rd4278;
	or.b64  	%rd4348, %rd4315, %rd4278;
	and.b64  	%rd4349, %rd4348, %rd4241;
	or.b64  	%rd4350, %rd4349, %rd4347;
	add.s64 	%rd4351, %rd4350, %rd4346;
	add.s64 	%rd4352, %rd4351, %rd4340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3278,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3279}, %rd4291;
	}
	shf.r.wrap.b32 	%r3280, %r3279, %r3278, 19;
	shf.r.wrap.b32 	%r3281, %r3278, %r3279, 19;
	mov.b64 	%rd4353, {%r3281, %r3280};
	shf.l.wrap.b32 	%r3282, %r3278, %r3279, 3;
	shf.l.wrap.b32 	%r3283, %r3279, %r3278, 3;
	mov.b64 	%rd4354, {%r3283, %r3282};
	xor.b64  	%rd4355, %rd4353, %rd4354;
	shr.u64 	%rd4356, %rd4291, 6;
	xor.b64  	%rd4357, %rd4355, %rd4356;
	shf.r.wrap.b32 	%r3284, %r2925, %r2924, 1;
	shf.r.wrap.b32 	%r3285, %r2924, %r2925, 1;
	mov.b64 	%rd4358, {%r3285, %r3284};
	shf.r.wrap.b32 	%r3286, %r2925, %r2924, 8;
	shf.r.wrap.b32 	%r3287, %r2924, %r2925, 8;
	mov.b64 	%rd4359, {%r3287, %r3286};
	xor.b64  	%rd4360, %rd4358, %rd4359;
	shr.u64 	%rd4361, %rd3810, 7;
	xor.b64  	%rd4362, %rd4360, %rd4361;
	add.s64 	%rd4363, %rd4362, %rd3773;
	add.s64 	%rd4364, %rd4363, %rd4106;
	add.s64 	%rd4365, %rd4364, %rd4357;
	add.s64 	%rd4366, %rd4365, %rd4230;
	xor.b64  	%rd4367, %rd4304, %rd4267;
	and.b64  	%rd4368, %rd4341, %rd4367;
	xor.b64  	%rd4369, %rd4368, %rd4267;
	add.s64 	%rd4370, %rd4366, %rd4369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3288,%dummy}, %rd4341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3289}, %rd4341;
	}
	shf.r.wrap.b32 	%r3290, %r3289, %r3288, 14;
	shf.r.wrap.b32 	%r3291, %r3288, %r3289, 14;
	mov.b64 	%rd4371, {%r3291, %r3290};
	shf.r.wrap.b32 	%r3292, %r3289, %r3288, 18;
	shf.r.wrap.b32 	%r3293, %r3288, %r3289, 18;
	mov.b64 	%rd4372, {%r3293, %r3292};
	xor.b64  	%rd4373, %rd4371, %rd4372;
	shf.l.wrap.b32 	%r3294, %r3288, %r3289, 23;
	shf.l.wrap.b32 	%r3295, %r3289, %r3288, 23;
	mov.b64 	%rd4374, {%r3295, %r3294};
	xor.b64  	%rd4375, %rd4373, %rd4374;
	add.s64 	%rd4376, %rd4370, %rd4375;
	add.s64 	%rd4377, %rd4376, 5560940570517711597;
	add.s64 	%rd4378, %rd4377, %rd4241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3296,%dummy}, %rd4352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3297}, %rd4352;
	}
	shf.r.wrap.b32 	%r3298, %r3297, %r3296, 28;
	shf.r.wrap.b32 	%r3299, %r3296, %r3297, 28;
	mov.b64 	%rd4379, {%r3299, %r3298};
	shf.l.wrap.b32 	%r3300, %r3296, %r3297, 30;
	shf.l.wrap.b32 	%r3301, %r3297, %r3296, 30;
	mov.b64 	%rd4380, {%r3301, %r3300};
	xor.b64  	%rd4381, %rd4379, %rd4380;
	shf.l.wrap.b32 	%r3302, %r3296, %r3297, 25;
	shf.l.wrap.b32 	%r3303, %r3297, %r3296, 25;
	mov.b64 	%rd4382, {%r3303, %r3302};
	xor.b64  	%rd4383, %rd4381, %rd4382;
	and.b64  	%rd4384, %rd4352, %rd4315;
	or.b64  	%rd4385, %rd4352, %rd4315;
	and.b64  	%rd4386, %rd4385, %rd4278;
	or.b64  	%rd4387, %rd4386, %rd4384;
	add.s64 	%rd4388, %rd4387, %rd4383;
	add.s64 	%rd4389, %rd4388, %rd4377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3304,%dummy}, %rd4328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3305}, %rd4328;
	}
	shf.r.wrap.b32 	%r3306, %r3305, %r3304, 19;
	shf.r.wrap.b32 	%r3307, %r3304, %r3305, 19;
	mov.b64 	%rd4390, {%r3307, %r3306};
	shf.l.wrap.b32 	%r3308, %r3304, %r3305, 3;
	shf.l.wrap.b32 	%r3309, %r3305, %r3304, 3;
	mov.b64 	%rd4391, {%r3309, %r3308};
	xor.b64  	%rd4392, %rd4390, %rd4391;
	shr.u64 	%rd4393, %rd4328, 6;
	xor.b64  	%rd4394, %rd4392, %rd4393;
	shf.r.wrap.b32 	%r3310, %r2953, %r2952, 1;
	shf.r.wrap.b32 	%r3311, %r2952, %r2953, 1;
	mov.b64 	%rd4395, {%r3311, %r3310};
	shf.r.wrap.b32 	%r3312, %r2953, %r2952, 8;
	shf.r.wrap.b32 	%r3313, %r2952, %r2953, 8;
	mov.b64 	%rd4396, {%r3313, %r3312};
	xor.b64  	%rd4397, %rd4395, %rd4396;
	shr.u64 	%rd4398, %rd3847, 7;
	xor.b64  	%rd4399, %rd4397, %rd4398;
	add.s64 	%rd4400, %rd4399, %rd3810;
	add.s64 	%rd4401, %rd4400, %rd4143;
	add.s64 	%rd4402, %rd4401, %rd4394;
	add.s64 	%rd4403, %rd4402, %rd4267;
	xor.b64  	%rd4404, %rd4341, %rd4304;
	and.b64  	%rd4405, %rd4378, %rd4404;
	xor.b64  	%rd4406, %rd4405, %rd4304;
	add.s64 	%rd4407, %rd4403, %rd4406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3314,%dummy}, %rd4378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3315}, %rd4378;
	}
	shf.r.wrap.b32 	%r3316, %r3315, %r3314, 14;
	shf.r.wrap.b32 	%r3317, %r3314, %r3315, 14;
	mov.b64 	%rd4408, {%r3317, %r3316};
	shf.r.wrap.b32 	%r3318, %r3315, %r3314, 18;
	shf.r.wrap.b32 	%r3319, %r3314, %r3315, 18;
	mov.b64 	%rd4409, {%r3319, %r3318};
	xor.b64  	%rd4410, %rd4408, %rd4409;
	shf.l.wrap.b32 	%r3320, %r3314, %r3315, 23;
	shf.l.wrap.b32 	%r3321, %r3315, %r3314, 23;
	mov.b64 	%rd4411, {%r3321, %r3320};
	xor.b64  	%rd4412, %rd4410, %rd4411;
	add.s64 	%rd4413, %rd4407, %rd4412;
	add.s64 	%rd4414, %rd4413, 5996557281743188959;
	add.s64 	%rd4415, %rd4414, %rd4278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd4389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3323}, %rd4389;
	}
	shf.r.wrap.b32 	%r3324, %r3323, %r3322, 28;
	shf.r.wrap.b32 	%r3325, %r3322, %r3323, 28;
	mov.b64 	%rd4416, {%r3325, %r3324};
	shf.l.wrap.b32 	%r3326, %r3322, %r3323, 30;
	shf.l.wrap.b32 	%r3327, %r3323, %r3322, 30;
	mov.b64 	%rd4417, {%r3327, %r3326};
	xor.b64  	%rd4418, %rd4416, %rd4417;
	shf.l.wrap.b32 	%r3328, %r3322, %r3323, 25;
	shf.l.wrap.b32 	%r3329, %r3323, %r3322, 25;
	mov.b64 	%rd4419, {%r3329, %r3328};
	xor.b64  	%rd4420, %rd4418, %rd4419;
	and.b64  	%rd4421, %rd4389, %rd4352;
	or.b64  	%rd4422, %rd4389, %rd4352;
	and.b64  	%rd4423, %rd4422, %rd4315;
	or.b64  	%rd4424, %rd4423, %rd4421;
	add.s64 	%rd4425, %rd4424, %rd4420;
	add.s64 	%rd4426, %rd4425, %rd4414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd4365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3331}, %rd4365;
	}
	shf.r.wrap.b32 	%r3332, %r3331, %r3330, 19;
	shf.r.wrap.b32 	%r3333, %r3330, %r3331, 19;
	mov.b64 	%rd4427, {%r3333, %r3332};
	shf.l.wrap.b32 	%r3334, %r3330, %r3331, 3;
	shf.l.wrap.b32 	%r3335, %r3331, %r3330, 3;
	mov.b64 	%rd4428, {%r3335, %r3334};
	xor.b64  	%rd4429, %rd4427, %rd4428;
	shr.u64 	%rd4430, %rd4365, 6;
	xor.b64  	%rd4431, %rd4429, %rd4430;
	shf.r.wrap.b32 	%r3336, %r2981, %r2980, 1;
	shf.r.wrap.b32 	%r3337, %r2980, %r2981, 1;
	mov.b64 	%rd4432, {%r3337, %r3336};
	shf.r.wrap.b32 	%r3338, %r2981, %r2980, 8;
	shf.r.wrap.b32 	%r3339, %r2980, %r2981, 8;
	mov.b64 	%rd4433, {%r3339, %r3338};
	xor.b64  	%rd4434, %rd4432, %rd4433;
	shr.u64 	%rd4435, %rd3884, 7;
	xor.b64  	%rd4436, %rd4434, %rd4435;
	add.s64 	%rd4437, %rd4436, %rd3847;
	add.s64 	%rd4438, %rd4437, %rd4180;
	add.s64 	%rd4439, %rd4438, %rd4431;
	add.s64 	%rd4440, %rd4439, %rd4304;
	xor.b64  	%rd4441, %rd4378, %rd4341;
	and.b64  	%rd4442, %rd4415, %rd4441;
	xor.b64  	%rd4443, %rd4442, %rd4341;
	add.s64 	%rd4444, %rd4440, %rd4443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3340,%dummy}, %rd4415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3341}, %rd4415;
	}
	shf.r.wrap.b32 	%r3342, %r3341, %r3340, 14;
	shf.r.wrap.b32 	%r3343, %r3340, %r3341, 14;
	mov.b64 	%rd4445, {%r3343, %r3342};
	shf.r.wrap.b32 	%r3344, %r3341, %r3340, 18;
	shf.r.wrap.b32 	%r3345, %r3340, %r3341, 18;
	mov.b64 	%rd4446, {%r3345, %r3344};
	xor.b64  	%rd4447, %rd4445, %rd4446;
	shf.l.wrap.b32 	%r3346, %r3340, %r3341, 23;
	shf.l.wrap.b32 	%r3347, %r3341, %r3340, 23;
	mov.b64 	%rd4448, {%r3347, %r3346};
	xor.b64  	%rd4449, %rd4447, %rd4448;
	add.s64 	%rd4450, %rd4444, %rd4449;
	add.s64 	%rd4451, %rd4450, 7280758554555802590;
	add.s64 	%rd4452, %rd4451, %rd4315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3348,%dummy}, %rd4426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3349}, %rd4426;
	}
	shf.r.wrap.b32 	%r3350, %r3349, %r3348, 28;
	shf.r.wrap.b32 	%r3351, %r3348, %r3349, 28;
	mov.b64 	%rd4453, {%r3351, %r3350};
	shf.l.wrap.b32 	%r3352, %r3348, %r3349, 30;
	shf.l.wrap.b32 	%r3353, %r3349, %r3348, 30;
	mov.b64 	%rd4454, {%r3353, %r3352};
	xor.b64  	%rd4455, %rd4453, %rd4454;
	shf.l.wrap.b32 	%r3354, %r3348, %r3349, 25;
	shf.l.wrap.b32 	%r3355, %r3349, %r3348, 25;
	mov.b64 	%rd4456, {%r3355, %r3354};
	xor.b64  	%rd4457, %rd4455, %rd4456;
	and.b64  	%rd4458, %rd4426, %rd4389;
	or.b64  	%rd4459, %rd4426, %rd4389;
	and.b64  	%rd4460, %rd4459, %rd4352;
	or.b64  	%rd4461, %rd4460, %rd4458;
	add.s64 	%rd4462, %rd4461, %rd4457;
	add.s64 	%rd4463, %rd4462, %rd4451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3356,%dummy}, %rd4402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3357}, %rd4402;
	}
	shf.r.wrap.b32 	%r3358, %r3357, %r3356, 19;
	shf.r.wrap.b32 	%r3359, %r3356, %r3357, 19;
	mov.b64 	%rd4464, {%r3359, %r3358};
	shf.l.wrap.b32 	%r3360, %r3356, %r3357, 3;
	shf.l.wrap.b32 	%r3361, %r3357, %r3356, 3;
	mov.b64 	%rd4465, {%r3361, %r3360};
	xor.b64  	%rd4466, %rd4464, %rd4465;
	shr.u64 	%rd4467, %rd4402, 6;
	xor.b64  	%rd4468, %rd4466, %rd4467;
	shf.r.wrap.b32 	%r3362, %r3009, %r3008, 1;
	shf.r.wrap.b32 	%r3363, %r3008, %r3009, 1;
	mov.b64 	%rd4469, {%r3363, %r3362};
	shf.r.wrap.b32 	%r3364, %r3009, %r3008, 8;
	shf.r.wrap.b32 	%r3365, %r3008, %r3009, 8;
	mov.b64 	%rd4470, {%r3365, %r3364};
	xor.b64  	%rd4471, %rd4469, %rd4470;
	shr.u64 	%rd4472, %rd3921, 7;
	xor.b64  	%rd4473, %rd4471, %rd4472;
	add.s64 	%rd4474, %rd4473, %rd3884;
	add.s64 	%rd4475, %rd4474, %rd4217;
	add.s64 	%rd4476, %rd4475, %rd4468;
	add.s64 	%rd4477, %rd4476, %rd4341;
	xor.b64  	%rd4478, %rd4415, %rd4378;
	and.b64  	%rd4479, %rd4452, %rd4478;
	xor.b64  	%rd4480, %rd4479, %rd4378;
	add.s64 	%rd4481, %rd4477, %rd4480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3366,%dummy}, %rd4452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3367}, %rd4452;
	}
	shf.r.wrap.b32 	%r3368, %r3367, %r3366, 14;
	shf.r.wrap.b32 	%r3369, %r3366, %r3367, 14;
	mov.b64 	%rd4482, {%r3369, %r3368};
	shf.r.wrap.b32 	%r3370, %r3367, %r3366, 18;
	shf.r.wrap.b32 	%r3371, %r3366, %r3367, 18;
	mov.b64 	%rd4483, {%r3371, %r3370};
	xor.b64  	%rd4484, %rd4482, %rd4483;
	shf.l.wrap.b32 	%r3372, %r3366, %r3367, 23;
	shf.l.wrap.b32 	%r3373, %r3367, %r3366, 23;
	mov.b64 	%rd4485, {%r3373, %r3372};
	xor.b64  	%rd4486, %rd4484, %rd4485;
	add.s64 	%rd4487, %rd4481, %rd4486;
	add.s64 	%rd4488, %rd4487, 8532644243296465576;
	add.s64 	%rd4489, %rd4488, %rd4352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3374,%dummy}, %rd4463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3375}, %rd4463;
	}
	shf.r.wrap.b32 	%r3376, %r3375, %r3374, 28;
	shf.r.wrap.b32 	%r3377, %r3374, %r3375, 28;
	mov.b64 	%rd4490, {%r3377, %r3376};
	shf.l.wrap.b32 	%r3378, %r3374, %r3375, 30;
	shf.l.wrap.b32 	%r3379, %r3375, %r3374, 30;
	mov.b64 	%rd4491, {%r3379, %r3378};
	xor.b64  	%rd4492, %rd4490, %rd4491;
	shf.l.wrap.b32 	%r3380, %r3374, %r3375, 25;
	shf.l.wrap.b32 	%r3381, %r3375, %r3374, 25;
	mov.b64 	%rd4493, {%r3381, %r3380};
	xor.b64  	%rd4494, %rd4492, %rd4493;
	and.b64  	%rd4495, %rd4463, %rd4426;
	or.b64  	%rd4496, %rd4463, %rd4426;
	and.b64  	%rd4497, %rd4496, %rd4389;
	or.b64  	%rd4498, %rd4497, %rd4495;
	add.s64 	%rd4499, %rd4498, %rd4494;
	add.s64 	%rd4500, %rd4499, %rd4488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3382,%dummy}, %rd4439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3383}, %rd4439;
	}
	shf.r.wrap.b32 	%r3384, %r3383, %r3382, 19;
	shf.r.wrap.b32 	%r3385, %r3382, %r3383, 19;
	mov.b64 	%rd4501, {%r3385, %r3384};
	shf.l.wrap.b32 	%r3386, %r3382, %r3383, 3;
	shf.l.wrap.b32 	%r3387, %r3383, %r3382, 3;
	mov.b64 	%rd4502, {%r3387, %r3386};
	xor.b64  	%rd4503, %rd4501, %rd4502;
	shr.u64 	%rd4504, %rd4439, 6;
	xor.b64  	%rd4505, %rd4503, %rd4504;
	shf.r.wrap.b32 	%r3388, %r3037, %r3036, 1;
	shf.r.wrap.b32 	%r3389, %r3036, %r3037, 1;
	mov.b64 	%rd4506, {%r3389, %r3388};
	shf.r.wrap.b32 	%r3390, %r3037, %r3036, 8;
	shf.r.wrap.b32 	%r3391, %r3036, %r3037, 8;
	mov.b64 	%rd4507, {%r3391, %r3390};
	xor.b64  	%rd4508, %rd4506, %rd4507;
	shr.u64 	%rd4509, %rd3958, 7;
	xor.b64  	%rd4510, %rd4508, %rd4509;
	add.s64 	%rd4511, %rd4510, %rd3921;
	add.s64 	%rd4512, %rd4511, %rd4254;
	add.s64 	%rd4513, %rd4512, %rd4505;
	add.s64 	%rd4514, %rd4513, %rd4378;
	xor.b64  	%rd4515, %rd4452, %rd4415;
	and.b64  	%rd4516, %rd4489, %rd4515;
	xor.b64  	%rd4517, %rd4516, %rd4415;
	add.s64 	%rd4518, %rd4514, %rd4517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3392,%dummy}, %rd4489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3393}, %rd4489;
	}
	shf.r.wrap.b32 	%r3394, %r3393, %r3392, 14;
	shf.r.wrap.b32 	%r3395, %r3392, %r3393, 14;
	mov.b64 	%rd4519, {%r3395, %r3394};
	shf.r.wrap.b32 	%r3396, %r3393, %r3392, 18;
	shf.r.wrap.b32 	%r3397, %r3392, %r3393, 18;
	mov.b64 	%rd4520, {%r3397, %r3396};
	xor.b64  	%rd4521, %rd4519, %rd4520;
	shf.l.wrap.b32 	%r3398, %r3392, %r3393, 23;
	shf.l.wrap.b32 	%r3399, %r3393, %r3392, 23;
	mov.b64 	%rd4522, {%r3399, %r3398};
	xor.b64  	%rd4523, %rd4521, %rd4522;
	add.s64 	%rd4524, %rd4518, %rd4523;
	add.s64 	%rd4525, %rd4524, -9096487096722542874;
	add.s64 	%rd4526, %rd4525, %rd4389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3400,%dummy}, %rd4500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3401}, %rd4500;
	}
	shf.r.wrap.b32 	%r3402, %r3401, %r3400, 28;
	shf.r.wrap.b32 	%r3403, %r3400, %r3401, 28;
	mov.b64 	%rd4527, {%r3403, %r3402};
	shf.l.wrap.b32 	%r3404, %r3400, %r3401, 30;
	shf.l.wrap.b32 	%r3405, %r3401, %r3400, 30;
	mov.b64 	%rd4528, {%r3405, %r3404};
	xor.b64  	%rd4529, %rd4527, %rd4528;
	shf.l.wrap.b32 	%r3406, %r3400, %r3401, 25;
	shf.l.wrap.b32 	%r3407, %r3401, %r3400, 25;
	mov.b64 	%rd4530, {%r3407, %r3406};
	xor.b64  	%rd4531, %rd4529, %rd4530;
	and.b64  	%rd4532, %rd4500, %rd4463;
	or.b64  	%rd4533, %rd4500, %rd4463;
	and.b64  	%rd4534, %rd4533, %rd4426;
	or.b64  	%rd4535, %rd4534, %rd4532;
	add.s64 	%rd4536, %rd4535, %rd4531;
	add.s64 	%rd4537, %rd4536, %rd4525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3408,%dummy}, %rd4476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3409}, %rd4476;
	}
	shf.r.wrap.b32 	%r3410, %r3409, %r3408, 19;
	shf.r.wrap.b32 	%r3411, %r3408, %r3409, 19;
	mov.b64 	%rd4538, {%r3411, %r3410};
	shf.l.wrap.b32 	%r3412, %r3408, %r3409, 3;
	shf.l.wrap.b32 	%r3413, %r3409, %r3408, 3;
	mov.b64 	%rd4539, {%r3413, %r3412};
	xor.b64  	%rd4540, %rd4538, %rd4539;
	shr.u64 	%rd4541, %rd4476, 6;
	xor.b64  	%rd4542, %rd4540, %rd4541;
	shf.r.wrap.b32 	%r3414, %r3065, %r3064, 1;
	shf.r.wrap.b32 	%r3415, %r3064, %r3065, 1;
	mov.b64 	%rd4543, {%r3415, %r3414};
	shf.r.wrap.b32 	%r3416, %r3065, %r3064, 8;
	shf.r.wrap.b32 	%r3417, %r3064, %r3065, 8;
	mov.b64 	%rd4544, {%r3417, %r3416};
	xor.b64  	%rd4545, %rd4543, %rd4544;
	shr.u64 	%rd4546, %rd3995, 7;
	xor.b64  	%rd4547, %rd4545, %rd4546;
	add.s64 	%rd4548, %rd4547, %rd3958;
	add.s64 	%rd4549, %rd4548, %rd4291;
	add.s64 	%rd4550, %rd4549, %rd4542;
	add.s64 	%rd4551, %rd4550, %rd4415;
	xor.b64  	%rd4552, %rd4489, %rd4452;
	and.b64  	%rd4553, %rd4526, %rd4552;
	xor.b64  	%rd4554, %rd4553, %rd4452;
	add.s64 	%rd4555, %rd4551, %rd4554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3418,%dummy}, %rd4526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3419}, %rd4526;
	}
	shf.r.wrap.b32 	%r3420, %r3419, %r3418, 14;
	shf.r.wrap.b32 	%r3421, %r3418, %r3419, 14;
	mov.b64 	%rd4556, {%r3421, %r3420};
	shf.r.wrap.b32 	%r3422, %r3419, %r3418, 18;
	shf.r.wrap.b32 	%r3423, %r3418, %r3419, 18;
	mov.b64 	%rd4557, {%r3423, %r3422};
	xor.b64  	%rd4558, %rd4556, %rd4557;
	shf.l.wrap.b32 	%r3424, %r3418, %r3419, 23;
	shf.l.wrap.b32 	%r3425, %r3419, %r3418, 23;
	mov.b64 	%rd4559, {%r3425, %r3424};
	xor.b64  	%rd4560, %rd4558, %rd4559;
	add.s64 	%rd4561, %rd4555, %rd4560;
	add.s64 	%rd4562, %rd4561, -7894198246740708037;
	add.s64 	%rd4563, %rd4562, %rd4426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3426,%dummy}, %rd4537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3427}, %rd4537;
	}
	shf.r.wrap.b32 	%r3428, %r3427, %r3426, 28;
	shf.r.wrap.b32 	%r3429, %r3426, %r3427, 28;
	mov.b64 	%rd4564, {%r3429, %r3428};
	shf.l.wrap.b32 	%r3430, %r3426, %r3427, 30;
	shf.l.wrap.b32 	%r3431, %r3427, %r3426, 30;
	mov.b64 	%rd4565, {%r3431, %r3430};
	xor.b64  	%rd4566, %rd4564, %rd4565;
	shf.l.wrap.b32 	%r3432, %r3426, %r3427, 25;
	shf.l.wrap.b32 	%r3433, %r3427, %r3426, 25;
	mov.b64 	%rd4567, {%r3433, %r3432};
	xor.b64  	%rd4568, %rd4566, %rd4567;
	and.b64  	%rd4569, %rd4537, %rd4500;
	or.b64  	%rd4570, %rd4537, %rd4500;
	and.b64  	%rd4571, %rd4570, %rd4463;
	or.b64  	%rd4572, %rd4571, %rd4569;
	add.s64 	%rd4573, %rd4572, %rd4568;
	add.s64 	%rd4574, %rd4573, %rd4562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3434,%dummy}, %rd4513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3435}, %rd4513;
	}
	shf.r.wrap.b32 	%r3436, %r3435, %r3434, 19;
	shf.r.wrap.b32 	%r3437, %r3434, %r3435, 19;
	mov.b64 	%rd4575, {%r3437, %r3436};
	shf.l.wrap.b32 	%r3438, %r3434, %r3435, 3;
	shf.l.wrap.b32 	%r3439, %r3435, %r3434, 3;
	mov.b64 	%rd4576, {%r3439, %r3438};
	xor.b64  	%rd4577, %rd4575, %rd4576;
	shr.u64 	%rd4578, %rd4513, 6;
	xor.b64  	%rd4579, %rd4577, %rd4578;
	shf.r.wrap.b32 	%r3440, %r3093, %r3092, 1;
	shf.r.wrap.b32 	%r3441, %r3092, %r3093, 1;
	mov.b64 	%rd4580, {%r3441, %r3440};
	shf.r.wrap.b32 	%r3442, %r3093, %r3092, 8;
	shf.r.wrap.b32 	%r3443, %r3092, %r3093, 8;
	mov.b64 	%rd4581, {%r3443, %r3442};
	xor.b64  	%rd4582, %rd4580, %rd4581;
	shr.u64 	%rd4583, %rd4032, 7;
	xor.b64  	%rd4584, %rd4582, %rd4583;
	add.s64 	%rd4585, %rd4584, %rd3995;
	add.s64 	%rd4586, %rd4585, %rd4328;
	add.s64 	%rd4587, %rd4586, %rd4579;
	add.s64 	%rd4588, %rd4587, %rd4452;
	xor.b64  	%rd4589, %rd4526, %rd4489;
	and.b64  	%rd4590, %rd4563, %rd4589;
	xor.b64  	%rd4591, %rd4590, %rd4489;
	add.s64 	%rd4592, %rd4588, %rd4591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3444,%dummy}, %rd4563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3445}, %rd4563;
	}
	shf.r.wrap.b32 	%r3446, %r3445, %r3444, 14;
	shf.r.wrap.b32 	%r3447, %r3444, %r3445, 14;
	mov.b64 	%rd4593, {%r3447, %r3446};
	shf.r.wrap.b32 	%r3448, %r3445, %r3444, 18;
	shf.r.wrap.b32 	%r3449, %r3444, %r3445, 18;
	mov.b64 	%rd4594, {%r3449, %r3448};
	xor.b64  	%rd4595, %rd4593, %rd4594;
	shf.l.wrap.b32 	%r3450, %r3444, %r3445, 23;
	shf.l.wrap.b32 	%r3451, %r3445, %r3444, 23;
	mov.b64 	%rd4596, {%r3451, %r3450};
	xor.b64  	%rd4597, %rd4595, %rd4596;
	add.s64 	%rd4598, %rd4592, %rd4597;
	add.s64 	%rd4599, %rd4598, -6719396339535248540;
	add.s64 	%rd4600, %rd4599, %rd4463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3452,%dummy}, %rd4574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3453}, %rd4574;
	}
	shf.r.wrap.b32 	%r3454, %r3453, %r3452, 28;
	shf.r.wrap.b32 	%r3455, %r3452, %r3453, 28;
	mov.b64 	%rd4601, {%r3455, %r3454};
	shf.l.wrap.b32 	%r3456, %r3452, %r3453, 30;
	shf.l.wrap.b32 	%r3457, %r3453, %r3452, 30;
	mov.b64 	%rd4602, {%r3457, %r3456};
	xor.b64  	%rd4603, %rd4601, %rd4602;
	shf.l.wrap.b32 	%r3458, %r3452, %r3453, 25;
	shf.l.wrap.b32 	%r3459, %r3453, %r3452, 25;
	mov.b64 	%rd4604, {%r3459, %r3458};
	xor.b64  	%rd4605, %rd4603, %rd4604;
	and.b64  	%rd4606, %rd4574, %rd4537;
	or.b64  	%rd4607, %rd4574, %rd4537;
	and.b64  	%rd4608, %rd4607, %rd4500;
	or.b64  	%rd4609, %rd4608, %rd4606;
	add.s64 	%rd4610, %rd4609, %rd4605;
	add.s64 	%rd4611, %rd4610, %rd4599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3460,%dummy}, %rd4550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3461}, %rd4550;
	}
	shf.r.wrap.b32 	%r3462, %r3461, %r3460, 19;
	shf.r.wrap.b32 	%r3463, %r3460, %r3461, 19;
	mov.b64 	%rd4612, {%r3463, %r3462};
	shf.l.wrap.b32 	%r3464, %r3460, %r3461, 3;
	shf.l.wrap.b32 	%r3465, %r3461, %r3460, 3;
	mov.b64 	%rd4613, {%r3465, %r3464};
	xor.b64  	%rd4614, %rd4612, %rd4613;
	shr.u64 	%rd4615, %rd4550, 6;
	xor.b64  	%rd4616, %rd4614, %rd4615;
	shf.r.wrap.b32 	%r3466, %r3121, %r3120, 1;
	shf.r.wrap.b32 	%r3467, %r3120, %r3121, 1;
	mov.b64 	%rd4617, {%r3467, %r3466};
	shf.r.wrap.b32 	%r3468, %r3121, %r3120, 8;
	shf.r.wrap.b32 	%r3469, %r3120, %r3121, 8;
	mov.b64 	%rd4618, {%r3469, %r3468};
	xor.b64  	%rd4619, %rd4617, %rd4618;
	shr.u64 	%rd4620, %rd4069, 7;
	xor.b64  	%rd4621, %rd4619, %rd4620;
	add.s64 	%rd4622, %rd4621, %rd4032;
	add.s64 	%rd4623, %rd4622, %rd4365;
	add.s64 	%rd4624, %rd4623, %rd4616;
	add.s64 	%rd4625, %rd4624, %rd4489;
	xor.b64  	%rd4626, %rd4563, %rd4526;
	and.b64  	%rd4627, %rd4600, %rd4626;
	xor.b64  	%rd4628, %rd4627, %rd4526;
	add.s64 	%rd4629, %rd4625, %rd4628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3470,%dummy}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3471}, %rd4600;
	}
	shf.r.wrap.b32 	%r3472, %r3471, %r3470, 14;
	shf.r.wrap.b32 	%r3473, %r3470, %r3471, 14;
	mov.b64 	%rd4630, {%r3473, %r3472};
	shf.r.wrap.b32 	%r3474, %r3471, %r3470, 18;
	shf.r.wrap.b32 	%r3475, %r3470, %r3471, 18;
	mov.b64 	%rd4631, {%r3475, %r3474};
	xor.b64  	%rd4632, %rd4630, %rd4631;
	shf.l.wrap.b32 	%r3476, %r3470, %r3471, 23;
	shf.l.wrap.b32 	%r3477, %r3471, %r3470, 23;
	mov.b64 	%rd4633, {%r3477, %r3476};
	xor.b64  	%rd4634, %rd4632, %rd4633;
	add.s64 	%rd4635, %rd4629, %rd4634;
	add.s64 	%rd4636, %rd4635, -6333637450476146687;
	add.s64 	%rd4637, %rd4636, %rd4500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3478,%dummy}, %rd4611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3479}, %rd4611;
	}
	shf.r.wrap.b32 	%r3480, %r3479, %r3478, 28;
	shf.r.wrap.b32 	%r3481, %r3478, %r3479, 28;
	mov.b64 	%rd4638, {%r3481, %r3480};
	shf.l.wrap.b32 	%r3482, %r3478, %r3479, 30;
	shf.l.wrap.b32 	%r3483, %r3479, %r3478, 30;
	mov.b64 	%rd4639, {%r3483, %r3482};
	xor.b64  	%rd4640, %rd4638, %rd4639;
	shf.l.wrap.b32 	%r3484, %r3478, %r3479, 25;
	shf.l.wrap.b32 	%r3485, %r3479, %r3478, 25;
	mov.b64 	%rd4641, {%r3485, %r3484};
	xor.b64  	%rd4642, %rd4640, %rd4641;
	and.b64  	%rd4643, %rd4611, %rd4574;
	or.b64  	%rd4644, %rd4611, %rd4574;
	and.b64  	%rd4645, %rd4644, %rd4537;
	or.b64  	%rd4646, %rd4645, %rd4643;
	add.s64 	%rd4647, %rd4646, %rd4642;
	add.s64 	%rd4648, %rd4647, %rd4636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3486,%dummy}, %rd4587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3487}, %rd4587;
	}
	shf.r.wrap.b32 	%r3488, %r3487, %r3486, 19;
	shf.r.wrap.b32 	%r3489, %r3486, %r3487, 19;
	mov.b64 	%rd4649, {%r3489, %r3488};
	shf.l.wrap.b32 	%r3490, %r3486, %r3487, 3;
	shf.l.wrap.b32 	%r3491, %r3487, %r3486, 3;
	mov.b64 	%rd4650, {%r3491, %r3490};
	xor.b64  	%rd4651, %rd4649, %rd4650;
	shr.u64 	%rd4652, %rd4587, 6;
	xor.b64  	%rd4653, %rd4651, %rd4652;
	shf.r.wrap.b32 	%r3492, %r3149, %r3148, 1;
	shf.r.wrap.b32 	%r3493, %r3148, %r3149, 1;
	mov.b64 	%rd4654, {%r3493, %r3492};
	shf.r.wrap.b32 	%r3494, %r3149, %r3148, 8;
	shf.r.wrap.b32 	%r3495, %r3148, %r3149, 8;
	mov.b64 	%rd4655, {%r3495, %r3494};
	xor.b64  	%rd4656, %rd4654, %rd4655;
	shr.u64 	%rd4657, %rd4106, 7;
	xor.b64  	%rd4658, %rd4656, %rd4657;
	add.s64 	%rd4659, %rd4658, %rd4069;
	add.s64 	%rd4660, %rd4659, %rd4402;
	add.s64 	%rd4661, %rd4660, %rd4653;
	add.s64 	%rd4662, %rd4661, %rd4526;
	xor.b64  	%rd4663, %rd4600, %rd4563;
	and.b64  	%rd4664, %rd4637, %rd4663;
	xor.b64  	%rd4665, %rd4664, %rd4563;
	add.s64 	%rd4666, %rd4662, %rd4665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3496,%dummy}, %rd4637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd4637;
	}
	shf.r.wrap.b32 	%r3498, %r3497, %r3496, 14;
	shf.r.wrap.b32 	%r3499, %r3496, %r3497, 14;
	mov.b64 	%rd4667, {%r3499, %r3498};
	shf.r.wrap.b32 	%r3500, %r3497, %r3496, 18;
	shf.r.wrap.b32 	%r3501, %r3496, %r3497, 18;
	mov.b64 	%rd4668, {%r3501, %r3500};
	xor.b64  	%rd4669, %rd4667, %rd4668;
	shf.l.wrap.b32 	%r3502, %r3496, %r3497, 23;
	shf.l.wrap.b32 	%r3503, %r3497, %r3496, 23;
	mov.b64 	%rd4670, {%r3503, %r3502};
	xor.b64  	%rd4671, %rd4669, %rd4670;
	add.s64 	%rd4672, %rd4666, %rd4671;
	add.s64 	%rd4673, %rd4672, -4446306890439682159;
	add.s64 	%rd4674, %rd4673, %rd4537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3504,%dummy}, %rd4648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3505}, %rd4648;
	}
	shf.r.wrap.b32 	%r3506, %r3505, %r3504, 28;
	shf.r.wrap.b32 	%r3507, %r3504, %r3505, 28;
	mov.b64 	%rd4675, {%r3507, %r3506};
	shf.l.wrap.b32 	%r3508, %r3504, %r3505, 30;
	shf.l.wrap.b32 	%r3509, %r3505, %r3504, 30;
	mov.b64 	%rd4676, {%r3509, %r3508};
	xor.b64  	%rd4677, %rd4675, %rd4676;
	shf.l.wrap.b32 	%r3510, %r3504, %r3505, 25;
	shf.l.wrap.b32 	%r3511, %r3505, %r3504, 25;
	mov.b64 	%rd4678, {%r3511, %r3510};
	xor.b64  	%rd4679, %rd4677, %rd4678;
	and.b64  	%rd4680, %rd4648, %rd4611;
	or.b64  	%rd4681, %rd4648, %rd4611;
	and.b64  	%rd4682, %rd4681, %rd4574;
	or.b64  	%rd4683, %rd4682, %rd4680;
	add.s64 	%rd4684, %rd4683, %rd4679;
	add.s64 	%rd4685, %rd4684, %rd4673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3512,%dummy}, %rd4624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd4624;
	}
	shf.r.wrap.b32 	%r3514, %r3513, %r3512, 19;
	shf.r.wrap.b32 	%r3515, %r3512, %r3513, 19;
	mov.b64 	%rd4686, {%r3515, %r3514};
	shf.l.wrap.b32 	%r3516, %r3512, %r3513, 3;
	shf.l.wrap.b32 	%r3517, %r3513, %r3512, 3;
	mov.b64 	%rd4687, {%r3517, %r3516};
	xor.b64  	%rd4688, %rd4686, %rd4687;
	shr.u64 	%rd4689, %rd4624, 6;
	xor.b64  	%rd4690, %rd4688, %rd4689;
	shf.r.wrap.b32 	%r3518, %r3175, %r3174, 1;
	shf.r.wrap.b32 	%r3519, %r3174, %r3175, 1;
	mov.b64 	%rd4691, {%r3519, %r3518};
	shf.r.wrap.b32 	%r3520, %r3175, %r3174, 8;
	shf.r.wrap.b32 	%r3521, %r3174, %r3175, 8;
	mov.b64 	%rd4692, {%r3521, %r3520};
	xor.b64  	%rd4693, %rd4691, %rd4692;
	shr.u64 	%rd4694, %rd4143, 7;
	xor.b64  	%rd4695, %rd4693, %rd4694;
	add.s64 	%rd4696, %rd4695, %rd4106;
	add.s64 	%rd4697, %rd4696, %rd4439;
	add.s64 	%rd4698, %rd4697, %rd4690;
	add.s64 	%rd4699, %rd4698, %rd4563;
	xor.b64  	%rd4700, %rd4637, %rd4600;
	and.b64  	%rd4701, %rd4674, %rd4700;
	xor.b64  	%rd4702, %rd4701, %rd4600;
	add.s64 	%rd4703, %rd4699, %rd4702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3522,%dummy}, %rd4674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3523}, %rd4674;
	}
	shf.r.wrap.b32 	%r3524, %r3523, %r3522, 14;
	shf.r.wrap.b32 	%r3525, %r3522, %r3523, 14;
	mov.b64 	%rd4704, {%r3525, %r3524};
	shf.r.wrap.b32 	%r3526, %r3523, %r3522, 18;
	shf.r.wrap.b32 	%r3527, %r3522, %r3523, 18;
	mov.b64 	%rd4705, {%r3527, %r3526};
	xor.b64  	%rd4706, %rd4704, %rd4705;
	shf.l.wrap.b32 	%r3528, %r3522, %r3523, 23;
	shf.l.wrap.b32 	%r3529, %r3523, %r3522, 23;
	mov.b64 	%rd4707, {%r3529, %r3528};
	xor.b64  	%rd4708, %rd4706, %rd4707;
	add.s64 	%rd4709, %rd4703, %rd4708;
	add.s64 	%rd4710, %rd4709, -4076793802049405392;
	add.s64 	%rd4711, %rd4710, %rd4574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3530,%dummy}, %rd4685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3531}, %rd4685;
	}
	shf.r.wrap.b32 	%r3532, %r3531, %r3530, 28;
	shf.r.wrap.b32 	%r3533, %r3530, %r3531, 28;
	mov.b64 	%rd4712, {%r3533, %r3532};
	shf.l.wrap.b32 	%r3534, %r3530, %r3531, 30;
	shf.l.wrap.b32 	%r3535, %r3531, %r3530, 30;
	mov.b64 	%rd4713, {%r3535, %r3534};
	xor.b64  	%rd4714, %rd4712, %rd4713;
	shf.l.wrap.b32 	%r3536, %r3530, %r3531, 25;
	shf.l.wrap.b32 	%r3537, %r3531, %r3530, 25;
	mov.b64 	%rd4715, {%r3537, %r3536};
	xor.b64  	%rd4716, %rd4714, %rd4715;
	and.b64  	%rd4717, %rd4685, %rd4648;
	or.b64  	%rd4718, %rd4685, %rd4648;
	and.b64  	%rd4719, %rd4718, %rd4611;
	or.b64  	%rd4720, %rd4719, %rd4717;
	add.s64 	%rd4721, %rd4720, %rd4716;
	add.s64 	%rd4722, %rd4721, %rd4710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3538,%dummy}, %rd4661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3539}, %rd4661;
	}
	shf.r.wrap.b32 	%r3540, %r3539, %r3538, 19;
	shf.r.wrap.b32 	%r3541, %r3538, %r3539, 19;
	mov.b64 	%rd4723, {%r3541, %r3540};
	shf.l.wrap.b32 	%r3542, %r3538, %r3539, 3;
	shf.l.wrap.b32 	%r3543, %r3539, %r3538, 3;
	mov.b64 	%rd4724, {%r3543, %r3542};
	xor.b64  	%rd4725, %rd4723, %rd4724;
	shr.u64 	%rd4726, %rd4661, 6;
	xor.b64  	%rd4727, %rd4725, %rd4726;
	shf.r.wrap.b32 	%r3544, %r3201, %r3200, 1;
	shf.r.wrap.b32 	%r3545, %r3200, %r3201, 1;
	mov.b64 	%rd4728, {%r3545, %r3544};
	shf.r.wrap.b32 	%r3546, %r3201, %r3200, 8;
	shf.r.wrap.b32 	%r3547, %r3200, %r3201, 8;
	mov.b64 	%rd4729, {%r3547, %r3546};
	xor.b64  	%rd4730, %rd4728, %rd4729;
	shr.u64 	%rd4731, %rd4180, 7;
	xor.b64  	%rd4732, %rd4730, %rd4731;
	add.s64 	%rd4733, %rd4732, %rd4143;
	add.s64 	%rd4734, %rd4733, %rd4476;
	add.s64 	%rd4735, %rd4734, %rd4727;
	add.s64 	%rd4736, %rd4735, %rd4600;
	xor.b64  	%rd4737, %rd4674, %rd4637;
	and.b64  	%rd4738, %rd4711, %rd4737;
	xor.b64  	%rd4739, %rd4738, %rd4637;
	add.s64 	%rd4740, %rd4736, %rd4739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3548,%dummy}, %rd4711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3549}, %rd4711;
	}
	shf.r.wrap.b32 	%r3550, %r3549, %r3548, 14;
	shf.r.wrap.b32 	%r3551, %r3548, %r3549, 14;
	mov.b64 	%rd4741, {%r3551, %r3550};
	shf.r.wrap.b32 	%r3552, %r3549, %r3548, 18;
	shf.r.wrap.b32 	%r3553, %r3548, %r3549, 18;
	mov.b64 	%rd4742, {%r3553, %r3552};
	xor.b64  	%rd4743, %rd4741, %rd4742;
	shf.l.wrap.b32 	%r3554, %r3548, %r3549, 23;
	shf.l.wrap.b32 	%r3555, %r3549, %r3548, 23;
	mov.b64 	%rd4744, {%r3555, %r3554};
	xor.b64  	%rd4745, %rd4743, %rd4744;
	add.s64 	%rd4746, %rd4740, %rd4745;
	add.s64 	%rd4747, %rd4746, -3345356375505022440;
	add.s64 	%rd4748, %rd4747, %rd4611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3556,%dummy}, %rd4722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3557}, %rd4722;
	}
	shf.r.wrap.b32 	%r3558, %r3557, %r3556, 28;
	shf.r.wrap.b32 	%r3559, %r3556, %r3557, 28;
	mov.b64 	%rd4749, {%r3559, %r3558};
	shf.l.wrap.b32 	%r3560, %r3556, %r3557, 30;
	shf.l.wrap.b32 	%r3561, %r3557, %r3556, 30;
	mov.b64 	%rd4750, {%r3561, %r3560};
	xor.b64  	%rd4751, %rd4749, %rd4750;
	shf.l.wrap.b32 	%r3562, %r3556, %r3557, 25;
	shf.l.wrap.b32 	%r3563, %r3557, %r3556, 25;
	mov.b64 	%rd4752, {%r3563, %r3562};
	xor.b64  	%rd4753, %rd4751, %rd4752;
	and.b64  	%rd4754, %rd4722, %rd4685;
	or.b64  	%rd4755, %rd4722, %rd4685;
	and.b64  	%rd4756, %rd4755, %rd4648;
	or.b64  	%rd4757, %rd4756, %rd4754;
	add.s64 	%rd4758, %rd4757, %rd4753;
	add.s64 	%rd4759, %rd4758, %rd4747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3564,%dummy}, %rd4698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3565}, %rd4698;
	}
	shf.r.wrap.b32 	%r3566, %r3565, %r3564, 19;
	shf.r.wrap.b32 	%r3567, %r3564, %r3565, 19;
	mov.b64 	%rd4760, {%r3567, %r3566};
	shf.l.wrap.b32 	%r3568, %r3564, %r3565, 3;
	shf.l.wrap.b32 	%r3569, %r3565, %r3564, 3;
	mov.b64 	%rd4761, {%r3569, %r3568};
	xor.b64  	%rd4762, %rd4760, %rd4761;
	shr.u64 	%rd4763, %rd4698, 6;
	xor.b64  	%rd4764, %rd4762, %rd4763;
	shf.r.wrap.b32 	%r3570, %r3227, %r3226, 1;
	shf.r.wrap.b32 	%r3571, %r3226, %r3227, 1;
	mov.b64 	%rd4765, {%r3571, %r3570};
	shf.r.wrap.b32 	%r3572, %r3227, %r3226, 8;
	shf.r.wrap.b32 	%r3573, %r3226, %r3227, 8;
	mov.b64 	%rd4766, {%r3573, %r3572};
	xor.b64  	%rd4767, %rd4765, %rd4766;
	shr.u64 	%rd4768, %rd4217, 7;
	xor.b64  	%rd4769, %rd4767, %rd4768;
	add.s64 	%rd4770, %rd4769, %rd4180;
	add.s64 	%rd4771, %rd4770, %rd4513;
	add.s64 	%rd4772, %rd4771, %rd4764;
	add.s64 	%rd4773, %rd4772, %rd4637;
	xor.b64  	%rd4774, %rd4711, %rd4674;
	and.b64  	%rd4775, %rd4748, %rd4774;
	xor.b64  	%rd4776, %rd4775, %rd4674;
	add.s64 	%rd4777, %rd4773, %rd4776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3574,%dummy}, %rd4748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3575}, %rd4748;
	}
	shf.r.wrap.b32 	%r3576, %r3575, %r3574, 14;
	shf.r.wrap.b32 	%r3577, %r3574, %r3575, 14;
	mov.b64 	%rd4778, {%r3577, %r3576};
	shf.r.wrap.b32 	%r3578, %r3575, %r3574, 18;
	shf.r.wrap.b32 	%r3579, %r3574, %r3575, 18;
	mov.b64 	%rd4779, {%r3579, %r3578};
	xor.b64  	%rd4780, %rd4778, %rd4779;
	shf.l.wrap.b32 	%r3580, %r3574, %r3575, 23;
	shf.l.wrap.b32 	%r3581, %r3575, %r3574, 23;
	mov.b64 	%rd4781, {%r3581, %r3580};
	xor.b64  	%rd4782, %rd4780, %rd4781;
	add.s64 	%rd4783, %rd4777, %rd4782;
	add.s64 	%rd4784, %rd4783, -2983346525034927856;
	add.s64 	%rd4785, %rd4784, %rd4648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3582,%dummy}, %rd4759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3583}, %rd4759;
	}
	shf.r.wrap.b32 	%r3584, %r3583, %r3582, 28;
	shf.r.wrap.b32 	%r3585, %r3582, %r3583, 28;
	mov.b64 	%rd4786, {%r3585, %r3584};
	shf.l.wrap.b32 	%r3586, %r3582, %r3583, 30;
	shf.l.wrap.b32 	%r3587, %r3583, %r3582, 30;
	mov.b64 	%rd4787, {%r3587, %r3586};
	xor.b64  	%rd4788, %rd4786, %rd4787;
	shf.l.wrap.b32 	%r3588, %r3582, %r3583, 25;
	shf.l.wrap.b32 	%r3589, %r3583, %r3582, 25;
	mov.b64 	%rd4789, {%r3589, %r3588};
	xor.b64  	%rd4790, %rd4788, %rd4789;
	and.b64  	%rd4791, %rd4759, %rd4722;
	or.b64  	%rd4792, %rd4759, %rd4722;
	and.b64  	%rd4793, %rd4792, %rd4685;
	or.b64  	%rd4794, %rd4793, %rd4791;
	add.s64 	%rd4795, %rd4794, %rd4790;
	add.s64 	%rd4796, %rd4795, %rd4784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3590,%dummy}, %rd4735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3591}, %rd4735;
	}
	shf.r.wrap.b32 	%r3592, %r3591, %r3590, 19;
	shf.r.wrap.b32 	%r3593, %r3590, %r3591, 19;
	mov.b64 	%rd4797, {%r3593, %r3592};
	shf.l.wrap.b32 	%r3594, %r3590, %r3591, 3;
	shf.l.wrap.b32 	%r3595, %r3591, %r3590, 3;
	mov.b64 	%rd4798, {%r3595, %r3594};
	xor.b64  	%rd4799, %rd4797, %rd4798;
	shr.u64 	%rd4800, %rd4735, 6;
	xor.b64  	%rd4801, %rd4799, %rd4800;
	shf.r.wrap.b32 	%r3596, %r3253, %r3252, 1;
	shf.r.wrap.b32 	%r3597, %r3252, %r3253, 1;
	mov.b64 	%rd4802, {%r3597, %r3596};
	shf.r.wrap.b32 	%r3598, %r3253, %r3252, 8;
	shf.r.wrap.b32 	%r3599, %r3252, %r3253, 8;
	mov.b64 	%rd4803, {%r3599, %r3598};
	xor.b64  	%rd4804, %rd4802, %rd4803;
	shr.u64 	%rd4805, %rd4254, 7;
	xor.b64  	%rd4806, %rd4804, %rd4805;
	add.s64 	%rd4807, %rd4806, %rd4217;
	add.s64 	%rd4808, %rd4807, %rd4550;
	add.s64 	%rd4809, %rd4808, %rd4801;
	add.s64 	%rd4810, %rd4809, %rd4674;
	xor.b64  	%rd4811, %rd4748, %rd4711;
	and.b64  	%rd4812, %rd4785, %rd4811;
	xor.b64  	%rd4813, %rd4812, %rd4711;
	add.s64 	%rd4814, %rd4810, %rd4813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3600,%dummy}, %rd4785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3601}, %rd4785;
	}
	shf.r.wrap.b32 	%r3602, %r3601, %r3600, 14;
	shf.r.wrap.b32 	%r3603, %r3600, %r3601, 14;
	mov.b64 	%rd4815, {%r3603, %r3602};
	shf.r.wrap.b32 	%r3604, %r3601, %r3600, 18;
	shf.r.wrap.b32 	%r3605, %r3600, %r3601, 18;
	mov.b64 	%rd4816, {%r3605, %r3604};
	xor.b64  	%rd4817, %rd4815, %rd4816;
	shf.l.wrap.b32 	%r3606, %r3600, %r3601, 23;
	shf.l.wrap.b32 	%r3607, %r3601, %r3600, 23;
	mov.b64 	%rd4818, {%r3607, %r3606};
	xor.b64  	%rd4819, %rd4817, %rd4818;
	add.s64 	%rd4820, %rd4814, %rd4819;
	add.s64 	%rd4821, %rd4820, -860691631967231958;
	add.s64 	%rd4822, %rd4821, %rd4685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3608,%dummy}, %rd4796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3609}, %rd4796;
	}
	shf.r.wrap.b32 	%r3610, %r3609, %r3608, 28;
	shf.r.wrap.b32 	%r3611, %r3608, %r3609, 28;
	mov.b64 	%rd4823, {%r3611, %r3610};
	shf.l.wrap.b32 	%r3612, %r3608, %r3609, 30;
	shf.l.wrap.b32 	%r3613, %r3609, %r3608, 30;
	mov.b64 	%rd4824, {%r3613, %r3612};
	xor.b64  	%rd4825, %rd4823, %rd4824;
	shf.l.wrap.b32 	%r3614, %r3608, %r3609, 25;
	shf.l.wrap.b32 	%r3615, %r3609, %r3608, 25;
	mov.b64 	%rd4826, {%r3615, %r3614};
	xor.b64  	%rd4827, %rd4825, %rd4826;
	and.b64  	%rd4828, %rd4796, %rd4759;
	or.b64  	%rd4829, %rd4796, %rd4759;
	and.b64  	%rd4830, %rd4829, %rd4722;
	or.b64  	%rd4831, %rd4830, %rd4828;
	add.s64 	%rd4832, %rd4831, %rd4827;
	add.s64 	%rd4833, %rd4832, %rd4821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3616,%dummy}, %rd4772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3617}, %rd4772;
	}
	shf.r.wrap.b32 	%r3618, %r3617, %r3616, 19;
	shf.r.wrap.b32 	%r3619, %r3616, %r3617, 19;
	mov.b64 	%rd4834, {%r3619, %r3618};
	shf.l.wrap.b32 	%r3620, %r3616, %r3617, 3;
	shf.l.wrap.b32 	%r3621, %r3617, %r3616, 3;
	mov.b64 	%rd4835, {%r3621, %r3620};
	xor.b64  	%rd4836, %rd4834, %rd4835;
	shr.u64 	%rd4837, %rd4772, 6;
	xor.b64  	%rd4838, %rd4836, %rd4837;
	shf.r.wrap.b32 	%r3622, %r3279, %r3278, 1;
	shf.r.wrap.b32 	%r3623, %r3278, %r3279, 1;
	mov.b64 	%rd4839, {%r3623, %r3622};
	shf.r.wrap.b32 	%r3624, %r3279, %r3278, 8;
	shf.r.wrap.b32 	%r3625, %r3278, %r3279, 8;
	mov.b64 	%rd4840, {%r3625, %r3624};
	xor.b64  	%rd4841, %rd4839, %rd4840;
	shr.u64 	%rd4842, %rd4291, 7;
	xor.b64  	%rd4843, %rd4841, %rd4842;
	add.s64 	%rd4844, %rd4843, %rd4254;
	add.s64 	%rd4845, %rd4844, %rd4587;
	add.s64 	%rd4846, %rd4845, %rd4838;
	add.s64 	%rd4847, %rd4846, %rd4711;
	xor.b64  	%rd4848, %rd4785, %rd4748;
	and.b64  	%rd4849, %rd4822, %rd4848;
	xor.b64  	%rd4850, %rd4849, %rd4748;
	add.s64 	%rd4851, %rd4847, %rd4850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3626,%dummy}, %rd4822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3627}, %rd4822;
	}
	shf.r.wrap.b32 	%r3628, %r3627, %r3626, 14;
	shf.r.wrap.b32 	%r3629, %r3626, %r3627, 14;
	mov.b64 	%rd4852, {%r3629, %r3628};
	shf.r.wrap.b32 	%r3630, %r3627, %r3626, 18;
	shf.r.wrap.b32 	%r3631, %r3626, %r3627, 18;
	mov.b64 	%rd4853, {%r3631, %r3630};
	xor.b64  	%rd4854, %rd4852, %rd4853;
	shf.l.wrap.b32 	%r3632, %r3626, %r3627, 23;
	shf.l.wrap.b32 	%r3633, %r3627, %r3626, 23;
	mov.b64 	%rd4855, {%r3633, %r3632};
	xor.b64  	%rd4856, %rd4854, %rd4855;
	add.s64 	%rd4857, %rd4851, %rd4856;
	add.s64 	%rd4858, %rd4857, 1182934255886127544;
	add.s64 	%rd4859, %rd4858, %rd4722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3634,%dummy}, %rd4833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3635}, %rd4833;
	}
	shf.r.wrap.b32 	%r3636, %r3635, %r3634, 28;
	shf.r.wrap.b32 	%r3637, %r3634, %r3635, 28;
	mov.b64 	%rd4860, {%r3637, %r3636};
	shf.l.wrap.b32 	%r3638, %r3634, %r3635, 30;
	shf.l.wrap.b32 	%r3639, %r3635, %r3634, 30;
	mov.b64 	%rd4861, {%r3639, %r3638};
	xor.b64  	%rd4862, %rd4860, %rd4861;
	shf.l.wrap.b32 	%r3640, %r3634, %r3635, 25;
	shf.l.wrap.b32 	%r3641, %r3635, %r3634, 25;
	mov.b64 	%rd4863, {%r3641, %r3640};
	xor.b64  	%rd4864, %rd4862, %rd4863;
	and.b64  	%rd4865, %rd4833, %rd4796;
	or.b64  	%rd4866, %rd4833, %rd4796;
	and.b64  	%rd4867, %rd4866, %rd4759;
	or.b64  	%rd4868, %rd4867, %rd4865;
	add.s64 	%rd4869, %rd4868, %rd4864;
	add.s64 	%rd4870, %rd4869, %rd4858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3642,%dummy}, %rd4809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3643}, %rd4809;
	}
	shf.r.wrap.b32 	%r3644, %r3643, %r3642, 19;
	shf.r.wrap.b32 	%r3645, %r3642, %r3643, 19;
	mov.b64 	%rd4871, {%r3645, %r3644};
	shf.l.wrap.b32 	%r3646, %r3642, %r3643, 3;
	shf.l.wrap.b32 	%r3647, %r3643, %r3642, 3;
	mov.b64 	%rd4872, {%r3647, %r3646};
	xor.b64  	%rd4873, %rd4871, %rd4872;
	shr.u64 	%rd4874, %rd4809, 6;
	xor.b64  	%rd4875, %rd4873, %rd4874;
	shf.r.wrap.b32 	%r3648, %r3305, %r3304, 1;
	shf.r.wrap.b32 	%r3649, %r3304, %r3305, 1;
	mov.b64 	%rd4876, {%r3649, %r3648};
	shf.r.wrap.b32 	%r3650, %r3305, %r3304, 8;
	shf.r.wrap.b32 	%r3651, %r3304, %r3305, 8;
	mov.b64 	%rd4877, {%r3651, %r3650};
	xor.b64  	%rd4878, %rd4876, %rd4877;
	shr.u64 	%rd4879, %rd4328, 7;
	xor.b64  	%rd4880, %rd4878, %rd4879;
	add.s64 	%rd4881, %rd4880, %rd4291;
	add.s64 	%rd4882, %rd4881, %rd4624;
	add.s64 	%rd4883, %rd4882, %rd4875;
	add.s64 	%rd4884, %rd4883, %rd4748;
	xor.b64  	%rd4885, %rd4822, %rd4785;
	and.b64  	%rd4886, %rd4859, %rd4885;
	xor.b64  	%rd4887, %rd4886, %rd4785;
	add.s64 	%rd4888, %rd4884, %rd4887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3652,%dummy}, %rd4859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3653}, %rd4859;
	}
	shf.r.wrap.b32 	%r3654, %r3653, %r3652, 14;
	shf.r.wrap.b32 	%r3655, %r3652, %r3653, 14;
	mov.b64 	%rd4889, {%r3655, %r3654};
	shf.r.wrap.b32 	%r3656, %r3653, %r3652, 18;
	shf.r.wrap.b32 	%r3657, %r3652, %r3653, 18;
	mov.b64 	%rd4890, {%r3657, %r3656};
	xor.b64  	%rd4891, %rd4889, %rd4890;
	shf.l.wrap.b32 	%r3658, %r3652, %r3653, 23;
	shf.l.wrap.b32 	%r3659, %r3653, %r3652, 23;
	mov.b64 	%rd4892, {%r3659, %r3658};
	xor.b64  	%rd4893, %rd4891, %rd4892;
	add.s64 	%rd4894, %rd4888, %rd4893;
	add.s64 	%rd4895, %rd4894, 1847814050463011016;
	add.s64 	%rd4896, %rd4895, %rd4759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3660,%dummy}, %rd4870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3661}, %rd4870;
	}
	shf.r.wrap.b32 	%r3662, %r3661, %r3660, 28;
	shf.r.wrap.b32 	%r3663, %r3660, %r3661, 28;
	mov.b64 	%rd4897, {%r3663, %r3662};
	shf.l.wrap.b32 	%r3664, %r3660, %r3661, 30;
	shf.l.wrap.b32 	%r3665, %r3661, %r3660, 30;
	mov.b64 	%rd4898, {%r3665, %r3664};
	xor.b64  	%rd4899, %rd4897, %rd4898;
	shf.l.wrap.b32 	%r3666, %r3660, %r3661, 25;
	shf.l.wrap.b32 	%r3667, %r3661, %r3660, 25;
	mov.b64 	%rd4900, {%r3667, %r3666};
	xor.b64  	%rd4901, %rd4899, %rd4900;
	and.b64  	%rd4902, %rd4870, %rd4833;
	or.b64  	%rd4903, %rd4870, %rd4833;
	and.b64  	%rd4904, %rd4903, %rd4796;
	or.b64  	%rd4905, %rd4904, %rd4902;
	add.s64 	%rd4906, %rd4905, %rd4901;
	add.s64 	%rd4907, %rd4906, %rd4895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3668,%dummy}, %rd4846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3669}, %rd4846;
	}
	shf.r.wrap.b32 	%r3670, %r3669, %r3668, 19;
	shf.r.wrap.b32 	%r3671, %r3668, %r3669, 19;
	mov.b64 	%rd4908, {%r3671, %r3670};
	shf.l.wrap.b32 	%r3672, %r3668, %r3669, 3;
	shf.l.wrap.b32 	%r3673, %r3669, %r3668, 3;
	mov.b64 	%rd4909, {%r3673, %r3672};
	xor.b64  	%rd4910, %rd4908, %rd4909;
	shr.u64 	%rd4911, %rd4846, 6;
	xor.b64  	%rd4912, %rd4910, %rd4911;
	shf.r.wrap.b32 	%r3674, %r3331, %r3330, 1;
	shf.r.wrap.b32 	%r3675, %r3330, %r3331, 1;
	mov.b64 	%rd4913, {%r3675, %r3674};
	shf.r.wrap.b32 	%r3676, %r3331, %r3330, 8;
	shf.r.wrap.b32 	%r3677, %r3330, %r3331, 8;
	mov.b64 	%rd4914, {%r3677, %r3676};
	xor.b64  	%rd4915, %rd4913, %rd4914;
	shr.u64 	%rd4916, %rd4365, 7;
	xor.b64  	%rd4917, %rd4915, %rd4916;
	add.s64 	%rd4918, %rd4917, %rd4328;
	add.s64 	%rd4919, %rd4918, %rd4661;
	add.s64 	%rd4920, %rd4919, %rd4912;
	add.s64 	%rd4921, %rd4920, %rd4785;
	xor.b64  	%rd4922, %rd4859, %rd4822;
	and.b64  	%rd4923, %rd4896, %rd4922;
	xor.b64  	%rd4924, %rd4923, %rd4822;
	add.s64 	%rd4925, %rd4921, %rd4924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3678,%dummy}, %rd4896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3679}, %rd4896;
	}
	shf.r.wrap.b32 	%r3680, %r3679, %r3678, 14;
	shf.r.wrap.b32 	%r3681, %r3678, %r3679, 14;
	mov.b64 	%rd4926, {%r3681, %r3680};
	shf.r.wrap.b32 	%r3682, %r3679, %r3678, 18;
	shf.r.wrap.b32 	%r3683, %r3678, %r3679, 18;
	mov.b64 	%rd4927, {%r3683, %r3682};
	xor.b64  	%rd4928, %rd4926, %rd4927;
	shf.l.wrap.b32 	%r3684, %r3678, %r3679, 23;
	shf.l.wrap.b32 	%r3685, %r3679, %r3678, 23;
	mov.b64 	%rd4929, {%r3685, %r3684};
	xor.b64  	%rd4930, %rd4928, %rd4929;
	add.s64 	%rd4931, %rd4925, %rd4930;
	add.s64 	%rd4932, %rd4931, 2177327727835720531;
	add.s64 	%rd4933, %rd4932, %rd4796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3686,%dummy}, %rd4907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3687}, %rd4907;
	}
	shf.r.wrap.b32 	%r3688, %r3687, %r3686, 28;
	shf.r.wrap.b32 	%r3689, %r3686, %r3687, 28;
	mov.b64 	%rd4934, {%r3689, %r3688};
	shf.l.wrap.b32 	%r3690, %r3686, %r3687, 30;
	shf.l.wrap.b32 	%r3691, %r3687, %r3686, 30;
	mov.b64 	%rd4935, {%r3691, %r3690};
	xor.b64  	%rd4936, %rd4934, %rd4935;
	shf.l.wrap.b32 	%r3692, %r3686, %r3687, 25;
	shf.l.wrap.b32 	%r3693, %r3687, %r3686, 25;
	mov.b64 	%rd4937, {%r3693, %r3692};
	xor.b64  	%rd4938, %rd4936, %rd4937;
	and.b64  	%rd4939, %rd4907, %rd4870;
	or.b64  	%rd4940, %rd4907, %rd4870;
	and.b64  	%rd4941, %rd4940, %rd4833;
	or.b64  	%rd4942, %rd4941, %rd4939;
	add.s64 	%rd4943, %rd4942, %rd4938;
	add.s64 	%rd4944, %rd4943, %rd4932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3694,%dummy}, %rd4883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3695}, %rd4883;
	}
	shf.r.wrap.b32 	%r3696, %r3695, %r3694, 19;
	shf.r.wrap.b32 	%r3697, %r3694, %r3695, 19;
	mov.b64 	%rd4945, {%r3697, %r3696};
	shf.l.wrap.b32 	%r3698, %r3694, %r3695, 3;
	shf.l.wrap.b32 	%r3699, %r3695, %r3694, 3;
	mov.b64 	%rd4946, {%r3699, %r3698};
	xor.b64  	%rd4947, %rd4945, %rd4946;
	shr.u64 	%rd4948, %rd4883, 6;
	xor.b64  	%rd4949, %rd4947, %rd4948;
	shf.r.wrap.b32 	%r3700, %r3357, %r3356, 1;
	shf.r.wrap.b32 	%r3701, %r3356, %r3357, 1;
	mov.b64 	%rd4950, {%r3701, %r3700};
	shf.r.wrap.b32 	%r3702, %r3357, %r3356, 8;
	shf.r.wrap.b32 	%r3703, %r3356, %r3357, 8;
	mov.b64 	%rd4951, {%r3703, %r3702};
	xor.b64  	%rd4952, %rd4950, %rd4951;
	shr.u64 	%rd4953, %rd4402, 7;
	xor.b64  	%rd4954, %rd4952, %rd4953;
	add.s64 	%rd4955, %rd4954, %rd4365;
	add.s64 	%rd4956, %rd4955, %rd4698;
	add.s64 	%rd4957, %rd4956, %rd4949;
	add.s64 	%rd4958, %rd4957, %rd4822;
	xor.b64  	%rd4959, %rd4896, %rd4859;
	and.b64  	%rd4960, %rd4933, %rd4959;
	xor.b64  	%rd4961, %rd4960, %rd4859;
	add.s64 	%rd4962, %rd4958, %rd4961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3704,%dummy}, %rd4933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3705}, %rd4933;
	}
	shf.r.wrap.b32 	%r3706, %r3705, %r3704, 14;
	shf.r.wrap.b32 	%r3707, %r3704, %r3705, 14;
	mov.b64 	%rd4963, {%r3707, %r3706};
	shf.r.wrap.b32 	%r3708, %r3705, %r3704, 18;
	shf.r.wrap.b32 	%r3709, %r3704, %r3705, 18;
	mov.b64 	%rd4964, {%r3709, %r3708};
	xor.b64  	%rd4965, %rd4963, %rd4964;
	shf.l.wrap.b32 	%r3710, %r3704, %r3705, 23;
	shf.l.wrap.b32 	%r3711, %r3705, %r3704, 23;
	mov.b64 	%rd4966, {%r3711, %r3710};
	xor.b64  	%rd4967, %rd4965, %rd4966;
	add.s64 	%rd4968, %rd4962, %rd4967;
	add.s64 	%rd4969, %rd4968, 2830643537854262169;
	add.s64 	%rd4970, %rd4969, %rd4833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3712,%dummy}, %rd4944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3713}, %rd4944;
	}
	shf.r.wrap.b32 	%r3714, %r3713, %r3712, 28;
	shf.r.wrap.b32 	%r3715, %r3712, %r3713, 28;
	mov.b64 	%rd4971, {%r3715, %r3714};
	shf.l.wrap.b32 	%r3716, %r3712, %r3713, 30;
	shf.l.wrap.b32 	%r3717, %r3713, %r3712, 30;
	mov.b64 	%rd4972, {%r3717, %r3716};
	xor.b64  	%rd4973, %rd4971, %rd4972;
	shf.l.wrap.b32 	%r3718, %r3712, %r3713, 25;
	shf.l.wrap.b32 	%r3719, %r3713, %r3712, 25;
	mov.b64 	%rd4974, {%r3719, %r3718};
	xor.b64  	%rd4975, %rd4973, %rd4974;
	and.b64  	%rd4976, %rd4944, %rd4907;
	or.b64  	%rd4977, %rd4944, %rd4907;
	and.b64  	%rd4978, %rd4977, %rd4870;
	or.b64  	%rd4979, %rd4978, %rd4976;
	add.s64 	%rd4980, %rd4979, %rd4975;
	add.s64 	%rd4981, %rd4980, %rd4969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3720,%dummy}, %rd4920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3721}, %rd4920;
	}
	shf.r.wrap.b32 	%r3722, %r3721, %r3720, 19;
	shf.r.wrap.b32 	%r3723, %r3720, %r3721, 19;
	mov.b64 	%rd4982, {%r3723, %r3722};
	shf.l.wrap.b32 	%r3724, %r3720, %r3721, 3;
	shf.l.wrap.b32 	%r3725, %r3721, %r3720, 3;
	mov.b64 	%rd4983, {%r3725, %r3724};
	xor.b64  	%rd4984, %rd4982, %rd4983;
	shr.u64 	%rd4985, %rd4920, 6;
	xor.b64  	%rd4986, %rd4984, %rd4985;
	shf.r.wrap.b32 	%r3726, %r3383, %r3382, 1;
	shf.r.wrap.b32 	%r3727, %r3382, %r3383, 1;
	mov.b64 	%rd4987, {%r3727, %r3726};
	shf.r.wrap.b32 	%r3728, %r3383, %r3382, 8;
	shf.r.wrap.b32 	%r3729, %r3382, %r3383, 8;
	mov.b64 	%rd4988, {%r3729, %r3728};
	xor.b64  	%rd4989, %rd4987, %rd4988;
	shr.u64 	%rd4990, %rd4439, 7;
	xor.b64  	%rd4991, %rd4989, %rd4990;
	add.s64 	%rd4992, %rd4991, %rd4402;
	add.s64 	%rd4993, %rd4992, %rd4735;
	add.s64 	%rd4994, %rd4993, %rd4986;
	add.s64 	%rd4995, %rd4994, %rd4859;
	xor.b64  	%rd4996, %rd4933, %rd4896;
	and.b64  	%rd4997, %rd4970, %rd4996;
	xor.b64  	%rd4998, %rd4997, %rd4896;
	add.s64 	%rd4999, %rd4995, %rd4998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd4970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3731}, %rd4970;
	}
	shf.r.wrap.b32 	%r3732, %r3731, %r3730, 14;
	shf.r.wrap.b32 	%r3733, %r3730, %r3731, 14;
	mov.b64 	%rd5000, {%r3733, %r3732};
	shf.r.wrap.b32 	%r3734, %r3731, %r3730, 18;
	shf.r.wrap.b32 	%r3735, %r3730, %r3731, 18;
	mov.b64 	%rd5001, {%r3735, %r3734};
	xor.b64  	%rd5002, %rd5000, %rd5001;
	shf.l.wrap.b32 	%r3736, %r3730, %r3731, 23;
	shf.l.wrap.b32 	%r3737, %r3731, %r3730, 23;
	mov.b64 	%rd5003, {%r3737, %r3736};
	xor.b64  	%rd5004, %rd5002, %rd5003;
	add.s64 	%rd5005, %rd4999, %rd5004;
	add.s64 	%rd5006, %rd5005, 3796741975233480872;
	add.s64 	%rd5007, %rd5006, %rd4870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3738,%dummy}, %rd4981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3739}, %rd4981;
	}
	shf.r.wrap.b32 	%r3740, %r3739, %r3738, 28;
	shf.r.wrap.b32 	%r3741, %r3738, %r3739, 28;
	mov.b64 	%rd5008, {%r3741, %r3740};
	shf.l.wrap.b32 	%r3742, %r3738, %r3739, 30;
	shf.l.wrap.b32 	%r3743, %r3739, %r3738, 30;
	mov.b64 	%rd5009, {%r3743, %r3742};
	xor.b64  	%rd5010, %rd5008, %rd5009;
	shf.l.wrap.b32 	%r3744, %r3738, %r3739, 25;
	shf.l.wrap.b32 	%r3745, %r3739, %r3738, 25;
	mov.b64 	%rd5011, {%r3745, %r3744};
	xor.b64  	%rd5012, %rd5010, %rd5011;
	and.b64  	%rd5013, %rd4981, %rd4944;
	or.b64  	%rd5014, %rd4981, %rd4944;
	and.b64  	%rd5015, %rd5014, %rd4907;
	or.b64  	%rd5016, %rd5015, %rd5013;
	add.s64 	%rd5017, %rd5016, %rd5012;
	add.s64 	%rd5018, %rd5017, %rd5006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3746,%dummy}, %rd4957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3747}, %rd4957;
	}
	shf.r.wrap.b32 	%r3748, %r3747, %r3746, 19;
	shf.r.wrap.b32 	%r3749, %r3746, %r3747, 19;
	mov.b64 	%rd5019, {%r3749, %r3748};
	shf.l.wrap.b32 	%r3750, %r3746, %r3747, 3;
	shf.l.wrap.b32 	%r3751, %r3747, %r3746, 3;
	mov.b64 	%rd5020, {%r3751, %r3750};
	xor.b64  	%rd5021, %rd5019, %rd5020;
	shr.u64 	%rd5022, %rd4957, 6;
	xor.b64  	%rd5023, %rd5021, %rd5022;
	shf.r.wrap.b32 	%r3752, %r3409, %r3408, 1;
	shf.r.wrap.b32 	%r3753, %r3408, %r3409, 1;
	mov.b64 	%rd5024, {%r3753, %r3752};
	shf.r.wrap.b32 	%r3754, %r3409, %r3408, 8;
	shf.r.wrap.b32 	%r3755, %r3408, %r3409, 8;
	mov.b64 	%rd5025, {%r3755, %r3754};
	xor.b64  	%rd5026, %rd5024, %rd5025;
	shr.u64 	%rd5027, %rd4476, 7;
	xor.b64  	%rd5028, %rd5026, %rd5027;
	add.s64 	%rd5029, %rd5028, %rd4439;
	add.s64 	%rd5030, %rd5029, %rd4772;
	add.s64 	%rd5031, %rd5030, %rd5023;
	add.s64 	%rd5032, %rd5031, %rd4896;
	xor.b64  	%rd5033, %rd4970, %rd4933;
	and.b64  	%rd5034, %rd5007, %rd5033;
	xor.b64  	%rd5035, %rd5034, %rd4933;
	add.s64 	%rd5036, %rd5032, %rd5035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3756,%dummy}, %rd5007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3757}, %rd5007;
	}
	shf.r.wrap.b32 	%r3758, %r3757, %r3756, 14;
	shf.r.wrap.b32 	%r3759, %r3756, %r3757, 14;
	mov.b64 	%rd5037, {%r3759, %r3758};
	shf.r.wrap.b32 	%r3760, %r3757, %r3756, 18;
	shf.r.wrap.b32 	%r3761, %r3756, %r3757, 18;
	mov.b64 	%rd5038, {%r3761, %r3760};
	xor.b64  	%rd5039, %rd5037, %rd5038;
	shf.l.wrap.b32 	%r3762, %r3756, %r3757, 23;
	shf.l.wrap.b32 	%r3763, %r3757, %r3756, 23;
	mov.b64 	%rd5040, {%r3763, %r3762};
	xor.b64  	%rd5041, %rd5039, %rd5040;
	add.s64 	%rd5042, %rd5036, %rd5041;
	add.s64 	%rd5043, %rd5042, 4115178125766777443;
	add.s64 	%rd5044, %rd5043, %rd4907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3764,%dummy}, %rd5018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3765}, %rd5018;
	}
	shf.r.wrap.b32 	%r3766, %r3765, %r3764, 28;
	shf.r.wrap.b32 	%r3767, %r3764, %r3765, 28;
	mov.b64 	%rd5045, {%r3767, %r3766};
	shf.l.wrap.b32 	%r3768, %r3764, %r3765, 30;
	shf.l.wrap.b32 	%r3769, %r3765, %r3764, 30;
	mov.b64 	%rd5046, {%r3769, %r3768};
	xor.b64  	%rd5047, %rd5045, %rd5046;
	shf.l.wrap.b32 	%r3770, %r3764, %r3765, 25;
	shf.l.wrap.b32 	%r3771, %r3765, %r3764, 25;
	mov.b64 	%rd5048, {%r3771, %r3770};
	xor.b64  	%rd5049, %rd5047, %rd5048;
	and.b64  	%rd5050, %rd5018, %rd4981;
	or.b64  	%rd5051, %rd5018, %rd4981;
	and.b64  	%rd5052, %rd5051, %rd4944;
	or.b64  	%rd5053, %rd5052, %rd5050;
	add.s64 	%rd5054, %rd5053, %rd5049;
	add.s64 	%rd5055, %rd5054, %rd5043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3772,%dummy}, %rd4994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3773}, %rd4994;
	}
	shf.r.wrap.b32 	%r3774, %r3773, %r3772, 19;
	shf.r.wrap.b32 	%r3775, %r3772, %r3773, 19;
	mov.b64 	%rd5056, {%r3775, %r3774};
	shf.l.wrap.b32 	%r3776, %r3772, %r3773, 3;
	shf.l.wrap.b32 	%r3777, %r3773, %r3772, 3;
	mov.b64 	%rd5057, {%r3777, %r3776};
	xor.b64  	%rd5058, %rd5056, %rd5057;
	shr.u64 	%rd5059, %rd4994, 6;
	xor.b64  	%rd5060, %rd5058, %rd5059;
	shf.r.wrap.b32 	%r3778, %r3435, %r3434, 1;
	shf.r.wrap.b32 	%r3779, %r3434, %r3435, 1;
	mov.b64 	%rd5061, {%r3779, %r3778};
	shf.r.wrap.b32 	%r3780, %r3435, %r3434, 8;
	shf.r.wrap.b32 	%r3781, %r3434, %r3435, 8;
	mov.b64 	%rd5062, {%r3781, %r3780};
	xor.b64  	%rd5063, %rd5061, %rd5062;
	shr.u64 	%rd5064, %rd4513, 7;
	xor.b64  	%rd5065, %rd5063, %rd5064;
	add.s64 	%rd5066, %rd5065, %rd4476;
	add.s64 	%rd5067, %rd5066, %rd4809;
	add.s64 	%rd5068, %rd5067, %rd5060;
	add.s64 	%rd5069, %rd5068, %rd4933;
	xor.b64  	%rd5070, %rd5007, %rd4970;
	and.b64  	%rd5071, %rd5044, %rd5070;
	xor.b64  	%rd5072, %rd5071, %rd4970;
	add.s64 	%rd5073, %rd5069, %rd5072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3782,%dummy}, %rd5044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3783}, %rd5044;
	}
	shf.r.wrap.b32 	%r3784, %r3783, %r3782, 14;
	shf.r.wrap.b32 	%r3785, %r3782, %r3783, 14;
	mov.b64 	%rd5074, {%r3785, %r3784};
	shf.r.wrap.b32 	%r3786, %r3783, %r3782, 18;
	shf.r.wrap.b32 	%r3787, %r3782, %r3783, 18;
	mov.b64 	%rd5075, {%r3787, %r3786};
	xor.b64  	%rd5076, %rd5074, %rd5075;
	shf.l.wrap.b32 	%r3788, %r3782, %r3783, 23;
	shf.l.wrap.b32 	%r3789, %r3783, %r3782, 23;
	mov.b64 	%rd5077, {%r3789, %r3788};
	xor.b64  	%rd5078, %rd5076, %rd5077;
	add.s64 	%rd5079, %rd5073, %rd5078;
	add.s64 	%rd5080, %rd5079, 5681478168544905931;
	add.s64 	%rd5081, %rd5080, %rd4944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3790,%dummy}, %rd5055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3791}, %rd5055;
	}
	shf.r.wrap.b32 	%r3792, %r3791, %r3790, 28;
	shf.r.wrap.b32 	%r3793, %r3790, %r3791, 28;
	mov.b64 	%rd5082, {%r3793, %r3792};
	shf.l.wrap.b32 	%r3794, %r3790, %r3791, 30;
	shf.l.wrap.b32 	%r3795, %r3791, %r3790, 30;
	mov.b64 	%rd5083, {%r3795, %r3794};
	xor.b64  	%rd5084, %rd5082, %rd5083;
	shf.l.wrap.b32 	%r3796, %r3790, %r3791, 25;
	shf.l.wrap.b32 	%r3797, %r3791, %r3790, 25;
	mov.b64 	%rd5085, {%r3797, %r3796};
	xor.b64  	%rd5086, %rd5084, %rd5085;
	and.b64  	%rd5087, %rd5055, %rd5018;
	or.b64  	%rd5088, %rd5055, %rd5018;
	and.b64  	%rd5089, %rd5088, %rd4981;
	or.b64  	%rd5090, %rd5089, %rd5087;
	add.s64 	%rd5091, %rd5090, %rd5086;
	add.s64 	%rd5092, %rd5091, %rd5080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3798,%dummy}, %rd5031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3799}, %rd5031;
	}
	shf.r.wrap.b32 	%r3800, %r3799, %r3798, 19;
	shf.r.wrap.b32 	%r3801, %r3798, %r3799, 19;
	mov.b64 	%rd5093, {%r3801, %r3800};
	shf.l.wrap.b32 	%r3802, %r3798, %r3799, 3;
	shf.l.wrap.b32 	%r3803, %r3799, %r3798, 3;
	mov.b64 	%rd5094, {%r3803, %r3802};
	xor.b64  	%rd5095, %rd5093, %rd5094;
	shr.u64 	%rd5096, %rd5031, 6;
	xor.b64  	%rd5097, %rd5095, %rd5096;
	shf.r.wrap.b32 	%r3804, %r3461, %r3460, 1;
	shf.r.wrap.b32 	%r3805, %r3460, %r3461, 1;
	mov.b64 	%rd5098, {%r3805, %r3804};
	shf.r.wrap.b32 	%r3806, %r3461, %r3460, 8;
	shf.r.wrap.b32 	%r3807, %r3460, %r3461, 8;
	mov.b64 	%rd5099, {%r3807, %r3806};
	xor.b64  	%rd5100, %rd5098, %rd5099;
	shr.u64 	%rd5101, %rd4550, 7;
	xor.b64  	%rd5102, %rd5100, %rd5101;
	add.s64 	%rd5103, %rd5102, %rd4513;
	add.s64 	%rd5104, %rd5103, %rd4846;
	add.s64 	%rd5105, %rd5104, %rd5097;
	add.s64 	%rd5106, %rd5105, %rd4970;
	xor.b64  	%rd5107, %rd5044, %rd5007;
	and.b64  	%rd5108, %rd5081, %rd5107;
	xor.b64  	%rd5109, %rd5108, %rd5007;
	add.s64 	%rd5110, %rd5106, %rd5109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3808,%dummy}, %rd5081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3809}, %rd5081;
	}
	shf.r.wrap.b32 	%r3810, %r3809, %r3808, 14;
	shf.r.wrap.b32 	%r3811, %r3808, %r3809, 14;
	mov.b64 	%rd5111, {%r3811, %r3810};
	shf.r.wrap.b32 	%r3812, %r3809, %r3808, 18;
	shf.r.wrap.b32 	%r3813, %r3808, %r3809, 18;
	mov.b64 	%rd5112, {%r3813, %r3812};
	xor.b64  	%rd5113, %rd5111, %rd5112;
	shf.l.wrap.b32 	%r3814, %r3808, %r3809, 23;
	shf.l.wrap.b32 	%r3815, %r3809, %r3808, 23;
	mov.b64 	%rd5114, {%r3815, %r3814};
	xor.b64  	%rd5115, %rd5113, %rd5114;
	add.s64 	%rd5116, %rd5110, %rd5115;
	add.s64 	%rd5117, %rd5116, 6601373596472566643;
	add.s64 	%rd5118, %rd5117, %rd4981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3816,%dummy}, %rd5092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3817}, %rd5092;
	}
	shf.r.wrap.b32 	%r3818, %r3817, %r3816, 28;
	shf.r.wrap.b32 	%r3819, %r3816, %r3817, 28;
	mov.b64 	%rd5119, {%r3819, %r3818};
	shf.l.wrap.b32 	%r3820, %r3816, %r3817, 30;
	shf.l.wrap.b32 	%r3821, %r3817, %r3816, 30;
	mov.b64 	%rd5120, {%r3821, %r3820};
	xor.b64  	%rd5121, %rd5119, %rd5120;
	shf.l.wrap.b32 	%r3822, %r3816, %r3817, 25;
	shf.l.wrap.b32 	%r3823, %r3817, %r3816, 25;
	mov.b64 	%rd5122, {%r3823, %r3822};
	xor.b64  	%rd5123, %rd5121, %rd5122;
	and.b64  	%rd5124, %rd5092, %rd5055;
	or.b64  	%rd5125, %rd5092, %rd5055;
	and.b64  	%rd5126, %rd5125, %rd5018;
	or.b64  	%rd5127, %rd5126, %rd5124;
	add.s64 	%rd5128, %rd5127, %rd5123;
	add.s64 	%rd5129, %rd5128, %rd5117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3824,%dummy}, %rd5068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3825}, %rd5068;
	}
	shf.r.wrap.b32 	%r3826, %r3825, %r3824, 19;
	shf.r.wrap.b32 	%r3827, %r3824, %r3825, 19;
	mov.b64 	%rd5130, {%r3827, %r3826};
	shf.l.wrap.b32 	%r3828, %r3824, %r3825, 3;
	shf.l.wrap.b32 	%r3829, %r3825, %r3824, 3;
	mov.b64 	%rd5131, {%r3829, %r3828};
	xor.b64  	%rd5132, %rd5130, %rd5131;
	shr.u64 	%rd5133, %rd5068, 6;
	xor.b64  	%rd5134, %rd5132, %rd5133;
	shf.r.wrap.b32 	%r3830, %r3487, %r3486, 1;
	shf.r.wrap.b32 	%r3831, %r3486, %r3487, 1;
	mov.b64 	%rd5135, {%r3831, %r3830};
	shf.r.wrap.b32 	%r3832, %r3487, %r3486, 8;
	shf.r.wrap.b32 	%r3833, %r3486, %r3487, 8;
	mov.b64 	%rd5136, {%r3833, %r3832};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	shr.u64 	%rd5138, %rd4587, 7;
	xor.b64  	%rd5139, %rd5137, %rd5138;
	add.s64 	%rd5140, %rd5139, %rd4550;
	add.s64 	%rd5141, %rd5140, %rd4883;
	add.s64 	%rd5142, %rd5141, %rd5134;
	add.s64 	%rd5143, %rd5142, %rd5007;
	xor.b64  	%rd5144, %rd5081, %rd5044;
	and.b64  	%rd5145, %rd5118, %rd5144;
	xor.b64  	%rd5146, %rd5145, %rd5044;
	add.s64 	%rd5147, %rd5143, %rd5146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3834,%dummy}, %rd5118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3835}, %rd5118;
	}
	shf.r.wrap.b32 	%r3836, %r3835, %r3834, 14;
	shf.r.wrap.b32 	%r3837, %r3834, %r3835, 14;
	mov.b64 	%rd5148, {%r3837, %r3836};
	shf.r.wrap.b32 	%r3838, %r3835, %r3834, 18;
	shf.r.wrap.b32 	%r3839, %r3834, %r3835, 18;
	mov.b64 	%rd5149, {%r3839, %r3838};
	xor.b64  	%rd5150, %rd5148, %rd5149;
	shf.l.wrap.b32 	%r3840, %r3834, %r3835, 23;
	shf.l.wrap.b32 	%r3841, %r3835, %r3834, 23;
	mov.b64 	%rd5151, {%r3841, %r3840};
	xor.b64  	%rd5152, %rd5150, %rd5151;
	add.s64 	%rd5153, %rd5147, %rd5152;
	add.s64 	%rd5154, %rd5153, 7507060721942968483;
	add.s64 	%rd5155, %rd5154, %rd5018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3842,%dummy}, %rd5129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3843}, %rd5129;
	}
	shf.r.wrap.b32 	%r3844, %r3843, %r3842, 28;
	shf.r.wrap.b32 	%r3845, %r3842, %r3843, 28;
	mov.b64 	%rd5156, {%r3845, %r3844};
	shf.l.wrap.b32 	%r3846, %r3842, %r3843, 30;
	shf.l.wrap.b32 	%r3847, %r3843, %r3842, 30;
	mov.b64 	%rd5157, {%r3847, %r3846};
	xor.b64  	%rd5158, %rd5156, %rd5157;
	shf.l.wrap.b32 	%r3848, %r3842, %r3843, 25;
	shf.l.wrap.b32 	%r3849, %r3843, %r3842, 25;
	mov.b64 	%rd5159, {%r3849, %r3848};
	xor.b64  	%rd5160, %rd5158, %rd5159;
	and.b64  	%rd5161, %rd5129, %rd5092;
	or.b64  	%rd5162, %rd5129, %rd5092;
	and.b64  	%rd5163, %rd5162, %rd5055;
	or.b64  	%rd5164, %rd5163, %rd5161;
	add.s64 	%rd5165, %rd5164, %rd5160;
	add.s64 	%rd5166, %rd5165, %rd5154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3850,%dummy}, %rd5105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3851}, %rd5105;
	}
	shf.r.wrap.b32 	%r3852, %r3851, %r3850, 19;
	shf.r.wrap.b32 	%r3853, %r3850, %r3851, 19;
	mov.b64 	%rd5167, {%r3853, %r3852};
	shf.l.wrap.b32 	%r3854, %r3850, %r3851, 3;
	shf.l.wrap.b32 	%r3855, %r3851, %r3850, 3;
	mov.b64 	%rd5168, {%r3855, %r3854};
	xor.b64  	%rd5169, %rd5167, %rd5168;
	shr.u64 	%rd5170, %rd5105, 6;
	xor.b64  	%rd5171, %rd5169, %rd5170;
	shf.r.wrap.b32 	%r3856, %r3513, %r3512, 1;
	shf.r.wrap.b32 	%r3857, %r3512, %r3513, 1;
	mov.b64 	%rd5172, {%r3857, %r3856};
	shf.r.wrap.b32 	%r3858, %r3513, %r3512, 8;
	shf.r.wrap.b32 	%r3859, %r3512, %r3513, 8;
	mov.b64 	%rd5173, {%r3859, %r3858};
	xor.b64  	%rd5174, %rd5172, %rd5173;
	shr.u64 	%rd5175, %rd4624, 7;
	xor.b64  	%rd5176, %rd5174, %rd5175;
	add.s64 	%rd5177, %rd5176, %rd4587;
	add.s64 	%rd5178, %rd5177, %rd4920;
	add.s64 	%rd5179, %rd5178, %rd5171;
	add.s64 	%rd5180, %rd5179, %rd5044;
	xor.b64  	%rd5181, %rd5118, %rd5081;
	and.b64  	%rd5182, %rd5155, %rd5181;
	xor.b64  	%rd5183, %rd5182, %rd5081;
	add.s64 	%rd5184, %rd5180, %rd5183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3860,%dummy}, %rd5155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3861}, %rd5155;
	}
	shf.r.wrap.b32 	%r3862, %r3861, %r3860, 14;
	shf.r.wrap.b32 	%r3863, %r3860, %r3861, 14;
	mov.b64 	%rd5185, {%r3863, %r3862};
	shf.r.wrap.b32 	%r3864, %r3861, %r3860, 18;
	shf.r.wrap.b32 	%r3865, %r3860, %r3861, 18;
	mov.b64 	%rd5186, {%r3865, %r3864};
	xor.b64  	%rd5187, %rd5185, %rd5186;
	shf.l.wrap.b32 	%r3866, %r3860, %r3861, 23;
	shf.l.wrap.b32 	%r3867, %r3861, %r3860, 23;
	mov.b64 	%rd5188, {%r3867, %r3866};
	xor.b64  	%rd5189, %rd5187, %rd5188;
	add.s64 	%rd5190, %rd5184, %rd5189;
	add.s64 	%rd5191, %rd5190, 8399075790359081724;
	add.s64 	%rd5192, %rd5191, %rd5055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3868,%dummy}, %rd5166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3869}, %rd5166;
	}
	shf.r.wrap.b32 	%r3870, %r3869, %r3868, 28;
	shf.r.wrap.b32 	%r3871, %r3868, %r3869, 28;
	mov.b64 	%rd5193, {%r3871, %r3870};
	shf.l.wrap.b32 	%r3872, %r3868, %r3869, 30;
	shf.l.wrap.b32 	%r3873, %r3869, %r3868, 30;
	mov.b64 	%rd5194, {%r3873, %r3872};
	xor.b64  	%rd5195, %rd5193, %rd5194;
	shf.l.wrap.b32 	%r3874, %r3868, %r3869, 25;
	shf.l.wrap.b32 	%r3875, %r3869, %r3868, 25;
	mov.b64 	%rd5196, {%r3875, %r3874};
	xor.b64  	%rd5197, %rd5195, %rd5196;
	and.b64  	%rd5198, %rd5166, %rd5129;
	or.b64  	%rd5199, %rd5166, %rd5129;
	and.b64  	%rd5200, %rd5199, %rd5092;
	or.b64  	%rd5201, %rd5200, %rd5198;
	add.s64 	%rd5202, %rd5201, %rd5197;
	add.s64 	%rd5203, %rd5202, %rd5191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3876,%dummy}, %rd5142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3877}, %rd5142;
	}
	shf.r.wrap.b32 	%r3878, %r3877, %r3876, 19;
	shf.r.wrap.b32 	%r3879, %r3876, %r3877, 19;
	mov.b64 	%rd5204, {%r3879, %r3878};
	shf.l.wrap.b32 	%r3880, %r3876, %r3877, 3;
	shf.l.wrap.b32 	%r3881, %r3877, %r3876, 3;
	mov.b64 	%rd5205, {%r3881, %r3880};
	xor.b64  	%rd5206, %rd5204, %rd5205;
	shr.u64 	%rd5207, %rd5142, 6;
	xor.b64  	%rd5208, %rd5206, %rd5207;
	shf.r.wrap.b32 	%r3882, %r3539, %r3538, 1;
	shf.r.wrap.b32 	%r3883, %r3538, %r3539, 1;
	mov.b64 	%rd5209, {%r3883, %r3882};
	shf.r.wrap.b32 	%r3884, %r3539, %r3538, 8;
	shf.r.wrap.b32 	%r3885, %r3538, %r3539, 8;
	mov.b64 	%rd5210, {%r3885, %r3884};
	xor.b64  	%rd5211, %rd5209, %rd5210;
	shr.u64 	%rd5212, %rd4661, 7;
	xor.b64  	%rd5213, %rd5211, %rd5212;
	add.s64 	%rd5214, %rd5213, %rd4624;
	add.s64 	%rd5215, %rd5214, %rd4957;
	add.s64 	%rd5216, %rd5215, %rd5208;
	add.s64 	%rd5217, %rd5216, %rd5081;
	xor.b64  	%rd5218, %rd5155, %rd5118;
	and.b64  	%rd5219, %rd5192, %rd5218;
	xor.b64  	%rd5220, %rd5219, %rd5118;
	add.s64 	%rd5221, %rd5217, %rd5220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3886,%dummy}, %rd5192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3887}, %rd5192;
	}
	shf.r.wrap.b32 	%r3888, %r3887, %r3886, 14;
	shf.r.wrap.b32 	%r3889, %r3886, %r3887, 14;
	mov.b64 	%rd5222, {%r3889, %r3888};
	shf.r.wrap.b32 	%r3890, %r3887, %r3886, 18;
	shf.r.wrap.b32 	%r3891, %r3886, %r3887, 18;
	mov.b64 	%rd5223, {%r3891, %r3890};
	xor.b64  	%rd5224, %rd5222, %rd5223;
	shf.l.wrap.b32 	%r3892, %r3886, %r3887, 23;
	shf.l.wrap.b32 	%r3893, %r3887, %r3886, 23;
	mov.b64 	%rd5225, {%r3893, %r3892};
	xor.b64  	%rd5226, %rd5224, %rd5225;
	add.s64 	%rd5227, %rd5221, %rd5226;
	add.s64 	%rd5228, %rd5227, 8693463985226723168;
	add.s64 	%rd5229, %rd5228, %rd5092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3894,%dummy}, %rd5203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3895}, %rd5203;
	}
	shf.r.wrap.b32 	%r3896, %r3895, %r3894, 28;
	shf.r.wrap.b32 	%r3897, %r3894, %r3895, 28;
	mov.b64 	%rd5230, {%r3897, %r3896};
	shf.l.wrap.b32 	%r3898, %r3894, %r3895, 30;
	shf.l.wrap.b32 	%r3899, %r3895, %r3894, 30;
	mov.b64 	%rd5231, {%r3899, %r3898};
	xor.b64  	%rd5232, %rd5230, %rd5231;
	shf.l.wrap.b32 	%r3900, %r3894, %r3895, 25;
	shf.l.wrap.b32 	%r3901, %r3895, %r3894, 25;
	mov.b64 	%rd5233, {%r3901, %r3900};
	xor.b64  	%rd5234, %rd5232, %rd5233;
	and.b64  	%rd5235, %rd5203, %rd5166;
	or.b64  	%rd5236, %rd5203, %rd5166;
	and.b64  	%rd5237, %rd5236, %rd5129;
	or.b64  	%rd5238, %rd5237, %rd5235;
	add.s64 	%rd5239, %rd5238, %rd5234;
	add.s64 	%rd5240, %rd5239, %rd5228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3902,%dummy}, %rd5179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3903}, %rd5179;
	}
	shf.r.wrap.b32 	%r3904, %r3903, %r3902, 19;
	shf.r.wrap.b32 	%r3905, %r3902, %r3903, 19;
	mov.b64 	%rd5241, {%r3905, %r3904};
	shf.l.wrap.b32 	%r3906, %r3902, %r3903, 3;
	shf.l.wrap.b32 	%r3907, %r3903, %r3902, 3;
	mov.b64 	%rd5242, {%r3907, %r3906};
	xor.b64  	%rd5243, %rd5241, %rd5242;
	shr.u64 	%rd5244, %rd5179, 6;
	xor.b64  	%rd5245, %rd5243, %rd5244;
	shf.r.wrap.b32 	%r3908, %r3565, %r3564, 1;
	shf.r.wrap.b32 	%r3909, %r3564, %r3565, 1;
	mov.b64 	%rd5246, {%r3909, %r3908};
	shf.r.wrap.b32 	%r3910, %r3565, %r3564, 8;
	shf.r.wrap.b32 	%r3911, %r3564, %r3565, 8;
	mov.b64 	%rd5247, {%r3911, %r3910};
	xor.b64  	%rd5248, %rd5246, %rd5247;
	shr.u64 	%rd5249, %rd4698, 7;
	xor.b64  	%rd5250, %rd5248, %rd5249;
	add.s64 	%rd5251, %rd5250, %rd4661;
	add.s64 	%rd5252, %rd5251, %rd4994;
	add.s64 	%rd5253, %rd5252, %rd5245;
	add.s64 	%rd5254, %rd5253, %rd5118;
	xor.b64  	%rd5255, %rd5192, %rd5155;
	and.b64  	%rd5256, %rd5229, %rd5255;
	xor.b64  	%rd5257, %rd5256, %rd5155;
	add.s64 	%rd5258, %rd5254, %rd5257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3912,%dummy}, %rd5229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3913}, %rd5229;
	}
	shf.r.wrap.b32 	%r3914, %r3913, %r3912, 14;
	shf.r.wrap.b32 	%r3915, %r3912, %r3913, 14;
	mov.b64 	%rd5259, {%r3915, %r3914};
	shf.r.wrap.b32 	%r3916, %r3913, %r3912, 18;
	shf.r.wrap.b32 	%r3917, %r3912, %r3913, 18;
	mov.b64 	%rd5260, {%r3917, %r3916};
	xor.b64  	%rd5261, %rd5259, %rd5260;
	shf.l.wrap.b32 	%r3918, %r3912, %r3913, 23;
	shf.l.wrap.b32 	%r3919, %r3913, %r3912, 23;
	mov.b64 	%rd5262, {%r3919, %r3918};
	xor.b64  	%rd5263, %rd5261, %rd5262;
	add.s64 	%rd5264, %rd5258, %rd5263;
	add.s64 	%rd5265, %rd5264, -8878714635349349518;
	add.s64 	%rd5266, %rd5265, %rd5129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3920,%dummy}, %rd5240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3921}, %rd5240;
	}
	shf.r.wrap.b32 	%r3922, %r3921, %r3920, 28;
	shf.r.wrap.b32 	%r3923, %r3920, %r3921, 28;
	mov.b64 	%rd5267, {%r3923, %r3922};
	shf.l.wrap.b32 	%r3924, %r3920, %r3921, 30;
	shf.l.wrap.b32 	%r3925, %r3921, %r3920, 30;
	mov.b64 	%rd5268, {%r3925, %r3924};
	xor.b64  	%rd5269, %rd5267, %rd5268;
	shf.l.wrap.b32 	%r3926, %r3920, %r3921, 25;
	shf.l.wrap.b32 	%r3927, %r3921, %r3920, 25;
	mov.b64 	%rd5270, {%r3927, %r3926};
	xor.b64  	%rd5271, %rd5269, %rd5270;
	and.b64  	%rd5272, %rd5240, %rd5203;
	or.b64  	%rd5273, %rd5240, %rd5203;
	and.b64  	%rd5274, %rd5273, %rd5166;
	or.b64  	%rd5275, %rd5274, %rd5272;
	add.s64 	%rd5276, %rd5275, %rd5271;
	add.s64 	%rd5277, %rd5276, %rd5265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3928,%dummy}, %rd5216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3929}, %rd5216;
	}
	shf.r.wrap.b32 	%r3930, %r3929, %r3928, 19;
	shf.r.wrap.b32 	%r3931, %r3928, %r3929, 19;
	mov.b64 	%rd5278, {%r3931, %r3930};
	shf.l.wrap.b32 	%r3932, %r3928, %r3929, 3;
	shf.l.wrap.b32 	%r3933, %r3929, %r3928, 3;
	mov.b64 	%rd5279, {%r3933, %r3932};
	xor.b64  	%rd5280, %rd5278, %rd5279;
	shr.u64 	%rd5281, %rd5216, 6;
	xor.b64  	%rd5282, %rd5280, %rd5281;
	shf.r.wrap.b32 	%r3934, %r3591, %r3590, 1;
	shf.r.wrap.b32 	%r3935, %r3590, %r3591, 1;
	mov.b64 	%rd5283, {%r3935, %r3934};
	shf.r.wrap.b32 	%r3936, %r3591, %r3590, 8;
	shf.r.wrap.b32 	%r3937, %r3590, %r3591, 8;
	mov.b64 	%rd5284, {%r3937, %r3936};
	xor.b64  	%rd5285, %rd5283, %rd5284;
	shr.u64 	%rd5286, %rd4735, 7;
	xor.b64  	%rd5287, %rd5285, %rd5286;
	add.s64 	%rd5288, %rd5287, %rd4698;
	add.s64 	%rd5289, %rd5288, %rd5031;
	add.s64 	%rd5290, %rd5289, %rd5282;
	add.s64 	%rd5291, %rd5290, %rd5155;
	xor.b64  	%rd5292, %rd5229, %rd5192;
	and.b64  	%rd5293, %rd5266, %rd5292;
	xor.b64  	%rd5294, %rd5293, %rd5192;
	add.s64 	%rd5295, %rd5291, %rd5294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3938,%dummy}, %rd5266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3939}, %rd5266;
	}
	shf.r.wrap.b32 	%r3940, %r3939, %r3938, 14;
	shf.r.wrap.b32 	%r3941, %r3938, %r3939, 14;
	mov.b64 	%rd5296, {%r3941, %r3940};
	shf.r.wrap.b32 	%r3942, %r3939, %r3938, 18;
	shf.r.wrap.b32 	%r3943, %r3938, %r3939, 18;
	mov.b64 	%rd5297, {%r3943, %r3942};
	xor.b64  	%rd5298, %rd5296, %rd5297;
	shf.l.wrap.b32 	%r3944, %r3938, %r3939, 23;
	shf.l.wrap.b32 	%r3945, %r3939, %r3938, 23;
	mov.b64 	%rd5299, {%r3945, %r3944};
	xor.b64  	%rd5300, %rd5298, %rd5299;
	add.s64 	%rd5301, %rd5295, %rd5300;
	add.s64 	%rd5302, %rd5301, -8302665154208450068;
	add.s64 	%rd5303, %rd5302, %rd5166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3946,%dummy}, %rd5277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3947}, %rd5277;
	}
	shf.r.wrap.b32 	%r3948, %r3947, %r3946, 28;
	shf.r.wrap.b32 	%r3949, %r3946, %r3947, 28;
	mov.b64 	%rd5304, {%r3949, %r3948};
	shf.l.wrap.b32 	%r3950, %r3946, %r3947, 30;
	shf.l.wrap.b32 	%r3951, %r3947, %r3946, 30;
	mov.b64 	%rd5305, {%r3951, %r3950};
	xor.b64  	%rd5306, %rd5304, %rd5305;
	shf.l.wrap.b32 	%r3952, %r3946, %r3947, 25;
	shf.l.wrap.b32 	%r3953, %r3947, %r3946, 25;
	mov.b64 	%rd5307, {%r3953, %r3952};
	xor.b64  	%rd5308, %rd5306, %rd5307;
	and.b64  	%rd5309, %rd5277, %rd5240;
	or.b64  	%rd5310, %rd5277, %rd5240;
	and.b64  	%rd5311, %rd5310, %rd5203;
	or.b64  	%rd5312, %rd5311, %rd5309;
	add.s64 	%rd5313, %rd5312, %rd5308;
	add.s64 	%rd5314, %rd5313, %rd5302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3954,%dummy}, %rd5253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3955}, %rd5253;
	}
	shf.r.wrap.b32 	%r3956, %r3955, %r3954, 19;
	shf.r.wrap.b32 	%r3957, %r3954, %r3955, 19;
	mov.b64 	%rd5315, {%r3957, %r3956};
	shf.l.wrap.b32 	%r3958, %r3954, %r3955, 3;
	shf.l.wrap.b32 	%r3959, %r3955, %r3954, 3;
	mov.b64 	%rd5316, {%r3959, %r3958};
	xor.b64  	%rd5317, %rd5315, %rd5316;
	shr.u64 	%rd5318, %rd5253, 6;
	xor.b64  	%rd5319, %rd5317, %rd5318;
	shf.r.wrap.b32 	%r3960, %r3617, %r3616, 1;
	shf.r.wrap.b32 	%r3961, %r3616, %r3617, 1;
	mov.b64 	%rd5320, {%r3961, %r3960};
	shf.r.wrap.b32 	%r3962, %r3617, %r3616, 8;
	shf.r.wrap.b32 	%r3963, %r3616, %r3617, 8;
	mov.b64 	%rd5321, {%r3963, %r3962};
	xor.b64  	%rd5322, %rd5320, %rd5321;
	shr.u64 	%rd5323, %rd4772, 7;
	xor.b64  	%rd5324, %rd5322, %rd5323;
	add.s64 	%rd5325, %rd5324, %rd4735;
	add.s64 	%rd5326, %rd5325, %rd5068;
	add.s64 	%rd5327, %rd5326, %rd5319;
	add.s64 	%rd5328, %rd5327, %rd5192;
	xor.b64  	%rd5329, %rd5266, %rd5229;
	and.b64  	%rd5330, %rd5303, %rd5329;
	xor.b64  	%rd5331, %rd5330, %rd5229;
	add.s64 	%rd5332, %rd5328, %rd5331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3964,%dummy}, %rd5303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3965}, %rd5303;
	}
	shf.r.wrap.b32 	%r3966, %r3965, %r3964, 14;
	shf.r.wrap.b32 	%r3967, %r3964, %r3965, 14;
	mov.b64 	%rd5333, {%r3967, %r3966};
	shf.r.wrap.b32 	%r3968, %r3965, %r3964, 18;
	shf.r.wrap.b32 	%r3969, %r3964, %r3965, 18;
	mov.b64 	%rd5334, {%r3969, %r3968};
	xor.b64  	%rd5335, %rd5333, %rd5334;
	shf.l.wrap.b32 	%r3970, %r3964, %r3965, 23;
	shf.l.wrap.b32 	%r3971, %r3965, %r3964, 23;
	mov.b64 	%rd5336, {%r3971, %r3970};
	xor.b64  	%rd5337, %rd5335, %rd5336;
	add.s64 	%rd5338, %rd5332, %rd5337;
	add.s64 	%rd5339, %rd5338, -8016688836872298968;
	add.s64 	%rd5340, %rd5339, %rd5203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3972,%dummy}, %rd5314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3973}, %rd5314;
	}
	shf.r.wrap.b32 	%r3974, %r3973, %r3972, 28;
	shf.r.wrap.b32 	%r3975, %r3972, %r3973, 28;
	mov.b64 	%rd5341, {%r3975, %r3974};
	shf.l.wrap.b32 	%r3976, %r3972, %r3973, 30;
	shf.l.wrap.b32 	%r3977, %r3973, %r3972, 30;
	mov.b64 	%rd5342, {%r3977, %r3976};
	xor.b64  	%rd5343, %rd5341, %rd5342;
	shf.l.wrap.b32 	%r3978, %r3972, %r3973, 25;
	shf.l.wrap.b32 	%r3979, %r3973, %r3972, 25;
	mov.b64 	%rd5344, {%r3979, %r3978};
	xor.b64  	%rd5345, %rd5343, %rd5344;
	and.b64  	%rd5346, %rd5314, %rd5277;
	or.b64  	%rd5347, %rd5314, %rd5277;
	and.b64  	%rd5348, %rd5347, %rd5240;
	or.b64  	%rd5349, %rd5348, %rd5346;
	add.s64 	%rd5350, %rd5349, %rd5345;
	add.s64 	%rd5351, %rd5350, %rd5339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3980,%dummy}, %rd5290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3981}, %rd5290;
	}
	shf.r.wrap.b32 	%r3982, %r3981, %r3980, 19;
	shf.r.wrap.b32 	%r3983, %r3980, %r3981, 19;
	mov.b64 	%rd5352, {%r3983, %r3982};
	shf.l.wrap.b32 	%r3984, %r3980, %r3981, 3;
	shf.l.wrap.b32 	%r3985, %r3981, %r3980, 3;
	mov.b64 	%rd5353, {%r3985, %r3984};
	xor.b64  	%rd5354, %rd5352, %rd5353;
	shr.u64 	%rd5355, %rd5290, 6;
	xor.b64  	%rd5356, %rd5354, %rd5355;
	shf.r.wrap.b32 	%r3986, %r3643, %r3642, 1;
	shf.r.wrap.b32 	%r3987, %r3642, %r3643, 1;
	mov.b64 	%rd5357, {%r3987, %r3986};
	shf.r.wrap.b32 	%r3988, %r3643, %r3642, 8;
	shf.r.wrap.b32 	%r3989, %r3642, %r3643, 8;
	mov.b64 	%rd5358, {%r3989, %r3988};
	xor.b64  	%rd5359, %rd5357, %rd5358;
	shr.u64 	%rd5360, %rd4809, 7;
	xor.b64  	%rd5361, %rd5359, %rd5360;
	add.s64 	%rd5362, %rd5361, %rd4772;
	add.s64 	%rd5363, %rd5362, %rd5105;
	add.s64 	%rd5364, %rd5363, %rd5356;
	add.s64 	%rd5365, %rd5364, %rd5229;
	xor.b64  	%rd5366, %rd5303, %rd5266;
	and.b64  	%rd5367, %rd5340, %rd5366;
	xor.b64  	%rd5368, %rd5367, %rd5266;
	add.s64 	%rd5369, %rd5365, %rd5368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3990,%dummy}, %rd5340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3991}, %rd5340;
	}
	shf.r.wrap.b32 	%r3992, %r3991, %r3990, 14;
	shf.r.wrap.b32 	%r3993, %r3990, %r3991, 14;
	mov.b64 	%rd5370, {%r3993, %r3992};
	shf.r.wrap.b32 	%r3994, %r3991, %r3990, 18;
	shf.r.wrap.b32 	%r3995, %r3990, %r3991, 18;
	mov.b64 	%rd5371, {%r3995, %r3994};
	xor.b64  	%rd5372, %rd5370, %rd5371;
	shf.l.wrap.b32 	%r3996, %r3990, %r3991, 23;
	shf.l.wrap.b32 	%r3997, %r3991, %r3990, 23;
	mov.b64 	%rd5373, {%r3997, %r3996};
	xor.b64  	%rd5374, %rd5372, %rd5373;
	add.s64 	%rd5375, %rd5369, %rd5374;
	add.s64 	%rd5376, %rd5375, -6606660893046293015;
	add.s64 	%rd5377, %rd5376, %rd5240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3998,%dummy}, %rd5351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3999}, %rd5351;
	}
	shf.r.wrap.b32 	%r4000, %r3999, %r3998, 28;
	shf.r.wrap.b32 	%r4001, %r3998, %r3999, 28;
	mov.b64 	%rd5378, {%r4001, %r4000};
	shf.l.wrap.b32 	%r4002, %r3998, %r3999, 30;
	shf.l.wrap.b32 	%r4003, %r3999, %r3998, 30;
	mov.b64 	%rd5379, {%r4003, %r4002};
	xor.b64  	%rd5380, %rd5378, %rd5379;
	shf.l.wrap.b32 	%r4004, %r3998, %r3999, 25;
	shf.l.wrap.b32 	%r4005, %r3999, %r3998, 25;
	mov.b64 	%rd5381, {%r4005, %r4004};
	xor.b64  	%rd5382, %rd5380, %rd5381;
	and.b64  	%rd5383, %rd5351, %rd5314;
	or.b64  	%rd5384, %rd5351, %rd5314;
	and.b64  	%rd5385, %rd5384, %rd5277;
	or.b64  	%rd5386, %rd5385, %rd5383;
	add.s64 	%rd5387, %rd5386, %rd5382;
	add.s64 	%rd5388, %rd5387, %rd5376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4006,%dummy}, %rd5327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4007}, %rd5327;
	}
	shf.r.wrap.b32 	%r4008, %r4007, %r4006, 19;
	shf.r.wrap.b32 	%r4009, %r4006, %r4007, 19;
	mov.b64 	%rd5389, {%r4009, %r4008};
	shf.l.wrap.b32 	%r4010, %r4006, %r4007, 3;
	shf.l.wrap.b32 	%r4011, %r4007, %r4006, 3;
	mov.b64 	%rd5390, {%r4011, %r4010};
	xor.b64  	%rd5391, %rd5389, %rd5390;
	shr.u64 	%rd5392, %rd5327, 6;
	xor.b64  	%rd5393, %rd5391, %rd5392;
	shf.r.wrap.b32 	%r4012, %r3669, %r3668, 1;
	shf.r.wrap.b32 	%r4013, %r3668, %r3669, 1;
	mov.b64 	%rd5394, {%r4013, %r4012};
	shf.r.wrap.b32 	%r4014, %r3669, %r3668, 8;
	shf.r.wrap.b32 	%r4015, %r3668, %r3669, 8;
	mov.b64 	%rd5395, {%r4015, %r4014};
	xor.b64  	%rd5396, %rd5394, %rd5395;
	shr.u64 	%rd5397, %rd4846, 7;
	xor.b64  	%rd5398, %rd5396, %rd5397;
	add.s64 	%rd5399, %rd5398, %rd4809;
	add.s64 	%rd5400, %rd5399, %rd5142;
	add.s64 	%rd5401, %rd5400, %rd5393;
	add.s64 	%rd5402, %rd5401, %rd5266;
	xor.b64  	%rd5403, %rd5340, %rd5303;
	and.b64  	%rd5404, %rd5377, %rd5403;
	xor.b64  	%rd5405, %rd5404, %rd5303;
	add.s64 	%rd5406, %rd5402, %rd5405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4016,%dummy}, %rd5377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4017}, %rd5377;
	}
	shf.r.wrap.b32 	%r4018, %r4017, %r4016, 14;
	shf.r.wrap.b32 	%r4019, %r4016, %r4017, 14;
	mov.b64 	%rd5407, {%r4019, %r4018};
	shf.r.wrap.b32 	%r4020, %r4017, %r4016, 18;
	shf.r.wrap.b32 	%r4021, %r4016, %r4017, 18;
	mov.b64 	%rd5408, {%r4021, %r4020};
	xor.b64  	%rd5409, %rd5407, %rd5408;
	shf.l.wrap.b32 	%r4022, %r4016, %r4017, 23;
	shf.l.wrap.b32 	%r4023, %r4017, %r4016, 23;
	mov.b64 	%rd5410, {%r4023, %r4022};
	xor.b64  	%rd5411, %rd5409, %rd5410;
	add.s64 	%rd5412, %rd5406, %rd5411;
	add.s64 	%rd5413, %rd5412, -4685533653050689259;
	add.s64 	%rd5414, %rd5413, %rd5277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4024,%dummy}, %rd5388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4025}, %rd5388;
	}
	shf.r.wrap.b32 	%r4026, %r4025, %r4024, 28;
	shf.r.wrap.b32 	%r4027, %r4024, %r4025, 28;
	mov.b64 	%rd5415, {%r4027, %r4026};
	shf.l.wrap.b32 	%r4028, %r4024, %r4025, 30;
	shf.l.wrap.b32 	%r4029, %r4025, %r4024, 30;
	mov.b64 	%rd5416, {%r4029, %r4028};
	xor.b64  	%rd5417, %rd5415, %rd5416;
	shf.l.wrap.b32 	%r4030, %r4024, %r4025, 25;
	shf.l.wrap.b32 	%r4031, %r4025, %r4024, 25;
	mov.b64 	%rd5418, {%r4031, %r4030};
	xor.b64  	%rd5419, %rd5417, %rd5418;
	and.b64  	%rd5420, %rd5388, %rd5351;
	or.b64  	%rd5421, %rd5388, %rd5351;
	and.b64  	%rd5422, %rd5421, %rd5314;
	or.b64  	%rd5423, %rd5422, %rd5420;
	add.s64 	%rd5424, %rd5423, %rd5419;
	add.s64 	%rd5425, %rd5424, %rd5413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4032,%dummy}, %rd5364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4033}, %rd5364;
	}
	shf.r.wrap.b32 	%r4034, %r4033, %r4032, 19;
	shf.r.wrap.b32 	%r4035, %r4032, %r4033, 19;
	mov.b64 	%rd5426, {%r4035, %r4034};
	shf.l.wrap.b32 	%r4036, %r4032, %r4033, 3;
	shf.l.wrap.b32 	%r4037, %r4033, %r4032, 3;
	mov.b64 	%rd5427, {%r4037, %r4036};
	xor.b64  	%rd5428, %rd5426, %rd5427;
	shr.u64 	%rd5429, %rd5364, 6;
	xor.b64  	%rd5430, %rd5428, %rd5429;
	shf.r.wrap.b32 	%r4038, %r3695, %r3694, 1;
	shf.r.wrap.b32 	%r4039, %r3694, %r3695, 1;
	mov.b64 	%rd5431, {%r4039, %r4038};
	shf.r.wrap.b32 	%r4040, %r3695, %r3694, 8;
	shf.r.wrap.b32 	%r4041, %r3694, %r3695, 8;
	mov.b64 	%rd5432, {%r4041, %r4040};
	xor.b64  	%rd5433, %rd5431, %rd5432;
	shr.u64 	%rd5434, %rd4883, 7;
	xor.b64  	%rd5435, %rd5433, %rd5434;
	add.s64 	%rd5436, %rd5435, %rd4846;
	add.s64 	%rd5437, %rd5436, %rd5179;
	add.s64 	%rd5438, %rd5437, %rd5430;
	add.s64 	%rd5439, %rd5438, %rd5303;
	xor.b64  	%rd5440, %rd5377, %rd5340;
	and.b64  	%rd5441, %rd5414, %rd5440;
	xor.b64  	%rd5442, %rd5441, %rd5340;
	add.s64 	%rd5443, %rd5439, %rd5442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4042,%dummy}, %rd5414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4043}, %rd5414;
	}
	shf.r.wrap.b32 	%r4044, %r4043, %r4042, 14;
	shf.r.wrap.b32 	%r4045, %r4042, %r4043, 14;
	mov.b64 	%rd5444, {%r4045, %r4044};
	shf.r.wrap.b32 	%r4046, %r4043, %r4042, 18;
	shf.r.wrap.b32 	%r4047, %r4042, %r4043, 18;
	mov.b64 	%rd5445, {%r4047, %r4046};
	xor.b64  	%rd5446, %rd5444, %rd5445;
	shf.l.wrap.b32 	%r4048, %r4042, %r4043, 23;
	shf.l.wrap.b32 	%r4049, %r4043, %r4042, 23;
	mov.b64 	%rd5447, {%r4049, %r4048};
	xor.b64  	%rd5448, %rd5446, %rd5447;
	add.s64 	%rd5449, %rd5443, %rd5448;
	add.s64 	%rd5450, %rd5449, -4147400797238176981;
	add.s64 	%rd5451, %rd5450, %rd5314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4050,%dummy}, %rd5425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4051}, %rd5425;
	}
	shf.r.wrap.b32 	%r4052, %r4051, %r4050, 28;
	shf.r.wrap.b32 	%r4053, %r4050, %r4051, 28;
	mov.b64 	%rd5452, {%r4053, %r4052};
	shf.l.wrap.b32 	%r4054, %r4050, %r4051, 30;
	shf.l.wrap.b32 	%r4055, %r4051, %r4050, 30;
	mov.b64 	%rd5453, {%r4055, %r4054};
	xor.b64  	%rd5454, %rd5452, %rd5453;
	shf.l.wrap.b32 	%r4056, %r4050, %r4051, 25;
	shf.l.wrap.b32 	%r4057, %r4051, %r4050, 25;
	mov.b64 	%rd5455, {%r4057, %r4056};
	xor.b64  	%rd5456, %rd5454, %rd5455;
	and.b64  	%rd5457, %rd5425, %rd5388;
	or.b64  	%rd5458, %rd5425, %rd5388;
	and.b64  	%rd5459, %rd5458, %rd5351;
	or.b64  	%rd5460, %rd5459, %rd5457;
	add.s64 	%rd5461, %rd5460, %rd5456;
	add.s64 	%rd5462, %rd5461, %rd5450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4058,%dummy}, %rd5401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4059}, %rd5401;
	}
	shf.r.wrap.b32 	%r4060, %r4059, %r4058, 19;
	shf.r.wrap.b32 	%r4061, %r4058, %r4059, 19;
	mov.b64 	%rd5463, {%r4061, %r4060};
	shf.l.wrap.b32 	%r4062, %r4058, %r4059, 3;
	shf.l.wrap.b32 	%r4063, %r4059, %r4058, 3;
	mov.b64 	%rd5464, {%r4063, %r4062};
	xor.b64  	%rd5465, %rd5463, %rd5464;
	shr.u64 	%rd5466, %rd5401, 6;
	xor.b64  	%rd5467, %rd5465, %rd5466;
	shf.r.wrap.b32 	%r4064, %r3721, %r3720, 1;
	shf.r.wrap.b32 	%r4065, %r3720, %r3721, 1;
	mov.b64 	%rd5468, {%r4065, %r4064};
	shf.r.wrap.b32 	%r4066, %r3721, %r3720, 8;
	shf.r.wrap.b32 	%r4067, %r3720, %r3721, 8;
	mov.b64 	%rd5469, {%r4067, %r4066};
	xor.b64  	%rd5470, %rd5468, %rd5469;
	shr.u64 	%rd5471, %rd4920, 7;
	xor.b64  	%rd5472, %rd5470, %rd5471;
	add.s64 	%rd5473, %rd5472, %rd4883;
	add.s64 	%rd5474, %rd5473, %rd5216;
	add.s64 	%rd5475, %rd5474, %rd5467;
	add.s64 	%rd5476, %rd5475, %rd5340;
	xor.b64  	%rd5477, %rd5414, %rd5377;
	and.b64  	%rd5478, %rd5451, %rd5477;
	xor.b64  	%rd5479, %rd5478, %rd5377;
	add.s64 	%rd5480, %rd5476, %rd5479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4068,%dummy}, %rd5451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4069}, %rd5451;
	}
	shf.r.wrap.b32 	%r4070, %r4069, %r4068, 14;
	shf.r.wrap.b32 	%r4071, %r4068, %r4069, 14;
	mov.b64 	%rd5481, {%r4071, %r4070};
	shf.r.wrap.b32 	%r4072, %r4069, %r4068, 18;
	shf.r.wrap.b32 	%r4073, %r4068, %r4069, 18;
	mov.b64 	%rd5482, {%r4073, %r4072};
	xor.b64  	%rd5483, %rd5481, %rd5482;
	shf.l.wrap.b32 	%r4074, %r4068, %r4069, 23;
	shf.l.wrap.b32 	%r4075, %r4069, %r4068, 23;
	mov.b64 	%rd5484, {%r4075, %r4074};
	xor.b64  	%rd5485, %rd5483, %rd5484;
	add.s64 	%rd5486, %rd5480, %rd5485;
	add.s64 	%rd5487, %rd5486, -3880063495543823972;
	add.s64 	%rd5488, %rd5487, %rd5351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4076,%dummy}, %rd5462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4077}, %rd5462;
	}
	shf.r.wrap.b32 	%r4078, %r4077, %r4076, 28;
	shf.r.wrap.b32 	%r4079, %r4076, %r4077, 28;
	mov.b64 	%rd5489, {%r4079, %r4078};
	shf.l.wrap.b32 	%r4080, %r4076, %r4077, 30;
	shf.l.wrap.b32 	%r4081, %r4077, %r4076, 30;
	mov.b64 	%rd5490, {%r4081, %r4080};
	xor.b64  	%rd5491, %rd5489, %rd5490;
	shf.l.wrap.b32 	%r4082, %r4076, %r4077, 25;
	shf.l.wrap.b32 	%r4083, %r4077, %r4076, 25;
	mov.b64 	%rd5492, {%r4083, %r4082};
	xor.b64  	%rd5493, %rd5491, %rd5492;
	and.b64  	%rd5494, %rd5462, %rd5425;
	or.b64  	%rd5495, %rd5462, %rd5425;
	and.b64  	%rd5496, %rd5495, %rd5388;
	or.b64  	%rd5497, %rd5496, %rd5494;
	add.s64 	%rd5498, %rd5497, %rd5493;
	add.s64 	%rd5499, %rd5498, %rd5487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4084,%dummy}, %rd5438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4085}, %rd5438;
	}
	shf.r.wrap.b32 	%r4086, %r4085, %r4084, 19;
	shf.r.wrap.b32 	%r4087, %r4084, %r4085, 19;
	mov.b64 	%rd5500, {%r4087, %r4086};
	shf.l.wrap.b32 	%r4088, %r4084, %r4085, 3;
	shf.l.wrap.b32 	%r4089, %r4085, %r4084, 3;
	mov.b64 	%rd5501, {%r4089, %r4088};
	xor.b64  	%rd5502, %rd5500, %rd5501;
	shr.u64 	%rd5503, %rd5438, 6;
	xor.b64  	%rd5504, %rd5502, %rd5503;
	shf.r.wrap.b32 	%r4090, %r3747, %r3746, 1;
	shf.r.wrap.b32 	%r4091, %r3746, %r3747, 1;
	mov.b64 	%rd5505, {%r4091, %r4090};
	shf.r.wrap.b32 	%r4092, %r3747, %r3746, 8;
	shf.r.wrap.b32 	%r4093, %r3746, %r3747, 8;
	mov.b64 	%rd5506, {%r4093, %r4092};
	xor.b64  	%rd5507, %rd5505, %rd5506;
	shr.u64 	%rd5508, %rd4957, 7;
	xor.b64  	%rd5509, %rd5507, %rd5508;
	add.s64 	%rd5510, %rd5509, %rd4920;
	add.s64 	%rd5511, %rd5510, %rd5253;
	add.s64 	%rd5512, %rd5511, %rd5504;
	add.s64 	%rd5513, %rd5512, %rd5377;
	xor.b64  	%rd5514, %rd5451, %rd5414;
	and.b64  	%rd5515, %rd5488, %rd5514;
	xor.b64  	%rd5516, %rd5515, %rd5414;
	add.s64 	%rd5517, %rd5513, %rd5516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4094,%dummy}, %rd5488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4095}, %rd5488;
	}
	shf.r.wrap.b32 	%r4096, %r4095, %r4094, 14;
	shf.r.wrap.b32 	%r4097, %r4094, %r4095, 14;
	mov.b64 	%rd5518, {%r4097, %r4096};
	shf.r.wrap.b32 	%r4098, %r4095, %r4094, 18;
	shf.r.wrap.b32 	%r4099, %r4094, %r4095, 18;
	mov.b64 	%rd5519, {%r4099, %r4098};
	xor.b64  	%rd5520, %rd5518, %rd5519;
	shf.l.wrap.b32 	%r4100, %r4094, %r4095, 23;
	shf.l.wrap.b32 	%r4101, %r4095, %r4094, 23;
	mov.b64 	%rd5521, {%r4101, %r4100};
	xor.b64  	%rd5522, %rd5520, %rd5521;
	add.s64 	%rd5523, %rd5517, %rd5522;
	add.s64 	%rd5524, %rd5523, -3348786107499101689;
	add.s64 	%rd5525, %rd5524, %rd5388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4102,%dummy}, %rd5499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4103}, %rd5499;
	}
	shf.r.wrap.b32 	%r4104, %r4103, %r4102, 28;
	shf.r.wrap.b32 	%r4105, %r4102, %r4103, 28;
	mov.b64 	%rd5526, {%r4105, %r4104};
	shf.l.wrap.b32 	%r4106, %r4102, %r4103, 30;
	shf.l.wrap.b32 	%r4107, %r4103, %r4102, 30;
	mov.b64 	%rd5527, {%r4107, %r4106};
	xor.b64  	%rd5528, %rd5526, %rd5527;
	shf.l.wrap.b32 	%r4108, %r4102, %r4103, 25;
	shf.l.wrap.b32 	%r4109, %r4103, %r4102, 25;
	mov.b64 	%rd5529, {%r4109, %r4108};
	xor.b64  	%rd5530, %rd5528, %rd5529;
	and.b64  	%rd5531, %rd5499, %rd5462;
	or.b64  	%rd5532, %rd5499, %rd5462;
	and.b64  	%rd5533, %rd5532, %rd5425;
	or.b64  	%rd5534, %rd5533, %rd5531;
	add.s64 	%rd5535, %rd5534, %rd5530;
	add.s64 	%rd5536, %rd5535, %rd5524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4110,%dummy}, %rd5475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4111}, %rd5475;
	}
	shf.r.wrap.b32 	%r4112, %r4111, %r4110, 19;
	shf.r.wrap.b32 	%r4113, %r4110, %r4111, 19;
	mov.b64 	%rd5537, {%r4113, %r4112};
	shf.l.wrap.b32 	%r4114, %r4110, %r4111, 3;
	shf.l.wrap.b32 	%r4115, %r4111, %r4110, 3;
	mov.b64 	%rd5538, {%r4115, %r4114};
	xor.b64  	%rd5539, %rd5537, %rd5538;
	shr.u64 	%rd5540, %rd5475, 6;
	xor.b64  	%rd5541, %rd5539, %rd5540;
	shf.r.wrap.b32 	%r4116, %r3773, %r3772, 1;
	shf.r.wrap.b32 	%r4117, %r3772, %r3773, 1;
	mov.b64 	%rd5542, {%r4117, %r4116};
	shf.r.wrap.b32 	%r4118, %r3773, %r3772, 8;
	shf.r.wrap.b32 	%r4119, %r3772, %r3773, 8;
	mov.b64 	%rd5543, {%r4119, %r4118};
	xor.b64  	%rd5544, %rd5542, %rd5543;
	shr.u64 	%rd5545, %rd4994, 7;
	xor.b64  	%rd5546, %rd5544, %rd5545;
	add.s64 	%rd5547, %rd5546, %rd4957;
	add.s64 	%rd5548, %rd5547, %rd5290;
	add.s64 	%rd5549, %rd5548, %rd5541;
	add.s64 	%rd5550, %rd5549, %rd5414;
	xor.b64  	%rd5551, %rd5488, %rd5451;
	and.b64  	%rd5552, %rd5525, %rd5551;
	xor.b64  	%rd5553, %rd5552, %rd5451;
	add.s64 	%rd5554, %rd5550, %rd5553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4120,%dummy}, %rd5525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4121}, %rd5525;
	}
	shf.r.wrap.b32 	%r4122, %r4121, %r4120, 14;
	shf.r.wrap.b32 	%r4123, %r4120, %r4121, 14;
	mov.b64 	%rd5555, {%r4123, %r4122};
	shf.r.wrap.b32 	%r4124, %r4121, %r4120, 18;
	shf.r.wrap.b32 	%r4125, %r4120, %r4121, 18;
	mov.b64 	%rd5556, {%r4125, %r4124};
	xor.b64  	%rd5557, %rd5555, %rd5556;
	shf.l.wrap.b32 	%r4126, %r4120, %r4121, 23;
	shf.l.wrap.b32 	%r4127, %r4121, %r4120, 23;
	mov.b64 	%rd5558, {%r4127, %r4126};
	xor.b64  	%rd5559, %rd5557, %rd5558;
	add.s64 	%rd5560, %rd5554, %rd5559;
	add.s64 	%rd5561, %rd5560, -1523767162380948706;
	add.s64 	%rd5562, %rd5561, %rd5425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4128,%dummy}, %rd5536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4129}, %rd5536;
	}
	shf.r.wrap.b32 	%r4130, %r4129, %r4128, 28;
	shf.r.wrap.b32 	%r4131, %r4128, %r4129, 28;
	mov.b64 	%rd5563, {%r4131, %r4130};
	shf.l.wrap.b32 	%r4132, %r4128, %r4129, 30;
	shf.l.wrap.b32 	%r4133, %r4129, %r4128, 30;
	mov.b64 	%rd5564, {%r4133, %r4132};
	xor.b64  	%rd5565, %rd5563, %rd5564;
	shf.l.wrap.b32 	%r4134, %r4128, %r4129, 25;
	shf.l.wrap.b32 	%r4135, %r4129, %r4128, 25;
	mov.b64 	%rd5566, {%r4135, %r4134};
	xor.b64  	%rd5567, %rd5565, %rd5566;
	and.b64  	%rd5568, %rd5536, %rd5499;
	or.b64  	%rd5569, %rd5536, %rd5499;
	and.b64  	%rd5570, %rd5569, %rd5462;
	or.b64  	%rd5571, %rd5570, %rd5568;
	add.s64 	%rd5572, %rd5571, %rd5567;
	add.s64 	%rd5573, %rd5572, %rd5561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4136,%dummy}, %rd5512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4137}, %rd5512;
	}
	shf.r.wrap.b32 	%r4138, %r4137, %r4136, 19;
	shf.r.wrap.b32 	%r4139, %r4136, %r4137, 19;
	mov.b64 	%rd5574, {%r4139, %r4138};
	shf.l.wrap.b32 	%r4140, %r4136, %r4137, 3;
	shf.l.wrap.b32 	%r4141, %r4137, %r4136, 3;
	mov.b64 	%rd5575, {%r4141, %r4140};
	xor.b64  	%rd5576, %rd5574, %rd5575;
	shr.u64 	%rd5577, %rd5512, 6;
	xor.b64  	%rd5578, %rd5576, %rd5577;
	shf.r.wrap.b32 	%r4142, %r3799, %r3798, 1;
	shf.r.wrap.b32 	%r4143, %r3798, %r3799, 1;
	mov.b64 	%rd5579, {%r4143, %r4142};
	shf.r.wrap.b32 	%r4144, %r3799, %r3798, 8;
	shf.r.wrap.b32 	%r4145, %r3798, %r3799, 8;
	mov.b64 	%rd5580, {%r4145, %r4144};
	xor.b64  	%rd5581, %rd5579, %rd5580;
	shr.u64 	%rd5582, %rd5031, 7;
	xor.b64  	%rd5583, %rd5581, %rd5582;
	add.s64 	%rd5584, %rd5583, %rd4994;
	add.s64 	%rd5585, %rd5584, %rd5327;
	add.s64 	%rd5586, %rd5585, %rd5578;
	add.s64 	%rd5587, %rd5586, %rd5451;
	xor.b64  	%rd5588, %rd5525, %rd5488;
	and.b64  	%rd5589, %rd5562, %rd5588;
	xor.b64  	%rd5590, %rd5589, %rd5488;
	add.s64 	%rd5591, %rd5587, %rd5590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4146,%dummy}, %rd5562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4147}, %rd5562;
	}
	shf.r.wrap.b32 	%r4148, %r4147, %r4146, 14;
	shf.r.wrap.b32 	%r4149, %r4146, %r4147, 14;
	mov.b64 	%rd5592, {%r4149, %r4148};
	shf.r.wrap.b32 	%r4150, %r4147, %r4146, 18;
	shf.r.wrap.b32 	%r4151, %r4146, %r4147, 18;
	mov.b64 	%rd5593, {%r4151, %r4150};
	xor.b64  	%rd5594, %rd5592, %rd5593;
	shf.l.wrap.b32 	%r4152, %r4146, %r4147, 23;
	shf.l.wrap.b32 	%r4153, %r4147, %r4146, 23;
	mov.b64 	%rd5595, {%r4153, %r4152};
	xor.b64  	%rd5596, %rd5594, %rd5595;
	add.s64 	%rd5597, %rd5591, %rd5596;
	add.s64 	%rd5598, %rd5597, -757361751448694408;
	add.s64 	%rd5599, %rd5598, %rd5462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4154,%dummy}, %rd5573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4155}, %rd5573;
	}
	shf.r.wrap.b32 	%r4156, %r4155, %r4154, 28;
	shf.r.wrap.b32 	%r4157, %r4154, %r4155, 28;
	mov.b64 	%rd5600, {%r4157, %r4156};
	shf.l.wrap.b32 	%r4158, %r4154, %r4155, 30;
	shf.l.wrap.b32 	%r4159, %r4155, %r4154, 30;
	mov.b64 	%rd5601, {%r4159, %r4158};
	xor.b64  	%rd5602, %rd5600, %rd5601;
	shf.l.wrap.b32 	%r4160, %r4154, %r4155, 25;
	shf.l.wrap.b32 	%r4161, %r4155, %r4154, 25;
	mov.b64 	%rd5603, {%r4161, %r4160};
	xor.b64  	%rd5604, %rd5602, %rd5603;
	and.b64  	%rd5605, %rd5573, %rd5536;
	or.b64  	%rd5606, %rd5573, %rd5536;
	and.b64  	%rd5607, %rd5606, %rd5499;
	or.b64  	%rd5608, %rd5607, %rd5605;
	add.s64 	%rd5609, %rd5608, %rd5604;
	add.s64 	%rd5610, %rd5609, %rd5598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4162,%dummy}, %rd5549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4163}, %rd5549;
	}
	shf.r.wrap.b32 	%r4164, %r4163, %r4162, 19;
	shf.r.wrap.b32 	%r4165, %r4162, %r4163, 19;
	mov.b64 	%rd5611, {%r4165, %r4164};
	shf.l.wrap.b32 	%r4166, %r4162, %r4163, 3;
	shf.l.wrap.b32 	%r4167, %r4163, %r4162, 3;
	mov.b64 	%rd5612, {%r4167, %r4166};
	xor.b64  	%rd5613, %rd5611, %rd5612;
	shr.u64 	%rd5614, %rd5549, 6;
	xor.b64  	%rd5615, %rd5613, %rd5614;
	shf.r.wrap.b32 	%r4168, %r3825, %r3824, 1;
	shf.r.wrap.b32 	%r4169, %r3824, %r3825, 1;
	mov.b64 	%rd5616, {%r4169, %r4168};
	shf.r.wrap.b32 	%r4170, %r3825, %r3824, 8;
	shf.r.wrap.b32 	%r4171, %r3824, %r3825, 8;
	mov.b64 	%rd5617, {%r4171, %r4170};
	xor.b64  	%rd5618, %rd5616, %rd5617;
	shr.u64 	%rd5619, %rd5068, 7;
	xor.b64  	%rd5620, %rd5618, %rd5619;
	add.s64 	%rd5621, %rd5620, %rd5031;
	add.s64 	%rd5622, %rd5621, %rd5364;
	add.s64 	%rd5623, %rd5622, %rd5615;
	add.s64 	%rd5624, %rd5623, %rd5488;
	xor.b64  	%rd5625, %rd5562, %rd5525;
	and.b64  	%rd5626, %rd5599, %rd5625;
	xor.b64  	%rd5627, %rd5626, %rd5525;
	add.s64 	%rd5628, %rd5624, %rd5627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4172,%dummy}, %rd5599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4173}, %rd5599;
	}
	shf.r.wrap.b32 	%r4174, %r4173, %r4172, 14;
	shf.r.wrap.b32 	%r4175, %r4172, %r4173, 14;
	mov.b64 	%rd5629, {%r4175, %r4174};
	shf.r.wrap.b32 	%r4176, %r4173, %r4172, 18;
	shf.r.wrap.b32 	%r4177, %r4172, %r4173, 18;
	mov.b64 	%rd5630, {%r4177, %r4176};
	xor.b64  	%rd5631, %rd5629, %rd5630;
	shf.l.wrap.b32 	%r4178, %r4172, %r4173, 23;
	shf.l.wrap.b32 	%r4179, %r4173, %r4172, 23;
	mov.b64 	%rd5632, {%r4179, %r4178};
	xor.b64  	%rd5633, %rd5631, %rd5632;
	add.s64 	%rd5634, %rd5628, %rd5633;
	add.s64 	%rd5635, %rd5634, 500013540394364858;
	add.s64 	%rd5636, %rd5635, %rd5499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4180,%dummy}, %rd5610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4181}, %rd5610;
	}
	shf.r.wrap.b32 	%r4182, %r4181, %r4180, 28;
	shf.r.wrap.b32 	%r4183, %r4180, %r4181, 28;
	mov.b64 	%rd5637, {%r4183, %r4182};
	shf.l.wrap.b32 	%r4184, %r4180, %r4181, 30;
	shf.l.wrap.b32 	%r4185, %r4181, %r4180, 30;
	mov.b64 	%rd5638, {%r4185, %r4184};
	xor.b64  	%rd5639, %rd5637, %rd5638;
	shf.l.wrap.b32 	%r4186, %r4180, %r4181, 25;
	shf.l.wrap.b32 	%r4187, %r4181, %r4180, 25;
	mov.b64 	%rd5640, {%r4187, %r4186};
	xor.b64  	%rd5641, %rd5639, %rd5640;
	and.b64  	%rd5642, %rd5610, %rd5573;
	or.b64  	%rd5643, %rd5610, %rd5573;
	and.b64  	%rd5644, %rd5643, %rd5536;
	or.b64  	%rd5645, %rd5644, %rd5642;
	add.s64 	%rd5646, %rd5645, %rd5641;
	add.s64 	%rd5647, %rd5646, %rd5635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4188,%dummy}, %rd5586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4189}, %rd5586;
	}
	shf.r.wrap.b32 	%r4190, %r4189, %r4188, 19;
	shf.r.wrap.b32 	%r4191, %r4188, %r4189, 19;
	mov.b64 	%rd5648, {%r4191, %r4190};
	shf.l.wrap.b32 	%r4192, %r4188, %r4189, 3;
	shf.l.wrap.b32 	%r4193, %r4189, %r4188, 3;
	mov.b64 	%rd5649, {%r4193, %r4192};
	xor.b64  	%rd5650, %rd5648, %rd5649;
	shr.u64 	%rd5651, %rd5586, 6;
	xor.b64  	%rd5652, %rd5650, %rd5651;
	shf.r.wrap.b32 	%r4194, %r3851, %r3850, 1;
	shf.r.wrap.b32 	%r4195, %r3850, %r3851, 1;
	mov.b64 	%rd5653, {%r4195, %r4194};
	shf.r.wrap.b32 	%r4196, %r3851, %r3850, 8;
	shf.r.wrap.b32 	%r4197, %r3850, %r3851, 8;
	mov.b64 	%rd5654, {%r4197, %r4196};
	xor.b64  	%rd5655, %rd5653, %rd5654;
	shr.u64 	%rd5656, %rd5105, 7;
	xor.b64  	%rd5657, %rd5655, %rd5656;
	add.s64 	%rd5658, %rd5657, %rd5068;
	add.s64 	%rd5659, %rd5658, %rd5401;
	add.s64 	%rd5660, %rd5659, %rd5652;
	add.s64 	%rd5661, %rd5660, %rd5525;
	xor.b64  	%rd5662, %rd5599, %rd5562;
	and.b64  	%rd5663, %rd5636, %rd5662;
	xor.b64  	%rd5664, %rd5663, %rd5562;
	add.s64 	%rd5665, %rd5661, %rd5664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4198,%dummy}, %rd5636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4199}, %rd5636;
	}
	shf.r.wrap.b32 	%r4200, %r4199, %r4198, 14;
	shf.r.wrap.b32 	%r4201, %r4198, %r4199, 14;
	mov.b64 	%rd5666, {%r4201, %r4200};
	shf.r.wrap.b32 	%r4202, %r4199, %r4198, 18;
	shf.r.wrap.b32 	%r4203, %r4198, %r4199, 18;
	mov.b64 	%rd5667, {%r4203, %r4202};
	xor.b64  	%rd5668, %rd5666, %rd5667;
	shf.l.wrap.b32 	%r4204, %r4198, %r4199, 23;
	shf.l.wrap.b32 	%r4205, %r4199, %r4198, 23;
	mov.b64 	%rd5669, {%r4205, %r4204};
	xor.b64  	%rd5670, %rd5668, %rd5669;
	add.s64 	%rd5671, %rd5665, %rd5670;
	add.s64 	%rd5672, %rd5671, 748580250866718886;
	add.s64 	%rd5673, %rd5672, %rd5536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4206,%dummy}, %rd5647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4207}, %rd5647;
	}
	shf.r.wrap.b32 	%r4208, %r4207, %r4206, 28;
	shf.r.wrap.b32 	%r4209, %r4206, %r4207, 28;
	mov.b64 	%rd5674, {%r4209, %r4208};
	shf.l.wrap.b32 	%r4210, %r4206, %r4207, 30;
	shf.l.wrap.b32 	%r4211, %r4207, %r4206, 30;
	mov.b64 	%rd5675, {%r4211, %r4210};
	xor.b64  	%rd5676, %rd5674, %rd5675;
	shf.l.wrap.b32 	%r4212, %r4206, %r4207, 25;
	shf.l.wrap.b32 	%r4213, %r4207, %r4206, 25;
	mov.b64 	%rd5677, {%r4213, %r4212};
	xor.b64  	%rd5678, %rd5676, %rd5677;
	and.b64  	%rd5679, %rd5647, %rd5610;
	or.b64  	%rd5680, %rd5647, %rd5610;
	and.b64  	%rd5681, %rd5680, %rd5573;
	or.b64  	%rd5682, %rd5681, %rd5679;
	add.s64 	%rd5683, %rd5682, %rd5678;
	add.s64 	%rd5684, %rd5683, %rd5672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4214,%dummy}, %rd5623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4215}, %rd5623;
	}
	shf.r.wrap.b32 	%r4216, %r4215, %r4214, 19;
	shf.r.wrap.b32 	%r4217, %r4214, %r4215, 19;
	mov.b64 	%rd5685, {%r4217, %r4216};
	shf.l.wrap.b32 	%r4218, %r4214, %r4215, 3;
	shf.l.wrap.b32 	%r4219, %r4215, %r4214, 3;
	mov.b64 	%rd5686, {%r4219, %r4218};
	xor.b64  	%rd5687, %rd5685, %rd5686;
	shr.u64 	%rd5688, %rd5623, 6;
	xor.b64  	%rd5689, %rd5687, %rd5688;
	shf.r.wrap.b32 	%r4220, %r3877, %r3876, 1;
	shf.r.wrap.b32 	%r4221, %r3876, %r3877, 1;
	mov.b64 	%rd5690, {%r4221, %r4220};
	shf.r.wrap.b32 	%r4222, %r3877, %r3876, 8;
	shf.r.wrap.b32 	%r4223, %r3876, %r3877, 8;
	mov.b64 	%rd5691, {%r4223, %r4222};
	xor.b64  	%rd5692, %rd5690, %rd5691;
	shr.u64 	%rd5693, %rd5142, 7;
	xor.b64  	%rd5694, %rd5692, %rd5693;
	add.s64 	%rd5695, %rd5694, %rd5105;
	add.s64 	%rd5696, %rd5695, %rd5438;
	add.s64 	%rd5697, %rd5696, %rd5689;
	add.s64 	%rd5698, %rd5697, %rd5562;
	xor.b64  	%rd5699, %rd5636, %rd5599;
	and.b64  	%rd5700, %rd5673, %rd5699;
	xor.b64  	%rd5701, %rd5700, %rd5599;
	add.s64 	%rd5702, %rd5698, %rd5701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4224,%dummy}, %rd5673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4225}, %rd5673;
	}
	shf.r.wrap.b32 	%r4226, %r4225, %r4224, 14;
	shf.r.wrap.b32 	%r4227, %r4224, %r4225, 14;
	mov.b64 	%rd5703, {%r4227, %r4226};
	shf.r.wrap.b32 	%r4228, %r4225, %r4224, 18;
	shf.r.wrap.b32 	%r4229, %r4224, %r4225, 18;
	mov.b64 	%rd5704, {%r4229, %r4228};
	xor.b64  	%rd5705, %rd5703, %rd5704;
	shf.l.wrap.b32 	%r4230, %r4224, %r4225, 23;
	shf.l.wrap.b32 	%r4231, %r4225, %r4224, 23;
	mov.b64 	%rd5706, {%r4231, %r4230};
	xor.b64  	%rd5707, %rd5705, %rd5706;
	add.s64 	%rd5708, %rd5702, %rd5707;
	add.s64 	%rd5709, %rd5708, 1242879168328830382;
	add.s64 	%rd5710, %rd5709, %rd5573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4232,%dummy}, %rd5684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4233}, %rd5684;
	}
	shf.r.wrap.b32 	%r4234, %r4233, %r4232, 28;
	shf.r.wrap.b32 	%r4235, %r4232, %r4233, 28;
	mov.b64 	%rd5711, {%r4235, %r4234};
	shf.l.wrap.b32 	%r4236, %r4232, %r4233, 30;
	shf.l.wrap.b32 	%r4237, %r4233, %r4232, 30;
	mov.b64 	%rd5712, {%r4237, %r4236};
	xor.b64  	%rd5713, %rd5711, %rd5712;
	shf.l.wrap.b32 	%r4238, %r4232, %r4233, 25;
	shf.l.wrap.b32 	%r4239, %r4233, %r4232, 25;
	mov.b64 	%rd5714, {%r4239, %r4238};
	xor.b64  	%rd5715, %rd5713, %rd5714;
	and.b64  	%rd5716, %rd5684, %rd5647;
	or.b64  	%rd5717, %rd5684, %rd5647;
	and.b64  	%rd5718, %rd5717, %rd5610;
	or.b64  	%rd5719, %rd5718, %rd5716;
	add.s64 	%rd5720, %rd5719, %rd5715;
	add.s64 	%rd5721, %rd5720, %rd5709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4240,%dummy}, %rd5660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4241}, %rd5660;
	}
	shf.r.wrap.b32 	%r4242, %r4241, %r4240, 19;
	shf.r.wrap.b32 	%r4243, %r4240, %r4241, 19;
	mov.b64 	%rd5722, {%r4243, %r4242};
	shf.l.wrap.b32 	%r4244, %r4240, %r4241, 3;
	shf.l.wrap.b32 	%r4245, %r4241, %r4240, 3;
	mov.b64 	%rd5723, {%r4245, %r4244};
	xor.b64  	%rd5724, %rd5722, %rd5723;
	shr.u64 	%rd5725, %rd5660, 6;
	xor.b64  	%rd5726, %rd5724, %rd5725;
	shf.r.wrap.b32 	%r4246, %r3903, %r3902, 1;
	shf.r.wrap.b32 	%r4247, %r3902, %r3903, 1;
	mov.b64 	%rd5727, {%r4247, %r4246};
	shf.r.wrap.b32 	%r4248, %r3903, %r3902, 8;
	shf.r.wrap.b32 	%r4249, %r3902, %r3903, 8;
	mov.b64 	%rd5728, {%r4249, %r4248};
	xor.b64  	%rd5729, %rd5727, %rd5728;
	shr.u64 	%rd5730, %rd5179, 7;
	xor.b64  	%rd5731, %rd5729, %rd5730;
	add.s64 	%rd5732, %rd5731, %rd5142;
	add.s64 	%rd5733, %rd5732, %rd5475;
	add.s64 	%rd5734, %rd5733, %rd5726;
	add.s64 	%rd5735, %rd5734, %rd5599;
	xor.b64  	%rd5736, %rd5673, %rd5636;
	and.b64  	%rd5737, %rd5710, %rd5736;
	xor.b64  	%rd5738, %rd5737, %rd5636;
	add.s64 	%rd5739, %rd5735, %rd5738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4250,%dummy}, %rd5710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4251}, %rd5710;
	}
	shf.r.wrap.b32 	%r4252, %r4251, %r4250, 14;
	shf.r.wrap.b32 	%r4253, %r4250, %r4251, 14;
	mov.b64 	%rd5740, {%r4253, %r4252};
	shf.r.wrap.b32 	%r4254, %r4251, %r4250, 18;
	shf.r.wrap.b32 	%r4255, %r4250, %r4251, 18;
	mov.b64 	%rd5741, {%r4255, %r4254};
	xor.b64  	%rd5742, %rd5740, %rd5741;
	shf.l.wrap.b32 	%r4256, %r4250, %r4251, 23;
	shf.l.wrap.b32 	%r4257, %r4251, %r4250, 23;
	mov.b64 	%rd5743, {%r4257, %r4256};
	xor.b64  	%rd5744, %rd5742, %rd5743;
	add.s64 	%rd5745, %rd5739, %rd5744;
	add.s64 	%rd5746, %rd5745, 1977374033974150939;
	add.s64 	%rd5747, %rd5746, %rd5610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4258,%dummy}, %rd5721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4259}, %rd5721;
	}
	shf.r.wrap.b32 	%r4260, %r4259, %r4258, 28;
	shf.r.wrap.b32 	%r4261, %r4258, %r4259, 28;
	mov.b64 	%rd5748, {%r4261, %r4260};
	shf.l.wrap.b32 	%r4262, %r4258, %r4259, 30;
	shf.l.wrap.b32 	%r4263, %r4259, %r4258, 30;
	mov.b64 	%rd5749, {%r4263, %r4262};
	xor.b64  	%rd5750, %rd5748, %rd5749;
	shf.l.wrap.b32 	%r4264, %r4258, %r4259, 25;
	shf.l.wrap.b32 	%r4265, %r4259, %r4258, 25;
	mov.b64 	%rd5751, {%r4265, %r4264};
	xor.b64  	%rd5752, %rd5750, %rd5751;
	and.b64  	%rd5753, %rd5721, %rd5684;
	or.b64  	%rd5754, %rd5721, %rd5684;
	and.b64  	%rd5755, %rd5754, %rd5647;
	or.b64  	%rd5756, %rd5755, %rd5753;
	add.s64 	%rd5757, %rd5756, %rd5752;
	add.s64 	%rd5758, %rd5757, %rd5746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd5697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4267}, %rd5697;
	}
	shf.r.wrap.b32 	%r4268, %r4267, %r4266, 19;
	shf.r.wrap.b32 	%r4269, %r4266, %r4267, 19;
	mov.b64 	%rd5759, {%r4269, %r4268};
	shf.l.wrap.b32 	%r4270, %r4266, %r4267, 3;
	shf.l.wrap.b32 	%r4271, %r4267, %r4266, 3;
	mov.b64 	%rd5760, {%r4271, %r4270};
	xor.b64  	%rd5761, %rd5759, %rd5760;
	shr.u64 	%rd5762, %rd5697, 6;
	xor.b64  	%rd5763, %rd5761, %rd5762;
	shf.r.wrap.b32 	%r4272, %r3929, %r3928, 1;
	shf.r.wrap.b32 	%r4273, %r3928, %r3929, 1;
	mov.b64 	%rd5764, {%r4273, %r4272};
	shf.r.wrap.b32 	%r4274, %r3929, %r3928, 8;
	shf.r.wrap.b32 	%r4275, %r3928, %r3929, 8;
	mov.b64 	%rd5765, {%r4275, %r4274};
	xor.b64  	%rd5766, %rd5764, %rd5765;
	shr.u64 	%rd5767, %rd5216, 7;
	xor.b64  	%rd5768, %rd5766, %rd5767;
	add.s64 	%rd5769, %rd5768, %rd5179;
	add.s64 	%rd5770, %rd5769, %rd5512;
	add.s64 	%rd5771, %rd5770, %rd5763;
	add.s64 	%rd5772, %rd5771, %rd5636;
	xor.b64  	%rd5773, %rd5710, %rd5673;
	and.b64  	%rd5774, %rd5747, %rd5773;
	xor.b64  	%rd5775, %rd5774, %rd5673;
	add.s64 	%rd5776, %rd5772, %rd5775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4276,%dummy}, %rd5747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4277}, %rd5747;
	}
	shf.r.wrap.b32 	%r4278, %r4277, %r4276, 14;
	shf.r.wrap.b32 	%r4279, %r4276, %r4277, 14;
	mov.b64 	%rd5777, {%r4279, %r4278};
	shf.r.wrap.b32 	%r4280, %r4277, %r4276, 18;
	shf.r.wrap.b32 	%r4281, %r4276, %r4277, 18;
	mov.b64 	%rd5778, {%r4281, %r4280};
	xor.b64  	%rd5779, %rd5777, %rd5778;
	shf.l.wrap.b32 	%r4282, %r4276, %r4277, 23;
	shf.l.wrap.b32 	%r4283, %r4277, %r4276, 23;
	mov.b64 	%rd5780, {%r4283, %r4282};
	xor.b64  	%rd5781, %rd5779, %rd5780;
	add.s64 	%rd5782, %rd5776, %rd5781;
	add.s64 	%rd5783, %rd5782, 2944078676154940804;
	add.s64 	%rd5784, %rd5783, %rd5647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4284,%dummy}, %rd5758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4285}, %rd5758;
	}
	shf.r.wrap.b32 	%r4286, %r4285, %r4284, 28;
	shf.r.wrap.b32 	%r4287, %r4284, %r4285, 28;
	mov.b64 	%rd5785, {%r4287, %r4286};
	shf.l.wrap.b32 	%r4288, %r4284, %r4285, 30;
	shf.l.wrap.b32 	%r4289, %r4285, %r4284, 30;
	mov.b64 	%rd5786, {%r4289, %r4288};
	xor.b64  	%rd5787, %rd5785, %rd5786;
	shf.l.wrap.b32 	%r4290, %r4284, %r4285, 25;
	shf.l.wrap.b32 	%r4291, %r4285, %r4284, 25;
	mov.b64 	%rd5788, {%r4291, %r4290};
	xor.b64  	%rd5789, %rd5787, %rd5788;
	and.b64  	%rd5790, %rd5758, %rd5721;
	or.b64  	%rd5791, %rd5758, %rd5721;
	and.b64  	%rd5792, %rd5791, %rd5684;
	or.b64  	%rd5793, %rd5792, %rd5790;
	add.s64 	%rd5794, %rd5793, %rd5789;
	add.s64 	%rd5795, %rd5794, %rd5783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4292,%dummy}, %rd5734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4293}, %rd5734;
	}
	shf.r.wrap.b32 	%r4294, %r4293, %r4292, 19;
	shf.r.wrap.b32 	%r4295, %r4292, %r4293, 19;
	mov.b64 	%rd5796, {%r4295, %r4294};
	shf.l.wrap.b32 	%r4296, %r4292, %r4293, 3;
	shf.l.wrap.b32 	%r4297, %r4293, %r4292, 3;
	mov.b64 	%rd5797, {%r4297, %r4296};
	xor.b64  	%rd5798, %rd5796, %rd5797;
	shr.u64 	%rd5799, %rd5734, 6;
	xor.b64  	%rd5800, %rd5798, %rd5799;
	shf.r.wrap.b32 	%r4298, %r3955, %r3954, 1;
	shf.r.wrap.b32 	%r4299, %r3954, %r3955, 1;
	mov.b64 	%rd5801, {%r4299, %r4298};
	shf.r.wrap.b32 	%r4300, %r3955, %r3954, 8;
	shf.r.wrap.b32 	%r4301, %r3954, %r3955, 8;
	mov.b64 	%rd5802, {%r4301, %r4300};
	xor.b64  	%rd5803, %rd5801, %rd5802;
	shr.u64 	%rd5804, %rd5253, 7;
	xor.b64  	%rd5805, %rd5803, %rd5804;
	add.s64 	%rd5806, %rd5805, %rd5216;
	add.s64 	%rd5807, %rd5806, %rd5549;
	add.s64 	%rd5808, %rd5807, %rd5800;
	add.s64 	%rd5809, %rd5808, %rd5673;
	xor.b64  	%rd5810, %rd5747, %rd5710;
	and.b64  	%rd5811, %rd5784, %rd5810;
	xor.b64  	%rd5812, %rd5811, %rd5710;
	add.s64 	%rd5813, %rd5809, %rd5812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4302,%dummy}, %rd5784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4303}, %rd5784;
	}
	shf.r.wrap.b32 	%r4304, %r4303, %r4302, 14;
	shf.r.wrap.b32 	%r4305, %r4302, %r4303, 14;
	mov.b64 	%rd5814, {%r4305, %r4304};
	shf.r.wrap.b32 	%r4306, %r4303, %r4302, 18;
	shf.r.wrap.b32 	%r4307, %r4302, %r4303, 18;
	mov.b64 	%rd5815, {%r4307, %r4306};
	xor.b64  	%rd5816, %rd5814, %rd5815;
	shf.l.wrap.b32 	%r4308, %r4302, %r4303, 23;
	shf.l.wrap.b32 	%r4309, %r4303, %r4302, 23;
	mov.b64 	%rd5817, {%r4309, %r4308};
	xor.b64  	%rd5818, %rd5816, %rd5817;
	add.s64 	%rd5819, %rd5813, %rd5818;
	add.s64 	%rd5820, %rd5819, 3659926193048069267;
	add.s64 	%rd5821, %rd5820, %rd5684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4310,%dummy}, %rd5795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4311}, %rd5795;
	}
	shf.r.wrap.b32 	%r4312, %r4311, %r4310, 28;
	shf.r.wrap.b32 	%r4313, %r4310, %r4311, 28;
	mov.b64 	%rd5822, {%r4313, %r4312};
	shf.l.wrap.b32 	%r4314, %r4310, %r4311, 30;
	shf.l.wrap.b32 	%r4315, %r4311, %r4310, 30;
	mov.b64 	%rd5823, {%r4315, %r4314};
	xor.b64  	%rd5824, %rd5822, %rd5823;
	shf.l.wrap.b32 	%r4316, %r4310, %r4311, 25;
	shf.l.wrap.b32 	%r4317, %r4311, %r4310, 25;
	mov.b64 	%rd5825, {%r4317, %r4316};
	xor.b64  	%rd5826, %rd5824, %rd5825;
	and.b64  	%rd5827, %rd5795, %rd5758;
	or.b64  	%rd5828, %rd5795, %rd5758;
	and.b64  	%rd5829, %rd5828, %rd5721;
	or.b64  	%rd5830, %rd5829, %rd5827;
	add.s64 	%rd5831, %rd5830, %rd5826;
	add.s64 	%rd5832, %rd5831, %rd5820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4318,%dummy}, %rd5771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4319}, %rd5771;
	}
	shf.r.wrap.b32 	%r4320, %r4319, %r4318, 19;
	shf.r.wrap.b32 	%r4321, %r4318, %r4319, 19;
	mov.b64 	%rd5833, {%r4321, %r4320};
	shf.l.wrap.b32 	%r4322, %r4318, %r4319, 3;
	shf.l.wrap.b32 	%r4323, %r4319, %r4318, 3;
	mov.b64 	%rd5834, {%r4323, %r4322};
	xor.b64  	%rd5835, %rd5833, %rd5834;
	shr.u64 	%rd5836, %rd5771, 6;
	xor.b64  	%rd5837, %rd5835, %rd5836;
	shf.r.wrap.b32 	%r4324, %r3981, %r3980, 1;
	shf.r.wrap.b32 	%r4325, %r3980, %r3981, 1;
	mov.b64 	%rd5838, {%r4325, %r4324};
	shf.r.wrap.b32 	%r4326, %r3981, %r3980, 8;
	shf.r.wrap.b32 	%r4327, %r3980, %r3981, 8;
	mov.b64 	%rd5839, {%r4327, %r4326};
	xor.b64  	%rd5840, %rd5838, %rd5839;
	shr.u64 	%rd5841, %rd5290, 7;
	xor.b64  	%rd5842, %rd5840, %rd5841;
	add.s64 	%rd5843, %rd5842, %rd5253;
	add.s64 	%rd5844, %rd5843, %rd5586;
	add.s64 	%rd5845, %rd5844, %rd5837;
	add.s64 	%rd5846, %rd5845, %rd5710;
	xor.b64  	%rd5847, %rd5784, %rd5747;
	and.b64  	%rd5848, %rd5821, %rd5847;
	xor.b64  	%rd5849, %rd5848, %rd5747;
	add.s64 	%rd5850, %rd5846, %rd5849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4328,%dummy}, %rd5821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4329}, %rd5821;
	}
	shf.r.wrap.b32 	%r4330, %r4329, %r4328, 14;
	shf.r.wrap.b32 	%r4331, %r4328, %r4329, 14;
	mov.b64 	%rd5851, {%r4331, %r4330};
	shf.r.wrap.b32 	%r4332, %r4329, %r4328, 18;
	shf.r.wrap.b32 	%r4333, %r4328, %r4329, 18;
	mov.b64 	%rd5852, {%r4333, %r4332};
	xor.b64  	%rd5853, %rd5851, %rd5852;
	shf.l.wrap.b32 	%r4334, %r4328, %r4329, 23;
	shf.l.wrap.b32 	%r4335, %r4329, %r4328, 23;
	mov.b64 	%rd5854, {%r4335, %r4334};
	xor.b64  	%rd5855, %rd5853, %rd5854;
	add.s64 	%rd5856, %rd5850, %rd5855;
	add.s64 	%rd5857, %rd5856, 4368137639120453308;
	add.s64 	%rd5858, %rd5857, %rd5721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4336,%dummy}, %rd5832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4337}, %rd5832;
	}
	shf.r.wrap.b32 	%r4338, %r4337, %r4336, 28;
	shf.r.wrap.b32 	%r4339, %r4336, %r4337, 28;
	mov.b64 	%rd5859, {%r4339, %r4338};
	shf.l.wrap.b32 	%r4340, %r4336, %r4337, 30;
	shf.l.wrap.b32 	%r4341, %r4337, %r4336, 30;
	mov.b64 	%rd5860, {%r4341, %r4340};
	xor.b64  	%rd5861, %rd5859, %rd5860;
	shf.l.wrap.b32 	%r4342, %r4336, %r4337, 25;
	shf.l.wrap.b32 	%r4343, %r4337, %r4336, 25;
	mov.b64 	%rd5862, {%r4343, %r4342};
	xor.b64  	%rd5863, %rd5861, %rd5862;
	and.b64  	%rd5864, %rd5832, %rd5795;
	or.b64  	%rd5865, %rd5832, %rd5795;
	and.b64  	%rd5866, %rd5865, %rd5758;
	or.b64  	%rd5867, %rd5866, %rd5864;
	add.s64 	%rd5868, %rd5867, %rd5863;
	add.s64 	%rd5869, %rd5868, %rd5857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4344,%dummy}, %rd5808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4345}, %rd5808;
	}
	shf.r.wrap.b32 	%r4346, %r4345, %r4344, 19;
	shf.r.wrap.b32 	%r4347, %r4344, %r4345, 19;
	mov.b64 	%rd5870, {%r4347, %r4346};
	shf.l.wrap.b32 	%r4348, %r4344, %r4345, 3;
	shf.l.wrap.b32 	%r4349, %r4345, %r4344, 3;
	mov.b64 	%rd5871, {%r4349, %r4348};
	xor.b64  	%rd5872, %rd5870, %rd5871;
	shr.u64 	%rd5873, %rd5808, 6;
	xor.b64  	%rd5874, %rd5872, %rd5873;
	shf.r.wrap.b32 	%r4350, %r4007, %r4006, 1;
	shf.r.wrap.b32 	%r4351, %r4006, %r4007, 1;
	mov.b64 	%rd5875, {%r4351, %r4350};
	shf.r.wrap.b32 	%r4352, %r4007, %r4006, 8;
	shf.r.wrap.b32 	%r4353, %r4006, %r4007, 8;
	mov.b64 	%rd5876, {%r4353, %r4352};
	xor.b64  	%rd5877, %rd5875, %rd5876;
	shr.u64 	%rd5878, %rd5327, 7;
	xor.b64  	%rd5879, %rd5877, %rd5878;
	add.s64 	%rd5880, %rd5879, %rd5290;
	add.s64 	%rd5881, %rd5880, %rd5623;
	add.s64 	%rd5882, %rd5881, %rd5874;
	add.s64 	%rd5883, %rd5882, %rd5747;
	xor.b64  	%rd5884, %rd5821, %rd5784;
	and.b64  	%rd5885, %rd5858, %rd5884;
	xor.b64  	%rd5886, %rd5885, %rd5784;
	add.s64 	%rd5887, %rd5883, %rd5886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4354,%dummy}, %rd5858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4355}, %rd5858;
	}
	shf.r.wrap.b32 	%r4356, %r4355, %r4354, 14;
	shf.r.wrap.b32 	%r4357, %r4354, %r4355, 14;
	mov.b64 	%rd5888, {%r4357, %r4356};
	shf.r.wrap.b32 	%r4358, %r4355, %r4354, 18;
	shf.r.wrap.b32 	%r4359, %r4354, %r4355, 18;
	mov.b64 	%rd5889, {%r4359, %r4358};
	xor.b64  	%rd5890, %rd5888, %rd5889;
	shf.l.wrap.b32 	%r4360, %r4354, %r4355, 23;
	shf.l.wrap.b32 	%r4361, %r4355, %r4354, 23;
	mov.b64 	%rd5891, {%r4361, %r4360};
	xor.b64  	%rd5892, %rd5890, %rd5891;
	add.s64 	%rd5893, %rd5887, %rd5892;
	add.s64 	%rd5894, %rd5893, 4836135668995329356;
	add.s64 	%rd5895, %rd5894, %rd5758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4362,%dummy}, %rd5869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4363}, %rd5869;
	}
	shf.r.wrap.b32 	%r4364, %r4363, %r4362, 28;
	shf.r.wrap.b32 	%r4365, %r4362, %r4363, 28;
	mov.b64 	%rd5896, {%r4365, %r4364};
	shf.l.wrap.b32 	%r4366, %r4362, %r4363, 30;
	shf.l.wrap.b32 	%r4367, %r4363, %r4362, 30;
	mov.b64 	%rd5897, {%r4367, %r4366};
	xor.b64  	%rd5898, %rd5896, %rd5897;
	shf.l.wrap.b32 	%r4368, %r4362, %r4363, 25;
	shf.l.wrap.b32 	%r4369, %r4363, %r4362, 25;
	mov.b64 	%rd5899, {%r4369, %r4368};
	xor.b64  	%rd5900, %rd5898, %rd5899;
	and.b64  	%rd5901, %rd5869, %rd5832;
	or.b64  	%rd5902, %rd5869, %rd5832;
	and.b64  	%rd5903, %rd5902, %rd5795;
	or.b64  	%rd5904, %rd5903, %rd5901;
	add.s64 	%rd5905, %rd5904, %rd5900;
	add.s64 	%rd5906, %rd5905, %rd5894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4370,%dummy}, %rd5845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4371}, %rd5845;
	}
	shf.r.wrap.b32 	%r4372, %r4371, %r4370, 19;
	shf.r.wrap.b32 	%r4373, %r4370, %r4371, 19;
	mov.b64 	%rd5907, {%r4373, %r4372};
	shf.l.wrap.b32 	%r4374, %r4370, %r4371, 3;
	shf.l.wrap.b32 	%r4375, %r4371, %r4370, 3;
	mov.b64 	%rd5908, {%r4375, %r4374};
	xor.b64  	%rd5909, %rd5907, %rd5908;
	shr.u64 	%rd5910, %rd5845, 6;
	xor.b64  	%rd5911, %rd5909, %rd5910;
	shf.r.wrap.b32 	%r4376, %r4033, %r4032, 1;
	shf.r.wrap.b32 	%r4377, %r4032, %r4033, 1;
	mov.b64 	%rd5912, {%r4377, %r4376};
	shf.r.wrap.b32 	%r4378, %r4033, %r4032, 8;
	shf.r.wrap.b32 	%r4379, %r4032, %r4033, 8;
	mov.b64 	%rd5913, {%r4379, %r4378};
	xor.b64  	%rd5914, %rd5912, %rd5913;
	shr.u64 	%rd5915, %rd5364, 7;
	xor.b64  	%rd5916, %rd5914, %rd5915;
	add.s64 	%rd5917, %rd5916, %rd5327;
	add.s64 	%rd5918, %rd5917, %rd5660;
	add.s64 	%rd5919, %rd5918, %rd5911;
	add.s64 	%rd5920, %rd5919, %rd5784;
	xor.b64  	%rd5921, %rd5858, %rd5821;
	and.b64  	%rd5922, %rd5895, %rd5921;
	xor.b64  	%rd5923, %rd5922, %rd5821;
	add.s64 	%rd5924, %rd5920, %rd5923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4380,%dummy}, %rd5895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4381}, %rd5895;
	}
	shf.r.wrap.b32 	%r4382, %r4381, %r4380, 14;
	shf.r.wrap.b32 	%r4383, %r4380, %r4381, 14;
	mov.b64 	%rd5925, {%r4383, %r4382};
	shf.r.wrap.b32 	%r4384, %r4381, %r4380, 18;
	shf.r.wrap.b32 	%r4385, %r4380, %r4381, 18;
	mov.b64 	%rd5926, {%r4385, %r4384};
	xor.b64  	%rd5927, %rd5925, %rd5926;
	shf.l.wrap.b32 	%r4386, %r4380, %r4381, 23;
	shf.l.wrap.b32 	%r4387, %r4381, %r4380, 23;
	mov.b64 	%rd5928, {%r4387, %r4386};
	xor.b64  	%rd5929, %rd5927, %rd5928;
	add.s64 	%rd5930, %rd5924, %rd5929;
	add.s64 	%rd5931, %rd5930, 5532061633213252278;
	add.s64 	%rd5932, %rd5931, %rd5795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4388,%dummy}, %rd5906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4389}, %rd5906;
	}
	shf.r.wrap.b32 	%r4390, %r4389, %r4388, 28;
	shf.r.wrap.b32 	%r4391, %r4388, %r4389, 28;
	mov.b64 	%rd5933, {%r4391, %r4390};
	shf.l.wrap.b32 	%r4392, %r4388, %r4389, 30;
	shf.l.wrap.b32 	%r4393, %r4389, %r4388, 30;
	mov.b64 	%rd5934, {%r4393, %r4392};
	xor.b64  	%rd5935, %rd5933, %rd5934;
	shf.l.wrap.b32 	%r4394, %r4388, %r4389, 25;
	shf.l.wrap.b32 	%r4395, %r4389, %r4388, 25;
	mov.b64 	%rd5936, {%r4395, %r4394};
	xor.b64  	%rd5937, %rd5935, %rd5936;
	and.b64  	%rd5938, %rd5906, %rd5869;
	or.b64  	%rd5939, %rd5906, %rd5869;
	and.b64  	%rd5940, %rd5939, %rd5832;
	or.b64  	%rd5941, %rd5940, %rd5938;
	add.s64 	%rd5942, %rd5941, %rd5937;
	add.s64 	%rd5943, %rd5942, %rd5931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4396,%dummy}, %rd5882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4397}, %rd5882;
	}
	shf.r.wrap.b32 	%r4398, %r4397, %r4396, 19;
	shf.r.wrap.b32 	%r4399, %r4396, %r4397, 19;
	mov.b64 	%rd5944, {%r4399, %r4398};
	shf.l.wrap.b32 	%r4400, %r4396, %r4397, 3;
	shf.l.wrap.b32 	%r4401, %r4397, %r4396, 3;
	mov.b64 	%rd5945, {%r4401, %r4400};
	xor.b64  	%rd5946, %rd5944, %rd5945;
	shr.u64 	%rd5947, %rd5882, 6;
	xor.b64  	%rd5948, %rd5946, %rd5947;
	shf.r.wrap.b32 	%r4402, %r4059, %r4058, 1;
	shf.r.wrap.b32 	%r4403, %r4058, %r4059, 1;
	mov.b64 	%rd5949, {%r4403, %r4402};
	shf.r.wrap.b32 	%r4404, %r4059, %r4058, 8;
	shf.r.wrap.b32 	%r4405, %r4058, %r4059, 8;
	mov.b64 	%rd5950, {%r4405, %r4404};
	xor.b64  	%rd5951, %rd5949, %rd5950;
	shr.u64 	%rd5952, %rd5401, 7;
	xor.b64  	%rd5953, %rd5951, %rd5952;
	add.s64 	%rd5954, %rd5953, %rd5364;
	add.s64 	%rd5955, %rd5954, %rd5697;
	add.s64 	%rd5956, %rd5955, %rd5948;
	add.s64 	%rd5957, %rd5956, %rd5821;
	xor.b64  	%rd5958, %rd5895, %rd5858;
	and.b64  	%rd5959, %rd5932, %rd5958;
	xor.b64  	%rd5960, %rd5959, %rd5858;
	add.s64 	%rd5961, %rd5957, %rd5960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd5932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4407}, %rd5932;
	}
	shf.r.wrap.b32 	%r4408, %r4407, %r4406, 14;
	shf.r.wrap.b32 	%r4409, %r4406, %r4407, 14;
	mov.b64 	%rd5962, {%r4409, %r4408};
	shf.r.wrap.b32 	%r4410, %r4407, %r4406, 18;
	shf.r.wrap.b32 	%r4411, %r4406, %r4407, 18;
	mov.b64 	%rd5963, {%r4411, %r4410};
	xor.b64  	%rd5964, %rd5962, %rd5963;
	shf.l.wrap.b32 	%r4412, %r4406, %r4407, 23;
	shf.l.wrap.b32 	%r4413, %r4407, %r4406, 23;
	mov.b64 	%rd5965, {%r4413, %r4412};
	xor.b64  	%rd5966, %rd5964, %rd5965;
	add.s64 	%rd5967, %rd5961, %rd5966;
	add.s64 	%rd5968, %rd5967, 6448918945643986474;
	add.s64 	%rd5969, %rd5968, %rd5832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd5943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4415}, %rd5943;
	}
	shf.r.wrap.b32 	%r4416, %r4415, %r4414, 28;
	shf.r.wrap.b32 	%r4417, %r4414, %r4415, 28;
	mov.b64 	%rd5970, {%r4417, %r4416};
	shf.l.wrap.b32 	%r4418, %r4414, %r4415, 30;
	shf.l.wrap.b32 	%r4419, %r4415, %r4414, 30;
	mov.b64 	%rd5971, {%r4419, %r4418};
	xor.b64  	%rd5972, %rd5970, %rd5971;
	shf.l.wrap.b32 	%r4420, %r4414, %r4415, 25;
	shf.l.wrap.b32 	%r4421, %r4415, %r4414, 25;
	mov.b64 	%rd5973, {%r4421, %r4420};
	xor.b64  	%rd5974, %rd5972, %rd5973;
	and.b64  	%rd5975, %rd5943, %rd5906;
	or.b64  	%rd5976, %rd5943, %rd5906;
	and.b64  	%rd5977, %rd5976, %rd5869;
	or.b64  	%rd5978, %rd5977, %rd5975;
	add.s64 	%rd5979, %rd5978, %rd5974;
	add.s64 	%rd5980, %rd5979, %rd5968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4422,%dummy}, %rd5919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4423}, %rd5919;
	}
	shf.r.wrap.b32 	%r4424, %r4423, %r4422, 19;
	shf.r.wrap.b32 	%r4425, %r4422, %r4423, 19;
	mov.b64 	%rd5981, {%r4425, %r4424};
	shf.l.wrap.b32 	%r4426, %r4422, %r4423, 3;
	shf.l.wrap.b32 	%r4427, %r4423, %r4422, 3;
	mov.b64 	%rd5982, {%r4427, %r4426};
	xor.b64  	%rd5983, %rd5981, %rd5982;
	shr.u64 	%rd5984, %rd5919, 6;
	xor.b64  	%rd5985, %rd5983, %rd5984;
	shf.r.wrap.b32 	%r4428, %r4085, %r4084, 1;
	shf.r.wrap.b32 	%r4429, %r4084, %r4085, 1;
	mov.b64 	%rd5986, {%r4429, %r4428};
	shf.r.wrap.b32 	%r4430, %r4085, %r4084, 8;
	shf.r.wrap.b32 	%r4431, %r4084, %r4085, 8;
	mov.b64 	%rd5987, {%r4431, %r4430};
	xor.b64  	%rd5988, %rd5986, %rd5987;
	shr.u64 	%rd5989, %rd5438, 7;
	xor.b64  	%rd5990, %rd5988, %rd5989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4432,%dummy}, %rd5969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4433}, %rd5969;
	}
	shf.r.wrap.b32 	%r4434, %r4433, %r4432, 14;
	shf.r.wrap.b32 	%r4435, %r4432, %r4433, 14;
	mov.b64 	%rd5991, {%r4435, %r4434};
	shf.r.wrap.b32 	%r4436, %r4433, %r4432, 18;
	shf.r.wrap.b32 	%r4437, %r4432, %r4433, 18;
	mov.b64 	%rd5992, {%r4437, %r4436};
	xor.b64  	%rd5993, %rd5991, %rd5992;
	shf.l.wrap.b32 	%r4438, %r4432, %r4433, 23;
	shf.l.wrap.b32 	%r4439, %r4433, %r4432, 23;
	mov.b64 	%rd5994, {%r4439, %r4438};
	xor.b64  	%rd5995, %rd5993, %rd5994;
	xor.b64  	%rd5996, %rd5932, %rd5895;
	and.b64  	%rd5997, %rd5969, %rd5996;
	xor.b64  	%rd5998, %rd5997, %rd5895;
	add.s64 	%rd5999, %rd5401, %rd5990;
	add.s64 	%rd6000, %rd5999, %rd5734;
	add.s64 	%rd6001, %rd6000, %rd5985;
	add.s64 	%rd6002, %rd6001, %rd5858;
	add.s64 	%rd6003, %rd6002, %rd5998;
	add.s64 	%rd6004, %rd6003, %rd5995;
	add.s64 	%rd6005, %rd6004, 6902733635092675308;
	add.s64 	%rd6006, %rd6005, %rd5869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4440,%dummy}, %rd5980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4441}, %rd5980;
	}
	shf.r.wrap.b32 	%r4442, %r4441, %r4440, 28;
	shf.r.wrap.b32 	%r4443, %r4440, %r4441, 28;
	mov.b64 	%rd6007, {%r4443, %r4442};
	shf.l.wrap.b32 	%r4444, %r4440, %r4441, 30;
	shf.l.wrap.b32 	%r4445, %r4441, %r4440, 30;
	mov.b64 	%rd6008, {%r4445, %r4444};
	xor.b64  	%rd6009, %rd6007, %rd6008;
	shf.l.wrap.b32 	%r4446, %r4440, %r4441, 25;
	shf.l.wrap.b32 	%r4447, %r4441, %r4440, 25;
	mov.b64 	%rd6010, {%r4447, %r4446};
	xor.b64  	%rd6011, %rd6009, %rd6010;
	and.b64  	%rd6012, %rd5980, %rd5943;
	or.b64  	%rd6013, %rd5980, %rd5943;
	and.b64  	%rd6014, %rd6013, %rd5906;
	or.b64  	%rd6015, %rd6014, %rd6012;
	add.s64 	%rd6016, %rd6015, %rd6011;
	add.s64 	%rd6017, %rd6016, %rd6005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4448,%dummy}, %rd5956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4449}, %rd5956;
	}
	shf.r.wrap.b32 	%r4450, %r4449, %r4448, 19;
	shf.r.wrap.b32 	%r4451, %r4448, %r4449, 19;
	mov.b64 	%rd6018, {%r4451, %r4450};
	shf.l.wrap.b32 	%r4452, %r4448, %r4449, 3;
	shf.l.wrap.b32 	%r4453, %r4449, %r4448, 3;
	mov.b64 	%rd6019, {%r4453, %r4452};
	xor.b64  	%rd6020, %rd6018, %rd6019;
	shr.u64 	%rd6021, %rd5956, 6;
	xor.b64  	%rd6022, %rd6020, %rd6021;
	shf.r.wrap.b32 	%r4454, %r4111, %r4110, 1;
	shf.r.wrap.b32 	%r4455, %r4110, %r4111, 1;
	mov.b64 	%rd6023, {%r4455, %r4454};
	shf.r.wrap.b32 	%r4456, %r4111, %r4110, 8;
	shf.r.wrap.b32 	%r4457, %r4110, %r4111, 8;
	mov.b64 	%rd6024, {%r4457, %r4456};
	xor.b64  	%rd6025, %rd6023, %rd6024;
	shr.u64 	%rd6026, %rd5475, 7;
	xor.b64  	%rd6027, %rd6025, %rd6026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4458,%dummy}, %rd6006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4459}, %rd6006;
	}
	shf.r.wrap.b32 	%r4460, %r4459, %r4458, 14;
	shf.r.wrap.b32 	%r4461, %r4458, %r4459, 14;
	mov.b64 	%rd6028, {%r4461, %r4460};
	shf.r.wrap.b32 	%r4462, %r4459, %r4458, 18;
	shf.r.wrap.b32 	%r4463, %r4458, %r4459, 18;
	mov.b64 	%rd6029, {%r4463, %r4462};
	xor.b64  	%rd6030, %rd6028, %rd6029;
	shf.l.wrap.b32 	%r4464, %r4458, %r4459, 23;
	shf.l.wrap.b32 	%r4465, %r4459, %r4458, 23;
	mov.b64 	%rd6031, {%r4465, %r4464};
	xor.b64  	%rd6032, %rd6030, %rd6031;
	xor.b64  	%rd6033, %rd5969, %rd5932;
	and.b64  	%rd6034, %rd6006, %rd6033;
	xor.b64  	%rd6035, %rd6034, %rd5932;
	add.s64 	%rd6036, %rd5438, %rd6027;
	add.s64 	%rd6037, %rd6036, %rd5771;
	add.s64 	%rd6038, %rd6037, %rd6022;
	add.s64 	%rd6039, %rd6038, %rd5895;
	add.s64 	%rd6040, %rd6039, %rd6035;
	add.s64 	%rd6041, %rd6040, %rd6032;
	add.s64 	%rd6042, %rd6041, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4466,%dummy}, %rd6017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4467}, %rd6017;
	}
	shf.r.wrap.b32 	%r4468, %r4467, %r4466, 28;
	shf.r.wrap.b32 	%r4469, %r4466, %r4467, 28;
	mov.b64 	%rd6043, {%r4469, %r4468};
	shf.l.wrap.b32 	%r4470, %r4466, %r4467, 30;
	shf.l.wrap.b32 	%r4471, %r4467, %r4466, 30;
	mov.b64 	%rd6044, {%r4471, %r4470};
	xor.b64  	%rd6045, %rd6043, %rd6044;
	shf.l.wrap.b32 	%r4472, %r4466, %r4467, 25;
	shf.l.wrap.b32 	%r4473, %r4467, %r4466, 25;
	mov.b64 	%rd6046, {%r4473, %r4472};
	xor.b64  	%rd6047, %rd6045, %rd6046;
	and.b64  	%rd6048, %rd6017, %rd5980;
	or.b64  	%rd6049, %rd6017, %rd5980;
	and.b64  	%rd6050, %rd6049, %rd5943;
	or.b64  	%rd6051, %rd6050, %rd6048;
	add.s64 	%rd6052, %rd6047, %rd3313;
	add.s64 	%rd6053, %rd6052, %rd6051;
	add.s64 	%rd6054, %rd6053, %rd6042;
	st.local.u64 	[%rd7], %rd6054;
	add.s64 	%rd6055, %rd6017, %rd3319;
	st.local.u64 	[%rd7+8], %rd6055;
	add.s64 	%rd6056, %rd5980, %rd3322;
	st.local.u64 	[%rd7+16], %rd6056;
	add.s64 	%rd6057, %rd5943, %rd3311;
	st.local.u64 	[%rd7+24], %rd6057;
	add.s64 	%rd6058, %rd5906, %rd3297;
	add.s64 	%rd6059, %rd6058, %rd6042;
	st.local.u64 	[%rd7+32], %rd6059;
	add.s64 	%rd6060, %rd6006, %rd3305;
	st.local.u64 	[%rd7+40], %rd6060;
	add.s64 	%rd6061, %rd5969, %rd3304;
	st.local.u64 	[%rd7+48], %rd6061;
	add.s64 	%rd6062, %rd5932, %rd3295;
	st.local.u64 	[%rd7+56], %rd6062;
	cvt.u64.u32 	%rd6063, %r9;
	add.s64 	%rd9308, %rd9308, %rd6063;
	add.u64 	%rd6064, %SP, 0;
	add.s64 	%rd9290, %rd6064, %rd6063;
	mov.u32 	%r4474, 16;
	sub.s32 	%r10281, %r4474, %r9;

$L__BB3_18:
	setp.lt.u32 	%p14, %r10281, 128;
	@%p14 bra 	$L__BB3_23;

$L__BB3_19:
	and.b64  	%rd6065, %rd9290, 7;
	setp.eq.s64 	%p15, %rd6065, 0;
	@%p15 bra 	$L__BB3_21;

	ld.local.u8 	%rd6066, [%rd9308];
	shl.b64 	%rd6067, %rd6066, 56;
	ld.local.u8 	%rd6068, [%rd9308+1];
	shl.b64 	%rd6069, %rd6068, 48;
	or.b64  	%rd6070, %rd6069, %rd6067;
	ld.local.u8 	%rd6071, [%rd9308+2];
	shl.b64 	%rd6072, %rd6071, 40;
	or.b64  	%rd6073, %rd6070, %rd6072;
	ld.local.u8 	%rd6074, [%rd9308+3];
	shl.b64 	%rd6075, %rd6074, 32;
	or.b64  	%rd6076, %rd6073, %rd6075;
	ld.local.u8 	%r4475, [%rd9308+4];
	mul.wide.u32 	%rd6077, %r4475, 16777216;
	or.b64  	%rd6078, %rd6076, %rd6077;
	ld.local.u8 	%r4476, [%rd9308+5];
	mul.wide.u32 	%rd6079, %r4476, 65536;
	or.b64  	%rd6080, %rd6078, %rd6079;
	ld.local.u8 	%r4477, [%rd9308+6];
	mul.wide.u32 	%rd6081, %r4477, 256;
	or.b64  	%rd6082, %rd6080, %rd6081;
	ld.local.u8 	%rd6083, [%rd9308+7];
	or.b64  	%rd9307, %rd6082, %rd6083;
	ld.local.u8 	%rd6084, [%rd9308+8];
	shl.b64 	%rd6085, %rd6084, 56;
	ld.local.u8 	%rd6086, [%rd9308+9];
	shl.b64 	%rd6087, %rd6086, 48;
	or.b64  	%rd6088, %rd6087, %rd6085;
	ld.local.u8 	%rd6089, [%rd9308+10];
	shl.b64 	%rd6090, %rd6089, 40;
	or.b64  	%rd6091, %rd6088, %rd6090;
	ld.local.u8 	%rd6092, [%rd9308+11];
	shl.b64 	%rd6093, %rd6092, 32;
	or.b64  	%rd6094, %rd6091, %rd6093;
	ld.local.u8 	%r4478, [%rd9308+12];
	mul.wide.u32 	%rd6095, %r4478, 16777216;
	or.b64  	%rd6096, %rd6094, %rd6095;
	ld.local.u8 	%r4479, [%rd9308+13];
	mul.wide.u32 	%rd6097, %r4479, 65536;
	or.b64  	%rd6098, %rd6096, %rd6097;
	ld.local.u8 	%r4480, [%rd9308+14];
	mul.wide.u32 	%rd6099, %r4480, 256;
	or.b64  	%rd6100, %rd6098, %rd6099;
	ld.local.u8 	%rd6101, [%rd9308+15];
	or.b64  	%rd9306, %rd6100, %rd6101;
	ld.local.u8 	%rd6102, [%rd9308+16];
	shl.b64 	%rd6103, %rd6102, 56;
	ld.local.u8 	%rd6104, [%rd9308+17];
	shl.b64 	%rd6105, %rd6104, 48;
	or.b64  	%rd6106, %rd6105, %rd6103;
	ld.local.u8 	%rd6107, [%rd9308+18];
	shl.b64 	%rd6108, %rd6107, 40;
	or.b64  	%rd6109, %rd6106, %rd6108;
	ld.local.u8 	%rd6110, [%rd9308+19];
	shl.b64 	%rd6111, %rd6110, 32;
	or.b64  	%rd6112, %rd6109, %rd6111;
	ld.local.u8 	%r4481, [%rd9308+20];
	mul.wide.u32 	%rd6113, %r4481, 16777216;
	or.b64  	%rd6114, %rd6112, %rd6113;
	ld.local.u8 	%r4482, [%rd9308+21];
	mul.wide.u32 	%rd6115, %r4482, 65536;
	or.b64  	%rd6116, %rd6114, %rd6115;
	ld.local.u8 	%r4483, [%rd9308+22];
	mul.wide.u32 	%rd6117, %r4483, 256;
	or.b64  	%rd6118, %rd6116, %rd6117;
	ld.local.u8 	%rd6119, [%rd9308+23];
	or.b64  	%rd9305, %rd6118, %rd6119;
	ld.local.u8 	%rd6120, [%rd9308+24];
	shl.b64 	%rd6121, %rd6120, 56;
	ld.local.u8 	%rd6122, [%rd9308+25];
	shl.b64 	%rd6123, %rd6122, 48;
	or.b64  	%rd6124, %rd6123, %rd6121;
	ld.local.u8 	%rd6125, [%rd9308+26];
	shl.b64 	%rd6126, %rd6125, 40;
	or.b64  	%rd6127, %rd6124, %rd6126;
	ld.local.u8 	%rd6128, [%rd9308+27];
	shl.b64 	%rd6129, %rd6128, 32;
	or.b64  	%rd6130, %rd6127, %rd6129;
	ld.local.u8 	%r4484, [%rd9308+28];
	mul.wide.u32 	%rd6131, %r4484, 16777216;
	or.b64  	%rd6132, %rd6130, %rd6131;
	ld.local.u8 	%r4485, [%rd9308+29];
	mul.wide.u32 	%rd6133, %r4485, 65536;
	or.b64  	%rd6134, %rd6132, %rd6133;
	ld.local.u8 	%r4486, [%rd9308+30];
	mul.wide.u32 	%rd6135, %r4486, 256;
	or.b64  	%rd6136, %rd6134, %rd6135;
	ld.local.u8 	%rd6137, [%rd9308+31];
	or.b64  	%rd9304, %rd6136, %rd6137;
	ld.local.u8 	%rd6138, [%rd9308+32];
	shl.b64 	%rd6139, %rd6138, 56;
	ld.local.u8 	%rd6140, [%rd9308+33];
	shl.b64 	%rd6141, %rd6140, 48;
	or.b64  	%rd6142, %rd6141, %rd6139;
	ld.local.u8 	%rd6143, [%rd9308+34];
	shl.b64 	%rd6144, %rd6143, 40;
	or.b64  	%rd6145, %rd6142, %rd6144;
	ld.local.u8 	%rd6146, [%rd9308+35];
	shl.b64 	%rd6147, %rd6146, 32;
	or.b64  	%rd6148, %rd6145, %rd6147;
	ld.local.u8 	%r4487, [%rd9308+36];
	mul.wide.u32 	%rd6149, %r4487, 16777216;
	or.b64  	%rd6150, %rd6148, %rd6149;
	ld.local.u8 	%r4488, [%rd9308+37];
	mul.wide.u32 	%rd6151, %r4488, 65536;
	or.b64  	%rd6152, %rd6150, %rd6151;
	ld.local.u8 	%r4489, [%rd9308+38];
	mul.wide.u32 	%rd6153, %r4489, 256;
	or.b64  	%rd6154, %rd6152, %rd6153;
	ld.local.u8 	%rd6155, [%rd9308+39];
	or.b64  	%rd9303, %rd6154, %rd6155;
	ld.local.u8 	%rd6156, [%rd9308+40];
	shl.b64 	%rd6157, %rd6156, 56;
	ld.local.u8 	%rd6158, [%rd9308+41];
	shl.b64 	%rd6159, %rd6158, 48;
	or.b64  	%rd6160, %rd6159, %rd6157;
	ld.local.u8 	%rd6161, [%rd9308+42];
	shl.b64 	%rd6162, %rd6161, 40;
	or.b64  	%rd6163, %rd6160, %rd6162;
	ld.local.u8 	%rd6164, [%rd9308+43];
	shl.b64 	%rd6165, %rd6164, 32;
	or.b64  	%rd6166, %rd6163, %rd6165;
	ld.local.u8 	%r4490, [%rd9308+44];
	mul.wide.u32 	%rd6167, %r4490, 16777216;
	or.b64  	%rd6168, %rd6166, %rd6167;
	ld.local.u8 	%r4491, [%rd9308+45];
	mul.wide.u32 	%rd6169, %r4491, 65536;
	or.b64  	%rd6170, %rd6168, %rd6169;
	ld.local.u8 	%r4492, [%rd9308+46];
	mul.wide.u32 	%rd6171, %r4492, 256;
	or.b64  	%rd6172, %rd6170, %rd6171;
	ld.local.u8 	%rd6173, [%rd9308+47];
	or.b64  	%rd9302, %rd6172, %rd6173;
	ld.local.u8 	%rd6174, [%rd9308+48];
	shl.b64 	%rd6175, %rd6174, 56;
	ld.local.u8 	%rd6176, [%rd9308+49];
	shl.b64 	%rd6177, %rd6176, 48;
	or.b64  	%rd6178, %rd6177, %rd6175;
	ld.local.u8 	%rd6179, [%rd9308+50];
	shl.b64 	%rd6180, %rd6179, 40;
	or.b64  	%rd6181, %rd6178, %rd6180;
	ld.local.u8 	%rd6182, [%rd9308+51];
	shl.b64 	%rd6183, %rd6182, 32;
	or.b64  	%rd6184, %rd6181, %rd6183;
	ld.local.u8 	%r4493, [%rd9308+52];
	mul.wide.u32 	%rd6185, %r4493, 16777216;
	or.b64  	%rd6186, %rd6184, %rd6185;
	ld.local.u8 	%r4494, [%rd9308+53];
	mul.wide.u32 	%rd6187, %r4494, 65536;
	or.b64  	%rd6188, %rd6186, %rd6187;
	ld.local.u8 	%r4495, [%rd9308+54];
	mul.wide.u32 	%rd6189, %r4495, 256;
	or.b64  	%rd6190, %rd6188, %rd6189;
	ld.local.u8 	%rd6191, [%rd9308+55];
	or.b64  	%rd9301, %rd6190, %rd6191;
	ld.local.u8 	%rd6192, [%rd9308+56];
	shl.b64 	%rd6193, %rd6192, 56;
	ld.local.u8 	%rd6194, [%rd9308+57];
	shl.b64 	%rd6195, %rd6194, 48;
	or.b64  	%rd6196, %rd6195, %rd6193;
	ld.local.u8 	%rd6197, [%rd9308+58];
	shl.b64 	%rd6198, %rd6197, 40;
	or.b64  	%rd6199, %rd6196, %rd6198;
	ld.local.u8 	%rd6200, [%rd9308+59];
	shl.b64 	%rd6201, %rd6200, 32;
	or.b64  	%rd6202, %rd6199, %rd6201;
	ld.local.u8 	%r4496, [%rd9308+60];
	mul.wide.u32 	%rd6203, %r4496, 16777216;
	or.b64  	%rd6204, %rd6202, %rd6203;
	ld.local.u8 	%r4497, [%rd9308+61];
	mul.wide.u32 	%rd6205, %r4497, 65536;
	or.b64  	%rd6206, %rd6204, %rd6205;
	ld.local.u8 	%r4498, [%rd9308+62];
	mul.wide.u32 	%rd6207, %r4498, 256;
	or.b64  	%rd6208, %rd6206, %rd6207;
	ld.local.u8 	%rd6209, [%rd9308+63];
	or.b64  	%rd9300, %rd6208, %rd6209;
	ld.local.u8 	%rd6210, [%rd9308+64];
	shl.b64 	%rd6211, %rd6210, 56;
	ld.local.u8 	%rd6212, [%rd9308+65];
	shl.b64 	%rd6213, %rd6212, 48;
	or.b64  	%rd6214, %rd6213, %rd6211;
	ld.local.u8 	%rd6215, [%rd9308+66];
	shl.b64 	%rd6216, %rd6215, 40;
	or.b64  	%rd6217, %rd6214, %rd6216;
	ld.local.u8 	%rd6218, [%rd9308+67];
	shl.b64 	%rd6219, %rd6218, 32;
	or.b64  	%rd6220, %rd6217, %rd6219;
	ld.local.u8 	%r4499, [%rd9308+68];
	mul.wide.u32 	%rd6221, %r4499, 16777216;
	or.b64  	%rd6222, %rd6220, %rd6221;
	ld.local.u8 	%r4500, [%rd9308+69];
	mul.wide.u32 	%rd6223, %r4500, 65536;
	or.b64  	%rd6224, %rd6222, %rd6223;
	ld.local.u8 	%r4501, [%rd9308+70];
	mul.wide.u32 	%rd6225, %r4501, 256;
	or.b64  	%rd6226, %rd6224, %rd6225;
	ld.local.u8 	%rd6227, [%rd9308+71];
	or.b64  	%rd9299, %rd6226, %rd6227;
	ld.local.u8 	%rd6228, [%rd9308+72];
	shl.b64 	%rd6229, %rd6228, 56;
	ld.local.u8 	%rd6230, [%rd9308+73];
	shl.b64 	%rd6231, %rd6230, 48;
	or.b64  	%rd6232, %rd6231, %rd6229;
	ld.local.u8 	%rd6233, [%rd9308+74];
	shl.b64 	%rd6234, %rd6233, 40;
	or.b64  	%rd6235, %rd6232, %rd6234;
	ld.local.u8 	%rd6236, [%rd9308+75];
	shl.b64 	%rd6237, %rd6236, 32;
	or.b64  	%rd6238, %rd6235, %rd6237;
	ld.local.u8 	%r4502, [%rd9308+76];
	mul.wide.u32 	%rd6239, %r4502, 16777216;
	or.b64  	%rd6240, %rd6238, %rd6239;
	ld.local.u8 	%r4503, [%rd9308+77];
	mul.wide.u32 	%rd6241, %r4503, 65536;
	or.b64  	%rd6242, %rd6240, %rd6241;
	ld.local.u8 	%r4504, [%rd9308+78];
	mul.wide.u32 	%rd6243, %r4504, 256;
	or.b64  	%rd6244, %rd6242, %rd6243;
	ld.local.u8 	%rd6245, [%rd9308+79];
	or.b64  	%rd9298, %rd6244, %rd6245;
	ld.local.u8 	%rd6246, [%rd9308+80];
	shl.b64 	%rd6247, %rd6246, 56;
	ld.local.u8 	%rd6248, [%rd9308+81];
	shl.b64 	%rd6249, %rd6248, 48;
	or.b64  	%rd6250, %rd6249, %rd6247;
	ld.local.u8 	%rd6251, [%rd9308+82];
	shl.b64 	%rd6252, %rd6251, 40;
	or.b64  	%rd6253, %rd6250, %rd6252;
	ld.local.u8 	%rd6254, [%rd9308+83];
	shl.b64 	%rd6255, %rd6254, 32;
	or.b64  	%rd6256, %rd6253, %rd6255;
	ld.local.u8 	%r4505, [%rd9308+84];
	mul.wide.u32 	%rd6257, %r4505, 16777216;
	or.b64  	%rd6258, %rd6256, %rd6257;
	ld.local.u8 	%r4506, [%rd9308+85];
	mul.wide.u32 	%rd6259, %r4506, 65536;
	or.b64  	%rd6260, %rd6258, %rd6259;
	ld.local.u8 	%r4507, [%rd9308+86];
	mul.wide.u32 	%rd6261, %r4507, 256;
	or.b64  	%rd6262, %rd6260, %rd6261;
	ld.local.u8 	%rd6263, [%rd9308+87];
	or.b64  	%rd9297, %rd6262, %rd6263;
	ld.local.u8 	%rd6264, [%rd9308+88];
	shl.b64 	%rd6265, %rd6264, 56;
	ld.local.u8 	%rd6266, [%rd9308+89];
	shl.b64 	%rd6267, %rd6266, 48;
	or.b64  	%rd6268, %rd6267, %rd6265;
	ld.local.u8 	%rd6269, [%rd9308+90];
	shl.b64 	%rd6270, %rd6269, 40;
	or.b64  	%rd6271, %rd6268, %rd6270;
	ld.local.u8 	%rd6272, [%rd9308+91];
	shl.b64 	%rd6273, %rd6272, 32;
	or.b64  	%rd6274, %rd6271, %rd6273;
	ld.local.u8 	%r4508, [%rd9308+92];
	mul.wide.u32 	%rd6275, %r4508, 16777216;
	or.b64  	%rd6276, %rd6274, %rd6275;
	ld.local.u8 	%r4509, [%rd9308+93];
	mul.wide.u32 	%rd6277, %r4509, 65536;
	or.b64  	%rd6278, %rd6276, %rd6277;
	ld.local.u8 	%r4510, [%rd9308+94];
	mul.wide.u32 	%rd6279, %r4510, 256;
	or.b64  	%rd6280, %rd6278, %rd6279;
	ld.local.u8 	%rd6281, [%rd9308+95];
	or.b64  	%rd9296, %rd6280, %rd6281;
	ld.local.u8 	%rd6282, [%rd9308+96];
	shl.b64 	%rd6283, %rd6282, 56;
	ld.local.u8 	%rd6284, [%rd9308+97];
	shl.b64 	%rd6285, %rd6284, 48;
	or.b64  	%rd6286, %rd6285, %rd6283;
	ld.local.u8 	%rd6287, [%rd9308+98];
	shl.b64 	%rd6288, %rd6287, 40;
	or.b64  	%rd6289, %rd6286, %rd6288;
	ld.local.u8 	%rd6290, [%rd9308+99];
	shl.b64 	%rd6291, %rd6290, 32;
	or.b64  	%rd6292, %rd6289, %rd6291;
	ld.local.u8 	%r4511, [%rd9308+100];
	mul.wide.u32 	%rd6293, %r4511, 16777216;
	or.b64  	%rd6294, %rd6292, %rd6293;
	ld.local.u8 	%r4512, [%rd9308+101];
	mul.wide.u32 	%rd6295, %r4512, 65536;
	or.b64  	%rd6296, %rd6294, %rd6295;
	ld.local.u8 	%r4513, [%rd9308+102];
	mul.wide.u32 	%rd6297, %r4513, 256;
	or.b64  	%rd6298, %rd6296, %rd6297;
	ld.local.u8 	%rd6299, [%rd9308+103];
	or.b64  	%rd9295, %rd6298, %rd6299;
	ld.local.u8 	%rd6300, [%rd9308+104];
	shl.b64 	%rd6301, %rd6300, 56;
	ld.local.u8 	%rd6302, [%rd9308+105];
	shl.b64 	%rd6303, %rd6302, 48;
	or.b64  	%rd6304, %rd6303, %rd6301;
	ld.local.u8 	%rd6305, [%rd9308+106];
	shl.b64 	%rd6306, %rd6305, 40;
	or.b64  	%rd6307, %rd6304, %rd6306;
	ld.local.u8 	%rd6308, [%rd9308+107];
	shl.b64 	%rd6309, %rd6308, 32;
	or.b64  	%rd6310, %rd6307, %rd6309;
	ld.local.u8 	%r4514, [%rd9308+108];
	mul.wide.u32 	%rd6311, %r4514, 16777216;
	or.b64  	%rd6312, %rd6310, %rd6311;
	ld.local.u8 	%r4515, [%rd9308+109];
	mul.wide.u32 	%rd6313, %r4515, 65536;
	or.b64  	%rd6314, %rd6312, %rd6313;
	ld.local.u8 	%r4516, [%rd9308+110];
	mul.wide.u32 	%rd6315, %r4516, 256;
	or.b64  	%rd6316, %rd6314, %rd6315;
	ld.local.u8 	%rd6317, [%rd9308+111];
	or.b64  	%rd9294, %rd6316, %rd6317;
	ld.local.u8 	%rd6318, [%rd9308+112];
	shl.b64 	%rd6319, %rd6318, 56;
	ld.local.u8 	%rd6320, [%rd9308+113];
	shl.b64 	%rd6321, %rd6320, 48;
	or.b64  	%rd6322, %rd6321, %rd6319;
	ld.local.u8 	%rd6323, [%rd9308+114];
	shl.b64 	%rd6324, %rd6323, 40;
	or.b64  	%rd6325, %rd6322, %rd6324;
	ld.local.u8 	%rd6326, [%rd9308+115];
	shl.b64 	%rd6327, %rd6326, 32;
	or.b64  	%rd6328, %rd6325, %rd6327;
	ld.local.u8 	%r4517, [%rd9308+116];
	mul.wide.u32 	%rd6329, %r4517, 16777216;
	or.b64  	%rd6330, %rd6328, %rd6329;
	ld.local.u8 	%r4518, [%rd9308+117];
	mul.wide.u32 	%rd6331, %r4518, 65536;
	or.b64  	%rd6332, %rd6330, %rd6331;
	ld.local.u8 	%r4519, [%rd9308+118];
	mul.wide.u32 	%rd6333, %r4519, 256;
	or.b64  	%rd6334, %rd6332, %rd6333;
	ld.local.u8 	%rd6335, [%rd9308+119];
	or.b64  	%rd9293, %rd6334, %rd6335;
	ld.local.u8 	%rd6336, [%rd9308+120];
	ld.local.u8 	%rd6337, [%rd9308+121];
	ld.local.u8 	%rd6338, [%rd9308+122];
	ld.local.u8 	%rd6339, [%rd9308+123];
	ld.local.u8 	%r4520, [%rd9308+124];
	mul.wide.u32 	%rd6340, %r4520, 16777216;
	ld.local.u8 	%r4521, [%rd9308+125];
	mul.wide.u32 	%rd6341, %r4521, 65536;
	ld.local.u8 	%r4522, [%rd9308+126];
	mul.wide.u32 	%rd6342, %r4522, 256;
	ld.local.u8 	%rd6343, [%rd9308+127];
	shl.b64 	%rd6344, %rd6337, 48;
	shl.b64 	%rd6345, %rd6336, 56;
	shl.b64 	%rd6346, %rd6338, 40;
	or.b64  	%rd6347, %rd6344, %rd6345;
	shl.b64 	%rd6348, %rd6339, 32;
	or.b64  	%rd6349, %rd6347, %rd6346;
	or.b64  	%rd6350, %rd6349, %rd6348;
	or.b64  	%rd6351, %rd6350, %rd6340;
	or.b64  	%rd6352, %rd6351, %rd6341;
	or.b64  	%rd6353, %rd6352, %rd6342;
	or.b64  	%rd9292, %rd6353, %rd6343;
	bra.uni 	$L__BB3_22;

$L__BB3_21:
	ld.local.u64 	%rd6354, [%rd9308];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4523, %temp}, %rd6354;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4524}, %rd6354;
	}
	mov.u32 	%r4525, 291;
	mov.u32 	%r4526, 0;
	prmt.b32 	%r4527, %r4523, %r4526, %r4525;
	prmt.b32 	%r4528, %r4524, %r4526, %r4525;
	mov.b64 	%rd9307, {%r4528, %r4527};
	ld.local.u64 	%rd6355, [%rd9308+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4529, %temp}, %rd6355;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4530}, %rd6355;
	}
	prmt.b32 	%r4531, %r4529, %r4526, %r4525;
	prmt.b32 	%r4532, %r4530, %r4526, %r4525;
	mov.b64 	%rd9306, {%r4532, %r4531};
	ld.local.u64 	%rd6356, [%rd9308+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4533, %temp}, %rd6356;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4534}, %rd6356;
	}
	prmt.b32 	%r4535, %r4533, %r4526, %r4525;
	prmt.b32 	%r4536, %r4534, %r4526, %r4525;
	mov.b64 	%rd9305, {%r4536, %r4535};
	ld.local.u64 	%rd6357, [%rd9308+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4537, %temp}, %rd6357;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4538}, %rd6357;
	}
	prmt.b32 	%r4539, %r4537, %r4526, %r4525;
	prmt.b32 	%r4540, %r4538, %r4526, %r4525;
	mov.b64 	%rd9304, {%r4540, %r4539};
	ld.local.u64 	%rd6358, [%rd9308+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4541, %temp}, %rd6358;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4542}, %rd6358;
	}
	prmt.b32 	%r4543, %r4541, %r4526, %r4525;
	prmt.b32 	%r4544, %r4542, %r4526, %r4525;
	mov.b64 	%rd9303, {%r4544, %r4543};
	ld.local.u64 	%rd6359, [%rd9308+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4545, %temp}, %rd6359;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4546}, %rd6359;
	}
	prmt.b32 	%r4547, %r4545, %r4526, %r4525;
	prmt.b32 	%r4548, %r4546, %r4526, %r4525;
	mov.b64 	%rd9302, {%r4548, %r4547};
	ld.local.u64 	%rd6360, [%rd9308+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4549, %temp}, %rd6360;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4550}, %rd6360;
	}
	prmt.b32 	%r4551, %r4549, %r4526, %r4525;
	prmt.b32 	%r4552, %r4550, %r4526, %r4525;
	mov.b64 	%rd9301, {%r4552, %r4551};
	ld.local.u64 	%rd6361, [%rd9308+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4553, %temp}, %rd6361;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4554}, %rd6361;
	}
	prmt.b32 	%r4555, %r4553, %r4526, %r4525;
	prmt.b32 	%r4556, %r4554, %r4526, %r4525;
	mov.b64 	%rd9300, {%r4556, %r4555};
	ld.local.u64 	%rd6362, [%rd9308+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4557, %temp}, %rd6362;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4558}, %rd6362;
	}
	prmt.b32 	%r4559, %r4557, %r4526, %r4525;
	prmt.b32 	%r4560, %r4558, %r4526, %r4525;
	mov.b64 	%rd9299, {%r4560, %r4559};
	ld.local.u64 	%rd6363, [%rd9308+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4561, %temp}, %rd6363;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4562}, %rd6363;
	}
	prmt.b32 	%r4563, %r4561, %r4526, %r4525;
	prmt.b32 	%r4564, %r4562, %r4526, %r4525;
	mov.b64 	%rd9298, {%r4564, %r4563};
	ld.local.u64 	%rd6364, [%rd9308+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4565, %temp}, %rd6364;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4566}, %rd6364;
	}
	prmt.b32 	%r4567, %r4565, %r4526, %r4525;
	prmt.b32 	%r4568, %r4566, %r4526, %r4525;
	mov.b64 	%rd9297, {%r4568, %r4567};
	ld.local.u64 	%rd6365, [%rd9308+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4569, %temp}, %rd6365;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4570}, %rd6365;
	}
	prmt.b32 	%r4571, %r4569, %r4526, %r4525;
	prmt.b32 	%r4572, %r4570, %r4526, %r4525;
	mov.b64 	%rd9296, {%r4572, %r4571};
	ld.local.u64 	%rd6366, [%rd9308+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4573, %temp}, %rd6366;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4574}, %rd6366;
	}
	prmt.b32 	%r4575, %r4573, %r4526, %r4525;
	prmt.b32 	%r4576, %r4574, %r4526, %r4525;
	mov.b64 	%rd9295, {%r4576, %r4575};
	ld.local.u64 	%rd6367, [%rd9308+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4577, %temp}, %rd6367;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4578}, %rd6367;
	}
	prmt.b32 	%r4579, %r4577, %r4526, %r4525;
	prmt.b32 	%r4580, %r4578, %r4526, %r4525;
	mov.b64 	%rd9294, {%r4580, %r4579};
	ld.local.u64 	%rd6368, [%rd9308+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4581, %temp}, %rd6368;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4582}, %rd6368;
	}
	prmt.b32 	%r4583, %r4581, %r4526, %r4525;
	prmt.b32 	%r4584, %r4582, %r4526, %r4525;
	mov.b64 	%rd9293, {%r4584, %r4583};
	ld.local.u64 	%rd6369, [%rd9308+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4585, %temp}, %rd6369;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4586}, %rd6369;
	}
	prmt.b32 	%r4587, %r4585, %r4526, %r4525;
	prmt.b32 	%r4588, %r4586, %r4526, %r4525;
	mov.b64 	%rd9292, {%r4588, %r4587};

$L__BB3_22:
	ld.local.u64 	%rd6370, [%rd7+56];
	add.s64 	%rd6371, %rd9307, %rd6370;
	ld.local.u64 	%rd6372, [%rd7+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4589,%dummy}, %rd6372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4590}, %rd6372;
	}
	shf.r.wrap.b32 	%r4591, %r4590, %r4589, 14;
	shf.r.wrap.b32 	%r4592, %r4589, %r4590, 14;
	mov.b64 	%rd6373, {%r4592, %r4591};
	shf.r.wrap.b32 	%r4593, %r4590, %r4589, 18;
	shf.r.wrap.b32 	%r4594, %r4589, %r4590, 18;
	mov.b64 	%rd6374, {%r4594, %r4593};
	xor.b64  	%rd6375, %rd6373, %rd6374;
	shf.l.wrap.b32 	%r4595, %r4589, %r4590, 23;
	shf.l.wrap.b32 	%r4596, %r4590, %r4589, 23;
	mov.b64 	%rd6376, {%r4596, %r4595};
	xor.b64  	%rd6377, %rd6375, %rd6376;
	add.s64 	%rd6378, %rd6371, %rd6377;
	ld.local.u64 	%rd6379, [%rd7+48];
	ld.local.u64 	%rd6380, [%rd7+40];
	xor.b64  	%rd6381, %rd6379, %rd6380;
	and.b64  	%rd6382, %rd6381, %rd6372;
	xor.b64  	%rd6383, %rd6382, %rd6379;
	add.s64 	%rd6384, %rd6378, %rd6383;
	add.s64 	%rd6385, %rd6384, 4794697086780616226;
	ld.local.u64 	%rd6386, [%rd7+24];
	add.s64 	%rd6387, %rd6385, %rd6386;
	ld.local.u64 	%rd6388, [%rd7];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4597,%dummy}, %rd6388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4598}, %rd6388;
	}
	shf.r.wrap.b32 	%r4599, %r4598, %r4597, 28;
	shf.r.wrap.b32 	%r4600, %r4597, %r4598, 28;
	mov.b64 	%rd6389, {%r4600, %r4599};
	shf.l.wrap.b32 	%r4601, %r4597, %r4598, 30;
	shf.l.wrap.b32 	%r4602, %r4598, %r4597, 30;
	mov.b64 	%rd6390, {%r4602, %r4601};
	xor.b64  	%rd6391, %rd6389, %rd6390;
	shf.l.wrap.b32 	%r4603, %r4597, %r4598, 25;
	shf.l.wrap.b32 	%r4604, %r4598, %r4597, 25;
	mov.b64 	%rd6392, {%r4604, %r4603};
	xor.b64  	%rd6393, %rd6391, %rd6392;
	ld.local.u64 	%rd6394, [%rd7+8];
	and.b64  	%rd6395, %rd6394, %rd6388;
	or.b64  	%rd6396, %rd6394, %rd6388;
	ld.local.u64 	%rd6397, [%rd7+16];
	and.b64  	%rd6398, %rd6397, %rd6396;
	or.b64  	%rd6399, %rd6398, %rd6395;
	add.s64 	%rd6400, %rd6399, %rd6393;
	add.s64 	%rd6401, %rd6400, %rd6385;
	add.s64 	%rd6402, %rd9306, %rd6379;
	xor.b64  	%rd6403, %rd6380, %rd6372;
	and.b64  	%rd6404, %rd6387, %rd6403;
	xor.b64  	%rd6405, %rd6404, %rd6380;
	add.s64 	%rd6406, %rd6402, %rd6405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4605,%dummy}, %rd6387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4606}, %rd6387;
	}
	shf.r.wrap.b32 	%r4607, %r4606, %r4605, 14;
	shf.r.wrap.b32 	%r4608, %r4605, %r4606, 14;
	mov.b64 	%rd6407, {%r4608, %r4607};
	shf.r.wrap.b32 	%r4609, %r4606, %r4605, 18;
	shf.r.wrap.b32 	%r4610, %r4605, %r4606, 18;
	mov.b64 	%rd6408, {%r4610, %r4609};
	xor.b64  	%rd6409, %rd6407, %rd6408;
	shf.l.wrap.b32 	%r4611, %r4605, %r4606, 23;
	shf.l.wrap.b32 	%r4612, %r4606, %r4605, 23;
	mov.b64 	%rd6410, {%r4612, %r4611};
	xor.b64  	%rd6411, %rd6409, %rd6410;
	add.s64 	%rd6412, %rd6406, %rd6411;
	add.s64 	%rd6413, %rd6412, 8158064640168781261;
	add.s64 	%rd6414, %rd6413, %rd6397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4613,%dummy}, %rd6401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4614}, %rd6401;
	}
	shf.r.wrap.b32 	%r4615, %r4614, %r4613, 28;
	shf.r.wrap.b32 	%r4616, %r4613, %r4614, 28;
	mov.b64 	%rd6415, {%r4616, %r4615};
	shf.l.wrap.b32 	%r4617, %r4613, %r4614, 30;
	shf.l.wrap.b32 	%r4618, %r4614, %r4613, 30;
	mov.b64 	%rd6416, {%r4618, %r4617};
	xor.b64  	%rd6417, %rd6415, %rd6416;
	shf.l.wrap.b32 	%r4619, %r4613, %r4614, 25;
	shf.l.wrap.b32 	%r4620, %r4614, %r4613, 25;
	mov.b64 	%rd6418, {%r4620, %r4619};
	xor.b64  	%rd6419, %rd6417, %rd6418;
	and.b64  	%rd6420, %rd6401, %rd6388;
	or.b64  	%rd6421, %rd6401, %rd6388;
	and.b64  	%rd6422, %rd6421, %rd6394;
	or.b64  	%rd6423, %rd6422, %rd6420;
	add.s64 	%rd6424, %rd6423, %rd6419;
	add.s64 	%rd6425, %rd6424, %rd6413;
	add.s64 	%rd6426, %rd9305, %rd6380;
	xor.b64  	%rd6427, %rd6387, %rd6372;
	and.b64  	%rd6428, %rd6414, %rd6427;
	xor.b64  	%rd6429, %rd6428, %rd6372;
	add.s64 	%rd6430, %rd6426, %rd6429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4621,%dummy}, %rd6414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4622}, %rd6414;
	}
	shf.r.wrap.b32 	%r4623, %r4622, %r4621, 14;
	shf.r.wrap.b32 	%r4624, %r4621, %r4622, 14;
	mov.b64 	%rd6431, {%r4624, %r4623};
	shf.r.wrap.b32 	%r4625, %r4622, %r4621, 18;
	shf.r.wrap.b32 	%r4626, %r4621, %r4622, 18;
	mov.b64 	%rd6432, {%r4626, %r4625};
	xor.b64  	%rd6433, %rd6431, %rd6432;
	shf.l.wrap.b32 	%r4627, %r4621, %r4622, 23;
	shf.l.wrap.b32 	%r4628, %r4622, %r4621, 23;
	mov.b64 	%rd6434, {%r4628, %r4627};
	xor.b64  	%rd6435, %rd6433, %rd6434;
	add.s64 	%rd6436, %rd6430, %rd6435;
	add.s64 	%rd6437, %rd6436, -5349999486874862801;
	add.s64 	%rd6438, %rd6437, %rd6394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4629,%dummy}, %rd6425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4630}, %rd6425;
	}
	shf.r.wrap.b32 	%r4631, %r4630, %r4629, 28;
	shf.r.wrap.b32 	%r4632, %r4629, %r4630, 28;
	mov.b64 	%rd6439, {%r4632, %r4631};
	shf.l.wrap.b32 	%r4633, %r4629, %r4630, 30;
	shf.l.wrap.b32 	%r4634, %r4630, %r4629, 30;
	mov.b64 	%rd6440, {%r4634, %r4633};
	xor.b64  	%rd6441, %rd6439, %rd6440;
	shf.l.wrap.b32 	%r4635, %r4629, %r4630, 25;
	shf.l.wrap.b32 	%r4636, %r4630, %r4629, 25;
	mov.b64 	%rd6442, {%r4636, %r4635};
	xor.b64  	%rd6443, %rd6441, %rd6442;
	and.b64  	%rd6444, %rd6425, %rd6401;
	or.b64  	%rd6445, %rd6425, %rd6401;
	and.b64  	%rd6446, %rd6445, %rd6388;
	or.b64  	%rd6447, %rd6446, %rd6444;
	add.s64 	%rd6448, %rd6447, %rd6443;
	add.s64 	%rd6449, %rd6448, %rd6437;
	add.s64 	%rd6450, %rd9304, %rd6372;
	xor.b64  	%rd6451, %rd6414, %rd6387;
	and.b64  	%rd6452, %rd6438, %rd6451;
	xor.b64  	%rd6453, %rd6452, %rd6387;
	add.s64 	%rd6454, %rd6450, %rd6453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4637,%dummy}, %rd6438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4638}, %rd6438;
	}
	shf.r.wrap.b32 	%r4639, %r4638, %r4637, 14;
	shf.r.wrap.b32 	%r4640, %r4637, %r4638, 14;
	mov.b64 	%rd6455, {%r4640, %r4639};
	shf.r.wrap.b32 	%r4641, %r4638, %r4637, 18;
	shf.r.wrap.b32 	%r4642, %r4637, %r4638, 18;
	mov.b64 	%rd6456, {%r4642, %r4641};
	xor.b64  	%rd6457, %rd6455, %rd6456;
	shf.l.wrap.b32 	%r4643, %r4637, %r4638, 23;
	shf.l.wrap.b32 	%r4644, %r4638, %r4637, 23;
	mov.b64 	%rd6458, {%r4644, %r4643};
	xor.b64  	%rd6459, %rd6457, %rd6458;
	add.s64 	%rd6460, %rd6454, %rd6459;
	add.s64 	%rd6461, %rd6460, -1606136188198331460;
	add.s64 	%rd6462, %rd6461, %rd6388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4645,%dummy}, %rd6449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4646}, %rd6449;
	}
	shf.r.wrap.b32 	%r4647, %r4646, %r4645, 28;
	shf.r.wrap.b32 	%r4648, %r4645, %r4646, 28;
	mov.b64 	%rd6463, {%r4648, %r4647};
	shf.l.wrap.b32 	%r4649, %r4645, %r4646, 30;
	shf.l.wrap.b32 	%r4650, %r4646, %r4645, 30;
	mov.b64 	%rd6464, {%r4650, %r4649};
	xor.b64  	%rd6465, %rd6463, %rd6464;
	shf.l.wrap.b32 	%r4651, %r4645, %r4646, 25;
	shf.l.wrap.b32 	%r4652, %r4646, %r4645, 25;
	mov.b64 	%rd6466, {%r4652, %r4651};
	xor.b64  	%rd6467, %rd6465, %rd6466;
	and.b64  	%rd6468, %rd6449, %rd6425;
	or.b64  	%rd6469, %rd6449, %rd6425;
	and.b64  	%rd6470, %rd6469, %rd6401;
	or.b64  	%rd6471, %rd6470, %rd6468;
	add.s64 	%rd6472, %rd6471, %rd6467;
	add.s64 	%rd6473, %rd6472, %rd6461;
	add.s64 	%rd6474, %rd9303, %rd6387;
	xor.b64  	%rd6475, %rd6438, %rd6414;
	and.b64  	%rd6476, %rd6462, %rd6475;
	xor.b64  	%rd6477, %rd6476, %rd6414;
	add.s64 	%rd6478, %rd6474, %rd6477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4653,%dummy}, %rd6462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4654}, %rd6462;
	}
	shf.r.wrap.b32 	%r4655, %r4654, %r4653, 14;
	shf.r.wrap.b32 	%r4656, %r4653, %r4654, 14;
	mov.b64 	%rd6479, {%r4656, %r4655};
	shf.r.wrap.b32 	%r4657, %r4654, %r4653, 18;
	shf.r.wrap.b32 	%r4658, %r4653, %r4654, 18;
	mov.b64 	%rd6480, {%r4658, %r4657};
	xor.b64  	%rd6481, %rd6479, %rd6480;
	shf.l.wrap.b32 	%r4659, %r4653, %r4654, 23;
	shf.l.wrap.b32 	%r4660, %r4654, %r4653, 23;
	mov.b64 	%rd6482, {%r4660, %r4659};
	xor.b64  	%rd6483, %rd6481, %rd6482;
	add.s64 	%rd6484, %rd6478, %rd6483;
	add.s64 	%rd6485, %rd6484, 4131703408338449720;
	add.s64 	%rd6486, %rd6485, %rd6401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4661,%dummy}, %rd6473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4662}, %rd6473;
	}
	shf.r.wrap.b32 	%r4663, %r4662, %r4661, 28;
	shf.r.wrap.b32 	%r4664, %r4661, %r4662, 28;
	mov.b64 	%rd6487, {%r4664, %r4663};
	shf.l.wrap.b32 	%r4665, %r4661, %r4662, 30;
	shf.l.wrap.b32 	%r4666, %r4662, %r4661, 30;
	mov.b64 	%rd6488, {%r4666, %r4665};
	xor.b64  	%rd6489, %rd6487, %rd6488;
	shf.l.wrap.b32 	%r4667, %r4661, %r4662, 25;
	shf.l.wrap.b32 	%r4668, %r4662, %r4661, 25;
	mov.b64 	%rd6490, {%r4668, %r4667};
	xor.b64  	%rd6491, %rd6489, %rd6490;
	and.b64  	%rd6492, %rd6473, %rd6449;
	or.b64  	%rd6493, %rd6473, %rd6449;
	and.b64  	%rd6494, %rd6493, %rd6425;
	or.b64  	%rd6495, %rd6494, %rd6492;
	add.s64 	%rd6496, %rd6495, %rd6491;
	add.s64 	%rd6497, %rd6496, %rd6485;
	add.s64 	%rd6498, %rd9302, %rd6414;
	xor.b64  	%rd6499, %rd6462, %rd6438;
	and.b64  	%rd6500, %rd6486, %rd6499;
	xor.b64  	%rd6501, %rd6500, %rd6438;
	add.s64 	%rd6502, %rd6498, %rd6501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4669,%dummy}, %rd6486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4670}, %rd6486;
	}
	shf.r.wrap.b32 	%r4671, %r4670, %r4669, 14;
	shf.r.wrap.b32 	%r4672, %r4669, %r4670, 14;
	mov.b64 	%rd6503, {%r4672, %r4671};
	shf.r.wrap.b32 	%r4673, %r4670, %r4669, 18;
	shf.r.wrap.b32 	%r4674, %r4669, %r4670, 18;
	mov.b64 	%rd6504, {%r4674, %r4673};
	xor.b64  	%rd6505, %rd6503, %rd6504;
	shf.l.wrap.b32 	%r4675, %r4669, %r4670, 23;
	shf.l.wrap.b32 	%r4676, %r4670, %r4669, 23;
	mov.b64 	%rd6506, {%r4676, %r4675};
	xor.b64  	%rd6507, %rd6505, %rd6506;
	add.s64 	%rd6508, %rd6502, %rd6507;
	add.s64 	%rd6509, %rd6508, 6480981068601479193;
	add.s64 	%rd6510, %rd6509, %rd6425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4677,%dummy}, %rd6497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4678}, %rd6497;
	}
	shf.r.wrap.b32 	%r4679, %r4678, %r4677, 28;
	shf.r.wrap.b32 	%r4680, %r4677, %r4678, 28;
	mov.b64 	%rd6511, {%r4680, %r4679};
	shf.l.wrap.b32 	%r4681, %r4677, %r4678, 30;
	shf.l.wrap.b32 	%r4682, %r4678, %r4677, 30;
	mov.b64 	%rd6512, {%r4682, %r4681};
	xor.b64  	%rd6513, %rd6511, %rd6512;
	shf.l.wrap.b32 	%r4683, %r4677, %r4678, 25;
	shf.l.wrap.b32 	%r4684, %r4678, %r4677, 25;
	mov.b64 	%rd6514, {%r4684, %r4683};
	xor.b64  	%rd6515, %rd6513, %rd6514;
	and.b64  	%rd6516, %rd6497, %rd6473;
	or.b64  	%rd6517, %rd6497, %rd6473;
	and.b64  	%rd6518, %rd6517, %rd6449;
	or.b64  	%rd6519, %rd6518, %rd6516;
	add.s64 	%rd6520, %rd6519, %rd6515;
	add.s64 	%rd6521, %rd6520, %rd6509;
	add.s64 	%rd6522, %rd9301, %rd6438;
	xor.b64  	%rd6523, %rd6486, %rd6462;
	and.b64  	%rd6524, %rd6510, %rd6523;
	xor.b64  	%rd6525, %rd6524, %rd6462;
	add.s64 	%rd6526, %rd6522, %rd6525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4685,%dummy}, %rd6510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4686}, %rd6510;
	}
	shf.r.wrap.b32 	%r4687, %r4686, %r4685, 14;
	shf.r.wrap.b32 	%r4688, %r4685, %r4686, 14;
	mov.b64 	%rd6527, {%r4688, %r4687};
	shf.r.wrap.b32 	%r4689, %r4686, %r4685, 18;
	shf.r.wrap.b32 	%r4690, %r4685, %r4686, 18;
	mov.b64 	%rd6528, {%r4690, %r4689};
	xor.b64  	%rd6529, %rd6527, %rd6528;
	shf.l.wrap.b32 	%r4691, %r4685, %r4686, 23;
	shf.l.wrap.b32 	%r4692, %r4686, %r4685, 23;
	mov.b64 	%rd6530, {%r4692, %r4691};
	xor.b64  	%rd6531, %rd6529, %rd6530;
	add.s64 	%rd6532, %rd6526, %rd6531;
	add.s64 	%rd6533, %rd6532, -7908458776815382629;
	add.s64 	%rd6534, %rd6533, %rd6449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4693,%dummy}, %rd6521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4694}, %rd6521;
	}
	shf.r.wrap.b32 	%r4695, %r4694, %r4693, 28;
	shf.r.wrap.b32 	%r4696, %r4693, %r4694, 28;
	mov.b64 	%rd6535, {%r4696, %r4695};
	shf.l.wrap.b32 	%r4697, %r4693, %r4694, 30;
	shf.l.wrap.b32 	%r4698, %r4694, %r4693, 30;
	mov.b64 	%rd6536, {%r4698, %r4697};
	xor.b64  	%rd6537, %rd6535, %rd6536;
	shf.l.wrap.b32 	%r4699, %r4693, %r4694, 25;
	shf.l.wrap.b32 	%r4700, %r4694, %r4693, 25;
	mov.b64 	%rd6538, {%r4700, %r4699};
	xor.b64  	%rd6539, %rd6537, %rd6538;
	and.b64  	%rd6540, %rd6521, %rd6497;
	or.b64  	%rd6541, %rd6521, %rd6497;
	and.b64  	%rd6542, %rd6541, %rd6473;
	or.b64  	%rd6543, %rd6542, %rd6540;
	add.s64 	%rd6544, %rd6543, %rd6539;
	add.s64 	%rd6545, %rd6544, %rd6533;
	add.s64 	%rd6546, %rd9300, %rd6462;
	xor.b64  	%rd6547, %rd6510, %rd6486;
	and.b64  	%rd6548, %rd6534, %rd6547;
	xor.b64  	%rd6549, %rd6548, %rd6486;
	add.s64 	%rd6550, %rd6546, %rd6549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4701,%dummy}, %rd6534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4702}, %rd6534;
	}
	shf.r.wrap.b32 	%r4703, %r4702, %r4701, 14;
	shf.r.wrap.b32 	%r4704, %r4701, %r4702, 14;
	mov.b64 	%rd6551, {%r4704, %r4703};
	shf.r.wrap.b32 	%r4705, %r4702, %r4701, 18;
	shf.r.wrap.b32 	%r4706, %r4701, %r4702, 18;
	mov.b64 	%rd6552, {%r4706, %r4705};
	xor.b64  	%rd6553, %rd6551, %rd6552;
	shf.l.wrap.b32 	%r4707, %r4701, %r4702, 23;
	shf.l.wrap.b32 	%r4708, %r4702, %r4701, 23;
	mov.b64 	%rd6554, {%r4708, %r4707};
	xor.b64  	%rd6555, %rd6553, %rd6554;
	add.s64 	%rd6556, %rd6550, %rd6555;
	add.s64 	%rd6557, %rd6556, -6116909921290321640;
	add.s64 	%rd6558, %rd6557, %rd6473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4709,%dummy}, %rd6545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4710}, %rd6545;
	}
	shf.r.wrap.b32 	%r4711, %r4710, %r4709, 28;
	shf.r.wrap.b32 	%r4712, %r4709, %r4710, 28;
	mov.b64 	%rd6559, {%r4712, %r4711};
	shf.l.wrap.b32 	%r4713, %r4709, %r4710, 30;
	shf.l.wrap.b32 	%r4714, %r4710, %r4709, 30;
	mov.b64 	%rd6560, {%r4714, %r4713};
	xor.b64  	%rd6561, %rd6559, %rd6560;
	shf.l.wrap.b32 	%r4715, %r4709, %r4710, 25;
	shf.l.wrap.b32 	%r4716, %r4710, %r4709, 25;
	mov.b64 	%rd6562, {%r4716, %r4715};
	xor.b64  	%rd6563, %rd6561, %rd6562;
	and.b64  	%rd6564, %rd6545, %rd6521;
	or.b64  	%rd6565, %rd6545, %rd6521;
	and.b64  	%rd6566, %rd6565, %rd6497;
	or.b64  	%rd6567, %rd6566, %rd6564;
	add.s64 	%rd6568, %rd6567, %rd6563;
	add.s64 	%rd6569, %rd6568, %rd6557;
	add.s64 	%rd6570, %rd9299, %rd6486;
	xor.b64  	%rd6571, %rd6534, %rd6510;
	and.b64  	%rd6572, %rd6558, %rd6571;
	xor.b64  	%rd6573, %rd6572, %rd6510;
	add.s64 	%rd6574, %rd6570, %rd6573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4717,%dummy}, %rd6558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4718}, %rd6558;
	}
	shf.r.wrap.b32 	%r4719, %r4718, %r4717, 14;
	shf.r.wrap.b32 	%r4720, %r4717, %r4718, 14;
	mov.b64 	%rd6575, {%r4720, %r4719};
	shf.r.wrap.b32 	%r4721, %r4718, %r4717, 18;
	shf.r.wrap.b32 	%r4722, %r4717, %r4718, 18;
	mov.b64 	%rd6576, {%r4722, %r4721};
	xor.b64  	%rd6577, %rd6575, %rd6576;
	shf.l.wrap.b32 	%r4723, %r4717, %r4718, 23;
	shf.l.wrap.b32 	%r4724, %r4718, %r4717, 23;
	mov.b64 	%rd6578, {%r4724, %r4723};
	xor.b64  	%rd6579, %rd6577, %rd6578;
	add.s64 	%rd6580, %rd6574, %rd6579;
	add.s64 	%rd6581, %rd6580, -2880145864133508542;
	add.s64 	%rd6582, %rd6581, %rd6497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4725,%dummy}, %rd6569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4726}, %rd6569;
	}
	shf.r.wrap.b32 	%r4727, %r4726, %r4725, 28;
	shf.r.wrap.b32 	%r4728, %r4725, %r4726, 28;
	mov.b64 	%rd6583, {%r4728, %r4727};
	shf.l.wrap.b32 	%r4729, %r4725, %r4726, 30;
	shf.l.wrap.b32 	%r4730, %r4726, %r4725, 30;
	mov.b64 	%rd6584, {%r4730, %r4729};
	xor.b64  	%rd6585, %rd6583, %rd6584;
	shf.l.wrap.b32 	%r4731, %r4725, %r4726, 25;
	shf.l.wrap.b32 	%r4732, %r4726, %r4725, 25;
	mov.b64 	%rd6586, {%r4732, %r4731};
	xor.b64  	%rd6587, %rd6585, %rd6586;
	and.b64  	%rd6588, %rd6569, %rd6545;
	or.b64  	%rd6589, %rd6569, %rd6545;
	and.b64  	%rd6590, %rd6589, %rd6521;
	or.b64  	%rd6591, %rd6590, %rd6588;
	add.s64 	%rd6592, %rd6591, %rd6587;
	add.s64 	%rd6593, %rd6592, %rd6581;
	add.s64 	%rd6594, %rd9298, %rd6510;
	xor.b64  	%rd6595, %rd6558, %rd6534;
	and.b64  	%rd6596, %rd6582, %rd6595;
	xor.b64  	%rd6597, %rd6596, %rd6534;
	add.s64 	%rd6598, %rd6594, %rd6597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4733,%dummy}, %rd6582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4734}, %rd6582;
	}
	shf.r.wrap.b32 	%r4735, %r4734, %r4733, 14;
	shf.r.wrap.b32 	%r4736, %r4733, %r4734, 14;
	mov.b64 	%rd6599, {%r4736, %r4735};
	shf.r.wrap.b32 	%r4737, %r4734, %r4733, 18;
	shf.r.wrap.b32 	%r4738, %r4733, %r4734, 18;
	mov.b64 	%rd6600, {%r4738, %r4737};
	xor.b64  	%rd6601, %rd6599, %rd6600;
	shf.l.wrap.b32 	%r4739, %r4733, %r4734, 23;
	shf.l.wrap.b32 	%r4740, %r4734, %r4733, 23;
	mov.b64 	%rd6602, {%r4740, %r4739};
	xor.b64  	%rd6603, %rd6601, %rd6602;
	add.s64 	%rd6604, %rd6598, %rd6603;
	add.s64 	%rd6605, %rd6604, 1334009975649890238;
	add.s64 	%rd6606, %rd6605, %rd6521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4741,%dummy}, %rd6593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4742}, %rd6593;
	}
	shf.r.wrap.b32 	%r4743, %r4742, %r4741, 28;
	shf.r.wrap.b32 	%r4744, %r4741, %r4742, 28;
	mov.b64 	%rd6607, {%r4744, %r4743};
	shf.l.wrap.b32 	%r4745, %r4741, %r4742, 30;
	shf.l.wrap.b32 	%r4746, %r4742, %r4741, 30;
	mov.b64 	%rd6608, {%r4746, %r4745};
	xor.b64  	%rd6609, %rd6607, %rd6608;
	shf.l.wrap.b32 	%r4747, %r4741, %r4742, 25;
	shf.l.wrap.b32 	%r4748, %r4742, %r4741, 25;
	mov.b64 	%rd6610, {%r4748, %r4747};
	xor.b64  	%rd6611, %rd6609, %rd6610;
	and.b64  	%rd6612, %rd6593, %rd6569;
	or.b64  	%rd6613, %rd6593, %rd6569;
	and.b64  	%rd6614, %rd6613, %rd6545;
	or.b64  	%rd6615, %rd6614, %rd6612;
	add.s64 	%rd6616, %rd6615, %rd6611;
	add.s64 	%rd6617, %rd6616, %rd6605;
	add.s64 	%rd6618, %rd9297, %rd6534;
	xor.b64  	%rd6619, %rd6582, %rd6558;
	and.b64  	%rd6620, %rd6606, %rd6619;
	xor.b64  	%rd6621, %rd6620, %rd6558;
	add.s64 	%rd6622, %rd6618, %rd6621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4749,%dummy}, %rd6606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4750}, %rd6606;
	}
	shf.r.wrap.b32 	%r4751, %r4750, %r4749, 14;
	shf.r.wrap.b32 	%r4752, %r4749, %r4750, 14;
	mov.b64 	%rd6623, {%r4752, %r4751};
	shf.r.wrap.b32 	%r4753, %r4750, %r4749, 18;
	shf.r.wrap.b32 	%r4754, %r4749, %r4750, 18;
	mov.b64 	%rd6624, {%r4754, %r4753};
	xor.b64  	%rd6625, %rd6623, %rd6624;
	shf.l.wrap.b32 	%r4755, %r4749, %r4750, 23;
	shf.l.wrap.b32 	%r4756, %r4750, %r4749, 23;
	mov.b64 	%rd6626, {%r4756, %r4755};
	xor.b64  	%rd6627, %rd6625, %rd6626;
	add.s64 	%rd6628, %rd6622, %rd6627;
	add.s64 	%rd6629, %rd6628, 2608012711638119052;
	add.s64 	%rd6630, %rd6629, %rd6545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4757,%dummy}, %rd6617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4758}, %rd6617;
	}
	shf.r.wrap.b32 	%r4759, %r4758, %r4757, 28;
	shf.r.wrap.b32 	%r4760, %r4757, %r4758, 28;
	mov.b64 	%rd6631, {%r4760, %r4759};
	shf.l.wrap.b32 	%r4761, %r4757, %r4758, 30;
	shf.l.wrap.b32 	%r4762, %r4758, %r4757, 30;
	mov.b64 	%rd6632, {%r4762, %r4761};
	xor.b64  	%rd6633, %rd6631, %rd6632;
	shf.l.wrap.b32 	%r4763, %r4757, %r4758, 25;
	shf.l.wrap.b32 	%r4764, %r4758, %r4757, 25;
	mov.b64 	%rd6634, {%r4764, %r4763};
	xor.b64  	%rd6635, %rd6633, %rd6634;
	and.b64  	%rd6636, %rd6617, %rd6593;
	or.b64  	%rd6637, %rd6617, %rd6593;
	and.b64  	%rd6638, %rd6637, %rd6569;
	or.b64  	%rd6639, %rd6638, %rd6636;
	add.s64 	%rd6640, %rd6639, %rd6635;
	add.s64 	%rd6641, %rd6640, %rd6629;
	add.s64 	%rd6642, %rd9296, %rd6558;
	xor.b64  	%rd6643, %rd6606, %rd6582;
	and.b64  	%rd6644, %rd6630, %rd6643;
	xor.b64  	%rd6645, %rd6644, %rd6582;
	add.s64 	%rd6646, %rd6642, %rd6645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4765,%dummy}, %rd6630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4766}, %rd6630;
	}
	shf.r.wrap.b32 	%r4767, %r4766, %r4765, 14;
	shf.r.wrap.b32 	%r4768, %r4765, %r4766, 14;
	mov.b64 	%rd6647, {%r4768, %r4767};
	shf.r.wrap.b32 	%r4769, %r4766, %r4765, 18;
	shf.r.wrap.b32 	%r4770, %r4765, %r4766, 18;
	mov.b64 	%rd6648, {%r4770, %r4769};
	xor.b64  	%rd6649, %rd6647, %rd6648;
	shf.l.wrap.b32 	%r4771, %r4765, %r4766, 23;
	shf.l.wrap.b32 	%r4772, %r4766, %r4765, 23;
	mov.b64 	%rd6650, {%r4772, %r4771};
	xor.b64  	%rd6651, %rd6649, %rd6650;
	add.s64 	%rd6652, %rd6646, %rd6651;
	add.s64 	%rd6653, %rd6652, 6128411473006802146;
	add.s64 	%rd6654, %rd6653, %rd6569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4773,%dummy}, %rd6641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4774}, %rd6641;
	}
	shf.r.wrap.b32 	%r4775, %r4774, %r4773, 28;
	shf.r.wrap.b32 	%r4776, %r4773, %r4774, 28;
	mov.b64 	%rd6655, {%r4776, %r4775};
	shf.l.wrap.b32 	%r4777, %r4773, %r4774, 30;
	shf.l.wrap.b32 	%r4778, %r4774, %r4773, 30;
	mov.b64 	%rd6656, {%r4778, %r4777};
	xor.b64  	%rd6657, %rd6655, %rd6656;
	shf.l.wrap.b32 	%r4779, %r4773, %r4774, 25;
	shf.l.wrap.b32 	%r4780, %r4774, %r4773, 25;
	mov.b64 	%rd6658, {%r4780, %r4779};
	xor.b64  	%rd6659, %rd6657, %rd6658;
	and.b64  	%rd6660, %rd6641, %rd6617;
	or.b64  	%rd6661, %rd6641, %rd6617;
	and.b64  	%rd6662, %rd6661, %rd6593;
	or.b64  	%rd6663, %rd6662, %rd6660;
	add.s64 	%rd6664, %rd6663, %rd6659;
	add.s64 	%rd6665, %rd6664, %rd6653;
	add.s64 	%rd6666, %rd9295, %rd6582;
	xor.b64  	%rd6667, %rd6630, %rd6606;
	and.b64  	%rd6668, %rd6654, %rd6667;
	xor.b64  	%rd6669, %rd6668, %rd6606;
	add.s64 	%rd6670, %rd6666, %rd6669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4781,%dummy}, %rd6654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4782}, %rd6654;
	}
	shf.r.wrap.b32 	%r4783, %r4782, %r4781, 14;
	shf.r.wrap.b32 	%r4784, %r4781, %r4782, 14;
	mov.b64 	%rd6671, {%r4784, %r4783};
	shf.r.wrap.b32 	%r4785, %r4782, %r4781, 18;
	shf.r.wrap.b32 	%r4786, %r4781, %r4782, 18;
	mov.b64 	%rd6672, {%r4786, %r4785};
	xor.b64  	%rd6673, %rd6671, %rd6672;
	shf.l.wrap.b32 	%r4787, %r4781, %r4782, 23;
	shf.l.wrap.b32 	%r4788, %r4782, %r4781, 23;
	mov.b64 	%rd6674, {%r4788, %r4787};
	xor.b64  	%rd6675, %rd6673, %rd6674;
	add.s64 	%rd6676, %rd6670, %rd6675;
	add.s64 	%rd6677, %rd6676, 8268148722764581231;
	add.s64 	%rd6678, %rd6677, %rd6593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4789,%dummy}, %rd6665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4790}, %rd6665;
	}
	shf.r.wrap.b32 	%r4791, %r4790, %r4789, 28;
	shf.r.wrap.b32 	%r4792, %r4789, %r4790, 28;
	mov.b64 	%rd6679, {%r4792, %r4791};
	shf.l.wrap.b32 	%r4793, %r4789, %r4790, 30;
	shf.l.wrap.b32 	%r4794, %r4790, %r4789, 30;
	mov.b64 	%rd6680, {%r4794, %r4793};
	xor.b64  	%rd6681, %rd6679, %rd6680;
	shf.l.wrap.b32 	%r4795, %r4789, %r4790, 25;
	shf.l.wrap.b32 	%r4796, %r4790, %r4789, 25;
	mov.b64 	%rd6682, {%r4796, %r4795};
	xor.b64  	%rd6683, %rd6681, %rd6682;
	and.b64  	%rd6684, %rd6665, %rd6641;
	or.b64  	%rd6685, %rd6665, %rd6641;
	and.b64  	%rd6686, %rd6685, %rd6617;
	or.b64  	%rd6687, %rd6686, %rd6684;
	add.s64 	%rd6688, %rd6687, %rd6683;
	add.s64 	%rd6689, %rd6688, %rd6677;
	add.s64 	%rd6690, %rd9294, %rd6606;
	xor.b64  	%rd6691, %rd6654, %rd6630;
	and.b64  	%rd6692, %rd6678, %rd6691;
	xor.b64  	%rd6693, %rd6692, %rd6630;
	add.s64 	%rd6694, %rd6690, %rd6693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4797,%dummy}, %rd6678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4798}, %rd6678;
	}
	shf.r.wrap.b32 	%r4799, %r4798, %r4797, 14;
	shf.r.wrap.b32 	%r4800, %r4797, %r4798, 14;
	mov.b64 	%rd6695, {%r4800, %r4799};
	shf.r.wrap.b32 	%r4801, %r4798, %r4797, 18;
	shf.r.wrap.b32 	%r4802, %r4797, %r4798, 18;
	mov.b64 	%rd6696, {%r4802, %r4801};
	xor.b64  	%rd6697, %rd6695, %rd6696;
	shf.l.wrap.b32 	%r4803, %r4797, %r4798, 23;
	shf.l.wrap.b32 	%r4804, %r4798, %r4797, 23;
	mov.b64 	%rd6698, {%r4804, %r4803};
	xor.b64  	%rd6699, %rd6697, %rd6698;
	add.s64 	%rd6700, %rd6694, %rd6699;
	add.s64 	%rd6701, %rd6700, -9160688886553864527;
	add.s64 	%rd6702, %rd6701, %rd6617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4805,%dummy}, %rd6689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4806}, %rd6689;
	}
	shf.r.wrap.b32 	%r4807, %r4806, %r4805, 28;
	shf.r.wrap.b32 	%r4808, %r4805, %r4806, 28;
	mov.b64 	%rd6703, {%r4808, %r4807};
	shf.l.wrap.b32 	%r4809, %r4805, %r4806, 30;
	shf.l.wrap.b32 	%r4810, %r4806, %r4805, 30;
	mov.b64 	%rd6704, {%r4810, %r4809};
	xor.b64  	%rd6705, %rd6703, %rd6704;
	shf.l.wrap.b32 	%r4811, %r4805, %r4806, 25;
	shf.l.wrap.b32 	%r4812, %r4806, %r4805, 25;
	mov.b64 	%rd6706, {%r4812, %r4811};
	xor.b64  	%rd6707, %rd6705, %rd6706;
	and.b64  	%rd6708, %rd6689, %rd6665;
	or.b64  	%rd6709, %rd6689, %rd6665;
	and.b64  	%rd6710, %rd6709, %rd6641;
	or.b64  	%rd6711, %rd6710, %rd6708;
	add.s64 	%rd6712, %rd6711, %rd6707;
	add.s64 	%rd6713, %rd6712, %rd6701;
	add.s64 	%rd6714, %rd9293, %rd6630;
	xor.b64  	%rd6715, %rd6678, %rd6654;
	and.b64  	%rd6716, %rd6702, %rd6715;
	xor.b64  	%rd6717, %rd6716, %rd6654;
	add.s64 	%rd6718, %rd6714, %rd6717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4813,%dummy}, %rd6702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4814}, %rd6702;
	}
	shf.r.wrap.b32 	%r4815, %r4814, %r4813, 14;
	shf.r.wrap.b32 	%r4816, %r4813, %r4814, 14;
	mov.b64 	%rd6719, {%r4816, %r4815};
	shf.r.wrap.b32 	%r4817, %r4814, %r4813, 18;
	shf.r.wrap.b32 	%r4818, %r4813, %r4814, 18;
	mov.b64 	%rd6720, {%r4818, %r4817};
	xor.b64  	%rd6721, %rd6719, %rd6720;
	shf.l.wrap.b32 	%r4819, %r4813, %r4814, 23;
	shf.l.wrap.b32 	%r4820, %r4814, %r4813, 23;
	mov.b64 	%rd6722, {%r4820, %r4819};
	xor.b64  	%rd6723, %rd6721, %rd6722;
	add.s64 	%rd6724, %rd6718, %rd6723;
	add.s64 	%rd6725, %rd6724, -7215885187991268811;
	add.s64 	%rd6726, %rd6725, %rd6641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4821,%dummy}, %rd6713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4822}, %rd6713;
	}
	shf.r.wrap.b32 	%r4823, %r4822, %r4821, 28;
	shf.r.wrap.b32 	%r4824, %r4821, %r4822, 28;
	mov.b64 	%rd6727, {%r4824, %r4823};
	shf.l.wrap.b32 	%r4825, %r4821, %r4822, 30;
	shf.l.wrap.b32 	%r4826, %r4822, %r4821, 30;
	mov.b64 	%rd6728, {%r4826, %r4825};
	xor.b64  	%rd6729, %rd6727, %rd6728;
	shf.l.wrap.b32 	%r4827, %r4821, %r4822, 25;
	shf.l.wrap.b32 	%r4828, %r4822, %r4821, 25;
	mov.b64 	%rd6730, {%r4828, %r4827};
	xor.b64  	%rd6731, %rd6729, %rd6730;
	and.b64  	%rd6732, %rd6713, %rd6689;
	or.b64  	%rd6733, %rd6713, %rd6689;
	and.b64  	%rd6734, %rd6733, %rd6665;
	or.b64  	%rd6735, %rd6734, %rd6732;
	add.s64 	%rd6736, %rd6735, %rd6731;
	add.s64 	%rd6737, %rd6736, %rd6725;
	add.s64 	%rd6738, %rd9292, %rd6654;
	xor.b64  	%rd6739, %rd6702, %rd6678;
	and.b64  	%rd6740, %rd6726, %rd6739;
	xor.b64  	%rd6741, %rd6740, %rd6678;
	add.s64 	%rd6742, %rd6738, %rd6741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4829,%dummy}, %rd6726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4830}, %rd6726;
	}
	shf.r.wrap.b32 	%r4831, %r4830, %r4829, 14;
	shf.r.wrap.b32 	%r4832, %r4829, %r4830, 14;
	mov.b64 	%rd6743, {%r4832, %r4831};
	shf.r.wrap.b32 	%r4833, %r4830, %r4829, 18;
	shf.r.wrap.b32 	%r4834, %r4829, %r4830, 18;
	mov.b64 	%rd6744, {%r4834, %r4833};
	xor.b64  	%rd6745, %rd6743, %rd6744;
	shf.l.wrap.b32 	%r4835, %r4829, %r4830, 23;
	shf.l.wrap.b32 	%r4836, %r4830, %r4829, 23;
	mov.b64 	%rd6746, {%r4836, %r4835};
	xor.b64  	%rd6747, %rd6745, %rd6746;
	add.s64 	%rd6748, %rd6742, %rd6747;
	add.s64 	%rd6749, %rd6748, -4495734319001033068;
	add.s64 	%rd6750, %rd6749, %rd6665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4837,%dummy}, %rd6737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4838}, %rd6737;
	}
	shf.r.wrap.b32 	%r4839, %r4838, %r4837, 28;
	shf.r.wrap.b32 	%r4840, %r4837, %r4838, 28;
	mov.b64 	%rd6751, {%r4840, %r4839};
	shf.l.wrap.b32 	%r4841, %r4837, %r4838, 30;
	shf.l.wrap.b32 	%r4842, %r4838, %r4837, 30;
	mov.b64 	%rd6752, {%r4842, %r4841};
	xor.b64  	%rd6753, %rd6751, %rd6752;
	shf.l.wrap.b32 	%r4843, %r4837, %r4838, 25;
	shf.l.wrap.b32 	%r4844, %r4838, %r4837, 25;
	mov.b64 	%rd6754, {%r4844, %r4843};
	xor.b64  	%rd6755, %rd6753, %rd6754;
	and.b64  	%rd6756, %rd6737, %rd6713;
	or.b64  	%rd6757, %rd6737, %rd6713;
	and.b64  	%rd6758, %rd6757, %rd6689;
	or.b64  	%rd6759, %rd6758, %rd6756;
	add.s64 	%rd6760, %rd6759, %rd6755;
	add.s64 	%rd6761, %rd6760, %rd6749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4845}, %rd9293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4846,%dummy}, %rd9293;
	}
	shf.l.wrap.b32 	%r4847, %r4846, %r4845, 3;
	shf.l.wrap.b32 	%r4848, %r4845, %r4846, 3;
	mov.b64 	%rd6762, {%r4848, %r4847};
	shf.r.wrap.b32 	%r4849, %r4845, %r4846, 19;
	shf.r.wrap.b32 	%r4850, %r4846, %r4845, 19;
	mov.b64 	%rd6763, {%r4850, %r4849};
	xor.b64  	%rd6764, %rd6763, %rd6762;
	shr.u64 	%rd6765, %rd9293, 6;
	xor.b64  	%rd6766, %rd6764, %rd6765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4851,%dummy}, %rd9306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4852}, %rd9306;
	}
	shf.r.wrap.b32 	%r4853, %r4852, %r4851, 8;
	shf.r.wrap.b32 	%r4854, %r4851, %r4852, 8;
	mov.b64 	%rd6767, {%r4854, %r4853};
	shf.r.wrap.b32 	%r4855, %r4852, %r4851, 1;
	shf.r.wrap.b32 	%r4856, %r4851, %r4852, 1;
	mov.b64 	%rd6768, {%r4856, %r4855};
	xor.b64  	%rd6769, %rd6768, %rd6767;
	shr.u64 	%rd6770, %rd9306, 7;
	xor.b64  	%rd6771, %rd6769, %rd6770;
	add.s64 	%rd6772, %rd9298, %rd6766;
	add.s64 	%rd6773, %rd6772, %rd9307;
	add.s64 	%rd6774, %rd6773, %rd6771;
	add.s64 	%rd6775, %rd6774, %rd6678;
	xor.b64  	%rd6776, %rd6726, %rd6702;
	and.b64  	%rd6777, %rd6750, %rd6776;
	xor.b64  	%rd6778, %rd6777, %rd6702;
	add.s64 	%rd6779, %rd6775, %rd6778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4857,%dummy}, %rd6750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4858}, %rd6750;
	}
	shf.r.wrap.b32 	%r4859, %r4858, %r4857, 14;
	shf.r.wrap.b32 	%r4860, %r4857, %r4858, 14;
	mov.b64 	%rd6780, {%r4860, %r4859};
	shf.r.wrap.b32 	%r4861, %r4858, %r4857, 18;
	shf.r.wrap.b32 	%r4862, %r4857, %r4858, 18;
	mov.b64 	%rd6781, {%r4862, %r4861};
	xor.b64  	%rd6782, %rd6780, %rd6781;
	shf.l.wrap.b32 	%r4863, %r4857, %r4858, 23;
	shf.l.wrap.b32 	%r4864, %r4858, %r4857, 23;
	mov.b64 	%rd6783, {%r4864, %r4863};
	xor.b64  	%rd6784, %rd6782, %rd6783;
	add.s64 	%rd6785, %rd6779, %rd6784;
	add.s64 	%rd6786, %rd6785, -1973867731355612462;
	add.s64 	%rd6787, %rd6786, %rd6689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4865,%dummy}, %rd6761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4866}, %rd6761;
	}
	shf.r.wrap.b32 	%r4867, %r4866, %r4865, 28;
	shf.r.wrap.b32 	%r4868, %r4865, %r4866, 28;
	mov.b64 	%rd6788, {%r4868, %r4867};
	shf.l.wrap.b32 	%r4869, %r4865, %r4866, 30;
	shf.l.wrap.b32 	%r4870, %r4866, %r4865, 30;
	mov.b64 	%rd6789, {%r4870, %r4869};
	xor.b64  	%rd6790, %rd6788, %rd6789;
	shf.l.wrap.b32 	%r4871, %r4865, %r4866, 25;
	shf.l.wrap.b32 	%r4872, %r4866, %r4865, 25;
	mov.b64 	%rd6791, {%r4872, %r4871};
	xor.b64  	%rd6792, %rd6790, %rd6791;
	and.b64  	%rd6793, %rd6761, %rd6737;
	or.b64  	%rd6794, %rd6761, %rd6737;
	and.b64  	%rd6795, %rd6794, %rd6713;
	or.b64  	%rd6796, %rd6795, %rd6793;
	add.s64 	%rd6797, %rd6796, %rd6792;
	add.s64 	%rd6798, %rd6797, %rd6786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd9292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4874,%dummy}, %rd9292;
	}
	shf.l.wrap.b32 	%r4875, %r4874, %r4873, 3;
	shf.l.wrap.b32 	%r4876, %r4873, %r4874, 3;
	mov.b64 	%rd6799, {%r4876, %r4875};
	shf.r.wrap.b32 	%r4877, %r4873, %r4874, 19;
	shf.r.wrap.b32 	%r4878, %r4874, %r4873, 19;
	mov.b64 	%rd6800, {%r4878, %r4877};
	xor.b64  	%rd6801, %rd6800, %rd6799;
	shr.u64 	%rd6802, %rd9292, 6;
	xor.b64  	%rd6803, %rd6801, %rd6802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4879,%dummy}, %rd9305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4880}, %rd9305;
	}
	shf.r.wrap.b32 	%r4881, %r4880, %r4879, 8;
	shf.r.wrap.b32 	%r4882, %r4879, %r4880, 8;
	mov.b64 	%rd6804, {%r4882, %r4881};
	shf.r.wrap.b32 	%r4883, %r4880, %r4879, 1;
	shf.r.wrap.b32 	%r4884, %r4879, %r4880, 1;
	mov.b64 	%rd6805, {%r4884, %r4883};
	xor.b64  	%rd6806, %rd6805, %rd6804;
	shr.u64 	%rd6807, %rd9305, 7;
	xor.b64  	%rd6808, %rd6806, %rd6807;
	add.s64 	%rd6809, %rd9297, %rd6803;
	add.s64 	%rd6810, %rd6809, %rd9306;
	add.s64 	%rd6811, %rd6810, %rd6808;
	add.s64 	%rd6812, %rd6811, %rd6702;
	xor.b64  	%rd6813, %rd6750, %rd6726;
	and.b64  	%rd6814, %rd6787, %rd6813;
	xor.b64  	%rd6815, %rd6814, %rd6726;
	add.s64 	%rd6816, %rd6812, %rd6815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4885,%dummy}, %rd6787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4886}, %rd6787;
	}
	shf.r.wrap.b32 	%r4887, %r4886, %r4885, 14;
	shf.r.wrap.b32 	%r4888, %r4885, %r4886, 14;
	mov.b64 	%rd6817, {%r4888, %r4887};
	shf.r.wrap.b32 	%r4889, %r4886, %r4885, 18;
	shf.r.wrap.b32 	%r4890, %r4885, %r4886, 18;
	mov.b64 	%rd6818, {%r4890, %r4889};
	xor.b64  	%rd6819, %rd6817, %rd6818;
	shf.l.wrap.b32 	%r4891, %r4885, %r4886, 23;
	shf.l.wrap.b32 	%r4892, %r4886, %r4885, 23;
	mov.b64 	%rd6820, {%r4892, %r4891};
	xor.b64  	%rd6821, %rd6819, %rd6820;
	add.s64 	%rd6822, %rd6816, %rd6821;
	add.s64 	%rd6823, %rd6822, -1171420211273849373;
	add.s64 	%rd6824, %rd6823, %rd6713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4893,%dummy}, %rd6798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4894}, %rd6798;
	}
	shf.r.wrap.b32 	%r4895, %r4894, %r4893, 28;
	shf.r.wrap.b32 	%r4896, %r4893, %r4894, 28;
	mov.b64 	%rd6825, {%r4896, %r4895};
	shf.l.wrap.b32 	%r4897, %r4893, %r4894, 30;
	shf.l.wrap.b32 	%r4898, %r4894, %r4893, 30;
	mov.b64 	%rd6826, {%r4898, %r4897};
	xor.b64  	%rd6827, %rd6825, %rd6826;
	shf.l.wrap.b32 	%r4899, %r4893, %r4894, 25;
	shf.l.wrap.b32 	%r4900, %r4894, %r4893, 25;
	mov.b64 	%rd6828, {%r4900, %r4899};
	xor.b64  	%rd6829, %rd6827, %rd6828;
	and.b64  	%rd6830, %rd6798, %rd6761;
	or.b64  	%rd6831, %rd6798, %rd6761;
	and.b64  	%rd6832, %rd6831, %rd6737;
	or.b64  	%rd6833, %rd6832, %rd6830;
	add.s64 	%rd6834, %rd6833, %rd6829;
	add.s64 	%rd6835, %rd6834, %rd6823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4901,%dummy}, %rd6774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4902}, %rd6774;
	}
	shf.r.wrap.b32 	%r4903, %r4902, %r4901, 19;
	shf.r.wrap.b32 	%r4904, %r4901, %r4902, 19;
	mov.b64 	%rd6836, {%r4904, %r4903};
	shf.l.wrap.b32 	%r4905, %r4901, %r4902, 3;
	shf.l.wrap.b32 	%r4906, %r4902, %r4901, 3;
	mov.b64 	%rd6837, {%r4906, %r4905};
	xor.b64  	%rd6838, %rd6836, %rd6837;
	shr.u64 	%rd6839, %rd6774, 6;
	xor.b64  	%rd6840, %rd6838, %rd6839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4907,%dummy}, %rd9304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4908}, %rd9304;
	}
	shf.r.wrap.b32 	%r4909, %r4908, %r4907, 8;
	shf.r.wrap.b32 	%r4910, %r4907, %r4908, 8;
	mov.b64 	%rd6841, {%r4910, %r4909};
	shf.r.wrap.b32 	%r4911, %r4908, %r4907, 1;
	shf.r.wrap.b32 	%r4912, %r4907, %r4908, 1;
	mov.b64 	%rd6842, {%r4912, %r4911};
	xor.b64  	%rd6843, %rd6842, %rd6841;
	shr.u64 	%rd6844, %rd9304, 7;
	xor.b64  	%rd6845, %rd6843, %rd6844;
	add.s64 	%rd6846, %rd9305, %rd9296;
	add.s64 	%rd6847, %rd6846, %rd6845;
	add.s64 	%rd6848, %rd6847, %rd6840;
	add.s64 	%rd6849, %rd6848, %rd6726;
	xor.b64  	%rd6850, %rd6787, %rd6750;
	and.b64  	%rd6851, %rd6824, %rd6850;
	xor.b64  	%rd6852, %rd6851, %rd6750;
	add.s64 	%rd6853, %rd6849, %rd6852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4913,%dummy}, %rd6824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4914}, %rd6824;
	}
	shf.r.wrap.b32 	%r4915, %r4914, %r4913, 14;
	shf.r.wrap.b32 	%r4916, %r4913, %r4914, 14;
	mov.b64 	%rd6854, {%r4916, %r4915};
	shf.r.wrap.b32 	%r4917, %r4914, %r4913, 18;
	shf.r.wrap.b32 	%r4918, %r4913, %r4914, 18;
	mov.b64 	%rd6855, {%r4918, %r4917};
	xor.b64  	%rd6856, %rd6854, %rd6855;
	shf.l.wrap.b32 	%r4919, %r4913, %r4914, 23;
	shf.l.wrap.b32 	%r4920, %r4914, %r4913, 23;
	mov.b64 	%rd6857, {%r4920, %r4919};
	xor.b64  	%rd6858, %rd6856, %rd6857;
	add.s64 	%rd6859, %rd6853, %rd6858;
	add.s64 	%rd6860, %rd6859, 1135362057144423861;
	add.s64 	%rd6861, %rd6860, %rd6737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4921,%dummy}, %rd6835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4922}, %rd6835;
	}
	shf.r.wrap.b32 	%r4923, %r4922, %r4921, 28;
	shf.r.wrap.b32 	%r4924, %r4921, %r4922, 28;
	mov.b64 	%rd6862, {%r4924, %r4923};
	shf.l.wrap.b32 	%r4925, %r4921, %r4922, 30;
	shf.l.wrap.b32 	%r4926, %r4922, %r4921, 30;
	mov.b64 	%rd6863, {%r4926, %r4925};
	xor.b64  	%rd6864, %rd6862, %rd6863;
	shf.l.wrap.b32 	%r4927, %r4921, %r4922, 25;
	shf.l.wrap.b32 	%r4928, %r4922, %r4921, 25;
	mov.b64 	%rd6865, {%r4928, %r4927};
	xor.b64  	%rd6866, %rd6864, %rd6865;
	and.b64  	%rd6867, %rd6835, %rd6798;
	or.b64  	%rd6868, %rd6835, %rd6798;
	and.b64  	%rd6869, %rd6868, %rd6761;
	or.b64  	%rd6870, %rd6869, %rd6867;
	add.s64 	%rd6871, %rd6870, %rd6866;
	add.s64 	%rd6872, %rd6871, %rd6860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4929,%dummy}, %rd6811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4930}, %rd6811;
	}
	shf.r.wrap.b32 	%r4931, %r4930, %r4929, 19;
	shf.r.wrap.b32 	%r4932, %r4929, %r4930, 19;
	mov.b64 	%rd6873, {%r4932, %r4931};
	shf.l.wrap.b32 	%r4933, %r4929, %r4930, 3;
	shf.l.wrap.b32 	%r4934, %r4930, %r4929, 3;
	mov.b64 	%rd6874, {%r4934, %r4933};
	xor.b64  	%rd6875, %rd6873, %rd6874;
	shr.u64 	%rd6876, %rd6811, 6;
	xor.b64  	%rd6877, %rd6875, %rd6876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4935,%dummy}, %rd9303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4936}, %rd9303;
	}
	shf.r.wrap.b32 	%r4937, %r4936, %r4935, 8;
	shf.r.wrap.b32 	%r4938, %r4935, %r4936, 8;
	mov.b64 	%rd6878, {%r4938, %r4937};
	shf.r.wrap.b32 	%r4939, %r4936, %r4935, 1;
	shf.r.wrap.b32 	%r4940, %r4935, %r4936, 1;
	mov.b64 	%rd6879, {%r4940, %r4939};
	xor.b64  	%rd6880, %rd6879, %rd6878;
	shr.u64 	%rd6881, %rd9303, 7;
	xor.b64  	%rd6882, %rd6880, %rd6881;
	add.s64 	%rd6883, %rd9304, %rd9295;
	add.s64 	%rd6884, %rd6883, %rd6882;
	add.s64 	%rd6885, %rd6884, %rd6877;
	add.s64 	%rd6886, %rd6885, %rd6750;
	xor.b64  	%rd6887, %rd6824, %rd6787;
	and.b64  	%rd6888, %rd6861, %rd6887;
	xor.b64  	%rd6889, %rd6888, %rd6787;
	add.s64 	%rd6890, %rd6886, %rd6889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4941,%dummy}, %rd6861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4942}, %rd6861;
	}
	shf.r.wrap.b32 	%r4943, %r4942, %r4941, 14;
	shf.r.wrap.b32 	%r4944, %r4941, %r4942, 14;
	mov.b64 	%rd6891, {%r4944, %r4943};
	shf.r.wrap.b32 	%r4945, %r4942, %r4941, 18;
	shf.r.wrap.b32 	%r4946, %r4941, %r4942, 18;
	mov.b64 	%rd6892, {%r4946, %r4945};
	xor.b64  	%rd6893, %rd6891, %rd6892;
	shf.l.wrap.b32 	%r4947, %r4941, %r4942, 23;
	shf.l.wrap.b32 	%r4948, %r4942, %r4941, 23;
	mov.b64 	%rd6894, {%r4948, %r4947};
	xor.b64  	%rd6895, %rd6893, %rd6894;
	add.s64 	%rd6896, %rd6890, %rd6895;
	add.s64 	%rd6897, %rd6896, 2597628984639134821;
	add.s64 	%rd6898, %rd6897, %rd6761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4949,%dummy}, %rd6872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4950}, %rd6872;
	}
	shf.r.wrap.b32 	%r4951, %r4950, %r4949, 28;
	shf.r.wrap.b32 	%r4952, %r4949, %r4950, 28;
	mov.b64 	%rd6899, {%r4952, %r4951};
	shf.l.wrap.b32 	%r4953, %r4949, %r4950, 30;
	shf.l.wrap.b32 	%r4954, %r4950, %r4949, 30;
	mov.b64 	%rd6900, {%r4954, %r4953};
	xor.b64  	%rd6901, %rd6899, %rd6900;
	shf.l.wrap.b32 	%r4955, %r4949, %r4950, 25;
	shf.l.wrap.b32 	%r4956, %r4950, %r4949, 25;
	mov.b64 	%rd6902, {%r4956, %r4955};
	xor.b64  	%rd6903, %rd6901, %rd6902;
	and.b64  	%rd6904, %rd6872, %rd6835;
	or.b64  	%rd6905, %rd6872, %rd6835;
	and.b64  	%rd6906, %rd6905, %rd6798;
	or.b64  	%rd6907, %rd6906, %rd6904;
	add.s64 	%rd6908, %rd6907, %rd6903;
	add.s64 	%rd6909, %rd6908, %rd6897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4957,%dummy}, %rd6848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4958}, %rd6848;
	}
	shf.r.wrap.b32 	%r4959, %r4958, %r4957, 19;
	shf.r.wrap.b32 	%r4960, %r4957, %r4958, 19;
	mov.b64 	%rd6910, {%r4960, %r4959};
	shf.l.wrap.b32 	%r4961, %r4957, %r4958, 3;
	shf.l.wrap.b32 	%r4962, %r4958, %r4957, 3;
	mov.b64 	%rd6911, {%r4962, %r4961};
	xor.b64  	%rd6912, %rd6910, %rd6911;
	shr.u64 	%rd6913, %rd6848, 6;
	xor.b64  	%rd6914, %rd6912, %rd6913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4963,%dummy}, %rd9302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4964}, %rd9302;
	}
	shf.r.wrap.b32 	%r4965, %r4964, %r4963, 8;
	shf.r.wrap.b32 	%r4966, %r4963, %r4964, 8;
	mov.b64 	%rd6915, {%r4966, %r4965};
	shf.r.wrap.b32 	%r4967, %r4964, %r4963, 1;
	shf.r.wrap.b32 	%r4968, %r4963, %r4964, 1;
	mov.b64 	%rd6916, {%r4968, %r4967};
	xor.b64  	%rd6917, %rd6916, %rd6915;
	shr.u64 	%rd6918, %rd9302, 7;
	xor.b64  	%rd6919, %rd6917, %rd6918;
	add.s64 	%rd6920, %rd9303, %rd9294;
	add.s64 	%rd6921, %rd6920, %rd6919;
	add.s64 	%rd6922, %rd6921, %rd6914;
	add.s64 	%rd6923, %rd6922, %rd6787;
	xor.b64  	%rd6924, %rd6861, %rd6824;
	and.b64  	%rd6925, %rd6898, %rd6924;
	xor.b64  	%rd6926, %rd6925, %rd6824;
	add.s64 	%rd6927, %rd6923, %rd6926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4969,%dummy}, %rd6898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4970}, %rd6898;
	}
	shf.r.wrap.b32 	%r4971, %r4970, %r4969, 14;
	shf.r.wrap.b32 	%r4972, %r4969, %r4970, 14;
	mov.b64 	%rd6928, {%r4972, %r4971};
	shf.r.wrap.b32 	%r4973, %r4970, %r4969, 18;
	shf.r.wrap.b32 	%r4974, %r4969, %r4970, 18;
	mov.b64 	%rd6929, {%r4974, %r4973};
	xor.b64  	%rd6930, %rd6928, %rd6929;
	shf.l.wrap.b32 	%r4975, %r4969, %r4970, 23;
	shf.l.wrap.b32 	%r4976, %r4970, %r4969, 23;
	mov.b64 	%rd6931, {%r4976, %r4975};
	xor.b64  	%rd6932, %rd6930, %rd6931;
	add.s64 	%rd6933, %rd6927, %rd6932;
	add.s64 	%rd6934, %rd6933, 3308224258029322869;
	add.s64 	%rd6935, %rd6934, %rd6798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4977,%dummy}, %rd6909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4978}, %rd6909;
	}
	shf.r.wrap.b32 	%r4979, %r4978, %r4977, 28;
	shf.r.wrap.b32 	%r4980, %r4977, %r4978, 28;
	mov.b64 	%rd6936, {%r4980, %r4979};
	shf.l.wrap.b32 	%r4981, %r4977, %r4978, 30;
	shf.l.wrap.b32 	%r4982, %r4978, %r4977, 30;
	mov.b64 	%rd6937, {%r4982, %r4981};
	xor.b64  	%rd6938, %rd6936, %rd6937;
	shf.l.wrap.b32 	%r4983, %r4977, %r4978, 25;
	shf.l.wrap.b32 	%r4984, %r4978, %r4977, 25;
	mov.b64 	%rd6939, {%r4984, %r4983};
	xor.b64  	%rd6940, %rd6938, %rd6939;
	and.b64  	%rd6941, %rd6909, %rd6872;
	or.b64  	%rd6942, %rd6909, %rd6872;
	and.b64  	%rd6943, %rd6942, %rd6835;
	or.b64  	%rd6944, %rd6943, %rd6941;
	add.s64 	%rd6945, %rd6944, %rd6940;
	add.s64 	%rd6946, %rd6945, %rd6934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4985,%dummy}, %rd6885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4986}, %rd6885;
	}
	shf.r.wrap.b32 	%r4987, %r4986, %r4985, 19;
	shf.r.wrap.b32 	%r4988, %r4985, %r4986, 19;
	mov.b64 	%rd6947, {%r4988, %r4987};
	shf.l.wrap.b32 	%r4989, %r4985, %r4986, 3;
	shf.l.wrap.b32 	%r4990, %r4986, %r4985, 3;
	mov.b64 	%rd6948, {%r4990, %r4989};
	xor.b64  	%rd6949, %rd6947, %rd6948;
	shr.u64 	%rd6950, %rd6885, 6;
	xor.b64  	%rd6951, %rd6949, %rd6950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4991,%dummy}, %rd9301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4992}, %rd9301;
	}
	shf.r.wrap.b32 	%r4993, %r4992, %r4991, 8;
	shf.r.wrap.b32 	%r4994, %r4991, %r4992, 8;
	mov.b64 	%rd6952, {%r4994, %r4993};
	shf.r.wrap.b32 	%r4995, %r4992, %r4991, 1;
	shf.r.wrap.b32 	%r4996, %r4991, %r4992, 1;
	mov.b64 	%rd6953, {%r4996, %r4995};
	xor.b64  	%rd6954, %rd6953, %rd6952;
	shr.u64 	%rd6955, %rd9301, 7;
	xor.b64  	%rd6956, %rd6954, %rd6955;
	add.s64 	%rd6957, %rd9302, %rd9293;
	add.s64 	%rd6958, %rd6957, %rd6956;
	add.s64 	%rd6959, %rd6958, %rd6951;
	add.s64 	%rd6960, %rd6959, %rd6824;
	xor.b64  	%rd6961, %rd6898, %rd6861;
	and.b64  	%rd6962, %rd6935, %rd6961;
	xor.b64  	%rd6963, %rd6962, %rd6861;
	add.s64 	%rd6964, %rd6960, %rd6963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4997,%dummy}, %rd6935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4998}, %rd6935;
	}
	shf.r.wrap.b32 	%r4999, %r4998, %r4997, 14;
	shf.r.wrap.b32 	%r5000, %r4997, %r4998, 14;
	mov.b64 	%rd6965, {%r5000, %r4999};
	shf.r.wrap.b32 	%r5001, %r4998, %r4997, 18;
	shf.r.wrap.b32 	%r5002, %r4997, %r4998, 18;
	mov.b64 	%rd6966, {%r5002, %r5001};
	xor.b64  	%rd6967, %rd6965, %rd6966;
	shf.l.wrap.b32 	%r5003, %r4997, %r4998, 23;
	shf.l.wrap.b32 	%r5004, %r4998, %r4997, 23;
	mov.b64 	%rd6968, {%r5004, %r5003};
	xor.b64  	%rd6969, %rd6967, %rd6968;
	add.s64 	%rd6970, %rd6964, %rd6969;
	add.s64 	%rd6971, %rd6970, 5365058923640841347;
	add.s64 	%rd6972, %rd6971, %rd6835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5005,%dummy}, %rd6946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5006}, %rd6946;
	}
	shf.r.wrap.b32 	%r5007, %r5006, %r5005, 28;
	shf.r.wrap.b32 	%r5008, %r5005, %r5006, 28;
	mov.b64 	%rd6973, {%r5008, %r5007};
	shf.l.wrap.b32 	%r5009, %r5005, %r5006, 30;
	shf.l.wrap.b32 	%r5010, %r5006, %r5005, 30;
	mov.b64 	%rd6974, {%r5010, %r5009};
	xor.b64  	%rd6975, %rd6973, %rd6974;
	shf.l.wrap.b32 	%r5011, %r5005, %r5006, 25;
	shf.l.wrap.b32 	%r5012, %r5006, %r5005, 25;
	mov.b64 	%rd6976, {%r5012, %r5011};
	xor.b64  	%rd6977, %rd6975, %rd6976;
	and.b64  	%rd6978, %rd6946, %rd6909;
	or.b64  	%rd6979, %rd6946, %rd6909;
	and.b64  	%rd6980, %rd6979, %rd6872;
	or.b64  	%rd6981, %rd6980, %rd6978;
	add.s64 	%rd6982, %rd6981, %rd6977;
	add.s64 	%rd6983, %rd6982, %rd6971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5013,%dummy}, %rd6922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5014}, %rd6922;
	}
	shf.r.wrap.b32 	%r5015, %r5014, %r5013, 19;
	shf.r.wrap.b32 	%r5016, %r5013, %r5014, 19;
	mov.b64 	%rd6984, {%r5016, %r5015};
	shf.l.wrap.b32 	%r5017, %r5013, %r5014, 3;
	shf.l.wrap.b32 	%r5018, %r5014, %r5013, 3;
	mov.b64 	%rd6985, {%r5018, %r5017};
	xor.b64  	%rd6986, %rd6984, %rd6985;
	shr.u64 	%rd6987, %rd6922, 6;
	xor.b64  	%rd6988, %rd6986, %rd6987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5019,%dummy}, %rd9300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5020}, %rd9300;
	}
	shf.r.wrap.b32 	%r5021, %r5020, %r5019, 8;
	shf.r.wrap.b32 	%r5022, %r5019, %r5020, 8;
	mov.b64 	%rd6989, {%r5022, %r5021};
	shf.r.wrap.b32 	%r5023, %r5020, %r5019, 1;
	shf.r.wrap.b32 	%r5024, %r5019, %r5020, 1;
	mov.b64 	%rd6990, {%r5024, %r5023};
	xor.b64  	%rd6991, %rd6990, %rd6989;
	shr.u64 	%rd6992, %rd9300, 7;
	xor.b64  	%rd6993, %rd6991, %rd6992;
	add.s64 	%rd6994, %rd9301, %rd9292;
	add.s64 	%rd6995, %rd6994, %rd6993;
	add.s64 	%rd6996, %rd6995, %rd6988;
	add.s64 	%rd6997, %rd6996, %rd6861;
	xor.b64  	%rd6998, %rd6935, %rd6898;
	and.b64  	%rd6999, %rd6972, %rd6998;
	xor.b64  	%rd7000, %rd6999, %rd6898;
	add.s64 	%rd7001, %rd6997, %rd7000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5025,%dummy}, %rd6972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5026}, %rd6972;
	}
	shf.r.wrap.b32 	%r5027, %r5026, %r5025, 14;
	shf.r.wrap.b32 	%r5028, %r5025, %r5026, 14;
	mov.b64 	%rd7002, {%r5028, %r5027};
	shf.r.wrap.b32 	%r5029, %r5026, %r5025, 18;
	shf.r.wrap.b32 	%r5030, %r5025, %r5026, 18;
	mov.b64 	%rd7003, {%r5030, %r5029};
	xor.b64  	%rd7004, %rd7002, %rd7003;
	shf.l.wrap.b32 	%r5031, %r5025, %r5026, 23;
	shf.l.wrap.b32 	%r5032, %r5026, %r5025, 23;
	mov.b64 	%rd7005, {%r5032, %r5031};
	xor.b64  	%rd7006, %rd7004, %rd7005;
	add.s64 	%rd7007, %rd7001, %rd7006;
	add.s64 	%rd7008, %rd7007, 6679025012923562964;
	add.s64 	%rd7009, %rd7008, %rd6872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5033,%dummy}, %rd6983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5034}, %rd6983;
	}
	shf.r.wrap.b32 	%r5035, %r5034, %r5033, 28;
	shf.r.wrap.b32 	%r5036, %r5033, %r5034, 28;
	mov.b64 	%rd7010, {%r5036, %r5035};
	shf.l.wrap.b32 	%r5037, %r5033, %r5034, 30;
	shf.l.wrap.b32 	%r5038, %r5034, %r5033, 30;
	mov.b64 	%rd7011, {%r5038, %r5037};
	xor.b64  	%rd7012, %rd7010, %rd7011;
	shf.l.wrap.b32 	%r5039, %r5033, %r5034, 25;
	shf.l.wrap.b32 	%r5040, %r5034, %r5033, 25;
	mov.b64 	%rd7013, {%r5040, %r5039};
	xor.b64  	%rd7014, %rd7012, %rd7013;
	and.b64  	%rd7015, %rd6983, %rd6946;
	or.b64  	%rd7016, %rd6983, %rd6946;
	and.b64  	%rd7017, %rd7016, %rd6909;
	or.b64  	%rd7018, %rd7017, %rd7015;
	add.s64 	%rd7019, %rd7018, %rd7014;
	add.s64 	%rd7020, %rd7019, %rd7008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5041,%dummy}, %rd6959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5042}, %rd6959;
	}
	shf.r.wrap.b32 	%r5043, %r5042, %r5041, 19;
	shf.r.wrap.b32 	%r5044, %r5041, %r5042, 19;
	mov.b64 	%rd7021, {%r5044, %r5043};
	shf.l.wrap.b32 	%r5045, %r5041, %r5042, 3;
	shf.l.wrap.b32 	%r5046, %r5042, %r5041, 3;
	mov.b64 	%rd7022, {%r5046, %r5045};
	xor.b64  	%rd7023, %rd7021, %rd7022;
	shr.u64 	%rd7024, %rd6959, 6;
	xor.b64  	%rd7025, %rd7023, %rd7024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5047,%dummy}, %rd9299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5048}, %rd9299;
	}
	shf.r.wrap.b32 	%r5049, %r5048, %r5047, 8;
	shf.r.wrap.b32 	%r5050, %r5047, %r5048, 8;
	mov.b64 	%rd7026, {%r5050, %r5049};
	shf.r.wrap.b32 	%r5051, %r5048, %r5047, 1;
	shf.r.wrap.b32 	%r5052, %r5047, %r5048, 1;
	mov.b64 	%rd7027, {%r5052, %r5051};
	xor.b64  	%rd7028, %rd7027, %rd7026;
	shr.u64 	%rd7029, %rd9299, 7;
	xor.b64  	%rd7030, %rd7028, %rd7029;
	add.s64 	%rd7031, %rd7030, %rd9300;
	add.s64 	%rd7032, %rd7031, %rd6774;
	add.s64 	%rd7033, %rd7032, %rd7025;
	add.s64 	%rd7034, %rd7033, %rd6898;
	xor.b64  	%rd7035, %rd6972, %rd6935;
	and.b64  	%rd7036, %rd7009, %rd7035;
	xor.b64  	%rd7037, %rd7036, %rd6935;
	add.s64 	%rd7038, %rd7034, %rd7037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5053,%dummy}, %rd7009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5054}, %rd7009;
	}
	shf.r.wrap.b32 	%r5055, %r5054, %r5053, 14;
	shf.r.wrap.b32 	%r5056, %r5053, %r5054, 14;
	mov.b64 	%rd7039, {%r5056, %r5055};
	shf.r.wrap.b32 	%r5057, %r5054, %r5053, 18;
	shf.r.wrap.b32 	%r5058, %r5053, %r5054, 18;
	mov.b64 	%rd7040, {%r5058, %r5057};
	xor.b64  	%rd7041, %rd7039, %rd7040;
	shf.l.wrap.b32 	%r5059, %r5053, %r5054, 23;
	shf.l.wrap.b32 	%r5060, %r5054, %r5053, 23;
	mov.b64 	%rd7042, {%r5060, %r5059};
	xor.b64  	%rd7043, %rd7041, %rd7042;
	add.s64 	%rd7044, %rd7038, %rd7043;
	add.s64 	%rd7045, %rd7044, 8573033837759648693;
	add.s64 	%rd7046, %rd7045, %rd6909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5061,%dummy}, %rd7020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5062}, %rd7020;
	}
	shf.r.wrap.b32 	%r5063, %r5062, %r5061, 28;
	shf.r.wrap.b32 	%r5064, %r5061, %r5062, 28;
	mov.b64 	%rd7047, {%r5064, %r5063};
	shf.l.wrap.b32 	%r5065, %r5061, %r5062, 30;
	shf.l.wrap.b32 	%r5066, %r5062, %r5061, 30;
	mov.b64 	%rd7048, {%r5066, %r5065};
	xor.b64  	%rd7049, %rd7047, %rd7048;
	shf.l.wrap.b32 	%r5067, %r5061, %r5062, 25;
	shf.l.wrap.b32 	%r5068, %r5062, %r5061, 25;
	mov.b64 	%rd7050, {%r5068, %r5067};
	xor.b64  	%rd7051, %rd7049, %rd7050;
	and.b64  	%rd7052, %rd7020, %rd6983;
	or.b64  	%rd7053, %rd7020, %rd6983;
	and.b64  	%rd7054, %rd7053, %rd6946;
	or.b64  	%rd7055, %rd7054, %rd7052;
	add.s64 	%rd7056, %rd7055, %rd7051;
	add.s64 	%rd7057, %rd7056, %rd7045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5069,%dummy}, %rd6996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5070}, %rd6996;
	}
	shf.r.wrap.b32 	%r5071, %r5070, %r5069, 19;
	shf.r.wrap.b32 	%r5072, %r5069, %r5070, 19;
	mov.b64 	%rd7058, {%r5072, %r5071};
	shf.l.wrap.b32 	%r5073, %r5069, %r5070, 3;
	shf.l.wrap.b32 	%r5074, %r5070, %r5069, 3;
	mov.b64 	%rd7059, {%r5074, %r5073};
	xor.b64  	%rd7060, %rd7058, %rd7059;
	shr.u64 	%rd7061, %rd6996, 6;
	xor.b64  	%rd7062, %rd7060, %rd7061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5075,%dummy}, %rd9298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5076}, %rd9298;
	}
	shf.r.wrap.b32 	%r5077, %r5076, %r5075, 8;
	shf.r.wrap.b32 	%r5078, %r5075, %r5076, 8;
	mov.b64 	%rd7063, {%r5078, %r5077};
	shf.r.wrap.b32 	%r5079, %r5076, %r5075, 1;
	shf.r.wrap.b32 	%r5080, %r5075, %r5076, 1;
	mov.b64 	%rd7064, {%r5080, %r5079};
	xor.b64  	%rd7065, %rd7064, %rd7063;
	shr.u64 	%rd7066, %rd9298, 7;
	xor.b64  	%rd7067, %rd7065, %rd7066;
	add.s64 	%rd7068, %rd7067, %rd9299;
	add.s64 	%rd7069, %rd7068, %rd6811;
	add.s64 	%rd7070, %rd7069, %rd7062;
	add.s64 	%rd7071, %rd7070, %rd6935;
	xor.b64  	%rd7072, %rd7009, %rd6972;
	and.b64  	%rd7073, %rd7046, %rd7072;
	xor.b64  	%rd7074, %rd7073, %rd6972;
	add.s64 	%rd7075, %rd7071, %rd7074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5081,%dummy}, %rd7046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5082}, %rd7046;
	}
	shf.r.wrap.b32 	%r5083, %r5082, %r5081, 14;
	shf.r.wrap.b32 	%r5084, %r5081, %r5082, 14;
	mov.b64 	%rd7076, {%r5084, %r5083};
	shf.r.wrap.b32 	%r5085, %r5082, %r5081, 18;
	shf.r.wrap.b32 	%r5086, %r5081, %r5082, 18;
	mov.b64 	%rd7077, {%r5086, %r5085};
	xor.b64  	%rd7078, %rd7076, %rd7077;
	shf.l.wrap.b32 	%r5087, %r5081, %r5082, 23;
	shf.l.wrap.b32 	%r5088, %r5082, %r5081, 23;
	mov.b64 	%rd7079, {%r5088, %r5087};
	xor.b64  	%rd7080, %rd7078, %rd7079;
	add.s64 	%rd7081, %rd7075, %rd7080;
	add.s64 	%rd7082, %rd7081, -7476448914759557205;
	add.s64 	%rd7083, %rd7082, %rd6946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5089,%dummy}, %rd7057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5090}, %rd7057;
	}
	shf.r.wrap.b32 	%r5091, %r5090, %r5089, 28;
	shf.r.wrap.b32 	%r5092, %r5089, %r5090, 28;
	mov.b64 	%rd7084, {%r5092, %r5091};
	shf.l.wrap.b32 	%r5093, %r5089, %r5090, 30;
	shf.l.wrap.b32 	%r5094, %r5090, %r5089, 30;
	mov.b64 	%rd7085, {%r5094, %r5093};
	xor.b64  	%rd7086, %rd7084, %rd7085;
	shf.l.wrap.b32 	%r5095, %r5089, %r5090, 25;
	shf.l.wrap.b32 	%r5096, %r5090, %r5089, 25;
	mov.b64 	%rd7087, {%r5096, %r5095};
	xor.b64  	%rd7088, %rd7086, %rd7087;
	and.b64  	%rd7089, %rd7057, %rd7020;
	or.b64  	%rd7090, %rd7057, %rd7020;
	and.b64  	%rd7091, %rd7090, %rd6983;
	or.b64  	%rd7092, %rd7091, %rd7089;
	add.s64 	%rd7093, %rd7092, %rd7088;
	add.s64 	%rd7094, %rd7093, %rd7082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5097,%dummy}, %rd7033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5098}, %rd7033;
	}
	shf.r.wrap.b32 	%r5099, %r5098, %r5097, 19;
	shf.r.wrap.b32 	%r5100, %r5097, %r5098, 19;
	mov.b64 	%rd7095, {%r5100, %r5099};
	shf.l.wrap.b32 	%r5101, %r5097, %r5098, 3;
	shf.l.wrap.b32 	%r5102, %r5098, %r5097, 3;
	mov.b64 	%rd7096, {%r5102, %r5101};
	xor.b64  	%rd7097, %rd7095, %rd7096;
	shr.u64 	%rd7098, %rd7033, 6;
	xor.b64  	%rd7099, %rd7097, %rd7098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5103,%dummy}, %rd9297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5104}, %rd9297;
	}
	shf.r.wrap.b32 	%r5105, %r5104, %r5103, 8;
	shf.r.wrap.b32 	%r5106, %r5103, %r5104, 8;
	mov.b64 	%rd7100, {%r5106, %r5105};
	shf.r.wrap.b32 	%r5107, %r5104, %r5103, 1;
	shf.r.wrap.b32 	%r5108, %r5103, %r5104, 1;
	mov.b64 	%rd7101, {%r5108, %r5107};
	xor.b64  	%rd7102, %rd7101, %rd7100;
	shr.u64 	%rd7103, %rd9297, 7;
	xor.b64  	%rd7104, %rd7102, %rd7103;
	add.s64 	%rd7105, %rd7104, %rd9298;
	add.s64 	%rd7106, %rd7105, %rd6848;
	add.s64 	%rd7107, %rd7106, %rd7099;
	add.s64 	%rd7108, %rd7107, %rd6972;
	xor.b64  	%rd7109, %rd7046, %rd7009;
	and.b64  	%rd7110, %rd7083, %rd7109;
	xor.b64  	%rd7111, %rd7110, %rd7009;
	add.s64 	%rd7112, %rd7108, %rd7111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5109,%dummy}, %rd7083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5110}, %rd7083;
	}
	shf.r.wrap.b32 	%r5111, %r5110, %r5109, 14;
	shf.r.wrap.b32 	%r5112, %r5109, %r5110, 14;
	mov.b64 	%rd7113, {%r5112, %r5111};
	shf.r.wrap.b32 	%r5113, %r5110, %r5109, 18;
	shf.r.wrap.b32 	%r5114, %r5109, %r5110, 18;
	mov.b64 	%rd7114, {%r5114, %r5113};
	xor.b64  	%rd7115, %rd7113, %rd7114;
	shf.l.wrap.b32 	%r5115, %r5109, %r5110, 23;
	shf.l.wrap.b32 	%r5116, %r5110, %r5109, 23;
	mov.b64 	%rd7116, {%r5116, %r5115};
	xor.b64  	%rd7117, %rd7115, %rd7116;
	add.s64 	%rd7118, %rd7112, %rd7117;
	add.s64 	%rd7119, %rd7118, -6327057829258317296;
	add.s64 	%rd7120, %rd7119, %rd6983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5117,%dummy}, %rd7094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5118}, %rd7094;
	}
	shf.r.wrap.b32 	%r5119, %r5118, %r5117, 28;
	shf.r.wrap.b32 	%r5120, %r5117, %r5118, 28;
	mov.b64 	%rd7121, {%r5120, %r5119};
	shf.l.wrap.b32 	%r5121, %r5117, %r5118, 30;
	shf.l.wrap.b32 	%r5122, %r5118, %r5117, 30;
	mov.b64 	%rd7122, {%r5122, %r5121};
	xor.b64  	%rd7123, %rd7121, %rd7122;
	shf.l.wrap.b32 	%r5123, %r5117, %r5118, 25;
	shf.l.wrap.b32 	%r5124, %r5118, %r5117, 25;
	mov.b64 	%rd7124, {%r5124, %r5123};
	xor.b64  	%rd7125, %rd7123, %rd7124;
	and.b64  	%rd7126, %rd7094, %rd7057;
	or.b64  	%rd7127, %rd7094, %rd7057;
	and.b64  	%rd7128, %rd7127, %rd7020;
	or.b64  	%rd7129, %rd7128, %rd7126;
	add.s64 	%rd7130, %rd7129, %rd7125;
	add.s64 	%rd7131, %rd7130, %rd7119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5125,%dummy}, %rd7070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5126}, %rd7070;
	}
	shf.r.wrap.b32 	%r5127, %r5126, %r5125, 19;
	shf.r.wrap.b32 	%r5128, %r5125, %r5126, 19;
	mov.b64 	%rd7132, {%r5128, %r5127};
	shf.l.wrap.b32 	%r5129, %r5125, %r5126, 3;
	shf.l.wrap.b32 	%r5130, %r5126, %r5125, 3;
	mov.b64 	%rd7133, {%r5130, %r5129};
	xor.b64  	%rd7134, %rd7132, %rd7133;
	shr.u64 	%rd7135, %rd7070, 6;
	xor.b64  	%rd7136, %rd7134, %rd7135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5131,%dummy}, %rd9296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5132}, %rd9296;
	}
	shf.r.wrap.b32 	%r5133, %r5132, %r5131, 8;
	shf.r.wrap.b32 	%r5134, %r5131, %r5132, 8;
	mov.b64 	%rd7137, {%r5134, %r5133};
	shf.r.wrap.b32 	%r5135, %r5132, %r5131, 1;
	shf.r.wrap.b32 	%r5136, %r5131, %r5132, 1;
	mov.b64 	%rd7138, {%r5136, %r5135};
	xor.b64  	%rd7139, %rd7138, %rd7137;
	shr.u64 	%rd7140, %rd9296, 7;
	xor.b64  	%rd7141, %rd7139, %rd7140;
	add.s64 	%rd7142, %rd7141, %rd9297;
	add.s64 	%rd7143, %rd7142, %rd6885;
	add.s64 	%rd7144, %rd7143, %rd7136;
	add.s64 	%rd7145, %rd7144, %rd7009;
	xor.b64  	%rd7146, %rd7083, %rd7046;
	and.b64  	%rd7147, %rd7120, %rd7146;
	xor.b64  	%rd7148, %rd7147, %rd7046;
	add.s64 	%rd7149, %rd7145, %rd7148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5137,%dummy}, %rd7120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5138}, %rd7120;
	}
	shf.r.wrap.b32 	%r5139, %r5138, %r5137, 14;
	shf.r.wrap.b32 	%r5140, %r5137, %r5138, 14;
	mov.b64 	%rd7150, {%r5140, %r5139};
	shf.r.wrap.b32 	%r5141, %r5138, %r5137, 18;
	shf.r.wrap.b32 	%r5142, %r5137, %r5138, 18;
	mov.b64 	%rd7151, {%r5142, %r5141};
	xor.b64  	%rd7152, %rd7150, %rd7151;
	shf.l.wrap.b32 	%r5143, %r5137, %r5138, 23;
	shf.l.wrap.b32 	%r5144, %r5138, %r5137, 23;
	mov.b64 	%rd7153, {%r5144, %r5143};
	xor.b64  	%rd7154, %rd7152, %rd7153;
	add.s64 	%rd7155, %rd7149, %rd7154;
	add.s64 	%rd7156, %rd7155, -5763719355590565569;
	add.s64 	%rd7157, %rd7156, %rd7020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5145,%dummy}, %rd7131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5146}, %rd7131;
	}
	shf.r.wrap.b32 	%r5147, %r5146, %r5145, 28;
	shf.r.wrap.b32 	%r5148, %r5145, %r5146, 28;
	mov.b64 	%rd7158, {%r5148, %r5147};
	shf.l.wrap.b32 	%r5149, %r5145, %r5146, 30;
	shf.l.wrap.b32 	%r5150, %r5146, %r5145, 30;
	mov.b64 	%rd7159, {%r5150, %r5149};
	xor.b64  	%rd7160, %rd7158, %rd7159;
	shf.l.wrap.b32 	%r5151, %r5145, %r5146, 25;
	shf.l.wrap.b32 	%r5152, %r5146, %r5145, 25;
	mov.b64 	%rd7161, {%r5152, %r5151};
	xor.b64  	%rd7162, %rd7160, %rd7161;
	and.b64  	%rd7163, %rd7131, %rd7094;
	or.b64  	%rd7164, %rd7131, %rd7094;
	and.b64  	%rd7165, %rd7164, %rd7057;
	or.b64  	%rd7166, %rd7165, %rd7163;
	add.s64 	%rd7167, %rd7166, %rd7162;
	add.s64 	%rd7168, %rd7167, %rd7156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5153,%dummy}, %rd7107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5154}, %rd7107;
	}
	shf.r.wrap.b32 	%r5155, %r5154, %r5153, 19;
	shf.r.wrap.b32 	%r5156, %r5153, %r5154, 19;
	mov.b64 	%rd7169, {%r5156, %r5155};
	shf.l.wrap.b32 	%r5157, %r5153, %r5154, 3;
	shf.l.wrap.b32 	%r5158, %r5154, %r5153, 3;
	mov.b64 	%rd7170, {%r5158, %r5157};
	xor.b64  	%rd7171, %rd7169, %rd7170;
	shr.u64 	%rd7172, %rd7107, 6;
	xor.b64  	%rd7173, %rd7171, %rd7172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5159,%dummy}, %rd9295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5160}, %rd9295;
	}
	shf.r.wrap.b32 	%r5161, %r5160, %r5159, 8;
	shf.r.wrap.b32 	%r5162, %r5159, %r5160, 8;
	mov.b64 	%rd7174, {%r5162, %r5161};
	shf.r.wrap.b32 	%r5163, %r5160, %r5159, 1;
	shf.r.wrap.b32 	%r5164, %r5159, %r5160, 1;
	mov.b64 	%rd7175, {%r5164, %r5163};
	xor.b64  	%rd7176, %rd7175, %rd7174;
	shr.u64 	%rd7177, %rd9295, 7;
	xor.b64  	%rd7178, %rd7176, %rd7177;
	add.s64 	%rd7179, %rd7178, %rd9296;
	add.s64 	%rd7180, %rd7179, %rd6922;
	add.s64 	%rd7181, %rd7180, %rd7173;
	add.s64 	%rd7182, %rd7181, %rd7046;
	xor.b64  	%rd7183, %rd7120, %rd7083;
	and.b64  	%rd7184, %rd7157, %rd7183;
	xor.b64  	%rd7185, %rd7184, %rd7083;
	add.s64 	%rd7186, %rd7182, %rd7185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5165,%dummy}, %rd7157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5166}, %rd7157;
	}
	shf.r.wrap.b32 	%r5167, %r5166, %r5165, 14;
	shf.r.wrap.b32 	%r5168, %r5165, %r5166, 14;
	mov.b64 	%rd7187, {%r5168, %r5167};
	shf.r.wrap.b32 	%r5169, %r5166, %r5165, 18;
	shf.r.wrap.b32 	%r5170, %r5165, %r5166, 18;
	mov.b64 	%rd7188, {%r5170, %r5169};
	xor.b64  	%rd7189, %rd7187, %rd7188;
	shf.l.wrap.b32 	%r5171, %r5165, %r5166, 23;
	shf.l.wrap.b32 	%r5172, %r5166, %r5165, 23;
	mov.b64 	%rd7190, {%r5172, %r5171};
	xor.b64  	%rd7191, %rd7189, %rd7190;
	add.s64 	%rd7192, %rd7186, %rd7191;
	add.s64 	%rd7193, %rd7192, -4658551843659510044;
	add.s64 	%rd7194, %rd7193, %rd7057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5173,%dummy}, %rd7168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5174}, %rd7168;
	}
	shf.r.wrap.b32 	%r5175, %r5174, %r5173, 28;
	shf.r.wrap.b32 	%r5176, %r5173, %r5174, 28;
	mov.b64 	%rd7195, {%r5176, %r5175};
	shf.l.wrap.b32 	%r5177, %r5173, %r5174, 30;
	shf.l.wrap.b32 	%r5178, %r5174, %r5173, 30;
	mov.b64 	%rd7196, {%r5178, %r5177};
	xor.b64  	%rd7197, %rd7195, %rd7196;
	shf.l.wrap.b32 	%r5179, %r5173, %r5174, 25;
	shf.l.wrap.b32 	%r5180, %r5174, %r5173, 25;
	mov.b64 	%rd7198, {%r5180, %r5179};
	xor.b64  	%rd7199, %rd7197, %rd7198;
	and.b64  	%rd7200, %rd7168, %rd7131;
	or.b64  	%rd7201, %rd7168, %rd7131;
	and.b64  	%rd7202, %rd7201, %rd7094;
	or.b64  	%rd7203, %rd7202, %rd7200;
	add.s64 	%rd7204, %rd7203, %rd7199;
	add.s64 	%rd7205, %rd7204, %rd7193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5181,%dummy}, %rd7144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5182}, %rd7144;
	}
	shf.r.wrap.b32 	%r5183, %r5182, %r5181, 19;
	shf.r.wrap.b32 	%r5184, %r5181, %r5182, 19;
	mov.b64 	%rd7206, {%r5184, %r5183};
	shf.l.wrap.b32 	%r5185, %r5181, %r5182, 3;
	shf.l.wrap.b32 	%r5186, %r5182, %r5181, 3;
	mov.b64 	%rd7207, {%r5186, %r5185};
	xor.b64  	%rd7208, %rd7206, %rd7207;
	shr.u64 	%rd7209, %rd7144, 6;
	xor.b64  	%rd7210, %rd7208, %rd7209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5187,%dummy}, %rd9294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5188}, %rd9294;
	}
	shf.r.wrap.b32 	%r5189, %r5188, %r5187, 8;
	shf.r.wrap.b32 	%r5190, %r5187, %r5188, 8;
	mov.b64 	%rd7211, {%r5190, %r5189};
	shf.r.wrap.b32 	%r5191, %r5188, %r5187, 1;
	shf.r.wrap.b32 	%r5192, %r5187, %r5188, 1;
	mov.b64 	%rd7212, {%r5192, %r5191};
	xor.b64  	%rd7213, %rd7212, %rd7211;
	shr.u64 	%rd7214, %rd9294, 7;
	xor.b64  	%rd7215, %rd7213, %rd7214;
	add.s64 	%rd7216, %rd7215, %rd9295;
	add.s64 	%rd7217, %rd7216, %rd6959;
	add.s64 	%rd7218, %rd7217, %rd7210;
	add.s64 	%rd7219, %rd7218, %rd7083;
	xor.b64  	%rd7220, %rd7157, %rd7120;
	and.b64  	%rd7221, %rd7194, %rd7220;
	xor.b64  	%rd7222, %rd7221, %rd7120;
	add.s64 	%rd7223, %rd7219, %rd7222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5193,%dummy}, %rd7194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5194}, %rd7194;
	}
	shf.r.wrap.b32 	%r5195, %r5194, %r5193, 14;
	shf.r.wrap.b32 	%r5196, %r5193, %r5194, 14;
	mov.b64 	%rd7224, {%r5196, %r5195};
	shf.r.wrap.b32 	%r5197, %r5194, %r5193, 18;
	shf.r.wrap.b32 	%r5198, %r5193, %r5194, 18;
	mov.b64 	%rd7225, {%r5198, %r5197};
	xor.b64  	%rd7226, %rd7224, %rd7225;
	shf.l.wrap.b32 	%r5199, %r5193, %r5194, 23;
	shf.l.wrap.b32 	%r5200, %r5194, %r5193, 23;
	mov.b64 	%rd7227, {%r5200, %r5199};
	xor.b64  	%rd7228, %rd7226, %rd7227;
	add.s64 	%rd7229, %rd7223, %rd7228;
	add.s64 	%rd7230, %rd7229, -4116276920077217854;
	add.s64 	%rd7231, %rd7230, %rd7094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5201,%dummy}, %rd7205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5202}, %rd7205;
	}
	shf.r.wrap.b32 	%r5203, %r5202, %r5201, 28;
	shf.r.wrap.b32 	%r5204, %r5201, %r5202, 28;
	mov.b64 	%rd7232, {%r5204, %r5203};
	shf.l.wrap.b32 	%r5205, %r5201, %r5202, 30;
	shf.l.wrap.b32 	%r5206, %r5202, %r5201, 30;
	mov.b64 	%rd7233, {%r5206, %r5205};
	xor.b64  	%rd7234, %rd7232, %rd7233;
	shf.l.wrap.b32 	%r5207, %r5201, %r5202, 25;
	shf.l.wrap.b32 	%r5208, %r5202, %r5201, 25;
	mov.b64 	%rd7235, {%r5208, %r5207};
	xor.b64  	%rd7236, %rd7234, %rd7235;
	and.b64  	%rd7237, %rd7205, %rd7168;
	or.b64  	%rd7238, %rd7205, %rd7168;
	and.b64  	%rd7239, %rd7238, %rd7131;
	or.b64  	%rd7240, %rd7239, %rd7237;
	add.s64 	%rd7241, %rd7240, %rd7236;
	add.s64 	%rd7242, %rd7241, %rd7230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5209,%dummy}, %rd7181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5210}, %rd7181;
	}
	shf.r.wrap.b32 	%r5211, %r5210, %r5209, 19;
	shf.r.wrap.b32 	%r5212, %r5209, %r5210, 19;
	mov.b64 	%rd7243, {%r5212, %r5211};
	shf.l.wrap.b32 	%r5213, %r5209, %r5210, 3;
	shf.l.wrap.b32 	%r5214, %r5210, %r5209, 3;
	mov.b64 	%rd7244, {%r5214, %r5213};
	xor.b64  	%rd7245, %rd7243, %rd7244;
	shr.u64 	%rd7246, %rd7181, 6;
	xor.b64  	%rd7247, %rd7245, %rd7246;
	shf.r.wrap.b32 	%r5215, %r4845, %r4846, 8;
	shf.r.wrap.b32 	%r5216, %r4846, %r4845, 8;
	mov.b64 	%rd7248, {%r5216, %r5215};
	shf.r.wrap.b32 	%r5217, %r4845, %r4846, 1;
	shf.r.wrap.b32 	%r5218, %r4846, %r4845, 1;
	mov.b64 	%rd7249, {%r5218, %r5217};
	xor.b64  	%rd7250, %rd7249, %rd7248;
	shr.u64 	%rd7251, %rd9293, 7;
	xor.b64  	%rd7252, %rd7250, %rd7251;
	add.s64 	%rd7253, %rd7252, %rd9294;
	add.s64 	%rd7254, %rd7253, %rd6996;
	add.s64 	%rd7255, %rd7254, %rd7247;
	add.s64 	%rd7256, %rd7255, %rd7120;
	xor.b64  	%rd7257, %rd7194, %rd7157;
	and.b64  	%rd7258, %rd7231, %rd7257;
	xor.b64  	%rd7259, %rd7258, %rd7157;
	add.s64 	%rd7260, %rd7256, %rd7259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5219,%dummy}, %rd7231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5220}, %rd7231;
	}
	shf.r.wrap.b32 	%r5221, %r5220, %r5219, 14;
	shf.r.wrap.b32 	%r5222, %r5219, %r5220, 14;
	mov.b64 	%rd7261, {%r5222, %r5221};
	shf.r.wrap.b32 	%r5223, %r5220, %r5219, 18;
	shf.r.wrap.b32 	%r5224, %r5219, %r5220, 18;
	mov.b64 	%rd7262, {%r5224, %r5223};
	xor.b64  	%rd7263, %rd7261, %rd7262;
	shf.l.wrap.b32 	%r5225, %r5219, %r5220, 23;
	shf.l.wrap.b32 	%r5226, %r5220, %r5219, 23;
	mov.b64 	%rd7264, {%r5226, %r5225};
	xor.b64  	%rd7265, %rd7263, %rd7264;
	add.s64 	%rd7266, %rd7260, %rd7265;
	add.s64 	%rd7267, %rd7266, -3051310485924567259;
	add.s64 	%rd7268, %rd7267, %rd7131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5227,%dummy}, %rd7242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5228}, %rd7242;
	}
	shf.r.wrap.b32 	%r5229, %r5228, %r5227, 28;
	shf.r.wrap.b32 	%r5230, %r5227, %r5228, 28;
	mov.b64 	%rd7269, {%r5230, %r5229};
	shf.l.wrap.b32 	%r5231, %r5227, %r5228, 30;
	shf.l.wrap.b32 	%r5232, %r5228, %r5227, 30;
	mov.b64 	%rd7270, {%r5232, %r5231};
	xor.b64  	%rd7271, %rd7269, %rd7270;
	shf.l.wrap.b32 	%r5233, %r5227, %r5228, 25;
	shf.l.wrap.b32 	%r5234, %r5228, %r5227, 25;
	mov.b64 	%rd7272, {%r5234, %r5233};
	xor.b64  	%rd7273, %rd7271, %rd7272;
	and.b64  	%rd7274, %rd7242, %rd7205;
	or.b64  	%rd7275, %rd7242, %rd7205;
	and.b64  	%rd7276, %rd7275, %rd7168;
	or.b64  	%rd7277, %rd7276, %rd7274;
	add.s64 	%rd7278, %rd7277, %rd7273;
	add.s64 	%rd7279, %rd7278, %rd7267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5235,%dummy}, %rd7218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5236}, %rd7218;
	}
	shf.r.wrap.b32 	%r5237, %r5236, %r5235, 19;
	shf.r.wrap.b32 	%r5238, %r5235, %r5236, 19;
	mov.b64 	%rd7280, {%r5238, %r5237};
	shf.l.wrap.b32 	%r5239, %r5235, %r5236, 3;
	shf.l.wrap.b32 	%r5240, %r5236, %r5235, 3;
	mov.b64 	%rd7281, {%r5240, %r5239};
	xor.b64  	%rd7282, %rd7280, %rd7281;
	shr.u64 	%rd7283, %rd7218, 6;
	xor.b64  	%rd7284, %rd7282, %rd7283;
	shf.r.wrap.b32 	%r5241, %r4873, %r4874, 8;
	shf.r.wrap.b32 	%r5242, %r4874, %r4873, 8;
	mov.b64 	%rd7285, {%r5242, %r5241};
	shf.r.wrap.b32 	%r5243, %r4873, %r4874, 1;
	shf.r.wrap.b32 	%r5244, %r4874, %r4873, 1;
	mov.b64 	%rd7286, {%r5244, %r5243};
	xor.b64  	%rd7287, %rd7286, %rd7285;
	shr.u64 	%rd7288, %rd9292, 7;
	xor.b64  	%rd7289, %rd7287, %rd7288;
	add.s64 	%rd7290, %rd7289, %rd9293;
	add.s64 	%rd7291, %rd7290, %rd7033;
	add.s64 	%rd7292, %rd7291, %rd7284;
	add.s64 	%rd7293, %rd7292, %rd7157;
	xor.b64  	%rd7294, %rd7231, %rd7194;
	and.b64  	%rd7295, %rd7268, %rd7294;
	xor.b64  	%rd7296, %rd7295, %rd7194;
	add.s64 	%rd7297, %rd7293, %rd7296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5245,%dummy}, %rd7268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5246}, %rd7268;
	}
	shf.r.wrap.b32 	%r5247, %r5246, %r5245, 14;
	shf.r.wrap.b32 	%r5248, %r5245, %r5246, 14;
	mov.b64 	%rd7298, {%r5248, %r5247};
	shf.r.wrap.b32 	%r5249, %r5246, %r5245, 18;
	shf.r.wrap.b32 	%r5250, %r5245, %r5246, 18;
	mov.b64 	%rd7299, {%r5250, %r5249};
	xor.b64  	%rd7300, %rd7298, %rd7299;
	shf.l.wrap.b32 	%r5251, %r5245, %r5246, 23;
	shf.l.wrap.b32 	%r5252, %r5246, %r5245, 23;
	mov.b64 	%rd7301, {%r5252, %r5251};
	xor.b64  	%rd7302, %rd7300, %rd7301;
	add.s64 	%rd7303, %rd7297, %rd7302;
	add.s64 	%rd7304, %rd7303, 489312712824947311;
	add.s64 	%rd7305, %rd7304, %rd7168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5253,%dummy}, %rd7279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5254}, %rd7279;
	}
	shf.r.wrap.b32 	%r5255, %r5254, %r5253, 28;
	shf.r.wrap.b32 	%r5256, %r5253, %r5254, 28;
	mov.b64 	%rd7306, {%r5256, %r5255};
	shf.l.wrap.b32 	%r5257, %r5253, %r5254, 30;
	shf.l.wrap.b32 	%r5258, %r5254, %r5253, 30;
	mov.b64 	%rd7307, {%r5258, %r5257};
	xor.b64  	%rd7308, %rd7306, %rd7307;
	shf.l.wrap.b32 	%r5259, %r5253, %r5254, 25;
	shf.l.wrap.b32 	%r5260, %r5254, %r5253, 25;
	mov.b64 	%rd7309, {%r5260, %r5259};
	xor.b64  	%rd7310, %rd7308, %rd7309;
	and.b64  	%rd7311, %rd7279, %rd7242;
	or.b64  	%rd7312, %rd7279, %rd7242;
	and.b64  	%rd7313, %rd7312, %rd7205;
	or.b64  	%rd7314, %rd7313, %rd7311;
	add.s64 	%rd7315, %rd7314, %rd7310;
	add.s64 	%rd7316, %rd7315, %rd7304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5261,%dummy}, %rd7255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5262}, %rd7255;
	}
	shf.r.wrap.b32 	%r5263, %r5262, %r5261, 19;
	shf.r.wrap.b32 	%r5264, %r5261, %r5262, 19;
	mov.b64 	%rd7317, {%r5264, %r5263};
	shf.l.wrap.b32 	%r5265, %r5261, %r5262, 3;
	shf.l.wrap.b32 	%r5266, %r5262, %r5261, 3;
	mov.b64 	%rd7318, {%r5266, %r5265};
	xor.b64  	%rd7319, %rd7317, %rd7318;
	shr.u64 	%rd7320, %rd7255, 6;
	xor.b64  	%rd7321, %rd7319, %rd7320;
	shf.r.wrap.b32 	%r5267, %r4902, %r4901, 1;
	shf.r.wrap.b32 	%r5268, %r4901, %r4902, 1;
	mov.b64 	%rd7322, {%r5268, %r5267};
	shf.r.wrap.b32 	%r5269, %r4902, %r4901, 8;
	shf.r.wrap.b32 	%r5270, %r4901, %r4902, 8;
	mov.b64 	%rd7323, {%r5270, %r5269};
	xor.b64  	%rd7324, %rd7322, %rd7323;
	shr.u64 	%rd7325, %rd6774, 7;
	xor.b64  	%rd7326, %rd7324, %rd7325;
	add.s64 	%rd7327, %rd7326, %rd9292;
	add.s64 	%rd7328, %rd7327, %rd7070;
	add.s64 	%rd7329, %rd7328, %rd7321;
	add.s64 	%rd7330, %rd7329, %rd7194;
	xor.b64  	%rd7331, %rd7268, %rd7231;
	and.b64  	%rd7332, %rd7305, %rd7331;
	xor.b64  	%rd7333, %rd7332, %rd7231;
	add.s64 	%rd7334, %rd7330, %rd7333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5271,%dummy}, %rd7305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5272}, %rd7305;
	}
	shf.r.wrap.b32 	%r5273, %r5272, %r5271, 14;
	shf.r.wrap.b32 	%r5274, %r5271, %r5272, 14;
	mov.b64 	%rd7335, {%r5274, %r5273};
	shf.r.wrap.b32 	%r5275, %r5272, %r5271, 18;
	shf.r.wrap.b32 	%r5276, %r5271, %r5272, 18;
	mov.b64 	%rd7336, {%r5276, %r5275};
	xor.b64  	%rd7337, %rd7335, %rd7336;
	shf.l.wrap.b32 	%r5277, %r5271, %r5272, 23;
	shf.l.wrap.b32 	%r5278, %r5272, %r5271, 23;
	mov.b64 	%rd7338, {%r5278, %r5277};
	xor.b64  	%rd7339, %rd7337, %rd7338;
	add.s64 	%rd7340, %rd7334, %rd7339;
	add.s64 	%rd7341, %rd7340, 1452737877330783856;
	add.s64 	%rd7342, %rd7341, %rd7205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5279,%dummy}, %rd7316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5280}, %rd7316;
	}
	shf.r.wrap.b32 	%r5281, %r5280, %r5279, 28;
	shf.r.wrap.b32 	%r5282, %r5279, %r5280, 28;
	mov.b64 	%rd7343, {%r5282, %r5281};
	shf.l.wrap.b32 	%r5283, %r5279, %r5280, 30;
	shf.l.wrap.b32 	%r5284, %r5280, %r5279, 30;
	mov.b64 	%rd7344, {%r5284, %r5283};
	xor.b64  	%rd7345, %rd7343, %rd7344;
	shf.l.wrap.b32 	%r5285, %r5279, %r5280, 25;
	shf.l.wrap.b32 	%r5286, %r5280, %r5279, 25;
	mov.b64 	%rd7346, {%r5286, %r5285};
	xor.b64  	%rd7347, %rd7345, %rd7346;
	and.b64  	%rd7348, %rd7316, %rd7279;
	or.b64  	%rd7349, %rd7316, %rd7279;
	and.b64  	%rd7350, %rd7349, %rd7242;
	or.b64  	%rd7351, %rd7350, %rd7348;
	add.s64 	%rd7352, %rd7351, %rd7347;
	add.s64 	%rd7353, %rd7352, %rd7341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5287,%dummy}, %rd7292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5288}, %rd7292;
	}
	shf.r.wrap.b32 	%r5289, %r5288, %r5287, 19;
	shf.r.wrap.b32 	%r5290, %r5287, %r5288, 19;
	mov.b64 	%rd7354, {%r5290, %r5289};
	shf.l.wrap.b32 	%r5291, %r5287, %r5288, 3;
	shf.l.wrap.b32 	%r5292, %r5288, %r5287, 3;
	mov.b64 	%rd7355, {%r5292, %r5291};
	xor.b64  	%rd7356, %rd7354, %rd7355;
	shr.u64 	%rd7357, %rd7292, 6;
	xor.b64  	%rd7358, %rd7356, %rd7357;
	shf.r.wrap.b32 	%r5293, %r4930, %r4929, 1;
	shf.r.wrap.b32 	%r5294, %r4929, %r4930, 1;
	mov.b64 	%rd7359, {%r5294, %r5293};
	shf.r.wrap.b32 	%r5295, %r4930, %r4929, 8;
	shf.r.wrap.b32 	%r5296, %r4929, %r4930, 8;
	mov.b64 	%rd7360, {%r5296, %r5295};
	xor.b64  	%rd7361, %rd7359, %rd7360;
	shr.u64 	%rd7362, %rd6811, 7;
	xor.b64  	%rd7363, %rd7361, %rd7362;
	add.s64 	%rd7364, %rd7363, %rd6774;
	add.s64 	%rd7365, %rd7364, %rd7107;
	add.s64 	%rd7366, %rd7365, %rd7358;
	add.s64 	%rd7367, %rd7366, %rd7231;
	xor.b64  	%rd7368, %rd7305, %rd7268;
	and.b64  	%rd7369, %rd7342, %rd7368;
	xor.b64  	%rd7370, %rd7369, %rd7268;
	add.s64 	%rd7371, %rd7367, %rd7370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5297,%dummy}, %rd7342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5298}, %rd7342;
	}
	shf.r.wrap.b32 	%r5299, %r5298, %r5297, 14;
	shf.r.wrap.b32 	%r5300, %r5297, %r5298, 14;
	mov.b64 	%rd7372, {%r5300, %r5299};
	shf.r.wrap.b32 	%r5301, %r5298, %r5297, 18;
	shf.r.wrap.b32 	%r5302, %r5297, %r5298, 18;
	mov.b64 	%rd7373, {%r5302, %r5301};
	xor.b64  	%rd7374, %rd7372, %rd7373;
	shf.l.wrap.b32 	%r5303, %r5297, %r5298, 23;
	shf.l.wrap.b32 	%r5304, %r5298, %r5297, 23;
	mov.b64 	%rd7375, {%r5304, %r5303};
	xor.b64  	%rd7376, %rd7374, %rd7375;
	add.s64 	%rd7377, %rd7371, %rd7376;
	add.s64 	%rd7378, %rd7377, 2861767655752347644;
	add.s64 	%rd7379, %rd7378, %rd7242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5305,%dummy}, %rd7353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5306}, %rd7353;
	}
	shf.r.wrap.b32 	%r5307, %r5306, %r5305, 28;
	shf.r.wrap.b32 	%r5308, %r5305, %r5306, 28;
	mov.b64 	%rd7380, {%r5308, %r5307};
	shf.l.wrap.b32 	%r5309, %r5305, %r5306, 30;
	shf.l.wrap.b32 	%r5310, %r5306, %r5305, 30;
	mov.b64 	%rd7381, {%r5310, %r5309};
	xor.b64  	%rd7382, %rd7380, %rd7381;
	shf.l.wrap.b32 	%r5311, %r5305, %r5306, 25;
	shf.l.wrap.b32 	%r5312, %r5306, %r5305, 25;
	mov.b64 	%rd7383, {%r5312, %r5311};
	xor.b64  	%rd7384, %rd7382, %rd7383;
	and.b64  	%rd7385, %rd7353, %rd7316;
	or.b64  	%rd7386, %rd7353, %rd7316;
	and.b64  	%rd7387, %rd7386, %rd7279;
	or.b64  	%rd7388, %rd7387, %rd7385;
	add.s64 	%rd7389, %rd7388, %rd7384;
	add.s64 	%rd7390, %rd7389, %rd7378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5313,%dummy}, %rd7329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5314}, %rd7329;
	}
	shf.r.wrap.b32 	%r5315, %r5314, %r5313, 19;
	shf.r.wrap.b32 	%r5316, %r5313, %r5314, 19;
	mov.b64 	%rd7391, {%r5316, %r5315};
	shf.l.wrap.b32 	%r5317, %r5313, %r5314, 3;
	shf.l.wrap.b32 	%r5318, %r5314, %r5313, 3;
	mov.b64 	%rd7392, {%r5318, %r5317};
	xor.b64  	%rd7393, %rd7391, %rd7392;
	shr.u64 	%rd7394, %rd7329, 6;
	xor.b64  	%rd7395, %rd7393, %rd7394;
	shf.r.wrap.b32 	%r5319, %r4958, %r4957, 1;
	shf.r.wrap.b32 	%r5320, %r4957, %r4958, 1;
	mov.b64 	%rd7396, {%r5320, %r5319};
	shf.r.wrap.b32 	%r5321, %r4958, %r4957, 8;
	shf.r.wrap.b32 	%r5322, %r4957, %r4958, 8;
	mov.b64 	%rd7397, {%r5322, %r5321};
	xor.b64  	%rd7398, %rd7396, %rd7397;
	shr.u64 	%rd7399, %rd6848, 7;
	xor.b64  	%rd7400, %rd7398, %rd7399;
	add.s64 	%rd7401, %rd7400, %rd6811;
	add.s64 	%rd7402, %rd7401, %rd7144;
	add.s64 	%rd7403, %rd7402, %rd7395;
	add.s64 	%rd7404, %rd7403, %rd7268;
	xor.b64  	%rd7405, %rd7342, %rd7305;
	and.b64  	%rd7406, %rd7379, %rd7405;
	xor.b64  	%rd7407, %rd7406, %rd7305;
	add.s64 	%rd7408, %rd7404, %rd7407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5323,%dummy}, %rd7379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5324}, %rd7379;
	}
	shf.r.wrap.b32 	%r5325, %r5324, %r5323, 14;
	shf.r.wrap.b32 	%r5326, %r5323, %r5324, 14;
	mov.b64 	%rd7409, {%r5326, %r5325};
	shf.r.wrap.b32 	%r5327, %r5324, %r5323, 18;
	shf.r.wrap.b32 	%r5328, %r5323, %r5324, 18;
	mov.b64 	%rd7410, {%r5328, %r5327};
	xor.b64  	%rd7411, %rd7409, %rd7410;
	shf.l.wrap.b32 	%r5329, %r5323, %r5324, 23;
	shf.l.wrap.b32 	%r5330, %r5324, %r5323, 23;
	mov.b64 	%rd7412, {%r5330, %r5329};
	xor.b64  	%rd7413, %rd7411, %rd7412;
	add.s64 	%rd7414, %rd7408, %rd7413;
	add.s64 	%rd7415, %rd7414, 3322285676063803686;
	add.s64 	%rd7416, %rd7415, %rd7279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5331,%dummy}, %rd7390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5332}, %rd7390;
	}
	shf.r.wrap.b32 	%r5333, %r5332, %r5331, 28;
	shf.r.wrap.b32 	%r5334, %r5331, %r5332, 28;
	mov.b64 	%rd7417, {%r5334, %r5333};
	shf.l.wrap.b32 	%r5335, %r5331, %r5332, 30;
	shf.l.wrap.b32 	%r5336, %r5332, %r5331, 30;
	mov.b64 	%rd7418, {%r5336, %r5335};
	xor.b64  	%rd7419, %rd7417, %rd7418;
	shf.l.wrap.b32 	%r5337, %r5331, %r5332, 25;
	shf.l.wrap.b32 	%r5338, %r5332, %r5331, 25;
	mov.b64 	%rd7420, {%r5338, %r5337};
	xor.b64  	%rd7421, %rd7419, %rd7420;
	and.b64  	%rd7422, %rd7390, %rd7353;
	or.b64  	%rd7423, %rd7390, %rd7353;
	and.b64  	%rd7424, %rd7423, %rd7316;
	or.b64  	%rd7425, %rd7424, %rd7422;
	add.s64 	%rd7426, %rd7425, %rd7421;
	add.s64 	%rd7427, %rd7426, %rd7415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5339,%dummy}, %rd7366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5340}, %rd7366;
	}
	shf.r.wrap.b32 	%r5341, %r5340, %r5339, 19;
	shf.r.wrap.b32 	%r5342, %r5339, %r5340, 19;
	mov.b64 	%rd7428, {%r5342, %r5341};
	shf.l.wrap.b32 	%r5343, %r5339, %r5340, 3;
	shf.l.wrap.b32 	%r5344, %r5340, %r5339, 3;
	mov.b64 	%rd7429, {%r5344, %r5343};
	xor.b64  	%rd7430, %rd7428, %rd7429;
	shr.u64 	%rd7431, %rd7366, 6;
	xor.b64  	%rd7432, %rd7430, %rd7431;
	shf.r.wrap.b32 	%r5345, %r4986, %r4985, 1;
	shf.r.wrap.b32 	%r5346, %r4985, %r4986, 1;
	mov.b64 	%rd7433, {%r5346, %r5345};
	shf.r.wrap.b32 	%r5347, %r4986, %r4985, 8;
	shf.r.wrap.b32 	%r5348, %r4985, %r4986, 8;
	mov.b64 	%rd7434, {%r5348, %r5347};
	xor.b64  	%rd7435, %rd7433, %rd7434;
	shr.u64 	%rd7436, %rd6885, 7;
	xor.b64  	%rd7437, %rd7435, %rd7436;
	add.s64 	%rd7438, %rd7437, %rd6848;
	add.s64 	%rd7439, %rd7438, %rd7181;
	add.s64 	%rd7440, %rd7439, %rd7432;
	add.s64 	%rd7441, %rd7440, %rd7305;
	xor.b64  	%rd7442, %rd7379, %rd7342;
	and.b64  	%rd7443, %rd7416, %rd7442;
	xor.b64  	%rd7444, %rd7443, %rd7342;
	add.s64 	%rd7445, %rd7441, %rd7444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5349,%dummy}, %rd7416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5350}, %rd7416;
	}
	shf.r.wrap.b32 	%r5351, %r5350, %r5349, 14;
	shf.r.wrap.b32 	%r5352, %r5349, %r5350, 14;
	mov.b64 	%rd7446, {%r5352, %r5351};
	shf.r.wrap.b32 	%r5353, %r5350, %r5349, 18;
	shf.r.wrap.b32 	%r5354, %r5349, %r5350, 18;
	mov.b64 	%rd7447, {%r5354, %r5353};
	xor.b64  	%rd7448, %rd7446, %rd7447;
	shf.l.wrap.b32 	%r5355, %r5349, %r5350, 23;
	shf.l.wrap.b32 	%r5356, %r5350, %r5349, 23;
	mov.b64 	%rd7449, {%r5356, %r5355};
	xor.b64  	%rd7450, %rd7448, %rd7449;
	add.s64 	%rd7451, %rd7445, %rd7450;
	add.s64 	%rd7452, %rd7451, 5560940570517711597;
	add.s64 	%rd7453, %rd7452, %rd7316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5357,%dummy}, %rd7427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5358}, %rd7427;
	}
	shf.r.wrap.b32 	%r5359, %r5358, %r5357, 28;
	shf.r.wrap.b32 	%r5360, %r5357, %r5358, 28;
	mov.b64 	%rd7454, {%r5360, %r5359};
	shf.l.wrap.b32 	%r5361, %r5357, %r5358, 30;
	shf.l.wrap.b32 	%r5362, %r5358, %r5357, 30;
	mov.b64 	%rd7455, {%r5362, %r5361};
	xor.b64  	%rd7456, %rd7454, %rd7455;
	shf.l.wrap.b32 	%r5363, %r5357, %r5358, 25;
	shf.l.wrap.b32 	%r5364, %r5358, %r5357, 25;
	mov.b64 	%rd7457, {%r5364, %r5363};
	xor.b64  	%rd7458, %rd7456, %rd7457;
	and.b64  	%rd7459, %rd7427, %rd7390;
	or.b64  	%rd7460, %rd7427, %rd7390;
	and.b64  	%rd7461, %rd7460, %rd7353;
	or.b64  	%rd7462, %rd7461, %rd7459;
	add.s64 	%rd7463, %rd7462, %rd7458;
	add.s64 	%rd7464, %rd7463, %rd7452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5365,%dummy}, %rd7403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5366}, %rd7403;
	}
	shf.r.wrap.b32 	%r5367, %r5366, %r5365, 19;
	shf.r.wrap.b32 	%r5368, %r5365, %r5366, 19;
	mov.b64 	%rd7465, {%r5368, %r5367};
	shf.l.wrap.b32 	%r5369, %r5365, %r5366, 3;
	shf.l.wrap.b32 	%r5370, %r5366, %r5365, 3;
	mov.b64 	%rd7466, {%r5370, %r5369};
	xor.b64  	%rd7467, %rd7465, %rd7466;
	shr.u64 	%rd7468, %rd7403, 6;
	xor.b64  	%rd7469, %rd7467, %rd7468;
	shf.r.wrap.b32 	%r5371, %r5014, %r5013, 1;
	shf.r.wrap.b32 	%r5372, %r5013, %r5014, 1;
	mov.b64 	%rd7470, {%r5372, %r5371};
	shf.r.wrap.b32 	%r5373, %r5014, %r5013, 8;
	shf.r.wrap.b32 	%r5374, %r5013, %r5014, 8;
	mov.b64 	%rd7471, {%r5374, %r5373};
	xor.b64  	%rd7472, %rd7470, %rd7471;
	shr.u64 	%rd7473, %rd6922, 7;
	xor.b64  	%rd7474, %rd7472, %rd7473;
	add.s64 	%rd7475, %rd7474, %rd6885;
	add.s64 	%rd7476, %rd7475, %rd7218;
	add.s64 	%rd7477, %rd7476, %rd7469;
	add.s64 	%rd7478, %rd7477, %rd7342;
	xor.b64  	%rd7479, %rd7416, %rd7379;
	and.b64  	%rd7480, %rd7453, %rd7479;
	xor.b64  	%rd7481, %rd7480, %rd7379;
	add.s64 	%rd7482, %rd7478, %rd7481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5375,%dummy}, %rd7453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5376}, %rd7453;
	}
	shf.r.wrap.b32 	%r5377, %r5376, %r5375, 14;
	shf.r.wrap.b32 	%r5378, %r5375, %r5376, 14;
	mov.b64 	%rd7483, {%r5378, %r5377};
	shf.r.wrap.b32 	%r5379, %r5376, %r5375, 18;
	shf.r.wrap.b32 	%r5380, %r5375, %r5376, 18;
	mov.b64 	%rd7484, {%r5380, %r5379};
	xor.b64  	%rd7485, %rd7483, %rd7484;
	shf.l.wrap.b32 	%r5381, %r5375, %r5376, 23;
	shf.l.wrap.b32 	%r5382, %r5376, %r5375, 23;
	mov.b64 	%rd7486, {%r5382, %r5381};
	xor.b64  	%rd7487, %rd7485, %rd7486;
	add.s64 	%rd7488, %rd7482, %rd7487;
	add.s64 	%rd7489, %rd7488, 5996557281743188959;
	add.s64 	%rd7490, %rd7489, %rd7353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5383,%dummy}, %rd7464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5384}, %rd7464;
	}
	shf.r.wrap.b32 	%r5385, %r5384, %r5383, 28;
	shf.r.wrap.b32 	%r5386, %r5383, %r5384, 28;
	mov.b64 	%rd7491, {%r5386, %r5385};
	shf.l.wrap.b32 	%r5387, %r5383, %r5384, 30;
	shf.l.wrap.b32 	%r5388, %r5384, %r5383, 30;
	mov.b64 	%rd7492, {%r5388, %r5387};
	xor.b64  	%rd7493, %rd7491, %rd7492;
	shf.l.wrap.b32 	%r5389, %r5383, %r5384, 25;
	shf.l.wrap.b32 	%r5390, %r5384, %r5383, 25;
	mov.b64 	%rd7494, {%r5390, %r5389};
	xor.b64  	%rd7495, %rd7493, %rd7494;
	and.b64  	%rd7496, %rd7464, %rd7427;
	or.b64  	%rd7497, %rd7464, %rd7427;
	and.b64  	%rd7498, %rd7497, %rd7390;
	or.b64  	%rd7499, %rd7498, %rd7496;
	add.s64 	%rd7500, %rd7499, %rd7495;
	add.s64 	%rd7501, %rd7500, %rd7489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5391,%dummy}, %rd7440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5392}, %rd7440;
	}
	shf.r.wrap.b32 	%r5393, %r5392, %r5391, 19;
	shf.r.wrap.b32 	%r5394, %r5391, %r5392, 19;
	mov.b64 	%rd7502, {%r5394, %r5393};
	shf.l.wrap.b32 	%r5395, %r5391, %r5392, 3;
	shf.l.wrap.b32 	%r5396, %r5392, %r5391, 3;
	mov.b64 	%rd7503, {%r5396, %r5395};
	xor.b64  	%rd7504, %rd7502, %rd7503;
	shr.u64 	%rd7505, %rd7440, 6;
	xor.b64  	%rd7506, %rd7504, %rd7505;
	shf.r.wrap.b32 	%r5397, %r5042, %r5041, 1;
	shf.r.wrap.b32 	%r5398, %r5041, %r5042, 1;
	mov.b64 	%rd7507, {%r5398, %r5397};
	shf.r.wrap.b32 	%r5399, %r5042, %r5041, 8;
	shf.r.wrap.b32 	%r5400, %r5041, %r5042, 8;
	mov.b64 	%rd7508, {%r5400, %r5399};
	xor.b64  	%rd7509, %rd7507, %rd7508;
	shr.u64 	%rd7510, %rd6959, 7;
	xor.b64  	%rd7511, %rd7509, %rd7510;
	add.s64 	%rd7512, %rd7511, %rd6922;
	add.s64 	%rd7513, %rd7512, %rd7255;
	add.s64 	%rd7514, %rd7513, %rd7506;
	add.s64 	%rd7515, %rd7514, %rd7379;
	xor.b64  	%rd7516, %rd7453, %rd7416;
	and.b64  	%rd7517, %rd7490, %rd7516;
	xor.b64  	%rd7518, %rd7517, %rd7416;
	add.s64 	%rd7519, %rd7515, %rd7518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5401,%dummy}, %rd7490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5402}, %rd7490;
	}
	shf.r.wrap.b32 	%r5403, %r5402, %r5401, 14;
	shf.r.wrap.b32 	%r5404, %r5401, %r5402, 14;
	mov.b64 	%rd7520, {%r5404, %r5403};
	shf.r.wrap.b32 	%r5405, %r5402, %r5401, 18;
	shf.r.wrap.b32 	%r5406, %r5401, %r5402, 18;
	mov.b64 	%rd7521, {%r5406, %r5405};
	xor.b64  	%rd7522, %rd7520, %rd7521;
	shf.l.wrap.b32 	%r5407, %r5401, %r5402, 23;
	shf.l.wrap.b32 	%r5408, %r5402, %r5401, 23;
	mov.b64 	%rd7523, {%r5408, %r5407};
	xor.b64  	%rd7524, %rd7522, %rd7523;
	add.s64 	%rd7525, %rd7519, %rd7524;
	add.s64 	%rd7526, %rd7525, 7280758554555802590;
	add.s64 	%rd7527, %rd7526, %rd7390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5409,%dummy}, %rd7501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5410}, %rd7501;
	}
	shf.r.wrap.b32 	%r5411, %r5410, %r5409, 28;
	shf.r.wrap.b32 	%r5412, %r5409, %r5410, 28;
	mov.b64 	%rd7528, {%r5412, %r5411};
	shf.l.wrap.b32 	%r5413, %r5409, %r5410, 30;
	shf.l.wrap.b32 	%r5414, %r5410, %r5409, 30;
	mov.b64 	%rd7529, {%r5414, %r5413};
	xor.b64  	%rd7530, %rd7528, %rd7529;
	shf.l.wrap.b32 	%r5415, %r5409, %r5410, 25;
	shf.l.wrap.b32 	%r5416, %r5410, %r5409, 25;
	mov.b64 	%rd7531, {%r5416, %r5415};
	xor.b64  	%rd7532, %rd7530, %rd7531;
	and.b64  	%rd7533, %rd7501, %rd7464;
	or.b64  	%rd7534, %rd7501, %rd7464;
	and.b64  	%rd7535, %rd7534, %rd7427;
	or.b64  	%rd7536, %rd7535, %rd7533;
	add.s64 	%rd7537, %rd7536, %rd7532;
	add.s64 	%rd7538, %rd7537, %rd7526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5417,%dummy}, %rd7477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5418}, %rd7477;
	}
	shf.r.wrap.b32 	%r5419, %r5418, %r5417, 19;
	shf.r.wrap.b32 	%r5420, %r5417, %r5418, 19;
	mov.b64 	%rd7539, {%r5420, %r5419};
	shf.l.wrap.b32 	%r5421, %r5417, %r5418, 3;
	shf.l.wrap.b32 	%r5422, %r5418, %r5417, 3;
	mov.b64 	%rd7540, {%r5422, %r5421};
	xor.b64  	%rd7541, %rd7539, %rd7540;
	shr.u64 	%rd7542, %rd7477, 6;
	xor.b64  	%rd7543, %rd7541, %rd7542;
	shf.r.wrap.b32 	%r5423, %r5070, %r5069, 1;
	shf.r.wrap.b32 	%r5424, %r5069, %r5070, 1;
	mov.b64 	%rd7544, {%r5424, %r5423};
	shf.r.wrap.b32 	%r5425, %r5070, %r5069, 8;
	shf.r.wrap.b32 	%r5426, %r5069, %r5070, 8;
	mov.b64 	%rd7545, {%r5426, %r5425};
	xor.b64  	%rd7546, %rd7544, %rd7545;
	shr.u64 	%rd7547, %rd6996, 7;
	xor.b64  	%rd7548, %rd7546, %rd7547;
	add.s64 	%rd7549, %rd7548, %rd6959;
	add.s64 	%rd7550, %rd7549, %rd7292;
	add.s64 	%rd7551, %rd7550, %rd7543;
	add.s64 	%rd7552, %rd7551, %rd7416;
	xor.b64  	%rd7553, %rd7490, %rd7453;
	and.b64  	%rd7554, %rd7527, %rd7553;
	xor.b64  	%rd7555, %rd7554, %rd7453;
	add.s64 	%rd7556, %rd7552, %rd7555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5427,%dummy}, %rd7527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5428}, %rd7527;
	}
	shf.r.wrap.b32 	%r5429, %r5428, %r5427, 14;
	shf.r.wrap.b32 	%r5430, %r5427, %r5428, 14;
	mov.b64 	%rd7557, {%r5430, %r5429};
	shf.r.wrap.b32 	%r5431, %r5428, %r5427, 18;
	shf.r.wrap.b32 	%r5432, %r5427, %r5428, 18;
	mov.b64 	%rd7558, {%r5432, %r5431};
	xor.b64  	%rd7559, %rd7557, %rd7558;
	shf.l.wrap.b32 	%r5433, %r5427, %r5428, 23;
	shf.l.wrap.b32 	%r5434, %r5428, %r5427, 23;
	mov.b64 	%rd7560, {%r5434, %r5433};
	xor.b64  	%rd7561, %rd7559, %rd7560;
	add.s64 	%rd7562, %rd7556, %rd7561;
	add.s64 	%rd7563, %rd7562, 8532644243296465576;
	add.s64 	%rd7564, %rd7563, %rd7427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5435,%dummy}, %rd7538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5436}, %rd7538;
	}
	shf.r.wrap.b32 	%r5437, %r5436, %r5435, 28;
	shf.r.wrap.b32 	%r5438, %r5435, %r5436, 28;
	mov.b64 	%rd7565, {%r5438, %r5437};
	shf.l.wrap.b32 	%r5439, %r5435, %r5436, 30;
	shf.l.wrap.b32 	%r5440, %r5436, %r5435, 30;
	mov.b64 	%rd7566, {%r5440, %r5439};
	xor.b64  	%rd7567, %rd7565, %rd7566;
	shf.l.wrap.b32 	%r5441, %r5435, %r5436, 25;
	shf.l.wrap.b32 	%r5442, %r5436, %r5435, 25;
	mov.b64 	%rd7568, {%r5442, %r5441};
	xor.b64  	%rd7569, %rd7567, %rd7568;
	and.b64  	%rd7570, %rd7538, %rd7501;
	or.b64  	%rd7571, %rd7538, %rd7501;
	and.b64  	%rd7572, %rd7571, %rd7464;
	or.b64  	%rd7573, %rd7572, %rd7570;
	add.s64 	%rd7574, %rd7573, %rd7569;
	add.s64 	%rd7575, %rd7574, %rd7563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5443,%dummy}, %rd7514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5444}, %rd7514;
	}
	shf.r.wrap.b32 	%r5445, %r5444, %r5443, 19;
	shf.r.wrap.b32 	%r5446, %r5443, %r5444, 19;
	mov.b64 	%rd7576, {%r5446, %r5445};
	shf.l.wrap.b32 	%r5447, %r5443, %r5444, 3;
	shf.l.wrap.b32 	%r5448, %r5444, %r5443, 3;
	mov.b64 	%rd7577, {%r5448, %r5447};
	xor.b64  	%rd7578, %rd7576, %rd7577;
	shr.u64 	%rd7579, %rd7514, 6;
	xor.b64  	%rd7580, %rd7578, %rd7579;
	shf.r.wrap.b32 	%r5449, %r5098, %r5097, 1;
	shf.r.wrap.b32 	%r5450, %r5097, %r5098, 1;
	mov.b64 	%rd7581, {%r5450, %r5449};
	shf.r.wrap.b32 	%r5451, %r5098, %r5097, 8;
	shf.r.wrap.b32 	%r5452, %r5097, %r5098, 8;
	mov.b64 	%rd7582, {%r5452, %r5451};
	xor.b64  	%rd7583, %rd7581, %rd7582;
	shr.u64 	%rd7584, %rd7033, 7;
	xor.b64  	%rd7585, %rd7583, %rd7584;
	add.s64 	%rd7586, %rd7585, %rd6996;
	add.s64 	%rd7587, %rd7586, %rd7329;
	add.s64 	%rd7588, %rd7587, %rd7580;
	add.s64 	%rd7589, %rd7588, %rd7453;
	xor.b64  	%rd7590, %rd7527, %rd7490;
	and.b64  	%rd7591, %rd7564, %rd7590;
	xor.b64  	%rd7592, %rd7591, %rd7490;
	add.s64 	%rd7593, %rd7589, %rd7592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5453,%dummy}, %rd7564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5454}, %rd7564;
	}
	shf.r.wrap.b32 	%r5455, %r5454, %r5453, 14;
	shf.r.wrap.b32 	%r5456, %r5453, %r5454, 14;
	mov.b64 	%rd7594, {%r5456, %r5455};
	shf.r.wrap.b32 	%r5457, %r5454, %r5453, 18;
	shf.r.wrap.b32 	%r5458, %r5453, %r5454, 18;
	mov.b64 	%rd7595, {%r5458, %r5457};
	xor.b64  	%rd7596, %rd7594, %rd7595;
	shf.l.wrap.b32 	%r5459, %r5453, %r5454, 23;
	shf.l.wrap.b32 	%r5460, %r5454, %r5453, 23;
	mov.b64 	%rd7597, {%r5460, %r5459};
	xor.b64  	%rd7598, %rd7596, %rd7597;
	add.s64 	%rd7599, %rd7593, %rd7598;
	add.s64 	%rd7600, %rd7599, -9096487096722542874;
	add.s64 	%rd7601, %rd7600, %rd7464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5461,%dummy}, %rd7575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5462}, %rd7575;
	}
	shf.r.wrap.b32 	%r5463, %r5462, %r5461, 28;
	shf.r.wrap.b32 	%r5464, %r5461, %r5462, 28;
	mov.b64 	%rd7602, {%r5464, %r5463};
	shf.l.wrap.b32 	%r5465, %r5461, %r5462, 30;
	shf.l.wrap.b32 	%r5466, %r5462, %r5461, 30;
	mov.b64 	%rd7603, {%r5466, %r5465};
	xor.b64  	%rd7604, %rd7602, %rd7603;
	shf.l.wrap.b32 	%r5467, %r5461, %r5462, 25;
	shf.l.wrap.b32 	%r5468, %r5462, %r5461, 25;
	mov.b64 	%rd7605, {%r5468, %r5467};
	xor.b64  	%rd7606, %rd7604, %rd7605;
	and.b64  	%rd7607, %rd7575, %rd7538;
	or.b64  	%rd7608, %rd7575, %rd7538;
	and.b64  	%rd7609, %rd7608, %rd7501;
	or.b64  	%rd7610, %rd7609, %rd7607;
	add.s64 	%rd7611, %rd7610, %rd7606;
	add.s64 	%rd7612, %rd7611, %rd7600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5469,%dummy}, %rd7551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5470}, %rd7551;
	}
	shf.r.wrap.b32 	%r5471, %r5470, %r5469, 19;
	shf.r.wrap.b32 	%r5472, %r5469, %r5470, 19;
	mov.b64 	%rd7613, {%r5472, %r5471};
	shf.l.wrap.b32 	%r5473, %r5469, %r5470, 3;
	shf.l.wrap.b32 	%r5474, %r5470, %r5469, 3;
	mov.b64 	%rd7614, {%r5474, %r5473};
	xor.b64  	%rd7615, %rd7613, %rd7614;
	shr.u64 	%rd7616, %rd7551, 6;
	xor.b64  	%rd7617, %rd7615, %rd7616;
	shf.r.wrap.b32 	%r5475, %r5126, %r5125, 1;
	shf.r.wrap.b32 	%r5476, %r5125, %r5126, 1;
	mov.b64 	%rd7618, {%r5476, %r5475};
	shf.r.wrap.b32 	%r5477, %r5126, %r5125, 8;
	shf.r.wrap.b32 	%r5478, %r5125, %r5126, 8;
	mov.b64 	%rd7619, {%r5478, %r5477};
	xor.b64  	%rd7620, %rd7618, %rd7619;
	shr.u64 	%rd7621, %rd7070, 7;
	xor.b64  	%rd7622, %rd7620, %rd7621;
	add.s64 	%rd7623, %rd7622, %rd7033;
	add.s64 	%rd7624, %rd7623, %rd7366;
	add.s64 	%rd7625, %rd7624, %rd7617;
	add.s64 	%rd7626, %rd7625, %rd7490;
	xor.b64  	%rd7627, %rd7564, %rd7527;
	and.b64  	%rd7628, %rd7601, %rd7627;
	xor.b64  	%rd7629, %rd7628, %rd7527;
	add.s64 	%rd7630, %rd7626, %rd7629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5479,%dummy}, %rd7601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5480}, %rd7601;
	}
	shf.r.wrap.b32 	%r5481, %r5480, %r5479, 14;
	shf.r.wrap.b32 	%r5482, %r5479, %r5480, 14;
	mov.b64 	%rd7631, {%r5482, %r5481};
	shf.r.wrap.b32 	%r5483, %r5480, %r5479, 18;
	shf.r.wrap.b32 	%r5484, %r5479, %r5480, 18;
	mov.b64 	%rd7632, {%r5484, %r5483};
	xor.b64  	%rd7633, %rd7631, %rd7632;
	shf.l.wrap.b32 	%r5485, %r5479, %r5480, 23;
	shf.l.wrap.b32 	%r5486, %r5480, %r5479, 23;
	mov.b64 	%rd7634, {%r5486, %r5485};
	xor.b64  	%rd7635, %rd7633, %rd7634;
	add.s64 	%rd7636, %rd7630, %rd7635;
	add.s64 	%rd7637, %rd7636, -7894198246740708037;
	add.s64 	%rd7638, %rd7637, %rd7501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5487,%dummy}, %rd7612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5488}, %rd7612;
	}
	shf.r.wrap.b32 	%r5489, %r5488, %r5487, 28;
	shf.r.wrap.b32 	%r5490, %r5487, %r5488, 28;
	mov.b64 	%rd7639, {%r5490, %r5489};
	shf.l.wrap.b32 	%r5491, %r5487, %r5488, 30;
	shf.l.wrap.b32 	%r5492, %r5488, %r5487, 30;
	mov.b64 	%rd7640, {%r5492, %r5491};
	xor.b64  	%rd7641, %rd7639, %rd7640;
	shf.l.wrap.b32 	%r5493, %r5487, %r5488, 25;
	shf.l.wrap.b32 	%r5494, %r5488, %r5487, 25;
	mov.b64 	%rd7642, {%r5494, %r5493};
	xor.b64  	%rd7643, %rd7641, %rd7642;
	and.b64  	%rd7644, %rd7612, %rd7575;
	or.b64  	%rd7645, %rd7612, %rd7575;
	and.b64  	%rd7646, %rd7645, %rd7538;
	or.b64  	%rd7647, %rd7646, %rd7644;
	add.s64 	%rd7648, %rd7647, %rd7643;
	add.s64 	%rd7649, %rd7648, %rd7637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5495,%dummy}, %rd7588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5496}, %rd7588;
	}
	shf.r.wrap.b32 	%r5497, %r5496, %r5495, 19;
	shf.r.wrap.b32 	%r5498, %r5495, %r5496, 19;
	mov.b64 	%rd7650, {%r5498, %r5497};
	shf.l.wrap.b32 	%r5499, %r5495, %r5496, 3;
	shf.l.wrap.b32 	%r5500, %r5496, %r5495, 3;
	mov.b64 	%rd7651, {%r5500, %r5499};
	xor.b64  	%rd7652, %rd7650, %rd7651;
	shr.u64 	%rd7653, %rd7588, 6;
	xor.b64  	%rd7654, %rd7652, %rd7653;
	shf.r.wrap.b32 	%r5501, %r5154, %r5153, 1;
	shf.r.wrap.b32 	%r5502, %r5153, %r5154, 1;
	mov.b64 	%rd7655, {%r5502, %r5501};
	shf.r.wrap.b32 	%r5503, %r5154, %r5153, 8;
	shf.r.wrap.b32 	%r5504, %r5153, %r5154, 8;
	mov.b64 	%rd7656, {%r5504, %r5503};
	xor.b64  	%rd7657, %rd7655, %rd7656;
	shr.u64 	%rd7658, %rd7107, 7;
	xor.b64  	%rd7659, %rd7657, %rd7658;
	add.s64 	%rd7660, %rd7659, %rd7070;
	add.s64 	%rd7661, %rd7660, %rd7403;
	add.s64 	%rd7662, %rd7661, %rd7654;
	add.s64 	%rd7663, %rd7662, %rd7527;
	xor.b64  	%rd7664, %rd7601, %rd7564;
	and.b64  	%rd7665, %rd7638, %rd7664;
	xor.b64  	%rd7666, %rd7665, %rd7564;
	add.s64 	%rd7667, %rd7663, %rd7666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5505,%dummy}, %rd7638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5506}, %rd7638;
	}
	shf.r.wrap.b32 	%r5507, %r5506, %r5505, 14;
	shf.r.wrap.b32 	%r5508, %r5505, %r5506, 14;
	mov.b64 	%rd7668, {%r5508, %r5507};
	shf.r.wrap.b32 	%r5509, %r5506, %r5505, 18;
	shf.r.wrap.b32 	%r5510, %r5505, %r5506, 18;
	mov.b64 	%rd7669, {%r5510, %r5509};
	xor.b64  	%rd7670, %rd7668, %rd7669;
	shf.l.wrap.b32 	%r5511, %r5505, %r5506, 23;
	shf.l.wrap.b32 	%r5512, %r5506, %r5505, 23;
	mov.b64 	%rd7671, {%r5512, %r5511};
	xor.b64  	%rd7672, %rd7670, %rd7671;
	add.s64 	%rd7673, %rd7667, %rd7672;
	add.s64 	%rd7674, %rd7673, -6719396339535248540;
	add.s64 	%rd7675, %rd7674, %rd7538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5513,%dummy}, %rd7649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5514}, %rd7649;
	}
	shf.r.wrap.b32 	%r5515, %r5514, %r5513, 28;
	shf.r.wrap.b32 	%r5516, %r5513, %r5514, 28;
	mov.b64 	%rd7676, {%r5516, %r5515};
	shf.l.wrap.b32 	%r5517, %r5513, %r5514, 30;
	shf.l.wrap.b32 	%r5518, %r5514, %r5513, 30;
	mov.b64 	%rd7677, {%r5518, %r5517};
	xor.b64  	%rd7678, %rd7676, %rd7677;
	shf.l.wrap.b32 	%r5519, %r5513, %r5514, 25;
	shf.l.wrap.b32 	%r5520, %r5514, %r5513, 25;
	mov.b64 	%rd7679, {%r5520, %r5519};
	xor.b64  	%rd7680, %rd7678, %rd7679;
	and.b64  	%rd7681, %rd7649, %rd7612;
	or.b64  	%rd7682, %rd7649, %rd7612;
	and.b64  	%rd7683, %rd7682, %rd7575;
	or.b64  	%rd7684, %rd7683, %rd7681;
	add.s64 	%rd7685, %rd7684, %rd7680;
	add.s64 	%rd7686, %rd7685, %rd7674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5521,%dummy}, %rd7625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5522}, %rd7625;
	}
	shf.r.wrap.b32 	%r5523, %r5522, %r5521, 19;
	shf.r.wrap.b32 	%r5524, %r5521, %r5522, 19;
	mov.b64 	%rd7687, {%r5524, %r5523};
	shf.l.wrap.b32 	%r5525, %r5521, %r5522, 3;
	shf.l.wrap.b32 	%r5526, %r5522, %r5521, 3;
	mov.b64 	%rd7688, {%r5526, %r5525};
	xor.b64  	%rd7689, %rd7687, %rd7688;
	shr.u64 	%rd7690, %rd7625, 6;
	xor.b64  	%rd7691, %rd7689, %rd7690;
	shf.r.wrap.b32 	%r5527, %r5182, %r5181, 1;
	shf.r.wrap.b32 	%r5528, %r5181, %r5182, 1;
	mov.b64 	%rd7692, {%r5528, %r5527};
	shf.r.wrap.b32 	%r5529, %r5182, %r5181, 8;
	shf.r.wrap.b32 	%r5530, %r5181, %r5182, 8;
	mov.b64 	%rd7693, {%r5530, %r5529};
	xor.b64  	%rd7694, %rd7692, %rd7693;
	shr.u64 	%rd7695, %rd7144, 7;
	xor.b64  	%rd7696, %rd7694, %rd7695;
	add.s64 	%rd7697, %rd7696, %rd7107;
	add.s64 	%rd7698, %rd7697, %rd7440;
	add.s64 	%rd7699, %rd7698, %rd7691;
	add.s64 	%rd7700, %rd7699, %rd7564;
	xor.b64  	%rd7701, %rd7638, %rd7601;
	and.b64  	%rd7702, %rd7675, %rd7701;
	xor.b64  	%rd7703, %rd7702, %rd7601;
	add.s64 	%rd7704, %rd7700, %rd7703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5531,%dummy}, %rd7675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5532}, %rd7675;
	}
	shf.r.wrap.b32 	%r5533, %r5532, %r5531, 14;
	shf.r.wrap.b32 	%r5534, %r5531, %r5532, 14;
	mov.b64 	%rd7705, {%r5534, %r5533};
	shf.r.wrap.b32 	%r5535, %r5532, %r5531, 18;
	shf.r.wrap.b32 	%r5536, %r5531, %r5532, 18;
	mov.b64 	%rd7706, {%r5536, %r5535};
	xor.b64  	%rd7707, %rd7705, %rd7706;
	shf.l.wrap.b32 	%r5537, %r5531, %r5532, 23;
	shf.l.wrap.b32 	%r5538, %r5532, %r5531, 23;
	mov.b64 	%rd7708, {%r5538, %r5537};
	xor.b64  	%rd7709, %rd7707, %rd7708;
	add.s64 	%rd7710, %rd7704, %rd7709;
	add.s64 	%rd7711, %rd7710, -6333637450476146687;
	add.s64 	%rd7712, %rd7711, %rd7575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5539,%dummy}, %rd7686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5540}, %rd7686;
	}
	shf.r.wrap.b32 	%r5541, %r5540, %r5539, 28;
	shf.r.wrap.b32 	%r5542, %r5539, %r5540, 28;
	mov.b64 	%rd7713, {%r5542, %r5541};
	shf.l.wrap.b32 	%r5543, %r5539, %r5540, 30;
	shf.l.wrap.b32 	%r5544, %r5540, %r5539, 30;
	mov.b64 	%rd7714, {%r5544, %r5543};
	xor.b64  	%rd7715, %rd7713, %rd7714;
	shf.l.wrap.b32 	%r5545, %r5539, %r5540, 25;
	shf.l.wrap.b32 	%r5546, %r5540, %r5539, 25;
	mov.b64 	%rd7716, {%r5546, %r5545};
	xor.b64  	%rd7717, %rd7715, %rd7716;
	and.b64  	%rd7718, %rd7686, %rd7649;
	or.b64  	%rd7719, %rd7686, %rd7649;
	and.b64  	%rd7720, %rd7719, %rd7612;
	or.b64  	%rd7721, %rd7720, %rd7718;
	add.s64 	%rd7722, %rd7721, %rd7717;
	add.s64 	%rd7723, %rd7722, %rd7711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5547,%dummy}, %rd7662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5548}, %rd7662;
	}
	shf.r.wrap.b32 	%r5549, %r5548, %r5547, 19;
	shf.r.wrap.b32 	%r5550, %r5547, %r5548, 19;
	mov.b64 	%rd7724, {%r5550, %r5549};
	shf.l.wrap.b32 	%r5551, %r5547, %r5548, 3;
	shf.l.wrap.b32 	%r5552, %r5548, %r5547, 3;
	mov.b64 	%rd7725, {%r5552, %r5551};
	xor.b64  	%rd7726, %rd7724, %rd7725;
	shr.u64 	%rd7727, %rd7662, 6;
	xor.b64  	%rd7728, %rd7726, %rd7727;
	shf.r.wrap.b32 	%r5553, %r5210, %r5209, 1;
	shf.r.wrap.b32 	%r5554, %r5209, %r5210, 1;
	mov.b64 	%rd7729, {%r5554, %r5553};
	shf.r.wrap.b32 	%r5555, %r5210, %r5209, 8;
	shf.r.wrap.b32 	%r5556, %r5209, %r5210, 8;
	mov.b64 	%rd7730, {%r5556, %r5555};
	xor.b64  	%rd7731, %rd7729, %rd7730;
	shr.u64 	%rd7732, %rd7181, 7;
	xor.b64  	%rd7733, %rd7731, %rd7732;
	add.s64 	%rd7734, %rd7733, %rd7144;
	add.s64 	%rd7735, %rd7734, %rd7477;
	add.s64 	%rd7736, %rd7735, %rd7728;
	add.s64 	%rd7737, %rd7736, %rd7601;
	xor.b64  	%rd7738, %rd7675, %rd7638;
	and.b64  	%rd7739, %rd7712, %rd7738;
	xor.b64  	%rd7740, %rd7739, %rd7638;
	add.s64 	%rd7741, %rd7737, %rd7740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5557,%dummy}, %rd7712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5558}, %rd7712;
	}
	shf.r.wrap.b32 	%r5559, %r5558, %r5557, 14;
	shf.r.wrap.b32 	%r5560, %r5557, %r5558, 14;
	mov.b64 	%rd7742, {%r5560, %r5559};
	shf.r.wrap.b32 	%r5561, %r5558, %r5557, 18;
	shf.r.wrap.b32 	%r5562, %r5557, %r5558, 18;
	mov.b64 	%rd7743, {%r5562, %r5561};
	xor.b64  	%rd7744, %rd7742, %rd7743;
	shf.l.wrap.b32 	%r5563, %r5557, %r5558, 23;
	shf.l.wrap.b32 	%r5564, %r5558, %r5557, 23;
	mov.b64 	%rd7745, {%r5564, %r5563};
	xor.b64  	%rd7746, %rd7744, %rd7745;
	add.s64 	%rd7747, %rd7741, %rd7746;
	add.s64 	%rd7748, %rd7747, -4446306890439682159;
	add.s64 	%rd7749, %rd7748, %rd7612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5565,%dummy}, %rd7723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5566}, %rd7723;
	}
	shf.r.wrap.b32 	%r5567, %r5566, %r5565, 28;
	shf.r.wrap.b32 	%r5568, %r5565, %r5566, 28;
	mov.b64 	%rd7750, {%r5568, %r5567};
	shf.l.wrap.b32 	%r5569, %r5565, %r5566, 30;
	shf.l.wrap.b32 	%r5570, %r5566, %r5565, 30;
	mov.b64 	%rd7751, {%r5570, %r5569};
	xor.b64  	%rd7752, %rd7750, %rd7751;
	shf.l.wrap.b32 	%r5571, %r5565, %r5566, 25;
	shf.l.wrap.b32 	%r5572, %r5566, %r5565, 25;
	mov.b64 	%rd7753, {%r5572, %r5571};
	xor.b64  	%rd7754, %rd7752, %rd7753;
	and.b64  	%rd7755, %rd7723, %rd7686;
	or.b64  	%rd7756, %rd7723, %rd7686;
	and.b64  	%rd7757, %rd7756, %rd7649;
	or.b64  	%rd7758, %rd7757, %rd7755;
	add.s64 	%rd7759, %rd7758, %rd7754;
	add.s64 	%rd7760, %rd7759, %rd7748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5573,%dummy}, %rd7699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5574}, %rd7699;
	}
	shf.r.wrap.b32 	%r5575, %r5574, %r5573, 19;
	shf.r.wrap.b32 	%r5576, %r5573, %r5574, 19;
	mov.b64 	%rd7761, {%r5576, %r5575};
	shf.l.wrap.b32 	%r5577, %r5573, %r5574, 3;
	shf.l.wrap.b32 	%r5578, %r5574, %r5573, 3;
	mov.b64 	%rd7762, {%r5578, %r5577};
	xor.b64  	%rd7763, %rd7761, %rd7762;
	shr.u64 	%rd7764, %rd7699, 6;
	xor.b64  	%rd7765, %rd7763, %rd7764;
	shf.r.wrap.b32 	%r5579, %r5236, %r5235, 1;
	shf.r.wrap.b32 	%r5580, %r5235, %r5236, 1;
	mov.b64 	%rd7766, {%r5580, %r5579};
	shf.r.wrap.b32 	%r5581, %r5236, %r5235, 8;
	shf.r.wrap.b32 	%r5582, %r5235, %r5236, 8;
	mov.b64 	%rd7767, {%r5582, %r5581};
	xor.b64  	%rd7768, %rd7766, %rd7767;
	shr.u64 	%rd7769, %rd7218, 7;
	xor.b64  	%rd7770, %rd7768, %rd7769;
	add.s64 	%rd7771, %rd7770, %rd7181;
	add.s64 	%rd7772, %rd7771, %rd7514;
	add.s64 	%rd7773, %rd7772, %rd7765;
	add.s64 	%rd7774, %rd7773, %rd7638;
	xor.b64  	%rd7775, %rd7712, %rd7675;
	and.b64  	%rd7776, %rd7749, %rd7775;
	xor.b64  	%rd7777, %rd7776, %rd7675;
	add.s64 	%rd7778, %rd7774, %rd7777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5583,%dummy}, %rd7749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5584}, %rd7749;
	}
	shf.r.wrap.b32 	%r5585, %r5584, %r5583, 14;
	shf.r.wrap.b32 	%r5586, %r5583, %r5584, 14;
	mov.b64 	%rd7779, {%r5586, %r5585};
	shf.r.wrap.b32 	%r5587, %r5584, %r5583, 18;
	shf.r.wrap.b32 	%r5588, %r5583, %r5584, 18;
	mov.b64 	%rd7780, {%r5588, %r5587};
	xor.b64  	%rd7781, %rd7779, %rd7780;
	shf.l.wrap.b32 	%r5589, %r5583, %r5584, 23;
	shf.l.wrap.b32 	%r5590, %r5584, %r5583, 23;
	mov.b64 	%rd7782, {%r5590, %r5589};
	xor.b64  	%rd7783, %rd7781, %rd7782;
	add.s64 	%rd7784, %rd7778, %rd7783;
	add.s64 	%rd7785, %rd7784, -4076793802049405392;
	add.s64 	%rd7786, %rd7785, %rd7649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5591,%dummy}, %rd7760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5592}, %rd7760;
	}
	shf.r.wrap.b32 	%r5593, %r5592, %r5591, 28;
	shf.r.wrap.b32 	%r5594, %r5591, %r5592, 28;
	mov.b64 	%rd7787, {%r5594, %r5593};
	shf.l.wrap.b32 	%r5595, %r5591, %r5592, 30;
	shf.l.wrap.b32 	%r5596, %r5592, %r5591, 30;
	mov.b64 	%rd7788, {%r5596, %r5595};
	xor.b64  	%rd7789, %rd7787, %rd7788;
	shf.l.wrap.b32 	%r5597, %r5591, %r5592, 25;
	shf.l.wrap.b32 	%r5598, %r5592, %r5591, 25;
	mov.b64 	%rd7790, {%r5598, %r5597};
	xor.b64  	%rd7791, %rd7789, %rd7790;
	and.b64  	%rd7792, %rd7760, %rd7723;
	or.b64  	%rd7793, %rd7760, %rd7723;
	and.b64  	%rd7794, %rd7793, %rd7686;
	or.b64  	%rd7795, %rd7794, %rd7792;
	add.s64 	%rd7796, %rd7795, %rd7791;
	add.s64 	%rd7797, %rd7796, %rd7785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5599,%dummy}, %rd7736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5600}, %rd7736;
	}
	shf.r.wrap.b32 	%r5601, %r5600, %r5599, 19;
	shf.r.wrap.b32 	%r5602, %r5599, %r5600, 19;
	mov.b64 	%rd7798, {%r5602, %r5601};
	shf.l.wrap.b32 	%r5603, %r5599, %r5600, 3;
	shf.l.wrap.b32 	%r5604, %r5600, %r5599, 3;
	mov.b64 	%rd7799, {%r5604, %r5603};
	xor.b64  	%rd7800, %rd7798, %rd7799;
	shr.u64 	%rd7801, %rd7736, 6;
	xor.b64  	%rd7802, %rd7800, %rd7801;
	shf.r.wrap.b32 	%r5605, %r5262, %r5261, 1;
	shf.r.wrap.b32 	%r5606, %r5261, %r5262, 1;
	mov.b64 	%rd7803, {%r5606, %r5605};
	shf.r.wrap.b32 	%r5607, %r5262, %r5261, 8;
	shf.r.wrap.b32 	%r5608, %r5261, %r5262, 8;
	mov.b64 	%rd7804, {%r5608, %r5607};
	xor.b64  	%rd7805, %rd7803, %rd7804;
	shr.u64 	%rd7806, %rd7255, 7;
	xor.b64  	%rd7807, %rd7805, %rd7806;
	add.s64 	%rd7808, %rd7807, %rd7218;
	add.s64 	%rd7809, %rd7808, %rd7551;
	add.s64 	%rd7810, %rd7809, %rd7802;
	add.s64 	%rd7811, %rd7810, %rd7675;
	xor.b64  	%rd7812, %rd7749, %rd7712;
	and.b64  	%rd7813, %rd7786, %rd7812;
	xor.b64  	%rd7814, %rd7813, %rd7712;
	add.s64 	%rd7815, %rd7811, %rd7814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5609,%dummy}, %rd7786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5610}, %rd7786;
	}
	shf.r.wrap.b32 	%r5611, %r5610, %r5609, 14;
	shf.r.wrap.b32 	%r5612, %r5609, %r5610, 14;
	mov.b64 	%rd7816, {%r5612, %r5611};
	shf.r.wrap.b32 	%r5613, %r5610, %r5609, 18;
	shf.r.wrap.b32 	%r5614, %r5609, %r5610, 18;
	mov.b64 	%rd7817, {%r5614, %r5613};
	xor.b64  	%rd7818, %rd7816, %rd7817;
	shf.l.wrap.b32 	%r5615, %r5609, %r5610, 23;
	shf.l.wrap.b32 	%r5616, %r5610, %r5609, 23;
	mov.b64 	%rd7819, {%r5616, %r5615};
	xor.b64  	%rd7820, %rd7818, %rd7819;
	add.s64 	%rd7821, %rd7815, %rd7820;
	add.s64 	%rd7822, %rd7821, -3345356375505022440;
	add.s64 	%rd7823, %rd7822, %rd7686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5617,%dummy}, %rd7797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5618}, %rd7797;
	}
	shf.r.wrap.b32 	%r5619, %r5618, %r5617, 28;
	shf.r.wrap.b32 	%r5620, %r5617, %r5618, 28;
	mov.b64 	%rd7824, {%r5620, %r5619};
	shf.l.wrap.b32 	%r5621, %r5617, %r5618, 30;
	shf.l.wrap.b32 	%r5622, %r5618, %r5617, 30;
	mov.b64 	%rd7825, {%r5622, %r5621};
	xor.b64  	%rd7826, %rd7824, %rd7825;
	shf.l.wrap.b32 	%r5623, %r5617, %r5618, 25;
	shf.l.wrap.b32 	%r5624, %r5618, %r5617, 25;
	mov.b64 	%rd7827, {%r5624, %r5623};
	xor.b64  	%rd7828, %rd7826, %rd7827;
	and.b64  	%rd7829, %rd7797, %rd7760;
	or.b64  	%rd7830, %rd7797, %rd7760;
	and.b64  	%rd7831, %rd7830, %rd7723;
	or.b64  	%rd7832, %rd7831, %rd7829;
	add.s64 	%rd7833, %rd7832, %rd7828;
	add.s64 	%rd7834, %rd7833, %rd7822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5625,%dummy}, %rd7773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5626}, %rd7773;
	}
	shf.r.wrap.b32 	%r5627, %r5626, %r5625, 19;
	shf.r.wrap.b32 	%r5628, %r5625, %r5626, 19;
	mov.b64 	%rd7835, {%r5628, %r5627};
	shf.l.wrap.b32 	%r5629, %r5625, %r5626, 3;
	shf.l.wrap.b32 	%r5630, %r5626, %r5625, 3;
	mov.b64 	%rd7836, {%r5630, %r5629};
	xor.b64  	%rd7837, %rd7835, %rd7836;
	shr.u64 	%rd7838, %rd7773, 6;
	xor.b64  	%rd7839, %rd7837, %rd7838;
	shf.r.wrap.b32 	%r5631, %r5288, %r5287, 1;
	shf.r.wrap.b32 	%r5632, %r5287, %r5288, 1;
	mov.b64 	%rd7840, {%r5632, %r5631};
	shf.r.wrap.b32 	%r5633, %r5288, %r5287, 8;
	shf.r.wrap.b32 	%r5634, %r5287, %r5288, 8;
	mov.b64 	%rd7841, {%r5634, %r5633};
	xor.b64  	%rd7842, %rd7840, %rd7841;
	shr.u64 	%rd7843, %rd7292, 7;
	xor.b64  	%rd7844, %rd7842, %rd7843;
	add.s64 	%rd7845, %rd7844, %rd7255;
	add.s64 	%rd7846, %rd7845, %rd7588;
	add.s64 	%rd7847, %rd7846, %rd7839;
	add.s64 	%rd7848, %rd7847, %rd7712;
	xor.b64  	%rd7849, %rd7786, %rd7749;
	and.b64  	%rd7850, %rd7823, %rd7849;
	xor.b64  	%rd7851, %rd7850, %rd7749;
	add.s64 	%rd7852, %rd7848, %rd7851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5635,%dummy}, %rd7823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5636}, %rd7823;
	}
	shf.r.wrap.b32 	%r5637, %r5636, %r5635, 14;
	shf.r.wrap.b32 	%r5638, %r5635, %r5636, 14;
	mov.b64 	%rd7853, {%r5638, %r5637};
	shf.r.wrap.b32 	%r5639, %r5636, %r5635, 18;
	shf.r.wrap.b32 	%r5640, %r5635, %r5636, 18;
	mov.b64 	%rd7854, {%r5640, %r5639};
	xor.b64  	%rd7855, %rd7853, %rd7854;
	shf.l.wrap.b32 	%r5641, %r5635, %r5636, 23;
	shf.l.wrap.b32 	%r5642, %r5636, %r5635, 23;
	mov.b64 	%rd7856, {%r5642, %r5641};
	xor.b64  	%rd7857, %rd7855, %rd7856;
	add.s64 	%rd7858, %rd7852, %rd7857;
	add.s64 	%rd7859, %rd7858, -2983346525034927856;
	add.s64 	%rd7860, %rd7859, %rd7723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5643,%dummy}, %rd7834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5644}, %rd7834;
	}
	shf.r.wrap.b32 	%r5645, %r5644, %r5643, 28;
	shf.r.wrap.b32 	%r5646, %r5643, %r5644, 28;
	mov.b64 	%rd7861, {%r5646, %r5645};
	shf.l.wrap.b32 	%r5647, %r5643, %r5644, 30;
	shf.l.wrap.b32 	%r5648, %r5644, %r5643, 30;
	mov.b64 	%rd7862, {%r5648, %r5647};
	xor.b64  	%rd7863, %rd7861, %rd7862;
	shf.l.wrap.b32 	%r5649, %r5643, %r5644, 25;
	shf.l.wrap.b32 	%r5650, %r5644, %r5643, 25;
	mov.b64 	%rd7864, {%r5650, %r5649};
	xor.b64  	%rd7865, %rd7863, %rd7864;
	and.b64  	%rd7866, %rd7834, %rd7797;
	or.b64  	%rd7867, %rd7834, %rd7797;
	and.b64  	%rd7868, %rd7867, %rd7760;
	or.b64  	%rd7869, %rd7868, %rd7866;
	add.s64 	%rd7870, %rd7869, %rd7865;
	add.s64 	%rd7871, %rd7870, %rd7859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5651,%dummy}, %rd7810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5652}, %rd7810;
	}
	shf.r.wrap.b32 	%r5653, %r5652, %r5651, 19;
	shf.r.wrap.b32 	%r5654, %r5651, %r5652, 19;
	mov.b64 	%rd7872, {%r5654, %r5653};
	shf.l.wrap.b32 	%r5655, %r5651, %r5652, 3;
	shf.l.wrap.b32 	%r5656, %r5652, %r5651, 3;
	mov.b64 	%rd7873, {%r5656, %r5655};
	xor.b64  	%rd7874, %rd7872, %rd7873;
	shr.u64 	%rd7875, %rd7810, 6;
	xor.b64  	%rd7876, %rd7874, %rd7875;
	shf.r.wrap.b32 	%r5657, %r5314, %r5313, 1;
	shf.r.wrap.b32 	%r5658, %r5313, %r5314, 1;
	mov.b64 	%rd7877, {%r5658, %r5657};
	shf.r.wrap.b32 	%r5659, %r5314, %r5313, 8;
	shf.r.wrap.b32 	%r5660, %r5313, %r5314, 8;
	mov.b64 	%rd7878, {%r5660, %r5659};
	xor.b64  	%rd7879, %rd7877, %rd7878;
	shr.u64 	%rd7880, %rd7329, 7;
	xor.b64  	%rd7881, %rd7879, %rd7880;
	add.s64 	%rd7882, %rd7881, %rd7292;
	add.s64 	%rd7883, %rd7882, %rd7625;
	add.s64 	%rd7884, %rd7883, %rd7876;
	add.s64 	%rd7885, %rd7884, %rd7749;
	xor.b64  	%rd7886, %rd7823, %rd7786;
	and.b64  	%rd7887, %rd7860, %rd7886;
	xor.b64  	%rd7888, %rd7887, %rd7786;
	add.s64 	%rd7889, %rd7885, %rd7888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5661,%dummy}, %rd7860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5662}, %rd7860;
	}
	shf.r.wrap.b32 	%r5663, %r5662, %r5661, 14;
	shf.r.wrap.b32 	%r5664, %r5661, %r5662, 14;
	mov.b64 	%rd7890, {%r5664, %r5663};
	shf.r.wrap.b32 	%r5665, %r5662, %r5661, 18;
	shf.r.wrap.b32 	%r5666, %r5661, %r5662, 18;
	mov.b64 	%rd7891, {%r5666, %r5665};
	xor.b64  	%rd7892, %rd7890, %rd7891;
	shf.l.wrap.b32 	%r5667, %r5661, %r5662, 23;
	shf.l.wrap.b32 	%r5668, %r5662, %r5661, 23;
	mov.b64 	%rd7893, {%r5668, %r5667};
	xor.b64  	%rd7894, %rd7892, %rd7893;
	add.s64 	%rd7895, %rd7889, %rd7894;
	add.s64 	%rd7896, %rd7895, -860691631967231958;
	add.s64 	%rd7897, %rd7896, %rd7760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5669,%dummy}, %rd7871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5670}, %rd7871;
	}
	shf.r.wrap.b32 	%r5671, %r5670, %r5669, 28;
	shf.r.wrap.b32 	%r5672, %r5669, %r5670, 28;
	mov.b64 	%rd7898, {%r5672, %r5671};
	shf.l.wrap.b32 	%r5673, %r5669, %r5670, 30;
	shf.l.wrap.b32 	%r5674, %r5670, %r5669, 30;
	mov.b64 	%rd7899, {%r5674, %r5673};
	xor.b64  	%rd7900, %rd7898, %rd7899;
	shf.l.wrap.b32 	%r5675, %r5669, %r5670, 25;
	shf.l.wrap.b32 	%r5676, %r5670, %r5669, 25;
	mov.b64 	%rd7901, {%r5676, %r5675};
	xor.b64  	%rd7902, %rd7900, %rd7901;
	and.b64  	%rd7903, %rd7871, %rd7834;
	or.b64  	%rd7904, %rd7871, %rd7834;
	and.b64  	%rd7905, %rd7904, %rd7797;
	or.b64  	%rd7906, %rd7905, %rd7903;
	add.s64 	%rd7907, %rd7906, %rd7902;
	add.s64 	%rd7908, %rd7907, %rd7896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5677,%dummy}, %rd7847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5678}, %rd7847;
	}
	shf.r.wrap.b32 	%r5679, %r5678, %r5677, 19;
	shf.r.wrap.b32 	%r5680, %r5677, %r5678, 19;
	mov.b64 	%rd7909, {%r5680, %r5679};
	shf.l.wrap.b32 	%r5681, %r5677, %r5678, 3;
	shf.l.wrap.b32 	%r5682, %r5678, %r5677, 3;
	mov.b64 	%rd7910, {%r5682, %r5681};
	xor.b64  	%rd7911, %rd7909, %rd7910;
	shr.u64 	%rd7912, %rd7847, 6;
	xor.b64  	%rd7913, %rd7911, %rd7912;
	shf.r.wrap.b32 	%r5683, %r5340, %r5339, 1;
	shf.r.wrap.b32 	%r5684, %r5339, %r5340, 1;
	mov.b64 	%rd7914, {%r5684, %r5683};
	shf.r.wrap.b32 	%r5685, %r5340, %r5339, 8;
	shf.r.wrap.b32 	%r5686, %r5339, %r5340, 8;
	mov.b64 	%rd7915, {%r5686, %r5685};
	xor.b64  	%rd7916, %rd7914, %rd7915;
	shr.u64 	%rd7917, %rd7366, 7;
	xor.b64  	%rd7918, %rd7916, %rd7917;
	add.s64 	%rd7919, %rd7918, %rd7329;
	add.s64 	%rd7920, %rd7919, %rd7662;
	add.s64 	%rd7921, %rd7920, %rd7913;
	add.s64 	%rd7922, %rd7921, %rd7786;
	xor.b64  	%rd7923, %rd7860, %rd7823;
	and.b64  	%rd7924, %rd7897, %rd7923;
	xor.b64  	%rd7925, %rd7924, %rd7823;
	add.s64 	%rd7926, %rd7922, %rd7925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5687,%dummy}, %rd7897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5688}, %rd7897;
	}
	shf.r.wrap.b32 	%r5689, %r5688, %r5687, 14;
	shf.r.wrap.b32 	%r5690, %r5687, %r5688, 14;
	mov.b64 	%rd7927, {%r5690, %r5689};
	shf.r.wrap.b32 	%r5691, %r5688, %r5687, 18;
	shf.r.wrap.b32 	%r5692, %r5687, %r5688, 18;
	mov.b64 	%rd7928, {%r5692, %r5691};
	xor.b64  	%rd7929, %rd7927, %rd7928;
	shf.l.wrap.b32 	%r5693, %r5687, %r5688, 23;
	shf.l.wrap.b32 	%r5694, %r5688, %r5687, 23;
	mov.b64 	%rd7930, {%r5694, %r5693};
	xor.b64  	%rd7931, %rd7929, %rd7930;
	add.s64 	%rd7932, %rd7926, %rd7931;
	add.s64 	%rd7933, %rd7932, 1182934255886127544;
	add.s64 	%rd7934, %rd7933, %rd7797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5695,%dummy}, %rd7908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5696}, %rd7908;
	}
	shf.r.wrap.b32 	%r5697, %r5696, %r5695, 28;
	shf.r.wrap.b32 	%r5698, %r5695, %r5696, 28;
	mov.b64 	%rd7935, {%r5698, %r5697};
	shf.l.wrap.b32 	%r5699, %r5695, %r5696, 30;
	shf.l.wrap.b32 	%r5700, %r5696, %r5695, 30;
	mov.b64 	%rd7936, {%r5700, %r5699};
	xor.b64  	%rd7937, %rd7935, %rd7936;
	shf.l.wrap.b32 	%r5701, %r5695, %r5696, 25;
	shf.l.wrap.b32 	%r5702, %r5696, %r5695, 25;
	mov.b64 	%rd7938, {%r5702, %r5701};
	xor.b64  	%rd7939, %rd7937, %rd7938;
	and.b64  	%rd7940, %rd7908, %rd7871;
	or.b64  	%rd7941, %rd7908, %rd7871;
	and.b64  	%rd7942, %rd7941, %rd7834;
	or.b64  	%rd7943, %rd7942, %rd7940;
	add.s64 	%rd7944, %rd7943, %rd7939;
	add.s64 	%rd7945, %rd7944, %rd7933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5703,%dummy}, %rd7884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5704}, %rd7884;
	}
	shf.r.wrap.b32 	%r5705, %r5704, %r5703, 19;
	shf.r.wrap.b32 	%r5706, %r5703, %r5704, 19;
	mov.b64 	%rd7946, {%r5706, %r5705};
	shf.l.wrap.b32 	%r5707, %r5703, %r5704, 3;
	shf.l.wrap.b32 	%r5708, %r5704, %r5703, 3;
	mov.b64 	%rd7947, {%r5708, %r5707};
	xor.b64  	%rd7948, %rd7946, %rd7947;
	shr.u64 	%rd7949, %rd7884, 6;
	xor.b64  	%rd7950, %rd7948, %rd7949;
	shf.r.wrap.b32 	%r5709, %r5366, %r5365, 1;
	shf.r.wrap.b32 	%r5710, %r5365, %r5366, 1;
	mov.b64 	%rd7951, {%r5710, %r5709};
	shf.r.wrap.b32 	%r5711, %r5366, %r5365, 8;
	shf.r.wrap.b32 	%r5712, %r5365, %r5366, 8;
	mov.b64 	%rd7952, {%r5712, %r5711};
	xor.b64  	%rd7953, %rd7951, %rd7952;
	shr.u64 	%rd7954, %rd7403, 7;
	xor.b64  	%rd7955, %rd7953, %rd7954;
	add.s64 	%rd7956, %rd7955, %rd7366;
	add.s64 	%rd7957, %rd7956, %rd7699;
	add.s64 	%rd7958, %rd7957, %rd7950;
	add.s64 	%rd7959, %rd7958, %rd7823;
	xor.b64  	%rd7960, %rd7897, %rd7860;
	and.b64  	%rd7961, %rd7934, %rd7960;
	xor.b64  	%rd7962, %rd7961, %rd7860;
	add.s64 	%rd7963, %rd7959, %rd7962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5713,%dummy}, %rd7934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5714}, %rd7934;
	}
	shf.r.wrap.b32 	%r5715, %r5714, %r5713, 14;
	shf.r.wrap.b32 	%r5716, %r5713, %r5714, 14;
	mov.b64 	%rd7964, {%r5716, %r5715};
	shf.r.wrap.b32 	%r5717, %r5714, %r5713, 18;
	shf.r.wrap.b32 	%r5718, %r5713, %r5714, 18;
	mov.b64 	%rd7965, {%r5718, %r5717};
	xor.b64  	%rd7966, %rd7964, %rd7965;
	shf.l.wrap.b32 	%r5719, %r5713, %r5714, 23;
	shf.l.wrap.b32 	%r5720, %r5714, %r5713, 23;
	mov.b64 	%rd7967, {%r5720, %r5719};
	xor.b64  	%rd7968, %rd7966, %rd7967;
	add.s64 	%rd7969, %rd7963, %rd7968;
	add.s64 	%rd7970, %rd7969, 1847814050463011016;
	add.s64 	%rd7971, %rd7970, %rd7834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5721,%dummy}, %rd7945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5722}, %rd7945;
	}
	shf.r.wrap.b32 	%r5723, %r5722, %r5721, 28;
	shf.r.wrap.b32 	%r5724, %r5721, %r5722, 28;
	mov.b64 	%rd7972, {%r5724, %r5723};
	shf.l.wrap.b32 	%r5725, %r5721, %r5722, 30;
	shf.l.wrap.b32 	%r5726, %r5722, %r5721, 30;
	mov.b64 	%rd7973, {%r5726, %r5725};
	xor.b64  	%rd7974, %rd7972, %rd7973;
	shf.l.wrap.b32 	%r5727, %r5721, %r5722, 25;
	shf.l.wrap.b32 	%r5728, %r5722, %r5721, 25;
	mov.b64 	%rd7975, {%r5728, %r5727};
	xor.b64  	%rd7976, %rd7974, %rd7975;
	and.b64  	%rd7977, %rd7945, %rd7908;
	or.b64  	%rd7978, %rd7945, %rd7908;
	and.b64  	%rd7979, %rd7978, %rd7871;
	or.b64  	%rd7980, %rd7979, %rd7977;
	add.s64 	%rd7981, %rd7980, %rd7976;
	add.s64 	%rd7982, %rd7981, %rd7970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5729,%dummy}, %rd7921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5730}, %rd7921;
	}
	shf.r.wrap.b32 	%r5731, %r5730, %r5729, 19;
	shf.r.wrap.b32 	%r5732, %r5729, %r5730, 19;
	mov.b64 	%rd7983, {%r5732, %r5731};
	shf.l.wrap.b32 	%r5733, %r5729, %r5730, 3;
	shf.l.wrap.b32 	%r5734, %r5730, %r5729, 3;
	mov.b64 	%rd7984, {%r5734, %r5733};
	xor.b64  	%rd7985, %rd7983, %rd7984;
	shr.u64 	%rd7986, %rd7921, 6;
	xor.b64  	%rd7987, %rd7985, %rd7986;
	shf.r.wrap.b32 	%r5735, %r5392, %r5391, 1;
	shf.r.wrap.b32 	%r5736, %r5391, %r5392, 1;
	mov.b64 	%rd7988, {%r5736, %r5735};
	shf.r.wrap.b32 	%r5737, %r5392, %r5391, 8;
	shf.r.wrap.b32 	%r5738, %r5391, %r5392, 8;
	mov.b64 	%rd7989, {%r5738, %r5737};
	xor.b64  	%rd7990, %rd7988, %rd7989;
	shr.u64 	%rd7991, %rd7440, 7;
	xor.b64  	%rd7992, %rd7990, %rd7991;
	add.s64 	%rd7993, %rd7992, %rd7403;
	add.s64 	%rd7994, %rd7993, %rd7736;
	add.s64 	%rd7995, %rd7994, %rd7987;
	add.s64 	%rd7996, %rd7995, %rd7860;
	xor.b64  	%rd7997, %rd7934, %rd7897;
	and.b64  	%rd7998, %rd7971, %rd7997;
	xor.b64  	%rd7999, %rd7998, %rd7897;
	add.s64 	%rd8000, %rd7996, %rd7999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5739,%dummy}, %rd7971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5740}, %rd7971;
	}
	shf.r.wrap.b32 	%r5741, %r5740, %r5739, 14;
	shf.r.wrap.b32 	%r5742, %r5739, %r5740, 14;
	mov.b64 	%rd8001, {%r5742, %r5741};
	shf.r.wrap.b32 	%r5743, %r5740, %r5739, 18;
	shf.r.wrap.b32 	%r5744, %r5739, %r5740, 18;
	mov.b64 	%rd8002, {%r5744, %r5743};
	xor.b64  	%rd8003, %rd8001, %rd8002;
	shf.l.wrap.b32 	%r5745, %r5739, %r5740, 23;
	shf.l.wrap.b32 	%r5746, %r5740, %r5739, 23;
	mov.b64 	%rd8004, {%r5746, %r5745};
	xor.b64  	%rd8005, %rd8003, %rd8004;
	add.s64 	%rd8006, %rd8000, %rd8005;
	add.s64 	%rd8007, %rd8006, 2177327727835720531;
	add.s64 	%rd8008, %rd8007, %rd7871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5747,%dummy}, %rd7982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5748}, %rd7982;
	}
	shf.r.wrap.b32 	%r5749, %r5748, %r5747, 28;
	shf.r.wrap.b32 	%r5750, %r5747, %r5748, 28;
	mov.b64 	%rd8009, {%r5750, %r5749};
	shf.l.wrap.b32 	%r5751, %r5747, %r5748, 30;
	shf.l.wrap.b32 	%r5752, %r5748, %r5747, 30;
	mov.b64 	%rd8010, {%r5752, %r5751};
	xor.b64  	%rd8011, %rd8009, %rd8010;
	shf.l.wrap.b32 	%r5753, %r5747, %r5748, 25;
	shf.l.wrap.b32 	%r5754, %r5748, %r5747, 25;
	mov.b64 	%rd8012, {%r5754, %r5753};
	xor.b64  	%rd8013, %rd8011, %rd8012;
	and.b64  	%rd8014, %rd7982, %rd7945;
	or.b64  	%rd8015, %rd7982, %rd7945;
	and.b64  	%rd8016, %rd8015, %rd7908;
	or.b64  	%rd8017, %rd8016, %rd8014;
	add.s64 	%rd8018, %rd8017, %rd8013;
	add.s64 	%rd8019, %rd8018, %rd8007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5755,%dummy}, %rd7958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5756}, %rd7958;
	}
	shf.r.wrap.b32 	%r5757, %r5756, %r5755, 19;
	shf.r.wrap.b32 	%r5758, %r5755, %r5756, 19;
	mov.b64 	%rd8020, {%r5758, %r5757};
	shf.l.wrap.b32 	%r5759, %r5755, %r5756, 3;
	shf.l.wrap.b32 	%r5760, %r5756, %r5755, 3;
	mov.b64 	%rd8021, {%r5760, %r5759};
	xor.b64  	%rd8022, %rd8020, %rd8021;
	shr.u64 	%rd8023, %rd7958, 6;
	xor.b64  	%rd8024, %rd8022, %rd8023;
	shf.r.wrap.b32 	%r5761, %r5418, %r5417, 1;
	shf.r.wrap.b32 	%r5762, %r5417, %r5418, 1;
	mov.b64 	%rd8025, {%r5762, %r5761};
	shf.r.wrap.b32 	%r5763, %r5418, %r5417, 8;
	shf.r.wrap.b32 	%r5764, %r5417, %r5418, 8;
	mov.b64 	%rd8026, {%r5764, %r5763};
	xor.b64  	%rd8027, %rd8025, %rd8026;
	shr.u64 	%rd8028, %rd7477, 7;
	xor.b64  	%rd8029, %rd8027, %rd8028;
	add.s64 	%rd8030, %rd8029, %rd7440;
	add.s64 	%rd8031, %rd8030, %rd7773;
	add.s64 	%rd8032, %rd8031, %rd8024;
	add.s64 	%rd8033, %rd8032, %rd7897;
	xor.b64  	%rd8034, %rd7971, %rd7934;
	and.b64  	%rd8035, %rd8008, %rd8034;
	xor.b64  	%rd8036, %rd8035, %rd7934;
	add.s64 	%rd8037, %rd8033, %rd8036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5765,%dummy}, %rd8008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5766}, %rd8008;
	}
	shf.r.wrap.b32 	%r5767, %r5766, %r5765, 14;
	shf.r.wrap.b32 	%r5768, %r5765, %r5766, 14;
	mov.b64 	%rd8038, {%r5768, %r5767};
	shf.r.wrap.b32 	%r5769, %r5766, %r5765, 18;
	shf.r.wrap.b32 	%r5770, %r5765, %r5766, 18;
	mov.b64 	%rd8039, {%r5770, %r5769};
	xor.b64  	%rd8040, %rd8038, %rd8039;
	shf.l.wrap.b32 	%r5771, %r5765, %r5766, 23;
	shf.l.wrap.b32 	%r5772, %r5766, %r5765, 23;
	mov.b64 	%rd8041, {%r5772, %r5771};
	xor.b64  	%rd8042, %rd8040, %rd8041;
	add.s64 	%rd8043, %rd8037, %rd8042;
	add.s64 	%rd8044, %rd8043, 2830643537854262169;
	add.s64 	%rd8045, %rd8044, %rd7908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5773,%dummy}, %rd8019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5774}, %rd8019;
	}
	shf.r.wrap.b32 	%r5775, %r5774, %r5773, 28;
	shf.r.wrap.b32 	%r5776, %r5773, %r5774, 28;
	mov.b64 	%rd8046, {%r5776, %r5775};
	shf.l.wrap.b32 	%r5777, %r5773, %r5774, 30;
	shf.l.wrap.b32 	%r5778, %r5774, %r5773, 30;
	mov.b64 	%rd8047, {%r5778, %r5777};
	xor.b64  	%rd8048, %rd8046, %rd8047;
	shf.l.wrap.b32 	%r5779, %r5773, %r5774, 25;
	shf.l.wrap.b32 	%r5780, %r5774, %r5773, 25;
	mov.b64 	%rd8049, {%r5780, %r5779};
	xor.b64  	%rd8050, %rd8048, %rd8049;
	and.b64  	%rd8051, %rd8019, %rd7982;
	or.b64  	%rd8052, %rd8019, %rd7982;
	and.b64  	%rd8053, %rd8052, %rd7945;
	or.b64  	%rd8054, %rd8053, %rd8051;
	add.s64 	%rd8055, %rd8054, %rd8050;
	add.s64 	%rd8056, %rd8055, %rd8044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5781,%dummy}, %rd7995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5782}, %rd7995;
	}
	shf.r.wrap.b32 	%r5783, %r5782, %r5781, 19;
	shf.r.wrap.b32 	%r5784, %r5781, %r5782, 19;
	mov.b64 	%rd8057, {%r5784, %r5783};
	shf.l.wrap.b32 	%r5785, %r5781, %r5782, 3;
	shf.l.wrap.b32 	%r5786, %r5782, %r5781, 3;
	mov.b64 	%rd8058, {%r5786, %r5785};
	xor.b64  	%rd8059, %rd8057, %rd8058;
	shr.u64 	%rd8060, %rd7995, 6;
	xor.b64  	%rd8061, %rd8059, %rd8060;
	shf.r.wrap.b32 	%r5787, %r5444, %r5443, 1;
	shf.r.wrap.b32 	%r5788, %r5443, %r5444, 1;
	mov.b64 	%rd8062, {%r5788, %r5787};
	shf.r.wrap.b32 	%r5789, %r5444, %r5443, 8;
	shf.r.wrap.b32 	%r5790, %r5443, %r5444, 8;
	mov.b64 	%rd8063, {%r5790, %r5789};
	xor.b64  	%rd8064, %rd8062, %rd8063;
	shr.u64 	%rd8065, %rd7514, 7;
	xor.b64  	%rd8066, %rd8064, %rd8065;
	add.s64 	%rd8067, %rd8066, %rd7477;
	add.s64 	%rd8068, %rd8067, %rd7810;
	add.s64 	%rd8069, %rd8068, %rd8061;
	add.s64 	%rd8070, %rd8069, %rd7934;
	xor.b64  	%rd8071, %rd8008, %rd7971;
	and.b64  	%rd8072, %rd8045, %rd8071;
	xor.b64  	%rd8073, %rd8072, %rd7971;
	add.s64 	%rd8074, %rd8070, %rd8073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5791,%dummy}, %rd8045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5792}, %rd8045;
	}
	shf.r.wrap.b32 	%r5793, %r5792, %r5791, 14;
	shf.r.wrap.b32 	%r5794, %r5791, %r5792, 14;
	mov.b64 	%rd8075, {%r5794, %r5793};
	shf.r.wrap.b32 	%r5795, %r5792, %r5791, 18;
	shf.r.wrap.b32 	%r5796, %r5791, %r5792, 18;
	mov.b64 	%rd8076, {%r5796, %r5795};
	xor.b64  	%rd8077, %rd8075, %rd8076;
	shf.l.wrap.b32 	%r5797, %r5791, %r5792, 23;
	shf.l.wrap.b32 	%r5798, %r5792, %r5791, 23;
	mov.b64 	%rd8078, {%r5798, %r5797};
	xor.b64  	%rd8079, %rd8077, %rd8078;
	add.s64 	%rd8080, %rd8074, %rd8079;
	add.s64 	%rd8081, %rd8080, 3796741975233480872;
	add.s64 	%rd8082, %rd8081, %rd7945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5799,%dummy}, %rd8056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5800}, %rd8056;
	}
	shf.r.wrap.b32 	%r5801, %r5800, %r5799, 28;
	shf.r.wrap.b32 	%r5802, %r5799, %r5800, 28;
	mov.b64 	%rd8083, {%r5802, %r5801};
	shf.l.wrap.b32 	%r5803, %r5799, %r5800, 30;
	shf.l.wrap.b32 	%r5804, %r5800, %r5799, 30;
	mov.b64 	%rd8084, {%r5804, %r5803};
	xor.b64  	%rd8085, %rd8083, %rd8084;
	shf.l.wrap.b32 	%r5805, %r5799, %r5800, 25;
	shf.l.wrap.b32 	%r5806, %r5800, %r5799, 25;
	mov.b64 	%rd8086, {%r5806, %r5805};
	xor.b64  	%rd8087, %rd8085, %rd8086;
	and.b64  	%rd8088, %rd8056, %rd8019;
	or.b64  	%rd8089, %rd8056, %rd8019;
	and.b64  	%rd8090, %rd8089, %rd7982;
	or.b64  	%rd8091, %rd8090, %rd8088;
	add.s64 	%rd8092, %rd8091, %rd8087;
	add.s64 	%rd8093, %rd8092, %rd8081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5807,%dummy}, %rd8032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5808}, %rd8032;
	}
	shf.r.wrap.b32 	%r5809, %r5808, %r5807, 19;
	shf.r.wrap.b32 	%r5810, %r5807, %r5808, 19;
	mov.b64 	%rd8094, {%r5810, %r5809};
	shf.l.wrap.b32 	%r5811, %r5807, %r5808, 3;
	shf.l.wrap.b32 	%r5812, %r5808, %r5807, 3;
	mov.b64 	%rd8095, {%r5812, %r5811};
	xor.b64  	%rd8096, %rd8094, %rd8095;
	shr.u64 	%rd8097, %rd8032, 6;
	xor.b64  	%rd8098, %rd8096, %rd8097;
	shf.r.wrap.b32 	%r5813, %r5470, %r5469, 1;
	shf.r.wrap.b32 	%r5814, %r5469, %r5470, 1;
	mov.b64 	%rd8099, {%r5814, %r5813};
	shf.r.wrap.b32 	%r5815, %r5470, %r5469, 8;
	shf.r.wrap.b32 	%r5816, %r5469, %r5470, 8;
	mov.b64 	%rd8100, {%r5816, %r5815};
	xor.b64  	%rd8101, %rd8099, %rd8100;
	shr.u64 	%rd8102, %rd7551, 7;
	xor.b64  	%rd8103, %rd8101, %rd8102;
	add.s64 	%rd8104, %rd8103, %rd7514;
	add.s64 	%rd8105, %rd8104, %rd7847;
	add.s64 	%rd8106, %rd8105, %rd8098;
	add.s64 	%rd8107, %rd8106, %rd7971;
	xor.b64  	%rd8108, %rd8045, %rd8008;
	and.b64  	%rd8109, %rd8082, %rd8108;
	xor.b64  	%rd8110, %rd8109, %rd8008;
	add.s64 	%rd8111, %rd8107, %rd8110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5817,%dummy}, %rd8082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5818}, %rd8082;
	}
	shf.r.wrap.b32 	%r5819, %r5818, %r5817, 14;
	shf.r.wrap.b32 	%r5820, %r5817, %r5818, 14;
	mov.b64 	%rd8112, {%r5820, %r5819};
	shf.r.wrap.b32 	%r5821, %r5818, %r5817, 18;
	shf.r.wrap.b32 	%r5822, %r5817, %r5818, 18;
	mov.b64 	%rd8113, {%r5822, %r5821};
	xor.b64  	%rd8114, %rd8112, %rd8113;
	shf.l.wrap.b32 	%r5823, %r5817, %r5818, 23;
	shf.l.wrap.b32 	%r5824, %r5818, %r5817, 23;
	mov.b64 	%rd8115, {%r5824, %r5823};
	xor.b64  	%rd8116, %rd8114, %rd8115;
	add.s64 	%rd8117, %rd8111, %rd8116;
	add.s64 	%rd8118, %rd8117, 4115178125766777443;
	add.s64 	%rd8119, %rd8118, %rd7982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5825,%dummy}, %rd8093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5826}, %rd8093;
	}
	shf.r.wrap.b32 	%r5827, %r5826, %r5825, 28;
	shf.r.wrap.b32 	%r5828, %r5825, %r5826, 28;
	mov.b64 	%rd8120, {%r5828, %r5827};
	shf.l.wrap.b32 	%r5829, %r5825, %r5826, 30;
	shf.l.wrap.b32 	%r5830, %r5826, %r5825, 30;
	mov.b64 	%rd8121, {%r5830, %r5829};
	xor.b64  	%rd8122, %rd8120, %rd8121;
	shf.l.wrap.b32 	%r5831, %r5825, %r5826, 25;
	shf.l.wrap.b32 	%r5832, %r5826, %r5825, 25;
	mov.b64 	%rd8123, {%r5832, %r5831};
	xor.b64  	%rd8124, %rd8122, %rd8123;
	and.b64  	%rd8125, %rd8093, %rd8056;
	or.b64  	%rd8126, %rd8093, %rd8056;
	and.b64  	%rd8127, %rd8126, %rd8019;
	or.b64  	%rd8128, %rd8127, %rd8125;
	add.s64 	%rd8129, %rd8128, %rd8124;
	add.s64 	%rd8130, %rd8129, %rd8118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5833,%dummy}, %rd8069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5834}, %rd8069;
	}
	shf.r.wrap.b32 	%r5835, %r5834, %r5833, 19;
	shf.r.wrap.b32 	%r5836, %r5833, %r5834, 19;
	mov.b64 	%rd8131, {%r5836, %r5835};
	shf.l.wrap.b32 	%r5837, %r5833, %r5834, 3;
	shf.l.wrap.b32 	%r5838, %r5834, %r5833, 3;
	mov.b64 	%rd8132, {%r5838, %r5837};
	xor.b64  	%rd8133, %rd8131, %rd8132;
	shr.u64 	%rd8134, %rd8069, 6;
	xor.b64  	%rd8135, %rd8133, %rd8134;
	shf.r.wrap.b32 	%r5839, %r5496, %r5495, 1;
	shf.r.wrap.b32 	%r5840, %r5495, %r5496, 1;
	mov.b64 	%rd8136, {%r5840, %r5839};
	shf.r.wrap.b32 	%r5841, %r5496, %r5495, 8;
	shf.r.wrap.b32 	%r5842, %r5495, %r5496, 8;
	mov.b64 	%rd8137, {%r5842, %r5841};
	xor.b64  	%rd8138, %rd8136, %rd8137;
	shr.u64 	%rd8139, %rd7588, 7;
	xor.b64  	%rd8140, %rd8138, %rd8139;
	add.s64 	%rd8141, %rd8140, %rd7551;
	add.s64 	%rd8142, %rd8141, %rd7884;
	add.s64 	%rd8143, %rd8142, %rd8135;
	add.s64 	%rd8144, %rd8143, %rd8008;
	xor.b64  	%rd8145, %rd8082, %rd8045;
	and.b64  	%rd8146, %rd8119, %rd8145;
	xor.b64  	%rd8147, %rd8146, %rd8045;
	add.s64 	%rd8148, %rd8144, %rd8147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5843,%dummy}, %rd8119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5844}, %rd8119;
	}
	shf.r.wrap.b32 	%r5845, %r5844, %r5843, 14;
	shf.r.wrap.b32 	%r5846, %r5843, %r5844, 14;
	mov.b64 	%rd8149, {%r5846, %r5845};
	shf.r.wrap.b32 	%r5847, %r5844, %r5843, 18;
	shf.r.wrap.b32 	%r5848, %r5843, %r5844, 18;
	mov.b64 	%rd8150, {%r5848, %r5847};
	xor.b64  	%rd8151, %rd8149, %rd8150;
	shf.l.wrap.b32 	%r5849, %r5843, %r5844, 23;
	shf.l.wrap.b32 	%r5850, %r5844, %r5843, 23;
	mov.b64 	%rd8152, {%r5850, %r5849};
	xor.b64  	%rd8153, %rd8151, %rd8152;
	add.s64 	%rd8154, %rd8148, %rd8153;
	add.s64 	%rd8155, %rd8154, 5681478168544905931;
	add.s64 	%rd8156, %rd8155, %rd8019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5851,%dummy}, %rd8130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5852}, %rd8130;
	}
	shf.r.wrap.b32 	%r5853, %r5852, %r5851, 28;
	shf.r.wrap.b32 	%r5854, %r5851, %r5852, 28;
	mov.b64 	%rd8157, {%r5854, %r5853};
	shf.l.wrap.b32 	%r5855, %r5851, %r5852, 30;
	shf.l.wrap.b32 	%r5856, %r5852, %r5851, 30;
	mov.b64 	%rd8158, {%r5856, %r5855};
	xor.b64  	%rd8159, %rd8157, %rd8158;
	shf.l.wrap.b32 	%r5857, %r5851, %r5852, 25;
	shf.l.wrap.b32 	%r5858, %r5852, %r5851, 25;
	mov.b64 	%rd8160, {%r5858, %r5857};
	xor.b64  	%rd8161, %rd8159, %rd8160;
	and.b64  	%rd8162, %rd8130, %rd8093;
	or.b64  	%rd8163, %rd8130, %rd8093;
	and.b64  	%rd8164, %rd8163, %rd8056;
	or.b64  	%rd8165, %rd8164, %rd8162;
	add.s64 	%rd8166, %rd8165, %rd8161;
	add.s64 	%rd8167, %rd8166, %rd8155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5859,%dummy}, %rd8106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5860}, %rd8106;
	}
	shf.r.wrap.b32 	%r5861, %r5860, %r5859, 19;
	shf.r.wrap.b32 	%r5862, %r5859, %r5860, 19;
	mov.b64 	%rd8168, {%r5862, %r5861};
	shf.l.wrap.b32 	%r5863, %r5859, %r5860, 3;
	shf.l.wrap.b32 	%r5864, %r5860, %r5859, 3;
	mov.b64 	%rd8169, {%r5864, %r5863};
	xor.b64  	%rd8170, %rd8168, %rd8169;
	shr.u64 	%rd8171, %rd8106, 6;
	xor.b64  	%rd8172, %rd8170, %rd8171;
	shf.r.wrap.b32 	%r5865, %r5522, %r5521, 1;
	shf.r.wrap.b32 	%r5866, %r5521, %r5522, 1;
	mov.b64 	%rd8173, {%r5866, %r5865};
	shf.r.wrap.b32 	%r5867, %r5522, %r5521, 8;
	shf.r.wrap.b32 	%r5868, %r5521, %r5522, 8;
	mov.b64 	%rd8174, {%r5868, %r5867};
	xor.b64  	%rd8175, %rd8173, %rd8174;
	shr.u64 	%rd8176, %rd7625, 7;
	xor.b64  	%rd8177, %rd8175, %rd8176;
	add.s64 	%rd8178, %rd8177, %rd7588;
	add.s64 	%rd8179, %rd8178, %rd7921;
	add.s64 	%rd8180, %rd8179, %rd8172;
	add.s64 	%rd8181, %rd8180, %rd8045;
	xor.b64  	%rd8182, %rd8119, %rd8082;
	and.b64  	%rd8183, %rd8156, %rd8182;
	xor.b64  	%rd8184, %rd8183, %rd8082;
	add.s64 	%rd8185, %rd8181, %rd8184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5869,%dummy}, %rd8156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5870}, %rd8156;
	}
	shf.r.wrap.b32 	%r5871, %r5870, %r5869, 14;
	shf.r.wrap.b32 	%r5872, %r5869, %r5870, 14;
	mov.b64 	%rd8186, {%r5872, %r5871};
	shf.r.wrap.b32 	%r5873, %r5870, %r5869, 18;
	shf.r.wrap.b32 	%r5874, %r5869, %r5870, 18;
	mov.b64 	%rd8187, {%r5874, %r5873};
	xor.b64  	%rd8188, %rd8186, %rd8187;
	shf.l.wrap.b32 	%r5875, %r5869, %r5870, 23;
	shf.l.wrap.b32 	%r5876, %r5870, %r5869, 23;
	mov.b64 	%rd8189, {%r5876, %r5875};
	xor.b64  	%rd8190, %rd8188, %rd8189;
	add.s64 	%rd8191, %rd8185, %rd8190;
	add.s64 	%rd8192, %rd8191, 6601373596472566643;
	add.s64 	%rd8193, %rd8192, %rd8056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5877,%dummy}, %rd8167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5878}, %rd8167;
	}
	shf.r.wrap.b32 	%r5879, %r5878, %r5877, 28;
	shf.r.wrap.b32 	%r5880, %r5877, %r5878, 28;
	mov.b64 	%rd8194, {%r5880, %r5879};
	shf.l.wrap.b32 	%r5881, %r5877, %r5878, 30;
	shf.l.wrap.b32 	%r5882, %r5878, %r5877, 30;
	mov.b64 	%rd8195, {%r5882, %r5881};
	xor.b64  	%rd8196, %rd8194, %rd8195;
	shf.l.wrap.b32 	%r5883, %r5877, %r5878, 25;
	shf.l.wrap.b32 	%r5884, %r5878, %r5877, 25;
	mov.b64 	%rd8197, {%r5884, %r5883};
	xor.b64  	%rd8198, %rd8196, %rd8197;
	and.b64  	%rd8199, %rd8167, %rd8130;
	or.b64  	%rd8200, %rd8167, %rd8130;
	and.b64  	%rd8201, %rd8200, %rd8093;
	or.b64  	%rd8202, %rd8201, %rd8199;
	add.s64 	%rd8203, %rd8202, %rd8198;
	add.s64 	%rd8204, %rd8203, %rd8192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5885,%dummy}, %rd8143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5886}, %rd8143;
	}
	shf.r.wrap.b32 	%r5887, %r5886, %r5885, 19;
	shf.r.wrap.b32 	%r5888, %r5885, %r5886, 19;
	mov.b64 	%rd8205, {%r5888, %r5887};
	shf.l.wrap.b32 	%r5889, %r5885, %r5886, 3;
	shf.l.wrap.b32 	%r5890, %r5886, %r5885, 3;
	mov.b64 	%rd8206, {%r5890, %r5889};
	xor.b64  	%rd8207, %rd8205, %rd8206;
	shr.u64 	%rd8208, %rd8143, 6;
	xor.b64  	%rd8209, %rd8207, %rd8208;
	shf.r.wrap.b32 	%r5891, %r5548, %r5547, 1;
	shf.r.wrap.b32 	%r5892, %r5547, %r5548, 1;
	mov.b64 	%rd8210, {%r5892, %r5891};
	shf.r.wrap.b32 	%r5893, %r5548, %r5547, 8;
	shf.r.wrap.b32 	%r5894, %r5547, %r5548, 8;
	mov.b64 	%rd8211, {%r5894, %r5893};
	xor.b64  	%rd8212, %rd8210, %rd8211;
	shr.u64 	%rd8213, %rd7662, 7;
	xor.b64  	%rd8214, %rd8212, %rd8213;
	add.s64 	%rd8215, %rd8214, %rd7625;
	add.s64 	%rd8216, %rd8215, %rd7958;
	add.s64 	%rd8217, %rd8216, %rd8209;
	add.s64 	%rd8218, %rd8217, %rd8082;
	xor.b64  	%rd8219, %rd8156, %rd8119;
	and.b64  	%rd8220, %rd8193, %rd8219;
	xor.b64  	%rd8221, %rd8220, %rd8119;
	add.s64 	%rd8222, %rd8218, %rd8221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5895,%dummy}, %rd8193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5896}, %rd8193;
	}
	shf.r.wrap.b32 	%r5897, %r5896, %r5895, 14;
	shf.r.wrap.b32 	%r5898, %r5895, %r5896, 14;
	mov.b64 	%rd8223, {%r5898, %r5897};
	shf.r.wrap.b32 	%r5899, %r5896, %r5895, 18;
	shf.r.wrap.b32 	%r5900, %r5895, %r5896, 18;
	mov.b64 	%rd8224, {%r5900, %r5899};
	xor.b64  	%rd8225, %rd8223, %rd8224;
	shf.l.wrap.b32 	%r5901, %r5895, %r5896, 23;
	shf.l.wrap.b32 	%r5902, %r5896, %r5895, 23;
	mov.b64 	%rd8226, {%r5902, %r5901};
	xor.b64  	%rd8227, %rd8225, %rd8226;
	add.s64 	%rd8228, %rd8222, %rd8227;
	add.s64 	%rd8229, %rd8228, 7507060721942968483;
	add.s64 	%rd8230, %rd8229, %rd8093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5903,%dummy}, %rd8204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5904}, %rd8204;
	}
	shf.r.wrap.b32 	%r5905, %r5904, %r5903, 28;
	shf.r.wrap.b32 	%r5906, %r5903, %r5904, 28;
	mov.b64 	%rd8231, {%r5906, %r5905};
	shf.l.wrap.b32 	%r5907, %r5903, %r5904, 30;
	shf.l.wrap.b32 	%r5908, %r5904, %r5903, 30;
	mov.b64 	%rd8232, {%r5908, %r5907};
	xor.b64  	%rd8233, %rd8231, %rd8232;
	shf.l.wrap.b32 	%r5909, %r5903, %r5904, 25;
	shf.l.wrap.b32 	%r5910, %r5904, %r5903, 25;
	mov.b64 	%rd8234, {%r5910, %r5909};
	xor.b64  	%rd8235, %rd8233, %rd8234;
	and.b64  	%rd8236, %rd8204, %rd8167;
	or.b64  	%rd8237, %rd8204, %rd8167;
	and.b64  	%rd8238, %rd8237, %rd8130;
	or.b64  	%rd8239, %rd8238, %rd8236;
	add.s64 	%rd8240, %rd8239, %rd8235;
	add.s64 	%rd8241, %rd8240, %rd8229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5911,%dummy}, %rd8180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5912}, %rd8180;
	}
	shf.r.wrap.b32 	%r5913, %r5912, %r5911, 19;
	shf.r.wrap.b32 	%r5914, %r5911, %r5912, 19;
	mov.b64 	%rd8242, {%r5914, %r5913};
	shf.l.wrap.b32 	%r5915, %r5911, %r5912, 3;
	shf.l.wrap.b32 	%r5916, %r5912, %r5911, 3;
	mov.b64 	%rd8243, {%r5916, %r5915};
	xor.b64  	%rd8244, %rd8242, %rd8243;
	shr.u64 	%rd8245, %rd8180, 6;
	xor.b64  	%rd8246, %rd8244, %rd8245;
	shf.r.wrap.b32 	%r5917, %r5574, %r5573, 1;
	shf.r.wrap.b32 	%r5918, %r5573, %r5574, 1;
	mov.b64 	%rd8247, {%r5918, %r5917};
	shf.r.wrap.b32 	%r5919, %r5574, %r5573, 8;
	shf.r.wrap.b32 	%r5920, %r5573, %r5574, 8;
	mov.b64 	%rd8248, {%r5920, %r5919};
	xor.b64  	%rd8249, %rd8247, %rd8248;
	shr.u64 	%rd8250, %rd7699, 7;
	xor.b64  	%rd8251, %rd8249, %rd8250;
	add.s64 	%rd8252, %rd8251, %rd7662;
	add.s64 	%rd8253, %rd8252, %rd7995;
	add.s64 	%rd8254, %rd8253, %rd8246;
	add.s64 	%rd8255, %rd8254, %rd8119;
	xor.b64  	%rd8256, %rd8193, %rd8156;
	and.b64  	%rd8257, %rd8230, %rd8256;
	xor.b64  	%rd8258, %rd8257, %rd8156;
	add.s64 	%rd8259, %rd8255, %rd8258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5921,%dummy}, %rd8230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5922}, %rd8230;
	}
	shf.r.wrap.b32 	%r5923, %r5922, %r5921, 14;
	shf.r.wrap.b32 	%r5924, %r5921, %r5922, 14;
	mov.b64 	%rd8260, {%r5924, %r5923};
	shf.r.wrap.b32 	%r5925, %r5922, %r5921, 18;
	shf.r.wrap.b32 	%r5926, %r5921, %r5922, 18;
	mov.b64 	%rd8261, {%r5926, %r5925};
	xor.b64  	%rd8262, %rd8260, %rd8261;
	shf.l.wrap.b32 	%r5927, %r5921, %r5922, 23;
	shf.l.wrap.b32 	%r5928, %r5922, %r5921, 23;
	mov.b64 	%rd8263, {%r5928, %r5927};
	xor.b64  	%rd8264, %rd8262, %rd8263;
	add.s64 	%rd8265, %rd8259, %rd8264;
	add.s64 	%rd8266, %rd8265, 8399075790359081724;
	add.s64 	%rd8267, %rd8266, %rd8130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5929,%dummy}, %rd8241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5930}, %rd8241;
	}
	shf.r.wrap.b32 	%r5931, %r5930, %r5929, 28;
	shf.r.wrap.b32 	%r5932, %r5929, %r5930, 28;
	mov.b64 	%rd8268, {%r5932, %r5931};
	shf.l.wrap.b32 	%r5933, %r5929, %r5930, 30;
	shf.l.wrap.b32 	%r5934, %r5930, %r5929, 30;
	mov.b64 	%rd8269, {%r5934, %r5933};
	xor.b64  	%rd8270, %rd8268, %rd8269;
	shf.l.wrap.b32 	%r5935, %r5929, %r5930, 25;
	shf.l.wrap.b32 	%r5936, %r5930, %r5929, 25;
	mov.b64 	%rd8271, {%r5936, %r5935};
	xor.b64  	%rd8272, %rd8270, %rd8271;
	and.b64  	%rd8273, %rd8241, %rd8204;
	or.b64  	%rd8274, %rd8241, %rd8204;
	and.b64  	%rd8275, %rd8274, %rd8167;
	or.b64  	%rd8276, %rd8275, %rd8273;
	add.s64 	%rd8277, %rd8276, %rd8272;
	add.s64 	%rd8278, %rd8277, %rd8266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5937,%dummy}, %rd8217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5938}, %rd8217;
	}
	shf.r.wrap.b32 	%r5939, %r5938, %r5937, 19;
	shf.r.wrap.b32 	%r5940, %r5937, %r5938, 19;
	mov.b64 	%rd8279, {%r5940, %r5939};
	shf.l.wrap.b32 	%r5941, %r5937, %r5938, 3;
	shf.l.wrap.b32 	%r5942, %r5938, %r5937, 3;
	mov.b64 	%rd8280, {%r5942, %r5941};
	xor.b64  	%rd8281, %rd8279, %rd8280;
	shr.u64 	%rd8282, %rd8217, 6;
	xor.b64  	%rd8283, %rd8281, %rd8282;
	shf.r.wrap.b32 	%r5943, %r5600, %r5599, 1;
	shf.r.wrap.b32 	%r5944, %r5599, %r5600, 1;
	mov.b64 	%rd8284, {%r5944, %r5943};
	shf.r.wrap.b32 	%r5945, %r5600, %r5599, 8;
	shf.r.wrap.b32 	%r5946, %r5599, %r5600, 8;
	mov.b64 	%rd8285, {%r5946, %r5945};
	xor.b64  	%rd8286, %rd8284, %rd8285;
	shr.u64 	%rd8287, %rd7736, 7;
	xor.b64  	%rd8288, %rd8286, %rd8287;
	add.s64 	%rd8289, %rd8288, %rd7699;
	add.s64 	%rd8290, %rd8289, %rd8032;
	add.s64 	%rd8291, %rd8290, %rd8283;
	add.s64 	%rd8292, %rd8291, %rd8156;
	xor.b64  	%rd8293, %rd8230, %rd8193;
	and.b64  	%rd8294, %rd8267, %rd8293;
	xor.b64  	%rd8295, %rd8294, %rd8193;
	add.s64 	%rd8296, %rd8292, %rd8295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5947,%dummy}, %rd8267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5948}, %rd8267;
	}
	shf.r.wrap.b32 	%r5949, %r5948, %r5947, 14;
	shf.r.wrap.b32 	%r5950, %r5947, %r5948, 14;
	mov.b64 	%rd8297, {%r5950, %r5949};
	shf.r.wrap.b32 	%r5951, %r5948, %r5947, 18;
	shf.r.wrap.b32 	%r5952, %r5947, %r5948, 18;
	mov.b64 	%rd8298, {%r5952, %r5951};
	xor.b64  	%rd8299, %rd8297, %rd8298;
	shf.l.wrap.b32 	%r5953, %r5947, %r5948, 23;
	shf.l.wrap.b32 	%r5954, %r5948, %r5947, 23;
	mov.b64 	%rd8300, {%r5954, %r5953};
	xor.b64  	%rd8301, %rd8299, %rd8300;
	add.s64 	%rd8302, %rd8296, %rd8301;
	add.s64 	%rd8303, %rd8302, 8693463985226723168;
	add.s64 	%rd8304, %rd8303, %rd8167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5955,%dummy}, %rd8278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5956}, %rd8278;
	}
	shf.r.wrap.b32 	%r5957, %r5956, %r5955, 28;
	shf.r.wrap.b32 	%r5958, %r5955, %r5956, 28;
	mov.b64 	%rd8305, {%r5958, %r5957};
	shf.l.wrap.b32 	%r5959, %r5955, %r5956, 30;
	shf.l.wrap.b32 	%r5960, %r5956, %r5955, 30;
	mov.b64 	%rd8306, {%r5960, %r5959};
	xor.b64  	%rd8307, %rd8305, %rd8306;
	shf.l.wrap.b32 	%r5961, %r5955, %r5956, 25;
	shf.l.wrap.b32 	%r5962, %r5956, %r5955, 25;
	mov.b64 	%rd8308, {%r5962, %r5961};
	xor.b64  	%rd8309, %rd8307, %rd8308;
	and.b64  	%rd8310, %rd8278, %rd8241;
	or.b64  	%rd8311, %rd8278, %rd8241;
	and.b64  	%rd8312, %rd8311, %rd8204;
	or.b64  	%rd8313, %rd8312, %rd8310;
	add.s64 	%rd8314, %rd8313, %rd8309;
	add.s64 	%rd8315, %rd8314, %rd8303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5963,%dummy}, %rd8254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5964}, %rd8254;
	}
	shf.r.wrap.b32 	%r5965, %r5964, %r5963, 19;
	shf.r.wrap.b32 	%r5966, %r5963, %r5964, 19;
	mov.b64 	%rd8316, {%r5966, %r5965};
	shf.l.wrap.b32 	%r5967, %r5963, %r5964, 3;
	shf.l.wrap.b32 	%r5968, %r5964, %r5963, 3;
	mov.b64 	%rd8317, {%r5968, %r5967};
	xor.b64  	%rd8318, %rd8316, %rd8317;
	shr.u64 	%rd8319, %rd8254, 6;
	xor.b64  	%rd8320, %rd8318, %rd8319;
	shf.r.wrap.b32 	%r5969, %r5626, %r5625, 1;
	shf.r.wrap.b32 	%r5970, %r5625, %r5626, 1;
	mov.b64 	%rd8321, {%r5970, %r5969};
	shf.r.wrap.b32 	%r5971, %r5626, %r5625, 8;
	shf.r.wrap.b32 	%r5972, %r5625, %r5626, 8;
	mov.b64 	%rd8322, {%r5972, %r5971};
	xor.b64  	%rd8323, %rd8321, %rd8322;
	shr.u64 	%rd8324, %rd7773, 7;
	xor.b64  	%rd8325, %rd8323, %rd8324;
	add.s64 	%rd8326, %rd8325, %rd7736;
	add.s64 	%rd8327, %rd8326, %rd8069;
	add.s64 	%rd8328, %rd8327, %rd8320;
	add.s64 	%rd8329, %rd8328, %rd8193;
	xor.b64  	%rd8330, %rd8267, %rd8230;
	and.b64  	%rd8331, %rd8304, %rd8330;
	xor.b64  	%rd8332, %rd8331, %rd8230;
	add.s64 	%rd8333, %rd8329, %rd8332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5973,%dummy}, %rd8304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5974}, %rd8304;
	}
	shf.r.wrap.b32 	%r5975, %r5974, %r5973, 14;
	shf.r.wrap.b32 	%r5976, %r5973, %r5974, 14;
	mov.b64 	%rd8334, {%r5976, %r5975};
	shf.r.wrap.b32 	%r5977, %r5974, %r5973, 18;
	shf.r.wrap.b32 	%r5978, %r5973, %r5974, 18;
	mov.b64 	%rd8335, {%r5978, %r5977};
	xor.b64  	%rd8336, %rd8334, %rd8335;
	shf.l.wrap.b32 	%r5979, %r5973, %r5974, 23;
	shf.l.wrap.b32 	%r5980, %r5974, %r5973, 23;
	mov.b64 	%rd8337, {%r5980, %r5979};
	xor.b64  	%rd8338, %rd8336, %rd8337;
	add.s64 	%rd8339, %rd8333, %rd8338;
	add.s64 	%rd8340, %rd8339, -8878714635349349518;
	add.s64 	%rd8341, %rd8340, %rd8204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5981,%dummy}, %rd8315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5982}, %rd8315;
	}
	shf.r.wrap.b32 	%r5983, %r5982, %r5981, 28;
	shf.r.wrap.b32 	%r5984, %r5981, %r5982, 28;
	mov.b64 	%rd8342, {%r5984, %r5983};
	shf.l.wrap.b32 	%r5985, %r5981, %r5982, 30;
	shf.l.wrap.b32 	%r5986, %r5982, %r5981, 30;
	mov.b64 	%rd8343, {%r5986, %r5985};
	xor.b64  	%rd8344, %rd8342, %rd8343;
	shf.l.wrap.b32 	%r5987, %r5981, %r5982, 25;
	shf.l.wrap.b32 	%r5988, %r5982, %r5981, 25;
	mov.b64 	%rd8345, {%r5988, %r5987};
	xor.b64  	%rd8346, %rd8344, %rd8345;
	and.b64  	%rd8347, %rd8315, %rd8278;
	or.b64  	%rd8348, %rd8315, %rd8278;
	and.b64  	%rd8349, %rd8348, %rd8241;
	or.b64  	%rd8350, %rd8349, %rd8347;
	add.s64 	%rd8351, %rd8350, %rd8346;
	add.s64 	%rd8352, %rd8351, %rd8340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5989,%dummy}, %rd8291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5990}, %rd8291;
	}
	shf.r.wrap.b32 	%r5991, %r5990, %r5989, 19;
	shf.r.wrap.b32 	%r5992, %r5989, %r5990, 19;
	mov.b64 	%rd8353, {%r5992, %r5991};
	shf.l.wrap.b32 	%r5993, %r5989, %r5990, 3;
	shf.l.wrap.b32 	%r5994, %r5990, %r5989, 3;
	mov.b64 	%rd8354, {%r5994, %r5993};
	xor.b64  	%rd8355, %rd8353, %rd8354;
	shr.u64 	%rd8356, %rd8291, 6;
	xor.b64  	%rd8357, %rd8355, %rd8356;
	shf.r.wrap.b32 	%r5995, %r5652, %r5651, 1;
	shf.r.wrap.b32 	%r5996, %r5651, %r5652, 1;
	mov.b64 	%rd8358, {%r5996, %r5995};
	shf.r.wrap.b32 	%r5997, %r5652, %r5651, 8;
	shf.r.wrap.b32 	%r5998, %r5651, %r5652, 8;
	mov.b64 	%rd8359, {%r5998, %r5997};
	xor.b64  	%rd8360, %rd8358, %rd8359;
	shr.u64 	%rd8361, %rd7810, 7;
	xor.b64  	%rd8362, %rd8360, %rd8361;
	add.s64 	%rd8363, %rd8362, %rd7773;
	add.s64 	%rd8364, %rd8363, %rd8106;
	add.s64 	%rd8365, %rd8364, %rd8357;
	add.s64 	%rd8366, %rd8365, %rd8230;
	xor.b64  	%rd8367, %rd8304, %rd8267;
	and.b64  	%rd8368, %rd8341, %rd8367;
	xor.b64  	%rd8369, %rd8368, %rd8267;
	add.s64 	%rd8370, %rd8366, %rd8369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5999,%dummy}, %rd8341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6000}, %rd8341;
	}
	shf.r.wrap.b32 	%r6001, %r6000, %r5999, 14;
	shf.r.wrap.b32 	%r6002, %r5999, %r6000, 14;
	mov.b64 	%rd8371, {%r6002, %r6001};
	shf.r.wrap.b32 	%r6003, %r6000, %r5999, 18;
	shf.r.wrap.b32 	%r6004, %r5999, %r6000, 18;
	mov.b64 	%rd8372, {%r6004, %r6003};
	xor.b64  	%rd8373, %rd8371, %rd8372;
	shf.l.wrap.b32 	%r6005, %r5999, %r6000, 23;
	shf.l.wrap.b32 	%r6006, %r6000, %r5999, 23;
	mov.b64 	%rd8374, {%r6006, %r6005};
	xor.b64  	%rd8375, %rd8373, %rd8374;
	add.s64 	%rd8376, %rd8370, %rd8375;
	add.s64 	%rd8377, %rd8376, -8302665154208450068;
	add.s64 	%rd8378, %rd8377, %rd8241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6007,%dummy}, %rd8352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6008}, %rd8352;
	}
	shf.r.wrap.b32 	%r6009, %r6008, %r6007, 28;
	shf.r.wrap.b32 	%r6010, %r6007, %r6008, 28;
	mov.b64 	%rd8379, {%r6010, %r6009};
	shf.l.wrap.b32 	%r6011, %r6007, %r6008, 30;
	shf.l.wrap.b32 	%r6012, %r6008, %r6007, 30;
	mov.b64 	%rd8380, {%r6012, %r6011};
	xor.b64  	%rd8381, %rd8379, %rd8380;
	shf.l.wrap.b32 	%r6013, %r6007, %r6008, 25;
	shf.l.wrap.b32 	%r6014, %r6008, %r6007, 25;
	mov.b64 	%rd8382, {%r6014, %r6013};
	xor.b64  	%rd8383, %rd8381, %rd8382;
	and.b64  	%rd8384, %rd8352, %rd8315;
	or.b64  	%rd8385, %rd8352, %rd8315;
	and.b64  	%rd8386, %rd8385, %rd8278;
	or.b64  	%rd8387, %rd8386, %rd8384;
	add.s64 	%rd8388, %rd8387, %rd8383;
	add.s64 	%rd8389, %rd8388, %rd8377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6015,%dummy}, %rd8328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6016}, %rd8328;
	}
	shf.r.wrap.b32 	%r6017, %r6016, %r6015, 19;
	shf.r.wrap.b32 	%r6018, %r6015, %r6016, 19;
	mov.b64 	%rd8390, {%r6018, %r6017};
	shf.l.wrap.b32 	%r6019, %r6015, %r6016, 3;
	shf.l.wrap.b32 	%r6020, %r6016, %r6015, 3;
	mov.b64 	%rd8391, {%r6020, %r6019};
	xor.b64  	%rd8392, %rd8390, %rd8391;
	shr.u64 	%rd8393, %rd8328, 6;
	xor.b64  	%rd8394, %rd8392, %rd8393;
	shf.r.wrap.b32 	%r6021, %r5678, %r5677, 1;
	shf.r.wrap.b32 	%r6022, %r5677, %r5678, 1;
	mov.b64 	%rd8395, {%r6022, %r6021};
	shf.r.wrap.b32 	%r6023, %r5678, %r5677, 8;
	shf.r.wrap.b32 	%r6024, %r5677, %r5678, 8;
	mov.b64 	%rd8396, {%r6024, %r6023};
	xor.b64  	%rd8397, %rd8395, %rd8396;
	shr.u64 	%rd8398, %rd7847, 7;
	xor.b64  	%rd8399, %rd8397, %rd8398;
	add.s64 	%rd8400, %rd8399, %rd7810;
	add.s64 	%rd8401, %rd8400, %rd8143;
	add.s64 	%rd8402, %rd8401, %rd8394;
	add.s64 	%rd8403, %rd8402, %rd8267;
	xor.b64  	%rd8404, %rd8341, %rd8304;
	and.b64  	%rd8405, %rd8378, %rd8404;
	xor.b64  	%rd8406, %rd8405, %rd8304;
	add.s64 	%rd8407, %rd8403, %rd8406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6025,%dummy}, %rd8378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6026}, %rd8378;
	}
	shf.r.wrap.b32 	%r6027, %r6026, %r6025, 14;
	shf.r.wrap.b32 	%r6028, %r6025, %r6026, 14;
	mov.b64 	%rd8408, {%r6028, %r6027};
	shf.r.wrap.b32 	%r6029, %r6026, %r6025, 18;
	shf.r.wrap.b32 	%r6030, %r6025, %r6026, 18;
	mov.b64 	%rd8409, {%r6030, %r6029};
	xor.b64  	%rd8410, %rd8408, %rd8409;
	shf.l.wrap.b32 	%r6031, %r6025, %r6026, 23;
	shf.l.wrap.b32 	%r6032, %r6026, %r6025, 23;
	mov.b64 	%rd8411, {%r6032, %r6031};
	xor.b64  	%rd8412, %rd8410, %rd8411;
	add.s64 	%rd8413, %rd8407, %rd8412;
	add.s64 	%rd8414, %rd8413, -8016688836872298968;
	add.s64 	%rd8415, %rd8414, %rd8278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6033,%dummy}, %rd8389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6034}, %rd8389;
	}
	shf.r.wrap.b32 	%r6035, %r6034, %r6033, 28;
	shf.r.wrap.b32 	%r6036, %r6033, %r6034, 28;
	mov.b64 	%rd8416, {%r6036, %r6035};
	shf.l.wrap.b32 	%r6037, %r6033, %r6034, 30;
	shf.l.wrap.b32 	%r6038, %r6034, %r6033, 30;
	mov.b64 	%rd8417, {%r6038, %r6037};
	xor.b64  	%rd8418, %rd8416, %rd8417;
	shf.l.wrap.b32 	%r6039, %r6033, %r6034, 25;
	shf.l.wrap.b32 	%r6040, %r6034, %r6033, 25;
	mov.b64 	%rd8419, {%r6040, %r6039};
	xor.b64  	%rd8420, %rd8418, %rd8419;
	and.b64  	%rd8421, %rd8389, %rd8352;
	or.b64  	%rd8422, %rd8389, %rd8352;
	and.b64  	%rd8423, %rd8422, %rd8315;
	or.b64  	%rd8424, %rd8423, %rd8421;
	add.s64 	%rd8425, %rd8424, %rd8420;
	add.s64 	%rd8426, %rd8425, %rd8414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6041,%dummy}, %rd8365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6042}, %rd8365;
	}
	shf.r.wrap.b32 	%r6043, %r6042, %r6041, 19;
	shf.r.wrap.b32 	%r6044, %r6041, %r6042, 19;
	mov.b64 	%rd8427, {%r6044, %r6043};
	shf.l.wrap.b32 	%r6045, %r6041, %r6042, 3;
	shf.l.wrap.b32 	%r6046, %r6042, %r6041, 3;
	mov.b64 	%rd8428, {%r6046, %r6045};
	xor.b64  	%rd8429, %rd8427, %rd8428;
	shr.u64 	%rd8430, %rd8365, 6;
	xor.b64  	%rd8431, %rd8429, %rd8430;
	shf.r.wrap.b32 	%r6047, %r5704, %r5703, 1;
	shf.r.wrap.b32 	%r6048, %r5703, %r5704, 1;
	mov.b64 	%rd8432, {%r6048, %r6047};
	shf.r.wrap.b32 	%r6049, %r5704, %r5703, 8;
	shf.r.wrap.b32 	%r6050, %r5703, %r5704, 8;
	mov.b64 	%rd8433, {%r6050, %r6049};
	xor.b64  	%rd8434, %rd8432, %rd8433;
	shr.u64 	%rd8435, %rd7884, 7;
	xor.b64  	%rd8436, %rd8434, %rd8435;
	add.s64 	%rd8437, %rd8436, %rd7847;
	add.s64 	%rd8438, %rd8437, %rd8180;
	add.s64 	%rd8439, %rd8438, %rd8431;
	add.s64 	%rd8440, %rd8439, %rd8304;
	xor.b64  	%rd8441, %rd8378, %rd8341;
	and.b64  	%rd8442, %rd8415, %rd8441;
	xor.b64  	%rd8443, %rd8442, %rd8341;
	add.s64 	%rd8444, %rd8440, %rd8443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6051,%dummy}, %rd8415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6052}, %rd8415;
	}
	shf.r.wrap.b32 	%r6053, %r6052, %r6051, 14;
	shf.r.wrap.b32 	%r6054, %r6051, %r6052, 14;
	mov.b64 	%rd8445, {%r6054, %r6053};
	shf.r.wrap.b32 	%r6055, %r6052, %r6051, 18;
	shf.r.wrap.b32 	%r6056, %r6051, %r6052, 18;
	mov.b64 	%rd8446, {%r6056, %r6055};
	xor.b64  	%rd8447, %rd8445, %rd8446;
	shf.l.wrap.b32 	%r6057, %r6051, %r6052, 23;
	shf.l.wrap.b32 	%r6058, %r6052, %r6051, 23;
	mov.b64 	%rd8448, {%r6058, %r6057};
	xor.b64  	%rd8449, %rd8447, %rd8448;
	add.s64 	%rd8450, %rd8444, %rd8449;
	add.s64 	%rd8451, %rd8450, -6606660893046293015;
	add.s64 	%rd8452, %rd8451, %rd8315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6059,%dummy}, %rd8426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6060}, %rd8426;
	}
	shf.r.wrap.b32 	%r6061, %r6060, %r6059, 28;
	shf.r.wrap.b32 	%r6062, %r6059, %r6060, 28;
	mov.b64 	%rd8453, {%r6062, %r6061};
	shf.l.wrap.b32 	%r6063, %r6059, %r6060, 30;
	shf.l.wrap.b32 	%r6064, %r6060, %r6059, 30;
	mov.b64 	%rd8454, {%r6064, %r6063};
	xor.b64  	%rd8455, %rd8453, %rd8454;
	shf.l.wrap.b32 	%r6065, %r6059, %r6060, 25;
	shf.l.wrap.b32 	%r6066, %r6060, %r6059, 25;
	mov.b64 	%rd8456, {%r6066, %r6065};
	xor.b64  	%rd8457, %rd8455, %rd8456;
	and.b64  	%rd8458, %rd8426, %rd8389;
	or.b64  	%rd8459, %rd8426, %rd8389;
	and.b64  	%rd8460, %rd8459, %rd8352;
	or.b64  	%rd8461, %rd8460, %rd8458;
	add.s64 	%rd8462, %rd8461, %rd8457;
	add.s64 	%rd8463, %rd8462, %rd8451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6067,%dummy}, %rd8402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6068}, %rd8402;
	}
	shf.r.wrap.b32 	%r6069, %r6068, %r6067, 19;
	shf.r.wrap.b32 	%r6070, %r6067, %r6068, 19;
	mov.b64 	%rd8464, {%r6070, %r6069};
	shf.l.wrap.b32 	%r6071, %r6067, %r6068, 3;
	shf.l.wrap.b32 	%r6072, %r6068, %r6067, 3;
	mov.b64 	%rd8465, {%r6072, %r6071};
	xor.b64  	%rd8466, %rd8464, %rd8465;
	shr.u64 	%rd8467, %rd8402, 6;
	xor.b64  	%rd8468, %rd8466, %rd8467;
	shf.r.wrap.b32 	%r6073, %r5730, %r5729, 1;
	shf.r.wrap.b32 	%r6074, %r5729, %r5730, 1;
	mov.b64 	%rd8469, {%r6074, %r6073};
	shf.r.wrap.b32 	%r6075, %r5730, %r5729, 8;
	shf.r.wrap.b32 	%r6076, %r5729, %r5730, 8;
	mov.b64 	%rd8470, {%r6076, %r6075};
	xor.b64  	%rd8471, %rd8469, %rd8470;
	shr.u64 	%rd8472, %rd7921, 7;
	xor.b64  	%rd8473, %rd8471, %rd8472;
	add.s64 	%rd8474, %rd8473, %rd7884;
	add.s64 	%rd8475, %rd8474, %rd8217;
	add.s64 	%rd8476, %rd8475, %rd8468;
	add.s64 	%rd8477, %rd8476, %rd8341;
	xor.b64  	%rd8478, %rd8415, %rd8378;
	and.b64  	%rd8479, %rd8452, %rd8478;
	xor.b64  	%rd8480, %rd8479, %rd8378;
	add.s64 	%rd8481, %rd8477, %rd8480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6077,%dummy}, %rd8452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6078}, %rd8452;
	}
	shf.r.wrap.b32 	%r6079, %r6078, %r6077, 14;
	shf.r.wrap.b32 	%r6080, %r6077, %r6078, 14;
	mov.b64 	%rd8482, {%r6080, %r6079};
	shf.r.wrap.b32 	%r6081, %r6078, %r6077, 18;
	shf.r.wrap.b32 	%r6082, %r6077, %r6078, 18;
	mov.b64 	%rd8483, {%r6082, %r6081};
	xor.b64  	%rd8484, %rd8482, %rd8483;
	shf.l.wrap.b32 	%r6083, %r6077, %r6078, 23;
	shf.l.wrap.b32 	%r6084, %r6078, %r6077, 23;
	mov.b64 	%rd8485, {%r6084, %r6083};
	xor.b64  	%rd8486, %rd8484, %rd8485;
	add.s64 	%rd8487, %rd8481, %rd8486;
	add.s64 	%rd8488, %rd8487, -4685533653050689259;
	add.s64 	%rd8489, %rd8488, %rd8352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6085,%dummy}, %rd8463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6086}, %rd8463;
	}
	shf.r.wrap.b32 	%r6087, %r6086, %r6085, 28;
	shf.r.wrap.b32 	%r6088, %r6085, %r6086, 28;
	mov.b64 	%rd8490, {%r6088, %r6087};
	shf.l.wrap.b32 	%r6089, %r6085, %r6086, 30;
	shf.l.wrap.b32 	%r6090, %r6086, %r6085, 30;
	mov.b64 	%rd8491, {%r6090, %r6089};
	xor.b64  	%rd8492, %rd8490, %rd8491;
	shf.l.wrap.b32 	%r6091, %r6085, %r6086, 25;
	shf.l.wrap.b32 	%r6092, %r6086, %r6085, 25;
	mov.b64 	%rd8493, {%r6092, %r6091};
	xor.b64  	%rd8494, %rd8492, %rd8493;
	and.b64  	%rd8495, %rd8463, %rd8426;
	or.b64  	%rd8496, %rd8463, %rd8426;
	and.b64  	%rd8497, %rd8496, %rd8389;
	or.b64  	%rd8498, %rd8497, %rd8495;
	add.s64 	%rd8499, %rd8498, %rd8494;
	add.s64 	%rd8500, %rd8499, %rd8488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6093,%dummy}, %rd8439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6094}, %rd8439;
	}
	shf.r.wrap.b32 	%r6095, %r6094, %r6093, 19;
	shf.r.wrap.b32 	%r6096, %r6093, %r6094, 19;
	mov.b64 	%rd8501, {%r6096, %r6095};
	shf.l.wrap.b32 	%r6097, %r6093, %r6094, 3;
	shf.l.wrap.b32 	%r6098, %r6094, %r6093, 3;
	mov.b64 	%rd8502, {%r6098, %r6097};
	xor.b64  	%rd8503, %rd8501, %rd8502;
	shr.u64 	%rd8504, %rd8439, 6;
	xor.b64  	%rd8505, %rd8503, %rd8504;
	shf.r.wrap.b32 	%r6099, %r5756, %r5755, 1;
	shf.r.wrap.b32 	%r6100, %r5755, %r5756, 1;
	mov.b64 	%rd8506, {%r6100, %r6099};
	shf.r.wrap.b32 	%r6101, %r5756, %r5755, 8;
	shf.r.wrap.b32 	%r6102, %r5755, %r5756, 8;
	mov.b64 	%rd8507, {%r6102, %r6101};
	xor.b64  	%rd8508, %rd8506, %rd8507;
	shr.u64 	%rd8509, %rd7958, 7;
	xor.b64  	%rd8510, %rd8508, %rd8509;
	add.s64 	%rd8511, %rd8510, %rd7921;
	add.s64 	%rd8512, %rd8511, %rd8254;
	add.s64 	%rd8513, %rd8512, %rd8505;
	add.s64 	%rd8514, %rd8513, %rd8378;
	xor.b64  	%rd8515, %rd8452, %rd8415;
	and.b64  	%rd8516, %rd8489, %rd8515;
	xor.b64  	%rd8517, %rd8516, %rd8415;
	add.s64 	%rd8518, %rd8514, %rd8517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6103,%dummy}, %rd8489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6104}, %rd8489;
	}
	shf.r.wrap.b32 	%r6105, %r6104, %r6103, 14;
	shf.r.wrap.b32 	%r6106, %r6103, %r6104, 14;
	mov.b64 	%rd8519, {%r6106, %r6105};
	shf.r.wrap.b32 	%r6107, %r6104, %r6103, 18;
	shf.r.wrap.b32 	%r6108, %r6103, %r6104, 18;
	mov.b64 	%rd8520, {%r6108, %r6107};
	xor.b64  	%rd8521, %rd8519, %rd8520;
	shf.l.wrap.b32 	%r6109, %r6103, %r6104, 23;
	shf.l.wrap.b32 	%r6110, %r6104, %r6103, 23;
	mov.b64 	%rd8522, {%r6110, %r6109};
	xor.b64  	%rd8523, %rd8521, %rd8522;
	add.s64 	%rd8524, %rd8518, %rd8523;
	add.s64 	%rd8525, %rd8524, -4147400797238176981;
	add.s64 	%rd8526, %rd8525, %rd8389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6111,%dummy}, %rd8500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6112}, %rd8500;
	}
	shf.r.wrap.b32 	%r6113, %r6112, %r6111, 28;
	shf.r.wrap.b32 	%r6114, %r6111, %r6112, 28;
	mov.b64 	%rd8527, {%r6114, %r6113};
	shf.l.wrap.b32 	%r6115, %r6111, %r6112, 30;
	shf.l.wrap.b32 	%r6116, %r6112, %r6111, 30;
	mov.b64 	%rd8528, {%r6116, %r6115};
	xor.b64  	%rd8529, %rd8527, %rd8528;
	shf.l.wrap.b32 	%r6117, %r6111, %r6112, 25;
	shf.l.wrap.b32 	%r6118, %r6112, %r6111, 25;
	mov.b64 	%rd8530, {%r6118, %r6117};
	xor.b64  	%rd8531, %rd8529, %rd8530;
	and.b64  	%rd8532, %rd8500, %rd8463;
	or.b64  	%rd8533, %rd8500, %rd8463;
	and.b64  	%rd8534, %rd8533, %rd8426;
	or.b64  	%rd8535, %rd8534, %rd8532;
	add.s64 	%rd8536, %rd8535, %rd8531;
	add.s64 	%rd8537, %rd8536, %rd8525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6119,%dummy}, %rd8476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6120}, %rd8476;
	}
	shf.r.wrap.b32 	%r6121, %r6120, %r6119, 19;
	shf.r.wrap.b32 	%r6122, %r6119, %r6120, 19;
	mov.b64 	%rd8538, {%r6122, %r6121};
	shf.l.wrap.b32 	%r6123, %r6119, %r6120, 3;
	shf.l.wrap.b32 	%r6124, %r6120, %r6119, 3;
	mov.b64 	%rd8539, {%r6124, %r6123};
	xor.b64  	%rd8540, %rd8538, %rd8539;
	shr.u64 	%rd8541, %rd8476, 6;
	xor.b64  	%rd8542, %rd8540, %rd8541;
	shf.r.wrap.b32 	%r6125, %r5782, %r5781, 1;
	shf.r.wrap.b32 	%r6126, %r5781, %r5782, 1;
	mov.b64 	%rd8543, {%r6126, %r6125};
	shf.r.wrap.b32 	%r6127, %r5782, %r5781, 8;
	shf.r.wrap.b32 	%r6128, %r5781, %r5782, 8;
	mov.b64 	%rd8544, {%r6128, %r6127};
	xor.b64  	%rd8545, %rd8543, %rd8544;
	shr.u64 	%rd8546, %rd7995, 7;
	xor.b64  	%rd8547, %rd8545, %rd8546;
	add.s64 	%rd8548, %rd8547, %rd7958;
	add.s64 	%rd8549, %rd8548, %rd8291;
	add.s64 	%rd8550, %rd8549, %rd8542;
	add.s64 	%rd8551, %rd8550, %rd8415;
	xor.b64  	%rd8552, %rd8489, %rd8452;
	and.b64  	%rd8553, %rd8526, %rd8552;
	xor.b64  	%rd8554, %rd8553, %rd8452;
	add.s64 	%rd8555, %rd8551, %rd8554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6129,%dummy}, %rd8526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6130}, %rd8526;
	}
	shf.r.wrap.b32 	%r6131, %r6130, %r6129, 14;
	shf.r.wrap.b32 	%r6132, %r6129, %r6130, 14;
	mov.b64 	%rd8556, {%r6132, %r6131};
	shf.r.wrap.b32 	%r6133, %r6130, %r6129, 18;
	shf.r.wrap.b32 	%r6134, %r6129, %r6130, 18;
	mov.b64 	%rd8557, {%r6134, %r6133};
	xor.b64  	%rd8558, %rd8556, %rd8557;
	shf.l.wrap.b32 	%r6135, %r6129, %r6130, 23;
	shf.l.wrap.b32 	%r6136, %r6130, %r6129, 23;
	mov.b64 	%rd8559, {%r6136, %r6135};
	xor.b64  	%rd8560, %rd8558, %rd8559;
	add.s64 	%rd8561, %rd8555, %rd8560;
	add.s64 	%rd8562, %rd8561, -3880063495543823972;
	add.s64 	%rd8563, %rd8562, %rd8426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6137,%dummy}, %rd8537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6138}, %rd8537;
	}
	shf.r.wrap.b32 	%r6139, %r6138, %r6137, 28;
	shf.r.wrap.b32 	%r6140, %r6137, %r6138, 28;
	mov.b64 	%rd8564, {%r6140, %r6139};
	shf.l.wrap.b32 	%r6141, %r6137, %r6138, 30;
	shf.l.wrap.b32 	%r6142, %r6138, %r6137, 30;
	mov.b64 	%rd8565, {%r6142, %r6141};
	xor.b64  	%rd8566, %rd8564, %rd8565;
	shf.l.wrap.b32 	%r6143, %r6137, %r6138, 25;
	shf.l.wrap.b32 	%r6144, %r6138, %r6137, 25;
	mov.b64 	%rd8567, {%r6144, %r6143};
	xor.b64  	%rd8568, %rd8566, %rd8567;
	and.b64  	%rd8569, %rd8537, %rd8500;
	or.b64  	%rd8570, %rd8537, %rd8500;
	and.b64  	%rd8571, %rd8570, %rd8463;
	or.b64  	%rd8572, %rd8571, %rd8569;
	add.s64 	%rd8573, %rd8572, %rd8568;
	add.s64 	%rd8574, %rd8573, %rd8562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6145,%dummy}, %rd8513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6146}, %rd8513;
	}
	shf.r.wrap.b32 	%r6147, %r6146, %r6145, 19;
	shf.r.wrap.b32 	%r6148, %r6145, %r6146, 19;
	mov.b64 	%rd8575, {%r6148, %r6147};
	shf.l.wrap.b32 	%r6149, %r6145, %r6146, 3;
	shf.l.wrap.b32 	%r6150, %r6146, %r6145, 3;
	mov.b64 	%rd8576, {%r6150, %r6149};
	xor.b64  	%rd8577, %rd8575, %rd8576;
	shr.u64 	%rd8578, %rd8513, 6;
	xor.b64  	%rd8579, %rd8577, %rd8578;
	shf.r.wrap.b32 	%r6151, %r5808, %r5807, 1;
	shf.r.wrap.b32 	%r6152, %r5807, %r5808, 1;
	mov.b64 	%rd8580, {%r6152, %r6151};
	shf.r.wrap.b32 	%r6153, %r5808, %r5807, 8;
	shf.r.wrap.b32 	%r6154, %r5807, %r5808, 8;
	mov.b64 	%rd8581, {%r6154, %r6153};
	xor.b64  	%rd8582, %rd8580, %rd8581;
	shr.u64 	%rd8583, %rd8032, 7;
	xor.b64  	%rd8584, %rd8582, %rd8583;
	add.s64 	%rd8585, %rd8584, %rd7995;
	add.s64 	%rd8586, %rd8585, %rd8328;
	add.s64 	%rd8587, %rd8586, %rd8579;
	add.s64 	%rd8588, %rd8587, %rd8452;
	xor.b64  	%rd8589, %rd8526, %rd8489;
	and.b64  	%rd8590, %rd8563, %rd8589;
	xor.b64  	%rd8591, %rd8590, %rd8489;
	add.s64 	%rd8592, %rd8588, %rd8591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6155,%dummy}, %rd8563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6156}, %rd8563;
	}
	shf.r.wrap.b32 	%r6157, %r6156, %r6155, 14;
	shf.r.wrap.b32 	%r6158, %r6155, %r6156, 14;
	mov.b64 	%rd8593, {%r6158, %r6157};
	shf.r.wrap.b32 	%r6159, %r6156, %r6155, 18;
	shf.r.wrap.b32 	%r6160, %r6155, %r6156, 18;
	mov.b64 	%rd8594, {%r6160, %r6159};
	xor.b64  	%rd8595, %rd8593, %rd8594;
	shf.l.wrap.b32 	%r6161, %r6155, %r6156, 23;
	shf.l.wrap.b32 	%r6162, %r6156, %r6155, 23;
	mov.b64 	%rd8596, {%r6162, %r6161};
	xor.b64  	%rd8597, %rd8595, %rd8596;
	add.s64 	%rd8598, %rd8592, %rd8597;
	add.s64 	%rd8599, %rd8598, -3348786107499101689;
	add.s64 	%rd8600, %rd8599, %rd8463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6163,%dummy}, %rd8574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6164}, %rd8574;
	}
	shf.r.wrap.b32 	%r6165, %r6164, %r6163, 28;
	shf.r.wrap.b32 	%r6166, %r6163, %r6164, 28;
	mov.b64 	%rd8601, {%r6166, %r6165};
	shf.l.wrap.b32 	%r6167, %r6163, %r6164, 30;
	shf.l.wrap.b32 	%r6168, %r6164, %r6163, 30;
	mov.b64 	%rd8602, {%r6168, %r6167};
	xor.b64  	%rd8603, %rd8601, %rd8602;
	shf.l.wrap.b32 	%r6169, %r6163, %r6164, 25;
	shf.l.wrap.b32 	%r6170, %r6164, %r6163, 25;
	mov.b64 	%rd8604, {%r6170, %r6169};
	xor.b64  	%rd8605, %rd8603, %rd8604;
	and.b64  	%rd8606, %rd8574, %rd8537;
	or.b64  	%rd8607, %rd8574, %rd8537;
	and.b64  	%rd8608, %rd8607, %rd8500;
	or.b64  	%rd8609, %rd8608, %rd8606;
	add.s64 	%rd8610, %rd8609, %rd8605;
	add.s64 	%rd8611, %rd8610, %rd8599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6171,%dummy}, %rd8550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6172}, %rd8550;
	}
	shf.r.wrap.b32 	%r6173, %r6172, %r6171, 19;
	shf.r.wrap.b32 	%r6174, %r6171, %r6172, 19;
	mov.b64 	%rd8612, {%r6174, %r6173};
	shf.l.wrap.b32 	%r6175, %r6171, %r6172, 3;
	shf.l.wrap.b32 	%r6176, %r6172, %r6171, 3;
	mov.b64 	%rd8613, {%r6176, %r6175};
	xor.b64  	%rd8614, %rd8612, %rd8613;
	shr.u64 	%rd8615, %rd8550, 6;
	xor.b64  	%rd8616, %rd8614, %rd8615;
	shf.r.wrap.b32 	%r6177, %r5834, %r5833, 1;
	shf.r.wrap.b32 	%r6178, %r5833, %r5834, 1;
	mov.b64 	%rd8617, {%r6178, %r6177};
	shf.r.wrap.b32 	%r6179, %r5834, %r5833, 8;
	shf.r.wrap.b32 	%r6180, %r5833, %r5834, 8;
	mov.b64 	%rd8618, {%r6180, %r6179};
	xor.b64  	%rd8619, %rd8617, %rd8618;
	shr.u64 	%rd8620, %rd8069, 7;
	xor.b64  	%rd8621, %rd8619, %rd8620;
	add.s64 	%rd8622, %rd8621, %rd8032;
	add.s64 	%rd8623, %rd8622, %rd8365;
	add.s64 	%rd8624, %rd8623, %rd8616;
	add.s64 	%rd8625, %rd8624, %rd8489;
	xor.b64  	%rd8626, %rd8563, %rd8526;
	and.b64  	%rd8627, %rd8600, %rd8626;
	xor.b64  	%rd8628, %rd8627, %rd8526;
	add.s64 	%rd8629, %rd8625, %rd8628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6181,%dummy}, %rd8600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6182}, %rd8600;
	}
	shf.r.wrap.b32 	%r6183, %r6182, %r6181, 14;
	shf.r.wrap.b32 	%r6184, %r6181, %r6182, 14;
	mov.b64 	%rd8630, {%r6184, %r6183};
	shf.r.wrap.b32 	%r6185, %r6182, %r6181, 18;
	shf.r.wrap.b32 	%r6186, %r6181, %r6182, 18;
	mov.b64 	%rd8631, {%r6186, %r6185};
	xor.b64  	%rd8632, %rd8630, %rd8631;
	shf.l.wrap.b32 	%r6187, %r6181, %r6182, 23;
	shf.l.wrap.b32 	%r6188, %r6182, %r6181, 23;
	mov.b64 	%rd8633, {%r6188, %r6187};
	xor.b64  	%rd8634, %rd8632, %rd8633;
	add.s64 	%rd8635, %rd8629, %rd8634;
	add.s64 	%rd8636, %rd8635, -1523767162380948706;
	add.s64 	%rd8637, %rd8636, %rd8500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6189,%dummy}, %rd8611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6190}, %rd8611;
	}
	shf.r.wrap.b32 	%r6191, %r6190, %r6189, 28;
	shf.r.wrap.b32 	%r6192, %r6189, %r6190, 28;
	mov.b64 	%rd8638, {%r6192, %r6191};
	shf.l.wrap.b32 	%r6193, %r6189, %r6190, 30;
	shf.l.wrap.b32 	%r6194, %r6190, %r6189, 30;
	mov.b64 	%rd8639, {%r6194, %r6193};
	xor.b64  	%rd8640, %rd8638, %rd8639;
	shf.l.wrap.b32 	%r6195, %r6189, %r6190, 25;
	shf.l.wrap.b32 	%r6196, %r6190, %r6189, 25;
	mov.b64 	%rd8641, {%r6196, %r6195};
	xor.b64  	%rd8642, %rd8640, %rd8641;
	and.b64  	%rd8643, %rd8611, %rd8574;
	or.b64  	%rd8644, %rd8611, %rd8574;
	and.b64  	%rd8645, %rd8644, %rd8537;
	or.b64  	%rd8646, %rd8645, %rd8643;
	add.s64 	%rd8647, %rd8646, %rd8642;
	add.s64 	%rd8648, %rd8647, %rd8636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6197,%dummy}, %rd8587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6198}, %rd8587;
	}
	shf.r.wrap.b32 	%r6199, %r6198, %r6197, 19;
	shf.r.wrap.b32 	%r6200, %r6197, %r6198, 19;
	mov.b64 	%rd8649, {%r6200, %r6199};
	shf.l.wrap.b32 	%r6201, %r6197, %r6198, 3;
	shf.l.wrap.b32 	%r6202, %r6198, %r6197, 3;
	mov.b64 	%rd8650, {%r6202, %r6201};
	xor.b64  	%rd8651, %rd8649, %rd8650;
	shr.u64 	%rd8652, %rd8587, 6;
	xor.b64  	%rd8653, %rd8651, %rd8652;
	shf.r.wrap.b32 	%r6203, %r5860, %r5859, 1;
	shf.r.wrap.b32 	%r6204, %r5859, %r5860, 1;
	mov.b64 	%rd8654, {%r6204, %r6203};
	shf.r.wrap.b32 	%r6205, %r5860, %r5859, 8;
	shf.r.wrap.b32 	%r6206, %r5859, %r5860, 8;
	mov.b64 	%rd8655, {%r6206, %r6205};
	xor.b64  	%rd8656, %rd8654, %rd8655;
	shr.u64 	%rd8657, %rd8106, 7;
	xor.b64  	%rd8658, %rd8656, %rd8657;
	add.s64 	%rd8659, %rd8658, %rd8069;
	add.s64 	%rd8660, %rd8659, %rd8402;
	add.s64 	%rd8661, %rd8660, %rd8653;
	add.s64 	%rd8662, %rd8661, %rd8526;
	xor.b64  	%rd8663, %rd8600, %rd8563;
	and.b64  	%rd8664, %rd8637, %rd8663;
	xor.b64  	%rd8665, %rd8664, %rd8563;
	add.s64 	%rd8666, %rd8662, %rd8665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6207,%dummy}, %rd8637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6208}, %rd8637;
	}
	shf.r.wrap.b32 	%r6209, %r6208, %r6207, 14;
	shf.r.wrap.b32 	%r6210, %r6207, %r6208, 14;
	mov.b64 	%rd8667, {%r6210, %r6209};
	shf.r.wrap.b32 	%r6211, %r6208, %r6207, 18;
	shf.r.wrap.b32 	%r6212, %r6207, %r6208, 18;
	mov.b64 	%rd8668, {%r6212, %r6211};
	xor.b64  	%rd8669, %rd8667, %rd8668;
	shf.l.wrap.b32 	%r6213, %r6207, %r6208, 23;
	shf.l.wrap.b32 	%r6214, %r6208, %r6207, 23;
	mov.b64 	%rd8670, {%r6214, %r6213};
	xor.b64  	%rd8671, %rd8669, %rd8670;
	add.s64 	%rd8672, %rd8666, %rd8671;
	add.s64 	%rd8673, %rd8672, -757361751448694408;
	add.s64 	%rd8674, %rd8673, %rd8537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6215,%dummy}, %rd8648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6216}, %rd8648;
	}
	shf.r.wrap.b32 	%r6217, %r6216, %r6215, 28;
	shf.r.wrap.b32 	%r6218, %r6215, %r6216, 28;
	mov.b64 	%rd8675, {%r6218, %r6217};
	shf.l.wrap.b32 	%r6219, %r6215, %r6216, 30;
	shf.l.wrap.b32 	%r6220, %r6216, %r6215, 30;
	mov.b64 	%rd8676, {%r6220, %r6219};
	xor.b64  	%rd8677, %rd8675, %rd8676;
	shf.l.wrap.b32 	%r6221, %r6215, %r6216, 25;
	shf.l.wrap.b32 	%r6222, %r6216, %r6215, 25;
	mov.b64 	%rd8678, {%r6222, %r6221};
	xor.b64  	%rd8679, %rd8677, %rd8678;
	and.b64  	%rd8680, %rd8648, %rd8611;
	or.b64  	%rd8681, %rd8648, %rd8611;
	and.b64  	%rd8682, %rd8681, %rd8574;
	or.b64  	%rd8683, %rd8682, %rd8680;
	add.s64 	%rd8684, %rd8683, %rd8679;
	add.s64 	%rd8685, %rd8684, %rd8673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6223,%dummy}, %rd8624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6224}, %rd8624;
	}
	shf.r.wrap.b32 	%r6225, %r6224, %r6223, 19;
	shf.r.wrap.b32 	%r6226, %r6223, %r6224, 19;
	mov.b64 	%rd8686, {%r6226, %r6225};
	shf.l.wrap.b32 	%r6227, %r6223, %r6224, 3;
	shf.l.wrap.b32 	%r6228, %r6224, %r6223, 3;
	mov.b64 	%rd8687, {%r6228, %r6227};
	xor.b64  	%rd8688, %rd8686, %rd8687;
	shr.u64 	%rd8689, %rd8624, 6;
	xor.b64  	%rd8690, %rd8688, %rd8689;
	shf.r.wrap.b32 	%r6229, %r5886, %r5885, 1;
	shf.r.wrap.b32 	%r6230, %r5885, %r5886, 1;
	mov.b64 	%rd8691, {%r6230, %r6229};
	shf.r.wrap.b32 	%r6231, %r5886, %r5885, 8;
	shf.r.wrap.b32 	%r6232, %r5885, %r5886, 8;
	mov.b64 	%rd8692, {%r6232, %r6231};
	xor.b64  	%rd8693, %rd8691, %rd8692;
	shr.u64 	%rd8694, %rd8143, 7;
	xor.b64  	%rd8695, %rd8693, %rd8694;
	add.s64 	%rd8696, %rd8695, %rd8106;
	add.s64 	%rd8697, %rd8696, %rd8439;
	add.s64 	%rd8698, %rd8697, %rd8690;
	add.s64 	%rd8699, %rd8698, %rd8563;
	xor.b64  	%rd8700, %rd8637, %rd8600;
	and.b64  	%rd8701, %rd8674, %rd8700;
	xor.b64  	%rd8702, %rd8701, %rd8600;
	add.s64 	%rd8703, %rd8699, %rd8702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6233,%dummy}, %rd8674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6234}, %rd8674;
	}
	shf.r.wrap.b32 	%r6235, %r6234, %r6233, 14;
	shf.r.wrap.b32 	%r6236, %r6233, %r6234, 14;
	mov.b64 	%rd8704, {%r6236, %r6235};
	shf.r.wrap.b32 	%r6237, %r6234, %r6233, 18;
	shf.r.wrap.b32 	%r6238, %r6233, %r6234, 18;
	mov.b64 	%rd8705, {%r6238, %r6237};
	xor.b64  	%rd8706, %rd8704, %rd8705;
	shf.l.wrap.b32 	%r6239, %r6233, %r6234, 23;
	shf.l.wrap.b32 	%r6240, %r6234, %r6233, 23;
	mov.b64 	%rd8707, {%r6240, %r6239};
	xor.b64  	%rd8708, %rd8706, %rd8707;
	add.s64 	%rd8709, %rd8703, %rd8708;
	add.s64 	%rd8710, %rd8709, 500013540394364858;
	add.s64 	%rd8711, %rd8710, %rd8574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6241,%dummy}, %rd8685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6242}, %rd8685;
	}
	shf.r.wrap.b32 	%r6243, %r6242, %r6241, 28;
	shf.r.wrap.b32 	%r6244, %r6241, %r6242, 28;
	mov.b64 	%rd8712, {%r6244, %r6243};
	shf.l.wrap.b32 	%r6245, %r6241, %r6242, 30;
	shf.l.wrap.b32 	%r6246, %r6242, %r6241, 30;
	mov.b64 	%rd8713, {%r6246, %r6245};
	xor.b64  	%rd8714, %rd8712, %rd8713;
	shf.l.wrap.b32 	%r6247, %r6241, %r6242, 25;
	shf.l.wrap.b32 	%r6248, %r6242, %r6241, 25;
	mov.b64 	%rd8715, {%r6248, %r6247};
	xor.b64  	%rd8716, %rd8714, %rd8715;
	and.b64  	%rd8717, %rd8685, %rd8648;
	or.b64  	%rd8718, %rd8685, %rd8648;
	and.b64  	%rd8719, %rd8718, %rd8611;
	or.b64  	%rd8720, %rd8719, %rd8717;
	add.s64 	%rd8721, %rd8720, %rd8716;
	add.s64 	%rd8722, %rd8721, %rd8710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6249,%dummy}, %rd8661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6250}, %rd8661;
	}
	shf.r.wrap.b32 	%r6251, %r6250, %r6249, 19;
	shf.r.wrap.b32 	%r6252, %r6249, %r6250, 19;
	mov.b64 	%rd8723, {%r6252, %r6251};
	shf.l.wrap.b32 	%r6253, %r6249, %r6250, 3;
	shf.l.wrap.b32 	%r6254, %r6250, %r6249, 3;
	mov.b64 	%rd8724, {%r6254, %r6253};
	xor.b64  	%rd8725, %rd8723, %rd8724;
	shr.u64 	%rd8726, %rd8661, 6;
	xor.b64  	%rd8727, %rd8725, %rd8726;
	shf.r.wrap.b32 	%r6255, %r5912, %r5911, 1;
	shf.r.wrap.b32 	%r6256, %r5911, %r5912, 1;
	mov.b64 	%rd8728, {%r6256, %r6255};
	shf.r.wrap.b32 	%r6257, %r5912, %r5911, 8;
	shf.r.wrap.b32 	%r6258, %r5911, %r5912, 8;
	mov.b64 	%rd8729, {%r6258, %r6257};
	xor.b64  	%rd8730, %rd8728, %rd8729;
	shr.u64 	%rd8731, %rd8180, 7;
	xor.b64  	%rd8732, %rd8730, %rd8731;
	add.s64 	%rd8733, %rd8732, %rd8143;
	add.s64 	%rd8734, %rd8733, %rd8476;
	add.s64 	%rd8735, %rd8734, %rd8727;
	add.s64 	%rd8736, %rd8735, %rd8600;
	xor.b64  	%rd8737, %rd8674, %rd8637;
	and.b64  	%rd8738, %rd8711, %rd8737;
	xor.b64  	%rd8739, %rd8738, %rd8637;
	add.s64 	%rd8740, %rd8736, %rd8739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6259,%dummy}, %rd8711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6260}, %rd8711;
	}
	shf.r.wrap.b32 	%r6261, %r6260, %r6259, 14;
	shf.r.wrap.b32 	%r6262, %r6259, %r6260, 14;
	mov.b64 	%rd8741, {%r6262, %r6261};
	shf.r.wrap.b32 	%r6263, %r6260, %r6259, 18;
	shf.r.wrap.b32 	%r6264, %r6259, %r6260, 18;
	mov.b64 	%rd8742, {%r6264, %r6263};
	xor.b64  	%rd8743, %rd8741, %rd8742;
	shf.l.wrap.b32 	%r6265, %r6259, %r6260, 23;
	shf.l.wrap.b32 	%r6266, %r6260, %r6259, 23;
	mov.b64 	%rd8744, {%r6266, %r6265};
	xor.b64  	%rd8745, %rd8743, %rd8744;
	add.s64 	%rd8746, %rd8740, %rd8745;
	add.s64 	%rd8747, %rd8746, 748580250866718886;
	add.s64 	%rd8748, %rd8747, %rd8611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6267,%dummy}, %rd8722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6268}, %rd8722;
	}
	shf.r.wrap.b32 	%r6269, %r6268, %r6267, 28;
	shf.r.wrap.b32 	%r6270, %r6267, %r6268, 28;
	mov.b64 	%rd8749, {%r6270, %r6269};
	shf.l.wrap.b32 	%r6271, %r6267, %r6268, 30;
	shf.l.wrap.b32 	%r6272, %r6268, %r6267, 30;
	mov.b64 	%rd8750, {%r6272, %r6271};
	xor.b64  	%rd8751, %rd8749, %rd8750;
	shf.l.wrap.b32 	%r6273, %r6267, %r6268, 25;
	shf.l.wrap.b32 	%r6274, %r6268, %r6267, 25;
	mov.b64 	%rd8752, {%r6274, %r6273};
	xor.b64  	%rd8753, %rd8751, %rd8752;
	and.b64  	%rd8754, %rd8722, %rd8685;
	or.b64  	%rd8755, %rd8722, %rd8685;
	and.b64  	%rd8756, %rd8755, %rd8648;
	or.b64  	%rd8757, %rd8756, %rd8754;
	add.s64 	%rd8758, %rd8757, %rd8753;
	add.s64 	%rd8759, %rd8758, %rd8747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6275,%dummy}, %rd8698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6276}, %rd8698;
	}
	shf.r.wrap.b32 	%r6277, %r6276, %r6275, 19;
	shf.r.wrap.b32 	%r6278, %r6275, %r6276, 19;
	mov.b64 	%rd8760, {%r6278, %r6277};
	shf.l.wrap.b32 	%r6279, %r6275, %r6276, 3;
	shf.l.wrap.b32 	%r6280, %r6276, %r6275, 3;
	mov.b64 	%rd8761, {%r6280, %r6279};
	xor.b64  	%rd8762, %rd8760, %rd8761;
	shr.u64 	%rd8763, %rd8698, 6;
	xor.b64  	%rd8764, %rd8762, %rd8763;
	shf.r.wrap.b32 	%r6281, %r5938, %r5937, 1;
	shf.r.wrap.b32 	%r6282, %r5937, %r5938, 1;
	mov.b64 	%rd8765, {%r6282, %r6281};
	shf.r.wrap.b32 	%r6283, %r5938, %r5937, 8;
	shf.r.wrap.b32 	%r6284, %r5937, %r5938, 8;
	mov.b64 	%rd8766, {%r6284, %r6283};
	xor.b64  	%rd8767, %rd8765, %rd8766;
	shr.u64 	%rd8768, %rd8217, 7;
	xor.b64  	%rd8769, %rd8767, %rd8768;
	add.s64 	%rd8770, %rd8769, %rd8180;
	add.s64 	%rd8771, %rd8770, %rd8513;
	add.s64 	%rd8772, %rd8771, %rd8764;
	add.s64 	%rd8773, %rd8772, %rd8637;
	xor.b64  	%rd8774, %rd8711, %rd8674;
	and.b64  	%rd8775, %rd8748, %rd8774;
	xor.b64  	%rd8776, %rd8775, %rd8674;
	add.s64 	%rd8777, %rd8773, %rd8776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6285,%dummy}, %rd8748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6286}, %rd8748;
	}
	shf.r.wrap.b32 	%r6287, %r6286, %r6285, 14;
	shf.r.wrap.b32 	%r6288, %r6285, %r6286, 14;
	mov.b64 	%rd8778, {%r6288, %r6287};
	shf.r.wrap.b32 	%r6289, %r6286, %r6285, 18;
	shf.r.wrap.b32 	%r6290, %r6285, %r6286, 18;
	mov.b64 	%rd8779, {%r6290, %r6289};
	xor.b64  	%rd8780, %rd8778, %rd8779;
	shf.l.wrap.b32 	%r6291, %r6285, %r6286, 23;
	shf.l.wrap.b32 	%r6292, %r6286, %r6285, 23;
	mov.b64 	%rd8781, {%r6292, %r6291};
	xor.b64  	%rd8782, %rd8780, %rd8781;
	add.s64 	%rd8783, %rd8777, %rd8782;
	add.s64 	%rd8784, %rd8783, 1242879168328830382;
	add.s64 	%rd8785, %rd8784, %rd8648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6293,%dummy}, %rd8759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6294}, %rd8759;
	}
	shf.r.wrap.b32 	%r6295, %r6294, %r6293, 28;
	shf.r.wrap.b32 	%r6296, %r6293, %r6294, 28;
	mov.b64 	%rd8786, {%r6296, %r6295};
	shf.l.wrap.b32 	%r6297, %r6293, %r6294, 30;
	shf.l.wrap.b32 	%r6298, %r6294, %r6293, 30;
	mov.b64 	%rd8787, {%r6298, %r6297};
	xor.b64  	%rd8788, %rd8786, %rd8787;
	shf.l.wrap.b32 	%r6299, %r6293, %r6294, 25;
	shf.l.wrap.b32 	%r6300, %r6294, %r6293, 25;
	mov.b64 	%rd8789, {%r6300, %r6299};
	xor.b64  	%rd8790, %rd8788, %rd8789;
	and.b64  	%rd8791, %rd8759, %rd8722;
	or.b64  	%rd8792, %rd8759, %rd8722;
	and.b64  	%rd8793, %rd8792, %rd8685;
	or.b64  	%rd8794, %rd8793, %rd8791;
	add.s64 	%rd8795, %rd8794, %rd8790;
	add.s64 	%rd8796, %rd8795, %rd8784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6301,%dummy}, %rd8735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6302}, %rd8735;
	}
	shf.r.wrap.b32 	%r6303, %r6302, %r6301, 19;
	shf.r.wrap.b32 	%r6304, %r6301, %r6302, 19;
	mov.b64 	%rd8797, {%r6304, %r6303};
	shf.l.wrap.b32 	%r6305, %r6301, %r6302, 3;
	shf.l.wrap.b32 	%r6306, %r6302, %r6301, 3;
	mov.b64 	%rd8798, {%r6306, %r6305};
	xor.b64  	%rd8799, %rd8797, %rd8798;
	shr.u64 	%rd8800, %rd8735, 6;
	xor.b64  	%rd8801, %rd8799, %rd8800;
	shf.r.wrap.b32 	%r6307, %r5964, %r5963, 1;
	shf.r.wrap.b32 	%r6308, %r5963, %r5964, 1;
	mov.b64 	%rd8802, {%r6308, %r6307};
	shf.r.wrap.b32 	%r6309, %r5964, %r5963, 8;
	shf.r.wrap.b32 	%r6310, %r5963, %r5964, 8;
	mov.b64 	%rd8803, {%r6310, %r6309};
	xor.b64  	%rd8804, %rd8802, %rd8803;
	shr.u64 	%rd8805, %rd8254, 7;
	xor.b64  	%rd8806, %rd8804, %rd8805;
	add.s64 	%rd8807, %rd8806, %rd8217;
	add.s64 	%rd8808, %rd8807, %rd8550;
	add.s64 	%rd8809, %rd8808, %rd8801;
	add.s64 	%rd8810, %rd8809, %rd8674;
	xor.b64  	%rd8811, %rd8748, %rd8711;
	and.b64  	%rd8812, %rd8785, %rd8811;
	xor.b64  	%rd8813, %rd8812, %rd8711;
	add.s64 	%rd8814, %rd8810, %rd8813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6311,%dummy}, %rd8785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6312}, %rd8785;
	}
	shf.r.wrap.b32 	%r6313, %r6312, %r6311, 14;
	shf.r.wrap.b32 	%r6314, %r6311, %r6312, 14;
	mov.b64 	%rd8815, {%r6314, %r6313};
	shf.r.wrap.b32 	%r6315, %r6312, %r6311, 18;
	shf.r.wrap.b32 	%r6316, %r6311, %r6312, 18;
	mov.b64 	%rd8816, {%r6316, %r6315};
	xor.b64  	%rd8817, %rd8815, %rd8816;
	shf.l.wrap.b32 	%r6317, %r6311, %r6312, 23;
	shf.l.wrap.b32 	%r6318, %r6312, %r6311, 23;
	mov.b64 	%rd8818, {%r6318, %r6317};
	xor.b64  	%rd8819, %rd8817, %rd8818;
	add.s64 	%rd8820, %rd8814, %rd8819;
	add.s64 	%rd8821, %rd8820, 1977374033974150939;
	add.s64 	%rd8822, %rd8821, %rd8685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6319,%dummy}, %rd8796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6320}, %rd8796;
	}
	shf.r.wrap.b32 	%r6321, %r6320, %r6319, 28;
	shf.r.wrap.b32 	%r6322, %r6319, %r6320, 28;
	mov.b64 	%rd8823, {%r6322, %r6321};
	shf.l.wrap.b32 	%r6323, %r6319, %r6320, 30;
	shf.l.wrap.b32 	%r6324, %r6320, %r6319, 30;
	mov.b64 	%rd8824, {%r6324, %r6323};
	xor.b64  	%rd8825, %rd8823, %rd8824;
	shf.l.wrap.b32 	%r6325, %r6319, %r6320, 25;
	shf.l.wrap.b32 	%r6326, %r6320, %r6319, 25;
	mov.b64 	%rd8826, {%r6326, %r6325};
	xor.b64  	%rd8827, %rd8825, %rd8826;
	and.b64  	%rd8828, %rd8796, %rd8759;
	or.b64  	%rd8829, %rd8796, %rd8759;
	and.b64  	%rd8830, %rd8829, %rd8722;
	or.b64  	%rd8831, %rd8830, %rd8828;
	add.s64 	%rd8832, %rd8831, %rd8827;
	add.s64 	%rd8833, %rd8832, %rd8821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6327,%dummy}, %rd8772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6328}, %rd8772;
	}
	shf.r.wrap.b32 	%r6329, %r6328, %r6327, 19;
	shf.r.wrap.b32 	%r6330, %r6327, %r6328, 19;
	mov.b64 	%rd8834, {%r6330, %r6329};
	shf.l.wrap.b32 	%r6331, %r6327, %r6328, 3;
	shf.l.wrap.b32 	%r6332, %r6328, %r6327, 3;
	mov.b64 	%rd8835, {%r6332, %r6331};
	xor.b64  	%rd8836, %rd8834, %rd8835;
	shr.u64 	%rd8837, %rd8772, 6;
	xor.b64  	%rd8838, %rd8836, %rd8837;
	shf.r.wrap.b32 	%r6333, %r5990, %r5989, 1;
	shf.r.wrap.b32 	%r6334, %r5989, %r5990, 1;
	mov.b64 	%rd8839, {%r6334, %r6333};
	shf.r.wrap.b32 	%r6335, %r5990, %r5989, 8;
	shf.r.wrap.b32 	%r6336, %r5989, %r5990, 8;
	mov.b64 	%rd8840, {%r6336, %r6335};
	xor.b64  	%rd8841, %rd8839, %rd8840;
	shr.u64 	%rd8842, %rd8291, 7;
	xor.b64  	%rd8843, %rd8841, %rd8842;
	add.s64 	%rd8844, %rd8843, %rd8254;
	add.s64 	%rd8845, %rd8844, %rd8587;
	add.s64 	%rd8846, %rd8845, %rd8838;
	add.s64 	%rd8847, %rd8846, %rd8711;
	xor.b64  	%rd8848, %rd8785, %rd8748;
	and.b64  	%rd8849, %rd8822, %rd8848;
	xor.b64  	%rd8850, %rd8849, %rd8748;
	add.s64 	%rd8851, %rd8847, %rd8850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6337,%dummy}, %rd8822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6338}, %rd8822;
	}
	shf.r.wrap.b32 	%r6339, %r6338, %r6337, 14;
	shf.r.wrap.b32 	%r6340, %r6337, %r6338, 14;
	mov.b64 	%rd8852, {%r6340, %r6339};
	shf.r.wrap.b32 	%r6341, %r6338, %r6337, 18;
	shf.r.wrap.b32 	%r6342, %r6337, %r6338, 18;
	mov.b64 	%rd8853, {%r6342, %r6341};
	xor.b64  	%rd8854, %rd8852, %rd8853;
	shf.l.wrap.b32 	%r6343, %r6337, %r6338, 23;
	shf.l.wrap.b32 	%r6344, %r6338, %r6337, 23;
	mov.b64 	%rd8855, {%r6344, %r6343};
	xor.b64  	%rd8856, %rd8854, %rd8855;
	add.s64 	%rd8857, %rd8851, %rd8856;
	add.s64 	%rd8858, %rd8857, 2944078676154940804;
	add.s64 	%rd8859, %rd8858, %rd8722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6345,%dummy}, %rd8833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6346}, %rd8833;
	}
	shf.r.wrap.b32 	%r6347, %r6346, %r6345, 28;
	shf.r.wrap.b32 	%r6348, %r6345, %r6346, 28;
	mov.b64 	%rd8860, {%r6348, %r6347};
	shf.l.wrap.b32 	%r6349, %r6345, %r6346, 30;
	shf.l.wrap.b32 	%r6350, %r6346, %r6345, 30;
	mov.b64 	%rd8861, {%r6350, %r6349};
	xor.b64  	%rd8862, %rd8860, %rd8861;
	shf.l.wrap.b32 	%r6351, %r6345, %r6346, 25;
	shf.l.wrap.b32 	%r6352, %r6346, %r6345, 25;
	mov.b64 	%rd8863, {%r6352, %r6351};
	xor.b64  	%rd8864, %rd8862, %rd8863;
	and.b64  	%rd8865, %rd8833, %rd8796;
	or.b64  	%rd8866, %rd8833, %rd8796;
	and.b64  	%rd8867, %rd8866, %rd8759;
	or.b64  	%rd8868, %rd8867, %rd8865;
	add.s64 	%rd8869, %rd8868, %rd8864;
	add.s64 	%rd8870, %rd8869, %rd8858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6353,%dummy}, %rd8809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6354}, %rd8809;
	}
	shf.r.wrap.b32 	%r6355, %r6354, %r6353, 19;
	shf.r.wrap.b32 	%r6356, %r6353, %r6354, 19;
	mov.b64 	%rd8871, {%r6356, %r6355};
	shf.l.wrap.b32 	%r6357, %r6353, %r6354, 3;
	shf.l.wrap.b32 	%r6358, %r6354, %r6353, 3;
	mov.b64 	%rd8872, {%r6358, %r6357};
	xor.b64  	%rd8873, %rd8871, %rd8872;
	shr.u64 	%rd8874, %rd8809, 6;
	xor.b64  	%rd8875, %rd8873, %rd8874;
	shf.r.wrap.b32 	%r6359, %r6016, %r6015, 1;
	shf.r.wrap.b32 	%r6360, %r6015, %r6016, 1;
	mov.b64 	%rd8876, {%r6360, %r6359};
	shf.r.wrap.b32 	%r6361, %r6016, %r6015, 8;
	shf.r.wrap.b32 	%r6362, %r6015, %r6016, 8;
	mov.b64 	%rd8877, {%r6362, %r6361};
	xor.b64  	%rd8878, %rd8876, %rd8877;
	shr.u64 	%rd8879, %rd8328, 7;
	xor.b64  	%rd8880, %rd8878, %rd8879;
	add.s64 	%rd8881, %rd8880, %rd8291;
	add.s64 	%rd8882, %rd8881, %rd8624;
	add.s64 	%rd8883, %rd8882, %rd8875;
	add.s64 	%rd8884, %rd8883, %rd8748;
	xor.b64  	%rd8885, %rd8822, %rd8785;
	and.b64  	%rd8886, %rd8859, %rd8885;
	xor.b64  	%rd8887, %rd8886, %rd8785;
	add.s64 	%rd8888, %rd8884, %rd8887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6363,%dummy}, %rd8859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6364}, %rd8859;
	}
	shf.r.wrap.b32 	%r6365, %r6364, %r6363, 14;
	shf.r.wrap.b32 	%r6366, %r6363, %r6364, 14;
	mov.b64 	%rd8889, {%r6366, %r6365};
	shf.r.wrap.b32 	%r6367, %r6364, %r6363, 18;
	shf.r.wrap.b32 	%r6368, %r6363, %r6364, 18;
	mov.b64 	%rd8890, {%r6368, %r6367};
	xor.b64  	%rd8891, %rd8889, %rd8890;
	shf.l.wrap.b32 	%r6369, %r6363, %r6364, 23;
	shf.l.wrap.b32 	%r6370, %r6364, %r6363, 23;
	mov.b64 	%rd8892, {%r6370, %r6369};
	xor.b64  	%rd8893, %rd8891, %rd8892;
	add.s64 	%rd8894, %rd8888, %rd8893;
	add.s64 	%rd8895, %rd8894, 3659926193048069267;
	add.s64 	%rd8896, %rd8895, %rd8759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6371,%dummy}, %rd8870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6372}, %rd8870;
	}
	shf.r.wrap.b32 	%r6373, %r6372, %r6371, 28;
	shf.r.wrap.b32 	%r6374, %r6371, %r6372, 28;
	mov.b64 	%rd8897, {%r6374, %r6373};
	shf.l.wrap.b32 	%r6375, %r6371, %r6372, 30;
	shf.l.wrap.b32 	%r6376, %r6372, %r6371, 30;
	mov.b64 	%rd8898, {%r6376, %r6375};
	xor.b64  	%rd8899, %rd8897, %rd8898;
	shf.l.wrap.b32 	%r6377, %r6371, %r6372, 25;
	shf.l.wrap.b32 	%r6378, %r6372, %r6371, 25;
	mov.b64 	%rd8900, {%r6378, %r6377};
	xor.b64  	%rd8901, %rd8899, %rd8900;
	and.b64  	%rd8902, %rd8870, %rd8833;
	or.b64  	%rd8903, %rd8870, %rd8833;
	and.b64  	%rd8904, %rd8903, %rd8796;
	or.b64  	%rd8905, %rd8904, %rd8902;
	add.s64 	%rd8906, %rd8905, %rd8901;
	add.s64 	%rd8907, %rd8906, %rd8895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6379,%dummy}, %rd8846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6380}, %rd8846;
	}
	shf.r.wrap.b32 	%r6381, %r6380, %r6379, 19;
	shf.r.wrap.b32 	%r6382, %r6379, %r6380, 19;
	mov.b64 	%rd8908, {%r6382, %r6381};
	shf.l.wrap.b32 	%r6383, %r6379, %r6380, 3;
	shf.l.wrap.b32 	%r6384, %r6380, %r6379, 3;
	mov.b64 	%rd8909, {%r6384, %r6383};
	xor.b64  	%rd8910, %rd8908, %rd8909;
	shr.u64 	%rd8911, %rd8846, 6;
	xor.b64  	%rd8912, %rd8910, %rd8911;
	shf.r.wrap.b32 	%r6385, %r6042, %r6041, 1;
	shf.r.wrap.b32 	%r6386, %r6041, %r6042, 1;
	mov.b64 	%rd8913, {%r6386, %r6385};
	shf.r.wrap.b32 	%r6387, %r6042, %r6041, 8;
	shf.r.wrap.b32 	%r6388, %r6041, %r6042, 8;
	mov.b64 	%rd8914, {%r6388, %r6387};
	xor.b64  	%rd8915, %rd8913, %rd8914;
	shr.u64 	%rd8916, %rd8365, 7;
	xor.b64  	%rd8917, %rd8915, %rd8916;
	add.s64 	%rd8918, %rd8917, %rd8328;
	add.s64 	%rd8919, %rd8918, %rd8661;
	add.s64 	%rd8920, %rd8919, %rd8912;
	add.s64 	%rd8921, %rd8920, %rd8785;
	xor.b64  	%rd8922, %rd8859, %rd8822;
	and.b64  	%rd8923, %rd8896, %rd8922;
	xor.b64  	%rd8924, %rd8923, %rd8822;
	add.s64 	%rd8925, %rd8921, %rd8924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6389,%dummy}, %rd8896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6390}, %rd8896;
	}
	shf.r.wrap.b32 	%r6391, %r6390, %r6389, 14;
	shf.r.wrap.b32 	%r6392, %r6389, %r6390, 14;
	mov.b64 	%rd8926, {%r6392, %r6391};
	shf.r.wrap.b32 	%r6393, %r6390, %r6389, 18;
	shf.r.wrap.b32 	%r6394, %r6389, %r6390, 18;
	mov.b64 	%rd8927, {%r6394, %r6393};
	xor.b64  	%rd8928, %rd8926, %rd8927;
	shf.l.wrap.b32 	%r6395, %r6389, %r6390, 23;
	shf.l.wrap.b32 	%r6396, %r6390, %r6389, 23;
	mov.b64 	%rd8929, {%r6396, %r6395};
	xor.b64  	%rd8930, %rd8928, %rd8929;
	add.s64 	%rd8931, %rd8925, %rd8930;
	add.s64 	%rd8932, %rd8931, 4368137639120453308;
	add.s64 	%rd8933, %rd8932, %rd8796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6397,%dummy}, %rd8907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6398}, %rd8907;
	}
	shf.r.wrap.b32 	%r6399, %r6398, %r6397, 28;
	shf.r.wrap.b32 	%r6400, %r6397, %r6398, 28;
	mov.b64 	%rd8934, {%r6400, %r6399};
	shf.l.wrap.b32 	%r6401, %r6397, %r6398, 30;
	shf.l.wrap.b32 	%r6402, %r6398, %r6397, 30;
	mov.b64 	%rd8935, {%r6402, %r6401};
	xor.b64  	%rd8936, %rd8934, %rd8935;
	shf.l.wrap.b32 	%r6403, %r6397, %r6398, 25;
	shf.l.wrap.b32 	%r6404, %r6398, %r6397, 25;
	mov.b64 	%rd8937, {%r6404, %r6403};
	xor.b64  	%rd8938, %rd8936, %rd8937;
	and.b64  	%rd8939, %rd8907, %rd8870;
	or.b64  	%rd8940, %rd8907, %rd8870;
	and.b64  	%rd8941, %rd8940, %rd8833;
	or.b64  	%rd8942, %rd8941, %rd8939;
	add.s64 	%rd8943, %rd8942, %rd8938;
	add.s64 	%rd8944, %rd8943, %rd8932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6405,%dummy}, %rd8883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6406}, %rd8883;
	}
	shf.r.wrap.b32 	%r6407, %r6406, %r6405, 19;
	shf.r.wrap.b32 	%r6408, %r6405, %r6406, 19;
	mov.b64 	%rd8945, {%r6408, %r6407};
	shf.l.wrap.b32 	%r6409, %r6405, %r6406, 3;
	shf.l.wrap.b32 	%r6410, %r6406, %r6405, 3;
	mov.b64 	%rd8946, {%r6410, %r6409};
	xor.b64  	%rd8947, %rd8945, %rd8946;
	shr.u64 	%rd8948, %rd8883, 6;
	xor.b64  	%rd8949, %rd8947, %rd8948;
	shf.r.wrap.b32 	%r6411, %r6068, %r6067, 1;
	shf.r.wrap.b32 	%r6412, %r6067, %r6068, 1;
	mov.b64 	%rd8950, {%r6412, %r6411};
	shf.r.wrap.b32 	%r6413, %r6068, %r6067, 8;
	shf.r.wrap.b32 	%r6414, %r6067, %r6068, 8;
	mov.b64 	%rd8951, {%r6414, %r6413};
	xor.b64  	%rd8952, %rd8950, %rd8951;
	shr.u64 	%rd8953, %rd8402, 7;
	xor.b64  	%rd8954, %rd8952, %rd8953;
	add.s64 	%rd8955, %rd8954, %rd8365;
	add.s64 	%rd8956, %rd8955, %rd8698;
	add.s64 	%rd8957, %rd8956, %rd8949;
	add.s64 	%rd8958, %rd8957, %rd8822;
	xor.b64  	%rd8959, %rd8896, %rd8859;
	and.b64  	%rd8960, %rd8933, %rd8959;
	xor.b64  	%rd8961, %rd8960, %rd8859;
	add.s64 	%rd8962, %rd8958, %rd8961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6415,%dummy}, %rd8933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6416}, %rd8933;
	}
	shf.r.wrap.b32 	%r6417, %r6416, %r6415, 14;
	shf.r.wrap.b32 	%r6418, %r6415, %r6416, 14;
	mov.b64 	%rd8963, {%r6418, %r6417};
	shf.r.wrap.b32 	%r6419, %r6416, %r6415, 18;
	shf.r.wrap.b32 	%r6420, %r6415, %r6416, 18;
	mov.b64 	%rd8964, {%r6420, %r6419};
	xor.b64  	%rd8965, %rd8963, %rd8964;
	shf.l.wrap.b32 	%r6421, %r6415, %r6416, 23;
	shf.l.wrap.b32 	%r6422, %r6416, %r6415, 23;
	mov.b64 	%rd8966, {%r6422, %r6421};
	xor.b64  	%rd8967, %rd8965, %rd8966;
	add.s64 	%rd8968, %rd8962, %rd8967;
	add.s64 	%rd8969, %rd8968, 4836135668995329356;
	add.s64 	%rd8970, %rd8969, %rd8833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6423,%dummy}, %rd8944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6424}, %rd8944;
	}
	shf.r.wrap.b32 	%r6425, %r6424, %r6423, 28;
	shf.r.wrap.b32 	%r6426, %r6423, %r6424, 28;
	mov.b64 	%rd8971, {%r6426, %r6425};
	shf.l.wrap.b32 	%r6427, %r6423, %r6424, 30;
	shf.l.wrap.b32 	%r6428, %r6424, %r6423, 30;
	mov.b64 	%rd8972, {%r6428, %r6427};
	xor.b64  	%rd8973, %rd8971, %rd8972;
	shf.l.wrap.b32 	%r6429, %r6423, %r6424, 25;
	shf.l.wrap.b32 	%r6430, %r6424, %r6423, 25;
	mov.b64 	%rd8974, {%r6430, %r6429};
	xor.b64  	%rd8975, %rd8973, %rd8974;
	and.b64  	%rd8976, %rd8944, %rd8907;
	or.b64  	%rd8977, %rd8944, %rd8907;
	and.b64  	%rd8978, %rd8977, %rd8870;
	or.b64  	%rd8979, %rd8978, %rd8976;
	add.s64 	%rd8980, %rd8979, %rd8975;
	add.s64 	%rd8981, %rd8980, %rd8969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6431,%dummy}, %rd8920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6432}, %rd8920;
	}
	shf.r.wrap.b32 	%r6433, %r6432, %r6431, 19;
	shf.r.wrap.b32 	%r6434, %r6431, %r6432, 19;
	mov.b64 	%rd8982, {%r6434, %r6433};
	shf.l.wrap.b32 	%r6435, %r6431, %r6432, 3;
	shf.l.wrap.b32 	%r6436, %r6432, %r6431, 3;
	mov.b64 	%rd8983, {%r6436, %r6435};
	xor.b64  	%rd8984, %rd8982, %rd8983;
	shr.u64 	%rd8985, %rd8920, 6;
	xor.b64  	%rd8986, %rd8984, %rd8985;
	shf.r.wrap.b32 	%r6437, %r6094, %r6093, 1;
	shf.r.wrap.b32 	%r6438, %r6093, %r6094, 1;
	mov.b64 	%rd8987, {%r6438, %r6437};
	shf.r.wrap.b32 	%r6439, %r6094, %r6093, 8;
	shf.r.wrap.b32 	%r6440, %r6093, %r6094, 8;
	mov.b64 	%rd8988, {%r6440, %r6439};
	xor.b64  	%rd8989, %rd8987, %rd8988;
	shr.u64 	%rd8990, %rd8439, 7;
	xor.b64  	%rd8991, %rd8989, %rd8990;
	add.s64 	%rd8992, %rd8991, %rd8402;
	add.s64 	%rd8993, %rd8992, %rd8735;
	add.s64 	%rd8994, %rd8993, %rd8986;
	add.s64 	%rd8995, %rd8994, %rd8859;
	xor.b64  	%rd8996, %rd8933, %rd8896;
	and.b64  	%rd8997, %rd8970, %rd8996;
	xor.b64  	%rd8998, %rd8997, %rd8896;
	add.s64 	%rd8999, %rd8995, %rd8998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6441,%dummy}, %rd8970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6442}, %rd8970;
	}
	shf.r.wrap.b32 	%r6443, %r6442, %r6441, 14;
	shf.r.wrap.b32 	%r6444, %r6441, %r6442, 14;
	mov.b64 	%rd9000, {%r6444, %r6443};
	shf.r.wrap.b32 	%r6445, %r6442, %r6441, 18;
	shf.r.wrap.b32 	%r6446, %r6441, %r6442, 18;
	mov.b64 	%rd9001, {%r6446, %r6445};
	xor.b64  	%rd9002, %rd9000, %rd9001;
	shf.l.wrap.b32 	%r6447, %r6441, %r6442, 23;
	shf.l.wrap.b32 	%r6448, %r6442, %r6441, 23;
	mov.b64 	%rd9003, {%r6448, %r6447};
	xor.b64  	%rd9004, %rd9002, %rd9003;
	add.s64 	%rd9005, %rd8999, %rd9004;
	add.s64 	%rd9006, %rd9005, 5532061633213252278;
	add.s64 	%rd9007, %rd9006, %rd8870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6449,%dummy}, %rd8981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6450}, %rd8981;
	}
	shf.r.wrap.b32 	%r6451, %r6450, %r6449, 28;
	shf.r.wrap.b32 	%r6452, %r6449, %r6450, 28;
	mov.b64 	%rd9008, {%r6452, %r6451};
	shf.l.wrap.b32 	%r6453, %r6449, %r6450, 30;
	shf.l.wrap.b32 	%r6454, %r6450, %r6449, 30;
	mov.b64 	%rd9009, {%r6454, %r6453};
	xor.b64  	%rd9010, %rd9008, %rd9009;
	shf.l.wrap.b32 	%r6455, %r6449, %r6450, 25;
	shf.l.wrap.b32 	%r6456, %r6450, %r6449, 25;
	mov.b64 	%rd9011, {%r6456, %r6455};
	xor.b64  	%rd9012, %rd9010, %rd9011;
	and.b64  	%rd9013, %rd8981, %rd8944;
	or.b64  	%rd9014, %rd8981, %rd8944;
	and.b64  	%rd9015, %rd9014, %rd8907;
	or.b64  	%rd9016, %rd9015, %rd9013;
	add.s64 	%rd9017, %rd9016, %rd9012;
	add.s64 	%rd9018, %rd9017, %rd9006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6457,%dummy}, %rd8957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6458}, %rd8957;
	}
	shf.r.wrap.b32 	%r6459, %r6458, %r6457, 19;
	shf.r.wrap.b32 	%r6460, %r6457, %r6458, 19;
	mov.b64 	%rd9019, {%r6460, %r6459};
	shf.l.wrap.b32 	%r6461, %r6457, %r6458, 3;
	shf.l.wrap.b32 	%r6462, %r6458, %r6457, 3;
	mov.b64 	%rd9020, {%r6462, %r6461};
	xor.b64  	%rd9021, %rd9019, %rd9020;
	shr.u64 	%rd9022, %rd8957, 6;
	xor.b64  	%rd9023, %rd9021, %rd9022;
	shf.r.wrap.b32 	%r6463, %r6120, %r6119, 1;
	shf.r.wrap.b32 	%r6464, %r6119, %r6120, 1;
	mov.b64 	%rd9024, {%r6464, %r6463};
	shf.r.wrap.b32 	%r6465, %r6120, %r6119, 8;
	shf.r.wrap.b32 	%r6466, %r6119, %r6120, 8;
	mov.b64 	%rd9025, {%r6466, %r6465};
	xor.b64  	%rd9026, %rd9024, %rd9025;
	shr.u64 	%rd9027, %rd8476, 7;
	xor.b64  	%rd9028, %rd9026, %rd9027;
	add.s64 	%rd9029, %rd9028, %rd8439;
	add.s64 	%rd9030, %rd9029, %rd8772;
	add.s64 	%rd9031, %rd9030, %rd9023;
	add.s64 	%rd9032, %rd9031, %rd8896;
	xor.b64  	%rd9033, %rd8970, %rd8933;
	and.b64  	%rd9034, %rd9007, %rd9033;
	xor.b64  	%rd9035, %rd9034, %rd8933;
	add.s64 	%rd9036, %rd9032, %rd9035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd9007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd9007;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 14;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 14;
	mov.b64 	%rd9037, {%r6470, %r6469};
	shf.r.wrap.b32 	%r6471, %r6468, %r6467, 18;
	shf.r.wrap.b32 	%r6472, %r6467, %r6468, 18;
	mov.b64 	%rd9038, {%r6472, %r6471};
	xor.b64  	%rd9039, %rd9037, %rd9038;
	shf.l.wrap.b32 	%r6473, %r6467, %r6468, 23;
	shf.l.wrap.b32 	%r6474, %r6468, %r6467, 23;
	mov.b64 	%rd9040, {%r6474, %r6473};
	xor.b64  	%rd9041, %rd9039, %rd9040;
	add.s64 	%rd9042, %rd9036, %rd9041;
	add.s64 	%rd9043, %rd9042, 6448918945643986474;
	add.s64 	%rd9044, %rd9043, %rd8907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6475,%dummy}, %rd9018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6476}, %rd9018;
	}
	shf.r.wrap.b32 	%r6477, %r6476, %r6475, 28;
	shf.r.wrap.b32 	%r6478, %r6475, %r6476, 28;
	mov.b64 	%rd9045, {%r6478, %r6477};
	shf.l.wrap.b32 	%r6479, %r6475, %r6476, 30;
	shf.l.wrap.b32 	%r6480, %r6476, %r6475, 30;
	mov.b64 	%rd9046, {%r6480, %r6479};
	xor.b64  	%rd9047, %rd9045, %rd9046;
	shf.l.wrap.b32 	%r6481, %r6475, %r6476, 25;
	shf.l.wrap.b32 	%r6482, %r6476, %r6475, 25;
	mov.b64 	%rd9048, {%r6482, %r6481};
	xor.b64  	%rd9049, %rd9047, %rd9048;
	and.b64  	%rd9050, %rd9018, %rd8981;
	or.b64  	%rd9051, %rd9018, %rd8981;
	and.b64  	%rd9052, %rd9051, %rd8944;
	or.b64  	%rd9053, %rd9052, %rd9050;
	add.s64 	%rd9054, %rd9053, %rd9049;
	add.s64 	%rd9055, %rd9054, %rd9043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6483,%dummy}, %rd8994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6484}, %rd8994;
	}
	shf.r.wrap.b32 	%r6485, %r6484, %r6483, 19;
	shf.r.wrap.b32 	%r6486, %r6483, %r6484, 19;
	mov.b64 	%rd9056, {%r6486, %r6485};
	shf.l.wrap.b32 	%r6487, %r6483, %r6484, 3;
	shf.l.wrap.b32 	%r6488, %r6484, %r6483, 3;
	mov.b64 	%rd9057, {%r6488, %r6487};
	xor.b64  	%rd9058, %rd9056, %rd9057;
	shr.u64 	%rd9059, %rd8994, 6;
	xor.b64  	%rd9060, %rd9058, %rd9059;
	shf.r.wrap.b32 	%r6489, %r6146, %r6145, 1;
	shf.r.wrap.b32 	%r6490, %r6145, %r6146, 1;
	mov.b64 	%rd9061, {%r6490, %r6489};
	shf.r.wrap.b32 	%r6491, %r6146, %r6145, 8;
	shf.r.wrap.b32 	%r6492, %r6145, %r6146, 8;
	mov.b64 	%rd9062, {%r6492, %r6491};
	xor.b64  	%rd9063, %rd9061, %rd9062;
	shr.u64 	%rd9064, %rd8513, 7;
	xor.b64  	%rd9065, %rd9063, %rd9064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6493,%dummy}, %rd9044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6494}, %rd9044;
	}
	shf.r.wrap.b32 	%r6495, %r6494, %r6493, 14;
	shf.r.wrap.b32 	%r6496, %r6493, %r6494, 14;
	mov.b64 	%rd9066, {%r6496, %r6495};
	shf.r.wrap.b32 	%r6497, %r6494, %r6493, 18;
	shf.r.wrap.b32 	%r6498, %r6493, %r6494, 18;
	mov.b64 	%rd9067, {%r6498, %r6497};
	xor.b64  	%rd9068, %rd9066, %rd9067;
	shf.l.wrap.b32 	%r6499, %r6493, %r6494, 23;
	shf.l.wrap.b32 	%r6500, %r6494, %r6493, 23;
	mov.b64 	%rd9069, {%r6500, %r6499};
	xor.b64  	%rd9070, %rd9068, %rd9069;
	xor.b64  	%rd9071, %rd9007, %rd8970;
	and.b64  	%rd9072, %rd9044, %rd9071;
	xor.b64  	%rd9073, %rd9072, %rd8970;
	add.s64 	%rd9074, %rd8476, %rd9065;
	add.s64 	%rd9075, %rd9074, %rd8809;
	add.s64 	%rd9076, %rd9075, %rd9060;
	add.s64 	%rd9077, %rd9076, %rd8933;
	add.s64 	%rd9078, %rd9077, %rd9073;
	add.s64 	%rd9079, %rd9078, %rd9070;
	add.s64 	%rd9080, %rd9079, 6902733635092675308;
	add.s64 	%rd9081, %rd9080, %rd8944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6501,%dummy}, %rd9055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6502}, %rd9055;
	}
	shf.r.wrap.b32 	%r6503, %r6502, %r6501, 28;
	shf.r.wrap.b32 	%r6504, %r6501, %r6502, 28;
	mov.b64 	%rd9082, {%r6504, %r6503};
	shf.l.wrap.b32 	%r6505, %r6501, %r6502, 30;
	shf.l.wrap.b32 	%r6506, %r6502, %r6501, 30;
	mov.b64 	%rd9083, {%r6506, %r6505};
	xor.b64  	%rd9084, %rd9082, %rd9083;
	shf.l.wrap.b32 	%r6507, %r6501, %r6502, 25;
	shf.l.wrap.b32 	%r6508, %r6502, %r6501, 25;
	mov.b64 	%rd9085, {%r6508, %r6507};
	xor.b64  	%rd9086, %rd9084, %rd9085;
	and.b64  	%rd9087, %rd9055, %rd9018;
	or.b64  	%rd9088, %rd9055, %rd9018;
	and.b64  	%rd9089, %rd9088, %rd8981;
	or.b64  	%rd9090, %rd9089, %rd9087;
	add.s64 	%rd9091, %rd9090, %rd9086;
	add.s64 	%rd9092, %rd9091, %rd9080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6509,%dummy}, %rd9031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6510}, %rd9031;
	}
	shf.r.wrap.b32 	%r6511, %r6510, %r6509, 19;
	shf.r.wrap.b32 	%r6512, %r6509, %r6510, 19;
	mov.b64 	%rd9093, {%r6512, %r6511};
	shf.l.wrap.b32 	%r6513, %r6509, %r6510, 3;
	shf.l.wrap.b32 	%r6514, %r6510, %r6509, 3;
	mov.b64 	%rd9094, {%r6514, %r6513};
	xor.b64  	%rd9095, %rd9093, %rd9094;
	shr.u64 	%rd9096, %rd9031, 6;
	xor.b64  	%rd9097, %rd9095, %rd9096;
	shf.r.wrap.b32 	%r6515, %r6172, %r6171, 1;
	shf.r.wrap.b32 	%r6516, %r6171, %r6172, 1;
	mov.b64 	%rd9098, {%r6516, %r6515};
	shf.r.wrap.b32 	%r6517, %r6172, %r6171, 8;
	shf.r.wrap.b32 	%r6518, %r6171, %r6172, 8;
	mov.b64 	%rd9099, {%r6518, %r6517};
	xor.b64  	%rd9100, %rd9098, %rd9099;
	shr.u64 	%rd9101, %rd8550, 7;
	xor.b64  	%rd9102, %rd9100, %rd9101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6519,%dummy}, %rd9081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6520}, %rd9081;
	}
	shf.r.wrap.b32 	%r6521, %r6520, %r6519, 14;
	shf.r.wrap.b32 	%r6522, %r6519, %r6520, 14;
	mov.b64 	%rd9103, {%r6522, %r6521};
	shf.r.wrap.b32 	%r6523, %r6520, %r6519, 18;
	shf.r.wrap.b32 	%r6524, %r6519, %r6520, 18;
	mov.b64 	%rd9104, {%r6524, %r6523};
	xor.b64  	%rd9105, %rd9103, %rd9104;
	shf.l.wrap.b32 	%r6525, %r6519, %r6520, 23;
	shf.l.wrap.b32 	%r6526, %r6520, %r6519, 23;
	mov.b64 	%rd9106, {%r6526, %r6525};
	xor.b64  	%rd9107, %rd9105, %rd9106;
	xor.b64  	%rd9108, %rd9044, %rd9007;
	and.b64  	%rd9109, %rd9081, %rd9108;
	xor.b64  	%rd9110, %rd9109, %rd9007;
	add.s64 	%rd9111, %rd8513, %rd9102;
	add.s64 	%rd9112, %rd9111, %rd8846;
	add.s64 	%rd9113, %rd9112, %rd9097;
	add.s64 	%rd9114, %rd9113, %rd8970;
	add.s64 	%rd9115, %rd9114, %rd9110;
	add.s64 	%rd9116, %rd9115, %rd9107;
	add.s64 	%rd9117, %rd9116, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6527,%dummy}, %rd9092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6528}, %rd9092;
	}
	shf.r.wrap.b32 	%r6529, %r6528, %r6527, 28;
	shf.r.wrap.b32 	%r6530, %r6527, %r6528, 28;
	mov.b64 	%rd9118, {%r6530, %r6529};
	shf.l.wrap.b32 	%r6531, %r6527, %r6528, 30;
	shf.l.wrap.b32 	%r6532, %r6528, %r6527, 30;
	mov.b64 	%rd9119, {%r6532, %r6531};
	xor.b64  	%rd9120, %rd9118, %rd9119;
	shf.l.wrap.b32 	%r6533, %r6527, %r6528, 25;
	shf.l.wrap.b32 	%r6534, %r6528, %r6527, 25;
	mov.b64 	%rd9121, {%r6534, %r6533};
	xor.b64  	%rd9122, %rd9120, %rd9121;
	and.b64  	%rd9123, %rd9092, %rd9055;
	or.b64  	%rd9124, %rd9092, %rd9055;
	and.b64  	%rd9125, %rd9124, %rd9018;
	or.b64  	%rd9126, %rd9125, %rd9123;
	add.s64 	%rd9127, %rd9122, %rd6388;
	add.s64 	%rd9128, %rd9127, %rd9126;
	add.s64 	%rd9129, %rd9128, %rd9117;
	st.local.u64 	[%rd7], %rd9129;
	add.s64 	%rd9130, %rd9092, %rd6394;
	st.local.u64 	[%rd7+8], %rd9130;
	add.s64 	%rd9131, %rd9055, %rd6397;
	st.local.u64 	[%rd7+16], %rd9131;
	add.s64 	%rd9132, %rd9018, %rd6386;
	st.local.u64 	[%rd7+24], %rd9132;
	add.s64 	%rd9133, %rd8981, %rd6372;
	add.s64 	%rd9134, %rd9133, %rd9117;
	st.local.u64 	[%rd7+32], %rd9134;
	add.s64 	%rd9135, %rd9081, %rd6380;
	st.local.u64 	[%rd7+40], %rd9135;
	add.s64 	%rd9136, %rd9044, %rd6379;
	st.local.u64 	[%rd7+48], %rd9136;
	add.s64 	%rd9137, %rd9007, %rd6370;
	st.local.u64 	[%rd7+56], %rd9137;
	add.s64 	%rd9308, %rd9308, 128;
	add.s64 	%rd9290, %rd9290, 128;
	add.s32 	%r10281, %r10281, -128;
	setp.gt.u32 	%p16, %r10281, 127;
	@%p16 bra 	$L__BB3_19;

$L__BB3_23:
	setp.eq.s32 	%p17, %r10281, 0;
	@%p17 bra 	$L__BB3_29;

	add.u64 	%rd9247, %SPL, 144;
	cvt.u64.u32 	%rd9138, %r10278;
	add.s64 	%rd9139, %rd9247, %rd9138;
	add.s64 	%rd9313, %rd9139, 72;
	and.b32  	%r10283, %r10281, 3;
	setp.eq.s32 	%p18, %r10283, 0;
	mov.u32 	%r10284, %r10281;
	@%p18 bra 	$L__BB3_27;

	mov.u64 	%rd9309, %rd9313;
	mov.u64 	%rd9310, %rd9308;
	mov.u32 	%r10284, %r10281;

$L__BB3_26:
	.pragma "nounroll";
	add.s32 	%r10284, %r10284, -1;
	add.s64 	%rd9308, %rd9310, 1;
	ld.local.u8 	%rs157, [%rd9310];
	add.s64 	%rd9313, %rd9309, 1;
	st.local.u8 	[%rd9309], %rs157;
	add.s32 	%r10283, %r10283, -1;
	setp.ne.s32 	%p19, %r10283, 0;
	mov.u64 	%rd9309, %rd9313;
	mov.u64 	%rd9310, %rd9308;
	@%p19 bra 	$L__BB3_26;

$L__BB3_27:
	add.s32 	%r6535, %r10281, -1;
	setp.lt.u32 	%p20, %r6535, 3;
	@%p20 bra 	$L__BB3_29;

$L__BB3_28:
	ld.local.u8 	%rs158, [%rd9308];
	st.local.u8 	[%rd9313], %rs158;
	ld.local.u8 	%rs159, [%rd9308+1];
	st.local.u8 	[%rd9313+1], %rs159;
	ld.local.u8 	%rs160, [%rd9308+2];
	st.local.u8 	[%rd9313+2], %rs160;
	add.s64 	%rd169, %rd9308, 4;
	ld.local.u8 	%rs161, [%rd9308+3];
	add.s64 	%rd170, %rd9313, 4;
	st.local.u8 	[%rd9313+3], %rs161;
	add.s32 	%r10284, %r10284, -4;
	setp.ne.s32 	%p21, %r10284, 0;
	mov.u64 	%rd9313, %rd170;
	mov.u64 	%rd9308, %rd169;
	@%p21 bra 	$L__BB3_28;

$L__BB3_29:
	ld.local.u64 	%rd9140, [%rd7];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6536, %temp}, %rd9140;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6537}, %rd9140;
	}
	mov.u32 	%r6538, 291;
	mov.u32 	%r6539, 0;
	prmt.b32 	%r6540, %r6536, %r6539, %r6538;
	prmt.b32 	%r6541, %r6537, %r6539, %r6538;
	mov.b64 	%rd9141, {%r6541, %r6540};
	ld.local.u64 	%rd9142, [%rd7+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6542, %temp}, %rd9142;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6543}, %rd9142;
	}
	prmt.b32 	%r6544, %r6542, %r6539, %r6538;
	prmt.b32 	%r6545, %r6543, %r6539, %r6538;
	mov.b64 	%rd9143, {%r6545, %r6544};
	ld.local.u64 	%rd9144, [%rd7+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6546, %temp}, %rd9144;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6547}, %rd9144;
	}
	prmt.b32 	%r6548, %r6546, %r6539, %r6538;
	prmt.b32 	%r6549, %r6547, %r6539, %r6538;
	mov.b64 	%rd9145, {%r6549, %r6548};
	ld.local.u64 	%rd9146, [%rd7+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6550, %temp}, %rd9146;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6551}, %rd9146;
	}
	prmt.b32 	%r6552, %r6550, %r6539, %r6538;
	prmt.b32 	%r6553, %r6551, %r6539, %r6538;
	mov.b64 	%rd9147, {%r6553, %r6552};
	ld.local.u64 	%rd9148, [%rd7+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6554, %temp}, %rd9148;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6555}, %rd9148;
	}
	prmt.b32 	%r6556, %r6554, %r6539, %r6538;
	prmt.b32 	%r6557, %r6555, %r6539, %r6538;
	mov.b64 	%rd9149, {%r6557, %r6556};
	ld.local.u64 	%rd9150, [%rd7+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6558, %temp}, %rd9150;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6559}, %rd9150;
	}
	prmt.b32 	%r6560, %r6558, %r6539, %r6538;
	prmt.b32 	%r6561, %r6559, %r6539, %r6538;
	mov.b64 	%rd9151, {%r6561, %r6560};
	ld.local.u64 	%rd9152, [%rd7+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6562, %temp}, %rd9152;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6563}, %rd9152;
	}
	prmt.b32 	%r6564, %r6562, %r6539, %r6538;
	prmt.b32 	%r6565, %r6563, %r6539, %r6538;
	mov.b64 	%rd9153, {%r6565, %r6564};
	ld.local.u64 	%rd9154, [%rd7+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6566, %temp}, %rd9154;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6567}, %rd9154;
	}
	prmt.b32 	%r6568, %r6566, %r6539, %r6538;
	prmt.b32 	%r6569, %r6567, %r6539, %r6538;
	mov.b64 	%rd9155, {%r6569, %r6568};
	shr.u64 	%rd9156, %rd9141, 8;
	shr.u64 	%rd9157, %rd9141, 16;
	shr.u64 	%rd9158, %rd9141, 24;
	cvt.u16.u64 	%rs162, %rd9141;
	cvt.u16.u64 	%rs163, %rd9158;
	cvt.u16.u64 	%rs164, %rd9157;
	cvt.u16.u64 	%rs165, %rd9156;
	st.global.v4.u8 	[%rd6], {%rs162, %rs165, %rs164, %rs163};
	shr.u64 	%rd9159, %rd9141, 32;
	shr.u64 	%rd9160, %rd9141, 40;
	shr.u64 	%rd9161, %rd9141, 48;
	shr.u64 	%rd9162, %rd9141, 56;
	cvt.u16.u64 	%rs166, %rd9162;
	cvt.u16.u64 	%rs167, %rd9161;
	cvt.u16.u64 	%rs168, %rd9160;
	cvt.u16.u64 	%rs169, %rd9159;
	st.global.v4.u8 	[%rd6+4], {%rs169, %rs168, %rs167, %rs166};
	shr.u64 	%rd9163, %rd9143, 8;
	shr.u64 	%rd9164, %rd9143, 16;
	shr.u64 	%rd9165, %rd9143, 24;
	cvt.u16.u64 	%rs170, %rd9143;
	cvt.u16.u64 	%rs171, %rd9165;
	cvt.u16.u64 	%rs172, %rd9164;
	cvt.u16.u64 	%rs173, %rd9163;
	st.global.v4.u8 	[%rd6+8], {%rs170, %rs173, %rs172, %rs171};
	shr.u64 	%rd9166, %rd9143, 32;
	shr.u64 	%rd9167, %rd9143, 40;
	shr.u64 	%rd9168, %rd9143, 48;
	shr.u64 	%rd9169, %rd9143, 56;
	cvt.u16.u64 	%rs174, %rd9169;
	cvt.u16.u64 	%rs175, %rd9168;
	cvt.u16.u64 	%rs176, %rd9167;
	cvt.u16.u64 	%rs177, %rd9166;
	st.global.v4.u8 	[%rd6+12], {%rs177, %rs176, %rs175, %rs174};
	shr.u64 	%rd9170, %rd9145, 8;
	shr.u64 	%rd9171, %rd9145, 16;
	shr.u64 	%rd9172, %rd9145, 24;
	cvt.u16.u64 	%rs178, %rd9145;
	cvt.u16.u64 	%rs179, %rd9172;
	cvt.u16.u64 	%rs180, %rd9171;
	cvt.u16.u64 	%rs181, %rd9170;
	st.global.v4.u8 	[%rd6+16], {%rs178, %rs181, %rs180, %rs179};
	shr.u64 	%rd9173, %rd9145, 32;
	shr.u64 	%rd9174, %rd9145, 40;
	shr.u64 	%rd9175, %rd9145, 48;
	shr.u64 	%rd9176, %rd9145, 56;
	cvt.u16.u64 	%rs182, %rd9176;
	cvt.u16.u64 	%rs183, %rd9175;
	cvt.u16.u64 	%rs184, %rd9174;
	cvt.u16.u64 	%rs185, %rd9173;
	st.global.v4.u8 	[%rd6+20], {%rs185, %rs184, %rs183, %rs182};
	shr.u64 	%rd9177, %rd9147, 8;
	shr.u64 	%rd9178, %rd9147, 16;
	shr.u64 	%rd9179, %rd9147, 24;
	cvt.u16.u64 	%rs186, %rd9147;
	cvt.u16.u64 	%rs187, %rd9179;
	cvt.u16.u64 	%rs188, %rd9178;
	cvt.u16.u64 	%rs189, %rd9177;
	st.global.v4.u8 	[%rd6+24], {%rs186, %rs189, %rs188, %rs187};
	shr.u64 	%rd9180, %rd9147, 32;
	shr.u64 	%rd9181, %rd9147, 40;
	shr.u64 	%rd9182, %rd9147, 48;
	shr.u64 	%rd9183, %rd9147, 56;
	cvt.u16.u64 	%rs190, %rd9183;
	cvt.u16.u64 	%rs191, %rd9182;
	cvt.u16.u64 	%rs192, %rd9181;
	cvt.u16.u64 	%rs193, %rd9180;
	st.global.v4.u8 	[%rd6+28], {%rs193, %rs192, %rs191, %rs190};
	shr.u64 	%rd9184, %rd9149, 8;
	shr.u64 	%rd9185, %rd9149, 16;
	shr.u64 	%rd9186, %rd9149, 24;
	cvt.u16.u64 	%rs194, %rd9149;
	cvt.u16.u64 	%rs195, %rd9186;
	cvt.u16.u64 	%rs196, %rd9185;
	cvt.u16.u64 	%rs197, %rd9184;
	st.global.v4.u8 	[%rd6+32], {%rs194, %rs197, %rs196, %rs195};
	shr.u64 	%rd9187, %rd9149, 32;
	shr.u64 	%rd9188, %rd9149, 40;
	shr.u64 	%rd9189, %rd9149, 48;
	shr.u64 	%rd9190, %rd9149, 56;
	cvt.u16.u64 	%rs198, %rd9190;
	cvt.u16.u64 	%rs199, %rd9189;
	cvt.u16.u64 	%rs200, %rd9188;
	cvt.u16.u64 	%rs201, %rd9187;
	st.global.v4.u8 	[%rd6+36], {%rs201, %rs200, %rs199, %rs198};
	shr.u64 	%rd9191, %rd9151, 8;
	shr.u64 	%rd9192, %rd9151, 16;
	shr.u64 	%rd9193, %rd9151, 24;
	cvt.u16.u64 	%rs202, %rd9151;
	cvt.u16.u64 	%rs203, %rd9193;
	cvt.u16.u64 	%rs204, %rd9192;
	cvt.u16.u64 	%rs205, %rd9191;
	st.global.v4.u8 	[%rd6+40], {%rs202, %rs205, %rs204, %rs203};
	shr.u64 	%rd9194, %rd9151, 32;
	shr.u64 	%rd9195, %rd9151, 40;
	shr.u64 	%rd9196, %rd9151, 48;
	shr.u64 	%rd9197, %rd9151, 56;
	cvt.u16.u64 	%rs206, %rd9197;
	cvt.u16.u64 	%rs207, %rd9196;
	cvt.u16.u64 	%rs208, %rd9195;
	cvt.u16.u64 	%rs209, %rd9194;
	st.global.v4.u8 	[%rd6+44], {%rs209, %rs208, %rs207, %rs206};
	shr.u64 	%rd9198, %rd9153, 8;
	shr.u64 	%rd9199, %rd9153, 16;
	shr.u64 	%rd9200, %rd9153, 24;
	cvt.u16.u64 	%rs210, %rd9153;
	cvt.u16.u64 	%rs211, %rd9200;
	cvt.u16.u64 	%rs212, %rd9199;
	cvt.u16.u64 	%rs213, %rd9198;
	st.global.v4.u8 	[%rd6+48], {%rs210, %rs213, %rs212, %rs211};
	shr.u64 	%rd9201, %rd9153, 32;
	shr.u64 	%rd9202, %rd9153, 40;
	shr.u64 	%rd9203, %rd9153, 48;
	shr.u64 	%rd9204, %rd9153, 56;
	cvt.u16.u64 	%rs214, %rd9204;
	cvt.u16.u64 	%rs215, %rd9203;
	cvt.u16.u64 	%rs216, %rd9202;
	cvt.u16.u64 	%rs217, %rd9201;
	st.global.v4.u8 	[%rd6+52], {%rs217, %rs216, %rs215, %rs214};
	shr.u64 	%rd9205, %rd9155, 8;
	shr.u64 	%rd9206, %rd9155, 16;
	shr.u64 	%rd9207, %rd9155, 24;
	cvt.u16.u64 	%rs218, %rd9155;
	cvt.u16.u64 	%rs219, %rd9207;
	cvt.u16.u64 	%rs220, %rd9206;
	cvt.u16.u64 	%rs221, %rd9205;
	st.global.v4.u8 	[%rd6+56], {%rs218, %rs221, %rs220, %rs219};
	shr.u64 	%rd9208, %rd9155, 32;
	shr.u64 	%rd9209, %rd9155, 40;
	shr.u64 	%rd9210, %rd9155, 48;
	shr.u64 	%rd9211, %rd9155, 56;
	cvt.u16.u64 	%rs222, %rd9211;
	cvt.u16.u64 	%rs223, %rd9210;
	cvt.u16.u64 	%rs224, %rd9209;
	cvt.u16.u64 	%rs225, %rd9208;
	st.global.v4.u8 	[%rd6+60], {%rs225, %rs224, %rs223, %rs222};
	bra.uni 	$L__BB3_51;

$L__BB3_31:
	mov.u32 	%r6570, 0;
	mov.u32 	%r10299, %r32;
	mov.u32 	%r10292, %r6570;

$L__BB3_32:
	cvt.u64.u32 	%rd9212, %r10292;
	add.s64 	%rd9213, %rd172, %rd9212;
	ld.global.u32 	%r6891, [%rd9213+12];
	mov.u32 	%r6892, 291;
	ld.global.u32 	%r6894, [%rd9213+16];
	ld.global.u32 	%r6895, [%rd9213+20];
	ld.global.u32 	%r6896, [%rd9213+24];
	prmt.b32 	%r6897, %r6896, %r6570, %r6892;
	prmt.b32 	%r6898, %r6895, %r6570, %r6892;
	prmt.b32 	%r6899, %r6894, %r6570, %r6892;
	prmt.b32 	%r6900, %r6891, %r6570, %r6892;
	st.local.v4.u32 	[%rd9262], {%r6900, %r6899, %r6898, %r6897};
	ld.global.u32 	%r6901, [%rd9213+28];
	ld.global.u32 	%r6902, [%rd9213+32];
	ld.global.u32 	%r6903, [%rd9213+36];
	ld.global.u32 	%r6904, [%rd9213+40];
	prmt.b32 	%r6905, %r6904, %r6570, %r6892;
	prmt.b32 	%r6906, %r6903, %r6570, %r6892;
	prmt.b32 	%r6907, %r6902, %r6570, %r6892;
	prmt.b32 	%r6908, %r6901, %r6570, %r6892;
	st.local.v4.u32 	[%rd9262+16], {%r6908, %r6907, %r6906, %r6905};
	ld.global.u32 	%r6909, [%rd9213+44];
	ld.global.u32 	%r6910, [%rd9213+48];
	ld.global.u32 	%r6911, [%rd9213+52];
	ld.global.u32 	%r6912, [%rd9213+56];
	prmt.b32 	%r6913, %r6912, %r6570, %r6892;
	prmt.b32 	%r6914, %r6911, %r6570, %r6892;
	prmt.b32 	%r6915, %r6910, %r6570, %r6892;
	prmt.b32 	%r6916, %r6909, %r6570, %r6892;
	st.local.v4.u32 	[%rd9262+32], {%r6916, %r6915, %r6914, %r6913};
	ld.global.u32 	%r6917, [%rd9213+60];
	ld.global.u32 	%r6918, [%rd9213+64];
	ld.global.u32 	%r6919, [%rd9213+68];
	ld.global.u32 	%r6920, [%rd9213+72];
	prmt.b32 	%r6921, %r6920, %r6570, %r6892;
	prmt.b32 	%r6922, %r6919, %r6570, %r6892;
	prmt.b32 	%r6923, %r6918, %r6570, %r6892;
	prmt.b32 	%r6924, %r6917, %r6570, %r6892;
	st.local.v4.u32 	[%rd9262+48], {%r6924, %r6923, %r6922, %r6921};
	add.s32 	%r10304, %r10292, 64;
	add.s32 	%r10299, %r10299, -64;
	shf.l.wrap.b32 	%r6925, %r10293, %r10293, 5;
	add.s32 	%r6926, %r6925, %r10297;
	// begin inline asm
	lop3.b32 %r6571, %r10294, %r10295, %r10296, 202;
	// end inline asm
	add.s32 	%r6927, %r6926, %r6571;
	add.s32 	%r6928, %r6927, %r6900;
	add.s32 	%r6580, %r6928, 1518500249;
	shf.l.wrap.b32 	%r6929, %r6580, %r6580, 5;
	shf.l.wrap.b32 	%r6582, %r10294, %r10294, 30;
	// begin inline asm
	lop3.b32 %r6575, %r10293, %r6582, %r10295, 202;
	// end inline asm
	add.s32 	%r6930, %r10296, %r6575;
	add.s32 	%r6931, %r6930, %r6899;
	add.s32 	%r6932, %r6931, %r6929;
	add.s32 	%r6584, %r6932, 1518500249;
	shf.l.wrap.b32 	%r6933, %r6584, %r6584, 5;
	shf.l.wrap.b32 	%r6586, %r10293, %r10293, 30;
	// begin inline asm
	lop3.b32 %r6579, %r6580, %r6586, %r6582, 202;
	// end inline asm
	add.s32 	%r6934, %r10295, %r6579;
	add.s32 	%r6935, %r6934, %r6898;
	add.s32 	%r6936, %r6935, %r6933;
	add.s32 	%r6588, %r6936, 1518500249;
	shf.l.wrap.b32 	%r6590, %r6580, %r6580, 30;
	shf.l.wrap.b32 	%r6937, %r6588, %r6588, 5;
	// begin inline asm
	lop3.b32 %r6583, %r6584, %r6590, %r6586, 202;
	// end inline asm
	add.s32 	%r6938, %r6582, %r6583;
	add.s32 	%r6939, %r6938, %r6897;
	add.s32 	%r6940, %r6939, %r6937;
	add.s32 	%r6592, %r6940, 1518500249;
	shf.l.wrap.b32 	%r6594, %r6584, %r6584, 30;
	shf.l.wrap.b32 	%r6941, %r6592, %r6592, 5;
	// begin inline asm
	lop3.b32 %r6587, %r6588, %r6594, %r6590, 202;
	// end inline asm
	add.s32 	%r6942, %r6586, %r6587;
	add.s32 	%r6943, %r6942, %r6908;
	add.s32 	%r6944, %r6943, %r6941;
	add.s32 	%r6596, %r6944, 1518500249;
	shf.l.wrap.b32 	%r6598, %r6588, %r6588, 30;
	shf.l.wrap.b32 	%r6945, %r6596, %r6596, 5;
	// begin inline asm
	lop3.b32 %r6591, %r6592, %r6598, %r6594, 202;
	// end inline asm
	add.s32 	%r6946, %r6590, %r6591;
	add.s32 	%r6947, %r6946, %r6907;
	add.s32 	%r6948, %r6947, %r6945;
	add.s32 	%r6600, %r6948, 1518500249;
	shf.l.wrap.b32 	%r6602, %r6592, %r6592, 30;
	shf.l.wrap.b32 	%r6949, %r6600, %r6600, 5;
	// begin inline asm
	lop3.b32 %r6595, %r6596, %r6602, %r6598, 202;
	// end inline asm
	add.s32 	%r6950, %r6594, %r6595;
	add.s32 	%r6951, %r6950, %r6906;
	add.s32 	%r6952, %r6951, %r6949;
	add.s32 	%r6604, %r6952, 1518500249;
	shf.l.wrap.b32 	%r6606, %r6596, %r6596, 30;
	shf.l.wrap.b32 	%r6953, %r6604, %r6604, 5;
	// begin inline asm
	lop3.b32 %r6599, %r6600, %r6606, %r6602, 202;
	// end inline asm
	add.s32 	%r6954, %r6599, %r6905;
	add.s32 	%r6955, %r6954, %r6598;
	add.s32 	%r6956, %r6955, %r6953;
	add.s32 	%r6608, %r6956, 1518500249;
	shf.l.wrap.b32 	%r6610, %r6600, %r6600, 30;
	shf.l.wrap.b32 	%r6957, %r6608, %r6608, 5;
	// begin inline asm
	lop3.b32 %r6603, %r6604, %r6610, %r6606, 202;
	// end inline asm
	add.s32 	%r6958, %r6603, %r6916;
	add.s32 	%r6959, %r6958, %r6602;
	add.s32 	%r6960, %r6959, %r6957;
	add.s32 	%r6612, %r6960, 1518500249;
	shf.l.wrap.b32 	%r6614, %r6604, %r6604, 30;
	shf.l.wrap.b32 	%r6961, %r6612, %r6612, 5;
	// begin inline asm
	lop3.b32 %r6607, %r6608, %r6614, %r6610, 202;
	// end inline asm
	add.s32 	%r6962, %r6607, %r6915;
	add.s32 	%r6963, %r6962, %r6606;
	add.s32 	%r6964, %r6963, %r6961;
	add.s32 	%r6616, %r6964, 1518500249;
	shf.l.wrap.b32 	%r6618, %r6608, %r6608, 30;
	shf.l.wrap.b32 	%r6965, %r6616, %r6616, 5;
	// begin inline asm
	lop3.b32 %r6611, %r6612, %r6618, %r6614, 202;
	// end inline asm
	add.s32 	%r6966, %r6611, %r6914;
	add.s32 	%r6967, %r6966, %r6610;
	add.s32 	%r6968, %r6967, %r6965;
	add.s32 	%r6620, %r6968, 1518500249;
	shf.l.wrap.b32 	%r6622, %r6612, %r6612, 30;
	shf.l.wrap.b32 	%r6969, %r6620, %r6620, 5;
	// begin inline asm
	lop3.b32 %r6615, %r6616, %r6622, %r6618, 202;
	// end inline asm
	add.s32 	%r6970, %r6615, %r6913;
	add.s32 	%r6971, %r6970, %r6614;
	add.s32 	%r6972, %r6971, %r6969;
	add.s32 	%r6624, %r6972, 1518500249;
	shf.l.wrap.b32 	%r6626, %r6616, %r6616, 30;
	shf.l.wrap.b32 	%r6973, %r6624, %r6624, 5;
	// begin inline asm
	lop3.b32 %r6619, %r6620, %r6626, %r6622, 202;
	// end inline asm
	add.s32 	%r6974, %r6619, %r6924;
	add.s32 	%r6975, %r6974, %r6618;
	add.s32 	%r6976, %r6975, %r6973;
	add.s32 	%r6628, %r6976, 1518500249;
	shf.l.wrap.b32 	%r6630, %r6620, %r6620, 30;
	shf.l.wrap.b32 	%r6977, %r6628, %r6628, 5;
	// begin inline asm
	lop3.b32 %r6623, %r6624, %r6630, %r6626, 202;
	// end inline asm
	add.s32 	%r6978, %r6623, %r6923;
	add.s32 	%r6979, %r6978, %r6622;
	add.s32 	%r6980, %r6979, %r6977;
	add.s32 	%r6632, %r6980, 1518500249;
	shf.l.wrap.b32 	%r6634, %r6624, %r6624, 30;
	shf.l.wrap.b32 	%r6981, %r6632, %r6632, 5;
	// begin inline asm
	lop3.b32 %r6627, %r6628, %r6634, %r6630, 202;
	// end inline asm
	add.s32 	%r6982, %r6627, %r6922;
	add.s32 	%r6983, %r6982, %r6626;
	add.s32 	%r6984, %r6983, %r6981;
	add.s32 	%r6636, %r6984, 1518500249;
	shf.l.wrap.b32 	%r6638, %r6628, %r6628, 30;
	shf.l.wrap.b32 	%r6985, %r6636, %r6636, 5;
	// begin inline asm
	lop3.b32 %r6631, %r6632, %r6638, %r6634, 202;
	// end inline asm
	add.s32 	%r6986, %r6631, %r6921;
	add.s32 	%r6987, %r6986, %r6630;
	add.s32 	%r6988, %r6987, %r6985;
	add.s32 	%r6640, %r6988, 1518500249;
	shf.l.wrap.b32 	%r6642, %r6632, %r6632, 30;
	shf.l.wrap.b32 	%r6989, %r6640, %r6640, 5;
	// begin inline asm
	lop3.b32 %r6635, %r6636, %r6642, %r6638, 202;
	// end inline asm
	xor.b32  	%r6990, %r6916, %r6923;
	xor.b32  	%r6991, %r6990, %r6898;
	xor.b32  	%r6992, %r6991, %r6900;
	shf.l.wrap.b32 	%r6993, %r6992, %r6992, 1;
	add.s32 	%r6994, %r6635, %r6993;
	add.s32 	%r6995, %r6994, %r6634;
	add.s32 	%r6996, %r6995, %r6989;
	add.s32 	%r6644, %r6996, 1518500249;
	shf.l.wrap.b32 	%r6646, %r6636, %r6636, 30;
	shf.l.wrap.b32 	%r6997, %r6644, %r6644, 5;
	// begin inline asm
	lop3.b32 %r6639, %r6640, %r6646, %r6642, 202;
	// end inline asm
	xor.b32  	%r6998, %r6915, %r6922;
	xor.b32  	%r6999, %r6998, %r6897;
	xor.b32  	%r7000, %r6999, %r6899;
	shf.l.wrap.b32 	%r7001, %r7000, %r7000, 1;
	add.s32 	%r7002, %r6639, %r7001;
	add.s32 	%r7003, %r7002, %r6638;
	add.s32 	%r7004, %r7003, %r6997;
	add.s32 	%r6648, %r7004, 1518500249;
	shf.l.wrap.b32 	%r6650, %r6640, %r6640, 30;
	shf.l.wrap.b32 	%r7005, %r6648, %r6648, 5;
	// begin inline asm
	lop3.b32 %r6643, %r6644, %r6650, %r6646, 202;
	// end inline asm
	xor.b32  	%r7006, %r6914, %r6921;
	xor.b32  	%r7007, %r7006, %r6908;
	xor.b32  	%r7008, %r7007, %r6898;
	shf.l.wrap.b32 	%r7009, %r7008, %r7008, 1;
	add.s32 	%r7010, %r6643, %r7009;
	add.s32 	%r7011, %r7010, %r6642;
	add.s32 	%r7012, %r7011, %r7005;
	add.s32 	%r6652, %r7012, 1518500249;
	shf.l.wrap.b32 	%r6654, %r6644, %r6644, 30;
	shf.l.wrap.b32 	%r7013, %r6652, %r6652, 5;
	// begin inline asm
	lop3.b32 %r6647, %r6648, %r6654, %r6650, 202;
	// end inline asm
	xor.b32  	%r7014, %r6913, %r6993;
	xor.b32  	%r7015, %r7014, %r6907;
	xor.b32  	%r7016, %r7015, %r6897;
	shf.l.wrap.b32 	%r7017, %r7016, %r7016, 1;
	add.s32 	%r7018, %r6647, %r7017;
	add.s32 	%r7019, %r7018, %r6646;
	add.s32 	%r7020, %r7019, %r7013;
	add.s32 	%r6656, %r7020, 1518500249;
	shf.l.wrap.b32 	%r6658, %r6648, %r6648, 30;
	shf.l.wrap.b32 	%r7021, %r6656, %r6656, 5;
	// begin inline asm
	lop3.b32 %r6651, %r6652, %r6658, %r6654, 150;
	// end inline asm
	xor.b32  	%r7022, %r6924, %r7001;
	xor.b32  	%r7023, %r7022, %r6906;
	xor.b32  	%r7024, %r7023, %r6908;
	shf.l.wrap.b32 	%r7025, %r7024, %r7024, 1;
	add.s32 	%r7026, %r6651, %r7025;
	add.s32 	%r7027, %r7026, %r6650;
	add.s32 	%r7028, %r7027, %r7021;
	add.s32 	%r6660, %r7028, 1859775393;
	shf.l.wrap.b32 	%r6662, %r6652, %r6652, 30;
	shf.l.wrap.b32 	%r7029, %r6660, %r6660, 5;
	// begin inline asm
	lop3.b32 %r6655, %r6656, %r6662, %r6658, 150;
	// end inline asm
	xor.b32  	%r7030, %r6923, %r7009;
	xor.b32  	%r7031, %r7030, %r6905;
	xor.b32  	%r7032, %r7031, %r6907;
	shf.l.wrap.b32 	%r7033, %r7032, %r7032, 1;
	add.s32 	%r7034, %r6655, %r7033;
	add.s32 	%r7035, %r7034, %r6654;
	add.s32 	%r7036, %r7035, %r7029;
	add.s32 	%r6664, %r7036, 1859775393;
	shf.l.wrap.b32 	%r6666, %r6656, %r6656, 30;
	shf.l.wrap.b32 	%r7037, %r6664, %r6664, 5;
	// begin inline asm
	lop3.b32 %r6659, %r6660, %r6666, %r6662, 150;
	// end inline asm
	xor.b32  	%r7038, %r6922, %r7017;
	xor.b32  	%r7039, %r7038, %r6916;
	xor.b32  	%r7040, %r7039, %r6906;
	shf.l.wrap.b32 	%r7041, %r7040, %r7040, 1;
	add.s32 	%r7042, %r6659, %r7041;
	add.s32 	%r7043, %r7042, %r6658;
	add.s32 	%r7044, %r7043, %r7037;
	add.s32 	%r6668, %r7044, 1859775393;
	shf.l.wrap.b32 	%r6670, %r6660, %r6660, 30;
	shf.l.wrap.b32 	%r7045, %r6668, %r6668, 5;
	// begin inline asm
	lop3.b32 %r6663, %r6664, %r6670, %r6666, 150;
	// end inline asm
	xor.b32  	%r7046, %r6921, %r7025;
	xor.b32  	%r7047, %r7046, %r6915;
	xor.b32  	%r7048, %r7047, %r6905;
	shf.l.wrap.b32 	%r7049, %r7048, %r7048, 1;
	add.s32 	%r7050, %r6663, %r7049;
	add.s32 	%r7051, %r7050, %r6662;
	add.s32 	%r7052, %r7051, %r7045;
	add.s32 	%r6672, %r7052, 1859775393;
	shf.l.wrap.b32 	%r6674, %r6664, %r6664, 30;
	shf.l.wrap.b32 	%r7053, %r6672, %r6672, 5;
	// begin inline asm
	lop3.b32 %r6667, %r6668, %r6674, %r6670, 150;
	// end inline asm
	xor.b32  	%r7054, %r7033, %r6993;
	xor.b32  	%r7055, %r7054, %r6914;
	xor.b32  	%r7056, %r7055, %r6916;
	shf.l.wrap.b32 	%r7057, %r7056, %r7056, 1;
	add.s32 	%r7058, %r6667, %r7057;
	add.s32 	%r7059, %r7058, %r6666;
	add.s32 	%r7060, %r7059, %r7053;
	add.s32 	%r6676, %r7060, 1859775393;
	shf.l.wrap.b32 	%r6678, %r6668, %r6668, 30;
	shf.l.wrap.b32 	%r7061, %r6676, %r6676, 5;
	// begin inline asm
	lop3.b32 %r6671, %r6672, %r6678, %r6674, 150;
	// end inline asm
	xor.b32  	%r7062, %r7041, %r7001;
	xor.b32  	%r7063, %r7062, %r6913;
	xor.b32  	%r7064, %r7063, %r6915;
	shf.l.wrap.b32 	%r7065, %r7064, %r7064, 1;
	add.s32 	%r7066, %r6671, %r7065;
	add.s32 	%r7067, %r7066, %r6670;
	add.s32 	%r7068, %r7067, %r7061;
	add.s32 	%r6680, %r7068, 1859775393;
	shf.l.wrap.b32 	%r6682, %r6672, %r6672, 30;
	shf.l.wrap.b32 	%r7069, %r6680, %r6680, 5;
	// begin inline asm
	lop3.b32 %r6675, %r6676, %r6682, %r6678, 150;
	// end inline asm
	xor.b32  	%r7070, %r7049, %r7009;
	xor.b32  	%r7071, %r7070, %r6924;
	xor.b32  	%r7072, %r7071, %r6914;
	shf.l.wrap.b32 	%r7073, %r7072, %r7072, 1;
	add.s32 	%r7074, %r6675, %r7073;
	add.s32 	%r7075, %r7074, %r6674;
	add.s32 	%r7076, %r7075, %r7069;
	add.s32 	%r6684, %r7076, 1859775393;
	shf.l.wrap.b32 	%r6686, %r6676, %r6676, 30;
	shf.l.wrap.b32 	%r7077, %r6684, %r6684, 5;
	// begin inline asm
	lop3.b32 %r6679, %r6680, %r6686, %r6682, 150;
	// end inline asm
	xor.b32  	%r7078, %r7057, %r7017;
	xor.b32  	%r7079, %r7078, %r6923;
	xor.b32  	%r7080, %r7079, %r6913;
	shf.l.wrap.b32 	%r7081, %r7080, %r7080, 1;
	add.s32 	%r7082, %r6679, %r7081;
	add.s32 	%r7083, %r7082, %r6678;
	add.s32 	%r7084, %r7083, %r7077;
	add.s32 	%r6688, %r7084, 1859775393;
	shf.l.wrap.b32 	%r6690, %r6680, %r6680, 30;
	shf.l.wrap.b32 	%r7085, %r6688, %r6688, 5;
	// begin inline asm
	lop3.b32 %r6683, %r6684, %r6690, %r6686, 150;
	// end inline asm
	xor.b32  	%r7086, %r7065, %r7025;
	xor.b32  	%r7087, %r7086, %r6922;
	xor.b32  	%r7088, %r7087, %r6924;
	shf.l.wrap.b32 	%r7089, %r7088, %r7088, 1;
	add.s32 	%r7090, %r6683, %r7089;
	add.s32 	%r7091, %r7090, %r6682;
	add.s32 	%r7092, %r7091, %r7085;
	add.s32 	%r6692, %r7092, 1859775393;
	shf.l.wrap.b32 	%r6694, %r6684, %r6684, 30;
	shf.l.wrap.b32 	%r7093, %r6692, %r6692, 5;
	// begin inline asm
	lop3.b32 %r6687, %r6688, %r6694, %r6690, 150;
	// end inline asm
	xor.b32  	%r7094, %r7073, %r7033;
	xor.b32  	%r7095, %r7094, %r6921;
	xor.b32  	%r7096, %r7095, %r6923;
	shf.l.wrap.b32 	%r7097, %r7096, %r7096, 1;
	add.s32 	%r7098, %r6687, %r7097;
	add.s32 	%r7099, %r7098, %r6686;
	add.s32 	%r7100, %r7099, %r7093;
	add.s32 	%r6696, %r7100, 1859775393;
	shf.l.wrap.b32 	%r6698, %r6688, %r6688, 30;
	shf.l.wrap.b32 	%r7101, %r6696, %r6696, 5;
	// begin inline asm
	lop3.b32 %r6691, %r6692, %r6698, %r6694, 150;
	// end inline asm
	xor.b32  	%r7102, %r7041, %r6993;
	xor.b32  	%r7103, %r7102, %r7081;
	xor.b32  	%r7104, %r7103, %r6922;
	shf.l.wrap.b32 	%r7105, %r7104, %r7104, 1;
	add.s32 	%r7106, %r6691, %r7105;
	add.s32 	%r7107, %r7106, %r6690;
	add.s32 	%r7108, %r7107, %r7101;
	add.s32 	%r6700, %r7108, 1859775393;
	shf.l.wrap.b32 	%r6702, %r6692, %r6692, 30;
	shf.l.wrap.b32 	%r7109, %r6700, %r6700, 5;
	// begin inline asm
	lop3.b32 %r6695, %r6696, %r6702, %r6698, 150;
	// end inline asm
	xor.b32  	%r7110, %r7049, %r7001;
	xor.b32  	%r7111, %r7110, %r7089;
	xor.b32  	%r7112, %r7111, %r6921;
	shf.l.wrap.b32 	%r7113, %r7112, %r7112, 1;
	add.s32 	%r7114, %r6695, %r7113;
	add.s32 	%r7115, %r7114, %r6694;
	add.s32 	%r7116, %r7115, %r7109;
	add.s32 	%r6704, %r7116, 1859775393;
	shf.l.wrap.b32 	%r6706, %r6696, %r6696, 30;
	shf.l.wrap.b32 	%r7117, %r6704, %r6704, 5;
	// begin inline asm
	lop3.b32 %r6699, %r6700, %r6706, %r6702, 150;
	// end inline asm
	xor.b32  	%r7118, %r7009, %r6993;
	xor.b32  	%r7119, %r7118, %r7057;
	xor.b32  	%r7120, %r7119, %r7097;
	shf.l.wrap.b32 	%r7121, %r7120, %r7120, 1;
	add.s32 	%r7122, %r6699, %r7121;
	add.s32 	%r7123, %r7122, %r6698;
	add.s32 	%r7124, %r7123, %r7117;
	add.s32 	%r6708, %r7124, 1859775393;
	shf.l.wrap.b32 	%r6710, %r6700, %r6700, 30;
	shf.l.wrap.b32 	%r7125, %r6708, %r6708, 5;
	// begin inline asm
	lop3.b32 %r6703, %r6704, %r6710, %r6706, 150;
	// end inline asm
	xor.b32  	%r7126, %r7017, %r7001;
	xor.b32  	%r7127, %r7126, %r7065;
	xor.b32  	%r7128, %r7127, %r7105;
	shf.l.wrap.b32 	%r7129, %r7128, %r7128, 1;
	add.s32 	%r7130, %r6703, %r7129;
	add.s32 	%r7131, %r7130, %r6702;
	add.s32 	%r7132, %r7131, %r7125;
	add.s32 	%r6712, %r7132, 1859775393;
	shf.l.wrap.b32 	%r6714, %r6704, %r6704, 30;
	shf.l.wrap.b32 	%r7133, %r6712, %r6712, 5;
	// begin inline asm
	lop3.b32 %r6707, %r6708, %r6714, %r6710, 150;
	// end inline asm
	xor.b32  	%r7134, %r7025, %r7009;
	xor.b32  	%r7135, %r7134, %r7073;
	xor.b32  	%r7136, %r7135, %r7113;
	shf.l.wrap.b32 	%r7137, %r7136, %r7136, 1;
	add.s32 	%r7138, %r6707, %r7137;
	add.s32 	%r7139, %r7138, %r6706;
	add.s32 	%r7140, %r7139, %r7133;
	add.s32 	%r6716, %r7140, 1859775393;
	shf.l.wrap.b32 	%r6718, %r6708, %r6708, 30;
	shf.l.wrap.b32 	%r7141, %r6716, %r6716, 5;
	// begin inline asm
	lop3.b32 %r6711, %r6712, %r6718, %r6714, 150;
	// end inline asm
	xor.b32  	%r7142, %r7033, %r7017;
	xor.b32  	%r7143, %r7142, %r7081;
	xor.b32  	%r7144, %r7143, %r7121;
	shf.l.wrap.b32 	%r7145, %r7144, %r7144, 1;
	add.s32 	%r7146, %r6711, %r7145;
	add.s32 	%r7147, %r7146, %r6710;
	add.s32 	%r7148, %r7147, %r7141;
	add.s32 	%r6720, %r7148, 1859775393;
	shf.l.wrap.b32 	%r6722, %r6712, %r6712, 30;
	shf.l.wrap.b32 	%r7149, %r6720, %r6720, 5;
	// begin inline asm
	lop3.b32 %r6715, %r6716, %r6722, %r6718, 150;
	// end inline asm
	xor.b32  	%r7150, %r7041, %r7025;
	xor.b32  	%r7151, %r7150, %r7089;
	xor.b32  	%r7152, %r7151, %r7129;
	shf.l.wrap.b32 	%r7153, %r7152, %r7152, 1;
	add.s32 	%r7154, %r6715, %r7153;
	add.s32 	%r7155, %r7154, %r6714;
	add.s32 	%r7156, %r7155, %r7149;
	add.s32 	%r6724, %r7156, 1859775393;
	shf.l.wrap.b32 	%r6726, %r6716, %r6716, 30;
	shf.l.wrap.b32 	%r7157, %r6724, %r6724, 5;
	// begin inline asm
	lop3.b32 %r6719, %r6720, %r6726, %r6722, 150;
	// end inline asm
	xor.b32  	%r7158, %r7049, %r7033;
	xor.b32  	%r7159, %r7158, %r7097;
	xor.b32  	%r7160, %r7159, %r7137;
	shf.l.wrap.b32 	%r7161, %r7160, %r7160, 1;
	add.s32 	%r7162, %r6719, %r7161;
	add.s32 	%r7163, %r7162, %r6718;
	add.s32 	%r7164, %r7163, %r7157;
	add.s32 	%r6728, %r7164, 1859775393;
	shf.l.wrap.b32 	%r6730, %r6720, %r6720, 30;
	shf.l.wrap.b32 	%r7165, %r6728, %r6728, 5;
	// begin inline asm
	lop3.b32 %r6723, %r6724, %r6730, %r6726, 150;
	// end inline asm
	xor.b32  	%r7166, %r7057, %r7041;
	xor.b32  	%r7167, %r7166, %r7105;
	xor.b32  	%r7168, %r7167, %r7145;
	shf.l.wrap.b32 	%r7169, %r7168, %r7168, 1;
	add.s32 	%r7170, %r6723, %r7169;
	add.s32 	%r7171, %r7170, %r6722;
	add.s32 	%r7172, %r7171, %r7165;
	add.s32 	%r6732, %r7172, 1859775393;
	shf.l.wrap.b32 	%r6734, %r6724, %r6724, 30;
	shf.l.wrap.b32 	%r7173, %r6732, %r6732, 5;
	// begin inline asm
	lop3.b32 %r6727, %r6728, %r6734, %r6730, 150;
	// end inline asm
	xor.b32  	%r7174, %r7065, %r7049;
	xor.b32  	%r7175, %r7174, %r7113;
	xor.b32  	%r7176, %r7175, %r7153;
	shf.l.wrap.b32 	%r7177, %r7176, %r7176, 1;
	add.s32 	%r7178, %r6727, %r7177;
	add.s32 	%r7179, %r7178, %r6726;
	add.s32 	%r7180, %r7179, %r7173;
	add.s32 	%r6736, %r7180, 1859775393;
	shf.l.wrap.b32 	%r6738, %r6728, %r6728, 30;
	shf.l.wrap.b32 	%r7181, %r6736, %r6736, 5;
	// begin inline asm
	lop3.b32 %r6731, %r6732, %r6738, %r6734, 232;
	// end inline asm
	xor.b32  	%r7182, %r7073, %r7057;
	xor.b32  	%r7183, %r7182, %r7121;
	xor.b32  	%r7184, %r7183, %r7161;
	shf.l.wrap.b32 	%r7185, %r7184, %r7184, 1;
	add.s32 	%r7186, %r6731, %r7185;
	add.s32 	%r7187, %r7186, %r6730;
	add.s32 	%r7188, %r7187, %r7181;
	add.s32 	%r6740, %r7188, -1894007588;
	shf.l.wrap.b32 	%r6742, %r6732, %r6732, 30;
	shf.l.wrap.b32 	%r7189, %r6740, %r6740, 5;
	// begin inline asm
	lop3.b32 %r6735, %r6736, %r6742, %r6738, 232;
	// end inline asm
	xor.b32  	%r7190, %r7081, %r7065;
	xor.b32  	%r7191, %r7190, %r7129;
	xor.b32  	%r7192, %r7191, %r7169;
	shf.l.wrap.b32 	%r7193, %r7192, %r7192, 1;
	add.s32 	%r7194, %r6735, %r7193;
	add.s32 	%r7195, %r7194, %r6734;
	add.s32 	%r7196, %r7195, %r7189;
	add.s32 	%r6744, %r7196, -1894007588;
	shf.l.wrap.b32 	%r6746, %r6736, %r6736, 30;
	shf.l.wrap.b32 	%r7197, %r6744, %r6744, 5;
	// begin inline asm
	lop3.b32 %r6739, %r6740, %r6746, %r6742, 232;
	// end inline asm
	xor.b32  	%r7198, %r7089, %r7073;
	xor.b32  	%r7199, %r7198, %r7137;
	xor.b32  	%r7200, %r7199, %r7177;
	shf.l.wrap.b32 	%r7201, %r7200, %r7200, 1;
	add.s32 	%r7202, %r6739, %r7201;
	add.s32 	%r7203, %r7202, %r6738;
	add.s32 	%r7204, %r7203, %r7197;
	add.s32 	%r6748, %r7204, -1894007588;
	shf.l.wrap.b32 	%r6750, %r6740, %r6740, 30;
	shf.l.wrap.b32 	%r7205, %r6748, %r6748, 5;
	// begin inline asm
	lop3.b32 %r6743, %r6744, %r6750, %r6746, 232;
	// end inline asm
	xor.b32  	%r7206, %r7097, %r7081;
	xor.b32  	%r7207, %r7206, %r7145;
	xor.b32  	%r7208, %r7207, %r7185;
	shf.l.wrap.b32 	%r7209, %r7208, %r7208, 1;
	add.s32 	%r7210, %r6743, %r7209;
	add.s32 	%r7211, %r7210, %r6742;
	add.s32 	%r7212, %r7211, %r7205;
	add.s32 	%r6752, %r7212, -1894007588;
	shf.l.wrap.b32 	%r6754, %r6744, %r6744, 30;
	shf.l.wrap.b32 	%r7213, %r6752, %r6752, 5;
	// begin inline asm
	lop3.b32 %r6747, %r6748, %r6754, %r6750, 232;
	// end inline asm
	xor.b32  	%r7214, %r7105, %r7089;
	xor.b32  	%r7215, %r7214, %r7153;
	xor.b32  	%r7216, %r7215, %r7193;
	shf.l.wrap.b32 	%r7217, %r7216, %r7216, 1;
	add.s32 	%r7218, %r6747, %r7217;
	add.s32 	%r7219, %r7218, %r6746;
	add.s32 	%r7220, %r7219, %r7213;
	add.s32 	%r6756, %r7220, -1894007588;
	shf.l.wrap.b32 	%r6758, %r6748, %r6748, 30;
	shf.l.wrap.b32 	%r7221, %r6756, %r6756, 5;
	// begin inline asm
	lop3.b32 %r6751, %r6752, %r6758, %r6754, 232;
	// end inline asm
	xor.b32  	%r7222, %r7113, %r7097;
	xor.b32  	%r7223, %r7222, %r7161;
	xor.b32  	%r7224, %r7223, %r7201;
	shf.l.wrap.b32 	%r7225, %r7224, %r7224, 1;
	add.s32 	%r7226, %r6751, %r7225;
	add.s32 	%r7227, %r7226, %r6750;
	add.s32 	%r7228, %r7227, %r7221;
	add.s32 	%r6760, %r7228, -1894007588;
	shf.l.wrap.b32 	%r6762, %r6752, %r6752, 30;
	shf.l.wrap.b32 	%r7229, %r6760, %r6760, 5;
	// begin inline asm
	lop3.b32 %r6755, %r6756, %r6762, %r6758, 232;
	// end inline asm
	xor.b32  	%r7230, %r7121, %r7105;
	xor.b32  	%r7231, %r7230, %r7169;
	xor.b32  	%r7232, %r7231, %r7209;
	shf.l.wrap.b32 	%r7233, %r7232, %r7232, 1;
	add.s32 	%r7234, %r6755, %r7233;
	add.s32 	%r7235, %r7234, %r6754;
	add.s32 	%r7236, %r7235, %r7229;
	add.s32 	%r6764, %r7236, -1894007588;
	shf.l.wrap.b32 	%r6766, %r6756, %r6756, 30;
	shf.l.wrap.b32 	%r7237, %r6764, %r6764, 5;
	// begin inline asm
	lop3.b32 %r6759, %r6760, %r6766, %r6762, 232;
	// end inline asm
	xor.b32  	%r7238, %r7129, %r7113;
	xor.b32  	%r7239, %r7238, %r7177;
	xor.b32  	%r7240, %r7239, %r7217;
	shf.l.wrap.b32 	%r7241, %r7240, %r7240, 1;
	add.s32 	%r7242, %r6759, %r7241;
	add.s32 	%r7243, %r7242, %r6758;
	add.s32 	%r7244, %r7243, %r7237;
	add.s32 	%r6768, %r7244, -1894007588;
	shf.l.wrap.b32 	%r6770, %r6760, %r6760, 30;
	shf.l.wrap.b32 	%r7245, %r6768, %r6768, 5;
	// begin inline asm
	lop3.b32 %r6763, %r6764, %r6770, %r6766, 232;
	// end inline asm
	xor.b32  	%r7246, %r7137, %r7121;
	xor.b32  	%r7247, %r7246, %r7185;
	xor.b32  	%r7248, %r7247, %r7225;
	shf.l.wrap.b32 	%r7249, %r7248, %r7248, 1;
	add.s32 	%r7250, %r6763, %r7249;
	add.s32 	%r7251, %r7250, %r6762;
	add.s32 	%r7252, %r7251, %r7245;
	add.s32 	%r6772, %r7252, -1894007588;
	shf.l.wrap.b32 	%r6774, %r6764, %r6764, 30;
	shf.l.wrap.b32 	%r7253, %r6772, %r6772, 5;
	// begin inline asm
	lop3.b32 %r6767, %r6768, %r6774, %r6770, 232;
	// end inline asm
	xor.b32  	%r7254, %r7145, %r7129;
	xor.b32  	%r7255, %r7254, %r7193;
	xor.b32  	%r7256, %r7255, %r7233;
	shf.l.wrap.b32 	%r7257, %r7256, %r7256, 1;
	add.s32 	%r7258, %r6767, %r7257;
	add.s32 	%r7259, %r7258, %r6766;
	add.s32 	%r7260, %r7259, %r7253;
	add.s32 	%r6776, %r7260, -1894007588;
	shf.l.wrap.b32 	%r6778, %r6768, %r6768, 30;
	shf.l.wrap.b32 	%r7261, %r6776, %r6776, 5;
	// begin inline asm
	lop3.b32 %r6771, %r6772, %r6778, %r6774, 232;
	// end inline asm
	xor.b32  	%r7262, %r7153, %r7137;
	xor.b32  	%r7263, %r7262, %r7201;
	xor.b32  	%r7264, %r7263, %r7241;
	shf.l.wrap.b32 	%r7265, %r7264, %r7264, 1;
	add.s32 	%r7266, %r6771, %r7265;
	add.s32 	%r7267, %r7266, %r6770;
	add.s32 	%r7268, %r7267, %r7261;
	add.s32 	%r6780, %r7268, -1894007588;
	shf.l.wrap.b32 	%r6782, %r6772, %r6772, 30;
	shf.l.wrap.b32 	%r7269, %r6780, %r6780, 5;
	// begin inline asm
	lop3.b32 %r6775, %r6776, %r6782, %r6778, 232;
	// end inline asm
	xor.b32  	%r7270, %r7161, %r7145;
	xor.b32  	%r7271, %r7270, %r7209;
	xor.b32  	%r7272, %r7271, %r7249;
	shf.l.wrap.b32 	%r7273, %r7272, %r7272, 1;
	add.s32 	%r7274, %r6775, %r7273;
	add.s32 	%r7275, %r7274, %r6774;
	add.s32 	%r7276, %r7275, %r7269;
	add.s32 	%r6784, %r7276, -1894007588;
	shf.l.wrap.b32 	%r6786, %r6776, %r6776, 30;
	shf.l.wrap.b32 	%r7277, %r6784, %r6784, 5;
	// begin inline asm
	lop3.b32 %r6779, %r6780, %r6786, %r6782, 232;
	// end inline asm
	xor.b32  	%r7278, %r7169, %r7153;
	xor.b32  	%r7279, %r7278, %r7217;
	xor.b32  	%r7280, %r7279, %r7257;
	shf.l.wrap.b32 	%r7281, %r7280, %r7280, 1;
	add.s32 	%r7282, %r6779, %r7281;
	add.s32 	%r7283, %r7282, %r6778;
	add.s32 	%r7284, %r7283, %r7277;
	add.s32 	%r6788, %r7284, -1894007588;
	shf.l.wrap.b32 	%r6790, %r6780, %r6780, 30;
	shf.l.wrap.b32 	%r7285, %r6788, %r6788, 5;
	// begin inline asm
	lop3.b32 %r6783, %r6784, %r6790, %r6786, 232;
	// end inline asm
	xor.b32  	%r7286, %r7177, %r7161;
	xor.b32  	%r7287, %r7286, %r7225;
	xor.b32  	%r7288, %r7287, %r7265;
	shf.l.wrap.b32 	%r7289, %r7288, %r7288, 1;
	add.s32 	%r7290, %r6783, %r7289;
	add.s32 	%r7291, %r7290, %r6782;
	add.s32 	%r7292, %r7291, %r7285;
	add.s32 	%r6792, %r7292, -1894007588;
	shf.l.wrap.b32 	%r6794, %r6784, %r6784, 30;
	shf.l.wrap.b32 	%r7293, %r6792, %r6792, 5;
	// begin inline asm
	lop3.b32 %r6787, %r6788, %r6794, %r6790, 232;
	// end inline asm
	xor.b32  	%r7294, %r7185, %r7169;
	xor.b32  	%r7295, %r7294, %r7233;
	xor.b32  	%r7296, %r7295, %r7273;
	shf.l.wrap.b32 	%r7297, %r7296, %r7296, 1;
	add.s32 	%r7298, %r6787, %r7297;
	add.s32 	%r7299, %r7298, %r6786;
	add.s32 	%r7300, %r7299, %r7293;
	add.s32 	%r6796, %r7300, -1894007588;
	shf.l.wrap.b32 	%r6798, %r6788, %r6788, 30;
	shf.l.wrap.b32 	%r7301, %r6796, %r6796, 5;
	// begin inline asm
	lop3.b32 %r6791, %r6792, %r6798, %r6794, 232;
	// end inline asm
	xor.b32  	%r7302, %r7193, %r7177;
	xor.b32  	%r7303, %r7302, %r7241;
	xor.b32  	%r7304, %r7303, %r7281;
	shf.l.wrap.b32 	%r7305, %r7304, %r7304, 1;
	add.s32 	%r7306, %r6791, %r7305;
	add.s32 	%r7307, %r7306, %r6790;
	add.s32 	%r7308, %r7307, %r7301;
	add.s32 	%r6800, %r7308, -1894007588;
	shf.l.wrap.b32 	%r6802, %r6792, %r6792, 30;
	shf.l.wrap.b32 	%r7309, %r6800, %r6800, 5;
	// begin inline asm
	lop3.b32 %r6795, %r6796, %r6802, %r6798, 232;
	// end inline asm
	xor.b32  	%r7310, %r7201, %r7185;
	xor.b32  	%r7311, %r7310, %r7249;
	xor.b32  	%r7312, %r7311, %r7289;
	shf.l.wrap.b32 	%r7313, %r7312, %r7312, 1;
	add.s32 	%r7314, %r6795, %r7313;
	add.s32 	%r7315, %r7314, %r6794;
	add.s32 	%r7316, %r7315, %r7309;
	add.s32 	%r6804, %r7316, -1894007588;
	shf.l.wrap.b32 	%r6806, %r6796, %r6796, 30;
	shf.l.wrap.b32 	%r7317, %r6804, %r6804, 5;
	// begin inline asm
	lop3.b32 %r6799, %r6800, %r6806, %r6802, 232;
	// end inline asm
	xor.b32  	%r7318, %r7209, %r7193;
	xor.b32  	%r7319, %r7318, %r7257;
	xor.b32  	%r7320, %r7319, %r7297;
	shf.l.wrap.b32 	%r7321, %r7320, %r7320, 1;
	add.s32 	%r7322, %r6799, %r7321;
	add.s32 	%r7323, %r7322, %r6798;
	add.s32 	%r7324, %r7323, %r7317;
	add.s32 	%r6808, %r7324, -1894007588;
	shf.l.wrap.b32 	%r6810, %r6800, %r6800, 30;
	shf.l.wrap.b32 	%r7325, %r6808, %r6808, 5;
	// begin inline asm
	lop3.b32 %r6803, %r6804, %r6810, %r6806, 232;
	// end inline asm
	xor.b32  	%r7326, %r7217, %r7201;
	xor.b32  	%r7327, %r7326, %r7265;
	xor.b32  	%r7328, %r7327, %r7305;
	shf.l.wrap.b32 	%r7329, %r7328, %r7328, 1;
	add.s32 	%r7330, %r6803, %r7329;
	add.s32 	%r7331, %r7330, %r6802;
	add.s32 	%r7332, %r7331, %r7325;
	add.s32 	%r6812, %r7332, -1894007588;
	shf.l.wrap.b32 	%r6814, %r6804, %r6804, 30;
	shf.l.wrap.b32 	%r7333, %r6812, %r6812, 5;
	// begin inline asm
	lop3.b32 %r6807, %r6808, %r6814, %r6810, 232;
	// end inline asm
	xor.b32  	%r7334, %r7225, %r7209;
	xor.b32  	%r7335, %r7334, %r7273;
	xor.b32  	%r7336, %r7335, %r7313;
	shf.l.wrap.b32 	%r7337, %r7336, %r7336, 1;
	add.s32 	%r7338, %r6807, %r7337;
	add.s32 	%r7339, %r7338, %r6806;
	add.s32 	%r7340, %r7339, %r7333;
	add.s32 	%r6816, %r7340, -1894007588;
	shf.l.wrap.b32 	%r6818, %r6808, %r6808, 30;
	shf.l.wrap.b32 	%r7341, %r6816, %r6816, 5;
	// begin inline asm
	lop3.b32 %r6811, %r6812, %r6818, %r6814, 150;
	// end inline asm
	xor.b32  	%r7342, %r7233, %r7217;
	xor.b32  	%r7343, %r7342, %r7281;
	xor.b32  	%r7344, %r7343, %r7321;
	shf.l.wrap.b32 	%r7345, %r7344, %r7344, 1;
	add.s32 	%r7346, %r6811, %r7345;
	add.s32 	%r7347, %r7346, %r6810;
	add.s32 	%r7348, %r7347, %r7341;
	add.s32 	%r6820, %r7348, -899497514;
	shf.l.wrap.b32 	%r6822, %r6812, %r6812, 30;
	shf.l.wrap.b32 	%r7349, %r6820, %r6820, 5;
	// begin inline asm
	lop3.b32 %r6815, %r6816, %r6822, %r6818, 150;
	// end inline asm
	xor.b32  	%r7350, %r7241, %r7225;
	xor.b32  	%r7351, %r7350, %r7289;
	xor.b32  	%r7352, %r7351, %r7329;
	shf.l.wrap.b32 	%r7353, %r7352, %r7352, 1;
	add.s32 	%r7354, %r6815, %r7353;
	add.s32 	%r7355, %r7354, %r6814;
	add.s32 	%r7356, %r7355, %r7349;
	add.s32 	%r6824, %r7356, -899497514;
	shf.l.wrap.b32 	%r6826, %r6816, %r6816, 30;
	shf.l.wrap.b32 	%r7357, %r6824, %r6824, 5;
	// begin inline asm
	lop3.b32 %r6819, %r6820, %r6826, %r6822, 150;
	// end inline asm
	xor.b32  	%r7358, %r7249, %r7233;
	xor.b32  	%r7359, %r7358, %r7297;
	xor.b32  	%r7360, %r7359, %r7337;
	shf.l.wrap.b32 	%r7361, %r7360, %r7360, 1;
	add.s32 	%r7362, %r6819, %r7361;
	add.s32 	%r7363, %r7362, %r6818;
	add.s32 	%r7364, %r7363, %r7357;
	add.s32 	%r6828, %r7364, -899497514;
	shf.l.wrap.b32 	%r6830, %r6820, %r6820, 30;
	shf.l.wrap.b32 	%r7365, %r6828, %r6828, 5;
	// begin inline asm
	lop3.b32 %r6823, %r6824, %r6830, %r6826, 150;
	// end inline asm
	xor.b32  	%r7366, %r7257, %r7241;
	xor.b32  	%r7367, %r7366, %r7305;
	xor.b32  	%r7368, %r7367, %r7345;
	shf.l.wrap.b32 	%r7369, %r7368, %r7368, 1;
	add.s32 	%r7370, %r6823, %r7369;
	add.s32 	%r7371, %r7370, %r6822;
	add.s32 	%r7372, %r7371, %r7365;
	add.s32 	%r6832, %r7372, -899497514;
	shf.l.wrap.b32 	%r6834, %r6824, %r6824, 30;
	shf.l.wrap.b32 	%r7373, %r6832, %r6832, 5;
	// begin inline asm
	lop3.b32 %r6827, %r6828, %r6834, %r6830, 150;
	// end inline asm
	xor.b32  	%r7374, %r7265, %r7249;
	xor.b32  	%r7375, %r7374, %r7313;
	xor.b32  	%r7376, %r7375, %r7353;
	shf.l.wrap.b32 	%r7377, %r7376, %r7376, 1;
	add.s32 	%r7378, %r6827, %r7377;
	add.s32 	%r7379, %r7378, %r6826;
	add.s32 	%r7380, %r7379, %r7373;
	add.s32 	%r6836, %r7380, -899497514;
	shf.l.wrap.b32 	%r6838, %r6828, %r6828, 30;
	shf.l.wrap.b32 	%r7381, %r6836, %r6836, 5;
	// begin inline asm
	lop3.b32 %r6831, %r6832, %r6838, %r6834, 150;
	// end inline asm
	xor.b32  	%r7382, %r7273, %r7257;
	xor.b32  	%r7383, %r7382, %r7321;
	xor.b32  	%r7384, %r7383, %r7361;
	shf.l.wrap.b32 	%r7385, %r7384, %r7384, 1;
	add.s32 	%r7386, %r6831, %r7385;
	add.s32 	%r7387, %r7386, %r6830;
	add.s32 	%r7388, %r7387, %r7381;
	add.s32 	%r6840, %r7388, -899497514;
	shf.l.wrap.b32 	%r6842, %r6832, %r6832, 30;
	shf.l.wrap.b32 	%r7389, %r6840, %r6840, 5;
	// begin inline asm
	lop3.b32 %r6835, %r6836, %r6842, %r6838, 150;
	// end inline asm
	xor.b32  	%r7390, %r7281, %r7265;
	xor.b32  	%r7391, %r7390, %r7329;
	xor.b32  	%r7392, %r7391, %r7369;
	shf.l.wrap.b32 	%r7393, %r7392, %r7392, 1;
	add.s32 	%r7394, %r6835, %r7393;
	add.s32 	%r7395, %r7394, %r6834;
	add.s32 	%r7396, %r7395, %r7389;
	add.s32 	%r6844, %r7396, -899497514;
	shf.l.wrap.b32 	%r6846, %r6836, %r6836, 30;
	shf.l.wrap.b32 	%r7397, %r6844, %r6844, 5;
	// begin inline asm
	lop3.b32 %r6839, %r6840, %r6846, %r6842, 150;
	// end inline asm
	xor.b32  	%r7398, %r7289, %r7273;
	xor.b32  	%r7399, %r7398, %r7337;
	xor.b32  	%r7400, %r7399, %r7377;
	shf.l.wrap.b32 	%r7401, %r7400, %r7400, 1;
	add.s32 	%r7402, %r6839, %r7401;
	add.s32 	%r7403, %r7402, %r6838;
	add.s32 	%r7404, %r7403, %r7397;
	add.s32 	%r6848, %r7404, -899497514;
	shf.l.wrap.b32 	%r6850, %r6840, %r6840, 30;
	shf.l.wrap.b32 	%r7405, %r6848, %r6848, 5;
	// begin inline asm
	lop3.b32 %r6843, %r6844, %r6850, %r6846, 150;
	// end inline asm
	xor.b32  	%r7406, %r7297, %r7281;
	xor.b32  	%r7407, %r7406, %r7345;
	xor.b32  	%r7408, %r7407, %r7385;
	shf.l.wrap.b32 	%r7409, %r7408, %r7408, 1;
	add.s32 	%r7410, %r6843, %r7409;
	add.s32 	%r7411, %r7410, %r6842;
	add.s32 	%r7412, %r7411, %r7405;
	add.s32 	%r6852, %r7412, -899497514;
	shf.l.wrap.b32 	%r6854, %r6844, %r6844, 30;
	shf.l.wrap.b32 	%r7413, %r6852, %r6852, 5;
	// begin inline asm
	lop3.b32 %r6847, %r6848, %r6854, %r6850, 150;
	// end inline asm
	xor.b32  	%r7414, %r7305, %r7289;
	xor.b32  	%r7415, %r7414, %r7353;
	xor.b32  	%r7416, %r7415, %r7393;
	shf.l.wrap.b32 	%r7417, %r7416, %r7416, 1;
	add.s32 	%r7418, %r6847, %r7417;
	add.s32 	%r7419, %r7418, %r6846;
	add.s32 	%r7420, %r7419, %r7413;
	add.s32 	%r6856, %r7420, -899497514;
	shf.l.wrap.b32 	%r6858, %r6848, %r6848, 30;
	shf.l.wrap.b32 	%r7421, %r6856, %r6856, 5;
	// begin inline asm
	lop3.b32 %r6851, %r6852, %r6858, %r6854, 150;
	// end inline asm
	xor.b32  	%r7422, %r7313, %r7297;
	xor.b32  	%r7423, %r7422, %r7361;
	xor.b32  	%r7424, %r7423, %r7401;
	shf.l.wrap.b32 	%r7425, %r7424, %r7424, 1;
	add.s32 	%r7426, %r6851, %r7425;
	add.s32 	%r7427, %r7426, %r6850;
	add.s32 	%r7428, %r7427, %r7421;
	add.s32 	%r6860, %r7428, -899497514;
	shf.l.wrap.b32 	%r6862, %r6852, %r6852, 30;
	shf.l.wrap.b32 	%r7429, %r6860, %r6860, 5;
	// begin inline asm
	lop3.b32 %r6855, %r6856, %r6862, %r6858, 150;
	// end inline asm
	xor.b32  	%r7430, %r7321, %r7305;
	xor.b32  	%r7431, %r7430, %r7369;
	xor.b32  	%r7432, %r7431, %r7409;
	shf.l.wrap.b32 	%r7433, %r7432, %r7432, 1;
	add.s32 	%r7434, %r6855, %r7433;
	add.s32 	%r7435, %r7434, %r6854;
	add.s32 	%r7436, %r7435, %r7429;
	add.s32 	%r6864, %r7436, -899497514;
	shf.l.wrap.b32 	%r6866, %r6856, %r6856, 30;
	shf.l.wrap.b32 	%r7437, %r6864, %r6864, 5;
	// begin inline asm
	lop3.b32 %r6859, %r6860, %r6866, %r6862, 150;
	// end inline asm
	xor.b32  	%r7438, %r7329, %r7313;
	xor.b32  	%r7439, %r7438, %r7377;
	xor.b32  	%r7440, %r7439, %r7417;
	shf.l.wrap.b32 	%r7441, %r7440, %r7440, 1;
	add.s32 	%r7442, %r6859, %r7441;
	add.s32 	%r7443, %r7442, %r6858;
	add.s32 	%r7444, %r7443, %r7437;
	add.s32 	%r6868, %r7444, -899497514;
	shf.l.wrap.b32 	%r6870, %r6860, %r6860, 30;
	shf.l.wrap.b32 	%r7445, %r6868, %r6868, 5;
	// begin inline asm
	lop3.b32 %r6863, %r6864, %r6870, %r6866, 150;
	// end inline asm
	xor.b32  	%r7446, %r7337, %r7321;
	xor.b32  	%r7447, %r7446, %r7385;
	xor.b32  	%r7448, %r7447, %r7425;
	shf.l.wrap.b32 	%r7449, %r7448, %r7448, 1;
	add.s32 	%r7450, %r6863, %r7449;
	add.s32 	%r7451, %r7450, %r6862;
	add.s32 	%r7452, %r7451, %r7445;
	add.s32 	%r6872, %r7452, -899497514;
	shf.l.wrap.b32 	%r6874, %r6864, %r6864, 30;
	shf.l.wrap.b32 	%r7453, %r6872, %r6872, 5;
	// begin inline asm
	lop3.b32 %r6867, %r6868, %r6874, %r6870, 150;
	// end inline asm
	xor.b32  	%r7454, %r7345, %r7329;
	xor.b32  	%r7455, %r7454, %r7393;
	xor.b32  	%r7456, %r7455, %r7433;
	shf.l.wrap.b32 	%r7457, %r7456, %r7456, 1;
	add.s32 	%r7458, %r6867, %r7457;
	add.s32 	%r7459, %r7458, %r6866;
	add.s32 	%r7460, %r7459, %r7453;
	add.s32 	%r6876, %r7460, -899497514;
	shf.l.wrap.b32 	%r6878, %r6868, %r6868, 30;
	shf.l.wrap.b32 	%r7461, %r6876, %r6876, 5;
	// begin inline asm
	lop3.b32 %r6871, %r6872, %r6878, %r6874, 150;
	// end inline asm
	xor.b32  	%r7462, %r7353, %r7337;
	xor.b32  	%r7463, %r7462, %r7401;
	xor.b32  	%r7464, %r7463, %r7441;
	shf.l.wrap.b32 	%r7465, %r7464, %r7464, 1;
	add.s32 	%r7466, %r6871, %r7465;
	add.s32 	%r7467, %r7466, %r6870;
	add.s32 	%r7468, %r7467, %r7461;
	add.s32 	%r6880, %r7468, -899497514;
	shf.l.wrap.b32 	%r6882, %r6872, %r6872, 30;
	shf.l.wrap.b32 	%r7469, %r6880, %r6880, 5;
	// begin inline asm
	lop3.b32 %r6875, %r6876, %r6882, %r6878, 150;
	// end inline asm
	xor.b32  	%r7470, %r7361, %r7345;
	xor.b32  	%r7471, %r7470, %r7409;
	xor.b32  	%r7472, %r7471, %r7449;
	shf.l.wrap.b32 	%r7473, %r7472, %r7472, 1;
	add.s32 	%r7474, %r6875, %r7473;
	add.s32 	%r7475, %r7474, %r6874;
	add.s32 	%r7476, %r7475, %r7469;
	add.s32 	%r6884, %r7476, -899497514;
	shf.l.wrap.b32 	%r6886, %r6876, %r6876, 30;
	shf.l.wrap.b32 	%r7477, %r6884, %r6884, 5;
	// begin inline asm
	lop3.b32 %r6879, %r6880, %r6886, %r6882, 150;
	// end inline asm
	xor.b32  	%r7478, %r7369, %r7353;
	xor.b32  	%r7479, %r7478, %r7417;
	xor.b32  	%r7480, %r7479, %r7457;
	shf.l.wrap.b32 	%r7481, %r7480, %r7480, 1;
	add.s32 	%r7482, %r6879, %r7481;
	add.s32 	%r7483, %r7482, %r6878;
	add.s32 	%r7484, %r7483, %r7477;
	add.s32 	%r6888, %r7484, -899497514;
	shf.l.wrap.b32 	%r6890, %r6880, %r6880, 30;
	shf.l.wrap.b32 	%r7485, %r6888, %r6888, 5;
	// begin inline asm
	lop3.b32 %r6883, %r6884, %r6890, %r6886, 150;
	// end inline asm
	xor.b32  	%r7486, %r7377, %r7361;
	xor.b32  	%r7487, %r7486, %r7425;
	xor.b32  	%r7488, %r7487, %r7465;
	shf.l.wrap.b32 	%r7489, %r7488, %r7488, 1;
	add.s32 	%r7490, %r6883, %r7489;
	add.s32 	%r7491, %r7490, %r6882;
	add.s32 	%r7492, %r7491, %r7485;
	add.s32 	%r7493, %r7492, -899497514;
	shf.l.wrap.b32 	%r6889, %r6884, %r6884, 30;
	shf.l.wrap.b32 	%r7494, %r7493, %r7493, 5;
	// begin inline asm
	lop3.b32 %r6887, %r6888, %r6889, %r6890, 150;
	// end inline asm
	xor.b32  	%r7495, %r7385, %r7369;
	xor.b32  	%r7496, %r7495, %r7433;
	xor.b32  	%r7497, %r7496, %r7473;
	shf.l.wrap.b32 	%r7498, %r7497, %r7497, 1;
	shf.l.wrap.b32 	%r7499, %r6888, %r6888, 30;
	add.s32 	%r7500, %r10293, %r6887;
	add.s32 	%r7501, %r7500, %r7498;
	add.s32 	%r7502, %r7501, %r6886;
	add.s32 	%r7503, %r7502, %r7494;
	add.s32 	%r10293, %r7503, -899497514;
	add.s32 	%r10294, %r7493, %r10294;
	add.s32 	%r10295, %r7499, %r10295;
	add.s32 	%r10296, %r6889, %r10296;
	add.s32 	%r10297, %r6890, %r10297;
	add.s32 	%r7504, %r10292, 128;
	setp.gt.u32 	%p23, %r7504, %r32;
	mov.u32 	%r10292, %r10304;
	@%p23 bra 	$L__BB3_34;
	bra.uni 	$L__BB3_32;

$L__BB3_34:
	mov.u32 	%r10303, 0;
	st.local.v4.u32 	[%rd9262], {%r10303, %r10303, %r10303, %r10303};
	st.local.v4.u32 	[%rd9262+16], {%r10303, %r10303, %r10303, %r10303};
	st.local.v4.u32 	[%rd9262+32], {%r10303, %r10303, %r10303, %r10303};
	st.local.v4.u32 	[%rd9262+48], {%r10303, %r10303, %r10303, %r10303};
	setp.le.u32 	%p24, %r32, %r10304;
	@%p24 bra 	$L__BB3_40;

	sub.s32 	%r59, %r32, %r10304;
	not.b32 	%r7508, %r10304;
	add.s32 	%r7509, %r32, %r7508;
	and.b32  	%r10307, %r59, 3;
	setp.lt.u32 	%p25, %r7509, 3;
	@%p25 bra 	$L__BB3_38;

	sub.s32 	%r10302, %r59, %r10307;
	mov.u32 	%r10303, 0;
	add.s64 	%rd9215, %rd172, 12;

$L__BB3_37:
	cvt.u64.u32 	%rd9214, %r10304;
	add.s64 	%rd9216, %rd9215, %rd9214;
	ld.global.u8 	%rs227, [%rd9216];
	or.b32  	%r7511, %r10303, 3;
	cvt.u64.u32 	%rd9217, %r7511;
	add.s64 	%rd9218, %rd9262, %rd9217;
	st.local.u8 	[%rd9218], %rs227;
	add.s32 	%r7512, %r10304, 1;
	cvt.u64.u32 	%rd9219, %r7512;
	add.s64 	%rd9220, %rd9215, %rd9219;
	ld.global.u8 	%rs228, [%rd9220];
	add.s32 	%r7513, %r10303, 1;
	xor.b32  	%r7514, %r7513, 3;
	cvt.u64.u32 	%rd9221, %r7514;
	add.s64 	%rd9222, %rd9262, %rd9221;
	st.local.u8 	[%rd9222], %rs228;
	add.s32 	%r7515, %r10304, 2;
	cvt.u64.u32 	%rd9223, %r7515;
	add.s64 	%rd9224, %rd9215, %rd9223;
	ld.global.u8 	%rs229, [%rd9224];
	add.s32 	%r7516, %r10303, 2;
	xor.b32  	%r7517, %r7516, 3;
	cvt.u64.u32 	%rd9225, %r7517;
	add.s64 	%rd9226, %rd9262, %rd9225;
	st.local.u8 	[%rd9226], %rs229;
	add.s32 	%r7518, %r10304, 3;
	cvt.u64.u32 	%rd9227, %r7518;
	add.s64 	%rd9228, %rd9215, %rd9227;
	ld.global.u8 	%rs230, [%rd9228];
	add.s32 	%r7519, %r10303, 3;
	and.b32  	%r7520, %r7519, -4;
	cvt.u64.u32 	%rd9229, %r7520;
	add.s64 	%rd9230, %rd9262, %rd9229;
	st.local.u8 	[%rd9230], %rs230;
	add.s32 	%r10303, %r10303, 4;
	add.s32 	%r10304, %r10304, 4;
	add.s32 	%r10302, %r10302, -4;
	setp.ne.s32 	%p26, %r10302, 0;
	@%p26 bra 	$L__BB3_37;

$L__BB3_38:
	setp.eq.s32 	%p27, %r10307, 0;
	@%p27 bra 	$L__BB3_40;

$L__BB3_39:
	.pragma "nounroll";
	cvt.u64.u32 	%rd9231, %r10304;
	add.s64 	%rd9232, %rd172, %rd9231;
	ld.global.u8 	%rs231, [%rd9232+12];
	xor.b32  	%r7521, %r10303, 3;
	cvt.u64.u32 	%rd9233, %r7521;
	add.s64 	%rd9234, %rd9262, %rd9233;
	st.local.u8 	[%rd9234], %rs231;
	add.s32 	%r10303, %r10303, 1;
	add.s32 	%r10304, %r10304, 1;
	add.s32 	%r10307, %r10307, -1;
	setp.ne.s32 	%p28, %r10307, 0;
	@%p28 bra 	$L__BB3_39;

$L__BB3_40:
	setp.lt.u32 	%p29, %r10299, 52;
	@%p29 bra 	$L__BB3_49;
	bra.uni 	$L__BB3_41;

$L__BB3_49:
	add.s32 	%r8462, %r10299, 3;
	xor.b32  	%r8463, %r8462, 3;
	cvt.u64.u32 	%rd9243, %r8463;
	add.s64 	%rd9244, %rd9262, %rd9243;
	st.local.u8 	[%rd9244], %rs1;
	add.s32 	%r8464, %r10299, 4;
	xor.b32  	%r8465, %r8464, 3;
	cvt.u64.u32 	%rd9245, %r8465;
	add.s64 	%rd9246, %rd9262, %rd9245;
	mov.u16 	%rs234, 128;
	st.local.u8 	[%rd9246], %rs234;
	bra.uni 	$L__BB3_50;

$L__BB3_41:
	setp.gt.u32 	%p30, %r10299, 60;
	@%p30 bra 	$L__BB3_43;

	add.s32 	%r7522, %r10299, 3;
	xor.b32  	%r7523, %r7522, 3;
	cvt.u64.u32 	%rd9235, %r7523;
	add.s64 	%rd9236, %rd9262, %rd9235;
	st.local.u8 	[%rd9236], %rs1;

$L__BB3_43:
	setp.gt.u32 	%p31, %r10299, 59;
	@%p31 bra 	$L__BB3_45;

	add.s32 	%r7524, %r10299, 4;
	xor.b32  	%r7525, %r7524, 3;
	cvt.u64.u32 	%rd9237, %r7525;
	add.s64 	%rd9238, %rd9262, %rd9237;
	mov.u16 	%rs232, 128;
	st.local.u8 	[%rd9238], %rs232;

$L__BB3_45:
	shf.l.wrap.b32 	%r7846, %r10293, %r10293, 5;
	ld.local.v4.u32 	{%r7847, %r7848, %r7849, %r7850}, [%rd9262];
	add.s32 	%r7855, %r7846, %r10297;
	// begin inline asm
	lop3.b32 %r7526, %r10294, %r10295, %r10296, 202;
	// end inline asm
	add.s32 	%r7856, %r7855, %r7526;
	add.s32 	%r7857, %r7856, %r7847;
	add.s32 	%r7535, %r7857, 1518500249;
	shf.l.wrap.b32 	%r7858, %r7535, %r7535, 5;
	shf.l.wrap.b32 	%r7537, %r10294, %r10294, 30;
	// begin inline asm
	lop3.b32 %r7530, %r10293, %r7537, %r10295, 202;
	// end inline asm
	add.s32 	%r7859, %r10296, %r7530;
	add.s32 	%r7860, %r7859, %r7848;
	add.s32 	%r7861, %r7860, %r7858;
	add.s32 	%r7539, %r7861, 1518500249;
	shf.l.wrap.b32 	%r7862, %r7539, %r7539, 5;
	shf.l.wrap.b32 	%r7541, %r10293, %r10293, 30;
	// begin inline asm
	lop3.b32 %r7534, %r7535, %r7541, %r7537, 202;
	// end inline asm
	add.s32 	%r7863, %r10295, %r7534;
	add.s32 	%r7864, %r7863, %r7849;
	add.s32 	%r7865, %r7864, %r7862;
	add.s32 	%r7543, %r7865, 1518500249;
	shf.l.wrap.b32 	%r7545, %r7535, %r7535, 30;
	shf.l.wrap.b32 	%r7866, %r7543, %r7543, 5;
	// begin inline asm
	lop3.b32 %r7538, %r7539, %r7545, %r7541, 202;
	// end inline asm
	add.s32 	%r7867, %r7537, %r7538;
	add.s32 	%r7868, %r7867, %r7850;
	add.s32 	%r7869, %r7868, %r7866;
	add.s32 	%r7547, %r7869, 1518500249;
	shf.l.wrap.b32 	%r7549, %r7539, %r7539, 30;
	shf.l.wrap.b32 	%r7870, %r7547, %r7547, 5;
	// begin inline asm
	lop3.b32 %r7542, %r7543, %r7549, %r7545, 202;
	// end inline asm
	ld.local.v4.u32 	{%r7871, %r7872, %r7873, %r7874}, [%rd9262+16];
	add.s32 	%r7879, %r7541, %r7542;
	add.s32 	%r7880, %r7879, %r7871;
	add.s32 	%r7881, %r7880, %r7870;
	add.s32 	%r7551, %r7881, 1518500249;
	shf.l.wrap.b32 	%r7553, %r7543, %r7543, 30;
	shf.l.wrap.b32 	%r7882, %r7551, %r7551, 5;
	// begin inline asm
	lop3.b32 %r7546, %r7547, %r7553, %r7549, 202;
	// end inline asm
	add.s32 	%r7883, %r7545, %r7546;
	add.s32 	%r7884, %r7883, %r7872;
	add.s32 	%r7885, %r7884, %r7882;
	add.s32 	%r7555, %r7885, 1518500249;
	shf.l.wrap.b32 	%r7557, %r7547, %r7547, 30;
	shf.l.wrap.b32 	%r7886, %r7555, %r7555, 5;
	// begin inline asm
	lop3.b32 %r7550, %r7551, %r7557, %r7553, 202;
	// end inline asm
	add.s32 	%r7887, %r7549, %r7550;
	add.s32 	%r7888, %r7887, %r7873;
	add.s32 	%r7889, %r7888, %r7886;
	add.s32 	%r7559, %r7889, 1518500249;
	shf.l.wrap.b32 	%r7561, %r7551, %r7551, 30;
	shf.l.wrap.b32 	%r7890, %r7559, %r7559, 5;
	// begin inline asm
	lop3.b32 %r7554, %r7555, %r7561, %r7557, 202;
	// end inline asm
	add.s32 	%r7891, %r7554, %r7874;
	add.s32 	%r7892, %r7891, %r7553;
	add.s32 	%r7893, %r7892, %r7890;
	add.s32 	%r7563, %r7893, 1518500249;
	shf.l.wrap.b32 	%r7565, %r7555, %r7555, 30;
	shf.l.wrap.b32 	%r7894, %r7563, %r7563, 5;
	// begin inline asm
	lop3.b32 %r7558, %r7559, %r7565, %r7561, 202;
	// end inline asm
	ld.local.v4.u32 	{%r7895, %r7896, %r7897, %r7898}, [%rd9262+32];
	add.s32 	%r7903, %r7558, %r7895;
	add.s32 	%r7904, %r7903, %r7557;
	add.s32 	%r7905, %r7904, %r7894;
	add.s32 	%r7567, %r7905, 1518500249;
	shf.l.wrap.b32 	%r7569, %r7559, %r7559, 30;
	shf.l.wrap.b32 	%r7906, %r7567, %r7567, 5;
	// begin inline asm
	lop3.b32 %r7562, %r7563, %r7569, %r7565, 202;
	// end inline asm
	add.s32 	%r7907, %r7562, %r7896;
	add.s32 	%r7908, %r7907, %r7561;
	add.s32 	%r7909, %r7908, %r7906;
	add.s32 	%r7571, %r7909, 1518500249;
	shf.l.wrap.b32 	%r7573, %r7563, %r7563, 30;
	shf.l.wrap.b32 	%r7910, %r7571, %r7571, 5;
	// begin inline asm
	lop3.b32 %r7566, %r7567, %r7573, %r7569, 202;
	// end inline asm
	add.s32 	%r7911, %r7566, %r7897;
	add.s32 	%r7912, %r7911, %r7565;
	add.s32 	%r7913, %r7912, %r7910;
	add.s32 	%r7575, %r7913, 1518500249;
	shf.l.wrap.b32 	%r7577, %r7567, %r7567, 30;
	shf.l.wrap.b32 	%r7914, %r7575, %r7575, 5;
	// begin inline asm
	lop3.b32 %r7570, %r7571, %r7577, %r7573, 202;
	// end inline asm
	add.s32 	%r7915, %r7570, %r7898;
	add.s32 	%r7916, %r7915, %r7569;
	add.s32 	%r7917, %r7916, %r7914;
	add.s32 	%r7579, %r7917, 1518500249;
	shf.l.wrap.b32 	%r7581, %r7571, %r7571, 30;
	shf.l.wrap.b32 	%r7918, %r7579, %r7579, 5;
	// begin inline asm
	lop3.b32 %r7574, %r7575, %r7581, %r7577, 202;
	// end inline asm
	ld.local.v4.u32 	{%r7919, %r7920, %r7921, %r7922}, [%rd9262+48];
	add.s32 	%r7927, %r7574, %r7919;
	add.s32 	%r7928, %r7927, %r7573;
	add.s32 	%r7929, %r7928, %r7918;
	add.s32 	%r7583, %r7929, 1518500249;
	shf.l.wrap.b32 	%r7585, %r7575, %r7575, 30;
	shf.l.wrap.b32 	%r7930, %r7583, %r7583, 5;
	// begin inline asm
	lop3.b32 %r7578, %r7579, %r7585, %r7581, 202;
	// end inline asm
	add.s32 	%r7931, %r7578, %r7920;
	add.s32 	%r7932, %r7931, %r7577;
	add.s32 	%r7933, %r7932, %r7930;
	add.s32 	%r7587, %r7933, 1518500249;
	shf.l.wrap.b32 	%r7589, %r7579, %r7579, 30;
	shf.l.wrap.b32 	%r7934, %r7587, %r7587, 5;
	// begin inline asm
	lop3.b32 %r7582, %r7583, %r7589, %r7585, 202;
	// end inline asm
	add.s32 	%r7935, %r7582, %r7921;
	add.s32 	%r7936, %r7935, %r7581;
	add.s32 	%r7937, %r7936, %r7934;
	add.s32 	%r7591, %r7937, 1518500249;
	shf.l.wrap.b32 	%r7593, %r7583, %r7583, 30;
	shf.l.wrap.b32 	%r7938, %r7591, %r7591, 5;
	// begin inline asm
	lop3.b32 %r7586, %r7587, %r7593, %r7589, 202;
	// end inline asm
	add.s32 	%r7939, %r7586, %r7922;
	add.s32 	%r7940, %r7939, %r7585;
	add.s32 	%r7941, %r7940, %r7938;
	add.s32 	%r7595, %r7941, 1518500249;
	shf.l.wrap.b32 	%r7597, %r7587, %r7587, 30;
	shf.l.wrap.b32 	%r7942, %r7595, %r7595, 5;
	// begin inline asm
	lop3.b32 %r7590, %r7591, %r7597, %r7593, 202;
	// end inline asm
	xor.b32  	%r7943, %r7895, %r7920;
	xor.b32  	%r7944, %r7943, %r7849;
	xor.b32  	%r7945, %r7944, %r7847;
	shf.l.wrap.b32 	%r7946, %r7945, %r7945, 1;
	add.s32 	%r7947, %r7590, %r7946;
	add.s32 	%r7948, %r7947, %r7589;
	add.s32 	%r7949, %r7948, %r7942;
	add.s32 	%r7599, %r7949, 1518500249;
	shf.l.wrap.b32 	%r7601, %r7591, %r7591, 30;
	shf.l.wrap.b32 	%r7950, %r7599, %r7599, 5;
	// begin inline asm
	lop3.b32 %r7594, %r7595, %r7601, %r7597, 202;
	// end inline asm
	xor.b32  	%r7951, %r7896, %r7921;
	xor.b32  	%r7952, %r7951, %r7850;
	xor.b32  	%r7953, %r7952, %r7848;
	shf.l.wrap.b32 	%r7954, %r7953, %r7953, 1;
	add.s32 	%r7955, %r7594, %r7954;
	add.s32 	%r7956, %r7955, %r7593;
	add.s32 	%r7957, %r7956, %r7950;
	add.s32 	%r7603, %r7957, 1518500249;
	shf.l.wrap.b32 	%r7605, %r7595, %r7595, 30;
	shf.l.wrap.b32 	%r7958, %r7603, %r7603, 5;
	// begin inline asm
	lop3.b32 %r7598, %r7599, %r7605, %r7601, 202;
	// end inline asm
	xor.b32  	%r7959, %r7897, %r7922;
	xor.b32  	%r7960, %r7959, %r7871;
	xor.b32  	%r7961, %r7960, %r7849;
	shf.l.wrap.b32 	%r7962, %r7961, %r7961, 1;
	add.s32 	%r7963, %r7598, %r7962;
	add.s32 	%r7964, %r7963, %r7597;
	add.s32 	%r7965, %r7964, %r7958;
	add.s32 	%r7607, %r7965, 1518500249;
	shf.l.wrap.b32 	%r7609, %r7599, %r7599, 30;
	shf.l.wrap.b32 	%r7966, %r7607, %r7607, 5;
	// begin inline asm
	lop3.b32 %r7602, %r7603, %r7609, %r7605, 202;
	// end inline asm
	xor.b32  	%r7967, %r7898, %r7946;
	xor.b32  	%r7968, %r7967, %r7872;
	xor.b32  	%r7969, %r7968, %r7850;
	shf.l.wrap.b32 	%r7970, %r7969, %r7969, 1;
	add.s32 	%r7971, %r7602, %r7970;
	add.s32 	%r7972, %r7971, %r7601;
	add.s32 	%r7973, %r7972, %r7966;
	add.s32 	%r7611, %r7973, 1518500249;
	shf.l.wrap.b32 	%r7613, %r7603, %r7603, 30;
	shf.l.wrap.b32 	%r7974, %r7611, %r7611, 5;
	// begin inline asm
	lop3.b32 %r7606, %r7607, %r7613, %r7609, 150;
	// end inline asm
	xor.b32  	%r7975, %r7919, %r7954;
	xor.b32  	%r7976, %r7975, %r7873;
	xor.b32  	%r7977, %r7976, %r7871;
	shf.l.wrap.b32 	%r7978, %r7977, %r7977, 1;
	add.s32 	%r7979, %r7606, %r7978;
	add.s32 	%r7980, %r7979, %r7605;
	add.s32 	%r7981, %r7980, %r7974;
	add.s32 	%r7615, %r7981, 1859775393;
	shf.l.wrap.b32 	%r7617, %r7607, %r7607, 30;
	shf.l.wrap.b32 	%r7982, %r7615, %r7615, 5;
	// begin inline asm
	lop3.b32 %r7610, %r7611, %r7617, %r7613, 150;
	// end inline asm
	xor.b32  	%r7983, %r7920, %r7962;
	xor.b32  	%r7984, %r7983, %r7874;
	xor.b32  	%r7985, %r7984, %r7872;
	shf.l.wrap.b32 	%r7986, %r7985, %r7985, 1;
	add.s32 	%r7987, %r7610, %r7986;
	add.s32 	%r7988, %r7987, %r7609;
	add.s32 	%r7989, %r7988, %r7982;
	add.s32 	%r7619, %r7989, 1859775393;
	shf.l.wrap.b32 	%r7621, %r7611, %r7611, 30;
	shf.l.wrap.b32 	%r7990, %r7619, %r7619, 5;
	// begin inline asm
	lop3.b32 %r7614, %r7615, %r7621, %r7617, 150;
	// end inline asm
	xor.b32  	%r7991, %r7921, %r7970;
	xor.b32  	%r7992, %r7991, %r7895;
	xor.b32  	%r7993, %r7992, %r7873;
	shf.l.wrap.b32 	%r7994, %r7993, %r7993, 1;
	add.s32 	%r7995, %r7614, %r7994;
	add.s32 	%r7996, %r7995, %r7613;
	add.s32 	%r7997, %r7996, %r7990;
	add.s32 	%r7623, %r7997, 1859775393;
	shf.l.wrap.b32 	%r7625, %r7615, %r7615, 30;
	shf.l.wrap.b32 	%r7998, %r7623, %r7623, 5;
	// begin inline asm
	lop3.b32 %r7618, %r7619, %r7625, %r7621, 150;
	// end inline asm
	xor.b32  	%r7999, %r7922, %r7978;
	xor.b32  	%r8000, %r7999, %r7896;
	xor.b32  	%r8001, %r8000, %r7874;
	shf.l.wrap.b32 	%r8002, %r8001, %r8001, 1;
	add.s32 	%r8003, %r7618, %r8002;
	add.s32 	%r8004, %r8003, %r7617;
	add.s32 	%r8005, %r8004, %r7998;
	add.s32 	%r7627, %r8005, 1859775393;
	shf.l.wrap.b32 	%r7629, %r7619, %r7619, 30;
	shf.l.wrap.b32 	%r8006, %r7627, %r7627, 5;
	// begin inline asm
	lop3.b32 %r7622, %r7623, %r7629, %r7625, 150;
	// end inline asm
	xor.b32  	%r8007, %r7986, %r7946;
	xor.b32  	%r8008, %r8007, %r7897;
	xor.b32  	%r8009, %r8008, %r7895;
	shf.l.wrap.b32 	%r8010, %r8009, %r8009, 1;
	add.s32 	%r8011, %r7622, %r8010;
	add.s32 	%r8012, %r8011, %r7621;
	add.s32 	%r8013, %r8012, %r8006;
	add.s32 	%r7631, %r8013, 1859775393;
	shf.l.wrap.b32 	%r7633, %r7623, %r7623, 30;
	shf.l.wrap.b32 	%r8014, %r7631, %r7631, 5;
	// begin inline asm
	lop3.b32 %r7626, %r7627, %r7633, %r7629, 150;
	// end inline asm
	xor.b32  	%r8015, %r7994, %r7954;
	xor.b32  	%r8016, %r8015, %r7898;
	xor.b32  	%r8017, %r8016, %r7896;
	shf.l.wrap.b32 	%r8018, %r8017, %r8017, 1;
	add.s32 	%r8019, %r7626, %r8018;
	add.s32 	%r8020, %r8019, %r7625;
	add.s32 	%r8021, %r8020, %r8014;
	add.s32 	%r7635, %r8021, 1859775393;
	shf.l.wrap.b32 	%r7637, %r7627, %r7627, 30;
	shf.l.wrap.b32 	%r8022, %r7635, %r7635, 5;
	// begin inline asm
	lop3.b32 %r7630, %r7631, %r7637, %r7633, 150;
	// end inline asm
	xor.b32  	%r8023, %r8002, %r7962;
	xor.b32  	%r8024, %r8023, %r7919;
	xor.b32  	%r8025, %r8024, %r7897;
	shf.l.wrap.b32 	%r8026, %r8025, %r8025, 1;
	add.s32 	%r8027, %r7630, %r8026;
	add.s32 	%r8028, %r8027, %r7629;
	add.s32 	%r8029, %r8028, %r8022;
	add.s32 	%r7639, %r8029, 1859775393;
	shf.l.wrap.b32 	%r7641, %r7631, %r7631, 30;
	shf.l.wrap.b32 	%r8030, %r7639, %r7639, 5;
	// begin inline asm
	lop3.b32 %r7634, %r7635, %r7641, %r7637, 150;
	// end inline asm
	xor.b32  	%r8031, %r8010, %r7970;
	xor.b32  	%r8032, %r8031, %r7920;
	xor.b32  	%r8033, %r8032, %r7898;
	shf.l.wrap.b32 	%r8034, %r8033, %r8033, 1;
	add.s32 	%r8035, %r7634, %r8034;
	add.s32 	%r8036, %r8035, %r7633;
	add.s32 	%r8037, %r8036, %r8030;
	add.s32 	%r7643, %r8037, 1859775393;
	shf.l.wrap.b32 	%r7645, %r7635, %r7635, 30;
	shf.l.wrap.b32 	%r8038, %r7643, %r7643, 5;
	// begin inline asm
	lop3.b32 %r7638, %r7639, %r7645, %r7641, 150;
	// end inline asm
	xor.b32  	%r8039, %r8018, %r7978;
	xor.b32  	%r8040, %r8039, %r7921;
	xor.b32  	%r8041, %r8040, %r7919;
	shf.l.wrap.b32 	%r8042, %r8041, %r8041, 1;
	add.s32 	%r8043, %r7638, %r8042;
	add.s32 	%r8044, %r8043, %r7637;
	add.s32 	%r8045, %r8044, %r8038;
	add.s32 	%r7647, %r8045, 1859775393;
	shf.l.wrap.b32 	%r7649, %r7639, %r7639, 30;
	shf.l.wrap.b32 	%r8046, %r7647, %r7647, 5;
	// begin inline asm
	lop3.b32 %r7642, %r7643, %r7649, %r7645, 150;
	// end inline asm
	xor.b32  	%r8047, %r8026, %r7986;
	xor.b32  	%r8048, %r8047, %r7922;
	xor.b32  	%r8049, %r8048, %r7920;
	shf.l.wrap.b32 	%r8050, %r8049, %r8049, 1;
	add.s32 	%r8051, %r7642, %r8050;
	add.s32 	%r8052, %r8051, %r7641;
	add.s32 	%r8053, %r8052, %r8046;
	add.s32 	%r7651, %r8053, 1859775393;
	shf.l.wrap.b32 	%r7653, %r7643, %r7643, 30;
	shf.l.wrap.b32 	%r8054, %r7651, %r7651, 5;
	// begin inline asm
	lop3.b32 %r7646, %r7647, %r7653, %r7649, 150;
	// end inline asm
	xor.b32  	%r8055, %r7994, %r7946;
	xor.b32  	%r8056, %r8055, %r8034;
	xor.b32  	%r8057, %r8056, %r7921;
	shf.l.wrap.b32 	%r8058, %r8057, %r8057, 1;
	add.s32 	%r8059, %r7646, %r8058;
	add.s32 	%r8060, %r8059, %r7645;
	add.s32 	%r8061, %r8060, %r8054;
	add.s32 	%r7655, %r8061, 1859775393;
	shf.l.wrap.b32 	%r7657, %r7647, %r7647, 30;
	shf.l.wrap.b32 	%r8062, %r7655, %r7655, 5;
	// begin inline asm
	lop3.b32 %r7650, %r7651, %r7657, %r7653, 150;
	// end inline asm
	xor.b32  	%r8063, %r8002, %r7954;
	xor.b32  	%r8064, %r8063, %r8042;
	xor.b32  	%r8065, %r8064, %r7922;
	shf.l.wrap.b32 	%r8066, %r8065, %r8065, 1;
	add.s32 	%r8067, %r7650, %r8066;
	add.s32 	%r8068, %r8067, %r7649;
	add.s32 	%r8069, %r8068, %r8062;
	add.s32 	%r7659, %r8069, 1859775393;
	shf.l.wrap.b32 	%r7661, %r7651, %r7651, 30;
	shf.l.wrap.b32 	%r8070, %r7659, %r7659, 5;
	// begin inline asm
	lop3.b32 %r7654, %r7655, %r7661, %r7657, 150;
	// end inline asm
	xor.b32  	%r8071, %r7962, %r7946;
	xor.b32  	%r8072, %r8071, %r8010;
	xor.b32  	%r8073, %r8072, %r8050;
	shf.l.wrap.b32 	%r8074, %r8073, %r8073, 1;
	add.s32 	%r8075, %r7654, %r8074;
	add.s32 	%r8076, %r8075, %r7653;
	add.s32 	%r8077, %r8076, %r8070;
	add.s32 	%r7663, %r8077, 1859775393;
	shf.l.wrap.b32 	%r7665, %r7655, %r7655, 30;
	shf.l.wrap.b32 	%r8078, %r7663, %r7663, 5;
	// begin inline asm
	lop3.b32 %r7658, %r7659, %r7665, %r7661, 150;
	// end inline asm
	xor.b32  	%r8079, %r7970, %r7954;
	xor.b32  	%r8080, %r8079, %r8018;
	xor.b32  	%r8081, %r8080, %r8058;
	shf.l.wrap.b32 	%r8082, %r8081, %r8081, 1;
	add.s32 	%r8083, %r7658, %r8082;
	add.s32 	%r8084, %r8083, %r7657;
	add.s32 	%r8085, %r8084, %r8078;
	add.s32 	%r7667, %r8085, 1859775393;
	shf.l.wrap.b32 	%r7669, %r7659, %r7659, 30;
	shf.l.wrap.b32 	%r8086, %r7667, %r7667, 5;
	// begin inline asm
	lop3.b32 %r7662, %r7663, %r7669, %r7665, 150;
	// end inline asm
	xor.b32  	%r8087, %r7978, %r7962;
	xor.b32  	%r8088, %r8087, %r8026;
	xor.b32  	%r8089, %r8088, %r8066;
	shf.l.wrap.b32 	%r8090, %r8089, %r8089, 1;
	add.s32 	%r8091, %r7662, %r8090;
	add.s32 	%r8092, %r8091, %r7661;
	add.s32 	%r8093, %r8092, %r8086;
	add.s32 	%r7671, %r8093, 1859775393;
	shf.l.wrap.b32 	%r7673, %r7663, %r7663, 30;
	shf.l.wrap.b32 	%r8094, %r7671, %r7671, 5;
	// begin inline asm
	lop3.b32 %r7666, %r7667, %r7673, %r7669, 150;
	// end inline asm
	xor.b32  	%r8095, %r7986, %r7970;
	xor.b32  	%r8096, %r8095, %r8034;
	xor.b32  	%r8097, %r8096, %r8074;
	shf.l.wrap.b32 	%r8098, %r8097, %r8097, 1;
	add.s32 	%r8099, %r7666, %r8098;
	add.s32 	%r8100, %r8099, %r7665;
	add.s32 	%r8101, %r8100, %r8094;
	add.s32 	%r7675, %r8101, 1859775393;
	shf.l.wrap.b32 	%r7677, %r7667, %r7667, 30;
	shf.l.wrap.b32 	%r8102, %r7675, %r7675, 5;
	// begin inline asm
	lop3.b32 %r7670, %r7671, %r7677, %r7673, 150;
	// end inline asm
	xor.b32  	%r8103, %r7994, %r7978;
	xor.b32  	%r8104, %r8103, %r8042;
	xor.b32  	%r8105, %r8104, %r8082;
	shf.l.wrap.b32 	%r8106, %r8105, %r8105, 1;
	add.s32 	%r8107, %r7670, %r8106;
	add.s32 	%r8108, %r8107, %r7669;
	add.s32 	%r8109, %r8108, %r8102;
	add.s32 	%r7679, %r8109, 1859775393;
	shf.l.wrap.b32 	%r7681, %r7671, %r7671, 30;
	shf.l.wrap.b32 	%r8110, %r7679, %r7679, 5;
	// begin inline asm
	lop3.b32 %r7674, %r7675, %r7681, %r7677, 150;
	// end inline asm
	xor.b32  	%r8111, %r8002, %r7986;
	xor.b32  	%r8112, %r8111, %r8050;
	xor.b32  	%r8113, %r8112, %r8090;
	shf.l.wrap.b32 	%r8114, %r8113, %r8113, 1;
	add.s32 	%r8115, %r7674, %r8114;
	add.s32 	%r8116, %r8115, %r7673;
	add.s32 	%r8117, %r8116, %r8110;
	add.s32 	%r7683, %r8117, 1859775393;
	shf.l.wrap.b32 	%r7685, %r7675, %r7675, 30;
	shf.l.wrap.b32 	%r8118, %r7683, %r7683, 5;
	// begin inline asm
	lop3.b32 %r7678, %r7679, %r7685, %r7681, 150;
	// end inline asm
	xor.b32  	%r8119, %r8010, %r7994;
	xor.b32  	%r8120, %r8119, %r8058;
	xor.b32  	%r8121, %r8120, %r8098;
	shf.l.wrap.b32 	%r8122, %r8121, %r8121, 1;
	add.s32 	%r8123, %r7678, %r8122;
	add.s32 	%r8124, %r8123, %r7677;
	add.s32 	%r8125, %r8124, %r8118;
	add.s32 	%r7687, %r8125, 1859775393;
	shf.l.wrap.b32 	%r7689, %r7679, %r7679, 30;
	shf.l.wrap.b32 	%r8126, %r7687, %r7687, 5;
	// begin inline asm
	lop3.b32 %r7682, %r7683, %r7689, %r7685, 150;
	// end inline asm
	xor.b32  	%r8127, %r8018, %r8002;
	xor.b32  	%r8128, %r8127, %r8066;
	xor.b32  	%r8129, %r8128, %r8106;
	shf.l.wrap.b32 	%r8130, %r8129, %r8129, 1;
	add.s32 	%r8131, %r7682, %r8130;
	add.s32 	%r8132, %r8131, %r7681;
	add.s32 	%r8133, %r8132, %r8126;
	add.s32 	%r7691, %r8133, 1859775393;
	shf.l.wrap.b32 	%r7693, %r7683, %r7683, 30;
	shf.l.wrap.b32 	%r8134, %r7691, %r7691, 5;
	// begin inline asm
	lop3.b32 %r7686, %r7687, %r7693, %r7689, 232;
	// end inline asm
	xor.b32  	%r8135, %r8026, %r8010;
	xor.b32  	%r8136, %r8135, %r8074;
	xor.b32  	%r8137, %r8136, %r8114;
	shf.l.wrap.b32 	%r8138, %r8137, %r8137, 1;
	add.s32 	%r8139, %r7686, %r8138;
	add.s32 	%r8140, %r8139, %r7685;
	add.s32 	%r8141, %r8140, %r8134;
	add.s32 	%r7695, %r8141, -1894007588;
	shf.l.wrap.b32 	%r7697, %r7687, %r7687, 30;
	shf.l.wrap.b32 	%r8142, %r7695, %r7695, 5;
	// begin inline asm
	lop3.b32 %r7690, %r7691, %r7697, %r7693, 232;
	// end inline asm
	xor.b32  	%r8143, %r8034, %r8018;
	xor.b32  	%r8144, %r8143, %r8082;
	xor.b32  	%r8145, %r8144, %r8122;
	shf.l.wrap.b32 	%r8146, %r8145, %r8145, 1;
	add.s32 	%r8147, %r7690, %r8146;
	add.s32 	%r8148, %r8147, %r7689;
	add.s32 	%r8149, %r8148, %r8142;
	add.s32 	%r7699, %r8149, -1894007588;
	shf.l.wrap.b32 	%r7701, %r7691, %r7691, 30;
	shf.l.wrap.b32 	%r8150, %r7699, %r7699, 5;
	// begin inline asm
	lop3.b32 %r7694, %r7695, %r7701, %r7697, 232;
	// end inline asm
	xor.b32  	%r8151, %r8042, %r8026;
	xor.b32  	%r8152, %r8151, %r8090;
	xor.b32  	%r8153, %r8152, %r8130;
	shf.l.wrap.b32 	%r8154, %r8153, %r8153, 1;
	add.s32 	%r8155, %r7694, %r8154;
	add.s32 	%r8156, %r8155, %r7693;
	add.s32 	%r8157, %r8156, %r8150;
	add.s32 	%r7703, %r8157, -1894007588;
	shf.l.wrap.b32 	%r7705, %r7695, %r7695, 30;
	shf.l.wrap.b32 	%r8158, %r7703, %r7703, 5;
	// begin inline asm
	lop3.b32 %r7698, %r7699, %r7705, %r7701, 232;
	// end inline asm
	xor.b32  	%r8159, %r8050, %r8034;
	xor.b32  	%r8160, %r8159, %r8098;
	xor.b32  	%r8161, %r8160, %r8138;
	shf.l.wrap.b32 	%r8162, %r8161, %r8161, 1;
	add.s32 	%r8163, %r7698, %r8162;
	add.s32 	%r8164, %r8163, %r7697;
	add.s32 	%r8165, %r8164, %r8158;
	add.s32 	%r7707, %r8165, -1894007588;
	shf.l.wrap.b32 	%r7709, %r7699, %r7699, 30;
	shf.l.wrap.b32 	%r8166, %r7707, %r7707, 5;
	// begin inline asm
	lop3.b32 %r7702, %r7703, %r7709, %r7705, 232;
	// end inline asm
	xor.b32  	%r8167, %r8058, %r8042;
	xor.b32  	%r8168, %r8167, %r8106;
	xor.b32  	%r8169, %r8168, %r8146;
	shf.l.wrap.b32 	%r8170, %r8169, %r8169, 1;
	add.s32 	%r8171, %r7702, %r8170;
	add.s32 	%r8172, %r8171, %r7701;
	add.s32 	%r8173, %r8172, %r8166;
	add.s32 	%r7711, %r8173, -1894007588;
	shf.l.wrap.b32 	%r7713, %r7703, %r7703, 30;
	shf.l.wrap.b32 	%r8174, %r7711, %r7711, 5;
	// begin inline asm
	lop3.b32 %r7706, %r7707, %r7713, %r7709, 232;
	// end inline asm
	xor.b32  	%r8175, %r8066, %r8050;
	xor.b32  	%r8176, %r8175, %r8114;
	xor.b32  	%r8177, %r8176, %r8154;
	shf.l.wrap.b32 	%r8178, %r8177, %r8177, 1;
	add.s32 	%r8179, %r7706, %r8178;
	add.s32 	%r8180, %r8179, %r7705;
	add.s32 	%r8181, %r8180, %r8174;
	add.s32 	%r7715, %r8181, -1894007588;
	shf.l.wrap.b32 	%r7717, %r7707, %r7707, 30;
	shf.l.wrap.b32 	%r8182, %r7715, %r7715, 5;
	// begin inline asm
	lop3.b32 %r7710, %r7711, %r7717, %r7713, 232;
	// end inline asm
	xor.b32  	%r8183, %r8074, %r8058;
	xor.b32  	%r8184, %r8183, %r8122;
	xor.b32  	%r8185, %r8184, %r8162;
	shf.l.wrap.b32 	%r8186, %r8185, %r8185, 1;
	add.s32 	%r8187, %r7710, %r8186;
	add.s32 	%r8188, %r8187, %r7709;
	add.s32 	%r8189, %r8188, %r8182;
	add.s32 	%r7719, %r8189, -1894007588;
	shf.l.wrap.b32 	%r7721, %r7711, %r7711, 30;
	shf.l.wrap.b32 	%r8190, %r7719, %r7719, 5;
	// begin inline asm
	lop3.b32 %r7714, %r7715, %r7721, %r7717, 232;
	// end inline asm
	xor.b32  	%r8191, %r8082, %r8066;
	xor.b32  	%r8192, %r8191, %r8130;
	xor.b32  	%r8193, %r8192, %r8170;
	shf.l.wrap.b32 	%r8194, %r8193, %r8193, 1;
	add.s32 	%r8195, %r7714, %r8194;
	add.s32 	%r8196, %r8195, %r7713;
	add.s32 	%r8197, %r8196, %r8190;
	add.s32 	%r7723, %r8197, -1894007588;
	shf.l.wrap.b32 	%r7725, %r7715, %r7715, 30;
	shf.l.wrap.b32 	%r8198, %r7723, %r7723, 5;
	// begin inline asm
	lop3.b32 %r7718, %r7719, %r7725, %r7721, 232;
	// end inline asm
	xor.b32  	%r8199, %r8090, %r8074;
	xor.b32  	%r8200, %r8199, %r8138;
	xor.b32  	%r8201, %r8200, %r8178;
	shf.l.wrap.b32 	%r8202, %r8201, %r8201, 1;
	add.s32 	%r8203, %r7718, %r8202;
	add.s32 	%r8204, %r8203, %r7717;
	add.s32 	%r8205, %r8204, %r8198;
	add.s32 	%r7727, %r8205, -1894007588;
	shf.l.wrap.b32 	%r7729, %r7719, %r7719, 30;
	shf.l.wrap.b32 	%r8206, %r7727, %r7727, 5;
	// begin inline asm
	lop3.b32 %r7722, %r7723, %r7729, %r7725, 232;
	// end inline asm
	xor.b32  	%r8207, %r8098, %r8082;
	xor.b32  	%r8208, %r8207, %r8146;
	xor.b32  	%r8209, %r8208, %r8186;
	shf.l.wrap.b32 	%r8210, %r8209, %r8209, 1;
	add.s32 	%r8211, %r7722, %r8210;
	add.s32 	%r8212, %r8211, %r7721;
	add.s32 	%r8213, %r8212, %r8206;
	add.s32 	%r7731, %r8213, -1894007588;
	shf.l.wrap.b32 	%r7733, %r7723, %r7723, 30;
	shf.l.wrap.b32 	%r8214, %r7731, %r7731, 5;
	// begin inline asm
	lop3.b32 %r7726, %r7727, %r7733, %r7729, 232;
	// end inline asm
	xor.b32  	%r8215, %r8106, %r8090;
	xor.b32  	%r8216, %r8215, %r8154;
	xor.b32  	%r8217, %r8216, %r8194;
	shf.l.wrap.b32 	%r8218, %r8217, %r8217, 1;
	add.s32 	%r8219, %r7726, %r8218;
	add.s32 	%r8220, %r8219, %r7725;
	add.s32 	%r8221, %r8220, %r8214;
	add.s32 	%r7735, %r8221, -1894007588;
	shf.l.wrap.b32 	%r7737, %r7727, %r7727, 30;
	shf.l.wrap.b32 	%r8222, %r7735, %r7735, 5;
	// begin inline asm
	lop3.b32 %r7730, %r7731, %r7737, %r7733, 232;
	// end inline asm
	xor.b32  	%r8223, %r8114, %r8098;
	xor.b32  	%r8224, %r8223, %r8162;
	xor.b32  	%r8225, %r8224, %r8202;
	shf.l.wrap.b32 	%r8226, %r8225, %r8225, 1;
	add.s32 	%r8227, %r7730, %r8226;
	add.s32 	%r8228, %r8227, %r7729;
	add.s32 	%r8229, %r8228, %r8222;
	add.s32 	%r7739, %r8229, -1894007588;
	shf.l.wrap.b32 	%r7741, %r7731, %r7731, 30;
	shf.l.wrap.b32 	%r8230, %r7739, %r7739, 5;
	// begin inline asm
	lop3.b32 %r7734, %r7735, %r7741, %r7737, 232;
	// end inline asm
	xor.b32  	%r8231, %r8122, %r8106;
	xor.b32  	%r8232, %r8231, %r8170;
	xor.b32  	%r8233, %r8232, %r8210;
	shf.l.wrap.b32 	%r8234, %r8233, %r8233, 1;
	add.s32 	%r8235, %r7734, %r8234;
	add.s32 	%r8236, %r8235, %r7733;
	add.s32 	%r8237, %r8236, %r8230;
	add.s32 	%r7743, %r8237, -1894007588;
	shf.l.wrap.b32 	%r7745, %r7735, %r7735, 30;
	shf.l.wrap.b32 	%r8238, %r7743, %r7743, 5;
	// begin inline asm
	lop3.b32 %r7738, %r7739, %r7745, %r7741, 232;
	// end inline asm
	xor.b32  	%r8239, %r8130, %r8114;
	xor.b32  	%r8240, %r8239, %r8178;
	xor.b32  	%r8241, %r8240, %r8218;
	shf.l.wrap.b32 	%r8242, %r8241, %r8241, 1;
	add.s32 	%r8243, %r7738, %r8242;
	add.s32 	%r8244, %r8243, %r7737;
	add.s32 	%r8245, %r8244, %r8238;
	add.s32 	%r7747, %r8245, -1894007588;
	shf.l.wrap.b32 	%r7749, %r7739, %r7739, 30;
	shf.l.wrap.b32 	%r8246, %r7747, %r7747, 5;
	// begin inline asm
	lop3.b32 %r7742, %r7743, %r7749, %r7745, 232;
	// end inline asm
	xor.b32  	%r8247, %r8138, %r8122;
	xor.b32  	%r8248, %r8247, %r8186;
	xor.b32  	%r8249, %r8248, %r8226;
	shf.l.wrap.b32 	%r8250, %r8249, %r8249, 1;
	add.s32 	%r8251, %r7742, %r8250;
	add.s32 	%r8252, %r8251, %r7741;
	add.s32 	%r8253, %r8252, %r8246;
	add.s32 	%r7751, %r8253, -1894007588;
	shf.l.wrap.b32 	%r7753, %r7743, %r7743, 30;
	shf.l.wrap.b32 	%r8254, %r7751, %r7751, 5;
	// begin inline asm
	lop3.b32 %r7746, %r7747, %r7753, %r7749, 232;
	// end inline asm
	xor.b32  	%r8255, %r8146, %r8130;
	xor.b32  	%r8256, %r8255, %r8194;
	xor.b32  	%r8257, %r8256, %r8234;
	shf.l.wrap.b32 	%r8258, %r8257, %r8257, 1;
	add.s32 	%r8259, %r7746, %r8258;
	add.s32 	%r8260, %r8259, %r7745;
	add.s32 	%r8261, %r8260, %r8254;
	add.s32 	%r7755, %r8261, -1894007588;
	shf.l.wrap.b32 	%r7757, %r7747, %r7747, 30;
	shf.l.wrap.b32 	%r8262, %r7755, %r7755, 5;
	// begin inline asm
	lop3.b32 %r7750, %r7751, %r7757, %r7753, 232;
	// end inline asm
	xor.b32  	%r8263, %r8154, %r8138;
	xor.b32  	%r8264, %r8263, %r8202;
	xor.b32  	%r8265, %r8264, %r8242;
	shf.l.wrap.b32 	%r8266, %r8265, %r8265, 1;
	add.s32 	%r8267, %r7750, %r8266;
	add.s32 	%r8268, %r8267, %r7749;
	add.s32 	%r8269, %r8268, %r8262;
	add.s32 	%r7759, %r8269, -1894007588;
	shf.l.wrap.b32 	%r7761, %r7751, %r7751, 30;
	shf.l.wrap.b32 	%r8270, %r7759, %r7759, 5;
	// begin inline asm
	lop3.b32 %r7754, %r7755, %r7761, %r7757, 232;
	// end inline asm
	xor.b32  	%r8271, %r8162, %r8146;
	xor.b32  	%r8272, %r8271, %r8210;
	xor.b32  	%r8273, %r8272, %r8250;
	shf.l.wrap.b32 	%r8274, %r8273, %r8273, 1;
	add.s32 	%r8275, %r7754, %r8274;
	add.s32 	%r8276, %r8275, %r7753;
	add.s32 	%r8277, %r8276, %r8270;
	add.s32 	%r7763, %r8277, -1894007588;
	shf.l.wrap.b32 	%r7765, %r7755, %r7755, 30;
	shf.l.wrap.b32 	%r8278, %r7763, %r7763, 5;
	// begin inline asm
	lop3.b32 %r7758, %r7759, %r7765, %r7761, 232;
	// end inline asm
	xor.b32  	%r8279, %r8170, %r8154;
	xor.b32  	%r8280, %r8279, %r8218;
	xor.b32  	%r8281, %r8280, %r8258;
	shf.l.wrap.b32 	%r8282, %r8281, %r8281, 1;
	add.s32 	%r8283, %r7758, %r8282;
	add.s32 	%r8284, %r8283, %r7757;
	add.s32 	%r8285, %r8284, %r8278;
	add.s32 	%r7767, %r8285, -1894007588;
	shf.l.wrap.b32 	%r7769, %r7759, %r7759, 30;
	shf.l.wrap.b32 	%r8286, %r7767, %r7767, 5;
	// begin inline asm
	lop3.b32 %r7762, %r7763, %r7769, %r7765, 232;
	// end inline asm
	xor.b32  	%r8287, %r8178, %r8162;
	xor.b32  	%r8288, %r8287, %r8226;
	xor.b32  	%r8289, %r8288, %r8266;
	shf.l.wrap.b32 	%r8290, %r8289, %r8289, 1;
	add.s32 	%r8291, %r7762, %r8290;
	add.s32 	%r8292, %r8291, %r7761;
	add.s32 	%r8293, %r8292, %r8286;
	add.s32 	%r7771, %r8293, -1894007588;
	shf.l.wrap.b32 	%r7773, %r7763, %r7763, 30;
	shf.l.wrap.b32 	%r8294, %r7771, %r7771, 5;
	// begin inline asm
	lop3.b32 %r7766, %r7767, %r7773, %r7769, 150;
	// end inline asm
	xor.b32  	%r8295, %r8186, %r8170;
	xor.b32  	%r8296, %r8295, %r8234;
	xor.b32  	%r8297, %r8296, %r8274;
	shf.l.wrap.b32 	%r8298, %r8297, %r8297, 1;
	add.s32 	%r8299, %r7766, %r8298;
	add.s32 	%r8300, %r8299, %r7765;
	add.s32 	%r8301, %r8300, %r8294;
	add.s32 	%r7775, %r8301, -899497514;
	shf.l.wrap.b32 	%r7777, %r7767, %r7767, 30;
	shf.l.wrap.b32 	%r8302, %r7775, %r7775, 5;
	// begin inline asm
	lop3.b32 %r7770, %r7771, %r7777, %r7773, 150;
	// end inline asm
	xor.b32  	%r8303, %r8194, %r8178;
	xor.b32  	%r8304, %r8303, %r8242;
	xor.b32  	%r8305, %r8304, %r8282;
	shf.l.wrap.b32 	%r8306, %r8305, %r8305, 1;
	add.s32 	%r8307, %r7770, %r8306;
	add.s32 	%r8308, %r8307, %r7769;
	add.s32 	%r8309, %r8308, %r8302;
	add.s32 	%r7779, %r8309, -899497514;
	shf.l.wrap.b32 	%r7781, %r7771, %r7771, 30;
	shf.l.wrap.b32 	%r8310, %r7779, %r7779, 5;
	// begin inline asm
	lop3.b32 %r7774, %r7775, %r7781, %r7777, 150;
	// end inline asm
	xor.b32  	%r8311, %r8202, %r8186;
	xor.b32  	%r8312, %r8311, %r8250;
	xor.b32  	%r8313, %r8312, %r8290;
	shf.l.wrap.b32 	%r8314, %r8313, %r8313, 1;
	add.s32 	%r8315, %r7774, %r8314;
	add.s32 	%r8316, %r8315, %r7773;
	add.s32 	%r8317, %r8316, %r8310;
	add.s32 	%r7783, %r8317, -899497514;
	shf.l.wrap.b32 	%r7785, %r7775, %r7775, 30;
	shf.l.wrap.b32 	%r8318, %r7783, %r7783, 5;
	// begin inline asm
	lop3.b32 %r7778, %r7779, %r7785, %r7781, 150;
	// end inline asm
	xor.b32  	%r8319, %r8210, %r8194;
	xor.b32  	%r8320, %r8319, %r8258;
	xor.b32  	%r8321, %r8320, %r8298;
	shf.l.wrap.b32 	%r8322, %r8321, %r8321, 1;
	add.s32 	%r8323, %r7778, %r8322;
	add.s32 	%r8324, %r8323, %r7777;
	add.s32 	%r8325, %r8324, %r8318;
	add.s32 	%r7787, %r8325, -899497514;
	shf.l.wrap.b32 	%r7789, %r7779, %r7779, 30;
	shf.l.wrap.b32 	%r8326, %r7787, %r7787, 5;
	// begin inline asm
	lop3.b32 %r7782, %r7783, %r7789, %r7785, 150;
	// end inline asm
	xor.b32  	%r8327, %r8218, %r8202;
	xor.b32  	%r8328, %r8327, %r8266;
	xor.b32  	%r8329, %r8328, %r8306;
	shf.l.wrap.b32 	%r8330, %r8329, %r8329, 1;
	add.s32 	%r8331, %r7782, %r8330;
	add.s32 	%r8332, %r8331, %r7781;
	add.s32 	%r8333, %r8332, %r8326;
	add.s32 	%r7791, %r8333, -899497514;
	shf.l.wrap.b32 	%r7793, %r7783, %r7783, 30;
	shf.l.wrap.b32 	%r8334, %r7791, %r7791, 5;
	// begin inline asm
	lop3.b32 %r7786, %r7787, %r7793, %r7789, 150;
	// end inline asm
	xor.b32  	%r8335, %r8226, %r8210;
	xor.b32  	%r8336, %r8335, %r8274;
	xor.b32  	%r8337, %r8336, %r8314;
	shf.l.wrap.b32 	%r8338, %r8337, %r8337, 1;
	add.s32 	%r8339, %r7786, %r8338;
	add.s32 	%r8340, %r8339, %r7785;
	add.s32 	%r8341, %r8340, %r8334;
	add.s32 	%r7795, %r8341, -899497514;
	shf.l.wrap.b32 	%r7797, %r7787, %r7787, 30;
	shf.l.wrap.b32 	%r8342, %r7795, %r7795, 5;
	// begin inline asm
	lop3.b32 %r7790, %r7791, %r7797, %r7793, 150;
	// end inline asm
	xor.b32  	%r8343, %r8234, %r8218;
	xor.b32  	%r8344, %r8343, %r8282;
	xor.b32  	%r8345, %r8344, %r8322;
	shf.l.wrap.b32 	%r8346, %r8345, %r8345, 1;
	add.s32 	%r8347, %r7790, %r8346;
	add.s32 	%r8348, %r8347, %r7789;
	add.s32 	%r8349, %r8348, %r8342;
	add.s32 	%r7799, %r8349, -899497514;
	shf.l.wrap.b32 	%r7801, %r7791, %r7791, 30;
	shf.l.wrap.b32 	%r8350, %r7799, %r7799, 5;
	// begin inline asm
	lop3.b32 %r7794, %r7795, %r7801, %r7797, 150;
	// end inline asm
	xor.b32  	%r8351, %r8242, %r8226;
	xor.b32  	%r8352, %r8351, %r8290;
	xor.b32  	%r8353, %r8352, %r8330;
	shf.l.wrap.b32 	%r8354, %r8353, %r8353, 1;
	add.s32 	%r8355, %r7794, %r8354;
	add.s32 	%r8356, %r8355, %r7793;
	add.s32 	%r8357, %r8356, %r8350;
	add.s32 	%r7803, %r8357, -899497514;
	shf.l.wrap.b32 	%r7805, %r7795, %r7795, 30;
	shf.l.wrap.b32 	%r8358, %r7803, %r7803, 5;
	// begin inline asm
	lop3.b32 %r7798, %r7799, %r7805, %r7801, 150;
	// end inline asm
	xor.b32  	%r8359, %r8250, %r8234;
	xor.b32  	%r8360, %r8359, %r8298;
	xor.b32  	%r8361, %r8360, %r8338;
	shf.l.wrap.b32 	%r8362, %r8361, %r8361, 1;
	add.s32 	%r8363, %r7798, %r8362;
	add.s32 	%r8364, %r8363, %r7797;
	add.s32 	%r8365, %r8364, %r8358;
	add.s32 	%r7807, %r8365, -899497514;
	shf.l.wrap.b32 	%r7809, %r7799, %r7799, 30;
	shf.l.wrap.b32 	%r8366, %r7807, %r7807, 5;
	// begin inline asm
	lop3.b32 %r7802, %r7803, %r7809, %r7805, 150;
	// end inline asm
	xor.b32  	%r8367, %r8258, %r8242;
	xor.b32  	%r8368, %r8367, %r8306;
	xor.b32  	%r8369, %r8368, %r8346;
	shf.l.wrap.b32 	%r8370, %r8369, %r8369, 1;
	add.s32 	%r8371, %r7802, %r8370;
	add.s32 	%r8372, %r8371, %r7801;
	add.s32 	%r8373, %r8372, %r8366;
	add.s32 	%r7811, %r8373, -899497514;
	shf.l.wrap.b32 	%r7813, %r7803, %r7803, 30;
	shf.l.wrap.b32 	%r8374, %r7811, %r7811, 5;
	// begin inline asm
	lop3.b32 %r7806, %r7807, %r7813, %r7809, 150;
	// end inline asm
	xor.b32  	%r8375, %r8266, %r8250;
	xor.b32  	%r8376, %r8375, %r8314;
	xor.b32  	%r8377, %r8376, %r8354;
	shf.l.wrap.b32 	%r8378, %r8377, %r8377, 1;
	add.s32 	%r8379, %r7806, %r8378;
	add.s32 	%r8380, %r8379, %r7805;
	add.s32 	%r8381, %r8380, %r8374;
	add.s32 	%r7815, %r8381, -899497514;
	shf.l.wrap.b32 	%r7817, %r7807, %r7807, 30;
	shf.l.wrap.b32 	%r8382, %r7815, %r7815, 5;
	// begin inline asm
	lop3.b32 %r7810, %r7811, %r7817, %r7813, 150;
	// end inline asm
	xor.b32  	%r8383, %r8274, %r8258;
	xor.b32  	%r8384, %r8383, %r8322;
	xor.b32  	%r8385, %r8384, %r8362;
	shf.l.wrap.b32 	%r8386, %r8385, %r8385, 1;
	add.s32 	%r8387, %r7810, %r8386;
	add.s32 	%r8388, %r8387, %r7809;
	add.s32 	%r8389, %r8388, %r8382;
	add.s32 	%r7819, %r8389, -899497514;
	shf.l.wrap.b32 	%r7821, %r7811, %r7811, 30;
	shf.l.wrap.b32 	%r8390, %r7819, %r7819, 5;
	// begin inline asm
	lop3.b32 %r7814, %r7815, %r7821, %r7817, 150;
	// end inline asm
	xor.b32  	%r8391, %r8282, %r8266;
	xor.b32  	%r8392, %r8391, %r8330;
	xor.b32  	%r8393, %r8392, %r8370;
	shf.l.wrap.b32 	%r8394, %r8393, %r8393, 1;
	add.s32 	%r8395, %r7814, %r8394;
	add.s32 	%r8396, %r8395, %r7813;
	add.s32 	%r8397, %r8396, %r8390;
	add.s32 	%r7823, %r8397, -899497514;
	shf.l.wrap.b32 	%r7825, %r7815, %r7815, 30;
	shf.l.wrap.b32 	%r8398, %r7823, %r7823, 5;
	// begin inline asm
	lop3.b32 %r7818, %r7819, %r7825, %r7821, 150;
	// end inline asm
	xor.b32  	%r8399, %r8290, %r8274;
	xor.b32  	%r8400, %r8399, %r8338;
	xor.b32  	%r8401, %r8400, %r8378;
	shf.l.wrap.b32 	%r8402, %r8401, %r8401, 1;
	add.s32 	%r8403, %r7818, %r8402;
	add.s32 	%r8404, %r8403, %r7817;
	add.s32 	%r8405, %r8404, %r8398;
	add.s32 	%r7827, %r8405, -899497514;
	shf.l.wrap.b32 	%r7829, %r7819, %r7819, 30;
	shf.l.wrap.b32 	%r8406, %r7827, %r7827, 5;
	// begin inline asm
	lop3.b32 %r7822, %r7823, %r7829, %r7825, 150;
	// end inline asm
	xor.b32  	%r8407, %r8298, %r8282;
	xor.b32  	%r8408, %r8407, %r8346;
	xor.b32  	%r8409, %r8408, %r8386;
	shf.l.wrap.b32 	%r8410, %r8409, %r8409, 1;
	add.s32 	%r8411, %r7822, %r8410;
	add.s32 	%r8412, %r8411, %r7821;
	add.s32 	%r8413, %r8412, %r8406;
	add.s32 	%r7831, %r8413, -899497514;
	shf.l.wrap.b32 	%r7833, %r7823, %r7823, 30;
	shf.l.wrap.b32 	%r8414, %r7831, %r7831, 5;
	// begin inline asm
	lop3.b32 %r7826, %r7827, %r7833, %r7829, 150;
	// end inline asm
	xor.b32  	%r8415, %r8306, %r8290;
	xor.b32  	%r8416, %r8415, %r8354;
	xor.b32  	%r8417, %r8416, %r8394;
	shf.l.wrap.b32 	%r8418, %r8417, %r8417, 1;
	add.s32 	%r8419, %r7826, %r8418;
	add.s32 	%r8420, %r8419, %r7825;
	add.s32 	%r8421, %r8420, %r8414;
	add.s32 	%r7835, %r8421, -899497514;
	shf.l.wrap.b32 	%r7837, %r7827, %r7827, 30;
	shf.l.wrap.b32 	%r8422, %r7835, %r7835, 5;
	// begin inline asm
	lop3.b32 %r7830, %r7831, %r7837, %r7833, 150;
	// end inline asm
	xor.b32  	%r8423, %r8314, %r8298;
	xor.b32  	%r8424, %r8423, %r8362;
	xor.b32  	%r8425, %r8424, %r8402;
	shf.l.wrap.b32 	%r8426, %r8425, %r8425, 1;
	add.s32 	%r8427, %r7830, %r8426;
	add.s32 	%r8428, %r8427, %r7829;
	add.s32 	%r8429, %r8428, %r8422;
	add.s32 	%r7839, %r8429, -899497514;
	shf.l.wrap.b32 	%r7841, %r7831, %r7831, 30;
	shf.l.wrap.b32 	%r8430, %r7839, %r7839, 5;
	// begin inline asm
	lop3.b32 %r7834, %r7835, %r7841, %r7837, 150;
	// end inline asm
	xor.b32  	%r8431, %r8322, %r8306;
	xor.b32  	%r8432, %r8431, %r8370;
	xor.b32  	%r8433, %r8432, %r8410;
	shf.l.wrap.b32 	%r8434, %r8433, %r8433, 1;
	add.s32 	%r8435, %r7834, %r8434;
	add.s32 	%r8436, %r8435, %r7833;
	add.s32 	%r8437, %r8436, %r8430;
	add.s32 	%r7843, %r8437, -899497514;
	shf.l.wrap.b32 	%r7845, %r7835, %r7835, 30;
	shf.l.wrap.b32 	%r8438, %r7843, %r7843, 5;
	// begin inline asm
	lop3.b32 %r7838, %r7839, %r7845, %r7841, 150;
	// end inline asm
	xor.b32  	%r8439, %r8330, %r8314;
	xor.b32  	%r8440, %r8439, %r8378;
	xor.b32  	%r8441, %r8440, %r8418;
	shf.l.wrap.b32 	%r8442, %r8441, %r8441, 1;
	add.s32 	%r8443, %r7838, %r8442;
	add.s32 	%r8444, %r8443, %r7837;
	add.s32 	%r8445, %r8444, %r8438;
	add.s32 	%r8446, %r8445, -899497514;
	shf.l.wrap.b32 	%r7844, %r7839, %r7839, 30;
	shf.l.wrap.b32 	%r8447, %r8446, %r8446, 5;
	// begin inline asm
	lop3.b32 %r7842, %r7843, %r7844, %r7845, 150;
	// end inline asm
	xor.b32  	%r8448, %r8338, %r8322;
	xor.b32  	%r8449, %r8448, %r8386;
	xor.b32  	%r8450, %r8449, %r8426;
	shf.l.wrap.b32 	%r8451, %r8450, %r8450, 1;
	shf.l.wrap.b32 	%r8452, %r7843, %r7843, 30;
	add.s32 	%r8453, %r10293, %r7842;
	add.s32 	%r8454, %r8453, %r8451;
	add.s32 	%r8455, %r8454, %r7841;
	add.s32 	%r8456, %r8455, %r8447;
	add.s32 	%r10293, %r8456, -899497514;
	add.s32 	%r10294, %r8446, %r10294;
	add.s32 	%r10295, %r8452, %r10295;
	add.s32 	%r10296, %r7844, %r10296;
	add.s32 	%r10297, %r7845, %r10297;
	mov.u32 	%r8457, 0;
	st.local.v4.u32 	[%rd9262], {%r8457, %r8457, %r8457, %r8457};
	st.local.v4.u32 	[%rd9262+16], {%r8457, %r8457, %r8457, %r8457};
	st.local.v4.u32 	[%rd9262+32], {%r8457, %r8457, %r8457, %r8457};
	st.local.v2.u32 	[%rd9262+48], {%r8457, %r8457};
	st.local.u32 	[%rd9262+56], %r8457;
	setp.lt.u32 	%p32, %r10299, 61;
	@%p32 bra 	$L__BB3_47;

	add.s32 	%r8458, %r10299, -61;
	xor.b32  	%r8459, %r8458, 3;
	cvt.u64.u32 	%rd9239, %r8459;
	add.s64 	%rd9240, %rd9262, %rd9239;
	st.local.u8 	[%rd9240], %rs1;

$L__BB3_47:
	setp.lt.u32 	%p33, %r10299, 60;
	@%p33 bra 	$L__BB3_50;

	add.s32 	%r8460, %r10299, -60;
	xor.b32  	%r8461, %r8460, 3;
	cvt.u64.u32 	%rd9241, %r8461;
	add.s64 	%rd9242, %rd9262, %rd9241;
	mov.u16 	%rs233, 128;
	st.local.u8 	[%rd9242], %rs233;

$L__BB3_50:
	shl.b32 	%r9106, %r32, 3;
	add.s32 	%r9107, %r9106, 544;
	ld.local.v4.u32 	{%r9108, %r9109, %r9110, %r9111}, [%rd9262];
	shf.l.wrap.b32 	%r9116, %r10293, %r10293, 5;
	add.s32 	%r9117, %r9116, %r10297;
	// begin inline asm
	lop3.b32 %r8466, %r10294, %r10295, %r10296, 202;
	// end inline asm
	add.s32 	%r9118, %r9117, %r8466;
	add.s32 	%r9119, %r9118, %r9108;
	add.s32 	%r8475, %r9119, 1518500249;
	shf.l.wrap.b32 	%r9120, %r8475, %r8475, 5;
	shf.l.wrap.b32 	%r8477, %r10294, %r10294, 30;
	// begin inline asm
	lop3.b32 %r8470, %r10293, %r8477, %r10295, 202;
	// end inline asm
	add.s32 	%r9121, %r10296, %r8470;
	add.s32 	%r9122, %r9121, %r9109;
	add.s32 	%r9123, %r9122, %r9120;
	add.s32 	%r8479, %r9123, 1518500249;
	shf.l.wrap.b32 	%r9124, %r8479, %r8479, 5;
	shf.l.wrap.b32 	%r8481, %r10293, %r10293, 30;
	// begin inline asm
	lop3.b32 %r8474, %r8475, %r8481, %r8477, 202;
	// end inline asm
	add.s32 	%r9125, %r10295, %r8474;
	add.s32 	%r9126, %r9125, %r9110;
	add.s32 	%r9127, %r9126, %r9124;
	add.s32 	%r8483, %r9127, 1518500249;
	shf.l.wrap.b32 	%r8485, %r8475, %r8475, 30;
	shf.l.wrap.b32 	%r9128, %r8483, %r8483, 5;
	// begin inline asm
	lop3.b32 %r8478, %r8479, %r8485, %r8481, 202;
	// end inline asm
	add.s32 	%r9129, %r8477, %r8478;
	add.s32 	%r9130, %r9129, %r9111;
	add.s32 	%r9131, %r9130, %r9128;
	add.s32 	%r8487, %r9131, 1518500249;
	shf.l.wrap.b32 	%r8489, %r8479, %r8479, 30;
	shf.l.wrap.b32 	%r9132, %r8487, %r8487, 5;
	// begin inline asm
	lop3.b32 %r8482, %r8483, %r8489, %r8485, 202;
	// end inline asm
	ld.local.v4.u32 	{%r9133, %r9134, %r9135, %r9136}, [%rd9262+16];
	add.s32 	%r9141, %r8481, %r8482;
	add.s32 	%r9142, %r9141, %r9133;
	add.s32 	%r9143, %r9142, %r9132;
	add.s32 	%r8491, %r9143, 1518500249;
	shf.l.wrap.b32 	%r8493, %r8483, %r8483, 30;
	shf.l.wrap.b32 	%r9144, %r8491, %r8491, 5;
	// begin inline asm
	lop3.b32 %r8486, %r8487, %r8493, %r8489, 202;
	// end inline asm
	add.s32 	%r9145, %r8485, %r8486;
	add.s32 	%r9146, %r9145, %r9134;
	add.s32 	%r9147, %r9146, %r9144;
	add.s32 	%r8495, %r9147, 1518500249;
	shf.l.wrap.b32 	%r8497, %r8487, %r8487, 30;
	shf.l.wrap.b32 	%r9148, %r8495, %r8495, 5;
	// begin inline asm
	lop3.b32 %r8490, %r8491, %r8497, %r8493, 202;
	// end inline asm
	add.s32 	%r9149, %r8489, %r8490;
	add.s32 	%r9150, %r9149, %r9135;
	add.s32 	%r9151, %r9150, %r9148;
	add.s32 	%r8499, %r9151, 1518500249;
	shf.l.wrap.b32 	%r8501, %r8491, %r8491, 30;
	shf.l.wrap.b32 	%r9152, %r8499, %r8499, 5;
	// begin inline asm
	lop3.b32 %r8494, %r8495, %r8501, %r8497, 202;
	// end inline asm
	add.s32 	%r9153, %r8494, %r9136;
	add.s32 	%r9154, %r9153, %r8493;
	add.s32 	%r9155, %r9154, %r9152;
	add.s32 	%r8503, %r9155, 1518500249;
	shf.l.wrap.b32 	%r8505, %r8495, %r8495, 30;
	shf.l.wrap.b32 	%r9156, %r8503, %r8503, 5;
	// begin inline asm
	lop3.b32 %r8498, %r8499, %r8505, %r8501, 202;
	// end inline asm
	ld.local.v4.u32 	{%r9157, %r9158, %r9159, %r9160}, [%rd9262+32];
	add.s32 	%r9165, %r8498, %r9157;
	add.s32 	%r9166, %r9165, %r8497;
	add.s32 	%r9167, %r9166, %r9156;
	add.s32 	%r8507, %r9167, 1518500249;
	shf.l.wrap.b32 	%r8509, %r8499, %r8499, 30;
	shf.l.wrap.b32 	%r9168, %r8507, %r8507, 5;
	// begin inline asm
	lop3.b32 %r8502, %r8503, %r8509, %r8505, 202;
	// end inline asm
	add.s32 	%r9169, %r8502, %r9158;
	add.s32 	%r9170, %r9169, %r8501;
	add.s32 	%r9171, %r9170, %r9168;
	add.s32 	%r8511, %r9171, 1518500249;
	shf.l.wrap.b32 	%r8513, %r8503, %r8503, 30;
	shf.l.wrap.b32 	%r9172, %r8511, %r8511, 5;
	// begin inline asm
	lop3.b32 %r8506, %r8507, %r8513, %r8509, 202;
	// end inline asm
	add.s32 	%r9173, %r8506, %r9159;
	add.s32 	%r9174, %r9173, %r8505;
	add.s32 	%r9175, %r9174, %r9172;
	add.s32 	%r8515, %r9175, 1518500249;
	shf.l.wrap.b32 	%r8517, %r8507, %r8507, 30;
	shf.l.wrap.b32 	%r9176, %r8515, %r8515, 5;
	// begin inline asm
	lop3.b32 %r8510, %r8511, %r8517, %r8513, 202;
	// end inline asm
	add.s32 	%r9177, %r8510, %r9160;
	add.s32 	%r9178, %r9177, %r8509;
	add.s32 	%r9179, %r9178, %r9176;
	add.s32 	%r8519, %r9179, 1518500249;
	shf.l.wrap.b32 	%r8521, %r8511, %r8511, 30;
	shf.l.wrap.b32 	%r9180, %r8519, %r8519, 5;
	// begin inline asm
	lop3.b32 %r8514, %r8515, %r8521, %r8517, 202;
	// end inline asm
	.pragma "used_bytes_mask 4095";
	ld.local.v4.u32 	{%r9181, %r9182, %r9183, %r9184}, [%rd9262+48];
	add.s32 	%r9188, %r8514, %r9181;
	add.s32 	%r9189, %r9188, %r8513;
	add.s32 	%r9190, %r9189, %r9180;
	add.s32 	%r8523, %r9190, 1518500249;
	shf.l.wrap.b32 	%r8525, %r8515, %r8515, 30;
	shf.l.wrap.b32 	%r9191, %r8523, %r8523, 5;
	// begin inline asm
	lop3.b32 %r8518, %r8519, %r8525, %r8521, 202;
	// end inline asm
	add.s32 	%r9192, %r8518, %r9182;
	add.s32 	%r9193, %r9192, %r8517;
	add.s32 	%r9194, %r9193, %r9191;
	add.s32 	%r8527, %r9194, 1518500249;
	shf.l.wrap.b32 	%r8529, %r8519, %r8519, 30;
	shf.l.wrap.b32 	%r9195, %r8527, %r8527, 5;
	// begin inline asm
	lop3.b32 %r8522, %r8523, %r8529, %r8525, 202;
	// end inline asm
	add.s32 	%r9196, %r8522, %r9183;
	add.s32 	%r9197, %r9196, %r8521;
	add.s32 	%r9198, %r9197, %r9195;
	add.s32 	%r8531, %r9198, 1518500249;
	shf.l.wrap.b32 	%r8533, %r8523, %r8523, 30;
	shf.l.wrap.b32 	%r9199, %r8531, %r8531, 5;
	// begin inline asm
	lop3.b32 %r8526, %r8527, %r8533, %r8529, 202;
	// end inline asm
	add.s32 	%r9200, %r8526, %r9107;
	add.s32 	%r9201, %r9200, %r8525;
	add.s32 	%r9202, %r9201, %r9199;
	add.s32 	%r8535, %r9202, 1518500249;
	shf.l.wrap.b32 	%r8537, %r8527, %r8527, 30;
	shf.l.wrap.b32 	%r9203, %r8535, %r8535, 5;
	// begin inline asm
	lop3.b32 %r8530, %r8531, %r8537, %r8533, 202;
	// end inline asm
	xor.b32  	%r9204, %r9157, %r9182;
	xor.b32  	%r9205, %r9204, %r9110;
	xor.b32  	%r9206, %r9205, %r9108;
	shf.l.wrap.b32 	%r9207, %r9206, %r9206, 1;
	add.s32 	%r9208, %r8530, %r9207;
	add.s32 	%r9209, %r9208, %r8529;
	add.s32 	%r9210, %r9209, %r9203;
	add.s32 	%r8539, %r9210, 1518500249;
	shf.l.wrap.b32 	%r8541, %r8531, %r8531, 30;
	shf.l.wrap.b32 	%r9211, %r8539, %r8539, 5;
	// begin inline asm
	lop3.b32 %r8534, %r8535, %r8541, %r8537, 202;
	// end inline asm
	xor.b32  	%r9212, %r9158, %r9183;
	xor.b32  	%r9213, %r9212, %r9111;
	xor.b32  	%r9214, %r9213, %r9109;
	shf.l.wrap.b32 	%r9215, %r9214, %r9214, 1;
	add.s32 	%r9216, %r8534, %r9215;
	add.s32 	%r9217, %r9216, %r8533;
	add.s32 	%r9218, %r9217, %r9211;
	add.s32 	%r8543, %r9218, 1518500249;
	shf.l.wrap.b32 	%r8545, %r8535, %r8535, 30;
	shf.l.wrap.b32 	%r9219, %r8543, %r8543, 5;
	// begin inline asm
	lop3.b32 %r8538, %r8539, %r8545, %r8541, 202;
	// end inline asm
	xor.b32  	%r9220, %r9159, %r9107;
	xor.b32  	%r9221, %r9220, %r9133;
	xor.b32  	%r9222, %r9221, %r9110;
	shf.l.wrap.b32 	%r9223, %r9222, %r9222, 1;
	add.s32 	%r9224, %r8538, %r9223;
	add.s32 	%r9225, %r9224, %r8537;
	add.s32 	%r9226, %r9225, %r9219;
	add.s32 	%r8547, %r9226, 1518500249;
	shf.l.wrap.b32 	%r8549, %r8539, %r8539, 30;
	shf.l.wrap.b32 	%r9227, %r8547, %r8547, 5;
	// begin inline asm
	lop3.b32 %r8542, %r8543, %r8549, %r8545, 202;
	// end inline asm
	xor.b32  	%r9228, %r9160, %r9207;
	xor.b32  	%r9229, %r9228, %r9134;
	xor.b32  	%r9230, %r9229, %r9111;
	shf.l.wrap.b32 	%r9231, %r9230, %r9230, 1;
	add.s32 	%r9232, %r8542, %r9231;
	add.s32 	%r9233, %r9232, %r8541;
	add.s32 	%r9234, %r9233, %r9227;
	add.s32 	%r8551, %r9234, 1518500249;
	shf.l.wrap.b32 	%r8553, %r8543, %r8543, 30;
	shf.l.wrap.b32 	%r9235, %r8551, %r8551, 5;
	// begin inline asm
	lop3.b32 %r8546, %r8547, %r8553, %r8549, 150;
	// end inline asm
	xor.b32  	%r9236, %r9181, %r9215;
	xor.b32  	%r9237, %r9236, %r9135;
	xor.b32  	%r9238, %r9237, %r9133;
	shf.l.wrap.b32 	%r9239, %r9238, %r9238, 1;
	add.s32 	%r9240, %r8546, %r9239;
	add.s32 	%r9241, %r9240, %r8545;
	add.s32 	%r9242, %r9241, %r9235;
	add.s32 	%r8555, %r9242, 1859775393;
	shf.l.wrap.b32 	%r8557, %r8547, %r8547, 30;
	shf.l.wrap.b32 	%r9243, %r8555, %r8555, 5;
	// begin inline asm
	lop3.b32 %r8550, %r8551, %r8557, %r8553, 150;
	// end inline asm
	xor.b32  	%r9244, %r9182, %r9223;
	xor.b32  	%r9245, %r9244, %r9136;
	xor.b32  	%r9246, %r9245, %r9134;
	shf.l.wrap.b32 	%r9247, %r9246, %r9246, 1;
	add.s32 	%r9248, %r8550, %r9247;
	add.s32 	%r9249, %r9248, %r8549;
	add.s32 	%r9250, %r9249, %r9243;
	add.s32 	%r8559, %r9250, 1859775393;
	shf.l.wrap.b32 	%r8561, %r8551, %r8551, 30;
	shf.l.wrap.b32 	%r9251, %r8559, %r8559, 5;
	// begin inline asm
	lop3.b32 %r8554, %r8555, %r8561, %r8557, 150;
	// end inline asm
	xor.b32  	%r9252, %r9183, %r9231;
	xor.b32  	%r9253, %r9252, %r9157;
	xor.b32  	%r9254, %r9253, %r9135;
	shf.l.wrap.b32 	%r9255, %r9254, %r9254, 1;
	add.s32 	%r9256, %r8554, %r9255;
	add.s32 	%r9257, %r9256, %r8553;
	add.s32 	%r9258, %r9257, %r9251;
	add.s32 	%r8563, %r9258, 1859775393;
	shf.l.wrap.b32 	%r8565, %r8555, %r8555, 30;
	shf.l.wrap.b32 	%r9259, %r8563, %r8563, 5;
	// begin inline asm
	lop3.b32 %r8558, %r8559, %r8565, %r8561, 150;
	// end inline asm
	xor.b32  	%r9260, %r9107, %r9239;
	xor.b32  	%r9261, %r9260, %r9158;
	xor.b32  	%r9262, %r9261, %r9136;
	shf.l.wrap.b32 	%r9263, %r9262, %r9262, 1;
	add.s32 	%r9264, %r8558, %r9263;
	add.s32 	%r9265, %r9264, %r8557;
	add.s32 	%r9266, %r9265, %r9259;
	add.s32 	%r8567, %r9266, 1859775393;
	shf.l.wrap.b32 	%r8569, %r8559, %r8559, 30;
	shf.l.wrap.b32 	%r9267, %r8567, %r8567, 5;
	// begin inline asm
	lop3.b32 %r8562, %r8563, %r8569, %r8565, 150;
	// end inline asm
	xor.b32  	%r9268, %r9247, %r9207;
	xor.b32  	%r9269, %r9268, %r9159;
	xor.b32  	%r9270, %r9269, %r9157;
	shf.l.wrap.b32 	%r9271, %r9270, %r9270, 1;
	add.s32 	%r9272, %r8562, %r9271;
	add.s32 	%r9273, %r9272, %r8561;
	add.s32 	%r9274, %r9273, %r9267;
	add.s32 	%r8571, %r9274, 1859775393;
	shf.l.wrap.b32 	%r8573, %r8563, %r8563, 30;
	shf.l.wrap.b32 	%r9275, %r8571, %r8571, 5;
	// begin inline asm
	lop3.b32 %r8566, %r8567, %r8573, %r8569, 150;
	// end inline asm
	xor.b32  	%r9276, %r9255, %r9215;
	xor.b32  	%r9277, %r9276, %r9160;
	xor.b32  	%r9278, %r9277, %r9158;
	shf.l.wrap.b32 	%r9279, %r9278, %r9278, 1;
	add.s32 	%r9280, %r8566, %r9279;
	add.s32 	%r9281, %r9280, %r8565;
	add.s32 	%r9282, %r9281, %r9275;
	add.s32 	%r8575, %r9282, 1859775393;
	shf.l.wrap.b32 	%r8577, %r8567, %r8567, 30;
	shf.l.wrap.b32 	%r9283, %r8575, %r8575, 5;
	// begin inline asm
	lop3.b32 %r8570, %r8571, %r8577, %r8573, 150;
	// end inline asm
	xor.b32  	%r9284, %r9263, %r9223;
	xor.b32  	%r9285, %r9284, %r9181;
	xor.b32  	%r9286, %r9285, %r9159;
	shf.l.wrap.b32 	%r9287, %r9286, %r9286, 1;
	add.s32 	%r9288, %r8570, %r9287;
	add.s32 	%r9289, %r9288, %r8569;
	add.s32 	%r9290, %r9289, %r9283;
	add.s32 	%r8579, %r9290, 1859775393;
	shf.l.wrap.b32 	%r8581, %r8571, %r8571, 30;
	shf.l.wrap.b32 	%r9291, %r8579, %r8579, 5;
	// begin inline asm
	lop3.b32 %r8574, %r8575, %r8581, %r8577, 150;
	// end inline asm
	xor.b32  	%r9292, %r9271, %r9231;
	xor.b32  	%r9293, %r9292, %r9182;
	xor.b32  	%r9294, %r9293, %r9160;
	shf.l.wrap.b32 	%r9295, %r9294, %r9294, 1;
	add.s32 	%r9296, %r8574, %r9295;
	add.s32 	%r9297, %r9296, %r8573;
	add.s32 	%r9298, %r9297, %r9291;
	add.s32 	%r8583, %r9298, 1859775393;
	shf.l.wrap.b32 	%r8585, %r8575, %r8575, 30;
	shf.l.wrap.b32 	%r9299, %r8583, %r8583, 5;
	// begin inline asm
	lop3.b32 %r8578, %r8579, %r8585, %r8581, 150;
	// end inline asm
	xor.b32  	%r9300, %r9279, %r9239;
	xor.b32  	%r9301, %r9300, %r9183;
	xor.b32  	%r9302, %r9301, %r9181;
	shf.l.wrap.b32 	%r9303, %r9302, %r9302, 1;
	add.s32 	%r9304, %r8578, %r9303;
	add.s32 	%r9305, %r9304, %r8577;
	add.s32 	%r9306, %r9305, %r9299;
	add.s32 	%r8587, %r9306, 1859775393;
	shf.l.wrap.b32 	%r8589, %r8579, %r8579, 30;
	shf.l.wrap.b32 	%r9307, %r8587, %r8587, 5;
	// begin inline asm
	lop3.b32 %r8582, %r8583, %r8589, %r8585, 150;
	// end inline asm
	xor.b32  	%r9308, %r9287, %r9247;
	xor.b32  	%r9309, %r9308, %r9107;
	xor.b32  	%r9310, %r9309, %r9182;
	shf.l.wrap.b32 	%r9311, %r9310, %r9310, 1;
	add.s32 	%r9312, %r8582, %r9311;
	add.s32 	%r9313, %r9312, %r8581;
	add.s32 	%r9314, %r9313, %r9307;
	add.s32 	%r8591, %r9314, 1859775393;
	shf.l.wrap.b32 	%r8593, %r8583, %r8583, 30;
	shf.l.wrap.b32 	%r9315, %r8591, %r8591, 5;
	// begin inline asm
	lop3.b32 %r8586, %r8587, %r8593, %r8589, 150;
	// end inline asm
	xor.b32  	%r9316, %r9255, %r9207;
	xor.b32  	%r9317, %r9316, %r9295;
	xor.b32  	%r9318, %r9317, %r9183;
	shf.l.wrap.b32 	%r9319, %r9318, %r9318, 1;
	add.s32 	%r9320, %r8586, %r9319;
	add.s32 	%r9321, %r9320, %r8585;
	add.s32 	%r9322, %r9321, %r9315;
	add.s32 	%r8595, %r9322, 1859775393;
	shf.l.wrap.b32 	%r8597, %r8587, %r8587, 30;
	shf.l.wrap.b32 	%r9323, %r8595, %r8595, 5;
	// begin inline asm
	lop3.b32 %r8590, %r8591, %r8597, %r8593, 150;
	// end inline asm
	xor.b32  	%r9324, %r9263, %r9215;
	xor.b32  	%r9325, %r9324, %r9303;
	xor.b32  	%r9326, %r9325, %r9107;
	shf.l.wrap.b32 	%r9327, %r9326, %r9326, 1;
	add.s32 	%r9328, %r8590, %r9327;
	add.s32 	%r9329, %r9328, %r8589;
	add.s32 	%r9330, %r9329, %r9323;
	add.s32 	%r8599, %r9330, 1859775393;
	shf.l.wrap.b32 	%r8601, %r8591, %r8591, 30;
	shf.l.wrap.b32 	%r9331, %r8599, %r8599, 5;
	// begin inline asm
	lop3.b32 %r8594, %r8595, %r8601, %r8597, 150;
	// end inline asm
	xor.b32  	%r9332, %r9223, %r9207;
	xor.b32  	%r9333, %r9332, %r9271;
	xor.b32  	%r9334, %r9333, %r9311;
	shf.l.wrap.b32 	%r9335, %r9334, %r9334, 1;
	add.s32 	%r9336, %r8594, %r9335;
	add.s32 	%r9337, %r9336, %r8593;
	add.s32 	%r9338, %r9337, %r9331;
	add.s32 	%r8603, %r9338, 1859775393;
	shf.l.wrap.b32 	%r8605, %r8595, %r8595, 30;
	shf.l.wrap.b32 	%r9339, %r8603, %r8603, 5;
	// begin inline asm
	lop3.b32 %r8598, %r8599, %r8605, %r8601, 150;
	// end inline asm
	xor.b32  	%r9340, %r9231, %r9215;
	xor.b32  	%r9341, %r9340, %r9279;
	xor.b32  	%r9342, %r9341, %r9319;
	shf.l.wrap.b32 	%r9343, %r9342, %r9342, 1;
	add.s32 	%r9344, %r8598, %r9343;
	add.s32 	%r9345, %r9344, %r8597;
	add.s32 	%r9346, %r9345, %r9339;
	add.s32 	%r8607, %r9346, 1859775393;
	shf.l.wrap.b32 	%r8609, %r8599, %r8599, 30;
	shf.l.wrap.b32 	%r9347, %r8607, %r8607, 5;
	// begin inline asm
	lop3.b32 %r8602, %r8603, %r8609, %r8605, 150;
	// end inline asm
	xor.b32  	%r9348, %r9239, %r9223;
	xor.b32  	%r9349, %r9348, %r9287;
	xor.b32  	%r9350, %r9349, %r9327;
	shf.l.wrap.b32 	%r9351, %r9350, %r9350, 1;
	add.s32 	%r9352, %r8602, %r9351;
	add.s32 	%r9353, %r9352, %r8601;
	add.s32 	%r9354, %r9353, %r9347;
	add.s32 	%r8611, %r9354, 1859775393;
	shf.l.wrap.b32 	%r8613, %r8603, %r8603, 30;
	shf.l.wrap.b32 	%r9355, %r8611, %r8611, 5;
	// begin inline asm
	lop3.b32 %r8606, %r8607, %r8613, %r8609, 150;
	// end inline asm
	xor.b32  	%r9356, %r9247, %r9231;
	xor.b32  	%r9357, %r9356, %r9295;
	xor.b32  	%r9358, %r9357, %r9335;
	shf.l.wrap.b32 	%r9359, %r9358, %r9358, 1;
	add.s32 	%r9360, %r8606, %r9359;
	add.s32 	%r9361, %r9360, %r8605;
	add.s32 	%r9362, %r9361, %r9355;
	add.s32 	%r8615, %r9362, 1859775393;
	shf.l.wrap.b32 	%r8617, %r8607, %r8607, 30;
	shf.l.wrap.b32 	%r9363, %r8615, %r8615, 5;
	// begin inline asm
	lop3.b32 %r8610, %r8611, %r8617, %r8613, 150;
	// end inline asm
	xor.b32  	%r9364, %r9255, %r9239;
	xor.b32  	%r9365, %r9364, %r9303;
	xor.b32  	%r9366, %r9365, %r9343;
	shf.l.wrap.b32 	%r9367, %r9366, %r9366, 1;
	add.s32 	%r9368, %r8610, %r9367;
	add.s32 	%r9369, %r9368, %r8609;
	add.s32 	%r9370, %r9369, %r9363;
	add.s32 	%r8619, %r9370, 1859775393;
	shf.l.wrap.b32 	%r8621, %r8611, %r8611, 30;
	shf.l.wrap.b32 	%r9371, %r8619, %r8619, 5;
	// begin inline asm
	lop3.b32 %r8614, %r8615, %r8621, %r8617, 150;
	// end inline asm
	xor.b32  	%r9372, %r9263, %r9247;
	xor.b32  	%r9373, %r9372, %r9311;
	xor.b32  	%r9374, %r9373, %r9351;
	shf.l.wrap.b32 	%r9375, %r9374, %r9374, 1;
	add.s32 	%r9376, %r8614, %r9375;
	add.s32 	%r9377, %r9376, %r8613;
	add.s32 	%r9378, %r9377, %r9371;
	add.s32 	%r8623, %r9378, 1859775393;
	shf.l.wrap.b32 	%r8625, %r8615, %r8615, 30;
	shf.l.wrap.b32 	%r9379, %r8623, %r8623, 5;
	// begin inline asm
	lop3.b32 %r8618, %r8619, %r8625, %r8621, 150;
	// end inline asm
	xor.b32  	%r9380, %r9271, %r9255;
	xor.b32  	%r9381, %r9380, %r9319;
	xor.b32  	%r9382, %r9381, %r9359;
	shf.l.wrap.b32 	%r9383, %r9382, %r9382, 1;
	add.s32 	%r9384, %r8618, %r9383;
	add.s32 	%r9385, %r9384, %r8617;
	add.s32 	%r9386, %r9385, %r9379;
	add.s32 	%r8627, %r9386, 1859775393;
	shf.l.wrap.b32 	%r8629, %r8619, %r8619, 30;
	shf.l.wrap.b32 	%r9387, %r8627, %r8627, 5;
	// begin inline asm
	lop3.b32 %r8622, %r8623, %r8629, %r8625, 150;
	// end inline asm
	xor.b32  	%r9388, %r9279, %r9263;
	xor.b32  	%r9389, %r9388, %r9327;
	xor.b32  	%r9390, %r9389, %r9367;
	shf.l.wrap.b32 	%r9391, %r9390, %r9390, 1;
	add.s32 	%r9392, %r8622, %r9391;
	add.s32 	%r9393, %r9392, %r8621;
	add.s32 	%r9394, %r9393, %r9387;
	add.s32 	%r8631, %r9394, 1859775393;
	shf.l.wrap.b32 	%r8633, %r8623, %r8623, 30;
	shf.l.wrap.b32 	%r9395, %r8631, %r8631, 5;
	// begin inline asm
	lop3.b32 %r8626, %r8627, %r8633, %r8629, 232;
	// end inline asm
	xor.b32  	%r9396, %r9287, %r9271;
	xor.b32  	%r9397, %r9396, %r9335;
	xor.b32  	%r9398, %r9397, %r9375;
	shf.l.wrap.b32 	%r9399, %r9398, %r9398, 1;
	add.s32 	%r9400, %r8626, %r9399;
	add.s32 	%r9401, %r9400, %r8625;
	add.s32 	%r9402, %r9401, %r9395;
	add.s32 	%r8635, %r9402, -1894007588;
	shf.l.wrap.b32 	%r8637, %r8627, %r8627, 30;
	shf.l.wrap.b32 	%r9403, %r8635, %r8635, 5;
	// begin inline asm
	lop3.b32 %r8630, %r8631, %r8637, %r8633, 232;
	// end inline asm
	xor.b32  	%r9404, %r9295, %r9279;
	xor.b32  	%r9405, %r9404, %r9343;
	xor.b32  	%r9406, %r9405, %r9383;
	shf.l.wrap.b32 	%r9407, %r9406, %r9406, 1;
	add.s32 	%r9408, %r8630, %r9407;
	add.s32 	%r9409, %r9408, %r8629;
	add.s32 	%r9410, %r9409, %r9403;
	add.s32 	%r8639, %r9410, -1894007588;
	shf.l.wrap.b32 	%r8641, %r8631, %r8631, 30;
	shf.l.wrap.b32 	%r9411, %r8639, %r8639, 5;
	// begin inline asm
	lop3.b32 %r8634, %r8635, %r8641, %r8637, 232;
	// end inline asm
	xor.b32  	%r9412, %r9303, %r9287;
	xor.b32  	%r9413, %r9412, %r9351;
	xor.b32  	%r9414, %r9413, %r9391;
	shf.l.wrap.b32 	%r9415, %r9414, %r9414, 1;
	add.s32 	%r9416, %r8634, %r9415;
	add.s32 	%r9417, %r9416, %r8633;
	add.s32 	%r9418, %r9417, %r9411;
	add.s32 	%r8643, %r9418, -1894007588;
	shf.l.wrap.b32 	%r8645, %r8635, %r8635, 30;
	shf.l.wrap.b32 	%r9419, %r8643, %r8643, 5;
	// begin inline asm
	lop3.b32 %r8638, %r8639, %r8645, %r8641, 232;
	// end inline asm
	xor.b32  	%r9420, %r9311, %r9295;
	xor.b32  	%r9421, %r9420, %r9359;
	xor.b32  	%r9422, %r9421, %r9399;
	shf.l.wrap.b32 	%r9423, %r9422, %r9422, 1;
	add.s32 	%r9424, %r8638, %r9423;
	add.s32 	%r9425, %r9424, %r8637;
	add.s32 	%r9426, %r9425, %r9419;
	add.s32 	%r8647, %r9426, -1894007588;
	shf.l.wrap.b32 	%r8649, %r8639, %r8639, 30;
	shf.l.wrap.b32 	%r9427, %r8647, %r8647, 5;
	// begin inline asm
	lop3.b32 %r8642, %r8643, %r8649, %r8645, 232;
	// end inline asm
	xor.b32  	%r9428, %r9319, %r9303;
	xor.b32  	%r9429, %r9428, %r9367;
	xor.b32  	%r9430, %r9429, %r9407;
	shf.l.wrap.b32 	%r9431, %r9430, %r9430, 1;
	add.s32 	%r9432, %r8642, %r9431;
	add.s32 	%r9433, %r9432, %r8641;
	add.s32 	%r9434, %r9433, %r9427;
	add.s32 	%r8651, %r9434, -1894007588;
	shf.l.wrap.b32 	%r8653, %r8643, %r8643, 30;
	shf.l.wrap.b32 	%r9435, %r8651, %r8651, 5;
	// begin inline asm
	lop3.b32 %r8646, %r8647, %r8653, %r8649, 232;
	// end inline asm
	xor.b32  	%r9436, %r9327, %r9311;
	xor.b32  	%r9437, %r9436, %r9375;
	xor.b32  	%r9438, %r9437, %r9415;
	shf.l.wrap.b32 	%r9439, %r9438, %r9438, 1;
	add.s32 	%r9440, %r8646, %r9439;
	add.s32 	%r9441, %r9440, %r8645;
	add.s32 	%r9442, %r9441, %r9435;
	add.s32 	%r8655, %r9442, -1894007588;
	shf.l.wrap.b32 	%r8657, %r8647, %r8647, 30;
	shf.l.wrap.b32 	%r9443, %r8655, %r8655, 5;
	// begin inline asm
	lop3.b32 %r8650, %r8651, %r8657, %r8653, 232;
	// end inline asm
	xor.b32  	%r9444, %r9335, %r9319;
	xor.b32  	%r9445, %r9444, %r9383;
	xor.b32  	%r9446, %r9445, %r9423;
	shf.l.wrap.b32 	%r9447, %r9446, %r9446, 1;
	add.s32 	%r9448, %r8650, %r9447;
	add.s32 	%r9449, %r9448, %r8649;
	add.s32 	%r9450, %r9449, %r9443;
	add.s32 	%r8659, %r9450, -1894007588;
	shf.l.wrap.b32 	%r8661, %r8651, %r8651, 30;
	shf.l.wrap.b32 	%r9451, %r8659, %r8659, 5;
	// begin inline asm
	lop3.b32 %r8654, %r8655, %r8661, %r8657, 232;
	// end inline asm
	xor.b32  	%r9452, %r9343, %r9327;
	xor.b32  	%r9453, %r9452, %r9391;
	xor.b32  	%r9454, %r9453, %r9431;
	shf.l.wrap.b32 	%r9455, %r9454, %r9454, 1;
	add.s32 	%r9456, %r8654, %r9455;
	add.s32 	%r9457, %r9456, %r8653;
	add.s32 	%r9458, %r9457, %r9451;
	add.s32 	%r8663, %r9458, -1894007588;
	shf.l.wrap.b32 	%r8665, %r8655, %r8655, 30;
	shf.l.wrap.b32 	%r9459, %r8663, %r8663, 5;
	// begin inline asm
	lop3.b32 %r8658, %r8659, %r8665, %r8661, 232;
	// end inline asm
	xor.b32  	%r9460, %r9351, %r9335;
	xor.b32  	%r9461, %r9460, %r9399;
	xor.b32  	%r9462, %r9461, %r9439;
	shf.l.wrap.b32 	%r9463, %r9462, %r9462, 1;
	add.s32 	%r9464, %r8658, %r9463;
	add.s32 	%r9465, %r9464, %r8657;
	add.s32 	%r9466, %r9465, %r9459;
	add.s32 	%r8667, %r9466, -1894007588;
	shf.l.wrap.b32 	%r8669, %r8659, %r8659, 30;
	shf.l.wrap.b32 	%r9467, %r8667, %r8667, 5;
	// begin inline asm
	lop3.b32 %r8662, %r8663, %r8669, %r8665, 232;
	// end inline asm
	xor.b32  	%r9468, %r9359, %r9343;
	xor.b32  	%r9469, %r9468, %r9407;
	xor.b32  	%r9470, %r9469, %r9447;
	shf.l.wrap.b32 	%r9471, %r9470, %r9470, 1;
	add.s32 	%r9472, %r8662, %r9471;
	add.s32 	%r9473, %r9472, %r8661;
	add.s32 	%r9474, %r9473, %r9467;
	add.s32 	%r8671, %r9474, -1894007588;
	shf.l.wrap.b32 	%r8673, %r8663, %r8663, 30;
	shf.l.wrap.b32 	%r9475, %r8671, %r8671, 5;
	// begin inline asm
	lop3.b32 %r8666, %r8667, %r8673, %r8669, 232;
	// end inline asm
	xor.b32  	%r9476, %r9367, %r9351;
	xor.b32  	%r9477, %r9476, %r9415;
	xor.b32  	%r9478, %r9477, %r9455;
	shf.l.wrap.b32 	%r9479, %r9478, %r9478, 1;
	add.s32 	%r9480, %r8666, %r9479;
	add.s32 	%r9481, %r9480, %r8665;
	add.s32 	%r9482, %r9481, %r9475;
	add.s32 	%r8675, %r9482, -1894007588;
	shf.l.wrap.b32 	%r8677, %r8667, %r8667, 30;
	shf.l.wrap.b32 	%r9483, %r8675, %r8675, 5;
	// begin inline asm
	lop3.b32 %r8670, %r8671, %r8677, %r8673, 232;
	// end inline asm
	xor.b32  	%r9484, %r9375, %r9359;
	xor.b32  	%r9485, %r9484, %r9423;
	xor.b32  	%r9486, %r9485, %r9463;
	shf.l.wrap.b32 	%r9487, %r9486, %r9486, 1;
	add.s32 	%r9488, %r8670, %r9487;
	add.s32 	%r9489, %r9488, %r8669;
	add.s32 	%r9490, %r9489, %r9483;
	add.s32 	%r8679, %r9490, -1894007588;
	shf.l.wrap.b32 	%r8681, %r8671, %r8671, 30;
	shf.l.wrap.b32 	%r9491, %r8679, %r8679, 5;
	// begin inline asm
	lop3.b32 %r8674, %r8675, %r8681, %r8677, 232;
	// end inline asm
	xor.b32  	%r9492, %r9383, %r9367;
	xor.b32  	%r9493, %r9492, %r9431;
	xor.b32  	%r9494, %r9493, %r9471;
	shf.l.wrap.b32 	%r9495, %r9494, %r9494, 1;
	add.s32 	%r9496, %r8674, %r9495;
	add.s32 	%r9497, %r9496, %r8673;
	add.s32 	%r9498, %r9497, %r9491;
	add.s32 	%r8683, %r9498, -1894007588;
	shf.l.wrap.b32 	%r8685, %r8675, %r8675, 30;
	shf.l.wrap.b32 	%r9499, %r8683, %r8683, 5;
	// begin inline asm
	lop3.b32 %r8678, %r8679, %r8685, %r8681, 232;
	// end inline asm
	xor.b32  	%r9500, %r9391, %r9375;
	xor.b32  	%r9501, %r9500, %r9439;
	xor.b32  	%r9502, %r9501, %r9479;
	shf.l.wrap.b32 	%r9503, %r9502, %r9502, 1;
	add.s32 	%r9504, %r8678, %r9503;
	add.s32 	%r9505, %r9504, %r8677;
	add.s32 	%r9506, %r9505, %r9499;
	add.s32 	%r8687, %r9506, -1894007588;
	shf.l.wrap.b32 	%r8689, %r8679, %r8679, 30;
	shf.l.wrap.b32 	%r9507, %r8687, %r8687, 5;
	// begin inline asm
	lop3.b32 %r8682, %r8683, %r8689, %r8685, 232;
	// end inline asm
	xor.b32  	%r9508, %r9399, %r9383;
	xor.b32  	%r9509, %r9508, %r9447;
	xor.b32  	%r9510, %r9509, %r9487;
	shf.l.wrap.b32 	%r9511, %r9510, %r9510, 1;
	add.s32 	%r9512, %r8682, %r9511;
	add.s32 	%r9513, %r9512, %r8681;
	add.s32 	%r9514, %r9513, %r9507;
	add.s32 	%r8691, %r9514, -1894007588;
	shf.l.wrap.b32 	%r8693, %r8683, %r8683, 30;
	shf.l.wrap.b32 	%r9515, %r8691, %r8691, 5;
	// begin inline asm
	lop3.b32 %r8686, %r8687, %r8693, %r8689, 232;
	// end inline asm
	xor.b32  	%r9516, %r9407, %r9391;
	xor.b32  	%r9517, %r9516, %r9455;
	xor.b32  	%r9518, %r9517, %r9495;
	shf.l.wrap.b32 	%r9519, %r9518, %r9518, 1;
	add.s32 	%r9520, %r8686, %r9519;
	add.s32 	%r9521, %r9520, %r8685;
	add.s32 	%r9522, %r9521, %r9515;
	add.s32 	%r8695, %r9522, -1894007588;
	shf.l.wrap.b32 	%r8697, %r8687, %r8687, 30;
	shf.l.wrap.b32 	%r9523, %r8695, %r8695, 5;
	// begin inline asm
	lop3.b32 %r8690, %r8691, %r8697, %r8693, 232;
	// end inline asm
	xor.b32  	%r9524, %r9415, %r9399;
	xor.b32  	%r9525, %r9524, %r9463;
	xor.b32  	%r9526, %r9525, %r9503;
	shf.l.wrap.b32 	%r9527, %r9526, %r9526, 1;
	add.s32 	%r9528, %r8690, %r9527;
	add.s32 	%r9529, %r9528, %r8689;
	add.s32 	%r9530, %r9529, %r9523;
	add.s32 	%r8699, %r9530, -1894007588;
	shf.l.wrap.b32 	%r8701, %r8691, %r8691, 30;
	shf.l.wrap.b32 	%r9531, %r8699, %r8699, 5;
	// begin inline asm
	lop3.b32 %r8694, %r8695, %r8701, %r8697, 232;
	// end inline asm
	xor.b32  	%r9532, %r9423, %r9407;
	xor.b32  	%r9533, %r9532, %r9471;
	xor.b32  	%r9534, %r9533, %r9511;
	shf.l.wrap.b32 	%r9535, %r9534, %r9534, 1;
	add.s32 	%r9536, %r8694, %r9535;
	add.s32 	%r9537, %r9536, %r8693;
	add.s32 	%r9538, %r9537, %r9531;
	add.s32 	%r8703, %r9538, -1894007588;
	shf.l.wrap.b32 	%r8705, %r8695, %r8695, 30;
	shf.l.wrap.b32 	%r9539, %r8703, %r8703, 5;
	// begin inline asm
	lop3.b32 %r8698, %r8699, %r8705, %r8701, 232;
	// end inline asm
	xor.b32  	%r9540, %r9431, %r9415;
	xor.b32  	%r9541, %r9540, %r9479;
	xor.b32  	%r9542, %r9541, %r9519;
	shf.l.wrap.b32 	%r9543, %r9542, %r9542, 1;
	add.s32 	%r9544, %r8698, %r9543;
	add.s32 	%r9545, %r9544, %r8697;
	add.s32 	%r9546, %r9545, %r9539;
	add.s32 	%r8707, %r9546, -1894007588;
	shf.l.wrap.b32 	%r8709, %r8699, %r8699, 30;
	shf.l.wrap.b32 	%r9547, %r8707, %r8707, 5;
	// begin inline asm
	lop3.b32 %r8702, %r8703, %r8709, %r8705, 232;
	// end inline asm
	xor.b32  	%r9548, %r9439, %r9423;
	xor.b32  	%r9549, %r9548, %r9487;
	xor.b32  	%r9550, %r9549, %r9527;
	shf.l.wrap.b32 	%r9551, %r9550, %r9550, 1;
	add.s32 	%r9552, %r8702, %r9551;
	add.s32 	%r9553, %r9552, %r8701;
	add.s32 	%r9554, %r9553, %r9547;
	add.s32 	%r8711, %r9554, -1894007588;
	shf.l.wrap.b32 	%r8713, %r8703, %r8703, 30;
	shf.l.wrap.b32 	%r9555, %r8711, %r8711, 5;
	// begin inline asm
	lop3.b32 %r8706, %r8707, %r8713, %r8709, 150;
	// end inline asm
	xor.b32  	%r9556, %r9447, %r9431;
	xor.b32  	%r9557, %r9556, %r9495;
	xor.b32  	%r9558, %r9557, %r9535;
	shf.l.wrap.b32 	%r9559, %r9558, %r9558, 1;
	add.s32 	%r9560, %r8706, %r9559;
	add.s32 	%r9561, %r9560, %r8705;
	add.s32 	%r9562, %r9561, %r9555;
	add.s32 	%r8715, %r9562, -899497514;
	shf.l.wrap.b32 	%r8717, %r8707, %r8707, 30;
	shf.l.wrap.b32 	%r9563, %r8715, %r8715, 5;
	// begin inline asm
	lop3.b32 %r8710, %r8711, %r8717, %r8713, 150;
	// end inline asm
	xor.b32  	%r9564, %r9455, %r9439;
	xor.b32  	%r9565, %r9564, %r9503;
	xor.b32  	%r9566, %r9565, %r9543;
	shf.l.wrap.b32 	%r9567, %r9566, %r9566, 1;
	add.s32 	%r9568, %r8710, %r9567;
	add.s32 	%r9569, %r9568, %r8709;
	add.s32 	%r9570, %r9569, %r9563;
	add.s32 	%r8719, %r9570, -899497514;
	shf.l.wrap.b32 	%r8721, %r8711, %r8711, 30;
	shf.l.wrap.b32 	%r9571, %r8719, %r8719, 5;
	// begin inline asm
	lop3.b32 %r8714, %r8715, %r8721, %r8717, 150;
	// end inline asm
	xor.b32  	%r9572, %r9463, %r9447;
	xor.b32  	%r9573, %r9572, %r9511;
	xor.b32  	%r9574, %r9573, %r9551;
	shf.l.wrap.b32 	%r9575, %r9574, %r9574, 1;
	add.s32 	%r9576, %r8714, %r9575;
	add.s32 	%r9577, %r9576, %r8713;
	add.s32 	%r9578, %r9577, %r9571;
	add.s32 	%r8723, %r9578, -899497514;
	shf.l.wrap.b32 	%r8725, %r8715, %r8715, 30;
	shf.l.wrap.b32 	%r9579, %r8723, %r8723, 5;
	// begin inline asm
	lop3.b32 %r8718, %r8719, %r8725, %r8721, 150;
	// end inline asm
	xor.b32  	%r9580, %r9471, %r9455;
	xor.b32  	%r9581, %r9580, %r9519;
	xor.b32  	%r9582, %r9581, %r9559;
	shf.l.wrap.b32 	%r9583, %r9582, %r9582, 1;
	add.s32 	%r9584, %r8718, %r9583;
	add.s32 	%r9585, %r9584, %r8717;
	add.s32 	%r9586, %r9585, %r9579;
	add.s32 	%r8727, %r9586, -899497514;
	shf.l.wrap.b32 	%r8729, %r8719, %r8719, 30;
	shf.l.wrap.b32 	%r9587, %r8727, %r8727, 5;
	// begin inline asm
	lop3.b32 %r8722, %r8723, %r8729, %r8725, 150;
	// end inline asm
	xor.b32  	%r9588, %r9479, %r9463;
	xor.b32  	%r9589, %r9588, %r9527;
	xor.b32  	%r9590, %r9589, %r9567;
	shf.l.wrap.b32 	%r9591, %r9590, %r9590, 1;
	add.s32 	%r9592, %r8722, %r9591;
	add.s32 	%r9593, %r9592, %r8721;
	add.s32 	%r9594, %r9593, %r9587;
	add.s32 	%r8731, %r9594, -899497514;
	shf.l.wrap.b32 	%r8733, %r8723, %r8723, 30;
	shf.l.wrap.b32 	%r9595, %r8731, %r8731, 5;
	// begin inline asm
	lop3.b32 %r8726, %r8727, %r8733, %r8729, 150;
	// end inline asm
	xor.b32  	%r9596, %r9487, %r9471;
	xor.b32  	%r9597, %r9596, %r9535;
	xor.b32  	%r9598, %r9597, %r9575;
	shf.l.wrap.b32 	%r9599, %r9598, %r9598, 1;
	add.s32 	%r9600, %r8726, %r9599;
	add.s32 	%r9601, %r9600, %r8725;
	add.s32 	%r9602, %r9601, %r9595;
	add.s32 	%r8735, %r9602, -899497514;
	shf.l.wrap.b32 	%r8737, %r8727, %r8727, 30;
	shf.l.wrap.b32 	%r9603, %r8735, %r8735, 5;
	// begin inline asm
	lop3.b32 %r8730, %r8731, %r8737, %r8733, 150;
	// end inline asm
	xor.b32  	%r9604, %r9495, %r9479;
	xor.b32  	%r9605, %r9604, %r9543;
	xor.b32  	%r9606, %r9605, %r9583;
	shf.l.wrap.b32 	%r9607, %r9606, %r9606, 1;
	add.s32 	%r9608, %r8730, %r9607;
	add.s32 	%r9609, %r9608, %r8729;
	add.s32 	%r9610, %r9609, %r9603;
	add.s32 	%r8739, %r9610, -899497514;
	shf.l.wrap.b32 	%r8741, %r8731, %r8731, 30;
	shf.l.wrap.b32 	%r9611, %r8739, %r8739, 5;
	// begin inline asm
	lop3.b32 %r8734, %r8735, %r8741, %r8737, 150;
	// end inline asm
	xor.b32  	%r9612, %r9503, %r9487;
	xor.b32  	%r9613, %r9612, %r9551;
	xor.b32  	%r9614, %r9613, %r9591;
	shf.l.wrap.b32 	%r9615, %r9614, %r9614, 1;
	add.s32 	%r9616, %r8734, %r9615;
	add.s32 	%r9617, %r9616, %r8733;
	add.s32 	%r9618, %r9617, %r9611;
	add.s32 	%r8743, %r9618, -899497514;
	shf.l.wrap.b32 	%r8745, %r8735, %r8735, 30;
	shf.l.wrap.b32 	%r9619, %r8743, %r8743, 5;
	// begin inline asm
	lop3.b32 %r8738, %r8739, %r8745, %r8741, 150;
	// end inline asm
	xor.b32  	%r9620, %r9511, %r9495;
	xor.b32  	%r9621, %r9620, %r9559;
	xor.b32  	%r9622, %r9621, %r9599;
	shf.l.wrap.b32 	%r9623, %r9622, %r9622, 1;
	add.s32 	%r9624, %r8738, %r9623;
	add.s32 	%r9625, %r9624, %r8737;
	add.s32 	%r9626, %r9625, %r9619;
	add.s32 	%r8747, %r9626, -899497514;
	shf.l.wrap.b32 	%r8749, %r8739, %r8739, 30;
	shf.l.wrap.b32 	%r9627, %r8747, %r8747, 5;
	// begin inline asm
	lop3.b32 %r8742, %r8743, %r8749, %r8745, 150;
	// end inline asm
	xor.b32  	%r9628, %r9519, %r9503;
	xor.b32  	%r9629, %r9628, %r9567;
	xor.b32  	%r9630, %r9629, %r9607;
	shf.l.wrap.b32 	%r9631, %r9630, %r9630, 1;
	add.s32 	%r9632, %r8742, %r9631;
	add.s32 	%r9633, %r9632, %r8741;
	add.s32 	%r9634, %r9633, %r9627;
	add.s32 	%r8751, %r9634, -899497514;
	shf.l.wrap.b32 	%r8753, %r8743, %r8743, 30;
	shf.l.wrap.b32 	%r9635, %r8751, %r8751, 5;
	// begin inline asm
	lop3.b32 %r8746, %r8747, %r8753, %r8749, 150;
	// end inline asm
	xor.b32  	%r9636, %r9527, %r9511;
	xor.b32  	%r9637, %r9636, %r9575;
	xor.b32  	%r9638, %r9637, %r9615;
	shf.l.wrap.b32 	%r9639, %r9638, %r9638, 1;
	add.s32 	%r9640, %r8746, %r9639;
	add.s32 	%r9641, %r9640, %r8745;
	add.s32 	%r9642, %r9641, %r9635;
	add.s32 	%r8755, %r9642, -899497514;
	shf.l.wrap.b32 	%r8757, %r8747, %r8747, 30;
	shf.l.wrap.b32 	%r9643, %r8755, %r8755, 5;
	// begin inline asm
	lop3.b32 %r8750, %r8751, %r8757, %r8753, 150;
	// end inline asm
	xor.b32  	%r9644, %r9535, %r9519;
	xor.b32  	%r9645, %r9644, %r9583;
	xor.b32  	%r9646, %r9645, %r9623;
	shf.l.wrap.b32 	%r9647, %r9646, %r9646, 1;
	add.s32 	%r9648, %r8750, %r9647;
	add.s32 	%r9649, %r9648, %r8749;
	add.s32 	%r9650, %r9649, %r9643;
	add.s32 	%r8759, %r9650, -899497514;
	shf.l.wrap.b32 	%r8761, %r8751, %r8751, 30;
	shf.l.wrap.b32 	%r9651, %r8759, %r8759, 5;
	// begin inline asm
	lop3.b32 %r8754, %r8755, %r8761, %r8757, 150;
	// end inline asm
	xor.b32  	%r9652, %r9543, %r9527;
	xor.b32  	%r9653, %r9652, %r9591;
	xor.b32  	%r9654, %r9653, %r9631;
	shf.l.wrap.b32 	%r9655, %r9654, %r9654, 1;
	add.s32 	%r9656, %r8754, %r9655;
	add.s32 	%r9657, %r9656, %r8753;
	add.s32 	%r9658, %r9657, %r9651;
	add.s32 	%r8763, %r9658, -899497514;
	shf.l.wrap.b32 	%r8765, %r8755, %r8755, 30;
	shf.l.wrap.b32 	%r9659, %r8763, %r8763, 5;
	// begin inline asm
	lop3.b32 %r8758, %r8759, %r8765, %r8761, 150;
	// end inline asm
	xor.b32  	%r9660, %r9551, %r9535;
	xor.b32  	%r9661, %r9660, %r9599;
	xor.b32  	%r9662, %r9661, %r9639;
	shf.l.wrap.b32 	%r9663, %r9662, %r9662, 1;
	add.s32 	%r9664, %r8758, %r9663;
	add.s32 	%r9665, %r9664, %r8757;
	add.s32 	%r9666, %r9665, %r9659;
	add.s32 	%r8767, %r9666, -899497514;
	shf.l.wrap.b32 	%r8769, %r8759, %r8759, 30;
	shf.l.wrap.b32 	%r9667, %r8767, %r8767, 5;
	// begin inline asm
	lop3.b32 %r8762, %r8763, %r8769, %r8765, 150;
	// end inline asm
	xor.b32  	%r9668, %r9559, %r9543;
	xor.b32  	%r9669, %r9668, %r9607;
	xor.b32  	%r9670, %r9669, %r9647;
	shf.l.wrap.b32 	%r9671, %r9670, %r9670, 1;
	add.s32 	%r9672, %r8762, %r9671;
	add.s32 	%r9673, %r9672, %r8761;
	add.s32 	%r9674, %r9673, %r9667;
	add.s32 	%r8771, %r9674, -899497514;
	shf.l.wrap.b32 	%r8773, %r8763, %r8763, 30;
	shf.l.wrap.b32 	%r9675, %r8771, %r8771, 5;
	// begin inline asm
	lop3.b32 %r8766, %r8767, %r8773, %r8769, 150;
	// end inline asm
	xor.b32  	%r9676, %r9567, %r9551;
	xor.b32  	%r9677, %r9676, %r9615;
	xor.b32  	%r9678, %r9677, %r9655;
	shf.l.wrap.b32 	%r9679, %r9678, %r9678, 1;
	add.s32 	%r9680, %r8766, %r9679;
	add.s32 	%r9681, %r9680, %r8765;
	add.s32 	%r9682, %r9681, %r9675;
	add.s32 	%r8775, %r9682, -899497514;
	shf.l.wrap.b32 	%r8777, %r8767, %r8767, 30;
	shf.l.wrap.b32 	%r9683, %r8775, %r8775, 5;
	// begin inline asm
	lop3.b32 %r8770, %r8771, %r8777, %r8773, 150;
	// end inline asm
	xor.b32  	%r9684, %r9575, %r9559;
	xor.b32  	%r9685, %r9684, %r9623;
	xor.b32  	%r9686, %r9685, %r9663;
	shf.l.wrap.b32 	%r9687, %r9686, %r9686, 1;
	add.s32 	%r9688, %r8770, %r9687;
	add.s32 	%r9689, %r9688, %r8769;
	add.s32 	%r9690, %r9689, %r9683;
	add.s32 	%r8779, %r9690, -899497514;
	shf.l.wrap.b32 	%r8781, %r8771, %r8771, 30;
	shf.l.wrap.b32 	%r9691, %r8779, %r8779, 5;
	// begin inline asm
	lop3.b32 %r8774, %r8775, %r8781, %r8777, 150;
	// end inline asm
	xor.b32  	%r9692, %r9583, %r9567;
	xor.b32  	%r9693, %r9692, %r9631;
	xor.b32  	%r9694, %r9693, %r9671;
	shf.l.wrap.b32 	%r9695, %r9694, %r9694, 1;
	add.s32 	%r9696, %r8774, %r9695;
	add.s32 	%r9697, %r9696, %r8773;
	add.s32 	%r9698, %r9697, %r9691;
	add.s32 	%r8783, %r9698, -899497514;
	shf.l.wrap.b32 	%r8785, %r8775, %r8775, 30;
	shf.l.wrap.b32 	%r9699, %r8783, %r8783, 5;
	// begin inline asm
	lop3.b32 %r8778, %r8779, %r8785, %r8781, 150;
	// end inline asm
	xor.b32  	%r9700, %r9591, %r9575;
	xor.b32  	%r9701, %r9700, %r9639;
	xor.b32  	%r9702, %r9701, %r9679;
	shf.l.wrap.b32 	%r9703, %r9702, %r9702, 1;
	add.s32 	%r9704, %r8778, %r9703;
	add.s32 	%r9705, %r9704, %r8777;
	add.s32 	%r9706, %r9705, %r9699;
	add.s32 	%r9707, %r9706, -899497514;
	shf.l.wrap.b32 	%r8784, %r8779, %r8779, 30;
	shf.l.wrap.b32 	%r9708, %r9707, %r9707, 5;
	// begin inline asm
	lop3.b32 %r8782, %r8783, %r8784, %r8785, 150;
	// end inline asm
	xor.b32  	%r9709, %r9599, %r9583;
	xor.b32  	%r9710, %r9709, %r9647;
	xor.b32  	%r9711, %r9710, %r9687;
	shf.l.wrap.b32 	%r9712, %r9711, %r9711, 1;
	shf.l.wrap.b32 	%r9713, %r8783, %r8783, 30;
	add.s32 	%r9714, %r10293, %r8782;
	add.s32 	%r9715, %r9714, %r9712;
	add.s32 	%r9716, %r9715, %r8781;
	add.s32 	%r9717, %r9716, %r9708;
	add.s32 	%r9718, %r9717, -899497514;
	add.s32 	%r9719, %r9707, %r10294;
	add.s32 	%r9720, %r9713, %r10295;
	add.s32 	%r9721, %r8784, %r10296;
	add.s32 	%r9722, %r8785, %r10297;
	ld.global.u32 	%r8791, [%rd3+-40];
	shf.l.wrap.b32 	%r9723, %r8791, %r8791, 5;
	ld.global.u32 	%r8789, [%rd3+-28];
	ld.global.u32 	%r8788, [%rd3+-32];
	ld.global.u32 	%r8787, [%rd3+-36];
	// begin inline asm
	lop3.b32 %r8786, %r8787, %r8788, %r8789, 202;
	// end inline asm
	ld.global.u32 	%r9724, [%rd3+-24];
	add.s32 	%r9725, %r9723, %r9724;
	add.s32 	%r9726, %r9725, %r8786;
	add.s32 	%r9727, %r9726, %r9718;
	add.s32 	%r8795, %r9727, 1518500249;
	shf.l.wrap.b32 	%r8797, %r8787, %r8787, 30;
	shf.l.wrap.b32 	%r9728, %r8795, %r8795, 5;
	// begin inline asm
	lop3.b32 %r8790, %r8791, %r8797, %r8788, 202;
	// end inline asm
	add.s32 	%r9729, %r8789, %r8790;
	add.s32 	%r9730, %r9729, %r9719;
	add.s32 	%r9731, %r9730, %r9728;
	add.s32 	%r8799, %r9731, 1518500249;
	shf.l.wrap.b32 	%r8801, %r8791, %r8791, 30;
	shf.l.wrap.b32 	%r9732, %r8799, %r8799, 5;
	// begin inline asm
	lop3.b32 %r8794, %r8795, %r8801, %r8797, 202;
	// end inline asm
	add.s32 	%r9733, %r8788, %r8794;
	add.s32 	%r9734, %r9733, %r9720;
	add.s32 	%r9735, %r9734, %r9732;
	add.s32 	%r8803, %r9735, 1518500249;
	shf.l.wrap.b32 	%r8805, %r8795, %r8795, 30;
	shf.l.wrap.b32 	%r9736, %r8803, %r8803, 5;
	// begin inline asm
	lop3.b32 %r8798, %r8799, %r8805, %r8801, 202;
	// end inline asm
	add.s32 	%r9737, %r8797, %r8798;
	add.s32 	%r9738, %r9737, %r9721;
	add.s32 	%r9739, %r9738, %r9736;
	add.s32 	%r8807, %r9739, 1518500249;
	shf.l.wrap.b32 	%r8809, %r8799, %r8799, 30;
	shf.l.wrap.b32 	%r9740, %r8807, %r8807, 5;
	// begin inline asm
	lop3.b32 %r8802, %r8803, %r8809, %r8805, 202;
	// end inline asm
	add.s32 	%r9741, %r8801, %r8802;
	add.s32 	%r9742, %r9741, %r9722;
	add.s32 	%r9743, %r9742, %r9740;
	add.s32 	%r8811, %r9743, 1518500249;
	shf.l.wrap.b32 	%r8813, %r8803, %r8803, 30;
	shf.l.wrap.b32 	%r9744, %r8811, %r8811, 5;
	// begin inline asm
	lop3.b32 %r8806, %r8807, %r8813, %r8809, 202;
	// end inline asm
	add.s32 	%r9745, %r8805, %r8806;
	add.s32 	%r9746, %r9745, 1518500249;
	xor.b32  	%r9747, %r9746, -2147483648;
	add.s32 	%r8815, %r9747, %r9744;
	shf.l.wrap.b32 	%r8817, %r8807, %r8807, 30;
	shf.l.wrap.b32 	%r9748, %r8815, %r8815, 5;
	// begin inline asm
	lop3.b32 %r8810, %r8811, %r8817, %r8813, 202;
	// end inline asm
	add.s32 	%r9749, %r8809, %r8810;
	add.s32 	%r9750, %r9749, %r9748;
	add.s32 	%r8819, %r9750, 1518500249;
	shf.l.wrap.b32 	%r8821, %r8811, %r8811, 30;
	shf.l.wrap.b32 	%r9751, %r8819, %r8819, 5;
	// begin inline asm
	lop3.b32 %r8814, %r8815, %r8821, %r8817, 202;
	// end inline asm
	add.s32 	%r9752, %r8814, %r8813;
	add.s32 	%r9753, %r9752, %r9751;
	add.s32 	%r8823, %r9753, 1518500249;
	shf.l.wrap.b32 	%r8825, %r8815, %r8815, 30;
	shf.l.wrap.b32 	%r9754, %r8823, %r8823, 5;
	// begin inline asm
	lop3.b32 %r8818, %r8819, %r8825, %r8821, 202;
	// end inline asm
	add.s32 	%r9755, %r8818, %r8817;
	add.s32 	%r9756, %r9755, %r9754;
	add.s32 	%r8827, %r9756, 1518500249;
	shf.l.wrap.b32 	%r8829, %r8819, %r8819, 30;
	shf.l.wrap.b32 	%r9757, %r8827, %r8827, 5;
	// begin inline asm
	lop3.b32 %r8822, %r8823, %r8829, %r8825, 202;
	// end inline asm
	add.s32 	%r9758, %r8822, %r8821;
	add.s32 	%r9759, %r9758, %r9757;
	add.s32 	%r8831, %r9759, 1518500249;
	shf.l.wrap.b32 	%r8833, %r8823, %r8823, 30;
	shf.l.wrap.b32 	%r9760, %r8831, %r8831, 5;
	// begin inline asm
	lop3.b32 %r8826, %r8827, %r8833, %r8829, 202;
	// end inline asm
	add.s32 	%r9761, %r8826, %r8825;
	add.s32 	%r9762, %r9761, %r9760;
	add.s32 	%r8835, %r9762, 1518500249;
	shf.l.wrap.b32 	%r8837, %r8827, %r8827, 30;
	shf.l.wrap.b32 	%r9763, %r8835, %r8835, 5;
	// begin inline asm
	lop3.b32 %r8830, %r8831, %r8837, %r8833, 202;
	// end inline asm
	add.s32 	%r9764, %r8830, %r8829;
	add.s32 	%r9765, %r9764, %r9763;
	add.s32 	%r8839, %r9765, 1518500249;
	shf.l.wrap.b32 	%r8841, %r8831, %r8831, 30;
	shf.l.wrap.b32 	%r9766, %r8839, %r8839, 5;
	// begin inline asm
	lop3.b32 %r8834, %r8835, %r8841, %r8837, 202;
	// end inline asm
	add.s32 	%r9767, %r8834, %r8833;
	add.s32 	%r9768, %r9767, %r9766;
	add.s32 	%r8843, %r9768, 1518500249;
	shf.l.wrap.b32 	%r8845, %r8835, %r8835, 30;
	shf.l.wrap.b32 	%r9769, %r8843, %r8843, 5;
	// begin inline asm
	lop3.b32 %r8838, %r8839, %r8845, %r8841, 202;
	// end inline asm
	add.s32 	%r9770, %r8838, %r8837;
	add.s32 	%r9771, %r9770, %r9769;
	add.s32 	%r8847, %r9771, 1518500249;
	shf.l.wrap.b32 	%r8849, %r8839, %r8839, 30;
	shf.l.wrap.b32 	%r9772, %r8847, %r8847, 5;
	// begin inline asm
	lop3.b32 %r8842, %r8843, %r8849, %r8845, 202;
	// end inline asm
	add.s32 	%r9773, %r8842, %r8841;
	add.s32 	%r9774, %r9773, %r9772;
	add.s32 	%r8851, %r9774, 1518500249;
	shf.l.wrap.b32 	%r8853, %r8843, %r8843, 30;
	shf.l.wrap.b32 	%r9775, %r8851, %r8851, 5;
	// begin inline asm
	lop3.b32 %r8846, %r8847, %r8853, %r8849, 202;
	// end inline asm
	add.s32 	%r9776, %r8846, %r8845;
	add.s32 	%r9777, %r9776, %r9775;
	add.s32 	%r8855, %r9777, 1518500921;
	shf.l.wrap.b32 	%r8857, %r8847, %r8847, 30;
	shf.l.wrap.b32 	%r9778, %r8855, %r8855, 5;
	// begin inline asm
	lop3.b32 %r8850, %r8851, %r8857, %r8853, 202;
	// end inline asm
	xor.b32  	%r9779, %r9718, %r9720;
	shf.l.wrap.b32 	%r9780, %r9779, %r9779, 1;
	add.s32 	%r9781, %r8850, %r9780;
	add.s32 	%r9782, %r9781, %r8849;
	add.s32 	%r9783, %r9782, %r9778;
	add.s32 	%r8859, %r9783, 1518500249;
	shf.l.wrap.b32 	%r8861, %r8851, %r8851, 30;
	shf.l.wrap.b32 	%r9784, %r8859, %r8859, 5;
	// begin inline asm
	lop3.b32 %r8854, %r8855, %r8861, %r8857, 202;
	// end inline asm
	xor.b32  	%r9785, %r9719, %r9721;
	shf.l.wrap.b32 	%r9786, %r9785, %r9785, 1;
	add.s32 	%r9787, %r8854, %r9786;
	add.s32 	%r9788, %r9787, %r8853;
	add.s32 	%r9789, %r9788, %r9784;
	add.s32 	%r8863, %r9789, 1518500249;
	shf.l.wrap.b32 	%r8865, %r8855, %r8855, 30;
	shf.l.wrap.b32 	%r9790, %r8863, %r8863, 5;
	// begin inline asm
	lop3.b32 %r8858, %r8859, %r8865, %r8861, 202;
	// end inline asm
	xor.b32  	%r9791, %r9722, %r9720;
	xor.b32  	%r9792, %r9791, 672;
	shf.l.wrap.b32 	%r9793, %r9792, %r9792, 1;
	add.s32 	%r9794, %r8858, %r9793;
	add.s32 	%r9795, %r9794, %r8857;
	add.s32 	%r9796, %r9795, %r9790;
	add.s32 	%r8867, %r9796, 1518500249;
	shf.l.wrap.b32 	%r8869, %r8859, %r8859, 30;
	shf.l.wrap.b32 	%r9797, %r8867, %r8867, 5;
	// begin inline asm
	lop3.b32 %r8862, %r8863, %r8869, %r8865, 202;
	// end inline asm
	xor.b32  	%r9798, %r9780, %r9721;
	xor.b32  	%r9799, %r9798, -2147483648;
	shf.l.wrap.b32 	%r9800, %r9799, %r9799, 1;
	add.s32 	%r9801, %r8862, %r9800;
	add.s32 	%r9802, %r9801, %r8861;
	add.s32 	%r9803, %r9802, %r9797;
	add.s32 	%r8871, %r9803, 1518500249;
	shf.l.wrap.b32 	%r8873, %r8863, %r8863, 30;
	shf.l.wrap.b32 	%r9804, %r8871, %r8871, 5;
	// begin inline asm
	lop3.b32 %r8866, %r8867, %r8873, %r8869, 150;
	// end inline asm
	xor.b32  	%r9805, %r9722, %r9786;
	shf.l.wrap.b32 	%r9806, %r9805, %r9805, 1;
	add.s32 	%r9807, %r8866, %r9806;
	add.s32 	%r9808, %r9807, %r8865;
	add.s32 	%r9809, %r9808, %r9804;
	add.s32 	%r8875, %r9809, 1859775393;
	shf.l.wrap.b32 	%r8877, %r8867, %r8867, 30;
	shf.l.wrap.b32 	%r9810, %r8875, %r8875, 5;
	// begin inline asm
	lop3.b32 %r8870, %r8871, %r8877, %r8873, 150;
	// end inline asm
	xor.b32  	%r9811, %r9793, -2147483648;
	shf.l.wrap.b32 	%r9812, %r9811, %r9811, 1;
	add.s32 	%r9813, %r8870, %r9812;
	add.s32 	%r9814, %r9813, %r8869;
	add.s32 	%r9815, %r9814, %r9810;
	add.s32 	%r8879, %r9815, 1859775393;
	shf.l.wrap.b32 	%r8881, %r8871, %r8871, 30;
	shf.l.wrap.b32 	%r9816, %r8879, %r8879, 5;
	// begin inline asm
	lop3.b32 %r8874, %r8875, %r8881, %r8877, 150;
	// end inline asm
	shf.l.wrap.b32 	%r9817, %r9800, %r9800, 1;
	add.s32 	%r9818, %r8874, %r9817;
	add.s32 	%r9819, %r9818, %r8873;
	add.s32 	%r9820, %r9819, %r9816;
	add.s32 	%r8883, %r9820, 1859775393;
	shf.l.wrap.b32 	%r8885, %r8875, %r8875, 30;
	shf.l.wrap.b32 	%r9821, %r8883, %r8883, 5;
	// begin inline asm
	lop3.b32 %r8878, %r8879, %r8885, %r8881, 150;
	// end inline asm
	xor.b32  	%r9822, %r9806, 672;
	shf.l.wrap.b32 	%r9823, %r9822, %r9822, 1;
	add.s32 	%r9824, %r8878, %r9823;
	add.s32 	%r9825, %r9824, %r8877;
	add.s32 	%r9826, %r9825, %r9821;
	add.s32 	%r8887, %r9826, 1859775393;
	shf.l.wrap.b32 	%r8889, %r8879, %r8879, 30;
	shf.l.wrap.b32 	%r9827, %r8887, %r8887, 5;
	// begin inline asm
	lop3.b32 %r8882, %r8883, %r8889, %r8885, 150;
	// end inline asm
	xor.b32  	%r9828, %r9780, %r9812;
	shf.l.wrap.b32 	%r9829, %r9828, %r9828, 1;
	add.s32 	%r9830, %r8882, %r9829;
	add.s32 	%r9831, %r9830, %r8881;
	add.s32 	%r9832, %r9831, %r9827;
	add.s32 	%r8891, %r9832, 1859775393;
	shf.l.wrap.b32 	%r8893, %r8883, %r8883, 30;
	shf.l.wrap.b32 	%r9833, %r8891, %r8891, 5;
	// begin inline asm
	lop3.b32 %r8886, %r8887, %r8893, %r8889, 150;
	// end inline asm
	xor.b32  	%r9834, %r9786, %r9817;
	shf.l.wrap.b32 	%r9835, %r9834, %r9834, 1;
	add.s32 	%r9836, %r8886, %r9835;
	add.s32 	%r9837, %r9836, %r8885;
	add.s32 	%r9838, %r9837, %r9833;
	add.s32 	%r8895, %r9838, 1859775393;
	shf.l.wrap.b32 	%r8897, %r8887, %r8887, 30;
	shf.l.wrap.b32 	%r9839, %r8895, %r8895, 5;
	// begin inline asm
	lop3.b32 %r8890, %r8891, %r8897, %r8893, 150;
	// end inline asm
	xor.b32  	%r9840, %r9793, %r9823;
	shf.l.wrap.b32 	%r9841, %r9840, %r9840, 1;
	add.s32 	%r9842, %r8890, %r9841;
	add.s32 	%r9843, %r9842, %r8889;
	add.s32 	%r9844, %r9843, %r9839;
	add.s32 	%r8899, %r9844, 1859775393;
	shf.l.wrap.b32 	%r8901, %r8891, %r8891, 30;
	shf.l.wrap.b32 	%r9845, %r8899, %r8899, 5;
	// begin inline asm
	lop3.b32 %r8894, %r8895, %r8901, %r8897, 150;
	// end inline asm
	xor.b32  	%r9846, %r9800, %r9829;
	shf.l.wrap.b32 	%r9847, %r9846, %r9846, 1;
	add.s32 	%r9848, %r8894, %r9847;
	add.s32 	%r9849, %r9848, %r8893;
	add.s32 	%r9850, %r9849, %r9845;
	add.s32 	%r8903, %r9850, 1859775393;
	shf.l.wrap.b32 	%r8905, %r8895, %r8895, 30;
	shf.l.wrap.b32 	%r9851, %r8903, %r8903, 5;
	// begin inline asm
	lop3.b32 %r8898, %r8899, %r8905, %r8901, 150;
	// end inline asm
	xor.b32  	%r9852, %r9806, %r9835;
	shf.l.wrap.b32 	%r9853, %r9852, %r9852, 1;
	add.s32 	%r9854, %r8898, %r9853;
	add.s32 	%r9855, %r9854, %r8897;
	add.s32 	%r9856, %r9855, %r9851;
	add.s32 	%r8907, %r9856, 1859775393;
	shf.l.wrap.b32 	%r8909, %r8899, %r8899, 30;
	shf.l.wrap.b32 	%r9857, %r8907, %r8907, 5;
	// begin inline asm
	lop3.b32 %r8902, %r8903, %r8909, %r8905, 150;
	// end inline asm
	xor.b32  	%r9858, %r9812, %r9841;
	xor.b32  	%r9859, %r9858, 672;
	shf.l.wrap.b32 	%r9860, %r9859, %r9859, 1;
	add.s32 	%r9861, %r8902, %r9860;
	add.s32 	%r9862, %r9861, %r8901;
	add.s32 	%r9863, %r9862, %r9857;
	add.s32 	%r8911, %r9863, 1859775393;
	shf.l.wrap.b32 	%r8913, %r8903, %r8903, 30;
	shf.l.wrap.b32 	%r9864, %r8911, %r8911, 5;
	// begin inline asm
	lop3.b32 %r8906, %r8907, %r8913, %r8909, 150;
	// end inline asm
	xor.b32  	%r9865, %r9817, %r9847;
	xor.b32  	%r9866, %r9865, %r9780;
	shf.l.wrap.b32 	%r9867, %r9866, %r9866, 1;
	add.s32 	%r9868, %r8906, %r9867;
	add.s32 	%r9869, %r9868, %r8905;
	add.s32 	%r9870, %r9869, %r9864;
	add.s32 	%r8915, %r9870, 1859775393;
	shf.l.wrap.b32 	%r8917, %r8907, %r8907, 30;
	shf.l.wrap.b32 	%r9871, %r8915, %r8915, 5;
	// begin inline asm
	lop3.b32 %r8910, %r8911, %r8917, %r8913, 150;
	// end inline asm
	xor.b32  	%r9872, %r9823, %r9853;
	xor.b32  	%r9873, %r9872, %r9786;
	xor.b32  	%r9874, %r9873, 672;
	shf.l.wrap.b32 	%r9875, %r9874, %r9874, 1;
	add.s32 	%r9876, %r8910, %r9875;
	add.s32 	%r9877, %r9876, %r8909;
	add.s32 	%r9878, %r9877, %r9871;
	add.s32 	%r8919, %r9878, 1859775393;
	shf.l.wrap.b32 	%r8921, %r8911, %r8911, 30;
	shf.l.wrap.b32 	%r9879, %r8919, %r8919, 5;
	// begin inline asm
	lop3.b32 %r8914, %r8915, %r8921, %r8917, 150;
	// end inline asm
	xor.b32  	%r9880, %r9829, %r9860;
	xor.b32  	%r9881, %r9880, %r9793;
	xor.b32  	%r9882, %r9881, %r9780;
	shf.l.wrap.b32 	%r9883, %r9882, %r9882, 1;
	add.s32 	%r9884, %r8914, %r9883;
	add.s32 	%r9885, %r9884, %r8913;
	add.s32 	%r9886, %r9885, %r9879;
	add.s32 	%r8923, %r9886, 1859775393;
	shf.l.wrap.b32 	%r8925, %r8915, %r8915, 30;
	shf.l.wrap.b32 	%r9887, %r8923, %r8923, 5;
	// begin inline asm
	lop3.b32 %r8918, %r8919, %r8925, %r8921, 150;
	// end inline asm
	xor.b32  	%r9888, %r9835, %r9867;
	xor.b32  	%r9889, %r9888, %r9800;
	xor.b32  	%r9890, %r9889, %r9786;
	shf.l.wrap.b32 	%r9891, %r9890, %r9890, 1;
	add.s32 	%r9892, %r8918, %r9891;
	add.s32 	%r9893, %r9892, %r8917;
	add.s32 	%r9894, %r9893, %r9887;
	add.s32 	%r8927, %r9894, 1859775393;
	shf.l.wrap.b32 	%r8929, %r8919, %r8919, 30;
	shf.l.wrap.b32 	%r9895, %r8927, %r8927, 5;
	// begin inline asm
	lop3.b32 %r8922, %r8923, %r8929, %r8925, 150;
	// end inline asm
	xor.b32  	%r9896, %r9841, %r9875;
	xor.b32  	%r9897, %r9896, %r9806;
	xor.b32  	%r9898, %r9897, %r9793;
	shf.l.wrap.b32 	%r9899, %r9898, %r9898, 1;
	add.s32 	%r9900, %r8922, %r9899;
	add.s32 	%r9901, %r9900, %r8921;
	add.s32 	%r9902, %r9901, %r9895;
	add.s32 	%r8931, %r9902, 1859775393;
	shf.l.wrap.b32 	%r8933, %r8923, %r8923, 30;
	shf.l.wrap.b32 	%r9903, %r8931, %r8931, 5;
	// begin inline asm
	lop3.b32 %r8926, %r8927, %r8933, %r8929, 150;
	// end inline asm
	xor.b32  	%r9904, %r9847, %r9883;
	xor.b32  	%r9905, %r9904, %r9812;
	xor.b32  	%r9906, %r9905, %r9800;
	shf.l.wrap.b32 	%r9907, %r9906, %r9906, 1;
	add.s32 	%r9908, %r8926, %r9907;
	add.s32 	%r9909, %r9908, %r8925;
	add.s32 	%r9910, %r9909, %r9903;
	add.s32 	%r8935, %r9910, 1859775393;
	shf.l.wrap.b32 	%r8937, %r8927, %r8927, 30;
	shf.l.wrap.b32 	%r9911, %r8935, %r8935, 5;
	// begin inline asm
	lop3.b32 %r8930, %r8931, %r8937, %r8933, 150;
	// end inline asm
	xor.b32  	%r9912, %r9853, %r9891;
	xor.b32  	%r9913, %r9912, %r9817;
	xor.b32  	%r9914, %r9913, %r9806;
	shf.l.wrap.b32 	%r9915, %r9914, %r9914, 1;
	add.s32 	%r9916, %r8930, %r9915;
	add.s32 	%r9917, %r9916, %r8929;
	add.s32 	%r9918, %r9917, %r9911;
	add.s32 	%r8939, %r9918, 1859775393;
	shf.l.wrap.b32 	%r8941, %r8931, %r8931, 30;
	shf.l.wrap.b32 	%r9919, %r8939, %r8939, 5;
	// begin inline asm
	lop3.b32 %r8934, %r8935, %r8941, %r8937, 150;
	// end inline asm
	xor.b32  	%r9920, %r9860, %r9899;
	xor.b32  	%r9921, %r9920, %r9823;
	xor.b32  	%r9922, %r9921, %r9812;
	shf.l.wrap.b32 	%r9923, %r9922, %r9922, 1;
	add.s32 	%r9924, %r8934, %r9923;
	add.s32 	%r9925, %r9924, %r8933;
	add.s32 	%r9926, %r9925, %r9919;
	add.s32 	%r8943, %r9926, 1859775393;
	shf.l.wrap.b32 	%r8945, %r8935, %r8935, 30;
	shf.l.wrap.b32 	%r9927, %r8943, %r8943, 5;
	// begin inline asm
	lop3.b32 %r8938, %r8939, %r8945, %r8941, 150;
	// end inline asm
	xor.b32  	%r9928, %r9867, %r9907;
	xor.b32  	%r9929, %r9928, %r9829;
	xor.b32  	%r9930, %r9929, %r9817;
	shf.l.wrap.b32 	%r9931, %r9930, %r9930, 1;
	add.s32 	%r9932, %r8938, %r9931;
	add.s32 	%r9933, %r9932, %r8937;
	add.s32 	%r9934, %r9933, %r9927;
	add.s32 	%r8947, %r9934, 1859775393;
	shf.l.wrap.b32 	%r8949, %r8939, %r8939, 30;
	shf.l.wrap.b32 	%r9935, %r8947, %r8947, 5;
	// begin inline asm
	lop3.b32 %r8942, %r8943, %r8949, %r8945, 150;
	// end inline asm
	xor.b32  	%r9936, %r9875, %r9915;
	xor.b32  	%r9937, %r9936, %r9835;
	xor.b32  	%r9938, %r9937, %r9823;
	shf.l.wrap.b32 	%r9939, %r9938, %r9938, 1;
	add.s32 	%r9940, %r8942, %r9939;
	add.s32 	%r9941, %r9940, %r8941;
	add.s32 	%r9942, %r9941, %r9935;
	add.s32 	%r8951, %r9942, 1859775393;
	shf.l.wrap.b32 	%r8953, %r8943, %r8943, 30;
	shf.l.wrap.b32 	%r9943, %r8951, %r8951, 5;
	// begin inline asm
	lop3.b32 %r8946, %r8947, %r8953, %r8949, 232;
	// end inline asm
	xor.b32  	%r9944, %r9883, %r9923;
	xor.b32  	%r9945, %r9944, %r9841;
	xor.b32  	%r9946, %r9945, %r9829;
	shf.l.wrap.b32 	%r9947, %r9946, %r9946, 1;
	add.s32 	%r9948, %r8946, %r9947;
	add.s32 	%r9949, %r9948, %r8945;
	add.s32 	%r9950, %r9949, %r9943;
	add.s32 	%r8955, %r9950, -1894007588;
	shf.l.wrap.b32 	%r8957, %r8947, %r8947, 30;
	shf.l.wrap.b32 	%r9951, %r8955, %r8955, 5;
	// begin inline asm
	lop3.b32 %r8950, %r8951, %r8957, %r8953, 232;
	// end inline asm
	xor.b32  	%r9952, %r9891, %r9931;
	xor.b32  	%r9953, %r9952, %r9847;
	xor.b32  	%r9954, %r9953, %r9835;
	shf.l.wrap.b32 	%r9955, %r9954, %r9954, 1;
	add.s32 	%r9956, %r8950, %r9955;
	add.s32 	%r9957, %r9956, %r8949;
	add.s32 	%r9958, %r9957, %r9951;
	add.s32 	%r8959, %r9958, -1894007588;
	shf.l.wrap.b32 	%r8961, %r8951, %r8951, 30;
	shf.l.wrap.b32 	%r9959, %r8959, %r8959, 5;
	// begin inline asm
	lop3.b32 %r8954, %r8955, %r8961, %r8957, 232;
	// end inline asm
	xor.b32  	%r9960, %r9899, %r9939;
	xor.b32  	%r9961, %r9960, %r9853;
	xor.b32  	%r9962, %r9961, %r9841;
	shf.l.wrap.b32 	%r9963, %r9962, %r9962, 1;
	add.s32 	%r9964, %r8954, %r9963;
	add.s32 	%r9965, %r9964, %r8953;
	add.s32 	%r9966, %r9965, %r9959;
	add.s32 	%r8963, %r9966, -1894007588;
	shf.l.wrap.b32 	%r8965, %r8955, %r8955, 30;
	shf.l.wrap.b32 	%r9967, %r8963, %r8963, 5;
	// begin inline asm
	lop3.b32 %r8958, %r8959, %r8965, %r8961, 232;
	// end inline asm
	xor.b32  	%r9968, %r9907, %r9947;
	xor.b32  	%r9969, %r9968, %r9860;
	xor.b32  	%r9970, %r9969, %r9847;
	shf.l.wrap.b32 	%r9971, %r9970, %r9970, 1;
	add.s32 	%r9972, %r8958, %r9971;
	add.s32 	%r9973, %r9972, %r8957;
	add.s32 	%r9974, %r9973, %r9967;
	add.s32 	%r8967, %r9974, -1894007588;
	shf.l.wrap.b32 	%r8969, %r8959, %r8959, 30;
	shf.l.wrap.b32 	%r9975, %r8967, %r8967, 5;
	// begin inline asm
	lop3.b32 %r8962, %r8963, %r8969, %r8965, 232;
	// end inline asm
	xor.b32  	%r9976, %r9915, %r9955;
	xor.b32  	%r9977, %r9976, %r9867;
	xor.b32  	%r9978, %r9977, %r9853;
	shf.l.wrap.b32 	%r9979, %r9978, %r9978, 1;
	add.s32 	%r9980, %r8962, %r9979;
	add.s32 	%r9981, %r9980, %r8961;
	add.s32 	%r9982, %r9981, %r9975;
	add.s32 	%r8971, %r9982, -1894007588;
	shf.l.wrap.b32 	%r8973, %r8963, %r8963, 30;
	shf.l.wrap.b32 	%r9983, %r8971, %r8971, 5;
	// begin inline asm
	lop3.b32 %r8966, %r8967, %r8973, %r8969, 232;
	// end inline asm
	xor.b32  	%r9984, %r9923, %r9963;
	xor.b32  	%r9985, %r9984, %r9875;
	xor.b32  	%r9986, %r9985, %r9860;
	shf.l.wrap.b32 	%r9987, %r9986, %r9986, 1;
	add.s32 	%r9988, %r8966, %r9987;
	add.s32 	%r9989, %r9988, %r8965;
	add.s32 	%r9990, %r9989, %r9983;
	add.s32 	%r8975, %r9990, -1894007588;
	shf.l.wrap.b32 	%r8977, %r8967, %r8967, 30;
	shf.l.wrap.b32 	%r9991, %r8975, %r8975, 5;
	// begin inline asm
	lop3.b32 %r8970, %r8971, %r8977, %r8973, 232;
	// end inline asm
	xor.b32  	%r9992, %r9931, %r9971;
	xor.b32  	%r9993, %r9992, %r9883;
	xor.b32  	%r9994, %r9993, %r9867;
	shf.l.wrap.b32 	%r9995, %r9994, %r9994, 1;
	add.s32 	%r9996, %r8970, %r9995;
	add.s32 	%r9997, %r9996, %r8969;
	add.s32 	%r9998, %r9997, %r9991;
	add.s32 	%r8979, %r9998, -1894007588;
	shf.l.wrap.b32 	%r8981, %r8971, %r8971, 30;
	shf.l.wrap.b32 	%r9999, %r8979, %r8979, 5;
	// begin inline asm
	lop3.b32 %r8974, %r8975, %r8981, %r8977, 232;
	// end inline asm
	xor.b32  	%r10000, %r9939, %r9979;
	xor.b32  	%r10001, %r10000, %r9891;
	xor.b32  	%r10002, %r10001, %r9875;
	shf.l.wrap.b32 	%r10003, %r10002, %r10002, 1;
	add.s32 	%r10004, %r8974, %r10003;
	add.s32 	%r10005, %r10004, %r8973;
	add.s32 	%r10006, %r10005, %r9999;
	add.s32 	%r8983, %r10006, -1894007588;
	shf.l.wrap.b32 	%r8985, %r8975, %r8975, 30;
	shf.l.wrap.b32 	%r10007, %r8983, %r8983, 5;
	// begin inline asm
	lop3.b32 %r8978, %r8979, %r8985, %r8981, 232;
	// end inline asm
	xor.b32  	%r10008, %r9947, %r9987;
	xor.b32  	%r10009, %r10008, %r9899;
	xor.b32  	%r10010, %r10009, %r9883;
	shf.l.wrap.b32 	%r10011, %r10010, %r10010, 1;
	add.s32 	%r10012, %r8978, %r10011;
	add.s32 	%r10013, %r10012, %r8977;
	add.s32 	%r10014, %r10013, %r10007;
	add.s32 	%r8987, %r10014, -1894007588;
	shf.l.wrap.b32 	%r8989, %r8979, %r8979, 30;
	shf.l.wrap.b32 	%r10015, %r8987, %r8987, 5;
	// begin inline asm
	lop3.b32 %r8982, %r8983, %r8989, %r8985, 232;
	// end inline asm
	xor.b32  	%r10016, %r9955, %r9995;
	xor.b32  	%r10017, %r10016, %r9907;
	xor.b32  	%r10018, %r10017, %r9891;
	shf.l.wrap.b32 	%r10019, %r10018, %r10018, 1;
	add.s32 	%r10020, %r8982, %r10019;
	add.s32 	%r10021, %r10020, %r8981;
	add.s32 	%r10022, %r10021, %r10015;
	add.s32 	%r8991, %r10022, -1894007588;
	shf.l.wrap.b32 	%r8993, %r8983, %r8983, 30;
	shf.l.wrap.b32 	%r10023, %r8991, %r8991, 5;
	// begin inline asm
	lop3.b32 %r8986, %r8987, %r8993, %r8989, 232;
	// end inline asm
	xor.b32  	%r10024, %r9963, %r10003;
	xor.b32  	%r10025, %r10024, %r9915;
	xor.b32  	%r10026, %r10025, %r9899;
	shf.l.wrap.b32 	%r10027, %r10026, %r10026, 1;
	add.s32 	%r10028, %r8986, %r10027;
	add.s32 	%r10029, %r10028, %r8985;
	add.s32 	%r10030, %r10029, %r10023;
	add.s32 	%r8995, %r10030, -1894007588;
	shf.l.wrap.b32 	%r8997, %r8987, %r8987, 30;
	shf.l.wrap.b32 	%r10031, %r8995, %r8995, 5;
	// begin inline asm
	lop3.b32 %r8990, %r8991, %r8997, %r8993, 232;
	// end inline asm
	xor.b32  	%r10032, %r9971, %r10011;
	xor.b32  	%r10033, %r10032, %r9923;
	xor.b32  	%r10034, %r10033, %r9907;
	shf.l.wrap.b32 	%r10035, %r10034, %r10034, 1;
	add.s32 	%r10036, %r8990, %r10035;
	add.s32 	%r10037, %r10036, %r8989;
	add.s32 	%r10038, %r10037, %r10031;
	add.s32 	%r8999, %r10038, -1894007588;
	shf.l.wrap.b32 	%r9001, %r8991, %r8991, 30;
	shf.l.wrap.b32 	%r10039, %r8999, %r8999, 5;
	// begin inline asm
	lop3.b32 %r8994, %r8995, %r9001, %r8997, 232;
	// end inline asm
	xor.b32  	%r10040, %r9979, %r10019;
	xor.b32  	%r10041, %r10040, %r9931;
	xor.b32  	%r10042, %r10041, %r9915;
	shf.l.wrap.b32 	%r10043, %r10042, %r10042, 1;
	add.s32 	%r10044, %r8994, %r10043;
	add.s32 	%r10045, %r10044, %r8993;
	add.s32 	%r10046, %r10045, %r10039;
	add.s32 	%r9003, %r10046, -1894007588;
	shf.l.wrap.b32 	%r9005, %r8995, %r8995, 30;
	shf.l.wrap.b32 	%r10047, %r9003, %r9003, 5;
	// begin inline asm
	lop3.b32 %r8998, %r8999, %r9005, %r9001, 232;
	// end inline asm
	xor.b32  	%r10048, %r9987, %r10027;
	xor.b32  	%r10049, %r10048, %r9939;
	xor.b32  	%r10050, %r10049, %r9923;
	shf.l.wrap.b32 	%r10051, %r10050, %r10050, 1;
	add.s32 	%r10052, %r8998, %r10051;
	add.s32 	%r10053, %r10052, %r8997;
	add.s32 	%r10054, %r10053, %r10047;
	add.s32 	%r9007, %r10054, -1894007588;
	shf.l.wrap.b32 	%r9009, %r8999, %r8999, 30;
	shf.l.wrap.b32 	%r10055, %r9007, %r9007, 5;
	// begin inline asm
	lop3.b32 %r9002, %r9003, %r9009, %r9005, 232;
	// end inline asm
	xor.b32  	%r10056, %r9995, %r10035;
	xor.b32  	%r10057, %r10056, %r9947;
	xor.b32  	%r10058, %r10057, %r9931;
	shf.l.wrap.b32 	%r10059, %r10058, %r10058, 1;
	add.s32 	%r10060, %r9002, %r10059;
	add.s32 	%r10061, %r10060, %r9001;
	add.s32 	%r10062, %r10061, %r10055;
	add.s32 	%r9011, %r10062, -1894007588;
	shf.l.wrap.b32 	%r9013, %r9003, %r9003, 30;
	shf.l.wrap.b32 	%r10063, %r9011, %r9011, 5;
	// begin inline asm
	lop3.b32 %r9006, %r9007, %r9013, %r9009, 232;
	// end inline asm
	xor.b32  	%r10064, %r10003, %r10043;
	xor.b32  	%r10065, %r10064, %r9955;
	xor.b32  	%r10066, %r10065, %r9939;
	shf.l.wrap.b32 	%r10067, %r10066, %r10066, 1;
	add.s32 	%r10068, %r9006, %r10067;
	add.s32 	%r10069, %r10068, %r9005;
	add.s32 	%r10070, %r10069, %r10063;
	add.s32 	%r9015, %r10070, -1894007588;
	shf.l.wrap.b32 	%r9017, %r9007, %r9007, 30;
	shf.l.wrap.b32 	%r10071, %r9015, %r9015, 5;
	// begin inline asm
	lop3.b32 %r9010, %r9011, %r9017, %r9013, 232;
	// end inline asm
	xor.b32  	%r10072, %r10011, %r10051;
	xor.b32  	%r10073, %r10072, %r9963;
	xor.b32  	%r10074, %r10073, %r9947;
	shf.l.wrap.b32 	%r10075, %r10074, %r10074, 1;
	add.s32 	%r10076, %r9010, %r10075;
	add.s32 	%r10077, %r10076, %r9009;
	add.s32 	%r10078, %r10077, %r10071;
	add.s32 	%r9019, %r10078, -1894007588;
	shf.l.wrap.b32 	%r9021, %r9011, %r9011, 30;
	shf.l.wrap.b32 	%r10079, %r9019, %r9019, 5;
	// begin inline asm
	lop3.b32 %r9014, %r9015, %r9021, %r9017, 232;
	// end inline asm
	xor.b32  	%r10080, %r10019, %r10059;
	xor.b32  	%r10081, %r10080, %r9971;
	xor.b32  	%r10082, %r10081, %r9955;
	shf.l.wrap.b32 	%r10083, %r10082, %r10082, 1;
	add.s32 	%r10084, %r9014, %r10083;
	add.s32 	%r10085, %r10084, %r9013;
	add.s32 	%r10086, %r10085, %r10079;
	add.s32 	%r9023, %r10086, -1894007588;
	shf.l.wrap.b32 	%r9025, %r9015, %r9015, 30;
	shf.l.wrap.b32 	%r10087, %r9023, %r9023, 5;
	// begin inline asm
	lop3.b32 %r9018, %r9019, %r9025, %r9021, 232;
	// end inline asm
	xor.b32  	%r10088, %r10027, %r10067;
	xor.b32  	%r10089, %r10088, %r9979;
	xor.b32  	%r10090, %r10089, %r9963;
	shf.l.wrap.b32 	%r10091, %r10090, %r10090, 1;
	add.s32 	%r10092, %r9018, %r10091;
	add.s32 	%r10093, %r10092, %r9017;
	add.s32 	%r10094, %r10093, %r10087;
	add.s32 	%r9027, %r10094, -1894007588;
	shf.l.wrap.b32 	%r9029, %r9019, %r9019, 30;
	shf.l.wrap.b32 	%r10095, %r9027, %r9027, 5;
	// begin inline asm
	lop3.b32 %r9022, %r9023, %r9029, %r9025, 232;
	// end inline asm
	xor.b32  	%r10096, %r10035, %r10075;
	xor.b32  	%r10097, %r10096, %r9987;
	xor.b32  	%r10098, %r10097, %r9971;
	shf.l.wrap.b32 	%r10099, %r10098, %r10098, 1;
	add.s32 	%r10100, %r9022, %r10099;
	add.s32 	%r10101, %r10100, %r9021;
	add.s32 	%r10102, %r10101, %r10095;
	add.s32 	%r9031, %r10102, -1894007588;
	shf.l.wrap.b32 	%r9033, %r9023, %r9023, 30;
	shf.l.wrap.b32 	%r10103, %r9031, %r9031, 5;
	// begin inline asm
	lop3.b32 %r9026, %r9027, %r9033, %r9029, 150;
	// end inline asm
	xor.b32  	%r10104, %r10043, %r10083;
	xor.b32  	%r10105, %r10104, %r9995;
	xor.b32  	%r10106, %r10105, %r9979;
	shf.l.wrap.b32 	%r10107, %r10106, %r10106, 1;
	add.s32 	%r10108, %r9026, %r10107;
	add.s32 	%r10109, %r10108, %r9025;
	add.s32 	%r10110, %r10109, %r10103;
	add.s32 	%r9035, %r10110, -899497514;
	shf.l.wrap.b32 	%r9037, %r9027, %r9027, 30;
	shf.l.wrap.b32 	%r10111, %r9035, %r9035, 5;
	// begin inline asm
	lop3.b32 %r9030, %r9031, %r9037, %r9033, 150;
	// end inline asm
	xor.b32  	%r10112, %r10051, %r10091;
	xor.b32  	%r10113, %r10112, %r10003;
	xor.b32  	%r10114, %r10113, %r9987;
	shf.l.wrap.b32 	%r10115, %r10114, %r10114, 1;
	add.s32 	%r10116, %r9030, %r10115;
	add.s32 	%r10117, %r10116, %r9029;
	add.s32 	%r10118, %r10117, %r10111;
	add.s32 	%r9039, %r10118, -899497514;
	shf.l.wrap.b32 	%r9041, %r9031, %r9031, 30;
	shf.l.wrap.b32 	%r10119, %r9039, %r9039, 5;
	// begin inline asm
	lop3.b32 %r9034, %r9035, %r9041, %r9037, 150;
	// end inline asm
	xor.b32  	%r10120, %r10059, %r10099;
	xor.b32  	%r10121, %r10120, %r10011;
	xor.b32  	%r10122, %r10121, %r9995;
	shf.l.wrap.b32 	%r10123, %r10122, %r10122, 1;
	add.s32 	%r10124, %r9034, %r10123;
	add.s32 	%r10125, %r10124, %r9033;
	add.s32 	%r10126, %r10125, %r10119;
	add.s32 	%r9043, %r10126, -899497514;
	shf.l.wrap.b32 	%r9045, %r9035, %r9035, 30;
	shf.l.wrap.b32 	%r10127, %r9043, %r9043, 5;
	// begin inline asm
	lop3.b32 %r9038, %r9039, %r9045, %r9041, 150;
	// end inline asm
	xor.b32  	%r10128, %r10067, %r10107;
	xor.b32  	%r10129, %r10128, %r10019;
	xor.b32  	%r10130, %r10129, %r10003;
	shf.l.wrap.b32 	%r10131, %r10130, %r10130, 1;
	add.s32 	%r10132, %r9038, %r10131;
	add.s32 	%r10133, %r10132, %r9037;
	add.s32 	%r10134, %r10133, %r10127;
	add.s32 	%r9047, %r10134, -899497514;
	shf.l.wrap.b32 	%r9049, %r9039, %r9039, 30;
	shf.l.wrap.b32 	%r10135, %r9047, %r9047, 5;
	// begin inline asm
	lop3.b32 %r9042, %r9043, %r9049, %r9045, 150;
	// end inline asm
	xor.b32  	%r10136, %r10075, %r10115;
	xor.b32  	%r10137, %r10136, %r10027;
	xor.b32  	%r10138, %r10137, %r10011;
	shf.l.wrap.b32 	%r10139, %r10138, %r10138, 1;
	add.s32 	%r10140, %r9042, %r10139;
	add.s32 	%r10141, %r10140, %r9041;
	add.s32 	%r10142, %r10141, %r10135;
	add.s32 	%r9051, %r10142, -899497514;
	shf.l.wrap.b32 	%r9053, %r9043, %r9043, 30;
	shf.l.wrap.b32 	%r10143, %r9051, %r9051, 5;
	// begin inline asm
	lop3.b32 %r9046, %r9047, %r9053, %r9049, 150;
	// end inline asm
	xor.b32  	%r10144, %r10083, %r10123;
	xor.b32  	%r10145, %r10144, %r10035;
	xor.b32  	%r10146, %r10145, %r10019;
	shf.l.wrap.b32 	%r10147, %r10146, %r10146, 1;
	add.s32 	%r10148, %r9046, %r10147;
	add.s32 	%r10149, %r10148, %r9045;
	add.s32 	%r10150, %r10149, %r10143;
	add.s32 	%r9055, %r10150, -899497514;
	shf.l.wrap.b32 	%r9057, %r9047, %r9047, 30;
	shf.l.wrap.b32 	%r10151, %r9055, %r9055, 5;
	// begin inline asm
	lop3.b32 %r9050, %r9051, %r9057, %r9053, 150;
	// end inline asm
	xor.b32  	%r10152, %r10091, %r10131;
	xor.b32  	%r10153, %r10152, %r10043;
	xor.b32  	%r10154, %r10153, %r10027;
	shf.l.wrap.b32 	%r10155, %r10154, %r10154, 1;
	add.s32 	%r10156, %r9050, %r9049;
	add.s32 	%r10157, %r10156, %r10155;
	add.s32 	%r10158, %r10157, %r10151;
	add.s32 	%r9059, %r10158, -899497514;
	shf.l.wrap.b32 	%r9061, %r9051, %r9051, 30;
	shf.l.wrap.b32 	%r10159, %r9059, %r9059, 5;
	// begin inline asm
	lop3.b32 %r9054, %r9055, %r9061, %r9057, 150;
	// end inline asm
	xor.b32  	%r10160, %r10099, %r10139;
	xor.b32  	%r10161, %r10160, %r10051;
	xor.b32  	%r10162, %r10161, %r10035;
	shf.l.wrap.b32 	%r10163, %r10162, %r10162, 1;
	add.s32 	%r10164, %r9054, %r9053;
	add.s32 	%r10165, %r10164, %r10163;
	add.s32 	%r10166, %r10165, %r10159;
	add.s32 	%r9063, %r10166, -899497514;
	shf.l.wrap.b32 	%r9065, %r9055, %r9055, 30;
	shf.l.wrap.b32 	%r10167, %r9063, %r9063, 5;
	// begin inline asm
	lop3.b32 %r9058, %r9059, %r9065, %r9061, 150;
	// end inline asm
	xor.b32  	%r10168, %r10107, %r10147;
	xor.b32  	%r10169, %r10168, %r10059;
	xor.b32  	%r10170, %r10169, %r10043;
	shf.l.wrap.b32 	%r10171, %r10170, %r10170, 1;
	add.s32 	%r10172, %r9058, %r9057;
	add.s32 	%r10173, %r10172, %r10171;
	add.s32 	%r10174, %r10173, %r10167;
	add.s32 	%r9067, %r10174, -899497514;
	shf.l.wrap.b32 	%r9069, %r9059, %r9059, 30;
	shf.l.wrap.b32 	%r10175, %r9067, %r9067, 5;
	// begin inline asm
	lop3.b32 %r9062, %r9063, %r9069, %r9065, 150;
	// end inline asm
	xor.b32  	%r10176, %r10115, %r10155;
	xor.b32  	%r10177, %r10176, %r10067;
	xor.b32  	%r10178, %r10177, %r10051;
	shf.l.wrap.b32 	%r10179, %r10178, %r10178, 1;
	add.s32 	%r10180, %r9062, %r9061;
	add.s32 	%r10181, %r10180, %r10179;
	add.s32 	%r10182, %r10181, %r10175;
	add.s32 	%r9071, %r10182, -899497514;
	shf.l.wrap.b32 	%r9073, %r9063, %r9063, 30;
	shf.l.wrap.b32 	%r10183, %r9071, %r9071, 5;
	// begin inline asm
	lop3.b32 %r9066, %r9067, %r9073, %r9069, 150;
	// end inline asm
	xor.b32  	%r10184, %r10123, %r10163;
	xor.b32  	%r10185, %r10184, %r10075;
	xor.b32  	%r10186, %r10185, %r10059;
	shf.l.wrap.b32 	%r10187, %r10186, %r10186, 1;
	add.s32 	%r10188, %r9066, %r9065;
	add.s32 	%r10189, %r10188, %r10187;
	add.s32 	%r10190, %r10189, %r10183;
	add.s32 	%r9075, %r10190, -899497514;
	shf.l.wrap.b32 	%r9077, %r9067, %r9067, 30;
	shf.l.wrap.b32 	%r10191, %r9075, %r9075, 5;
	// begin inline asm
	lop3.b32 %r9070, %r9071, %r9077, %r9073, 150;
	// end inline asm
	xor.b32  	%r10192, %r10131, %r10171;
	xor.b32  	%r10193, %r10192, %r10083;
	xor.b32  	%r10194, %r10193, %r10067;
	shf.l.wrap.b32 	%r10195, %r10194, %r10194, 1;
	add.s32 	%r10196, %r9070, %r9069;
	add.s32 	%r10197, %r10196, %r10195;
	add.s32 	%r10198, %r10197, %r10191;
	add.s32 	%r9079, %r10198, -899497514;
	shf.l.wrap.b32 	%r9081, %r9071, %r9071, 30;
	shf.l.wrap.b32 	%r10199, %r9079, %r9079, 5;
	// begin inline asm
	lop3.b32 %r9074, %r9075, %r9081, %r9077, 150;
	// end inline asm
	xor.b32  	%r10200, %r10139, %r10179;
	xor.b32  	%r10201, %r10200, %r10091;
	xor.b32  	%r10202, %r10201, %r10075;
	shf.l.wrap.b32 	%r10203, %r10202, %r10202, 1;
	add.s32 	%r10204, %r9073, %r9074;
	add.s32 	%r10205, %r10204, %r10203;
	add.s32 	%r10206, %r10205, %r10199;
	add.s32 	%r9083, %r10206, -899497514;
	shf.l.wrap.b32 	%r9085, %r9075, %r9075, 30;
	shf.l.wrap.b32 	%r10207, %r9083, %r9083, 5;
	// begin inline asm
	lop3.b32 %r9078, %r9079, %r9085, %r9081, 150;
	// end inline asm
	xor.b32  	%r10208, %r10147, %r10187;
	xor.b32  	%r10209, %r10208, %r10099;
	xor.b32  	%r10210, %r10209, %r10083;
	shf.l.wrap.b32 	%r10211, %r10210, %r10210, 1;
	add.s32 	%r10212, %r9077, %r9078;
	add.s32 	%r10213, %r10212, %r10211;
	add.s32 	%r10214, %r10213, %r10207;
	add.s32 	%r9087, %r10214, -899497514;
	shf.l.wrap.b32 	%r9089, %r9079, %r9079, 30;
	shf.l.wrap.b32 	%r10215, %r9087, %r9087, 5;
	// begin inline asm
	lop3.b32 %r9082, %r9083, %r9089, %r9085, 150;
	// end inline asm
	xor.b32  	%r10216, %r10155, %r10195;
	xor.b32  	%r10217, %r10216, %r10107;
	xor.b32  	%r10218, %r10217, %r10091;
	shf.l.wrap.b32 	%r10219, %r10218, %r10218, 1;
	add.s32 	%r10220, %r9081, %r9082;
	add.s32 	%r10221, %r10220, %r10219;
	add.s32 	%r10222, %r10221, %r10215;
	add.s32 	%r9091, %r10222, -899497514;
	shf.l.wrap.b32 	%r9093, %r9083, %r9083, 30;
	shf.l.wrap.b32 	%r10223, %r9091, %r9091, 5;
	// begin inline asm
	lop3.b32 %r9086, %r9087, %r9093, %r9089, 150;
	// end inline asm
	xor.b32  	%r10224, %r10163, %r10203;
	xor.b32  	%r10225, %r10224, %r10115;
	xor.b32  	%r10226, %r10225, %r10099;
	shf.l.wrap.b32 	%r10227, %r10226, %r10226, 1;
	add.s32 	%r10228, %r9085, %r9086;
	add.s32 	%r10229, %r10228, %r10227;
	add.s32 	%r10230, %r10229, %r10223;
	add.s32 	%r9095, %r10230, -899497514;
	shf.l.wrap.b32 	%r9097, %r9087, %r9087, 30;
	shf.l.wrap.b32 	%r10231, %r9095, %r9095, 5;
	// begin inline asm
	lop3.b32 %r9090, %r9091, %r9097, %r9093, 150;
	// end inline asm
	xor.b32  	%r10232, %r10171, %r10211;
	xor.b32  	%r10233, %r10232, %r10123;
	xor.b32  	%r10234, %r10233, %r10107;
	shf.l.wrap.b32 	%r10235, %r10234, %r10234, 1;
	add.s32 	%r10236, %r9089, %r9090;
	add.s32 	%r10237, %r10236, %r10235;
	add.s32 	%r10238, %r10237, %r10231;
	add.s32 	%r9099, %r10238, -899497514;
	shf.l.wrap.b32 	%r9101, %r9091, %r9091, 30;
	shf.l.wrap.b32 	%r10239, %r9099, %r9099, 5;
	// begin inline asm
	lop3.b32 %r9094, %r9095, %r9101, %r9097, 150;
	// end inline asm
	xor.b32  	%r10240, %r10179, %r10219;
	xor.b32  	%r10241, %r10240, %r10131;
	xor.b32  	%r10242, %r10241, %r10115;
	shf.l.wrap.b32 	%r10243, %r10242, %r10242, 1;
	add.s32 	%r10244, %r9093, %r9094;
	add.s32 	%r10245, %r10244, %r10243;
	add.s32 	%r10246, %r10245, %r10239;
	add.s32 	%r9103, %r10246, -899497514;
	shf.l.wrap.b32 	%r9105, %r9095, %r9095, 30;
	shf.l.wrap.b32 	%r10247, %r9103, %r9103, 5;
	// begin inline asm
	lop3.b32 %r9098, %r9099, %r9105, %r9101, 150;
	// end inline asm
	xor.b32  	%r10248, %r10187, %r10227;
	xor.b32  	%r10249, %r10248, %r10139;
	xor.b32  	%r10250, %r10249, %r10123;
	shf.l.wrap.b32 	%r10251, %r10250, %r10250, 1;
	add.s32 	%r10252, %r9097, %r9098;
	add.s32 	%r10253, %r10252, %r10251;
	add.s32 	%r10254, %r10253, %r10247;
	add.s32 	%r10255, %r10254, -899497514;
	shf.l.wrap.b32 	%r9104, %r9099, %r9099, 30;
	shf.l.wrap.b32 	%r10256, %r10255, %r10255, 5;
	// begin inline asm
	lop3.b32 %r9102, %r9103, %r9104, %r9105, 150;
	// end inline asm
	xor.b32  	%r10257, %r10195, %r10235;
	xor.b32  	%r10258, %r10257, %r10147;
	xor.b32  	%r10259, %r10258, %r10131;
	shf.l.wrap.b32 	%r10260, %r10259, %r10259, 1;
	shf.l.wrap.b32 	%r10261, %r9103, %r9103, 30;
	add.s32 	%r10262, %r8791, %r9101;
	add.s32 	%r10263, %r10262, %r9102;
	add.s32 	%r10264, %r10263, %r10260;
	add.s32 	%r10265, %r10264, %r10256;
	add.s32 	%r10266, %r10265, -899497514;
	add.s32 	%r10267, %r10255, %r8787;
	add.s32 	%r10268, %r10261, %r8788;
	add.s32 	%r10269, %r9104, %r8789;
	add.s32 	%r10270, %r9105, %r9724;
	st.global.u32 	[%rd3+-20], %r10266;
	st.global.u32 	[%rd3+-16], %r10267;
	st.global.u32 	[%rd3+-12], %r10268;
	st.global.u32 	[%rd3+-8], %r10269;
	st.global.u32 	[%rd3+-4], %r10270;
	st.global.u32 	[%rd3+-80], %r10266;
	st.global.u32 	[%rd3+-76], %r10267;
	st.global.u32 	[%rd3+-72], %r10268;
	st.global.u32 	[%rd3+-68], %r10269;
	st.global.u32 	[%rd3+-64], %r10270;

$L__BB3_51:
	ret;

}
	// .globl	solarwinds_final
.entry solarwinds_final(
	.param .u64 .ptr .global .align 4 solarwinds_final_param_0,
	.param .u64 .ptr .global .align 1 solarwinds_final_param_1
)
{
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [solarwinds_final_param_0];
	ld.param.u64 	%rd2, [solarwinds_final_param_1];
	mov.b32 	%r1, %envreg3;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	add.s32 	%r5, %r4, %r1;
	mad.lo.s32 	%r6, %r2, %r3, %r5;
	mul.wide.u32 	%rd3, %r6, 1040;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.u8 	%rs1, [%rd4];
	mul.wide.u32 	%rd5, %r6, 12;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.u8 	[%rd6], %rs1;
	ld.global.u8 	%rs2, [%rd4+1];
	st.global.u8 	[%rd6+1], %rs2;
	ld.global.u8 	%rs3, [%rd4+2];
	st.global.u8 	[%rd6+2], %rs3;
	ld.global.u8 	%rs4, [%rd4+3];
	st.global.u8 	[%rd6+3], %rs4;
	ld.global.u8 	%rs5, [%rd4+4];
	st.global.u8 	[%rd6+4], %rs5;
	ld.global.u8 	%rs6, [%rd4+5];
	st.global.u8 	[%rd6+5], %rs6;
	ld.global.u8 	%rs7, [%rd4+6];
	st.global.u8 	[%rd6+6], %rs7;
	ld.global.u8 	%rs8, [%rd4+7];
	st.global.u8 	[%rd6+7], %rs8;
	ld.global.u8 	%rs9, [%rd4+8];
	st.global.u8 	[%rd6+8], %rs9;
	ld.global.u8 	%rs10, [%rd4+9];
	st.global.u8 	[%rd6+9], %rs10;
	ld.global.u8 	%rs11, [%rd4+10];
	st.global.u8 	[%rd6+10], %rs11;
	ld.global.u8 	%rs12, [%rd4+11];
	st.global.u8 	[%rd6+11], %rs12;
	ret;

}
.metadata_section {

.metadata 0 {
	"cl_kernel_attributes",
	"pbkdf2_init",
	"vec_type_hint(uint)"
}

.metadata 1 {
	"cl_kernel_attributes",
	"pbkdf2_loop",
	"vec_type_hint(uint)"
}

.metadata 2 {
	"cl_kernel_attributes",
	"pbkdf2_final",
	"vec_type_hint(uint)"
}

} // end of .metadata_section

  